
8fb7aac098aaa4770a617c346dd9d91419ce0d8ee6f50a1acc9df51021add3ad.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	sbb    eax,0xe7f92b98
  411005:	stos   BYTE PTR es:[edi],al
  411006:	mov    eax,0x5e63b141
  41100b:	mov    al,0xb0
  41100d:	popf   
  41100e:	loopne 0x411085
  411010:	(bad)  
  411011:	pop    edx
  411012:	in     eax,dx
  411013:	adc    DWORD PTR [ebx],ebx
  411015:	xor    DWORD PTR [ecx],0xf
  411018:	or     DWORD PTR [ebx+0xf3ba0ea],eax
  41101e:	(bad)  
  41101f:	pop    edi
  411020:	not    DWORD PTR [edi+0x52]
  411023:	popf   
  411024:	mov    ebp,0x62a30839
  411029:	imul   eax,DWORD PTR [edx+0x6690393e],0xffffff95
  411030:	les    esi,FWORD PTR [eax-0x66efbbb2]
  411036:	add    ebx,DWORD PTR [edi+edx*8+0x4b]
  41103a:	and    edx,ebp
  41103c:	enter  0x1f35,0x63
  411040:	jge    0x411065
  411042:	cmc    
  411043:	pop    ds
  411044:	fwait
  411045:	xlat   BYTE PTR es:[ebx]
  411047:	or     DWORD PTR [eax-0x683a4290],edi
  41104d:	and    eax,0x55f669c4
  411052:	das    
  411053:	xor    ch,BYTE PTR [edx-0x5d]
  411056:	in     eax,0x77
  411058:	xchg   esp,eax
  411059:	mov    WORD PTR [edx-0x12],cs
  41105c:	call   0xca03:0x1fcffc
  411063:	xchg   DWORD PTR [ebx+0x1a],edx
  411066:	or     eax,0x719367a7
  41106b:	(bad)  
  41106c:	dec    ecx
  41106d:	pop    ebp
  41106e:	cld    
  41106f:	jae    0x411081
  411071:	icebp  
  411072:	dec    DWORD PTR [esi]
  411074:	inc    eax
  411075:	inc    dh
  411077:	mov    ds:0x6c729482,al
  41107c:	or     BYTE PTR [eax-0x43],bl
  41107f:	lds    ebp,FWORD PTR [esp+esi*4-0x1331c8cf]
  411086:	daa    
  411087:	je     0x4110d4
  411089:	adc    eax,0x43cd1df8
  41108e:	loope  0x4110b8
  411090:	out    dx,al
  411091:	setge  BYTE PTR [eax+0x2d]
  411095:	test   al,0xb
  411097:	jo     0x41107a
  411099:	add    DWORD PTR [ebx+0x1e],0x5ea2124b
  4110a0:	test   BYTE PTR [edx-0x299255c],ch
  4110a6:	hlt    
  4110a7:	push   edx
  4110a8:	shl    DWORD PTR [ecx+0x5f],cl
  4110ab:	adc    eax,0xc8e93edf
  4110b0:	xchg   DWORD PTR ds:0x831978a7,ebx
  4110b6:	sar    DWORD PTR [eax+0x653d828f],0xc1
  4110bd:	out    dx,eax
  4110be:	add    DWORD PTR [ecx],eax
  4110c0:	in     eax,dx
  4110c1:	out    0x7e,al
  4110c3:	(bad)  
  4110c4:	push   ecx
  4110c5:	lds    esp,FWORD PTR [ecx]
  4110c7:	arpl   ax,ax
  4110c9:	stos   DWORD PTR es:[edi],eax
  4110ca:	mov    ah,0x45
  4110cc:	(bad)  
  4110cd:	arpl   WORD PTR [ebp+edx*1+0x24],ax
  4110d1:	mov    ds:0x1aa0fb07,al
  4110d6:	add    BYTE PTR cs:[ecx],ah
  4110d9:	push   cs
  4110da:	push   ebx
  4110db:	mov    al,0x20
  4110dd:	jb     0x411101
  4110df:	mov    ebx,0x815360f5
  4110e4:	xchg   esi,eax
  4110e5:	dec    esp
  4110e6:	out    dx,eax
  4110e7:	idiv   DWORD PTR [esi]
  4110e9:	inc    edi
  4110ea:	int    0x3
  4110ec:	cmp    eax,0xc4bbc295
  4110f1:	dec    eax
  4110f2:	mov    ebp,0x4674e2d8
  4110f7:	in     eax,dx
  4110f8:	dec    edi
  4110f9:	test   bl,ah
  4110fb:	xchg   esp,eax
  4110fc:	add    edi,ebx
  4110fe:	ss js  0x41115b
  411101:	add    al,0xd0
  411103:	pop    esi
  411104:	and    ebp,ebp
  411106:	popf   
  411107:	adc    cl,BYTE PTR [esi+0x6d8fbcec]
  41110d:	test   DWORD PTR [ebp+esi*4+0x4d0019e9],0x37cc6db1
  411118:	push   esp
  411119:	sub    BYTE PTR [eax+0x4c26caf9],bl
  41111f:	lahf   
  411120:	mov    ebp,0x3d4f8f47
  411125:	xchg   esi,eax
  411126:	in     eax,dx
  411127:	and    edi,DWORD PTR [edi+0x40]
  41112a:	cmp    BYTE PTR ds:0x1c4ca0eb,ch
  411130:	addps  xmm5,XMMWORD PTR [esi+0x6abe4472]
  411137:	mov    ds,WORD PTR [ecx+ebx*1-0x69c96831]
  41113e:	sahf   
  41113f:	xchg   edi,eax
  411140:	push   0x9dd89df2
  411145:	test   BYTE PTR es:[ebx],dl
  411148:	iret   
  411149:	es test al,0xf1
  41114c:	xor    eax,0xf62a9b5c
  411151:	inc    edx
  411152:	ret    
  411153:	and    al,BYTE PTR [esp+ebp*2-0x26db7182]
  41115a:	test   BYTE PTR [ebp-0x69],ah
  41115d:	inc    esi
  41115e:	jl     0x4111d8
  411160:	out    dx,eax
  411161:	repz and DWORD PTR [edx+0x46ddf39a],edi
  411168:	loop   0x411118
  41116a:	sbb    eax,DWORD PTR [edi+0x67bee6e8]
  411170:	jns    0x4111bf
  411172:	mov    dh,0x62
  411174:	shr    BYTE PTR [eax+eiz*1-0x48],cl
  411178:	mov    edx,0xd02d4f41
  41117d:	lock xchg DWORD PTR [ecx],edi
  411180:	rol    DWORD PTR [ebp+0x25],cl
  411183:	adc    al,0x7a
  411185:	xor    eax,0xdf5feb1f
  41118a:	xor    eax,0xef6be4c
  41118f:	lea    esi,[ebx-0xc0ce0a]
  411195:	mul    DWORD PTR [esi+0x2f]
  411198:	retf   0x2eb7
  41119b:	lock shl DWORD PTR [eax+0x4],1
  41119f:	inc    ecx
  4111a0:	jae    0x4111fa
  4111a2:	push   ds
  4111a3:	stos   BYTE PTR es:[edi],al
  4111a4:	scas   eax,DWORD PTR es:[edi]
  4111a5:	addr16 mov ch,0xa4
  4111a8:	push   cs
  4111a9:	mov    ds:0x3a66bf92,eax
  4111ae:	or     BYTE PTR [ecx],al
  4111b0:	push   0xffffff9e
  4111b2:	sahf   
  4111b3:	shr    ah,cl
  4111b5:	scas   eax,DWORD PTR es:[edi]
  4111b6:	or     ch,dl
  4111b8:	push   ebx
  4111b9:	xlat   BYTE PTR ds:[ebx]
  4111ba:	push   DWORD PTR [ecx+ebp*1+0x15]
  4111be:	fbstp  TBYTE PTR [esi+esi*4-0x75]
  4111c2:	xchg   edx,eax
  4111c3:	lahf   
  4111c4:	or     DWORD PTR [ecx],edx
  4111c6:	repz inc ecx
  4111c8:	pusha  
  4111c9:	data16 jb 0x41116e
  4111cc:	dec    ecx
  4111cd:	xor    DWORD PTR [ebx],ebx
  4111cf:	xchg   BYTE PTR [edi],bl
  4111d1:	sahf   
  4111d2:	cmp    BYTE PTR [edx+ebx*1-0xaed75c],0x40
  4111da:	push   ebp
  4111db:	mov    esp,0xa9a2f13d
  4111e0:	ja     0x4111cf
  4111e2:	scas   al,BYTE PTR es:[edi]
  4111e3:	mov    ds:0x1c06131d,eax
  4111e8:	hlt    
  4111e9:	sbb    DWORD PTR [eax],edx
  4111eb:	ins    BYTE PTR es:[edi],dx
  4111ec:	retf   
  4111ed:	push   edi
  4111ee:	aad    0x72
  4111f0:	in     al,0xfe
  4111f2:	and    al,0xce
  4111f4:	lea    ax,[edx-0x47]
  4111f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111f9:	and    al,0xce
  4111fb:	stos   BYTE PTR es:[edi],al
  4111fc:	xchg   esp,eax
  4111fd:	hlt    
  4111fe:	in     al,0x2f
  411200:	sub    bl,ch
  411202:	xchg   BYTE PTR [esi+0x76891258],dl
  411208:	(bad)
  41120b:	mov    eax,ds:0x1c84bcc7
  411210:	sbb    eax,0x83e77982
  411215:	or     DWORD PTR [ebx-0x7a],ecx
  411218:	add    BYTE PTR [edx-0x53],ch
  41121b:	xchg   esp,eax
  41121c:	jmp    0x411293
  41121e:	pop    esp
  41121f:	repnz test al,0xa0
  411222:	push   cs
  411223:	aaa    
  411224:	fdivp  st(1),st
  411226:	mov    bh,0xeb
  411228:	and    al,0xe7
  41122a:	xor    bh,bh
  41122c:	in     al,0x6b
  41122e:	stos   DWORD PTR es:[edi],eax
  41122f:	mov    ch,0x76
  411231:	inc    edx
  411232:	lahf   
  411233:	cld    
  411234:	(bad)  
  411235:	cmp    al,0xa0
  411237:	or     al,0x4b
  411239:	sahf   
  41123a:	fdiv   QWORD PTR [eax]
  41123c:	jbe    0x41126b
  41123e:	inc    esi
  41123f:	test   DWORD PTR [esi+0x75797ec5],ecx
  411245:	cs jmp 0x411206
  411248:	ins    BYTE PTR es:[edi],dx
  411249:	ret    0xe530
  41124c:	xor    ah,dh
  41124e:	bound  ecx,QWORD PTR [edx+ebp*8-0x2]
  411252:	jns    0x4112ae
  411254:	pop    esp
  411255:	mov    dl,cl
  411257:	add    BYTE PTR [edi],cl
  411259:	xchg   ecx,eax
  41125a:	xchg   esi,eax
  41125b:	aad    0xdb
  41125d:	inc    ebx
  41125e:	hlt    
  41125f:	fucomp st(0)
  411261:	adc    dl,BYTE PTR cs:[edx-0x41]
  411265:	and    DWORD PTR [eax],eax
  411267:	mov    edi,0xb1b5523f
  41126c:	sbb    al,0x25
  41126e:	and    eax,0xed3260f0
  411273:	lods   al,BYTE PTR ds:[esi]
  411274:	mov    edx,0xd5db13cb
  411279:	sbb    al,0xd6
  41127b:	mov    ss,WORD PTR [ecx]
  41127d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41127e:	xchg   ebp,eax
  41127f:	adc    BYTE PTR [esi],ah
  411281:	ret    0xb286
  411284:	push   esp
  411285:	push   ds
  411286:	xor    al,0xad
  411288:	adc    edi,DWORD PTR [ebx-0x4217478a]
  41128e:	(bad)  
  41128f:	and    eax,0xe06de110
  411294:	icebp  
  411295:	mov    cl,0x2c
  411297:	daa    
  411298:	and    bh,BYTE PTR [ebp-0xc]
  41129b:	xchg   ecx,eax
  41129c:	and    esp,DWORD PTR [ebp-0x6d6c35e1]
  4112a2:	popa   
  4112a3:	mov    cl,0xdf
  4112a5:	into   
  4112a6:	xchg   ebp,eax
  4112a7:	fild   WORD PTR [eax]
  4112a9:	pop    esp
  4112aa:	adc    DWORD PTR [eax],eax
  4112ac:	outs   dx,DWORD PTR ds:[esi]
  4112ad:	stos   DWORD PTR es:[edi],eax
  4112ae:	out    0xfe,al
  4112b0:	icebp  
  4112b1:	aas    
  4112b2:	repnz dec esi
  4112b4:	daa    
  4112b5:	inc    edi
  4112b6:	test   esp,ebp
  4112b8:	jbe    0x41131a
  4112ba:	inc    ebx
  4112bb:	imul   eax,DWORD PTR [edi+0x1a],0xba01351c
  4112c2:	pop    cx
  4112c4:	outs   dx,BYTE PTR ds:[esi]
  4112c5:	jo     0x411273
  4112c7:	or     ecx,edi
  4112c9:	fstp   DWORD PTR [ecx+0x2b]
  4112cc:	jmp    0xb393:0xd19576b2
  4112d3:	dec    ebp
  4112d4:	ss popf 
  4112d6:	and    eax,0x3fdace49
  4112db:	sub    ch,BYTE PTR [esi-0x7a08602b]
  4112e1:	les    ecx,FWORD PTR [esi]
  4112e3:	outs   dx,DWORD PTR ds:[esi]
  4112e4:	fistp  WORD PTR [ecx]
  4112e6:	mov    ch,BYTE PTR [edx]
  4112e8:	adc    al,0xd7
  4112ea:	push   ebx
  4112eb:	gs adc eax,edi
  4112ee:	into   
  4112ef:	out    dx,eax
  4112f0:	xchg   BYTE PTR [ebx],ah
  4112f2:	or     esi,DWORD PTR [ecx]
  4112f4:	outs   dx,BYTE PTR ds:[esi]
  4112f5:	imul   ecx,DWORD PTR [ecx+0x7a30c945],0x29c454ce
  4112ff:	jae    0x411354
  411301:	icebp  
  411302:	add    al,0xdf
  411304:	loopne 0x4112c2
  411306:	xchg   esp,eax
  411307:	hlt    
  411308:	push   edx
  411309:	cwde   
  41130a:	outs   dx,BYTE PTR ds:[esi]
  41130b:	mov    al,0x6
  41130d:	and    DWORD PTR ds:0x78008b8b,0xcf25fb81
  411317:	and    al,0x8c
  411319:	push   edx
  41131a:	jmp    0x4112a4
  41131c:	mov    edi,0x20d182f2
  411321:	outs   dx,BYTE PTR ds:[esi]
  411322:	dec    edi
  411323:	jb     0x4112cd
  411325:	sbb    DWORD PTR [edi],0x28
  411328:	inc    edi
  411329:	sub    al,0xff
  41132b:	cmp    DWORD PTR [esi+0xa7b99db],esp
  411331:	mov    WORD PTR [ebp-0x42],?
  411334:	pop    ds
  411335:	loopne 0x41137a
  411337:	add    al,0x5
  411339:	cdq    
  41133a:	scas   eax,DWORD PTR es:[edi]
  41133b:	mov    eax,ds:0x5b64b0a5
  411340:	test   DWORD PTR [ebx-0x6f907013],eax
  411346:	sbb    al,0xd6
  411348:	das    
  411349:	pop    eax
  41134a:	push   0x40f3b05a
  41134f:	mov    ah,0x59
  411351:	js     0x411373
  411353:	js     0x411329
  411355:	fcmovnbe st,st(0)
  411357:	push   ss
  411358:	push   0xaedacba2
  41135d:	cmp    BYTE PTR [esi+0x7e41cc4c],cl
  411363:	cmc    
  411364:	mov    edx,0xd2f6e797
  411369:	in     eax,0xc2
  41136b:	adc    bl,BYTE PTR [edi-0x31cdd38e]
  411371:	xchg   BYTE PTR [edi],ch
  411373:	ret    0x9e2e
  411376:	das    
  411377:	popf   
  411378:	clc    
  411379:	ins    BYTE PTR es:[edi],dx
  41137a:	clc    
  41137b:	or     al,0xd8
  41137d:	xor    eax,0x2e1aa9a8
  411382:	pop    edi
  411383:	mov    ch,0x70
  411385:	hlt    
  411386:	sub    edi,0x918270bc
  41138c:	sbb    eax,0x3ca9725
  411391:	mov    ds:0x94688f06,eax
  411396:	mov    al,BYTE PTR [edx+ebx*2+0x1]
  41139a:	push   ds
  41139b:	dec    eax
  41139c:	dec    ebp
  41139d:	psubw  mm3,mm1
  4113a0:	ror    DWORD PTR fs:[ebx+0x1dee8a2a],cl
  4113a7:	call   0x7b355b07
  4113ac:	rcr    DWORD PTR [edx+0x31],0x43
  4113b0:	cmc    
  4113b1:	jl     0x411338
  4113b3:	sub    DWORD PTR [eax],edi
  4113b5:	xchg   edi,eax
  4113b6:	push   edx
  4113b7:	mov    esp,0x493151db
  4113bc:	sbb    BYTE PTR [esp+ebx*4-0x7e],bl
  4113c0:	nop
  4113c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113c2:	xchg   esi,eax
  4113c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113c4:	push   ds
  4113c5:	jge    0x41143d
  4113c7:	xor    bh,bh
  4113c9:	xchg   ecx,eax
  4113ca:	and    DWORD PTR [edx],0xb946da81
  4113d0:	mov    dh,0x20
  4113d2:	jmp    ebx
  4113d4:	push   esp
  4113d5:	clc    
  4113d6:	sub    BYTE PTR [ebx],0xf0
  4113d9:	popa   
  4113da:	push   edi
  4113db:	mov    ecx,0xa919de7d
  4113e0:	loop   0x41136c
  4113e2:	xor    BYTE PTR ds:[edi+0x59649a56],al
  4113e9:	push   ebp
  4113ea:	mov    dl,0xea
  4113ec:	mov    bh,0x45
  4113ee:	mov    bl,0x69
  4113f0:	sub    ebx,DWORD PTR [ebp-0x7bb6bb90]
  4113f6:	test   BYTE PTR [edi-0x68],dh
  4113f9:	cmp    al,0x47
  4113fb:	test   eax,0x59a74c87
  411400:	fmul   DWORD PTR [edi]
  411402:	inc    esi
  411403:	lea    ebp,[eax-0x79]
  411406:	cld    
  411407:	inc    ebp
  411408:	loope  0x411424
  41140a:	stos   DWORD PTR es:[edi],eax
  41140b:	pop    esi
  41140c:	lea    eax,[esi+esi*8-0x3962cf35]
  411413:	cmp    al,bl
  411415:	popa   
  411416:	aam    0xd7
  411418:	or     BYTE PTR [ebp+esi*4-0x4f8a0e39],0xbc
  411420:	xchg   ebx,eax
  411421:	xchg   edx,eax
  411422:	rcr    DWORD PTR [eax+0x12],0xac
  411426:	mov    dl,0xd4
  411428:	ficomp DWORD PTR [edi]
  41142a:	or     eax,0x530c9478
  41142f:	lea    eax,[edx-0x4c]
  411432:	mov    dl,0x20
  411434:	test   al,0xe
  411436:	dec    edx
  411437:	xor    al,0x49
  411439:	lahf   
  41143a:	stc    
  41143b:	or     ecx,esp
  41143d:	jns    0x4113c1
  41143f:	push   edi
  411440:	adc    al,0x10
  411442:	iret   
  411443:	or     dl,BYTE PTR [edi-0x4e]
  411446:	shl    DWORD PTR ds:0x8220d41b,0x5e
  41144d:	arpl   WORD PTR [edi],sp
  41144f:	retf   0x9006
  411452:	ins    BYTE PTR es:[edi],dx
  411453:	out    dx,eax
  411454:	loopne 0x41143f
  411456:	jne    0x411450
  411458:	jg     0x4114a5
  41145a:	popa   
  41145b:	jg     0x41148b
  41145d:	enter  0xb0bc,0xb
  411461:	dec    ebp
  411462:	push   esi
  411463:	lds    eax,FWORD PTR [esi+0x67]
  411466:	xchg   esi,eax
  411467:	mov    DWORD PTR [edi],esi
  411469:	mov    fs,WORD PTR [ebx]
  41146b:	xchg   edi,eax
  41146c:	push   ds
  41146d:	call   0xd423:0x874ee227
  411474:	(bad)  [ecx-0x1f278b58]
  41147a:	mov    bh,0x64
  41147c:	mov    dl,0xec
  41147e:	gs stos DWORD PTR es:[edi],eax
  411480:	push   edi
  411481:	xchg   ecx,eax
  411482:	jecxz  0x411424
  411484:	mov    ah,0x9f
  411486:	inc    edx
  411487:	mov    al,ds:0x9aa9203d
  41148c:	fwait
  41148d:	jg     0x4114e7
  41148f:	add    esi,eax
  411491:	jle    0x4114e0
  411493:	sub    esi,DWORD PTR [eax]
  411495:	arpl   WORD PTR [esi-0x6e],ax
  411498:	fmul   QWORD PTR [ecx-0x5edfb371]
  41149e:	jmp    DWORD PTR [edi+0x7c]
  4114a1:	loopne 0x4114e3
  4114a3:	or     ecx,DWORD PTR [eax]
  4114a5:	sub    BYTE PTR [ebx+0x48],bh
  4114a8:	clc    
  4114a9:	add    DWORD PTR [eax-0x1a],eax
  4114ac:	iret   
  4114ad:	jno    0x4114be
  4114af:	in     eax,0x61
  4114b1:	out    0xa0,al
  4114b3:	inc    eax
  4114b4:	push   ebp
  4114b5:	popa   
  4114b6:	inc    ebx
  4114b7:	inc    esp
  4114b8:	mov    BYTE PTR [esi+0x4b902160],dl
  4114be:	lahf   
  4114bf:	or     bl,BYTE PTR [eax]
  4114c1:	mov    ds:0xccb2cf16,eax
  4114c6:	adc    BYTE PTR [ebp+0x2],ah
  4114c9:	gs dec ecx
  4114cb:	dec    esp
  4114cc:	aam    0x8b
  4114ce:	xor    ah,dh
  4114d0:	mov    al,0xa5
  4114d2:	jb     0x41151d
  4114d4:	gs fidiv WORD PTR cs:[eax+0x1f]
  4114d9:	xchg   edi,eax
  4114da:	add    bh,dl
  4114dc:	mov    ecx,0x1467de93
  4114e1:	mov    al,ds:0x835cfacf
  4114e6:	mov    ah,ah
  4114e8:	out    dx,eax
  4114e9:	cmp    BYTE PTR [ebp+0x66],dh
  4114ec:	test   eax,0x44e1e8ed
  4114f1:	pushf  
  4114f2:	test   BYTE PTR [eax+0x46],cl
  4114f5:	xor    edi,DWORD PTR [eax+0x2b]
  4114f8:	in     eax,0x3c
  4114fa:	jnp    0x41156d
  4114fc:	nop
  4114fd:	cmp    eax,0x6989b073
  411502:	push   ebx
  411503:	mov    edi,0x168e1d4a
  411508:	dec    edx
  411509:	pop    ds
  41150a:	mov    cl,0x2b
  41150c:	aam    0x9d
  41150e:	fstp   DWORD PTR [edi-0x53a9325]
  411514:	cmp    al,0x8d
  411516:	mov    WORD PTR [eax-0x32],cs
  411519:	(bad)  [esi]
  41151b:	push   ebx
  41151c:	and    eax,0xde5d1d72
  411521:	mov    ecx,0xb6cc5a48
  411526:	ror    DWORD PTR [eax],cl
  411528:	in     al,0xe6
  41152a:	mov    edx,0xa773f8e2
  41152f:	pop    edi
  411530:	lock add eax,0x6c217f80
  411536:	mov    ebx,0x2eeb7dd1
  41153b:	stos   DWORD PTR es:[edi],eax
  41153c:	push   esi
  41153d:	mov    BYTE PTR ds:[eax-0x344851dc],dl
  411544:	pop    ds
  411545:	in     al,0xc7
  411547:	sbb    BYTE PTR [ebp+0x32],bl
  41154a:	cld    
  41154b:	lds    esi,FWORD PTR ss:[eax-0x1e5b364f]
  411552:	(bad)  [edx]
  411554:	pusha  
  411555:	js     0x4115cb
  411557:	jmp    0x4114e5
  411559:	mov    edi,0x30bbc12e
  41155e:	mov    esi,0xb7d0ec30
  411563:	(bad)  
  411564:	nop
  411565:	mov    eax,0x2c89fd17
  41156a:	rol    DWORD PTR [ebx-0x50294f43],0x64
  411571:	cmp    eax,0x4139bca0
  411576:	xor    DWORD PTR [eax],edx
  411578:	mov    edi,0xec56a64d
  41157d:	(bad)  
  41157e:	lods   al,BYTE PTR ds:[esi]
  41157f:	es enter 0x7849,0xb3
  411584:	ret    0x5df8
  411587:	cli    
  411588:	jne    0x411528
  41158a:	cmp    edi,DWORD PTR [esi-0x47]
  41158d:	mov    eax,ds:0xee3b87e4
  411592:	jp     0x41151e
  411594:	arpl   WORD PTR [ecx+0xe],cx
  411597:	fst    QWORD PTR [eax+0xd]
  41159a:	mov    al,ds:0xc0f11274
  41159f:	es xchg cx,ax
  4115a2:	or     BYTE PTR [edi+0x67],ah
  4115a5:	jmp    0xb610:0x31b7be5e
  4115ac:	jns    0x77f14e64
  4115b2:	xor    al,0xdd
  4115b4:	sar    BYTE PTR [eax],cl
  4115b6:	shl    DWORD PTR [ecx-0x5],cl
  4115b9:	cmp    bl,dl
  4115bb:	cs sub al,0xfc
  4115be:	ficom  DWORD PTR [eax]
  4115c0:	jnp    0x411552
  4115c2:	xchg   edi,eax
  4115c3:	add    eax,0x680ffe16
  4115c8:	sahf   
  4115c9:	and    eax,0x933c7b08
  4115ce:	inc    edx
  4115cf:	sbb    al,0xfe
  4115d1:	outs   dx,BYTE PTR ds:[esi]
  4115d2:	push   es
  4115d3:	add    BYTE PTR [edi+0x58],dl
  4115d6:	enter  0x4685,0xae
  4115da:	stc    
  4115db:	std    
  4115dc:	add    edi,DWORD PTR [ecx+0x6b]
  4115df:	jo     0x4115e9
  4115e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115e2:	xchg   esp,eax
  4115e3:	add    DWORD PTR [ebp+0x331d2e6d],ebx
  4115e9:	adc    DWORD PTR [esi-0x60],ebx
  4115ec:	mov    cl,BYTE PTR [ecx]
  4115ee:	push   edx
  4115ef:	jmp    0xb492:0xd57f22db
  4115f6:	dec    ebp
  4115f7:	mov    ebx,0xf0ceec0a
  4115fc:	addr16 xor eax,0xde393a4e
  411602:	mov    ds:0xa9adda6c,al
  411607:	out    0xf6,al
  411609:	out    dx,al
  41160a:	cli    
  41160b:	add    BYTE PTR [edx+0x3b],al
  41160e:	cmp    ecx,DWORD PTR [ecx]
  411610:	test   eax,0x5963eb19
  411615:	add    eax,0xe0129a86
  41161a:	idiv   DWORD PTR [esi]
  41161c:	xor    eax,0x8b902012
  411621:	pop    ds
  411622:	add    ebp,edx
  411624:	pusha  
  411625:	popa   
  411626:	xor    esp,DWORD PTR [ecx+0x2a]
  411629:	pop    esi
  41162a:	sbb    ch,bl
  41162c:	aas    
  41162d:	(bad)  
  41162e:	int    0xaf
  411630:	push   esp
  411631:	or     ebp,DWORD PTR [ecx]
  411633:	je     0x4115d1
  411635:	pop    ecx
  411636:	mov    dh,0xdd
  411638:	rcr    BYTE PTR [ebx],0x42
  41163b:	pop    esi
  41163c:	mov    eax,ds:0x50586a1b
  411641:	sub    dl,BYTE PTR [esi+0x68549db6]
  411647:	inc    edx
  411648:	(bad)  
  411649:	aas    
  41164a:	fcom   QWORD PTR [esi+0x3e554e14]
  411650:	fcomp  QWORD PTR [ebp+0x1c5145c8]
  411656:	pop    edi
  411657:	or     DWORD PTR [edi+edx*1+0x70],esp
  41165b:	std    
  41165c:	mov    eax,0x9776cd12
  411661:	ret    
  411662:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411663:	fiadd  DWORD PTR [ecx+edx*8]
  411666:	add    DWORD PTR [edi+ebx*8-0xc3731f0],ebx
  41166d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41166e:	ret    
  41166f:	addr16 sub eax,ebx
  411672:	jle    0x41163f
  411674:	inc    edi
  411675:	jp     0x4116dc
  411677:	mov    esi,0x603ea4d3
  41167c:	dec    esp
  41167d:	sbb    ch,BYTE PTR [esi-0x59]
  411680:	mov    edx,0x15a03205
  411685:	stos   BYTE PTR es:[edi],al
  411686:	repnz inc ebp
  411688:	(bad)  
  411689:	lods   al,BYTE PTR ds:[esi]
  41168a:	(bad)  
  41168b:	xor    al,0x6e
  41168d:	in     al,0x9c
  41168f:	mov    al,ds:0x467da1f6
  411694:	cs jb  0x411669
  411697:	fisttp QWORD PTR [esi]
  411699:	add    eax,0x461b62a2
  41169e:	imul   DWORD PTR [esi+edx*4]
  4116a1:	aas    
  4116a2:	or     BYTE PTR gs:[ecx*1-0x4be7465d],bh
  4116aa:	xor    DWORD PTR [ebx-0x18058c3f],esp
  4116b0:	xor    ah,BYTE PTR [edi+edi*2]
  4116b3:	mov    ah,BYTE PTR [ebp*1-0x1272bf8e]
  4116ba:	or     ecx,DWORD PTR [ecx]
  4116bc:	mov    esp,DWORD PTR [eax+esi*4]
  4116bf:	jg     0x4116cb
  4116c1:	lock jbe 0x411654
  4116c4:	add    eax,0xecc71d4c
  4116c9:	sub    bh,BYTE PTR ss:[esp+esi*1+0x18]
  4116ce:	inc    esi
  4116cf:	add    eax,0x5283c40b
  4116d4:	in     al,0x5b
  4116d6:	fisttp WORD PTR [ebx]
  4116d8:	outs   dx,DWORD PTR ds:[esi]
  4116d9:	inc    ecx
  4116da:	mov    ecx,0x956e3434
  4116df:	pop    ds
  4116e0:	sub    edx,DWORD PTR [ebp*2+0x5edbea1e]
  4116e7:	test   eax,0x707e72e4
  4116ec:	cld    
  4116ed:	jae    0x4116c4
  4116ef:	mov    edi,0x28fbfbda
  4116f4:	fld    TBYTE PTR [eax+0x61017650]
  4116fa:	ds adc ebp,esp
  4116fd:	dec    ecx
  4116fe:	in     al,0x59
  411700:	cmp    eax,0xcac42cad
  411705:	add    BYTE PTR [esi-0x1097d994],0x83
  41170c:	cmc    
  41170d:	inc    ebx
  41170e:	int3   
  41170f:	xchg   edi,eax
  411710:	(bad)  
  411711:	mov    esi,0xa5f59005
  411716:	mov    eax,ds:0x89c0fd34
  41171b:	pop    ecx
  41171c:	gs adc eax,0x8eb4ea8e
  411722:	jge    0x4116c1
  411724:	inc    ebp
  411725:	push   esp
  411726:	mov    edx,esi
  411728:	xor    al,0x58
  41172a:	push   esi
  41172b:	xor    DWORD PTR [ecx+ebx*8],ebx
  41172e:	imul   ebp,DWORD PTR [ebx-0x50],0xffffff8d
  411732:	sysret 
  411734:	gs or  eax,0x4e65416f
  41173a:	jle    0x41173f
  41173c:	lahf   
  41173d:	sub    BYTE PTR [eax],dl
  41173f:	inc    eax
  411740:	int3   
  411741:	js     0x411754
  411743:	cmp    al,0xf3
  411745:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411746:	ss sub cl,ch
  411749:	jle    0x4117bc
  41174b:	jl     0x4116f0
  41174d:	outs   dx,BYTE PTR ds:[esi]
  41174e:	shl    ecx,1
  411750:	jmp    0x41179e
  411752:	sbb    BYTE PTR [ecx+eax*2],dl
  411755:	push   ebp
  411756:	mov    eax,ds:0x2e2d59f2
  41175b:	lods   eax,DWORD PTR ds:[esi]
  41175c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41175d:	add    eax,0x4e2f2c0a
  411762:	imul   ebp,DWORD PTR [edi+edx*1],0xffffffac
  411766:	std    
  411767:	stc    
  411768:	pop    esp
  411769:	xor    eax,DWORD PTR [edi-0x854fa62]
  41176f:	cmp    al,0x73
  411771:	aaa    
  411772:	or     cl,bh
  411774:	xlat   BYTE PTR ds:[ebx]
  411775:	cs push edi
  411777:	std    
  411778:	cmp    al,0xee
  41177a:	jg     0x4117f0
  41177c:	test   al,ah
  41177e:	int3   
  41177f:	inc    esp
  411780:	cmp    al,0x5d
  411782:	sti    
  411783:	xlat   BYTE PTR ds:[ebx]
  411784:	push   esp
  411785:	sbb    dl,BYTE PTR [edx+0x4d77121c]
  41178b:	gs cld 
  41178d:	cmp    BYTE PTR [esi],0xe9
  411790:	sar    BYTE PTR [edi+esi*1],0x30
  411794:	mov    esp,DWORD PTR [esi]
  411796:	sub    DWORD PTR [ebx+0x6b38c517],eax
  41179c:	inc    eax
  41179d:	or     al,0xd0
  41179f:	lds    ebp,FWORD PTR [edx+edx*2+0x3e]
  4117a3:	gs pop esi
  4117a5:	xor    ch,cl
  4117a7:	popa   
  4117a8:	dec    ebx
  4117a9:	sub    al,0x2d
  4117ab:	ret    
  4117ac:	inc    esp
  4117ad:	or     DWORD PTR [esi+0xd9b64c5],edi
  4117b3:	sub    BYTE PTR [esp+edx*1+0x72],ch
  4117b7:	test   eax,0x6b2ea4
  4117bc:	jmp    0x1cca6c08
  4117c1:	ins    DWORD PTR es:[edi],dx
  4117c2:	mov    esi,gs
  4117c4:	rcl    DWORD PTR [eax+0x1b3a37d9],0xc7
  4117cb:	mov    ebp,0xdb62b3cd
  4117d0:	js     0x411796
  4117d2:	mov    ds:0x43c50c8f,al
  4117d7:	(bad)  
  4117d8:	mov    bl,0xbd
  4117da:	adc    eax,esp
  4117dc:	fwait
  4117dd:	inc    esp
  4117de:	adc    al,0xe3
  4117e0:	cmp    eax,0x3e4164a9
  4117e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117e6:	add    DWORD PTR [ebx+eiz*2+0x15],0x37fac0d3
  4117ee:	retf   
  4117ef:	push   ebp
  4117f0:	ins    BYTE PTR es:[edi],dx
  4117f1:	ins    DWORD PTR es:[edi],dx
  4117f2:	xchg   edi,eax
  4117f3:	push   0xffffffa7
  4117f5:	out    dx,al
  4117f6:	cmp    BYTE PTR [ebx+0x15],0x8b
  4117fa:	lods   al,BYTE PTR ds:[esi]
  4117fb:	push   ss
  4117fc:	int    0x11
  4117fe:	(bad)  [eax+0x40]
  411801:	lds    esp,FWORD PTR [edx+0x6863be2]
  411807:	lods   eax,DWORD PTR ds:[esi]
  411808:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411809:	cmp    eax,0x8ad76ab4
  41180e:	scas   al,BYTE PTR es:[edi]
  41180f:	and    esp,0xffffff82
  411812:	pop    eax
  411813:	rep outs dx,BYTE PTR ds:[esi]
  411815:	jns    0x4117f4
  411817:	inc    edx
  411818:	mov    esp,0x68f0515
  41181d:	mov    bl,BYTE PTR [eax]
  41181f:	ror    BYTE PTR [esi+ecx*8-0x44cbae67],1
  411826:	mov    ebx,0x7979a6bf
  41182b:	cmp    DWORD PTR [esi+ecx*2+0x20c0dfc3],ecx
  411832:	ins    BYTE PTR es:[edi],dx
  411833:	ins    BYTE PTR es:[edi],dx
  411834:	fcmovnbe st,st(4)
  411836:	mov    dl,0xfe
  411838:	pop    esp
  411839:	cmp    eax,0x116e9a78
  41183e:	stos   DWORD PTR es:[edi],eax
  41183f:	fisttp WORD PTR [esi]
  411841:	mov    esi,0xc263854
  411846:	dec    ecx
  411847:	std    
  411848:	or     al,0xda
  41184a:	(bad)  
  41184b:	cmp    DWORD PTR [edi],ebp
  41184d:	jle    0x411813
  41184f:	js     0x411817
  411851:	jp     0x411814
  411853:	idiv   DWORD PTR [ecx+0x17]
  411856:	cmp    al,0x49
  411858:	out    dx,al
  411859:	ins    BYTE PTR es:[edi],dx
  41185a:	add    bh,BYTE PTR [ecx-0x51]
  41185d:	lock aas 
  41185f:	sub    al,0xb3
  411861:	inc    edi
  411862:	ficom  DWORD PTR [ebx+0x17566b2b]
  411868:	fs clc 
  41186a:	aaa    
  41186b:	lods   eax,DWORD PTR ds:[esi]
  41186c:	repz cdq 
  41186e:	jno    0x411854
  411870:	mov    ebx,0x83e94d5a
  411875:	int    0x3f
  411877:	jne    0x411851
  411879:	cdq    
  41187a:	pop    ebp
  41187b:	mov    ah,0xa0
  41187d:	jno    0x411880
  41187f:	test   DWORD PTR [ebp-0x7f],0x532473ed
  411886:	cdq    
  411887:	cdq    
  411888:	dec    ecx
  411889:	mov    WORD PTR ds:0x3baccfda,es
  41188f:	adc    ah,BYTE PTR [eax+ebx*2+0xf]
  411893:	jge    0x41186d
  411895:	aaa    
  411896:	rcl    DWORD PTR [ebp-0x44],0xc5
  41189a:	adc    eax,0x681edbc1
  41189f:	test   BYTE PTR [edi-0x1],ch
  4118a2:	fwait
  4118a3:	mov    ch,0x9
  4118a5:	dec    edi
  4118a6:	pop    es
  4118a7:	jo     0x41183c
  4118a9:	jmp    0x15e9:0x3015ddd3
  4118b0:	retf   
  4118b1:	fist   WORD PTR [edi]
  4118b3:	retf   
  4118b4:	sbb    esp,DWORD PTR [esi+0x2b]
  4118b7:	xor    BYTE PTR [esi+0x2665c5ea],cl
  4118bd:	popa   
  4118be:	mov    ss,WORD PTR [esi-0xe]
  4118c1:	mov    dl,0x19
  4118c3:	in     al,0xa8
  4118c5:	(bad)  
  4118c6:	(bad)  [edx+0x59]
  4118c9:	aaa    
  4118ca:	xor    dh,0x8e
  4118cd:	into   
  4118ce:	mov    ds:0xf9d522ea,al
  4118d3:	mov    ecx,0xf2692b6a
  4118d8:	mov    ecx,0x3f5bf1ba
  4118dd:	jne    0x411939
  4118df:	sub    esp,ebx
  4118e1:	aas    
  4118e2:	push   cs
  4118e3:	pop    ecx
  4118e4:	fisttp WORD PTR [edi+ebx*4-0x2a]
  4118e8:	pop    eax
  4118e9:	cli    
  4118ea:	push   ebx
  4118eb:	pop    esi
  4118ec:	add    al,0x1f
  4118ee:	pop    eax
  4118ef:	fbstp  TBYTE PTR [eax]
  4118f1:	push   ebx
  4118f2:	and    ch,0x69
  4118f5:	ins    BYTE PTR es:[edi],dx
  4118f6:	sub    ebx,DWORD PTR [ebx-0x5985bec2]
  4118fc:	in     al,dx
  4118fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118fe:	mov    ebp,DWORD PTR [edx+0x34fb16c4]
  411904:	sub    BYTE PTR [ebp+0x2e2ee416],ah
  41190a:	inc    edi
  41190b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41190c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41190d:	xlat   BYTE PTR ds:[ebx]
  41190e:	dec    ecx
  41190f:	lea    ebx,[ebp+edx*2+0x17]
  411913:	add    al,0xf1
  411915:	and    eax,0x33ba8102
  41191a:	and    eax,0xa1b3c374
  41191f:	pop    esi
  411920:	rol    DWORD PTR [ecx-0x3b],1
  411923:	cwde   
  411924:	mov    eax,ds:0x4efafb29
  411929:	cmp    DWORD PTR [ebp-0x48],esp
  41192c:	sbb    al,0x3f
  41192e:	push   esp
  41192f:	scas   al,BYTE PTR es:[edi]
  411930:	dec    edi
  411931:	nop
  411932:	inc    esp
  411933:	xchg   DWORD PTR ds:0x8b098743,edx
  411939:	add    ecx,DWORD PTR [esi+0x2d93c90a]
  41193f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411940:	enter  0xc79,0xf7
  411944:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411945:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411946:	les    ecx,FWORD PTR [eax]
  411948:	pop    edi
  411949:	adc    eax,0x76961008
  41194e:	sbb    DWORD PTR [esi-0x13],ecx
  411951:	push   eax
  411952:	xor    DWORD PTR [ecx],ebp
  411954:	pop    ebp
  411955:	push   cs
  411956:	or     al,0xe5
  411958:	fnstcw WORD PTR [eax-0x70]
  41195b:	and    al,0xf4
  41195d:	inc    eax
  41195e:	rol    DWORD PTR [edx-0x2de0c0c6],1
  411964:	(bad)
  411968:	add    al,0x9b
  41196a:	jge    0x41199e
  41196c:	cdq    
  41196d:	pop    ecx
  41196e:	mov    cl,0x94
  411970:	aad    0xa3
  411972:	stos   DWORD PTR es:[edi],eax
  411973:	push   ebp
  411974:	ja     0x41193c
  411976:	leave  
  411977:	outs   dx,BYTE PTR ds:[esi]
  411978:	pop    esi
  411979:	dec    edx
  41197a:	xor    ebx,DWORD PTR [ebp+0x326e453d]
  411980:	jecxz  0x411953
  411982:	mov    ch,0x14
  411984:	and    al,0x1d
  411986:	test   BYTE PTR [edx+0x7a51d71e],dh
  41198c:	add    al,0x5b
  41198e:	lea    eax,[ebp+0x74210560]
  411994:	stos   BYTE PTR es:[edi],al
  411995:	retf   0x6f8a
  411998:	(bad)  
  411999:	mov    dl,0xd2
  41199b:	int    0xcc
  41199d:	popa   
  41199e:	xor    al,0x3d
  4119a0:	lods   eax,DWORD PTR ds:[esi]
  4119a1:	push   0x7722fcb1
  4119a6:	and    ebp,esp
  4119a8:	popf   
  4119a9:	add    al,0x84
  4119ab:	jno    0x4119bc
  4119ad:	push   cs
  4119ae:	arpl   WORD PTR [edi],si
  4119b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119b1:	int    0x3a
  4119b3:	ss jbe 0x41194f
  4119b6:	sbb    dl,BYTE PTR gs:[ebx-0x38]
  4119ba:	sbb    ebp,DWORD PTR [ebx+0x4df91765]
  4119c0:	push   0x4d013bb7
  4119c5:	xchg   ecx,eax
  4119c6:	jmp    0x6f129d11
  4119cb:	mov    esp,0x7d3a8300
  4119d0:	sbb    dl,ah
  4119d2:	nop
  4119d3:	dec    ebp
  4119d4:	mov    bl,0xe3
  4119d6:	add    DWORD PTR [ecx+0x5c],0xea44fe70
  4119dd:	jae    0x411982
  4119df:	mov    bl,0xa6
  4119e1:	xchg   edx,eax
  4119e2:	sbb    ebp,DWORD PTR [esi+0x34e78997]
  4119e8:	or     ecx,DWORD PTR [ebx+0x553b2484]
  4119ee:	(bad)  
  4119ef:	stos   DWORD PTR es:[edi],eax
  4119f0:	(bad)  
  4119f1:	adc    eax,0xc3be7d09
  4119f6:	dec    esi
  4119f7:	test   edx,edx
  4119f9:	mov    edi,es
  4119fb:	adc    al,0x90
  4119fd:	cld    
  4119fe:	cmp    dh,BYTE PTR ds:0x88115d45
  411a04:	fisubr WORD PTR [ebx+eiz*8]
  411a07:	push   ss
  411a08:	test   eax,0xbba188a
  411a0d:	mov    al,0x26
  411a0f:	adc    edi,DWORD PTR [ebp+ecx*1-0x25]
  411a13:	pop    eax
  411a14:	(bad)  
  411a15:	in     al,dx
  411a16:	adc    al,0x5f
  411a18:	adc    al,0xc0
  411a1a:	out    0x21,eax
  411a1c:	(bad)  
  411a1d:	fiadd  WORD PTR [eax]
  411a1f:	shl    BYTE PTR [edi-0x10],1
  411a22:	and    al,BYTE PTR [ebx]
  411a24:	enter  0x699a,0x13
  411a28:	jmp    0x63407d73
  411a2d:	bnd repz jo 0x4119dd
  411a31:	sbb    ecx,eax
  411a33:	clc    
  411a34:	(bad)  [edi*2-0x58639ed6]
  411a3b:	pop    ss
  411a3c:	mov    ss,WORD PTR [esi-0x1f]
  411a3f:	dec    edx
  411a40:	cmp    DWORD PTR [esi-0x36],esi
  411a43:	sub    ebx,DWORD PTR [ebp-0x489a0bc9]
  411a49:	sar    DWORD PTR [ebx],cl
  411a4b:	add    edi,edi
  411a4d:	call   0x481477af
  411a52:	mov    esp,0x72e43be9
  411a57:	es pop esi
  411a59:	inc    edi
  411a5a:	pushf  
  411a5b:	push   ds
  411a5c:	xchg   ebx,eax
  411a5d:	pop    ss
  411a5e:	pushf  
  411a5f:	rcr    DWORD PTR [eax-0x32676755],1
  411a65:	rcl    DWORD PTR [edi-0x5831bdbb],cl
  411a6b:	xor    ah,0x17
  411a6e:	aas    
  411a6f:	stc    
  411a70:	inc    esp
  411a71:	pop    edx
  411a72:	jo     0x411a7e
  411a74:	daa    
  411a75:	cld    
  411a76:	or     esi,DWORD PTR ds:0xc9456738
  411a7c:	adc    BYTE PTR [ebx],cl
  411a7e:	jbe    0x411a26
  411a80:	mov    dl,0xb8
  411a82:	test   eax,0x2af12d7d
  411a87:	scas   eax,DWORD PTR es:[edi]
  411a88:	fadd   QWORD PTR [ecx]
  411a8a:	retf   
  411a8b:	int    0xe7
  411a8d:	xor    ah,BYTE PTR [edi]
  411a8f:	rol    DWORD PTR [edx+0x3d],1
  411a92:	xor    esi,DWORD PTR [eax]
  411a94:	mov    esi,DWORD PTR [edi-0x127a7e9]
  411a9a:	enter  0x2a17,0xb0
  411a9e:	das    
  411a9f:	xchg   edx,eax
  411aa0:	sub    eax,0xfcc2b099
  411aa5:	sub    al,0x11
  411aa7:	jb     0x411b13
  411aa9:	mov    DWORD PTR [ebp-0x655cb413],edi
  411aaf:	sbb    dl,bh
  411ab1:	xor    al,0x61
  411ab3:	lds    esi,FWORD PTR [ebx-0x5e]
  411ab6:	push   0x41a68f41
  411abb:	in     eax,0x15
  411abd:	push   esi
  411abe:	cs inc esi
  411ac0:	ss lahf 
  411ac2:	mov    ds:0x35a3b15d,eax
  411ac7:	ficom  WORD PTR [edx]
  411ac9:	jbe    0x411ab5
  411acb:	test   dl,dl
  411acd:	(bad)  
  411acf:	lods   eax,DWORD PTR ds:[esi]
  411ad0:	mov    eax,ds:0x28a058b7
  411ad5:	push   edi
  411ad6:	cs and al,0x73
  411ad9:	or     DWORD PTR [esi+ebp*2-0x1865155f],edi
  411ae0:	je     0x411a7d
  411ae2:	lods   eax,DWORD PTR ds:[esi]
  411ae3:	mov    dh,0xe8
  411ae5:	cwde   
  411ae6:	das    
  411ae7:	in     al,0x62
  411ae9:	add    esi,edx
  411aeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411aec:	out    dx,al
  411aed:	stc    
  411aee:	ins    DWORD PTR es:[edi],dx
  411aef:	and    edi,DWORD PTR [edi+0x43]
  411af2:	jae    0x411b44
  411af4:	lods   al,BYTE PTR ds:[esi]
  411af5:	pop    ss
  411af6:	xchg   edx,eax
  411af7:	ins    BYTE PTR es:[edi],dx
  411af8:	test   DWORD PTR [ebx+0x3fbed39f],ebx
  411afe:	adc    cl,al
  411b00:	out    0x88,eax
  411b02:	fld    QWORD PTR [esi-0x18]
  411b05:	arpl   WORD PTR [edi],di
  411b07:	fsubr  QWORD PTR [edi+0x1606c1e8]
  411b0d:	stos   DWORD PTR es:[edi],eax
  411b0e:	cwde   
  411b0f:	jmp    0x411b33
  411b11:	les    esp,FWORD PTR [ebp+0x2c]
  411b14:	sbb    ebx,DWORD PTR [edx+0x69]
  411b17:	nop
  411b18:	push   es
  411b19:	push   eax
  411b1a:	scas   al,BYTE PTR es:[edi]
  411b1b:	or     eax,0xd0a84ff1
  411b20:	push   0xffffff89
  411b22:	shrd   DWORD PTR [esi-0x4c],esp,0x7a
  411b27:	dec    edx
  411b28:	mov    WORD PTR [ebx-0x386d6bfb],gs
  411b2e:	scas   eax,DWORD PTR es:[edi]
  411b2f:	xchg   edi,eax
  411b30:	int    0x32
  411b32:	adc    al,0xc5
  411b34:	mov    WORD PTR [edx+0x6a53ad7d],gs
  411b3a:	sub    BYTE PTR [ebx],dl
  411b3c:	rcr    DWORD PTR [edx],cl
  411b3e:	add    cl,BYTE PTR [ebx+0x3f]
  411b41:	jg     0x411b9b
  411b43:	pop    ds
  411b44:	add    BYTE PTR [ebx+0x78bf1d89],dl
  411b4a:	cmp    DWORD PTR [ebx+0x7b9f7b0b],esp
  411b50:	sub    al,0x85
  411b52:	jnp    0x411bb5
  411b54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b55:	(bad)  
  411b56:	ret    
  411b57:	mov    dl,0xad
  411b59:	inc    ecx
  411b5a:	xchg   ebx,eax
  411b5b:	and    dh,BYTE PTR [edi-0x54]
  411b5e:	xor    bh,BYTE PTR [ebx-0x4e]
  411b61:	pop    edi
  411b62:	ss sub eax,0x508efe43
  411b68:	pop    ecx
  411b69:	stc    
  411b6a:	daa    
  411b6b:	mov    bh,0xa4
  411b6d:	repnz lods eax,DWORD PTR ds:[esi]
  411b6f:	inc    esi
  411b70:	mov    ah,dl
  411b72:	sub    al,0xf6
  411b74:	and    DWORD PTR [edi+eiz*8-0x4c],esi
  411b78:	sub    DWORD PTR [ecx+0x2],ebp
  411b7b:	adc    dl,ch
  411b7d:	les    ebp,FWORD PTR [eax-0x27]
  411b80:	out    0xcd,eax
  411b82:	cmp    eax,0x785bf30e
  411b87:	xchg   ebp,eax
  411b88:	jmp    0x411c03
  411b8a:	dec    eax
  411b8b:	lods   al,BYTE PTR ds:[esi]
  411b8c:	and    bl,BYTE PTR [ebx]
  411b8e:	xor    BYTE PTR [esi-0x26],ch
  411b91:	cli    
  411b92:	(bad)  
  411b93:	mov    cl,0x81
  411b95:	shl    al,1
  411b97:	into   
  411b98:	ins    BYTE PTR es:[edi],dx
  411b99:	mov    ecx,0x7228b79c
  411b9e:	test   al,0x41
  411ba0:	and    ax,0xaed5
  411ba4:	or     edi,esp
  411ba6:	ins    BYTE PTR es:[edi],dx
  411ba7:	sbb    eax,DWORD PTR [ebp-0x9]
  411baa:	cdq    
  411bab:	mov    ebx,0xda4faa0
  411bb0:	loopne 0x411b8d
  411bb2:	je     0x411b44
  411bb4:	iret   
  411bb5:	xchg   BYTE PTR [edx+0x47],dl
  411bb8:	mov    ds:0x75be4b4b,eax
  411bbd:	ins    BYTE PTR es:[edi],dx
  411bbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bbf:	xor    al,0x8e
  411bc1:	or     al,0x29
  411bc3:	ss scas eax,DWORD PTR es:[edi]
  411bc5:	sub    dh,bl
  411bc7:	xor    eax,0xf32eb492
  411bcc:	cdq    
  411bcd:	int3   
  411bce:	mov    bl,0xb
  411bd0:	imul   eax,DWORD PTR [ebx],0xffffffa1
  411bd3:	push   ebx
  411bd4:	xlat   BYTE PTR ds:[ebx]
  411bd5:	add    edx,DWORD PTR [edi]
  411bd7:	aas    
  411bd8:	mov    ds,WORD PTR ds:0x5a5cb11c
  411bde:	gs sti 
  411be0:	mov    DWORD PTR [eax+0x25],0xf31810c6
  411be7:	xchg   DWORD PTR [edi],ebp
  411be9:	sbb    edi,ebp
  411beb:	push   edx
  411bec:	pop    ds
  411bed:	jnp    0x411c12
  411bef:	jmp    0x411be4
  411bf1:	sar    DWORD PTR [edx+esi*2-0x58e62db7],cl
  411bf8:	out    0xc0,al
  411bfa:	or     al,0x18
  411bfd:	lds    edx,FWORD PTR [ebx+0x5f9e3bd7]
  411c03:	dec    esi
  411c04:	icebp  
  411c05:	mov    al,0xad
  411c07:	xchg   ebp,eax
  411c08:	mov    dl,bh
  411c0a:	mov    ah,0xa1
  411c0c:	rcr    BYTE PTR [ebx-0x4d],cl
  411c0f:	sub    esi,DWORD PTR [edx-0x4d]
  411c12:	call   0xbe0d:0x26feefd8
  411c19:	push   eax
  411c1a:	ja     0x411bb7
  411c1c:	in     eax,0x84
  411c1e:	ret    0x6b1e
  411c21:	mov    bh,0x16
  411c23:	les    edi,FWORD PTR ds:0xf67d3d16
  411c29:	ds jbe 0x411c54
  411c2c:	stos   DWORD PTR es:[edi],eax
  411c2d:	out    dx,eax
  411c2e:	repz jl 0x411c89
  411c31:	cmp    ecx,0x70
  411c34:	mov    ch,0x19
  411c36:	rcl    eax,cl
  411c38:	arpl   bp,ax
  411c3a:	(bad)  
  411c3b:	call   FWORD PTR [edi+ebx*2-0x27]
  411c3f:	aad    0x41
  411c41:	daa    
  411c42:	add    eax,0xf03a50a5
  411c47:	push   ds
  411c48:	retf   
  411c49:	(bad)  
  411c4a:	out    dx,al
  411c4b:	and    eax,eax
  411c4d:	(bad)  
  411c4e:	stc    
  411c4f:	pop    eax
  411c50:	dec    ebx
  411c51:	xchg   ebp,eax
  411c52:	icebp  
  411c53:	stc    
  411c54:	xlat   BYTE PTR ds:[ebx]
  411c55:	jmp    0x9ac356e0
  411c5a:	cs push esp
  411c5c:	inc    ecx
  411c5d:	mov    bl,0x61
  411c5f:	mov    BYTE PTR [eax+0x7a7ee262],dl
  411c65:	mov    al,ds:0x862fab51
  411c6a:	retf   
  411c6b:	mov    edx,0x79b2107a
  411c70:	loopne 0x411cc2
  411c72:	fld    QWORD PTR [eax-0x4a]
  411c75:	fbstp  TBYTE PTR [edx+0x20]
  411c78:	mov    esi,0x9a91f31d
  411c7d:	cdq    
  411c7e:	test   DWORD PTR [esi-0xf0ab8f1],ebx
  411c84:	inc    ebp
  411c85:	out    0xff,eax
  411c87:	mov    DWORD PTR [esi+0x63],esi
  411c8a:	aaa    
  411c8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c8c:	in     al,dx
  411c8d:	add    BYTE PTR [ecx+ecx*8],dl
  411c90:	stc    
  411c91:	stos   DWORD PTR es:[edi],eax
  411c92:	cmp    BYTE PTR [ecx+ecx*1-0x384ff14c],al
  411c99:	rcl    BYTE PTR [esi],0xc3
  411c9c:	add    BYTE PTR [ebx+0x58],al
  411c9f:	dec    eax
  411ca0:	scas   eax,DWORD PTR es:[edi]
  411ca1:	daa    
  411ca2:	cdq    
  411ca3:	jnp    0x411cbf
  411ca5:	pop    esi
  411ca6:	ret    
  411ca7:	xchg   ebp,eax
  411ca8:	sub    bh,dl
  411caa:	aam    0xb8
  411cac:	mov    bl,0xee
  411cae:	jecxz  0x411cc4
  411cb0:	retf   0xa726
  411cb3:	mov    bl,0x91
  411cb5:	lods   al,BYTE PTR ds:[esi]
  411cb6:	shl    cl,0xda
  411cb9:	(bad)  
  411cba:	jnp    0x411c55
  411cbc:	cmp    BYTE PTR [edx+0x7d],al
  411cbf:	xchg   BYTE PTR es:[ebp+0x5a],dh
  411cc3:	xchg   BYTE PTR [ecx],ah
  411cc5:	into   
  411cc6:	pushf  
  411cc7:	sub    BYTE PTR [eax+0x347511f5],ch
  411ccd:	mov    eax,0x5dcb8e63
  411cd2:	xlat   BYTE PTR ds:[ebx]
  411cd3:	lds    ecx,FWORD PTR [edi+0x1b]
  411cd6:	sbb    al,0xa0
  411cd8:	pop    ebp
  411cd9:	test   BYTE PTR [eax-0x66],bl
  411cdc:	(bad)  
  411cdd:	in     eax,0x1a
  411cdf:	mov    BYTE PTR [ebx+0x29d8fa0f],ch
  411ce5:	das    
  411ce6:	mov    edx,0xa89082c6
  411ceb:	or     eax,0xfcac5968
  411cf0:	test   al,0xd9
  411cf2:	push   ss
  411cf3:	ficom  DWORD PTR [esi+0x6e]
  411cf6:	add    ch,BYTE PTR [ecx]
  411cf8:	xor    eax,0x7361eedc
  411cfd:	xor    eax,0x434530f0
  411d02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d03:	xchg   ecx,eax
  411d04:	push   0x5e
  411d06:	mov    al,0x45
  411d08:	nop
  411d09:	div    BYTE PTR [edi+0x683dae7d]
  411d0f:	je     0x411cd6
  411d11:	jmp    FWORD PTR [edi-0x3e]
  411d14:	repnz xchg ebp,eax
  411d16:	cmp    edi,DWORD PTR [edx+0x34]
  411d19:	je     0x411d05
  411d1b:	stos   BYTE PTR es:[edi],al
  411d1c:	stos   DWORD PTR es:[edi],eax
  411d1d:	div    DWORD PTR [esi+0x97aaedb]
  411d23:	out    dx,ax
  411d25:	mov    DWORD PTR [eax*8+0x5ab7b5be],ecx
  411d2c:	and    BYTE PTR [edi-0xbdcd6ec],ch
  411d32:	cmp    eax,0xbc48024d
  411d37:	push   ebx
  411d38:	popf   
  411d39:	call   FWORD PTR [edi]
  411d3b:	das    
  411d3c:	div    BYTE PTR [edx]
  411d3e:	ficom  WORD PTR [eax]
  411d40:	pop    ecx
  411d41:	loopne 0x411d49
  411d43:	dec    BYTE PTR [eax-0x3e8a3faf]
  411d49:	mov    ch,0xf3
  411d4b:	shr    edi,0x25
  411d4e:	shr    DWORD PTR [ecx],0x51
  411d51:	mov    DWORD PTR [ebx+0x54],esi
  411d54:	dec    ebp
  411d55:	jmp    0x411d70
  411d57:	daa    
  411d58:	int    0x38
  411d5a:	(bad)  
  411d5b:	mov    eax,ds:0x10d36b1d
  411d60:	push   ds
  411d61:	xchg   ecx,eax
  411d62:	dec    edi
  411d63:	push   0x47280d3f
  411d68:	fist   WORD PTR [ebx+eax*1+0x230abd43]
  411d6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d70:	cs out 0x89,al
  411d73:	in     eax,dx
  411d74:	mov    edi,0xfbf6e30c
  411d79:	mov    WORD PTR [edi+0x5d04168f],ss
  411d7f:	push   ds
  411d80:	pop    es
  411d81:	std    
  411d82:	cmp    edx,ebp
  411d84:	retf   
  411d85:	gs jle 0x411d10
  411d88:	(bad)  
  411d89:	stc    
  411d8a:	in     al,0x6a
  411d8c:	out    0x19,al
  411d8e:	popa   
  411d8f:	cmc    
  411d90:	inc    esi
  411d91:	call   0xa14e873b
  411d96:	xor    al,0x5a
  411d98:	out    dx,al
  411d99:	sbb    al,0x1a
  411d9b:	mov    ds:0xb02e0c40,al
  411da0:	retf   
  411da1:	or     al,0xea
  411da3:	mov    esi,0xbcbf9337
  411da8:	adc    DWORD PTR [edi-0xde21504],ebx
  411dae:	or     esi,DWORD PTR [ebx+0xd]
  411db1:	mov    ah,0xce
  411db3:	fiadd  WORD PTR [edi+0x49ea70cb]
  411db9:	mov    eax,ds:0x278c7f1b
  411dbe:	dec    edx
  411dbf:	mov    ch,0x35
  411dc1:	and    al,0x17
  411dc3:	jmp    0xed5f:0x3af8c3dd
  411dca:	xchg   BYTE PTR [edx],dh
  411dcc:	and    dl,BYTE PTR [eax+edx*8-0x4d]
  411dd0:	jb     0x411dd0
  411dd2:	icebp  
  411dd3:	cmc    
  411dd4:	loope  0x411da7
  411dd6:	add    eax,0x23a6420
  411ddb:	pop    ecx
  411ddc:	or     eax,0xa348fa3f
  411de1:	das    
  411de2:	(bad)  
  411de3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411de4:	test   BYTE PTR cs:[esi+0x23167151],0x57
  411dec:	mov    ds:0x91ee0628,al
  411df1:	add    eax,0x5b458465
  411df6:	add    DWORD PTR [edx],esp
  411df8:	out    dx,eax
  411df9:	xrelease xchg BYTE PTR [edx+0x2e],dl
  411dfd:	mov    ecx,0xf354e376
  411e02:	mov    esp,0xec3aea1c
  411e07:	pop    es
  411e08:	ficom  DWORD PTR [eax]
  411e0a:	outs   dx,BYTE PTR ds:[esi]
  411e0b:	push   edx
  411e0c:	push   0xffffffea
  411e0e:	and    ecx,eax
  411e10:	mov    ebp,eax
  411e12:	adc    BYTE PTR [ebp+0x1c0c7313],bh
  411e18:	fidiv  WORD PTR [eax]
  411e1b:	or     eax,0xf9f0d4e2
  411e20:	jg     0x411e23
  411e22:	bnd call 0xd4ae778f
  411e28:	jbe    0x411dc0
  411e2a:	mov    edi,0x55227491
  411e2f:	lahf   
  411e30:	ins    DWORD PTR es:[edi],dx
  411e31:	jle    0x411e96
  411e33:	cmc    
  411e34:	push   cs
  411e35:	mov    dh,BYTE PTR [edx-0x27f5518]
  411e3b:	int    0xf6
  411e3d:	fidiv  DWORD PTR [edx+0x56]
  411e40:	test   BYTE PTR [ebx+eax*2+0xb],bh
  411e44:	mov    cl,0x90
  411e46:	mov    ah,dl
  411e48:	cmp    BYTE PTR [edi+esi*4],0x37
  411e4c:	icebp  
  411e4d:	lods   al,BYTE PTR ds:[esi]
  411e4e:	cmc    
  411e4f:	pushf  
  411e50:	arpl   WORD PTR [edx],dx
  411e52:	push   es
  411e53:	(bad)  
  411e54:	aam    0x75
  411e56:	ja     0x411df3
  411e58:	test   DWORD PTR [ebp+0x45],ebp
  411e5b:	jmp    0x8a1a:0x646ddde3
  411e62:	(bad)  
  411e64:	xor    eax,0x735ec000
  411e69:	in     eax,dx
  411e6a:	adc    eax,0xc26119b6
  411e6f:	aas    
  411e70:	push   ecx
  411e71:	aam    0xf1
  411e73:	sahf   
  411e74:	aaa    
  411e75:	dec    eax
  411e76:	dec    eax
  411e77:	mov    DWORD PTR [ebp+0x1aa6c047],esp
  411e7d:	fist   DWORD PTR [ecx+0x5000b11b]
  411e83:	add    esi,DWORD PTR [ecx-0x7166b7b1]
  411e89:	lahf   
  411e8a:	ins    DWORD PTR es:[edi],dx
  411e8b:	jp     0x411e1c
  411e8d:	xchg   bl,al
  411e8f:	inc    ecx
  411e90:	add    ecx,DWORD PTR [ecx-0x3b4a3a61]
  411e96:	sbb    DWORD PTR [esi],eax
  411e98:	cmp    BYTE PTR [esi+0x18],ah
  411e9b:	xor    eax,0x1d56f0be
  411ea0:	mov    BYTE PTR [edx+ebp*2],dl
  411ea3:	sub    bl,BYTE PTR [eax-0x71f39fd3]
  411ea9:	sub    DWORD PTR [eax+0x6f],0xd9fa857f
  411eb0:	push   edi
  411eb1:	jl     0x411efc
  411eb3:	cmp    BYTE PTR [ebx+edi*1+0x7e83f2e1],dl
  411eba:	lods   eax,DWORD PTR ds:[esi]
  411ebb:	js     0x411e8d
  411ebd:	stos   DWORD PTR es:[edi],eax
  411ebe:	fxch   st(5)
  411ec0:	mov    ebp,0xa6f34f21
  411ec5:	jo     0x411f0e
  411ec7:	push   ebp
  411ec8:	imul   sp,WORD PTR [edi+0x67],0xf0b8
  411ece:	mov    DWORD PTR [edx+0x693dcb07],edx
  411ed4:	adc    cl,bl
  411ed6:	mov    bl,0xe8
  411ed8:	jmp    0x411f1e
  411eda:	pop    ss
  411edb:	stc    
  411edc:	pop    edx
  411edd:	fld    TBYTE PTR [edx-0x5a]
  411ee0:	inc    eax
  411ee1:	and    ah,BYTE PTR [edi]
  411ee3:	mov    bh,0xe3
  411ee5:	dec    esp
  411ee6:	mov    dl,0xc7
  411ee8:	adc    edx,ebx
  411eea:	lock ja 0x411eb7
  411eed:	xor    DWORD PTR [eax+edi*4-0x20b75d2a],eax
  411ef4:	inc    edx
  411ef5:	mov    ds:0x862eeb99,al
  411efa:	inc    edx
  411efb:	aad    0xd0
  411efd:	mov    ebx,0x9d507947
  411f02:	jbe    0x411ea9
  411f04:	lock mov bh,0x9e
  411f07:	xor    eax,esp
  411f09:	stos   BYTE PTR es:[edi],al
  411f0a:	je     0x411ef3
  411f0c:	(bad)  
  411f0d:	jmp    0x66712ed5
  411f12:	push   0x185c68bf
  411f17:	adc    BYTE PTR [esp+eiz*8],0x21
  411f1b:	in     al,dx
  411f1c:	std    
  411f1d:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f1f:	das    
  411f20:	or     al,0x62
  411f22:	lods   eax,DWORD PTR ds:[esi]
  411f23:	cmp    al,ch
  411f25:	sar    DWORD PTR [esi+0x768e516d],cl
  411f2b:	xor    eax,0x45b11021
  411f30:	add    dl,BYTE PTR [ebp+esi*1-0x36951db6]
  411f37:	cmp    BYTE PTR [eax],dl
  411f39:	scas   eax,DWORD PTR es:[edi]
  411f3a:	loopne 0x411f0c
  411f3c:	pop    es
  411f3d:	popa   
  411f3e:	fwait
  411f3f:	aaa    
  411f40:	pusha  
  411f41:	out    0xe3,al
  411f43:	jmp    FWORD PTR [eax]
  411f45:	lods   al,BYTE PTR ds:[esi]
  411f46:	popf   
  411f47:	mov    ch,0x15
  411f49:	jne    0x411f0d
  411f4b:	sub    eax,0xca44402c
  411f50:	pop    edi
  411f51:	or     al,0x9d
  411f53:	int3   
  411f54:	mov    ebx,0x2c970c31
  411f59:	fcomp  QWORD PTR [edi-0x5be8800c]
  411f5f:	js     0x411f07
  411f61:	add    ecx,DWORD PTR [ebx]
  411f63:	ins    DWORD PTR es:[edi],dx
  411f64:	dec    eax
  411f65:	out    dx,al
  411f66:	ins    BYTE PTR es:[edi],dx
  411f67:	inc    ebp
  411f68:	popa   
  411f69:	(bad)  
  411f6a:	mov    bh,0x21
  411f6c:	push   cs
  411f6d:	jno    0x411fe7
  411f6f:	mov    ds:0x1ede4111,ax
  411f75:	add    bl,BYTE PTR [eax-0x4a]
  411f78:	adc    esp,DWORD PTR [ebp-0x3967dbb5]
  411f7e:	cmp    dl,al
  411f80:	mov    bh,0x94
  411f82:	test   al,0x55
  411f84:	clc    
  411f85:	(bad)
  411f89:	repz fxch st(6)
  411f8c:	in     al,0x54
  411f8e:	int    0xb0
  411f90:	xchg   edi,eax
  411f91:	bound  edi,QWORD PTR ds:0xc556bb14
  411f97:	cmp    edx,esp
  411f99:	std    
  411f9a:	pop    edx
  411f9b:	iret   
  411f9c:	dec    edx
  411f9d:	cs sub esp,esi
  411fa0:	cmp    eax,0x33eacbad
  411fa5:	mov    bl,ch
  411fa7:	inc    esi
  411fa8:	test   eax,0x228c71f6
  411fad:	(bad)  
  411fae:	fist   DWORD PTR [ebx-0x66401008]
  411fb4:	ror    DWORD PTR [ebx],cl
  411fb6:	inc    esp
  411fb7:	mov    eax,ds:0xe2d9fabe
  411fbc:	jb     0x411f9b
  411fbe:	mov    ch,0xea
  411fc0:	repnz cli 
  411fc2:	push   0x95229640
  411fc7:	loopne 0x411fad
  411fc9:	push   0x66
  411fcb:	mov    ch,0x21
  411fcd:	outs   dx,DWORD PTR ds:[esi]
  411fce:	add    bl,BYTE PTR ds:0x68e89606
  411fd4:	test   DWORD PTR [edi-0x471276b9],ecx
  411fda:	push   esi
  411fdb:	(bad)  
  411fde:	and    al,0x9c
  411fe0:	cli    
  411fe1:	mov    edi,0x7d730b87
  411fe6:	pushf  
  411fe7:	adc    BYTE PTR [edx-0x7fd2509a],ch
  411fed:	jmp    0xbbf2:0x59f145be
  411ff4:	sub    eax,0x39fc881f
  411ff9:	sbb    al,0xe
  411ffb:	sbb    BYTE PTR [ecx],ch
  411ffd:	jns    0x411f83
  411fff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412000:	xchg   ecx,eax
  412001:	aas    
  412002:	in     al,dx
  412003:	aad    0x8e
  412005:	mov    ebx,0x559c83b5
  41200a:	mov    edx,0x11677a47
  41200f:	inc    ebx
  412010:	dec    edx
  412011:	or     al,0x91
  412013:	ds push eax
  412015:	inc    esp
  412016:	lock iret 
  412018:	pop    eax
  412019:	push   ds
  41201a:	scas   eax,DWORD PTR es:[edi]
  41201b:	push   eax
  41201c:	mov    edx,0x31f7d8f1
  412021:	mov    dh,0x40
  412023:	jne    0x412097
  412025:	mov    ds:0x3fc9eede,al
  41202a:	inc    ebx
  41202b:	cmp    eax,0x3b59709e
  412030:	enter  0xaca3,0x6c
  412034:	or     DWORD PTR [edi+0x589f5e0b],edx
  41203a:	cmp    al,0xe1
  41203c:	xor    BYTE PTR [ebx+0x46],ah
  41203f:	jp     0x412049
  412041:	xchg   ebp,eax
  412042:	sub    BYTE PTR [edi-0x77],bl
  412045:	jae    0x412003
  412047:	and    DWORD PTR [ebp-0x3],edi
  41204a:	das    
  41204b:	pushf  
  41204c:	adc    al,0xeb
  41204e:	stos   BYTE PTR es:[edi],al
  41204f:	test   DWORD PTR ds:0x874282d3,edi
  412055:	or     DWORD PTR [edx],esi
  412057:	fdivp  st(7),st
  412059:	into   
  41205a:	mov    edx,0x445770e1
  41205f:	xchg   edi,eax
  412060:	pushf  
  412061:	pop    edx
  412062:	push   es
  412063:	retf   0x1d8b
  412066:	wbinvd 
  412068:	cmc    
  412069:	xor    eax,eax
  41206b:	cs pop ss
  41206d:	pop    eax
  41206e:	dec    ecx
  41206f:	jmp    0x9f66:0x59de6de7
  412076:	xor    BYTE PTR [ebx],al
  412078:	pop    ebx
  412079:	xor    al,0x1c
  41207b:	push   esi
  41207c:	nop    DWORD PTR es:[edx]
  412080:	ret    
  412081:	mov    esp,0x3803840a
  412086:	test   DWORD PTR [edi],eax
  412088:	shl    DWORD PTR [ecx+0x7ac2343b],0x9
  41208f:	das    
  412090:	stc    
  412091:	adc    al,0x7e
  412093:	cmp    eax,0x9c2e053a
  412098:	es aad 0xed
  41209b:	mov    eax,ds:0x5c00fa7b
  4120a0:	inc    ebx
  4120a1:	loop   0x412098
  4120a3:	push   es
  4120a4:	pusha  
  4120a5:	test   DWORD PTR [edx-0x2f],0xf50ef5a1
  4120ac:	mov    bh,0xb0
  4120ae:	fisttp WORD PTR [eax+0x8]
  4120b1:	xlat   BYTE PTR ds:[ebx]
  4120b2:	ret    0xa8ef
  4120b5:	repz test DWORD PTR [ebx],0xfedbfd15
  4120bc:	inc    eax
  4120bd:	inc    esi
  4120be:	das    
  4120bf:	push   0xd6ff47ce
  4120c4:	ror    DWORD PTR [edx],0x25
  4120c7:	inc    ebx
  4120c8:	cmp    cl,BYTE PTR [ecx-0x47996760]
  4120ce:	mov    DWORD PTR [edi-0x1a],esi
  4120d1:	mov    eax,0x8e52c1b9
  4120d6:	mov    DWORD PTR [ecx-0x2b359c16],ecx
  4120dc:	jl     0x4120f5
  4120de:	push   ebp
  4120df:	mov    bl,0x61
  4120e1:	jns    0x4120eb
  4120e3:	(bad)  
  4120e4:	mov    cl,0xa8
  4120e6:	jne    0x412140
  4120e8:	int    0x25
  4120ea:	shl    bh,cl
  4120ec:	or     DWORD PTR [esi+0x247d44f9],ecx
  4120f2:	ss ss pop ebx
  4120f5:	leave  
  4120f6:	and    esi,DWORD PTR ds:[edi+esi*2]
  4120fa:	xchg   bl,dl
  4120fc:	in     eax,0xc0
  4120fe:	jno    0x412107
  412100:	in     al,0xaf
  412102:	cld    
  412103:	repnz pop eax
  412105:	data16 sub al,0xe0
  412108:	ficom  WORD PTR [ebx+0x15]
  41210b:	mov    WORD PTR [esi],es
  41210d:	push   edi
  41210e:	sbb    esp,DWORD PTR [eax+eiz*1]
  412111:	aaa    
  412112:	pop    ss
  412113:	inc    ecx
  412114:	mov    al,0x90
  412116:	out    dx,eax
  412117:	inc    edi
  412118:	mov    DWORD PTR [ecx],ecx
  41211a:	cmp    eax,ecx
  41211c:	pop    es
  41211d:	mov    al,ds:0xfeeaf632
  412122:	cmp    dl,BYTE PTR [ecx-0x5e]
  412125:	fld    DWORD PTR ds:0x21d111d2
  41212b:	out    0xda,al
  41212d:	push   cs
  41212e:	ror    dh,cl
  412130:	dec    ecx
  412131:	sbb    ebx,DWORD PTR [esi-0x2d]
  412134:	jge    0x412105
  412136:	xor    DWORD PTR [ebp+0x1f],edi
  412139:	test   eax,ebx
  41213b:	icebp  
  41213c:	xchg   ebx,eax
  41213d:	mov    dh,0x2d
  41213f:	sub    BYTE PTR [eax-0x2a],bh
  412142:	jp     0x4120f1
  412144:	adc    edx,DWORD PTR [esi-0x72]
  412147:	mov    ch,0xa8
  412149:	push   0xffffff98
  41214b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41214c:	sbb    edx,DWORD PTR [edx]
  41214e:	stc    
  41214f:	mov    edi,0x469ce679
  412154:	mov    ebx,0x886fb042
  412159:	ja     0x412113
  41215b:	mov    ds:0xc919eb35,al
  412160:	scas   eax,DWORD PTR es:[edi]
  412161:	fmul   DWORD PTR ds:0x2899c90a
  412167:	inc    esp
  412168:	adc    eax,0xefdc2d40
  41216d:	push   edi
  41216e:	fmul   DWORD PTR [ebx*1-0x17c0cb96]
  412175:	popf   
  412176:	out    dx,eax
  412177:	cmp    eax,0x56edc49b
  41217c:	xor    edi,DWORD PTR [eax+edi*8]
  41217f:	jmp    0x4121d1
  412181:	lahf   
  412182:	and    eax,0x70ac7587
  412187:	enter  0xb39c,0x65
  41218b:	mov    eax,ds:0x1f1186da
  412190:	pop    esp
  412191:	in     al,0xf0
  412193:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412194:	into   
  412195:	mov    ds:0x879d1399,al
  41219a:	xor    al,0x14
  41219c:	cld    
  41219d:	sbb    eax,0x79854b1e
  4121a2:	pop    eax
  4121a3:	mov    cl,0x20
  4121a5:	stos   BYTE PTR es:[edi],al
  4121a6:	cmp    ah,ah
  4121a8:	inc    edx
  4121a9:	xlat   BYTE PTR ds:[ebx]
  4121aa:	mov    ds:0xac0fecd0,al
  4121af:	fwait
  4121b0:	in     eax,dx
  4121b1:	out    0x62,al
  4121b3:	xor    dh,BYTE PTR [ebx+0x7d]
  4121b6:	sub    edx,edi
  4121b8:	push   0x34
  4121ba:	test   al,0x69
  4121bc:	mov    cl,0x1b
  4121be:	test   BYTE PTR [edi-0x63],ch
  4121c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121c2:	outs   dx,BYTE PTR ds:[esi]
  4121c3:	(bad)  
  4121c4:	jae    0x41220c
  4121c6:	(bad)  
  4121c7:	ja     0x41216f
  4121c9:	enter  0x97d9,0x29
  4121cd:	push   esi
  4121ce:	or     eax,0xd440e982
  4121d3:	mov    cl,0x55
  4121d5:	sar    BYTE PTR [ebx],cl
  4121d7:	jecxz  0x412180
  4121d9:	lds    edi,FWORD PTR [ebx+eax*4-0xd]
  4121dd:	call   0x9072958c
  4121e2:	nop
  4121e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121e4:	retf   0x3563
  4121e7:	in     al,0x3e
  4121e9:	mov    edi,DWORD PTR [ecx]
  4121eb:	jmp    0x412195
  4121ed:	sub    BYTE PTR [eax],al
  4121ef:	mov    edx,0xf80c4766
  4121f4:	mov    ds:0xd3cffac5,al
  4121f9:	xchg   edi,eax
  4121fa:	shl    DWORD PTR [ebp+eiz*2+0x27],0xbc
  4121ff:	fisub  DWORD PTR [eax-0x4f]
  412202:	fwait
  412203:	sbb    DWORD PTR [esi],ebp
  412205:	into   
  412206:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412207:	dec    esp
  412208:	pop    edi
  412209:	inc    eax
  41220a:	add    eax,0x9b1da9b7
  41220f:	mov    ch,0x42
  412211:	adc    DWORD PTR [edx+0x43757eab],eax
  412217:	scas   eax,DWORD PTR es:[edi]
  412218:	dec    edx
  412219:	push   esi
  41221a:	aaa    
  41221b:	mov    ah,BYTE PTR [ecx-0x6f]
  41221e:	pop    ebx
  41221f:	outs   dx,DWORD PTR ds:[esi]
  412220:	adc    BYTE PTR [edi-0x1ae0faf5],dh
  412226:	(bad)  
  412227:	out    dx,eax
  412228:	sub    bl,BYTE PTR [eax+eiz*8+0x41]
  41222c:	pop    ebx
  41222d:	pop    edi
  41222e:	dec    ebp
  41222f:	test   DWORD PTR [ecx],0xa39accba
  412235:	int3   
  412236:	call   0x7d1402ed
  41223b:	retf   
  41223c:	(bad)  
  41223e:	enter  0x277b,0xb8
  412242:	rol    DWORD PTR [ebx+0x5a],0xfd
  412246:	stc    
  412247:	dec    esp
  412248:	in     al,dx
  412249:	xchg   esi,eax
  41224a:	sub    eax,DWORD PTR [eax]
  41224c:	dec    ebp
  41224d:	push   eax
  41224e:	lahf   
  41224f:	pusha  
  412250:	cmc    
  412251:	dec    edi
  412252:	jmp    DWORD PTR [edx+0x1b805311]
  412258:	fst    DWORD PTR [edi+eiz*2-0x25]
  41225c:	mov    ebx,0xbe43ca2e
  412261:	jge    0x41221b
  412263:	mov    al,0x6c
  412265:	test   BYTE PTR [edx+ebp*1+0x14e22dca],dh
  41226c:	mov    ebp,0xe26e932a
  412271:	sub    al,0xea
  412273:	test   BYTE PTR [edi-0x32],0xb5
  412277:	mov    bl,0xef
  412279:	pop    ebx
  41227a:	fs mov edi,0xea2c60de
  412280:	mov    dh,0xc4
  412282:	popf   
  412283:	nop
  412284:	aam    0xd1
  412286:	xor    DWORD PTR [esi+0x6a],ebx
  412289:	push   ecx
  41228a:	jl     0x4122bc
  41228c:	dec    ebx
  41228d:	lahf   
  41228e:	call   DWORD PTR [ecx+0x4b]
  412291:	popf   
  412292:	adc    cl,BYTE PTR [esi]
  412294:	cli    
  412295:	mov    ds:0xa6f6a386,eax
  41229a:	rol    BYTE PTR [edi-0x274293f0],1
  4122a0:	outs   dx,BYTE PTR ds:[esi]
  4122a1:	imul   edi,DWORD PTR [eax+ebp*4],0x2c
  4122a5:	loopne 0x41226b
  4122a7:	xlat   BYTE PTR ds:[ebx]
  4122a8:	stc    
  4122a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122aa:	mov    esp,0xd4fba1ec
  4122af:	jnp    0x412274
  4122b1:	pushf  
  4122b2:	mov    edi,DWORD PTR [ebp+0x21]
  4122b5:	xchg   BYTE PTR [edx+0x7a62d484],cl
  4122bb:	or     esp,DWORD PTR [ecx+0x31]
  4122be:	sbb    al,BYTE PTR [edi+ecx*4]
  4122c1:	pop    ds
  4122c2:	jmp    0xae63a786
  4122c7:	jle    0x4122ec
  4122c9:	inc    esp
  4122ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122cb:	aad    0xae
  4122cd:	jmp    0x9581b4e1
  4122d2:	rcr    DWORD PTR [ebp+0x66],0x24
  4122d6:	mov    ebx,0x31a0395e
  4122db:	imul   ebx,DWORD PTR [ebp+0x40],0x21
  4122df:	xchg   DWORD PTR [esi-0x36],ebp
  4122e2:	test   al,0x82
  4122e4:	push   es
  4122e5:	pop    es
  4122e6:	adc    eax,0x37fc4ad3
  4122eb:	inc    esi
  4122ec:	jns    0x4122fc
  4122ee:	sbb    DWORD PTR [esi+0x7c5eaec5],0x956f27b9
  4122f8:	sbb    eax,0x402bcb4
  4122fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122fe:	stos   DWORD PTR es:[edi],eax
  4122ff:	cs push ebp
  412301:	push   ebx
  412302:	add    al,0xfb
  412304:	lea    ebx,[edx]
  412306:	std    
  412307:	int    0xac
  412309:	sar    BYTE PTR [esi+0x46],0x77
  41230d:	or     ch,BYTE PTR [ebp+0x11]
  412310:	in     eax,0x80
  412312:	ins    DWORD PTR es:[edi],dx
  412313:	js     0x4122b0
  412315:	and    ebx,DWORD PTR [ebx+0x550b8a8f]
  41231b:	mov    esp,0x1d8fc2d
  412320:	push   ebx
  412321:	inc    esp
  412322:	dec    ebx
  412323:	fs out dx,al
  412325:	loop   0x4122a7
  412327:	dec    ecx
  412328:	mov    DWORD PTR [ecx],ecx
  41232a:	push   ds
  41232b:	nop
  41232c:	test   eax,0x23576355
  412331:	in     eax,dx
  412332:	in     eax,0xf9
  412334:	loope  0x4122c9
  412336:	inc    esi
  412337:	adc    ecx,DWORD PTR [eax-0x6d7abd90]
  41233d:	mov    ebx,0x6a0d0fdc
  412342:	adc    DWORD PTR [edi+0x75],esi
  412345:	gs push ecx
  412347:	mov    ebp,0xa8966120
  41234c:	dec    eax
  41234d:	enter  0xc15c,0x9d
  412351:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412352:	hlt    
  412353:	ret    
  412354:	mov    edx,0xd7475f2
  412359:	scas   eax,DWORD PTR es:[edi]
  41235a:	scas   al,BYTE PTR es:[edi]
  41235b:	mov    eax,ds:0xeac3649a
  412360:	fwait
  412361:	mov    bh,0xe0
  412363:	sub    BYTE PTR [edi+eax*8+0x4c0c8955],bl
  41236a:	dec    eax
  41236b:	outs   dx,BYTE PTR ds:[esi]
  41236c:	add    DWORD PTR [ebx],ecx
  41236e:	pop    edx
  41236f:	rcl    esp,cl
  412371:	imul   BYTE PTR [ebx]
  412373:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412374:	jmp    FWORD PTR [edx+0x43]
  412377:	scas   eax,DWORD PTR es:[edi]
  412378:	fidivr WORD PTR [edx+0x7]
  41237b:	mov    es,WORD PTR [edi+ebx*1-0x4633e4b0]
  412382:	sbb    eax,0x2b0757cf
  412387:	aam    0xd2
  412389:	push   edx
  41238a:	test   al,0x4b
  41238c:	dec    esp
  41238d:	cmc    
  41238e:	repnz repnz cmp al,0x22
  412392:	stos   BYTE PTR es:[edi],al
  412393:	add    al,0x5c
  412395:	and    al,BYTE PTR [edx+0x2d8d227e]
  41239b:	mov    al,ah
  41239d:	jns    0x412398
  41239f:	jb     0x412403
  4123a1:	or     BYTE PTR [eax-0x70],dl
  4123a4:	int    0x94
  4123a6:	mov    ecx,DWORD PTR [esi]
  4123a8:	xor    eax,DWORD PTR [bx+di]
  4123ab:	stos   DWORD PTR es:[edi],eax
  4123ac:	test   al,0xce
  4123ae:	sar    BYTE PTR [edx+0x64],1
  4123b1:	cmp    edx,ecx
  4123b3:	ror    BYTE PTR [ecx+edi*8],1
  4123b6:	inc    eax
  4123b7:	xor    dl,0xe9
  4123ba:	push   ebx
  4123bb:	or     BYTE PTR [ecx],ch
  4123bd:	xchg   ecx,eax
  4123be:	jno    0x412342
  4123c0:	aas    
  4123c1:	loope  0x412375
  4123c3:	and    esi,DWORD PTR [ecx-0x3fb6f2eb]
  4123c9:	cli    
  4123ca:	repz mov cl,0xfc
  4123cd:	mov    ds:0xcfe6af53,eax
  4123d2:	jg     0x412409
  4123d4:	inc    eax
  4123d5:	mov    edx,0x64d9089c
  4123da:	sbb    ecx,DWORD PTR [edi-0x3bcee99d]
  4123e0:	adc    dl,BYTE PTR [esi-0x490ac514]
  4123e6:	xchg   esp,eax
  4123e7:	scas   al,BYTE PTR es:[edi]
  4123e8:	sbb    esi,DWORD PTR [ebp-0xc52f236]
  4123ee:	addr16 jo 0x412383
  4123f1:	jle    0x412412
  4123f3:	mov    eax,0x38156620
  4123f8:	les    edx,FWORD PTR [ebp+edx*8-0x49]
  4123fc:	mov    eax,0x9154cd65
  412401:	push   ebp
  412402:	fnstsw WORD PTR [edi+0x5f1d08ba]
  412408:	arpl   WORD PTR [edx],cx
  41240a:	test   edx,edx
  41240c:	stc    
  41240d:	mov    eax,0xd5202c68
  412412:	add    bl,bh
  412414:	pop    esi
  412415:	inc    esi
  412416:	test   esp,0xc23ebd05
  41241c:	cmp    BYTE PTR [eax-0xf],ch
  41241f:	sahf   
  412420:	push   ebx
  412421:	sahf   
  412422:	(bad)  
  412423:	retf   0x6113
  412426:	push   ebx
  412427:	inc    esi
  412428:	add    al,0x60
  41242a:	mov    BYTE PTR [ecx+0x7a68ddde],cl
  412430:	mov    dl,ah
  412432:	xor    ebx,DWORD PTR [esi+0x561b4e6a]
  412438:	(bad)  
  412439:	in     al,dx
  41243a:	pop    esi
  41243b:	xor    ecx,DWORD PTR [ebx-0x5c39e339]
  412441:	xor    DWORD PTR [eax+0x6d72d3d3],0x2356779b
  41244b:	mov    al,0x8f
  41244d:	aas    
  41244e:	sbb    al,BYTE PTR [esi]
  412450:	cmp    ebp,edx
  412452:	out    0x9f,eax
  412454:	jle    0x4124a8
  412456:	int    0x96
  412458:	sahf   
  412459:	mov    bh,0xe9
  41245b:	push   es
  41245c:	jb     0x4124c6
  41245e:	sti    
  41245f:	sti    
  412460:	sbb    edi,DWORD PTR ss:[ecx-0x172126e8]
  412467:	fstp   QWORD PTR [ebp-0x3ed7176]
  41246d:	call   0x71831ceb
  412472:	inc    ebx
  412473:	or     ebx,DWORD PTR [edi+esi*8+0x20]
  412477:	pop    edi
  412478:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412479:	xchg   edx,eax
  41247a:	ja     0x41240e
  41247c:	adc    eax,0x7a6679ab
  412481:	lea    ecx,[edx]
  412483:	cmp    al,0x1c
  412485:	retf   
  412486:	add    ch,BYTE PTR [esi-0x183f111c]
  41248c:	in     al,dx
  41248d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41248e:	and    ch,ah
  412490:	imul   esp,DWORD PTR [eax],0x946c1bd9
  412496:	into   
  412497:	ins    BYTE PTR es:[edi],dx
  412498:	add    al,0x4b
  41249a:	clc    
  41249b:	dec    esp
  41249c:	pop    ecx
  41249d:	dec    eax
  41249e:	mov    esi,0x74b3cae3
  4124a3:	or     al,0xab
  4124a5:	mov    ds:0x5dc6d38,al
  4124aa:	icebp  
  4124ab:	out    0x7d,eax
  4124ad:	push   ss
  4124ae:	cmp    BYTE PTR [esi+0x16],al
  4124b1:	out    dx,al
  4124b2:	or     BYTE PTR [ecx+ebp*8-0x6f],cl
  4124b6:	mov    edx,0x7d5a18cc
  4124bb:	leave  
  4124bc:	mov    al,0x2
  4124be:	inc    edi
  4124bf:	jo     0x41244d
  4124c1:	push   ebx
  4124c2:	outs   dx,BYTE PTR ds:[esi]
  4124c3:	mov    ecx,0x238f6b14
  4124c8:	and    eax,0xda0c5a78
  4124cd:	and    DWORD PTR [edi+0x28ed8237],0xa4ba238
  4124d7:	aad    0xa0
  4124d9:	xor    ebx,esp
  4124db:	fnstenv [esi-0x7d62fd8d]
  4124e1:	pushf  
  4124e2:	int    0x2
  4124e4:	mov    ds:0x1c4350a0,al
  4124e9:	sbb    eax,0x93bb2824
  4124ee:	dec    eax
  4124ef:	and    al,0xe8
  4124f1:	jae    0x412540
  4124f3:	jns    0x412531
  4124f5:	mov    dh,0x47
  4124f7:	mov    BYTE PTR [esi+0x38],bl
  4124fa:	mov    bl,0x7e
  4124fc:	jne    0x412575
  4124fe:	pop    ebx
  4124ff:	mov    esp,0xc4ada6db
  412504:	imul   esi,DWORD PTR [esi-0x5c],0x649c8681
  41250b:	int    0xd5
  41250d:	or     al,BYTE PTR [edx+0x5]
  412510:	mov    dh,0x4b
  412512:	and    eax,0x3f8f758c
  412517:	mov    eax,0xea962485
  41251c:	arpl   WORD PTR [eax],si
  41251e:	dec    edi
  41251f:	jge    0x4124dc
  412521:	cwde   
  412522:	ret    
  412523:	or     al,0xf0
  412525:	dec    edx
  412526:	push   ebx
  412527:	push   esp
  412528:	mov    edx,0xaf99075a
  41252d:	xchg   ebp,eax
  41252e:	test   BYTE PTR [ebx-0x35462b48],dl
  412534:	sub    dh,dh
  412536:	jbe    0x412587
  412538:	and    eax,0x14da8ba8
  41253d:	(bad)  
  41253e:	pushw  0xc33d
  412542:	mov    eax,ds:0xd6a828b8
  412547:	sub    eax,0x66495bc5
  41254c:	loope  0x4124e8
  41254e:	ret    
  41254f:	leave  
  412550:	xchg   edx,eax
  412551:	push   0xebfc43f8
  412556:	and    eax,0xbc94df52
  41255b:	xchg   edx,eax
  41255c:	mov    ebp,0x37828460
  412561:	mov    cl,al
  412563:	xor    eax,0xc724e055
  412568:	xchg   DWORD PTR [ebx-0x7057133a],eax
  41256e:	lea    edi,[eax+0x1167f5dc]
  412574:	es and esi,ebp
  412577:	cld    
  412578:	adc    al,0x93
  41257a:	xlat   BYTE PTR ds:[ebx]
  41257b:	jg     0x41255e
  41257d:	pop    esp
  41257e:	adc    edi,edx
  412580:	popf   
  412581:	es repnz dec edi
  412584:	dec    esp
  412585:	push   ecx
  412586:	in     eax,0x1
  412588:	(bad)  
  41258a:	rcl    DWORD PTR [edx],0x1f
  41258d:	je     0x4125c4
  41258f:	scas   al,BYTE PTR es:[edi]
  412590:	push   cs
  412591:	push   esp
  412592:	sub    al,0xbf
  412594:	xor    eax,esp
  412596:	jmp    0x412576
  412598:	jp     0x412551
  41259a:	ror    bh,cl
  41259c:	xor    DWORD PTR [edi],edi
  41259e:	daa    
  41259f:	in     al,dx
  4125a0:	inc    ebp
  4125a1:	xor    esp,DWORD PTR [eax+edi*2]
  4125a4:	and    cl,ah
  4125a6:	jmp    0x412614
  4125a8:	push   esi
  4125a9:	ins    BYTE PTR es:[edi],dx
  4125aa:	xor    BYTE PTR [eax-0x20],cl
  4125ad:	rcl    DWORD PTR [ecx],cl
  4125af:	mov    ch,0xbf
  4125b1:	mov    bh,0xa6
  4125b3:	and    bl,BYTE PTR [esi-0x4b]
  4125b6:	cli    
  4125b7:	cmp    BYTE PTR [edi+0x62b8da88],bl
  4125bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125be:	imul   edx,DWORD PTR [edi+0x6b5d436b],0xa3f21259
  4125c8:	rcr    BYTE PTR [eax+ecx*2],cl
  4125cb:	dec    edi
  4125cc:	pusha  
  4125cd:	pushf  
  4125ce:	cmp    eax,0x176bd577
  4125d3:	xlat   BYTE PTR ds:[ebx]
  4125d4:	dec    ebx
  4125d5:	push   eax
  4125d6:	loop   0x41262a
  4125d8:	test   DWORD PTR [edx],0x7ec40d6b
  4125de:	mov    edi,0x7a07c07c
  4125e3:	mov    BYTE PTR [ebx+0x26],0xac
  4125e7:	cli    
  4125e8:	cdq    
  4125e9:	sub    eax,ecx
  4125eb:	jmp    0x4125a0
  4125ed:	lock ja 0x4125e5
  4125f0:	inc    ebp
  4125f1:	test   BYTE PTR [eax+0x3cc6a1fe],0xf6
  4125f8:	inc    ebx
  4125f9:	ret    
  4125fa:	test   BYTE PTR [eax+esi*1-0x6985f22f],dl
  412601:	scas   eax,DWORD PTR es:[edi]
  412602:	fcomp  QWORD PTR [esi-0x50]
  412605:	jge    0x412679
  412607:	fcom   DWORD PTR [esi+edx*2-0x64]
  41260b:	and    edx,0x21
  41260e:	mov    ecx,0x187e0a22
  412613:	loope  0x412673
  412615:	ss scas al,BYTE PTR es:[edi]
  412617:	push   0xffffff9e
  412619:	mov    ds:0xcb014a8d,eax
  41261e:	cs inc ecx
  412620:	leave  
  412621:	popf   
  412622:	mov    al,ds:0x225cd72c
  412627:	push   eax
  412628:	es push 0xebd76d59
  41262e:	xchg   BYTE PTR [ebp+0x6e],bl
  412631:	int3   
  412632:	mov    ebp,ecx
  412634:	hlt    
  412635:	inc    ecx
  412636:	aad    0x76
  412638:	adc    ah,ch
  41263a:	add    eax,0x48f6335d
  41263f:	jp     0x412615
  412641:	scas   al,BYTE PTR es:[edi]
  412642:	cdq    
  412643:	or     DWORD PTR ds:0x5f375daf,edx
  412649:	add    esi,DWORD PTR [ecx+0x299d160b]
  41264f:	and    bh,BYTE PTR [eax]
  412651:	repnz (bad) 
  412653:	repnz lods al,BYTE PTR ds:[esi]
  412656:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412657:	lock push cs
  412659:	jg     0x412680
  41265b:	cmp    eax,0x95797723
  412660:	inc    esi
  412661:	cdq    
  412662:	mov    esp,ebx
  412664:	lock xor bh,BYTE PTR [ecx+0x7f]
  412668:	xlat   BYTE PTR ds:[ebx]
  412669:	pusha  
  41266a:	jle    0x4126ce
  41266c:	fcom   DWORD PTR [esi-0x18]
  41266f:	cmc    
  412670:	fisttp QWORD PTR [edx+ebx*2-0x34ea2f7f]
  412677:	mov    dl,0xd0
  412679:	add    edx,esi
  41267b:	inc    ebx
  41267c:	inc    edx
  41267d:	push   esi
  41267e:	fnsave [edi]
  412680:	fsub   DWORD PTR [eax+0x39]
  412683:	push   cs
  412684:	inc    edi
  412685:	dec    edx
  412686:	and    edx,DWORD PTR [ebx+0x4a]
  412689:	mov    BYTE PTR [edx],dh
  41268b:	jle    0x4126f2
  41268d:	xchg   esp,eax
  41268e:	sub    DWORD PTR [esi-0x4d],eax
  412691:	jmp    FWORD PTR [esi+0x1246985f]
  412697:	dec    ebp
  412698:	xlat   BYTE PTR ds:[ebx]
  412699:	psubusb mm1,QWORD PTR [ebx-0x5e9c68b1]
  4126a0:	test   eax,0xfe10830a
  4126a5:	pop    esp
  4126a6:	xor    al,0xc6
  4126a8:	adc    BYTE PTR [ebp+0x49],0xaf
  4126ac:	push   es
  4126ad:	stc    
  4126ae:	jnp    0x4126de
  4126b0:	sbb    edx,esi
  4126b2:	dec    ebx
  4126b3:	mov    al,0xe3
  4126b5:	xor    esp,DWORD PTR [ebp+0x44]
  4126b8:	xchg   ebx,eax
  4126b9:	aas    
  4126ba:	(bad)  
  4126bb:	scas   al,BYTE PTR es:[edi]
  4126bc:	enter  0x8d9d,0x2f
  4126c0:	mov    ah,0xff
  4126c2:	xor    eax,0x6f044b3a
  4126c7:	and    al,0xda
  4126c9:	pop    ebx
  4126ca:	hlt    
  4126cb:	je     0x41269f
  4126cd:	push   esi
  4126ce:	ins    BYTE PTR es:[edi],dx
  4126cf:	aam    0xb
  4126d1:	retf   
  4126d2:	mov    ecx,es
  4126d4:	xchg   edi,eax
  4126d5:	xchg   edx,eax
  4126d6:	jae    0x41270d
  4126d8:	mov    ah,0xe8
  4126da:	fstp   QWORD PTR [eax]
  4126dc:	mov    al,ds:0x5cf38c78
  4126e1:	mov    ebx,0x818fda4a
  4126e6:	ret    
  4126e7:	and    al,BYTE PTR [bx]
  4126ea:	mov    ebx,0x5b7f523a
  4126ef:	jmp    DWORD PTR [eax]
  4126f1:	sbb    al,0x18
  4126f3:	(bad)  
  4126f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126f5:	jmp    0xd31ec88a
  4126fa:	cmp    BYTE PTR [esi],0x67
  4126fd:	aad    0x6
  4126ff:	inc    edi
  412700:	push   ds
  412701:	mov    ecx,0xb4dd2559
  412706:	add    esi,edx
  412708:	or     ebp,DWORD PTR [ecx-0x4c0f3c45]
  41270e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41270f:	fdivr  DWORD PTR [edi+eax*2-0x7f3d80ce]
  412716:	pop    ds
  412717:	fisub  WORD PTR [esp+eax*8-0x28]
  41271b:	(bad)  
  41271d:	sub    ebp,edx
  41271f:	fucomi st,st(5)
  412721:	test   al,0x4c
  412723:	sub    DWORD PTR [esi+0x3a294759],eax
  412729:	xor    eax,0x9e1c265c
  41272e:	dec    ecx
  41272f:	jae    0x412798
  412731:	shr    ecx,cl
  412733:	jle    0x4126bd
  412735:	sub    al,0xc8
  412737:	(bad)  
  412738:	(bad)  
  41273a:	jne    0x41279b
  41273c:	addr16 in eax,0x7f
  41273f:	repnz pop esp
  412741:	lea    ebx,[ecx+edi*4]
  412744:	(bad)  
  412745:	sbb    eax,DWORD PTR [edx-0x1a]
  412748:	scas   eax,DWORD PTR es:[edi]
  412749:	cmp    eax,0x2c72d15a
  41274e:	out    0x9c,eax
  412750:	out    dx,eax
  412751:	xor    bh,dl
  412753:	dec    edi
  412754:	xchg   DWORD PTR [ebx-0x8],eax
  412757:	xchg   DWORD PTR [eax-0x2a25f4a9],esi
  41275d:	xchg   edx,eax
  41275e:	xchg   ebp,eax
  41275f:	pop    eax
  412760:	cmp    bh,BYTE PTR [edx+0xdfb6459]
  412766:	adc    ebp,DWORD PTR [esi+0x59]
  412769:	(bad)  
  41276a:	adc    DWORD PTR [ebx+0x2715df25],ecx
  412770:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412771:	mov    ah,0x7a
  412773:	inc    edx
  412774:	je     0x412786
  412776:	inc    esp
  412777:	out    0x17,al
  412779:	pushf  
  41277a:	ficomp DWORD PTR [ebx]
  41277c:	add    ebx,DWORD PTR [edi+ecx*2-0x2d49dbd1]
  412783:	or     DWORD PTR [edi],esp
  412785:	xor    esi,ebx
  412787:	ds xchg esi,eax
  412789:	mov    eax,0x3cf87132
  41278e:	dec    ecx
  41278f:	(bad)  
  412790:	xor    ecx,edi
  412792:	xchg   DWORD PTR es:[ecx+0x41],ecx
  412796:	xchg   edi,eax
  412797:	xchg   esi,eax
  412798:	inc    esi
  412799:	(bad)  
  41279a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41279b:	fldcw  WORD PTR [ebp+0x1749ebb7]
  4127a1:	mov    bl,bh
  4127a3:	pusha  
  4127a4:	pop    ecx
  4127a5:	xchg   esi,eax
  4127a6:	sbb    BYTE PTR [ebx+0x14],0x4e
  4127aa:	sub    BYTE PTR [edi+ebp*8],cl
  4127ad:	shl    DWORD PTR ds:0x3c72c52c,1
  4127b3:	inc    esp
  4127b4:	je     0x41274d
  4127b6:	sbb    eax,0x73fadf50
  4127bb:	(bad)  
  4127bc:	call   0x3382:0x747e204f
  4127c3:	pop    es
  4127c4:	cld    
  4127c5:	dec    esi
  4127c6:	repnz ds sbb eax,0xe71baa6a
  4127cd:	xchg   BYTE PTR [ecx+ebx*4+0x77a32069],ch
  4127d4:	sub    ebx,DWORD PTR [eax+0x67]
  4127d7:	in     al,0x6f
  4127d9:	add    eax,0x880e2275
  4127de:	push   ss
  4127df:	jo     0x412802
  4127e1:	es add esp,0x38
  4127e5:	out    0xd9,al
  4127e7:	mov    edx,0xa25eab64
  4127ec:	push   eax
  4127ed:	dec    ebp
  4127ee:	push   ecx
  4127ef:	mov    ?,WORD PTR [eax-0x66b742e1]
  4127f5:	fcom   QWORD PTR [esi]
  4127f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127f8:	add    cl,BYTE PTR ds:0x3a190c00
  4127fe:	clc    
  4127ff:	xlat   BYTE PTR ds:[ebx]
  412800:	and    eax,0x73288bf7
  412805:	xor    BYTE PTR [ebx+0x6f],bl
  412808:	jnp    0x412841
  41280a:	push   edi
  41280b:	fidivr WORD PTR [ecx+ecx*4]
  41280e:	pop    esi
  41280f:	adc    dl,BYTE PTR [edx-0x18]
  412812:	fisttp QWORD PTR [ebp+0x36]
  412815:	and    al,0xaa
  412817:	(bad)  
  412818:	(bad)  
  412819:	or     al,0x1a
  41281b:	push   cs
  41281c:	inc    ebp
  41281d:	pop    ss
  41281e:	arpl   WORD PTR [ebp-0x179e0558],bx
  412824:	and    eax,DWORD PTR [edi-0x41]
  412827:	push   esp
  412828:	call   0x882f2edc
  41282d:	mov    edi,DWORD PTR [esi]
  41282f:	(bad)  
  412830:	lea    edx,[ebx-0x23]
  412833:	cmp    dl,BYTE PTR [edx+ecx*1-0x36d4140d]
  41283a:	outs   dx,BYTE PTR ds:[esi]
  41283b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41283c:	aam    0x17
  41283e:	scas   eax,DWORD PTR es:[edi]
  41283f:	hlt    
  412840:	daa    
  412841:	adc    ch,BYTE PTR [esi]
  412843:	mov    eax,ds:0x7be6933a
  412848:	in     eax,dx
  412849:	shl    DWORD PTR [eax-0x5],0x5d
  41284d:	(bad)  [edx]
  41284f:	push   es
  412850:	loope  0x41285b
  412852:	add    ch,al
  412854:	pop    ss
  412855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412856:	or     ch,bh
  412858:	test   DWORD PTR [esi+0x4a5d7a8d],ecx
  41285e:	mov    ebp,edx
  412860:	fisub  DWORD PTR [ebx-0xc]
  412863:	inc    ecx
  412864:	mov    ebx,0x57a64845
  412869:	pushf  
  41286a:	ja     0x4128c2
  41286c:	sbb    al,0x8c
  41286e:	int    0xd4
  412870:	daa    
  412871:	xchg   al,bh
  412873:	jge    0x4128dd
  412875:	sub    eax,0x5b584eaf
  41287a:	mov    edx,0x42283a87
  41287f:	pop    es
  412880:	add    BYTE PTR [edi+eiz*4],bl
  412883:	xchg   DWORD PTR [esi-0x43],ebx
  412886:	lock fidiv WORD PTR [ebp-0x58]
  41288a:	mov    al,ds:0xda10a8da
  41288f:	xchg   ecx,eax
  412890:	sub    esp,DWORD PTR [ecx-0x7c]
  412893:	mov    ebx,0xd5f5d1b8
  412898:	in     eax,0x98
  41289a:	lea    ecx,[eax-0x19906ff6]
  4128a0:	xchg   DWORD PTR [ebp+0x6a],edx
  4128a3:	out    dx,al
  4128a4:	leave  
  4128a5:	inc    edi
  4128a6:	mov    dl,0xa0
  4128a8:	lods   eax,DWORD PTR ds:[esi]
  4128a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128aa:	mov    BYTE PTR [ebx+0x669f17aa],cl
  4128b0:	scas   eax,DWORD PTR es:[edi]
  4128b1:	xchg   esp,eax
  4128b2:	xor    bh,BYTE PTR [ebp+0x6600ec26]
  4128b8:	adc    al,0xf0
  4128ba:	and    eax,0x318c64c3
  4128bf:	jbe    0x412873
  4128c1:	clc    
  4128c2:	adc    BYTE PTR [ebp*8+0x5eeed39c],0xb8
  4128ca:	adc    dl,BYTE PTR [esi+0x57]
  4128cd:	sub    DWORD PTR [ebp-0x71b6ad80],esp
  4128d3:	in     eax,0x79
  4128d5:	mov    cl,0xf7
  4128d7:	enter  0x2412,0x56
  4128db:	push   esi
  4128dc:	pop    esi
  4128dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128de:	aas    
  4128df:	mov    bh,0x9a
  4128e1:	or     BYTE PTR [ecx+0x8],cl
  4128e4:	daa    
  4128e5:	mov    esi,0xf4406a00
  4128ea:	cwde   
  4128eb:	sti    
  4128ec:	fdivr  DWORD PTR [ebx]
  4128ee:	xor    bl,BYTE PTR [ecx-0x33cfd95e]
  4128f4:	xchg   edi,eax
  4128f5:	aad    0xad
  4128f7:	pop    eax
  4128f8:	xor    dh,al
  4128fa:	ss inc esp
  4128fc:	mov    ah,0xf0
  4128fe:	jmp    0xe1d8:0xe8a235b1
  412905:	shr    DWORD PTR [eax-0x439e8f1a],cl
  41290b:	cmc    
  41290c:	pop    ebx
  41290d:	mov    eax,ds:0x60ac4175
  412912:	data16 mov dh,0x2a
  412915:	jmp    0x939b:0xfa0573c1
  41291c:	ins    DWORD PTR es:[edi],dx
  41291d:	fcomi  st,st(0)
  41291f:	in     al,0x51
  412921:	fisub  DWORD PTR [edx+0x12]
  412924:	dec    ecx
  412925:	shl    BYTE PTR [edi],0xbb
  412928:	pop    edx
  412929:	sub    esp,esi
  41292b:	pushf  
  41292c:	dec    ecx
  41292d:	add    al,0xa9
  41292f:	sub    DWORD PTR [ebx-0x5ac7c4a5],ebx
  412935:	sbb    eax,0x9c976058
  41293a:	scas   eax,DWORD PTR es:[edi]
  41293b:	ds sbb eax,0x61c08ab7
  412941:	fcomp  QWORD PTR [esi]
  412943:	imul   ebx,edi,0x2cfcf02e
  412949:	lds    eax,FWORD PTR [edx-0x5c]
  41294c:	loop   0x4128d1
  41294e:	sbb    BYTE PTR [ebp+ebp*4+0x7a],dh
  412952:	nop
  412953:	push   cs
  412954:	push   ss
  412955:	mov    ch,0x5d
  412957:	sub    ecx,DWORD PTR [eax+0x4f]
  41295a:	dec    eax
  41295b:	scas   eax,DWORD PTR es:[edi]
  41295c:	sub    DWORD PTR [edx-0x6f],eax
  41295f:	loop   0x412946
  412961:	adc    al,BYTE PTR [ebx+0x41]
  412964:	out    0xef,eax
  412966:	repz fst QWORD PTR [esi+0x486c5235]
  41296d:	ds ja  0x41290c
  412970:	pop    ebx
  412971:	mov    dh,0xe1
  412973:	mov    ch,ah
  412975:	repnz iret 
  412977:	add    DWORD PTR [eax+0x320dd68d],eax
  41297d:	xlat   BYTE PTR ds:[ebx]
  41297e:	shr    BYTE PTR [ebx],1
  412980:	inc    edx
  412981:	sub    eax,0xad888184
  412986:	xlat   BYTE PTR ds:[ebx]
  412987:	inc    edx
  412988:	adc    al,0x10
  41298a:	jno    0x41293d
  41298c:	stos   BYTE PTR es:[edi],al
  41298d:	mov    esp,0x2a466a7c
  412992:	or     esp,esp
  412994:	dec    esp
  412995:	sub    ebp,DWORD PTR [edi-0x5f]
  412998:	dec    ecx
  412999:	jnp    0x4129ae
  41299b:	in     eax,dx
  41299c:	sub    DWORD PTR gs:[ebx],esi
  41299f:	jo     0x412952
  4129a1:	sar    BYTE PTR [edx],cl
  4129a3:	jno    0x412a06
  4129a5:	std    
  4129a6:	clc    
  4129a7:	idiv   cl
  4129a9:	jb     0x4129b0
  4129ab:	jp     0x41295a
  4129ad:	stos   DWORD PTR es:[edi],eax
  4129ae:	sbb    esi,DWORD PTR [esi-0x827705a]
  4129b4:	lea    edx,[eax]
  4129b6:	xchg   edi,eax
  4129b7:	jmp    0x41297e
  4129b9:	inc    edi
  4129ba:	add    dl,BYTE PTR [edx+0x4ece46cb]
  4129c0:	fmul   DWORD PTR [ebx]
  4129c2:	shl    BYTE PTR [edx-0x54],cl
  4129c5:	ins    DWORD PTR es:[edi],dx
  4129c6:	mov    ch,0x35
  4129c8:	xor    DWORD PTR [edx-0x63d41d0a],ecx
  4129ce:	sub    eax,0x7e346181
  4129d3:	sbb    BYTE PTR [ecx],ah
  4129d5:	mov    al,ds:0xa660b445
  4129da:	pop    esp
  4129db:	sub    al,0x71
  4129dd:	sub    eax,0x72bfd569
  4129e2:	sub    DWORD PTR ds:[ecx-0x77],eax
  4129e6:	loop   0x4129db
  4129e8:	push   0xffffff83
  4129ea:	cli    
  4129eb:	and    al,0xf8
  4129ed:	js     0x4129d7
  4129ef:	daa    
  4129f0:	push   edi
  4129f1:	test   BYTE PTR ds:0x6d208218,al
  4129f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129f8:	mov    eax,ds:0x9cd58c12
  4129fd:	push   cs
  4129fe:	jl     0x412a23
  412a00:	in     eax,dx
  412a01:	jbe    0x4129d9
  412a03:	fidivr DWORD PTR [ecx]
  412a05:	inc    ebx
  412a06:	clc    
  412a07:	lea    ebx,[edx]
  412a09:	bound  esp,QWORD PTR [eax-0x62d53a6d]
  412a0f:	sub    eax,0xa16bd694
  412a14:	stos   DWORD PTR es:[edi],eax
  412a15:	lods   eax,DWORD PTR ds:[esi]
  412a16:	cmp    BYTE PTR [ebp+0x4b],0x28
  412a1a:	scas   al,BYTE PTR es:[edi]
  412a1b:	jge    0x412a17
  412a1d:	and    cl,BYTE PTR [eax+eax*2+0x6ccb90bd]
  412a24:	imul   eax,ebx,0xffffffaa
  412a27:	repnz pop ebx
  412a29:	(bad)  
  412a2a:	push   eax
  412a2b:	adc    DWORD PTR [eax+0x2098be43],esi
  412a31:	fistp  DWORD PTR [edi-0x6aaa580a]
  412a37:	shl    BYTE PTR [edx],0x95
  412a3a:	je     0x412aa6
  412a3c:	loop   0x4129e8
  412a3e:	or     esp,eax
  412a40:	inc    ebp
  412a41:	push   0x2d
  412a43:	mul    DWORD PTR [ecx-0x44]
  412a46:	push   edx
  412a47:	in     eax,0x6b
  412a49:	xor    BYTE PTR [edi],bh
  412a4b:	push   esi
  412a4c:	icebp  
  412a4d:	jno    0x412a46
  412a4f:	and    bl,0x8f
  412a52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a53:	pop    ebx
  412a54:	mov    edx,0x1f362ff9
  412a59:	scas   eax,DWORD PTR es:[edi]
  412a5a:	jnp    0x412aa0
  412a5c:	int    0x52
  412a5e:	and    DWORD PTR [ebx+esi*8],ebx
  412a61:	sub    DWORD PTR [ebx-0x416409f8],0x3f9c7bcd
  412a6b:	and    eax,0xab06ad08
  412a70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a71:	stos   DWORD PTR es:[edi],eax
  412a72:	push   0x10
  412a74:	out    0xcd,al
  412a76:	pop    edx
  412a77:	mov    WORD PTR [ecx],?
  412a79:	daa    
  412a7a:	sbb    DWORD PTR [esi],esi
  412a7c:	mov    ds:0xd9149b77,eax
  412a81:	push   cs
  412a82:	pop    ebx
  412a83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a84:	cwde   
  412a85:	cmp    DWORD PTR [esi-0x2f6b18fc],eax
  412a8b:	and    BYTE PTR [edi],al
  412a8d:	sub    ebx,edi
  412a8f:	rcr    ebp,1
  412a91:	popf   
  412a92:	adc    edi,DWORD PTR [esi]
  412a94:	or     DWORD PTR [esi],0x5e72f6bf
  412a9a:	aaa    
  412a9b:	mov    ebx,0x85c167d3
  412aa0:	and    al,BYTE PTR [eax]
  412aa2:	out    dx,eax
  412aa3:	mov    dl,0x7
  412aa5:	bound  esp,QWORD PTR [esi-0x28698336]
  412aab:	mov    al,0x0
  412aad:	cwde   
  412aae:	pop    ecx
  412aaf:	jle    0x412ac5
  412ab1:	adc    esi,0xffffffe8
  412ab4:	cmp    al,0xa4
  412ab6:	cmp    eax,0xa664322d
  412abb:	pop    ds
  412abc:	mov    ds:0x92b42fbf,al
  412ac1:	ret    0x7f48
  412ac4:	xor    BYTE PTR [edi],ah
  412ac6:	add    BYTE PTR [esp+eax*2-0x5],ch
  412aca:	inc    ecx
  412acb:	dec    esp
  412acc:	lea    ebx,[edx+edi*4-0x483b941d]
  412ad3:	mov    ecx,0x3526a15
  412ad8:	add    eax,0x46982736
  412add:	xchg   edi,eax
  412ade:	jo     0x412b14
  412ae0:	retf   0x9804
  412ae3:	fstp   DWORD PTR [edi-0x7bef91be]
  412ae9:	cmp    eax,DWORD PTR [ebx+0x15f5c4ce]
  412aef:	and    esi,DWORD PTR [edi]
  412af1:	cmp    al,0x9b
  412af3:	adc    ch,BYTE PTR [edx]
  412af5:	in     eax,0x45
  412af7:	addr16 push 0xd18e24a4
  412afd:	sub    eax,0xefb0a6b6
  412b02:	jle    0x412b58
  412b04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b05:	(bad)  
  412b06:	lods   eax,DWORD PTR ds:[esi]
  412b07:	test   eax,0xa9a3a8db
  412b0c:	pop    ds
  412b0d:	lods   al,BYTE PTR ds:[esi]
  412b0e:	loop   0x412b0b
  412b10:	(bad)  
  412b11:	popa   
  412b12:	cmc    
  412b13:	(bad)
  412b17:	mov    ds:0x6a0ea249,al
  412b1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b1d:	clc    
  412b1e:	(bad)  
  412b1f:	jno    0x412aab
  412b21:	push   edx
  412b22:	and    eax,0x2f7ee5d4
  412b27:	push   esp
  412b28:	iret   
  412b29:	dec    eax
  412b2a:	mov    ds:0x2ff2f899,eax
  412b2f:	and    BYTE PTR [ecx+ebp*4+0x26f9ce08],ah
  412b36:	dec    esp
  412b37:	sub    BYTE PTR [eax-0x56],bh
  412b3a:	cmp    edx,DWORD PTR [ebp+0x4f]
  412b3d:	push   ebx
  412b3e:	imul   BYTE PTR [eax+ebx*4-0x62eaa7ea]
  412b45:	sbb    esi,edx
  412b47:	dec    edx
  412b48:	int    0x1e
  412b4a:	adc    bl,BYTE PTR [ebx+ebx*8]
  412b4d:	inc    ecx
  412b4e:	clc    
  412b4f:	and    eax,0xa61e88b0
  412b54:	push   edx
  412b55:	xor    dh,BYTE PTR [ecx]
  412b57:	sub    dl,dh
  412b59:	mov    ds:0x65e0f98c,al
  412b5e:	pop    eax
  412b5f:	cld    
  412b60:	lock xchg ecx,edi
  412b63:	jo     0x412bb0
  412b65:	jae    0x412b71
  412b67:	test   DWORD PTR [ecx*1-0x68505479],edi
  412b6e:	jecxz  0x412b55
  412b70:	ds xor al,0x52
  412b73:	mov    ebp,0xd754c0a
  412b78:	mov    ebx,0xc6d37de3
  412b7d:	pop    es
  412b7e:	jp     0x412b88
  412b80:	jns    0x412b20
  412b82:	stc    
  412b83:	(bad)  
  412b84:	mov    ds:0xc160f2e4,al
  412b89:	adc    al,0x99
  412b8b:	mov    ebp,0x423c52f2
  412b90:	mov    ch,0x2f
  412b92:	cwde   
  412b93:	xchg   edx,eax
  412b94:	mov    ebx,0xacf1e969
  412b99:	mov    eax,ds:0x5aa6ef7b
  412b9e:	cdq    
  412b9f:	and    ebp,DWORD PTR [ebx]
  412ba1:	(bad)  
  412ba2:	pop    edi
  412ba3:	adc    bh,ah
  412ba5:	scas   al,BYTE PTR es:[edi]
  412ba6:	xchg   ebp,eax
  412ba7:	dec    ecx
  412ba8:	xor    dh,BYTE PTR [edi+0x26]
  412bab:	inc    edx
  412bac:	(bad)
  412bb1:	fs popf 
  412bb3:	and    DWORD PTR [ebp+0x431a42a4],ebx
  412bb9:	mov    ds,WORD PTR [esi-0x2c]
  412bbc:	call   0x50911228
  412bc1:	fxch   st(3)
  412bc3:	and    DWORD PTR [ebx],0x59
  412bc6:	xor    eax,0x830e8180
  412bcb:	cmc    
  412bcc:	nop
  412bcd:	outs   dx,BYTE PTR ds:[esi]
  412bce:	inc    esi
  412bcf:	call   0xe1d:0x36bad19c
  412bd6:	aam    0x75
  412bd8:	push   esi
  412bd9:	arpl   WORD PTR [eax],di
  412bdb:	repz int3 
  412bdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bdf:	aas    
  412be0:	lea    edx,[esi]
  412be2:	leave  
  412be3:	in     al,dx
  412be4:	dec    edi
  412be5:	cmp    BYTE PTR [ecx-0x55],bl
  412be8:	mov    DWORD PTR [edx+eiz*4-0x33],0xfbd91dd1
  412bf0:	and    DWORD PTR [edx-0x3fdd04ff],edx
  412bf6:	loope  0x412c3f
  412bf8:	mov    dl,0xed
  412bfa:	push   cs
  412bfb:	repz sbb BYTE PTR [edi],dh
  412bfe:	mov    dl,0x34
  412c00:	mov    ?,WORD PTR [edx]
  412c02:	std    
  412c03:	(bad)  
  412c04:	pop    esi
  412c05:	push   esi
  412c06:	mov    ah,0x11
  412c08:	dec    edi
  412c09:	cmp    ebp,DWORD PTR [edi-0x28]
  412c0c:	mov    ebp,0x83965c63
  412c11:	mov    ch,0x25
  412c13:	adc    eax,0x953bd6e2
  412c18:	jle    0x412c81
  412c1a:	mov    esp,0xf040c1a4
  412c1f:	imul   edi,eax,0x80c6d19d
  412c25:	or     dl,ah
  412c27:	mov    bl,0x90
  412c29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c2a:	dec    esp
  412c2b:	ret    0x1bbd
  412c2e:	push   eax
  412c2f:	add    eax,0xde5d9000
  412c34:	jne    0x412c9d
  412c36:	pop    ds
  412c37:	adc    dh,BYTE PTR [ebp+0x619eff7f]
  412c3d:	inc    ebp
  412c3e:	fdivrp st(7),st
  412c40:	jae    0x412c67
  412c42:	xchg   ebx,eax
  412c43:	fnsave [ebp*2+0x52e8245d]
  412c4a:	fwait
  412c4b:	mov    WORD PTR [eax+edx*2-0x19],?
  412c4f:	pusha  
  412c50:	xor    DWORD PTR [ecx-0x13d91481],0x5384864d
  412c5a:	dec    ecx
  412c5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c5c:	mov    ?,ebp
  412c5e:	mov    eax,cs
  412c60:	xor    edx,DWORD PTR [ecx+eiz*1-0x21cfc736]
  412c67:	push   esi
  412c68:	(bad)  
  412c69:	out    dx,al
  412c6a:	jnp    0x412cba
  412c6c:	movups xmm3,xmm7
  412c6f:	sbb    BYTE PTR [edx],dl
  412c71:	aad    0xf1
  412c73:	pop    esi
  412c74:	outs   dx,DWORD PTR ds:[esi]
  412c75:	aaa    
  412c76:	jg     0x412cb7
  412c78:	and    cl,BYTE PTR [ebx+0x65]
  412c7b:	push   0xffffffc0
  412c7d:	stos   DWORD PTR es:[edi],eax
  412c7e:	xor    al,0xe8
  412c80:	or     dl,0x5d
  412c83:	in     eax,0x9
  412c85:	push   ds
  412c86:	stos   BYTE PTR es:[edi],al
  412c87:	push   edx
  412c88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c89:	ins    BYTE PTR es:[edi],dx
  412c8a:	jg     0x412d02
  412c8c:	xchg   ebp,eax
  412c8d:	jl     0x412c2c
  412c8f:	pop    ds
  412c90:	xor    ecx,ebx
  412c92:	jb     0x412c45
  412c94:	sar    DWORD PTR [eax-0x535cda74],cl
  412c9a:	outs   dx,BYTE PTR ds:[esi]
  412c9b:	pop    edi
  412c9c:	mul    DWORD PTR [esi]
  412c9e:	cli    
  412c9f:	mov    ch,0x5
  412ca1:	fdivr  DWORD PTR [esp+eax*1]
  412ca4:	lock jl 0x412c43
  412ca7:	es iret 
  412ca9:	xchg   edx,eax
  412caa:	mov    dh,0xca
  412cac:	fisubr DWORD PTR [edi]
  412cae:	pusha  
  412caf:	sub    DWORD PTR [edx-0xb945af5],edx
  412cb5:	ret    
  412cb6:	push   edi
  412cb7:	ret    0xd336
  412cba:	out    dx,eax
  412cbb:	mov    ch,0xd7
  412cbd:	(bad)  
  412cbe:	in     eax,dx
  412cbf:	test   DWORD PTR [edx],ebp
  412cc1:	fcomp  st(5)
  412cc3:	mov    edi,0x3ff8aedc
  412cc8:	stos   BYTE PTR es:[edi],al
  412cc9:	dec    ecx
  412cca:	in     al,dx
  412ccb:	cmp    eax,DWORD PTR [ecx]
  412ccd:	js     0x412d39
  412ccf:	(bad)  
  412cd0:	hlt    
  412cd1:	jecxz  0x412d04
  412cd3:	clc    
  412cd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cd5:	mov    eax,ds:0xf81a3d5
  412cda:	out    dx,al
  412cdb:	cmp    al,0xcd
  412cdd:	inc    ebp
  412cde:	pop    ds
  412cdf:	jo     0x412ca2
  412ce1:	mov    edi,0x28756378
  412ce6:	cli    
  412ce7:	sahf   
  412ce8:	mov    edi,DWORD PTR [ebx-0x1a]
  412ceb:	in     al,0x65
  412ced:	loopne 0x412d1e
  412cef:	mov    esp,0xf5f47517
  412cf4:	(bad)  
  412cf5:	jmp    0x412cd1
  412cf7:	push   ebp
  412cf8:	out    dx,al
  412cf9:	sbb    al,0x2f
  412cfb:	push   ss
  412cfc:	js     0x412d6e
  412cfe:	aaa    
  412cff:	sbb    eax,0xdcb9553b
  412d04:	ins    DWORD PTR es:[edi],dx
  412d05:	and    eax,0xee54b1a7
  412d0a:	fst    QWORD PTR [ebp-0x4c9ec68b]
  412d10:	add    al,0xb6
  412d12:	(bad)  
  412d13:	ror    bh,1
  412d15:	loop   0x412cf8
  412d17:	and    BYTE PTR [esi-0x44c7154c],cl
  412d1d:	adc    eax,0x8306931d
  412d22:	pop    ds
  412d23:	fnstsw WORD PTR ds:0x3296a5a0
  412d29:	stc    
  412d2a:	dec    eax
  412d2b:	add    al,0xdc
  412d2d:	imul   edi,DWORD PTR [edx-0x1f],0x9a2928e7
  412d34:	test   eax,0xf2c0c737
  412d39:	in     al,0xbc
  412d3b:	into   
  412d3c:	cmp    al,bh
  412d3e:	fistp  QWORD PTR [ebp+0x7c]
  412d41:	repnz leave 
  412d43:	sti    
  412d44:	add    eax,0x843b009
  412d49:	lods   eax,DWORD PTR ds:[esi]
  412d4a:	dec    ebp
  412d4b:	pop    es
  412d4c:	aas    
  412d4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d4e:	mov    al,ds:0xafe4f9f5
  412d53:	jne    0x412cdc
  412d55:	mov    eax,0xd8b2512b
  412d5a:	xor    bl,BYTE PTR [eax+0x5b]
  412d5d:	out    dx,eax
  412d5e:	mov    BYTE PTR [ebx+0x7a052edd],dh
  412d64:	data16 out 0x55,al
  412d67:	test   eax,0x103eef5a
  412d6c:	mov    al,ds:0x2155e300
  412d71:	pop    ebx
  412d72:	fnstenv [ebp+0x72]
  412d75:	jne    0x412d13
  412d77:	sbb    DWORD PTR ds:0x6a5e8dd3,ecx
  412d7d:	jbe    0x412d37
  412d7f:	imul   ecx,esi,0x5b977425
  412d85:	rcl    BYTE PTR [ecx+0x14075c83],0xc9
  412d8c:	pop    ds
  412d8d:	repnz in al,dx
  412d8f:	jnp    0x412dae
  412d91:	jecxz  0x412e0a
  412d93:	inc    esi
  412d94:	retf   
  412d95:	aas    
  412d96:	cmp    cl,BYTE PTR ds:0xb1eec173
  412d9c:	loope  0x412de6
  412d9e:	dec    esp
  412d9f:	cmp    DWORD PTR [eax],edi
  412da1:	dec    edi
  412da2:	(bad)  
  412da3:	sbb    al,0x5c
  412da5:	mov    ecx,0x9004b443
  412daa:	in     eax,dx
  412dab:	mov    edi,0x836c6d98
  412db0:	and    bh,BYTE PTR [ebx-0x2943e6a0]
  412db6:	arpl   WORD PTR [edx+0x7c6b2014],bp
  412dbc:	scas   al,BYTE PTR es:[edi]
  412dbd:	mov    esp,0xe1bc3175
  412dc2:	stc    
  412dc3:	retf   
  412dc4:	or     bl,BYTE PTR [eax+0x12]
  412dc7:	arpl   WORD PTR [edx-0x6a72bb05],bp
  412dcd:	inc    BYTE PTR ds:0xc57ebbe9
  412dd3:	inc    esi
  412dd4:	mov    bl,0xff
  412dd6:	or     bl,0xba
  412dd9:	fidivr DWORD PTR [edx+0x246a6aeb]
  412ddf:	inc    ebx
  412de0:	push   ds
  412de1:	xor    al,0x13
  412de4:	int3   
  412de5:	fwait
  412de6:	out    0x8,eax
  412de8:	add    eax,0x78d6bc89
  412ded:	inc    esi
  412dee:	mov    bl,0x5f
  412df0:	xor    ecx,DWORD PTR [ecx]
  412df2:	jg     0x412e1d
  412df4:	aam    0x84
  412df6:	dec    eax
  412df7:	retf   
  412df8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412df9:	popa   
  412dfa:	int    0xfa
  412dfc:	jns    0x412d8e
  412dfe:	in     al,dx
  412dff:	retf   
  412e00:	inc    esp
  412e01:	jns    0x412e31
  412e03:	aaa    
  412e04:	cwde   
  412e05:	sbb    al,BYTE PTR [edx]
  412e07:	std    
  412e08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e09:	call   0xf261:0x95d416d3
  412e10:	out    dx,eax
  412e11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e12:	mov    esi,0x6abfbb81
  412e17:	or     BYTE PTR ds:0xec5ee995,ah
  412e1d:	inc    eax
  412e1f:	sub    esi,DWORD PTR [eax+0x5d492125]
  412e25:	jp     0x412e18
  412e27:	in     eax,0xf4
  412e29:	popa   
  412e2a:	add    bl,bh
  412e2c:	or     BYTE PTR [eax+0x5886e004],bl
  412e32:	sbb    eax,0x11121eb5
  412e37:	inc    ebp
  412e38:	mov    ebx,0x9c8d8602
  412e3d:	cmp    eax,0x10c998b4
  412e42:	jbe    0x412e0a
  412e44:	popf   
  412e45:	mov    esi,0xeb80df26
  412e4a:	fidiv  DWORD PTR [esi-0x38]
  412e4d:	sub    eax,0xe04b4a7c
  412e52:	aaa    
  412e53:	les    edi,FWORD PTR [esi]
  412e55:	mov    edx,0x5f1a14fb
  412e5a:	or     BYTE PTR [ecx-0x3a],bl
  412e5d:	je     0x412eaf
  412e5f:	dec    edi
  412e60:	aad    0x8b
  412e62:	cmp    al,0xe4
  412e64:	or     DWORD PTR [eax],0xe6fe09dd
  412e6a:	push   edx
  412e6b:	or     BYTE PTR [ebx+0x22460aee],ch
  412e71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e72:	sbb    ebp,DWORD PTR [ebx+0x44373076]
  412e78:	inc    ebx
  412e79:	dec    ebp
  412e7a:	imul   edi,DWORD PTR [eax+0x538ca4f5],0x39
  412e81:	cmp    eax,0x51c73b1c
  412e86:	dec    ebp
  412e87:	popa   
  412e88:	pop    esi
  412e89:	enter  0x9213,0x63
  412e8d:	dec    ebx
  412e8e:	ss cld 
  412e90:	enter  0x1e24,0x4f
  412e94:	cs int 0xd7
  412e97:	ret    0x67e8
  412e9a:	arpl   WORD PTR [ecx+0xef98c8b],di
  412ea0:	jne    0x412f0c
  412ea2:	mov    cl,0x5a
  412ea4:	out    dx,al
  412ea5:	or     eax,0x204d98f0
  412eaa:	push   esp
  412eab:	mov    eax,0x5458b27
  412eb0:	(bad)  
  412eb1:	rcl    DWORD PTR [esi-0x50],cl
  412eb4:	mov    es,WORD PTR [ecx]
  412eb6:	fmul   QWORD PTR [edx]
  412eb8:	push   ds
  412eb9:	push   esp
  412eba:	imul   edi,DWORD PTR [edx+0x6d3a72],0x2225864
  412ec4:	mov    ecx,0x1f1d74dd
  412ec9:	adc    DWORD PTR [edx+0x40a733e],ebx
  412ecf:	xchg   esi,eax
  412ed0:	xor    eax,0xcc867d55
  412ed5:	and    ecx,DWORD PTR [edx-0x5f]
  412ed8:	fs js  0x412ef8
  412edb:	into   
  412edc:	inc    esi
  412edd:	dec    esp
  412ede:	inc    ebx
  412edf:	sub    edx,DWORD PTR [edi]
  412ee1:	sub    eax,0x9a13baf7
  412ee6:	push   eax
  412ee7:	pop    ebp
  412ee8:	fcmovnbe st,st(6)
  412eea:	int3   
  412eeb:	pop    edi
  412eec:	pop    ds
  412eed:	mov    edx,0xfbab5bbc
  412ef2:	mov    cl,BYTE PTR [edi]
  412ef4:	lock shl BYTE PTR [edi-0x22],0xac
  412ef9:	pushf  
  412efa:	xchg   esp,eax
  412efb:	inc    ebx
  412efc:	cmp    bl,ah
  412efe:	cwde   
  412eff:	mov    al,ds:0x2a338909
  412f04:	xchg   ecx,eax
  412f05:	jle    0x412f61
  412f07:	mov    edi,0x65a1342f
  412f0c:	pop    ds
  412f0d:	add    BYTE PTR [eax-0x22e1d508],cl
  412f13:	xor    al,BYTE PTR [esi]
  412f15:	shl    bh,0x15
  412f18:	int3   
  412f19:	mov    ebp,0xd2c17712
  412f1e:	inc    eax
  412f1f:	xchg   ebp,eax
  412f20:	cld    
  412f21:	aad    0x50
  412f23:	jecxz  0x412eed
  412f25:	xchg   esp,eax
  412f26:	jae    0x412f8c
  412f28:	sahf   
  412f29:	xchg   ebx,eax
  412f2a:	sahf   
  412f2b:	fdivr  st(3),st
  412f2d:	mov    DWORD PTR [ebp-0x4e4add5b],ebp
  412f33:	std    
  412f34:	aad    0xa6
  412f36:	xchg   edi,eax
  412f37:	out    dx,al
  412f38:	dec    esp
  412f39:	test   al,0x64
  412f3b:	add    ah,ch
  412f3d:	mov    ebp,0xda03afb8
  412f42:	cdq    
  412f43:	adc    BYTE PTR [ecx],cl
  412f45:	mov    cl,0xc8
  412f47:	pop    edi
  412f48:	aad    0x42
  412f4a:	int    0x98
  412f4c:	mov    eax,0x96bd3982
  412f51:	(bad)  
  412f52:	mov    BYTE PTR [ebx+0x5afca167],ah
  412f58:	arpl   ax,bp
  412f5a:	adc    ecx,ebx
  412f5c:	aad    0xcd
  412f5e:	inc    ecx
  412f5f:	ins    BYTE PTR es:[edi],dx
  412f60:	call   0x15b:0x8a753ffd
  412f67:	int    0xf2
  412f69:	lods   eax,DWORD PTR ds:[esi]
  412f6a:	leave  
  412f6b:	das    
  412f6c:	out    0xf9,al
  412f6e:	stos   BYTE PTR es:[edi],al
  412f6f:	adc    edi,0x2defde13
  412f75:	cli    
  412f76:	fbstp  TBYTE PTR [edi-0x794d1148]
  412f7c:	fs adc BYTE PTR ds:[eax],ch
  412f80:	mov    eax,ds:0x67457aa5
  412f85:	into   
  412f86:	out    0xdf,al
  412f88:	mov    ebp,0x157b2a63
  412f8d:	jl     0x412f4b
  412f8f:	popa   
  412f90:	pop    ebx
  412f91:	push   edi
  412f92:	mov    ecx,0xce5d0d07
  412f97:	xchg   ebp,eax
  412f98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f99:	(bad)  [ecx]
  412f9b:	mov    dl,0x2
  412f9d:	mov    cs,WORD PTR [ebx-0x2b]
  412fa0:	daa    
  412fa1:	pop    es
  412fa2:	pop    ss
  412fa3:	ret    0xae63
  412fa6:	cmc    
  412fa7:	adc    eax,0xcaeeddc5
  412fac:	in     al,dx
  412fad:	xchg   eax,ebp
  412faf:	cmp    ebp,DWORD PTR [ebp+esi*2-0x67]
  412fb3:	push   eax
  412fb4:	add    eax,0x44aacc26
  412fb9:	fcmove st,st(0)
  412fbb:	xor    eax,0x1e4a4759
  412fc0:	mov    cl,bl
  412fc2:	das    
  412fc3:	mov    ch,0xb7
  412fc5:	(bad)  
  412fc6:	ins    BYTE PTR es:[edi],dx
  412fc7:	mov    eax,0xd5dace8b
  412fcc:	or     DWORD PTR [esi+0x3d],edx
  412fcf:	jae    0x412ff8
  412fd1:	dec    edx
  412fd2:	dec    ebp
  412fd3:	jo     0x412f80
  412fd5:	or     DWORD PTR [edi],0xfbb86c30
  412fdb:	out    0x1b,eax
  412fdd:	rcl    edx,0xf4
  412fe0:	call   eax
  412fe2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fe3:	addr16 xchg esi,eax
  412fe5:	sub    eax,0x8218135c
  412fea:	test   BYTE PTR [edi+0x78],cl
  412fed:	retf   
  412fee:	push   0xffffffbf
  412ff0:	std    
  412ff1:	into   
  412ff2:	nop
  412ff3:	or     eax,0x5df88b7a
  412ff8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ff9:	outs   dx,BYTE PTR ds:[esi]
  412ffa:	mov    edx,0xeb623e60
  412fff:	jno    0x412ff9
  413001:	test   BYTE PTR ss:[esi-0x27],ah
  413005:	jmp    0x520:0x1cb60d35
  41300c:	xchg   edi,eax
  41300d:	xor    BYTE PTR [edi+0x3f],0xea
  413011:	or     al,0x3d
  413013:	sbb    ecx,eax
  413015:	pop    ss
  413016:	mov    ?,WORD PTR [ebp+0x4d43634f]
  41301c:	or     BYTE PTR [esi],bl
  41301e:	inc    esp
  41301f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413020:	pop    edx
  413021:	cli    
  413022:	cs sti 
  413024:	push   eax
  413025:	arpl   WORD PTR [ebx],sp
  413027:	sbb    ebx,edx
  413029:	mov    ecx,0x9c942189
  41302e:	push   edi
  41302f:	mov    eax,ds:0x3a7ee663
  413034:	mov    ah,0x1a
  413036:	call   0x7a24bbcf
  41303b:	dec    edi
  41303c:	sub    eax,0x5cd7a47f
  413041:	(bad)  
  413042:	scas   eax,DWORD PTR es:[edi]
  413043:	ret    0xc115
  413046:	dec    esp
  413047:	add    DWORD PTR [ecx-0x441379dc],ebp
  41304d:	mov    eax,0xe75f6685
  413052:	jmp    0x4130ca
  413054:	or     edi,DWORD PTR [edx-0x426808c0]
  41305a:	add    DWORD PTR [esi+0x5dc37ba],ecx
  413060:	fidivr WORD PTR ds:0xc5ad93bb
  413066:	out    0x73,eax
  413068:	das    
  413069:	add    DWORD PTR [ebp+0x65],esi
  41306c:	leave  
  41306d:	jnp    0x413091
  41306f:	mov    al,0x95
  413071:	or     eax,0xf7df8394
  413076:	cmp    eax,0x12354111
  41307b:	mov    eax,ds:0x82d44909
  413080:	adc    eax,DWORD PTR [ecx+0x59]
  413083:	out    0xd1,eax
  413085:	push   ds
  413086:	scas   al,BYTE PTR es:[edi]
  413087:	call   0x5d0e0f7d
  41308c:	dec    edi
  41308d:	(bad)  [ecx+0x77]
  413090:	dec    eax
  413091:	or     eax,esi
  413093:	push   edi
  413094:	ins    BYTE PTR es:[edi],dx
  413095:	add    DWORD PTR [ebx+0x40],edx
  413098:	xchg   ebx,eax
  413099:	mov    ebx,0xb2d3ade4
  41309e:	and    al,0x2e
  4130a0:	in     eax,dx
  4130a1:	(bad)  
  4130a2:	(bad)  
  4130a4:	or     eax,0xb2ed57ae
  4130a9:	das    
  4130aa:	ds inc edx
  4130ac:	sahf   
  4130ad:	shl    DWORD PTR [ebp-0x4fd4115b],1
  4130b3:	jle    0x413079
  4130b5:	icebp  
  4130b6:	sub    esi,0x3a354ecf
  4130bc:	psraw  mm3,mm1
  4130bf:	lds    ecx,FWORD PTR [edx]
  4130c1:	imul   esp,DWORD PTR [ebx+ebp*8+0x7a],0xfffffffc
  4130c6:	adc    BYTE PTR [ecx],bh
  4130c8:	mov    cl,0x4d
  4130ca:	bound  esi,QWORD PTR [ecx]
  4130cc:	mov    dh,0x73
  4130ce:	popf   
  4130cf:	lods   al,BYTE PTR ds:[esi]
  4130d0:	or     ebp,edx
  4130d2:	mov    cl,0x35
  4130d4:	inc    edx
  4130d5:	fimul  WORD PTR [eax+0x7a]
  4130d8:	push   ebp
  4130d9:	pop    ds
  4130da:	push   esp
  4130db:	cmc    
  4130dc:	mov    bl,0x6d
  4130de:	fs retf 0xdf9a
  4130e2:	and    edi,esi
  4130e4:	data16 mov al,0x99
  4130e7:	(bad)  
  4130e8:	fidivr WORD PTR [ecx]
  4130ea:	cli    
  4130eb:	pop    esp
  4130ec:	xchg   edx,eax
  4130ed:	mov    ecx,0xd6a37ad0
  4130f2:	repz mov edi,0x958711b0
  4130f8:	fwait
  4130f9:	mov    ebx,0xa246396
  4130fe:	mov    al,ds:0x711b9d59
  413103:	xor    BYTE PTR [edi+ebx*2-0x79231a02],al
  41310a:	dec    ebx
  41310b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41310c:	ds js  0x4130c9
  41310f:	ins    DWORD PTR es:[edi],dx
  413110:	push   esi
  413111:	xor    DWORD PTR [edx+0x6d9d253f],ebx
  413117:	js     0x4130d1
  413119:	sti    
  41311a:	ret    0xfe7e
  41311d:	stc    
  41311e:	pushf  
  41311f:	pop    ds
  413120:	or     BYTE PTR [ebx],dl
  413122:	fisub  WORD PTR gs:[eax]
  413125:	std    
  413126:	loope  0x413166
  413128:	jmp    0x92f4b79d
  41312d:	aaa    
  41312e:	xor    al,0x85
  413130:	jbe    0x4131aa
  413132:	pusha  
  413133:	jno    0x41311c
  413135:	xor    cl,ah
  413137:	jae    0x413124
  413139:	ficomp WORD PTR [edx+0x7d]
  41313c:	adc    ch,ch
  41313e:	xor    cl,BYTE PTR [esi]
  413140:	mov    ebp,ss
  413142:	ret    0xc7f
  413145:	sub    esp,DWORD PTR [esi-0x4a]
  413148:	push   ebp
  413149:	out    dx,eax
  41314a:	mov    ebp,DWORD PTR [edx+0x28bd3d1e]
  413150:	and    dh,dl
  413152:	repnz or eax,0xaf3d3a86
  413158:	jb     0x4131c6
  41315a:	cmp    eax,0xbade714b
  41315f:	outs   dx,DWORD PTR ds:[esi]
  413160:	and    DWORD PTR [ecx+ebp*1+0x36],0xffffff8b
  413165:	ss jne 0x4131d0
  413168:	pop    ebp
  413169:	(bad)  [edi+0x3f603dd]
  41316f:	xor    eax,0x49cc16ac
  413174:	(bad)  
  413175:	mov    ds:0x6ca59648,eax
  41317a:	cmp    DWORD PTR [edi-0x9],ebp
  41317d:	xor    eax,0xed8f20a5
  413182:	sbb    al,0x0
  413184:	(bad)  
  413185:	retf   0x3cfb
  413188:	fwait
  413189:	inc    edx
  41318a:	pop    eax
  41318b:	ror    DWORD PTR [ecx],1
  41318d:	mov    ah,0x62
  41318f:	xchg   edx,edx
  413191:	sbb    eax,0x8a13770b
  413196:	pusha  
  413197:	pop    ebx
  413198:	shr    BYTE PTR [edi+edi*8],1
  41319b:	push   edi
  41319c:	add    DWORD PTR [esi],edi
  41319e:	or     DWORD PTR [esi-0x27a68d64],edx
  4131a4:	rol    DWORD PTR [ebp+0x196e96fc],1
  4131aa:	shl    DWORD PTR [esi-0x37],0x5
  4131ae:	xchg   edi,eax
  4131af:	sbb    DWORD PTR [eax+0x7d0937cf],ebp
  4131b5:	repz shr edi,1
  4131b8:	add    al,0xe1
  4131ba:	jmp    DWORD PTR [ebp-0x459f98a4]
  4131c0:	dec    esp
  4131c1:	aas    
  4131c2:	lock adc al,0xf5
  4131c5:	sbb    eax,0x97b6cb45
  4131ca:	mov    ebp,0x1d3803ee
  4131cf:	push   esi
  4131d0:	clc    
  4131d1:	inc    ebp
  4131d2:	cmp    DWORD PTR ds:0x6e2ce000,ebp
  4131d8:	sar    DWORD PTR [ecx],cl
  4131da:	ds inc ecx
  4131dc:	push   edi
  4131dd:	xchg   edx,eax
  4131de:	mov    ds:0xa2ebedef,al
  4131e3:	and    dl,0x50
  4131e6:	cld    
  4131e7:	push   ecx
  4131e8:	leave  
  4131e9:	(bad)  
  4131ea:	inc    esp
  4131eb:	jbe    0x41324a
  4131ed:	shl    DWORD PTR [ebx],0xa4
  4131f0:	(bad)  
  4131f1:	(bad)  
  4131f2:	jbe    0x413213
  4131f4:	mov    ebx,esp
  4131f6:	leave  
  4131f7:	test   DWORD PTR [edx-0x4fd8e4be],ebp
  4131fd:	imul   ebx,DWORD PTR [ebx+eiz*2-0x32],0xb1a39332
  413205:	out    0x4c,al
  413207:	into   
  413208:	ret    0x97ae
  41320b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41320c:	pop    esi
  41320d:	shl    DWORD PTR ds:0x4c3948f3,1
  413213:	test   edx,eax
  413215:	sub    eax,0x69348d0b
  41321a:	jecxz  0x413225
  41321c:	fistp  WORD PTR [ebp-0x306d29d2]
  413222:	sub    eax,0x2f749401
  413227:	and    al,BYTE PTR [ecx+ebx*4-0x45]
  41322b:	aaa    
  41322c:	(bad)  
  41322d:	mov    bl,BYTE PTR [eax-0x66]
  413230:	ss hlt 
  413232:	pop    ds
  413233:	inc    edx
  413234:	push   eax
  413235:	cmp    ah,BYTE PTR [esi+esi*8+0x72]
  413239:	push   ebx
  41323a:	ja     0x4131e5
  41323c:	mov    ah,ah
  41323e:	and    eax,0x28dbf427
  413243:	enter  0x3025,0x4
  413247:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413248:	in     eax,dx
  413249:	leave  
  41324a:	xor    BYTE PTR [eax+0x28],al
  41324d:	sub    eax,0x3d0d7149
  413252:	clc    
  413253:	dec    esp
  413254:	js     0x413269
  413256:	(bad)  
  413257:	fst    QWORD PTR [esi*4+0x560fb7e8]
  41325e:	adc    ah,BYTE PTR [edi-0x43]
  413261:	(bad)  
  413262:	call   0xb75abc27
  413267:	sbb    ecx,DWORD PTR [ecx-0x35]
  41326a:	test   DWORD PTR [eax-0x28],edx
  41326d:	lods   al,BYTE PTR ds:[esi]
  41326e:	add    DWORD PTR [eax+0x68],edx
  413271:	dec    ebp
  413272:	mov    ds:0x6e11e715,eax
  413277:	xchg   esp,eax
  413278:	jp     0x413230
  41327a:	pop    esi
  41327b:	das    
  41327c:	sub    eax,0x6599396d
  413281:	mov    cl,0xdf
  413283:	and    BYTE PTR [eax+0x6db5c8fb],cl
  413289:	test   eax,0x8e25ed1a
  41328e:	cmp    BYTE PTR [esi+0x2f951658],cl
  413294:	imul   ecx,DWORD PTR [edx+esi*8-0x293f35e3],0x36
  41329c:	jge    0x4132e7
  41329e:	out    0xd6,al
  4132a0:	lea    edx,[ebx]
  4132a2:	iret   
  4132a3:	std    
  4132a4:	loop   0x41324d
  4132a6:	dec    esi
  4132a7:	or     cl,BYTE PTR [edi]
  4132a9:	and    edi,DWORD PTR [ebp-0x618d7bc0]
  4132af:	xor    eax,0xedf3fd12
  4132b4:	scas   eax,DWORD PTR es:[edi]
  4132b5:	out    dx,eax
  4132b6:	push   ds
  4132b7:	(bad)  
  4132b8:	out    0x35,al
  4132ba:	sahf   
  4132bb:	xor    cl,BYTE PTR [edi]
  4132bd:	das    
  4132be:	aaa    
  4132bf:	ja     0x41329d
  4132c1:	repnz fwait
  4132c3:	(bad)  
  4132c4:	(bad)  
  4132c5:	add    al,0x8b
  4132c7:	mov    ebp,0x9b1509b0
  4132cc:	mov    esi,0x69e2f5f2
  4132d1:	jns    0x41331e
  4132d3:	jo     0x4132f6
  4132d5:	cmp    dl,BYTE PTR [eax+0x59]
  4132d8:	sahf   
  4132d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132da:	jp     0x4132b5
  4132dc:	adc    BYTE PTR [eax+edi*1],ch
  4132df:	push   0xffffffb0
  4132e1:	stc    
  4132e2:	(bad)  
  4132e3:	cmc    
  4132e4:	and    esi,DWORD PTR [ebp-0x266e26f6]
  4132ea:	mov    bl,0xfd
  4132ec:	push   0x64
  4132ee:	adc    ebp,DWORD PTR [esi+ecx*2-0x7c]
  4132f2:	ficomp WORD PTR [esi]
  4132f4:	nop
  4132f5:	lods   al,BYTE PTR ds:[esi]
  4132f6:	gs cmp ch,al
  4132f9:	mov    eax,ds:0x3c103c81
  4132fe:	arpl   WORD PTR [ebx-0x47],bx
  413301:	xor    eax,0x60774445
  413306:	mov    edi,0xa5d51268
  41330b:	cmp    DWORD PTR [eax],edx
  41330d:	cmp    eax,0xb9a668cc
  413312:	test   al,0xd6
  413314:	pushf  
  413315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413316:	xchg   ebx,eax
  413317:	je     0x413386
  413319:	lds    edi,FWORD PTR [edi+0x67d2bf42]
  41331f:	aam    0x7f
  413321:	cmp    eax,0x50792f05
  413326:	push   edi
  413327:	ins    DWORD PTR es:[edi],dx
  413328:	xor    ah,BYTE PTR [eax-0x28]
  41332b:	and    ebp,DWORD PTR [edi+0x4ce3d0d9]
  413331:	in     eax,0x6a
  413333:	inc    edx
  413334:	mov    bl,0xea
  413336:	jge    0x41332d
  413338:	sbb    dh,ah
  41333a:	arpl   WORD PTR [ecx+0x34],cx
  41333d:	pop    ecx
  41333e:	xor    eax,ebp
  413340:	mov    eax,0x7e275e49
  413345:	push   eax
  413346:	inc    esi
  413347:	shl    BYTE PTR [edx+0x7ee5c3f8],0x47
  41334e:	lock fsub QWORD PTR [edi-0x628f05ed]
  413355:	idiv   DWORD PTR [eax]
  413357:	pusha  
  413358:	(bad)  
  413359:	mov    ds:0xcffc7fa8,al
  41335e:	sbb    DWORD PTR [ecx],edi
  413360:	scas   eax,DWORD PTR es:[edi]
  413361:	mov    ebp,0x48bca1ac
  413366:	mov    eax,0x42ce9cce
  41336b:	sub    BYTE PTR [ebx],bl
  41336d:	push   cs
  41336e:	or     ecx,DWORD PTR [ebx+esi*4]
  413371:	(bad)  
  413372:	and    esp,DWORD PTR [ebx-0x4d]
  413375:	mov    DWORD PTR [ecx-0x1c959eb3],ebx
  41337b:	fnstenv [edi]
  41337d:	mov    eax,0xea1acb6c
  413382:	cmp    al,0x47
  413384:	aam    0xdd
  413386:	push   esp
  413387:	sub    DWORD PTR [edx-0x174c20b5],edx
  41338d:	fiadd  DWORD PTR [esp+esi*8-0x44575c9c]
  413394:	mov    bh,0xc6
  413396:	adc    DWORD PTR [edx],eax
  413398:	and    eax,0xdfb31b69
  41339d:	push   eax
  41339e:	add    DWORD PTR [edi-0x5a],0xffffffce
  4133a2:	mov    esi,0xd9dacab8
  4133a7:	cmp    edx,0xffffffa6
  4133aa:	adc    al,0x4a
  4133ac:	out    0xa1,eax
  4133ae:	cmp    edx,DWORD PTR [ecx+0x38]
  4133b1:	mov    ebx,0x9d71eb73
  4133b6:	pop    edi
  4133b7:	xchg   edi,eax
  4133b8:	sbb    eax,0xc998cbdd
  4133bd:	xchg   esp,eax
  4133be:	adc    BYTE PTR [eax],bl
  4133c0:	shl    BYTE PTR [ebp-0x6a],cl
  4133c3:	dec    edi
  4133c4:	mov    bl,BYTE PTR ds:0x2fe18b87
  4133ca:	in     al,dx
  4133cb:	sub    eax,0x294e92c0
  4133d0:	add    eax,0x416777fc
  4133d5:	mov    BYTE PTR [edi],al
  4133d7:	jbe    0x4133d3
  4133d9:	in     al,dx
  4133da:	sub    DWORD PTR [edx],eax
  4133dc:	mov    ah,ch
  4133de:	mov    ebp,DWORD PTR [esi+0x7b]
  4133e1:	dec    edi
  4133e2:	in     eax,0x96
  4133e4:	out    0x1f,al
  4133e6:	sbb    al,0x1f
  4133e8:	fld    TBYTE PTR [ebp-0x73]
  4133eb:	jg     0x4133ec
  4133ed:	popa   
  4133ee:	retf   0x36cb
  4133f1:	and    dh,bl
  4133f3:	fwait
  4133f4:	outs   dx,BYTE PTR ds:[esi]
  4133f5:	call   0x5f11:0x8f916d86
  4133fc:	retf   
  4133fd:	inc    edx
  4133fe:	cmp    eax,0x427fffcc
  413403:	push   ebp
  413404:	xchg   edx,eax
  413405:	ret    
  413406:	ret    0xd8b8
  413409:	xor    ebx,edx
  41340b:	adc    ch,BYTE PTR [ebp+0x27]
  41340e:	jmp    0x4133e5
  413410:	scas   eax,DWORD PTR es:[edi]
  413411:	mov    ebp,0xc1f0000f
  413416:	cmp    ecx,DWORD PTR [ecx-0x6b]
  413419:	loopne 0x413459
  41341b:	mov    eax,0x46a176d3
  413420:	pushf  
  413421:	std    
  413422:	xor    edx,DWORD PTR [esi+eiz*2-0x7b307f4f]
  413429:	or     BYTE PTR [ecx-0x4aff4857],dl
  41342f:	jne    0x4133c3
  413431:	mov    ah,0xbd
  413433:	mov    esi,0xfa2d1938
  413438:	in     eax,0xef
  41343a:	fist   WORD PTR [esi+eiz*2]
  41343d:	(bad)  
  41343e:	aad    0xdd
  413440:	cdq    
  413441:	inc    esi
  413442:	adc    esi,DWORD PTR [ecx-0x1954496c]
  413448:	outs   dx,BYTE PTR ds:[esi]
  413449:	(bad)  
  41344a:	fsubrp st(7),st
  41344c:	mov    fs,WORD PTR [esi+0x6e25f9e5]
  413452:	push   esi
  413453:	mov    dh,0xb2
  413455:	mov    DWORD PTR [edi-0x3b463fe1],edx
  41345b:	ins    DWORD PTR es:[edi],dx
  41345c:	call   0x63eab713
  413461:	jbe    0x413425
  413463:	shr    ah,cl
  413465:	ss push 0x78
  413468:	mov    dl,0xe8
  41346a:	jl     0x413444
  41346c:	sbb    eax,0x72d15676
  413471:	add    edi,DWORD PTR [eax+0x38]
  413474:	xchg   edx,eax
  413475:	(bad)  
  413476:	xor    ah,dl
  413478:	push   cs
  413479:	cmp    DWORD PTR [edx-0x63533309],ecx
  41347f:	fmul   st,st(3)
  413481:	ret    0x12eb
  413484:	inc    ebx
  413485:	aam    0x5e
  413487:	in     eax,dx
  413488:	lea    ebx,[ecx+0x12]
  41348b:	inc    esi
  41348c:	xchg   ecx,eax
  41348d:	shr    cl,cl
  41348f:	mov    edi,0x70d2ad30
  413494:	inc    edx
  413495:	stos   BYTE PTR es:[edi],al
  413496:	in     eax,dx
  413497:	sar    BYTE PTR [esi+0x551f60ff],1
  41349d:	mov    al,0x6e
  41349f:	or     eax,0xdf80865a
  4134a4:	jge    0x4134ed
  4134a6:	and    eax,0x2e27fe0
  4134ab:	stos   DWORD PTR es:[edi],eax
  4134ac:	add    al,0xd7
  4134ae:	nop
  4134af:	dec    ebp
  4134b0:	loope  0x413530
  4134b2:	pop    esi
  4134b3:	lods   eax,DWORD PTR ds:[esi]
  4134b4:	inc    esp
  4134b5:	retf   0x7cb3
  4134b8:	pop    ds
  4134b9:	ret    0x11a4
  4134bc:	jg     0x41348e
  4134be:	jo     0x413521
  4134c0:	fild   QWORD PTR [ecx+eax*2-0x79]
  4134c4:	(bad)  
  4134c5:	mov    esi,0x72e4c58b
  4134ca:	adc    ch,bl
  4134cc:	pop    edi
  4134cd:	push   ebp
  4134ce:	mov    ah,0x42
  4134d0:	fs nop
  4134d2:	out    0xbf,eax
  4134d4:	mov    ?,edi
  4134d6:	xchg   ebp,eax
  4134d7:	sbb    bl,BYTE PTR [edx+0x29]
  4134da:	jae    0x4134d8
  4134dc:	add    BYTE PTR [esi],bh
  4134de:	call   0xd7061b67
  4134e3:	imul   esi,DWORD PTR [esi+edi*4],0x5e24bd76
  4134ea:	retf   
  4134eb:	mov    al,ds:0xbd7af509
  4134f0:	repnz mov dl,al
  4134f3:	jmp    0x291828a9
  4134f8:	int    0x92
  4134fa:	mov    edx,0x8b5e4ab6
  4134ff:	pop    esp
  413500:	cli    
  413501:	mov    fs,WORD PTR [ebx-0x1f]
  413504:	xor    eax,0x58965850
  413509:	push   0xfffffff9
  41350b:	out    dx,eax
  41350c:	(bad)  
  41350d:	es xor al,0xae
  413510:	jle    0x41352b
  413512:	and    eax,0xe806b06f
  413517:	ret    0x5e44
  41351a:	cs imul ebp,ebp,0xc57e3819
  413521:	sar    bh,cl
  413523:	aaa    
  413524:	cmp    DWORD PTR [ebx-0x68],edi
  413527:	enter  0x39c8,0x47
  41352b:	repz lds eax,FWORD PTR [eax+0x37]
  41352f:	mov    ds:0x26bc99d,al
  413534:	fisub  DWORD PTR [eax-0x22]
  413537:	jo     0x4134bb
  413539:	jmp    0x41353d
  41353b:	cwde   
  41353c:	and    al,0x80
  41353e:	mov    cl,0x67
  413540:	xor    esp,DWORD PTR [edi-0x48433d45]
  413546:	mov    dh,0x40
  413548:	fmul   QWORD PTR [edx+0x4]
  41354b:	js     0x413572
  41354d:	push   edi
  41354e:	popa   
  41354f:	imul   ecx,DWORD PTR [esi],0xbc4639ea
  413555:	or     ebp,DWORD PTR [esi*2+0x5940a42d]
  41355c:	cwde   
  41355d:	and    BYTE PTR [esi-0x22d7b3cd],bl
  413563:	jo     0x41354a
  413565:	pop    es
  413566:	inc    esi
  413567:	and    BYTE PTR [ebx-0xe7f0340],al
  41356d:	fnstsw WORD PTR [edi]
  41356f:	sbb    eax,0x9644893
  413574:	daa    
  413575:	pushf  
  413576:	retf   0x3a6e
  413579:	pop    esp
  41357a:	xchg   esp,eax
  41357b:	xchg   DWORD PTR [ebp*2+0x62775b1],esp
  413582:	sub    dh,ah
  413584:	jle    0x4135a6
  413586:	ret    
  413587:	jno    0x4135e0
  413589:	and    al,0x9c
  41358b:	pop    ebp
  41358c:	lods   eax,DWORD PTR ds:[esi]
  41358d:	ficom  DWORD PTR [eax+0x54f88284]
  413593:	add    ah,BYTE PTR cs:[ebp+0x6b309a65]
  41359a:	push   ss
  41359b:	frstor [edx+0x77ae1971]
  4135a1:	jns    0x41353f
  4135a3:	jb     0x413545
  4135a5:	mov    eax,0x852fa8fc
  4135aa:	(bad)  
  4135ab:	cwde   
  4135ac:	mov    al,0xad
  4135ae:	push   ecx
  4135af:	mov    eax,ds:0xfc0dd867
  4135b4:	mov    al,0x9c
  4135b6:	fwait
  4135b7:	test   eax,edi
  4135b9:	jne    0x413577
  4135bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135bc:	or     BYTE PTR [ebx],bh
  4135be:	mov    al,ds:0xae1ecc51
  4135c3:	(bad)  
  4135c4:	mov    ah,0x7
  4135c6:	mov    dh,0x2d
  4135c8:	push   edx
  4135c9:	outs   dx,BYTE PTR ds:[esi]
  4135ca:	pusha  
  4135cb:	xchg   BYTE PTR [edx-0x4e8516ec],dl
  4135d1:	mul    DWORD PTR [eax+0x11]
  4135d4:	jne    0x413569
  4135d6:	scas   al,BYTE PTR es:[edi]
  4135d7:	and    ebp,DWORD PTR [ebx+0x7]
  4135da:	les    ebx,FWORD PTR [edi-0x2535668a]
  4135e0:	es push 0x21
  4135e3:	scas   eax,DWORD PTR es:[edi]
  4135e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135e5:	xor    al,0x7a
  4135e7:	ret    0x21d9
  4135ea:	mov    ah,0xd7
  4135ec:	call   0x3ba24985
  4135f1:	mov    al,BYTE PTR [esi]
  4135f3:	aam    0xed
  4135f5:	mov    eax,0xe1284da0
  4135fa:	inc    ebp
  4135fb:	jl     0x413648
  4135fd:	push   ebx
  4135fe:	mov    ecx,0x6908c79c
  413603:	mov    ss,WORD PTR [ebx+0x43eedb4b]
  413609:	adc    esi,ecx
  41360b:	sbb    BYTE PTR [ecx-0x34423b98],bh
  413611:	adc    bl,BYTE PTR [ebx-0x3e]
  413614:	stos   BYTE PTR es:[edi],al
  413615:	adc    bh,al
  413617:	pop    edi
  413618:	jae    0x413624
  41361a:	pop    ebx
  41361b:	outs   dx,DWORD PTR ds:[esi]
  41361c:	mov    bl,0x7f
  41361e:	xchg   edx,eax
  41361f:	jmp    0x4135c7
  413621:	aam    0x4e
  413623:	xchg   edi,eax
  413624:	(bad)  
  413625:	fidivr DWORD PTR [ebx+edx*8+0x4029bab4]
  41362c:	push   edx
  41362d:	push   ds
  41362e:	test   bh,0xbe
  413631:	inc    edi
  413632:	inc    ebp
  413633:	mov    edx,0x589059a4
  413638:	enter  0xea42,0x7b
  41363c:	lea    edx,[esi+0x4c]
  41363f:	out    dx,eax
  413640:	bound  edx,QWORD PTR [eax-0x12]
  413643:	push   ebx
  413644:	mov    eax,ds:0x556ab9ff
  41364a:	(bad)  
  41364c:	punpckhwd mm0,QWORD PTR [eax]
  41364f:	pop    edi
  413650:	lahf   
  413651:	out    dx,al
  413652:	cmp    edx,edi
  413654:	mov    ds:0x82e68d3c,eax
  413659:	test   eax,0xc42e9e61
  41365e:	jge    0x413611
  413660:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  413662:	fsubp  st(1),st
  413664:	stos   BYTE PTR es:[edi],al
  413665:	lods   al,BYTE PTR ds:[esi]
  413666:	test   DWORD PTR [ebp+0x8e0da25],ebx
  41366c:	bound  edx,QWORD PTR ss:[ebp+0x46]
  413670:	test   BYTE PTR [edi+0x5c],dh
  413673:	sub    DWORD PTR [edx],ebx
  413675:	inc    edx
  413676:	or     ch,BYTE PTR [esi+0x410bb36f]
  41367c:	dec    esp
  41367d:	and    DWORD PTR ss:[edi+0x455d31e7],ecx
  413684:	mov    ch,0x1d
  413686:	jp     0x413703
  413688:	inc    esi
  413689:	cmp    al,0xe7
  41368b:	aad    0xd1
  41368d:	scas   al,BYTE PTR es:[edi]
  41368e:	jb     0x4136b6
  413690:	push   es
  413691:	mov    cl,0xd6
  413693:	mov    ds:0x41fbd0fd,al
  413698:	fdivr  st,st(4)
  41369a:	fisttp WORD PTR [esi+0xd039cb6]
  4136a0:	js     0x4136cb
  4136a2:	addr16 inc esi
  4136a4:	loop   0x4136f1
  4136a6:	shl    BYTE PTR [edi],0x14
  4136a9:	in     eax,dx
  4136aa:	pop    ebx
  4136ab:	rcl    ecx,cl
  4136ad:	cmp    ecx,DWORD PTR [edx]
  4136af:	ja     0x41371b
  4136b1:	add    dl,BYTE PTR [ebp-0x1a]
  4136b4:	cmp    eax,0xe8f5ce3f
  4136b9:	cmp    dl,BYTE PTR [eax-0x43]
  4136bc:	and    al,0xd3
  4136be:	mov    al,0x50
  4136c0:	mov    eax,0x3d51fbc1
  4136c5:	cmp    al,0xad
  4136c7:	(bad)  
  4136c8:	push   ecx
  4136c9:	inc    edi
  4136ca:	and    al,0x37
  4136cc:	jns    0x4136ab
  4136ce:	scas   eax,DWORD PTR es:[edi]
  4136cf:	inc    esp
  4136d0:	or     ebx,DWORD PTR [ecx]
  4136d2:	out    dx,eax
  4136d3:	push   ebp
  4136d4:	cwde   
  4136d5:	push   ss
  4136d6:	ss pop edx
  4136d8:	adc    DWORD PTR [edi+edi*4],edi
  4136db:	inc    ebx
  4136dc:	mov    ds:0x963506da,eax
  4136e1:	inc    ecx
  4136e2:	shl    DWORD PTR ds:0xdb797dc3,0x76
  4136e9:	ins    BYTE PTR es:[edi],dx
  4136ea:	mov    eax,0x62e9ef3b
  4136ef:	repz fistp WORD PTR [edi]
  4136f2:	scas   eax,DWORD PTR es:[edi]
  4136f3:	or     al,0x63
  4136f5:	clc    
  4136f6:	mov    edi,0xd191062e
  4136fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136fc:	xchg   ebx,eax
  4136fd:	arpl   bx,bx
  4136ff:	fcom   DWORD PTR gs:0xc34a8c2a
  413706:	xchg   BYTE PTR [esi+0x2f],dh
  413709:	iret   
  41370a:	cld    
  41370b:	sbb    ah,BYTE PTR [edi-0x2]
  41370e:	aaa    
  41370f:	dec    ecx
  413710:	(bad)  
  413711:	shr    DWORD PTR [edi-0x32],1
  413714:	jns    0x413780
  413716:	push   ebp
  413717:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413718:	(bad)  
  413719:	fistp  QWORD PTR [edi]
  41371b:	fst    QWORD PTR [ecx+edx*2+0x46]
  41371f:	push   ebx
  413720:	clc    
  413721:	out    0x3f,al
  413723:	(bad)  [eax]
  413725:	shl    DWORD PTR [edi],0x99
  413728:	adc    BYTE PTR [ecx],dl
  41372a:	dec    edi
  41372b:	fbld   TBYTE PTR [edx+0x1089f849]
  413731:	sbb    ecx,DWORD PTR [edi-0x24]
  413734:	mov    edx,cr3
  413737:	pop    ebx
  413738:	call   FWORD PTR [ebx+0x532f6d8]
  41373e:	adc    eax,0x3ed9ef01
  413743:	sub    eax,0xb72185ff
  413748:	jle    0x413740
  41374a:	outs   dx,BYTE PTR ds:[esi]
  41374b:	das    
  41374c:	mov    ch,BYTE PTR ds:0xa6c36187
  413752:	adc    BYTE PTR [eax+0x67060802],al
  413758:	or     dl,BYTE PTR [ecx-0x8570f12]
  41375e:	mov    ecx,0x6740a2b
  413763:	push   edx
  413764:	and    DWORD PTR [edx-0x2d],0xe9aa49fd
  41376b:	dec    ecx
  41376c:	mov    ecx,0xd4d4dc3c
  413771:	xchg   edi,eax
  413772:	test   eax,0x1d8b6afe
  413777:	ins    BYTE PTR es:[edi],dx
  413778:	aad    0x76
  41377a:	jne    0x413767
  41377c:	jmp    0x736e:0xb9f0c23b
  413783:	cmp    ch,BYTE PTR [edi+0x23]
  413786:	not    DWORD PTR [ecx+ebx*1-0x62246b18]
  41378d:	dec    edi
  41378e:	jb     0x413747
  413790:	shr    DWORD PTR [ebx],cl
  413792:	jne    0x4137d6
  413794:	je     0x41373a
  413796:	add    DWORD PTR [esi+esi*4-0x61],esp
  41379a:	pop    es
  41379b:	lds    ecx,FWORD PTR [esi+ecx*8-0x64]
  41379f:	pop    es
  4137a0:	out    0xcc,eax
  4137a2:	xor    eax,0x314b6312
  4137a7:	ss jl  0x4137e8
  4137aa:	mov    ebp,0x585ad7f8
  4137af:	popf   
  4137b0:	ins    BYTE PTR es:[edi],dx
  4137b1:	ja     0x4137a5
  4137b3:	mov    esi,DWORD PTR [edi+0xa798c39]
  4137b9:	(bad)  
  4137ba:	fbstp  TBYTE PTR [edx+esi*8-0x108483f]
  4137c1:	cli    
  4137c2:	repnz mov esi,0xeb6d97e9
  4137c8:	fist   WORD PTR [edx+0x4f]
  4137cb:	lock popf 
  4137cd:	adc    DWORD PTR [edi],0x19
  4137d0:	in     eax,dx
  4137d1:	mov    esp,0x58195978
  4137d6:	loope  0x413768
  4137d8:	xchg   edx,eax
  4137d9:	jne    0x413800
  4137db:	not    BYTE PTR [esi-0x430ba24c]
  4137e1:	not    ch
  4137e3:	mov    edi,0x2e829b15
  4137e8:	inc    ebp
  4137e9:	pusha  
  4137ea:	xchg   esi,eax
  4137eb:	rcr    BYTE PTR [edx+0x3a6e119b],cl
  4137f1:	adc    al,0x8b
  4137f3:	add    BYTE PTR [esp+ecx*2-0x7111a1e7],bl
  4137fa:	mul    DWORD PTR [eax-0x22]
  4137fd:	into   
  4137fe:	mov    eax,ds:0xc0b69d52
  413803:	push   0x6ce907fa
  413808:	jo     0x413838
  41380a:	inc    eax
  41380b:	test   eax,0x495e7a24
  413810:	push   esp
  413811:	(bad)  
  413812:	ins    BYTE PTR es:[edi],dx
  413813:	out    0x6c,ax
  413816:	(bad)  
  413817:	aas    
  413818:	mov    al,0xda
  41381a:	push   cs
  41381b:	jp     0x413839
  41381d:	push   ebx
  41381e:	push   ebp
  41381f:	stos   BYTE PTR es:[edi],al
  413820:	mov    ch,0xee
  413822:	lahf   
  413823:	outs   dx,BYTE PTR ds:[esi]
  413824:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413825:	lods   eax,DWORD PTR ds:[esi]
  413826:	pop    esi
  413827:	aam    0x3e
  413829:	sar    BYTE PTR [edx+0x16],0x6f
  41382d:	(bad)  
  41382e:	mov    bl,0xfe
  413830:	inc    ebp
  413831:	bound  eax,QWORD PTR [esi]
  413833:	mov    ah,0xe6
  413835:	jecxz  0x413865
  413837:	jo     0x413831
  413839:	jl     0x4138b9
  41383b:	dec    eax
  41383c:	data16 in al,0x7a
  41383f:	mov    al,0xbc
  413841:	pop    esp
  413842:	ins    DWORD PTR es:[edi],dx
  413843:	call   0xf742:0xb8bd5222
  41384a:	cmp    al,BYTE PTR ds:0xffeaf93d
  413850:	xchg   BYTE PTR [ebx-0x75],al
  413853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413854:	pop    ebp
  413855:	and    ebx,esp
  413857:	pop    eax
  413858:	bound  esp,QWORD PTR [edi-0x61e0f2ae]
  41385e:	sti    
  41385f:	push   es
  413860:	adc    al,0x8b
  413862:	aam    0xd6
  413864:	fild   WORD PTR [ebx+0x67]
  413867:	add    DWORD PTR [ebx+0x6f021aeb],esp
  41386d:	xor    al,0x1a
  41386f:	test   al,0x3c
  413871:	ds inc eax
  413873:	inc    ecx
  413874:	retf   0x3260
  413877:	adc    eax,0xd1c1e562
  41387c:	jg     0x413861
  41387e:	aam    0x77
  413880:	lods   al,BYTE PTR ds:[esi]
  413881:	icebp  
  413882:	int3   
  413883:	lods   al,BYTE PTR ds:[esi]
  413884:	xor    ebx,DWORD PTR [edi-0x38]
  413887:	scas   al,BYTE PTR es:[edi]
  413888:	sbb    ebx,ebp
  41388a:	jb     0x4138a0
  41388c:	int3   
  41388d:	pop    ss
  41388e:	test   DWORD PTR [edx-0x7be590fa],ebp
  413894:	gs jg  0x4138b0
  413897:	pop    esi
  413898:	mov    ch,0x16
  41389a:	mov    ch,0x1d
  41389c:	out    dx,eax
  41389d:	fnsave [ecx]
  41389f:	retf   0xb00b
  4138a2:	test   edi,edi
  4138a4:	sbb    ebx,DWORD PTR [esi]
  4138a6:	sub    DWORD PTR [esi],edx
  4138a8:	xlat   BYTE PTR ds:[ebx]
  4138a9:	pop    ds
  4138aa:	(bad)  
  4138ab:	and    BYTE PTR [edx-0x6e],bh
  4138ae:	out    0xd7,al
  4138b0:	mov    DWORD PTR [eax],ebx
  4138b2:	lahf   
  4138b3:	xlat   BYTE PTR ds:[ebx]
  4138b4:	pushf  
  4138b5:	test   DWORD PTR [edi+ebp*1+0x5d],0xfdd5995b
  4138bd:	dec    ebp
  4138be:	pop    esp
  4138bf:	icebp  
  4138c0:	hlt    
  4138c1:	mov    WORD PTR [ecx+ebp*8-0x22a1be0c],gs
  4138c8:	mov    ebx,0x55bcdb99
  4138cd:	sub    BYTE PTR [eax+0x29],dl
  4138d0:	cmp    cl,BYTE PTR [edi+0x225cccf0]
  4138d6:	jmp    0x413935
  4138d8:	xchg   ecx,eax
  4138d9:	xor    eax,0x6475c92f
  4138de:	imul   eax,DWORD PTR [esi],0x874309a9
  4138e4:	adc    BYTE PTR [esi],dh
  4138e6:	rcr    DWORD PTR [ebx],1
  4138e8:	pop    eax
  4138e9:	int3   
  4138ea:	iret   
  4138eb:	add    edx,DWORD PTR [edx-0x4e]
  4138ee:	dec    ebx
  4138ef:	repz gs in al,dx
  4138f2:	adc    DWORD PTR [edx-0x20cf32f5],ebx
  4138f8:	xor    eax,0xa518fa9e
  4138fd:	mov    bh,0xfe
  4138ff:	fs push eax
  413901:	loop   0x4138c4
  413903:	cmp    eax,0xb8e517a1
  413908:	cmp    DWORD PTR [esi-0x5387426b],esp
  41390e:	xor    ecx,DWORD PTR [ebx+0x36]
  413911:	jmp    0x17824404
  413916:	dec    esi
  413917:	add    al,0x15
  413919:	repz aad 0xa1
  41391c:	push   0xffffff9a
  41391e:	das    
  41391f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413920:	xchg   esi,eax
  413921:	test   eax,0x4e51f7c8
  413926:	imul   esi,ecx,0xffffffd2
  413929:	shl    BYTE PTR [eax+0x73],cl
  41392c:	cmp    ah,bh
  41392e:	cdq    
  41392f:	addr16 jp 0x413919
  413932:	fistp  DWORD PTR [ebx]
  413934:	aaa    
  413935:	mov    esp,0x438ce2e
  41393a:	sub    DWORD PTR [ecx-0x36],ecx
  41393d:	dec    eax
  41393e:	ss fs xchg ecx,eax
  413941:	fs mov al,0xcd
  413944:	shl    BYTE PTR [esi],cl
  413946:	div    edx
  413948:	mov    eax,ds:0x2170f2fa
  41394d:	stos   DWORD PTR es:[edi],eax
  41394e:	ss mov ebp,0xd3d79e4a
  413954:	fwait
  413955:	mov    bh,0xd3
  413957:	arpl   bp,cx
  413959:	mov    ebx,0xf1c105cb
  41395e:	adc    BYTE PTR [esi+eax*1],ch
  413961:	pop    ecx
  413962:	aaa    
  413963:	xchg   esp,eax
  413964:	adc    ecx,ecx
  413966:	dec    ecx
  413967:	pop    edx
  413968:	dec    ecx
  413969:	push   0xd2511fce
  41396e:	stc    
  41396f:	cli    
  413970:	inc    eax
  413971:	or     bl,0x80
  413974:	fcom   DWORD PTR ss:[eax+0x68125ee8]
  41397b:	cs push esi
  41397d:	shl    DWORD PTR [si],0x62
  413981:	mov    eax,0x4a5173b2
  413986:	adc    al,ah
  413988:	imul   esi,edi,0x98d65681
  41398e:	adc    DWORD PTR [eax-0x5f],0x35b4fc84
  413995:	xor    BYTE PTR [ebp+0x34702f2e],bh
  41399b:	push   esp
  41399c:	fld    TBYTE PTR [eax-0x10a3e17f]
  4139a2:	jns    0x4139ca
  4139a4:	pop    ss
  4139a5:	popa   
  4139a6:	push   edi
  4139a7:	pop    ss
  4139a8:	out    0xde,eax
  4139aa:	mov    BYTE PTR ds:0xbe38196b,cl
  4139b0:	pop    ecx
  4139b1:	sbb    DWORD PTR [esi+0x8],esi
  4139b4:	lods   eax,DWORD PTR ds:[esi]
  4139b5:	aaa    
  4139b6:	ret    
  4139b7:	push   ebx
  4139b8:	inc    edi
  4139b9:	mov    al,ds:0x2a1bcc0c
  4139be:	push   eax
  4139bf:	push   cs
  4139c0:	mov    ebx,0x6954d017
  4139c5:	pushf  
  4139c6:	inc    edi
  4139c7:	imul   edx,DWORD PTR [ebx],0x7fbc5d23
  4139cd:	pop    ecx
  4139ce:	outs   dx,BYTE PTR ds:[esi]
  4139cf:	outs   dx,BYTE PTR ds:[esi]
  4139d0:	cmp    BYTE PTR [ebx+0x34b9bf10],bh
  4139d6:	scas   al,BYTE PTR es:[edi]
  4139d7:	mov    bp,0x4de1
  4139db:	lds    edi,FWORD PTR [edx]
  4139dd:	lods   al,BYTE PTR ds:[esi]
  4139de:	ins    BYTE PTR es:[edi],dx
  4139df:	jmp    0x413a02
  4139e1:	jmp    0xb4246ab6
  4139e6:	scas   al,BYTE PTR es:[edi]
  4139e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139e8:	adc    ecx,ebp
  4139ea:	mov    esp,0xc8623dfe
  4139ef:	pop    es
  4139f0:	das    
  4139f1:	jmp    0x413a38
  4139f3:	xor    bh,BYTE PTR [esi]
  4139f5:	mov    bl,0x88
  4139f7:	ja     0x413a4e
  4139f9:	fnstsw WORD PTR [edi+0x79c0df1d]
  4139ff:	inc    edi
  413a00:	gs lock dec esp
  413a03:	popa   
  413a04:	ret    0x99ce
  413a07:	cwde   
  413a08:	lods   al,BYTE PTR ds:[esi]
  413a09:	(bad)  
  413a0a:	xchg   ebp,eax
  413a0b:	cmp    BYTE PTR [ecx-0x2a],0x2c
  413a0f:	shr    edi,0xf4
  413a12:	out    0x9a,al
  413a14:	xor    al,0xf7
  413a16:	inc    edi
  413a17:	or     al,0x4c
  413a19:	add    edi,DWORD PTR [esi+0x5b909a8d]
  413a1f:	pop    ebx
  413a20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a21:	xor    BYTE PTR [ecx],0xa4
  413a24:	jmp    0x8ee8:0xb09d6c2c
  413a2b:	repz jg 0x413a6e
  413a2e:	dec    edx
  413a2f:	add    al,dl
  413a31:	stos   DWORD PTR es:[edi],eax
  413a32:	adc    dh,bl
  413a34:	mov    bh,0xdb
  413a36:	xchg   DWORD PTR [edi+0x66],esi
  413a39:	or     al,0xe9
  413a3b:	sbb    DWORD PTR [ebx+0x2c8551b5],0x264288d8
  413a45:	sub    al,0x32
  413a47:	jmp    0x413a80
  413a49:	and    ah,BYTE PTR [esi]
  413a4b:	nop
  413a4c:	jae    0x413aaf
  413a4e:	xchg   ch,bh
  413a50:	mov    ah,0x2a
  413a52:	or     eax,0xd7c4df
  413a57:	mov    eax,ebx
  413a59:	sbb    al,0x95
  413a5b:	adc    dl,BYTE PTR [eax-0x2a]
  413a5e:	or     ecx,edx
  413a60:	std    
  413a61:	cdq    
  413a62:	das    
  413a63:	dec    edx
  413a64:	loopne 0x413a98
  413a66:	fwait
  413a67:	add    eax,0xbdf12302
  413a6c:	out    dx,eax
  413a6d:	ds pop ecx
  413a6f:	and    ebx,ebp
  413a71:	sar    BYTE PTR [eax+0x35c7ba19],cl
  413a77:	and    eax,0x2c7b6c0
  413a7c:	push   ebp
  413a7d:	inc    esi
  413a7e:	sbb    BYTE PTR [eax],bl
  413a80:	lods   eax,DWORD PTR ds:[esi]
  413a81:	je     0x413aaf
  413a83:	rcr    esp,1
  413a85:	bound  eax,QWORD PTR [ecx]
  413a87:	fisub  WORD PTR [ebx-0x66]
  413a8a:	fdiv   QWORD PTR ds:0xcab2bc09
  413a90:	dec    eax
  413a91:	retf   0xdb10
  413a94:	(bad)  
  413a95:	mov    ds:0x94ba4dd5,eax
  413a9a:	std    
  413a9b:	mov    eax,ecx
  413a9d:	aaa    
  413a9e:	out    0xba,eax
  413aa0:	inc    DWORD PTR [ecx]
  413aa2:	outs   dx,DWORD PTR ds:[esi]
  413aa3:	test   al,0x1f
  413aa5:	test   eax,0x411d910
  413aaa:	ret    
  413aab:	(bad)  
  413aac:	xor    eax,DWORD PTR [edi]
  413aae:	int    0x44
  413ab0:	cmp    al,0x46
  413ab2:	cs pop es
  413ab4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ab5:	inc    esi
  413ab6:	outs   dx,DWORD PTR ds:[esi]
  413ab7:	aas    
  413ab8:	dec    edx
  413ab9:	inc    ebp
  413aba:	sahf   
  413abb:	retf   0xf9bd
  413abe:	pop    eax
  413abf:	pop    ds
  413ac0:	stos   BYTE PTR es:[edi],al
  413ac1:	push   ss
  413ac2:	pop    ss
  413ac3:	jecxz  0x413abf
  413ac5:	ds call 0x3d12:0xfaedebe9
  413acd:	daa    
  413ace:	sbb    edi,DWORD PTR [ebx+0x29]
  413ad1:	mov    edx,0x8f9b0a8f
  413ad6:	sub    BYTE PTR [eax+0x73124b6a],0x99
  413add:	push   0xffffffb7
  413adf:	sub    eax,0x4d867953
  413ae4:	and    eax,0x3562db69
  413ae9:	in     al,0x44
  413aeb:	frstor [ecx-0x21]
  413aee:	dec    edi
  413aef:	int    0xa6
  413af1:	xchg   ebx,eax
  413af2:	ret    0xf02d
  413af5:	pop    edi
  413af6:	dec    edx
  413af7:	sub    ecx,DWORD PTR [ebx-0x5603f856]
  413afd:	adc    ebx,edi
  413aff:	xlat   BYTE PTR ds:[ebx]
  413b00:	mov    WORD PTR [ebx],ds
  413b02:	or     BYTE PTR [ebp+0x2c73686e],0xf5
  413b09:	cmc    
  413b0a:	(bad)  
  413b0b:	ja     0x413afe
  413b0d:	inc    ecx
  413b0e:	(bad)  
  413b0f:	rol    edi,1
  413b11:	cli    
  413b12:	fild   QWORD PTR [eax+0x55]
  413b15:	push   esi
  413b16:	out    0x2,eax
  413b18:	std    
  413b19:	ins    BYTE PTR es:[edi],dx
  413b1a:	mov    ah,BYTE PTR [ebp-0x5195cd1f]
  413b20:	dec    edi
  413b21:	push   ds
  413b22:	dec    edi
  413b23:	loope  0x413aef
  413b25:	loop   0x413b1a
  413b27:	stc    
  413b28:	aam    0xe5
  413b2a:	lds    eax,FWORD PTR [edx-0x4e]
  413b2d:	mov    WORD PTR [ebp+0x47],cs
  413b30:	stos   BYTE PTR es:[edi],al
  413b31:	cmp    ebx,DWORD PTR [edx-0x2b42413b]
  413b37:	cwde   
  413b38:	mov    edi,0x8a450607
  413b3d:	hlt    
  413b3e:	xor    DWORD PTR [ebx+0xf],esp
  413b41:	out    0xf4,eax
  413b43:	add    bh,BYTE PTR [ecx]
  413b45:	(bad)  
  413b46:	in     al,0x56
  413b48:	rcr    BYTE PTR [ecx+eiz*4],1
  413b4b:	dec    edi
  413b4c:	adc    cl,al
  413b4e:	pop    ecx
  413b4f:	sub    BYTE PTR [edx-0x28],dl
  413b52:	sbb    BYTE PTR ds:0x36c9c953,0xe4
  413b59:	arpl   bx,bp
  413b5b:	repz and BYTE PTR [edx+0x71],0xd1
  413b60:	call   0xf8bdf7f8
  413b65:	jb     0x413bb5
  413b67:	jb     0x413b9c
  413b69:	xchg   esi,eax
  413b6a:	jns    0x413bdf
  413b6c:	jmp    0x9c05ac1b
  413b71:	pop    ebp
  413b72:	inc    ebx
  413b73:	stos   BYTE PTR es:[edi],al
  413b74:	push   esi
  413b75:	retf   0xbc38
  413b78:	sar    BYTE PTR [esi+0x5d],0xe0
  413b7c:	jg     0x413bce
  413b7e:	sti    
  413b7f:	hlt    
  413b80:	ret    0x26d0
  413b83:	repnz sbb al,0xc
  413b86:	or     eax,0x20a908d5
  413b8b:	push   esp
  413b8c:	push   eax
  413b8d:	mov    WORD PTR [eax],?
  413b8f:	lods   eax,DWORD PTR ds:[esi]
  413b90:	mov    dl,0x9
  413b92:	test   DWORD PTR [esi+ebp*2-0x3],esp
  413b96:	cs iret 
  413b98:	retf   
  413b99:	mov    WORD PTR [ebx],es
  413b9b:	adc    esp,DWORD PTR [ebp+0x7e]
  413b9e:	loop   0x413b39
  413ba0:	add    cl,BYTE PTR ds:0x487f8f74
  413ba6:	mov    bh,0x47
  413ba8:	xchg   ebx,eax
  413ba9:	and    DWORD PTR [esi+0x5f112746],esp
  413baf:	fsubp  st(1),st
  413bb1:	js     0x413c2f
  413bb3:	sbb    ebx,DWORD PTR cs:[edx]
  413bb6:	js     0x413b9d
  413bb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bb9:	rcl    BYTE PTR [ecx-0x41],0x41
  413bbd:	stos   BYTE PTR es:[edi],al
  413bbe:	jle    0x413b6b
  413bc0:	rol    BYTE PTR [ebp+0x15dbed75],0xe9
  413bc7:	aas    
  413bc8:	jo     0x413c3a
  413bca:	adc    al,0xbd
  413bcc:	in     al,0x45
  413bce:	add    eax,0x96917387
  413bd3:	(bad)  
  413bd4:	ss loop 0x413bf7
  413bd7:	rcr    ebp,0xf5
  413bda:	jle    0x413b6b
  413bdc:	add    al,BYTE PTR [esi-0x4f996779]
  413be2:	popf   
  413be3:	inc    ebx
  413be4:	mov    ebp,0x912abeed
  413be9:	loopne 0x413c18
  413beb:	call   0x1af3:0x6225f12a
  413bf2:	or     al,0x11
  413bf4:	sub    bh,ch
  413bf6:	sub    al,0x2
  413bf8:	aad    0xde
  413bfa:	dec    ebp
  413bfb:	gs jg  0x413bad
  413bfe:	out    dx,al
  413bff:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  413c01:	sub    cl,dh
  413c03:	sub    cl,al
  413c05:	rcl    BYTE PTR [edi],cl
  413c07:	std    
  413c08:	push   cs
  413c09:	mov    esp,0xd1e15b87
  413c0e:	pop    eax
  413c0f:	mov    ds:0x2134c30d,ax
  413c15:	push   esp
  413c16:	cmc    
  413c17:	popf   
  413c18:	call   DWORD PTR [ecx+eiz*2+0x42]
  413c1c:	jl     0x413c07
  413c1e:	jb     0x413c3b
  413c20:	dec    ecx
  413c21:	jge    0x413c62
  413c23:	jo     0x413bd9
  413c25:	imul   ecx,DWORD PTR [ebp-0x31226df3],0xe46d0167
  413c2f:	aas    
  413c30:	inc    ebx
  413c31:	xchg   edi,eax
  413c32:	inc    esp
  413c33:	jae    0x413c73
  413c35:	jne    0x413bf6
  413c37:	jg     0x413c35
  413c39:	push   edx
  413c3a:	cwde   
  413c3b:	mov    esp,0xf213274d
  413c40:	sbb    DWORD PTR [ebp-0x36dc5dbb],esi
  413c46:	lock repz addr16 (bad) 
  413c4a:	in     eax,dx
  413c4b:	mov    esi,0x355bea34
  413c50:	add    al,BYTE PTR [ebx+eax*2]
  413c53:	stos   BYTE PTR es:[edi],al
  413c54:	mov    dh,0xa3
  413c56:	lods   al,BYTE PTR ds:[esi]
  413c57:	js     0x413c4c
  413c59:	fxch   st(3)
  413c5b:	add    edi,DWORD PTR [ebx+0x74]
  413c5e:	rcr    BYTE PTR [ecx+0x70],cl
  413c61:	sti    
  413c62:	adc    cl,BYTE PTR [edx+0x61456b56]
  413c68:	lea    ebx,[ecx+edx*2+0x564552f6]
  413c6f:	cmp    bh,BYTE PTR [esi-0x40]
  413c72:	jmp    0x14f5:0x457a2d33
  413c79:	add    BYTE PTR ds:0x2e5ecb51,bh
  413c7f:	test   DWORD PTR [eax-0x25],esi
  413c82:	xchg   ebx,eax
  413c83:	jb     0xbb2f1c1e
  413c89:	sbb    al,0x5f
  413c8b:	cmp    eax,esi
  413c8d:	loopne 0x413c4b
  413c8f:	pushf  
  413c90:	dec    edi
  413c91:	repnz adc al,dh
  413c94:	aaa    
  413c95:	sti    
  413c96:	idiv   DWORD PTR [ebx+0x4e]
  413c99:	js     0x413c56
  413c9b:	scas   al,BYTE PTR es:[edi]
  413c9c:	pop    ebx
  413c9d:	rcr    DWORD PTR [edi],0xeb
  413ca0:	xchg   edi,eax
  413ca1:	push   ecx
  413ca2:	rcr    BYTE PTR [ecx+0x50670f7a],1
  413ca8:	js     0x808f80ef
  413cae:	sub    al,0x75
  413cb0:	jo     0x413cdd
  413cb2:	shr    ch,cl
  413cb4:	arpl   si,cx
  413cb6:	sub    bh,BYTE PTR [eax-0x2bb159a9]
  413cbc:	retf   0xd7ba
  413cbf:	in     eax,0xb0
  413cc1:	dec    esi
  413cc2:	xchg   esp,eax
  413cc3:	push   DWORD PTR [edi-0x3cae9dca]
  413cc9:	ret    0x8e5f
  413ccc:	and    al,0x1e
  413cce:	cwde   
  413ccf:	dec    esi
  413cd0:	pop    ebx
  413cd1:	jmp    0x638f:0x3f1f3358
  413cd8:	sbb    BYTE PTR [ebp+0x42],bh
  413cdb:	je     0x413d21
  413cdd:	addr16 (bad) 
  413ce0:	sbb    dl,BYTE PTR [ebx+0x31]
  413ce3:	xor    DWORD PTR [edx],eax
  413ce5:	popf   
  413ce6:	jecxz  0x413cfb
  413ce8:	or     BYTE PTR [eax-0x3f76d974],cl
  413cee:	test   BYTE PTR [esp+ebp*2],bh
  413cf1:	nop
  413cf2:	test   BYTE PTR [edx-0xc],dh
  413cf5:	ins    DWORD PTR es:[edi],dx
  413cf6:	ds aad 0xdb
  413cf9:	xor    eax,0xad2ebad3
  413cfe:	pop    ebx
  413cff:	push   esi
  413d00:	fisttp QWORD PTR [ebx-0x33a0ca91]
  413d06:	sbb    cl,BYTE PTR [esp+eax*1+0x5e]
  413d0a:	jb     0x413ca9
  413d0c:	pop    esp
  413d0d:	cmp    dl,BYTE PTR [ebx+0x76]
  413d10:	sbb    DWORD PTR [edi+ebp*8],eax
  413d13:	mov    ah,0x9b
  413d15:	jecxz  0x413d3f
  413d17:	or     BYTE PTR [eax+0x63],0xdd
  413d1b:	adc    bh,BYTE PTR [edx+edx*1-0x64]
  413d1f:	dec    eax
  413d20:	or     BYTE PTR [edx-0x1bc7d84f],ah
  413d26:	popa   
  413d27:	scas   al,BYTE PTR es:[edi]
  413d28:	pop    ebx
  413d29:	adc    ebx,esp
  413d2b:	and    esi,DWORD PTR [ebp+0x13]
  413d2e:	aas    
  413d2f:	sub    DWORD PTR [esi-0x8],0x78
  413d33:	and    esi,ebp
  413d35:	pop    ecx
  413d36:	jno    0x413cca
  413d38:	dec    eax
  413d39:	mov    ecx,0x24c6cb82
  413d3e:	cmp    bl,dl
  413d40:	or     BYTE PTR [edi+eiz*4+0x6024e5f4],cl
  413d47:	popf   
  413d48:	pop    ds
  413d49:	jae    0x413d8b
  413d4b:	aas    
  413d4c:	push   ds
  413d4d:	push   esi
  413d4e:	add    eax,0xa704e4f8
  413d53:	sbb    dh,dh
  413d55:	push   0xeffba8ae
  413d5a:	scas   al,BYTE PTR es:[edi]
  413d5b:	dec    esp
  413d5c:	or     DWORD PTR [ebp*8-0x1ff7461],eax
  413d63:	fxch   st(6)
  413d65:	sbb    al,0x8f
  413d67:	adc    BYTE PTR [ebp+0x44fea852],cl
  413d6d:	add    bh,BYTE PTR [ecx-0x38]
  413d70:	and    DWORD PTR [ecx-0x22fbe312],esp
  413d76:	lods   al,BYTE PTR ds:[esi]
  413d77:	ret    0xa1fa
  413d7a:	add    DWORD PTR [eax+0x39],esp
  413d7d:	push   esi
  413d7e:	sar    DWORD PTR [edx+ebx*1],0x2c
  413d82:	ja     0x413d04
  413d84:	xor    al,0xcc
  413d86:	xchg   edi,eax
  413d87:	mov    dl,0x31
  413d89:	rcr    BYTE PTR [esi-0x2a466519],cl
  413d8f:	std    
  413d90:	sbb    al,0x64
  413d92:	cmc    
  413d93:	arpl   WORD PTR [ebp-0x66],si
  413d96:	inc    edi
  413d97:	and    al,bh
  413d99:	fs stos BYTE PTR es:[edi],al
  413d9b:	sbb    BYTE PTR cs:0x3c952ee6,dh
  413da2:	fsub   DWORD PTR [edx+0x5aeacd4d]
  413da8:	retf   
  413da9:	xor    ecx,edi
  413dab:	pushf  
  413dac:	push   ebx
  413dad:	pmullw mm0,QWORD PTR [esi-0x14]
  413db1:	jmp    0x8831b51d
  413db6:	jle    0x413dbd
  413db8:	pop    ebp
  413db9:	xchg   ecx,eax
  413dba:	in     al,0x8e
  413dbc:	adc    BYTE PTR [eax+ebx*2],bl
  413dbf:	xchg   edx,eax
  413dc0:	ins    BYTE PTR es:[edi],dx
  413dc1:	stos   BYTE PTR es:[edi],al
  413dc2:	sub    eax,0x28cf6ba0
  413dc7:	fimul  WORD PTR [edx+0x58]
  413dca:	push   ds
  413dcb:	pop    ecx
  413dcc:	stos   BYTE PTR es:[edi],al
  413dcd:	pushf  
  413dce:	mov    dh,0xc3
  413dd0:	imul   DWORD PTR [edx-0x2ca4a5dd]
  413dd6:	out    dx,al
  413dd7:	rol    ch,1
  413dd9:	mov    ds:0x16718226,al
  413dde:	mov    esi,esp
  413de0:	jmp    0xd97a:0xff5b180c
  413de7:	retf   0x2cd3
  413dea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413deb:	jp     0x413e0b
  413ded:	cmp    al,0xf1
  413def:	mov    ecx,0x3133bc26
  413df4:	mov    DWORD PTR gs:[ebp-0x62],edx
  413df8:	mov    edx,0x32388a8
  413dfd:	xchg   BYTE PTR [ebx+0x60],bl
  413e00:	sbb    eax,0xff6f9e34
  413e05:	ds aam 0xf
  413e08:	fild   WORD PTR [ebp-0x2d]
  413e0b:	leave  
  413e0c:	fsubr  DWORD PTR [esi]
  413e0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e0f:	cmp    bl,BYTE PTR [eax+0x54]
  413e12:	sub    dh,BYTE PTR [esi-0x6d]
  413e15:	icebp  
  413e16:	mov    ebx,0x8a116fa5
  413e1b:	sub    eax,0x3966ad7f
  413e20:	jbe    0x413e00
  413e22:	aas    
  413e23:	mov    bh,BYTE PTR [esi+0x4b4ea160]
  413e29:	test   al,0xb1
  413e2b:	cwde   
  413e2c:	push   ecx
  413e2d:	stos   BYTE PTR es:[edi],al
  413e2e:	sub    ebx,DWORD PTR [ebp+0x713c3f50]
  413e34:	inc    ecx
  413e35:	pop    ebp
  413e36:	push   ebp
  413e37:	pop    edx
  413e38:	imul   DWORD PTR [ecx-0x46]
  413e3b:	fisub  WORD PTR ds:0x6195ce03
  413e41:	cwde   
  413e42:	ds sbb al,0x1a
  413e45:	int3   
  413e46:	and    BYTE PTR [ecx+0x3ec56704],0x3a
  413e4d:	enter  0x2ef3,0x62
  413e51:	dec    eax
  413e52:	mov    gs,edi
  413e54:	stos   DWORD PTR es:[edi],eax
  413e55:	push   ebx
  413e56:	cwde   
  413e57:	stos   DWORD PTR es:[edi],eax
  413e58:	in     al,dx
  413e59:	cmp    bl,0xdd
  413e5c:	pop    ds
  413e5d:	pop    esp
  413e5e:	jl     0x413e60
  413e60:	(bad)  
  413e62:	jae    0x413eb4
  413e64:	je     0x413edc
  413e66:	and    eax,0xb359f57
  413e6b:	sahf   
  413e6c:	retf   
  413e6d:	mov    dh,0x40
  413e6f:	fnstcw WORD PTR [ecx+0x57]
  413e72:	xor    edi,DWORD PTR [ecx+0x30f034c9]
  413e78:	ffree  st(0)
  413e7a:	mov    WORD PTR [ebp-0x48],fs
  413e7d:	or     bl,ah
  413e7f:	mov    ecx,0x29087ab2
  413e84:	outs   dx,BYTE PTR ds:[esi]
  413e85:	dec    eax
  413e86:	inc    ecx
  413e87:	mov    DWORD PTR fs:[ebx],0x32f4af6c
  413e8e:	imul   BYTE PTR [edi-0xbf7fcab]
  413e94:	hlt    
  413e95:	or     cl,bl
  413e97:	pop    ds
  413e98:	pop    edi
  413e99:	xor    dl,BYTE PTR [eax]
  413e9b:	mov    dh,0x1b
  413e9d:	and    ebx,eax
  413e9f:	push   ebp
  413ea0:	inc    edx
  413ea1:	add    al,0xa8
  413ea3:	mov    al,ds:0xed78c7b9
  413ea8:	mov    edx,0x3af00ddb
  413ead:	add    al,0x1f
  413eaf:	dec    edx
  413eb0:	fst    DWORD PTR [edx+0x601cdbd4]
  413eb6:	arpl   WORD PTR [ebx+0x1e],dx
  413eb9:	cmp    eax,0x50d0f8ee
  413ebe:	fwait
  413ebf:	push   edx
  413ec0:	dec    eax
  413ec1:	dec    edi
  413ec2:	js     0x413e85
  413ec4:	es cmp eax,0x9e33284c
  413eca:	stos   DWORD PTR es:[edi],eax
  413ecb:	mov    ch,0xb6
  413ecd:	push   eax
  413ece:	call   0x743b:0xa3d900b3
  413ed5:	or     ch,ah
  413ed7:	and    BYTE PTR ds:0x2ecf4185,ah
  413edd:	add    ecx,DWORD PTR [edx-0x3086010e]
  413ee3:	mov    esp,0xd3f43a38
  413ee8:	pop    esi
  413ee9:	imul   edi,DWORD PTR [ecx-0x7b09dce4],0xffffffb4
  413ef0:	retf   0x23fe
  413ef3:	mov    ds:0x2fddd5d5,al
  413ef8:	les    esp,FWORD PTR [edi+eax*8-0x2331876]
  413eff:	cli    
  413f00:	ror    BYTE PTR [ebx],1
  413f02:	mov    eax,ds:0xc0678cd
  413f07:	out    dx,eax
  413f08:	mov    cs,WORD PTR [ecx]
  413f0a:	ret    
  413f0b:	sub    DWORD PTR [esi+0x481c287f],ebx
  413f11:	inc    ebp
  413f12:	(bad)  
  413f13:	fistp  WORD PTR [esi-0x4fa528dd]
  413f19:	adc    al,0x96
  413f1b:	inc    ecx
  413f1c:	cmp    eax,0x4347814e
  413f21:	popf   
  413f22:	xor    ecx,DWORD PTR [eax]
  413f24:	popf   
  413f25:	rcr    cl,1
  413f27:	lock pop ebp
  413f29:	std    
  413f2a:	test   BYTE PTR ds:0xae1d3033,bh
  413f30:	aas    
  413f31:	dec    eax
  413f32:	cmc    
  413f33:	pop    ecx
  413f34:	mov    dl,BYTE PTR [ecx-0x66d9795d]
  413f3a:	push   esp
  413f3b:	scas   al,BYTE PTR es:[edi]
  413f3c:	cmc    
  413f3d:	push   esi
  413f3e:	adc    ebx,ecx
  413f40:	dec    eax
  413f41:	jns    0x413edb
  413f43:	xchg   dl,al
  413f45:	mov    edx,0xc590fc5d
  413f4a:	mov    edi,0xc087e8ae
  413f4f:	retf   0x50d
  413f52:	int    0xb7
  413f54:	dec    eax
  413f55:	jmp    0x69dddbb8
  413f5a:	xor    al,0xd3
  413f5c:	aaa    
  413f5d:	mov    ebp,0x8c21282
  413f62:	sub    al,0x93
  413f64:	mov    eax,ebx
  413f66:	cmp    cl,dl
  413f68:	mov    dl,0x2
  413f6a:	xor    BYTE PTR [eax+edx*4+0x17],ch
  413f6e:	neg    BYTE PTR [esi+eiz*4]
  413f71:	fnstenv [edi+0x54]
  413f74:	les    esp,FWORD PTR [esi]
  413f76:	daa    
  413f77:	shl    ebp,0x62
  413f7a:	div    DWORD PTR [ebp+0x2ab1ec9d]
  413f80:	push   ecx
  413f81:	imul   BYTE PTR ds:0xa063f821
  413f87:	and    eax,0x20f01ac1
  413f8c:	aas    
  413f8d:	test   eax,0x6863094c
  413f92:	dec    esp
  413f93:	idiv   BYTE PTR [eax]
  413f95:	xor    ah,BYTE PTR [ebx+ebx*1+0x5d]
  413f99:	rcr    DWORD PTR [ebp+0x51],1
  413f9c:	scas   al,BYTE PTR es:[edi]
  413f9d:	jle    0x413fad
  413f9f:	dec    esi
  413fa0:	cwde   
  413fa1:	retf   0x9532
  413fa4:	inc    eax
  413fa5:	add    ecx,DWORD PTR [edi-0x30563e90]
  413fab:	lds    esp,FWORD PTR [ebx+ebp*1-0x4a2caee6]
  413fb2:	ins    DWORD PTR es:[edi],dx
  413fb3:	mov    eax,0xece01a6e
  413fb8:	cli    
  413fb9:	xchg   BYTE PTR [eax-0x24],dh
  413fbc:	push   edx
  413fbd:	jge    0x413fee
  413fbf:	ficomp WORD PTR [edx-0x1c]
  413fc2:	adc    al,0xfd
  413fc4:	aad    0x72
  413fc6:	cli    
  413fc7:	sub    eax,ecx
  413fc9:	pop    esp
  413fca:	mov    dl,0x69
  413fcc:	outs   dx,BYTE PTR ds:[esi]
  413fcd:	and    BYTE PTR [ebp-0x72],bh
  413fd0:	out    dx,eax
  413fd1:	adc    eax,0x63e47cda
  413fd6:	retf   0x59ed
  413fd9:	(bad)  
  413fda:	fdiv   DWORD PTR [ebp+0x3d5c2268]
  413fe0:	mov    edx,esi
  413fe2:	add    eax,0x992b6b1c
  413fe7:	int3   
  413fe8:	addr16 sub bh,bl
  413feb:	inc    edi
  413fec:	dec    edi
  413fed:	stc    
  413fee:	lods   al,BYTE PTR ds:[esi]
  413fef:	pop    esp
  413ff0:	add    ebx,DWORD PTR [ecx-0x12]
  413ff3:	scas   eax,DWORD PTR es:[edi]
  413ff4:	cmp    eax,0xbae5abb2
  413ff9:	pop    ebp
  413ffa:	mov    eax,0x5bffc209
  413fff:	jb     0x413f98
  414001:	xchg   esp,eax
  414002:	dec    esi
  414003:	add    dh,bl
  414005:	cld    
  414006:	xor    DWORD PTR ds:0xeb638c86,eax
  41400c:	mov    edx,0xa159dd49
  414011:	ins    DWORD PTR es:[edi],dx
  414012:	icebp  
  414013:	cmp    esi,ebp
  414015:	sar    DWORD PTR [edx-0xe4d3d06],cl
  41401b:	jge    0x413fd4
  41401d:	xor    BYTE PTR [eax+0xd],ah
  414020:	loope  0x413ff7
  414022:	mov    dl,0x5b
  414024:	in     al,0xb8
  414026:	sbb    eax,0xb9aeeb48
  41402b:	icebp  
  41402c:	xchg   ebx,eax
  41402d:	scas   al,BYTE PTR es:[edi]
  41402e:	push   ebx
  41402f:	repz push esi
  414031:	jae    0x413fd8
  414033:	aad    0x2c
  414035:	adc    esi,esp
  414037:	xor    edx,DWORD PTR [edx+0x7c]
  41403a:	cmp    bl,BYTE PTR [ecx+0x41965170]
  414040:	dec    esi
  414041:	jge    0x413fcd
  414043:	inc    edi
  414044:	xchg   BYTE PTR [ebx+0x34],cl
  414047:	or     BYTE PTR [ebx],ch
  414049:	push   edx
  41404a:	lods   al,BYTE PTR ds:[esi]
  41404b:	into   
  41404c:	call   0xf02b:0xf772104f
  414053:	lahf   
  414054:	pop    ebx
  414055:	ret    0x668d
  414058:	mov    ds:0x30a57570,eax
  41405d:	or     ebp,0xffffffd5
  414060:	lods   eax,DWORD PTR ds:[esi]
  414061:	push   ebp
  414062:	push   es
  414063:	iret   
  414064:	mov    BYTE PTR [esi],al
  414066:	jnp    0x413fee
  414068:	bound  esp,QWORD PTR [ecx-0x28]
  41406b:	pop    ecx
  41406c:	add    BYTE PTR [ebp+0x70],bl
  41406f:	into   
  414070:	adc    eax,0xba42de7c
  414075:	mov    ch,0xe2
  414077:	loope  0x414011
  414079:	sbb    DWORD PTR [edi-0x79],0x974aef3d
  414080:	repnz ds mov cl,0x22
  414084:	or     BYTE PTR [edx-0x66],bl
  414087:	jno    0x41406d
  414089:	in     eax,dx
  41408a:	aam    0xd8
  41408c:	cmc    
  41408d:	das    
  41408e:	or     DWORD PTR [esi*4+0x4d206003],ecx
  414095:	inc    edi
  414096:	mov    eax,ds:0x3e66fa2e
  41409b:	out    0xd7,eax
  41409d:	in     al,dx
  41409e:	lods   al,BYTE PTR ds:[esi]
  41409f:	aaa    
  4140a0:	add    al,BYTE PTR [ebx]
  4140a2:	ror    DWORD PTR [edx-0x6451448a],1
  4140a8:	push   es
  4140a9:	ins    DWORD PTR es:[edi],dx
  4140aa:	mov    al,0xb2
  4140ac:	push   eax
  4140ad:	inc    esp
  4140ae:	mov    bh,0x34
  4140b0:	push   esi
  4140b1:	inc    edi
  4140b2:	out    dx,al
  4140b3:	rol    ebp,0x86
  4140b6:	enter  0x7d60,0x22
  4140ba:	add    esp,ebp
  4140bc:	push   0x66
  4140be:	jp     0x4140d7
  4140c0:	retfw  0x3179
  4140c4:	or     edi,edi
  4140c6:	and    edx,DWORD PTR [eax]
  4140c8:	fcomp  QWORD PTR [ebp-0x430d4bc6]
  4140ce:	jnp    0x4140c9
  4140d0:	imul   eax,DWORD PTR [ecx+0x7e],0xee3434c3
  4140d7:	enter  0x2851,0x9b
  4140db:	imul   ebp,DWORD PTR [eax+0x7],0xffffffcc
  4140df:	inc    ebp
  4140e0:	js     0x4140ed
  4140e2:	or     eax,0x9318d487
  4140e7:	add    ecx,eax
  4140e9:	push   esi
  4140ea:	int    0x6a
  4140ec:	push   ebp
  4140ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140ee:	pop    ss
  4140ef:	pop    edi
  4140f0:	cld    
  4140f1:	jne    0x4140fd
  4140f3:	xchg   esi,eax
  4140f4:	scas   al,BYTE PTR es:[edi]
  4140f5:	lods   al,BYTE PTR ds:[esi]
  4140f6:	cmp    eax,0xd6b4c144
  4140fb:	lds    ebx,FWORD PTR ds:0xd745dcd
  414101:	or     DWORD PTR [edi-0x3d],ecx
  414104:	sbb    al,0x13
  414106:	scas   al,BYTE PTR es:[edi]
  414107:	and    al,0x64
  414109:	int3   
  41410a:	sbb    BYTE PTR [eax+0x45af9658],bl
  414110:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414111:	dec    edi
  414112:	and    eax,0x716bbb0d
  414117:	jle    0x41412c
  414119:	(bad)  
  41411c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41411d:	mov    ebp,0x29aecd41
  414122:	scas   eax,DWORD PTR es:[edi]
  414123:	add    dl,BYTE PTR [ebp+0x3c57cf1]
  414129:	je     0x41418a
  41412b:	inc    ebx
  41412c:	add    BYTE PTR [eax-0x51aa9f98],bl
  414132:	call   0x20c4981b
  414137:	add    eax,0x87876647
  41413c:	or     ebp,esi
  41413e:	mov    ds:0xa8abf8f5,al
  414143:	call   0xdc18d12
  414148:	aad    0xb
  41414a:	adc    DWORD PTR [esi+0x115144fb],edx
  414150:	fsubp  st(5),st
  414152:	fld    QWORD PTR [esi-0xb]
  414155:	cs mov bh,0x8c
  414158:	mov    dh,0xcb
  41415a:	(bad)  
  41415b:	pop    esi
  41415c:	pop    esp
  41415d:	js     0x4141b4
  41415f:	cli    
  414160:	out    dx,eax
  414161:	clc    
  414162:	stos   DWORD PTR es:[edi],eax
  414163:	jnp    0x4140ea
  414165:	xor    DWORD PTR [eax],esp
  414167:	pop    edi
  414168:	adc    ebx,DWORD PTR [edi+0x6601c50]
  41416e:	xlat   BYTE PTR ds:[ebx]
  41416f:	jae    0x414133
  414171:	dec    eax
  414172:	cwde   
  414173:	icebp  
  414174:	pop    edx
  414175:	cmp    al,0x5e
  414177:	mov    cl,BYTE PTR [ebx-0x18]
  41417a:	data16 mov bh,0xf1
  41417d:	jns    0x41412e
  41417f:	pushf  
  414180:	mov    ecx,0x938047ee
  414185:	cli    
  414186:	jno    0x41419a
  414188:	cmp    ch,ah
  41418a:	add    BYTE PTR [edi+eiz*8+0x1c],0x60
  41418f:	or     ah,BYTE PTR [ebx+0x6df6e736]
  414195:	pop    ecx
  414196:	push   esi
  414197:	adc    al,0xf2
  414199:	test   al,0x5a
  41419b:	inc    esp
  41419c:	cld    
  41419d:	stc    
  41419e:	mov    WORD PTR [ebx+0x2a370a34],ss
  4141a4:	push   eax
  4141a5:	mov    bh,0x1b
  4141a7:	mov    ch,0x90
  4141a9:	xchg   ebp,eax
  4141aa:	push   ebx
  4141ab:	je     0x414222
  4141ad:	dec    edi
  4141ae:	lods   al,BYTE PTR ds:[esi]
  4141af:	test   eax,0x4b8ce57c
  4141b4:	sahf   
  4141b5:	mov    bl,0xc4
  4141b7:	sbb    al,0xeb
  4141b9:	int    0xdc
  4141bb:	fnstenv ds:0xe365dd9a
  4141c1:	sub    BYTE PTR [esi+0x7b],al
  4141c4:	fs fwait
  4141c6:	xor    DWORD PTR [eax+edx*1],esp
  4141c9:	sub    al,0xa1
  4141cb:	push   es
  4141cc:	pop    ebx
  4141cd:	ss pop esp
  4141cf:	mov    DWORD PTR [esi],0xdf0161e6
  4141d5:	sub    BYTE PTR [ebp+0x73],0xca
  4141d9:	inc    esi
  4141da:	jae    0x414179
  4141dc:	cld    
  4141dd:	jle    0x41424d
  4141df:	dec    esp
  4141e0:	imul   edx,DWORD PTR ds:0x69202aef,0xf944dcb
  4141ea:	xchg   ebp,eax
  4141eb:	pop    esp
  4141ec:	add    eax,0xe00ec5d
  4141f1:	and    ch,BYTE PTR [eax+eax*1]
  4141f4:	or     dl,BYTE PTR [ebp-0x5a]
  4141f7:	aad    0x36
  4141f9:	test   al,0x38
  4141fb:	fisubr WORD PTR [ebx]
  4141fd:	add    DWORD PTR [ebp+0x21],edi
  414200:	jl     0x4141c7
  414202:	es (bad) 
  414205:	ds mov ebp,0x57afb018
  41420b:	adc    eax,0xca75226b
  414210:	loopne 0x414251
  414212:	(bad)  
  414213:	cmc    
  414214:	test   al,0x5a
  414216:	push   ecx
  414217:	pop    esi
  414218:	jo     0x41426b
  41421a:	outs   dx,DWORD PTR ds:[esi]
  41421b:	inc    ecx
  41421c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41421d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41421e:	loop   0x414292
  414220:	fldenv [ebx-0x1]
  414223:	je     0x41424f
  414225:	cmp    DWORD PTR [edx],ebp
  414227:	gs js  0x41421a
  41422a:	loopne 0x41423d
  41422c:	das    
  41422d:	push   ecx
  41422e:	mov    ds:0x43176452,al
  414233:	xchg   ebp,eax
  414234:	loope  0x41421f
  414236:	test   BYTE PTR [eax],ah
  414238:	mov    DWORD PTR [edx+0x68],esi
  41423b:	jge    0x414256
  41423d:	mov    al,BYTE PTR [esi+0x1a]
  414240:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414241:	test   DWORD PTR [esi],eax
  414243:	lea    ecx,[edx]
  414245:	pop    ds
  414246:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414247:	xor    ah,BYTE PTR [ecx+0x63f875b1]
  41424d:	cmc    
  41424e:	repnz mov esi,0xd923b827
  414254:	pop    esp
  414255:	std    
  414256:	sub    eax,0x47a2d46a
  41425b:	mov    DWORD PTR [ecx-0x26],0x4c24a0a2
  414262:	in     al,0x4e
  414264:	data16 jl 0x414203
  414267:	jp     0x4141ff
  414269:	jae    0x41425e
  41426b:	(bad)  
  41426c:	jno    0x414265
  41426e:	not    esi
  414270:	add    eax,0x850e384
  414275:	inc    esp
  414276:	dec    esp
  414277:	xor    al,0x63
  414279:	inc    ebx
  41427a:	js     0x41423d
  41427c:	(bad)  
  41427d:	mov    ch,0x5c
  41427f:	mov    al,0x98
  414281:	sub    DWORD PTR ds:0x3b522623,ebx
  414287:	inc    esi
  414288:	popf   
  414289:	pop    ss
  41428a:	mov    cs,WORD PTR [ebx-0x23]
  41428d:	rcr    esp,1
  41428f:	ror    DWORD PTR [edi-0x6c291076],1
  414295:	push   0x29
  414297:	popf   
  414298:	and    ebp,DWORD PTR [esi]
  41429a:	cwde   
  41429b:	sub    BYTE PTR [edi-0x21],dh
  41429e:	mov    ch,BYTE PTR [ebx]
  4142a0:	mov    edi,0x4096c362
  4142a5:	xor    al,0xab
  4142a7:	enter  0x9f25,0x8c
  4142ab:	das    
  4142ac:	mov    WORD PTR [edx+0x228570e5],gs
  4142b2:	stos   DWORD PTR es:[edi],eax
  4142b3:	das    
  4142b4:	sbb    BYTE PTR [edx],ah
  4142b6:	mov    esp,0xc9b99acf
  4142bb:	mov    edx,0x37f6295e
  4142c0:	mov    es,WORD PTR cs:[ecx-0x3]
  4142c4:	and    edx,DWORD PTR [esi+0x7779e795]
  4142ca:	adc    BYTE PTR [esi],dl
  4142cc:	aad    0x49
  4142ce:	adc    esi,edi
  4142d0:	adc    al,0x68
  4142d2:	bound  esi,QWORD PTR [edi+0x59a93179]
  4142d8:	fwait
  4142d9:	in     eax,dx
  4142da:	xor    ebp,DWORD PTR [edx+0xfa81915]
  4142e0:	outs   dx,BYTE PTR ds:[esi]
  4142e1:	in     al,dx
  4142e2:	mov    edx,0xf5e1c0b9
  4142e7:	jmp    0xd212:0x69fc5d98
  4142ee:	inc    ebp
  4142ef:	cs int 0x9b
  4142f2:	test   BYTE PTR [ebp-0x7e],ah
  4142f5:	cmp    DWORD PTR [edi+eax*2-0x7],ebp
  4142f9:	jae    0x41433f
  4142fb:	mov    dl,0x6f
  4142fd:	loope  0x41429d
  4142ff:	pop    ss
  414300:	pop    esi
  414301:	rcr    BYTE PTR [ebp+ebp*8-0x5d982fff],0xde
  414309:	xchg   ebx,eax
  41430a:	les    ebx,FWORD PTR [ecx+0x1]
  41430d:	or     al,0xc3
  41430f:	retf   0x8061
  414312:	xchg   ebp,eax
  414313:	cdq    
  414314:	push   ebp
  414315:	inc    edi
  414316:	loop   0x414308
  414318:	test   esi,0x2a75c210
  41431e:	cmc    
  41431f:	sbb    ecx,DWORD PTR [ecx+esi*8+0x4a]
  414323:	dec    ebp
  414324:	sub    bh,BYTE PTR [esi]
  414326:	lock pusha 
  414328:	icebp  
  414329:	pop    edx
  41432a:	push   ebx
  41432b:	retf   0x4b36
  41432e:	pop    esi
  41432f:	sbb    bl,BYTE PTR [edi]
  414331:	xchg   BYTE PTR [ecx],bl
  414333:	dec    esp
  414334:	cmp    BYTE PTR [esi-0x5c],cl
  414337:	arpl   cx,di
  414339:	scas   al,BYTE PTR es:[edi]
  41433a:	xor    BYTE PTR [ebx],bh
  41433c:	cmp    ah,BYTE PTR [eax+0x425cba09]
  414342:	aad    0xae
  414344:	push   edx
  414345:	nop
  414346:	call   0xe8679f93
  41434b:	(bad)  
  41434c:	(bad)  
  41434d:	adc    DWORD PTR [ebx-0x2d5d786c],ebp
  414353:	inc    edx
  414354:	stos   BYTE PTR es:[edi],al
  414355:	pop    ebx
  414356:	jbe    0x4143cc
  414358:	sub    eax,0x25e3ee85
  41435d:	stc    
  41435e:	loope  0x414318
  414360:	(bad)  
  414361:	in     al,0x3f
  414363:	test   eax,0xadcb7abd
  414368:	scas   eax,DWORD PTR es:[edi]
  414369:	jp     0x4143a8
  41436b:	adc    BYTE PTR [ecx+ebx*2+0x62274caa],ch
  414372:	je     0x414380
  414374:	cmp    ebp,esi
  414376:	loopne 0x414336
  414378:	mov    DWORD PTR [edx+edx*4],0x6a049127
  41437f:	adc    bl,BYTE PTR [ecx+0x4e]
  414382:	adc    cl,BYTE PTR [eax]
  414384:	aaa    
  414385:	neg    BYTE PTR [ecx+edx*8+0x2d]
  414389:	out    dx,al
  41438a:	loopne 0x41434c
  41438c:	into   
  41438d:	icebp  
  41438e:	jnp    0x414364
  414390:	lea    edx,[ebx]
  414392:	clc    
  414393:	and    ch,0x22
  414396:	jle    0x414323
  414398:	jmp    0x7dd7:0x6e55ff60
  41439f:	and    ecx,0x3f2c4cef
  4143a5:	cmp    DWORD PTR [ebx],0x33
  4143a8:	dec    ebp
  4143a9:	cmp    ah,dl
  4143ab:	int3   
  4143ac:	fld    st(5)
  4143ae:	aam    0x48
  4143b0:	fdiv   QWORD PTR [esi-0x5e]
  4143b3:	mov    eax,0x7b6b7ff5
  4143b8:	(bad)  
  4143b9:	and    edi,edi
  4143bb:	imul   ebx,DWORD PTR ds:0xf6c78dc3,0xb2ab5028
  4143c5:	imul   esi,DWORD PTR [esi+0x64],0x6f
  4143c9:	and    esp,DWORD PTR [edx-0x49e64f76]
  4143cf:	daa    
  4143d0:	push   0xffffff94
  4143d2:	and    eax,0x162303ee
  4143d7:	shl    esp,1
  4143d9:	dec    eax
  4143da:	cld    
  4143db:	ss into 
  4143dd:	shl    BYTE PTR [ebx],cl
  4143df:	xor    DWORD PTR [esi-0x24],0xffffff9c
  4143e3:	cs out 0x8d,al
  4143e6:	das    
  4143e7:	mov    esi,0x4ad29277
  4143ec:	dec    edx
  4143ed:	and    esi,DWORD PTR [ebx-0x43]
  4143f0:	mov    WORD PTR [edx+0x3b172d46],fs
  4143f6:	inc    eax
  4143f7:	jo     0x41437c
  4143f9:	push   ss
  4143fa:	push   ebp
  4143fb:	pop    eax
  4143fc:	adc    ebx,DWORD PTR [edi]
  4143fe:	cdq    
  4143ff:	dec    DWORD PTR [ecx+0x79]
  414402:	cli    
  414403:	push   0xffffffad
  414405:	call   0xffd9ab31
  41440a:	outs   dx,BYTE PTR ds:[esi]
  41440b:	mov    bh,BYTE PTR [ecx]
  41440d:	lods   eax,DWORD PTR ds:[esi]
  41440e:	inc    ecx
  41440f:	sbb    cl,dh
  414411:	div    DWORD PTR [edx+ebp*1-0x217c28f8]
  414418:	pop    DWORD PTR [ecx+ecx*1-0x6f]
  41441c:	cmp    dh,bl
  41441e:	push   esi
  41441f:	hlt    
  414420:	dec    ebp
  414421:	(bad)
  414424:	cli    
  414425:	pop    ds
  414426:	pop    es
  414427:	or     al,0xcf
  414429:	adc    esi,DWORD PTR ds:0xd55164c8
  41442f:	fwait
  414430:	test   BYTE PTR [ecx],dh
  414432:	gs cmp dh,dl
  414435:	adc    BYTE PTR [edi+0x3f398fd8],dh
  41443b:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41443d:	mov    esp,0x37efd262
  414442:	out    dx,al
  414443:	test   DWORD PTR [edx-0x3e],ebx
  414446:	xlat   BYTE PTR ds:[ebx]
  414447:	imul   ecx,edx,0xffffffad
  41444a:	push   esp
  41444b:	leave  
  41444c:	jne    0x4143d4
  41444e:	mov    ecx,0xaf945391
  414453:	mov    dh,0xfa
  414455:	repnz push ebp
  414457:	inc    esp
  414458:	ror    esi,0xfb
  41445b:	ret    
  41445c:	icebp  
  41445d:	push   ss
  41445e:	aam    0x65
  414460:	fld    DWORD PTR [eax+0x4a]
  414463:	cmp    eax,0x2c7e2cdd
  414468:	pusha  
  414469:	or     eax,0x64bcf9de
  41446e:	arpl   WORD PTR ds:0x6e08c373,dx
  414474:	mov    esi,0xc17276e
  414479:	call   0x2c9b3fbb
  41447e:	inc    esp
  41447f:	imul   ebp,DWORD PTR ds:0xb867b34a,0xfffffff6
  414486:	sahf   
  414487:	and    DWORD PTR [esi+esi*2+0x2eab2ba1],0xe
  41448f:	cmp    ah,BYTE PTR [edx]
  414491:	in     al,0xa4
  414493:	jno    0x4144b1
  414495:	stos   BYTE PTR es:[edi],al
  414496:	mov    ds:0xe1840434,al
  41449b:	adc    eax,0x6468f7f6
  4144a0:	or     al,0xd3
  4144a2:	xchg   ebp,eax
  4144a3:	dec    ecx
  4144a4:	adc    BYTE PTR [ebx],cl
  4144a6:	pop    edi
  4144a7:	or     DWORD PTR [ebp+edx*4+0x54],0xe541495f
  4144af:	mov    DWORD PTR [edx],esp
  4144b1:	sahf   
  4144b2:	daa    
  4144b3:	div    BYTE PTR [eax-0x2fcbeb6e]
  4144b9:	imul   ebx,edi,0xffffffb8
  4144bc:	rcl    ah,0xe0
  4144bf:	and    edx,esp
  4144c1:	pop    ebx
  4144c2:	sahf   
  4144c3:	test   eax,0xe147cccc
  4144c8:	lahf   
  4144c9:	imul   ebp,DWORD PTR [ebx+ebx*2-0x3b],0xffffffd3
  4144ce:	add    al,0x56
  4144d0:	xchg   ebx,eax
  4144d1:	fcmovbe st,st(3)
  4144d3:	imul   ebp,DWORD PTR [eax+0x58622594],0x5e
  4144da:	arpl   WORD PTR [edi+ecx*4+0x1e],bx
  4144de:	ja     0x41453f
  4144e0:	mov    ds:0xb91c2fb7,al
  4144e5:	sub    DWORD PTR [edx],eax
  4144e7:	mov    al,0x8b
  4144e9:	xor    al,0xce
  4144eb:	adc    BYTE PTR [esi],ah
  4144ed:	or     edi,DWORD PTR [ebx-0x6c]
  4144f0:	(bad)  
  4144f1:	add    bl,BYTE PTR [esi-0x32647eb1]
  4144f7:	mov    bl,0x35
  4144f9:	sbb    bh,ah
  4144fb:	inc    esp
  4144fc:	and    al,0x82
  4144fe:	pop    ss
  4144ff:	std    
  414500:	or     BYTE PTR [ebx+0x6cf37349],dh
  414506:	or     DWORD PTR es:[edi],edi
  414509:	outs   dx,BYTE PTR ds:[esi]
  41450a:	ret    0x4de7
  41450d:	call   0xfd3083ba
  414512:	cmp    al,0xbd
  414514:	bound  edi,QWORD PTR [edx]
  414516:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414517:	mov    edi,0x1b2777bb
  41451c:	stos   DWORD PTR es:[edi],eax
  41451d:	ins    BYTE PTR es:[edi],dx
  41451e:	sub    cl,al
  414520:	or     ebx,DWORD PTR [ebx-0x287489b8]
  414526:	jmp    0xe14c1c1c
  41452b:	fisttp WORD PTR [eax]
  41452d:	mov    esp,0x87110e37
  414532:	adc    al,BYTE PTR [ebx-0x434c03fd]
  414538:	mov    ecx,0x82e3edc5
  41453d:	push   ecx
  41453e:	adc    esp,ecx
  414540:	or     eax,DWORD PTR [esi+0x316a02f9]
  414546:	jae    0x414582
  414548:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414549:	ins    BYTE PTR es:[edi],dx
  41454a:	xchg   ebp,eax
  41454b:	and    edi,DWORD PTR [ecx]
  41454d:	std    
  41454e:	mov    bh,0x49
  414550:	add    BYTE PTR [edi+0x5e359fdf],cl
  414556:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414557:	rol    DWORD PTR [edx],cl
  414559:	xchg   esp,eax
  41455a:	fldcw  WORD PTR [ecx+0x425cd8ba]
  414560:	push   ecx
  414561:	arpl   bx,ax
  414563:	and    eax,0x6eaa3f19
  414568:	popa   
  414569:	loop   0x414570
  41456b:	adc    edx,DWORD PTR [edx+ecx*8+0x44ad007f]
  414572:	pop    ebp
  414573:	loope  0x414546
  414575:	jmp    0x41455f
  414577:	cmp    ch,dl
  414579:	nop
  41457a:	out    0xaa,al
  41457c:	dec    ebp
  41457d:	pop    ebx
  41457e:	sbb    esi,DWORD PTR [edx-0x1a61fc9d]
  414584:	mov    dl,BYTE PTR [ebp-0x75]
  414587:	mov    eax,0x9a43944
  41458c:	push   ecx
  41458d:	jae    0x4145b6
  41458f:	xchg   esp,eax
  414590:	gs loope 0x414611
  414593:	mov    ?,esi
  414595:	xchg   DWORD PTR [ebp-0x38b934c],esp
  41459b:	frstor [esi-0x7c]
  41459e:	xchg   ebp,eax
  41459f:	lods   al,BYTE PTR ds:[esi]
  4145a0:	mov    BYTE PTR ds:0xfa5c5a03,bl
  4145a6:	test   eax,0xeccab9c4
  4145ab:	push   ebp
  4145ac:	arpl   sp,dx
  4145ae:	in     eax,dx
  4145af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145b0:	pop    ecx
  4145b1:	sbb    edi,esi
  4145b3:	jae    0x414540
  4145b5:	add    BYTE PTR [edx-0x4b],dl
  4145b8:	xchg   ecx,ebp
  4145ba:	sub    edx,ebp
  4145bc:	cmp    eax,0x19e1f07f
  4145c1:	mov    WORD PTR [edi],?
  4145c3:	jno    0x4145bc
  4145c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145c6:	pop    ebp
  4145c7:	and    eax,0x8497e8f3
  4145cc:	inc    edi
  4145cd:	hlt    
  4145ce:	rdmsr  
  4145d0:	sub    DWORD PTR [ecx+0x19],ebp
  4145d3:	clc    
  4145d4:	cwde   
  4145d5:	push   edi
  4145d6:	push   0xfdf2e188
  4145db:	addr16 pushf 
  4145dd:	push   edx
  4145de:	xchg   esp,eax
  4145df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145e0:	rcr    bl,1
  4145e2:	in     al,dx
  4145e3:	sahf   
  4145e4:	push   0x79f5da3c
  4145e9:	cmp    edx,esi
  4145eb:	aaa    
  4145ec:	hlt    
  4145ed:	imul   edi,DWORD PTR ds:[ecx],0x70410b10
  4145f4:	jg     0x414631
  4145f6:	xchg   DWORD PTR [esi+0x66ade012],esi
  4145fc:	and    esi,DWORD PTR [ecx]
  4145fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145ff:	inc    eax
  414600:	mov    bh,0x48
  414602:	and    BYTE PTR [ebx],dh
  414604:	repnz call 0xbf8e:0x20b8e048
  41460c:	sbb    al,0x1b
  41460e:	pop    ebp
  41460f:	jmp    0x454606a7
  414614:	lods   eax,DWORD PTR cs:[esi]
  414616:	mov    DWORD PTR [ebp+0xb5bb69e],ebx
  41461c:	xchg   esi,eax
  41461d:	jnp    0x414687
  41461f:	pop    edx
  414620:	dec    esi
  414621:	lods   al,BYTE PTR ds:[esi]
  414622:	mov    al,ds:0x47d4835a
  414627:	cdq    
  414628:	mov    ah,0xa1
  41462a:	dec    ebp
  41462b:	push   ebp
  41462c:	push   ebp
  41462d:	adc    BYTE PTR [esp+eiz*8-0x67],ah
  414631:	adc    DWORD PTR [ebp+0x3f],esp
  414634:	inc    eax
  414635:	(bad)  
  414636:	push   cs
  414637:	sbb    DWORD PTR [eax],0x12
  41463a:	mov    eax,ds:0xf4f05022
  41463f:	inc    eax
  414640:	aam    0x3a
  414642:	cwde   
  414643:	inc    edx
  414644:	mov    edx,esi
  414646:	sub    eax,0x65425dba
  41464b:	imul   eax,DWORD PTR cs:[esi-0x3b0b8b0f],0xffffff9b
  414653:	(bad)  
  414654:	cmp    eax,0xe0a99a40
  414659:	jo     0x414671
  41465b:	repnz fidiv DWORD PTR gs:[eax]
  41465f:	xchg   BYTE PTR [edx-0x2e],al
  414662:	sub    ah,BYTE PTR [esi-0x79]
  414665:	xchg   esp,eax
  414666:	sbb    ebp,DWORD PTR [edx]
  414668:	pop    ebx
  414669:	or     DWORD PTR [ebx-0x21],edi
  41466c:	pop    ss
  41466d:	inc    esi
  41466e:	mov    ebp,DWORD PTR [ebp-0x6]
  414671:	ss call 0xed:0xe2360ff2
  414679:	push   ds
  41467a:	mov    ebp,DWORD PTR ds:0x8e80aa74
  414680:	into   
  414681:	push   edi
  414682:	cdq    
  414683:	jmp    0xc33da27
  414688:	push   ebx
  414689:	in     al,0x9a
  41468b:	call   0x2fce2ef1
  414690:	jmp    0x697e:0x2d2df392
  414697:	sbb    al,0x78
  414699:	dec    eax
  41469a:	mov    bh,0xa
  41469c:	fwait
  41469d:	xchg   DWORD PTR ds:0x7c4f21af,eax
  4146a3:	addr16 adc ebx,esp
  4146a6:	test   DWORD PTR [eax],0xc36a6e5d
  4146ac:	fild   QWORD PTR [bp-0x6]
  4146b0:	scas   eax,DWORD PTR es:[edi]
  4146b1:	rcl    ebp,0x3f
  4146b4:	add    eax,0x97336ba8
  4146b9:	sti    
  4146ba:	mov    ch,BYTE PTR [esp+eax*4+0x31]
  4146be:	inc    esp
  4146bf:	retf   0x4315
  4146c2:	repnz pop edi
  4146c4:	retf   0x21ff
  4146c7:	int    0x87
  4146c9:	loope  0x414731
  4146cb:	and    cl,al
  4146cd:	sub    al,0x3a
  4146cf:	push   ebp
  4146d0:	pop    edi
  4146d1:	or     al,0x75
  4146d3:	pop    esp
  4146d4:	rcl    bh,cl
  4146d6:	mov    ds:0x4d1c2538,al
  4146db:	jle    0x41471f
  4146dd:	pop    ds
  4146de:	adc    eax,0x240da0f8
  4146e3:	scas   eax,DWORD PTR es:[edi]
  4146e4:	out    0xe2,eax
  4146e6:	inc    esp
  4146e7:	push   ecx
  4146e8:	popf   
  4146e9:	mov    eax,ds:0xf31e72fd
  4146ee:	cmc    
  4146ef:	mov    edi,0xe0831273
  4146f4:	xor    DWORD PTR [edi+ecx*1],eax
  4146f7:	pop    ss
  4146f8:	hlt    
  4146f9:	loope  0x41472b
  4146fb:	out    0x5d,eax
  4146fd:	sbb    al,0xec
  4146ff:	(bad)  
  414700:	pop    ss
  414701:	ja     0x4146b8
  414703:	call   0x8239d21a
  414708:	pushf  
  414709:	popf   
  41470a:	push   ebx
  41470b:	scas   al,BYTE PTR es:[edi]
  41470c:	in     eax,dx
  41470d:	pop    ebx
  41470e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41470f:	jmp    0x4146da
  414711:	push   eax
  414712:	in     eax,dx
  414713:	fild   QWORD PTR [esi+0x267dbe3b]
  414719:	rol    ch,cl
  41471b:	adc    DWORD PTR [ecx],edi
  41471d:	sar    BYTE PTR [esi],cl
  41471f:	push   cs
  414720:	or     DWORD PTR [edx-0x76c430e1],edx
  414726:	sbb    DWORD PTR [esi],edx
  414728:	dec    ebp
  414729:	pop    ds
  41472a:	out    0x85,eax
  41472c:	jns    0x414706
  41472e:	(bad)  
  41472f:	ficom  DWORD PTR ss:[eax]
  414732:	repnz mov esi,0xd874232d
  414738:	adc    eax,0x36ce6f7a
  41473d:	jl     0x41477e
  41473f:	pop    es
  414740:	mov    al,ds:0xa98edd9
  414745:	stc    
  414746:	push   0xd7643233
  41474b:	lock inc ebx
  41474d:	sbb    al,0xda
  41474f:	mov    dh,0x1f
  414751:	push   ebp
  414752:	gs mov edi,0x91acede3
  414758:	fidivr WORD PTR [edi+0x7263ebbe]
  41475e:	or     al,0x27
  414760:	enter  0xf00f,0xfb
  414764:	xlat   BYTE PTR ds:[ebx]
  414765:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414766:	fs xor eax,eax
  414769:	jmp    0x414710
  41476b:	aaa    
  41476c:	adc    BYTE PTR [edi],0x6e
  41476f:	inc    esi
  414770:	test   DWORD PTR [ecx-0x7acd1cb7],edi
  414776:	adc    al,0x12
  414778:	inc    edx
  414779:	ja     0x41477f
  41477b:	sbb    BYTE PTR [edi+0x27c90755],ah
  414781:	call   0xf2929280
  414786:	mov    ch,0xa3
  414788:	cmc    
  414789:	bound  ebx,QWORD PTR [ecx-0x77d259b8]
  41478f:	push   0x79f6d060
  414794:	or     al,0x4
  414796:	hlt    
  414797:	cmp    BYTE PTR [ebp-0x3b88f97b],ah
  41479d:	stc    
  41479e:	ror    DWORD PTR [esp+edi*4],0xca
  4147a2:	clc    
  4147a3:	xchg   edi,eax
  4147a4:	mov    eax,0xcce60c78
  4147a9:	adc    eax,0x1a9f890c
  4147ae:	call   0xe681:0x36f70235
  4147b5:	addr16 popa 
  4147b7:	mov    ds:0x2d9b34a6,al
  4147bc:	cli    
  4147bd:	mov    edi,0x73a9a3f5
  4147c2:	jg     0x4147c0
  4147c4:	imul   edi,esp,0x2f
  4147c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147c8:	sub    BYTE PTR [edi],cl
  4147ca:	and    esp,eax
  4147cc:	mov    bh,0x3c
  4147ce:	jp     0x414794
  4147d0:	mov    esi,0x1026bae
  4147d5:	sub    al,0x4b
  4147d7:	jmp    0x4c86:0x3e62a39
  4147de:	adc    al,0xa1
  4147e0:	pushf  
  4147e1:	push   esp
  4147e2:	rcl    dl,cl
  4147e4:	pop    eax
  4147e5:	cdq    
  4147e6:	dec    ebx
  4147e7:	add    ebx,DWORD PTR [eax+eax*2]
  4147ea:	stos   DWORD PTR es:[edi],eax
  4147eb:	rdpmc  
  4147ed:	pminsw mm3,QWORD PTR es:[esi-0x43]
  4147f2:	mov    al,dl
  4147f4:	pop    eax
  4147f5:	dec    DWORD PTR [esi-0x22d8049c]
  4147fb:	push   edx
  4147fc:	mov    ecx,0x990691af
  414801:	push   ecx
  414802:	int3   
  414803:	xor    dl,BYTE PTR [ecx+0x24]
  414806:	ret    
  414807:	stos   BYTE PTR es:[edi],al
  414808:	out    0x6f,eax
  41480a:	dec    edi
  41480b:	fcomp  QWORD PTR [ebx]
  41480d:	sub    ebp,ebx
  41480f:	stos   DWORD PTR es:[edi],eax
  414810:	mov    dh,0x44
  414812:	shr    dh,0xf2
  414815:	aam    0x2f
  414817:	(bad)  
  414818:	retf   
  414819:	sub    eax,0x6ee70bf2
  41481e:	pop    ecx
  41481f:	sahf   
  414820:	leave  
  414821:	xchg   ebp,eax
  414822:	lock jmp 0x11ba:0xfce4a60a
  41482a:	push   edi
  41482b:	xlat   BYTE PTR ds:[ebx]
  41482c:	push   eax
  41482d:	mov    ecx,0x810533f0
  414832:	xchg   ebp,eax
  414833:	fstp   DWORD PTR [ebp+0x7c]
  414836:	push   ss
  414837:	mov    es,WORD PTR [edx]
  414839:	jl     0x4147f3
  41483b:	cs push edx
  41483d:	cmp    bh,BYTE PTR [edx]
  41483f:	aaa    
  414840:	leave  
  414841:	push   cs
  414842:	retf   
  414843:	pop    ebx
  414844:	jge    0x4147f9
  414846:	lock sub DWORD PTR [edx*4-0x7f66ab6],ecx
  41484e:	add    al,0x61
  414850:	addr16 dec ecx
  414852:	sbb    ch,al
  414854:	add    DWORD PTR [eax+0x5c],0xffffffcf
  414858:	test   BYTE PTR [esp+esi*1-0x20763dd7],ah
  41485f:	push   esi
  414860:	cmp    al,0x79
  414862:	xchg   ebx,eax
  414863:	xor    ah,BYTE PTR ss:[ecx+edx*2+0xd]
  414868:	add    edx,edx
  41486a:	bound  esi,QWORD PTR [ebp-0x57]
  41486d:	outs   dx,BYTE PTR ds:[esi]
  41486e:	and    al,0xb6
  414870:	ret    0x98f
  414873:	ss xor eax,0xbccadb39
  414879:	aam    0xd8
  41487b:	adc    dh,BYTE PTR [edi-0x7de6ba6e]
  414881:	loopne 0x414827
  414883:	inc    ecx
  414884:	pop    ebp
  414885:	(bad)  
  414886:	mov    ds:0x30f3fe6c,ax
  41488c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41488d:	inc    esp
  41488e:	aas    
  41488f:	add    bl,BYTE PTR [ebp-0x2]
  414892:	int    0x3f
  414894:	mov    ebx,ss
  414896:	push   cs
  414897:	pop    ds
  414898:	push   edi
  414899:	leave  
  41489a:	sti    
  41489b:	sub    eax,0xcab2e5c3
  4148a0:	lahf   
  4148a1:	sti    
  4148a2:	cmp    BYTE PTR [edi-0x23],0x36
  4148a6:	outs   dx,BYTE PTR ds:[esi]
  4148a7:	mov    WORD PTR [edx-0x6b],?
  4148aa:	xchg   DWORD PTR [eax-0x18],edi
  4148ad:	test   al,0xd2
  4148af:	mov    edi,0x957a4243
  4148b4:	cmp    ecx,edi
  4148b6:	sub    BYTE PTR [ebx-0x58],ch
  4148b9:	shl    DWORD PTR [ebx-0x678180a1],0x79
  4148c0:	mov    ds:0x7a501784,al
  4148c5:	inc    eax
  4148c6:	mov    al,0x8e
  4148c8:	add    ebx,edi
  4148ca:	jl     0x4148a7
  4148cc:	div    BYTE PTR [ebx-0x4174b698]
  4148d2:	setae  BYTE PTR [edi+0x51]
  4148d6:	mov    edi,0xaf553044
  4148db:	fisub  DWORD PTR [ebp+0x3e6eb927]
  4148e1:	mov    cl,0x7e
  4148e3:	lds    esp,FWORD PTR [edi-0x7]
  4148e6:	in     al,0x17
  4148e8:	ins    BYTE PTR es:[edi],dx
  4148e9:	stos   BYTE PTR es:[edi],al
  4148ea:	xor    DWORD PTR [edx+0x5ee4a81d],0x1b
  4148f1:	xchg   ebx,eax
  4148f2:	shr    DWORD PTR [ecx],0x8d
  4148f5:	cmp    eax,0x26faba35
  4148fa:	fstp   DWORD PTR [ecx+0x44]
  4148fd:	dec    ebp
  4148fe:	retf   
  4148ff:	cli    
  414900:	push   ecx
  414901:	aam    0xa1
  414903:	cmc    
  414904:	pop    esi
  414905:	pop    eax
  414906:	inc    edi
  414907:	mov    esi,0x7563b506
  41490c:	fisubr WORD PTR [edx+0x32315b94]
  414912:	or     ebx,DWORD PTR [ebx]
  414914:	sbb    bl,BYTE PTR [ebp-0x2870ceb]
  41491a:	xchg   edi,eax
  41491b:	mov    ecx,0x9f9b310c
  414920:	rcr    DWORD PTR [edx+eiz*8],1
  414923:	imul   esi,esi,0x41
  414926:	jmp    0x414969
  414928:	mov    eax,ds:0x7cf582ec
  41492d:	add    dl,BYTE PTR [bp-0x3c]
  414931:	jmp    0x7a0c:0xd6a54f7
  414938:	xchg   DWORD PTR [ebp+0x103b0dd],edi
  41493e:	ins    BYTE PTR es:[edi],dx
  41493f:	mov    eax,0xb4808ca5
  414944:	shr    esp,1
  414946:	mov    ah,0xf0
  414948:	or     BYTE PTR ds:0xb5f5d76d,cl
  41494e:	jmp    0x4149bc
  414950:	loope  0x41494b
  414952:	or     BYTE PTR [edi],ah
  414954:	pushf  
  414955:	aam    0x6f
  414957:	pop    edx
  414958:	add    eax,0x76501312
  41495d:	xchg   edx,eax
  41495e:	lods   al,BYTE PTR ds:[esi]
  41495f:	fwait
  414960:	dec    ebx
  414961:	(bad)  
  414962:	xor    DWORD PTR [eax+edi*2+0xc30c8ce],ebp
  414969:	in     eax,0x6c
  41496b:	jge    0x414916
  41496d:	mov    al,0x19
  41496f:	push   esi
  414970:	mov    esi,0xe1d6d29
  414975:	fst    st(3)
  414977:	pop    esi
  414978:	mov    BYTE PTR [edx+edi*4-0x22ca1e51],ch
  41497f:	neg    ecx
  414981:	mov    ds:0x2fb86921,eax
  414986:	dec    ebp
  414987:	xchg   DWORD PTR [esi-0x60],esi
  41498a:	scas   al,BYTE PTR es:[edi]
  41498b:	in     eax,0x1e
  41498d:	xchg   ebx,eax
  41498e:	ins    DWORD PTR es:[edi],dx
  41498f:	mov    WORD PTR ds:0xf682a446,gs
  414995:	or     edi,DWORD PTR [edi]
  414997:	mov    ds:0x1e57c2b0,eax
  41499c:	pop    es
  41499d:	or     eax,DWORD PTR [eax-0x38]
  4149a0:	dec    edi
  4149a1:	push   ebp
  4149a2:	xchg   edi,eax
  4149a3:	cmp    DWORD PTR [ebx-0x204ac1bd],esi
  4149a9:	push   esp
  4149aa:	out    0x3d,eax
  4149ac:	das    
  4149ad:	cmp    esi,esp
  4149af:	pop    ebx
  4149b0:	inc    ebp
  4149b1:	mov    eax,0xae521f89
  4149b6:	xor    dh,BYTE PTR [ecx-0x6f14382f]
  4149bc:	dec    edx
  4149bd:	pop    esi
  4149be:	add    BYTE PTR [esi-0x4d],0x8c
  4149c2:	mov    DWORD PTR [ecx],ecx
  4149c4:	push   cs
  4149c5:	aas    
  4149c6:	inc    esp
  4149c7:	xor    eax,0x18822999
  4149cc:	xor    ebp,edx
  4149ce:	test   BYTE PTR [edi+ebx*4+0x6d],0x35
  4149d3:	dec    ebp
  4149d4:	push   cs
  4149d5:	fadd   DWORD PTR [esi-0x5182d79e]
  4149db:	inc    esi
  4149dc:	push   es
  4149dd:	div    esp
  4149df:	imul   BYTE PTR [ecx+0x4af9fb86]
  4149e5:	cld    
  4149e6:	pop    esp
  4149e7:	inc    eax
  4149e8:	xchg   esp,eax
  4149e9:	fdiv   DWORD PTR [ebp-0x24]
  4149ec:	jae    0x4149c3
  4149ee:	jmp    0x1f47:0xc0964cca
  4149f5:	and    DWORD PTR [eax],edx
  4149f7:	dec    edx
  4149f8:	retf   
  4149f9:	and    bh,BYTE PTR [eax+0x9]
  4149fc:	sti    
  4149fd:	fadd   QWORD PTR [edi*2+0x576eccb1]
  414a04:	jl     0x414a34
  414a06:	xor    eax,0x16cf5a55
  414a0b:	mov    edx,0x4e435b99
  414a10:	xchg   al,cl
  414a12:	mov    esi,0xf9035aa9
  414a17:	cwde   
  414a18:	jl     0x41499a
  414a1a:	scas   eax,DWORD PTR es:[edi]
  414a1b:	ins    DWORD PTR es:[edi],dx
  414a1c:	mov    edi,0x51d07f2a
  414a21:	xchg   ebx,eax
  414a22:	ins    BYTE PTR es:[edi],dx
  414a23:	xor    dl,bl
  414a25:	mov    esp,0x3175a04f
  414a2a:	inc    esi
  414a2b:	out    0x5d,al
  414a2d:	sub    BYTE PTR [ebx],0xc2
  414a30:	fidiv  WORD PTR [ecx]
  414a32:	sar    BYTE PTR [esi+0xfcebc35],0xf8
  414a39:	lods   eax,DWORD PTR ds:[esi]
  414a3a:	jmp    0xdc31:0x4f3a0811
  414a41:	pop    ecx
  414a42:	inc    edi
  414a43:	jp     0x414a2f
  414a45:	add    al,0xbd
  414a47:	xor    ebx,edi
  414a49:	pop    edi
  414a4a:	bound  edi,QWORD PTR [ecx-0x5a]
  414a4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a4e:	or     cl,BYTE PTR [eax]
  414a50:	sbb    bl,0xcc
  414a53:	mov    ah,0x8
  414a55:	ror    ch,1
  414a57:	mov    edx,0xea81fcb0
  414a5c:	mov    BYTE PTR [ecx],bl
  414a5e:	jl     0x414a8a
  414a60:	inc    ebx
  414a61:	sahf   
  414a62:	push   esi
  414a63:	cs xor al,0x4b
  414a66:	(bad)  
  414a67:	push   0x50
  414a69:	cmp    esp,DWORD PTR [edi]
  414a6b:	sub    DWORD PTR [ecx-0x5e],edi
  414a6e:	pop    ss
  414a6f:	pop    ebx
  414a70:	js     0x414a4e
  414a72:	ds jne 0x414a3f
  414a75:	sub    ch,BYTE PTR [esi-0x4c7965d5]
  414a7b:	and    BYTE PTR [ebx+edx*1+0x6902a029],bl
  414a82:	fldenv [edx+eiz*8-0x4]
  414a86:	mov    dl,0xdd
  414a88:	and    BYTE PTR [ebx+0x41],al
  414a8b:	pop    ebx
  414a8c:	sahf   
  414a8d:	pop    esp
  414a8e:	mov    ah,0xa3
  414a90:	dec    ebx
  414a91:	retf   0xa04f
  414a94:	jb     0x414a8a
  414a96:	cmp    al,BYTE PTR [ebx+ebx*2+0x575ec985]
  414a9d:	cmp    DWORD PTR [eax],0x7e
  414aa0:	mov    ch,0xfb
  414aa2:	add    al,0x4e
  414aa4:	cdq    
  414aa5:	add    BYTE PTR [esi+0x73b0bcab],dh
  414aab:	fucomp st(0)
  414aad:	adc    dh,0x3f
  414ab0:	add    ah,BYTE PTR [ecx]
  414ab2:	(bad)  
  414ab4:	es add al,0x6c
  414ab7:	adc    al,BYTE PTR [edi+0x633f9202]
  414abd:	inc    esp
  414abe:	xlat   BYTE PTR ds:[ebx]
  414abf:	cmp    eax,0x2cb1ca1d
  414ac4:	and    al,0xd4
  414ac6:	sbb    eax,0xabe564ab
  414acb:	add    BYTE PTR [eax],0xcb
  414ace:	jmp    0x578c:0x4a45a417
  414ad5:	fisubr DWORD PTR [ebp+eax*4+0x4]
  414ad9:	loope  0x414ac1
  414adb:	gs loopne 0x414aa6
  414ade:	jmp    0x644c5fc7
  414ae3:	dec    ebp
  414ae4:	test   al,0xa1
  414ae6:	xchg   ecx,eax
  414ae7:	scas   eax,DWORD PTR es:[edi]
  414ae8:	cdq    
  414ae9:	sbb    dl,ah
  414aeb:	loop   0x414a8a
  414aed:	push   edx
  414aee:	loope  0x414af8
  414af0:	xchg   ecx,eax
  414af1:	pushf  
  414af2:	xchg   ebp,eax
  414af3:	aas    
  414af4:	cmc    
  414af5:	push   ecx
  414af6:	push   cs
  414af7:	jnp    0x414ad0
  414af9:	jne    0x414b06
  414afb:	pop    ebx
  414afc:	jnp    0x414ac9
  414afe:	ja     0x414b1c
  414b00:	neg    BYTE PTR [esi]
  414b02:	jmp    0x414b2d
  414b04:	fstp   QWORD PTR [ebx-0x3113a2b]
  414b0a:	cmp    DWORD PTR [ebp+eiz*8+0x1f],ecx
  414b0e:	pop    eax
  414b0f:	sahf   
  414b10:	pop    ds
  414b11:	sbb    eax,0xb5c83603
  414b16:	lods   eax,DWORD PTR ds:[esi]
  414b17:	mov    ch,0x37
  414b19:	sbb    al,0x6b
  414b1b:	into   
  414b1c:	out    dx,al
  414b1d:	add    DWORD PTR [eax+0x52517106],esp
  414b23:	xchg   edi,eax
  414b24:	outs   dx,DWORD PTR ds:[esi]
  414b25:	aas    
  414b26:	pop    ds
  414b27:	inc    esi
  414b28:	xor    DWORD PTR [ebx-0x7f315325],ebp
  414b2e:	xchg   ecx,eax
  414b2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b30:	data16 into 
  414b32:	aad    0x73
  414b34:	dec    esi
  414b35:	ret    0xf127
  414b38:	mov    ebx,0x6fbfb610
  414b3d:	test   BYTE PTR [edx-0x509077ab],al
  414b43:	mov    ds:0xcb1d267c,al
  414b48:	lods   al,BYTE PTR ds:[esi]
  414b49:	cli    
  414b4a:	add    eax,0x102a1421
  414b4f:	icebp  
  414b50:	rol    BYTE PTR [edi+esi*4+0x33],0xae
  414b55:	test   BYTE PTR [ebx+0x2e],cl
  414b58:	or     DWORD PTR [eax+edx*1],0x7706321e
  414b5f:	stos   DWORD PTR es:[edi],eax
  414b60:	shr    esp,0x78
  414b63:	cmp    al,0x10
  414b65:	stos   DWORD PTR es:[edi],eax
  414b66:	and    DWORD PTR [ecx],esi
  414b68:	retf   
  414b69:	and    ch,BYTE PTR [ecx+0x7df8e828]
  414b6f:	pop    edx
  414b70:	inc    ecx
  414b71:	cdq    
  414b72:	ins    BYTE PTR es:[edi],dx
  414b73:	xor    al,BYTE PTR cs:[edx+0x57]
  414b77:	sub    DWORD PTR [esi+0x3c],ecx
  414b7a:	push   0x6261e6b
  414b7f:	in     al,0x7e
  414b81:	pop    ebx
  414b82:	mov    bl,0xf0
  414b84:	iret   
  414b85:	jmp    0xccc7:0xe63cd3f0
  414b8c:	inc    ebx
  414b8d:	ja     0x414b89
  414b8f:	inc    eax
  414b90:	mov    ?,WORD PTR [ecx]
  414b92:	sub    eax,0x116ce295
  414b97:	and    BYTE PTR [edx-0x1cc9a291],ch
  414b9d:	dec    edx
  414b9e:	(bad)  
  414b9f:	mov    eax,ds:0xd94abf89
  414ba4:	mov    ebp,0xb1e62901
  414ba9:	xchg   ebx,eax
  414baa:	icebp  
  414bab:	dec    esi
  414bac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bad:	aaa    
  414bae:	scas   eax,DWORD PTR es:[edi]
  414baf:	test   eax,0x28ede0c3
  414bb4:	imul   esp,ebp,0x45
  414bb7:	int3   
  414bb8:	fidivr DWORD PTR [eax]
  414bba:	cwde   
  414bbb:	std    
  414bbc:	shl    BYTE PTR [bp+si+0x14],0xb1
  414bc1:	clc    
  414bc2:	push   es
  414bc3:	dec    ecx
  414bc4:	(bad)  
  414bc5:	xchg   edx,eax
  414bc6:	jnp    0x414b5a
  414bc8:	ret    0x2352
  414bcb:	jno    0x414b4e
  414bcd:	fisub  DWORD PTR [bx+di-0x78]
  414bd1:	out    dx,eax
  414bd2:	xor    eax,ebp
  414bd4:	lds    edi,FWORD PTR [edx+0x17ac5de5]
  414bda:	or     al,0xce
  414bdc:	mov    BYTE PTR [ebx],dh
  414bde:	loopne 0x414c28
  414be0:	(bad)  
  414be1:	push   0x66
  414be3:	mov    esp,fs
  414be5:	aas    
  414be6:	push   ds
  414be7:	inc    esp
  414be8:	cli    
  414be9:	jb     0x414c2a
  414beb:	sub    al,0xed
  414bed:	sbb    bh,ah
  414bef:	aaa    
  414bf0:	leave  
  414bf1:	lods   eax,DWORD PTR ds:[esi]
  414bf2:	dec    esi
  414bf3:	mov    al,BYTE PTR ds:0xbbe103ea
  414bf9:	outs   dx,BYTE PTR ds:[esi]
  414bfa:	jp     0x414ba7
  414bfc:	mov    al,dh
  414bfe:	cli    
  414bff:	jne    0x414b99
  414c01:	add    BYTE PTR [eax-0x5e14dd91],dh
  414c07:	inc    edx
  414c08:	pop    edi
  414c09:	in     al,0x8e
  414c0b:	sbb    edx,ecx
  414c0d:	imul   edx,ebx,0x23
  414c10:	ror    BYTE PTR ds:0x4b87aaef,0x4f
  414c17:	test   DWORD PTR [eax],ebp
  414c19:	jle    0x414c5a
  414c1b:	dec    ebp
  414c1c:	cmp    BYTE PTR [esi+edi*1],bl
  414c1f:	cmp    ecx,DWORD PTR [eax+0x6e]
  414c22:	dec    ebp
  414c23:	push   ss
  414c24:	xor    ah,cl
  414c26:	adc    BYTE PTR [edi-0x3e55c637],0x82
  414c2d:	inc    ebx
  414c2e:	ss dec edi
  414c30:	aad    0x57
  414c32:	pop    edx
  414c33:	out    0x2e,eax
  414c35:	push   edi
  414c36:	pop    esp
  414c37:	aad    0x55
  414c39:	sbb    DWORD PTR [ecx-0x721b0a41],ecx
  414c3f:	enter  0x5183,0x47
  414c43:	inc    eax
  414c44:	add    eax,0x58e28acf
  414c49:	add    ebp,ebp
  414c4b:	jne    0x414c18
  414c4d:	dec    eax
  414c4e:	mov    ebp,0x5339011c
  414c53:	in     al,dx
  414c54:	shl    edi,1
  414c56:	dec    ebp
  414c57:	xor    al,0xc6
  414c59:	fcom   DWORD PTR [eax]
  414c5b:	ins    DWORD PTR es:[edi],dx
  414c5c:	push   edx
  414c5d:	mov    al,0xe5
  414c5f:	push   0x76c5204a
  414c64:	je     0x414c52
  414c66:	test   BYTE PTR [ebx+ebp*2-0x5d],cl
  414c6a:	cmp    DWORD PTR [eax+esi*2],0xf3a88565
  414c71:	push   eax
  414c72:	xor    ah,BYTE PTR [esi]
  414c74:	jne    0x414c4d
  414c76:	(bad)  
  414c77:	(bad)  
  414c78:	sub    BYTE PTR [esi],bl
  414c7a:	in     eax,0xbc
  414c7c:	push   esp
  414c7d:	stc    
  414c7e:	enter  0xd50c,0x9b
  414c82:	fnstsw WORD PTR [ebx]
  414c84:	or     al,0x5a
  414c86:	fwait
  414c87:	push   esp
  414c88:	xor    al,0xe
  414c8a:	out    0x90,eax
  414c8c:	push   ss
  414c8d:	repnz lds ebx,FWORD PTR [edi+0x4700f122]
  414c94:	and    al,0x2d
  414c96:	add    BYTE PTR [esi],al
  414c98:	(bad)  
  414c9a:	pop    eax
  414c9b:	cmp    BYTE PTR [eax-0x72],al
  414c9e:	push   0x9
  414ca0:	or     al,0x6c
  414ca2:	push   0xffffffe2
  414ca4:	dec    ebx
  414ca5:	loope  0x414c2f
  414ca7:	or     al,0x4f
  414ca9:	ins    BYTE PTR es:[edi],dx
  414caa:	imul   eax,DWORD PTR [edi-0x15],0xffffff9a
  414cae:	rcr    DWORD PTR [eax],1
  414cb0:	pop    esi
  414cb1:	fcomp  QWORD PTR [ebx]
  414cb3:	add    al,0x45
  414cb5:	mov    ds:0xbf311b46,al
  414cba:	xor    eax,0xdb085ef1
  414cbf:	adc    eax,0x7715f5e6
  414cc4:	jne    0x414d42
  414cc6:	out    0x33,al
  414cc8:	mov    ebp,0x27e352fd
  414ccd:	sub    ah,ch
  414ccf:	or     ah,ch
  414cd1:	or     eax,0x5bc18c02
  414cd6:	pop    ecx
  414cd7:	or     al,0xc5
  414cd9:	mov    BYTE PTR [esi-0x267a18cf],0xb7
  414ce0:	jns    0x414cba
  414ce2:	jae    0x414c9a
  414ce4:	xchg   ebx,eax
  414ce5:	mov    ecx,0x2cb7b52b
  414cea:	ins    BYTE PTR es:[edi],dx
  414ceb:	cmp    al,BYTE PTR [eax+0x1125e9a7]
  414cf1:	adc    al,BYTE PTR ds:0x3b89e9e6
  414cf7:	inc    esp
  414cf8:	ins    DWORD PTR es:[edi],dx
  414cf9:	fidivr WORD PTR fs:[edi]
  414cfc:	cmp    edx,eax
  414cfe:	dec    esi
  414cff:	loop   0x414cb7
  414d01:	outs   dx,DWORD PTR ds:[esi]
  414d02:	scas   al,BYTE PTR es:[edi]
  414d03:	ret    
  414d04:	mov    ds:0x2c428f2a,al
  414d09:	cmp    ch,BYTE PTR [ebx-0x50175be5]
  414d0f:	lods   eax,DWORD PTR ds:[esi]
  414d10:	ret    0x80fd
  414d13:	out    dx,eax
  414d14:	pop    edx
  414d15:	nop
  414d16:	sti    
  414d17:	jae    0x414cba
  414d19:	rcl    BYTE PTR [ecx-0x39],1
  414d1c:	int3   
  414d1d:	fcomp  QWORD PTR [ebp+0x23]
  414d20:	mov    BYTE PTR [edi],cl
  414d22:	ret    0xa34d
  414d25:	ds mov edi,0x20a76322
  414d2b:	push   edi
  414d2c:	(bad)  
  414d2d:	cs clc 
  414d2f:	mov    ecx,0x1ec15e3d
  414d34:	inc    edi
  414d35:	push   esi
  414d36:	(bad)  
  414d38:	pop    edx
  414d39:	dec    edi
  414d3a:	mov    edx,?
  414d3c:	inc    edx
  414d3d:	ret    0xc2d3
  414d40:	xor    al,0xd0
  414d42:	clc    
  414d43:	dec    edx
  414d44:	or     edi,DWORD PTR [ebx-0x52931c37]
  414d4a:	dec    ebx
  414d4b:	mov    ebx,0x68d33646
  414d50:	sbb    dl,ch
  414d52:	jmp    0x8b4c:0xb0743b0a
  414d59:	popa   
  414d5a:	jae    0x414ceb
  414d5c:	test   bh,dl
  414d5e:	add    DWORD PTR [edx+0x2daef002],edi
  414d64:	mov    ch,0x1b
  414d66:	std    
  414d67:	ins    BYTE PTR es:[edi],dx
  414d68:	sbb    al,0x30
  414d6a:	jmp    0x9b3:0xc16f659b
  414d71:	mov    ds:0xc929a41a,eax
  414d76:	cmp    bl,bl
  414d78:	xor    BYTE PTR [ecx+0x3e707b0f],bh
  414d7e:	dec    ecx
  414d7f:	popf   
  414d80:	leave  
  414d81:	xchg   esp,eax
  414d82:	or     dh,bh
  414d84:	stc    
  414d85:	mov    al,ds:0x1b56830d
  414d8a:	sub    BYTE PTR [eax+0x48],ah
  414d8d:	popf   
  414d8e:	cs push ebx
  414d90:	lods   eax,DWORD PTR ds:[esi]
  414d91:	or     eax,0x457b8654
  414d96:	aaa    
  414d97:	out    dx,al
  414d98:	push   esi
  414d99:	push   ebp
  414d9a:	repz into 
  414d9c:	inc    DWORD PTR ss:[eax+ecx*8+0x6c5a0ba9]
  414da4:	xor    eax,0xe7d75bc4
  414da9:	mov    eax,ds:0x39d95322
  414dae:	push   esi
  414daf:	jmp    0x5830c3ba
  414db4:	mov    esi,0xace1b941
  414db9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dba:	inc    edx
  414dbc:	xor    edx,DWORD PTR [eax]
  414dbe:	push   0x7a
  414dc0:	fadd   DWORD PTR [ecx+0x52]
  414dc3:	and    eax,0x80f30011
  414dc8:	sbb    cl,ch
  414dca:	sub    BYTE PTR ds:0x240738a3,cl
  414dd0:	int3   
  414dd1:	lods   al,BYTE PTR ds:[esi]
  414dd2:	jae    0x414d58
  414dd4:	jmp    0xde73:0xf2c5a565
  414ddb:	pop    edx
  414ddc:	aaa    
  414ddd:	cmp    esi,DWORD PTR [ebp-0x2a5be000]
  414de3:	js     0x414dc1
  414de5:	cmp    BYTE PTR [ebp-0x7ae8bf22],0x2e
  414dec:	pop    ebp
  414ded:	jecxz  0x414db8
  414def:	dec    eax
  414df0:	pop    ss
  414df1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414df2:	add    DWORD PTR [edx-0x3f4eb40],0x396040ce
  414dfc:	mov    edi,0xbdcc9115
  414e01:	call   0x6185:0x338026e4
  414e08:	gs jnp 0x414df4
  414e0b:	add    edx,DWORD PTR [ebx]
  414e0d:	icebp  
  414e0e:	and    al,0xbf
  414e10:	(bad)  
  414e11:	or     ebp,ebx
  414e13:	pop    ebx
  414e14:	icebp  
  414e15:	add    eax,DWORD PTR [edi+0x4f]
  414e18:	repz mov ebx,0x6c8f09c6
  414e1e:	push   esp
  414e1f:	jle    0x414dda
  414e21:	jmp    0x414e5f
  414e23:	ret    
  414e24:	test   ecx,0xd6192864
  414e2a:	call   0xf77f:0x91191345
  414e31:	ins    BYTE PTR es:[edi],dx
  414e32:	ret    
  414e33:	sbb    BYTE PTR ds:0x7f6fe8d7,0xde
  414e3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e3b:	scas   al,BYTE PTR es:[edi]
  414e3c:	lea    edx,[edi+0x5301e69f]
  414e42:	loopne 0x414eb5
  414e44:	xchg   ebp,eax
  414e45:	jb     0x414e5a
  414e47:	cmc    
  414e48:	nop
  414e49:	cdq    
  414e4a:	shr    BYTE PTR [ebp+0x66a35189],cl
  414e50:	mov    WORD PTR [edx],cs
  414e52:	fldenv [edi]
  414e54:	adc    eax,edx
  414e56:	jns    0x414e81
  414e58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e59:	loope  0x414e42
  414e5b:	sti    
  414e5c:	inc    esi
  414e5d:	dec    edx
  414e5e:	mov    edi,0x4eeecdcc
  414e63:	and    dh,al
  414e65:	jp     0x414ec3
  414e67:	test   DWORD PTR [eax+ebx*2-0x56b7bf29],edx
  414e6e:	rol    BYTE PTR [esi+0x7],cl
  414e71:	dec    eax
  414e72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e73:	jge    0x414ea9
  414e75:	(bad)  
  414e76:	pop    edx
  414e77:	jae    0x414e3b
  414e79:	mov    ?,WORD PTR [ebp+0x2f]
  414e7c:	cmc    
  414e7d:	inc    eax
  414e7e:	or     ah,dl
  414e80:	mov    ebp,0x43667d08
  414e85:	pushf  
  414e86:	mov    DWORD PTR [eax-0xa],ebp
  414e89:	ficomp DWORD PTR [eax+0x79]
  414e8c:	inc    esp
  414e8d:	mov    edx,0x9ba10769
  414e92:	xlat   BYTE PTR ds:[ebx]
  414e93:	dec    edx
  414e94:	mov    ds:0x314e9bb6,al
  414e99:	xor    edi,DWORD PTR [edx-0x72]
  414e9c:	jp     0x414e29
  414e9e:	dec    ebx
  414e9f:	retf   
  414ea0:	rcr    DWORD PTR [eax],1
  414ea2:	test   al,0x23
  414ea4:	push   esp
  414ea5:	cmp    al,0xf2
  414ea7:	inc    ebx
  414ea8:	push   edx
  414ea9:	mov    WORD PTR [esi+0xd164396],?
  414eaf:	shl    DWORD PTR [ebp-0x24],cl
  414eb2:	or     DWORD PTR ds:0xfc7e6364,edx
  414eb8:	pop    edi
  414eb9:	and    edx,eax
  414ebb:	add    eax,0xeca9dd58
  414ec0:	inc    edi
  414ec1:	mov    al,ds:0x8973f46d
  414ec6:	outs   dx,BYTE PTR ds:[esi]
  414ec7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ec8:	mov    bl,0x3b
  414eca:	sar    DWORD PTR [esi],cl
  414ecc:	sub    edi,ebx
  414ece:	outs   dx,DWORD PTR ds:[esi]
  414ecf:	pop    ebp
  414ed0:	scas   eax,DWORD PTR es:[edi]
  414ed1:	add    eax,ebx
  414ed3:	pushf  
  414ed4:	push   ss
  414ed5:	ins    BYTE PTR es:[edi],dx
  414ed6:	inc    ecx
  414ed7:	sub    DWORD PTR [ecx+eiz*8],esi
  414eda:	(bad)  
  414edb:	test   al,0x9f
  414edd:	lods   eax,DWORD PTR ds:[esi]
  414ede:	retf   0xa88f
  414ee1:	and    eax,0x337b1155
  414ee6:	fwait
  414ee7:	xchg   ecx,eax
  414ee8:	mov    cl,0xe3
  414eea:	aas    
  414eeb:	int3   
  414eec:	fiadd  DWORD PTR [edi-0x6164aacf]
  414ef2:	jge    0x414e8c
  414ef4:	push   ebp
  414ef5:	cmp    edi,DWORD PTR [ebx]
  414ef7:	mov    edx,0x33fbf38
  414efc:	sbb    eax,DWORD PTR ds:0xae75df28
  414f02:	in     eax,0x1c
  414f04:	and    ah,BYTE PTR [ebx+0x75dd1427]
  414f0a:	and    eax,0x21da375e
  414f0f:	je     0x414f0c
  414f11:	cld    
  414f12:	lahf   
  414f13:	ja     0x414f4c
  414f15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f16:	jbe    0x414e9e
  414f18:	nop
  414f19:	jle    0x414ed0
  414f1b:	pop    edi
  414f1c:	loop   0x414f26
  414f1e:	push   ebp
  414f1f:	dec    ebp
  414f20:	das    
  414f21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f22:	pop    es
  414f23:	sar    edx,1
  414f25:	push   ebp
  414f26:	sbb    ebx,0xcf9457fe
  414f2c:	sbb    eax,0x5711187d
  414f31:	cmp    BYTE PTR [edi],bh
  414f33:	jle    0x414ec8
  414f35:	push   edi
  414f36:	mov    ebx,0xc57722b5
  414f3b:	pusha  
  414f3c:	push   ebx
  414f3d:	call   0x59cb4cc0
  414f42:	ins    BYTE PTR es:[edi],dx
  414f43:	int3   
  414f44:	(bad)  
  414f46:	popa   
  414f47:	hlt    
  414f48:	lods   al,BYTE PTR ds:[esi]
  414f49:	jge    0x414f61
  414f4b:	cwde   
  414f4c:	cs scas al,BYTE PTR es:[edi]
  414f4e:	test   BYTE PTR [edx-0x1930d217],ah
  414f54:	push   0x1f109c1
  414f59:	xchg   DWORD PTR [ebp-0x26],ebp
  414f5c:	pop    edi
  414f5d:	sahf   
  414f5e:	mov    al,0xa8
  414f60:	ret    
  414f61:	xchg   ebp,eax
  414f62:	icebp  
  414f63:	lods   eax,DWORD PTR ds:[esi]
  414f64:	scas   al,BYTE PTR es:[edi]
  414f65:	mov    al,ds:0xe3fd5e97
  414f6a:	push   eax
  414f6b:	repnz mov ds:0x996d5122,al
  414f71:	imul   ecx,ebp,0x6b
  414f74:	(bad)
  414f77:	mov    edx,0xa8955a7d
  414f7c:	push   eax
  414f7d:	inc    ebp
  414f7e:	xchg   ebx,eax
  414f7f:	xchg   bl,cl
  414f81:	jne    0x414fde
  414f83:	ins    DWORD PTR es:[edi],dx
  414f84:	into   
  414f85:	aaa    
  414f86:	mov    ds:0x3e75d1dc,eax
  414f8b:	imul   edi,esp,0xffffffe4
  414f8e:	call   0xbcf2:0xe9ee4e87
  414f95:	sahf   
  414f96:	xrelease mov DWORD PTR [ebx],edx
  414f99:	or     esi,DWORD PTR [ebp+0x66]
  414f9c:	inc    edi
  414f9d:	imul   edi,edi,0x605fc1bd
  414fa3:	shr    BYTE PTR [edx-0x2ac139a4],0x4d
  414faa:	xchg   esp,eax
  414fab:	lahf   
  414fac:	jmp    0x775c6253
  414fb1:	es cmc 
  414fb3:	adc    ebx,0x34
  414fb6:	lds    esp,FWORD PTR [edx]
  414fb8:	das    
  414fb9:	sub    dl,BYTE PTR ds:0x44200939
  414fbf:	mov    ch,0x1c
  414fc1:	lock shr dl,0x93
  414fc5:	push   ebp
  414fc6:	out    dx,al
  414fc7:	xor    esi,DWORD PTR [ecx+eiz*8-0x4d]
  414fcb:	push   esi
  414fcc:	jns    0x414fcc
  414fce:	and    BYTE PTR [edi+0x324bb918],dh
  414fd4:	xor    al,0x65
  414fd6:	or     BYTE PTR [esi-0x5869d98],bl
  414fdc:	sbb    bh,BYTE PTR [ebx+ecx*4]
  414fdf:	into   
  414fe0:	xchg   esp,eax
  414fe1:	sar    BYTE PTR [ebx-0x1b],1
  414fe4:	bswap  edx
  414fe6:	addr16 or al,0x9d
  414fe9:	ins    DWORD PTR es:[edi],dx
  414fea:	ins    BYTE PTR es:[edi],dx
  414feb:	jne    0x41503e
  414fed:	test   al,0xf3
  414fef:	adc    BYTE PTR ds:0xc47fc16b,0x96
  414ff6:	mov    edi,DWORD PTR [ecx+0x4f458933]
  414ffc:	sub    ah,BYTE PTR [eax]
  414ffe:	scas   eax,DWORD PTR es:[edi]
  414fff:	out    dx,eax
  415000:	sub    al,0x41
  415002:	and    esi,eax
  415004:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415005:	test   DWORD PTR [ebx-0x31],ebx
  415008:	or     al,0x9b
  41500a:	jecxz  0x414fe2
  41500c:	adc    eax,0x83aa3347
  415011:	shl    ah,cl
  415013:	ret    
  415014:	cmp    BYTE PTR [ecx],0xf2
  415017:	sbb    al,0x58
  415019:	push   0xe2ad44dc
  41501e:	cmp    ebp,esp
  415020:	mov    eax,ds:0x2b836423
  415025:	and    bh,al
  415027:	lahf   
  415028:	scas   eax,DWORD PTR es:[edi]
  415029:	out    dx,eax
  41502a:	call   0x9058:0x60e08b25
  415031:	cmc    
  415032:	mov    esp,0x791ba593
  415037:	sub    esp,DWORD PTR ds:0xda16be16
  41503d:	int3   
  41503e:	xchg   edx,eax
  41503f:	nop
  415040:	pop    ecx
  415041:	sub    al,0x98
  415043:	inc    edx
  415044:	in     eax,0xbc
  415046:	repnz sbb dh,ch
  415049:	xchg   ebp,eax
  41504a:	neg    ch
  41504c:	push   0x1b
  41504e:	leave  
  41504f:	imul   BYTE PTR [edx-0xe4430fa]
  415055:	(bad)  
  415056:	jg     0x41506c
  415058:	out    0x4c,eax
  41505a:	idiv   BYTE PTR [edi-0x7e]
  41505d:	jae    0x4150ca
  41505f:	xchg   edi,eax
  415060:	icebp  
  415061:	xchg   esi,eax
  415062:	mov    dl,0xe0
  415064:	push   es
  415065:	inc    edx
  415066:	fnstenv [ebx+0xf]
  415069:	fcomp  DWORD PTR [edi-0x1cadcd1f]
  41506f:	mov    dh,0x31
  415071:	dec    ecx
  415072:	jl     0x41508f
  415074:	add    ecx,esp
  415076:	xchg   esp,eax
  415077:	jnp    0x41501d
  415079:	dec    edx
  41507a:	mov    ebp,0xaa547f8e
  41507f:	stos   BYTE PTR es:[edi],al
  415080:	mov    BYTE PTR [ecx+esi*1+0x71],ch
  415084:	pop    edi
  415085:	fs lock xor ebp,edi
  415089:	mov    cl,0x26
  41508b:	loop   0x415068
  41508d:	push   ds
  41508e:	data16 jp 0x415032
  415091:	iret   
  415092:	lds    ecx,FWORD PTR [ecx-0x55]
  415095:	add    al,0x98
  415097:	mov    BYTE PTR [edi+edx*2],dl
  41509a:	cmp    eax,eax
  41509c:	pop    ebx
  41509d:	mov    eax,ds:0x1e5f29de
  4150a2:	push   ecx
  4150a3:	sbb    DWORD PTR [edx-0x6a70438b],esp
  4150a9:	mov    esp,0xc9e3f0e6
  4150ae:	arpl   WORD PTR [ebp+edx*2+0x1c],bx
  4150b2:	test   eax,eax
  4150b4:	hlt    
  4150b5:	adc    BYTE PTR [ecx],0xff
  4150b8:	and    ecx,esi
  4150ba:	into   
  4150bb:	xor    eax,0x85aeeb81
  4150c0:	add    eax,0x4a3d5bd9
  4150c5:	pop    esi
  4150c6:	and    al,0xe3
  4150c8:	icebp  
  4150c9:	fdiv   DWORD PTR ds:0x830f0cbc
  4150cf:	and    dh,BYTE PTR [esp+edx*1-0x17]
  4150d3:	cwde   
  4150d4:	adc    eax,0x1ba411a4
  4150d9:	jo     0x415066
  4150db:	lods   eax,DWORD PTR ds:[esi]
  4150dc:	cmp    ah,BYTE PTR [edi]
  4150de:	jle    0x4150d1
  4150e0:	repz mov al,ds:0x16c5d86b
  4150e6:	push   esi
  4150e7:	dec    esi
  4150e8:	repnz lahf 
  4150ea:	bound  ecx,QWORD PTR [ebx]
  4150ec:	cli    
  4150ed:	mov    ch,0xac
  4150ef:	fbstp  TBYTE PTR [ecx]
  4150f2:	xchg   ecx,eax
  4150f3:	jae    0x415092
  4150f5:	mov    bh,0x23
  4150f7:	das    
  4150f8:	jb     0x41514a
  4150fa:	and    BYTE PTR [edi],ah
  4150fc:	scas   al,BYTE PTR es:[edi]
  4150fd:	pop    eax
  4150fe:	(bad)  
  4150ff:	repnz lahf 
  415101:	inc    esp
  415102:	xor    BYTE PTR [eax],0x2e
  415105:	xchg   esi,eax
  415106:	mov    dl,0x19
  415108:	fwait
  415109:	add    eax,0xfefbfb64
  41510e:	imul   ebx,ebp,0xfffffff3
  415111:	xchg   esi,eax
  415112:	in     al,0x9d
  415114:	(bad)  
  415115:	mov    edi,0xf1a2cd73
  41511a:	push   es
  41511b:	icebp  
  41511c:	xchg   DWORD PTR [eax+eiz*8+0x70f7d5e6],edi
  415123:	cmp    BYTE PTR [esi],al
  415125:	jg     0x415170
  415127:	sub    esi,edi
  415129:	push   eax
  41512a:	dec    esp
  41512b:	call   0x1613bf8c
  415130:	ss leave 
  415132:	addr16 push 0xc96ac8de
  415138:	fmul   QWORD PTR [edi+0x74]
  41513b:	xor    bh,dh
  41513d:	sbb    cl,BYTE PTR [ecx-0x64]
  415140:	rol    DWORD PTR [ebp+0x45],cl
  415143:	rcr    DWORD PTR [edx],0xd5
  415146:	fstp   st(0)
  415148:	clc    
  415149:	xor    al,0x9
  41514b:	or     DWORD PTR [ebp+0x31d28969],esp
  415151:	rol    BYTE PTR [eax-0x4f],1
  415154:	push   esi
  415155:	push   esp
  415156:	je     0x415148
  415158:	jnp    0x4151a2
  41515a:	mov    ss,WORD PTR [ebx+0x40]
  41515d:	or     ebx,DWORD PTR [ecx]
  41515f:	ror    ch,0xc3
  415162:	pop    edi
  415163:	sub    cl,BYTE PTR [edi+0x53e3b319]
  415169:	pop    ebx
  41516a:	pop    ecx
  41516b:	adc    cl,al
  41516d:	mov    ch,bh
  41516f:	or     ah,BYTE PTR [esi-0x42929a20]
  415175:	out    0xfd,eax
  415177:	inc    esp
  415178:	jle    0x415145
  41517a:	out    dx,al
  41517b:	mov    bh,0x78
  41517d:	sub    bl,dl
  41517f:	ds into 
  415181:	cs out 0x5,eax
  415184:	fadd   DWORD PTR [ebx+0x77365779]
  41518a:	test   eax,0x971d8fba
  41518f:	mov    edi,0xdb9be2f2
  415194:	shl    BYTE PTR [esi+0x56],0x4
  415198:	fucomip st,st(1)
  41519a:	ss jmp 0x3f3c:0x5fa96b2b
  4151a2:	icebp  
  4151a3:	hlt    
  4151a4:	leave  
  4151a5:	loopne 0x4151cd
  4151a7:	ror    DWORD PTR [edx+edx*4+0x4e54ce4f],cl
  4151ae:	imul   ebp,DWORD PTR [esp+edx*1+0x1909eb7d],0x60
  4151b6:	mov    BYTE PTR [esi-0x3b],0xef
  4151ba:	push   ebp
  4151bb:	retf   0xf7f5
  4151be:	jnp    0x415150
  4151c0:	in     eax,dx
  4151c1:	or     ch,BYTE PTR ds:0x153fc1e7
  4151c7:	push   0x53
  4151c9:	cmp    DWORD PTR [esi-0x7230fba3],ebx
  4151cf:	mov    cl,0xcd
  4151d1:	cdq    
  4151d2:	retf   0xe6ea
  4151d5:	and    edx,DWORD PTR [eax+eiz*2]
  4151d8:	ret    
  4151d9:	sub    BYTE PTR [esi],bl
  4151db:	iret   
  4151dc:	and    edx,esp
  4151de:	stc    
  4151df:	mov    eax,0x9750c4d8
  4151e4:	lods   al,BYTE PTR ds:[esi]
  4151e5:	mov    eax,ds:0x1bb6de84
  4151ea:	jne    0x4151ec
  4151ec:	out    dx,al
  4151ed:	mov    dl,0x6f
  4151ef:	push   0x64
  4151f1:	leave  
  4151f2:	mov    al,ds:0x433f17d9
  4151f7:	sbb    cl,BYTE PTR [esi]
  4151f9:	inc    ecx
  4151fa:	push   ds
  4151fb:	and    BYTE PTR [edi+eiz*4+0x448db62e],dl
  415202:	mov    eax,ds:0x59ae8237
  415207:	inc    edx
  415208:	jg     0x415280
  41520a:	das    
  41520b:	out    0x42,eax
  41520d:	mov    ecx,0xc6d706c8
  415212:	pop    ebx
  415213:	pop    ebx
  415214:	fwait
  415215:	and    cl,dl
  415217:	xor    al,BYTE PTR [ebp-0x5557d52e]
  41521d:	push   0x850bfd4
  415222:	xlat   BYTE PTR ds:[ebx]
  415223:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  415225:	jnp    0x4151ef
  415227:	sti    
  415228:	sub    edi,DWORD PTR [edi+0x606a3088]
  41522e:	or     esp,ebp
  415230:	popa   
  415231:	adc    edx,DWORD PTR [eax-0xee9d06b]
  415237:	stos   BYTE PTR es:[edi],al
  415238:	mov    dl,0x32
  41523a:	dec    ebx
  41523b:	mov    gs,eax
  41523d:	lods   al,BYTE PTR ds:[esi]
  41523e:	sahf   
  41523f:	loope  0x415226
  415241:	xchg   bl,ch
  415243:	stc    
  415244:	fwait
  415245:	adc    DWORD PTR [edx-0x52],ebx
  415248:	je     0x4151dc
  41524a:	ins    BYTE PTR es:[edi],dx
  41524b:	jmp    0xe3df:0xe6fbf1ea
  415252:	int3   
  415253:	jbe    0x4151f3
  415255:	aam    0x37
  415257:	cdq    
  415258:	retf   0x9ec3
  41525b:	loope  0x4151ee
  41525d:	in     eax,0xe0
  41525f:	dec    esi
  415260:	enter  0x461e,0xd5
  415264:	aam    0x78
  415266:	repnz out dx,al
  415268:	cmp    eax,0x68b48be8
  41526d:	or     ebp,DWORD PTR [ebp+0x39]
  415270:	mov    bl,0x50
  415272:	lods   al,BYTE PTR ds:[esi]
  415273:	aam    0x70
  415275:	xchg   ecx,eax
  415276:	(bad)  
  415277:	jge    0x415247
  415279:	sub    bh,ch
  41527b:	or     eax,0x7d47f675
  415280:	jmp    0xedc2:0x9775cf57
  415287:	or     al,0xf8
  415289:	jne    0x41528e
  41528b:	add    DWORD PTR [edi-0x59e6c1b0],0x857caed6
  415295:	fsub   st,st(7)
  415297:	add    eax,DWORD PTR [eax+ebx*4-0x79]
  41529b:	or     DWORD PTR [edi+0x16],edx
  41529e:	shr    bh,1
  4152a0:	mov    ds:0xb611aca9,al
  4152a5:	dec    edx
  4152a6:	sub    al,0x77
  4152a8:	cmp    BYTE PTR [ebp-0x43],al
  4152ab:	sub    edi,DWORD PTR [edi+0x4]
  4152ae:	adc    esi,eax
  4152b0:	fsubrp st(6),st
  4152b2:	fst    DWORD PTR [ecx]
  4152b4:	bound  ebp,QWORD PTR [esp+esi*8+0x6d]
  4152b8:	mov    esp,0xd5b26b14
  4152bd:	push   ecx
  4152be:	mov    bl,0x6b
  4152c0:	iret   
  4152c1:	imul   esp,ebx,0x99900190
  4152c7:	hlt    
  4152c8:	xor    cl,al
  4152ca:	sub    edi,DWORD PTR [edx-0xa956376]
  4152d0:	in     eax,dx
  4152d1:	add    ecx,DWORD PTR [ecx]
  4152d3:	sub    al,0x63
  4152d5:	ret    
  4152d6:	fstp   DWORD PTR [ecx+eiz*4-0x64]
  4152da:	mov    dl,0x88
  4152dc:	test   DWORD PTR [ecx-0x2e],edi
  4152df:	call   0xe3c7:0x5d523e57
  4152e6:	test   BYTE PTR [eax],0x4
  4152e9:	cmp    DWORD PTR [ecx-0x2],0xbbd68733
  4152f0:	sub    eax,0xb4201bca
  4152f5:	push   edi
  4152f6:	add    eax,0xbe539d6
  4152fb:	mov    bh,0x4a
  4152fd:	dec    ecx
  4152fe:	push   edx
  4152ff:	mov    esp,0x12ec3839
  415304:	aad    0xca
  415306:	xchg   DWORD PTR [eax+0x4cf6cfb9],edx
  41530c:	mov    dh,0xdb
  41530e:	jmp    0xf58741fd
  415313:	mov    bh,0xee
  415315:	or     dl,BYTE PTR [edi+ecx*2-0x16]
  415319:	xor    BYTE PTR [esi+eiz*1-0x19],ah
  41531d:	adc    ebx,ecx
  41531f:	int3   
  415320:	aam    0xc8
  415322:	push   ebx
  415323:	std    
  415324:	pop    edi
  415325:	pop    ebx
  415326:	jno    0x4152d2
  415328:	out    0x65,eax
  41532a:	xor    eax,0x1cae280e
  41532f:	ins    DWORD PTR es:[edi],dx
  415330:	(bad)  
  415331:	idiv   esp
  415333:	add    cl,al
  415335:	push   ebp
  415336:	ins    DWORD PTR es:[edi],dx
  415337:	mov    ebp,0x4100291c
  41533c:	popa   
  41533d:	outs   dx,DWORD PTR ds:[esi]
  41533e:	jle    0x415391
  415340:	push   0x3201ad7d
  415345:	and    BYTE PTR [edx+0x7],al
  415348:	loop   0x4152d6
  41534a:	sti    
  41534b:	scas   eax,DWORD PTR es:[edi]
  41534c:	in     eax,0x51
  41534e:	mov    edx,0xf976773a
  415353:	sub    edi,DWORD PTR [ebp-0x27]
  415356:	cmp    eax,0x3b023416
  41535b:	or     ah,ah
  41535d:	sar    edx,0xec
  415360:	and    esp,DWORD PTR [eax+eax*2]
  415363:	dec    ebx
  415364:	mov    ecx,0xb48b2933
  415369:	cmc    
  41536a:	inc    eax
  41536b:	xor    bl,ah
  41536d:	pop    ebp
  41536e:	xchg   edx,eax
  41536f:	and    al,0x7c
  415371:	jmp    0x82541bd1
  415376:	inc    eax
  415377:	mov    eax,gs:0x3f79f9c1
  41537d:	pop    es
  41537e:	jmp    0x871efdec
  415383:	cmp    eax,0x5cf83cbb
  415388:	into   
  415389:	aad    0x13
  41538b:	sub    edx,DWORD PTR ds:0xc069e4dd
  415391:	(bad)  
  415392:	mov    ebx,0x3977e659
  415397:	adc    ch,BYTE PTR [ebp+0x34]
  41539a:	adc    edx,DWORD PTR [esp+eax*1-0x26]
  41539e:	sahf   
  41539f:	jp     0x415410
  4153a1:	js     0x4153f1
  4153a3:	pop    ebx
  4153a4:	xor    eax,0x4d7a271d
  4153a9:	rol    BYTE PTR [ebx+0x5b98ef12],1
  4153af:	outs   dx,DWORD PTR ds:[esi]
  4153b0:	shl    ebp,1
  4153b2:	inc    ebp
  4153b3:	mov    dl,0x8f
  4153b5:	push   esi
  4153b6:	inc    ebp
  4153b7:	dec    eax
  4153b8:	imul   ecx,DWORD PTR [eax-0x29],0x114ee533
  4153bf:	fs sub al,0xfa
  4153c2:	stos   BYTE PTR es:[edi],al
  4153c3:	fadd   QWORD PTR [edi]
  4153c5:	(bad)  
  4153c6:	jne    0x4153f9
  4153c8:	lods   eax,DWORD PTR ds:[esi]
  4153c9:	or     DWORD PTR [eax-0x1],edx
  4153cc:	rcr    BYTE PTR es:[edi-0x5a52824a],cl
  4153d3:	pop    ds
  4153d4:	sbb    bl,cl
  4153d6:	xor    al,0x2a
  4153d8:	adc    al,0x64
  4153da:	and    BYTE PTR [ebp+0x11],ch
  4153dd:	sbb    ebp,esp
  4153df:	fiadd  DWORD PTR [ebx+0x4f]
  4153e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153e3:	xor    bl,BYTE PTR [ecx+0x21d2cb29]
  4153e9:	xor    esp,ecx
  4153eb:	aam    0x2f
  4153ed:	mov    ds:0x555f438d,eax
  4153f2:	pop    esp
  4153f3:	fdiv   QWORD PTR [esi+eax*1+0x3f]
  4153f7:	mov    al,ds:0x8195f5dc
  4153fc:	std    
  4153fd:	xor    bh,BYTE PTR [ebp+0x108ed660]
  415403:	addr16 xor ah,ch
  415406:	push   esi
  415407:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  415409:	xchg   BYTE PTR [edx+ecx*8],bl
  41540c:	jle    0x415454
  41540e:	jge    0x4153d3
  415410:	in     al,0x97
  415412:	xchg   edi,eax
  415413:	pop    edx
  415414:	(bad)  
  415415:	jns    0x415419
  415417:	dec    edi
  415418:	pop    ds
  415419:	pusha  
  41541a:	outs   dx,BYTE PTR ds:[esi]
  41541b:	jle    0x415454
  41541d:	(bad)  
  41541e:	mov    eax,ds:0xe182b087
  415423:	push   ebp
  415424:	mov    ebx,0x2fdb012a
  415429:	ins    DWORD PTR es:[edi],dx
  41542a:	jge    0x4153cc
  41542c:	sub    DWORD PTR [ebp+0x6702c28a],0xffffffb5
  415433:	out    0xef,al
  415435:	les    eax,FWORD PTR [edx-0xa]
  415438:	push   esi
  415439:	xchg   esp,eax
  41543a:	add    al,0x6a
  41543c:	mov    dl,0x4f
  41543e:	mov    ds,WORD PTR [ebx-0x7fb0e7f0]
  415444:	stos   DWORD PTR es:[edi],eax
  415445:	sbb    BYTE PTR ds:0x5519bff3,ch
  41544b:	fnsave ss:[ecx-0x24]
  41544f:	push   esi
  415450:	sti    
  415451:	ret    0x16aa
  415454:	inc    ebx
  415455:	add    ah,BYTE PTR [edi-0x9fd820]
  41545b:	push   esp
  41545c:	shr    esp,cl
  41545e:	in     eax,dx
  41545f:	adc    eax,0x23a24b3e
  415464:	aas    
  415465:	out    0x4,al
  415467:	and    al,0xe4
  415469:	and    al,0x85
  41546b:	adc    al,0x40
  41546d:	adc    al,BYTE PTR ss:[esp+ebp*1-0x4ddd3d3d]
  415475:	inc    esp
  415476:	pop    eax
  415477:	nop
  415478:	hlt    
  415479:	shl    al,cl
  41547b:	push   esi
  41547c:	xor    eax,0xbbc48475
  415481:	push   ebp
  415482:	push   0x4a
  415484:	clc    
  415485:	mov    WORD PTR [edx+0x15],ss
  415488:	sbb    al,0xf1
  41548a:	pop    eax
  41548b:	in     eax,dx
  41548c:	arpl   WORD PTR [eax+0x65],bx
  41548f:	(bad)  
  415490:	add    BYTE PTR [ebx],0x20
  415493:	inc    ecx
  415494:	loope  0x4154a0
  415496:	push   edx
  415497:	ja     0x415499
  415499:	cmc    
  41549a:	shl    DWORD PTR [esi-0x1b8553c5],0x4b
  4154a1:	dec    ebp
  4154a2:	es ret 
  4154a4:	mov    es,WORD PTR [ecx+0xa3b98b1]
  4154aa:	mov    ch,bl
  4154ac:	push   esi
  4154ad:	mov    ebx,0x9032c66b
  4154b2:	mov    eax,0x30c313e3
  4154b7:	adc    al,0x9e
  4154b9:	je     0x41550a
  4154bb:	push   eax
  4154bc:	pop    esi
  4154bd:	push   esp
  4154be:	fiadd  DWORD PTR [ebx]
  4154c0:	inc    ecx
  4154c1:	stos   DWORD PTR es:[edi],eax
  4154c2:	xor    DWORD PTR [esi-0xa],ecx
  4154c5:	das    
  4154c6:	int    0xbe
  4154c8:	daa    
  4154c9:	fldenv [esi]
  4154cb:	in     al,0x4f
  4154cd:	push   ds
  4154ce:	jns    0x41552c
  4154d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154d1:	sbb    eax,0x155815bd
  4154d6:	int3   
  4154d7:	mov    esp,0x8d881afb
  4154dc:	sbb    esp,DWORD PTR [ebp+0x28468f60]
  4154e2:	iret   
  4154e3:	mov    ecx,0x45c7d3e6
  4154e8:	scas   al,BYTE PTR es:[edi]
  4154e9:	ja     0x415547
  4154eb:	out    dx,eax
  4154ec:	pushf  
  4154ed:	xchg   esp,eax
  4154ee:	mov    ds:0x73f206b9,eax
  4154f3:	xor    dl,BYTE PTR [edx*4+0x38cd45b7]
  4154fa:	fdivp  st(4),st
  4154fc:	outs   dx,BYTE PTR ds:[esi]
  4154fd:	call   0x494:0x6d3c6c06
  415504:	push   esi
  415505:	pop    eax
  415506:	mov    edi,0xc6a5c30f
  41550b:	push   ds
  41550c:	mov    dl,0x5f
  41550e:	xchg   ebp,eax
  41550f:	inc    ebx
  415510:	xor    ah,dh
  415512:	js     0x415572
  415514:	mov    al,ds:0xf2ab75a3
  415519:	or     DWORD PTR [edi+0x123c2c8e],ebx
  41551f:	sub    ah,al
  415521:	mov    edx,0x849e6dc6
  415526:	jbe    0x41558b
  415528:	add    DWORD PTR [ecx*4+0x577f0195],ebp
  41552f:	inc    ebx
  415530:	ds mov edx,0x228f7b16
  415536:	mov    ebx,0x524ff3b3
  41553b:	fdivp  st(3),st
  41553d:	and    al,ah
  41553f:	imul   ecx,ebp,0xb3865c62
  415545:	sahf   
  415546:	or     ebx,DWORD PTR [edx+0x7a]
  415549:	test   eax,0x2d77adc8
  41554e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41554f:	dec    esp
  415550:	test   DWORD PTR [esi-0xa7bb22d],esp
  415556:	dec    ecx
  415557:	faddp  st(2),st
  415559:	lds    esi,FWORD PTR [ebp+0x10cdfe5f]
  41555f:	pop    ss
  415560:	mov    ebx,edx
  415562:	out    dx,al
  415563:	lock xchg BYTE PTR [ebp+0x7b],dh
  415567:	js     0x4155e4
  415569:	dec    ebx
  41556a:	mov    ecx,0xa3cd8218
  41556f:	pop    ecx
  415570:	cdq    
  415571:	mov    ds:0x6c3f3eaf,al
  415576:	fcom   QWORD PTR [eax+0x2a9b9a61]
  41557c:	mov    esi,DWORD PTR [esi]
  41557e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41557f:	popa   
  415580:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415581:	mov    dh,0xf6
  415583:	mov    ?,WORD PTR [esi+0x49cc58ba]
  415589:	adc    ah,BYTE PTR [ecx]
  41558b:	add    bl,BYTE PTR [ecx+0x6257d7b7]
  415591:	mov    dl,0xd8
  415593:	adc    eax,0x127f26e9
  415598:	shr    DWORD PTR [ecx+0x2c],1
  41559b:	je     0x4155a7
  41559d:	dec    eax
  41559e:	add    edi,DWORD PTR [eax]
  4155a0:	jg     0x415578
  4155a2:	pop    ebx
  4155a3:	and    BYTE PTR [ecx],0x4c
  4155a6:	in     al,dx
  4155a7:	or     BYTE PTR [esi+0x75],al
  4155aa:	in     eax,dx
  4155ab:	std    
  4155ac:	aaa    
  4155ad:	or     eax,0xb82152fd
  4155b2:	aaa    
  4155b3:	dec    edx
  4155b4:	pop    esp
  4155b5:	xor    al,0x15
  4155b7:	ror    BYTE PTR [esi+0x40e300da],1
  4155bd:	mov    dl,0xde
  4155bf:	test   DWORD PTR [ebx+0x30818a8c],0x9b603542
  4155c9:	xchg   edx,eax
  4155ca:	aam    0xda
  4155cc:	or     edi,DWORD PTR [esi]
  4155ce:	ret    0x7f12
  4155d1:	dec    ebx
  4155d2:	rcl    BYTE PTR [edx+0x1a],0x3c
  4155d6:	into   
  4155d7:	(bad)  
  4155d8:	mov    edx,0xbbebaa6b
  4155dd:	retf   
  4155de:	or     dl,BYTE PTR [edi+0x469fa43b]
  4155e4:	adc    DWORD PTR [edi],esp
  4155e6:	cmc    
  4155e7:	push   DWORD PTR [esp+edx*8]
  4155ea:	cmp    al,0xc9
  4155ec:	pusha  
  4155ed:	mov    ah,0x2d
  4155ef:	xchg   ebx,eax
  4155f0:	sbb    BYTE PTR [edx-0x6817a7fc],dh
  4155f6:	add    esi,edx
  4155f8:	push   esp
  4155f9:	pop    eax
  4155fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155fb:	mov    ah,0x22
  4155fd:	not    BYTE PTR [edx+0x1fbe02ea]
  415603:	pop    ds
  415604:	lods   eax,DWORD PTR ds:[esi]
  415605:	cmp    esp,DWORD PTR [ecx]
  415607:	fimul  WORD PTR [edx+0x1c2653f7]
  41560d:	div    DWORD PTR [edi+0x2ce1c0c2]
  415613:	sbb    eax,0xb9293946
  415618:	sbb    ebx,ebx
  41561a:	xchg   ebp,eax
  41561b:	sub    ecx,DWORD PTR [edi+0xa]
  41561e:	mov    al,ds:0xb24a4f5b
  415623:	popf   
  415624:	inc    esp
  415625:	retf   
  415626:	in     eax,dx
  415627:	xchg   esi,eax
  415628:	dec    eax
  415629:	cmp    BYTE PTR [eax],ah
  41562b:	loop   0x415673
  41562d:	outs   dx,BYTE PTR ds:[esi]
  41562e:	test   BYTE PTR [eax],ah
  415630:	push   ebx
  415631:	pop    ebp
  415632:	mov    esp,0x1a0f4321
  415637:	pop    ds
  415638:	mov    ?,WORD PTR [ebx-0x8]
  41563b:	mov    dl,0x8d
  41563d:	sbb    ebx,DWORD PTR [ecx]
  41563f:	out    0x5,ax
  415642:	(bad)  
  415643:	ficomp WORD PTR [edx-0x4c]
  415646:	outs   dx,BYTE PTR ss:[esi]
  415648:	dec    eax
  415649:	repnz idiv DWORD PTR [ebx]
  41564c:	mov    DWORD PTR [ebx],edx
  41564e:	push   ebp
  41564f:	std    
  415650:	rol    BYTE PTR [esi+0x25],cl
  415653:	in     eax,0x89
  415655:	or     BYTE PTR [ecx+ecx*8],cl
  415658:	add    BYTE PTR [edx-0x58],0x97
  41565c:	and    BYTE PTR [ecx+0x49c9ceec],ch
  415662:	adc    al,BYTE PTR [edx]
  415664:	or     bh,BYTE PTR [ebx+0x22]
  415667:	jmp    0x35b8f3d3
  41566c:	nop
  41566d:	push   cs
  41566e:	and    al,0xe8
  415670:	pop    ebx
  415671:	add    BYTE PTR [ebx],bh
  415673:	xchg   edi,eax
  415674:	sub    ah,bl
  415676:	ret    
  415677:	dec    esp
  415678:	add    DWORD PTR [ebx+0x7b],edx
  41567b:	jae    0x4155ff
  41567d:	inc    ebx
  41567e:	inc    eax
  41567f:	inc    ebp
  415680:	(bad)  [ebx-0x1f57de4e]
  415686:	arpl   WORD PTR [edi+0x7090b14e],dx
  41568c:	mov    WORD PTR [edx*4+0x7554eb12],es
  415693:	mov    esp,0xaff4beef
  415698:	mov    bl,0x0
  41569a:	shl    BYTE PTR [edx],cl
  41569c:	ja     0x415702
  41569e:	es test al,0xcd
  4156a2:	inc    ecx
  4156a3:	in     eax,dx
  4156a4:	sub    BYTE PTR [edi-0x1abadea3],ch
  4156aa:	inc    ecx
  4156ab:	jmp    0x4f1ddd1c
  4156b0:	sbb    BYTE PTR [ebp+0x67],ch
  4156b3:	(bad)
  4156b6:	jne    0x41568a
  4156b8:	fwait
  4156b9:	stos   DWORD PTR es:[edi],eax
  4156ba:	mov    ds:0x9b15c8a8,eax
  4156bf:	dec    ecx
  4156c0:	stos   BYTE PTR es:[edi],al
  4156c1:	or     al,0xd4
  4156c3:	adc    eax,0x836784df
  4156c8:	mov    bh,0x4d
  4156ca:	mov    eax,ds:0x24a62216
  4156cf:	xor    al,0x32
  4156d1:	xchg   ebx,eax
  4156d2:	icebp  
  4156d3:	push   0x25b9ea5f
  4156d8:	dec    ebx
  4156d9:	mov    esp,0x76072e2b
  4156de:	sub    ch,BYTE PTR [edx+0x4193e424]
  4156e4:	and    DWORD PTR [edi-0x6d],edx
  4156e7:	mov    ds:0xfbe398a,al
  4156ec:	ret    
  4156ed:	into   
  4156ee:	jmp    0x4156ed
  4156f0:	lahf   
  4156f1:	adc    al,0x3c
  4156f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156f4:	test   edx,edx
  4156f6:	pop    edx
  4156f7:	out    dx,al
  4156f8:	mov    cl,0x9f
  4156fa:	jns    0x4156f9
  4156fc:	je     0x41575b
  4156fe:	retf   0x41b6
  415701:	and    al,0x25
  415703:	push   edx
  415704:	ret    
  415705:	stos   DWORD PTR es:[edi],eax
  415706:	les    esp,FWORD PTR [esi-0x27c52616]
  41570c:	add    DWORD PTR [ecx+0x59ff6861],esp
  415712:	rol    DWORD PTR [ecx],cl
  415714:	(bad)  
  415715:	or     eax,0xcc0c5a18
  41571a:	mul    DWORD PTR [ecx+0x36]
  41571d:	data16 xchg BYTE PTR [esi+0x26],ch
  415721:	ja     0x415786
  415723:	and    eax,0x7b92f3c8
  415728:	out    0x47,al
  41572a:	sub    bl,ch
  41572c:	xor    eax,0x45df915d
  415731:	add    DWORD PTR [edx-0x7d0c24f4],0xce978b04
  41573b:	xchg   esp,eax
  41573c:	rcr    dh,0xaa
  41573f:	scas   eax,DWORD PTR es:[edi]
  415740:	mov    fs,WORD PTR [ecx]
  415742:	jbe    0x4156d0
  415744:	ror    DWORD PTR ds:0xe0556f00,0x16
  41574b:	and    BYTE PTR [ebx+eiz*2+0x39],dl
  41574f:	(bad)  
  415750:	mov    bl,0xb6
  415752:	jge    0x41575c
  415754:	adc    ebx,edx
  415756:	leave  
  415757:	xor    DWORD PTR [esi-0x37],esp
  41575a:	mov    ecx,0x433318f7
  41575f:	test   BYTE PTR [eax+edx*1+0x45],0x51
  415764:	fld    TBYTE PTR [eax+edx*1]
  415767:	inc    edi
  415768:	mov    ds,WORD PTR [edx]
  41576a:	shl    DWORD PTR [eax+esi*1+0x1b6ad9f9],1
  415771:	xchg   edi,eax
  415772:	push   esi
  415773:	sahf   
  415774:	cwde   
  415775:	lahf   
  415776:	adc    ah,BYTE PTR [edx+ebx*4]
  415779:	xchg   esi,eax
  41577a:	cwde   
  41577b:	data16 daa 
  41577d:	jne    0x4157fb
  41577f:	add    dh,dl
  415781:	neg    DWORD PTR [ebp-0x362003b9]
  415787:	clc    
  415788:	ror    DWORD PTR [eax+ebx*2-0x54],cl
  41578c:	or     eax,0x14757ee8
  415791:	mul    DWORD PTR [edi-0x5f]
  415794:	int    0xc6
  415796:	cmp    dh,ah
  415798:	add    cl,bl
  41579a:	cs ja  0x41572c
  41579d:	fsub   QWORD PTR [ebp-0x4b307c38]
  4157a3:	punpckhwd mm2,QWORD PTR [ebx+edx*2-0x5ec125d1]
  4157ab:	into   
  4157ac:	cld    
  4157ad:	pop    es
  4157ae:	mov    dl,0x81
  4157b0:	fmul   st(0),st
  4157b2:	jno    0x415820
  4157b4:	stos   DWORD PTR es:[edi],eax
  4157b5:	push   0x2a
  4157b7:	jmp    DWORD PTR [esi-0x54]
  4157ba:	xor    bl,bl
  4157bc:	sbb    bl,BYTE PTR [ebx-0x75]
  4157bf:	fwait
  4157c0:	jp     0x415744
  4157c2:	or     al,0xfe
  4157c4:	xor    al,BYTE PTR [ebx-0x65]
  4157c7:	xchg   ebx,eax
  4157c8:	jg     0x415837
  4157ca:	cwde   
  4157cb:	hlt    
  4157cc:	sbb    ah,bl
  4157ce:	jnp    0x415769
  4157d0:	and    al,0x77
  4157d2:	test   DWORD PTR [ebp-0x24],ecx
  4157d5:	jnp    0x41582e
  4157d7:	(bad)  
  4157d9:	mov    ebp,0xa345cbbe
  4157de:	jl     0x415761
  4157e0:	ss or  al,0xdf
  4157e3:	or     BYTE PTR [ecx-0xae5e962],bl
  4157e9:	pop    es
  4157ea:	test   eax,0x87daca72
  4157ef:	retf   
  4157f0:	mov    bl,BYTE PTR [ecx+0x28]
  4157f3:	outs   dx,BYTE PTR ds:[esi]
  4157f4:	cmp    ch,bl
  4157f6:	mov    DWORD PTR [eax-0x68],edx
  4157f9:	sub    bl,BYTE PTR ds:0x502510f4
  4157ff:	mov    eax,ds:0x8dec8fc8
  415804:	inc    edi
  415805:	ret    
  415806:	(bad)  
  415807:	or     DWORD PTR [ebp+esi*1+0x41ec1071],ebx
  41580e:	and    bl,BYTE PTR [esi+0x3a]
  415811:	mov    edi,0xf80ddb31
  415816:	stc    
  415817:	ret    
  415818:	xchg   ebp,eax
  415819:	xlat   BYTE PTR fs:[ebx]
  41581b:	inc    edi
  41581c:	stos   BYTE PTR es:[edi],al
  41581d:	push   ds
  41581e:	fdiv   QWORD PTR [edx]
  415820:	sbb    dl,cl
  415822:	mov    eax,0x9f39a8ff
  415827:	data16 xlat BYTE PTR ds:[ebx]
  415829:	mov    dl,0x98
  41582b:	sbb    esi,DWORD PTR [edi+0x1d9cd4ad]
  415831:	mov    bh,BYTE PTR [edi+0xfa9af04]
  415837:	sbb    eax,0xc176d2bc
  41583c:	push   bp
  41583e:	cmc    
  41583f:	cmp    al,0xe2
  415841:	ret    0xb82a
  415844:	fwait
  415845:	(bad)  
  415846:	(bad)
  415849:	dec    BYTE PTR [edx]
  41584b:	aad    0x10
  41584d:	(bad)  [ebx+0x65]
  415850:	(bad)  
  415851:	dec    ebx
  415852:	push   edx
  415853:	or     al,al
  415855:	loop   0x415880
  415857:	retf   
  415858:	cs adc edx,ebp
  41585b:	xor    esi,esi
  41585d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41585e:	jmp    0x4158a1
  415860:	sti    
  415861:	jne    0x4157f8
  415863:	xor    al,0x5e
  415865:	jle    0x41585a
  415867:	push   ebx
  415868:	dec    edx
  415869:	js     0x4158ac
  41586b:	cmp    esp,DWORD PTR [edx+0x307457cd]
  415871:	pusha  
  415872:	retf   
  415873:	mov    bl,0xa1
  415875:	lods   al,BYTE PTR ds:[esi]
  415876:	mov    edx,0xb2ef6031
  41587b:	aaa    
  41587c:	(bad)  
  41587e:	aad    0xa4
  415880:	pop    es
  415881:	addr16 push 0xffffffb6
  415884:	fwait
  415885:	inc    ebx
  415886:	es pop eax
  415888:	(bad)  
  415889:	push   ss
  41588a:	adc    al,0x5b
  41588c:	sub    esp,DWORD PTR [ebx-0x2c6ea356]
  415892:	push   ss
  415893:	mov    ah,0x5f
  415895:	or     al,0xea
  415897:	add    BYTE PTR [edi-0xe],bl
  41589a:	xor    eax,0x6b9b1588
  41589f:	out    0x7f,eax
  4158a1:	pop    ds
  4158a2:	cmp    DWORD PTR [ecx],edx
  4158a4:	mov    ebx,cs
  4158a6:	dec    ebp
  4158a7:	je     0x415883
  4158a9:	lods   eax,DWORD PTR ds:[esi]
  4158aa:	daa    
  4158ab:	mov    ds:0x279b97c6,al
  4158b0:	add    BYTE PTR [esi-0x79467139],bh
  4158b6:	push   ecx
  4158b7:	xchg   ebp,eax
  4158b8:	jge    0x4158ef
  4158ba:	xchg   edx,eax
  4158bb:	call   0x51fa:0x56bc4df6
  4158c2:	jl     0x4158a8
  4158c4:	inc    eax
  4158c5:	sub    al,0xd8
  4158c7:	push   edi
  4158c8:	les    ecx,FWORD PTR [ebp-0x5e05330d]
  4158ce:	div    DWORD PTR [esi+0x121572fa]
  4158d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158d5:	adc    DWORD PTR [ecx],edx
  4158d7:	dec    ebx
  4158d8:	cwde   
  4158d9:	push   0xdf99c7b4
  4158de:	pushf  
  4158df:	pop    ds
  4158e0:	call   0x2dd027c
  4158e5:	mov    eax,0x4cd8a6c8
  4158ea:	stos   BYTE PTR es:[edi],al
  4158eb:	fnsave [esi]
  4158ed:	popa   
  4158ee:	sub    DWORD PTR [esp+edi*1],edx
  4158f1:	mov    DWORD PTR [edx+edx*4+0x47d66119],esp
  4158f8:	cmp    eax,ebx
  4158fa:	mov    WORD PTR [ebp+0x256d6f85],ss
  415900:	sub    eax,0x97ec6e38
  415905:	add    al,0x66
  415907:	jno    0x4158c8
  415909:	sbb    al,BYTE PTR [eax]
  41590b:	(bad)  
  41590c:	retf   
  41590d:	mov    edx,0x267b6d58
  415912:	test   esp,ebx
  415914:	cmp    al,0x55
  415916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415917:	fimul  DWORD PTR gs:[ebx-0x16]
  41591b:	sub    BYTE PTR [esi],0x71
  41591e:	jnp    0x415940
  415920:	push   0xffffff8f
  415922:	and    esp,DWORD PTR [ebp+0x8]
  415925:	push   ds
  415926:	cwde   
  415927:	cdq    
  415928:	in     eax,0xdc
  41592a:	dec    edx
  41592b:	ja     0x4158eb
  41592d:	jne    0x4158c8
  41592f:	jle    0x4158c0
  415931:	mov    edx,0xe0e5c710
  415936:	pop    ecx
  415937:	into   
  415938:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415939:	xor    bh,bh
  41593b:	push   eax
  41593c:	add    al,0x23
  41593e:	inc    esp
  41593f:	das    
  415940:	xor    esi,edi
  415942:	cmp    BYTE PTR [eax+edi*2],0xad
  415946:	aad    0x9f
  415948:	inc    edx
  415949:	push   ecx
  41594a:	inc    edx
  41594b:	mov    ebp,0x9fa3bd18
  415950:	dec    edi
  415951:	call   0x3d0b:0xe7402050
  415958:	xchg   BYTE PTR [ecx+0x395a0d2b],cl
  41595e:	popa   
  41595f:	sbb    eax,0x257f636e
  415964:	mov    ah,0xc8
  415966:	cmp    DWORD PTR [ebx+0x17983e15],ecx
  41596c:	sub    BYTE PTR [edx],0xec
  41596f:	mov    dh,BYTE PTR [ebx-0x4d]
  415972:	fcomp  QWORD PTR [edx]
  415974:	xor    DWORD PTR [ebp+0x34],0x3b
  415978:	mov    eax,ecx
  41597a:	jno    0x4159fb
  41597c:	mov    edi,0x9cc2a43c
  415981:	sbb    edi,DWORD PTR [ebp+ebx*2-0x3630ce71]
  415988:	add    dh,BYTE PTR [eax-0x46747b29]
  41598e:	pop    esi
  41598f:	xor    dl,dh
  415991:	xor    al,BYTE PTR [ebx-0x48192b1a]
  415997:	test   BYTE PTR [edi-0x35],ah
  41599a:	pop    ebp
  41599b:	les    edi,FWORD PTR [esi+eiz*1+0x3c]
  41599f:	fcomp  QWORD PTR [esp+ebp*8-0x62]
  4159a3:	fld    st(1)
  4159a5:	mov    dl,0x31
  4159a7:	ja     0x4159fa
  4159a9:	int    0x87
  4159ab:	mov    bh,BYTE PTR ds:0x28752d32
  4159b1:	and    al,0xa5
  4159b3:	icebp  
  4159b4:	sahf   
  4159b5:	cmc    
  4159b6:	and    DWORD PTR [edi],0xf83c0c04
  4159bc:	xor    al,0xf0
  4159be:	dec    ebp
  4159bf:	in     eax,dx
  4159c0:	outs   dx,DWORD PTR ds:[esi]
  4159c1:	push   edx
  4159c2:	ficom  WORD PTR [edx+0x37]
  4159c5:	aas    
  4159c6:	sbb    eax,0x391a590b
  4159cb:	xchg   esp,eax
  4159cc:	pop    edi
  4159cd:	out    0xc9,al
  4159cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159d0:	push   0x42adcfc8
  4159d5:	jb     0x415963
  4159d7:	mov    WORD PTR [ecx+0x10],?
  4159da:	fwait
  4159db:	(bad)  
  4159dc:	jb     0x41597e
  4159de:	enter  0xe3e5,0x90
  4159e2:	cwde   
  4159e3:	outs   dx,DWORD PTR ds:[esi]
  4159e4:	jae    0x4159ad
  4159e6:	bound  esp,QWORD PTR [eax]
  4159e8:	sub    DWORD PTR [eax-0x34d12926],eax
  4159ee:	stos   DWORD PTR es:[edi],eax
  4159ef:	mov    edx,0xde09f1c5
  4159f4:	retf   
  4159f5:	call   0xb8d0:0xa0ff8631
  4159fc:	dec    esp
  4159fd:	jae    0x4159a6
  4159ff:	(bad)  
  415a01:	lods   al,BYTE PTR ds:[esi]
  415a02:	scas   al,BYTE PTR es:[edi]
  415a03:	cmpps  xmm6,XMMWORD PTR [eax-0x7e],0xe9
  415a08:	std    
  415a09:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a0b:	xor    al,0xa4
  415a0d:	dec    edi
  415a0e:	or     eax,0x7b54f952
  415a13:	and    al,0xb6
  415a15:	stos   DWORD PTR es:[edi],eax
  415a16:	lds    edx,FWORD PTR [ebx]
  415a18:	pop    ecx
  415a19:	ins    DWORD PTR es:[edi],dx
  415a1a:	add    DWORD PTR [edi+0x16f60491],ebx
  415a20:	mov    ah,0x9d
  415a22:	xor    al,0xa
  415a24:	nop
  415a25:	jae    0x415aa4
  415a27:	aaa    
  415a28:	cmp    DWORD PTR [esi],0x78c86f04
  415a2e:	scas   eax,DWORD PTR es:[edi]
  415a2f:	or     BYTE PTR [eax],bl
  415a31:	jo     0x415a3e
  415a33:	lahf   
  415a34:	inc    eax
  415a35:	and    DWORD PTR [edi+eax*4+0x54bad8a8],ebp
  415a3c:	inc    DWORD PTR [ecx]
  415a3e:	cld    
  415a3f:	fs call 0x95a9:0x4a7d91f6
  415a47:	mov    dl,0xc
  415a49:	or     ebx,DWORD PTR [eax]
  415a4b:	xchg   ebp,eax
  415a4c:	aam    0xc9
  415a4e:	mov    eax,0xe4e69b19
  415a53:	xlat   BYTE PTR ds:[ebx]
  415a54:	mov    dh,0x72
  415a56:	out    dx,eax
  415a57:	xor    BYTE PTR [ebx-0x50],dh
  415a5a:	scas   al,BYTE PTR es:[edi]
  415a5b:	mov    ds:0xc7f74fdc,eax
  415a60:	mov    BYTE PTR [eax-0x11],0x91
  415a64:	mov    bl,0x2f
  415a66:	cld    
  415a67:	mov    ch,0x7d
  415a69:	ret    0x9c91
  415a6c:	xchg   ebp,eax
  415a6d:	xor    ch,dh
  415a6f:	pop    edi
  415a70:	stc    
  415a71:	popf   
  415a72:	bound  esp,QWORD PTR [eax]
  415a74:	inc    edi
  415a75:	into   
  415a76:	or     BYTE PTR [ebx-0xd],al
  415a79:	ds lock dec edx
  415a7c:	call   0xcd538c7e
  415a81:	and    bh,BYTE PTR [ecx-0xe54a5de]
  415a87:	inc    ebx
  415a88:	dec    edx
  415a89:	or     BYTE PTR [esi+ebx*4+0x4e9d90e4],cl
  415a90:	mov    ah,0xc3
  415a92:	in     al,dx
  415a93:	loop   0x415a31
  415a95:	and    eax,0x6fa72e15
  415a9a:	dec    esp
  415a9b:	sub    ah,0xaa
  415a9e:	jo     0x415acf
  415aa0:	dec    edi
  415aa1:	stc    
  415aa2:	sub    eax,0x55c3cff2
  415aa7:	or     DWORD PTR [ebp-0x30e545b2],ebp
  415aad:	mov    db5,edx
  415ab0:	push   edx
  415ab1:	cmc    
  415ab2:	aaa    
  415ab3:	outs   dx,DWORD PTR ds:[esi]
  415ab4:	dec    edx
  415ab5:	lahf   
  415ab6:	popf   
  415ab7:	sahf   
  415ab8:	mov    ds:0x2b08653e,eax
  415abd:	sbb    eax,0xc2665a88
  415ac2:	pop    esp
  415ac3:	or     DWORD PTR [eax+0x76f68628],eax
  415ac9:	pop    eax
  415aca:	icebp  
  415acb:	xchg   edi,eax
  415acc:	aam    0x4b
  415ace:	push   ebp
  415ad0:	test   al,0x52
  415ad2:	mov    DWORD PTR [edx],ecx
  415ad4:	jno    0x415af2
  415ad6:	mov    WORD PTR [ebp-0x4243c8c5],fs
  415adc:	adc    BYTE PTR fs:[esi],bl
  415adf:	sbb    BYTE PTR [esi-0x3c],dh
  415ae2:	fidivr WORD PTR [ebx-0x5d]
  415ae5:	mov    esi,0x82e6d7b7
  415aea:	and    dl,dh
  415aec:	mov    ebx,0xe0a94c34
  415af1:	add    DWORD PTR [edx+0x519b9b58],esi
  415af7:	das    
  415af8:	or     BYTE PTR [ebx+0x15],dl
  415afb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415afc:	adc    bh,cl
  415afe:	loope  0x415aa2
  415b00:	pop    esi
  415b01:	sbb    eax,0x72dce363
  415b06:	retf   
  415b07:	test   DWORD PTR [ecx+0x2d],edi
  415b0a:	xor    al,0x74
  415b0c:	mov    esi,0x7fa3110
  415b11:	pop    esi
  415b12:	jp     0x415b13
  415b14:	xor    eax,DWORD PTR [ebx+0x27]
  415b17:	mov    WORD PTR [eax+0x6d80b9e6],cs
  415b1d:	xchg   edi,eax
  415b1e:	and    BYTE PTR [ebx-0x46],0x0
  415b22:	adc    ebx,DWORD PTR [esi]
  415b24:	mov    bl,0x8c
  415b26:	cmp    DWORD PTR [edx-0x531820ce],esp
  415b2c:	outs   dx,DWORD PTR ds:[esi]
  415b2d:	sub    BYTE PTR [edx],cl
  415b2f:	pop    es
  415b30:	aam    0x68
  415b32:	ret    0x1bbf
  415b35:	mov    WORD PTR [edx-0x24ea7bc0],cs
  415b3b:	fnstenv [edi+0xe]
  415b3e:	popa   
  415b3f:	shl    DWORD PTR [edi],cl
  415b41:	sahf   
  415b42:	push   esp
  415b43:	lock out dx,al
  415b45:	ja     0x415b5f
  415b47:	fisttp DWORD PTR [edi+ecx*1+0x6e64fbd4]
  415b4e:	add    eax,0x21098929
  415b53:	mov    es,WORD PTR [ebp+0x12]
  415b56:	fcomp  DWORD PTR [edi+eiz*8+0x7330a17c]
  415b5d:	xchg   ebp,eax
  415b5e:	ficom  WORD PTR [ecx-0x1]
  415b61:	retf   0xbce4
  415b64:	jl     0x415be2
  415b66:	cld    
  415b67:	mov    dh,0x13
  415b69:	imul   edx,DWORD PTR [eax-0x5e084c94],0x1b7a629a
  415b73:	icebp  
  415b74:	cmp    dh,BYTE PTR [ebx-0x3d]
  415b77:	lahf   
  415b78:	outs   dx,BYTE PTR ds:[esi]
  415b79:	(bad)  
  415b7b:	rol    BYTE PTR [ecx-0x40],0xf1
  415b7f:	bound  edi,QWORD PTR [edx+esi*8+0x2]
  415b83:	push   0xfffffff3
  415b85:	dec    edi
  415b86:	xor    al,0x9e
  415b88:	in     eax,dx
  415b89:	test   BYTE PTR [ebp-0x34ee155],cl
  415b8f:	adc    ecx,0xdfc961c8
  415b95:	xchg   BYTE PTR [eax],dl
  415b97:	jmp    0x2a6eda71
  415b9c:	jb     0x415be1
  415b9e:	push   ds
  415b9f:	push   ebx
  415ba0:	dec    edx
  415ba1:	rol    DWORD PTR [ecx-0x34b967d0],0x88
  415ba8:	pop    ebp
  415ba9:	xchg   DWORD PTR [ebx+ebx*4+0x46],esi
  415bad:	adc    al,0x25
  415baf:	mov    cl,0x9e
  415bb1:	je     0x415b72
  415bb3:	or     bl,bl
  415bb5:	xor    dh,BYTE PTR [esi-0x48]
  415bb8:	mov    eax,0x2e51e5f6
  415bbd:	mov    ecx,0xf31d46c1
  415bc2:	jns    0x415bcf
  415bc4:	imul   BYTE PTR [ecx+ebp*2+0x4d]
  415bc8:	sti    
  415bc9:	sbb    al,0xa7
  415bcb:	xchg   esi,eax
  415bcc:	xchg   ecx,eax
  415bcd:	mov    ds:0x95566ab5,eax
  415bd2:	ror    BYTE PTR [eax+0x2db2be38],0x51
  415bd9:	mov    bl,bl
  415bdb:	daa    
  415bdc:	pop    esp
  415bdd:	fstp   QWORD PTR [ecx-0x3c]
  415be0:	pop    ss
  415be1:	sar    DWORD PTR [edx-0x48c6f57b],0xc5
  415be8:	adc    ebx,0xffffffbb
  415beb:	out    0x7b,eax
  415bed:	dec    ebp
  415bee:	pop    ds
  415bef:	mov    al,0xde
  415bf1:	mov    cl,0xec
  415bf3:	hlt    
  415bf4:	jmp    0x415c2a
  415bf6:	dec    eax
  415bf7:	pop    ebx
  415bf8:	mov    ch,BYTE PTR [ebx-0x2433b96d]
  415bfe:	sti    
  415bff:	push   ecx
  415c00:	add    BYTE PTR [esi+0x1d],0x49
  415c04:	jg     0x415bc1
  415c06:	push   esp
  415c07:	mov    eax,ds:0x7d2bcf75
  415c0c:	inc    esp
  415c0d:	mov    DWORD PTR [edi-0x3c],0xd81ecbdd
  415c14:	jns    0x415bb4
  415c16:	push   0x8a15bbe3
  415c1b:	inc    esi
  415c1c:	xchg   ebp,eax
  415c1d:	test   edx,eax
  415c1f:	repnz pop es
  415c21:	rol    DWORD PTR [edi+0x349fe061],cl
  415c27:	stos   BYTE PTR es:[edi],al
  415c28:	or     eax,0xbf65b33
  415c2d:	push   esp
  415c2e:	mov    cl,0xb6
  415c30:	pop    es
  415c31:	or     al,0x70
  415c33:	mov    edx,0x6754c477
  415c38:	rcr    DWORD PTR [ecx],0x2e
  415c3b:	repnz aas 
  415c3d:	jl     0x415c6d
  415c3f:	sti    
  415c40:	arpl   bx,si
  415c42:	rcr    BYTE PTR [eax],1
  415c44:	inc    ebp
  415c45:	pop    ecx
  415c46:	xor    eax,0xfffdde19
  415c4b:	inc    eax
  415c4c:	int    0x33
  415c4e:	xchg   edx,eax
  415c4f:	xchg   esp,eax
  415c50:	daa    
  415c51:	stos   DWORD PTR es:[edi],eax
  415c52:	stc    
  415c53:	sbb    DWORD PTR [eax+0x4],ecx
  415c56:	sub    ebp,ecx
  415c58:	iret   
  415c59:	lock and al,0x44
  415c5c:	sub    ebx,DWORD PTR [edx-0xe]
  415c5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c60:	sti    
  415c61:	fimul  WORD PTR [edx+edi*8]
  415c65:	es xchg edi,eax
  415c67:	fld    DWORD PTR [ecx+ecx*2+0x25]
  415c6b:	xchg   BYTE PTR [eax],al
  415c6d:	adc    dh,BYTE PTR [eax+0x5c]
  415c70:	pusha  
  415c71:	cmp    eax,0x8d544313
  415c76:	call   0x3d77:0xc21475e2
  415c7d:	sub    edi,DWORD PTR [edi+ebx*4+0x86ee751]
  415c84:	scas   al,BYTE PTR es:[edi]
  415c85:	and    DWORD PTR [edx-0x2ac88e8d],0xffffff8f
  415c8c:	cdq    
  415c8d:	pop    ebp
  415c8e:	stos   DWORD PTR es:[edi],eax
  415c8f:	lods   eax,DWORD PTR ds:[esi]
  415c90:	or     al,0x3f
  415c92:	out    0x4f,al
  415c94:	mov    DWORD PTR [edx-0x33],ecx
  415c97:	(bad)  
  415c98:	in     eax,0xbd
  415c9a:	or     eax,0x5a0dc1ff
  415c9f:	mov    ebp,0x9587d4fa
  415ca4:	adc    BYTE PTR [eax-0x2a5efbf7],ah
  415caa:	rol    esi,0x76
  415cad:	mov    edi,0x2dbebfe0
  415cb2:	popa   
  415cb3:	dec    eax
  415cb4:	stos   DWORD PTR es:[edi],eax
  415cb5:	aas    
  415cb6:	pop    ebp
  415cb7:	popa   
  415cb8:	fild   QWORD PTR [ecx+0x49eb0b47]
  415cbe:	ret    0x27f6
  415cc1:	ds jl  0x415c90
  415cc4:	mov    eax,ds:0x4d289e48
  415cc9:	outs   dx,DWORD PTR ds:[esi]
  415cca:	jmp    0x22ba:0x6de6e4a5
  415cd1:	cmp    ah,BYTE PTR [ebp+0xb3583a7]
  415cd7:	inc    ebp
  415cd8:	retf   0x597d
  415cdb:	das    
  415cdc:	(bad)  
  415cdd:	jbe    0x415cf1
  415cdf:	mov    DWORD PTR [edx+0x3bdb0bef],ecx
  415ce5:	sub    ebp,DWORD PTR [esi+edi*1-0x19]
  415ce9:	retf   0xaef2
  415cec:	rcr    BYTE PTR [ebp+0x29],0x7a
  415cf0:	inc    ebx
  415cf1:	inc    edx
  415cf2:	adc    dh,al
  415cf4:	mov    ds,WORD PTR [ebp+0x3]
  415cf7:	inc    edi
  415cf8:	daa    
  415cf9:	popa   
  415cfa:	pop    edi
  415cfb:	ror    DWORD PTR [ebp-0x37],cl
  415cfe:	mov    ds:0x3fd90838,eax
  415d03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d04:	cld    
  415d05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d06:	out    dx,al
  415d07:	sbb    esp,DWORD PTR [esi+esi*1-0x63]
  415d0b:	and    al,0xc9
  415d0d:	xor    BYTE PTR [ebp-0xa],dh
  415d10:	jl     0x415cf5
  415d12:	nop
  415d13:	inc    edi
  415d14:	test   DWORD PTR [ecx+0x26e09b4b],0x1003e1aa
  415d1e:	push   es
  415d1f:	add    bl,BYTE PTR [eax+0x6130dcd0]
  415d25:	fstp   QWORD PTR [eiz*8+0x40f6f00c]
  415d2c:	push   0x53
  415d2e:	mov    dl,BYTE PTR [ecx]
  415d30:	imul   ebx,edx,0xd42a2866
  415d36:	xchg   ebx,eax
  415d37:	rdmsr  
  415d39:	jae    0x415cc5
  415d3b:	int    0xa6
  415d3d:	int    0x4a
  415d3f:	retf   
  415d40:	cs daa 
  415d42:	sahf   
  415d43:	call   0x6d4b:0xad17a416
  415d4a:	xchg   edi,eax
  415d4b:	sbb    dh,BYTE PTR [esp+ebp*4-0x3b0367d1]
  415d52:	adc    BYTE PTR [ebx-0x70],ah
  415d55:	data16 into 
  415d57:	xor    eax,0x677cbc35
  415d5c:	sub    BYTE PTR [edi-0xe48dd2],bh
  415d62:	xchg   esi,eax
  415d63:	add    al,0xe0
  415d65:	fisttp QWORD PTR [ecx+ebp*4]
  415d68:	out    dx,al
  415d69:	loopne 0x415da3
  415d6b:	adc    DWORD PTR [eax+esi*8],edi
  415d6e:	ins    DWORD PTR es:[edi],dx
  415d6f:	bound  edx,QWORD PTR [eax+0x75e56d6c]
  415d75:	in     al,0x5
  415d77:	les    edx,FWORD PTR [ebx-0x10a73b82]
  415d7d:	pop    ebp
  415d7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d7f:	or     esp,DWORD PTR [edi+0x2522035f]
  415d85:	inc    edi
  415d86:	aas    
  415d87:	ret    0x58c2
  415d8a:	cmp    eax,0x34480f99
  415d8f:	(bad)  
  415d90:	fnstsw WORD PTR [ebx+eax*2+0x6f]
  415d94:	adc    al,BYTE PTR [edx+0x6f]
  415d97:	xchg   DWORD PTR [ecx],ebx
  415d99:	add    al,0x21
  415d9b:	loopne 0x415d40
  415d9d:	fsubr  st,st(7)
  415d9f:	fs sbb esi,ebp
  415da2:	shl    DWORD PTR [esi],0x94
  415da5:	shl    ebx,1
  415da7:	push   ecx
  415da8:	mov    edx,0xdd538b2a
  415dad:	in     eax,dx
  415dae:	jnp    0x415d3d
  415db0:	mov    ah,0xb9
  415db2:	lds    edi,FWORD PTR [ebp+0x4b]
  415db5:	push   ebp
  415db6:	sub    al,0xfc
  415db8:	outs   dx,DWORD PTR ds:[esi]
  415db9:	dec    edi
  415dba:	and    DWORD PTR [edx+ebx*8+0x47e12e4e],ebp
  415dc1:	or     ecx,edi
  415dc3:	dec    ebp
  415dc4:	lods   al,BYTE PTR ds:[esi]
  415dc5:	cmp    eax,0x4b06264e
  415dca:	dec    ebp
  415dcb:	mov    cl,0xd7
  415dcd:	sbb    edi,ecx
  415dcf:	out    0x2,eax
  415dd1:	add    al,0xcc
  415dd3:	out    dx,eax
  415dd4:	test   eax,0xcf2f80e1
  415dd9:	popf   
  415dda:	int    0x98
  415ddc:	clc    
  415ddd:	add    eax,0x668cd2e9
  415de2:	dec    ebx
  415de3:	and    al,BYTE PTR [eax]
  415de5:	pop    ebx
  415de6:	inc    edx
  415de7:	retf   0x1a59
  415dea:	loopne 0x415dcb
  415dec:	enter  0x3633,0x14
  415df0:	xor    BYTE PTR ds:0xcb01d3aa,ch
  415df6:	inc    esi
  415df7:	sbb    DWORD PTR [edx-0x29],ebp
  415dfa:	ss stos BYTE PTR es:[edi],al
  415dfc:	adc    al,0xd4
  415dfe:	xchg   DWORD PTR [esp+edi*4+0x7f55b014],ebx
  415e05:	pushf  
  415e06:	mov    dh,0x0
  415e08:	mov    ecx,0x202f7104
  415e0d:	ins    DWORD PTR es:[edi],dx
  415e0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e0f:	jg     0x415dae
  415e11:	cmp    eax,edi
  415e13:	mov    dh,0x79
  415e15:	or     eax,0x6c5c179b
  415e1a:	repnz mov ebp,0x8470e271
  415e20:	sub    BYTE PTR [esi+0x4a12fb8b],ah
  415e26:	scas   eax,DWORD PTR es:[edi]
  415e27:	cmp    edi,0xffffffd6
  415e2a:	jnp    0x415e3f
  415e2c:	outs   dx,BYTE PTR ds:[esi]
  415e2d:	dec    esi
  415e2e:	cmp    al,0x3c
  415e30:	fldcw  WORD PTR [ebx+0x1cad7415]
  415e36:	inc    eax
  415e37:	add    eax,0xad7407db
  415e3c:	mov    eax,0x1073253e
  415e41:	sub    dh,bl
  415e43:	call   DWORD PTR [edx+ebx*2]
  415e46:	inc    esi
  415e47:	lea    eax,[eax-0x3481b019]
  415e4d:	(bad)  
  415e4e:	pxor   mm5,QWORD PTR [edx]
  415e51:	loop   0x415eaf
  415e53:	push   esi
  415e54:	mov    eax,ds:0x3fd5b953
  415e59:	arpl   WORD PTR [edi+ebp*8+0x3cb37892],ax
  415e60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e61:	inc    eax
  415e62:	jns    0x415e83
  415e64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e65:	mov    ds:0x9f6454cb,al
  415e6a:	fdivr  st(7),st
  415e6c:	push   edx
  415e6d:	mov    edx,DWORD PTR [ecx+0x7bb1f17]
  415e73:	push   0x37e4374
  415e78:	fmul   DWORD PTR [ebx-0x11]
  415e7b:	mov    eax,ds:0xde69dfc9
  415e80:	and    al,BYTE PTR [edx]
  415e82:	cmc    
  415e83:	bound  esi,QWORD PTR [ebx+edi*8+0x1c]
  415e87:	out    dx,al
  415e88:	imul   esi,esp,0xffffff8f
  415e8b:	stos   BYTE PTR es:[edi],al
  415e8c:	sbb    al,0x50
  415e8e:	pop    edx
  415e8f:	lahf   
  415e90:	test   BYTE PTR [edi+0x618568bb],dh
  415e96:	jb     0x415e19
  415e98:	dec    esi
  415e99:	dec    esp
  415e9a:	mov    bl,BYTE PTR [eax]
  415e9c:	lahf   
  415e9d:	ja     0x415e84
  415e9f:	mov    ebp,eax
  415ea1:	fwait
  415ea2:	in     eax,dx
  415ea3:	jmp    0xbe75:0x6b1c157b
  415eaa:	jns    0x415f29
  415eac:	setl   dl
  415eaf:	je     0x415e41
  415eb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415eb2:	clc    
  415eb3:	dec    edi
  415eb4:	imul   esi,DWORD PTR [esi-0x34],0x66
  415eb8:	pop    edi
  415eba:	sbb    BYTE PTR [ebp+0x20],ch
  415ebd:	arpl   WORD PTR [edx+0x4c3dbcf8],si
  415ec3:	xchg   ebp,eax
  415ec4:	adc    BYTE PTR [bp+si+0x816],ah
  415ec9:	cdq    
  415eca:	fwait
  415ecb:	out    dx,al
  415ecc:	pop    edx
  415ecd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ece:	clc    
  415ecf:	cli    
  415ed0:	iret   
  415ed1:	cwde   
  415ed2:	call   0xc6c98b88
  415ed7:	adc    BYTE PTR [ecx],ch
  415ed9:	pushf  
  415eda:	jae    0x415e7e
  415edc:	loop   0x415ee7
  415ede:	test   edi,eax
  415ee0:	pop    eax
  415ee1:	retf   
  415ee2:	add    al,0xb0
  415ee4:	(bad)  
  415ee5:	lahf   
  415ee6:	sbb    DWORD PTR [ebp-0x19258bca],0x3e
  415eed:	call   0x5d3c43d1
  415ef2:	xlat   BYTE PTR ds:[ebx]
  415ef3:	iret   
  415ef4:	jmp    0xff41fa42
  415ef9:	cmp    si,di
  415efc:	call   0x1115496a
  415f01:	xor    al,0xf3
  415f03:	sub    BYTE PTR [eax-0x80],al
  415f06:	dec    ecx
  415f07:	mov    cl,BYTE PTR [edx]
  415f09:	xor    al,0x8c
  415f0b:	adc    esp,DWORD PTR [edx+ecx*8]
  415f0e:	fisttp WORD PTR [ecx-0x5a]
  415f11:	xchg   ebx,eax
  415f12:	xchg   edx,eax
  415f13:	xlat   BYTE PTR ds:[ebx]
  415f14:	fnstsw WORD PTR [esi+edx*8+0x55aceb96]
  415f1b:	dec    esp
  415f1c:	mov    dl,0x92
  415f1e:	iret   
  415f1f:	stc    
  415f20:	(bad)  
  415f21:	xor    ah,ch
  415f23:	jb     0x415f33
  415f25:	pusha  
  415f26:	das    
  415f27:	mov    edx,db4
  415f2a:	jns    0x415ed8
  415f2c:	ficom  WORD PTR [edi]
  415f2e:	jmp    0x8067:0x2602c12
  415f35:	mov    al,BYTE PTR [esi*2-0x18f86511]
  415f3c:	aam    0xf8
  415f3e:	leave  
  415f3f:	push   eax
  415f40:	push   edi
  415f41:	inc    edx
  415f42:	jmp    0x1c49:0xce2edac7
  415f49:	rol    DWORD PTR [esi-0x2e4b95ff],cl
  415f4f:	xlat   BYTE PTR ds:[ebx]
  415f50:	pop    edx
  415f51:	xchg   ecx,ecx
  415f53:	aam    0x7d
  415f55:	test   DWORD PTR [edi-0x35],esp
  415f58:	and    edi,DWORD PTR [edi-0x25b8171c]
  415f5e:	sub    eax,0x7c384727
  415f63:	adc    al,0xd8
  415f65:	dec    ebx
  415f66:	clc    
  415f67:	jge    0x415f0f
  415f69:	push   esi
  415f6a:	add    DWORD PTR [edi+0x52],esi
  415f6d:	push   ss
  415f6e:	mov    ecx,0xe9840c21
  415f73:	aam    0x61
  415f75:	xchg   edi,eax
  415f76:	pop    ss
  415f77:	sti    
  415f78:	adc    edi,edx
  415f7a:	stc    
  415f7b:	daa    
  415f7c:	int    0xf4
  415f7e:	cmc    
  415f7f:	hlt    
  415f80:	adc    DWORD PTR [esi],0xffffff83
  415f83:	adc    al,0x34
  415f85:	inc    esp
  415f86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f87:	push   edx
  415f88:	xor    DWORD PTR [eax],0x8dc43884
  415f8e:	mov    eax,0xba454486
  415f93:	pop    edx
  415f94:	jmp    DWORD PTR [eax]
  415f96:	scas   al,BYTE PTR es:[edi]
  415f97:	jno    0x415fd7
  415f99:	or     al,0x47
  415f9b:	and    ebp,ecx
  415f9d:	mov    esi,ecx
  415f9f:	paddq  mm1,QWORD PTR [esi-0x1b]
  415fa3:	fist   DWORD PTR [edi+ebp*1-0x28eeaa95]
  415faa:	jns    0x415f2d
  415fac:	(bad)  
  415fad:	cmp    DWORD PTR [esi],ebp
  415faf:	or     DWORD PTR [ebx-0x7b06f672],edi
  415fb5:	cld    
  415fb6:	dec    ecx
  415fb7:	jno    0x416023
  415fb9:	retf   
  415fba:	add    dh,BYTE PTR [edx+0xeb4c75c]
  415fc0:	cmc    
  415fc1:	cld    
  415fc2:	dec    edi
  415fc3:	and    al,0xc3
  415fc5:	push   es
  415fc6:	mov    eax,0xfd6c9f87
  415fcb:	cmc    
  415fcc:	call   0x343625da
  415fd1:	add    cl,bh
  415fd3:	into   
  415fd4:	xchg   DWORD PTR [ecx],esi
  415fd6:	jge    0x415fec
  415fd8:	mov    esp,0x4d717643
  415fdd:	popf   
  415fde:	mov    eax,DWORD PTR [esi+edi*4+0x79b60a92]
  415fe5:	lahf   
  415fe6:	add    al,BYTE PTR [ecx+0x9]
  415fe9:	push   ebx
  415fea:	lods   al,BYTE PTR ds:[esi]
  415feb:	mov    cl,ah
  415fed:	jg     0x415fe6
  415fef:	sub    ecx,DWORD PTR [edx]
  415ff1:	cs xchg ecx,eax
  415ff3:	scas   al,BYTE PTR es:[edi]
  415ff4:	in     eax,dx
  415ff5:	dec    ebx
  415ff6:	ror    DWORD PTR [eax+0x3649ff5c],0x32
  415ffd:	pop    ecx
  415ffe:	xor    DWORD PTR [ebx-0x855da8],esi
  416004:	sar    BYTE PTR [eax],1
  416006:	arpl   WORD PTR [ecx-0x2df97d6b],di
  41600c:	cmp    ah,BYTE PTR [esi-0x25]
  41600f:	bound  esp,QWORD PTR [ecx-0x6c]
  416012:	rcl    DWORD PTR [ebx+0x56],cl
  416015:	es push esp
  416017:	adc    al,0x94
  416019:	xchg   ecx,eax
  41601a:	jle    0x416076
  41601c:	jns    0x415fad
  41601e:	adc    DWORD PTR [esi*1-0x5a88e603],edi
  416025:	xlat   BYTE PTR ds:[ebx]
  416026:	add    cl,BYTE PTR [edi+esi*4+0x69995693]
  41602d:	add    ebp,DWORD PTR [ebx+0xc]
  416030:	fsubr  QWORD PTR [ebx-0x568e52b8]
  416036:	ins    DWORD PTR es:[edi],dx
  416037:	out    0x67,al
  416039:	pop    ebp
  41603a:	or     DWORD PTR [ebp-0x1a],0x34
  41603e:	mov    esi,0xc7509817
  416043:	inc    edi
  416044:	xor    al,0xdd
  416047:	cmc    
  416048:	jno    0x41609b
  41604a:	xchg   esp,eax
  41604b:	fimul  DWORD PTR [edx+0x6a4b5070]
  416051:	outs   dx,BYTE PTR ds:[esi]
  416052:	jbe    0x4160b4
  416054:	mov    esp,0xbe238dd8
  416059:	cmp    bl,BYTE PTR ds:0xcc1d5cf4
  41605f:	or     eax,0xc7c16861
  416064:	clc    
  416065:	fild   WORD PTR [ebx]
  416067:	fcmove st,st(7)
  416069:	out    dx,al
  41606a:	iret   
  41606b:	push   esp
  41606c:	call   0xfc9d9b3a
  416071:	popa   
  416072:	ins    BYTE PTR es:[edi],dx
  416073:	out    0x2a,al
  416075:	jmp    0x4160f5
  416077:	and    edx,DWORD PTR [edx-0x2de8138f]
  41607d:	aam    0xdb
  41607f:	ret    0x7c50
  416082:	jbe    0x4160cd
  416084:	mov    cl,0x3a
  416086:	and    BYTE PTR [ebp-0x17],0x3
  41608a:	push   esi
  41608b:	or     ecx,DWORD PTR [eax]
  41608d:	cmp    BYTE PTR [eax],dl
  41608f:	inc    esp
  416090:	jg     0x4160f2
  416092:	iret   
  416093:	cld    
  416094:	gs cs jno 0x4160c1
  416098:	cmp    dh,ah
  41609a:	jbe    0x41611a
  41609c:	inc    ebx
  41609d:	jnp    0x4160d6
  41609f:	mov    ds:0xc2d6baa,eax
  4160a4:	jae    0x4160b5
  4160a6:	jno    0x41610f
  4160a8:	sub    al,bl
  4160aa:	pop    edx
  4160ab:	push   esp
  4160ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160ad:	lock fwait
  4160af:	sub    DWORD PTR [ecx-0x4b],ecx
  4160b2:	jnp    0x416044
  4160b4:	xor    al,0xe8
  4160b6:	fist   DWORD PTR [eax]
  4160b8:	shr    DWORD PTR [eax-0x39],1
  4160bb:	ja     0x4160d8
  4160bd:	js     0x4160b8
  4160bf:	sar    DWORD PTR [edx+0x52a5a213],0x45
  4160c6:	pop    ebp
  4160c7:	mov    WORD PTR [ebx+0x11],cs
  4160ca:	pop    esp
  4160cb:	les    esp,FWORD PTR [ebx-0x2519e87b]
  4160d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160d2:	ins    BYTE PTR es:[edi],dx
  4160d3:	test   eax,0x34842a6e
  4160d8:	ror    DWORD PTR [esi],0x67
  4160db:	cmp    edx,DWORD PTR [ecx]
  4160dd:	cs (bad) 
  4160df:	(bad)  
  4160e0:	stc    
  4160e1:	ds pushf 
  4160e3:	mov    dh,0xad
  4160e5:	enter  0x8e1b,0x61
  4160e9:	adc    ecx,esi
  4160eb:	xor    al,0xe4
  4160ed:	push   ebp
  4160ee:	inc    ebp
  4160ef:	cmp    al,0xce
  4160f1:	xchg   esp,eax
  4160f2:	jl     0x41614d
  4160f4:	hlt    
  4160f5:	adc    DWORD PTR [edi],ebp
  4160f7:	fisttp QWORD PTR [edx]
  4160f9:	aas    
  4160fa:	jmp    0x2420:0x65367b2
  416101:	mov    esp,0xc5337a5e
  416106:	aam    0xe0
  416108:	in     eax,dx
  416109:	scas   eax,DWORD PTR es:[edi]
  41610a:	sub    DWORD PTR [esi],ebx
  41610c:	aad    0x19
  41610e:	out    dx,al
  41610f:	and    DWORD PTR [eax-0x1e97b9c0],esp
  416115:	inc    edx
  416116:	ret    
  416117:	mov    eax,ds:0xd47270d1
  41611c:	add    al,dl
  41611e:	jp     0x416161
  416120:	and    dl,BYTE PTR [edx+0x66]
  416123:	imul   eax,DWORD PTR [ebx-0x5b4b87c2]
  41612a:	mov    esi,es
  41612c:	aas    
  41612d:	mov    cl,0xc6
  41612f:	sub    al,0x5a
  416131:	call   0xa914:0xd7221ee
  416138:	es call 0x368:0x3e7b5ee5
  416140:	xchg   esp,eax
  416141:	push   esp
  416142:	(bad)  
  416143:	repz cmp eax,0xa673ae4e
  416149:	out    dx,eax
  41614a:	xlat   BYTE PTR ds:[ebx]
  41614b:	cld    
  41614c:	mov    ah,al
  41614e:	test   ah,ah
  416150:	pop    eax
  416151:	or     eax,0xf0eaf1fd
  416156:	jae    0x416187
  416158:	jnp    0x4161ac
  41615a:	adc    eax,0x604a5498
  41615f:	in     al,dx
  416160:	dec    ebx
  416161:	pop    ecx
  416162:	mov    al,ds:0x1f70563d
  416167:	test   esp,esi
  416169:	mov    ds:0x5a5f589c,eax
  41616e:	sub    al,0x3
  416170:	xor    eax,0xef2a56a2
  416175:	mov    ebx,0x69ce2deb
  41617a:	je     0x416106
  41617c:	test   al,0x9
  41617e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41617f:	loopne 0x4161ac
  416181:	sahf   
  416182:	mov    dl,0x70
  416184:	fwait
  416185:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416186:	stos   BYTE PTR es:[edi],al
  416187:	out    dx,eax
  416188:	cwde   
  416189:	es dec edx
  41618b:	and    ebp,esp
  41618d:	push   edx
  41618e:	cmc    
  41618f:	mov    ss,WORD PTR [eax+ecx*1]
  416192:	pop    ebx
  416193:	lock lea esp,[edx+0x3030c2b8]
  41619a:	sbb    eax,DWORD PTR [ecx+0x4c]
  41619d:	adc    dh,BYTE PTR [eax]
  41619f:	mov    al,0x51
  4161a1:	jmp    0x8c6e:0x8469
  4161a7:	retf   
  4161a8:	cld    
  4161a9:	xchg   edx,eax
  4161aa:	mov    edi,0xa05efdb3
  4161af:	test   DWORD PTR [ebx],0x97b4ddac
  4161b5:	aam    0x8a
  4161b7:	jnp    0x4161e5
  4161b9:	les    ebp,FWORD PTR [ecx-0x500795ea]
  4161bf:	inc    edi
  4161c0:	xchg   ebp,eax
  4161c1:	push   ds
  4161c2:	imul   edx,DWORD PTR [esi-0xb],0xd73143a3
  4161c9:	je     0x416198
  4161cb:	popf   
  4161cc:	popf   
  4161cd:	cli    
  4161ce:	adc    al,0xda
  4161d0:	call   0xb421:0x6b413565
  4161d7:	sti    
  4161d8:	cdq    
  4161d9:	pushf  
  4161da:	lock shr BYTE PTR [edi+0x42],0x2a
  4161df:	dec    esp
  4161e0:	imul   ecx,DWORD PTR [eax-0x5d],0x73
  4161e4:	push   ebp
  4161e5:	sub    BYTE PTR [ebx+0x1ccaa4c3],ch
  4161eb:	ror    bh,0x3e
  4161ee:	stc    
  4161ef:	push   eax
  4161f0:	les    ecx,FWORD PTR [esi-0x71]
  4161f3:	outs   dx,BYTE PTR ds:[esi]
  4161f4:	mov    eax,ds:0x1a5a25ae
  4161f9:	lods   al,BYTE PTR ds:[esi]
  4161fa:	out    dx,al
  4161fb:	or     DWORD PTR [esi+0x7b],edx
  4161fe:	cmp    bl,bl
  416200:	stc    
  416201:	mov    ds:0x4307b7a6,al
  416206:	push   edx
  416207:	mov    bh,0x61
  416209:	cmp    eax,0xb687ba14
  41620e:	jb     0x41624d
  416210:	stos   BYTE PTR es:[edi],al
  416211:	sar    BYTE PTR [esi-0x23fcc6f8],0xad
  416218:	frstor [ebx]
  41621a:	or     DWORD PTR [ebx],ebx
  41621c:	enter  0xf9fa,0x4f
  416220:	xor    BYTE PTR [ecx],dh
  416222:	cwde   
  416223:	std    
  416224:	adc    cl,cl
  416226:	pop    es
  416227:	xor    BYTE PTR [esi-0x2c],0xc2
  41622b:	jle    0x4161d1
  41622d:	mov    dh,0x8f
  41622f:	jbe    0x4161ed
  416231:	pop    ebp
  416232:	jge    0x41625e
  416234:	xchg   ebp,eax
  416235:	imul   ecx,DWORD PTR [ebx+0x266ba77b],0xcc610b86
  41623f:	jno    0x41626d
  416241:	mov    ecx,0xfc3d102c
  416246:	mov    edx,0x90860b21
  41624b:	ss mov al,0xf6
  41624e:	dec    edx
  41624f:	and    DWORD PTR [ecx],esi
  416251:	and    ebx,DWORD PTR [ebx-0x25]
  416254:	push   ds
  416255:	sbb    DWORD PTR [ebx+0x3fe652b8],0xffffffbd
  41625c:	xor    BYTE PTR [edi+eiz*1],cl
  41625f:	bound  ecx,QWORD PTR [ebp+0x7b7435d5]
  416265:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416266:	xchg   ebp,eax
  416267:	jno    0x416228
  416269:	int    0x7d
  41626b:	hlt    
  41626c:	jg     0x4162e1
  41626e:	pop    ss
  41626f:	es loope 0x4162ea
  416272:	sti    
  416273:	jmp    0x416243
  416275:	pop    ecx
  416276:	ja     0x4161f8
  416278:	js     0x4162c8
  41627a:	out    dx,al
  41627b:	xchg   al,al
  41627d:	aaa    
  41627e:	leave  
  41627f:	xchg   DWORD PTR [eax],esi
  416281:	scas   al,BYTE PTR es:[edi]
  416282:	and    cl,BYTE PTR [ecx+0x14]
  416285:	lods   al,BYTE PTR ds:[esi]
  416286:	addr16 pusha 
  416288:	repz dec esi
  41628a:	and    eax,0x3936cb9e
  41628f:	retf   
  416290:	jg     0x41623a
  416292:	stos   BYTE PTR es:[edi],al
  416293:	or     DWORD PTR [ebx-0x387ccdae],esi
  416299:	dec    ebx
  41629a:	in     al,0xc3
  41629c:	xchg   edx,eax
  41629d:	popf   
  41629e:	bound  ebp,QWORD PTR [esi-0x16]
  4162a1:	es sahf 
  4162a3:	sbb    ebx,esi
  4162a5:	xor    DWORD PTR [ebx],ecx
  4162a7:	aam    0xad
  4162a9:	shl    ebp,0x52
  4162ac:	div    bh
  4162ae:	jl     0x4162f6
  4162b0:	or     DWORD PTR [edi+0x22],esp
  4162b3:	add    bh,BYTE PTR [edi+ebp*2]
  4162b6:	outs   dx,DWORD PTR ds:[esi]
  4162b7:	popa   
  4162b8:	adc    al,0xe9
  4162ba:	int3   
  4162bb:	inc    ebp
  4162bc:	ins    BYTE PTR es:[edi],dx
  4162bd:	cmp    ebp,DWORD PTR ds:0xb2bbae80
  4162c3:	aad    0xc3
  4162c5:	xchg   esi,ebx
  4162c7:	pop    es
  4162c8:	hlt    
  4162c9:	(bad)  
  4162ca:	pop    edx
  4162cb:	dec    edi
  4162cc:	mov    al,0x60
  4162ce:	or     al,bh
  4162d0:	mov    bh,0x12
  4162d2:	xchg   DWORD PTR [ecx],esi
  4162d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162d5:	das    
  4162d6:	gs (bad) 
  4162d8:	mov    ch,0x66
  4162da:	xlat   BYTE PTR ds:[ebx]
  4162db:	add    BYTE PTR ds:0x89d712b3,dl
  4162e1:	gs jle 0x416267
  4162e4:	mov    BYTE PTR [ebx-0x11f95bbf],bl
  4162ea:	push   edi
  4162eb:	sub    ebp,DWORD PTR [ebx+0x59]
  4162ee:	jmp    0x416333
  4162f0:	pop    esi
  4162f1:	inc    esp
  4162f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162f3:	stos   DWORD PTR es:[edi],eax
  4162f4:	cmp    eax,0x2e13b371
  4162f9:	aaa    
  4162fa:	lahf   
  4162fb:	jns    0x4162ef
  4162fd:	sbb    al,0xbe
  4162ff:	fdivr  st,st(4)
  416301:	jecxz  0x416333
  416303:	xchg   esp,eax
  416304:	dec    ebx
  416305:	or     DWORD PTR [edi],esi
  416307:	inc    edi
  416308:	retf   0xdcdd
  41630b:	loopne 0x41635a
  41630d:	cmp    esi,ecx
  41630f:	ins    DWORD PTR es:[edi],dx
  416310:	cmp    eax,0xbf9e906
  416315:	cdq    
  416316:	dec    edx
  416317:	(bad)
  41631c:	pusha  
  41631d:	jnp    0x416304
  41631f:	mov    ecx,0xd1e1fc9f
  416324:	and    eax,edi
  416326:	and    al,0xb9
  416328:	lods   al,BYTE PTR ds:[esi]
  416329:	(bad)  
  41632a:	jl     0x416379
  41632c:	and    dh,BYTE PTR [edi-0x28]
  41632f:	inc    eax
  416330:	ins    BYTE PTR es:[edi],dx
  416331:	(bad)  
  416332:	hlt    
  416333:	das    
  416334:	out    0xb,eax
  416336:	out    0x48,eax
  416338:	sub    eax,eax
  41633a:	dec    edx
  41633b:	pusha  
  41633c:	sbb    edx,edx
  41633e:	ja     0x416384
  416340:	cmp    al,0x65
  416342:	mov    ah,0xe5
  416344:	mov    edi,0x9ab9c581
  416349:	push   esp
  41634a:	mov    edi,0xd88d87d8
  41634f:	adc    ch,bh
  416351:	iret   
  416352:	mov    ebp,0xf07ce473
  416357:	xchg   ebp,eax
  416358:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416359:	mov    ds:0x3ada0561,al
  41635e:	aaa    
  41635f:	lods   eax,DWORD PTR ds:[esi]
  416360:	cmc    
  416361:	push   ebx
  416362:	jp     0x416320
  416364:	cli    
  416365:	adc    ch,BYTE PTR [bx-0x67]
  416369:	add    al,0x10
  41636b:	adc    eax,DWORD PTR [edi]
  41636d:	inc    esi
  41636e:	sbb    al,0xdb
  416370:	mov    ebp,0xd444e1d2
  416375:	mov    cl,0x5
  416377:	fistp  QWORD PTR [ebx-0x14c40d81]
  41637d:	popf   
  41637e:	out    0x19,al
  416380:	pop    ss
  416381:	jp     0x416337
  416383:	jbe    0x41637e
  416385:	out    dx,eax
  416386:	adc    eax,DWORD PTR [eax]
  416388:	and    eax,0x5818e186
  41638d:	jg     0x416351
  41638f:	popa   
  416390:	add    al,0x34
  416392:	rol    BYTE PTR [eax+0x5d],cl
  416395:	or     bl,BYTE PTR [edx-0x6]
  416398:	dec    edx
  416399:	dec    edx
  41639a:	aam    0x6f
  41639c:	(bad)  
  41639d:	jno    0x416327
  41639f:	mov    ch,0xd1
  4163a1:	sub    BYTE PTR [ebp-0xfead569],bl
  4163a7:	rol    DWORD PTR [eax+0x72],cl
  4163aa:	imul   DWORD PTR [ecx-0x80]
  4163ad:	dec    esi
  4163ae:	and    al,0x98
  4163b0:	arpl   WORD PTR [edx+ecx*1+0x70441d4c],bx
  4163b7:	mov    bl,0x8c
  4163b9:	adc    BYTE PTR [esi+0x51],cl
  4163bc:	add    BYTE PTR [ecx],bh
  4163be:	mov    al,ds:0x150bdefa
  4163c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163c4:	les    edx,FWORD PTR [ebp+0x1d65a410]
  4163ca:	sub    esi,edx
  4163cc:	mov    ch,0x76
  4163ce:	cld    
  4163cf:	fs pop ds
  4163d1:	xor    eax,0xeac7d68b
  4163d6:	leave  
  4163d7:	cli    
  4163d8:	add    ecx,DWORD PTR [ecx-0x2ed557b6]
  4163de:	inc    ebx
  4163df:	in     al,0xa2
  4163e1:	lods   al,BYTE PTR ds:[esi]
  4163e2:	dec    edx
  4163e3:	cmp    BYTE PTR [ebx+0xe6c3263],al
  4163e9:	mov    ecx,0x77431572
  4163ee:	cmp    al,0x93
  4163f0:	ret    0xdcdb
  4163f3:	popf   
  4163f4:	adc    al,0x8d
  4163f6:	sbb    DWORD PTR [ebp+edx*4+0x43],edx
  4163fa:	pop    esi
  4163fb:	mov    cs,ebx
  4163fd:	popa   
  4163fe:	push   ebp
  4163ff:	int3   
  416400:	cmp    eax,0x7890a48a
  416405:	loopne 0x41642c
  416407:	lahf   
  416408:	xor    al,0xdf
  41640a:	and    al,0x65
  41640c:	mov    ah,0xc8
  41640e:	mov    WORD PTR [ebp+0x52db7152],?
  416414:	add    DWORD PTR [edi-0x45ed0675],esp
  41641a:	in     eax,0xd
  41641c:	cmp    DWORD PTR [edx],eax
  41641e:	loop   0x416444
  416420:	push   edi
  416421:	xor    eax,esi
  416423:	mov    ds:0x839afcee,al
  416428:	int    0x2d
  41642a:	in     al,0x29
  41642c:	sub    BYTE PTR [esi+0x621cdc40],dl
  416432:	(bad)  
  416433:	gs (bad) 
  416435:	pop    esi
  416436:	cmp    dl,bl
  416438:	popa   
  416439:	repz or bh,BYTE PTR [ebp-0x7b]
  41643d:	fild   QWORD PTR [eax]
  41643f:	push   esp
  416440:	push   ebx
  416441:	out    dx,al
  416442:	mov    ebx,0xdc5600e0
  416447:	push   esp
  416448:	loopne 0x4163e9
  41644a:	push   ds
  41644b:	mov    al,0xdc
  41644d:	rol    BYTE PTR [edx],cl
  41644f:	push   ebx
  416450:	dec    ecx
  416451:	jecxz  0x4164b9
  416453:	push   0xa7db3ed8
  416458:	cmp    eax,0x6f34f1df
  41645d:	setnp  bl
  416460:	shl    DWORD PTR [edi],1
  416462:	xor    BYTE PTR [ecx],ch
  416464:	dec    edx
  416465:	push   cs
  416466:	mov    cl,0xba
  416468:	xchg   ebp,eax
  416469:	xor    DWORD PTR [eax+0x4f8a2dae],0xf25b120
  416473:	pop    ebx
  416474:	nop
  416475:	adc    eax,0x24266768
  41647a:	xchg   BYTE PTR [ebx-0x3e],ch
  41647d:	ficom  DWORD PTR [ebp-0x4db0ad63]
  416483:	and    al,0x30
  416485:	mov    dl,0x3
  416487:	jecxz  0x416413
  416489:	call   0xb7c104d7
  41648e:	pop    esi
  41648f:	pop    esp
  416490:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416491:	js     0x416427
  416493:	and    eax,0xa83c83fd
  416498:	retf   0x6cf6
  41649b:	and    al,0xe1
  41649d:	mov    esp,0x6121dfa0
  4164a2:	fidiv  WORD PTR [ebp-0x6f]
  4164a5:	clc    
  4164a6:	imul   edx,eax,0xae8a51c4
  4164ac:	call   0x1802:0xf0fa749f
  4164b3:	in     al,dx
  4164b4:	cwde   
  4164b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164b6:	mov    ecx,0xcf52f0ea
  4164bb:	pop    esi
  4164bc:	dec    edi
  4164bd:	push   esi
  4164be:	inc    ebp
  4164bf:	ja     0x41648c
  4164c1:	mov    gs:0x710d4791,al
  4164c7:	inc    ecx
  4164c8:	xchg   esi,eax
  4164c9:	shl    esi,cl
  4164cb:	sub    bh,cl
  4164cd:	mov    esp,0x4598f924
  4164d2:	mov    edx,DWORD PTR [esi-0x11281e61]
  4164d8:	lahf   
  4164d9:	mov    dh,0x79
  4164db:	push   ss
  4164dc:	sbb    BYTE PTR [edx],dl
  4164de:	push   esi
  4164df:	add    al,0x7d
  4164e1:	std    
  4164e2:	jo     0x416492
  4164e4:	ret    0x7e83
  4164e7:	push   esp
  4164e8:	in     eax,0x5b
  4164ea:	push   edi
  4164eb:	leave  
  4164ec:	cmp    ch,BYTE PTR [edi]
  4164ee:	and    DWORD PTR [ebx+ebp*2-0x60],esi
  4164f2:	sysenter 
  4164f4:	push   ebx
  4164f5:	jo     0x416530
  4164f7:	and    edi,eax
  4164f9:	outs   dx,DWORD PTR ds:[esi]
  4164fa:	out    dx,al
  4164fb:	ins    DWORD PTR es:[edi],dx
  4164fc:	push   0xa4ab5a7b
  416501:	imul   ecx,DWORD PTR [edx+edx*2-0x72cc592d],0xffffffe4
  416509:	or     ch,BYTE PTR [esi]
  41650b:	inc    eax
  41650c:	pop    edi
  41650d:	push   ebx
  41650e:	jl     0x4164b0
  416510:	or     BYTE PTR [edx+edi*4-0x14a8f73d],cl
  416517:	xchg   BYTE PTR [ecx],bh
  416519:	fwait
  41651a:	push   edi
  41651b:	nop
  41651c:	call   0xdd7c:0x4a4fc91b
  416523:	pop    esp
  416524:	dec    esi
  416525:	popf   
  416526:	in     eax,0xd2
  416528:	hlt    
  416529:	fwait
  41652a:	retf   0xfe9f
  41652d:	push   eax
  41652e:	mov    bh,0x8d
  416530:	stos   DWORD PTR es:[edi],eax
  416531:	data16 fisubr WORD PTR [edi]
  416534:	push   edx
  416535:	aaa    
  416536:	cmp    eax,0x804f6a2d
  41653b:	jmp    0xc507:0x4793e1f6
  416542:	sti    
  416543:	out    0xc2,eax
  416545:	fdiv   DWORD PTR [ebp-0x51d0b39f]
  41654b:	iret   
  41654c:	test   ebp,esi
  41654e:	shr    BYTE PTR [edi+0x4aa1dbaf],1
  416554:	je     0x4164e9
  416556:	loope  0x416549
  416558:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416559:	xchg   ax,ax
  41655b:	and    DWORD PTR [edx+0x2c892494],ebp
  416561:	ins    DWORD PTR es:[edi],dx
  416562:	add    DWORD PTR [eax-0xc],ebp
  416565:	push   es
  416566:	mov    esp,0x7a2017b
  41656b:	fild   DWORD PTR gs:[ecx-0x14c53dae]
  416572:	sbb    dl,BYTE PTR [ebx]
  416574:	push   ebx
  416575:	pop    esi
  416576:	shl    DWORD PTR ds:0x13fa79f,1
  41657c:	inc    ecx
  41657d:	stos   BYTE PTR es:[edi],al
  41657e:	mov    dl,0xf1
  416580:	add    edx,DWORD PTR [esi+0x52428626]
  416586:	in     eax,0xd6
  416588:	outs   dx,DWORD PTR ds:[esi]
  416589:	add    al,0xd
  41658b:	in     eax,0x94
  41658d:	and    DWORD PTR [edx-0x71aa4091],edi
  416593:	xchg   esp,eax
  416594:	fmul   st,st(2)
  416596:	out    0xcb,eax
  416598:	xchg   edx,eax
  416599:	mov    dh,0x33
  41659b:	gs mov edi,0x7204889d
  4165a1:	xor    esp,DWORD PTR ds:0xefc4508b
  4165a7:	and    eax,0xd2916ea6
  4165ac:	data16 sub bh,BYTE PTR [eax]
  4165af:	dec    ecx
  4165b0:	loopne 0x416575
  4165b2:	pop    ecx
  4165b3:	std    
  4165b4:	mov    ecx,0x7d7cdf1e
  4165b9:	(bad)  
  4165bb:	cmp    eax,0xe47336ad
  4165c0:	push   cs
  4165c1:	stc    
  4165c2:	adc    bh,BYTE PTR [edi+ebp*8]
  4165c5:	nop
  4165c6:	mov    ds:0x94a47b8a,al
  4165cb:	xchg   esp,eax
  4165cc:	inc    esi
  4165cd:	dec    esp
  4165ce:	pop    edx
  4165cf:	lds    esp,FWORD PTR [eax]
  4165d1:	cmp    al,0x94
  4165d3:	clc    
  4165d4:	xor    BYTE PTR [ecx],0x73
  4165d7:	jle    0x416586
  4165d9:	sbb    eax,0x3b8a5ab1
  4165de:	jno    0x4165e7
  4165e0:	in     al,dx
  4165e1:	pop    esp
  4165e2:	push   edi
  4165e3:	repnz aam 0xfe
  4165e6:	and    BYTE PTR [eax],bh
  4165e8:	arpl   WORD PTR [ebx],cx
  4165ea:	dec    eax
  4165eb:	shr    BYTE PTR [ebx+0x35e42d29],cl
  4165f1:	in     eax,0xef
  4165f3:	nop
  4165f4:	inc    eax
  4165f5:	add    ah,BYTE PTR [ecx-0x33]
  4165f8:	dec    ecx
  4165f9:	pop    ebp
  4165fa:	lods   al,BYTE PTR ds:[esi]
  4165fb:	dec    ecx
  4165fc:	hlt    
  4165fd:	mov    ds:0xe7fb3884,al
  416602:	retf   0x4436
  416605:	daa    
  416606:	mov    ah,0x70
  416608:	cpuid  
  41660a:	call   0xbd9fbf93
  41660f:	push   es
  416610:	aaa    
  416611:	push   ebx
  416612:	inc    eax
  416613:	fsubr  DWORD PTR [edx+0xe]
  416616:	cs out 0x9c,eax
  416619:	(bad)  
  41661a:	(bad)  
  41661b:	lods   eax,DWORD PTR ds:[esi]
  41661c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41661d:	in     eax,0xa0
  41661f:	xchg   esp,eax
  416620:	pop    esi
  416621:	stc    
  416622:	in     eax,dx
  416623:	pop    ds
  416624:	mov    eax,ds:0xeb12e42
  416629:	cmp    al,0x73
  41662b:	loop   0x416629
  41662d:	jmp    FWORD PTR [eax+0x2e7525a8]
  416633:	aad    0x79
  416635:	rcr    al,cl
  416637:	cld    
  416638:	cli    
  416639:	inc    ecx
  41663a:	cs or  ecx,ecx
  41663d:	xor    edi,DWORD PTR gs:[ecx]
  416640:	(bad)  
  416641:	cmp    BYTE PTR [esi],dl
  416643:	xchg   BYTE PTR [eax-0x1dfb6c32],bl
  416649:	outs   dx,BYTE PTR ds:[esi]
  41664a:	test   ecx,eax
  41664c:	inc    ebp
  41664d:	fs arpl si,dx
  416650:	mov    al,0x8c
  416652:	xchg   edi,eax
  416653:	or     BYTE PTR [ebx],bh
  416655:	aad    0x71
  416657:	sti    
  416658:	les    ecx,FWORD PTR [ecx-0x3885b550]
  41665e:	mov    ebp,0xa53d8d8
  416663:	cmc    
  416664:	xchg   edi,eax
  416665:	push   0xa97fd292
  41666a:	sub    al,0xcd
  41666c:	int    0xc5
  41666e:	in     al,0x3
  416670:	scas   eax,DWORD PTR es:[edi]
  416671:	push   ds
  416672:	xor    BYTE PTR gs:[ebp-0x6ae1ebfb],dl
  416679:	cmc    
  41667a:	(bad)  
  41667b:	scas   eax,DWORD PTR es:[edi]
  41667c:	call   FWORD PTR [esi]
  41667e:	cmp    al,0xfc
  416680:	mov    WORD PTR [edi+ebp*8],?
  416683:	mov    DWORD PTR [ecx],edx
  416685:	int3   
  416686:	jbe    0x4166c7
  416688:	(bad)  
  416689:	cmp    DWORD PTR [esi],ecx
  41668b:	jae    0x416667
  41668d:	mov    WORD PTR [edi+0x26e0ba92],cs
  416693:	pop    esi
  416694:	mov    esi,DWORD PTR [edx+0x6c]
  416697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416698:	(bad)  
  416699:	mov    esi,0x5fec9549
  41669e:	retf   
  41669f:	arpl   bx,dx
  4166a1:	push   es
  4166a2:	add    eax,0x8b13bec
  4166a7:	mov    ebp,0x75343be0
  4166ac:	sbb    al,0x24
  4166ae:	test   al,0x81
  4166b0:	pop    ebx
  4166b1:	stos   BYTE PTR es:[edi],al
  4166b2:	into   
  4166b3:	jge    0x41669e
  4166b5:	mov    esi,0x242db747
  4166ba:	dec    ecx
  4166bb:	fdivr  st,st(2)
  4166bd:	ins    BYTE PTR es:[edi],dx
  4166be:	mov    ecx,DWORD PTR [esi]
  4166c0:	push   ss
  4166c1:	in     eax,dx
  4166c2:	(bad)  
  4166c3:	mov    esp,0xbd9ba13a
  4166c8:	push   ds
  4166c9:	cli    
  4166ca:	mov    esp,0xc1261048
  4166cf:	xor    esi,DWORD PTR [esi]
  4166d1:	or     al,0x58
  4166d3:	mov    edi,0x396edcce
  4166d8:	(bad)  
  4166da:	cmp    BYTE PTR [ebx],bl
  4166dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166dd:	cmp    esp,ebx
  4166df:	test   eax,0xfb6b0c89
  4166e4:	(bad)  
  4166e5:	ja     0x41669c
  4166e7:	leave  
  4166e8:	pop    ds
  4166e9:	jne    0x4166c5
  4166eb:	add    eax,DWORD PTR [esi+0x7661afaa]
  4166f1:	(bad)  
  4166f2:	iret   
  4166f3:	mov    ch,0x64
  4166f5:	scas   eax,DWORD PTR es:[edi]
  4166f6:	inc    ebx
  4166f7:	lods   al,BYTE PTR ds:[esi]
  4166f8:	stc    
  4166f9:	mov    esi,0xb568c622
  4166fe:	push   ebx
  4166ff:	lea    edi,[ecx+0x657fadb0]
  416705:	push   ds
  416706:	mov    ah,0x9a
  416708:	xor    eax,0x9b1357b1
  41670d:	inc    edx
  41670e:	loop   0x4166de
  416710:	jmp    0x7289d76f
  416715:	sbb    DWORD PTR [eax],ebx
  416717:	cmp    esp,DWORD PTR [ebp+0xc]
  41671a:	das    
  41671b:	fsubr  QWORD PTR [edi]
  41671d:	retf   
  41671e:	pop    esi
  41671f:	rcl    ecx,cl
  416721:	in     al,dx
  416722:	out    dx,eax
  416723:	jne    0x41678c
  416725:	fsub   DWORD PTR [esi]
  416727:	repnz mov ebp,0x40828760
  41672d:	ins    DWORD PTR es:[edi],dx
  41672e:	ins    BYTE PTR es:[edi],dx
  41672f:	inc    edx
  416730:	not    BYTE PTR [edx+0x1]
  416733:	(bad)  
  416734:	push   esp
  416735:	sub    al,0x9f
  416737:	xor    DWORD PTR [esi+0x6a],ebp
  41673a:	jge    0x416788
  41673c:	push   ebp
  41673d:	outs   dx,DWORD PTR ds:[esi]
  41673e:	push   ds
  41673f:	ins    BYTE PTR es:[edi],dx
  416740:	fstp   TBYTE PTR [ecx-0x5b]
  416743:	rcl    edi,0xbe
  416746:	bound  ebx,QWORD PTR [ecx+0x41]
  416749:	in     eax,0xfd
  41674b:	cwde   
  41674c:	ret    0xba0d
  41674f:	adc    ecx,DWORD PTR ds:0xc710cee9
  416755:	xor    bl,BYTE PTR [edi-0xa3d246b]
  41675b:	adc    DWORD PTR [eax-0x36],esi
  41675e:	in     al,0x2f
  416760:	arpl   WORD PTR [eax+0x6504bdcf],dx
  416766:	sbb    bh,BYTE PTR [esi]
  416768:	or     esi,esp
  41676a:	in     eax,dx
  41676b:	and    edx,DWORD PTR [esi-0x9]
  41676e:	rcr    BYTE PTR [edi],cl
  416770:	imul   esp,DWORD PTR fs:[ecx],0x809cbf11
  416777:	lock push ebp
  416779:	ror    DWORD PTR [esi-0x71],0x8e
  41677d:	fimul  WORD PTR [ecx]
  41677f:	xor    ah,BYTE PTR [edx]
  416781:	iret   
  416782:	lock push 0x64c0383d
  416788:	sub    DWORD PTR [ecx+0x3f],edi
  41678b:	adc    ebx,edi
  41678d:	push   edi
  41678e:	jae    0x4167b6
  416790:	or     ah,BYTE PTR [esi]
  416792:	out    dx,al
  416793:	das    
  416794:	adc    al,0x99
  416796:	xor    edi,DWORD PTR [ecx+0x74]
  416799:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41679a:	(bad)
  41679d:	mov    edi,ebp
  41679f:	mov    cl,BYTE PTR [ebp-0x42223ebd]
  4167a5:	sub    esp,DWORD PTR [ebp-0x78]
  4167a8:	pop    esi
  4167a9:	data16 jge 0x41681f
  4167ac:	repnz xor edx,DWORD PTR [ebx+0x43469352]
  4167b3:	dec    ebp
  4167b4:	sbb    ebx,edi
  4167b6:	push   edx
  4167b7:	pop    edi
  4167b8:	hlt    
  4167b9:	jle    0x41679b
  4167bb:	call   0xde663824
  4167c0:	dec    eax
  4167c1:	adc    edi,DWORD PTR [ebx+0x1f]
  4167c4:	neg    BYTE PTR [edi+0x3d]
  4167c7:	xor    DWORD PTR [esp+0x5],ebx
  4167cb:	imul   esi,ebp,0x35
  4167ce:	xchg   BYTE PTR [esi],bh
  4167d0:	xor    ecx,DWORD PTR [edi-0x4d]
  4167d3:	popa   
  4167d4:	cs mov esi,0x9c85badb
  4167da:	lods   eax,DWORD PTR ds:[esi]
  4167db:	pop    edi
  4167dc:	sub    DWORD PTR ds:0x3f2c2a8,ebx
  4167e2:	out    dx,eax
  4167e3:	data16 adc BYTE PTR [ebx+ecx*2-0x43],0x9d
  4167e9:	adc    ch,bh
  4167eb:	stos   DWORD PTR es:[edi],eax
  4167ec:	aas    
  4167ed:	dec    esp
  4167ee:	rol    al,0xc2
  4167f1:	sbb    al,0x4b
  4167f3:	mov    ds:0x92b0fa61,al
  4167f8:	icebp  
  4167f9:	xchg   edx,eax
  4167fa:	xor    esp,ebx
  4167fc:	cmp    esi,DWORD PTR [ebx]
  4167fe:	call   0x2635:0x30d29a38
  416805:	and    cl,BYTE PTR [ebp+0x62e0fb38]
  41680b:	push   esi
  41680c:	pop    edi
  41680d:	dec    edx
  41680e:	push   ss
  41680f:	push   esi
  416810:	xor    cl,BYTE PTR [ebp+0x2eddf6e2]
  416816:	adc    eax,0x28cf26ac
  41681b:	jp     0x416864
  41681d:	cmc    
  41681e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41681f:	lea    ebx,[ebx-0x13]
  416822:	test   eax,0xbd92e3a3
  416827:	imul   edx,DWORD PTR [edi-0x5561e0a7],0xf40b1d82
  416831:	push   ss
  416832:	pop    ecx
  416833:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416834:	rcl    bh,1
  416836:	fnstsw WORD PTR [edi+0x74]
  416839:	or     DWORD PTR [edi-0x1390bedd],0x29
  416840:	mov    eax,0x7887da22
  416845:	pop    edi
  416846:	xchg   esp,eax
  416847:	cs cmp al,0xd1
  41684a:	aam    0x28
  41684c:	cmp    ebp,DWORD PTR [edx-0x3897c5bb]
  416852:	push   cs
  416853:	mov    edx,0xf511d1b1
  416858:	cld    
  416859:	pop    es
  41685a:	mov    ecx,0x327a641
  41685f:	push   ecx
  416860:	(bad)  
  416861:	mov    edx,DWORD PTR [edi+0x3f113326]
  416867:	fwait
  416868:	mov    dh,0xce
  41686a:	ss ins BYTE PTR es:[edi],dx
  41686c:	lea    ebp,[eax]
  41686e:	cwde   
  41686f:	jbe    0x416826
  416871:	or     BYTE PTR [ecx+0x535a4ce4],al
  416877:	and    al,0x16
  416879:	ret    0xd286
  41687c:	xchg   esp,eax
  41687d:	fxtract 
  41687f:	jp     0x416858
  416881:	mov    esp,0x4b7e8ab9
  416886:	pop    ds
  416887:	scas   al,BYTE PTR es:[edi]
  416888:	push   ebx
  416889:	pop    ecx
  41688a:	cmp    bl,BYTE PTR ds:0xe69aa83f
  416890:	shl    DWORD PTR [eax],0x67
  416893:	aad    0xe
  416895:	and    edx,edx
  416897:	or     eax,esp
  416899:	sbb    DWORD PTR [eax-0x1f],esi
  41689c:	adc    BYTE PTR [ecx-0x28f1747d],ah
  4168a2:	shl    DWORD PTR [esi],1
  4168a4:	inc    ebx
  4168a5:	mov    ah,0x2e
  4168a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168a8:	pop    eax
  4168a9:	mov    edi,0xe6b041bb
  4168ae:	xchg   ebp,eax
  4168af:	pop    esi
  4168b0:	lods   eax,DWORD PTR ds:[esi]
  4168b1:	ficom  WORD PTR [esi+0x7a0299c0]
  4168b7:	mov    edi,0xa221fbd
  4168bc:	pushf  
  4168bd:	(bad)  
  4168be:	fcomp  DWORD PTR [eax+edi*4-0x18fe8245]
  4168c5:	dec    ecx
  4168c6:	cmp    ebp,esi
  4168c8:	es sahf 
  4168ca:	scas   al,BYTE PTR es:[edi]
  4168cb:	repz hlt 
  4168cd:	jmp    0x41692a
  4168cf:	div    DWORD PTR [ecx-0x3]
  4168d2:	lahf   
  4168d3:	pop    ebx
  4168d4:	daa    
  4168d5:	xor    DWORD PTR [eax-0x3d],edx
  4168d8:	jmp    0xb6e2f9ae
  4168dd:	pop    eax
  4168de:	push   es
  4168df:	dec    esi
  4168e0:	shr    DWORD PTR [esi+0x56488b6],1
  4168e6:	stos   DWORD PTR es:[edi],eax
  4168e7:	xor    dl,cl
  4168e9:	cmp    bh,0x3b
  4168ec:	and    edx,DWORD PTR [ebx]
  4168ee:	xor    eax,DWORD PTR ds:0x99663de9
  4168f4:	mov    ds:0xcc420013,eax
  4168f9:	xor    BYTE PTR [esi],dl
  4168fb:	sar    ch,cl
  4168fd:	push   ss
  4168fe:	outs   dx,DWORD PTR ds:[esi]
  4168ff:	test   ecx,esp
  416901:	cmp    ah,BYTE PTR ds:0xdfc1b81d
  416907:	sub    ch,BYTE PTR [edi]
  416909:	mov    edi,0xeb65bbb4
  41690e:	jno    0x416972
  416910:	jnp    0x41697b
  416912:	cmp    edi,edx
  416914:	sbb    ebx,DWORD PTR [edx]
  416916:	cmp    BYTE PTR [ecx-0x64],bl
  416919:	pop    ebx
  41691a:	adc    al,0xac
  41691c:	cdq    
  41691d:	adc    eax,0x1235bf30
  416922:	xor    DWORD PTR [esi-0x66db69f],ebp
  416928:	(bad)  
  416929:	xchg   esi,eax
  41692a:	jno    0x416992
  41692c:	mov    cl,0xd3
  41692e:	pushf  
  41692f:	jne    0x41694f
  416931:	dec    esi
  416932:	pop    esi
  416933:	dec    edi
  416934:	call   0xd97a9a8e
  416939:	pop    ebx
  41693a:	jb     0x4168d2
  41693c:	rol    DWORD PTR [edi-0x3399a6f7],0xb
  416943:	jae    0x4168ff
  416945:	mov    al,0xb0
  416947:	add    al,0x5c
  416949:	push   edi
  41694a:	mov    al,ds:0xfe0b8ec6
  41694f:	cmp    ah,cl
  416951:	lods   eax,DWORD PTR ds:[esi]
  416952:	xchg   ecx,eax
  416953:	xor    eax,0x48c55904
  416958:	fdiv   st(0),st
  41695a:	pop    es
  41695b:	or     eax,0xac438f80
  416960:	xlat   BYTE PTR ds:[ebx]
  416961:	cwde   
  416962:	xchg   edi,eax
  416963:	jne    0x4169df
  416965:	call   0x36fa:0xdb7f3e6c
  41696c:	mov    dl,0x7
  41696e:	(bad)  
  41696f:	jmp    0x41698d
  416971:	call   0x491395ef
  416976:	sbb    ebx,DWORD PTR [esi]
  416978:	(bad)  
  416979:	jl     0x4169b8
  41697b:	pop    ebx
  41697c:	lods   eax,DWORD PTR ds:[esi]
  41697d:	adc    DWORD PTR [edx-0x55],ecx
  416980:	adc    BYTE PTR [ebp-0x7a26a1c0],cl
  416986:	sahf   
  416987:	neg    dh
  416989:	lods   eax,DWORD PTR ds:[esi]
  41698a:	sar    DWORD PTR [ecx+edi*8-0x5b],0x47
  41698f:	pop    edi
  416990:	xchg   ecx,eax
  416991:	div    BYTE PTR [esi]
  416993:	fstp   TBYTE PTR [eax-0xd]
  416996:	xor    edi,edx
  416998:	cmp    edi,DWORD PTR [eax]
  41699a:	mov    edx,0x10cb2a66
  41699f:	jle    0x416990
  4169a1:	fdiv   st(1),st
  4169a3:	bound  esi,QWORD PTR [ecx-0x1b]
  4169a6:	jmp    0xda5b:0x75d6fb21
  4169ad:	adc    DWORD PTR [esi],ecx
  4169af:	mov    cl,0x23
  4169b1:	dec    esp
  4169b2:	pop    edx
  4169b3:	sbb    dh,BYTE PTR [esi]
  4169b5:	sbb    cl,cl
  4169b7:	sbb    al,0xe0
  4169b9:	dec    edi
  4169ba:	test   BYTE PTR [edi+0x6296d726],cl
  4169c0:	aas    
  4169c1:	jl     0x4169dc
  4169c3:	sbb    bl,BYTE PTR [ebx-0x77]
  4169c6:	lods   eax,DWORD PTR ds:[esi]
  4169c7:	ss mov ah,0xba
  4169ca:	daa    
  4169cb:	mov    ?,WORD PTR [ebx]
  4169cd:	xor    BYTE PTR [esi+0xb],bh
  4169d0:	aas    
  4169d1:	test   BYTE PTR [ebp+0x189a9fa0],bh
  4169d7:	icebp  
  4169d8:	xor    ah,al
  4169da:	repz xchg edi,eax
  4169dc:	pop    ebx
  4169dd:	ficomp DWORD PTR [ebx-0x7f96170d]
  4169e3:	adc    eax,0x6bdb1aee
  4169e8:	dec    ebp
  4169e9:	sub    esp,DWORD PTR [ecx-0x3f]
  4169ec:	xor    WORD PTR [ebp-0x4380d101],0xd51a
  4169f5:	pop    edx
  4169f6:	mov    esp,0x48bfedb9
  4169fb:	xor    BYTE PTR [edx-0x4b],bl
  4169fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169ff:	(bad)  
  416a00:	out    0x97,al
  416a02:	push   edi
  416a03:	rol    DWORD PTR [eax],1
  416a05:	xor    DWORD PTR [edx+0x7e6a9cca],0x62bb1873
  416a0f:	stos   DWORD PTR es:[edi],eax
  416a10:	js     0x4169b6
  416a12:	out    dx,al
  416a13:	int    0xac
  416a15:	dec    ebp
  416a16:	sar    BYTE PTR [esi-0x78],1
  416a19:	(bad)  
  416a1a:	aaa    
  416a1b:	stos   BYTE PTR es:[edi],al
  416a1c:	out    dx,al
  416a1d:	xchg   dh,bh
  416a1f:	int    0x2
  416a21:	int3   
  416a22:	dec    ebx
  416a23:	pusha  
  416a24:	sahf   
  416a25:	call   0xdc661fe0
  416a2a:	add    ah,al
  416a2c:	jbe    0x416a89
  416a2e:	(bad)  
  416a2f:	retf   0xf84e
  416a32:	lock gs jp 0x416a05
  416a36:	loopne 0x416a2e
  416a38:	add    dh,0x44
  416a3b:	mov    ch,0x2f
  416a3d:	pop    esi
  416a3e:	aad    0xad
  416a40:	sbb    BYTE PTR [ebp-0x73],bl
  416a43:	ret    0xc1f4
  416a46:	popa   
  416a47:	mov    ebx,0xef3b1a70
  416a4c:	in     al,dx
  416a4d:	inc    esi
  416a4e:	xchg   esp,eax
  416a4f:	loopne 0x416ab6
  416a51:	add    eax,0x7df4883b
  416a56:	sub    bh,al
  416a58:	cmp    BYTE PTR [ebp+0x4e],dl
  416a5b:	gs leave 
  416a5d:	repz xor DWORD PTR [eiz*1-0x7158da86],ecx
  416a65:	xor    eax,0x438b74f6
  416a6a:	test   BYTE PTR ds:0x7bd3f84d,al
  416a70:	jl     0x416a7f
  416a72:	cmp    al,0x4d
  416a74:	xor    bl,BYTE PTR [ebp+0x48]
  416a77:	inc    esp
  416a78:	push   ss
  416a79:	out    dx,al
  416a7a:	lahf   
  416a7b:	rcl    DWORD PTR [edx],1
  416a7d:	shr    bl,1
  416a7f:	sbb    eax,0xcae447ea
  416a84:	imul   eax,DWORD PTR [eax+0x712c9b3],0x16
  416a8b:	mov    bl,0x6
  416a8d:	sbb    eax,0x3c5bcb48
  416a92:	cmp    ah,BYTE PTR [ebp-0x19981e7d]
  416a98:	adc    eax,0xcf1fc9b4
  416a9d:	cs dec edx
  416a9f:	mov    ebx,0x636c838d
  416aa4:	xchg   esp,eax
  416aa5:	fisttp QWORD PTR [ebp-0x69bfde4b]
  416aab:	das    
  416aac:	les    ecx,FWORD PTR [edx]
  416aae:	push   ebp
  416aaf:	jnp    0x416a9a
  416ab1:	push   ecx
  416ab2:	mov    al,ds:0xfd73b576
  416ab7:	leave  
  416ab8:	nop
  416ab9:	or     BYTE PTR [eax],ch
  416abb:	sbb    BYTE PTR [eax-0x449238a8],bl
  416ac1:	xor    DWORD PTR [ecx+0x5e],0x3e
  416ac5:	or     BYTE PTR [ecx],al
  416ac7:	and    al,0x4a
  416ac9:	pop    ecx
  416aca:	enter  0x4192,0x63
  416ace:	test   DWORD PTR [esp+esi*4],ebp
  416ad1:	jecxz  0x416b30
  416ad3:	pop    es
  416ad4:	call   0x5e5d68eb
  416ad9:	cmp    cl,BYTE PTR [edi+ebx*1]
  416adc:	call   0xaaba:0xe77f03b2
  416ae3:	clc    
  416ae4:	loop   0x416b25
  416ae6:	push   edi
  416ae7:	mov    dl,0x2
  416ae9:	mov    bl,0xb6
  416aeb:	jg     0x416b67
  416aed:	aas    
  416aee:	fist   DWORD PTR [ebx-0x3d02933a]
  416af4:	xor    al,0x11
  416af6:	add    ebx,ebx
  416af8:	sbb    al,0x80
  416afa:	jns    0x416b53
  416afc:	test   esp,eax
  416afe:	les    ebp,FWORD PTR [esi+edi*4]
  416b01:	call   0x78c89d12
  416b06:	add    al,0xc9
  416b08:	adc    ebp,DWORD PTR [ebx+0x69aa913a]
  416b0e:	push   0x18
  416b10:	mov    ch,BYTE PTR [esi]
  416b12:	xchg   edi,eax
  416b13:	push   ebx
  416b14:	mov    bh,0x76
  416b16:	arpl   WORD PTR [ebx],si
  416b18:	loope  0x416aa1
  416b1a:	mov    WORD PTR [ebx],?
  416b1c:	call   0xb257826d
  416b21:	xor    esi,DWORD PTR [eax]
  416b23:	cmp    BYTE PTR [edi],cl
  416b25:	es ins DWORD PTR es:[edi],dx
  416b27:	jmp    0x416b18
  416b29:	push   edi
  416b2a:	push   edi
  416b2b:	jl     0x416b62
  416b2d:	test   DWORD PTR [eax],0x22b60311
  416b33:	mov    ds:0xa304b1ee,al
  416b38:	pop    edx
  416b39:	jno    0x416b62
  416b3b:	push   ss
  416b3c:	ins    DWORD PTR es:[edi],dx
  416b3d:	scas   eax,DWORD PTR es:[edi]
  416b3e:	jbe    0x416b97
  416b40:	fst    DWORD PTR [edi+0x45f5d1e5]
  416b46:	dec    ebx
  416b47:	clc    
  416b48:	mov    cl,dh
  416b4a:	xchg   ebp,eax
  416b4b:	jg     0x416b00
  416b4d:	popf   
  416b4e:	mov    bl,0x81
  416b50:	sahf   
  416b51:	popf   
  416b52:	enter  0x50bd,0x2d
  416b56:	dec    eax
  416b57:	xchg   edi,eax
  416b58:	jno    0x416b07
  416b5a:	mov    ecx,0x3b114afb
  416b5f:	or     DWORD PTR [esi],0x21
  416b62:	aam    0x6e
  416b64:	stos   BYTE PTR es:[edi],al
  416b65:	cmp    DWORD PTR [ebp-0xddc86ed],esi
  416b6b:	inc    ecx
  416b6c:	adc    dl,BYTE PTR [esi]
  416b6e:	gs and edx,edi
  416b71:	cmp    eax,DWORD PTR [edx]
  416b73:	addr16 out 0xf5,al
  416b76:	fldcw  WORD PTR [eax+0x42c79852]
  416b7c:	mov    dh,0x9
  416b7f:	cmp    BYTE PTR [eax],al
  416b81:	mov    edi,DWORD PTR [ecx-0x4cc37e39]
  416b87:	fs jp  0x416b1f
  416b8a:	gs jp  0x416bd3
  416b8d:	fcomp  DWORD PTR [ecx-0x3ffb609b]
  416b93:	gs dec ebx
  416b95:	test   ebx,ebp
  416b97:	dec    eax
  416b98:	xor    al,dl
  416b9a:	nop
  416b9b:	or     edx,edx
  416b9d:	sub    eax,DWORD PTR [edi+0x4a7ddb66]
  416ba3:	test   DWORD PTR [edi-0x4a5d504e],ebp
  416ba9:	not    al
  416bab:	jp     0x416ba3
  416bad:	mov    ch,0xc0
  416baf:	pop    ss
  416bb0:	enter  0xc8c5,0xa5
  416bb4:	ss leave 
  416bb6:	arpl   WORD PTR [ecx+eax*2-0x5ec74395],ax
  416bbd:	jo     0x416c3d
  416bbf:	jp     0x416ba4
  416bc1:	mov    ds:0xdb150e2c,eax
  416bc6:	cmc    
  416bc7:	jmp    0x49966df0
  416bcc:	fs (bad) 
  416bce:	std    
  416bcf:	cmp    BYTE PTR [edx+0x28],bh
  416bd2:	call   0x534bf00b
  416bd7:	jecxz  0x416b5c
  416bd9:	out    dx,al
  416bda:	cmp    edi,DWORD PTR [ecx]
  416bdc:	jecxz  0x416c0b
  416bde:	mov    ebx,0xbbaea9e
  416be3:	nop
  416be4:	and    eax,0x5761f9a9
  416be9:	ins    DWORD PTR es:[edi],dx
  416bea:	mov    eax,ds:0x81adbe70
  416bef:	icebp  
  416bf0:	out    0xb3,eax
  416bf2:	xor    eax,0x1fb60baa
  416bf7:	push   ebx
  416bf8:	mov    bh,0x6a
  416bfa:	add    esp,DWORD PTR [esi-0x7a]
  416bfd:	and    DWORD PTR [ecx-0x65ac6831],edx
  416c03:	lahf   
  416c04:	(bad)  
  416c05:	or     BYTE PTR [eax+0x1d3cb899],al
  416c0b:	rcr    BYTE PTR [edx+eax*8+0x11],cl
  416c0f:	gs pushf 
  416c11:	fcmovbe st,st(7)
  416c13:	sbb    BYTE PTR [ebx],bl
  416c15:	mov    WORD PTR [eax-0x3],ds
  416c18:	retf   
  416c19:	and    al,0x38
  416c1b:	dec    esp
  416c1c:	and    al,0x64
  416c1e:	add    eax,0xd77199d8
  416c23:	push   ebp
  416c24:	ret    
  416c25:	rcr    BYTE PTR [edx-0x385b519a],cl
  416c2b:	mov    ds:0x1631eb0f,eax
  416c30:	rcr    BYTE PTR [ebp-0x2069f015],0xc1
  416c37:	dec    eax
  416c38:	mov    al,ds:0x84f2cb6b
  416c3d:	cld    
  416c3e:	lods   eax,DWORD PTR ds:[esi]
  416c3f:	pop    es
  416c40:	cmp    DWORD PTR [ebx+edi*2+0x18],eax
  416c44:	push   esi
  416c45:	xor    DWORD PTR [ecx],esi
  416c47:	es clc 
  416c49:	into   
  416c4a:	pop    edx
  416c4b:	cmp    eax,0xff4d97ea
  416c50:	test   eax,0xa3dd2d36
  416c55:	push   0x694c1f76
  416c5a:	das    
  416c5b:	cmp    edi,edx
  416c5d:	dec    edx
  416c5e:	repnz or esp,DWORD PTR [edi-0x4e1ab557]
  416c65:	add    BYTE PTR [ebp+0x56677b0f],al
  416c6b:	pop    esi
  416c6c:	rcl    BYTE PTR [esi],0x68
  416c6f:	lds    eax,FWORD PTR [edx]
  416c71:	mov    edi,0xef849ae
  416c76:	ds dec edx
  416c78:	sbb    BYTE PTR [ebp-0x1a],dl
  416c7b:	mov    al,ds:0xd46acb2b
  416c80:	pop    eax
  416c81:	push   esi
  416c82:	fisttp QWORD PTR [esi+0x17]
  416c85:	loop   0x416c1b
  416c87:	jbe    0x416c5d
  416c89:	js     0x416cea
  416c8b:	jb     0x416cc3
  416c8d:	xor    ebp,DWORD PTR [esi+0xcc6393b]
  416c93:	mov    ebx,0x14583fa2
  416c98:	mov    bl,0x27
  416c9a:	mov    esi,DWORD PTR [ecx+esi*4]
  416c9d:	fwait
  416c9e:	aas    
  416c9f:	(bad)
  416ca3:	aad    0xf0
  416ca5:	fwait
  416ca6:	mov    ss,WORD PTR [ebx-0x5f]
  416ca9:	sbb    eax,0x22752351
  416cae:	push   esp
  416caf:	sub    BYTE PTR [ebx-0x5dd5aeb8],cl
  416cb5:	clc    
  416cb6:	mov    cl,0x6a
  416cb8:	xchg   ebp,eax
  416cb9:	test   al,0x4c
  416cbb:	pop    ecx
  416cbc:	push   edx
  416cbd:	jno    0x416cbc
  416cbf:	pop    edi
  416cc0:	sbb    dl,BYTE PTR [eax-0x16]
  416cc3:	sbb    BYTE PTR [ebp-0x5d],ah
  416cc6:	sahf   
  416cc7:	add    al,0x53
  416cc9:	or     BYTE PTR [ebp+0x6d],0x46
  416ccd:	sub    eax,0xacc54e5b
  416cd2:	aad    0x25
  416cd4:	inc    ebp
  416cd5:	xlat   BYTE PTR ds:[ebx]
  416cd6:	rol    DWORD PTR [edx],1
  416cd8:	pop    ds
  416cd9:	lock not BYTE PTR [edi-0x4c]
  416cdd:	mov    edx,0xaa428b1e
  416ce2:	test   BYTE PTR [ebx-0x6ced5b53],0x2d
  416ce9:	outs   dx,DWORD PTR ds:[esi]
  416cea:	mov    bl,BYTE PTR ds:0xfe82a8c7
  416cf0:	dec    ecx
  416cf1:	neg    ebx
  416cf3:	jecxz  0x416d20
  416cf5:	sub    BYTE PTR [esi],cl
  416cf7:	ror    DWORD PTR ds:[edi+ebp*2+0x434ab61f],1
  416cff:	aad    0x9a
  416d01:	push   eax
  416d02:	loope  0x416cee
  416d04:	sub    eax,0xc2043cdf
  416d09:	mov    BYTE PTR ss:[edi],cl
  416d0c:	pop    si
  416d0e:	pop    es
  416d0f:	dec    ecx
  416d10:	mov    bl,0x83
  416d12:	call   0xbc6e:0x5960ded9
  416d19:	mov    al,ds:0xc34c23b4
  416d1e:	adc    DWORD PTR [edi-0x11],0xffffffaa
  416d22:	repnz pop edi
  416d24:	das    
  416d25:	leave  
  416d26:	or     ch,BYTE PTR [ebp-0x2d]
  416d29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d2a:	mov    dl,0x30
  416d2c:	rol    ebp,0xfd
  416d2f:	fisub  WORD PTR [ecx+0x1af060bf]
  416d35:	add    BYTE PTR [ebp+eiz*8+0x42a07eb1],al
  416d3c:	sub    al,0xe7
  416d3e:	add    ebx,DWORD PTR [esi]
  416d40:	sbb    al,0xfe
  416d42:	out    dx,al
  416d43:	imul   esp,DWORD PTR ds:0x91e26905,0xd3c84bdb
  416d4d:	test   eax,0x6ee09d9b
  416d52:	dec    esp
  416d53:	jg     0x416cd5
  416d55:	rcr    DWORD PTR [edi-0xb9ebb9d],1
  416d5b:	push   esp
  416d5c:	fwait
  416d5d:	stc    
  416d5e:	test   BYTE PTR [edi],bl
  416d60:	out    0xb7,eax
  416d62:	sbb    dl,dh
  416d64:	bound  esi,QWORD PTR [ecx+0x36]
  416d67:	aaa    
  416d68:	mov    dh,0xad
  416d6a:	ret    0x5a2a
  416d6d:	aad    0x7d
  416d6f:	imul   ecx,esi,0x39
  416d72:	add    esi,DWORD PTR [eax+0x27]
  416d75:	scas   eax,DWORD PTR es:[edi]
  416d76:	popa   
  416d77:	add    BYTE PTR [esi],al
  416d79:	(bad)  
  416d7a:	clc    
  416d7b:	xchg   edx,eax
  416d7c:	xchg   DWORD PTR [edx+0x3f],edx
  416d7f:	lahf   
  416d80:	or     eax,0x119671cc
  416d85:	in     al,dx
  416d86:	inc    esi
  416d87:	lods   eax,DWORD PTR ds:[esi]
  416d88:	jmp    0x416d28
  416d8a:	je     0x416d91
  416d8c:	inc    ecx
  416d8d:	loopne 0x416dff
  416d8f:	retf   0xd278
  416d92:	fsubr  st,st(7)
  416d94:	outs   dx,BYTE PTR ds:[esi]
  416d95:	jnp    0x416d5d
  416d97:	js     0x416d2b
  416d99:	(bad)  
  416d9a:	repnz push esp
  416d9c:	call   0x8b13:0x179f5744
  416da3:	mov    ah,0xa4
  416da5:	jmp    0xc97253d3
  416daa:	out    dx,eax
  416dab:	jo     0x416d9a
  416dad:	mov    edi,0xe8a07184
  416db2:	outs   dx,DWORD PTR ds:[esi]
  416db3:	in     al,dx
  416db4:	outs   dx,DWORD PTR ds:[esi]
  416db5:	ds retf 
  416db7:	enter  0xbfc8,0x48
  416dbb:	fnstsw WORD PTR [ebx-0x42]
  416dbe:	dec    esp
  416dbf:	outs   dx,BYTE PTR ds:[esi]
  416dc0:	add    eax,0xaa47eaf7
  416dc5:	and    al,al
  416dc7:	push   esi
  416dc8:	lods   al,BYTE PTR ds:[esi]
  416dc9:	sub    al,0x7f
  416dcb:	and    al,0x2a
  416dcd:	push   cs
  416dce:	inc    ebx
  416dcf:	push   ebx
  416dd0:	mov    ds:0xbb017912,eax
  416dd5:	loopne 0x416dd7
  416dd7:	jecxz  0x416dda
  416dd9:	pop    ecx
  416dda:	fimul  WORD PTR [ecx]
  416ddc:	neg    BYTE PTR es:[esi-0x6c]
  416de0:	sbb    eax,0xc7ef236f
  416de5:	jmp    0xec8b:0x1db234a7
  416dec:	pop    ebx
  416ded:	popf   
  416dee:	fmul   DWORD PTR [eax]
  416df0:	(bad)  
  416df1:	inc    ecx
  416df2:	shl    BYTE PTR [edx],cl
  416df4:	and    al,0x97
  416df7:	retf   0x226e
  416dfa:	fdivrp st(2),st
  416dfc:	jno    0x416e73
  416dfe:	and    al,0xbf
  416e00:	mov    cl,bh
  416e02:	push   ecx
  416e03:	in     eax,0xa7
  416e05:	xchg   ebx,eax
  416e06:	jle    0x416e46
  416e08:	mov    eax,0x43905ab2
  416e0d:	mov    ecx,0x91aa3202
  416e12:	fst    DWORD PTR [ebp+0x55]
  416e15:	in     eax,0xa9
  416e17:	mov    ch,0xd0
  416e19:	data16 or al,0x3b
  416e1c:	lock imul eax,edi,0xffffffaa
  416e20:	aas    
  416e21:	mov    ebx,0xa6710492
  416e26:	cmp    DWORD PTR [esp+eax*2],ecx
  416e29:	mov    ds:0x9bca6a37,al
  416e2e:	gs mov ebp,0x49be3e9
  416e34:	dec    edi
  416e35:	mov    ebp,0x339383ce
  416e3a:	call   0x5313308b
  416e3f:	pop    edi
  416e40:	les    ecx,FWORD PTR [eax-0x7304e24a]
  416e46:	jp     0x416e18
  416e48:	test   DWORD PTR [ecx+0x5b51619a],ebx
  416e4e:	jno    0x416e09
  416e50:	push   eax
  416e51:	push   ss
  416e52:	ficomp DWORD PTR [ecx-0x560a2bd8]
  416e58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e59:	dec    edx
  416e5a:	data16 sbb dl,BYTE PTR ds:0x1c7c0f1b
  416e61:	aaa    
  416e62:	lds    ebx,FWORD PTR [edx+esi*1]
  416e65:	fcom   QWORD PTR [esi+0x740447ed]
  416e6b:	pop    fs
  416e6d:	mov    al,gs:0x2d33d578
  416e73:	jp     0x416ead
  416e75:	and    eax,0xc9a561ab
  416e7a:	inc    edx
  416e7b:	add    al,0xec
  416e7d:	(bad)  
  416e7e:	(bad)  
  416e7f:	jg     0x416e83
  416e81:	retf   0x3388
  416e84:	(bad)  
  416e85:	loope  0x416ea9
  416e87:	jge    0x416e82
  416e89:	je     0x416e17
  416e8b:	scas   al,BYTE PTR es:[edi]
  416e8c:	aad    0x31
  416e8e:	xor    esi,esi
  416e90:	mov    ebx,0x83788f9b
  416e95:	xchg   edi,eax
  416e96:	cmp    al,0x21
  416e98:	aas    
  416e99:	mov    ch,0x1a
  416e9b:	inc    esi
  416e9c:	les    esp,FWORD PTR [esi+0x771c11ce]
  416ea2:	ins    DWORD PTR es:[edi],dx
  416ea3:	push   ss
  416ea4:	mov    edx,ecx
  416ea6:	jp     0x416e63
  416ea8:	cmp    BYTE PTR [ebx+0x546bf99c],ch
  416eae:	pop    ebp
  416eaf:	jge    0x416efd
  416eb1:	(bad)  [esp+edx*2-0x43]
  416eb5:	jbe    0x416ee3
  416eb7:	add    al,0xff
  416eb9:	repz shl DWORD PTR [ebp-0x2c889843],0xd6
  416ec1:	outs   dx,BYTE PTR ds:[esi]
  416ec2:	inc    eax
  416ec3:	enter  0x28,0x4c
  416ec7:	mov    ds:0x143b7f04,eax
  416ecc:	mov    ds:0x15da15e9,al
  416ed1:	cwde   
  416ed2:	or     ah,BYTE PTR [edi+0x6cec939a]
  416ed8:	out    dx,al
  416ed9:	mov    esp,0x161d78ca
  416ede:	stos   DWORD PTR es:[edi],eax
  416edf:	fisubr WORD PTR [ebx-0x28a2174b]
  416ee5:	test   eax,0xd59dcc49
  416eea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416eeb:	rcl    DWORD PTR [ebx],0x98
  416eee:	div    BYTE PTR [esi]
  416ef0:	and    DWORD PTR [bx+di],edx
  416ef3:	icebp  
  416ef4:	sbb    DWORD PTR [ebp+0x513cada5],ebx
  416efa:	inc    edi
  416efb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416efc:	mov    ebx,0x8a24225d
  416f01:	mov    DWORD PTR [eax],esi
  416f03:	stos   BYTE PTR es:[edi],al
  416f04:	hlt    
  416f05:	leave  
  416f06:	xor    esi,DWORD PTR [ebp+0x63]
  416f09:	popf   
  416f0a:	and    al,0x59
  416f0c:	ss (bad) 
  416f0e:	sub    edi,DWORD PTR [eax]
  416f10:	inc    edi
  416f11:	xor    al,0xa3
  416f13:	stos   DWORD PTR es:[edi],eax
  416f14:	cwde   
  416f15:	sbb    al,0x9c
  416f17:	adc    al,0x47
  416f19:	pop    edx
  416f1a:	mov    ch,0xf5
  416f1c:	mov    edi,0x2453c741
  416f21:	xchg   ecx,eax
  416f22:	add    eax,0x60dd9135
  416f27:	xchg   edi,eax
  416f28:	into   
  416f29:	shl    BYTE PTR [ecx],cl
  416f2b:	hlt    
  416f2c:	lods   al,BYTE PTR ds:[esi]
  416f2d:	xor    edi,DWORD PTR [ecx]
  416f2f:	cmp    al,0x79
  416f31:	test   al,0x44
  416f33:	clc    
  416f34:	and    ebp,DWORD PTR [ebx]
  416f36:	pop    eax
  416f37:	mov    eax,0x4ba77116
  416f3c:	sub    eax,0xfd1a12ca
  416f41:	sbb    esp,DWORD PTR [ecx]
  416f43:	leave  
  416f44:	sbb    BYTE PTR [esi-0x3af26902],0x72
  416f4b:	pop    ecx
  416f4c:	push   0x97420ab
  416f51:	adc    eax,0x731f9df2
  416f56:	and    esi,DWORD PTR ds:0x8162ff9c
  416f5c:	mov    al,0xdc
  416f5e:	mov    ds:0x8435767f,eax
  416f63:	(bad)  
  416f64:	adc    ebp,edi
  416f66:	jbe    0x416f3f
  416f68:	jle    0x416f4e
  416f6a:	gs xchg ecx,eax
  416f6c:	(bad)  
  416f6d:	fs dec ebx
  416f6f:	xchg   esi,eax
  416f70:	pop    ebx
  416f71:	xor    esi,esi
  416f73:	fcmovbe st,st(4)
  416f75:	int3   
  416f76:	out    0xdb,eax
  416f78:	sbb    BYTE PTR [ebx-0x66],dl
  416f7b:	gs ins DWORD PTR es:[edi],dx
  416f7d:	xor    dl,BYTE PTR [ecx-0x773bee]
  416f83:	cmp    BYTE PTR [edx-0x7d],bh
  416f86:	cdq    
  416f87:	out    dx,eax
  416f88:	cs pop esi
  416f8a:	xchg   ecx,eax
  416f8b:	cmc    
  416f8c:	xchg   edi,eax
  416f8d:	aaa    
  416f8e:	cmp    dh,cl
  416f90:	dec    esi
  416f91:	add    eax,0x816a1ed2
  416f96:	(bad)
  416f9a:	xor    eax,0x396c6d7
  416f9f:	push   esi
  416fa0:	mov    ds:0xfef9b319,al
  416fa5:	callw  0xe28
  416fa9:	retf   
  416faa:	mov    ds:0x1d19a521,eax
  416faf:	aas    
  416fb0:	mov    esp,0xe8429966
  416fb5:	test   DWORD PTR [edi+0xe078569],ebp
  416fbb:	jl     0x416ffd
  416fbd:	mov    ecx,eax
  416fbf:	test   al,0xb9
  416fc1:	cmp    ebx,edi
  416fc3:	fcomp  QWORD PTR [ecx]
  416fc5:	shr    DWORD PTR [esi],1
  416fc7:	xor    dl,BYTE PTR [esi]
  416fc9:	iret   
  416fca:	test   al,bl
  416fcc:	jl     0x417019
  416fce:	add    cl,ah
  416fd0:	add    eax,0xd729b2a4
  416fd5:	nop
  416fd6:	aam    0x4e
  416fd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fd9:	lods   eax,DWORD PTR ds:[esi]
  416fda:	inc    edi
  416fdb:	xchg   BYTE PTR [esi-0x6a],bh
  416fde:	jp     0x416f8d
  416fe0:	retf   0x21c2
  416fe3:	sbb    eax,0xd5707982
  416fe8:	inc    eax
  416fe9:	popa   
  416fea:	cmp    al,0xde
  416fec:	aas    
  416fed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fee:	mov    esp,0xc6b2f648
  416ff3:	pop    di
  416ff5:	repz repnz cwde 
  416ff8:	xor    esi,DWORD PTR [ecx]
  416ffa:	mov    ecx,0x1918ffa2
  416fff:	shl    DWORD PTR [edi+0x14ec3122],1
  417005:	xor    al,0xe3
  417007:	rcr    DWORD PTR [ecx-0x6a],cl
  41700a:	inc    esp
  41700b:	je     0x416feb
  41700d:	jmp    FWORD PTR [esp+ebx*4+0x1b29b2f2]
  417014:	xor    DWORD PTR [edi-0x50],esp
  417017:	test   bh,dl
  417019:	dec    ebp
  41701a:	jle    0x416fc6
  41701c:	pop    esi
  41701d:	retf   0xb323
  417020:	and    eax,0x99a28ffb
  417025:	dec    ebx
  417026:	imul   sp,WORD PTR [ebp-0x57],0x5975
  41702c:	into   
  41702d:	sub    dl,BYTE PTR [esi+0x62]
  417030:	mov    edx,0xb4dc19af
  417035:	das    
  417036:	call   FWORD PTR [eax+0x78d60656]
  41703c:	xor    eax,0xd6578fe9
  417041:	mov    cl,0x4
  417043:	in     al,0x32
  417045:	adc    bh,BYTE PTR [eax+0x567357a9]
  41704b:	stc    
  41704c:	xor    cl,BYTE PTR [esi+0x12fa65c4]
  417052:	jnp    0x417055
  417054:	cmp    dh,al
  417056:	push   ebp
  417057:	outs   dx,DWORD PTR ds:[esi]
  417058:	push   cs
  417059:	hlt    
  41705a:	repnz pop ebx
  41705c:	popf   
  41705d:	xchg   BYTE PTR [eax+eax*4-0x51],ah
  417061:	xchg   DWORD PTR [ecx],eax
  417063:	aam    0x70
  417065:	dec    ecx
  417066:	mov    ch,0x6b
  417068:	and    ah,BYTE PTR [edi+0x14]
  41706b:	mov    bl,0x75
  41706d:	std    
  41706e:	mov    edx,0xaf4d60f1
  417073:	dec    ebp
  417074:	jae    0x417048
  417076:	(bad)
  41707a:	push   ecx
  41707b:	push   cs
  41707c:	xchg   ebp,eax
  41707d:	loope  0x4170f0
  41707f:	aas    
  417080:	sbb    ch,BYTE PTR [eax-0x3f]
  417083:	push   ebx
  417084:	dec    ebp
  417085:	cmp    BYTE PTR [ecx],dl
  417087:	mov    ecx,0xd168832b
  41708c:	test   DWORD PTR [edx],esp
  41708e:	and    edx,DWORD PTR fs:[esi+0x3f]
  417092:	sub    BYTE PTR [esi+0x4e],al
  417095:	shr    DWORD PTR [edi-0x11598aba],1
  41709b:	push   ebp
  41709c:	aam    0x24
  41709e:	popf   
  41709f:	or     DWORD PTR [ebx],ebx
  4170a1:	stc    
  4170a2:	out    dx,al
  4170a3:	push   cs
  4170a4:	fmul   st,st(6)
  4170a6:	cli    
  4170a7:	mov    edx,0xc0eb88ca
  4170ac:	arpl   WORD PTR [ebx],sp
  4170ae:	iret   
  4170af:	sub    ch,BYTE PTR [eax]
  4170b1:	inc    ebp
  4170b2:	stos   DWORD PTR es:[edi],eax
  4170b3:	imul   ecx,esp,0x47
  4170b6:	sbb    al,0xa1
  4170b8:	adc    DWORD PTR [esi+0x5be10e9d],esi
  4170be:	and    eax,0x83ace046
  4170c3:	push   cs
  4170c4:	jns    0x41706a
  4170c6:	ret    
  4170c7:	fwait
  4170c8:	popa   
  4170c9:	dec    ebx
  4170ca:	mov    cl,0x5c
  4170cc:	sbb    DWORD PTR ss:[ecx+0x29],0x9b5c7770
  4170d4:	xchg   edi,eax
  4170d5:	xchg   ebp,eax
  4170d6:	sbb    ebx,0xffffffed
  4170d9:	push   edi
  4170da:	pop    esp
  4170db:	push   ecx
  4170dc:	mov    ch,BYTE PTR [eax]
  4170de:	nop
  4170df:	dec    esp
  4170e0:	push   es
  4170e1:	xor    ch,BYTE PTR [esi-0x280f049f]
  4170e7:	(bad)  
  4170e8:	dec    ebx
  4170e9:	scas   al,BYTE PTR es:[edi]
  4170ea:	das    
  4170eb:	jp     0x417127
  4170ed:	mov    dl,0x33
  4170ef:	(bad)  
  4170f0:	cmp    dl,BYTE PTR [esi-0x4112670e]
  4170f6:	jge    0x41712f
  4170f8:	scas   eax,DWORD PTR es:[edi]
  4170f9:	in     eax,dx
  4170fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170fb:	test   BYTE PTR [edx+0xd86f63e],bl
  417101:	icebp  
  417102:	cmp    BYTE PTR ds:0xbf72c678,dl
  417108:	jp     0x4170b5
  41710a:	jnp    0x4170f4
  41710c:	stc    
  41710d:	fwait
  41710e:	dec    esi
  41710f:	ins    BYTE PTR es:[edi],dx
  417110:	test   eax,0x9f9e5d71
  417115:	outs   dx,BYTE PTR ds:[esi]
  417116:	jns    0x4170ae
  417118:	xchg   ebx,eax
  417119:	mov    BYTE PTR [edx-0xb],ch
  41711c:	clc    
  41711d:	das    
  41711e:	push   ebx
  41711f:	shl    ecx,1
  417121:	add    BYTE PTR [edx+esi*4-0x23],ch
  417125:	pusha  
  417126:	inc    esi
  417127:	lea    ecx,[edx]
  417129:	jno    0x41717b
  41712b:	jbe    0x41714d
  41712d:	scas   al,BYTE PTR es:[edi]
  41712e:	and    al,0x7d
  417130:	into   
  417131:	and    DWORD PTR [esi-0x7c],eax
  417134:	mov    bl,0x6
  417136:	fldcw  WORD PTR [ebx+0x2ea5fdff]
  41713c:	stos   DWORD PTR es:[edi],eax
  41713d:	pop    esi
  41713e:	and    BYTE PTR [ebx+0xe],dl
  417141:	push   ebx
  417142:	dec    esp
  417143:	daa    
  417144:	or     al,0x5b
  417146:	xchg   esi,eax
  417147:	cld    
  417148:	rcr    cl,cl
  41714a:	mov    dh,BYTE PTR [edi]
  41714c:	xchg   edi,eax
  41714d:	and    al,0x2b
  41714f:	aas    
  417150:	sar    bh,0x4a
  417153:	fistp  DWORD PTR [esi+0x75]
  417156:	idiv   BYTE PTR [ebp+esi*4+0x2f861863]
  41715d:	mov    dl,0x57
  41715f:	pusha  
  417160:	adc    eax,0x2f1d00e5
  417165:	and    ebx,ebp
  417167:	mov    eax,ds:0xa8d2ece7
  41716c:	jo     0x4171b1
  41716e:	scas   al,BYTE PTR es:[edi]
  41716f:	popf   
  417170:	cli    
  417171:	rcr    BYTE PTR [ecx-0x1f],cl
  417174:	mov    bl,0xd2
  417176:	inc    ebx
  417177:	ja     0x4171a8
  417179:	repnz xchg edi,eax
  41717b:	push   ebp
  41717c:	pushf  
  41717d:	push   esp
  41717e:	sub    ebp,DWORD PTR [ebx+ebx*2+0x20e8f0d0]
  417185:	bound  edx,QWORD PTR [eax-0x3c]
  417188:	bound  esp,QWORD PTR [ebx-0x39c29682]
  41718e:	out    dx,eax
  41718f:	sub    eax,0xb516c22e
  417194:	xor    DWORD PTR [esi],ecx
  417196:	push   0x74
  417198:	(bad)  [eax+0x51e7a09c]
  41719e:	mov    dl,0x9b
  4171a0:	mov    edi,gs
  4171a2:	in     eax,dx
  4171a3:	lahf   
  4171a4:	scas   eax,DWORD PTR es:[edi]
  4171a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171a6:	fisub  WORD PTR [eax+eiz*4+0x7bd2d938]
  4171ad:	jb     0x41720b
  4171af:	inc    BYTE PTR [edi+0x6f]
  4171b2:	js     0x417154
  4171b4:	aas    
  4171b5:	push   esi
  4171b6:	add    al,0x41
  4171b8:	cdq    
  4171b9:	in     eax,0x1d
  4171bb:	mov    ecx,0x7442dfe2
  4171c0:	vpshufhw xmm7,xmm4,0xe9
  4171c6:	add    BYTE PTR [ebp-0x75f30b73],ah
  4171cc:	fld    DWORD PTR [ebp+0x5c54115f]
  4171d2:	int    0x63
  4171d4:	cld    
  4171d5:	pop    edi
  4171d6:	stos   DWORD PTR es:[edi],eax
  4171d7:	cmp    dl,BYTE PTR [edx]
  4171d9:	or     eax,DWORD PTR [edx+esi*8-0x3da88f04]
  4171e0:	inc    ebx
  4171e1:	ror    bh,0xb9
  4171e4:	sbb    al,BYTE PTR [esi]
  4171e6:	mov    eax,ds:0x66302def
  4171eb:	dec    edx
  4171ec:	dec    ebx
  4171ed:	repnz xchg esp,eax
  4171ef:	add    eax,0x9e48e876
  4171f4:	mov    bh,0x31
  4171f6:	in     eax,dx
  4171f7:	imul   ecx,DWORD PTR [ebx+0x11],0xba7bbf16
  4171fe:	inc    edx
  4171ff:	mul    BYTE PTR [edi-0xb50c978]
  417205:	scas   eax,DWORD PTR es:[edi]
  417206:	sbb    eax,0xaef0dd04
  41720b:	mov    esi,0xfd4de616
  417210:	sbb    ch,al
  417212:	enter  0x3d51,0xd6
  417216:	(bad)  
  417217:	mov    dl,0x89
  417219:	pop    ebx
  41721a:	jmp    0x28fc:0x335cefa2
  417221:	fstp   QWORD PTR [edi+0x7d7dd141]
  417227:	rcl    BYTE PTR [ebp+0x8],0x73
  41722b:	sub    BYTE PTR [eax+0x4abd8443],ch
  417231:	bound  edx,QWORD PTR [ebx]
  417233:	push   ecx
  417234:	push   ds
  417235:	or     edi,DWORD PTR ds:0xe918a600
  41723b:	(bad)  
  41723d:	cld    
  41723e:	scas   eax,DWORD PTR es:[edi]
  41723f:	cmp    eax,0xaa17ed62
  417244:	outs   dx,BYTE PTR ds:[esi]
  417245:	add    eax,0xa76b8acf
  41724a:	ror    DWORD PTR [edx+0x54b2a956],0x97
  417251:	adc    DWORD PTR [eax+ecx*2+0x60],ebx
  417255:	cmp    al,ch
  417257:	ins    DWORD PTR es:[edi],dx
  417258:	adc    ch,bl
  41725a:	cmp    BYTE PTR [eax-0x1660f130],0xec
  417261:	sar    edx,1
  417263:	xchg   ecx,eax
  417264:	ss das 
  417266:	mov    ebp,0xd3415615
  41726b:	cmp    ah,BYTE PTR [eax]
  41726d:	adc    ecx,ebp
  41726f:	shl    BYTE PTR [ebx-0x5f8b3d01],1
  417275:	jae    0x417221
  417277:	loopne 0x4172dc
  417279:	mov    bh,0xf7
  41727b:	aaa    
  41727c:	pop    eax
  41727d:	retf   0xde9e
  417280:	pop    ds
  417281:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417282:	repz dec ebp
  417284:	cmp    DWORD PTR [eax+edx*2-0x7d],edx
  417288:	fld    QWORD PTR [ecx]
  41728a:	add    eax,0x5e5a5fce
  41728f:	pop    ebp
  417290:	mov    dx,0xb624
  417294:	cmp    esp,DWORD PTR [esi]
  417296:	sub    dh,BYTE PTR [edx+0x2acd0ce7]
  41729c:	out    0x98,eax
  41729e:	xchg   esi,eax
  41729f:	lock loopne 0x417241
  4172a2:	mov    al,0x66
  4172a4:	je     0x41731f
  4172a6:	mov    esp,0x3df20e07
  4172ab:	(bad)  
  4172ac:	loope  0x41724b
  4172ae:	jb     0x41732f
  4172b0:	cmp    al,0xf6
  4172b2:	mov    DWORD PTR [edi-0x4e2740e1],esp
  4172b8:	test   eax,0xcbd4b35f
  4172bd:	daa    
  4172be:	mov    al,0x86
  4172c0:	mov    al,ds:0x6105ce1c
  4172c5:	fstp   TBYTE PTR [esi+0x75]
  4172c8:	dec    edx
  4172c9:	iret   
  4172ca:	xor    DWORD PTR [esi],esp
  4172cc:	add    dh,BYTE PTR [edi+ebx*1+0x36]
  4172d0:	push   es
  4172d1:	jns    0x41726f
  4172d3:	dec    ebp
  4172d4:	arpl   si,sp
  4172d6:	mov    al,0x2e
  4172d8:	(bad)  
  4172da:	jbe    0x4172c6
  4172dc:	test   DWORD PTR [ebx-0x6b],esi
  4172df:	fdiv   DWORD PTR [ecx]
  4172e1:	jo     0x417332
  4172e3:	push   edx
  4172e4:	cwde   
  4172e5:	push   cs
  4172e6:	int    0xb2
  4172e8:	popf   
  4172e9:	push   esi
  4172ea:	call   0x67a56d91
  4172ef:	dec    BYTE PTR [eax]
  4172f1:	add    al,0x7e
  4172f3:	mov    ds:0xde317c4f,eax
  4172f8:	push   0x7
  4172fa:	test   ecx,ecx
  4172fc:	shl    DWORD PTR [eax+0x77],0xee
  417300:	les    ebx,FWORD PTR [edi-0x5b0364d4]
  417306:	add    BYTE PTR [edi+0x1e],0x7c
  41730a:	pop    es
  41730b:	(bad)  
  41730c:	mov    bh,0x43
  41730e:	jne    0x4172e3
  417310:	sbb    DWORD PTR [ebp+0x2287d4d5],ebx
  417316:	enter  0x42a1,0x2c
  41731a:	adc    eax,0x7ce1aac8
  41731f:	sti    
  417320:	call   0xe0df:0xd8f03f8b
  417327:	adc    bl,BYTE PTR [ecx+eiz*1+0xae7bf1c]
  41732e:	xor    esp,DWORD PTR ds:0xf97c82d8
  417334:	and    DWORD PTR [ebp+0x629d12f4],eax
  41733a:	in     eax,dx
  41733b:	outs   dx,BYTE PTR ds:[esi]
  41733c:	dec    eax
  41733d:	leave  
  41733e:	mov    WORD PTR [edi-0x3727154],ax
  417345:	pop    esi
  417346:	in     eax,dx
  417347:	test   BYTE PTR [ecx+0x7f8a5891],dl
  41734d:	push   cs
  41734e:	(bad)  
  41734f:	cmp    al,dh
  417351:	ss jl  0x4172ec
  417354:	mov    ?,WORD PTR [esi]
  417356:	gs mov ebx,0x5ad0c4d3
  41735c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41735d:	sbb    DWORD PTR [eax-0x2e],edx
  417360:	loope  0x4173b6
  417362:	lea    ebx,[edi]
  417364:	inc    ebp
  417365:	jnp    0x4173c4
  417367:	mov    esp,0x3ac14b3e
  41736c:	imul   edi,DWORD PTR [ecx-0x8],0x6d9108a1
  417373:	into   
  417374:	out    dx,al
  417375:	pop    edi
  417376:	inc    eax
  417377:	jecxz  0x417347
  417379:	add    DWORD PTR [ebx+0x6f],ebx
  41737c:	out    dx,al
  41737d:	sub    eax,0xf5477965
  417382:	out    dx,eax
  417383:	test   BYTE PTR [ebp-0x75],cl
  417386:	adc    al,BYTE PTR [ecx+0x17]
  417389:	es loop 0x417329
  41738c:	(bad)  
  41738e:	push   esi
  41738f:	jae    0x4173a3
  417391:	rcr    BYTE PTR [edi+0x3417e50a],cl
  417397:	test   al,0xd6
  417399:	pop    esp
  41739a:	cmp    al,0xbb
  41739c:	xchg   edx,eax
  41739d:	pushf  
  41739e:	lods   eax,DWORD PTR ds:[esi]
  41739f:	add    ebp,DWORD PTR [ecx+0x61fdb52a]
  4173a5:	out    dx,eax
  4173a6:	rol    DWORD PTR [edi-0x7ba4697b],0x81
  4173ad:	jb     0x417370
  4173af:	mov    edi,0xd9f5b5e4
  4173b4:	sbb    BYTE PTR [esi-0x3fce5089],cl
  4173ba:	add    BYTE PTR [eax+0x39b26d2e],cl
  4173c0:	mov    al,ds:0xf2dfcc7f
  4173c5:	adc    cl,0x4c
  4173c8:	mov    bl,0xd4
  4173ca:	push   0x10
  4173cc:	cmp    dl,0x4f
  4173cf:	sbb    DWORD PTR [esi+0x1095a81c],eax
  4173d5:	xchg   BYTE PTR [ebx-0x15],dl
  4173d8:	xor    BYTE PTR [ecx+0x3d],0x39
  4173dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173dd:	cmp    al,0xd3
  4173df:	repz ret 
  4173e1:	stos   BYTE PTR es:[edi],al
  4173e2:	cli    
  4173e3:	cmp    cl,dh
  4173e5:	dec    eax
  4173e6:	call   0x60e2:0x4f5d3795
  4173ed:	push   ecx
  4173ee:	sahf   
  4173ef:	ja     0x417444
  4173f1:	xchg   edi,eax
  4173f2:	and    al,0x18
  4173f4:	pop    edi
  4173f5:	push   edx
  4173f6:	in     al,dx
  4173f7:	test   al,0x8f
  4173f9:	push   ebp
  4173fa:	ret    
  4173fb:	dec    ecx
  4173fc:	jne    0x4173eb
  4173fe:	popa   
  4173ff:	jns    0x417400
  417401:	mov    ch,0x8c
  417403:	icebp  
  417404:	sbb    bl,bl
  417406:	pop    ebp
  417407:	fs xchg edx,eax
  417409:	fmul   DWORD PTR [ebp+0x35]
  41740c:	lods   al,BYTE PTR ds:[esi]
  41740d:	cld    
  41740e:	stos   DWORD PTR es:[edi],eax
  41740f:	or     ebx,DWORD PTR [edx]
  417411:	popf   
  417412:	jmp    0x65ed:0x86853e80
  417419:	hlt    
  41741a:	add    dl,BYTE PTR [ebx]
  41741c:	fcom   QWORD PTR [eax-0x55]
  41741f:	scas   al,BYTE PTR es:[edi]
  417420:	xchg   ebp,eax
  417421:	sbb    al,0x64
  417423:	dec    ebx
  417424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417425:	sbb    DWORD PTR [edi+0x7d],esp
  417428:	fild   WORD PTR [eax+0x2f]
  41742b:	fwait
  41742c:	bound  esi,QWORD PTR [ecx+0x6c90d4dd]
  417432:	xchg   esi,eax
  417433:	jno    0x4173c1
  417435:	test   BYTE PTR [esi-0xf],0xed
  417439:	emms   
  41743b:	push   ebx
  41743c:	cmp    BYTE PTR [esi-0x46162e84],ah
  417442:	and    al,0x9c
  417444:	fs jg  0x417481
  417447:	mov    al,0x80
  417449:	cmp    esi,ecx
  41744b:	dec    edx
  41744c:	mov    DWORD PTR [edx-0x3d],eax
  41744f:	fist   WORD PTR [ecx-0x4320fb8c]
  417455:	dec    esp
  417456:	lds    ebp,FWORD PTR [edx]
  417458:	and    DWORD PTR [eax-0x58046435],ecx
  41745e:	push   eax
  41745f:	cdq    
  417460:	out    0x92,al
  417462:	pop    esi
  417463:	or     BYTE PTR [ebx-0x665fa446],bl
  417469:	les    edx,FWORD PTR [edx-0x57d2660f]
  41746f:	loop   0x4174d3
  417471:	inc    cx
  417473:	and    al,0x3
  417475:	add    DWORD PTR [edi],edi
  417477:	arpl   WORD PTR [ecx],ax
  417479:	pusha  
  41747a:	fnstcw WORD PTR [edi+0x53fc5a49]
  417480:	sahf   
  417481:	push   ebx
  417482:	mov    dh,0x85
  417484:	aam    0x9b
  417486:	lea    eax,[edi+ecx*8-0x11]
  41748a:	push   edx
  41748b:	pop    ebx
  41748c:	mov    edx,0x3d9ab1d2
  417491:	sti    
  417492:	ds div dl
  417495:	xor    DWORD PTR [edx],ebp
  417497:	addr16 cmc 
  417499:	mov    eax,0x2864a0a
  41749e:	xor    ch,dh
  4174a0:	xchg   BYTE PTR [ebx+0x62],dl
  4174a3:	je     0x417487
  4174a5:	out    0x3c,al
  4174a7:	inc    ebp
  4174a8:	push   cs
  4174a9:	push   ebx
  4174aa:	test   eax,0x53b5e45f
  4174af:	sub    eax,0xa7846130
  4174b4:	mov    al,ds:0x642c904f
  4174b9:	daa    
  4174ba:	(bad)  
  4174bc:	push   esp
  4174bd:	retf   
  4174be:	int3   
  4174bf:	jp     0x4174cf
  4174c1:	out    dx,eax
  4174c2:	fwait
  4174c3:	out    dx,eax
  4174c4:	sub    al,0x4a
  4174c6:	dec    edi
  4174c7:	mov    ds:0x4933ce0b,al
  4174cc:	mov    edx,0x949778b
  4174d1:	test   BYTE PTR [eax+0x49],dh
  4174d4:	xor    eax,0xc371bee4
  4174d9:	lea    eax,[ebx+0x4f9d1543]
  4174df:	jmp    0x8762792e
  4174e4:	(bad)  
  4174e5:	mov    eax,0x2c1e9830
  4174ea:	xchg   BYTE PTR [esi+0x7a6d63da],ch
  4174f0:	mov    edx,0x1b8cc5de
  4174f5:	pop    edx
  4174f6:	(bad)  
  4174f7:	and    ecx,DWORD PTR [eax+0x31]
  4174fa:	mov    al,ds:0xb6253c3b
  4174ff:	mov    ds:0xd160d6b3,eax
  417504:	mov    ?,WORD PTR ds:0xc8ad98c2
  41750a:	push   edx
  41750b:	cmp    BYTE PTR [edi+eiz*1+0x64],dh
  41750f:	popa   
  417510:	push   0x363e02f5
  417515:	outs   dx,BYTE PTR ds:[esi]
  417516:	sbb    ebp,DWORD PTR [ecx+0x8]
  417519:	pop    esp
  41751a:	xchg   ch,cl
  41751c:	xor    ch,dh
  41751e:	inc    eax
  41751f:	loop   0x41752f
  417521:	or     cl,BYTE PTR [ecx+0x1dc67ca4]
  417527:	push   ebp
  417528:	mov    edi,0x1a95a686
  41752d:	and    al,0xf
  41752f:	(bad)  
  417530:	iret   
  417531:	or     BYTE PTR es:[ebp+0x53d70329],dl
  417538:	or     al,0xb
  41753a:	push   cs
  41753b:	mov    eax,0x5d079976
  417540:	fild   WORD PTR [ebp-0x67]
  417543:	bound  esi,QWORD PTR [edi+ecx*2-0x406f2b26]
  41754a:	jbe    0x417568
  41754c:	mov    dh,0xb2
  41754e:	out    dx,al
  41754f:	loop   0x417575
  417551:	push   0xa6caf7bb
  417556:	lds    esp,FWORD PTR [ebx+ecx*2+0x322d7d56]
  41755d:	or     cl,ch
  41755f:	pop    edi
  417560:	ins    BYTE PTR es:[edi],dx
  417561:	imul   esi,DWORD PTR [ebx+0x5468ba81],0xb3ade69f
  41756b:	cmp    DWORD PTR [ebx-0x51990bbf],edx
  417571:	popf   
  417572:	jg     0x417529
  417574:	rol    dh,1
  417576:	add    eax,0x294ccb1
  41757b:	daa    
  41757c:	call   0xfa96:0x39e7de6
  417583:	scas   eax,DWORD PTR es:[edi]
  417584:	sbb    dl,BYTE PTR [edi-0x60d0bdab]
  41758a:	adc    ecx,ecx
  41758c:	and    al,0x87
  41758e:	popf   
  41758f:	push   ecx
  417590:	test   bl,0xa4
  417593:	push   edx
  417594:	mov    cl,0x40
  417596:	fldcw  WORD PTR [esi]
  417598:	cmp    eax,0x3a452049
  41759d:	test   al,0x49
  41759f:	stc    
  4175a0:	in     eax,dx
  4175a1:	sub    eax,0x8c69d575
  4175a6:	retf   
  4175a7:	or     bl,al
  4175a9:	adc    al,0xd7
  4175ab:	nop
  4175ac:	push   ebp
  4175ad:	push   ss
  4175ae:	call   0xd67e97bd
  4175b3:	jecxz  0x4175ee
  4175b5:	sub    al,0xb7
  4175b7:	xchg   edi,eax
  4175b8:	fwait
  4175b9:	pop    esp
  4175ba:	lds    ebx,FWORD PTR [esp+edi*2+0x18]
  4175be:	jl     0x417590
  4175c0:	outs   dx,BYTE PTR ds:[esi]
  4175c1:	lock sub DWORD PTR [edx-0x1f4a02b6],ebx
  4175c8:	in     al,dx
  4175c9:	repz mov al,ds:0xad7b5e34
  4175cf:	nop
  4175d0:	xchg   ebp,eax
  4175d1:	mov    DWORD PTR fs:[ecx],0x949799f5
  4175d8:	sbb    al,0xf9
  4175da:	sar    BYTE PTR [ebp-0x61],1
  4175dd:	leave  
  4175de:	sahf   
  4175df:	jp     0x4175b4
  4175e1:	dec    edi
  4175e2:	(bad)  [esi]
  4175e4:	imul   esi,DWORD PTR [esi-0x784aac74],0x1d52433b
  4175ee:	cmp    DWORD PTR [ebp+0x3c],0x3f
  4175f2:	aas    
  4175f3:	repz or eax,0xb23fd521
  4175f9:	lea    esi,[edx]
  4175fb:	das    
  4175fc:	cmc    
  4175fd:	ss dec ecx
  4175ff:	push   di
  417601:	repz leave 
  417603:	sub    DWORD PTR [ecx],ebp
  417605:	cli    
  417606:	xor    edi,DWORD PTR [edx-0x18]
  417609:	jg     0x41762e
  41760b:	ds sbb eax,0x4c802afb
  417611:	inc    edx
  417612:	ins    BYTE PTR es:[edi],dx
  417613:	retf   0xa05
  417616:	mov    BYTE PTR [ebp-0x6a93725a],bl
  41761c:	pop    es
  41761d:	das    
  41761e:	mov    esp,0x3a9dae97
  417623:	pop    esp
  417624:	mov    dl,0x6c
  417626:	imul   ebx,edx,0x176b8fed
  41762c:	push   ss
  41762d:	mov    ebx,DWORD PTR [esp+edi*8]
  417630:	call   0x7713:0x65a8091f
  417637:	xchg   edx,eax
  417638:	inc    esi
  417639:	cmp    eax,0xe9de000e
  41763e:	rcl    DWORD PTR [eax],0x86
  417641:	pop    esp
  417642:	adc    dh,dl
  417644:	xor    BYTE PTR [edx],ch
  417646:	(bad)  
  417648:	das    
  417649:	int    0x5c
  41764b:	ret    0x6914
  41764e:	cwde   
  41764f:	(bad)  
  417650:	lock mov cl,0x76
  417653:	nop
  417654:	imul   ebx,DWORD PTR [ebx],0x2c
  417657:	lahf   
  417658:	dec    ebx
  417659:	pop    esp
  41765a:	rol    DWORD PTR [edi],cl
  41765c:	repz ja 0x4176c0
  41765f:	imul   ecx,DWORD PTR [ecx-0x78],0xcaca2706
  417666:	lds    edi,FWORD PTR [ecx+0xc]
  417669:	pop    eax
  41766a:	cmp    al,0xa
  41766c:	stos   BYTE PTR es:[edi],al
  41766d:	leave  
  41766e:	adc    dh,BYTE PTR ds:0x203ce931
  417674:	dec    ecx
  417675:	arpl   WORD PTR [ecx-0x70867222],si
  41767b:	arpl   WORD PTR [edx+0x73791627],sp
  417681:	or     eax,0x2ac15c14
  417686:	push   0x57953da0
  41768b:	daa    
  41768c:	ds push esp
  41768e:	dec    ebx
  41768f:	test   BYTE PTR [edx-0x47],bl
  417692:	dec    eax
  417693:	lea    esi,[ecx-0x70]
  417696:	and    ebx,eax
  417698:	sub    bl,BYTE PTR [edi+edx*1-0x7387d082]
  41769f:	jmp    0x1bf1:0xd8fbef9d
  4176a6:	enter  0xeeb0,0x89
  4176aa:	out    dx,eax
  4176ab:	rcl    DWORD PTR [ecx+eiz*8+0x7be482f9],0x88
  4176b3:	cmc    
  4176b4:	out    dx,al
  4176b5:	mov    eax,fs
  4176b7:	fwait
  4176b8:	sahf   
  4176b9:	xchg   edx,eax
  4176ba:	cdq    
  4176bb:	jbe    0x4176d2
  4176bd:	mul    DWORD PTR [esi-0x659e9a8d]
  4176c3:	push   edi
  4176c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176c5:	mov    bl,0x2
  4176c7:	sbb    ebx,ebx
  4176c9:	or     bl,BYTE PTR [esi]
  4176cb:	cmc    
  4176cc:	pop    es
  4176cd:	xchg   edi,eax
  4176ce:	mov    WORD PTR gs:[edi-0x6a],?
  4176d2:	add    BYTE PTR [edi+0x6a206507],cl
  4176d8:	pop    ebp
  4176d9:	(bad)  
  4176db:	xchg   DWORD PTR [edx+0x318cfdd8],eax
  4176e1:	push   edx
  4176e2:	xor    BYTE PTR [esi-0x26],cl
  4176e5:	arpl   WORD PTR [eiz*8-0x4f027816],ax
  4176ec:	mov    ebp,0x15c0543d
  4176f1:	mov    dl,0xcf
  4176f3:	mov    dl,0x2
  4176f5:	jl     0x417737
  4176f7:	xchg   edx,eax
  4176f8:	and    eax,0xa79d5d68
  4176fd:	jns    0x4176c1
  4176ff:	(bad)  
  417701:	mov    al,ds:0xe30814b7
  417706:	aad    0x7
  417708:	pop    ss
  417709:	mov    ah,0xf8
  41770b:	inc    edx
  41770c:	jae    0x4176cd
  41770e:	dec    ebx
  41770f:	add    bl,BYTE PTR [ecx+ecx*2+0x7]
  417713:	mov    ch,0x17
  417715:	mov    edx,0x7975b712
  41771a:	adc    al,0x2e
  41771c:	and    eax,DWORD PTR [bp+0x63b9]
  417721:	dec    ecx
  417722:	iret   
  417723:	cmp    al,0xba
  417725:	imul   ebp,DWORD PTR [ecx+0x461eb0d8],0xffffffe5
  41772c:	and    BYTE PTR [ecx],bl
  41772e:	(bad)  
  417730:	xor    al,0x6d
  417732:	(bad)  
  417733:	pop    eax
  417734:	ins    BYTE PTR es:[edi],dx
  417735:	dec    ebx
  417736:	rol    DWORD PTR [esi-0x1],cl
  417739:	nop
  41773a:	mov    ah,0x5a
  41773c:	sbb    DWORD PTR [ebp-0x6e],0xffffff9a
  417740:	cmp    al,cl
  417742:	pop    ebp
  417743:	jg     0x4177bf
  417745:	and    al,0xf0
  417747:	sub    BYTE PTR [ebx],0x1c
  41774a:	jecxz  0x4176f8
  41774c:	mov    bh,0xf
  41774e:	push   0x5aaa78c7
  417753:	jb     0x4177d3
  417755:	bound  esi,QWORD PTR [eax-0x3a]
  417758:	out    0xaa,eax
  41775a:	retf   
  41775b:	jle    0x417738
  41775d:	ja     0x4177d6
  41775f:	lock dec edi
  417761:	pop    es
  417762:	lds    esi,FWORD PTR [eax]
  417764:	fwait
  417765:	clc    
  417766:	fidiv  WORD PTR [edx]
  417768:	addr16 pop ds
  41776a:	dec    edx
  41776b:	aam    0x15
  41776d:	test   eax,0xfaa8723e
  417772:	fmul   st,st(1)
  417774:	xchg   edx,eax
  417775:	jmp    0xbf18:0x7e87f008
  41777c:	lea    ebx,[esi-0x74]
  41777f:	mov    eax,0xeb732122
  417784:	sbb    DWORD PTR [esi],ecx
  417786:	mov    ecx,0x9247a788
  41778b:	or     eax,0xbe8d6648
  417790:	push   eax
  417791:	xchg   esi,eax
  417792:	cmp    esi,DWORD PTR [edi]
  417794:	cmp    ebp,esi
  417796:	add    al,0xff
  417798:	inc    eax
  417799:	jnp    0x41774c
  41779b:	js     0x41779c
  41779d:	push   0x6012e7f7
  4177a2:	jne    0x41779a
  4177a4:	inc    esp
  4177a5:	mov    ebx,0x25b25ac8
  4177aa:	mov    ah,0x5a
  4177ac:	mov    bh,0xa6
  4177ae:	popa   
  4177af:	mov    al,ds:0xd6dc0707
  4177b4:	and    edi,esp
  4177b6:	lods   al,BYTE PTR ds:[esi]
  4177b7:	sahf   
  4177b8:	and    esi,edi
  4177ba:	push   ecx
  4177bb:	in     eax,0xa9
  4177bd:	outs   dx,BYTE PTR ds:[esi]
  4177be:	or     ebx,ebx
  4177c0:	or     edi,DWORD PTR [esi+0x79175fbb]
  4177c6:	sbb    eax,0x573b0182
  4177cb:	popf   
  4177cc:	jnp    0x417761
  4177ce:	lods   eax,DWORD PTR ds:[esi]
  4177cf:	adc    DWORD PTR [ecx-0x33],edx
  4177d2:	pop    ebx
  4177d3:	mov    al,ds:0x5185a3ea
  4177d8:	add    DWORD PTR [edx-0xd],ebx
  4177db:	in     al,dx
  4177dc:	shr    DWORD PTR [eax-0x42a70c84],0x3f
  4177e3:	out    0x6d,al
  4177e5:	mov    edi,0x708b2afd
  4177ea:	mov    bh,0x55
  4177ec:	int    0x4b
  4177ee:	xor    BYTE PTR [edi],dl
  4177f0:	or     cl,BYTE PTR [ebp-0x78]
  4177f3:	fwait
  4177f4:	mov    dh,0x39
  4177f6:	push   es
  4177f7:	jmp    0x41783d
  4177f9:	mov    esp,0xb1446d0
  4177fe:	sbb    bl,dl
  417800:	inc    esi
  417801:	adc    DWORD PTR [ecx],0xaca3371b
  417807:	gs sbb edx,eax
  41780a:	fdivr  QWORD PTR [esi]
  41780c:	xor    al,0xa3
  41780e:	push   esi
  41780f:	mov    DWORD PTR [edx-0x17],esi
  417812:	or     al,cl
  417814:	xor    eax,0xe1a7a32f
  417819:	inc    ecx
  41781a:	dec    esp
  41781b:	sub    al,0xbd
  41781d:	not    DWORD PTR [ebx]
  41781f:	xlat   BYTE PTR ds:[ebx]
  417820:	xor    eax,0xf7bdeab5
  417825:	jmp    0x4177e7
  417827:	aam    0xd2
  417829:	clc    
  41782a:	sti    
  41782b:	cwde   
  41782c:	ret    
  41782d:	stos   DWORD PTR es:[edi],eax
  41782e:	pushf  
  41782f:	popf   
  417830:	sub    eax,0x7234ae59
  417835:	sub    eax,0x38119065
  41783a:	jne    0x417896
  41783c:	ror    DWORD PTR [ecx],1
  41783e:	jne    0x417861
  417840:	sub    ah,0xcb
  417843:	das    
  417844:	rcr    DWORD PTR [edi+0x6b],1
  417847:	mov    ecx,0x4673be3c
  41784c:	mov    eax,0x54c35e53
  417851:	adc    al,BYTE PTR [esi]
  417853:	sub    al,0xf9
  417855:	push   es
  417856:	mov    ebx,0x345dec39
  41785b:	fst    QWORD PTR [esi-0x66c6ebe5]
  417861:	fs xor al,0xc0
  417864:	(bad)  
  417865:	(bad)  
  417866:	int    0xb8
  417868:	enter  0xb5f4,0xc4
  41786c:	outs   dx,DWORD PTR ds:[esi]
  41786d:	mov    ecx,0xa35e7637
  417872:	lds    edx,FWORD PTR [esi+0x3f]
  417875:	nop
  417876:	ds cmp eax,0xd074b988
  41787c:	xor    dh,0x80
  41787f:	out    dx,al
  417880:	ss jne 0x4178d0
  417883:	or     BYTE PTR [edx-0x55f084bd],0x8c
  41788a:	or     esp,edi
  41788c:	and    al,0x1
  41788e:	mov    edi,0x6ef23ae4
  417893:	lods   eax,DWORD PTR ds:[esi]
  417894:	and    eax,0x443b3d1e
  417899:	data16 jl 0x41785a
  41789c:	sahf   
  41789d:	test   eax,0xce5620ca
  4178a2:	push   eax
  4178a3:	clc    
  4178a4:	or     al,0x34
  4178a6:	pop    ebx
  4178a7:	inc    eax
  4178a8:	jle    0x417918
  4178aa:	test   al,0x23
  4178ac:	or     esi,DWORD PTR [esi+edx*4-0xc]
  4178b0:	data16 jb 0x4178c2
  4178b3:	or     DWORD PTR [edi],ebx
  4178b5:	pop    esi
  4178b6:	sub    DWORD PTR [esi+0x3d2f21e],0xcb939e73
  4178c0:	push   ss
  4178c1:	pusha  
  4178c2:	cmp    DWORD PTR [ecx+0x7e],ebx
  4178c5:	(bad)  
  4178c6:	imul   ebx,DWORD PTR [edx],0xe
  4178c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178ca:	mov    bl,al
  4178cc:	(bad)  
  4178cd:	push   edx
  4178ce:	ret    
  4178cf:	pop    eax
  4178d0:	jnp    0x4178de
  4178d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178d3:	sub    esp,ebp
  4178d5:	add    DWORD PTR [eax-0x34],esi
  4178d8:	les    ebp,FWORD PTR [ebx]
  4178da:	dec    ebx
  4178db:	call   0x3e285879
  4178e0:	or     eax,0x44f97b3e
  4178e5:	clc    
  4178e6:	sbb    dh,BYTE PTR [ebx+0x41]
  4178e9:	xchg   edi,eax
  4178ea:	pop    esi
  4178eb:	jne    0x4178ef
  4178ed:	scas   eax,DWORD PTR es:[edi]
  4178ee:	(bad)
  4178f2:	(bad)  
  4178f4:	pop    ebx
  4178f5:	test   BYTE PTR [eax-0x2f6ea198],dl
  4178fb:	into   
  4178fc:	shl    eax,0xd7
  4178ff:	dec    edx
  417900:	neg    BYTE PTR [edx-0x28dcc21f]
  417906:	inc    edx
  417907:	imul   DWORD PTR [eax+0x42]
  41790a:	and    esi,esp
  41790c:	enter  0x1c13,0xb2
  417910:	daa    
  417911:	or     eax,esp
  417913:	sbb    DWORD PTR [eax-0x3b5e675c],edi
  417919:	push   ecx
  41791a:	xor    bh,BYTE PTR [esi]
  41791c:	and    DWORD PTR [esi],0x4b93f5eb
  417922:	dec    ecx
  417923:	test   BYTE PTR [esi-0x4a],dl
  417926:	popf   
  417927:	neg    DWORD PTR [edx+0xb801b38]
  41792d:	(bad)  
  41792e:	cwde   
  41792f:	sbb    edx,edi
  417931:	cdq    
  417932:	(bad)  
  417933:	mov    esi,0xc4dead72
  417938:	rcl    BYTE PTR [edi-0xa],1
  41793b:	cmc    
  41793c:	mov    esp,DWORD PTR [ebp+esi*1-0x54]
  417940:	aaa    
  417941:	loope  0x4178d9
  417943:	imul   esp,DWORD PTR [ebx-0x72],0x321e8d11
  41794a:	adc    cl,0x3b
  41794d:	cmp    esi,DWORD PTR [ecx]
  41794f:	push   edx
  417950:	outs   dx,BYTE PTR ds:[esi]
  417951:	pop    ecx
  417952:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417953:	push   esp
  417954:	inc    eax
  417955:	jmp    0xfeec:0xc4c5b85b
  41795c:	retf   
  41795d:	div    BYTE PTR [eax]
  41795f:	addr16 jne 0x4178f6
  417962:	cli    
  417963:	sbb    ebx,DWORD PTR [ebp-0x7436b076]
  417969:	inc    edx
  41796a:	imul   esp,esp,0x39165da8
  417970:	fs sub al,0xcf
  417973:	fnstsw WORD PTR [ebx-0x397768b7]
  417979:	icebp  
  41797a:	hlt    
  41797b:	mov    ebp,0x7d83f751
  417980:	inc    eax
  417981:	push   es
  417982:	jnp    0x417948
  417984:	call   0x93c7:0xcf3e2439
  41798b:	fnsave [eax+esi*8+0x6fc98978]
  417992:	into   
  417993:	out    0xc,eax
  417995:	iret   
  417996:	pop    ds
  417997:	pop    ecx
  417998:	cbw    
  41799a:	mov    dh,0x93
  41799c:	push   edi
  41799d:	ficomp WORD PTR [ebx-0x7c156f8b]
  4179a3:	test   ah,cl
  4179a5:	and    al,0x8a
  4179a7:	repz dec esp
  4179a9:	adc    ebx,DWORD PTR [eax-0x5980fd48]
  4179af:	(bad)  ds:[esp+ecx*1+0xcc9016d]
  4179b7:	sbb    ebx,DWORD PTR [ecx-0x63ba507c]
  4179bd:	cmp    DWORD PTR [eax+0x12],ecx
  4179c0:	push   eax
  4179c1:	push   cs
  4179c2:	dec    edx
  4179c3:	dec    ecx
  4179c4:	iret   
  4179c5:	loop   0x41799d
  4179c7:	inc    eax
  4179c8:	ret    
  4179c9:	ja     0x417a0f
  4179cb:	and    esi,edx
  4179cd:	jns    0x4179b0
  4179cf:	addr16 push edx
  4179d1:	cmp    DWORD PTR ds:0xb71623f9,eax
  4179d7:	mov    eax,0x58d40d1f
  4179dc:	mov    esi,gs
  4179de:	into   
  4179df:	repz mov bl,0xfb
  4179e2:	inc    esi
  4179e3:	push   edi
  4179e4:	iret   
  4179e5:	push   es
  4179e6:	mov    ebp,0x18099421
  4179eb:	aaa    
  4179ec:	mov    bl,0x79
  4179ee:	xchg   edx,eax
  4179ef:	pop    ebp
  4179f0:	out    0x78,eax
  4179f2:	mov    edi,0x87acbd4
  4179f7:	sub    eax,0x1765922c
  4179fc:	jl     0x417a55
  4179fe:	ror    edx,1
  417a00:	jl     0x417a7f
  417a02:	dec    esi
  417a03:	test   DWORD PTR cs:[eax-0x38],edx
  417a07:	lea    esp,[ebp-0x7d]
  417a0a:	push   esi
  417a0b:	(bad)  
  417a0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a0d:	mov    ah,0x3
  417a0f:	(bad)  
  417a10:	pop    edi
  417a11:	shr    BYTE PTR [ebx+0x205dfab6],0xc2
  417a18:	cmp    BYTE PTR [esi],0x8f
  417a1b:	sub    esi,ebx
  417a1d:	add    eax,0xae85bcbe
  417a22:	sub    eax,0x65c8f29a
  417a27:	push   0x68e2be90
  417a2c:	aas    
  417a2d:	fwait
  417a2e:	stos   DWORD PTR es:[edi],eax
  417a2f:	int    0xbb
  417a31:	inc    ebx
  417a32:	in     eax,dx
  417a33:	inc    esp
  417a34:	pop    edx
  417a35:	dec    ecx
  417a36:	jl     0x4179fd
  417a38:	lahf   
  417a39:	adc    bh,dh
  417a3b:	or     DWORD PTR [eax-0x6b],ebx
  417a3e:	or     esp,ebx
  417a40:	mov    ah,dh
  417a42:	js     0x417a93
  417a44:	xor    ch,BYTE PTR [ecx+0x29c127f2]
  417a4a:	bound  esi,QWORD PTR [ecx]
  417a4c:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  417a4e:	push   ss
  417a4f:	push   ds
  417a50:	(bad)  [edx-0x66d143ea]
  417a56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a57:	sub    cl,bh
  417a59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a5a:	ins    DWORD PTR es:[edi],dx
  417a5b:	arpl   WORD PTR [edi+ecx*1-0x6f1a2daf],sp
  417a62:	test   DWORD PTR [edx+0x74],esi
  417a65:	popa   
  417a66:	add    dh,BYTE PTR [edi+0x11]
  417a69:	lock in eax,dx
  417a6b:	pop    ecx
  417a6c:	push   es
  417a6d:	xchg   ecx,eax
  417a6e:	loop   0x417a8b
  417a70:	aas    
  417a71:	cmp    al,0xa1
  417a73:	iret   
  417a74:	imul   ebp,esp,0xd937ab9a
  417a7a:	pop    ebx
  417a7b:	pop    edx
  417a7c:	push   ebp
  417a7d:	sar    dh,0x4e
  417a80:	(bad)  
  417a81:	por    mm5,QWORD PTR [ebp-0x3fefeb19]
  417a88:	adc    DWORD PTR [edx+0x466b53ee],0x2d
  417a8f:	pop    ecx
  417a90:	std    
  417a91:	fisubr WORD PTR [esi+0x3947ce7]
  417a97:	or     DWORD PTR [ecx-0x18],ebp
  417a9a:	adc    bh,BYTE PTR cs:[eax+0x59facce8]
  417aa1:	jl     0x417b0f
  417aa3:	cmp    BYTE PTR [eax-0x79],dl
  417aa6:	ins    DWORD PTR es:[edi],dx
  417aa7:	dec    esi
  417aa8:	fst    st(1)
  417aaa:	gs add ebp,DWORD PTR ss:[edx-0x70534a82]
  417ab2:	mov    BYTE PTR [eax-0x8],al
  417ab5:	dec    bh
  417ab7:	enter  0xffcc,0xf9
  417abb:	adc    BYTE PTR [eax+0x2],ah
  417abe:	add    DWORD PTR [edi],ebx
  417ac0:	aam    0xf2
  417ac2:	adc    eax,0xd7cc8ba3
  417ac7:	cmp    ebp,edi
  417ac9:	bound  eax,QWORD PTR [edi]
  417acb:	fcomp  DWORD PTR [edi]
  417acd:	test   ebx,ebp
  417acf:	ins    DWORD PTR es:[edi],dx
  417ad0:	push   edx
  417ad1:	sub    ebp,DWORD PTR [esi]
  417ad3:	push   eax
  417ad4:	inc    eax
  417ad5:	dec    ebp
  417ad6:	popa   
  417ad7:	dec    ebp
  417ad8:	and    BYTE PTR [ebx+ebp*2+0x589fd077],cl
  417adf:	inc    ebx
  417ae0:	in     eax,0x56
  417ae2:	pop    edi
  417ae3:	mov    es,WORD PTR [edx+0xffafc19]
  417ae9:	in     eax,dx
  417aea:	xor    ebx,edi
  417aec:	or     BYTE PTR [edx+edi*1+0x9f2b2fc],al
  417af3:	jmp    0xd7cb:0x965923a3
  417afa:	mov    BYTE PTR [edi+0x1a],ch
  417afd:	inc    ecx
  417afe:	xchg   edx,eax
  417aff:	add    DWORD PTR fs:[ecx],edx
  417b02:	sti    
  417b03:	fsubr  DWORD PTR [ecx+edx*2+0x4a]
  417b07:	inc    eax
  417b08:	mov    bl,0x6d
  417b0a:	dec    ebx
  417b0b:	mov    al,ds:0xfada059a
  417b10:	pop    eax
  417b11:	leave  
  417b12:	xor    eax,0xd87b6c8f
  417b17:	mov    ch,0x81
  417b19:	mov    ebp,0x92fd1554
  417b1e:	jp     0x417b56
  417b20:	in     eax,0x73
  417b22:	sbb    BYTE PTR [eax],dl
  417b24:	jo     0x417b89
  417b26:	pop    ss
  417b27:	cmp    al,0x11
  417b29:	inc    ebp
  417b2a:	pop    esp
  417b2b:	shrd   esp,edi,cl
  417b2e:	fadd   QWORD PTR [esi-0x64654104]
  417b34:	jno    0x417b2d
  417b36:	aas    
  417b37:	shl    eax,0x33
  417b3a:	ja     0x417b9d
  417b3c:	nop
  417b3d:	adc    dl,BYTE PTR [edx]
  417b3f:	lods   eax,DWORD PTR ds:[esi]
  417b40:	mov    dl,0x9f
  417b42:	enter  0xc59b,0xde
  417b46:	pop    ebp
  417b47:	jb     0x417b1f
  417b49:	cmp    esi,DWORD PTR [edi+0x5]
  417b4c:	pop    edx
  417b4d:	jmp    0x417ba6
  417b4f:	dec    esi
  417b50:	jno    0x417bbc
  417b52:	adc    eax,0x668ccdd7
  417b57:	jl     0x417b15
  417b59:	mov    eax,ds:0xabd05a05
  417b5e:	pop    ss
  417b5f:	push   0x4bdb5430
  417b64:	and    DWORD PTR [eax],ecx
  417b66:	jmp    0x61b9971b
  417b6b:	jmp    0x628c9f59
  417b70:	lods   eax,DWORD PTR ds:[esi]
  417b71:	push   edi
  417b72:	xor    bh,ch
  417b74:	sub    eax,0x5459d918
  417b79:	sahf   
  417b7a:	sbb    al,BYTE PTR [edi]
  417b7c:	or     al,0x52
  417b7e:	and    al,0x88
  417b80:	pop    ds
  417b81:	cmp    al,0x74
  417b83:	icebp  
  417b84:	push   edx
  417b85:	adc    DWORD PTR [ebp-0x3c4ba927],0xffffffe8
  417b8c:	xor    eax,0x2f420a7f
  417b91:	ins    BYTE PTR es:[edi],dx
  417b92:	mov    BYTE PTR [edi+0x6e],dl
  417b95:	cmp    al,BYTE PTR [edx-0x4b]
  417b98:	or     BYTE PTR [esi],bh
  417b9a:	dec    esp
  417b9b:	push   0x46
  417b9d:	cmp    DWORD PTR [ebp-0x4e],ecx
  417ba0:	out    dx,eax
  417ba1:	xchg   BYTE PTR [edx-0x6a],al
  417ba4:	and    BYTE PTR [bp-0x7e8d],0xe6
  417baa:	jae    0x417c13
  417bac:	dec    eax
  417bad:	icebp  
  417bae:	aad    0x73
  417bb0:	ficom  WORD PTR [eax-0x796d022]
  417bb6:	sbb    al,0xb9
  417bb8:	xchg   ebx,eax
  417bb9:	cwde   
  417bba:	sub    al,0xe1
  417bbc:	add    al,0x1c
  417bbe:	daa    
  417bbf:	mov    al,0x9a
  417bc1:	shl    DWORD PTR [edx],1
  417bc3:	fisttp WORD PTR [edi-0x15bbc41c]
  417bc9:	add    eax,0xeb21e413
  417bce:	adc    cl,BYTE PTR [ebp-0x73]
  417bd1:	jmp    0x8dc9d87e
  417bd6:	push   edi
  417bd7:	icebp  
  417bd8:	xor    al,0x8b
  417bda:	xor    DWORD PTR [ebx-0x1f09a820],ecx
  417be0:	sbb    esp,DWORD PTR [edi]
  417be2:	cmp    al,0x3a
  417be4:	inc    esi
  417be5:	mov    al,ds:0xaa6e229f
  417bea:	sub    eax,0x6b2e728d
  417bef:	jmp    0xf23f:0x26c2715
  417bf6:	popf   
  417bf7:	xchg   ebp,eax
  417bf8:	cmp    bl,BYTE PTR [edx+0x40]
  417bfb:	test   al,0x5
  417bfd:	outs   dx,BYTE PTR ds:[esi]
  417bfe:	aad    0x8a
  417c00:	sbb    dh,al
  417c02:	js     0x417ba4
  417c04:	push   eax
  417c05:	out    0xda,eax
  417c07:	cli    
  417c08:	xor    al,0xc9
  417c0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c0b:	ss adc ebx,edx
  417c0e:	mov    ecx,DWORD PTR [ecx+0x5890a310]
  417c14:	jns    0x417c45
  417c16:	fstp   QWORD PTR [edi]
  417c18:	(bad)  
  417c19:	xor    BYTE PTR [esi],0xab
  417c1c:	cmp    BYTE PTR [eax],0x2
  417c1f:	aas    
  417c20:	std    
  417c21:	outs   dx,DWORD PTR ds:[esi]
  417c22:	rcr    DWORD PTR [ebp-0x15],0xfc
  417c26:	clc    
  417c27:	lea    esi,[ebx]
  417c29:	mov    dh,0x7f
  417c2b:	in     al,dx
  417c2c:	mov    esi,0xde68706d
  417c31:	ja     0x417beb
  417c33:	out    dx,eax
  417c34:	mov    eax,0x28fb0ef5
  417c39:	push   cs
  417c3a:	dec    esp
  417c3b:	popa   
  417c3c:	sti    
  417c3d:	pop    ebp
  417c3e:	iret   
  417c3f:	push   esp
  417c40:	pop    ss
  417c41:	lahf   
  417c42:	in     al,dx
  417c43:	jae    0x417c31
  417c45:	jne    0x417c3c
  417c47:	aaa    
  417c48:	add    DWORD PTR [ebx],eax
  417c4a:	in     al,0xbd
  417c4c:	fwait
  417c4d:	jo     0x417c3f
  417c4f:	add    BYTE PTR [ebx-0x3a],0xd8
  417c53:	aam    0xe8
  417c55:	scas   eax,DWORD PTR es:[edi]
  417c56:	fcom   QWORD PTR [ecx-0x75db963b]
  417c5c:	push   0x1f643ab6
  417c61:	fst    st(6)
  417c63:	fild   QWORD PTR [eax]
  417c65:	in     eax,0xca
  417c67:	sbb    BYTE PTR [ecx-0x6b66676a],bl
  417c6d:	pop    esi
  417c6e:	cmp    bl,al
  417c70:	jmp    0x5d31c84d
  417c75:	xor    ch,BYTE PTR es:[ebp-0x70b5817d]
  417c7c:	or     ebx,DWORD PTR [ecx-0x18]
  417c7f:	xchg   ebx,eax
  417c80:	sbb    bh,BYTE PTR [edi]
  417c82:	sub    dh,dl
  417c84:	pop    ds
  417c85:	rol    DWORD PTR [ebp-0x11],1
  417c88:	jne    0x417c3c
  417c8a:	(bad)  
  417c8c:	pop    edi
  417c8d:	mov    dl,0x9a
  417c8f:	mov    cl,0xd3
  417c91:	xor    DWORD PTR [ebp-0x51],ebp
  417c94:	ror    DWORD PTR [ebx-0x3a],0x39
  417c98:	ror    BYTE PTR [edi+0x37],1
  417c9b:	xchg   edi,eax
  417c9c:	ret    
  417c9d:	fucom  st(0)
  417c9f:	push   eax
  417ca0:	retf   
  417ca1:	les    ecx,FWORD PTR [edx+0x47]
  417ca4:	xlat   BYTE PTR ds:[ebx]
  417ca5:	xor    BYTE PTR [esi-0x78],ch
  417ca8:	inc    eax
  417ca9:	sar    DWORD PTR [ebx],0x4d
  417cac:	pop    ebp
  417cad:	mov    dh,0x72
  417caf:	mov    ebp,DWORD PTR [ebx-0x765b774b]
  417cb5:	out    0x4,eax
  417cb7:	clc    
  417cb8:	cdq    
  417cb9:	adc    eax,0x7f4e32fb
  417cbe:	cmp    ebp,DWORD PTR [ebp-0x7951680]
  417cc4:	pop    ebp
  417cc5:	retf   
  417cc6:	xor    edx,DWORD PTR [eax+0xf926c86]
  417ccc:	mov    ds:0x8f0156b7,al
  417cd1:	shr    ecx,1
  417cd3:	mov    dh,BYTE PTR gs:[ebp+0x7]
  417cd7:	outs   dx,BYTE PTR ds:[esi]
  417cd8:	or     al,0x97
  417cda:	shl    BYTE PTR [edx+edx*2+0xe],cl
  417cde:	xchg   edi,eax
  417cdf:	js     0x417c69
  417ce1:	sbb    al,0xb5
  417ce3:	adc    BYTE PTR [edx+0xc],dh
  417ce6:	sbb    dl,ch
  417ce8:	or     DWORD PTR ds:0x88bfd2b3,ebp
  417cee:	test   eax,0x6abcabcf
  417cf3:	cmp    ah,0x67
  417cf6:	cmp    eax,0xb7283709
  417cfb:	cmp    eax,edi
  417cfd:	and    DWORD PTR [ebx],edi
  417cff:	xor    DWORD PTR [eax+0x6f04794c],0xb1d4eb67
  417d09:	inc    ebp
  417d0a:	xchg   ebx,eax
  417d0b:	and    esp,edi
  417d0d:	push   0xffffff9b
  417d0f:	dec    ebx
  417d11:	pop    ebp
  417d12:	ficomp WORD PTR [edx+0x7c]
  417d15:	out    dx,eax
  417d16:	xchg   DWORD PTR [ecx],ebp
  417d18:	cld    
  417d19:	pop    ecx
  417d1a:	sbb    BYTE PTR [edx-0x3b],cl
  417d1d:	icebp  
  417d1e:	adc    esp,esp
  417d20:	cmp    ch,BYTE PTR [ebx+0x2b30a135]
  417d26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d27:	mov    ds:0xc1fccc7,al
  417d2c:	or     al,0xa2
  417d2e:	mov    eax,0x9c7fda58
  417d33:	or     al,0xd7
  417d35:	data16 and ch,dl
  417d38:	inc    ebp
  417d39:	pop    ss
  417d3a:	jg     0x417cbd
  417d3c:	push   esp
  417d3d:	loopne 0x417d8d
  417d3f:	ds pop ebx
  417d41:	clc    
  417d42:	sti    
  417d43:	(bad)  
  417d44:	xor    al,BYTE PTR [edi+0x55]
  417d47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d48:	faddp  st(5),st
  417d4a:	cmp    dl,BYTE PTR [esi+edx*4]
  417d4d:	int3   
  417d4e:	push   ss
  417d4f:	xor    dh,BYTE PTR [eax-0x6b]
  417d52:	xchg   edx,eax
  417d53:	(bad)  
  417d54:	mov    al,0x9c
  417d56:	fadd   DWORD PTR [ebx]
  417d58:	ins    DWORD PTR es:[edi],dx
  417d59:	mov    eax,0xbd55fee5
  417d5e:	xrelease xchg BYTE PTR cs:[ebx],bl
  417d62:	je     0x417d33
  417d64:	inc    ebp
  417d65:	pop    edi
  417d66:	aad    0xdc
  417d68:	inc    ebx
  417d69:	push   edi
  417d6a:	hlt    
  417d6b:	scas   eax,DWORD PTR es:[edi]
  417d6c:	mov    ds:0xc83ffe56,al
  417d71:	adc    BYTE PTR [eax],dl
  417d73:	dec    ebx
  417d74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d75:	hlt    
  417d76:	int3   
  417d77:	scas   al,BYTE PTR es:[edi]
  417d78:	outs   dx,BYTE PTR ds:[esi]
  417d79:	xchg   edx,eax
  417d7a:	call   DWORD PTR [edx]
  417d7c:	arpl   WORD PTR [edx-0x78],bp
  417d7f:	or     ebp,DWORD PTR [esi+0x5f3d6a03]
  417d85:	pop    ebx
  417d86:	dec    esp
  417d87:	repz call 0xd4f03540
  417d8d:	retf   0x5a96
  417d90:	sub    DWORD PTR [edx-0x28],esp
  417d93:	pop    ss
  417d94:	fdiv   QWORD PTR [eax+0x50d70a2e]
  417d9a:	xor    esi,DWORD PTR [ebx+edi*1]
  417d9d:	jg     0x417dce
  417d9f:	mov    edx,0xb7bc8647
  417da4:	ror    ebx,1
  417da6:	scas   eax,DWORD PTR es:[edi]
  417da7:	fmul   st,st(5)
  417da9:	call   0x9d8f504b
  417dae:	clc    
  417daf:	push   es
  417db0:	dec    edx
  417db1:	jp     0x417d70
  417db3:	cs mov cl,0x0
  417db6:	mov    bh,bh
  417db8:	mov    eax,ds:0x4b7959fa
  417dbd:	dec    ebp
  417dbe:	and    al,0x12
  417dc0:	ds popf 
  417dc2:	mov    DWORD PTR [ebp+0x2514ef7a],eax
  417dc8:	int3   
  417dc9:	outs   dx,DWORD PTR ds:[esi]
  417dca:	sub    eax,0xe0aa3c50
  417dcf:	xchg   esp,eax
  417dd0:	sub    ch,BYTE PTR [ebp+0x10db3c06]
  417dd6:	es mov edi,0x273619c6
  417ddc:	xchg   ebx,eax
  417ddd:	cmp    eax,0xd87890a3
  417de2:	mov    al,ds:0xb3dcbb23
  417de7:	icebp  
  417de8:	sbb    eax,0x16a686f5
  417ded:	xchg   ebp,eax
  417dee:	scas   al,BYTE PTR es:[edi]
  417def:	and    eax,0x896eb2c5
  417df4:	xor    esi,ebp
  417df6:	sahf   
  417df7:	dec    edx
  417df8:	and    DWORD PTR [ecx],esp
  417dfa:	mov    eax,esi
  417dfc:	not    BYTE PTR [ebx]
  417dfe:	or     eax,0x7838c496
  417e03:	addr16 pop esi
  417e05:	push   cs
  417e06:	pop    edi
  417e07:	fsub   DWORD PTR [esi]
  417e09:	inc    eax
  417e0a:	sub    ch,BYTE PTR [esi+0x205919d8]
  417e10:	adc    ebp,esp
  417e12:	sti    
  417e13:	hlt    
  417e14:	js     0x417e23
  417e16:	sub    al,0x87
  417e18:	mov    bh,0x5f
  417e1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e1b:	cwde   
  417e1c:	outs   dx,DWORD PTR ds:[esi]
  417e1d:	out    dx,al
  417e1e:	xlat   BYTE PTR ds:[ebx]
  417e1f:	cmp    DWORD PTR [ebp-0x20a4b33],esp
  417e25:	xchg   BYTE PTR [ebx+0x6349c679],dh
  417e2b:	jb     0x417dc6
  417e2d:	jns    0x417e78
  417e2f:	scas   eax,DWORD PTR es:[edi]
  417e30:	mov    al,ds:0xae283c8a
  417e35:	xchg   ebp,eax
  417e36:	cmp    BYTE PTR [esi-0x6c],0x5f
  417e3a:	inc    edx
  417e3b:	push   cs
  417e3c:	in     al,dx
  417e3d:	push   esp
  417e3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e3f:	rol    DWORD PTR [eax],0x18
  417e42:	or     al,0x93
  417e44:	popa   
  417e45:	sbb    al,0xac
  417e47:	xchg   esi,eax
  417e48:	sub    BYTE PTR [ecx],al
  417e4a:	psubd  mm5,mm4
  417e4d:	and    DWORD PTR [edx],eax
  417e4f:	daa    
  417e50:	jb     0x417dde
  417e52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e53:	sti    
  417e54:	dec    edx
  417e55:	push   ds
  417e56:	jge    0x417e5b
  417e58:	cdq    
  417e59:	dec    esp
  417e5a:	push   esp
  417e5b:	pop    eax
  417e5c:	loope  0x417e9b
  417e5e:	push   es
  417e5f:	and    al,0xcc
  417e61:	js     0x417e2e
  417e63:	ins    DWORD PTR es:[edi],dx
  417e64:	dec    ebx
  417e65:	dec    esi
  417e66:	out    0xb2,eax
  417e68:	pop    es
  417e69:	push   ebp
  417e6a:	mov    bh,0x7b
  417e6c:	sbb    BYTE PTR [esi+0x3d],ch
  417e6f:	in     eax,0xc2
  417e71:	dec    edx
  417e72:	mov    eax,0x760e0ed5
  417e77:	adc    al,0xe9
  417e79:	adc    dl,cl
  417e7b:	add    eax,0x56048460
  417e80:	aas    
  417e81:	inc    eax
  417e82:	add    dl,cl
  417e84:	xchg   ebp,eax
  417e85:	addr16 popf 
  417e87:	fdiv   DWORD PTR [ebp+0x877fa62]
  417e8d:	mov    edi,0xf9198c53
  417e92:	cmp    DWORD PTR [ebp+0x21d77cfc],eax
  417e98:	nop
  417e99:	shr    edx,0x3f
  417e9c:	inc    ebx
  417e9d:	mov    ch,0x8
  417e9f:	retf   
  417ea0:	xchg   ebx,eax
  417ea1:	mov    ebx,0x5d3cc361
  417ea6:	add    eax,0xfe98e705
  417eab:	and    eax,0xb6cf8e0b
  417eb0:	jl     0x417e3a
  417eb2:	jge    0x417e36
  417eb4:	push   cs
  417eb5:	test   BYTE PTR [ebx],ah
  417eb7:	xchg   ebx,eax
  417eb8:	cs mov esp,0x309d4fbf
  417ebe:	mov    bh,0xb5
  417ec0:	mov    edx,0x75af50b9
  417ec5:	(bad)  
  417ec6:	ror    DWORD PTR [ebx+ebx*8+0x19ebca32],cl
  417ecd:	cmp    bl,ah
  417ecf:	enter  0xa231,0x63
  417ed3:	sub    esp,DWORD PTR [edi+0x52]
  417ed6:	or     eax,0x9c67f501
  417edb:	mov    ecx,0x8ba42aa5
  417ee0:	mov    ds:0xdccd3ddc,eax
  417ee5:	pop    ss
  417ee6:	aaa    
  417ee7:	jne    0x417e6d
  417ee9:	dec    edx
  417eea:	dec    esp
  417eeb:	adc    cl,bl
  417eed:	test   BYTE PTR [esi+eiz*8+0x3],0x86
  417ef2:	shl    DWORD PTR [ebp-0x35],cl
  417ef5:	mov    ds:0xfdb08fe3,eax
  417efa:	rcr    esp,1
  417efc:	jo     0x417ee9
  417efe:	out    0xbf,al
  417f00:	jno    0x417ed4
  417f02:	xlat   BYTE PTR ds:[ebx]
  417f03:	in     al,0x38
  417f05:	jb     0x417ef2
  417f07:	xchg   ebp,eax
  417f08:	xlat   BYTE PTR ds:[ebx]
  417f09:	pop    ds
  417f0a:	and    al,0x48
  417f0c:	mov    dh,0x3
  417f0e:	mov    al,0xe8
  417f10:	or     ebp,esi
  417f12:	or     ah,dh
  417f14:	clc    
  417f15:	iret   
  417f16:	rcl    DWORD PTR [ebx],cl
  417f18:	xchg   ebp,eax
  417f19:	jo     0x417f49
  417f1b:	push   ebp
  417f1c:	in     eax,0x5
  417f1e:	jno    0x417ead
  417f20:	out    dx,al
  417f21:	mov    ecx,0x7954fbdb
  417f26:	mov    ss,WORD PTR ds:0xc16566c3
  417f2c:	test   DWORD PTR [ecx-0x5f7ebf],0x3bd73d7b
  417f36:	lods   eax,DWORD PTR ds:[esi]
  417f37:	arpl   WORD PTR [edi-0x7cb766b7],sp
  417f3d:	xor    BYTE PTR [ecx+0x21bc5e8d],dl
  417f43:	push   ecx
  417f44:	jno    0x417f12
  417f46:	data16 cli 
  417f48:	mov    eax,ds:0xf0d43ef
  417f4d:	jg     0x417f8a
  417f4f:	popa   
  417f50:	call   DWORD PTR [ebp+edi*2-0x19]
  417f54:	dec    ebp
  417f55:	sbb    al,0x8
  417f57:	jno    0x417f20
  417f59:	mov    bl,BYTE PTR [esp+ebp*1]
  417f5c:	repnz push edi
  417f5e:	ins    DWORD PTR es:[edi],dx
  417f5f:	inc    esp
  417f60:	test   bl,0xa5
  417f63:	adc    eax,0xb9c373a0
  417f68:	push   ss
  417f69:	clc    
  417f6a:	cwde   
  417f6b:	aas    
  417f6c:	dec    ecx
  417f6d:	aam    0xf8
  417f6f:	cmp    eax,0xb07ee569
  417f74:	xchg   esp,eax
  417f75:	and    eax,0x5fad8881
  417f7a:	imul   ebx,DWORD PTR [eax+ebx*8],0x6c4f601
  417f81:	inc    edi
  417f82:	jae    0x417fed
  417f84:	cmp    eax,0xea45dfaf
  417f89:	repnz or DWORD PTR [eax+eax*8-0x1a2954fd],esp
  417f91:	sub    esi,edx
  417f93:	adc    ecx,ecx
  417f95:	jmp    0xb02:0xa1ad5c2a
  417f9c:	cdq    
  417f9d:	push   edx
  417f9e:	cld    
  417f9f:	mul    DWORD PTR [edx+0x137ea11]
  417fa5:	mov    ch,0x3a
  417fa7:	ficomp DWORD PTR [eax]
  417fa9:	enter  0x8838,0x90
  417fad:	repz push ds
  417faf:	pop    esi
  417fb0:	mov    DWORD PTR [eax],ebp
  417fb2:	mov    bh,BYTE PTR [ecx+0x4371354c]
  417fb8:	pop    esi
  417fb9:	ss cmp al,0xa
  417fbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fbd:	xor    dl,BYTE PTR [esi]
  417fbf:	daa    
  417fc0:	mov    ds:0x526cfeb6,al
  417fc5:	jp     0x417ff3
  417fc7:	push   0x1c
  417fc9:	add    ecx,ecx
  417fcb:	and    ch,bl
  417fcd:	test   DWORD PTR [ecx+0x24e4b08c],edi
  417fd3:	dec    esp
  417fd4:	pop    edi
  417fd5:	fadd   DWORD PTR [eax]
  417fd7:	shl    BYTE PTR [esi],1
  417fd9:	cwde   
  417fda:	sbb    BYTE PTR [edx-0x13edef4e],bl
  417fe0:	pop    edi
  417fe1:	inc    esi
  417fe2:	ja     0x417f90
  417fe4:	push   ebx
  417fe5:	dec    ecx
  417fe6:	jp     0x418054
  417fe8:	inc    ebx
  417fe9:	inc    esp
  417fea:	arpl   WORD PTR [edx],sp
  417fec:	das    
  417fed:	sbb    bh,BYTE PTR [edx]
  417fef:	xor    BYTE PTR [edi],al
  417ff1:	add    eax,0xdd615931
  417ff6:	dec    esi
  417ff7:	pop    edx
  417ff8:	xchg   eax,edx
  417ffa:	dec    ecx
  417ffb:	div    ecx
  417ffd:	mov    ch,0x85
  417fff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418000:	test   eax,0x1553f5cc
  418005:	stos   DWORD PTR es:[edi],eax
  418006:	(bad)  
  418007:	nop
  418008:	and    edx,DWORD PTR [edi]
  41800a:	xchg   esi,eax
  41800b:	mov    edx,0x7592ce5d
  418010:	pop    es
  418011:	lods   al,BYTE PTR ds:[esi]
  418012:	(bad)  
  418013:	out    dx,al
  418014:	out    0x2e,eax
  418016:	aam    0x5e
  418018:	lods   eax,DWORD PTR ds:[esi]
  418019:	rol    DWORD PTR [ebp+0x7281ee11],1
  41801f:	mov    ds:0xe9c357f8,al
  418024:	push   ebp
  418025:	in     eax,0x1e
  418027:	(bad)  
  418028:	lea    ebx,[esi]
  41802a:	xchg   ch,bh
  41802c:	(bad)  
  41802d:	lea    ecx,[eax+0x1b923015]
  418033:	add    DWORD PTR [ebx],eax
  418035:	test   eax,0xf0466890
  41803a:	xchg   esi,eax
  41803b:	arpl   WORD PTR [esi+0x50a0fea8],ax
  418041:	out    dx,eax
  418042:	ret    0xe7f5
  418045:	test   eax,0xf6d25f3
  41804a:	sbb    eax,0xdb40e360
  41804f:	sub    ecx,0x71
  418052:	rol    BYTE PTR [ecx],cl
  418054:	dec    ecx
  418055:	jno    0x418015
  418057:	cmp    BYTE PTR [ebp-0x5bd95553],0x8c
  41805e:	fadd   st(2),st
  418060:	sbb    eax,0xd2188665
  418065:	loopne 0x41805e
  418067:	inc    esi
  418068:	xor    ah,bl
  41806a:	jmp    0xc05ec908
  41806f:	popa   
  418070:	cld    
  418071:	push   edi
  418072:	sti    
  418073:	pop    edx
  418074:	sub    DWORD PTR [ecx+0x4d],esp
  418077:	xchg   DWORD PTR [edi],edx
  418079:	dec    esi
  41807a:	dec    ecx
  41807b:	les    ebx,FWORD PTR [esi-0x33]
  41807e:	sbb    dh,BYTE PTR [edi-0x3be53264]
  418084:	xor    DWORD PTR [edx+0x5f193f1],ecx
  41808a:	ja     0x4180bb
  41808c:	or     cl,BYTE PTR [ecx+0x43]
  41808f:	outs   dx,BYTE PTR ds:[esi]
  418090:	xor    DWORD PTR ds:[ecx-0xb23ed2e],ebp
  418097:	popf   
  418098:	or     BYTE PTR [eax],ah
  41809a:	mov    ah,0x64
  41809c:	mov    dh,0x4e
  41809e:	mov    DWORD PTR [edi],esp
  4180a0:	js     0x4180cd
  4180a2:	pusha  
  4180a3:	out    0x93,al
  4180a5:	mov    ah,BYTE PTR [ecx+0x67]
  4180a8:	sbb    DWORD PTR [edx+esi*1-0x599c121c],edi
  4180af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180b0:	cmc    
  4180b1:	aad    0xf4
  4180b3:	mov    dl,0x4b
  4180b5:	sub    al,0xfd
  4180b7:	cs jg  0x418095
  4180ba:	push   0x3f
  4180bc:	mov    ah,0x7
  4180be:	dec    edx
  4180bf:	inc    ebx
  4180c0:	pop    ss
  4180c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180c2:	pop    edi
  4180c3:	or     eax,0x1fa0cf7d
  4180c8:	or     dl,al
  4180ca:	lods   al,BYTE PTR ds:[esi]
  4180cb:	push   es
  4180cc:	jnp    0x4180a6
  4180ce:	or     cl,BYTE PTR [ecx-0x284e112c]
  4180d4:	shl    BYTE PTR [edi+0x6d],1
  4180d7:	(bad)  
  4180d8:	mov    ecx,0x2cae7547
  4180dd:	data16 je 0x418087
  4180e0:	or     BYTE PTR [eax],bl
  4180e2:	mov    esp,0x1d234a5f
  4180e7:	hlt    
  4180e8:	add    eax,0x8df0fdbd
  4180ed:	retf   0x7bdb
  4180f0:	dec    edi
  4180f1:	jmp    0x418123
  4180f3:	(bad)
  4180f6:	ins    DWORD PTR es:[edi],dx
  4180f7:	mov    eax,ds:0xb0551c73
  4180fc:	mov    WORD PTR [ebp-0x51],ss
  4180ff:	aas    
  418100:	mov    ds:0x684419d6,eax
  418105:	enter  0x951b,0x76
  418109:	aam    0xcc
  41810b:	adc    BYTE PTR [ebp-0x3],ch
  41810e:	xchg   esi,eax
  41810f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418110:	ins    BYTE PTR es:[edi],dx
  418111:	icebp  
  418112:	outs   dx,BYTE PTR ds:[esi]
  418113:	imul   esi,DWORD PTR [edi],0xe38f6bdd
  418119:	dec    ebp
  41811a:	or     ah,BYTE PTR [ecx]
  41811c:	ficom  DWORD PTR [eax]
  41811e:	push   0x993266f
  418123:	fistp  WORD PTR [edx-0x780f5732]
  418129:	pop    ecx
  41812a:	loopne 0x4181a2
  41812c:	mov    ds:0xd423ce93,eax
  418131:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418132:	pop    esi
  418133:	imul   ecx,DWORD PTR [edi],0x8d517202
  418139:	jp     0x4181aa
  41813b:	jo     0x4180ca
  41813d:	(bad)  [ebp-0x203f2ee3]
  418143:	pop    ebp
  418144:	stos   DWORD PTR es:[edi],eax
  418145:	test   eax,0xd520f4f7
  41814a:	stos   DWORD PTR es:[edi],eax
  41814b:	cwde   
  41814c:	popa   
  41814d:	outs   dx,BYTE PTR ds:[esi]
  41814e:	out    0xa0,al
  418150:	pop    ss
  418151:	push   eax
  418152:	out    0x47,eax
  418154:	push   ss
  418155:	adc    esi,eax
  418157:	cmp    BYTE PTR [edi+0x17a1db29],dl
  41815d:	add    DWORD PTR [edi+ecx*2-0x56],edx
  418161:	inc    eax
  418162:	stc    
  418163:	dec    ecx
  418164:	cs stos DWORD PTR es:[edi],eax
  418166:	ins    BYTE PTR es:[edi],dx
  418167:	cdq    
  418168:	mov    ebx,0xce7d761c
  41816d:	xchg   ebp,eax
  41816e:	inc    ecx
  41816f:	pop    ds
  418170:	imul   esi,DWORD PTR [ebx],0xdc9b371f
  418176:	dec    esi
  418177:	mov    eax,0xb2d41b3
  41817c:	push   ds
  41817d:	mov    ah,0xe6
  41817f:	pop    ebp
  418180:	popf   
  418181:	retf   0xf688
  418184:	push   cs
  418185:	add    eax,0x131ca59
  41818a:	pop    es
  41818b:	aas    
  41818c:	ins    BYTE PTR es:[edi],dx
  41818d:	xchg   BYTE PTR [esi+0x8],al
  418190:	mov    ecx,0xb8cc3e08
  418195:	or     bl,cl
  418197:	leave  
  418198:	and    ebp,DWORD PTR [ecx+0x45]
  41819b:	inc    esi
  41819c:	lock mov esi,0x1ae0334e
  4181a2:	push   edi
  4181a3:	repz loope 0x41816d
  4181a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181a7:	out    0x2a,eax
  4181a9:	popf   
  4181aa:	mov    cl,0xb7
  4181ac:	dec    esi
  4181ad:	les    esp,FWORD PTR [edi-0x720e40b5]
  4181b3:	pusha  
  4181b4:	sub    bl,0xff
  4181b7:	ja     0x418158
  4181b9:	outs   dx,DWORD PTR ds:[esi]
  4181ba:	cld    
  4181bb:	xor    al,0x78
  4181be:	outs   dx,DWORD PTR ds:[esi]
  4181bf:	inc    esp
  4181c0:	mov    dl,0x42
  4181c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181c3:	lahf   
  4181c4:	out    0x8d,al
  4181c6:	in     eax,0x88
  4181c8:	ins    DWORD PTR es:[edi],dx
  4181c9:	jns    0x4181bb
  4181cb:	in     eax,dx
  4181cc:	ins    DWORD PTR es:[edi],dx
  4181cd:	dec    ebp
  4181ce:	rol    dl,cl
  4181d0:	fcomp  DWORD PTR [edi-0xbc0f4d1]
  4181d6:	push   ebx
  4181d7:	xor    DWORD PTR [eax+0x291f5b11],edi
  4181dd:	test   al,0x6b
  4181df:	lahf   
  4181e0:	rcr    DWORD PTR [ebx-0x17],cl
  4181e3:	mov    ds:0x8ac40eae,eax
  4181e8:	cmp    al,0x77
  4181ea:	mov    ebx,0xc5827241
  4181ef:	je     0x4181a7
  4181f1:	in     eax,dx
  4181f2:	jge    0x4181fa
  4181f4:	idiv   BYTE PTR [ebp-0x36]
  4181f7:	xchg   BYTE PTR [edi+0x2a1e39e5],dl
  4181fd:	push   0x5c
  4181ff:	jmp    0xe512:0xda28aa26
  418206:	push   eax
  418207:	jnp    0x41823f
  418209:	cmp    DWORD PTR [eax+0x716b11b],0xd3a65ccd
  418213:	mov    ebx,0x84f4ded5
  418218:	pop    eax
  418219:	push   ebp
  41821a:	sub    eax,0x610117bb
  41821f:	sbb    eax,0xf3776890
  418224:	out    dx,eax
  418225:	mov    edx,0x9c5ec24f
  41822a:	push   ebp
  41822b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41822d:	bound  edx,QWORD PTR [ebx-0xb]
  418230:	inc    edi
  418231:	cli    
  418232:	mov    edx,eax
  418234:	push   ebx
  418235:	push   edi
  418236:	xlat   BYTE PTR ds:[ebx]
  418237:	push   edx
  418238:	push   ecx
  418239:	inc    esp
  41823a:	sahf   
  41823b:	aas    
  41823c:	lea    esp,[edi]
  41823e:	sar    DWORD PTR [esp+ebx*2+0x50],0x65
  418243:	call   0x632d:0x9e4ab71b
  41824a:	shr    BYTE PTR [esi],0xfd
  41824d:	ss cli 
  41824f:	mov    eax,0x8378e418
  418254:	stos   BYTE PTR es:[edi],al
  418255:	mov    eax,0x30fb03dd
  41825a:	mov    bl,0xb9
  41825c:	xor    al,0x76
  41825e:	jle    0x41828b
  418260:	xor    dl,BYTE PTR [ebx+0x64e4c853]
  418266:	sbb    DWORD PTR [esi+0x58dbf994],0xffffffee
  41826d:	jne    0x4182c6
  41826f:	adc    ch,BYTE PTR [edx]
  418271:	inc    esi
  418272:	stos   DWORD PTR es:[edi],eax
  418273:	jle    0x4182ab
  418275:	shl    BYTE PTR [esi-0x3d13f97f],0x72
  41827c:	sahf   
  41827d:	cmp    al,0x2
  41827f:	nop
  418280:	aas    
  418281:	data16 fistp DWORD PTR [eax-0x4b]
  418285:	rol    BYTE PTR [ecx+eax*2+0x17c95fac],cl
  41828c:	mov    dh,0xb8
  41828e:	hlt    
  41828f:	fiadd  DWORD PTR [edi+0x3b]
  418292:	xor    esi,ebp
  418294:	out    0x19,al
  418296:	fisub  DWORD PTR [eax-0x5a53d055]
  41829c:	data16 sti 
  41829e:	cld    
  41829f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182a0:	cwde   
  4182a1:	hlt    
  4182a2:	clc    
  4182a3:	fldenv [eax]
  4182a5:	inc    edi
  4182a6:	stos   DWORD PTR es:[edi],eax
  4182a7:	xchg   ebp,eax
  4182a8:	add    dl,0xdb
  4182ab:	push   ds
  4182ac:	and    DWORD PTR [edx+ebx*4-0x68],edx
  4182b0:	or     esi,ebx
  4182b2:	(bad)  
  4182b3:	cmp    eax,eax
  4182b5:	mov    ds:0xc5da1dc4,al
  4182ba:	sbb    BYTE PTR [edi],0xea
  4182bd:	adc    BYTE PTR [ebp+0x46],0x7d
  4182c1:	lea    ecx,[ecx+0x5c]
  4182c4:	jecxz  0x4182ee
  4182c6:	mov    WORD PTR [ebx+ebp*2+0x5f4c962e],cs
  4182cd:	dec    edi
  4182ce:	iret   
  4182cf:	inc    ebx
  4182d0:	jp     0x4182e7
  4182d2:	push   ds
  4182d3:	call   0xcea77760
  4182d8:	daa    
  4182d9:	push   ebx
  4182da:	(bad)  
  4182db:	shl    BYTE PTR [edx],0x66
  4182de:	pop    es
  4182df:	pop    esp
  4182e0:	shl    dl,1
  4182e2:	das    
  4182e3:	shl    BYTE PTR [eax],1
  4182e5:	push   ebx
  4182e6:	dec    eax
  4182e7:	mov    ch,0xfa
  4182e9:	and    bh,cl
  4182eb:	ja     0x4182c8
  4182ed:	call   0xc7a4:0xefc1d77e
  4182f4:	jge    0x418360
  4182f6:	mov    ebx,0x57bbb44c
  4182fb:	cmc    
  4182fc:	inc    ebx
  4182fd:	xor    al,0x75
  4182ff:	stos   DWORD PTR es:[edi],eax
  418300:	sub    ecx,esi
  418302:	ja     0x418312
  418304:	mov    BYTE PTR [esi+0x28],dl
  418307:	dec    edi
  418308:	cmp    BYTE PTR [ebx],dl
  41830a:	push   ds
  41830b:	inc    esi
  41830c:	sub    ebp,edx
  41830e:	xor    BYTE PTR [ecx-0x52],bl
  418311:	pop    sp
  418313:	xor    ah,BYTE PTR [ecx-0x277c4c2a]
  418319:	push   0x490b7ab3
  41831e:	or     ebx,eax
  418320:	sub    ah,BYTE PTR [edx+0x75ba0a08]
  418326:	ja     0x418350
  418328:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418329:	and    BYTE PTR [ebp-0x6e],cl
  41832c:	jne    0x4182ff
  41832e:	push   edx
  41832f:	jl     0x4182dc
  418331:	pop    ecx
  418332:	push   esp
  418333:	sub    al,0xa7
  418335:	and    DWORD PTR [edx],ecx
  418337:	lock retf 0xe92e
  41833b:	mov    ebp,0xa0ffbeef
  418340:	sar    BYTE PTR [esi],cl
  418342:	rcr    DWORD PTR [ebx+0xa],1
  418345:	adc    BYTE PTR [edi+0x1c],ch
  418348:	pop    DWORD PTR [eax-0x63]
  41834b:	cmp    eax,ebx
  41834d:	test   al,0x10
  41834f:	mov    bl,0x61
  418351:	(bad)
  418354:	dec    ebp
  418355:	sub    BYTE PTR [ecx],cl
  418357:	popa   
  418358:	out    0x6c,eax
  41835a:	and    bh,bl
  41835c:	adc    ebp,DWORD PTR [ebp+0x29]
  41835f:	adc    ah,BYTE PTR ds:0xa775e841
  418365:	fsubp  st(5),st
  418367:	jl     0x418342
  418369:	stc    
  41836a:	or     ebp,DWORD PTR ds:0xd82180c8
  418370:	push   esp
  418371:	jns    0x41839c
  418373:	sbb    al,0x90
  418375:	xlat   BYTE PTR ds:[ebx]
  418376:	(bad)  
  418377:	idiv   BYTE PTR [edi-0x2d]
  41837a:	test   DWORD PTR [ebx+0x2c],ebx
  41837d:	add    eax,0x29164811
  418382:	push   ecx
  418383:	add    eax,0x50bcc4c0
  418388:	idiv   DWORD PTR [edi]
  41838a:	or     esp,DWORD PTR ds:0xcee06d5b
  418390:	mov    bh,0xdb
  418392:	scas   al,BYTE PTR es:[edi]
  418393:	pop    edx
  418394:	test   BYTE PTR [eax+ebx*1],bh
  418397:	loope  0x418386
  418399:	fistp  WORD PTR [edx]
  41839b:	icebp  
  41839c:	sub    esp,ecx
  41839e:	push   edi
  41839f:	inc    esi
  4183a0:	cmp    DWORD PTR [eax],0xb
  4183a3:	cs int3 
  4183a5:	and    ch,BYTE PTR [edi-0x11]
  4183a8:	sbb    eax,0x93a8ce7e
  4183ad:	adc    al,0xf2
  4183af:	sub    bl,BYTE PTR [esi]
  4183b1:	cmp    dh,BYTE PTR [ebx+0x57ad4448]
  4183b7:	jmp    0xc4bab93a
  4183bc:	fstp   TBYTE PTR [esi]
  4183be:	and    ebp,eax
  4183c0:	dec    esi
  4183c1:	mov    cl,0x8b
  4183c3:	out    0xe3,al
  4183c5:	dec    edi
  4183c6:	(bad)  
  4183c7:	jne    0x4183e0
  4183c9:	inc    edi
  4183ca:	ret    0x8c09
  4183cd:	or     al,0x14
  4183cf:	mov    esi,0x23aac6c9
  4183d4:	cdq    
  4183d5:	pop    esi
  4183d6:	inc    ecx
  4183d7:	xor    eax,0xeedc7aff
  4183dc:	cmp    dl,BYTE PTR [edi-0x24]
  4183df:	scas   al,BYTE PTR es:[edi]
  4183e0:	push   ebx
  4183e1:	xchg   ebp,eax
  4183e2:	loope  0x41837d
  4183e4:	pop    eax
  4183e5:	(bad)  
  4183e6:	je     0x418397
  4183e8:	ret    0x37e4
  4183eb:	inc    esi
  4183ec:	aad    0x51
  4183ee:	cmp    DWORD PTR [edi-0x71],esi
  4183f1:	pop    ebx
  4183f2:	pushf  
  4183f3:	pop    es
  4183f4:	and    DWORD PTR [ecx+0x30],ecx
  4183f7:	pusha  
  4183f8:	in     eax,0x2d
  4183fa:	mov    ss,WORD PTR [ecx+ebx*8-0x9]
  4183fe:	push   0xfffffff3
  418400:	pop    ss
  418401:	in     eax,0x92
  418403:	sub    esp,ebx
  418405:	lods   al,BYTE PTR ds:[esi]
  418406:	lock mov ds:0xac6ba3a3,eax
  41840c:	fninit 
  41840e:	(bad)  
  41840f:	mov    eax,0x9e2271e1
  418414:	ja     0x4183b8
  418416:	push   ebx
  418417:	mov    eax,0x5cb7db2
  41841c:	jb     0x418489
  41841e:	popa   
  41841f:	push   0x7f2dc7fb
  418424:	fwait
  418425:	xor    al,ch
  418427:	push   esi
  418428:	pop    esi
  418429:	cs test eax,0xef58c0f0
  41842f:	xchg   edi,eax
  418430:	cdq    
  418431:	aam    0xb7
  418433:	mov    ds:0x36c3b9d3,al
  418438:	xor    edx,DWORD PTR [edx-0x4ddfb7a4]
  41843e:	fidivr WORD PTR [eax]
  418440:	adc    al,0xdd
  418442:	and    BYTE PTR [ebx-0x18],ah
  418445:	or     al,0x4e
  418447:	mov    bh,0x1a
  418449:	rol    bl,1
  41844b:	hlt    
  41844c:	cs (bad) 
  41844e:	jbe    0x4183d8
  418450:	and    eax,0xff705557
  418455:	jne    0x4184c1
  418457:	cmp    dh,BYTE PTR [esi]
  418459:	mov    ecx,0xf6d929a1
  41845e:	scas   al,BYTE PTR es:[edi]
  41845f:	data16 xor al,0x52
  418462:	enter  0x3b60,0x95
  418466:	test   BYTE PTR [ebp-0xf0073d2],0xe5
  41846d:	mov    al,ds:0x7acdc955
  418472:	inc    ecx
  418473:	jne    0x41845a
  418475:	pop    eax
  418476:	lods   eax,DWORD PTR ds:[esi]
  418477:	xor    al,BYTE PTR ds:0xa9fad5fe
  41847d:	fisubr DWORD PTR [eax]
  41847f:	mov    esi,0xc9fbf7db
  418484:	lahf   
  418485:	jae    0x4184c1
  418487:	add    ebp,DWORD PTR [edx]
  418489:	mov    esi,0x8818fb76
  41848e:	pop    edi
  41848f:	outs   dx,DWORD PTR ds:[esi]
  418490:	mov    ah,0x4f
  418492:	rol    DWORD PTR [ebx+0x78],cl
  418495:	aad    0x19
  418497:	pop    eax
  418498:	rcl    dl,0xcf
  41849b:	and    bh,dl
  41849d:	jae    0x41844c
  41849f:	fwait
  4184a0:	daa    
  4184a1:	mov    esp,0xa5f89357
  4184a6:	out    dx,eax
  4184a7:	pusha  
  4184a8:	inc    ebp
  4184a9:	cld    
  4184aa:	push   edx
  4184ab:	mul    DWORD PTR [edi+edx*4]
  4184ae:	xor    eax,0xc9101ab2
  4184b3:	push   ebp
  4184b4:	sub    edi,DWORD PTR [ebx-0x4e7195d1]
  4184ba:	(bad)  
  4184bb:	mov    esp,0x3d705a7
  4184c0:	aas    
  4184c1:	retf   
  4184c2:	push   ds
  4184c3:	cmp    edx,esi
  4184c5:	or     ah,BYTE PTR ds:0x57c7ba55
  4184cb:	int    0x5d
  4184cd:	jno    0x41845d
  4184cf:	pop    edx
  4184d0:	and    cl,0x5b
  4184d3:	xchg   esi,eax
  4184d4:	push   esi
  4184d5:	shl    DWORD PTR [eax-0x26],0x3e
  4184d9:	or     al,BYTE PTR [ebx+0x55]
  4184dc:	jmp    0xccaf2393
  4184e1:	stc    
  4184e2:	xchg   edi,eax
  4184e3:	data16 je 0x418502
  4184e6:	dec    esi
  4184e7:	nop
  4184e8:	outs   dx,DWORD PTR ds:[esi]
  4184e9:	mov    ebp,0x775c538f
  4184ee:	adc    ebx,DWORD PTR [edi+ebp*1+0x1abd68e3]
  4184f5:	addr16 mov ebp,0x62989196
  4184fb:	mov    ds:0x9b4518ce,eax
  418500:	jae    0x41854f
  418502:	mov    al,ds:0xfcc4e4fe
  418507:	in     eax,0x33
  418509:	xchg   esi,eax
  41850a:	mov    dl,0x52
  41850c:	mov    edx,ebx
  41850e:	mov    ch,0x69
  418510:	and    dl,al
  418512:	or     DWORD PTR [ebx+0x6493879f],edx
  418518:	shl    BYTE PTR [ebx-0x128c8699],0xf2
  41851f:	xchg   esi,eax
  418520:	icebp  
  418521:	cmp    dh,bh
  418523:	out    dx,eax
  418524:	or     esp,DWORD PTR [eax]
  418526:	jnp    0x418542
  418528:	cmp    eax,0xd0228f0b
  41852d:	or     eax,DWORD PTR [ecx-0x1096b4c7]
  418533:	mov    ebp,0xf35d3d90
  418538:	loop   0x418589
  41853a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41853b:	clc    
  41853c:	das    
  41853d:	dec    ecx
  41853e:	cmp    ch,ch
  418540:	pop    esp
  418541:	jb     0x418533
  418543:	sub    al,0x86
  418545:	cdq    
  418546:	add    dh,BYTE PTR [ebp-0x3a]
  418549:	test   ebx,esp
  41854b:	sbb    DWORD PTR [eax+0x3c018006],ebx
  418551:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418553:	xchg   edx,eax
  418554:	jnp    0x418585
  418556:	dec    ebx
  418557:	iret   
  418558:	ins    BYTE PTR es:[edi],dx
  418559:	dec    ebp
  41855a:	push   0x7d
  41855c:	jae    0x41852a
  41855e:	mov    dl,BYTE PTR [ecx+edx*2]
  418561:	ds pop es
  418563:	dec    edx
  418564:	adc    DWORD PTR [ebp-0x72],ebp
  418567:	mov    al,0x7
  418569:	fist   WORD PTR [eax+0x36718e14]
  41856f:	push   edx
  418570:	and    al,BYTE PTR [ebp-0x11]
  418573:	adc    esi,DWORD PTR [ebx-0x329bafa0]
  418579:	pop    ecx
  41857a:	mov    edi,edi
  41857c:	inc    edi
  41857d:	mov    esp,0xe82dc44d
  418582:	jb     0x41857c
  418584:	stos   BYTE PTR es:[edi],al
  418585:	shld   esp,ebp,0xa5
  418589:	call   0x7043:0xad3928b9
  418590:	int3   
  418591:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418592:	jg     0x4185fe
  418594:	and    al,0x7b
  418596:	and    al,0x7d
  418598:	popa   
  418599:	retf   0x4e83
  41859c:	leave  
  41859d:	aam    0xbe
  41859f:	cwde   
  4185a0:	aam    0x85
  4185a2:	ss jns 0x4185dc
  4185a5:	retf   
  4185a6:	mov    esi,edx
  4185a8:	inc    ecx
  4185a9:	int    0x66
  4185ab:	sbb    eax,DWORD PTR [esi]
  4185ad:	test   cl,ch
  4185af:	mov    ds:0xee664646,eax
  4185b4:	xchg   ebx,eax
  4185b5:	lods   eax,DWORD PTR ds:[esi]
  4185b6:	addr16 stc 
  4185b8:	ss xchg esi,eax
  4185ba:	add    ah,ah
  4185bc:	jnp    0x4185da
  4185be:	jbe    0x418605
  4185c0:	in     eax,0xa7
  4185c2:	pop    edx
  4185c3:	je     0x418558
  4185c5:	rol    bh,0x3c
  4185c8:	add    edx,DWORD PTR [ecx+0xc9d4a9a]
  4185ce:	ds daa 
  4185d0:	out    dx,al
  4185d1:	or     eax,0xf29970e1
  4185d6:	(bad)  [esi-0x7c]
  4185d9:	enter  0xac55,0xa7
  4185dd:	loop   0x418597
  4185df:	icebp  
  4185e0:	je     0x4185d5
  4185e2:	mov    eax,ds:0xd444ad68
  4185e7:	cmc    
  4185e8:	xor    DWORD PTR [esi-0x2a],edi
  4185eb:	(bad)  
  4185ec:	fnop   
  4185ee:	mov    ah,BYTE PTR [ebx-0x26a905f6]
  4185f4:	jl     0x4185c8
  4185f6:	or     al,0x65
  4185f8:	in     eax,dx
  4185f9:	jmp    0x7909:0x8e38269b
  418600:	ins    BYTE PTR es:[edi],dx
  418601:	ficomp WORD PTR [ecx+ebp*2+0x19]
  418606:	mov    ch,BYTE PTR [ebx+eax*8]
  418609:	(bad)  
  41860a:	imul   esi,DWORD PTR [edx-0x7f],0x62
  41860e:	jle    0x4185bb
  418610:	dec    eax
  418611:	jns    0x41867c
  418613:	retf   
  418614:	push   esi
  418615:	sub    al,0xb5
  418617:	(bad)  
  418618:	aad    0xa2
  41861a:	sub    BYTE PTR [edi-0x46],bl
  41861d:	xchg   edi,eax
  41861e:	ret    0x3fc3
  418621:	ret    
  418622:	stc    
  418623:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418624:	and    eax,0x6104d206
  418629:	imul   esi,DWORD PTR [ebx+0x294a0dcd],0x416a75f9
  418633:	mov    BYTE PTR [esi-0x71],bh
  418636:	adc    eax,0xcadb134c
  41863b:	mov    esp,0xd8ca4091
  418640:	sub    bh,BYTE PTR [ecx+ebp*8-0xfbcba89]
  418647:	je     0x418611
  418649:	sbb    DWORD PTR [edx-0x64],0xffffffe1
  41864d:	jne    0x4185ff
  41864f:	sub    bl,bl
  418651:	repz ss popa 
  418654:	xchg   edx,eax
  418655:	xor    al,0x36
  418657:	dec    ecx
  418658:	repnz mov ebp,0x8b7a414d
  41865e:	outs   dx,BYTE PTR ds:[esi]
  41865f:	aam    0x55
  418661:	iret   
  418662:	scas   eax,DWORD PTR es:[edi]
  418663:	imul   ebx,DWORD PTR [ebx+eiz*8-0x5f],0xf2b6a4a4
  41866b:	mov    esi,0xb71521d3
  418670:	push   ebx
  418671:	push   ds
  418672:	in     al,0x1c
  418674:	fmul   st(1),st
  418676:	dec    edx
  418677:	sar    BYTE PTR [ecx+0x607f5cb5],cl
  41867d:	jecxz  0x41869a
  41867f:	pop    DWORD PTR [edx]
  418681:	sqrtps xmm2,XMMWORD PTR [edi-0x10]
  418685:	jo     0x4186c7
  418687:	repz rcl DWORD PTR [edx-0x58de3f01],1
  41868e:	jb     0x4186f2
  418690:	js     0x4186ef
  418692:	dec    esi
  418693:	lahf   
  418694:	rol    BYTE PTR [eax+0x6fecb6d6],1
  41869a:	jns    0x418675
  41869c:	jns    0x4186c8
  41869e:	xchg   ebx,eax
  41869f:	or     ebx,ecx
  4186a1:	sbb    eax,0xfa984c11
  4186a6:	mov    al,0x6d
  4186a8:	adc    esi,DWORD PTR [ecx+ebp*1+0x62c6eaf8]
  4186af:	cli    
  4186b0:	sub    eax,0x9f9590e5
  4186b5:	mov    esp,0x56344941
  4186ba:	inc    DWORD PTR [ebx]
  4186bc:	cwde   
  4186bd:	add    bl,BYTE PTR [edi+edi*8+0x41391a73]
  4186c4:	push   ss
  4186c5:	mov    ss,WORD PTR ds:0x32b3a0d
  4186cb:	pop    ecx
  4186cc:	mov    ch,BYTE PTR [esi]
  4186ce:	repnz push esi
  4186d0:	fdivr  DWORD PTR [edx-0x1a]
  4186d3:	rcr    BYTE PTR [ebp-0x4a],1
  4186d6:	xchg   edi,eax
  4186d7:	das    
  4186d8:	dec    edx
  4186d9:	xor    ebp,DWORD PTR [ecx+0x1c20e4d9]
  4186df:	push   ss
  4186e0:	or     cl,0x28
  4186e3:	add    al,0x6c
  4186e5:	jl     0x418747
  4186e7:	dec    edi
  4186e8:	pop    esi
  4186e9:	sti    
  4186ea:	ficomp DWORD PTR [esi]
  4186ec:	mov    ch,0xcd
  4186ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186ef:	inc    ecx
  4186f0:	push   0x3b
  4186f2:	dec    edi
  4186f3:	aas    
  4186f4:	jb     0x4186f9
  4186f6:	popa   
  4186f7:	adc    eax,0xef46f648
  4186fc:	xchg   ebx,eax
  4186fd:	sub    BYTE PTR [esi+ecx*1],dh
  418700:	push   edi
  418701:	pop    eax
  418702:	pop    edi
  418703:	cmp    eax,0xb83cc965
  418708:	ins    DWORD PTR es:[edi],dx
  418709:	pop    eax
  41870a:	ja     0x418717
  41870c:	stos   DWORD PTR es:[edi],eax
  41870d:	aaa    
  41870e:	cdq    
  41870f:	xor    sp,sp
  418712:	ror    DWORD PTR [eax],1
  418714:	mov    dl,0x41
  418716:	inc    ebp
  418717:	xor    BYTE PTR [edi],0xa1
  41871a:	jmp    DWORD PTR [ebx]
  41871c:	(bad)  
  41871d:	jecxz  0x418714
  41871f:	iret   
  418720:	xor    al,0x1d
  418722:	adc    dh,BYTE PTR [edx-0xec6c4d4]
  418728:	cmp    cl,BYTE PTR [esi+0x52]
  41872b:	bound  edx,QWORD PTR es:[ecx]
  41872e:	cli    
  41872f:	rol    DWORD PTR [ecx-0x25],cl
  418732:	cdq    
  418733:	jge    0x41874b
  418735:	repnz dec BYTE PTR [ebx]
  418738:	mov    bl,0xb
  41873a:	jg     0x41878b
  41873c:	push   0x35
  41873e:	(bad)  
  41873f:	pop    esp
  418740:	es mov dh,0xca
  418743:	xor    DWORD PTR [edx+eax*1+0x43],0xffffffc9
  418748:	pop    ecx
  418749:	int    0xc9
  41874b:	lahf   
  41874c:	pop    ss
  41874d:	in     al,0x55
  41874f:	push   edx
  418750:	bound  eax,QWORD PTR [esi+0x65]
  418753:	pop    eax
  418754:	nop
  418755:	jne    0x4186ef
  418757:	pop    esi
  418758:	mov    eax,ds:0xf50eadbb
  41875d:	and    ebp,edx
  41875f:	dec    ebp
  418760:	(bad)  
  418761:	pusha  
  418762:	and    al,0xe4
  418764:	loopne 0x418754
  418766:	cmp    al,0xc
  418768:	pushf  
  418769:	leave  
  41876a:	mov    ecx,0x6f668b48
  41876f:	(bad)  
  418770:	mov    BYTE PTR [eax+0x6f75e95f],0x67
  418777:	add    dh,ch
  418779:	or     edx,DWORD PTR [bx+di]
  41877c:	dec    esi
  41877d:	in     al,dx
  41877e:	lea    ebx,[ebp-0x2b534118]
  418784:	fdivr  DWORD PTR [eax-0x2d]
  418787:	inc    ebp
  418788:	xchg   al,ch
  41878a:	mov    esi,DWORD PTR [ecx]
  41878c:	(bad)  
  41878d:	fdivr  DWORD PTR [esi-0x63c28824]
  418793:	sti    
  418794:	or     DWORD PTR [eax+0x59],edi
  418797:	in     al,0xc6
  418799:	xor    edx,edi
  41879b:	popa   
  41879c:	sub    ah,BYTE PTR ds:0xb04deabf
  4187a2:	fisttp WORD PTR [edi-0x2]
  4187a5:	push   ecx
  4187a6:	not    BYTE PTR [ebx-0x65e5b346]
  4187ac:	addr16 jge 0x41878b
  4187af:	mov    ds,esp
  4187b1:	cli    
  4187b2:	add    DWORD PTR [edi-0x14],ecx
  4187b5:	inc    DWORD PTR [edi+0x6473c7c7]
  4187bb:	jns    0x418807
  4187bd:	sub    DWORD PTR [edi],eax
  4187bf:	in     eax,0xa6
  4187c1:	test   dl,ch
  4187c3:	(bad)
  4187c6:	mov    dh,0x93
  4187c8:	popa   
  4187c9:	push   ebp
  4187ca:	int    0x43
  4187cc:	or     al,0x3b
  4187ce:	jno    0x418789
  4187d0:	and    esi,DWORD PTR [edx]
  4187d2:	ins    BYTE PTR es:[edi],dx
  4187d3:	jns    0x4187c4
  4187d5:	(bad)  
  4187d6:	aam    0x1f
  4187d8:	jns    0x418786
  4187da:	inc    ebx
  4187db:	cwde   
  4187dc:	xchg   esi,eax
  4187dd:	test   BYTE PTR [ebp-0x65],0x8d
  4187e1:	and    DWORD PTR [ecx+0x44589e06],0x7fc067fc
  4187eb:	xchg   esi,eax
  4187ec:	pop    ebx
  4187ed:	pop    edi
  4187ee:	jne    0x418810
  4187f0:	push   ebx
  4187f1:	lea    edi,[edx+0x69133233]
  4187f7:	push   0xd53477fd
  4187fc:	pop    eax
  4187fd:	aam    0x1c
  4187ff:	mov    dh,0x65
  418801:	test   eax,0x56b0b559
  418806:	repnz mov ebp,0xe6e87af
  41880c:	repz push ss
  41880e:	mov    eax,0x53cfe3cd
  418813:	sbb    al,0x4a
  418815:	xlat   BYTE PTR ds:[ebx]
  418816:	(bad)  
  418817:	call   0x8de:0x8c1e7320
  41881e:	cwde   
  41881f:	enter  0xd252,0xc8
  418823:	out    0x69,al
  418825:	out    dx,eax
  418826:	pop    es
  418827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418828:	and    eax,0xdb0c6774
  41882d:	or     ax,0x58ae
  418831:	xor    ebx,edi
  418833:	test   eax,0x7549c889
  418838:	pop    edi
  418839:	call   0xa2af0257
  41883e:	mov    ds:0x119921d5,eax
  418843:	cmp    BYTE PTR [ebp+0x13502ebf],ch
  418849:	mov    ch,0x13
  41884b:	add    al,0x3a
  41884d:	mov    ecx,0xdf73ef8e
  418852:	aaa    
  418853:	jmp    0x41889a
  418855:	xor    BYTE PTR [ebp+0x40],al
  418858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418859:	or     al,0x15
  41885b:	int3   
  41885c:	outs   dx,BYTE PTR ds:[esi]
  41885d:	cli    
  41885e:	dec    esp
  41885f:	mov    ah,0x11
  418861:	cli    
  418862:	and    dl,BYTE PTR [edx+0x49f8738]
  418868:	push   ebx
  418869:	loop   0x418811
  41886b:	inc    eax
  41886c:	ret    
  41886d:	loope  0x418813
  41886f:	loop   0x41884d
  418871:	ret    0x787
  418874:	jg     0x41884c
  418876:	jmp    0x41886b
  418878:	pop    edi
  418879:	mov    esp,0x51fd5c1f
  41887e:	sbb    DWORD PTR [esi],esp
  418880:	xor    al,0x1b
  418882:	test   eax,0xbc83827a
  418887:	adc    bh,BYTE PTR [edx+edi*4+0x6878d44e]
  41888e:	and    dl,BYTE PTR [edi+ebp*1-0x69bfa6dd]
  418895:	repnz sbb ah,BYTE PTR [esi]
  418898:	and    ebx,DWORD PTR ds:0x7ca23239
  41889e:	rol    BYTE PTR [ebx-0x25],1
  4188a1:	data16 cmc 
  4188a3:	lods   al,BYTE PTR ds:[esi]
  4188a4:	dec    eax
  4188a5:	cmp    ah,BYTE PTR [esi-0x7a0e3bf3]
  4188ab:	mov    bh,0xf5
  4188ad:	xchg   ebx,eax
  4188ae:	sub    eax,0xde060ed1
  4188b3:	fadd   QWORD PTR [edi-0x7e]
  4188b6:	cmp    DWORD PTR [esi-0x2a],esi
  4188b9:	xor    BYTE PTR [edi],bh
  4188bb:	(bad)  
  4188bc:	dec    esi
  4188bd:	push   edx
  4188be:	leave  
  4188bf:	retf   
  4188c0:	jb     0x4188f0
  4188c2:	(bad)
  4188c5:	jnp    0x418931
  4188c7:	shr    DWORD PTR [eax+eax*1],1
  4188ca:	imul   ecx,DWORD PTR [ecx-0x69],0xb8db1a08
  4188d1:	sbb    eax,0xbd2f6ec6
  4188d6:	in     eax,0x12
  4188d8:	jecxz  0x4188a0
  4188da:	imul   ebp,DWORD PTR [edi-0x68],0xe3783271
  4188e1:	sub    eax,0xdd30d260
  4188e6:	scas   al,BYTE PTR es:[edi]
  4188e7:	jb     0x418952
  4188e9:	repnz sbb BYTE PTR [edi],bl
  4188ec:	add    BYTE PTR [eax+0x34],bl
  4188ef:	lea    eax,[edx+0x25]
  4188f2:	ror    dl,cl
  4188f4:	scas   al,BYTE PTR es:[edi]
  4188f5:	xchg   edx,eax
  4188f6:	fdivr  DWORD PTR [eax]
  4188f8:	mov    ecx,0xce2dad29
  4188fe:	call   0x3cbc:0x7f8f2e83
  418905:	(bad)  
  418907:	out    dx,al
  418908:	ja     0x41890e
  41890a:	push   ds
  41890b:	ja     0x41896c
  41890d:	mov    ds:0xc7f67ae2,al
  418912:	sbb    al,0xfc
  418914:	pop    ss
  418915:	retf   0xd33
  418918:	pop    es
  418919:	jnp    0x41892c
  41891b:	mov    dl,0xd0
  41891d:	xor    al,0x4a
  41891f:	jno    0x418957
  418921:	les    ecx,FWORD PTR [ecx]
  418923:	dec    ecx
  418924:	gs popa 
  418926:	xchg   ebp,eax
  418927:	pop    esi
  418928:	scas   eax,DWORD PTR es:[edi]
  418929:	je     0x4188d1
  41892b:	mov    eax,0xa919d205
  418930:	loopne 0x4188dc
  418932:	mov    ebp,0x2ae1d744
  418937:	xchg   esp,eax
  418938:	ret    
  418939:	repnz push esp
  41893b:	aad    0x31
  41893d:	jnp    0x418956
  41893f:	clc    
  418940:	retf   0x25d9
  418943:	cmp    edi,esi
  418945:	(bad)  
  418946:	dec    eax
  418947:	fcmovu st,st(2)
  418949:	(bad)  
  41894a:	adc    eax,0xaf28ba8b
  41894f:	repz cmp DWORD PTR [edi],eax
  418952:	leave  
  418953:	or     eax,0xd850a816
  418958:	mov    ds:0xd71e9daa,al
  41895d:	call   0xbc19:0x12d37985
  418964:	and    cl,ch
  418966:	push   ds
  418967:	mov    cl,0x3f
  418969:	xchg   edi,eax
  41896a:	cs ds ss push eax
  41896e:	das    
  41896f:	jg     0x41891f
  418971:	in     al,dx
  418972:	nop
  418973:	and    al,0x10
  418975:	sbb    ebp,DWORD PTR [ebp-0x5530bcdf]
  41897b:	add    ch,BYTE PTR [ebp-0x2e3061ea]
  418981:	xchg   edx,eax
  418982:	fiadd  DWORD PTR [ebx-0x3]
  418985:	xchg   esp,eax
  418986:	loope  0x418911
  418988:	xchg   ebx,eax
  418989:	and    eax,0xa193c21c
  41898e:	pop    eax
  41898f:	daa    
  418990:	jmp    0x8f505f0b
  418995:	cmp    eax,0x273c47b9
  41899a:	loope  0x418940
  41899c:	mov    al,ds:0x8ec00a68
  4189a1:	fisub  WORD PTR [edi-0x6d]
  4189a4:	in     al,dx
  4189a5:	iret   
  4189a6:	xchg   esp,eax
  4189a7:	fidiv  WORD PTR [ecx-0x16]
  4189aa:	stos   BYTE PTR es:[edi],al
  4189ab:	in     al,0x45
  4189ad:	pusha  
  4189ae:	test   eax,0xda026d4e
  4189b3:	test   dl,0x22
  4189b6:	out    dx,eax
  4189b7:	jge    0x4189c9
  4189b9:	test   eax,0xb150e5d4
  4189be:	aaa    
  4189bf:	xor    ah,bh
  4189c1:	lahf   
  4189c2:	shr    BYTE PTR [eax-0x5f],1
  4189c5:	and    edi,DWORD PTR [eax]
  4189c7:	add    eax,0xb453de52
  4189cc:	iret   
  4189cd:	lea    esi,es:[esi]
  4189d0:	js     0x4189f7
  4189d2:	xor    BYTE PTR [ecx],bh
  4189d4:	add    al,0xc7
  4189d6:	adc    BYTE PTR [ebx*1+0x46816e6b],cl
  4189dd:	mov    dh,0x39
  4189df:	or     ebp,ebx
  4189e1:	xchg   BYTE PTR [ebp-0x72009fc],ah
  4189e7:	push   ebp
  4189e8:	rcr    DWORD PTR [ebx+0x49],1
  4189eb:	sbb    eax,0x6bb713fe
  4189f0:	cmp    al,0xe4
  4189f2:	mov    BYTE PTR [ecx+0x586c1103],al
  4189f8:	mov    ds:0x39ba9dd5,al
  4189fd:	imul   esi,DWORD PTR [esi],0xffffffc0
  418a00:	adc    BYTE PTR [edx-0x44],cl
  418a03:	test   BYTE PTR [ebx+0x7d38ae95],dl
  418a09:	in     eax,dx
  418a0a:	ja     0x4189b3
  418a0c:	adc    eax,0x25c2399b
  418a11:	inc    esi
  418a12:	std    
  418a13:	push   0xffffff94
  418a15:	(bad)  
  418a16:	mov    eax,0xbe4a8174
  418a1b:	inc    esi
  418a1c:	aaa    
  418a1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a1e:	shl    DWORD PTR [esi-0x43],0xa
  418a22:	push   ebp
  418a23:	fwait
  418a24:	adc    eax,0x6a175c66
  418a29:	cmp    eax,0x79b4968
  418a2e:	push   ds
  418a2f:	mov    edi,0x37a1af48
  418a34:	ja     0x418a21
  418a36:	test   al,0x6d
  418a38:	shl    DWORD PTR [eax],1
  418a3a:	cmp    DWORD PTR [edx-0x5f],ebx
  418a3d:	in     eax,0x3c
  418a3f:	push   edx
  418a40:	dec    eax
  418a41:	add    eax,0x8c37aed6
  418a46:	dec    esp
  418a47:	jae    0x418a57
  418a49:	pop    edi
  418a4a:	int3   
  418a4b:	mov    bl,0x4
  418a4d:	dec    edx
  418a4e:	call   0x509e84da
  418a53:	fdivr  QWORD PTR [ebx]
  418a55:	dec    ebx
  418a56:	sbb    ecx,esi
  418a58:	call   0x255:0x8d665711
  418a5f:	out    dx,eax
  418a60:	ficom  DWORD PTR [esi]
  418a62:	test   ecx,ebx
  418a64:	or     ebx,DWORD PTR [edi]
  418a66:	icebp  
  418a67:	jl     0x418a5a
  418a69:	out    0x76,eax
  418a6b:	push   esp
  418a6c:	jnp    0x418aaf
  418a6e:	and    eax,0x54cdd67c
  418a73:	pop    edx
  418a74:	mov    ebx,0x44b14547
  418a79:	pop    ecx
  418a7a:	mov    esi,edi
  418a7c:	lods   eax,DWORD PTR ds:[esi]
  418a7d:	mov    bh,0x46
  418a7f:	mov    ds,WORD PTR [ebp+0x6e]
  418a82:	jp     0x418af6
  418a84:	pop    esi
  418a85:	jmp    0xbef31a6a
  418a8a:	pop    ebx
  418a8b:	cwde   
  418a8c:	inc    edx
  418a8d:	pop    esi
  418a8e:	or     al,ch
  418a90:	lahf   
  418a91:	add    BYTE PTR [eax+eiz*1+0x23],0x90
  418a96:	mov    ds:0x26235b40,eax
  418a9b:	test   eax,0xe57b3c25
  418aa0:	(bad)  
  418aa1:	push   esp
  418aa2:	push   ecx
  418aa3:	out    dx,eax
  418aa4:	or     BYTE PTR [ecx+eax*1],dh
  418aa7:	mov    ds:0xb1007d7d,eax
  418aac:	lds    esi,FWORD PTR [ebx]
  418aae:	aas    
  418aaf:	jbe    0x418ab2
  418ab1:	jmp    0x45d1:0xc9dae24
  418ab8:	iret   
  418ab9:	lock ins DWORD PTR es:[edi],dx
  418abb:	lods   al,BYTE PTR ds:[esi]
  418abc:	pushf  
  418abd:	jle    0x418a62
  418abf:	out    dx,eax
  418ac0:	push   edi
  418ac1:	and    al,0x6a
  418ac3:	mov    bl,0x70
  418ac5:	daa    
  418ac6:	sub    esp,ebx
  418ac8:	cld    
  418ac9:	and    bl,BYTE PTR [esi-0x1ed14604]
  418acf:	test   BYTE PTR [eax],cl
  418ad1:	out    0x34,al
  418ad3:	(bad)  
  418ad4:	mov    cl,0x75
  418ad6:	adc    ecx,esi
  418ad8:	mov    bh,0xc1
  418ada:	out    dx,eax
  418adb:	mov    esp,0x10ee8299
  418ae0:	cld    
  418ae1:	hlt    
  418ae2:	das    
  418ae3:	xchg   ebx,eax
  418ae4:	fadd   QWORD PTR [edi+edi*1]
  418ae7:	pop    edi
  418ae8:	gs (bad) 
  418aea:	pop    ds
  418aeb:	xchg   esi,eax
  418aec:	sbb    al,0xb9
  418aee:	in     eax,0x2d
  418af0:	sti    
  418af1:	add    al,0x3d
  418af3:	push   0x819ff31b
  418af8:	in     eax,0x3f
  418afa:	mov    al,BYTE PTR [edi]
  418afc:	pop    ecx
  418afd:	and    ch,0x68
  418b00:	ds inc edx
  418b02:	ja     0x418b73
  418b04:	sub    eax,0x5706458a
  418b09:	and    esp,ebx
  418b0b:	(bad)  
  418b0c:	pop    ds
  418b0d:	jge    0x418b83
  418b0f:	into   
  418b10:	sbb    DWORD PTR [ecx-0x8785f68],eax
  418b16:	xor    eax,0x69139131
  418b1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b1c:	cld    
  418b1d:	dec    ebp
  418b1e:	clc    
  418b1f:	jp     0x418b1c
  418b21:	cmp    BYTE PTR ds:0x1b814709,dl
  418b27:	add    al,0x94
  418b29:	cmp    al,0xbf
  418b2b:	xchg   edx,eax
  418b2c:	and    BYTE PTR [eax-0x35],0xc7
  418b30:	sar    BYTE PTR [ebx+edi*1+0x10f4bcb0],cl
  418b37:	lods   eax,DWORD PTR ds:[esi]
  418b38:	arpl   WORD PTR [eax],cx
  418b3a:	push   es
  418b3b:	(bad)  
  418b3c:	push   ecx
  418b3d:	stc    
  418b3e:	push   es
  418b3f:	aaa    
  418b40:	ja     0x418b26
  418b42:	inc    esp
  418b43:	jne    0x418ae3
  418b45:	mov    DWORD PTR [edi+0x42],edx
  418b48:	add    BYTE PTR ss:[edi],cl
  418b4b:	and    al,0xab
  418b4d:	mov    ch,0x59
  418b4f:	push   edx
  418b50:	add    BYTE PTR ds:0x97c1d9a8,dl
  418b56:	or     bl,0xef
  418b59:	add    cl,BYTE PTR ds:0xbecbde84
  418b5f:	psraw  mm5,QWORD PTR [eax]
  418b62:	jecxz  0x418ba9
  418b64:	test   eax,0xbabf12b4
  418b69:	sar    BYTE PTR [ecx+0x7808f9c9],cl
  418b6f:	pop    ebp
  418b70:	or     edi,edx
  418b72:	or     eax,0x29f0499b
  418b77:	fcmove st,st(3)
  418b79:	xor    eax,0x98cf81f8
  418b7e:	je     0x418ba5
  418b80:	fs push ecx
  418b82:	in     eax,dx
  418b83:	out    0xcc,al
  418b85:	xor    eax,0xab7fc87f
  418b8a:	xchg   ebp,eax
  418b8b:	repz sub DWORD PTR [eax+0x27bf2566],0x3e
  418b93:	ret    
  418b94:	icebp  
  418b95:	xor    bh,BYTE PTR ds:[esi-0x49]
  418b99:	push   0xffffff84
  418b9b:	fldenv [edi+ecx*8]
  418b9e:	std    
  418b9f:	pushf  
  418ba0:	js     0x418b8d
  418ba2:	adc    al,BYTE PTR [edi-0x2148894f]
  418ba8:	ss mov esp,0x96f94a04
  418bae:	dec    BYTE PTR [esi-0x2596b526]
  418bb4:	pushf  
  418bb5:	fldcw  WORD PTR ds:0x2d0c6e02
  418bbb:	arpl   WORD PTR [ebx+0x1f],bp
  418bbe:	aas    
  418bbf:	jmp    0x418b76
  418bc1:	add    bh,cl
  418bc3:	ret    0xd890
  418bc6:	(bad)  
  418bc7:	stc    
  418bc8:	pop    eax
  418bc9:	adc    al,bl
  418bcb:	pop    esi
  418bcc:	add    ch,cl
  418bce:	sbb    ebp,DWORD PTR [ebx]
  418bd0:	sub    cl,bh
  418bd2:	xchg   edi,eax
  418bd3:	cli    
  418bd4:	call   0xffc7:0x131dd0f6
  418bdb:	mov    edx,0x16be15c8
  418be0:	and    ah,BYTE PTR [edi-0x47]
  418be3:	out    dx,eax
  418be4:	xlat   BYTE PTR ds:[ebx]
  418be5:	xchg   edx,eax
  418be6:	sub    eax,0x4012b70
  418beb:	sahf   
  418bec:	pop    ss
  418bed:	mov    edi,0x2acac94
  418bf2:	sar    eax,0xb4
  418bf5:	cmp    BYTE PTR [esi],bl
  418bf7:	rcr    DWORD PTR [ecx-0x4f],0x41
  418bfb:	and    ebp,DWORD PTR [ebx+0x67]
  418bfe:	pop    edi
  418bff:	push   cs
  418c00:	mov    al,0xc9
  418c02:	cmc    
  418c03:	pushf  
  418c04:	xor    esi,0x6a
  418c07:	and    eax,0x7ce41389
  418c0c:	dec    edi
  418c0d:	lock xchg ebx,eax
  418c0f:	and    al,cl
  418c11:	sub    al,BYTE PTR [ecx]
  418c13:	jnp    0x418c1b
  418c15:	push   ebp
  418c16:	cmp    eax,0x9ae923ee
  418c1b:	ins    DWORD PTR es:[edi],dx
  418c1c:	les    ebx,FWORD PTR [ecx]
  418c1e:	adc    DWORD PTR [eax+eiz*1+0x34],esi
  418c22:	fnstenv [ecx-0x235441fc]
  418c28:	mov    esp,0x8cb5440f
  418c2d:	cmc    
  418c2e:	inc    esi
  418c2f:	sbb    dh,BYTE PTR [ebx+0x281dccaf]
  418c35:	call   0x690ed57a
  418c3a:	mov    ebx,0x16edb174
  418c3f:	xor    edx,DWORD PTR [ecx]
  418c41:	jnp    0x418bdb
  418c43:	rol    BYTE PTR [edx+0x8],0x98
  418c47:	pusha  
  418c48:	js     0x418c94
  418c4a:	inc    esp
  418c4b:	sub    edi,DWORD PTR [ebx+0x72]
  418c4e:	rol    BYTE PTR [ecx+0xa5e271f],1
  418c54:	ret    0x25dc
  418c57:	jo     0x418cad
  418c59:	mov    ebx,0x8664becf
  418c5e:	inc    ebp
  418c5f:	out    dx,eax
  418c60:	add    bl,BYTE PTR [ebp-0x47116ce9]
  418c66:	out    dx,eax
  418c67:	add    eax,0xdede73e4
  418c6c:	mov    edi,DWORD PTR [eax+0x68]
  418c6f:	and    ch,al
  418c71:	fild   DWORD PTR [eax+0x23ceb620]
  418c77:	mov    bh,0xda
  418c79:	(bad)
  418c7c:	out    0x8e,eax
  418c7e:	dec    ecx
  418c7f:	jno    0x418c93
  418c81:	(bad)  
  418c83:	xchg   ecx,eax
  418c84:	cmp    eax,0x4de1d5be
  418c89:	gs mov edi,0xe2ddad8e
  418c8f:	pop    ss
  418c90:	pop    esi
  418c91:	sub    DWORD PTR [esi],edi
  418c93:	in     eax,0x9f
  418c95:	stc    
  418c96:	scas   al,BYTE PTR es:[edi]
  418c97:	cmp    eax,0xe09a765f
  418c9c:	push   edx
  418c9d:	mov    DWORD PTR [eax+0x6d],ecx
  418ca0:	push   ss
  418ca1:	push   cs
  418ca2:	mov    ebx,0xc4dc836e
  418ca7:	jle    0x418cb3
  418ca9:	aaa    
  418caa:	arpl   WORD PTR [edx],di
  418cac:	add    eax,0xc1bf33a9
  418cb1:	sbb    dl,BYTE PTR [eax-0x38017ec]
  418cb7:	sbb    BYTE PTR ds:0xefe7acf9,dl
  418cbd:	dec    edi
  418cbe:	test   DWORD PTR [ecx+0x198c0df4],edx
  418cc4:	jb     0x418cf8
  418cc6:	mov    DWORD PTR [esi+0x75],esp
  418cc9:	mov    ds:0xbef507d6,al
  418cce:	call   0x12b26c23
  418cd3:	pop    ss
  418cd4:	xchg   esi,eax
  418cd5:	nop
  418cd6:	jnp    0x418ce2
  418cd8:	mov    DWORD PTR [edi-0x56505059],esi
  418cde:	xchg   ebp,eax
  418cdf:	pop    ebx
  418ce0:	sbb    dh,BYTE PTR [ebp+0x15]
  418ce3:	mov    eax,ds:0xa939dda9
  418ce8:	sub    esp,DWORD PTR [edi-0x16cbb777]
  418cee:	fprem  
  418cf0:	add    DWORD PTR [esi],ecx
  418cf2:	add    al,0xef
  418cf4:	mov    ds,edx
  418cf6:	aas    
  418cf7:	jp     0x418cb8
  418cf9:	xchg   ebp,eax
  418cfa:	mov    ecx,0xe2c44640
  418cff:	iret   
  418d00:	ds retf 
  418d02:	push   cs
  418d03:	mov    cs,WORD PTR [esi-0x29]
  418d06:	xchg   ebp,eax
  418d07:	repz push 0xc4084940
  418d0d:	adc    eax,0x8b19eb36
  418d12:	pop    ebp
  418d13:	(bad)  
  418d14:	sbb    dh,ch
  418d16:	xchg   ebp,eax
  418d17:	dec    ebx
  418d18:	imul   esp,DWORD PTR [esi+0x566a8392],0xffffffb7
  418d1f:	or     esp,DWORD PTR [edx+eax*1-0x4a]
  418d23:	push   ss
  418d24:	test   BYTE PTR [ecx],cl
  418d26:	lds    eax,FWORD PTR [edi+0x5f133b90]
  418d2c:	or     BYTE PTR [esi],dh
  418d2e:	adc    edi,DWORD PTR [edx+0x4c]
  418d31:	scas   eax,DWORD PTR es:[edi]
  418d32:	iret   
  418d33:	popa   
  418d34:	mov    ds:0x9d4cc657,al
  418d39:	inc    esi
  418d3a:	fisttp QWORD PTR [ecx+ebp*8]
  418d3d:	push   esi
  418d3e:	out    0x43,al
  418d40:	lea    ecx,ds:0x4961acfe
  418d46:	push   edi
  418d47:	cld    
  418d48:	jp     0x418cf0
  418d4a:	sub    bh,BYTE PTR [ecx]
  418d4c:	popa   
  418d4d:	inc    edx
  418d4e:	je     0x418d96
  418d50:	ins    BYTE PTR es:[edi],dx
  418d51:	nop
  418d52:	mov    ebp,0xd9a91e4d
  418d57:	xchg   esi,eax
  418d58:	dec    esi
  418d59:	idiv   DWORD PTR [edx]
  418d5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d5c:	push   esp
  418d5d:	pop    esi
  418d5e:	iret   
  418d5f:	leave  
  418d60:	out    0x55,al
  418d62:	inc    ebx
  418d63:	or     eax,0x861dd07c
  418d68:	repz add al,0xac
  418d6b:	mov    DWORD PTR [ecx+0x37470242],0x3b967f28
  418d75:	push   0x43
  418d77:	and    ch,cl
  418d79:	pop    edx
  418d7a:	(bad)  
  418d7b:	stc    
  418d7c:	sar    BYTE PTR [edx+ecx*8],0x77
  418d80:	mov    al,bl
  418d82:	data16 jno 0x418d82
  418d85:	push   0x36
  418d87:	mov    dh,0x8d
  418d89:	mov    eax,0x8773879d
  418d8e:	fwait
  418d8f:	sub    al,0x4b
  418d91:	jecxz  0x418d49
  418d93:	inc    ebp
  418d94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d95:	das    
  418d96:	test   al,0xb3
  418d98:	cmc    
  418d99:	sar    BYTE PTR [edi],cl
  418d9b:	dec    ebx
  418d9c:	cmp    ebx,DWORD PTR [edx+0x44879193]
  418da2:	mov    ch,0xf0
  418da4:	in     al,dx
  418da5:	data16 jge 0x418dce
  418da8:	rcl    DWORD PTR [eax-0x25],cl
  418dab:	fstp   QWORD PTR [eax+ebx*8-0x5a]
  418daf:	not    BYTE PTR [esi+0x6e739433]
  418db5:	jae    0x418da8
  418db7:	mov    bl,0xfb
  418db9:	and    cl,dh
  418dbb:	(bad)  
  418dbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418dbd:	lock js 0x418e3d
  418dc0:	sbb    ecx,DWORD PTR [esi+0x4b]
  418dc3:	xor    dl,0x96
  418dc6:	pop    ebp
  418dc7:	mov    al,ds:0x4fe8dd10
  418dcc:	cmc    
  418dcd:	dec    ebp
  418dce:	or     eax,0x60d30b9a
  418dd3:	mov    ah,BYTE PTR [edi-0x464af508]
  418dd9:	mov    cl,0x64
  418ddb:	add    al,0x7c
  418ddd:	dec    eax
  418dde:	dec    edx
  418ddf:	jmp    0xfd9fe5b7
  418de4:	les    esp,FWORD PTR [esi-0x7cab8384]
  418dea:	mov    dh,0x0
  418dec:	ret    
  418ded:	xchg   edi,eax
  418dee:	push   esp
  418def:	inc    eax
  418df0:	test   BYTE PTR [edi],ch
  418df2:	into   
  418df3:	lahf   
  418df4:	js     0x418e0a
  418df6:	inc    edi
  418df7:	icebp  
  418df8:	ja     0x418e47
  418dfa:	sub    al,0x70
  418dfc:	xchg   edx,eax
  418dfd:	js     0x418e4e
  418dff:	bswap  ebp
  418e01:	jg     0x418e4d
  418e03:	mov    ch,dl
  418e05:	(bad)  
  418e06:	cmp    DWORD PTR [edi-0x51],ebx
  418e09:	mov    ebp,0x92663502
  418e0e:	push   0x72
  418e10:	shl    DWORD PTR [ebp+ebp*2+0x33f423eb],1
  418e17:	push   esi
  418e18:	cmc    
  418e19:	mov    ch,0x48
  418e1b:	jbe    0x751d3efb
  418e21:	out    0x31,al
  418e23:	ds jmp 0x418e66
  418e26:	fcomp  QWORD PTR [ecx]
  418e28:	push   es
  418e29:	adc    al,0x8e
  418e2b:	and    DWORD PTR [ecx-0x77],eax
  418e2e:	ds push cs
  418e30:	add    ch,dh
  418e32:	jbe    0x418dcc
  418e34:	jg     0x418dec
  418e36:	mov    esi,0x559075
  418e3b:	pusha  
  418e3c:	call   0xafc9:0x8f14cb85
  418e43:	mov    bh,0x39
  418e45:	dec    edx
  418e46:	ja     0x418df8
  418e48:	rcl    BYTE PTR [eax],1
  418e4a:	jo     0x418e21
  418e4c:	cld    
  418e4d:	sbb    al,0xb0
  418e4f:	xchg   ebx,eax
  418e50:	xchg   edi,eax
  418e51:	ss out 0xd,eax
  418e54:	movzx  edi,BYTE PTR [edi-0x1a5b913d]
  418e5b:	pop    ds
  418e5c:	pop    ebp
  418e5d:	(bad)  
  418e5f:	dec    esi
  418e60:	mov    DWORD PTR [edx+0x63b1b3c1],eax
  418e66:	push   ecx
  418e67:	fucom  st(4)
  418e69:	jg     0x418e48
  418e6b:	outs   dx,BYTE PTR ds:[esi]
  418e6c:	jl     0x418e6f
  418e6e:	sbb    DWORD PTR [edx],ebp
  418e70:	fistp  WORD PTR [ebp-0x58]
  418e73:	xchg   edx,eax
  418e74:	mov    DWORD PTR ds:0x1a588ee2,0x77f4dddb
  418e7e:	daa    
  418e7f:	out    dx,eax
  418e80:	bound  esp,QWORD PTR [ebx+0x39eb9f91]
  418e86:	les    ebp,FWORD PTR [esi-0x7499720b]
  418e8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e8d:	outs   dx,DWORD PTR ds:[esi]
  418e8e:	mov    ecx,0xf7f31be
  418e93:	mov    ds:0x4b319e1d,eax
  418e98:	iret   
  418e99:	pop    ebx
  418e9a:	shl    DWORD PTR [ebp-0x55],cl
  418e9d:	push   0xb3872b10
  418ea2:	enter  0xb18a,0x3b
  418ea6:	dec    ebp
  418ea7:	cmp    esp,DWORD PTR [ebp+0x55]
  418eaa:	outs   dx,BYTE PTR ds:[esi]
  418eab:	cmp    esp,0x6e
  418eae:	stos   BYTE PTR es:[edi],al
  418eaf:	addr16 push eax
  418eb1:	shl    BYTE PTR [ebp+edi*4+0x30],cl
  418eb5:	add    eax,0xf3a4a2a9
  418eba:	repz retf 
  418ebc:	add    ecx,ecx
  418ebe:	pusha  
  418ebf:	push   ds
  418ec0:	or     bh,BYTE PTR ds:0xc04d5686
  418ec6:	pop    ds
  418ec7:	ja     0x418ec8
  418ec9:	popf   
  418eca:	push   ecx
  418ecb:	shl    DWORD PTR [edi+0x5c135657],cl
  418ed1:	cwde   
  418ed2:	dec    eax
  418ed3:	fstp   QWORD PTR [ebp+0x27e8eca5]
  418ed9:	mov    cl,0x63
  418edb:	mov    eax,ds:0x3b4b97a
  418ee0:	repnz int 0x2a
  418ee3:	in     al,dx
  418ee4:	(bad)  [edx]
  418ee6:	not    dh
  418ee8:	mov    al,0x62
  418eea:	fnclex 
  418eec:	and    ah,BYTE PTR [ebx+0x26ef4101]
  418ef2:	aaa    
  418ef3:	xchg   esi,eax
  418ef4:	adc    ebp,DWORD PTR [esi+eiz*8]
  418ef7:	aad    0xd
  418ef9:	in     al,dx
  418efa:	(bad)  
  418efc:	push   eax
  418efd:	mov    DWORD PTR [ecx-0x66],esi
  418f00:	inc    ecx
  418f01:	(bad)  
  418f02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f03:	jmp    0x8eb0:0xfc1917
  418f0a:	add    ecx,esi
  418f0c:	out    dx,eax
  418f0d:	xchg   DWORD PTR [edx],ebx
  418f0f:	ja     0x418f49
  418f11:	jmp    0x7d8cc38e
  418f16:	push   0x2b
  418f18:	or     ah,BYTE PTR [eax]
  418f1a:	adc    edi,ecx
  418f1c:	loope  0x418f58
  418f1e:	or     al,0xec
  418f20:	lds    ebx,FWORD PTR [ebp-0x4a6be479]
  418f26:	loope  0x418f6f
  418f28:	out    0xb7,eax
  418f2a:	pop    es
  418f2b:	ja     0x418f92
  418f2d:	jmp    0x418eb1
  418f2f:	and    esp,DWORD PTR [ebp-0x33]
  418f32:	inc    esp
  418f33:	and    dh,0xc1
  418f36:	mov    eax,0x5c08543e
  418f3b:	sub    bl,BYTE PTR [eax+0x42]
  418f3e:	bound  ebx,QWORD PTR ds:0x4c79eafe
  418f44:	imul   esp,ebp,0x4d6eef3
  418f4a:	mov    BYTE PTR [ebx-0x246f7899],bh
  418f50:	mov    ds:0xa585ee2a,eax
  418f55:	mov    al,0x5d
  418f57:	dec    eax
  418f58:	jnp    0x418fd7
  418f5a:	mov    al,ds:0x8b39a9d8
  418f5f:	test   BYTE PTR [ebx+0x16f3b351],ch
  418f65:	xor    DWORD PTR gs:[esi-0x15a733b7],esi
  418f6c:	mov    ah,0x5c
  418f6e:	push   es
  418f6f:	mov    ah,0xc3
  418f71:	push   ecx
  418f72:	imul   ebx,DWORD PTR [eax-0x69d93024],0x5f
  418f79:	in     eax,0xe9
  418f7b:	xchg   DWORD PTR [ebx+0x6f],ecx
  418f7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f7f:	je     0x418f1b
  418f81:	mov    dh,dl
  418f83:	das    
  418f84:	in     al,0xc6
  418f86:	rcl    DWORD PTR [eax-0x2f669297],0x90
  418f8d:	popf   
  418f8e:	ret    
  418f8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f90:	add    esi,0x92e3a002
  418f96:	out    dx,eax
  418f97:	or     bh,bl
  418f99:	sbb    eax,0xf9d2346
  418f9e:	cmp    eax,0xd439a538
  418fa3:	sub    eax,0x98b43b7d
  418fa8:	or     al,0xdb
  418faa:	jp     0x418f8a
  418fac:	dec    edi
  418fad:	pop    ecx
  418fae:	in     eax,dx
  418faf:	push   ebx
  418fb0:	dec    eax
  418fb1:	adc    al,0x80
  418fb3:	popf   
  418fb4:	push   ds
  418fb5:	and    cl,cl
  418fb7:	dec    eax
  418fb8:	mov    gs,WORD PTR [edx+0x14]
  418fbb:	aad    0x7b
  418fbd:	loope  0x418f8c
  418fbf:	out    dx,eax
  418fc0:	popf   
  418fc1:	and    ebx,DWORD PTR [ecx-0x25]
  418fc4:	call   0x9c879d81
  418fc9:	call   DWORD PTR [edi]
  418fcb:	sub    BYTE PTR [ecx+0x3684d65a],bh
  418fd1:	mov    edx,0x246559d6
  418fd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fd7:	adc    edi,DWORD PTR [esi]
  418fd9:	std    
  418fda:	jno    0x41903b
  418fdc:	adc    al,ch
  418fde:	dec    esi
  418fdf:	sbb    DWORD PTR [ebx+ebp*8],edx
  418fe2:	mov    eax,ds:0x773bdcf
  418fe7:	test   al,0x9
  418fe9:	adc    eax,0x7b6c041d
  418fee:	dec    ecx
  418fef:	pusha  
  418ff0:	and    BYTE PTR [ebx],ch
  418ff2:	xchg   esp,eax
  418ff3:	lods   eax,DWORD PTR ds:[esi]
  418ff4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ff5:	xchg   edi,eax
  418ff6:	imul   edi,DWORD PTR [ebp-0x26],0x6
  418ffa:	jmp    0x418fa2
  418ffc:	xor    BYTE PTR fs:[edi+0x770da08a],0xd1
  419004:	sahf   
  419005:	add    ebp,DWORD PTR [esi+0x43f3c4df]
  41900b:	cmp    eax,0xe267f5ea
  419010:	jp     0x418ffa
  419012:	data16 (bad) 
  419015:	or     ecx,DWORD PTR [ebp-0x2f88efff]
  41901b:	jl     0x418faa
  41901d:	pop    esp
  41901e:	out    dx,eax
  41901f:	cli    
  419020:	sbb    ebx,ebp
  419022:	cli    
  419023:	cwde   
  419024:	out    dx,eax
  419025:	push   ss
  419026:	dec    edi
  419027:	sbb    BYTE PTR [esi],0x69
  41902a:	mov    ebp,0x3237464e
  41902f:	sar    ecx,cl
  419031:	inc    eax
  419032:	pop    esp
  419033:	sbb    DWORD PTR [ebp-0x2cdabcdf],0x3bda02fe
  41903d:	xchg   BYTE PTR [esi-0x75686ba5],bl
  419043:	inc    esp
  419044:	pop    ebx
  419045:	and    al,0x2d
  419047:	lods   eax,DWORD PTR ds:[esi]
  419048:	or     DWORD PTR [eax+0x71],0x594ad469
  41904f:	dec    eax
  419050:	inc    ebp
  419051:	xchg   esp,eax
  419052:	jge    0x418fe4
  419054:	or     ecx,DWORD PTR [ecx-0xc]
  419057:	mov    ds,WORD PTR [edi]
  419059:	cmp    eax,0xa1c6595
  41905e:	ror    DWORD PTR [esi+0x28],1
  419061:	push   eax
  419062:	inc    eax
  419063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419064:	repz dec esi
  419066:	inc    esi
  419067:	ja     0x41909a
  419069:	jmp    0x4363f37e
  41906e:	ss sti 
  419070:	ins    DWORD PTR es:[edi],dx
  419071:	push   esp
  419072:	(bad)  
  419073:	pop    esi
  419074:	loopne 0x4190f3
  419076:	jmp    0xe463d527
  41907b:	cdq    
  41907c:	push   ecx
  41907d:	push   0x17d3d437
  419082:	retf   
  419083:	pop    ecx
  419084:	mov    al,ds:0x1d7a7c8b
  419089:	or     BYTE PTR ds:0x2304dce1,ah
  41908f:	fidivr DWORD PTR [ebx-0x51]
  419092:	cld    
  419093:	sbb    BYTE PTR [ecx+0x6c],dl
  419096:	push   eax
  419097:	push   ebx
  419098:	dec    edi
  419099:	fld    TBYTE PTR ds:0xa8cc3f5
  41909f:	dec    eax
  4190a0:	sub    ch,BYTE PTR [edi+0x75]
  4190a3:	repnz xor BYTE PTR [esi+0x47],al
  4190a7:	or     dl,al
  4190a9:	nop
  4190aa:	fcomp  DWORD PTR [ebx-0x56]
  4190ad:	xchg   esi,eax
  4190ae:	ins    DWORD PTR es:[di],dx
  4190b0:	cwde   
  4190b1:	cmp    ebx,esi
  4190b3:	add    bl,cl
  4190b5:	xchg   DWORD PTR [esi+0x60fee5d9],edx
  4190bb:	add    ch,BYTE PTR [edi]
  4190bd:	mov    al,ds:0x5d01855c
  4190c2:	or     edi,DWORD PTR [esi-0x6a]
  4190c5:	outs   dx,DWORD PTR ds:[esi]
  4190c6:	inc    edx
  4190c7:	stos   BYTE PTR es:[edi],al
  4190c8:	sar    dh,0x7d
  4190cb:	mov    bh,0x50
  4190cd:	test   BYTE PTR [ecx-0x31],dh
  4190d0:	cld    
  4190d1:	dec    ebp
  4190d2:	call   0x696334e0
  4190d7:	xor    al,0xef
  4190d9:	nop
  4190da:	sbb    DWORD PTR [esi],edx
  4190dc:	xchg   DWORD PTR [eax+0x58],esi
  4190df:	dec    eax
  4190e0:	jno    0x419115
  4190e2:	(bad)  
  4190e3:	out    dx,eax
  4190e4:	in     eax,0xd2
  4190e6:	mov    al,ds:0xc3cf3de9
  4190eb:	jb     0x41907b
  4190ed:	inc    esp
  4190ee:	mov    esp,0x82aa21ba
  4190f3:	arpl   WORD PTR [eax+0x1d2dde1c],cx
  4190f9:	adc    al,0xdc
  4190fb:	test   eax,0xef2cb1c
  419100:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419101:	ins    DWORD PTR es:[edi],dx
  419102:	sbb    eax,0x5bc54937
  419107:	add    al,0xdb
  419109:	add    eax,0xde794cdd
  41910e:	sub    al,0x13
  419110:	mov    ds:0x4a73d754,eax
  419115:	div    DWORD PTR [ecx+eiz*2+0x15]
  419119:	sbb    bh,BYTE PTR [esi-0x4c]
  41911c:	sbb    eax,0x123a34b9
  419121:	loope  0x4190a9
  419123:	push   eax
  419124:	mov    ds:0x69859742,al
  419129:	push   ss
  41912a:	repnz adc dh,cl
  41912d:	xor    DWORD PTR [ebx],edx
  41912f:	jbe    0x4190c1
  419131:	inc    ecx
  419133:	jo     0x4190e2
  419135:	mov    eax,0x67537786
  41913a:	shr    DWORD PTR [ebx+0x75],0x8a
  41913e:	cwde   
  41913f:	fst    st(1)
  419141:	pop    edi
  419142:	mov    ds:0x11b2a0c7,al
  419147:	mov    dh,0x9f
  419149:	jge    0x4190e0
  41914b:	sbb    al,0x8c
  41914d:	in     eax,dx
  41914e:	push   ecx
  41914f:	(bad)
  419153:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419154:	pop    es
  419155:	test   eax,0x9a2eb065
  41915a:	sbb    al,0xf7
  41915c:	js     0x419102
  41915e:	mov    ecx,0xe7e6c761
  419163:	test   DWORD PTR [ecx-0x10c65b95],0x7c459d13
  41916d:	out    dx,eax
  41916e:	adc    al,0x5f
  419170:	mov    ebx,0xc0444222
  419175:	jb     0x4191a8
  419177:	mov    esi,0x2da54cf8
  41917c:	jmp    0xfe0b:0xf8d134b1
  419183:	mov    bh,0x31
  419185:	jmp    0x4191c7
  419187:	xor    al,0x96
  419189:	fsubr  st,st(2)
  41918b:	push   edx
  41918c:	call   0xd03816ae
  419191:	repnz mov esp,0xd0fe2d8d
  419197:	enter  0xd7c9,0x42
  41919b:	jmp    0x330191c0
  4191a0:	pop    edx
  4191a1:	enter  0xfbcd,0x1e
  4191a5:	out    0xcc,al
  4191a7:	int    0x5b
  4191a9:	dec    ebx
  4191aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191ab:	jmp    0xff351561
  4191b0:	or     edx,DWORD PTR [ecx]
  4191b2:	fidiv  DWORD PTR ds:0x8eb9c2af
  4191b8:	and    al,0xf2
  4191ba:	lds    edx,FWORD PTR [esi]
  4191bc:	sub    al,0xc6
  4191be:	inc    ebp
  4191bf:	xchg   esi,eax
  4191c0:	and    eax,0xe0b76b0
  4191c5:	jmp    0x419193
  4191c7:	push   0x13
  4191c9:	hlt    
  4191ca:	cs push ds
  4191cc:	(bad)  
  4191cd:	imul   ecx,DWORD PTR [ecx],0xffffffbb
  4191d0:	stc    
  4191d1:	lahf   
  4191d2:	aad    0xb5
  4191d4:	std    
  4191d5:	sbb    eax,ecx
  4191d7:	adc    eax,0x79ab609f
  4191dc:	push   esi
  4191dd:	adc    al,0x5c
  4191df:	push   esp
  4191e0:	in     al,dx
  4191e1:	test   al,0xa5
  4191e3:	sbb    esp,DWORD PTR [eax+0x140f2758]
  4191e9:	addr16 mov bh,0x32
  4191ec:	adc    eax,DWORD PTR ds:0xbce704b0
  4191f2:	mov    ds:0x93098476,al
  4191f7:	and    al,0x4c
  4191f9:	cmc    
  4191fa:	sbb    eax,0x140092e7
  4191ff:	cmp    al,BYTE PTR [eax-0x413e625c]
  419205:	cmp    bl,BYTE PTR [eax]
  419207:	add    cl,BYTE PTR [ecx-0x4b]
  41920a:	fdiv   DWORD PTR [edx-0xd]
  41920d:	xchg   edx,eax
  41920e:	daa    
  41920f:	sub    al,0xa3
  419211:	sub    ebp,edi
  419213:	jnp    0x4191da
  419215:	adc    eax,0xea5e1f3
  41921a:	mov    edi,0x5cedc781
  41921f:	call   0x1ef61ea6
  419224:	in     eax,0x71
  419226:	mov    ebx,0x4003f83a
  41922b:	ins    DWORD PTR es:[edi],dx
  41922c:	iret   
  41922d:	test   BYTE PTR [eax+0x4e6d4571],bl
  419233:	aad    0x56
  419235:	pop    esp
  419236:	int    0x1f
  419238:	mov    ch,0x4a
  41923a:	jg     0x41926d
  41923c:	mov    ch,0x70
  41923e:	shl    BYTE PTR [edx-0x32f6d171],0xf1
  419245:	push   ds
  419246:	retf   0x59f6
  419249:	test   BYTE PTR [ebx+0x7b],ah
  41924c:	xchg   ebx,eax
  41924d:	lahf   
  41924e:	inc    ebp
  41924f:	in     al,dx
  419250:	lods   al,BYTE PTR ds:[esi]
  419251:	sti    
  419252:	adc    BYTE PTR [edx-0x4b1be872],dh
  419258:	scas   eax,DWORD PTR es:[edi]
  419259:	add    BYTE PTR [ebx+0x5daf29ad],0xc0
  419260:	jmp    0x4191e9
  419262:	ins    DWORD PTR es:[edi],dx
  419263:	dec    esi
  419264:	sub    DWORD PTR [eax],eax
  419266:	adc    BYTE PTR [edi+eiz*1],ah
  419269:	mov    ebx,0x1d978f97
  41926e:	cmp    DWORD PTR [edx-0x2df083aa],0xd95b0ce4
  419278:	push   ebx
  419279:	inc    esi
  41927a:	rcl    esi,cl
  41927c:	jmp    0x4e84:0xd18ae99e
  419283:	mov    al,0xb
  419285:	pop    esi
  419286:	xlat   BYTE PTR ds:[ebx]
  419287:	mov    ah,0xbf
  419289:	sub    al,BYTE PTR [ebx+0x1be18e74]
  41928f:	out    dx,eax
  419290:	aad    0x3d
  419292:	xchg   ebp,edx
  419294:	cs inc esp
  419296:	sti    
  419297:	adc    al,0x8c
  419299:	hlt    
  41929a:	bnd ret 
  41929c:	stos   DWORD PTR es:[edi],eax
  41929d:	cmp    bh,BYTE PTR [edx-0x8f79ccf]
  4192a3:	retf   0xde1f
  4192a6:	(bad)  
  4192a7:	dec    esi
  4192a8:	repnz dec ecx
  4192aa:	dec    edi
  4192ab:	add    eax,0xe72dab20
  4192b0:	stc    
  4192b1:	push   0xfffffff9
  4192b3:	das    
  4192b4:	sub    dh,dh
  4192b6:	fsub   QWORD PTR [ebp+eax*2+0x6b]
  4192ba:	push   0xfb2341aa
  4192bf:	sub    al,BYTE PTR [eax+ebp*1+0x53]
  4192c3:	lea    esp,[ecx-0x32dffd09]
  4192c9:	jmp    0x96c9:0x824fdc8c
  4192d0:	hlt    
  4192d1:	stos   BYTE PTR es:[edi],al
  4192d2:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4192d4:	add    ebp,ebp
  4192d6:	ins    BYTE PTR es:[edi],dx
  4192d7:	xor    DWORD PTR [edi],0xffffffb1
  4192da:	cmp    esi,ebp
  4192dc:	out    0x2b,al
  4192de:	cmp    eax,edx
  4192e0:	add    eax,0x93d3d851
  4192e5:	inc    eax
  4192e6:	sbb    al,0xd8
  4192e8:	pusha  
  4192e9:	jno    0x419368
  4192eb:	mov    ch,0xce
  4192ed:	cs add al,0xf6
  4192f0:	shr    DWORD PTR [ecx+0x750fa0b],0x36
  4192f7:	dec    edx
  4192f8:	idiv   BYTE PTR [edx-0x4301da9c]
  4192fe:	(bad)
  419301:	retf   0xff38
  419304:	jl     0x419303
  419306:	mov    eax,0xfacbce52
  41930b:	shr    DWORD PTR [esi],0xa
  41930e:	ror    BYTE PTR [ecx],0xf1
  419311:	mov    edx,0x3c231c85
  419316:	pop    ds
  419317:	inc    esi
  419318:	sub    BYTE PTR [edi],al
  41931a:	jbe    0x4192bf
  41931c:	xchg   esi,eax
  41931d:	sub    eax,0xb07fb210
  419322:	adc    al,0x6b
  419324:	jle    0x419382
  419326:	test   ebp,edi
  419328:	xchg   ecx,eax
  419329:	push   0x82c12adb
  41932e:	cs stos DWORD PTR es:[edi],eax
  419330:	dec    esp
  419331:	xchg   esp,eax
  419332:	pop    esi
  419333:	mov    BYTE PTR [esi-0x218a6e3f],bl
  419339:	scas   al,BYTE PTR es:[edi]
  41933a:	outs   dx,BYTE PTR ds:[esi]
  41933b:	mov    esi,0x50579fe1
  419340:	jp     0x41931e
  419342:	scas   eax,DWORD PTR es:[edi]
  419343:	jne    0x419306
  419345:	mov    esp,0x9dc14ab8
  41934a:	jnp    0x419363
  41934c:	add    BYTE PTR [ecx],ch
  41934e:	inc    ebp
  41934f:	out    0xfd,al
  419351:	cmp    ebx,ecx
  419353:	mov    bl,BYTE PTR [ebx+ebp*4]
  419356:	cmp    edx,ecx
  419358:	(bad)
  41935c:	jae    0x419363
  41935e:	sub    al,0xae
  419360:	imul   ebp,DWORD PTR [ecx+0x6ec19f5b],0xffffffa5
  419367:	fs popa 
  419369:	jb     0x419351
  41936b:	jg     0x41934e
  41936d:	mov    ecx,0x5ae3e659
  419372:	jae    0x41934d
  419374:	stos   DWORD PTR es:[edi],eax
  419375:	imul   ebp,DWORD PTR [eax+0x42ec53bf],0x1c
  41937c:	jae    0x41937a
  41937e:	ret    
  41937f:	test   al,0xe3
  419381:	sub    esi,edi
  419383:	pop    esi
  419384:	dec    esp
  419385:	pop    eax
  419386:	(bad)  
  419387:	sub    dh,ah
  419389:	sbb    dh,dl
  41938b:	xchg   ebp,eax
  41938c:	dec    ebx
  41938d:	dec    esp
  41938e:	mov    edx,0xc315703b
  419393:	push   cs
  419394:	stc    
  419395:	shl    BYTE PTR ss:[edi+ebp*1+0x32],cl
  41939a:	retf   
  41939b:	mov    ds:0xa5ba384d,al
  4193a0:	push   ebx
  4193a1:	adc    esp,DWORD PTR [eax+0x5a]
  4193a4:	stc    
  4193a5:	add    esp,DWORD PTR [edi+0x79]
  4193a8:	push   ebx
  4193a9:	daa    
  4193aa:	dec    DWORD PTR [edi+0x36d0b42a]
  4193b0:	ds aad 0x19
  4193b3:	mov    eax,ds:0x48a77ce6
  4193b8:	inc    ecx
  4193b9:	mov    edx,0xf65d2c47
  4193be:	dec    ecx
  4193bf:	icebp  
  4193c0:	push   ecx
  4193c1:	rol    BYTE PTR [ebx+0x54],cl
  4193c4:	and    dh,BYTE PTR [eax-0x9]
  4193c7:	sub    bh,BYTE PTR [ebp-0x2a5ac2cc]
  4193cd:	jmp    0x8812:0x8008dc17
  4193d4:	hlt    
  4193d5:	mov    ss,WORD PTR [ebx-0x79]
  4193d8:	inc    ebx
  4193d9:	cmp    eax,0x60b088fc
  4193de:	jbe    0x41943c
  4193e0:	(bad)  
  4193e1:	sub    DWORD PTR [edx-0x48758cca],eax
  4193e7:	mov    ebp,gs
  4193e9:	mov    esp,0x59b1ab9c
  4193ee:	in     eax,dx
  4193ef:	push   cs
  4193f0:	adc    esi,DWORD PTR [edx+0x51dc8f75]
  4193f6:	inc    eax
  4193f7:	test   BYTE PTR [edi+edi*8-0x27368491],cl
  4193fe:	into   
  4193ff:	cmp    BYTE PTR [esi+ebp*4],0x33
  419403:	int3   
  419404:	inc    edi
  419405:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419406:	pop    esi
  419407:	lods   al,BYTE PTR ds:[esi]
  419408:	xor    eax,esp
  41940a:	xchg   esi,eax
  41940b:	sbb    DWORD PTR [edx-0x67],0xfffffff6
  41940f:	sbb    eax,0xb3b1533c
  419414:	(bad)  
  419415:	jbe    0x4193cf
  419417:	lahf   
  419418:	popf   
  419419:	and    esp,ebx
  41941b:	inc    edi
  41941c:	pop    ebx
  41941d:	(bad)
  419420:	fcom   DWORD PTR [esi-0x555d5696]
  419426:	add    al,0x52
  419429:	aam    0x85
  41942b:	popa   
  41942c:	sbb    al,0x5
  41942e:	jl     0x4193e5
  419430:	xchg   ecx,eax
  419431:	icebp  
  419432:	add    cl,BYTE PTR [esi]
  419434:	pop    edi
  419435:	in     al,dx
  419436:	jecxz  0x419422
  419438:	mov    BYTE PTR ds:0x1926417,dl
  41943e:	sub    al,0x43
  419440:	dec    ebp
  419441:	int3   
  419442:	imul   eax,DWORD PTR [ecx],0xa
  419445:	xchg   esi,eax
  419446:	in     al,dx
  419447:	sahf   
  419448:	cmp    eax,0xee3145a5
  41944d:	daa    
  41944e:	adc    BYTE PTR [edx+0x39],0x27
  419452:	add    bl,BYTE PTR [edi+0x65]
  419455:	inc    esp
  419456:	sbb    eax,0x711baf50
  41945b:	cmp    bh,BYTE PTR [esi-0x6869e163]
  419461:	and    esi,DWORD PTR [esp+ecx*2]
  419464:	mov    al,0x5
  419466:	jbe    0x4194c0
  419468:	and    bl,BYTE PTR [ecx]
  41946a:	xor    eax,0x3d5c8bd2
  41946f:	inc    edx
  419470:	test   BYTE PTR [ecx],0x2f
  419473:	inc    ebx
  419474:	adc    ebx,ecx
  419476:	inc    ebp
  419477:	jg     0x419450
  419479:	sbb    al,0xba
  41947b:	mov    ch,0x9b
  41947d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41947e:	inc    ecx
  41947f:	scas   al,BYTE PTR es:[edi]
  419480:	pop    es
  419481:	sbb    al,0x67
  419483:	in     eax,dx
  419484:	jmp    0x3119:0x18ca21bc
  41948b:	test   BYTE PTR [esi],0xa8
  41948e:	mov    bl,0x15
  419490:	aaa    
  419491:	dec    edi
  419492:	xchg   ebx,eax
  419493:	(bad)  
  419494:	(bad)  
  419495:	lahf   
  419496:	inc    edx
  419497:	jns    0x41944d
  419499:	call   esp
  41949b:	jno    0x4194b5
  41949d:	dec    ebx
  41949e:	mov    ds:0x7bf2107c,eax
  4194a3:	pusha  
  4194a4:	pop    edx
  4194a5:	inc    esp
  4194a6:	std    
  4194a7:	mov    WORD PTR [edi],?
  4194a9:	cdq    
  4194aa:	fcmovnb st,st(1)
  4194ac:	push   edx
  4194ad:	call   0x84ce9f0a
  4194b2:	sar    DWORD PTR [ebx],1
  4194b4:	and    al,BYTE PTR [ecx+edi*4]
  4194b7:	out    0x88,eax
  4194b9:	xchg   edi,eax
  4194ba:	stc    
  4194bb:	rol    ebp,cl
  4194bd:	leave  
  4194be:	test   eax,0xf8611873
  4194c3:	hlt    
  4194c4:	cmovb  edx,DWORD PTR [eax]
  4194c7:	ss pop eax
  4194c9:	xchg   edx,eax
  4194ca:	jl     0x4194d7
  4194cc:	and    eax,0xeb236442
  4194d1:	sub    DWORD PTR [ebp-0x3d9ca5eb],edx
  4194d7:	pop    esi
  4194d8:	adc    eax,0x6a46ebbb
  4194dd:	xlat   BYTE PTR ds:[ebx]
  4194de:	cmp    ecx,DWORD PTR [edx+ecx*8-0x71f89598]
  4194e5:	cmp    DWORD PTR [ebx-0x675a69e8],0xffffff90
  4194ec:	ret    0x73bc
  4194ef:	ins    DWORD PTR es:[edi],dx
  4194f0:	inc    edx
  4194f2:	cld    
  4194f3:	mov    esp,0x13a5bd6d
  4194f8:	and    dh,dl
  4194fa:	mov    edx,0x6bfc2e50
  4194ff:	test   eax,0x2947a5a4
  419504:	fld    DWORD PTR [ecx-0x651963a4]
  41950a:	and    ebx,DWORD PTR ds:0xa1a85cea
  419510:	(bad)  
  419512:	ins    DWORD PTR es:[edi],dx
  419513:	pop    eax
  419514:	add    DWORD PTR [eax-0x41],esi
  419517:	call   0x570d:0x7b27522e
  41951e:	push   ss
  41951f:	shl    DWORD PTR [ebx-0x36],1
  419522:	rcl    DWORD PTR [edi+0xc],0xdc
  419526:	fidiv  WORD PTR [edi+0x114d801c]
  41952c:	sub    bh,BYTE PTR [eax]
  41952e:	mov    eax,ds:0xf0c54794
  419533:	leave  
  419534:	call   0xd04b4b88
  419539:	xor    DWORD PTR ds:0x6713a259,eax
  41953f:	inc    BYTE PTR [ebx+0xd]
  419542:	imul   edx,DWORD PTR [ebx+0x3ff920d0],0x7d75b96c
  41954c:	dec    esp
  41954d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41954e:	inc    ebx
  41954f:	add    eax,0xb99d579
  419554:	mov    edx,0xa2278702
  419559:	sti    
  41955a:	mov    edi,cr7
  41955d:	lock mov eax,0x2f85ed64
  419563:	je     0x4195cb
  419565:	mov    eax,0x39e47093
  41956a:	imul   eax,DWORD PTR [edx+0x1e],0xc
  41956e:	or     DWORD PTR [edx-0x67e53565],ecx
  419574:	aam    0x9c
  419576:	jae    0x419522
  419578:	adc    dl,BYTE PTR [edi-0x374c674c]
  41957e:	mov    dh,0x72
  419580:	ror    BYTE PTR [ebp+0x5d],cl
  419583:	pop    edx
  419584:	xor    BYTE PTR ds:0x866fe94f,dh
  41958a:	imul   eax,DWORD PTR [edi-0x56],0x67
  41958e:	cmp    eax,0xb73ae75d
  419593:	repnz les edi,FWORD PTR [ebp+0x631dc6ac]
  41959a:	mov    cl,0x24
  41959c:	lea    ebp,[esp+ebp*1]
  41959f:	pop    ecx
  4195a0:	(bad)  
  4195a1:	aas    
  4195a2:	push   ebp
  4195a3:	xchg   DWORD PTR [ecx+0x12],esp
  4195a6:	mov    WORD PTR [edi+0x7a990ccc],es
  4195ac:	mov    eax,ds:0x75b40441
  4195b1:	ins    BYTE PTR es:[edi],dx
  4195b2:	int    0x1
  4195b4:	dec    ebx
  4195b5:	shr    esp,cl
  4195b7:	data16 aaa 
  4195b9:	xor    bl,BYTE PTR [ebp+ecx*1-0x6a]
  4195bd:	dec    edi
  4195be:	in     eax,0xc4
  4195c0:	cdq    
  4195c1:	retf   
  4195c2:	dec    edi
  4195c3:	out    dx,al
  4195c4:	xchg   edx,eax
  4195c5:	or     cl,BYTE PTR [ebx+eiz*1-0x3829704e]
  4195cc:	pop    di
  4195ce:	idiv   BYTE PTR [edx+0x4afa67e1]
  4195d4:	ds cdq 
  4195d6:	jge    0x419653
  4195d8:	into   
  4195d9:	loop   0x4195f1
  4195db:	pop    ds
  4195dc:	setnp  bl
  4195df:	push   eax
  4195e0:	rol    DWORD PTR [ecx-0x2e],1
  4195e3:	loop   0x419604
  4195e5:	or     esp,esp
  4195e7:	push   ecx
  4195e8:	retf   
  4195e9:	hlt    
  4195ea:	sbb    eax,0x9e156657
  4195ef:	xchg   BYTE PTR [eax+0x47ce708b],ch
  4195f5:	and    ah,bl
  4195f7:	push   edx
  4195f8:	inc    BYTE PTR [esi]
  4195fa:	sub    BYTE PTR [ecx-0x45],ah
  4195fd:	xor    esp,DWORD PTR [ebp+ecx*8+0x1b]
  419601:	push   DWORD PTR [ebx]
  419603:	or     eax,0xa8776593
  419608:	je     0x4195bf
  41960a:	xor    DWORD PTR [edi+esi*2+0x40],eax
  41960e:	jns    0x41963c
  419610:	sbb    ecx,DWORD PTR [ecx+0x31]
  419613:	cs mov ecx,ebp
  419616:	dec    ecx
  419617:	and    eax,0x13566781
  41961c:	jmp    0x4195da
  41961e:	or     bh,BYTE PTR [eax+0x2b]
  419621:	shl    DWORD PTR [eax-0x6d],0xd9
  419625:	pop    edi
  419626:	aaa    
  419627:	push   cs
  419628:	or     cl,BYTE PTR [eax+0x14816f81]
  41962e:	loope  0x419684
  419630:	adc    al,0x51
  419632:	push   0xe7a94b7c
  419637:	std    
  419638:	lahf   
  419639:	sbb    DWORD PTR [edi+0x31a9adaf],esi
  41963f:	adc    BYTE PTR [edx],dh
  419641:	sub    edx,DWORD PTR [si]
  419644:	mov    eax,0x1421ff27
  419649:	add    ecx,DWORD PTR [ecx-0x340fdf9a]
  41964f:	push   es
  419650:	dec    si
  419652:	xlat   BYTE PTR cs:[ebx]
  419654:	ret    0x3a70
  419657:	xchg   edi,eax
  419658:	cld    
  419659:	mov    ch,0x11
  41965b:	gs xor al,0x92
  41965e:	mov    al,0x84
  419660:	call   0xbf67:0x54c507b0
  419667:	jae    0x419636
  419669:	jb     0x419611
  41966b:	mov    cl,0xd8
  41966d:	mov    ah,BYTE PTR [ebx+eiz*2]
  419670:	mov    ecx,0x96210c76
  419675:	(bad)
  419679:	mov    bh,0x12
  41967b:	mov    esp,0xeaa6ad8d
  419680:	fisubr DWORD PTR [ebp-0x4f]
  419683:	or     esp,edx
  419685:	sbb    dh,BYTE PTR [ebx-0x4a]
  419688:	imul   ebx,DWORD PTR [edx+0x677ed78f],0xadd04b42
  419692:	call   0x6d7f:0x3c0492e3
  419699:	jb     0x41961e
  41969b:	push   esi
  41969c:	lea    edx,[eax+0x21]
  41969f:	mov    DWORD PTR [ecx],ebx
  4196a1:	mov    edx,esp
  4196a3:	aam    0x68
  4196a5:	fs call 0x8b039d9
  4196ab:	cmp    ecx,DWORD PTR [esi-0x79]
  4196ae:	fwait
  4196af:	add    BYTE PTR [eax-0x2f],al
  4196b2:	sub    DWORD PTR [ebp+0x1d7c6694],ecx
  4196b8:	or     bl,BYTE PTR ds:0x106acb2d
  4196be:	daa    
  4196bf:	jmp    0x6d52ac8b
  4196c4:	jbe    0x419735
  4196c6:	adc    esp,DWORD PTR ds:[eax+ebx*2]
  4196ca:	scas   eax,DWORD PTR es:[edi]
  4196cb:	or     al,0x86
  4196cd:	test   ebp,edi
  4196cf:	retf   
  4196d0:	mov    ds:0xc2d46ebb,eax
  4196d5:	jge    0x419692
  4196d7:	sub    BYTE PTR [edi+0x32fb6766],ch
  4196dd:	sub    ah,BYTE PTR [edx+eiz*2-0x5b906e57]
  4196e4:	repz mov esp,0x6c8d2c2e
  4196ea:	jg     0x4196c4
  4196ec:	xchg   ebp,eax
  4196ed:	jg     0x4196c0
  4196ef:	push   DWORD PTR [ecx-0x3b]
  4196f2:	cdq    
  4196f3:	pushf  
  4196f4:	or     bl,dl
  4196f6:	loop   0x419747
  4196f8:	out    0x6e,al
  4196fa:	add    eax,0x6ded5c38
  4196ff:	add    esp,DWORD PTR [edi+ecx*2]
  419702:	cwde   
  419703:	sub    al,0x25
  419705:	into   
  419706:	adc    eax,0xc74cb43b
  41970b:	js     0x419785
  41970d:	shl    BYTE PTR [eax-0x79],1
  419710:	std    
  419711:	mov    ebp,DWORD PTR [ecx]
  419713:	mov    cl,0xbd
  419715:	mov    al,0xb7
  419717:	inc    edi
  419718:	pushf  
  419719:	(bad)  
  41971a:	enter  0xa484,0xc9
  41971e:	lock mov ch,0x7
  419721:	jno    0x41973d
  419723:	pop    ebx
  419724:	sar    DWORD PTR [ecx-0x1b],1
  419727:	fdivr  DWORD PTR [ebx+0x2f]
  41972a:	and    DWORD PTR [edi],esi
  41972c:	cwde   
  41972d:	cmp    BYTE PTR [eax],0x58
  419730:	arpl   bp,dx
  419732:	in     eax,dx
  419733:	mov    esp,0x9b7c85c7
  419738:	das    
  419739:	xchg   ebx,eax
  41973a:	add    eax,0x85ae7ca5
  41973f:	into   
  419740:	dec    DWORD PTR ds:0xc57ac135
  419746:	repz fisttp DWORD PTR [eax+0x6ad706c0]
  41974d:	sbb    esi,DWORD PTR [edi-0x2c]
  419750:	out    dx,al
  419751:	repnz neg DWORD PTR [edx+0xef60354]
  419758:	stos   DWORD PTR es:[edi],eax
  419759:	xor    edi,ebx
  41975b:	xchg   esi,eax
  41975c:	cdq    
  41975d:	or     al,0x2f
  41975f:	cli    
  419760:	jo     0x4197ad
  419762:	rol    DWORD PTR [edi],0x1b
  419765:	push   ebx
  419766:	and    BYTE PTR [edx-0x2f88d5b6],dh
  41976c:	cmp    BYTE PTR [eax-0x12],0x3d
  419770:	repnz imul esi,esp,0x73
  419774:	pop    eax
  419775:	inc    edi
  419776:	or     BYTE PTR [edx*1+0x902728d],bl
  41977d:	fsubr  DWORD PTR [edi]
  41977f:	cli    
  419780:	popa   
  419781:	mov    WORD PTR [ebp+0x661239f1],ss
  419787:	(bad)  
  41978a:	popa   
  41978b:	pop    esi
  41978c:	mov    dh,0xbd
  41978e:	push   esi
  41978f:	pop    DWORD PTR [esi-0x2c]
  419792:	pop    ebx
  419793:	xor    BYTE PTR [edx],dh
  419795:	sbb    al,0xef
  419797:	push   0x77b00e38
  41979c:	push   0x6c
  41979e:	pop    eax
  41979f:	inc    edi
  4197a0:	and    bh,BYTE PTR [esi+0x319f6ef6]
  4197a6:	loope  0x4197e7
  4197a8:	or     dh,BYTE PTR [eax+0x61]
  4197ab:	inc    esi
  4197ac:	inc    eax
  4197ad:	scas   eax,DWORD PTR es:[edi]
  4197ae:	nop
  4197af:	jmp    0x483fff9e
  4197b4:	int    0x49
  4197b6:	aaa    
  4197b7:	clc    
  4197b8:	rol    BYTE PTR [eax],cl
  4197ba:	mov    ds:0xb3bfa1b1,al
  4197bf:	scas   al,BYTE PTR es:[edi]
  4197c0:	push   es
  4197c1:	ror    BYTE PTR [edi-0x31],1
  4197c4:	je     0x4197ec
  4197c6:	xor    ebx,DWORD PTR [eax+0x328f85e1]
  4197cc:	xor    cl,BYTE PTR [esi-0x2725e1d2]
  4197d2:	fs and al,0x5c
  4197d5:	pushf  
  4197d6:	and    bl,ah
  4197d8:	out    0x74,eax
  4197da:	inc    ecx
  4197db:	repz mov ebp,0x4cfb5a7f
  4197e1:	pop    edx
  4197e2:	outs   dx,BYTE PTR ds:[esi]
  4197e3:	mov    eax,ds:0xba6831a5
  4197e8:	mov    eax,ds:0xc6259953
  4197ed:	sub    BYTE PTR [ebp+0x5bcb0de3],cl
  4197f3:	and    ebp,0x1b
  4197f6:	int    0xd8
  4197f8:	fistp  WORD PTR [ecx*2-0x1af6d42d]
  4197ff:	ror    edx,0x32
  419802:	mov    ah,0x55
  419804:	rol    DWORD PTR [edx+0x61ff579c],1
  41980a:	adc    eax,0xd08bb7f1
  41980f:	(bad)  
  419810:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419811:	or     BYTE PTR [ebx-0xa86c221],0xfd
  419818:	jmp    0x4197b4
  41981a:	retf   
  41981b:	jnp    0x41980b
  41981d:	and    esi,DWORD PTR [ebx-0x1ca25f96]
  419823:	cdq    
  419824:	mov    esi,0x47094914
  419829:	ret    0xda79
  41982c:	cmp    DWORD PTR [eax-0x5],0x7a1aa05b
  419833:	mov    esi,0x4243c977
  419838:	dec    ebp
  419839:	scas   al,BYTE PTR es:[edi]
  41983a:	push   ebx
  41983b:	addr16 test al,0x5a
  41983e:	jg     0x41982c
  419840:	add    ebx,DWORD PTR [ebp+ebx*8+0x18]
  419844:	jae    0x41987a
  419846:	or     BYTE PTR [ebp+0x5b20a0fa],bl
  41984c:	jmp    0xa0b2:0x383cf801
  419853:	inc    esp
  419854:	(bad)  [ecx]
  419856:	mov    al,0x7f
  419858:	ins    BYTE PTR es:[edi],dx
  419859:	xchg   edx,eax
  41985a:	pop    eax
  41985b:	icebp  
  41985c:	adc    al,0xe7
  41985e:	xor    ah,BYTE PTR [edi+0x5b355c67]
  419864:	repz mov WORD PTR [esi-0x5b07e4f0],es
  41986b:	mov    ecx,0xfa9bef60
  419870:	std    
  419871:	sub    DWORD PTR [ebx-0x14],0x6a8513c2
  419878:	inc    ecx
  419879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41987a:	inc    esp
  41987b:	pop    ds
  41987c:	dec    edx
  41987d:	enter  0x696c,0xb1
  419881:	push   esp
  419882:	clc    
  419883:	dec    esi
  419884:	cmp    ch,BYTE PTR [eax-0x42]
  419887:	pop    edx
  419888:	mov    dh,0xd
  41988a:	push   ebp
  41988b:	mov    al,ds:0x28a6c1f4
  419890:	cmc    
  419891:	mov    ah,0x57
  419893:	sub    edi,esp
  419895:	imul   edx,ecx,0x587474ac
  41989b:	sub    ebx,DWORD PTR [edi]
  41989d:	add    dl,bh
  41989f:	or     bh,BYTE PTR [edx+0x3df9d61d]
  4198a5:	pop    eax
  4198a6:	int    0xea
  4198a8:	(bad)  
  4198a9:	in     eax,dx
  4198aa:	sbb    edi,DWORD PTR [ecx-0x3a2a54b7]
  4198b0:	fldenv [ecx+0x2ac785f]
  4198b6:	and    eax,DWORD PTR [esi]
  4198b8:	pop    ds
  4198b9:	imul   ebp,ebx,0x74
  4198bc:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198be:	dec    eax
  4198bf:	repnz adc BYTE PTR [ecx-0x39],bl
  4198c3:	loopne 0x41992d
  4198c5:	pop    ecx
  4198c6:	sub    DWORD PTR [ebx],edi
  4198c8:	mov    bh,0xe
  4198ca:	sbb    BYTE PTR [ebx+0x24bf5cde],dh
  4198d0:	push   ecx
  4198d1:	into   
  4198d2:	xchg   ebx,ebp
  4198d4:	jmp    0x4198bb
  4198d6:	inc    esp
  4198d7:	daa    
  4198d8:	push   esp
  4198d9:	jge    0x41991c
  4198db:	pop    esp
  4198dc:	outs   dx,BYTE PTR ds:[esi]
  4198dd:	pushf  
  4198de:	loop   0x419898
  4198e0:	pop    edi
  4198e1:	bnd jge 0x4198d1
  4198e4:	jne    0x4198d6
  4198e6:	sar    BYTE PTR [ebp+0x79],cl
  4198e9:	lock push 0x2ad77cd7
  4198ef:	push   cs
  4198f0:	loopne 0x419914
  4198f2:	cmp    DWORD PTR [edi],ecx
  4198f4:	pop    ebp
  4198f5:	or     BYTE PTR [ebp+eax*2-0x32],al
  4198f9:	pop    ds
  4198fa:	mov    bl,0xb5
  4198fc:	jg     0x419922
  4198fe:	fst    DWORD PTR [ebx-0x6c227cbc]
  419904:	cmc    
  419905:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419906:	jo     0x41989e
  419908:	xlat   BYTE PTR ds:[ebx]
  419909:	in     eax,dx
  41990a:	cli    
  41990b:	jecxz  0x4198fa
  41990d:	mov    al,BYTE PTR [esi-0x18ca970f]
  419913:	lea    esi,[ebp-0x7ac8e1c6]
  419919:	mov    dh,bl
  41991b:	into   
  41991c:	push   ebp
  41991d:	shl    DWORD PTR [eax+esi*4-0x46],cl
  419921:	xor    al,0x76
  419923:	clc    
  419924:	sub    edx,ebx
  419926:	ret    0x32de
  419929:	adc    BYTE PTR [ebx],al
  41992b:	in     al,0xac
  41992d:	push   eax
  41992e:	ret    
  41992f:	xchg   edx,eax
  419930:	xchg   edi,eax
  419931:	mov    al,ds:0xffe109f8
  419936:	cmp    eax,0x38d44e91
  41993b:	aaa    
  41993c:	aad    0x5
  41993e:	sub    eax,0x9dc012b9
  419943:	add    BYTE PTR [edx-0x59cbdd43],dh
  419949:	inc    edx
  41994a:	test   al,0xa4
  41994c:	sbb    edx,esp
  41994e:	pop    edi
  41994f:	ins    DWORD PTR es:[edi],dx
  419950:	mov    ebp,0x73d6bff3
  419955:	push   ebx
  419956:	sbb    DWORD PTR [edi+0xf03e313],esp
  41995c:	shl    BYTE PTR [esi-0x17],1
  41995f:	mov    cl,0x49
  419961:	test   al,0x6f
  419963:	and    al,0x20
  419965:	lahf   
  419966:	ret    
  419967:	jmp    0x4198fe
  419969:	imul   ebx,DWORD PTR [ecx-0x26],0x366fb1d1
  419970:	mov    WORD PTR [ebp-0xae81306],?
  419976:	fstp   TBYTE PTR [ebx-0x151a04fd]
  41997c:	pop    ebx
  41997d:	and    al,0x60
  41997f:	iret   
  419980:	fbld   TBYTE PTR [edx-0x6235a501]
  419986:	dec    esp
  419987:	mov    eax,0xede5fe56
  41998c:	cmp    DWORD PTR [edi],ebp
  41998e:	mov    WORD PTR [edx-0x28fa32fd],ss
  419994:	xchg   edi,eax
  419995:	bnd ja 0x419994
  419998:	in     al,0x32
  41999a:	test   al,0xd6
  41999c:	push   ecx
  41999d:	stos   BYTE PTR es:[edi],al
  41999e:	into   
  41999f:	nop
  4199a0:	mov    bh,0xac
  4199a2:	and    eax,0xe28607e1
  4199a7:	fs repz pop esp
  4199aa:	jp     0x4199e4
  4199ac:	mov    edi,gs
  4199ae:	lods   al,BYTE PTR ds:[esi]
  4199af:	fstp   QWORD PTR [ebp-0x2f]
  4199b2:	xor    BYTE PTR [ebp-0x71c122da],bh
  4199b8:	lock mov dh,0xa1
  4199bb:	mov    al,0x33
  4199bd:	jae    0x419a3d
  4199bf:	pop    eax
  4199c0:	sbb    ecx,DWORD PTR [ebx-0x5826baa0]
  4199c6:	in     eax,dx
  4199c7:	leave  
  4199c8:	mov    ah,0xd6
  4199ca:	das    
  4199cb:	js     0x419951
  4199cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199ce:	fld    TBYTE PTR [ecx]
  4199d0:	xor    eax,0xf5dfdad6
  4199d5:	scas   al,BYTE PTR es:[edi]
  4199d6:	xchg   ebx,eax
  4199d7:	and    DWORD PTR [esi+0x58],edx
  4199da:	pop    ecx
  4199db:	popf   
  4199dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199dd:	or     eax,0xba709c3b
  4199e2:	mov    eax,0x4b08a95f
  4199e7:	mov    ds:0x5299b897,al
  4199ec:	mov    cl,0xb0
  4199ee:	std    
  4199ef:	mov    edi,0xf29f6ab7
  4199f4:	test   al,0xa1
  4199f6:	xor    ah,BYTE PTR [ecx-0x59]
  4199f9:	int    0xc2
  4199fb:	jno    0x419a45
  4199fd:	cmp    eax,0x8ff522d1
  419a02:	push   ecx
  419a03:	test   DWORD PTR [edi+0x2a],ebx
  419a06:	jmp    0x24cf6064
  419a0b:	aam    0xe4
  419a0d:	xchg   edi,eax
  419a0e:	xchg   esi,eax
  419a0f:	das    
  419a10:	fadd   st,st(2)
  419a12:	mov    al,0xb5
  419a14:	sbb    eax,0x95d2c1b6
  419a19:	arpl   WORD PTR [ebp+ebx*8-0x30],dx
  419a1d:	aad    0x3e
  419a1f:	cwde   
  419a20:	popf   
  419a21:	add    al,BYTE PTR [eax]
  419a23:	push   ebx
  419a24:	sbb    cl,dl
  419a26:	push   esp
  419a27:	push   cs
  419a28:	xchg   DWORD PTR [edx+0x31],ebp
  419a2b:	fiadd  DWORD PTR ss:[ecx+0x87363]
  419a32:	or     al,0x30
  419a34:	jae    0x419a71
  419a36:	cld    
  419a37:	cmp    al,0x75
  419a39:	mov    eax,0x68a304bd
  419a3e:	sbb    ecx,esi
  419a40:	or     edi,DWORD PTR [ebx+0x4e]
  419a43:	pop    edi
  419a44:	(bad)  
  419a45:	pop    edx
  419a46:	pop    ecx
  419a47:	(bad)  [ecx+edi*1-0x3f4c3fb5]
  419a4e:	jmp    0x5b76:0x79b70418
  419a55:	bnd jp 0x419a33
  419a58:	ds call 0x24818bc2
  419a5e:	pusha  
  419a5f:	jmp    0x271c1c35
  419a64:	rcl    DWORD PTR [edx-0x2e6687b],1
  419a6a:	cmp    dl,BYTE PTR [ebp-0x6]
  419a6d:	dec    ebp
  419a6e:	aam    0xdf
  419a70:	ins    BYTE PTR es:[edi],dx
  419a71:	xchg   ecx,eax
  419a72:	mov    ch,0x88
  419a74:	ins    DWORD PTR es:[edi],dx
  419a75:	pop    ss
  419a76:	aaa    
  419a77:	dec    ebp
  419a78:	push   cs
  419a79:	jbe    0x419a94
  419a7b:	adc    ecx,ebx
  419a7d:	adc    DWORD PTR [edi-0x47],edi
  419a80:	inc    edi
  419a81:	outs   dx,BYTE PTR ds:[esi]
  419a82:	sar    DWORD PTR [ecx-0x78041682],0xdc
  419a89:	cwde   
  419a8a:	or     eax,0x1c53722c
  419a8f:	and    al,0xae
  419a91:	xlat   BYTE PTR ds:[ebx]
  419a92:	mov    esp,edi
  419a94:	add    bl,BYTE PTR [esi-0x515a2ffd]
  419a9a:	pop    eax
  419a9b:	jp     0x419ad6
  419a9d:	stos   DWORD PTR es:[edi],eax
  419a9e:	cmc    
  419a9f:	loope  0x419a26
  419aa1:	popf   
  419aa2:	xor    al,0x81
  419aa4:	iret   
  419aa5:	sub    ecx,DWORD PTR [edi]
  419aa7:	add    ah,dl
  419aa9:	xchg   DWORD PTR [edi-0x46],ebp
  419aac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419aad:	(bad)  
  419aae:	jae    0x419a67
  419ab0:	and    ecx,DWORD PTR [ebp-0x55655430]
  419ab6:	ret    0xb724
  419ab9:	xor    eax,0x9c4f7d12
  419abe:	enter  0x616d,0x19
  419ac2:	pop    esp
  419ac3:	(bad)  
  419ac4:	push   ss
  419ac5:	aam    0xfe
  419ac7:	hlt    
  419ac8:	mov    ds:0xfc2fb38d,eax
  419acd:	hlt    
  419ace:	cmp    edi,ebx
  419ad0:	sbb    ch,BYTE PTR [edi+0x20]
  419ad3:	pop    edi
  419ad4:	fxtract 
  419ad6:	aas    
  419ad7:	fdivp  st(1),st
  419ad9:	jne    0x419ad0
  419adb:	pop    ss
  419adc:	hlt    
  419add:	in     al,0xf1
  419adf:	pop    ss
  419ae0:	or     cl,BYTE PTR [esi-0x51]
  419ae3:	push   0x51
  419ae5:	lahf   
  419ae6:	fbld   TBYTE PTR [ebp-0x67]
  419ae9:	push   ds
  419aea:	mov    ecx,0x5d9d8e46
  419aef:	dec    edx
  419af0:	shl    cl,0xec
  419af3:	scas   eax,DWORD PTR es:[edi]
  419af4:	add    BYTE PTR [edi+0x5e],bl
  419af7:	mov    esp,0x2e36617a
  419afc:	mov    bh,0xff
  419afe:	cmp    eax,0x8d6224e1
  419b03:	jb     0x419a9a
  419b05:	fnstsw WORD PTR [ebp+0x4bfc8cc2]
  419b0b:	add    eax,DWORD PTR [ebp-0x6e]
  419b0e:	pop    ecx
  419b0f:	mov    ds,WORD PTR [edi-0x5fc276d8]
  419b15:	lahf   
  419b16:	dec    edi
  419b17:	or     BYTE PTR [edx],bh
  419b19:	ins    DWORD PTR es:[edi],dx
  419b1a:	scas   eax,DWORD PTR es:[edi]
  419b1b:	nop
  419b1c:	sbb    dl,dl
  419b1e:	loop   0x419b9a
  419b20:	loopne 0x419b0c
  419b22:	push   cs
  419b23:	in     al,0xcf
  419b25:	or     al,cl
  419b27:	adc    eax,0xbf270deb
  419b2c:	out    dx,eax
  419b2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b2e:	jae    0x419b3e
  419b30:	sbb    bl,BYTE PTR [esi-0x3a]
  419b33:	call   DWORD PTR [eax-0x3]
  419b36:	(bad)  
  419b37:	out    dx,eax
  419b38:	push   0x1f61dadc
  419b3d:	add    DWORD PTR [ebp-0x4f],eax
  419b40:	or     BYTE PTR [ebx+0x66],0x6
  419b44:	iret   
  419b45:	xor    BYTE PTR [ebp-0x2e3ba24c],0x63
  419b4c:	scas   al,BYTE PTR es:[edi]
  419b4d:	fist   DWORD PTR [edx-0xf]
  419b50:	arpl   WORD PTR [ebx+0x38c4a53f],bx
  419b56:	das    
  419b57:	lahf   
  419b58:	mov    edx,0x624fdc70
  419b5d:	dec    ebx
  419b5e:	push   0x25
  419b60:	pop    esp
  419b61:	jne    0x419b5a
  419b63:	and    BYTE PTR [ecx+edx*4-0x147d1ca7],al
  419b6a:	ror    BYTE PTR [ebx+0x71],0x1a
  419b6e:	ds or  al,0x1e
  419b71:	dec    edx
  419b72:	cwde   
  419b73:	or     BYTE PTR [esi-0x13],0x8a
  419b77:	jg     0x419b86
  419b79:	std    
  419b7a:	xor    esi,edx
  419b7c:	iret   
  419b7d:	int    0x97
  419b7f:	jl     0x419b10
  419b81:	(bad)  
  419b82:	and    bl,dh
  419b84:	out    dx,al
  419b85:	mov    eax,ds:0x1b88824
  419b8a:	sub    ebp,DWORD PTR [eax]
  419b8c:	out    dx,al
  419b8d:	aad    0x32
  419b8f:	xchg   BYTE PTR [ecx],cl
  419b91:	dec    ebp
  419b92:	mov    ds:0x5cd66195,al
  419b97:	inc    ecx
  419b98:	sbb    eax,0xf5311761
  419b9d:	lock test eax,0x5810f5c0
  419ba3:	std    
  419ba4:	test   BYTE PTR [ebx+0x6cff012e],dh
  419baa:	sbb    al,0xf2
  419bac:	shl    DWORD PTR [edi],1
  419bae:	lods   al,BYTE PTR ds:[esi]
  419baf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bb0:	and    eax,0x4a7563cc
  419bb5:	int    0x33
  419bb7:	xchg   edi,eax
  419bb8:	gs loopne 0x419b7a
  419bbb:	inc    eax
  419bbc:	int    0xb8
  419bbe:	ficomp DWORD PTR [esi+eiz*2+0x33]
  419bc2:	fisub  DWORD PTR [ecx+0xa]
  419bc5:	outs   dx,BYTE PTR ds:[esi]
  419bc6:	shr    BYTE PTR [ecx],1
  419bc8:	cwde   
  419bc9:	fwait
  419bca:	push   0x10
  419bcc:	xchg   DWORD PTR [edi+0x69],esp
  419bcf:	or     eax,0x6cb25002
  419bd4:	cwde   
  419bd5:	xchg   ebx,eax
  419bd6:	bound  esp,QWORD PTR [eax]
  419bd8:	mov    bh,0x1c
  419bda:	test   eax,0x4bbe262a
  419bdf:	jmp    0x419c50
  419be1:	jb     0x419c5f
  419be3:	or     BYTE PTR [eax],0x4a
  419be6:	lock jbe 0x419b98
  419be9:	test   DWORD PTR [ecx],esi
  419beb:	mov    bl,0x5c
  419bed:	(bad)  
  419bee:	mov    eax,0x7020a48e
  419bf3:	sub    edi,DWORD PTR [ecx+0x3e64a957]
  419bf9:	stc    
  419bfa:	cmp    eax,0x5fe58c7c
  419bff:	xchg   ebp,eax
  419c00:	fnstenv [ecx-0x1156b7d7]
  419c06:	fldcw  WORD PTR [esi+0x1b]
  419c09:	jb     0x419c1f
  419c0b:	icebp  
  419c0c:	mov    ch,0xb2
  419c0e:	in     al,dx
  419c0f:	std    
  419c10:	inc    eax
  419c11:	mov    eax,esi
  419c13:	outs   dx,BYTE PTR ds:[esi]
  419c14:	or     dl,BYTE PTR [esi-0x34]
  419c17:	call   0x43d7:0xf8fc845a
  419c1e:	test   eax,0xa18ba9b6
  419c23:	ret    
  419c24:	and    al,0x2
  419c26:	add    DWORD PTR [ecx+0xa6b0679],edx
  419c2c:	or     al,0xf3
  419c2e:	rol    DWORD PTR [ebp+edx*2-0x12],1
  419c32:	xor    DWORD PTR [edi-0x6d576660],ecx
  419c38:	les    ecx,FWORD PTR [edi]
  419c3a:	out    0x23,al
  419c3c:	xor    al,0x18
  419c3e:	push   ss
  419c3f:	mov    eax,ecx
  419c41:	lods   al,BYTE PTR ds:[esi]
  419c42:	jmp    FWORD PTR [ecx-0xb]
  419c45:	lock outs dx,DWORD PTR ds:[esi]
  419c47:	jo     0x419ca9
  419c49:	out    0x55,al
  419c4b:	mov    bh,0xff
  419c4d:	push   0xfffffff1
  419c4f:	int3   
  419c50:	cmp    DWORD PTR [eax],ecx
  419c52:	lea    edi,[esi]
  419c54:	cmp    DWORD PTR [edi-0xd5af081],edi
  419c5a:	sub    ecx,DWORD PTR [ecx-0xa]
  419c5d:	add    dl,BYTE PTR [esi-0x3c]
  419c60:	lahf   
  419c61:	dec    ebp
  419c62:	call   0x3600df
  419c67:	nop
  419c68:	cmp    dl,bl
  419c6a:	push   ebx
  419c6b:	mov    dh,0x38
  419c6d:	cmp    edi,DWORD PTR [eax-0x5d2564ce]
  419c73:	pusha  
  419c74:	adc    ah,BYTE PTR [ebp+0x58d40745]
  419c7a:	mov    edx,DWORD PTR [ebx]
  419c7c:	mov    ecx,DWORD PTR [ebx]
  419c7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c7f:	icebp  
  419c80:	pop    ecx
  419c81:	mov    ch,0x99
  419c83:	dec    esi
  419c84:	push   ecx
  419c85:	mov    dh,bl
  419c87:	rol    BYTE PTR [ecx+0x76],cl
  419c8a:	cmp    esi,DWORD PTR [ebp-0x4d]
  419c8d:	imul   ebp,DWORD PTR [ecx],0xffffffa9
  419c90:	add    DWORD PTR [edi+0x3117e6f7],eax
  419c96:	jne    0x419c21
  419c98:	mov    dh,0xfe
  419c9a:	hlt    
  419c9b:	mov    eax,ds:0x64984acd
  419ca0:	sbb    DWORD PTR [ecx-0x10],esp
  419ca3:	inc    ebp
  419ca4:	ror    esi,0xf0
  419ca7:	and    esp,esi
  419ca9:	fidivr DWORD PTR [eax-0x6d0eb70e]
  419caf:	inc    esi
  419cb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cb1:	mov    ds:0xcbbb8d59,eax
  419cb6:	test   DWORD PTR [esp+ecx*4-0x16],0x8881a4fb
  419cbe:	xchg   ebp,eax
  419cbf:	cmp    BYTE PTR [edx+eiz*4-0x4ace10bb],dh
  419cc6:	mov    edx,0x24b1c5a7
  419ccb:	mov    dh,0x15
  419ccd:	or     eax,eax
  419ccf:	xchg   BYTE PTR [ebp-0x20],ch
  419cd2:	push   esi
  419cd3:	test   edi,esi
  419cd5:	sub    bh,BYTE PTR [ebx]
  419cd7:	push   edx
  419cd8:	arpl   WORD PTR [edx],si
  419cda:	mov    cl,0xf1
  419cdc:	jle    0x419ca1
  419cde:	dec    ebx
  419cdf:	sti    
  419ce0:	repnz test ebx,ecx
  419ce3:	lock mov al,ds:0xdb08ecf2
  419ce9:	or     edx,DWORD PTR [esi-0x35]
  419cec:	dec    esp
  419ced:	fucomip st,st(4)
  419cef:	sbb    BYTE PTR [eax+edx*4+0x40d04f2d],bl
  419cf6:	dec    eax
  419cf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cf8:	xchg   DWORD PTR [eax-0x6f],esi
  419cfb:	daa    
  419cfc:	ret    
  419cfd:	jae    0x419cfa
  419cff:	dec    ebx
  419d00:	xor    al,BYTE PTR [edi-0x35]
  419d03:	shl    DWORD PTR [edi],1
  419d05:	div    eax
  419d07:	lea    ecx,[edi-0x13d7b139]
  419d0d:	add    esp,ebp
  419d0f:	out    dx,eax
  419d10:	pop    ecx
  419d11:	in     al,dx
  419d12:	sub    DWORD PTR [edi],0x24
  419d15:	sbb    eax,0x62e559c9
  419d1a:	cmp    eax,eax
  419d1c:	pop    ebp
  419d1d:	jns    0x419cb3
  419d1f:	dec    edx
  419d20:	pop    ecx
  419d21:	push   ds
  419d22:	xor    dh,ah
  419d24:	fwait
  419d25:	mov    DWORD PTR [ebx-0x56],esp
  419d28:	xchg   ecx,eax
  419d29:	and    BYTE PTR [edx],dl
  419d2b:	inc    esi
  419d2c:	inc    ebx
  419d2d:	ja     0x419cd0
  419d2f:	mov    DWORD PTR [esi-0x54512662],eax
  419d35:	cli    
  419d36:	inc    esi
  419d37:	popf   
  419d38:	bound  ecx,QWORD PTR ds:0xd25f1be2
  419d3e:	add    ecx,edi
  419d40:	sbb    dh,ah
  419d42:	push   ebx
  419d43:	inc    ecx
  419d44:	jo     0x419dba
  419d46:	push   esi
  419d47:	or     ebp,eax
  419d49:	inc    eax
  419d4a:	(bad)
  419d4e:	mov    ds:0xfe0788d9,eax
  419d53:	pop    esp
  419d54:	lahf   
  419d55:	pop    eax
  419d56:	repnz adc DWORD PTR [esi],edx
  419d59:	ja     0x419d10
  419d5b:	ret    
  419d5c:	les    esi,FWORD PTR [edi]
  419d5e:	int    0x11
  419d60:	mov    esp,0x48e16024
  419d65:	out    0x27,eax
  419d67:	aam    0xdd
  419d69:	dec    esi
  419d6a:	int3   
  419d6b:	pop    ebp
  419d6c:	dec    esp
  419d6d:	lods   eax,DWORD PTR ds:[esi]
  419d6e:	fs fs call 0xe134:0x78c2a38e
  419d77:	out    0x91,al
  419d79:	arpl   WORD PTR [ecx+ebp*2+0x6d],bx
  419d7d:	dec    eax
  419d7e:	xor    eax,edi
  419d80:	mov    ah,0xb8
  419d82:	pop    esi
  419d83:	or     edi,0xd5f02469
  419d89:	jge    0x419d26
  419d8b:	adc    al,0xe3
  419d8d:	les    edx,FWORD PTR [edx-0x3645ec8]
  419d93:	add    eax,0x8dae0fb0
  419d98:	mov    dl,0x61
  419d9a:	imul   BYTE PTR [edx+edi*8]
  419d9d:	fmul   QWORD PTR [edx]
  419d9f:	pop    esp
  419da0:	mov    ebx,0x3d2c802f
  419da5:	fwait
  419da6:	outs   dx,BYTE PTR ds:[esi]
  419da7:	js     0x419d6e
  419da9:	mov    ebx,0xab78cf89
  419dae:	mov    dh,0x60
  419db0:	aaa    
  419db1:	pop    edx
  419db2:	in     al,dx
  419db3:	out    0x64,al
  419db5:	fmul   QWORD PTR [ebp+0x51]
  419db8:	add    ecx,DWORD PTR [edi+0x6c9611dc]
  419dbe:	push   ecx
  419dbf:	xor    ch,BYTE PTR fs:[esi+0x49]
  419dc3:	cs mov esp,0x5947f310
  419dc9:	fild   QWORD PTR [ecx-0x3]
  419dcc:	fbld   TBYTE PTR [ebp-0x17dc7cd5]
  419dd2:	outs   dx,BYTE PTR ds:[esi]
  419dd3:	push   0x68903993
  419dd8:	mov    cl,0x16
  419dda:	sub    BYTE PTR [ebp+0x631ff73],ah
  419de0:	pop    edx
  419de1:	fidiv  DWORD PTR [edi+0x2d]
  419de4:	mov    ds:0x78136c98,eax
  419de9:	pop    es
  419dea:	outs   dx,BYTE PTR ds:[esi]
  419deb:	xchg   ebp,eax
  419dec:	mov    dh,BYTE PTR [ebx+eax*4]
  419def:	pop    ss
  419df0:	xchg   BYTE PTR [edi+0x41],dh
  419df3:	je     0x419db1
  419df5:	cmp    al,0xb6
  419df7:	push   cs
  419df8:	js     0x419de6
  419dfa:	in     eax,0x82
  419dfc:	call   DWORD PTR [ebp-0x39163aa2]
  419e02:	fsubr  QWORD PTR [ecx+ebx*4+0x6e]
  419e06:	test   eax,0x9b85c88c
  419e0b:	loopne 0x419dcd
  419e0d:	enter  0x5431,0x7a
  419e11:	hlt    
  419e12:	mov    ecx,0x8ce7b3b3
  419e17:	jnp    0x419e8a
  419e19:	pop    esi
  419e1a:	(bad)  
  419e1c:	dec    ecx
  419e1d:	jmp    0x419e43
  419e1f:	call   0x95e0:0x89515d30
  419e26:	repnz dec ebp
  419e28:	lods   eax,DWORD PTR ds:[esi]
  419e29:	cmp    esp,DWORD PTR fs:[edi-0x7265784f]
  419e30:	(bad)  [ebp-0x10f30c32]
  419e36:	fwait
  419e37:	add    dh,BYTE PTR [ecx+0x22]
  419e3a:	ret    0xb30e
  419e3d:	sbb    DWORD PTR [ebx-0x570466dc],edi
  419e43:	sbb    cl,bh
  419e45:	fwait
  419e46:	aas    
  419e47:	jns    0x419e00
  419e49:	jmp    0x94ef05e
  419e4e:	sbb    eax,0x43c7b983
  419e53:	aad    0x8d
  419e55:	les    edx,FWORD PTR [esi]
  419e57:	pop    esp
  419e58:	mov    cl,0x9b
  419e5a:	loopne 0x419e3f
  419e5c:	jge    0x419e97
  419e5e:	pop    ecx
  419e5f:	sbb    BYTE PTR [ecx+esi*8-0x39],ah
  419e63:	in     eax,dx
  419e64:	enter  0x717c,0xe3
  419e68:	pushf  
  419e69:	lahf   
  419e6a:	and    ecx,edx
  419e6c:	fcom   QWORD PTR [edx+0x49]
  419e6f:	mov    ecx,0x285c6dcd
  419e74:	xchg   esp,eax
  419e75:	xchg   ebp,eax
  419e76:	daa    
  419e77:	rcl    DWORD PTR [edx-0x56],0x32
  419e7b:	retf   
  419e7c:	and    dl,BYTE PTR [edi]
  419e7e:	cmp    eax,0xc821c1dd
  419e83:	int3   
  419e84:	ins    BYTE PTR es:[edi],dx
  419e85:	in     eax,dx
  419e86:	sub    al,0x35
  419e88:	pop    edi
  419e89:	dec    ebp
  419e8a:	dec    eax
  419e8b:	inc    ebx
  419e8c:	je     0x419e6f
  419e8e:	sbb    al,bh
  419e90:	mov    ebp,0x675b2c57
  419e95:	mov    esp,0x2135fc8f
  419e9a:	cmp    dl,BYTE PTR ds:0xa7f841b
  419ea0:	leave  
  419ea1:	mov    ebp,0xf7165f22
  419ea6:	mov    ecx,DWORD PTR [esi+0x1b]
  419ea9:	pop    edx
  419eaa:	push   ebx
  419eab:	and    esp,edi
  419ead:	ror    BYTE PTR [edi-0x2a],cl
  419eb0:	push   edx
  419eb1:	inc    edi
  419eb2:	push   edx
  419eb3:	lds    eax,FWORD PTR [eax+0x69aaf6b9]
  419eb9:	mul    BYTE PTR [eax-0x2b]
  419ebc:	or     esp,DWORD PTR [edx]
  419ebe:	adc    ebx,DWORD PTR [edi-0x3a54cd41]
  419ec4:	push   ss
  419ec5:	xchg   dh,bh
  419ec7:	xchg   esi,eax
  419ec8:	pop    eax
  419ec9:	mov    ch,0xe
  419ecb:	inc    ecx
  419ecc:	and    ah,al
  419ece:	push   eax
  419ecf:	pop    ss
  419ed0:	es mov cl,0x21
  419ed3:	retf   
  419ed4:	aad    0x73
  419ed6:	xchg   edx,eax
  419ed7:	ins    BYTE PTR es:[edi],dx
  419ed8:	pop    ecx
  419ed9:	mov    DWORD PTR [ebp+0xd],0xf0b2ac26
  419ee0:	push   ebx
  419ee1:	rcl    bh,cl
  419ee3:	push   eax
  419ee4:	lea    ebp,[edx+0x6c037d65]
  419eea:	sub    BYTE PTR [ebx],bh
  419eec:	inc    esi
  419eed:	dec    edx
  419eee:	scas   al,BYTE PTR es:[edi]
  419eef:	neg    DWORD PTR [esi+0x6b8ab18c]
  419ef5:	ror    DWORD PTR [ecx-0x33d383eb],0x35
  419efc:	cmc    
  419efd:	scas   eax,DWORD PTR es:[edi]
  419efe:	adc    eax,DWORD PTR [edx-0x58]
  419f01:	fsubr  QWORD PTR [edi]
  419f03:	popf   
  419f04:	xchg   DWORD PTR [ecx+0x59f8f2ac],edi
  419f0a:	mov    dl,0x6d
  419f0c:	stos   BYTE PTR es:[edi],al
  419f0d:	and    DWORD PTR [edx-0x4d22481],0xdd4c9767
  419f17:	fiadd  DWORD PTR [edi+0xf]
  419f1a:	sbb    al,BYTE PTR [ebx-0xd602d91]
  419f20:	push   ebx
  419f21:	jp     0x419efe
  419f23:	fwait
  419f24:	fs jo  0x419f4b
  419f27:	jge    0x419f2b
  419f29:	je     0x419f9b
  419f2b:	or     ebp,esi
  419f2d:	ins    BYTE PTR es:[edi],dx
  419f2e:	sbb    BYTE PTR [ebp+0x40],dl
  419f31:	scas   eax,DWORD PTR es:[edi]
  419f32:	push   es
  419f33:	mov    al,ds:0x26d0e59b
  419f38:	pop    ss
  419f39:	ror    BYTE PTR [ebp+0x33a6ac9a],0x26
  419f40:	sub    esi,esp
  419f42:	jge    0x419edb
  419f44:	ret    
  419f45:	lods   al,BYTE PTR ds:[esi]
  419f46:	adc    eax,0x907ed08a
  419f4b:	jns    0x419fa4
  419f4d:	pop    esp
  419f4e:	xlat   BYTE PTR ds:[ebx]
  419f4f:	mov    al,gs:0x2a7020ad
  419f55:	xchg   ebp,eax
  419f56:	inc    BYTE PTR ds:0xfb0987bc
  419f5c:	push   0x93f9635f
  419f61:	and    dl,BYTE PTR [edi-0x5e]
  419f64:	dec    esp
  419f65:	into   
  419f66:	std    
  419f67:	adc    al,0xd6
  419f69:	mov    al,0x33
  419f6b:	jle    0x419f21
  419f6d:	xor    al,0xbc
  419f6f:	pop    eax
  419f70:	sahf   
  419f71:	sub    BYTE PTR [esi],ch
  419f73:	pop    edx
  419f74:	pop    ecx
  419f75:	dec    eax
  419f76:	mov    dh,0xe5
  419f78:	rcl    DWORD PTR [eax-0x32762319],0x63
  419f7f:	push   esi
  419f80:	retf   
  419f81:	push   0x18
  419f83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f84:	bound  esi,QWORD PTR [ebx]
  419f86:	xor    esi,eax
  419f88:	mov    eax,0x98ee1623
  419f8d:	sub    DWORD PTR [ebx+ebx*1-0x4],ecx
  419f91:	fidivr WORD PTR [edx]
  419f93:	push   ebp
  419f94:	jbe    0x419faf
  419f96:	imul   ebp,esi,0xffffffa5
  419f99:	les    esi,FWORD PTR [ebp+ebp*2+0x6a]
  419f9d:	cmp    BYTE PTR [esi],bh
  419f9f:	jge    0x419fb6
  419fa1:	and    edx,DWORD PTR [edi+0xe]
  419fa4:	test   al,0x6e
  419fa6:	cmp    DWORD PTR [ecx+ebp*1-0x6b077b2a],ecx
  419fad:	jl     0x419f46
  419faf:	xchg   ebp,eax
  419fb0:	and    edi,DWORD PTR [ecx]
  419fb2:	call   0x8c3c7df2
  419fb7:	xor    al,0x3d
  419fb9:	cmp    bl,al
  419fbb:	mov    DWORD PTR [esi],eax
  419fbd:	or     dl,BYTE PTR [ecx]
  419fbf:	sbb    DWORD PTR [esi+eax*8-0x20],ecx
  419fc3:	mov    esp,0xa57c18fe
  419fc8:	adc    cl,BYTE PTR [ebx]
  419fca:	jae    0x41a028
  419fcc:	push   ebp
  419fcd:	adc    DWORD PTR [edx-0x64],ebx
  419fd0:	sar    ch,0x9b
  419fd3:	pop    esi
  419fd4:	sahf   
  419fd5:	div    BYTE PTR ds:0x5e69452b
  419fdb:	loopne 0x419fa3
  419fdd:	cmp    edx,DWORD PTR ds:0x73a1655c
  419fe3:	inc    edi
  419fe4:	int3   
  419fe5:	gs mov bh,0x95
  419fe8:	xchg   BYTE PTR [ebp+0x57],ah
  419feb:	sub    eax,0x8bd25375
  419ff0:	enter  0x700c,0xfe
  419ff4:	push   0x3fbb5cae
  419ff9:	ficomp DWORD PTR [edx+0x4530734b]
  419fff:	shl    DWORD PTR [ebx+edx*1+0x5f],cl
  41a003:	(bad)  
  41a004:	mov    ebp,0x8b369919
  41a009:	sub    dl,BYTE PTR [ebx-0x14347cea]
  41a00f:	hlt    
  41a010:	add    BYTE PTR [esp+ebx*8-0x728cca89],dl
  41a017:	dec    ebp
  41a018:	add    edx,ecx
  41a01a:	add    esp,DWORD PTR [edi]
  41a01c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a01d:	inc    eax
  41a01e:	nop
  41a01f:	mov    ch,0xc6
  41a021:	fidivr WORD PTR [edi-0x13]
  41a024:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a025:	jmp    0x7d84:0x1848f7de
  41a02c:	ss push es
  41a02e:	dec    ecx
  41a02f:	lock adc DWORD PTR ds:[ebp-0x316fa3c2],ecx
  41a037:	daa    
  41a038:	outs   dx,DWORD PTR ds:[esi]
  41a039:	jle    0x41a0b3
  41a03b:	rcl    ebp,0xd3
  41a03e:	xor    DWORD PTR [ecx+0x3303fbe3],esi
  41a044:	xchg   esi,eax
  41a045:	add    DWORD PTR [ecx],edx
  41a047:	sub    DWORD PTR [edx-0x75],edx
  41a04a:	fld    TBYTE PTR [ebp+0x4f37c05]
  41a050:	not    BYTE PTR [ecx+0x9]
  41a053:	imul   esi,ecx,0xd07a09a1
  41a059:	call   0xb4bdc819
  41a05e:	fsubr  DWORD PTR [edi]
  41a060:	outs   dx,BYTE PTR ds:[esi]
  41a061:	daa    
  41a062:	aaa    
  41a063:	je     0x41a095
  41a065:	inc    ecx
  41a066:	aam    0x19
  41a068:	sub    BYTE PTR [esi],ch
  41a06a:	fwait
  41a06b:	xchg   esp,eax
  41a06c:	mov    dl,0xc4
  41a06e:	adc    edi,DWORD PTR [edx+eax*4]
  41a071:	inc    edi
  41a072:	jle    0x41a0a7
  41a074:	xchg   esi,eax
  41a075:	out    dx,eax
  41a076:	test   eax,0x66ba11a6
  41a07b:	sbb    dl,BYTE PTR [ebp-0x1c]
  41a07e:	inc    ecx
  41a07f:	xchg   BYTE PTR [eax],bl
  41a081:	ror    edx,0x46
  41a084:	push   esi
  41a085:	xchg   DWORD PTR [esi+0x4b644189],ebp
  41a08b:	rcl    BYTE PTR [eax],1
  41a08d:	outs   dx,DWORD PTR ds:[esi]
  41a08e:	dec    ecx
  41a08f:	scas   al,BYTE PTR es:[edi]
  41a090:	cmp    bl,BYTE PTR [edx+eiz*8+0x51]
  41a094:	stc    
  41a095:	push   edx
  41a096:	mov    ah,ch
  41a098:	dec    eax
  41a099:	jmp    0x41a038
  41a09b:	mov    esp,edi
  41a09d:	div    DWORD PTR [eax]
  41a09f:	jnp    0x41a077
  41a0a1:	outs   dx,DWORD PTR ds:[esi]
  41a0a2:	(bad)  
  41a0a3:	sub    ecx,edi
  41a0a5:	loopne 0x41a0a4
  41a0a7:	imul   BYTE PTR [esi+eiz*2+0x31]
  41a0ab:	mov    ecx,0xd9c626b6
  41a0b0:	mov    BYTE PTR [ebp+0x6083716c],cl
  41a0b6:	jge    0x41a10e
  41a0b8:	xor    al,0xd8
  41a0ba:	and    ebx,DWORD PTR [edi+0x19561066]
  41a0c0:	pop    ss
  41a0c1:	(bad)  
  41a0c2:	cmp    esi,DWORD PTR [ebp+0x4fb17efe]
  41a0c8:	cmp    DWORD PTR [edi-0x72],ebp
  41a0cb:	push   ecx
  41a0cc:	loope  0x41a0e3
  41a0ce:	fisubr WORD PTR [edi+0x76]
  41a0d1:	or     dh,ah
  41a0d3:	and    bh,0x5c
  41a0d6:	adc    esp,DWORD PTR [ebp-0x55]
  41a0d9:	cli    
  41a0da:	in     al,dx
  41a0db:	call   0xcf1c:0x4bf81388
  41a0e2:	test   eax,0xb6750004
  41a0e7:	leave  
  41a0e8:	mov    ss,WORD PTR [edx]
  41a0ea:	xchg   edi,eax
  41a0eb:	push   ecx
  41a0ec:	neg    DWORD PTR [ebx+0x64]
  41a0ef:	jo     0x41a07f
  41a0f1:	push   0xea00a95e
  41a0f6:	xlat   BYTE PTR ds:[ebx]
  41a0f7:	inc    ecx
  41a0f8:	test   eax,0x647705f4
  41a0fd:	in     al,dx
  41a0fe:	stc    
  41a0ff:	sub    DWORD PTR [edi+0x55],eax
  41a102:	gs in  al,0xcb
  41a105:	shl    DWORD PTR [esi+0x3348cb16],1
  41a10b:	mov    ds:0x63cd69f4,al
  41a110:	xor    al,0x4c
  41a112:	sbb    al,0x44
  41a114:	ret    
  41a115:	fistp  QWORD PTR [edi+ecx*1-0x1d]
  41a119:	xor    esp,DWORD PTR [edi+0x9]
  41a11c:	lods   al,BYTE PTR ds:[esi]
  41a11d:	into   
  41a11e:	test   BYTE PTR [esi],bh
  41a120:	cld    
  41a121:	mov    ds:0x5188b468,al
  41a126:	mov    dh,0x4c
  41a128:	nop
  41a129:	and    ecx,edx
  41a12b:	arpl   WORD PTR [edx],ax
  41a12d:	and    DWORD PTR ds:[esp+edx*1],ebp
  41a131:	push   es
  41a132:	push   eax
  41a133:	jbe    0x41a0cf
  41a135:	neg    BYTE PTR [ecx+0x5d]
  41a138:	add    DWORD PTR [esi+0x38351c58],eax
  41a13e:	pop    edx
  41a13f:	shl    BYTE PTR [eax+esi*2],0x6a
  41a143:	ins    BYTE PTR es:[edi],dx
  41a144:	mov    ebp,0x526031f8
  41a149:	xor    ebx,DWORD PTR [ebx-0x689b2a19]
  41a14f:	into   
  41a150:	sahf   
  41a151:	mov    al,0xb6
  41a153:	fsub   QWORD PTR [ebx]
  41a155:	push   ds
  41a156:	ss in  eax,0x3f
  41a159:	sbb    DWORD PTR [edx+0x74],esp
  41a15c:	push   DWORD PTR [edx+0x3ef716a6]
  41a162:	shl    BYTE PTR [ecx+0x4ce6ff1b],1
  41a168:	jmp    FWORD PTR [esp+eiz*4]
  41a16b:	call   0xcb92:0xf1c8cad8
  41a172:	sahf   
  41a173:	jbe    0x41a133
  41a175:	aad    0x86
  41a177:	cmp    ebx,DWORD PTR [edi-0x3c6b598f]
  41a17d:	iret   
  41a17e:	dec    edi
  41a17f:	out    dx,al
  41a180:	jae    0x41a1c3
  41a182:	inc    edx
  41a183:	dec    esp
  41a184:	les    ecx,FWORD PTR [esi]
  41a186:	cmc    
  41a187:	(bad)  
  41a188:	mov    edi,0x3300be90
  41a18d:	ror    BYTE PTR [esi-0x2a54f66e],1
  41a193:	jecxz  0x41a144
  41a195:	jb     0x41a1ca
  41a197:	push   edx
  41a198:	mov    dl,0x9
  41a19a:	inc    esp
  41a19b:	fnstsw WORD PTR [ebp+0x46c76b6a]
  41a1a1:	pop    edx
  41a1a2:	pop    edx
  41a1a3:	push   cs
  41a1a4:	stc    
  41a1a5:	or     DWORD PTR [edx],edx
  41a1a7:	xchg   esi,eax
  41a1a8:	mov    esi,0x6ac9b63c
  41a1ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1ae:	xor    bl,BYTE PTR [ebx+0x73]
  41a1b1:	fdivr  st(3),st
  41a1b3:	fs mov eax,0x93a4cbeb
  41a1b9:	rcl    DWORD PTR [edi+0x5df009f7],0x36
  41a1c0:	xor    eax,0xf3a466fe
  41a1c5:	stc    
  41a1c6:	and    eax,0x836cb3e1
  41a1cb:	sar    DWORD PTR [esi-0x584ac11b],cl
  41a1d1:	xchg   ebx,eax
  41a1d2:	shl    dh,cl
  41a1d4:	dec    esp
  41a1d5:	aas    
  41a1d6:	fs jne 0x41a192
  41a1d9:	jne    0x41a253
  41a1db:	shr    ebp,cl
  41a1dd:	in     al,dx
  41a1de:	jmp    0x41a179
  41a1e0:	jo     0x41a1a7
  41a1e2:	mov    ch,BYTE PTR ds:0xac0fe394
  41a1e8:	push   ss
  41a1e9:	xchg   esi,eax
  41a1ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1eb:	fild   QWORD PTR [esi]
  41a1ed:	pop    edi
  41a1ee:	aad    0xb2
  41a1f0:	cmp    al,0x6e
  41a1f2:	ffree  st(3)
  41a1f4:	push   eax
  41a1f5:	mov    ch,0x49
  41a1f7:	sub    ecx,esp
  41a1f9:	add    BYTE PTR [edi+0x4e5b10e7],0x7
  41a200:	test   DWORD PTR [esi+0x30],eax
  41a203:	mov    ch,0x17
  41a205:	push   ebp
  41a206:	out    dx,eax
  41a207:	xchg   edi,esp
  41a209:	(bad)  
  41a20a:	adc    BYTE PTR [ebx],bl
  41a20c:	cs inc eax
  41a20e:	sub    ah,bh
  41a210:	jmp    0x41a246
  41a212:	aas    
  41a213:	cdq    
  41a214:	pushf  
  41a215:	xor    al,bl
  41a217:	add    al,ah
  41a219:	xor    al,0xe4
  41a21b:	into   
  41a21c:	lds    edi,FWORD PTR [ebx+edi*4-0x31]
  41a220:	cs or  al,0x96
  41a223:	mov    WORD PTR ds:0xbd6d15ef,fs
  41a229:	aad    0xbd
  41a22b:	(bad)
  41a22e:	mov    DWORD PTR [edx+0x4acae1c],ebp
  41a234:	sub    BYTE PTR [esp+ecx*2],al
  41a237:	jnp    0x41a287
  41a239:	add    cl,BYTE PTR [esi+ebp*8+0x7b]
  41a23d:	loop   0x41a24c
  41a23f:	push   0x603c1a5f
  41a244:	fs hlt 
  41a246:	mov    ah,0x62
  41a248:	frstor [ebx+esi*2-0x66]
  41a24c:	xchg   BYTE PTR [edi],bl
  41a24e:	mov    bl,0xe1
  41a250:	inc    eax
  41a251:	cmp    DWORD PTR [eax+0x0],edi
  41a254:	ss ja  0x41a2c7
  41a257:	push   esp
  41a258:	cli    
  41a259:	mov    cl,0xf4
  41a25b:	push   es
  41a25c:	mov    al,0x9f
  41a25e:	push   ds
  41a25f:	lock dec ecx
  41a261:	jge    0x41a270
  41a263:	int3   
  41a264:	or     BYTE PTR [ecx],ah
  41a266:	xchg   edi,eax
  41a267:	imul   eax,edx,0xba47d62a
  41a26d:	(bad)  
  41a26e:	and    dl,BYTE PTR [ebx]
  41a270:	cmp    ebx,esi
  41a272:	imul   esi,DWORD PTR [esi-0x68],0x23f3e394
  41a279:	loope  0x41a232
  41a27b:	add    bl,bh
  41a27d:	test   DWORD PTR [eax],ebx
  41a27f:	repnz in al,0xe1
  41a282:	mov    ch,0x95
  41a284:	lds    eax,FWORD PTR [eax+ebx*8+0x32]
  41a288:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a289:	out    dx,eax
  41a28a:	jecxz  0x41a26b
  41a28c:	push   ds
  41a28d:	ss inc ebp
  41a28f:	pop    edx
  41a290:	ret    
  41a291:	xchg   DWORD PTR [edi+0x30],ebx
  41a294:	xor    eax,0xd3631ae6
  41a299:	mov    dh,0x1d
  41a29b:	je     0x41a234
  41a29d:	jmp    0x41a285
  41a29f:	enter  0x148c,0x2f
  41a2a3:	inc    ebx
  41a2a4:	(bad)  
  41a2a5:	cmp    bl,BYTE PTR [esi]
  41a2a7:	pushf  
  41a2a8:	and    ecx,ecx
  41a2aa:	sub    BYTE PTR [ecx-0x69bb923c],ch
  41a2b0:	adc    bh,BYTE PTR [ebx]
  41a2b2:	scas   al,BYTE PTR es:[edi]
  41a2b3:	scas   al,BYTE PTR es:[edi]
  41a2b4:	xor    al,BYTE PTR [ecx]
  41a2b6:	add    DWORD PTR [esi+0xe53c84e],eax
  41a2bc:	jge    0x41a2a8
  41a2be:	mov    ch,BYTE PTR [edi+ebp*8]
  41a2c1:	mov    ch,0x17
  41a2c3:	sub    eax,0x30be3015
  41a2c8:	cdq    
  41a2c9:	fs mov bh,0x8e
  41a2cc:	sub    cl,BYTE PTR [edi]
  41a2ce:	jecxz  0x41a27f
  41a2d0:	cmp    BYTE PTR [esi],bl
  41a2d2:	or     esi,ebx
  41a2d4:	stos   BYTE PTR es:[edi],al
  41a2d5:	dec    ebp
  41a2d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2d7:	add    al,0x1f
  41a2d9:	mov    edx,0xa4ab94a6
  41a2de:	mov    bh,0x97
  41a2e0:	push   edx
  41a2e1:	pushf  
  41a2e2:	loop   0x41a286
  41a2e4:	jmp    0x41a317
  41a2e6:	add    al,bl
  41a2e8:	jnp    0x41a30c
  41a2ea:	jno    0x41a338
  41a2ec:	push   ds
  41a2ed:	pop    ds
  41a2ee:	hlt    
  41a2ef:	mov    al,ds:0x2a852969
  41a2f4:	jmp    0x8848c278
  41a2f9:	ja     0x41a2f3
  41a2fb:	call   0x25b:0xad6f32d5
  41a302:	sbb    eax,0x4690619a
  41a307:	call   0x1d86:0x575fc7bc
  41a30e:	shl    DWORD PTR [eax-0x39077009],cl
  41a314:	xchg   ebp,eax
  41a315:	xor    edx,DWORD PTR [edi]
  41a317:	adc    eax,0x9d347c1f
  41a31c:	popa   
  41a31d:	adc    DWORD PTR [esi+edx*4+0x14be3c08],esi
  41a324:	jbe    0x41a398
  41a326:	out    0xca,eax
  41a328:	inc    esi
  41a329:	sub    BYTE PTR [eax+0x19],0xc
  41a32d:	fsubp  st(2),st
  41a32f:	xor    DWORD PTR [edx],ebx
  41a331:	or     DWORD PTR [ecx-0x55e88ef6],0x40
  41a338:	jp     0x41a35e
  41a33a:	stos   BYTE PTR es:[edi],al
  41a33b:	retf   0xd37e
  41a33e:	dec    eax
  41a33f:	cmp    al,BYTE PTR [eax+edx*4-0x47694c99]
  41a346:	fwait
  41a347:	shr    DWORD PTR [esi+0xf931900],cl
  41a34d:	jmp    0x41a3c9
  41a34f:	adc    bh,BYTE PTR [esp+ebx*2+0x6d8f58f6]
  41a356:	cmp    eax,0xf07f6b42
  41a35b:	mov    ah,0x2f
  41a35d:	dec    ebp
  41a35e:	mov    eax,ds:0x42cb1ca8
  41a363:	mov    ds:0x2b4005dd,al
  41a368:	fcomp  st(7)
  41a36a:	sub    DWORD PTR [esi+0x6e],esi
  41a36d:	mov    ds:0xbdc35137,eax
  41a372:	nop
  41a373:	mov    eax,0x25081eff
  41a378:	sar    BYTE PTR [edi+0x4d98864a],1
  41a37e:	inc    esi
  41a37f:	aam    0x66
  41a381:	mov    bl,0x8f
  41a383:	enter  0xef35,0x88
  41a387:	into   
  41a388:	or     DWORD PTR [esi+eax*8],ecx
  41a38b:	xchg   ecx,eax
  41a38c:	aas    
  41a38d:	pushf  
  41a38e:	push   0x6d
  41a390:	push   ss
  41a391:	push   ss
  41a392:	dec    eax
  41a393:	pushf  
  41a394:	mov    cl,BYTE PTR [ebp-0x29]
  41a397:	xchg   esi,eax
  41a398:	loop   0x41a37c
  41a39a:	test   eax,0x16456334
  41a39f:	xchg   edi,eax
  41a3a0:	mov    cl,0x7
  41a3a2:	adc    al,0xc6
  41a3a4:	push   edx
  41a3a5:	call   0x2ae7da5d
  41a3aa:	sub    edx,DWORD PTR [eax+0x7cc22943]
  41a3b0:	popf   
  41a3b1:	rcr    BYTE PTR [eax],cl
  41a3b3:	sbb    dl,bh
  41a3b5:	fdivr  QWORD PTR [ecx+0x55]
  41a3b8:	int3   
  41a3b9:	mov    ah,0xd8
  41a3bb:	out    dx,eax
  41a3bc:	push   eax
  41a3bd:	sbb    edi,DWORD PTR [edx]
  41a3bf:	xchg   ebp,esp
  41a3c1:	in     al,0xfe
  41a3c3:	dec    esp
  41a3c4:	push   esi
  41a3c5:	jbe    0x41a3db
  41a3c7:	lods   al,BYTE PTR ds:[esi]
  41a3c8:	sub    esp,esp
  41a3ca:	jae    0x41a432
  41a3cc:	mov    bl,0x2
  41a3ce:	arpl   WORD PTR [esi+ebp*1-0x3b],si
  41a3d2:	cs sub eax,0xecc08b32
  41a3d8:	inc    esp
  41a3d9:	jae    0x41a3e1
  41a3db:	mov    esp,0x3271fee1
  41a3e0:	in     eax,dx
  41a3e1:	lods   al,BYTE PTR ds:[esi]
  41a3e2:	dec    eax
  41a3e3:	sub    esp,eax
  41a3e5:	xor    al,0x76
  41a3e7:	cmp    dh,BYTE PTR [edx+0x476215a4]
  41a3ed:	enter  0xa2bd,0xfd
  41a3f1:	(bad)  [esi]
  41a3f3:	shr    BYTE PTR ds:0xbacce677,0x3f
  41a3fa:	sub    eax,0xa5801edb
  41a3ff:	iret   
  41a400:	ret    
  41a401:	xchg   ebx,eax
  41a402:	or     al,0x68
  41a404:	inc    edi
  41a405:	fsubrp st(7),st
  41a407:	icebp  
  41a408:	dec    ecx
  41a409:	xor    dh,BYTE PTR [eax]
  41a40b:	fwait
  41a40c:	xor    esi,ebp
  41a40e:	ret    
  41a40f:	enter  0xbc02,0xb4
  41a413:	repz xlat BYTE PTR ds:[ebx]
  41a415:	mov    ecx,0x86e71018
  41a41a:	sbb    al,0xf1
  41a41c:	or     eax,esp
  41a41e:	dec    ebx
  41a41f:	ret    
  41a420:	and    dl,BYTE PTR [esp+ecx*1-0x4b]
  41a424:	mov    DWORD PTR ds:0xee284de7,ecx
  41a42a:	inc    eax
  41a42b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a42c:	arpl   WORD PTR [ebx-0x1fb3d78f],cx
  41a432:	or     al,0x0
  41a434:	mov    edx,0x6d648a3b
  41a439:	in     eax,0x31
  41a43b:	xchg   esp,eax
  41a43c:	outs   dx,DWORD PTR ds:[esi]
  41a43d:	push   es
  41a43e:	(bad)  
  41a43f:	sbb    edi,ebx
  41a441:	outs   dx,DWORD PTR ds:[esi]
  41a442:	sbb    cl,BYTE PTR [ebp-0xc047370]
  41a448:	ficomp DWORD PTR [ebx+0x72c3adda]
  41a44e:	dec    esp
  41a44f:	(bad)  
  41a450:	in     eax,0x48
  41a452:	mov    edx,0xb2ee7ea2
  41a457:	int3   
  41a458:	sahf   
  41a459:	xor    eax,0xe24be37
  41a45e:	test   BYTE PTR [ebx-0x137b350],ah
  41a464:	mov    ebx,0xdaf92dcb
  41a469:	aam    0x8f
  41a46b:	and    DWORD PTR [edx-0x5d],ecx
  41a46e:	repnz or ecx,DWORD PTR [ebx+ebp*1]
  41a472:	ins    BYTE PTR es:[edi],dx
  41a473:	pop    esi
  41a474:	aaa    
  41a475:	fidiv  DWORD PTR [edi+0x303f0a1f]
  41a47b:	nop
  41a47c:	mov    edi,ecx
  41a47e:	adc    ecx,edi
  41a480:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a481:	out    dx,eax
  41a482:	(bad)  
  41a483:	mov    esp,0x90df8c2c
  41a488:	mov    edx,0x7effe6bb
  41a48d:	cmp    BYTE PTR [ecx+edx*1+0x28b51c37],al
  41a494:	cmp    bh,BYTE PTR [ecx-0x2bdfbf38]
  41a49a:	mov    BYTE PTR [ebx+eiz*8+0x3c881f8a],ah
  41a4a1:	or     DWORD PTR [edx+0x43],0x23
  41a4a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4a6:	jnp    0x41a498
  41a4a8:	adc    ebx,ebp
  41a4aa:	(bad)  
  41a4ac:	sahf   
  41a4ad:	gs dec ecx
  41a4af:	jno    0x41a485
  41a4b1:	shl    BYTE PTR [ebp+edi*2+0x7b],cl
  41a4b5:	retf   
  41a4b6:	call   0x444a98bd
  41a4bb:	dec    ecx
  41a4bc:	push   esp
  41a4bd:	dec    esi
  41a4be:	jns    0x41a4c0
  41a4c0:	sar    BYTE PTR [eax],1
  41a4c2:	outs   dx,DWORD PTR ds:[esi]
  41a4c3:	cli    
  41a4c4:	cli    
  41a4c5:	inc    edx
  41a4c6:	pop    es
  41a4c7:	sub    al,0xc6
  41a4c9:	stc    
  41a4ca:	dec    eax
  41a4cb:	and    DWORD PTR ds:[edx+0x50],esp
  41a4cf:	jge    0x41a4a6
  41a4d1:	(bad)  
  41a4d2:	hlt    
  41a4d3:	pop    edx
  41a4d4:	call   0x6936:0x3e1e0a8e
  41a4db:	mov    ah,al
  41a4dd:	inc    esi
  41a4de:	xchg   edi,eax
  41a4df:	pop    edx
  41a4e0:	cmp    al,0x78
  41a4e2:	sub    dl,BYTE PTR ds:0x1a224608
  41a4e8:	mov    ebx,0x33750f16
  41a4ed:	cmc    
  41a4ee:	xlat   BYTE PTR ds:[ebx]
  41a4ef:	sbb    ebp,DWORD PTR [ecx+edx*2]
  41a4f2:	add    esi,DWORD PTR [eax]
  41a4f4:	mov    esp,0xb0299ca8
  41a4f9:	aad    0x24
  41a4fb:	(bad)  
  41a4fc:	push   esi
  41a4fd:	xor    eax,0xbe00a2bb
  41a502:	and    eax,0x49c340a4
  41a507:	mov    ebx,0x358faa82
  41a50c:	call   0xf1cc:0x907b6c0f
  41a513:	shl    DWORD PTR [edx-0x15],1
  41a516:	dec    esi
  41a517:	xlat   BYTE PTR ds:[ebx]
  41a518:	push   cs
  41a519:	nop
  41a51a:	sbb    al,0x24
  41a51c:	and    DWORD PTR [ebp+0x44],0x41
  41a520:	into   
  41a521:	fdiv   st,st(6)
  41a523:	ror    DWORD PTR [ecx],1
  41a525:	lea    ebp,[ecx]
  41a527:	stos   BYTE PTR es:[edi],al
  41a528:	push   0x38d97654
  41a52d:	jp     0x41a4ef
  41a52f:	push   0xffffffcf
  41a531:	inc    esi
  41a532:	xchg   esp,eax
  41a533:	or     al,0x4f
  41a535:	push   eax
  41a536:	jmp    0x2f71:0x955e80a6
  41a53d:	and    eax,0x541c3c4e
  41a542:	imul   edx,DWORD PTR [eax-0x393938ac],0xffffffca
  41a549:	push   esi
  41a54a:	pop    ebp
  41a54b:	loopne 0x41a50a
  41a54d:	jle    0x41a5b0
  41a54f:	out    dx,eax
  41a550:	sbb    ebp,DWORD PTR [ecx-0x49f0ab7c]
  41a556:	ret    
  41a557:	sbb    ah,ah
  41a559:	sbb    bl,BYTE PTR [ecx-0x27]
  41a55c:	sbb    eax,0x80c86915
  41a561:	leave  
  41a562:	push   esi
  41a563:	mov    esp,0x6e00572b
  41a568:	mov    edi,DWORD PTR [edi]
  41a56a:	popf   
  41a56b:	adc    al,0x8c
  41a56d:	xchg   ecx,eax
  41a56e:	jp     0x41a4f2
  41a570:	mov    ebx,0x93b3d460
  41a575:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a576:	mov    dh,0x42
  41a578:	pop    ebp
  41a579:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a57a:	xchg   ebp,eax
  41a57b:	lds    ebp,FWORD PTR [ebx]
  41a57d:	mov    al,0x8f
  41a57f:	cdq    
  41a580:	mov    dl,0x50
  41a582:	pop    esi
  41a583:	fisttp QWORD PTR [esi+0x5]
  41a586:	lds    edi,FWORD PTR [esi+0xe]
  41a589:	and    eax,0xf6025707
  41a58e:	fwait
  41a58f:	mov    edi,0x8ede1d7f
  41a594:	int    0xab
  41a596:	mov    gs,WORD PTR [esi+0x17]
  41a599:	jle    0x41a616
  41a59b:	pusha  
  41a59c:	sub    DWORD PTR [eax+ebx*2],edx
  41a59f:	inc    ecx
  41a5a0:	or     al,0xb5
  41a5a2:	arpl   WORD PTR [eax+0x1a740035],cx
  41a5a8:	sub    BYTE PTR [edi-0x4c3dc6cf],dh
  41a5ae:	not    DWORD PTR [esi-0x5b]
  41a5b1:	jnp    0x41a626
  41a5b3:	push   eax
  41a5b4:	jmp    0x41a587
  41a5b6:	pop    esi
  41a5b7:	aad    0x75
  41a5b9:	pusha  
  41a5ba:	push   ss
  41a5bb:	scas   eax,DWORD PTR es:[edi]
  41a5bc:	pop    ss
  41a5bd:	test   al,dh
  41a5bf:	mov    edi,0x75d99c02
  41a5c4:	jge    0x41a5e2
  41a5c6:	stos   BYTE PTR es:[edi],al
  41a5c7:	shl    BYTE PTR gs:[esi+0x71989b19],0x33
  41a5cf:	inc    ebx
  41a5d0:	mov    ch,dl
  41a5d2:	fs inc esi
  41a5d4:	mov    ds,WORD PTR [ecx-0x7]
  41a5d7:	repnz or DWORD PTR [edi+0x52a9503c],ecx
  41a5de:	push   esi
  41a5df:	adc    eax,0x79c65016
  41a5e4:	inc    ebp
  41a5e5:	xor    DWORD PTR [eax+0x2b],0xffffff83
  41a5e9:	pop    es
  41a5ea:	adc    al,0x68
  41a5ec:	dec    eax
  41a5ed:	ins    BYTE PTR es:[edi],dx
  41a5ee:	xchg   ebp,eax
  41a5ef:	imul   esi,DWORD PTR [ebx-0x18],0xffffffcc
  41a5f3:	jnp    0x41a595
  41a5f5:	sub    ebx,ecx
  41a5f7:	lahf   
  41a5f8:	ins    BYTE PTR es:[edi],dx
  41a5f9:	cmp    BYTE PTR [edi],ah
  41a5fb:	or     BYTE PTR [ebx+0x17],0xc7
  41a5ff:	ds lahf 
  41a601:	xchg   esi,eax
  41a602:	repz retf 
  41a604:	jmp    0x8141a64c
  41a609:	cmp    dl,BYTE PTR [ecx+0x14178700]
  41a60f:	sbb    al,0x2c
  41a611:	dec    ebp
  41a612:	push   0x78
  41a614:	push   ds
  41a615:	mov    gs,WORD PTR [ebx+0x7775ce69]
  41a61b:	xor    BYTE PTR [ebx],ch
  41a61d:	loop   0x41a65c
  41a61f:	cs clc 
  41a621:	inc    edx
  41a622:	sahf   
  41a623:	cmp    edi,esp
  41a625:	push   edi
  41a626:	stc    
  41a627:	xchg   ebx,eax
  41a628:	gs out 0x8a,al
  41a62b:	daa    
  41a62c:	xchg   DWORD PTR [edx-0x4a5b5a3f],ecx
  41a632:	shl    eax,0x39
  41a635:	in     al,dx
  41a636:	mov    ebp,0x80d1c9eb
  41a63b:	sub    al,0x25
  41a63d:	in     al,0x29
  41a63f:	fld    DWORD PTR [ecx]
  41a641:	and    DWORD PTR [eax+eiz*1-0xa],ebp
  41a645:	js     0x41a663
  41a647:	xchg   cl,bh
  41a649:	call   0x805e8deb
  41a64e:	pop    edx
  41a64f:	sbb    eax,0x4102ce1f
  41a654:	xchg   esp,eax
  41a655:	call   0x7273:0x94fc74c6
  41a65c:	pop    ecx
  41a65d:	test   eax,0x9ce93604
  41a662:	mov    al,ds:0x674560d0
  41a667:	cmp    ebx,eax
  41a669:	das    
  41a66a:	xor    DWORD PTR ds:0x871f4d48,ebx
  41a670:	mov    ds:0xd4676f59,eax
  41a675:	ds jae 0x41a68d
  41a678:	call   0xdeb2:0xc8d9df59
  41a67f:	xchg   ebx,eax
  41a680:	loop   0x41a606
  41a682:	jns    0x41a6a7
  41a684:	push   esi
  41a685:	stos   BYTE PTR es:[edi],al
  41a686:	push   eax
  41a687:	adc    bh,bh
  41a689:	(bad)  
  41a68a:	fnstsw WORD PTR [eax-0x2a]
  41a68d:	jnp    0x41a678
  41a68f:	repnz xor BYTE PTR [ecx-0x6f],al
  41a693:	ret    
  41a694:	popa   
  41a695:	or     al,0xb9
  41a697:	and    eax,0x8bec4ac9
  41a69c:	xchg   DWORD PTR [edx],ebx
  41a69e:	inc    ebp
  41a69f:	call   0xab3a:0x3c0a92d3
  41a6a6:	xlat   BYTE PTR ds:[ebx]
  41a6a7:	in     eax,dx
  41a6a8:	push   ecx
  41a6a9:	sub    ebp,esp
  41a6ab:	and    ah,BYTE PTR [esi+0x7c0f62ef]
  41a6b1:	jmp    0x36ef0a97
  41a6b6:	mov    esi,0xfb08ee5f
  41a6bb:	and    eax,ebp
  41a6bd:	mov    edi,0xea25be66
  41a6c2:	mov    bh,0xec
  41a6c4:	loope  0x41a6c4
  41a6c6:	mov    ah,0xdc
  41a6c8:	das    
  41a6c9:	dec    edx
  41a6ca:	add    eax,DWORD PTR [esi]
  41a6cc:	jo     0x41a6a1
  41a6ce:	inc    eax
  41a6cf:	push   ecx
  41a6d0:	out    0xfd,al
  41a6d2:	out    dx,eax
  41a6d3:	(bad)  
  41a6d5:	jo     0x41a70b
  41a6d7:	cs das 
  41a6d9:	push   edi
  41a6da:	adc    eax,0xdb6c817e
  41a6df:	pop    edx
  41a6e0:	mov    ds:0xc77c395a,eax
  41a6e5:	mov    WORD PTR [ecx+0x59009e11],es
  41a6eb:	xchg   ebx,eax
  41a6ec:	jecxz  0x41a762
  41a6ee:	jmp    0x26364dfa
  41a6f3:	aas    
  41a6f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6f5:	cdq    
  41a6f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6f7:	jbe    0x41a76f
  41a6f9:	push   ds
  41a6fa:	popf   
  41a6fb:	sub    BYTE PTR [ebx-0x394c61d5],bl
  41a701:	sti    
  41a702:	test   al,0x35
  41a704:	ss arpl sp,cx
  41a707:	pop    edi
  41a708:	sub    ax,0x6c5b
  41a70c:	repnz sahf 
  41a70e:	xchg   eax,ebp
  41a710:	mov    ebp,0xe9eee629
  41a715:	pop    eax
  41a716:	or     al,0xd4
  41a718:	and    bh,BYTE PTR [esi]
  41a71a:	dec    edx
  41a71b:	nop
  41a71c:	push   cs
  41a71d:	jb     0x41a6d4
  41a71f:	push   esi
  41a720:	pop    eax
  41a721:	jbe    0x41a742
  41a723:	les    ebx,FWORD PTR [ecx-0x59]
  41a726:	retf   0x3917
  41a729:	stos   BYTE PTR es:[edi],al
  41a72a:	push   ss
  41a72b:	imul   esi,DWORD PTR [ecx+0x2efeef46],0x567d2425
  41a735:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a736:	jae    0x41a6c1
  41a738:	outs   dx,BYTE PTR ds:[esi]
  41a739:	int3   
  41a73a:	add    ch,bh
  41a73c:	loopne 0x41a729
  41a73e:	pop    es
  41a73f:	test   DWORD PTR [edi+ebx*1+0x33057c16],ebp
  41a746:	aad    0x5e
  41a748:	inc    ecx
  41a749:	call   0xc5521268
  41a74e:	cmp    DWORD PTR [eax+ecx*1],ebp
  41a751:	pushf  
  41a752:	adc    al,0xdc
  41a754:	rcl    BYTE PTR [eax-0x22fa77ba],1
  41a75a:	add    bh,ch
  41a75c:	aaa    
  41a75d:	fmul   DWORD PTR [esi+0x62]
  41a760:	inc    esp
  41a761:	imul   esi,DWORD PTR [esi],0x4f18b5d4
  41a767:	loop   0x41a7b4
  41a769:	mov    bh,0x8e
  41a76b:	pop    esi
  41a76c:	adc    DWORD PTR [ebx],esi
  41a76e:	gs mov cl,0x50
  41a771:	icebp  
  41a772:	inc    ecx
  41a773:	call   0xb24af47a
  41a778:	add    al,0xc8
  41a77a:	popf   
  41a77b:	(bad)  
  41a77c:	cmp    eax,0xca75aa6c
  41a781:	sbb    al,0xd9
  41a783:	fnsave [ecx]
  41a785:	jl     0x41a7b4
  41a787:	fnstcw WORD PTR [esi]
  41a789:	shr    DWORD PTR [ecx],1
  41a78b:	dec    edi
  41a78c:	dec    ecx
  41a78d:	add    esi,eax
  41a78f:	push   ebp
  41a790:	in     al,dx
  41a791:	jl     0x41a7d9
  41a793:	or     ecx,DWORD PTR [ebp-0x6291d2d6]
  41a799:	loop   0x41a732
  41a79b:	into   
  41a79c:	inc    esi
  41a79d:	clc    
  41a79e:	mov    bl,0xe
  41a7a0:	popa   
  41a7a1:	adc    eax,0xf0fcea6e
  41a7a6:	retf   
  41a7a7:	adc    eax,0xdc8a89c4
  41a7ac:	cmp    edx,DWORD PTR [ecx]
  41a7ae:	rcl    eax,0x64
  41a7b1:	hlt    
  41a7b2:	sub    eax,0x978009
  41a7b7:	dec    edx
  41a7b8:	add    al,0x86
  41a7ba:	in     eax,dx
  41a7bb:	js     0x41a771
  41a7bd:	mov    eax,ds:0xde1b7f62
  41a7c2:	mov    BYTE PTR [eax+0x47e81f0d],bh
  41a7c8:	and    ch,BYTE PTR [eax]
  41a7ca:	lahf   
  41a7cb:	stos   DWORD PTR es:[edi],eax
  41a7cc:	ja     0x41a841
  41a7ce:	enter  0x54f9,0x4b
  41a7d2:	clc    
  41a7d3:	cmp    eax,0xe4db5c80
  41a7d8:	outs   dx,BYTE PTR ds:[esi]
  41a7d9:	push   0x12b236ae
  41a7de:	aaa    
  41a7df:	jge    0x41a85c
  41a7e1:	xor    al,0xa6
  41a7e3:	mov    DWORD PTR [edx-0x1ec4f77f],eax
  41a7e9:	jp     0x41a787
  41a7eb:	jecxz  0x41a800
  41a7ed:	cmp    edx,DWORD PTR [ecx]
  41a7ef:	xchg   ecx,eax
  41a7f0:	out    0xf7,eax
  41a7f2:	xchg   BYTE PTR [ecx-0x19],ch
  41a7f5:	push   cs
  41a7f6:	ds ja  0x41a7d2
  41a7f9:	test   al,0xb3
  41a7fb:	sbb    ecx,esi
  41a7fd:	adc    BYTE PTR [ebp+0x35ee297b],ah
  41a803:	mov    ah,0x4b
  41a805:	std    
  41a806:	mov    esp,0x5b659b
  41a80b:	ficom  WORD PTR [esi+0x5b9cfe53]
  41a811:	pop    ebx
  41a812:	imul   esp,ebp,0x47
  41a815:	xor    eax,0x568002d3
  41a81a:	lods   al,BYTE PTR ds:[esi]
  41a81b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a81c:	bnd ret 
  41a81e:	and    eax,0x6cedf79d
  41a823:	jmp    FWORD PTR [edi+ebp*4+0xb]
  41a827:	push   0xd5e351c6
  41a82c:	outs   dx,DWORD PTR ds:[esi]
  41a82d:	sub    eax,0x360a4261
  41a832:	sub    dh,ch
  41a834:	in     al,0x7c
  41a836:	fsubr  QWORD PTR [esi]
  41a838:	mov    fs,eax
  41a83a:	or     ebx,DWORD PTR [edi-0x485454b]
  41a840:	rcr    BYTE PTR [ecx],cl
  41a842:	mov    ds:0x9f4c1abc,eax
  41a847:	out    dx,al
  41a848:	inc    ecx
  41a849:	out    0xb3,al
  41a84b:	mov    eax,ds:0xfba713cf
  41a850:	in     eax,0x8
  41a852:	lahf   
  41a853:	pop    ss
  41a854:	and    eax,0xde731d5f
  41a859:	jo     0x41a805
  41a85b:	mov    ds:0xe9729017,al
  41a860:	xor    al,0x59
  41a862:	das    
  41a863:	adc    al,BYTE PTR [edx-0x75]
  41a866:	cmp    eax,0xe759064e
  41a86b:	inc    esp
  41a86c:	xor    DWORD PTR [edi+0x61],ecx
  41a86f:	shl    BYTE PTR [esi+0x48],0xad
  41a873:	out    dx,eax
  41a874:	jl     0x41a8b6
  41a876:	jns    0x41a89d
  41a878:	sbb    eax,ecx
  41a87a:	or     ebx,DWORD PTR [edx]
  41a87c:	lds    esi,FWORD PTR [eax]
  41a87e:	fld    TBYTE PTR [edx-0x4524adb3]
  41a884:	repz addr16 cmp eax,0x870a85be
  41a88b:	inc    esp
  41a88c:	xchg   edi,eax
  41a88d:	(bad)  
  41a88f:	not    BYTE PTR [edi]
  41a891:	mov    edx,0x678f4983
  41a896:	or     BYTE PTR ds:0x49f93318,dh
  41a89c:	(bad)  
  41a89d:	ficomp DWORD PTR [ecx+0x63]
  41a8a0:	clc    
  41a8a1:	xchg   bh,ch
  41a8a3:	and    BYTE PTR [edx],al
  41a8a5:	sahf   
  41a8a6:	inc    esi
  41a8a7:	fdivr  DWORD PTR [edx]
  41a8a9:	test   al,0xc0
  41a8ab:	mov    ah,0xeb
  41a8ad:	shr    DWORD PTR [ebx],cl
  41a8af:	sub    cl,0xd7
  41a8b2:	js     0x41a835
  41a8b4:	dec    ebp
  41a8b5:	loop   0x41a853
  41a8b7:	loopne 0x41a858
  41a8b9:	jmp    0x24ac:0xfc0e9e15
  41a8c0:	ret    
  41a8c1:	jge    0x41a884
  41a8c3:	jbe    0x41a856
  41a8c5:	add    al,0x15
  41a8c7:	adc    BYTE PTR [esi+0x4552a7da],0xfd
  41a8ce:	cmp    al,0x56
  41a8d0:	or     DWORD PTR [edi+0x6f],0x29
  41a8d4:	ret    0x5963
  41a8d7:	xchg   edx,eax
  41a8d8:	dec    esp
  41a8d9:	scas   al,BYTE PTR es:[edi]
  41a8da:	pop    eax
  41a8db:	and    ebx,DWORD PTR [ebx*8+0x3cad6299]
  41a8e2:	repz mov es,ebp
  41a8e5:	cwde   
  41a8e6:	jp     0x41a918
  41a8e8:	mov    cr2,edx
  41a8eb:	or     al,0x4f
  41a8ed:	sub    edx,edx
  41a8ef:	sti    
  41a8f0:	mov    bh,0x27
  41a8f2:	pop    edi
  41a8f3:	pop    eax
  41a8f4:	mov    DWORD PTR [ebx],edi
  41a8f6:	mov    bh,0x4a
  41a8f8:	and    DWORD PTR [edx-0x1b],ebx
  41a8fb:	push   edi
  41a8fc:	(bad)  
  41a8fd:	sub    ebp,DWORD PTR [edx-0x3f6cfac]
  41a903:	add    ebx,esp
  41a905:	pop    esi
  41a906:	jb     0x41a88d
  41a908:	nop
  41a909:	jecxz  0x41a923
  41a90b:	clc    
  41a90c:	rcr    BYTE PTR [ebx-0x7c],1
  41a90f:	mov    DWORD PTR [ebx-0x4a],esp
  41a912:	push   cs
  41a913:	or     eax,0x470d8b05
  41a918:	mov    al,0xea
  41a91a:	dec    eax
  41a91b:	loopne 0x41a908
  41a91d:	shr    BYTE PTR [eax],0xf5
  41a920:	fs pop ebx
  41a922:	out    0x92,eax
  41a924:	popf   
  41a925:	xor    esi,ebx
  41a927:	fmul   st(6),st
  41a929:	add    ecx,DWORD PTR ds:0xb05f5862
  41a92f:	cmp    eax,0x29d4fc4d
  41a934:	mov    ecx,ebp
  41a936:	enter  0xf5af,0x64
  41a93a:	repnz xor bl,BYTE PTR [edx-0x3d]
  41a93e:	(bad)  
  41a93f:	xchg   edx,eax
  41a940:	adc    esp,DWORD PTR [eax]
  41a942:	retf   
  41a943:	lods   eax,DWORD PTR ds:[esi]
  41a944:	pop    ebp
  41a945:	mov    es,WORD PTR [eax+0x5b82080]
  41a94b:	sub    ecx,DWORD PTR [ebp+0x30]
  41a94e:	xchg   al,ah
  41a950:	call   0xa655:0xfe74074f
  41a957:	jle    0x41a998
  41a959:	test   eax,0xaee6c49c
  41a95e:	ret    
  41a95f:	ins    BYTE PTR es:[edi],dx
  41a960:	jo     0x41a8ff
  41a962:	icebp  
  41a963:	ret    0x1714
  41a966:	enter  0x55ba,0xd2
  41a96a:	adc    ah,BYTE PTR [esp+ebp*2+0x6e3aadaa]
  41a971:	add    dh,BYTE PTR [eax+0x7f744cb8]
  41a977:	push   ds
  41a978:	mov    bl,0x50
  41a97a:	lds    ebp,FWORD PTR ds:0xe4c46e87
  41a980:	ror    cl,cl
  41a982:	fld    TBYTE PTR [eax+ebx*4]
  41a985:	iret   
  41a986:	jno    0x41a965
  41a988:	mov    gs,WORD PTR ds:0x6d0f598b
  41a98e:	push   esi
  41a98f:	pop    es
  41a990:	add    eax,0x9bcfb6dc
  41a995:	mov    al,ds:0xa0d2234c
  41a99a:	(bad)  
  41a99b:	popa   
  41a99c:	stos   BYTE PTR es:[edi],al
  41a99d:	(bad)  
  41a99e:	out    dx,al
  41a99f:	jle    0x41a9b8
  41a9a1:	jnp    0x41a927
  41a9a3:	(bad)  
  41a9a4:	shl    DWORD PTR [edx-0x31113e46],1
  41a9aa:	dec    ecx
  41a9ab:	mov    ebx,ecx
  41a9ad:	dec    ecx
  41a9ae:	pop    edx
  41a9af:	xchg   ebx,eax
  41a9b0:	mov    eax,0x729a11a8
  41a9b5:	dec    ebx
  41a9b6:	daa    
  41a9b7:	jo     0xfa8a069e
  41a9bd:	(bad)  
  41a9be:	jl     0x41a9f3
  41a9c0:	jp     0x41a94f
  41a9c2:	bound  edx,QWORD PTR [ebx]
  41a9c4:	out    0x24,eax
  41a9c6:	push   ds
  41a9c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9c8:	daa    
  41a9c9:	xchg   ecx,eax
  41a9ca:	sti    
  41a9cb:	lahf   
  41a9cc:	xchg   esi,eax
  41a9cd:	enter  0x1dad,0xb8
  41a9d1:	sub    ebx,DWORD PTR [edx]
  41a9d3:	test   DWORD PTR [ebx+0x1c],esp
  41a9d6:	ins    DWORD PTR es:[edi],dx
  41a9d7:	outs   dx,BYTE PTR ds:[esi]
  41a9d8:	mov    ebx,DWORD PTR [eax+0x50]
  41a9db:	jb     0x41a9ca
  41a9dd:	lock repnz popa 
  41a9e0:	in     al,dx
  41a9e1:	sub    eax,0x4edc2235
  41a9e6:	(bad)  
  41a9e7:	out    0x6d,al
  41a9e9:	lock jns 0x41aa66
  41a9ec:	aad    0xe4
  41a9ee:	mov    eax,0x366ed1a4
  41a9f3:	xchg   BYTE PTR [esi+ecx*2-0xccaa5d0],dh
  41a9fa:	mov    WORD PTR [ebp+0x39],fs
  41a9fd:	(bad)  
  41a9fe:	fisubr WORD PTR [esi]
  41aa00:	xchg   esi,eax
  41aa01:	adc    BYTE PTR [edi-0x7c],dh
  41aa04:	xlat   BYTE PTR ds:[ebx]
  41aa05:	inc    ecx
  41aa06:	clc    
  41aa07:	dec    esi
  41aa08:	xchg   ecx,eax
  41aa09:	sub    DWORD PTR [ecx],edi
  41aa0b:	and    ecx,DWORD PTR [eax+eax*8+0x2a]
  41aa0f:	adc    ch,BYTE PTR [ebp-0x6034844c]
  41aa15:	ret    0x12fa
  41aa18:	mov    bl,0x2e
  41aa1a:	dec    ecx
  41aa1b:	add    DWORD PTR [ecx+eax*1+0x36],esi
  41aa1f:	mov    ecx,0x4850788
  41aa24:	repz call 0x69f8:0xad31eecb
  41aa2c:	es xchg ecx,eax
  41aa2e:	clc    
  41aa2f:	test   ecx,ecx
  41aa31:	stos   BYTE PTR es:[edi],al
  41aa32:	sbb    ebp,ecx
  41aa34:	mov    al,ds:0xa73f55a3
  41aa39:	(bad)  [ebx+0x71]
  41aa3c:	mov    ah,0x1c
  41aa3e:	in     al,dx
  41aa3f:	bound  ebp,QWORD PTR [esi+0x31]
  41aa42:	and    esp,edx
  41aa44:	push   0xa04ac524
  41aa49:	xchg   esp,eax
  41aa4a:	pop    ebx
  41aa4b:	push   cs
  41aa4c:	in     eax,dx
  41aa4d:	mov    dl,0x54
  41aa4f:	ret    0x4adc
  41aa52:	inc    esp
  41aa53:	and    eax,0xb8c8f3b8
  41aa58:	jle    0x41a9ee
  41aa5a:	add    esp,DWORD PTR [esi+0x4605082c]
  41aa60:	xor    edi,DWORD PTR [ecx+0x0]
  41aa63:	mov    ds:0x361160c1,al
  41aa68:	imul   ebx,esi,0x63c34bca
  41aa6e:	mov    bx,0x1add
  41aa72:	push   esp
  41aa73:	xor    dh,BYTE PTR [esi]
  41aa75:	(bad)  
  41aa76:	retf   0x9990
  41aa79:	out    0x4f,al
  41aa7b:	xlat   BYTE PTR ds:[ebx]
  41aa7c:	sbb    dh,ah
  41aa7e:	adc    al,BYTE PTR [edx-0x47]
  41aa81:	fcmovb st,st(3)
  41aa83:	repz sub al,0xa9
  41aa86:	sbb    al,0xf6
  41aa88:	jnp    0x41aaec
  41aa8a:	outs   dx,BYTE PTR ds:[esi]
  41aa8b:	(bad)  
  41aa8c:	sub    eax,0x4e05dff7
  41aa91:	mov    BYTE PTR [edx],0x1e
  41aa94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa95:	push   0x2af11f86
  41aa9a:	stc    
  41aa9b:	ja     0x41aa36
  41aa9d:	dec    eax
  41aa9e:	mov    edx,0x9286ca7d
  41aaa3:	(bad)  
  41aaa4:	mov    dh,0x7
  41aaa6:	pop    ss
  41aaa7:	pop    edi
  41aaa8:	adc    DWORD PTR [edx],ebp
  41aaaa:	jnp    0x41aac7
  41aaac:	pop    edi
  41aaad:	inc    esi
  41aaae:	jecxz  0x41aa9c
  41aab0:	out    dx,eax
  41aab1:	fwait
  41aab2:	es cdq 
  41aab4:	and    al,0x5d
  41aab6:	adc    BYTE PTR [ebp+0x7f],dh
  41aab9:	and    ch,BYTE PTR [edi-0xd293458]
  41aabf:	dec    eax
  41aac0:	mov    DWORD PTR [eax+0x48],esi
  41aac3:	mov    edx,DWORD PTR [edx]
  41aac5:	dec    ebp
  41aac6:	rcr    ecx,1
  41aac8:	shl    BYTE PTR [ebx],1
  41aaca:	pop    ebx
  41aacb:	dec    esp
  41aacc:	dec    ebx
  41aacd:	rol    BYTE PTR ds:0xc9d396d5,0xa8
  41aad4:	mov    ah,0xb3
  41aad6:	aaa    
  41aad7:	jmp    0x41ab01
  41aad9:	cmp    dl,BYTE PTR [edx-0x388c6aea]
  41aadf:	repnz and bl,BYTE PTR [ecx+0x5d8e651f]
  41aae6:	jecxz  0x41aaaa
  41aae8:	sahf   
  41aae9:	push   ds
  41aaea:	pop    ds
  41aaeb:	retf   
  41aaec:	jne    0x41ab2d
  41aaee:	or     DWORD PTR [ecx-0x62fe2e4],edi
  41aaf4:	push   edx
  41aaf5:	cmp    DWORD PTR [ecx+0x2c],esi
  41aaf8:	test   BYTE PTR [ecx+0x3bc337a7],dh
  41aafe:	xor    eax,0x63f141be
  41ab03:	loop   0x41aafe
  41ab05:	arpl   WORD PTR [edx],dx
  41ab07:	push   cs
  41ab08:	cmp    bl,dh
  41ab0a:	pusha  
  41ab0b:	ins    DWORD PTR es:[edi],dx
  41ab0c:	xlat   BYTE PTR ds:[ebx]
  41ab0d:	mov    ds:0x9d31b47b,al
  41ab12:	ins    DWORD PTR es:[edi],dx
  41ab13:	add    BYTE PTR [edi+eax*2],cl
  41ab16:	fucom  st(6)
  41ab18:	cwde   
  41ab19:	xor    DWORD PTR [edx+edx*1-0x5a3fff16],0x8e7253a3
  41ab24:	loop   0x41aaa6
  41ab26:	into   
  41ab27:	retf   
  41ab28:	or     DWORD PTR [edx],esp
  41ab2a:	inc    ebx
  41ab2b:	pop    es
  41ab2c:	ds pop eax
  41ab2e:	hlt    
  41ab2f:	es or  al,0x53
  41ab32:	jge    0x41aad8
  41ab34:	bound  eax,QWORD PTR ds:0x5ac68ec1
  41ab3a:	data16 addr16 loope 0x41ab72
  41ab3e:	add    ch,BYTE PTR [esi]
  41ab40:	xchg   edi,eax
  41ab41:	push   ebp
  41ab42:	inc    edx
  41ab43:	cdq    
  41ab44:	mov    cl,0xb0
  41ab46:	jae    0x41aba7
  41ab48:	stc    
  41ab49:	jo     0x41aafa
  41ab4b:	push   es
  41ab4c:	dec    ebx
  41ab4d:	mov    WORD PTR [edi-0x965225a],ss
  41ab53:	mov    cl,0x29
  41ab55:	xchg   edi,eax
  41ab56:	jnp    0x41aaf5
  41ab58:	aaa    
  41ab59:	aaa    
  41ab5a:	mov    al,0xc0
  41ab5c:	call   0x22c7:0xb3c4faf6
  41ab63:	pop    esi
  41ab64:	push   0xffffffbd
  41ab66:	loope  0x41abe5
  41ab68:	mov    cl,cl
  41ab6a:	(bad)  
  41ab6b:	xlat   BYTE PTR ds:[ebx]
  41ab6c:	stos   BYTE PTR es:[edi],al
  41ab6d:	aas    
  41ab6e:	xchg   ebx,eax
  41ab6f:	cmp    bl,BYTE PTR [esi+ecx*4]
  41ab72:	(bad)  
  41ab73:	ror    DWORD PTR [eax+esi*4],cl
  41ab76:	pop    es
  41ab77:	aad    0x5e
  41ab79:	xor    cl,dh
  41ab7b:	aam    0x3d
  41ab7d:	cmp    eax,0x2ed308a4
  41ab82:	cmp    BYTE PTR [eax-0x21],dh
  41ab85:	(bad)  
  41ab87:	(bad)  
  41ab88:	cmp    esp,DWORD PTR [ebp+ecx*8+0x23f2d867]
  41ab8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab90:	mul    BYTE PTR [ebp-0x20]
  41ab93:	retf   0xcfbb
  41ab96:	outs   dx,DWORD PTR ds:[esi]
  41ab97:	cld    
  41ab98:	mov    esp,0xcc153adb
  41ab9d:	loopne 0x41ab83
  41ab9f:	push   ss
  41aba0:	xor    BYTE PTR [eax],ah
  41aba2:	dec    ebx
  41aba3:	dec    esi
  41aba4:	and    al,BYTE PTR [esp+ebx*2]
  41aba7:	aas    
  41aba8:	dec    eax
  41aba9:	pop    esi
  41abaa:	pop    ecx
  41abab:	jnp    0x41ac0c
  41abad:	les    ebx,FWORD PTR gs:[esi-0x74]
  41abb1:	xchg   ecx,eax
  41abb2:	(bad)  
  41abb3:	retf   
  41abb4:	pop    esp
  41abb5:	dec    esp
  41abb6:	dec    edx
  41abb7:	mov    al,0xe5
  41abb9:	dec    eax
  41abba:	imul   BYTE PTR [ebp+0x3d7f45a2]
  41abc0:	push   es
  41abc1:	pop    ss
  41abc2:	out    0xa9,al
  41abc4:	sti    
  41abc5:	mov    dl,0xd5
  41abc7:	test   eax,0xbd1153e
  41abcc:	stos   DWORD PTR es:[edi],eax
  41abcd:	mov    edx,0x60af9081
  41abd2:	in     eax,dx
  41abd3:	jl     0x41ab7a
  41abd5:	adc    eax,edi
  41abd7:	dec    ebx
  41abd8:	xchg   edi,eax
  41abd9:	or     ebx,0xa23c8c26
  41abdf:	sti    
  41abe0:	ja     0x41ab8f
  41abe2:	leave  
  41abe3:	fdiv   QWORD PTR [esi]
  41abe5:	ret    0x7542
  41abe8:	in     eax,dx
  41abe9:	and    BYTE PTR [esp+ebp*2-0x1bb54080],cl
  41abf0:	fmul   QWORD PTR [edi]
  41abf2:	pop    esp
  41abf3:	in     al,0x55
  41abf5:	int3   
  41abf6:	(bad)  
  41abf7:	pop    eax
  41abf8:	repz xlat BYTE PTR ds:[ebx]
  41abfa:	xor    DWORD PTR [ebx+esi*8],ecx
  41abfd:	add    al,0x6
  41abff:	shrd   eax,ebp,cl
  41ac02:	(bad)  
  41ac03:	and    al,0x5e
  41ac05:	imul   edi,DWORD PTR [edx],0xffffffb9
  41ac08:	pop    es
  41ac09:	cdq    
  41ac0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac0b:	mov    ds:0x662d6995,eax
  41ac10:	adc    al,0x56
  41ac12:	sub    eax,0xdbcbf0e
  41ac17:	inc    eax
  41ac18:	daa    
  41ac19:	fsubr  DWORD PTR [edi]
  41ac1b:	jno    0x41abaa
  41ac1d:	mov    ch,0xc
  41ac1f:	adc    ch,al
  41ac21:	loope  0x41ac3f
  41ac23:	adc    DWORD PTR [edi+ebx*4],esi
  41ac26:	outs   dx,DWORD PTR ds:[esi]
  41ac27:	cmp    ebx,DWORD PTR [ecx]
  41ac29:	push   edx
  41ac2a:	xchg   edi,eax
  41ac2b:	daa    
  41ac2c:	sub    eax,0xc79e3080
  41ac31:	lods   eax,DWORD PTR ds:[esi]
  41ac32:	clc    
  41ac33:	retf   0xa885
  41ac36:	push   esi
  41ac37:	jae    0x41aca5
  41ac39:	mov    DWORD PTR [ecx+0x21aca801],edx
  41ac3f:	mov    ebp,0x8256db87
  41ac44:	xchg   edi,eax
  41ac45:	jae    0x41abd1
  41ac47:	in     eax,0xef
  41ac49:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac4b:	das    
  41ac4c:	int3   
  41ac4d:	ret    
  41ac4e:	test   DWORD PTR [esi+0x7ca48dce],ecx
  41ac54:	(bad)  
  41ac55:	cmp    al,0x8d
  41ac57:	sub    eax,0xfec89d47
  41ac5c:	or     al,0xf5
  41ac5e:	dec    ebx
  41ac5f:	and    DWORD PTR [eax-0x194c319f],esi
  41ac65:	mov    ds:0x4c457225,eax
  41ac6a:	fsubrp st(5),st
  41ac6c:	pop    ecx
  41ac6d:	in     eax,dx
  41ac6e:	imul   esi,DWORD PTR [ecx-0x4e],0x78949e1d
  41ac75:	add    al,0xb2
  41ac77:	mov    al,0x27
  41ac79:	hlt    
  41ac7a:	inc    ebp
  41ac7b:	cmp    bh,BYTE PTR [esi+ebx*2+0x42c84b3f]
  41ac82:	scas   eax,DWORD PTR es:[edi]
  41ac83:	xchg   esp,eax
  41ac84:	lea    edx,[ebx+0x3c]
  41ac87:	inc    esi
  41ac88:	ret    0xf272
  41ac8b:	nop
  41ac8c:	pop    ebp
  41ac8d:	or     BYTE PTR [esi-0xf],0x60
  41ac91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac92:	sub    DWORD PTR [ebp+eax*8+0x52],0x84928670
  41ac9a:	test   DWORD PTR ds:0x40a1a3cf,eax
  41aca0:	mov    ds:0xee47383b,al
  41aca5:	xlat   BYTE PTR ds:[ebx]
  41aca6:	shr    DWORD PTR [esi+edi*8-0x41],cl
  41acaa:	loop   0x41acc6
  41acac:	inc    esp
  41acad:	pop    edi
  41acae:	out    0x50,eax
  41acb0:	adc    eax,DWORD PTR [edi-0x45ae14b7]
  41acb6:	dec    ecx
  41acb7:	mov    ecx,ebx
  41acb9:	jmp    0x8530a8f
  41acbe:	xchg   ebp,eax
  41acbf:	inc    esi
  41acc0:	into   
  41acc1:	outs   dx,BYTE PTR ds:[esi]
  41acc2:	inc    ecx
  41acc3:	cwde   
  41acc4:	fst    QWORD PTR [ecx+0x7fd464c4]
  41acca:	mov    eax,ds:0xea9225d7
  41accf:	pop    eax
  41acd0:	xchg   ecx,eax
  41acd1:	mov    al,0x55
  41acd3:	mov    BYTE PTR [esi+0xbfcddf8],0x6b
  41acda:	xchg   DWORD PTR [esi-0x60f4cba8],ebp
  41ace0:	popa   
  41ace1:	jae    0x41acde
  41ace3:	sub    eax,0x24907d44
  41ace8:	add    al,0x74
  41acea:	lds    edx,FWORD PTR [ebp-0x53]
  41aced:	in     al,dx
  41acee:	loope  0x41ad64
  41acf0:	lods   eax,DWORD PTR ds:[esi]
  41acf1:	test   DWORD PTR [esi+ebx*1-0x29bf1384],edi
  41acf8:	fs fwait
  41acfa:	or     al,0x17
  41acfc:	mov    dh,0x11
  41acfe:	cwde   
  41acff:	or     BYTE PTR [ebp+0x203a2412],ch
  41ad05:	sbb    BYTE PTR [ebp+0x29],ah
  41ad08:	jmp    0xa2c1d07a
  41ad0d:	out    dx,eax
  41ad0e:	mov    esi,0xde8175ed
  41ad13:	adc    ch,BYTE PTR [ebp-0x293fd012]
  41ad19:	jg     0x41ad86
  41ad1b:	or     esp,esp
  41ad1d:	(bad)  
  41ad1e:	fs dec ecx
  41ad20:	mov    fs,WORD PTR [edi-0x24940b99]
  41ad26:	ret    
  41ad27:	ret    0x34b6
  41ad2a:	dec    eax
  41ad2b:	sub    DWORD PTR [ecx+0x5c],esi
  41ad2e:	out    dx,al
  41ad2f:	and    edi,DWORD PTR [ebx+0x8201c02]
  41ad35:	mov    esp,DWORD PTR [edx+0x52]
  41ad38:	and    DWORD PTR [ebx],0x913deff7
  41ad3e:	adc    BYTE PTR [edx],al
  41ad40:	call   0x4e6a:0xbcb23c05
  41ad47:	jmp    0x83e9:0x7f11372a
  41ad4e:	inc    esi
  41ad4f:	xor    eax,0x45513b35
  41ad54:	retf   
  41ad55:	out    0x50,al
  41ad57:	leave  
  41ad58:	jbe    0xcc74ab90
  41ad5e:	lock stos BYTE PTR es:[edi],al
  41ad60:	jmp    0xdea931a2
  41ad65:	add    al,0xb3
  41ad67:	es in  al,dx
  41ad69:	dec    esi
  41ad6a:	stc    
  41ad6b:	jns    0x41ade5
  41ad6d:	mov    ch,BYTE PTR [ebx+0x34]
  41ad70:	shl    edx,cl
  41ad72:	and    al,0x13
  41ad74:	test   DWORD PTR [edi+0x742fab00],esp
  41ad7a:	xchg   esp,eax
  41ad7b:	adc    al,0xf3
  41ad7d:	and    al,0xb1
  41ad7f:	xor    al,0x8f
  41ad81:	cmp    ebp,DWORD PTR [edi]
  41ad83:	fistp  WORD PTR [edx+eiz*1-0x79aef52d]
  41ad8a:	sbb    al,0xc2
  41ad8c:	push   0xe
  41ad8e:	jns    0x41ad4e
  41ad90:	data16 aas 
  41ad92:	scas   al,BYTE PTR es:[edi]
  41ad93:	pushf  
  41ad94:	pop    ss
  41ad95:	push   ebx
  41ad96:	aad    0x13
  41ad98:	inc    esp
  41ad99:	dec    ecx
  41ad9a:	std    
  41ad9b:	adc    eax,0xdcbf7c77
  41ada0:	test   al,0x65
  41ada2:	nop    DWORD PTR [ebx-0x1bb5b0df]
  41ada9:	xor    BYTE PTR [esi-0xc],0x3
  41adad:	xor    DWORD PTR [ebx+ebp*2+0x1a8dca9f],esi
  41adb4:	add    al,0x4b
  41adb6:	js     0x41ad8e
  41adb8:	sti    
  41adb9:	lds    eax,FWORD PTR [esi+0x45812a24]
  41adbf:	add    DWORD PTR [edi+0x4e],esp
  41adc2:	fsub   QWORD PTR [edx+edx*4-0x51]
  41adc6:	mov    ebx,0x3107c160
  41adcb:	adc    dh,dl
  41adcd:	shl    DWORD PTR [eax-0xb],1
  41add0:	or     dl,bh
  41add2:	or     ebp,DWORD PTR [ecx-0x47]
  41add5:	inc    edx
  41add6:	push   eax
  41add7:	or     DWORD PTR [edx],esp
  41add9:	sub    al,BYTE PTR [esi]
  41addb:	aas    
  41addc:	pop    ss
  41addd:	and    BYTE PTR [eax+eiz*2+0x15],dh
  41ade1:	dec    edx
  41ade2:	daa    
  41ade3:	gs in  eax,0xba
  41ade6:	xchg   edi,esp
  41ade8:	(bad)  
  41ade9:	es xchg ebx,eax
  41adeb:	outs   dx,BYTE PTR ds:[esi]
  41adec:	popf   
  41aded:	imul   ecx,DWORD PTR ds:0x40dcc274,0x4
  41adf4:	jne    0x41add4
  41adf6:	push   esi
  41adf7:	xchg   BYTE PTR [ebp+0x3b9ffae5],al
  41adfd:	dec    esi
  41adfe:	add    ebx,DWORD PTR [ecx]
  41ae00:	nop
  41ae01:	xlat   BYTE PTR ds:[ebx]
  41ae02:	jge    0x41ada4
  41ae04:	mov    al,0x5a
  41ae06:	xchg   ecx,eax
  41ae07:	cmp    BYTE PTR [ebx],0x32
  41ae0a:	stos   BYTE PTR es:[edi],al
  41ae0b:	ja     0x41ae4d
  41ae0d:	sbb    BYTE PTR [eax-0x68325b58],0xa8
  41ae14:	jp     0x41ae44
  41ae16:	mov    bl,0xed
  41ae18:	xchg   DWORD PTR ds:0x229589c4,ebp
  41ae1e:	mov    esi,0x7fba0454
  41ae23:	rcl    BYTE PTR [esi],0x93
  41ae26:	mov    esp,0x42a73d9c
  41ae2b:	add    dh,BYTE PTR [edi]
  41ae2d:	dec    ecx
  41ae2e:	clc    
  41ae2f:	dec    eax
  41ae30:	push   ss
  41ae31:	fs pushf 
  41ae33:	pop    ss
  41ae34:	dec    esi
  41ae35:	in     eax,0xf2
  41ae37:	push   ds
  41ae38:	push   eax
  41ae39:	jo     0x41adeb
  41ae3b:	dec    edx
  41ae3c:	bound  esi,QWORD PTR [esi+0x1d]
  41ae3f:	shl    BYTE PTR [edx],cl
  41ae41:	cmp    ch,cl
  41ae43:	ds (bad) 
  41ae45:	rol    BYTE PTR [ebx+0x3753c5dc],1
  41ae4b:	mov    bh,0x5a
  41ae4d:	inc    ebx
  41ae4e:	cmp    eax,0x85aee131
  41ae53:	xlat   BYTE PTR ds:[ebx]
  41ae54:	add    ah,0xa5
  41ae57:	inc    edx
  41ae58:	push   ds
  41ae59:	addr16 mov ebx,0x4791aedb
  41ae5f:	dec    ebx
  41ae60:	push   0xffffffe5
  41ae62:	popa   
  41ae63:	sbb    eax,0x5249a728
  41ae68:	inc    eax
  41ae69:	pop    es
  41ae6a:	popf   
  41ae6b:	jmp    DWORD PTR [ebp-0x7c]
  41ae6e:	sar    BYTE PTR [ebx-0x7598806e],1
  41ae74:	pop    ebp
  41ae75:	ret    0x52f8
  41ae78:	lods   al,BYTE PTR ds:[esi]
  41ae79:	fimul  WORD PTR ds:0xb2f81402
  41ae7f:	mov    dl,0x4c
  41ae81:	add    edx,DWORD PTR [ecx]
  41ae83:	sbb    ah,ch
  41ae85:	pop    esp
  41ae86:	enter  0x6c9f,0x6a
  41ae8a:	mov    eax,0x45557f0e
  41ae8f:	dec    eax
  41ae90:	sub    al,0xd5
  41ae92:	mov    ebp,0x2706e5bd
  41ae97:	fwait
  41ae98:	je     0x41af15
  41ae9a:	sbb    dl,BYTE PTR [ebx+eax*4+0x595e6672]
  41aea1:	out    dx,eax
  41aea2:	in     ax,0x18
  41aea5:	jbe    0x41ae33
  41aea7:	ret    0xfc3f
  41aeaa:	jl     0x41ae43
  41aeac:	fcomp  DWORD PTR [eax-0x5f]
  41aeaf:	push   esi
  41aeb0:	dec    eax
  41aeb1:	or     eax,0x42c08e1f
  41aeb6:	inc    esp
  41aeb7:	dec    ebx
  41aeb8:	mov    ebx,0x7c7b296a
  41aebd:	pop    esp
  41aebe:	sub    eax,0xe97a87ee
  41aec3:	cmp    esp,DWORD PTR [esi+0x53]
  41aec6:	mov    fs,WORD PTR [edx+ebp*8-0x4f5c7ea6]
  41aecd:	jg     0x41af1d
  41aecf:	out    dx,eax
  41aed0:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41aed2:	mov    esp,0xa9089a72
  41aed7:	mov    esi,0x6617378a
  41aedc:	jecxz  0x41af06
  41aede:	xchg   ecx,eax
  41aedf:	adc    ebx,DWORD PTR [eax]
  41aee1:	fimul  DWORD PTR [edi+ebp*4]
  41aee4:	push   ebx
  41aee5:	mov    al,0x4e
  41aee7:	stos   BYTE PTR es:[edi],al
  41aee8:	enter  0xf3b5,0x1c
  41aeec:	cmp    al,0xc6
  41aeee:	aas    
  41aeef:	in     al,dx
  41aef0:	pop    ss
  41aef1:	jmp    0x56ca4011
  41aef6:	mov    ?,WORD PTR [eax+0x48e3f08c]
  41aefc:	in     eax,dx
  41aefd:	xchg   esi,eax
  41aefe:	rcr    bl,1
  41af00:	add    al,dl
  41af02:	and    bh,ah
  41af04:	aas    
  41af05:	iret   
  41af06:	stos   DWORD PTR es:[edi],eax
  41af07:	xchg   edi,eax
  41af08:	gs ret 
  41af0a:	mov    ds:0x78c2b833,eax
  41af0f:	in     eax,dx
  41af10:	test   eax,0xde2b01d6
  41af15:	jmp    0x87d896ff
  41af1a:	sbb    dh,BYTE PTR [ebp-0x26]
  41af1d:	inc    esi
  41af1e:	fild   QWORD PTR [edx]
  41af20:	mov    ebx,DWORD PTR ds:[edi-0x79]
  41af24:	ret    0xc504
  41af27:	mov    ch,0xba
  41af29:	pop    edi
  41af2a:	jge    0x41af58
  41af2c:	imul   edi,DWORD PTR [ebp+0x27],0x3a
  41af30:	call   0x6228eb26
  41af35:	push   ecx
  41af36:	rep lods al,BYTE PTR ds:[esi]
  41af38:	xchg   DWORD PTR [edi],esi
  41af3a:	push   edx
  41af3b:	mov    es,WORD PTR [edx]
  41af3d:	inc    ebx
  41af3e:	call   0xbae33db9
  41af43:	lea    ebx,[edi+0x16]
  41af46:	pop    ss
  41af47:	leave  
  41af48:	jle    0x41af47
  41af4a:	sub    bl,bl
  41af4c:	jl     0x41afcd
  41af4e:	fwait
  41af4f:	mov    ah,0x60
  41af51:	inc    ecx
  41af52:	loop   0x41afa5
  41af54:	jle    0x41af69
  41af56:	xor    cl,BYTE PTR [ebx+edx*4+0x55]
  41af5a:	rcr    BYTE PTR [ecx+eiz*1+0xf],1
  41af5e:	icebp  
  41af5f:	or     eax,0xd14c4543
  41af64:	test   al,0xaf
  41af66:	and    DWORD PTR [edx+eiz*8],ebx
  41af69:	pop    esp
  41af6a:	pop    ss
  41af6b:	sbb    al,0x8
  41af6d:	xor    edx,DWORD PTR [ebx-0x221e04]
  41af73:	ins    DWORD PTR es:[edi],dx
  41af74:	jmp    0x41af17
  41af76:	sbb    bl,bl
  41af78:	mul    DWORD PTR [ebx+0x24]
  41af7b:	pop    ds
  41af7c:	aad    0xff
  41af7e:	lahf   
  41af7f:	add    eax,0x5ba45287
  41af84:	mov    ebp,0x7b402727
  41af89:	sbb    BYTE PTR [esp+eiz*2],dh
  41af8c:	cmp    eax,0x35991566
  41af91:	jo     0x41af9b
  41af93:	mov    ecx,0xd71d9caa
  41af98:	mov    al,ds:0x2258e987
  41af9d:	outs   dx,BYTE PTR ds:[esi]
  41af9e:	jns    0x41afbe
  41afa0:	and    al,0x1e
  41afa2:	ret    
  41afa3:	ret    0xfab8
  41afa6:	inc    esp
  41afa7:	ds cli 
  41afa9:	call   0x13b5:0x7a7bc17b
  41afb0:	sbb    ebp,DWORD PTR [edx+0x1c9bbb5f]
  41afb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afb7:	push   ecx
  41afb8:	in     eax,dx
  41afb9:	sbb    BYTE PTR [ebp-0x2d748727],0x69
  41afc0:	ins    BYTE PTR es:[edi],dx
  41afc1:	not    DWORD PTR [ecx+0x16]
  41afc4:	inc    ebp
  41afc5:	in     eax,dx
  41afc6:	imul   edx,DWORD PTR [edi+0x11000ea7],0x6d
  41afcd:	pop    ebp
  41afce:	scas   al,BYTE PTR es:[edi]
  41afcf:	sbb    eax,0x72d8d525
  41afd4:	sub    al,0x27
  41afd6:	out    0xb1,eax
  41afd8:	pop    ebx
  41afd9:	add    ah,dh
  41afdb:	outs   dx,BYTE PTR ds:[esi]
  41afdc:	jl     0x41af6d
  41afde:	sar    DWORD PTR [edi+0x15e2ad69],cl
  41afe4:	add    DWORD PTR [edi-0x4d284504],ebx
  41afea:	xchg   edx,eax
  41afeb:	jb     0x41b018
  41afed:	add    edx,0x43151aeb
  41aff3:	dec    ecx
  41aff4:	(bad)  
  41aff5:	call   0x4b74:0xe716c2b2
  41affc:	jecxz  0x41b048
  41affe:	push   eax
  41afff:	fs scas eax,DWORD PTR es:[edi]
  41b001:	sahf   
  41b002:	jmp    0x26b4:0xe662a1d3
  41b009:	(bad)  
  41b00a:	xlat   BYTE PTR ds:[ebx]
  41b00b:	dec    ebx
  41b00c:	xchg   edi,eax
  41b00d:	neg    DWORD PTR [edi+0x37]
  41b010:	mov    BYTE PTR [eax],ch
  41b012:	mov    ds:0x2b68bac5,al
  41b017:	add    eax,0xf894ad51
  41b01c:	dec    edx
  41b01d:	or     BYTE PTR [edi-0x4f7a799],ah
  41b023:	pusha  
  41b024:	cdq    
  41b025:	ins    DWORD PTR es:[edi],dx
  41b026:	mov    al,0x34
  41b028:	stc    
  41b029:	cmp    DWORD PTR [edi],esi
  41b02b:	scas   al,BYTE PTR es:[edi]
  41b02c:	(bad)  
  41b02d:	adc    dh,bh
  41b02f:	adc    al,0x9e
  41b031:	stos   DWORD PTR es:[edi],eax
  41b032:	mov    cl,0x5
  41b034:	stc    
  41b035:	cld    
  41b036:	arpl   WORD PTR [ebp+0x52],ax
  41b039:	lods   eax,DWORD PTR ds:[esi]
  41b03a:	xchg   BYTE PTR [edi],ch
  41b03c:	shr    ebx,1
  41b03e:	fnstsw WORD PTR [eax]
  41b040:	dec    esp
  41b041:	out    0x7c,eax
  41b043:	add    BYTE PTR [ebp-0x1e],cl
  41b046:	cmp    eax,0x2f01cdbe
  41b04b:	repnz or al,0xdb
  41b04e:	adc    dl,BYTE PTR [esi+ebx*4-0x33]
  41b052:	cdq    
  41b053:	call   0x2903:0xc24f3e94
  41b05a:	stos   DWORD PTR es:[edi],eax
  41b05b:	popf   
  41b05c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b05d:	stc    
  41b05e:	loope  0x41b08b
  41b060:	fs mov al,0xf3
  41b063:	pop    eax
  41b064:	call   DWORD PTR [eax-0x1]
  41b067:	stc    
  41b068:	jl     0x41b0c7
  41b06a:	aam    0x2c
  41b06c:	xlat   BYTE PTR ds:[ebx]
  41b06d:	push   ss
  41b06e:	add    al,0x39
  41b070:	aam    0xf
  41b072:	ja     0x41b093
  41b074:	std    
  41b075:	add    al,0xec
  41b077:	out    dx,al
  41b078:	mov    bh,0x61
  41b07a:	add    eax,0x9423827e
  41b07f:	adc    BYTE PTR [ebp-0x3e],0xc1
  41b083:	mov    BYTE PTR [ebx-0x221daa80],bl
  41b089:	jno    0x41b01c
  41b08b:	pop    ecx
  41b08c:	jnp    0x41b043
  41b08e:	in     eax,0xaf
  41b090:	sub    eax,0x480e505f
  41b095:	mov    esi,0xfd0b7169
  41b09a:	and    al,BYTE PTR [edi]
  41b09c:	sahf   
  41b09d:	push   eax
  41b09e:	shl    DWORD PTR [edi],1
  41b0a0:	xchg   cl,ch
  41b0a2:	push   cs
  41b0a3:	dec    edi
  41b0a4:	push   ecx
  41b0a5:	mov    al,ds:0xe2cb4a03
  41b0aa:	lock cli 
  41b0ac:	ret    
  41b0ad:	push   ebx
  41b0ae:	aad    0xc1
  41b0b0:	aam    0x24
  41b0b2:	adc    dl,BYTE PTR [ecx-0x36]
  41b0b5:	std    
  41b0b6:	in     eax,0x54
  41b0b8:	mov    esi,0x33eddd22
  41b0bd:	xor    eax,0xdf6b55eb
  41b0c2:	lock xchg edi,eax
  41b0c4:	fistp  DWORD PTR [ecx-0x7d7c8c76]
  41b0ca:	push   esp
  41b0cb:	popa   
  41b0cc:	in     al,0x13
  41b0ce:	push   ebx
  41b0cf:	add    BYTE PTR [ebp+0x59d01de7],ah
  41b0d5:	sub    edi,ebp
  41b0d7:	loopne 0x41b0c3
  41b0d9:	mov    es,WORD PTR [edx]
  41b0db:	in     eax,dx
  41b0dc:	xchg   edi,eax
  41b0dd:	(bad)  
  41b0de:	pop    ds
  41b0df:	in     al,dx
  41b0e0:	sahf   
  41b0e1:	inc    edx
  41b0e2:	add    eax,0xd2d8ea2d
  41b0e7:	mov    ?,edx
  41b0e9:	call   0x6e0e5ebb
  41b0ee:	in     al,0x59
  41b0f0:	cmp    esi,ebx
  41b0f2:	jl     0x41b172
  41b0f4:	jae    0x41b0d1
  41b0f6:	retf   
  41b0f7:	pop    esp
  41b0f8:	inc    BYTE PTR [ebp+0x798a6418]
  41b0fe:	inc    ebx
  41b0ff:	xchg   ebp,eax
  41b100:	fidivr DWORD PTR [esi+eax*1]
  41b103:	push   ebp
  41b104:	ret    0x3225
  41b107:	inc    ebp
  41b108:	mov    dl,0xfc
  41b10a:	shl    DWORD PTR [ecx],0x88
  41b10d:	shr    DWORD PTR [ecx],cl
  41b10f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b110:	and    bh,BYTE PTR [eax+esi*8-0x779242e5]
  41b117:	cmc    
  41b118:	jmp    0x76b0ecde
  41b11d:	jle    0x41b145
  41b11f:	xchg   esp,eax
  41b120:	scas   al,BYTE PTR es:[edi]
  41b121:	stos   DWORD PTR es:[edi],eax
  41b122:	cmc    
  41b123:	push   ebx
  41b124:	loop   0x41b0f8
  41b126:	xor    eax,0xa5ecab2e
  41b12b:	push   ss
  41b12c:	aas    
  41b12d:	mov    DWORD PTR ds:0xecca877c,ecx
  41b133:	into   
  41b134:	nop
  41b135:	repz jle 0x41b119
  41b138:	push   ds
  41b139:	clc    
  41b13a:	dec    edx
  41b13b:	pop    eax
  41b13c:	fs gs dec ecx
  41b13f:	inc    edi
  41b140:	pushf  
  41b141:	mov    ds:0xd4d70b35,eax
  41b146:	js     0x41b157
  41b148:	mov    ah,0xda
  41b14a:	das    
  41b14b:	push   es
  41b14c:	out    0xb8,al
  41b14e:	add    DWORD PTR [edi-0x20761f61],esp
  41b154:	test   DWORD PTR [eax-0x66],ebp
  41b157:	sbb    esi,edx
  41b159:	sub    eax,0x1e652120
  41b15e:	mov    bh,0xdc
  41b160:	inc    ebp
  41b161:	ins    BYTE PTR es:[edi],dx
  41b162:	mov    ebp,0xce553325
  41b167:	test   BYTE PTR [eax+0x823f9cc],dh
  41b16d:	push   ecx
  41b16e:	pop    edi
  41b16f:	rcr    BYTE PTR [esp+ecx*4],cl
  41b172:	mov    ch,0x63
  41b174:	push   es
  41b175:	add    BYTE PTR [eax+0x7c0fb42],0x49
  41b17c:	dec    esi
  41b17d:	xor    BYTE PTR [esi+0x5043f0e],ch
  41b183:	adc    ecx,DWORD PTR [esp+edi*4]
  41b186:	mov    BYTE PTR [eax-0x2832981f],cl
  41b18c:	test   eax,0xac33c8a6
  41b191:	push   cs
  41b192:	ss scas al,BYTE PTR es:[edi]
  41b194:	(bad)  
  41b195:	jo     0x41b120
  41b197:	xor    esi,DWORD PTR [eax]
  41b199:	lods   al,BYTE PTR ds:[esi]
  41b19a:	call   0x3ed3:0x6291198e
  41b1a1:	mov    BYTE PTR [edx+0x57],al
  41b1a4:	out    dx,al
  41b1a5:	pop    ecx
  41b1a6:	pusha  
  41b1a7:	mov    eax,0x4fdc84ae
  41b1ac:	(bad)  
  41b1ad:	pop    esp
  41b1ae:	push   ebx
  41b1af:	in     eax,dx
  41b1b0:	inc    ebx
  41b1b1:	push   0xfffffffc
  41b1b3:	aas    
  41b1b4:	inc    ebx
  41b1b5:	ds push eax
  41b1b7:	push   ebp
  41b1b8:	and    BYTE PTR [ebp-0x59],0xb0
  41b1bc:	mov    esp,0xeb6e303e
  41b1c1:	sbb    eax,0xdc73cd87
  41b1c6:	retf   
  41b1c7:	cmp    eax,0x679c0f4a
  41b1cc:	imul   esp,DWORD PTR [ecx-0x18],0x30da96d
  41b1d3:	mov    ebp,0xd2016b9
  41b1d8:	sysexit 
  41b1da:	xchg   ebx,eax
  41b1db:	fbstp  TBYTE PTR [edi+edx*8-0x25]
  41b1df:	sbb    cl,BYTE PTR [edx-0x58]
  41b1e2:	push   edx
  41b1e3:	push   ss
  41b1e4:	rcl    BYTE PTR [eax+esi*1-0xbab9dba],cl
  41b1eb:	(bad)  [ebp+0x7a46e6d8]
  41b1f1:	pop    ecx
  41b1f2:	popf   
  41b1f3:	inc    esi
  41b1f4:	xchg   ebx,eax
  41b1f5:	(bad)  
  41b1f6:	mov    ebx,0xdcd4d863
  41b1fb:	push   ss
  41b1fc:	add    ebp,ebp
  41b1fe:	push   esp
  41b1ff:	inc    ebp
  41b200:	in     eax,dx
  41b201:	ss aaa 
  41b203:	stc    
  41b204:	push   ds
  41b205:	jmp    DWORD PTR [ecx]
  41b207:	je     0x41b19b
  41b209:	outs   dx,DWORD PTR ds:[esi]
  41b20a:	clc    
  41b20b:	add    BYTE PTR [edi+0x4f],0xc
  41b20f:	icebp  
  41b210:	iret   
  41b211:	icebp  
  41b212:	mov    dh,0x63
  41b214:	sub    al,ch
  41b216:	or     ecx,DWORD PTR [edi]
  41b218:	cmp    DWORD PTR [bx+di+0x53],edi
  41b21c:	dec    ecx
  41b21d:	mov    esi,0xeb82f09d
  41b222:	push   edx
  41b223:	mov    ax,ds:0x834a6879
  41b229:	(bad)  
  41b22b:	es cli 
  41b22d:	sbb    eax,0x767e0a50
  41b232:	add    DWORD PTR [edi+0x63],esi
  41b235:	jo     0x41b2a9
  41b237:	push   ecx
  41b238:	into   
  41b239:	xor    BYTE PTR [ecx+0x62],dh
  41b23c:	mov    edi,0xe582c47c
  41b241:	mov    esp,0x8cfcb25b
  41b246:	add    DWORD PTR [edi+ebx*8],ebx
  41b249:	addr16 add ah,dh
  41b24c:	cdq    
  41b24d:	sbb    ebx,ebx
  41b24f:	and    DWORD PTR [esi+0x2],edx
  41b252:	pusha  
  41b253:	mov    esi,ebp
  41b255:	test   BYTE PTR [ebp+0x6c1c98ce],dh
  41b25b:	or     eax,0x3be75c85
  41b260:	cwde   
  41b261:	sar    BYTE PTR [eax+0x4c5f98bf],1
  41b267:	xchg   edi,eax
  41b268:	sahf   
  41b269:	xchg   esp,eax
  41b26a:	xor    eax,0x2e53973c
  41b26f:	cld    
  41b270:	add    ebx,DWORD PTR [eax]
  41b272:	retf   0x7f7b
  41b275:	loope  0x41b2d2
  41b277:	mov    ecx,0xf99fe477
  41b27c:	jmp    0x41b23d
  41b27e:	push   edi
  41b27f:	pop    ebp
  41b280:	mov    al,cl
  41b282:	sub    dl,ch
  41b284:	shl    bh,cl
  41b286:	popa   
  41b287:	in     al,0xd9
  41b289:	inc    esi
  41b28a:	fidiv  WORD PTR [eax-0x51]
  41b28d:	jnp    0x41b2c0
  41b28f:	ds xchg ecx,eax
  41b291:	int3   
  41b292:	jmp    0xcd39cd8c
  41b297:	test   eax,0xf8fd2308
  41b29c:	pop    ss
  41b29d:	outs   dx,DWORD PTR ds:[esi]
  41b29e:	xchg   ecx,eax
  41b29f:	add    al,dl
  41b2a1:	or     DWORD PTR [edx+0x2a],ecx
  41b2a4:	pop    ecx
  41b2a5:	add    ch,al
  41b2a7:	push   edx
  41b2a8:	xchg   DWORD PTR [edi],esi
  41b2aa:	xchg   esi,eax
  41b2ab:	stos   BYTE PTR es:[edi],al
  41b2ac:	and    bl,BYTE PTR [edx]
  41b2ae:	out    0x47,eax
  41b2b0:	popf   
  41b2b1:	js     0x41b273
  41b2b3:	or     DWORD PTR [edi],edx
  41b2b5:	mov    ebx,0xa9d0d28
  41b2ba:	jb     0x41b2e9
  41b2bc:	sub    eax,0xd1c19ee6
  41b2c1:	sbb    DWORD PTR [edi+0x66],edi
  41b2c4:	mov    dl,0xc
  41b2c6:	xchg   esp,eax
  41b2c7:	shl    DWORD PTR [edx+eiz*2-0x57],1
  41b2cb:	xchg   DWORD PTR [ecx+0x14],ebx
  41b2ce:	jmp    0x42526365
  41b2d3:	scas   al,BYTE PTR es:[edi]
  41b2d4:	pop    esp
  41b2d5:	imul   ebx,DWORD PTR [eax],0xffffffbb
  41b2d8:	push   ebp
  41b2d9:	(bad)  
  41b2da:	fsub   DWORD PTR [ebx+0x1d1182f8]
  41b2e0:	ret    0x3ccd
  41b2e3:	bound  esi,QWORD PTR [edi]
  41b2e5:	mov    ch,0x76
  41b2e7:	push   esp
  41b2e8:	xor    DWORD PTR [eax-0xc1320bf],0xfe72a4b6
  41b2f2:	fadd   st,st(2)
  41b2f4:	cmc    
  41b2f5:	sub    esi,ebx
  41b2f7:	xor    dh,BYTE PTR [eax-0x4a5264f9]
  41b2fd:	daa    
  41b2fe:	pop    ebp
  41b2ff:	pusha  
  41b300:	in     eax,dx
  41b301:	in     eax,dx
  41b302:	inc    ecx
  41b303:	popa   
  41b304:	loopne 0x41b28b
  41b306:	fprem  
  41b308:	xor    esp,DWORD PTR [edi+0x1600a08b]
  41b30e:	inc    esi
  41b30f:	scas   al,BYTE PTR es:[edi]
  41b310:	daa    
  41b311:	jo     0x41b35e
  41b313:	rcr    BYTE PTR [edi+0xc],0x29
  41b317:	test   BYTE PTR [ecx+edx*1],al
  41b31a:	dec    esi
  41b31b:	and    cl,BYTE PTR [edi+0x69]
  41b31e:	stos   DWORD PTR es:[edi],eax
  41b31f:	dec    esi
  41b320:	push   es
  41b321:	test   al,0x5f
  41b323:	cs lock cld 
  41b326:	dec    cl
  41b328:	mov    ebp,0x824d625
  41b32d:	pushf  
  41b32e:	xchg   BYTE PTR [eax+0x5f],cl
  41b331:	add    eax,0x8d675097
  41b336:	or     eax,0x8c275f0d
  41b33b:	fwait
  41b33c:	pop    eax
  41b33d:	lea    ecx,[esi-0x5ac24b7]
  41b343:	icebp  
  41b344:	adc    eax,0x7e370e97
  41b349:	and    al,0x7a
  41b34b:	ret    
  41b34c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b34d:	mov    al,BYTE PTR [edx-0x9]
  41b350:	cwde   
  41b351:	dec    eax
  41b352:	inc    ecx
  41b353:	jno    0x41b32f
  41b355:	fsubr  st,st(0)
  41b357:	or     DWORD PTR [ebx+0x55],ebp
  41b35a:	movhps QWORD PTR [ecx+0x2c6da8f8],xmm4
  41b361:	pop    ebx
  41b362:	outs   dx,BYTE PTR ds:[esi]
  41b363:	inc    edi
  41b364:	xor    DWORD PTR [edi],0x53
  41b367:	xchg   edi,eax
  41b368:	mov    dl,0x59
  41b36a:	ds mov dh,0xe
  41b36d:	jp     0x41b34f
  41b36f:	call   0x2ee38b9a
  41b374:	in     eax,dx
  41b375:	or     al,0x13
  41b377:	call   0x1275:0x90542b59
  41b37e:	icebp  
  41b37f:	pop    edi
  41b380:	sub    DWORD PTR [edx+0x5cdc8d1d],ebx
  41b386:	mov    cl,0x80
  41b388:	loop   0x41b37a
  41b38a:	pop    ebp
  41b38b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b38c:	sbb    al,0x56
  41b38e:	xchg   BYTE PTR [ecx],bl
  41b390:	jbe    0x41b3bb
  41b392:	dec    esp
  41b393:	and    eax,0xbbe875fc
  41b398:	jae    0x41b3a5
  41b39a:	mov    ds:0x6adc3795,al
  41b39f:	pop    edx
  41b3a0:	xor    DWORD PTR [esi+0xaa6d0dc],esp
  41b3a6:	cs mov edx,0xdc992b8a
  41b3ac:	cmp    eax,0x6cc45656
  41b3b1:	rol    DWORD PTR [ebx+0xd8d91a9],1
  41b3b7:	push   0xffffffa7
  41b3b9:	xor    al,0x61
  41b3bb:	fcom   QWORD PTR [ebp+0xf772671]
  41b3c1:	clc    
  41b3c2:	sub    edx,DWORD PTR [ebx-0x1ab66982]
  41b3c8:	(bad)  [edx-0x7d2cbc7c]
  41b3ce:	mov    ebx,0x84686234
  41b3d3:	lahf   
  41b3d4:	and    edi,DWORD PTR [ecx]
  41b3d6:	pop    ebp
  41b3d7:	sahf   
  41b3d8:	fs es cld 
  41b3db:	jl     0x41b448
  41b3dd:	mov    eax,ds:0xd7ebdb5c
  41b3e2:	loope  0x41b3e6
  41b3e4:	int    0x89
  41b3e6:	fcmovu st,st(7)
  41b3e8:	adc    DWORD PTR [ecx+0x2a],0x12c60df4
  41b3ef:	mov    al,0x67
  41b3f1:	ret    
  41b3f2:	popf   
  41b3f3:	pushf  
  41b3f4:	xchg   ebx,eax
  41b3f5:	or     eax,0xf3e3042e
  41b3fa:	(bad)  
  41b3fb:	(bad)  [edi+eiz*1]
  41b3fe:	retf   
  41b3ff:	ror    DWORD PTR [edx],1
  41b401:	and    DWORD PTR [eax-0x69d6c2d1],eax
  41b407:	jge    0x41b44f
  41b409:	ss ss add al,0x62
  41b40d:	repnz ins DWORD PTR es:[edi],dx
  41b40f:	loope  0x41b3ad
  41b411:	les    esi,FWORD PTR [edx]
  41b413:	arpl   WORD PTR [ecx-0x2c],ax
  41b416:	inc    eax
  41b417:	aam    0x85
  41b419:	dec    ecx
  41b41a:	clc    
  41b41b:	cdq    
  41b41c:	fdivr  QWORD PTR [edi+ebx*4-0xe]
  41b420:	jl     0x41b3d1
  41b422:	lods   al,BYTE PTR ds:[esi]
  41b423:	aad    0xe5
  41b425:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b426:	rol    BYTE PTR [esi],1
  41b428:	pop    ss
  41b429:	xor    ah,ch
  41b42b:	aaa    
  41b42c:	jb     0x41b427
  41b42e:	ss sub bl,al
  41b431:	fisttp DWORD PTR gs:[ebx]
  41b434:	and    ah,BYTE PTR [ebx+0x16]
  41b437:	arpl   dx,di
  41b439:	pop    es
  41b43a:	hlt    
  41b43b:	sbb    eax,0xfe2ae72b
  41b440:	mov    ds:0x333f276c,al
  41b445:	cmp    al,al
  41b447:	jmp    0xfef909fd
  41b44c:	popa   
  41b44d:	dec    edi
  41b44e:	ins    BYTE PTR es:[edi],dx
  41b44f:	inc    eax
  41b450:	fst    QWORD PTR [edx-0x1d57cd29]
  41b456:	add    BYTE PTR [ebx-0x6d],ch
  41b459:	ins    DWORD PTR es:[edi],dx
  41b45a:	loopne 0x41b454
  41b45c:	mov    ebp,cs
  41b45e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b45f:	xlat   BYTE PTR ds:[ebx]
  41b460:	ss jnp 0x41b4d5
  41b463:	test   BYTE PTR [ecx],cl
  41b465:	mov    esp,0x737272c5
  41b46a:	(bad)  
  41b46b:	loop   0x41b4c2
  41b46d:	dec    ebx
  41b46e:	in     eax,dx
  41b46f:	push   ebx
  41b470:	test   eax,0x3e6a6e2
  41b475:	ss push eax
  41b477:	call   0xa777:0x7835d3f5
  41b47e:	cs lahf 
  41b480:	es mov dh,0xa
  41b483:	and    DWORD PTR ds:0xd2b10bc5,esp
  41b489:	enter  0x9da7,0x73
  41b48d:	push   eax
  41b48e:	mov    ds:0xa9467e80,eax
  41b493:	sub    DWORD PTR [edi+esi*4+0x5],ebx
  41b497:	outs   dx,BYTE PTR ds:[esi]
  41b498:	xchg   edi,eax
  41b499:	xchg   ebx,eax
  41b49a:	imul   esp,DWORD PTR [edi+ecx*4-0x4e3a2003],0xd9dd5d8f
  41b4a5:	add    eax,0xf190acb1
  41b4aa:	push   ebx
  41b4ab:	mov    eax,0x205fb60f
  41b4b0:	xchg   ebx,eax
  41b4b1:	popa   
  41b4b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4b3:	mov    edx,0x1755576f
  41b4b8:	cmp    ecx,DWORD PTR [edi-0x2e]
  41b4bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4bc:	(bad)  
  41b4bd:	gs dec ebx
  41b4bf:	(bad)  
  41b4c0:	mov    ds:0x5b3bb1dd,al
  41b4c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4c6:	cmp    eax,0xdbf8ddd1
  41b4cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4cc:	or     eax,0x86fb065d
  41b4d1:	mov    ecx,0x7a8f3c8c
  41b4d6:	mov    esi,0x41ebdf72
  41b4db:	and    bl,BYTE PTR [eax+0x1f2bac36]
  41b4e1:	mov    bh,0xb
  41b4e3:	inc    eax
  41b4e4:	mov    cl,0x4
  41b4e6:	xlat   BYTE PTR ds:[ebx]
  41b4e7:	jo     0x41b485
  41b4e9:	dec    ecx
  41b4ea:	jnp    0x41b4cc
  41b4ec:	cmp    ecx,DWORD PTR [ebx+0x5eb1674a]
  41b4f2:	cmc    
  41b4f3:	add    DWORD PTR [edi+ebx*2],0x7f
  41b4f7:	lahf   
  41b4f8:	add    al,0x5a
  41b4fa:	xor    eax,0xfd37a65c
  41b4ff:	or     DWORD PTR [edi],ecx
  41b501:	fs pop ecx
  41b503:	xchg   ecx,eax
  41b504:	rcl    DWORD PTR [ebp-0x6a],0xd2
  41b508:	xor    edi,0x83fb92e1
  41b50e:	mov    ds:0x17632a34,al
  41b513:	(bad)  
  41b515:	(bad)  
  41b516:	or     al,0x9d
  41b518:	fsub   st,st(6)
  41b51a:	int    0x91
  41b51c:	fcomi  st,st(7)
  41b51e:	daa    
  41b51f:	pop    es
  41b520:	mov    dh,0x3b
  41b522:	and    cl,0x56
  41b525:	mov    esi,0x51ba2ec7
  41b52a:	push   ds
  41b52b:	inc    eax
  41b52c:	loope  0x41b578
  41b52e:	mov    fs,WORD PTR [ecx-0x41208c08]
  41b534:	dec    edx
  41b535:	mov    BYTE PTR [esi-0x2233586c],dh
  41b53b:	imul   esp,DWORD PTR [ebp-0x6d],0xffffffcc
  41b53f:	push   edi
  41b540:	jb     0x41b503
  41b542:	cmp    eax,0x14215492
  41b547:	scas   al,BYTE PTR es:[edi]
  41b548:	dec    ebx
  41b549:	lods   al,BYTE PTR ds:[esi]
  41b54a:	mov    esi,0xc171102b
  41b54f:	inc    ebx
  41b550:	xor    BYTE PTR [edi],cl
  41b552:	jne    0x41b5d3
  41b554:	jmp    0x41b578
  41b556:	call   0x689f:0xfcb6863d
  41b55d:	stos   DWORD PTR es:[edi],eax
  41b55e:	mov    bh,bl
  41b560:	dec    edx
  41b561:	mov    DWORD PTR [eax],edi
  41b563:	or     ch,BYTE PTR [esp+esi*2-0x69]
  41b567:	stc    
  41b568:	cmp    BYTE PTR [ebp+0x32d83368],ah
  41b56e:	imul   edx,DWORD PTR [ebx+0x53],0x32a16b15
  41b575:	cmp    DWORD PTR [esi+0x3d],0x37
  41b579:	ret    
  41b57a:	sbb    eax,0x28702811
  41b57f:	iret   
  41b580:	push   ebx
  41b581:	jmp    0x3aee6e03
  41b586:	imul   edx,DWORD PTR [ecx-0x598832b3],0x4acdbeb1
  41b590:	mov    bh,0xdc
  41b592:	dec    ebp
  41b593:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b594:	fisub  WORD PTR [eax-0x69]
  41b597:	add    dl,BYTE PTR [edx+ebp*8+0x786aef0]
  41b59e:	push   cs
  41b59f:	aas    
  41b5a0:	add    al,0x8c
  41b5a2:	adc    eax,0x3f00697e
  41b5a7:	icebp  
  41b5a8:	inc    ebx
  41b5a9:	or     ecx,ebp
  41b5ab:	in     eax,0xb1
  41b5ad:	dec    esp
  41b5ae:	push   ds
  41b5af:	push   ss
  41b5b0:	adc    BYTE PTR [ebx+0x77],0x82
  41b5b4:	push   0x734ee218
  41b5b9:	cmp    eax,0xac49cf24
  41b5be:	int3   
  41b5bf:	cmc    
  41b5c0:	ret    
  41b5c1:	ins    DWORD PTR es:[edi],dx
  41b5c2:	into   
  41b5c3:	and    esp,DWORD PTR [eax+0x34431ecc]
  41b5c9:	or     DWORD PTR [eax+ebp*2-0x1d],ebp
  41b5cd:	mov    dl,0x8e
  41b5cf:	scas   al,BYTE PTR es:[edi]
  41b5d0:	loop   0x41b594
  41b5d2:	or     ah,BYTE PTR [ecx+edx*4+0x40734455]
  41b5d9:	ficom  DWORD PTR [eiz*1-0x1a083188]
  41b5e0:	lahf   
  41b5e1:	jnp    0x41b657
  41b5e3:	push   0x97af306
  41b5e8:	call   0x1f527867
  41b5ed:	xchg   ebx,eax
  41b5ee:	(bad)  
  41b5ef:	adc    al,0x50
  41b5f1:	adc    BYTE PTR ss:[ecx+esi*1+0x29a79863],0xf8
  41b5fa:	sub    al,0xe6
  41b5fc:	mov    WORD PTR [ecx+0x17],?
  41b5ff:	jmp    0xe163:0x181874dd
  41b606:	and    BYTE PTR [edx+0x276490ab],bh
  41b60c:	out    dx,eax
  41b60d:	and    bl,bh
  41b60f:	add    al,0x38
  41b611:	out    dx,al
  41b612:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b613:	xor    BYTE PTR [ebp-0x1a],dh
  41b616:	ins    BYTE PTR es:[edi],dx
  41b617:	cmp    BYTE PTR [esi+0x6d737151],ah
  41b61d:	pop    ss
  41b61e:	dec    esp
  41b61f:	call   edi
  41b621:	int    0x37
  41b623:	mov    ebp,0x90b95ec7
  41b628:	jge    0x41b5e0
  41b62a:	out    dx,eax
  41b62b:	and    eax,edi
  41b62d:	rol    DWORD PTR [edx+ebx*4-0x5],1
  41b631:	cmp    BYTE PTR [ebx],al
  41b633:	jno    0x41b6b4
  41b635:	mov    ch,0xd8
  41b637:	dec    eax
  41b638:	js     0x41b647
  41b63a:	loopne 0x41b5cc
  41b63c:	mov    ebp,DWORD PTR [edi+0x3b8bd734]
  41b642:	shl    cl,0x64
  41b645:	and    bh,BYTE PTR [ebp-0xa51b9cd]
  41b64b:	pop    edi
  41b64c:	mov    ah,0xe1
  41b64e:	nop
  41b64f:	cld    
  41b650:	and    edx,DWORD PTR [ebx-0x71]
  41b653:	sti    
  41b654:	scas   al,BYTE PTR es:[edi]
  41b655:	cmc    
  41b656:	cmc    
  41b657:	xchg   edx,eax
  41b658:	xor    al,0x33
  41b65a:	sub    edx,ebp
  41b65c:	je     0x41b610
  41b65e:	ret    
  41b65f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b660:	cmp    ecx,DWORD PTR [ebp+0xee20d82]
  41b666:	jp     0x41b605
  41b668:	retf   0xb273
  41b66b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b66c:	or     DWORD PTR [edx+0x2eb5fcf9],ebp
  41b672:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b673:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b674:	ja     0x41b669
  41b676:	mov    WORD PTR [ebp-0xe73250f],ss
  41b67c:	sbb    BYTE PTR [ecx],dh
  41b67e:	jmp    0x41b61f
  41b680:	scas   eax,DWORD PTR es:[edi]
  41b681:	pop    ds
  41b682:	mov    bl,0x2b
  41b684:	mov    ds,WORD PTR ds:0x309b7924
  41b68a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b68b:	mov    ah,0xfd
  41b68d:	iret   
  41b68e:	loopne 0x41b686
  41b690:	pop    es
  41b691:	sbb    al,0xf
  41b693:	mov    ds:0xe0461f8b,eax
  41b698:	pushf  
  41b699:	mov    al,0x4d
  41b69b:	rcl    DWORD PTR [edi+0x6f],1
  41b69e:	retf   
  41b69f:	inc    ebp
  41b6a0:	in     al,dx
  41b6a1:	clc    
  41b6a2:	(bad)  
  41b6a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6a4:	or     ebx,DWORD PTR [eax+edx*2]
  41b6a7:	fisub  WORD PTR [eax]
  41b6a9:	cmp    esi,DWORD PTR [ebx+edi*2-0x3]
  41b6ad:	clc    
  41b6ae:	pop    edi
  41b6af:	pushf  
  41b6b0:	out    0x8c,eax
  41b6b2:	retf   0xb6b8
  41b6b5:	das    
  41b6b6:	clc    
  41b6b7:	dec    esi
  41b6b8:	data16 fbstp TBYTE PTR [edx+0x64]
  41b6bc:	cmp    DWORD PTR [edx],edx
  41b6be:	mov    dh,0xcc
  41b6c0:	xor    al,0x8c
  41b6c2:	xchg   ebp,eax
  41b6c3:	push   0x62
  41b6c5:	aas    
  41b6c6:	fidiv  WORD PTR [esi]
  41b6c8:	sbb    dl,BYTE PTR [eax+0x18]
  41b6cb:	push   cs
  41b6cc:	pop    ss
  41b6cd:	dec    esi
  41b6ce:	lods   al,BYTE PTR ds:[esi]
  41b6cf:	pop    ds
  41b6d0:	mov    ah,0x5c
  41b6d2:	add    ch,BYTE PTR [edi+0x3f49459f]
  41b6d8:	sub    al,0x36
  41b6db:	jno    0x41b6be
  41b6dd:	hlt    
  41b6de:	sti    
  41b6df:	push   0x1
  41b6e1:	ins    BYTE PTR es:[edi],dx
  41b6e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6e3:	add    dl,ah
  41b6e5:	stos   BYTE PTR es:[edi],al
  41b6e6:	xor    ah,cl
  41b6e8:	pop    ds
  41b6e9:	lods   al,BYTE PTR ds:[esi]
  41b6ea:	pop    ecx
  41b6eb:	sub    ecx,ecx
  41b6ed:	test   al,0x76
  41b6ef:	adc    ch,bl
  41b6f1:	add    eax,0x2652514d
  41b6f6:	and    eax,DWORD PTR [eax]
  41b6f8:	scas   eax,DWORD PTR es:[edi]
  41b6f9:	adc    ebx,0xe3b1cfd3
  41b6ff:	xchg   ebp,esi
  41b701:	push   ss
  41b702:	(bad)  
  41b703:	cmp    DWORD PTR [esi-0x65a6e960],eax
  41b709:	aaa    
  41b70a:	fwait
  41b70b:	mov    ebx,0x2950b1ea
  41b710:	idiv   BYTE PTR [esi-0x2e7fcba1]
  41b716:	(bad)  
  41b717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b718:	mov    ?,ebx
  41b71a:	sahf   
  41b71b:	sbb    al,0xd3
  41b71d:	fmul   st(7),st
  41b71f:	icebp  
  41b720:	xchg   edi,eax
  41b721:	cmc    
  41b722:	inc    esi
  41b723:	ret    
  41b724:	test   BYTE PTR [ebx],ch
  41b726:	pop    edx
  41b727:	fstp   st(3)
  41b729:	sbb    DWORD PTR [ebp+0x1b],edx
  41b72c:	xchg   esp,eax
  41b72d:	cwde   
  41b72e:	jmp    0x6194e7b0
  41b733:	outs   dx,DWORD PTR ds:[esi]
  41b734:	xlat   BYTE PTR ds:[ebx]
  41b735:	sub    eax,0xf528dfb9
  41b73a:	shr    DWORD PTR [esp+ebx*1-0x63],cl
  41b73e:	test   al,0x58
  41b740:	and    eax,0xb10519b
  41b745:	das    
  41b746:	and    eax,0xe355ed42
  41b74b:	sbb    DWORD PTR [esi+0x59],eax
  41b74e:	add    edx,esi
  41b750:	out    0x5f,eax
  41b752:	xlat   BYTE PTR ds:[ebx]
  41b753:	sub    esp,ebp
  41b755:	jmp    0x41b750
  41b757:	push   esi
  41b758:	addr16 in al,dx
  41b75a:	aas    
  41b75b:	jno    0x41b7cf
  41b75d:	sub    esp,edx
  41b75f:	pushf  
  41b760:	add    BYTE PTR [edi+0x5fea3490],bl
  41b766:	ins    DWORD PTR es:[edi],dx
  41b767:	scas   al,BYTE PTR es:[edi]
  41b768:	pusha  
  41b769:	scas   eax,DWORD PTR es:[edi]
  41b76a:	xchg   esp,eax
  41b76b:	retf   0x6f67
  41b76e:	mov    ds:0x9d06c33b,al
  41b773:	mov    al,0x70
  41b775:	sar    DWORD PTR [eax-0x599c661a],1
  41b77b:	adc    BYTE PTR ds:0x7de6c66f,al
  41b781:	ja     0x41b7b9
  41b783:	xchg   edi,eax
  41b784:	fs aam 0xfa
  41b787:	or     BYTE PTR [ebx+0x9],al
  41b78a:	(bad)  
  41b78b:	pop    eax
  41b78c:	add    al,0xe0
  41b78e:	test   al,0x9b
  41b790:	scas   al,BYTE PTR es:[edi]
  41b791:	dec    edx
  41b792:	inc    edi
  41b793:	fptan  
  41b795:	add    eax,0xb3b6a727
  41b79a:	and    DWORD PTR [edx+edi*1-0x77289a33],eax
  41b7a1:	ss daa 
  41b7a3:	pop    ecx
  41b7a4:	je     0x41b761
  41b7a6:	mov    ch,0x6d
  41b7a8:	pop    ss
  41b7a9:	stc    
  41b7aa:	imul   ecx,DWORD PTR [edi+0x613d8499],0x1c
  41b7b1:	stos   DWORD PTR es:[edi],eax
  41b7b2:	mov    ah,0x58
  41b7b4:	call   0xd456d208
  41b7b9:	fistp  QWORD PTR [eax-0xd874e7d]
  41b7bf:	add    DWORD PTR [esi],eax
  41b7c1:	test   BYTE PTR [esi],bl
  41b7c3:	loop   0x41b81c
  41b7c5:	inc    edi
  41b7c6:	xchg   edx,eax
  41b7c7:	loop   0x41b763
  41b7c9:	mov    bh,BYTE PTR [esi+0x79645d3f]
  41b7cf:	ret    0x22a0
  41b7d2:	sub    BYTE PTR [ebp-0x8],cl
  41b7d5:	xor    al,dl
  41b7d7:	dec    eax
  41b7d8:	gs add al,0x69
  41b7db:	add    dl,BYTE PTR [eax+0x6a5d4fad]
  41b7e1:	cmp    al,0x7a
  41b7e3:	call   0x4d0598f
  41b7e8:	(bad)  [ecx+0x4449af0d]
  41b7ee:	mov    DWORD PTR [edi],ebp
  41b7f0:	pushf  
  41b7f1:	mov    ch,0x7e
  41b7f3:	sub    DWORD PTR [eax+esi*2],esp
  41b7f6:	jmp    0x1a5a5d31
  41b7fb:	mov    edi,0xc414a908
  41b800:	stos   BYTE PTR es:[edi],al
  41b801:	jl     0x41b789
  41b803:	push   eax
  41b804:	test   DWORD PTR [eax-0x35eb0f5e],edx
  41b80a:	pop    ebp
  41b80b:	js     0x41b790
  41b80d:	ins    DWORD PTR es:[edi],dx
  41b80e:	or     BYTE PTR [edi],cl
  41b810:	fiadd  WORD PTR [edx+0x338ae523]
  41b816:	test   esp,edi
  41b818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b819:	rcl    DWORD PTR [ecx+0x54e32899],cl
  41b81f:	dec    ebp
  41b820:	sar    DWORD PTR [ecx+0x22],1
  41b823:	fdivr  QWORD PTR [eax+ebx*8+0x2299e48d]
  41b82a:	push   eax
  41b82b:	mov    ebx,DWORD PTR [ecx]
  41b82d:	fisttp WORD PTR [esi+0x7e]
  41b830:	cld    
  41b831:	and    ebp,DWORD PTR [edi+0x59]
  41b834:	push   esi
  41b835:	sbb    eax,edi
  41b837:	jmp    0x9d2a0366
  41b83c:	outs   dx,DWORD PTR ds:[esi]
  41b83d:	fistp  WORD PTR [esi+0x4]
  41b840:	push   edi
  41b841:	dec    ecx
  41b842:	retf   0x3e93
  41b845:	add    al,bl
  41b847:	out    dx,eax
  41b848:	and    al,0x53
  41b84a:	push   edi
  41b84b:	imul   eax,DWORD PTR [ecx-0x35],0xe3d15868
  41b852:	push   ebx
  41b853:	jmp    0xc26f0ed5
  41b858:	dec    edx
  41b859:	mov    bh,0xc2
  41b85b:	xchg   BYTE PTR [ecx-0x6d],cl
  41b85e:	scas   eax,DWORD PTR es:[edi]
  41b85f:	and    al,0xbe
  41b861:	jns    0x41b8b3
  41b863:	jg     0x41b87f
  41b865:	sub    BYTE PTR [ecx-0x59],ah
  41b868:	adc    DWORD PTR [edx-0x10c3cbf6],esi
  41b86e:	popa   
  41b86f:	iret   
  41b870:	and    esp,esi
  41b872:	jge    0x41b8f2
  41b874:	or     BYTE PTR [ebx+0x8119b1f],ch
  41b87a:	pushf  
  41b87b:	sbb    al,0xe4
  41b87d:	mov    esp,DWORD PTR [ecx-0x115f2b0a]
  41b883:	mov    ecx,0x662f0bb4
  41b888:	jmp    0xd8da385b
  41b88d:	icebp  
  41b88e:	cmp    DWORD PTR [ebx-0x3dc5cddd],edi
  41b894:	ss xchg esi,eax
  41b896:	dec    edi
  41b897:	xor    DWORD PTR [eax+0xf],edi
  41b89a:	jle    0x41b86a
  41b89c:	jecxz  0x41b905
  41b89e:	addr16 jae 0x41b86b
  41b8a1:	xchg   ebx,eax
  41b8a2:	jl     0x41b860
  41b8a4:	int    0x93
  41b8a6:	mov    ebx,0x83aa5273
  41b8ab:	push   ebp
  41b8ac:	pop    DWORD PTR [eax+0x43]
  41b8af:	pop    ds
  41b8b0:	stc    
  41b8b1:	xchg   ebx,eax
  41b8b2:	outs   dx,BYTE PTR ds:[esi]
  41b8b3:	pop    edi
  41b8b4:	mov    ebp,0xbf18c6f8
  41b8b9:	mov    dl,0x59
  41b8bb:	test   eax,0xfb29a3e3
  41b8c0:	mov    dh,0x69
  41b8c2:	add    DWORD PTR [esi],0xffffffc1
  41b8c5:	mov    cl,0xd2
  41b8c7:	jbe    0x41b92e
  41b8c9:	aas    
  41b8ca:	call   0xbe37cb52
  41b8cf:	dec    edi
  41b8d0:	cmc    
  41b8d1:	or     ecx,DWORD PTR [eax]
  41b8d3:	mov    eax,ds:0xb6333826
  41b8d8:	test   BYTE PTR [esi+0x3168edb8],ah
  41b8de:	mov    edi,0xa7c90d6c
  41b8e3:	adc    bl,BYTE PTR [eax-0x49]
  41b8e6:	mov    bl,0xe2
  41b8e8:	sub    esp,ecx
  41b8ea:	pop    es
  41b8eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8ec:	ds leave 
  41b8ee:	push   0xdd897eff
  41b8f3:	mov    dl,0x8f
  41b8f5:	cmp    eax,0xd1fc840f
  41b8fa:	mov    ds:0x9bd12eb0,eax
  41b8ff:	adc    ebp,DWORD PTR [ebx-0x32]
  41b902:	sub    DWORD PTR [ebp+0x70d6d75a],0x17a759d
  41b90c:	out    dx,eax
  41b90d:	xor    eax,0x26cd571d
  41b912:	xor    edx,DWORD PTR [ebx-0xd63d1a8]
  41b918:	iret   
  41b919:	aas    
  41b91a:	push   ebp
  41b91b:	clc    
  41b91c:	test   BYTE PTR [edi+0x5c],0x26
  41b920:	xor    al,0xb7
  41b922:	pop    ebx
  41b923:	sbb    ecx,DWORD PTR [ebp+0x37299b7d]
  41b929:	mov    edi,0xb594de9c
  41b92e:	fmul   QWORD PTR [edi+0x642e4ed1]
  41b934:	aaa    
  41b935:	xor    BYTE PTR [edx+eax*2+0x7bd39cf],dh
  41b93c:	es inc ebx
  41b93e:	and    eax,0x67a50fe9
  41b943:	lods   al,BYTE PTR ds:[esi]
  41b944:	add    DWORD PTR [ebx-0x72],0xfc7442e5
  41b94b:	arpl   WORD PTR [eax+0x1],bp
  41b94e:	push   0x48d37676
  41b953:	dec    ecx
  41b954:	addr16 js 0x41b992
  41b957:	outs   dx,DWORD PTR ds:[esi]
  41b958:	add    dl,BYTE PTR [edi]
  41b95a:	retf   0x2a48
  41b95d:	adc    al,BYTE PTR [eax+0x5d]
  41b960:	ror    BYTE PTR [ecx],1
  41b962:	xchg   BYTE PTR [edi+ebx*4],ch
  41b965:	loopne 0x41b9af
  41b967:	mov    ebp,0xb5a6c35d
  41b96c:	lahf   
  41b96d:	pop    ss
  41b96e:	(bad)  
  41b96f:	stos   DWORD PTR es:[di],eax
  41b971:	inc    edx
  41b972:	cs add eax,0x3201d604
  41b978:	gs pop edi
  41b97a:	adc    eax,0x91de20dd
  41b97f:	jns    0x41b986
  41b981:	sub    BYTE PTR [esi+0x2930e97e],dh
  41b987:	and    eax,0xa5aaa4a9
  41b98c:	cmp    eax,0x3ebb77b6
  41b991:	push   edx
  41b992:	vpsrld xmm0,xmm6,XMMWORD PTR [esi-0x58baa0d9]
  41b99a:	outs   dx,BYTE PTR ds:[esi]
  41b99b:	inc    esi
  41b99c:	push   eax
  41b99d:	stos   BYTE PTR es:[edi],al
  41b99e:	mov    edx,DWORD PTR ds:0xd96ffbd2
  41b9a4:	hlt    
  41b9a5:	pushf  
  41b9a6:	pop    edx
  41b9a7:	pop    ecx
  41b9a8:	push   0x50
  41b9aa:	aaa    
  41b9ab:	cwde   
  41b9ac:	jae    0x41ba0f
  41b9ae:	push   ss
  41b9af:	inc    esp
  41b9b0:	cmp    eax,0x83a07cb3
  41b9b5:	loop   0x41ba08
  41b9b7:	adc    edi,ecx
  41b9b9:	sub    BYTE PTR [edi+0x4bf80b5c],bl
  41b9bf:	imul   ecx,DWORD PTR [edx+esi*4+0x52bed255],0x64d6f7fb
  41b9ca:	xchg   edx,eax
  41b9cb:	push   eax
  41b9cc:	xchg   DWORD PTR [edx+ebp*8-0x2ad87abe],esp
  41b9d3:	add    BYTE PTR [eax],bh
  41b9d5:	into   
  41b9d6:	cmc    
  41b9d7:	inc    esp
  41b9d8:	int3   
  41b9d9:	cmp    eax,0xfadec6a7
  41b9de:	ret    
  41b9df:	pushf  
  41b9e0:	pop    ebx
  41b9e1:	pop    edx
  41b9e2:	out    0xeb,eax
  41b9e4:	pop    ebx
  41b9e5:	push   ebx
  41b9e6:	mov    al,0xce
  41b9e8:	push   esi
  41b9e9:	push   ds
  41b9ea:	scas   al,BYTE PTR es:[edi]
  41b9eb:	xor    DWORD PTR [eax],0x19923e2d
  41b9f1:	sbb    al,0xed
  41b9f3:	sahf   
  41b9f4:	mov    edi,DWORD PTR [ebx+0x59]
  41b9f7:	arpl   WORD PTR [edx],di
  41b9f9:	or     BYTE PTR [esi],0x98
  41b9fc:	sub    eax,0x2829011e
  41ba01:	or     al,0xb6
  41ba03:	pop    esp
  41ba04:	jne    0x41ba77
  41ba06:	(bad)  
  41ba08:	mov    al,ds:0x883a969c
  41ba0d:	xchg   edi,eax
  41ba0e:	test   eax,0x9dce03ed
  41ba13:	out    0x66,al
  41ba15:	inc    ebp
  41ba16:	in     eax,0xc1
  41ba18:	out    0xb1,al
  41ba1a:	outs   dx,DWORD PTR ds:[esi]
  41ba1b:	and    ch,BYTE PTR [edi-0x1ffe6483]
  41ba21:	adc    DWORD PTR [ebx],0xffffffe8
  41ba24:	or     al,cl
  41ba26:	push   ss
  41ba27:	int    0x3c
  41ba29:	or     DWORD PTR [ecx-0x24bb44fe],edi
  41ba2f:	fild   WORD PTR [esi]
  41ba31:	push   ebx
  41ba32:	lods   eax,DWORD PTR ds:[esi]
  41ba33:	pop    esi
  41ba34:	cld    
  41ba35:	jmp    0x41ba73
  41ba37:	xor    al,0x7a
  41ba39:	cmp    eax,0xdc92fd1b
  41ba3e:	mov    bl,0x14
  41ba40:	push   edx
  41ba41:	xchg   BYTE PTR [ebx],ch
  41ba43:	mov    ds:0x2d182afb,eax
  41ba48:	cwde   
  41ba49:	cmp    ah,al
  41ba4b:	sbb    DWORD PTR [ebx-0x281bad68],esi
  41ba51:	lods   al,BYTE PTR ds:[esi]
  41ba52:	dec    edi
  41ba53:	loop   0x41ba28
  41ba55:	mov    DWORD PTR [edx-0x2a8ec0c4],eax
  41ba5b:	jp     0x41ba75
  41ba5d:	jle    0x41ba1c
  41ba5f:	dec    ecx
  41ba60:	das    
  41ba61:	ja     0x41bada
  41ba63:	or     DWORD PTR [edx+0x50],0x9000e1a6
  41ba6a:	mov    al,ds:0x47793f1a
  41ba6f:	clc    
  41ba70:	jmp    0x41ba72
  41ba72:	or     DWORD PTR [esi-0x43235002],esp
  41ba78:	xchg   edx,eax
  41ba79:	inc    esp
  41ba7a:	mov    WORD PTR [ecx],?
  41ba7c:	arpl   WORD PTR [edx+0x59a08398],sp
  41ba82:	dec    ebx
  41ba83:	sbb    bl,BYTE PTR [esi+0x7d]
  41ba86:	xchg   DWORD PTR ds:0x5915b93a,edi
  41ba8c:	test   al,0x9e
  41ba8e:	sub    ebp,esp
  41ba90:	pop    edi
  41ba91:	pushf  
  41ba92:	mov    cl,0xb3
  41ba94:	mov    ah,0x8d
  41ba96:	inc    ebx
  41ba97:	sbb    DWORD PTR [esi],esp
  41ba99:	(bad)  
  41ba9a:	std    
  41ba9b:	(bad)  
  41ba9c:	mov    dh,0x2b
  41ba9e:	aas    
  41ba9f:	mov    ds:0x75af24fb,eax
  41baa4:	jne    0x41baaa
  41baa6:	sub    DWORD PTR [ebp+0x3a93f30f],edx
  41baac:	rcl    DWORD PTR ds:0x1814168b,0xf9
  41bab3:	ret    
  41bab4:	mov    fs,WORD PTR [ebx+0x76]
  41bab7:	sub    dh,ch
  41bab9:	iret   
  41baba:	lods   eax,DWORD PTR ds:[esi]
  41babb:	add    edx,DWORD PTR [ebp+0x170e165b]
  41bac1:	test   BYTE PTR [ebp-0x744781e5],bh
  41bac7:	sbb    DWORD PTR [edi],ebx
  41bac9:	xor    eax,0x792bc001
  41bace:	adc    ecx,DWORD PTR [esi+0x27a397cf]
  41bad4:	pop    ebp
  41bad5:	int3   
  41bad6:	fwait
  41bad7:	test   DWORD PTR [ebx+0x17],edi
  41bada:	dec    ebx
  41badb:	adc    DWORD PTR [ebx+0x5193566b],eax
  41bae1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bae2:	push   edi
  41bae3:	(bad)  
  41bae4:	mov    ds:0x971b7b9c,al
  41bae9:	sub    BYTE PTR [ebx-0x23],bh
  41baec:	ficomp WORD PTR [ebx]
  41baee:	and    eax,0xea679a78
  41baf3:	push   ebx
  41baf4:	sar    BYTE PTR [edi],1
  41baf6:	fwait
  41baf7:	jmp    0xc2b8:0xf9111f71
  41bafe:	in     eax,dx
  41baff:	inc    ecx
  41bb00:	inc    ebp
  41bb01:	jle    0x41bac4
  41bb03:	and    eax,0x8517fbe7
  41bb08:	add    eax,0xa4188d8d
  41bb0d:	adc    DWORD PTR [eax],eax
  41bb0f:	cwde   
  41bb10:	sbb    al,0xe6
  41bb12:	push   ds
  41bb13:	sub    BYTE PTR [esi],ch
  41bb15:	out    0x1,eax
  41bb17:	push   cs
  41bb18:	mov    BYTE PTR [esi],0xa0
  41bb1b:	cmp    DWORD PTR [eax],0xffffffcf
  41bb1e:	retf   
  41bb1f:	push   0xe8851df7
  41bb24:	bsr    ebx,DWORD PTR [esi+0x6dd0595d]
  41bb2b:	pop    ebp
  41bb2c:	mov    ch,0xf7
  41bb2e:	popf   
  41bb2f:	daa    
  41bb30:	shl    bl,0x2f
  41bb33:	push   ebx
  41bb34:	nop
  41bb35:	lods   al,BYTE PTR ds:[esi]
  41bb36:	sub    dh,BYTE PTR [esi-0x57ab6306]
  41bb3c:	push   ebx
  41bb3d:	popf   
  41bb3e:	sbb    eax,0xc5ac6be4
  41bb43:	outs   dx,DWORD PTR ds:[esi]
  41bb44:	mov    eax,0x381c2301
  41bb49:	or     ebx,DWORD PTR [ebx-0x6c]
  41bb4c:	shr    BYTE PTR [edx-0x44],1
  41bb4f:	push   cs
  41bb50:	(bad)  
  41bb51:	mov    ebx,DWORD PTR [edx+0x2e]
  41bb54:	es push es
  41bb56:	aam    0xf3
  41bb58:	stos   BYTE PTR es:[edi],al
  41bb59:	mov    edi,0xf1783e6f
  41bb5e:	mov    ch,0xe4
  41bb60:	cmc    
  41bb61:	mov    ecx,0xc663c6d0
  41bb66:	fistp  QWORD PTR [esi]
  41bb68:	mov    ch,BYTE PTR [ebp-0x5c]
  41bb6b:	data16 jns 0x41bbc9
  41bb6e:	ss js  0x41bb4a
  41bb71:	pop    esi
  41bb72:	cs push ebp
  41bb74:	leave  
  41bb75:	cmp    dh,ah
  41bb77:	add    al,0xe7
  41bb79:	push   edi
  41bb7a:	sub    esp,DWORD PTR [esi+0x3674f187]
  41bb80:	cld    
  41bb81:	mov    al,0xdd
  41bb83:	into   
  41bb84:	mov    esi,ecx
  41bb86:	aad    0x79
  41bb88:	into   
  41bb89:	mov    al,ds:0x747e6288
  41bb8e:	mov    ch,0x13
  41bb90:	push   es
  41bb91:	loope  0x41bb1f
  41bb93:	add    esp,DWORD PTR [esi]
  41bb95:	push   0x44048736
  41bb9a:	inc    ecx
  41bb9b:	clc    
  41bb9c:	xchg   ebx,eax
  41bb9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb9e:	mov    eax,0x5f75905
  41bba3:	retf   
  41bba4:	retf   0xbc7e
  41bba7:	(bad)  
  41bba8:	fsqrt  
  41bbaa:	outs   dx,BYTE PTR ds:[esi]
  41bbab:	jo     0x41bbcd
  41bbad:	mov    bl,0xc7
  41bbaf:	mov    dl,0x59
  41bbb1:	pop    esi
  41bbb2:	pushf  
  41bbb3:	mov    eax,0x3c1d626f
  41bbb8:	gs loope 0x41bb5c
  41bbbb:	addr16 hlt 
  41bbbd:	adc    al,0x6e
  41bbbf:	push   ebp
  41bbc0:	shl    DWORD PTR [edx+0xa],1
  41bbc3:	add    dl,BYTE PTR [ecx-0x32aca7ae]
  41bbc9:	pop    es
  41bbca:	inc    ebx
  41bbcb:	push   ss
  41bbcc:	add    BYTE PTR [ebx+0x6ae946c1],bl
  41bbd2:	dec    ebp
  41bbd3:	scas   al,BYTE PTR es:[edi]
  41bbd4:	mov    ebx,0x7d2b817d
  41bbd9:	xchg   esi,eax
  41bbda:	or     ecx,DWORD PTR [edi+0x7c]
  41bbdd:	mov    esp,0x20155e45
  41bbe2:	stos   BYTE PTR es:[edi],al
  41bbe3:	sub    bh,BYTE PTR [edx+0x29]
  41bbe6:	mov    bh,0xb1
  41bbe8:	sub    al,0x9e
  41bbea:	dec    ebx
  41bbeb:	lods   eax,DWORD PTR ds:[esi]
  41bbec:	mov    ebp,0x9dea0a5a
  41bbf1:	sub    eax,0x6a3d1f1e
  41bbf6:	mov    dl,0x68
  41bbf8:	push   0x24a2ab43
  41bbfd:	jp     0x41bc4a
  41bbff:	sub    al,0xc1
  41bc01:	fcmovb st,st(7)
  41bc03:	lea    ecx,[ebx-0x17fa464d]
  41bc09:	xchg   ebp,eax
  41bc0a:	lds    esp,FWORD PTR [edi+0x78]
  41bc0d:	mov    cl,dh
  41bc0f:	pop    ecx
  41bc10:	inc    esp
  41bc11:	or     DWORD PTR [eax+0x0],0x9d2bc4a
  41bc18:	sahf   
  41bc19:	cmc    
  41bc1a:	ja     0x41bc39
  41bc1c:	inc    edi
  41bc1d:	mov    ds:0xb76f857d,eax
  41bc22:	aad    0xa
  41bc24:	vshufps xmm7,xmm5,XMMWORD PTR [eax+0x2a7669f7],0xdc
  41bc2d:	cmp    edx,edx
  41bc2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc30:	lock sub al,0x92
  41bc33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc34:	pusha  
  41bc35:	or     cl,BYTE PTR [esi]
  41bc37:	(bad)  
  41bc38:	(bad)  
  41bc39:	es lock clc 
  41bc3c:	jnp    0x41bc5c
  41bc3e:	in     al,0xb0
  41bc40:	out    0xc0,al
  41bc42:	inc    edx
  41bc43:	xchg   esi,eax
  41bc44:	or     bh,al
  41bc46:	repz push ebp
  41bc48:	adc    esp,edi
  41bc4a:	add    eax,0xd694de37
  41bc4f:	loop   0x41bc12
  41bc51:	adc    BYTE PTR [ebp+edi*4-0x66],bl
  41bc55:	cmp    al,0x60
  41bc57:	pop    esp
  41bc58:	je     0x41bc71
  41bc5a:	and    DWORD PTR ds:0x8657f6cf,ecx
  41bc60:	push   ds
  41bc61:	xchg   esp,eax
  41bc62:	popf   
  41bc63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc64:	dec    ebx
  41bc65:	mov    ds,WORD PTR [ebx-0x4e]
  41bc68:	mov    eax,ds:0xcf18318
  41bc6d:	xchg   DWORD PTR [ecx+0x5f],ecx
  41bc70:	bound  ebx,QWORD PTR [ebp+0x4f]
  41bc73:	gs (bad) 
  41bc75:	push   esp
  41bc76:	sub    ch,BYTE PTR [eax-0x2c]
  41bc79:	and    BYTE PTR [esi],0xcc
  41bc7c:	in     eax,0x9f
  41bc7e:	pusha  
  41bc7f:	inc    esp
  41bc80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc81:	fucomp st(6)
  41bc83:	cmp    BYTE PTR [esi-0x2ff3eecf],0x3a
  41bc8a:	in     eax,dx
  41bc8b:	push   edx
  41bc8c:	adc    DWORD PTR [edi+eiz*4],esi
  41bc8f:	or     al,0x49
  41bc91:	jp     0x41bc3b
  41bc93:	je     0x41bc5d
  41bc95:	pop    ss
  41bc96:	adc    DWORD PTR [ebp+0x6884a17f],0x2
  41bc9d:	test   ebx,0xbded2698
  41bca3:	jmp    0x2661:0x49ab0bce
  41bcaa:	inc    esi
  41bcab:	cmp    al,0x4b
  41bcad:	sbb    al,0x34
  41bcaf:	xor    ch,BYTE PTR [edx]
  41bcb1:	aad    0x35
  41bcb3:	in     eax,0xdb
  41bcb5:	push   eax
  41bcb6:	pop    eax
  41bcb7:	pop    ebp
  41bcb8:	xor    ebp,0x7fb49b6c
  41bcbe:	xchg   esi,eax
  41bcbf:	repz mov eax,ds:0x7cfdf4e2
  41bcc5:	push   ds
  41bcc6:	sub    eax,0xd34265b2
  41bccb:	pop    esi
  41bccc:	xchg   edx,eax
  41bccd:	xchg   BYTE PTR [esi],dl
  41bccf:	xchg   edx,eax
  41bcd0:	add    eax,0x91bbb93c
  41bcd5:	xchg   DWORD PTR [ecx+0x14b5047e],edx
  41bcdb:	jl     0x41bc7c
  41bcdd:	(bad)  
  41bcde:	mov    ds:0x3ad9b11f,al
  41bce3:	or     eax,0xf4472ed2
  41bce8:	pop    esi
  41bce9:	pushf  
  41bcea:	test   BYTE PTR [eax+0x5a],cl
  41bced:	xor    eax,0xfc3f4d91
  41bcf2:	ficomp WORD PTR [ecx+0x4f]
  41bcf5:	daa    
  41bcf6:	pop    ebx
  41bcf7:	and    bl,BYTE PTR [esi-0x7f29a26f]
  41bcfd:	cli    
  41bcfe:	fistp  WORD PTR [eax-0x78]
  41bd01:	mov    ah,0x5d
  41bd03:	dec    ebx
  41bd04:	or     al,dl
  41bd06:	and    DWORD PTR [edx+0x31],edx
  41bd09:	imul   cl
  41bd0b:	jne    0x41bd62
  41bd0d:	mov    al,0x81
  41bd0f:	rcr    DWORD PTR [esi+esi*4],cl
  41bd12:	cld    
  41bd13:	mov    ds:0x1df2dd6,al
  41bd18:	xchg   edx,eax
  41bd19:	jecxz  0x41bce0
  41bd1b:	call   DWORD PTR [edx]
  41bd1d:	std    
  41bd1e:	mov    ds:0xa9a53b48,al
  41bd23:	cmp    ebx,ebp
  41bd25:	ret    
  41bd26:	push   ebp
  41bd27:	sub    al,0x3b
  41bd29:	adc    DWORD PTR [ecx],ecx
  41bd2b:	in     al,0xbe
  41bd2d:	cmp    eax,0x53745bb8
  41bd32:	dec    edi
  41bd33:	cli    
  41bd34:	dec    eax
  41bd35:	xchg   esp,eax
  41bd36:	(bad)  
  41bd37:	jnp    0x41bcef
  41bd39:	lods   eax,DWORD PTR ds:[esi]
  41bd3a:	xchg   edx,eax
  41bd3b:	fbstp  TBYTE PTR [esi]
  41bd3d:	mov    bh,0xcc
  41bd3f:	sbb    DWORD PTR [ebp-0x7cd8f3b6],ecx
  41bd45:	pop    ebp
  41bd46:	xor    eax,0x79351878
  41bd4b:	xchg   DWORD PTR [edx+0x21],esp
  41bd4e:	scas   eax,DWORD PTR es:[edi]
  41bd4f:	sahf   
  41bd50:	adc    edx,0x3
  41bd53:	repnz adc cl,bh
  41bd56:	mov    ds:0xa26b1cc7,eax
  41bd5b:	jno    0x41bdd1
  41bd5d:	bound  ebp,QWORD PTR [ecx]
  41bd5f:	sub    edx,0x1f86befc
  41bd65:	adc    BYTE PTR [ebp-0x5a],cl
  41bd68:	pcmpgtd mm5,QWORD PTR [ecx+0x54c64272]
  41bd6f:	mov    al,0x95
  41bd71:	mov    ebp,?
  41bd73:	jnp    0x41bd0a
  41bd75:	rcr    BYTE PTR ds:0x5777d0e0,cl
  41bd7b:	mov    ds,WORD PTR [eax+0xa854409]
  41bd81:	mov    bh,0xdd
  41bd83:	jmp    0x41bdf2
  41bd85:	std    
  41bd86:	nop
  41bd87:	mov    bl,0xeb
  41bd89:	(bad)  
  41bd8a:	cmp    al,0x91
  41bd8c:	aas    
  41bd8d:	(bad)  
  41bd8f:	sti    
  41bd90:	mov    bh,0xda
  41bd92:	cmp    al,0x56
  41bd94:	push   edi
  41bd95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd96:	push   edx
  41bd97:	outs   dx,BYTE PTR ds:[esi]
  41bd98:	and    DWORD PTR [ebp+0x22db9add],0x29
  41bd9f:	out    dx,al
  41bda0:	mov    ecx,esp
  41bda2:	dec    eax
  41bda3:	inc    ebp
  41bda4:	mov    bl,al
  41bda6:	sbb    BYTE PTR [ebp+0x11],dl
  41bda9:	xchg   edx,eax
  41bdaa:	dec    edx
  41bdab:	dec    esp
  41bdac:	in     al,dx
  41bdad:	(bad)  
  41bdae:	pop    ds
  41bdaf:	sub    DWORD PTR [esi-0x62],edx
  41bdb2:	ja     0x41be26
  41bdb4:	push   es
  41bdb5:	xchg   ebp,eax
  41bdb6:	xchg   ebp,eax
  41bdb7:	xor    bl,BYTE PTR [esi+0xc6f2bed]
  41bdbd:	neg    DWORD PTR [ecx]
  41bdbf:	push   edi
  41bdc0:	sbb    BYTE PTR [ebx-0x3f36160a],0x60
  41bdc7:	fucomi st,st(0)
  41bdc9:	daa    
  41bdca:	jge    0x41bdb2
  41bdcc:	pushf  
  41bdcd:	ss mov dh,0x82
  41bdd0:	cmp    edx,DWORD PTR [edx]
  41bdd2:	pop    eax
  41bdd3:	add    bl,BYTE PTR [esi]
  41bdd5:	in     al,0x41
  41bdd7:	pop    ds
  41bdd8:	dec    eax
  41bdd9:	push   ds
  41bdda:	cmp    al,BYTE PTR [ecx-0x34]
  41bddd:	ja     0x41be59
  41bddf:	push   ss
  41bde0:	mov    dh,0xa
  41bde2:	lahf   
  41bde3:	mov    eax,edi
  41bde5:	or     edx,DWORD PTR [ebx]
  41bde7:	je     0x41be02
  41bde9:	fisubr DWORD PTR [ebx+0x21]
  41bdec:	call   0x7a68093e
  41bdf1:	xor    ebx,DWORD PTR [edi]
  41bdf3:	scas   al,BYTE PTR es:[edi]
  41bdf4:	inc    edx
  41bdf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdf6:	cs nop
  41bdf8:	sub    al,0x67
  41bdfa:	test   BYTE PTR [ebp+esi*2-0x1],ah
  41bdfe:	cdq    
  41bdff:	jg     0x41be76
  41be01:	out    dx,al
  41be02:	sub    ebp,DWORD PTR [edi-0x16bdc9cb]
  41be08:	or     ah,BYTE PTR ds:0xe313e339
  41be0e:	stos   BYTE PTR es:[edi],al
  41be0f:	jno    0x41bdf2
  41be11:	rcl    DWORD PTR [eax],0xad
  41be14:	aam    0xc0
  41be16:	push   ss
  41be17:	inc    ebp
  41be18:	ds in  eax,0x2e
  41be1b:	xchg   BYTE PTR [ebx],dl
  41be1d:	loope  0x41be9a
  41be1f:	push   cs
  41be20:	fidivr DWORD PTR [eax]
  41be22:	stos   BYTE PTR es:[edi],al
  41be23:	cs pop edi
  41be25:	dec    ebx
  41be26:	mov    ecx,DWORD PTR cs:[eax+edi*8]
  41be2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be2b:	cmc    
  41be2c:	pop    edx
  41be2d:	mov    edi,0xdc45f24f
  41be32:	psrlq  mm3,QWORD PTR [edx]
  41be35:	xchg   esp,eax
  41be36:	mov    ebp,0x209d75c5
  41be3b:	mov    al,0xff
  41be3d:	push   0x9089b7d1
  41be42:	mov    al,0x4b
  41be44:	jp     0x41beb0
  41be46:	and    al,0xe1
  41be48:	int3   
  41be49:	enter  0x4361,0xf
  41be4d:	mov    ebx,DWORD PTR [ebp-0x1b]
  41be50:	mov    esi,0x20bf3400
  41be55:	mov    ch,0xc3
  41be57:	jmp    0xe0a71db3
  41be5c:	or     eax,0x2c4cedf4
  41be61:	and    eax,0xd3068999
  41be66:	cmp    DWORD PTR [eax-0x32],ecx
  41be69:	and    BYTE PTR [edx],dh
  41be6b:	mov    WORD PTR [edx-0x4483058d],es
  41be71:	inc    edi
  41be72:	into   
  41be73:	inc    ebp
  41be74:	test   DWORD PTR [edi+0x18368eeb],ebp
  41be7a:	dec    ecx
  41be7b:	mov    ecx,0x1e39c38
  41be80:	fwait
  41be81:	test   al,0xfe
  41be83:	jge    0x41bedd
  41be85:	xor    eax,0x2bc27d6d
  41be8a:	fisub  WORD PTR [esi+0x45]
  41be8d:	js     0x41be65
  41be8f:	mov    ds:0xec9afd55,al
  41be94:	add    BYTE PTR [eax],al
  41be96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be97:	sbb    DWORD PTR [edi+0x7],esp
  41be9a:	xchg   esi,eax
  41be9b:	xchg   esp,eax
  41be9c:	(bad)  [ebx-0x161e9309]
  41bea2:	imul   esp,DWORD PTR [edx+0x954a885],0x1a08990e
  41beac:	mov    eax,ds:0x370cd657
  41beb1:	pop    edi
  41beb2:	(bad)  
  41beb3:	jne    0x41beef
  41beb5:	in     al,dx
  41beb6:	sub    BYTE PTR [edi],dl
  41beb8:	jae    0x41bf2b
  41beba:	icebp  
  41bebb:	mov    ah,0x7e
  41bebd:	push   0xa2cf569a
  41bec2:	into   
  41bec3:	mov    al,ds:0xa79e5fa8
  41bec8:	xlat   BYTE PTR ds:[ebx]
  41bec9:	pop    eax
  41beca:	dec    edx
  41becb:	ja     0x41be90
  41becd:	les    ecx,FWORD PTR [ecx-0x20ab4b8e]
  41bed3:	fwait
  41bed4:	pop    ebp
  41bed6:	in     al,dx
  41bed7:	das    
  41bed8:	jp     0x41bf1f
  41beda:	pop    esp
  41bedb:	pop    edi
  41bedc:	dec    esi
  41bedd:	lea    edx,[eax-0x59f001bd]
  41bee3:	ss xchg edi,eax
  41bee5:	fwait
  41bee6:	sub    eax,0xa94ae74b
  41beeb:	xchg   ecx,eax
  41beec:	test   eax,0x2ef33d3f
  41bef1:	xlat   BYTE PTR ds:[ebx]
  41bef2:	in     al,dx
  41bef3:	aas    
  41bef4:	dec    ebp
  41bef5:	mov    ds:0x3b6d710e,al
  41befa:	outs   dx,DWORD PTR ds:[esi]
  41befb:	imul   eax,ebx,0xedc34ee
  41bf01:	add    al,0x64
  41bf03:	cmp    BYTE PTR [ebx+0xa89f18e],dl
  41bf09:	adc    eax,0x32bd7278
  41bf0e:	add    BYTE PTR [edx-0x6ac973d4],0xbe
  41bf15:	sub    ecx,DWORD PTR [esi+0x74]
  41bf18:	adc    DWORD PTR [ebp+0x3c],ecx
  41bf1b:	dec    esi
  41bf1c:	test   BYTE PTR [ecx+0x62],cl
  41bf1f:	imul   ebp,DWORD PTR [ecx+0x34d9336d],0xd72df262
  41bf29:	jne    0x41bf35
  41bf2b:	push   edx
  41bf2c:	in     eax,dx
  41bf2d:	add    BYTE PTR [edx],ch
  41bf2f:	(bad)  
  41bf30:	addr16 popf 
  41bf32:	cld    
  41bf33:	cmp    al,0x68
  41bf35:	arpl   WORD PTR [edi],bp
  41bf37:	jecxz  0x41bf2c
  41bf39:	call   0xfeb6:0x723e38dc
  41bf40:	pushf  
  41bf41:	popf   
  41bf42:	test   al,0xaf
  41bf44:	repz sub eax,0xf022a002
  41bf4a:	adc    eax,0xe46eb2ad
  41bf4f:	ret    0x649b
  41bf52:	sbb    eax,0x1bf41d99
  41bf57:	mov    eax,0x74cdcf3b
  41bf5c:	sbb    al,0xe
  41bf5e:	add    esi,DWORD PTR [edx+ecx*8]
  41bf61:	ja     0x41bfba
  41bf63:	dec    edi
  41bf64:	dec    edi
  41bf65:	into   
  41bf66:	mov    eax,ss:0x35f8b4d1
  41bf6c:	push   edx
  41bf6d:	jmp    0xcdba5148
  41bf72:	fwait
  41bf73:	jecxz  0x41bf53
  41bf75:	push   esi
  41bf76:	xlat   BYTE PTR ds:[ebx]
  41bf77:	dec    edx
  41bf78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf79:	xchg   BYTE PTR [edi-0x1313afa3],bh
  41bf7f:	ret    
  41bf80:	xchg   esi,eax
  41bf81:	inc    esp
  41bf82:	sub    eax,0x8c70865c
  41bf87:	cwde   
  41bf88:	out    dx,al
  41bf89:	cwde   
  41bf8a:	sub    BYTE PTR [eax],bl
  41bf8c:	cdq    
  41bf8d:	lods   eax,DWORD PTR ds:[esi]
  41bf8e:	mov    DWORD PTR [ecx-0x46],esp
  41bf91:	pop    ebx
  41bf92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf93:	add    ah,BYTE PTR [edx+0x42]
  41bf96:	stc    
  41bf97:	jle    0x41bfd8
  41bf99:	xchg   BYTE PTR [ecx+0x77],dh
  41bf9c:	call   0xf7c2:0x6626960e
  41bfa3:	ror    BYTE PTR [ebp+0x77],1
  41bfa6:	outs   dx,DWORD PTR ds:[esi]
  41bfa7:	(bad)  
  41bfa8:	ins    BYTE PTR es:[edi],dx
  41bfa9:	fild   QWORD PTR [esi]
  41bfab:	ror    BYTE PTR [ebx],0xed
  41bfae:	cmp    BYTE PTR gs:[esi-0x7370df83],ah
  41bfb5:	test   bl,ch
  41bfb7:	mov    ebp,0xafe2569b
  41bfbc:	je     0x41bf87
  41bfbe:	cli    
  41bfbf:	lahf   
  41bfc0:	rol    BYTE PTR [ebp-0x4e],1
  41bfc3:	cmc    
  41bfc4:	fs loopne 0x41bfc2
  41bfc7:	fcomp  st(5)
  41bfc9:	xchg   ecx,eax
  41bfca:	or     bl,BYTE PTR [eax]
  41bfcc:	or     BYTE PTR [ebp-0x64],dh
  41bfcf:	push   0x6e028167
  41bfd4:	mov    eax,ds:0x9b3168c0
  41bfd9:	xchg   edi,eax
  41bfda:	and    ah,BYTE PTR [ebx+0x2cb1e1a0]
  41bfe0:	jle    0x41bfb9
  41bfe2:	shr    esp,cl
  41bfe4:	mov    cl,0x74
  41bfe6:	ret    
  41bfe7:	call   0xea83:0xd5576046
  41bfee:	push   0x43
  41bff0:	lds    esp,FWORD PTR [eax+eiz*4]
  41bff3:	or     cl,BYTE PTR [esi+0x23293340]
  41bff9:	into   
  41bffa:	mov    BYTE PTR [edi-0x31],cl
  41bffd:	loope  0x41c075
  41bfff:	mov    dl,0x54
  41c001:	ret    0x1a3b
  41c004:	lea    edx,[ebx+0x35537011]
  41c00a:	ficom  WORD PTR [ebx+0x30]
  41c00d:	adc    al,0x7e
  41c00f:	jg     0x41c077
  41c011:	test   al,0xc2
  41c013:	and    edi,DWORD PTR [ebx+0x61aac4fe]
  41c019:	or     al,0x7
  41c01b:	jne    0x41c02b
  41c01d:	xchg   edx,eax
  41c01e:	(bad)  
  41c01f:	sar    BYTE PTR [esi-0x4e],1
  41c022:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c023:	or     ebx,DWORD PTR [edi]
  41c025:	push   edx
  41c026:	cmc    
  41c027:	jns    0x41bfd4
  41c029:	cdq    
  41c02a:	push   es
  41c02b:	in     eax,0x51
  41c02d:	push   edx
  41c02e:	les    ebp,FWORD PTR [edi]
  41c030:	out    dx,al
  41c031:	ins    DWORD PTR es:[edi],dx
  41c032:	and    al,0x92
  41c034:	cli    
  41c035:	xor    DWORD PTR [ecx],ecx
  41c037:	or     al,0xa7
  41c039:	adc    BYTE PTR [eax-0xa],dl
  41c03c:	test   bl,bl
  41c03e:	push   ss
  41c03f:	adc    al,0xc9
  41c041:	dec    ebx
  41c042:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41c044:	lahf   
  41c045:	mov    DWORD PTR [eax+esi*1+0x5a42172f],0x7b4aa810
  41c050:	lea    ebx,[edx]
  41c052:	int3   
  41c053:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c054:	not    BYTE PTR [edi]
  41c056:	test   DWORD PTR [edx+esi*8-0x573be678],edx
  41c05d:	ds jno 0x41c08f
  41c060:	clc    
  41c061:	repz leave 
  41c063:	fdivrp st(0),st
  41c065:	test   al,0x62
  41c067:	gs js  0x41bff2
  41c06a:	(bad)  
  41c06b:	add    eax,0x4cc993f8
  41c070:	xchg   ebx,eax
  41c071:	inc    ebx
  41c072:	mov    edi,DWORD PTR [edx-0x45bfa578]
  41c078:	rol    eax,1
  41c07a:	dec    cl
  41c07c:	adc    edi,DWORD PTR [ebx+0x69]
  41c07f:	xchg   BYTE PTR [eax-0x30],bh
  41c082:	cli    
  41c083:	repz push edx
  41c085:	test   BYTE PTR [esp+esi*8],dh
  41c088:	js     0x41c0c2
  41c08a:	inc    edx
  41c08b:	loopne 0x41c0f1
  41c08d:	inc    ecx
  41c08e:	sar    cl,0xc8
  41c091:	xchg   esp,eax
  41c092:	lock and edi,DWORD PTR [edi+0x63]
  41c096:	jns    0x41c10a
  41c098:	(bad)  
  41c099:	in     eax,dx
  41c09a:	sub    BYTE PTR [edi-0x2b],cl
  41c09d:	and    al,0x98
  41c09f:	gs out 0x73,eax
  41c0a2:	int    0x4
  41c0a4:	push   ebp
  41c0a5:	mov    al,ds:0x37029199
  41c0aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0ab:	(bad)  
  41c0ac:	jmp    0x41c12a
  41c0ae:	mov    eax,ds:0x482c4889
  41c0b3:	leave  
  41c0b4:	xchg   BYTE PTR [edi+0x4c6d048f],cl
  41c0ba:	repz int 0x53
  41c0bd:	pop    ss
  41c0be:	clc    
  41c0bf:	pop    ss
  41c0c0:	mov    dl,0xdc
  41c0c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0c3:	pop    ecx
  41c0c4:	nop
  41c0c5:	sti    
  41c0c6:	in     al,dx
  41c0c7:	add    bl,dl
  41c0c9:	arpl   dx,bp
  41c0cb:	jbe    0x41c0cd
  41c0cd:	pop    edx
  41c0ce:	sub    ebp,DWORD PTR [ecx]
  41c0d0:	or     al,ch
  41c0d2:	and    edi,DWORD PTR ss:[eax]
  41c0d5:	das    
  41c0d6:	add    BYTE PTR [eax],0xe
  41c0d9:	mov    DWORD PTR [ebx+0x61],ebp
  41c0dc:	mov    ds:0xbeebbba0,eax
  41c0e1:	or     edi,DWORD PTR [eax+0x339cabdb]
  41c0e7:	daa    
  41c0e8:	aaa    
  41c0e9:	inc    esi
  41c0ea:	aas    
  41c0eb:	xor    al,0xd
  41c0ed:	mov    ch,0xb
  41c0ef:	icebp  
  41c0f0:	mov    edi,0xc648381
  41c0f5:	adc    BYTE PTR [ebp-0x34],al
  41c0f8:	daa    
  41c0f9:	out    dx,al
  41c0fa:	rcr    BYTE PTR [ebp+0x11594a1f],0xe8
  41c101:	std    
  41c102:	mov    edx,0x3a194fa9
  41c107:	mov    ds:0xf7136275,eax
  41c10c:	mov    ds:0x8570d2b1,eax
  41c111:	or     ebp,ebx
  41c113:	sub    ah,BYTE PTR [eax+ebx*1+0x7a]
  41c117:	inc    edi
  41c118:	jl     0x41c142
  41c11a:	ds jb  0x41c0ba
  41c11d:	aaa    
  41c11e:	sti    
  41c11f:	push   cs
  41c120:	mov    WORD PTR [edx+ebp*1-0x6d34d0f5],?
  41c127:	scas   al,BYTE PTR es:[edi]
  41c128:	aad    0x7
  41c12a:	pop    edx
  41c12b:	loope  0x41c0b0
  41c12d:	bound  edi,QWORD PTR ds:0xa98a316a
  41c133:	into   
  41c134:	inc    edx
  41c135:	out    0xd6,eax
  41c137:	xor    cl,BYTE PTR [edx-0x46]
  41c13a:	mov    ecx,0x149a67d8
  41c13f:	out    0xa7,al
  41c141:	jns    0x41c143
  41c143:	lods   al,BYTE PTR ds:[esi]
  41c144:	cli    
  41c145:	adc    bl,BYTE PTR [ecx]
  41c147:	or     cl,BYTE PTR [esi-0x6719f0a1]
  41c14d:	(bad)  
  41c14e:	jmp    0x4d52:0x3bf0124d
  41c155:	cmp    eax,DWORD PTR [esi+0x15f8f5d3]
  41c15b:	scas   al,BYTE PTR es:[edi]
  41c15c:	in     al,dx
  41c15d:	sahf   
  41c15e:	stc    
  41c15f:	in     al,0xac
  41c161:	or     eax,edi
  41c163:	imul   edx
  41c165:	mov    eax,cs
  41c167:	shr    ch,0x93
  41c16a:	xchg   esi,eax
  41c16b:	cmp    ebp,DWORD PTR [ebx]
  41c16d:	xlat   BYTE PTR ds:[ebx]
  41c16e:	dec    esi
  41c16f:	xor    dh,BYTE PTR [edx+ecx*2+0x3b13e1bd]
  41c176:	jae    0x41c1ee
  41c178:	pop    ebp
  41c179:	in     eax,dx
  41c17a:	push   ss
  41c17b:	jb     0x41c14b
  41c17d:	inc    ebx
  41c17e:	mov    eax,ds:0x1cc09c38
  41c183:	lods   eax,DWORD PTR ds:[esi]
  41c184:	pop    edi
  41c185:	and    edx,ecx
  41c187:	push   ds
  41c188:	fist   WORD PTR [ecx-0x6db1c4c1]
  41c18e:	inc    edi
  41c18f:	cmp    eax,0xfbd04a81
  41c194:	jp     0x41c165
  41c196:	es paddsw mm6,mm3
  41c19a:	rcl    ah,1
  41c19c:	cld    
  41c19d:	jl     0x41c1d9
  41c19f:	sub    bh,al
  41c1a1:	xor    eax,0x2a90713a
  41c1a6:	clc    
  41c1a7:	mov    ds:0xc4a9ea89,eax
  41c1ac:	jo     0x41c21c
  41c1ae:	enter  0x798c,0x23
  41c1b2:	dec    edi
  41c1b3:	jmp    0xed6317c4
  41c1b8:	add    ebx,DWORD PTR [esi+0x1f0d4528]
  41c1be:	neg    BYTE PTR [ebp+0x6e8a9c28]
  41c1c4:	xor    BYTE PTR [ecx],dh
  41c1c6:	ja     0x41c21f
  41c1c8:	sub    BYTE PTR [esi+0xd],bh
  41c1cb:	pop    eax
  41c1cc:	lods   eax,DWORD PTR ds:[esi]
  41c1cd:	mov    esp,DWORD PTR [edx+ecx*2+0x2b658406]
  41c1d4:	adc    eax,eax
  41c1d6:	adc    eax,0xaffb0397
  41c1db:	xchg   esp,eax
  41c1dc:	cmp    BYTE PTR [ebx-0x7c],bh
  41c1df:	fisub  DWORD PTR [esi]
  41c1e1:	xchg   ebp,eax
  41c1e2:	adc    eax,0xaed4bbf8
  41c1e7:	(bad)  
  41c1e8:	sub    eax,0xaff1ffc2
  41c1ed:	fnstenv [ebp+0x7a]
  41c1f0:	jecxz  0x41c1f7
  41c1f2:	test   cl,cl
  41c1f4:	mov    ebp,0xec13a7cb
  41c1f9:	inc    ecx
  41c1fa:	or     ecx,ecx
  41c1fc:	push   esp
  41c1fd:	and    al,0x32
  41c1ff:	jo     0x41c1c2
  41c201:	xchg   ecx,eax
  41c202:	repz out dx,al
  41c204:	mov    cl,0x7a
  41c206:	aam    0x6f
  41c208:	push   eax
  41c209:	mov    esi,0xec1a1a5
  41c20e:	(bad)  
  41c210:	(bad)  
  41c211:	pop    edx
  41c212:	dec    edx
  41c213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c214:	in     eax,dx
  41c215:	mov    esi,0x5c74470e
  41c21a:	cmc    
  41c21b:	fist   WORD PTR [eax+0xc1c6a16]
  41c221:	sub    al,0xfe
  41c223:	icebp  
  41c224:	(bad)  
  41c225:	push   ss
  41c226:	push   edi
  41c227:	hlt    
  41c228:	pop    ebp
  41c229:	fisttp QWORD PTR [edi+0x6b9e1533]
  41c22f:	jo     0x41c279
  41c231:	push   eax
  41c232:	adc    DWORD PTR [edx+0x78afd64e],eax
  41c238:	mov    cl,0x99
  41c23a:	push   edx
  41c23b:	mov    bl,0xc9
  41c23d:	xor    DWORD PTR [esi],ebx
  41c23f:	loop   0x41c27d
  41c241:	push   esi
  41c242:	rol    ecx,cl
  41c244:	and    al,0x91
  41c246:	les    esi,FWORD PTR [ebp-0x45a00601]
  41c24c:	test   eax,0x8deffdab
  41c251:	lds    eax,FWORD PTR [ebx+0x642bbf91]
  41c257:	and    DWORD PTR [ecx],edx
  41c259:	fldcw  WORD PTR [edi]
  41c25b:	mov    WORD PTR [eax],ss
  41c25d:	mov    ebp,0x8288993e
  41c262:	mov    ecx,0x7e48b2c6
  41c267:	push   ebx
  41c268:	aad    0xb4
  41c26a:	cld    
  41c26b:	inc    esi
  41c26c:	dec    ebp
  41c26d:	inc    esp
  41c26e:	sub    bl,BYTE PTR [edi+esi*4]
  41c271:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c272:	fisub  DWORD PTR [eax+eax*4-0x42]
  41c276:	arpl   dx,bp
  41c278:	mov    edx,0x6a753b8e
  41c27d:	and    al,0x61
  41c27f:	jae    0x41c25c
  41c281:	jmp    0x41c2da
  41c283:	mov    ecx,0x2e33056b
  41c288:	fldcw  WORD PTR [eax+0x611b3b7d]
  41c28e:	repnz adc al,0x82
  41c291:	dec    edx
  41c292:	fist   WORD PTR [ebx]
  41c294:	add    eax,0xc2acff9f
  41c299:	mov    eax,DWORD PTR [ebp-0x2a]
  41c29c:	arpl   WORD PTR ds:0xda6c0156,cx
  41c2a2:	mov    ch,0x56
  41c2a4:	mov    ebx,0x12c23ffc
  41c2a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2aa:	dec    ecx
  41c2ab:	or     DWORD PTR [edx],edi
  41c2ad:	mov    eax,0x22154f2c
  41c2b2:	mov    esi,0x6acc89c6
  41c2b7:	cmp    dh,ah
  41c2b9:	xor    al,0xd8
  41c2bb:	push   ebp
  41c2bc:	test   DWORD PTR [ecx+0x593b3c96],ebx
  41c2c2:	adc    ecx,esi
  41c2c4:	push   eax
  41c2c5:	mov    bh,BYTE PTR [esi]
  41c2c7:	pushf  
  41c2c8:	add    edx,DWORD PTR [eax+0x3a]
  41c2cb:	in     al,0xb
  41c2cd:	pop    esi
  41c2ce:	loope  0x41c291
  41c2d0:	adc    al,0x75
  41c2d2:	sbb    ebx,DWORD PTR [ecx-0x12]
  41c2d5:	jns    0x41c2f1
  41c2d7:	inc    ebp
  41c2d8:	rcl    BYTE PTR [eax+ecx*8+0x44],cl
  41c2dc:	imul   dl
  41c2de:	mov    ss,ebx
  41c2e0:	icebp  
  41c2e1:	test   BYTE PTR [ecx+0x3ec067c0],dh
  41c2e7:	and    DWORD PTR [edi-0x1e066925],ebx
  41c2ed:	jns    0x41c327
  41c2ef:	pushf  
  41c2f0:	scas   eax,DWORD PTR es:[edi]
  41c2f1:	je     0x41c33b
  41c2f3:	(bad)  
  41c2f4:	adc    DWORD PTR ss:[eax-0x27],edi
  41c2f8:	dec    ebx
  41c2f9:	test   eax,0x7b26a828
  41c2fe:	or     BYTE PTR [edi-0x2d81deb6],dh
  41c304:	retf   0xe212
  41c307:	jl     0x41c30a
  41c309:	stos   DWORD PTR es:[edi],eax
  41c30a:	mov    bl,0x2a
  41c30c:	or     ebp,ecx
  41c30e:	mov    cs,WORD PTR [ecx+0x6c5ce60]
  41c314:	dec    ebp
  41c315:	dec    ebx
  41c316:	sbb    ecx,esi
  41c318:	mov    dl,BYTE PTR [ebp-0x71]
  41c31b:	sub    al,BYTE PTR [edx]
  41c31d:	bound  eax,QWORD PTR [esi]
  41c31f:	xor    eax,0xe38a54aa
  41c324:	dec    edi
  41c325:	(bad)  
  41c326:	jg     0x41c310
  41c328:	xchg   eax,esi
  41c32a:	sub    eax,0x2a567317
  41c32f:	and    BYTE PTR [esp+ebp*4-0x65d34b05],dl
  41c336:	lock xchg BYTE PTR [ecx-0x729b49e7],bh
  41c33d:	test   eax,0x7ac67783
  41c342:	shl    BYTE PTR [ecx+edx*8+0x6d87d7b4],1
  41c349:	add    DWORD PTR [esi+0x7071678],edx
  41c34f:	fbstp  TBYTE PTR [ebx+esi*1-0x17]
  41c353:	cmp    ebx,eax
  41c355:	jecxz  0x41c2e6
  41c357:	jns    0x41c368
  41c359:	push   edi
  41c35a:	push   ebp
  41c35b:	addr16 fwait
  41c35d:	push   0xffffff8f
  41c35f:	push   esp
  41c360:	xchg   BYTE PTR [edi-0x10],cl
  41c363:	mov    ds:0xb3146c70,al
  41c368:	adc    ah,BYTE PTR [ebp-0x17]
  41c36b:	inc    esp
  41c36c:	jne    0x41c3d8
  41c36e:	imul   edx,DWORD PTR [edx-0x39],0x42c7dce1
  41c375:	(bad)  
  41c376:	rcr    DWORD PTR ds:0xd5a673cd,1
  41c37c:	imul   esi,edx,0x696410e5
  41c382:	retf   0x62cf
  41c385:	add    eax,0x9b2d88e1
  41c38a:	add    al,BYTE PTR [eax-0xf]
  41c38d:	dec    esi
  41c38e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c38f:	add    DWORD PTR [bx+di-0x71],edi
  41c393:	js     0x41c323
  41c395:	sar    BYTE PTR [esi],0x92
  41c398:	mov    esi,0x3a310c6d
  41c39d:	shr    DWORD PTR [esi-0x56],0xaf
  41c3a1:	mov    WORD PTR [esi-0xf05ee76],es
  41c3a7:	mov    ch,0xcf
  41c3a9:	(bad)  
  41c3aa:	icebp  
  41c3ab:	ret    0xb766
  41c3ae:	cmp    BYTE PTR [esi+0x4afbe7fa],0xfa
  41c3b5:	es sti 
  41c3b7:	or     ch,bl
  41c3b9:	jecxz  0x41c3af
  41c3bb:	test   al,0xf0
  41c3bd:	icebp  
  41c3be:	and    BYTE PTR [edi+0x31],0x3f
  41c3c2:	xchg   esp,eax
  41c3c3:	and    al,BYTE PTR [ebp+0x7]
  41c3c6:	mov    DWORD PTR [ecx-0x7e66a4ee],ebp
  41c3cc:	and    eax,0x87c0097b
  41c3d1:	fnstenv [ecx-0x5c]
  41c3d4:	in     eax,dx
  41c3d5:	js     0x41c3bb
  41c3d7:	jp     0x41c369
  41c3d9:	and    eax,0x252181dd
  41c3de:	mov    ecx,0x46daebd7
  41c3e3:	rcr    BYTE PTR [edi],cl
  41c3e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3e6:	daa    
  41c3e7:	mov    ah,0xab
  41c3e9:	mov    eax,0xe223edd
  41c3ee:	test   DWORD PTR [esi+0x10f49a29],0x1e318023
  41c3f8:	push   0x32738902
  41c3fd:	outs   dx,BYTE PTR ds:[esi]
  41c3fe:	push   ebx
  41c3ff:	xchg   ebx,eax
  41c400:	cmc    
  41c401:	and    BYTE PTR [eax-0x512c5b94],bl
  41c407:	xchg   ebx,eax
  41c408:	mov    edx,0x66752877
  41c40d:	mov    ebx,0x74e6506e
  41c412:	and    esi,DWORD PTR [ebp+0xe]
  41c415:	test   eax,0x33319e47
  41c41a:	shl    DWORD PTR [edi],cl
  41c41c:	cwde   
  41c41d:	les    ecx,FWORD PTR [esi-0x3041f9af]
  41c423:	out    dx,al
  41c424:	jb     0x41c41f
  41c426:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c427:	adc    eax,0xfe1dbe31
  41c42c:	mov    edx,0x8c259e54
  41c431:	dec    esp
  41c432:	xchg   esi,eax
  41c433:	arpl   WORD PTR [eax-0x57],di
  41c436:	hlt    
  41c437:	sbb    eax,DWORD PTR [edi]
  41c439:	jo     0x41c45c
  41c43b:	dec    eax
  41c43c:	div    BYTE PTR [ecx-0x2481cf9f]
  41c442:	lock arpl WORD PTR [eax],sp
  41c445:	mov    edi,0xef717447
  41c44a:	test   BYTE PTR [ebx-0x8],ch
  41c44d:	cmp    eax,0x902bc6ca
  41c452:	enter  0x7e2b,0x62
  41c456:	add    dx,WORD PTR ds:0x8de16506
  41c45d:	sti    
  41c45e:	stc    
  41c45f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c460:	fwait
  41c461:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c462:	rcl    DWORD PTR [esi+0x72],0xe7
  41c466:	dec    edi
  41c467:	mov    ebx,0xe163b703
  41c46c:	mov    al,ds:0x8330e640
  41c471:	mov    ebp,0xd7bfed2e
  41c476:	scas   al,BYTE PTR es:[edi]
  41c477:	jmp    0xdb008c15
  41c47c:	mov    edx,0x4d539db0
  41c481:	mov    ds:0xa10f1abe,eax
  41c486:	inc    ebx
  41c487:	adc    cl,bl
  41c489:	jge    0x41c4c3
  41c48b:	fmul   DWORD PTR [edx]
  41c48d:	les    edx,FWORD PTR [ecx]
  41c48f:	inc    esi
  41c490:	mov    dl,0x64
  41c492:	xor    ebp,edx
  41c494:	outs   dx,DWORD PTR ds:[esi]
  41c495:	jp     0x41c506
  41c497:	mov    DWORD PTR [esi],0xe833af93
  41c49d:	xchg   BYTE PTR [ebx-0x380374b2],bh
  41c4a3:	leave  
  41c4a4:	cld    
  41c4a5:	daa    
  41c4a6:	rcr    ebp,cl
  41c4a8:	jbe    0x41c4f8
  41c4aa:	or     eax,0x3497070e
  41c4af:	pop    esi
  41c4b0:	xchg   ecx,eax
  41c4b1:	xchg   ebx,eax
  41c4b2:	cld    
  41c4b3:	xor    eax,0xa25e7f1f
  41c4b8:	aas    
  41c4b9:	outs   dx,BYTE PTR ds:[esi]
  41c4ba:	jmp    0x41c4b7
  41c4bc:	mov    ch,0xc6
  41c4be:	pop    eax
  41c4bf:	ret    
  41c4c0:	inc    ecx
  41c4c1:	pop    ebx
  41c4c2:	loop   0x41c48b
  41c4c4:	enter  0x33e,0x18
  41c4c8:	jle    0x41c490
  41c4ca:	xchg   edx,eax
  41c4cb:	sbb    al,0x7f
  41c4cd:	in     al,0xaf
  41c4cf:	xchg   ebp,eax
  41c4d0:	in     eax,0x37
  41c4d2:	call   0x940:0xf13f0297
  41c4d9:	inc    edx
  41c4da:	dec    edx
  41c4db:	inc    ebx
  41c4dc:	push   0x9e77156
  41c4e1:	dec    ecx
  41c4e2:	adc    DWORD PTR [edx],ebx
  41c4e4:	scas   eax,DWORD PTR es:[edi]
  41c4e5:	xchg   ebp,eax
  41c4e6:	jns    0x41c521
  41c4e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4e9:	icebp  
  41c4ea:	sub    dl,dh
  41c4ec:	pop    ecx
  41c4ed:	hlt    
  41c4ee:	cli    
  41c4ef:	or     eax,esi
  41c4f1:	js     0x41c4c0
  41c4f3:	lahf   
  41c4f4:	mov    esi,0x587e7dcf
  41c4f9:	xchg   ecx,eax
  41c4fa:	cmc    
  41c4fb:	sbb    ebx,DWORD PTR [edi]
  41c4fd:	repz mov ch,0x6f
  41c500:	sbb    DWORD PTR [ebx+ebx*1],esi
  41c503:	lea    ebx,[ecx+0x56067de9]
  41c509:	mov    ds:0xd83c76ee,eax
  41c50e:	out    0x9,al
  41c510:	or     al,0x57
  41c512:	sbb    al,0xa4
  41c514:	jle    0x41c4f8
  41c516:	inc    eax
  41c517:	xchg   ebx,eax
  41c518:	jmp    0x2bb:0xce1203b2
  41c51f:	add    esp,DWORD PTR [esi+eax*8]
  41c522:	xchg   edx,eax
  41c523:	fisttp DWORD PTR [ebx+eax*2-0x6625190]
  41c52a:	test   ebx,0xda7836b9
  41c530:	enter  0x3d59,0x1d
  41c534:	inc    ecx
  41c535:	push   edi
  41c536:	cmp    DWORD PTR [ebx-0x33],ebx
  41c539:	pop    edi
  41c53a:	sub    al,0x58
  41c53c:	pop    ebx
  41c53d:	cli    
  41c53e:	clc    
  41c53f:	outs   dx,BYTE PTR ds:[esi]
  41c540:	mov    DWORD PTR [edx+eax*4],esp
  41c543:	inc    esp
  41c544:	sti    
  41c545:	dec    ebx
  41c546:	repnz dec eax
  41c548:	lods   eax,DWORD PTR ss:[esi]
  41c54a:	loop   0x41c576
  41c54c:	lods   eax,DWORD PTR ds:[esi]
  41c54d:	xchg   edi,eax
  41c54e:	loope  0x41c583
  41c550:	and    al,0xcb
  41c552:	sbb    edi,ecx
  41c554:	jbe    0x41c5aa
  41c556:	lahf   
  41c557:	pusha  
  41c558:	sbb    eax,0x46bcacfa
  41c55d:	sub    esi,DWORD PTR [ebx-0x30]
  41c560:	mov    ecx,0xb926c156
  41c565:	ret    
  41c566:	fadd   QWORD PTR [edi+ecx*8]
  41c569:	inc    si
  41c56b:	call   0x1dde:0x60f69d29
  41c572:	ins    BYTE PTR es:[edi],dx
  41c573:	mov    esi,0x2ae489c0
  41c578:	cmp    ah,BYTE PTR [edx]
  41c57a:	int3   
  41c57b:	jmp    0x5c62e7bf
  41c580:	mul    DWORD PTR [edi+0x2]
  41c583:	sahf   
  41c584:	jmp    0x41c5eb
  41c586:	xor    al,0xa
  41c588:	dec    esp
  41c589:	inc    eax
  41c58a:	add    BYTE PTR [eax],cl
  41c58c:	mov    eax,0x10f06b08
  41c591:	inc    edi
  41c592:	pop    eax
  41c593:	outs   dx,DWORD PTR ds:[esi]
  41c594:	aad    0xa7
  41c596:	xchg   edi,eax
  41c597:	cmc    
  41c598:	repz and ebp,DWORD PTR [edx-0x58]
  41c59c:	loopne 0x41c592
  41c59e:	ret    
  41c59f:	out    dx,eax
  41c5a0:	adc    DWORD PTR [ecx+0x3a],edi
  41c5a3:	jbe    0x41c612
  41c5a5:	stc    
  41c5a6:	mov    DWORD PTR [ecx+ecx*1],esp
  41c5a9:	xchg   esi,eax
  41c5aa:	loop   0x41c5d6
  41c5ac:	jo     0x41c61a
  41c5ae:	push   edx
  41c5af:	mov    edx,0xe230fd1e
  41c5b4:	popf   
  41c5b5:	mov    ds:0xeb6fa66b,al
  41c5ba:	imul   ebp,DWORD PTR [edi],0x5a
  41c5bd:	and    esp,ecx
  41c5bf:	xor    bh,BYTE PTR ds:0x7c5ff99e
  41c5c5:	out    dx,al
  41c5c6:	inc    esi
  41c5c7:	mul    DWORD PTR [ecx]
  41c5c9:	pop    esp
  41c5ca:	js     0x41c5a3
  41c5cc:	lock adc eax,0xc6e3c7e5
  41c5d2:	jecxz  0x41c5f7
  41c5d4:	cmc    
  41c5d5:	dec    esi
  41c5d6:	mul    BYTE PTR [ebp-0x1c]
  41c5d9:	xor    DWORD PTR [edx],esi
  41c5db:	cs loop 0x41c5a3
  41c5de:	push   ss
  41c5df:	adc    al,0x7a
  41c5e1:	dec    edi
  41c5e2:	mov    ds:0x6d348765,eax
  41c5e7:	lds    esp,FWORD PTR [eax+edx*8]
  41c5ea:	or     eax,0x12cf4ed1
  41c5ef:	stc    
  41c5f0:	add    DWORD PTR [eax+ebx*4+0x2dcc848],ebx
  41c5f7:	xor    eax,0x61a8d0c
  41c5fc:	neg    DWORD PTR [ecx+0x2b]
  41c5ff:	mov    esi,0x94963211
  41c604:	jmp    0x41c615
  41c606:	mov    eax,ds:0x27c1bb71
  41c60b:	mov    ds:0xb7765139,eax
  41c610:	enter  0x75f5,0x39
  41c614:	and    al,0x39
  41c616:	jmp    FWORD PTR [edi]
  41c618:	fsub   DWORD PTR [edi-0x482ca888]
  41c61e:	retf   
  41c61f:	rcr    DWORD PTR [esi+0x41897b02],cl
  41c625:	inc    edi
  41c626:	pop    eax
  41c627:	jl     0x41c653
  41c629:	push   eax
  41c62a:	into   
  41c62b:	dec    edx
  41c62c:	inc    eax
  41c62d:	lds    ecx,FWORD PTR [esi+0x31]
  41c630:	push   ds
  41c631:	mov    dh,0xbb
  41c633:	or     esp,ebp
  41c635:	sbb    ah,BYTE PTR [eax]
  41c637:	push   cs
  41c638:	sbb    DWORD PTR [ebx],esi
  41c63a:	dec    ecx
  41c63b:	iret   
  41c63c:	push   0x48c5a7a6
  41c641:	inc    eax
  41c642:	adc    cl,BYTE PTR ds:0x1fe5681e
  41c648:	add    DWORD PTR [edx+0x73],esp
  41c64b:	add    BYTE PTR gs:[ecx],0x2d
  41c64f:	(bad)  
  41c650:	leave  
  41c651:	xchg   edx,eax
  41c652:	popa   
  41c653:	dec    ebp
  41c654:	popa   
  41c655:	test   DWORD PTR [ecx],ebx
  41c657:	test   DWORD PTR [edi+ebp*1],esp
  41c65a:	or     DWORD PTR [eax-0x1cfee70d],ecx
  41c660:	jmp    0x41c6ba
  41c662:	or     bl,cl
  41c664:	(bad)  
  41c665:	mov    ebx,0xde2f6b35
  41c66a:	adc    edx,DWORD PTR es:0xb9c8942f
  41c671:	test   eax,0xbf0acb82
  41c676:	fs ins DWORD PTR es:[edi],dx
  41c678:	dec    edx
  41c679:	dec    ebx
  41c67a:	cwde   
  41c67b:	mov    edi,0xa67f7ef7
  41c680:	push   0x75e1403a
  41c685:	or     al,0x18
  41c687:	push   ecx
  41c688:	repz ss bnd jmp 0x41c6bd
  41c68d:	mov    bl,0xa0
  41c68f:	push   ss
  41c690:	add    al,0xe9
  41c692:	mov    bh,0xf9
  41c694:	sbb    al,0xe2
  41c696:	cmova  edx,DWORD PTR [edi-0x30]
  41c69a:	call   0x4357:0xbb22e3ef
  41c6a1:	out    dx,eax
  41c6a2:	jmp    0xbd3f:0xc9286022
  41c6a9:	pop    ebx
  41c6aa:	jae    0x41c6f1
  41c6ac:	aad    0xe3
  41c6ae:	add    eax,DWORD PTR [edi]
  41c6b0:	iret   
  41c6b1:	out    dx,al
  41c6b2:	mov    edi,DWORD PTR [ebp-0x2fc5da9e]
  41c6b8:	mov    ch,0x18
  41c6ba:	and    al,0x29
  41c6bc:	pop    es
  41c6bd:	sti    
  41c6be:	push   ebx
  41c6bf:	pop    ecx
  41c6c0:	inc    esp
  41c6c1:	shl    bh,cl
  41c6c3:	cmp    DWORD PTR [edi+eiz*2],edx
  41c6c6:	fs mov ah,dh
  41c6c9:	int    0x84
  41c6cb:	in     eax,dx
  41c6cc:	dec    edi
  41c6cd:	xor    bl,BYTE PTR [ebp+0x2d60b343]
  41c6d3:	and    DWORD PTR [ebx+0x15],ecx
  41c6d6:	bound  esi,QWORD PTR [ebp-0x1c]
  41c6d9:	xor    al,0x3a
  41c6db:	into   
  41c6dc:	add    eax,DWORD PTR [edx-0xae046b1]
  41c6e2:	fwait
  41c6e3:	je     0x41c727
  41c6e5:	dec    esp
  41c6e6:	jb     0x41c763
  41c6e8:	aam    0x2d
  41c6ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6eb:	ds adc esp,ebx
  41c6ee:	ror    DWORD PTR [edx+0x3325e70d],0x3
  41c6f5:	retf   0x300a
  41c6f8:	mov    dh,0x2
  41c6fa:	pop    esp
  41c6fb:	xlat   BYTE PTR ds:[ebx]
  41c6fc:	jns    0x41c710
  41c6fe:	and    al,0xba
  41c700:	pop    edi
  41c701:	sub    edi,edx
  41c703:	je     0x41c6c8
  41c705:	ins    DWORD PTR es:[edi],dx
  41c706:	add    bl,BYTE PTR [eax+0x3301d28d]
  41c70c:	int    0x93
  41c70e:	pop    eax
  41c70f:	mov    al,0xb4
  41c711:	xor    esi,edi
  41c713:	cmp    DWORD PTR [eax],esp
  41c715:	push   0x1c9eec03
  41c71a:	push   ds
  41c71b:	ret    
  41c71c:	fsubr  DWORD PTR [edx-0x22]
  41c71f:	lahf   
  41c720:	jbe    0x41c725
  41c722:	(bad)  
  41c723:	pop    ds
  41c724:	pop    ebp
  41c725:	js     0x41c732
  41c727:	cmp    eax,0xe2f221d8
  41c72c:	fs popf 
  41c72e:	jmp    0xe6d0:0xee077e3e
  41c735:	call   0x274b:0xc16ce8b
  41c73c:	inc    ebp
  41c73d:	das    
  41c73e:	aaa    
  41c73f:	pop    eax
  41c740:	mov    eax,cs:0x41f43552
  41c746:	xchg   DWORD PTR [edi+0x33],ecx
  41c749:	sbb    BYTE PTR [edx+0x3e],bh
  41c74c:	dec    ebp
  41c74d:	sbb    ebx,esp
  41c74f:	push   esp
  41c750:	inc    ecx
  41c751:	sti    
  41c752:	add    eax,0x688c8bb2
  41c757:	xor    eax,0x651bf3d0
  41c75c:	jp     0x41c717
  41c75e:	adc    edi,edi
  41c760:	in     al,dx
  41c761:	data16 fistp WORD PTR ds:0x7176f2c0
  41c768:	cmp    al,0x80
  41c76a:	xor    eax,0xe791ab3b
  41c76f:	cmp    dl,bl
  41c771:	or     eax,DWORD PTR [edx-0x43]
  41c774:	jg     0x41c70a
  41c776:	pop    ebp
  41c777:	add    al,0xc4
  41c779:	aad    0xee
  41c77b:	pop    eax
  41c77c:	ret    
  41c77d:	fiadd  WORD PTR [eax-0x44]
  41c780:	bnd jmp 0x41c782
  41c783:	(bad)  
  41c785:	cli    
  41c786:	xor    eax,0x69b7a01f
  41c78b:	stc    
  41c78c:	mov    dh,dh
  41c78e:	and    ah,ah
  41c790:	xlat   BYTE PTR ds:[ebx]
  41c791:	cmp    DWORD PTR [ecx-0x36],ebp
  41c794:	ret    
  41c795:	fidivr DWORD PTR [esi-0x732bbf52]
  41c79b:	push   es
  41c79c:	imul   ebp,eax,0x32
  41c79f:	int3   
  41c7a0:	sub    cl,0x7c
  41c7a3:	inc    ebp
  41c7a4:	je     0x41c750
  41c7a6:	xchg   esi,eax
  41c7a7:	cdq    
  41c7a8:	jne    0x41c753
  41c7aa:	clc    
  41c7ab:	test   BYTE PTR [edi-0x2a],bh
  41c7ae:	and    bl,BYTE PTR [edx+0x1a]
  41c7b1:	sub    eax,0x2cb46add
  41c7b6:	adc    eax,0xff62c14b
  41c7bb:	cmp    bh,BYTE PTR [ebx-0xa]
  41c7be:	pop    esp
  41c7bf:	stc    
  41c7c0:	push   ebx
  41c7c1:	out    0x83,al
  41c7c3:	not    DWORD PTR [ebp+0x713a9a8a]
  41c7c9:	enter  0xbe33,0xd2
  41c7cd:	push   esi
  41c7ce:	mov    al,ds:0xffa8d214
  41c7d3:	inc    esi
  41c7d4:	ds pop es
  41c7d6:	jle    0x41c78a
  41c7d8:	(bad)  
  41c7d9:	hlt    
  41c7da:	mov    al,ds:0xf2f29967
  41c7df:	pop    ss
  41c7e0:	add    dh,cl
  41c7e2:	jnp    0x41c7df
  41c7e4:	mov    eax,ds:0xa0472975
  41c7e9:	ins    DWORD PTR es:[edi],dx
  41c7ea:	repnz scas eax,DWORD PTR es:[edi]
  41c7ec:	push   esi
  41c7ed:	add    eax,0x3e1b8f01
  41c7f2:	test   al,0x25
  41c7f4:	mov    edx,0xf5182835
  41c7f9:	xor    eax,0x4eb4f523
  41c7fe:	es out dx,al
  41c800:	xlat   BYTE PTR ds:[ebx]
  41c801:	xchg   ebx,eax
  41c802:	mov    ch,0xa9
  41c804:	xchg   edi,eax
  41c805:	fstp   st(7)
  41c807:	push   ds
  41c808:	in     al,dx
  41c809:	or     eax,0x11adc9ef
  41c80e:	fistp  WORD PTR [eax+0x26]
  41c811:	add    ebx,DWORD PTR [edx-0x40]
  41c814:	sub    al,0x4e
  41c816:	sub    eax,0xa8c68ee1
  41c81b:	fwait
  41c81c:	cwde   
  41c81d:	pop    esp
  41c81e:	push   edi
  41c81f:	aaa    
  41c820:	mov    ?,WORD PTR [ecx-0x1c]
  41c823:	arpl   WORD PTR ds:0xeef15add,si
  41c829:	aad    0x1a
  41c82b:	jmp    0xd871:0x9aca3a24
  41c832:	in     eax,0xb
  41c834:	sub    BYTE PTR [eax-0x3a],ah
  41c837:	jno    0x41c86a
  41c839:	mov    dl,0xa7
  41c83b:	mov    ds:0xa20ca980,eax
  41c840:	cli    
  41c841:	jl     0x41c834
  41c843:	mov    cs,WORD PTR [esi+0x60]
  41c846:	loopne 0x41c7c9
  41c848:	sub    BYTE PTR [edx],bh
  41c84a:	add    edi,DWORD PTR [esi]
  41c84c:	dec    ecx
  41c84d:	xor    DWORD PTR [edx+0x63],ebp
  41c850:	cld    
  41c851:	jno    0x41c882
  41c853:	std    
  41c854:	mov    ds:0xe4cbdeb7,al
  41c859:	retf   0xc7e7
  41c85c:	stc    
  41c85d:	cli    
  41c85e:	in     eax,dx
  41c85f:	cmp    dh,ch
  41c861:	mov    edi,0x7be68773
  41c866:	out    dx,eax
  41c867:	icebp  
  41c868:	nop
  41c869:	(bad)  
  41c86a:	mov    ecx,0x81091f5f
  41c86f:	mov    al,0x57
  41c871:	mov    ch,0x96
  41c873:	repz imul edi,DWORD PTR [edi-0x6a],0xffffff8b
  41c878:	loopne 0x41c8de
  41c87a:	push   0x8573b7c3
  41c87f:	(bad)  
  41c881:	call   0x6ad45e6a
  41c886:	adc    edx,ecx
  41c888:	in     eax,dx
  41c889:	arpl   WORD PTR ds:0x87e81ddb,dx
  41c88f:	mov    eax,0x63bfecf0
  41c894:	out    0xba,al
  41c896:	ins    DWORD PTR es:[edi],dx
  41c897:	mov    DWORD PTR [edx],edi
  41c899:	out    0x82,eax
  41c89b:	(bad)  
  41c89c:	clc    
  41c89d:	sbb    al,0x5
  41c89f:	xchg   ecx,eax
  41c8a0:	rol    DWORD PTR [ecx],1
  41c8a2:	sbb    BYTE PTR [ebx-0x61],al
  41c8a5:	icebp  
  41c8a6:	pop    edx
  41c8a7:	jne    0x41c8f8
  41c8a9:	cmp    BYTE PTR [ecx-0x22],bl
  41c8ac:	rcl    BYTE PTR [ecx-0x357e90c0],cl
  41c8b2:	pop    esi
  41c8b3:	pop    edi
  41c8b4:	inc    edi
  41c8b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8b6:	retf   0xdf1c
  41c8b9:	dec    BYTE PTR [esi+0x3b1ce389]
  41c8bf:	adc    al,0x1b
  41c8c1:	pop    esi
  41c8c2:	adc    ebp,esi
  41c8c4:	lahf   
  41c8c5:	out    dx,eax
  41c8c6:	cwde   
  41c8c7:	push   ss
  41c8c8:	jnp    0x41c8ad
  41c8ca:	out    0x5e,al
  41c8cc:	hlt    
  41c8cd:	sub    dh,dh
  41c8cf:	push   ds
  41c8d0:	addr16 dec edx
  41c8d2:	rcl    BYTE PTR [ebp-0x58be275b],0x8c
  41c8d9:	xor    ebx,DWORD PTR [edi]
  41c8db:	xchg   edx,eax
  41c8dc:	popa   
  41c8dd:	sbb    al,0xd1
  41c8df:	xchg   edx,eax
  41c8e0:	pop    ebx
  41c8e1:	xor    BYTE PTR [edi],0xe1
  41c8e4:	es jmp 0x41c95e
  41c8e7:	hlt    
  41c8e8:	cdq    
  41c8e9:	pop    ebp
  41c8ea:	std    
  41c8eb:	(bad)  
  41c8ec:	sub    DWORD PTR cs:[eax+ebx*2],ebp
  41c8f0:	sbb    eax,0x828c0fe
  41c8f5:	sbb    dh,ch
  41c8f7:	mov    eax,0x2b4c9562
  41c8fc:	out    dx,eax
  41c8fd:	lock dec ebp
  41c8ff:	jecxz  0x41c8fd
  41c901:	jb     0xbff67622
  41c907:	jbe    0x41c969
  41c909:	mov    ch,0xb2
  41c90b:	pop    edx
  41c90c:	and    ch,BYTE PTR [ebp+0x11]
  41c90f:	cmp    ebx,DWORD PTR [ecx+0x673c0d42]
  41c915:	pop    ecx
  41c916:	sti    
  41c917:	stc    
  41c918:	retf   
  41c919:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c91a:	push   edi
  41c91b:	fsubr  st(6),st
  41c91d:	in     al,dx
  41c91e:	(bad)  
  41c91f:	jmp    0x41c995
  41c921:	adc    esp,esp
  41c923:	add    ebp,DWORD PTR [edi+ebp*8-0x52]
  41c927:	shl    BYTE PTR [esp+eiz*2-0x43d2e09d],1
  41c92e:	push   es
  41c92f:	into   
  41c930:	sbb    DWORD PTR [edx],0xffffff80
  41c933:	dec    ebx
  41c934:	pop    edi
  41c935:	(bad)  
  41c936:	test   DWORD PTR [edx+0x5e],0x40b3023b
  41c93d:	add    eax,0xa120f453
  41c942:	jg     0x41c963
  41c944:	imul   ecx,DWORD PTR [eax-0x33c0259a],0xd8ed7052
  41c94e:	xor    eax,0xd626aa94
  41c953:	popa   
  41c954:	push   0x13
  41c956:	dec    ebx
  41c957:	adc    dl,BYTE PTR [ebx-0x80]
  41c95a:	fidiv  WORD PTR [ebx]
  41c95c:	out    dx,ax
  41c95e:	inc    eax
  41c95f:	mov    fs,WORD PTR [edi+0x15]
  41c962:	clc    
  41c963:	fild   QWORD PTR [esi+0x71651636]
  41c969:	sub    al,0x74
  41c96b:	mov    ebx,0x2fa8d59f
  41c970:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c971:	mov    cl,0x85
  41c973:	fiadd  DWORD PTR [ebx+0x1b7fc00c]
  41c979:	jne    0x41c9e7
  41c97b:	clc    
  41c97c:	sti    
  41c97d:	pmaxub mm3,mm2
  41c980:	out    0x44,eax
  41c982:	push   esp
  41c983:	pop    esi
  41c984:	push   edi
  41c985:	sbb    ah,BYTE PTR [ecx+edi*4+0x24a27ba0]
  41c98c:	jl     0x41c9ac
  41c98e:	jo     0x41c9d9
  41c990:	pop    ecx
  41c991:	inc    edx
  41c992:	jg     0x41c918
  41c994:	xchg   ebx,eax
  41c995:	mov    edx,0x1f16ecde
  41c99a:	(bad)  
  41c99b:	ds fwait
  41c99d:	add    ebx,edx
  41c99f:	ins    BYTE PTR es:[edi],dx
  41c9a0:	scas   eax,DWORD PTR es:[edi]
  41c9a1:	loope  0x41c9de
  41c9a3:	sbb    al,0xbe
  41c9a5:	xor    esi,DWORD PTR [ebx+0x6cf0fc81]
  41c9ab:	jb     0x41c9c7
  41c9ad:	push   0xbc7b7543
  41c9b2:	retf   0x283e
  41c9b5:	mov    eax,ds:0x15dbf0d2
  41c9ba:	pop    eax
  41c9bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9bc:	add    esp,DWORD PTR [esp+eax*1]
  41c9bf:	icebp  
  41c9c0:	fstp   st(3)
  41c9c2:	lods   eax,DWORD PTR ds:[esi]
  41c9c3:	lods   al,BYTE PTR ds:[esi]
  41c9c4:	scas   al,BYTE PTR es:[edi]
  41c9c5:	sub    al,0x6f
  41c9c7:	into   
  41c9c8:	mov    esp,0x58bbc82a
  41c9cd:	jg     0x41c969
  41c9cf:	or     DWORD PTR [edi],esi
  41c9d1:	scas   al,BYTE PTR es:[edi]
  41c9d2:	or     al,0xa8
  41c9d4:	cmp    esp,DWORD PTR [eax]
  41c9d6:	jbe    0x41ca09
  41c9d8:	sbb    edx,edi
  41c9da:	inc    ebx
  41c9db:	pop    esi
  41c9dc:	jl     0x41c98b
  41c9de:	mov    cl,0xb5
  41c9e0:	(bad)  
  41c9e1:	icebp  
  41c9e2:	jl     0x41c98a
  41c9e4:	shl    bl,cl
  41c9e6:	stos   DWORD PTR es:[edi],eax
  41c9e7:	pop    edi
  41c9e8:	dec    esi
  41c9e9:	sub    DWORD PTR [ecx-0x3a6e400d],0xfffffff9
  41c9f0:	jo     0x41c9a4
  41c9f2:	dec    edx
  41c9f3:	leave  
  41c9f4:	in     al,dx
  41c9f5:	lods   eax,DWORD PTR ds:[esi]
  41c9f6:	retw   
  41c9f8:	out    dx,al
  41c9f9:	pop    ebp
  41c9fa:	(bad)  
  41c9fb:	hlt    
  41c9fc:	mov    WORD PTR [esp+ebp*1+0x24],?
  41ca00:	xchg   ebp,esi
  41ca02:	call   0xd3c3e396
  41ca07:	fs sub edx,ebx
  41ca0a:	and    DWORD PTR [edi+0x300c49a1],ebp
  41ca10:	and    eax,DWORD PTR [ebx-0x2b]
  41ca13:	dec    esi
  41ca14:	(bad)  
  41ca15:	dec    esi
  41ca16:	retf   0xc755
  41ca19:	stos   BYTE PTR es:[edi],al
  41ca1a:	jle    0x41ca3e
  41ca1c:	mov    edx,DWORD PTR [esi+0x13]
  41ca1f:	and    al,0x36
  41ca21:	jge    0x41c9b3
  41ca23:	stc    
  41ca24:	inc    edx
  41ca25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca26:	aam    0x78
  41ca28:	mov    ebp,DWORD PTR [esi+edx*2]
  41ca2b:	fldenv [ebx+0x7b774b99]
  41ca31:	and    esi,DWORD PTR [esi]
  41ca33:	pop    ebp
  41ca34:	xchg   BYTE PTR [esp+ebx*1+0x78],bl
  41ca38:	sbb    al,0x25
  41ca3a:	sbb    esp,esp
  41ca3c:	lock bound edi,QWORD PTR [esi+0x22]
  41ca40:	xor    al,0xd7
  41ca42:	fist   WORD PTR [eax+0x11]
  41ca45:	sbb    eax,0x1f516902
  41ca4a:	(bad)  
  41ca4b:	in     eax,0x98
  41ca4d:	fld    QWORD PTR [ecx+ecx*4-0x3c]
  41ca51:	aas    
  41ca52:	and    BYTE PTR [ecx],al
  41ca54:	seto   BYTE PTR gs:[esi+0x72]
  41ca59:	lds    eax,FWORD PTR [ebx]
  41ca5b:	iret   
  41ca5c:	fs inc edi
  41ca5e:	add    BYTE PTR [ecx],dl
  41ca60:	fsub   st,st(6)
  41ca62:	mov    esi,0x219bfb8f
  41ca67:	ffree  st(4)
  41ca69:	dec    eax
  41ca6a:	hlt    
  41ca6b:	enter  0x4f7d,0x24
  41ca6f:	mov    edx,?
  41ca71:	loope  0x41ca31
  41ca73:	retf   
  41ca74:	push   esi
  41ca75:	xor    esi,DWORD PTR [edx+ecx*8-0x27b26ca2]
  41ca7c:	lds    esp,FWORD PTR [esi+0xd95e103]
  41ca82:	in     al,0x4
  41ca84:	cmp    eax,0x781eebdc
  41ca89:	scas   al,BYTE PTR es:[edi]
  41ca8a:	or     DWORD PTR [ecx+0x61914332],ebp
  41ca90:	adc    eax,0x8319919e
  41ca95:	adc    al,0xf6
  41ca97:	addr16 loope 0x41cae3
  41ca9a:	call   0x3840:0xdab0679f
  41caa1:	pop    eax
  41caa2:	je     0x41caf8
  41caa4:	call   0x49a305ed
  41caa9:	inc    esi
  41caaa:	fcmovb st,st(4)
  41caac:	cmc    
  41caad:	aam    0x39
  41caaf:	jo     0x41cb17
  41cab1:	popa   
  41cab2:	pop    ecx
  41cab3:	sub    BYTE PTR [edx],bl
  41cab5:	xchg   ecx,eax
  41cab6:	jg     0x41caab
  41cab8:	xchg   DWORD PTR [esi+esi*8+0x14149a17],edi
  41cabf:	dec    esi
  41cac0:	repnz repz retf 
  41cac3:	pop    esi
  41cac4:	add    bh,ch
  41cac6:	or     al,0x4b
  41cac8:	iret   
  41cac9:	popf   
  41caca:	pop    ebp
  41cacb:	lods   eax,DWORD PTR ds:[esi]
  41cacc:	ret    
  41cacd:	clc    
  41cace:	outs   dx,DWORD PTR ds:[esi]
  41cacf:	in     al,0x1b
  41cad1:	fmul   DWORD PTR [edx-0x6]
  41cad4:	call   0x55d0:0x85e2056d
  41cadb:	test   al,0xbe
  41cadd:	leave  
  41cade:	pushf  
  41cadf:	xor    BYTE PTR [edi-0x3768b680],cl
  41cae5:	js     0x41cb5e
  41cae7:	dec    edx
  41cae8:	aad    0x62
  41caea:	mov    ebx,0x73247003
  41caef:	int3   
  41caf0:	cmc    
  41caf1:	pop    edx
  41caf2:	adc    DWORD PTR [ecx-0x7f05cd1b],edi
  41caf8:	mov    edi,esi
  41cafa:	aad    0xdf
  41cafc:	mov    edx,0xea48790
  41cb01:	cmp    eax,0xd4814307
  41cb06:	mov    ecx,0xa7bd1aab
  41cb0b:	jge    0x41cab2
  41cb0d:	lock fiadd DWORD PTR [edi+0x11]
  41cb11:	dec    esp
  41cb12:	in     al,0xc3
  41cb14:	mov    edi,0x364db697
  41cb19:	(bad)  
  41cb1a:	jb     0x41caf0
  41cb1c:	mov    edi,0xe6985583
  41cb21:	mov    dl,0xd2
  41cb23:	imul   DWORD PTR [eax+eiz*1]
  41cb26:	lahf   
  41cb27:	xchg   esp,eax
  41cb28:	call   0x7ff3:0x67b2f4b0
  41cb2f:	xchg   esp,eax
  41cb30:	gs enter 0x76d2,0x4c
  41cb35:	push   edi
  41cb36:	dec    esi
  41cb37:	stos   BYTE PTR es:[edi],al
  41cb38:	push   esp
  41cb39:	std    
  41cb3a:	dec    edx
  41cb3b:	retf   
  41cb3c:	repz push esi
  41cb3e:	scas   al,BYTE PTR es:[edi]
  41cb3f:	mov    ds:0xb8290845,al
  41cb44:	outs   dx,BYTE PTR ds:[esi]
  41cb45:	je     0x41cac9
  41cb47:	(bad)  
  41cb48:	sar    BYTE PTR [ebx-0x40],0x93
  41cb4c:	xor    dl,cl
  41cb4e:	mov    ds:0xf13e3f57,eax
  41cb53:	(bad)  
  41cb54:	cli    
  41cb55:	scas   al,BYTE PTR es:[edi]
  41cb56:	lds    ebx,FWORD PTR ds:0xf161d203
  41cb5c:	mov    ebx,0x21a9d015
  41cb61:	and    dl,BYTE PTR [ebx+0x7b206e10]
  41cb67:	pop    ebx
  41cb68:	dec    esi
  41cb69:	inc    esp
  41cb6a:	ins    DWORD PTR es:[edi],dx
  41cb6b:	pop    ebp
  41cb6c:	jmp    0x2af8a081
  41cb71:	inc    ebx
  41cb72:	mov    esi,0x8fb2b0dd
  41cb77:	daa    
  41cb78:	adc    eax,0x7fdca279
  41cb7d:	sub    eax,0x29eea6fb
  41cb82:	jle    0x41cb04
  41cb84:	mov    ch,0xb3
  41cb86:	retf   
  41cb87:	ins    DWORD PTR es:[edi],dx
  41cb88:	fistp  DWORD PTR [ecx+0x33efbdb9]
  41cb8e:	in     eax,dx
  41cb8f:	or     BYTE PTR [ebx+0x59],0x27
  41cb93:	fldenv [ebp+0x22bba81b]
  41cb99:	jp     0x41cb4f
  41cb9b:	scas   eax,DWORD PTR es:[edi]
  41cb9c:	in     al,dx
  41cb9d:	cmp    bh,BYTE PTR ds:0x10ce17a3
  41cba3:	loope  0x41cbe2
  41cba5:	out    0xc2,al
  41cba7:	(bad)  
  41cba9:	js     0x41cb85
  41cbab:	mov    ecx,0xb27903f0
  41cbb0:	dec    esp
  41cbb1:	jnp    0x41cba8
  41cbb3:	lods   al,BYTE PTR ds:[esi]
  41cbb4:	test   al,0x99
  41cbb6:	ret    0xf8c4
  41cbb9:	(bad)  
  41cbba:	xor    al,0x55
  41cbbc:	cld    
  41cbbd:	dec    edx
  41cbbe:	lock add al,0xf4
  41cbc1:	test   al,0xce
  41cbc3:	sub    al,0x5
  41cbc5:	mov    dh,0x23
  41cbc7:	scas   eax,DWORD PTR es:[edi]
  41cbc8:	cmp    eax,0x46918dd2
  41cbcd:	sub    eax,0x924bf46
  41cbd2:	add    eax,0x55d37237
  41cbd7:	and    edx,0xa0df1765
  41cbdd:	jl     0x41cc10
  41cbdf:	jo     0x41cb79
  41cbe1:	push   esi
  41cbe2:	ret    
  41cbe3:	add    al,0x5b
  41cbe5:	js     0x41cb78
  41cbe7:	push   esi
  41cbe8:	cwde   
  41cbe9:	lea    esi,[edi-0x6da39b86]
  41cbef:	int    0xbf
  41cbf1:	nop
  41cbf2:	xor    al,0xda
  41cbf4:	xor    ah,BYTE PTR [eax]
  41cbf6:	shl    esp,1
  41cbf8:	jge    0x41cc4e
  41cbfa:	mov    eax,ds:0x81154b95
  41cbff:	pop    ss
  41cc00:	dec    eax
  41cc01:	fidiv  WORD PTR [ebp-0x6c30ae1f]
  41cc07:	stc    
  41cc08:	sbb    edx,DWORD PTR [esi-0x7]
  41cc0b:	jg     0x41cb96
  41cc0d:	test   eax,0x94fc296a
  41cc12:	mov    DWORD PTR [edi],ebp
  41cc14:	and    al,ah
  41cc16:	fst    QWORD PTR [esi+ebx*4+0x79]
  41cc1a:	retf   
  41cc1b:	dec    ebx
  41cc1c:	push   ss
  41cc1d:	jmp    0x41cba4
  41cc1f:	xchg   esi,eax
  41cc20:	cmp    al,0xd3
  41cc22:	int    0xf3
  41cc24:	mov    DWORD PTR [ebp-0x4c],ecx
  41cc27:	aam    0x9
  41cc29:	in     eax,dx
  41cc2a:	popa   
  41cc2b:	and    BYTE PTR [ebp-0x69],0xdc
  41cc2f:	push   ds
  41cc30:	call   0xa9b7:0x22d8a60e
  41cc37:	sahf   
  41cc38:	and    esp,DWORD PTR [esi*4-0x3f00556b]
  41cc3f:	test   eax,0xb52ac10d
  41cc44:	shl    DWORD PTR [eax-0x21],cl
  41cc47:	(bad)  
  41cc48:	fs dec edx
  41cc4a:	sub    BYTE PTR [ebx+0x6a],0x76
  41cc4e:	fwait
  41cc4f:	sbb    ah,BYTE PTR [edx+0x3d]
  41cc52:	and    dh,BYTE PTR [esi+0x5f52cff7]
  41cc58:	xchg   edx,eax
  41cc59:	ins    BYTE PTR es:[edi],dx
  41cc5a:	inc    ebp
  41cc5b:	push   es
  41cc5c:	sub    al,0x74
  41cc5e:	(bad)  [edi+esi*2]
  41cc61:	mov    ecx,0x2a796bcd
  41cc66:	push   ebp
  41cc67:	scas   al,BYTE PTR es:[edi]
  41cc68:	dec    edx
  41cc69:	(bad)  
  41cc6a:	das    
  41cc6b:	pop    eax
  41cc6c:	adc    ch,bh
  41cc6e:	sub    al,0x2f
  41cc70:	sbb    esp,DWORD PTR [eax-0xff9a80]
  41cc76:	push   ebp
  41cc77:	adc    ebx,DWORD PTR [ebx-0x67b56211]
  41cc7d:	loop   0x41ccf9
  41cc7f:	aaa    
  41cc80:	iret   
  41cc81:	push   cs
  41cc82:	xchg   ebx,eax
  41cc83:	nop
  41cc84:	cmc    
  41cc85:	shl    BYTE PTR [edx-0x56],cl
  41cc88:	aas    
  41cc89:	mov    ah,0x89
  41cc8b:	pop    edi
  41cc8c:	inc    edx
  41cc8d:	push   esp
  41cc8e:	mov    dh,0x75
  41cc90:	xchg   esi,eax
  41cc91:	ds cli 
  41cc93:	fucomp st(7)
  41cc95:	push   ebx
  41cc96:	push   ss
  41cc97:	jne    0x41cc50
  41cc99:	add    BYTE PTR [ecx],0x77
  41cc9c:	push   ebx
  41cc9d:	rol    BYTE PTR [ebx],0x31
  41cca0:	mov    DWORD PTR [eax-0x1f831917],eax
  41cca6:	int3   
  41cca7:	push   eax
  41cca8:	ja     0x41cca7
  41ccaa:	sub    edx,DWORD PTR [ebx+0x21]
  41ccad:	popf   
  41ccae:	or     BYTE PTR [ebx],0x7f
  41ccb1:	cmp    edx,DWORD PTR [edx-0x5b]
  41ccb4:	outs   dx,DWORD PTR ds:[esi]
  41ccb5:	loope  0x41cccf
  41ccb7:	xor    eax,0x639be9d2
  41ccbc:	mov    eax,0xa9dddbd0
  41ccc1:	shl    BYTE PTR [eax+0x7e861c92],cl
  41ccc7:	mov    dl,0x23
  41ccc9:	(bad)  
  41ccca:	cwde   
  41cccb:	ud2    
  41cccd:	(bad)  
  41ccce:	ss dec ebp
  41ccd0:	or     dl,BYTE PTR [esi+0x1]
  41ccd3:	adc    ebx,DWORD PTR [esi+ecx*8+0x44]
  41ccd7:	sbb    BYTE PTR [esi-0x3],bh
  41ccda:	clc    
  41ccdb:	or     al,0x43
  41ccdd:	in     eax,0x21
  41ccdf:	dec    ecx
  41cce0:	into   
  41cce1:	jnp    0x41cd3f
  41cce3:	cmp    BYTE PTR gs:[ebx+0x30fbaa09],cl
  41ccea:	xchg   ecx,eax
  41cceb:	mov    ecx,0xdac331d7
  41ccf0:	mov    esi,ebp
  41ccf2:	retf   0x6b12
  41ccf5:	popf   
  41ccf6:	jl     0x41cca8
  41ccf8:	dec    esp
  41ccf9:	fdivp  st(1),st
  41ccfb:	or     bl,BYTE PTR [edi]
  41ccfd:	aad    0x8d
  41ccff:	xchg   BYTE PTR [edi],al
  41cd01:	dec    eax
  41cd02:	jb     0x41cc9e
  41cd04:	call   DWORD PTR [ebx-0x1c315495]
  41cd0a:	repnz stos BYTE PTR es:[edi],al
  41cd0c:	(bad)  
  41cd0d:	cmp    ebx,ebp
  41cd0f:	and    edx,eax
  41cd11:	cmp    bh,bl
  41cd13:	fs iret 
  41cd15:	out    dx,al
  41cd16:	test   al,0xe8
  41cd18:	sbb    al,0xd5
  41cd1a:	xchg   edi,ebp
  41cd1c:	xchg   esp,eax
  41cd1d:	inc    ebx
  41cd1e:	jmp    0x4d2e9bf0
  41cd23:	sahf   
  41cd24:	mov    WORD PTR [eax+0x6bf0093a],fs
  41cd2a:	loop   0x41cd7c
  41cd2c:	mov    dh,0xfc
  41cd2e:	pop    esi
  41cd2f:	fdiv   DWORD PTR [ebx-0x42]
  41cd32:	sti    
  41cd33:	push   es
  41cd34:	lds    edx,FWORD PTR [ebx]
  41cd36:	in     eax,0xa2
  41cd38:	js     0x41ccd0
  41cd3a:	in     eax,0x3d
  41cd3c:	pop    esi
  41cd3d:	inc    edx
  41cd3e:	xor    BYTE PTR [ecx],0x25
  41cd41:	push   eax
  41cd42:	sub    ebx,ebx
  41cd44:	jnp    0x41cdad
  41cd46:	mov    ds,WORD PTR [edx]
  41cd48:	(bad)  
  41cd49:	leave  
  41cd4a:	xchg   edx,eax
  41cd4b:	sbb    eax,0xcc4cac4
  41cd50:	(bad)  
  41cd51:	sbb    bh,BYTE PTR [edx-0x49]
  41cd54:	sub    ebp,edi
  41cd56:	outs   dx,BYTE PTR ds:[esi]
  41cd57:	cwde   
  41cd58:	int3   
  41cd59:	ror    bl,cl
  41cd5b:	jl     0x41cce6
  41cd5d:	push   esi
  41cd5e:	xchg   ecx,eax
  41cd5f:	dec    edx
  41cd60:	out    0x10,al
  41cd62:	test   al,0xd3
  41cd64:	adc    al,0x4
  41cd66:	test   DWORD PTR [ebx+edx*2+0x34],esp
  41cd6a:	fs (bad) 
  41cd6c:	mov    esp,0x17814fc
  41cd71:	xchg   esi,eax
  41cd72:	push   ebx
  41cd73:	leave  
  41cd74:	retf   
  41cd75:	pop    ebx
  41cd76:	mov    eax,DWORD PTR [esi]
  41cd78:	scas   eax,DWORD PTR es:[edi]
  41cd79:	loope  0x41cd9d
  41cd7b:	in     eax,0xa8
  41cd7d:	sahf   
  41cd7e:	rol    DWORD PTR [ebp-0x56cfae88],cl
  41cd84:	cli    
  41cd85:	xor    eax,0x5ec1d05d
  41cd8a:	mov    edx,0x31dbc424
  41cd8f:	mov    esp,0x7c6415c8
  41cd94:	ss into 
  41cd96:	pop    ds
  41cd97:	ins    BYTE PTR es:[edi],dx
  41cd98:	add    BYTE PTR [ebx],ch
  41cd9a:	popa   
  41cd9b:	icebp  
  41cd9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd9d:	inc    ebx
  41cd9e:	inc    eax
  41cd9f:	popa   
  41cda0:	shr    BYTE PTR [edi-0x4c],1
  41cda3:	pop    ecx
  41cda4:	mov    esp,0x67328edc
  41cda9:	iret   
  41cdaa:	and    eax,0x979d6c48
  41cdaf:	jmp    0x860d:0xd2bc9de1
  41cdb6:	xor    ch,BYTE PTR ds:0x67857c88
  41cdbc:	adc    DWORD PTR [ebx+esi*4+0x3d8e3f44],ebp
  41cdc3:	push   ebx
  41cdc4:	pop    edx
  41cdc5:	pop    ebp
  41cdc6:	into   
  41cdc7:	pop    ds
  41cdc8:	xchg   esp,eax
  41cdc9:	bound  ebp,QWORD PTR [ebx-0x40310f2e]
  41cdcf:	fist   WORD PTR [eax]
  41cdd1:	jp     0x41cd70
  41cdd3:	push   ds
  41cdd4:	cmp    DWORD PTR [edx-0x46],edx
  41cdd7:	sbb    BYTE PTR [edx+eiz*1+0x40c211cc],al
  41cdde:	and    edx,ecx
  41cde0:	jmp    0x41ce56
  41cde2:	(bad)  [ebp+0x49]
  41cde5:	mov    dl,0xb
  41cde7:	xor    al,0xc8
  41cde9:	xor    BYTE PTR [esp+edi*1+0x6bb90916],cl
  41cdf0:	loopne 0x41cde9
  41cdf2:	xchg   esp,eax
  41cdf3:	xchg   esp,eax
  41cdf4:	xor    BYTE PTR ds:0x458282ec,bl
  41cdfa:	jmp    0x41cd7e
  41cdfc:	push   ebp
  41cdfd:	mov    DWORD PTR [ecx],0xece7edf7
  41ce03:	data16 jae 0x41ce50
  41ce06:	push   0xffffffd0
  41ce08:	sbb    al,0xa6
  41ce0a:	or     edi,ebx
  41ce0c:	inc    esp
  41ce0d:	mov    ecx,0x4f3880e6
  41ce12:	cmp    esi,ebx
  41ce14:	les    eax,FWORD PTR [edx]
  41ce16:	stos   BYTE PTR es:[edi],al
  41ce17:	rol    BYTE PTR [edx-0x9],cl
  41ce1a:	in     al,dx
  41ce1b:	rol    bl,1
  41ce1d:	mov    eax,edx
  41ce1f:	cli    
  41ce20:	sahf   
  41ce21:	scas   al,BYTE PTR es:[edi]
  41ce22:	lea    ebp,[ebx+0xc86b1ec]
  41ce28:	jecxz  0x41cdcb
  41ce2a:	mov    dh,ah
  41ce2c:	dec    ebx
  41ce2d:	or     BYTE PTR [ebx],cl
  41ce2f:	pop    eax
  41ce30:	dec    esi
  41ce31:	out    dx,eax
  41ce32:	dec    esi
  41ce33:	ret    
  41ce34:	data16 sti 
  41ce36:	pop    ebx
  41ce37:	or     BYTE PTR [edx],bh
  41ce39:	sbb    al,0xf5
  41ce3b:	pop    eax
  41ce3c:	aaa    
  41ce3d:	repnz sub BYTE PTR [eax],bl
  41ce40:	inc    esp
  41ce41:	rol    ch,1
  41ce43:	call   0x62c1263e
  41ce48:	push   edx
  41ce49:	and    eax,0xac6ed198
  41ce4e:	je     0x41cea2
  41ce50:	imul   esi,eax,0xf7b7ce6c
  41ce56:	in     eax,dx
  41ce57:	leave  
  41ce58:	jecxz  0x41ce37
  41ce5a:	jp     0x41ce05
  41ce5c:	enter  0x3a68,0x71
  41ce60:	repnz sbb ecx,DWORD PTR [ecx-0x1909733e]
  41ce67:	(bad)  
  41ce68:	outs   dx,DWORD PTR ds:[esi]
  41ce69:	or     ebp,esi
  41ce6b:	imul   ecx,DWORD PTR [ebx-0x6e],0xffffff87
  41ce6f:	xor    eax,0x817c8c01
  41ce74:	mov    edx,0xd1394335
  41ce79:	(bad)  [eax+0x41]
  41ce7c:	sbb    ecx,DWORD PTR [edx-0x497fea4d]
  41ce82:	jmp    0x2f40:0x65b56575
  41ce89:	add    esp,DWORD PTR [ecx+0x4d]
  41ce8c:	pop    ebp
  41ce8d:	fidivr WORD PTR [eax+0x46d15407]
  41ce93:	int    0x9e
  41ce95:	sbb    al,ah
  41ce97:	mov    ds:0x6158c250,al
  41ce9c:	mov    DWORD PTR [ebp-0x1e82fda9],esp
  41cea2:	frstor [edx-0x7cbdabdb]
  41cea8:	in     al,0x63
  41ceaa:	shr    DWORD PTR [edi-0x73],1
  41cead:	mov    bh,0x18
  41ceaf:	mov    DWORD PTR [esi+0x76],ecx
  41ceb2:	int3   
  41ceb3:	and    al,0xaf
  41ceb5:	fsubr  DWORD PTR [edi+0x37998e0d]
  41cebb:	add    eax,0xeefd1fcc
  41cec0:	int3   
  41cec1:	(bad)  
  41cec2:	repz into 
  41cec4:	and    eax,0xd7e34a54
  41cec9:	sub    DWORD PTR [edi-0x75],0xfebceec8
  41ced0:	mov    esi,0xab85cf81
  41ced5:	jae    0x41cf53
  41ced7:	inc    edi
  41ced8:	add    al,0x7d
  41ceda:	cmp    al,0xa2
  41cedc:	call   0x1aa2:0xdd2018c7
  41cee3:	cwde   
  41cee4:	sub    al,0xdc
  41cee6:	xor    al,0x24
  41cee8:	into   
  41cee9:	and    cl,BYTE PTR [ecx+0x3f40ae09]
  41ceef:	clc    
  41cef0:	popa   
  41cef1:	sub    eax,0x6b6ba5d
  41cef6:	mov    ss,WORD PTR [ebx+0x7]
  41cef9:	retf   0x3f8d
  41cefc:	mov    ch,0xd7
  41cefe:	and    dh,dh
  41cf00:	bswap  esi
  41cf02:	and    DWORD PTR [edx],edx
  41cf04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf05:	push   edx
  41cf06:	rol    DWORD PTR [eax-0x16],cl
  41cf09:	mov    ebp,0x5c4c60a4
  41cf0e:	inc    ebp
  41cf0f:	mov    ebx,0x6778a70f
  41cf14:	ss scas al,BYTE PTR es:[edi]
  41cf16:	fst    QWORD PTR [eax]
  41cf18:	xchg   BYTE PTR [eax-0x7423f7df],ch
  41cf1e:	or     DWORD PTR [esi],esp
  41cf20:	push   edi
  41cf21:	or     eax,0xe0e27e8e
  41cf26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf27:	lds    edi,FWORD PTR [eax]
  41cf29:	sahf   
  41cf2a:	pop    ebx
  41cf2b:	mov    ecx,0xcf62e004
  41cf30:	sti    
  41cf31:	rol    DWORD PTR [ebx],1
  41cf33:	sub    edi,esp
  41cf35:	fnstenv [ebp-0x5804b7d7]
  41cf3b:	or     BYTE PTR [ebp+0x3a],al
  41cf3e:	adc    BYTE PTR [edi+0x79],bh
  41cf41:	xlat   BYTE PTR ds:[ebx]
  41cf42:	lock cmp esp,esp
  41cf45:	mov    ebx,0x85f93c51
  41cf4a:	dec    esp
  41cf4b:	sub    eax,0x67ccd4fc
  41cf50:	mov    ?,ebx
  41cf52:	mov    dh,0x21
  41cf54:	mov    al,0x13
  41cf56:	dec    ebx
  41cf57:	jbe    0x41cfb0
  41cf59:	inc    eax
  41cf5a:	mov    ch,0x3c
  41cf5c:	pop    ds
  41cf5d:	das    
  41cf5e:	mov    ds:0x38590580,al
  41cf63:	cmp    eax,0xe5d0e76
  41cf68:	loope  0x41cf48
  41cf6a:	fcomp  DWORD PTR [ecx+0x62]
  41cf6d:	mov    eax,ds:0x24a2f30f
  41cf72:	pop    ebp
  41cf73:	stc    
  41cf74:	stos   DWORD PTR es:[edi],eax
  41cf75:	scas   al,BYTE PTR es:[edi]
  41cf76:	adc    BYTE PTR [ecx-0x7a],al
  41cf79:	mov    al,0x30
  41cf7b:	(bad)  
  41cf7c:	mov    esp,0x256a2c79
  41cf81:	(bad)  
  41cf82:	fs call 0x5cd7:0x1893b41
  41cf8a:	push   es
  41cf8b:	test   eax,0x71c5503b
  41cf90:	inc    ebp
  41cf91:	push   ds
  41cf92:	dec    edi
  41cf93:	outs   dx,BYTE PTR ds:[esi]
  41cf94:	into   
  41cf95:	xchg   edi,eax
  41cf96:	lea    ebx,[eax+0x3a]
  41cf99:	jmp    0x41cfe3
  41cf9b:	cmp    al,0xf0
  41cf9d:	xor    al,0x1f
  41cf9f:	mov    gs,WORD PTR [ebp-0x5be1cf0]
  41cfa5:	pop    edi
  41cfa6:	scas   al,BYTE PTR es:[edi]
  41cfa7:	shr    DWORD PTR [esi+0x6a],0x92
  41cfab:	lea    ebp,[ecx+eiz*8+0x77bda29f]
  41cfb2:	jo     0x41cf69
  41cfb4:	gs xor al,0x46
  41cfb7:	loop   0x41cfc0
  41cfb9:	inc    esp
  41cfba:	dec    eax
  41cfbb:	add    al,0x2a
  41cfbe:	sbb    bh,BYTE PTR [edx+ecx*8-0x7056198a]
  41cfc5:	sub    eax,0x89914ff6
  41cfca:	mov    dh,dh
  41cfcc:	xor    al,0x81
  41cfce:	xchg   ebx,eax
  41cfcf:	jle    0x41cfe6
  41cfd1:	and    al,0xc2
  41cfd3:	(bad)  
  41cfd4:	fabs   
  41cfd6:	loope  0x41cfce
  41cfd8:	adc    esi,edi
  41cfda:	aaa    
  41cfdb:	repnz sub ebp,esi
  41cfde:	hlt    
  41cfdf:	xor    al,BYTE PTR [ebp+0x7148262b]
  41cfe5:	xor    ecx,ecx
  41cfe7:	scas   eax,DWORD PTR es:[edi]
  41cfe8:	cdq    
  41cfe9:	mov    ds:0x6ce03f0f,al
  41cfee:	loope  0x41cfac
  41cff0:	into   
  41cff1:	into   
  41cff2:	pop    esp
  41cff3:	xor    ecx,DWORD PTR [ebx]
  41cff5:	mov    ah,0xc2
  41cff7:	in     al,0x1
  41cff9:	cmp    BYTE PTR [ebp-0x72d633b2],0x52
  41d000:	out    dx,al
  41d001:	imul   BYTE PTR [esi-0xa5636a4]
  41d007:	mov    ds:0x1586e52e,eax
  41d00c:	push   es
  41d00d:	daa    
  41d00e:	xor    al,0x5b
  41d010:	sbb    edx,DWORD PTR [esi]
  41d012:	sahf   
  41d013:	popf   
  41d014:	or     ebx,ebx
  41d016:	cmc    
  41d017:	sbb    ebp,DWORD PTR [edi]
  41d019:	or     cl,BYTE PTR [eax+ebp*1-0x53]
  41d01d:	jns    0x41d04f
  41d01f:	scas   eax,DWORD PTR es:[edi]
  41d020:	jb     0x41cfd5
  41d022:	adc    eax,0x4ebeaea2
  41d027:	das    
  41d028:	add    ch,BYTE PTR [esi]
  41d02a:	adc    DWORD PTR [edi+0x1a9a4182],ebx
  41d030:	(bad)
  41d036:	test   BYTE PTR [eax+0x5192454b],dl
  41d03c:	not    BYTE PTR [ecx-0x3c]
  41d03f:	push   ds
  41d040:	sub    DWORD PTR [edx+0x602761bf],ecx
  41d046:	je     0x41d031
  41d048:	jmp    0x3412d252
  41d04d:	sbb    BYTE PTR [edi-0x39],ch
  41d050:	sbb    BYTE PTR [ebx-0x48f19feb],bh
  41d056:	popf   
  41d057:	inc    ebx
  41d058:	out    0x8d,eax
  41d05a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d05b:	mov    ch,0x59
  41d05d:	cmp    bl,BYTE PTR [ebp+0x1bb39301]
  41d063:	pop    edi
  41d064:	js     0x41d06a
  41d066:	mov    esi,0xd2cc11a1
  41d06b:	cld    
  41d06c:	stos   BYTE PTR es:[edi],al
  41d06d:	and    eax,DWORD PTR [ebp-0x70]
  41d070:	imul   esp,DWORD PTR [edi],0xc4167a0e
  41d076:	mov    al,0x7f
  41d078:	(bad)  
  41d079:	pop    esi
  41d07a:	xor    DWORD PTR gs:[eax+0x373f9fe9],0x3d
  41d082:	pop    ebx
  41d083:	mov    bl,0x5b
  41d085:	adc    cl,dh
  41d087:	popa   
  41d088:	lea    ecx,[eax+0x77]
  41d08b:	pop    eax
  41d08c:	lds    edx,FWORD PTR gs:0x13173b
  41d093:	sti    
  41d094:	inc    eax
  41d095:	jmp    WORD PTR [eax]
  41d098:	ror    edi,1
  41d09a:	jle    0x41d0d0
  41d09c:	and    ebp,DWORD PTR [ecx]
  41d09e:	mov    ds:0x7955179f,eax
  41d0a3:	call   0x479e:0x6aafdfe
  41d0aa:	(bad)  
  41d0ac:	xlat   BYTE PTR ds:[ebx]
  41d0ad:	fucomip st,st(0)
  41d0af:	es or  al,0xcb
  41d0b2:	sbb    BYTE PTR [edx+0x66c3984c],dh
  41d0b8:	in     eax,dx
  41d0b9:	rol    ebx,cl
  41d0bb:	loopne 0x41d06a
  41d0bd:	adc    DWORD PTR [eax-0x53],0x60
  41d0c1:	retf   0xeca2
  41d0c4:	pop    esp
  41d0c5:	ins    BYTE PTR es:[edi],dx
  41d0c6:	xchg   edx,eax
  41d0c7:	mov    ecx,0xc693ce09
  41d0cc:	pop    esi
  41d0cd:	lahf   
  41d0ce:	jg     0x41d0ee
  41d0d0:	repz cld 
  41d0d2:	pop    ebp
  41d0d3:	mul    BYTE PTR [ecx+0x76]
  41d0d6:	repz cmp DWORD PTR [ecx+0x56e344c3],ebp
  41d0dd:	shl    DWORD PTR fs:[ecx+0x74b260d5],1
  41d0e4:	fistp  QWORD PTR [esi+eax*1-0x36]
  41d0e8:	test   BYTE PTR [eax+0x23814f75],dh
  41d0ee:	xor    BYTE PTR [edi+0x3cb48e82],bh
  41d0f4:	push   es
  41d0f5:	jle    0x41d118
  41d0f7:	inc    ebx
  41d0f8:	jecxz  0x41d101
  41d0fa:	loope  0x41d144
  41d0fc:	enter  0xe98a,0x31
  41d100:	push   edi
  41d101:	ret    
  41d102:	loop   0x41d0f3
  41d104:	adc    DWORD PTR ds:0x94af5ae2,edi
  41d10a:	out    dx,eax
  41d10b:	cld    
  41d10c:	shl    ebp,cl
  41d10e:	inc    ecx
  41d10f:	fsubr  DWORD PTR [ebx+0xceefdac]
  41d115:	fcom   DWORD PTR [esi-0x11f80fc0]
  41d11b:	mov    bl,0x3
  41d11d:	sub    eax,0x46f1538f
  41d122:	xchg   ah,ch
  41d124:	test   DWORD PTR [edi-0x2b59b78],ebx
  41d12a:	pop    esp
  41d12b:	scas   eax,DWORD PTR es:[edi]
  41d12c:	loopne 0x41d0c8
  41d12e:	and    al,0x84
  41d130:	mov    esi,0xca20bb57
  41d135:	dec    ebp
  41d136:	adc    DWORD PTR [ecx-0x15e3de79],ecx
  41d13c:	out    dx,eax
  41d13d:	inc    ecx
  41d13e:	jb     0x41d0d8
  41d140:	sub    BYTE PTR [ebx+0x3f],dh
  41d143:	sar    BYTE PTR [edx-0x3e972dbd],cl
  41d149:	push   esi
  41d14a:	xchg   DWORD PTR [edi+0x57],ebx
  41d14d:	jmp    0x770ed206
  41d152:	push   edx
  41d153:	mov    ebp,0xeacab63e
  41d158:	inc    ebx
  41d159:	sbb    dl,ah
  41d15b:	out    dx,eax
  41d15c:	jg     0x41d1ba
  41d15e:	mov    ecx,0x46b51985
  41d163:	push   esp
  41d164:	outs   dx,DWORD PTR ds:[esi]
  41d165:	hlt    
  41d166:	inc    eax
  41d167:	mov    eax,ds:0x524f6e13
  41d16c:	lods   eax,DWORD PTR ds:[esi]
  41d16d:	jno    0x41d1c4
  41d16f:	fld    DWORD PTR [ecx]
  41d171:	icebp  
  41d172:	in     eax,dx
  41d173:	cmp    eax,0xd149fc8c
  41d178:	out    dx,al
  41d179:	jg     0x41d1b0
  41d17b:	add    al,BYTE PTR [edx+0x7f]
  41d17e:	and    eax,0x3eaedc67
  41d183:	sbb    eax,0x3da6d04c
  41d188:	push   ebp
  41d189:	mov    bl,ch
  41d18b:	stc    
  41d18c:	add    BYTE PTR [edi],ch
  41d18e:	sti    
  41d18f:	mov    ebx,0x8720ca3d
  41d194:	sbb    BYTE PTR ds:0x7c1a6eca,bl
  41d19a:	ftst   
  41d19c:	mov    BYTE PTR [esi-0x2cdd751e],cl
  41d1a2:	jmp    0x41d204
  41d1a4:	aas    
  41d1a5:	int    0x5c
  41d1a7:	aas    
  41d1a8:	sbb    BYTE PTR [esi+0xb],cl
  41d1ab:	out    0xd5,eax
  41d1ad:	pushf  
  41d1ae:	aam    0xac
  41d1b0:	or     bh,dl
  41d1b2:	sbb    esi,0x50d206e0
  41d1b8:	mov    ds:0x89d9b023,al
  41d1bd:	pop    ds
  41d1be:	in     al,dx
  41d1bf:	pop    esi
  41d1c0:	jge    0x41d1d2
  41d1c2:	nop
  41d1c3:	imul   ecx,DWORD PTR [edx],0xbb2fb034
  41d1c9:	retf   0x27da
  41d1cc:	fadd   DWORD PTR [edx]
  41d1ce:	lods   al,BYTE PTR ds:[esi]
  41d1cf:	outs   dx,BYTE PTR ds:[esi]
  41d1d0:	lahf   
  41d1d1:	mov    ds:0x98d852ee,eax
  41d1d6:	cs push ebp
  41d1d8:	and    al,0xf4
  41d1da:	test   eax,0x451bae37
  41d1df:	dec    ebp
  41d1e0:	xchg   edx,eax
  41d1e1:	sub    al,0x7f
  41d1e3:	sub    DWORD PTR [edi],esi
  41d1e5:	sar    DWORD PTR [ebp+0x54],cl
  41d1e8:	je     0x41d198
  41d1ea:	add    edx,edi
  41d1ec:	jbe    0x41d1ec
  41d1ee:	inc    edx
  41d1ef:	cli    
  41d1f0:	push   0x4ab54fa9
  41d1f5:	cld    
  41d1f6:	push   esp
  41d1f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1f8:	mov    edx,0xf1b852f6
  41d1fd:	not    DWORD PTR [edi]
  41d1ff:	adc    esi,edx
  41d201:	cwde   
  41d202:	out    dx,eax
  41d203:	xchg   ebp,eax
  41d204:	inc    edi
  41d205:	dec    eax
  41d206:	and    dh,0x6f
  41d209:	mov    bl,0x44
  41d20b:	mov    ecx,0x8aade3a7
  41d210:	add    eax,0xd2d42299
  41d215:	cdq    
  41d216:	jae    0x41d1f6
  41d218:	inc    eax
  41d219:	scas   al,BYTE PTR es:[edi]
  41d21a:	inc    edi
  41d21b:	mov    dh,0x31
  41d21d:	jno    0x41d1a3
  41d21f:	add    cl,BYTE PTR [esi]
  41d221:	push   es
  41d222:	fwait
  41d223:	or     DWORD PTR [eax],ebp
  41d225:	or     DWORD PTR ds:0xd36d4777,ebp
  41d22b:	mov    ds:0x42a165c6,eax
  41d230:	pushf  
  41d231:	cmp    esp,DWORD PTR [ecx+edx*8+0x6b]
  41d235:	xchg   al,al
  41d237:	mov    cl,BYTE PTR [ebp+eax*8-0x569e91be]
  41d23e:	scas   al,BYTE PTR es:[edi]
  41d23f:	fwait
  41d240:	aam    0x6c
  41d242:	out    dx,al
  41d243:	mov    ds:0x52fdd1dc,eax
  41d248:	ror    DWORD PTR [ecx],1
  41d24a:	xor    eax,0x91acfa75
  41d24f:	xor    DWORD PTR [edx+0x330eba44],esi
  41d255:	jbe    0x41d22c
  41d257:	inc    eax
  41d258:	sub    DWORD PTR [edi],ebx
  41d25a:	push   0x1a8a5a
  41d25f:	dec    edx
  41d260:	adc    bl,BYTE PTR [ebp+0x36]
  41d263:	mov    ds:0x6ab6f012,eax
  41d268:	in     eax,dx
  41d269:	jbe    0x41d259
  41d26b:	imul   BYTE PTR [ebx-0x2a]
  41d26e:	cli    
  41d26f:	test   eax,0xcf8cc0eb
  41d274:	mov    WORD PTR [eax+0x2b],ds
  41d277:	(bad)  
  41d278:	cmp    eax,0x94d33b30
  41d27d:	popf   
  41d27e:	mov    ecx,?
  41d280:	loop   0x41d256
  41d282:	in     al,dx
  41d283:	iret   
  41d284:	stc    
  41d285:	ja     0x41d2f5
  41d287:	adc    bl,dl
  41d289:	dec    eax
  41d28a:	les    ebx,FWORD PTR [eax]
  41d28c:	ret    0xb986
  41d28f:	pop    edx
  41d290:	outs   dx,BYTE PTR ds:[esi]
  41d291:	dec    esi
  41d292:	inc    esp
  41d293:	cmp    ebx,esp
  41d295:	adc    DWORD PTR ds:0xb091fd2b,eax
  41d29b:	jp     0x41d239
  41d29d:	test   al,0xa6
  41d29f:	push   ss
  41d2a0:	xrelease xchg DWORD PTR [ecx-0x3f],edi
  41d2a4:	lea    eax,[ebx]
  41d2a6:	mov    ecx,0x58be26e1
  41d2ab:	jne    0x41d25e
  41d2ad:	test   al,0x7a
  41d2af:	test   BYTE PTR [edi+ebx*4-0x3100df35],cl
  41d2b6:	xchg   esi,edx
  41d2b8:	or     ecx,DWORD PTR [ebx-0x48]
  41d2bb:	pusha  
  41d2bc:	loopne 0x41d25f
  41d2be:	or     bp,ax
  41d2c1:	or     BYTE PTR [ebx+0x53f63c2d],cl
  41d2c7:	into   
  41d2c8:	cwde   
  41d2c9:	dec    edi
  41d2ca:	adc    al,0xe
  41d2cc:	dec    edx
  41d2cd:	or     al,al
  41d2cf:	xchg   edx,eax
  41d2d0:	xor    eax,0xdecbc731
  41d2d5:	dec    DWORD PTR [ecx+0x442618d1]
  41d2db:	or     BYTE PTR [eax+0x15],dl
  41d2de:	mov    esi,0xafd814b8
  41d2e3:	adc    edx,0x65
  41d2e6:	or     BYTE PTR ds:0xab94599f,dl
  41d2ec:	(bad)  
  41d2ed:	daa    
  41d2ee:	adc    dh,BYTE PTR [edx]
  41d2f0:	sbb    ah,al
  41d2f2:	jno    0x41d289
  41d2f4:	pop    eax
  41d2f5:	leave  
  41d2f6:	or     ebx,eax
  41d2f8:	rcr    BYTE PTR [esi+0x7e],cl
  41d2fb:	push   es
  41d2fc:	pop    ebp
  41d2fd:	cmp    BYTE PTR [edx+0x1e],ah
  41d300:	shl    bl,1
  41d302:	in     al,dx
  41d303:	sub    al,0xa2
  41d305:	mov    eax,0x8eb4ea0a
  41d30a:	in     eax,dx
  41d30b:	add    eax,ebx
  41d30d:	int3   
  41d30e:	ja     0x41d356
  41d310:	jmp    0xd6d8ef8f
  41d315:	adc    BYTE PTR [ebx+0x749d0fa9],ah
  41d31b:	jns    0x41d31e
  41d31d:	fisttp DWORD PTR [esi]
  41d31f:	sahf   
  41d320:	mov    edx,0xec06307d
  41d325:	jle    0x41d2d4
  41d327:	je     0x41d366
  41d329:	jb     0x41d2eb
  41d32b:	push   ss
  41d32c:	inc    edx
  41d32d:	mov    al,ds:0x7d6fad8
  41d332:	xor    esp,DWORD PTR [ecx+0x488a1d5e]
  41d338:	mov    eax,0x3c498931
  41d33d:	ins    BYTE PTR es:[edi],dx
  41d33e:	dec    ebx
  41d33f:	cmc    
  41d340:	push   edi
  41d341:	loopne 0x41d31d
  41d343:	and    BYTE PTR [ebx+0x122eea65],0xfe
  41d34a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d34b:	(bad)
  41d34e:	mov    ebx,0x3d2e90cb
  41d353:	sub    edi,edx
  41d355:	xor    BYTE PTR [esi+0x2c],cl
  41d358:	jge    0x41d311
  41d35a:	mov    esp,0x7d58385d
  41d35f:	mov    ecx,0xd31396e9
  41d364:	loopne 0x41d38a
  41d366:	mov    esp,0x5731a854
  41d36b:	repz push ss
  41d36d:	add    ebp,DWORD PTR [ebp+edx*2+0x5f]
  41d371:	addr16 sbb al,0x2e
  41d374:	imul   esi,DWORD PTR [esi],0xffffffc9
  41d377:	arpl   WORD PTR [ebp+0x19],ax
  41d37a:	jne    0x41d337
  41d37c:	inc    ecx
  41d37d:	push   edi
  41d37e:	pop    esi
  41d37f:	mov    al,ds:0xcdaffe2a
  41d384:	lods   al,BYTE PTR ds:[esi]
  41d385:	mov    bl,0x45
  41d387:	jnp    0x41d3a2
  41d389:	jle    0x41d380
  41d38b:	cwde   
  41d38c:	into   
  41d38d:	fdivr  st(7),st
  41d38f:	lock sub bl,BYTE PTR [esi]
  41d392:	push   ebp
  41d393:	sub    al,0xc0
  41d395:	and    eax,0x445ab356
  41d39a:	popa   
  41d39b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d39c:	push   edx
  41d39d:	jo     0x41d3ae
  41d39f:	adc    al,BYTE PTR [ebp+ecx*1-0x5ff85b65]
  41d3a6:	in     eax,dx
  41d3a7:	mov    ecx,0xdb902a02
  41d3ac:	dec    ebx
  41d3ad:	mov    bh,0xde
  41d3af:	jae    0x41d410
  41d3b1:	pop    ecx
  41d3b2:	ror    DWORD PTR [ebx],0xba
  41d3b5:	out    0xdf,al
  41d3b7:	inc    esp
  41d3b8:	(bad)  
  41d3b9:	call   0x2440:0x13e1681d
  41d3c0:	jns    0x41d382
  41d3c2:	add    al,0xa9
  41d3c4:	jecxz  0x41d424
  41d3c6:	pop    eax
  41d3c7:	adc    DWORD PTR [eax*8-0x4e7171b6],ebp
  41d3ce:	hlt    
  41d3cf:	cs or  dl,ah
  41d3d2:	cdq    
  41d3d3:	leave  
  41d3d4:	xchg   esi,eax
  41d3d5:	jmp    0xc361ea4e
  41d3da:	ret    0xdef7
  41d3dd:	loopne 0x41d39e
  41d3df:	add    DWORD PTR ds:0x2148554d,0x569a6c76
  41d3e9:	dec    esp
  41d3ea:	cmp    BYTE PTR [ecx+edx*1],al
  41d3ed:	pop    esp
  41d3ee:	nop
  41d3ef:	shr    BYTE PTR [edx+0x1ad7005d],cl
  41d3f5:	jge    0x41d415
  41d3f7:	(bad)  
  41d3f8:	sar    esp,1
  41d3fa:	fs inc eax
  41d3fc:	or     BYTE PTR [edi-0x6379add4],0xdf
  41d403:	mov    bh,0xba
  41d405:	shl    dl,cl
  41d407:	mov    bh,0x9b
  41d409:	enter  0x540c,0xd7
  41d40d:	jmp    0x41d3b5
  41d40f:	div    DWORD PTR [edi+0x70]
  41d412:	sbb    esi,esi
  41d414:	push   ebp
  41d415:	pop    esp
  41d416:	or     DWORD PTR [esi],eax
  41d418:	add    eax,0x50fa5f33
  41d41d:	retf   0x4f4b
  41d420:	push   edi
  41d421:	outs   dx,DWORD PTR ds:[esi]
  41d422:	pushf  
  41d423:	xlat   BYTE PTR ds:[ebx]
  41d424:	ins    DWORD PTR es:[edi],dx
  41d425:	jns    0x41d3e9
  41d427:	inc    ebx
  41d428:	and    eax,DWORD PTR [ebx]
  41d42a:	xchg   edi,eax
  41d42b:	aaa    
  41d42c:	pop    edx
  41d42d:	xchg   ebp,eax
  41d42e:	xchg   esp,eax
  41d42f:	xchg   edx,eax
  41d430:	aad    0x41
  41d432:	xchg   edi,eax
  41d433:	pop    esi
  41d434:	imul   eax,esp,0x68
  41d437:	mov    ch,0x11
  41d439:	or     eax,0x819181bd
  41d43e:	pop    edx
  41d43f:	xor    dl,dl
  41d441:	enter  0xf0be,0xed
  41d445:	cmp    bl,al
  41d447:	lahf   
  41d448:	ins    DWORD PTR es:[edi],dx
  41d449:	rol    ecx,cl
  41d44b:	cmp    bh,dh
  41d44d:	iret   
  41d44e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d44f:	push   ebp
  41d450:	aaa    
  41d451:	dec    ebp
  41d452:	mov    ch,0x48
  41d454:	jb     0x41d48e
  41d456:	push   ebx
  41d457:	es fs and esp,ecx
  41d45b:	cmp    dh,bh
  41d45d:	sbb    eax,0x421e5495
  41d462:	leave  
  41d463:	lds    esi,FWORD PTR [esi]
  41d465:	mov    ah,0x42
  41d467:	retf   
  41d468:	loop   0x41d43f
  41d46a:	mov    WORD PTR [eax-0x3b136067],?
  41d470:	mov    dh,0x51
  41d472:	pop    esi
  41d473:	mov    ch,0xfe
  41d475:	inc    ebx
  41d476:	jle    0x41d4d3
  41d478:	xchg   ecx,eax
  41d479:	push   ss
  41d47a:	outs   dx,BYTE PTR ds:[esi]
  41d47b:	aam    0x95
  41d47d:	outs   dx,DWORD PTR ds:[esi]
  41d47e:	into   
  41d47f:	and    eax,0x9f548857
  41d484:	jg     0x41d467
  41d486:	mov    al,0xdc
  41d488:	cld    
  41d489:	mov    edx,0xe0c3ef82
  41d48e:	or     edi,ebp
  41d490:	cmovnp esp,esp
  41d493:	sbb    al,0xa3
  41d495:	cld    
  41d496:	add    DWORD PTR [ecx-0x184dfa69],0x7d
  41d49d:	aaa    
  41d49e:	mov    WORD PTR [eax+0x12],gs
  41d4a1:	dec    ecx
  41d4a2:	fs rcl edi,0x72
  41d4a6:	xchg   ebp,eax
  41d4a7:	cmp    edi,edx
  41d4a9:	int3   
  41d4aa:	cdq    
  41d4ab:	imul   eax,DWORD PTR [eax],0xffffff95
  41d4ae:	test   al,0xfb
  41d4b0:	add    dh,BYTE PTR [esi]
  41d4b2:	sbb    ebx,DWORD PTR [esi+0x7a]
  41d4b5:	sbb    al,0x65
  41d4b7:	pop    ebx
  41d4b8:	mov    ch,0xa5
  41d4ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4bb:	ja     0x41d49c
  41d4bd:	or     DWORD PTR [ecx+0x41],esp
  41d4c0:	lock std 
  41d4c2:	stos   BYTE PTR es:[edi],al
  41d4c3:	jmp    0x4197453
  41d4c8:	jae    0x41d514
  41d4ca:	sti    
  41d4cb:	xor    ecx,esi
  41d4cd:	ss es stc 
  41d4d0:	jmp    0x15e1:0x25ef3960
  41d4d7:	jno    0x41d4a8
  41d4d9:	adc    al,BYTE PTR [edx]
  41d4db:	add    eax,0xe0d7debc
  41d4e0:	xlat   BYTE PTR ds:[ebx]
  41d4e1:	jp     0x41d4dd
  41d4e3:	pop    edi
  41d4e4:	push   cs
  41d4e5:	sbb    eax,0xd5c87528
  41d4ea:	repz gs jno 0x41d526
  41d4ee:	fidiv  WORD PTR ds:0x7a6f2401
  41d4f4:	and    eax,0x2b94c864
  41d4f9:	xor    BYTE PTR [eax],0xb2
  41d4fc:	inc    eax
  41d4fd:	pop    esp
  41d4fe:	sub    eax,0x21bd4490
  41d503:	mov    esi,0xd27cfd8a
  41d508:	mov    bl,0x9d
  41d50a:	and    ecx,DWORD PTR [edi-0x1]
  41d50d:	pop    es
  41d50e:	popf   
  41d50f:	cmp    al,0x6f
  41d511:	out    dx,al
  41d512:	fwait
  41d513:	cdq    
  41d514:	pop    ss
  41d515:	jne    0x41d4cd
  41d517:	add    eax,0x826422e6
  41d51c:	cmc    
  41d51d:	call   0x30c829c5
  41d522:	ret    0x1a7d
  41d525:	mov    dl,0x1e
  41d527:	inc    ebp
  41d528:	adc    DWORD PTR [edi+0xe],ebp
  41d52b:	and    eax,0x3293510e
  41d530:	xor    esi,DWORD PTR [edi]
  41d532:	mov    bh,0xd1
  41d534:	(bad)  
  41d535:	repnz add al,0x12
  41d538:	icebp  
  41d539:	or     BYTE PTR [edx],bl
  41d53b:	push   edi
  41d53c:	pusha  
  41d53d:	pop    edi
  41d53e:	mov    ch,0x93
  41d540:	pop    ecx
  41d541:	jae    0x41d527
  41d543:	sub    eax,0xf916e999
  41d548:	test   ebx,esi
  41d54a:	push   edx
  41d54b:	mov    ds:0x29dd3fa,al
  41d550:	and    esp,ebx
  41d552:	mov    dh,0xa3
  41d554:	sbb    DWORD PTR [ebp+0x657f2f22],eax
  41d55a:	call   0x6ffb:0x11b4a8ca
  41d561:	clc    
  41d562:	xchg   esi,eax
  41d563:	jmp    0x6b35b578
  41d568:	sbb    ebp,DWORD PTR [eax+0x3ec6ddf5]
  41d56e:	jg     0x41d543
  41d570:	jb     0x41d567
  41d572:	loope  0x41d572
  41d574:	rcr    DWORD PTR cs:[ecx-0x2d5f8296],1
  41d57b:	ja     0x41d52c
  41d57d:	inc    esi
  41d57e:	adc    dh,BYTE PTR [edx+ecx*8]
  41d581:	into   
  41d582:	and    BYTE PTR [ecx+0x39],cl
  41d585:	jecxz  0x41d563
  41d587:	dec    ecx
  41d588:	mov    bl,0x5
  41d58a:	(bad)  
  41d58c:	cmp    eax,0x4a6d4a6a
  41d591:	sub    DWORD PTR [edi],ebx
  41d593:	sbb    al,0x0
  41d595:	repnz mov ecx,0x77f33ae1
  41d59b:	dec    ecx
  41d59c:	push   ecx
  41d59d:	mov    ds:0xe58869d9,eax
  41d5a2:	mov    al,0xf9
  41d5a4:	inc    ebx
  41d5a5:	repnz sub ecx,ebx
  41d5a8:	lahf   
  41d5a9:	repnz out 0xe8,al
  41d5ac:	and    ebp,DWORD PTR [ebx+0x3cec4352]
  41d5b2:	mov    ss,WORD PTR [eax+0x63626f89]
  41d5b8:	cli    
  41d5b9:	and    BYTE PTR [edi+0x663a82b6],0x9
  41d5c0:	xchg   ebp,eax
  41d5c1:	jne    0x41d587
  41d5c3:	mov    esp,0x4aaaf1a2
  41d5c8:	cmp    edx,DWORD PTR [edx+0x47]
  41d5cb:	pop    edx
  41d5cc:	cmp    eax,0x7d81e014
  41d5d1:	xor    edx,DWORD PTR [ecx+0x6589cd8e]
  41d5d7:	popa   
  41d5d8:	xchg   dl,dl
  41d5da:	jo     0x41d62d
  41d5dc:	inc    eax
  41d5dd:	xchg   ebx,eax
  41d5de:	(bad)  
  41d5df:	sub    DWORD PTR [ebp+ecx*4+0x59],edx
  41d5e3:	cmp    eax,0x243b43cb
  41d5e8:	pop    esp
  41d5e9:	stos   BYTE PTR es:[edi],al
  41d5ea:	pop    edx
  41d5eb:	orps   xmm7,xmm7
  41d5ee:	fwait
  41d5ef:	loope  0x41d608
  41d5f1:	scas   eax,DWORD PTR es:[edi]
  41d5f2:	sbb    DWORD PTR [eax+0x11],esp
  41d5f5:	or     eax,0x730b685f
  41d5fa:	lock rol BYTE PTR [esi],cl
  41d5fd:	cmp    al,0x11
  41d5ff:	mov    gs,WORD PTR [ecx+eax*1]
  41d602:	data16 xor al,0xa5
  41d605:	movhps xmm2,QWORD PTR [edi-0x376f3691]
  41d60c:	idiv   BYTE PTR [ebx]
  41d60e:	ss js  0x41d608
  41d611:	xlat   BYTE PTR ds:[ebx]
  41d612:	inc    edx
  41d613:	dec    ebx
  41d614:	push   eax
  41d615:	mov    eax,ds:0xe49964a6
  41d61a:	sar    DWORD PTR [ebp+0x453443fc],0x4d
  41d621:	(bad)  
  41d622:	xor    al,0xb9
  41d624:	pop    ebp
  41d625:	mov    eax,0xd928867f
  41d62a:	repz cwde 
  41d62c:	adc    eax,0x71c89f6c
  41d631:	fld    QWORD PTR [esi]
  41d633:	in     eax,0xd5
  41d635:	cmp    BYTE PTR [eax+0x15d2414a],ah
  41d63b:	into   
  41d63c:	clc    
  41d63d:	push   edx
  41d63e:	sbb    al,BYTE PTR ss:[esi-0x3d2c1e19]
  41d645:	pop    ecx
  41d646:	ja     0x41d66c
  41d648:	mov    bl,0x2
  41d64a:	inc    edi
  41d64b:	loop   0x41d6a4
  41d64d:	sub    al,0x84
  41d64f:	das    
  41d650:	jae    0x41d68b
  41d652:	cmp    bh,cl
  41d654:	dec    ebp
  41d655:	shl    DWORD PTR [esi+0x7c],0x64
  41d659:	cmp    eax,0x6b947cf
  41d65e:	es xchg edx,ebp
  41d661:	scas   al,BYTE PTR es:[edi]
  41d662:	sub    ebp,DWORD PTR [ecx-0x79]
  41d665:	mov    ebp,0x5807a79a
  41d66a:	sbb    DWORD PTR ds:[ebp-0x16],edx
  41d66e:	imul   edi,DWORD PTR fs:[ecx],0xffffffff
  41d672:	cdq    
  41d673:	ja     0x41d6bc
  41d675:	jge    0x41d68c
  41d677:	mov    eax,DWORD PTR [ebx]
  41d679:	pop    eax
  41d67a:	xor    al,0xa
  41d67c:	ror    DWORD PTR [ebp+0x38],cl
  41d67f:	jb     0x41d6dd
  41d681:	lds    edi,FWORD PTR [edx+0x4bf79436]
  41d687:	pop    ecx
  41d688:	xchg   ecx,eax
  41d689:	pushf  
  41d68a:	and    al,0xfd
  41d68c:	pusha  
  41d68d:	test   eax,0x4e7fd68e
  41d692:	push   esi
  41d693:	lods   eax,DWORD PTR ds:[esi]
  41d694:	out    0xa9,eax
  41d696:	mov    ebp,DWORD PTR [ebp+ebp*8+0x3]
  41d69a:	and    BYTE PTR [esi],ah
  41d69c:	dec    edi
  41d69d:	stc    
  41d69e:	lock fild WORD PTR [edi+0x25836bc6]
  41d6a5:	adc    al,0x84
  41d6a7:	gs aad 0x30
  41d6aa:	xchg   ecx,eax
  41d6ab:	push   esi
  41d6ac:	fwait
  41d6ad:	jmp    0x95fbb3fa
  41d6b2:	pop    ecx
  41d6b3:	imul   ebx,DWORD PTR [edx+0x2f],0xffffffdb
  41d6b7:	(bad)
  41d6ba:	adc    BYTE PTR [esp+eax*1],bh
  41d6bd:	out    dx,al
  41d6be:	cmc    
  41d6bf:	push   esp
  41d6c1:	out    0x95,al
  41d6c3:	les    edx,FWORD PTR ds:0xb16cd9a6
  41d6c9:	inc    edi
  41d6ca:	adc    al,0x8e
  41d6cc:	daa    
  41d6cd:	xchg   esi,eax
  41d6ce:	mov    ebp,esi
  41d6d0:	push   esi
  41d6d1:	mul    cl
  41d6d3:	ror    eax,1
  41d6d5:	popa   
  41d6d6:	js     0x41d738
  41d6d8:	lods   eax,DWORD PTR ds:[esi]
  41d6d9:	aad    0x2a
  41d6db:	jns    0x41d75c
  41d6dd:	ror    DWORD PTR [edi+0x4206a9db],1
  41d6e3:	arpl   WORD PTR [edx+0x79],sp
  41d6e6:	sbb    ch,BYTE PTR ds:0xaf8bbda8
  41d6ec:	pop    esp
  41d6ed:	dec    ebx
  41d6ee:	mov    al,ds:0xca565674
  41d6f3:	dec    edx
  41d6f4:	out    dx,al
  41d6f5:	or     al,0xe
  41d6f7:	jo     0x41d6d9
  41d6f9:	out    0x10,al
  41d6fb:	inc    esi
  41d6fc:	push   edx
  41d6fd:	pusha  
  41d6fe:	jne    0x41d68e
  41d700:	pop    edx
  41d701:	arpl   di,sp
  41d703:	xchg   esp,eax
  41d704:	xor    al,0xda
  41d706:	push   ebx
  41d707:	pop    ss
  41d708:	(bad)  
  41d70b:	call   FWORD PTR [edi]
  41d70d:	iret   
  41d70e:	repz dec edx
  41d710:	adc    esp,edx
  41d712:	push   cs
  41d713:	not    DWORD PTR [esi]
  41d715:	sbb    esp,DWORD PTR [eax]
  41d717:	jmp    FWORD PTR [ebx+esi*2-0x7a3fa677]
  41d71e:	ins    BYTE PTR es:[edi],dx
  41d71f:	test   al,0x2
  41d721:	nop
  41d722:	sub    al,0x89
  41d724:	fbstp  TBYTE PTR [edi]
  41d726:	cmp    BYTE PTR ds:0xa0f5e849,al
  41d72c:	out    dx,eax
  41d72d:	in     eax,dx
  41d72e:	test   eax,0xe2dfcf83
  41d733:	ds aaa 
  41d735:	pop    ebp
  41d736:	or     DWORD PTR ds:0x5cb7d04e,edi
  41d73c:	mov    DWORD PTR [esi],0xe6ee3a16
  41d742:	jnp    0x41d799
  41d744:	xchg   ecx,eax
  41d745:	test   al,0x42
  41d747:	popa   
  41d748:	cmp    eax,0x89f8e4fd
  41d74d:	fnstsw WORD PTR [ecx]
  41d74f:	retf   0x24fe
  41d752:	sar    dh,1
  41d754:	jge    0x41d6d9
  41d756:	inc    eax
  41d757:	daa    
  41d758:	mov    BYTE PTR [eax+ebx*2],al
  41d75b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d75c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d75d:	div    DWORD PTR [ebx+0x3d8b935c]
  41d763:	jecxz  0x41d726
  41d765:	sbb    eax,0x2bf801d8
  41d76a:	xchg   ebp,eax
  41d76b:	das    
  41d76c:	stc    
  41d76d:	icebp  
  41d76e:	retf   0x9166
  41d771:	inc    ebx
  41d772:	iret   
  41d773:	(bad)  
  41d774:	and    bl,BYTE PTR [esp+eiz*2-0x66]
  41d778:	shr    BYTE PTR [esi],0xf5
  41d77b:	and    DWORD PTR [edx],eax
  41d77d:	jmp    0x41d766
  41d77f:	out    dx,eax
  41d780:	mov    edi,0xfb961939
  41d785:	call   0x9fe6:0x905583d
  41d78c:	cmp    ecx,ebx
  41d78e:	sub    eax,0x2c72e7ee
  41d793:	cmp    ebx,DWORD PTR [edx-0x40524f61]
  41d799:	jg     0x41d72e
  41d79b:	push   0xffffffad
  41d79d:	out    dx,eax
  41d79e:	mov    al,ds:0x3b71a344
  41d7a3:	pushf  
  41d7a4:	mov    al,0x1f
  41d7a6:	dec    esp
  41d7a7:	mov    edx,DWORD PTR ds:0xf5e31d82
  41d7ad:	mov    ds:0xe9820251,al
  41d7b2:	adc    eax,0xa0355ad8
  41d7b7:	daa    
  41d7b8:	mov    al,ds:0xc8def3b3
  41d7bd:	aas    
  41d7be:	fistp  WORD PTR [esi]
  41d7c0:	jecxz  0x41d7bb
  41d7c2:	sub    eax,0x9e9d3b19
  41d7c7:	in     eax,0x6f
  41d7c9:	not    DWORD PTR [edx+0x2b]
  41d7cc:	test   DWORD PTR [edx-0x13],0x3fc0548d
  41d7d3:	mov    edi,0x55178142
  41d7d8:	sti    
  41d7d9:	test   DWORD PTR [edx-0x2a70fe08],esp
  41d7df:	cmp    al,0x78
  41d7e1:	push   edi
  41d7e2:	fldenv [ecx+0x25]
  41d7e5:	or     al,BYTE PTR [ebp-0x47]
  41d7e8:	mov    ds,esp
  41d7ea:	dec    eax
  41d7eb:	mov    edi,0x15108c85
  41d7f0:	imul   esp,DWORD PTR [edi],0xa
  41d7f3:	cmp    BYTE PTR [esi+0x1262b46],0xd9
  41d7fa:	jno    0x41d7d5
  41d7fc:	mov    ebx,0xa735fe2d
  41d801:	push   edi
  41d802:	out    0x95,eax
  41d804:	icebp  
  41d805:	fdiv   QWORD PTR [edi-0x48]
  41d808:	lahf   
  41d809:	out    dx,al
  41d80a:	ins    BYTE PTR es:[edi],dx
  41d80b:	mov    ebp,0xf9148433
  41d810:	jge    0x41d820
  41d812:	lods   eax,DWORD PTR ds:[esi]
  41d813:	icebp  
  41d814:	cli    
  41d815:	sbb    edi,edi
  41d817:	mov    WORD PTR [edx],fs
  41d819:	push   edx
  41d81a:	fdivr  QWORD PTR [ebx]
  41d81c:	adc    al,0xc6
  41d81e:	shr    DWORD PTR [ebp+0x61],0x2e
  41d822:	jl     0x41d883
  41d824:	push   edi
  41d825:	dec    ebx
  41d826:	xchg   ebx,eax
  41d827:	popa   
  41d828:	and    dl,cl
  41d82a:	fisubr WORD PTR [edi+0x54cf9c13]
  41d830:	call   0x984a:0x199c3d25
  41d837:	loop   0x41d888
  41d839:	cli    
  41d83a:	inc    eax
  41d83b:	call   0x400d:0xd7e1c85f
  41d842:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d843:	pop    edi
  41d844:	aad    0x17
  41d846:	scas   al,BYTE PTR es:[edi]
  41d847:	test   BYTE PTR [ebp+0x23a0e50b],0x64
  41d84e:	imul   edi,DWORD PTR [esi+0x53],0xffffff83
  41d852:	scas   eax,DWORD PTR es:[edi]
  41d853:	fcomp  DWORD PTR [ecx+ebp*2]
  41d856:	fs cmp al,0x85
  41d859:	pop    eax
  41d85a:	mov    edx,0x1c57d944
  41d85f:	or     al,0x1a
  41d861:	push   esi
  41d862:	fs in  eax,0x6c
  41d865:	out    dx,eax
  41d866:	or     BYTE PTR ds:0x781b79f2,ah
  41d86c:	pop    ebp
  41d86d:	sar    ecx,0x63
  41d870:	mov    eax,ds:0x6d5681db
  41d875:	test   BYTE PTR [ebp-0xe7f0e3e],ch
  41d87b:	push   0xffffffca
  41d87d:	jnp    0x41d849
  41d87f:	xchg   esp,eax
  41d880:	push   edx
  41d881:	pop    edi
  41d882:	out    dx,al
  41d883:	or     eax,0x6758a84e
  41d888:	sbb    ah,BYTE PTR [eax]
  41d88a:	add    BYTE PTR [eax],dl
  41d88c:	scas   eax,DWORD PTR es:[edi]
  41d88d:	je     0x41d8f5
  41d88f:	or     eax,0x7afdb840
  41d894:	pop    edi
  41d895:	lock sub BYTE PTR [eax+0x18c0770d],ah
  41d89c:	and    BYTE PTR [edi],ah
  41d89e:	std    
  41d89f:	jg     0x41d883
  41d8a1:	cmp    al,0x50
  41d8a3:	loop   0x41d8b3
  41d8a5:	xchg   esi,eax
  41d8a6:	nop
  41d8a7:	test   eax,0x51efa124
  41d8ad:	push   edx
  41d8ae:	es xor al,0x44
  41d8b1:	jns    0x41d905
  41d8b3:	shl    edx,cl
  41d8b5:	aas    
  41d8b6:	and    esi,0x46552070
  41d8bc:	cwde   
  41d8bd:	daa    
  41d8be:	jne    0x41d927
  41d8c0:	jbe    0x41d917
  41d8c2:	scas   eax,DWORD PTR es:[edi]
  41d8c3:	xchg   ecx,eax
  41d8c4:	xor    al,0x4f
  41d8c6:	and    al,0xfb
  41d8c8:	jmp    0x41d8d8
  41d8ca:	ins    DWORD PTR es:[edi],dx
  41d8cb:	jp     0x41d8f6
  41d8cd:	sbb    BYTE PTR [esi],ah
  41d8cf:	sub    bl,ah
  41d8d1:	mov    edx,0xcee7ab05
  41d8d6:	ins    DWORD PTR es:[edi],dx
  41d8d7:	push   ebp
  41d8d8:	gs inc edi
  41d8da:	or     al,0x44
  41d8dc:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41d8de:	adc    cl,bh
  41d8e0:	cli    
  41d8e1:	test   ebp,eax
  41d8e3:	mov    ebp,0x2d86995b
  41d8e8:	push   ss
  41d8e9:	fmul   QWORD PTR [ebp+0x48cb9104]
  41d8ef:	xchg   DWORD PTR [ebx-0x575cb4fa],edx
  41d8f5:	adc    eax,0x9fcc5cb8
  41d8fa:	inc    edx
  41d8fb:	push   es
  41d8fc:	pop    esp
  41d8fd:	jge    0x41d96b
  41d8ff:	push   edi
  41d900:	xor    eax,0x4fdb66da
  41d905:	mov    ah,bl
  41d907:	dec    esp
  41d908:	mov    ebx,0x69329147
  41d90d:	out    0x16,al
  41d90f:	push   edx
  41d910:	out    dx,al
  41d911:	test   DWORD PTR [ebp-0x24afae49],eax
  41d917:	inc    ebp
  41d918:	or     ah,BYTE PTR [ecx+edi*1+0x3f45d0fd]
  41d91f:	xchg   esi,eax
  41d920:	xor    dl,BYTE PTR [edx-0x6f]
  41d923:	or     eax,0x64991a8e
  41d928:	dec    esp
  41d929:	cdq    
  41d92a:	sbb    ecx,DWORD PTR [edi+0x3fe50462]
  41d930:	loop   0x41d939
  41d932:	outs   dx,DWORD PTR ds:[esi]
  41d933:	or     DWORD PTR [esp+edx*1],0xffffff9b
  41d937:	hlt    
  41d938:	ja     0x41d8f4
  41d93a:	inc    ebx
  41d93b:	mov    fs,WORD PTR [ecx]
  41d93d:	push   bp
  41d93f:	mov    WORD PTR [ecx+0x36ea3fe2],fs
  41d945:	sbb    bl,BYTE PTR ds:[ecx+0x33]
  41d949:	loop   0x41d8d1
  41d94b:	mov    ch,0x4a
  41d94d:	dec    eax
  41d94e:	ret    
  41d94f:	fucomi st,st(2)
  41d951:	dec    esp
  41d952:	xlat   BYTE PTR ds:[ebx]
  41d953:	xor    DWORD PTR [edi-0x5b],esp
  41d956:	jl     0x41d962
  41d958:	mov    WORD PTR [esi-0x5cd6d170],gs
  41d95e:	jmp    0x41d916
  41d960:	outs   dx,BYTE PTR ds:[esi]
  41d961:	sub    al,0xf0
  41d963:	mov    dh,0x9b
  41d965:	pop    esp
  41d966:	mov    DWORD PTR [eax],edi
  41d968:	cmc    
  41d969:	xchg   edi,eax
  41d96a:	xchg   ebx,eax
  41d96b:	aad    0x56
  41d96d:	mov    ds:0x1cc703bb,eax
  41d972:	add    BYTE PTR ds:0xb4255fb6,dh
  41d978:	add    eax,DWORD PTR [edi+0x64]
  41d97b:	sbb    BYTE PTR [ecx-0x4259f819],dh
  41d981:	sar    DWORD PTR [esi+eax*2],1
  41d984:	in     eax,0x77
  41d986:	(bad)  
  41d987:	push   ds
  41d988:	mov    bl,0x25
  41d98a:	cs (bad) 
  41d98d:	or     ah,BYTE PTR [eax]
  41d98f:	clc    
  41d990:	enter  0x381e,0x4a
  41d994:	cmp    al,0xcc
  41d996:	pop    ds
  41d997:	jmp    0x427:0xfcecdea4
  41d99e:	jg     0x41d934
  41d9a0:	xchg   BYTE PTR [edi],al
  41d9a2:	sti    
  41d9a3:	mov    bl,0x27
  41d9a5:	aas    
  41d9a6:	push   ecx
  41d9a7:	mov    DWORD PTR [ebp-0x3e],0x63f6bec8
  41d9ae:	xchg   ebx,eax
  41d9af:	int    0xc7
  41d9b1:	lea    esp,[esi]
  41d9b3:	(bad)  
  41d9b4:	les    edx,FWORD PTR [eax+0x47fc90cd]
  41d9ba:	xchg   edx,eax
  41d9bb:	and    al,0x85
  41d9bd:	inc    eax
  41d9be:	pop    edx
  41d9bf:	push   0x31
  41d9c1:	push   edi
  41d9c2:	cwde   
  41d9c3:	fcom   st(5)
  41d9c5:	call   0xf5988e5e
  41d9ca:	cmc    
  41d9cb:	mov    ss,WORD PTR [eax]
  41d9cd:	stos   DWORD PTR es:[edi],eax
  41d9ce:	mov    edx,0xaae17e57
  41d9d3:	cdq    
  41d9d4:	ret    0x8677
  41d9d7:	lods   al,BYTE PTR ds:[esi]
  41d9d8:	fld    DWORD PTR [eax-0x9ad954f]
  41d9de:	mov    eax,ds:0x9bf73d5f
  41d9e3:	push   ebp
  41d9e4:	fild   DWORD PTR ds:0xf50af8dc
  41d9ea:	push   ebp
  41d9eb:	ins    BYTE PTR es:[edi],dx
  41d9ec:	jnp    0x41da4d
  41d9ee:	call   0x752e:0x46a7a36c
  41d9f5:	clc    
  41d9f6:	and    BYTE PTR ds:[ecx],bl
  41d9f9:	pop    ds
  41d9fa:	stos   DWORD PTR es:[edi],eax
  41d9fb:	das    
  41d9fc:	mov    ebx,0xa1d02be9
  41da01:	jb     0x41d9e1
  41da03:	push   0x6bc5039
  41da08:	es dec esp
  41da0a:	mov    ?,WORD PTR [esp+edx*1-0x4b]
  41da0e:	mov    WORD PTR [edi],es
  41da10:	push   esi
  41da11:	test   eax,0x1f250fd8
  41da16:	add    ah,BYTE PTR [ebp+eax*4+0x5f]
  41da1a:	and    ecx,DWORD PTR ds:0x848424e3
  41da20:	scas   al,BYTE PTR es:[edi]
  41da21:	fnstsw WORD PTR [ecx-0x66]
  41da24:	(bad)  
  41da25:	repz into 
  41da27:	mov    ecx,0x946c5a0e
  41da2c:	mov    BYTE PTR [ecx-0x2358a526],bh
  41da32:	inc    esi
  41da33:	cmp    esi,eax
  41da35:	or     dl,al
  41da37:	push   ecx
  41da38:	call   0x2f56:0xba3a41d2
  41da3f:	inc    ecx
  41da40:	xorps  xmm5,XMMWORD PTR [edx]
  41da43:	adc    eax,0x138ae31f
  41da48:	mov    ch,0x7c
  41da4a:	ds sub esi,edi
  41da4d:	cdq    
  41da4e:	jns    0x41da76
  41da50:	(bad)  
  41da51:	call   0x97fce1c
  41da56:	cmp    dh,BYTE PTR [ebx+0x7]
  41da59:	loope  0x41da5e
  41da5b:	scas   eax,DWORD PTR es:[edi]
  41da5c:	iret   
  41da5d:	mov    BYTE PTR [edx+0x765e2f58],dl
  41da63:	push   ebp
  41da64:	mov    esp,DWORD PTR [edx+0x1ea9e2ba]
  41da6a:	or     BYTE PTR [eax+eiz*2-0x70],0x44
  41da6f:	xchg   edx,eax
  41da70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da71:	jecxz  0x41daf2
  41da73:	push   0x66
  41da75:	in     al,dx
  41da76:	or     BYTE PTR [edx+ebp*1],bl
  41da79:	push   es
  41da7a:	sbb    al,0xd3
  41da7c:	iret   
  41da7d:	inc    ebp
  41da7e:	test   DWORD PTR [esp+eiz*8+0x1e],0x993f4b94
  41da86:	jl     0x41db04
  41da88:	push   es
  41da89:	cwde   
  41da8a:	enter  0x8561,0x6b
  41da8e:	mov    ebx,DWORD PTR [ebx]
  41da90:	in     al,0xac
  41da92:	inc    edx
  41da93:	fisubr WORD PTR [ecx-0xe]
  41da96:	add    esi,ebp
  41da98:	or     al,0xdb
  41da9a:	(bad)  
  41da9b:	mov    ebx,0x6493f128
  41daa0:	(bad)  
  41daa1:	jmp    0x41db05
  41daa3:	mov    al,0x14
  41daa5:	push   0xb
  41daa7:	retf   0xd0c1
  41daaa:	mov    ah,0xb9
  41daac:	mov    ds:0xe7d289d9,eax
  41dab1:	ss lahf 
  41dab3:	je     0x41db0b
  41dab5:	aas    
  41dab6:	aas    
  41dab7:	retf   0xc9b4
  41daba:	dec    edi
  41dabb:	cld    
  41dabc:	(bad)  
  41dabd:	xor    dh,BYTE PTR [ecx]
  41dabf:	xchg   edx,eax
  41dac0:	pop    esi
  41dac1:	pop    esp
  41dac2:	sbb    DWORD PTR [esi],ebx
  41dac4:	and    ecx,ebp
  41dac6:	cld    
  41dac7:	(bad)  ds:0x347caad9
  41dacd:	jb     0x41db23
  41dacf:	push   0x79824f59
  41dad4:	xor    al,0x10
  41dad6:	imul   esp,DWORD PTR [ecx],0x7ed7aabb
  41dadc:	xor    BYTE PTR [ebp+0x7aeaaf98],bh
  41dae2:	shr    BYTE PTR [edx+0x590141b3],1
  41dae8:	inc    esi
  41dae9:	cmp    cl,BYTE PTR [ecx]
  41daeb:	enter  0x3700,0x1f
  41daef:	dec    ebx
  41daf0:	enter  0xb2fc,0xf9
  41daf4:	loope  0x41dab4
  41daf6:	into   
  41daf7:	and    DWORD PTR [ebx-0x47b264f0],ebx
  41dafd:	sbb    BYTE PTR [ecx+0x169db15],cl
  41db03:	addr16 in eax,dx
  41db05:	loopne 0x41db18
  41db07:	out    0x5a,eax
  41db09:	or     BYTE PTR [edi+0x6f4bcde7],bh
  41db0f:	fisttp WORD PTR [eax+0x70]
  41db12:	das    
  41db13:	or     esi,ebp
  41db15:	and    DWORD PTR [esi-0x6d],esi
  41db18:	push   ebp
  41db19:	xlat   BYTE PTR ds:[ebx]
  41db1a:	xchg   edi,eax
  41db1b:	or     cl,BYTE PTR [edi+ecx*4-0x5973289e]
  41db22:	add    ebx,0xf388512a
  41db28:	fistp  QWORD PTR [ebp-0x66]
  41db2b:	(bad)  
  41db2c:	int    0x6d
  41db2e:	mov    ebp,0x9d0322a4
  41db33:	(bad)  
  41db34:	out    0xa3,eax
  41db36:	arpl   dx,sp
  41db38:	sub    al,0xb5
  41db3a:	aad    0x5b
  41db3c:	cmc    
  41db3d:	addr16 inc edx
  41db3f:	scas   eax,DWORD PTR es:[edi]
  41db40:	mov    ch,0x30
  41db42:	aaa    
  41db43:	sbb    BYTE PTR [edi+0x64],al
  41db46:	xor    BYTE PTR [ebx+0x31],ch
  41db49:	fld    DWORD PTR [ebx-0x7e]
  41db4c:	ja     0x41dbb6
  41db4e:	pop    ecx
  41db4f:	push   es
  41db50:	mov    al,BYTE PTR [edx+0x7d]
  41db53:	test   eax,0xa02ff540
  41db58:	clc    
  41db59:	xor    DWORD PTR [ecx+0x5af7704c],edi
  41db5f:	sbb    ecx,edi
  41db61:	stos   BYTE PTR es:[edi],al
  41db62:	ficom  DWORD PTR [esi+0x7c7b2fab]
  41db68:	out    0x12,eax
  41db6a:	mov    esi,DWORD PTR [esi]
  41db6c:	mov    dh,BYTE PTR [edi+ebx*4+0x41ebe0ce]
  41db73:	(bad)  
  41db74:	lock push cs
  41db76:	cmp    ch,BYTE PTR [ebp-0x44583e83]
  41db7c:	jne    0x41db14
  41db7e:	test   DWORD PTR [ebx-0x2d],0x16ee1b9a
  41db85:	popa   
  41db86:	sub    eax,0x3a09eef5
  41db8b:	inc    edi
  41db8c:	mov    cl,0xbb
  41db8e:	int3   
  41db8f:	jecxz  0x41dbf3
  41db91:	xchg   esi,eax
  41db92:	push   esp
  41db93:	jne    0x41db60
  41db95:	push   esi
  41db96:	dec    edi
  41db97:	std    
  41db98:	jbe    0x41dbc2
  41db9a:	iret   
  41db9b:	adc    eax,0x5f246def
  41dba0:	into   
  41dba1:	inc    ecx
  41dba2:	add    esp,DWORD PTR [ebx+0x19]
  41dba5:	aam    0xfc
  41dba7:	dec    edi
  41dba8:	test   BYTE PTR [ebx+0x2c0881c7],bl
  41dbae:	inc    edx
  41dbaf:	out    dx,al
  41dbb0:	xchg   ebp,eax
  41dbb1:	add    BYTE PTR [eax-0x384838a8],dl
  41dbb7:	mov    bh,0x84
  41dbb9:	sbb    BYTE PTR [edx],dl
  41dbbb:	cmp    al,BYTE PTR [edx-0x79]
  41dbbe:	sub    ecx,edx
  41dbc0:	and    BYTE PTR [esi],ch
  41dbc2:	fsub   DWORD PTR [ebx+0x7e]
  41dbc5:	inc    ebx
  41dbc6:	adc    eax,0x349999f9
  41dbcb:	push   ebp
  41dbcc:	mov    edi,0x1b488dfa
  41dbd1:	fcomp  DWORD PTR [ebp+0x12]
  41dbd4:	fadd   QWORD PTR [ebp-0x4004b051]
  41dbda:	aad    0x77
  41dbdc:	outs   dx,DWORD PTR ds:[esi]
  41dbdd:	jmp    0x41dba1
  41dbdf:	ins    DWORD PTR es:[edi],dx
  41dbe0:	idiv   DWORD PTR [edi]
  41dbe2:	dec    eax
  41dbe3:	nop
  41dbe4:	or     ch,BYTE PTR [eax]
  41dbe6:	xlat   BYTE PTR ds:[ebx]
  41dbe7:	rol    edx,1
  41dbe9:	mov    edi,0x7d75078e
  41dbee:	dec    ebx
  41dbef:	iret   
  41dbf0:	dec    ebx
  41dbf1:	xchg   edi,eax
  41dbf2:	sbb    al,0xc1
  41dbf4:	mov    eax,0xf6c4e322
  41dbf9:	rol    DWORD PTR [esi+0x1bb0d5a5],0x26
  41dc00:	cs and al,0x71
  41dc03:	das    
  41dc04:	add    ebp,DWORD PTR [edi]
  41dc06:	mov    ecx,0xcd30fcbd
  41dc0b:	jmp    0x636b04d8
  41dc10:	mov    BYTE PTR [ecx+0x250c85b9],al
  41dc16:	je     0x41dc04
  41dc18:	add    ah,dl
  41dc1a:	int3   
  41dc1b:	xchg   ecx,eax
  41dc1c:	mov    dl,0x0
  41dc1e:	and    al,0x2f
  41dc20:	dec    edx
  41dc21:	fadd   DWORD PTR [edi+0x56]
  41dc24:	in     eax,0x68
  41dc26:	(bad)  
  41dc27:	loopne 0x41dbe8
  41dc29:	push   ds
  41dc2a:	adc    eax,0x8d05d132
  41dc2f:	dec    ebp
  41dc30:	or     DWORD PTR [ecx+eiz*8+0x1c12368f],ecx
  41dc37:	out    0xa1,eax
  41dc39:	mov    dl,0x93
  41dc3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc3c:	jb     0x41dbe5
  41dc3e:	mov    al,0xdd
  41dc40:	adc    BYTE PTR [ebp+0x55b4c301],0x1e
  41dc47:	xor    esi,ecx
  41dc49:	mov    edi,0xd69c6305
  41dc4e:	test   BYTE PTR [ebx+0x3cbd2d8c],dl
  41dc54:	pop    ecx
  41dc55:	xchg   ebx,eax
  41dc56:	sti    
  41dc57:	dec    esi
  41dc58:	inc    edi
  41dc59:	stos   BYTE PTR es:[edi],al
  41dc5a:	mov    BYTE PTR [eax-0x73295ae7],dl
  41dc60:	fdivr  DWORD PTR [ebx-0x4588d02e]
  41dc66:	mov    es,edx
  41dc68:	stos   BYTE PTR es:[edi],al
  41dc69:	sahf   
  41dc6a:	sbb    esi,DWORD PTR [ebp-0x8]
  41dc6d:	in     al,dx
  41dc6e:	jmp    0x41dcc7
  41dc70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc71:	mov    edx,0x69a2e1bc
  41dc76:	fsubp  st(0),st
  41dc78:	ja     0x41dc68
  41dc7a:	retf   0xeea3
  41dc7d:	or     al,0xa3
  41dc7f:	xchg   edi,eax
  41dc80:	add    ah,BYTE PTR ds:0x83d0fe79
  41dc86:	ss jne 0x41dcdf
  41dc89:	or     ecx,DWORD PTR [esp+ebx*2-0x71]
  41dc8d:	repz push edi
  41dc8f:	sar    BYTE PTR [esi+0x51c12014],1
  41dc95:	jns    0x41dceb
  41dc97:	add    ch,BYTE PTR [ebp+0x53]
  41dc9a:	adc    DWORD PTR ds:0x3bebda1d,0xffffffd9
  41dca1:	fadd   DWORD PTR [edi+ecx*2-0x4deb1913]
  41dca8:	xor    dl,BYTE PTR [ebp+edi*2+0x50]
  41dcac:	out    0xa0,eax
  41dcae:	fs ins DWORD PTR es:[edi],dx
  41dcb0:	in     al,0xca
  41dcb2:	popf   
  41dcb3:	xchg   ebx,eax
  41dcb4:	mov    esp,DWORD PTR [edi]
  41dcb6:	in     al,0xc1
  41dcb8:	rcl    BYTE PTR [eax+0x12],cl
  41dcbb:	xchg   ebp,eax
  41dcbc:	push   cs
  41dcbd:	mov    dl,0x32
  41dcbf:	les    esi,FWORD PTR [esi+0x76c648b1]
  41dcc5:	lods   al,BYTE PTR ds:[esi]
  41dcc6:	mov    eax,0xbed8a283
  41dccb:	jmp    0x688c:0x6d5851a1
  41dcd2:	xor    BYTE PTR [ebp-0x6397c2e9],ch
  41dcd8:	sub    BYTE PTR [edx+0xb],bh
  41dcdb:	inc    ecx
  41dcdc:	(bad)  
  41dcdd:	mov    esi,0x97a5fd32
  41dce2:	dec    eax
  41dce3:	lea    esp,[edx-0x10]
  41dce6:	add    al,0x2b
  41dce8:	xchg   ebp,eax
  41dce9:	imul   eax
  41dceb:	xor    DWORD PTR [eax-0x21c6c77f],ebp
  41dcf1:	gs inc edi
  41dcf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcf4:	shl    BYTE PTR [esi],1
  41dcf6:	or     BYTE PTR [edx-0x4318ed99],ch
  41dcfc:	cmp    BYTE PTR [eax-0x6e],bl
  41dcff:	(bad)  [edi-0x56]
  41dd02:	dec    edi
  41dd03:	add    eax,0x6aa35411
  41dd08:	push   es
  41dd09:	push   0x645fae3c
  41dd0e:	lock loope 0x41dd38
  41dd11:	sub    ebx,DWORD PTR [edi+0x56923d39]
  41dd17:	pusha  
  41dd18:	pmulhw mm7,QWORD PTR [ecx-0xd0e1b3c]
  41dd1f:	aaa    
  41dd20:	sar    ah,0x33
  41dd23:	ja     0x41dd83
  41dd25:	xor    eax,0x9c9df8e3
  41dd2a:	in     eax,dx
  41dd2b:	cmp    DWORD PTR [ebx],ecx
  41dd2d:	fmul   DWORD PTR [esi+edi*8]
  41dd30:	test   eax,0xe50231fe
  41dd35:	mov    ds:0xc1d79d50,al
  41dd3a:	add    esp,DWORD PTR [eiz*8-0xfa783c2]
  41dd41:	shr    BYTE PTR [ebx],1
  41dd43:	adc    al,0xb7
  41dd45:	xchg   esi,eax
  41dd46:	call   0xa438:0x9d79ccbc
  41dd4d:	icebp  
  41dd4e:	xchg   esp,eax
  41dd4f:	dec    ebp
  41dd50:	and    al,0xf5
  41dd52:	int3   
  41dd53:	jbe    0x41ddc5
  41dd55:	cwde   
  41dd56:	mov    ss,WORD PTR [esi-0x6017e159]
  41dd5c:	jmp    0x14fc:0xd076be93
  41dd63:	xlat   BYTE PTR ds:[ebx]
  41dd64:	cs push edx
  41dd66:	and    eax,edx
  41dd68:	(bad)  
  41dd69:	lods   eax,DWORD PTR ds:[esi]
  41dd6a:	pop    es
  41dd6b:	adc    eax,0x5eecc82c
  41dd70:	mov    ebp,0x628a56a9
  41dd75:	mov    edx,ss
  41dd77:	imul   ebx,DWORD PTR [ebp+0x6165f3fa],0x23e6582b
  41dd81:	mov    esi,0xb9d8d69c
  41dd86:	or     eax,0xeb82fba5
  41dd8b:	add    bl,BYTE PTR [ebx+edx*4-0x1f49851]
  41dd92:	cmp    DWORD PTR [ebx],ebx
  41dd94:	stos   BYTE PTR es:[edi],al
  41dd95:	dec    edx
  41dd96:	(bad)  
  41dd97:	cli    
  41dd98:	daa    
  41dd99:	push   ecx
  41dd9a:	cwde   
  41dd9b:	or     BYTE PTR [ebx+0x70906b14],cl
  41dda1:	addr16 stc 
  41dda3:	pop    ebp
  41dda4:	repz popf 
  41dda6:	mov    eax,0x24e35753
  41ddab:	push   eax
  41ddac:	jmp    0xcb4fae6a
  41ddb1:	imul   edx,ebp,0x54350a62
  41ddb7:	pop    ecx
  41ddb8:	xchg   esp,eax
  41ddb9:	sub    bl,BYTE PTR [edx-0x120e1488]
  41ddbf:	test   BYTE PTR [edx-0x69],dl
  41ddc2:	dec    edi
  41ddc3:	dec    edi
  41ddc4:	inc    eax
  41ddc5:	retf   0xa77
  41ddc8:	inc    ebx
  41ddc9:	test   BYTE PTR [ebp-0x53],cl
  41ddcc:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41ddce:	test   DWORD PTR [eax-0x54],eax
  41ddd1:	loop   0x41de4d
  41ddd3:	dec    esi
  41ddd4:	mov    bl,0xad
  41ddd6:	int3   
  41ddd7:	nop
  41ddd8:	cmp    edx,DWORD PTR [ecx+edx*1]
  41dddb:	int3   
  41dddc:	dec    eax
  41dddd:	jp     0x41de04
  41dddf:	addr16 jno 0x41ddad
  41dde2:	(bad)  
  41dde3:	lahf   
  41dde4:	(bad)  
  41dde5:	aad    0x36
  41dde7:	push   ss
  41dde8:	in     al,dx
  41dde9:	pop    ecx
  41ddea:	outs   dx,DWORD PTR ds:[esi]
  41ddeb:	dec    esi
  41ddec:	or     eax,0x244f3021
  41ddf1:	jecxz  0x41de57
  41ddf3:	mov    esp,0xd55f7454
  41ddf8:	fcom   QWORD PTR [esi+ebx*4]
  41ddfb:	enter  0xf6cf,0xdf
  41ddff:	and    bl,cl
  41de01:	in     al,0xb4
  41de03:	fs fwait
  41de05:	and    esi,eax
  41de07:	mov    bh,0xbd
  41de09:	(bad)  
  41de0b:	sar    BYTE PTR [ebp-0xe],cl
  41de0e:	mov    cl,0xea
  41de10:	xchg   ecx,eax
  41de11:	push   0xffffff8e
  41de13:	not    dh
  41de15:	dec    ebx
  41de16:	(bad)  
  41de18:	cld    
  41de19:	jge    0x41de1a
  41de1b:	scas   al,BYTE PTR es:[edi]
  41de1c:	std    
  41de1d:	ficom  DWORD PTR [esi]
  41de1f:	pop    edx
  41de21:	push   ebp
  41de22:	or     bh,al
  41de24:	jns    0x41de53
  41de26:	stc    
  41de27:	stos   BYTE PTR es:[edi],al
  41de28:	leavew 
  41de2a:	adc    BYTE PTR [ecx+0x4aff98ae],cl
  41de30:	jg     0x41de2b
  41de32:	shl    BYTE PTR [eax+ecx*4-0x4a477c6f],cl
  41de39:	(bad)  
  41de3a:	push   0x48f24530
  41de3f:	xor    eax,0x33ae9392
  41de44:	fild   WORD PTR [eax-0xcfd461a]
  41de4a:	sahf   
  41de4b:	adc    edx,DWORD PTR [ebx]
  41de4d:	xchg   ebp,eax
  41de4e:	xor    edx,DWORD PTR [ebx+0x3d654c7f]
  41de54:	hlt    
  41de55:	mov    dl,0x8a
  41de57:	adc    dh,BYTE PTR [edi+ecx*4]
  41de5a:	cmp    ah,BYTE PTR [edx-0x4]
  41de5d:	dec    edi
  41de5e:	push   ss
  41de5f:	pop    ss
  41de60:	fwait
  41de61:	cmp    ebx,edi
  41de63:	lea    eax,[edi-0x1c1e741d]
  41de69:	cmc    
  41de6a:	in     al,dx
  41de6b:	pop    ebp
  41de6c:	aas    
  41de6d:	and    BYTE PTR [ebp-0x50f26a1],0x8d
  41de74:	test   al,0x12
  41de76:	in     al,dx
  41de77:	cmp    dh,BYTE PTR [edi+0x40]
  41de7a:	aam    0xb9
  41de7c:	ss and ax,0xb694
  41de81:	aad    0x96
  41de83:	jbe    0x41dee8
  41de85:	jge    0x41dee6
  41de87:	sar    BYTE PTR [ebx-0x352d41ba],cl
  41de8d:	retf   
  41de8e:	sbb    eax,esp
  41de90:	mov    BYTE PTR [edx],ah
  41de92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de93:	pusha  
  41de94:	mov    eax,ds:0x1af5856d
  41de99:	and    DWORD PTR [ebx+0x336d35c9],ebx
  41de9f:	push   ecx
  41dea0:	dec    ebx
  41dea1:	and    edx,DWORD PTR [ebp-0x1f]
  41dea4:	mov    esp,0x6a4986c4
  41dea9:	daa    
  41deaa:	add    esi,DWORD PTR [ebx-0x63]
  41dead:	ret    
  41deae:	add    BYTE PTR [eax-0x5b],dh
  41deb1:	sub    al,0x90
  41deb3:	cmp    BYTE PTR [ebp-0x2a6b853d],bh
  41deb9:	inc    edi
  41deba:	iret   
  41debb:	out    0x7d,al
  41debd:	or     edx,DWORD PTR [ecx-0x47ee5dbd]
  41dec3:	push   cs
  41dec4:	sub    BYTE PTR [esi+0x7cd3ea19],0x49
  41decb:	xor    al,0xc3
  41decd:	lods   al,BYTE PTR ds:[esi]
  41dece:	pop    es
  41decf:	inc    esi
  41ded0:	and    DWORD PTR [edx],esi
  41ded2:	dec    ecx
  41ded3:	sbb    al,0xe7
  41ded5:	ret    
  41ded6:	push   cs
  41ded7:	popa   
  41ded8:	mov    cl,0x6d
  41deda:	adc    DWORD PTR [ebp-0x6790804b],eax
  41dee0:	pop    edx
  41dee1:	scas   eax,DWORD PTR es:[edi]
  41dee2:	xchg   ebp,eax
  41dee3:	loop   0x41df0a
  41dee5:	inc    eax
  41dee6:	push   cs
  41dee7:	cli    
  41dee8:	retf   
  41dee9:	mov    eax,ds:0x938274e0
  41deee:	push   esi
  41deef:	jb     0x41df24
  41def1:	cmp    edi,DWORD PTR [esi+0x7156992b]
  41def7:	outs   dx,BYTE PTR ds:[esi]
  41def8:	pop    ss
  41def9:	leave  
  41defa:	add    eax,0xdff7b86e
  41deff:	xchg   ebp,eax
  41df00:	ins    BYTE PTR es:[edi],dx
  41df01:	cld    
  41df02:	aad    0xf9
  41df04:	test   al,dl
  41df06:	mov    esi,0x39eed20
  41df0b:	dec    ebp
  41df0c:	rol    DWORD PTR [esi],0x4c
  41df0f:	fwait
  41df10:	mov    ah,0x19
  41df12:	scas   eax,DWORD PTR es:[edi]
  41df13:	dec    ebp
  41df14:	leave  
  41df15:	in     al,dx
  41df16:	shl    BYTE PTR [edx+0x64ff3a93],cl
  41df1c:	cmp    DWORD PTR gs:[edx-0x6a9c740a],edi
  41df23:	dec    ebx
  41df24:	je     0x41ded0
  41df26:	fiadd  DWORD PTR [ebp+ecx*4-0x2b3bb9ad]
  41df2d:	cld    
  41df2e:	add    DWORD PTR ds:0xfb5a1cc8,ecx
  41df34:	or     BYTE PTR [edx],bh
  41df36:	lahf   
  41df37:	dec    edi
  41df38:	arpl   dx,cx
  41df3a:	shr    DWORD PTR [ecx+0x13397eb8],1
  41df40:	jno    0x41df98
  41df42:	(bad)  
  41df43:	dec    BYTE PTR [ebx+ebp*8+0x17b5c665]
  41df4a:	shl    BYTE PTR [eax+0x63],0xc3
  41df4e:	pop    edx
  41df4f:	xor    al,0xb1
  41df51:	pop    eax
  41df52:	or     al,0x96
  41df54:	and    al,bh
  41df56:	scas   eax,DWORD PTR es:[edi]
  41df57:	mov    eax,0x45cd0b61
  41df5c:	fnstenv [ebx]
  41df5e:	sub    edx,DWORD PTR [edx+0x34]
  41df61:	mov    ebp,0xb6508753
  41df66:	xor    al,0x94
  41df68:	xchg   ecx,eax
  41df69:	out    dx,al
  41df6a:	fcmovu st,st(4)
  41df6c:	cmp    DWORD PTR [edx+edi*2-0x192b179f],eax
  41df73:	mov    eax,ds:0x76fbdfcd
  41df78:	imul   ebp,DWORD PTR [edi+0x4bcb2dd2],0xff094ccd
  41df82:	jle    0x41df49
  41df84:	cli    
  41df85:	adc    BYTE PTR [ecx],dh
  41df87:	inc    ebx
  41df88:	(bad)  
  41df89:	push   esi
  41df8a:	je     0x41df4c
  41df8c:	les    ebx,FWORD PTR [esi-0x7]
  41df8f:	xchg   BYTE PTR [ecx],cl
  41df91:	jb     0x41e011
  41df93:	xor    esi,0x51
  41df96:	and    ah,BYTE PTR [eax-0x2b841675]
  41df9c:	or     bh,dh
  41df9e:	inc    edx
  41df9f:	(bad)
  41dfa2:	pushf  
  41dfa3:	fucomi st,st(1)
  41dfa5:	loopne 0x41e023
  41dfa7:	hlt    
  41dfa8:	scas   al,BYTE PTR es:[edi]
  41dfa9:	sub    DWORD PTR [ecx+ebp*1+0x75],eax
  41dfad:	push   esp
  41dfae:	(bad)  
  41dfaf:	mov    bl,0x41
  41dfb1:	sbb    BYTE PTR [edx+ebx*2-0x5285ce9],bh
  41dfb8:	jecxz  0x41df6b
  41dfba:	dec    eax
  41dfbb:	in     al,0x4d
  41dfbd:	(bad)  
  41dfbe:	cs jno 0x41dfa2
  41dfc1:	dec    ecx
  41dfc2:	jl     0x41dfe2
  41dfc4:	jecxz  0x41e013
  41dfc6:	jge    0x41df71
  41dfc8:	inc    esi
  41dfc9:	in     al,dx
  41dfca:	adc    edi,DWORD PTR [ebx]
  41dfcc:	push   esp
  41dfcd:	lods   al,BYTE PTR ds:[esi]
  41dfce:	push   ds
  41dfcf:	cli    
  41dfd0:	cmc    
  41dfd1:	scas   eax,DWORD PTR es:[edi]
  41dfd2:	in     eax,0xf2
  41dfd4:	xor    DWORD PTR [ebp-0x3f0405b6],esi
  41dfda:	es or  cl,al
  41dfdd:	xor    edx,DWORD PTR [esp+eax*8-0x15c616a]
  41dfe4:	push   ebx
  41dfe5:	or     dl,cl
  41dfe7:	test   al,0xa
  41dfe9:	push   ebp
  41dfea:	lock je 0x41e033
  41dfed:	jmp    0x9c20d436
  41dff2:	fcom   DWORD PTR [esi+0x60]
  41dff5:	and    BYTE PTR [ebx-0x1d97c798],dh
  41dffb:	icebp  
  41dffc:	xchg   DWORD PTR [ebx-0x6dbc748d],ebp
  41e002:	imul   ebx,DWORD PTR [edi+0x2],0x9
  41e006:	fmulp  st(5),st
  41e008:	neg    ch
  41e00a:	rcr    BYTE PTR [edx+eax*4+0x42],0x70
  41e00f:	fcom   QWORD PTR [esi-0x79]
  41e012:	inc    ebx
  41e013:	sub    eax,0x5ec0015
  41e018:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e019:	pop    eax
  41e01a:	daa    
  41e01b:	xlat   BYTE PTR ds:[ebx]
  41e01c:	push   edi
  41e01d:	pop    es
  41e01e:	xchg   ecx,eax
  41e01f:	aas    
  41e020:	push   ss
  41e021:	sub    DWORD PTR [esi+0x5d],0xc41bd5cd
  41e028:	mov    ds:0xfb574c49,al
  41e02d:	and    bh,BYTE PTR [edi+0x16]
  41e030:	stos   BYTE PTR es:[edi],al
  41e031:	js     0x41e0b1
  41e033:	js     0x41e074
  41e035:	cmp    al,0x1e
  41e037:	dec    edi
  41e038:	push   ecx
  41e039:	fimul  DWORD PTR [edi+0x6]
  41e03c:	xor    eax,0x398740ad
  41e041:	lods   al,BYTE PTR ds:[esi]
  41e042:	je     0x41e055
  41e044:	jbe    0x41e0bc
  41e046:	ins    DWORD PTR es:[edi],dx
  41e047:	mov    dl,0x94
  41e049:	mov    ebp,0xb755ca19
  41e04e:	fild   DWORD PTR [ebx+0x36]
  41e051:	test   ah,ah
  41e053:	mov    dl,0x2b
  41e055:	popf   
  41e056:	xor    al,0xe8
  41e058:	add    eax,esi
  41e05a:	mov    dl,0xbe
  41e05c:	xchg   edi,eax
  41e05d:	pop    es
  41e05e:	jg     0x41e06a
  41e060:	cmp    DWORD PTR [edx+0x32],edi
  41e063:	mov    dl,0xd2
  41e065:	stos   DWORD PTR es:[edi],eax
  41e066:	js     0x41e089
  41e068:	ret    
  41e069:	in     eax,0x38
  41e06b:	ins    BYTE PTR es:[edi],dx
  41e06c:	in     al,dx
  41e06d:	cmp    bl,BYTE PTR [esi-0x15f524c]
  41e073:	cmp    al,0xda
  41e075:	lock mov ds:0xcdb15871,al
  41e07b:	leave  
  41e07c:	jecxz  0x41e03a
  41e07e:	sub    al,0xca
  41e080:	mov    ds:0x3703454a,al
  41e085:	(bad)  
  41e086:	cmp    bl,BYTE PTR [ecx-0x4be62de2]
  41e08c:	sbb    edi,DWORD PTR [ebp-0x7a]
  41e08f:	sub    BYTE PTR [ebx-0x279f5c2d],0xc9
  41e096:	push   esp
  41e097:	xchg   esi,eax
  41e098:	inc    edx
  41e099:	fst    DWORD PTR [edi+0x7aab6baa]
  41e09f:	cmc    
  41e0a0:	retf   
  41e0a1:	inc    esp
  41e0a2:	mov    edi,0x13dae9e5
  41e0a7:	pop    es
  41e0a8:	inc    ecx
  41e0a9:	push   0xffffffd4
  41e0ab:	(bad)  
  41e0ac:	mov    ?,WORD PTR [eax-0x4bb16059]
  41e0b2:	fidivr DWORD PTR [ebp+0x25]
  41e0b5:	sub    edi,DWORD PTR [ebx+0xb]
  41e0b8:	jns    0x41e11b
  41e0ba:	push   esp
  41e0bb:	push   es
  41e0bc:	xchg   esp,eax
  41e0bd:	or     eax,0x2cf99c12
  41e0c2:	not    DWORD PTR [ebp+eiz*1+0xf93d36a]
  41e0c9:	and    BYTE PTR [ebx-0x73],0x6d
  41e0cd:	sbb    ah,BYTE PTR [ebp-0x75]
  41e0d0:	adc    eax,0xeffba4c6
  41e0d5:	sbb    bh,BYTE PTR [edi+ebx*8+0x5139e64f]
  41e0dc:	fwait
  41e0dd:	adc    dl,BYTE PTR ds:0xec29e534
  41e0e3:	sahf   
  41e0e4:	sub    DWORD PTR [esi-0x11d1e63e],0x49
  41e0eb:	das    
  41e0ec:	dec    edx
  41e0ed:	sar    DWORD PTR [eax+0x6a388fe6],1
  41e0f3:	es stc 
  41e0f5:	rol    BYTE PTR [edx+eiz*1],cl
  41e0f8:	je     0x41e07e
  41e0fa:	or     eax,0x92e525ee
  41e0ff:	and    cl,BYTE PTR [ebx-0x3c]
  41e102:	addr16 xchg esp,eax
  41e104:	scas   al,BYTE PTR es:[edi]
  41e105:	lock or DWORD PTR ds:[ebx],ebx
  41e109:	int    0xac
  41e10b:	stc    
  41e10c:	clc    
  41e10d:	mov    cl,0xe
  41e10f:	das    
  41e110:	repnz push edi
  41e112:	jmp    0x6e0d:0x2dcb246b
  41e119:	jbe    0x41e131
  41e11b:	cmp    edi,DWORD PTR [ecx+edi*4]
  41e11e:	push   es
  41e11f:	cmc    
  41e120:	mov    ebp,ecx
  41e122:	enter  0xbe64,0x1c
  41e126:	adc    al,0x2a
  41e128:	cmp    eax,0x69dd0ab0
  41e12d:	inc    ebx
  41e12e:	mov    al,ds:0x7eb01aa5
  41e133:	or     DWORD PTR [eax],0xffffffcd
  41e136:	test   DWORD PTR [eax+edi*8+0x5a],esi
  41e13a:	inc    ecx
  41e13b:	fsub   DWORD PTR [ebx+esi*2+0x40f6af75]
  41e142:	enter  0x91a9,0xd
  41e146:	retf   
  41e147:	ins    BYTE PTR es:[edi],dx
  41e148:	popf   
  41e149:	sbb    ecx,DWORD PTR [ecx+0x59]
  41e14c:	loopne 0x41e122
  41e14e:	xor    bh,BYTE PTR [esi-0x1425561c]
  41e154:	push   cs
  41e155:	(bad)  
  41e156:	popf   
  41e157:	sub    esp,edi
  41e159:	xchg   ecx,eax
  41e15a:	lods   eax,DWORD PTR ds:[esi]
  41e15b:	imul   ecx
  41e15d:	fs sbb al,0xab
  41e160:	out    0x15,al
  41e162:	pop    ebp
  41e163:	push   ss
  41e164:	adc    BYTE PTR [ecx+0x27],ch
  41e167:	dec    esi
  41e168:	jne    0x41e1c2
  41e16a:	mov    gs,WORD PTR [esi+0x1]
  41e16d:	push   0xa7b3a3f6
  41e172:	sbb    esp,DWORD PTR [eax]
  41e174:	sti    
  41e175:	call   0x2bb1755e
  41e17a:	sub    al,0xb6
  41e17c:	add    DWORD PTR [eax+0x784e37a1],ecx
  41e182:	dec    ebx
  41e183:	xchg   ecx,eax
  41e184:	xor    BYTE PTR [ebp-0x6f7ccaef],ch
  41e18a:	(bad)  
  41e18b:	sbb    BYTE PTR [ecx+0x35],dh
  41e18e:	scas   eax,DWORD PTR es:[edi]
  41e18f:	(bad)  
  41e190:	ret    0x955
  41e193:	js     0x41e189
  41e195:	(bad)  
  41e196:	sub    eax,0xe9418e32
  41e19b:	movnti DWORD PTR [edx+0x63e477d4],esp
  41e1a2:	jp     0x41e142
  41e1a4:	jmp    0x353a2f11
  41e1a9:	enter  0x342b,0x56
  41e1ad:	outs   dx,BYTE PTR ds:[esi]
  41e1ae:	xor    BYTE PTR [ebp+edi*2+0x6d],0xd3
  41e1b3:	pop    eax
  41e1b4:	sub    DWORD PTR [ecx],0x5b
  41e1b7:	sets   BYTE PTR [edx+0x76]
  41e1bb:	stc    
  41e1bc:	mov    ebx,0x3bcccef2
  41e1c1:	mov    bh,0xa4
  41e1c3:	or     BYTE PTR [edi-0x22],cl
  41e1c6:	jle    0x41e1e6
  41e1c8:	ret    
  41e1c9:	std    
  41e1ca:	add    DWORD PTR [ebx],ebx
  41e1cc:	mov    ebx,DWORD PTR [esi+0x37]
  41e1cf:	mov    eax,ds:0xc00b6353
  41e1d4:	pop    esi
  41e1d5:	and    cl,BYTE PTR [ebx+0x54]
  41e1d8:	sbb    esi,ebp
  41e1da:	call   0xb317ab34
  41e1df:	xor    cl,0xa8
  41e1e2:	inc    ebx
  41e1e3:	dec    edx
  41e1e4:	call   0x69fb:0xf3937290
  41e1eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1ec:	arpl   WORD PTR [eax],bp
  41e1ee:	sbb    bh,BYTE PTR [ebx-0x490d97a5]
  41e1f4:	aaa    
  41e1f5:	in     eax,dx
  41e1f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1f7:	mov    edi,0xdceedac
  41e1fc:	add    eax,0x88b09ab4
  41e201:	or     DWORD PTR [edi],ecx
  41e203:	mov    ch,0xcb
  41e205:	inc    eax
  41e206:	and    al,0xdf
  41e208:	clc    
  41e209:	mov    esi,0x9135598a
  41e20e:	retf   
  41e20f:	lods   eax,DWORD PTR ds:[esi]
  41e210:	sti    
  41e211:	jge    0x41e283
  41e213:	jno    0x41e255
  41e215:	sahf   
  41e216:	scas   eax,DWORD PTR es:[edi]
  41e217:	in     al,dx
  41e218:	sub    al,0x98
  41e21a:	in     eax,dx
  41e21b:	jne    0x41e251
  41e21d:	imul   ebx,DWORD PTR [ebx],0xffffffa6
  41e220:	out    0xde,al
  41e222:	popa   
  41e223:	imul   esp,DWORD PTR ds:0x8143973,0x3f1915a
  41e22d:	jnp    0x41e207
  41e22f:	popa   
  41e230:	(bad)  
  41e233:	ss stc 
  41e235:	sbb    dh,BYTE PTR [edi-0x4e22f293]
  41e23b:	ror    eax,0xff
  41e23e:	jecxz  0x41e1da
  41e240:	imul   edx,DWORD PTR [esi-0x331bce9e],0x34
  41e247:	cmp    bl,BYTE PTR [edi-0x61]
  41e24a:	(bad)  
  41e24b:	fldlg2 
  41e24d:	sbb    BYTE PTR [ebx+esi*1],ah
  41e250:	rcl    BYTE PTR [esp+edx*4],1
  41e253:	aam    0x26
  41e255:	push   ss
  41e256:	in     eax,0x50
  41e258:	call   0xc6ef:0x629f1df
  41e25f:	sbb    eax,0xbdd6d2f4
  41e264:	xchg   ebp,eax
  41e265:	jbe    0x41e219
  41e267:	push   esi
  41e268:	fstp   DWORD PTR [edx+0x46]
  41e26b:	out    0x2a,eax
  41e26d:	dec    esi
  41e26e:	rol    DWORD PTR [eax+eiz*2-0x44],0x90
  41e273:	pop    ecx
  41e274:	int3   
  41e275:	outs   dx,BYTE PTR ds:[esi]
  41e276:	inc    edi
  41e277:	mov    ebx,0xb663dffa
  41e27c:	sub    esp,edx
  41e27e:	cdq    
  41e27f:	rcr    BYTE PTR ds:0x864d2905,cl
  41e285:	xor    ebx,DWORD PTR [ebp-0x439afdfd]
  41e28b:	fisttp WORD PTR [esi]
  41e28d:	aad    0xd4
  41e28f:	pop    es
  41e290:	jno    0x41e302
  41e292:	sti    
  41e293:	gs sub eax,0xb2a2381c
  41e299:	xchg   al,ah
  41e29b:	adc    eax,0x616bde9f
  41e2a0:	xor    ch,BYTE PTR [ebx+0x6030a729]
  41e2a6:	pushf  
  41e2a7:	inc    edi
  41e2a8:	mov    dh,0x70
  41e2aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2ab:	rcr    DWORD PTR [ebx-0x56],cl
  41e2ae:	stc    
  41e2af:	ins    DWORD PTR es:[edi],dx
  41e2b0:	scas   al,BYTE PTR es:[edi]
  41e2b1:	aas    
  41e2b2:	fdiv   DWORD PTR [esi]
  41e2b4:	lahf   
  41e2b5:	sub    al,0xc6
  41e2b7:	fs lahf 
  41e2b9:	and    ebp,ebp
  41e2bb:	push   esp
  41e2bc:	jle    0x41e258
  41e2be:	das    
  41e2bf:	daa    
  41e2c0:	pop    esp
  41e2c1:	out    0x43,eax
  41e2c3:	xor    ebp,ecx
  41e2c5:	shl    DWORD PTR [edx],0x2a
  41e2c8:	cld    
  41e2c9:	cmp    edi,ecx
  41e2cb:	dec    eax
  41e2cc:	daa    
  41e2cd:	xchg   esi,eax
  41e2ce:	aaa    
  41e2cf:	rdmsr  
  41e2d1:	add    eax,0x3d978b27
  41e2d6:	push   edx
  41e2d7:	mov    al,ds:0x3f9ae5b9
  41e2dc:	arpl   WORD PTR [ebx-0x2425a1ca],bp
  41e2e2:	dec    esp
  41e2e3:	jo     0x41e30f
  41e2e5:	call   0xed18:0x79865729
  41e2ec:	adc    BYTE PTR [ecx+ebp*2],ch
  41e2ef:	push   es
  41e2f0:	in     al,dx
  41e2f1:	pusha  
  41e2f2:	mov    ecx,0x30b524e3
  41e2f7:	enter  0xff7d,0x7
  41e2fb:	jns    0x41e30c
  41e2fd:	jae    0x41e318
  41e2ff:	lds    esp,FWORD PTR ds:0xd062396e
  41e305:	in     al,0xd0
  41e307:	or     eax,0xba5b12e6
  41e30c:	lahf   
  41e30d:	xor    al,0xad
  41e30f:	and    al,0x54
  41e311:	pushf  
  41e312:	test   BYTE PTR [ebp+0x76acf0c8],bl
  41e318:	scas   eax,DWORD PTR es:[edi]
  41e319:	popa   
  41e31a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e31b:	or     ch,dh
  41e31d:	pop    esi
  41e31e:	fnstsw WORD PTR [ecx-0x4b32910f]
  41e324:	xchg   esi,eax
  41e325:	xchg   ebp,eax
  41e326:	ror    BYTE PTR ds:0x1fb382fd,1
  41e32c:	lods   eax,DWORD PTR ds:[esi]
  41e32d:	imul   eax,DWORD PTR [edi],0x5740588a
  41e333:	fild   WORD PTR [eax+ebx*4]
  41e336:	js     0x41e2ce
  41e338:	sbb    eax,0xcf1959ca
  41e33d:	push   edi
  41e33e:	mov    ebp,0xd0f69d59
  41e343:	dec    eax
  41e344:	jno    0x41e385
  41e346:	pop    ds
  41e347:	outs   dx,DWORD PTR ds:[esi]
  41e348:	xchg   DWORD PTR [edx+0x6],esp
  41e34b:	sti    
  41e34c:	test   eax,0x5298175
  41e352:	xor    bl,BYTE PTR [eax]
  41e354:	arpl   WORD PTR [edi-0x2],bx
  41e357:	sbb    edi,ebp
  41e359:	leave  
  41e35a:	je     0x41e384
  41e35c:	adc    al,0xf
  41e35e:	in     eax,0xb
  41e360:	xlat   BYTE PTR ds:[ebx]
  41e361:	or     eax,0x998baaaa
  41e366:	mov    bh,BYTE PTR [esi+0x1]
  41e369:	dec    esi
  41e36a:	pop    ecx
  41e36b:	in     al,dx
  41e36c:	outs   dx,BYTE PTR ds:[esi]
  41e36d:	and    al,0xb1
  41e36f:	mov    esi,0xf0100adf
  41e374:	ret    0xd5a
  41e377:	shr    bl,cl
  41e379:	dec    edx
  41e37a:	mov    ebx,0xbb1519f0
  41e37f:	xchg   edi,eax
  41e380:	and    ebp,DWORD PTR [eax]
  41e382:	adc    al,0xb6
  41e384:	jne    0x41e35a
  41e386:	inc    edi
  41e387:	retf   0x3a0d
  41e38a:	js     0x41e32f
  41e38c:	js     0x41e33d
  41e38e:	fyl2x  
  41e390:	dec    eax
  41e391:	std    
  41e392:	xor    BYTE PTR [ebp-0x3c],dh
  41e395:	sar    DWORD PTR [ebx],0xce
  41e398:	mov    eax,0x61685559
  41e39d:	sbb    eax,0xd0fb998f
  41e3a2:	aaa    
  41e3a3:	pop    ds
  41e3a4:	ins    BYTE PTR es:[edi],dx
  41e3a5:	not    ebp
  41e3a7:	jbe    0x41e415
  41e3a9:	mov    dh,0xfd
  41e3ab:	push   0xffffff8d
  41e3ad:	cmp    ebp,edi
  41e3af:	clc    
  41e3b0:	mov    al,ds:0x6148d0f8
  41e3b5:	je     0x41e398
  41e3b7:	push   ds
  41e3b8:	loop   0x41e3b2
  41e3ba:	pop    edx
  41e3bb:	dec    ecx
  41e3bc:	call   0x593a1ef4
  41e3c1:	cmp    eax,0x77ae73d8
  41e3c6:	test   al,0x45
  41e3c8:	test   DWORD PTR [esi+0x663d13f7],esp
  41e3ce:	ret    
  41e3cf:	inc    esp
  41e3d0:	repnz fs or eax,0x815c35b6
  41e3d7:	inc    ebx
  41e3d8:	sbb    eax,0x86242fc0
  41e3dd:	leave  
  41e3de:	nop
  41e3df:	adc    bl,0x11
  41e3e2:	jg     0x41e3ee
  41e3e4:	jne    0x41e455
  41e3e6:	xlat   BYTE PTR ds:[ebx]
  41e3e7:	inc    esp
  41e3e8:	stos   BYTE PTR es:[edi],al
  41e3e9:	sub    eax,0x97f6d126
  41e3ee:	jle    0x41e43d
  41e3f0:	mov    esp,0x6f885069
  41e3f5:	popf   
  41e3f6:	sbb    eax,0xed414a78
  41e3fb:	mov    al,ds:0xde3ac1bb
  41e400:	lods   al,BYTE PTR ds:[esi]
  41e401:	sbb    DWORD PTR [ebx-0x71c99507],ebp
  41e407:	sub    DWORD PTR [edi+0x420bf7ac],eax
  41e40d:	adc    ecx,DWORD PTR [ebp+esi*8-0x779d9e22]
  41e414:	jae    0x41e472
  41e416:	pop    edi
  41e417:	nop
  41e418:	loope  0x41e467
  41e41a:	mov    ds:0xa380c5bd,al
  41e41f:	mov    ds,WORD PTR [esi]
  41e421:	into   
  41e422:	sbb    ebx,DWORD PTR [esi+0x5f]
  41e425:	jnp    0x41e437
  41e427:	gs stc 
  41e429:	pushf  
  41e42a:	sbb    DWORD PTR [eax-0x383f70cd],ebx
  41e430:	in     eax,dx
  41e431:	fiadd  WORD PTR [edi]
  41e433:	mov    edi,0xcafae874
  41e438:	mov    esp,0x1b77090f
  41e43d:	and    ah,al
  41e43f:	ja     0x41e3d7
  41e441:	jp     0x41e45a
  41e443:	adc    dl,BYTE PTR [edx]
  41e445:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e446:	das    
  41e447:	jmp    0x41e48b
  41e449:	in     al,0x64
  41e44b:	cmc    
  41e44c:	cmp    BYTE PTR [edi-0x66],ch
  41e44f:	jp     0x41e4be
  41e451:	jge    0x41e4c4
  41e453:	mov    bh,0x7
  41e455:	jno    0x41e452
  41e457:	sub    eax,0xb242ec12
  41e45c:	dec    esi
  41e45d:	inc    edx
  41e45e:	cmp    DWORD PTR ss:[ebx+eiz*2-0x2e5d6c9d],eax
  41e466:	pop    esp
  41e467:	das    
  41e468:	fwait
  41e469:	inc    eax
  41e46a:	lods   eax,DWORD PTR ds:[esi]
  41e46b:	stos   DWORD PTR es:[edi],eax
  41e46c:	push   ecx
  41e46d:	stos   DWORD PTR es:[edi],eax
  41e46e:	push   0xbcad340c
  41e473:	mov    BYTE PTR [esi-0x24],bl
  41e476:	push   0xd7e3db40
  41e47b:	and    eax,0xb431ad29
  41e480:	cld    
  41e481:	inc    ebp
  41e482:	icebp  
  41e483:	dec    edi
  41e484:	xchg   ebx,eax
  41e485:	ja     0x41e492
  41e487:	mov    bh,0x8b
  41e489:	xor    DWORD PTR [eax],esp
  41e48b:	cmp    al,bh
  41e48d:	ds stos BYTE PTR es:[edi],al
  41e48f:	dec    dx
  41e491:	jl     0x41e43d
  41e493:	fwait
  41e494:	sar    BYTE PTR [esi-0x5e],0x48
  41e498:	scas   al,BYTE PTR es:[edi]
  41e499:	fwait
  41e49a:	lods   eax,DWORD PTR ds:[esi]
  41e49b:	push   esp
  41e49c:	pop    es
  41e49d:	inc    ebx
  41e49e:	in     al,dx
  41e49f:	xchg   esp,eax
  41e4a0:	push   ecx
  41e4a1:	test   al,0x8e
  41e4a3:	lods   eax,DWORD PTR ds:[esi]
  41e4a4:	les    ebx,FWORD PTR ds:0x5d53e921
  41e4aa:	stc    
  41e4ab:	loopne 0x41e45d
  41e4ad:	adc    esi,edi
  41e4af:	sbb    BYTE PTR [ebp-0x7a2cdb7e],cl
  41e4b5:	loopne 0x41e4ba
  41e4b7:	inc    esp
  41e4b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4b9:	not    DWORD PTR [edx]
  41e4bb:	cmp    eax,esi
  41e4bd:	cmp    esi,DWORD PTR ds:0xc9789982
  41e4c3:	or     al,0x39
  41e4c5:	and    BYTE PTR [eax],ch
  41e4c7:	xor    ecx,DWORD PTR [esi-0x1be17bc4]
  41e4cd:	jmp    0x41e488
  41e4cf:	aaa    
  41e4d0:	xchg   ecx,eax
  41e4d1:	dec    ecx
  41e4d2:	cmp    BYTE PTR [eax-0x5f],ch
  41e4d5:	xor    ebx,DWORD PTR [eax+0x66d6f963]
  41e4db:	aam    0x73
  41e4dd:	nop
  41e4de:	scas   al,BYTE PTR es:[edi]
  41e4df:	push   edx
  41e4e0:	hlt    
  41e4e1:	pop    edi
  41e4e2:	push   ebx
  41e4e3:	pop    edx
  41e4e4:	sar    eax,cl
  41e4e6:	xchg   edx,eax
  41e4e7:	lds    eax,FWORD PTR gs:[esi+0x3]
  41e4eb:	mov    edx,0x3656a297
  41e4f0:	mov    edi,0x7eded11c
  41e4f5:	xor    al,0xd4
  41e4f7:	popf   
  41e4f8:	xchg   BYTE PTR [eax+edi*2+0x39],dh
  41e4fc:	(bad)  
  41e4fd:	mov    edx,0xeba5fdd2
  41e502:	sbb    eax,0xec494d20
  41e507:	dec    edi
  41e508:	arpl   WORD PTR [ebp+0xf],ax
  41e50b:	push   0xcb968460
  41e510:	in     eax,0x4b
  41e512:	lahf   
  41e513:	fdiv   DWORD PTR [ecx+0x61]
  41e516:	popf   
  41e517:	pop    DWORD PTR [ebp+0x7c]
  41e51a:	lock enterw 0xb2a2,0x4a
  41e520:	xchg   esi,eax
  41e521:	and    eax,0x141a47d6
  41e526:	fwait
  41e527:	outs   dx,DWORD PTR ds:[esi]
  41e528:	repz jl 0x41e577
  41e52b:	cmp    esp,ebp
  41e52d:	stos   BYTE PTR es:[edi],al
  41e52e:	js     0x41e51b
  41e530:	cmp    BYTE PTR [eax],ah
  41e532:	mov    ss,WORD PTR [edx-0x75ed9495]
  41e538:	mov    ds:0x5a75cd1,eax
  41e53d:	stc    
  41e53e:	or     DWORD PTR [esi],esi
  41e540:	mov    ds:0x59b81636,eax
  41e545:	popf   
  41e546:	add    ecx,DWORD PTR [ebx]
  41e548:	or     al,BYTE PTR [eax+ebp*1+0x6ea62260]
  41e54f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e550:	pop    edx
  41e551:	inc    ebp
  41e552:	xlat   BYTE PTR ds:[ebx]
  41e553:	aaa    
  41e554:	push   cs
  41e555:	dec    edi
  41e556:	ins    DWORD PTR es:[edi],dx
  41e557:	jne    0x41e5b4
  41e559:	shr    DWORD PTR [ebx-0x11884535],0xfc
  41e560:	cmp    eax,0xf543909d
  41e565:	jg     0x41e508
  41e567:	cmovnp ebp,DWORD PTR fs:[edx]
  41e56b:	and    DWORD PTR [ebp-0x252861ce],edx
  41e571:	shl    bl,1
  41e573:	or     edx,esi
  41e575:	mov    es,WORD PTR [edi]
  41e577:	adc    eax,0xfd1577ac
  41e57c:	dec    edx
  41e57d:	dec    ecx
  41e57e:	dec    edx
  41e57f:	test   al,0x72
  41e581:	mov    ah,0x3d
  41e583:	jno    0x41e53c
  41e585:	js     0x41e59c
  41e587:	int    0x25
  41e589:	sub    cl,bh
  41e58b:	push   eax
  41e58c:	mov    ah,0x66
  41e58e:	xchg   ecx,eax
  41e58f:	xchg   esi,eax
  41e590:	or     eax,0x6469404d
  41e595:	add    al,0x8f
  41e597:	or     DWORD PTR [ebx+0x4f],esp
  41e59a:	fidivr WORD PTR [esi-0x20]
  41e59d:	mov    esp,0x3f804b02
  41e5a2:	and    dl,BYTE PTR [ebx+0x5ff3dff9]
  41e5a8:	enter  0x24d,0x28
  41e5ac:	xor    ebp,DWORD PTR [ecx-0x7a180d95]
  41e5b2:	aas    
  41e5b3:	jmp    0x41e593
  41e5b5:	push   esp
  41e5b6:	mov    al,0x89
  41e5b8:	mov    esi,0x942df66b
  41e5bd:	(bad)  
  41e5bf:	retf   
  41e5c0:	inc    esi
  41e5c1:	enter  0x6784,0xeb
  41e5c5:	lods   eax,DWORD PTR ds:[esi]
  41e5c6:	int3   
  41e5c7:	ror    DWORD PTR ds:0x1abae59f,0xf6
  41e5ce:	out    0xf2,al
  41e5d0:	(bad)  
  41e5d1:	cmp    eax,0x2b92e3d2
  41e5d6:	popa   
  41e5d7:	(bad)  
  41e5d8:	nop
  41e5d9:	clc    
  41e5da:	sbb    cl,BYTE PTR gs:0xede2c168
  41e5e1:	fcomi  st,st(5)
  41e5e3:	sub    eax,esi
  41e5e5:	cs (bad) 
  41e5e7:	mov    WORD PTR [eax-0x76a4107d],ds
  41e5ed:	cmp    edi,DWORD PTR [ebx-0x70]
  41e5f0:	call   0xed8:0xf81791ce
  41e5f7:	test   DWORD PTR [edi+edi*4],edi
  41e5fa:	addr16 call 0x9bb871c6
  41e600:	fild   DWORD PTR ds:0xe3e66002
  41e606:	inc    ebp
  41e607:	and    BYTE PTR [ecx+0x791d1df],ah
  41e60d:	dec    esp
  41e60e:	test   al,0xf6
  41e610:	sbb    eax,esi
  41e612:	shl    BYTE PTR [ebp+0x1f],1
  41e615:	sub    al,0xe8
  41e617:	hlt    
  41e618:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e619:	pop    ds
  41e61a:	mov    ebx,0x75f81439
  41e61f:	jbe    0x41e5e4
  41e621:	sub    eax,0x99f9719d
  41e626:	sbb    BYTE PTR [ebx+eiz*8-0x2464c630],ch
  41e62d:	cmp    edx,DWORD PTR [esi+eiz*1]
  41e630:	xchg   BYTE PTR [eax+0x4e6a1786],dh
  41e636:	int    0x73
  41e638:	adc    eax,0xf4c4af60
  41e63d:	and    DWORD PTR [edi],ebp
  41e63f:	pop    edx
  41e640:	pushf  
  41e641:	sub    al,0x97
  41e643:	add    BYTE PTR [edi+ecx*1],ah
  41e646:	cs arpl bp,ax
  41e649:	fisub  DWORD PTR [edx+edi*2-0x26]
  41e64d:	pop    ebx
  41e64e:	pop    eax
  41e64f:	xchg   ebx,eax
  41e650:	imul   ebx,esi,0xcb97fd08
  41e656:	in     eax,dx
  41e657:	ins    DWORD PTR es:[edi],dx
  41e658:	aam    0x83
  41e65a:	add    esp,DWORD PTR [esi-0x110b8f1b]
  41e660:	push   cs
  41e661:	lock push edx
  41e663:	(bad)  
  41e666:	pushf  
  41e667:	fstp   QWORD PTR [ecx+0x20]
  41e66a:	adc    BYTE PTR [ebx+0x56],0x7
  41e66e:	gs mov esp,0x91ed895c
  41e674:	mov    ebp,0x13dbc14a
  41e679:	push   edi
  41e67a:	sub    eax,0x2fc0c9d3
  41e67f:	stc    
  41e680:	sti    
  41e681:	jae    0x41e68f
  41e683:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e684:	mov    ds:0x471c4505,al
  41e689:	add    BYTE PTR [ecx],dl
  41e68b:	out    dx,eax
  41e68c:	inc    ecx
  41e68d:	out    dx,eax
  41e68e:	sub    BYTE PTR [esi+0xf],dl
  41e691:	(bad)  
  41e693:	dec    edi
  41e694:	daa    
  41e695:	outs   dx,DWORD PTR ds:[esi]
  41e696:	fprem1 
  41e698:	imul   ecx,DWORD PTR [edi-0x14],0x4513935d
  41e69f:	jns    0x41e64a
  41e6a1:	jnp    0x41e6e7
  41e6a3:	cwde   
  41e6a4:	mov    al,0x27
  41e6a6:	(bad)  
  41e6a7:	js     0x41e6e4
  41e6a9:	dec    edx
  41e6aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6ab:	sbb    DWORD PTR [esi+0x6e],edx
  41e6ae:	sbb    DWORD PTR [esi],0x2b83d365
  41e6b4:	pop    eax
  41e6b5:	jns    0x41e6e7
  41e6b7:	mov    dh,0x61
  41e6b9:	shr    BYTE PTR [edi+0x70],cl
  41e6bc:	add    bh,BYTE PTR [edi+0x50a7abb0]
  41e6c2:	sub    ah,ah
  41e6c4:	dec    edx
  41e6c5:	pop    eax
  41e6c6:	sub    edx,DWORD PTR [eax+esi*8-0x5c]
  41e6ca:	xor    al,0x46
  41e6cc:	or     DWORD PTR [ebx-0x2b],ebp
  41e6cf:	push   ss
  41e6d0:	scas   al,BYTE PTR es:[edi]
  41e6d1:	in     eax,dx
  41e6d2:	aas    
  41e6d3:	cmc    
  41e6d4:	mov    al,0xe4
  41e6d6:	adc    bl,BYTE PTR [ebp+0x40]
  41e6d9:	xchg   ebx,eax
  41e6da:	xor    DWORD PTR [ebx+0x1e],ebx
  41e6dd:	ins    BYTE PTR es:[edi],dx
  41e6de:	sbb    eax,0xa6c87172
  41e6e3:	inc    edi
  41e6e4:	mov    fs,WORD PTR [esi]
  41e6e6:	jmp    0x1666f39c
  41e6eb:	xchg   esp,eax
  41e6ec:	adc    eax,0xf0c6754f
  41e6f1:	mov    al,0xc1
  41e6f3:	into   
  41e6f4:	sahf   
  41e6f5:	jb     0x41e697
  41e6f7:	repz dec esi
  41e6f9:	inc    ecx
  41e6fa:	ret    
  41e6fb:	jge    0x41e6ad
  41e6fd:	iret   
  41e6fe:	pop    es
  41e6ff:	outs   dx,DWORD PTR ds:[esi]
  41e700:	and    edx,DWORD PTR [edi]
  41e702:	loope  0x41e6aa
  41e704:	xchg   BYTE PTR [edi],bl
  41e706:	jnp    0x41e6f4
  41e708:	xor    BYTE PTR [esi],0x15
  41e70b:	push   ss
  41e70c:	dec    edx
  41e70d:	out    dx,eax
  41e70e:	dec    esi
  41e70f:	jge    0x41e78a
  41e711:	add    al,0xbc
  41e713:	cmp    al,0x5b
  41e715:	ret    0xd7c2
  41e718:	outs   dx,BYTE PTR ds:[esi]
  41e719:	mov    edi,0x8f53ddb4
  41e71e:	or     al,0x8f
  41e720:	add    al,BYTE PTR [esi+0x7b]
  41e723:	pop    eax
  41e724:	jmp    0x4990a2dd
  41e729:	(bad)  
  41e72a:	repz dec edx
  41e72c:	dec    ebp
  41e72d:	mov    al,0x55
  41e72f:	les    edx,FWORD PTR [eax-0x4e]
  41e732:	inc    ebx
  41e733:	icebp  
  41e734:	in     eax,0xe0
  41e736:	or     cl,dl
  41e738:	add    al,0xb1
  41e73a:	popf   
  41e73b:	jnp    0x41e73a
  41e73d:	sbb    bh,dl
  41e73f:	pop    esi
  41e740:	or     eax,0xb132bb1d
  41e745:	pop    ebp
  41e746:	mov    al,ds:0x4acd1b09
  41e74b:	(bad)  
  41e74c:	nop
  41e74d:	xor    eax,0x6e3f2a8
  41e752:	aas    
  41e753:	mov    dl,0x1f
  41e755:	push   ds
  41e756:	shl    BYTE PTR [edx-0x80],1
  41e759:	pop    es
  41e75a:	dec    eax
  41e75b:	jg     0x41e7d6
  41e75d:	enter  0x705b,0xd0
  41e761:	pop    esi
  41e762:	in     al,dx
  41e763:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e764:	out    0x4e,al
  41e766:	je     0x41e7b3
  41e768:	push   edx
  41e769:	sub    esp,DWORD PTR [ebp+0xed00e6a]
  41e76f:	mov    ds:0xcf233a74,al
  41e774:	ret    0x9453
  41e777:	xchg   esi,eax
  41e778:	aaa    
  41e779:	mov    eax,ds:0xf63cc00f
  41e77e:	xor    ecx,DWORD PTR [ebx]
  41e780:	dec    edx
  41e781:	outs   dx,DWORD PTR ds:[esi]
  41e782:	push   cs
  41e783:	pop    ds
  41e784:	or     DWORD PTR [edi+0xce578d6],ecx
  41e78a:	mov    dh,0x45
  41e78c:	rcr    dh,cl
  41e78e:	jle    0x41e7ee
  41e790:	adc    al,0xba
  41e792:	adc    BYTE PTR [edi],cl
  41e794:	or     al,BYTE PTR [eax-0x1109ec09]
  41e79a:	or     eax,0xcf188fc
  41e79f:	inc    edi
  41e7a0:	outs   dx,DWORD PTR ds:[esi]
  41e7a1:	cmp    al,0x20
  41e7a3:	mov    bh,0x7
  41e7a5:	nop
  41e7a6:	mov    edi,0xcd14d7d7
  41e7ab:	mov    ebp,0x3540b3c1
  41e7b0:	jge    0x41e826
  41e7b2:	in     al,dx
  41e7b3:	rcl    BYTE PTR [ebp+0x61],cl
  41e7b6:	std    
  41e7b7:	inc    BYTE PTR [esi+0x3e]
  41e7ba:	std    
  41e7bb:	add    al,0xa5
  41e7bd:	pop    es
  41e7be:	dec    esp
  41e7bf:	pop    edi
  41e7c0:	mov    edx,0x9e55a4a7
  41e7c5:	ret    0x3d98
  41e7c8:	shr    BYTE PTR ss:[ecx-0x32a6f0d9],1
  41e7cf:	mov    ebx,0xca5f5f62
  41e7d4:	jp     0x41e7d8
  41e7d6:	mov    esp,0x79244966
  41e7db:	adc    cl,BYTE PTR [esi+edi*4]
  41e7de:	fcmovnb st,st(7)
  41e7e0:	jg     0x41e7d9
  41e7e2:	push   eax
  41e7e3:	push   edx
  41e7e4:	fcom   DWORD PTR ds:0xa16ba5e9
  41e7ea:	jmp    0x9a8c:0xdf243b7a
  41e7f1:	sub    dl,BYTE PTR [ebp+0x5e]
  41e7f4:	cmp    eax,0x2429ad78
  41e7f9:	retf   
  41e7fa:	mov    ch,0xca
  41e7fc:	(bad)  
  41e7fd:	jp     0x41e794
  41e7ff:	adc    BYTE PTR [edi+0x45],bl
  41e802:	shl    BYTE PTR [eax+0x51dc7e12],1
  41e808:	push   edx
  41e809:	test   eax,0x5f9e7734
  41e80e:	out    dx,al
  41e80f:	adc    BYTE PTR [edx-0x31c17bcb],dl
  41e815:	xor    ebx,DWORD PTR [eax+edi*4-0x48]
  41e819:	cmp    al,0x33
  41e81b:	sub    esi,DWORD PTR [esi-0x76]
  41e81e:	fyl2xp1 
  41e820:	dec    eax
  41e821:	push   ebx
  41e822:	out    dx,al
  41e823:	xchg   ebp,eax
  41e824:	jb     0x41e86f
  41e826:	dec    edi
  41e827:	aaa    
  41e828:	push   ds
  41e829:	dec    ebx
  41e82a:	push   edi
  41e82b:	fimul  WORD PTR [ebp-0x12]
  41e82e:	xlat   BYTE PTR ds:[ebx]
  41e82f:	and    ah,BYTE PTR [esp+esi*4]
  41e832:	leave  
  41e833:	jbe    0x41e7c3
  41e835:	imul   esp,DWORD PTR [edi-0x24],0xffffffed
  41e839:	dec    edx
  41e83a:	push   ds
  41e83b:	ss out 0xe6,eax
  41e83e:	(bad)  
  41e840:	sbb    BYTE PTR [eax+0x786c5331],ah
  41e846:	fistp  WORD PTR fs:[eax+0x20]
  41e84a:	int3   
  41e84b:	xor    esi,esp
  41e84d:	out    dx,eax
  41e84e:	mov    esp,0xcb3d85c8
  41e853:	std    
  41e854:	cld    
  41e855:	dec    edi
  41e856:	mov    BYTE PTR [eax+ebp*1],ch
  41e859:	xchg   BYTE PTR [ebp+0x68],al
  41e85c:	sar    DWORD PTR [ebp+ebx*8+0x3013c9c2],1
  41e863:	adc    BYTE PTR [eax],dl
  41e865:	add    DWORD PTR [ecx-0x30d5c301],esi
  41e86b:	out    dx,eax
  41e86c:	xchg   esp,eax
  41e86d:	xchg   edi,eax
  41e86e:	call   0x73a9:0x78b42cb9
  41e875:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e876:	popa   
  41e877:	outs   dx,DWORD PTR ds:[esi]
  41e878:	loope  0x41e887
  41e87a:	mov    al,ds:0x8242ad9c
  41e87f:	nop
  41e880:	adc    al,0xfe
  41e882:	and    eax,0x930b5d01
  41e887:	daa    
  41e888:	pop    ss
  41e889:	cdq    
  41e88a:	sub    al,0xee
  41e88c:	call   esp
  41e88e:	(bad)  
  41e88f:	pop    edx
  41e890:	pop    edx
  41e891:	push   0xffffff9f
  41e893:	or     al,0xf8
  41e895:	mov    eax,ds:0xda197a82
  41e89a:	loope  0x41e891
  41e89c:	adc    edi,ebp
  41e89e:	ss push edi
  41e8a0:	jno    0x41e8ec
  41e8a2:	(bad)  
  41e8a4:	jecxz  0x41e915
  41e8a6:	pop    edi
  41e8a7:	add    edx,DWORD PTR [edx+0x6c]
  41e8aa:	ret    
  41e8ab:	popf   
  41e8ac:	inc    edx
  41e8ad:	div    BYTE PTR [ebp-0x1e]
  41e8b0:	mov    al,ds:0x76fbe519
  41e8b5:	and    eax,0x8dc15ee7
  41e8ba:	jb     0x41e855
  41e8bc:	push   es
  41e8bd:	mov    al,0xf3
  41e8bf:	data16 int3 
  41e8c1:	adc    bl,BYTE PTR [edx-0x65b6b52b]
  41e8c7:	lds    esp,FWORD PTR [ebp+0x7db8f43b]
  41e8cd:	cmp    BYTE PTR [ebp-0x3abf2404],al
  41e8d3:	mov    edi,DWORD PTR [ecx+0x27]
  41e8d6:	loope  0x41e8bc
  41e8d8:	sub    bl,BYTE PTR [esi]
  41e8da:	inc    edx
  41e8db:	call   0x98a4:0xa5a48866
  41e8e2:	mov    edx,DWORD PTR [ebx-0x6]
  41e8e5:	sbb    eax,0x4a901349
  41e8ea:	loop   0x41e915
  41e8ec:	daa    
  41e8ed:	fcomp  DWORD PTR [esi]
  41e8ef:	in     eax,0xc3
  41e8f1:	pop    esi
  41e8f2:	fwait
  41e8f3:	ja     0x41e89f
  41e8f5:	xlat   BYTE PTR ds:[ebx]
  41e8f6:	jmp    0x41e952
  41e8f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8f9:	push   ds
  41e8fa:	fnstcw WORD PTR [ebx+0xd0949ae]
  41e900:	ins    BYTE PTR es:[edi],dx
  41e901:	push   0xffffffd8
  41e903:	inc    ebp
  41e904:	retf   0xba0e
  41e907:	(bad)
  41e90a:	lahf   
  41e90b:	mov    esp,0x278162f1
  41e910:	xor    dl,BYTE PTR [ecx+0x57]
  41e913:	xor    edi,edi
  41e915:	loopne 0x41e91c
  41e917:	push   edi
  41e918:	es dec edi
  41e91a:	jecxz  0x41e900
  41e91c:	sahf   
  41e91d:	(bad)  
  41e91e:	mov    ah,0xd4
  41e920:	hlt    
  41e921:	jl     0x41e8f7
  41e923:	sbb    edi,ebx
  41e925:	sbb    edx,ebx
  41e927:	gs leave 
  41e929:	mov    ds:0x86f74842,al
  41e92e:	mov    al,0x8b
  41e930:	push   cs
  41e931:	shl    DWORD PTR ds:0xe57d9c12,0x25
  41e938:	and    BYTE PTR [ebx-0x41],dh
  41e93b:	inc    edi
  41e93c:	inc    edi
  41e93d:	push   ebx
  41e93e:	cmp    edi,DWORD PTR [ebx-0x2ce8d10a]
  41e944:	jo     0x41e993
  41e946:	push   esp
  41e947:	sub    al,0x30
  41e949:	lea    esp,[ebx-0x2d]
  41e94c:	pop    es
  41e94d:	pop    ecx
  41e94e:	lods   eax,DWORD PTR ds:[esi]
  41e94f:	pop    esi
  41e950:	dec    ecx
  41e951:	sub    DWORD PTR [ebp+0x40d3e6a],0x70
  41e958:	xor    ecx,esi
  41e95a:	fsubr  QWORD PTR [ecx]
  41e95c:	cli    
  41e95d:	leave  
  41e95e:	pop    edx
  41e95f:	add    ebp,DWORD PTR [ecx+edx*2-0x497e0694]
  41e966:	lds    ebx,FWORD PTR [edx-0x4a]
  41e969:	lea    eax,[ebp-0x57]
  41e96c:	test   al,0x6a
  41e96e:	push   0x1b
  41e970:	xchg   esp,eax
  41e971:	mov    al,ds:0xbd3d7ab2
  41e976:	pop    ebx
  41e977:	xor    edx,DWORD PTR [eax+0x14d7f798]
  41e97d:	stos   DWORD PTR es:[edi],eax
  41e97e:	test   DWORD PTR [ebx-0x67],edx
  41e981:	or     al,0xf7
  41e983:	push   edi
  41e984:	mov    esi,0x27fea785
  41e989:	jnp    0x41e965
  41e98b:	mov    ds:0x1e96855e,al
  41e990:	daa    
  41e991:	iret   
  41e992:	test   BYTE PTR [ebx+0x3b],ch
  41e995:	scas   al,BYTE PTR es:[edi]
  41e996:	jle    0x41e933
  41e998:	add    DWORD PTR [eax-0x4cf7b8c7],esi
  41e99e:	retf   
  41e99f:	ret    0x42d2
  41e9a2:	mov    esp,0xe966ffd6
  41e9a7:	mov    al,ds:0xbce15303
  41e9ac:	push   cs
  41e9ad:	cmp    BYTE PTR [edi-0x266af5c7],dl
  41e9b3:	xor    eax,DWORD PTR [edi+eiz*2+0x55a16df7]
  41e9ba:	fstp   TBYTE PTR [eax-0x63ecf561]
  41e9c0:	(bad)  
  41e9c1:	fistp  QWORD PTR [edi-0x4127d300]
  41e9c7:	push   ebx
  41e9c8:	pop    es
  41e9c9:	(bad)  
  41e9ca:	mov    ds,WORD PTR [edi-0x65]
  41e9cd:	jnp    0x41e9be
  41e9cf:	hlt    
  41e9d0:	and    BYTE PTR [ebx],dh
  41e9d2:	xor    ch,BYTE PTR ds:0x3e12030a
  41e9d8:	jbe    0x41e993
  41e9da:	mov    ah,0x75
  41e9dc:	int    0x45
  41e9de:	xor    BYTE PTR [ebx-0x24],bh
  41e9e1:	pop    ebp
  41e9e2:	lock adc dl,0xf4
  41e9e6:	mov    esp,0x8769dece
  41e9eb:	fadd   DWORD PTR [ebp-0x1b]
  41e9ee:	test   BYTE PTR [edi],cl
  41e9f0:	jp     0x41ea71
  41e9f2:	pop    ss
  41e9f3:	(bad)  
  41e9f4:	jmp    0x3ec3:0x3b81a591
  41e9fb:	xchg   BYTE PTR [esi-0x15],dl
  41e9fe:	cmp    DWORD PTR [eax-0x40a968c9],0xffffffc7
  41ea05:	(bad)  
  41ea06:	fs stos BYTE PTR es:[edi],al
  41ea08:	mov    edi,0xdbea0c71
  41ea0d:	xchg   edx,eax
  41ea0e:	jae    0x41ea74
  41ea10:	out    dx,eax
  41ea11:	push   eax
  41ea12:	inc    eax
  41ea13:	out    0x39,al
  41ea15:	mov    dl,0xfa
  41ea17:	push   esi
  41ea18:	inc    ebx
  41ea19:	stos   BYTE PTR es:[edi],al
  41ea1a:	xchg   edi,eax
  41ea1b:	sbb    BYTE PTR [esi],ah
  41ea1d:	xor    DWORD PTR [eax],ebx
  41ea1f:	call   0xf2908843
  41ea24:	mov    edi,0xfae9dee
  41ea29:	mov    cl,0xef
  41ea2b:	adc    DWORD PTR [ebp+ebp*8+0x3d],edi
  41ea2f:	mov    bl,0x59
  41ea31:	shr    BYTE PTR [ebp+0x13],1
  41ea34:	jg     0x41eaa4
  41ea36:	sahf   
  41ea37:	sbb    eax,DWORD PTR [edi+eax*8+0xe725136]
  41ea3e:	retf   
  41ea3f:	push   0xd8f7ff94
  41ea44:	dec    edi
  41ea45:	ins    BYTE PTR es:[edi],dx
  41ea46:	sbb    ecx,DWORD PTR [eax+esi*4+0x2087c4d]
  41ea4d:	daa    
  41ea4e:	add    al,0xf3
  41ea50:	jo     0x41ea32
  41ea52:	hlt    
  41ea53:	push   es
  41ea54:	ds ds iret 
  41ea57:	cdq    
  41ea58:	mov    dl,0x4e
  41ea5a:	mov    ebp,0x65121115
  41ea5f:	adc    dl,BYTE PTR [ebp-0x45a1a08b]
  41ea65:	cmp    BYTE PTR [esi+ebp*8-0x5ad50929],0x32
  41ea6d:	sti    
  41ea6e:	dec    esi
  41ea6f:	cwde   
  41ea70:	sbb    BYTE PTR [edx-0x27],0x1e
  41ea74:	and    al,0xb8
  41ea76:	ds cmp al,0x12
  41ea79:	test   eax,0x2ee09002
  41ea7e:	fmul   DWORD PTR [edi+0x7ebfd39e]
  41ea84:	xor    BYTE PTR [ecx],0x4c
  41ea87:	daa    
  41ea88:	xchg   esp,edi
  41ea8a:	sti    
  41ea8b:	je     0x41ea35
  41ea8d:	adc    al,0x58
  41ea8f:	sti    
  41ea90:	rol    BYTE PTR [ecx-0x20],0xd5
  41ea94:	add    eax,0x783b248
  41ea99:	push   0x10
  41ea9b:	retf   
  41ea9c:	mov    esp,0xd1135d1c
  41eaa1:	pop    ds
  41eaa2:	push   ebp
  41eaa3:	xchg   esp,eax
  41eaa4:	sub    al,0xee
  41eaa6:	xchg   ebx,eax
  41eaa7:	cmp    eax,ecx
  41eaa9:	retf   0x4b2e
  41eaac:	sub    al,0x69
  41eaae:	ret    
  41eaaf:	imul   DWORD PTR ds:0xe7e8
  41eab4:	sbb    al,0xb9
  41eab6:	sbb    eax,0x883e9fd2
  41eabb:	dec    eax
  41eabc:	imul   esp,DWORD PTR [eax],0xe
  41eabf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eac0:	push   eax
  41eac1:	cwde   
  41eac2:	sub    DWORD PTR [ebp+eax*2-0x109ee2c2],edx
  41eac9:	xor    bl,BYTE PTR [ebx]
  41eacb:	mov    edx,0xe1983215
  41ead0:	pusha  
  41ead1:	les    ebp,FWORD PTR [edi+0x428477ae]
  41ead7:	outs   dx,BYTE PTR ds:[esi]
  41ead8:	mov    al,0x3c
  41eada:	cmp    DWORD PTR [eax],ecx
  41eadc:	jno    0x41eb00
  41eade:	ins    BYTE PTR es:[edi],dx
  41eadf:	retf   
  41eae0:	xchg   ebp,eax
  41eae1:	arpl   di,bx
  41eae3:	addr16 mov dh,0x41
  41eae6:	fsubr  DWORD PTR [ecx-0x75]
  41eae9:	and    ebp,DWORD PTR [ebx-0x63d09b3f]
  41eaef:	daa    
  41eaf0:	cld    
  41eaf1:	jg     0x41eac9
  41eaf3:	push   ebx
  41eaf4:	inc    esp
  41eaf5:	cmc    
  41eaf6:	sbb    dh,BYTE PTR [ebx+0x7f]
  41eaf9:	test   ebx,ebx
  41eafb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eafc:	push   es
  41eafd:	sbb    ecx,0xffffff88
  41eb00:	xlat   BYTE PTR ds:[ebx]
  41eb01:	sub    eax,0x5177da15
  41eb06:	cmp    BYTE PTR [edx-0x32b743ec],dh
  41eb0c:	stos   DWORD PTR es:[edi],eax
  41eb0d:	and    ch,BYTE PTR [eax+esi*1-0x7]
  41eb11:	push   0x69cb00cf
  41eb16:	(bad)  
  41eb17:	aam    0xa4
  41eb19:	cdq    
  41eb1a:	add    eax,0x31de2639
  41eb1f:	dec    esp
  41eb20:	aad    0x4b
  41eb22:	ins    BYTE PTR es:[edi],dx
  41eb23:	mov    bh,0xef
  41eb25:	and    ch,BYTE PTR [esi+0xe]
  41eb28:	pop    edi
  41eb29:	(bad)  
  41eb2a:	and    al,0x93
  41eb2c:	lea    edx,[eax+ebp*8]
  41eb2f:	xchg   ecx,eax
  41eb30:	(bad)  [ecx-0x442d6a09]
  41eb36:	clc    
  41eb37:	dec    ecx
  41eb38:	push   esi
  41eb39:	push   0x22b05faf
  41eb3e:	rol    bl,0x4c
  41eb41:	retf   
  41eb42:	pusha  
  41eb43:	pop    es
  41eb44:	fs test al,0xbb
  41eb47:	mov    bl,0x44
  41eb49:	imul   ebx,DWORD PTR [ebp+ebx*4-0xe],0xffffffc5
  41eb4e:	inc    ebx
  41eb4f:	in     al,0xd8
  41eb51:	(bad)  
  41eb52:	xchg   ebx,eax
  41eb53:	or     BYTE PTR [ecx-0x9],dh
  41eb56:	or     DWORD PTR [ecx],edi
  41eb58:	dec    esi
  41eb59:	adc    DWORD PTR [esi-0x4f],0x479fec13
  41eb60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb61:	dec    edx
  41eb62:	mov    ds:0xbe221fe4,eax
  41eb67:	xchg   ebp,eax
  41eb68:	jns    0x41eb12
  41eb6a:	pusha  
  41eb6b:	dec    ecx
  41eb6c:	push   es
  41eb6d:	pop    es
  41eb6e:	retf   0xb508
  41eb71:	jp     0x41ebc0
  41eb73:	mov    dl,0x65
  41eb75:	test   BYTE PTR [ebp+0x59],ch
  41eb78:	ins    DWORD PTR es:[edi],dx
  41eb79:	cld    
  41eb7a:	mov    ebp,0x2c6e8c5d
  41eb80:	mov    eax,ds:0xf5eff221
  41eb85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb86:	rcl    DWORD PTR [ecx+0x588906bb],1
  41eb8c:	inc    eax
  41eb8d:	inc    eax
  41eb8e:	call   0xe445:0x99471fe0
  41eb95:	jp     0x41eb4c
  41eb97:	cmp    BYTE PTR [edx],cl
  41eb99:	or     DWORD PTR [eax-0x4b],esp
  41eb9c:	ds pusha 
  41eb9e:	iret   
  41eb9f:	imul   ebx,ebx,0xffffffcf
  41eba2:	adc    DWORD PTR [edx+esi*4-0x6543b02b],0xffffff95
  41ebaa:	or     esp,DWORD PTR [ebp+0x2d]
  41ebad:	xabort 0x83
  41ebb0:	cmp    bl,BYTE PTR [eax+0x23]
  41ebb3:	or     eax,0x3f4078c5
  41ebb8:	inc    edx
  41ebb9:	shl    bh,1
  41ebbb:	imul   edx,DWORD PTR [esi],0xa
  41ebbe:	cs loop 0x41ec0a
  41ebc1:	sbb    al,0x8a
  41ebc3:	sub    edx,DWORD PTR [eax]
  41ebc5:	scas   al,BYTE PTR es:[edi]
  41ebc6:	jb     0x41eb5c
  41ebc8:	ds jg  0x41ebc5
  41ebcb:	and    DWORD PTR [ebp-0x2ea5a46],esp
  41ebd1:	jmp    0xb3f6c701
  41ebd6:	mov    edi,0x4d1bab74
  41ebdb:	js     0x41ec2d
  41ebdd:	xor    DWORD PTR [esp+esi*8+0x5e3fa96b],edx
  41ebe4:	push   0xfffffff8
  41ebe6:	lods   al,BYTE PTR ds:[esi]
  41ebe7:	adc    dh,BYTE PTR [esi-0x7db4a10b]
  41ebed:	loope  0x41ec50
  41ebef:	jge    0x41ec24
  41ebf1:	test   eax,0x68b9291a
  41ebf6:	or     BYTE PTR [edx+0x735e65b9],dh
  41ebfc:	pop    esi
  41ebfd:	and    BYTE PTR [ebx-0x3c],0x1f
  41ec01:	cld    
  41ec02:	je     0x41ebc4
  41ec04:	outs   dx,DWORD PTR ds:[esi]
  41ec05:	scas   al,BYTE PTR es:[edi]
  41ec06:	outs   dx,DWORD PTR ds:[esi]
  41ec07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec08:	mov    al,0x51
  41ec0a:	out    0xbb,al
  41ec0c:	add    cl,BYTE PTR cs:[ebp+esi*8-0x54]
  41ec11:	mov    dl,0x65
  41ec13:	push   0x6c03187b
  41ec18:	jns    0x41ec1b
  41ec1a:	cmp    BYTE PTR [ebx+0x186562a9],cl
  41ec20:	or     cl,BYTE PTR [ecx+0x4d]
  41ec23:	ss jmp 0x1bb0b4b9
  41ec29:	cmp    al,0x89
  41ec2b:	shl    DWORD PTR ss:[ebx-0x62],cl
  41ec2f:	mov    ch,0x5c
  41ec31:	ds ror ebx,0xe6
  41ec35:	jmp    0xc016ef6
  41ec3a:	mov    edx,0x1deab08f
  41ec3f:	fmul   st(5),st
  41ec41:	addr16 mov eax,0xeafc0066
  41ec47:	cdq    
  41ec48:	imul   ebx,DWORD PTR [edx+0x6f8febd],0x2f
  41ec4f:	js     0x41ec3a
  41ec51:	imul   ebx,DWORD PTR [edx+0x63535cc3],0x2a
  41ec58:	sbb    bh,ch
  41ec5a:	sbb    ah,BYTE PTR [esi-0x4]
  41ec5d:	sbb    eax,0x8234f18b
  41ec62:	jbe    0x41ec1e
  41ec64:	mov    DWORD PTR [edx],0x12e753aa
  41ec6a:	(bad)  
  41ec6b:	out    dx,eax
  41ec6c:	inc    ebx
  41ec6d:	xchg   BYTE PTR [ebx],bh
  41ec6f:	out    0x85,eax
  41ec71:	fdiv   QWORD PTR [ecx+0x6f8606d2]
  41ec77:	inc    ebx
  41ec78:	sti    
  41ec79:	jmp    0x41ec16
  41ec7b:	push   ecx
  41ec7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec7d:	cmp    edi,edi
  41ec7f:	cmp    bl,BYTE PTR [edx+0x278aed6a]
  41ec85:	dec    edx
  41ec86:	add    BYTE PTR [edx+0x17abacc1],bl
  41ec8c:	pop    ebp
  41ec8d:	adc    eax,0xfef41364
  41ec92:	sahf   
  41ec93:	jnp    0x41ecc2
  41ec95:	in     eax,dx
  41ec96:	in     eax,0xd2
  41ec98:	pop    esi
  41ec99:	mov    ds,WORD PTR [esi+0x0]
  41ec9c:	mov    ecx,0x4db10382
  41eca1:	leave  
  41eca2:	jb     0x41ecca
  41eca4:	add    DWORD PTR [esi+0x46],eax
  41eca7:	call   0x93871a9c
  41ecac:	add    DWORD PTR [edx-0x1],esp
  41ecaf:	loopne 0x41ec42
  41ecb1:	pop    eax
  41ecb2:	mov    esi,0x510fc88b
  41ecb7:	add    eax,0x885a1e46
  41ecbc:	daa    
  41ecbd:	pop    esi
  41ecbe:	dec    edi
  41ecbf:	cwde   
  41ecc0:	push   0x6fbac9be
  41ecc5:	cmp    eax,0xe1886158
  41ecca:	popa   
  41eccb:	sbb    BYTE PTR [edi],0xec
  41ecce:	add    eax,0xc5e8740c
  41ecd3:	fidivr DWORD PTR [eax+0x35]
  41ecd6:	fs cwde 
  41ecd8:	shr    edi,0xf1
  41ecdb:	je     0x41ed47
  41ecdd:	lea    edx,[esi+esi*2+0x1f]
  41ece1:	popf   
  41ece2:	stos   BYTE PTR es:[edi],al
  41ece3:	dec    edi
  41ece4:	loope  0x41ed20
  41ece6:	sub    DWORD PTR [esp+ebx*8+0x53],esp
  41ecea:	xchg   esi,eax
  41eceb:	xchg   edi,eax
  41ecec:	sub    cl,BYTE PTR [edi+0x5]
  41ecef:	mov    bh,BYTE PTR ds:0x6e3c28ad
  41ecf5:	(bad)  [ebx+0x12]
  41ecf8:	setg   BYTE PTR [ebx+0x75]
  41ecfc:	jg     0x41ecbe
  41ecfe:	rcl    BYTE PTR ss:[ecx+0xf],cl
  41ed02:	dec    edi
  41ed03:	xor    DWORD PTR [esi],0xdb9413a2
  41ed09:	dec    ebx
  41ed0a:	ja     0x41ed4d
  41ed0c:	fstp   QWORD PTR [eax]
  41ed0e:	push   esi
  41ed0f:	ins    DWORD PTR es:[edi],dx
  41ed10:	out    dx,eax
  41ed11:	cmp    al,0x75
  41ed13:	push   0x64
  41ed15:	sbb    bh,cl
  41ed17:	stc    
  41ed18:	jg     0x41ed0e
  41ed1a:	jmp    0xf3fc:0xd8fdc44e
  41ed21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed22:	push   edx
  41ed23:	and    dl,bl
  41ed25:	mov    ds:0xc10e40aa,al
  41ed2a:	sbb    eax,0xa46ffeea
  41ed2f:	sar    BYTE PTR [esi+eiz*1],cl
  41ed32:	pop    eax
  41ed33:	or     BYTE PTR [ecx-0x59],dl
  41ed36:	push   edi
  41ed37:	jne    0x41ed7f
  41ed39:	xor    ebx,edi
  41ed3b:	dec    esp
  41ed3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed3d:	add    eax,0x110a3764
  41ed42:	adc    bh,BYTE PTR [ecx]
  41ed44:	inc    eax
  41ed45:	sub    cl,BYTE PTR [ebp+0x1b69b8fe]
  41ed4b:	add    bh,BYTE PTR [edi]
  41ed4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed4e:	les    eax,FWORD PTR [ebx-0x3f26dc7d]
  41ed54:	xchg   DWORD PTR [ebp-0xf],ebp
  41ed57:	(bad)  
  41ed58:	or     eax,0xc84d95d4
  41ed5d:	int    0x68
  41ed5f:	mov    ds:0xaff478b4,eax
  41ed64:	sub    DWORD PTR [ebp+0x6f050f62],ebx
  41ed6a:	inc    BYTE PTR [edx-0x2b15aa68]
  41ed70:	push   edi
  41ed71:	mov    edx,0xc33fc5c4
  41ed76:	in     eax,dx
  41ed77:	out    0x26,al
  41ed79:	pop    ecx
  41ed7a:	mov    ecx,0x5b16ff47
  41ed7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed80:	out    0xac,eax
  41ed82:	js     0x41ed2a
  41ed84:	stos   DWORD PTR es:[edi],eax
  41ed85:	jmp    0x1a92:0x1ff0a6d5
  41ed8c:	add    al,0xc2
  41ed8e:	push   ecx
  41ed8f:	xchg   ebp,eax
  41ed90:	ret    0xf3d9
  41ed93:	or     al,0x91
  41ed95:	ret    0xc838
  41ed98:	(bad)  [esi-0x7e2385eb]
  41ed9e:	jecxz  0x41eda9
  41eda0:	(bad)  
  41eda1:	fild   WORD PTR [edx+edi*1-0x314017d5]
  41eda8:	pusha  
  41eda9:	dec    edx
  41edaa:	mov    bl,0xa9
  41edac:	(bad)  
  41edae:	push   ecx
  41edaf:	or     al,dh
  41edb1:	shl    BYTE PTR [ecx-0x9442ef4],0x36
  41edb8:	ins    BYTE PTR es:[edi],dx
  41edb9:	jns    0x41ee24
  41edbb:	adc    cl,BYTE PTR [edi+0x1da37c87]
  41edc1:	les    ebx,FWORD PTR [ecx+0x1b]
  41edc4:	(bad)  
  41edc5:	sub    al,0x71
  41edc7:	and    DWORD PTR [edx],ebp
  41edc9:	nop
  41edca:	add    al,0x4c
  41edcc:	int    0xc2
  41edce:	pushf  
  41edcf:	mov    edx,0xda3db95f
  41edd4:	cli    
  41edd5:	ja     0x41ee49
  41edd7:	dec    esp
  41edd8:	cmp    BYTE PTR [esp+ecx*4+0x14098251],dl
  41eddf:	push   cs
  41ede0:	pushf  
  41ede1:	mov    cl,0x27
  41ede3:	pop    ds
  41ede4:	and    esi,DWORD PTR [ebp+0x179d68f0]
  41edea:	add    eax,0x23b45dcd
  41edef:	pop    ds
  41edf0:	dec    eax
  41edf1:	or     edx,ebx
  41edf3:	adc    DWORD PTR [ebp+0x5f],ecx
  41edf6:	aad    0x14
  41edf8:	div    BYTE PTR es:[esp+ecx*1-0x65e1f54e]
  41ee00:	push   eax
  41ee01:	inc    ecx
  41ee02:	cmc    
  41ee03:	rcr    BYTE PTR [edi-0x4f],0xab
  41ee07:	pop    esi
  41ee08:	mov    ds:0x817bbe7c,al
  41ee0d:	mov    dl,BYTE PTR [esi-0x607d992]
  41ee13:	lea    ebp,[edx]
  41ee15:	dec    ecx
  41ee16:	repz loope 0x41ede1
  41ee19:	test   al,0x97
  41ee1b:	js     0x41ee8e
  41ee1d:	dec    edi
  41ee1e:	add    eax,0x2647fd36
  41ee23:	pop    ebx
  41ee24:	push   ecx
  41ee25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee26:	lock mov eax,0xeede301d
  41ee2c:	mov    esi,0x240c75c2
  41ee31:	push   edx
  41ee32:	adc    eax,0xba90d7a5
  41ee37:	xchg   DWORD PTR [esi+ecx*4-0x6e],esp
  41ee3b:	mov    bl,ah
  41ee3d:	sub    esi,esp
  41ee3f:	push   edx
  41ee40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee41:	xchg   edx,eax
  41ee42:	repz or BYTE PTR [ebx+0x10],dh
  41ee46:	xchg   edx,eax
  41ee47:	sbb    ch,dl
  41ee49:	mov    ds:0xd34b8b2,al
  41ee4e:	sbb    al,0xc4
  41ee50:	es je  0x41eea5
  41ee53:	dec    ebx
  41ee54:	add    esi,DWORD PTR [edx+ebp*2+0x7f]
  41ee58:	(bad)  
  41ee59:	in     eax,0x28
  41ee5b:	pop    ebp
  41ee5c:	aam    0x5
  41ee5e:	ins    DWORD PTR es:[edi],dx
  41ee5f:	scas   eax,DWORD PTR es:[edi]
  41ee60:	nop
  41ee61:	jne    0x41ee59
  41ee63:	mov    eax,ds:0x58bd5cf3
  41ee68:	jecxz  0x41ee18
  41ee6a:	xor    ecx,DWORD PTR [eax-0x4b]
  41ee6d:	ds call 0xab3b:0x729e8e77
  41ee75:	xchg   ebp,eax
  41ee76:	and    al,0x8b
  41ee78:	data16 daa 
  41ee7a:	pop    esi
  41ee7b:	shl    DWORD PTR [ecx+0x5],cl
  41ee7e:	xchg   esi,eax
  41ee7f:	sbb    edx,DWORD PTR [edi]
  41ee81:	push   edi
  41ee82:	leave  
  41ee83:	inc    esp
  41ee84:	lds    edi,FWORD PTR ss:[ecx-0x30]
  41ee88:	add    eax,0x71b7188e
  41ee8d:	dec    edi
  41ee8e:	inc    eax
  41ee8f:	or     BYTE PTR ds:0x44373fca,cl
  41ee95:	and    edi,DWORD PTR [ecx]
  41ee97:	shl    ebx,cl
  41ee99:	arpl   WORD PTR [eax-0xb18c8d6],bx
  41ee9f:	sahf   
  41eea0:	pushf  
  41eea1:	cs and dh,ch
  41eea4:	sbb    esi,DWORD PTR [eax+0x56]
  41eea7:	icebp  
  41eea8:	clc    
  41eea9:	test   DWORD PTR [edx],ecx
  41eeab:	mov    eax,0xedd98d57
  41eeb0:	mov    ebx,DWORD PTR [eax-0x21]
  41eeb3:	mov    DWORD PTR [ebx-0x77ab71c8],esp
  41eeb9:	sub    BYTE PTR [edx+0x365bacf7],bl
  41eebf:	fbstp  TBYTE PTR [eax]
  41eec1:	cmp    BYTE PTR [ebx],bh
  41eec3:	not    BYTE PTR ds:0x1634ae5e
  41eec9:	sub    eax,0x5ee074a7
  41eece:	scas   eax,DWORD PTR es:[edi]
  41eecf:	mov    ebp,0x3b328d9e
  41eed4:	and    dh,BYTE PTR [ecx+0x736ff465]
  41eeda:	(bad)  
  41eedc:	lods   al,BYTE PTR ds:[esi]
  41eedd:	imul   esp,DWORD PTR [eax],0xbf0f1677
  41eee3:	(bad)  
  41eee4:	les    eax,FWORD PTR [ecx+0x2db4ce6f]
  41eeea:	(bad)  
  41eeeb:	je     0x41eec0
  41eeed:	out    0x27,eax
  41eeef:	xor    DWORD PTR [eax-0x6e],ecx
  41eef2:	push   esp
  41eef3:	or     esp,edi
  41eef5:	sub    ebp,DWORD PTR [esi-0x12b4cbc8]
  41eefb:	push   esi
  41eefc:	cs adc edx,ecx
  41eeff:	jl     0x41eed5
  41ef01:	and    ebx,DWORD PTR [edi+0x78fc50ac]
  41ef07:	mov    eax,ds:0x47082ce0
  41ef0c:	sub    esp,esp
  41ef0e:	ret    
  41ef0f:	mov    dl,0xdf
  41ef11:	mov    cl,0xe2
  41ef13:	enter  0x2941,0xa0
  41ef17:	add    esi,DWORD PTR [eax]
  41ef19:	das    
  41ef1a:	sbb    eax,0x37410487
  41ef1f:	mov    ah,0x60
  41ef21:	ins    DWORD PTR es:[edi],dx
  41ef22:	cmp    ah,BYTE PTR ds:[esi]
  41ef25:	pop    ds
  41ef26:	jnp    0x41eed3
  41ef28:	jb     0x41eedd
  41ef2a:	out    dx,eax
  41ef2b:	(bad)  
  41ef2d:	imul   ebp,ecx,0x8f1f69cf
  41ef33:	sub    dh,BYTE PTR [edx-0x60]
  41ef36:	mov    WORD PTR [eax],es
  41ef38:	imul   DWORD PTR [edx+0x6c34542]
  41ef3e:	adc    BYTE PTR [edx+0x56dbdad8],ch
  41ef44:	mov    DWORD PTR [ebp-0xc32dd94],edx
  41ef4a:	inc    esp
  41ef4b:	jo     0x41ef94
  41ef4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef4e:	call   0x7760:0x844058c1
  41ef55:	iret   
  41ef56:	int3   
  41ef57:	scas   al,BYTE PTR es:[edi]
  41ef58:	xchg   esi,eax
  41ef59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef5a:	(bad)  
  41ef5b:	jae    0x41eeee
  41ef5d:	outs   dx,DWORD PTR ds:[esi]
  41ef5e:	jle    0x41ef50
  41ef60:	jmp    0xa3cb1c20
  41ef65:	daa    
  41ef66:	cmp    DWORD PTR [eax+0x20],edx
  41ef69:	adc    al,0x77
  41ef6b:	mov    ebp,0x7a8785c0
  41ef70:	shr    DWORD PTR gs:0xafd15a7b,1
  41ef77:	pop    esi
  41ef78:	add    eax,0xf10fe532
  41ef7d:	call   0xfa5b56e8
  41ef82:	out    dx,al
  41ef83:	dec    ebp
  41ef84:	xchg   edx,eax
  41ef85:	shl    cl,0x23
  41ef88:	and    al,0xb3
  41ef8a:	add    dl,dh
  41ef8c:	frstor [eax+0x4afc461b]
  41ef92:	in     eax,dx
  41ef93:	mov    ah,0xdc
  41ef95:	test   eax,0xd65965a6
  41ef9a:	outs   dx,DWORD PTR ds:[esi]
  41ef9b:	sbb    BYTE PTR [ebp+0x27],dl
  41ef9e:	cld    
  41ef9f:	hlt    
  41efa0:	mov    bh,0x7d
  41efa2:	inc    esi
  41efa3:	fidiv  DWORD PTR [edi-0x40]
  41efa6:	rcr    DWORD PTR ds:0x61bade83,1
  41efac:	and    ah,dh
  41efae:	ins    BYTE PTR es:[edi],dx
  41efaf:	(bad)  
  41efb0:	nop
  41efb1:	aad    0xec
  41efb3:	mov    ds:0x35d623ce,eax
  41efb8:	int3   
  41efb9:	xor    DWORD PTR [ebx+edx*2+0x2a],ecx
  41efbd:	mov    bh,0xc9
  41efbf:	fistp  WORD PTR [ecx-0x204b05d]
  41efc5:	xor    eax,0xd1d87220
  41efca:	pop    ecx
  41efcb:	out    0x45,al
  41efcd:	lock or BYTE PTR [eax+0xb26c84e],dh
  41efd4:	jmp    0x41efdb
  41efd6:	fsub   st(1),st
  41efd8:	and    al,0xbf
  41efda:	pop    eax
  41efdb:	mov    ds:0xf8198d4c,eax
  41efe0:	cmp    BYTE PTR [eax-0x70eef75c],cl
  41efe6:	fsubr  QWORD PTR [ebx-0x44]
  41efe9:	fistp  WORD PTR [ebx+0x685b83ed]
  41efef:	mov    dh,BYTE PTR [esi+edx*1]
  41eff2:	(bad)  
  41eff3:	mov    al,0x5f
  41eff5:	sub    al,0xa9
  41eff7:	loope  0x41f034
  41eff9:	retf   
  41effa:	in     al,0xfb
  41effc:	div    DWORD PTR [ecx+eiz*2-0x234d3582]
  41f003:	retfw  0xe519
  41f007:	xor    al,0x7c
  41f009:	dec    esp
  41f00a:	or     BYTE PTR [esi-0x6ec039e8],cl
  41f010:	inc    ecx
  41f011:	call   0x7e49ab13
  41f016:	adc    DWORD PTR ds:0x8a066584,ebp
  41f01c:	(bad)  
  41f01d:	mov    WORD PTR [ecx],ds
  41f01f:	stc    
  41f020:	push   0xfa21c39a
  41f025:	mov    eax,ds:0x9ef3ecb9
  41f02a:	shl    esp,cl
  41f02c:	pop    esp
  41f02d:	cli    
  41f02e:	mov    ds:0x705b5feb,al
  41f033:	adc    eax,0x18de578d
  41f038:	adc    DWORD PTR [eax-0x41a927b1],edx
  41f03e:	fcom   QWORD PTR [ebp+0x35]
  41f041:	shl    bh,cl
  41f043:	mov    ds:0x2399118a,al
  41f048:	adc    ecx,esp
  41f04a:	pop    esi
  41f04b:	push   esp
  41f04c:	jne    0x41f087
  41f04e:	or     eax,0x6d8cf439
  41f053:	xlat   BYTE PTR ds:[ebx]
  41f054:	pop    edi
  41f055:	jns    0x41f07c
  41f057:	xchg   esi,eax
  41f058:	push   esi
  41f059:	jecxz  0x41efe6
  41f05b:	and    al,0x36
  41f05d:	es in  al,0x2d
  41f060:	icebp  
  41f061:	(bad)  
  41f062:	out    dx,al
  41f063:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f064:	mov    bl,0xda
  41f066:	mov    edi,0x11ec2e58
  41f06b:	test   al,0xe6
  41f06d:	dec    esi
  41f06e:	(bad)  
  41f06f:	and    al,0x34
  41f071:	pop    ebx
  41f072:	mov    ecx,0x9bf224d
  41f077:	xor    DWORD PTR ss:[edx+0x28],edi
  41f07b:	sub    ebx,DWORD PTR [esi+0x21]
  41f07e:	xor    eax,0xb9ed84ba
  41f083:	mov    edx,0xb14d7f09
  41f088:	icebp  
  41f089:	dec    esi
  41f08a:	dec    ebp
  41f08b:	js     0x41f02e
  41f08d:	push   ds
  41f08e:	pop    esp
  41f08f:	jmp    0xb617d087
  41f094:	fsubr  DWORD PTR [eax-0x46]
  41f097:	sub    al,BYTE PTR [eax+0x6]
  41f09a:	mov    ds:0xc8d7645a,eax
  41f09f:	shl    BYTE PTR [edx-0x7d85f2c],cl
  41f0a5:	retf   0x3169
  41f0a8:	int    0x83
  41f0aa:	xor    bl,BYTE PTR [ecx+ebp*8]
  41f0ad:	ds jns 0x41f0a8
  41f0b0:	fmul   DWORD PTR [ebx+0x3998cd43]
  41f0b6:	es sub bh,al
  41f0b9:	imul   ebx,DWORD PTR [esi-0x64],0x8d9cbb6
  41f0c0:	sbb    DWORD PTR [eax-0x50],ecx
  41f0c3:	cmc    
  41f0c4:	inc    edx
  41f0c5:	sbb    DWORD PTR [edi],0x88e19a87
  41f0cb:	test   al,0x5b
  41f0cd:	or     DWORD PTR ds:0x7cf557a2,edx
  41f0d3:	ret    
  41f0d4:	ja     0x41f0f9
  41f0d6:	xor    DWORD PTR [edi-0x40],ecx
  41f0d9:	cmp    DWORD PTR [esi+0xd],esi
  41f0dc:	cmc    
  41f0dd:	push   ebx
  41f0de:	int    0xf8
  41f0e0:	repnz out 0xc9,eax
  41f0e3:	mov    ecx,0x4a18ed95
  41f0e8:	xor    al,0x20
  41f0ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0eb:	mov    ebp,0xf1058e95
  41f0f0:	mov    edi,ecx
  41f0f2:	push   ebx
  41f0f3:	or     al,0xac
  41f0f5:	fwait
  41f0f6:	dec    esi
  41f0f7:	sbb    DWORD PTR [edx],edi
  41f0f9:	(bad)  
  41f0fa:	cmc    
  41f0fb:	xor    esp,eax
  41f0fd:	xor    BYTE PTR [ecx],0x4a
  41f100:	outs   dx,DWORD PTR ds:[esi]
  41f101:	jb     0x41f15e
  41f103:	mov    eax,0x3c79e69a
  41f108:	test   eax,0xc726252e
  41f10d:	inc    esp
  41f10e:	pop    esi
  41f10f:	dec    edx
  41f110:	scas   eax,DWORD PTR es:[edi]
  41f111:	cld    
  41f112:	dec    esp
  41f113:	ss stos BYTE PTR es:[edi],al
  41f115:	mov    eax,0x3c79b825
  41f11a:	je     0x41f0ba
  41f11c:	imul   esi,DWORD PTR [eax-0x259b4283],0xffffffb7
  41f123:	pusha  
  41f124:	push   ds
  41f125:	imul   DWORD PTR [ebp-0x1bf15c1]
  41f12b:	pop    esi
  41f12c:	push   0x15d7b36e
  41f131:	inc    eax
  41f132:	push   eax
  41f133:	jnp    0x8c97c55e
  41f139:	ficom  DWORD PTR [esi-0x1d5c111]
  41f13f:	test   al,0xee
  41f141:	into   
  41f142:	push   ss
  41f143:	or     eax,0x6fb43747
  41f148:	and    al,0x82
  41f14a:	pop    esi
  41f14b:	xchg   ecx,eax
  41f14c:	in     eax,dx
  41f14d:	mov    ch,0xc7
  41f14f:	and    DWORD PTR [ebp+0x69],0x6742f469
  41f156:	mov    ebp,0x86d65f1e
  41f15b:	bnd jp 0x41f1ca
  41f15e:	test   DWORD PTR [esi],0xbc6f2fdd
  41f164:	fsub   QWORD PTR [ebx]
  41f166:	dec    ebp
  41f167:	mov    eax,ds:0xc8868a3d
  41f16c:	xchg   ecx,eax
  41f16d:	jo     0x41f1d5
  41f16f:	cmp    DWORD PTR [edi-0x28],edi
  41f172:	mov    edx,0x2f9de406
  41f177:	in     al,dx
  41f178:	outs   dx,DWORD PTR ds:[esi]
  41f179:	push   cs
  41f17a:	mov    eax,0xefc37e1e
  41f17f:	adc    bl,0xb1
  41f182:	(bad)  
  41f183:	fst    DWORD PTR [eax]
  41f185:	popf   
  41f186:	xor    dl,BYTE PTR [ebx-0x1d]
  41f189:	push   ecx
  41f18a:	inc    edx
  41f18b:	sbb    al,0x61
  41f18d:	mov    ebp,0x107dde6c
  41f192:	daa    
  41f193:	mov    ebp,0x3d892778
  41f198:	fstp   DWORD PTR ss:[eax]
  41f19b:	fidivr DWORD PTR [ebp+0x53]
  41f19e:	mov    edi,0x9556ded5
  41f1a3:	ins    DWORD PTR es:[edi],dx
  41f1a4:	or     BYTE PTR ds:0x8fd360f1,dh
  41f1aa:	inc    esp
  41f1ab:	loope  0x41f158
  41f1ad:	das    
  41f1ae:	es retf 
  41f1b0:	pop    edi
  41f1b1:	add    DWORD PTR [eax],edi
  41f1b3:	or     DWORD PTR [ebp-0x19831d62],esi
  41f1b9:	xor    al,0xb9
  41f1bb:	mov    ebp,0x57a7e481
  41f1c0:	and    eax,0x2e71d088
  41f1c5:	xor    al,0x5a
  41f1c7:	inc    esp
  41f1c8:	mov    al,ss:0xe678cf68
  41f1ce:	adc    ebx,DWORD PTR [ecx]
  41f1d0:	(bad)  
  41f1d1:	into   
  41f1d2:	jnp    0x41f1f3
  41f1d4:	(bad)  
  41f1d5:	xlat   BYTE PTR ds:[ebx]
  41f1d6:	repz mov ebx,0xa420a9e7
  41f1dc:	int    0x4e
  41f1de:	imul   esp,DWORD PTR [ebp+edi*2-0x79f86856],0x36d1920e
  41f1e9:	jmp    0x3b8d61cf
  41f1ee:	out    0x31,eax
  41f1f0:	int3   
  41f1f1:	xchg   BYTE PTR [edx+0x69],bl
  41f1f4:	lahf   
  41f1f5:	out    0x51,eax
  41f1f7:	sbb    ecx,DWORD PTR [edi-0x6a37ef4d]
  41f1fd:	stc    
  41f1fe:	mov    DWORD PTR [eax],ebp
  41f200:	jmp    0x41f1fe
  41f202:	fist   DWORD PTR [edi+0x45f4a40]
  41f208:	pusha  
  41f209:	clc    
  41f20a:	xor    al,0x69
  41f20c:	xchg   ecx,eax
  41f20d:	sbb    bh,ah
  41f20f:	xchg   BYTE PTR [edi-0x5799b1c3],bh
  41f215:	out    0xdf,eax
  41f217:	rcr    DWORD PTR [ecx],0xd4
  41f21a:	in     eax,0x69
  41f21c:	dec    BYTE PTR [edx]
  41f21e:	adc    al,0xc1
  41f220:	inc    ecx
  41f221:	jge    0x41f24a
  41f223:	cmp    BYTE PTR [esi],ch
  41f225:	inc    edx
  41f226:	sbb    esi,DWORD PTR [esp+edx*4+0x44]
  41f22a:	(bad)  
  41f22b:	stc    
  41f22c:	dec    esp
  41f22d:	xor    eax,0x82704589
  41f232:	xor    esi,DWORD PTR [bx+si-0x2d46]
  41f237:	std    
  41f238:	aad    0x5f
  41f23a:	ds mov eax,0xc312716
  41f240:	(bad)  
  41f241:	lods   eax,DWORD PTR ds:[esi]
  41f242:	(bad)  
  41f244:	cmp    DWORD PTR [ebp-0x3c],ecx
  41f247:	pop    ebp
  41f248:	push   ss
  41f249:	fidiv  WORD PTR [ecx+0x3b]
  41f24c:	dec    cl
  41f24e:	xor    BYTE PTR [eax+edi*8+0x5f],0xae
  41f253:	outs   dx,BYTE PTR ds:[esi]
  41f254:	stos   DWORD PTR es:[edi],eax
  41f255:	push   ebp
  41f256:	arpl   WORD PTR es:[edx+0x67bc75f8],ax
  41f25d:	outs   dx,DWORD PTR ds:[esi]
  41f25e:	mov    dh,0x6d
  41f260:	xchg   ecx,eax
  41f261:	pop    eax
  41f262:	inc    eax
  41f263:	inc    esp
  41f264:	shl    ecx,1
  41f266:	fldcw  WORD PTR [ecx+0x2fe4b508]
  41f26c:	or     esi,DWORD PTR [ebp+0x3ddc5fa2]
  41f272:	sbb    esp,DWORD PTR [ebx]
  41f274:	arpl   di,dx
  41f276:	stc    
  41f277:	test   eax,0xd77bb72b
  41f27c:	int    0x82
  41f27e:	add    ecx,DWORD PTR [esi+0x6c2193f2]
  41f284:	inc    edx
  41f285:	sub    BYTE PTR [edi+ecx*4-0x2c31a1ba],dl
  41f28c:	push   edx
  41f28d:	sub    ebx,esp
  41f28f:	mov    eax,0xe322832b
  41f294:	adc    eax,ebx
  41f296:	int    0x5c
  41f298:	iret   
  41f299:	lahf   
  41f29a:	ja     0x41f288
  41f29c:	popf   
  41f29d:	jl     0x41f2da
  41f29f:	cmc    
  41f2a0:	push   ds
  41f2a1:	adc    ebp,DWORD PTR [eax-0x58]
  41f2a4:	fnsavew [eax+0x467f4881]
  41f2ab:	mov    BYTE PTR [edi+0x61],ch
  41f2ae:	retf   
  41f2af:	stos   BYTE PTR es:[edi],al
  41f2b0:	jecxz  0x41f290
  41f2b2:	pop    ds
  41f2b3:	(bad)  
  41f2b4:	jmp    0xfd9d221f
  41f2b9:	mov    bh,0x66
  41f2bb:	test   eax,0xbf70771a
  41f2c0:	pushf  
  41f2c1:	or     eax,ebx
  41f2c3:	add    eax,0x8ad598a0
  41f2c8:	ss cld 
  41f2ca:	and    ebx,edi
  41f2cc:	pop    edi
  41f2ce:	lea    esp,[ecx+0x15]
  41f2d1:	jp     0x41f295
  41f2d3:	stc    
  41f2d4:	ja     0x41f2b2
  41f2d6:	pop    edx
  41f2d7:	sub    eax,0x5352f0c9
  41f2dc:	and    BYTE PTR [edx],bh
  41f2de:	sub    bl,BYTE PTR [ecx+edx*1-0x350d25e4]
  41f2e5:	cdq    
  41f2e6:	outs   dx,DWORD PTR ds:[esi]
  41f2e7:	pop    ss
  41f2e8:	imul   eax,DWORD PTR [esi+0x2e5ead95],0x76
  41f2ef:	mov    al,0xa4
  41f2f1:	cwde   
  41f2f2:	sti    
  41f2f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2f4:	inc    eax
  41f2f5:	call   0x9fb3:0xb3bd00a1
  41f2fc:	jle    0x41f344
  41f2fe:	lds    ebp,FWORD PTR [ebx-0x3c]
  41f301:	nop
  41f302:	push   ecx
  41f303:	or     ecx,edi
  41f305:	mov    eax,ds:0xbbd772f7
  41f30a:	push   cs
  41f30b:	xchg   edx,eax
  41f30c:	push   0x37
  41f30e:	mov    ds:0x6b4cdcf5,eax
  41f313:	fimul  DWORD PTR [ebx-0x2487b68a]
  41f319:	push   ebp
  41f31a:	sahf   
  41f31b:	push   ecx
  41f31c:	retf   0x5094
  41f31f:	sbb    DWORD PTR [edi],eax
  41f321:	es call 0xd88c0561
  41f327:	bnd je 0x41f332
  41f32a:	aaa    
  41f32b:	daa    
  41f32c:	cmp    al,0xe8
  41f32e:	or     ebp,esi
  41f330:	xor    ecx,DWORD PTR [edx-0x21]
  41f333:	call   0xc7c8a425
  41f338:	cmp    DWORD PTR [edi],esi
  41f33a:	hlt    
  41f33b:	cld    
  41f33c:	mov    bl,0xdd
  41f33e:	frstor [edi]
  41f340:	test   BYTE PTR [edx],ch
  41f342:	xor    eax,edx
  41f344:	push   ecx
  41f345:	mov    dl,0x50
  41f347:	icebp  
  41f348:	sbb    eax,0x85f5f0f3
  41f34d:	push   ebp
  41f34e:	seta   BYTE PTR [ebx+esi*2+0x56696f4f]
  41f356:	mov    fs,edx
  41f358:	push   ebx
  41f359:	fimul  DWORD PTR [esi+ebx*8-0x21]
  41f35d:	sub    bl,ah
  41f35f:	lds    ebx,FWORD PTR [edi+0x29018cfe]
  41f365:	and    ebp,DWORD PTR [edx-0x55]
  41f368:	scas   al,BYTE PTR es:[edi]
  41f369:	(bad)  
  41f36b:	jg     0x41f391
  41f36d:	sub    eax,0x3fae5e1b
  41f372:	cmp    eax,0xea98a5e3
  41f377:	(bad)  
  41f378:	data16 add al,0x26
  41f37b:	leave  
  41f37c:	mov    dl,0x2b
  41f37e:	push   es
  41f37f:	sar    BYTE PTR [ebp+0x1eec3572],0x62
  41f386:	adc    eax,0xa6c5a3c6
  41f38b:	(bad)  
  41f38c:	aad    0x2b
  41f38e:	mov    bh,0x4e
  41f390:	fmulp  st(4),st
  41f392:	popf   
  41f393:	pop    esi
  41f394:	shl    DWORD PTR [ebx+eax*8],0xe1
  41f398:	std    
  41f399:	xlat   BYTE PTR ds:[ebx]
  41f39a:	nop
  41f39b:	jecxz  0x41f39f
  41f39d:	jl     0x41f3fb
  41f39f:	and    eax,DWORD PTR [ebx+0x41]
  41f3a2:	lds    ebp,FWORD PTR [edx+0x24b4fd9e]
  41f3a8:	iret   
  41f3a9:	test   BYTE PTR [ebp+0x41],ch
  41f3ac:	ins    DWORD PTR es:[edi],dx
  41f3ad:	inc    edi
  41f3ae:	jb     0x41f34d
  41f3b0:	xchg   BYTE PTR [ebx+ecx*4-0x50],al
  41f3b4:	into   
  41f3b5:	inc    edi
  41f3b6:	xchg   ebp,eax
  41f3b7:	xchg   esp,eax
  41f3b8:	popf   
  41f3b9:	loop   0x41f434
  41f3bb:	daa    
  41f3bc:	jne    0x41f380
  41f3be:	in     eax,0x8f
  41f3c0:	out    0x81,al
  41f3c2:	add    eax,0x42737f15
  41f3c7:	sbb    DWORD PTR [edx],0x4ceafe3c
  41f3cd:	outs   dx,DWORD PTR ds:[esi]
  41f3ce:	pop    ebp
  41f3cf:	not    DWORD PTR ds:0x3aaf7ec2
  41f3d5:	arpl   WORD PTR [esi+eiz*8-0x17feda4d],bp
  41f3dc:	shl    bh,1
  41f3de:	ins    BYTE PTR es:[edi],dx
  41f3df:	es mov ah,0xc7
  41f3e2:	cs das 
  41f3e4:	xor    DWORD PTR [esi-0x52],esi
  41f3e7:	stos   BYTE PTR es:[edi],al
  41f3e8:	or     eax,0x9b2fdfd6
  41f3ed:	inc    esp
  41f3ee:	rol    BYTE PTR [esi-0x35],1
  41f3f1:	outs   dx,DWORD PTR ds:[esi]
  41f3f2:	mov    eax,0xee2f8e7e
  41f3f7:	push   es
  41f3f8:	out    0x72,eax
  41f3fa:	jle    0x41f479
  41f3fc:	sbb    dl,BYTE PTR [eax+0x12]
  41f3ff:	mov    edx,0x6755b5a6
  41f404:	mov    ah,0xba
  41f406:	inc    edi
  41f407:	fs dec esp
  41f409:	mov    bh,0x37
  41f40b:	mov    bh,0x7d
  41f40d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f40e:	mov    dh,0x9b
  41f410:	in     eax,0xa6
  41f412:	or     ah,BYTE PTR [edi]
  41f414:	sti    
  41f415:	push   esp
  41f416:	test   DWORD PTR [esi-0x137a9d27],edi
  41f41c:	pop    esi
  41f41d:	fst    DWORD PTR [edx-0x38]
  41f420:	pushf  
  41f421:	push   cs
  41f422:	mov    ds:0x65fd4c5,al
  41f427:	sahf   
  41f428:	mov    WORD PTR [edx],gs
  41f42a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f42b:	test   DWORD PTR [ebx-0x1fb6cd83],edi
  41f431:	cmp    eax,0x4a9c239a
  41f436:	imul   edx,DWORD PTR [esi+0x6c],0xffffffe6
  41f43a:	mov    dh,bh
  41f43c:	xor    ecx,esi
  41f43e:	(bad)  ds:0x9478d235
  41f444:	int3   
  41f445:	js     0x41f410
  41f447:	xor    DWORD PTR ds:0xeac2e5f3,edi
  41f44d:	xchg   BYTE PTR [ecx+0x3c],bh
  41f450:	cmovg  edx,DWORD PTR [ebx+0x2f917594]
  41f457:	cs sbb eax,0x3e8686a0
  41f45d:	shl    DWORD PTR [ecx-0x2366310],1
  41f463:	daa    
  41f464:	dec    edx
  41f465:	add    eax,DWORD PTR [eax]
  41f467:	dec    edi
  41f468:	ret    
  41f469:	aas    
  41f46a:	sub    al,0x76
  41f46c:	xchg   esp,eax
  41f46d:	add    al,0x7e
  41f46f:	inc    ecx
  41f470:	mov    ds,WORD PTR [esi+0x1a]
  41f473:	inc    esp
  41f474:	mov    ds:0xf9ac5731,al
  41f479:	nop
  41f47a:	repnz movs DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41f47d:	jno    0x41f4e0
  41f47f:	dec    esp
  41f480:	sub    DWORD PTR [ebp+0xe],edx
  41f483:	ins    DWORD PTR es:[edi],dx
  41f484:	pop    ebx
  41f485:	pop    ebp
  41f486:	outs   dx,BYTE PTR ds:[esi]
  41f487:	inc    eax
  41f488:	jns    0x41f44d
  41f48a:	das    
  41f48b:	daa    
  41f48c:	out    dx,al
  41f48d:	xor    ecx,DWORD PTR [ebp-0x5b694746]
  41f493:	cwde   
  41f494:	inc    ecx
  41f495:	mov    cl,BYTE PTR [ebp+0x1dca2435]
  41f49b:	sbb    eax,0x4b4ad420
  41f4a0:	aaa    
  41f4a1:	sub    al,0x35
  41f4a3:	cld    
  41f4a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4a5:	rcr    DWORD PTR ds:0xdc4424c1,1
  41f4ab:	mov    ch,0xfe
  41f4ad:	cli    
  41f4ae:	popa   
  41f4af:	dec    eax
  41f4b0:	push   ecx
  41f4b1:	call   0x916b2bbd
  41f4b6:	push   DWORD PTR [ebx+0x62]
  41f4b9:	aaa    
  41f4ba:	arpl   WORD PTR [ebx],cx
  41f4bc:	loop   0x41f472
  41f4be:	mov    edi,ds
  41f4c0:	imul   esp,DWORD PTR [esi+0x7f1391e3],0xb149ffa1
  41f4ca:	aam    0x4f
  41f4cc:	shl    DWORD PTR [ebx+ebp*8-0x3c],1
  41f4d0:	dec    esi
  41f4d1:	(bad)  
  41f4d2:	(bad)  
  41f4d3:	push   ecx
  41f4d4:	ret    
  41f4d5:	arpl   WORD PTR [edi+0x4b],si
  41f4d8:	lds    eax,FWORD PTR [edi]
  41f4da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4db:	add    ebp,ecx
  41f4dd:	imul   edi,DWORD PTR [edi-0xbe948de],0x22ef2bc
  41f4e7:	sub    ecx,edx
  41f4e9:	fcmovnbe st,st(5)
  41f4eb:	jmp    0x21c5:0x842d7f83
  41f4f2:	mov    BYTE PTR ds:0x2767648e,dl
  41f4f8:	dec    ecx
  41f4f9:	and    edi,DWORD PTR [ebp+0x78da3e5c]
  41f4ff:	fcomi  st,st(4)
  41f501:	jo     0x41f49d
  41f503:	(bad)  
  41f504:	into   
  41f505:	inc    ecx
  41f506:	inc    edi
  41f507:	aad    0x46
  41f509:	cmp    al,0xb7
  41f50b:	sub    ebx,DWORD PTR [edx]
  41f50d:	pop    edx
  41f50e:	(bad)  
  41f50f:	les    esp,FWORD PTR [edx]
  41f511:	sar    esi,1
  41f513:	stc    
  41f514:	adc    al,bl
  41f516:	fistp  WORD PTR [edx+0x39c51745]
  41f51c:	push   0x5f
  41f51e:	adc    al,0x4
  41f520:	in     eax,dx
  41f521:	xchg   edi,eax
  41f522:	jne    0x41f551
  41f524:	jle    0x41f5a2
  41f526:	pop    esi
  41f527:	std    
  41f528:	fwait
  41f529:	jb     0x41f50e
  41f52b:	retf   
  41f52c:	stc    
  41f52d:	(bad)  
  41f52e:	scas   eax,DWORD PTR es:[edi]
  41f52f:	push   0xffffff88
  41f531:	jl     0x41f5a8
  41f533:	mov    WORD PTR [esi+ebp*4+0x71a550bc],gs
  41f53a:	push   DWORD PTR [edi+eax*1+0x68]
  41f53e:	xchg   esp,eax
  41f53f:	ret    
  41f540:	adc    eax,0x87f782a3
  41f545:	jb     0x41f55b
  41f547:	fwait
  41f548:	ja     0x41f54e
  41f54a:	mov    dl,0x70
  41f54c:	jne    0x41f55d
  41f54e:	je     0x41f4db
  41f550:	pop    edx
  41f551:	neg    BYTE PTR [ebp+0x1b]
  41f554:	mov    dh,0xdd
  41f556:	call   0x29b0:0xadfe6f31
  41f55d:	jne    0x41f511
  41f55f:	add    BYTE PTR [edi+ebp*2-0xeac31bb],bh
  41f566:	mov    ds:0xb0b55b56,eax
  41f56b:	mov    ds,WORD PTR [eax+edi*8]
  41f56e:	sub    ebx,edi
  41f570:	aad    0x1
  41f572:	lods   eax,DWORD PTR ds:[esi]
  41f573:	test   eax,0xd8471120
  41f578:	push   ds
  41f579:	in     al,dx
  41f57a:	cmp    eax,0x9969e7a1
  41f57f:	mov    bl,0x3f
  41f581:	cmp    BYTE PTR [edi+0x17],0xa2
  41f585:	fs push cs
  41f587:	mov    fs:0x7749332f,eax
  41f58d:	fst    QWORD PTR [ecx+0x7]
  41f590:	cmp    ebx,ebx
  41f592:	lahf   
  41f593:	sub    al,0xcb
  41f595:	je     0x41f585
  41f597:	mov    gs,WORD PTR [eax]
  41f599:	xchg   esi,eax
  41f59a:	sub    ebx,DWORD PTR [edi+0x7f]
  41f59d:	cmp    bh,BYTE PTR [ecx]
  41f59f:	mov    dh,BYTE PTR [ecx+0x3922fef3]
  41f5a5:	push   edi
  41f5a6:	repnz pop edx
  41f5a8:	mov    ah,0x3d
  41f5aa:	dec    ecx
  41f5ab:	cwde   
  41f5ac:	js     0x41f612
  41f5ae:	hlt    
  41f5af:	add    eax,0x7e2531d6
  41f5b4:	loopne 0x41f603
  41f5b6:	push   cs
  41f5b7:	(bad)  
  41f5b8:	jnp    0x41f5a7
  41f5ba:	leave  
  41f5bb:	fbstp  TBYTE PTR [eax-0x5c]
  41f5be:	fwait
  41f5bf:	repnz rol BYTE PTR [eax-0x3f17edd6],cl
  41f5c6:	jno    0x41f564
  41f5c8:	or     DWORD PTR [eax],ebx
  41f5ca:	std    
  41f5cb:	dec    edi
  41f5cc:	xchg   ebx,eax
  41f5cd:	shl    BYTE PTR gs:[eax+0x65],cl
  41f5d1:	je     0x41f5ce
  41f5d3:	pop    edi
  41f5d4:	pop    esp
  41f5d5:	int    0xb3
  41f5d7:	mov    dl,BYTE PTR [esi-0x2b]
  41f5da:	fwait
  41f5db:	(bad)  
  41f5dc:	or     ebx,DWORD PTR [esi-0x451874a4]
  41f5e2:	xchg   esi,eax
  41f5e3:	(bad)  
  41f5e4:	out    0x26,al
  41f5e6:	mov    dl,0xff
  41f5e8:	jne    0x41f5b3
  41f5ea:	test   dl,ch
  41f5ec:	dec    eax
  41f5ed:	loope  0x41f5da
  41f5ef:	mov    cl,0x76
  41f5f1:	mov    cl,0x3f
  41f5f3:	push   es
  41f5f4:	fwait
  41f5f5:	inc    edx
  41f5f6:	aam    0x88
  41f5f8:	adc    DWORD PTR [ebp+0x19],ebx
  41f5fb:	icebp  
  41f5fc:	cmp    ebx,DWORD PTR [ebx]
  41f5fe:	mov    gs:0x1827df10,al
  41f604:	pop    ecx
  41f605:	inc    ebp
  41f606:	mov    esp,0x20332f6c
  41f60b:	push   0xf3e596cc
  41f610:	dec    esp
  41f611:	push   ss
  41f612:	jbe    0x41f62d
  41f614:	std    
  41f615:	inc    edi
  41f616:	aaa    
  41f617:	sahf   
  41f618:	mov    esp,DWORD PTR [edi+ebp*1]
  41f61b:	jg     0x41f5a0
  41f61d:	das    
  41f61e:	js     0x41f5b4
  41f620:	ss sbb al,0x82
  41f623:	lahf   
  41f624:	or     al,0x1e
  41f626:	add    BYTE PTR [ecx+0x213e1fe0],0xe0
  41f62d:	clc    
  41f62e:	jg     0x41f68a
  41f630:	hlt    
  41f631:	xchg   esi,eax
  41f632:	in     eax,0x47
  41f634:	shl    ebx,0xc5
  41f637:	aad    0x61
  41f639:	lds    eax,FWORD PTR [ecx+0x22d8b267]
  41f63f:	(bad)  
  41f641:	and    BYTE PTR [ecx+0x62f67f24],al
  41f647:	in     al,0xa5
  41f649:	(bad)  [eax]
  41f64b:	cmp    bl,BYTE PTR [ebx+0x7658ca79]
  41f651:	jg     0x41f612
  41f653:	jg     0x41f66d
  41f655:	das    
  41f656:	sub    eax,0x8bdcfeb
  41f65b:	cs jg  0x41f675
  41f65e:	sbb    BYTE PTR [edi-0x37c8bf96],cl
  41f664:	add    ebx,DWORD PTR [ecx]
  41f666:	mov    al,BYTE PTR [ebx]
  41f668:	test   al,0x9
  41f66a:	clc    
  41f66b:	retw   
  41f66d:	pop    edx
  41f66e:	adc    eax,0x1008c73b
  41f673:	bound  edx,QWORD PTR [ebx+0x32]
  41f676:	xor    esp,0x2c
  41f679:	imul   eax,DWORD PTR [edi-0x15937eff],0xddc420fc
  41f683:	sub    ah,BYTE PTR [esi-0x4578f764]
  41f689:	ja     0x41f687
  41f68b:	push   0xdc0cbed7
  41f690:	jo     0xf5458ff2
  41f696:	inc    ecx
  41f697:	pushf  
  41f698:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f699:	(bad)  
  41f69a:	dec    ecx
  41f69b:	fsubr  QWORD PTR [edi]
  41f69d:	xor    eax,0x4eb81824
  41f6a2:	and    BYTE PTR ds:0xdaf232df,bl
  41f6a8:	sbb    al,0x4
  41f6aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6ab:	jg     0x41f64e
  41f6ad:	push   esi
  41f6ae:	mov    edx,0x227644dd
  41f6b3:	mov    ebx,0xdefc6e10
  41f6b8:	inc    edi
  41f6b9:	stos   DWORD PTR es:[edi],eax
  41f6ba:	lds    esp,FWORD PTR [eax]
  41f6bc:	shl    bl,0xaf
  41f6bf:	or     ch,BYTE PTR [eax]
  41f6c1:	xchg   ecx,ecx
  41f6c3:	cmp    ah,BYTE PTR [eax+0x7016949d]
  41f6c9:	lds    ecx,FWORD PTR [edi-0x172784c1]
  41f6cf:	push   0x26
  41f6d1:	gs in  eax,0x48
  41f6d4:	push   eax
  41f6d5:	cmp    edx,esp
  41f6d7:	jmp    0x41f67a
  41f6d9:	xchg   edi,eax
  41f6da:	mov    dl,0x50
  41f6dc:	pop    eax
  41f6dd:	push   0xffffffcc
  41f6df:	sub    edi,ebx
  41f6e1:	ins    BYTE PTR es:[edi],dx
  41f6e2:	dec    esp
  41f6e3:	mov    eax,0x82d290a7
  41f6e8:	sbb    al,0x83
  41f6ea:	and    DWORD PTR [ebx-0x14],edx
  41f6ed:	pop    esp
  41f6ee:	mov    esp,0x3fc1b67c
  41f6f3:	int    0xcb
  41f6f5:	push   esp
  41f6f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6f7:	mov    WORD PTR [edx+0x665d91ca],es
  41f6fd:	out    dx,eax
  41f6fe:	mov    cl,BYTE PTR fs:0x199e373d
  41f705:	dec    edx
  41f706:	and    ebx,DWORD PTR [edi-0x5c]
  41f709:	sbb    DWORD PTR [esi+edx*8],ebp
  41f70c:	aaa    
  41f70d:	push   bx
  41f70f:	push   0xffffff81
  41f711:	test   bh,bh
  41f713:	jns    0x41f6d4
  41f715:	ds shr esp,0x2e
  41f719:	or     ebx,DWORD PTR [edx+0x1ca440a2]
  41f71f:	in     eax,dx
  41f720:	add    eax,0xa9439f5a
  41f725:	add    DWORD PTR [ebx+0x336436ed],edi
  41f72b:	fs out 0x72,eax
  41f72e:	inc    ecx
  41f72f:	lds    edx,FWORD PTR [ecx]
  41f731:	test   DWORD PTR [edi+0x3c],0x1a186e30
  41f738:	fldenv [esi-0x9]
  41f73b:	loop   0x41f775
  41f73d:	jmp    0x41f6c8
  41f73f:	sbb    al,0x59
  41f741:	enter  0xa8eb,0x2d
  41f745:	sub    eax,0xff0323ec
  41f74a:	jne    0x41f753
  41f74c:	mov    WORD PTR [eax+esi*4-0x69bd3244],?
  41f753:	push   ebx
  41f754:	(bad)  
  41f756:	es xchg edi,eax
  41f758:	les    ebx,FWORD PTR [ebx]
  41f75a:	shr    BYTE PTR [edx+0x23d8f505],0xe3
  41f761:	ret    
  41f762:	cmp    DWORD PTR [ecx+0x588bd875],edi
  41f768:	push   ebx
  41f769:	lds    edi,FWORD PTR [esi+0x1c4cdca8]
  41f76f:	cmp    dh,BYTE PTR [ebp-0x19]
  41f772:	add    eax,edi
  41f774:	xchg   esp,eax
  41f775:	add    al,0x3e
  41f777:	push   es
  41f778:	outs   dx,DWORD PTR ds:[esi]
  41f779:	xor    dl,dh
  41f77b:	or     DWORD PTR [ebp+0x13],ebx
  41f77e:	(bad)  
  41f77f:	std    
  41f780:	push   es
  41f781:	lds    ebp,FWORD PTR [ebp+0x7e56a7b]
  41f787:	dec    dh
  41f789:	fwait
  41f78a:	jg     0x41f7a3
  41f78c:	mov    bh,0xe1
  41f78e:	cmc    
  41f78f:	or     esp,DWORD PTR [ecx-0x43]
  41f792:	clc    
  41f793:	inc    esi
  41f794:	add    esp,ebx
  41f796:	clc    
  41f797:	mov    eax,ds:0x984d623a
  41f79c:	mov    al,0x8e
  41f79e:	and    DWORD PTR [ebp+0x56],ebx
  41f7a1:	mov    DWORD PTR [ebp+eiz*1-0x33],ebp
  41f7a5:	dec    esp
  41f7a6:	and    al,0xc9
  41f7a8:	and    eax,0xf9a29b65
  41f7ad:	es ja  0x41f7ae
  41f7b0:	mov    ds:0x683ad67a,al
  41f7b5:	add    esi,esp
  41f7b7:	inc    edx
  41f7b8:	repz aad 0x66
  41f7bb:	pop    ebx
  41f7bc:	xor    al,0x90
  41f7be:	push   edi
  41f7bf:	push   ss
  41f7c0:	mov    ecx,0xf10f5c53
  41f7c5:	pop    ss
  41f7c6:	xchg   edx,eax
  41f7c7:	mul    esi
  41f7c9:	xor    DWORD PTR [edi-0x38e58117],esi
  41f7cf:	push   0x94ff5c5f
  41f7d4:	pusha  
  41f7d5:	add    eax,0x19b8229d
  41f7da:	mov    al,0xf8
  41f7dc:	imul   DWORD PTR [ebp-0x5d006dc]
  41f7e2:	inc    ebx
  41f7e3:	addr16 inc eax
  41f7e5:	pop    edx
  41f7e6:	sub    DWORD PTR [esi+0x1a2214b6],edx
  41f7ec:	mov    dh,0x6b
  41f7ee:	loope  0x41f7b8
  41f7f0:	jns    0x41f850
  41f7f2:	inc    edx
  41f7f3:	cmp    DWORD PTR [ebx-0x2dda1eeb],esi
  41f7f9:	(bad)  
  41f7fa:	out    0xf8,al
  41f7fc:	xchg   ebx,eax
  41f7fd:	clc    
  41f7fe:	aaa    
  41f7ff:	daa    
  41f800:	sbb    dl,BYTE PTR [edx+ebp*8]
  41f803:	(bad)  
  41f804:	iret   
  41f805:	jp     0x41f7eb
  41f807:	sub    al,0x85
  41f809:	ins    BYTE PTR es:[edi],dx
  41f80a:	and    BYTE PTR [esi+0x23],bh
  41f80d:	dec    esi
  41f80e:	inc    esi
  41f80f:	jmp    FWORD PTR [eax]
  41f811:	shl    BYTE PTR [esi-0x1b],1
  41f814:	xor    edi,DWORD PTR [ebp+0x6b4ad4fd]
  41f81a:	sub    al,0xab
  41f81c:	inc    ebp
  41f81d:	push   esi
  41f81e:	arpl   WORD PTR [eax+0x156fcb5e],bx
  41f824:	ins    BYTE PTR es:[edi],dx
  41f825:	fwait
  41f826:	xchg   edx,eax
  41f827:	add    eax,0xa6e20fd4
  41f82c:	jae    0x41f836
  41f82e:	jae    0x41f8a8
  41f830:	in     eax,0x70
  41f832:	nop
  41f833:	sbb    ch,BYTE PTR gs:[edx-0x51d9ad12]
  41f83a:	adc    dl,BYTE PTR [ecx+0x43]
  41f83d:	xor    esi,DWORD PTR [edx]
  41f83f:	loopne 0x41f806
  41f841:	rol    BYTE PTR [ebx-0x22e15bfe],cl
  41f847:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f848:	cs fdivr st(6),st
  41f84b:	mov    ds:0x8aaa2a58,al
  41f850:	shl    DWORD PTR [edi],1
  41f852:	sub    al,0x1
  41f854:	and    DWORD PTR [ebx],ebp
  41f856:	add    bl,ch
  41f858:	and    DWORD PTR [eax+0x3f],0x4b
  41f85c:	jecxz  0x41f8c2
  41f85e:	xor    cl,ch
  41f860:	aam    0x4d
  41f862:	push   0xd4e6fa23
  41f867:	fld    QWORD PTR [ecx+0x4d]
  41f86a:	cmp    ebp,DWORD PTR ds:0xaf8bd1d2
  41f870:	add    al,0x6
  41f872:	bts    DWORD PTR [eax-0x4aca8f94],edi
  41f879:	ins    DWORD PTR es:[edi],dx
  41f87a:	add    dh,dh
  41f87c:	inc    ecx
  41f87d:	scas   al,BYTE PTR es:[edi]
  41f87e:	lods   al,BYTE PTR ds:[esi]
  41f87f:	ror    ah,0xe8
  41f882:	mov    eax,ds:0xca544ceb
  41f887:	push   0x8382fa13
  41f88c:	pop    ds
  41f88d:	shr    ebx,1
  41f88f:	ficom  WORD PTR [esp+ebp*1+0x67]
  41f893:	repnz dec esp
  41f895:	(bad)  
  41f896:	push   edx
  41f897:	mov    esi,ebx
  41f899:	scas   eax,DWORD PTR es:[edi]
  41f89a:	ret    0x4e0a
  41f89d:	cli    
  41f89e:	nop
  41f89f:	adc    ebx,ebp
  41f8a1:	imul   DWORD PTR [esi]
  41f8a3:	cli    
  41f8a4:	imul   eax,DWORD PTR [edx+0x4e9505b9],0x75d97d18
  41f8ae:	pop    ds
  41f8af:	call   DWORD PTR [edx]
  41f8b1:	mov    cl,0x9b
  41f8b3:	mov    ah,0x75
  41f8b5:	sbb    dl,0x2f
  41f8b8:	sbb    eax,0x4fa33d82
  41f8bd:	inc    esp
  41f8be:	jnp    0x41f926
  41f8c0:	jl     0x41f86a
  41f8c2:	add    al,BYTE PTR [eax-0x47]
  41f8c5:	inc    edi
  41f8c6:	xchg   ebx,eax
  41f8c7:	and    al,0x9
  41f8c9:	cmp    al,0x9f
  41f8cb:	sti    
  41f8cc:	push   esp
  41f8cd:	mov    ah,0x27
  41f8cf:	stos   DWORD PTR es:[edi],eax
  41f8d0:	sub    BYTE PTR [edi],al
  41f8d2:	xlat   BYTE PTR ds:[ebx]
  41f8d3:	adc    al,0x90
  41f8d5:	fiadd  WORD PTR [esi-0x44d56d3b]
  41f8db:	adc    al,0x25
  41f8dd:	cs sbb eax,0x45711948
  41f8e3:	inc    edi
  41f8e4:	add    cl,BYTE PTR [edx]
  41f8e6:	neg    BYTE PTR [ebp+0x4aa9c97b]
  41f8ec:	leave  
  41f8ed:	dec    ebx
  41f8ee:	pop    es
  41f8ef:	push   0x4005d4f0
  41f8f4:	or     eax,0xc499bfaf
  41f8f9:	call   0xf326:0x8756aa3c
  41f900:	shl    DWORD PTR [eax+0x22],cl
  41f903:	pop    ebx
  41f904:	lods   al,BYTE PTR ds:[esi]
  41f905:	pop    eax
  41f906:	inc    edi
  41f907:	and    BYTE PTR [edx],dl
  41f909:	pop    esp
  41f90a:	or     ah,dl
  41f90c:	inc    eax
  41f90d:	outs   dx,DWORD PTR ds:[esi]
  41f90e:	por    mm5,mm5
  41f911:	pop    eax
  41f912:	push   0xffffffa7
  41f914:	lahf   
  41f915:	mov    ?,WORD PTR [ebp+0xfa43b20]
  41f91b:	cli    
  41f91c:	xchg   esi,eax
  41f91d:	dec    edx
  41f91e:	pop    esi
  41f91f:	daa    
  41f920:	aaa    
  41f921:	cld    
  41f922:	neg    BYTE PTR [ecx]
  41f924:	or     eax,0x408c009a
  41f929:	mov    ebx,0xc32abd86
  41f92e:	and    DWORD PTR [ebx],0x74d08d46
  41f934:	fwait
  41f935:	xchg   esp,eax
  41f936:	sub    eax,0x59ed9452
  41f93b:	add    DWORD PTR [ebx-0x47c2b132],0x60734b7d
  41f945:	or     bh,dh
  41f947:	add    BYTE PTR ds:[ecx+0x1df84246],bl
  41f94e:	dec    ebx
  41f94f:	cwde   
  41f950:	mov    esi,0x915a7a9e
  41f955:	dec    esi
  41f956:	pop    edi
  41f957:	push   0x3896692f
  41f95c:	jns    0x41f9a3
  41f95e:	(bad)  
  41f95f:	mov    ch,0xd8
  41f961:	popf   
  41f962:	jle    0x41f9cd
  41f964:	in     eax,dx
  41f965:	or     eax,0x50e03696
  41f96a:	push   esi
  41f96b:	mov    ebp,0x79694c6c
  41f970:	add    BYTE PTR [ebx-0x6b],dl
  41f973:	dec    ebx
  41f974:	aam    0xf3
  41f976:	pop    edx
  41f977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f978:	jne    0x41f9a6
  41f97a:	cdq    
  41f97b:	shr    DWORD PTR [ecx],cl
  41f97d:	jmp    0xcd90:0x306d7b2f
  41f984:	push   0xffffffb9
  41f986:	inc    ebx
  41f987:	ret    0x48a2
  41f98a:	pop    ds
  41f98b:	rcl    DWORD PTR [eax-0x5f],1
  41f98e:	call   0xeef2dd45
  41f993:	loope  0x41fa09
  41f995:	stos   DWORD PTR es:[edi],eax
  41f996:	dec    esp
  41f997:	pop    edi
  41f998:	scas   eax,DWORD PTR es:[edi]
  41f999:	pop    esp
  41f99a:	out    0x63,eax
  41f99c:	add    esp,DWORD PTR [eax-0x155c2daf]
  41f9a2:	aam    0x6b
  41f9a4:	das    
  41f9a5:	mov    cl,0x7
  41f9a7:	xor    esi,esi
  41f9a9:	mov    WORD PTR [edi],cs
  41f9ab:	ss icebp 
  41f9ad:	mov    eax,0xd2eced6
  41f9b2:	ds inc ecx
  41f9b4:	inc    eax
  41f9b5:	cwde   
  41f9b6:	dec    ecx
  41f9b7:	adc    DWORD PTR [ecx-0x2345a1dd],eax
  41f9bd:	mov    ch,0x1
  41f9bf:	sbb    eax,0xe5c73bf0
  41f9c4:	mov    ebx,0x21f5f2a8
  41f9c9:	out    0x4a,al
  41f9cb:	xor    ch,ch
  41f9cd:	in     al,dx
  41f9ce:	dec    ebp
  41f9cf:	(bad)  
  41f9d1:	xor    edx,DWORD PTR [ebp-0x5345c7bc]
  41f9d7:	icebp  
  41f9d8:	mov    esi,0x4b95fa8
  41f9dd:	pop    eax
  41f9de:	adc    al,0xe
  41f9e0:	inc    bh
  41f9e2:	imul   ebx,ebx,0xffffffb9
  41f9e5:	mov    ebx,0xf2d82a62
  41f9ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9eb:	jg     0x41f9c1
  41f9ed:	(bad)  
  41f9ee:	jo     0x41f9b4
  41f9f0:	loop   0x41fa68
  41f9f2:	push   esp
  41f9f3:	ret    0x7c2
  41f9f6:	inc    edi
  41f9f7:	pop    eax
  41f9f8:	jecxz  0x41f9aa
  41f9fa:	sbb    eax,0xbf4b0ba2
  41f9ff:	or     eax,0xaa1b2de7
  41fa04:	cmp    ebp,esi
  41fa06:	pushf  
  41fa07:	pop    edx
  41fa08:	push   esp
  41fa09:	lock jmp 0x3c33:0x19e8cce1
  41fa11:	scas   al,BYTE PTR es:[edi]
  41fa12:	out    0x96,eax
  41fa14:	retf   
  41fa15:	test   al,0x2e
  41fa17:	adc    BYTE PTR [esi-0x47fb4ef9],bl
  41fa1d:	xor    eax,0xa00361b1
  41fa22:	ror    DWORD PTR ds:[esi-0x25c12c97],1
  41fa29:	ins    DWORD PTR es:[edi],dx
  41fa2a:	jp     0x41f9c9
  41fa2c:	pop    esi
  41fa2d:	ins    DWORD PTR es:[edi],dx
  41fa2e:	cmovg  edx,eax
  41fa31:	and    ecx,0x46
  41fa34:	outs   dx,DWORD PTR ds:[esi]
  41fa35:	mov    dh,0x20
  41fa37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa38:	xor    edi,DWORD PTR ds:0x1c7a0af6
  41fa3e:	out    dx,al
  41fa3f:	jg     0x41f9c2
  41fa41:	or     BYTE PTR [ebx+eiz*2],cl
  41fa44:	jmp    FWORD PTR [eax+0xa]
  41fa47:	in     al,dx
  41fa48:	lods   eax,DWORD PTR ds:[esi]
  41fa49:	push   ebp
  41fa4a:	test   al,0xc9
  41fa4c:	sbb    eax,0x84c2c008
  41fa51:	push   edx
  41fa52:	push   0x21
  41fa54:	sbb    DWORD PTR [edx+edi*8+0x27571fd4],ecx
  41fa5b:	jno    0x41fa92
  41fa5d:	xchg   esp,eax
  41fa5e:	cmp    DWORD PTR [bp+si+0x78],ecx
  41fa62:	xor    BYTE PTR [edx],dh
  41fa64:	jae    0x41fa3f
  41fa66:	xlat   BYTE PTR ds:[ebx]
  41fa67:	push   edi
  41fa68:	sbb    DWORD PTR [eax+ecx*8],ebp
  41fa6b:	(bad)  
  41fa6c:	aad    0x1e
  41fa6e:	aam    0x24
  41fa70:	(bad)  
  41fa71:	and    BYTE PTR [esi],dh
  41fa73:	sub    BYTE PTR [edx],al
  41fa75:	inc    BYTE PTR [ebx-0x747eaf96]
  41fa7b:	(bad)  
  41fa7c:	dec    edi
  41fa7d:	lahf   
  41fa7e:	cmp    bh,BYTE PTR [ecx-0x66bc4624]
  41fa84:	loope  0x41fa98
  41fa86:	ror    DWORD PTR [esi-0x4ebefc37],0xdd
  41fa8d:	adc    eax,0xcbae13ed
  41fa92:	cmc    
  41fa93:	nop
  41fa94:	imul   eax,DWORD PTR [ecx+ebp*1-0x3],0x14
  41fa99:	or     bl,BYTE PTR [edx+0x2]
  41fa9c:	push   esi
  41fa9d:	jecxz  0x41fb04
  41fa9f:	shr    BYTE PTR [edx+0xd],cl
  41faa2:	sbb    eax,0xb6c3b07
  41faa7:	inc    ebp
  41faa8:	mov    ds:0xab1a7bc1,eax
  41faad:	cmp    esi,ecx
  41faaf:	mov    ecx,0x647300a3
  41fab4:	pop    es
  41fab5:	cmp    bl,BYTE PTR [esp+ebx*4+0x2f]
  41fab9:	sbb    ch,BYTE PTR [edi+0xd]
  41fabc:	xor    BYTE PTR [ebx-0x63],al
  41fabf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fac0:	or     eax,0xc2fbef5b
  41fac5:	loope  0x41fac4
  41fac7:	or     al,bh
  41fac9:	adc    esi,ebp
  41facb:	arpl   WORD PTR [esi-0x12],si
  41face:	fldenv [edx]
  41fad0:	or     eax,0xcb37a062
  41fad5:	add    bh,BYTE PTR [edi]
  41fad7:	and    eax,0x7b968979
  41fadc:	fwait
  41fadd:	or     esi,DWORD PTR [edi+0x3b]
  41fae0:	mov    dl,0xbe
  41fae2:	push   esi
  41fae3:	das    
  41fae4:	push   0x3581b470
  41fae9:	jge    0x41fa99
  41faeb:	adc    BYTE PTR [edx+0x418d6f5d],dh
  41faf1:	cdq    
  41faf2:	xchg   ebx,eax
  41faf3:	pop    es
  41faf4:	out    dx,al
  41faf5:	sub    ch,BYTE PTR [edx-0x77]
  41faf8:	dec    esp
  41faf9:	push   esi
  41fafa:	popf   
  41fafb:	sub    al,0xdd
  41fafd:	sti    
  41fafe:	and    dh,ah
  41fb00:	leave  
  41fb01:	stos   BYTE PTR es:[edi],al
  41fb02:	rcr    DWORD PTR [eax+edx*4+0x54],1
  41fb06:	jb     0x41faca
  41fb08:	push   ebp
  41fb09:	sub    BYTE PTR [ebx-0x63b6b1f3],dl
  41fb0f:	sbb    BYTE PTR [eax],bh
  41fb11:	pop    edi
  41fb12:	mov    bl,0xa4
  41fb14:	lea    edi,[ecx-0x108a7ac6]
  41fb1a:	push   ebx
  41fb1b:	adc    DWORD PTR ds:0x8d3a8d8a,eax
  41fb21:	adc    edx,DWORD PTR [eax+0x69]
  41fb24:	(bad)  
  41fb26:	mov    DWORD PTR [edx-0x52c67591],eax
  41fb2c:	cmp    ecx,DWORD PTR [esp+ebx*1+0x7f]
  41fb30:	outs   dx,BYTE PTR ds:[esi]
  41fb31:	push   cs
  41fb32:	int    0x3d
  41fb34:	push   esp
  41fb35:	dec    eax
  41fb36:	into   
  41fb37:	pop    esp
  41fb38:	repz inc eax
  41fb3a:	pop    edi
  41fb3b:	sbb    eax,esp
  41fb3d:	imul   edi,DWORD PTR [eiz*8+0x5fc91da2],0x4a56eb63
  41fb48:	out    0xa4,al
  41fb4a:	push   edx
  41fb4b:	hlt    
  41fb4c:	fnstenv [edi+0x2e]
  41fb4f:	xchg   ebp,eax
  41fb50:	repnz inc edi
  41fb52:	xor    eax,0x4dcc0c
  41fb57:	dec    ebp
  41fb58:	aaa    
  41fb59:	test   eax,0x33b47644
  41fb5e:	popa   
  41fb5f:	jo     0x41fb15
  41fb61:	inc    esp
  41fb62:	adc    dl,BYTE PTR [ebx-0x7639b7aa]
  41fb68:	push   0x13
  41fb6a:	cld    
  41fb6b:	cmp    al,0xab
  41fb6d:	ja     0x41fb4b
  41fb6f:	shl    BYTE PTR [esi+0x2e],cl
  41fb72:	jp     0x41fbf0
  41fb74:	loop   0x41fb59
  41fb76:	xchg   DWORD PTR [ebp+0x446bf775],edx
  41fb7c:	rcr    DWORD PTR [edi-0x52],1
  41fb7f:	push   ebx
  41fb80:	loopne 0x41fbd6
  41fb82:	mov    esp,DWORD PTR [ebx+0x2c6993cd]
  41fb88:	icebp  
  41fb89:	mul    bh
  41fb8b:	sub    eax,0xf2b45dbc
  41fb90:	repz loopne 0x41fb3b
  41fb93:	and    DWORD PTR [ebx-0x68],eax
  41fb96:	push   ds
  41fb97:	icebp  
  41fb98:	mov    edx,0x39388bcd
  41fb9d:	dec    ebp
  41fb9e:	or     ecx,DWORD PTR [ebp-0x53]
  41fba1:	xor    BYTE PTR [ebp+0x2b],bl
  41fba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fba5:	cli    
  41fba6:	add    DWORD PTR [edi],0x18
  41fba9:	xchg   edi,eax
  41fbaa:	daa    
  41fbab:	dec    edi
  41fbac:	push   ss
  41fbad:	fmul   DWORD PTR [ebx+eiz*1+0x5b]
  41fbb1:	icebp  
  41fbb2:	mov    bh,0x13
  41fbb4:	mov    ds:0x777f94c7,eax
  41fbb9:	jmp    0x41fb48
  41fbbb:	lahf   
  41fbbc:	mov    WORD PTR [ebx],cs
  41fbbe:	pop    ecx
  41fbbf:	mov    esp,0x37526dc8
  41fbc4:	push   ds
  41fbc5:	cs push ss
  41fbc7:	shl    DWORD PTR [ecx+0x14],cl
  41fbca:	xchg   ecx,eax
  41fbcb:	jecxz  0x41fbd4
  41fbcd:	aad    0x1f
  41fbcf:	and    BYTE PTR [ecx],ah
  41fbd1:	mov    edi,0x98caa00d
  41fbd6:	add    al,0x7e
  41fbd8:	cmp    DWORD PTR [esi-0xd],ebp
  41fbdb:	and    esi,DWORD PTR [esp+ebp*8]
  41fbde:	mov    WORD PTR [edi-0x38],ss
  41fbe1:	aam    0xbe
  41fbe3:	sbb    bl,BYTE PTR [edi]
  41fbe5:	repz out 0xa6,al
  41fbe8:	loope  0x41fc2b
  41fbea:	or     BYTE PTR [eax+0x1f],cl
  41fbed:	popa   
  41fbee:	mov    ecx,0x51a5319e
  41fbf3:	test   BYTE PTR [edx],bl
  41fbf5:	out    0x31,eax
  41fbf7:	loope  0x41fc18
  41fbf9:	mov    dl,0xa2
  41fbfb:	add    al,0x0
  41fbfd:	cwde   
  41fbfe:	das    
  41fbff:	inc    edx
  41fc00:	mov    al,ds:0xdc8af8a6
  41fc05:	or     esp,ecx
  41fc07:	lods   al,BYTE PTR ds:[esi]
  41fc08:	aaa    
  41fc09:	cmp    DWORD PTR [edi-0x76],edi
  41fc0c:	jno    0x41fc6a
  41fc0e:	jp     0x41fbe8
  41fc10:	aad    0x7
  41fc12:	xor    dh,ah
  41fc14:	iret   
  41fc15:	das    
  41fc16:	fld    DWORD PTR [edi]
  41fc18:	retf   
  41fc19:	jp     0x41fc28
  41fc1b:	ins    BYTE PTR es:[edi],dx
  41fc1c:	shl    DWORD PTR [ebx],1
  41fc1e:	sbb    eax,0xec001092
  41fc23:	stos   DWORD PTR es:[edi],eax
  41fc24:	repz clc 
  41fc26:	cdq    
  41fc27:	mov    ch,0x87
  41fc29:	mov    ds:0x5b5d046f,al
  41fc2e:	leave  
  41fc2f:	jno    0x41fbb7
  41fc31:	arpl   WORD PTR [ebp-0x5338a0b8],bx
  41fc37:	pop    esp
  41fc38:	retf   
  41fc39:	push   esi
  41fc3a:	mov    cl,0xd4
  41fc3c:	lods   al,BYTE PTR ds:[esi]
  41fc3d:	test   al,0x18
  41fc3f:	stos   DWORD PTR es:[edi],eax
  41fc40:	sub    BYTE PTR [ebx+0x29],cl
  41fc43:	sahf   
  41fc44:	gs sub eax,0xbbbbc824
  41fc4a:	mov    fs,WORD PTR [eax-0x29ac341]
  41fc50:	push   edi
  41fc51:	xchg   edx,eax
  41fc52:	xor    BYTE PTR es:[ebx-0xd],dl
  41fc56:	mov    dl,BYTE PTR [ecx]
  41fc58:	or     edi,DWORD PTR [edi+0x5ffdbf68]
  41fc5e:	iret   
  41fc5f:	push   es
  41fc60:	or     BYTE PTR [ebp-0x1],dl
  41fc63:	xchg   ebx,eax
  41fc64:	sub    eax,0xcd42747
  41fc69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc6a:	cmp    al,0xd0
  41fc6c:	sbb    edi,DWORD PTR [ebp+0x1e]
  41fc6f:	frstpm(287 only) 
  41fc71:	add    al,0x64
  41fc73:	fldlg2 
  41fc75:	fcomp  DWORD PTR ds:0x57f22ecf
  41fc7b:	daa    
  41fc7c:	rep lods al,BYTE PTR ds:[esi]
  41fc7e:	ins    DWORD PTR es:[edi],dx
  41fc7f:	stc    
  41fc80:	push   ebp
  41fc81:	sbb    esi,DWORD PTR [edx]
  41fc83:	and    BYTE PTR [esp+edx*2],bl
  41fc86:	xchg   ebp,eax
  41fc87:	sub    ecx,esi
  41fc89:	xchg   BYTE PTR [edi-0x6c],dh
  41fc8c:	je     0x41fcd3
  41fc8e:	or     al,0xb6
  41fc90:	mov    al,0xea
  41fc92:	sub    dh,ah
  41fc94:	push   es
  41fc95:	leave  
  41fc96:	inc    edx
  41fc97:	push   cs
  41fc98:	scas   al,BYTE PTR es:[edi]
  41fc99:	cmp    ebp,DWORD PTR [ebx]
  41fc9b:	fwait
  41fc9c:	lods   al,BYTE PTR ds:[esi]
  41fc9d:	sti    
  41fc9e:	out    dx,eax
  41fc9f:	jge    0x41fc3d
  41fca1:	out    0x86,al
  41fca3:	hlt    
  41fca4:	mov    cl,0xe9
  41fca6:	data16 mov ds:0x3fe3e04,al
  41fcac:	sbb    eax,0xe413fd3
  41fcb1:	fild   QWORD PTR [eax+0x2d]
  41fcb4:	cli    
  41fcb5:	das    
  41fcb6:	jmp    0xabbe:0x638252b8
  41fcbd:	(bad)  
  41fcbf:	stos   BYTE PTR es:[edi],al
  41fcc0:	jns    0x41fcef
  41fcc2:	or     eax,0x1fa6b5ba
  41fcc7:	ret    
  41fcc8:	push   ebp
  41fcc9:	or     BYTE PTR [edx-0x1d6f7e7a],bh
  41fccf:	int3   
  41fcd0:	js     0x41fcf7
  41fcd2:	(bad)  
  41fcd3:	jle    0x41fd0b
  41fcd5:	loop   0x41fca9
  41fcd7:	lock jl 0x41fc98
  41fcda:	mov    cl,al
  41fcdc:	cwde   
  41fcdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcde:	mov    al,0x6b
  41fce0:	xor    ah,BYTE PTR [ecx]
  41fce2:	mul    eax
  41fce4:	jmp    0x41fca6
  41fce6:	adc    bh,BYTE PTR [eax]
  41fce8:	jp     0x41fd54
  41fcea:	mov    cl,0x42
  41fcec:	enter  0x9c0a,0x12
  41fcf0:	nop
  41fcf1:	jbe    0x41fd51
  41fcf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcf4:	mov    bh,0x9e
  41fcf6:	std    
  41fcf7:	sub    ecx,ecx
  41fcf9:	mov    bl,0x44
  41fcfb:	mov    al,ds:0xa419f942
  41fd00:	cmp    BYTE PTR [edi+0x76],dh
  41fd03:	aam    0x60
  41fd05:	jmp    0xa50f:0x9c87d845
  41fd0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd0d:	pop    ss
  41fd0e:	gs add ebp,ecx
  41fd11:	mov    ah,0x26
  41fd13:	or     DWORD PTR [ebx],edx
  41fd15:	mov    ds:0x7bc2f6e8,al
  41fd1a:	adc    eax,DWORD PTR [ebx]
  41fd1c:	adc    al,BYTE PTR [ebx]
  41fd1e:	mov    ds:0xc510a996,al
  41fd23:	loope  0x41fcfa
  41fd25:	(bad)  [ecx-0x72]
  41fd28:	jl     0x41fcef
  41fd2a:	dec    esi
  41fd2b:	xor    dl,BYTE PTR [ebp+0x5f9188b5]
  41fd31:	mov    eax,ds:0xe5f2e141
  41fd36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd37:	and    esp,DWORD PTR [edx]
  41fd39:	ret    
  41fd3a:	or     eax,0x502ddcda
  41fd3f:	aad    0xeb
  41fd41:	xchg   BYTE PTR [ecx+0x9b9c3ed],bl
  41fd47:	mov    eax,0xfe3a6486
  41fd4c:	push   edi
  41fd4d:	jno    0x41fd7a
  41fd4f:	jnp    0x41fd68
  41fd51:	push   0x2528d7f3
  41fd56:	push   0xd
  41fd58:	js     0x41fd4d
  41fd5a:	into   
  41fd5b:	xchg   edi,eax
  41fd5c:	xor    eax,DWORD PTR [ecx+eiz*8]
  41fd5f:	test   eax,0x2076c697
  41fd64:	ss add eax,0xb95fc09c
  41fd6a:	into   
  41fd6b:	mov    ds:0xd8ec3c0,al
  41fd70:	pop    es
  41fd71:	das    
  41fd72:	jnp    0x41fd02
  41fd74:	int3   
  41fd75:	imul   eax,DWORD PTR [ecx],0xffffffc9
  41fd78:	inc    edi
  41fd79:	adc    bl,ch
  41fd7b:	fsubr  DWORD PTR [ecx-0x3d]
  41fd7e:	push   ds
  41fd7f:	sub    ecx,DWORD PTR [esp+ebp*1-0x4d56a525]
  41fd86:	mov    eax,0x4ee22e82
  41fd8b:	(bad)  
  41fd8c:	loopne 0x41fd8c
  41fd8e:	sbb    BYTE PTR [esi+0x1],ch
  41fd91:	mov    edi,0x43ac750
  41fd96:	outs   dx,BYTE PTR fs:[esi]
  41fd98:	mov    cl,0x59
  41fd9a:	iret   
  41fd9b:	and    bl,BYTE PTR [esi]
  41fd9d:	push   0x1fe5ed7b
  41fda2:	jmp    0x41fde4
  41fda4:	inc    ebx
  41fda5:	and    DWORD PTR [edx+0x1e],ebp
  41fda8:	popa   
  41fda9:	nop
  41fdaa:	or     DWORD PTR [edx],ecx
  41fdac:	mov    edi,0xe067ccfc
  41fdb1:	gs xchg ebp,eax
  41fdb3:	jmp    0x2474:0xa0f1b2e5
  41fdba:	mov    ah,0x26
  41fdbc:	mov    esp,0xc11ced12
  41fdc1:	lahf   
  41fdc2:	add    ah,ah
  41fdc4:	(bad)  
  41fdc5:	popf   
  41fdc6:	push   eax
  41fdc7:	sub    al,0xa
  41fdc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdca:	fwait
  41fdcb:	mov    bh,0x6d
  41fdcd:	add    DWORD PTR [ebp+0x3f],edx
  41fdd0:	sub    bh,cl
  41fdd2:	fisttp QWORD PTR [esi-0x41]
  41fdd5:	popa   
  41fdd6:	leave  
  41fdd7:	test   eax,0xcd8f58b5
  41fddc:	jecxz  0x41fd72
  41fdde:	stc    
  41fddf:	pop    edi
  41fde0:	iret   
  41fde1:	or     edi,DWORD PTR [ebx+0x17f4e2dc]
  41fde7:	mov    dh,BYTE PTR [edi+0x12e2c468]
  41fded:	adc    al,bl
  41fdef:	leave  
  41fdf0:	xor    ebx,DWORD PTR [ecx+0x44a70ff8]
  41fdf6:	adc    al,0x1b
  41fdf8:	push   0xffffffac
  41fdfa:	add    BYTE PTR [edi-0x52b0df14],bl
  41fe00:	jb     0x41fe4b
  41fe02:	inc    ebx
  41fe03:	mov    edx,0x959f28bc
  41fe08:	les    ecx,FWORD PTR [eax+0x659dc3e9]
  41fe0e:	mov    fs,WORD PTR [edx-0x3c]
  41fe11:	jnp    0x41fe71
  41fe13:	adc    eax,0xcb69e6a1
  41fe18:	mov    cl,0x4e
  41fe1a:	jle    0x41fe0a
  41fe1c:	jo     0x41fe68
  41fe1e:	mov    ecx,0x5b4e238d
  41fe23:	nop
  41fe24:	bound  ebx,QWORD PTR [ecx]
  41fe26:	sub    esp,DWORD PTR [esi-0x10]
  41fe29:	inc    esp
  41fe2a:	bound  sp,DWORD PTR [ebx+0x6f]
  41fe2e:	mov    bh,BYTE PTR [ebp+0x53cc4cfd]
  41fe34:	push   ss
  41fe35:	dec    edi
  41fe36:	les    ebx,FWORD PTR [ecx+0x6296365d]
  41fe3c:	rcr    BYTE PTR [esi-0x34],cl
  41fe3f:	in     eax,dx
  41fe40:	pop    eax
  41fe41:	lock push eax
  41fe43:	mov    ds:0xc5dad77e,al
  41fe48:	shl    eax,cl
  41fe4a:	arpl   WORD PTR [edi+esi*1+0x2a30df6f],di
  41fe51:	xchg   edx,eax
  41fe52:	sar    BYTE PTR [ebp*1+0x64ab738f],0x8f
  41fe5a:	inc    ebp
  41fe5b:	mov    ch,0x7f
  41fe5d:	in     al,0xa5
  41fe5f:	sbb    BYTE PTR [ebx+eiz*4+0x384ed67c],ah
  41fe66:	ret    0x87a1
  41fe69:	call   0x25bd6274
  41fe6e:	imul   DWORD PTR [ebx-0x62]
  41fe71:	cmp    dl,BYTE PTR [ecx-0x27153857]
  41fe77:	aaa    
  41fe78:	enter  0x87f3,0x2b
  41fe7c:	jle    0x41fe6d
  41fe7e:	das    
  41fe7f:	push   ecx
  41fe80:	or     DWORD PTR [ecx+0x6e],esi
  41fe83:	and    DWORD PTR [esi+0x37c5ab6b],ebp
  41fe89:	push   esp
  41fe8a:	add    BYTE PTR [ecx],ch
  41fe8c:	xchg   ebp,eax
  41fe8d:	dec    edx
  41fe8e:	sbb    BYTE PTR [edx],0xe7
  41fe91:	or     BYTE PTR [ecx+0x1c321e20],0xd0
  41fe98:	dec    ebp
  41fe99:	or     al,0x1a
  41fe9b:	mov    edx,?
  41fe9d:	push   edx
  41fe9e:	(bad)  
  41fe9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fea0:	pop    ecx
  41fea1:	div    DWORD PTR [ecx]
  41fea3:	and    eax,0x719c431a
  41fea8:	call   0x52512281
  41fead:	sar    DWORD PTR [edx],cl
  41feaf:	retf   
  41feb0:	and    al,0x9
  41feb2:	cmp    al,0x8d
  41feb4:	sub    DWORD PTR [esp+esi*4],ebx
  41feb7:	test   eax,0xb45b7f35
  41febc:	(bad)  
  41febd:	xrelease mov BYTE PTR [ecx],dh
  41fec0:	pop    ds
  41fec1:	and    DWORD PTR [edx+0x61],0x5e
  41fec5:	mov    dl,0xba
  41fec7:	push   esp
  41fec8:	or     ah,0xd7
  41fecb:	push   ebp
  41fecc:	sub    DWORD PTR cs:[edi+0x4baa4e91],edx
  41fed3:	dec    ebx
  41fed4:	adc    al,0x3e
  41fed6:	jmp    0xe30c:0xb8b5f3d8
  41fedd:	outs   dx,BYTE PTR ds:[esi]
  41fede:	and    esi,DWORD PTR [edx+0xa757c3a]
  41fee4:	mov    bh,0x26
  41fee6:	mov    al,ds:0xc5a7703a
  41feeb:	bswap  esi
  41feed:	out    0xbb,al
  41feef:	xchg   esi,eax
  41fef0:	jecxz  0x41ff69
  41fef2:	fcmovnb st,st(1)
  41fef4:	jnp    0x41fef5
  41fef6:	aad    0xb5
  41fef8:	nop    eax
  41fefb:	mov    eax,0xde8cb638
  41ff00:	loop   0x41feaa
  41ff02:	sbb    BYTE PTR [edx+0x44],0x54
  41ff06:	call   0x84c981b1
  41ff0b:	push   ebx
  41ff0c:	rcl    DWORD PTR [ebp+esi*2+0x7a],cl
  41ff10:	push   edx
  41ff11:	mov    eax,ds:0x6f85737a
  41ff16:	clc    
  41ff17:	pop    ss
  41ff18:	nop
  41ff19:	xchg   ecx,eax
  41ff1a:	fsub   QWORD PTR [eax+0x1f35062d]
  41ff20:	mov    al,dh
  41ff22:	or     al,0xc2
  41ff24:	sub    edx,edx
  41ff26:	outs   dx,DWORD PTR ds:[esi]
  41ff27:	shl    BYTE PTR [edx-0x41d90006],1
  41ff2d:	out    dx,eax
  41ff2e:	mov    ah,0x13
  41ff30:	mov    al,ds:0x9bd4fbcc
  41ff35:	mov    al,0x6c
  41ff37:	mov    dh,0xb5
  41ff39:	pusha  
  41ff3a:	mov    ecx,0xe820ca10
  41ff3f:	sahf   
  41ff40:	aaa    
  41ff41:	inc    ebp
  41ff42:	(bad)  
  41ff43:	jne    0x41ffbc
  41ff45:	mov    edi,0xbb3cb083
  41ff4a:	out    dx,eax
  41ff4b:	dec    edx
  41ff4c:	cli    
  41ff4d:	sahf   
  41ff4e:	jmp    0xc3bf:0xe943a35b
  41ff55:	adc    dh,ah
  41ff57:	into   
  41ff58:	stc    
  41ff59:	imul   ebp,DWORD PTR [edx-0x69],0xffffff8d
  41ff5d:	ins    DWORD PTR es:[edi],dx
  41ff5e:	pop    ecx
  41ff5f:	push   ds
  41ff60:	retf   0x368c
  41ff63:	sbb    bh,BYTE PTR [edi]
  41ff65:	xor    BYTE PTR [eax+0x3c],0xa7
  41ff69:	mov    ebx,0xc600f598
  41ff6e:	jmp    0x41ff83
  41ff70:	jae    0x41ff80
  41ff72:	jb     0x41ff3f
  41ff74:	sahf   
  41ff75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff76:	pop    ecx
  41ff77:	pushf  
  41ff78:	aad    0x95
  41ff7a:	aas    
  41ff7b:	dec    ecx
  41ff7c:	pop    ebp
  41ff7d:	mov    al,0x5b
  41ff7f:	push   ss
  41ff80:	call   eax
  41ff82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff83:	pop    edi
  41ff84:	loope  0x41ff31
  41ff86:	cmp    eax,0x8eb88caa
  41ff8b:	push   ebp
  41ff8c:	lods   eax,DWORD PTR ds:[esi]
  41ff8d:	bound  eax,QWORD PTR [edi+0x1004f92]
  41ff93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff94:	xor    ch,bl
  41ff96:	nop
  41ff97:	jle    0x41ff93
  41ff99:	cmp    eax,0xa6d04a4b
  41ff9e:	and    eax,0xcc7d2665
  41ffa3:	neg    ah
  41ffa5:	push   eax
  41ffa6:	cwde   
  41ffa7:	out    dx,eax
  41ffa8:	cwde   
  41ffa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffaa:	retf   
  41ffab:	es add al,0xc3
  41ffae:	fs ins WORD PTR es:[edi],dx
  41ffb1:	dec    ecx
  41ffb2:	test   al,0x7e
  41ffb4:	in     eax,dx
  41ffb5:	xchg   esi,eax
  41ffb6:	xchg   edi,eax
  41ffb7:	xor    ecx,DWORD PTR [ebx+0x46381ffc]
  41ffbd:	xchg   ebp,eax
  41ffbe:	cs sbb dh,BYTE PTR gs:[esi]
  41ffc2:	(bad)  
  41ffc3:	into   
  41ffc4:	and    al,0x26
  41ffc6:	(bad)  
  41ffc8:	hlt    
  41ffc9:	stos   DWORD PTR es:[edi],eax
  41ffca:	inc    esi
  41ffcb:	mov    ebx,?
  41ffcd:	scas   al,BYTE PTR es:[edi]
  41ffce:	ret    
  41ffcf:	dec    esp
  41ffd0:	repz push ebx
  41ffd2:	xchg   esp,eax
  41ffd3:	mov    cl,0xd8
  41ffd5:	mov    cl,0x6c
  41ffd7:	push   esi
  41ffd8:	jg     0x42000f
  41ffda:	mov    edi,0x6c99130b
  41ffdf:	adc    al,0xbf
  41ffe1:	xchg   edi,eax
  41ffe2:	ss push ecx
  41ffe4:	(bad)  
  41ffe5:	cmp    BYTE PTR [eax-0x38],bl
  41ffe8:	fcomp  st(0)
  41ffea:	cmp    dh,ch
  41ffec:	jmp    0x524f773b
  41fff1:	sub    bl,BYTE PTR [edi]
  41fff3:	jbe    0x42001a
  41fff5:	sub    BYTE PTR [ebx],dl
  41fff7:	mov    al,ds:0xe6a76ec8
  41fffc:	and    DWORD PTR [esi],edx
  41fffe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffff:	fbld   TBYTE PTR [ebp+edi*2+0x62]
  420003:	inc    ebp
  420004:	mov    WORD PTR [esi],sp
  420007:	stos   BYTE PTR es:[edi],al
  420008:	loop   0x420018
  42000a:	push   ds
  42000b:	cs jmp 0x3b50:0x75f84783
  420013:	enter  0x9e13,0xaf
  420017:	inc    eax
  420018:	mov    ds:0x66d72a22,al
  42001d:	cmp    esi,edx
  42001f:	test   BYTE PTR [edi],dh
  420021:	loop   0x42003a
  420023:	jge    0x420020
  420025:	adc    eax,0x6771be65
  42002a:	jbe    0x420051
  42002c:	push   es
  42002d:	popf   
  42002e:	push   ds
  42002f:	out    0x27,al
  420031:	mov    bh,BYTE PTR [ecx+0x5bdeca6f]
  420037:	aas    
  420038:	dec    esi
  420039:	dec    esp
  42003a:	mov    cl,0x21
  42003c:	jl     0x420095
  42003e:	inc    esi
  42003f:	push   ecx
  420040:	inc    edi
  420041:	das    
  420042:	repz pop edi
  420044:	adc    al,0xf2
  420046:	dec    edi
  420047:	cmp    esp,DWORD PTR [eax+eiz*1+0x31]
  42004b:	jne    0x41fffe
  42004d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42004e:	stos   DWORD PTR es:[edi],eax
  42004f:	cmp    edi,DWORD PTR [ebp-0x46]
  420052:	pop    edi
  420053:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420054:	clc    
  420055:	add    ebx,DWORD PTR [ecx]
  420057:	mov    edi,DWORD PTR [esi]
  420059:	mov    bl,0xf7
  42005b:	jne    0x41fff0
  42005d:	fwait
  42005e:	mov    edi,0xdd3d17f7
  420063:	mov    ecx,0x13cebab5
  420068:	and    al,0xf0
  42006a:	vxorpd xmm0,xmm6,XMMWORD PTR [ecx-0x614921be]
  420072:	and    al,0xc4
  420074:	jns    0x420063
  420076:	icebp  
  420077:	mov    DWORD PTR [ebx+eax*8-0x34],edi
  42007b:	mov    esi,0x58d50723
  420080:	jbe    0x420005
  420082:	sub    BYTE PTR [edi+0x7cf5c6c3],0x50
  420089:	sub    edi,edi
  42008b:	xchg   DWORD PTR [esi-0x7f],esp
  42008e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42008f:	mov    eax,ds:0x906be974
  420094:	(bad)  
  420095:	faddp  st(0),st
  420097:	fnstcw WORD PTR [eax-0x9691ded]
  42009d:	mov    al,0x83
  42009f:	sub    eax,0x11f4002b
  4200a4:	inc    ebx
  4200a5:	pop    ecx
  4200a6:	dec    eax
  4200a7:	aaa    
  4200a8:	enter  0xa646,0xe2
  4200ac:	or     al,0xfd
  4200ae:	sbb    al,0x9
  4200b0:	addr16 mov eax,ds:0x6c11
  4200b4:	call   0x9eb64f2a
  4200b9:	fistp  DWORD PTR [edi]
  4200bb:	ficomp DWORD PTR ds:0x6b3a7e2d
  4200c1:	jae    0x4200d1
  4200c3:	loope  0x42009c
  4200c5:	mov    dh,0xcd
  4200c7:	(bad)  
  4200ca:	jp     0x4200cf
  4200cc:	outs   dx,BYTE PTR ds:[esi]
  4200cd:	aaa    
  4200ce:	adc    cl,BYTE PTR ds:0x2c481510
  4200d4:	cmp    dh,BYTE PTR [edx]
  4200d6:	jp     0x420113
  4200d8:	dec    edx
  4200d9:	cwde   
  4200da:	fisub  DWORD PTR [ecx]
  4200dc:	cmp    eax,0x4a7ff4e8
  4200e1:	stos   DWORD PTR es:[edi],eax
  4200e2:	jns    0x4200ef
  4200e4:	jne    0x4200dc
  4200e6:	mov    bh,0xb7
  4200e8:	mov    bl,0x68
  4200ea:	dec    edx
  4200eb:	dec    eax
  4200ec:	les    edi,FWORD PTR [esi+0x65]
  4200ef:	cmp    eax,0x56f4df19
  4200f4:	jg     0x4200c8
  4200f6:	es out 0xb5,eax
  4200f9:	sbb    BYTE PTR [ebx-0x114daef0],al
  4200ff:	jge    0x4200d6
  420101:	(bad)  
  420102:	pop    ebx
  420103:	(bad)  
  420104:	das    
  420105:	jnp    0x420136
  420107:	(bad)  
  420108:	cmp    al,0x28
  42010a:	loope  0x42013b
  42010c:	into   
  42010d:	stos   DWORD PTR es:[edi],eax
  42010e:	xor    BYTE PTR [ebx-0x56],ah
  420111:	mov    bh,0x3a
  420113:	sub    DWORD PTR [edx],eax
  420115:	out    dx,al
  420116:	scas   al,BYTE PTR es:[edi]
  420117:	mov    ah,0xe4
  420119:	sbb    al,0xce
  42011b:	(bad)  
  42011c:	out    dx,al
  42011d:	es add eax,0x62f2bb80
  420123:	hlt    
  420124:	adc    esp,edx
  420126:	xor    ah,BYTE PTR [esi-0x735c8350]
  42012c:	sbb    al,0x6
  42012e:	stos   BYTE PTR es:[edi],al
  42012f:	cld    
  420130:	out    dx,eax
  420131:	lock cmc 
  420133:	cmp    eax,0xc4420d3
  420138:	bound  ebp,QWORD PTR [ecx-0x4c]
  42013b:	loope  0x4200bd
  42013d:	dec    esp
  42013e:	rdpmc  
  420140:	pop    ebx
  420141:	(bad)  
  420142:	fdivr  QWORD PTR [edi+0x14a5b251]
  420148:	xor    DWORD PTR ds:0xd948e3b1,0xffffffaa
  42014f:	test   BYTE PTR [eax+0x12],bh
  420152:	cmc    
  420153:	and    eax,0x52fd670e
  420158:	cmp    al,0x35
  42015a:	and    BYTE PTR [ebx+ecx*8+0x75],0x46
  42015f:	sub    ebx,DWORD PTR [esi-0x48]
  420162:	inc    esi
  420163:	ret    0xf33f
  420166:	rcr    BYTE PTR [edx],cl
  420168:	dec    edi
  420169:	xor    DWORD PTR [esi+0x4e],ebx
  42016c:	leave  
  42016d:	jno    0x4201c1
  42016f:	fs retf 
  420171:	jge    0x42016f
  420173:	dec    esi
  420174:	call   0x5467:0x5e346b73
  42017b:	cld    
  42017c:	mov    esp,DWORD PTR [ecx]
  42017e:	push   ds
  42017f:	(bad)
  420182:	pushf  
  420183:	cwde   
  420184:	adc    DWORD PTR [esi-0x63],ebp
  420187:	into   
  420188:	cs pop ebx
  42018a:	xchg   BYTE PTR [ebx-0x4a6f5a9d],bl
  420190:	call   0x860b:0xc795cb7a
  420197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420198:	lods   eax,DWORD PTR ds:[esi]
  420199:	xchg   esp,eax
  42019a:	sbb    bl,0xd
  42019d:	sub    al,0x61
  42019f:	arpl   WORD PTR [esi+eax*2],sp
  4201a2:	mov    bh,0x59
  4201a4:	inc    DWORD PTR [ecx+0x20e4f51f]
  4201aa:	mov    esi,DWORD PTR [ebx]
  4201ac:	sbb    esp,DWORD PTR [ebp-0x700e4c35]
  4201b2:	repnz sbb eax,0x335ffae9
  4201b8:	clc    
  4201b9:	push   ds
  4201ba:	arpl   WORD PTR [eax+ecx*8],ax
  4201bd:	out    0xf5,al
  4201bf:	hlt    
  4201c0:	pop    edx
  4201c1:	retf   0x9fbf
  4201c4:	pop    eax
  4201c5:	push   edi
  4201c6:	nop
  4201c7:	pop    esp
  4201c8:	int    0x38
  4201ca:	retf   0xac96
  4201cd:	repnz in al,dx
  4201cf:	call   0x27a2:0x9e68383d
  4201d6:	pop    eax
  4201d7:	(bad)  
  4201d8:	pop    eax
  4201d9:	repnz fidivr DWORD PTR [ecx]
  4201dc:	sbb    BYTE PTR [eax-0xe71e812],bl
  4201e2:	add    ah,al
  4201e4:	loop   0x420212
  4201e6:	adc    BYTE PTR [ebx],bl
  4201e8:	push   esp
  4201e9:	cmp    DWORD PTR [esi-0x67506f5],eax
  4201ef:	sbb    dl,BYTE PTR [ecx]
  4201f1:	test   DWORD PTR [edx+eax*8-0x16662996],ecx
  4201f8:	xchg   edi,eax
  4201f9:	inc    eax
  4201fa:	rol    DWORD PTR [edx],1
  4201fc:	sub    al,0x6a
  4201fe:	les    ebp,FWORD PTR [ebx+0x7ddfa259]
  420204:	retf   0xabf3
  420207:	and    al,0xa
  420209:	imul   ecx,eax,0x58a598b0
  42020f:	stos   BYTE PTR es:[edi],al
  420210:	(bad)  
  420211:	fwait
  420212:	mov    eax,0xf7c4c75f
  420217:	retf   0xa9ab
  42021a:	(bad)  
  42021c:	test   BYTE PTR [ecx],al
  42021e:	dec    esp
  42021f:	arpl   WORD PTR [edx-0xe34a743],ax
  420225:	rcr    DWORD PTR [edx+0x1f3bc19a],cl
  42022b:	mov    eax,DWORD PTR [ecx-0x77]
  42022e:	fisubr DWORD PTR [esi]
  420230:	dec    ebx
  420231:	jg     0x4201fb
  420233:	inc    esi
  420234:	ja     0x4202a7
  420236:	jbe    0x4201d5
  420238:	xor    BYTE PTR [edi],al
  42023a:	xor    al,0x9c
  42023c:	popf   
  42023d:	adc    ebp,edx
  42023f:	mov    ch,0xe0
  420241:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420242:	adc    ch,ch
  420244:	test   al,0xc7
  420246:	(bad)  [ebx]
  420248:	loop   0x4201d4
  42024a:	or     al,0x69
  42024c:	mov    edi,0x903c52ae
  420251:	ret    0x4d24
  420254:	push   cs
  420255:	lock pop edx
  420257:	xchg   BYTE PTR [ebx],bh
  420259:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42025a:	push   ecx
  42025b:	mov    ebx,0x7cf5ff0b
  420260:	outs   dx,BYTE PTR ds:[esi]
  420261:	dec    esi
  420262:	jnp    0x42024b
  420264:	pop    es
  420265:	lods   eax,DWORD PTR ds:[esi]
  420266:	out    dx,eax
  420267:	repnz cwde 
  420269:	push   ss
  42026a:	push   esp
  42026b:	fs bswap esi
  42026e:	push   esp
  42026f:	in     al,0x89
  420271:	rcr    DWORD PTR [eax+0xd],cl
  420274:	fs int 0x81
  420277:	and    ebp,DWORD PTR [ecx+0x39fdb308]
  42027d:	fnstcw WORD PTR [edx-0x5f]
  420280:	pop    ds
  420281:	dec    ebx
  420282:	fcomp  QWORD PTR [esi]
  420285:	lock sbb al,0xad
  420288:	es xchg ebx,eax
  42028a:	xor    eax,esi
  42028c:	lahf   
  42028d:	mov    bl,0xf4
  42028f:	aam    0x6f
  420291:	add    BYTE PTR [esi-0x74],bl
  420294:	xchg   esi,eax
  420295:	test   eax,0x77d7f079
  42029a:	div    ebx
  42029c:	sbb    edx,DWORD PTR [ebx]
  42029e:	and    ah,dh
  4202a0:	enter  0xd2e4,0xf9
  4202a4:	inc    eax
  4202a5:	mov    eax,ds:0x1ac5747d
  4202aa:	adc    eax,0xd69b365f
  4202af:	xor    esp,DWORD PTR [ebp-0x4ff6f934]
  4202b5:	addr16 dec esp
  4202b7:	dec    ebx
  4202b8:	movhps QWORD PTR [ebp-0x18206eaa],xmm1
  4202bf:	dec    ebp
  4202c0:	inc    ebx
  4202c1:	jmp    0xa3da9143
  4202c6:	dec    eax
  4202c7:	add    al,0xcb
  4202c9:	mov    ds:0xd501fcf,eax
  4202ce:	test   BYTE PTR [edx-0x656c5b7d],ch
  4202d4:	scas   al,BYTE PTR es:[edi]
  4202d5:	mov    dh,0x61
  4202d7:	fwait
  4202d8:	sub    al,0x2b
  4202da:	mov    ch,0x7
  4202dc:	xor    al,al
  4202de:	in     eax,0xdc
  4202e0:	mov    ch,al
  4202e2:	in     al,dx
  4202e3:	arpl   WORD PTR [eax],di
  4202e5:	mov    esi,0x84f837d6
  4202ea:	jb     0x420311
  4202ec:	or     bh,BYTE PTR [esi]
  4202ee:	stc    
  4202ef:	in     eax,dx
  4202f0:	sub    BYTE PTR [esi-0x1f64362f],bl
  4202f6:	es dec ecx
  4202f8:	addr16 ret 0x9eec
  4202fc:	inc    esi
  4202fd:	imul   ecx,DWORD PTR [esi+0x278d7579],0x23
  420304:	adc    ah,bh
  420306:	addr16 gs enter 0x5f2d,0xc5
  42030c:	pop    edx
  42030d:	xor    al,al
  42030f:	inc    edi
  420310:	pushf  
  420311:	dec    ecx
  420312:	xor    eax,DWORD PTR [ecx-0x39]
  420315:	cmp    bl,ah
  420317:	cdq    
  420318:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420319:	out    dx,al
  42031a:	jge    0x420378
  42031c:	stos   BYTE PTR es:[edi],al
  42031d:	push   0xea0dc279
  420322:	fucomp st(5)
  420324:	leave  
  420325:	mov    edx,0x68b2c17a
  42032a:	xchg   ebx,eax
  42032b:	fcomip st,st(5)
  42032d:	bound  ebx,QWORD PTR [ebx+0x8506d7d]
  420333:	mov    esp,0x8ad4408
  420338:	and    eax,0x2e671d5e
  42033d:	in     eax,0x6f
  42033f:	and    eax,0x8b45a2b8
  420344:	push   esp
  420345:	fs jle 0x42035a
  420348:	js     0x4203b8
  42034a:	jle    0x4203a1
  42034c:	mov    ebp,0x36ab9bab
  420351:	inc    ebp
  420352:	mov    ebx,0x6170ca2f
  420357:	fdivr  st,st(0)
  420359:	or     DWORD PTR [edi+0x47e1fe91],ecx
  42035f:	adc    bh,bl
  420361:	push   esp
  420362:	mov    al,ds:0x90c51d3c
  420367:	bound  eax,QWORD PTR [edi-0x4b]
  42036a:	xchg   ecx,eax
  42036b:	sahf   
  42036c:	ret    0x406e
  42036f:	call   0x2f6e:0xc48a01c5
  420376:	in     al,0x90
  420378:	or     al,0x58
  42037a:	push   ebp
  42037b:	sub    dl,BYTE PTR [ecx+0x4c3e2819]
  420381:	je     0x4203d3
  420383:	xchg   edi,eax
  420384:	ja     0x4203cc
  420386:	jmp    0xd3852f09
  42038b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42038c:	rcr    DWORD PTR [edi-0x2d],cl
  42038f:	xchg   esi,eax
  420390:	cwde   
  420391:	fmul   QWORD PTR [ebx]
  420393:	mov    bl,0x5c
  420395:	push   0xb
  420397:	(bad)  [ebx-0x45c84f84]
  42039d:	jae    0x42038f
  42039f:	ins    BYTE PTR es:[edi],dx
  4203a0:	dec    esi
  4203a1:	dec    edi
  4203a2:	mov    cl,0x87
  4203a4:	stc    
  4203a5:	jle    0x42037d
  4203a7:	pop    ds
  4203a8:	mov    ds:0x3f8f181e,al
  4203ad:	data16 fsubr DWORD PTR [ebp+0x5a]
  4203b1:	test   eax,0x19d1ea26
  4203b6:	adc    BYTE PTR [ebx-0x15ac67d4],al
  4203bc:	icebp  
  4203bd:	push   0x77a1f7d
  4203c2:	push   0xdb20ab16
  4203c7:	mov    al,0x92
  4203c9:	pop    ss
  4203ca:	scas   eax,DWORD PTR es:[edi]
  4203cb:	and    al,0x12
  4203cd:	xchg   esi,eax
  4203ce:	repnz mov BYTE PTR [esi],ch
  4203d1:	cli    
  4203d2:	dec    eax
  4203d3:	aaa    
  4203d4:	ins    DWORD PTR es:[edi],dx
  4203d5:	bound  eax,QWORD PTR [edi+0x5d542f97]
  4203db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203dc:	popa   
  4203dd:	retf   
  4203de:	inc    ebx
  4203df:	stos   DWORD PTR es:[edi],eax
  4203e0:	hlt    
  4203e1:	in     al,0xe
  4203e3:	sbb    BYTE PTR [edi-0x5a47396c],bl
  4203e9:	sahf   
  4203ea:	jge    0x42043e
  4203ec:	daa    
  4203ed:	xor    BYTE PTR [ecx],0x84
  4203f0:	out    0xb7,eax
  4203f2:	dec    edi
  4203f3:	retf   
  4203f4:	jbe    0x42043a
  4203f6:	mov    ah,0xce
  4203f8:	jmp    0x941b7ec0
  4203fd:	retf   
  4203fe:	ins    BYTE PTR es:[edi],dx
  4203ff:	adc    edi,DWORD PTR [edi+0x32]
  420402:	mov    ecx,0xd2bb3a65
  420407:	mov    DWORD PTR [ebx+0x73],esi
  42040a:	pop    es
  42040b:	xchg   esi,esi
  42040d:	mov    cl,0x80
  42040f:	xor    cl,bh
  420411:	mov    ds,WORD PTR [edx+0x18]
  420414:	mov    dl,0xda
  420416:	jb     0x4203b5
  420418:	sbb    DWORD PTR [esi+ebx*1-0x227acf70],esp
  42041f:	add    edx,DWORD PTR [edx]
  420421:	mul    dh
  420423:	push   0xffa0f5cb
  420428:	shl    BYTE PTR [eax],1
  42042a:	out    dx,eax
  42042b:	and    esp,DWORD PTR [esi-0x5f5785e2]
  420431:	cwde   
  420432:	cmp    eax,0x95b9218b
  420437:	inc    ecx
  420439:	mov    eax,0x8a43fc92
  42043e:	pop    ecx
  42043f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420440:	mov    DWORD PTR [ebp-0xc],ebx
  420443:	mov    WORD PTR [edi+0x1beefb64],?
  420449:	and    cl,BYTE PTR [ebx+0x3b]
  42044c:	lea    esi,[edi-0x70]
  42044f:	sbb    al,0xe5
  420451:	sub    dh,0x15
  420454:	int3   
  420455:	gs test eax,0x733ec00c
  42045b:	into   
  42045c:	not    bl
  42045e:	pop    es
  42045f:	xor    ecx,DWORD PTR [ebp-0x64]
  420462:	scas   eax,DWORD PTR es:[edi]
  420463:	inc    esp
  420464:	addr16 nop
  420466:	push   cs
  420467:	xchg   BYTE PTR [ebx+0x5b],dh
  42046a:	in     al,0xf3
  42046c:	xchg   esi,eax
  42046d:	fucomi st,st(7)
  42046f:	ret    0x8a24
  420472:	js     0x42043b
  420474:	leave  
  420475:	push   ds
  420476:	push   0x79
  420478:	out    dx,eax
  420479:	sub    BYTE PTR [ebp-0x51],bl
  42047c:	push   edi
  42047d:	cwde   
  42047e:	fcomi  st,st(7)
  420480:	or     al,cl
  420482:	fwait
  420483:	je     0x4204d2
  420485:	sub    eax,0x95366197
  42048a:	jl     0x4204be
  42048c:	rol    edx,1
  42048e:	jb     0x42045a
  420490:	imul   eax,DWORD PTR [esi-0x123dea1e],0xd
  420497:	pop    ebx
  420498:	inc    esi
  420499:	mov    bl,0x1f
  42049b:	dec    edi
  42049c:	lds    ecx,FWORD PTR [ebp+0x33]
  42049f:	mov    esp,0x667ad82d
  4204a4:	shl    DWORD PTR [eax+ebx*4],1
  4204a7:	popa   
  4204a8:	jo     0x4204b4
  4204aa:	mov    al,ds:0xfa117110
  4204b0:	rol    DWORD PTR [esi+0x30ebf0e4],1
  4204b6:	inc    esp
  4204b7:	and    BYTE PTR ds:0x314d80db,ah
  4204bd:	add    ah,ah
  4204bf:	jl     0x42045c
  4204c1:	inc    ebx
  4204c2:	add    bh,BYTE PTR [ecx-0x75]
  4204c5:	sbb    eax,0xf1fa61cb
  4204ca:	cmp    BYTE PTR ds:0xebed2684,0x89
  4204d1:	test   al,0x38
  4204d3:	sbb    eax,0xe447ddcf
  4204d8:	icebp  
  4204d9:	imul   eax,DWORD PTR [eax],0xa69354ed
  4204df:	loop   0x4204a7
  4204e1:	sbb    eax,0x4d5208f3
  4204e6:	xchg   BYTE PTR ds:0x401e62a4,ah
  4204ec:	out    0xed,al
  4204ee:	rol    BYTE PTR gs:[edx-0x31eb80eb],0x72
  4204f6:	push   ecx
  4204f7:	icebp  
  4204f8:	adc    ebx,0xca98594a
  4204fe:	jb     0x4204e1
  420500:	neg    ah
  420502:	dec    ebx
  420503:	ret    
  420504:	mov    edx,0xae3fced8
  420509:	mov    bl,0xaf
  42050b:	xchg   esp,eax
  42050c:	or     cl,BYTE PTR [esi]
  42050e:	clc    
  42050f:	pop    ebx
  420510:	retf   0x5ab1
  420513:	pop    ds
  420514:	enter  0x36b1,0x2e
  420518:	imul   esi,ecx,0xffffffa5
  42051b:	mov    edi,0x2d68dc24
  420520:	loop   0x4204ae
  420522:	xchg   esp,esp
  420524:	imul   eax,DWORD PTR [edi+0x405050b8],0x2
  42052b:	fstp   DWORD PTR [edi+ecx*2]
  42052e:	imul   eax,ecx,0x4db5793a
  420534:	jmp    0x9da7:0x439ffeeb
  42053b:	pop    ecx
  42053c:	jmp    0x9430d770
  420541:	icebp  
  420542:	push   ebp
  420543:	cmp    edi,DWORD PTR [edx+0x2accc42b]
  420549:	add    dh,0x78
  42054c:	push   cs
  42054d:	mov    edx,0xe09e40f
  420552:	test   eax,0xadaceade
  420557:	add    ecx,DWORD PTR [eax+edx*1+0xafb455c]
  42055e:	pop    ecx
  42055f:	rol    DWORD PTR [ebx],1
  420561:	push   edx
  420562:	out    0xae,eax
  420564:	pop    ebx
  420565:	jb     0x42050e
  420567:	(bad)
  42056a:	xchg   edi,eax
  42056b:	pop    ebp
  42056c:	push   es
  42056d:	and    eax,0x48ccc163
  420572:	mov    edi,ebx
  420574:	mov    ds:0x5562e552,al
  420579:	hlt    
  42057a:	fwait
  42057b:	mov    edi,0x4bc47ce6
  420580:	mov    ch,0x56
  420582:	pop    esi
  420583:	out    0x3f,eax
  420585:	in     eax,0xfc
  420587:	cmp    eax,0x7659623e
  42058c:	into   
  42058d:	push   cs
  42058e:	test   BYTE PTR [edx+0x215e3750],bl
  420594:	popa   
  420595:	jg     0x420589
  420597:	add    DWORD PTR [eax+0x2f],ebx
  42059a:	jle    0x4205e1
  42059c:	icebp  
  42059d:	jnp    0x4205d2
  42059f:	dec    esi
  4205a0:	push   edi
  4205a1:	neg    DWORD PTR [ecx]
  4205a3:	adc    ebx,ebx
  4205a5:	arpl   WORD PTR [ecx],ax
  4205a7:	stos   DWORD PTR es:[edi],eax
  4205a8:	add    DWORD PTR [esi+ecx*4],ebp
  4205ab:	add    eax,DWORD PTR [ecx+0x2a0f7297]
  4205b1:	dec    ecx
  4205b2:	cld    
  4205b3:	out    dx,eax
  4205b4:	jle    0x420589
  4205b6:	cs aam 0x10
  4205b9:	jmp    0x53fa60c1
  4205be:	xor    esi,ecx
  4205c0:	cmp    DWORD PTR [ecx-0x2ba5d9ff],eax
  4205c6:	mov    BYTE PTR [esi+0x58],ah
  4205c9:	lahf   
  4205ca:	(bad)  
  4205cb:	adc    ecx,DWORD PTR [ebp-0x53573ea2]
  4205d1:	xchg   edi,eax
  4205d2:	xchg   edx,eax
  4205d3:	pop    ebp
  4205d4:	xor    eax,0x99b871f3
  4205d9:	pop    ecx
  4205da:	mov    ah,0x82
  4205dc:	sub    DWORD PTR [esi],0xffffffce
  4205df:	push   0x3f
  4205e1:	pop    ecx
  4205e2:	and    al,0x96
  4205e4:	in     al,dx
  4205e5:	gs dec edi
  4205e7:	imul   ecx,DWORD PTR [eax+0x5f],0x28
  4205eb:	sub    ebp,edi
  4205ed:	push   edi
  4205ee:	pop    ds
  4205ef:	and    al,0x78
  4205f1:	aaa    
  4205f2:	retf   
  4205f3:	pop    ebp
  4205f4:	mov    ebp,0x9f6ccedd
  4205f9:	mov    ebp,0x898a9568
  4205fe:	push   ss
  4205ff:	mov    bh,0x66
  420601:	inc    esi
  420602:	push   cs
  420603:	cs jl  0x420672
  420606:	push   ss
  420607:	div    DWORD PTR [eax+0x1583f1d6]
  42060d:	cmp    ah,BYTE PTR [ebx]
  42060f:	es dec ecx
  420611:	enter  0xd80c,0x2d
  420615:	inc    DWORD PTR [ecx]
  420617:	push   edi
  420618:	(bad)  
  420619:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42061a:	sub    eax,0x11680482
  42061f:	push   esp
  420620:	jbe    0x420665
  420622:	jbe    0x42068e
  420624:	sbb    edi,esi
  420626:	adc    edx,DWORD PTR ds:0xd05905e
  42062c:	int    0xb2
  42062e:	pop    esp
  42062f:	bound  edi,QWORD PTR [ecx-0xf]
  420632:	cmc    
  420633:	je     0x4205c0
  420635:	mov    ss,eax
  420637:	stos   BYTE PTR es:[edi],al
  420638:	xchg   esi,eax
  420639:	icebp  
  42063a:	sbb    al,0x4b
  42063c:	test   al,0x2e
  42063e:	mov    al,0xe
  420640:	jge    0x4205f8
  420642:	push   eax
  420643:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420644:	push   esp
  420645:	rol    DWORD PTR [eax],cl
  420647:	push   ebp
  420648:	test   DWORD PTR [ebp-0x7565a02c],eax
  42064e:	fs dec esp
  420650:	mov    BYTE PTR [ecx],cl
  420652:	push   eax
  420653:	out    dx,eax
  420654:	outs   dx,DWORD PTR ds:[esi]
  420655:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420656:	clc    
  420657:	(bad)  [ebp+0x79]
  42065a:	xor    BYTE PTR [ecx-0x15],bl
  42065d:	fstp   st(5)
  42065f:	lods   al,BYTE PTR ds:[esi]
  420660:	inc    esp
  420661:	addr16 xor eax,0xd78072d0
  420667:	add    BYTE PTR [edi+0x1b],dh
  42066a:	jl     0x4206bd
  42066c:	aaa    
  42066d:	adc    al,0x5b
  42066f:	hlt    
  420670:	xchg   BYTE PTR [edi-0x3d],al
  420673:	outs   dx,DWORD PTR ds:[esi]
  420674:	dec    edi
  420675:	mov    esi,0xa4f40bfb
  42067a:	add    BYTE PTR [edx+0x191333f5],0x13
  420681:	push   ds
  420682:	out    dx,al
  420683:	arpl   WORD PTR [esi+0x7c0c21fe],cx
  420689:	adc    DWORD PTR [ebp+0x4929ca59],esi
  42068f:	or     eax,0xc27121d
  420694:	test   DWORD PTR [esi],ebx
  420696:	or     edi,esp
  420698:	retf   
  420699:	fnstcw WORD PTR [edx+eiz*1-0x67fec88f]
  4206a0:	ret    0xca42
  4206a3:	aam    0x7d
  4206a5:	stos   DWORD PTR es:[edi],eax
  4206a6:	push   ds
  4206a7:	push   eax
  4206a8:	push   0xf
  4206aa:	loop   0x4206b7
  4206ac:	hlt    
  4206ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206ae:	xchg   ebp,eax
  4206af:	mov    WORD PTR [edi-0x22],fs
  4206b2:	pop    esi
  4206b3:	xor    edi,DWORD PTR [eax]
  4206b5:	sub    al,0xb9
  4206b7:	push   edx
  4206b8:	sti    
  4206b9:	pop    ss
  4206ba:	add    dl,BYTE PTR ds:0xdc239b3f
  4206c0:	repnz pop ss
  4206c2:	add    eax,0xee1832f1
  4206c7:	dec    edx
  4206c8:	adc    eax,0x7922804a
  4206cd:	push   0x20ea8267
  4206d2:	ja     0x420745
  4206d4:	mov    al,ds:0xb9984e3d
  4206d9:	bound  ecx,QWORD PTR [edi]
  4206db:	fsub   QWORD PTR [eax-0x42f3211]
  4206e1:	cmc    
  4206e2:	fs xchg edx,eax
  4206e4:	or     BYTE PTR [edi-0x8],ch
  4206e7:	lea    esp,[edi]
  4206e9:	xor    edi,DWORD PTR ds:0x4b261153
  4206ef:	and    BYTE PTR [eax+0x74fe0143],cl
  4206f5:	push   ss
  4206f6:	adc    eax,0x5848dec5
  4206fb:	push   esp
  4206fc:	daa    
  4206fd:	xchg   ebx,eax
  4206fe:	lea    ebx,[ebp-0x17]
  420701:	sub    DWORD PTR [ecx],edx
  420703:	ins    BYTE PTR es:[edi],dx
  420704:	adc    DWORD PTR [ebx-0xc],esp
  420707:	stc    
  420708:	sahf   
  420709:	stos   DWORD PTR es:[edi],eax
  42070a:	rcl    DWORD PTR [ecx+0x5283d6ba],cl
  420710:	(bad)  
  420711:	repnz pop ds
  420713:	sbb    al,dl
  420715:	xor    esi,esp
  420717:	dec    eax
  420718:	aad    0x71
  42071a:	loopne 0x42077f
  42071c:	mov    ds:0x43475332,eax
  420721:	mov    ebx,0x5a7eae7f
  420726:	push   edi
  420727:	mov    bh,0xc1
  420729:	push   eax
  42072a:	mov    es,WORD PTR [ebx+0x2e]
  42072d:	inc    edi
  42072e:	loopne 0x4206fa
  420730:	jg     0x42077d
  420732:	push   cs
  420733:	add    BYTE PTR [ebx],bh
  420735:	xchg   ebp,eax
  420736:	aas    
  420737:	mov    ecx,0x6e60e546
  42073c:	lds    eax,FWORD PTR [edx+0x53]
  42073f:	xchg   dh,al
  420741:	jl     0x420743
  420743:	or     ecx,edi
  420745:	call   0xd9ea3e0d
  42074a:	mov    ch,0x39
  42074c:	push   esp
  42074d:	les    ebp,FWORD PTR es:[edi]
  420750:	pusha  
  420751:	adc    edi,DWORD PTR [edi-0x67]
  420754:	imul   esi,esp,0x8b45dbca
  42075a:	sti    
  42075b:	shl    DWORD PTR [edx-0x351bd59b],0xa6
  420762:	dec    edx
  420763:	xchg   ebx,eax
  420764:	ins    BYTE PTR es:[edi],dx
  420765:	mov    ds:0x4817784f,eax
  42076a:	xor    BYTE PTR [edi],dl
  42076c:	cmp    eax,DWORD PTR [eax]
  42076e:	in     eax,dx
  42076f:	(bad)  
  420770:	out    0xfe,eax
  420772:	enter  0x31e6,0xef
  420776:	jne    0x42070e
  420778:	mov    gs,WORD PTR [edx-0x66]
  42077b:	mov    bl,0x90
  42077d:	jo     0x420750
  42077f:	mov    ebp,0xa7b16e7d
  420784:	es inc ecx
  420786:	out    0x18,eax
  420788:	std    
  420789:	push   cs
  42078a:	cmp    ch,ch
  42078c:	(bad)
  42078f:	(bad)  
  420790:	jmp    FWORD PTR [eax]
  420792:	add    DWORD PTR [edi+0x58],ebx
  420795:	shl    DWORD PTR [eax],0x6f
  420798:	and    DWORD PTR [eax],ebx
  42079a:	popf   
  42079b:	jb     0x4207d5
  42079d:	cmp    BYTE PTR [edx],bl
  42079f:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207a1:	lods   al,BYTE PTR ds:[esi]
  4207a2:	int    0x9f
  4207a4:	add    eax,0xcfda2261
  4207a9:	xchg   esi,eax
  4207aa:	sub    al,0x3b
  4207ac:	popf   
  4207ad:	and    BYTE PTR [eax+edi*4+0x3],al
  4207b1:	in     al,dx
  4207b2:	adc    BYTE PTR [ecx+eax*2-0x78],al
  4207b6:	clc    
  4207b7:	pop    ds
  4207b8:	jp     0x420742
  4207ba:	jns    0x420751
  4207bc:	scas   al,BYTE PTR es:[edi]
  4207bd:	pushf  
  4207be:	loope  0x420762
  4207c0:	lea    edx,[ecx+0x14]
  4207c3:	jno    0x4207a5
  4207c5:	push   es
  4207c6:	push   es
  4207c7:	mov    dl,0xbc
  4207c9:	mov    WORD PTR ds:0x263a4a18,ds
  4207cf:	and    DWORD PTR [ebp-0x60],ecx
  4207d2:	pop    ss
  4207d3:	cmc    
  4207d4:	into   
  4207d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207d6:	into   
  4207d7:	jns    0x42081f
  4207d9:	shl    DWORD PTR [ebx-0x5c],1
  4207dc:	scas   eax,DWORD PTR es:[edi]
  4207dd:	pusha  
  4207de:	jo     0x420763
  4207e0:	fcom   QWORD PTR [edx]
  4207e2:	daa    
  4207e3:	push   esp
  4207e4:	pop    edi
  4207e5:	ror    BYTE PTR [ebx-0x7b],0x84
  4207e9:	imul   eax,DWORD PTR [ebx-0x3b],0x442aabf2
  4207f0:	mov    eax,ds:0xaa14ec39
  4207f5:	enter  0x74ad,0xcb
  4207f9:	cli    
  4207fa:	sub    bh,BYTE PTR [ecx]
  4207fc:	scas   eax,DWORD PTR es:[edi]
  4207fd:	push   ebx
  4207fe:	shl    BYTE PTR [ebx+0xd696124],cl
  420804:	in     al,dx
  420805:	dec    edi
  420806:	cmp    al,0x18
  420808:	ror    DWORD PTR [esi+0x3e],cl
  42080b:	shr    ecx,1
  42080d:	and    edi,DWORD PTR [ecx-0x13]
  420810:	and    DWORD PTR [edx],ebx
  420812:	psraw  mm0,QWORD PTR [ecx]
  420815:	stos   DWORD PTR es:[edi],eax
  420816:	popa   
  420817:	stos   BYTE PTR es:[edi],al
  420818:	out    dx,al
  420819:	mov    al,0x1a
  42081b:	rol    BYTE PTR ds:0x64689fd2,cl
  420821:	mov    dl,cl
  420823:	xor    cl,BYTE PTR [ebp+0x1f]
  420826:	out    0x18,eax
  420828:	popf   
  420829:	cmc    
  42082a:	or     BYTE PTR [edx+0x7d9765e3],al
  420830:	jb     0x42081e
  420832:	(bad)  [ebx-0x42]
  420835:	adc    eax,0xe3ca8952
  42083a:	sar    DWORD PTR [eax+0x1252cb48],0xff
  420841:	mov    esp,0xe7047f5c
  420846:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420847:	pop    edi
  420848:	xor    ch,bl
  42084a:	fwait
  42084b:	les    edx,FWORD PTR [ebx-0x7a554124]
  420851:	jne    0x42081e
  420853:	pop    es
  420854:	out    0x12,al
  420856:	(bad)  
  420857:	into   
  420858:	shr    BYTE PTR [edx-0x15],0xee
  42085c:	push   ds
  42085d:	(bad)  
  42085e:	fsub   DWORD PTR [edi*8+0x6a536299]
  420865:	mov    eax,0xaa58ffe4
  42086a:	sbb    BYTE PTR [ebp-0x42],ch
  42086d:	cmp    eax,0x5814733a
  420872:	les    esp,FWORD PTR [eax+0xf984331]
  420878:	cmp    al,0x31
  42087a:	(bad)  
  42087b:	aam    0xe2
  42087d:	push   ebx
  42087e:	xor    ebp,DWORD PTR [ecx]
  420880:	mov    ds:0x310addf5,eax
  420885:	bound  esi,QWORD PTR [edx-0x58c19125]
  42088b:	xchg   ecx,ecx
  42088d:	ror    DWORD PTR ds:0x229e4214,1
  420893:	popa   
  420894:	add    DWORD PTR [ebx],0x18e018ca
  42089a:	gs jno 0x420851
  42089d:	mov    esi,0x5f44afd8
  4208a2:	ins    BYTE PTR es:[edi],dx
  4208a3:	rcr    BYTE PTR cs:[esi-0x51],1
  4208a7:	icebp  
  4208a8:	mov    eax,ds:0x5b7f67de
  4208ad:	test   eax,0xe9d55277
  4208b2:	cmp    dh,ch
  4208b4:	pop    esi
  4208b5:	push   ss
  4208b6:	inc    ebx
  4208b7:	imul   edi,DWORD PTR [ebx+0xc],0xffffffde
  4208bb:	jb     0x420861
  4208bd:	(bad)  
  4208be:	mov    ebx,0x691f959a
  4208c3:	arpl   WORD PTR [ebx-0x12],bx
  4208c6:	push   0x4b5ef75a
  4208cb:	mov    BYTE PTR [edi+0x56],cl
  4208ce:	or     ecx,DWORD PTR [ebp+0x59]
  4208d1:	lea    edi,[ecx+0x787b2257]
  4208d7:	xchg   BYTE PTR [ecx+0x446de0bd],ah
  4208dd:	fnstenv [ecx-0x39]
  4208e0:	jmp    0x89cb0df9
  4208e5:	int3   
  4208e6:	xchg   edi,eax
  4208e7:	pusha  
  4208e8:	xchg   ecx,eax
  4208e9:	loope  0x4208c9
  4208eb:	fxam   
  4208ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208ee:	jbe    0x4208e6
  4208f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208f1:	xchg   DWORD PTR [ebx],esi
  4208f3:	xor    DWORD PTR ds:0x526f7d4b,edi
  4208f9:	push   0x4d9c8864
  4208fe:	cmc    
  4208ff:	rcr    DWORD PTR [esi-0xfb4a508],0xc8
  420906:	dec    bh
  420908:	lahf   
  420909:	into   
  42090a:	xor    al,0xe6
  42090c:	sub    DWORD PTR [eax],edi
  42090e:	cmp    ebx,DWORD PTR [ebx+0x5]
  420911:	dec    esi
  420912:	or     eax,0x650ee0b8
  420917:	inc    ecx
  420918:	retf   0x880e
  42091b:	repnz mov dl,0xce
  42091e:	sub    BYTE PTR [ebx+0x13e7dc73],dl
  420924:	dec    ebp
  420925:	aad    0x22
  420927:	push   esi
  420928:	sub    bl,BYTE PTR [ecx+0x5aac6288]
  42092e:	leave  
  42092f:	je     0x42097c
  420931:	cwde   
  420932:	ds aaa 
  420934:	and    DWORD PTR [ebp+0x49ed4210],0x43
  42093b:	mov    edx,0xed717b5a
  420940:	push   ebx
  420941:	mov    ebp,0x92a603b6
  420946:	std    
  420947:	mov    ebp,es
  420949:	and    esi,esi
  42094b:	push   cs
  42094c:	lahf   
  42094d:	daa    
  42094e:	cmp    DWORD PTR [esi],eax
  420950:	and    al,0x36
  420952:	jl     0x4209d0
  420954:	mov    eax,ds:0x2f6c5ec6
  420959:	mov    eax,0x9ded0e57
  42095e:	pop    ebx
  42095f:	mov    ebp,DWORD PTR [edx+0x261df184]
  420965:	xlat   BYTE PTR ds:[ebx]
  420966:	pop    DWORD PTR [esi-0x5a337e3]
  42096c:	iret   
  42096d:	retf   0x1299
  420970:	into   
  420971:	cli    
  420972:	pop    ecx
  420973:	lock cwde 
  420975:	dec    ebx
  420976:	mov    ebx,0x27683612
  42097b:	jb     0x420973
  42097d:	jno    0x4209d8
  42097f:	sbb    DWORD PTR [ebx+0x16],esi
  420982:	and    bh,BYTE PTR [edi]
  420984:	(bad)  
  420985:	push   edx
  420986:	push   es
  420987:	test   DWORD PTR [eax+0x32],eax
  42098a:	loop   0x420980
  42098c:	push   esp
  42098d:	jno    0x420965
  42098f:	pop    ss
  420990:	iret   
  420991:	inc    esp
  420992:	or     edx,DWORD PTR [edx-0x172f69af]
  420998:	mov    dl,0x28
  42099a:	jmp    0x3e6e:0x13c130cd
  4209a1:	push   ds
  4209a2:	(bad)  
  4209a3:	dec    edx
  4209a4:	sar    DWORD PTR [edx-0x2b],cl
  4209a7:	dec    esi
  4209a8:	lds    esi,FWORD PTR [ebx]
  4209aa:	loopne 0x420946
  4209ac:	fcmovbe st,st(6)
  4209ae:	sub    al,0x5f
  4209b1:	dec    ecx
  4209b2:	dec    edx
  4209b3:	aas    
  4209b4:	lods   al,BYTE PTR ds:[esi]
  4209b5:	or     BYTE PTR [eax],ch
  4209b7:	push   edi
  4209b8:	adc    cl,bh
  4209ba:	xchg   edi,eax
  4209bb:	dec    eax
  4209bc:	adc    DWORD PTR [ebx],ebx
  4209be:	call   0xba6bd9b6
  4209c3:	mov    ecx,DWORD PTR [edx+0x430675ea]
  4209c9:	js     0x42098f
  4209cb:	jo     0x420957
  4209cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209ce:	repz add bh,dh
  4209d1:	xchg   ecx,eax
  4209d2:	inc    edi
  4209d3:	or     esi,DWORD PTR [edx-0x3b0389d0]
  4209d9:	xor    cl,BYTE PTR [ebx+0x391357eb]
  4209df:	jo     0x4209ad
  4209e1:	pop    ebp
  4209e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209e3:	loop   0x420a5e
  4209e5:	icebp  
  4209e6:	xchg   ebx,eax
  4209e7:	sbb    BYTE PTR [edi],cl
  4209e9:	cmp    BYTE PTR [ebx+0x2736cb9e],0x8a
  4209f0:	pop    ss
  4209f1:	aam    0xfc
  4209f3:	out    dx,eax
  4209f4:	pop    ecx
  4209f5:	dec    esp
  4209f6:	sub    eax,0x5ad5f536
  4209fb:	xchg   ebp,eax
  4209fc:	lods   al,BYTE PTR ds:[esi]
  4209fd:	cmp    al,0x62
  4209ff:	jp     0x420a6e
  420a01:	cmp    ebp,ebx
  420a03:	cmp    al,BYTE PTR [ecx+0x53]
  420a06:	jmp    0x63d7808b
  420a0b:	mov    al,0x5
  420a0d:	call   0xb4cf:0x1030b758
  420a14:	nop
  420a15:	aad    0xa0
  420a17:	jb     0x420a0a
  420a19:	(bad)  
  420a1b:	push   edx
  420a1c:	push   ss
  420a1d:	and    eax,0xf1f5f558
  420a22:	fdiv   QWORD PTR [ecx+0x70a70932]
  420a28:	jns    0x420a3e
  420a2a:	dec    BYTE PTR gs:[ebx]
  420a2d:	ja     0x4209c1
  420a2f:	and    al,0xeb
  420a31:	mov    cl,0x88
  420a33:	sbb    al,0xe
  420a35:	sbb    dh,BYTE PTR [ebx-0x6c583ce5]
  420a3b:	nop
  420a3c:	add    al,bh
  420a3e:	fild   DWORD PTR ds:[eax+0x41d0aad2]
  420a45:	xor    eax,edi
  420a47:	and    al,0x6b
  420a49:	adc    DWORD PTR [edi+eax*4-0x5d7b8a25],0xffffff86
  420a51:	adc    eax,0x45fc381f
  420a56:	jmp    0x5c8d:0xe31a4811
  420a5d:	xchg   DWORD PTR [edi-0x1c],ebx
  420a60:	push   edi
  420a61:	test   al,0xdd
  420a63:	loop   0x420a47
  420a65:	sub    BYTE PTR [ecx],dh
  420a67:	push   ebp
  420a68:	mov    ecx,0x26214a41
  420a6d:	retf   
  420a6e:	popf   
  420a6f:	int3   
  420a70:	mov    al,0x23
  420a72:	mov    cl,0x19
  420a74:	cmc    
  420a75:	sub    ecx,DWORD PTR [eax+0x7ae8d034]
  420a7b:	les    eax,FWORD PTR [ecx+0x15]
  420a7e:	addr16 add eax,0x285cb32
  420a84:	dec    ebp
  420a85:	push   ss
  420a86:	add    DWORD PTR [ebp-0x72],ebp
  420a89:	lods   eax,DWORD PTR ds:[esi]
  420a8a:	not    BYTE PTR [ecx]
  420a8c:	cmp    bh,BYTE PTR [eax-0x560a0916]
  420a92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a93:	jge    0x420a84
  420a95:	out    dx,eax
  420a96:	mov    bl,0xf9
  420a98:	mov    al,0x38
  420a9a:	out    0xc5,eax
  420a9c:	adc    ebp,DWORD PTR [edx-0x52]
  420a9f:	stc    
  420aa0:	add    al,0xb4
  420aa2:	fidiv  DWORD PTR [ebx-0x7b]
  420aa5:	sbb    eax,0xff138a7a
  420aaa:	test   DWORD PTR [ebp+0x12],esp
  420aad:	mov    ecx,0x2fa8ecd9
  420ab2:	nop    edi
  420ab5:	cmp    DWORD PTR [edx-0x30],edx
  420ab8:	adc    eax,0xa1b3a4a6
  420abd:	js     0x420aa4
  420abf:	iret   
  420ac0:	dec    esp
  420ac1:	sbb    eax,0x9adb99e5
  420ac6:	in     al,dx
  420ac7:	rcl    BYTE PTR [esi-0x7763fa8d],0x60
  420ace:	call   FWORD PTR [ecx+0x17]
  420ad1:	and    al,0x0
  420ad3:	inc    BYTE PTR [edx+ebx*8-0x39e16287]
  420ada:	mov    dh,0xf3
  420adc:	(bad)  
  420add:	pusha  
  420ade:	push   ebx
  420adf:	mov    dl,0xe5
  420ae1:	sub    eax,0xbd9a7047
  420ae6:	add    BYTE PTR [eax+0x5f680945],0x5
  420aed:	mov    bl,0xdf
  420aef:	stc    
  420af0:	jae    0x420ae4
  420af2:	rcl    DWORD PTR [ecx+edi*2+0x4f8384d],1
  420af9:	mov    WORD PTR [esi-0x764b4883],fs
  420aff:	fs add esp,ebp
  420b02:	mov    bh,0x2
  420b04:	cmp    eax,0xecedbe89
  420b09:	mov    ebp,0xdd7f6305
  420b0e:	shl    bh,1
  420b10:	test   BYTE PTR [esi+0x1f],0x41
  420b14:	adc    BYTE PTR [eax],0xed
  420b17:	inc    ebp
  420b18:	xlat   BYTE PTR ds:[ebx]
  420b19:	retf   
  420b1a:	push   ebp
  420b1b:	mov    ebp,0x95a16b75
  420b20:	mov    ah,0xe
  420b22:	sub    BYTE PTR [esi-0x120acef1],dh
  420b28:	mov    edx,0x6d7dd87c
  420b2d:	addr16 inc ebx
  420b2f:	mov    eax,0xe06afd00
  420b34:	add    cl,BYTE PTR [esi+0x31d96acf]
  420b3a:	cli    
  420b3b:	mov    dl,0x32
  420b3d:	popf   
  420b3e:	mov    esp,0xce6731a3
  420b43:	repz jmp 0x420b3c
  420b46:	push   cs
  420b47:	icebp  
  420b48:	push   edx
  420b49:	lods   eax,DWORD PTR ds:[esi]
  420b4a:	es std 
  420b4c:	dec    ecx
  420b4d:	test   eax,0xd8685dda
  420b52:	outs   dx,BYTE PTR ds:[esi]
  420b53:	aas    
  420b54:	call   0x12cc4a4c
  420b59:	icebp  
  420b5a:	xlat   BYTE PTR ds:[ebx]
  420b5c:	push   ebx
  420b5d:	sub    al,0xba
  420b5f:	xor    esi,DWORD PTR [ecx+0x74ffe30b]
  420b65:	pop    ebp
  420b66:	loope  0x420b4e
  420b68:	lahf   
  420b69:	adc    edx,DWORD PTR [edx+0x635b1de6]
  420b6f:	pop    es
  420b70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b71:	xchg   ecx,eax
  420b72:	aas    
  420b73:	mov    ds:0x30678381,al
  420b78:	and    bh,0xa0
  420b7b:	or     ebp,DWORD PTR [ebp+0x33]
  420b7e:	in     al,0xa1
  420b80:	sub    bh,BYTE PTR [ebp-0xea79c9d]
  420b86:	and    DWORD PTR [edi+0x2a],eax
  420b89:	jle    0x420bc2
  420b8b:	mov    cl,0x80
  420b8d:	mul    BYTE PTR [esi+0x44]
  420b90:	or     BYTE PTR [edi],0xfc
  420b93:	push   0x3d16a61a
  420b98:	and    al,0x2d
  420b9a:	fwait
  420b9b:	or     BYTE PTR [eax],ah
  420b9d:	mov    ds:0xd63f610e,eax
  420ba2:	sbb    ah,BYTE PTR [ebp+0x46]
  420ba5:	push   eax
  420ba6:	inc    edi
  420ba7:	mov    DWORD PTR [ebp-0x18],eax
  420baa:	iret   
  420bab:	sub    DWORD PTR [ebx-0x2c],esi
  420bae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420baf:	out    dx,al
  420bb0:	bound  esp,QWORD PTR [ebx-0x66]
  420bb3:	or     edi,DWORD PTR [esi+0x71]
  420bb6:	imul   esp,DWORD PTR [ebp+0x19054b0f],0x4a
  420bbd:	mov    bh,0x2b
  420bbf:	ins    BYTE PTR es:[edi],dx
  420bc0:	std    
  420bc1:	lahf   
  420bc2:	cdq    
  420bc3:	mov    ds:0x3841108c,al
  420bc8:	pop    edi
  420bc9:	pop    ebp
  420bca:	jns    0x420bd6
  420bcc:	call   0xeaa8f495
  420bd1:	je     0x420bc4
  420bd3:	push   cs
  420bd4:	jbe    0x420c1d
  420bd6:	nop
  420bd7:	add    ah,BYTE PTR [esi]
  420bd9:	inc    ebx
  420bda:	test   eax,0xcf875a85
  420bdf:	jle    0x420c0b
  420be1:	xor    eax,0x7e8a696
  420be6:	enter  0x8e2f,0xf4
  420bea:	xor    al,0x25
  420bec:	mov    eax,ds:0x93c7a1d
  420bf1:	jmp    0x420c31
  420bf3:	and    bl,BYTE PTR [ebx+0x74f251fb]
  420bf9:	or     BYTE PTR ds:0xb09632e,cl
  420bff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c00:	jae    0x420bb4
  420c02:	rcl    DWORD PTR [ecx],1
  420c04:	xchg   ecx,eax
  420c05:	and    eax,0xa20a76f6
  420c0a:	dec    esp
  420c0b:	add    BYTE PTR [esi+0x2a599ada],ah
  420c11:	in     eax,dx
  420c12:	mov    DWORD PTR [ebx+0x35],esp
  420c15:	mov    ecx,0xe1d8d8ff
  420c1a:	mov    cl,0x20
  420c1c:	dec    eax
  420c1d:	aaa    
  420c1e:	aad    0xe2
  420c20:	(bad)  
  420c21:	mov    eax,0x1709f960
  420c26:	mov    ecx,0x9143f1fa
  420c2b:	mov    cl,0x27
  420c2d:	inc    esp
  420c2e:	nop
  420c2f:	xor    esi,esp
  420c31:	add    ch,BYTE PTR [ebx+0x7de8e23d]
  420c37:	repz ret 0xb9dc
  420c3b:	jmp    0xfdd1:0x9fe0b8ea
  420c42:	ja     0x420c85
  420c44:	(bad)  
  420c46:	loope  0x420c10
  420c48:	or     bl,ch
  420c4a:	sub    BYTE PTR [esi],bh
  420c4c:	pop    ebp
  420c4d:	pop    edx
  420c4e:	shl    DWORD PTR [eax-0x2de9cb5e],cl
  420c54:	pop    ds
  420c55:	add    eax,0x676979b1
  420c5a:	arpl   WORD PTR [edi+0x4f460f27],di
  420c60:	(bad)  
  420c61:	aam    0xb6
  420c63:	jmp    0x85deb20a
  420c68:	sub    eax,0xf27832a2
  420c6d:	dec    ebp
  420c6e:	fbstp  TBYTE PTR ds:0x8fae1f74
  420c74:	add    esp,ecx
  420c76:	repz retf 0x415
  420c7a:	pop    eax
  420c7b:	or     DWORD PTR [edi],eax
  420c7d:	iret   
  420c7e:	pop    eax
  420c7f:	not    DWORD PTR [ecx]
  420c81:	and    cl,BYTE PTR [ebx+0x39]
  420c84:	dec    eax
  420c85:	std    
  420c86:	and    ch,BYTE PTR [edi+0x495ef662]
  420c8c:	xor    eax,0x6ac8215
  420c91:	mov    bh,0x55
  420c93:	repz retf 0xa66f
  420c97:	(bad)  
  420c98:	cmp    al,0xf2
  420c9a:	outs   dx,DWORD PTR ds:[esi]
  420c9b:	xchg   BYTE PTR [edi+0x2a],bh
  420c9e:	mov    DWORD PTR [ecx-0x38],0x547f07a6
  420ca5:	jno    0x420c87
  420ca7:	xchg   esp,eax
  420ca8:	adc    al,0x3a
  420caa:	mov    eax,ds:0xc4abd169
  420caf:	inc    edx
  420cb0:	mov    ah,0xaa
  420cb2:	enter  0x50a,0xf3
  420cb6:	dec    ecx
  420cb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cb8:	popf   
  420cb9:	adc    eax,0x4fc437a6
  420cbe:	xor    al,BYTE PTR [ebp+0x2acb5b26]
  420cc4:	stos   DWORD PTR es:[edi],eax
  420cc5:	or     al,0x7
  420cc7:	sbb    DWORD PTR [ebp-0x1d48a0fb],ecx
  420ccd:	aaa    
  420cce:	mov    WORD PTR [esi-0x78],gs
  420cd1:	mov    ebp,0x1af93f6e
  420cd6:	sar    BYTE PTR [ebx],1
  420cd8:	mov    bh,BYTE PTR [ebp+eiz*2-0x33]
  420cdc:	stc    
  420cdd:	std    
  420cde:	add    edx,DWORD PTR [ebp+esi*8-0x3eca9971]
  420ce5:	jp     0x420ce5
  420ce7:	jne    0x420d18
  420ce9:	or     BYTE PTR [edi],al
  420ceb:	mov    WORD PTR [ebp+0x34],es
  420cee:	xor    edx,DWORD PTR [eax]
  420cf0:	fcomp  QWORD PTR [ecx-0x5b]
  420cf3:	add    al,cl
  420cf5:	mov    ecx,es
  420cf7:	pusha  
  420cf8:	and    edi,0xffffffa0
  420cfb:	dec    BYTE PTR [eax]
  420cfd:	cld    
  420cfe:	cmp    al,0xc2
  420d00:	mov    ebx,DWORD PTR [edx-0x1e]
  420d03:	sub    BYTE PTR [edi-0x71],ch
  420d06:	cmp    al,0xc3
  420d08:	xor    esp,DWORD PTR [ecx-0x8]
  420d0b:	pop    ss
  420d0c:	or     DWORD PTR [ecx+edi*2+0x4b],0x351f61c4
  420d14:	mov    bh,BYTE PTR [ecx-0x74482f3b]
  420d1a:	adc    ebx,DWORD PTR [ecx-0x61]
  420d1d:	sub    DWORD PTR [eax+0xd0407e],esp
  420d23:	jmp    0xf9bb:0x3ebb81e6
  420d2a:	adc    BYTE PTR [edi-0x17],0x3f
  420d2e:	(bad)  
  420d2f:	loope  0x420cb6
  420d31:	lock push cs
  420d33:	adc    eax,0x8ef5e5de
  420d38:	ret    
  420d39:	scas   al,BYTE PTR es:[edi]
  420d3a:	repz out 0x59,eax
  420d3d:	arpl   WORD PTR [ebx+0x5181c89c],di
  420d43:	int3   
  420d44:	mov    DWORD PTR [ecx],esi
  420d46:	xor    al,bh
  420d48:	fld    DWORD PTR [esi+0x7f]
  420d4b:	js     0x420d8c
  420d4d:	xchg   ebp,eax
  420d4e:	iret   
  420d4f:	lock jnp 0x420d55
  420d52:	and    esi,DWORD PTR [edx+0xb]
  420d55:	mul    BYTE PTR [esi+0x1df7b8fa]
  420d5b:	add    ebp,DWORD PTR [bp+di+0x1f7]
  420d60:	or     DWORD PTR [edx+ebx*1+0x4d],ebx
  420d64:	popf   
  420d65:	aam    0xd4
  420d67:	bound  edx,QWORD PTR [edi+0x4bd918a2]
  420d6d:	dec    ebx
  420d6e:	in     al,0x1b
  420d70:	test   al,0xc8
  420d72:	scas   al,BYTE PTR es:[edi]
  420d73:	cld    
  420d74:	sbb    eax,0x78b576c8
  420d79:	test   cl,ch
  420d7b:	(bad)  
  420d7c:	ret    
  420d7d:	cmovle ecx,DWORD PTR [ecx-0x16fba1cf]
  420d84:	loope  0x420db8
  420d86:	inc    edi
  420d87:	inc    ecx
  420d88:	int3   
  420d89:	mov    al,ds:0x30cb1cb3
  420d8e:	xchg   BYTE PTR [ecx-0x5654d392],bh
  420d94:	xor    BYTE PTR [edi],0x35
  420d97:	mov    eax,ds:0x508d6bcf
  420d9c:	and    esi,DWORD PTR [edx+esi*8-0x46]
  420da0:	pop    esi
  420da1:	inc    eax
  420da2:	mov    edx,0x5aa9d5df
  420da7:	mov    WORD PTR [edx+esi*2],es
  420daa:	adc    edx,esp
  420dac:	and    BYTE PTR [esi],cl
  420dae:	je     0x420d3d
  420db0:	rol    BYTE PTR [ecx-0x4d],0xdb
  420db4:	jp     0x420d70
  420db6:	cs push ebx
  420db8:	sub    eax,0x1efc4710
  420dbd:	jmp    0x9551:0x767858c4
  420dc4:	clc    
  420dc5:	scas   eax,DWORD PTR es:[edi]
  420dc6:	add    dl,bl
  420dc8:	sbb    esi,0xbf577fe3
  420dce:	push   cs
  420dcf:	mov    eax,ds:0xa070fd62
  420dd4:	mov    bl,0xc6
  420dd6:	test   BYTE PTR [edi-0xc],al
  420dd9:	ret    0x3adb
  420ddc:	inc    ecx
  420ddd:	inc    ebx
  420dde:	adc    esi,edx
  420de0:	jne    0x420e50
  420de2:	lods   eax,DWORD PTR ds:[esi]
  420de3:	add    eax,eax
  420de5:	mov    cl,0x47
  420de7:	ins    BYTE PTR es:[edi],dx
  420de8:	mov    esi,0x31e397f6
  420ded:	mov    edx,0x8820894e
  420df2:	inc    esp
  420df3:	pop    ecx
  420df4:	pop    ebp
  420df5:	mov    ds:0x6d8d53b7,al
  420dfa:	in     eax,dx
  420dfb:	add    eax,0xf06e211
  420e00:	imul   esp,DWORD PTR [ecx-0x69],0xf4e8e42c
  420e07:	cdq    
  420e08:	scas   al,BYTE PTR es:[edi]
  420e09:	push   0xffffffb0
  420e0b:	cmp    dh,bl
  420e0d:	pop    ax
  420e0f:	shl    BYTE PTR [edi-0x32],0x20
  420e13:	(bad)  
  420e14:	xlat   BYTE PTR ds:[ebx]
  420e15:	dec    edi
  420e16:	xchg   edi,eax
  420e17:	pop    ds
  420e18:	mov    al,0xef
  420e1a:	jns    0x420dd5
  420e1c:	ins    BYTE PTR es:[edi],dx
  420e1d:	fist   DWORD PTR [eax]
  420e1f:	xchg   ebp,eax
  420e20:	ret    
  420e21:	and    DWORD PTR [eax-0x29],ebx
  420e24:	(bad)  
  420e25:	ss xchg edi,eax
  420e27:	rcr    BYTE PTR [eax-0x17],1
  420e2a:	sub    esp,ecx
  420e2c:	imul   edx,DWORD PTR [ecx+ebp*1-0x3c],0xfdcd693a
  420e34:	pop    esp
  420e35:	sub    ebp,DWORD PTR [edx+ecx*8]
  420e38:	dec    eax
  420e39:	test   al,0xc4
  420e3b:	xchg   edi,eax
  420e3c:	into   
  420e3d:	outs   dx,DWORD PTR ds:[esi]
  420e3e:	mov    al,0xfa
  420e40:	popa   
  420e41:	scas   al,BYTE PTR es:[edi]
  420e42:	in     eax,0xe1
  420e44:	call   0x8f61:0x92d03f26
  420e4b:	scas   al,BYTE PTR es:[edi]
  420e4c:	inc    esi
  420e4d:	jmp    0x420de9
  420e4f:	xor    al,0xdd
  420e51:	push   cs
  420e52:	rcr    BYTE PTR ds:0x589c6e9,cl
  420e59:	dec    eax
  420e5a:	inc    edx
  420e5b:	addr16 test eax,0x85225b21
  420e61:	inc    eax
  420e62:	loope  0x420e1c
  420e64:	sub    BYTE PTR ds:0xaf583823,dl
  420e6a:	or     BYTE PTR [ecx-0x41],ah
  420e6d:	push   ebp
  420e6e:	push   0xdb2f99a0
  420e73:	(bad)  
  420e74:	adc    al,0xb2
  420e76:	sub    eax,0x1a698d63
  420e7b:	jb     0x420ee9
  420e7d:	inc    esp
  420e7e:	and    ebx,DWORD PTR [ecx]
  420e80:	les    edi,FWORD PTR ds:0x3157ee81
  420e86:	or     eax,0x33453867
  420e8b:	add    cl,BYTE PTR [esi+edx*2+0x1f4736fc]
  420e92:	in     eax,0xaa
  420e94:	es jbe 0x420e4c
  420e97:	cmp    al,0xd4
  420e99:	and    al,ch
  420e9b:	shl    DWORD PTR [ecx-0x7f],1
  420e9e:	cmc    
  420e9f:	push   ebx
  420ea0:	icebp  
  420ea1:	inc    ecx
  420ea2:	lahf   
  420ea3:	xor    DWORD PTR ds:0xc80a90c1,0x7e5f44ae
  420ead:	sti    
  420eae:	lds    eax,FWORD PTR [edx]
  420eb0:	jp     0x420e79
  420eb2:	pushf  
  420eb3:	pushw  es
  420eb5:	sub    BYTE PTR [ebp+edx*8-0x6dde48b1],0x17
  420ebd:	adc    BYTE PTR [edi-0x33],0x2f
  420ec1:	into   
  420ec2:	sbb    DWORD PTR [esi-0x66],ebp
  420ec5:	add    edi,DWORD PTR [ecx]
  420ec7:	mov    al,al
  420ec9:	mov    dh,0x3d
  420ecb:	pop    ebx
  420ecc:	or     al,0xab
  420ece:	(bad)  
  420ecf:	xchg   edi,eax
  420ed0:	in     al,dx
  420ed1:	cmp    ebx,DWORD PTR [eax-0x39]
  420ed4:	gs jbe 0x420e93
  420ed7:	push   ebp
  420ed8:	jns    0x420eba
  420eda:	aas    
  420edb:	aad    0x1b
  420edd:	jmp    0xf688:0xcb3398b4
  420ee4:	xor    eax,DWORD PTR [ebp+0x3ef31e2f]
  420eea:	dec    ecx
  420eeb:	push   0xffffff97
  420eed:	cld    
  420eee:	mov    ebp,0xcd4e0ba9
  420ef3:	lahf   
  420ef4:	cmp    al,0x9e
  420ef6:	sbb    ecx,edi
  420ef8:	aad    0x2d
  420efa:	in     eax,dx
  420efb:	les    ecx,FWORD PTR [ebx-0x4052a4b1]
  420f01:	push   ds
  420f02:	retf   
  420f03:	sbb    al,0x13
  420f05:	pop    eax
  420f06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f07:	dec    esp
  420f08:	add    al,0x31
  420f0a:	inc    esp
  420f0b:	add    bh,BYTE PTR [edx-0x1ce5e4d4]
  420f11:	adc    BYTE PTR [edx],0xdc
  420f14:	imul   esp,edx,0xcaeb88e5
  420f1a:	shl    BYTE PTR [esi],1
  420f1c:	mov    ch,dl
  420f1e:	push   cs
  420f1f:	ret    
  420f20:	sahf   
  420f21:	inc    ecx
  420f22:	push   cs
  420f23:	imul   ecx,DWORD PTR [esi+0x32],0x7307c603
  420f2a:	stos   BYTE PTR es:[edi],al
  420f2b:	bound  ecx,QWORD PTR ds:[ecx+0x1fdb617b]
  420f32:	call   0x43f26e56
  420f37:	loopne 0x420edb
  420f39:	stos   DWORD PTR es:[edi],eax
  420f3a:	nop
  420f3b:	cmp    esp,edi
  420f3d:	sub    BYTE PTR [edi+0x13],0x15
  420f41:	cwde   
  420f42:	arpl   WORD PTR [edx],si
  420f44:	mov    WORD PTR [esi],ss
  420f46:	and    ch,BYTE PTR [eax+edx*8-0x15]
  420f4a:	frstor ss:[edi+0x53dfb3fb]
  420f51:	push   edx
  420f52:	loop   0x420f3d
  420f54:	and    al,0xc2
  420f56:	inc    ecx
  420f57:	dec    edi
  420f58:	adc    al,0xdc
  420f5a:	mov    edx,0x38795797
  420f5f:	dec    ebp
  420f60:	pop    eax
  420f61:	cmp    dh,BYTE PTR [edi+0x2a]
  420f64:	xchg   DWORD PTR [edx],edi
  420f66:	inc    edi
  420f67:	das    
  420f68:	out    0xb3,eax
  420f6a:	cli    
  420f6b:	add    BYTE PTR [edx],ah
  420f6d:	sub    al,0xd9
  420f6f:	and    esp,DWORD PTR [ecx+0x155acd49]
  420f75:	mov    ah,0xd1
  420f77:	rcl    bl,cl
  420f79:	sbb    eax,0xec69475b
  420f7e:	clc    
  420f7f:	adc    ebx,ebp
  420f81:	mov    ds,WORD PTR [ecx+0x76604e6f]
  420f87:	(bad)  
  420f88:	iret   
  420f89:	xchg   ecx,eax
  420f8a:	out    0xdf,al
  420f8c:	inc    edx
  420f8d:	xchg   edx,eax
  420f8e:	test   eax,0xa9484d55
  420f93:	pop    eax
  420f94:	mov    ebx,0xc7bd4723
  420f99:	repz or eax,0x673dfe0d
  420f9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fa0:	scas   eax,DWORD PTR es:[edi]
  420fa1:	iret   
  420fa2:	add    eax,0x3e23286
  420fa7:	loop   0x420fcc
  420fa9:	fwait
  420faa:	repz push ebp
  420fac:	push   ebx
  420fad:	popf   
  420fae:	lock push esi
  420fb0:	adc    DWORD PTR [eax-0x74],ebp
  420fb3:	sub    ch,ch
  420fb5:	hlt    
  420fb6:	inc    ebx
  420fb7:	and    al,0x78
  420fb9:	cmc    
  420fba:	or     ebp,DWORD PTR [ebx+0x682a638]
  420fc0:	loope  0x420ffa
  420fc2:	ror    DWORD PTR [ecx+0xf],0x40
  420fc6:	icebp  
  420fc7:	or     eax,0xfc59e2f2
  420fcc:	inc    ecx
  420fcd:	sub    eax,0x6b9e59ef
  420fd2:	xor    eax,0x4e8765f3
  420fd7:	push   0x110df602
  420fdc:	sbb    al,0x99
  420fde:	bound  ebp,QWORD PTR [ecx-0x3e]
  420fe1:	mov    edx,0x6b783971
  420fe6:	sbb    edi,DWORD PTR [bx+si+0x60]
  420fea:	cdq    
  420feb:	sub    DWORD PTR [ebp+0x29f74f81],0xffffffd1
  420ff2:	jp     0x420fbb
  420ff4:	xchg   ecx,eax
  420ff5:	bound  ecx,QWORD PTR [edx-0x2f]
  420ff8:	sbb    cl,BYTE PTR [edi]
  420ffa:	mov    bl,0x7c
  420ffc:	pop    edi
  420ffd:	int3   
  420ffe:	je     0x42101d
  421000:	lock sbb esp,DWORD PTR [edi]
  421003:	inc    ebx
  421004:	xchg   DWORD PTR [esi],ecx
  421006:	daa    
  421007:	cmp    ch,BYTE PTR [eax-0x5b7adc68]
  42100d:	mov    ch,0x6f
  42100f:	imul   edx,DWORD PTR [edx+0x1d],0xa6649330
  421016:	cmp    eax,0x1fc3beb1
  42101b:	sbb    BYTE PTR [edi+0x45],0xdb
  42101f:	imul   ebp,ecx,0x79
  421022:	les    ebp,FWORD PTR [eax+edx*4-0x545e4134]
  421029:	mov    al,cs:0x5baf912f
  42102f:	ins    DWORD PTR es:[edi],dx
  421030:	scas   al,BYTE PTR es:[edi]
  421031:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421032:	xlat   BYTE PTR ds:[ebx]
  421033:	bound  ecx,QWORD PTR [ecx-0xf75a0ff]
  421039:	push   eax
  42103a:	or     ch,BYTE PTR [edx-0x6b]
  42103d:	adc    eax,0xe6808d2f
  421042:	jae    0x421030
  421044:	scas   al,BYTE PTR es:[edi]
  421045:	clc    
  421046:	adc    ecx,0xffffffc5
  421049:	ins    BYTE PTR es:[edi],dx
  42104a:	cld    
  42104b:	push   ds
  42104c:	jmp    0xccf8:0xb849f70a
  421053:	adc    al,0xb3
  421055:	pop    ecx
  421056:	clc    
  421057:	sbb    eax,0x127345a4
  42105c:	xor    al,0x2d
  42105e:	lahf   
  42105f:	fild   WORD PTR [edx]
  421061:	sbb    eax,0xbbb69aae
  421066:	push   ebx
  421067:	mov    eax,edx
  421069:	lods   eax,DWORD PTR ds:[esi]
  42106a:	loop   0x4210bd
  42106c:	xchg   ebp,eax
  42106d:	and    eax,0xecd7996c
  421072:	pop    ebp
  421073:	aad    0x78
  421075:	add    DWORD PTR [ebp+0x13d27c39],ecx
  42107b:	(bad)  
  42107d:	out    0x5b,eax
  42107f:	mov    esp,0xb5e597bd
  421084:	inc    ebp
  421085:	push   esi
  421086:	xchg   ecx,eax
  421087:	xor    eax,edx
  421089:	pop    edx
  42108a:	add    al,BYTE PTR [ebp-0x6d668d95]
  421090:	loop   0x421110
  421092:	loop   0x42103d
  421094:	(bad)  
  421096:	icebp  
  421097:	into   
  421098:	addr16 pop esi
  42109a:	jmp    0x4189:0x7b6da0bf
  4210a1:	pop    ebx
  4210a2:	test   al,dl
  4210a4:	xor    eax,0xaa74a9d2
  4210a9:	sub    al,0x56
  4210ab:	add    esi,DWORD PTR [edx*2+0x1856e760]
  4210b2:	ins    BYTE PTR es:[edi],dx
  4210b3:	pop    esp
  4210b4:	dec    esp
  4210b5:	push   0xf8f97b3f
  4210ba:	loope  0x4210b0
  4210bc:	(bad)  
  4210bd:	fadd   QWORD PTR [esi-0x6b]
  4210c0:	sbb    DWORD PTR [bp+si],ecx
  4210c3:	dec    esp
  4210c4:	cs pop esi
  4210c6:	pop    esp
  4210c7:	call   0xd744:0xbdd5b2b0
  4210ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210cf:	pop    ds
  4210d0:	(bad)  
  4210d1:	cmc    
  4210d2:	push   edx
  4210d3:	mov    eax,ds:0x609716f
  4210d8:	pop    ss
  4210d9:	pop    esp
  4210da:	shl    eax,0xef
  4210dd:	adc    esi,DWORD PTR [eax]
  4210df:	test   DWORD PTR [ebx+0x5c],0xdef9c137
  4210e6:	out    0x3f,eax
  4210e8:	inc    eax
  4210e9:	test   DWORD PTR cs:[ebx+0x39827191],edx
  4210f0:	inc    eax
  4210f1:	sub    eax,0xda9cba2d
  4210f6:	and    dl,BYTE PTR [ecx+0x4a]
  4210f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210fa:	imul   edx,esp,0x7121686e
  421100:	sbb    al,BYTE PTR [edi-0x2b]
  421103:	adc    eax,0xaced967b
  421108:	mov    edx,0x426b601
  42110d:	out    0xaa,eax
  42110f:	jo     0x42111e
  421111:	or     WORD PTR [edx+edx*8+0x15],cx
  421116:	fdiv   QWORD PTR [ebx]
  421118:	(bad)  
  421119:	and    DWORD PTR [eax+0x6d],ebp
  42111c:	fdivr  st,st(7)
  42111e:	aaa    
  42111f:	mov    dl,0x16
  421121:	icebp  
  421122:	adc    dh,al
  421124:	push   ds
  421125:	mov    ebx,0xf413fe
  42112a:	retf   0x9576
  42112d:	dec    eax
  42112e:	sbb    al,0x8c
  421130:	call   0x7dcc:0x6c6b45a7
  421137:	dec    eax
  421138:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421139:	scas   eax,DWORD PTR es:[edi]
  42113a:	inc    edx
  42113b:	dec    eax
  42113c:	mov    ah,0xf3
  42113e:	fst    DWORD PTR [ebx]
  421140:	inc    ebx
  421141:	shr    BYTE PTR [edi],1
  421143:	inc    edx
  421144:	jbe    0x42117d
  421146:	into   
  421147:	jno    0x42111f
  421149:	adc    DWORD PTR [edi+0x45],0xffffffea
  42114d:	jb     0x42112d
  42114f:	ret    0x6962
  421152:	pop    esp
  421153:	and    ebp,DWORD PTR [ebp-0x5d]
  421156:	not    edi
  421158:	mov    WORD PTR [edx-0x13],es
  42115b:	add    esi,DWORD PTR [esi+0x1f]
  42115e:	mov    dh,0xd0
  421160:	cmp    DWORD PTR [ebx+0x6a36a65e],esi
  421166:	mov    ds,WORD PTR [ebp+0x3f1af6e2]
  42116c:	addr16 xchg edx,eax
  42116e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42116f:	pop    esi
  421170:	jecxz  0x4211dd
  421172:	int3   
  421173:	add    bh,dh
  421175:	call   0xddad2461
  42117a:	sbb    edx,DWORD PTR [ebx]
  42117c:	and    al,ch
  42117e:	ror    ecx,1
  421180:	retfw  
  421182:	jge    0x421118
  421184:	sbb    DWORD PTR [edi-0x7e],edx
  421187:	xor    BYTE PTR [edx-0x1b],0xe2
  42118b:	imul   ecx,DWORD PTR [edx+edx*4],0xffffffeb
  42118f:	mul    BYTE PTR [edi+0x369fa708]
  421195:	cmp    eax,0x7acb6d
  42119a:	push   edx
  42119b:	jo     0x42114c
  42119d:	xchg   esp,eax
  42119e:	add    eax,0x199b714f
  4211a3:	dec    edi
  4211a4:	push   esi
  4211a5:	test   DWORD PTR [ecx-0x2979678a],esp
  4211ab:	(bad)  
  4211ac:	les    edi,FWORD PTR [edi+0x5abe5990]
  4211b2:	jbe    0x42122c
  4211b4:	xchg   edx,eax
  4211b5:	jno    0x421183
  4211b7:	shl    esi,1
  4211b9:	test   bh,bh
  4211bb:	(bad)  
  4211bc:	xor    BYTE PTR [eax-0x36ace6b3],ah
  4211c2:	in     eax,dx
  4211c3:	and    al,cl
  4211c5:	jno    0x4211d5
  4211c7:	fstp   QWORD PTR es:[ecx-0x6f7ca4c6]
  4211ce:	(bad)  
  4211cf:	das    
  4211d0:	sbb    ch,BYTE PTR ds:0x1f3d8483
  4211d6:	mov    ecx,0xc89cdaf5
  4211db:	cld    
  4211dc:	jecxz  0x421209
  4211de:	ret    0x81c7
  4211e1:	enter  0x27d9,0xaf
  4211e5:	mov    DWORD PTR [esi-0x63b7e2e2],ecx
  4211eb:	in     eax,dx
  4211ec:	test   eax,0x82d62ae3
  4211f1:	xchg   BYTE PTR [eax-0x46],dl
  4211f4:	push   edx
  4211f5:	jmp    0xec5dca5d
  4211fa:	pop    edx
  4211fb:	sbb    BYTE PTR [eax+0x5a1ab25f],ch
  421201:	pop    edi
  421202:	xlat   BYTE PTR ds:[ebx]
  421203:	xchg   edi,eax
  421204:	mov    esi,gs
  421206:	or     al,ch
  421208:	lahf   
  421209:	mov    ah,0xdf
  42120b:	stc    
  42120c:	dec    edi
  42120d:	(bad)
  421211:	jecxz  0x4211e2
  421213:	push   0xb
  421215:	cmp    BYTE PTR [eax],dl
  421217:	push   edx
  421218:	rcr    BYTE PTR [esi],cl
  42121a:	xor    dh,BYTE PTR [ebx-0x68]
  42121d:	sub    dl,dh
  42121f:	call   0x5b26:0x3831d611
  421226:	jae    0x42120c
  421228:	sbb    BYTE PTR gs:[edi],al
  42122b:	shl    dh,1
  42122d:	imul   ecx,DWORD PTR [edx],0xffffff9d
  421230:	scas   eax,DWORD PTR es:[edi]
  421231:	mov    gs:0x3bc97119,eax
  421237:	in     al,0x8b
  421239:	out    dx,eax
  42123a:	std    
  42123b:	mov    bh,0x37
  42123d:	rol    BYTE PTR [ecx],cl
  42123f:	fimul  WORD PTR [ebx+0x61]
  421242:	aaa    
  421243:	dec    edi
  421244:	fcmovne st,st(0)
  421246:	jno    0x4211e7
  421248:	or     ecx,DWORD PTR [edi-0x65]
  42124b:	push   esi
  42124c:	std    
  42124d:	cmp    DWORD PTR [eax+ebp*1],ecx
  421250:	add    bh,BYTE PTR [ecx]
  421252:	pop    ebp
  421253:	xlat   BYTE PTR ds:[ebx]
  421254:	pop    ss
  421255:	hlt    
  421256:	jo     0x4212bc
  421258:	add    ebx,DWORD PTR [ebx+0x73a5b62b]
  42125e:	jp     0x4212c7
  421260:	sub    cl,dh
  421262:	pusha  
  421263:	cmp    edx,DWORD PTR [esi+0x1cdcdb59]
  421269:	and    al,0x7e
  42126b:	sub    bh,al
  42126d:	lds    edi,FWORD PTR [eax+0x17]
  421270:	push   ds
  421271:	out    dx,eax
  421272:	pop    esi
  421273:	in     eax,0x23
  421275:	fsubr  QWORD PTR [ebx+0x71c95e1d]
  42127b:	(bad)  
  42127c:	push   0x1a
  42127e:	push   0x428f3cbe
  421283:	sbb    ebx,ecx
  421285:	loopne 0x42125d
  421287:	lds    edx,FWORD PTR [ebx-0x5c]
  42128a:	pop    edx
  42128b:	push   ss
  42128c:	jmp    0x4212ca
  42128e:	ds aas 
  421290:	or     bl,BYTE PTR [esi+0x6c95a5ae]
  421296:	dec    esp
  421297:	xchg   BYTE PTR [eax-0x2f1215c9],ch
  42129d:	adc    esp,esp
  42129f:	adc    BYTE PTR [ecx-0x14e8f16d],0x3e
  4212a6:	push   ebx
  4212a7:	pop    edi
  4212a8:	sar    DWORD PTR [edi+0x7f],1
  4212ab:	cdq    
  4212ac:	test   DWORD PTR [ecx],ebp
  4212ae:	leave  
  4212af:	pop    ebx
  4212b0:	push   es
  4212b1:	dec    ecx
  4212b2:	adc    al,0x92
  4212b4:	aaa    
  4212b5:	mov    esp,DWORD PTR [eax]
  4212b7:	outs   dx,DWORD PTR ds:[esi]
  4212b8:	retfw  
  4212ba:	jbe    0x4212e3
  4212bc:	xchg   edx,eax
  4212bd:	mov    esp,0x79a5a12b
  4212c2:	test   eax,0x7a3a073
  4212c7:	js     0x421292
  4212c9:	add    al,0xd9
  4212cb:	pop    ebx
  4212cc:	xchg   edx,eax
  4212cd:	xor    dl,dl
  4212cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212d0:	ss mov dl,0xe6
  4212d3:	mov    ch,0xa7
  4212d5:	cdq    
  4212d6:	pop    esp
  4212d7:	sub    BYTE PTR [ebp+0x7a],al
  4212da:	jb     0x421311
  4212dc:	inc    esp
  4212dd:	inc    edx
  4212de:	add    DWORD PTR [eax-0x49],ebp
  4212e1:	mov    al,ds:0xd4347b54
  4212e6:	xchg   edx,eax
  4212e7:	(bad)  
  4212e8:	shl    BYTE PTR [edx-0x6f5143a1],cl
  4212ee:	adc    BYTE PTR [ebp+ebx*1-0x190bee40],al
  4212f5:	mov    al,ds:0xf6b24c84
  4212fa:	push   0xb7f8c204
  4212ff:	fcmovnu st,st(0)
  421301:	and    ebp,DWORD PTR [eax]
  421303:	pushf  
  421304:	adc    eax,0xa087e809
  421309:	jmp    0xb0c9236
  42130e:	adc    al,0xfe
  421310:	adc    ebx,DWORD PTR [edx]
  421312:	fsub   QWORD PTR [edx-0x36]
  421315:	cmp    DWORD PTR [ebx-0x441d71a1],0x37
  42131c:	fimul  DWORD PTR [edi-0xd852da9]
  421322:	adc    bh,0x3d
  421325:	mov    ah,0xb9
  421327:	or     BYTE PTR [eax-0x1],ch
  42132a:	int3   
  42132b:	cwde   
  42132c:	enter  0x80ee,0x5b
  421330:	outs   dx,DWORD PTR ds:[esi]
  421331:	lea    edi,[ebx]
  421333:	outs   dx,DWORD PTR ds:[esi]
  421334:	pusha  
  421335:	js     0x4212fd
  421337:	js     0x4212d0
  421339:	pop    DWORD PTR [edx]
  42133b:	pop    esp
  42133c:	loop   0x4212fb
  42133e:	adc    al,0xbd
  421340:	jne    0x4213aa
  421342:	daa    
  421343:	inc    edx
  421344:	and    esp,DWORD PTR [ecx+0x2cf603fa]
  42134a:	cs jl  0x421372
  42134d:	test   BYTE PTR [eax+0x65fe0a50],cl
  421353:	(bad)  [ebp-0x24]
  421356:	jg     0x4213a3
  421358:	mov    eax,ds:0xba91716b
  42135d:	push   ecx
  42135e:	pop    ebx
  42135f:	fnstsw WORD PTR [ecx-0x179dbd2]
  421365:	pop    ebp
  421366:	repnz aad 0x42
  421369:	jge    0x421302
  42136b:	jae    0x42138d
  42136d:	sbb    bl,cl
  42136f:	or     ah,bl
  421371:	pop    ds
  421372:	pop    ebp
  421373:	xchg   esi,eax
  421374:	std    
  421375:	call   0x40ac:0x168cedd3
  42137c:	ins    BYTE PTR es:[edi],dx
  42137d:	or     DWORD PTR [esi],edi
  42137f:	inc    BYTE PTR [ecx-0x238455d9]
  421385:	inc    esp
  421386:	jbe    0x4213e7
  421388:	jne    0x4213ae
  42138a:	jae    0x42132e
  42138c:	mov    al,ds:0xf8ce486
  421391:	scas   al,BYTE PTR es:[edi]
  421392:	mov    dh,0x5f
  421394:	dec    ecx
  421395:	movups xmm0,XMMWORD PTR [ecx]
  421398:	sub    ebx,esp
  42139a:	sbb    al,0x8
  42139c:	addr16 push edi
  42139e:	std    
  42139f:	add    edx,edi
  4213a1:	dec    edx
  4213a2:	cli    
  4213a3:	xchg   DWORD PTR [edx],edi
  4213a5:	fld    QWORD PTR [ebx+0x48]
  4213a8:	add    esp,DWORD PTR [ebp-0x5b103d1c]
  4213ae:	cmc    
  4213af:	scas   al,BYTE PTR es:[edi]
  4213b0:	std    
  4213b1:	ret    0x5f68
  4213b4:	je     0x421378
  4213b6:	cdq    
  4213b7:	(bad)  
  4213b9:	loopne 0x421377
  4213bb:	push   0x497839f7
  4213c0:	popa   
  4213c1:	mov    ah,0xac
  4213c3:	xchg   ebx,eax
  4213c4:	xor    DWORD PTR [eax-0x4bf8d576],esi
  4213ca:	enter  0xc30a,0x5e
  4213ce:	jo     0x421373
  4213d0:	push   0x9c1bf615
  4213d5:	in     eax,dx
  4213d6:	inc    eax
  4213d7:	inc    ebx
  4213d8:	push   edx
  4213d9:	xor    DWORD PTR [esi+0x54],ecx
  4213dc:	fwait
  4213dd:	jbe    0x421369
  4213df:	lods   eax,DWORD PTR ds:[esi]
  4213e0:	hlt    
  4213e1:	and    BYTE PTR [esi],0xce
  4213e4:	pusha  
  4213e5:	ds xchg ebx,eax
  4213e7:	mov    bh,0x60
  4213e9:	jno    0x42145c
  4213eb:	sub    eax,0xbfc08fff
  4213f0:	xor    eax,0x9b9c862a
  4213f5:	in     eax,0xc4
  4213f7:	aam    0x9
  4213f9:	inc    ebx
  4213fa:	stos   BYTE PTR es:[edi],al
  4213fb:	bound  ebp,QWORD PTR ds:0x84a36de4
  421401:	popf   
  421402:	mov    al,ds:0xf805f14c
  421407:	scas   al,BYTE PTR es:[edi]
  421408:	push   0xffffff89
  42140a:	inc    eax
  42140b:	out    0xb2,eax
  42140d:	not    BYTE PTR [edi]
  42140f:	push   es
  421410:	adc    DWORD PTR [esi],ecx
  421412:	mov    bl,0xd5
  421414:	in     al,dx
  421415:	aas    
  421416:	mov    eax,0xc1ea0afa
  42141b:	hlt    
  42141c:	repnz sbb DWORD PTR [esi-0x24],eax
  421420:	shr    DWORD PTR [ebp+0x7e],cl
  421423:	les    eax,FWORD PTR [edx+edi*1]
  421426:	ds je  0x421436
  421429:	pushf  
  42142a:	repnz mov ebp,ss
  42142d:	jmp    0xae7cfa6b
  421432:	dec    esi
  421433:	jb     0x421489
  421435:	rcl    BYTE PTR [ebp+0x2a],0x4c
  421439:	push   ebx
  42143a:	out    0xb8,al
  42143c:	cmp    DWORD PTR [ebx],edx
  42143e:	ss mov bh,0x81
  421441:	jo     0x42149c
  421443:	outs   dx,BYTE PTR ds:[esi]
  421444:	in     eax,0xb7
  421446:	inc    edi
  421447:	aaa    
  421448:	or     ah,BYTE PTR [esi+0x3f6504c2]
  42144e:	or     eax,0x648fedb5
  421453:	and    dh,BYTE PTR [esi]
  421455:	add    BYTE PTR [edi+0xd67ebdb],0x67
  42145c:	sub    WORD PTR [esi-0x43],sp
  421460:	cmc    
  421461:	prefetch BYTE PTR [edi]
  421464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421465:	jbe    0x42147c
  421467:	xchg   esp,eax
  421468:	jl     0x4214e8
  42146a:	imul   ebx,DWORD PTR [eax+eax*4-0x3c],0x31
  42146f:	les    edi,FWORD PTR gs:[ecx]
  421472:	mov    ds:0x9d101c22,eax
  421477:	sub    ch,cl
  421479:	(bad)  
  42147b:	sbb    eax,0xf4476b64
  421480:	lock out dx,eax
  421482:	(bad)  
  421484:	lods   al,BYTE PTR ds:[esi]
  421485:	mov    dh,BYTE PTR [eax]
  421487:	mov    ah,0xba
  421489:	ss add al,0xee
  42148c:	xchg   ah,cl
  42148e:	cmp    al,0x6a
  421490:	sub    al,0xe9
  421492:	and    eax,0x9454f4c
  421497:	cmp    ecx,esi
  421499:	lea    esp,[ebp+0x42]
  42149c:	push   edi
  42149d:	stos   DWORD PTR es:[edi],eax
  42149e:	cmp    eax,DWORD PTR [ebp-0x6e77f91d]
  4214a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214a5:	repnz mov cl,0xfb
  4214a8:	sbb    BYTE PTR [ecx-0x49269e9a],0x62
  4214af:	jnp    0x4214a5
  4214b1:	imul   edx,DWORD PTR [esp+ebx*8],0x141ec080
  4214b8:	sub    BYTE PTR [esi+0x4c2fc4a5],ah
  4214be:	mov    al,ds:0xd4df6324
  4214c3:	adc    ebx,DWORD PTR [esi+0x477cb05b]
  4214c9:	xor    eax,eax
  4214cb:	ret    
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428108
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42810c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428110
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428114
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f8
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280fc
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428100
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428104
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428106
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	lea    eax,[ebp-0x10]
  42162f:	push   eax
  421630:	lea    ecx,[ebp-0x10]
  421633:	push   ecx
  421634:	lea    edx,[ebp-0x14]
  421637:	push   edx
  421638:	call   DWORD PTR ds:0x428000
  42163e:	test   eax,eax
  421640:	je     0x42164b
  421642:	mov    eax,DWORD PTR [ebp-0x10]
  421645:	add    eax,0x1
  421648:	mov    DWORD PTR [ebp-0x10],eax
  42164b:	mov    DWORD PTR [ebp-0x48],0x0
  421652:	mov    DWORD PTR [ebp-0x4c],0x0
  421659:	push   0x1
  42165b:	lea    ecx,[ebp-0x14]
  42165e:	push   ecx
  42165f:	call   DWORD PTR ds:0x428004
  421665:	mov    BYTE PTR [ebp-0x40],0x56
  421669:	call   DWORD PTR ds:0x428014
  42166f:	mov    DWORD PTR [ebp-0x2c],eax
  421672:	mov    BYTE PTR [ebp-0x3e],0x72
  421676:	movzx  edx,WORD PTR [ebp-0x2c]
  42167a:	test   edx,edx
  42167c:	jne    0x4216be
  42167e:	mov    BYTE PTR [ebp-0x34],0x0
  421682:	mov    DWORD PTR [ebp-0x14],0xe0d
  421689:	lea    eax,[ebp-0x28]
  42168c:	push   eax
  42168d:	call   DWORD PTR ds:0x428018
  421693:	mov    DWORD PTR [ebp-0x68],eax
  421696:	mov    DWORD PTR [ebp-0x5c],0x3a
  42169d:	lea    ecx,[ebp-0x40]
  4216a0:	push   ecx
  4216a1:	mov    edx,DWORD PTR [ebp-0x68]
  4216a4:	push   edx
  4216a5:	call   DWORD PTR ds:0x42801c
  4216ab:	mov    DWORD PTR [ebp-0x44],eax
  4216ae:	mov    DWORD PTR [ebp-0x8],0xa50f2918
  4216b5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216bc:	jmp    0x4216d3
  4216be:	mov    BYTE PTR ds:0x443a58,0x0
  4216c5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216cc:	mov    BYTE PTR ds:0x441b18,0x0
  4216d3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216da:	push   DWORD PTR ds:0x428018
  4216e0:	pop    edx
  4216e1:	mov    DWORD PTR [ebp-0x74],edx
  4216e4:	push   DWORD PTR [ebp-0x30]
  4216e7:	push   0x1000
  4216ec:	mov    eax,DWORD PTR [ebp-0x14]
  4216ef:	add    eax,0x23
  4216f2:	add    eax,0x23
  4216f5:	push   eax
  4216f6:	xor    eax,eax
  4216f8:	push   eax
  4216f9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fc:	call   ecx
  4216fe:	mov    edx,eax
  421700:	mov    DWORD PTR [ebp-0x4],edx
  421703:	mov    eax,DWORD PTR [ebp-0x70]
  421706:	sub    eax,0xdae0b
  42170b:	mov    DWORD PTR [ebp-0x70],eax
  42170e:	cmp    DWORD PTR [ebp-0x4],0x0
  421712:	jne    0x42171b
  421714:	mov    BYTE PTR ds:0x441b18,0x0
  42171b:	mov    ecx,DWORD PTR [ebp-0x4]
  42171e:	add    ecx,DWORD PTR [ebp-0x14]
  421721:	mov    edx,DWORD PTR [ebp-0x8]
  421724:	mov    DWORD PTR [ecx],edx
  421726:	mov    eax,DWORD PTR [ebp-0x4]
  421729:	add    eax,DWORD PTR [ebp-0x5c]
  42172c:	mov    DWORD PTR [ebp-0x64],eax
  42172f:	mov    ecx,DWORD PTR ds:0x42801c
  421735:	mov    DWORD PTR [ebp-0x54],ecx
  421738:	mov    edx,DWORD PTR [ebp-0x4]
  42173b:	add    edx,DWORD PTR [ebp-0x14]
  42173e:	mov    eax,DWORD PTR [ebp+0x8]
  421741:	mov    DWORD PTR [edx+0x4],eax
  421744:	mov    ecx,DWORD PTR [ebp-0x4]
  421747:	add    ecx,DWORD PTR [ebp-0x14]
  42174a:	mov    DWORD PTR [ebp-0xc],ecx
  42174d:	cmp    DWORD PTR [ebp-0x70],0x0
  421751:	jbe    0x42176e
  421753:	mov    edx,DWORD PTR [ebp-0xc]
  421756:	push   edx
  421757:	mov    eax,DWORD PTR [ebp-0x14]
  42175a:	push   eax
  42175b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42175e:	add    ecx,DWORD PTR [ebp-0x70]
  421761:	push   ecx
  421762:	mov    edx,DWORD PTR [ebp-0x4]
  421765:	push   edx
  421766:	call   0x4214d0
  42176b:	add    esp,0x10
  42176e:	cmp    DWORD PTR [ebp-0x64],0x0
  421772:	je     0x421786
  421774:	mov    ecx,DWORD PTR [ebp-0x54]
  421777:	push   ecx
  421778:	push   DWORD PTR [ebp-0x74]
  42177b:	mov    esi,DWORD PTR [ebp-0x64]
  42177e:	push   edx
  42177f:	pop    eax
  421780:	push   ecx
  421781:	nop
  421782:	jmp    esi
  421784:	jmp    0x42178c
  421786:	mov    eax,DWORD PTR [ebp+0x8]
  421789:	mov    DWORD PTR [ebp-0x18],eax
  42178c:	mov    eax,0x1
  421791:	pop    esi
  421792:	mov    esp,ebp
  421794:	pop    ebp
  421795:	ret    
  421796:	int3   
  421797:	int3   
  421798:	int3   
  421799:	int3   
  42179a:	int3   
  42179b:	int3   
  42179c:	int3   
  42179d:	int3   
  42179e:	int3   
  42179f:	int3   
  4217a0:	push   ebp
  4217a1:	mov    ebp,esp
  4217a3:	sub    esp,0x8
  4217a6:	mov    eax,ds:0x428014
  4217ab:	push   0x0
  4217ad:	push   0xb2
  4217b2:	push   0x82
  4217b7:	push   0x0
  4217b9:	push   0xffffffff
  4217bb:	mov    DWORD PTR [ebp-0x4],0x0
  4217c2:	mov    DWORD PTR [ebp-0x8],eax
  4217c5:	call   DWORD PTR ds:0x428010
  4217cb:	push   DWORD PTR [ebp-0x8]
  4217ce:	pop    edx
  4217cf:	call   edx
  4217d1:	push   eax
  4217d2:	pop    DWORD PTR [ebp-0x4]
  4217d5:	mov    eax,DWORD PTR [ebp-0x4]
  4217d8:	dec    eax
  4217d9:	cmp    eax,0x56
  4217dc:	jne    0x4217eb
  4217de:	push   0x6ca64dc5
  4217e3:	call   0x421550
  4217e8:	add    esp,0x4
  4217eb:	xor    eax,eax
  4217ed:	mov    esp,ebp
  4217ef:	pop    ebp
  4217f0:	ret    
  4217f1:	nop
  4217f2:	nop
  4217f3:	nop
  4217f4:	nop
  4217f5:	nop
  4217f6:	nop
  4217f7:	nop
  4217f8:	nop
  4217f9:	nop
  4217fa:	nop
  4217fb:	nop
  4217fc:	nop
  4217fd:	nop
  4217fe:	nop
  4217ff:	nop
  421800:	sub    esp,0x10
  421803:	lea    eax,[esp+0x0]
  421807:	push   eax
  421808:	call   DWORD PTR ds:0x42800c
  42180e:	cmp    WORD PTR [esp+0x0],0x0
  421814:	je     0x42182d
  421816:	push   0x0
  421818:	call   0x4217a0
  42181d:	add    esp,0x4
  421820:	call   0x411000
  421825:	xor    eax,eax
  421827:	add    esp,0x10
  42182a:	ret    0x10
  42182d:	(bad)  
  42182e:	mov    esi,0x15c222c0
  421833:	aam    0xb4
  421835:	ret    0x1aef
  421838:	adc    eax,0x9a0c3f27
  42183d:	mov    dl,0x7a
  42183f:	push   ss
  421840:	aam    0xb4
  421842:	ret    0x1aeb
  421845:	adc    eax,0x9af3c067
  42184a:	mov    dl,0xc2
  42184c:	push   ss
  42184d:	aam    0xb4
  42184f:	ret    0x1aeb
  421852:	adc    eax,0x9af3c027
  421857:	mov    dl,0xc2
  421859:	push   ss
  42185a:	aam    0xb4
  42185c:	ret    0x1aeb
  42185f:	adc    eax,0x9af3c027
  421864:	mov    dl,0xc2
  421866:	push   ss
  421867:	aam    0xb4
  421869:	ret    0x1a13
  42186c:	adc    eax,0x20ecce27
  421871:	mov    esp,0x79dda2c2
  421876:	jecxz  0x4218cb
  421878:	sbb    ebx,DWORD PTR [ecx-0x16]
  42187b:	loope  0x421824
  42187d:	repnz (bad) [ecx-0x52395bca]
  421884:	mov    WORD PTR [eax+0x74],gs
  421887:	dec    edx
  421888:	loopne 0x42181a
  42188a:	sti    
  42188b:	fsubr  QWORD PTR [ecx+edi*2-0x715f6b60]
  421892:	cmp    ah,BYTE PTR [edi+0x52]
  421895:	scas   al,BYTE PTR es:[edi]
  421896:	shl    ebx,cl
  421898:	fsubr  st(2),st
  42189a:	push   edx
  42189b:	fwait
  42189c:	out    0xe2,eax
  42189e:	xchg   BYTE PTR [ebp+0x71],dh
  4218a1:	inc    edx
  4218a2:	out    dx,al
  4218a3:	(bad)  
  4218a4:	xchg   edi,eax
  4218a5:	mov    eax,0xb4d416e6
  4218aa:	ret    0x1aeb
  4218ad:	adc    eax,0xc30f5920
  4218b2:	icebp  
  4218b3:	cmp    al,BYTE PTR [esi+ebx*8+0x10793af7]
  4218ba:	push   esi
  4218bb:	fist   WORD PTR [edx-0x7]
  4218be:	ret    0xced7
  4218c1:	sbb    al,0x8b
  4218c3:	dec    esp
  4218c4:	push   eax
  4218c5:	loope  0x421909
  4218c7:	jo     0x4218e8
  4218c9:	retf   0x6231
  4218cc:	and    al,cl
  4218ce:	dec    esi
  4218cf:	mov    cl,0x8d
  4218d1:	enter  0xe283,0x87
  4218d5:	sub    eax,0xb8a37dec
  4218da:	test   dh,ch
  4218dc:	inc    esi
  4218dd:	mov    esi,0x1f0b6b88
  4218e2:	ins    DWORD PTR es:[edi],dx
  4218e3:	cmp    BYTE PTR [ecx-0x70],ah
  4218e6:	clc    
  4218e7:	inc    edx
  4218e8:	pop    ss
  4218e9:	fsubp  st(4),st
  4218eb:	cmp    bh,BYTE PTR [ecx+0x10]
  4218ee:	push   esi
  4218ef:	fist   WORD PTR [ebx-0x7]
  4218f2:	mov    dl,0x4b
  4218f4:	push   eax
  4218f5:	sbb    al,0x6b
  4218f7:	ins    BYTE PTR es:[edi],dx
  4218f8:	inc    edx
  4218f9:	loope  0x421952
  4218fb:	in     eax,dx
  4218fc:	mov    ch,0xca
  4218fe:	stos   DWORD PTR es:[edi],eax
  4218ff:	dec    DWORD PTR [edi+0x262c1ec8]
  421905:	enter  0x7fb3,0x1d
  421909:	sub    eax,0xb8080b82
  42190e:	call   0x8813:0x80bedb73
  421915:	pop    ds
  421916:	jne    0x4218c1
  421918:	nop
  421919:	repnz icebp 
  42191b:	cmp    al,BYTE PTR [esi+ebx*8+0x1aebc2b4]
  421922:	adc    eax,0xcaf3c027
  421927:	test   edx,0xc0b59816
  42192d:	jmp    0x4218e9
  42192f:	lds    ecx,FWORD PTR [edi+ecx*4-0xd]
  421933:	call   0xc2b4:0xd416c2b2
  42193a:	or     ebx,DWORD PTR [edx]
  42193c:	push   ss
  42193d:	es retf 
  42193f:	repnz nop
  421941:	mov    dl,0xc2
  421943:	clc    
  421944:	shl    BYTE PTR [edx+eax*8+0x27151c57],1
  42194b:	shl    bl,0x9a
  42194e:	mov    ds:0xb4d4167f,eax
  421953:	shr    bl,cl
  421955:	sbb    dl,BYTE PTR ds:0x9af3c527
  42195b:	mov    dl,0x83
  42195d:	push   ss
  42195e:	aam    0xa4
  421960:	ret    0x1aeb
  421963:	pop    ss
  421964:	daa    
  421965:	shl    dh,0x9a
  421968:	mov    bl,0xc2
  42196a:	push   ss
  42196b:	aam    0xb4
  42196d:	ret    0x1aee
  421970:	adc    al,0x27
  421972:	shl    bl,0x9a
  421975:	mov    dl,0xc2
  421977:	inc    esi
  421978:	fdiv   DWORD PTR [edx+eax*8+0x26151aef]
  42197f:	and    al,0xf6
  421981:	call   0xc2b4:0x5416c2b0
  421988:	sti    
  421989:	sbb    dl,BYTE PTR ds:0x9af3c037
  42198f:	mov    dl,0xd2
  421991:	push   ss
  421992:	aam    0xa4
  421994:	ret    0x1aeb
  421997:	adc    eax,0x9ae3c027
  42199c:	mov    dl,0xc2
  42199e:	push   ss
  42199f:	aam    0xb4
  4219a1:	ret    0x1aeb
  4219a4:	adc    eax,0x96ca3427
  4219a9:	mov    dl,0xab
  4219ab:	adc    eax,0x1bc2b4d4
  4219b0:	adc    DWORD PTR ds:0x9af38968,edx
  4219b6:	mov    dl,0xc2
  4219b8:	push   ss
  4219b9:	aam    0xb4
  4219bb:	ret    0x1aeb
  4219be:	adc    eax,0x9af3c027
  4219c3:	mov    dl,0xc2
  4219c5:	push   ss
  4219c6:	aam    0xb4
  4219c8:	ret    0x1aeb
  4219cb:	adc    eax,0x9af3c027
  4219d0:	mov    dl,0xc2
  4219d2:	push   ss
  4219d3:	aam    0xb4
  4219d5:	ret    0x1aeb
  4219d8:	adc    eax,0x9af3c027
  4219dd:	mov    dl,0xc2
  4219df:	push   ss
  4219e0:	aam    0xb4
  4219e2:	ret    0x1aeb
  4219e5:	adc    eax,0x9af3c027
  4219ea:	mov    dl,0xc2
  4219ec:	push   ss
  4219ed:	aam    0xb4
  4219ef:	ret    0x1aeb
  4219f2:	adc    eax,0x9af3c027
  4219f7:	mov    dl,0xc2
  4219f9:	push   ss
  4219fa:	aam    0xb4
  4219fc:	ret    0x1aeb
  4219ff:	adc    eax,0x9af3c027
  421a04:	mov    dl,0xc2
  421a06:	push   ss
  421a07:	aam    0xb4
  421a09:	ret    0x1aeb
  421a0c:	adc    eax,0x9af3c027
  421a11:	mov    dl,0xc2
  421a13:	push   ss
  421a14:	aam    0xb4
  421a16:	ret    0x1aeb
  421a19:	adc    eax,0x9af3c027
  421a1e:	pushf  
  421a1f:	mov    dh,0x73
  421a21:	lods   al,BYTE PTR ds:[esi]
  421a22:	rol    dl,0xeb
  421a25:	sbb    dl,BYTE PTR ds:0x9af3cbc7
  421a2b:	mov    ds:0x60d416c2,al
  421a30:	(bad)  
  421a31:	jmp    0x421a4d
  421a33:	adc    DWORD PTR [edi],esp
  421a35:	shl    BYTE PTR [ebx+0x42f0f1df],0x9b
  421a3c:	mov    ah,0xc2
  421a3e:	jmp    0x421a5a
  421a40:	adc    eax,0x9af3e027
  421a45:	push   edx
  421a46:	in     al,dx
  421a47:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  421a49:	(bad)  
  421a4a:	mov    eax,ds:0x27151aeb
  421a4f:	mov    al,ds:0x32b29af3
  421a54:	sbb    eax,0xeb98b4d4
  421a59:	sbb    dl,BYTE PTR ds:0x9af3c4ff
  421a5f:	mov    dl,0xc2
  421a61:	push   ss
  421a62:	aam    0xb4
  421a64:	ret    0x1aeb
  421a67:	adc    eax,0x9ad3c027
  421a6c:	mov    dl,0x22
  421a6e:	push   ss
  421a6f:	aam    0xb4
  421a71:	ret    0x1aeb
  421a74:	adc    eax,0x9af3c027
  421a79:	mov    dl,0xc2
  421a7b:	push   ss
  421a7c:	aam    0xb4
  421a7e:	ret    0x1aeb
  421a81:	adc    eax,0x9af3c027
  421a86:	mov    dl,0xc2
  421a88:	push   ss
  421a89:	aam    0xb4
  421a8b:	ret    0x1aeb
  421a8e:	adc    eax,0x9af3c027
  421a93:	mov    dl,0xc2
  421a95:	push   ss
  421a96:	aam    0xb4
  421a98:	ret    0x1aeb
  421a9b:	adc    eax,0x9af3c027
  421aa0:	mov    dl,0xc2
  421aa2:	push   ss
  421aa3:	aam    0xb4
  421aa5:	ret    0x1aeb
  421aa8:	adc    eax,0x9af3c027
  421aad:	mov    dl,0xc2
  421aaf:	push   ss
  421ab0:	aam    0xb4
  421ab2:	ret    0x1aeb
  421ab5:	adc    eax,0x9af3c027
  421aba:	mov    dl,0xc2
  421abc:	push   ss
  421abd:	aam    0xb4
  421abf:	ret    0x1aeb
  421ac2:	adc    eax,0x9af3c027
  421ac7:	mov    dl,0xc2
  421ac9:	push   ss
  421aca:	aam    0xb4
  421acc:	ret    0x1aeb
  421acf:	adc    eax,0x9af3c027
  421ad4:	mov    dl,0xc2
  421ad6:	push   ss
  421ad7:	aam    0xb4
  421ad9:	ret    0x1aeb
  421adc:	adc    eax,0x9af3c027
  421ae1:	mov    dl,0xc2
  421ae3:	push   ss
  421ae4:	aam    0xb4
  421ae6:	ret    0x1aeb
  421ae9:	adc    eax,0x9af3c027
  421aee:	mov    dl,0xc2
  421af0:	push   ss
  421af1:	aam    0xb4
  421af3:	ret    0x1aeb
  421af6:	adc    eax,0x9af3c027
  421afb:	mov    dl,0xc2
  421afd:	push   ss
  421afe:	aam    0xb4
  421b00:	ret    0x1aeb
  421b03:	adc    eax,0x9af3c027
  421b08:	mov    dl,0xc2
  421b0a:	push   ss
  421b0b:	aam    0xb4
  421b0d:	ret    0x1aeb
  421b10:	adc    eax,0x9af3c027
  421b15:	mov    dl,0xc2
  421b17:	push   ss
  421b18:	aam    0xb4
  421b1a:	ret    0x1aeb
  421b1d:	adc    eax,0x9af3c027
  421b22:	mov    dl,0xc2
  421b24:	push   ss
  421b25:	aam    0xb4
  421b27:	ret    0x1aeb
  421b2a:	adc    eax,0x9af3c027
  421b2f:	mov    dl,0xc2
  421b31:	push   ss
  421b32:	aam    0xb4
  421b34:	ret    0x1aeb
  421b37:	adc    eax,0x9af3c027
  421b3c:	mov    dl,0xc2
  421b3e:	push   ss
  421b3f:	aam    0xb4
  421b41:	ret    0x1aeb
  421b44:	adc    eax,0x9af3c027
  421b49:	mov    dl,0xc2
  421b4b:	push   ss
  421b4c:	aam    0xb4
  421b4e:	ret    0x1aeb
  421b51:	adc    eax,0x9af3c027
  421b56:	mov    dl,0xc2
  421b58:	push   ss
  421b59:	aam    0xb4
  421b5b:	ret    0x1aeb
  421b5e:	adc    eax,0x9af3c027
  421b63:	mov    dl,0xc2
  421b65:	push   ss
  421b66:	aam    0xb4
  421b68:	ret    0x1aeb
  421b6b:	adc    eax,0x9af3c027
  421b70:	mov    dl,0xc2
  421b72:	push   ss
  421b73:	aam    0xb4
  421b75:	ret    0x1aeb
  421b78:	adc    eax,0x9af3c027
  421b7d:	mov    dl,0xc2
  421b7f:	push   ss
  421b80:	aam    0xb4
  421b82:	ret    0x1aeb
  421b85:	adc    eax,0x9af3c027
  421b8a:	mov    dl,0xc2
  421b8c:	push   ss
  421b8d:	aam    0xb4
  421b8f:	ret    0x1aeb
  421b92:	adc    eax,0x9af3c027
  421b97:	mov    dl,0xc2
  421b99:	push   ss
  421b9a:	aam    0xb4
  421b9c:	ret    0x1aeb
  421b9f:	adc    eax,0x9af3c027
  421ba4:	mov    dl,0xc2
  421ba6:	push   ss
  421ba7:	aam    0xb4
  421ba9:	ret    0x1aeb
  421bac:	adc    eax,0x9af3c027
  421bb1:	mov    dl,0xc2
  421bb3:	push   ss
  421bb4:	aam    0xb4
  421bb6:	ret    0x1aeb
  421bb9:	adc    eax,0x9af3c027
  421bbe:	mov    dl,0xc2
  421bc0:	push   ss
  421bc1:	aam    0xb4
  421bc3:	ret    0x1aeb
  421bc6:	adc    eax,0x9af3c027
  421bcb:	mov    dl,0xc2
  421bcd:	push   ss
  421bce:	aam    0xb4
  421bd0:	ret    0x1aeb
  421bd3:	adc    eax,0x9af3c027
  421bd8:	mov    dl,0xc2
  421bda:	push   ss
  421bdb:	aam    0xb4
  421bdd:	ret    0x1aeb
  421be0:	adc    eax,0x9af3c027
  421be5:	mov    dl,0xc2
  421be7:	push   ss
  421be8:	aam    0xb4
  421bea:	ret    0x1aeb
  421bed:	adc    eax,0x9af3c027
  421bf2:	mov    dl,0xc2
  421bf4:	push   ss
  421bf5:	aam    0xb4
  421bf7:	ret    0x1aeb
  421bfa:	adc    eax,0x9af3c027
  421bff:	mov    dl,0xc2
  421c01:	push   ss
  421c02:	aam    0xb4
  421c04:	ret    0x1aeb
  421c07:	adc    eax,0x9af3c027
  421c0c:	mov    dl,0xc2
  421c0e:	push   ss
  421c0f:	aam    0xb4
  421c11:	ret    0x1aeb
  421c14:	adc    eax,0x9af3c027
  421c19:	mov    dl,0xc2
  421c1b:	push   ss
  421c1c:	aam    0xb4
  421c1e:	ret    0x1aeb
  421c21:	adc    eax,0x9af3c027
  421c26:	mov    dl,0xc2
  421c28:	push   ss
  421c29:	aam    0xb4
  421c2b:	ret    0x1aeb
  421c2e:	jp     0x421bbf
  421c30:	retf   
  421c31:	repz mov ch,0xb2
  421c34:	ret    0xd406
  421c37:	mov    ah,0xe8
  421c39:	dec    ecx
  421c3a:	shl    BYTE PTR [ecx+eax*2+0x3f],0xde
  421c3f:	add    al,0x35
  421c41:	xchg   edx,eax
  421c42:	sti    
  421c43:	loop   0x421ca1
  421c45:	rcr    DWORD PTR [edi-0x71],1
  421c48:	jae    0x421ca0
  421c4a:	inc    esp
  421c4b:	test   eax,0x750389
  421c50:	mov    ecx,0xdc6a4850
  421c55:	cmp    eax,DWORD PTR [ebp+0x50]
  421c58:	int3   
  421c59:	mov    ds:0xc3a78d81,eax
  421c5e:	xchg   esi,eax
  421c5f:	ret    0xbdcc
  421c62:	popf   
  421c63:	jb     0x421bf6
  421c65:	sahf   
  421c66:	xor    eax,DWORD PTR [eax+0x5c0cbff]
  421c6c:	mov    ds:0x9c31c4e4,al
  421c71:	mov    WORD PTR [eax],fs
  421c73:	pop    edi
  421c74:	popf   
  421c75:	cmp    cl,BYTE PTR [eax-0x3459a422]
  421c7b:	mov    ecx,0xde6ad61a
  421c80:	(bad)  
  421c82:	test   BYTE PTR [edi-0x69],al
  421c85:	jp     0x421cfa
  421c87:	lods   eax,DWORD PTR ds:[esi]
  421c88:	xor    ebp,DWORD PTR [eax-0x46]
  421c8b:	inc    ecx
  421c8c:	test   eax,0x9476b578
  421c91:	out    0xdf,eax
  421c93:	es retf 0x74ea
  421c97:	lods   al,BYTE PTR ds:[esi]
  421c98:	mov    al,ds:0x259e8e55
  421c9d:	mov    ebp,0xd425fffc
  421ca2:	mov    edx,0x4972780e
  421ca7:	fmul   QWORD PTR [esi]
  421ca9:	mov    ecx,0x3d9a963f
  421cae:	fisubr DWORD PTR [ebx]
  421cb0:	fst    DWORD PTR [eax-0x13c76231]
  421cb6:	jg     0x421cf3
  421cb8:	fdivrp st(1),st
  421cba:	push   es
  421cbb:	jle    0x421d10
  421cbd:	call   0xea35:0xeee0a414
  421cc4:	push   esp
  421cc5:	mov    BYTE PTR [edx],dh
  421cc7:	jg     0x421c8f
  421cc9:	call   0xebd3c7ed
  421cce:	sub    DWORD PTR [ebp+ebp*2+0x4bae245c],esi
  421cd5:	stos   DWORD PTR es:[edi],eax
  421cd6:	push   ebp
  421cd7:	or     eax,0x2219760b
  421cdc:	enter  0x80ee,0x25
  421ce0:	cmp    ebp,DWORD PTR [eax+0x203f0fdb]
  421ce6:	mov    ch,0x98
  421ce8:	push   0x1784fc02
  421ced:	jg     0x421d2d
  421cef:	loop   0x421cf5
  421cf1:	xchg   edi,eax
  421cf2:	in     eax,0x1d
  421cf4:	inc    edi
  421cf5:	mov    ecx,0x5c96d5d
  421cfa:	cmp    ebp,edx
  421cfc:	mov    ebp,0xd7b3c9d4
  421d01:	mov    DWORD PTR [edi+0x2051cc44],esp
  421d07:	adc    al,0xd1
  421d09:	pusha  
  421d0a:	mov    bh,0xa8
  421d0c:	mov    al,0x48
  421d0e:	lock (bad) 
  421d10:	pop    edx
  421d11:	xor    eax,0xd0f8c66e
  421d16:	or     eax,0x3077fae4
  421d1b:	jnp    0x421d08
  421d1d:	pop    ecx
  421d1e:	shl    edx,cl
  421d20:	or     BYTE PTR [ebp-0x1e],dl
  421d23:	mov    esi,eax
  421d25:	or     al,0x3
  421d27:	mov    ebp,0x418e73b9
  421d2c:	into   
  421d2d:	out    dx,eax
  421d2e:	xchg   DWORD PTR [ecx-0x2f3d8993],edx
  421d34:	fs inc edi
  421d36:	sbb    al,0x18
  421d38:	fcomp  QWORD PTR [ebp+0x1d]
  421d3b:	sub    al,BYTE PTR [ebx-0x7f24c3d5]
  421d41:	jno    0x421d93
  421d43:	in     al,0x16
  421d45:	cwde   
  421d46:	xchg   BYTE PTR [eax],ch
  421d48:	mov    ebx,0x291958de
  421d4d:	mov    esi,0x2bafbebc
  421d52:	ret    0xd5c2
  421d55:	fstp   QWORD PTR [ecx+0x2882eb3c]
  421d5b:	inc    ebp
  421d5c:	mov    DWORD PTR [esi+0x73],ebx
  421d5f:	repz in eax,dx
  421d61:	pop    esi
  421d62:	jb     0x421dab
  421d64:	stos   BYTE PTR es:[edi],al
  421d65:	imul   esi,edx,0x9
  421d68:	sbb    dh,BYTE PTR [ebx+ebp*2-0x3a48c4fd]
  421d6f:	jp     0x421d38
  421d71:	push   ecx
  421d72:	out    dx,al
  421d73:	pusha  
  421d74:	imul   ecx,DWORD PTR [edi+eax*8],0x6812e54f
  421d7b:	and    al,bh
  421d7d:	push   0xd57c96da
  421d82:	clc    
  421d83:	fsubr  st(7),st
  421d85:	adc    eax,0x84fa1859
  421d8a:	push   0xffffff80
  421d8c:	(bad)  
  421d8d:	or     dh,BYTE PTR [ebx]
  421d8f:	add    al,0xbf
  421d91:	mov    esi,0xdb7e1957
  421d96:	jmp    0x421de8
  421d98:	lods   al,BYTE PTR ds:[esi]
  421d99:	add    ebp,ebp
  421d9b:	jb     0x421d63
  421d9d:	jg     0x421df8
  421d9f:	fwait
  421da0:	add    al,0x7b
  421da2:	mov    ds:0x8654a105,eax
  421da7:	mov    edi,0xd1be04a1
  421dac:	mov    WORD PTR [edi+esi*4-0x306835f0],?
  421db3:	dec    ebp
  421db4:	inc    ecx
  421db5:	or     cl,dh
  421db7:	jp     0x421df3
  421db9:	das    
  421dba:	sahf   
  421dbb:	mov    esp,0xc5c4bd05
  421dc0:	imul   ebp,DWORD PTR [edx-0x1a444f27],0x80585304
  421dca:	add    ecx,edx
  421dcc:	fwait
  421dcd:	push   0xd1c461d2
  421dd2:	jecxz  0x421ded
  421dd4:	loopne 0x421e4b
  421dd6:	int    0x9e
  421dd8:	inc    DWORD PTR [esp+edi*8]
  421ddb:	imul   ebx,DWORD PTR [esi-0x86e8e57],0xffffffa4
  421de2:	addr16 push edx
  421de4:	es cmp eax,0xcb6fbb82
  421dea:	push   ss
  421deb:	rcl    ecx,1
  421ded:	iret   
  421dee:	push   eax
  421def:	ja     0x421dbc
  421df1:	icebp  
  421df2:	int3   
  421df3:	pop    ss
  421df4:	pop    ss
  421df5:	mov    ebp,0xdff14ab9
  421dfa:	and    bh,BYTE PTR [edx+0x45dd8116]
  421e00:	das    
  421e01:	int3   
  421e02:	xor    al,0xb9
  421e04:	sbb    edi,DWORD PTR [esi-0x63]
  421e07:	and    al,0x18
  421e09:	mov    eax,ds:0x5459e4c2
  421e0e:	int3   
  421e0f:	mov    BYTE PTR [ebx],ah
  421e11:	scas   al,BYTE PTR es:[edi]
  421e12:	fwait
  421e13:	and    al,bl
  421e15:	sub    cl,BYTE PTR [eax+ebp*4+0x6c]
  421e19:	cwde   
  421e1a:	scas   al,BYTE PTR es:[edi]
  421e1b:	out    dx,eax
  421e1c:	xchg   esp,eax
  421e1d:	mov    eax,0x363c093
  421e22:	imul   ebx,DWORD PTR [edx+0x58],0xd8980d61
  421e29:	ins    BYTE PTR es:[edi],dx
  421e2a:	mov    cr7,esi
  421e2d:	ja     0x421e5e
  421e2f:	dec    esi
  421e30:	fadd   DWORD PTR ds:0x6263b0cf
  421e36:	popf   
  421e37:	jmp    0x421e74
  421e39:	retf   0x3253
  421e3c:	daa    
  421e3d:	adc    eax,0x268e40be
  421e42:	add    eax,0xeaf9e126
  421e47:	xor    BYTE PTR [esi+0x3b1e9001],ch
  421e4d:	jle    0x421e2f
  421e4f:	ss pop es
  421e51:	outs   dx,DWORD PTR ss:[esi]
  421e53:	mov    ebp,0x42ec2adf
  421e58:	or     ecx,edi
  421e5a:	neg    BYTE PTR [eax-0x339b0bfc]
  421e60:	test   al,0x7a
  421e62:	scas   al,BYTE PTR es:[edi]
  421e63:	je     0x421e99
  421e65:	repz mov esp,ds
  421e68:	fs pop ebx
  421e6a:	stos   DWORD PTR es:[edi],eax
  421e6b:	inc    esp
  421e6c:	mov    ah,0xee
  421e6e:	adc    eax,DWORD PTR [esi-0x14f47eec]
  421e74:	sar    ecx,1
  421e76:	pop    esp
  421e77:	ret    
  421e78:	cmp    dl,BYTE PTR [ecx]
  421e7a:	aaa    
  421e7b:	retf   
  421e7c:	pop    ebx
  421e7d:	arpl   WORD PTR [ebx-0x14],dx
  421e80:	mov    dl,0xcd
  421e82:	nop
  421e83:	mov    cl,0x55
  421e85:	add    DWORD PTR [edx+ebp*1+0x54d911c2],esi
  421e8c:	aad    0xe2
  421e8e:	push   ds
  421e8f:	out    0x45,eax
  421e91:	test   BYTE PTR [edi],dl
  421e93:	push   0xffffff96
  421e95:	xchg   DWORD PTR [edi-0x40d5117f],ecx
  421e9b:	hlt    
  421e9c:	lock jns 0x421ec9
  421e9f:	sar    BYTE PTR [ecx],0x50
  421ea2:	outs   dx,BYTE PTR ds:[esi]
  421ea3:	int    0xd7
  421ea5:	outs   dx,DWORD PTR ds:[esi]
  421ea6:	sub    ah,ah
  421ea8:	lds    esi,FWORD PTR [ebx-0x2b]
  421eab:	pop    ebp
  421eac:	mov    BYTE PTR [ebx],bl
  421eae:	sbb    esi,esi
  421eb0:	into   
  421eb1:	ds stos BYTE PTR es:[edi],al
  421eb3:	xchg   esp,eax
  421eb4:	and    eax,0xaf11d116
  421eb9:	xor    esp,DWORD PTR [edx-0x78]
  421ebc:	push   esi
  421ebd:	aam    0x76
  421ebf:	bound  edi,QWORD PTR [esi]
  421ec1:	and    al,0xbd
  421ec3:	mov    al,ds:0x785f5fca
  421ec8:	ja     0x421f33
  421eca:	pop    esi
  421ecb:	test   al,0x9
  421ecd:	push   ebx
  421ece:	clc    
  421ecf:	inc    esp
  421ed0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ed1:	add    eax,0xfb6d76f2
  421ed6:	or     al,0xb2
  421ed8:	jg     0x421e69
  421eda:	jle    0x421e9f
  421edc:	dec    eax
  421edd:	icebp  
  421ede:	xchg   edx,eax
  421edf:	pop    ss
  421ee0:	sbb    DWORD PTR cs:[ebx],0x55367ab0
  421ee7:	popf   
  421ee8:	setno  BYTE PTR [edi-0x2473da4a]
  421eef:	cmp    DWORD PTR [edi-0x5b],0xffffffbb
  421ef3:	jae    0x421f0f
  421ef5:	cmp    DWORD PTR [edi-0x5f24a803],ebp
  421efb:	sub    esp,DWORD PTR [eax]
  421efd:	ret    0x95a1
  421f00:	jb     0x421ed8
  421f02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f03:	jp     0x421e95
  421f05:	fwait
  421f06:	sahf   
  421f07:	cmp    DWORD PTR [edx],0xffffffe4
  421f0a:	mov    edx,0xc3e0728
  421f0f:	xor    BYTE PTR [eax-0x778af2e4],bh
  421f15:	ret    
  421f16:	pusha  
  421f17:	retf   0xd1d7
  421f1a:	adc    DWORD PTR [ebx+ecx*2],edi
  421f1d:	xor    DWORD PTR es:0xe1a6856b,ebx
  421f24:	out    dx,eax
  421f25:	(bad)  
  421f26:	jge    0x421f70
  421f28:	xor    bl,ah
  421f2a:	inc    eax
  421f2b:	jae    0x421f1d
  421f2d:	into   
  421f2e:	adc    DWORD PTR [ecx+0x1b],esp
  421f31:	jb     0x421edf
  421f33:	stos   BYTE PTR es:[edi],al
  421f34:	xchg   esi,eax
  421f35:	leave  
  421f36:	stos   DWORD PTR es:[edi],eax
  421f37:	mov    ch,0x88
  421f39:	repnz sbb eax,0x44055000
  421f3f:	add    ecx,DWORD PTR [edx+0x6a]
  421f42:	push   edi
  421f43:	mul    eax
  421f45:	ret    0xa1c1
  421f48:	sub    esi,esi
  421f4a:	jmp    0x519c35f
  421f4f:	adc    dh,BYTE PTR [ecx]
  421f51:	jmp    0xdea4:0xc88dd428
  421f58:	pushf  
  421f59:	pop    esi
  421f5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f5b:	out    0xab,al
  421f5d:	cmp    al,0x1f
  421f5f:	mov    eax,0xa1f72b1
  421f64:	popf   
  421f65:	mov    bh,0x6e
  421f67:	in     al,0x18
  421f69:	sbb    eax,0x9d768568
  421f6e:	push   edi
  421f6f:	sti    
  421f70:	sbb    eax,0x22e5dcbf
  421f75:	xchg   BYTE PTR [esi],dl
  421f77:	jne    0x421fae
  421f79:	push   esi
  421f7a:	adc    al,0xad
  421f7c:	arpl   cx,bx
  421f7e:	add    DWORD PTR [ebp+0x2e],eax
  421f81:	jns    0x421f5c
  421f83:	stc    
  421f84:	adc    esi,DWORD PTR [eax-0xfc27955]
  421f8a:	in     al,dx
  421f8b:	jge    0x421f8b
  421f8d:	dec    esi
  421f8e:	outs   dx,DWORD PTR ds:[esi]
  421f8f:	jmp    0x4a6c9260
  421f94:	adc    bl,BYTE PTR [edx]
  421f96:	xchg   ecx,eax
  421f97:	xor    bh,ch
  421f99:	loopne 0x421f55
  421f9b:	sbb    DWORD PTR [eax+0x5d2b095d],esp
  421fa1:	sbb    eax,0xab8a73a5
  421fa6:	in     eax,0x58
  421fa8:	mov    ch,0x1d
  421faa:	sti    
  421fab:	add    eax,0xdecbddfc
  421fb0:	sub    bl,BYTE PTR [ebx+eiz*4-0x52e2a0e8]
  421fb7:	cdq    
  421fb8:	push   eax
  421fb9:	popa   
  421fba:	xchg   ebp,edi
  421fbc:	sahf   
  421fbd:	mov    al,0x4d
  421fbf:	in     eax,0x6b
  421fc1:	bound  eax,QWORD PTR [edx+0x5]
  421fc4:	sahf   
  421fc5:	out    dx,al
  421fc6:	pop    ds
  421fc7:	in     eax,dx
  421fc8:	dec    eax
  421fc9:	je     0x422045
  421fcb:	and    ebp,DWORD PTR [ebx+edi*1-0x5600d3dc]
  421fd2:	jg     0x4ae1a975
  421fd8:	pusha  
  421fd9:	enter  0x59f4,0xd4
  421fdd:	int    0xb7
  421fdf:	pop    eax
  421fe0:	push   ecx
  421fe1:	popf   
  421fe2:	dec    ebp
  421fe4:	not    BYTE PTR [ebx]
  421fe6:	loop   0x421fd1
  421fe8:	inc    esp
  421fe9:	cmp    al,BYTE PTR ds:0xb3173e07
  421fef:	nop
  421ff0:	dec    ebp
  421ff1:	das    
  421ff2:	jp     0x421f88
  421ff4:	(bad)  
  421ff5:	out    0x38,al
  421ff7:	lods   eax,DWORD PTR ds:[esi]
  421ff8:	outs   dx,BYTE PTR ds:[esi]
  421ff9:	inc    ebp
  421ffa:	out    0xb5,al
  421ffc:	xchg   ebx,eax
  421ffd:	popa   
  421ffe:	mov    bl,0xf6
  422000:	xrelease xchg DWORD PTR [edx-0x50],ecx
  422004:	loope  0x421fc7
  422006:	outs   dx,BYTE PTR ds:[esi]
  422007:	adc    al,0x20
  422009:	pop    ebx
  42200a:	cmp    eax,DWORD PTR [edi+0x4684542e]
  422010:	mov    DWORD PTR [eax],ebp
  422012:	repz mov gs,WORD PTR [ebx-0x6bf988c6]
  422019:	sbb    DWORD PTR [edx+0x8],ecx
  42201c:	sbb    eax,0x4e3b874a
  422021:	mov    ebx,0x561f6c3d
  422026:	and    ebp,DWORD PTR ds:0x89da2db3
  42202c:	adc    esi,ebx
  42202e:	fdivr  st,st(4)
  422030:	add    esi,DWORD PTR [edx]
  422032:	js     0x422042
  422034:	lea    ebp,[edx+0x5a1b9b88]
  42203a:	in     al,dx
  42203b:	xchg   ebp,eax
  42203c:	repnz fstp TBYTE PTR [edi+0x55]
  422040:	push   ss
  422041:	sbb    al,0x67
  422043:	add    DWORD PTR [ecx+0xf],ebx
  422046:	ds dec edi
  422048:	test   DWORD PTR [esp+edi*1-0xacb7e8f],edi
  42204f:	add    BYTE PTR [ebx+eax*1-0x17],ch
  422053:	sub    DWORD PTR [esi-0x29],0x498e7ece
  42205a:	dec    ebp
  42205b:	out    0x73,al
  42205d:	bound  ebx,QWORD PTR [edx]
  42205f:	add    esp,edx
  422061:	inc    ecx
  422062:	stos   DWORD PTR es:[edi],eax
  422063:	push   es
  422064:	jns    0x422025
  422066:	jl     0x4220b5
  422068:	pop    esi
  422069:	xor    ecx,DWORD PTR [ecx+0x3647265d]
  42206f:	mov    edx,fs
  422071:	mov    WORD PTR [ebx-0x7f0b87ed],cs
  422077:	jmp    0x56be2a42
  42207c:	cwde   
  42207d:	pop    ebx
  42207e:	dec    ebp
  42207f:	jg     0x4220b4
  422081:	mov    edx,0x2e3c8cfa
  422086:	(bad)  
  422088:	cmp    edi,eax
  42208a:	cmp    al,0x4e
  42208c:	(bad)  
  42208e:	out    dx,eax
  42208f:	fild   QWORD PTR [ecx+0x33]
  422092:	add    al,0xef
  422094:	jge    0x422030
  422096:	imul   edi,DWORD PTR [eax-0x3a],0x24ab2d82
  42209d:	lock dec esp
  42209f:	stos   BYTE PTR es:[edi],al
  4220a0:	mov    ecx,0x7996b7cf
  4220a5:	or     DWORD PTR [ecx+0x4b],ecx
  4220a8:	out    dx,al
  4220a9:	dec    ebx
  4220aa:	push   edi
  4220ab:	stc    
  4220ac:	xchg   ecx,eax
  4220ad:	add    dl,BYTE PTR [ebx+0x41]
  4220b0:	adc    DWORD PTR [eax-0xc],0xca4bf6bb
  4220b7:	jmp    0x69c4:0xb0b2b89
  4220be:	sub    BYTE PTR [edi],ch
  4220c0:	iret   
  4220c1:	xor    BYTE PTR [ecx+0x2d88b5],0x73
  4220c8:	mov    bh,0xb8
  4220ca:	dec    edi
  4220cb:	dec    ebx
  4220cc:	mov    esi,0x8ddf3f1
  4220d1:	jmp    0x5194:0x4d43bc12
  4220d8:	in     al,0xf6
  4220da:	out    dx,eax
  4220db:	pop    eax
  4220dc:	es cmp eax,0xa7eec77d
  4220e2:	fistp  WORD PTR [eax-0x4c]
  4220e5:	pop    es
  4220e6:	add    DWORD PTR ss:[eax+0x64],ebp
  4220ea:	int3   
  4220eb:	add    eax,0xdd6aa344
  4220f0:	pop    ebx
  4220f1:	jp     0x4220c7
  4220f3:	aam    0x91
  4220f5:	inc    ecx
  4220f6:	(bad)  
  4220f8:	dec    esi
  4220f9:	mov    cl,0xda
  4220fb:	retf   
  4220fc:	inc    esp
  4220fd:	mov    ch,BYTE PTR [ebx]
  4220ff:	clc    
  422100:	mov    ebx,0xc1b6aa21
  422105:	mov    WORD PTR [ecx],ss
  422107:	retf   
  422108:	inc    esi
  422109:	mov    ecx,0xb64de0a1
  42210e:	mov    eax,0xa0bfe3d
  422113:	xor    DWORD PTR [eax],edi
  422115:	ret    0xd728
  422118:	ja     0x422108
  42211a:	add    DWORD PTR [ecx-0x6c388dd1],ebx
  422120:	ret    0x50b7
  422123:	add    BYTE PTR [ebx+0x3b],0xeb
  422127:	cmp    ebx,DWORD PTR [edi-0x48dd564a]
  42212d:	push   eax
  42212e:	outs   dx,BYTE PTR ds:[esi]
  42212f:	pop    ebx
  422130:	gs mov dl,0xe0
  422133:	seta   al
  422136:	push   0xffffffc6
  422138:	ret    
  422139:	xchg   ebx,edi
  42213b:	xchg   ecx,eax
  42213c:	xchg   edx,eax
  42213d:	mov    al,0xa1
  42213f:	xor    al,0x72
  422141:	cmpxchg BYTE PTR [ebx],dl
  422144:	inc    eax
  422145:	lods   al,BYTE PTR ds:[esi]
  422146:	xchg   ebp,eax
  422147:	adc    DWORD PTR [edx-0x20],edi
  42214a:	fstp   DWORD PTR [esi-0x63]
  42214d:	sub    al,0xe
  42214f:	fdiv   QWORD PTR [ecx+0x1a]
  422152:	enter  0x2337,0x8f
  422156:	push   ebp
  422157:	xlat   BYTE PTR ds:[ebx]
  422158:	cdq    
  422159:	iret   
  42215a:	sub    ch,BYTE PTR [ebp+0x6227debc]
  422160:	xchg   esi,eax
  422161:	push   DWORD PTR [eax+0x40bddc5b]
  422167:	cmp    ch,BYTE PTR [edi-0xf3e6865]
  42216d:	ror    bh,1
  42216f:	(bad)  [ecx+0x61]
  422172:	mov    ebx,0xebe71c9f
  422177:	cwde   
  422178:	or     al,0xdb
  42217a:	pop    edi
  42217b:	shr    BYTE PTR [eax+0x7ae10780],1
  422181:	jg     0x4221e2
  422183:	mov    edx,0xf743b397
  422188:	xor    DWORD PTR [ebx+ebp*4],0xffffffb1
  42218c:	prefetcht0 BYTE PTR [esi+0x2bd622ef]
  422193:	xchg   edx,eax
  422194:	addr16 inc ebp
  422196:	mov    dl,0x1b
  422198:	addr16 int3 
  42219a:	jns    0x42221a
  42219c:	and    ebp,DWORD PTR [esi+0x35]
  42219f:	adc    DWORD PTR [ebp+0xde06fa9],0xffffffdb
  4221a6:	fild   QWORD PTR [edx-0x448e35f1]
  4221ac:	lods   eax,DWORD PTR ds:[esi]
  4221ad:	mov    ch,0x9e
  4221af:	mov    edx,0x370df0ef
  4221b4:	push   esi
  4221b5:	clc    
  4221b6:	mov    edx,0x4bd56ec5
  4221bb:	popa   
  4221bc:	ror    dh,cl
  4221be:	sti    
  4221bf:	aaa    
  4221c0:	mov    cl,0x6f
  4221c2:	xchg   edi,eax
  4221c3:	cmp    edx,DWORD PTR ss:[eax+0x718c7f1e]
  4221ca:	adc    al,0x90
  4221cc:	pop    edi
  4221cd:	or     DWORD PTR [esi+0x1d07ee17],ebx
  4221d3:	and    BYTE PTR [ebx+edi*8-0x51f52cac],dl
  4221da:	add    al,0x42
  4221dc:	push   0x8b5a8b46
  4221e1:	and    DWORD PTR [edx-0x64db4393],ebx
  4221e7:	int    0x32
  4221e9:	inc    ebx
  4221ea:	mov    dh,0x8a
  4221ec:	xor    edi,DWORD PTR [ecx+0x7528d08]
  4221f2:	in     eax,0x14
  4221f4:	(bad)  
  4221f5:	cmp    bl,dl
  4221f7:	pop    ecx
  4221f8:	pop    esp
  4221f9:	and    edx,eax
  4221fb:	mov    WORD PTR [ecx+0x72701c93],ss
  422201:	push   edx
  422202:	sahf   
  422203:	jne    0x4221af
  422205:	add    dl,BYTE PTR ds:0xefb53ca6
  42220b:	push   ebp
  42220c:	adc    DWORD PTR [edi],0x10
  42220f:	cmp    DWORD PTR [esi],ebp
  422211:	or     edi,edi
  422213:	mov    dl,0xdc
  422215:	or     dl,BYTE PTR [eax+0x29]
  422218:	jb     0x422294
  42221a:	popf   
  42221b:	loope  0x4221d4
  42221d:	xchg   DWORD PTR [edi+edx*1+0x3603b9f4],ecx
  422224:	retf   
  422225:	std    
  422226:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422227:	imul   ecx,DWORD PTR ds:0xb02725b6,0xffffffd4
  42222e:	push   ecx
  42222f:	shl    DWORD PTR [edx+0x46],0xff
  422233:	fcomp  DWORD PTR [edx+eiz*4-0x6c]
  422237:	push   es
  422238:	inc    esp
  422239:	mov    eax,0x51820443
  42223e:	into   
  42223f:	lds    edx,FWORD PTR [eax+edi*2]
  422242:	fwait
  422243:	imul   eax,DWORD PTR [eax],0xffffff95
  422246:	aaa    
  422247:	sub    esp,DWORD PTR [esi-0x4f]
  42224a:	retf   
  42224b:	mov    ch,0x4f
  42224d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42224e:	cld    
  42224f:	dec    edi
  422250:	inc    esi
  422251:	push   eax
  422252:	test   BYTE PTR [edx],dl
  422254:	fstp   QWORD PTR ds:0x1f33a453
  42225a:	add    ebx,DWORD PTR [ebx-0x37]
  42225d:	sub    bl,BYTE PTR [ebx]
  42225f:	ss call 0xeb0ebf70
  422265:	pop    ebx
  422266:	data16 or al,0x40
  422269:	push   eax
  42226a:	fcomi  st,st(7)
  42226d:	and    edx,esp
  42226f:	and    BYTE PTR [esp+edi*1-0x73f40e38],0x69
  422277:	mov    al,0x53
  422279:	fstp   TBYTE PTR [ebp-0x174096b9]
  42227f:	shl    DWORD PTR [edx+0x31],0xb5
  422283:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422284:	mov    DWORD PTR [edi-0x7d],ebp
  422287:	mov    cl,0x12
  422289:	pop    eax
  42228a:	mov    ecx,0x9829191
  42228f:	bound  ecx,QWORD PTR [eax-0x6a]
  422292:	dec    esp
  422293:	out    dx,eax
  422294:	dec    ecx
  422295:	ror    BYTE PTR [esi-0x15],cl
  422298:	arpl   WORD PTR [ebx+0x70],bx
  42229b:	pop    ds
  42229c:	pop    esi
  42229d:	pop    esp
  42229e:	push   ss
  42229f:	inc    edi
  4222a0:	in     eax,dx
  4222a1:	dec    esi
  4222a2:	loope  0x4222fc
  4222a4:	(bad)  
  4222a5:	sti    
  4222a6:	sbb    dh,0x28
  4222a9:	sbb    al,0xbd
  4222ab:	repz enter 0x4027,0xca
  4222b0:	xchg   ecx,eax
  4222b1:	or     esi,0xffffff90
  4222b4:	pop    ds
  4222b5:	mov    ch,0xe2
  4222b7:	mov    al,0xc
  4222b9:	jmp    0x77be34bc
  4222be:	xchg   esp,eax
  4222bf:	(bad)  [edx+0x67]
  4222c2:	inc    eax
  4222c3:	pushf  
  4222c4:	dec    edx
  4222c5:	cmp    al,0xfe
  4222c7:	std    
  4222c8:	cwde   
  4222c9:	shl    BYTE PTR [eax],0x4d
  4222cc:	add    DWORD PTR [esi+0x695f3791],ebx
  4222d2:	dec    esi
  4222d3:	scas   eax,DWORD PTR es:[edi]
  4222d4:	push   0xffffffe1
  4222d6:	mov    ebp,0x79fe05e8
  4222db:	mov    eax,ds:0x987dbf96
  4222e0:	xor    al,0x14
  4222e2:	add    al,0xe8
  4222e4:	pop    ebx
  4222e5:	or     BYTE PTR [eax+ecx*1],dh
  4222e8:	mov    bl,0x48
  4222ea:	and    BYTE PTR cs:0x63939e3d,ch
  4222f1:	fsub   QWORD PTR [ebp-0x36b5bd63]
  4222f7:	dec    ebp
  4222f8:	mov    cl,0xcf
  4222fa:	aam    0xb4
  4222fc:	mov    dl,cl
  4222fe:	(bad)  
  4222ff:	stos   DWORD PTR es:[edi],eax
  422300:	xor    dh,bh
  422302:	out    dx,eax
  422303:	add    eax,0xfdc00bea
  422308:	aas    
  422309:	imul   ebp,DWORD PTR [esp+ebx*1+0x72],0x16
  42230e:	mov    al,dh
  422310:	and    cl,BYTE PTR [ebx+0x7e]
  422313:	push   ebp
  422314:	push   edi
  422315:	retf   0x690b
  422318:	push   es
  422319:	stc    
  42231a:	xchg   esp,eax
  42231b:	mov    al,ch
  42231d:	test   al,al
  42231f:	daa    
  422320:	popf   
  422321:	sbb    cl,BYTE PTR [ebx]
  422323:	rol    DWORD PTR cs:[edi],cl
  422326:	xchg   ebp,eax
  422327:	push   es
  422328:	jmp    0x4222bb
  42232a:	cmp    ecx,0x124533d
  422330:	mov    dl,BYTE PTR [esi+0x58e7b63]
  422336:	imul   edi,DWORD PTR [edi+ebx*4-0x40],0xffffffa5
  42233b:	lea    eax,[eax+0x2]
  42233e:	aas    
  42233f:	sub    al,cl
  422341:	mov    ecx,0x5d3452a0
  422346:	mov    DWORD PTR [ebx],edi
  422348:	push   ecx
  422349:	test   esi,ebx
  42234b:	and    al,0x28
  42234d:	popf   
  42234e:	gs mov bh,0xf7
  422351:	sub    dl,dl
  422353:	mov    WORD PTR [ebx+edi*4+0x2],ds
  422357:	jge    0x42230e
  422359:	add    bh,BYTE PTR [ebx]
  42235b:	ficom  DWORD PTR [edi-0x1e4f134d]
  422361:	sti    
  422362:	arpl   si,bx
  422364:	sub    ch,BYTE PTR [ecx]
  422366:	dec    ebp
  422367:	mul    DWORD PTR [ebx+ebp*8]
  42236a:	rol    edx,1
  42236c:	mov    bh,0x45
  42236e:	and    BYTE PTR [edi+0x2f4ddbf8],al
  422374:	mov    eax,0x94fe0946
  422379:	mov    BYTE PTR [ecx],bl
  42237b:	stos   DWORD PTR es:[edi],eax
  42237c:	inc    edx
  42237d:	fs dec eax
  42237f:	popf   
  422380:	mov    ecx,0x2129f26
  422385:	mov    es,WORD PTR [eax*2+0x3d2958f3]
  42238c:	add    DWORD PTR [edi+0x131daf2e],0x813c27f8
  422396:	inc    esi
  422397:	not    BYTE PTR ds:0xbc74a6d4
  42239d:	push   ds
  42239e:	or     ecx,DWORD PTR [eax+0x70]
  4223a1:	ds mov BYTE PTR cs:[ebx],0x17
  4223a6:	xor    dl,BYTE PTR [edi]
  4223a8:	call   0x77bdcdd2
  4223ad:	(bad)  
  4223af:	in     eax,dx
  4223b0:	lods   al,BYTE PTR ds:[esi]
  4223b1:	xor    al,0x1
  4223b3:	retf   
  4223b4:	push   ebp
  4223b5:	cmp    al,0x80
  4223b7:	mov    dh,0xcc
  4223b9:	jmp    0x4051:0xd75cd1a0
  4223c0:	in     eax,dx
  4223c1:	loope  0x4223c1
  4223c3:	sub    dl,BYTE PTR [eax+0x3]
  4223c6:	fucomip st,st(4)
  4223c8:	or     eax,ebx
  4223ca:	rcl    BYTE PTR [eax],0x5c
  4223cd:	(bad)
  4223d0:	dec    esi
  4223d1:	push   esp
  4223d2:	adc    al,0x5d
  4223d4:	add    BYTE PTR [ecx],al
  4223d6:	inc    ebp
  4223d7:	mov    edx,0x3a8dce3a
  4223dc:	jmp    0x4223ea
  4223de:	pusha  
  4223df:	or     esi,ebp
  4223e1:	push   esi
  4223e2:	or     DWORD PTR [ebx+0x1bd4f8b4],edi
  4223e8:	mov    bh,0x66
  4223ea:	sbb    BYTE PTR [esi-0x21],cl
  4223ed:	jp     0x422462
  4223ef:	les    edi,FWORD PTR [ebx+edx*4-0x2e]
  4223f3:	pop    ecx
  4223f4:	xlat   BYTE PTR ds:[ebx]
  4223f5:	in     eax,0xfc
  4223f7:	lahf   
  4223f8:	lea    edi,[ecx-0x5e145519]
  4223fe:	jle    0x4223db
  422400:	xchg   esi,eax
  422401:	mov    dh,0xab
  422403:	xor    eax,0x973845e5
  422408:	xor    esi,edx
  42240a:	and    cl,BYTE PTR [eax-0x338ef71]
  422410:	cmp    DWORD PTR [ebx],ecx
  422412:	retf   
  422413:	pop    esi
  422414:	lds    esp,FWORD PTR [ebp-0x6a]
  422417:	scas   al,BYTE PTR es:[edi]
  422418:	sbb    ah,dl
  42241a:	inc    eax
  42241b:	or     edx,0x6b451784
  422421:	mov    esp,0xc4afe16
  422426:	mov    ch,BYTE PTR fs:[edi-0x227ac2]
  42242d:	iret   
  42242e:	and    DWORD PTR [esi-0x4a],ebx
  422431:	inc    esp
  422432:	rcr    DWORD PTR [edx+0x18],1
  422435:	int    0xab
  422437:	xchg   edx,eax
  422438:	ficomp WORD PTR [edx]
  42243a:	and    al,0x96
  42243c:	mov    cl,0x7b
  42243e:	fstp   TBYTE PTR [ecx]
  422440:	sub    dl,BYTE PTR [edx-0x48]
  422443:	pop    edi
  422444:	rcl    cl,0x9a
  422447:	sbb    DWORD PTR [edx],ecx
  422449:	push   eax
  42244a:	sub    al,0x63
  42244c:	mov    al,0x75
  42244e:	neg    esi
  422450:	cmp    al,0x1e
  422452:	icebp  
  422453:	sub    al,0xfe
  422455:	jmp    0x15f6acb7
  42245a:	(bad)  
  42245b:	aam    0x2d
  42245d:	adc    eax,0x5839dafa
  422462:	scas   al,BYTE PTR es:[edi]
  422463:	xchg   esi,eax
  422464:	mov    ecx,DWORD PTR [ebp-0x3c75866a]
  42246a:	fwait
  42246b:	cmp    al,0xb7
  42246d:	shr    dh,0x56
  422470:	pop    ds
  422471:	add    cl,BYTE PTR [ebp-0x20]
  422474:	dec    esp
  422475:	mov    dh,0x92
  422477:	xchg   esi,edx
  422479:	das    
  42247a:	push   0xffffff82
  42247c:	pop    eax
  42247d:	or     DWORD PTR [edi+0x38],ebx
  422480:	js     0x422490
  422482:	dec    ebp
  422483:	mov    esi,0x450bdce4
  422488:	jnp    0x42246b
  42248a:	std    
  42248b:	lods   al,BYTE PTR ds:[esi]
  42248c:	popa   
  42248d:	psrlw  mm2,QWORD PTR [edx-0x2e]
  422491:	loop   0x4224ba
  422493:	xor    eax,0x2b7b5625
  422498:	popa   
  422499:	add    ebx,ebx
  42249b:	push   0x19
  42249d:	inc    eax
  42249e:	inc    edi
  42249f:	fwait
  4224a0:	pop    eax
  4224a1:	ja     0x4224ab
  4224a3:	(bad)  
  4224a4:	lods   al,BYTE PTR ds:[esi]
  4224a5:	push   esp
  4224a6:	out    0xf5,al
  4224a8:	add    cl,BYTE PTR [edi+0x3e]
  4224ab:	xor    eax,0x3a97c4da
  4224b0:	sub    eax,0x62dd6801
  4224b5:	jecxz  0x42251f
  4224b7:	xchg   esp,eax
  4224b8:	ins    BYTE PTR es:[edi],dx
  4224b9:	lods   al,BYTE PTR ds:[esi]
  4224ba:	test   edi,edx
  4224bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224bd:	imul   esi,DWORD PTR [eax],0x19
  4224c0:	bts    DWORD PTR [eax],edx
  4224c3:	mov    ebx,0x4de32183
  4224c8:	push   eax
  4224c9:	pop    eax
  4224ca:	popf   
  4224cb:	int3   
  4224cc:	push   ebp
  4224cd:	loope  0x422468
  4224cf:	mov    ebx,0x5f673efd
  4224d4:	adc    ecx,ecx
  4224d6:	scas   eax,DWORD PTR es:[edi]
  4224d7:	fdivr  QWORD PTR [eax]
  4224d9:	loopne 0x4224fe
  4224db:	nop
  4224dc:	sbb    eax,0x92144132
  4224e1:	jne    0x422470
  4224e3:	pop    es
  4224e4:	test   BYTE PTR [ecx+0x46],cl
  4224e7:	(bad)  [edx+0xcf0a83d]
  4224ed:	sbb    edi,DWORD PTR [eax]
  4224ef:	inc    ecx
  4224f0:	stos   BYTE PTR es:[edi],al
  4224f1:	idiv   DWORD PTR [ebx-0x3a]
  4224f4:	adc    esi,edi
  4224f6:	popa   
  4224f7:	sub    BYTE PTR [esi],dh
  4224f9:	ret    0xac36
  4224fc:	jge    0x422546
  4224fe:	daa    
  4224ff:	push   edi
  422500:	daa    
  422501:	pop    ss
  422502:	lds    ebx,FWORD PTR [edi+0x6]
  422505:	ret    
  422506:	(bad)
  422509:	jge    0x4224bf
  42250b:	sub    DWORD PTR [edi-0x148d2265],edx
  422511:	adc    al,0x84
  422513:	imul   esi,DWORD PTR [edx+ebx*2-0x72],0x1867612d
  42251b:	es jns 0x422509
  42251e:	lds    ebx,FWORD PTR [esi]
  422520:	cmp    al,0xa7
  422522:	mov    ah,0x81
  422524:	jno    0x4224c8
  422526:	stos   BYTE PTR es:[edi],al
  422527:	shl    ebp,0x15
  42252a:	pop    ss
  42252b:	push   0xfffffff7
  42252d:	cmp    ecx,ebp
  42252f:	push   esi
  422530:	pop    edx
  422531:	push   edx
  422532:	push   0x25
  422534:	mov    dh,0x11
  422536:	inc    edx
  422537:	mov    ecx,0x4b886691
  42253c:	sar    BYTE PTR [ebx-0x42],0x94
  422540:	and    cl,BYTE PTR [edx+0x4b0771a9]
  422546:	popa   
  422547:	jp     0x422539
  422549:	dec    ebp
  42254a:	adc    BYTE PTR [ebp+ebp*4+0x10],0x6c
  42254f:	dec    eax
  422550:	sub    ch,0xa6
  422553:	and    BYTE PTR [ecx-0x2298781c],ah
  422559:	mov    esi,0xe957370f
  42255e:	push   ecx
  42255f:	rcr    ah,0x4c
  422562:	and    eax,0x3d851210
  422567:	cli    
  422568:	int3   
  422569:	mov    eax,0x206b812e
  42256e:	mov    eax,ds:0x679e76d2
  422573:	sbb    DWORD PTR [esi-0x67],esp
  422576:	dec    ecx
  422577:	mov    ebx,0x7c84676
  42257c:	ins    BYTE PTR es:[edi],dx
  42257d:	inc    BYTE PTR [ebx]
  42257f:	sub    al,ah
  422581:	lea    edx,[ecx]
  422583:	ds popf 
  422585:	adc    BYTE PTR [ebx+eiz*1-0x3b],ch
  422589:	push   ss
  42258a:	xor    al,0xfd
  42258c:	push   ecx
  42258d:	test   eax,0xd695808b
  422592:	pop    es
  422593:	xchg   edi,eax
  422594:	and    eax,0x3c4ad02c
  422599:	push   edi
  42259a:	imul   BYTE PTR [edi+0x5e]
  42259d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42259e:	hlt    
  42259f:	js     0x42259a
  4225a1:	dec    eax
  4225a2:	sbb    al,0xaa
  4225a4:	xlat   BYTE PTR ds:[ebx]
  4225a5:	(bad)  
  4225a6:	int    0x2d
  4225a8:	pop    es
  4225a9:	push   ss
  4225aa:	mov    cl,0xf3
  4225ac:	repnz dec edx
  4225ae:	adc    dh,BYTE PTR [eax]
  4225b0:	sbb    bl,BYTE PTR [ecx-0x66b718f4]
  4225b6:	jns    0x42262f
  4225b8:	push   edi
  4225b9:	add    ah,BYTE PTR [edi+0x57]
  4225bc:	or     BYTE PTR [edi],0xf1
  4225bf:	popf   
  4225c0:	adc    esp,DWORD PTR [eax+0x48]
  4225c3:	dec    ebx
  4225c4:	cmp    DWORD PTR [edi+0x72b40d76],esp
  4225ca:	cmp    edi,ecx
  4225cc:	xchg   BYTE PTR [ebp-0x33],ch
  4225cf:	cmp    esp,DWORD PTR ds:0x8860
  4225d4:	loop   0x4225c3
  4225d6:	rol    BYTE PTR [ebp+0x3b],1
  4225d9:	jae    0x422622
  4225db:	fisttp QWORD PTR [edi]
  4225dd:	das    
  4225de:	push   esi
  4225df:	adc    BYTE PTR [eax+0x19721605],al
  4225e5:	in     al,0xb3
  4225e7:	cwde   
  4225e8:	fbstp  TBYTE PTR [esp+esi*4]
  4225eb:	dec    esi
  4225ec:	dec    edx
  4225ed:	aaa    
  4225ee:	jnp    0x422642
  4225f0:	(bad)  
  4225f1:	cs js  0x422576
  4225f4:	xor    DWORD PTR [edi+0x3ce18bcb],eax
  4225fa:	push   0xffffffa2
  4225fc:	inc    ebx
  4225fd:	clc    
  4225fe:	adc    dh,BYTE PTR [ebx-0x79]
  422601:	xchg   esp,eax
  422602:	push   ss
  422603:	inc    esi
  422604:	out    dx,al
  422605:	xor    DWORD PTR [si-0x161a],0xf
  42260b:	ret    0x597b
  42260e:	pop    es
  42260f:	pop    ebp
  422610:	loop   0x422650
  422612:	imul   edi,DWORD PTR [esi],0xc
  422615:	out    dx,al
  422616:	jo     0x42264f
  422618:	inc    esp
  422619:	push   0x79f090f
  42261e:	inc    ebp
  42261f:	dec    edi
  422620:	dec    edi
  422621:	stos   BYTE PTR es:[edi],al
  422622:	lds    eax,FWORD PTR [ebx+0x6a32b28f]
  422628:	jg     0x4225cb
  42262a:	stc    
  42262b:	fs push edx
  42262d:	gs push cs
  42262f:	or     edi,DWORD PTR [ebp-0x7babc4b4]
  422635:	outs   dx,BYTE PTR ds:[esi]
  422636:	shl    DWORD PTR [eax],1
  422638:	or     bh,dl
  42263a:	mov    edx,0x5cbbc067
  42263f:	ins    DWORD PTR es:[edi],dx
  422640:	bound  ecx,QWORD PTR [ebx-0x7b]
  422643:	outs   dx,BYTE PTR ds:[esi]
  422644:	repnz es dec edx
  422647:	jne    0x4225ec
  422649:	out    dx,eax
  42264a:	fldcw  WORD PTR [ecx-0x56c3a84f]
  422650:	mov    ecx,0x2996ebae
  422655:	pop    ds
  422656:	mov    ebx,0xbb876e51
  42265b:	mov    bh,ah
  42265d:	push   eax
  42265e:	jae    0x42264f
  422660:	loopne 0x4226c5
  422662:	sub    al,0x55
  422664:	jne    0x422645
  422666:	fxch   st(5)
  422668:	mov    eax,0x6be9df94
  42266d:	dec    edx
  42266e:	aam    0xf8
  422670:	scas   al,BYTE PTR es:[edi]
  422671:	out    dx,eax
  422672:	enter  0xc813,0xf
  422676:	xchg   ebx,eax
  422677:	retf   
  422678:	push   0x201d1f6b
  42267d:	xchg   DWORD PTR [edx],eax
  42267f:	xor    ebp,DWORD PTR [ebx*4+0x5d5bf6a9]
  422686:	lock cmp al,0xdb
  422689:	call   0xba0f:0x1cf5710f
  422690:	cmp    al,0x7e
  422692:	mov    dh,0x53
  422694:	or     al,0x50
  422696:	loopne 0x422667
  422698:	je     0x422694
  42269a:	sti    
  42269b:	mov    eax,0xad17f993
  4226a0:	jmp    0x37997d5e
  4226a5:	pop    ds
  4226a6:	jge    0x97a9dd01
  4226ac:	repz and eax,0x26397d5a
  4226b2:	add    eax,DWORD PTR [esi+0x875ce3d]
  4226b8:	pushf  
  4226b9:	sti    
  4226ba:	jnp    0x4226ab
  4226bc:	mov    bh,0xbe
  4226be:	mov    bl,0x9f
  4226c0:	repz xor DWORD PTR gs:[ebp-0x1b60fe10],0x52
  4226c9:	mov    eax,esp
  4226cb:	aam    0xa7
  4226cd:	mov    dl,0x6b
  4226cf:	pop    edi
  4226d0:	pop    eax
  4226d1:	dec    esi
  4226d2:	inc    ebx
  4226d3:	xchg   ebp,edx
  4226d5:	(bad)  
  4226d6:	rol    DWORD PTR [ebx-0x70],cl
  4226d9:	in     al,0x44
  4226db:	mov    ecx,0xf53344fd
  4226e0:	sbb    eax,0x662a1cbf
  4226e5:	(bad)  
  4226e6:	or     eax,0x2d
  4226e9:	cmp    ebp,DWORD PTR [ecx+0x29]
  4226ec:	adc    dl,bh
  4226ee:	out    dx,eax
  4226ef:	pop    ds
  4226f0:	adc    bh,bl
  4226f2:	lods   eax,DWORD PTR ds:[esi]
  4226f3:	shl    edi,cl
  4226f5:	and    ebx,DWORD PTR [esi]
  4226f7:	pop    ecx
  4226f8:	xor    BYTE PTR [ebx+0x37],ah
  4226fb:	mov    ds:0xda72b93e,eax
  422700:	loopne 0x4226a6
  422702:	pop    ebp
  422703:	mov    eax,0x52136f94
  422708:	dec    ecx
  422709:	fdiv   DWORD PTR [ebx+0x73]
  42270c:	mov    edi,0xa21434d6
  422711:	psubq  mm6,QWORD PTR [eax+0x40]
  422715:	aaa    
  422716:	(bad)  ds:[ebx]
  422719:	bswap  ebx
  42271b:	jmp    0x46b0a110
  422720:	adc    cl,BYTE PTR [edx]
  422722:	clc    
  422723:	ins    BYTE PTR es:[edi],dx
  422724:	shl    eax,cl
  422726:	jle    0x422759
  422728:	xchg   edx,eax
  422729:	dec    eax
  42272a:	sub    DWORD PTR [eax],esp
  42272c:	in     eax,dx
  42272d:	pop    ds
  42272e:	mov    edi,0xa19230d
  422733:	lahf   
  422734:	and    BYTE PTR [eax+0x4f95e493],0xb5
  42273b:	xor    al,0x16
  42273d:	jle    0x422742
  42273f:	pop    ds
  422740:	and    DWORD PTR [esi-0x5f3feb41],edi
  422746:	dec    eax
  422747:	and    BYTE PTR [edx-0x58],cl
  42274a:	pop    ebx
  42274b:	jno    0x4227b2
  42274d:	jmp    0x4cb48cc1
  422752:	loopne 0x42278f
  422754:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422755:	aas    
  422756:	aam    0xa9
  422758:	mov    ebp,0x73b88dff
  42275d:	dec    eax
  42275e:	xor    DWORD PTR [ebx-0x592967d7],edx
  422764:	mov    ds:0x340e01ba,eax
  422769:	call   0xc664ad04
  42276e:	in     eax,0xd
  422770:	dec    ecx
  422771:	inc    esi
  422772:	dec    ecx
  422773:	setp   BYTE PTR [eax]
  422776:	in     al,dx
  422777:	fist   WORD PTR [ecx]
  422779:	xor    eax,0x75f23c4a
  42277e:	and    BYTE PTR [eax],dl
  422780:	(bad)  
  422781:	jae    0x422755
  422783:	push   0xe3975fde
  422788:	pop    esi
  422789:	xlat   BYTE PTR ds:[ebx]
  42278a:	mov    edx,0xbb2153f9
  42278f:	(bad)  
  422790:	jmp    0x1b32:0xaad0acc9
  422797:	sbb    al,0x92
  422799:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42279a:	lahf   
  42279b:	xchg   ebp,eax
  42279c:	jl     0x4227d3
  42279e:	mov    bh,0x31
  4227a0:	out    dx,al
  4227a1:	and    bh,BYTE PTR [eax+0x537df240]
  4227a7:	pop    esi
  4227a8:	push   0x911c0c6f
  4227ad:	shr    bl,1
  4227af:	mov    ecx,0x84faa184
  4227b4:	xor    cl,0xea
  4227b7:	sbb    al,0xc7
  4227b9:	shr    DWORD PTR [esi-0x55],1
  4227bc:	or     bl,bh
  4227be:	push   ss
  4227bf:	jns    0x422777
  4227c1:	adc    ch,ch
  4227c3:	mov    al,ds:0x6e675265
  4227c8:	out    0x62,al
  4227ca:	loopne 0x4227e7
  4227cc:	mov    ch,0x26
  4227ce:	std    
  4227cf:	icebp  
  4227d0:	mov    al,ds:0xd49b940e
  4227d5:	int    0x78
  4227d7:	inc    esi
  4227d8:	push   esi
  4227d9:	(bad)  
  4227da:	jg     0x422773
  4227dc:	enter  0x634b,0x60
  4227e0:	mov    eax,ecx
  4227e2:	hlt    
  4227e3:	adc    DWORD PTR [edx],0xa59a39dc
  4227e9:	xchg   ecx,eax
  4227ea:	xor    eax,0xfa0e2eb4
  4227ef:	in     al,dx
  4227f0:	dec    eax
  4227f1:	pop    edi
  4227f2:	sub    BYTE PTR [edi],0xff
  4227f5:	aad    0x1b
  4227f7:	bound  ebx,QWORD PTR [ebp+0x17]
  4227fa:	outs   dx,BYTE PTR ds:[esi]
  4227fb:	icebp  
  4227fc:	fisttp WORD PTR [ebp+0x53]
  4227ff:	mov    dl,0xa0
  422801:	popf   
  422802:	sub    bh,dl
  422804:	xchg   edi,eax
  422805:	call   0x362e:0x8f6a4172
  42280c:	sbb    DWORD PTR [ebp-0x26],eax
  42280f:	fwait
  422810:	adc    DWORD PTR [ecx-0x29],eax
  422813:	fwait
  422814:	mov    al,0xd4
  422816:	mov    ah,0xf1
  422818:	inc    ebx
  422819:	push   ebx
  42281a:	push   edi
  42281b:	xchg   ecx,eax
  42281c:	xchg   ecx,eax
  42281d:	sub    BYTE PTR [ebx+0x64],0x45
  422821:	test   al,0xde
  422823:	popa   
  422824:	mov    ds:0x47051a3d,al
  422829:	or     al,0x22
  42282b:	shr    BYTE PTR [eax+0x32],cl
  42282e:	cdq    
  42282f:	es cmp eax,ebx
  422832:	jmp    DWORD PTR [ecx-0x291e5bbe]
  422838:	rol    esp,0x16
  42283b:	call   0xb898ece2
  422840:	jbe    0x42281d
  422842:	xor    DWORD PTR [eax-0x6f],ecx
  422845:	jmp    0x4227d9
  422847:	pop    ss
  422848:	sbb    al,0xe6
  42284a:	mov    ebp,0xca4b4abd
  42284f:	inc    ebp
  422850:	or     BYTE PTR [ebx+0x2d],bl
  422853:	mov    esi,0x316e3687
  422858:	ins    DWORD PTR es:[edi],dx
  422859:	mov    ds:0x59a7bd99,eax
  42285e:	test   eax,0x198c95fe
  422863:	addr16 add ch,ah
  422866:	dec    ebx
  422867:	sbb    al,0x69
  422869:	adc    DWORD PTR [edx-0x6a],edx
  42286c:	ds sahf 
  42286e:	xor    BYTE PTR [ebx],0x60
  422871:	ret    
  422872:	test   eax,0x360d8b8d
  422877:	cli    
  422878:	in     al,dx
  422879:	push   ebp
  42287a:	xor    eax,0xea180c04
  42287f:	and    DWORD PTR [ebx-0x476b0e87],esp
  422885:	mov    edx,ds
  422887:	(bad)
  42288a:	mov    ebx,0xd8719609
  42288f:	mov    ds:0xb9d05806,al
  422894:	ss push esp
  422896:	cwde   
  422897:	imul   ebp,DWORD PTR [esi+0x48e9971a],0xd3818e40
  4228a1:	fld    st(3)
  4228a3:	add    eax,0xa0fe9699
  4228a8:	pop    esi
  4228a9:	fist   DWORD PTR [ebp+0x54fbbe74]
  4228af:	mov    ebp,0xcff29669
  4228b4:	jp     0x422909
  4228b6:	pop    ebx
  4228b7:	lea    esp,[edx-0x16]
  4228ba:	retf   0x8df9
  4228bd:	es mov esi,0xe1989946
  4228c3:	pop    ebx
  4228c4:	scas   al,BYTE PTR es:[edi]
  4228c5:	gs inc edx
  4228c7:	add    edx,DWORD PTR [edi]
  4228c9:	mov    dh,0x3b
  4228cb:	pop    ds
  4228cc:	retf   0x718
  4228cf:	or     esi,DWORD PTR [edx+edx*2-0x16f32904]
  4228d6:	mov    ebp,0x9d0ec156
  4228db:	shr    DWORD PTR [ecx-0x2a],cl
  4228de:	sub    eax,0xe8255066
  4228e3:	pop    edx
  4228e4:	sub    DWORD PTR [ecx],eax
  4228e6:	dec    esi
  4228e7:	push   ebx
  4228e8:	pop    ds
  4228e9:	mov    dh,0x4
  4228eb:	es fcmovu st,st(6)
  4228ee:	lock mov al,BYTE PTR [edi+0x20]
  4228f2:	out    dx,al
  4228f3:	out    0x5b,eax
  4228f5:	xchg   ebx,eax
  4228f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228f7:	push   0x74c48535
  4228fc:	(bad)  
  4228fd:	fadd   QWORD PTR [edx-0x3f780e38]
  422903:	push   esp
  422904:	cmp    DWORD PTR [eax],ecx
  422906:	xor    BYTE PTR [esi+0x23],cl
  422909:	out    0x8f,al
  42290b:	add    cl,BYTE PTR [esi+ebx*4]
  42290e:	jae    0x422940
  422910:	and    eax,0xffffff97
  422913:	loopne 0x4228f2
  422915:	data16 sahf 
  422917:	jl     0xb872b8a6
  42291d:	dec    edx
  42291e:	pushf  
  42291f:	xchg   ecx,eax
  422920:	repz sahf 
  422922:	pop    es
  422923:	leave  
  422924:	cwde   
  422925:	lock neg DWORD PTR [ebx-0x10]
  422929:	pop    ecx
  42292a:	and    DWORD PTR [edx+0x5146e301],edx
  422930:	out    0x7d,eax
  422932:	mov    bl,0x53
  422934:	add    bl,ah
  422936:	ret    0x9f2c
  422939:	and    al,dl
  42293b:	arpl   WORD PTR [ebp-0x46],ax
  42293e:	inc    ebp
  42293f:	xchg   esi,eax
  422940:	js     0x42295b
  422942:	xor    ebx,DWORD PTR [edx+0x2c]
  422945:	add    al,0x75
  422947:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422948:	mul    BYTE PTR [edx]
  42294a:	cld    
  42294b:	in     al,0xdf
  42294d:	mov    esp,0xef0c2848
  422952:	or     dl,0x71
  422955:	repz inc edx
  422957:	ja     0x4229ce
  422959:	add    al,0x33
  42295b:	rol    BYTE PTR [ebx+0x10c210c4],0x0
  422962:	nop
  422963:	nop
  422964:	nop
  422965:	nop
  422966:	nop
  422967:	nop
  422968:	nop
  422969:	nop
  42296a:	nop
  42296b:	nop
  42296c:	nop
  42296d:	nop
  42296e:	nop
  42296f:	nop
  422970:	cmp    DWORD PTR ds:0x45cabc,0x1
  422977:	jne    0x42297e
  422979:	call   0x422ebc
  42297e:	push   DWORD PTR [esp+0x4]
  422982:	call   0x422d45
  422987:	push   0xff
  42298c:	call   DWORD PTR ds:0x45c1c0
  422992:	pop    ecx
  422993:	pop    ecx
  422994:	ret    
  422995:	cmp    DWORD PTR ds:0x45cabc,0x1
  42299c:	jne    0x4229a3
  42299e:	call   0x422ebc
  4229a3:	push   DWORD PTR [esp+0x4]
  4229a7:	call   0x422d45
  4229ac:	push   0xff
  4229b1:	call   0x422b8b
  4229b6:	pop    ecx
  4229b7:	pop    ecx
  4229b8:	ret    
  4229b9:	push   0x60
  4229bb:	push   0x428118
  4229c0:	call   0x4238a8
  4229c5:	mov    edi,0x94
  4229ca:	mov    eax,edi
  4229cc:	call   0x423900
  4229d1:	mov    DWORD PTR [ebp-0x18],esp
  4229d4:	mov    esi,esp
  4229d6:	mov    DWORD PTR [esi],edi
  4229d8:	push   esi
  4229d9:	call   DWORD PTR ds:0x428028
  4229df:	mov    ecx,DWORD PTR [esi+0x10]
  4229e2:	mov    DWORD PTR ds:0x45cac4,ecx
  4229e8:	mov    eax,DWORD PTR [esi+0x4]
  4229eb:	mov    ds:0x45cad0,eax
  4229f0:	mov    edx,DWORD PTR [esi+0x8]
  4229f3:	mov    DWORD PTR ds:0x45cad4,edx
  4229f9:	mov    esi,DWORD PTR [esi+0xc]
  4229fc:	and    esi,0x7fff
  422a02:	mov    DWORD PTR ds:0x45cac8,esi
  422a08:	cmp    ecx,0x2
  422a0b:	je     0x422a19
  422a0d:	or     esi,0x8000
  422a13:	mov    DWORD PTR ds:0x45cac8,esi
  422a19:	shl    eax,0x8
  422a1c:	add    eax,edx
  422a1e:	mov    ds:0x45cacc,eax
  422a23:	xor    esi,esi
  422a25:	push   esi
  422a26:	mov    edi,DWORD PTR ds:0x428018
  422a2c:	call   edi
  422a2e:	cmp    WORD PTR [eax],0x5a4d
  422a33:	jne    0x422a54
  422a35:	mov    ecx,DWORD PTR [eax+0x3c]
  422a38:	add    ecx,eax
  422a3a:	cmp    DWORD PTR [ecx],0x4550
  422a40:	jne    0x422a54
  422a42:	movzx  eax,WORD PTR [ecx+0x18]
  422a46:	cmp    eax,0x10b
  422a4b:	je     0x422a6c
  422a4d:	cmp    eax,0x20b
  422a52:	je     0x422a59
  422a54:	mov    DWORD PTR [ebp-0x1c],esi
  422a57:	jmp    0x422a80
  422a59:	cmp    DWORD PTR [ecx+0x84],0xe
  422a60:	jbe    0x422a54
  422a62:	xor    eax,eax
  422a64:	cmp    DWORD PTR [ecx+0xf8],esi
  422a6a:	jmp    0x422a7a
  422a6c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a70:	jbe    0x422a54
  422a72:	xor    eax,eax
  422a74:	cmp    DWORD PTR [ecx+0xe8],esi
  422a7a:	setne  al
  422a7d:	mov    DWORD PTR [ebp-0x1c],eax
  422a80:	push   0x1
  422a82:	call   0x423857
  422a87:	pop    ecx
  422a88:	test   eax,eax
  422a8a:	jne    0x422a94
  422a8c:	push   0x1c
  422a8e:	call   0x422995
  422a93:	pop    ecx
  422a94:	call   0x4237ce
  422a99:	test   eax,eax
  422a9b:	jne    0x422aa5
  422a9d:	push   0x10
  422a9f:	call   0x422995
  422aa4:	pop    ecx
  422aa5:	call   0x4236b7
  422aaa:	mov    DWORD PTR [ebp-0x4],esi
  422aad:	call   0x4234b9
  422ab2:	test   eax,eax
  422ab4:	jge    0x422abe
  422ab6:	push   0x1b
  422ab8:	call   0x422970
  422abd:	pop    ecx
  422abe:	call   DWORD PTR ds:0x428024
  422ac4:	mov    ds:0x45d274,eax
  422ac9:	call   0x423397
  422ace:	mov    ds:0x45cab4,eax
  422ad3:	call   0x4232f5
  422ad8:	test   eax,eax
  422ada:	jge    0x422ae4
  422adc:	push   0x8
  422ade:	call   0x422970
  422ae3:	pop    ecx
  422ae4:	call   0x4230c2
  422ae9:	test   eax,eax
  422aeb:	jge    0x422af5
  422aed:	push   0x9
  422aef:	call   0x422970
  422af4:	pop    ecx
  422af5:	call   0x422bcd
  422afa:	mov    DWORD PTR [ebp-0x20],eax
  422afd:	cmp    eax,esi
  422aff:	je     0x422b08
  422b01:	push   eax
  422b02:	call   0x422970
  422b07:	pop    ecx
  422b08:	mov    DWORD PTR [ebp-0x38],esi
  422b0b:	lea    eax,[ebp-0x64]
  422b0e:	push   eax
  422b0f:	call   DWORD PTR ds:0x428020
  422b15:	call   0x423059
  422b1a:	mov    DWORD PTR [ebp-0x68],eax
  422b1d:	test   BYTE PTR [ebp-0x38],0x1
  422b21:	je     0x422b29
  422b23:	movzx  eax,WORD PTR [ebp-0x34]
  422b27:	jmp    0x422b2c
  422b29:	push   0xa
  422b2b:	pop    eax
  422b2c:	push   eax
  422b2d:	push   DWORD PTR [ebp-0x68]
  422b30:	push   esi
  422b31:	push   esi
  422b32:	call   edi
  422b34:	push   eax
  422b35:	call   0x421800
  422b3a:	mov    edi,eax
  422b3c:	mov    DWORD PTR [ebp-0x6c],edi
  422b3f:	cmp    DWORD PTR [ebp-0x1c],esi
  422b42:	jne    0x422b4a
  422b44:	push   edi
  422b45:	call   0x422d05
  422b4a:	call   0x422d27
  422b4f:	jmp    0x422b7c
  422b51:	mov    eax,DWORD PTR [ebp-0x14]
  422b54:	mov    ecx,DWORD PTR [eax]
  422b56:	mov    ecx,DWORD PTR [ecx]
  422b58:	mov    DWORD PTR [ebp-0x70],ecx
  422b5b:	push   eax
  422b5c:	push   ecx
  422b5d:	call   0x422ef5
  422b62:	pop    ecx
  422b63:	pop    ecx
  422b64:	ret    
  422b65:	mov    esp,DWORD PTR [ebp-0x18]
  422b68:	mov    edi,DWORD PTR [ebp-0x70]
  422b6b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b6f:	jne    0x422b77
  422b71:	push   edi
  422b72:	call   0x422d16
  422b77:	call   0x422d36
  422b7c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b80:	mov    eax,edi
  422b82:	lea    esp,[ebp-0x7c]
  422b85:	call   0x4238e3
  422b8a:	ret    
  422b8b:	push   0x428134
  422b90:	call   DWORD PTR ds:0x428018
  422b96:	test   eax,eax
  422b98:	je     0x422bb0
  422b9a:	push   0x428124
  422b9f:	push   eax
  422ba0:	call   DWORD PTR ds:0x42801c
  422ba6:	test   eax,eax
  422ba8:	je     0x422bb0
  422baa:	push   DWORD PTR [esp+0x4]
  422bae:	call   eax
  422bb0:	push   DWORD PTR [esp+0x4]
  422bb4:	call   DWORD PTR ds:0x42802c
  422bba:	int3   
  422bbb:	push   0x8
  422bbd:	call   0x423a6f
  422bc2:	pop    ecx
  422bc3:	ret    
  422bc4:	push   0x8
  422bc6:	call   0x4239db
  422bcb:	pop    ecx
  422bcc:	ret    
  422bcd:	mov    eax,ds:0x45d270
  422bd2:	test   eax,eax
  422bd4:	je     0x422bd8
  422bd6:	call   eax
  422bd8:	push   esi
  422bd9:	push   edi
  422bda:	mov    ecx,0x42a00c
  422bdf:	mov    edi,0x42a018
  422be4:	xor    eax,eax
  422be6:	cmp    ecx,edi
  422be8:	mov    esi,ecx
  422bea:	jae    0x422c03
  422bec:	test   eax,eax
  422bee:	jne    0x422c2f
  422bf0:	mov    ecx,DWORD PTR [esi]
  422bf2:	test   ecx,ecx
  422bf4:	je     0x422bf8
  422bf6:	call   ecx
  422bf8:	add    esi,0x4
  422bfb:	cmp    esi,edi
  422bfd:	jb     0x422bec
  422bff:	test   eax,eax
  422c01:	jne    0x422c2f
  422c03:	push   0x4236fb
  422c08:	call   0x423b80
  422c0d:	mov    esi,0x42a000
  422c12:	mov    eax,esi
  422c14:	mov    edi,0x42a008
  422c19:	cmp    eax,edi
  422c1b:	pop    ecx
  422c1c:	jae    0x422c2d
  422c1e:	mov    eax,DWORD PTR [esi]
  422c20:	test   eax,eax
  422c22:	je     0x422c26
  422c24:	call   eax
  422c26:	add    esi,0x4
  422c29:	cmp    esi,edi
  422c2b:	jb     0x422c1e
  422c2d:	xor    eax,eax
  422c2f:	pop    edi
  422c30:	pop    esi
  422c31:	ret    
  422c32:	push   ebp
  422c33:	mov    ebp,esp
  422c35:	push   esi
  422c36:	push   edi
  422c37:	push   0x8
  422c39:	call   0x423a6f
  422c3e:	xor    esi,esi
  422c40:	inc    esi
  422c41:	cmp    DWORD PTR ds:0x45cb04,esi
  422c47:	pop    ecx
  422c48:	jne    0x422c5a
  422c4a:	push   DWORD PTR [ebp+0x8]
  422c4d:	call   DWORD PTR ds:0x428034
  422c53:	push   eax
  422c54:	call   DWORD PTR ds:0x428030
  422c5a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c5e:	mov    al,BYTE PTR [ebp+0x10]
  422c61:	mov    DWORD PTR ds:0x45cb00,esi
  422c67:	mov    ds:0x45cafc,al
  422c6c:	jne    0x422cc0
  422c6e:	mov    ecx,DWORD PTR ds:0x45d268
  422c74:	test   ecx,ecx
  422c76:	je     0x422ca1
  422c78:	mov    eax,ds:0x45d264
  422c7d:	sub    eax,0x4
  422c80:	cmp    eax,ecx
  422c82:	jmp    0x422c9a
  422c84:	mov    eax,DWORD PTR [eax]
  422c86:	test   eax,eax
  422c88:	je     0x422c8c
  422c8a:	call   eax
  422c8c:	mov    eax,ds:0x45d264
  422c91:	sub    eax,0x4
  422c94:	cmp    eax,DWORD PTR ds:0x45d268
  422c9a:	mov    ds:0x45d264,eax
  422c9f:	jae    0x422c84
  422ca1:	mov    eax,0x42a01c
  422ca6:	mov    esi,0x42a020
  422cab:	cmp    eax,esi
  422cad:	mov    edi,eax
  422caf:	jae    0x422cc0
  422cb1:	mov    eax,DWORD PTR [edi]
  422cb3:	test   eax,eax
  422cb5:	je     0x422cb9
  422cb7:	call   eax
  422cb9:	add    edi,0x4
  422cbc:	cmp    edi,esi
  422cbe:	jb     0x422cb1
  422cc0:	mov    eax,0x42a024
  422cc5:	mov    esi,0x42a028
  422cca:	cmp    eax,esi
  422ccc:	mov    edi,eax
  422cce:	jae    0x422cdf
  422cd0:	mov    eax,DWORD PTR [edi]
  422cd2:	test   eax,eax
  422cd4:	je     0x422cd8
  422cd6:	call   eax
  422cd8:	add    edi,0x4
  422cdb:	cmp    edi,esi
  422cdd:	jb     0x422cd0
  422cdf:	cmp    DWORD PTR [ebp+0x10],0x0
  422ce3:	pop    edi
  422ce4:	pop    esi
  422ce5:	je     0x422cf0
  422ce7:	push   0x8
  422ce9:	call   0x4239db
  422cee:	jmp    0x422d02
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cfd:	call   0x422b8b
  422d02:	pop    ecx
  422d03:	pop    ebp
  422d04:	ret    
  422d05:	push   0x0
  422d07:	push   0x0
  422d09:	push   DWORD PTR [esp+0xc]
  422d0d:	call   0x422c32
  422d12:	add    esp,0xc
  422d15:	ret    
  422d16:	push   0x0
  422d18:	push   0x1
  422d1a:	push   DWORD PTR [esp+0xc]
  422d1e:	call   0x422c32
  422d23:	add    esp,0xc
  422d26:	ret    
  422d27:	push   0x1
  422d29:	push   0x0
  422d2b:	push   0x0
  422d2d:	call   0x422c32
  422d32:	add    esp,0xc
  422d35:	ret    
  422d36:	push   0x1
  422d38:	push   0x1
  422d3a:	push   0x0
  422d3c:	call   0x422c32
  422d41:	add    esp,0xc
  422d44:	ret    
  422d45:	push   ebp
  422d46:	mov    ebp,esp
  422d48:	sub    esp,0x10c
  422d4e:	mov    eax,ds:0x45c430
  422d53:	xor    eax,DWORD PTR [ebp+0x4]
  422d56:	mov    ecx,DWORD PTR [ebp+0x8]
  422d59:	push   ebx
  422d5a:	push   esi
  422d5b:	mov    DWORD PTR [ebp-0x4],eax
  422d5e:	xor    edx,edx
  422d60:	push   edi
  422d61:	xor    eax,eax
  422d63:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d6a:	je     0x422d72
  422d6c:	inc    eax
  422d6d:	cmp    eax,0x12
  422d70:	jb     0x422d63
  422d72:	mov    esi,eax
  422d74:	shl    esi,0x3
  422d77:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d7d:	jne    0x422ea6
  422d83:	mov    eax,ds:0x45cabc
  422d88:	cmp    eax,0x1
  422d8b:	je     0x422e81
  422d91:	cmp    eax,edx
  422d93:	jne    0x422da2
  422d95:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d9c:	je     0x422e81
  422da2:	cmp    ecx,0xfc
  422da8:	je     0x422ea6
  422dae:	push   0x104
  422db3:	lea    eax,[ebp-0x10c]
  422db9:	push   eax
  422dba:	push   edx
  422dbb:	mov    BYTE PTR [ebp-0x8],dl
  422dbe:	call   DWORD PTR ds:0x428040
  422dc4:	test   eax,eax
  422dc6:	jne    0x422ddb
  422dc8:	lea    eax,[ebp-0x10c]
  422dce:	push   0x42848c
  422dd3:	push   eax
  422dd4:	call   0x423c90
  422dd9:	pop    ecx
  422dda:	pop    ecx
  422ddb:	lea    eax,[ebp-0x10c]
  422de1:	push   eax
  422de2:	lea    edi,[ebp-0x10c]
  422de8:	call   0x423ec0
  422ded:	inc    eax
  422dee:	cmp    eax,0x3c
  422df1:	pop    ecx
  422df2:	jbe    0x422e1d
  422df4:	lea    eax,[ebp-0x10c]
  422dfa:	push   eax
  422dfb:	call   0x423ec0
  422e00:	mov    edi,eax
  422e02:	lea    eax,[ebp-0x10c]
  422e08:	sub    eax,0x3b
  422e0b:	push   0x3
  422e0d:	add    edi,eax
  422e0f:	push   0x428488
  422e14:	push   edi
  422e15:	call   0x423d90
  422e1a:	add    esp,0x10
  422e1d:	push   edi
  422e1e:	call   0x423ec0
  422e23:	push   DWORD PTR [esi+0x45c1cc]
  422e29:	mov    ebx,eax
  422e2b:	call   0x423ec0
  422e30:	lea    eax,[ebx+eax*1+0x1c]
  422e34:	pop    ecx
  422e35:	add    eax,0x3
  422e38:	pop    ecx
  422e39:	and    eax,0xfffffffc
  422e3c:	call   0x423900
  422e41:	mov    ebx,esp
  422e43:	push   0x42846c
  422e48:	push   ebx
  422e49:	call   0x423c90
  422e4e:	push   edi
  422e4f:	push   ebx
  422e50:	call   0x423ca0
  422e55:	push   0x428468
  422e5a:	push   ebx
  422e5b:	call   0x423ca0
  422e60:	push   DWORD PTR [esi+0x45c1cc]
  422e66:	push   ebx
  422e67:	call   0x423ca0
  422e6c:	push   0x12010
  422e71:	push   0x428440
  422e76:	push   ebx
  422e77:	call   0x423b92
  422e7c:	add    esp,0x2c
  422e7f:	jmp    0x422ea6
  422e81:	push   edx
  422e82:	lea    eax,[ebp+0x8]
  422e85:	push   eax
  422e86:	lea    esi,[esi+0x45c1cc]
  422e8c:	push   DWORD PTR [esi]
  422e8e:	call   0x423ec0
  422e93:	pop    ecx
  422e94:	push   eax
  422e95:	push   DWORD PTR [esi]
  422e97:	push   0xfffffff4
  422e99:	call   DWORD PTR ds:0x42803c
  422e9f:	push   eax
  422ea0:	call   DWORD PTR ds:0x428038
  422ea6:	lea    esp,[ebp-0x118]
  422eac:	mov    ecx,DWORD PTR [ebp-0x4]
  422eaf:	xor    ecx,DWORD PTR [ebp+0x4]
  422eb2:	call   0x423f7c
  422eb7:	pop    edi
  422eb8:	pop    esi
  422eb9:	pop    ebx
  422eba:	leave  
  422ebb:	ret    
  422ebc:	mov    eax,ds:0x45cabc
  422ec1:	cmp    eax,0x1
  422ec4:	je     0x422ed3
  422ec6:	test   eax,eax
  422ec8:	jne    0x422ef4
  422eca:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422ed1:	jne    0x422ef4
  422ed3:	push   0xfc
  422ed8:	call   0x422d45
  422edd:	mov    eax,ds:0x45cb08
  422ee2:	test   eax,eax
  422ee4:	pop    ecx
  422ee5:	je     0x422ee9
  422ee7:	call   eax
  422ee9:	push   0xff
  422eee:	call   0x422d45
  422ef3:	pop    ecx
  422ef4:	ret    
  422ef5:	push   ebp
  422ef6:	mov    ebp,esp
  422ef8:	push   ecx
  422ef9:	push   ebx
  422efa:	push   esi
  422efb:	push   edi
  422efc:	call   0x42375d
  422f01:	mov    edi,DWORD PTR [ebp+0x8]
  422f04:	mov    esi,eax
  422f06:	mov    edx,DWORD PTR [esi+0x54]
  422f09:	mov    eax,ds:0x45c2dc
  422f0e:	mov    ecx,edx
  422f10:	cmp    DWORD PTR [ecx],edi
  422f12:	je     0x422f21
  422f14:	lea    ebx,[eax+eax*2]
  422f17:	add    ecx,0xc
  422f1a:	lea    ebx,[edx+ebx*4]
  422f1d:	cmp    ecx,ebx
  422f1f:	jb     0x422f10
  422f21:	lea    eax,[eax+eax*2]
  422f24:	lea    eax,[edx+eax*4]
  422f27:	cmp    ecx,eax
  422f29:	jae    0x422f2f
  422f2b:	cmp    DWORD PTR [ecx],edi
  422f2d:	je     0x422f31
  422f2f:	xor    ecx,ecx
  422f31:	test   ecx,ecx
  422f33:	je     0x42304b
  422f39:	mov    ebx,DWORD PTR [ecx+0x8]
  422f3c:	test   ebx,ebx
  422f3e:	mov    DWORD PTR [ebp+0x8],ebx
  422f41:	je     0x42304b
  422f47:	cmp    ebx,0x5
  422f4a:	jne    0x422f58
  422f4c:	and    DWORD PTR [ecx+0x8],0x0
  422f50:	xor    eax,eax
  422f52:	inc    eax
  422f53:	jmp    0x423054
  422f58:	cmp    ebx,0x1
  422f5b:	je     0x423046
  422f61:	mov    eax,DWORD PTR [esi+0x58]
  422f64:	mov    DWORD PTR [ebp-0x4],eax
  422f67:	mov    eax,DWORD PTR [ebp+0xc]
  422f6a:	mov    DWORD PTR [esi+0x58],eax
  422f6d:	mov    eax,DWORD PTR [ecx+0x4]
  422f70:	cmp    eax,0x8
  422f73:	jne    0x423038
  422f79:	mov    edx,DWORD PTR ds:0x45c2d0
  422f7f:	mov    eax,ds:0x45c2d4
  422f84:	add    eax,edx
  422f86:	cmp    edx,eax
  422f88:	jge    0x422fb1
  422f8a:	lea    eax,[edx+edx*2]
  422f8d:	shl    eax,0x2
  422f90:	mov    edi,DWORD PTR [esi+0x54]
  422f93:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f98:	mov    edi,DWORD PTR ds:0x45c2d0
  422f9e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422fa4:	inc    edx
  422fa5:	add    ebx,edi
  422fa7:	add    eax,0xc
  422faa:	cmp    edx,ebx
  422fac:	jl     0x422f90
  422fae:	mov    ebx,DWORD PTR [ebp+0x8]
  422fb1:	mov    ecx,DWORD PTR [ecx]
  422fb3:	cmp    ecx,0xc000008e
  422fb9:	mov    edi,DWORD PTR [esi+0x5c]
  422fbc:	jne    0x422fc7
  422fbe:	mov    DWORD PTR [esi+0x5c],0x83
  422fc5:	jmp    0x42302b
  422fc7:	cmp    ecx,0xc0000090
  422fcd:	jne    0x422fd8
  422fcf:	mov    DWORD PTR [esi+0x5c],0x81
  422fd6:	jmp    0x42302b
  422fd8:	cmp    ecx,0xc0000091
  422fde:	jne    0x422fe9
  422fe0:	mov    DWORD PTR [esi+0x5c],0x84
  422fe7:	jmp    0x42302b
  422fe9:	cmp    ecx,0xc0000093
  422fef:	jne    0x422ffa
  422ff1:	mov    DWORD PTR [esi+0x5c],0x85
  422ff8:	jmp    0x42302b
  422ffa:	cmp    ecx,0xc000008d
  423000:	jne    0x42300b
  423002:	mov    DWORD PTR [esi+0x5c],0x82
  423009:	jmp    0x42302b
  42300b:	cmp    ecx,0xc000008f
  423011:	jne    0x42301c
  423013:	mov    DWORD PTR [esi+0x5c],0x86
  42301a:	jmp    0x42302b
  42301c:	cmp    ecx,0xc0000092
  423022:	jne    0x42302b
  423024:	mov    DWORD PTR [esi+0x5c],0x8a
  42302b:	push   DWORD PTR [esi+0x5c]
  42302e:	push   0x8
  423030:	call   ebx
  423032:	pop    ecx
  423033:	mov    DWORD PTR [esi+0x5c],edi
  423036:	jmp    0x42303f
  423038:	and    DWORD PTR [ecx+0x8],0x0
  42303c:	push   eax
  42303d:	call   ebx
  42303f:	mov    eax,DWORD PTR [ebp-0x4]
  423042:	pop    ecx
  423043:	mov    DWORD PTR [esi+0x58],eax
  423046:	or     eax,0xffffffff
  423049:	jmp    0x423054
  42304b:	push   DWORD PTR [ebp+0xc]
  42304e:	call   DWORD PTR ds:0x428044
  423054:	pop    edi
  423055:	pop    esi
  423056:	pop    ebx
  423057:	leave  
  423058:	ret    
  423059:	cmp    DWORD PTR ds:0x45d26c,0x0
  423060:	jne    0x423067
  423062:	call   0x42449c
  423067:	push   esi
  423068:	mov    esi,DWORD PTR ds:0x45d274
  42306e:	test   esi,esi
  423070:	jne    0x423079
  423072:	mov    esi,0x4284a3
  423077:	jmp    0x4230be
  423079:	mov    al,BYTE PTR [esi]
  42307b:	cmp    al,0x22
  42307d:	jne    0x4230a7
  42307f:	inc    esi
  423080:	mov    al,BYTE PTR [esi]
  423082:	cmp    al,0x22
  423084:	je     0x4230b7
  423086:	test   al,al
  423088:	je     0x4230a0
  42308a:	movzx  eax,al
  42308d:	push   eax
  42308e:	call   0x423fbb
  423093:	test   eax,eax
  423095:	pop    ecx
  423096:	je     0x423099
  423098:	inc    esi
  423099:	inc    esi
  42309a:	mov    al,BYTE PTR [esi]
  42309c:	cmp    al,0x22
  42309e:	jne    0x423086
  4230a0:	cmp    BYTE PTR [esi],0x22
  4230a3:	jne    0x4230b8
  4230a5:	jmp    0x4230b7
  4230a7:	cmp    al,0x20
  4230a9:	jbe    0x4230b8
  4230ab:	inc    esi
  4230ac:	cmp    BYTE PTR [esi],0x20
  4230af:	ja     0x4230ab
  4230b1:	jmp    0x4230b8
  4230b3:	cmp    al,0x20
  4230b5:	ja     0x4230be
  4230b7:	inc    esi
  4230b8:	mov    al,BYTE PTR [esi]
  4230ba:	test   al,al
  4230bc:	jne    0x4230b3
  4230be:	mov    eax,esi
  4230c0:	pop    esi
  4230c1:	ret    
  4230c2:	push   ebx
  4230c3:	xor    ebx,ebx
  4230c5:	cmp    DWORD PTR ds:0x45d26c,ebx
  4230cb:	push   esi
  4230cc:	push   edi
  4230cd:	jne    0x4230d4
  4230cf:	call   0x42449c
  4230d4:	mov    esi,DWORD PTR ds:0x45cab4
  4230da:	xor    edi,edi
  4230dc:	cmp    esi,ebx
  4230de:	jne    0x4230f2
  4230e0:	jmp    0x423112
  4230e2:	cmp    al,0x3d
  4230e4:	je     0x4230e7
  4230e6:	inc    edi
  4230e7:	push   esi
  4230e8:	call   0x423ec0
  4230ed:	pop    ecx
  4230ee:	lea    esi,[esi+eax*1+0x1]
  4230f2:	mov    al,BYTE PTR [esi]
  4230f4:	cmp    al,bl
  4230f6:	jne    0x4230e2
  4230f8:	lea    eax,[edi*4+0x4]
  4230ff:	push   eax
  423100:	call   0x4245d2
  423105:	mov    edi,eax
  423107:	cmp    edi,ebx
  423109:	pop    ecx
  42310a:	mov    DWORD PTR ds:0x45cae4,edi
  423110:	jne    0x423117
  423112:	or     eax,0xffffffff
  423115:	jmp    0x42316f
  423117:	mov    esi,DWORD PTR ds:0x45cab4
  42311d:	push   ebp
  42311e:	jmp    0x42314a
  423120:	push   esi
  423121:	call   0x423ec0
  423126:	mov    ebp,eax
  423128:	inc    ebp
  423129:	cmp    BYTE PTR [esi],0x3d
  42312c:	pop    ecx
  42312d:	je     0x423148
  42312f:	push   ebp
  423130:	call   0x4245d2
  423135:	cmp    eax,ebx
  423137:	pop    ecx
  423138:	mov    DWORD PTR [edi],eax
  42313a:	je     0x423173
  42313c:	push   esi
  42313d:	push   eax
  42313e:	call   0x423c90
  423143:	pop    ecx
  423144:	pop    ecx
  423145:	add    edi,0x4
  423148:	add    esi,ebp
  42314a:	cmp    BYTE PTR [esi],bl
  42314c:	jne    0x423120
  42314e:	push   DWORD PTR ds:0x45cab4
  423154:	call   0x4244ba
  423159:	mov    DWORD PTR ds:0x45cab4,ebx
  42315f:	mov    DWORD PTR [edi],ebx
  423161:	mov    DWORD PTR ds:0x45d260,0x1
  42316b:	xor    eax,eax
  42316d:	pop    ecx
  42316e:	pop    ebp
  42316f:	pop    edi
  423170:	pop    esi
  423171:	pop    ebx
  423172:	ret    
  423173:	push   DWORD PTR ds:0x45cae4
  423179:	call   0x4244ba
  42317e:	mov    DWORD PTR ds:0x45cae4,ebx
  423184:	or     eax,0xffffffff
  423187:	jmp    0x42316d
  423189:	push   ebp
  42318a:	mov    ebp,esp
  42318c:	push   ecx
  42318d:	push   ebx
  42318e:	mov    ebx,DWORD PTR [ebp+0xc]
  423191:	xor    edx,edx
  423193:	cmp    DWORD PTR [ebp+0x8],edx
  423196:	push   edi
  423197:	mov    DWORD PTR [esi],edx
  423199:	mov    edi,ecx
  42319b:	mov    DWORD PTR [ebx],0x1
  4231a1:	je     0x4231ac
  4231a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4231a6:	add    DWORD PTR [ebp+0x8],0x4
  4231aa:	mov    DWORD PTR [ecx],edi
  4231ac:	cmp    BYTE PTR [eax],0x22
  4231af:	jne    0x4231bf
  4231b1:	xor    ecx,ecx
  4231b3:	test   edx,edx
  4231b5:	sete   cl
  4231b8:	inc    eax
  4231b9:	mov    edx,ecx
  4231bb:	mov    cl,0x22
  4231bd:	jmp    0x4231ec
  4231bf:	inc    DWORD PTR [esi]
  4231c1:	test   edi,edi
  4231c3:	je     0x4231ca
  4231c5:	mov    cl,BYTE PTR [eax]
  4231c7:	mov    BYTE PTR [edi],cl
  4231c9:	inc    edi
  4231ca:	mov    cl,BYTE PTR [eax]
  4231cc:	movzx  ebx,cl
  4231cf:	inc    eax
  4231d0:	test   BYTE PTR [ebx+0x45cf21],0x4
  4231d7:	je     0x4231e5
  4231d9:	inc    DWORD PTR [esi]
  4231db:	test   edi,edi
  4231dd:	je     0x4231e4
  4231df:	mov    bl,BYTE PTR [eax]
  4231e1:	mov    BYTE PTR [edi],bl
  4231e3:	inc    edi
  4231e4:	inc    eax
  4231e5:	test   cl,cl
  4231e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4231ea:	je     0x42321e
  4231ec:	test   edx,edx
  4231ee:	jne    0x4231ac
  4231f0:	cmp    cl,0x20
  4231f3:	je     0x4231fa
  4231f5:	cmp    cl,0x9
  4231f8:	jne    0x4231ac
  4231fa:	test   edi,edi
  4231fc:	je     0x423202
  4231fe:	and    BYTE PTR [edi-0x1],0x0
  423202:	and    DWORD PTR [ebp-0x4],0x0
  423206:	cmp    BYTE PTR [eax],0x0
  423209:	je     0x4232e5
  42320f:	mov    cl,BYTE PTR [eax]
  423211:	cmp    cl,0x20
  423214:	je     0x42321b
  423216:	cmp    cl,0x9
  423219:	jne    0x423221
  42321b:	inc    eax
  42321c:	jmp    0x42320f
  42321e:	dec    eax
  42321f:	jmp    0x423202
  423221:	cmp    BYTE PTR [eax],0x0
  423224:	je     0x4232e5
  42322a:	cmp    DWORD PTR [ebp+0x8],0x0
  42322e:	je     0x423239
  423230:	mov    ecx,DWORD PTR [ebp+0x8]
  423233:	add    DWORD PTR [ebp+0x8],0x4
  423237:	mov    DWORD PTR [ecx],edi
  423239:	inc    DWORD PTR [ebx]
  42323b:	xor    ebx,ebx
  42323d:	inc    ebx
  42323e:	xor    edx,edx
  423240:	jmp    0x423244
  423242:	inc    eax
  423243:	inc    edx
  423244:	cmp    BYTE PTR [eax],0x5c
  423247:	je     0x423242
  423249:	cmp    BYTE PTR [eax],0x22
  42324c:	jne    0x423274
  42324e:	test   dl,0x1
  423251:	jne    0x423272
  423253:	cmp    DWORD PTR [ebp-0x4],0x0
  423257:	je     0x423265
  423259:	lea    ecx,[eax+0x1]
  42325c:	cmp    BYTE PTR [ecx],0x22
  42325f:	jne    0x423265
  423261:	mov    eax,ecx
  423263:	jmp    0x423267
  423265:	xor    ebx,ebx
  423267:	xor    ecx,ecx
  423269:	cmp    DWORD PTR [ebp-0x4],ecx
  42326c:	sete   cl
  42326f:	mov    DWORD PTR [ebp-0x4],ecx
  423272:	shr    edx,1
  423274:	test   edx,edx
  423276:	je     0x423285
  423278:	test   edi,edi
  42327a:	je     0x423280
  42327c:	mov    BYTE PTR [edi],0x5c
  42327f:	inc    edi
  423280:	inc    DWORD PTR [esi]
  423282:	dec    edx
  423283:	jne    0x423278
  423285:	mov    cl,BYTE PTR [eax]
  423287:	test   cl,cl
  423289:	je     0x4232d3
  42328b:	cmp    DWORD PTR [ebp-0x4],0x0
  42328f:	jne    0x42329b
  423291:	cmp    cl,0x20
  423294:	je     0x4232d3
  423296:	cmp    cl,0x9
  423299:	je     0x4232d3
  42329b:	test   ebx,ebx
  42329d:	je     0x4232cd
  42329f:	test   edi,edi
  4232a1:	je     0x4232bc
  4232a3:	movzx  edx,cl
  4232a6:	test   BYTE PTR [edx+0x45cf21],0x4
  4232ad:	je     0x4232b5
  4232af:	mov    BYTE PTR [edi],cl
  4232b1:	inc    edi
  4232b2:	inc    eax
  4232b3:	inc    DWORD PTR [esi]
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	mov    BYTE PTR [edi],cl
  4232b9:	inc    edi
  4232ba:	jmp    0x4232cb
  4232bc:	movzx  ecx,cl
  4232bf:	test   BYTE PTR [ecx+0x45cf21],0x4
  4232c6:	je     0x4232cb
  4232c8:	inc    eax
  4232c9:	inc    DWORD PTR [esi]
  4232cb:	inc    DWORD PTR [esi]
  4232cd:	inc    eax
  4232ce:	jmp    0x42323b
  4232d3:	test   edi,edi
  4232d5:	je     0x4232db
  4232d7:	and    BYTE PTR [edi],0x0
  4232da:	inc    edi
  4232db:	inc    DWORD PTR [esi]
  4232dd:	mov    ebx,DWORD PTR [ebp+0xc]
  4232e0:	jmp    0x423206
  4232e5:	mov    eax,DWORD PTR [ebp+0x8]
  4232e8:	test   eax,eax
  4232ea:	je     0x4232ef
  4232ec:	and    DWORD PTR [eax],0x0
  4232ef:	inc    DWORD PTR [ebx]
  4232f1:	pop    edi
  4232f2:	pop    ebx
  4232f3:	leave  
  4232f4:	ret    
  4232f5:	push   ebp
  4232f6:	mov    ebp,esp
  4232f8:	push   ecx
  4232f9:	push   ecx
  4232fa:	push   ebx
  4232fb:	push   esi
  4232fc:	push   edi
  4232fd:	xor    edi,edi
  4232ff:	cmp    DWORD PTR ds:0x45d26c,edi
  423305:	jne    0x42330c
  423307:	call   0x42449c
  42330c:	and    BYTE PTR ds:0x45cc14,0x0
  423313:	push   0x104
  423318:	mov    esi,0x45cb10
  42331d:	push   esi
  42331e:	push   edi
  42331f:	call   DWORD PTR ds:0x428040
  423325:	mov    eax,ds:0x45d274
  42332a:	cmp    eax,edi
  42332c:	mov    DWORD PTR ds:0x45caf4,esi
  423332:	je     0x42333b
  423334:	cmp    BYTE PTR [eax],0x0
  423337:	mov    ebx,eax
  423339:	jne    0x42333d
  42333b:	mov    ebx,esi
  42333d:	lea    eax,[ebp-0x4]
  423340:	push   eax
  423341:	push   edi
  423342:	lea    esi,[ebp-0x8]
  423345:	xor    ecx,ecx
  423347:	mov    eax,ebx
  423349:	call   0x423189
  42334e:	mov    esi,DWORD PTR [ebp-0x4]
  423351:	mov    eax,DWORD PTR [ebp-0x8]
  423354:	shl    esi,0x2
  423357:	add    eax,esi
  423359:	push   eax
  42335a:	call   0x4245d2
  42335f:	mov    edi,eax
  423361:	add    esp,0xc
  423364:	test   edi,edi
  423366:	jne    0x42336d
  423368:	or     eax,0xffffffff
  42336b:	jmp    0x423392
  42336d:	lea    eax,[ebp-0x4]
  423370:	push   eax
  423371:	lea    ecx,[esi+edi*1]
  423374:	push   edi
  423375:	lea    esi,[ebp-0x8]
  423378:	mov    eax,ebx
  42337a:	call   0x423189
  42337f:	mov    eax,DWORD PTR [ebp-0x4]
  423382:	dec    eax
  423383:	pop    ecx
  423384:	mov    ds:0x45cad8,eax
  423389:	pop    ecx
  42338a:	mov    DWORD PTR ds:0x45cadc,edi
  423390:	xor    eax,eax
  423392:	pop    edi
  423393:	pop    esi
  423394:	pop    ebx
  423395:	leave  
  423396:	ret    
  423397:	push   ecx
  423398:	push   ecx
  423399:	mov    eax,ds:0x45cc18
  42339e:	push   ebx
  42339f:	push   ebp
  4233a0:	push   esi
  4233a1:	push   edi
  4233a2:	mov    edi,DWORD PTR ds:0x428058
  4233a8:	xor    ebx,ebx
  4233aa:	xor    esi,esi
  4233ac:	cmp    eax,ebx
  4233ae:	push   0x2
  4233b0:	pop    ebp
  4233b1:	jne    0x4233e0
  4233b3:	call   edi
  4233b5:	mov    esi,eax
  4233b7:	cmp    esi,ebx
  4233b9:	je     0x4233c7
  4233bb:	mov    DWORD PTR ds:0x45cc18,0x1
  4233c5:	jmp    0x4233e5
  4233c7:	call   DWORD PTR ds:0x428014
  4233cd:	cmp    eax,0x78
  4233d0:	jne    0x4233db
  4233d2:	mov    eax,ebp
  4233d4:	mov    ds:0x45cc18,eax
  4233d9:	jmp    0x4233e0
  4233db:	mov    eax,ds:0x45cc18
  4233e0:	cmp    eax,0x1
  4233e3:	jne    0x423462
  4233e5:	cmp    esi,ebx
  4233e7:	jne    0x4233f1
  4233e9:	call   edi
  4233eb:	mov    esi,eax
  4233ed:	cmp    esi,ebx
  4233ef:	je     0x42346a
  4233f1:	cmp    WORD PTR [esi],bx
  4233f4:	mov    eax,esi
  4233f6:	je     0x423406
  4233f8:	add    eax,ebp
  4233fa:	cmp    WORD PTR [eax],bx
  4233fd:	jne    0x4233f8
  4233ff:	add    eax,ebp
  423401:	cmp    WORD PTR [eax],bx
  423404:	jne    0x4233f8
  423406:	mov    edi,DWORD PTR ds:0x428054
  42340c:	push   ebx
  42340d:	push   ebx
  42340e:	push   ebx
  42340f:	sub    eax,esi
  423411:	push   ebx
  423412:	sar    eax,1
  423414:	inc    eax
  423415:	push   eax
  423416:	push   esi
  423417:	push   ebx
  423418:	push   ebx
  423419:	mov    DWORD PTR [esp+0x34],eax
  42341d:	call   edi
  42341f:	mov    ebp,eax
  423421:	cmp    ebp,ebx
  423423:	je     0x423457
  423425:	push   ebp
  423426:	call   0x4245d2
  42342b:	cmp    eax,ebx
  42342d:	pop    ecx
  42342e:	mov    DWORD PTR [esp+0x10],eax
  423432:	je     0x423457
  423434:	push   ebx
  423435:	push   ebx
  423436:	push   ebp
  423437:	push   eax
  423438:	push   DWORD PTR [esp+0x24]
  42343c:	push   esi
  42343d:	push   ebx
  42343e:	push   ebx
  42343f:	call   edi
  423441:	test   eax,eax
  423443:	jne    0x423453
  423445:	push   DWORD PTR [esp+0x10]
  423449:	call   0x4244ba
  42344e:	pop    ecx
  42344f:	mov    DWORD PTR [esp+0x10],ebx
  423453:	mov    ebx,DWORD PTR [esp+0x10]
  423457:	push   esi
  423458:	call   DWORD PTR ds:0x428050
  42345e:	mov    eax,ebx
  423460:	jmp    0x4234b2
  423462:	cmp    eax,ebp
  423464:	je     0x42346e
  423466:	cmp    eax,ebx
  423468:	je     0x42346e
  42346a:	xor    eax,eax
  42346c:	jmp    0x4234b2
  42346e:	call   DWORD PTR ds:0x42804c
  423474:	mov    esi,eax
  423476:	cmp    esi,ebx
  423478:	je     0x42346a
  42347a:	cmp    BYTE PTR [esi],bl
  42347c:	je     0x423488
  42347e:	inc    eax
  42347f:	cmp    BYTE PTR [eax],bl
  423481:	jne    0x42347e
  423483:	inc    eax
  423484:	cmp    BYTE PTR [eax],bl
  423486:	jne    0x42347e
  423488:	sub    eax,esi
  42348a:	inc    eax
  42348b:	mov    ebp,eax
  42348d:	push   ebp
  42348e:	call   0x4245d2
  423493:	mov    edi,eax
  423495:	cmp    edi,ebx
  423497:	pop    ecx
  423498:	jne    0x42349e
  42349a:	xor    edi,edi
  42349c:	jmp    0x4234a9
  42349e:	push   ebp
  42349f:	push   esi
  4234a0:	push   edi
  4234a1:	call   0x4245f0
  4234a6:	add    esp,0xc
  4234a9:	push   esi
  4234aa:	call   DWORD PTR ds:0x428048
  4234b0:	mov    eax,edi
  4234b2:	pop    edi
  4234b3:	pop    esi
  4234b4:	pop    ebp
  4234b5:	pop    ebx
  4234b6:	pop    ecx
  4234b7:	pop    ecx
  4234b8:	ret    
  4234b9:	sub    esp,0x48
  4234bc:	push   ebx
  4234bd:	mov    ebx,0x480
  4234c2:	push   ebx
  4234c3:	call   0x4245d2
  4234c8:	test   eax,eax
  4234ca:	pop    ecx
  4234cb:	jne    0x4234d5
  4234cd:	or     eax,0xffffffff
  4234d0:	jmp    0x4236b2
  4234d5:	mov    ds:0x45d160,eax
  4234da:	mov    DWORD PTR ds:0x45d148,0x20
  4234e4:	lea    ecx,[eax+0x480]
  4234ea:	jmp    0x42350a
  4234ec:	and    BYTE PTR [eax+0x4],0x0
  4234f0:	or     DWORD PTR [eax],0xffffffff
  4234f3:	and    DWORD PTR [eax+0x8],0x0
  4234f7:	mov    BYTE PTR [eax+0x5],0xa
  4234fb:	mov    ecx,DWORD PTR ds:0x45d160
  423501:	add    eax,0x24
  423504:	add    ecx,0x480
  42350a:	cmp    eax,ecx
  42350c:	jb     0x4234ec
  42350e:	push   ebp
  42350f:	push   esi
  423510:	push   edi
  423511:	lea    eax,[esp+0x14]
  423515:	push   eax
  423516:	call   DWORD PTR ds:0x428020
  42351c:	cmp    WORD PTR [esp+0x46],0x0
  423522:	je     0x423611
  423528:	mov    eax,DWORD PTR [esp+0x48]
  42352c:	test   eax,eax
  42352e:	je     0x423611
  423534:	mov    edi,DWORD PTR [eax]
  423536:	lea    ebp,[eax+0x4]
  423539:	lea    eax,[edi+ebp*1]
  42353c:	mov    DWORD PTR [esp+0x10],eax
  423540:	mov    eax,0x800
  423545:	cmp    edi,eax
  423547:	jl     0x42354b
  423549:	mov    edi,eax
  42354b:	cmp    DWORD PTR ds:0x45d148,edi
  423551:	jge    0x4235a1
  423553:	mov    esi,0x45d164
  423558:	push   ebx
  423559:	call   0x4245d2
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	je     0x42359b
  423563:	add    DWORD PTR ds:0x45d148,0x20
  42356a:	mov    DWORD PTR [esi],eax
  42356c:	lea    ecx,[eax+0x480]
  423572:	jmp    0x42358a
  423574:	and    BYTE PTR [eax+0x4],0x0
  423578:	or     DWORD PTR [eax],0xffffffff
  42357b:	and    DWORD PTR [eax+0x8],0x0
  42357f:	mov    BYTE PTR [eax+0x5],0xa
  423583:	mov    ecx,DWORD PTR [esi]
  423585:	add    eax,0x24
  423588:	add    ecx,ebx
  42358a:	cmp    eax,ecx
  42358c:	jb     0x423574
  42358e:	add    esi,0x4
  423591:	cmp    DWORD PTR ds:0x45d148,edi
  423597:	jl     0x423558
  423599:	jmp    0x4235a1
  42359b:	mov    edi,DWORD PTR ds:0x45d148
  4235a1:	xor    ebx,ebx
  4235a3:	test   edi,edi
  4235a5:	jle    0x423611
  4235a7:	mov    eax,DWORD PTR [esp+0x10]
  4235ab:	mov    eax,DWORD PTR [eax]
  4235ad:	cmp    eax,0xffffffff
  4235b0:	je     0x423606
  4235b2:	mov    cl,BYTE PTR [ebp+0x0]
  4235b5:	test   cl,0x1
  4235b8:	je     0x423606
  4235ba:	test   cl,0x8
  4235bd:	jne    0x4235ca
  4235bf:	push   eax
  4235c0:	call   DWORD PTR ds:0x428060
  4235c6:	test   eax,eax
  4235c8:	je     0x423606
  4235ca:	mov    ecx,ebx
  4235cc:	mov    eax,ebx
  4235ce:	and    eax,0x1f
  4235d1:	lea    eax,[eax+eax*8]
  4235d4:	sar    ecx,0x5
  4235d7:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  4235de:	lea    esi,[ecx+eax*4]
  4235e1:	mov    eax,DWORD PTR [esp+0x10]
  4235e5:	mov    eax,DWORD PTR [eax]
  4235e7:	mov    DWORD PTR [esi],eax
  4235e9:	mov    al,BYTE PTR [ebp+0x0]
  4235ec:	mov    BYTE PTR [esi+0x4],al
  4235ef:	lea    eax,[esi+0xc]
  4235f2:	push   0xfa0
  4235f7:	push   eax
  4235f8:	call   0x42493d
  4235fd:	test   eax,eax
  4235ff:	pop    ecx
  423600:	pop    ecx
  423601:	je     0x423631
  423603:	inc    DWORD PTR [esi+0x8]
  423606:	add    DWORD PTR [esp+0x10],0x4
  42360b:	inc    ebx
  42360c:	inc    ebp
  42360d:	cmp    ebx,edi
  42360f:	jl     0x4235a7
  423611:	xor    ebx,ebx
  423613:	mov    ecx,DWORD PTR ds:0x45d160
  423619:	lea    eax,[ebx+ebx*8]
  42361c:	lea    esi,[ecx+eax*4]
  42361f:	cmp    DWORD PTR [esi],0xffffffff
  423622:	jne    0x423693
  423624:	test   ebx,ebx
  423626:	mov    BYTE PTR [esi+0x4],0x81
  42362a:	jne    0x423636
  42362c:	push   0xfffffff6
  42362e:	pop    eax
  42362f:	jmp    0x423640
  423631:	or     eax,0xffffffff
  423634:	jmp    0x4236af
  423636:	mov    eax,ebx
  423638:	dec    eax
  423639:	neg    eax
  42363b:	sbb    eax,eax
  42363d:	add    eax,0xfffffff5
  423640:	push   eax
  423641:	call   DWORD PTR ds:0x42803c
  423647:	mov    edi,eax
  423649:	cmp    edi,0xffffffff
  42364c:	je     0x42368d
  42364e:	push   edi
  42364f:	call   DWORD PTR ds:0x428060
  423655:	test   eax,eax
  423657:	je     0x42368d
  423659:	and    eax,0xff
  42365e:	cmp    eax,0x2
  423661:	mov    DWORD PTR [esi],edi
  423663:	jne    0x42366b
  423665:	or     BYTE PTR [esi+0x4],0x40
  423669:	jmp    0x423674
  42366b:	cmp    eax,0x3
  42366e:	jne    0x423674
  423670:	or     BYTE PTR [esi+0x4],0x8
  423674:	lea    eax,[esi+0xc]
  423677:	push   0xfa0
  42367c:	push   eax
  42367d:	call   0x42493d
  423682:	test   eax,eax
  423684:	pop    ecx
  423685:	pop    ecx
  423686:	je     0x423631
  423688:	inc    DWORD PTR [esi+0x8]
  42368b:	jmp    0x423697
  42368d:	or     BYTE PTR [esi+0x4],0x40
  423691:	jmp    0x423697
  423693:	or     BYTE PTR [esi+0x4],0x80
  423697:	inc    ebx
  423698:	cmp    ebx,0x3
  42369b:	jl     0x423613
  4236a1:	push   DWORD PTR ds:0x45d148
  4236a7:	call   DWORD PTR ds:0x42805c
  4236ad:	xor    eax,eax
  4236af:	pop    edi
  4236b0:	pop    esi
  4236b1:	pop    ebp
  4236b2:	pop    ebx
  4236b3:	add    esp,0x48
  4236b6:	ret    
  4236b7:	push   0xc
  4236b9:	push   0x4284a8
  4236be:	call   0x4238a8
  4236c3:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236ca:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236d1:	jae    0x4236f5
  4236d3:	and    DWORD PTR [ebp-0x4],0x0
  4236d7:	mov    eax,DWORD PTR [ebp-0x1c]
  4236da:	mov    eax,DWORD PTR [eax]
  4236dc:	test   eax,eax
  4236de:	je     0x4236eb
  4236e0:	call   eax
  4236e2:	jmp    0x4236eb
  4236e4:	xor    eax,eax
  4236e6:	inc    eax
  4236e7:	ret    
  4236e8:	mov    esp,DWORD PTR [ebp-0x18]
  4236eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236ef:	add    DWORD PTR [ebp-0x1c],0x4
  4236f3:	jmp    0x4236ca
  4236f5:	call   0x4238e3
  4236fa:	ret    
  4236fb:	push   0xc
  4236fd:	push   0x4284b8
  423702:	call   0x4238a8
  423707:	mov    DWORD PTR [ebp-0x1c],0x428f08
  42370e:	cmp    DWORD PTR [ebp-0x1c],0x428f08
  423715:	jae    0x423739
  423717:	and    DWORD PTR [ebp-0x4],0x0
  42371b:	mov    eax,DWORD PTR [ebp-0x1c]
  42371e:	mov    eax,DWORD PTR [eax]
  423720:	test   eax,eax
  423722:	je     0x42372f
  423724:	call   eax
  423726:	jmp    0x42372f
  423728:	xor    eax,eax
  42372a:	inc    eax
  42372b:	ret    
  42372c:	mov    esp,DWORD PTR [ebp-0x18]
  42372f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423733:	add    DWORD PTR [ebp-0x1c],0x4
  423737:	jmp    0x42370e
  423739:	call   0x4238e3
  42373e:	ret    
  42373f:	call   0x423986
  423744:	mov    eax,ds:0x45c304
  423749:	cmp    eax,0xffffffff
  42374c:	je     0x42375c
  42374e:	push   eax
  42374f:	call   DWORD PTR ds:0x428068
  423755:	or     DWORD PTR ds:0x45c304,0xffffffff
  42375c:	ret    
  42375d:	push   ebx
  42375e:	push   esi
  42375f:	call   DWORD PTR ds:0x428014
  423765:	push   DWORD PTR ds:0x45c304
  42376b:	mov    ebx,eax
  42376d:	call   DWORD PTR ds:0x428078
  423773:	mov    esi,eax
  423775:	test   esi,esi
  423777:	jne    0x4237c2
  423779:	push   0x88
  42377e:	push   0x1
  423780:	call   0x4249c8
  423785:	mov    esi,eax
  423787:	test   esi,esi
  423789:	pop    ecx
  42378a:	pop    ecx
  42378b:	je     0x4237ba
  42378d:	push   esi
  42378e:	push   DWORD PTR ds:0x45c304
  423794:	call   DWORD PTR ds:0x428074
  42379a:	test   eax,eax
  42379c:	je     0x4237ba
  42379e:	mov    DWORD PTR [esi+0x54],0x45c258
  4237a5:	mov    DWORD PTR [esi+0x14],0x1
  4237ac:	call   DWORD PTR ds:0x428070
  4237b2:	or     DWORD PTR [esi+0x4],0xffffffff
  4237b6:	mov    DWORD PTR [esi],eax
  4237b8:	jmp    0x4237c2
  4237ba:	push   0x10
  4237bc:	call   0x422970
  4237c1:	pop    ecx
  4237c2:	push   ebx
  4237c3:	call   DWORD PTR ds:0x42806c
  4237c9:	mov    eax,esi
  4237cb:	pop    esi
  4237cc:	pop    ebx
  4237cd:	ret    
  4237ce:	call   0x42393d
  4237d3:	test   eax,eax
  4237d5:	je     0x4237e7
  4237d7:	call   DWORD PTR ds:0x42807c
  4237dd:	cmp    eax,0xffffffff
  4237e0:	mov    ds:0x45c304,eax
  4237e5:	jne    0x4237ef
  4237e7:	call   0x42373f
  4237ec:	xor    eax,eax
  4237ee:	ret    
  4237ef:	push   esi
  4237f0:	push   0x88
  4237f5:	push   0x1
  4237f7:	call   0x4249c8
  4237fc:	mov    esi,eax
  4237fe:	test   esi,esi
  423800:	pop    ecx
  423801:	pop    ecx
  423802:	je     0x423834
  423804:	push   esi
  423805:	push   DWORD PTR ds:0x45c304
  42380b:	call   DWORD PTR ds:0x428074
  423811:	test   eax,eax
  423813:	je     0x423834
  423815:	mov    DWORD PTR [esi+0x54],0x45c258
  42381c:	mov    DWORD PTR [esi+0x14],0x1
  423823:	call   DWORD PTR ds:0x428070
  423829:	or     DWORD PTR [esi+0x4],0xffffffff
  42382d:	mov    DWORD PTR [esi],eax
  42382f:	xor    eax,eax
  423831:	inc    eax
  423832:	pop    esi
  423833:	ret    
  423834:	call   0x42373f
  423839:	xor    eax,eax
  42383b:	pop    esi
  42383c:	ret    
  42383d:	cmp    DWORD PTR ds:0x45cac4,0x2
  423844:	jne    0x423853
  423846:	cmp    DWORD PTR ds:0x45cad0,0x5
  42384d:	jb     0x423853
  42384f:	xor    eax,eax
  423851:	inc    eax
  423852:	ret    
  423853:	push   0x3
  423855:	pop    eax
  423856:	ret    
  423857:	xor    eax,eax
  423859:	cmp    DWORD PTR [esp+0x4],eax
  42385d:	push   0x0
  42385f:	sete   al
  423862:	push   0x1000
  423867:	push   eax
  423868:	call   DWORD PTR ds:0x428084
  42386e:	test   eax,eax
  423870:	mov    ds:0x45d140,eax
  423875:	je     0x4238a1
  423877:	call   0x42383d
  42387c:	cmp    eax,0x3
  42387f:	mov    ds:0x45d144,eax
  423884:	jne    0x4238a4
  423886:	push   0x3f8
  42388b:	call   0x424c4a
  423890:	test   eax,eax
  423892:	pop    ecx
  423893:	jne    0x4238a4
  423895:	push   DWORD PTR ds:0x45d140
  42389b:	call   DWORD PTR ds:0x428080
  4238a1:	xor    eax,eax
  4238a3:	ret    
  4238a4:	xor    eax,eax
  4238a6:	inc    eax
  4238a7:	ret    
  4238a8:	push   0x425778
  4238ad:	mov    eax,fs:0x0
  4238b3:	push   eax
  4238b4:	mov    eax,DWORD PTR [esp+0x10]
  4238b8:	mov    DWORD PTR [esp+0x10],ebp
  4238bc:	lea    ebp,[esp+0x10]
  4238c0:	sub    esp,eax
  4238c2:	push   ebx
  4238c3:	push   esi
  4238c4:	push   edi
  4238c5:	mov    eax,DWORD PTR [ebp-0x8]
  4238c8:	mov    DWORD PTR [ebp-0x18],esp
  4238cb:	push   eax
  4238cc:	mov    eax,DWORD PTR [ebp-0x4]
  4238cf:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4238d6:	mov    DWORD PTR [ebp-0x8],eax
  4238d9:	lea    eax,[ebp-0x10]
  4238dc:	mov    fs:0x0,eax
  4238e2:	ret    
  4238e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4238e6:	mov    DWORD PTR fs:0x0,ecx
  4238ed:	pop    ecx
  4238ee:	pop    edi
  4238ef:	pop    esi
  4238f0:	pop    ebx
  4238f1:	leave  
  4238f2:	push   ecx
  4238f3:	ret    
  4238f4:	int3   
  4238f5:	int3   
  4238f6:	int3   
  4238f7:	int3   
  4238f8:	int3   
  4238f9:	int3   
  4238fa:	int3   
  4238fb:	int3   
  4238fc:	int3   
  4238fd:	int3   
  4238fe:	int3   
  4238ff:	int3   
  423900:	cmp    eax,0x1000
  423905:	jae    0x423915
  423907:	neg    eax
  423909:	add    eax,esp
  42390b:	add    eax,0x4
  42390e:	test   DWORD PTR [eax],eax
  423910:	xchg   esp,eax
  423911:	mov    eax,DWORD PTR [eax]
  423913:	push   eax
  423914:	ret    
  423915:	push   ecx
  423916:	lea    ecx,[esp+0x8]
  42391a:	sub    ecx,0x1000
  423920:	sub    eax,0x1000
  423925:	test   DWORD PTR [ecx],eax
  423927:	cmp    eax,0x1000
  42392c:	jae    0x42391a
  42392e:	sub    ecx,eax
  423930:	mov    eax,esp
  423932:	test   DWORD PTR [ecx],eax
  423934:	mov    esp,ecx
  423936:	mov    ecx,DWORD PTR [eax]
  423938:	mov    eax,DWORD PTR [eax+0x4]
  42393b:	push   eax
  42393c:	ret    
  42393d:	push   esi
  42393e:	push   edi
  42393f:	xor    esi,esi
  423941:	mov    edi,0x45cc20
  423946:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  42394e:	jne    0x42396e
  423950:	lea    eax,[esi*8+0x45c310]
  423957:	mov    DWORD PTR [eax],edi
  423959:	push   0xfa0
  42395e:	push   DWORD PTR [eax]
  423960:	add    edi,0x18
  423963:	call   0x42493d
  423968:	test   eax,eax
  42396a:	pop    ecx
  42396b:	pop    ecx
  42396c:	je     0x42397a
  42396e:	inc    esi
  42396f:	cmp    esi,0x24
  423972:	jl     0x423946
  423974:	xor    eax,eax
  423976:	inc    eax
  423977:	pop    edi
  423978:	pop    esi
  423979:	ret    
  42397a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423982:	xor    eax,eax
  423984:	jmp    0x423977
  423986:	push   ebx
  423987:	mov    ebx,DWORD PTR ds:0x428064
  42398d:	push   esi
  42398e:	mov    esi,0x45c310
  423993:	push   edi
  423994:	mov    edi,DWORD PTR [esi]
  423996:	test   edi,edi
  423998:	je     0x4239ad
  42399a:	cmp    DWORD PTR [esi+0x4],0x1
  42399e:	je     0x4239ad
  4239a0:	push   edi
  4239a1:	call   ebx
  4239a3:	push   edi
  4239a4:	call   0x4244ba
  4239a9:	and    DWORD PTR [esi],0x0
  4239ac:	pop    ecx
  4239ad:	add    esi,0x8
  4239b0:	cmp    esi,0x45c430
  4239b6:	jl     0x423994
  4239b8:	mov    esi,0x45c310
  4239bd:	pop    edi
  4239be:	mov    eax,DWORD PTR [esi]
  4239c0:	test   eax,eax
  4239c2:	je     0x4239cd
  4239c4:	cmp    DWORD PTR [esi+0x4],0x1
  4239c8:	jne    0x4239cd
  4239ca:	push   eax
  4239cb:	call   ebx
  4239cd:	add    esi,0x8
  4239d0:	cmp    esi,0x45c430
  4239d6:	jl     0x4239be
  4239d8:	pop    esi
  4239d9:	pop    ebx
  4239da:	ret    
  4239db:	push   ebp
  4239dc:	mov    ebp,esp
  4239de:	mov    eax,DWORD PTR [ebp+0x8]
  4239e1:	push   DWORD PTR [eax*8+0x45c310]
  4239e8:	call   DWORD PTR ds:0x428090
  4239ee:	pop    ebp
  4239ef:	ret    
  4239f0:	push   ebp
  4239f1:	mov    ebp,esp
  4239f3:	push   esi
  4239f4:	mov    esi,DWORD PTR [ebp+0x8]
  4239f7:	lea    esi,[esi*8+0x45c310]
  4239fe:	cmp    DWORD PTR [esi],0x0
  423a01:	je     0x423a08
  423a03:	xor    eax,eax
  423a05:	inc    eax
  423a06:	jmp    0x423a6c
  423a08:	push   edi
  423a09:	push   0x18
  423a0b:	call   0x4245d2
  423a10:	mov    edi,eax
  423a12:	test   edi,edi
  423a14:	pop    ecx
  423a15:	jne    0x423a26
  423a17:	call   0x425850
  423a1c:	mov    DWORD PTR [eax],0xc
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a6b
  423a26:	push   0xa
  423a28:	call   0x423a6f
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	pop    ecx
  423a31:	jne    0x423a59
  423a33:	push   0xfa0
  423a38:	push   edi
  423a39:	call   0x42493d
  423a3e:	test   eax,eax
  423a40:	pop    ecx
  423a41:	pop    ecx
  423a42:	jne    0x423a55
  423a44:	push   edi
  423a45:	call   0x4244ba
  423a4a:	push   0xa
  423a4c:	call   0x4239db
  423a51:	pop    ecx
  423a52:	pop    ecx
  423a53:	jmp    0x423a17
  423a55:	mov    DWORD PTR [esi],edi
  423a57:	jmp    0x423a60
  423a59:	push   edi
  423a5a:	call   0x4244ba
  423a5f:	pop    ecx
  423a60:	push   0xa
  423a62:	call   0x4239db
  423a67:	xor    eax,eax
  423a69:	pop    ecx
  423a6a:	inc    eax
  423a6b:	pop    edi
  423a6c:	pop    esi
  423a6d:	pop    ebp
  423a6e:	ret    
  423a6f:	push   ebp
  423a70:	mov    ebp,esp
  423a72:	mov    eax,DWORD PTR [ebp+0x8]
  423a75:	push   esi
  423a76:	lea    esi,[eax*8+0x45c310]
  423a7d:	cmp    DWORD PTR [esi],0x0
  423a80:	jne    0x423a95
  423a82:	push   eax
  423a83:	call   0x4239f0
  423a88:	test   eax,eax
  423a8a:	pop    ecx
  423a8b:	jne    0x423a95
  423a8d:	push   0x11
  423a8f:	call   0x422970
  423a94:	pop    ecx
  423a95:	push   DWORD PTR [esi]
  423a97:	call   DWORD PTR ds:0x428094
  423a9d:	pop    esi
  423a9e:	pop    ebp
  423a9f:	ret    
  423aa0:	push   esi
  423aa1:	push   DWORD PTR ds:0x45d268
  423aa7:	call   0x425a06
  423aac:	pop    ecx
  423aad:	mov    ecx,DWORD PTR ds:0x45d264
  423ab3:	mov    esi,eax
  423ab5:	mov    eax,ds:0x45d268
  423aba:	mov    edx,ecx
  423abc:	sub    edx,eax
  423abe:	add    edx,0x4
  423ac1:	cmp    esi,edx
  423ac3:	jae    0x423b13
  423ac5:	mov    ecx,0x800
  423aca:	cmp    esi,ecx
  423acc:	jae    0x423ad0
  423ace:	mov    ecx,esi
  423ad0:	add    ecx,esi
  423ad2:	push   ecx
  423ad3:	push   eax
  423ad4:	call   0x425859
  423ad9:	test   eax,eax
  423adb:	pop    ecx
  423adc:	pop    ecx
  423add:	jne    0x423af6
  423adf:	add    esi,0x10
  423ae2:	push   esi
  423ae3:	push   DWORD PTR ds:0x45d268
  423ae9:	call   0x425859
  423aee:	test   eax,eax
  423af0:	pop    ecx
  423af1:	pop    ecx
  423af2:	jne    0x423af6
  423af4:	pop    esi
  423af5:	ret    
  423af6:	mov    ecx,DWORD PTR ds:0x45d264
  423afc:	sub    ecx,DWORD PTR ds:0x45d268
  423b02:	mov    ds:0x45d268,eax
  423b07:	sar    ecx,0x2
  423b0a:	lea    ecx,[eax+ecx*4]
  423b0d:	mov    DWORD PTR ds:0x45d264,ecx
  423b13:	mov    DWORD PTR [ecx],edi
  423b15:	add    DWORD PTR ds:0x45d264,0x4
  423b1c:	mov    eax,edi
  423b1e:	pop    esi
  423b1f:	ret    
  423b20:	push   0x80
  423b25:	call   0x4245d2
  423b2a:	test   eax,eax
  423b2c:	pop    ecx
  423b2d:	mov    ds:0x45d268,eax
  423b32:	jne    0x423b38
  423b34:	push   0x18
  423b36:	pop    eax
  423b37:	ret    
  423b38:	and    DWORD PTR [eax],0x0
  423b3b:	mov    eax,ds:0x45d268
  423b40:	mov    ds:0x45d264,eax
  423b45:	xor    eax,eax
  423b47:	ret    
  423b48:	push   0xc
  423b4a:	push   0x4284c8
  423b4f:	call   0x4238a8
  423b54:	call   0x422bbb
  423b59:	and    DWORD PTR [ebp-0x4],0x0
  423b5d:	mov    edi,DWORD PTR [ebp+0x8]
  423b60:	call   0x423aa0
  423b65:	mov    DWORD PTR [ebp-0x1c],eax
  423b68:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b6c:	call   0x423b7a
  423b71:	mov    eax,DWORD PTR [ebp-0x1c]
  423b74:	call   0x4238e3
  423b79:	ret    
  423b7a:	call   0x422bc4
  423b7f:	ret    
  423b80:	push   DWORD PTR [esp+0x4]
  423b84:	call   0x423b48
  423b89:	neg    eax
  423b8b:	sbb    eax,eax
  423b8d:	neg    eax
  423b8f:	pop    ecx
  423b90:	dec    eax
  423b91:	ret    
  423b92:	push   ebp
  423b93:	mov    ebp,esp
  423b95:	sub    esp,0x10
  423b98:	push   ebx
  423b99:	xor    ebx,ebx
  423b9b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423ba1:	push   esi
  423ba2:	push   edi
  423ba3:	jne    0x423c12
  423ba5:	push   0x428538
  423baa:	call   DWORD PTR ds:0x428098
  423bb0:	mov    edi,eax
  423bb2:	cmp    edi,ebx
  423bb4:	je     0x423c4d
  423bba:	mov    esi,DWORD PTR ds:0x42801c
  423bc0:	push   0x42852c
  423bc5:	push   edi
  423bc6:	call   esi
  423bc8:	test   eax,eax
  423bca:	mov    ds:0x45cd70,eax
  423bcf:	je     0x423c4d
  423bd1:	push   0x42851c
  423bd6:	push   edi
  423bd7:	call   esi
  423bd9:	push   0x428508
  423bde:	push   edi
  423bdf:	mov    ds:0x45cd74,eax
  423be4:	call   esi
  423be6:	cmp    DWORD PTR ds:0x45cac4,0x2
  423bed:	mov    ds:0x45cd78,eax
  423bf2:	jne    0x423c12
  423bf4:	push   0x4284ec
  423bf9:	push   edi
  423bfa:	call   esi
  423bfc:	test   eax,eax
  423bfe:	mov    ds:0x45cd80,eax
  423c03:	je     0x423c12
  423c05:	push   0x4284d4
  423c0a:	push   edi
  423c0b:	call   esi
  423c0d:	mov    ds:0x45cd7c,eax
  423c12:	mov    eax,ds:0x45cd7c
  423c17:	test   eax,eax
  423c19:	je     0x423c57
  423c1b:	call   eax
  423c1d:	test   eax,eax
  423c1f:	je     0x423c3e
  423c21:	lea    ecx,[ebp-0x4]
  423c24:	push   ecx
  423c25:	push   0xc
  423c27:	lea    ecx,[ebp-0x10]
  423c2a:	push   ecx
  423c2b:	push   0x1
  423c2d:	push   eax
  423c2e:	call   DWORD PTR ds:0x45cd80
  423c34:	test   eax,eax
  423c36:	je     0x423c3e
  423c38:	test   BYTE PTR [ebp-0x8],0x1
  423c3c:	jne    0x423c57
  423c3e:	cmp    DWORD PTR ds:0x45cad0,0x4
  423c45:	jb     0x423c51
  423c47:	or     BYTE PTR [ebp+0x12],0x20
  423c4b:	jmp    0x423c76
  423c4d:	xor    eax,eax
  423c4f:	jmp    0x423c86
  423c51:	or     BYTE PTR [ebp+0x12],0x4
  423c55:	jmp    0x423c76
  423c57:	mov    eax,ds:0x45cd74
  423c5c:	test   eax,eax
  423c5e:	je     0x423c76
  423c60:	call   eax
  423c62:	mov    ebx,eax
  423c64:	test   ebx,ebx
  423c66:	je     0x423c76
  423c68:	mov    eax,ds:0x45cd78
  423c6d:	test   eax,eax
  423c6f:	je     0x423c76
  423c71:	push   ebx
  423c72:	call   eax
  423c74:	mov    ebx,eax
  423c76:	push   DWORD PTR [ebp+0x10]
  423c79:	push   DWORD PTR [ebp+0xc]
  423c7c:	push   DWORD PTR [ebp+0x8]
  423c7f:	push   ebx
  423c80:	call   DWORD PTR ds:0x45cd70
  423c86:	pop    edi
  423c87:	pop    esi
  423c88:	pop    ebx
  423c89:	leave  
  423c8a:	ret    
  423c8b:	int3   
  423c8c:	int3   
  423c8d:	int3   
  423c8e:	int3   
  423c8f:	int3   
  423c90:	push   edi
  423c91:	mov    edi,DWORD PTR [esp+0x8]
  423c95:	jmp    0x423d05
  423c97:	lea    esp,[esp+0x0]
  423c9e:	mov    edi,edi
  423ca0:	mov    ecx,DWORD PTR [esp+0x4]
  423ca4:	push   edi
  423ca5:	test   ecx,0x3
  423cab:	je     0x423cc0
  423cad:	mov    al,BYTE PTR [ecx]
  423caf:	add    ecx,0x1
  423cb2:	test   al,al
  423cb4:	je     0x423cf3
  423cb6:	test   ecx,0x3
  423cbc:	jne    0x423cad
  423cbe:	mov    edi,edi
  423cc0:	mov    eax,DWORD PTR [ecx]
  423cc2:	mov    edx,0x7efefeff
  423cc7:	add    edx,eax
  423cc9:	xor    eax,0xffffffff
  423ccc:	xor    eax,edx
  423cce:	add    ecx,0x4
  423cd1:	test   eax,0x81010100
  423cd6:	je     0x423cc0
  423cd8:	mov    eax,DWORD PTR [ecx-0x4]
  423cdb:	test   al,al
  423cdd:	je     0x423d02
  423cdf:	test   ah,ah
  423ce1:	je     0x423cfd
  423ce3:	test   eax,0xff0000
  423ce8:	je     0x423cf8
  423cea:	test   eax,0xff000000
  423cef:	je     0x423cf3
  423cf1:	jmp    0x423cc0
  423cf3:	lea    edi,[ecx-0x1]
  423cf6:	jmp    0x423d05
  423cf8:	lea    edi,[ecx-0x2]
  423cfb:	jmp    0x423d05
  423cfd:	lea    edi,[ecx-0x3]
  423d00:	jmp    0x423d05
  423d02:	lea    edi,[ecx-0x4]
  423d05:	mov    ecx,DWORD PTR [esp+0xc]
  423d09:	test   ecx,0x3
  423d0f:	je     0x423d2e
  423d11:	mov    dl,BYTE PTR [ecx]
  423d13:	add    ecx,0x1
  423d16:	test   dl,dl
  423d18:	je     0x423d80
  423d1a:	mov    BYTE PTR [edi],dl
  423d1c:	add    edi,0x1
  423d1f:	test   ecx,0x3
  423d25:	jne    0x423d11
  423d27:	jmp    0x423d2e
  423d29:	mov    DWORD PTR [edi],edx
  423d2b:	add    edi,0x4
  423d2e:	mov    edx,0x7efefeff
  423d33:	mov    eax,DWORD PTR [ecx]
  423d35:	add    edx,eax
  423d37:	xor    eax,0xffffffff
  423d3a:	xor    eax,edx
  423d3c:	mov    edx,DWORD PTR [ecx]
  423d3e:	add    ecx,0x4
  423d41:	test   eax,0x81010100
  423d46:	je     0x423d29
  423d48:	test   dl,dl
  423d4a:	je     0x423d80
  423d4c:	test   dh,dh
  423d4e:	je     0x423d77
  423d50:	test   edx,0xff0000
  423d56:	je     0x423d6a
  423d58:	test   edx,0xff000000
  423d5e:	je     0x423d62
  423d60:	jmp    0x423d29
  423d62:	mov    DWORD PTR [edi],edx
  423d64:	mov    eax,DWORD PTR [esp+0x8]
  423d68:	pop    edi
  423d69:	ret    
  423d6a:	mov    WORD PTR [edi],dx
  423d6d:	mov    eax,DWORD PTR [esp+0x8]
  423d71:	mov    BYTE PTR [edi+0x2],0x0
  423d75:	pop    edi
  423d76:	ret    
  423d77:	mov    WORD PTR [edi],dx
  423d7a:	mov    eax,DWORD PTR [esp+0x8]
  423d7e:	pop    edi
  423d7f:	ret    
  423d80:	mov    BYTE PTR [edi],dl
  423d82:	mov    eax,DWORD PTR [esp+0x8]
  423d86:	pop    edi
  423d87:	ret    
  423d88:	int3   
  423d89:	int3   
  423d8a:	int3   
  423d8b:	int3   
  423d8c:	int3   
  423d8d:	int3   
  423d8e:	int3   
  423d8f:	int3   
  423d90:	mov    ecx,DWORD PTR [esp+0xc]
  423d94:	push   edi
  423d95:	test   ecx,ecx
  423d97:	je     0x423e2f
  423d9d:	push   esi
  423d9e:	push   ebx
  423d9f:	mov    ebx,ecx
  423da1:	mov    esi,DWORD PTR [esp+0x14]
  423da5:	test   esi,0x3
  423dab:	mov    edi,DWORD PTR [esp+0x10]
  423daf:	jne    0x423dbc
  423db1:	shr    ecx,0x2
  423db4:	jne    0x423e3f
  423dba:	jmp    0x423de3
  423dbc:	mov    al,BYTE PTR [esi]
  423dbe:	add    esi,0x1
  423dc1:	mov    BYTE PTR [edi],al
  423dc3:	add    edi,0x1
  423dc6:	sub    ecx,0x1
  423dc9:	je     0x423df6
  423dcb:	test   al,al
  423dcd:	je     0x423dfe
  423dcf:	test   esi,0x3
  423dd5:	jne    0x423dbc
  423dd7:	mov    ebx,ecx
  423dd9:	shr    ecx,0x2
  423ddc:	jne    0x423e3f
  423dde:	and    ebx,0x3
  423de1:	je     0x423df6
  423de3:	mov    al,BYTE PTR [esi]
  423de5:	add    esi,0x1
  423de8:	mov    BYTE PTR [edi],al
  423dea:	add    edi,0x1
  423ded:	test   al,al
  423def:	je     0x423e28
  423df1:	sub    ebx,0x1
  423df4:	jne    0x423de3
  423df6:	mov    eax,DWORD PTR [esp+0x10]
  423dfa:	pop    ebx
  423dfb:	pop    esi
  423dfc:	pop    edi
  423dfd:	ret    
  423dfe:	test   edi,0x3
  423e04:	je     0x423e1c
  423e06:	mov    BYTE PTR [edi],al
  423e08:	add    edi,0x1
  423e0b:	sub    ecx,0x1
  423e0e:	je     0x423eac
  423e14:	test   edi,0x3
  423e1a:	jne    0x423e06
  423e1c:	mov    ebx,ecx
  423e1e:	shr    ecx,0x2
  423e21:	jne    0x423e97
  423e23:	mov    BYTE PTR [edi],al
  423e25:	add    edi,0x1
  423e28:	sub    ebx,0x1
  423e2b:	jne    0x423e23
  423e2d:	pop    ebx
  423e2e:	pop    esi
  423e2f:	mov    eax,DWORD PTR [esp+0x8]
  423e33:	pop    edi
  423e34:	ret    
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	add    edi,0x4
  423e3a:	sub    ecx,0x1
  423e3d:	je     0x423dde
  423e3f:	mov    edx,0x7efefeff
  423e44:	mov    eax,DWORD PTR [esi]
  423e46:	add    edx,eax
  423e48:	xor    eax,0xffffffff
  423e4b:	xor    eax,edx
  423e4d:	mov    edx,DWORD PTR [esi]
  423e4f:	add    esi,0x4
  423e52:	test   eax,0x81010100
  423e57:	je     0x423e35
  423e59:	test   dl,dl
  423e5b:	je     0x423e89
  423e5d:	test   dh,dh
  423e5f:	je     0x423e7f
  423e61:	test   edx,0xff0000
  423e67:	je     0x423e75
  423e69:	test   edx,0xff000000
  423e6f:	jne    0x423e35
  423e71:	mov    DWORD PTR [edi],edx
  423e73:	jmp    0x423e8d
  423e75:	and    edx,0xffff
  423e7b:	mov    DWORD PTR [edi],edx
  423e7d:	jmp    0x423e8d
  423e7f:	and    edx,0xff
  423e85:	mov    DWORD PTR [edi],edx
  423e87:	jmp    0x423e8d
  423e89:	xor    edx,edx
  423e8b:	mov    DWORD PTR [edi],edx
  423e8d:	add    edi,0x4
  423e90:	xor    eax,eax
  423e92:	sub    ecx,0x1
  423e95:	je     0x423ea3
  423e97:	xor    eax,eax
  423e99:	mov    DWORD PTR [edi],eax
  423e9b:	add    edi,0x4
  423e9e:	sub    ecx,0x1
  423ea1:	jne    0x423e99
  423ea3:	and    ebx,0x3
  423ea6:	jne    0x423e23
  423eac:	mov    eax,DWORD PTR [esp+0x10]
  423eb0:	pop    ebx
  423eb1:	pop    esi
  423eb2:	pop    edi
  423eb3:	ret    
  423eb4:	int3   
  423eb5:	int3   
  423eb6:	int3   
  423eb7:	int3   
  423eb8:	int3   
  423eb9:	int3   
  423eba:	int3   
  423ebb:	int3   
  423ebc:	int3   
  423ebd:	int3   
  423ebe:	int3   
  423ebf:	int3   
  423ec0:	mov    ecx,DWORD PTR [esp+0x4]
  423ec4:	test   ecx,0x3
  423eca:	je     0x423ef0
  423ecc:	mov    al,BYTE PTR [ecx]
  423ece:	add    ecx,0x1
  423ed1:	test   al,al
  423ed3:	je     0x423f23
  423ed5:	test   ecx,0x3
  423edb:	jne    0x423ecc
  423edd:	add    eax,0x0
  423ee2:	lea    esp,[esp+0x0]
  423ee9:	lea    esp,[esp+0x0]
  423ef0:	mov    eax,DWORD PTR [ecx]
  423ef2:	mov    edx,0x7efefeff
  423ef7:	add    edx,eax
  423ef9:	xor    eax,0xffffffff
  423efc:	xor    eax,edx
  423efe:	add    ecx,0x4
  423f01:	test   eax,0x81010100
  423f06:	je     0x423ef0
  423f08:	mov    eax,DWORD PTR [ecx-0x4]
  423f0b:	test   al,al
  423f0d:	je     0x423f41
  423f0f:	test   ah,ah
  423f11:	je     0x423f37
  423f13:	test   eax,0xff0000
  423f18:	je     0x423f2d
  423f1a:	test   eax,0xff000000
  423f1f:	je     0x423f23
  423f21:	jmp    0x423ef0
  423f23:	lea    eax,[ecx-0x1]
  423f26:	mov    ecx,DWORD PTR [esp+0x4]
  423f2a:	sub    eax,ecx
  423f2c:	ret    
  423f2d:	lea    eax,[ecx-0x2]
  423f30:	mov    ecx,DWORD PTR [esp+0x4]
  423f34:	sub    eax,ecx
  423f36:	ret    
  423f37:	lea    eax,[ecx-0x3]
  423f3a:	mov    ecx,DWORD PTR [esp+0x4]
  423f3e:	sub    eax,ecx
  423f40:	ret    
  423f41:	lea    eax,[ecx-0x4]
  423f44:	mov    ecx,DWORD PTR [esp+0x4]
  423f48:	sub    eax,ecx
  423f4a:	ret    
  423f4b:	push   0x8
  423f4d:	push   0x428548
  423f52:	call   0x4238a8
  423f57:	and    DWORD PTR [ebp-0x4],0x0
  423f5b:	push   0x0
  423f5d:	push   0x1
  423f5f:	call   0x425ad2
  423f64:	pop    ecx
  423f65:	pop    ecx
  423f66:	jmp    0x423f6f
  423f68:	xor    eax,eax
  423f6a:	inc    eax
  423f6b:	ret    
  423f6c:	mov    esp,DWORD PTR [ebp-0x18]
  423f6f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f73:	push   0x3
  423f75:	call   DWORD PTR ds:0x42802c
  423f7b:	int3   
  423f7c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f82:	jne    0x423f85
  423f84:	ret    
  423f85:	jmp    0x423f4b
  423f8a:	movzx  eax,BYTE PTR [esp+0x4]
  423f8f:	mov    cl,BYTE PTR [esp+0xc]
  423f93:	test   BYTE PTR [eax+0x45cf21],cl
  423f99:	jne    0x423fb7
  423f9b:	cmp    DWORD PTR [esp+0x8],0x0
  423fa0:	je     0x423fb0
  423fa2:	movzx  eax,WORD PTR [eax*2+0x428942]
  423faa:	and    eax,DWORD PTR [esp+0x8]
  423fae:	jmp    0x423fb2
  423fb0:	xor    eax,eax
  423fb2:	test   eax,eax
  423fb4:	jne    0x423fb7
  423fb6:	ret    
  423fb7:	xor    eax,eax
  423fb9:	inc    eax
  423fba:	ret    
  423fbb:	push   0x4
  423fbd:	push   0x0
  423fbf:	push   DWORD PTR [esp+0xc]
  423fc3:	call   0x423f8a
  423fc8:	add    esp,0xc
  423fcb:	ret    
  423fcc:	sub    eax,0x3a4
  423fd1:	je     0x423ff5
  423fd3:	sub    eax,0x4
  423fd6:	je     0x423fef
  423fd8:	sub    eax,0xd
  423fdb:	je     0x423fe9
  423fdd:	dec    eax
  423fde:	je     0x423fe3
  423fe0:	xor    eax,eax
  423fe2:	ret    
  423fe3:	mov    eax,0x404
  423fe8:	ret    
  423fe9:	mov    eax,0x412
  423fee:	ret    
  423fef:	mov    eax,0x804
  423ff4:	ret    
  423ff5:	mov    eax,0x411
  423ffa:	ret    
  423ffb:	push   edi
  423ffc:	push   0x40
  423ffe:	xor    eax,eax
  424000:	pop    ecx
  424001:	mov    edi,0x45cf20
  424006:	rep stos DWORD PTR es:[edi],eax
  424008:	stos   BYTE PTR es:[edi],al
  424009:	xor    eax,eax
  42400b:	mov    ds:0x45d024,eax
  424010:	mov    ds:0x45cf1c,eax
  424015:	mov    ds:0x45cf14,eax
  42401a:	mov    edi,0x45d030
  42401f:	stos   DWORD PTR es:[edi],eax
  424020:	stos   DWORD PTR es:[edi],eax
  424021:	stos   DWORD PTR es:[edi],eax
  424022:	pop    edi
  424023:	ret    
  424024:	push   ebp
  424025:	mov    ebp,esp
  424027:	sub    esp,0x518
  42402d:	mov    eax,ds:0x45c430
  424032:	xor    eax,DWORD PTR [ebp+0x4]
  424035:	push   esi
  424036:	mov    DWORD PTR [ebp-0x4],eax
  424039:	lea    eax,[ebp-0x18]
  42403c:	push   eax
  42403d:	push   DWORD PTR ds:0x45d024
  424043:	call   DWORD PTR ds:0x4280a4
  424049:	cmp    eax,0x1
  42404c:	mov    esi,0x100
  424051:	jne    0x424164
  424057:	xor    eax,eax
  424059:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424060:	inc    eax
  424061:	cmp    eax,esi
  424063:	jb     0x424059
  424065:	mov    al,BYTE PTR [ebp-0x12]
  424068:	test   al,al
  42406a:	mov    BYTE PTR [ebp-0x118],0x20
  424071:	je     0x4240a9
  424073:	push   ebx
  424074:	lea    edx,[ebp-0x11]
  424077:	push   edi
  424078:	movzx  ecx,BYTE PTR [edx]
  42407b:	movzx  eax,al
  42407e:	cmp    eax,ecx
  424080:	ja     0x42409f
  424082:	sub    ecx,eax
  424084:	inc    ecx
  424085:	mov    ebx,ecx
  424087:	shr    ecx,0x2
  42408a:	lea    edi,[ebp+eax*1-0x118]
  424091:	mov    eax,0x20202020
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	mov    ecx,ebx
  42409a:	and    ecx,0x3
  42409d:	rep stos BYTE PTR es:[edi],al
  42409f:	inc    edx
  4240a0:	mov    al,BYTE PTR [edx]
  4240a2:	inc    edx
  4240a3:	test   al,al
  4240a5:	jne    0x424078
  4240a7:	pop    edi
  4240a8:	pop    ebx
  4240a9:	push   0x0
  4240ab:	push   DWORD PTR ds:0x45cf14
  4240b1:	lea    eax,[ebp-0x518]
  4240b7:	push   DWORD PTR ds:0x45d024
  4240bd:	push   eax
  4240be:	push   esi
  4240bf:	lea    eax,[ebp-0x118]
  4240c5:	push   eax
  4240c6:	push   0x1
  4240c8:	call   0x425fd8
  4240cd:	push   0x0
  4240cf:	push   DWORD PTR ds:0x45d024
  4240d5:	lea    eax,[ebp-0x218]
  4240db:	push   esi
  4240dc:	push   eax
  4240dd:	push   esi
  4240de:	lea    eax,[ebp-0x118]
  4240e4:	push   eax
  4240e5:	push   esi
  4240e6:	push   DWORD PTR ds:0x45cf14
  4240ec:	call   0x425c1c
  4240f1:	push   0x0
  4240f3:	push   DWORD PTR ds:0x45d024
  4240f9:	lea    eax,[ebp-0x318]
  4240ff:	push   esi
  424100:	push   eax
  424101:	push   esi
  424102:	lea    eax,[ebp-0x118]
  424108:	push   eax
  424109:	push   0x200
  42410e:	push   DWORD PTR ds:0x45cf14
  424114:	call   0x425c1c
  424119:	add    esp,0x5c
  42411c:	xor    eax,eax
  42411e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  424126:	test   cl,0x1
  424129:	je     0x424141
  42412b:	or     BYTE PTR [eax+0x45cf21],0x10
  424132:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  424139:	mov    BYTE PTR [eax+0x45d040],cl
  42413f:	jmp    0x42415d
  424141:	test   cl,0x2
  424144:	je     0x424156
  424146:	or     BYTE PTR [eax+0x45cf21],0x20
  42414d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424154:	jmp    0x424139
  424156:	and    BYTE PTR [eax+0x45d040],0x0
  42415d:	inc    eax
  42415e:	cmp    eax,esi
  424160:	jb     0x42411e
  424162:	jmp    0x4241a8
  424164:	xor    eax,eax
  424166:	cmp    eax,0x41
  424169:	jb     0x424184
  42416b:	cmp    eax,0x5a
  42416e:	ja     0x424184
  424170:	or     BYTE PTR [eax+0x45cf21],0x10
  424177:	mov    cl,al
  424179:	add    cl,0x20
  42417c:	mov    BYTE PTR [eax+0x45d040],cl
  424182:	jmp    0x4241a3
  424184:	cmp    eax,0x61
  424187:	jb     0x42419c
  424189:	cmp    eax,0x7a
  42418c:	ja     0x42419c
  42418e:	or     BYTE PTR [eax+0x45cf21],0x20
  424195:	mov    cl,al
  424197:	sub    cl,0x20
  42419a:	jmp    0x42417c
  42419c:	and    BYTE PTR [eax+0x45d040],0x0
  4241a3:	inc    eax
  4241a4:	cmp    eax,esi
  4241a6:	jb     0x424166
  4241a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4241ab:	xor    ecx,DWORD PTR [ebp+0x4]
  4241ae:	pop    esi
  4241af:	call   0x423f7c
  4241b4:	leave  
  4241b5:	ret    
  4241b6:	push   ebp
  4241b7:	mov    ebp,esp
  4241b9:	sub    esp,0x1c
  4241bc:	mov    eax,ds:0x45c430
  4241c1:	xor    eax,DWORD PTR [ebp+0x4]
  4241c4:	push   ebx
  4241c5:	push   esi
  4241c6:	mov    esi,DWORD PTR [ebp+0x8]
  4241c9:	xor    ebx,ebx
  4241cb:	cmp    esi,ebx
  4241cd:	mov    DWORD PTR [ebp-0x4],eax
  4241d0:	push   edi
  4241d1:	je     0x42432b
  4241d7:	xor    edx,edx
  4241d9:	xor    eax,eax
  4241db:	cmp    DWORD PTR [eax+0x45c440],esi
  4241e1:	je     0x424248
  4241e3:	add    eax,0x30
  4241e6:	inc    edx
  4241e7:	cmp    eax,0xf0
  4241ec:	jb     0x4241db
  4241ee:	lea    eax,[ebp-0x1c]
  4241f1:	push   eax
  4241f2:	push   esi
  4241f3:	call   DWORD PTR ds:0x4280a4
  4241f9:	cmp    eax,0x1
  4241fc:	jne    0x424323
  424202:	push   0x40
  424204:	xor    eax,eax
  424206:	cmp    DWORD PTR [ebp-0x1c],0x1
  42420a:	pop    ecx
  42420b:	mov    edi,0x45cf20
  424210:	rep stos DWORD PTR es:[edi],eax
  424212:	stos   BYTE PTR es:[edi],al
  424213:	mov    DWORD PTR ds:0x45d024,esi
  424219:	mov    DWORD PTR ds:0x45cf14,ebx
  42421f:	jbe    0x424311
  424225:	cmp    BYTE PTR [ebp-0x16],0x0
  424229:	je     0x4242e9
  42422f:	lea    ecx,[ebp-0x15]
  424232:	mov    dl,BYTE PTR [ecx]
  424234:	test   dl,dl
  424236:	je     0x4242e9
  42423c:	movzx  eax,BYTE PTR [ecx-0x1]
  424240:	movzx  edx,dl
  424243:	jmp    0x4242d9
  424248:	push   0x40
  42424a:	xor    eax,eax
  42424c:	pop    ecx
  42424d:	mov    edi,0x45cf20
  424252:	rep stos DWORD PTR es:[edi],eax
  424254:	lea    ecx,[edx+edx*2]
  424257:	shl    ecx,0x4
  42425a:	mov    DWORD PTR [ebp-0x8],ebx
  42425d:	stos   BYTE PTR es:[edi],al
  42425e:	lea    ebx,[ecx+0x45c450]
  424264:	mov    al,BYTE PTR [ebx]
  424266:	mov    esi,ebx
  424268:	jmp    0x424293
  42426a:	mov    dl,BYTE PTR [esi+0x1]
  42426d:	test   dl,dl
  42426f:	je     0x424297
  424271:	movzx  eax,al
  424274:	movzx  edi,dl
  424277:	cmp    eax,edi
  424279:	ja     0x42428f
  42427b:	mov    edx,DWORD PTR [ebp-0x8]
  42427e:	mov    dl,BYTE PTR [edx+0x45c438]
  424284:	or     BYTE PTR [eax+0x45cf21],dl
  42428a:	inc    eax
  42428b:	cmp    eax,edi
  42428d:	jbe    0x424284
  42428f:	inc    esi
  424290:	inc    esi
  424291:	mov    al,BYTE PTR [esi]
  424293:	test   al,al
  424295:	jne    0x42426a
  424297:	inc    DWORD PTR [ebp-0x8]
  42429a:	add    ebx,0x8
  42429d:	cmp    DWORD PTR [ebp-0x8],0x4
  4242a1:	jb     0x424264
  4242a3:	mov    eax,DWORD PTR [ebp+0x8]
  4242a6:	mov    ds:0x45d024,eax
  4242ab:	mov    DWORD PTR ds:0x45cf1c,0x1
  4242b5:	call   0x423fcc
  4242ba:	lea    ecx,[ecx+0x45c444]
  4242c0:	mov    esi,ecx
  4242c2:	mov    edi,0x45d030
  4242c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c9:	mov    ds:0x45cf14,eax
  4242ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242cf:	jmp    0x424330
  4242d1:	or     BYTE PTR [eax+0x45cf21],0x4
  4242d8:	inc    eax
  4242d9:	cmp    eax,edx
  4242db:	jbe    0x4242d1
  4242dd:	inc    ecx
  4242de:	inc    ecx
  4242df:	cmp    BYTE PTR [ecx-0x1],0x0
  4242e3:	jne    0x424232
  4242e9:	xor    ecx,ecx
  4242eb:	inc    ecx
  4242ec:	mov    eax,ecx
  4242ee:	or     BYTE PTR [eax+0x45cf21],0x8
  4242f5:	inc    eax
  4242f6:	cmp    eax,0xff
  4242fb:	jb     0x4242ee
  4242fd:	mov    eax,esi
  4242ff:	call   0x423fcc
  424304:	mov    ds:0x45cf14,eax
  424309:	mov    DWORD PTR ds:0x45cf1c,ecx
  42430f:	jmp    0x424317
  424311:	mov    DWORD PTR ds:0x45cf1c,ebx
  424317:	xor    eax,eax
  424319:	mov    edi,0x45d030
  42431e:	stos   DWORD PTR es:[edi],eax
  42431f:	stos   DWORD PTR es:[edi],eax
  424320:	stos   DWORD PTR es:[edi],eax
  424321:	jmp    0x424330
  424323:	cmp    DWORD PTR ds:0x45cd84,ebx
  424329:	je     0x424339
  42432b:	call   0x423ffb
  424330:	call   0x424024
  424335:	xor    eax,eax
  424337:	jmp    0x42433c
  424339:	or     eax,0xffffffff
  42433c:	mov    ecx,DWORD PTR [ebp-0x4]
  42433f:	xor    ecx,DWORD PTR [ebp+0x4]
  424342:	pop    edi
  424343:	pop    esi
  424344:	pop    ebx
  424345:	call   0x423f7c
  42434a:	leave  
  42434b:	ret    
  42434c:	push   0x14
  42434e:	push   0x428558
  424353:	call   0x4238a8
  424358:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42435c:	push   0xd
  42435e:	call   0x423a6f
  424363:	pop    ecx
  424364:	xor    edi,edi
  424366:	mov    DWORD PTR [ebp-0x4],edi
  424369:	mov    DWORD PTR ds:0x45cd84,edi
  42436f:	mov    eax,DWORD PTR [ebp+0x8]
  424372:	cmp    eax,0xfffffffe
  424375:	jne    0x424389
  424377:	mov    DWORD PTR ds:0x45cd84,0x1
  424381:	call   DWORD PTR ds:0x4280a0
  424387:	jmp    0x4243b4
  424389:	cmp    eax,0xfffffffd
  42438c:	jne    0x4243a0
  42438e:	mov    DWORD PTR ds:0x45cd84,0x1
  424398:	call   DWORD PTR ds:0x42809c
  42439e:	jmp    0x4243b4
  4243a0:	cmp    eax,0xfffffffc
  4243a3:	jne    0x4243b4
  4243a5:	mov    DWORD PTR ds:0x45cd84,0x1
  4243af:	mov    eax,ds:0x45cdb4
  4243b4:	mov    DWORD PTR [ebp+0x8],eax
  4243b7:	cmp    eax,DWORD PTR ds:0x45d024
  4243bd:	je     0x42447e
  4243c3:	mov    esi,DWORD PTR ds:0x45cf18
  4243c9:	mov    DWORD PTR [ebp-0x20],esi
  4243cc:	cmp    esi,edi
  4243ce:	je     0x4243d4
  4243d0:	cmp    DWORD PTR [esi],edi
  4243d2:	je     0x4243e4
  4243d4:	push   0x220
  4243d9:	call   0x4245d2
  4243de:	pop    ecx
  4243df:	mov    esi,eax
  4243e1:	mov    DWORD PTR [ebp-0x20],esi
  4243e4:	cmp    esi,edi
  4243e6:	je     0x424467
  4243e8:	push   DWORD PTR [ebp+0x8]
  4243eb:	call   0x4241b6
  4243f0:	pop    ecx
  4243f1:	mov    DWORD PTR [ebp-0x1c],eax
  4243f4:	cmp    eax,edi
  4243f6:	jne    0x424467
  4243f8:	mov    DWORD PTR [esi],edi
  4243fa:	mov    eax,ds:0x45d024
  4243ff:	mov    DWORD PTR [esi+0x4],eax
  424402:	mov    eax,ds:0x45cf1c
  424407:	mov    DWORD PTR [esi+0x8],eax
  42440a:	mov    eax,ds:0x45cf14
  42440f:	mov    DWORD PTR [esi+0xc],eax
  424412:	xor    eax,eax
  424414:	mov    DWORD PTR [ebp-0x24],eax
  424417:	cmp    eax,0x5
  42441a:	jge    0x42442c
  42441c:	mov    cx,WORD PTR [eax*2+0x45d030]
  424424:	mov    WORD PTR [esi+eax*2+0x10],cx
  424429:	inc    eax
  42442a:	jmp    0x424414
  42442c:	xor    eax,eax
  42442e:	mov    DWORD PTR [ebp-0x24],eax
  424431:	cmp    eax,0x101
  424436:	jge    0x424445
  424438:	mov    cl,BYTE PTR [eax+0x45cf20]
  42443e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  424442:	inc    eax
  424443:	jmp    0x42442e
  424445:	xor    eax,eax
  424447:	mov    DWORD PTR [ebp-0x24],eax
  42444a:	cmp    eax,0x100
  42444f:	jge    0x424461
  424451:	mov    cl,BYTE PTR [eax+0x45d040]
  424457:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42445e:	inc    eax
  42445f:	jmp    0x424447
  424461:	mov    DWORD PTR ds:0x45cf18,esi
  424467:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42446b:	jne    0x424481
  42446d:	cmp    esi,DWORD PTR ds:0x45cf18
  424473:	je     0x424481
  424475:	push   esi
  424476:	call   0x4244ba
  42447b:	pop    ecx
  42447c:	jmp    0x424481
  42447e:	mov    DWORD PTR [ebp-0x1c],edi
  424481:	or     DWORD PTR [ebp-0x4],0xffffffff
  424485:	call   0x424493
  42448a:	mov    eax,DWORD PTR [ebp-0x1c]
  42448d:	call   0x4238e3
  424492:	ret    
  424493:	push   0xd
  424495:	call   0x4239db
  42449a:	pop    ecx
  42449b:	ret    
  42449c:	cmp    DWORD PTR ds:0x45d26c,0x0
  4244a3:	jne    0x4244b7
  4244a5:	push   0xfffffffd
  4244a7:	call   0x42434c
  4244ac:	pop    ecx
  4244ad:	mov    DWORD PTR ds:0x45d26c,0x1
  4244b7:	xor    eax,eax
  4244b9:	ret    
  4244ba:	push   0xc
  4244bc:	push   0x428568
  4244c1:	call   0x4238a8
  4244c6:	mov    esi,DWORD PTR [ebp+0x8]
  4244c9:	test   esi,esi
  4244cb:	je     0x424525
  4244cd:	cmp    DWORD PTR ds:0x45d144,0x3
  4244d4:	jne    0x424516
  4244d6:	push   0x4
  4244d8:	call   0x423a6f
  4244dd:	pop    ecx
  4244de:	and    DWORD PTR [ebp-0x4],0x0
  4244e2:	push   esi
  4244e3:	call   0x424c92
  4244e8:	pop    ecx
  4244e9:	mov    DWORD PTR [ebp-0x1c],eax
  4244ec:	test   eax,eax
  4244ee:	je     0x4244f9
  4244f0:	push   esi
  4244f1:	push   eax
  4244f2:	call   0x424cbd
  4244f7:	pop    ecx
  4244f8:	pop    ecx
  4244f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244fd:	call   0x42450d
  424502:	cmp    DWORD PTR [ebp-0x1c],0x0
  424506:	jne    0x424525
  424508:	push   DWORD PTR [ebp+0x8]
  42450b:	jmp    0x424517
  42450d:	push   0x4
  42450f:	call   0x4239db
  424514:	pop    ecx
  424515:	ret    
  424516:	push   esi
  424517:	push   0x0
  424519:	push   DWORD PTR ds:0x45d140
  42451f:	call   DWORD PTR ds:0x42808c
  424525:	call   0x4238e3
  42452a:	ret    
  42452b:	push   0xc
  42452d:	push   0x428578
  424532:	call   0x4238a8
  424537:	mov    esi,DWORD PTR [ebp+0x8]
  42453a:	cmp    DWORD PTR ds:0x45d144,0x3
  424541:	jne    0x424571
  424543:	cmp    esi,DWORD PTR ds:0x45cf04
  424549:	ja     0x424571
  42454b:	push   0x4
  42454d:	call   0x423a6f
  424552:	pop    ecx
  424553:	and    DWORD PTR [ebp-0x4],0x0
  424557:	push   esi
  424558:	call   0x425471
  42455d:	pop    ecx
  42455e:	mov    DWORD PTR [ebp-0x1c],eax
  424561:	or     DWORD PTR [ebp-0x4],0xffffffff
  424565:	call   0x42459d
  42456a:	mov    eax,DWORD PTR [ebp-0x1c]
  42456d:	test   eax,eax
  42456f:	jne    0x424594
  424571:	test   esi,esi
  424573:	jne    0x424576
  424575:	inc    esi
  424576:	cmp    DWORD PTR ds:0x45d144,0x1
  42457d:	je     0x424585
  42457f:	add    esi,0xf
  424582:	and    esi,0xfffffff0
  424585:	push   esi
  424586:	push   0x0
  424588:	push   DWORD PTR ds:0x45d140
  42458e:	call   DWORD PTR ds:0x4280a8
  424594:	call   0x4238e3
  424599:	ret    
  42459a:	mov    esi,DWORD PTR [ebp+0x8]
  42459d:	push   0x4
  42459f:	call   0x4239db
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4245ab:	ja     0x4245cf
  4245ad:	push   DWORD PTR [esp+0x4]
  4245b1:	call   0x42452b
  4245b6:	test   eax,eax
  4245b8:	pop    ecx
  4245b9:	jne    0x4245d1
  4245bb:	cmp    DWORD PTR [esp+0x8],eax
  4245bf:	je     0x4245d1
  4245c1:	push   DWORD PTR [esp+0x4]
  4245c5:	call   0x426192
  4245ca:	test   eax,eax
  4245cc:	pop    ecx
  4245cd:	jne    0x4245ad
  4245cf:	xor    eax,eax
  4245d1:	ret    
  4245d2:	push   DWORD PTR ds:0x45cdc8
  4245d8:	push   DWORD PTR [esp+0x8]
  4245dc:	call   0x4245a6
  4245e1:	pop    ecx
  4245e2:	pop    ecx
  4245e3:	ret    
  4245e4:	int3   
  4245e5:	int3   
  4245e6:	int3   
  4245e7:	int3   
  4245e8:	int3   
  4245e9:	int3   
  4245ea:	int3   
  4245eb:	int3   
  4245ec:	int3   
  4245ed:	int3   
  4245ee:	int3   
  4245ef:	int3   
  4245f0:	push   ebp
  4245f1:	mov    ebp,esp
  4245f3:	push   edi
  4245f4:	push   esi
  4245f5:	mov    esi,DWORD PTR [ebp+0xc]
  4245f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245fb:	mov    edi,DWORD PTR [ebp+0x8]
  4245fe:	mov    eax,ecx
  424600:	mov    edx,ecx
  424602:	add    eax,esi
  424604:	cmp    edi,esi
  424606:	jbe    0x424610
  424608:	cmp    edi,eax
  42460a:	jb     0x42478c
  424610:	test   edi,0x3
  424616:	jne    0x42462c
  424618:	shr    ecx,0x2
  42461b:	and    edx,0x3
  42461e:	cmp    ecx,0x8
  424621:	jb     0x42464c
  424623:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424625:	jmp    DWORD PTR [edx*4+0x42473c]
  42462c:	mov    eax,edi
  42462e:	mov    edx,0x3
  424633:	sub    ecx,0x4
  424636:	jb     0x424644
  424638:	and    eax,0x3
  42463b:	add    ecx,eax
  42463d:	jmp    DWORD PTR [eax*4+0x424650]
  424644:	jmp    DWORD PTR [ecx*4+0x42474c]
  42464b:	nop
  42464c:	jmp    DWORD PTR [ecx*4+0x4246d0]
  424653:	nop
  424654:	pusha  
  424655:	inc    esi
  424656:	inc    edx
  424657:	add    BYTE PTR [esi+eax*2+0x46b00042],cl
  42465e:	inc    edx
  42465f:	add    BYTE PTR [ebx],ah
  424661:	ror    DWORD PTR [edx-0x75f877fa],1
  424667:	inc    esi
  424668:	add    DWORD PTR [eax+0x468a0147],ecx
  42466e:	add    al,cl
  424670:	jmp    0x289ce77
  424675:	add    esi,0x3
  424678:	add    edi,0x3
  42467b:	cmp    ecx,0x8
  42467e:	jb     0x42464c
  424680:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424682:	jmp    DWORD PTR [edx*4+0x42473c]
  424689:	lea    ecx,[ecx+0x0]
  42468c:	and    edx,ecx
  42468e:	mov    al,BYTE PTR [esi]
  424690:	mov    BYTE PTR [edi],al
  424692:	mov    al,BYTE PTR [esi+0x1]
  424695:	shr    ecx,0x2
  424698:	mov    BYTE PTR [edi+0x1],al
  42469b:	add    esi,0x2
  42469e:	add    edi,0x2
  4246a1:	cmp    ecx,0x8
  4246a4:	jb     0x42464c
  4246a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a8:	jmp    DWORD PTR [edx*4+0x42473c]
  4246af:	nop
  4246b0:	and    edx,ecx
  4246b2:	mov    al,BYTE PTR [esi]
  4246b4:	mov    BYTE PTR [edi],al
  4246b6:	add    esi,0x1
  4246b9:	shr    ecx,0x2
  4246bc:	add    edi,0x1
  4246bf:	cmp    ecx,0x8
  4246c2:	jb     0x42464c
  4246c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c6:	jmp    DWORD PTR [edx*4+0x42473c]
  4246cd:	lea    ecx,[ecx+0x0]
  4246d0:	xor    eax,DWORD PTR [edi+0x42]
  4246d3:	add    BYTE PTR [eax],ah
  4246d5:	inc    edi
  4246d6:	inc    edx
  4246d7:	add    BYTE PTR [eax],bl
  4246d9:	inc    edi
  4246da:	inc    edx
  4246db:	add    BYTE PTR [eax],dl
  4246dd:	inc    edi
  4246de:	inc    edx
  4246df:	add    BYTE PTR [eax],cl
  4246e1:	inc    edi
  4246e2:	inc    edx
  4246e3:	add    BYTE PTR [eax],al
  4246e5:	inc    edi
  4246e6:	inc    edx
  4246e7:	add    al,bh
  4246e9:	inc    esi
  4246ea:	inc    edx
  4246eb:	add    al,dh
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246f5:	inc    esp
  4246f6:	(bad)  
  4246f7:	in     al,0x8b
  4246f9:	inc    esp
  4246fa:	mov    gs,eax
  4246fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424700:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424704:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424708:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42470c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  424710:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  424714:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  424718:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42471c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  424720:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  424724:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  424728:	lea    eax,[ecx*4+0x0]
  42472f:	add    esi,eax
  424731:	add    edi,eax
  424733:	jmp    DWORD PTR [edx*4+0x42473c]
  42473a:	mov    edi,edi
  42473c:	dec    esp
  42473d:	inc    edi
  42473e:	inc    edx
  42473f:	add    BYTE PTR [edi+eax*2+0x42],dl
  424743:	add    BYTE PTR [eax+0x47],ah
  424746:	inc    edx
  424747:	add    BYTE PTR [edi+eax*2+0x42],dh
  42474b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424751:	leave  
  424752:	ret    
  424753:	nop
  424754:	mov    al,BYTE PTR [esi]
  424756:	mov    BYTE PTR [edi],al
  424758:	mov    eax,DWORD PTR [ebp+0x8]
  42475b:	pop    esi
  42475c:	pop    edi
  42475d:	leave  
  42475e:	ret    
  42475f:	nop
  424760:	mov    al,BYTE PTR [esi]
  424762:	mov    BYTE PTR [edi],al
  424764:	mov    al,BYTE PTR [esi+0x1]
  424767:	mov    BYTE PTR [edi+0x1],al
  42476a:	mov    eax,DWORD PTR [ebp+0x8]
  42476d:	pop    esi
  42476e:	pop    edi
  42476f:	leave  
  424770:	ret    
  424771:	lea    ecx,[ecx+0x0]
  424774:	mov    al,BYTE PTR [esi]
  424776:	mov    BYTE PTR [edi],al
  424778:	mov    al,BYTE PTR [esi+0x1]
  42477b:	mov    BYTE PTR [edi+0x1],al
  42477e:	mov    al,BYTE PTR [esi+0x2]
  424781:	mov    BYTE PTR [edi+0x2],al
  424784:	mov    eax,DWORD PTR [ebp+0x8]
  424787:	pop    esi
  424788:	pop    edi
  424789:	leave  
  42478a:	ret    
  42478b:	nop
  42478c:	lea    esi,[ecx+esi*1-0x4]
  424790:	lea    edi,[ecx+edi*1-0x4]
  424794:	test   edi,0x3
  42479a:	jne    0x4247c0
  42479c:	shr    ecx,0x2
  42479f:	and    edx,0x3
  4247a2:	cmp    ecx,0x8
  4247a5:	jb     0x4247b4
  4247a7:	std    
  4247a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247aa:	cld    
  4247ab:	jmp    DWORD PTR [edx*4+0x4248d8]
  4247b2:	mov    edi,edi
  4247b4:	neg    ecx
  4247b6:	jmp    DWORD PTR [ecx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    eax,edi
  4247c2:	mov    edx,0x3
  4247c7:	cmp    ecx,0x4
  4247ca:	jb     0x4247d8
  4247cc:	and    eax,0x3
  4247cf:	sub    ecx,eax
  4247d1:	jmp    DWORD PTR [eax*4+0x4247dc]
  4247d8:	jmp    DWORD PTR [ecx*4+0x4248d8]
  4247df:	nop
  4247e0:	in     al,dx
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],dl
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax],bh
  4247e9:	dec    eax
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247f1:	mov    BYTE PTR [edi+0x3],al
  4247f4:	sub    esi,0x1
  4247f7:	shr    ecx,0x2
  4247fa:	sub    edi,0x1
  4247fd:	cmp    ecx,0x8
  424800:	jb     0x4247b4
  424802:	std    
  424803:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424805:	cld    
  424806:	jmp    DWORD PTR [edx*4+0x4248d8]
  42480d:	lea    ecx,[ecx+0x0]
  424810:	mov    al,BYTE PTR [esi+0x3]
  424813:	and    edx,ecx
  424815:	mov    BYTE PTR [edi+0x3],al
  424818:	mov    al,BYTE PTR [esi+0x2]
  42481b:	shr    ecx,0x2
  42481e:	mov    BYTE PTR [edi+0x2],al
  424821:	sub    esi,0x2
  424824:	sub    edi,0x2
  424827:	cmp    ecx,0x8
  42482a:	jb     0x4247b4
  42482c:	std    
  42482d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42482f:	cld    
  424830:	jmp    DWORD PTR [edx*4+0x4248d8]
  424837:	nop
  424838:	mov    al,BYTE PTR [esi+0x3]
  42483b:	and    edx,ecx
  42483d:	mov    BYTE PTR [edi+0x3],al
  424840:	mov    al,BYTE PTR [esi+0x2]
  424843:	mov    BYTE PTR [edi+0x2],al
  424846:	mov    al,BYTE PTR [esi+0x1]
  424849:	shr    ecx,0x2
  42484c:	mov    BYTE PTR [edi+0x1],al
  42484f:	sub    esi,0x3
  424852:	sub    edi,0x3
  424855:	cmp    ecx,0x8
  424858:	jb     0x4247b4
  42485e:	std    
  42485f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424861:	cld    
  424862:	jmp    DWORD PTR [edx*4+0x4248d8]
  424869:	lea    ecx,[ecx+0x0]
  42486c:	mov    WORD PTR [eax+0x42],cs
  42486f:	add    BYTE PTR [eax+ecx*2+0x489c0042],dl
  424876:	inc    edx
  424877:	add    BYTE PTR [eax+ecx*2+0x48ac0042],ah
  42487e:	inc    edx
  42487f:	add    BYTE PTR [eax+ecx*2+0x48bc0042],dh
  424886:	inc    edx
  424887:	add    bh,cl
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424891:	inc    esp
  424892:	(bad)  
  424893:	sbb    al,0x8b
  424895:	inc    esp
  424896:	mov    ds,WORD PTR [eax]
  424898:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42489c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4248a0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4248a4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4248a8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4248ac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4248b0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4248b4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4248b8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4248bc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4248c0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4248c4:	lea    eax,[ecx*4+0x0]
  4248cb:	add    esi,eax
  4248cd:	add    edi,eax
  4248cf:	jmp    DWORD PTR [edx*4+0x4248d8]
  4248d6:	mov    edi,edi
  4248d8:	call   0xf0428b25
  4248dd:	dec    eax
  4248de:	inc    edx
  4248df:	add    BYTE PTR [eax],al
  4248e1:	dec    ecx
  4248e2:	inc    edx
  4248e3:	add    BYTE PTR [ecx+ecx*2],dl
  4248e6:	inc    edx
  4248e7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4248ed:	leave  
  4248ee:	ret    
  4248ef:	nop
  4248f0:	mov    al,BYTE PTR [esi+0x3]
  4248f3:	mov    BYTE PTR [edi+0x3],al
  4248f6:	mov    eax,DWORD PTR [ebp+0x8]
  4248f9:	pop    esi
  4248fa:	pop    edi
  4248fb:	leave  
  4248fc:	ret    
  4248fd:	lea    ecx,[ecx+0x0]
  424900:	mov    al,BYTE PTR [esi+0x3]
  424903:	mov    BYTE PTR [edi+0x3],al
  424906:	mov    al,BYTE PTR [esi+0x2]
  424909:	mov    BYTE PTR [edi+0x2],al
  42490c:	mov    eax,DWORD PTR [ebp+0x8]
  42490f:	pop    esi
  424910:	pop    edi
  424911:	leave  
  424912:	ret    
  424913:	nop
  424914:	mov    al,BYTE PTR [esi+0x3]
  424917:	mov    BYTE PTR [edi+0x3],al
  42491a:	mov    al,BYTE PTR [esi+0x2]
  42491d:	mov    BYTE PTR [edi+0x2],al
  424920:	mov    al,BYTE PTR [esi+0x1]
  424923:	mov    BYTE PTR [edi+0x1],al
  424926:	mov    eax,DWORD PTR [ebp+0x8]
  424929:	pop    esi
  42492a:	pop    edi
  42492b:	leave  
  42492c:	ret    
  42492d:	push   DWORD PTR [esp+0x4]
  424931:	call   DWORD PTR ds:0x4280ac
  424937:	xor    eax,eax
  424939:	inc    eax
  42493a:	ret    0x8
  42493d:	push   0x10
  42493f:	push   0x4285c0
  424944:	call   0x4238a8
  424949:	mov    eax,ds:0x45cd88
  42494e:	test   eax,eax
  424950:	jne    0x424989
  424952:	cmp    DWORD PTR ds:0x45cac4,0x1
  424959:	je     0x42497f
  42495b:	push   0x4285ac
  424960:	call   DWORD PTR ds:0x428018
  424966:	test   eax,eax
  424968:	je     0x42497f
  42496a:	push   0x428584
  42496f:	push   eax
  424970:	call   DWORD PTR ds:0x42801c
  424976:	mov    ds:0x45cd88,eax
  42497b:	test   eax,eax
  42497d:	jne    0x424989
  42497f:	mov    eax,0x42492d
  424984:	mov    ds:0x45cd88,eax
  424989:	and    DWORD PTR [ebp-0x4],0x0
  42498d:	push   DWORD PTR [ebp+0xc]
  424990:	push   DWORD PTR [ebp+0x8]
  424993:	call   eax
  424995:	mov    DWORD PTR [ebp-0x1c],eax
  424998:	jmp    0x4249be
  42499a:	mov    eax,DWORD PTR [ebp-0x14]
  42499d:	mov    eax,DWORD PTR [eax]
  42499f:	mov    eax,DWORD PTR [eax]
  4249a1:	mov    DWORD PTR [ebp-0x20],eax
  4249a4:	xor    eax,eax
  4249a6:	inc    eax
  4249a7:	ret    
  4249a8:	mov    esp,DWORD PTR [ebp-0x18]
  4249ab:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  4249b2:	jne    0x4249bc
  4249b4:	push   0x8
  4249b6:	call   DWORD PTR ds:0x42806c
  4249bc:	xor    eax,eax
  4249be:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249c2:	call   0x4238e3
  4249c7:	ret    
  4249c8:	push   0x10
  4249ca:	push   0x4285d0
  4249cf:	call   0x4238a8
  4249d4:	mov    esi,DWORD PTR [ebp+0x8]
  4249d7:	imul   esi,DWORD PTR [ebp+0xc]
  4249db:	mov    DWORD PTR [ebp-0x1c],esi
  4249de:	test   esi,esi
  4249e0:	jne    0x4249e3
  4249e2:	inc    esi
  4249e3:	xor    edi,edi
  4249e5:	mov    DWORD PTR [ebp-0x20],edi
  4249e8:	cmp    esi,0xffffffe0
  4249eb:	ja     0x424a52
  4249ed:	cmp    DWORD PTR ds:0x45d144,0x3
  4249f4:	jne    0x424a3d
  4249f6:	add    esi,0xf
  4249f9:	and    esi,0xfffffff0
  4249fc:	mov    DWORD PTR [ebp+0xc],esi
  4249ff:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a02:	cmp    ebx,DWORD PTR ds:0x45cf04
  424a08:	ja     0x424a3d
  424a0a:	push   0x4
  424a0c:	call   0x423a6f
  424a11:	pop    ecx
  424a12:	and    DWORD PTR [ebp-0x4],edi
  424a15:	push   ebx
  424a16:	call   0x425471
  424a1b:	pop    ecx
  424a1c:	mov    DWORD PTR [ebp-0x20],eax
  424a1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a23:	call   0x424a72
  424a28:	mov    edi,DWORD PTR [ebp-0x20]
  424a2b:	test   edi,edi
  424a2d:	je     0x424a41
  424a2f:	push   DWORD PTR [ebp-0x1c]
  424a32:	push   0x0
  424a34:	push   edi
  424a35:	call   0x4261b0
  424a3a:	add    esp,0xc
  424a3d:	test   edi,edi
  424a3f:	jne    0x424a7b
  424a41:	push   esi
  424a42:	push   0x8
  424a44:	push   DWORD PTR ds:0x45d140
  424a4a:	call   DWORD PTR ds:0x4280a8
  424a50:	mov    edi,eax
  424a52:	test   edi,edi
  424a54:	jne    0x424a7b
  424a56:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a5c:	je     0x424a7b
  424a5e:	push   esi
  424a5f:	call   0x426192
  424a64:	pop    ecx
  424a65:	test   eax,eax
  424a67:	jne    0x4249e3
  424a6d:	jmp    0x424a7d
  424a6f:	mov    esi,DWORD PTR [ebp+0xc]
  424a72:	push   0x4
  424a74:	call   0x4239db
  424a79:	pop    ecx
  424a7a:	ret    
  424a7b:	mov    eax,edi
  424a7d:	call   0x4238e3
  424a82:	ret    
  424a83:	push   esi
  424a84:	mov    esi,DWORD PTR [esp+0x8]
  424a88:	mov    eax,DWORD PTR [esi+0x3c]
  424a8b:	push   edi
  424a8c:	xor    edi,edi
  424a8e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a94:	je     0x424af9
  424a96:	cmp    eax,edi
  424a98:	je     0x424af9
  424a9a:	mov    eax,DWORD PTR [esi+0x2c]
  424a9d:	cmp    DWORD PTR [eax],edi
  424a9f:	jne    0x424af9
  424aa1:	mov    eax,DWORD PTR [esi+0x34]
  424aa4:	cmp    eax,edi
  424aa6:	je     0x424ac4
  424aa8:	cmp    DWORD PTR [eax],edi
  424aaa:	jne    0x424ac4
  424aac:	cmp    eax,DWORD PTR ds:0x45cef0
  424ab2:	je     0x424ac4
  424ab4:	push   eax
  424ab5:	call   0x4244ba
  424aba:	push   DWORD PTR [esi+0x3c]
  424abd:	call   0x4263ff
  424ac2:	pop    ecx
  424ac3:	pop    ecx
  424ac4:	mov    eax,DWORD PTR [esi+0x30]
  424ac7:	cmp    eax,edi
  424ac9:	je     0x424ae7
  424acb:	cmp    DWORD PTR [eax],edi
  424acd:	jne    0x424ae7
  424acf:	cmp    eax,DWORD PTR ds:0x45cef4
  424ad5:	je     0x424ae7
  424ad7:	push   eax
  424ad8:	call   0x4244ba
  424add:	push   DWORD PTR [esi+0x3c]
  424ae0:	call   0x4263a0
  424ae5:	pop    ecx
  424ae6:	pop    ecx
  424ae7:	push   DWORD PTR [esi+0x2c]
  424aea:	call   0x4244ba
  424aef:	push   DWORD PTR [esi+0x3c]
  424af2:	call   0x4244ba
  424af7:	pop    ecx
  424af8:	pop    ecx
  424af9:	mov    eax,DWORD PTR [esi+0x40]
  424afc:	cmp    eax,DWORD PTR ds:0x45ceec
  424b02:	je     0x424b1c
  424b04:	cmp    eax,edi
  424b06:	je     0x424b1c
  424b08:	cmp    DWORD PTR [eax],edi
  424b0a:	jne    0x424b1c
  424b0c:	push   eax
  424b0d:	call   0x4244ba
  424b12:	push   DWORD PTR [esi+0x44]
  424b15:	call   0x4244ba
  424b1a:	pop    ecx
  424b1b:	pop    ecx
  424b1c:	mov    eax,DWORD PTR [esi+0x50]
  424b1f:	cmp    eax,DWORD PTR ds:0x45cdd0
  424b25:	je     0x424b43
  424b27:	cmp    eax,edi
  424b29:	je     0x424b43
  424b2b:	cmp    DWORD PTR [eax+0xb4],edi
  424b31:	jne    0x424b43
  424b33:	push   eax
  424b34:	call   0x426210
  424b39:	push   DWORD PTR [esi+0x50]
  424b3c:	call   0x4244ba
  424b41:	pop    ecx
  424b42:	pop    ecx
  424b43:	push   esi
  424b44:	call   0x4244ba
  424b49:	pop    ecx
  424b4a:	pop    edi
  424b4b:	pop    esi
  424b4c:	ret    
  424b4d:	push   esi
  424b4e:	call   0x42375d
  424b53:	mov    esi,eax
  424b55:	mov    eax,DWORD PTR [esi+0x64]
  424b58:	cmp    eax,DWORD PTR ds:0x45c58c
  424b5e:	je     0x424c0a
  424b64:	test   eax,eax
  424b66:	je     0x424b97
  424b68:	mov    ecx,DWORD PTR [eax+0x2c]
  424b6b:	dec    DWORD PTR [eax]
  424b6d:	test   ecx,ecx
  424b6f:	je     0x424b73
  424b71:	dec    DWORD PTR [ecx]
  424b73:	mov    ecx,DWORD PTR [eax+0x34]
  424b76:	test   ecx,ecx
  424b78:	je     0x424b7c
  424b7a:	dec    DWORD PTR [ecx]
  424b7c:	mov    ecx,DWORD PTR [eax+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	dec    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR [eax+0x40]
  424b88:	test   ecx,ecx
  424b8a:	je     0x424b8e
  424b8c:	dec    DWORD PTR [ecx]
  424b8e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b91:	dec    DWORD PTR [ecx+0xb4]
  424b97:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9d:	mov    DWORD PTR [esi+0x64],ecx
  424ba0:	mov    ecx,DWORD PTR ds:0x45c58c
  424ba6:	inc    DWORD PTR [ecx]
  424ba8:	mov    ecx,DWORD PTR ds:0x45c58c
  424bae:	mov    ecx,DWORD PTR [ecx+0x2c]
  424bb1:	test   ecx,ecx
  424bb3:	je     0x424bb7
  424bb5:	inc    DWORD PTR [ecx]
  424bb7:	mov    ecx,DWORD PTR ds:0x45c58c
  424bbd:	mov    ecx,DWORD PTR [ecx+0x34]
  424bc0:	test   ecx,ecx
  424bc2:	je     0x424bc6
  424bc4:	inc    DWORD PTR [ecx]
  424bc6:	mov    ecx,DWORD PTR ds:0x45c58c
  424bcc:	mov    ecx,DWORD PTR [ecx+0x30]
  424bcf:	test   ecx,ecx
  424bd1:	je     0x424bd5
  424bd3:	inc    DWORD PTR [ecx]
  424bd5:	mov    ecx,DWORD PTR ds:0x45c58c
  424bdb:	mov    ecx,DWORD PTR [ecx+0x40]
  424bde:	test   ecx,ecx
  424be0:	je     0x424be4
  424be2:	inc    DWORD PTR [ecx]
  424be4:	mov    ecx,DWORD PTR ds:0x45c58c
  424bea:	mov    ecx,DWORD PTR [ecx+0x4c]
  424bed:	inc    DWORD PTR [ecx+0xb4]
  424bf3:	test   eax,eax
  424bf5:	je     0x424c0a
  424bf7:	cmp    DWORD PTR [eax],0x0
  424bfa:	jne    0x424c0a
  424bfc:	cmp    eax,0x45c538
  424c01:	je     0x424c0a
  424c03:	push   eax
  424c04:	call   0x424a83
  424c09:	pop    ecx
  424c0a:	mov    eax,DWORD PTR [esi+0x64]
  424c0d:	pop    esi
  424c0e:	ret    
  424c0f:	push   0xc
  424c11:	push   0x428760
  424c16:	call   0x4238a8
  424c1b:	push   0xc
  424c1d:	call   0x423a6f
  424c22:	pop    ecx
  424c23:	and    DWORD PTR [ebp-0x4],0x0
  424c27:	call   0x424b4d
  424c2c:	mov    DWORD PTR [ebp-0x1c],eax
  424c2f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424c33:	call   0x424c41
  424c38:	mov    eax,DWORD PTR [ebp-0x1c]
  424c3b:	call   0x4238e3
  424c40:	ret    
  424c41:	push   0xc
  424c43:	call   0x4239db
  424c48:	pop    ecx
  424c49:	ret    
  424c4a:	push   0x140
  424c4f:	push   0x0
  424c51:	push   DWORD PTR ds:0x45d140
  424c57:	call   DWORD PTR ds:0x4280a8
  424c5d:	test   eax,eax
  424c5f:	mov    ds:0x45cf00,eax
  424c64:	jne    0x424c67
  424c66:	ret    
  424c67:	mov    ecx,DWORD PTR [esp+0x4]
  424c6b:	and    DWORD PTR ds:0x45cef8,0x0
  424c72:	and    DWORD PTR ds:0x45cefc,0x0
  424c79:	mov    ds:0x45cf08,eax
  424c7e:	xor    eax,eax
  424c80:	mov    DWORD PTR ds:0x45cf04,ecx
  424c86:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c90:	inc    eax
  424c91:	ret    
  424c92:	mov    eax,ds:0x45cefc
  424c97:	lea    ecx,[eax+eax*4]
  424c9a:	mov    eax,ds:0x45cf00
  424c9f:	lea    ecx,[eax+ecx*4]
  424ca2:	jmp    0x424cb6
  424ca4:	mov    edx,DWORD PTR [esp+0x4]
  424ca8:	sub    edx,DWORD PTR [eax+0xc]
  424cab:	cmp    edx,0x100000
  424cb1:	jb     0x424cbc
  424cb3:	add    eax,0x14
  424cb6:	cmp    eax,ecx
  424cb8:	jb     0x424ca4
  424cba:	xor    eax,eax
  424cbc:	ret    
  424cbd:	push   ebp
  424cbe:	mov    ebp,esp
  424cc0:	sub    esp,0x10
  424cc3:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ecx+0x10]
  424cc9:	push   esi
  424cca:	mov    esi,DWORD PTR [ebp+0xc]
  424ccd:	push   edi
  424cce:	mov    edi,esi
  424cd0:	sub    edi,DWORD PTR [ecx+0xc]
  424cd3:	add    esi,0xfffffffc
  424cd6:	shr    edi,0xf
  424cd9:	mov    ecx,edi
  424cdb:	imul   ecx,ecx,0x204
  424ce1:	lea    ecx,[ecx+eax*1+0x144]
  424ce8:	mov    DWORD PTR [ebp-0x10],ecx
  424ceb:	mov    ecx,DWORD PTR [esi]
  424ced:	dec    ecx
  424cee:	test   cl,0x1
  424cf1:	mov    DWORD PTR [ebp-0x4],ecx
  424cf4:	jne    0x424fd1
  424cfa:	push   ebx
  424cfb:	lea    ebx,[ecx+esi*1]
  424cfe:	mov    edx,DWORD PTR [ebx]
  424d00:	mov    DWORD PTR [ebp-0xc],edx
  424d03:	mov    edx,DWORD PTR [esi-0x4]
  424d06:	mov    DWORD PTR [ebp-0x8],edx
  424d09:	mov    edx,DWORD PTR [ebp-0xc]
  424d0c:	test   dl,0x1
  424d0f:	mov    DWORD PTR [ebp+0xc],ebx
  424d12:	jne    0x424d88
  424d14:	sar    edx,0x4
  424d17:	dec    edx
  424d18:	cmp    edx,0x3f
  424d1b:	jbe    0x424d20
  424d1d:	push   0x3f
  424d1f:	pop    edx
  424d20:	mov    ecx,DWORD PTR [ebx+0x4]
  424d23:	cmp    ecx,DWORD PTR [ebx+0x8]
  424d26:	jne    0x424d6a
  424d28:	cmp    edx,0x20
  424d2b:	mov    ebx,0x80000000
  424d30:	jae    0x424d4b
  424d32:	mov    ecx,edx
  424d34:	shr    ebx,cl
  424d36:	lea    ecx,[edx+eax*1+0x4]
  424d3a:	not    ebx
  424d3c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424d40:	dec    BYTE PTR [ecx]
  424d42:	jne    0x424d67
  424d44:	mov    ecx,DWORD PTR [ebp+0x8]
  424d47:	and    DWORD PTR [ecx],ebx
  424d49:	jmp    0x424d67
  424d4b:	lea    ecx,[edx-0x20]
  424d4e:	shr    ebx,cl
  424d50:	lea    ecx,[edx+eax*1+0x4]
  424d54:	not    ebx
  424d56:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d5d:	dec    BYTE PTR [ecx]
  424d5f:	jne    0x424d67
  424d61:	mov    ecx,DWORD PTR [ebp+0x8]
  424d64:	and    DWORD PTR [ecx+0x4],ebx
  424d67:	mov    ebx,DWORD PTR [ebp+0xc]
  424d6a:	mov    edx,DWORD PTR [ebx+0x8]
  424d6d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d70:	mov    ecx,DWORD PTR [ebp-0x4]
  424d73:	add    ecx,DWORD PTR [ebp-0xc]
  424d76:	mov    DWORD PTR [edx+0x4],ebx
  424d79:	mov    edx,DWORD PTR [ebp+0xc]
  424d7c:	mov    ebx,DWORD PTR [edx+0x4]
  424d7f:	mov    edx,DWORD PTR [edx+0x8]
  424d82:	mov    DWORD PTR [ebx+0x8],edx
  424d85:	mov    DWORD PTR [ebp-0x4],ecx
  424d88:	mov    edx,ecx
  424d8a:	sar    edx,0x4
  424d8d:	dec    edx
  424d8e:	cmp    edx,0x3f
  424d91:	jbe    0x424d96
  424d93:	push   0x3f
  424d95:	pop    edx
  424d96:	mov    ebx,DWORD PTR [ebp-0x8]
  424d99:	and    ebx,0x1
  424d9c:	mov    DWORD PTR [ebp-0xc],ebx
  424d9f:	jne    0x424e34
  424da5:	sub    esi,DWORD PTR [ebp-0x8]
  424da8:	mov    ebx,DWORD PTR [ebp-0x8]
  424dab:	sar    ebx,0x4
  424dae:	push   0x3f
  424db0:	mov    DWORD PTR [ebp+0xc],esi
  424db3:	dec    ebx
  424db4:	pop    esi
  424db5:	cmp    ebx,esi
  424db7:	jbe    0x424dbb
  424db9:	mov    ebx,esi
  424dbb:	add    ecx,DWORD PTR [ebp-0x8]
  424dbe:	mov    edx,ecx
  424dc0:	sar    edx,0x4
  424dc3:	dec    edx
  424dc4:	cmp    edx,esi
  424dc6:	mov    DWORD PTR [ebp-0x4],ecx
  424dc9:	jbe    0x424dcd
  424dcb:	mov    edx,esi
  424dcd:	cmp    ebx,edx
  424dcf:	je     0x424e2f
  424dd1:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd4:	mov    esi,DWORD PTR [ecx+0x4]
  424dd7:	cmp    esi,DWORD PTR [ecx+0x8]
  424dda:	jne    0x424e17
  424ddc:	cmp    ebx,0x20
  424ddf:	mov    esi,0x80000000
  424de4:	jae    0x424dfd
  424de6:	mov    ecx,ebx
  424de8:	shr    esi,cl
  424dea:	not    esi
  424dec:	and    DWORD PTR [eax+edi*4+0x44],esi
  424df0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424df4:	jne    0x424e17
  424df6:	mov    ecx,DWORD PTR [ebp+0x8]
  424df9:	and    DWORD PTR [ecx],esi
  424dfb:	jmp    0x424e17
  424dfd:	lea    ecx,[ebx-0x20]
  424e00:	shr    esi,cl
  424e02:	not    esi
  424e04:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e0b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e0f:	jne    0x424e17
  424e11:	mov    ecx,DWORD PTR [ebp+0x8]
  424e14:	and    DWORD PTR [ecx+0x4],esi
  424e17:	mov    ecx,DWORD PTR [ebp+0xc]
  424e1a:	mov    esi,DWORD PTR [ecx+0x8]
  424e1d:	mov    ecx,DWORD PTR [ecx+0x4]
  424e20:	mov    DWORD PTR [esi+0x4],ecx
  424e23:	mov    ecx,DWORD PTR [ebp+0xc]
  424e26:	mov    esi,DWORD PTR [ecx+0x4]
  424e29:	mov    ecx,DWORD PTR [ecx+0x8]
  424e2c:	mov    DWORD PTR [esi+0x8],ecx
  424e2f:	mov    esi,DWORD PTR [ebp+0xc]
  424e32:	jmp    0x424e37
  424e34:	mov    ebx,DWORD PTR [ebp+0x8]
  424e37:	cmp    DWORD PTR [ebp-0xc],0x0
  424e3b:	jne    0x424e45
  424e3d:	cmp    ebx,edx
  424e3f:	je     0x424ec5
  424e45:	mov    ecx,DWORD PTR [ebp-0x10]
  424e48:	lea    ecx,[ecx+edx*8]
  424e4b:	mov    ebx,DWORD PTR [ecx+0x4]
  424e4e:	mov    DWORD PTR [esi+0x8],ecx
  424e51:	mov    DWORD PTR [esi+0x4],ebx
  424e54:	mov    DWORD PTR [ecx+0x4],esi
  424e57:	mov    ecx,DWORD PTR [esi+0x4]
  424e5a:	mov    DWORD PTR [ecx+0x8],esi
  424e5d:	mov    ecx,DWORD PTR [esi+0x4]
  424e60:	cmp    ecx,DWORD PTR [esi+0x8]
  424e63:	jne    0x424ec5
  424e65:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e69:	mov    BYTE PTR [ebp+0xf],cl
  424e6c:	inc    cl
  424e6e:	cmp    edx,0x20
  424e71:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e75:	jae    0x424e9c
  424e77:	cmp    BYTE PTR [ebp+0xf],0x0
  424e7b:	jne    0x424e8b
  424e7d:	mov    ecx,edx
  424e7f:	mov    ebx,0x80000000
  424e84:	shr    ebx,cl
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	or     DWORD PTR [ecx],ebx
  424e8b:	mov    ebx,0x80000000
  424e90:	mov    ecx,edx
  424e92:	shr    ebx,cl
  424e94:	lea    eax,[eax+edi*4+0x44]
  424e98:	or     DWORD PTR [eax],ebx
  424e9a:	jmp    0x424ec5
  424e9c:	cmp    BYTE PTR [ebp+0xf],0x0
  424ea0:	jne    0x424eb2
  424ea2:	lea    ecx,[edx-0x20]
  424ea5:	mov    ebx,0x80000000
  424eaa:	shr    ebx,cl
  424eac:	mov    ecx,DWORD PTR [ebp+0x8]
  424eaf:	or     DWORD PTR [ecx+0x4],ebx
  424eb2:	lea    ecx,[edx-0x20]
  424eb5:	mov    edx,0x80000000
  424eba:	shr    edx,cl
  424ebc:	lea    eax,[eax+edi*4+0xc4]
  424ec3:	or     DWORD PTR [eax],edx
  424ec5:	mov    eax,DWORD PTR [ebp-0x4]
  424ec8:	mov    DWORD PTR [esi],eax
  424eca:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424ece:	mov    eax,DWORD PTR [ebp-0x10]
  424ed1:	dec    DWORD PTR [eax]
  424ed3:	jne    0x424fd0
  424ed9:	mov    eax,ds:0x45cef8
  424ede:	test   eax,eax
  424ee0:	je     0x424fc2
  424ee6:	mov    ecx,DWORD PTR ds:0x45cf10
  424eec:	mov    esi,DWORD PTR ds:0x428088
  424ef2:	push   0x4000
  424ef7:	shl    ecx,0xf
  424efa:	add    ecx,DWORD PTR [eax+0xc]
  424efd:	mov    ebx,0x8000
  424f02:	push   ebx
  424f03:	push   ecx
  424f04:	call   esi
  424f06:	mov    ecx,DWORD PTR ds:0x45cf10
  424f0c:	mov    eax,ds:0x45cef8
  424f11:	mov    edx,0x80000000
  424f16:	shr    edx,cl
  424f18:	or     DWORD PTR [eax+0x8],edx
  424f1b:	mov    eax,ds:0x45cef8
  424f20:	mov    eax,DWORD PTR [eax+0x10]
  424f23:	mov    ecx,DWORD PTR ds:0x45cf10
  424f29:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424f31:	mov    eax,ds:0x45cef8
  424f36:	mov    eax,DWORD PTR [eax+0x10]
  424f39:	dec    BYTE PTR [eax+0x43]
  424f3c:	mov    eax,ds:0x45cef8
  424f41:	mov    ecx,DWORD PTR [eax+0x10]
  424f44:	cmp    BYTE PTR [ecx+0x43],0x0
  424f48:	jne    0x424f53
  424f4a:	and    DWORD PTR [eax+0x4],0xfffffffe
  424f4e:	mov    eax,ds:0x45cef8
  424f53:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f57:	jne    0x424fc2
  424f59:	push   ebx
  424f5a:	push   0x0
  424f5c:	push   DWORD PTR [eax+0xc]
  424f5f:	call   esi
  424f61:	mov    eax,ds:0x45cef8
  424f66:	push   DWORD PTR [eax+0x10]
  424f69:	push   0x0
  424f6b:	push   DWORD PTR ds:0x45d140
  424f71:	call   DWORD PTR ds:0x42808c
  424f77:	mov    eax,ds:0x45cefc
  424f7c:	mov    edx,DWORD PTR ds:0x45cf00
  424f82:	lea    eax,[eax+eax*4]
  424f85:	shl    eax,0x2
  424f88:	mov    ecx,eax
  424f8a:	mov    eax,ds:0x45cef8
  424f8f:	sub    ecx,eax
  424f91:	lea    ecx,[ecx+edx*1-0x14]
  424f95:	push   ecx
  424f96:	lea    ecx,[eax+0x14]
  424f99:	push   ecx
  424f9a:	push   eax
  424f9b:	call   0x4267f0
  424fa0:	mov    eax,DWORD PTR [ebp+0x8]
  424fa3:	add    esp,0xc
  424fa6:	dec    DWORD PTR ds:0x45cefc
  424fac:	cmp    eax,DWORD PTR ds:0x45cef8
  424fb2:	jbe    0x424fb8
  424fb4:	sub    DWORD PTR [ebp+0x8],0x14
  424fb8:	mov    eax,ds:0x45cf00
  424fbd:	mov    ds:0x45cf08,eax
  424fc2:	mov    eax,DWORD PTR [ebp+0x8]
  424fc5:	mov    ds:0x45cef8,eax
  424fca:	mov    DWORD PTR ds:0x45cf10,edi
  424fd0:	pop    ebx
  424fd1:	pop    edi
  424fd2:	pop    esi
  424fd3:	leave  
  424fd4:	ret    
  424fd5:	mov    eax,ds:0x45cefc
  424fda:	mov    ecx,DWORD PTR ds:0x45cf0c
  424fe0:	push   edi
  424fe1:	xor    edi,edi
  424fe3:	cmp    eax,ecx
  424fe5:	jne    0x42501b
  424fe7:	lea    eax,[ecx+ecx*4+0x50]
  424feb:	shl    eax,0x2
  424fee:	push   eax
  424fef:	push   DWORD PTR ds:0x45cf00
  424ff5:	push   edi
  424ff6:	push   DWORD PTR ds:0x45d140
  424ffc:	call   DWORD PTR ds:0x4280b4
  425002:	cmp    eax,edi
  425004:	jne    0x42500a
  425006:	xor    eax,eax
  425008:	pop    edi
  425009:	ret    
  42500a:	add    DWORD PTR ds:0x45cf0c,0x10
  425011:	mov    ds:0x45cf00,eax
  425016:	mov    eax,ds:0x45cefc
  42501b:	mov    ecx,DWORD PTR ds:0x45cf00
  425021:	push   esi
  425022:	push   0x41c4
  425027:	push   0x8
  425029:	push   DWORD PTR ds:0x45d140
  42502f:	lea    eax,[eax+eax*4]
  425032:	lea    esi,[ecx+eax*4]
  425035:	call   DWORD PTR ds:0x4280a8
  42503b:	cmp    eax,edi
  42503d:	mov    DWORD PTR [esi+0x10],eax
  425040:	jne    0x425046
  425042:	xor    eax,eax
  425044:	jmp    0x425089
  425046:	push   0x4
  425048:	push   0x2000
  42504d:	push   0x100000
  425052:	push   edi
  425053:	call   DWORD PTR ds:0x4280b0
  425059:	cmp    eax,edi
  42505b:	mov    DWORD PTR [esi+0xc],eax
  42505e:	jne    0x425072
  425060:	push   DWORD PTR [esi+0x10]
  425063:	push   edi
  425064:	push   DWORD PTR ds:0x45d140
  42506a:	call   DWORD PTR ds:0x42808c
  425070:	jmp    0x425042
  425072:	or     DWORD PTR [esi+0x8],0xffffffff
  425076:	mov    DWORD PTR [esi],edi
  425078:	mov    DWORD PTR [esi+0x4],edi
  42507b:	inc    DWORD PTR ds:0x45cefc
  425081:	mov    eax,DWORD PTR [esi+0x10]
  425084:	or     DWORD PTR [eax],0xffffffff
  425087:	mov    eax,esi
  425089:	pop    esi
  42508a:	pop    edi
  42508b:	ret    
  42508c:	push   ebp
  42508d:	mov    ebp,esp
  42508f:	push   ecx
  425090:	push   ecx
  425091:	mov    ecx,DWORD PTR [ebp+0x8]
  425094:	mov    eax,DWORD PTR [ecx+0x8]
  425097:	push   ebx
  425098:	push   esi
  425099:	mov    esi,DWORD PTR [ecx+0x10]
  42509c:	push   edi
  42509d:	xor    ebx,ebx
  42509f:	jmp    0x4250a4
  4250a1:	shl    eax,1
  4250a3:	inc    ebx
  4250a4:	test   eax,eax
  4250a6:	jge    0x4250a1
  4250a8:	mov    eax,ebx
  4250aa:	imul   eax,eax,0x204
  4250b0:	lea    eax,[eax+esi*1+0x144]
  4250b7:	push   0x3f
  4250b9:	mov    DWORD PTR [ebp-0x8],eax
  4250bc:	pop    edx
  4250bd:	mov    DWORD PTR [eax+0x8],eax
  4250c0:	mov    DWORD PTR [eax+0x4],eax
  4250c3:	add    eax,0x8
  4250c6:	dec    edx
  4250c7:	jne    0x4250bd
  4250c9:	push   0x4
  4250cb:	mov    edi,ebx
  4250cd:	push   0x1000
  4250d2:	shl    edi,0xf
  4250d5:	add    edi,DWORD PTR [ecx+0xc]
  4250d8:	push   0x8000
  4250dd:	push   edi
  4250de:	call   DWORD PTR ds:0x4280b0
  4250e4:	test   eax,eax
  4250e6:	jne    0x4250f0
  4250e8:	or     eax,0xffffffff
  4250eb:	jmp    0x42518d
  4250f0:	lea    edx,[edi+0x7000]
  4250f6:	cmp    edi,edx
  4250f8:	mov    DWORD PTR [ebp-0x4],edx
  4250fb:	ja     0x425140
  4250fd:	mov    ecx,edx
  4250ff:	sub    ecx,edi
  425101:	shr    ecx,0xc
  425104:	lea    eax,[edi+0x10]
  425107:	inc    ecx
  425108:	or     DWORD PTR [eax-0x8],0xffffffff
  42510c:	or     DWORD PTR [eax+0xfec],0xffffffff
  425113:	lea    edx,[eax+0xffc]
  425119:	mov    DWORD PTR [eax],edx
  42511b:	lea    edx,[eax-0x1004]
  425121:	mov    DWORD PTR [eax-0x4],0xff0
  425128:	mov    DWORD PTR [eax+0x4],edx
  42512b:	mov    DWORD PTR [eax+0xfe8],0xff0
  425135:	add    eax,0x1000
  42513a:	dec    ecx
  42513b:	jne    0x425108
  42513d:	mov    edx,DWORD PTR [ebp-0x4]
  425140:	mov    eax,DWORD PTR [ebp-0x8]
  425143:	add    eax,0x1f8
  425148:	lea    ecx,[edi+0xc]
  42514b:	mov    DWORD PTR [eax+0x4],ecx
  42514e:	mov    DWORD PTR [ecx+0x8],eax
  425151:	lea    ecx,[edx+0xc]
  425154:	mov    DWORD PTR [eax+0x8],ecx
  425157:	mov    DWORD PTR [ecx+0x4],eax
  42515a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42515f:	xor    edi,edi
  425161:	inc    edi
  425162:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425169:	mov    al,BYTE PTR [esi+0x43]
  42516c:	mov    cl,al
  42516e:	inc    cl
  425170:	test   al,al
  425172:	mov    eax,DWORD PTR [ebp+0x8]
  425175:	mov    BYTE PTR [esi+0x43],cl
  425178:	jne    0x42517d
  42517a:	or     DWORD PTR [eax+0x4],edi
  42517d:	mov    edx,0x80000000
  425182:	mov    ecx,ebx
  425184:	shr    edx,cl
  425186:	not    edx
  425188:	and    DWORD PTR [eax+0x8],edx
  42518b:	mov    eax,ebx
  42518d:	pop    edi
  42518e:	pop    esi
  42518f:	pop    ebx
  425190:	leave  
  425191:	ret    
  425192:	push   ebp
  425193:	mov    ebp,esp
  425195:	sub    esp,0xc
  425198:	mov    ecx,DWORD PTR [ebp+0x8]
  42519b:	mov    eax,DWORD PTR [ecx+0x10]
  42519e:	push   ebx
  42519f:	push   esi
  4251a0:	mov    esi,DWORD PTR [ebp+0x10]
  4251a3:	push   edi
  4251a4:	mov    edi,DWORD PTR [ebp+0xc]
  4251a7:	mov    edx,edi
  4251a9:	sub    edx,DWORD PTR [ecx+0xc]
  4251ac:	add    esi,0x17
  4251af:	shr    edx,0xf
  4251b2:	mov    ecx,edx
  4251b4:	imul   ecx,ecx,0x204
  4251ba:	lea    ecx,[ecx+eax*1+0x144]
  4251c1:	mov    DWORD PTR [ebp-0xc],ecx
  4251c4:	mov    ecx,DWORD PTR [edi-0x4]
  4251c7:	and    esi,0xfffffff0
  4251ca:	dec    ecx
  4251cb:	cmp    esi,ecx
  4251cd:	lea    edi,[ecx+edi*1-0x4]
  4251d1:	mov    ebx,DWORD PTR [edi]
  4251d3:	mov    DWORD PTR [ebp+0x10],ecx
  4251d6:	mov    DWORD PTR [ebp-0x4],ebx
  4251d9:	jle    0x425334
  4251df:	test   bl,0x1
  4251e2:	jne    0x42532d
  4251e8:	add    ebx,ecx
  4251ea:	cmp    esi,ebx
  4251ec:	jg     0x42532d
  4251f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251f5:	sar    ecx,0x4
  4251f8:	dec    ecx
  4251f9:	cmp    ecx,0x3f
  4251fc:	mov    DWORD PTR [ebp-0x8],ecx
  4251ff:	jbe    0x425207
  425201:	push   0x3f
  425203:	pop    ecx
  425204:	mov    DWORD PTR [ebp-0x8],ecx
  425207:	mov    ebx,DWORD PTR [edi+0x4]
  42520a:	cmp    ebx,DWORD PTR [edi+0x8]
  42520d:	jne    0x425252
  42520f:	cmp    ecx,0x20
  425212:	mov    ebx,0x80000000
  425217:	jae    0x425233
  425219:	shr    ebx,cl
  42521b:	mov    ecx,DWORD PTR [ebp-0x8]
  42521e:	lea    ecx,[ecx+eax*1+0x4]
  425222:	not    ebx
  425224:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425228:	dec    BYTE PTR [ecx]
  42522a:	jne    0x425252
  42522c:	mov    ecx,DWORD PTR [ebp+0x8]
  42522f:	and    DWORD PTR [ecx],ebx
  425231:	jmp    0x425252
  425233:	add    ecx,0xffffffe0
  425236:	shr    ebx,cl
  425238:	mov    ecx,DWORD PTR [ebp-0x8]
  42523b:	lea    ecx,[ecx+eax*1+0x4]
  42523f:	not    ebx
  425241:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425248:	dec    BYTE PTR [ecx]
  42524a:	jne    0x425252
  42524c:	mov    ecx,DWORD PTR [ebp+0x8]
  42524f:	and    DWORD PTR [ecx+0x4],ebx
  425252:	mov    ecx,DWORD PTR [edi+0x8]
  425255:	mov    ebx,DWORD PTR [edi+0x4]
  425258:	mov    DWORD PTR [ecx+0x4],ebx
  42525b:	mov    ecx,DWORD PTR [edi+0x4]
  42525e:	mov    edi,DWORD PTR [edi+0x8]
  425261:	mov    DWORD PTR [ecx+0x8],edi
  425264:	mov    ecx,DWORD PTR [ebp+0x10]
  425267:	sub    ecx,esi
  425269:	add    DWORD PTR [ebp-0x4],ecx
  42526c:	cmp    DWORD PTR [ebp-0x4],0x0
  425270:	jle    0x42531b
  425276:	mov    edi,DWORD PTR [ebp-0x4]
  425279:	mov    ecx,DWORD PTR [ebp+0xc]
  42527c:	sar    edi,0x4
  42527f:	dec    edi
  425280:	cmp    edi,0x3f
  425283:	lea    ecx,[ecx+esi*1-0x4]
  425287:	jbe    0x42528c
  425289:	push   0x3f
  42528b:	pop    edi
  42528c:	mov    ebx,DWORD PTR [ebp-0xc]
  42528f:	lea    ebx,[ebx+edi*8]
  425292:	mov    DWORD PTR [ebp+0x10],ebx
  425295:	mov    ebx,DWORD PTR [ebx+0x4]
  425298:	mov    DWORD PTR [ecx+0x4],ebx
  42529b:	mov    ebx,DWORD PTR [ebp+0x10]
  42529e:	mov    DWORD PTR [ecx+0x8],ebx
  4252a1:	mov    DWORD PTR [ebx+0x4],ecx
  4252a4:	mov    ebx,DWORD PTR [ecx+0x4]
  4252a7:	mov    DWORD PTR [ebx+0x8],ecx
  4252aa:	mov    ebx,DWORD PTR [ecx+0x4]
  4252ad:	cmp    ebx,DWORD PTR [ecx+0x8]
  4252b0:	jne    0x425309
  4252b2:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  4252b6:	mov    BYTE PTR [ebp+0x13],cl
  4252b9:	inc    cl
  4252bb:	cmp    edi,0x20
  4252be:	mov    BYTE PTR [edi+eax*1+0x4],cl
  4252c2:	jae    0x4252e0
  4252c4:	cmp    BYTE PTR [ebp+0x13],0x0
  4252c8:	jne    0x4252d8
  4252ca:	mov    ecx,edi
  4252cc:	mov    ebx,0x80000000
  4252d1:	shr    ebx,cl
  4252d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4252d6:	or     DWORD PTR [ecx],ebx
  4252d8:	lea    eax,[eax+edx*4+0x44]
  4252dc:	mov    ecx,edi
  4252de:	jmp    0x425300
  4252e0:	cmp    BYTE PTR [ebp+0x13],0x0
  4252e4:	jne    0x4252f6
  4252e6:	lea    ecx,[edi-0x20]
  4252e9:	mov    ebx,0x80000000
  4252ee:	shr    ebx,cl
  4252f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252f3:	or     DWORD PTR [ecx+0x4],ebx
  4252f6:	lea    eax,[eax+edx*4+0xc4]
  4252fd:	lea    ecx,[edi-0x20]
  425300:	mov    edx,0x80000000
  425305:	shr    edx,cl
  425307:	or     DWORD PTR [eax],edx
  425309:	mov    edx,DWORD PTR [ebp+0xc]
  42530c:	mov    ecx,DWORD PTR [ebp-0x4]
  42530f:	lea    eax,[edx+esi*1-0x4]
  425313:	mov    DWORD PTR [eax],ecx
  425315:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  425319:	jmp    0x42531e
  42531b:	mov    edx,DWORD PTR [ebp+0xc]
  42531e:	lea    eax,[esi+0x1]
  425321:	mov    DWORD PTR [edx-0x4],eax
  425324:	mov    DWORD PTR [edx+esi*1-0x8],eax
  425328:	jmp    0x425469
  42532d:	xor    eax,eax
  42532f:	jmp    0x42546c
  425334:	jge    0x425469
  42533a:	mov    ebx,DWORD PTR [ebp+0xc]
  42533d:	sub    DWORD PTR [ebp+0x10],esi
  425340:	lea    ecx,[esi+0x1]
  425343:	mov    DWORD PTR [ebx-0x4],ecx
  425346:	lea    ebx,[ebx+esi*1-0x4]
  42534a:	mov    esi,DWORD PTR [ebp+0x10]
  42534d:	sar    esi,0x4
  425350:	dec    esi
  425351:	cmp    esi,0x3f
  425354:	mov    DWORD PTR [ebp+0xc],ebx
  425357:	mov    DWORD PTR [ebx-0x4],ecx
  42535a:	jbe    0x42535f
  42535c:	push   0x3f
  42535e:	pop    esi
  42535f:	test   BYTE PTR [ebp-0x4],0x1
  425363:	jne    0x4253e9
  425369:	mov    esi,DWORD PTR [ebp-0x4]
  42536c:	sar    esi,0x4
  42536f:	dec    esi
  425370:	cmp    esi,0x3f
  425373:	jbe    0x425378
  425375:	push   0x3f
  425377:	pop    esi
  425378:	mov    ecx,DWORD PTR [edi+0x4]
  42537b:	cmp    ecx,DWORD PTR [edi+0x8]
  42537e:	jne    0x4253c2
  425380:	cmp    esi,0x20
  425383:	mov    ebx,0x80000000
  425388:	jae    0x4253a3
  42538a:	mov    ecx,esi
  42538c:	shr    ebx,cl
  42538e:	lea    esi,[esi+eax*1+0x4]
  425392:	not    ebx
  425394:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425398:	dec    BYTE PTR [esi]
  42539a:	jne    0x4253bf
  42539c:	mov    ecx,DWORD PTR [ebp+0x8]
  42539f:	and    DWORD PTR [ecx],ebx
  4253a1:	jmp    0x4253bf
  4253a3:	lea    ecx,[esi-0x20]
  4253a6:	shr    ebx,cl
  4253a8:	lea    ecx,[esi+eax*1+0x4]
  4253ac:	not    ebx
  4253ae:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4253b5:	dec    BYTE PTR [ecx]
  4253b7:	jne    0x4253bf
  4253b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4253bc:	and    DWORD PTR [ecx+0x4],ebx
  4253bf:	mov    ebx,DWORD PTR [ebp+0xc]
  4253c2:	mov    ecx,DWORD PTR [edi+0x8]
  4253c5:	mov    esi,DWORD PTR [edi+0x4]
  4253c8:	mov    DWORD PTR [ecx+0x4],esi
  4253cb:	mov    esi,DWORD PTR [edi+0x8]
  4253ce:	mov    ecx,DWORD PTR [edi+0x4]
  4253d1:	mov    DWORD PTR [ecx+0x8],esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x10]
  4253d7:	add    esi,DWORD PTR [ebp-0x4]
  4253da:	mov    DWORD PTR [ebp+0x10],esi
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	jbe    0x4253e9
  4253e6:	push   0x3f
  4253e8:	pop    esi
  4253e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ec:	lea    ecx,[ecx+esi*8]
  4253ef:	mov    edi,DWORD PTR [ecx+0x4]
  4253f2:	mov    DWORD PTR [ebx+0x8],ecx
  4253f5:	mov    DWORD PTR [ebx+0x4],edi
  4253f8:	mov    DWORD PTR [ecx+0x4],ebx
  4253fb:	mov    ecx,DWORD PTR [ebx+0x4]
  4253fe:	mov    DWORD PTR [ecx+0x8],ebx
  425401:	mov    ecx,DWORD PTR [ebx+0x4]
  425404:	cmp    ecx,DWORD PTR [ebx+0x8]
  425407:	jne    0x425460
  425409:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42540d:	mov    BYTE PTR [ebp+0xf],cl
  425410:	inc    cl
  425412:	cmp    esi,0x20
  425415:	mov    BYTE PTR [esi+eax*1+0x4],cl
  425419:	jae    0x425437
  42541b:	cmp    BYTE PTR [ebp+0xf],0x0
  42541f:	jne    0x42542f
  425421:	mov    ecx,esi
  425423:	mov    edi,0x80000000
  425428:	shr    edi,cl
  42542a:	mov    ecx,DWORD PTR [ebp+0x8]
  42542d:	or     DWORD PTR [ecx],edi
  42542f:	lea    eax,[eax+edx*4+0x44]
  425433:	mov    ecx,esi
  425435:	jmp    0x425457
  425437:	cmp    BYTE PTR [ebp+0xf],0x0
  42543b:	jne    0x42544d
  42543d:	lea    ecx,[esi-0x20]
  425440:	mov    edi,0x80000000
  425445:	shr    edi,cl
  425447:	mov    ecx,DWORD PTR [ebp+0x8]
  42544a:	or     DWORD PTR [ecx+0x4],edi
  42544d:	lea    eax,[eax+edx*4+0xc4]
  425454:	lea    ecx,[esi-0x20]
  425457:	mov    edx,0x80000000
  42545c:	shr    edx,cl
  42545e:	or     DWORD PTR [eax],edx
  425460:	mov    eax,DWORD PTR [ebp+0x10]
  425463:	mov    DWORD PTR [ebx],eax
  425465:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425469:	xor    eax,eax
  42546b:	inc    eax
  42546c:	pop    edi
  42546d:	pop    esi
  42546e:	pop    ebx
  42546f:	leave  
  425470:	ret    
  425471:	push   ebp
  425472:	mov    ebp,esp
  425474:	sub    esp,0x14
  425477:	mov    ecx,DWORD PTR [ebp+0x8]
  42547a:	mov    eax,ds:0x45cefc
  42547f:	mov    edx,DWORD PTR ds:0x45cf00
  425485:	add    ecx,0x17
  425488:	and    ecx,0xfffffff0
  42548b:	push   ebx
  42548c:	mov    DWORD PTR [ebp-0x10],ecx
  42548f:	sar    ecx,0x4
  425492:	push   esi
  425493:	lea    eax,[eax+eax*4]
  425496:	push   edi
  425497:	dec    ecx
  425498:	cmp    ecx,0x20
  42549b:	lea    edi,[edx+eax*4]
  42549e:	mov    DWORD PTR [ebp-0x4],edi
  4254a1:	jge    0x4254ae
  4254a3:	or     esi,0xffffffff
  4254a6:	shr    esi,cl
  4254a8:	or     DWORD PTR [ebp-0x8],0xffffffff
  4254ac:	jmp    0x4254bb
  4254ae:	add    ecx,0xffffffe0
  4254b1:	or     eax,0xffffffff
  4254b4:	xor    esi,esi
  4254b6:	shr    eax,cl
  4254b8:	mov    DWORD PTR [ebp-0x8],eax
  4254bb:	mov    eax,ds:0x45cf08
  4254c0:	mov    ebx,eax
  4254c2:	mov    DWORD PTR [ebp-0xc],esi
  4254c5:	cmp    ebx,edi
  4254c7:	jmp    0x4254dd
  4254c9:	mov    ecx,DWORD PTR [ebx+0x4]
  4254cc:	mov    edi,DWORD PTR [ebx]
  4254ce:	and    ecx,DWORD PTR [ebp-0x8]
  4254d1:	and    edi,esi
  4254d3:	or     ecx,edi
  4254d5:	jne    0x4254e2
  4254d7:	add    ebx,0x14
  4254da:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254dd:	mov    DWORD PTR [ebp+0x8],ebx
  4254e0:	jb     0x4254c9
  4254e2:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254e5:	jne    0x42550b
  4254e7:	mov    ebx,edx
  4254e9:	jmp    0x4254fc
  4254eb:	mov    ecx,DWORD PTR [ebx+0x4]
  4254ee:	mov    edi,DWORD PTR [ebx]
  4254f0:	and    ecx,DWORD PTR [ebp-0x8]
  4254f3:	and    edi,esi
  4254f5:	or     ecx,edi
  4254f7:	jne    0x425503
  4254f9:	add    ebx,0x14
  4254fc:	cmp    ebx,eax
  4254fe:	mov    DWORD PTR [ebp+0x8],ebx
  425501:	jb     0x4254eb
  425503:	cmp    ebx,eax
  425505:	je     0x42559f
  42550b:	mov    DWORD PTR ds:0x45cf08,ebx
  425511:	mov    eax,DWORD PTR [ebx+0x10]
  425514:	mov    edx,DWORD PTR [eax]
  425516:	cmp    edx,0xffffffff
  425519:	mov    DWORD PTR [ebp-0x4],edx
  42551c:	je     0x425532
  42551e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  425525:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  425529:	and    ecx,DWORD PTR [ebp-0x8]
  42552c:	and    edi,esi
  42552e:	or     ecx,edi
  425530:	jne    0x425568
  425532:	mov    edx,DWORD PTR [eax+0xc4]
  425538:	and    edx,DWORD PTR [ebp-0x8]
  42553b:	and    DWORD PTR [ebp-0x4],0x0
  42553f:	lea    ecx,[eax+0x44]
  425542:	mov    esi,DWORD PTR [ecx]
  425544:	and    esi,DWORD PTR [ebp-0xc]
  425547:	or     edx,esi
  425549:	mov    esi,DWORD PTR [ebp-0xc]
  42554c:	jne    0x425565
  42554e:	mov    edx,DWORD PTR [ecx+0x84]
  425554:	and    edx,DWORD PTR [ebp-0x8]
  425557:	inc    DWORD PTR [ebp-0x4]
  42555a:	add    ecx,0x4
  42555d:	mov    edi,DWORD PTR [ecx]
  42555f:	and    edi,esi
  425561:	or     edx,edi
  425563:	je     0x42554e
  425565:	mov    edx,DWORD PTR [ebp-0x4]
  425568:	mov    ecx,edx
  42556a:	imul   ecx,ecx,0x204
  425570:	lea    ecx,[ecx+eax*1+0x144]
  425577:	mov    DWORD PTR [ebp-0xc],ecx
  42557a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42557e:	xor    edi,edi
  425580:	and    ecx,esi
  425582:	jne    0x4255f1
  425584:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42558b:	and    ecx,DWORD PTR [ebp-0x8]
  42558e:	push   0x20
  425590:	pop    edi
  425591:	jmp    0x4255f1
  425593:	cmp    DWORD PTR [ebx+0x8],0x0
  425597:	jne    0x4255a4
  425599:	add    ebx,0x14
  42559c:	mov    DWORD PTR [ebp+0x8],ebx
  42559f:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a2:	jb     0x425593
  4255a4:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a7:	jne    0x4255cf
  4255a9:	mov    ebx,edx
  4255ab:	jmp    0x4255b6
  4255ad:	cmp    DWORD PTR [ebx+0x8],0x0
  4255b1:	jne    0x4255bd
  4255b3:	add    ebx,0x14
  4255b6:	cmp    ebx,eax
  4255b8:	mov    DWORD PTR [ebp+0x8],ebx
  4255bb:	jb     0x4255ad
  4255bd:	cmp    ebx,eax
  4255bf:	jne    0x4255cf
  4255c1:	call   0x424fd5
  4255c6:	mov    ebx,eax
  4255c8:	test   ebx,ebx
  4255ca:	mov    DWORD PTR [ebp+0x8],ebx
  4255cd:	je     0x4255e7
  4255cf:	push   ebx
  4255d0:	call   0x42508c
  4255d5:	pop    ecx
  4255d6:	mov    ecx,DWORD PTR [ebx+0x10]
  4255d9:	mov    DWORD PTR [ecx],eax
  4255db:	mov    eax,DWORD PTR [ebx+0x10]
  4255de:	cmp    DWORD PTR [eax],0xffffffff
  4255e1:	jne    0x42550b
  4255e7:	xor    eax,eax
  4255e9:	jmp    0x425768
  4255ee:	shl    ecx,1
  4255f0:	inc    edi
  4255f1:	test   ecx,ecx
  4255f3:	jge    0x4255ee
  4255f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255f8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255fc:	mov    ecx,DWORD PTR [edx]
  4255fe:	sub    ecx,DWORD PTR [ebp-0x10]
  425601:	mov    esi,ecx
  425603:	sar    esi,0x4
  425606:	dec    esi
  425607:	cmp    esi,0x3f
  42560a:	mov    DWORD PTR [ebp-0x8],ecx
  42560d:	jle    0x425612
  42560f:	push   0x3f
  425611:	pop    esi
  425612:	cmp    esi,edi
  425614:	je     0x42571b
  42561a:	mov    ecx,DWORD PTR [edx+0x4]
  42561d:	cmp    ecx,DWORD PTR [edx+0x8]
  425620:	jne    0x42567e
  425622:	cmp    edi,0x20
  425625:	mov    ebx,0x80000000
  42562a:	jge    0x425652
  42562c:	mov    ecx,edi
  42562e:	shr    ebx,cl
  425630:	mov    ecx,DWORD PTR [ebp-0x4]
  425633:	lea    edi,[eax+edi*1+0x4]
  425637:	not    ebx
  425639:	mov    DWORD PTR [ebp-0x14],ebx
  42563c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  425640:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  425644:	dec    BYTE PTR [edi]
  425646:	jne    0x42567b
  425648:	mov    ecx,DWORD PTR [ebp-0x14]
  42564b:	mov    ebx,DWORD PTR [ebp+0x8]
  42564e:	and    DWORD PTR [ebx],ecx
  425650:	jmp    0x42567e
  425652:	lea    ecx,[edi-0x20]
  425655:	shr    ebx,cl
  425657:	mov    ecx,DWORD PTR [ebp-0x4]
  42565a:	lea    ecx,[eax+ecx*4+0xc4]
  425661:	lea    edi,[eax+edi*1+0x4]
  425665:	not    ebx
  425667:	and    DWORD PTR [ecx],ebx
  425669:	dec    BYTE PTR [edi]
  42566b:	mov    DWORD PTR [ebp-0x14],ebx
  42566e:	jne    0x42567b
  425670:	mov    ebx,DWORD PTR [ebp+0x8]
  425673:	mov    ecx,DWORD PTR [ebp-0x14]
  425676:	and    DWORD PTR [ebx+0x4],ecx
  425679:	jmp    0x42567e
  42567b:	mov    ebx,DWORD PTR [ebp+0x8]
  42567e:	cmp    DWORD PTR [ebp-0x8],0x0
  425682:	mov    ecx,DWORD PTR [edx+0x8]
  425685:	mov    edi,DWORD PTR [edx+0x4]
  425688:	mov    DWORD PTR [ecx+0x4],edi
  42568b:	mov    ecx,DWORD PTR [edx+0x4]
  42568e:	mov    edi,DWORD PTR [edx+0x8]
  425691:	mov    DWORD PTR [ecx+0x8],edi
  425694:	je     0x425727
  42569a:	mov    ecx,DWORD PTR [ebp-0xc]
  42569d:	lea    ecx,[ecx+esi*8]
  4256a0:	mov    edi,DWORD PTR [ecx+0x4]
  4256a3:	mov    DWORD PTR [edx+0x8],ecx
  4256a6:	mov    DWORD PTR [edx+0x4],edi
  4256a9:	mov    DWORD PTR [ecx+0x4],edx
  4256ac:	mov    ecx,DWORD PTR [edx+0x4]
  4256af:	mov    DWORD PTR [ecx+0x8],edx
  4256b2:	mov    ecx,DWORD PTR [edx+0x4]
  4256b5:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b8:	jne    0x425718
  4256ba:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4256be:	mov    BYTE PTR [ebp+0xb],cl
  4256c1:	inc    cl
  4256c3:	cmp    esi,0x20
  4256c6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4256ca:	jge    0x4256ef
  4256cc:	cmp    BYTE PTR [ebp+0xb],0x0
  4256d0:	jne    0x4256dd
  4256d2:	mov    edi,0x80000000
  4256d7:	mov    ecx,esi
  4256d9:	shr    edi,cl
  4256db:	or     DWORD PTR [ebx],edi
  4256dd:	mov    ecx,esi
  4256df:	mov    edi,0x80000000
  4256e4:	shr    edi,cl
  4256e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4256e9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4256ed:	jmp    0x425718
  4256ef:	cmp    BYTE PTR [ebp+0xb],0x0
  4256f3:	jne    0x425702
  4256f5:	lea    ecx,[esi-0x20]
  4256f8:	mov    edi,0x80000000
  4256fd:	shr    edi,cl
  4256ff:	or     DWORD PTR [ebx+0x4],edi
  425702:	mov    ecx,DWORD PTR [ebp-0x4]
  425705:	lea    edi,[eax+ecx*4+0xc4]
  42570c:	lea    ecx,[esi-0x20]
  42570f:	mov    esi,0x80000000
  425714:	shr    esi,cl
  425716:	or     DWORD PTR [edi],esi
  425718:	mov    ecx,DWORD PTR [ebp-0x8]
  42571b:	test   ecx,ecx
  42571d:	je     0x42572a
  42571f:	mov    DWORD PTR [edx],ecx
  425721:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  425725:	jmp    0x42572a
  425727:	mov    ecx,DWORD PTR [ebp-0x8]
  42572a:	mov    esi,DWORD PTR [ebp-0x10]
  42572d:	add    edx,ecx
  42572f:	lea    ecx,[esi+0x1]
  425732:	mov    DWORD PTR [edx],ecx
  425734:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  425738:	mov    esi,DWORD PTR [ebp-0xc]
  42573b:	mov    ecx,DWORD PTR [esi]
  42573d:	test   ecx,ecx
  42573f:	lea    edi,[ecx+0x1]
  425742:	mov    DWORD PTR [esi],edi
  425744:	jne    0x425760
  425746:	cmp    ebx,DWORD PTR ds:0x45cef8
  42574c:	jne    0x425760
  42574e:	mov    ecx,DWORD PTR [ebp-0x4]
  425751:	cmp    ecx,DWORD PTR ds:0x45cf10
  425757:	jne    0x425760
  425759:	and    DWORD PTR ds:0x45cef8,0x0
  425760:	mov    ecx,DWORD PTR [ebp-0x4]
  425763:	mov    DWORD PTR [eax],ecx
  425765:	lea    eax,[edx+0x4]
  425768:	pop    edi
  425769:	pop    esi
  42576a:	pop    ebx
  42576b:	leave  
  42576c:	ret    
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	push   esi
  425771:	inc    ebx
  425772:	xor    dh,BYTE PTR [eax]
  425774:	pop    eax
  425775:	inc    ebx
  425776:	xor    BYTE PTR [eax],dh
  425778:	push   ebp
  425779:	mov    ebp,esp
  42577b:	sub    esp,0x8
  42577e:	push   ebx
  42577f:	push   esi
  425780:	push   edi
  425781:	push   ebp
  425782:	cld    
  425783:	mov    ebx,DWORD PTR [ebp+0xc]
  425786:	mov    eax,DWORD PTR [ebp+0x8]
  425789:	test   DWORD PTR [eax+0x4],0x6
  425790:	jne    0x425818
  425796:	mov    DWORD PTR [ebp-0x8],eax
  425799:	mov    eax,DWORD PTR [ebp+0x10]
  42579c:	mov    DWORD PTR [ebp-0x4],eax
  42579f:	lea    eax,[ebp-0x8]
  4257a2:	mov    DWORD PTR [ebx-0x4],eax
  4257a5:	mov    esi,DWORD PTR [ebx+0xc]
  4257a8:	mov    edi,DWORD PTR [ebx+0x8]
  4257ab:	cmp    esi,0xffffffff
  4257ae:	je     0x425811
  4257b0:	lea    ecx,[esi+esi*2]
  4257b3:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  4257b8:	je     0x4257ff
  4257ba:	push   esi
  4257bb:	push   ebp
  4257bc:	lea    ebp,[ebx+0x10]
  4257bf:	call   DWORD PTR [edi+ecx*4+0x4]
  4257c3:	pop    ebp
  4257c4:	pop    esi
  4257c5:	mov    ebx,DWORD PTR [ebp+0xc]
  4257c8:	or     eax,eax
  4257ca:	je     0x4257ff
  4257cc:	js     0x42580a
  4257ce:	mov    edi,DWORD PTR [ebx+0x8]
  4257d1:	push   ebx
  4257d2:	call   0x426700
  4257d7:	add    esp,0x4
  4257da:	lea    ebp,[ebx+0x10]
  4257dd:	push   esi
  4257de:	push   ebx
  4257df:	call   0x426742
  4257e4:	add    esp,0x8
  4257e7:	lea    ecx,[esi+esi*2]
  4257ea:	push   0x1
  4257ec:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257f0:	call   0x4267d6
  4257f5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257f8:	mov    DWORD PTR [ebx+0xc],eax
  4257fb:	call   DWORD PTR [edi+ecx*4+0x8]
  4257ff:	mov    edi,DWORD PTR [ebx+0x8]
  425802:	lea    ecx,[esi+esi*2]
  425805:	mov    esi,DWORD PTR [edi+ecx*4]
  425808:	jmp    0x4257ab
  42580a:	mov    eax,0x0
  42580f:	jmp    0x42582d
  425811:	mov    eax,0x1
  425816:	jmp    0x42582d
  425818:	push   ebp
  425819:	lea    ebp,[ebx+0x10]
  42581c:	push   0xffffffff
  42581e:	push   ebx
  42581f:	call   0x426742
  425824:	add    esp,0x8
  425827:	pop    ebp
  425828:	mov    eax,0x1
  42582d:	pop    ebp
  42582e:	pop    edi
  42582f:	pop    esi
  425830:	pop    ebx
  425831:	mov    esp,ebp
  425833:	pop    ebp
  425834:	ret    
  425835:	push   ebp
  425836:	mov    ecx,DWORD PTR [esp+0x8]
  42583a:	mov    ebp,DWORD PTR [ecx]
  42583c:	mov    eax,DWORD PTR [ecx+0x1c]
  42583f:	push   eax
  425840:	mov    eax,DWORD PTR [ecx+0x18]
  425843:	push   eax
  425844:	call   0x426742
  425849:	add    esp,0x8
  42584c:	pop    ebp
  42584d:	ret    0x4
  425850:	call   0x42375d
  425855:	add    eax,0x8
  425858:	ret    
  425859:	push   0x14
  42585b:	push   0x428770
  425860:	call   0x4238a8
  425865:	mov    edi,DWORD PTR [ebp+0x8]
  425868:	xor    ebx,ebx
  42586a:	cmp    edi,ebx
  42586c:	jne    0x42587c
  42586e:	push   DWORD PTR [ebp+0xc]
  425871:	call   0x4245d2
  425876:	pop    ecx
  425877:	jmp    0x425a00
  42587c:	mov    esi,DWORD PTR [ebp+0xc]
  42587f:	cmp    esi,ebx
  425881:	jne    0x42588f
  425883:	push   edi
  425884:	call   0x4244ba
  425889:	pop    ecx
  42588a:	jmp    0x4259fe
  42588f:	cmp    DWORD PTR ds:0x45d144,0x3
  425896:	jne    0x4259ca
  42589c:	mov    DWORD PTR [ebp-0x1c],ebx
  42589f:	cmp    esi,0xffffffe0
  4258a2:	ja     0x425999
  4258a8:	push   0x4
  4258aa:	call   0x423a6f
  4258af:	pop    ecx
  4258b0:	mov    DWORD PTR [ebp-0x4],ebx
  4258b3:	push   edi
  4258b4:	call   0x424c92
  4258b9:	pop    ecx
  4258ba:	mov    DWORD PTR [ebp-0x20],eax
  4258bd:	cmp    eax,ebx
  4258bf:	je     0x425969
  4258c5:	cmp    esi,DWORD PTR ds:0x45cf04
  4258cb:	ja     0x425919
  4258cd:	push   esi
  4258ce:	push   edi
  4258cf:	push   eax
  4258d0:	call   0x425192
  4258d5:	add    esp,0xc
  4258d8:	test   eax,eax
  4258da:	je     0x4258e1
  4258dc:	mov    DWORD PTR [ebp-0x1c],edi
  4258df:	jmp    0x425919
  4258e1:	push   esi
  4258e2:	call   0x425471
  4258e7:	pop    ecx
  4258e8:	mov    DWORD PTR [ebp-0x1c],eax
  4258eb:	cmp    eax,ebx
  4258ed:	je     0x425919
  4258ef:	mov    eax,DWORD PTR [edi-0x4]
  4258f2:	dec    eax
  4258f3:	mov    DWORD PTR [ebp-0x24],eax
  4258f6:	cmp    eax,esi
  4258f8:	jb     0x4258fc
  4258fa:	mov    eax,esi
  4258fc:	push   eax
  4258fd:	push   edi
  4258fe:	push   DWORD PTR [ebp-0x1c]
  425901:	call   0x4245f0
  425906:	push   edi
  425907:	call   0x424c92
  42590c:	mov    DWORD PTR [ebp-0x20],eax
  42590f:	push   edi
  425910:	push   eax
  425911:	call   0x424cbd
  425916:	add    esp,0x18
  425919:	cmp    DWORD PTR [ebp-0x1c],ebx
  42591c:	jne    0x425969
  42591e:	cmp    esi,ebx
  425920:	jne    0x425928
  425922:	xor    esi,esi
  425924:	inc    esi
  425925:	mov    DWORD PTR [ebp+0xc],esi
  425928:	add    esi,0xf
  42592b:	and    esi,0xfffffff0
  42592e:	mov    DWORD PTR [ebp+0xc],esi
  425931:	push   esi
  425932:	push   ebx
  425933:	push   DWORD PTR ds:0x45d140
  425939:	call   DWORD PTR ds:0x4280a8
  42593f:	mov    DWORD PTR [ebp-0x1c],eax
  425942:	cmp    eax,ebx
  425944:	je     0x425969
  425946:	mov    eax,DWORD PTR [edi-0x4]
  425949:	dec    eax
  42594a:	mov    DWORD PTR [ebp-0x24],eax
  42594d:	cmp    eax,esi
  42594f:	jb     0x425953
  425951:	mov    eax,esi
  425953:	push   eax
  425954:	push   edi
  425955:	push   DWORD PTR [ebp-0x1c]
  425958:	call   0x4245f0
  42595d:	push   edi
  42595e:	push   DWORD PTR [ebp-0x20]
  425961:	call   0x424cbd
  425966:	add    esp,0x14
  425969:	or     DWORD PTR [ebp-0x4],0xffffffff
  42596d:	call   0x4259c1
  425972:	cmp    DWORD PTR [ebp-0x20],ebx
  425975:	jne    0x425999
  425977:	cmp    esi,ebx
  425979:	jne    0x42597e
  42597b:	xor    esi,esi
  42597d:	inc    esi
  42597e:	add    esi,0xf
  425981:	and    esi,0xfffffff0
  425984:	mov    DWORD PTR [ebp+0xc],esi
  425987:	push   esi
  425988:	push   edi
  425989:	push   ebx
  42598a:	push   DWORD PTR ds:0x45d140
  425990:	call   DWORD PTR ds:0x4280b4
  425996:	mov    DWORD PTR [ebp-0x1c],eax
  425999:	mov    eax,DWORD PTR [ebp-0x1c]
  42599c:	cmp    eax,ebx
  42599e:	jne    0x425a00
  4259a0:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a6:	je     0x425a00
  4259a8:	push   esi
  4259a9:	call   0x426192
  4259ae:	pop    ecx
  4259af:	test   eax,eax
  4259b1:	jne    0x42589c
  4259b7:	jmp    0x4259fe
  4259b9:	xor    ebx,ebx
  4259bb:	mov    esi,DWORD PTR [ebp+0xc]
  4259be:	mov    edi,DWORD PTR [ebp+0x8]
  4259c1:	push   0x4
  4259c3:	call   0x4239db
  4259c8:	pop    ecx
  4259c9:	ret    
  4259ca:	xor    eax,eax
  4259cc:	cmp    esi,0xffffffe0
  4259cf:	ja     0x4259e7
  4259d1:	cmp    esi,ebx
  4259d3:	jne    0x4259d8
  4259d5:	xor    esi,esi
  4259d7:	inc    esi
  4259d8:	push   esi
  4259d9:	push   edi
  4259da:	push   ebx
  4259db:	push   DWORD PTR ds:0x45d140
  4259e1:	call   DWORD PTR ds:0x4280b4
  4259e7:	cmp    eax,ebx
  4259e9:	jne    0x425a00
  4259eb:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259f1:	je     0x425a00
  4259f3:	push   esi
  4259f4:	call   0x426192
  4259f9:	pop    ecx
  4259fa:	test   eax,eax
  4259fc:	jne    0x4259ca
  4259fe:	xor    eax,eax
  425a00:	call   0x4238e3
  425a05:	ret    
  425a06:	push   0x10
  425a08:	push   0x428780
  425a0d:	call   0x4238a8
  425a12:	cmp    DWORD PTR ds:0x45d144,0x3
  425a19:	jne    0x425a55
  425a1b:	push   0x4
  425a1d:	call   0x423a6f
  425a22:	pop    ecx
  425a23:	and    DWORD PTR [ebp-0x4],0x0
  425a27:	mov    esi,DWORD PTR [ebp+0x8]
  425a2a:	push   esi
  425a2b:	call   0x424c92
  425a30:	pop    ecx
  425a31:	mov    DWORD PTR [ebp-0x1c],eax
  425a34:	test   eax,eax
  425a36:	je     0x425a43
  425a38:	mov    esi,DWORD PTR [esi-0x4]
  425a3b:	sub    esi,0x9
  425a3e:	mov    DWORD PTR [ebp-0x20],esi
  425a41:	jmp    0x425a46
  425a43:	mov    esi,DWORD PTR [ebp-0x20]
  425a46:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a4a:	call   0x425a73
  425a4f:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a53:	jne    0x425a68
  425a55:	push   DWORD PTR [ebp+0x8]
  425a58:	push   0x0
  425a5a:	push   DWORD PTR ds:0x45d140
  425a60:	call   DWORD PTR ds:0x4280b8
  425a66:	mov    esi,eax
  425a68:	mov    eax,esi
  425a6a:	call   0x4238e3
  425a6f:	ret    
  425a70:	mov    esi,DWORD PTR [ebp-0x20]
  425a73:	push   0x4
  425a75:	call   0x4239db
  425a7a:	pop    ecx
  425a7b:	ret    
  425a7c:	push   ebp
  425a7d:	mov    ebp,esp
  425a7f:	sub    esp,0x10
  425a82:	push   esi
  425a83:	lea    eax,[ebp-0x8]
  425a86:	push   eax
  425a87:	call   DWORD PTR ds:0x4280c8
  425a8d:	mov    esi,DWORD PTR [ebp-0x4]
  425a90:	xor    esi,DWORD PTR [ebp-0x8]
  425a93:	call   DWORD PTR ds:0x4280c4
  425a99:	xor    esi,eax
  425a9b:	call   DWORD PTR ds:0x428070
  425aa1:	xor    esi,eax
  425aa3:	call   DWORD PTR ds:0x4280c0
  425aa9:	xor    esi,eax
  425aab:	lea    eax,[ebp-0x10]
  425aae:	push   eax
  425aaf:	call   DWORD PTR ds:0x4280bc
  425ab5:	mov    eax,DWORD PTR [ebp-0xc]
  425ab8:	xor    eax,DWORD PTR [ebp-0x10]
  425abb:	xor    esi,eax
  425abd:	mov    DWORD PTR ds:0x45c430,esi
  425ac3:	jne    0x425acf
  425ac5:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425acf:	pop    esi
  425ad0:	leave  
  425ad1:	ret    
  425ad2:	push   0x118
  425ad7:	push   0x428930
  425adc:	call   0x4238a8
  425ae1:	mov    eax,ds:0x45c430
  425ae6:	xor    eax,DWORD PTR [ebp+0x4]
  425ae9:	mov    DWORD PTR [ebp-0x1c],eax
  425aec:	mov    eax,ds:0x45cd98
  425af1:	xor    ecx,ecx
  425af3:	cmp    eax,ecx
  425af5:	je     0x425b16
  425af7:	mov    DWORD PTR [ebp-0x4],ecx
  425afa:	push   DWORD PTR [ebp+0xc]
  425afd:	push   DWORD PTR [ebp+0x8]
  425b00:	call   eax
  425b02:	pop    ecx
  425b03:	pop    ecx
  425b04:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b08:	jmp    0x425c14
  425b0d:	xor    eax,eax
  425b0f:	inc    eax
  425b10:	ret    
  425b11:	mov    esp,DWORD PTR [ebp-0x18]
  425b14:	jmp    0x425b04
  425b16:	mov    eax,DWORD PTR [ebp+0x8]
  425b19:	dec    eax
  425b1a:	je     0x425b2f
  425b1c:	mov    edi,0x42890c
  425b21:	mov    DWORD PTR [ebp-0x20],0x428858
  425b28:	mov    esi,0xd4
  425b2d:	jmp    0x425b40
  425b2f:	mov    edi,0x428838
  425b34:	mov    DWORD PTR [ebp-0x20],0x428798
  425b3b:	mov    esi,0xb9
  425b40:	mov    BYTE PTR [ebp-0x24],cl
  425b43:	push   0x104
  425b48:	lea    eax,[ebp-0x128]
  425b4e:	push   eax
  425b4f:	push   ecx
  425b50:	call   DWORD PTR ds:0x428040
  425b56:	test   eax,eax
  425b58:	jne    0x425b6d
  425b5a:	push   0x42848c
  425b5f:	lea    eax,[ebp-0x128]
  425b65:	push   eax
  425b66:	call   0x423c90
  425b6b:	pop    ecx
  425b6c:	pop    ecx
  425b6d:	lea    ebx,[ebp-0x128]
  425b73:	lea    eax,[ebp-0x128]
  425b79:	push   eax
  425b7a:	call   0x423ec0
  425b7f:	pop    ecx
  425b80:	add    eax,0xb
  425b83:	cmp    eax,0x3c
  425b86:	jbe    0x425bb1
  425b88:	lea    eax,[ebp-0x128]
  425b8e:	push   eax
  425b8f:	call   0x423ec0
  425b94:	mov    ebx,eax
  425b96:	lea    eax,[ebp-0x128]
  425b9c:	sub    eax,0x31
  425b9f:	add    ebx,eax
  425ba1:	push   0x3
  425ba3:	push   0x428488
  425ba8:	push   ebx
  425ba9:	call   0x423d90
  425bae:	add    esp,0x10
  425bb1:	push   ebx
  425bb2:	call   0x423ec0
  425bb7:	pop    ecx
  425bb8:	lea    eax,[eax+esi*1+0xc]
  425bbc:	add    eax,0x3
  425bbf:	and    eax,0xfffffffc
  425bc2:	call   0x423900
  425bc7:	mov    DWORD PTR [ebp-0x18],esp
  425bca:	mov    esi,esp
  425bcc:	push   edi
  425bcd:	push   esi
  425bce:	call   0x423c90
  425bd3:	mov    edi,0x428468
  425bd8:	push   edi
  425bd9:	push   esi
  425bda:	call   0x423ca0
  425bdf:	push   0x42878c
  425be4:	push   esi
  425be5:	call   0x423ca0
  425bea:	push   ebx
  425beb:	push   esi
  425bec:	call   0x423ca0
  425bf1:	push   edi
  425bf2:	push   esi
  425bf3:	call   0x423ca0
  425bf8:	push   DWORD PTR [ebp-0x20]
  425bfb:	push   esi
  425bfc:	call   0x423ca0
  425c01:	push   0x12010
  425c06:	push   0x428440
  425c0b:	push   esi
  425c0c:	call   0x423b92
  425c11:	add    esp,0x3c
  425c14:	push   0x3
  425c16:	call   0x422d16
  425c1b:	int3   
  425c1c:	push   0x38
  425c1e:	push   0x428d50
  425c23:	call   0x4238a8
  425c28:	xor    ebx,ebx
  425c2a:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425c30:	jne    0x425c6a
  425c32:	push   ebx
  425c33:	push   ebx
  425c34:	xor    esi,esi
  425c36:	inc    esi
  425c37:	push   esi
  425c38:	push   0x428d4c
  425c3d:	push   0x100
  425c42:	push   ebx
  425c43:	call   DWORD PTR ds:0x4280d4
  425c49:	test   eax,eax
  425c4b:	je     0x425c55
  425c4d:	mov    DWORD PTR ds:0x45cdbc,esi
  425c53:	jmp    0x425c6a
  425c55:	call   DWORD PTR ds:0x428014
  425c5b:	cmp    eax,0x78
  425c5e:	jne    0x425c6a
  425c60:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c6a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c6d:	jle    0x425c8a
  425c6f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c72:	mov    eax,DWORD PTR [ebp+0x10]
  425c75:	dec    ecx
  425c76:	cmp    BYTE PTR [eax],bl
  425c78:	je     0x425c82
  425c7a:	inc    eax
  425c7b:	cmp    ecx,ebx
  425c7d:	jne    0x425c75
  425c7f:	or     ecx,0xffffffff
  425c82:	or     eax,0xffffffff
  425c85:	sub    eax,ecx
  425c87:	add    DWORD PTR [ebp+0x14],eax
  425c8a:	mov    eax,ds:0x45cdbc
  425c8f:	cmp    eax,0x2
  425c92:	je     0x425e74
  425c98:	cmp    eax,ebx
  425c9a:	je     0x425e74
  425ca0:	cmp    eax,0x1
  425ca3:	jne    0x425ea7
  425ca9:	xor    edi,edi
  425cab:	mov    DWORD PTR [ebp-0x1c],edi
  425cae:	mov    DWORD PTR [ebp-0x20],ebx
  425cb1:	mov    DWORD PTR [ebp-0x24],ebx
  425cb4:	cmp    DWORD PTR [ebp+0x20],ebx
  425cb7:	jne    0x425cc1
  425cb9:	mov    eax,ds:0x45cdb4
  425cbe:	mov    DWORD PTR [ebp+0x20],eax
  425cc1:	push   ebx
  425cc2:	push   ebx
  425cc3:	push   DWORD PTR [ebp+0x14]
  425cc6:	push   DWORD PTR [ebp+0x10]
  425cc9:	xor    eax,eax
  425ccb:	cmp    DWORD PTR [ebp+0x24],ebx
  425cce:	setne  al
  425cd1:	lea    eax,[eax*8+0x1]
  425cd8:	push   eax
  425cd9:	push   DWORD PTR [ebp+0x20]
  425cdc:	call   DWORD PTR ds:0x4280d0
  425ce2:	mov    esi,eax
  425ce4:	mov    DWORD PTR [ebp-0x28],esi
  425ce7:	cmp    esi,ebx
  425ce9:	je     0x425ea7
  425cef:	mov    DWORD PTR [ebp-0x4],0x1
  425cf6:	lea    eax,[esi+esi*1]
  425cf9:	add    eax,0x3
  425cfc:	and    eax,0xfffffffc
  425cff:	call   0x423900
  425d04:	mov    DWORD PTR [ebp-0x18],esp
  425d07:	mov    eax,esp
  425d09:	mov    DWORD PTR [ebp-0x2c],eax
  425d0c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d10:	jmp    0x425d2d
  425d12:	xor    eax,eax
  425d14:	inc    eax
  425d15:	ret    
  425d16:	mov    esp,DWORD PTR [ebp-0x18]
  425d19:	call   0x426d45
  425d1e:	xor    ebx,ebx
  425d20:	mov    DWORD PTR [ebp-0x2c],ebx
  425d23:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d27:	mov    edi,DWORD PTR [ebp-0x1c]
  425d2a:	mov    esi,DWORD PTR [ebp-0x28]
  425d2d:	cmp    DWORD PTR [ebp-0x2c],ebx
  425d30:	jne    0x425d4e
  425d32:	lea    eax,[esi+esi*1]
  425d35:	push   eax
  425d36:	call   0x4245d2
  425d3b:	pop    ecx
  425d3c:	mov    DWORD PTR [ebp-0x2c],eax
  425d3f:	cmp    eax,ebx
  425d41:	je     0x425ea7
  425d47:	mov    DWORD PTR [ebp-0x20],0x1
  425d4e:	push   esi
  425d4f:	push   DWORD PTR [ebp-0x2c]
  425d52:	push   DWORD PTR [ebp+0x14]
  425d55:	push   DWORD PTR [ebp+0x10]
  425d58:	push   0x1
  425d5a:	push   DWORD PTR [ebp+0x20]
  425d5d:	call   DWORD PTR ds:0x4280d0
  425d63:	test   eax,eax
  425d65:	je     0x425e51
  425d6b:	push   ebx
  425d6c:	push   ebx
  425d6d:	push   esi
  425d6e:	push   DWORD PTR [ebp-0x2c]
  425d71:	push   DWORD PTR [ebp+0xc]
  425d74:	push   DWORD PTR [ebp+0x8]
  425d77:	call   DWORD PTR ds:0x4280d4
  425d7d:	mov    edi,eax
  425d7f:	mov    DWORD PTR [ebp-0x1c],edi
  425d82:	cmp    edi,ebx
  425d84:	je     0x425e51
  425d8a:	test   BYTE PTR [ebp+0xd],0x4
  425d8e:	je     0x425dbd
  425d90:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d93:	je     0x425e51
  425d99:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d9c:	jg     0x425e51
  425da2:	push   DWORD PTR [ebp+0x1c]
  425da5:	push   DWORD PTR [ebp+0x18]
  425da8:	push   esi
  425da9:	push   DWORD PTR [ebp-0x2c]
  425dac:	push   DWORD PTR [ebp+0xc]
  425daf:	push   DWORD PTR [ebp+0x8]
  425db2:	call   DWORD PTR ds:0x4280d4
  425db8:	jmp    0x425e51
  425dbd:	mov    DWORD PTR [ebp-0x4],0x2
  425dc4:	lea    eax,[edi+edi*1]
  425dc7:	add    eax,0x3
  425dca:	and    eax,0xfffffffc
  425dcd:	call   0x423900
  425dd2:	mov    DWORD PTR [ebp-0x18],esp
  425dd5:	mov    eax,esp
  425dd7:	mov    DWORD PTR [ebp-0x30],eax
  425dda:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dde:	jmp    0x425dfb
  425de0:	xor    eax,eax
  425de2:	inc    eax
  425de3:	ret    
  425de4:	mov    esp,DWORD PTR [ebp-0x18]
  425de7:	call   0x426d45
  425dec:	xor    ebx,ebx
  425dee:	mov    DWORD PTR [ebp-0x30],ebx
  425df1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425df5:	mov    edi,DWORD PTR [ebp-0x1c]
  425df8:	mov    esi,DWORD PTR [ebp-0x28]
  425dfb:	cmp    DWORD PTR [ebp-0x30],ebx
  425dfe:	jne    0x425e18
  425e00:	lea    eax,[edi+edi*1]
  425e03:	push   eax
  425e04:	call   0x4245d2
  425e09:	pop    ecx
  425e0a:	mov    DWORD PTR [ebp-0x30],eax
  425e0d:	cmp    eax,ebx
  425e0f:	je     0x425e51
  425e11:	mov    DWORD PTR [ebp-0x24],0x1
  425e18:	push   edi
  425e19:	push   DWORD PTR [ebp-0x30]
  425e1c:	push   esi
  425e1d:	push   DWORD PTR [ebp-0x2c]
  425e20:	push   DWORD PTR [ebp+0xc]
  425e23:	push   DWORD PTR [ebp+0x8]
  425e26:	call   DWORD PTR ds:0x4280d4
  425e2c:	test   eax,eax
  425e2e:	je     0x425e51
  425e30:	push   ebx
  425e31:	push   ebx
  425e32:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e35:	jne    0x425e3b
  425e37:	push   ebx
  425e38:	push   ebx
  425e39:	jmp    0x425e41
  425e3b:	push   DWORD PTR [ebp+0x1c]
  425e3e:	push   DWORD PTR [ebp+0x18]
  425e41:	push   edi
  425e42:	push   DWORD PTR [ebp-0x30]
  425e45:	push   ebx
  425e46:	push   DWORD PTR [ebp+0x20]
  425e49:	call   DWORD PTR ds:0x428054
  425e4f:	mov    edi,eax
  425e51:	cmp    DWORD PTR [ebp-0x24],ebx
  425e54:	je     0x425e5f
  425e56:	push   DWORD PTR [ebp-0x30]
  425e59:	call   0x4244ba
  425e5e:	pop    ecx
  425e5f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e62:	je     0x425e6d
  425e64:	push   DWORD PTR [ebp-0x2c]
  425e67:	call   0x4244ba
  425e6c:	pop    ecx
  425e6d:	mov    eax,edi
  425e6f:	jmp    0x425fcf
  425e74:	mov    DWORD PTR [ebp-0x34],ebx
  425e77:	xor    edi,edi
  425e79:	mov    DWORD PTR [ebp-0x38],ebx
  425e7c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e7f:	jne    0x425e89
  425e81:	mov    eax,ds:0x45cda4
  425e86:	mov    DWORD PTR [ebp+0x8],eax
  425e89:	cmp    DWORD PTR [ebp+0x20],ebx
  425e8c:	jne    0x425e96
  425e8e:	mov    eax,ds:0x45cdb4
  425e93:	mov    DWORD PTR [ebp+0x20],eax
  425e96:	push   DWORD PTR [ebp+0x8]
  425e99:	call   0x426b2d
  425e9e:	pop    ecx
  425e9f:	mov    DWORD PTR [ebp-0x3c],eax
  425ea2:	cmp    eax,0xffffffff
  425ea5:	jne    0x425eae
  425ea7:	xor    eax,eax
  425ea9:	jmp    0x425fcf
  425eae:	cmp    eax,DWORD PTR [ebp+0x20]
  425eb1:	je     0x425fa5
  425eb7:	push   ebx
  425eb8:	push   ebx
  425eb9:	lea    ecx,[ebp+0x14]
  425ebc:	push   ecx
  425ebd:	push   DWORD PTR [ebp+0x10]
  425ec0:	push   eax
  425ec1:	push   DWORD PTR [ebp+0x20]
  425ec4:	call   0x426b76
  425ec9:	add    esp,0x18
  425ecc:	mov    DWORD PTR [ebp-0x34],eax
  425ecf:	cmp    eax,ebx
  425ed1:	je     0x425ea7
  425ed3:	push   ebx
  425ed4:	push   ebx
  425ed5:	push   DWORD PTR [ebp+0x14]
  425ed8:	push   eax
  425ed9:	push   DWORD PTR [ebp+0xc]
  425edc:	push   DWORD PTR [ebp+0x8]
  425edf:	call   DWORD PTR ds:0x4280cc
  425ee5:	mov    esi,eax
  425ee7:	mov    DWORD PTR [ebp-0x40],esi
  425eea:	cmp    esi,ebx
  425eec:	je     0x425f94
  425ef2:	mov    DWORD PTR [ebp-0x4],ebx
  425ef5:	add    eax,0x3
  425ef8:	and    eax,0xfffffffc
  425efb:	call   0x423900
  425f00:	mov    DWORD PTR [ebp-0x18],esp
  425f03:	mov    edi,esp
  425f05:	mov    DWORD PTR [ebp-0x44],edi
  425f08:	push   esi
  425f09:	push   ebx
  425f0a:	push   edi
  425f0b:	call   0x4261b0
  425f10:	add    esp,0xc
  425f13:	jmp    0x425f25
  425f15:	xor    eax,eax
  425f17:	inc    eax
  425f18:	ret    
  425f19:	mov    esp,DWORD PTR [ebp-0x18]
  425f1c:	call   0x426d45
  425f21:	xor    ebx,ebx
  425f23:	xor    edi,edi
  425f25:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f29:	cmp    edi,ebx
  425f2b:	jne    0x425f50
  425f2d:	push   DWORD PTR [ebp-0x40]
  425f30:	call   0x4245d2
  425f35:	pop    ecx
  425f36:	mov    edi,eax
  425f38:	cmp    edi,ebx
  425f3a:	je     0x425f6d
  425f3c:	push   DWORD PTR [ebp-0x40]
  425f3f:	push   ebx
  425f40:	push   edi
  425f41:	call   0x4261b0
  425f46:	add    esp,0xc
  425f49:	mov    DWORD PTR [ebp-0x38],0x1
  425f50:	push   DWORD PTR [ebp-0x40]
  425f53:	push   edi
  425f54:	push   DWORD PTR [ebp+0x14]
  425f57:	push   DWORD PTR [ebp-0x34]
  425f5a:	push   DWORD PTR [ebp+0xc]
  425f5d:	push   DWORD PTR [ebp+0x8]
  425f60:	call   DWORD PTR ds:0x4280cc
  425f66:	mov    DWORD PTR [ebp-0x40],eax
  425f69:	cmp    eax,ebx
  425f6b:	jne    0x425f71
  425f6d:	xor    esi,esi
  425f6f:	jmp    0x425f97
  425f71:	push   DWORD PTR [ebp+0x1c]
  425f74:	push   DWORD PTR [ebp+0x18]
  425f77:	lea    eax,[ebp-0x40]
  425f7a:	push   eax
  425f7b:	push   edi
  425f7c:	push   DWORD PTR [ebp+0x20]
  425f7f:	push   DWORD PTR [ebp-0x3c]
  425f82:	call   0x426b76
  425f87:	add    esp,0x18
  425f8a:	mov    esi,eax
  425f8c:	neg    esi
  425f8e:	sbb    esi,esi
  425f90:	neg    esi
  425f92:	jmp    0x425f97
  425f94:	mov    esi,DWORD PTR [ebp-0x48]
  425f97:	cmp    DWORD PTR [ebp-0x38],ebx
  425f9a:	je     0x425fbf
  425f9c:	push   edi
  425f9d:	call   0x4244ba
  425fa2:	pop    ecx
  425fa3:	jmp    0x425fbf
  425fa5:	push   DWORD PTR [ebp+0x1c]
  425fa8:	push   DWORD PTR [ebp+0x18]
  425fab:	push   DWORD PTR [ebp+0x14]
  425fae:	push   DWORD PTR [ebp+0x10]
  425fb1:	push   DWORD PTR [ebp+0xc]
  425fb4:	push   DWORD PTR [ebp+0x8]
  425fb7:	call   DWORD PTR ds:0x4280cc
  425fbd:	mov    esi,eax
  425fbf:	cmp    DWORD PTR [ebp-0x34],ebx
  425fc2:	je     0x425fcd
  425fc4:	push   DWORD PTR [ebp-0x34]
  425fc7:	call   0x4244ba
  425fcc:	pop    ecx
  425fcd:	mov    eax,esi
  425fcf:	lea    esp,[ebp-0x54]
  425fd2:	call   0x4238e3
  425fd7:	ret    
  425fd8:	push   0x1c
  425fda:	push   0x428d78
  425fdf:	call   0x4238a8
  425fe4:	xor    esi,esi
  425fe6:	cmp    DWORD PTR ds:0x45cdc0,esi
  425fec:	jne    0x426023
  425fee:	lea    eax,[ebp-0x1c]
  425ff1:	push   eax
  425ff2:	xor    edi,edi
  425ff4:	inc    edi
  425ff5:	push   edi
  425ff6:	push   0x428d4c
  425ffb:	push   edi
  425ffc:	call   DWORD PTR ds:0x4280dc
  426002:	test   eax,eax
  426004:	je     0x42600e
  426006:	mov    DWORD PTR ds:0x45cdc0,edi
  42600c:	jmp    0x426023
  42600e:	call   DWORD PTR ds:0x428014
  426014:	cmp    eax,0x78
  426017:	jne    0x426023
  426019:	mov    DWORD PTR ds:0x45cdc0,0x2
  426023:	mov    eax,ds:0x45cdc0
  426028:	cmp    eax,0x2
  42602b:	je     0x42611b
  426031:	cmp    eax,esi
  426033:	je     0x42611b
  426039:	cmp    eax,0x1
  42603c:	jne    0x426141
  426042:	mov    DWORD PTR [ebp-0x20],esi
  426045:	mov    DWORD PTR [ebp-0x24],esi
  426048:	cmp    DWORD PTR [ebp+0x18],esi
  42604b:	jne    0x426055
  42604d:	mov    eax,ds:0x45cdb4
  426052:	mov    DWORD PTR [ebp+0x18],eax
  426055:	push   esi
  426056:	push   esi
  426057:	push   DWORD PTR [ebp+0x10]
  42605a:	push   DWORD PTR [ebp+0xc]
  42605d:	xor    eax,eax
  42605f:	cmp    DWORD PTR [ebp+0x20],esi
  426062:	setne  al
  426065:	lea    eax,[eax*8+0x1]
  42606c:	push   eax
  42606d:	push   DWORD PTR [ebp+0x18]
  426070:	call   DWORD PTR ds:0x4280d0
  426076:	mov    edi,eax
  426078:	mov    DWORD PTR [ebp-0x28],edi
  42607b:	test   edi,edi
  42607d:	je     0x426141
  426083:	and    DWORD PTR [ebp-0x4],0x0
  426087:	lea    ebx,[edi+edi*1]
  42608a:	mov    eax,ebx
  42608c:	add    eax,0x3
  42608f:	and    eax,0xfffffffc
  426092:	call   0x423900
  426097:	mov    DWORD PTR [ebp-0x18],esp
  42609a:	mov    esi,esp
  42609c:	mov    DWORD PTR [ebp-0x2c],esi
  42609f:	push   ebx
  4260a0:	push   0x0
  4260a2:	push   esi
  4260a3:	call   0x4261b0
  4260a8:	add    esp,0xc
  4260ab:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260af:	jmp    0x4260c6
  4260b1:	xor    eax,eax
  4260b3:	inc    eax
  4260b4:	ret    
  4260b5:	mov    esp,DWORD PTR [ebp-0x18]
  4260b8:	call   0x426d45
  4260bd:	xor    esi,esi
  4260bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260c3:	mov    edi,DWORD PTR [ebp-0x28]
  4260c6:	test   esi,esi
  4260c8:	jne    0x4260e1
  4260ca:	push   edi
  4260cb:	push   0x2
  4260cd:	call   0x4249c8
  4260d2:	pop    ecx
  4260d3:	pop    ecx
  4260d4:	mov    esi,eax
  4260d6:	test   esi,esi
  4260d8:	je     0x426141
  4260da:	mov    DWORD PTR [ebp-0x24],0x1
  4260e1:	push   edi
  4260e2:	push   esi
  4260e3:	push   DWORD PTR [ebp+0x10]
  4260e6:	push   DWORD PTR [ebp+0xc]
  4260e9:	push   0x1
  4260eb:	push   DWORD PTR [ebp+0x18]
  4260ee:	call   DWORD PTR ds:0x4280d0
  4260f4:	test   eax,eax
  4260f6:	je     0x426109
  4260f8:	push   DWORD PTR [ebp+0x14]
  4260fb:	push   eax
  4260fc:	push   esi
  4260fd:	push   DWORD PTR [ebp+0x8]
  426100:	call   DWORD PTR ds:0x4280dc
  426106:	mov    DWORD PTR [ebp-0x20],eax
  426109:	cmp    DWORD PTR [ebp-0x24],0x0
  42610d:	je     0x426116
  42610f:	push   esi
  426110:	call   0x4244ba
  426115:	pop    ecx
  426116:	mov    eax,DWORD PTR [ebp-0x20]
  426119:	jmp    0x426189
  42611b:	mov    ebx,DWORD PTR [ebp+0x1c]
  42611e:	cmp    ebx,esi
  426120:	jne    0x426128
  426122:	mov    ebx,DWORD PTR ds:0x45cda4
  426128:	mov    edi,DWORD PTR [ebp+0x18]
  42612b:	test   edi,edi
  42612d:	jne    0x426135
  42612f:	mov    edi,DWORD PTR ds:0x45cdb4
  426135:	push   ebx
  426136:	call   0x426b2d
  42613b:	pop    ecx
  42613c:	cmp    eax,0xffffffff
  42613f:	jne    0x426145
  426141:	xor    eax,eax
  426143:	jmp    0x426189
  426145:	cmp    eax,edi
  426147:	je     0x426167
  426149:	push   0x0
  42614b:	push   0x0
  42614d:	lea    ecx,[ebp+0x10]
  426150:	push   ecx
  426151:	push   DWORD PTR [ebp+0xc]
  426154:	push   eax
  426155:	push   edi
  426156:	call   0x426b76
  42615b:	add    esp,0x18
  42615e:	mov    esi,eax
  426160:	test   esi,esi
  426162:	je     0x426141
  426164:	mov    DWORD PTR [ebp+0xc],esi
  426167:	push   DWORD PTR [ebp+0x14]
  42616a:	push   DWORD PTR [ebp+0x10]
  42616d:	push   DWORD PTR [ebp+0xc]
  426170:	push   DWORD PTR [ebp+0x8]
  426173:	push   ebx
  426174:	call   DWORD PTR ds:0x4280d8
  42617a:	mov    edi,eax
  42617c:	test   esi,esi
  42617e:	je     0x426187
  426180:	push   esi
  426181:	call   0x4244ba
  426186:	pop    ecx
  426187:	mov    eax,edi
  426189:	lea    esp,[ebp-0x38]
  42618c:	call   0x4238e3
  426191:	ret    
  426192:	mov    eax,ds:0x45cdc4
  426197:	test   eax,eax
  426199:	je     0x4261aa
  42619b:	push   DWORD PTR [esp+0x4]
  42619f:	call   eax
  4261a1:	test   eax,eax
  4261a3:	pop    ecx
  4261a4:	je     0x4261aa
  4261a6:	xor    eax,eax
  4261a8:	inc    eax
  4261a9:	ret    
  4261aa:	xor    eax,eax
  4261ac:	ret    
  4261ad:	int3   
  4261ae:	int3   
  4261af:	int3   
  4261b0:	mov    edx,DWORD PTR [esp+0xc]
  4261b4:	mov    ecx,DWORD PTR [esp+0x4]
  4261b8:	test   edx,edx
  4261ba:	je     0x42620b
  4261bc:	xor    eax,eax
  4261be:	mov    al,BYTE PTR [esp+0x8]
  4261c2:	push   edi
  4261c3:	mov    edi,ecx
  4261c5:	cmp    edx,0x4
  4261c8:	jb     0x4261fb
  4261ca:	neg    ecx
  4261cc:	and    ecx,0x3
  4261cf:	je     0x4261dd
  4261d1:	sub    edx,ecx
  4261d3:	mov    BYTE PTR [edi],al
  4261d5:	add    edi,0x1
  4261d8:	sub    ecx,0x1
  4261db:	jne    0x4261d3
  4261dd:	mov    ecx,eax
  4261df:	shl    eax,0x8
  4261e2:	add    eax,ecx
  4261e4:	mov    ecx,eax
  4261e6:	shl    eax,0x10
  4261e9:	add    eax,ecx
  4261eb:	mov    ecx,edx
  4261ed:	and    edx,0x3
  4261f0:	shr    ecx,0x2
  4261f3:	je     0x4261fb
  4261f5:	rep stos DWORD PTR es:[edi],eax
  4261f7:	test   edx,edx
  4261f9:	je     0x426205
  4261fb:	mov    BYTE PTR [edi],al
  4261fd:	add    edi,0x1
  426200:	sub    edx,0x1
  426203:	jne    0x4261fb
  426205:	mov    eax,DWORD PTR [esp+0x8]
  426209:	pop    edi
  42620a:	ret    
  42620b:	mov    eax,DWORD PTR [esp+0x4]
  42620f:	ret    
  426210:	push   esi
  426211:	mov    esi,DWORD PTR [esp+0x8]
  426215:	test   esi,esi
  426217:	je     0x42639e
  42621d:	push   DWORD PTR [esi+0x4]
  426220:	call   0x4244ba
  426225:	push   DWORD PTR [esi+0x8]
  426228:	call   0x4244ba
  42622d:	push   DWORD PTR [esi+0xc]
  426230:	call   0x4244ba
  426235:	push   DWORD PTR [esi+0x10]
  426238:	call   0x4244ba
  42623d:	push   DWORD PTR [esi+0x14]
  426240:	call   0x4244ba
  426245:	push   DWORD PTR [esi+0x18]
  426248:	call   0x4244ba
  42624d:	push   DWORD PTR [esi]
  42624f:	call   0x4244ba
  426254:	push   DWORD PTR [esi+0x20]
  426257:	call   0x4244ba
  42625c:	push   DWORD PTR [esi+0x24]
  42625f:	call   0x4244ba
  426264:	push   DWORD PTR [esi+0x28]
  426267:	call   0x4244ba
  42626c:	push   DWORD PTR [esi+0x2c]
  42626f:	call   0x4244ba
  426274:	push   DWORD PTR [esi+0x30]
  426277:	call   0x4244ba
  42627c:	push   DWORD PTR [esi+0x34]
  42627f:	call   0x4244ba
  426284:	push   DWORD PTR [esi+0x1c]
  426287:	call   0x4244ba
  42628c:	push   DWORD PTR [esi+0x38]
  42628f:	call   0x4244ba
  426294:	push   DWORD PTR [esi+0x3c]
  426297:	call   0x4244ba
  42629c:	add    esp,0x40
  42629f:	push   DWORD PTR [esi+0x40]
  4262a2:	call   0x4244ba
  4262a7:	push   DWORD PTR [esi+0x44]
  4262aa:	call   0x4244ba
  4262af:	push   DWORD PTR [esi+0x48]
  4262b2:	call   0x4244ba
  4262b7:	push   DWORD PTR [esi+0x4c]
  4262ba:	call   0x4244ba
  4262bf:	push   DWORD PTR [esi+0x50]
  4262c2:	call   0x4244ba
  4262c7:	push   DWORD PTR [esi+0x54]
  4262ca:	call   0x4244ba
  4262cf:	push   DWORD PTR [esi+0x58]
  4262d2:	call   0x4244ba
  4262d7:	push   DWORD PTR [esi+0x5c]
  4262da:	call   0x4244ba
  4262df:	push   DWORD PTR [esi+0x60]
  4262e2:	call   0x4244ba
  4262e7:	push   DWORD PTR [esi+0x64]
  4262ea:	call   0x4244ba
  4262ef:	push   DWORD PTR [esi+0x68]
  4262f2:	call   0x4244ba
  4262f7:	push   DWORD PTR [esi+0x6c]
  4262fa:	call   0x4244ba
  4262ff:	push   DWORD PTR [esi+0x70]
  426302:	call   0x4244ba
  426307:	push   DWORD PTR [esi+0x74]
  42630a:	call   0x4244ba
  42630f:	push   DWORD PTR [esi+0x78]
  426312:	call   0x4244ba
  426317:	push   DWORD PTR [esi+0x7c]
  42631a:	call   0x4244ba
  42631f:	add    esp,0x40
  426322:	push   DWORD PTR [esi+0x80]
  426328:	call   0x4244ba
  42632d:	push   DWORD PTR [esi+0x84]
  426333:	call   0x4244ba
  426338:	push   DWORD PTR [esi+0x88]
  42633e:	call   0x4244ba
  426343:	push   DWORD PTR [esi+0x8c]
  426349:	call   0x4244ba
  42634e:	push   DWORD PTR [esi+0x90]
  426354:	call   0x4244ba
  426359:	push   DWORD PTR [esi+0x94]
  42635f:	call   0x4244ba
  426364:	push   DWORD PTR [esi+0x98]
  42636a:	call   0x4244ba
  42636f:	push   DWORD PTR [esi+0x9c]
  426375:	call   0x4244ba
  42637a:	push   DWORD PTR [esi+0xa0]
  426380:	call   0x4244ba
  426385:	push   DWORD PTR [esi+0xa4]
  42638b:	call   0x4244ba
  426390:	push   DWORD PTR [esi+0xa8]
  426396:	call   0x4244ba
  42639b:	add    esp,0x2c
  42639e:	pop    esi
  42639f:	ret    
  4263a0:	push   esi
  4263a1:	mov    esi,DWORD PTR [esp+0x8]
  4263a5:	test   esi,esi
  4263a7:	je     0x4263fd
  4263a9:	mov    eax,DWORD PTR [esi]
  4263ab:	mov    ecx,DWORD PTR ds:0x45c934
  4263b1:	cmp    eax,DWORD PTR [ecx]
  4263b3:	je     0x4263c4
  4263b5:	cmp    eax,DWORD PTR ds:0x45c904
  4263bb:	je     0x4263c4
  4263bd:	push   eax
  4263be:	call   0x4244ba
  4263c3:	pop    ecx
  4263c4:	mov    eax,DWORD PTR [esi+0x4]
  4263c7:	mov    ecx,DWORD PTR ds:0x45c934
  4263cd:	cmp    eax,DWORD PTR [ecx+0x4]
  4263d0:	je     0x4263e1
  4263d2:	cmp    eax,DWORD PTR ds:0x45c908
  4263d8:	je     0x4263e1
  4263da:	push   eax
  4263db:	call   0x4244ba
  4263e0:	pop    ecx
  4263e1:	mov    esi,DWORD PTR [esi+0x8]
  4263e4:	mov    eax,ds:0x45c934
  4263e9:	cmp    esi,DWORD PTR [eax+0x8]
  4263ec:	je     0x4263fd
  4263ee:	cmp    esi,DWORD PTR ds:0x45c90c
  4263f4:	je     0x4263fd
  4263f6:	push   esi
  4263f7:	call   0x4244ba
  4263fc:	pop    ecx
  4263fd:	pop    esi
  4263fe:	ret    
  4263ff:	push   esi
  426400:	mov    esi,DWORD PTR [esp+0x8]
  426404:	test   esi,esi
  426406:	je     0x4264d6
  42640c:	mov    eax,DWORD PTR [esi+0xc]
  42640f:	mov    ecx,DWORD PTR ds:0x45c934
  426415:	cmp    eax,DWORD PTR [ecx+0xc]
  426418:	je     0x426429
  42641a:	cmp    eax,DWORD PTR ds:0x45c910
  426420:	je     0x426429
  426422:	push   eax
  426423:	call   0x4244ba
  426428:	pop    ecx
  426429:	mov    eax,DWORD PTR [esi+0x10]
  42642c:	mov    ecx,DWORD PTR ds:0x45c934
  426432:	cmp    eax,DWORD PTR [ecx+0x10]
  426435:	je     0x426446
  426437:	cmp    eax,DWORD PTR ds:0x45c914
  42643d:	je     0x426446
  42643f:	push   eax
  426440:	call   0x4244ba
  426445:	pop    ecx
  426446:	mov    eax,DWORD PTR [esi+0x14]
  426449:	mov    ecx,DWORD PTR ds:0x45c934
  42644f:	cmp    eax,DWORD PTR [ecx+0x14]
  426452:	je     0x426463
  426454:	cmp    eax,DWORD PTR ds:0x45c918
  42645a:	je     0x426463
  42645c:	push   eax
  42645d:	call   0x4244ba
  426462:	pop    ecx
  426463:	mov    eax,DWORD PTR [esi+0x18]
  426466:	mov    ecx,DWORD PTR ds:0x45c934
  42646c:	cmp    eax,DWORD PTR [ecx+0x18]
  42646f:	je     0x426480
  426471:	cmp    eax,DWORD PTR ds:0x45c91c
  426477:	je     0x426480
  426479:	push   eax
  42647a:	call   0x4244ba
  42647f:	pop    ecx
  426480:	mov    eax,DWORD PTR [esi+0x1c]
  426483:	mov    ecx,DWORD PTR ds:0x45c934
  426489:	cmp    eax,DWORD PTR [ecx+0x1c]
  42648c:	je     0x42649d
  42648e:	cmp    eax,DWORD PTR ds:0x45c920
  426494:	je     0x42649d
  426496:	push   eax
  426497:	call   0x4244ba
  42649c:	pop    ecx
  42649d:	mov    eax,DWORD PTR [esi+0x20]
  4264a0:	mov    ecx,DWORD PTR ds:0x45c934
  4264a6:	cmp    eax,DWORD PTR [ecx+0x20]
  4264a9:	je     0x4264ba
  4264ab:	cmp    eax,DWORD PTR ds:0x45c924
  4264b1:	je     0x4264ba
  4264b3:	push   eax
  4264b4:	call   0x4244ba
  4264b9:	pop    ecx
  4264ba:	mov    esi,DWORD PTR [esi+0x24]
  4264bd:	mov    eax,ds:0x45c934
  4264c2:	cmp    esi,DWORD PTR [eax+0x24]
  4264c5:	je     0x4264d6
  4264c7:	cmp    esi,DWORD PTR ds:0x45c928
  4264cd:	je     0x4264d6
  4264cf:	push   esi
  4264d0:	call   0x4244ba
  4264d5:	pop    ecx
  4264d6:	pop    esi
  4264d7:	ret    
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	push   ebp
  4264e1:	mov    ebp,esp
  4264e3:	push   esi
  4264e4:	xor    eax,eax
  4264e6:	push   eax
  4264e7:	push   eax
  4264e8:	push   eax
  4264e9:	push   eax
  4264ea:	push   eax
  4264eb:	push   eax
  4264ec:	push   eax
  4264ed:	push   eax
  4264ee:	mov    edx,DWORD PTR [ebp+0xc]
  4264f1:	lea    ecx,[ecx+0x0]
  4264f4:	mov    al,BYTE PTR [edx]
  4264f6:	or     al,al
  4264f8:	je     0x426503
  4264fa:	add    edx,0x1
  4264fd:	bts    DWORD PTR [esp],eax
  426501:	jmp    0x4264f4
  426503:	mov    esi,DWORD PTR [ebp+0x8]
  426506:	or     ecx,0xffffffff
  426509:	lea    ecx,[ecx+0x0]
  42650c:	add    ecx,0x1
  42650f:	mov    al,BYTE PTR [esi]
  426511:	or     al,al
  426513:	je     0x42651e
  426515:	add    esi,0x1
  426518:	bt     DWORD PTR [esp],eax
  42651c:	jae    0x42650c
  42651e:	mov    eax,ecx
  426520:	add    esp,0x20
  426523:	pop    esi
  426524:	leave  
  426525:	ret    
  426526:	int3   
  426527:	int3   
  426528:	int3   
  426529:	int3   
  42652a:	int3   
  42652b:	int3   
  42652c:	int3   
  42652d:	int3   
  42652e:	int3   
  42652f:	int3   
  426530:	mov    edx,DWORD PTR [esp+0x4]
  426534:	mov    ecx,DWORD PTR [esp+0x8]
  426538:	test   edx,0x3
  42653e:	jne    0x42657c
  426540:	mov    eax,DWORD PTR [edx]
  426542:	cmp    al,BYTE PTR [ecx]
  426544:	jne    0x426574
  426546:	or     al,al
  426548:	je     0x426570
  42654a:	cmp    ah,BYTE PTR [ecx+0x1]
  42654d:	jne    0x426574
  42654f:	or     ah,ah
  426551:	je     0x426570
  426553:	shr    eax,0x10
  426556:	cmp    al,BYTE PTR [ecx+0x2]
  426559:	jne    0x426574
  42655b:	or     al,al
  42655d:	je     0x426570
  42655f:	cmp    ah,BYTE PTR [ecx+0x3]
  426562:	jne    0x426574
  426564:	add    ecx,0x4
  426567:	add    edx,0x4
  42656a:	or     ah,ah
  42656c:	jne    0x426540
  42656e:	mov    edi,edi
  426570:	xor    eax,eax
  426572:	ret    
  426573:	nop
  426574:	sbb    eax,eax
  426576:	shl    eax,1
  426578:	add    eax,0x1
  42657b:	ret    
  42657c:	test   edx,0x1
  426582:	je     0x42659c
  426584:	mov    al,BYTE PTR [edx]
  426586:	add    edx,0x1
  426589:	cmp    al,BYTE PTR [ecx]
  42658b:	jne    0x426574
  42658d:	add    ecx,0x1
  426590:	or     al,al
  426592:	je     0x426570
  426594:	test   edx,0x2
  42659a:	je     0x426540
  42659c:	mov    ax,WORD PTR [edx]
  42659f:	add    edx,0x2
  4265a2:	cmp    al,BYTE PTR [ecx]
  4265a4:	jne    0x426574
  4265a6:	or     al,al
  4265a8:	je     0x426570
  4265aa:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ad:	jne    0x426574
  4265af:	or     ah,ah
  4265b1:	je     0x426570
  4265b3:	add    ecx,0x2
  4265b6:	jmp    0x426540
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    eax,DWORD PTR [esp+0xc]
  4265c4:	test   eax,eax
  4265c6:	je     0x426612
  4265c8:	mov    edx,DWORD PTR [esp+0x4]
  4265cc:	push   esi
  4265cd:	push   edi
  4265ce:	mov    esi,edx
  4265d0:	mov    edi,DWORD PTR [esp+0x10]
  4265d4:	or     edx,edi
  4265d6:	and    edx,0x3
  4265d9:	je     0x426613
  4265db:	test   eax,0x1
  4265e0:	je     0x4265f3
  4265e2:	mov    cl,BYTE PTR [esi]
  4265e4:	cmp    cl,BYTE PTR [edi]
  4265e6:	jne    0x426640
  4265e8:	add    esi,0x1
  4265eb:	add    edi,0x1
  4265ee:	sub    eax,0x1
  4265f1:	je     0x426610
  4265f3:	mov    cl,BYTE PTR [esi]
  4265f5:	mov    dl,BYTE PTR [edi]
  4265f7:	cmp    cl,dl
  4265f9:	jne    0x426640
  4265fb:	mov    cl,BYTE PTR [esi+0x1]
  4265fe:	mov    dl,BYTE PTR [edi+0x1]
  426601:	cmp    cl,dl
  426603:	jne    0x426640
  426605:	add    edi,0x2
  426608:	add    esi,0x2
  42660b:	sub    eax,0x2
  42660e:	jne    0x4265f3
  426610:	pop    edi
  426611:	pop    esi
  426612:	ret    
  426613:	mov    ecx,eax
  426615:	and    eax,0x3
  426618:	shr    ecx,0x2
  42661b:	je     0x426648
  42661d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42661f:	je     0x426648
  426621:	mov    ecx,DWORD PTR [esi-0x4]
  426624:	mov    edx,DWORD PTR [edi-0x4]
  426627:	cmp    cl,dl
  426629:	jne    0x42663b
  42662b:	cmp    ch,dh
  42662d:	jne    0x42663b
  42662f:	shr    ecx,0x10
  426632:	shr    edx,0x10
  426635:	cmp    cl,dl
  426637:	jne    0x42663b
  426639:	cmp    ch,dh
  42663b:	mov    eax,0x0
  426640:	sbb    eax,eax
  426642:	pop    edi
  426643:	sbb    eax,0xffffffff
  426646:	pop    esi
  426647:	ret    
  426648:	test   eax,eax
  42664a:	je     0x426610
  42664c:	mov    edx,DWORD PTR [esi]
  42664e:	mov    ecx,DWORD PTR [edi]
  426650:	cmp    dl,cl
  426652:	jne    0x42663b
  426654:	sub    eax,0x1
  426657:	je     0x426675
  426659:	cmp    dh,ch
  42665b:	jne    0x42663b
  42665d:	sub    eax,0x1
  426660:	je     0x426675
  426662:	and    ecx,0xff0000
  426668:	and    edx,0xff0000
  42666e:	cmp    edx,ecx
  426670:	jne    0x42663b
  426672:	sub    eax,0x1
  426675:	pop    edi
  426676:	pop    esi
  426677:	ret    
  426678:	int3   
  426679:	int3   
  42667a:	int3   
  42667b:	int3   
  42667c:	int3   
  42667d:	int3   
  42667e:	int3   
  42667f:	int3   
  426680:	push   ebp
  426681:	mov    ebp,esp
  426683:	push   edi
  426684:	push   esi
  426685:	push   ebx
  426686:	mov    ecx,DWORD PTR [ebp+0x10]
  426689:	jecxz  0x4266b2
  42668b:	mov    ebx,ecx
  42668d:	mov    edi,DWORD PTR [ebp+0x8]
  426690:	mov    esi,edi
  426692:	xor    eax,eax
  426694:	repnz scas al,BYTE PTR es:[edi]
  426696:	neg    ecx
  426698:	add    ecx,ebx
  42669a:	mov    edi,esi
  42669c:	mov    esi,DWORD PTR [ebp+0xc]
  42669f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a1:	mov    al,BYTE PTR [esi-0x1]
  4266a4:	xor    ecx,ecx
  4266a6:	cmp    al,BYTE PTR [edi-0x1]
  4266a9:	ja     0x4266b0
  4266ab:	je     0x4266b2
  4266ad:	sub    ecx,0x2
  4266b0:	not    ecx
  4266b2:	mov    eax,ecx
  4266b4:	pop    ebx
  4266b5:	pop    esi
  4266b6:	pop    edi
  4266b7:	leave  
  4266b8:	ret    
  4266b9:	int3   
  4266ba:	int3   
  4266bb:	int3   
  4266bc:	int3   
  4266bd:	int3   
  4266be:	int3   
  4266bf:	int3   
  4266c0:	push   ebp
  4266c1:	mov    ebp,esp
  4266c3:	push   esi
  4266c4:	xor    eax,eax
  4266c6:	push   eax
  4266c7:	push   eax
  4266c8:	push   eax
  4266c9:	push   eax
  4266ca:	push   eax
  4266cb:	push   eax
  4266cc:	push   eax
  4266cd:	push   eax
  4266ce:	mov    edx,DWORD PTR [ebp+0xc]
  4266d1:	lea    ecx,[ecx+0x0]
  4266d4:	mov    al,BYTE PTR [edx]
  4266d6:	or     al,al
  4266d8:	je     0x4266e3
  4266da:	add    edx,0x1
  4266dd:	bts    DWORD PTR [esp],eax
  4266e1:	jmp    0x4266d4
  4266e3:	mov    esi,DWORD PTR [ebp+0x8]
  4266e6:	mov    edi,edi
  4266e8:	mov    al,BYTE PTR [esi]
  4266ea:	or     al,al
  4266ec:	je     0x4266fa
  4266ee:	add    esi,0x1
  4266f1:	bt     DWORD PTR [esp],eax
  4266f5:	jae    0x4266e8
  4266f7:	lea    eax,[esi-0x1]
  4266fa:	add    esp,0x20
  4266fd:	pop    esi
  4266fe:	leave  
  4266ff:	ret    
  426700:	push   ebp
  426701:	mov    ebp,esp
  426703:	push   ebx
  426704:	push   esi
  426705:	push   edi
  426706:	push   ebp
  426707:	push   0x0
  426709:	push   0x0
  42670b:	push   0x426718
  426710:	push   DWORD PTR [ebp+0x8]
  426713:	call   0x42718e
  426718:	pop    ebp
  426719:	pop    edi
  42671a:	pop    esi
  42671b:	pop    ebx
  42671c:	mov    esp,ebp
  42671e:	pop    ebp
  42671f:	ret    
  426720:	mov    ecx,DWORD PTR [esp+0x4]
  426724:	test   DWORD PTR [ecx+0x4],0x6
  42672b:	mov    eax,0x1
  426730:	je     0x426741
  426732:	mov    eax,DWORD PTR [esp+0x8]
  426736:	mov    edx,DWORD PTR [esp+0x10]
  42673a:	mov    DWORD PTR [edx],eax
  42673c:	mov    eax,0x3
  426741:	ret    
  426742:	push   ebx
  426743:	push   esi
  426744:	push   edi
  426745:	mov    eax,DWORD PTR [esp+0x10]
  426749:	push   eax
  42674a:	push   0xfffffffe
  42674c:	push   0x426720
  426751:	push   DWORD PTR fs:0x0
  426758:	mov    DWORD PTR fs:0x0,esp
  42675f:	mov    eax,DWORD PTR [esp+0x20]
  426763:	mov    ebx,DWORD PTR [eax+0x8]
  426766:	mov    esi,DWORD PTR [eax+0xc]
  426769:	cmp    esi,0xffffffff
  42676c:	je     0x42679c
  42676e:	cmp    esi,DWORD PTR [esp+0x24]
  426772:	je     0x42679c
  426774:	lea    esi,[esi+esi*2]
  426777:	mov    ecx,DWORD PTR [ebx+esi*4]
  42677a:	mov    DWORD PTR [esp+0x8],ecx
  42677e:	mov    DWORD PTR [eax+0xc],ecx
  426781:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426786:	jne    0x42679a
  426788:	push   0x101
  42678d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426791:	call   0x4267d6
  426796:	call   DWORD PTR [ebx+esi*4+0x8]
  42679a:	jmp    0x42675f
  42679c:	pop    DWORD PTR fs:0x0
  4267a3:	add    esp,0xc
  4267a6:	pop    edi
  4267a7:	pop    esi
  4267a8:	pop    ebx
  4267a9:	ret    
  4267aa:	xor    eax,eax
  4267ac:	mov    ecx,DWORD PTR fs:0x0
  4267b3:	cmp    DWORD PTR [ecx+0x4],0x426720
  4267ba:	jne    0x4267cc
  4267bc:	mov    edx,DWORD PTR [ecx+0xc]
  4267bf:	mov    edx,DWORD PTR [edx+0xc]
  4267c2:	cmp    DWORD PTR [ecx+0x8],edx
  4267c5:	jne    0x4267cc
  4267c7:	mov    eax,0x1
  4267cc:	ret    
  4267cd:	push   ebx
  4267ce:	push   ecx
  4267cf:	mov    ebx,0x45c94c
  4267d4:	jmp    0x4267e0
  4267d6:	push   ebx
  4267d7:	push   ecx
  4267d8:	mov    ebx,0x45c94c
  4267dd:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e0:	mov    DWORD PTR [ebx+0x8],ecx
  4267e3:	mov    DWORD PTR [ebx+0x4],eax
  4267e6:	mov    DWORD PTR [ebx+0xc],ebp
  4267e9:	pop    ecx
  4267ea:	pop    ebx
  4267eb:	ret    0x4
  4267ee:	int3   
  4267ef:	int3   
  4267f0:	push   ebp
  4267f1:	mov    ebp,esp
  4267f3:	push   edi
  4267f4:	push   esi
  4267f5:	mov    esi,DWORD PTR [ebp+0xc]
  4267f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267fb:	mov    edi,DWORD PTR [ebp+0x8]
  4267fe:	mov    eax,ecx
  426800:	mov    edx,ecx
  426802:	add    eax,esi
  426804:	cmp    edi,esi
  426806:	jbe    0x426810
  426808:	cmp    edi,eax
  42680a:	jb     0x42698c
  426810:	test   edi,0x3
  426816:	jne    0x42682c
  426818:	shr    ecx,0x2
  42681b:	and    edx,0x3
  42681e:	cmp    ecx,0x8
  426821:	jb     0x42684c
  426823:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	jmp    DWORD PTR [edx*4+0x42693c]
  42682c:	mov    eax,edi
  42682e:	mov    edx,0x3
  426833:	sub    ecx,0x4
  426836:	jb     0x426844
  426838:	and    eax,0x3
  42683b:	add    ecx,eax
  42683d:	jmp    DWORD PTR [eax*4+0x426850]
  426844:	jmp    DWORD PTR [ecx*4+0x42694c]
  42684b:	nop
  42684c:	jmp    DWORD PTR [ecx*4+0x4268d0]
  426853:	nop
  426854:	pusha  
  426855:	push   0x688c0042
  42685a:	inc    edx
  42685b:	add    BYTE PTR [eax+0x23004268],dh
  426861:	ror    DWORD PTR [edx-0x75f877fa],1
  426867:	inc    esi
  426868:	add    DWORD PTR [eax+0x468a0147],ecx
  42686e:	add    al,cl
  426870:	jmp    0x289f077
  426875:	add    esi,0x3
  426878:	add    edi,0x3
  42687b:	cmp    ecx,0x8
  42687e:	jb     0x42684c
  426880:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426882:	jmp    DWORD PTR [edx*4+0x42693c]
  426889:	lea    ecx,[ecx+0x0]
  42688c:	and    edx,ecx
  42688e:	mov    al,BYTE PTR [esi]
  426890:	mov    BYTE PTR [edi],al
  426892:	mov    al,BYTE PTR [esi+0x1]
  426895:	shr    ecx,0x2
  426898:	mov    BYTE PTR [edi+0x1],al
  42689b:	add    esi,0x2
  42689e:	add    edi,0x2
  4268a1:	cmp    ecx,0x8
  4268a4:	jb     0x42684c
  4268a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a8:	jmp    DWORD PTR [edx*4+0x42693c]
  4268af:	nop
  4268b0:	and    edx,ecx
  4268b2:	mov    al,BYTE PTR [esi]
  4268b4:	mov    BYTE PTR [edi],al
  4268b6:	add    esi,0x1
  4268b9:	shr    ecx,0x2
  4268bc:	add    edi,0x1
  4268bf:	cmp    ecx,0x8
  4268c2:	jb     0x42684c
  4268c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c6:	jmp    DWORD PTR [edx*4+0x42693c]
  4268cd:	lea    ecx,[ecx+0x0]
  4268d0:	xor    ebp,DWORD PTR [ecx+0x42]
  4268d3:	add    BYTE PTR [eax],ah
  4268d5:	imul   eax,DWORD PTR [edx+0x0],0x426918
  4268dc:	adc    BYTE PTR [ecx+0x42],ch
  4268df:	add    BYTE PTR [eax],cl
  4268e1:	imul   eax,DWORD PTR [edx+0x0],0x426900
  4268e8:	clc    
  4268e9:	push   0x68f00042
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268f5:	inc    esp
  4268f6:	(bad)  
  4268f7:	in     al,0x8b
  4268f9:	inc    esp
  4268fa:	mov    gs,eax
  4268fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426900:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426904:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426908:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42690c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426910:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426914:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426918:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42691c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426920:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426924:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426928:	lea    eax,[ecx*4+0x0]
  42692f:	add    esi,eax
  426931:	add    edi,eax
  426933:	jmp    DWORD PTR [edx*4+0x42693c]
  42693a:	mov    edi,edi
  42693c:	dec    esp
  42693d:	imul   eax,DWORD PTR [edx+0x0],0x426954
  426944:	pusha  
  426945:	imul   eax,DWORD PTR [edx+0x0],0x426974
  42694c:	mov    eax,DWORD PTR [ebp+0x8]
  42694f:	pop    esi
  426950:	pop    edi
  426951:	leave  
  426952:	ret    
  426953:	nop
  426954:	mov    al,BYTE PTR [esi]
  426956:	mov    BYTE PTR [edi],al
  426958:	mov    eax,DWORD PTR [ebp+0x8]
  42695b:	pop    esi
  42695c:	pop    edi
  42695d:	leave  
  42695e:	ret    
  42695f:	nop
  426960:	mov    al,BYTE PTR [esi]
  426962:	mov    BYTE PTR [edi],al
  426964:	mov    al,BYTE PTR [esi+0x1]
  426967:	mov    BYTE PTR [edi+0x1],al
  42696a:	mov    eax,DWORD PTR [ebp+0x8]
  42696d:	pop    esi
  42696e:	pop    edi
  42696f:	leave  
  426970:	ret    
  426971:	lea    ecx,[ecx+0x0]
  426974:	mov    al,BYTE PTR [esi]
  426976:	mov    BYTE PTR [edi],al
  426978:	mov    al,BYTE PTR [esi+0x1]
  42697b:	mov    BYTE PTR [edi+0x1],al
  42697e:	mov    al,BYTE PTR [esi+0x2]
  426981:	mov    BYTE PTR [edi+0x2],al
  426984:	mov    eax,DWORD PTR [ebp+0x8]
  426987:	pop    esi
  426988:	pop    edi
  426989:	leave  
  42698a:	ret    
  42698b:	nop
  42698c:	lea    esi,[ecx+esi*1-0x4]
  426990:	lea    edi,[ecx+edi*1-0x4]
  426994:	test   edi,0x3
  42699a:	jne    0x4269c0
  42699c:	shr    ecx,0x2
  42699f:	and    edx,0x3
  4269a2:	cmp    ecx,0x8
  4269a5:	jb     0x4269b4
  4269a7:	std    
  4269a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269aa:	cld    
  4269ab:	jmp    DWORD PTR [edx*4+0x426ad8]
  4269b2:	mov    edi,edi
  4269b4:	neg    ecx
  4269b6:	jmp    DWORD PTR [ecx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    eax,edi
  4269c2:	mov    edx,0x3
  4269c7:	cmp    ecx,0x4
  4269ca:	jb     0x4269d8
  4269cc:	and    eax,0x3
  4269cf:	sub    ecx,eax
  4269d1:	jmp    DWORD PTR [eax*4+0x4269dc]
  4269d8:	jmp    DWORD PTR [ecx*4+0x426ad8]
  4269df:	nop
  4269e0:	in     al,dx
  4269e1:	imul   eax,DWORD PTR [edx+0x0],0x426a10
  4269e8:	cmp    BYTE PTR [edx+0x42],ch
  4269eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4269f1:	mov    BYTE PTR [edi+0x3],al
  4269f4:	sub    esi,0x1
  4269f7:	shr    ecx,0x2
  4269fa:	sub    edi,0x1
  4269fd:	cmp    ecx,0x8
  426a00:	jb     0x4269b4
  426a02:	std    
  426a03:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a05:	cld    
  426a06:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a0d:	lea    ecx,[ecx+0x0]
  426a10:	mov    al,BYTE PTR [esi+0x3]
  426a13:	and    edx,ecx
  426a15:	mov    BYTE PTR [edi+0x3],al
  426a18:	mov    al,BYTE PTR [esi+0x2]
  426a1b:	shr    ecx,0x2
  426a1e:	mov    BYTE PTR [edi+0x2],al
  426a21:	sub    esi,0x2
  426a24:	sub    edi,0x2
  426a27:	cmp    ecx,0x8
  426a2a:	jb     0x4269b4
  426a2c:	std    
  426a2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a2f:	cld    
  426a30:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a37:	nop
  426a38:	mov    al,BYTE PTR [esi+0x3]
  426a3b:	and    edx,ecx
  426a3d:	mov    BYTE PTR [edi+0x3],al
  426a40:	mov    al,BYTE PTR [esi+0x2]
  426a43:	mov    BYTE PTR [edi+0x2],al
  426a46:	mov    al,BYTE PTR [esi+0x1]
  426a49:	shr    ecx,0x2
  426a4c:	mov    BYTE PTR [edi+0x1],al
  426a4f:	sub    esi,0x3
  426a52:	sub    edi,0x3
  426a55:	cmp    ecx,0x8
  426a58:	jb     0x4269b4
  426a5e:	std    
  426a5f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a61:	cld    
  426a62:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a69:	lea    ecx,[ecx+0x0]
  426a6c:	mov    WORD PTR [edx+0x42],gs
  426a6f:	add    BYTE PTR [edx+ebp*2+0x6a9c0042],dl
  426a76:	inc    edx
  426a77:	add    BYTE PTR [edx+ebp*2+0x6aac0042],ah
  426a7e:	inc    edx
  426a7f:	add    BYTE PTR [edx+ebp*2+0x6abc0042],dh
  426a86:	inc    edx
  426a87:	add    bh,cl
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a91:	inc    esp
  426a92:	(bad)  
  426a93:	sbb    al,0x8b
  426a95:	inc    esp
  426a96:	mov    ds,WORD PTR [eax]
  426a98:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a9c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426aa0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426aa4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426aa8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426aac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426ab0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426ab4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426ab8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426abc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426ac0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426ac4:	lea    eax,[ecx*4+0x0]
  426acb:	add    esi,eax
  426acd:	add    edi,eax
  426acf:	jmp    DWORD PTR [edx*4+0x426ad8]
  426ad6:	mov    edi,edi
  426ad8:	call   0xf042ad47
  426add:	push   0x42
  426adf:	add    BYTE PTR [eax],al
  426ae1:	imul   eax,DWORD PTR [edx+0x0],0x14
  426ae5:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426ae9:	inc    ebp
  426aea:	or     BYTE PTR [esi+0x5f],bl
  426aed:	leave  
  426aee:	ret    
  426aef:	nop
  426af0:	mov    al,BYTE PTR [esi+0x3]
  426af3:	mov    BYTE PTR [edi+0x3],al
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	pop    esi
  426afa:	pop    edi
  426afb:	leave  
  426afc:	ret    
  426afd:	lea    ecx,[ecx+0x0]
  426b00:	mov    al,BYTE PTR [esi+0x3]
  426b03:	mov    BYTE PTR [edi+0x3],al
  426b06:	mov    al,BYTE PTR [esi+0x2]
  426b09:	mov    BYTE PTR [edi+0x2],al
  426b0c:	mov    eax,DWORD PTR [ebp+0x8]
  426b0f:	pop    esi
  426b10:	pop    edi
  426b11:	leave  
  426b12:	ret    
  426b13:	nop
  426b14:	mov    al,BYTE PTR [esi+0x3]
  426b17:	mov    BYTE PTR [edi+0x3],al
  426b1a:	mov    al,BYTE PTR [esi+0x2]
  426b1d:	mov    BYTE PTR [edi+0x2],al
  426b20:	mov    al,BYTE PTR [esi+0x1]
  426b23:	mov    BYTE PTR [edi+0x1],al
  426b26:	mov    eax,DWORD PTR [ebp+0x8]
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	leave  
  426b2c:	ret    
  426b2d:	push   ebp
  426b2e:	mov    ebp,esp
  426b30:	sub    esp,0xc
  426b33:	mov    eax,ds:0x45c430
  426b38:	xor    eax,DWORD PTR [ebp+0x4]
  426b3b:	and    BYTE PTR [ebp-0x6],0x0
  426b3f:	push   0x6
  426b41:	mov    DWORD PTR [ebp-0x4],eax
  426b44:	lea    eax,[ebp-0xc]
  426b47:	push   eax
  426b48:	push   0x1004
  426b4d:	push   DWORD PTR [ebp+0x8]
  426b50:	call   DWORD PTR ds:0x4280e0
  426b56:	test   eax,eax
  426b58:	jne    0x426b5f
  426b5a:	or     eax,0xffffffff
  426b5d:	jmp    0x426b69
  426b5f:	lea    eax,[ebp-0xc]
  426b62:	push   eax
  426b63:	call   0x426e6e
  426b68:	pop    ecx
  426b69:	mov    ecx,DWORD PTR [ebp-0x4]
  426b6c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b6f:	call   0x423f7c
  426b74:	leave  
  426b75:	ret    
  426b76:	push   0x38
  426b78:	push   0x428eb0
  426b7d:	call   0x4238a8
  426b82:	mov    eax,ds:0x45c430
  426b87:	xor    eax,DWORD PTR [ebp+0x4]
  426b8a:	mov    DWORD PTR [ebp-0x1c],eax
  426b8d:	xor    edi,edi
  426b8f:	mov    DWORD PTR [ebp-0x20],edi
  426b92:	mov    DWORD PTR [ebp-0x24],edi
  426b95:	mov    eax,DWORD PTR [ebp+0x14]
  426b98:	mov    ebx,DWORD PTR [eax]
  426b9a:	mov    DWORD PTR [ebp-0x28],ebx
  426b9d:	mov    DWORD PTR [ebp-0x2c],edi
  426ba0:	mov    eax,DWORD PTR [ebp+0x8]
  426ba3:	cmp    eax,DWORD PTR [ebp+0xc]
  426ba6:	je     0x426d1f
  426bac:	lea    ecx,[ebp-0x40]
  426baf:	push   ecx
  426bb0:	push   eax
  426bb1:	mov    esi,DWORD PTR ds:0x4280a4
  426bb7:	call   esi
  426bb9:	test   eax,eax
  426bbb:	je     0x426bdd
  426bbd:	cmp    DWORD PTR [ebp-0x40],0x1
  426bc1:	jne    0x426bdd
  426bc3:	lea    eax,[ebp-0x40]
  426bc6:	push   eax
  426bc7:	push   DWORD PTR [ebp+0xc]
  426bca:	call   esi
  426bcc:	test   eax,eax
  426bce:	je     0x426bdd
  426bd0:	cmp    DWORD PTR [ebp-0x40],0x1
  426bd4:	jne    0x426bdd
  426bd6:	mov    DWORD PTR [ebp-0x2c],0x1
  426bdd:	cmp    DWORD PTR [ebp-0x2c],edi
  426be0:	je     0x426bfc
  426be2:	cmp    ebx,0xffffffff
  426be5:	je     0x426beb
  426be7:	mov    esi,ebx
  426be9:	jmp    0x426bf7
  426beb:	push   DWORD PTR [ebp+0x10]
  426bee:	call   0x423ec0
  426bf3:	pop    ecx
  426bf4:	mov    esi,eax
  426bf6:	inc    esi
  426bf7:	mov    DWORD PTR [ebp-0x44],esi
  426bfa:	jmp    0x426bff
  426bfc:	mov    esi,DWORD PTR [ebp-0x44]
  426bff:	cmp    DWORD PTR [ebp-0x2c],edi
  426c02:	jne    0x426c1e
  426c04:	push   edi
  426c05:	push   edi
  426c06:	push   ebx
  426c07:	push   DWORD PTR [ebp+0x10]
  426c0a:	push   0x1
  426c0c:	push   DWORD PTR [ebp+0x8]
  426c0f:	call   DWORD PTR ds:0x4280d0
  426c15:	mov    esi,eax
  426c17:	mov    DWORD PTR [ebp-0x44],esi
  426c1a:	cmp    esi,edi
  426c1c:	je     0x426c76
  426c1e:	mov    DWORD PTR [ebp-0x4],edi
  426c21:	lea    eax,[esi+esi*1]
  426c24:	add    eax,0x3
  426c27:	and    eax,0xfffffffc
  426c2a:	call   0x423900
  426c2f:	mov    DWORD PTR [ebp-0x18],esp
  426c32:	mov    ebx,esp
  426c34:	mov    DWORD PTR [ebp-0x48],ebx
  426c37:	lea    eax,[esi+esi*1]
  426c3a:	push   eax
  426c3b:	push   edi
  426c3c:	push   ebx
  426c3d:	call   0x4261b0
  426c42:	add    esp,0xc
  426c45:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c49:	jmp    0x426c62
  426c4b:	xor    eax,eax
  426c4d:	inc    eax
  426c4e:	ret    
  426c4f:	mov    esp,DWORD PTR [ebp-0x18]
  426c52:	call   0x426d45
  426c57:	xor    edi,edi
  426c59:	xor    ebx,ebx
  426c5b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c5f:	mov    esi,DWORD PTR [ebp-0x44]
  426c62:	cmp    ebx,edi
  426c64:	jne    0x426c84
  426c66:	push   esi
  426c67:	push   0x2
  426c69:	call   0x4249c8
  426c6e:	pop    ecx
  426c6f:	pop    ecx
  426c70:	mov    ebx,eax
  426c72:	cmp    ebx,edi
  426c74:	jne    0x426c7d
  426c76:	xor    eax,eax
  426c78:	jmp    0x426d31
  426c7d:	mov    DWORD PTR [ebp-0x24],0x1
  426c84:	push   esi
  426c85:	push   ebx
  426c86:	push   DWORD PTR [ebp-0x28]
  426c89:	push   DWORD PTR [ebp+0x10]
  426c8c:	push   0x1
  426c8e:	push   DWORD PTR [ebp+0x8]
  426c91:	call   DWORD PTR ds:0x4280d0
  426c97:	test   eax,eax
  426c99:	je     0x426d22
  426c9f:	cmp    DWORD PTR [ebp+0x18],edi
  426ca2:	je     0x426cc4
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   DWORD PTR [ebp+0x1c]
  426ca9:	push   DWORD PTR [ebp+0x18]
  426cac:	push   esi
  426cad:	push   ebx
  426cae:	push   edi
  426caf:	push   DWORD PTR [ebp+0xc]
  426cb2:	call   DWORD PTR ds:0x428054
  426cb8:	test   eax,eax
  426cba:	je     0x426d22
  426cbc:	mov    eax,DWORD PTR [ebp+0x18]
  426cbf:	mov    DWORD PTR [ebp-0x20],eax
  426cc2:	jmp    0x426d22
  426cc4:	cmp    DWORD PTR [ebp-0x2c],edi
  426cc7:	jne    0x426cdf
  426cc9:	push   edi
  426cca:	push   edi
  426ccb:	push   edi
  426ccc:	push   edi
  426ccd:	push   esi
  426cce:	push   ebx
  426ccf:	push   edi
  426cd0:	push   DWORD PTR [ebp+0xc]
  426cd3:	call   DWORD PTR ds:0x428054
  426cd9:	mov    esi,eax
  426cdb:	cmp    esi,edi
  426cdd:	je     0x426d22
  426cdf:	push   esi
  426ce0:	push   0x1
  426ce2:	call   0x4249c8
  426ce7:	pop    ecx
  426ce8:	pop    ecx
  426ce9:	mov    DWORD PTR [ebp-0x20],eax
  426cec:	cmp    eax,edi
  426cee:	je     0x426d22
  426cf0:	push   edi
  426cf1:	push   edi
  426cf2:	push   esi
  426cf3:	push   eax
  426cf4:	push   esi
  426cf5:	push   ebx
  426cf6:	push   edi
  426cf7:	push   DWORD PTR [ebp+0xc]
  426cfa:	call   DWORD PTR ds:0x428054
  426d00:	cmp    eax,edi
  426d02:	jne    0x426d12
  426d04:	push   DWORD PTR [ebp-0x20]
  426d07:	call   0x4244ba
  426d0c:	pop    ecx
  426d0d:	mov    DWORD PTR [ebp-0x20],edi
  426d10:	jmp    0x426d22
  426d12:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426d16:	je     0x426d22
  426d18:	mov    ecx,DWORD PTR [ebp+0x14]
  426d1b:	mov    DWORD PTR [ecx],eax
  426d1d:	jmp    0x426d22
  426d1f:	mov    ebx,DWORD PTR [ebp-0x48]
  426d22:	cmp    DWORD PTR [ebp-0x24],edi
  426d25:	je     0x426d2e
  426d27:	push   ebx
  426d28:	call   0x4244ba
  426d2d:	pop    ecx
  426d2e:	mov    eax,DWORD PTR [ebp-0x20]
  426d31:	lea    esp,[ebp-0x54]
  426d34:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d37:	xor    ecx,DWORD PTR [ebp+0x4]
  426d3a:	call   0x423f7c
  426d3f:	call   0x4238e3
  426d44:	ret    
  426d45:	push   ebp
  426d46:	mov    ebp,esp
  426d48:	sub    esp,0x48
  426d4b:	push   ebx
  426d4c:	push   esi
  426d4d:	push   edi
  426d4e:	push   0x4
  426d50:	pop    eax
  426d51:	call   0x423900
  426d56:	mov    ebx,esp
  426d58:	push   0x1c
  426d5a:	lea    eax,[ebp-0x24]
  426d5d:	push   eax
  426d5e:	push   ebx
  426d5f:	call   DWORD PTR ds:0x4280f0
  426d65:	test   eax,eax
  426d67:	je     0x426dda
  426d69:	mov    edi,DWORD PTR [ebp-0x20]
  426d6c:	lea    eax,[ebp-0x48]
  426d6f:	push   eax
  426d70:	call   DWORD PTR ds:0x4280ec
  426d76:	mov    eax,DWORD PTR [ebp-0x44]
  426d79:	lea    esi,[eax-0x1]
  426d7c:	not    esi
  426d7e:	and    esi,ebx
  426d80:	sub    esi,eax
  426d82:	mov    DWORD PTR [ebp-0x4],eax
  426d85:	mov    eax,ds:0x45cac4
  426d8a:	mov    ecx,eax
  426d8c:	dec    ecx
  426d8d:	neg    ecx
  426d8f:	sbb    ecx,ecx
  426d91:	and    ecx,0xffff1000
  426d97:	add    ecx,0x11000
  426d9d:	add    ecx,edi
  426d9f:	cmp    esi,ecx
  426da1:	jb     0x426dda
  426da3:	cmp    eax,0x1
  426da6:	je     0x426df2
  426da8:	mov    ebx,edi
  426daa:	mov    edi,0x1000
  426daf:	push   0x1c
  426db1:	lea    eax,[ebp-0x24]
  426db4:	push   eax
  426db5:	push   ebx
  426db6:	call   DWORD PTR ds:0x4280f0
  426dbc:	test   eax,eax
  426dbe:	je     0x426dda
  426dc0:	add    ebx,DWORD PTR [ebp-0x18]
  426dc3:	test   DWORD PTR [ebp-0x14],edi
  426dc6:	je     0x426daf
  426dc8:	test   BYTE PTR [ebp-0xf],0x1
  426dcc:	mov    ebx,DWORD PTR [ebp-0x24]
  426dcf:	je     0x426dd6
  426dd1:	xor    eax,eax
  426dd3:	inc    eax
  426dd4:	jmp    0x426e0e
  426dd6:	cmp    esi,ebx
  426dd8:	jae    0x426dde
  426dda:	xor    eax,eax
  426ddc:	jmp    0x426e0e
  426dde:	push   0x4
  426de0:	push   edi
  426de1:	push   DWORD PTR [ebp-0x4]
  426de4:	push   ebx
  426de5:	call   DWORD PTR ds:0x4280b0
  426deb:	mov    eax,ds:0x45cac4
  426df0:	jmp    0x426df4
  426df2:	mov    ebx,esi
  426df4:	dec    eax
  426df5:	neg    eax
  426df7:	sbb    eax,eax
  426df9:	and    eax,0x103
  426dfe:	lea    ecx,[ebp-0x8]
  426e01:	push   ecx
  426e02:	inc    eax
  426e03:	push   eax
  426e04:	push   DWORD PTR [ebp-0x4]
  426e07:	push   ebx
  426e08:	call   DWORD PTR ds:0x4280e8
  426e0e:	lea    esp,[ebp-0x54]
  426e11:	pop    edi
  426e12:	pop    esi
  426e13:	pop    ebx
  426e14:	leave  
  426e15:	ret    
  426e16:	int3   
  426e17:	int3   
  426e18:	int3   
  426e19:	int3   
  426e1a:	int3   
  426e1b:	int3   
  426e1c:	int3   
  426e1d:	int3   
  426e1e:	int3   
  426e1f:	int3   
  426e20:	push   ebp
  426e21:	mov    ebp,esp
  426e23:	push   edi
  426e24:	push   esi
  426e25:	push   ebx
  426e26:	mov    esi,DWORD PTR [ebp+0xc]
  426e29:	mov    edi,DWORD PTR [ebp+0x8]
  426e2c:	mov    al,0xff
  426e2e:	mov    edi,edi
  426e30:	or     al,al
  426e32:	je     0x426e66
  426e34:	mov    al,BYTE PTR [esi]
  426e36:	add    esi,0x1
  426e39:	mov    ah,BYTE PTR [edi]
  426e3b:	add    edi,0x1
  426e3e:	cmp    ah,al
  426e40:	je     0x426e30
  426e42:	sub    al,0x41
  426e44:	cmp    al,0x1a
  426e46:	sbb    cl,cl
  426e48:	and    cl,0x20
  426e4b:	add    al,cl
  426e4d:	add    al,0x41
  426e4f:	xchg   al,ah
  426e51:	sub    al,0x41
  426e53:	cmp    al,0x1a
  426e55:	sbb    cl,cl
  426e57:	and    cl,0x20
  426e5a:	add    al,cl
  426e5c:	add    al,0x41
  426e5e:	cmp    al,ah
  426e60:	je     0x426e30
  426e62:	sbb    al,al
  426e64:	sbb    al,0xff
  426e66:	movsx  eax,al
  426e69:	pop    ebx
  426e6a:	pop    esi
  426e6b:	pop    edi
  426e6c:	leave  
  426e6d:	ret    
  426e6e:	push   esi
  426e6f:	push   edi
  426e70:	call   0x42375d
  426e75:	mov    edi,DWORD PTR [eax+0x64]
  426e78:	cmp    edi,DWORD PTR ds:0x45c58c
  426e7e:	je     0x426e87
  426e80:	call   0x424c0f
  426e85:	mov    edi,eax
  426e87:	mov    esi,DWORD PTR [esp+0xc]
  426e8b:	cmp    DWORD PTR [edi+0x28],0x1
  426e8f:	movzx  eax,BYTE PTR [esi]
  426e92:	jle    0x426ea2
  426e94:	push   0x8
  426e96:	push   eax
  426e97:	push   edi
  426e98:	call   0x426ef6
  426e9d:	add    esp,0xc
  426ea0:	jmp    0x426eac
  426ea2:	mov    ecx,DWORD PTR [edi+0x48]
  426ea5:	movzx  eax,BYTE PTR [ecx+eax*2]
  426ea9:	and    eax,0x8
  426eac:	test   eax,eax
  426eae:	je     0x426eb3
  426eb0:	inc    esi
  426eb1:	jmp    0x426e8b
  426eb3:	movzx  ecx,BYTE PTR [esi]
  426eb6:	inc    esi
  426eb7:	cmp    ecx,0x2d
  426eba:	mov    edx,ecx
  426ebc:	je     0x426ec3
  426ebe:	cmp    ecx,0x2b
  426ec1:	jne    0x426ec7
  426ec3:	movzx  ecx,BYTE PTR [esi]
  426ec6:	inc    esi
  426ec7:	xor    eax,eax
  426ec9:	cmp    ecx,0x30
  426ecc:	jl     0x426ed8
  426ece:	cmp    ecx,0x39
  426ed1:	jg     0x426ed8
  426ed3:	sub    ecx,0x30
  426ed6:	jmp    0x426edb
  426ed8:	or     ecx,0xffffffff
  426edb:	cmp    ecx,0xffffffff
  426ede:	je     0x426eec
  426ee0:	lea    eax,[eax+eax*4]
  426ee3:	lea    eax,[ecx+eax*2]
  426ee6:	movzx  ecx,BYTE PTR [esi]
  426ee9:	inc    esi
  426eea:	jmp    0x426ec9
  426eec:	cmp    edx,0x2d
  426eef:	pop    edi
  426ef0:	pop    esi
  426ef1:	jne    0x426ef5
  426ef3:	neg    eax
  426ef5:	ret    
  426ef6:	push   ebp
  426ef7:	mov    ebp,esp
  426ef9:	push   ecx
  426efa:	mov    eax,DWORD PTR [ebp+0xc]
  426efd:	lea    ecx,[eax+0x1]
  426f00:	cmp    ecx,0x100
  426f06:	mov    ecx,DWORD PTR [ebp+0x8]
  426f09:	ja     0x426f14
  426f0b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f0e:	movzx  eax,WORD PTR [ecx+eax*2]
  426f12:	jmp    0x426f68
  426f14:	push   esi
  426f15:	mov    edx,eax
  426f17:	sar    edx,0x8
  426f1a:	push   edi
  426f1b:	mov    edi,DWORD PTR [ecx+0x48]
  426f1e:	movzx  esi,dl
  426f21:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426f26:	pop    edi
  426f27:	pop    esi
  426f28:	je     0x426f39
  426f2a:	and    BYTE PTR [ebp-0x2],0x0
  426f2e:	push   0x2
  426f30:	mov    BYTE PTR [ebp-0x3],al
  426f33:	mov    BYTE PTR [ebp-0x4],dl
  426f36:	pop    eax
  426f37:	jmp    0x426f43
  426f39:	and    BYTE PTR [ebp-0x3],0x0
  426f3d:	mov    BYTE PTR [ebp-0x4],al
  426f40:	xor    eax,eax
  426f42:	inc    eax
  426f43:	push   0x1
  426f45:	push   DWORD PTR [ecx+0x14]
  426f48:	push   DWORD PTR [ecx+0x4]
  426f4b:	lea    ecx,[ebp+0xe]
  426f4e:	push   ecx
  426f4f:	push   eax
  426f50:	lea    eax,[ebp-0x4]
  426f53:	push   eax
  426f54:	push   0x1
  426f56:	call   0x425fd8
  426f5b:	add    esp,0x1c
  426f5e:	test   eax,eax
  426f60:	jne    0x426f64
  426f62:	leave  
  426f63:	ret    
  426f64:	movzx  eax,WORD PTR [ebp+0xe]
  426f68:	and    eax,DWORD PTR [ebp+0x10]
  426f6b:	leave  
  426f6c:	ret    
  426f6d:	int3   
  426f6e:	int3   
  426f6f:	int3   
  426f70:	mov    eax,DWORD PTR [esp+0x8]
  426f74:	mov    ecx,DWORD PTR [esp+0x10]
  426f78:	or     ecx,eax
  426f7a:	mov    ecx,DWORD PTR [esp+0xc]
  426f7e:	jne    0x426f89
  426f80:	mov    eax,DWORD PTR [esp+0x4]
  426f84:	mul    ecx
  426f86:	ret    0x10
  426f89:	push   ebx
  426f8a:	mul    ecx
  426f8c:	mov    ebx,eax
  426f8e:	mov    eax,DWORD PTR [esp+0x8]
  426f92:	mul    DWORD PTR [esp+0x14]
  426f96:	add    ebx,eax
  426f98:	mov    eax,DWORD PTR [esp+0x8]
  426f9c:	mul    ecx
  426f9e:	add    edx,ebx
  426fa0:	pop    ebx
  426fa1:	ret    0x10
  426fa4:	int3   
  426fa5:	int3   
  426fa6:	int3   
  426fa7:	int3   
  426fa8:	int3   
  426fa9:	int3   
  426faa:	int3   
  426fab:	int3   
  426fac:	int3   
  426fad:	int3   
  426fae:	int3   
  426faf:	int3   
  426fb0:	push   ebp
  426fb1:	mov    ebp,esp
  426fb3:	push   edi
  426fb4:	push   esi
  426fb5:	push   ebx
  426fb6:	mov    ecx,DWORD PTR [ebp+0x10]
  426fb9:	or     ecx,ecx
  426fbb:	je     0x42700a
  426fbd:	mov    esi,DWORD PTR [ebp+0x8]
  426fc0:	mov    edi,DWORD PTR [ebp+0xc]
  426fc3:	mov    bh,0x41
  426fc5:	mov    bl,0x5a
  426fc7:	mov    dh,0x20
  426fc9:	lea    ecx,[ecx+0x0]
  426fcc:	mov    ah,BYTE PTR [esi]
  426fce:	or     ah,ah
  426fd0:	mov    al,BYTE PTR [edi]
  426fd2:	je     0x426ffb
  426fd4:	or     al,al
  426fd6:	je     0x426ffb
  426fd8:	add    esi,0x1
  426fdb:	add    edi,0x1
  426fde:	cmp    ah,bh
  426fe0:	jb     0x426fe8
  426fe2:	cmp    ah,bl
  426fe4:	ja     0x426fe8
  426fe6:	add    ah,dh
  426fe8:	cmp    al,bh
  426fea:	jb     0x426ff2
  426fec:	cmp    al,bl
  426fee:	ja     0x426ff2
  426ff0:	add    al,dh
  426ff2:	cmp    ah,al
  426ff4:	jne    0x427001
  426ff6:	sub    ecx,0x1
  426ff9:	jne    0x426fcc
  426ffb:	xor    ecx,ecx
  426ffd:	cmp    ah,al
  426fff:	je     0x42700a
  427001:	mov    ecx,0xffffffff
  427006:	jb     0x42700a
  427008:	neg    ecx
  42700a:	mov    eax,ecx
  42700c:	pop    ebx
  42700d:	pop    esi
  42700e:	pop    edi
  42700f:	leave  
  427010:	ret    
  427011:	int3   
  427012:	int3   
  427013:	int3   
  427014:	int3   
  427015:	int3   
  427016:	int3   
  427017:	int3   
  427018:	int3   
  427019:	int3   
  42701a:	int3   
  42701b:	int3   
  42701c:	int3   
  42701d:	int3   
  42701e:	int3   
  42701f:	int3   
  427020:	push   esi
  427021:	mov    eax,DWORD PTR [esp+0x14]
  427025:	or     eax,eax
  427027:	jne    0x427051
  427029:	mov    ecx,DWORD PTR [esp+0x10]
  42702d:	mov    eax,DWORD PTR [esp+0xc]
  427031:	xor    edx,edx
  427033:	div    ecx
  427035:	mov    ebx,eax
  427037:	mov    eax,DWORD PTR [esp+0x8]
  42703b:	div    ecx
  42703d:	mov    esi,eax
  42703f:	mov    eax,ebx
  427041:	mul    DWORD PTR [esp+0x10]
  427045:	mov    ecx,eax
  427047:	mov    eax,esi
  427049:	mul    DWORD PTR [esp+0x10]
  42704d:	add    edx,ecx
  42704f:	jmp    0x427098
  427051:	mov    ecx,eax
  427053:	mov    ebx,DWORD PTR [esp+0x10]
  427057:	mov    edx,DWORD PTR [esp+0xc]
  42705b:	mov    eax,DWORD PTR [esp+0x8]
  42705f:	shr    ecx,1
  427061:	rcr    ebx,1
  427063:	shr    edx,1
  427065:	rcr    eax,1
  427067:	or     ecx,ecx
  427069:	jne    0x42705f
  42706b:	div    ebx
  42706d:	mov    esi,eax
  42706f:	mul    DWORD PTR [esp+0x14]
  427073:	mov    ecx,eax
  427075:	mov    eax,DWORD PTR [esp+0x10]
  427079:	mul    esi
  42707b:	add    edx,ecx
  42707d:	jb     0x42708d
  42707f:	cmp    edx,DWORD PTR [esp+0xc]
  427083:	ja     0x42708d
  427085:	jb     0x427096
  427087:	cmp    eax,DWORD PTR [esp+0x8]
  42708b:	jbe    0x427096
  42708d:	dec    esi
  42708e:	sub    eax,DWORD PTR [esp+0x10]
  427092:	sbb    edx,DWORD PTR [esp+0x14]
  427096:	xor    ebx,ebx
  427098:	sub    eax,DWORD PTR [esp+0x8]
  42709c:	sbb    edx,DWORD PTR [esp+0xc]
  4270a0:	neg    edx
  4270a2:	neg    eax
  4270a4:	sbb    edx,0x0
  4270a7:	mov    ecx,edx
  4270a9:	mov    edx,ebx
  4270ab:	mov    ebx,ecx
  4270ad:	mov    ecx,eax
  4270af:	mov    eax,esi
  4270b1:	pop    esi
  4270b2:	ret    0x10
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	lea    eax,[edx-0x1]
  4270c3:	pop    ebx
  4270c4:	ret    
  4270c5:	lea    esp,[esp+0x0]
  4270cc:	lea    esp,[esp+0x0]
  4270d0:	xor    eax,eax
  4270d2:	mov    al,BYTE PTR [esp+0x8]
  4270d6:	push   ebx
  4270d7:	mov    ebx,eax
  4270d9:	shl    eax,0x8
  4270dc:	mov    edx,DWORD PTR [esp+0x8]
  4270e0:	test   edx,0x3
  4270e6:	je     0x4270fd
  4270e8:	mov    cl,BYTE PTR [edx]
  4270ea:	add    edx,0x1
  4270ed:	cmp    cl,bl
  4270ef:	je     0x4270c0
  4270f1:	test   cl,cl
  4270f3:	je     0x427146
  4270f5:	test   edx,0x3
  4270fb:	jne    0x4270e8
  4270fd:	or     ebx,eax
  4270ff:	push   edi
  427100:	mov    eax,ebx
  427102:	shl    ebx,0x10
  427105:	push   esi
  427106:	or     ebx,eax
  427108:	mov    ecx,DWORD PTR [edx]
  42710a:	mov    edi,0x7efefeff
  42710f:	mov    eax,ecx
  427111:	mov    esi,edi
  427113:	xor    ecx,ebx
  427115:	add    esi,eax
  427117:	add    edi,ecx
  427119:	xor    ecx,0xffffffff
  42711c:	xor    eax,0xffffffff
  42711f:	xor    ecx,edi
  427121:	xor    eax,esi
  427123:	add    edx,0x4
  427126:	and    ecx,0x81010100
  42712c:	jne    0x42714a
  42712e:	and    eax,0x81010100
  427133:	je     0x427108
  427135:	and    eax,0x1010100
  42713a:	jne    0x427144
  42713c:	and    esi,0x80000000
  427142:	jne    0x427108
  427144:	pop    esi
  427145:	pop    edi
  427146:	pop    ebx
  427147:	xor    eax,eax
  427149:	ret    
  42714a:	mov    eax,DWORD PTR [edx-0x4]
  42714d:	cmp    al,bl
  42714f:	je     0x427187
  427151:	test   al,al
  427153:	je     0x427144
  427155:	cmp    ah,bl
  427157:	je     0x427180
  427159:	test   ah,ah
  42715b:	je     0x427144
  42715d:	shr    eax,0x10
  427160:	cmp    al,bl
  427162:	je     0x427179
  427164:	test   al,al
  427166:	je     0x427144
  427168:	cmp    ah,bl
  42716a:	je     0x427172
  42716c:	test   ah,ah
  42716e:	je     0x427144
  427170:	jmp    0x427108
  427172:	pop    esi
  427173:	pop    edi
  427174:	lea    eax,[edx-0x1]
  427177:	pop    ebx
  427178:	ret    
  427179:	lea    eax,[edx-0x2]
  42717c:	pop    esi
  42717d:	pop    edi
  42717e:	pop    ebx
  42717f:	ret    
  427180:	lea    eax,[edx-0x3]
  427183:	pop    esi
  427184:	pop    edi
  427185:	pop    ebx
  427186:	ret    
  427187:	lea    eax,[edx-0x4]
  42718a:	pop    esi
  42718b:	pop    edi
  42718c:	pop    ebx
  42718d:	ret    
  42718e:	jmp    DWORD PTR ds:0x4280e4
