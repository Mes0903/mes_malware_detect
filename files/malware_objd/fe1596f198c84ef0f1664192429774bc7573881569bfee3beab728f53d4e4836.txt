
fe1596f198c84ef0f1664192429774bc7573881569bfee3beab728f53d4e4836.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xcc
  401009:	xor    DWORD PTR ds:0x42d014,0x42a000
  401013:	push   esi
  401014:	movzx  esi,WORD PTR ds:0x429014
  40101b:	sub    DWORD PTR ds:0x42a018,esi
  401021:	mov    esi,DWORD PTR ds:0x42ed49
  401027:	push   0x8
  401029:	push   0x42e545
  40102e:	and    DWORD PTR ds:0x42c010,0x110f
  401038:	call   esi
  40103a:	test   eax,eax
  40103c:	mov    DWORD PTR ds:0x42a018,0x6e1c
  401046:	je     0x40105d
  40104c:	adc    DWORD PTR ds:0x42a014,0x429000
  401056:	xor    eax,eax
  401058:	jmp    0x4029a4
  40105d:	push   edi
  40105e:	push   0x42e555
  401063:	xor    edi,edi
  401065:	and    DWORD PTR ds:0x42c004,0x42d018
  40106f:	inc    edi
  401070:	push   edi
  401071:	push   edi
  401072:	call   DWORD PTR ds:0x42ed79
  401078:	xor    DWORD PTR ds:0x42d01c,0x429020
  401082:	test   eax,eax
  401084:	mov    DWORD PTR ds:0x42c004,0x42a7
  40108e:	je     0x4010a5
  401094:	xor    eax,eax
  401096:	mov    DWORD PTR ds:0x42a018,0x32e7
  4010a0:	jmp    0x4029a3
  4010a5:	sbb    DWORD PTR ds:0x42a010,0x2663
  4010af:	push   ebx
  4010b0:	and    DWORD PTR ds:0x42d008,0x0
  4010ba:	mov    ebx,DWORD PTR ds:0x42d008
  4010c0:	inc    ebx
  4010c1:	mov    DWORD PTR ds:0x42d008,ebx
  4010c7:	cmp    DWORD PTR ds:0x42d008,0xb
  4010ce:	jne    0x4010e4
  4010d4:	push   0x2cfb
  4010d9:	push   0x7de9
  4010de:	call   DWORD PTR ds:0x42ed35
  4010e4:	cmp    DWORD PTR ds:0x42d008,0xa
  4010eb:	jne    0x4010fe
  4010f1:	mov    ebx,DWORD PTR ds:0x42d008
  4010f7:	inc    ebx
  4010f8:	mov    DWORD PTR ds:0x42d008,ebx
  4010fe:	cmp    DWORD PTR ds:0x42d008,0x12
  401105:	jb     0x4010ba
  40110b:	mov    ebx,DWORD PTR ds:0x42ed4d
  401111:	push   0x42e565
  401116:	sub    DWORD PTR ds:0x429014,0x429020
  401120:	push   edi
  401121:	mov    DWORD PTR ds:0x42b01c,0x3048
  40112b:	push   edi
  40112c:	call   ebx
  40112e:	and    DWORD PTR ds:0x42c00c,0x5ead
  401138:	test   eax,eax
  40113a:	jne    0x401e1f
  401140:	push   0xc
  401142:	push   0x42e589
  401147:	adc    DWORD PTR ds:0x42c010,0x42d010
  401151:	call   esi
  401153:	test   eax,eax
  401155:	mov    DWORD PTR ds:0x42a01c,0x6b4c
  40115f:	jne    0x401e1f
  401165:	push   0x7
  401167:	push   0x42e59d
  40116c:	call   esi
  40116e:	xor    DWORD PTR ds:0x429028,0x6216
  401178:	test   eax,eax
  40117a:	jne    0x401e1f
  401180:	add    DWORD PTR ds:0x429004,0x14dc
  40118a:	push   0x8
  40118c:	and    DWORD PTR ds:0x42c00c,0x42a000
  401196:	push   0x42e5ad
  40119b:	add    DWORD PTR ds:0x42a018,0x317f
  4011a5:	call   esi
  4011a7:	test   eax,eax
  4011a9:	mov    DWORD PTR ds:0x42c014,0x304b
  4011b3:	jne    0x401e1f
  4011b9:	push   0x42e5bd
  4011be:	xor    DWORD PTR ds:0x42d014,0x42b004
  4011c8:	push   edi
  4011c9:	push   edi
  4011ca:	sub    DWORD PTR ds:0x429010,0x429028
  4011d4:	call   DWORD PTR ds:0x42ed79
  4011da:	not    DWORD PTR ds:0x42b000
  4011e0:	test   eax,eax
  4011e2:	mov    DWORD PTR ds:0x429008,0x4a9f
  4011ec:	jne    0x401e1f
  4011f2:	push   0x42e5cd
  4011f7:	push   edi
  4011f8:	adc    DWORD PTR ds:0x42d000,0x42900c
  401202:	push   edi
  401203:	call   ebx
  401205:	test   eax,eax
  401207:	jne    0x401e1f
  40120d:	xor    DWORD PTR ds:0x429000,0x429010
  401217:	push   0xc
  401219:	and    DWORD PTR ds:0x42b00c,0x6767
  401223:	push   0x42e5f1
  401228:	sub    DWORD PTR ds:0x42a010,0x429018
  401232:	call   esi
  401234:	sub    DWORD PTR ds:0x429010,0x42a010
  40123e:	test   eax,eax
  401240:	jne    0x401e1f
  401246:	push   0x7
  401248:	push   0x42e605
  40124d:	and    DWORD PTR ds:0x42c004,0x42b014
  401257:	call   esi
  401259:	test   eax,eax
  40125b:	mov    DWORD PTR ds:0x42c014,0x7e03
  401265:	jne    0x401e1f
  40126b:	and    DWORD PTR ds:0x429020,0x42d000
  401275:	push   0x8
  401277:	sbb    DWORD PTR ds:0x42a008,0x42901c
  401281:	push   0x42e615
  401286:	add    DWORD PTR ds:0x42c01c,0x42d010
  401290:	call   esi
  401292:	test   eax,eax
  401294:	mov    DWORD PTR ds:0x429008,0x7503
  40129e:	jne    0x401e1f
  4012a4:	push   0x42e625
  4012a9:	and    DWORD PTR ds:0x42d008,0x42c000
  4012b3:	push   edi
  4012b4:	push   edi
  4012b5:	call   DWORD PTR ds:0x42ed79
  4012bb:	or     DWORD PTR ds:0x42c01c,0x42d000
  4012c5:	test   eax,eax
  4012c7:	jne    0x401e1f
  4012cd:	add    DWORD PTR ds:0x42b018,0x42d004
  4012d7:	push   0x42e635
  4012dc:	and    DWORD PTR ds:0x42900c,0x42a018
  4012e6:	push   edi
  4012e7:	push   edi
  4012e8:	and    DWORD PTR ds:0x42c018,0x4f5c
  4012f2:	call   ebx
  4012f4:	xor    DWORD PTR ds:0x42b00c,0x577f
  4012fe:	test   eax,eax
  401300:	jne    0x401e1f
  401306:	push   0xc
  401308:	push   0x42e659
  40130d:	xor    DWORD PTR ds:0x429018,0x2dc5
  401317:	call   esi
  401319:	mov    DWORD PTR ds:0x42d014,0x790c
  401323:	test   eax,eax
  401325:	mov    DWORD PTR ds:0x42a014,0x2892
  40132f:	jne    0x401e1f
  401335:	sub    DWORD PTR ds:0x42d004,0x3ee1
  40133f:	push   0x7
  401341:	xor    DWORD PTR ds:0x42a01c,0x42b018
  40134b:	push   0x42e66d
  401350:	and    DWORD PTR ds:0x42c018,0x42d014
  40135a:	call   esi
  40135c:	test   eax,eax
  40135e:	mov    DWORD PTR ds:0x429008,0x4095
  401368:	jne    0x401e1f
  40136e:	sub    DWORD PTR ds:0x42d008,0x42b000
  401378:	push   0x8
  40137a:	adc    DWORD PTR ds:0x42d018,0x42c00c
  401384:	push   0x42e67d
  401389:	xor    DWORD PTR ds:0x42c014,0x7b1e
  401393:	call   esi
  401395:	test   eax,eax
  401397:	mov    DWORD PTR ds:0x42c010,0x4421
  4013a1:	jne    0x401e1f
  4013a7:	push   0x42e68d
  4013ac:	xor    DWORD PTR ds:0x42d018,0x31e9
  4013b6:	push   edi
  4013b7:	push   edi
  4013b8:	dec    DWORD PTR ds:0x42b010
  4013be:	call   DWORD PTR ds:0x42ed79
  4013c4:	test   eax,eax
  4013c6:	mov    DWORD PTR ds:0x429008,0x30d5
  4013d0:	jne    0x401e1f
  4013d6:	push   0x42e69d
  4013db:	push   edi
  4013dc:	adc    DWORD PTR ds:0x42c018,0x42d014
  4013e6:	push   edi
  4013e7:	sbb    DWORD PTR ds:0x429024,0x42b00c
  4013f1:	call   ebx
  4013f3:	xor    DWORD PTR ds:0x42b004,0x3165
  4013fd:	test   eax,eax
  4013ff:	mov    DWORD PTR ds:0x429028,0x3c76
  401409:	jne    0x401e1f
  40140f:	push   0xc
  401411:	or     DWORD PTR ds:0x42d000,0x42c004
  40141b:	push   0x42e6c1
  401420:	call   esi
  401422:	test   eax,eax
  401424:	mov    DWORD PTR ds:0x42d01c,0x6bbc
  40142e:	jne    0x401e1f
  401434:	and    DWORD PTR ds:0x42c018,0x24ff
  40143e:	push   0x7
  401440:	push   0x42e6d5
  401445:	add    DWORD PTR ds:0x42c008,0x429024
  40144f:	call   esi
  401451:	adc    DWORD PTR ds:0x429008,0x42b004
  40145b:	test   eax,eax
  40145d:	jne    0x401e1f
  401463:	push   0x8
  401465:	push   0x42e6e5
  40146a:	or     DWORD PTR ds:0x42a00c,0x2f15
  401474:	call   esi
  401476:	test   eax,eax
  401478:	jne    0x401e1f
  40147e:	push   0x42e6f5
  401483:	push   edi
  401484:	add    DWORD PTR ds:0x42a008,0x52fe
  40148e:	push   edi
  40148f:	call   DWORD PTR ds:0x42ed79
  401495:	sub    DWORD PTR ds:0x429018,0x42c010
  40149f:	test   eax,eax
  4014a1:	mov    DWORD PTR ds:0x42d014,0x5fc2
  4014ab:	jne    0x401e1f
  4014b1:	push   0x42e705
  4014b6:	add    DWORD PTR ds:0x42b014,0x42a00c
  4014c0:	push   edi
  4014c1:	push   edi
  4014c2:	xor    DWORD PTR ds:0x42b00c,0x37e4
  4014cc:	call   ebx
  4014ce:	mov    DWORD PTR ds:0x429000,0x2bcb
  4014d8:	test   eax,eax
  4014da:	jne    0x401e1f
  4014e0:	push   0xc
  4014e2:	push   0x42e729
  4014e7:	call   esi
  4014e9:	and    DWORD PTR ds:0x42b000,0x6be4
  4014f3:	test   eax,eax
  4014f5:	mov    DWORD PTR ds:0x42b00c,0x4954
  4014ff:	jne    0x401e1f
  401505:	or     DWORD PTR ds:0x429004,0x2e1b
  40150f:	push   0x7
  401511:	push   0x42e73d
  401516:	neg    DWORD PTR ds:0x429018
  40151c:	call   esi
  40151e:	or     DWORD PTR ds:0x429004,0x7cc8
  401528:	test   eax,eax
  40152a:	mov    DWORD PTR ds:0x42a000,0x4af4
  401534:	jne    0x401e1f
  40153a:	sub    DWORD PTR ds:0x429020,0x6067
  401544:	push   0x8
  401546:	push   0x42e74d
  40154b:	call   esi
  40154d:	test   eax,eax
  40154f:	jne    0x401e1f
  401555:	xor    DWORD PTR ds:0x429008,0x42a00c
  40155f:	push   0x42e75d
  401564:	push   edi
  401565:	sbb    DWORD PTR ds:0x42a004,0x429028
  40156f:	push   edi
  401570:	adc    DWORD PTR ds:0x42c000,0x42b004
  40157a:	call   DWORD PTR ds:0x42ed79
  401580:	xor    DWORD PTR ds:0x42b01c,0x42d004
  40158a:	test   eax,eax
  40158c:	mov    DWORD PTR ds:0x429004,0x6f0c
  401596:	jne    0x401e1f
  40159c:	sbb    DWORD PTR ds:0x429010,0x42b010
  4015a6:	push   0x42e76d
  4015ab:	push   edi
  4015ac:	xor    DWORD PTR ds:0x42c000,0x17e1
  4015b6:	push   edi
  4015b7:	add    DWORD PTR ds:0x429024,0x42b018
  4015c1:	call   ebx
  4015c3:	sbb    DWORD PTR ds:0x42c004,0x42b018
  4015cd:	test   eax,eax
  4015cf:	jne    0x401e1f
  4015d5:	or     DWORD PTR ds:0x42d008,0x42d000
  4015df:	push   0xc
  4015e1:	push   0x42e791
  4015e6:	adc    DWORD PTR ds:0x42d01c,0x429000
  4015f0:	call   esi
  4015f2:	test   eax,eax
  4015f4:	jne    0x401e1f
  4015fa:	sbb    DWORD PTR ds:0x42b01c,0x35f4
  401604:	push   0x7
  401606:	adc    DWORD PTR ds:0x42d00c,0x4213
  401610:	push   0x42e7a5
  401615:	xor    DWORD PTR ds:0x42b01c,0x728b
  40161f:	call   esi
  401621:	test   eax,eax
  401623:	mov    DWORD PTR ds:0x429010,0x1355
  40162d:	jne    0x401e1f
  401633:	add    DWORD PTR ds:0x42c00c,0x42d000
  40163d:	push   0x8
  40163f:	sub    DWORD PTR ds:0x42d000,0x42a014
  401649:	push   0x42e7b5
  40164e:	xor    DWORD PTR ds:0x42900c,0x42a014
  401658:	call   esi
  40165a:	add    DWORD PTR ds:0x42d018,0x7270
  401664:	test   eax,eax
  401666:	jne    0x401e1f
  40166c:	xor    DWORD PTR ds:0x429028,0x318
  401676:	push   0x42e7c5
  40167b:	not    DWORD PTR ds:0x42b00c
  401681:	push   edi
  401682:	and    DWORD PTR ds:0x429024,0x42d004
  40168c:	push   edi
  40168d:	call   DWORD PTR ds:0x42ed79
  401693:	test   eax,eax
  401695:	jne    0x401e1f
  40169b:	push   0x42e7d5
  4016a0:	push   edi
  4016a1:	push   edi
  4016a2:	xor    DWORD PTR ds:0x42d004,0x42b004
  4016ac:	call   ebx
  4016ae:	sbb    DWORD PTR ds:0x42d01c,0x42a008
  4016b8:	test   eax,eax
  4016ba:	mov    DWORD PTR ds:0x42b008,0x59c6
  4016c4:	jne    0x401e1f
  4016ca:	mov    DWORD PTR ds:0x42a008,0x78fc
  4016d4:	push   0xc
  4016d6:	add    DWORD PTR ds:0x42900c,0x42c018
  4016e0:	push   0x42e7f9
  4016e5:	call   esi
  4016e7:	test   eax,eax
  4016e9:	jne    0x401e1f
  4016ef:	and    DWORD PTR ds:0x42d010,0x3029
  4016f9:	push   0x7
  4016fb:	xor    DWORD PTR ds:0x42d008,0x429020
  401705:	push   0x42e80d
  40170a:	call   esi
  40170c:	sub    DWORD PTR ds:0x42901c,0x49cd
  401716:	test   eax,eax
  401718:	mov    DWORD PTR ds:0x42900c,0x2477
  401722:	jne    0x401e1f
  401728:	push   0x8
  40172a:	push   0x42e81d
  40172f:	call   esi
  401731:	or     DWORD PTR ds:0x42c000,0x42b014
  40173b:	test   eax,eax
  40173d:	jne    0x401e1f
  401743:	sub    DWORD PTR ds:0x429018,0x4202
  40174d:	push   0x42e82d
  401752:	adc    DWORD PTR ds:0x42a000,0x15e
  40175c:	push   edi
  40175d:	push   edi
  40175e:	and    DWORD PTR ds:0x42d008,0x1b79
  401768:	call   DWORD PTR ds:0x42ed79
  40176e:	add    DWORD PTR ds:0x42b008,0x42c000
  401778:	test   eax,eax
  40177a:	mov    DWORD PTR ds:0x429004,0x4fab
  401784:	jne    0x401e1f
  40178a:	add    DWORD PTR ds:0x42b008,0x429018
  401794:	push   0x42e83d
  401799:	push   edi
  40179a:	adc    DWORD PTR ds:0x42d018,0x42b008
  4017a4:	push   edi
  4017a5:	call   ebx
  4017a7:	adc    DWORD PTR ds:0x42b01c,0x42a014
  4017b1:	test   eax,eax
  4017b3:	mov    DWORD PTR ds:0x42b008,0x413c
  4017bd:	jne    0x401e1f
  4017c3:	sub    DWORD PTR ds:0x42a004,0x429004
  4017cd:	push   0xc
  4017cf:	push   0x42e861
  4017d4:	sub    DWORD PTR ds:0x42b014,0x419d
  4017de:	call   esi
  4017e0:	sub    DWORD PTR ds:0x429014,0x429024
  4017ea:	test   eax,eax
  4017ec:	mov    DWORD PTR ds:0x42c018,0x3584
  4017f6:	jne    0x401e1f
  4017fc:	adc    DWORD PTR ds:0x42b014,0x3845
  401806:	push   0x7
  401808:	adc    DWORD PTR ds:0x42b014,0x5918
  401812:	push   0x42e875
  401817:	call   esi
  401819:	or     DWORD PTR ds:0x42b004,0x42a000
  401823:	test   eax,eax
  401825:	jne    0x401e1f
  40182b:	sub    DWORD PTR ds:0x42c010,0x7a9b
  401835:	push   0x8
  401837:	push   0x42e885
  40183c:	call   esi
  40183e:	or     DWORD PTR ds:0x42b018,0x42a018
  401848:	test   eax,eax
  40184a:	mov    DWORD PTR ds:0x42c018,0x6db6
  401854:	jne    0x401e1f
  40185a:	push   0x42e895
  40185f:	push   edi
  401860:	push   edi
  401861:	or     DWORD PTR ds:0x429024,0x42b004
  40186b:	call   DWORD PTR ds:0x42ed79
  401871:	test   eax,eax
  401873:	jne    0x401e1f
  401879:	push   0x42e8a5
  40187e:	mov    DWORD PTR ds:0x42d010,0x708e
  401888:	push   edi
  401889:	mov    DWORD PTR ds:0x42c01c,0x7ef
  401893:	push   edi
  401894:	call   ebx
  401896:	test   eax,eax
  401898:	mov    DWORD PTR ds:0x42a00c,0x3b87
  4018a2:	jne    0x401e1f
  4018a8:	mov    DWORD PTR ds:0x429004,0x503
  4018b2:	push   0xc
  4018b4:	xor    DWORD PTR ds:0x42c00c,0x6b3b
  4018be:	push   0x42e8c9
  4018c3:	call   esi
  4018c5:	test   eax,eax
  4018c7:	mov    DWORD PTR ds:0x42a004,0x812
  4018d1:	jne    0x401e1f
  4018d7:	push   0x7
  4018d9:	sub    DWORD PTR ds:0x42b000,0x42a00c
  4018e3:	push   0x42e8dd
  4018e8:	sub    DWORD PTR ds:0x42d008,0x6a91
  4018f2:	call   esi
  4018f4:	add    DWORD PTR ds:0x429000,0x3ce6
  4018fe:	test   eax,eax
  401900:	mov    DWORD PTR ds:0x42d018,0x1a2
  40190a:	jne    0x401e1f
  401910:	sub    DWORD PTR ds:0x42a008,0x42a010
  40191a:	push   0x8
  40191c:	push   0x42e8ed
  401921:	call   esi
  401923:	sub    DWORD PTR ds:0x42d00c,0x42900c
  40192d:	test   eax,eax
  40192f:	mov    DWORD PTR ds:0x429000,0x18ec
  401939:	jne    0x401e1f
  40193f:	sbb    DWORD PTR ds:0x42a01c,0x42a004
  401949:	push   0x42e8fd
  40194e:	adc    DWORD PTR ds:0x42c010,0x1027
  401958:	push   edi
  401959:	adc    DWORD PTR ds:0x42d014,0x61c0
  401963:	push   edi
  401964:	xor    DWORD PTR ds:0x42d004,0x42b000
  40196e:	call   DWORD PTR ds:0x42ed79
  401974:	and    DWORD PTR ds:0x42b00c,0x54e0
  40197e:	test   eax,eax
  401980:	jne    0x401e1f
  401986:	mov    DWORD PTR ds:0x42b014,0x48d
  401990:	push   0x42e90d
  401995:	xor    DWORD PTR ds:0x42b00c,0x429000
  40199f:	push   edi
  4019a0:	xor    DWORD PTR ds:0x42c008,0x7d0d
  4019aa:	push   edi
  4019ab:	and    DWORD PTR ds:0x42b010,0xad4
  4019b5:	call   ebx
  4019b7:	adc    DWORD PTR ds:0x42b01c,0x42d018
  4019c1:	test   eax,eax
  4019c3:	mov    DWORD PTR ds:0x42a00c,0x2f29
  4019cd:	jne    0x401e1f
  4019d3:	sub    DWORD PTR ds:0x42a010,0x429014
  4019dd:	push   0xc
  4019df:	add    DWORD PTR ds:0x42d004,0x38f3
  4019e9:	push   0x42e931
  4019ee:	sub    DWORD PTR ds:0x42d008,0x531f
  4019f8:	call   esi
  4019fa:	xor    DWORD PTR ds:0x42a00c,0x1332
  401a04:	test   eax,eax
  401a06:	jne    0x401e1f
  401a0c:	add    DWORD PTR ds:0x42d014,0x42b000
  401a16:	push   0x7
  401a18:	push   0x42e945
  401a1d:	adc    DWORD PTR ds:0x429028,0x23cf
  401a27:	call   esi
  401a29:	test   eax,eax
  401a2b:	jne    0x401e1f
  401a31:	push   0x8
  401a33:	add    DWORD PTR ds:0x429020,0x607a
  401a3d:	push   0x42e955
  401a42:	call   esi
  401a44:	or     DWORD PTR ds:0x42c000,0x42b00c
  401a4e:	test   eax,eax
  401a50:	mov    DWORD PTR ds:0x42c00c,0x4ca0
  401a5a:	jne    0x401e1f
  401a60:	sub    DWORD PTR ds:0x429000,0x42d010
  401a6a:	push   0x42e965
  401a6f:	push   edi
  401a70:	and    DWORD PTR ds:0x42901c,0x42a004
  401a7a:	push   edi
  401a7b:	xor    DWORD PTR ds:0x42b018,0x42a008
  401a85:	call   DWORD PTR ds:0x42ed79
  401a8b:	adc    DWORD PTR ds:0x42d004,0x42901c
  401a95:	test   eax,eax
  401a97:	mov    DWORD PTR ds:0x42c010,0x64f7
  401aa1:	jne    0x401e1f
  401aa7:	push   0x42e975
  401aac:	mov    DWORD PTR ds:0x42a014,0x62f7
  401ab6:	push   edi
  401ab7:	push   edi
  401ab8:	call   ebx
  401aba:	add    DWORD PTR ds:0x42a018,0x42d01c
  401ac4:	test   eax,eax
  401ac6:	mov    DWORD PTR ds:0x42c01c,0x72ca
  401ad0:	jne    0x401e1f
  401ad6:	mov    DWORD PTR ds:0x42c01c,0x7760
  401ae0:	push   0xc
  401ae2:	sub    DWORD PTR ds:0x42b018,0x3ed8
  401aec:	push   0x42e999
  401af1:	call   esi
  401af3:	test   eax,eax
  401af5:	mov    DWORD PTR ds:0x42d018,0x4329
  401aff:	jne    0x401e1f
  401b05:	push   0x7
  401b07:	push   0x42e9ad
  401b0c:	call   esi
  401b0e:	add    DWORD PTR ds:0x42b01c,0x42d008
  401b18:	test   eax,eax
  401b1a:	jne    0x401e1f
  401b20:	add    DWORD PTR ds:0x42a008,0x5e0b
  401b2a:	push   0x8
  401b2c:	sub    DWORD PTR ds:0x429018,0x42a00c
  401b36:	push   0x42e9bd
  401b3b:	call   esi
  401b3d:	test   eax,eax
  401b3f:	mov    DWORD PTR ds:0x42d008,0x514f
  401b49:	jne    0x401e1f
  401b4f:	sbb    DWORD PTR ds:0x42b000,0x42d000
  401b59:	push   0x42e9cd
  401b5e:	xor    DWORD PTR ds:0x42c018,0x40e4
  401b68:	push   edi
  401b69:	add    DWORD PTR ds:0x42b010,0x42c000
  401b73:	push   edi
  401b74:	add    DWORD PTR ds:0x42d004,0x42c010
  401b7e:	call   DWORD PTR ds:0x42ed79
  401b84:	mov    DWORD PTR ds:0x42a000,0x51c5
  401b8e:	test   eax,eax
  401b90:	mov    DWORD PTR ds:0x42b000,0x17c8
  401b9a:	jne    0x401e1f
  401ba0:	and    DWORD PTR ds:0x42d014,0x42d010
  401baa:	push   0x42e9dd
  401baf:	push   edi
  401bb0:	push   edi
  401bb1:	call   ebx
  401bb3:	sbb    DWORD PTR ds:0x429010,0x42b014
  401bbd:	test   eax,eax
  401bbf:	mov    DWORD PTR ds:0x42c01c,0x73a3
  401bc9:	jne    0x401e1f
  401bcf:	xor    DWORD PTR ds:0x42c01c,0x6e0
  401bd9:	push   0xc
  401bdb:	adc    DWORD PTR ds:0x429008,0x42c008
  401be5:	push   0x42ea01
  401bea:	adc    DWORD PTR ds:0x42901c,0x2688
  401bf4:	call   esi
  401bf6:	add    DWORD PTR ds:0x42c008,0x63eb
  401c00:	test   eax,eax
  401c02:	mov    DWORD PTR ds:0x429004,0x7742
  401c0c:	jne    0x401e1f
  401c12:	adc    DWORD PTR ds:0x42c014,0x42b008
  401c1c:	push   0x7
  401c1e:	adc    DWORD PTR ds:0x42c008,0x42b010
  401c28:	push   0x42ea15
  401c2d:	call   esi
  401c2f:	test   eax,eax
  401c31:	mov    DWORD PTR ds:0x42900c,0x5c79
  401c3b:	jne    0x401e1f
  401c41:	adc    DWORD PTR ds:0x42d008,0x429000
  401c4b:	push   0x8
  401c4d:	xor    DWORD PTR ds:0x42c008,0x42b014
  401c57:	push   0x42ea25
  401c5c:	sub    DWORD PTR ds:0x42d000,0x42b01c
  401c66:	call   esi
  401c68:	xor    DWORD PTR ds:0x429008,0x42a00c
  401c72:	test   eax,eax
  401c74:	jne    0x401e1f
  401c7a:	push   0x42ea35
  401c7f:	adc    DWORD PTR ds:0x429020,0x1586
  401c89:	push   edi
  401c8a:	push   edi
  401c8b:	and    DWORD PTR ds:0x429008,0x42a014
  401c95:	call   DWORD PTR ds:0x42ed79
  401c9b:	and    DWORD PTR ds:0x42a01c,0x429000
  401ca5:	test   eax,eax
  401ca7:	jne    0x401e1f
  401cad:	push   0x42ea45
  401cb2:	push   edi
  401cb3:	sub    DWORD PTR ds:0x42d000,0x429000
  401cbd:	push   edi
  401cbe:	call   ebx
  401cc0:	test   eax,eax
  401cc2:	jne    0x401e1f
  401cc8:	push   0xc
  401cca:	push   0x42ea69
  401ccf:	sbb    DWORD PTR ds:0x42a004,0x42a014
  401cd9:	call   esi
  401cdb:	test   eax,eax
  401cdd:	mov    DWORD PTR ds:0x42a018,0x57a5
  401ce7:	jne    0x401e1f
  401ced:	sub    DWORD PTR ds:0x42d018,0x45f
  401cf7:	push   0x7
  401cf9:	push   0x42ea7d
  401cfe:	call   esi
  401d00:	test   eax,eax
  401d02:	mov    DWORD PTR ds:0x42a010,0x77f7
  401d0c:	jne    0x401e1f
  401d12:	adc    DWORD PTR ds:0x42a008,0x42900c
  401d1c:	push   0x8
  401d1e:	sub    DWORD PTR ds:0x429008,0x429014
  401d28:	push   0x42ea8d
  401d2d:	and    DWORD PTR ds:0x429008,0x429018
  401d37:	call   esi
  401d39:	test   eax,eax
  401d3b:	mov    DWORD PTR ds:0x429000,0x2cbb
  401d45:	jne    0x401e1f
  401d4b:	and    DWORD PTR ds:0x42d01c,0x42b000
  401d55:	push   0x42ea9d
  401d5a:	or     DWORD PTR ds:0x42b010,0x58c8
  401d64:	push   edi
  401d65:	or     DWORD PTR ds:0x42c00c,0x42a00c
  401d6f:	push   edi
  401d70:	adc    DWORD PTR ds:0x42b004,0x42a01c
  401d7a:	call   DWORD PTR ds:0x42ed79
  401d80:	and    DWORD PTR ds:0x429020,0x42b000
  401d8a:	test   eax,eax
  401d8c:	jne    0x401e1f
  401d92:	or     DWORD PTR ds:0x42c01c,0x42b01c
  401d9c:	push   0x42eaad
  401da1:	push   edi
  401da2:	push   edi
  401da3:	call   ebx
  401da5:	sbb    DWORD PTR ds:0x42901c,0x42c01c
  401daf:	test   eax,eax
  401db1:	mov    DWORD PTR ds:0x429018,0x129d
  401dbb:	jne    0x401e1f
  401dc1:	sbb    DWORD PTR ds:0x42a004,0x14a1
  401dcb:	push   0xc
  401dcd:	push   0x42ead1
  401dd2:	call   esi
  401dd4:	sbb    DWORD PTR ds:0x42c00c,0x67e3
  401dde:	test   eax,eax
  401de0:	mov    DWORD PTR ds:0x42c014,0x5d4a
  401dea:	jne    0x401e1f
  401df0:	sbb    DWORD PTR ds:0x42c00c,0x7769
  401dfa:	push   0x7
  401dfc:	or     DWORD PTR ds:0x42b00c,0x1035
  401e06:	push   0x42eae5
  401e0b:	call   esi
  401e0d:	test   eax,eax
  401e0f:	mov    DWORD PTR ds:0x42d014,0xf4
  401e19:	je     0x401e3a
  401e1f:	sub    DWORD PTR ds:0x42b01c,0x42b000
  401e29:	xor    eax,eax
  401e2b:	mov    DWORD PTR ds:0x42c018,0x7f86
  401e35:	jmp    0x4029a2
  401e3a:	or     esi,DWORD PTR ds:0x429020
  401e40:	mov    DWORD PTR [ebp-0x10],0x0
  401e47:	movzx  esi,BYTE PTR ds:0x42d010
  401e4e:	add    DWORD PTR ds:0x42c004,esi
  401e54:	mov    eax,DWORD PTR [ebp-0x24]
  401e57:	dec    esi
  401e58:	mov    DWORD PTR [ebp-0x24],eax
  401e5b:	mov    ecx,0xf89c85b5
  401e60:	mov    edi,DWORD PTR ds:0x411fc4
  401e66:	mov    esi,DWORD PTR ds:0x411f58
  401e6c:	sub    esi,edi
  401e6e:	imul   edi,DWORD PTR [edi+esi*1]
  401e72:	mov    DWORD PTR [ebp-0x8],ecx
  401e75:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  401e7c:	and    DWORD PTR ds:0x42a004,0x0
  401e86:	jmp    0x401e98
  401e8b:	mov    edi,DWORD PTR ds:0x42a004
  401e91:	inc    edi
  401e92:	mov    DWORD PTR ds:0x42a004,edi
  401e98:	cmp    DWORD PTR ds:0x42a004,0x1c
  401e9f:	jae    0x401ed2
  401ea5:	cmp    DWORD PTR ds:0x42a004,0x25
  401eac:	jne    0x401ec3
  401eb2:	push   DWORD PTR [ebp-0x14]
  401eb5:	push   0x42a004
  401eba:	push   DWORD PTR [ebp-0x1c]
  401ebd:	call   DWORD PTR ds:0x42ed39
  401ec3:	jmp    0x401e8b
  401ec8:	sbb    DWORD PTR ds:0x42d000,0x3f97
  401ed2:	lea    eax,[ebp-0x34]
  401ed5:	mov    DWORD PTR [ebp-0x28],eax
  401ed8:	mov    esi,DWORD PTR ds:0x429018
  401ede:	and    esi,DWORD PTR ds:0x42901c
  401ee4:	mov    DWORD PTR ds:0x429018,esi
  401eea:	lea    eax,[ebp-0x30]
  401eed:	mov    DWORD PTR [ebp-0x1c],eax
  401ef0:	sub    DWORD PTR ds:0x429018,0x2a07
  401efa:	mov    eax,ds:0x42e435
  401eff:	mov    eax,DWORD PTR [eax+0x1c8]
  401f05:	or     DWORD PTR ds:0x429028,0x42b010
  401f0f:	mov    eax,DWORD PTR [eax]
  401f11:	mov    edx,DWORD PTR [ebp-0x1c]
  401f14:	mov    esi,0x7510896
  401f19:	adc    DWORD PTR ds:0x429014,edi
  401f1f:	xor    eax,esi
  401f21:	mov    edi,0x3272dd
  401f26:	add    eax,edi
  401f28:	mov    DWORD PTR ds:0x42d008,0xdc
  401f32:	mov    DWORD PTR [edx],eax
  401f34:	mov    eax,ds:0x42b000
  401f39:	mov    eax,ds:0x42ebcd
  401f3e:	cmp    eax,0x312bc9f6
  401f43:	jne    0x40206d
  401f49:	xor    eax,0x6ec6
  401f4e:	mov    eax,DWORD PTR [ebp-0x8]
  401f51:	mov    edx,DWORD PTR ds:0x42e435
  401f57:	or     DWORD PTR ds:0x42901c,0x3e24
  401f61:	mov    edx,DWORD PTR [edx+0x198]
  401f67:	or     DWORD PTR ds:0x42b018,edx
  401f6d:	xor    eax,esi
  401f6f:	and    ebx,0x7b5c
  401f75:	add    eax,edi
  401f77:	and    DWORD PTR ds:0x429028,0x0
  401f81:	jmp    0x401f93
  401f86:	mov    ebx,DWORD PTR ds:0x429028
  401f8c:	inc    ebx
  401f8d:	mov    DWORD PTR ds:0x429028,ebx
  401f93:	cmp    DWORD PTR ds:0x429028,0x10
  401f9a:	jae    0x401fc8
  401fa0:	cmp    DWORD PTR ds:0x429028,0x12
  401fa7:	jne    0x401fbd
  401fad:	push   0x42e010
  401fb2:	push   0x42e0c5
  401fb7:	call   DWORD PTR ds:0x42ed3d
  401fbd:	jmp    0x401f86
  401fc2:	sub    DWORD PTR ds:0x42c014,edx
  401fc8:	mov    DWORD PTR [edx],eax
  401fca:	sbb    DWORD PTR ds:0x42c014,edi
  401fd0:	mov    eax,DWORD PTR [ebp-0x8]
  401fd3:	mov    DWORD PTR ds:0x42c018,0x1d
  401fdd:	cmp    DWORD PTR ds:0x42c018,0x0
  401fe4:	je     0x402064
  401fea:	cmp    DWORD PTR ds:0x42c018,0x26
  401ff1:	jne    0x40200a
  401ff7:	push   0x887e
  401ffc:	push   0x81aa
  402001:	push   DWORD PTR [ebp-0x1c]
  402004:	call   DWORD PTR ds:0x42ed41
  40200a:	mov    ebx,DWORD PTR ds:0x42c018
  402010:	dec    ebx
  402011:	mov    DWORD PTR ds:0x42c018,ebx
  402017:	jmp    0x401fdd
  40201c:	and    DWORD PTR ds:0x42a018,0x0
  402026:	mov    ebx,DWORD PTR ds:0x42a018
  40202c:	inc    ebx
  40202d:	mov    DWORD PTR ds:0x42a018,ebx
  402033:	cmp    DWORD PTR ds:0x42a018,0x27
  40203a:	jne    0x402051
  402040:	push   DWORD PTR [ebp-0x10]
  402043:	push   0x429008
  402048:	push   DWORD PTR [ebp-0xc]
  40204b:	call   DWORD PTR ds:0x42ed45
  402051:	cmp    DWORD PTR ds:0x42a018,0x17
  402058:	jb     0x402026
  40205e:	xor    ebx,0x6fac
  402064:	xor    eax,esi
  402066:	add    eax,edi
  402068:	mov    ds:0x42ebcd,eax
  40206d:	sub    ebx,ebx
  40206f:	mov    eax,ds:0x42e435
  402074:	mov    eax,DWORD PTR [eax+0x18c]
  40207a:	sbb    DWORD PTR ds:0x42c004,ecx
  402080:	mov    eax,DWORD PTR [eax]
  402082:	mov    DWORD PTR [ebp-0x68],eax
  402085:	or     DWORD PTR ds:0x42900c,0x1063
  40208f:	mov    ebx,0xf89c85b1
  402094:	mov    DWORD PTR [ebp-0x10],ebx
  402097:	dec    DWORD PTR ds:0x429024
  40209d:	mov    DWORD PTR [ebp-0x10],ebx
  4020a0:	sub    DWORD PTR ds:0x429028,0x6632
  4020aa:	mov    DWORD PTR [ebp-0x10],ebx
  4020ad:	and    DWORD PTR ds:0x42b018,0x42a00c
  4020b7:	mov    DWORD PTR [ebp-0x1c],ecx
  4020ba:	mov    DWORD PTR [ebp-0x10],ebx
  4020bd:	add    DWORD PTR ds:0x42a008,0x61a5
  4020c7:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4020ce:	adc    DWORD PTR ds:0x42a004,0x6791
  4020d8:	mov    eax,DWORD PTR [ebp-0x8]
  4020db:	and    DWORD PTR ds:0x42d008,0x429018
  4020e5:	xor    eax,esi
  4020e7:	add    eax,edi
  4020e9:	mov    DWORD PTR ds:0x42c00c,0x48a6
  4020f3:	jmp    0x4022be
  4020f8:	add    eax,eax
  4020fa:	mov    eax,DWORD PTR [ebp-0xc]
  4020fd:	adc    DWORD PTR ds:0x42c000,0x10b0
  402107:	mov    ecx,DWORD PTR [ebp-0x18]
  40210a:	xor    eax,esi
  40210c:	sub    DWORD PTR ds:0x42b00c,0x42a004
  402116:	lea    eax,[eax+ecx*1+0x3272dd]
  40211d:	push   eax
  40211e:	mov    DWORD PTR ds:0x42a014,0x1b
  402128:	cmp    DWORD PTR ds:0x42a014,0x0
  40212f:	je     0x40217e
  402135:	cmp    DWORD PTR ds:0x42a014,0x6
  40213c:	jne    0x402148
  402142:	call   DWORD PTR ds:0x42ed51
  402148:	cmp    DWORD PTR ds:0x42a014,0x7
  40214f:	jne    0x402160
  402155:	mov    eax,ds:0x42a014
  40215a:	dec    eax
  40215b:	mov    ds:0x42a014,eax
  402160:	mov    eax,ds:0x42a014
  402165:	dec    eax
  402166:	mov    ds:0x42a014,eax
  40216b:	jmp    0x402128
  402170:	xor    eax,eax
  402172:	add    eax,DWORD PTR ds:0x42a008
  402178:	sub    DWORD PTR ds:0x429024,eax
  40217e:	mov    eax,DWORD PTR [ebp-0x1c]
  402181:	adc    DWORD PTR ds:0x429020,0x429028
  40218b:	xor    eax,esi
  40218d:	lea    eax,[ebp+eax*1+0x3272e5]
  402194:	push   eax
  402195:	add    DWORD PTR ds:0x42900c,0x1bda
  40219f:	mov    eax,ds:0x42e435
  4021a4:	push   DWORD PTR [eax+0x1bc]
  4021aa:	xor    DWORD PTR ds:0x42c018,0x429018
  4021b4:	call   0x4029b7
  4021b9:	and    DWORD PTR ds:0x42b018,0x0
  4021c3:	jmp    0x4021d5
  4021c8:	mov    ecx,DWORD PTR ds:0x42b018
  4021ce:	inc    ecx
  4021cf:	mov    DWORD PTR ds:0x42b018,ecx
  4021d5:	cmp    DWORD PTR ds:0x42b018,0x1d
  4021dc:	jae    0x4021fa
  4021e2:	cmp    DWORD PTR ds:0x42b018,0x27
  4021e9:	jne    0x4021f5
  4021ef:	call   DWORD PTR ds:0x42ed55
  4021f5:	jmp    0x4021c8
  4021fa:	mov    eax,DWORD PTR [ebp-0xc]
  4021fd:	mov    ecx,DWORD PTR [ebp-0x18]
  402200:	and    DWORD PTR ds:0x429010,0x0
  40220a:	mov    edx,DWORD PTR ds:0x429010
  402210:	inc    edx
  402211:	mov    DWORD PTR ds:0x429010,edx
  402217:	cmp    DWORD PTR ds:0x429010,0x9
  40221e:	jne    0x402245
  402224:	push   DWORD PTR [ebp-0x20]
  402227:	push   DWORD PTR [ebp-0x14]
  40222a:	push   0x42a010
  40222f:	push   0x39f6
  402234:	push   DWORD PTR [ebp-0x10]
  402237:	push   0x1415
  40223c:	push   DWORD PTR [ebp-0x14]
  40223f:	call   DWORD PTR ds:0x42ed59
  402245:	cmp    DWORD PTR ds:0x429010,0x8
  40224c:	jne    0x40225f
  402252:	mov    edx,DWORD PTR ds:0x429010
  402258:	inc    edx
  402259:	mov    DWORD PTR ds:0x429010,edx
  40225f:	cmp    DWORD PTR ds:0x429010,0x17
  402266:	jb     0x40220a
  40226c:	and    DWORD PTR ds:0x42d01c,0x0
  402276:	jmp    0x402288
  40227b:	mov    edx,DWORD PTR ds:0x42d01c
  402281:	inc    edx
  402282:	mov    DWORD PTR ds:0x42d01c,edx
  402288:	cmp    DWORD PTR ds:0x42d01c,0x16
  40228f:	jae    0x4022b5
  402295:	cmp    DWORD PTR ds:0x42d01c,0x1f
  40229c:	jne    0x4022b0
  4022a2:	push   DWORD PTR [ebp-0xc]
  4022a5:	push   0x42e12b
  4022aa:	call   DWORD PTR ds:0x42ed5d
  4022b0:	jmp    0x40227b
  4022b5:	xor    eax,esi
  4022b7:	lea    eax,[ecx+eax*1+0x3272dd]
  4022be:	and    DWORD PTR ds:0x429000,0x0
  4022c8:	jmp    0x4022da
  4022cd:	mov    edx,DWORD PTR ds:0x429000
  4022d3:	inc    edx
  4022d4:	mov    DWORD PTR ds:0x429000,edx
  4022da:	cmp    DWORD PTR ds:0x429000,0x1a
  4022e1:	jae    0x402370
  4022e7:	cmp    DWORD PTR ds:0x429000,0x7
  4022ee:	jne    0x402308
  4022f4:	push   0x42e196
  4022f9:	push   0x1
  4022fb:	push   0x0
  4022fd:	push   0x72dd
  402302:	call   DWORD PTR ds:0x42ed61
  402308:	cmp    DWORD PTR ds:0x429000,0x6
  40230f:	jne    0x402322
  402315:	mov    edx,DWORD PTR ds:0x429000
  40231b:	inc    edx
  40231c:	mov    DWORD PTR ds:0x429000,edx
  402322:	jmp    0x4022cd
  402327:	and    DWORD PTR ds:0x42a014,0x0
  402331:	mov    edx,DWORD PTR ds:0x42a014
  402337:	inc    edx
  402338:	mov    DWORD PTR ds:0x42a014,edx
  40233e:	cmp    DWORD PTR ds:0x42a014,0x1b
  402345:	jne    0x402359
  40234b:	push   0x42d004
  402350:	push   DWORD PTR [ebp-0x18]
  402353:	call   DWORD PTR ds:0x42ed65
  402359:	cmp    DWORD PTR ds:0x42a014,0x11
  402360:	jb     0x402331
  402366:	and    DWORD PTR ds:0x42d018,0x567b
  402370:	mov    ecx,DWORD PTR [ebp-0xc]
  402373:	xor    edx,0x27b9
  402379:	mov    edx,DWORD PTR [ebp-0xc]
  40237c:	add    DWORD PTR ds:0x42a010,0x42d014
  402386:	xor    edx,esi
  402388:	xor    ecx,esi
  40238a:	and    DWORD PTR ds:0x42c00c,0x48dd
  402394:	add    ecx,edx
  402396:	mov    edx,DWORD PTR [ebp-0xc]
  402399:	neg    DWORD PTR ds:0x42c00c
  40239f:	xor    edx,esi
  4023a1:	lea    ecx,[ecx+edx*1+0x975897]
  4023a8:	mov    DWORD PTR ds:0x42b018,0x21
  4023b2:	mov    DWORD PTR [ebp-0x18],eax
  4023b5:	mov    DWORD PTR ds:0x42a010,0x55c5
  4023bf:	cmp    eax,ecx
  4023c1:	mov    DWORD PTR ds:0x42c01c,0x1ffa
  4023cb:	jbe    0x4020f8
  4023d1:	mov    eax,DWORD PTR [ebp+0xc]
  4023d4:	mov    ds:0x42e2b9,eax
  4023d9:	mov    eax,DWORD PTR [ebp+0x10]
  4023dc:	mov    ds:0x42e50d,eax
  4023e1:	mov    eax,ds:0x42e2b9
  4023e6:	mov    ecx,DWORD PTR [ebp-0x28]
  4023e9:	sub    eax,edi
  4023eb:	xor    eax,esi
  4023ed:	mov    DWORD PTR [ecx],eax
  4023ef:	mov    eax,DWORD PTR [ebp-0x24]
  4023f2:	cmp    eax,0xf89c85b5
  4023f7:	jne    0x4024d1
  4023fd:	lea    eax,[ebp-0x38]
  402400:	mov    DWORD PTR [ebp-0x70],eax
  402403:	lea    eax,[ebp+0x4]
  402406:	mov    DWORD PTR [ebp-0x38],eax
  402409:	mov    eax,DWORD PTR [ebp-0x38]
  40240c:	test   eax,eax
  40240e:	je     0x402987
  402414:	mov    eax,DWORD PTR [ebp-0x20]
  402417:	mov    eax,DWORD PTR [ebp-0xc]
  40241a:	mov    eax,DWORD PTR [ebp-0x8]
  40241d:	mov    DWORD PTR [ebp+0xc],eax
  402420:	mov    eax,eax
  402422:	mov    eax,ds:0x42e435
  402427:	mov    eax,DWORD PTR [eax+0x1c8]
  40242d:	mov    eax,DWORD PTR [eax]
  40242f:	cdq    
  402430:	mov    ebx,eax
  402432:	mov    eax,0xfabdbeed
  402437:	add    ebx,eax
  402439:	adc    edx,0xffffffff
  40243c:	and    DWORD PTR [ebp-0x10],0x0
  402440:	xor    edx,0x0
  402443:	mov    DWORD PTR [ebp-0x54],edx
  402446:	mov    edx,DWORD PTR [ebp+0xc]
  402449:	mov    DWORD PTR [ebp-0x14],edx
  40244c:	mov    ecx,0x8a29a127
  402451:	xor    ebx,ecx
  402453:	add    DWORD PTR [ebp-0x14],eax
  402456:	mov    edx,DWORD PTR [ebp-0x14]
  402459:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40245d:	xor    edx,ecx
  40245f:	mov    DWORD PTR [ebp-0x4c],edx
  402462:	mov    edx,DWORD PTR [ebp-0x10]
  402465:	xor    edx,0x0
  402468:	mov    DWORD PTR [ebp-0x48],edx
  40246b:	cmp    DWORD PTR [ebp-0x4c],ebx
  40246e:	jne    0x402480
  402474:	mov    edx,DWORD PTR [ebp-0x54]
  402477:	cmp    DWORD PTR [ebp-0x48],edx
  40247a:	je     0x4024af
  402480:	mov    edx,DWORD PTR ds:0x42e435
  402486:	mov    edx,DWORD PTR [edx+0x1c0]
  40248c:	mov    edx,DWORD PTR [edx]
  40248e:	xor    ebx,ebx
  402490:	add    edx,eax
  402492:	adc    ebx,0xffffffff
  402495:	xor    edx,ecx
  402497:	xor    ebx,0x0
  40249a:	cmp    edx,0x70941fc9
  4024a0:	jne    0x402987
  4024a6:	cmp    ebx,0xffffffff
  4024a9:	jne    0x402987
  4024af:	mov    edx,DWORD PTR ds:0x42e4b1
  4024b5:	mov    ebx,DWORD PTR ds:0x42e4b9
  4024bb:	xor    edx,ebx
  4024bd:	mov    DWORD PTR ds:0x42e4b1,edx
  4024c3:	mov    ebx,DWORD PTR ds:0x42e4b1
  4024c9:	mov    edx,DWORD PTR [ebp-0x38]
  4024cc:	jmp    0x402946
  4024d1:	mov    eax,DWORD PTR [ebp-0x34]
  4024d4:	cmp    eax,0xf89c85b2
  4024d9:	je     0x402536
  4024df:	mov    eax,DWORD PTR [ebp-0x8]
  4024e2:	mov    ecx,DWORD PTR [ebp-0x30]
  4024e5:	xor    eax,esi
  4024e7:	add    eax,edi
  4024e9:	cmp    eax,ecx
  4024eb:	je     0x402536
  4024f1:	mov    eax,ds:0x42e435
  4024f6:	mov    eax,DWORD PTR [eax+0x194]
  4024fc:	mov    ecx,DWORD PTR [eax]
  4024fe:	mov    eax,DWORD PTR [ecx+0x3c]
  402501:	push   DWORD PTR ds:0x42e50d
  402507:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40250b:	push   DWORD PTR ds:0x42e2b9
  402511:	add    eax,ecx
  402513:	mov    ecx,DWORD PTR ds:0x42e435
  402519:	mov    ecx,DWORD PTR [ecx+0x194]
  40251f:	push   DWORD PTR [ecx]
  402521:	call   eax
  402523:	mov    ecx,DWORD PTR ds:0x42e435
  402529:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40252f:	mov    DWORD PTR [ecx],eax
  402531:	jmp    0x402987
  402536:	mov    eax,DWORD PTR [ebp-0x8]
  402539:	mov    ecx,DWORD PTR [ebp-0x68]
  40253c:	xor    eax,esi
  40253e:	add    eax,edi
  402540:	cmp    eax,ecx
  402542:	jne    0x402850
  402548:	mov    eax,DWORD PTR [ebp-0x8]
  40254b:	mov    ecx,DWORD PTR ds:0x42e435
  402551:	mov    ecx,DWORD PTR [ecx+0x198]
  402557:	xor    eax,esi
  402559:	add    eax,edi
  40255b:	cmp    eax,DWORD PTR [ecx]
  40255d:	jne    0x40257c
  402563:	mov    eax,DWORD PTR [ebp-0x8]
  402566:	push   0xf89c85b5
  40256b:	xor    eax,esi
  40256d:	add    eax,edi
  40256f:	push   eax
  402570:	push   ebx
  402571:	push   DWORD PTR [ebp-0xc]
  402574:	push   DWORD PTR [ebp-0x8]
  402577:	call   0x40a327
  40257c:	mov    eax,DWORD PTR [ebp-0xc]
  40257f:	mov    DWORD PTR [ebp-0x3c],eax
  402582:	mov    eax,DWORD PTR [ebp-0x8]
  402585:	mov    DWORD PTR [ebp-0x18],eax
  402588:	mov    eax,DWORD PTR [ebp-0x18]
  40258b:	xor    eax,esi
  40258d:	add    eax,edi
  40258f:	mov    DWORD PTR [ebp+0x10],eax
  402592:	mov    eax,ds:0x42e2b5
  402597:	mov    eax,DWORD PTR [eax]
  402599:	mov    DWORD PTR [ebp+0x10],eax
  40259c:	mov    eax,ds:0x42e4bd
  4025a1:	mov    eax,DWORD PTR [eax]
  4025a3:	mov    DWORD PTR [ebp-0x1c],eax
  4025a6:	mov    DWORD PTR [ebp+0xc],0xf89c87b5
  4025ad:	mov    eax,DWORD PTR [ebp+0xc]
  4025b0:	xor    eax,esi
  4025b2:	add    eax,edi
  4025b4:	mov    DWORD PTR [ebp+0xc],eax
  4025b7:	mov    eax,ds:0x42e435
  4025bc:	mov    DWORD PTR [ebp+0xc],eax
  4025bf:	mov    eax,DWORD PTR [ebp+0x10]
  4025c2:	mov    DWORD PTR [ebp+0xc],eax
  4025c5:	mov    eax,DWORD PTR [ebp+0xc]
  4025c8:	push   0x4
  4025ca:	pop    ecx
  4025cb:	sub    ecx,eax
  4025cd:	add    ecx,DWORD PTR [ebp-0x1c]
  4025d0:	mov    DWORD PTR [ebp-0x28],0xf89c85f5
  4025d7:	mov    DWORD PTR [ebp+0x10],ecx
  4025da:	mov    DWORD PTR [ebp-0xcc],ebx
  4025e0:	mov    eax,DWORD PTR [ebp+0xc]
  4025e3:	mov    DWORD PTR [ebp-0xc8],eax
  4025e9:	mov    eax,DWORD PTR [ebp+0x10]
  4025ec:	mov    DWORD PTR [ebp-0xc4],eax
  4025f2:	mov    eax,DWORD PTR [ebp-0x28]
  4025f5:	xor    eax,esi
  4025f7:	add    eax,edi
  4025f9:	mov    DWORD PTR [ebp-0xc0],eax
  4025ff:	lea    eax,[ebp-0x78]
  402602:	mov    DWORD PTR [ebp-0xbc],eax
  402608:	mov    eax,DWORD PTR [ebp-0xcc]
  40260e:	xor    eax,esi
  402610:	add    eax,edi
  402612:	mov    DWORD PTR [ebp-0xcc],eax
  402618:	lea    eax,[ebp-0xcc]
  40261e:	push   eax
  40261f:	mov    eax,DWORD PTR [ebp-0x3c]
  402622:	xor    eax,esi
  402624:	add    eax,edi
  402626:	push   eax
  402627:	mov    eax,ds:0x42e455
  40262c:	push   0x42e3ab
  402631:	push   DWORD PTR [eax]
  402633:	call   0x40508b
  402638:	mov    eax,DWORD PTR [ebp+0xc]
  40263b:	mov    ecx,DWORD PTR [ebp+0x10]
  40263e:	mov    DWORD PTR [ebp-0x6c],ecx
  402641:	mov    ecx,DWORD PTR [ebp-0x18]
  402644:	xor    ecx,esi
  402646:	mov    DWORD PTR [ebp-0x1c],eax
  402649:	add    ecx,edi
  40264b:	jmp    0x4027f1
  402650:	lea    edx,[ecx+eax*1]
  402653:	mov    DWORD PTR [ebp+0x10],edx
  402656:	mov    edx,DWORD PTR [ebp-0x6c]
  402659:	sub    edx,ecx
  40265b:	mov    DWORD PTR [ebp+0xc],edx
  40265e:	mov    edx,DWORD PTR [ebp+0xc]
  402661:	mov    DWORD PTR [ebp-0x40],edx
  402664:	mov    edx,DWORD PTR [ebp+0x10]
  402667:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  40266e:	mov    DWORD PTR [ebp-0x64],edx
  402671:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  402678:	mov    edx,DWORD PTR [ebp-0x44]
  40267b:	xor    edx,esi
  40267d:	add    edx,edi
  40267f:	mov    DWORD PTR [ebp+0xc],edx
  402682:	mov    edx,DWORD PTR [ebp-0x44]
  402685:	xor    edx,esi
  402687:	add    edx,edi
  402689:	mov    DWORD PTR [ebp-0x4],edx
  40268c:	mov    DWORD PTR [ebp-0x60],0xf89c85d5
  402693:	mov    DWORD PTR [ebp-0x5c],0xf89c85bc
  40269a:	mov    edx,DWORD PTR [ebp-0x44]
  40269d:	mov    ebx,DWORD PTR [ebp-0x40]
  4026a0:	xor    edx,esi
  4026a2:	add    edx,edi
  4026a4:	cmp    ebx,edx
  4026a6:	je     0x4027e5
  4026ac:	mov    eax,DWORD PTR [ebp+0x10]
  4026af:	xor    eax,esi
  4026b1:	mov    edx,0xffcd8d23
  4026b6:	sub    edx,eax
  4026b8:	add    edx,DWORD PTR [ebp-0x40]
  4026bb:	mov    eax,DWORD PTR [ebp+0x10]
  4026be:	mov    ebx,DWORD PTR [ebp+0xc]
  4026c1:	xor    eax,esi
  4026c3:	add    eax,edi
  4026c5:	imul   eax,ebx
  4026c8:	cmp    eax,edx
  4026ca:	ja     0x4027e2
  4026d0:	mov    edx,DWORD PTR [ebp+0xc]
  4026d3:	mov    eax,DWORD PTR [ebp-0x40]
  4026d6:	mov    ebx,DWORD PTR [ebp-0x60]
  4026d9:	sub    eax,edx
  4026db:	xor    ebx,esi
  4026dd:	xor    edx,edx
  4026df:	add    ebx,edi
  4026e1:	div    ebx
  4026e3:	mov    DWORD PTR [ebp-0x4],eax
  4026e6:	mov    eax,DWORD PTR [ebp-0x5c]
  4026e9:	mov    edx,DWORD PTR [ebp-0x4]
  4026ec:	xor    eax,esi
  4026ee:	add    eax,edi
  4026f0:	cmp    edx,eax
  4026f2:	jbe    0x402702
  4026f8:	mov    eax,DWORD PTR [ebp-0x5c]
  4026fb:	xor    eax,esi
  4026fd:	add    eax,edi
  4026ff:	mov    DWORD PTR [ebp-0x4],eax
  402702:	mov    eax,DWORD PTR [ebp-0x60]
  402705:	mov    edx,DWORD PTR [ebp-0x4]
  402708:	xor    eax,esi
  40270a:	add    eax,edi
  40270c:	imul   eax,edx
  40270f:	mov    DWORD PTR [ebp-0x4],eax
  402712:	mov    eax,DWORD PTR [ebp-0x44]
  402715:	mov    edx,DWORD PTR [ebp-0x4]
  402718:	xor    eax,esi
  40271a:	add    eax,edi
  40271c:	cmp    edx,eax
  40271e:	je     0x4027cb
  402724:	mov    eax,DWORD PTR [ebp-0x4]
  402727:	mov    DWORD PTR [ebp-0x24],eax
  40272a:	mov    eax,DWORD PTR [ebp+0xc]
  40272d:	add    eax,DWORD PTR [ebp-0x64]
  402730:	mov    DWORD PTR [ebp-0x28],0xf89c85b5
  402737:	mov    DWORD PTR [ebp-0x48],eax
  40273a:	mov    eax,0xf89c85b2
  40273f:	mov    DWORD PTR [ebp-0x50],eax
  402742:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402749:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  402750:	mov    DWORD PTR [ebp-0x54],eax
  402753:	mov    eax,DWORD PTR [ebp-0x28]
  402756:	xor    eax,esi
  402758:	add    eax,edi
  40275a:	jmp    0x402787
  40275f:	mov    eax,DWORD PTR [ebp-0x54]
  402762:	mov    edx,DWORD PTR [ebp-0x4]
  402765:	xor    eax,esi
  402767:	add    eax,edi
  402769:	imul   eax,edx
  40276c:	mov    edx,DWORD PTR [ebp-0x48]
  40276f:	mov    BYTE PTR [eax+edx*1],0x0
  402773:	mov    eax,DWORD PTR [ebp-0x10]
  402776:	mov    edx,DWORD PTR [ebp-0x50]
  402779:	xor    eax,esi
  40277b:	xor    edx,esi
  40277d:	add    eax,edi
  40277f:	add    edx,edi
  402781:	imul   eax,edx
  402784:	add    eax,DWORD PTR [ebp-0x4]
  402787:	mov    DWORD PTR [ebp-0x4],eax
  40278a:	mov    eax,DWORD PTR [ebp-0x4]
  40278d:	mov    edx,DWORD PTR [ebp-0x24]
  402790:	cmp    edx,eax
  402792:	jb     0x40275f
  402798:	mov    eax,DWORD PTR [ebp-0x50]
  40279b:	mov    edx,DWORD PTR [ebp-0x24]
  40279e:	xor    eax,esi
  4027a0:	add    eax,edi
  4027a2:	imul   eax,edx
  4027a5:	mov    edx,DWORD PTR [ebp-0x28]
  4027a8:	xor    edx,esi
  4027aa:	add    edx,edi
  4027ac:	or     eax,edx
  4027ae:	mov    edx,DWORD PTR [ebp+0x10]
  4027b1:	xor    edx,esi
  4027b3:	add    eax,edx
  4027b5:	mov    edx,DWORD PTR [ebp+0x10]
  4027b8:	xor    edx,esi
  4027ba:	add    eax,edx
  4027bc:	mov    edx,DWORD PTR [ebp+0xc]
  4027bf:	lea    eax,[eax+edx*1+0x64e5ba]
  4027c6:	jmp    0x4027da
  4027cb:	mov    eax,DWORD PTR [ebp+0x10]
  4027ce:	mov    edx,DWORD PTR [ebp+0xc]
  4027d1:	xor    eax,esi
  4027d3:	lea    eax,[eax+edx*1+0x3272dd]
  4027da:	mov    DWORD PTR [ebp+0xc],eax
  4027dd:	jmp    0x4026ac
  4027e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4027e5:	mov    edx,DWORD PTR [ebp-0x3c]
  4027e8:	xor    edx,esi
  4027ea:	lea    ecx,[ecx+edx*1+0x3272dd]
  4027f1:	lea    edx,[ecx-0x3272dd]
  4027f7:	xor    edx,esi
  4027f9:	cmp    edx,0xf89c95b5
  4027ff:	jne    0x402650
  402805:	mov    ecx,DWORD PTR [ebp-0x18]
  402808:	mov    edx,DWORD PTR [ebp-0x3c]
  40280b:	mov    ebx,DWORD PTR [ebp-0x18]
  40280e:	xor    edx,esi
  402810:	mov    dl,BYTE PTR [edx+eax*1+0x3272dd]
  402817:	xor    ecx,esi
  402819:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  402820:	xor    ebx,esi
  402822:	mov    BYTE PTR [ebx+eax*1+0x3272dd],dl
  402829:	mov    edx,DWORD PTR [ebp-0x3c]
  40282c:	xor    edx,esi
  40282e:	mov    BYTE PTR [edx+eax*1+0x3272dd],cl
  402835:	mov    eax,DWORD PTR [ebp-0x3c]
  402838:	mov    eax,DWORD PTR [ebp-0x8]
  40283b:	xor    eax,esi
  40283d:	add    eax,edi
  40283f:	mov    ds:0x42e4b9,eax
  402844:	mov    eax,DWORD PTR [ebp-0x8]
  402847:	xor    eax,esi
  402849:	add    eax,edi
  40284b:	mov    ds:0x42e4b1,eax
  402850:	lea    eax,[ebp-0x2c]
  402853:	mov    DWORD PTR [ebp-0x88],eax
  402859:	lea    eax,[ebp+0x4]
  40285c:	mov    DWORD PTR [ebp-0x2c],eax
  40285f:	mov    eax,DWORD PTR [ebp-0x2c]
  402862:	test   eax,eax
  402864:	je     0x402987
  40286a:	mov    DWORD PTR [ebp-0x80],0xf152c3a
  402871:	mov    DWORD PTR [ebp-0x74],0x712ed0f
  402878:	mov    DWORD PTR [ebp-0x7c],0x373fc2d
  40287f:	mov    DWORD PTR [ebp-0x84],0x72670a1d
  402889:	call   0x409f81
  40288e:	mov    eax,DWORD PTR [ebp-0x20]
  402891:	mov    eax,DWORD PTR [ebp-0xc]
  402894:	mov    eax,DWORD PTR [ebp-0x8]
  402897:	mov    DWORD PTR [ebp+0xc],eax
  40289a:	mov    eax,eax
  40289c:	mov    eax,ds:0x42e435
  4028a1:	mov    eax,DWORD PTR [eax+0x1c8]
  4028a7:	mov    eax,DWORD PTR [eax]
  4028a9:	cdq    
  4028aa:	mov    ebx,eax
  4028ac:	mov    eax,0xfabdbeed
  4028b1:	add    ebx,eax
  4028b3:	adc    edx,0xffffffff
  4028b6:	and    DWORD PTR [ebp-0x10],0x0
  4028ba:	xor    edx,0x0
  4028bd:	mov    DWORD PTR [ebp-0x54],edx
  4028c0:	mov    edx,DWORD PTR [ebp+0xc]
  4028c3:	mov    DWORD PTR [ebp-0x14],edx
  4028c6:	mov    ecx,0x8a29a127
  4028cb:	xor    ebx,ecx
  4028cd:	add    DWORD PTR [ebp-0x14],eax
  4028d0:	mov    edx,DWORD PTR [ebp-0x14]
  4028d3:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4028d7:	xor    edx,ecx
  4028d9:	mov    DWORD PTR [ebp-0x4c],edx
  4028dc:	mov    edx,DWORD PTR [ebp-0x10]
  4028df:	xor    edx,0x0
  4028e2:	mov    DWORD PTR [ebp-0x48],edx
  4028e5:	cmp    DWORD PTR [ebp-0x4c],ebx
  4028e8:	jne    0x4028fa
  4028ee:	mov    edx,DWORD PTR [ebp-0x54]
  4028f1:	cmp    DWORD PTR [ebp-0x48],edx
  4028f4:	je     0x402929
  4028fa:	mov    edx,DWORD PTR ds:0x42e435
  402900:	mov    edx,DWORD PTR [edx+0x1c0]
  402906:	mov    edx,DWORD PTR [edx]
  402908:	xor    ebx,ebx
  40290a:	add    edx,eax
  40290c:	adc    ebx,0xffffffff
  40290f:	xor    edx,ecx
  402911:	xor    ebx,0x0
  402914:	cmp    edx,0x70941fc9
  40291a:	jne    0x402987
  402920:	cmp    ebx,0xffffffff
  402923:	jne    0x402987
  402929:	mov    edx,DWORD PTR ds:0x42e4b1
  40292f:	mov    ebx,DWORD PTR ds:0x42e4b9
  402935:	xor    edx,ebx
  402937:	mov    DWORD PTR ds:0x42e4b1,edx
  40293d:	mov    ebx,DWORD PTR ds:0x42e4b1
  402943:	mov    edx,DWORD PTR [ebp-0x2c]
  402946:	add    DWORD PTR [edx],ebx
  402948:	mov    edx,DWORD PTR [ebp+0xc]
  40294b:	xor    esi,edx
  40294d:	mov    edx,DWORD PTR ds:0x42e4b1
  402953:	add    esi,edi
  402955:	xor    ebx,ebx
  402957:	add    esi,eax
  402959:	adc    ebx,0xffffffff
  40295c:	xor    edi,edi
  40295e:	xor    esi,ecx
  402960:	xor    ebx,0x0
  402963:	add    edx,eax
  402965:	adc    edi,0xffffffff
  402968:	xor    edx,ecx
  40296a:	xor    edi,0x0
  40296d:	cmp    edx,esi
  40296f:	jne    0x402987
  402975:	cmp    edi,ebx
  402977:	jne    0x402987
  40297d:	mov    eax,ds:0x42e4b1
  402982:	mov    ds:0x42e4b9,eax
  402987:	mov    eax,ds:0x42e435
  40298c:	push   0x4
  40298e:	add    eax,0x1cc
  402993:	push   eax
  402994:	lea    eax,[ebp-0x20]
  402997:	push   eax
  402998:	call   0x4029b7
  40299d:	mov    eax,DWORD PTR [ebp-0x20]
  4029a0:	mov    eax,DWORD PTR [eax]
  4029a2:	pop    ebx
  4029a3:	pop    edi
  4029a4:	pop    esi
  4029a5:	leave  
  4029a6:	ret    0xc
  4029a9:	xor    eax,eax
  4029ab:	adc    DWORD PTR ds:0x429018,0x42b01c
  4029b5:	inc    eax
  4029b6:	ret    
  4029b7:	push   ebp
  4029b8:	mov    ebp,esp
  4029ba:	sub    esp,0x10
  4029bd:	mov    eax,0xf89c85b5
  4029c2:	and    DWORD PTR ds:0x42a004,0x0
  4029cc:	jmp    0x4029de
  4029d1:	mov    ecx,DWORD PTR ds:0x42a004
  4029d7:	inc    ecx
  4029d8:	mov    DWORD PTR ds:0x42a004,ecx
  4029de:	cmp    DWORD PTR ds:0x42a004,0x19
  4029e5:	jae    0x402a37
  4029eb:	cmp    DWORD PTR ds:0x42a004,0x8
  4029f2:	jne    0x402a18
  4029f8:	push   0x58e0
  4029fd:	push   0x42d014
  402a02:	push   DWORD PTR [ebp-0x28]
  402a05:	push   0x42e0f3
  402a0a:	push   0x48f7
  402a0f:	push   DWORD PTR [ebp-0x28]
  402a12:	call   DWORD PTR ds:0x42ed6d
  402a18:	cmp    DWORD PTR ds:0x42a004,0x7
  402a1f:	jne    0x402a32
  402a25:	mov    ecx,DWORD PTR ds:0x42a004
  402a2b:	inc    ecx
  402a2c:	mov    DWORD PTR ds:0x42a004,ecx
  402a32:	jmp    0x4029d1
  402a37:	mov    DWORD PTR [ebp-0x4],eax
  402a3a:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  402a41:	movzx  edx,WORD PTR ds:0x42901c
  402a48:	xor    edx,DWORD PTR ds:0x429024
  402a4e:	mov    DWORD PTR ds:0x42901c,edx
  402a54:	mov    ecx,DWORD PTR [ebp-0x4]
  402a57:	sbb    edx,0x1c35
  402a5d:	push   esi
  402a5e:	mov    esi,DWORD PTR ds:0x42c01c
  402a64:	sbb    esi,DWORD PTR ds:0x42d018
  402a6a:	mov    DWORD PTR ds:0x42c01c,esi
  402a70:	mov    edx,0x7510896
  402a75:	mov    esi,DWORD PTR ds:0x42a00c
  402a7b:	add    DWORD PTR ds:0x42d008,esi
  402a81:	xor    ecx,edx
  402a83:	add    esi,DWORD PTR ds:0x429018
  402a89:	mov    esi,0x3272dd
  402a8e:	sub    DWORD PTR ds:0x42d004,0x41ed
  402a98:	push   edi
  402a99:	mov    edi,DWORD PTR [ebp+0x10]
  402a9c:	add    ecx,esi
  402a9e:	mov    DWORD PTR ds:0x42c014,0x852
  402aa8:	cmp    ecx,edi
  402aaa:	mov    DWORD PTR ds:0x42b014,0x2a3e
  402ab4:	je     0x404f9d
  402aba:	inc    ecx
  402abb:	mov    ecx,DWORD PTR [ebp-0x4]
  402abe:	and    DWORD PTR ds:0x42a010,0x0
  402ac8:	mov    edi,DWORD PTR ds:0x42a010
  402ace:	inc    edi
  402acf:	mov    DWORD PTR ds:0x42a010,edi
  402ad5:	cmp    DWORD PTR ds:0x42a010,0x2a
  402adc:	jne    0x402ae8
  402ae2:	call   DWORD PTR ds:0x42ed71
  402ae8:	cmp    DWORD PTR ds:0x42a010,0x1b
  402aef:	jb     0x402ac8
  402af5:	mov    edi,DWORD PTR ds:0x42c00c
  402afb:	sbb    DWORD PTR ds:0x42a01c,edi
  402b01:	mov    edi,DWORD PTR [ebp+0x10]
  402b04:	xor    DWORD PTR ds:0x429010,0x457d
  402b0e:	xor    eax,eax
  402b10:	xor    DWORD PTR ds:0x42c010,0x42b010
  402b1a:	xor    ecx,edx
  402b1c:	add    DWORD PTR ds:0x429028,0x1d9a
  402b26:	add    ecx,esi
  402b28:	add    edi,0xfabdbeed
  402b2e:	mov    DWORD PTR ds:0x42d014,0x7361
  402b38:	adc    eax,0xffffffff
  402b3b:	xor    eax,0x0
  402b3e:	mov    DWORD PTR [ebp-0xc],eax
  402b41:	push   ebx
  402b42:	xor    ebx,ebx
  402b44:	xor    edi,0x8a29a127
  402b4a:	mov    eax,ecx
  402b4c:	add    eax,0xfabdbeed
  402b51:	adc    ebx,0xffffffff
  402b54:	xor    eax,0x8a29a127
  402b59:	xor    ebx,0x0
  402b5c:	cmp    eax,edi
  402b5e:	jne    0x404f2f
  402b64:	cmp    ebx,DWORD PTR [ebp-0xc]
  402b67:	je     0x404f97
  402b6d:	jmp    0x404f2f
  402b72:	mov    esi,0x3272dd
  402b77:	jmp    0x404f2f
  402b7c:	jmp    0x402b15
  402b7e:	iret   
  402b7f:	push   esi
  402b80:	jae    0x402b78
  402b82:	retf   
  402b83:	xchg   edi,eax
  402b84:	mov    al,ds:0x7e55e01a
  402b89:	dec    esp
  402b8a:	daa    
  402b8b:	outs   dx,DWORD PTR ds:[esi]
  402b8c:	jp     0x402c08
  402b8e:	jp     0x402c0a
  402b90:	xlat   BYTE PTR ds:[ebx]
  402b91:	pop    edi
  402b92:	jp     0x402c0e
  402b94:	adc    eax,0x1921172c
  402b99:	and    eax,0x3c652f1b
  402b9e:	imul   esp,DWORD PTR [esi-0xd],0x6d6a6a67
  402ba5:	xor    al,ch
  402ba7:	fsubr  st(1),st
  402ba9:	push   eax
  402baa:	dec    eax
  402bab:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff90
  402baf:	pusha  
  402bb0:	ins    DWORD PTR es:[edi],dx
  402bb1:	pop    ecx
  402bb2:	iret   
  402bb3:	pop    ebp
  402bb4:	dec    edx
  402bb5:	and    BYTE PTR [edx+edi*8+0x4d577687],cl
  402bbc:	jg     0x402bf5
  402bbe:	jo     0x402b66
  402bc0:	jg     0x402b62
  402bc2:	mov    ds:0x66ff2c3b,al
  402bc7:	fdiv   st(2),st
  402bc9:	push   ebx
  402bca:	jg     0x402bea
  402bcc:	in     eax,dx
  402bcd:	cmp    ebp,ecx
  402bcf:	mov    edx,0xde1387ed
  402bd4:	mov    ebp,DWORD PTR [ecx]
  402bd6:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c48a]
  402bdd:	fld    QWORD PTR [esp+edx*8]
  402be0:	push   cs
  402be1:	cli    
  402be2:	sbb    BYTE PTR es:[eax+0xc],cl
  402be6:	imul   ebp,DWORD PTR es:[eax-0x47],0xffffffaf
  402beb:	adc    eax,DWORD PTR [ecx+0x5]
  402bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bef:	(bad)  
  402bf0:	jmp    0x32b4573e
  402bf5:	enter  0xf95b,0x1a
  402bf9:	cli    
  402bfa:	js     0x402b9d
  402bfc:	arpl   bp,bx
  402bfe:	cwde   
  402bff:	pop    edi
  402c00:	mov    esp,DWORD PTR [ecx+0x31821407]
  402c06:	repz sahf 
  402c08:	cmp    al,0x72
  402c0a:	jae    0x402c17
  402c0c:	fisubr DWORD PTR ds:0x33348d52
  402c12:	push   esp
  402c13:	jecxz  0x402be4
  402c15:	mov    ch,BYTE PTR [ecx]
  402c17:	mov    DWORD PTR [eax+0x5188ccb7],esi
  402c1d:	in     al,0x45
  402c1f:	push   edx
  402c20:	dec    esp
  402c21:	or     al,0x3e
  402c23:	repz add ebp,DWORD PTR ss:[ebp+0x30a7ca4b]
  402c2b:	rol    BYTE PTR [esi+edx*2],0xfd
  402c2f:	push   edx
  402c30:	push   esi
  402c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c32:	stc    
  402c33:	push   0x42f8bf
  402c38:	pusha  
  402c39:	data16 ss out dx,al
  402c3c:	jge    0x402c46
  402c3e:	sbb    eax,0x263fa0b1
  402c43:	jle    0x402c8d
  402c45:	xchg   edx,eax
  402c46:	jl     0x402c0f
  402c48:	mov    ebx,0x34b7e6db
  402c4d:	loop   0x402c78
  402c4f:	fxch   st(5)
  402c51:	xor    esp,DWORD PTR [eax+0x71]
  402c54:	jmp    DWORD PTR [ecx+ebp*8-0x11d87fd6]
  402c5b:	icebp  
  402c5c:	pop    eax
  402c5d:	mov    dh,0x8c
  402c5f:	xor    BYTE PTR [eax],bl
  402c61:	aas    
  402c62:	lock stos DWORD PTR es:[edi],eax
  402c64:	ins    BYTE PTR es:[edi],dx
  402c65:	mov    ds:0x3592ce90,al
  402c6a:	pop    eax
  402c6b:	mov    ecx,0x3c9c1c64
  402c70:	stos   BYTE PTR es:[edi],al
  402c71:	outs   dx,BYTE PTR ds:[esi]
  402c72:	or     BYTE PTR [eax-0x689740e7],bh
  402c78:	cmp    DWORD PTR [esi+0x205c4b2c],ecx
  402c7e:	ds (bad) 
  402c80:	loop   0x402c65
  402c82:	pop    DWORD PTR [ebx-0x28]
  402c85:	pop    es
  402c86:	jo     0x402c4f
  402c88:	daa    
  402c89:	mov    al,0x10
  402c8b:	or     DWORD PTR [ebp-0x65],ebp
  402c8e:	fwait
  402c8f:	addr16 push ds
  402c91:	xchg   ebp,eax
  402c92:	xor    eax,0x2a4a22c0
  402c97:	leave  
  402c98:	loope  0x402c5a
  402c9a:	rcl    DWORD PTR [ebp+ecx*4-0x68],1
  402c9e:	push   esi
  402c9f:	dec    esi
  402ca0:	sbb    bh,BYTE PTR [ecx+0x2b8baff5]
  402ca6:	and    BYTE PTR ds:0x62cdbe6b,dh
  402cac:	daa    
  402cad:	ins    BYTE PTR es:[edi],dx
  402cae:	jnp    0x402c9f
  402cb0:	xchg   DWORD PTR [eax],esp
  402cb2:	push   0x13
  402cb4:	lea    esi,[ecx+ebx*8+0x2c]
  402cb8:	inc    esp
  402cb9:	xor    al,0x4a
  402cbb:	lea    ebx,[ebx]
  402cbd:	xchg   DWORD PTR [ecx],ebp
  402cbf:	ja     0x402c9b
  402cc1:	in     al,dx
  402cc2:	fld    st(6)
  402cc4:	stos   BYTE PTR es:[edi],al
  402cc5:	data16 scas al,BYTE PTR es:[edi]
  402cc7:	push   ebp
  402cc8:	pop    ebp
  402cc9:	dec    edx
  402cca:	push   cs
  402ccb:	jecxz  0x402d09
  402ccd:	arpl   WORD PTR [edx+0x697393cc],si
  402cd3:	dec    esp
  402cd4:	add    esi,DWORD PTR [edx+0x1a2bf0cb]
  402cda:	mov    ch,0x13
  402cdc:	fbstp  TBYTE PTR [edi]
  402cde:	sbb    eax,0x3777f53f
  402ce3:	fidivr DWORD PTR [ecx+edx*2]
  402ce6:	sti    
  402ce7:	fs inc edi
  402ce9:	xchg   esi,eax
  402cea:	push   ebx
  402ceb:	push   eax
  402cec:	call   0xece559fb
  402cf1:	stos   BYTE PTR es:[edi],al
  402cf2:	push   ss
  402cf3:	and    BYTE PTR [esi-0x7c],bl
  402cf6:	aas    
  402cf7:	cwde   
  402cf8:	lods   eax,DWORD PTR ds:[esi]
  402cf9:	jmp    0xa0fb66e1
  402cfe:	sahf   
  402cff:	les    edx,FWORD PTR [ecx+0x7f70d74b]
  402d05:	ins    BYTE PTR es:[edi],dx
  402d06:	sahf   
  402d07:	outs   dx,DWORD PTR ds:[esi]
  402d08:	xor    eax,0x13602b2d
  402d0d:	jg     0x402d0a
  402d0f:	cmc    
  402d10:	xor    al,0x31
  402d12:	icebp  
  402d13:	lods   eax,DWORD PTR ds:[esi]
  402d14:	add    ebx,edx
  402d16:	ins    DWORD PTR es:[edi],dx
  402d17:	sahf   
  402d18:	int    0x59
  402d1a:	pusha  
  402d1b:	into   
  402d1c:	pop    ecx
  402d1d:	sbb    al,0x9d
  402d1f:	cld    
  402d20:	mov    WORD PTR [esi-0x2136e268],ds
  402d26:	jno    0x402d04
  402d28:	call   0x56d94f17
  402d2d:	inc    eax
  402d2e:	xchg   DWORD PTR [ecx-0x2a],ebx
  402d31:	xchg   DWORD PTR [ebp-0x4d11b877],edi
  402d37:	nop
  402d38:	std    
  402d39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d3a:	mov    esp,esi
  402d3c:	fild   DWORD PTR [ebx+esi*1]
  402d3f:	sbb    edx,DWORD PTR [ebx+0x25b56557]
  402d45:	cmp    DWORD PTR [eax],eax
  402d47:	out    dx,eax
  402d48:	adc    DWORD PTR [edi+0x13390157],ebx
  402d4e:	ja     0x402d40
  402d50:	pop    esi
  402d51:	xor    al,0x80
  402d53:	sbb    al,0x45
  402d55:	fst    QWORD PTR [edx]
  402d57:	ret    0x14b9
  402d5a:	mov    bh,0xbd
  402d5c:	cmp    dl,BYTE PTR [edx-0x6e]
  402d5f:	(bad)  
  402d60:	xlat   BYTE PTR ds:[ebx]
  402d61:	xor    ebx,ecx
  402d63:	jbe    0x402d2c
  402d65:	add    BYTE PTR [ebx+edi*4+0x62997a11],dh
  402d6c:	dec    esp
  402d6d:	cmc    
  402d6e:	inc    edx
  402d6f:	inc    edi
  402d70:	sar    BYTE PTR [edx-0x5ce1294f],1
  402d76:	dec    esp
  402d77:	aam    0xe2
  402d79:	mov    BYTE PTR ds:0x3e10b636,ah
  402d7f:	mov    gs,edx
  402d81:	std    
  402d82:	lods   al,BYTE PTR ds:[esi]
  402d83:	mov    eax,ds:0xd0870ef7
  402d88:	mov    eax,0x7cc68b34
  402d8d:	cmp    cl,dl
  402d8f:	(bad)  
  402d90:	fwait
  402d91:	mov    cl,0x29
  402d93:	xchg   esi,eax
  402d94:	mov    bl,0xbd
  402d96:	cmp    eax,DWORD PTR [ebx]
  402d98:	jg     0x402df8
  402d9a:	sbb    al,0xc
  402d9c:	xchg   ebx,eax
  402d9d:	xchg   ecx,eax
  402d9e:	jo     0x402d99
  402da0:	test   BYTE PTR [esi-0x393b56ca],dh
  402da6:	div    DWORD PTR [ebp-0x2f]
  402da9:	cdq    
  402daa:	out    dx,eax
  402dab:	inc    esi
  402dac:	xlat   BYTE PTR ds:[ebx]
  402dad:	pop    esi
  402dae:	cmp    DWORD PTR [ebx+0x61d0dfd9],eax
  402db4:	daa    
  402db5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402db6:	jne    0x402d4b
  402db8:	mov    al,0xf6
  402dba:	sub    al,0x4
  402dbc:	mov    ?,WORD PTR [eax+eax*1]
  402dbf:	ss lahf 
  402dc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402dc2:	test   DWORD PTR [ebx*8-0x1f43c381],0x71b27f0a
  402dcd:	mov    eax,0xeb5d4e74
  402dd2:	lods   eax,DWORD PTR ds:[esi]
  402dd3:	popf   
  402dd4:	adc    BYTE PTR [eax],bl
  402dd6:	sbb    ch,ah
  402dd8:	mov    ebp,0x4e938aa4
  402ddd:	push   DWORD PTR [ebx-0x35]
  402de0:	mov    ecx,0xac2eba9d
  402de5:	ja     0x402dce
  402de7:	pop    ecx
  402de8:	or     al,0x7d
  402dea:	push   edi
  402deb:	xor    eax,0xf8507ad8
  402df0:	bound  ebp,QWORD PTR [eax+edi*8]
  402df3:	jmp    0x402dfa
  402df5:	aaa    
  402df6:	aaa    
  402df7:	or     DWORD PTR [eax+eiz*2],ebx
  402dfa:	adc    DWORD PTR [eax+esi*2],esi
  402dfd:	jmp    0x7eb55762
  402e02:	cmp    eax,0xa090eb30
  402e07:	stos   BYTE PTR es:[edi],al
  402e08:	sub    al,0xde
  402e0a:	xor    ch,BYTE PTR [ebp-0x41e66eff]
  402e10:	sar    ecx,0x38
  402e13:	jo     0x402dde
  402e15:	dec    ebp
  402e16:	mov    al,ss:0x22c86cf3
  402e1c:	mov    ch,dl
  402e1e:	sbb    BYTE PTR [eax+eiz*8],dh
  402e21:	push   0xf
  402e23:	dec    ecx
  402e24:	jle    0x402dae
  402e26:	jae    0x402e2a
  402e28:	(bad)  
  402e29:	sbb    eax,0xfd8e2483
  402e2e:	cmc    
  402e2f:	aam    0xce
  402e31:	data16 scas al,BYTE PTR es:[edi]
  402e33:	push   edx
  402e34:	mov    ds:0x8e77c530,eax
  402e39:	inc    ecx
  402e3a:	ja     0x402e40
  402e3c:	xchg   ebx,eax
  402e3d:	xor    cl,BYTE PTR [esi+0x74691f1f]
  402e43:	lods   eax,DWORD PTR ds:[esi]
  402e44:	dec    esi
  402e45:	ror    BYTE PTR [edx+0x5db732e5],0x85
  402e4c:	adc    DWORD PTR [esi+0x5d465c88],ecx
  402e52:	mov    dl,0x14
  402e54:	xor    DWORD PTR [esi+eiz*4+0x6f1d8b16],ecx
  402e5b:	stc    
  402e5c:	cmp    eax,0x67d6aca7
  402e61:	ret    
  402e62:	adc    dl,dh
  402e64:	imul   ebp,DWORD PTR [esi],0x16d6a5f1
  402e6a:	popa   
  402e6b:	adc    ecx,ecx
  402e6d:	imul   edx,DWORD PTR [ebx-0x22],0x80e10a25
  402e74:	outs   dx,DWORD PTR ds:[esi]
  402e75:	fwait
  402e76:	add    esi,DWORD PTR [ecx+ebx*8-0x7]
  402e7a:	jp     0x402ee6
  402e7c:	stos   DWORD PTR es:[edi],eax
  402e7d:	int    0xbd
  402e7f:	jmp    0x505c:0xdde87233
  402e86:	push   esi
  402e87:	xor    esi,edi
  402e89:	nop
  402e8a:	call   0x51bf:0x4fd8c192
  402e91:	and    eax,0xc77a99
  402e96:	jmp    0x4570:0x5333f2e
  402e9d:	push   ds
  402e9e:	sbb    BYTE PTR [ecx+0x4b],0xa2
  402ea2:	jae    0x402e69
  402ea4:	aad    0x3c
  402ea6:	test   DWORD PTR [ecx],edx
  402ea8:	js     0x402ea8
  402eaa:	xlat   BYTE PTR ds:[ebx]
  402eab:	pop    es
  402eac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ead:	iret   
  402eae:	shl    DWORD PTR [edi-0x75658a36],0x61
  402eb5:	push   es
  402eb6:	mov    dl,0xba
  402eb8:	ds aaa 
  402eba:	cmp    al,0x42
  402ebc:	fwait
  402ebd:	push   0x5c
  402ebf:	inc    esp
  402ec0:	cmp    eax,0xd96bb20b
  402ec5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ec6:	nop
  402ec7:	sar    DWORD PTR [esi-0x3982e50d],0x84
  402ece:	mov    ds:0x74ef5be9,eax
  402ed3:	in     eax,dx
  402ed4:	xchg   ebx,esp
  402ed6:	fwait
  402ed7:	stos   DWORD PTR es:[edi],eax
  402ed8:	xchg   ebp,eax
  402ed9:	mov    esi,0x47444160
  402ede:	loopne 0x402efc
  402ee0:	adc    eax,0xa5d8333b
  402ee5:	mov    es,eax
  402ee7:	es cmc 
  402ee9:	aad    0xb7
  402eeb:	xchg   edi,eax
  402eec:	push   ebp
  402eed:	(bad)  
  402eee:	ror    ebx,1
  402ef0:	mov    DWORD PTR [ebp+0x50],esi
  402ef3:	add    BYTE PTR [eax-0x5631a19],bl
  402ef9:	add    ecx,esp
  402efb:	lods   eax,DWORD PTR ds:[esi]
  402efc:	jle    0x402e86
  402efe:	loope  0x402f66
  402f00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f01:	out    dx,al
  402f02:	neg    BYTE PTR [eax-0x1def87fb]
  402f08:	scas   eax,DWORD PTR es:[edi]
  402f09:	jb     0x402f31
  402f0b:	aam    0x1c
  402f0d:	push   edi
  402f0e:	out    0x98,eax
  402f10:	sub    BYTE PTR [ebx-0x5f],dh
  402f13:	popf   
  402f14:	cdq    
  402f15:	js     0x402eac
  402f17:	les    edx,FWORD PTR [edx]
  402f19:	sbb    BYTE PTR [eax+0x50],0x21
  402f1d:	dec    ebp
  402f1e:	js     0x402f69
  402f20:	add    eax,0xb4bb7319
  402f25:	jbe    0x402ecf
  402f27:	scas   al,BYTE PTR es:[edi]
  402f28:	cld    
  402f29:	test   al,0x8
  402f2b:	dec    esp
  402f2c:	mov    al,0x58
  402f2e:	or     DWORD PTR [ecx-0x33],ebp
  402f31:	dec    ecx
  402f32:	ja     0x402f6c
  402f34:	out    0xac,eax
  402f36:	mov    edx,0x19bbf555
  402f3b:	or     DWORD PTR [eax+0x14ac7366],ecx
  402f41:	ss dec eax
  402f43:	jno    0x402f63
  402f45:	push   esi
  402f46:	jmp    ebp
  402f48:	outs   dx,BYTE PTR ds:[esi]
  402f49:	mov    cl,0xbf
  402f4b:	jo     0x402ef9
  402f4d:	retf   
  402f4e:	ja     0x402ee3
  402f50:	mov    ds:0x5779efaf,eax
  402f55:	sbb    dh,BYTE PTR [eax]
  402f57:	push   ds
  402f58:	jle    0x402f21
  402f5a:	or     esp,edx
  402f5c:	mov    ch,0x51
  402f5e:	xchg   ebp,eax
  402f5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f60:	cmp    BYTE PTR [ebx-0x31],0x41
  402f64:	cmp    cl,BYTE PTR [eax-0x57]
  402f67:	fwait
  402f68:	push   es
  402f69:	das    
  402f6a:	popf   
  402f6b:	jnp    0x402f59
  402f6d:	fldcw  WORD PTR [eax]
  402f6f:	shl    DWORD PTR [edx+0x61b9924f],cl
  402f75:	inc    ebx
  402f76:	loopne 0x402fd3
  402f78:	push   ecx
  402f79:	push   ebp
  402f7a:	sub    eax,0xd41c66f6
  402f7f:	adc    eax,0xe20a6b7b
  402f84:	add    edx,DWORD PTR [ebx-0x28]
  402f87:	mov    dl,0x14
  402f89:	dec    esi
  402f8a:	push   cs
  402f8b:	stos   DWORD PTR es:[edi],eax
  402f8c:	jo     0x402f47
  402f8e:	push   cs
  402f8f:	cmp    DWORD PTR [esi-0x49],ecx
  402f92:	sub    esi,esp
  402f94:	inc    ecx
  402f95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f96:	popa   
  402f97:	pop    es
  402f98:	cmc    
  402f99:	jne    0x40300d
  402f9b:	cmp    edx,DWORD PTR [bp-0x21]
  402f9f:	fdivr  st(4),st
  402fa1:	inc    edx
  402fa2:	push   ds
  402fa3:	mov    bh,0x76
  402fa5:	or     ecx,DWORD PTR [edi-0x1cf55195]
  402fab:	call   0xb400:0xa1f23001
  402fb2:	push   edi
  402fb3:	and    eax,0xfab9aadb
  402fb8:	mov    eax,eax
  402fba:	leave  
  402fbb:	repz mov ss,esp
  402fbe:	sub    BYTE PTR [ecx],bh
  402fc0:	and    dl,BYTE PTR [eax+0x33]
  402fc3:	mov    bh,0x14
  402fc5:	xor    ch,bl
  402fc7:	scas   eax,DWORD PTR es:[edi]
  402fc8:	jbe    0x402f4a
  402fca:	jo     0x403021
  402fcc:	jg     0x402f72
  402fce:	rol    DWORD PTR [ebx],cl
  402fd0:	inc    ebp
  402fd1:	pop    ss
  402fd2:	stos   DWORD PTR es:[edi],eax
  402fd3:	pusha  
  402fd4:	xchg   ecx,eax
  402fd5:	ss mov dh,0x2f
  402fd8:	jbe    0x40303e
  402fda:	pop    ebp
  402fdb:	xor    esi,eax
  402fdd:	pop    eax
  402fde:	add    ah,BYTE PTR [esi+0xf]
  402fe1:	repnz data16 div BYTE PTR [eax-0x736adb05]
  402fe9:	loopne 0x403034
  402feb:	mov    edi,eax
  402fed:	lods   eax,DWORD PTR ds:[esi]
  402fee:	(bad)  
  402fef:	dec    ebp
  402ff0:	jmp    0xa22badd5
  402ff5:	retf   
  402ff6:	aam    0xc
  402ff8:	mov    fs,edi
  402ffa:	sub    BYTE PTR [eax+0x369384da],ch
  403000:	mov    edi,0x9482017
  403005:	or     al,0xfe
  403007:	nop
  403008:	fiadd  WORD PTR [esi]
  40300a:	sti    
  40300b:	add    esp,DWORD PTR [edx-0x18]
  40300e:	shl    DWORD PTR [ebp+0x18],0x8a
  403012:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403013:	sub    eax,ecx
  403015:	in     eax,0x7d
  403017:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403018:	pop    ds
  403019:	or     al,al
  40301b:	adc    BYTE PTR [edx],bl
  40301d:	ret    
  40301e:	dec    ebp
  40301f:	sub    al,0xe5
  403021:	adc    al,dh
  403023:	push   0x5fb68025
  403028:	adc    ch,BYTE PTR [eax-0x2b]
  40302b:	mov    cl,0x8b
  40302d:	add    BYTE PTR [eax+0x4e],dl
  403030:	inc    ebx
  403031:	sbb    edi,DWORD PTR [edx+0x76]
  403034:	pop    eax
  403035:	sub    eax,0x750cf4f9
  40303a:	dec    ebx
  40303b:	fldl2t 
  40303d:	jnp    0x40308e
  40303f:	imul   ebx,DWORD PTR [ebx+0x71],0xffffffe2
  403043:	aaa    
  403044:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403045:	add    al,0x7
  403047:	pop    DWORD PTR [ecx+0xc]
  40304a:	inc    BYTE PTR [edx+0x27bea0bb]
  403050:	inc    eax
  403051:	mov    esi,0x29f37a64
  403056:	jmp    0xc6cbfde0
  40305b:	ja     0x4030a1
  40305d:	xchg   esi,eax
  40305e:	xchg   esp,eax
  40305f:	mov    ebx,edi
  403061:	inc    esi
  403062:	scas   al,BYTE PTR es:[edi]
  403063:	fisttp WORD PTR [ebx+ecx*8-0x48c84c98]
  40306a:	pusha  
  40306b:	retf   
  40306c:	idiv   BYTE PTR [edi+edx*8]
  40306f:	adc    al,0x37
  403071:	test   al,0xdd
  403073:	test   eax,0x101785da
  403078:	hlt    
  403079:	cmp    eax,0x82d271ee
  40307e:	stos   DWORD PTR es:[edi],eax
  40307f:	jmp    0xc1ebd642
  403084:	or     ah,BYTE PTR [edi]
  403086:	and    eax,DWORD PTR ds:0x5a747bee
  40308c:	mov    edx,0x23e2cae6
  403091:	xchg   DWORD PTR [esi+0x67],ecx
  403094:	push   edi
  403095:	sub    DWORD PTR cs:[ecx],edx
  403098:	cmp    al,dh
  40309a:	pop    eax
  40309b:	sub    DWORD PTR [esp+eiz*2-0x365d6616],edx
  4030a2:	sbb    eax,0x89ff6a8c
  4030a7:	xor    eax,0xfef3f753
  4030ac:	test   BYTE PTR [ecx-0x61],0x23
  4030b0:	aad    0x44
  4030b2:	or     DWORD PTR [ecx+0x36654f64],ebx
  4030b8:	stos   BYTE PTR es:[edi],al
  4030b9:	mov    eax,0xdf59e025
  4030be:	xor    edi,DWORD PTR [edi+0x6a]
  4030c1:	aam    0x9c
  4030c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030c4:	ret    0xa5fb
  4030c7:	mov    bl,0xeb
  4030c9:	sbb    eax,0x3bf4de85
  4030ce:	retf   
  4030cf:	or     ebp,DWORD PTR [ebx]
  4030d1:	add    BYTE PTR [edx+0x563dd4dc],dl
  4030d7:	xor    DWORD PTR ds:0xd3e5db1d,eax
  4030dd:	iret   
  4030de:	bound  esi,QWORD PTR [edx-0x4326b0a5]
  4030e4:	xlat   BYTE PTR ds:[ebx]
  4030e5:	leave  
  4030e6:	in     eax,dx
  4030e7:	in     al,dx
  4030e8:	jp     0x403103
  4030ea:	add    BYTE PTR [edx+0x7d6e9aae],0xdf
  4030f1:	pop    edx
  4030f2:	cmp    eax,0x2d37d313
  4030f7:	sbb    eax,0x271fbc1c
  4030fc:	mov    eax,0x37dfb380
  403101:	pop    esp
  403102:	outs   dx,BYTE PTR ds:[esi]
  403103:	push   edi
  403104:	mov    DWORD PTR [esi-0x72],0x4ad6bcce
  40310b:	nop
  40310c:	leave  
  40310d:	xor    al,0xb0
  40310f:	mov    bh,0x5
  403111:	cmp    al,0xcf
  403113:	inc    BYTE PTR [eax+0x4]
  403116:	nop
  403117:	test   eax,ebp
  403119:	adc    DWORD PTR [edx],0x453c44ce
  40311f:	push   ds
  403120:	gs test al,0x8b
  403123:	push   edi
  403124:	jo     0x4030b6
  403126:	(bad)  
  403127:	or     esp,DWORD PTR [ebp+0x3317b72]
  40312d:	iret   
  40312e:	mov    ebp,0x578adb65
  403133:	sub    BYTE PTR [esi],al
  403135:	aad    0x75
  403137:	mov    cs,WORD PTR [edi+0x34332cb]
  40313d:	retf   
  40313e:	(bad)
  403143:	sbb    BYTE PTR [ebp-0x7e],cl
  403146:	into   
  403147:	push   edx
  403148:	inc    ebp
  403149:	fwait
  40314a:	cmp    esi,DWORD PTR [eax]
  40314c:	lods   eax,DWORD PTR ds:[esi]
  40314d:	xor    DWORD PTR [ebx],ecx
  40314f:	hlt    
  403150:	shl    BYTE PTR [ebx-0x6b7edb5],cl
  403156:	xlat   BYTE PTR ds:[ebx]
  403157:	loope  0x4031bc
  403159:	cmp    ah,dh
  40315b:	and    eax,0xd8aa5558
  403160:	test   DWORD PTR [esi-0x30],0xbcca056b
  403167:	in     eax,0x1a
  403169:	xchg   ah,dh
  40316b:	mov    ebx,0x2d45ee30
  403170:	sub    edx,DWORD PTR [ecx+ecx*2-0x14eace3a]
  403177:	(bad)  
  403179:	mov    ecx,0x8127381b
  40317e:	xchg   esp,eax
  40317f:	or     al,0x8c
  403181:	fidiv  DWORD PTR [edi+ecx*2]
  403184:	jne    0x403198
  403186:	in     al,dx
  403187:	pop    esp
  403188:	mov    cl,0x6f
  40318a:	push   edi
  40318b:	arpl   WORD PTR [edx+0x1b7550f],di
  403191:	and    ebp,DWORD PTR [edi+ecx*8-0x71]
  403195:	retf   0x8e0e
  403198:	repnz push 0x33
  40319b:	xchg   ecx,eax
  40319c:	ins    DWORD PTR es:[edi],dx
  40319d:	mov    ds:0x821ee1f4,eax
  4031a2:	out    0xa5,eax
  4031a4:	pop    es
  4031a5:	jb     0x403180
  4031a7:	add    eax,0x9d7c4ad2
  4031ac:	dec    ebp
  4031ad:	add    edi,0xd2d60b99
  4031b3:	sbb    BYTE PTR [edx+ebp*1+0x49],cl
  4031b7:	jns    0x40322f
  4031b9:	dec    eax
  4031ba:	xchg   ebx,eax
  4031bb:	mov    dl,0xc
  4031bd:	addr16 retf 0xcba
  4031c1:	les    edi,FWORD PTR [edi-0x31]
  4031c4:	scas   eax,DWORD PTR es:[edi]
  4031c5:	mov    esi,0x29f35931
  4031ca:	rcl    BYTE PTR [ebp+0x1b39712f],1
  4031d0:	xor    DWORD PTR [eax+0x2253a5f5],ecx
  4031d6:	xchg   esp,eax
  4031d7:	fist   WORD PTR ds:[ecx-0x2b]
  4031db:	pop    ds
  4031dc:	fsubr  DWORD PTR [ecx+0x62]
  4031df:	cmp    esp,ecx
  4031e1:	fst    QWORD PTR [ebp-0xd8c36f]
  4031e7:	inc    ebx
  4031e8:	cmp    esp,ecx
  4031ea:	aas    
  4031eb:	pop    esp
  4031ec:	cmp    eax,0xff29326e
  4031f1:	xchg   esp,eax
  4031f2:	push   ebp
  4031f3:	out    0x47,al
  4031f5:	dec    edx
  4031f6:	adc    al,0xe
  4031f8:	xlat   BYTE PTR ds:[ebx]
  4031f9:	pop    ebx
  4031fa:	not    ebx
  4031fc:	xchg   ecx,eax
  4031fd:	pop    edi
  4031fe:	loope  0x40325e
  403200:	imul   edx,DWORD PTR [esi-0x77108ef5],0xc6bbf00d
  40320a:	mov    ebp,0x1e66b6b1
  40320f:	dec    esi
  403210:	jo     0x403204
  403212:	sar    BYTE PTR [esi-0x3877da76],1
  403218:	xchg   edx,eax
  403219:	iret   
  40321a:	fnstcw WORD PTR ds:0x3528a7a5
  403220:	mov    ebx,0x6c689daa
  403225:	btc    DWORD PTR [eax-0x1064fe37],esi
  40322c:	(bad)  
  40322d:	jmp    0x403223
  40322f:	imul   ebp,DWORD PTR [ecx+0x248b3b0b],0xffffff85
  403236:	jns    0x403240
  403238:	sbb    ebx,edi
  40323a:	pop    esi
  40323b:	popa   
  40323c:	cli    
  40323d:	mov    bh,BYTE PTR [esi+0x16]
  403240:	les    edx,FWORD PTR [esi+0x7fd083bc]
  403246:	aad    0x10
  403248:	add    eax,0x2a9aa36e
  40324d:	mov    dh,0x3f
  40324f:	ss sbb ch,ah
  403252:	idiv   DWORD PTR [esi]
  403254:	push   ss
  403255:	mov    fs,eax
  403257:	xlat   BYTE PTR ds:[ebx]
  403258:	cmp    edx,edx
  40325a:	pop    ebp
  40325b:	loopne 0x403276
  40325d:	fs arpl cx,si
  403260:	rcr    BYTE PTR [esi+0x50],1
  403263:	test   DWORD PTR [edx-0x3c],edi
  403266:	push   ds
  403267:	sub    BYTE PTR [ecx],dl
  403269:	dec    eax
  40326a:	push   ecx
  40326b:	jge    0x4032d4
  40326d:	dec    ebp
  40326e:	jb     0x4031f8
  403270:	mov    esp,0xc95f7196
  403275:	imul   edi,DWORD PTR [ebx],0x4a195855
  40327b:	fld    DWORD PTR [eax-0x136854db]
  403281:	out    dx,eax
  403282:	popa   
  403283:	out    0x44,eax
  403285:	jmp    0x403291
  403287:	adc    al,0x6e
  403289:	dec    esi
  40328a:	mov    WORD PTR [edx],es
  40328c:	xchg   ebx,eax
  40328d:	shl    DWORD PTR [edx-0x36],cl
  403290:	in     al,dx
  403291:	xor    eax,0x4b1abe49
  403296:	dec    esp
  403297:	jnp    0x40328d
  403299:	mov    ch,0xd5
  40329b:	jecxz  0x4032b5
  40329d:	call   0xc53eeea4
  4032a2:	call   0xb7f:0x6eda375d
  4032a9:	in     al,0x77
  4032ab:	or     ecx,DWORD PTR [ecx]
  4032ad:	pop    ds
  4032ae:	test   BYTE PTR [edx+0x50],0x7c
  4032b2:	call   0x8c:0x1471ad7e
  4032b9:	mov    edx,esi
  4032bb:	sub    DWORD PTR [esi-0x5981396a],ecx
  4032c1:	sbb    eax,0x2f6b78ea
  4032c6:	mov    cl,al
  4032c8:	stc    
  4032c9:	test   esi,esi
  4032cb:	xchg   edx,eax
  4032cc:	dec    esp
  4032cd:	sar    BYTE PTR [ebx],0xfb
  4032d0:	retf   
  4032d1:	mov    dh,cl
  4032d3:	push   edi
  4032d4:	sar    BYTE PTR [edx+0x3a],1
  4032d7:	and    eax,0x546f99c4
  4032dc:	mov    edi,0x393fbbeb
  4032e1:	push   eax
  4032e2:	dec    ecx
  4032e3:	fstp   st(0)
  4032e5:	mov    ebx,0x95289783
  4032ea:	cld    
  4032eb:	dec    ebx
  4032ec:	mov    ebp,0x7edca587
  4032f1:	push   ebx
  4032f2:	js     0x403310
  4032f4:	das    
  4032f5:	test   BYTE PTR [edx+edx*4-0x4be593fe],cl
  4032fc:	lahf   
  4032fd:	and    BYTE PTR [edx],dl
  4032ff:	mov    ebx,0x76cfb197
  403304:	mov    ch,BYTE PTR [edx]
  403306:	clc    
  403307:	adc    ebx,DWORD PTR [eax+0x20]
  40330a:	dec    eax
  40330b:	test   eax,0xffdf099b
  403310:	outs   dx,DWORD PTR ds:[esi]
  403311:	push   ds
  403312:	sahf   
  403313:	retf   
  403314:	popf   
  403315:	test   al,0xb9
  403317:	leave  
  403318:	into   
  403319:	mov    esi,0xd5574633
  40331e:	ins    BYTE PTR es:[edi],dx
  40331f:	ja     0x403318
  403321:	aad    0xc1
  403323:	sub    bh,cl
  403325:	xchg   ecx,eax
  403326:	dec    esi
  403327:	cmp    BYTE PTR [eax],0x30
  40332a:	adc    eax,0x7c5f0e4f
  40332f:	mov    edi,0x6b9fc9e0
  403334:	retf   
  403335:	push   ebx
  403336:	xor    esi,ecx
  403338:	repnz xlat BYTE PTR ds:[ebx]
  40333a:	sahf   
  40333b:	inc    ecx
  40333c:	sub    al,0x61
  40333e:	loope  0x403360
  403340:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403341:	xlat   BYTE PTR ds:[ebx]
  403342:	adc    BYTE PTR [edx],al
  403344:	in     eax,dx
  403345:	cs or  eax,0x467057b0
  40334b:	jle    0x4033a6
  40334d:	or     cl,bh
  40334f:	push   edx
  403350:	sbb    eax,0x1f8e84da
  403355:	or     esi,edx
  403357:	dec    esi
  403358:	scas   al,BYTE PTR es:[edi]
  403359:	js     0x4033ce
  40335b:	repnz not DWORD PTR [ebp-0x41c75119]
  403362:	out    0xc6,eax
  403364:	shr    DWORD PTR [esi+eax*2-0x23],1
  403368:	pushf  
  403369:	add    BYTE PTR [ebp+eax*2+0x31],al
  40336d:	fmul   st(0),st
  40336f:	fsub   QWORD PTR [edx]
  403371:	ret    0x1539
  403374:	out    0x56,al
  403376:	je     0x4032fb
  403378:	sub    dl,BYTE PTR [edx+0x483d9690]
  40337e:	shl    cl,1
  403380:	mov    ebp,0xa3070cbf
  403385:	sbb    bh,BYTE PTR [ebx+edi*4+0x32]
  403389:	mov    bl,0x5
  40338b:	(bad)  
  40338c:	adc    al,0xc3
  40338e:	push   ecx
  40338f:	lods   eax,DWORD PTR ds:[esi]
  403390:	idiv   DWORD PTR ds:0x7fb3b2e3
  403396:	je     0x4033eb
  403398:	pusha  
  403399:	test   eax,0xf8f8d7a7
  40339e:	lods   al,BYTE PTR ds:[esi]
  40339f:	cmp    BYTE PTR [esi],bh
  4033a1:	mov    dl,0x47
  4033a3:	iret   
  4033a4:	dec    ecx
  4033a5:	inc    ecx
  4033a6:	or     al,0x5a
  4033a8:	jno    0x40337e
  4033aa:	jae    0x4033e3
  4033ac:	mov    WORD PTR [edi-0x38e31c8c],ss
  4033b2:	dec    ebp
  4033b3:	xchg   esp,eax
  4033b4:	add    DWORD PTR [eax+0x5],eax
  4033b7:	out    0xfc,al
  4033b9:	arpl   WORD PTR [esi+ebp*1+0x26],dx
  4033bd:	and    al,0xd7
  4033bf:	mov    edx,0x25e02f00
  4033c4:	dec    ebp
  4033c5:	icebp  
  4033c6:	add    BYTE PTR [ecx],al
  4033c8:	mov    ds:0x48efde7d,al
  4033cd:	mov    ds:0x79e3327b,al
  4033d2:	xchg   ebx,eax
  4033d3:	mov    cl,0x8
  4033d5:	enter  0x72b6,0x23
  4033d9:	xor    ecx,ebp
  4033db:	xchg   BYTE PTR [edi+0x3aa015e8],al
  4033e1:	mov    ds:0xfd0462b1,eax
  4033e6:	sub    al,0x6d
  4033e8:	cwde   
  4033e9:	mov    cl,0x19
  4033eb:	sbb    BYTE PTR [edx-0x69],dl
  4033ee:	mov    al,0x4a
  4033f0:	sti    
  4033f1:	mov    dl,BYTE PTR [ebx+0x66257378]
  4033f7:	imul   ebp,ecx,0xffffffeb
  4033fa:	fidiv  DWORD PTR [ebp+0x1d]
  4033fd:	xlat   BYTE PTR ds:[ebx]
  4033fe:	jbe    0x403465
  403400:	cmp    esi,DWORD PTR [ecx]
  403402:	inc    ebp
  403403:	fwait
  403404:	lods   al,BYTE PTR ds:[esi]
  403405:	loope  0x4033fb
  403407:	fyl2xp1 
  403409:	scas   eax,DWORD PTR es:[edi]
  40340a:	mov    ecx,0xc90fec5c
  40340f:	push   ecx
  403410:	dec    ebp
  403411:	js     0x4033f7
  403413:	cmp    al,0x18
  403415:	xchg   esi,eax
  403416:	add    al,0xa5
  403418:	sub    DWORD PTR [ebp-0xf],esi
  40341b:	sbb    al,0x95
  40341d:	xchg   esp,eax
  40341e:	mov    bl,0xdf
  403420:	xchg   ebx,eax
  403421:	mov    DWORD PTR [eax+0x576a03e5],edi
  403427:	or     bl,BYTE PTR [esi-0x9]
  40342a:	sar    ebx,1
  40342c:	idiv   BYTE PTR [eax+0x62803531]
  403432:	xchg   ecx,eax
  403433:	pop    ss
  403434:	inc    eax
  403435:	lock mov ds:0x7f04d263,al
  40343b:	aas    
  40343c:	xor    eax,0x993a1559
  403441:	inc    edi
  403442:	jp     0x40346d
  403444:	xchg   ecx,eax
  403445:	sar    dl,cl
  403447:	test   BYTE PTR [ecx+0x46],cl
  40344a:	out    dx,eax
  40344b:	push   0xc
  40344d:	sub    ch,BYTE PTR [edi]
  40344f:	pop    ss
  403450:	xchg   ecx,eax
  403451:	repz clc 
  403453:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403454:	retf   0xa38d
  403457:	in     al,0x5c
  403459:	sub    eax,0x342f30d8
  40345e:	rol    DWORD PTR [esi+0x69],cl
  403461:	mov    ds:0x1d8f2935,eax
  403466:	jns    0x40341d
  403468:	sub    al,0x4b
  40346a:	test   DWORD PTR [ebp-0x7c72281f],0x1946e72b
  403474:	mov    dh,0x6
  403476:	mov    ebx,es
  403478:	adc    ah,BYTE PTR [esi+0x16]
  40347b:	imul   esp,DWORD PTR [edx-0x1a3aa240],0xae62b3d2
  403485:	mov    dh,0x22
  403487:	mov    esp,0xb6d0770b
  40348c:	mov    esp,0x6589fe33
  403491:	sub    ah,BYTE PTR [edx+0x33]
  403494:	dec    ebp
  403495:	fild   WORD PTR [edx+0x78]
  403498:	xchg   esi,eax
  403499:	ja     0x403424
  40349b:	sub    al,0xdb
  40349d:	pop    esi
  40349e:	cwde   
  40349f:	iret   
  4034a0:	pusha  
  4034a1:	jnp    0x403508
  4034a3:	loope  0x403491
  4034a5:	xchg   edi,eax
  4034a6:	push   ecx
  4034a7:	or     ah,BYTE PTR ds:0xc3d8a47e
  4034ad:	mov    ss,WORD PTR [esi-0x7fb59041]
  4034b3:	ret    0xbdf1
  4034b6:	jne    0x4034b9
  4034b8:	(bad)  
  4034b9:	sti    
  4034ba:	arpl   WORD PTR [esi-0x15],bp
  4034bd:	sub    dh,dh
  4034bf:	icebp  
  4034c0:	xchg   dh,ah
  4034c2:	mov    bh,0x19
  4034c4:	popa   
  4034c5:	mov    WORD PTR [ebx+0x60524f59],ds
  4034cb:	inc    eax
  4034cc:	sub    edx,DWORD PTR es:[edx+esi*4]
  4034d0:	dec    edi
  4034d1:	push   0xa74b23eb
  4034d6:	add    BYTE PTR [esi+0x37599f35],ch
  4034dc:	nop
  4034dd:	popf   
  4034de:	xchg   al,ch
  4034e0:	jecxz  0x403473
  4034e2:	ud2    
  4034e4:	push   eax
  4034e5:	adc    BYTE PTR [edx+0x69210515],dl
  4034eb:	cmp    esi,DWORD PTR [ebx]
  4034ed:	fld    QWORD PTR [ebx]
  4034ef:	test   dh,ch
  4034f1:	sub    BYTE PTR [edi+0x23],0x7a
  4034f5:	in     eax,dx
  4034f6:	push   edi
  4034f7:	add    eax,0xff814253
  4034fc:	add    ch,dh
  4034fe:	xchg   BYTE PTR [edx-0x6e7f00fe],bh
  403504:	jae    0x40357f
  403506:	rcl    DWORD PTR [ecx+0x5daa758e],cl
  40350c:	mov    ?,WORD PTR [esi+0x15]
  40350f:	in     eax,dx
  403510:	or     eax,0x6fa68d75
  403515:	pusha  
  403516:	stos   BYTE PTR es:[edi],al
  403517:	loope  0x40354c
  403519:	test   BYTE PTR [edx-0x47],bh
  40351c:	test   eax,0x5d0eada5
  403521:	jmp    0x4034b6
  403523:	lahf   
  403524:	cmp    DWORD PTR [edx+edx*8+0xf39c3be],edx
  40352b:	cmp    al,0x5a
  40352d:	jecxz  0x40355c
  40352f:	sub    eax,0x98e217d1
  403534:	inc    ebp
  403535:	pop    ebp
  403536:	inc    ecx
  403537:	push   eax
  403538:	loopne 0x403577
  40353a:	test   eax,0x4d007639
  40353f:	cmp    DWORD PTR [edx+0x2333269],eax
  403545:	shr    BYTE PTR [eax-0x72],1
  403548:	xor    dh,BYTE PTR [edi+esi*1-0x4abf919]
  40354f:	jmp    0xf0de8bb6
  403554:	lea    edx,[edx+0x7c]
  403557:	xlat   BYTE PTR ds:[ebx]
  403558:	scas   al,BYTE PTR es:[edi]
  403559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40355a:	lods   ax,WORD PTR ds:[esi]
  40355c:	mov    edi,eax
  40355e:	xlat   BYTE PTR ds:[ebx]
  40355f:	add    DWORD PTR ds:0x992e402,0xd
  403566:	stos   DWORD PTR es:[edi],eax
  403567:	mov    cl,0x9a
  403569:	push   edx
  40356a:	call   0xe09002af
  40356f:	retf   0xb9e9
  403572:	mov    bh,0x2e
  403574:	jge    0x4035b1
  403576:	push   es
  403577:	aam    0x8c
  403579:	sub    al,BYTE PTR [edi]
  40357b:	cmp    BYTE PTR ds:0xb3c0b073,ch
  403581:	idiv   DWORD PTR [eax-0x25]
  403584:	sub    cl,ah
  403586:	xor    DWORD PTR [esi-0x795ff0cc],esp
  40358c:	retf   0xfbc0
  40358f:	sbb    al,0x8d
  403591:	mov    ds:0xe2c27b68,eax
  403596:	sbb    DWORD PTR [ebp+0x4c],ebp
  403599:	add    BYTE PTR [edx+0x6b11eeb6],dh
  40359f:	push   esp
  4035a0:	cmc    
  4035a1:	and    cx,bx
  4035a4:	es fadd QWORD PTR ds:[ecx+0x7]
  4035a9:	gs mov bh,cl
  4035ac:	sti    
  4035ad:	mov    ecx,0x4948b553
  4035b2:	push   esi
  4035b3:	add    eax,0x54b899c0
  4035b8:	sub    eax,0xeb72b3f3
  4035bd:	and    dl,ch
  4035bf:	mov    ch,0x2a
  4035c1:	fcom   DWORD PTR [esi]
  4035c3:	neg    DWORD PTR [esi+ecx*2-0x3446b6fe]
  4035ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035cb:	mov    edi,0xefdf6909
  4035d0:	popf   
  4035d1:	or     al,0xad
  4035d3:	cmovbe edx,DWORD PTR [esi-0x7a]
  4035d7:	das    
  4035d8:	mov    ds:0x5e082500,al
  4035dd:	or     BYTE PTR [ecx],bh
  4035df:	adc    al,0x2f
  4035e1:	or     eax,0x9815606d
  4035e6:	jge    0x403570
  4035e8:	push   0xcc1b1985
  4035ed:	push   0x26c2053e
  4035f2:	and    BYTE PTR [ebp+edi*2+0x278fdba8],ch
  4035f9:	mov    ecx,0xed977f34
  4035fe:	and    eax,ebp
  403600:	mov    WORD PTR [eax+0x57fc84df],ss
  403606:	call   0xc2ed:0xbf107d3b
  40360d:	imul   DWORD PTR [edx-0x72]
  403610:	loopne 0x403596
  403612:	adc    ah,BYTE PTR [ebx+ecx*1+0x64]
  403616:	jmp    0xcb7321a9
  40361b:	cmp    edx,eax
  40361d:	rol    esi,cl
  40361f:	call   0xbe03:0x6435570e
  403626:	lahf   
  403627:	lock leave 
  403629:	xor    edx,edi
  40362b:	or     edi,DWORD PTR [ebp+0x6373b387]
  403631:	hlt    
  403632:	cwde   
  403633:	cwde   
  403634:	mov    edi,0x64310456
  403639:	out    0xcf,eax
  40363b:	in     eax,dx
  40363c:	ror    edi,1
  40363e:	jecxz  0x403680
  403640:	cmp    BYTE PTR [esp+ecx*4+0x53],dl
  403644:	mov    DWORD PTR [edi],ebx
  403646:	in     al,dx
  403647:	stc    
  403648:	out    0x18,eax
  40364a:	sar    DWORD PTR [ecx+0x3f13ce8a],1
  403650:	imul   eax,DWORD PTR [ebx],0x55
  403653:	jle    0x403620
  403655:	mov    dl,al
  403657:	mov    al,0x7f
  403659:	xchg   ebx,eax
  40365a:	ret    0xcad
  40365d:	shr    ecx,cl
  40365f:	adc    DWORD PTR ds:0x7f95b322,ecx
  403665:	mov    al,BYTE PTR fs:[ebp+0x404df9f6]
  40366c:	aam    0x67
  40366e:	lods   eax,DWORD PTR ds:[esi]
  40366f:	int    0x3e
  403671:	or     BYTE PTR [eax+0x2d],ah
  403674:	and    BYTE PTR [edi+0x33b7edca],bl
  40367a:	push   edi
  40367b:	mov    cl,0x99
  40367d:	and    ah,ah
  40367f:	daa    
  403680:	lds    ebp,FWORD PTR [ebp-0x40]
  403683:	jle    0x4036d7
  403685:	sub    DWORD PTR [ecx+0x4],edx
  403688:	mov    ah,0x14
  40368a:	jp     0x4036a0
  40368c:	daa    
  40368d:	xchg   esi,eax
  40368e:	or     ah,dh
  403690:	add    eax,0xd273d791
  403695:	dec    edi
  403696:	rcpps  xmm1,xmm7
  403699:	inc    eax
  40369a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40369b:	dec    edx
  40369c:	rcr    BYTE PTR [ebp-0xac61450],cl
  4036a2:	inc    edx
  4036a3:	out    0x81,al
  4036a5:	in     eax,0x1b
  4036a7:	pop    edi
  4036a8:	cs pop esi
  4036aa:	ja     0x403654
  4036ac:	mov    edi,0xf69bb07e
  4036b1:	jl     0x4036a2
  4036b3:	js     0x403656
  4036b5:	fnstenv [edx]
  4036b7:	push   esp
  4036b8:	push   ds
  4036b9:	outs   dx,DWORD PTR ds:[esi]
  4036ba:	jo     0x40372b
  4036bc:	stos   BYTE PTR es:[edi],al
  4036bd:	inc    edx
  4036be:	ins    DWORD PTR es:[edi],dx
  4036bf:	call   0xfd2:0x9ec6e9e3
  4036c6:	stos   BYTE PTR es:[edi],al
  4036c7:	pushf  
  4036c8:	jb     0x40370f
  4036ca:	sub    dl,BYTE PTR [edx+ebp*2+0x3a]
  4036ce:	adc    al,0x4b
  4036d0:	in     eax,0xc7
  4036d2:	push   es
  4036d3:	(bad)  
  4036d4:	mov    ah,0xa5
  4036d6:	stos   DWORD PTR es:[edi],eax
  4036d7:	lock mov bh,0x23
  4036da:	dec    esp
  4036db:	aas    
  4036dc:	rcr    DWORD PTR [esi+ecx*2-0x4a],1
  4036e0:	leave  
  4036e1:	xchg   BYTE PTR [esi+0x1431811c],cl
  4036e7:	aad    0x1a
  4036e9:	es (bad) 
  4036eb:	mov    esi,0x62fd1c5f
  4036f0:	jae    0x403747
  4036f2:	nop
  4036f3:	scas   eax,DWORD PTR es:[edi]
  4036f4:	retf   0xdf2c
  4036f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036f8:	call   0xe7281e2d
  4036fd:	(bad)  
  4036fe:	mov    esp,0xc6639221
  403703:	inc    ecx
  403704:	cmp    DWORD PTR [ebx-0x2a4230d0],esi
  40370a:	cmp    al,0x30
  40370c:	mov    edi,0xea7f5969
  403711:	fs mov ah,0x65
  403714:	sbb    ecx,esi
  403716:	mov    ch,0x41
  403718:	sahf   
  403719:	ins    DWORD PTR es:[edi],dx
  40371a:	sub    edi,eax
  40371c:	or     DWORD PTR [ebx-0xa],0xffffffe5
  403720:	out    0x48,al
  403722:	ja     0x4036e5
  403724:	jb     0x403718
  403726:	jp     0x403719
  403728:	and    al,0xd1
  40372a:	xchg   esi,eax
  40372b:	xor    BYTE PTR ds:0xaf7a5e76,dl
  403731:	ins    DWORD PTR es:[edi],dx
  403732:	xchg   BYTE PTR [ecx-0x4063de99],bh
  403738:	sub    dl,dl
  40373a:	push   es
  40373b:	arpl   WORD PTR [ebp-0x7fa0662b],bx
  403741:	cs aam 0x90
  403744:	out    0x92,al
  403746:	int    0x63
  403748:	cmp    eax,0x8176e008
  40374d:	add    BYTE PTR [edx],0x7a
  403750:	stc    
  403751:	mov    ds:0x370766ac,al
  403756:	dec    esp
  403757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403759:	adc    al,0x80
  40375c:	(bad)  
  40375d:	neg    DWORD PTR [edi+0x26]
  403760:	enter  0x645,0x60
  403764:	mov    edx,DWORD PTR [ebx]
  403766:	popf   
  403767:	jmp    0x7734dd61
  40376c:	gs cmp al,0xf3
  40376f:	scas   eax,DWORD PTR es:[edi]
  403770:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403771:	inc    eax
  403772:	mov    edi,0xc8f77ff7
  403777:	jnp    0x4037d4
  403779:	prefetch (bad)
  40377a:	or     eax,0x9e5174e3
  40377f:	lea    eax,[bp+0x63]
  403783:	sub    al,0x43
  403785:	mov    bl,0xd
  403787:	inc    DWORD PTR [edx+eax*8]
  40378a:	mov    BYTE PTR [ecx-0x1],cl
  40378d:	out    dx,eax
  40378e:	cmp    esi,DWORD PTR [ecx]
  403790:	and    eax,0x471d9567
  403795:	push   ebp
  403796:	sub    eax,0x38897b1b
  40379b:	xor    al,0x58
  40379d:	neg    edi
  40379f:	push   ebx
  4037a0:	add    BYTE PTR [edi],bh
  4037a2:	mov    ?,WORD PTR [edi-0x70]
  4037a5:	repz mov ah,0x29
  4037a8:	or     ebx,DWORD PTR [ebp+0x6b1d8fb5]
  4037ae:	xchg   edx,eax
  4037af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037b0:	adc    eax,0xbf9524b9
  4037b5:	push   edx
  4037b6:	xchg   ecx,eax
  4037b7:	fcom   DWORD PTR [ebp+0x474c4376]
  4037bd:	jmp    0x40379c
  4037bf:	xlat   BYTE PTR ds:[ebx]
  4037c0:	sub    BYTE PTR [edx+0x3],bh
  4037c3:	mov    DWORD PTR [edx-0x6413b6db],edi
  4037c9:	inc    eax
  4037ca:	and    bh,BYTE PTR ds:0x6ec7c984
  4037d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037d1:	push   0xb1e20d4d
  4037d6:	retf   0x2a8f
  4037d9:	stos   DWORD PTR es:[edi],eax
  4037da:	aad    0xb6
  4037dc:	sbb    DWORD PTR [edi+edx*8+0x69],edi
  4037e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037e1:	jmp    0x9679:0xac3bf1ef
  4037e8:	(bad)  
  4037e9:	fcom   st(3)
  4037eb:	xchg   edi,eax
  4037ec:	mov    ds:0x9314e881,eax
  4037f1:	ret    
  4037f2:	jbe    0x403817
  4037f4:	sub    DWORD PTR [esi],0xf172a8b8
  4037fa:	ret    
  4037fb:	mov    esi,0x23ca291
  403800:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403801:	xor    DWORD PTR [edi-0x56ed054a],edi
  403807:	js     0x4037c4
  403809:	dec    ebx
  40380a:	dec    esi
  40380b:	pop    eax
  40380c:	inc    DWORD PTR [eax+0x49]
  40380f:	adc    ecx,DWORD PTR [ecx+0x70b156c2]
  403815:	jae    0x4037f7
  403817:	mov    edi,0xe5eb3c86
  40381c:	xchg   ebp,eax
  40381d:	outs   dx,BYTE PTR fs:[esi]
  40381f:	in     eax,dx
  403820:	inc    edx
  403821:	or     cl,dl
  403823:	gs cmc 
  403825:	push   eax
  403826:	cmp    BYTE PTR [ecx],dh
  403828:	dec    eax
  403829:	pushf  
  40382a:	dec    edx
  40382b:	in     eax,0x9f
  40382d:	add    dh,BYTE PTR [ebp-0x589a85fa]
  403833:	mov    ds:0x1f7c5fa7,eax
  403838:	int    0x96
  40383a:	imul   esp,DWORD PTR [edx],0x9
  40383d:	pop    ecx
  40383e:	mov    bh,BYTE PTR [edi-0x8]
  403841:	sub    eax,0x7683eaf
  403846:	jb     0x4037cf
  403848:	sbb    eax,DWORD PTR [ebp+0x6d938aa]
  40384e:	out    0x9c,al
  403850:	popf   
  403851:	pop    eax
  403852:	fnstenv [ebp+0x37]
  403855:	call   0x701c:0x8d978432
  40385c:	mov    DWORD PTR [ebx-0x3a8512a0],eax
  403862:	mov    dl,0x65
  403864:	loopne 0x40382d
  403866:	dec    esi
  403867:	jno    0x403800
  403869:	fwait
  40386a:	and    eax,0xb69f52a7
  40386f:	loope  0x40387a
  403871:	pop    edx
  403872:	and    al,0xcb
  403874:	adc    al,0x32
  403876:	pop    ecx
  403877:	(bad)  
  403878:	xrelease lock adc BYTE PTR ds:[edi+eax*8],ah
  40387e:	mov    bh,0x8f
  403880:	and    dh,cl
  403882:	push   eax
  403883:	adc    al,0x6a
  403885:	mov    al,0x2d
  403887:	cmp    al,0xf3
  403889:	call   0x7e86:0x7ca88026
  403890:	rol    DWORD PTR [ecx+0x8e0de94],1
  403896:	frstor [ebx]
  403898:	and    bl,ch
  40389a:	(bad)  
  40389b:	test   DWORD PTR [edx-0x6575f983],0xefdbbe2b
  4038a5:	sbb    eax,ebp
  4038a7:	call   0xf8e36828
  4038ac:	rcl    WORD PTR [ebx-0x1d6f69c3],1
  4038b3:	rol    al,1
  4038b5:	sbb    eax,0xa9693b8f
  4038ba:	adc    eax,0xd7effab7
  4038bf:	mov    al,ds:0x231badfc
  4038c4:	ss xor esp,0xffffff8b
  4038c8:	ret    0xbaea
  4038cb:	mov    ss,WORD PTR [esi]
  4038cd:	jmp    0xe200:0xa5f449f2
  4038d4:	dec    eax
  4038d5:	bound  edi,QWORD PTR [ecx]
  4038d7:	shl    DWORD PTR [eax],0x5d
  4038da:	mov    edi,0x2bfe39d7
  4038df:	mov    BYTE PTR [ebp-0xdc0fce0],bh
  4038e5:	rol    ebp,0xa4
  4038e8:	scas   eax,DWORD PTR es:[edi]
  4038e9:	dec    eax
  4038ea:	dec    ecx
  4038eb:	into   
  4038ec:	push   ebx
  4038ed:	test   al,0xa9
  4038ef:	and    DWORD PTR [esi+0x26],esp
  4038f2:	into   
  4038f3:	dec    ebx
  4038f4:	lock mov bh,0x84
  4038f7:	cmp    DWORD PTR [eiz*8+0x61e268a7],ecx
  4038fe:	mov    cl,0x1e
  403900:	lahf   
  403901:	jg     0x403974
  403903:	pop    ss
  403904:	inc    ebp
  403905:	imul   edx,DWORD PTR [ecx],0x4b1d4bfb
  40390b:	test   BYTE PTR [esi+ecx*8],al
  40390e:	xchg   esp,eax
  40390f:	fwait
  403910:	lods   eax,DWORD PTR ds:[esi]
  403911:	test   eax,0x8083bcd6
  403916:	popf   
  403917:	inc    ebp
  403918:	in     eax,dx
  403919:	in     eax,dx
  40391a:	clc    
  40391b:	mov    edi,0x704959c3
  403920:	fmul   st(4),st
  403922:	sbb    al,0xf4
  403924:	mov    bl,ch
  403926:	(bad)  
  403927:	in     al,dx
  403928:	pop    ebx
  403929:	sbb    DWORD PTR [eax],esp
  40392b:	ret    0xa04e
  40392e:	jno    0x403960
  403930:	push   esp
  403931:	sbb    ebx,DWORD PTR [ebp+ebp*4+0x3a]
  403935:	mov    edi,0x12a5fa03
  40393a:	imul   ebx,DWORD PTR [edx+0x62dbafee],0x2a
  403941:	cmp    al,0x7d
  403943:	and    cl,BYTE PTR [ecx+0x7667a686]
  403949:	sbb    BYTE PTR [eax],dh
  40394b:	or     al,0xeb
  40394d:	std    
  40394e:	bound  edi,QWORD PTR [ecx-0x42]
  403951:	mov    esi,0x9a1a5d4f
  403956:	rcr    DWORD PTR [edi+0x3518d089],1
  40395c:	lds    ebp,FWORD PTR [ebx+0x52e0736]
  403962:	das    
  403963:	sub    eax,0x1e8e3b8c
  403968:	pop    eax
  403969:	sbb    DWORD PTR [ebx-0x5d0f0e0b],0x27
  403970:	bound  esp,QWORD PTR [ebp+0x59]
  403973:	hlt    
  403974:	push   ds
  403975:	out    dx,al
  403976:	mov    WORD PTR [esi+0x14df8b2c],ds
  40397c:	sbb    eax,0x92085769
  403981:	leave  
  403982:	pop    ecx
  403983:	(bad)  
  403984:	sub    al,0x8f
  403986:	jne    0x4039b6
  403988:	mov    ds:0x131a14ed,al
  40398d:	addr16 xchg ebx,eax
  40398f:	in     eax,dx
  403990:	mov    eax,0x3961bd0c
  403995:	pop    edx
  403996:	mov    ch,bl
  403998:	mov    ecx,0x8d4478ee
  40399d:	inc    esi
  40399e:	mov    BYTE PTR [ebx],bh
  4039a0:	mov    esp,0x899cda6c
  4039a5:	aad    0xba
  4039a7:	mov    eax,ds:0x74ea32b2
  4039ac:	pop    esp
  4039ad:	xchg   edi,eax
  4039ae:	aaa    
  4039af:	mov    BYTE PTR [esi-0x25],dh
  4039b2:	and    DWORD PTR [edx-0x5792aa6c],ebx
  4039b8:	clc    
  4039b9:	push   ebx
  4039ba:	sbb    eax,DWORD PTR [edi]
  4039bc:	sbb    dl,al
  4039be:	push   edx
  4039bf:	mov    DWORD PTR [ebx-0x5f1e53b9],esi
  4039c5:	cli    
  4039c6:	pusha  
  4039c7:	jnp    0x403955
  4039c9:	or     dh,cl
  4039cb:	push   0xbc721093
  4039d0:	mov    ebp,esp
  4039d2:	in     al,0x12
  4039d4:	inc    esp
  4039d5:	push   edi
  4039d6:	pop    es
  4039d7:	ficom  DWORD PTR ds:[ebp-0x3e017a4d]
  4039de:	not    dh
  4039e0:	test   eax,0x9d7d0f2c
  4039e5:	(bad)  
  4039e6:	loop   0x403a27
  4039e8:	add    cl,al
  4039ea:	sbb    esi,0x47baab79
  4039f0:	inc    esp
  4039f1:	fild   DWORD PTR [eax+0x5e39230c]
  4039f7:	imul   ebx,esp,0x8e1c98be
  4039fd:	enter  0xad72,0xad
  403a01:	(bad)  
  403a02:	popf   
  403a03:	stc    
  403a04:	dec    esp
  403a05:	jecxz  0x4039e6
  403a07:	ss pop esi
  403a09:	popa   
  403a0a:	and    al,0x35
  403a0d:	pop    ds
  403a0e:	shl    DWORD PTR [ebx+0x34c8f2e0],cl
  403a14:	cmp    DWORD PTR [eax],edi
  403a16:	xor    al,cl
  403a18:	retf   0xe6a
  403a1b:	call   0xf3f6:0xc9f73f62
  403a22:	popf   
  403a23:	mov    bl,0x47
  403a25:	mov    cl,0x2a
  403a27:	adc    DWORD PTR [eax-0x9],edx
  403a2a:	lds    edx,FWORD PTR [edx]
  403a2c:	pop    ds
  403a2d:	adc    esp,edi
  403a2f:	mov    eax,ds:0x13778aa4
  403a34:	or     cl,BYTE PTR [edi]
  403a36:	jmp    0x403a75
  403a38:	pop    ebp
  403a39:	jmp    0x4303b86b
  403a3e:	jmp    0x403a45
  403a40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a41:	and    DWORD PTR [edi],ebp
  403a43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a44:	pusha  
  403a45:	jp     0x403aa8
  403a47:	mov    ds:0xdea35aa,al
  403a4c:	test   al,0x52
  403a4e:	(bad)  
  403a4f:	xchg   esp,eax
  403a50:	lahf   
  403a51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a52:	jecxz  0x403a1f
  403a54:	mov    bh,cl
  403a56:	lahf   
  403a57:	push   ss
  403a58:	fld    TBYTE PTR [ebp+eiz*2-0x50]
  403a5c:	adc    ah,BYTE PTR [edx]
  403a5e:	cmp    BYTE PTR [edx-0x3eaff2e4],0xd8
  403a65:	int    0x4c
  403a67:	in     eax,0x3a
  403a69:	mov    eax,0x8ca73bab
  403a6e:	sysexit 
  403a70:	(bad)  
  403a71:	mov    bl,0xe
  403a73:	repnz fld QWORD PTR [esi*1+0x11172eb3]
  403a7b:	test   al,0x74
  403a7d:	sub    DWORD PTR [eax],0xa54f43b1
  403a83:	adc    al,0xab
  403a85:	and    esp,DWORD PTR [eax]
  403a87:	inc    ecx
  403a88:	pop    eax
  403a89:	inc    cx
  403a8b:	arpl   bp,bx
  403a8d:	aas    
  403a8e:	and    BYTE PTR [ecx-0x4a96b48d],dh
  403a94:	mov    cl,0xce
  403a96:	cmc    
  403a97:	movhps xmm4,QWORD PTR [edi+ebp*1+0x680a9a86]
  403a9f:	dec    eax
  403aa0:	mov    ecx,0x96496311
  403aa5:	sbb    al,bl
  403aa7:	(bad)  
  403aa8:	push   ecx
  403aa9:	stc    
  403aaa:	scas   al,BYTE PTR es:[edi]
  403aab:	add    eax,0x665dfb3
  403ab0:	mov    WORD PTR [edx+0x599f9f6a],es
  403ab6:	lods   al,BYTE PTR ds:[esi]
  403ab7:	stos   BYTE PTR es:[edi],al
  403ab8:	test   DWORD PTR [ebp-0x10e39c0],esi
  403abe:	jns    0x403a8e
  403ac0:	mov    ds:0xfd25b333,eax
  403ac5:	fwait
  403ac6:	icebp  
  403ac7:	jb     0x403afa
  403ac9:	(bad)  
  403aca:	rol    ch,0x55
  403acd:	xor    al,0xe7
  403acf:	mov    DWORD PTR ds:0xd1ff6eef,esp
  403ad5:	inc    esp
  403ad6:	and    al,0x80
  403ad8:	sub    DWORD PTR [esi],eax
  403ada:	sub    DWORD PTR [esp+edx*8+0x7ea7fd98],edx
  403ae1:	xor    BYTE PTR [edx+0x57],0x1e
  403ae5:	push   DWORD PTR [edx]
  403ae7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ae8:	in     al,0x44
  403aea:	mov    ecx,0x6b94b2fb
  403aef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403af0:	data16 mov cx,0xc05a
  403af5:	(bad)  
  403af6:	xor    dh,BYTE PTR [edi-0x6b]
  403af9:	adc    al,0x9
  403afb:	ja     0x403b52
  403afd:	sbb    BYTE PTR [ebp+edi*1-0x5f37e1b1],dl
  403b04:	dec    ecx
  403b05:	mov    ss:0xe490c687,eax
  403b0b:	loope  0x403b42
  403b0d:	repnz push esi
  403b0f:	jns    0x403b0a
  403b11:	inc    edi
  403b12:	lods   eax,DWORD PTR ds:[esi]
  403b13:	mov    ch,0x4f
  403b15:	mov    BYTE PTR [edx+0x687f2890],bl
  403b1b:	mov    al,ds:0xd33ea707
  403b20:	test   BYTE PTR [ecx],ah
  403b22:	in     eax,0x9b
  403b24:	sub    eax,0x50d68e36
  403b29:	test   eax,0xf0a26352
  403b2e:	mov    es,esp
  403b30:	nop
  403b31:	ja     0x403b3d
  403b33:	mov    edi,0x18f856a0
  403b38:	in     eax,dx
  403b39:	sbb    DWORD PTR [esp+edi*8],eax
  403b3c:	bnd jne 0x403b83
  403b3f:	repnz cmp bl,0xe8
  403b43:	aas    
  403b44:	iret   
  403b45:	icebp  
  403b46:	xchg   ebp,eax
  403b47:	cmp    BYTE PTR [ecx],cl
  403b49:	push   ecx
  403b4a:	or     edx,eax
  403b4c:	sbb    al,0x75
  403b4e:	iret   
  403b4f:	into   
  403b50:	jmp    0x403b9a
  403b52:	cmp    ch,BYTE PTR [edx]
  403b54:	mov    ch,0x9f
  403b56:	mov    ecx,0xb9144574
  403b5b:	xor    al,0xcf
  403b5d:	stc    
  403b5e:	int3   
  403b5f:	sub    DWORD PTR [ebp+0x16],edi
  403b62:	inc    esp
  403b63:	scas   eax,DWORD PTR es:[edi]
  403b64:	gs jbe 0x403b2c
  403b67:	sti    
  403b68:	pop    ss
  403b69:	pop    ecx
  403b6a:	and    cl,BYTE PTR [eax]
  403b6c:	mov    dl,0xaf
  403b6e:	repz sub ecx,DWORD PTR [edx]
  403b71:	(bad)  
  403b72:	stos   DWORD PTR es:[edi],eax
  403b73:	push   0x75a3bf0d
  403b78:	enter  0x772,0xc5
  403b7c:	leave  
  403b7d:	adc    eax,edi
  403b7f:	not    esi
  403b81:	es ja  0x403be9
  403b84:	inc    DWORD PTR [ebp-0x1d]
  403b87:	push   0xffffffe2
  403b89:	scas   eax,DWORD PTR es:[edi]
  403b8a:	fs ja  0x403b73
  403b8d:	(bad)  
  403b8e:	clc    
  403b8f:	mov    bh,0xd3
  403b91:	mov    es,WORD PTR [esi]
  403b93:	and    BYTE PTR ss:[eax],dl
  403b96:	xchg   esi,eax
  403b97:	sbb    dh,BYTE PTR [esi-0x61279846]
  403b9d:	sub    eax,DWORD PTR [ecx+edi*4+0x17]
  403ba1:	mov    cl,0x36
  403ba3:	fst    QWORD PTR [ecx*8+0x31c669c6]
  403baa:	add    DWORD PTR [edi+eax*8+0x5fc6b789],edi
  403bb1:	pop    esi
  403bb2:	dec    edx
  403bb3:	scas   eax,DWORD PTR es:[edi]
  403bb4:	fistp  WORD PTR ds:0x68d25a92
  403bba:	mov    fs,ebp
  403bbc:	mov    edi,DWORD PTR [ebp+0x9918e40]
  403bc2:	gs leave 
  403bc4:	jg     0x403c3d
  403bc6:	repnz mov ah,0xe
  403bc9:	sti    
  403bca:	rcr    DWORD PTR [ebx+0x169a8d87],1
  403bd0:	push   eax
  403bd1:	mov    ebp,0xbe376ba5
  403bd6:	dec    eax
  403bd7:	adc    eax,0xc0104c10
  403bdc:	mov    ebp,0xa9bd8
  403be1:	jmp    0xcda1:0x452bfa11
  403be8:	mov    ebp,0xa0185c8a
  403bed:	data16 or ch,BYTE PTR [ecx+0x1e12c5ff]
  403bf4:	push   ss
  403bf5:	rcr    ecx,0x10
  403bf8:	mov    ds:0x20d14a26,al
  403bfd:	jne    0x403c72
  403bff:	inc    edx
  403c00:	(bad)  
  403c01:	aas    
  403c02:	or     al,0xd4
  403c04:	dec    esi
  403c05:	jl     0x403c27
  403c07:	test   BYTE PTR [ebx+0x71],ch
  403c0a:	test   eax,0x99c84e53
  403c0f:	fistp  WORD PTR [edx-0x34]
  403c12:	mov    ecx,0x5f1ffba8
  403c17:	imul   BYTE PTR [edx+0x76ff0a75]
  403c1d:	inc    eax
  403c1e:	pop    ds
  403c1f:	imul   esp,DWORD PTR [edx],0xa97d1b99
  403c25:	mov    ds:0x4ddfabae,eax
  403c2a:	cdq    
  403c2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c2c:	or     al,0xf6
  403c2e:	jmp    0x6a21:0xe1085818
  403c35:	ins    DWORD PTR es:[edi],dx
  403c36:	hlt    
  403c37:	add    cl,ah
  403c39:	mov    esi,0xf430799e
  403c3e:	jl     0x403ca7
  403c40:	push   esi
  403c41:	jno    0x403c59
  403c43:	rol    BYTE PTR [esi],cl
  403c45:	icebp  
  403c46:	mov    DWORD PTR [esi+0x571f327a],edx
  403c4c:	mov    eax,ds:0xa978f3a6
  403c51:	xor    al,0xae
  403c53:	inc    ecx
  403c54:	adc    eax,0xa499875e
  403c59:	sub    eax,0x402fa09
  403c5e:	call   0x6e0f:0x55a80180
  403c65:	in     al,0xf
  403c67:	pop    ebx
  403c68:	jbe    0x403cc3
  403c6a:	retf   
  403c6b:	daa    
  403c6c:	bswap  ebx
  403c6e:	sbb    DWORD PTR [edi+0x28],eax
  403c71:	ins    DWORD PTR es:[edi],dx
  403c72:	or     eax,DWORD PTR [ebx]
  403c74:	inc    esp
  403c75:	loopne 0x403cf5
  403c77:	je     0x7891c15
  403c7d:	dec    edi
  403c7e:	inc    esp
  403c7f:	in     eax,dx
  403c80:	mov    bh,0xab
  403c82:	and    ebp,DWORD PTR [eax-0x67]
  403c85:	adc    ch,BYTE PTR [esi]
  403c87:	je     0x403c83
  403c89:	movnti DWORD PTR [edx],esp
  403c8c:	and    BYTE PTR [ebp+0x19],cl
  403c8f:	les    ebp,FWORD PTR [ebx+0x8df29df]
  403c95:	or     eax,0x5a5b081f
  403c9a:	jne    0x403c9c
  403c9c:	jae    0x403d18
  403c9e:	jl     0x403ce1
  403ca0:	push   0x7f
  403ca2:	mov    dh,0x2d
  403ca4:	popf   
  403ca5:	mov    ebx,0x1d3cfc07
  403caa:	pop    es
  403cab:	sar    ah,cl
  403cad:	addr16 test al,ah
  403cb0:	push   esi
  403cb1:	retf   
  403cb2:	sahf   
  403cb3:	or     BYTE PTR [edi],al
  403cb5:	lods   eax,DWORD PTR ds:[esi]
  403cb6:	out    0x9a,al
  403cb8:	and    BYTE PTR [ebx],0x20
  403cbb:	xor    bl,BYTE PTR [ebx+ebx*4-0x3b973111]
  403cc2:	jecxz  0x403cb6
  403cc4:	fwait
  403cc5:	jge    0x403cfa
  403cc7:	xor    al,0xbd
  403cc9:	imul   esp,DWORD PTR [edx-0x4445394d],0xffffffb3
  403cd0:	outs   dx,BYTE PTR ds:[esi]
  403cd1:	jb     0x403c66
  403cd3:	fwait
  403cd4:	je     0x403c95
  403cd6:	push   es
  403cd7:	sub    ch,BYTE PTR [ecx+0x7b]
  403cda:	mov    al,0x1b
  403cdc:	jecxz  0x403c8f
  403cde:	int3   
  403cdf:	mov    edx,DWORD PTR [eax+0x3d]
  403ce2:	ja     0x403cb7
  403ce4:	iret   
  403ce5:	dec    ebx
  403ce6:	and    eax,0x950c4f77
  403ceb:	cmp    edx,DWORD PTR [ecx-0x65]
  403cee:	pop    ss
  403cef:	stc    
  403cf0:	inc    BYTE PTR [edx-0x2]
  403cf3:	aas    
  403cf4:	rcr    bh,0x8d
  403cf7:	ret    0xa3f
  403cfa:	cmc    
  403cfb:	shr    BYTE PTR [esi-0x3fd44c62],1
  403d01:	in     eax,dx
  403d02:	mov    bl,0x0
  403d04:	stos   BYTE PTR es:[edi],al
  403d05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d06:	test   eax,0xc06bb606
  403d0b:	jbe    0x403d36
  403d0d:	dec    ecx
  403d0e:	jmp    0x700c9d77
  403d13:	mov    dh,0x3c
  403d15:	out    dx,al
  403d16:	xchg   esi,eax
  403d17:	frstor [esi+0x707f9c29]
  403d1d:	fsubr  st,st(0)
  403d1f:	into   
  403d20:	mov    esi,0x3e45ee45
  403d25:	das    
  403d26:	enter  0xacfb,0x68
  403d2a:	dec    edx
  403d2b:	add    al,0x3f
  403d2d:	out    dx,eax
  403d2e:	test   eax,0xc8a13637
  403d33:	or     ah,BYTE PTR [eax+eax*2]
  403d36:	sub    ecx,edx
  403d38:	jl     0x403cf1
  403d3a:	icebp  
  403d3b:	jge    0x403cd4
  403d3d:	mov    esp,0x6a3fc80d
  403d42:	cwde   
  403d43:	or     al,0x73
  403d45:	and    DWORD PTR [edx+ebx*8],edx
  403d48:	cmp    BYTE PTR [ebx],bh
  403d4a:	in     eax,dx
  403d4b:	cmp    BYTE PTR [eax+eax*2],al
  403d4e:	lock jo 0x403d87
  403d51:	jmp    0x6497c681
  403d56:	arpl   WORD PTR [edi],si
  403d58:	cmp    dl,BYTE PTR [eax+edx*2]
  403d5b:	xor    DWORD PTR [ebx-0x8a63696],0xfffffff9
  403d62:	sar    BYTE PTR [esi+0x12fe0ca8],cl
  403d68:	ficomp WORD PTR [eax]
  403d6a:	sbb    al,0x8d
  403d6c:	and    bl,bh
  403d6e:	inc    edx
  403d6f:	sbb    eax,0x12be58bb
  403d74:	shl    DWORD PTR [ebx+0x2eb03257],cl
  403d7a:	sub    DWORD PTR [edx-0x7907930c],0xffffffeb
  403d81:	(bad)  
  403d82:	iret   
  403d83:	outs   dx,BYTE PTR ds:[esi]
  403d84:	retf   0xa9c0
  403d87:	inc    esp
  403d88:	xor    BYTE PTR [edi],0x6f
  403d8b:	xor    al,0x3a
  403d8d:	into   
  403d8e:	iret   
  403d8f:	adc    DWORD PTR [ebp+0x79],esi
  403d92:	add    edi,DWORD PTR [edx]
  403d94:	adc    BYTE PTR [esi+0x2e],ch
  403d97:	mov    esi,0x6631feea
  403d9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d9d:	mov    al,ds:0x5491a009
  403da2:	xchg   ebx,eax
  403da3:	adc    bh,BYTE PTR [ecx+eiz*8+0x74]
  403da7:	ins    BYTE PTR es:[edi],dx
  403da8:	sar    BYTE PTR [esi+0x9],cl
  403dab:	sub    edi,DWORD PTR [ebx+0x1ce1dd4d]
  403db1:	pop    es
  403db2:	(bad)  
  403db3:	mov    WORD PTR [ebp+eax*2+0x4d6ee308],?
  403dba:	daa    
  403dbb:	das    
  403dbc:	dec    edx
  403dbd:	lds    eax,FWORD PTR [ebp+ecx*1+0x42]
  403dc1:	or     al,0x5b
  403dc3:	mov    DWORD PTR [esi+0x1eac2ddb],esi
  403dc9:	sub    eax,0x1eef35ac
  403dce:	gs ins BYTE PTR es:[edi],dx
  403dd0:	int    0x2f
  403dd2:	mov    al,ds:0xcff0fa61
  403dd7:	call   0xd597acfb
  403ddc:	int3   
  403ddd:	pop    ss
  403dde:	dec    eax
  403ddf:	mov    cl,dh
  403de1:	(bad)  
  403de2:	jp     0x403e3e
  403de4:	xor    BYTE PTR [edi],cl
  403de6:	xchg   edx,eax
  403de7:	inc    ebx
  403de8:	jg     0x403e59
  403dea:	loopne 0x403dd0
  403dec:	xor    bl,BYTE PTR [edx+0x2a658e53]
  403df2:	in     al,dx
  403df3:	ins    BYTE PTR es:[edi],dx
  403df4:	inc    eax
  403df5:	cmp    BYTE PTR [edx+0x21fcf178],bh
  403dfb:	pop    ss
  403dfc:	jl     0x403dc5
  403dfe:	int    0x97
  403e00:	sub    ebp,esi
  403e02:	imul   ebp,esp,0xf35062ea
  403e08:	aas    
  403e09:	cmp    BYTE PTR [edi+0x78],0x8d
  403e0d:	lods   al,BYTE PTR ds:[esi]
  403e0e:	inc    ebp
  403e0f:	mov    ds:0x79006bb9,al
  403e14:	add    esp,DWORD PTR [esi+0x52984808]
  403e1a:	pop    ecx
  403e1b:	stc    
  403e1c:	test   DWORD PTR [edi-0x342d8699],edx
  403e22:	xchg   esi,eax
  403e23:	cmp    DWORD PTR [ecx],0xa69dc161
  403e29:	scas   al,BYTE PTR es:[edi]
  403e2a:	mov    bl,BYTE PTR [ebx+edx*2+0x79]
  403e2e:	or     eax,0xde045121
  403e33:	adc    al,0xed
  403e35:	retf   
  403e36:	mov    cl,0x5f
  403e38:	ret    
  403e39:	mov    edx,DWORD PTR es:[eax]
  403e3c:	mov    ch,0x53
  403e3e:	div    eax
  403e40:	xchg   ebp,eax
  403e41:	dec    ebx
  403e42:	xor    cl,ah
  403e44:	ret    
  403e45:	fisttp DWORD PTR [ebx+0x4651a48]
  403e4b:	inc    edx
  403e4c:	into   
  403e4d:	mov    ecx,0x9a314dbc
  403e52:	push   ebp
  403e53:	jne    0x403ea9
  403e55:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e57:	dec    edi
  403e58:	lods   al,BYTE PTR ds:[esi]
  403e59:	sbb    esp,DWORD PTR [edi+edi*2]
  403e5c:	sti    
  403e5d:	inc    ecx
  403e5e:	xchg   ecx,eax
  403e5f:	shr    BYTE PTR [ecx],0x87
  403e62:	xchg   esi,eax
  403e63:	push   ss
  403e64:	push   edx
  403e65:	retf   
  403e66:	add    al,0xa4
  403e68:	adc    BYTE PTR [bx+di],al
  403e6b:	std    
  403e6c:	lock jp 0x403e28
  403e6f:	fcomi  st,st(5)
  403e71:	sub    al,0x37
  403e73:	ja     0x403e39
  403e75:	pushf  
  403e76:	jne    0x403e75
  403e78:	stc    
  403e79:	icebp  
  403e7a:	ds push edi
  403e7c:	sbb    edi,esi
  403e7e:	ins    DWORD PTR es:[edi],dx
  403e7f:	push   esi
  403e80:	fisttp QWORD PTR [edx]
  403e82:	and    DWORD PTR [ecx-0xd],ecx
  403e85:	rol    DWORD PTR [edx+0x574f8695],0x3d
  403e8c:	sbb    al,0xbd
  403e8e:	sub    al,0xa0
  403e90:	dec    BYTE PTR [ebx+ecx*2]
  403e93:	mov    al,0x39
  403e95:	out    dx,al
  403e96:	or     DWORD PTR [ebp-0x57],esp
  403e99:	add    esp,DWORD PTR [ecx-0x6bb2cadf]
  403e9f:	mov    ecx,DWORD PTR [esp+eax*2+0x7c]
  403ea3:	sub    DWORD PTR [edi],ebp
  403ea5:	jnp    0x403e56
  403ea7:	sti    
  403ea8:	loopne 0x403e54
  403eaa:	iret   
  403eab:	jnp    0x403f17
  403ead:	jne    0x403ebf
  403eaf:	fisttp WORD PTR [esi+0x2e]
  403eb2:	ds or  eax,0x220f42a6
  403eb8:	retf   
  403eb9:	sub    eax,0x32d18bf5
  403ebe:	std    
  403ebf:	jge    0x403ec4
  403ec1:	fisubr DWORD PTR [edi]
  403ec3:	addr16 into 
  403ec5:	or     bh,BYTE PTR [ebx+ebx*4-0x70]
  403ec9:	mov    ebp,0xc037ebca
  403ece:	mov    ah,0xbe
  403ed0:	sbb    DWORD PTR [ecx],eax
  403ed2:	inc    edi
  403ed3:	dec    DWORD PTR [edi]
  403ed5:	aaa    
  403ed6:	retf   0x31ea
  403ed9:	cmc    
  403eda:	dec    ebp
  403edb:	jne    0x403f46
  403edd:	mov    cl,0xbc
  403edf:	cmc    
  403ee0:	cwde   
  403ee1:	xchg   ecx,eax
  403ee2:	out    dx,eax
  403ee3:	mov    dl,0x2b
  403ee5:	repnz and al,0x68
  403ee8:	fwait
  403ee9:	pop    esp
  403eea:	in     al,0x1e
  403eec:	adc    eax,DWORD PTR [ecx]
  403eee:	dec    esp
  403eef:	jmp    0xe444:0x20381b86
  403ef6:	adc    DWORD PTR [ecx+0x586e3d6d],esp
  403efc:	xlat   BYTE PTR ds:[ebx]
  403efd:	(bad)  
  403efe:	das    
  403eff:	pop    esi
  403f00:	cld    
  403f01:	jae    0x403f27
  403f03:	push   cs
  403f04:	jae    0x403f65
  403f06:	xchg   esi,eax
  403f07:	ds sahf 
  403f09:	aam    0x2a
  403f0b:	and    esi,DWORD PTR [ecx]
  403f0d:	inc    ecx
  403f0e:	push   eax
  403f0f:	mov    ebx,0xd50857a1
  403f14:	sbb    BYTE PTR [ecx-0x37],bh
  403f17:	dec    ecx
  403f18:	xchg   esp,eax
  403f19:	push   ebp
  403f1a:	sbb    eax,0xa195b073
  403f1f:	mov    al,ds:0x456e9542
  403f24:	cli    
  403f25:	and    DWORD PTR [ebx+eax*1+0x6d25489],0xffffffc4
  403f2d:	mov    ss,esi
  403f2f:	iret   
  403f30:	retf   
  403f31:	(bad)  [eax-0x651bdd62]
  403f37:	xlat   BYTE PTR ds:[ebx]
  403f38:	xor    al,0xbb
  403f3a:	jmp    0x3f9f:0x1d3f923b
  403f41:	push   0xfffffff2
  403f43:	sbb    ah,BYTE PTR [ecx]
  403f45:	ret    0x5d2e
  403f48:	and    al,0x23
  403f4a:	out    0xcd,al
  403f4c:	stos   DWORD PTR es:[edi],eax
  403f4d:	rcl    DWORD PTR [ebx+0x50],cl
  403f50:	pushf  
  403f51:	push   edi
  403f52:	mov    ebx,0x4e9736f8
  403f57:	aaa    
  403f58:	push   es
  403f59:	or     edx,ebx
  403f5b:	sbb    edi,ebx
  403f5d:	ins    DWORD PTR es:[edi],dx
  403f5e:	(bad)  
  403f5f:	ins    DWORD PTR es:[edi],dx
  403f60:	adc    bh,0x75
  403f63:	cld    
  403f64:	mov    edx,0xbfa6b214
  403f69:	push   edi
  403f6a:	or     eax,DWORD PTR [esi+0xd8a525e]
  403f70:	adc    dl,bl
  403f72:	xchg   ebp,eax
  403f73:	aaa    
  403f74:	popf   
  403f75:	jp     0x403fea
  403f77:	adc    dh,bh
  403f79:	ins    DWORD PTR es:[edi],dx
  403f7a:	xchg   ecx,eax
  403f7b:	into   
  403f7c:	mov    ch,0x9f
  403f7e:	pop    esp
  403f7f:	outs   dx,DWORD PTR ds:[esi]
  403f80:	pop    ebp
  403f81:	mul    BYTE PTR [eax]
  403f83:	xor    al,0x89
  403f85:	sti    
  403f86:	lds    esp,FWORD PTR [esi+0x6c2bc55c]
  403f8c:	jge    0x403f73
  403f8e:	outs   dx,DWORD PTR ds:[esi]
  403f8f:	inc    esp
  403f90:	cwde   
  403f91:	jle    0x403faf
  403f93:	xchg   esp,eax
  403f94:	inc    eax
  403f95:	(bad)
  403f98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f99:	dec    edi
  403f9a:	out    dx,al
  403f9b:	sub    esp,DWORD PTR [eax+0x768810ab]
  403fa1:	(bad)
  403fa4:	push   es
  403fa5:	jbe    0x403faa
  403fa7:	xlat   BYTE PTR ds:[ebx]
  403fa8:	pushf  
  403fa9:	jbe    0x403f53
  403fab:	jno    0x403f37
  403fad:	dec    esi
  403fae:	icebp  
  403faf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fb0:	jno    0x403fc3
  403fb2:	mov    eax,ds:0xc79c3ea6
  403fb7:	sti    
  403fb8:	sahf   
  403fb9:	mov    ds:0x2e019364,al
  403fbe:	retf   0x582d
  403fc1:	out    dx,eax
  403fc2:	popa   
  403fc3:	pop    edx
  403fc4:	push   ebp
  403fc5:	mov    edi,DWORD PTR [eax+0x5a667e99]
  403fcb:	lds    ebx,FWORD PTR [esi+0x5f]
  403fce:	aas    
  403fcf:	fsubr  QWORD PTR [eax-0x7e0cd016]
  403fd5:	leave  
  403fd6:	pop    ds
  403fd7:	sbb    DWORD PTR [ebp+ecx*8-0x38],esi
  403fdb:	cdq    
  403fdc:	icebp  
  403fdd:	mov    fs,edi
  403fdf:	jae    0x404012
  403fe1:	push   eax
  403fe2:	out    dx,eax
  403fe3:	mov    esp,0x24dba2ac
  403fe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fe9:	xor    al,0x9d
  403feb:	pop    es
  403fec:	mov    esi,0x9c2c167b
  403ff1:	out    dx,al
  403ff2:	inc    ebx
  403ff3:	icebp  
  403ff4:	add    bl,BYTE PTR [esp]
  403ff7:	imul   edi,DWORD PTR cs:[edi-0x512b8157],0xffffff95
  403fff:	cwde   
  404000:	ins    BYTE PTR es:[edi],dx
  404001:	push   ecx
  404002:	fcmove st,st(0)
  404004:	repz fisub WORD PTR [ebx-0x48c84aa6]
  40400b:	daa    
  40400c:	and    eax,0x8a02a534
  404011:	xchg   edi,eax
  404012:	jnp    0x40406e
  404014:	data16 sub dl,bl
  404017:	adc    DWORD PTR [ecx+edx*8],eax
  40401a:	test   DWORD PTR [edx],0x35c8fa4d
  404020:	jmp    0xe760:0x524a26ef
  404027:	dec    edi
  404028:	cmp    DWORD PTR [ebp-0x2bc15113],edi
  40402e:	jmp    0x61fa:0xdd17db54
  404035:	(bad)  [ebx]
  404037:	gs out 0x12,al
  40403a:	push   ds
  40403b:	outs   dx,DWORD PTR ds:[esi]
  40403c:	dec    ecx
  40403d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40403e:	pop    ss
  40403f:	sbb    dl,BYTE PTR [ebp+0x27]
  404042:	jl     0x4040bf
  404044:	cmp    BYTE PTR [esi],ch
  404046:	push   0x6f1d13d5
  40404b:	lahf   
  40404c:	xchg   ecx,eax
  40404d:	adc    eax,0xed331ca9
  404052:	push   ebx
  404053:	or     BYTE PTR [edx-0x73],ah
  404056:	nop
  404057:	adc    al,0xb
  404059:	sub    ebx,edi
  40405b:	loopne 0x40405e
  40405d:	mov    gs,WORD PTR [ebx]
  40405f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404060:	mov    edx,?
  404062:	pushf  
  404063:	sbb    DWORD PTR [ebx],0xffffffe6
  404066:	jne    0x404008
  404068:	rol    BYTE PTR [edx-0x3],cl
  40406b:	mov    al,0x50
  40406d:	pop    ds
  40406e:	push   ecx
  40406f:	jmp    0x4040b3
  404071:	lods   eax,DWORD PTR ds:[esi]
  404072:	push   esp
  404073:	shl    DWORD PTR [edi-0x6d487c8d],cl
  404079:	xchg   edi,eax
  40407a:	fimul  DWORD PTR [esi-0x5c]
  40407d:	out    dx,al
  40407e:	pop    esp
  40407f:	bound  ebp,QWORD PTR [edi]
  404081:	aad    0x2b
  404083:	inc    eax
  404084:	xor    DWORD PTR [edx],edx
  404086:	dec    ebx
  404087:	ss int 0x1b
  40408a:	cmp    BYTE PTR [ecx],bl
  40408c:	fldcw  WORD PTR [esi+0x3957d67a]
  404092:	imul   BYTE PTR ds:0x240ef825
  404098:	inc    edx
  404099:	retf   
  40409a:	and    BYTE PTR [edi-0x11b57d5b],dh
  4040a0:	add    dh,dl
  4040a2:	mov    fs,WORD PTR [edi+0x1e]
  4040a5:	jmp    DWORD PTR [edi+0x34f8f018]
  4040ab:	push   ebp
  4040ac:	fdiv   st,st(0)
  4040ae:	inc    esi
  4040af:	push   esp
  4040b0:	cld    
  4040b1:	pop    edi
  4040b2:	imul   esp,DWORD PTR [ecx-0x14],0x46
  4040b6:	call   0x313c:0xe4470cb0
  4040bd:	xor    eax,0x608c3702
  4040c2:	mov    ch,BYTE PTR gs:[ebx-0x1f]
  4040c6:	dec    ecx
  4040c7:	fmul   QWORD PTR [edx+0x44]
  4040ca:	lahf   
  4040cb:	mov    al,ds:0x46a1c0b4
  4040d0:	jns    0x40407b
  4040d2:	clc    
  4040d3:	push   ss
  4040d4:	lods   eax,DWORD PTR ds:[esi]
  4040d5:	(bad)  
  4040d6:	dec    esi
  4040d7:	inc    edi
  4040d8:	inc    ecx
  4040d9:	fcomp  DWORD PTR [ebx+0x1a4c1cfc]
  4040df:	push   0xd18242c9
  4040e4:	cmp    DWORD PTR [ebp+eax*8-0x70],esi
  4040e8:	mov    BYTE PTR [ebx],bh
  4040ea:	mov    edi,0x515d08a3
  4040ef:	inc    ebx
  4040f0:	sbb    cl,ch
  4040f2:	xchg   edx,eax
  4040f3:	mov    esi,0x9455503c
  4040f8:	cwde   
  4040f9:	jo     0x4040f9
  4040fb:	push   ebx
  4040fc:	adc    DWORD PTR [eax-0x5b],ebp
  4040ff:	in     al,0xf5
  404101:	mov    cl,BYTE PTR [ebp+0x35]
  404104:	xor    BYTE PTR [ebp+0x6991a680],dh
  40410a:	repnz retf 0x5f07
  40410e:	mov    gs,esi
  404110:	mov    dl,0x62
  404112:	pusha  
  404113:	or     eax,DWORD PTR [ebp+0x5b]
  404116:	in     al,0x90
  404118:	mov    ah,bl
  40411a:	cmp    cl,dl
  40411c:	dec    ebx
  40411d:	cmc    
  40411e:	push   ebp
  40411f:	jnp    0x40412b
  404121:	mov    ebp,0xf7fdfcb5
  404126:	fisttp QWORD PTR [ebx-0x7ff3543b]
  40412c:	cmp    eax,0xab4af950
  404131:	cmp    BYTE PTR [eax],dl
  404133:	sbb    DWORD PTR [edi-0x3],ebp
  404136:	pop    ecx
  404137:	test   al,0x64
  404139:	jb     0x404139
  40413b:	push   eax
  40413c:	ja     0x40411f
  40413e:	and    DWORD PTR [esi-0x2d],edi
  404141:	inc    edx
  404142:	call   0x981f:0x7b421171
  404149:	ret    0xd829
  40414c:	mov    eax,0x9d10ad2a
  404151:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404152:	inc    edi
  404153:	pop    esi
  404154:	sbb    ah,0xa
  404157:	push   cs
  404158:	pop    edx
  404159:	or     cl,BYTE PTR [esi]
  40415b:	mov    ss,WORD PTR ds:0x4c236ec7
  404161:	mov    al,0x35
  404163:	into   
  404164:	and    DWORD PTR [esi+0x66],ecx
  404167:	test   eax,0xdefcbf5c
  40416c:	sub    edi,DWORD PTR [ecx]
  40416e:	jl     0x4041eb
  404170:	push   es
  404171:	ds jb  0x4041b7
  404174:	ss sub dh,dl
  404177:	call   0xe19801e4
  40417c:	lods   al,BYTE PTR ds:[esi]
  40417d:	shl    DWORD PTR [ecx+0x601206f5],1
  404183:	jbe    0x4041f5
  404185:	je     0x4041e8
  404187:	mov    ds:0x52c8e376,al
  40418c:	fstp   DWORD PTR [edx+0x6a]
  40418f:	mov    al,cl
  404191:	out    0x6,al
  404193:	cs pop edi
  404195:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404196:	pushf  
  404197:	(bad)  
  404198:	or     al,0x10
  40419a:	xor    DWORD PTR [eax-0x48b63457],ecx
  4041a0:	or     al,0xe8
  4041a2:	or     BYTE PTR [ebx],dl
  4041a4:	add    al,0x4a
  4041a6:	mov    cl,0x2c
  4041a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041a9:	sahf   
  4041aa:	jmp    0xdca53c44
  4041af:	xchg   esp,eax
  4041b0:	ds push ebx
  4041b2:	test   BYTE PTR [edx-0x3acfcd3f],bh
  4041b8:	fwait
  4041b9:	hlt    
  4041ba:	loopne 0x4041eb
  4041bc:	stc    
  4041bd:	enter  0x5cef,0xf
  4041c1:	mov    cl,0x93
  4041c3:	jo     0x4041e7
  4041c5:	mov    ds:0xb85986fa,eax
  4041ca:	xor    al,0x6
  4041cc:	dec    ebx
  4041cd:	or     DWORD PTR [ecx-0x4b018c95],edi
  4041d3:	fist   WORD PTR [ecx]
  4041d5:	pop    ebp
  4041d6:	lock sub DWORD PTR [edi],ecx
  4041d9:	push   ebx
  4041da:	pop    esp
  4041db:	out    0x26,eax
  4041dd:	cmp    DWORD PTR [ebx-0x38],edx
  4041e0:	adc    BYTE PTR ds:0xaf4a3577,0xf2
  4041e7:	out    dx,al
  4041e8:	cs mov ecx,0x9e5b3ec5
  4041ee:	or     DWORD PTR [edx],esp
  4041f0:	push   eax
  4041f1:	xchg   esi,eax
  4041f2:	aam    0x49
  4041f4:	mov    ebp,DWORD PTR [esi]
  4041f6:	gs pop ebp
  4041f8:	inc    esp
  4041f9:	adc    esp,esi
  4041fb:	push   edi
  4041fc:	mov    ds:0xf4c5b55e,al
  404201:	xor    DWORD PTR [edx],ebp
  404203:	xor    eax,0x4e1744a1
  404208:	xchg   BYTE PTR [ebp-0x39d5ff5a],dl
  40420e:	pop    esp
  40420f:	mov    dh,0x43
  404211:	sti    
  404212:	ins    DWORD PTR es:[edi],dx
  404213:	call   0x15a85189
  404218:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404219:	sahf   
  40421a:	push   esp
  40421b:	xchg   DWORD PTR [esi],ecx
  40421d:	jl     0x404287
  40421f:	aad    0xc5
  404221:	ficomp WORD PTR [ecx+0x5f]
  404224:	gs in  eax,dx
  404226:	ins    BYTE PTR es:[edi],dx
  404227:	test   eax,0x795b9ccb
  40422c:	and    DWORD PTR [ebx+0x5b80d263],esp
  404232:	sbb    cl,BYTE PTR [edi-0x2c5765a2]
  404238:	(bad)  
  404239:	xor    esi,DWORD PTR [esi-0x31]
  40423c:	cmp    al,0x69
  40423e:	push   ss
  40423f:	(bad)  
  404240:	loopne 0x404206
  404242:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404243:	xchg   ebx,eax
  404244:	jp     0x40421e
  404246:	call   0x1ce0:0x1ae79efb
  40424d:	push   0x2c
  40424f:	sbb    eax,0x92854a3
  404254:	xchg   esi,eax
  404255:	pop    ecx
  404256:	mov    edi,0xbba5251f
  40425b:	mov    dl,bl
  40425d:	in     eax,0x9c
  40425f:	pop    ebp
  404260:	(bad)  
  404261:	(bad)  
  404262:	dec    edx
  404263:	dec    ecx
  404264:	cld    
  404265:	imul   edi,ebx,0xffffff83
  404268:	xchg   DWORD PTR [eax-0x28176384],edx
  40426e:	cmp    ebx,DWORD PTR [eax+0xaa26d76]
  404274:	add    dl,dl
  404276:	and    al,0x83
  404278:	pusha  
  404279:	mov    ah,0xef
  40427b:	fsubr  st,st(0)
  40427d:	lea    ebx,[ebx+0x5b8c79d1]
  404283:	inc    eax
  404284:	es cld 
  404286:	not    DWORD PTR [ecx+0x46b40947]
  40428c:	test   eax,0xdfbcb42b
  404291:	aaa    
  404292:	lods   eax,DWORD PTR ds:[esi]
  404293:	repz mov al,0xe8
  404296:	xor    al,0x77
  404298:	cwde   
  404299:	mov    ds:0x1525b0ed,eax
  40429e:	popf   
  40429f:	hlt    
  4042a0:	iret   
  4042a1:	dec    ebx
  4042a2:	sbb    eax,0x55bd6506
  4042a7:	aam    0x67
  4042a9:	mov    dl,0xe1
  4042ab:	sub    bl,BYTE PTR [eax]
  4042ad:	sbb    al,0x81
  4042af:	jecxz  0x404292
  4042b1:	in     eax,dx
  4042b2:	call   0xf3eaf0cd
  4042b7:	adc    eax,0x71a05b76
  4042bc:	pop    es
  4042bd:	leave  
  4042be:	jmp    0xdabf:0x4421834d
  4042c5:	lea    edi,[eax+ebp*8]
  4042c8:	and    DWORD PTR [ebp-0x39f05d5f],esi
  4042ce:	mov    bh,0xcc
  4042d0:	(bad)
  4042d3:	and    DWORD PTR [ecx-0x37],edi
  4042d6:	icebp  
  4042d7:	loop   0x4042d1
  4042d9:	leave  
  4042da:	in     eax,0x6a
  4042dc:	in     eax,0x1d
  4042de:	(bad)  
  4042df:	loop   0x40434d
  4042e1:	stos   BYTE PTR es:[edi],al
  4042e2:	mov    esi,ds
  4042e4:	xchg   esp,eax
  4042e5:	aas    
  4042e6:	add    DWORD PTR [esi-0x23039ac2],ebx
  4042ec:	mov    edi,ss
  4042ee:	pop    ecx
  4042ef:	xchg   edi,eax
  4042f0:	test   al,0xc8
  4042f2:	cmp    al,0x1f
  4042f4:	pop    esp
  4042f5:	out    0x95,al
  4042f7:	ds stos DWORD PTR es:[edi],eax
  4042f9:	adc    ebp,esp
  4042fb:	int3   
  4042fc:	push   ecx
  4042fd:	out    0xf8,al
  4042ff:	imul   edi,DWORD PTR [esi],0xaedb3d8a
  404305:	sub    BYTE PTR [ecx+esi*8+0x49],bl
  404309:	je     0x404362
  40430b:	nop
  40430c:	add    al,0xcb
  40430e:	and    edi,DWORD PTR [ecx-0x5c]
  404311:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404312:	xor    ah,dl
  404314:	mov    ebx,DWORD PTR [eax+0x576f12a3]
  40431a:	or     al,0xdb
  40431c:	imul   edx,DWORD PTR ds:0xc6debccd,0x1102e30e
  404326:	arpl   WORD PTR [ecx],sp
  404328:	adc    DWORD PTR [ebx],edi
  40432a:	loopne 0x404300
  40432c:	inc    esi
  40432d:	in     al,dx
  40432e:	adc    BYTE PTR [ebp-0x43],ch
  404331:	imul   esi,DWORD PTR [ebp+0x330f5015],0x41ad7b0
  40433b:	pop    esp
  40433c:	mov    dl,0x70
  40433e:	dec    ecx
  40433f:	mov    ecx,0xb4c99651
  404344:	js     0x4043be
  404346:	loope  0x4042fc
  404348:	mov    ds:0x9b9a67c9,eax
  40434d:	sub    esi,DWORD PTR [edx-0x77]
  404350:	jnp    0x4042e2
  404352:	(bad)  
  404353:	pop    esp
  404354:	sbb    al,0xab
  404356:	xor    al,BYTE PTR ds:0x4d2f3d32
  40435c:	jl     0x40431f
  40435e:	hlt    
  40435f:	push   esp
  404360:	add    dl,BYTE PTR [edi]
  404362:	shr    BYTE PTR [eax],1
  404364:	repnz inc eax
  404366:	jmp    0xe7a9:0x84518f2
  40436d:	mov    al,0xdb
  40436f:	xchg   ebp,eax
  404370:	mov    eax,0x4f4f64a8
  404375:	test   eax,0xcdc4e3ec
  40437a:	xor    ebp,esi
  40437c:	mov    ebp,0x77c5ab96
  404381:	pshufw mm0,QWORD PTR [eax+0x1045b9c4],0x28
  404389:	push   edi
  40438a:	int    0xae
  40438c:	xchg   edi,eax
  40438d:	mov    esp,0x5df6f573
  404392:	dec    esp
  404393:	fnsave [ecx]
  404395:	and    al,0x21
  404397:	mov    esp,0xa72e9c99
  40439c:	div    DWORD PTR [ebp-0x37]
  40439f:	or     eax,0x3b9a9733
  4043a4:	ret    
  4043a5:	fdivr  QWORD PTR [edi+0x7d]
  4043a8:	(bad)  [eax-0x7248ed71]
  4043ae:	stc    
  4043af:	or     al,0x3c
  4043b1:	retf   0xf936
  4043b4:	push   esi
  4043b5:	add    al,0x89
  4043b7:	fprem1 
  4043b9:	xor    eax,DWORD PTR [edi-0x13c145be]
  4043bf:	add    al,0x8a
  4043c1:	jp     0x4043de
  4043c3:	shr    BYTE PTR [ebp+edi*1-0x37],cl
  4043c7:	jo     0x40436e
  4043c9:	pop    edx
  4043ca:	hlt    
  4043cb:	cs jno 0x404411
  4043ce:	inc    esp
  4043cf:	xchg   edi,eax
  4043d0:	aas    
  4043d1:	xor    edi,DWORD PTR [edx+0x8f98224]
  4043d7:	imul   ebx,edi,0xffffffd6
  4043da:	ins    BYTE PTR es:[edi],dx
  4043db:	push   ebx
  4043dc:	lock push esi
  4043de:	cwde   
  4043df:	dec    esi
  4043e0:	push   cs
  4043e1:	in     al,dx
  4043e2:	call   DWORD PTR [edi-0x1e5a1ff9]
  4043e8:	pop    esp
  4043e9:	cwde   
  4043ea:	fsub   DWORD PTR [esi]
  4043ec:	push   ss
  4043ed:	loop   0x4043bf
  4043ef:	addr16 jbe 0x4043fb
  4043f2:	call   0xd027:0x7f8dfe49
  4043f9:	test   DWORD PTR [edx+0x4c],ebp
  4043fc:	div    DWORD PTR [esi+ecx*2+0x77]
  404400:	stos   BYTE PTR es:[edi],al
  404401:	add    ah,dh
  404403:	cli    
  404404:	push   0x3d
  404406:	lds    edi,FWORD PTR [edx-0x10]
  404409:	mov    cl,0x87
  40440b:	shr    DWORD PTR [edi],1
  40440d:	xor    al,0x7
  40440f:	mov    esi,0x81c9b3db
  404414:	repnz rcr BYTE PTR [ebp-0x299f9a7f],cl
  40441b:	adc    DWORD PTR [ebx],edi
  40441d:	shr    BYTE PTR [edi-0x67],1
  404420:	pop    ds
  404421:	fs jecxz 0x40443e
  404424:	cmp    eax,DWORD PTR [ebx-0xd]
  404427:	nop
  404428:	add    eax,0xf4cc552d
  40442d:	and    eax,0x268e4f38
  404432:	cmp    ecx,ebp
  404434:	or     eax,0xb13f4054
  404439:	stos   DWORD PTR es:[edi],eax
  40443a:	xchg   BYTE PTR [ebp+0x5c667771],bl
  404440:	lods   al,BYTE PTR ds:[esi]
  404441:	sbb    ecx,DWORD PTR [eax+0x5462a98c]
  404447:	out    0x3f,eax
  404449:	mov    edi,0x1aa0ed3f
  40444e:	out    dx,eax
  40444f:	leave  
  404450:	cmp    bh,ah
  404452:	dec    eax
  404453:	(bad)  
  404454:	cdq    
  404455:	scas   eax,DWORD PTR es:[edi]
  404456:	arpl   WORD PTR ds:[edx],dx
  404459:	cmp    eax,0x76354e35
  40445e:	cmp    DWORD PTR [esi-0x6e],ebp
  404461:	call   0x20b4b244
  404466:	test   DWORD PTR [esi-0x2a411bd3],eax
  40446c:	mov    ecx,0x2a283e85
  404471:	mov    ds:0xbb63bc4f,eax
  404476:	and    dh,ah
  404478:	and    DWORD PTR [ebx+0x6d413fd6],0x5c20cb45
  404482:	mov    ch,0x57
  404484:	cmp    eax,0x3cdf0997
  404489:	or     BYTE PTR [edx-0x80],bh
  40448c:	sbb    ebp,DWORD PTR [ebx-0x18]
  40448f:	loope  0x404469
  404491:	pop    ebp
  404492:	adc    eax,DWORD PTR [ebx-0x67]
  404495:	cmp    eax,0xec30abee
  40449a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40449b:	push   ecx
  40449c:	push   ebx
  40449d:	in     al,dx
  40449e:	fmul   DWORD PTR [ebx+ebp*1-0x39]
  4044a2:	dec    eax
  4044a3:	cmp    dl,BYTE PTR [eax-0x7b69f2b9]
  4044a9:	retf   0x2b20
  4044ac:	inc    ebx
  4044ad:	jp     0x40450c
  4044af:	arpl   WORD PTR [ebx+0x61a1b6ab],cx
  4044b5:	pushf  
  4044b6:	add    DWORD PTR [edi+esi*4],esi
  4044b9:	and    dl,BYTE PTR [edi]
  4044bb:	loop   0x40452e
  4044bd:	scas   eax,DWORD PTR es:[edi]
  4044be:	jo     0x40449f
  4044c0:	jae    0x404487
  4044c2:	mov    ds:0x9a1f7a22,eax
  4044c7:	add    BYTE PTR [ebx-0x37],cl
  4044ca:	push   ds
  4044cb:	sbb    al,0x75
  4044cd:	jmp    0x40445b
  4044cf:	add    eax,0x455099c
  4044d4:	sub    eax,DWORD PTR [esi]
  4044d6:	(bad)  
  4044d7:	xchg   edx,eax
  4044d8:	mov    al,ds:0xd467759a
  4044dd:	mov    ch,0xc3
  4044df:	mov    esi,0x674814f
  4044e4:	aaa    
  4044e5:	pop    ebp
  4044e6:	clc    
  4044e7:	fwait
  4044e8:	leave  
  4044e9:	rcr    BYTE PTR [ecx-0x3f],cl
  4044ec:	popf   
  4044ed:	add    ebp,DWORD PTR [esi+0x42]
  4044f0:	enter  0x8e2d,0x8d
  4044f4:	add    dl,BYTE PTR [eax-0x323ab2bb]
  4044fa:	icebp  
  4044fb:	pusha  
  4044fc:	inc    eax
  4044fd:	int3   
  4044fe:	inc    edx
  4044ff:	das    
  404500:	mov    DWORD PTR [eax+0x1ffbf8b1],ebx
  404506:	add    DWORD PTR [ebx],0x3c
  404509:	(bad)  
  40450b:	(bad)  
  40450c:	fsubr  QWORD PTR [edx-0x7b]
  40450f:	xor    al,0xe4
  404511:	push   0x31
  404513:	sbb    BYTE PTR [eax+0xb64479d],dh
  404519:	adc    esi,DWORD PTR [eax]
  40451b:	jno    0x404551
  40451d:	jbe    0x40455b
  40451f:	out    0x40,eax
  404521:	imul   ebp
  404523:	mov    dh,0x7c
  404525:	or     al,0xd2
  404527:	xchg   esp,eax
  404528:	inc    esi
  404529:	mov    ah,0x7f
  40452b:	sub    bl,bl
  40452d:	or     eax,0x34b7acaa
  404532:	mov    dl,0xe7
  404534:	xlat   BYTE PTR ds:[ebx]
  404535:	jns    0x404591
  404537:	mov    al,ds:0x3387927a
  40453c:	xor    DWORD PTR [eax+0x3592819c],esp
  404542:	and    BYTE PTR [ebp-0x5bbace7d],0x17
  404549:	and    al,0x77
  40454b:	popf   
  40454c:	mov    ah,0x39
  40454e:	aaa    
  40454f:	or     ecx,ebp
  404551:	jae    0x404522
  404553:	imul   eax,DWORD PTR [ecx-0x6a4b8a8b],0x44
  40455a:	inc    ebp
  40455b:	lods   eax,DWORD PTR ds:[esi]
  40455c:	inc    edx
  40455d:	int    0x2
  40455f:	mov    esi,0x72915ae7
  404564:	jno    0x404503
  404566:	dec    ebx
  404567:	dec    esi
  404568:	shr    DWORD PTR [ecx-0x6ed57c70],1
  40456e:	add    al,0xaf
  404570:	or     ah,bh
  404572:	in     eax,dx
  404573:	sbb    BYTE PTR [esi+ecx*4+0x8d6d098],bh
  40457a:	sbb    ebx,DWORD PTR [ebx+eiz*8-0x1969dc84]
  404581:	(bad)  
  404582:	ins    BYTE PTR es:[edi],dx
  404583:	mov    bh,al
  404585:	xchg   edx,eax
  404586:	scas   eax,DWORD PTR es:[di]
  404588:	retf   0xb6ec
  40458b:	test   eax,0xe9c4b906
  404590:	xchg   esi,eax
  404591:	push   edx
  404592:	add    dh,BYTE PTR [eax+ecx*8-0x2a]
  404596:	out    dx,al
  404597:	jns    0x404581
  404599:	jno    0x40456c
  40459b:	sysenter 
  40459d:	in     al,0x7a
  40459f:	cld    
  4045a0:	mov    ch,bl
  4045a2:	xor    ebp,ecx
  4045a4:	xchg   esp,eax
  4045a5:	mov    eax,ebp
  4045a7:	lahf   
  4045a8:	popa   
  4045a9:	xor    edi,DWORD PTR [ecx+eax*4-0x6a91a8ed]
  4045b0:	pop    ss
  4045b1:	or     DWORD PTR [ebx],ebx
  4045b3:	pop    ebx
  4045b4:	inc    ecx
  4045b5:	out    dx,eax
  4045b6:	sar    DWORD PTR [ebx-0x14885d5],0xd9
  4045bd:	mov    ecx,0x574e8c70
  4045c2:	ds mov bh,0x16
  4045c5:	xor    DWORD PTR [esi],ecx
  4045c7:	outs   dx,DWORD PTR ds:[esi]
  4045c8:	aas    
  4045c9:	jnp    0x4045a0
  4045cb:	shl    DWORD PTR ds:0xf72b3aa3,1
  4045d1:	mov    es,WORD PTR [ebp+0x3]
  4045d4:	push   0xffffffeb
  4045d6:	bound  ebp,QWORD PTR [edi-0x72]
  4045d9:	stos   BYTE PTR es:[edi],al
  4045da:	in     eax,dx
  4045db:	and    ah,BYTE PTR [edx]
  4045dd:	lds    esp,FWORD PTR [edx+0x5f408725]
  4045e3:	xor    dh,cl
  4045e5:	dec    esp
  4045e6:	push   ecx
  4045e7:	push   cs
  4045e8:	mov    WORD PTR [edx+0x59],ds
  4045eb:	cmp    BYTE PTR [ebx],0x70
  4045ee:	pop    edi
  4045ef:	popf   
  4045f0:	pushf  
  4045f1:	jne    0x404601
  4045f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045f4:	mov    dl,0x5e
  4045f6:	mov    eax,ds:0x16826c96
  4045fb:	pop    ecx
  4045fc:	enter  0x6305,0x5e
  404600:	pop    esp
  404601:	popf   
  404602:	cmp    bh,BYTE PTR [esi-0x7e]
  404605:	and    DWORD PTR [edi-0x2d],ecx
  404608:	push   ebp
  404609:	push   es
  40460a:	fwait
  40460b:	(bad)  
  40460c:	jae    0x40468d
  40460e:	retf   0x4967
  404611:	or     ecx,DWORD PTR [ebx]
  404613:	pop    ss
  404614:	pop    ebp
  404615:	(bad)  
  404616:	jnp    0x404632
  404618:	es mov dh,0xc1
  40461b:	push   esp
  40461c:	mov    ?,WORD PTR [ecx]
  40461e:	pop    ebx
  40461f:	and    al,bh
  404621:	push   ebp
  404622:	lods   eax,DWORD PTR ds:[esi]
  404623:	lahf   
  404624:	call   0x3a2b8b3c
  404629:	outs   dx,BYTE PTR ds:[esi]
  40462a:	lods   eax,DWORD PTR ds:[esi]
  40462b:	xchg   ebp,eax
  40462c:	and    ch,BYTE PTR [ebx]
  40462e:	mov    ecx,0x7ba9b74b
  404633:	shr    dh,0x51
  404636:	add    edi,DWORD PTR [ebx]
  404638:	sbb    BYTE PTR es:[ecx],0x7f
  40463c:	mov    esi,0xb793e22e
  404641:	mov    ds,edx
  404643:	jmp    0x9e03:0x59376bf8
  40464a:	pop    edx
  40464b:	lock sbb al,0x33
  40464e:	ja     0x4045d1
  404650:	cmp    ebp,edx
  404652:	stc    
  404653:	adc    DWORD PTR [esp+esi*2+0x40],esp
  404657:	push   esp
  404658:	enter  0x37de,0x32
  40465c:	hlt    
  40465d:	test   al,0xeb
  40465f:	jne    0x404685
  404661:	repnz inc eax
  404663:	sub    eax,0x4d9c3b5d
  404668:	mov    dh,0xed
  40466a:	xchg   edx,eax
  40466b:	mov    bl,0x3f
  40466d:	xchg   edi,eax
  40466e:	inc    eax
  40466f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404670:	ret    
  404671:	shr    DWORD PTR [esp+edi*2],1
  404674:	js     0x4046df
  404676:	imul   esp,DWORD PTR [esi+ebp*4+0x6bc81a2c],0x6f
  40467e:	mov    ah,0xf7
  404680:	pop    eax
  404681:	in     al,dx
  404682:	sbb    ch,ch
  404684:	inc    edi
  404685:	pushf  
  404686:	inc    BYTE PTR [edi-0x4bb0185d]
  40468c:	sbb    BYTE PTR [edi+ebp*4],ch
  40468f:	sub    DWORD PTR [eax],esp
  404691:	out    0xb3,al
  404693:	out    dx,eax
  404694:	adc    al,0x52
  404696:	inc    eax
  404697:	mov    edi,0xc1786df
  40469d:	sar    esi,0xc
  4046a0:	ret    0xc6b9
  4046a3:	fst    st(2)
  4046a5:	push   esi
  4046a6:	xor    al,al
  4046a8:	iret   
  4046a9:	aas    
  4046aa:	and    eax,0xdd203f5e
  4046af:	mov    ds:0x9fbac881,eax
  4046b4:	ret    0x28
  4046b7:	sub    eax,0xdc1b0c42
  4046bc:	(bad)  
  4046bd:	nop
  4046be:	push   edx
  4046bf:	or     eax,0x67cdd3e7
  4046c4:	je     0x4046de
  4046c6:	in     al,dx
  4046c7:	xchg   esi,eax
  4046c8:	loope  0x404662
  4046ca:	(bad)  
  4046cb:	popa   
  4046cc:	ret    0xfbe1
  4046cf:	enter  0x3462,0x83
  4046d3:	fnsave [esi+0x3f]
  4046d6:	pusha  
  4046d7:	xchg   edi,eax
  4046d8:	cmp    BYTE PTR ds:0xa3a7457e,0x2a
  4046df:	jge    0x40472a
  4046e1:	mov    esi,0x2fa7e136
  4046e6:	pop    ds
  4046e7:	aad    0x8b
  4046e9:	xchg   DWORD PTR [esi+0x47cf7fcf],ebx
  4046ef:	clc    
  4046f0:	hlt    
  4046f1:	sti    
  4046f2:	fs ret 
  4046f4:	cmp    edx,DWORD PTR [eax+eiz*1]
  4046f7:	dec    BYTE PTR [eax]
  4046f9:	adc    BYTE PTR [eax-0x5f712a72],dl
  4046ff:	jo     0x404769
  404701:	pop    edx
  404702:	fs inc esi
  404704:	dec    ebx
  404705:	cli    
  404706:	shl    BYTE PTR [ebx+0x2cbf928c],1
  40470c:	(bad)  
  40470d:	mov    ah,0x41
  40470f:	mov    bh,0xf7
  404711:	inc    esi
  404712:	retf   0xd001
  404715:	imul   BYTE PTR [eax+0x5]
  404718:	and    eax,0xce659b24
  40471d:	push   ebp
  40471e:	cli    
  40471f:	or     eax,0x7e39b95c
  404724:	mov    esp,0xf7b243e1
  404729:	jae    0x4046e9
  40472b:	mov    bl,0xd5
  40472d:	ffreep st(6)
  40472f:	icebp  
  404730:	sub    ax,0x559b
  404734:	sbb    BYTE PTR [ecx],bh
  404736:	or     DWORD PTR [ebx+0x49cf4b32],eax
  40473c:	or     al,0x2
  40473e:	test   al,0xb7
  404740:	adc    eax,0xd8215455
  404745:	les    esi,FWORD PTR [edi+0x2cced96b]
  40474b:	sbb    esp,DWORD PTR [ecx+edx*4]
  40474e:	(bad)  
  404750:	call   0x1188:0x60b013ea
  404757:	icebp  
  404758:	popf   
  404759:	inc    ebp
  40475a:	idiv   BYTE PTR [edi+0x738fc804]
  404760:	inc    esp
  404761:	nop
  404762:	or     dl,BYTE PTR [ebx+0x51b15d06]
  404768:	xor    ebp,DWORD PTR [ebx]
  40476a:	jb     0x4047de
  40476c:	aas    
  40476d:	cmp    BYTE PTR [edx+edi*8+0x8ff1757],bl
  404774:	sbb    edx,0xffffffd2
  404777:	inc    esi
  404778:	bnd ja 0x40470a
  40477b:	aam    0x11
  40477d:	dec    ebx
  40477e:	mov    DWORD PTR [ecx],ecx
  404780:	and    esp,DWORD PTR ds:0xc881c93a
  404786:	mul    esi
  404788:	jmp    0x4cc6fca1
  40478d:	cmc    
  40478e:	pushf  
  40478f:	or     BYTE PTR [eax],al
  404791:	mov    al,ds:0x680570e
  404796:	(bad)  
  404797:	cmp    al,0xf8
  404799:	sti    
  40479a:	sbb    dh,ch
  40479c:	push   edx
  40479d:	cld    
  40479e:	add    cl,dl
  4047a0:	inc    ebx
  4047a1:	je     0x4047af
  4047a3:	adc    al,0x41
  4047a5:	call   0x6a7f:0x57707d35
  4047ac:	into   
  4047ad:	outs   dx,BYTE PTR ds:[esi]
  4047ae:	test   al,0x89
  4047b0:	push   0xffffffaf
  4047b2:	sbb    esp,eax
  4047b4:	inc    ebx
  4047b5:	out    0xff,al
  4047b7:	leave  
  4047b8:	ja     0x404809
  4047ba:	xor    al,0x7b
  4047bc:	xchg   edx,eax
  4047bd:	jo     0x4047d1
  4047bf:	adc    bh,BYTE PTR [ebp+0x13]
  4047c2:	dec    edx
  4047c3:	xor    al,BYTE PTR [esi]
  4047c5:	(bad)  
  4047c6:	stc    
  4047c7:	lods   al,BYTE PTR ds:[esi]
  4047c8:	pop    ebx
  4047c9:	out    0x86,eax
  4047cb:	dec    ecx
  4047cc:	ins    BYTE PTR es:[edi],dx
  4047cd:	imul   esi,eax,0xa82fd529
  4047d3:	(bad)  
  4047d4:	dec    ecx
  4047d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047d6:	int3   
  4047d7:	ins    DWORD PTR es:[edi],dx
  4047d8:	sti    
  4047d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047da:	pusha  
  4047db:	sti    
  4047dc:	and    dl,BYTE PTR [ebx+0x386964fc]
  4047e2:	inc    esi
  4047e3:	inc    esp
  4047e4:	mov    ds:0x3a9dcea0,eax
  4047e9:	jp     0x404778
  4047eb:	pop    eax
  4047ec:	(bad)
  4047ef:	mov    ebp,0x8b95d89d
  4047f4:	sub    BYTE PTR [eax],bh
  4047f6:	xchg   ebp,eax
  4047f7:	(bad)  
  4047f8:	jmp    0x9d40:0xf79f845
  4047ff:	cli    
  404800:	inc    esi
  404801:	repnz mov al,0xfb
  404804:	scas   eax,DWORD PTR es:[edi]
  404805:	je     0x404839
  404807:	jecxz  0x4047bf
  404809:	ror    BYTE PTR [ebp+0x6e812e2c],0x79
  404810:	mov    gs,esi
  404812:	lea    esi,[edx-0x14]
  404815:	je     0x4047fe
  404817:	xlat   BYTE PTR ds:[ebx]
  404818:	mov    ch,0xe9
  40481a:	into   
  40481b:	nop
  40481c:	mov    edi,0xb1da2e3d
  404821:	push   ecx
  404822:	(bad)  [ecx]
  404824:	mov    DWORD PTR [edi-0x7b],ebp
  404827:	xchg   ebx,eax
  404828:	js     0x404828
  40482a:	dec    edx
  40482b:	sbb    BYTE PTR [esi+0x63ab3f3e],0x5d
  404832:	or     al,BYTE PTR [esi]
  404834:	xchg   ebx,eax
  404835:	add    al,0x78
  404837:	jb     0x4047f4
  404839:	cmp    esp,DWORD PTR [eax]
  40483b:	shr    DWORD PTR [edi+0x19],0xdf
  40483f:	stos   DWORD PTR es:[edi],eax
  404840:	pop    ebx
  404841:	push   0xf82012f2
  404846:	mov    edi,0xb74fbfee
  40484b:	out    dx,al
  40484c:	add    DWORD PTR [edx+0x27],ecx
  40484f:	cmp    eax,0xa79dc3e5
  404854:	div    bl
  404856:	xchg   esi,esi
  404858:	scas   eax,DWORD PTR es:[edi]
  404859:	mov    ds:0x515f0983,al
  40485e:	test   BYTE PTR [edx],al
  404860:	das    
  404861:	(bad)  
  404862:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404863:	push   esi
  404864:	jge    0x404802
  404866:	in     al,0x2d
  404868:	xchg   ebp,eax
  404869:	fnstcw WORD PTR [ecx+0x50]
  40486c:	call   0x2cdb432b
  404871:	dec    eax
  404872:	leave  
  404873:	mov    ds,edi
  404875:	push   ebx
  404876:	pushf  
  404877:	ud0    eax,edx
  40487a:	into   
  40487b:	loope  0x404860
  40487d:	mov    edi,0xf7d17a5a
  404882:	adc    BYTE PTR [ebx+0x16],cl
  404885:	mov    edx,0xeddd82dd
  40488a:	adc    DWORD PTR [eax-0x5f092b32],ebx
  404890:	mov    al,ds:0x540aa647
  404895:	retf   0x9ed0
  404898:	fld    TBYTE PTR [edx]
  40489a:	mov    ah,BYTE PTR [eax-0x2e]
  40489d:	push   0xffffffd3
  40489f:	xchg   ecx,eax
  4048a0:	mov    WORD PTR ds:0x91914cc5,ds
  4048a6:	xchg   ebx,eax
  4048a7:	push   es
  4048a8:	mov    ds:0x590edceb,al
  4048ad:	lods   eax,DWORD PTR ds:[esi]
  4048ae:	ror    dh,1
  4048b0:	fmulp  st(0),st
  4048b2:	stc    
  4048b3:	jp     0x4048c4
  4048b5:	test   DWORD PTR ds:0xb9602bd4,ecx
  4048bb:	lds    esp,FWORD PTR [eax]
  4048bd:	rol    DWORD PTR [ebp+0x4676a04e],0x72
  4048c4:	shl    DWORD PTR [eax+eax*2-0x129cab37],1
  4048cb:	(bad)  
  4048cc:	je     0x404919
  4048ce:	enter  0x42a4,0xae
  4048d2:	frstor es:[esi+0x18]
  4048d6:	aam    0xa2
  4048d8:	dec    eax
  4048d9:	fstp   DWORD PTR [eax]
  4048db:	(bad)  
  4048dd:	xchg   ebx,eax
  4048de:	inc    edi
  4048df:	mov    eax,ds:0x4bd3bc15
  4048e4:	(bad)  
  4048e5:	lods   al,BYTE PTR ds:[esi]
  4048e6:	in     eax,dx
  4048e7:	loope  0x404910
  4048e9:	loop   0x404906
  4048eb:	stos   DWORD PTR es:[edi],eax
  4048ec:	fbstp  TBYTE PTR [ecx-0x16c6ffc]
  4048f2:	push   ebp
  4048f3:	shl    DWORD PTR [ecx],cl
  4048f5:	push   0x9e7413a8
  4048fa:	int3   
  4048fb:	ret    0x7992
  4048fe:	mov    ds:0x4319362e,al
  404903:	xchg   DWORD PTR [ebx-0x454952a6],esp
  404909:	pusha  
  40490a:	imul   eax
  40490c:	dec    esi
  40490d:	pop    eax
  40490e:	daa    
  40490f:	push   esp
  404910:	(bad)  
  404911:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404912:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404913:	sar    DWORD PTR [edi],cl
  404915:	call   0x368754bf
  40491a:	jmp    0x404957
  40491c:	adc    BYTE PTR [eax+0x27],dl
  40491f:	dec    ebx
  404920:	mov    bl,0xcf
  404922:	dec    esi
  404923:	dec    ebx
  404924:	aad    0x22
  404926:	sub    BYTE PTR [ebp+0x66],bh
  404929:	mov    edx,0x9ac4ea7
  40492e:	or     ebp,DWORD PTR [ebx+0x745ee0f1]
  404934:	dec    eax
  404935:	jb     0x4049b5
  404937:	pop    esp
  404938:	sub    ebp,DWORD PTR [ebx]
  40493a:	rcl    BYTE PTR [edi-0x51dc9168],0x1c
  404941:	call   DWORD PTR [esi-0x1908f50d]
  404947:	mov    ch,0xc7
  404949:	fbstp  TBYTE PTR [eax-0xf]
  40494c:	jg     0x404926
  40494e:	cmc    
  40494f:	in     eax,0xff
  404951:	push   0xffffff91
  404953:	xor    BYTE PTR [ebp+edx*4+0x5be09277],0xac
  40495b:	cmp    bh,0xdc
  40495e:	repnz inc ebx
  404960:	add    al,0x28
  404962:	lea    edi,ds:0x2f5baeba
  404968:	jl     0x40490e
  40496a:	sbb    DWORD PTR ds:0xf80b7eaa,ecx
  404970:	inc    ecx
  404971:	(bad)  
  404972:	adc    al,0xb5
  404974:	shl    BYTE PTR [ebx],cl
  404976:	xchg   BYTE PTR [esi-0x80bfc83],al
  40497c:	repz dec eax
  40497e:	or     ebp,eax
  404980:	mov    bl,ah
  404982:	in     al,0xd6
  404984:	gs int 0x23
  404987:	push   0x2f593a51
  40498c:	cmc    
  40498d:	pop    ds
  40498e:	sub    eax,0xb07dc5bf
  404993:	xor    edx,ecx
  404995:	jno    0x40493c
  404997:	fld    DWORD PTR [edi+ebp*2]
  40499a:	test   al,0xaa
  40499c:	ret    0x3391
  40499f:	pop    ss
  4049a0:	dec    edx
  4049a1:	pushf  
  4049a2:	loop   0x404956
  4049a4:	retf   
  4049a5:	fnstsw WORD PTR [esp+esi*2]
  4049a8:	test   al,0x54
  4049aa:	jae    0x404967
  4049ac:	ins    DWORD PTR es:[edi],dx
  4049ad:	sti    
  4049ae:	mov    dl,0x45
  4049b0:	pop    ebx
  4049b1:	enter  0xd6a5,0xfd
  4049b5:	pop    ebp
  4049b6:	lahf   
  4049b7:	ret    
  4049b8:	lahf   
  4049b9:	mov    ds:0x82fca023,al
  4049be:	mov    ch,0xa5
  4049c0:	mov    ebx,0xf613b696
  4049c5:	je     0x404975
  4049c7:	mov    eax,0x6a95e1ca
  4049cc:	loopne 0x404a1e
  4049ce:	jns    0x4049df
  4049d0:	cmp    eax,0xebd31003
  4049d5:	das    
  4049d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049d7:	(bad)  
  4049d8:	outs   dx,BYTE PTR ds:[esi]
  4049d9:	jmp    0xc9a2:0x1ab3545e
  4049e0:	leave  
  4049e1:	popa   
  4049e2:	ins    DWORD PTR es:[edi],dx
  4049e3:	pop    ds
  4049e4:	es push 0x1c
  4049e7:	adc    DWORD PTR [edi+0x5c],0xffffffa2
  4049eb:	and    bl,BYTE PTR [ebp-0xda1304d]
  4049f1:	push   ss
  4049f2:	dec    esi
  4049f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049f4:	rol    DWORD PTR [esi],cl
  4049f6:	je     0x404a05
  4049f8:	add    DWORD PTR [ebp-0x3b],ebx
  4049fb:	push   ss
  4049fc:	inc    ebx
  4049fd:	jge    0x4049b4
  4049ff:	xchg   esi,eax
  404a00:	test   BYTE PTR [edx],ch
  404a02:	and    esp,DWORD PTR [di]
  404a05:	jmp    0xab6b2dc4
  404a0a:	push   cs
  404a0b:	fidivr WORD PTR [edi+0x2a]
  404a0e:	jnp    0x404a41
  404a10:	inc    ebx
  404a11:	das    
  404a12:	ja     0x404a2c
  404a14:	fnstcw WORD PTR [ecx]
  404a16:	(bad)  [esp+esi*2-0x59]
  404a1a:	imul   ecx,DWORD PTR [edx],0xffffffd8
  404a1d:	(bad)  
  404a1e:	fild   WORD PTR [ecx-0x6d]
  404a21:	inc    ecx
  404a22:	aam    0x6b
  404a24:	push   ebx
  404a25:	fwait
  404a26:	or     al,0xd7
  404a28:	add    cl,BYTE PTR [edi+0x43]
  404a2b:	sbb    BYTE PTR [ebp+0x3f],0xe7
  404a2f:	jp     0x404a72
  404a31:	aad    0x2a
  404a33:	xchg   ebx,eax
  404a34:	dec    ecx
  404a35:	mov    ds:0xa3a571cc,al
  404a3a:	pop    ebx
  404a3b:	adc    al,0xf8
  404a3d:	mov    edx,0x9d7380e5
  404a42:	out    0xb1,eax
  404a44:	in     al,0xb1
  404a46:	jo     0x404a2a
  404a48:	lods   al,BYTE PTR ds:[esi]
  404a49:	jno    0x404a27
  404a4b:	hlt    
  404a4c:	gs push edi
  404a4e:	adc    al,0x0
  404a50:	fs xchg esi,eax
  404a52:	fwait
  404a53:	test   al,0x6a
  404a55:	bound  esi,QWORD PTR [edi+0x32]
  404a58:	cli    
  404a59:	push   ds
  404a5a:	cli    
  404a5b:	cmc    
  404a5c:	pop    ecx
  404a5d:	and    DWORD PTR [eax],ecx
  404a5f:	data16 js 0x404a09
  404a62:	adc    eax,0x1b9b34c9
  404a67:	inc    eax
  404a68:	bound  edx,QWORD PTR [eax+esi*8+0x25]
  404a6c:	add    al,0xaa
  404a6e:	cwde   
  404a6f:	addr16 dec edi
  404a71:	imul   esp,ecx,0xffffffe1
  404a74:	pop    es
  404a75:	xchg   DWORD PTR [eax+0x636ded17],ecx
  404a7b:	mov    bl,0x85
  404a7d:	test   BYTE PTR [ebx+0x1e],dl
  404a80:	cmc    
  404a81:	hlt    
  404a82:	xchg   esp,eax
  404a83:	fld    QWORD PTR [edx]
  404a85:	sub    eax,DWORD PTR [edx+0x8]
  404a88:	lods   al,BYTE PTR ds:[esi]
  404a89:	les    edx,FWORD PTR [ebx+0xf5e287a]
  404a8f:	mov    bl,0x50
  404a91:	push   es
  404a92:	inc    esp
  404a94:	cmp    edx,DWORD PTR [edi-0x78411fd1]
  404a9a:	pop    esp
  404a9b:	test   eax,0xe6965e4f
  404aa0:	mov    esp,eax
  404aa2:	cld    
  404aa3:	or     al,0xe2
  404aa5:	and    bh,BYTE PTR [ebp-0x6318b21f]
  404aab:	inc    ebp
  404aac:	jo     0x404b0c
  404aae:	test   esp,eax
  404ab0:	iret   
  404ab1:	push   ebx
  404ab2:	int    0x3a
  404ab4:	inc    ecx
  404ab5:	(bad)  
  404ab6:	aad    0xf0
  404ab8:	jp     0x404aaa
  404aba:	and    bl,cl
  404abc:	call   0x17f4:0x35aa8bd0
  404ac3:	popf   
  404ac4:	test   BYTE PTR [ebx-0x41],0xdf
  404ac8:	xchg   ecx,eax
  404ac9:	pop    edi
  404aca:	aad    0xf
  404acc:	outs   dx,BYTE PTR ds:[esi]
  404acd:	into   
  404ace:	push   cs
  404acf:	jle    0x404ace
  404ad1:	jmp    0xe888:0xe6b0feb2
  404ad8:	ins    BYTE PTR es:[edi],dx
  404ad9:	pop    ebp
  404ada:	cld    
  404adb:	scas   eax,DWORD PTR es:[edi]
  404adc:	and    al,0x63
  404ade:	or     eax,0xf092656f
  404ae3:	in     al,dx
  404ae4:	mov    al,0x39
  404ae6:	into   
  404ae7:	and    eax,0xe1644e24
  404aec:	jo     0x404aeb
  404aee:	stc    
  404aef:	inc    ebp
  404af0:	mov    ch,0xe9
  404af2:	stos   BYTE PTR es:[edi],al
  404af3:	cmp    esi,esp
  404af5:	sbb    al,0x4c
  404af7:	out    dx,eax
  404af8:	or     ch,BYTE PTR ds:0xd714455b
  404afe:	in     al,0xec
  404b00:	shl    DWORD PTR [ecx],0x38
  404b03:	pop    esp
  404b04:	fmul   st(3),st
  404b06:	fadd   st(7),st
  404b08:	jmp    0x404b1d
  404b0a:	cs sbb edx,ebp
  404b0d:	pop    eax
  404b0e:	shl    edx,1
  404b10:	and    BYTE PTR [ebx-0x2a],cl
  404b13:	and    ecx,DWORD PTR [edx]
  404b15:	retf   0xd8d7
  404b18:	add    al,BYTE PTR [edi-0xde8118b]
  404b1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b1f:	xor    eax,0x81c33a8a
  404b24:	pop    ecx
  404b25:	(bad)  
  404b26:	lock popa 
  404b28:	jle    0x404aef
  404b2a:	cwde   
  404b2b:	repz sbb dl,BYTE PTR [edx]
  404b2e:	xor    BYTE PTR [eax-0xc8b630a],cl
  404b34:	mov    dl,BYTE PTR [ebx+edx*4]
  404b37:	add    eax,0xff18c2fc
  404b3c:	jge    0x404b69
  404b3e:	mov    ch,0xf3
  404b40:	nop
  404b41:	xor    al,0x68
  404b43:	ja     0x404b9a
  404b45:	mov    ebp,0x5fa238b6
  404b4a:	sbb    BYTE PTR [edi+0x4e4e6da7],0x1d
  404b51:	mov    dl,0x92
  404b53:	pop    edi
  404b54:	adc    esi,DWORD PTR [edi]
  404b56:	imul   ebx,DWORD PTR [esi-0x1c]
  404b5a:	sbb    WORD PTR [ecx],bx
  404b5d:	xchg   esi,eax
  404b5e:	aas    
  404b5f:	sub    dl,BYTE PTR [esi-0x7f]
  404b62:	jmp    0xcc0a0789
  404b67:	arpl   bp,cx
  404b69:	enter  0x6f78,0xf0
  404b6d:	inc    ecx
  404b6e:	xchg   esi,eax
  404b6f:	out    dx,eax
  404b70:	adc    ebx,ebp
  404b72:	scas   eax,DWORD PTR es:[edi]
  404b73:	daa    
  404b74:	mov    BYTE PTR [ebx-0x70],ah
  404b77:	mov    eax,0x2a7bca88
  404b7c:	jecxz  0x404bfb
  404b7e:	or     esi,DWORD PTR [edi]
  404b80:	adc    DWORD PTR [esi+0x5338b4d7],ebp
  404b86:	sub    BYTE PTR [eax],dl
  404b88:	xchg   esp,eax
  404b89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b8a:	xor    eax,0x58369098
  404b8f:	inc    edx
  404b90:	fstp   QWORD PTR [esi]
  404b92:	jg     0x404bde
  404b94:	xchg   BYTE PTR [esi],ah
  404b96:	cmc    
  404b97:	sub    DWORD PTR [eax+0x7a4c948d],ecx
  404b9d:	adc    ecx,DWORD PTR [edx-0x4a]
  404ba0:	das    
  404ba1:	inc    eax
  404ba2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ba3:	out    0x8a,al
  404ba5:	pop    edx
  404ba6:	sbb    DWORD PTR [esi+0x34449667],ecx
  404bac:	cdq    
  404bad:	push   ebp
  404bae:	add    al,0xf
  404bb0:	push   eax
  404bb1:	(bad)  
  404bb2:	(bad)  
  404bb3:	xchg   ecx,eax
  404bb4:	mov    eax,ds:0xff31b536
  404bb9:	inc    eax
  404bba:	adc    al,0xca
  404bbc:	jge    0x404bd9
  404bbe:	adc    eax,0xf7c9ef7b
  404bc3:	cwde   
  404bc4:	adc    BYTE PTR [ecx],ch
  404bc6:	xor    al,0xc2
  404bc8:	scas   eax,DWORD PTR es:[edi]
  404bc9:	nop
  404bca:	and    DWORD PTR [ecx-0x42a4eb18],edx
  404bd0:	jno    0x404c31
  404bd2:	pop    edx
  404bd3:	and    edx,DWORD PTR ds:0xeb21444b
  404bd9:	sub    edx,DWORD PTR [esi]
  404bdb:	pop    ds
  404bdc:	pop    esi
  404bdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bde:	or     eax,0x96a87848
  404be3:	fsubr  DWORD PTR [esi]
  404be5:	lods   eax,DWORD PTR ds:[esi]
  404be6:	mov    bh,0xd7
  404be8:	test   DWORD PTR cs:0xde545ab3,ebx
  404bef:	jmp    0x404bf9
  404bf1:	add    BYTE PTR [ebx+0x5ec99758],dl
  404bf7:	jmp    0x404c10
  404bf9:	mov    al,0x60
  404bfb:	cmp    BYTE PTR [esi-0x580c6b45],0x73
  404c02:	fwait
  404c03:	push   ss
  404c04:	out    0xc8,al
  404c06:	sbb    eax,0x8fc953af
  404c0b:	inc    eax
  404c0c:	div    ecx
  404c0e:	mov    ebp,0x2e77acc2
  404c13:	psubq  mm5,mm0
  404c16:	call   0x3d9e:0xe58516ec
  404c1d:	jg     0x404bb2
  404c1f:	xlat   BYTE PTR gs:[ebx]
  404c21:	mov    edi,esi
  404c23:	jp     0x404c02
  404c25:	adc    DWORD PTR [eax+0x7006cea2],ebx
  404c2b:	ret    
  404c2c:	fsubr  DWORD PTR [edx-0x27b055bb]
  404c32:	int    0x6f
  404c34:	imul   BYTE PTR [eax-0x7cffab28]
  404c3a:	fwait
  404c3b:	xor    edx,0xcdca4d96
  404c41:	jmp    0xe71e531b
  404c46:	mov    ebp,0x1596315e
  404c4b:	js     0x404c2d
  404c4d:	or     bh,ch
  404c4f:	and    al,ch
  404c51:	pop    ss
  404c52:	stc    
  404c53:	cld    
  404c54:	jae    0x404c7c
  404c56:	mov    ebp,0x6bc7f750
  404c5b:	cmc    
  404c5c:	enter  0x685a,0xfd
  404c60:	sbb    al,0x8
  404c62:	scas   al,BYTE PTR es:[edi]
  404c63:	pop    edx
  404c64:	cmc    
  404c65:	imul   ebp,ebp,0xedb013b2
  404c6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c6c:	and    al,0x37
  404c6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c6f:	and    bh,BYTE PTR [ebx+edi*8+0x280e749b]
  404c76:	sbb    BYTE PTR [edx+0x2783c2ab],ch
  404c7c:	ins    BYTE PTR es:[edi],dx
  404c7d:	xor    DWORD PTR [ecx+0x46],edi
  404c80:	es enter 0x7567,0x6b
  404c85:	mov    ds:0x176cfbd4,al
  404c8a:	adc    BYTE PTR [edi+0xdd5ad45],dl
  404c90:	adc    bl,al
  404c92:	cmp    eax,0x3969ce5d
  404c97:	sub    BYTE PTR [ebx],dh
  404c99:	mov    al,0x55
  404c9b:	mov    bh,0xa0
  404c9d:	cli    
  404c9e:	stos   DWORD PTR es:[edi],eax
  404c9f:	retf   0xa5d
  404ca2:	sub    bh,bh
  404ca4:	mov    ah,0xe7
  404ca6:	pop    ds
  404ca7:	rcr    esi,1
  404ca9:	das    
  404caa:	mov    ebx,0x3336f51
  404caf:	repz sbb BYTE PTR [esi],dh
  404cb2:	push   ds
  404cb3:	jb     0x404c5b
  404cb5:	les    esp,FWORD PTR [edi-0x5f]
  404cb8:	les    esi,FWORD PTR [edx]
  404cba:	lods   eax,DWORD PTR ds:[esi]
  404cbb:	mov    ?,WORD PTR [edx-0x24]
  404cbe:	push   ebp
  404cbf:	pusha  
  404cc0:	aam    0x73
  404cc2:	shl    DWORD PTR [eax+0x508a861b],cl
  404cc8:	loopne 0x404c92
  404cca:	rcl    DWORD PTR [ebx+ebx*4+0x20],cl
  404cce:	(bad)  
  404ccf:	mov    esi,0x35b3d2dc
  404cd4:	xor    DWORD PTR fs:[edx],edi
  404cd7:	push   ss
  404cd8:	jo     0x404d1e
  404cda:	adc    al,0xe3
  404cdc:	fs push 0xffffff94
  404cdf:	pop    ecx
  404ce0:	add    DWORD PTR [eax-0xe],edx
  404ce3:	add    eax,0xb75e8e06
  404ce8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ce9:	sbb    DWORD PTR [ebp+0x5a],esi
  404cec:	dec    edi
  404ced:	mwaitx 
  404cf0:	inc    edi
  404cf1:	hlt    
  404cf2:	ins    DWORD PTR es:[edi],dx
  404cf3:	adc    eax,0x92667d7a
  404cf8:	bound  ebp,QWORD PTR [edx-0x6f]
  404cfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cfc:	sub    BYTE PTR [ecx+0x1610995b],bl
  404d02:	push   esp
  404d03:	vmovd  DWORD PTR [edi],xmm6
  404d07:	jmp    0x404d02
  404d09:	div    BYTE PTR [ecx]
  404d0b:	mov    dl,0xe8
  404d0d:	mov    edx,DWORD PTR [ecx+0x28393691]
  404d13:	jle    0x404d32
  404d15:	test   BYTE PTR [eax-0x5e],0xff
  404d19:	fneni(8087 only) 
  404d1b:	fstp   QWORD PTR [ecx]
  404d1d:	retf   0xee35
  404d20:	ss hlt 
  404d22:	aam    0xb1
  404d24:	(bad)  
  404d25:	addr16 and eax,0x71cfc00b
  404d2b:	ins    DWORD PTR es:[edi],dx
  404d2c:	out    0xbd,eax
  404d2e:	nop
  404d2f:	shl    DWORD PTR [edx+0x72],1
  404d32:	pop    edx
  404d33:	addr16 enter 0xf2b5,0x70
  404d38:	lea    edi,[edi+0x8]
  404d3b:	dec    edx
  404d3c:	and    al,0xf0
  404d3e:	cmp    BYTE PTR [ebx+0x70],al
  404d41:	fisubr DWORD PTR [edi]
  404d43:	mov    ch,dl
  404d45:	scas   al,BYTE PTR es:[edi]
  404d46:	cmp    BYTE PTR ds:0x55450732,bh
  404d4c:	cli    
  404d4d:	not    eax
  404d4f:	sub    ebp,edi
  404d51:	mov    edx,edi
  404d53:	lods   al,BYTE PTR ds:[esi]
  404d54:	std    
  404d55:	loopne 0x404cf6
  404d57:	(bad)  
  404d58:	out    0x5,al
  404d5a:	xor    eax,0xd142be3b
  404d5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d60:	js     0x404d1b
  404d62:	xchg   esi,eax
  404d63:	cmp    dh,BYTE PTR [ebx+0x3b]
  404d66:	jmp    DWORD PTR [ecx-0x46b4b66]
  404d6c:	push   ss
  404d6d:	cmp    ah,BYTE PTR [ebp-0x45]
  404d70:	xor    ah,cl
  404d72:	cs push es
  404d74:	psrlw  mm7,QWORD PTR [edx-0x79]
  404d78:	dec    esi
  404d79:	xlat   BYTE PTR ds:[ebx]
  404d7a:	cs je  0x404db9
  404d7d:	popf   
  404d7e:	pushf  
  404d7f:	or     BYTE PTR [ecx+ebp*2+0x7ce210ec],al
  404d86:	lds    ebp,FWORD PTR ds:0xf386ae37
  404d8c:	sti    
  404d8d:	jns    0x404db9
  404d8f:	pop    ds
  404d90:	jg     0x404dc1
  404d92:	push   cs
  404d93:	stos   DWORD PTR es:[edi],eax
  404d94:	push   ebp
  404d95:	inc    edi
  404d96:	mov    cl,0x10
  404d98:	pop    ss
  404d99:	and    BYTE PTR [edi+0x4ce16993],dl
  404d9f:	cld    
  404da0:	lahf   
  404da1:	xchg   esi,eax
  404da2:	int3   
  404da3:	lods   al,BYTE PTR ds:[esi]
  404da4:	pusha  
  404da5:	lock loope 0x404dfd
  404da8:	mov    esi,0xab709488
  404dad:	out    0x33,eax
  404daf:	lea    ebp,[edi-0x65]
  404db2:	mov    al,0xc1
  404db4:	jno    0x404d4f
  404db6:	(bad)  
  404db7:	xor    al,0xeb
  404db9:	jmp    0x3ce3:0xbc5d662d
  404dc0:	inc    edi
  404dc1:	js     0x404dcc
  404dc3:	or     BYTE PTR [ebp-0x755394ae],dl
  404dc9:	mov    ebx,0xa02c776b
  404dcf:	pop    ebx
  404dd0:	sub    dh,BYTE PTR [ebp-0x18]
  404dd3:	pop    esp
  404dd4:	loopne 0x404dae
  404dd6:	shl    BYTE PTR [esi-0x31d7cda3],cl
  404ddc:	jno    0x404dad
  404dde:	(bad)  
  404ddf:	mov    ds:0xe0116a12,eax
  404de4:	bound  edi,QWORD PTR [edi-0x65a3e3fd]
  404dea:	inc    edx
  404deb:	daa    
  404dec:	imul   DWORD PTR [esi+ebx*2]
  404def:	sub    BYTE PTR [edi],cl
  404df1:	mov    eax,ds:0x8d71ce65
  404df6:	pop    esp
  404df7:	mul    DWORD PTR [edi+0x440c4805]
  404dfd:	mov    bl,0xa1
  404dff:	outs   dx,BYTE PTR ds:[esi]
  404e00:	xor    al,BYTE PTR [ebx+esi*2+0x6e51e080]
  404e07:	xchg   ecx,eax
  404e08:	cwde   
  404e09:	ss loop 0x404e87
  404e0c:	xchg   DWORD PTR gs:[ecx+0x6b],ecx
  404e10:	div    BYTE PTR [edi+ebx*4]
  404e13:	sbb    eax,0xa907e2e
  404e18:	call   0x5e5d:0xf1ab12af
  404e1f:	ja     0x404e17
  404e21:	loope  0x404e00
  404e23:	adc    DWORD PTR [edi+ebp*1],ecx
  404e26:	fld    DWORD PTR [ebx]
  404e28:	nop
  404e29:	imul   eax,DWORD PTR [di+0x43],0x980f0621
  404e31:	cmp    BYTE PTR [eax+0x57],bh
  404e34:	dec    ebp
  404e35:	dec    esi
  404e36:	addr16 lahf 
  404e38:	inc    esi
  404e39:	pop    esp
  404e3a:	hlt    
  404e3b:	mov    ?,WORD PTR [ebp+0x4804e85e]
  404e41:	mov    ebp,0x8d866df5
  404e46:	popa   
  404e47:	xchg   DWORD PTR [ecx-0x41],edi
  404e4a:	stc    
  404e4b:	ja     0x404e1a
  404e4d:	sbb    BYTE PTR [edi-0xb9d25a6],0xac
  404e54:	rcr    dh,1
  404e56:	mov    edx,0x8b3cc46a
  404e5b:	push   ecx
  404e5c:	fisub  WORD PTR ds:0xd881f6e1
  404e62:	imul   DWORD PTR [eax]
  404e64:	mov    bl,0x3
  404e66:	mov    BYTE PTR [edi-0x4d],ch
  404e69:	(bad)  
  404e6a:	push   esp
  404e6b:	mov    eax,ds:0x5809bd79
  404e70:	mov    BYTE PTR [ebx+0x359ce5fb],bh
  404e76:	push   edi
  404e77:	lods   al,BYTE PTR ds:[esi]
  404e78:	ja     0x404e95
  404e7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e7b:	neg    DWORD PTR [eax+0x15]
  404e7e:	inc    ebx
  404e7f:	out    dx,al
  404e80:	sbb    edi,DWORD PTR ds:0x2b22fdbb
  404e86:	sub    eax,0x63937a2c
  404e8b:	mov    WORD PTR [edx-0x56],cs
  404e8e:	sbb    eax,edx
  404e90:	sub    eax,0xa4b7d0e
  404e95:	sub    eax,edx
  404e97:	push   0x24
  404e99:	pop    ebp
  404e9a:	in     eax,0xca
  404e9c:	lock sbb BYTE PTR ds:[eax-0x2],dh
  404ea1:	sub    eax,0xb05700cc
  404ea6:	xor    eax,0x9acf9104
  404eab:	inc    ecx
  404eac:	call   0xbf34:0x55f1b08c
  404eb3:	sti    
  404eb4:	test   DWORD PTR [esi],0x4cc60946
  404eba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ebb:	cmp    eax,0x5834d74a
  404ec0:	push   ds
  404ec1:	xlat   BYTE PTR ds:[ebx]
  404ec2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ec3:	fsub   st,st(7)
  404ec5:	in     al,dx
  404ec6:	repz adc ah,BYTE PTR [edx]
  404ec9:	inc    esi
  404eca:	pop    ebp
  404ecb:	dec    ebp
  404ecc:	mov    ecx,0x187293c5
  404ed1:	mov    esp,ss
  404ed3:	push   ecx
  404ed4:	pop    ecx
  404ed5:	inc    edi
  404ed6:	arpl   WORD PTR [eax-0x76],di
  404ed9:	out    0xcf,eax
  404edb:	cwde   
  404edc:	std    
  404edd:	clc    
  404ede:	loope  0x404ebb
  404ee0:	test   BYTE PTR [esi-0x3e],bh
  404ee3:	xchg   DWORD PTR [esp+ecx*4+0x76],ecx
  404ee7:	cmc    
  404ee8:	cli    
  404ee9:	and    bh,BYTE PTR [esi+0x36cb9b]
  404eef:	repz push edx
  404ef1:	mov    WORD PTR [edx+0x46],gs
  404ef4:	pop    eax
  404ef5:	lahf   
  404ef6:	dec    ebx
  404ef7:	fdiv   DWORD PTR [esi+esi*1]
  404efa:	push   edx
  404efb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404efc:	daa    
  404efd:	(bad)
  404f00:	mov    ds:0x86d5e74e,eax
  404f05:	cli    
  404f06:	mov    esi,0x4096efe3
  404f0b:	xchg   ebx,eax
  404f0c:	js     0x404f3f
  404f0e:	mov    bh,BYTE PTR [esi]
  404f10:	shl    BYTE PTR [esi-0x428262c5],0xd1
  404f17:	cdq    
  404f18:	leave  
  404f19:	loope  0x404f07
  404f1b:	ror    BYTE PTR [esi-0x70],cl
  404f1e:	sahf   
  404f1f:	repz call 0xae24:0x49fc90c8
  404f27:	mov    edi,0x3a97820
  404f2c:	sub    eax,0x458bc262
  404f31:	cld    
  404f32:	mov    edi,DWORD PTR [ebp-0x8]
  404f35:	xor    edi,edx
  404f37:	add    edi,esi
  404f39:	mov    esi,DWORD PTR [ebp+0x8]
  404f3c:	imul   edi,ecx
  404f3f:	mov    ebx,DWORD PTR [ebp+0xc]
  404f42:	xor    eax,edx
  404f44:	add    eax,ecx
  404f46:	mov    al,BYTE PTR [ebx+eax*1+0x3272dd]
  404f4d:	mov    BYTE PTR [edi+esi*1],al
  404f50:	mov    eax,DWORD PTR [ebp-0x8]
  404f53:	mov    esi,DWORD PTR [ebp+0x10]
  404f56:	xor    eax,edx
  404f58:	xor    ebx,ebx
  404f5a:	add    esi,0xfabdbeed
  404f60:	adc    ebx,0xffffffff
  404f63:	lea    ecx,[ecx+eax*1+0x3272dd]
  404f6a:	xor    edi,edi
  404f6c:	xor    esi,0x8a29a127
  404f72:	xor    ebx,0x0
  404f75:	mov    eax,ecx
  404f77:	add    eax,0xfabdbeed
  404f7c:	adc    edi,0xffffffff
  404f7f:	xor    eax,0x8a29a127
  404f84:	xor    edi,0x0
  404f87:	cmp    eax,esi
  404f89:	jne    0x402b72
  404f8f:	cmp    edi,ebx
  404f91:	jne    0x402b72
  404f97:	mov    eax,0xf89c85b2
  404f9c:	pop    ebx
  404f9d:	pop    edi
  404f9e:	pop    esi
  404f9f:	leave  
  404fa0:	ret    0xc
  404fa3:	push   ebp
  404fa4:	mov    ebp,esp
  404fa6:	push   ecx
  404fa7:	add    eax,DWORD PTR ds:0x42a000
  404fad:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  404fb4:	sbb    DWORD PTR ds:0x42b008,0x61d9
  404fbe:	mov    eax,DWORD PTR [ebp+0x8]
  404fc1:	xor    DWORD PTR ds:0x42c018,0x2d2e
  404fcb:	mov    al,BYTE PTR [eax]
  404fcd:	add    al,0xb
  404fcf:	xor    al,0x71
  404fd1:	cmp    al,0x29
  404fd3:	mov    DWORD PTR ds:0x429010,0x6c7b
  404fdd:	jne    0x40507a
  404fe3:	mov    eax,DWORD PTR [ebp+0x8]
  404fe6:	or     edx,DWORD PTR ds:0x42900c
  404fec:	mov    ecx,DWORD PTR [ebp+0x8]
  404fef:	and    DWORD PTR ds:0x42b00c,0x0
  404ff9:	mov    edx,DWORD PTR ds:0x42b00c
  404fff:	inc    edx
  405000:	mov    DWORD PTR ds:0x42b00c,edx
  405006:	cmp    DWORD PTR ds:0x42b00c,0x1a
  40500d:	jne    0x40501e
  405013:	push   0x42900c
  405018:	call   DWORD PTR ds:0x42ed75
  40501e:	cmp    DWORD PTR ds:0x42b00c,0x15
  405025:	jb     0x404ff9
  40502b:	or     DWORD PTR ds:0x42d008,0x1488
  405035:	add    ecx,DWORD PTR [eax+0x3c]
  405038:	mov    edx,0x7510896
  40503d:	mov    DWORD PTR [ebp+0x8],ecx
  405040:	mov    eax,DWORD PTR [ebp-0x4]
  405043:	xor    eax,edx
  405045:	push   esi
  405046:	mov    esi,DWORD PTR ds:0x42d000
  40504c:	and    DWORD PTR ds:0x42a00c,esi
  405052:	mov    esi,DWORD PTR [ebp+0x8]
  405055:	mov    ecx,0x3272dd
  40505a:	add    eax,ecx
  40505c:	cmp    DWORD PTR [esi+0x54],eax
  40505f:	pop    esi
  405060:	je     0x40506e
  405066:	mov    eax,DWORD PTR [ebp+0x8]
  405069:	jmp    0x405087
  40506e:	mov    eax,DWORD PTR [ebp-0x4]
  405071:	xor    eax,edx
  405073:	add    eax,ecx
  405075:	jmp    0x405087
  40507a:	mov    eax,DWORD PTR [ebp-0x4]
  40507d:	xor    eax,0x7510896
  405082:	add    eax,0x3272dd
  405087:	leave  
  405088:	ret    0x4
  40508b:	push   ebp
  40508c:	mov    ebp,esp
  40508e:	sub    esp,0x78
  405091:	push   ebx
  405092:	push   esi
  405093:	push   edi
  405094:	push   0x1f
  405096:	lea    eax,[ebp-0x78]
  405099:	xor    DWORD PTR ds:0x429018,0x42a014
  4050a3:	push   eax
  4050a4:	push   0x0
  4050a6:	mov    DWORD PTR ds:0x429010,0x21c3
  4050b0:	call   DWORD PTR ds:0x42ed69
  4050b6:	add    DWORD PTR ds:0x429024,0x42c000
  4050c0:	push   0x97898797
  4050c5:	call   DWORD PTR ds:0x42ed2d
  4050cb:	adc    DWORD PTR ds:0x42b018,0x6ca1
  4050d5:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4050dc:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4050e3:	mov    ecx,DWORD PTR [ebp-0x4]
  4050e6:	mov    ebx,0x7510896
  4050eb:	add    DWORD PTR ds:0x42a014,0x255d
  4050f5:	xor    ecx,ebx
  4050f7:	or     DWORD PTR ds:0x429000,0x7ff8
  405101:	mov    eax,0x3272dd
  405106:	add    ecx,eax
  405108:	mov    DWORD PTR [ebp-0x1c],ecx
  40510b:	not    DWORD PTR ds:0x42c018
  405111:	mov    ecx,DWORD PTR [ebp+0x14]
  405114:	test   ecx,ecx
  405116:	mov    DWORD PTR ds:0x42a00c,0x3f58
  405120:	je     0x40513a
  405126:	inc    ecx
  405127:	mov    ecx,DWORD PTR [ebp+0x14]
  40512a:	and    DWORD PTR ds:0x429014,0x1a66
  405134:	mov    ecx,DWORD PTR [ecx]
  405136:	dec    edi
  405137:	mov    DWORD PTR [ebp-0x1c],ecx
  40513a:	add    DWORD PTR ds:0x42901c,edx
  405140:	mov    ecx,0x7665
  405145:	and    DWORD PTR ds:0x42c008,0x0
  40514f:	jmp    0x405161
  405154:	mov    edi,DWORD PTR ds:0x42c008
  40515a:	inc    edi
  40515b:	mov    DWORD PTR ds:0x42c008,edi
  405161:	cmp    DWORD PTR ds:0x42c008,0x10
  405168:	jae    0x405192
  40516e:	cmp    DWORD PTR ds:0x42c008,0x1f
  405175:	jne    0x40518b
  40517b:	push   0x399e
  405180:	push   0x848f
  405185:	call   DWORD PTR ds:0x42ed35
  40518b:	jmp    0x405154
  405190:	xor    edi,edi
  405192:	imul   edx,eax
  405195:	movzx  esi,BYTE PTR ds:0x42c010
  40519c:	xor    DWORD PTR ds:0x42c004,esi
  4051a2:	mov    esi,0x76532
  4051a7:	add    edx,ecx
  4051a9:	and    DWORD PTR ds:0x42a018,0x0
  4051b3:	mov    edi,DWORD PTR ds:0x42a018
  4051b9:	inc    edi
  4051ba:	mov    DWORD PTR ds:0x42a018,edi
  4051c0:	cmp    DWORD PTR ds:0x42a018,0x6
  4051c7:	jne    0x4051e0
  4051cd:	push   0x8802
  4051d2:	push   0x429004
  4051d7:	push   DWORD PTR [ebp-0x24]
  4051da:	call   DWORD PTR ds:0x42ed39
  4051e0:	cmp    DWORD PTR ds:0x42a018,0x5
  4051e7:	jne    0x4051fa
  4051ed:	mov    edi,DWORD PTR ds:0x42a018
  4051f3:	inc    edi
  4051f4:	mov    DWORD PTR ds:0x42a018,edi
  4051fa:	cmp    DWORD PTR ds:0x42a018,0x10
  405201:	jb     0x4051b3
  405207:	and    DWORD PTR ds:0x42d00c,0x0
  405211:	jmp    0x405223
  405216:	mov    edi,DWORD PTR ds:0x42d00c
  40521c:	inc    edi
  40521d:	mov    DWORD PTR ds:0x42d00c,edi
  405223:	cmp    DWORD PTR ds:0x42d00c,0x15
  40522a:	jae    0x405278
  405230:	cmp    DWORD PTR ds:0x42d00c,0xa
  405237:	jne    0x40524d
  40523d:	push   0x42e05b
  405242:	push   0x42e010
  405247:	call   DWORD PTR ds:0x42ed3d
  40524d:	cmp    DWORD PTR ds:0x42d00c,0x9
  405254:	jne    0x405269
  40525a:	xor    edi,edi
  40525c:	or     edi,DWORD PTR ds:0x42d00c
  405262:	inc    edi
  405263:	mov    DWORD PTR ds:0x42d00c,edi
  405269:	jmp    0x405216
  40526e:	adc    DWORD PTR ds:0x42b000,0x4b16
  405278:	xchg   esi,ecx
  40527a:	xor    ecx,DWORD PTR ds:0x42a00c
  405280:	mov    edi,0x54354
  405285:	sub    edx,edi
  405287:	sbb    ecx,0x55bb
  40528d:	mov    ecx,DWORD PTR [ebp-0x4]
  405290:	sub    DWORD PTR ds:0x42a01c,edx
  405296:	xor    ecx,ebx
  405298:	mov    esi,DWORD PTR ds:0x42a018
  40529e:	and    esi,DWORD PTR ds:0x429000
  4052a4:	mov    DWORD PTR ds:0x42a018,esi
  4052aa:	add    ecx,eax
  4052ac:	mov    DWORD PTR [ebp-0x8],ecx
  4052af:	and    DWORD PTR ds:0x42b010,0x0
  4052b9:	jmp    0x4052cb
  4052be:	mov    esi,DWORD PTR ds:0x42b010
  4052c4:	inc    esi
  4052c5:	mov    DWORD PTR ds:0x42b010,esi
  4052cb:	cmp    DWORD PTR ds:0x42b010,0x1e
  4052d2:	jae    0x405313
  4052d8:	cmp    DWORD PTR ds:0x42b010,0x4
  4052df:	jne    0x4052f4
  4052e5:	push   DWORD PTR [ebp-0x1c]
  4052e8:	push   DWORD PTR [ebp-0x20]
  4052eb:	push   DWORD PTR [ebp-0xc]
  4052ee:	call   DWORD PTR ds:0x42ed41
  4052f4:	cmp    DWORD PTR ds:0x42b010,0x3
  4052fb:	jne    0x40530e
  405301:	mov    esi,DWORD PTR ds:0x42b010
  405307:	inc    esi
  405308:	mov    DWORD PTR ds:0x42b010,esi
  40530e:	jmp    0x4052be
  405313:	mov    ecx,DWORD PTR [ebp-0x14]
  405316:	xor    ecx,ebx
  405318:	add    ecx,eax
  40531a:	and    DWORD PTR ds:0x42a00c,0x4b6f
  405324:	mov    DWORD PTR [ebp-0x24],ecx
  405327:	mov    DWORD PTR ds:0x429024,0x1f
  405331:	cmp    DWORD PTR ds:0x429024,0x0
  405338:	je     0x405390
  40533e:	cmp    DWORD PTR ds:0x429024,0x6
  405345:	jne    0x40535e
  40534b:	push   0x5506
  405350:	push   0x42b000
  405355:	push   DWORD PTR [ebp-0x28]
  405358:	call   DWORD PTR ds:0x42ed45
  40535e:	cmp    DWORD PTR ds:0x429024,0x7
  405365:	jne    0x405378
  40536b:	mov    ecx,DWORD PTR ds:0x429024
  405371:	dec    ecx
  405372:	mov    DWORD PTR ds:0x429024,ecx
  405378:	mov    ecx,DWORD PTR ds:0x429024
  40537e:	dec    ecx
  40537f:	mov    DWORD PTR ds:0x429024,ecx
  405385:	jmp    0x405331
  40538a:	or     DWORD PTR ds:0x42a004,ebx
  405390:	mov    ecx,DWORD PTR [ebp-0x4]
  405393:	xor    ecx,ebx
  405395:	add    ecx,eax
  405397:	sub    esi,0x6631
  40539d:	mov    DWORD PTR [ebp-0x30],ecx
  4053a0:	dec    esi
  4053a1:	mov    esi,DWORD PTR [ebp-0x4]
  4053a4:	and    DWORD PTR ds:0x42d01c,0x0
  4053ae:	jmp    0x4053c2
  4053b3:	xor    ecx,ecx
  4053b5:	or     ecx,DWORD PTR ds:0x42d01c
  4053bb:	inc    ecx
  4053bc:	mov    DWORD PTR ds:0x42d01c,ecx
  4053c2:	cmp    DWORD PTR ds:0x42d01c,0x1e
  4053c9:	jae    0x405407
  4053cf:	cmp    DWORD PTR ds:0x42d01c,0xe
  4053d6:	jne    0x4053e2
  4053dc:	call   DWORD PTR ds:0x42ed51
  4053e2:	cmp    DWORD PTR ds:0x42d01c,0xd
  4053e9:	jne    0x4053fc
  4053ef:	mov    ecx,DWORD PTR ds:0x42d01c
  4053f5:	inc    ecx
  4053f6:	mov    DWORD PTR ds:0x42d01c,ecx
  4053fc:	jmp    0x4053b3
  405401:	or     ecx,DWORD PTR ds:0x42a000
  405407:	xor    esi,ebx
  405409:	dec    ecx
  40540a:	add    esi,eax
  40540c:	mov    ecx,DWORD PTR [ebp-0x24]
  40540f:	and    DWORD PTR ds:0x429000,0x42c018
  405419:	sub    ecx,eax
  40541b:	or     DWORD PTR ds:0x42b014,0x429024
  405425:	lea    edx,[esi-0x3272dd]
  40542b:	add    DWORD PTR ds:0x42d008,0x42a004
  405435:	xor    ecx,ebx
  405437:	adc    DWORD PTR ds:0x42d018,0x3588
  405441:	xor    edx,ebx
  405443:	cmp    edx,ecx
  405445:	je     0x4056db
  40544b:	mov    ecx,DWORD PTR [ebp-0x4]
  40544e:	or     DWORD PTR ds:0x42a004,0x7d41
  405458:	xor    ecx,ebx
  40545a:	sbb    DWORD PTR ds:0x42c004,0x1a4b
  405464:	add    ecx,eax
  405466:	cmp    esi,ecx
  405468:	mov    DWORD PTR ds:0x429018,0x444d
  405472:	jne    0x4056b8
  405478:	and    DWORD PTR ds:0x42b004,0x273e
  405482:	push   DWORD PTR [ebp+0x8]
  405485:	add    DWORD PTR ds:0x42d01c,0x42c004
  40548f:	call   0x404fa3
  405494:	mov    DWORD PTR [ebp-0x18],eax
  405497:	sub    ecx,ecx
  405499:	mov    eax,DWORD PTR [ebp-0x4]
  40549c:	and    DWORD PTR ds:0x42d010,0x0
  4054a6:	jmp    0x4054b8
  4054ab:	mov    edi,DWORD PTR ds:0x42d010
  4054b1:	inc    edi
  4054b2:	mov    DWORD PTR ds:0x42d010,edi
  4054b8:	cmp    DWORD PTR ds:0x42d010,0x1b
  4054bf:	jae    0x40557c
  4054c5:	cmp    DWORD PTR ds:0x42d010,0x10
  4054cc:	jne    0x4054d8
  4054d2:	call   DWORD PTR ds:0x42ed55
  4054d8:	cmp    DWORD PTR ds:0x42d010,0xf
  4054df:	jne    0x4054f2
  4054e5:	mov    edi,DWORD PTR ds:0x42d010
  4054eb:	inc    edi
  4054ec:	mov    DWORD PTR ds:0x42d010,edi
  4054f2:	jmp    0x4054ab
  4054f7:	mov    DWORD PTR ds:0x42c00c,0x1c
  405501:	cmp    DWORD PTR ds:0x42c00c,0x0
  405508:	je     0x40557c
  40550e:	cmp    DWORD PTR ds:0x42c00c,0x4
  405515:	jne    0x405544
  40551b:	push   0x213d
  405520:	push   0x2583
  405525:	push   0x42d000
  40552a:	push   0x5f61
  40552f:	push   0x589a
  405534:	push   0x1da2
  405539:	push   0x4b46
  40553e:	call   DWORD PTR ds:0x42ed59
  405544:	cmp    DWORD PTR ds:0x42c00c,0x5
  40554b:	jne    0x40555e
  405551:	mov    edi,DWORD PTR ds:0x42c00c
  405557:	dec    edi
  405558:	mov    DWORD PTR ds:0x42c00c,edi
  40555e:	xor    edi,edi
  405560:	add    edi,DWORD PTR ds:0x42c00c
  405566:	dec    edi
  405567:	mov    DWORD PTR ds:0x42c00c,edi
  40556d:	jmp    0x405501
  405572:	adc    DWORD PTR ds:0x42c004,0x62a8
  40557c:	mov    ecx,DWORD PTR [ebp-0x18]
  40557f:	dec    edi
  405580:	xor    eax,ebx
  405582:	sub    edi,0x56bd
  405588:	mov    edi,0x3272dd
  40558d:	mov    DWORD PTR ds:0x42d00c,0x2303
  405597:	add    eax,edi
  405599:	mov    DWORD PTR ds:0x42a00c,0x3ae7
  4055a3:	cmp    ecx,eax
  4055a5:	mov    DWORD PTR ds:0x42d018,0x39c7
  4055af:	je     0x407aa3
  4055b5:	add    DWORD PTR ds:0x42b004,0x7234
  4055bf:	push   DWORD PTR [ebp-0x18]
  4055c2:	push   DWORD PTR [ebp+0x8]
  4055c5:	call   0x40cc1e
  4055ca:	mov    ecx,DWORD PTR ds:0x42b01c
  4055d0:	sub    DWORD PTR ds:0x42a010,ecx
  4055d6:	mov    DWORD PTR [ebp-0x18],eax
  4055d9:	mov    eax,DWORD PTR [ebp-0x4]
  4055dc:	mov    ecx,DWORD PTR [ebp-0x18]
  4055df:	mov    DWORD PTR ds:0x429000,0x7fe2
  4055e9:	xor    eax,ebx
  4055eb:	or     DWORD PTR ds:0x42a01c,0x42c010
  4055f5:	add    eax,edi
  4055f7:	mov    DWORD PTR ds:0x42b010,0x7af8
  405601:	cmp    ecx,eax
  405603:	mov    DWORD PTR ds:0x429014,0x1a63
  40560d:	je     0x407aa3
  405613:	mov    eax,ds:0x411f6c
  405618:	mov    ecx,DWORD PTR ds:0x411f84
  40561e:	sub    eax,ecx
  405620:	sub    eax,DWORD PTR [eax+ecx*1]
  405623:	mov    eax,DWORD PTR [ebp-0x18]
  405626:	mov    eax,DWORD PTR [eax+0x18]
  405629:	mov    DWORD PTR [ebp-0x24],eax
  40562c:	and    DWORD PTR ds:0x429028,edi
  405632:	mov    eax,DWORD PTR [ebp-0x18]
  405635:	and    DWORD PTR ds:0x429014,0x0
  40563f:	xor    ecx,ecx
  405641:	xor    ecx,DWORD PTR ds:0x429014
  405647:	inc    ecx
  405648:	mov    DWORD PTR ds:0x429014,ecx
  40564e:	cmp    DWORD PTR ds:0x429014,0xa
  405655:	jne    0x405669
  40565b:	push   DWORD PTR [ebp-0xc]
  40565e:	push   0x42e0a1
  405663:	call   DWORD PTR ds:0x42ed5d
  405669:	cmp    DWORD PTR ds:0x429014,0x9
  405670:	jne    0x405683
  405676:	mov    ecx,DWORD PTR ds:0x429014
  40567c:	inc    ecx
  40567d:	mov    DWORD PTR ds:0x429014,ecx
  405683:	cmp    DWORD PTR ds:0x429014,0x1c
  40568a:	jb     0x40563f
  405690:	mov    ecx,DWORD PTR [ebp+0x8]
  405693:	add    ecx,DWORD PTR [eax+0x20]
  405696:	mov    DWORD PTR [ebp-0x2c],ecx
  405699:	mov    eax,DWORD PTR [ebp-0x18]
  40569c:	mov    ecx,DWORD PTR [ebp+0x8]
  40569f:	add    ecx,DWORD PTR [eax+0x24]
  4056a2:	mov    DWORD PTR [ebp-0x34],ecx
  4056a5:	mov    eax,DWORD PTR [ebp-0x18]
  4056a8:	mov    ecx,DWORD PTR [ebp+0x8]
  4056ab:	add    ecx,DWORD PTR [eax+0x1c]
  4056ae:	mov    eax,edi
  4056b0:	mov    DWORD PTR [ebp-0x18],ecx
  4056b3:	jmp    0x407a6b
  4056b8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4056bb:	mov    edx,DWORD PTR [ebp+0x8]
  4056be:	add    edx,DWORD PTR [ecx+esi*4]
  4056c1:	mov    DWORD PTR [ebp-0x28],edx
  4056c4:	mov    ecx,DWORD PTR [ebp-0x4]
  4056c7:	mov    edx,DWORD PTR [ebp-0x28]
  4056ca:	xor    ecx,ebx
  4056cc:	add    ecx,eax
  4056ce:	cmp    edx,ecx
  4056d0:	je     0x407a6b
  4056d6:	jmp    0x407a57
  4056db:	mov    ecx,DWORD PTR [ebp-0x4]
  4056de:	mov    edx,DWORD PTR [ebp-0x8]
  4056e1:	xor    ecx,ebx
  4056e3:	add    ecx,eax
  4056e5:	cmp    edx,ecx
  4056e7:	je     0x407aaf
  4056ed:	jmp    0x407a45
  4056f2:	or     al,0xd7
  4056f4:	xchg   ebp,eax
  4056f5:	loop   0x40576c
  4056f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056f8:	emms   
  4056fa:	adc    dl,BYTE PTR ds:0xd52ef58a
  405700:	sar    bh,1
  405702:	xlat   BYTE PTR ds:[ebx]
  405703:	pop    edi
  405704:	jp     0x405780
  405706:	aaa    
  405707:	pop    edi
  405708:	jp     0x405784
  40570a:	out    0x83,eax
  40570c:	ss std 
  40570e:	(bad)  
  40570f:	jbe    0x405704
  405711:	inc    ecx
  405712:	in     eax,0xd6
  405714:	mov    bh,0x25
  405716:	icebp  
  405717:	sub    al,0xb1
  405719:	dec    ecx
  40571a:	addr16 adc ebx,ebx
  40571d:	and    bh,al
  40571f:	outs   dx,BYTE PTR ds:[esi]
  405720:	push   ss
  405721:	cs push esi
  405723:	push   cs
  405724:	xor    al,dl
  405726:	push   0xc
  405728:	cld    
  405729:	mov    cl,0xe2
  40572b:	aas    
  40572c:	jbe    0x405763
  40572e:	push   0x9e4e95cd
  405733:	in     al,dx
  405734:	push   ecx
  405735:	inc    ecx
  405736:	xchg   ebx,eax
  405737:	cmc    
  405738:	inc    eax
  405739:	nop
  40573a:	add    eax,0xd8648d98
  40573f:	sahf   
  405740:	ds inc edx
  405742:	ins    BYTE PTR es:[edi],dx
  405743:	retf   
  405744:	sub    edi,DWORD PTR [ebx-0x76]
  405747:	xor    BYTE PTR [eax],cl
  405749:	or     edx,eax
  40574b:	or     DWORD PTR [esi-0x23cd7b85],0xffffffb0
  405752:	stos   BYTE PTR es:[edi],al
  405753:	add    DWORD PTR [esi+0x1d],0x7c
  405757:	(bad)  
  405758:	jo     0x40570e
  40575a:	(bad)  
  40575b:	push   ebx
  40575c:	sbb    edi,0x4dd17b84
  405762:	push   ds
  405763:	rol    BYTE PTR [ecx+0x5d19f6c5],cl
  405769:	popf   
  40576a:	not    ch
  40576c:	das    
  40576d:	and    esi,esp
  40576f:	mov    al,ds:0xa826afcb
  405774:	xchg   edx,eax
  405775:	mov    esi,0x63dc2eaa
  40577a:	mov    edi,0x713565dc
  40577f:	xor    eax,0xd364784e
  405784:	jno    0x405787
  405786:	cdq    
  405787:	add    BYTE PTR [edi],bl
  405789:	aas    
  40578a:	pop    ss
  40578b:	fmul   st(4),st
  40578d:	(bad)  
  40578f:	cli    
  405790:	adc    eax,0x7254607d
  405795:	ds inc ebp
  405797:	(bad)  
  405798:	ror    BYTE PTR [eax+ebp*2-0x14],cl
  40579c:	idiv   DWORD PTR [edi+ecx*1-0x72]
  4057a0:	push   ecx
  4057a1:	imul   esi,DWORD PTR [edi],0x59702c61
  4057a7:	mov    ebx,0x3ae582b4
  4057ac:	dec    ebx
  4057ad:	push   ecx
  4057ae:	pop    ebx
  4057af:	mov    ch,0xcf
  4057b1:	cmp    al,0xf2
  4057b3:	mov    ebp,0x4404709e
  4057b8:	push   ebp
  4057b9:	mov    WORD PTR [ecx+edi*8+0x3c],gs
  4057bd:	retf   0xa447
  4057c0:	jg     0x405797
  4057c2:	inc    esi
  4057c3:	cmp    DWORD PTR ds:0xbf6b3a08,esp
  4057c9:	pusha  
  4057ca:	xchg   ebp,eax
  4057cb:	call   0x1105:0xc1f1ae8
  4057d2:	dec    edx
  4057d3:	sub    eax,0xd3966ee3
  4057d8:	mov    es,edx
  4057da:	adc    esp,ebp
  4057dc:	aad    0x96
  4057de:	ds ret 
  4057e0:	lahf   
  4057e1:	into   
  4057e2:	ins    DWORD PTR es:[edi],dx
  4057e3:	pusha  
  4057e4:	imul   ecx,DWORD PTR ds:[eax*4-0x7cdb85bc],0x58
  4057ed:	vpcmpgtd xmm2,xmm2,XMMWORD PTR [ecx+0x11b13fc5]
  4057f5:	std    
  4057f6:	adc    al,0xe5
  4057f8:	pop    esp
  4057f9:	aaa    
  4057fa:	inc    ebx
  4057fb:	pop    ebp
  4057fc:	adc    cl,BYTE PTR [ecx]
  4057fe:	sub    BYTE PTR [edi+0x26],dl
  405801:	dec    ebx
  405802:	jno    0x405866
  405804:	cdq    
  405805:	jl     0x405789
  405807:	(bad)  [ecx]
  405809:	arpl   bx,cx
  40580b:	ins    BYTE PTR es:[edi],dx
  40580c:	lods   eax,DWORD PTR ds:[esi]
  40580d:	repz cmp eax,edx
  405810:	je     0x405817
  405812:	(bad)  
  405813:	data16 cli 
  405815:	xor    edi,DWORD PTR [ebx-0x2414f3b8]
  40581b:	cmp    esp,DWORD PTR [eax]
  40581d:	pop    edi
  40581e:	ds mov edi,0x96195d85
  405824:	pop    ebp
  405825:	dec    eax
  405826:	call   0x4c1d3061
  40582b:	(bad)  
  40582c:	fcmovu st,st(6)
  40582e:	dec    esi
  40582f:	sub    ch,BYTE PTR [eax-0x43]
  405832:	idiv   BYTE PTR [ebp+ecx*1-0x10]
  405836:	xor    BYTE PTR [edx],ah
  405838:	in     eax,0x3d
  40583a:	adc    dh,BYTE PTR [esi+0x28]
  40583d:	push   ss
  40583e:	ja     0x4057dc
  405840:	fadd   DWORD PTR [ebx+0x75]
  405843:	push   ebp
  405844:	ret    
  405845:	sahf   
  405846:	dec    edx
  405847:	mov    bh,0x32
  405849:	pop    ebx
  40584a:	mov    ds:0x584bea34,eax
  40584f:	pusha  
  405850:	mov    al,0xae
  405852:	pop    edi
  405853:	pop    ecx
  405854:	add    al,0xe0
  405856:	adc    ah,BYTE PTR [ecx]
  405858:	jno    0x405819
  40585a:	sub    BYTE PTR [eax-0x7b0cd43f],0x9
  405861:	jne    0x40584e
  405863:	dec    ecx
  405864:	dec    eax
  405865:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405866:	dec    ecx
  405867:	fldl2e 
  405869:	cmp    edi,DWORD PTR [ecx+0x64]
  40586c:	xchg   ebp,eax
  40586d:	aaa    
  40586e:	xor    eax,0x8f20bef8
  405873:	jae    0x4058d5
  405875:	lahf   
  405876:	ja     0x4058f6
  405878:	repz repz ds js 0x4058d7
  40587d:	arpl   WORD PTR ds:0xf7cb355,bp
  405883:	(bad)  
  405884:	dec    ecx
  405885:	test   eax,esi
  405887:	add    esp,eax
  405889:	fisttp QWORD PTR [esi-0x62]
  40588c:	cs cmp ebp,esi
  40588f:	inc    ecx
  405890:	arpl   dx,si
  405892:	js     0x40582a
  405894:	cmp    BYTE PTR [edi-0x3d64d0cb],0xcb
  40589b:	sub    eax,0x34ae3db9
  4058a0:	dec    edx
  4058a1:	push   ecx
  4058a2:	cmp    al,BYTE PTR [edi-0x23]
  4058a5:	ret    
  4058a6:	jno    0x405838
  4058a8:	pop    ebx
  4058a9:	test   al,0x8
  4058ab:	mov    cl,0xc3
  4058ad:	mov    bh,0xb6
  4058af:	int    0xdb
  4058b1:	pop    edi
  4058b2:	xor    cl,BYTE PTR [ecx]
  4058b4:	jns    0x4058e2
  4058b6:	jecxz  0x405894
  4058b8:	jge    0x4058f7
  4058ba:	push   edx
  4058bb:	jl     0x405844
  4058bd:	cmp    bh,BYTE PTR [ebx-0x39]
  4058c0:	sub    eax,0xe5ea9568
  4058c5:	jp     0x40591e
  4058c7:	xor    dl,bh
  4058c9:	push   0x5683f23d
  4058ce:	std    
  4058cf:	test   dh,bl
  4058d1:	push   0xae8df0ae
  4058d6:	aad    0xb8
  4058d8:	sbb    cl,BYTE PTR [ebx+0x4d]
  4058db:	(bad)  
  4058dc:	sahf   
  4058dd:	xchg   esi,eax
  4058de:	inc    ebx
  4058df:	add    eax,0x9bd78989
  4058e4:	aaa    
  4058e5:	call   0x6a55:0x5aa2a52e
  4058ec:	ds in  eax,dx
  4058ee:	je     0x405935
  4058f0:	jg     0x405883
  4058f2:	fsubr  st(4),st
  4058f4:	enter  0xb42f,0xd1
  4058f8:	jl     0x405947
  4058fa:	inc    ebp
  4058fb:	(bad)  
  4058fc:	stc    
  4058fd:	popa   
  4058fe:	sti    
  4058ff:	repz mov sp,0xd8eb
  405904:	sar    DWORD PTR [edx*4-0x502b18f1],cl
  40590b:	repnz pushf 
  40590d:	fs adc al,0x5a
  405910:	js     0x405977
  405912:	test   DWORD PTR [edi-0x54],eax
  405915:	daa    
  405916:	or     esi,ebx
  405918:	sub    BYTE PTR [ebp+0x59310dd3],ch
  40591e:	into   
  40591f:	jle    0x4058f6
  405921:	cs cld 
  405923:	fnsave [edi-0x3b]
  405926:	mov    dl,0xaa
  405928:	jno    0x4058e3
  40592a:	idiv   bl
  40592c:	push   ss
  40592d:	bswap  ebp
  40592f:	stc    
  405930:	or     eax,0xcbe107d7
  405935:	outs   dx,BYTE PTR ds:[esi]
  405936:	xchg   edi,eax
  405937:	test   al,0x9d
  405939:	and    eax,0xdec81196
  40593e:	mov    eax,ds:0x5754608e
  405943:	push   ds
  405944:	jne    0x4058c6
  405946:	sub    BYTE PTR [ecx-0x75398b63],ch
  40594c:	enter  0xc454,0x28
  405950:	fsub   QWORD PTR ds:0x9dd6349
  405956:	jno    0x40594a
  405958:	je     0x405987
  40595a:	test   eax,0xa90023fc
  40595f:	test   al,0x48
  405961:	test   al,0x48
  405963:	jae    0x40591c
  405965:	adc    DWORD PTR [ecx],edx
  405967:	adc    al,0x5
  405969:	dec    esp
  40596a:	rcr    BYTE PTR [eax-0x38],1
  40596d:	mov    ds:0x3e120194,al
  405972:	in     al,0xf8
  405974:	sbb    eax,0x9b4c33d2
  405979:	imul   esi,DWORD PTR [eax],0x9df4ecf1
  40597f:	inc    ebp
  405980:	aam    0xe9
  405982:	dec    ebx
  405983:	aam    0xc
  405985:	fld    TBYTE PTR [edx-0x79]
  405988:	out    0xb,eax
  40598a:	sbb    cl,BYTE PTR [ebx]
  40598c:	pop    esp
  40598d:	dec    eax
  40598e:	add    bl,BYTE PTR [edi-0x34]
  405991:	leave  
  405992:	icebp  
  405993:	mov    ch,0x1d
  405995:	mov    esp,0x703691f0
  40599a:	(bad)  
  40599b:	jmp    0x6e73:0xf064c144
  4059a2:	lock mov bl,0xf1
  4059a5:	cld    
  4059a6:	pop    ebx
  4059a7:	in     eax,dx
  4059a8:	sbb    al,BYTE PTR [esi-0x52]
  4059ab:	sub    al,0x36
  4059ad:	sbb    bh,ch
  4059af:	in     al,0x9c
  4059b1:	int    0xd6
  4059b3:	pop    esi
  4059b4:	fsubr  QWORD PTR [ebp+0x10]
  4059b7:	out    dx,eax
  4059b8:	cmp    al,BYTE PTR [ecx]
  4059ba:	sbb    dh,bh
  4059bc:	sbb    BYTE PTR [esi-0x7d],ch
  4059bf:	and    ebp,0xaaa67d1a
  4059c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059c6:	cld    
  4059c7:	xlat   BYTE PTR ds:[ebx]
  4059c8:	and    BYTE PTR ds:0x8efb6010,0xd5
  4059cf:	mov    ah,cl
  4059d1:	mov    ds:0x6aefe883,eax
  4059d6:	jmp    0xeb3b:0xc4389e86
  4059dd:	jmp    0x6c41:0x34e84d83
  4059e4:	fwait
  4059e5:	repz out 0x45,eax
  4059e8:	fcom   st(2)
  4059ea:	test   DWORD PTR [ecx],edx
  4059ec:	mov    ds:0x8678838b,al
  4059f1:	ins    DWORD PTR es:[edi],dx
  4059f2:	mov    ?,WORD PTR [ebp+0x76]
  4059f5:	loop   0x405a1b
  4059f7:	xor    DWORD PTR [edx+0x6a559f52],ebp
  4059fd:	aaa    
  4059fe:	and    eax,edi
  405a00:	and    BYTE PTR [ebx+0x6d540d1e],ch
  405a06:	pop    esi
  405a07:	es inc ebx
  405a09:	rol    DWORD PTR [edi+0x50534e3c],1
  405a0f:	in     al,0xd8
  405a11:	(bad)  
  405a12:	test   DWORD PTR [eax-0x167b780a],0xea1e49f7
  405a1c:	push   edx
  405a1d:	data16 jo 0x4059fb
  405a20:	or     al,BYTE PTR [ecx+0x53]
  405a23:	and    ah,al
  405a25:	jle    0x4059e5
  405a27:	and    esi,DWORD PTR [eax]
  405a29:	lds    esp,FWORD PTR [esi]
  405a2b:	dec    edi
  405a2c:	inc    esp
  405a2d:	jecxz  0x405a39
  405a2f:	aam    0x62
  405a31:	inc    edx
  405a32:	mov    dl,0x27
  405a34:	es xchg ebx,eax
  405a36:	or     DWORD PTR [ebx-0x64c4d8ff],ebp
  405a3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a3d:	mov    ch,0xa9
  405a3f:	stc    
  405a40:	mov    DWORD PTR [ebx-0x6a],eax
  405a43:	retf   
  405a44:	nop
  405a45:	and    bh,dl
  405a47:	iret   
  405a48:	leave  
  405a49:	pop    edx
  405a4a:	xor    eax,0x56dd1cd7
  405a4f:	mov    esp,0x8dfb0eac
  405a54:	adc    eax,DWORD PTR [edi+0x5d]
  405a57:	mov    ds:0xd4df7d9,eax
  405a5c:	dec    esi
  405a5d:	stc    
  405a5e:	bound  ebp,QWORD PTR [edi]
  405a60:	pop    ebx
  405a61:	xchg   ecx,eax
  405a62:	repz fwait
  405a64:	leave  
  405a65:	scas   al,BYTE PTR es:[edi]
  405a66:	shl    BYTE PTR [edi-0x22],1
  405a69:	test   al,0x78
  405a6b:	(bad)  
  405a6c:	push   cs
  405a6d:	std    
  405a6e:	sbb    al,0xa1
  405a70:	pusha  
  405a71:	push   ecx
  405a72:	out    0xa1,eax
  405a74:	xchg   dh,dl
  405a76:	pop    ds
  405a77:	mov    edi,0xb51c1c82
  405a7c:	retf   
  405a7d:	and    al,0x0
  405a7f:	push   ss
  405a80:	xchg   edi,eax
  405a81:	mov    cr0,edi
  405a84:	stos   DWORD PTR es:[edi],eax
  405a85:	ins    DWORD PTR es:[edi],dx
  405a86:	jl     0x405a66
  405a88:	pop    es
  405a89:	out    0x37,eax
  405a8b:	sbb    esi,DWORD PTR [eax-0x78]
  405a8e:	leave  
  405a8f:	push   es
  405a90:	movnti DWORD PTR ds:0xd81e98b2,esi
  405a97:	mov    WORD PTR [esp+edx*2+0x23],fs
  405a9b:	scas   al,BYTE PTR es:[edi]
  405a9c:	cmp    al,0x68
  405a9e:	and    eax,0x77baeb8f
  405aa3:	jnp    0x405b02
  405aa5:	int3   
  405aa6:	cmp    BYTE PTR [edx-0x5c],ah
  405aa9:	mov    ch,0x46
  405aab:	jo     0x405add
  405aad:	adc    eax,DWORD PTR [edx+0x750fec9a]
  405ab3:	in     al,dx
  405ab4:	sbb    ecx,ebp
  405ab6:	mov    eax,ds:0xb354bf4f
  405abb:	jg     0x405b35
  405abd:	ds adc ebp,edx
  405ac0:	mov    esi,DWORD PTR [edi+ecx*2+0x2340b7e1]
  405ac7:	push   ds
  405ac8:	jmp    0xcd7b697a
  405acd:	outs   dx,BYTE PTR ds:[esi]
  405ace:	addr16 pop es
  405ad0:	xor    ebp,DWORD PTR [ecx+0x56eaf899]
  405ad6:	lahf   
  405ad7:	mov    gs,WORD PTR [esi]
  405ad9:	mov    al,ds:0x33dd2732
  405ade:	sub    al,0x55
  405ae0:	pop    es
  405ae1:	jb     0x405acd
  405ae3:	xor    BYTE PTR [eax-0x10],dh
  405ae6:	sar    BYTE PTR [edi-0x4d],0x7f
  405aea:	sub    eax,0x6c1a2f09
  405aef:	push   edx
  405af0:	mov    esp,0x21471659
  405af5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405af6:	adc    DWORD PTR [esi+0x59],ecx
  405af9:	iret   
  405afa:	mov    al,0xab
  405afc:	inc    esp
  405afd:	(bad)  
  405afe:	fdiv   st,st(6)
  405b00:	nop
  405b01:	mov    DWORD PTR [esi-0x439f091a],ebp
  405b07:	fmul   st(1),st
  405b09:	xor    DWORD PTR [edx*8-0x454114a9],ebp
  405b10:	fwait
  405b11:	adc    eax,0x4e25856a
  405b16:	pop    ss
  405b17:	dec    ebp
  405b18:	adc    bl,BYTE PTR [ebp+0x9]
  405b1b:	or     bh,BYTE PTR [ebx-0x4b]
  405b1e:	jae    0x405acc
  405b20:	daa    
  405b21:	push   ebx
  405b22:	cmc    
  405b23:	mov    ebx,0xe1be76bd
  405b28:	inc    edi
  405b29:	test   DWORD PTR [ebx-0x53],ecx
  405b2c:	fild   WORD PTR [esi+ebx*1+0x59]
  405b30:	aad    0x50
  405b32:	or     eax,0x9fe6b4b0
  405b37:	adc    ebx,DWORD PTR [edx+0x44]
  405b3a:	sbb    al,0x1b
  405b3c:	jecxz  0x405ade
  405b3e:	lea    ebp,ds:0x17625a7c
  405b44:	aam    0xe5
  405b46:	mov    ds:0xc8633e04,al
  405b4b:	lock sbb DWORD PTR [esi+0x6fd2cdbb],eax
  405b52:	mov    WORD PTR [edx+0x26],es
  405b55:	fstp   DWORD PTR [ecx+0xa]
  405b58:	xchg   esi,eax
  405b59:	jb     0x405b1a
  405b5b:	imul   esi,esp,0x54abe93f
  405b61:	push   eax
  405b62:	test   al,0x81
  405b64:	mov    fs,WORD PTR [ebx+ecx*8-0x7b389e26]
  405b6b:	scas   al,BYTE PTR es:[edi]
  405b6c:	loope  0x405b92
  405b6e:	adc    BYTE PTR [esi],cl
  405b70:	mov    esi,0xea7cbe6c
  405b75:	adc    BYTE PTR ds:0xbfb303ed,bl
  405b7b:	cmp    DWORD PTR [ecx-0x62],esi
  405b7e:	pushf  
  405b7f:	dec    edx
  405b80:	sbb    DWORD PTR [eax-0x4c459c74],esi
  405b86:	push   ecx
  405b87:	test   BYTE PTR [ebx+0x62cb7c6a],ah
  405b8d:	enter  0x8d3,0xa2
  405b91:	pop    edx
  405b92:	push   0x18
  405b94:	xchg   ebp,eax
  405b95:	adc    eax,0xf4be6fbc
  405b9a:	and    al,0x17
  405b9c:	test   ecx,0x32a4fbf7
  405ba2:	(bad)  
  405ba3:	xor    al,BYTE PTR [edx]
  405ba5:	inc    esp
  405ba6:	mov    bl,0xda
  405ba8:	lock or BYTE PTR [ecx],dh
  405bab:	sub    eax,0xbb8ea2ad
  405bb0:	shr    ebp,1
  405bb2:	arpl   WORD PTR ds:0x44366437,si
  405bb8:	(bad)  
  405bb9:	dec    eax
  405bba:	ja     0x405bee
  405bbc:	aam    0x8c
  405bbe:	mov    edx,0x83669826
  405bc3:	mov    ebp,edi
  405bc5:	lahf   
  405bc6:	push   0x3410dcb8
  405bcb:	mov    bl,0x1b
  405bcd:	shl    BYTE PTR ds:[esi+0x2a],cl
  405bd1:	(bad)  
  405bd2:	dec    ebx
  405bd3:	xor    eax,0xdc2e2c20
  405bd8:	cs jg  0x405c44
  405bdb:	jno    0x405bbd
  405bdd:	inc    ecx
  405bde:	scas   al,BYTE PTR es:[edi]
  405bdf:	cmp    eax,0x738f2afc
  405be4:	sbb    DWORD PTR [edx],esi
  405be6:	out    dx,eax
  405be7:	cmp    al,0x8
  405be9:	fldcw  WORD PTR [eax+0x6566e461]
  405bef:	imul   edx,DWORD PTR [edx-0x2a6f9a2b],0x589bb53
  405bf9:	loopne 0x405bf2
  405bfb:	and    eax,0x3236a65a
  405c00:	or     BYTE PTR [edx],0xed
  405c03:	xor    DWORD PTR [edx],edi
  405c05:	mov    al,ds:0x89afc17b
  405c0a:	sub    al,0x91
  405c0c:	rol    DWORD PTR [eax-0x3f],cl
  405c0f:	test   al,0xc3
  405c11:	add    eax,0x66fb88c2
  405c16:	dec    eax
  405c17:	mov    esp,0xc70540e7
  405c1c:	sbb    DWORD PTR [esi-0x13],ecx
  405c1f:	iret   
  405c20:	mov    dl,0x75
  405c22:	ins    DWORD PTR es:[edi],dx
  405c23:	into   
  405c24:	std    
  405c25:	(bad)  
  405c27:	cs sti 
  405c29:	push   0xffffffb8
  405c2b:	fcom   DWORD PTR [eax]
  405c2d:	mov    dh,0x3c
  405c2f:	mov    ecx,0x8e9ab76d
  405c34:	and    al,0xe
  405c36:	repnz sar DWORD PTR [eax],1
  405c39:	(bad)  
  405c3a:	push   ss
  405c3b:	sub    ebp,DWORD PTR [eax+ecx*4-0x71]
  405c3f:	add    al,0xee
  405c41:	ror    DWORD PTR [eax+edx*8+0x1a586d54],1
  405c48:	xchg   DWORD PTR [ebx-0x6762169b],ebp
  405c4e:	ror    bh,cl
  405c50:	ret    
  405c51:	mov    cl,0x3d
  405c53:	pop    ebx
  405c54:	adc    ecx,DWORD PTR [ebx+0x4715ad6]
  405c5a:	mov    DWORD PTR [ecx-0x41],edx
  405c5d:	dec    edx
  405c5e:	leave  
  405c5f:	inc    esi
  405c60:	inc    ebp
  405c61:	lahf   
  405c62:	aas    
  405c63:	hlt    
  405c64:	sub    edi,DWORD PTR [eax]
  405c66:	xchg   esp,eax
  405c67:	jne    0x405c10
  405c69:	add    ebx,DWORD PTR [esi+0x5e]
  405c6c:	sub    ebp,0xd95e5b18
  405c72:	imul   esp,DWORD PTR [edx],0xe
  405c75:	retf   0xbee
  405c78:	xchg   ecx,eax
  405c79:	call   0xad0c:0xd44fadaa
  405c80:	xlat   BYTE PTR ds:[ebx]
  405c81:	js     0x405c15
  405c83:	mov    ebx,0x7c8f2234
  405c88:	sbb    ebp,DWORD PTR [edx+0x463e9c30]
  405c8e:	add    esp,DWORD PTR ds:0x4f1a7c30
  405c94:	mov    al,ds:0x4651294c
  405c99:	push   edi
  405c9a:	jmp    0x694e:0xa85610de
  405ca1:	pop    ebp
  405ca2:	dec    ebx
  405ca3:	xchg   edx,eax
  405ca5:	xchg   DWORD PTR [edi-0x63],edx
  405ca8:	xor    eax,0x8994973
  405cad:	inc    eax
  405cae:	inc    esp
  405caf:	mov    dl,0x73
  405cb1:	stos   BYTE PTR es:[edi],al
  405cb2:	jmp    0x9b665ffa
  405cb7:	pop    ss
  405cb8:	aaa    
  405cb9:	jl     0x405d1d
  405cbb:	fadd   DWORD PTR [esp+ecx*4]
  405cbe:	sub    BYTE PTR [ebp-0xe],ah
  405cc1:	neg    DWORD PTR [edx+0x4af97916]
  405cc7:	jae    0x405d04
  405cc9:	shl    BYTE PTR [eax+esi*2+0x74],0x66
  405cce:	fmul   st(2),st
  405cd0:	xor    al,0x67
  405cd2:	enter  0x3d04,0xe9
  405cd6:	jno    0x405c6f
  405cd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cd9:	test   eax,edx
  405cdb:	push   edx
  405cdd:	and    ecx,eax
  405cdf:	iret   
  405ce0:	dec    edi
  405ce1:	(bad)  
  405ce2:	jecxz  0x405cc5
  405ce4:	jne    0x405cb1
  405ce6:	in     al,dx
  405ce7:	fadd   DWORD PTR [esi]
  405ce9:	call   0xb7a1:0xfb49f832
  405cf0:	fadd   QWORD PTR [esp+edx*1-0x48162190]
  405cf7:	mov    ecx,0xf6c211ca
  405cfc:	shl    DWORD PTR [eax-0x5b0f30d3],cl
  405d02:	jo     0x405cd9
  405d04:	adc    eax,0xa7914a3a
  405d09:	mov    ?,WORD PTR [esi+ebx*4+0x60733932]
  405d10:	mov    esi,0xb1f3eb14
  405d15:	sub    DWORD PTR [eax-0x7d],ebp
  405d18:	cwde   
  405d19:	cli    
  405d1a:	ja     0x405d40
  405d1c:	stos   BYTE PTR es:[edi],al
  405d1d:	out    dx,eax
  405d1e:	stos   DWORD PTR es:[edi],eax
  405d1f:	push   edi
  405d20:	xchg   ebp,eax
  405d21:	mov    ds:0x9583155c,eax
  405d26:	mov    al,0x32
  405d28:	push   ecx
  405d29:	inc    eax
  405d2a:	fidiv  WORD PTR [ebx+0x6b]
  405d2d:	sbb    eax,0xa09deada
  405d32:	xchg   edi,eax
  405d33:	jo     0x405dae
  405d35:	push   es
  405d36:	inc    esi
  405d37:	pop    edi
  405d38:	xchg   cl,bl
  405d3a:	cmp    eax,0x383beb0e
  405d3f:	xchg   al,cl
  405d41:	xor    ebx,esp
  405d43:	aas    
  405d44:	pop    ds
  405d45:	inc    edx
  405d46:	and    eax,0xf1f38e7
  405d4b:	leave  
  405d4c:	scas   al,BYTE PTR es:[edi]
  405d4d:	int3   
  405d4e:	cmc    
  405d4f:	jo     0x405dc1
  405d51:	cli    
  405d52:	add    BYTE PTR [eax-0x369cace9],dl
  405d58:	push   ebp
  405d59:	or     al,0x7c
  405d5b:	add    ebp,DWORD PTR [eax]
  405d5d:	ficom  DWORD PTR [ebx-0x5d27e1d8]
  405d63:	or     BYTE PTR [edi+0xa],bh
  405d66:	inc    ebp
  405d67:	or     ebp,DWORD PTR [eax-0x35]
  405d6a:	push   eax
  405d6b:	jge    0x405d8e
  405d6d:	ret    
  405d6e:	int    0x79
  405d70:	addr16 mov dh,0x9d
  405d73:	xchg   DWORD PTR [eax+eiz*4-0x49],esi
  405d77:	fnstsw WORD PTR [ebx+esi*1]
  405d7a:	aas    
  405d7b:	push   edi
  405d7c:	popf   
  405d7d:	sbb    BYTE PTR [ecx-0x26231369],ah
  405d83:	push   0xffffff86
  405d85:	xchg   esi,eax
  405d86:	or     ah,BYTE PTR [ecx-0x2b]
  405d89:	addr16 add al,al
  405d8c:	cmp    DWORD PTR [edx-0x76],0xe34d6e2d
  405d93:	xlat   BYTE PTR ds:[ebx]
  405d94:	call   0x74c0:0x279a750a
  405d9b:	mov    DWORD PTR [ebx],edi
  405d9d:	test   BYTE PTR [ebp+0x1eb6ead9],bl
  405da3:	int3   
  405da4:	xchg   ebp,eax
  405da5:	cmp    ebp,edi
  405da7:	(bad)  
  405da8:	cli    
  405da9:	adc    eax,0x33f40ea0
  405dae:	dec    eax
  405daf:	arpl   WORD PTR [edx+0x59],dx
  405db2:	push   ss
  405db3:	mov    ecx,esi
  405db5:	xchg   edi,eax
  405db6:	xor    BYTE PTR [ecx-0x47],0x31
  405dba:	inc    esp
  405dbb:	test   al,0x97
  405dbd:	or     eax,0xee8ed8c3
  405dc2:	xchg   edi,eax
  405dc3:	push   ebp
  405dc4:	xchg   esp,eax
  405dc5:	pusha  
  405dc6:	mov    ecx,0xf0dbd4cc
  405dcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405dcc:	popf   
  405dcd:	cmp    esp,eax
  405dcf:	into   
  405dd0:	push   esi
  405dd1:	add    al,0xb3
  405dd3:	stos   BYTE PTR es:[edi],al
  405dd4:	or     ebx,DWORD PTR [ebp-0x70]
  405dd7:	dec    ecx
  405dd8:	pop    ds
  405dd9:	ds inc esp
  405ddb:	pop    esp
  405ddc:	mov    bl,0xe6
  405dde:	pushf  
  405ddf:	or     esp,DWORD PTR [ebx]
  405de1:	inc    edi
  405de2:	sbb    DWORD PTR [eax+0x33426227],esp
  405de8:	push   ss
  405de9:	jp     0x405d96
  405deb:	jmp    0x6725:0x686cf4f7
  405df2:	push   edx
  405df3:	pop    eax
  405df4:	or     cl,BYTE PTR [edx]
  405df6:	pushf  
  405df7:	loop   0x405dc0
  405df9:	test   eax,0x4bb45bed
  405dfe:	jae    0x405df0
  405e00:	push   ebx
  405e01:	or     BYTE PTR [ebx+ecx*1+0x4c0dbaf3],dl
  405e08:	pop    ebp
  405e09:	cmp    al,ch
  405e0b:	cld    
  405e0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e0d:	pusha  
  405e0e:	push   0xffffff93
  405e10:	mov    eax,ds:0xa17a64d0
  405e15:	shl    BYTE PTR ds:0x1e9e9b81,1
  405e1b:	push   edi
  405e1c:	les    edx,FWORD PTR [edx]
  405e1e:	sbb    al,0x91
  405e20:	sub    ebp,edx
  405e22:	xor    dh,BYTE PTR [ebp+0x29]
  405e25:	cmp    eax,DWORD PTR [ebp+0x7e3ec70b]
  405e2b:	imul   edi,DWORD PTR [edi-0x55],0x20
  405e2f:	(bad)  
  405e31:	loop   0x405e1f
  405e33:	and    edi,ebp
  405e35:	sbb    al,0xa6
  405e37:	inc    edx
  405e38:	test   eax,0xf45a695e
  405e3d:	pushf  
  405e3e:	pop    ds
  405e3f:	out    dx,eax
  405e40:	test   BYTE PTR [esi],dh
  405e42:	mov    edi,0x5955f695
  405e47:	cs mov ebx,0x7d573d6
  405e4d:	(bad)  
  405e51:	bound  edx,QWORD PTR [edi]
  405e53:	cdq    
  405e54:	int    0x78
  405e56:	loope  0x405e35
  405e58:	add    DWORD PTR [esi-0xd5f975c],ebx
  405e5e:	pop    edx
  405e5f:	inc    edx
  405e60:	stos   BYTE PTR es:[edi],al
  405e61:	cmp    BYTE PTR es:[esi-0x1e933064],cl
  405e68:	sub    bl,BYTE PTR [eax+0x1b]
  405e6b:	outs   dx,BYTE PTR ds:[esi]
  405e6c:	rcr    BYTE PTR [ebx+ecx*1],cl
  405e6f:	jae    0x405e00
  405e71:	or     ah,BYTE PTR [edi]
  405e73:	mov    eax,0x331b5b22
  405e78:	pop    esi
  405e79:	daa    
  405e7a:	fdivr  QWORD PTR [edx-0x69]
  405e7d:	mov    ebp,0x88c5f1d2
  405e82:	nop
  405e83:	mov    dl,0x4c
  405e85:	sub    ebp,DWORD PTR [esi-0x7d65ffc3]
  405e8b:	sahf   
  405e8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e8d:	inc    edi
  405e8e:	xor    al,0x69
  405e90:	cs dec edx
  405e92:	hlt    
  405e93:	sti    
  405e94:	fsub   st,st(6)
  405e96:	lea    eax,[ecx]
  405e98:	push   ss
  405e99:	jns    0x405eb6
  405e9b:	and    eax,0x7ab58692
  405ea0:	stos   DWORD PTR es:[edi],eax
  405ea1:	adc    al,0x20
  405ea3:	mov    cl,0xd0
  405ea5:	jmp    0x7212:0xceb28c34
  405eac:	nop
  405ead:	jecxz  0x405e48
  405eaf:	xchg   edi,eax
  405eb0:	popf   
  405eb1:	cmp    dl,BYTE PTR [edi+0x7f]
  405eb4:	push   ecx
  405eb5:	out    0x98,eax
  405eb7:	outs   dx,DWORD PTR ds:[esi]
  405eb8:	ins    DWORD PTR es:[edi],dx
  405eb9:	inc    esi
  405eba:	iret   
  405ebb:	or     BYTE PTR [ecx],0x3b
  405ebe:	cwde   
  405ebf:	xor    al,0xc7
  405ec1:	nop
  405ec2:	mov    ch,dl
  405ec4:	sar    BYTE PTR [ebx-0x30],1
  405ec7:	mov    ecx,0x43c61c26
  405ecc:	cmp    eax,0x7500720a
  405ed1:	cmc    
  405ed2:	pushf  
  405ed3:	idiv   BYTE PTR [eax-0x69]
  405ed6:	push   esi
  405ed7:	xchg   ch,dh
  405ed9:	or     al,0x58
  405edb:	addr16 hlt 
  405edd:	out    0x50,eax
  405edf:	push   ebp
  405ee0:	sub    al,0xda
  405ee2:	sbb    al,0xb7
  405ee4:	mov    cl,0x8f
  405ee6:	(bad)  
  405ee7:	mov    ecx,0x29ca24ca
  405eec:	les    eax,FWORD PTR [edx]
  405eee:	shr    BYTE PTR [ecx],0xd5
  405ef1:	jnp    0x405ec8
  405ef3:	sub    eax,0xa10de66f
  405ef8:	ror    DWORD PTR [eax-0x30236fd3],1
  405efe:	popf   
  405eff:	(bad)  
  405f00:	fs mov ah,0xd
  405f03:	stos   DWORD PTR es:[edi],eax
  405f04:	stc    
  405f05:	out    0xf,eax
  405f07:	lock test DWORD PTR [edx],edx
  405f0a:	pop    ebx
  405f0b:	repnz mov ecx,0xb2f66d9c
  405f11:	cli    
  405f12:	xchg   ah,ch
  405f14:	push   ebp
  405f15:	loop   0x405f15
  405f17:	jp     0x405f30
  405f19:	shr    al,0x35
  405f1c:	push   edx
  405f1d:	mov    ecx,0xb385d6ba
  405f22:	and    esp,DWORD PTR [ebx-0x19257df9]
  405f28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f29:	and    BYTE PTR [edi+0x70035044],0xa9
  405f30:	scas   al,BYTE PTR es:[edi]
  405f31:	std    
  405f32:	sahf   
  405f33:	fnsave [eax-0x41ee95c4]
  405f39:	jo     0x405f0c
  405f3b:	xor    eax,0xd509fd1f
  405f40:	loop   0x405f40
  405f42:	cmp    BYTE PTR [ecx],dh
  405f44:	dec    edx
  405f45:	push   0xbd0e81c0
  405f4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f4b:	js     0x405f2a
  405f4d:	xlat   BYTE PTR ds:[ebx]
  405f4e:	ins    BYTE PTR es:[edi],dx
  405f4f:	pop    esp
  405f50:	lfs    eax,FWORD PTR ss:[edi+0x2b]
  405f55:	inc    esp
  405f56:	loope  0x405ee7
  405f58:	pushf  
  405f59:	sub    ebx,DWORD PTR ds:0x7b6d6ad0
  405f5f:	(bad)  [ecx-0x46]
  405f62:	dec    DWORD PTR [ecx-0x17bef4f3]
  405f68:	out    0xf5,al
  405f6a:	push   ecx
  405f6b:	cmp    eax,0xeeef2328
  405f70:	mov    al,ds:0x22609b07
  405f75:	lea    edi,[edi]
  405f77:	cmp    bl,BYTE PTR [edx+0x5b]
  405f7a:	enter  0x7bdc,0x98
  405f7e:	cwde   
  405f7f:	pop    ss
  405f80:	push   ebp
  405f81:	gs ss into 
  405f84:	dec    ebp
  405f85:	mov    esp,0x34d43758
  405f8a:	ins    BYTE PTR es:[edi],dx
  405f8b:	(bad)  
  405f8c:	lahf   
  405f8d:	xor    eax,0x5c813314
  405f92:	sbb    ebx,0xffffff8c
  405f95:	mov    ebp,0xb9d8b010
  405f9a:	mov    cl,0xb
  405f9c:	je     0x405f5f
  405f9e:	scas   eax,DWORD PTR es:[edi]
  405f9f:	int3   
  405fa0:	fld    DWORD PTR [edi-0x4b]
  405fa3:	xchg   edi,eax
  405fa4:	adc    eax,0x2468c5e4
  405faa:	repnz push cs
  405fac:	int    0x66
  405fae:	fild   DWORD PTR [ebp+0x5a]
  405fb1:	fucomip st,st(5)
  405fb3:	dec    edx
  405fb4:	jmp    0x6c6a76d9
  405fb9:	sbb    eax,0xb382f460
  405fbe:	aad    0xd5
  405fc0:	xor    al,0xe9
  405fc2:	sub    bl,BYTE PTR [edx-0x4f61e6fa]
  405fc8:	cmp    BYTE PTR [ecx+0x6e09b2e3],bh
  405fce:	cli    
  405fcf:	xchg   ebx,eax
  405fd0:	(bad)  
  405fd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fd2:	adc    BYTE PTR [eax-0x2be3d683],dl
  405fd8:	mov    BYTE PTR [edx+ebx*2+0x4c5daba6],ch
  405fdf:	shr    BYTE PTR [edi+0x39],1
  405fe2:	jo     0x406038
  405fe4:	mov    esp,0x63e3bfe6
  405fe9:	neg    BYTE PTR [ebp+0x18053ff2]
  405fef:	pop    ebx
  405ff0:	mov    eax,0x2d89631e
  405ff5:	mov    edx,0x3d06a3fa
  405ffa:	jle    0x40605b
  405ffc:	pop    ebp
  405ffd:	int    0x22
  405fff:	mov    bh,0xa2
  406001:	popf   
  406002:	fcomp  DWORD PTR [eax]
  406004:	inc    ebx
  406005:	enter  0x5096,0x1b
  406009:	sahf   
  40600a:	dec    edi
  40600b:	inc    edi
  40600c:	clc    
  40600d:	push   ebp
  40600e:	mov    dh,0x60
  406010:	xor    bh,BYTE PTR [esi+0x202fc722]
  406016:	mov    bl,BYTE PTR [ebx-0x26]
  406019:	jns    0x405f9c
  40601b:	clc    
  40601c:	inc    eax
  40601d:	adc    BYTE PTR [edx-0x71],ch
  406020:	pop    ebp
  406021:	loopne 0x405ffd
  406023:	add    eax,esi
  406025:	cmp    al,0xe2
  406027:	scas   al,BYTE PTR es:[edi]
  406028:	lea    edi,[esi+eiz*8+0x1a]
  40602c:	loopne 0x406004
  40602e:	xchg   BYTE PTR [ebp-0x7c],ah
  406031:	pop    ebp
  406032:	out    dx,al
  406033:	sbb    ch,dl
  406035:	add    BYTE PTR [eax+0x43f3a9e0],cl
  40603b:	add    DWORD PTR [edx+esi*4+0x3179ce66],eax
  406042:	outs   dx,DWORD PTR ds:[esi]
  406043:	inc    edx
  406044:	icebp  
  406045:	div    DWORD PTR ds:0x4b071771
  40604b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40604c:	test   al,0xe3
  40604e:	div    DWORD PTR [esi+0x5190d7b5]
  406054:	adc    ch,dh
  406056:	imul   esi,edx,0xb
  406059:	mov    al,0x19
  40605b:	jae    0x405fe4
  40605d:	pop    eax
  40605e:	push   ss
  40605f:	mov    al,ds:0x407c3d6e
  406064:	pop    ecx
  406065:	cwde   
  406066:	ins    DWORD PTR es:[edi],dx
  406067:	outs   dx,DWORD PTR ds:[esi]
  406068:	adc    edi,DWORD PTR [ebx]
  40606a:	pop    esi
  40606b:	inc    esp
  40606c:	cmc    
  40606d:	lods   eax,DWORD PTR ds:[esi]
  40606e:	pop    ds
  40606f:	inc    edi
  406070:	js     0x405ffc
  406072:	pusha  
  406073:	add    al,0x62
  406075:	(bad)  
  406076:	retf   0x8031
  406079:	mov    ah,0x7d
  40607b:	pop    eax
  40607c:	mov    esi,0x43aa2807
  406081:	mov    ah,BYTE PTR [edx+0x2e]
  406084:	mov    ebp,0xdc2e737d
  406089:	lods   eax,DWORD PTR ds:[esi]
  40608a:	mov    ss,WORD PTR [esi]
  40608c:	push   esi
  40608d:	mov    ebx,0xbb995fed
  406092:	xchg   edi,eax
  406093:	call   0xdacae45d
  406098:	(bad)  
  406099:	repz call 0x796:0x43a5afaa
  4060a1:	adc    al,bh
  4060a3:	adc    dl,bh
  4060a5:	add    bh,ah
  4060a7:	and    ch,ah
  4060a9:	jmp    0xb547ccee
  4060ae:	adc    ebx,DWORD PTR [esi+0x347aeba1]
  4060b4:	cdq    
  4060b5:	in     eax,dx
  4060b6:	rcl    BYTE PTR [ecx+0x2d8e3b30],0x9e
  4060bd:	pop    ds
  4060be:	mov    esi,0x28f697be
  4060c3:	pop    ds
  4060c4:	out    0x2d,al
  4060c6:	and    BYTE PTR [edx+0x4bb50a8d],0xe7
  4060cd:	pop    ecx
  4060ce:	adc    eax,0x2a5f9381
  4060d3:	imul   esp,DWORD PTR [ecx],0xffffffb3
  4060d6:	pop    ecx
  4060d7:	mov    bh,0x93
  4060d9:	dec    ebp
  4060da:	jl     0x406135
  4060dc:	mov    dl,0x74
  4060de:	loop   0x4060dd
  4060e0:	sub    ch,0xdd
  4060e3:	adc    eax,0x82ce32d5
  4060e8:	jnp    0x4060b1
  4060ea:	or     al,0x5c
  4060ec:	cmp    BYTE PTR [ebx+eax*8],bh
  4060ef:	inc    edi
  4060f0:	scas   eax,DWORD PTR es:[edi]
  4060f1:	pushf  
  4060f2:	sub    al,BYTE PTR [ebx+0x40c2aa17]
  4060f8:	xor    al,0xb7
  4060fa:	cs ret 0xbf1
  4060fe:	scas   al,BYTE PTR es:[edi]
  4060ff:	gs cmp ebp,ebx
  406102:	sub    DWORD PTR [edi+0x63],edi
  406105:	mov    ebx,0xdd36f287
  40610a:	hlt    
  40610b:	arpl   WORD PTR [eax-0x2a],dx
  40610e:	mov    ebx,0x5da0d1c8
  406113:	daa    
  406114:	push   0x4167e9b0
  406119:	jp     0x4060ad
  40611b:	sar    bh,cl
  40611d:	xor    esp,DWORD PTR [ebp-0x25]
  406120:	dec    eax
  406121:	imul   eax,DWORD PTR [esp+ebx*2],0x9aefaecb
  406128:	loop   0x4060af
  40612a:	and    DWORD PTR [ebp+0x32],ebp
  40612d:	fdivr  DWORD PTR [eax-0x59]
  406130:	mov    ds:0x1784ef9a,al
  406135:	push   edi
  406136:	hlt    
  406137:	inc    ebx
  406138:	or     eax,0xa7157f87
  40613d:	and    al,0xf1
  40613f:	(bad)  
  406140:	shl    DWORD PTR [eax],cl
  406142:	scas   eax,DWORD PTR es:[edi]
  406143:	push   ebx
  406144:	fldcw  WORD PTR [ebp+eax*4+0x30]
  406148:	js     0x406125
  40614a:	xchg   edx,eax
  40614b:	xor    al,0xd8
  40614d:	mov    bh,0xc6
  40614f:	mov    BYTE PTR ds:0xdb379d84,bh
  406155:	in     eax,0x52
  406157:	js     0x406128
  406159:	push   ebp
  40615a:	int    0x7b
  40615c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40615d:	int3   
  40615e:	or     eax,0x874d44be
  406163:	jne    0x406169
  406165:	and    esp,DWORD PTR [edi+0x3c]
  406168:	sbb    BYTE PTR [ebx-0x74],0xb2
  40616c:	cmp    bl,dl
  40616e:	mul    edx
  406170:	out    dx,al
  406171:	sbb    al,0xa4
  406173:	cmp    al,0x3a
  406175:	xchg   ebp,eax
  406176:	call   0xeb055ba9
  40617b:	lods   eax,DWORD PTR ds:[esi]
  40617c:	lods   eax,DWORD PTR ds:[esi]
  40617d:	jecxz  0x4061e1
  40617f:	jns    0x4061e7
  406181:	fs push 0x39
  406184:	shr    bl,0x5a
  406187:	and    al,0x47
  406189:	(bad)  
  40618a:	fcomp  QWORD PTR [ebx]
  40618c:	jl     0x4061e3
  40618e:	into   
  40618f:	pop    esi
  406190:	pop    ds
  406191:	pop    ecx
  406192:	retf   0x2064
  406195:	mov    edx,0x503a548e
  40619a:	push   ebp
  40619b:	dec    ebp
  40619c:	loopne 0x4061be
  40619e:	popa   
  40619f:	sbb    al,0x99
  4061a1:	dec    BYTE PTR [edi]
  4061a3:	enter  0x274,0xc1
  4061a7:	lea    esi,[ebp+0x2e]
  4061aa:	sub    ah,al
  4061ac:	out    dx,eax
  4061ad:	jecxz  0x406173
  4061af:	push   eax
  4061b0:	jmp    0x40618f
  4061b2:	mov    cl,0x9a
  4061b4:	and    dh,cl
  4061b6:	clc    
  4061b7:	(bad)  
  4061b8:	aaa    
  4061b9:	(bad)  
  4061ba:	and    cl,BYTE PTR [esi+0x41]
  4061bd:	ror    BYTE PTR [ebp-0x2d3e10d],0xb9
  4061c4:	mov    ecx,0x86170a61
  4061c9:	mov    esi,0xa4f248b3
  4061ce:	xor    al,0x2
  4061d0:	loopne 0x406189
  4061d2:	mov    ds:0x2ad4c565,al
  4061d7:	aaa    
  4061d8:	jmp    0xca472306
  4061dd:	inc    eax
  4061de:	out    0xd3,eax
  4061e0:	nop
  4061e1:	dec    eax
  4061e2:	dec    esp
  4061e3:	and    esp,DWORD PTR [eax+0x2]
  4061e6:	pop    esp
  4061e7:	push   0xffffff93
  4061e9:	mov    ds:0x34da9086,al
  4061ee:	mov    ch,0x24
  4061f0:	imul   edx,DWORD PTR [esi+0x15f76b89],0x3
  4061f7:	xor    al,0xc5
  4061f9:	test   al,0xc3
  4061fb:	retf   0x6cdf
  4061fe:	lods   al,BYTE PTR ds:[esi]
  4061ff:	ror    esp,1
  406201:	xor    BYTE PTR [ebx+0x60],bl
  406204:	dec    ebx
  406205:	jge    0x406203
  406207:	test   al,0x86
  406209:	test   edi,0x42181a8b
  40620f:	push   es
  406210:	sbb    DWORD PTR [edi-0x297690b],esp
  406216:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406217:	sbb    BYTE PTR [ebp+0x3b],cl
  40621a:	push   ebp
  40621b:	fbstp  TBYTE PTR [edi]
  40621d:	imul   ebp,DWORD PTR [ecx],0x1e20e465
  406223:	sub    BYTE PTR [esi+0x41204416],dh
  406229:	test   DWORD PTR [ebx+0x11109c6],esi
  40622f:	ins    BYTE PTR es:[edi],dx
  406230:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406231:	sub    al,BYTE PTR [ecx-0x12]
  406234:	mov    ?,WORD PTR [edi+esi*8-0x6825bbeb]
  40623b:	xchg   DWORD PTR [esi-0x397645eb],esp
  406241:	(bad)  
  406242:	dec    edi
  406243:	mov    DWORD PTR [edi+0x6d49d034],edx
  406249:	mov    al,0x24
  40624b:	push   esp
  40624c:	mov    bl,0x85
  40624e:	cmp    eax,0xdeca0914
  406253:	add    al,0x37
  406255:	pushf  
  406256:	cmp    ebp,0xb74bbdb
  40625c:	into   
  40625d:	mov    cl,BYTE PTR [edi+0xefb6c03]
  406263:	push   eax
  406264:	jnp    0x4061f9
  406266:	xchg   edi,eax
  406267:	mov    al,0xfa
  406269:	mov    ebp,0xc103fd59
  40626e:	fsub   DWORD PTR [ebx+0x54fd09a0]
  406274:	addr16 aaa 
  406276:	loopne 0x406208
  406278:	or     eax,0xfd133d75
  40627d:	add    eax,0x96c26a28
  406282:	xchg   ecx,eax
  406283:	outs   dx,DWORD PTR ds:[esi]
  406284:	ret    
  406285:	or     al,0xcb
  406287:	stos   DWORD PTR es:[edi],eax
  406288:	retf   
  406289:	lock pushf 
  40628b:	nop
  40628c:	or     ebp,ebp
  40628e:	xchg   esi,eax
  40628f:	mov    edx,0x8a4b5af6
  406294:	stc    
  406295:	scas   al,BYTE PTR es:[edi]
  406296:	ret    
  406297:	rcl    DWORD PTR [ecx],1
  406299:	cli    
  40629a:	xor    DWORD PTR [esi-0x28],ebp
  40629d:	xor    DWORD PTR [eax+esi*1+0x2b],eax
  4062a1:	lea    ebx,[ecx]
  4062a3:	jno    0x4062eb
  4062a5:	pop    ebp
  4062a6:	pop    eax
  4062a7:	ror    BYTE PTR [ebx-0x74],1
  4062aa:	in     al,dx
  4062ab:	shl    edi,cl
  4062ad:	or     eax,DWORD PTR [esi]
  4062af:	cmc    
  4062b0:	push   ebx
  4062b1:	push   0xffffff84
  4062b3:	not    DWORD PTR [esi+ebp*1+0x68]
  4062b7:	test   al,0x7d
  4062b9:	xor    eax,0x1cb4ebd4
  4062be:	ins    BYTE PTR es:[edi],dx
  4062bf:	mov    eax,ds:0x2debac00
  4062c4:	fist   WORD PTR [ecx+0x7b]
  4062c7:	cli    
  4062c8:	mov    edx,0x2f28afc3
  4062cd:	jae    0x4062f4
  4062cf:	or     al,0x21
  4062d1:	clc    
  4062d2:	data16 mov bl,0xcd
  4062d5:	je     0x406355
  4062d7:	icebp  
  4062d8:	xlat   BYTE PTR ds:[ebx]
  4062d9:	add    BYTE PTR ds:0x3fe49a41,bh
  4062df:	inc    eax
  4062e0:	mov    WORD PTR [esi+ecx*4+0x1e],cs
  4062e4:	(bad)  
  4062e5:	mov    dl,0x22
  4062e7:	mov    ecx,ebp
  4062e9:	ud0    ecx,ebx
  4062ec:	jo     0x4062a6
  4062ee:	sub    ch,bl
  4062f0:	xchg   esp,eax
  4062f1:	loopne 0x4062da
  4062f3:	imul   DWORD PTR [ecx]
  4062f5:	mov    bh,0x5a
  4062f7:	xor    eax,0x2382478f
  4062fc:	inc    ebx
  4062fd:	push   ds
  4062fe:	push   0xb5e490f4
  406303:	mov    dh,0xb5
  406305:	cdq    
  406306:	add    eax,eax
  406308:	and    al,BYTE PTR [edi-0x5255c894]
  40630e:	fbld   TBYTE PTR gs:[ecx+0x61f89715]
  406315:	mov    DWORD PTR [ebx-0x20],edx
  406318:	into   
  406319:	ds dec edi
  40631b:	lods   eax,DWORD PTR ds:[esi]
  40631c:	and    bh,BYTE PTR [ebp-0x14]
  40631f:	scas   al,BYTE PTR es:[edi]
  406320:	scas   eax,DWORD PTR es:[edi]
  406321:	mov    bh,0x8
  406323:	add    ebp,0x55
  406326:	adc    edi,DWORD PTR [ebp-0x2873de1d]
  40632c:	xor    esp,DWORD PTR [ecx]
  40632e:	xor    DWORD PTR [edi],eax
  406330:	jns    0x4062c9
  406332:	in     al,0x7c
  406334:	jle    0x406357
  406336:	pop    edi
  406337:	and    esi,ebx
  406339:	cmp    eax,0x9b133aa0
  40633e:	push   eax
  40633f:	(bad)  
  406340:	mov    dh,0x5
  406342:	mov    dl,0x4
  406344:	jmp    0xacb32067
  406349:	popa   
  40634a:	inc    ecx
  40634b:	imul   esp,DWORD PTR [edx+0x6a6c7798],0x6d
  406352:	or     al,0xc3
  406354:	cmp    al,0x44
  406356:	pushf  
  406357:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406358:	adc    ebx,DWORD PTR [esi-0x5]
  40635b:	xchg   ebx,eax
  40635c:	shl    BYTE PTR [eax-0xdab5952],1
  406362:	retf   
  406363:	mov    cl,0x82
  406365:	dec    edi
  406366:	(bad)  
  406367:	mov    al,0x24
  406369:	mov    ds:0xcd5203dd,al
  40636e:	hlt    
  40636f:	shl    BYTE PTR [ebx+0x17],0xaf
  406373:	mov    al,0x53
  406375:	xchg   ebp,eax
  406376:	stc    
  406377:	fimul  DWORD PTR [ebp+eiz*8+0x7e]
  40637b:	jo     0x406315
  40637d:	cmc    
  40637e:	sub    DWORD PTR [ebx+ebp*2+0x40],0xa9e6df09
  406386:	imul   edx,DWORD PTR [ebp+0x7092a6d7],0xc08b8060
  406390:	or     cl,BYTE PTR [edx-0x33]
  406393:	xor    al,0x9b
  406395:	adc    DWORD PTR [eax+0x2b2974],eax
  40639b:	push   esp
  40639c:	test   edx,esp
  40639e:	sub    dl,BYTE PTR [ebx+ebx*2-0x1]
  4063a2:	les    eax,FWORD PTR [eax]
  4063a4:	adc    BYTE PTR [eax+ebp*2+0x67],ch
  4063a8:	out    dx,eax
  4063a9:	add    eax,0xc06e760
  4063ae:	loop   0x4063de
  4063b0:	fnstsw WORD PTR [edx+0x4a]
  4063b3:	xchg   ebp,eax
  4063b4:	fldenv [ecx+ecx*8-0x24]
  4063b8:	cmp    BYTE PTR [esi+esi*2+0x7e],ch
  4063bc:	mov    ds:0x609ada07,eax
  4063c1:	scas   eax,DWORD PTR es:[edi]
  4063c2:	sar    ebp,0xfa
  4063c5:	sbb    al,0xeb
  4063c7:	scas   eax,DWORD PTR es:[edi]
  4063c8:	sbb    BYTE PTR [edx+0x3e],ch
  4063cb:	add    DWORD PTR [ecx-0x34],edi
  4063ce:	retf   0xbb86
  4063d1:	mov    ds:0x21d4199a,al
  4063d6:	fadd   QWORD PTR [edx-0x4101e10c]
  4063dc:	add    eax,0x7e82085f
  4063e1:	pop    ss
  4063e2:	pop    ebx
  4063e3:	push   esp
  4063e4:	xchg   ebx,eax
  4063e5:	and    bh,dl
  4063e7:	adc    ebx,0xf88664d9
  4063ed:	mov    BYTE PTR [edi-0x6653adb1],bl
  4063f3:	and    ecx,esi
  4063f5:	inc    edx
  4063f6:	cs dec ebp
  4063f8:	test   al,0xd3
  4063fa:	or     al,0x38
  4063fc:	std    
  4063fd:	push   ebp
  4063fe:	mov    ebx,0x4e331a65
  406403:	jge    0x406456
  406405:	je     0x40640a
  406407:	dec    ecx
  406408:	mov    es,WORD PTR [ebx]
  40640a:	cmp    DWORD PTR [ebx-0x6f7db5e4],esp
  406410:	sbb    DWORD PTR [edi],edx
  406412:	fs mov dh,0x6a
  406415:	lods   al,BYTE PTR ds:[esi]
  406416:	scas   eax,DWORD PTR es:[edi]
  406417:	enter  0x462e,0x98
  40641b:	outs   dx,BYTE PTR ds:[esi]
  40641c:	in     al,0xa5
  40641e:	fsub   QWORD PTR [eax+0x4e]
  406421:	sbb    BYTE PTR [eax-0x22],bh
  406424:	add    eax,0xf78b0392
  406429:	fcom   DWORD PTR [esi-0x26bdc755]
  40642f:	fmul   st,st(7)
  406431:	mov    ch,0x27
  406433:	(bad)  
  406434:	imul   ebx,DWORD PTR [esi-0x462c0602],0x57
  40643b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40643c:	xor    DWORD PTR [ecx+0x59],edx
  40643f:	jl     0x4063cc
  406441:	add    DWORD PTR [edi-0x44],eax
  406444:	sub    DWORD PTR [ecx+0x166af7c7],ecx
  40644a:	jp     0x4063f2
  40644c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40644d:	outs   dx,BYTE PTR ds:[esi]
  40644e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40644f:	pop    ss
  406450:	ja     0x406490
  406452:	mov    ch,0xf0
  406454:	mov    bh,0xe2
  406456:	es lahf 
  406458:	scas   eax,DWORD PTR es:[edi]
  406459:	cmp    eax,0x809db96
  40645e:	or     al,0xb4
  406460:	pusha  
  406461:	cs inc ebx
  406463:	cmp    ch,dl
  406465:	pusha  
  406466:	xchg   BYTE PTR [eax],bh
  406468:	enter  0x6e27,0x5e
  40646c:	je     0x40649d
  40646e:	mov    ah,dh
  406470:	push   ebp
  406471:	mov    fs,WORD PTR [edx+0x1090db96]
  406477:	retf   0x24cb
  40647a:	cmp    DWORD PTR [ebp+0x68],edi
  40647d:	xlat   BYTE PTR ds:[ebx]
  40647e:	xor    BYTE PTR ds:0x7906d76a,0x73
  406485:	imul   ebp,DWORD PTR [ebx+eiz*8-0x2a2b1d80],0xa337711e
  406490:	push   0x30
  406492:	pop    ss
  406493:	lock out dx,al
  406495:	and    eax,0x8681fb63
  40649a:	stc    
  40649b:	in     eax,dx
  40649c:	sub    edx,edx
  40649e:	mov    eax,0x3cbe189
  4064a3:	out    0x75,eax
  4064a5:	arpl   WORD PTR [eax+0x5637871c],bx
  4064ab:	or     BYTE PTR [edx-0x72],cl
  4064ae:	push   edx
  4064af:	adc    DWORD PTR [ebp-0x56],0x46
  4064b3:	sub    BYTE PTR [edi+0x476822bb],cl
  4064b9:	sbb    ebp,DWORD PTR ds:[ebx+0x37]
  4064bd:	iret   
  4064be:	mov    ch,0xfc
  4064c0:	test   al,0xf7
  4064c2:	cmp    DWORD PTR [edi+0x7],0x44f36920
  4064c9:	stos   BYTE PTR es:[edi],al
  4064ca:	pop    DWORD PTR [eax]
  4064cc:	mov    edx,DWORD PTR ds:0x243c967d
  4064d2:	loope  0x406514
  4064d4:	and    DWORD PTR [edx+0x59ab5799],ebp
  4064da:	retf   
  4064db:	jmp    0x406523
  4064dd:	xor    eax,0x19aa8967
  4064e2:	jmp    0x40651a
  4064e4:	push   ss
  4064e5:	cmp    esp,esi
  4064e7:	sti    
  4064e8:	jno    0x40646e
  4064ea:	adc    eax,0x34fcc5cc
  4064ef:	nop
  4064f0:	dec    ebx
  4064f1:	lods   al,BYTE PTR ds:[esi]
  4064f2:	cmc    
  4064f3:	daa    
  4064f4:	pop    edx
  4064f5:	push   ebp
  4064f6:	aad    0x13
  4064f8:	dec    esi
  4064f9:	inc    edx
  4064fa:	inc    edi
  4064fb:	daa    
  4064fc:	add    DWORD PTR [edi],ebp
  4064fe:	mov    dh,BYTE PTR [ecx-0x4b8bb39f]
  406504:	jecxz  0x4064d3
  406506:	xor    al,0xa0
  406508:	mov    DWORD PTR [ecx-0x1],ebx
  40650b:	loopne 0x406543
  40650d:	mov    ebp,0xe7441717
  406512:	outs   dx,BYTE PTR ds:[esi]
  406513:	jmp    0xb665:0x56bbe725
  40651a:	stc    
  40651b:	push   ss
  40651c:	out    0xf8,eax
  40651e:	mov    bl,0x1d
  406520:	mov    dh,0xca
  406522:	lea    esi,ds:0xb6c1c076
  406528:	lock mov edx,0xac77d14b
  40652e:	shr    DWORD PTR [edi+eax*4],0xb0
  406532:	push   edi
  406533:	mov    ebp,0x6e4cb6c4
  406538:	inc    ecx
  406539:	jl     0x40656a
  40653b:	cmp    dl,BYTE PTR [esi-0x3961c316]
  406541:	jo     0x406568
  406543:	psadbw mm3,QWORD PTR [eax]
  406546:	xchg   edx,eax
  406547:	xchg   edx,eax
  406548:	out    dx,eax
  406549:	cli    
  40654a:	imul   edx,DWORD PTR [edx+0x4a2da1f2],0xb4104f57
  406554:	loope  0x406523
  406556:	jle    0x40651c
  406558:	push   ss
  406559:	aad    0x80
  40655b:	(bad)  
  40655c:	in     al,0x3a
  40655e:	mov    ebx,DWORD PTR [ecx-0x67]
  406561:	pop    edi
  406562:	inc    eax
  406563:	(bad)  
  406564:	push   edi
  406565:	lahf   
  406566:	mov    DWORD PTR [edx+eiz*4+0x3e],esi
  40656a:	mov    bh,0x46
  40656c:	test   al,0x3f
  40656e:	adc    eax,0x2cef2238
  406573:	std    
  406574:	ins    DWORD PTR es:[edi],dx
  406575:	cmp    BYTE PTR [esi],bh
  406577:	(bad)  
  406578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406579:	test   al,0x91
  40657b:	sbb    DWORD PTR [eax],ecx
  40657d:	or     al,0x8
  40657f:	xor    BYTE PTR [edi],bh
  406581:	sub    DWORD PTR [eax+0x3f5dbde0],0x40
  406588:	dec    edx
  406589:	inc    ebx
  40658a:	shl    BYTE PTR gs:[ebx+0x3ff239f5],cl
  406591:	imul   DWORD PTR [ecx+0x33440b87]
  406597:	and    al,0xd0
  406599:	sahf   
  40659a:	sar    DWORD PTR [edi+0x15],cl
  40659d:	leave  
  40659e:	std    
  40659f:	cmp    eax,0xcb1498
  4065a4:	fwait
  4065a5:	xor    ebp,eax
  4065a7:	fwait
  4065a8:	sbb    BYTE PTR [ebx-0x64],ch
  4065ab:	ds inc ebx
  4065ad:	dec    edi
  4065ae:	or     al,0xb
  4065b0:	fwait
  4065b1:	mov    ?,WORD PTR [edx+esi*1-0x66]
  4065b5:	pushf  
  4065b6:	add    BYTE PTR ds:0x91ebfc1f,cl
  4065bc:	mov    al,0xa2
  4065be:	adc    BYTE PTR [eax],cl
  4065c0:	stos   BYTE PTR es:[edi],al
  4065c1:	mov    ds:0x52deee16,eax
  4065c6:	out    dx,al
  4065c7:	je     0x406599
  4065c9:	mov    ds:0xea62dcce,eax
  4065ce:	xchg   BYTE PTR [esi],bl
  4065d0:	inc    esp
  4065d1:	inc    esi
  4065d2:	sub    BYTE PTR [edi],dh
  4065d4:	mov    dh,0xbf
  4065d6:	call   0xbb89:0x5b7669c5
  4065dd:	xchg   edx,eax
  4065de:	add    al,0x3d
  4065e0:	call   0xe07617ef
  4065e5:	push   esp
  4065e6:	xchg   edx,eax
  4065e7:	jle    0x40663e
  4065e9:	pop    edi
  4065ea:	fcomi  st,st(5)
  4065ec:	rol    DWORD PTR [eax+0x63],cl
  4065ef:	pop    eax
  4065f0:	icebp  
  4065f1:	aad    0x7
  4065f3:	sbb    esp,DWORD PTR [edi]
  4065f5:	mov    DWORD PTR [eax],ebx
  4065f7:	int    0xa6
  4065f9:	scas   al,BYTE PTR es:[edi]
  4065fa:	xor    ch,BYTE PTR [edi+0x7f]
  4065fd:	xchg   edx,edi
  4065ff:	mov    ds:0x80a298c,al
  406604:	push   ebx
  406605:	push   ss
  406606:	adc    edi,DWORD PTR [ecx-0xc]
  406609:	inc    eax
  40660a:	outs   dx,BYTE PTR ds:[esi]
  40660b:	push   cs
  40660c:	mov    ds:0x9f60dab4,eax
  406611:	sub    eax,0x4a0a7fe2
  406616:	das    
  406617:	shl    DWORD PTR ds:0xb183b085,0x31
  40661e:	(bad)  
  40661f:	xlat   BYTE PTR ds:[ebx]
  406620:	outs   dx,DWORD PTR ds:[esi]
  406621:	div    ah
  406623:	cmp    esp,DWORD PTR ss:[ecx]
  406626:	stc    
  406627:	mov    dh,0x77
  40662a:	imul   ebx,DWORD PTR [esi],0x4c
  40662d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40662e:	retf   0xaac3
  406631:	pop    eax
  406632:	lods   al,BYTE PTR ds:[esi]
  406633:	dec    ebp
  406634:	fild   DWORD PTR [ecx-0x333eecd0]
  40663a:	rcl    dh,1
  40663c:	add    DWORD PTR [eax-0x1f645db0],0xffffffe1
  406643:	or     cl,bl
  406645:	push   ecx
  406646:	xor    DWORD PTR [ecx+ebx*8],0x41
  40664a:	adc    al,0x8b
  40664c:	mov    edi,0x597ee2df
  406651:	push   ecx
  406652:	outs   dx,BYTE PTR ds:[esi]
  406653:	jnp    0x4066a7
  406655:	pop    esi
  406656:	mov    al,ds:0x2a947812
  40665b:	data16 icebp 
  40665d:	aad    0xcd
  40665f:	mov    edi,0x73862277
  406664:	jno    0x4066ac
  406666:	mov    es,WORD PTR [ecx]
  406668:	ins    DWORD PTR es:[edi],dx
  406669:	test   eax,0x15b21af1
  40666e:	fdiv   QWORD PTR [edi]
  406670:	mov    esp,0x203b76b3
  406675:	pushf  
  406676:	(bad)  
  406677:	(bad)  
  406678:	dec    ebx
  406679:	cmp    BYTE PTR [esi+0x55],bl
  40667c:	jmp    0xc676481d
  406681:	lds    ebp,FWORD PTR [esi+0x74]
  406684:	xor    al,0xeb
  406686:	or     bl,BYTE PTR cs:[eax-0x74]
  40668a:	fdiv   st,st(7)
  40668c:	sub    DWORD PTR [esi-0x4],edx
  40668f:	push   esp
  406690:	into   
  406691:	out    0x80,al
  406693:	test   al,0x26
  406695:	pop    esi
  406696:	push   ebp
  406697:	mov    dh,0x25
  406699:	mov    esi,0xd1b03383
  40669e:	sbb    BYTE PTR [ebx-0x14],cl
  4066a1:	add    BYTE PTR [esi],0x2e
  4066a4:	sti    
  4066a5:	in     al,dx
  4066a6:	sahf   
  4066a7:	sbb    al,0x35
  4066a9:	js     0x406641
  4066ab:	pop    esp
  4066ac:	adc    esi,DWORD PTR [edx]
  4066ae:	loop   0x406708
  4066b0:	adc    ah,BYTE PTR [ebp-0x3ee8116c]
  4066b6:	xchg   ecx,eax
  4066b7:	add    ecx,DWORD PTR [ebx+esi*2]
  4066ba:	jno    0x406723
  4066bc:	or     esp,esp
  4066be:	cmp    cl,BYTE PTR [edx+0x7dd8b953]
  4066c4:	inc    BYTE PTR [edi-0x11]
  4066c7:	data16 out dx,al
  4066c9:	add    eax,0x8ede62c1
  4066ce:	outs   dx,BYTE PTR ds:[esi]
  4066cf:	sbb    eax,0xceafc869
  4066d4:	jne    0x4066a8
  4066d6:	jmp    0x406724
  4066d8:	pop    edx
  4066d9:	sub    al,0x93
  4066db:	loope  0x406690
  4066dd:	daa    
  4066de:	ret    
  4066df:	xchg   esp,eax
  4066e0:	xlat   BYTE PTR ds:[ebx]
  4066e1:	jmp    0xed76:0xd1fee4f6
  4066e8:	mov    al,BYTE PTR [ebp+0x75]
  4066eb:	and    ah,cl
  4066ed:	aam    0x42
  4066ef:	idiv   DWORD PTR [eax-0x671a5eb8]
  4066f5:	sub    DWORD PTR [ebx+0x7a],ebp
  4066f8:	loope  0x4066b2
  4066fa:	add    bh,BYTE PTR [edi+eax*1-0x253cfe66]
  406701:	or     ecx,DWORD PTR [edi]
  406703:	(bad)  
  406704:	sbb    al,0x86
  406706:	cmp    BYTE PTR [ecx-0x52b8f931],ah
  40670c:	repnz cmp DWORD PTR [eax],esp
  40670f:	(bad)  
  406710:	stc    
  406711:	test   DWORD PTR [eax],edi
  406713:	jp     0x4066ba
  406715:	imul   DWORD PTR [edx-0x57]
  406718:	push   esp
  406719:	xchg   ecx,eax
  40671a:	push   0x3e
  40671c:	and    ch,ch
  40671e:	nop
  40671f:	test   al,dl
  406721:	add    dl,BYTE PTR [ecx-0x53640cf9]
  406727:	mov    edx,0xb0827eca
  40672c:	push   ss
  40672d:	or     al,0x7e
  40672f:	nop
  406730:	pop    ecx
  406731:	jmp    0x40675e
  406733:	repnz lock or ah,BYTE PTR cs:[esi]
  406738:	test   eax,0x11ae8cbb
  40673d:	jmp    0xe94e5d53
  406742:	(bad)  
  406743:	imul   ebp,DWORD PTR [edx+0x91ee20c],0xffffffc9
  40674a:	adc    dl,dl
  40674c:	cwde   
  40674d:	js     0x40670f
  40674f:	cdq    
  406750:	xor    al,0x49
  406752:	cdq    
  406753:	push   ebp
  406754:	pop    es
  406755:	xlat   BYTE PTR ds:[ebx]
  406756:	lods   eax,DWORD PTR ds:[esi]
  406757:	jmp    0xc2b6:0x11549800
  40675e:	sahf   
  40675f:	ret    
  406760:	mov    ebp,esp
  406762:	out    0x8a,eax
  406764:	jno    0x4067d1
  406766:	inc    ebx
  406767:	fmul   st(1),st
  406769:	in     al,0x98
  40676b:	xchg   edi,eax
  40676c:	inc    ebx
  40676e:	push   esi
  40676f:	xchg   esi,eax
  406770:	(bad)  
  406771:	ficomp DWORD PTR [edx]
  406773:	and    BYTE PTR [edi],bh
  406775:	sub    al,0x87
  406777:	daa    
  406778:	jle    0x40678a
  40677a:	sub    eax,0x989265f5
  40677f:	inc    eax
  406780:	sub    eax,ebp
  406782:	push   ebx
  406783:	and    esp,eax
  406785:	mov    dl,0xee
  406787:	mov    ebp,0xf2227f56
  40678c:	dec    esi
  40678d:	jae    0x406719
  40678f:	dec    esi
  406790:	inc    eax
  406791:	push   ecx
  406792:	xchg   esi,eax
  406793:	fwait
  406794:	lods   al,BYTE PTR ds:[esi]
  406795:	mov    al,ds:0x7d5ab486
  40679a:	fucomip st,st(1)
  40679c:	xor    BYTE PTR [ebp+0x6e5f0097],bl
  4067a2:	pushf  
  4067a3:	or     al,0x51
  4067a5:	cmp    ebp,edx
  4067a7:	and    al,0x44
  4067a9:	in     al,dx
  4067aa:	mov    cs,esi
  4067ac:	mov    cl,0x9a
  4067ae:	inc    esi
  4067af:	arpl   WORD PTR [ecx],cx
  4067b1:	sub    esi,esi
  4067b3:	ficom  DWORD PTR [esp+ecx*8-0x1ba875fb]
  4067ba:	xchg   ebx,eax
  4067bb:	inc    edi
  4067bc:	shl    esi,cl
  4067be:	push   edi
  4067bf:	xor    eax,0x935b4b40
  4067c4:	jmp    0x40676b
  4067c6:	retf   
  4067c7:	ds dec eax
  4067c9:	push   ebp
  4067ca:	mov    esp,0x770b2111
  4067cf:	out    0x74,al
  4067d1:	int    0xf4
  4067d3:	push   ebp
  4067d4:	inc    ecx
  4067d5:	stc    
  4067d6:	mov    WORD PTR [edx-0x6f39c165],es
  4067dc:	dec    esi
  4067dd:	fdiv   QWORD PTR [esi+0x4b541163]
  4067e3:	(bad)  
  4067e4:	or     al,0x56
  4067e6:	jb     0x406843
  4067e8:	jg     0x4067d7
  4067ea:	sub    bh,BYTE PTR [edx-0x714cfd71]
  4067f0:	pusha  
  4067f1:	sbb    al,0x44
  4067f3:	mov    esp,0xbb4e3ede
  4067f8:	mov    ds:0x731fce16,eax
  4067fd:	sub    al,BYTE PTR [ecx-0x6f]
  406800:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406801:	dec    edx
  406802:	mov    ds:0x711c8e05,eax
  406807:	xor    al,dh
  406809:	xor    DWORD PTR [ecx+0x19],ebp
  40680c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40680d:	push   0x783f8429
  406812:	mul    DWORD PTR [esi+0x2b]
  406815:	inc    eax
  406816:	repz inc esi
  406818:	jae    0x406822
  40681a:	in     eax,dx
  40681b:	enter  0x7092,0x60
  40681f:	das    
  406820:	mov    cl,0x7f
  406822:	rol    DWORD PTR [edi],0x5e
  406825:	scas   eax,DWORD PTR es:[edi]
  406826:	in     al,0x8e
  406828:	cli    
  406829:	repnz mov ebx,edi
  40682c:	fistp  WORD PTR [esp+ecx*1]
  40682f:	int3   
  406830:	imul   ecx,DWORD PTR [edi+edi*2-0x79],0xffffffcb
  406835:	and    BYTE PTR [edi+0x6456d7e2],ah
  40683b:	fnstenv [edx+0xe55d8af]
  406841:	fcom   DWORD PTR [ebp+0x7fe02eeb]
  406847:	push   cs
  406848:	daa    
  406849:	ret    0x3ed7
  40684c:	pop    ds
  40684d:	je     0x40687b
  40684f:	inc    ecx
  406850:	push   esi
  406851:	and    eax,0xbf476529
  406856:	push   cs
  406857:	mov    DWORD PTR [ecx],edx
  406859:	inc    edx
  40685a:	inc    esi
  40685b:	lahf   
  40685c:	pop    es
  40685d:	fmul   DWORD PTR [edi-0x39423342]
  406863:	sub    DWORD PTR [eax],ebp
  406865:	add    cl,BYTE PTR [eax+0x6b]
  406868:	push   0xffffffe0
  40686a:	dec    edi
  40686b:	(bad)  
  40686c:	xor    edx,ebp
  40686e:	push   ecx
  40686f:	retf   0x3bf9
  406872:	xchg   bl,bl
  406874:	fnstcw WORD PTR [ebx+0x73]
  406877:	cmp    ch,ch
  406879:	push   es
  40687a:	arpl   WORD PTR [eax+eax*1],bp
  40687d:	pop    ecx
  40687e:	cmc    
  40687f:	outs   dx,DWORD PTR ds:[esi]
  406880:	xchg   edx,eax
  406881:	outs   dx,BYTE PTR cs:[esi]
  406883:	call   0xdb1842ab
  406888:	adc    eax,0x2e5bbb70
  40688d:	dec    ecx
  40688e:	sub    BYTE PTR [edx],dh
  406890:	test   BYTE PTR [eax-0x21],bh
  406893:	fidivr WORD PTR [eax-0x79]
  406896:	xchg   esi,eax
  406897:	fwait
  406898:	das    
  406899:	pusha  
  40689a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40689b:	sbb    eax,0x9e7dcfcc
  4068a0:	jae    0x4068c8
  4068a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068a3:	jmp    0x2b8:0x8b559b88
  4068aa:	xor    dl,dl
  4068ac:	pusha  
  4068ad:	outs   dx,BYTE PTR ds:[esi]
  4068ae:	mov    eax,0xe81b6234
  4068b3:	aas    
  4068b4:	push   esp
  4068b5:	imul   DWORD PTR [eax+0x4917c7da]
  4068bb:	call   0xd58ceac2
  4068c0:	test   BYTE PTR [ebx-0x72ebb578],dh
  4068c6:	jmp    0x4068dd
  4068c8:	pop    edx
  4068c9:	adc    BYTE PTR [eax-0x39fcc9f5],dl
  4068cf:	retf   
  4068d0:	sub    BYTE PTR [edx],0x72
  4068d3:	cli    
  4068d4:	lods   eax,DWORD PTR ds:[esi]
  4068d5:	retf   0x387b
  4068d8:	stc    
  4068d9:	bound  esi,QWORD PTR [esi+0x4aface30]
  4068df:	push   ds
  4068e0:	mov    esp,0x28c48cd2
  4068e5:	das    
  4068e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068e7:	or     al,0x7e
  4068e9:	pop    eax
  4068ea:	xor    eax,0xbfe50aa5
  4068ef:	mov    esi,cs
  4068f1:	or     esi,DWORD PTR [edx]
  4068f3:	retf   
  4068f4:	jecxz  0x4068a0
  4068f6:	mov    dl,0x19
  4068f8:	js     0x4068ba
  4068fa:	xor    esp,DWORD PTR [ebx+0xa034ec3]
  406900:	in     eax,0x17
  406902:	or     al,0xee
  406904:	shl    BYTE PTR [edx+0x48b89cd4],cl
  40690a:	push   0xa3a81c7c
  40690f:	es or  ah,ch
  406912:	jl     0x4068c5
  406914:	test   eax,0xb9268e29
  406919:	ss xor cl,0x87
  40691d:	and    ecx,DWORD PTR [ebp+esi*1-0x28e564c3]
  406924:	mov    esi,?
  406926:	sahf   
  406927:	and    al,0xad
  406929:	and    eax,0x104663f9
  40692e:	mov    dh,0x95
  406930:	in     al,dx
  406931:	mov    BYTE PTR [esi-0x2c],bh
  406934:	dec    eax
  406935:	out    dx,eax
  406936:	sub    dl,BYTE PTR [ebp+0x6757bc10]
  40693c:	sbb    bh,BYTE PTR [ebx+0x20]
  40693f:	mov    es,WORD PTR [eax-0x2d]
  406942:	push   ecx
  406943:	aam    0x6f
  406945:	scas   eax,DWORD PTR es:[di]
  406947:	xlat   BYTE PTR ds:[ebx]
  406948:	inc    esp
  406949:	xlat   BYTE PTR ds:[ebx]
  40694a:	mov    ds:0xa831720d,al
  40694f:	adc    cl,bh
  406951:	mov    eax,fs
  406953:	test   BYTE PTR [edx+ebp*2+0x1b],0x94
  406958:	inc    ebp
  406959:	daa    
  40695a:	adc    DWORD PTR [edi-0x64],esp
  40695d:	ret    0x6e4f
  406960:	dec    eax
  406961:	jnp    0x481ceb1e
  406967:	lds    edi,FWORD PTR [esi+0x47be163d]
  40696d:	mov    ebp,DWORD PTR [edx+0x122e15c8]
  406973:	add    eax,0xd797af9b
  406978:	mov    bl,0xfb
  40697a:	cld    
  40697b:	inc    esp
  40697c:	mov    edi,0x16afbbee
  406981:	outs   dx,DWORD PTR ds:[esi]
  406982:	mov    eax,ds:0xe33816b5
  406987:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406988:	dec    esi
  406989:	adc    al,0x4c
  40698b:	mov    dh,0x96
  40698d:	je     0x4069dd
  40698f:	lds    ebx,FWORD PTR [ecx-0x7e]
  406992:	adc    eax,0xfe367e82
  406997:	fsubr  DWORD PTR ds:0x75cba41
  40699d:	into   
  40699e:	push   cs
  40699f:	sbb    al,0xce
  4069a1:	stos   DWORD PTR es:[edi],eax
  4069a2:	mov    esi,0x9fe4ed9
  4069a7:	sub    ch,dl
  4069a9:	sbb    DWORD PTR [edx-0x5b3f653e],eax
  4069af:	pop    eax
  4069b0:	add    eax,0x51bc6699
  4069b5:	adc    eax,0x2ba79b5f
  4069ba:	test   al,0xaf
  4069bc:	add    al,0xb
  4069be:	(bad)  
  4069bf:	mov    ch,0xaf
  4069c1:	jbe    0x406a2b
  4069c3:	mov    al,ds:0x79983d9a
  4069c8:	dec    ecx
  4069c9:	aad    0xf1
  4069cb:	xlat   BYTE PTR ds:[ebx]
  4069cc:	lea    ebp,[ebp+eiz*1+0x59]
  4069d0:	mov    ds:0xbf795e90,eax
  4069d5:	in     eax,dx
  4069d6:	jno    0x406995
  4069d8:	pop    eax
  4069d9:	popa   
  4069da:	test   DWORD PTR [ebx+eax*2],ecx
  4069dd:	xlat   BYTE PTR ds:[ebx]
  4069de:	inc    ebp
  4069df:	push   edx
  4069e0:	add    DWORD PTR [ebx],esp
  4069e2:	add    esp,DWORD PTR [ebp+0x103907a3]
  4069e8:	push   eax
  4069e9:	jb     0x4069a8
  4069eb:	rcl    BYTE PTR [edi],cl
  4069ed:	pop    ebp
  4069ee:	popa   
  4069ef:	xchg   ebx,eax
  4069f0:	mov    ds,WORD PTR ds:0xbc5285ef
  4069f6:	sbb    eax,0x9998a48a
  4069fb:	mov    ah,0x4c
  4069fd:	xor    ecx,0x99b10a5f
  406a03:	push   ebx
  406a04:	xor    DWORD PTR [eax+0x57845567],edi
  406a0a:	int    0xd3
  406a0c:	cmp    edx,DWORD PTR [esi]
  406a0e:	es push eax
  406a10:	lahf   
  406a11:	mov    DWORD PTR [eax],esi
  406a13:	add    BYTE PTR [ecx+0x56],ah
  406a16:	cmp    eax,0x41e92b6a
  406a1b:	jle    0x406a77
  406a1d:	outs   dx,DWORD PTR ds:[esi]
  406a1e:	daa    
  406a1f:	add    eax,0xf4c3f3ee
  406a24:	push   ebx
  406a25:	or     al,0x8b
  406a27:	inc    esi
  406a28:	cmp    ch,cl
  406a2a:	lods   al,BYTE PTR ds:[esi]
  406a2b:	inc    esi
  406a2c:	jg     0x406a63
  406a2e:	jo     0x406a89
  406a30:	push   eax
  406a31:	xchg   esi,eax
  406a32:	or     al,BYTE PTR [esi+0xf]
  406a35:	nop
  406a36:	popa   
  406a37:	jb     0x4069be
  406a39:	loope  0x406a2a
  406a3b:	mov    ?,WORD PTR [edi-0x1b]
  406a3e:	xor    eax,0x59291e50
  406a43:	cwde   
  406a44:	mov    cl,0xcf
  406a46:	(bad)  
  406a48:	xor    BYTE PTR [edx+0x3a],bh
  406a4b:	ins    DWORD PTR es:[edi],dx
  406a4c:	iret   
  406a4d:	shl    BYTE PTR ds:0x316b2ed1,cl
  406a53:	call   0x7a59:0xdcd73dcf
  406a5a:	mov    ebp,0xc66671c2
  406a5f:	fsubr  DWORD PTR [esi+eax*8+0x4b]
  406a63:	vpshlq xmm8,[ecx+0x46],xmm7
  406a69:	(bad)  
  406a6b:	cli    
  406a6c:	xchg   ebp,eax
  406a6d:	in     al,0x1d
  406a6f:	push   esi
  406a70:	xor    DWORD PTR [ebp-0x17],edi
  406a73:	cmp    al,0x3
  406a75:	sahf   
  406a76:	cmp    esp,0x9c3d303c
  406a7c:	push   edx
  406a7d:	mov    ebx,0xb9038436
  406a82:	and    DWORD PTR [eax],edx
  406a84:	ins    DWORD PTR es:[edi],dx
  406a85:	cld    
  406a86:	pushf  
  406a87:	call   0x9e21:0xaa9dbfa9
  406a8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a8f:	mov    esi,0xe5218182
  406a94:	pop    ds
  406a95:	fild   WORD PTR [edi]
  406a97:	clc    
  406a98:	sbb    al,0x52
  406a9a:	(bad)  
  406a9b:	lock mov ds:0xc27b52d0,eax
  406aa1:	out    dx,al
  406aa2:	outs   dx,DWORD PTR ds:[esi]
  406aa3:	cmp    dl,ah
  406aa5:	mov    al,ds:0xeb052049
  406aaa:	inc    ebp
  406aab:	pop    ds
  406aac:	div    DWORD PTR [esi+0x61]
  406aaf:	out    0x4a,al
  406ab1:	lock xchg esp,eax
  406ab3:	or     eax,0x502bd9ca
  406ab8:	call   0x933da32a
  406abd:	cld    
  406abe:	cwde   
  406abf:	ret    
  406ac0:	xchg   DWORD PTR [ecx],ecx
  406ac2:	mov    cl,BYTE PTR [edx+esi*4]
  406ac5:	jb     0x406b43
  406ac7:	cwde   
  406ac8:	and    al,BYTE PTR [ebx+0x19]
  406acb:	pop    ss
  406acc:	enter  0x9bdb,0xfa
  406ad0:	jbe    0x406a6f
  406ad2:	lods   al,BYTE PTR ds:[esi]
  406ad3:	mov    edx,DWORD PTR [ecx+eax*4-0x1e19e960]
  406ada:	or     ecx,esi
  406adc:	adc    dl,BYTE PTR [ebx-0x1f]
  406adf:	test   BYTE PTR gs:[eax+edi*1],dl
  406ae3:	xchg   DWORD PTR [edi],ecx
  406ae5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ae6:	jge    0x406b1a
  406ae8:	test   DWORD PTR ds:0x8198c4cd,ecx
  406aee:	cmp    bh,BYTE PTR [esi]
  406af0:	and    DWORD PTR [ecx],ebx
  406af2:	and    BYTE PTR [ebx+0x25],bh
  406af5:	enter  0x3be5,0x9a
  406af9:	jle    0x406b48
  406afb:	lods   al,BYTE PTR ds:[esi]
  406afc:	dec    ecx
  406afd:	inc    esp
  406afe:	pushf  
  406aff:	push   ecx
  406b00:	scas   al,BYTE PTR es:[edi]
  406b01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b02:	sbb    DWORD PTR [edx+0x60b6fea5],ecx
  406b08:	xchg   ebp,eax
  406b09:	mov    WORD PTR [esi+0x25df840b],fs
  406b0f:	add    al,0x1e
  406b11:	iret   
  406b12:	mov    esi,0xc69907c5
  406b17:	xlat   BYTE PTR ds:[ebx]
  406b18:	adc    DWORD PTR [ecx+0x38d4de43],ecx
  406b1e:	pop    ebp
  406b1f:	(bad)  
  406b21:	mov    dh,0x36
  406b23:	pop    edx
  406b24:	(bad)  
  406b26:	push   ds
  406b27:	add    DWORD PTR ds:0xacbd1e28,esp
  406b2d:	rcl    DWORD PTR [esi],1
  406b2f:	sub    DWORD PTR [esi-0x4b5fd4a7],0xffffff98
  406b36:	int    0xdb
  406b38:	inc    ebx
  406b39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b3a:	aaa    
  406b3b:	es pop ecx
  406b3d:	jne    0x406b76
  406b3f:	sbb    al,0x9a
  406b41:	test   eax,0x82055644
  406b46:	cmp    eax,DWORD PTR [esi-0x4fd45cd4]
  406b4c:	(bad)  es:[ecx-0x56]
  406b50:	xlat   BYTE PTR ds:[ebx]
  406b51:	popf   
  406b52:	mov    esp,0x9a4f4a5e
  406b57:	imul   edx,DWORD PTR [ebx],0x1d
  406b5a:	adc    ch,BYTE PTR [esi-0x611059a2]
  406b60:	jecxz  0x406b7d
  406b62:	aas    
  406b63:	call   0x3126:0x702e3048
  406b6a:	jge    0x406bd4
  406b6c:	pop    edx
  406b6d:	fwait
  406b6e:	jecxz  0x406b4d
  406b70:	mov    eax,ds:0x42af6917
  406b75:	fstp   DWORD PTR [ebx+edx*8-0x25]
  406b79:	push   esi
  406b7a:	arpl   WORD PTR [ebx-0x1b5d738],sp
  406b80:	gs sar dl,0x78
  406b84:	mov    BYTE PTR [edx-0x3fe6bcab],bl
  406b8a:	jae    0x406b94
  406b8c:	fild   DWORD PTR [ecx-0x488b2940]
  406b92:	int    0xbc
  406b94:	lods   eax,DWORD PTR ds:[esi]
  406b95:	sbb    BYTE PTR [eax],al
  406b97:	pop    eax
  406b98:	fist   DWORD PTR [ebp+0x23d46638]
  406b9e:	call   0xdb96:0xf86f40c3
  406ba5:	mov    al,0x35
  406ba7:	cld    
  406ba8:	dec    edx
  406ba9:	jbe    0x406b9d
  406bab:	dec    eax
  406bac:	adc    eax,0x9387545f
  406bb1:	sub    DWORD PTR [ecx],ebx
  406bb3:	and    al,0x88
  406bb5:	and    ax,0x640c
  406bb9:	mov    al,ds:0x4a018f28
  406bbe:	push   ss
  406bbf:	in     eax,0xa0
  406bc1:	xor    ebx,DWORD PTR [eax-0x37]
  406bc4:	inc    ecx
  406bc5:	cmp    BYTE PTR [ebp+0x4a6a8309],dh
  406bcb:	fidivr DWORD PTR [eax]
  406bcd:	jmp    0x9f93:0x72734f4b
  406bd4:	adc    edx,ebx
  406bd6:	test   BYTE PTR [esi+ebx*2+0x57],0x4c
  406bdb:	aas    
  406bdc:	push   ebx
  406bdd:	push   eax
  406bde:	test   eax,0x84039ee0
  406be3:	in     al,dx
  406be4:	sahf   
  406be5:	mov    al,ds:0xdf83e0c8
  406bea:	mov    edx,0x773a20e0
  406bef:	push   ecx
  406bf0:	dec    edx
  406bf2:	addr16 cld 
  406bf4:	add    al,ch
  406bf6:	cs stos BYTE PTR es:[edi],al
  406bf8:	push   ebx
  406bf9:	retf   
  406bfa:	out    0xc,al
  406bfc:	inc    esp
  406bfd:	ja     0x406be9
  406bff:	jle    0x406c16
  406c01:	ret    0x48cb
  406c04:	jl     0x406c1b
  406c06:	stos   BYTE PTR es:[edi],al
  406c07:	sbb    ah,bl
  406c09:	xchg   edi,eax
  406c0a:	or     eax,0x9d8a9138
  406c0f:	retf   
  406c10:	iret   
  406c11:	es mov ch,0xab
  406c14:	cmc    
  406c15:	jmp    0x5910:0x51f3cfa
  406c1c:	adc    DWORD PTR ds:0xb16b0dea,edx
  406c22:	or     DWORD PTR [ebp-0x50],eax
  406c25:	not    BYTE PTR [edx-0x3a40b8ec]
  406c2b:	xchg   ebx,eax
  406c2c:	push   ecx
  406c2d:	push   esp
  406c2e:	ret    
  406c2f:	add    BYTE PTR [edi+0x6f],bl
  406c32:	xchg   ebx,eax
  406c33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c34:	push   0xdc251605
  406c39:	nop
  406c3a:	mov    esi,0xda05f7a
  406c3f:	push   0xffffff9b
  406c41:	and    ah,0xd5
  406c44:	inc    esp
  406c45:	std    
  406c46:	add    edx,eax
  406c48:	add    al,0xac
  406c4a:	mov    edi,0xd97ff9e
  406c4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c50:	pop    ebx
  406c51:	mov    DWORD PTR [esi-0x40],edx
  406c54:	stos   DWORD PTR es:[edi],eax
  406c55:	sub    al,0x47
  406c57:	cmp    BYTE PTR [ebp+0x4787d1b9],0x14
  406c5e:	push   edi
  406c5f:	pop    ecx
  406c60:	mov    al,ds:0xaca49d21
  406c65:	and    ah,bh
  406c67:	cli    
  406c68:	pop    eax
  406c69:	mov    WORD PTR [ecx+ebp*8+0x20],fs
  406c6d:	icebp  
  406c6e:	sbb    al,dh
  406c70:	imul   esi,DWORD PTR ds:0x36f8747d,0xdd43b059
  406c7a:	test   DWORD PTR [edi+0xf64bbdd],0xbe837c73
  406c84:	rcr    ah,1
  406c86:	xor    al,al
  406c88:	sbb    ebp,DWORD PTR [edi]
  406c8a:	in     eax,0x1
  406c8c:	sti    
  406c8d:	adc    al,0xdf
  406c8f:	push   ss
  406c90:	frstor ds:0x7033a6bc
  406c96:	retf   
  406c97:	mov    edi,0x847ed4cc
  406c9c:	clc    
  406c9d:	jle    0x406c8f
  406c9f:	retf   0x6dc9
  406ca2:	and    DWORD PTR [ebx],eax
  406ca4:	sar    cl,cl
  406ca6:	add    eax,ecx
  406ca8:	pushf  
  406ca9:	out    0xfa,al
  406cab:	outs   dx,BYTE PTR ds:[esi]
  406cac:	lods   al,BYTE PTR ds:[esi]
  406cad:	enter  0xa8df,0xa9
  406cb1:	ret    
  406cb2:	xor    ch,ch
  406cb4:	scas   al,BYTE PTR es:[edi]
  406cb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cb6:	jne    0x406c67
  406cb8:	inc    ebp
  406cb9:	leave  
  406cba:	pop    edi
  406cbb:	dec    ecx
  406cbc:	pusha  
  406cbd:	jmp    0x140181b6
  406cc2:	ror    DWORD PTR [ebp+0x5851613d],cl
  406cc8:	mov    edx,es
  406cca:	fdivr  QWORD PTR [ebp-0x73]
  406ccd:	call   0x9310745c
  406cd2:	cmp    al,0x29
  406cd4:	cmp    ebx,edx
  406cd6:	sub    DWORD PTR [edi],edx
  406cd8:	jecxz  0x406cbc
  406cda:	or     al,BYTE PTR [ecx]
  406cdc:	adc    BYTE PTR [edi-0x66375e2e],dl
  406ce2:	imul   edi,DWORD PTR [ecx+edi*1-0x7a49d227],0xb2e78267
  406ced:	xchg   edi,eax
  406cee:	jecxz  0x406d4f
  406cf0:	fistp  QWORD PTR [ecx-0x677aa788]
  406cf6:	and    BYTE PTR [ecx+eax*2],dh
  406cf9:	jns    0x406ce6
  406cfb:	or     eax,0x438e5250
  406d00:	jge    0x406c90
  406d02:	call   0x7e25:0x1c894013
  406d09:	jb     0x406d20
  406d0b:	cmp    bl,dh
  406d0d:	pusha  
  406d0e:	lds    edi,FWORD PTR [edx-0x7a]
  406d11:	sbb    ecx,ebx
  406d13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d14:	xlat   BYTE PTR ds:[ebx]
  406d15:	lahf   
  406d16:	xchg   esp,eax
  406d17:	adc    bh,BYTE PTR [edx+edx*8]
  406d1a:	sbb    DWORD PTR [ecx-0xf],esp
  406d1d:	in     eax,0xf9
  406d1f:	mov    bl,0x94
  406d21:	xor    DWORD PTR [edi-0x2b],ecx
  406d24:	jnp    0x406d42
  406d26:	push   eax
  406d27:	repnz test al,0x7f
  406d2a:	jge    0x406d70
  406d2c:	mov    al,ds:0xc07971c0
  406d31:	test   DWORD PTR [esi],ebx
  406d33:	imul   esp,ebp,0x6e6e6955
  406d39:	mov    BYTE PTR [ecx+0x31],ah
  406d3c:	cmp    ebx,ebp
  406d3e:	adc    edx,esp
  406d40:	dec    ebx
  406d41:	call   0x2c18b193
  406d46:	push   esi
  406d47:	push   eax
  406d48:	in     al,dx
  406d49:	adc    edi,DWORD PTR [esi+0x47]
  406d4c:	and    al,BYTE PTR [edx-0x42]
  406d4f:	jne    0x406d91
  406d51:	mov    esp,0xf605c15f
  406d56:	add    esp,esi
  406d58:	ffree  st(7)
  406d5a:	jbe    0x406d9f
  406d5c:	add    DWORD PTR [edi],ebp
  406d5e:	sub    dx,WORD PTR [ebx]
  406d61:	push   ebx
  406d62:	mov    ah,0x36
  406d64:	inc    ebx
  406d65:	stc    
  406d66:	int3   
  406d67:	loop   0x406d8c
  406d69:	sar    BYTE PTR [edi+eax*8],1
  406d6c:	xchg   BYTE PTR [ebp-0x7b],ch
  406d6f:	jmp    0x9618:0x65a81d8
  406d76:	(bad)  
  406d77:	in     al,dx
  406d78:	stos   DWORD PTR es:[edi],eax
  406d79:	inc    eax
  406d7a:	adc    al,BYTE PTR [eax-0x45]
  406d7d:	mov    ds,WORD PTR [edi]
  406d7f:	sbb    al,0xf6
  406d81:	sub    ah,BYTE PTR [eax+0x36210597]
  406d87:	dec    esi
  406d88:	inc    esp
  406d89:	daa    
  406d8a:	rol    BYTE PTR [esi-0x5c],cl
  406d8d:	mov    bh,0x4d
  406d8f:	push   ebp
  406d90:	push   esp
  406d91:	mov    esi,0x6bdef366
  406d96:	mov    edx,0x6d0f18
  406d9b:	in     al,dx
  406d9c:	xor    BYTE PTR [edx],dh
  406d9e:	mov    ecx,0x4dbeffb
  406da3:	push   ebp
  406da4:	jnp    0x406e00
  406da6:	mov    edi,0xec452334
  406dab:	(bad)  
  406dac:	out    dx,al
  406dad:	add    DWORD PTR [esi+esi*2-0x24],0x4c
  406db2:	push   eax
  406db3:	fsubr  DWORD PTR ds:0xa61e92be
  406db9:	shr    DWORD PTR [esi],0xb8
  406dbc:	mov    edx,0x3aa22210
  406dc1:	aas    
  406dc2:	mov    ds:0x41ed55ca,al
  406dc7:	adc    al,0x8b
  406dc9:	mov    ch,0x21
  406dcb:	xor    bh,dh
  406dcd:	(bad)  
  406dce:	push   cs
  406dcf:	pop    eax
  406dd0:	ror    DWORD PTR [eax*8+0x77455043],1
  406dd7:	mov    dh,0xb1
  406dd9:	jmp    FWORD PTR [esi-0xba71b66]
  406ddf:	arpl   WORD PTR [edi-0x2efeda91],bx
  406de5:	pop    edi
  406de6:	adc    DWORD PTR [eax-0x3],esi
  406de9:	pop    es
  406dea:	out    0xde,eax
  406dec:	in     al,0xae
  406dee:	test   DWORD PTR [ebx-0x56],edi
  406df1:	cld    
  406df2:	jne    0x406e34
  406df4:	hlt    
  406df5:	sub    al,0x80
  406df7:	sub    BYTE PTR [edi-0x8e3d73a],ch
  406dfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406dfe:	dec    esi
  406dff:	dec    ecx
  406e00:	das    
  406e01:	lea    edx,[edi+0x4b39c773]
  406e07:	sub    BYTE PTR [ecx-0x5ec005b],0xba
  406e0e:	lahf   
  406e0f:	adc    al,0xb0
  406e11:	rcl    edx,1
  406e13:	test   DWORD PTR [eax],ebp
  406e15:	ins    BYTE PTR es:[edi],dx
  406e16:	xchg   ebp,eax
  406e17:	add    esi,ebx
  406e19:	enter  0x2115,0x22
  406e1d:	dec    ebp
  406e1e:	pop    edi
  406e1f:	jle    0x406e5d
  406e21:	arpl   WORD PTR [edi+0x56],ax
  406e24:	inc    cl
  406e26:	imul   ecx,ecx,0x2d0dcf6
  406e2c:	push   ecx
  406e2d:	pop    es
  406e2e:	loopne 0x406e3c
  406e30:	mov    esi,0x3a56c60
  406e35:	pop    ebx
  406e36:	or     ecx,DWORD PTR [esi+0x2990b799]
  406e3c:	out    0x70,eax
  406e3e:	sub    ch,BYTE PTR [eax+0x79a0f09d]
  406e44:	add    BYTE PTR [eax-0x54],ah
  406e47:	cmp    eax,0x16e3071a
  406e4c:	mov    esi,0x6a1111c0
  406e51:	dec    edi
  406e52:	mov    eax,0x134c47c6
  406e57:	adc    BYTE PTR [ebx-0x23078c5e],0xa
  406e5e:	mov    bl,0x88
  406e60:	mov    eax,ds:0x9b14f4c6
  406e65:	add    al,0xe0
  406e67:	gs loopne 0x406ed7
  406e6a:	mov    ebp,0xb322dec5
  406e6f:	stc    
  406e70:	out    0x6e,eax
  406e72:	xor    bh,BYTE PTR [edi+0x5d]
  406e75:	cli    
  406e76:	ds out 0xd0,al
  406e79:	fst    QWORD PTR [esi+0x1]
  406e7c:	push   ebp
  406e7d:	es (bad) 
  406e7f:	(bad)  
  406e80:	and    edx,esp
  406e82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e83:	inc    ecx
  406e84:	and    ecx,DWORD PTR [ecx+0x69]
  406e87:	pushf  
  406e88:	(bad)  
  406e8a:	je     0x406e25
  406e8c:	adc    ebx,ebp
  406e8e:	inc    edx
  406e8f:	loopne 0x406eda
  406e91:	aad    0xaf
  406e93:	jg     0x406e17
  406e95:	test   DWORD PTR [bx],edx
  406e98:	inc    ebp
  406e99:	out    dx,eax
  406e9a:	retf   0xd221
  406e9d:	retf   0x2769
  406ea0:	in     eax,dx
  406ea1:	dec    esi
  406ea2:	add    dl,BYTE PTR [edx+0x6]
  406ea5:	lahf   
  406ea6:	cmp    BYTE PTR [edx],ah
  406ea8:	inc    ebx
  406ea9:	ds jae 0x406e51
  406eac:	cmp    BYTE PTR ds:0xf7e9b3e,ah
  406eb2:	stos   DWORD PTR es:[edi],eax
  406eb3:	xor    ah,BYTE PTR [edi-0x52]
  406eb6:	(bad)  
  406eb7:	jmp    0x6a:0x5c4b4cc2
  406ebe:	and    DWORD PTR [edx-0x79],esp
  406ec1:	dec    esi
  406ec2:	daa    
  406ec3:	sbb    cl,bl
  406ec5:	fwait
  406ec6:	push   esi
  406ec7:	inc    DWORD PTR [esi+0x2fa373c]
  406ecd:	mov    bl,0x49
  406ecf:	in     al,0x47
  406ed1:	cmp    ebx,DWORD PTR ds:0x27235fab
  406ed7:	shl    DWORD PTR [edi-0x4c77350d],0xf9
  406ede:	outs   dx,DWORD PTR ds:[esi]
  406edf:	mov    ebx,0x35dbf30a
  406ee4:	stos   BYTE PTR es:[edi],al
  406ee5:	shr    DWORD PTR [edx],0x29
  406ee8:	sbb    al,BYTE PTR [ebx+0x7a]
  406eeb:	clc    
  406eec:	dec    esi
  406eed:	nop
  406eee:	mov    al,0xe4
  406ef0:	sbb    BYTE PTR [edx-0x758ea4a],0x7c
  406ef7:	pop    ecx
  406ef8:	dec    esi
  406ef9:	int3   
  406efa:	or     eax,0x7771185f
  406eff:	mov    ebp,ebx
  406f01:	in     al,dx
  406f02:	enter  0x9e96,0x3a
  406f06:	jo     0x406f1a
  406f08:	mov    esp,DWORD PTR [esi+eax*1-0x25554025]
  406f0f:	retf   0xeda5
  406f12:	out    dx,eax
  406f13:	push   esi
  406f14:	mov    eax,0x7f433225
  406f19:	and    DWORD PTR [eax],0x8b51768f
  406f1f:	jb     0x406ee8
  406f21:	mov    eax,0x970aa658
  406f26:	xchg   edi,eax
  406f27:	adc    dh,dh
  406f29:	(bad)  
  406f2a:	das    
  406f2b:	push   eax
  406f2c:	je     0x406f13
  406f2e:	sar    DWORD PTR ss:[edx-0x7a],0xbb
  406f33:	loopne 0x406ec2
  406f35:	mov    ds:0x56b85a76,al
  406f3a:	pop    es
  406f3b:	in     eax,0x7e
  406f3d:	imul   ebx,eax,0x10d23cce
  406f43:	and    ch,bl
  406f45:	je     0x406efc
  406f47:	pop    esp
  406f48:	out    0xed,al
  406f4a:	jbe    0x406ef0
  406f4c:	dec    BYTE PTR [edi-0x6e]
  406f4f:	xchg   edx,eax
  406f50:	xor    ebp,DWORD PTR [ebx-0x6f]
  406f53:	(bad)
  406f57:	or     esp,DWORD PTR [eax+0x7d1fc471]
  406f5d:	add    BYTE PTR [edi+0x4b8787d6],0x8f
  406f64:	pushf  
  406f65:	xor    esp,DWORD PTR [edx+ebp*8+0x11]
  406f69:	mov    al,0xdf
  406f6b:	hlt    
  406f6c:	mov    ds:0x675f3f64,eax
  406f71:	clc    
  406f72:	out    dx,al
  406f73:	mov    eax,ds:0x2510e8cd
  406f78:	ror    DWORD PTR [edi],0x6e
  406f7b:	push   cs
  406f7c:	iret   
  406f7d:	aas    
  406f7e:	inc    ecx
  406f7f:	repz fwait
  406f81:	jne    0x406f8c
  406f83:	xor    ecx,0x47
  406f86:	or     edi,ecx
  406f88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f89:	sahf   
  406f8a:	or     al,0x7
  406f8c:	jecxz  0x406f25
  406f8e:	adc    DWORD PTR [ebx-0xa40939c],0xccb2e320
  406f98:	xchg   ebp,eax
  406f99:	ret    
  406f9a:	mov    al,0x74
  406f9c:	icebp  
  406f9d:	sub    BYTE PTR [ecx+0x35],dl
  406fa0:	pop    edi
  406fa1:	mov    ah,0xd1
  406fa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fa4:	pop    eax
  406fa5:	test   ecx,esp
  406fa7:	push   esp
  406fa8:	mov    bl,0xf7
  406faa:	jl     0x406f2f
  406fac:	mov    al,0x28
  406fae:	das    
  406faf:	push   esp
  406fb0:	je     0x406f7d
  406fb2:	mov    ch,0x5
  406fb4:	xor    DWORD PTR [eax-0x5c],ebp
  406fb7:	pop    esp
  406fb8:	pop    ebp
  406fb9:	ret    
  406fba:	clc    
  406fbb:	jne    0x407020
  406fbd:	push   0xc2cc0eb7
  406fc2:	das    
  406fc3:	xor    DWORD PTR [esi],eax
  406fc5:	leave  
  406fc6:	test   al,0x54
  406fc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fc9:	(bad)  
  406fca:	mov    bh,0xc3
  406fcc:	add    eax,0x4b42e4f1
  406fd1:	inc    ebp
  406fd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fd3:	repz clc 
  406fd5:	jecxz  0x40702a
  406fd7:	aam    0xf8
  406fd9:	pop    ds
  406fda:	cdq    
  406fdb:	cdq    
  406fdc:	xchg   edx,eax
  406fdd:	mov    DWORD PTR [edi],0xfa46123f
  406fe3:	mov    ecx,?
  406fe5:	pop    edx
  406fe6:	scas   eax,DWORD PTR es:[edi]
  406fe7:	mov    bl,0x39
  406fe9:	xor    eax,0x74a3eb5d
  406fee:	sub    dh,BYTE PTR [ecx+0x2f90ae8a]
  406ff4:	jmp    0x406f8a
  406ff6:	mov    ah,0xaf
  406ff8:	clc    
  406ff9:	xchg   edi,eax
  406ffa:	js     0x407020
  406ffc:	mov    dh,0x60
  406ffe:	push   ds
  406fff:	cld    
  407000:	aaa    
  407001:	cmc    
  407002:	dec    esp
  407003:	or     al,0x41
  407005:	mov    ds:0x86bdc7a0,al
  40700a:	std    
  40700b:	pusha  
  40700c:	out    0xb8,eax
  40700e:	pop    ebp
  40700f:	ror    dl,0x62
  407012:	pop    esi
  407013:	out    0xef,al
  407015:	jmp    0x407064
  407017:	loop   0x406fb8
  407019:	mov    ds:0x8ebc60d,eax
  40701e:	xlat   BYTE PTR ds:[ebx]
  40701f:	lds    edi,FWORD PTR [ecx-0x3]
  407022:	imul   esp,DWORD PTR [edi-0x77bbb2c6],0xffffffb1
  407029:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40702a:	std    
  40702b:	add    DWORD PTR [ebp-0x28],0xffffff99
  40702f:	scas   al,BYTE PTR es:[edi]
  407030:	pop    edx
  407031:	fldcw  WORD PTR [edi+0x17]
  407034:	cmp    eax,0xb48f81d9
  407039:	jae    0x406fc3
  40703b:	pop    esi
  40703c:	xchg   esi,eax
  40703d:	in     eax,dx
  40703e:	std    
  40703f:	rcr    BYTE PTR [edi],cl
  407041:	lock or eax,0xcfaec4f5
  407047:	shr    DWORD PTR [eax+0x51],1
  40704a:	jns    0x406fe5
  40704c:	sub    ebp,DWORD PTR ds:[ebx-0x6]
  407050:	shl    edx,0x8d
  407053:	inc    eax
  407054:	fcom   DWORD PTR [ebx+ebx*1+0x44]
  407058:	push   ebx
  407059:	outs   dx,BYTE PTR ds:[esi]
  40705a:	pop    ss
  40705b:	cwde   
  40705c:	adc    DWORD PTR [edi+0x5b],ecx
  40705f:	into   
  407060:	loop   0x406ffb
  407062:	inc    edx
  407063:	not    BYTE PTR [edi-0x6fceac52]
  407069:	(bad)  
  40706a:	sbb    al,0x81
  40706c:	sbb    ebp,esp
  40706e:	inc    eax
  40706f:	push   ss
  407070:	call   0x264a:0x609bd77d
  407077:	hlt    
  407078:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407079:	push   esp
  40707a:	jno    0x4070c2
  40707c:	xor    BYTE PTR [ebp-0x247aff89],ah
  407082:	sbb    eax,0x7c242166
  407087:	add    cl,0x7c
  40708a:	cs push edi
  40708c:	cmc    
  40708d:	dec    esi
  40708e:	vxorps ymm2,ymm4,YMMWORD PTR ds:0xae344d33
  407096:	mov    al,ds:0xdd86c5a3
  40709b:	loope  0x40709f
  40709d:	sbb    al,0xf7
  40709f:	pop    ds
  4070a0:	sahf   
  4070a1:	shr    BYTE PTR [ebx+0x13377a23],1
  4070a7:	mov    edi,0x906db53f
  4070ac:	or     DWORD PTR [esi-0x1c430d93],esp
  4070b2:	add    eax,0x30c417f0
  4070b7:	repnz dec ebp
  4070b9:	outs   dx,BYTE PTR ds:[esi]
  4070ba:	(bad)  
  4070bc:	dec    ebp
  4070bd:	sahf   
  4070be:	adc    al,0x40
  4070c0:	mov    ecx,0x27c6d23f
  4070c5:	inc    BYTE PTR [eax+0x72ef5d5d]
  4070cb:	ss xor al,0xf3
  4070ce:	aam    0x93
  4070d0:	xor    al,0x51
  4070d2:	pop    ecx
  4070d3:	adc    DWORD PTR [eax+eiz*4],ebx
  4070d6:	(bad)  
  4070d7:	popf   
  4070d8:	adc    DWORD PTR [ebx],ebx
  4070da:	cmp    edi,edx
  4070dc:	inc    esp
  4070dd:	xchg   edi,eax
  4070de:	int    0x5a
  4070e0:	int3   
  4070e1:	shl    BYTE PTR [eax-0x4d30d79f],1
  4070e7:	pop    ds
  4070e8:	daa    
  4070e9:	adc    edx,ecx
  4070eb:	jl     0x4070ae
  4070ed:	retf   0x2f9
  4070f0:	mov    ebx,0x1250de1c
  4070f5:	pop    ecx
  4070f6:	jmp    0x3a51f73f
  4070fb:	aad    0x1f
  4070fd:	sbb    dl,cl
  4070ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407100:	push   ds
  407101:	fwait
  407102:	dec    edx
  407103:	pop    ds
  407104:	cmc    
  407105:	mov    edx,0x8e36aad6
  40710a:	mov    ch,0xa2
  40710c:	repz aad 0x42
  40710f:	xchg   ebx,eax
  407110:	mov    al,0x85
  407112:	inc    esi
  407113:	xchg   esp,eax
  407114:	sub    eax,0x5292bd94
  407119:	xor    cl,BYTE PTR [ebp+0x5e]
  40711c:	push   cs
  40711d:	das    
  40711e:	xor    ebp,esi
  407120:	xor    eax,0xd5231c3f
  407125:	fdivr  st,st(3)
  407127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407128:	and    al,0x5f
  40712a:	pandn  mm3,QWORD PTR [edi+0x78]
  40712e:	outs   dx,BYTE PTR ds:[esi]
  40712f:	hlt    
  407130:	cmp    al,0x55
  407132:	adc    ah,0x18
  407135:	lds    edi,FWORD PTR [ebx-0x7dce984f]
  40713b:	mov    ecx,DWORD PTR [eax-0x22daa1d6]
  407141:	sbb    BYTE PTR [edi+ebx*4],al
  407144:	pop    ss
  407145:	mov    dh,0x1d
  407147:	mov    bl,0x5a
  407149:	push   cs
  40714a:	xor    BYTE PTR [ecx-0x4de91049],dh
  407150:	sbb    ebp,DWORD PTR [edx-0x17]
  407153:	xor    DWORD PTR [edi+0xf],0x38
  407157:	retf   
  407158:	ins    DWORD PTR es:[edi],dx
  407159:	jp     0x4070ec
  40715b:	cli    
  40715c:	add    al,0xbb
  40715e:	mov    esp,0x7d488060
  407163:	mov    dl,0xb4
  407165:	out    dx,al
  407166:	dec    ebx
  407167:	dec    esi
  407168:	(bad)  
  407169:	sbb    al,0xe4
  40716b:	jmp    0xa4849897
  407170:	pop    esi
  407171:	out    dx,eax
  407172:	xchg   ebx,eax
  407173:	idiv   DWORD PTR [ecx+edi*8-0x7a]
  407177:	jo     0x4071d2
  407179:	(bad)  
  40717a:	pop    esp
  40717b:	push   edx
  40717c:	rol    BYTE PTR [esp+ebx*2+0x58],0xee
  407181:	push   0xffffffc8
  407183:	adc    ecx,DWORD PTR [eax+0x355c7a15]
  407189:	add    bl,dl
  40718b:	xchg   BYTE PTR [eax+ebx*4-0xbd35acf],cl
  407192:	lahf   
  407193:	sbb    ch,ch
  407195:	jae    0x4071eb
  407197:	data16 js 0x407192
  40719a:	retf   0x5f55
  40719d:	imul   esp,DWORD PTR [eax],0x501b9a41
  4071a3:	sbb    esi,edx
  4071a5:	push   edi
  4071a6:	cmp    BYTE PTR [esi+0x52ffba24],cl
  4071ac:	pop    eax
  4071ad:	sti    
  4071ae:	pop    esi
  4071af:	adc    cl,ch
  4071b1:	dec    edx
  4071b2:	mov    ?,WORD PTR [esi-0x38]
  4071b5:	jo     0x4071f5
  4071b7:	dec    esp
  4071b8:	or     DWORD PTR [eax+ebx*8+0x43a09d16],0x1a9944c2
  4071c3:	push   ebp
  4071c4:	(bad)  
  4071c5:	jg     0x4071ec
  4071c7:	daa    
  4071c8:	fcmovne st,st(7)
  4071ca:	adc    al,0xd3
  4071cc:	imul   edx,DWORD PTR [ebx+0x5205fb01],0xbb3ea55c
  4071d6:	jbe    0x40724d
  4071d8:	pop    es
  4071d9:	(bad)  
  4071da:	lods   al,BYTE PTR ds:[esi]
  4071db:	les    ecx,FWORD PTR [eax+0x36]
  4071de:	loop   0x407163
  4071e0:	in     al,0x90
  4071e2:	pop    edi
  4071e3:	mov    ds:0x533a3dd,al
  4071e8:	sbb    al,0x95
  4071ea:	pop    ebx
  4071eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071ec:	lods   eax,DWORD PTR ds:[esi]
  4071ed:	or     eax,0x76dda7d9
  4071f2:	stc    
  4071f3:	xchg   DWORD PTR [edi+0x311b43ab],edx
  4071f9:	pushf  
  4071fa:	les    eax,FWORD PTR [edi]
  4071fc:	cdq    
  4071fd:	mov    eax,0x18082af9
  407202:	xchg   edi,eax
  407203:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407204:	int3   
  407205:	push   esp
  407206:	rol    BYTE PTR ds:0x1969472e,0xda
  40720d:	pop    edx
  40720e:	jnp    0x40719f
  407210:	cmp    dh,BYTE PTR [esi+0x138efcdd]
  407216:	sub    eax,0x9c2fc23c
  40721b:	dec    esi
  40721c:	mov    DWORD PTR [ecx],esi
  40721e:	jae    0x407269
  407220:	imul   edi,DWORD PTR [ecx+0x4fe433b3],0xc5d4bbe1
  40722a:	mov    DWORD PTR [eax+0xb],esp
  40722d:	sub    ecx,DWORD PTR [eax+0x52]
  407230:	mov    ah,0x3f
  407232:	xor    al,0x62
  407234:	(bad)  
  407235:	ss push edx
  407237:	pop    ss
  407238:	dec    ecx
  407239:	cmp    BYTE PTR [eax-0x71],dh
  40723c:	dec    esp
  40723d:	inc    ebp
  40723e:	arpl   WORD PTR [ebx],ax
  407240:	ins    BYTE PTR es:[edi],dx
  407241:	popf   
  407242:	std    
  407243:	les    edx,FWORD PTR [ebx]
  407245:	push   0xf6057db9
  40724a:	mov    dh,BYTE PTR [ebx-0x7a3cd5b1]
  407250:	(bad)  
  407251:	sbb    ecx,ebx
  407253:	popa   
  407254:	sbb    al,0xb9
  407256:	add    BYTE PTR [esi*2+0x76a77ada],ah
  40725d:	int    0xd3
  40725f:	dec    ecx
  407260:	mov    ch,0x54
  407262:	dec    ebp
  407263:	or     esp,DWORD PTR [ebp+0x32]
  407266:	shl    BYTE PTR [ebx+0x1d6491a],1
  40726c:	pusha  
  40726d:	push   ss
  40726e:	shld   DWORD PTR [esi],edi,0x2c
  407272:	fwait
  407273:	push   0xa02e0884
  407278:	mov    esi,0x7d4a1d8b
  40727d:	out    0x74,eax
  40727f:	test   BYTE PTR [ecx+0x67],bh
  407282:	mov    bl,0x5c
  407284:	push   ss
  407285:	mov    esi,0x80bddceb
  40728a:	push   esp
  40728b:	iret   
  40728c:	clc    
  40728d:	jge    0x407287
  40728f:	(bad)  
  407290:	jns    0x407212
  407292:	pop    ss
  407293:	(bad)  
  407294:	ins    DWORD PTR es:[edi],dx
  407295:	pop    es
  407296:	adc    eax,0xd7caa2e8
  40729b:	inc    ebx
  40729c:	sahf   
  40729d:	adc    BYTE PTR [esi],0x2b
  4072a0:	fldenv [ecx]
  4072a2:	xor    ch,bl
  4072a4:	or     DWORD PTR [eax+0x4e558b42],esi
  4072aa:	scas   al,BYTE PTR es:[edi]
  4072ab:	xchg   ecx,eax
  4072ac:	pop    DWORD PTR [esi+0x5ab6047a]
  4072b2:	sar    edx,0xb3
  4072b5:	xchg   BYTE PTR [edi+0x7756d2a8],al
  4072bb:	mov    ebx,fs
  4072bd:	mov    ecx,esp
  4072bf:	xchg   BYTE PTR [ebx],bh
  4072c1:	xor    edi,DWORD PTR [eax+0x7945b3f5]
  4072c7:	inc    edi
  4072c8:	jbe    0x4072ad
  4072ca:	ds pop eax
  4072cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072cd:	mov    al,0x7b
  4072cf:	sub    al,0xe7
  4072d1:	sar    BYTE PTR [edi-0x12],1
  4072d4:	adc    eax,0x82b236ce
  4072d9:	lods   eax,DWORD PTR ds:[esi]
  4072da:	dec    ecx
  4072db:	retf   
  4072dc:	mov    al,0xdc
  4072de:	mov    edx,0x140e0dde
  4072e3:	mov    ecx,0xedb8f63c
  4072e8:	xlat   BYTE PTR ds:[ebx]
  4072e9:	test   eax,0x5212a407
  4072ee:	mov    ebp,0x910859c9
  4072f3:	fld    QWORD PTR [esi]
  4072f5:	lock shl DWORD PTR [ebx],1
  4072f8:	sbb    eax,0xdfc39caf
  4072fd:	push   ss
  4072fe:	jb     0x407295
  407300:	xchg   ebp,eax
  407301:	mov    ebx,0x1bf9cc5e
  407306:	nop
  407307:	scas   eax,DWORD PTR es:[edi]
  407308:	push   esp
  407309:	jmp    0x49e49d1d
  40730e:	mov    eax,0x78e673b0
  407313:	pcmpeqw mm1,QWORD PTR [ecx-0x66]
  407317:	xchg   edi,eax
  407318:	pop    ebp
  407319:	mov    ds:0x52f5d03c,al
  40731e:	sub    al,0xe8
  407320:	iret   
  407321:	fild   WORD PTR [edx-0x74]
  407324:	and    eax,0x376eab6a
  407329:	or     BYTE PTR [eax+0x6394b77d],dl
  40732f:	and    al,0xbb
  407331:	sub    edi,ecx
  407333:	aam    0x9d
  407335:	xor    BYTE PTR ds:0xcb3c044e,0xf4
  40733c:	push   0x36a10d52
  407341:	inc    esp
  407342:	cld    
  407343:	and    BYTE PTR [ecx+eiz*1-0xd987440],cl
  40734a:	mov    esp,0xd83c33ce
  40734f:	xchg   BYTE PTR [edi+ebp*4+0x743546c3],al
  407356:	dec    eax
  407357:	adc    DWORD PTR [edi+0x1ad8b67c],eax
  40735d:	mov    DWORD PTR [eax+0xc3fd9b2],esi
  407363:	clc    
  407364:	inc    ebp
  407365:	popfw  
  407367:	cmp    eax,0x1cea8a1e
  40736c:	outs   dx,BYTE PTR ds:[esi]
  40736d:	xchg   BYTE PTR [eax],dl
  40736f:	push   esi
  407370:	jne    0x4073de
  407372:	mov    DWORD PTR [edi-0x4514cc0b],esi
  407378:	inc    ecx
  407379:	stos   DWORD PTR es:[edi],eax
  40737a:	stc    
  40737b:	jmp    0x4073fc
  40737d:	jge    0x4073e8
  40737f:	mov    eax,0xfab5df41
  407384:	in     al,dx
  407385:	out    0x7e,eax
  407387:	(bad)  
  407388:	cmp    DWORD PTR [esi+0x4e],esp
  40738b:	daa    
  40738c:	repnz fcom DWORD PTR [eax]
  40738f:	cld    
  407390:	rcr    BYTE PTR [edi],0x27
  407393:	or     al,0xef
  407395:	xor    bh,BYTE PTR [ebx+0x73]
  407398:	xchg   ebp,eax
  407399:	mov    esi,0xc388ea9c
  40739e:	icebp  
  40739f:	outs   dx,BYTE PTR ds:[esi]
  4073a0:	mov    eax,0xa62c3daa
  4073a5:	or     al,0xb3
  4073a7:	bound  esp,QWORD PTR [edi+esi*8]
  4073aa:	xchg   ebx,eax
  4073ab:	and    eax,0xfd405abe
  4073b0:	mov    bh,0x6e
  4073b2:	and    BYTE PTR [esi-0x19],cl
  4073b5:	push   esi
  4073b6:	outs   dx,DWORD PTR ds:[esi]
  4073b7:	aad    0xc5
  4073b9:	xchg   ecx,eax
  4073ba:	outs   dx,BYTE PTR ds:[esi]
  4073bb:	and    edi,DWORD PTR [esi]
  4073bd:	jae    0x4073cf
  4073bf:	jge    0x407346
  4073c1:	adc    eax,0xdd9bcf2d
  4073c6:	jge    0x4073ad
  4073c8:	jns    0x407383
  4073ca:	or     BYTE PTR [eax+edx*4],dh
  4073cd:	std    
  4073ce:	retf   0x4fe8
  4073d1:	inc    esp
  4073d2:	mov    ecx,0x233e6b8b
  4073d7:	das    
  4073d8:	pop    edx
  4073d9:	sar    DWORD PTR [ebx-0x6d0671f9],cl
  4073df:	adc    BYTE PTR [esp+eax*4],dh
  4073e2:	and    esp,DWORD PTR [eax-0x1b]
  4073e5:	pop    edi
  4073e6:	repz pop ecx
  4073e8:	(bad)  
  4073e9:	or     DWORD PTR [ecx],ebp
  4073eb:	xchg   ecx,eax
  4073ec:	call   0x5775d03b
  4073f1:	cwd    
  4073f3:	mov    ch,0x2b
  4073f5:	imul   ebp,DWORD PTR [esi+0x3d],0x9815bf04
  4073fc:	(bad)  
  4073fd:	popf   
  4073fe:	cmp    al,ah
  407400:	push   0x2cef6603
  407405:	cmp    esi,DWORD PTR [ebx]
  407407:	(bad)  
  407408:	jmp    0xf0dbbeae
  40740d:	mov    dh,0xd8
  40740f:	or     DWORD PTR [esi-0xbe83710],ebp
  407415:	lods   al,BYTE PTR ds:[esi]
  407416:	cld    
  407417:	mov    edx,0xf3208281
  40741d:	adc    bl,BYTE PTR [esi-0x3e3f02d7]
  407423:	jmp    0x81165b8e
  407428:	mov    WORD PTR [edx+0x4cfbe9e5],es
  40742e:	retf   0xbaa6
  407431:	cmp    al,BYTE PTR [ebx]
  407433:	inc    ebp
  407434:	into   
  407435:	xor    ah,dh
  407437:	mov    esi,0xa6408df3
  40743c:	stos   BYTE PTR es:[edi],al
  40743d:	jbe    0x407437
  40743f:	xor    al,0xb5
  407441:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407443:	sub    DWORD PTR [esi+0x33d13459],esp
  407449:	cmp    ch,al
  40744b:	leave  
  40744c:	or     al,BYTE PTR [ebx]
  40744e:	imul   edi,DWORD PTR [esi-0x8b9d4bf],0x3c
  407455:	push   edi
  407456:	dec    edi
  407457:	xchg   edx,eax
  407458:	push   esp
  407459:	push   0xffffffdf
  40745b:	mov    esp,0x66b2d176
  407460:	inc    esi
  407461:	push   ecx
  407462:	mov    eax,0x8c89e369
  407467:	adc    ebx,ebx
  407469:	add    al,0x24
  40746b:	pop    ebp
  40746c:	xchg   ecx,eax
  40746d:	sub    DWORD PTR [ebx],0xf1c9c2a3
  407473:	data16 (bad) [ebx-0x10531c34]
  40747a:	or     DWORD PTR [esi],ecx
  40747c:	es sbb eax,ecx
  40747f:	mov    cl,0x69
  407481:	mov    eax,ds:0x48e6350a
  407486:	pop    ss
  407487:	xlat   BYTE PTR ds:[ebx]
  407488:	int    0x90
  40748a:	dec    esi
  40748b:	addr16 lahf 
  40748d:	xor    eax,0x994988f5
  407492:	arpl   WORD PTR [ecx-0x4369ca94],di
  407498:	ins    BYTE PTR es:[edi],dx
  407499:	in     eax,dx
  40749a:	push   ds
  40749b:	sub    ebx,DWORD PTR [ebp+ecx*2-0x3372ff06]
  4074a2:	clc    
  4074a3:	and    al,0xb
  4074a5:	sar    DWORD PTR [ebp-0x758bb252],cl
  4074ab:	in     al,dx
  4074ac:	ret    0x3019
  4074af:	es sub ah,al
  4074b2:	scas   al,BYTE PTR es:[edi]
  4074b3:	sbb    al,0x5a
  4074b5:	les    edx,FWORD PTR [eax+0x13]
  4074b8:	retf   
  4074b9:	call   0xbcd6:0xcff66a9a
  4074c0:	rcl    BYTE PTR [ecx+0x41a8fa9b],cl
  4074c6:	loopne 0x407475
  4074c8:	mov    dh,0x47
  4074ca:	aam    0x8d
  4074cc:	pop    es
  4074cd:	sub    BYTE PTR [ebx-0x4d544],al
  4074d3:	mov    cl,dl
  4074d5:	outs   dx,BYTE PTR ds:[esi]
  4074d6:	mov    ?,WORD PTR [edi-0x7efa780e]
  4074dc:	es sbb ax,0xda19
  4074e1:	les    edx,FWORD PTR [ecx-0x62846ce4]
  4074e7:	push   0xffffff93
  4074e9:	and    BYTE PTR [edi],dl
  4074eb:	out    0x6b,al
  4074ed:	pop    esi
  4074ee:	cmp    BYTE PTR [ebp-0x48],dh
  4074f1:	in     al,0xef
  4074f3:	or     ebx,eax
  4074f5:	adc    esi,0xffffffad
  4074f8:	dec    ebx
  4074f9:	fwait
  4074fa:	sbb    bl,ah
  4074fc:	cli    
  4074fd:	sbb    eax,0x6823912f
  407502:	outs   dx,DWORD PTR ds:[esi]
  407503:	into   
  407504:	loop   0x4074ea
  407506:	cmp    cl,dl
  407508:	jmp    0x4074f6
  40750a:	retf   
  40750b:	mov    eax,0x1c01f430
  407510:	jecxz  0x40756a
  407512:	(bad)  
  407513:	fstp   TBYTE PTR [edx-0x59cba583]
  407519:	fstp   TBYTE PTR [esp+eax*1-0xf]
  40751d:	scas   al,BYTE PTR es:[edi]
  40751e:	cli    
  40751f:	cdq    
  407520:	or     al,0x1f
  407522:	mov    ah,0x2e
  407524:	mov    ecx,0x515494e0
  407529:	iret   
  40752a:	mov    ds:0xe3648e50,eax
  40752f:	outs   dx,DWORD PTR ds:[esi]
  407530:	adc    DWORD PTR [edx],0xffffffd6
  407533:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407534:	jb     0x4075a9
  407536:	xchg   edi,eax
  407537:	cmc    
  407538:	sub    DWORD PTR [ebx+0x2ac6a0b8],eax
  40753e:	outs   dx,DWORD PTR ds:[esi]
  40753f:	sar    ebx,1
  407541:	mov    ebx,0x369f8049
  407546:	mov    edx,0xaa4f6b29
  40754b:	push   cs
  40754c:	in     al,0x8c
  40754e:	xchg   DWORD PTR [eax+0xbebb037],edx
  407554:	or     DWORD PTR [ebx+ebx*2-0x65d5095],edx
  40755b:	or     eax,ebp
  40755d:	jl     0x407532
  40755f:	in     al,dx
  407560:	(bad)  
  407561:	mov    cl,0x1b
  407563:	mov    esp,0x48a4eaa3
  407568:	into   
  407569:	push   ebx
  40756a:	rsqrtps xmm1,xmm6
  40756d:	cmp    DWORD PTR [ecx],ebp
  40756f:	loope  0x407568
  407571:	jne    0x407595
  407573:	fyl2xp1 
  407575:	sbb    al,0xa2
  407577:	retf   0xf150
  40757a:	gs dec eax
  40757c:	in     eax,dx
  40757d:	retf   0x5d20
  407580:	fimul  WORD PTR [ebx-0x524db300]
  407586:	retf   0x3f7c
  407589:	outs   dx,BYTE PTR ds:[esi]
  40758a:	xchg   esi,eax
  40758b:	push   cs
  40758c:	and    BYTE PTR [ebp+0x324f97d0],dl
  407592:	xor    cl,BYTE PTR [esi]
  407594:	and    al,0xfc
  407596:	mov    cs:0x334fad64,eax
  40759c:	jl     0x407575
  40759e:	cmp    eax,DWORD PTR [ebx]
  4075a0:	jne    0x40752e
  4075a2:	bound  ebp,QWORD PTR ds:0xba044697
  4075a8:	addr16 xchg ebp,eax
  4075aa:	jl     0x4075eb
  4075ac:	and    BYTE PTR [eax+0x3f951424],cl
  4075b2:	data16 (bad) 
  4075b5:	or     ch,BYTE PTR [esi]
  4075b7:	ins    DWORD PTR es:[edi],dx
  4075b8:	adc    al,0x94
  4075ba:	loop   0x4075c0
  4075bc:	mov    ss,WORD PTR [ecx]
  4075be:	test   DWORD PTR [edi],0x9ac9cec6
  4075c4:	retf   
  4075c5:	push   ebx
  4075c6:	ja     0x40758e
  4075c8:	popa   
  4075c9:	int    0xac
  4075cb:	mov    DWORD PTR [esi+edx*1+0x53],0xb868939b
  4075d3:	pop    eax
  4075d4:	xchg   esi,eax
  4075d5:	int    0x43
  4075d7:	iret   
  4075d8:	jno    0x4075ff
  4075da:	(bad)  
  4075dc:	adc    eax,0xc3405a0a
  4075e1:	dec    ebp
  4075e2:	ins    DWORD PTR es:[edi],dx
  4075e3:	adc    eax,0x2248492c
  4075e8:	jg     0x4075a3
  4075ea:	imul   edi,ebp,0xe2d84ea1
  4075f0:	add    DWORD PTR [eax],esi
  4075f2:	dec    esp
  4075f3:	ret    0x5fa7
  4075f6:	jle    0x4075e3
  4075f8:	imul   edx,DWORD PTR [eax],0x7557d6f1
  4075fe:	cmp    dh,ch
  407600:	or     eax,0x1873e082
  407605:	cmp    eax,0x29a53dd9
  40760a:	jne    0x407663
  40760c:	popa   
  40760d:	es (bad) 
  40760f:	mov    ds:0xe2a6b4e,al
  407614:	out    0xf2,al
  407616:	lahf   
  407617:	nop
  407618:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40761a:	add    edi,esi
  40761c:	hlt    
  40761d:	or     ebp,edx
  40761f:	add    dh,BYTE PTR [esi+0x440896d4]
  407625:	pop    ebx
  407626:	imul   esp,DWORD PTR [edx+0x72],0x95365fed
  40762d:	cmp    BYTE PTR [eax-0x65c9295a],bh
  407633:	add    edi,esp
  407635:	adc    bl,BYTE PTR [eax]
  407637:	jl     0x4075f1
  407639:	xor    ebp,DWORD PTR [esi+0x6062ecfb]
  40763f:	fsub   DWORD PTR [edx]
  407641:	jno    0x4076a3
  407643:	sub    bl,BYTE PTR [edx-0x61bf316b]
  407649:	loope  0x4075ea
  40764b:	aad    0x3c
  40764d:	jae    0x407674
  40764f:	inc    edi
  407650:	imul   esi,DWORD PTR [esi-0x638b2bbd],0x28c14976
  40765a:	mov    eax,ds:0x6acaa10e
  40765f:	fldenv [edx]
  407661:	cmp    eax,0xf623ec4b
  407666:	cmc    
  407667:	aaa    
  407668:	mov    cl,0x27
  40766a:	scas   eax,DWORD PTR es:[edi]
  40766b:	pop    ebx
  40766c:	in     al,0x59
  40766e:	jmp    0x7fea712a
  407673:	xchg   ebp,eax
  407674:	adc    DWORD PTR [ebp-0x2a],edi
  407677:	sub    esp,esp
  407679:	loop   0x407604
  40767b:	inc    esp
  40767c:	xchg   ebx,eax
  40767d:	pop    eax
  40767e:	sbb    BYTE PTR [edi-0x12d88b3b],ch
  407684:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407685:	sbb    dl,BYTE PTR ds:0x728df819
  40768b:	fmul   DWORD PTR [esi*8+0x3e112de7]
  407692:	pop    eax
  407693:	mov    cl,0xfd
  407695:	lds    ebx,FWORD PTR [ebp+eiz*1+0x1926e4d1]
  40769c:	shr    cl,0x9d
  40769f:	dec    edi
  4076a0:	and    eax,0x77382e06
  4076a5:	push   0x13
  4076a7:	unpcklps xmm1,XMMWORD PTR [esi+edx*4+0xe]
  4076ac:	pop    ebp
  4076ad:	retf   
  4076ae:	add    ebp,DWORD PTR [ebp-0x1b]
  4076b1:	add    cl,BYTE PTR [eax+0x79]
  4076b4:	cdq    
  4076b5:	xchg   edx,eax
  4076b6:	sbb    DWORD PTR [eax-0x65],0xffffff85
  4076ba:	fstp   QWORD PTR [ecx-0x4f755332]
  4076c0:	dec    ecx
  4076c1:	and    al,0x9a
  4076c3:	inc    ebx
  4076c4:	ins    DWORD PTR es:[edi],dx
  4076c5:	add    esp,DWORD PTR [edi+0x2a]
  4076c8:	and    esi,ebx
  4076ca:	js     0x40767c
  4076cc:	ror    BYTE PTR [edi+esi*2],1
  4076cf:	jns    0x4076bc
  4076d1:	ds adc dh,bl
  4076d4:	xchg   BYTE PTR [ebp-0x23],ch
  4076d7:	enter  0xa586,0xb6
  4076db:	enter  0x17d7,0xd4
  4076df:	jl     0x407713
  4076e1:	inc    ebp
  4076e2:	inc    esi
  4076e3:	jno    0x407759
  4076e5:	imul   eax,DWORD PTR ds:0x6c53b916,0x1e
  4076ec:	clc    
  4076ed:	jnp    0x407684
  4076ef:	scas   al,BYTE PTR es:[edi]
  4076f0:	ins    BYTE PTR es:[edi],dx
  4076f1:	push   ecx
  4076f2:	addr16 jge 0x4076a7
  4076f5:	mov    cl,ah
  4076f7:	cmp    al,0x89
  4076f9:	cmp    DWORD PTR [ecx+0x7],ecx
  4076fc:	in     al,dx
  4076fd:	imul   ebp,DWORD PTR [esi+0xab00fbb],0xa
  407704:	and    eax,0xdbafa42e
  407709:	and    BYTE PTR [esi],al
  40770b:	mov    ds:0x1d30d785,al
  407710:	mov    ds:0xe201905b,al
  407715:	mov    ds:0xeebaa0e6,eax
  40771a:	(bad)  
  40771b:	add    esi,DWORD PTR [edx-0x753a23fa]
  407721:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407722:	xor    dh,BYTE PTR [eax+0x77]
  407725:	out    0x65,eax
  407727:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407728:	cmp    al,0x47
  40772a:	out    0x26,eax
  40772c:	in     eax,0xdb
  40772e:	add    BYTE PTR [ebx-0x34537ce1],ah
  407734:	jae    0x40774c
  407736:	push   ecx
  407737:	jg     0x40775f
  407739:	test   al,0xa4
  40773b:	jg     0x4077ae
  40773d:	inc    ebp
  40773e:	xchg   esi,eax
  40773f:	ins    BYTE PTR es:[edi],dx
  407740:	jecxz  0x40777f
  407742:	fnstsw WORD PTR [edx-0x74]
  407745:	lea    ebp,[edi+0x7801fa01]
  40774b:	aas    
  40774c:	daa    
  40774d:	(bad)  
  40774e:	inc    DWORD PTR [ebp-0x3f47dbd7]
  407754:	mov    ch,0xe5
  407756:	clc    
  407757:	arpl   WORD PTR [ecx],si
  407759:	dec    edx
  40775a:	push   es
  40775b:	xor    edi,DWORD PTR [ebx-0x46]
  40775e:	(bad)  
  40775f:	clc    
  407760:	mov    ah,BYTE PTR [ecx-0x7e]
  407763:	jo     0x407772
  407765:	sbb    dl,al
  407767:	dec    ebx
  407768:	jnp    0x4076ee
  40776a:	add    esp,DWORD PTR [esi-0x75668a87]
  407770:	pmaxsw mm2,QWORD PTR [edx+edi*8-0x75]
  407775:	add    bh,BYTE PTR [edx-0x619444d]
  40777b:	mov    edi,0xe8d4ba5f
  407780:	push   cs
  407781:	js     0x40778c
  407783:	mov    ch,0xbc
  407785:	cs loopne 0x407759
  407788:	scas   al,BYTE PTR es:[edi]
  407789:	xor    al,0x1c
  40778b:	daa    
  40778c:	lds    esi,FWORD PTR [ecx+0x62]
  40778f:	and    DWORD PTR ss:[ebx],eax
  407792:	test   DWORD PTR [eax-0x483f5876],esp
  407798:	mov    ah,BYTE PTR [eax-0x6e]
  40779b:	push   edx
  40779c:	and    eax,0x1383631a
  4077a1:	push   edx
  4077a2:	aaa    
  4077a3:	dec    esi
  4077a4:	mov    es,WORD PTR [eax+0x4f3b03cd]
  4077aa:	lods   al,BYTE PTR ds:[esi]
  4077ab:	inc    esp
  4077ac:	sbb    cl,dl
  4077ae:	add    cl,dl
  4077b0:	and    BYTE PTR [ecx-0x225ed47],dl
  4077b6:	and    al,0xfe
  4077b8:	fwait
  4077b9:	int3   
  4077ba:	mov    ebx,0xa3dda5f8
  4077bf:	addr16 sub al,0xa2
  4077c2:	(bad)
  4077c5:	cli    
  4077c6:	fmul   st,st(4)
  4077c8:	push   0xcacf05bf
  4077cd:	push   cs
  4077ce:	data16 xor ah,0xc6
  4077d2:	sbb    esp,DWORD PTR [ecx-0x527ce27]
  4077d8:	jnp    0x4077f1
  4077da:	clc    
  4077db:	dec    esi
  4077dc:	jne    0x40777b
  4077de:	xor    al,0xa5
  4077e0:	rcr    DWORD PTR [ecx+0x4e],0xb2
  4077e4:	fcmovb st,st(3)
  4077e6:	call   0x8c818531
  4077eb:	push   es
  4077ec:	dec    esi
  4077ed:	jecxz  0x407798
  4077ef:	inc    esi
  4077f0:	xor    ebp,0x48
  4077f3:	fs repnz pop esp
  4077f6:	mov    al,ds:0x8b1bde91
  4077fb:	pop    ss
  4077fc:	in     eax,dx
  4077fd:	inc    edi
  4077fe:	xchg   esp,eax
  4077ff:	call   0x4644ab88
  407804:	test   DWORD PTR [esi+0x620813f7],esi
  40780a:	xlat   BYTE PTR ds:[ebx]
  40780b:	stos   BYTE PTR es:[edi],al
  40780c:	ficom  WORD PTR [ebp+0x59a84d6d]
  407812:	and    eax,0xe1f2ffba
  407817:	fwait
  407818:	or     ecx,DWORD PTR [esi]
  40781a:	js     0x40780c
  40781c:	stos   DWORD PTR es:[edi],eax
  40781d:	or     ebx,DWORD PTR [ebx]
  40781f:	sub    esp,eax
  407821:	out    dx,eax
  407822:	xlat   BYTE PTR ds:[ebx]
  407823:	mov    bh,0xb2
  407825:	add    edx,DWORD PTR [ecx+0x36]
  407828:	push   esp
  407829:	xchg   dh,dh
  40782b:	jne    0x4077d8
  40782d:	imul   ebp,DWORD PTR [eax-0x526b0699],0x85b05e6d
  407837:	js     0x407866
  407839:	sbb    eax,ebp
  40783b:	cmp    DWORD PTR ds:0x89c41c9e,esi
  407841:	mov    bl,0x36
  407843:	pop    edi
  407844:	retf   0x3f0b
  407847:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407848:	mov    ecx,0x9a6cb583
  40784d:	or     DWORD PTR [esi],edi
  40784f:	jecxz  0x407814
  407851:	pop    ecx
  407852:	packsswb mm6,QWORD PTR [edx-0xa]
  407856:	pop    ebp
  407857:	fild   DWORD PTR [esi+eiz*8+0x6197893f]
  40785e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40785f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407860:	mov    BYTE PTR [edx],dh
  407862:	imul   edi,DWORD PTR [eax-0x3e],0xfffffff7
  407866:	(bad)  
  407867:	retf   
  407868:	sub    al,0xc2
  40786a:	inc    edx
  40786b:	jns    0x4077f2
  40786d:	pop    esp
  40786e:	lahf   
  40786f:	nop
  407870:	out    0x2d,al
  407872:	out    dx,al
  407873:	bound  esi,QWORD PTR [esi+0x655f567e]
  407879:	cli    
  40787a:	popa   
  40787b:	inc    ecx
  40787c:	jmp    0xe5d7dcd0
  407881:	jg     0x407837
  407883:	fldenv [esi+0x1b61d295]
  407889:	pop    ss
  40788a:	push   edx
  40788b:	ss push ecx
  40788d:	loope  0x4078a7
  40788f:	inc    ebx
  407890:	jnp    0x4078cd
  407892:	mov    cl,0x1a
  407894:	mov    cl,0xe3
  407896:	sti    
  407897:	add    DWORD PTR [ebx+eax*1-0x5545e081],edx
  40789e:	xor    al,0x81
  4078a0:	adc    eax,DWORD PTR [esi-0x36]
  4078a3:	ds test al,0xcd
  4078a6:	push   eax
  4078a7:	jg     0x407887
  4078a9:	iret   
  4078aa:	ficomp DWORD PTR [edi+0x73552eb0]
  4078b0:	aaa    
  4078b1:	test   eax,0x25809b12
  4078b6:	iret   
  4078b7:	pop    edx
  4078b8:	jg     0x407935
  4078ba:	adc    ebp,DWORD PTR [ebx+eiz*4-0x5139fe5]
  4078c1:	push   ds
  4078c2:	mov    eax,ds:0x93a465f4
  4078c7:	neg    DWORD PTR ds:0x2f8e5d08
  4078cd:	mov    eax,ss:0x84e9c13e
  4078d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078d4:	div    BYTE PTR [edx+0x60]
  4078d7:	dec    ecx
  4078d8:	sub    eax,esp
  4078da:	jno    0x4078e7
  4078dc:	dec    edx
  4078dd:	push   cs
  4078de:	push   es
  4078df:	aas    
  4078e0:	sbb    BYTE PTR [ecx-0x678ccd81],al
  4078e6:	sbb    DWORD PTR [esi-0x17],0x3d
  4078ea:	test   dl,ah
  4078ec:	(bad)  
  4078ed:	in     al,0xd4
  4078ef:	ds hlt 
  4078f1:	(bad)  
  4078f2:	push   ebp
  4078f3:	sbb    al,0x9
  4078f5:	pushf  
  4078f6:	test   eax,0x7abc4e02
  4078fb:	add    BYTE PTR [ecx+0x3f],al
  4078fe:	push   0xfffffffb
  407900:	dec    ebp
  407901:	ficomp DWORD PTR [ecx]
  407903:	test   bl,ch
  407905:	jnp    0x4078a0
  407907:	ret    0x6af2
  40790a:	jecxz  0x4078cc
  40790c:	retf   0xde5a
  40790f:	test   al,0xa
  407911:	jmp    0x407953
  407913:	stc    
  407914:	mov    al,0xd6
  407916:	pop    esp
  407917:	(bad)  
  407918:	loopne 0x4078eb
  40791a:	(bad)
  40791e:	out    dx,eax
  40791f:	scas   eax,DWORD PTR es:[edi]
  407920:	sbb    ecx,DWORD PTR [edx]
  407922:	adc    eax,0x41fdbda4
  407927:	jp     0x4078db
  407929:	pushf  
  40792a:	or     eax,0xb186ad71
  40792f:	inc    esi
  407930:	ins    DWORD PTR es:[edi],dx
  407931:	aas    
  407932:	or     eax,0x7ccb01fc
  407937:	outs   dx,DWORD PTR ds:[esi]
  407938:	push   edx
  407939:	lds    edx,FWORD PTR [esi+esi*2]
  40793c:	cli    
  40793d:	(bad)  
  40793e:	pop    ebp
  40793f:	es in  al,0x77
  407942:	and    esp,DWORD PTR [ebp+0x4e53d42f]
  407948:	mov    ah,0xba
  40794a:	push   ss
  40794b:	iret   
  40794c:	stc    
  40794d:	push   0x27ae5f3e
  407952:	fisttp DWORD PTR [ebx-0x2b3897ed]
  407958:	pushf  
  407959:	enter  0x1edb,0xae
  40795d:	pop    es
  40795e:	test   BYTE PTR [ecx],bh
  407960:	jle    0x407944
  407962:	jp     0x4079df
  407964:	xchg   BYTE PTR [ebx+0x6d],bl
  407967:	mov    DWORD PTR ds:[ebx],ebp
  40796a:	aam    0xef
  40796c:	xchg   ebp,eax
  40796d:	xor    al,0xca
  40796f:	sti    
  407970:	test   BYTE PTR ss:[ebx-0x5507c67a],ch
  407977:	sahf   
  407978:	arpl   WORD PTR [edx+esi*4],sp
  40797b:	ror    BYTE PTR [eax],1
  40797d:	push   esp
  40797e:	mov    ch,0x68
  407980:	dec    edi
  407981:	adc    ecx,DWORD PTR [ecx]
  407983:	std    
  407984:	or     al,0x68
  407986:	push   edx
  407987:	sbb    BYTE PTR [edi-0xaa47ee9],dh
  40798d:	dec    esi
  40798e:	(bad)  
  40798f:	pop    DWORD PTR [ebp+0x2f]
  407992:	sub    esi,DWORD PTR [eax]
  407994:	cld    
  407995:	mov    ds:0x1c685db8,al
  40799a:	cmp    DWORD PTR [esi+ecx*8],ebp
  40799d:	outs   dx,BYTE PTR ds:[esi]
  40799e:	stos   BYTE PTR es:[edi],al
  40799f:	test   eax,0x34812128
  4079a4:	push   edi
  4079a5:	hlt    
  4079a6:	cli    
  4079a7:	mov    al,0x47
  4079a9:	loopne 0x407940
  4079ab:	stos   DWORD PTR es:[edi],eax
  4079ac:	mov    ah,0x2d
  4079ae:	push   ebp
  4079af:	rcr    esi,1
  4079b1:	cmp    BYTE PTR [ecx],0xcc
  4079b4:	ret    0xcfb3
  4079b7:	popa   
  4079b8:	or     BYTE PTR [ebx-0x6c2cafd3],dh
  4079be:	and    eax,0x8c8a1025
  4079c3:	mov    edx,0xce8f3d06
  4079c8:	push   eax
  4079c9:	xlat   BYTE PTR ds:[ebx]
  4079ca:	into   
  4079cb:	in     al,0x6b
  4079cd:	push   cs
  4079ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079cf:	test   eax,0xe624a543
  4079d4:	das    
  4079d5:	ror    BYTE PTR [ebp-0xb914044],1
  4079db:	mov    bh,0xa
  4079dd:	scas   eax,DWORD PTR es:[edi]
  4079de:	ss aam 0x7e
  4079e1:	sti    
  4079e2:	mov    edi,0x9c3267b
  4079e7:	in     al,dx
  4079e8:	test   BYTE PTR [eax+0x615dc630],cl
  4079ee:	enter  0x44,0x60
  4079f2:	out    0x33,al
  4079f4:	adc    eax,ecx
  4079f6:	cmp    edx,DWORD PTR [ebx-0x9]
  4079f9:	jge    0x407a30
  4079fb:	jbe    0x4079d4
  4079fd:	seto   BYTE PTR [ebx]
  407a00:	pusha  
  407a01:	mov    al,0x3b
  407a03:	pop    ss
  407a04:	test   al,0x44
  407a06:	jecxz  0x407a51
  407a08:	stc    
  407a09:	clc    
  407a0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a0b:	lods   eax,DWORD PTR ds:[esi]
  407a0c:	ss jmp 0x4079f2
  407a0f:	inc    edi
  407a10:	inc    ebx
  407a11:	(bad)  
  407a12:	xor    BYTE PTR [edx],cl
  407a14:	pop    esi
  407a15:	cmp    edx,ecx
  407a17:	repnz xchg ecx,eax
  407a19:	cld    
  407a1a:	mov    WORD PTR [edx+0x56],gs
  407a1d:	sar    DWORD PTR [ecx],cl
  407a1f:	hlt    
  407a20:	jno    0x407a3a
  407a22:	shr    BYTE PTR [esi+ecx*2+0x4b],cl
  407a26:	sbb    al,0xde
  407a28:	cdq    
  407a29:	mov    bl,0xb6
  407a2b:	test   eax,0x645de467
  407a30:	adc    ebx,eax
  407a32:	clc    
  407a33:	or     BYTE PTR [ebx+eiz*2],al
  407a36:	ret    0x99b1
  407a39:	outs   dx,DWORD PTR ds:[esi]
  407a3a:	jmp    0x407a3a
  407a3c:	xchg   edx,eax
  407a3d:	mov    esp,0xcbe2cf41
  407a42:	sub    DWORD PTR [eax-0x69],esp
  407a45:	mov    ecx,DWORD PTR [ebp-0x4]
  407a48:	mov    edx,DWORD PTR [ebp-0x30]
  407a4b:	xor    ecx,ebx
  407a4d:	add    ecx,eax
  407a4f:	cmp    edx,ecx
  407a51:	je     0x407abe
  407a57:	lea    eax,[ebp-0x8]
  407a5a:	push   eax
  407a5b:	push   DWORD PTR [ebp-0x28]
  407a5e:	push   DWORD PTR [ebp+0xc]
  407a61:	call   0x40f238
  407a66:	mov    eax,0x3272dd
  407a6b:	mov    ecx,DWORD PTR [ebp-0x4]
  407a6e:	mov    edx,DWORD PTR [ebp-0x8]
  407a71:	xor    ecx,ebx
  407a73:	add    ecx,eax
  407a75:	cmp    edx,ecx
  407a77:	je     0x407a92
  407a7d:	mov    ecx,DWORD PTR [ebp-0x34]
  407a80:	movzx  ecx,WORD PTR [ecx+esi*2]
  407a84:	mov    edx,DWORD PTR [ebp-0x18]
  407a87:	mov    ecx,DWORD PTR [edx+ecx*4]
  407a8a:	mov    DWORD PTR [ebp-0x38],ecx
  407a8d:	jmp    0x4056db
  407a92:	mov    ecx,DWORD PTR [ebp-0x14]
  407a95:	xor    ecx,ebx
  407a97:	lea    esi,[esi+ecx*1+0x3272dd]
  407a9e:	jmp    0x40540c
  407aa3:	mov    eax,DWORD PTR [ebp-0x4]
  407aa6:	xor    eax,ebx
  407aa8:	add    eax,edi
  407aaa:	jmp    0x409f7a
  407aaf:	mov    eax,DWORD PTR [ebp-0x4]
  407ab2:	xor    eax,ebx
  407ab4:	add    eax,0x3272dd
  407ab9:	jmp    0x409f7a
  407abe:	mov    ecx,DWORD PTR [ebp-0x38]
  407ac1:	add    ecx,DWORD PTR [ebp+0x8]
  407ac4:	mov    DWORD PTR [ebp-0x10],ecx
  407ac7:	mov    ecx,DWORD PTR [ebp-0x1c]
  407aca:	test   ecx,ecx
  407acc:	je     0x409f05
  407ad2:	mov    DWORD PTR [ebp-0x20],0x0
  407ad9:	push   0x3
  407adb:	xor    edx,edx
  407add:	pop    edx
  407ade:	add    edx,0x8
  407ae1:	push   edx
  407ae2:	pop    ecx
  407ae3:	push   0x6
  407ae5:	dec    ecx
  407ae6:	pop    ebx
  407ae7:	dec    ebx
  407ae8:	xchg   ebx,ecx
  407aea:	sub    ebx,ecx
  407aec:	xchg   ebx,ecx
  407aee:	dec    ecx
  407aef:	mov    eax,DWORD PTR [ebp-0x1c]
  407af2:	imul   eax,ecx
  407af5:	sub    esp,eax
  407af7:	mov    DWORD PTR [ebp-0x20],esp
  407afa:	mov    eax,DWORD PTR [ebp-0x4]
  407afd:	mov    ecx,0x7510896
  407b02:	xor    eax,ecx
  407b04:	mov    edx,0x3272dd
  407b09:	add    eax,edx
  407b0b:	mov    DWORD PTR [ebp+0x8],eax
  407b0e:	mov    eax,DWORD PTR [ebp-0x14]
  407b11:	xor    eax,ecx
  407b13:	add    eax,edx
  407b15:	mov    edx,DWORD PTR [ebp+0x14]
  407b18:	jmp    0x409e70
  407b1d:	push   es
  407b1e:	or     DWORD PTR [esi],ebx
  407b20:	xchg   DWORD PTR [ecx],eax
  407b22:	xchg   DWORD PTR [ebx+0x7caff18b],ecx
  407b28:	xor    eax,0xb349c63a
  407b2d:	nop
  407b2e:	and    BYTE PTR [edx+0x7a],bh
  407b31:	aaa    
  407b32:	pop    edi
  407b33:	jp     0x407baf
  407b35:	ss jle 0xde14fbbd
  407b3c:	daa    
  407b3d:	cmp    al,0xb3
  407b3f:	rcr    DWORD PTR [ebx],0xbb
  407b42:	mov    edx,eax
  407b44:	aad    0xd
  407b46:	mov    eax,ds:0x6a492546
  407b4b:	ja     0x407b6b
  407b4d:	mov    bh,0x56
  407b4f:	sahf   
  407b50:	ins    DWORD PTR es:[edi],dx
  407b51:	push   eax
  407b53:	dec    esp
  407b55:	lds    ecx,FWORD PTR ds:0x2e2fa9a7
  407b5b:	add    dl,BYTE PTR [edx]
  407b5d:	in     eax,0x4a
  407b5f:	dec    edx
  407b60:	cmp    edx,DWORD PTR [edi-0x43b8b671]
  407b66:	adc    eax,0x651cbc46
  407b6b:	mov    ebp,0x252ad81e
  407b70:	fbstp  TBYTE PTR [ecx-0x6b]
  407b73:	retf   0x509d
  407b76:	shl    BYTE PTR [esi-0x2574205c],0x3b
  407b7d:	test   BYTE PTR [esi-0x9],0xca
  407b81:	das    
  407b82:	adc    ebx,DWORD PTR [edx+0x22]
  407b85:	ss das 
  407b87:	xor    ebx,DWORD PTR [edx-0x1b]
  407b8a:	pop    esi
  407b8b:	adc    edx,DWORD PTR [eax+0x1fce316b]
  407b91:	mov    dh,0x4b
  407b93:	(bad)  
  407b94:	pop    ebx
  407b95:	inc    eax
  407b96:	dec    esp
  407b97:	inc    edi
  407b98:	jns    0x407bc6
  407b9a:	pop    es
  407b9b:	adc    dl,BYTE PTR [eax-0x75]
  407b9e:	imul   esp,edi,0x20
  407ba1:	and    DWORD PTR [ebp+0xe],0xed3628dc
  407ba8:	repnz mov al,ds:0xf1816f9c
  407bae:	daa    
  407baf:	and    BYTE PTR [ebx+0x1e940e02],al
  407bb5:	in     eax,0xac
  407bb7:	data16 add al,ch
  407bba:	adc    al,0x8f
  407bbc:	int3   
  407bbd:	and    dl,al
  407bbf:	jmp    0xb4a5ab10
  407bc4:	and    al,BYTE PTR [ebp-0x558f5071]
  407bca:	xor    ebp,DWORD PTR [esi+0x76197a6d]
  407bd0:	add    dh,BYTE PTR ds:0x89da6708
  407bd6:	popf   
  407bd7:	(bad)  
  407bd8:	dec    edi
  407bd9:	popf   
  407bda:	dec    ecx
  407bdb:	ins    BYTE PTR es:[edi],dx
  407bdc:	pop    ecx
  407bdd:	pushf  
  407bde:	test   al,dh
  407be0:	dec    BYTE PTR [esi+0x43a368d6]
  407be6:	or     al,BYTE PTR [edi-0x74]
  407be9:	add    al,0xe
  407beb:	push   edx
  407bec:	sub    dl,BYTE PTR [ecx-0xa49c0d0]
  407bf2:	std    
  407bf3:	clc    
  407bf4:	adc    eax,0x3f6bae2b
  407bf9:	fbld   TBYTE PTR [edx-0x7f6d70bd]
  407bff:	push   cs
  407c00:	xchg   esp,eax
  407c01:	pushf  
  407c02:	inc    esi
  407c03:	inc    esi
  407c04:	repz bound ebx,QWORD PTR [edx-0x2e761d6e]
  407c0b:	inc    ebx
  407c0c:	dec    esi
  407c0d:	mov    BYTE PTR ds:0xc2654ba5,dl
  407c13:	sub    DWORD PTR [eax],edi
  407c15:	pop    es
  407c16:	sub    al,0x62
  407c18:	pop    edx
  407c19:	scas   al,BYTE PTR es:[edi]
  407c1a:	sahf   
  407c1b:	outs   dx,DWORD PTR ds:[esi]
  407c1c:	out    0x7c,eax
  407c1e:	push   esi
  407c1f:	test   al,0x19
  407c21:	stos   DWORD PTR es:[edi],eax
  407c22:	mov    dh,0x9c
  407c24:	das    
  407c25:	loopne 0x407c71
  407c27:	push   cs
  407c28:	and    cl,BYTE PTR [ecx+0x52cd5485]
  407c2e:	imul   ebp,DWORD PTR [ebp+0x48e44943],0xff062c1b
  407c38:	nop
  407c39:	mov    bl,0xba
  407c3b:	sbb    DWORD PTR [edx-0xff7730a],ebp
  407c41:	push   es
  407c42:	loopne 0x407c6d
  407c44:	mov    cl,0x8a
  407c46:	sbb    eax,0x5d61fd6d
  407c4b:	cwde   
  407c4c:	pop    edx
  407c4d:	into   
  407c4e:	imul   esi,edi,0x39cdcd26
  407c54:	or     bh,BYTE PTR [eax]
  407c56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c57:	and    al,ah
  407c59:	div    ebp
  407c5b:	pusha  
  407c5c:	scas   al,BYTE PTR es:[edi]
  407c5d:	pop    edx
  407c5e:	in     eax,dx
  407c5f:	daa    
  407c60:	mov    al,0x49
  407c62:	and    al,0xf8
  407c64:	dec    esp
  407c65:	sti    
  407c66:	jecxz  0x407c01
  407c68:	stos   BYTE PTR es:[edi],al
  407c69:	pop    eax
  407c6a:	out    0xf1,eax
  407c6c:	clc    
  407c6d:	push   0x7f4a2684
  407c72:	pop    es
  407c73:	ret    
  407c74:	(bad)  
  407c75:	aam    0xb
  407c77:	mov    ah,0x48
  407c79:	or     dh,BYTE PTR [ebx]
  407c7b:	cmp    BYTE PTR [eax-0x38],ch
  407c7e:	ds push eax
  407c80:	cmp    bh,BYTE PTR [edx-0x6c]
  407c83:	mov    bh,ah
  407c85:	outs   dx,BYTE PTR ds:[esi]
  407c86:	(bad)  
  407c87:	xlat   BYTE PTR ds:[ebx]
  407c88:	mov    edx,edi
  407c8a:	sbb    BYTE PTR [ebx+0x5d1469f5],dh
  407c90:	push   ds
  407c91:	stos   BYTE PTR es:[edi],al
  407c92:	mov    al,0x18
  407c94:	(bad)  
  407c95:	sbb    eax,0x17225d59
  407c9a:	es xchg eax,edi
  407c9d:	inc    ebp
  407c9e:	and    eax,0x9ce1d81b
  407ca3:	mov    esi,0x3a75e807
  407ca8:	mov    esp,0x95406e8e
  407cad:	lods   al,BYTE PTR ds:[esi]
  407cae:	push   ebp
  407caf:	popa   
  407cb0:	or     DWORD PTR [esi-0x5b],0xeafa38da
  407cb7:	mov    ecx,0xe2b1870
  407cbc:	jns    0x407d1a
  407cbe:	loopne 0x407d39
  407cc0:	jmp    0x407cf5
  407cc2:	cmp    ebp,DWORD PTR [esi]
  407cc4:	test   esi,esp
  407cc6:	sar    ch,cl
  407cc8:	in     eax,0x5d
  407cca:	pop    edi
  407ccb:	dec    ebx
  407ccc:	cmp    al,0xa6
  407cce:	ds dec esp
  407cd0:	sahf   
  407cd1:	push   ss
  407cd2:	adc    BYTE PTR [ebx-0x65],dh
  407cd5:	and    bh,bl
  407cd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cd8:	cmp    eax,0x58d39dc0
  407cdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cde:	push   ss
  407cdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ce0:	retf   
  407ce1:	jmp    0x2c86:0xd673d21b
  407ce8:	pop    es
  407ce9:	mov    ecx,0xbcc4caf1
  407cee:	adc    BYTE PTR [esi],cl
  407cf0:	add    esp,DWORD PTR ds:0x136b581a
  407cf6:	jg     0x407d63
  407cf8:	mov    ecx,0x4aa97144
  407cfd:	scas   al,BYTE PTR es:[edi]
  407cfe:	and    al,0xd
  407d00:	fsub   QWORD PTR [esi]
  407d02:	pop    es
  407d03:	(bad)  
  407d04:	and    eax,eax
  407d06:	sbb    al,0xdf
  407d08:	push   0x62b736ab
  407d0d:	aam    0xe4
  407d0f:	and    ebp,DWORD PTR [esi+0x21fe5e9d]
  407d15:	push   ds
  407d16:	cmp    BYTE PTR [esi-0x71],bh
  407d19:	or     dl,BYTE PTR [esi+0x33]
  407d1c:	sub    DWORD PTR [edx-0x35],edx
  407d1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d20:	(bad)  
  407d22:	mov    eax,0xbe7ec881
  407d27:	mov    edx,0x6c14a140
  407d2c:	pop    esp
  407d2d:	int    0xab
  407d2f:	outs   dx,BYTE PTR ds:[esi]
  407d30:	mov    ebx,0xb4a61196
  407d35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d36:	daa    
  407d37:	out    0x87,eax
  407d39:	adc    BYTE PTR [edi],0x28
  407d3c:	and    ch,ch
  407d3e:	cld    
  407d3f:	sbb    eax,0xb0d2ed93
  407d44:	out    0x75,eax
  407d46:	iret   
  407d47:	inc    esp
  407d48:	pop    ss
  407d49:	push   ss
  407d4a:	outs   dx,BYTE PTR ds:[esi]
  407d4b:	rol    dl,0x4e
  407d4e:	outs   dx,DWORD PTR ds:[esi]
  407d4f:	jb     0x407dbf
  407d51:	push   cs
  407d52:	pop    ecx
  407d53:	dec    ebp
  407d54:	aad    0xd2
  407d56:	and    DWORD PTR [eax-0x5a9d5794],eax
  407d5c:	std    
  407d5d:	jle    0x407d89
  407d5f:	xchg   esi,eax
  407d60:	adc    dh,BYTE PTR [edi+0x57]
  407d63:	sbb    al,0x75
  407d65:	int3   
  407d66:	mov    esi,0x603d654e
  407d6b:	nop
  407d6c:	or     bh,BYTE PTR [eax-0x2449e953]
  407d72:	inc    ebx
  407d73:	cmp    esp,DWORD PTR [eax]
  407d75:	jp     0x407d4b
  407d77:	and    eax,0x3175031b
  407d7c:	ins    DWORD PTR es:[edi],dx
  407d7d:	ds and ah,dh
  407d80:	add    ah,BYTE PTR ds:0x15019ca0
  407d86:	mov    eax,0xa0b40845
  407d8b:	stos   BYTE PTR es:[edi],al
  407d8c:	mov    WORD PTR [eax-0x192e3f25],?
  407d92:	fld    QWORD PTR [bp+si]
  407d95:	or     BYTE PTR [edi],bh
  407d97:	loop   0x407d23
  407d99:	scas   eax,DWORD PTR es:[edi]
  407d9a:	pop    esp
  407d9b:	outs   dx,BYTE PTR ds:[esi]
  407d9c:	inc    ebp
  407d9d:	js     0x407e12
  407d9f:	jp     0x407d5b
  407da1:	xor    BYTE PTR [eax+ecx*8],al
  407da4:	xchg   ecx,eax
  407da5:	sub    edx,esi
  407da7:	sub    eax,0x854364e5
  407dac:	cwde   
  407dad:	push   ds
  407dae:	retf   
  407daf:	ds mov edi,0xb6d4fb36
  407db5:	inc    edi
  407db6:	repz test esp,0x6397ec27
  407dbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dbe:	or     al,0x78
  407dc0:	dec    eax
  407dc1:	pop    esp
  407dc2:	dec    ebp
  407dc3:	xchg   DWORD PTR [edi+esi*8-0x628650cd],esi
  407dca:	mov    BYTE PTR [ebx],0x4f
  407dcd:	or     ebx,DWORD PTR [esi-0x1b542daa]
  407dd3:	out    dx,eax
  407dd4:	mov    ebx,0x61b4a420
  407dd9:	adc    BYTE PTR [ebp+0x2b789e3e],dh
  407ddf:	scas   al,BYTE PTR es:[edi]
  407de0:	mov    DWORD PTR ds:0x499f3948,ebp
  407de6:	js     0x407e0a
  407de8:	test   eax,0x444b73fd
  407ded:	lea    eax,[eax-0x4d04895d]
  407df3:	mov    eax,ds:0xfa38804b
  407df8:	xchg   edi,eax
  407df9:	js     0x407e78
  407dfb:	pusha  
  407dfc:	(bad)  
  407dfd:	mov    edi,DWORD PTR [eax+ecx*4+0x751e48e3]
  407e04:	mov    esp,0xc37147d3
  407e09:	jb     0x407e0a
  407e0b:	out    dx,al
  407e0c:	je     0x407db6
  407e0e:	adc    cl,BYTE PTR ds:0x7e2cd6b3
  407e14:	int    0xf9
  407e16:	xchg   ebx,eax
  407e17:	push   ebx
  407e18:	lahf   
  407e19:	jecxz  0x407e71
  407e1b:	repz cmp BYTE PTR [esp+edx*1-0x51],0xad
  407e21:	mov    ecx,0x55e0a2b7
  407e26:	popf   
  407e27:	add    bh,dh
  407e29:	dec    ecx
  407e2a:	jae    0x407de6
  407e2c:	lods   al,BYTE PTR ds:[esi]
  407e2d:	out    0x7a,al
  407e2f:	test   BYTE PTR [eax-0x56],dl
  407e32:	mov    ds:0xc676ab17,al
  407e37:	add    al,BYTE PTR [ecx-0x68]
  407e3a:	mov    ecx,0x2b720df3
  407e40:	push   0x40427b31
  407e45:	add    BYTE PTR ds:[eax],ah
  407e48:	xchg   ebp,eax
  407e49:	jge    0x407e6c
  407e4b:	mov    eax,0x7acf4a74
  407e51:	aad    0xaf
  407e53:	jns    0x407dfb
  407e55:	popf   
  407e56:	(bad)
  407e59:	pop    ebp
  407e5a:	adc    edi,DWORD PTR [edx]
  407e5c:	and    DWORD PTR [ebx-0x64821eaf],esp
  407e62:	pop    ecx
  407e63:	int3   
  407e64:	push   edi
  407e65:	inc    esp
  407e66:	(bad)  
  407e67:	popa   
  407e68:	mov    eax,0x8c37704e
  407e6d:	lods   al,BYTE PTR ds:[esi]
  407e6e:	fs popf 
  407e70:	sbb    ecx,DWORD PTR [esi+ebx*2+0x3d]
  407e74:	mov    esp,0xf779291c
  407e79:	sub    eax,0x64c3e790
  407e7e:	push   ebp
  407e7f:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  407e81:	jmp    0x407e4b
  407e83:	sub    esi,DWORD PTR [edx+0x25]
  407e86:	jnp    0x407e85
  407e88:	(bad)  
  407e89:	fcom   QWORD PTR [ebp+eax*4-0x60]
  407e8d:	sti    
  407e8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e8f:	lock xchg esi,eax
  407e91:	and    DWORD PTR [esi],eax
  407e93:	fst    DWORD PTR [ecx-0x46]
  407e96:	mov    bl,0xd2
  407e98:	ja     0x407ef3
  407e9a:	std    
  407e9b:	scas   eax,DWORD PTR es:[edi]
  407e9c:	mov    ch,0x48
  407e9e:	mov    ebx,0x730d18a
  407ea3:	mov    ds:0xfc807665,eax
  407ea8:	xchg   ch,dh
  407eaa:	fdivr  DWORD PTR [edx-0x7588630d]
  407eb0:	arpl   WORD PTR [edi],sp
  407eb2:	addr16 icebp 
  407eb4:	mov    ah,0xd3
  407eb6:	xor    al,0x7
  407eb8:	scas   al,BYTE PTR es:[edi]
  407eb9:	sbb    eax,0xa49b06cb
  407ebe:	imul   esi,edx,0x37561064
  407ec4:	push   esp
  407ec5:	dec    edi
  407ec6:	loope  0x407f3e
  407ec8:	cmp    BYTE PTR [ecx-0xd],0xc0
  407ecc:	push   esp
  407ecd:	mov    DWORD PTR [ecx-0x17],ebx
  407ed0:	dec    esi
  407ed1:	repnz or BYTE PTR [eax+0x19be1113],dl
  407ed8:	or     al,0xc9
  407eda:	xor    BYTE PTR [edx-0x80],bl
  407edd:	pusha  
  407ede:	popf   
  407edf:	xchg   esp,eax
  407ee0:	(bad)  
  407ee1:	hlt    
  407ee2:	das    
  407ee3:	jns    0x407f12
  407ee5:	jnp    0x407f45
  407ee7:	test   dl,ch
  407ee9:	jne    0x407f37
  407eeb:	xchg   ecx,eax
  407eec:	pushf  
  407eed:	pop    eax
  407eee:	loope  0x407eb8
  407ef0:	xchg   ebx,edx
  407ef2:	and    DWORD PTR [ebp-0x1f5eb30],esi
  407ef8:	jge    0x407f1e
  407efa:	gs inc edx
  407efc:	ss lock (bad) 
  407eff:	push   ebx
  407f00:	ret    0x1bd3
  407f03:	ret    
  407f04:	sub    DWORD PTR [ebx+0x6b7bc392],eax
  407f0a:	sbb    dh,ch
  407f0c:	jle    0x407f2a
  407f0e:	ret    0x510a
  407f11:	or     DWORD PTR [edi],eax
  407f13:	iret   
  407f14:	ds stos DWORD PTR es:[edi],eax
  407f16:	fs pop ecx
  407f18:	push   edx
  407f19:	in     eax,0x9b
  407f1b:	std    
  407f1c:	cmp    al,0x6e
  407f1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f1f:	push   0xffffffce
  407f21:	sti    
  407f22:	push   esp
  407f23:	and    eax,0x1c7f3899
  407f28:	je     0x407f36
  407f2a:	retf   0xbc80
  407f2d:	pop    ebx
  407f2e:	mov    DWORD PTR [di],esp
  407f31:	pop    ebp
  407f32:	jl     0x407f15
  407f34:	retf   0x3b5f
  407f37:	fs ja  0x407f41
  407f3a:	retf   
  407f3b:	jne    0x407ede
  407f3d:	xor    DWORD PTR [edx],esp
  407f3f:	mov    esp,0x61535610
  407f44:	push   edi
  407f45:	or     al,0x94
  407f47:	test   BYTE PTR [edi],bl
  407f49:	gs sbb al,0x46
  407f4c:	and    cl,dl
  407f4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f4f:	add    eax,0x58ad40ad
  407f54:	jne    0x407f8b
  407f56:	ret    0x84ce
  407f59:	test   DWORD PTR [edi-0x4f],esi
  407f5c:	aas    
  407f5d:	mov    esp,0x40dbfce6
  407f62:	cs inc edi
  407f64:	dec    ecx
  407f65:	xor    bh,BYTE PTR [eax-0x73]
  407f68:	and    al,0x39
  407f6a:	push   0xfffffff0
  407f6c:	sbb    edi,ebx
  407f6e:	shl    ecx,1
  407f70:	jge    0x407f8d
  407f72:	inc    eax
  407f73:	or     ah,0x85
  407f76:	(bad)  
  407f77:	stos   BYTE PTR es:[edi],al
  407f78:	xor    ebx,DWORD PTR [eax-0x26805be2]
  407f7e:	je     0x407ff6
  407f80:	mov    ds:0x620da426,eax
  407f85:	jl     0x407fe4
  407f87:	sar    esp,1
  407f89:	push   edi
  407f8a:	das    
  407f8b:	xchg   BYTE PTR [ecx+0x20e4a0ca],ch
  407f91:	mov    DWORD PTR [ecx],esi
  407f93:	mov    ebp,0xbd628302
  407f98:	fdiv   QWORD PTR [esi]
  407f9a:	mov    al,ds:0x8ba2ff1
  407f9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fa0:	and    al,0x55
  407fa2:	int    0x1
  407fa4:	jmp    0xa801:0x47d3baf0
  407fab:	rol    BYTE PTR ds:0xe4a86945,1
  407fb1:	dec    ebp
  407fb2:	scas   eax,DWORD PTR es:[edi]
  407fb3:	mov    edi,0x3c6081dc
  407fb8:	mov    ah,0x31
  407fba:	scas   eax,DWORD PTR es:[edi]
  407fbb:	aam    0x47
  407fbd:	push   esp
  407fbe:	cli    
  407fbf:	fistp  WORD PTR [eax+0x46]
  407fc2:	into   
  407fc3:	(bad)  
  407fc4:	ins    DWORD PTR es:[edi],dx
  407fc5:	sbb    ebp,DWORD PTR [eax-0x2436c000]
  407fcb:	ss retf 
  407fcd:	mov    al,ds:0xf3887155
  407fd2:	in     al,dx
  407fd3:	sub    DWORD PTR [ebp-0x28],esp
  407fd6:	ds inc esi
  407fd8:	mov    ch,0x47
  407fda:	add    eax,0x1b46b37d
  407fdf:	jnp    0x407fe2
  407fe1:	mov    edx,0xc7eabe5d
  407fe6:	(bad)  [esi+0x66f95786]
  407fec:	pop    esp
  407fed:	retf   
  407fee:	imul   eax,DWORD PTR [esp+esi*4],0xffffff90
  407ff2:	fcom   QWORD PTR [ecx*8-0x1166e10e]
  407ff9:	fidiv  WORD PTR [ebx-0x4f]
  407ffc:	xchg   ebx,eax
  407ffd:	aas    
  407ffe:	rol    BYTE PTR ds:0xd32f8512,1
  408004:	xlat   BYTE PTR ds:[ebx]
  408005:	push   ebx
  408006:	das    
  408007:	fmul   QWORD PTR [ebx]
  408009:	xchg   ecx,eax
  40800a:	daa    
  40800b:	or     al,0x3e
  40800d:	sub    al,ah
  40800f:	push   ds
  408010:	lods   eax,DWORD PTR ds:[esi]
  408011:	packssdw mm1,mm1
  408014:	mov    al,ds:0xca9a4e15
  408019:	fidivr WORD PTR [esi]
  40801b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40801c:	fsubr  DWORD PTR [eax+0x3e]
  40801f:	lahf   
  408020:	sbb    al,0x7b
  408022:	xor    ebx,ecx
  408024:	sbb    DWORD PTR [ebx-0x60],ebx
  408027:	out    dx,eax
  408028:	push   0xffffffa1
  40802a:	or     eax,0x3fbc1516
  40802f:	mov    gs,WORD PTR [ebx+0x7dec6e6d]
  408035:	jne    0x407fcf
  408037:	dec    ebp
  408038:	test   al,0x68
  40803a:	sub    ah,BYTE PTR [eax-0x32]
  40803d:	jb     0x40809c
  40803f:	iret   
  408040:	sbb    DWORD PTR [bp+0x17b1],0xa1513a0d
  408049:	int3   
  40804a:	hlt    
  40804b:	sar    BYTE PTR [edx+0xbef280],1
  408051:	imul   esp,DWORD PTR [ecx],0x38b460d
  408057:	add    al,0x51
  408059:	mov    al,ds:0x1b92f28a
  40805e:	pop    ds
  40805f:	adc    al,0xd
  408061:	xor    eax,0xf99ad6e8
  408066:	push   esi
  408067:	pusha  
  408068:	inc    edi
  408069:	(bad)  
  40806a:	jmp    0x407ff7
  40806c:	and    dh,BYTE PTR [ebx+ebx*8+0x73759653]
  408073:	pop    esp
  408074:	pop    ds
  408075:	pop    eax
  408076:	inc    eax
  408077:	je     0x408060
  408079:	fnstenvw [ebp+0xd]
  40807d:	repnz push edi
  40807f:	cs loop 0x40802b
  408082:	clc    
  408083:	scas   eax,DWORD PTR es:[edi]
  408084:	mov    eax,0xaa27f5e4
  408089:	je     0x40809f
  40808b:	ins    DWORD PTR es:[edi],dx
  40808c:	ds je  0x4080d4
  40808f:	jo     0x40802d
  408091:	jmp    0xaa5e:0xff2d8202
  408098:	fcmovb st,st(4)
  40809a:	mov    dl,ah
  40809c:	imul   ecx,DWORD PTR [esi+ebp*1+0x3f],0x3967933e
  4080a4:	lock dec eax
  4080a6:	and    eax,0xb7f51c6b
  4080ab:	dec    edx
  4080ac:	push   0x638328cb
  4080b1:	and    dl,BYTE PTR [eax]
  4080b3:	fild   WORD PTR [ebx+eiz*4+0x6d]
  4080b7:	stc    
  4080b8:	test   eax,0x9239303
  4080bd:	xchg   BYTE PTR [ecx-0xe15b521],cl
  4080c3:	mov    edi,ecx
  4080c5:	lahf   
  4080c6:	mov    BYTE PTR [ebp+0x35409f58],ch
  4080cc:	std    
  4080cd:	mov    edi,0xcf74cf1c
  4080d2:	ins    DWORD PTR es:[edi],dx
  4080d3:	push   esi
  4080d4:	cmc    
  4080d5:	das    
  4080d6:	or     dh,BYTE PTR [eax]
  4080d8:	inc    ecx
  4080d9:	push   es
  4080da:	mov    ch,0x92
  4080dc:	rol    DWORD PTR [ecx+0x7f33911a],1
  4080e2:	inc    ebp
  4080e3:	xchg   ebp,eax
  4080e4:	and    BYTE PTR [ecx-0x2a6e8afc],0xed
  4080eb:	lds    ecx,FWORD PTR [edi-0x7e6b4c2e]
  4080f1:	push   0xa3a533a
  4080f6:	nop
  4080f7:	loopne 0x4080b4
  4080f9:	and    bl,BYTE PTR [ebx+ecx*2]
  4080fc:	pop    ecx
  4080fd:	jb     0x408090
  4080ff:	ds push es
  408101:	jg     0x408089
  408103:	or     eax,0xb3468d53
  408108:	or     DWORD PTR [ecx],0xfffffff1
  40810b:	cdq    
  40810c:	fisubr DWORD PTR [esi+0x3ec3e83a]
  408112:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408113:	mov    edi,0x6a073e5b
  408118:	call   DWORD PTR [eax]
  40811a:	jmp    0x408127
  40811c:	imul   edi,DWORD PTR [ebx+0x218fb073],0xbc66db04
  408126:	aaa    
  408127:	add    bh,BYTE PTR [eax+0x57]
  40812a:	mov    edi,DWORD PTR [ebx-0x61]
  40812d:	mov    edx,0xfde18ccd
  408132:	pop    ebp
  408133:	mov    ch,0x38
  408135:	or     al,0xcd
  408137:	(bad)  
  408138:	icebp  
  408139:	jne    0x4080dc
  40813b:	pop    edx
  40813c:	add    esi,edi
  40813e:	cld    
  40813f:	cmc    
  408140:	cmovb  ebx,ebp
  408143:	inc    esi
  408144:	ss dec eax
  408146:	call   0x78eb453e
  40814b:	mov    ecx,0x789d4a40
  408150:	in     eax,0x77
  408152:	xchg   ecx,eax
  408153:	jecxz  0x408133
  408155:	pushf  
  408156:	inc    ebp
  408157:	inc    esi
  408158:	and    DWORD PTR [ebp-0x61],eax
  40815b:	mov    cl,0x93
  40815d:	dec    esi
  40815e:	clc    
  40815f:	test   al,al
  408161:	mov    ch,0x51
  408163:	mov    al,BYTE PTR [edx-0x2b917aeb]
  408169:	mov    DWORD PTR [ebp+0x5b],ebx
  40816c:	popa   
  40816d:	out    dx,al
  40816e:	out    dx,eax
  40816f:	jl     0x40819a
  408171:	dec    esi
  408172:	dec    ebx
  408173:	sub    edi,DWORD PTR [ebx-0x29]
  408176:	and    al,0x51
  408178:	sbb    cl,bh
  40817a:	pop    edx
  40817b:	stos   BYTE PTR es:[edi],al
  40817c:	stos   BYTE PTR es:[edi],al
  40817d:	add    ah,BYTE PTR [ecx-0x2e]
  408180:	push   cs
  408181:	mov    ebx,DWORD PTR [esi+0x11]
  408184:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408185:	pop    esp
  408186:	mov    eax,ds:0x2166c290
  40818b:	xchg   ebp,eax
  40818c:	xor    eax,0x3c924d08
  408191:	sbb    DWORD PTR [edi+ebp*4],eax
  408194:	pop    ebx
  408195:	cmp    cl,BYTE PTR [edx]
  408197:	dec    esi
  408198:	xor    BYTE PTR [ebx+ebp*1-0xd0c0cd5],dh
  40819f:	cmp    al,0x5f
  4081a1:	sbb    BYTE PTR [edx],0x1b
  4081a4:	shr    dl,0x19
  4081a7:	xchg   esi,eax
  4081a8:	pop    ebp
  4081a9:	xlat   BYTE PTR ds:[ebx]
  4081aa:	retf   0x26aa
  4081ad:	mov    edx,0x60c54dde
  4081b2:	test   BYTE PTR [esp+ebp*1],cl
  4081b5:	sbb    esp,DWORD PTR [ebp-0x75]
  4081b8:	ficomp DWORD PTR [esi-0x14]
  4081bb:	mov    ?,WORD PTR [edx-0x79]
  4081be:	xor    al,0x9b
  4081c0:	les    esi,FWORD PTR [esi+0x17]
  4081c3:	ret    
  4081c4:	mov    eax,ds:0xcf70c26f
  4081c9:	rcr    BYTE PTR [ebp-0x69],1
  4081cc:	mov    edx,0x4d74e980
  4081d1:	xor    cl,BYTE PTR [edi]
  4081d3:	or     DWORD PTR ds:0xf6bc276,esi
  4081d9:	inc    esi
  4081da:	js     0x4081ce
  4081dc:	fs sub eax,0x17e3072b
  4081e2:	ret    0x3a14
  4081e5:	(bad)  
  4081e7:	call   FWORD PTR [edx]
  4081e9:	lahf   
  4081ea:	cmp    eax,0x696401e
  4081ef:	jmp    0x8a54:0xb1a8512d
  4081f6:	loope  0x4081be
  4081f8:	push   edi
  4081f9:	neg    BYTE PTR [edi+0x7e]
  4081fc:	mov    edx,0x559e1258
  408201:	dec    ebp
  408202:	jo     0x4081aa
  408204:	js     0x4081f2
  408206:	sbb    eax,0x6ff3946c
  40820b:	or     ch,dl
  40820d:	mov    ah,0xb9
  40820f:	xchg   edi,eax
  408210:	retf   
  408211:	mov    eax,0xc6191312
  408216:	pop    ecx
  408217:	push   0x75
  408219:	stos   BYTE PTR es:[edi],al
  40821a:	pop    ecx
  40821b:	push   ds
  40821c:	pop    edi
  40821d:	push   eax
  40821e:	and    ebx,DWORD PTR [ecx-0x32]
  408221:	sbb    cl,0x20
  408224:	mov    dl,0x48
  408226:	adc    al,dh
  408228:	bound  edi,QWORD PTR [edi]
  40822a:	nop
  40822b:	mov    dh,0xcf
  40822d:	sub    edx,esi
  40822f:	jo     0x408298
  408231:	aas    
  408232:	dec    eax
  408233:	mov    esp,0xadd8b4ad
  408238:	mov    ch,0xd2
  40823a:	jle    0x408286
  40823c:	xchg   edi,eax
  40823d:	aam    0x70
  40823f:	ss es inc ecx
  408242:	push   cs
  408243:	dec    BYTE PTR [edi]
  408245:	psadbw mm1,QWORD PTR [esi-0x77]
  408249:	mov    bl,cl
  40824b:	div    BYTE PTR [ebp-0x41f8f072]
  408251:	push   ebp
  408252:	jb     0x4082b2
  408254:	mul    DWORD PTR [ebp+0x7]
  408257:	and    eax,0x63cddde0
  40825c:	ret    0xc35f
  40825f:	jno    0x4082cf
  408261:	push   0xffffffa8
  408263:	mov    dh,0xe4
  408265:	icebp  
  408266:	mov    cl,0xff
  408268:	mov    esi,DWORD PTR ds:0x7176b1fd
  40826e:	mov    ah,0x91
  408270:	jg     0x408285
  408272:	loop   0x408250
  408274:	or     DWORD PTR [esi-0x7e],0x5d
  408278:	and    BYTE PTR [ebp+0x4427afe0],dh
  40827e:	stos   DWORD PTR es:[edi],eax
  40827f:	addr16 popf 
  408281:	and    bh,BYTE PTR [edi+eiz*1-0x1e]
  408285:	aam    0x6e
  408287:	(bad)  
  40828a:	pusha  
  40828b:	sbb    DWORD PTR [ecx-0x15a8c8a5],0x67
  408292:	lds    edi,FWORD PTR [ecx]
  408294:	xor    DWORD PTR [ecx+edi*2-0x9],ecx
  408298:	fsubr  st,st(1)
  40829a:	sub    al,0xee
  40829c:	lea    ecx,[esi-0x60c87a6a]
  4082a2:	les    ebp,FWORD PTR [esi+0x7d]
  4082a5:	(bad)  
  4082a6:	bound  edx,QWORD PTR [ebx-0x1d707d05]
  4082ac:	leave  
  4082ad:	sbb    BYTE PTR ds:[ecx+0x1a],ch
  4082b1:	pop    es
  4082b2:	int3   
  4082b3:	(bad)  
  4082b4:	cs pop edi
  4082b6:	mov    eax,ds:0xb4a8f1dc
  4082bb:	out    dx,eax
  4082bc:	ins    DWORD PTR es:[edi],dx
  4082bd:	shl    BYTE PTR [edx+0x37],1
  4082c0:	ret    
  4082c1:	sbb    esp,esi
  4082c3:	push   0x3a8d77fb
  4082c8:	dec    ebx
  4082c9:	pushf  
  4082ca:	inc    esp
  4082cb:	cmp    al,0xa
  4082cd:	jmp    0x408322
  4082cf:	add    edx,DWORD PTR [edi+eiz*8+0x6d60bc5d]
  4082d6:	retf   
  4082d7:	fs leave 
  4082d9:	mov    ch,0x4c
  4082db:	xor    ebx,ebx
  4082dd:	aad    0x99
  4082df:	sbb    DWORD PTR ds:0x1b34a1f,esi
  4082e5:	mov    ecx,0xe6b2921a
  4082ea:	mov    ah,0xa
  4082ec:	jns    0x4082a6
  4082ee:	pop    eax
  4082ef:	out    0xdf,eax
  4082f1:	xor    eax,0xa2979f1d
  4082f6:	lock shl BYTE PTR [edi-0x7f],1
  4082fa:	inc    ebp
  4082fb:	mov    ah,0x41
  4082fd:	jnp    0x40836d
  4082ff:	jecxz  0x408375
  408301:	daa    
  408302:	sbb    BYTE PTR [eax],0xae
  408305:	mov    dl,0xb2
  408307:	push   ss
  408308:	loopne 0x4082e5
  40830a:	pusha  
  40830b:	cmp    eax,0x7261965f
  408310:	aas    
  408311:	clc    
  408312:	lock adc al,0x9c
  408315:	pushf  
  408316:	push   esp
  408317:	push   0xffffffed
  408319:	jnp    0x4082a8
  40831b:	jns    0x4082c7
  40831d:	xor    cl,BYTE PTR [eax-0x3]
  408320:	mov    BYTE PTR [esi-0x30ef2225],bh
  408326:	outs   dx,BYTE PTR ds:[esi]
  408327:	outs   dx,BYTE PTR ds:[esi]
  408328:	mov    ds:0xa8cf9f6,al
  40832d:	aaa    
  40832e:	inc    edx
  40832f:	repz loope 0x4082b7
  408332:	cmp    al,0x59
  408334:	push   edx
  408335:	neg    DWORD PTR [edi]
  408337:	mov    eax,0x10782518
  40833c:	push   ebp
  40833d:	(bad)  
  40833e:	dec    esp
  40833f:	cmp    DWORD PTR [ebp-0x2869e0ff],edi
  408345:	mov    dh,0xd2
  408347:	xor    al,0xa6
  408349:	lods   al,BYTE PTR ds:[esi]
  40834a:	or     BYTE PTR [ebx+0x25c28a74],al
  408350:	in     al,dx
  408351:	or     DWORD PTR [ebx-0x6e],0xffffffac
  408355:	mul    BYTE PTR [ecx-0x77]
  408358:	pop    es
  408359:	clc    
  40835a:	mov    ah,0xec
  40835c:	jns    0x4083da
  40835e:	dec    ebp
  40835f:	inc    edi
  408360:	aas    
  408361:	sbb    edx,edi
  408363:	cmp    eax,0x2f799174
  408368:	cmp    edx,DWORD PTR [ebp-0x67]
  40836b:	enter  0x1f60,0x28
  40836f:	(bad)  
  408370:	xchg   edi,eax
  408371:	inc    ebp
  408372:	popf   
  408373:	push   ecx
  408374:	call   0x7810:0x6357861f
  40837b:	ja     0x40839a
  40837d:	popf   
  40837e:	mov    esp,0x99a62f53
  408383:	(bad)  
  408384:	fdivp  st(5),st
  408386:	(bad)  
  408388:	cmp    BYTE PTR [esi-0x42],0xa6
  40838c:	xchg   esi,eax
  40838d:	push   cs
  40838e:	fistp  DWORD PTR [ebx+ebp*1]
  408391:	(bad)  
  408392:	jle    0x40832f
  408394:	fsub   QWORD PTR [ebp+eax*4+0x2e]
  408398:	dec    ebp
  408399:	mov    cl,0x7b
  40839b:	stos   DWORD PTR es:[edi],eax
  40839c:	xchg   edi,eax
  40839d:	cmp    edx,ecx
  40839f:	cmc    
  4083a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083a1:	leave  
  4083a2:	xchg   esi,eax
  4083a3:	mov    ds:0x7ae6ef55,eax
  4083a8:	je     0x408338
  4083aa:	call   0xbeb2:0x79776544
  4083b1:	mov    esp,0x4cedd9ad
  4083b6:	jae    0x4083d4
  4083b8:	and    BYTE PTR [esi-0x5f],ah
  4083bb:	int    0x31
  4083bd:	mov    edi,0xaf06af1f
  4083c2:	test   bl,dl
  4083c4:	ror    DWORD PTR [edi+0x682e8c80],0x2d
  4083cb:	rcl    BYTE PTR [edx-0x9],cl
  4083ce:	adc    al,0xf1
  4083d0:	push   ds
  4083d1:	pop    edi
  4083d2:	or     ecx,DWORD PTR [eax+0x6ca0dd1b]
  4083d8:	cmp    al,0x49
  4083da:	pop    ss
  4083db:	push   ss
  4083dc:	adc    eax,0xee85cdc4
  4083e1:	xor    eax,DWORD PTR [ebx-0x40]
  4083e4:	sub    bh,BYTE PTR [ecx]
  4083e6:	test   DWORD PTR [ecx-0x62],eax
  4083e9:	(bad)  
  4083ea:	test   al,0x7e
  4083ec:	inc    ecx
  4083ed:	(bad)  
  4083ef:	sbb    ch,BYTE PTR fs:[ebx+0x173df12b]
  4083f6:	mov    ds:0x20b85d97,eax
  4083fb:	add    DWORD PTR [esi+0x57],edx
  4083fe:	icebp  
  4083ff:	ret    
  408400:	std    
  408401:	sahf   
  408402:	fcmovnbe st,st(7)
  408404:	retf   0x77f5
  408407:	push   ebp
  408408:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408409:	push   ecx
  40840a:	ja     0x4083e7
  40840c:	push   edi
  40840d:	ret    0x11cd
  408410:	call   0xa24f:0xdd48313e
  408417:	or     al,0xe5
  408419:	out    dx,eax
  40841a:	call   0x14ec5cc1
  40841f:	or     ah,BYTE PTR [ebp+0x8]
  408422:	xchg   esp,eax
  408423:	jg     0x4083de
  408425:	xor    esi,DWORD PTR gs:[ebx]
  408428:	jl     0x408441
  40842a:	test   al,0xb4
  40842c:	fcom   st(2)
  40842e:	out    dx,eax
  40842f:	out    dx,eax
  408430:	lods   al,BYTE PTR ds:[esi]
  408431:	adc    ch,BYTE PTR [eax-0x50ab4cf]
  408437:	pop    edx
  408438:	pop    edx
  408439:	mov    cl,0xe
  40843b:	adc    al,0x42
  40843d:	test   eax,0x6fd1c98f
  408442:	and    al,ah
  408444:	ins    BYTE PTR es:[edi],dx
  408445:	stc    
  408446:	mov    al,ds:0xf287b38e
  40844b:	scas   al,BYTE PTR es:[edi]
  40844c:	(bad)  
  40844d:	lock xor BYTE PTR [edx],dh
  408450:	push   eax
  408451:	icebp  
  408452:	ficomp WORD PTR [ebx+0x36554f27]
  408458:	loopne 0x40841f
  40845a:	inc    ebx
  40845b:	jg     0x408466
  40845d:	jmp    0xcf6e:0xfa331fe6
  408464:	mov    edx,0x73700e8c
  408469:	je     0x408452
  40846b:	fucomip st,st(3)
  40846d:	cld    
  40846e:	je     0x408413
  408470:	jp     0x4083f2
  408472:	rcr    DWORD PTR [edx+0x32c9d256],1
  408478:	mov    ebx,0xd313c596
  40847d:	popf   
  40847e:	and    eax,0x61f4b752
  408483:	add    dh,BYTE PTR [eax+edx*8]
  408486:	push   cs
  408487:	push   0x65
  408489:	sbb    al,0xdc
  40848b:	dec    ebp
  40848c:	dec    ecx
  40848d:	jl     0x4084ff
  40848f:	xchg   ebp,ebx
  408491:	iret   
  408492:	dec    esi
  408493:	std    
  408494:	jns    0x4084fa
  408496:	xor    al,0x10
  408498:	in     eax,0xbc
  40849a:	stos   BYTE PTR es:[edi],al
  40849b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40849c:	xchg   esi,eax
  40849d:	pushf  
  40849e:	call   0xad262702
  4084a3:	scas   eax,DWORD PTR es:[edi]
  4084a4:	pop    esp
  4084a5:	dec    ecx
  4084a6:	adc    eax,0xde683039
  4084ab:	mov    bh,cl
  4084ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084ae:	xor    al,BYTE PTR [edx]
  4084b0:	clc    
  4084b1:	inc    ebx
  4084b2:	call   FWORD PTR [ecx-0x70]
  4084b5:	mov    dl,0xc3
  4084b7:	sub    al,0x53
  4084b9:	mov    dh,0x81
  4084bb:	pop    ecx
  4084bc:	adc    dl,bh
  4084be:	movq   QWORD PTR [eax-0x3bbf339e],mm6
  4084c5:	pop    es
  4084c6:	cld    
  4084c7:	mov    edi,0x5df60ea3
  4084cc:	jg     0x408490
  4084ce:	sti    
  4084cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084d0:	shr    BYTE PTR [eax-0x43b6756e],cl
  4084d6:	lock xor BYTE PTR [edi-0x7f],dl
  4084da:	cli    
  4084db:	jae    0x408465
  4084dd:	(bad)  
  4084de:	inc    ecx
  4084df:	test   eax,0x767e7a41
  4084e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084e5:	hlt    
  4084e6:	mov    eax,0x2e135ddb
  4084eb:	ret    
  4084ec:	mov    dh,bl
  4084ee:	adc    cl,BYTE PTR [eax+0x57]
  4084f1:	and    edi,ebx
  4084f3:	jne    0x408475
  4084f5:	outs   dx,BYTE PTR ds:[esi]
  4084f6:	mov    ebx,0x3274e993
  4084fb:	js     0x4084f3
  4084fd:	outs   dx,DWORD PTR ds:[esi]
  4084fe:	xor    DWORD PTR [edx+0x6bc12cf1],ecx
  408504:	mov    cl,0x62
  408506:	or     edx,eax
  408508:	hlt    
  408509:	jmp    0x3d6f:0x625f00d1
  408510:	push   edx
  408511:	dec    esi
  408512:	xchg   edx,eax
  408513:	xor    BYTE PTR [edx+ecx*2],bh
  408516:	fstp   st(0)
  408518:	arpl   WORD PTR [esp+eax*4+0xfe5e7c5],sp
  40851f:	dec    ebx
  408520:	and    ebx,DWORD PTR [ecx-0x22c05a6c]
  408526:	jb     0x4084b9
  408528:	lea    edx,[edi+0x32]
  40852b:	push   cs
  40852c:	lock mov ecx,0x8809fbda
  408532:	pop    ebx
  408533:	push   edi
  408534:	int    0x5f
  408536:	jae    0x408573
  408538:	xor    cl,BYTE PTR ds:0x4d40b134
  40853e:	push   0x381e1ce6
  408543:	and    al,0x16
  408545:	sahf   
  408546:	inc    DWORD PTR gs:[ecx-0x1ed32022]
  40854d:	add    edx,DWORD PTR [edx]
  40854f:	mov    bl,0x29
  408551:	mov    dl,0xcc
  408553:	int    0x73
  408555:	push   0xe73ccc87
  40855a:	xchg   esp,eax
  40855b:	mov    ah,0xb8
  40855d:	push   ss
  40855e:	xchg   edi,eax
  40855f:	sbb    eax,0xb9ae66f4
  408564:	ins    BYTE PTR es:[edi],dx
  408565:	stos   DWORD PTR es:[edi],eax
  408566:	std    
  408567:	add    BYTE PTR [ebx-0x60],bh
  40856a:	fcomip st,st(6)
  40856c:	push   ebp
  40856d:	les    esi,FWORD PTR [edx-0x27]
  408570:	jnp    0x408575
  408572:	popf   
  408573:	hlt    
  408574:	stc    
  408575:	pop    ds
  408576:	jmp    0xf7d4:0x2dce7bc5
  40857d:	xor    al,0x1e
  40857f:	jecxz  0x4085d2
  408581:	out    dx,al
  408582:	std    
  408583:	mov    al,ds:0x5bebd8b4
  408588:	ret    0x10f
  40858b:	into   
  40858c:	xor    al,0xc8
  40858e:	mov    al,0x2
  408590:	sahf   
  408591:	xchg   edx,eax
  408592:	sub    esi,edi
  408594:	adc    esi,DWORD PTR [di]
  408597:	mov    dl,0xdb
  408599:	or     esp,DWORD PTR [esi-0x284ce276]
  40859f:	(bad)  
  4085a1:	sbb    esp,DWORD PTR [ebx+edx*8]
  4085a4:	lock sbb edi,DWORD PTR [ecx+0x74]
  4085a8:	rcl    DWORD PTR [eax+0x4d343da8],cl
  4085ae:	or     BYTE PTR [ebp+0x3a],cl
  4085b1:	xor    al,0x84
  4085b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085b4:	jae    0x408550
  4085b6:	outs   dx,BYTE PTR ds:[esi]
  4085b7:	retf   0x50c8
  4085ba:	add    BYTE PTR [ebx+eiz*2-0x5b7b7ad9],0x2e
  4085c2:	imul   edx,ebx,0x72c38d68
  4085c8:	xchg   ebp,eax
  4085c9:	cmp    DWORD PTR [edx-0x25],eax
  4085cc:	fmul   st(7),st
  4085ce:	dec    ecx
  4085cf:	mov    edx,0xf5ed9abe
  4085d4:	sti    
  4085d5:	add    cl,dl
  4085d7:	inc    eax
  4085d8:	out    dx,al
  4085d9:	sub    eax,0x8c099094
  4085de:	fisubr WORD PTR [ebx+0x14648ce7]
  4085e4:	push   esp
  4085e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085e6:	mov    cl,0x9e
  4085e8:	sti    
  4085e9:	bnd jp 0x4085ff
  4085ec:	mov    BYTE PTR [ebp-0x3b],cl
  4085ef:	pop    es
  4085f0:	(bad)  
  4085f2:	mov    ds:0x6e09e029,eax
  4085f7:	jmp    0x5fd77d20
  4085fc:	dec    ebx
  4085fd:	ret    
  4085fe:	jle    0x408655
  408600:	aas    
  408601:	or     eax,0xdf3e2b21
  408606:	mov    ah,0x76
  408608:	jmp    0x40f0b021
  40860d:	mov    ecx,0x935cafeb
  408612:	xchg   DWORD PTR [ebp-0x37],eax
  408615:	adc    eax,0x60c54289
  40861a:	inc    esp
  40861b:	pop    ds
  40861c:	inc    ebp
  40861d:	sbb    eax,DWORD PTR [edx-0x53]
  408620:	or     DWORD PTR [edx+0x34],ebx
  408623:	gs call 0xc95db30d
  408629:	jo     0x40861a
  40862b:	and    BYTE PTR [esi-0x6d],cl
  40862e:	pop    ecx
  40862f:	popa   
  408630:	jno    0x408606
  408632:	rcl    DWORD PTR [edi],cl
  408634:	inc    ecx
  408635:	(bad)  
  408636:	mul    BYTE PTR [edx-0xb7c105f]
  40863c:	nop
  40863d:	ffree  st(2)
  40863f:	push   ebp
  408640:	cld    
  408641:	mov    esi,0x3f917d7e
  408646:	dec    edi
  408647:	ja     0x40861d
  408649:	xor    al,cl
  40864b:	vpunpckhqdq xmm3,xmm7,XMMWORD PTR [ecx-0x63]
  408650:	bound  ecx,QWORD PTR [ebp+0x39]
  408653:	cwde   
  408654:	dec    edi
  408655:	mov    BYTE PTR [esi+edx*4],bh
  408658:	jbe    0x4086b1
  40865a:	jg     0x408656
  40865c:	loop   0x40864d
  40865e:	das    
  40865f:	jne    0x4086bd
  408661:	sti    
  408662:	lds    edx,FWORD PTR [edi+0x41]
  408665:	mov    ecx,0xe0bcb113
  40866a:	mov    dl,0xf1
  40866c:	sbb    eax,0xfaa0ce28
  408671:	retf   
  408672:	retf   
  408673:	loopne 0x408600
  408675:	fstp   DWORD PTR [esi]
  408677:	push   0xffffff92
  408679:	int    0x62
  40867b:	or     ah,BYTE PTR [ebp-0x59]
  40867e:	gs push esp
  408680:	fstp   TBYTE PTR [edx]
  408682:	jo     0x408606
  408684:	xchg   BYTE PTR [ebx+0x53],ch
  408687:	enter  0x97d5,0xfe
  40868b:	mov    eax,0xb5d48e62
  408690:	into   
  408691:	enter  0xa6b6,0xb5
  408695:	imul   edi,eax,0x30
  408698:	jle    0x408641
  40869a:	psrad  mm1,0xf0
  40869e:	inc    esi
  40869f:	xchg   ebp,eax
  4086a0:	inc    esi
  4086a1:	mov    dl,0x8d
  4086a3:	pusha  
  4086a4:	xchg   edi,eax
  4086a5:	dec    ebx
  4086a6:	adc    BYTE PTR [esi-0x26],al
  4086a9:	push   es
  4086aa:	imul   esi,DWORD PTR [ebp+0x65],0xffffff99
  4086ae:	fldenv [ebx+0x4c]
  4086b1:	cmp    dl,dl
  4086b3:	in     al,dx
  4086b4:	xor    cl,BYTE PTR [edx]
  4086b6:	out    0x27,al
  4086b8:	jno    0x4086b7
  4086ba:	ret    
  4086bb:	shr    ch,1
  4086bd:	rcl    DWORD PTR [eax+0x66],0x57
  4086c1:	xchg   esi,eax
  4086c2:	ja     0x4086e6
  4086c4:	sbb    BYTE PTR [ebx+edi*1],0x25
  4086c8:	mov    ch,0xaa
  4086ca:	cwde   
  4086cb:	mov    cl,0x99
  4086cd:	das    
  4086ce:	arpl   WORD PTR [eax],di
  4086d0:	dec    ebx
  4086d1:	jle    0x408657
  4086d3:	adc    al,0xb9
  4086d5:	xchg   ebx,eax
  4086d6:	pop    ds
  4086d7:	loop   0x408741
  4086d9:	pop    ss
  4086da:	stos   BYTE PTR es:[edi],al
  4086db:	mov    ch,0xcb
  4086dd:	mov    bh,0x9e
  4086df:	ja     0x408752
  4086e1:	mov    esp,0x8d239e8
  4086e6:	jmp    DWORD PTR ds:0x402c9e93
  4086ec:	outs   dx,BYTE PTR ds:[esi]
  4086ed:	cmc    
  4086ee:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4086f0:	sbb    BYTE PTR [ecx],dh
  4086f2:	stos   BYTE PTR es:[edi],al
  4086f3:	(bad)  
  4086f4:	mov    ebx,0x14643289
  4086f9:	push   cs
  4086fa:	test   bh,bh
  4086fc:	outs   dx,BYTE PTR ds:[esi]
  4086fd:	aas    
  4086fe:	arpl   WORD PTR [ecx],si
  408700:	push   0x34d927b4
  408705:	pop    ebp
  408706:	inc    edx
  408707:	inc    edi
  408708:	fist   WORD PTR [edi-0x29]
  40870b:	push   ss
  40870c:	add    esp,ecx
  40870e:	js     0x408747
  408710:	ret    
  408711:	scas   al,BYTE PTR es:[edi]
  408712:	push   ds
  408713:	stos   DWORD PTR es:[edi],eax
  408714:	out    dx,eax
  408715:	ss mov edi,0xda1a9e69
  40871b:	div    al
  40871d:	sub    dh,BYTE PTR [esi+0xa]
  408720:	xor    esi,DWORD PTR [ecx-0xb723c99]
  408726:	iret   
  408727:	inc    ebx
  408728:	add    al,0x69
  40872a:	repz or eax,0x9a183cf8
  408730:	adc    al,0xb8
  408732:	adc    BYTE PTR [edx+eiz*2],0xb0
  408736:	mov    ebx,0xccb4e4ea
  40873b:	shr    ebp,0x65
  40873e:	je     0x40872a
  408740:	mov    ecx,DWORD PTR [eax-0x70a259c3]
  408746:	outs   dx,DWORD PTR ds:[esi]
  408747:	dec    edi
  408748:	in     eax,dx
  408749:	xchg   esp,eax
  40874a:	pop    ds
  40874b:	push   es
  40874c:	dec    eax
  40874d:	sub    bl,BYTE PTR [esp+ecx*2+0x6df2379f]
  408754:	ret    0xc40d
  408757:	jg     0x4086fe
  408759:	or     DWORD PTR [esi-0x43],eax
  40875c:	push   esp
  40875d:	mov    ds:0x42a2ff1a,al
  408762:	(bad)  
  408763:	sub    bh,BYTE PTR fs:[esi+0x79]
  408767:	out    dx,eax
  408768:	xchg   ecx,eax
  408769:	mov    bl,0x87
  40876b:	outs   dx,BYTE PTR ds:[esi]
  40876c:	inc    ebp
  40876d:	out    dx,eax
  40876e:	lds    ebp,FWORD PTR [edi]
  408770:	xor    DWORD PTR [ebp+0x7b92dd0b],esi
  408776:	inc    esi
  408777:	adc    DWORD PTR ds:0xf4da35a5,0xffffff9c
  40877e:	(bad)  
  40877f:	les    edi,FWORD PTR ds:0xf684ec26
  408785:	jne    0x40876f
  408787:	lods   eax,DWORD PTR ds:[esi]
  408788:	add    ebp,DWORD PTR [edx+eax*1-0x328d5120]
  40878f:	add    ebx,esp
  408791:	xchg   edx,eax
  408792:	in     al,dx
  408793:	push   ds
  408794:	sbb    al,0xe1
  408796:	jp     0x40878f
  408798:	iret   
  408799:	(bad)  
  40879a:	scas   eax,DWORD PTR es:[edi]
  40879b:	adc    ecx,ebp
  40879d:	addr16 js 0x408767
  4087a0:	ret    
  4087a1:	inc    eax
  4087a2:	es mov esi,0x38e695d1
  4087a8:	and    al,0xb0
  4087aa:	push   esi
  4087ab:	push   ecx
  4087ac:	dec    ecx
  4087ad:	jg     0x408770
  4087af:	sub    esi,DWORD PTR [edx+0x425cc76a]
  4087b5:	jl     0x4087c5
  4087b7:	test   BYTE PTR [eax+0x3c],dh
  4087ba:	mov    dh,0x5b
  4087bc:	and    BYTE PTR [ebx-0x6555f508],bl
  4087c2:	sbb    dl,BYTE PTR [edi]
  4087c4:	inc    ebp
  4087c5:	inc    esp
  4087c6:	ror    DWORD PTR [esi-0x5f18e52f],1
  4087cc:	mov    bl,0x8
  4087ce:	test   al,0xbf
  4087d0:	xchg   ebp,eax
  4087d1:	add    al,0xe2
  4087d3:	test   BYTE PTR ds:0xe1ed4f57,bh
  4087d9:	out    dx,eax
  4087da:	ins    DWORD PTR es:[edi],dx
  4087db:	fld    TBYTE PTR [eax+0x72]
  4087de:	aaa    
  4087df:	xchg   ebp,eax
  4087e0:	out    0x8a,al
  4087e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087e3:	imul   ebp,DWORD PTR [edi-0x2],0x7d
  4087e7:	int    0xcb
  4087e9:	mov    bh,0xf3
  4087eb:	mov    ?,ecx
  4087ed:	scas   eax,DWORD PTR es:[edi]
  4087ee:	push   ebx
  4087ef:	fs ins BYTE PTR es:[edi],dx
  4087f1:	mov    al,0xcb
  4087f3:	mov    al,ds:0x29ff8454
  4087f8:	dec    esi
  4087f9:	out    0x48,al
  4087fb:	mov    ecx,0x19d7fa11
  408800:	ror    eax,cl
  408802:	jo     0x40883b
  408804:	dec    ecx
  408805:	jns    0x408837
  408807:	push   ds
  408808:	cmp    ch,cl
  40880a:	cmp    DWORD PTR [edi-0x3baf3897],edx
  408810:	pop    ss
  408811:	mov    bl,0x19
  408813:	dec    ebx
  408814:	sbb    eax,0xc8649a51
  408819:	sub    al,0xba
  40881b:	ret    
  40881c:	sbb    eax,0x72e7123d
  408821:	outs   dx,DWORD PTR ds:[esi]
  408822:	(bad)  
  408823:	xor    esi,edx
  408825:	sti    
  408826:	dec    edi
  408827:	mov    dh,0x20
  408829:	dec    edx
  40882a:	sbb    BYTE PTR [edi-0x282d77bb],al
  408830:	push   ss
  408831:	add    BYTE PTR [esi],dh
  408833:	js     0x4087e3
  408835:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  408837:	add    edi,DWORD PTR [ebp+0x4831607c]
  40883d:	nop
  40883e:	mov    eax,DWORD PTR [eax+0x3846ca93]
  408844:	cs call 0x69e35fa5
  40884a:	and    esp,edx
  40884c:	mov    ecx,0x56cee955
  408851:	inc    ebp
  408852:	push   edx
  408853:	cmp    ebp,DWORD PTR [esi-0x6b]
  408856:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408857:	mov    ds:0xf25d9f55,eax
  40885c:	stc    
  40885d:	mov    esp,DWORD PTR [edi-0x2f]
  408860:	mov    WORD PTR [esi-0x6c],ds
  408863:	cmc    
  408864:	in     al,dx
  408865:	mov    ebx,0x64810742
  40886a:	(bad)  
  40886b:	retf   
  40886c:	mov    ah,BYTE PTR [ebp+0x72f7e26a]
  408872:	(bad)  [ecx+0x113687b1]
  408878:	pop    es
  408879:	cmp    bl,BYTE PTR [ecx]
  40887b:	test   al,0xb2
  40887d:	cs dec edi
  40887f:	repz inc esp
  408881:	sub    ecx,esi
  408883:	jo     0x4088b6
  408885:	xor    DWORD PTR [ecx],esi
  408887:	in     al,dx
  408888:	mov    esi,0xf5c7c8a6
  40888d:	cmp    eax,0xb97fa669
  408892:	pop    eax
  408893:	hlt    
  408894:	ins    BYTE PTR es:[edi],dx
  408895:	or     edi,ebp
  408897:	mov    BYTE PTR [esi],dh
  408899:	pop    edi
  40889a:	add    ebx,ecx
  40889c:	or     eax,0xe42b63d5
  4088a1:	addr16 inc edx
  4088a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088a4:	xchg   BYTE PTR [esi+0xd],cl
  4088a7:	arpl   WORD PTR [ebx+edx*2+0x6b81aaeb],ax
  4088ae:	neg    ebx
  4088b0:	cvtdq2ps xmm5,XMMWORD PTR [eax+0x4e]
  4088b4:	and    eax,0x898a4528
  4088b9:	fst    QWORD PTR [edi-0x49bbddf2]
  4088bf:	in     al,0xac
  4088c1:	mov    edi,0xa19cc56d
  4088c6:	sub    al,0xfe
  4088c8:	nop
  4088c9:	dec    esp
  4088ca:	scas   eax,DWORD PTR es:[edi]
  4088cb:	jmp    0x408886
  4088cd:	jnp    0x4088fd
  4088cf:	xor    eax,0x6dad350
  4088d4:	mov    ch,0x9
  4088d6:	jge    0x408928
  4088d8:	sub    DWORD PTR [eax+0x34005751],ebp
  4088de:	dec    edx
  4088df:	cmp    ah,0x45
  4088e2:	int    0x14
  4088e4:	out    dx,al
  4088e5:	mov    esi,0x2624b2fd
  4088ea:	test   eax,0xdb7d22e9
  4088ef:	enter  0x6e04,0x56
  4088f3:	seta   dl
  4088f6:	call   DWORD PTR [ebx-0xd242192]
  4088fc:	fcom   QWORD PTR [eax-0x15]
  4088ff:	inc    eax
  408900:	sub    ch,BYTE PTR [edx]
  408902:	sbb    esi,DWORD PTR [esi+0x74e48178]
  408908:	mul    BYTE PTR [esi-0x5d]
  40890b:	aam    0xfb
  40890d:	mov    eax,0xc2c07289
  408912:	or     DWORD PTR [esp+ecx*2-0x2c95aa0e],esi
  408919:	dec    ecx
  40891a:	in     al,dx
  40891b:	cs or  eax,0xa0fe002
  408921:	push   esi
  408922:	in     al,0xdd
  408924:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408925:	adc    bl,BYTE PTR [edi+0x2b]
  408928:	pushf  
  408929:	js     0x408953
  40892b:	mov    dl,0x69
  40892d:	paddw  mm6,mm3
  408930:	add    dl,al
  408932:	mov    esi,0xc7451ade
  408937:	fucomi st,st(6)
  408939:	sbb    bh,BYTE PTR [edi+0x3121209a]
  40893f:	xchg   ebp,eax
  408940:	jle    0x4089bd
  408942:	cmp    al,0xf9
  408944:	pop    esi
  408945:	cwde   
  408946:	lahf   
  408947:	out    0x95,eax
  408949:	jbe    0x4088e0
  40894b:	and    eax,0x1293cb82
  408950:	push   esi
  408951:	cmp    al,BYTE PTR [eax+esi*8+0x5a]
  408955:	push   ebx
  408956:	imul   ebx,DWORD PTR [ebx],0x29
  408959:	jp     0x408901
  40895b:	ret    0xbb74
  40895e:	hlt    
  40895f:	pop    edi
  408960:	pop    edi
  408961:	push   0x29f49c3e
  408966:	jno    0x408956
  408968:	jo     0x4089bd
  40896a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40896b:	mov    bh,0x8d
  40896d:	mov    eax,0xf7be3c52
  408972:	pop    ecx
  408973:	out    0x11,al
  408975:	stc    
  408976:	mov    ah,0x29
  408978:	rcr    DWORD PTR [edx-0x6e],1
  40897b:	or     bl,bh
  40897d:	cwde   
  40897e:	ins    BYTE PTR es:[edi],dx
  40897f:	cmp    ecx,DWORD PTR [esi+0x5e]
  408982:	jmp    0x99afae72
  408987:	adc    esp,DWORD PTR [ecx]
  408989:	dec    esp
  40898a:	mov    eax,ds:0xdd539f97
  40898f:	and    dl,BYTE PTR [edx+edi*4+0x5c]
  408993:	(bad)  
  408994:	enter  0xc3b7,0x12
  408998:	js     0x408926
  40899a:	stc    
  40899b:	or     cl,ch
  40899d:	cwde   
  40899e:	cli    
  40899f:	popa   
  4089a0:	xor    dh,BYTE PTR [ecx-0x8ec8caf]
  4089a6:	rol    ebx,0x48
  4089a9:	in     eax,dx
  4089aa:	pop    ebx
  4089ab:	std    
  4089ac:	mov    edi,0x950f6850
  4089b1:	sub    DWORD PTR [eax-0x3],edx
  4089b4:	outs   dx,BYTE PTR ds:[esi]
  4089b5:	xchg   ebp,eax
  4089b6:	push   DWORD PTR [edi+0x176816b]
  4089bc:	inc    ecx
  4089bd:	in     eax,0x17
  4089bf:	mov    esp,0x290513a5
  4089c4:	dec    ecx
  4089c5:	mov    bh,0xee
  4089c7:	das    
  4089c8:	test   al,0xe1
  4089ca:	loope  0x408987
  4089cc:	add    ch,BYTE PTR [ebx]
  4089ce:	sub    eax,0x8d85ec47
  4089d3:	sti    
  4089d4:	enter  0xcf84,0x59
  4089d8:	imul   ecx,edi,0x4c2a0518
  4089de:	stos   DWORD PTR es:[edi],eax
  4089df:	cld    
  4089e0:	test   al,cl
  4089e2:	add    ebp,DWORD PTR [ebp+0x1f40b5bd]
  4089e8:	mov    bl,0xf2
  4089ea:	xor    bh,dh
  4089ec:	xor    eax,0x3f77f9e7
  4089f1:	div    DWORD PTR [esi+0x6c8fff43]
  4089f7:	scas   al,BYTE PTR es:[edi]
  4089f8:	sbb    eax,0x6675e4e
  4089fd:	xchg   esi,eax
  4089fe:	movnti DWORD PTR [eax+0x7d],edi
  408a02:	gs sbb bh,bl
  408a05:	dec    ebx
  408a06:	xor    ebx,DWORD PTR [esi+0x5aaa02b4]
  408a0c:	mov    eax,ds:0xf99f5c3d
  408a11:	pop    ebx
  408a12:	out    dx,eax
  408a13:	jne    0x4089ff
  408a15:	jo     0x408a79
  408a17:	pop    ss
  408a18:	out    dx,eax
  408a19:	and    cl,0xe5
  408a1c:	(bad)  
  408a1d:	lods   al,BYTE PTR ds:[esi]
  408a1e:	push   cs
  408a1f:	inc    ecx
  408a20:	sbb    al,0xf
  408a22:	and    ah,BYTE PTR [eax-0x6839ec86]
  408a28:	cmp    esp,DWORD PTR [ebp-0x5066444b]
  408a2e:	pop    esi
  408a2f:	fdivr  DWORD PTR cs:[edi]
  408a32:	mov    esp,0x4a4f27c4
  408a37:	iret   
  408a38:	lds    esi,FWORD PTR [ebx-0x16]
  408a3b:	cs and al,0x19
  408a3e:	outs   dx,DWORD PTR ds:[esi]
  408a3f:	xor    DWORD PTR [esi],esi
  408a41:	push   esp
  408a42:	call   0x4b4d1945
  408a47:	mov    al,ds:0xf2b17df1
  408a4c:	jnp    0x408a33
  408a4e:	jge    0x408ab2
  408a50:	jmp    0x408ab2
  408a52:	scas   al,BYTE PTR es:[edi]
  408a53:	in     eax,dx
  408a54:	aam    0x46
  408a56:	mov    bl,0x68
  408a58:	ror    edx,0x64
  408a5b:	sar    bh,cl
  408a5d:	add    BYTE PTR [ecx+0x30],bl
  408a60:	loop   0x408a92
  408a62:	sub    al,0x1e
  408a64:	add    ch,BYTE PTR [ebx]
  408a66:	cmp    ebp,DWORD PTR [eax-0x532fe2cb]
  408a6c:	mov    ecx,0x8be0da37
  408a71:	(bad)  
  408a72:	jns    0x408a56
  408a74:	bound  ecx,QWORD PTR [edi+ecx*4+0x1e]
  408a78:	cmp    ah,dh
  408a7a:	shl    BYTE PTR [ebx+0x29],1
  408a7d:	and    dl,BYTE PTR [ecx]
  408a7f:	mov    dl,0xb5
  408a81:	jbe    0x408aa1
  408a83:	ret    
  408a84:	in     al,dx
  408a85:	or     DWORD PTR [eax-0x70],eax
  408a88:	mov    eax,ds:0x6b3269d
  408a8d:	icebp  
  408a8e:	ins    DWORD PTR es:[edi],dx
  408a8f:	out    dx,eax
  408a90:	call   0x796988ff
  408a95:	call   0x886e:0xae8307d9
  408a9c:	bound  eax,QWORD PTR [edx-0x5f]
  408a9f:	sbb    BYTE PTR [ebx],ch
  408aa1:	and    eax,0x4f3ebddc
  408aa6:	daa    
  408aa7:	gs arpl si,ax
  408aaa:	fwait
  408aab:	in     eax,dx
  408aac:	imul   ecx,DWORD PTR [ebx-0x555b96b7],0x2b
  408ab3:	and    DWORD PTR [ecx+0x4be3aef2],ecx
  408ab9:	push   eax
  408aba:	pop    edx
  408abb:	and    DWORD PTR [ecx+0x3e235de0],esi
  408ac1:	adc    bl,BYTE PTR [edx-0x7b709a0]
  408ac7:	js     0x408ad5
  408ac9:	mov    edi,0x72c5a73c
  408ace:	je     0x408af3
  408ad0:	ret    
  408ad1:	jnp    0x408b49
  408ad3:	xor    BYTE PTR [eax+0x3e4544dd],0xa6
  408ada:	cli    
  408adb:	fdivr  QWORD PTR [eax]
  408add:	cs pop ebp
  408adf:	stos   BYTE PTR es:[edi],al
  408ae0:	cmp    eax,0x9fb957a3
  408ae5:	retf   
  408ae6:	cmp    eax,0x299077a4
  408aeb:	fnstsw WORD PTR ds:0x5bc1c3d8
  408af1:	mov    cl,0x69
  408af3:	dec    esi
  408af4:	push   ds
  408af5:	jmp    0xb44c:0x9aa0b097
  408afc:	push   es
  408afd:	aas    
  408afe:	xchg   ebp,eax
  408aff:	cmp    eax,0x85f054c2
  408b04:	xchg   ecx,eax
  408b05:	cmp    al,0x75
  408b07:	(bad)  [eax]
  408b09:	mov    esi,0x50465958
  408b0e:	scas   al,BYTE PTR es:[edi]
  408b0f:	out    0x12,al
  408b11:	rcr    DWORD PTR [esi+0x29],cl
  408b14:	mov    al,ds:0xf7320852
  408b19:	dec    ecx
  408b1a:	xor    DWORD PTR [edx],esp
  408b1c:	xchg   ebx,eax
  408b1d:	sub    ah,BYTE PTR [ecx]
  408b1f:	adc    al,0xef
  408b21:	add    ah,BYTE PTR [ebx+ebp*8]
  408b24:	adc    BYTE PTR [eax],ah
  408b26:	xor    DWORD PTR [edi+edx*1+0x74d10876],ebx
  408b2d:	xor    dl,dh
  408b2f:	scas   al,BYTE PTR es:[edi]
  408b30:	push   ebp
  408b31:	cld    
  408b32:	mov    edx,0x50bf8546
  408b37:	in     eax,dx
  408b38:	sbb    DWORD PTR [edi+0x76],esp
  408b3b:	std    
  408b3c:	push   edi
  408b3d:	push   0x2423ea48
  408b42:	sub    al,0x88
  408b44:	xor    al,0x9f
  408b46:	mov    ecx,0x3ac50480
  408b4b:	inc    edx
  408b4c:	popf   
  408b4d:	sar    BYTE PTR [edi+0x18b93b2f],1
  408b53:	inc    esp
  408b54:	inc    ebp
  408b55:	out    dx,al
  408b56:	jp     0x408b04
  408b58:	jecxz  0x408b9d
  408b5a:	clc    
  408b5b:	xchg   ebx,eax
  408b5c:	(bad)  
  408b5d:	popa   
  408b5e:	add    DWORD PTR [ebx+0x6c811ff2],ebp
  408b64:	cli    
  408b65:	aad    0xa5
  408b67:	retf   0x8440
  408b6a:	js     0x408be4
  408b6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b6e:	pop    ss
  408b6f:	sub    dl,dh
  408b71:	jnp    0x408bd5
  408b73:	data16 jmp 0x408bc8
  408b76:	daa    
  408b77:	js     0x408ba6
  408b79:	mov    BYTE PTR [esi+0x7623eb8d],dl
  408b7f:	inc    esi
  408b80:	inc    edx
  408b81:	cdq    
  408b82:	mov    ah,0x19
  408b84:	push   eax
  408b85:	or     al,0x7d
  408b87:	fstp   QWORD PTR [eax+0x69]
  408b8a:	ins    DWORD PTR es:[edi],dx
  408b8b:	imul   DWORD PTR [ecx-0x42]
  408b8e:	sar    BYTE PTR [ebp-0x32],cl
  408b91:	dec    edi
  408b92:	pop    es
  408b93:	mov    al,ds:0xf100d26f
  408b98:	in     eax,0x3e
  408b9a:	xor    BYTE PTR [ecx-0x6f02dbd5],bl
  408ba0:	in     eax,dx
  408ba1:	pop    ss
  408ba2:	mov    BYTE PTR [edi+0x23],0x3a
  408ba6:	xor    ebx,DWORD PTR [eax]
  408ba8:	xchg   edi,eax
  408ba9:	jo     0x408be3
  408bab:	mov    ch,0x85
  408bad:	pop    esp
  408bae:	push   edx
  408baf:	push   ebp
  408bb0:	bound  esi,QWORD PTR [ebp-0x3b536bb8]
  408bb6:	jae    0x408c23
  408bb8:	jne    0x408bae
  408bba:	out    0xbc,eax
  408bbc:	xchg   esp,eax
  408bbd:	gs ss pop ebx
  408bc0:	sbb    ecx,DWORD PTR [esi-0x4d]
  408bc3:	ins    DWORD PTR es:[edi],dx
  408bc4:	xchg   BYTE PTR [ebx-0x312fdac6],bh
  408bca:	or     al,BYTE PTR [eax-0x48]
  408bcd:	popf   
  408bce:	and    ecx,esp
  408bd0:	mov    BYTE PTR [ebx-0x5e],ah
  408bd3:	push   ds
  408bd4:	cmp    BYTE PTR ds:0xe041fa74,dh
  408bdb:	add    bh,BYTE PTR [eax]
  408bdd:	(bad)  
  408bde:	mov    ds:0xb5a272c,eax
  408be3:	shr    DWORD PTR [edx-0xd],1
  408be6:	mov    WORD PTR [esi],es
  408be8:	xor    BYTE PTR [ebx+0x5aebeadf],al
  408bee:	je     0x408bdd
  408bf0:	add    BYTE PTR [edi],bl
  408bf2:	std    
  408bf3:	fisubr WORD PTR [edi+0x420bc152]
  408bf9:	imul   ebx,DWORD PTR [ebp-0x3f],0xffffffe3
  408bfd:	stos   DWORD PTR es:[edi],eax
  408bfe:	or     DWORD PTR ds:0x49c2483d,ecx
  408c04:	or     edi,esp
  408c06:	lock outs dx,DWORD PTR ds:[esi]
  408c08:	js     0x408c6d
  408c0a:	bound  ecx,QWORD PTR [eax-0xc]
  408c0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c0e:	xchg   ecx,eax
  408c0f:	test   al,0x84
  408c11:	inc    edx
  408c12:	mov    bl,0x64
  408c14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c15:	mov    ?,WORD PTR [ebx-0x31da5ea]
  408c1b:	cmp    al,0xe5
  408c1d:	sahf   
  408c1e:	xor    al,BYTE PTR [edi]
  408c20:	mov    ds:0x670733a6,al
  408c25:	pop    eax
  408c26:	bound  ebx,QWORD PTR [edi-0x14ed8da5]
  408c2c:	out    dx,al
  408c2d:	inc    ecx
  408c2e:	shl    DWORD PTR [esi],1
  408c30:	sti    
  408c31:	ret    
  408c32:	xchg   edi,eax
  408c33:	dec    edi
  408c34:	ret    
  408c35:	xlat   BYTE PTR ds:[ebx]
  408c36:	mov    cl,0x98
  408c38:	jbe    0x408c9d
  408c3a:	stc    
  408c3b:	retf   0x795f
  408c3e:	ja     0x408bde
  408c40:	push   ss
  408c41:	xchg   esp,eax
  408c42:	cdq    
  408c43:	les    esp,FWORD PTR [ecx+0x40]
  408c46:	rcr    edx,cl
  408c48:	xchg   BYTE PTR [ebp+0xb],dh
  408c4b:	mov    ebx,0xd7d3d21a
  408c50:	ja     0x408c34
  408c52:	xchg   DWORD PTR ds:0x276b4351,edx
  408c58:	cmp    eax,0x7e361576
  408c5d:	dec    ebx
  408c5e:	push   ebx
  408c5f:	dec    ebx
  408c60:	xchg   edx,eax
  408c61:	cmp    ah,dl
  408c63:	push   edx
  408c64:	pop    edx
  408c65:	(bad)  
  408c66:	int3   
  408c67:	push   ds
  408c68:	pop    ds
  408c69:	nop
  408c6a:	retf   0x904b
  408c6d:	sub    esp,ebx
  408c6f:	inc    edx
  408c70:	scas   al,BYTE PTR es:[edi]
  408c71:	add    eax,0x4c8c9c3b
  408c76:	mov    al,ds:0xe7f274c8
  408c7b:	dec    edx
  408c7c:	outs   dx,DWORD PTR ds:[esi]
  408c7d:	mov    eax,DWORD PTR [edi]
  408c7f:	mov    ds:0xc49666a3,eax
  408c84:	inc    ebp
  408c85:	inc    esi
  408c86:	sub    eax,0xaef2a91b
  408c8b:	jl     0x408c2a
  408c8d:	loop   0x408cad
  408c8f:	loopne 0x408c20
  408c91:	lods   al,BYTE PTR ds:[esi]
  408c92:	lods   al,BYTE PTR ds:[esi]
  408c93:	push   0x9dffcd1d
  408c98:	mov    al,ds:0xa775eebc
  408c9d:	std    
  408c9e:	or     BYTE PTR [edx-0x1c],ah
  408ca1:	cmp    al,0x40
  408ca3:	nop
  408ca4:	ret    0xd84f
  408ca7:	scas   eax,DWORD PTR es:[edi]
  408ca8:	leave  
  408ca9:	jno    0x408ca4
  408cab:	adc    DWORD PTR [edi],ebp
  408cad:	and    al,0x71
  408caf:	cmp    esp,DWORD PTR [edx]
  408cb1:	sub    DWORD PTR [eax+0x530f67d],ebp
  408cb7:	push   ebp
  408cb8:	stc    
  408cb9:	and    eax,0x6063dd37
  408cbe:	cld    
  408cbf:	into   
  408cc0:	ss and al,0x4b
  408cc3:	data16 mov gs,WORD PTR [esi]
  408cc6:	pop    ds
  408cc7:	mov    ah,0xe0
  408cc9:	push   ebp
  408cca:	pusha  
  408ccb:	or     bh,bh
  408ccd:	icebp  
  408cce:	mov    ecx,0x8241e30c
  408cd3:	pusha  
  408cd4:	ss ret 0xe804
  408cd8:	mov    eax,ds:0x90f7a9cf
  408cdd:	mov    ds:0x16df9fde,al
  408ce2:	inc    edi
  408ce3:	in     eax,0xca
  408ce5:	jge    0x408c8d
  408ce7:	jl     0x408cee
  408ce9:	and    bl,BYTE PTR [edx-0x144ed94d]
  408cef:	push   ebp
  408cf0:	loop   0x408ce0
  408cf2:	dec    esi
  408cf3:	in     eax,0x79
  408cf5:	call   0x34fc:0x561f9e9e
  408cfc:	mov    ebx,DWORD PTR [edx+0x64d5b011]
  408d02:	ficomp DWORD PTR [ebx+0x7fa959c]
  408d08:	push   eax
  408d09:	and    al,0x95
  408d0b:	mov    ds:0x64a04176,al
  408d10:	dec    ebx
  408d11:	pusha  
  408d12:	jl     0x408d0a
  408d14:	mov    bl,0x73
  408d16:	add    BYTE PTR ds:0xed7b999c,dl
  408d1c:	loop   0x408ce4
  408d1e:	mov    ah,0x92
  408d20:	push   edi
  408d21:	xor    eax,0x546e8f87
  408d26:	xchg   edx,eax
  408d27:	mov    ebp,0x907d615c
  408d2c:	cld    
  408d2d:	push   esp
  408d2e:	fcomp  DWORD PTR [esi]
  408d30:	push   DWORD PTR [ebp+0x43]
  408d33:	cmp    ch,BYTE PTR [eax]
  408d35:	pusha  
  408d36:	fisub  DWORD PTR [eax+0x5a03f602]
  408d3c:	push   0x0
  408d3e:	push   esp
  408d3f:	mov    eax,0x717aba3b
  408d44:	adc    eax,0x34a86187
  408d49:	mov    ebp,0x5507b894
  408d4e:	fsub   QWORD PTR [edx-0x2c]
  408d51:	mov    al,ds:0x17238a08
  408d56:	adc    eax,0x9b6eef2f
  408d5b:	sub    eax,0x3d5e80b9
  408d60:	pop    ebp
  408d61:	xchg   DWORD PTR [ebx-0x21a120eb],eax
  408d67:	shr    BYTE PTR [ecx],cl
  408d69:	push   ds
  408d6a:	out    0x21,eax
  408d6c:	int3   
  408d6d:	out    0xcc,al
  408d6f:	xchg   edi,eax
  408d70:	sbb    al,0x0
  408d72:	mov    esi,0x96569ee9
  408d77:	add    cl,bl
  408d79:	mov    cs,ebp
  408d7b:	jns    0x408d87
  408d7d:	mov    WORD PTR [ebx],es
  408d7f:	sub    BYTE PTR [ebp-0x576e3422],0xaa
  408d86:	mov    dl,0xe8
  408d88:	ins    BYTE PTR es:[edi],dx
  408d89:	and    bh,BYTE PTR [esi]
  408d8b:	mov    esp,0x99eada5f
  408d90:	xlat   BYTE PTR ds:[ebx]
  408d91:	pushf  
  408d92:	or     BYTE PTR [edx-0xf],bh
  408d95:	lock scas al,BYTE PTR es:[edi]
  408d97:	mov    edi,0x574ec2e1
  408d9c:	inc    edi
  408d9d:	cmp    eax,0x4912032
  408da2:	pusha  
  408da3:	inc    edi
  408da4:	xor    al,0x85
  408da6:	add    BYTE PTR [edx+0x72f5bc45],0x32
  408dad:	out    0xf5,eax
  408daf:	movups XMMWORD PTR [edi+0x1c9d5c41],xmm1
  408db6:	cs fwait
  408db8:	jo     0x408e23
  408dba:	nop
  408dbb:	not    DWORD PTR [edx+eiz*2+0x6576bbe]
  408dc2:	nop
  408dc3:	inc    ecx
  408dc4:	mov    esi,edi
  408dc6:	jmp    0xf7cb:0xc3ed351b
  408dcd:	scas   eax,DWORD PTR es:[edi]
  408dce:	jbe    0x408e13
  408dd0:	sub    edi,ecx
  408dd2:	inc    esi
  408dd3:	fcomp  DWORD PTR [edi]
  408dd5:	into   
  408dd6:	push   ebp
  408dd7:	adc    al,0x5f
  408dd9:	xor    al,0x9f
  408ddb:	xor    al,0xe6
  408ddd:	mov    DWORD PTR [ebp+0x53],edx
  408de0:	inc    eax
  408de1:	sbb    eax,0xb01618a
  408de6:	mov    ss,ebp
  408de8:	pop    ecx
  408de9:	push   esi
  408dea:	icebp  
  408deb:	stc    
  408dec:	fstp   TBYTE PTR [ebx]
  408dee:	cmp    bh,BYTE PTR [eax]
  408df0:	jno    0x408dfc
  408df2:	push   es
  408df3:	test   eax,0x54b28be
  408df8:	ins    DWORD PTR es:[edi],dx
  408df9:	mov    cl,0x36
  408dfb:	xchg   edx,eax
  408dfc:	jno    0x408e33
  408dfe:	das    
  408dff:	dec    esi
  408e00:	popa   
  408e01:	xor    ebp,ebp
  408e03:	sahf   
  408e04:	stos   BYTE PTR es:[edi],al
  408e05:	sbb    BYTE PTR [eax+eiz*4],0x23
  408e09:	pop    es
  408e0a:	pushf  
  408e0b:	xchg   edx,eax
  408e0c:	jbe    0x408e1b
  408e0e:	xchg   ebx,eax
  408e0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e10:	ret    
  408e11:	(bad)  
  408e12:	xor    BYTE PTR [edi-0x3b],bh
  408e15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e16:	mov    ecx,0x8c53a1cd
  408e1b:	iret   
  408e1c:	mov    ds:0xd4a0e42,eax
  408e21:	ret    
  408e22:	out    dx,al
  408e23:	mov    edx,0x3ff8a38d
  408e28:	sbb    bh,BYTE PTR [esi]
  408e2a:	ins    BYTE PTR es:[edi],dx
  408e2b:	sbb    ah,dl
  408e2d:	test   BYTE PTR [edi-0x6b],0x91
  408e31:	jecxz  0x408df4
  408e33:	push   es
  408e34:	test   BYTE PTR [eax-0x59],cl
  408e37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e38:	push   ecx
  408e39:	push   edx
  408e3a:	and    cl,0x22
  408e3d:	shl    ah,1
  408e3f:	mov    al,0xa5
  408e41:	inc    esp
  408e42:	cdq    
  408e43:	push   edi
  408e44:	dec    esp
  408e45:	and    ecx,eax
  408e47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e48:	lea    esp,[edx-0x98f4505]
  408e4e:	stc    
  408e4f:	adc    esi,DWORD PTR [ecx+eax*8]
  408e52:	inc    ebp
  408e53:	cdq    
  408e54:	js     0x408e22
  408e56:	mov    al,0x33
  408e58:	sub    DWORD PTR [eax+edi*4+0x56c7699],esi
  408e5f:	aas    
  408e60:	xor    DWORD PTR [ecx-0x5878eaed],esi
  408e66:	fdiv   DWORD PTR [edi-0x17]
  408e69:	mov    bh,0x1b
  408e6b:	add    bh,cl
  408e6d:	adc    al,BYTE PTR [ebp-0x1d]
  408e70:	jns    0x408e55
  408e72:	mov    DWORD PTR [eax+ebx*2-0x7b082ad7],esi
  408e79:	fisttp WORD PTR [ebx]
  408e7b:	pop    edi
  408e7c:	sbb    DWORD PTR [ecx+0x330ac348],esi
  408e82:	adc    al,0xb9
  408e84:	mov    esi,0x6a546cc3
  408e89:	in     al,0xce
  408e8b:	retf   0x2adb
  408e8e:	cdq    
  408e8f:	(bad)  
  408e90:	stos   BYTE PTR es:[edi],al
  408e91:	dec    ebx
  408e92:	icebp  
  408e93:	in     eax,dx
  408e94:	pusha  
  408e95:	mov    cl,0xa6
  408e97:	cmc    
  408e98:	outs   dx,DWORD PTR ss:[esi]
  408e9a:	dec    ebp
  408e9b:	scas   al,BYTE PTR es:[edi]
  408e9c:	xor    al,0x77
  408e9e:	xchg   esi,eax
  408e9f:	loopne 0x408e7a
  408ea1:	dec    eax
  408ea2:	mov    al,0x47
  408ea4:	push   ecx
  408ea5:	loope  0x408ee3
  408ea7:	sub    eax,edx
  408ea9:	xchg   edi,eax
  408eaa:	mov    ebp,0x945cf105
  408eaf:	push   es
  408eb0:	iret   
  408eb1:	push   eax
  408eb2:	sub    eax,0x19b8cc01
  408eb7:	push   edi
  408eb8:	and    al,0xc9
  408eba:	xchg   BYTE PTR [ecx],ah
  408ebc:	pop    es
  408ebd:	mov    ds:0x4dd348e7,eax
  408ec2:	vxorps xmm7,xmm5,XMMWORD PTR ds:0x69844d53
  408eca:	cmp    al,0x83
  408ecc:	mov    WORD PTR [eax-0x58ea7a7f],?
  408ed2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ed3:	mov    cl,0xa6
  408ed5:	dec    esi
  408ed6:	lea    eax,[esi]
  408ed8:	jbe    0x408eaf
  408eda:	push   edx
  408edb:	pop    esp
  408edc:	jl     0x408e96
  408ede:	fisttp QWORD PTR [eax-0x56]
  408ee1:	mov    eax,0xfce43c6c
  408ee6:	into   
  408ee7:	mov    bl,0x11
  408ee9:	repz cmp al,0x71
  408eec:	scas   eax,DWORD PTR es:[edi]
  408eed:	out    dx,eax
  408eee:	mov    ah,0xaf
  408ef0:	inc    ecx
  408ef1:	repz mov bl,0x97
  408ef4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ef5:	outs   dx,BYTE PTR ds:[esi]
  408ef6:	iret   
  408ef7:	in     eax,dx
  408ef8:	xor    dl,ch
  408efa:	or     ebp,DWORD PTR [eax-0x16e75c3b]
  408f00:	sti    
  408f01:	inc    edi
  408f02:	loope  0x408f2f
  408f04:	pop    edx
  408f05:	pop    ecx
  408f06:	push   ss
  408f07:	pop    ds
  408f08:	ret    
  408f09:	stc    
  408f0a:	rol    DWORD PTR [eax+0x60],1
  408f0d:	mov    BYTE PTR [edi-0x30],al
  408f10:	push   ebx
  408f11:	xchg   esp,eax
  408f12:	mov    al,ds:0xce5992f5
  408f17:	in     eax,dx
  408f18:	(bad)  
  408f19:	nop
  408f1a:	cmp    dl,BYTE PTR ds:[eax]
  408f1d:	mov    edi,0xa53b406e
  408f22:	or     eax,0x1555505b
  408f27:	or     BYTE PTR [esi],bh
  408f29:	add    edi,0xffffffd4
  408f2c:	jmp    0x9e6e0703
  408f31:	cwde   
  408f32:	stos   DWORD PTR es:[edi],eax
  408f33:	icebp  
  408f34:	adc    al,0x92
  408f36:	sub    eax,0x9bca2f48
  408f3b:	lahf   
  408f3c:	mov    DWORD PTR [ecx+eax*8+0x4c],eax
  408f40:	pop    esp
  408f41:	xor    edx,0xb0580976
  408f47:	lea    ecx,[ecx-0x32720b4a]
  408f4d:	xor    al,0xf1
  408f4f:	cmp    eax,0x280c1f57
  408f54:	jbe    0x408eee
  408f56:	cmp    BYTE PTR [edi],bl
  408f58:	mov    al,0xd
  408f5a:	and    DWORD PTR [esi+0x15d33b7],0x9647b804
  408f64:	inc    edx
  408f65:	xchg   ebx,eax
  408f66:	pop    esi
  408f67:	push   ecx
  408f68:	fadd   DWORD PTR [ebx-0x2872422d]
  408f6e:	cli    
  408f6f:	mov    ebx,esp
  408f71:	sub    eax,0xb6baaf29
  408f76:	sti    
  408f77:	jle    0x408fe6
  408f79:	inc    dl
  408f7b:	in     eax,dx
  408f7c:	sub    eax,0xbe626a6a
  408f82:	mov    al,0xd7
  408f84:	sbb    eax,0x2924bcb7
  408f89:	sub    al,0x13
  408f8b:	sti    
  408f8c:	mov    ds:0x9664cfa2,eax
  408f91:	and    bh,BYTE PTR [ebp-0x5ca24139]
  408f97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f98:	cli    
  408f99:	mov    cl,0x17
  408f9b:	mov    dh,0x41
  408f9d:	dec    BYTE PTR [ebx-0x15570184]
  408fa3:	std    
  408fa4:	or     al,BYTE PTR [esi-0x6a2f37b9]
  408faa:	push   ecx
  408fab:	adc    ebp,esp
  408fad:	inc    esi
  408fae:	push   ecx
  408faf:	sbb    al,0x4
  408fb1:	inc    ch
  408fb3:	enter  0x2833,0x87
  408fb7:	xlat   BYTE PTR ds:[ebx]
  408fb8:	mov    ds:0xc1bb16ff,eax
  408fbd:	and    DWORD PTR [eax+0xf],0x6b
  408fc1:	push   cs
  408fc2:	and    eax,0x94161a61
  408fc7:	jecxz  0x408f6d
  408fc9:	lahf   
  408fca:	sbb    bl,bl
  408fcc:	or     eax,0x92e09f9c
  408fd1:	pop    ecx
  408fd2:	iret   
  408fd3:	inc    esi
  408fd4:	outs   dx,BYTE PTR gs:[esi]
  408fd6:	ds push ebp
  408fd8:	cmp    BYTE PTR [edx-0x70563092],dh
  408fde:	cmp    eax,0x69ccfdb5
  408fe3:	push   esp
  408fe4:	outs   dx,DWORD PTR ds:[esi]
  408fe5:	add    BYTE PTR [eax],bl
  408fe7:	out    0xc3,eax
  408fe9:	js     0x408f88
  408feb:	mov    eax,0xf1961a53
  408ff0:	stc    
  408ff1:	test   BYTE PTR [ebp-0x70cb7bea],bh
  408ff7:	es ror ch,cl
  408ffa:	fstp   TBYTE PTR [edx]
  408ffc:	fcmovnu st,st(5)
  408ffe:	adc    BYTE PTR [ebx-0x34],0x6e
  409002:	jne    0x408fea
  409004:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409005:	gs pop eax
  409007:	ret    0x5da4
  40900a:	out    dx,al
  40900b:	sbb    esp,DWORD PTR [ebp+0x68d18fe4]
  409011:	and    dh,BYTE PTR [ecx+0x39]
  409014:	mov    ebx,0xf277c1ce
  409019:	cmp    al,0x73
  40901b:	xor    DWORD PTR [ecx+0x4d3a8846],ebp
  409021:	inc    esi
  409022:	add    ecx,DWORD PTR [ebx]
  409024:	xchg   edi,eax
  409025:	push   cs
  409026:	and    BYTE PTR [ecx+ebp*1-0x42],dl
  40902a:	not    cl
  40902c:	xor    DWORD PTR [ebx],ebx
  40902e:	jno    0x409072
  409030:	push   ebp
  409031:	dec    ebx
  409032:	cmp    eax,0x94e04775
  409037:	push   eax
  409038:	mov    ecx,0xfa4fdc88
  40903d:	xchg   esi,eax
  40903e:	mov    ebx,0xd1ee6273
  409043:	call   0x5d29:0xe5fc7678
  40904a:	loopne 0x408ff1
  40904c:	dec    esi
  40904d:	or     BYTE PTR ds:0x791a2cbc,dh
  409053:	jg     0x409077
  409055:	gs cwde 
  409057:	jae    0x40905d
  409059:	xchg   edx,eax
  40905a:	jmp    0x408fe7
  40905c:	fst    DWORD PTR [eax+edi*4+0xf]
  409060:	cs lahf 
  409062:	hlt    
  409063:	pop    ebp
  409064:	shl    BYTE PTR [edx+0xf94beef],0xbb
  40906b:	mov    ah,0xeb
  40906d:	aam    0x4a
  40906f:	cmp    ebx,ebx
  409071:	mov    dl,ah
  409073:	jl     0x4090c4
  409075:	adc    edx,edx
  409077:	push   0xffffff89
  409079:	fiadd  DWORD PTR [ecx]
  40907b:	iret   
  40907c:	adc    BYTE PTR [eax+0x41],cl
  40907f:	in     eax,0x76
  409081:	hlt    
  409082:	sub    BYTE PTR [ebx-0x68],bl
  409085:	lahf   
  409086:	xchg   DWORD PTR [esi],ebp
  409088:	inc    ecx
  409089:	jecxz  0x40906d
  40908b:	adc    dh,BYTE PTR fs:[ecx+0x5566e566]
  409092:	mov    al,0x26
  409094:	jge    0x4090fb
  409096:	test   eax,0xe7f258ca
  40909b:	outs   dx,DWORD PTR ds:[esi]
  40909c:	push   cs
  40909d:	mov    edi,esi
  40909f:	pop    ebx
  4090a0:	ficomp DWORD PTR [ebx+esi*4+0x6dedc6c0]
  4090a7:	xchg   DWORD PTR [esi-0x39],ebx
  4090aa:	push   ecx
  4090ab:	xchg   ebp,eax
  4090ac:	int3   
  4090ad:	stos   DWORD PTR es:[edi],eax
  4090ae:	jno    0x40903c
  4090b0:	lea    edi,[edi-0x1e]
  4090b3:	sbb    BYTE PTR ds:[edx+0x30],ah
  4090b7:	jbe    0x409124
  4090b9:	jo     0x409077
  4090bb:	test   BYTE PTR [esp+0x41d817d6],0x49
  4090c3:	retf   
  4090c4:	inc    esp
  4090c5:	push   0x1f38789d
  4090ca:	cmp    edx,esi
  4090cc:	mov    edx,0xb5d42cf0
  4090d1:	adc    bh,cl
  4090d3:	hlt    
  4090d4:	out    0xb4,eax
  4090d6:	jae    0x409126
  4090d8:	dec    ebp
  4090d9:	xchg   edi,eax
  4090da:	out    dx,al
  4090db:	mov    ah,0x4e
  4090dd:	imul   edi,DWORD PTR [edi],0x2e2e4785
  4090e3:	sub    eax,0x6deca449
  4090e8:	adc    ebp,DWORD PTR [ecx+0x52876e1e]
  4090ee:	outs   dx,BYTE PTR ds:[esi]
  4090ef:	sbb    dh,BYTE PTR [ebp-0x4c764bb8]
  4090f5:	xor    eax,0x7b92d8e2
  4090fa:	(bad)  
  4090fb:	imul   esp,edx,0x67653d75
  409101:	sbb    ebp,DWORD PTR [ecx+0x6b]
  409104:	adc    al,0xfe
  409106:	aad    0xd8
  409108:	imul   esi,ebx,0xffffffdf
  40910b:	and    DWORD PTR [ebp-0x4960003],edi
  409111:	xchg   ebp,eax
  409112:	sub    DWORD PTR [eax-0x48],edi
  409115:	inc    esp
  409116:	sbb    BYTE PTR [edx],0xe5
  409119:	and    eax,0x8ba9a961
  40911e:	xchg   ecx,eax
  40911f:	cld    
  409120:	push   0x88e9ecc7
  409125:	cmp    al,0x32
  409127:	(bad)  
  409129:	pusha  
  40912a:	pop    ebp
  40912b:	ins    BYTE PTR es:[edi],dx
  40912c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40912d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40912e:	push   esi
  40912f:	pop    ebx
  409130:	scas   eax,DWORD PTR es:[edi]
  409131:	add    dl,BYTE PTR [edx]
  409133:	scas   al,BYTE PTR es:[edi]
  409134:	adc    BYTE PTR [ecx-0x3a],dh
  409137:	test   BYTE PTR [ecx-0x13539ca1],ch
  40913d:	inc    edi
  40913e:	idiv   DWORD PTR [esi+0x2a]
  409141:	inc    ecx
  409142:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409143:	xchg   edi,eax
  409144:	cmc    
  409145:	test   al,0x64
  409147:	ds jmp 0x4090f6
  40914a:	mov    es:0x5cc96dfd,al
  409150:	or     DWORD PTR [edx+0x73e5e9ba],esp
  409156:	js     0x4091ca
  409158:	test   al,0x54
  40915a:	mov    ?,WORD PTR [ebx-0x36]
  40915d:	or     al,0xb
  40915f:	fwait
  409160:	mov    eax,ds:0x84aae29b
  409165:	mov    ebx,0x7d62646d
  40916a:	and    DWORD PTR [esi],esi
  40916c:	ja     0x40917b
  40916e:	sbb    al,0x6
  409170:	or     ch,BYTE PTR [ebp-0x40e7d65f]
  409176:	enter  0xba7b,0x60
  40917a:	call   0x945ff656
  40917f:	jno    0x4091fd
  409181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409182:	stos   BYTE PTR es:[edi],al
  409183:	jg     0x4091d9
  409185:	jmp    0x409119
  409187:	out    dx,al
  409188:	(bad)  
  409189:	shr    DWORD PTR [eax],cl
  40918b:	and    cl,bl
  40918d:	stos   BYTE PTR es:[edi],al
  40918e:	or     DWORD PTR [ebp+0x2ca7efc0],ecx
  409194:	adc    eax,0x698d6789
  409199:	hlt    
  40919a:	(bad)  
  40919b:	jmp    0x82c7e48f
  4091a0:	cs jns 0x409141
  4091a3:	jae    0x409194
  4091a5:	(bad)  
  4091a6:	jnp    0x40919c
  4091a8:	or     ch,BYTE PTR [esi-0x4fc2e1dc]
  4091ae:	xchg   edi,eax
  4091af:	rcl    BYTE PTR [ecx-0x2c],1
  4091b2:	dec    esp
  4091b3:	pop    ds
  4091b4:	std    
  4091b5:	mul    ebp
  4091b7:	lahf   
  4091b8:	jae    0x409145
  4091ba:	sub    dl,BYTE PTR ds:0xb39a2a8f
  4091c0:	mov    al,0xc5
  4091c2:	test   bl,dl
  4091c4:	(bad)  
  4091c5:	arpl   WORD PTR [ecx],cx
  4091c7:	inc    ebx
  4091c8:	out    dx,eax
  4091c9:	sbb    al,dl
  4091cb:	int    0x23
  4091cd:	out    0xef,al
  4091cf:	sub    BYTE PTR [esi],cl
  4091d1:	leave  
  4091d2:	fcmovnbe st,st(2)
  4091d4:	cmc    
  4091d5:	xchg   edx,eax
  4091d6:	cs adc edx,ebp
  4091d9:	push   esi
  4091da:	xchg   DWORD PTR [esi-0x2b348adf],ecx
  4091e0:	dec    bh
  4091e2:	loop   0x409235
  4091e4:	fs call 0x9aeb597
  4091ea:	mov    dl,0xf9
  4091ec:	xchg   esi,eax
  4091ed:	repnz fistp QWORD PTR [edi-0x480112a6]
  4091f4:	lahf   
  4091f5:	shl    esp,cl
  4091f7:	push   0x89a8d751
  4091fc:	add    esi,DWORD PTR ds:0x21d382dc
  409202:	mov    ch,0x7c
  409204:	mov    bh,0x69
  409206:	jmp    0x69fc57e8
  40920b:	das    
  40920c:	push   ebx
  40920d:	mov    al,ds:0x796b4f3b
  409212:	pop    es
  409213:	in     al,0xf8
  409215:	mov    bl,BYTE PTR [eax-0x20]
  409218:	imul   ebx,DWORD PTR [edx-0x3a99e9ee],0x60
  40921f:	scas   eax,DWORD PTR es:[edi]
  409220:	mov    cs,esi
  409222:	cmp    eax,0xd3961183
  409227:	jns    0x4091d0
  409229:	xor    edi,DWORD PTR [edx]
  40922b:	cli    
  40922c:	imul   DWORD PTR [edi+0xd]
  40922f:	in     eax,dx
  409230:	mov    dh,0xaa
  409232:	sub    al,BYTE PTR [esi-0x33]
  409235:	pop    ebx
  409236:	xor    ch,dh
  409238:	dec    eax
  409239:	xchg   edx,eax
  40923a:	xchg   ecx,ebp
  40923c:	xchg   BYTE PTR [ecx+0x29bbc2cd],al
  409242:	ffree  st(4)
  409244:	call   0x9b4ff111
  409249:	dec    ebp
  40924a:	mov    esi,eax
  40924c:	xchg   ebp,eax
  40924d:	cld    
  40924e:	push   ds
  40924f:	retf   
  409250:	enter  0xeaf0,0xd7
  409254:	mov    ?,WORD PTR [edi+0x3fb878a4]
  40925a:	xchg   ebp,eax
  40925b:	fistp  QWORD PTR [ebx+0x66ac2a00]
  409261:	cmc    
  409262:	shl    bl,0x5a
  409265:	jle    0x4091eb
  409267:	cmp    al,0x5b
  409269:	add    eax,0xd4b5ff82
  40926e:	jmp    0x36a1:0x79eca0ef
  409275:	mov    cl,BYTE PTR [ebx-0x2425dad2]
  40927b:	jmp    0xb9b53938
  409280:	fild   QWORD PTR [ebx+0x36]
  409283:	loopne 0x40926c
  409285:	sti    
  409286:	mov    eax,0xb678742f
  40928b:	mov    esp,0xe6cdb04e
  409290:	out    0xee,eax
  409292:	hlt    
  409293:	sub    esi,ebx
  409295:	repnz adc eax,0x11823c5d
  40929b:	lock mov ds:0x68f5c76e,eax
  4092a1:	outs   dx,BYTE PTR ds:[esi]
  4092a2:	mov    eax,ds:0x5b4e75d7
  4092a7:	fstp   TBYTE PTR [edx+0x11]
  4092aa:	lods   eax,DWORD PTR ds:[esi]
  4092ab:	push   esp
  4092ac:	sub    esi,DWORD PTR [ebx-0x7be2b95d]
  4092b2:	adc    al,0xee
  4092b4:	xchg   BYTE PTR [ecx],al
  4092b6:	into   
  4092b7:	adc    BYTE PTR [eax],0x81
  4092ba:	mov    dl,0x3d
  4092bc:	adc    bl,al
  4092be:	(bad)  
  4092bf:	iret   
  4092c0:	retf   0x508a
  4092c3:	push   edx
  4092c4:	ins    DWORD PTR es:[edi],dx
  4092c5:	lds    edx,FWORD PTR [esi]
  4092c7:	jg     0x409258
  4092c9:	jmp    0xfdeae5a2
  4092ce:	pop    es
  4092cf:	(bad)  
  4092d0:	lock or BYTE PTR [ebp+0x73],0xe3
  4092d5:	inc    esi
  4092d6:	out    dx,eax
  4092d7:	(bad)  
  4092d8:	xchg   BYTE PTR ds:0x2178726a,ch
  4092de:	inc    esp
  4092df:	lods   al,BYTE PTR ds:[esi]
  4092e0:	(bad)  
  4092e1:	cmc    
  4092e2:	addr16 dec esp
  4092e4:	push   esp
  4092e5:	js     0x4092e1
  4092e7:	add    eax,0xf049350c
  4092ec:	outs   dx,DWORD PTR ds:[esi]
  4092ed:	imul   esi,DWORD PTR [edx+0x1d],0x8067ccd1
  4092f4:	and    ebx,DWORD PTR [edi-0x5f029b0e]
  4092fa:	adc    edx,DWORD PTR [ebp-0x6f]
  4092fd:	pop    esp
  4092fe:	push   edx
  4092ff:	imul   eax,DWORD PTR ds:0x92dd9000,0xaa7ff076
  409309:	xor    BYTE PTR [esi],ah
  40930b:	fisttp DWORD PTR [eax-0x78944d41]
  409311:	call   0x15db88a5
  409316:	enclv  
  409319:	in     eax,0x8e
  40931b:	test   al,0x71
  40931d:	xchg   edx,eax
  40931e:	ja     0x40935d
  409320:	xchg   esp,eax
  409321:	mov    edi,0xc4b79913
  409326:	imul   ebx,DWORD PTR [ebp-0x43bc9caa],0x7f
  40932d:	xchg   ebx,eax
  40932e:	jo     0x40939c
  409330:	jb     0x40937b
  409332:	pop    ecx
  409333:	fnstcw WORD PTR [edx-0xb68b14a]
  409339:	ss jnp 0x4092ce
  40933c:	mov    BYTE PTR [ebx],ch
  40933e:	hlt    
  40933f:	cmc    
  409340:	add    al,0x81
  409342:	daa    
  409343:	into   
  409344:	iret   
  409345:	push   DWORD PTR [edi-0x9f3d901]
  40934b:	por    mm5,mm2
  40934e:	aam    0xe1
  409350:	and    al,0x3c
  409352:	popf   
  409353:	sub    eax,0x54319275
  409358:	xchg   edi,eax
  409359:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40935a:	aas    
  40935b:	jg     0x4092fd
  40935d:	fstp   DWORD PTR [edi+0x109576ba]
  409363:	inc    ecx
  409364:	mov    ?,WORD PTR [eax]
  409366:	inc    ebp
  409367:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409368:	aad    0x13
  40936a:	push   esi
  40936b:	dec    eax
  40936c:	and    bh,BYTE PTR [ebx]
  40936e:	jmp    0xac5b:0xff3c2dc5
  409375:	mov    ch,0x28
  409377:	ins    BYTE PTR es:[edi],dx
  409378:	test   al,0xc1
  40937a:	test   DWORD PTR [ebx+edi*1-0x75df7a32],esp
  409381:	int3   
  409382:	fs jmp 0x4093e3
  409385:	daa    
  409386:	loopne 0x40934d
  409388:	retf   
  409389:	out    0xa7,al
  40938b:	and    eax,0x1ba3cb25
  409390:	pusha  
  409391:	out    dx,al
  409392:	mov    BYTE PTR [esi-0x19],dl
  409395:	mov    ebp,0xbe21bc55
  40939a:	jl     0x409380
  40939c:	push   esi
  40939d:	xchg   esi,eax
  40939e:	nop
  40939f:	jns    0x409388
  4093a1:	mov    edx,0x5aec6acc
  4093a6:	add    ebp,DWORD PTR [ebp+0x7be182b9]
  4093ac:	gs cmc 
  4093ae:	adc    ebx,DWORD PTR [esi-0x44]
  4093b1:	rcr    BYTE PTR [esi],1
  4093b3:	test   eax,0x73e429f9
  4093b8:	mov    al,0x66
  4093ba:	mov    esi,0xdb819777
  4093bf:	gs cmps DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4093c2:	mov    bh,0x45
  4093c4:	pop    esi
  4093c5:	ror    DWORD PTR [edx],1
  4093c7:	lahf   
  4093c8:	adc    DWORD PTR [eax+0x6],edx
  4093cb:	retf   
  4093cc:	mov    edi,0x91dd9293
  4093d1:	cmp    DWORD PTR [edx+0x7a],0xc0bd736e
  4093d8:	pop    esi
  4093d9:	ret    
  4093da:	push   ds
  4093db:	push   0x31
  4093dd:	push   esi
  4093de:	stos   DWORD PTR es:[edi],eax
  4093df:	mov    WORD PTR [edi-0x22],ds
  4093e2:	fs xor al,0x81
  4093e5:	cmp    al,0xaf
  4093e7:	mov    bl,0x86
  4093e9:	mov    dh,0x5f
  4093eb:	aam    0x1e
  4093ed:	not    DWORD PTR [esi]
  4093ef:	adc    al,0xcd
  4093f1:	jge    0x409391
  4093f3:	repnz into 
  4093f5:	loop   0x409419
  4093f7:	arpl   WORD PTR [ecx],di
  4093f9:	in     eax,dx
  4093fa:	in     al,0x28
  4093fc:	or     eax,0xc04cf4f6
  409401:	popf   
  409402:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409403:	aaa    
  409404:	sub    bh,bl
  409406:	test   cl,ch
  409408:	inc    BYTE PTR ss:[ebp-0x59]
  40940c:	in     eax,dx
  40940d:	test   bl,0x74
  409410:	mov    bh,0xe0
  409412:	loopne 0x40940c
  409414:	adc    BYTE PTR [edx],ch
  409416:	cmp    eax,0xa5cc02f
  40941b:	leave  
  40941c:	lods   eax,DWORD PTR ds:[esi]
  40941d:	stc    
  40941e:	aaa    
  40941f:	addr16 or al,0xf0
  409422:	into   
  409423:	imul   esi,DWORD PTR [edx],0x3df5df0
  409429:	push   ecx
  40942a:	jb     0x4093f3
  40942c:	xchg   edx,ebp
  40942e:	xchg   esp,eax
  40942f:	pop    ebp
  409430:	aas    
  409431:	mov    ds:0x9b155104,eax
  409436:	jnp    0x4093df
  409438:	xor    DWORD PTR [ebp-0x2a2971cc],ecx
  40943e:	in     eax,dx
  40943f:	shl    BYTE PTR [edi],1
  409441:	ins    BYTE PTR es:[edi],dx
  409442:	adc    ebx,DWORD PTR ds:[eax-0x59535117]
  409449:	leave  
  40944a:	(bad)  
  40944b:	adc    dl,bh
  40944d:	les    edx,FWORD PTR [edx+0x4b71219]
  409453:	aad    0x3c
  409455:	lahf   
  409456:	out    0x3,eax
  409458:	sub    DWORD PTR [edx],ebp
  40945a:	rol    BYTE PTR [edi+0x2a2b5294],cl
  409460:	xchg   ebp,eax
  409461:	push   edx
  409462:	daa    
  409463:	and    eax,0xcf27dc38
  409468:	xchg   ebp,eax
  409469:	adc    ebx,ebp
  40946b:	dec    edi
  40946c:	xchg   edx,eax
  40946d:	outs   dx,DWORD PTR ds:[esi]
  40946e:	inc    edx
  40946f:	xchg   edi,eax
  409470:	(bad)  
  409471:	sub    dh,BYTE PTR [edx]
  409473:	shl    BYTE PTR [ebx],0x80
  409476:	rcl    DWORD PTR [edx+0x55],1
  409479:	js     0x409494
  40947b:	push   ss
  40947c:	push   edi
  40947d:	xor    BYTE PTR [ecx-0x3a007ca7],ah
  409483:	jg     0x40940f
  409485:	stc    
  409486:	popf   
  409487:	push   es
  409488:	sbb    edi,DWORD PTR [esi-0x57]
  40948b:	outs   dx,BYTE PTR ds:[esi]
  40948c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40948d:	adc    bh,BYTE PTR [ecx-0x3dcda4c]
  409493:	mov    ds:0x796e3113,al
  409498:	stc    
  409499:	sti    
  40949a:	imul   eax,DWORD PTR [edi],0x8e3d6ef6
  4094a0:	mov    eax,0xe7c19e28
  4094a5:	mov    edi,0x9ca17e9a
  4094aa:	out    0x3e,al
  4094ac:	inc    edx
  4094ad:	or     esi,DWORD PTR [edi]
  4094af:	push   ebx
  4094b0:	out    0x54,eax
  4094b2:	lods   al,BYTE PTR ds:[esi]
  4094b3:	test   BYTE PTR [edx],ah
  4094b5:	mov    esp,0x494363fb
  4094ba:	call   0x9f18:0x1272066a
  4094c1:	je     0x4094be
  4094c3:	cmp    BYTE PTR [edx-0x2],cl
  4094c6:	in     eax,0x75
  4094c8:	mov    edx,0x3d275b42
  4094cd:	repz test BYTE PTR ds:0xe8033a1b,bl
  4094d4:	jecxz  0x409532
  4094d6:	xor    ebx,DWORD PTR [ecx-0x1cd13998]
  4094dc:	lds    bp,DWORD PTR [edx-0x11d745d5]
  4094e3:	xor    al,0x24
  4094e5:	push   esp
  4094e6:	xor    DWORD PTR [ebx],eax
  4094e8:	xor    dl,BYTE PTR [esi-0x29]
  4094eb:	mov    edi,0x6b89eaa7
  4094f0:	fld    QWORD PTR [edx-0x46bdbe8f]
  4094f6:	pop    ss
  4094f7:	out    dx,eax
  4094f8:	stos   DWORD PTR es:[edi],eax
  4094f9:	out    0x1d,al
  4094fb:	sbb    bl,cl
  4094fd:	test   al,0xb4
  4094ff:	stos   DWORD PTR es:[edi],eax
  409500:	sar    DWORD PTR [ecx-0x7e],1
  409503:	pushf  
  409504:	outs   dx,BYTE PTR ds:[esi]
  409505:	or     DWORD PTR [edi-0x46b5df46],edi
  40950b:	fcomp  st(3)
  40950d:	loop   0x4094b2
  40950f:	mov    eax,0x80aa708e
  409514:	push   eax
  409515:	mov    ebx,0x4250311c
  40951a:	mov    al,ds:0x6ade5170
  40951f:	fld    QWORD PTR [edi-0x45ef8e47]
  409525:	mov    ch,BYTE PTR [esi+0x55]
  409528:	push   es
  409529:	pop    es
  40952a:	clc    
  40952b:	mov    bl,0x9d
  40952d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40952e:	(bad)  
  40952f:	cld    
  409530:	outs   dx,BYTE PTR ds:[esi]
  409531:	frstor [esi-0x231e73fd]
  409537:	aaa    
  409538:	mov    al,0x42
  40953a:	pop    eax
  40953b:	and    esi,DWORD PTR [edx-0x47]
  40953e:	dec    ebp
  40953f:	ror    edi,0x40
  409542:	and    al,0x5a
  409544:	mov    WORD PTR [edx+0x69],es
  409547:	mov    ch,0x36
  409549:	pop    eax
  40954a:	in     eax,0x1b
  40954c:	push   edi
  40954d:	ins    DWORD PTR es:[edi],dx
  40954e:	out    dx,eax
  40954f:	sahf   
  409550:	mov    edx,0x413d0e3d
  409555:	push   ds
  409556:	ror    BYTE PTR [eax],0x51
  409559:	push   edi
  40955a:	(bad)  
  40955b:	dec    DWORD PTR [eax]
  40955d:	stos   DWORD PTR es:[edi],eax
  40955e:	jmp    0x548d073
  409563:	lahf   
  409564:	cli    
  409565:	cmp    ebx,edi
  409567:	mov    esp,0xe3063052
  40956c:	das    
  40956d:	int3   
  40956e:	or     BYTE PTR [eax-0x28459f57],cl
  409574:	cmc    
  409575:	and    eax,0x67d621fc
  40957a:	jle    0x4095d8
  40957c:	imul   esp,DWORD PTR [eax+0x192668b7],0xffffffe8
  409583:	lea    eax,[edx-0x275830a3]
  409589:	pop    edx
  40958a:	and    edi,DWORD PTR [eax-0xe]
  40958d:	loope  0x4095f6
  40958f:	std    
  409590:	das    
  409591:	gs ins DWORD PTR es:[edi],dx
  409593:	add    eax,0x1c0f306d
  409598:	pushf  
  409599:	in     al,dx
  40959a:	or     bl,BYTE PTR ss:[ecx+0x45]
  40959e:	and    al,0x7d
  4095a0:	push   0xffffffd4
  4095a2:	or     edi,DWORD PTR [eax-0x4eff9919]
  4095a8:	sbb    eax,DWORD PTR [eax+0x5e]
  4095ab:	cmp    ch,bh
  4095ad:	jecxz  0x409627
  4095af:	push   ebp
  4095b0:	xchg   edx,eax
  4095b1:	adc    al,0x13
  4095b3:	repz and cl,BYTE PTR [ecx-0xc954175]
  4095ba:	mov    al,ds:0x56b164fa
  4095bf:	and    BYTE PTR [ebx-0x7c],cl
  4095c2:	cmp    eax,0x105e88c
  4095c7:	push   ecx
  4095c8:	add    ebx,eax
  4095ca:	out    dx,eax
  4095cb:	xor    edx,DWORD PTR [esi+0x7fe82460]
  4095d1:	loope  0x409637
  4095d3:	sbb    eax,0x75e59a01
  4095d8:	stos   DWORD PTR es:[edi],eax
  4095d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095da:	fwait
  4095db:	sbb    esp,edx
  4095dd:	(bad)
  4095e1:	fcmovne st,st(5)
  4095e3:	mov    ch,0x89
  4095e5:	sub    eax,0x3a237c66
  4095ea:	out    0xd7,eax
  4095ec:	dec    dx
  4095ee:	or     al,0x28
  4095f0:	push   esp
  4095f1:	xchg   ebp,eax
  4095f2:	mov    dh,0x3f
  4095f4:	cli    
  4095f5:	call   0x1ace:0x3b286614
  4095fc:	mov    ebx,0x50519273
  409601:	lahf   
  409602:	xchg   BYTE PTR [ebx-0x2e89746c],bl
  409608:	sub    esi,DWORD PTR [ecx-0x729112ce]
  40960e:	xor    ch,dl
  409610:	mov    DWORD PTR [esi-0x6b],edi
  409613:	fsub   DWORD PTR [edi+0x21a6560f]
  409619:	outs   dx,DWORD PTR ds:[esi]
  40961a:	ins    BYTE PTR es:[edi],dx
  40961b:	mov    ecx,0x46ae72be
  409620:	push   ss
  409621:	arpl   WORD PTR [edi-0x6024610e],sp
  409627:	and    al,0x1c
  409629:	cmp    al,0x16
  40962b:	dec    edx
  40962c:	shl    edi,0x5a
  40962f:	pop    esi
  409630:	rol    BYTE PTR [edi+0x6a290b9c],0x63
  409637:	add    BYTE PTR [ecx+0x5],bh
  40963a:	popf   
  40963b:	push   ss
  40963c:	repnz and edi,DWORD PTR [ecx-0x1f]
  409640:	fsubp  st(6),st
  409642:	push   ebx
  409643:	add    DWORD PTR [edi+0x61],ebp
  409646:	in     eax,0xb3
  409648:	push   es
  409649:	inc    ebp
  40964a:	aaa    
  40964b:	lahf   
  40964c:	in     eax,0xd0
  40964e:	inc    ecx
  40964f:	call   0x9f1e713d
  409654:	or     DWORD PTR [eax],0xffffffc9
  409657:	xor    eax,0x22bf1627
  40965c:	inc    ebx
  40965d:	inc    ebx
  40965e:	add    eax,0x39bdf693
  409663:	mov    dl,0xf9
  409665:	or     BYTE PTR [eax-0x7d471560],ch
  40966b:	push   esi
  40966c:	rcl    BYTE PTR [edi+0x40511116],0x6b
  409673:	sar    DWORD PTR [edi+0x6a326628],cl
  409679:	fs daa 
  40967b:	adc    ebp,DWORD PTR [ebx-0x80]
  40967e:	lods   eax,DWORD PTR ss:[esi]
  409680:	(bad)  
  409681:	xlat   BYTE PTR ds:[ebx]
  409682:	inc    edx
  409683:	scas   al,BYTE PTR es:[edi]
  409684:	fistp  DWORD PTR [ecx-0x72]
  409687:	inc    edi
  409688:	or     DWORD PTR [eax],0x0
  40968b:	xor    edx,DWORD PTR fs:[ebx]
  40968e:	popf   
  40968f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409690:	bound  edx,QWORD PTR [esi-0x22]
  409693:	mov    dh,0x7
  409695:	mov    esp,0x934caa54
  40969a:	lea    edi,[edx-0x4dc5675f]
  4096a0:	sbb    DWORD PTR [ebp+0x4],esi
  4096a3:	pop    esp
  4096a4:	repz mov esi,0x1a82b8d2
  4096aa:	in     eax,dx
  4096ab:	add    dh,BYTE PTR [edx+0x15]
  4096ae:	xor    eax,0xce8642e4
  4096b3:	ss jbe 0x40970a
  4096b6:	push   0xffffffc4
  4096b8:	leave  
  4096b9:	add    eax,0x37ad90c2
  4096be:	loopne 0x409676
  4096c0:	xchg   ebp,eax
  4096c1:	sub    DWORD PTR [ebx-0x39],esi
  4096c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096c6:	popf   
  4096c7:	sbb    bh,BYTE PTR [eax]
  4096c9:	pop    esp
  4096ca:	rcl    BYTE PTR [ecx],1
  4096cc:	addr16 pop ebp
  4096ce:	add    DWORD PTR [ebx],0x2a2d6499
  4096d4:	mov    ch,0xc6
  4096d6:	mov    al,0x6
  4096d8:	imul   ebx,DWORD PTR [ecx+0x7c],0xb55ceb25
  4096df:	lock xchg ebp,eax
  4096e1:	imul   edx,eax,0x3
  4096e4:	push   edi
  4096e5:	fcomp  DWORD PTR [ecx-0x57ed7448]
  4096eb:	cmp    esi,DWORD PTR [eax+0x73a57139]
  4096f1:	ds dec ebp
  4096f3:	pop    ss
  4096f4:	(bad)  
  4096f6:	jae    0x409765
  4096f8:	rcr    ebp,0xe9
  4096fb:	lds    esp,FWORD PTR [edi+0x1b00d159]
  409701:	fstp   QWORD PTR [edx+0x3f]
  409704:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409705:	jno    0x4096a8
  409707:	dec    esi
  409708:	out    dx,eax
  409709:	add    al,0xe7
  40970b:	push   ebp
  40970c:	sbb    eax,0xbcb8551f
  409711:	pop    esi
  409712:	and    BYTE PTR [ebp+0x1b655635],0xe5
  409719:	retf   
  40971a:	add    BYTE PTR [edi],bl
  40971c:	mov    cl,0xc9
  40971e:	bound  esi,QWORD PTR ds:0xced52923
  409724:	sbb    BYTE PTR [ebp-0x248e8d2d],ah
  40972a:	outs   dx,DWORD PTR ds:[esi]
  40972b:	cmovle ecx,edx
  40972e:	xchg   esi,eax
  40972f:	adc    eax,0xa5684b03
  409734:	cmp    al,0xfd
  409736:	pop    esi
  409737:	into   
  409738:	cmc    
  409739:	in     eax,dx
  40973a:	mov    al,0xbe
  40973c:	popa   
  40973d:	sub    BYTE PTR [edx+0x4a],ah
  409740:	push   cs
  409741:	lahf   
  409742:	loope  0x409700
  409744:	dec    bx
  409746:	or     al,0x66
  409748:	das    
  409749:	jno    0x409752
  40974b:	push   0xd0c7b4d3
  409750:	jmp    0x409717
  409752:	ss leave 
  409754:	(bad)  
  409755:	jmp    0x87b0:0x7b3bc932
  40975c:	rol    ah,0x60
  40975f:	sub    BYTE PTR [edi+0x5bb12d39],dh
  409765:	mov    cl,0xe8
  409767:	mov    eax,0x23ab0352
  40976c:	jbe    0x40972a
  40976e:	jnp    0x409700
  409770:	xor    eax,0x2a06eba0
  409775:	jl     0x409781
  409777:	sub    edx,DWORD PTR [edi+0x5]
  40977a:	scas   al,BYTE PTR es:[edi]
  40977b:	repz sar BYTE PTR [ebx],0x99
  40977f:	popf   
  409780:	cld    
  409781:	stos   DWORD PTR es:[edi],eax
  409782:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409783:	mov    cl,0x19
  409785:	inc    ecx
  409786:	js     0x4097bc
  409788:	jge    0x4097d3
  40978a:	repz adc bl,dl
  40978d:	push   esi
  40978e:	out    dx,eax
  40978f:	dec    eax
  409790:	sti    
  409791:	scas   al,BYTE PTR es:[edi]
  409792:	les    ebx,FWORD PTR [eax+0x6716f1db]
  409798:	xor    eax,0xba494f3f
  40979d:	outs   dx,DWORD PTR ds:[esi]
  40979e:	jmp    0xb913c354
  4097a3:	fsubr  DWORD PTR [eax+eiz*1+0x3da7e6eb]
  4097aa:	js     0x409798
  4097ac:	daa    
  4097ad:	push   ss
  4097ae:	sbb    eax,0x787bc7f4
  4097b3:	xlat   BYTE PTR ds:[ebx]
  4097b4:	xlat   BYTE PTR ds:[ebx]
  4097b5:	scas   al,BYTE PTR es:[edi]
  4097b6:	rcr    dh,0xfc
  4097b9:	and    DWORD PTR [edi],ebp
  4097bb:	jg     0x409828
  4097bd:	retf   0x1128
  4097c0:	pop    ebx
  4097c1:	or     BYTE PTR ds:0xf6ece16,ah
  4097c7:	ficomp WORD PTR [edi+ebp*8]
  4097ca:	adc    BYTE PTR [ebp+0xaf1bf4],bl
  4097d0:	sbb    al,0x9b
  4097d2:	ins    DWORD PTR es:[edi],dx
  4097d3:	(bad)  
  4097d4:	repnz add eax,0x2307e4f0
  4097da:	pop    esi
  4097db:	inc    esi
  4097dc:	jae    0x409793
  4097de:	mov    esp,0x995d8dac
  4097e3:	ficom  WORD PTR [ecx+0x4a14c870]
  4097e9:	xor    eax,ebp
  4097eb:	mov    ecx,DWORD PTR [edx+ebp*2+0x4fe97ff2]
  4097f2:	sbb    BYTE PTR [edx-0x40],bl
  4097f5:	mov    BYTE PTR [ebp-0x41],bh
  4097f8:	fdiv   QWORD PTR [eax+0x3b70eb42]
  4097fe:	pop    eax
  4097ff:	jns    0x4097a4
  409801:	jns    0x409802
  409803:	rcl    BYTE PTR [eax+0x18b828ac],1
  409809:	ins    BYTE PTR es:[edi],dx
  40980a:	aad    0x5e
  40980c:	mov    ah,0x9d
  40980e:	mov    al,ds:0x2ad77d0f
  409813:	jo     0x409893
  409815:	pop    esp
  409816:	and    al,0xc3
  409818:	mov    ch,0x4b
  40981a:	(bad)  [esi-0x11]
  40981d:	fidiv  DWORD PTR [eax]
  40981f:	rcr    DWORD PTR [edx+eax*4],1
  409822:	daa    
  409823:	cmc    
  409824:	popa   
  409825:	fwait
  409826:	in     eax,0x56
  409828:	retf   
  409829:	shl    bl,1
  40982b:	push   0xffffffb4
  40982d:	cmp    ah,BYTE PTR [esi+0x385a4b51]
  409833:	mov    ch,0xdb
  409835:	aas    
  409836:	jge    0x4097eb
  409838:	in     al,0xcb
  40983a:	shl    ebx,cl
  40983c:	je     0x409809
  40983e:	inc    DWORD PTR [edx-0x33]
  409841:	into   
  409842:	mov    ebx,0xf9773cac
  409847:	call   0xc7ad16a5
  40984c:	jb     0x409820
  40984e:	bound  edx,QWORD PTR [ecx-0x1053fe17]
  409854:	cdq    
  409855:	adc    bl,BYTE PTR [eax]
  409857:	mov    dl,0xc1
  409859:	cmc    
  40985a:	aas    
  40985b:	inc    ecx
  40985c:	outs   dx,DWORD PTR ds:[esi]
  40985d:	imul   ebx,DWORD PTR ds:0x93c56710,0xffffffa8
  409864:	loop   0x4098d7
  409866:	sbb    bl,BYTE PTR [esi]
  409868:	in     eax,dx
  409869:	fs std 
  40986b:	daa    
  40986c:	sbb    esi,ecx
  40986e:	sub    bh,BYTE PTR [esi-0x5e]
  409871:	leave  
  409872:	ficom  DWORD PTR [ecx-0x4a376eb]
  409878:	in     al,dx
  409879:	jnp    0x40989d
  40987b:	hlt    
  40987c:	jg     0x4098fa
  40987e:	ror    bh,0x64
  409881:	fld    st(1)
  409883:	mov    eax,ds:0x9ff60d9c
  409888:	fidivr WORD PTR [edx+0x31]
  40988b:	jge    0x409848
  40988d:	jecxz  0x409859
  40988f:	outs   dx,DWORD PTR ds:[esi]
  409890:	pop    eax
  409891:	mov    ebp,0xc98c0b24
  409896:	push   esp
  409897:	call   0x54ba:0xcb977165
  40989e:	sbb    eax,0x4fcf8d4f
  4098a3:	fiadd  WORD PTR [edi]
  4098a5:	push   ebp
  4098a6:	or     eax,0x9e7dd9cb
  4098ab:	jns    0x409855
  4098ad:	and    bh,BYTE PTR [ebp-0x7ffff06b]
  4098b3:	inc    edi
  4098b4:	pop    ecx
  4098b5:	lock sbb dh,ch
  4098b8:	adc    al,BYTE PTR [ebp+0x17]
  4098bb:	fild   QWORD PTR [esi+0x48]
  4098be:	fdiv   DWORD PTR [ecx-0x142ca9c7]
  4098c4:	push   esi
  4098c5:	fwait
  4098c6:	xor    dh,BYTE PTR [edx+0x3b96e11e]
  4098cc:	inc    ebp
  4098cd:	aad    0xa
  4098cf:	or     al,0xe8
  4098d1:	sar    BYTE PTR [edi+0x64246080],cl
  4098d7:	or     DWORD PTR [esi],0x41b73e7b
  4098dd:	shl    DWORD PTR [ebx-0x732203d9],cl
  4098e3:	or     ecx,eax
  4098e5:	adc    al,0x3a
  4098e7:	test   DWORD PTR [edi],esp
  4098e9:	arpl   WORD PTR [edi+0xd],bx
  4098ec:	sub    BYTE PTR [esi],bh
  4098ee:	(bad)  
  4098ef:	cmp    esi,esp
  4098f1:	shl    BYTE PTR [ebx+edi*1-0x102284ac],cl
  4098f8:	pop    esp
  4098f9:	and    eax,0xc720be07
  4098fe:	sub    dh,bh
  409900:	inc    ebx
  409901:	daa    
  409902:	push   esp
  409903:	add    BYTE PTR [esi-0x13],dh
  409906:	shl    DWORD PTR [eax],0xce
  409909:	push   0x16
  40990b:	mov    edx,0x8ca5d251
  409910:	lods   al,BYTE PTR ds:[esi]
  409911:	cmc    
  409912:	mov    edx,0xce909cd5
  409917:	pop    ecx
  409918:	out    dx,al
  409919:	xor    bl,BYTE PTR [esi+edi*2]
  40991c:	push   edx
  40991d:	pop    DWORD PTR [ebx-0x2b9bc2c5]
  409923:	xor    dl,BYTE PTR [ecx]
  409925:	addr16 push 0xffffffaf
  409928:	imul   esi,DWORD PTR [edx+ebp*1+0x62866934],0x7a
  409930:	dec    edi
  409931:	push   0x68
  409933:	loop   0x409911
  409935:	sub    edi,DWORD PTR [ecx]
  409937:	cmp    eax,0x33ac9978
  40993c:	add    BYTE PTR [esi+edi*2],dh
  40993f:	jnp    0x40995c
  409941:	leave  
  409942:	add    eax,0xd69aba33
  409947:	div    BYTE PTR [ebp+0x13edf8cb]
  40994d:	mov    dh,0x34
  40994f:	and    eax,0x6f399227
  409954:	cwde   
  409955:	jb     0x4099a4
  409957:	out    0xa4,al
  409959:	pop    eax
  40995a:	cmp    DWORD PTR [esi+0x53],ecx
  40995d:	cmc    
  40995e:	in     eax,0x91
  409960:	retf   0x9bc2
  409963:	dec    esp
  409964:	mov    ch,0xe1
  409966:	add    DWORD PTR [edi],esp
  409968:	mov    esp,0xbf6744df
  40996d:	lea    ecx,[esi-0x1d2fc86a]
  409973:	mov    edx,0xa4936622
  409978:	or     al,0xbe
  40997a:	je     0x4099a9
  40997c:	pushf  
  40997d:	std    
  40997e:	jecxz  0x4099e7
  409980:	fimul  DWORD PTR [eax]
  409982:	pop    edx
  409983:	(bad)  
  409985:	loop   0x409939
  409987:	call   0x3cff:0xed8162f3
  40998e:	dec    edi
  40998f:	aad    0x34
  409991:	push   ds
  409992:	into   
  409993:	mov    eax,ds:0x4ae47123
  409998:	addr16 cld 
  40999a:	icebp  
  40999b:	xor    al,0xcf
  40999d:	mov    bl,al
  40999f:	fcomp  QWORD PTR [edx-0x51]
  4099a2:	jo     0x4099df
  4099a4:	mov    dl,0xd0
  4099a6:	loop   0x409958
  4099a8:	inc    ah
  4099aa:	inc    esi
  4099ab:	imul   DWORD PTR ds:0x18f78e5e
  4099b1:	inc    eax
  4099b2:	pop    ecx
  4099b3:	inc    esp
  4099b4:	mov    ah,0xa2
  4099b6:	cmp    DWORD PTR [ebp-0x2a],edx
  4099b9:	cwde   
  4099ba:	bound  edx,QWORD PTR [ecx+edx*2+0x2a]
  4099be:	and    ecx,ebx
  4099c0:	fcom   DWORD PTR [edi]
  4099c2:	cmp    cl,BYTE PTR [ebx+0x34]
  4099c5:	xor    BYTE PTR [ecx+0x7],bh
  4099c8:	mov    eax,ds:0x2a64d809
  4099cd:	and    BYTE PTR [ebp-0x3a74ee65],bl
  4099d3:	pop    ecx
  4099d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099d5:	addr16 ss jb 0x409a07
  4099d9:	sub    al,0x40
  4099db:	sbb    esp,DWORD PTR [ebx+eax*1+0x67]
  4099df:	xlat   BYTE PTR ds:[ebx]
  4099e0:	pop    ecx
  4099e1:	push   ss
  4099e2:	aas    
  4099e3:	and    al,0x32
  4099e5:	mov    cl,0x73
  4099e7:	jae    0x4099d8
  4099e9:	stc    
  4099ea:	loopne 0x409a4e
  4099ec:	es loop 0x409a5d
  4099ef:	sub    ah,dh
  4099f1:	sub    edi,DWORD PTR [edx+eax*2+0x207264bc]
  4099f8:	jle    0x409a75
  4099fa:	std    
  4099fb:	adc    DWORD PTR [ecx-0x24],esi
  4099fe:	fild   WORD PTR [edi]
  409a00:	iret   
  409a01:	push   ds
  409a02:	mov    ecx,0x9991298
  409a07:	xchg   ebx,eax
  409a08:	es loop 0x4099f4
  409a0b:	(bad)  
  409a0d:	xchg   esp,eax
  409a0e:	dec    edi
  409a0f:	lods   al,BYTE PTR ds:[esi]
  409a10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a11:	retf   0xb1b0
  409a14:	fmul   st,st(5)
  409a16:	test   DWORD PTR [esi],eax
  409a18:	aad    0xce
  409a1a:	and    al,0x9b
  409a1c:	xchg   DWORD PTR [ebx+eax*8+0x78],eax
  409a20:	or     bl,BYTE PTR [edx-0x1708086e]
  409a26:	inc    ecx
  409a27:	or     al,al
  409a29:	sar    BYTE PTR [esi],1
  409a2b:	mov    edx,0x79b7733b
  409a30:	stos   BYTE PTR es:[edi],al
  409a31:	mov    ebp,0x9483e021
  409a36:	sbb    ah,bl
  409a38:	icebp  
  409a39:	ins    DWORD PTR es:[edi],dx
  409a3a:	jne    0x409a4a
  409a3c:	jle    0x4099c9
  409a3e:	loop   0x409a8f
  409a40:	xchg   ecx,eax
  409a41:	retf   
  409a42:	dec    ecx
  409a43:	cmp    DWORD PTR [eax-0x19],esp
  409a46:	mov    al,BYTE PTR [edx+edi*1+0x326fd4fb]
  409a4d:	jmp    0x9b368a62
  409a52:	dec    edx
  409a53:	mov    edx,0x9d584cbe
  409a58:	loopne 0x409a78
  409a5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a5b:	and    eax,0xd4c2d7af
  409a60:	(bad)  
  409a61:	leave  
  409a62:	mov    DWORD PTR [eax+0x77c3f24c],esi
  409a68:	stos   BYTE PTR es:[edi],al
  409a69:	mov    DWORD PTR [eax+ecx*4-0x1],esi
  409a6d:	or     eax,0xe99fb17f
  409a72:	mov    edi,0x5aebad0e
  409a77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a78:	adc    esi,DWORD PTR [ebx+0x62]
  409a7b:	int    0xa9
  409a7d:	mov    al,ds:0xf6d0912d
  409a82:	es mov al,0x54
  409a85:	adc    ecx,DWORD PTR [ebp-0x7b]
  409a88:	cmc    
  409a89:	daa    
  409a8a:	fild   WORD PTR [esi]
  409a8c:	adc    cl,bl
  409a8e:	lds    edi,FWORD PTR [eax-0x2b]
  409a91:	cmp    edi,edx
  409a93:	cmp    BYTE PTR [ebx+ebx*4-0x4e73698],dh
  409a9a:	je     0x409ac6
  409a9c:	inc    edi
  409a9d:	pop    eax
  409a9e:	ret    0x11f9
  409aa1:	fdiv   QWORD PTR [edi+eax*2]
  409aa4:	(bad)  
  409aa5:	cmc    
  409aa6:	out    dx,al
  409aa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409aa8:	into   
  409aa9:	adc    DWORD PTR [esi-0x74841f87],edx
  409aaf:	pop    esp
  409ab0:	mov    al,0x11
  409ab2:	ja     0x409a41
  409ab4:	xlat   BYTE PTR ds:[ebx]
  409ab5:	out    0xb6,eax
  409ab7:	call   0x929373cc
  409abc:	adc    ebp,DWORD PTR [eax-0x6a]
  409abf:	test   al,0xe6
  409ac1:	fisttp DWORD PTR [ecx]
  409ac3:	lods   al,BYTE PTR ds:[esi]
  409ac4:	jl     0x409b0d
  409ac6:	daa    
  409ac7:	shl    DWORD PTR [ecx-0x65],0x59
  409acb:	mov    ch,0x8d
  409acd:	cmc    
  409ace:	into   
  409acf:	(bad)  
  409ad0:	(bad)  
  409ad2:	loope  0x409acc
  409ad4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ad5:	je     0x409a8c
  409ad7:	punpcklbw mm2,DWORD PTR [ecx]
  409ada:	sbb    al,0xb9
  409adc:	pop    edx
  409add:	xor    ebp,DWORD PTR [esi]
  409adf:	or     eax,0x99bdf20e
  409ae4:	and    dh,BYTE PTR [eax]
  409ae6:	xor    ebx,0x70
  409ae9:	pop    esi
  409aea:	retf   
  409aeb:	mov    edx,0xe8c40b66
  409af0:	pop    esp
  409af1:	push   eax
  409af2:	data16 jg 0x409af6
  409af5:	out    dx,al
  409af6:	cmp    al,0x4e
  409af8:	and    DWORD PTR [eax+0x46b46a63],ebx
  409afe:	inc    ebx
  409aff:	nop
  409b00:	lods   eax,DWORD PTR ds:[esi]
  409b01:	das    
  409b02:	jo     0x409b13
  409b04:	jle    0x409af1
  409b06:	ror    esp,cl
  409b08:	scas   eax,DWORD PTR es:[edi]
  409b09:	jmp    0x4e8e7595
  409b0e:	inc    edi
  409b0f:	mov    ds:0xafd09d3,al
  409b14:	sub    BYTE PTR [edx+0x6e],ah
  409b17:	cdq    
  409b18:	(bad)
  409b1b:	jne    0x409b66
  409b1d:	loopne 0x409b15
  409b1f:	push   ebx
  409b20:	mov    ah,0x95
  409b22:	out    dx,al
  409b23:	xor    BYTE PTR [esi-0x184ee4ad],bh
  409b29:	sbb    al,0x3
  409b2b:	or     DWORD PTR [edx-0x46],ebx
  409b2e:	xor    ecx,DWORD PTR [edx+eiz*8+0xa]
  409b32:	repnz call 0x6cc5:0x5fbdfd0d
  409b3a:	xchg   ebp,eax
  409b3b:	test   DWORD PTR [edx+0x3c],esi
  409b3e:	sbb    esp,ebx
  409b40:	ds jo  0x409b3b
  409b43:	mul    DWORD PTR [ecx+ebx*8+0x70]
  409b47:	jmp    0x918a37fe
  409b4c:	outs   dx,BYTE PTR ds:[esi]
  409b4d:	lea    ebp,[edx-0x58ca78de]
  409b53:	adc    eax,0xf46b48b
  409b58:	std    
  409b59:	push   eax
  409b5a:	add    eax,DWORD PTR [edx+edx*1-0x9]
  409b5e:	xchg   esi,eax
  409b5f:	loop   0x409b1b
  409b61:	mov    edi,0x88c519fa
  409b66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b67:	xchg   esi,eax
  409b68:	add    DWORD PTR [ebx-0x5c45e28d],esp
  409b6e:	test   eax,0x13190b19
  409b73:	stos   DWORD PTR es:[edi],eax
  409b74:	pop    esi
  409b75:	mov    ebp,0x86c451d0
  409b7a:	mov    cl,0x9
  409b7c:	jne    0x409b04
  409b7e:	pop    ss
  409b7f:	stos   DWORD PTR es:[edi],eax
  409b80:	into   
  409b81:	mov    BYTE PTR [esi+0x30ea3d67],ch
  409b87:	mov    ebp,0xee2c4a1b
  409b8c:	dec    esp
  409b8d:	stos   BYTE PTR es:[edi],al
  409b8e:	lahf   
  409b8f:	pop    ebp
  409b90:	adc    ebp,esi
  409b92:	inc    edi
  409b93:	loope  0x409c0e
  409b95:	add    cl,dl
  409b97:	dec    ebx
  409b98:	or     DWORD PTR [edi],esi
  409b9a:	sub    al,al
  409b9c:	imul   ebp
  409b9e:	rcr    DWORD PTR [ecx],1
  409ba0:	adc    al,0x12
  409ba2:	sub    DWORD PTR [esi+0x68fc9a12],esp
  409ba8:	int    0x13
  409baa:	(bad)  
  409bab:	mov    al,0x69
  409bad:	ficom  DWORD PTR [ebp-0x5e15c704]
  409bb3:	inc    edx
  409bb4:	push   esi
  409bb5:	push   esi
  409bb6:	aam    0x62
  409bb8:	push   esp
  409bb9:	cdq    
  409bba:	xchg   esi,eax
  409bbb:	shrd   esp,ebx,cl
  409bbe:	cmp    ecx,ebp
  409bc0:	push   cs
  409bc1:	int    0xef
  409bc3:	aas    
  409bc4:	adc    dh,dl
  409bc6:	xor    ah,BYTE PTR [eax]
  409bc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bc9:	lods   al,BYTE PTR cs:[esi]
  409bcb:	lods   eax,DWORD PTR es:[esi]
  409bcd:	mov    dl,BYTE PTR [edi+0x3b6d853a]
  409bd3:	mov    ebx,0x53b6c7ae
  409bd8:	lahf   
  409bd9:	jne    0x409bf5
  409bdb:	jmp    0xbddf:0x5d5019e6
  409be2:	mov    bl,0xcf
  409be4:	mov    eax,ds:0xf4e6f1e9
  409be9:	std    
  409bea:	xor    al,0x1d
  409bec:	mov    cl,0x1f
  409bee:	jle    0x409bbd
  409bf0:	mov    ds:0xebe385d7,eax
  409bf5:	loop   0x409c1d
  409bf7:	or     bl,BYTE PTR [eax]
  409bf9:	cmp    bh,BYTE PTR [edi+0x77]
  409bfc:	repnz inc eax
  409bfe:	enter  0x6177,0x4b
  409c02:	push   ecx
  409c03:	inc    edi
  409c04:	sbb    ch,BYTE PTR [ecx+0x2baa8988]
  409c0a:	scas   eax,DWORD PTR es:[edi]
  409c0b:	push   ss
  409c0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c0d:	sub    al,0xc1
  409c0f:	aam    0x93
  409c11:	cmp    al,0x6e
  409c13:	inc    edx
  409c14:	jb     0x409c2e
  409c16:	pop    esp
  409c17:	stc    
  409c18:	mov    dl,0x93
  409c1a:	sub    dh,BYTE PTR [ebx]
  409c1c:	jle    0x409bef
  409c1e:	fcom   DWORD PTR [eax-0x6acc6e15]
  409c24:	mov    dl,0x79
  409c26:	aaa    
  409c27:	es enter 0xcb08,0xc7
  409c2c:	pop    edi
  409c2d:	adc    BYTE PTR [eax+0x6974bf51],cl
  409c33:	cdq    
  409c34:	mov    dl,BYTE PTR [ebx]
  409c36:	or     eax,0x3a0d2fb2
  409c3b:	loopne 0x409bcd
  409c3d:	jl     0x409c00
  409c3f:	jecxz  0x409c7a
  409c41:	aaa    
  409c42:	fld    TBYTE PTR [esi+0x19]
  409c45:	clc    
  409c46:	jnp    0x409cb4
  409c48:	mov    ebp,0xaf0c4aba
  409c4d:	mov    edx,0x37a3dcc2
  409c52:	mov    edx,0x1a901417
  409c57:	adc    eax,DWORD PTR [edi-0x50]
  409c5a:	sbb    edi,DWORD PTR [edi-0x4f3547c4]
  409c60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c61:	out    dx,al
  409c62:	sbb    eax,0x10bc2f84
  409c67:	arpl   WORD PTR ds:0xae809660,si
  409c6d:	sbb    al,0x79
  409c6f:	sti    
  409c70:	inc    ebx
  409c71:	in     eax,dx
  409c72:	pop    ds
  409c73:	mov    ebp,DWORD PTR [edx+eax*4+0x101d2779]
  409c7a:	adc    al,BYTE PTR [eax]
  409c7c:	mov    ds:0x658c982c,al
  409c81:	(bad)
  409c84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c85:	and    BYTE PTR [ecx+0x5f],bh
  409c88:	das    
  409c89:	xchg   ebp,eax
  409c8a:	js     0x409c3c
  409c8c:	ja     0x409c50
  409c8e:	fcom   DWORD PTR [esi+eax*2-0x46]
  409c92:	loop   0x409cb0
  409c94:	xor    BYTE PTR [ebp+eax*2+0x4aea9ec4],dh
  409c9b:	pop    ecx
  409c9c:	fld    DWORD PTR [esi+0x59]
  409c9f:	jo     0x409d02
  409ca1:	jmp    0x409c90
  409ca3:	sar    DWORD PTR [ebp-0x1b],0x59
  409ca7:	jb     0x409c3e
  409ca9:	mov    bl,0x6e
  409cab:	push   ds
  409cac:	int    0x65
  409cae:	rcr    al,0xb6
  409cb1:	dec    edx
  409cb2:	dec    esp
  409cb3:	(bad)  
  409cb4:	lods   eax,DWORD PTR ds:[esi]
  409cb5:	std    
  409cb6:	mov    esp,0x7595328a
  409cbb:	mov    bh,0x7d
  409cbd:	out    0x60,al
  409cbf:	arpl   WORD PTR [esi+0x5c643fbf],di
  409cc5:	push   ebp
  409cc6:	mov    eax,DWORD PTR [ebp-0x5]
  409cc9:	jmp    0xfdd0:0x89be510a
  409cd0:	hlt    
  409cd1:	test   al,0x8b
  409cd3:	out    0xaa,eax
  409cd5:	xor    al,0xec
  409cd7:	out    0xcd,al
  409cd9:	mov    gs,WORD PTR [ecx]
  409cdb:	cwde   
  409cdc:	mov    ds:0x9e96d557,al
  409ce1:	(bad)  
  409ce2:	das    
  409ce3:	sti    
  409ce4:	sbb    eax,0xe4a6b0c5
  409ce9:	cmp    esp,DWORD PTR [edx]
  409ceb:	out    dx,al
  409cec:	push   ds
  409ced:	daa    
  409cee:	repnz ins BYTE PTR es:[edi],dx
  409cf0:	mov    ebx,0xfbe1b70d
  409cf5:	mov    bh,0xf1
  409cf7:	in     eax,0x3
  409cf9:	mov    ebp,0xd8b5132d
  409cfe:	jno    0x409caf
  409d00:	mov    ah,0x64
  409d02:	sbb    eax,0xc19b5841
  409d07:	add    ecx,DWORD PTR [edi]
  409d09:	mov    fs,WORD PTR ds:0xc1817eb1
  409d0f:	inc    esp
  409d10:	adc    al,0xe3
  409d12:	jo     0x409ca6
  409d14:	or     eax,0x5a815775
  409d19:	mov    edi,0xaf8ddc3e
  409d1e:	(bad)  
  409d1f:	xchg   ebp,eax
  409d20:	mov    bl,0x16
  409d22:	mov    bh,0x9a
  409d24:	js     0x409cd3
  409d26:	dec    edx
  409d27:	dec    edx
  409d28:	xchg   edx,eax
  409d29:	mov    DWORD PTR [ebx-0x6f],esi
  409d2c:	xchg   ebx,eax
  409d2d:	punpckhbw mm4,QWORD PTR [ecx-0x393dbe16]
  409d34:	sbb    DWORD PTR [ebx-0x4a],ebp
  409d37:	push   cs
  409d38:	mov    cr5,ebx
  409d3b:	mov    bl,0xd4
  409d3d:	fwait
  409d3e:	mov    dl,BYTE PTR [eax+0x27]
  409d41:	mov    edx,0xea701ce8
  409d46:	btc    DWORD PTR [edi],ebp
  409d49:	mov    ecx,0xe6d2ba84
  409d4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d4f:	and    DWORD PTR [eax+0x69],esi
  409d52:	lods   al,BYTE PTR ds:[esi]
  409d53:	lods   al,BYTE PTR ds:[esi]
  409d54:	retf   
  409d55:	sbb    ecx,DWORD PTR [ecx+0x770e9d4f]
  409d5b:	fdivr  st(0),st
  409d5d:	xchg   DWORD PTR [esp+ebx*1-0x1ad9164a],esp
  409d64:	or     eax,0x395bbc1e
  409d69:	(bad)  
  409d6a:	or     eax,0xf89dbb89
  409d6f:	das    
  409d70:	xor    bh,BYTE PTR ds:0x7e08f59d
  409d76:	or     BYTE PTR [ecx-0x11b0e68d],bl
  409d7c:	(bad)  
  409d7e:	sbb    eax,0x83df855a
  409d83:	mov    ah,0x15
  409d85:	xor    eax,0xb52c2088
  409d8a:	das    
  409d8b:	dec    esp
  409d8c:	imul   esi,DWORD PTR [eax-0xa],0xffffffec
  409d90:	hlt    
  409d91:	mov    al,0x99
  409d93:	xchg   esp,eax
  409d94:	rcl    ch,cl
  409d96:	bound  esi,QWORD PTR [edx]
  409d98:	ficomp DWORD PTR [ecx+edx*8+0x1b7a4ea]
  409d9f:	mov    cl,0xfb
  409da1:	sub    eax,0xcdc1c02e
  409da6:	retf   0xb84d
  409da9:	mov    eax,ds:0xfde6dad0
  409dae:	sbb    dh,dh
  409db0:	jae    0x409e03
  409db2:	push   0x5b
  409db4:	out    0x88,al
  409db6:	push   ds
  409db7:	push   eax
  409db8:	mov    ds:0x8bd26f99,al
  409dbd:	and    BYTE PTR [ecx+0x50],cl
  409dc0:	cmp    eax,0x5d5c7663
  409dc5:	push   edx
  409dc6:	or     al,0xb2
  409dc8:	mov    BYTE PTR [edi],0x98
  409dcb:	jmp    0x93f5:0x1e75a33f
  409dd2:	cmp    eax,0xeb6862ad
  409dd7:	xor    eax,0xb572736d
  409ddc:	cs jl  0x409e52
  409ddf:	xchg   ecx,eax
  409de0:	mov    esp,0x6d59b821
  409de5:	(bad)  [edi]
  409de7:	repnz dec ebp
  409de9:	jle    0x409d7e
  409deb:	test   DWORD PTR [edx+0x594a9175],esi
  409df1:	sub    dl,BYTE PTR [esp+ebx*1+0x635c60aa]
  409df8:	cmp    al,0xec
  409dfa:	in     eax,0x3
  409dfc:	out    dx,eax
  409dfd:	loop   0x409dbb
  409dff:	repnz mov al,ds:0xed218668
  409e05:	fwait
  409e06:	xchg   DWORD PTR [ebx],edi
  409e08:	shr    DWORD PTR [edx-0x437bc316],cl
  409e0e:	mov    ah,0x3e
  409e10:	push   eax
  409e11:	xor    al,0x17
  409e13:	xchg   esi,eax
  409e14:	adc    cl,dl
  409e16:	and    eax,0xd2781cc2
  409e1b:	imul   esp,DWORD PTR es:[edi],0x14
  409e1f:	stos   BYTE PTR es:[edi],al
  409e20:	xchg   edx,eax
  409e21:	cli    
  409e22:	xlat   BYTE PTR ds:[ebx]
  409e23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e24:	xor    DWORD PTR ds:0x2aa6608,eax
  409e2a:	retf   
  409e2b:	jmp    0xbb617ac0
  409e30:	stos   BYTE PTR es:[edi],al
  409e31:	(bad)  
  409e32:	cld    
  409e33:	test   al,0xaa
  409e35:	cmc    
  409e36:	jbe    0x409dc8
  409e38:	leave  
  409e39:	cwde   
  409e3a:	arpl   WORD PTR ds:0xe942a388,sp
  409e40:	pushf  
  409e41:	mov    ?,WORD PTR [eax-0x22]
  409e44:	leave  
  409e45:	push   es
  409e46:	xchg   ecx,eax
  409e47:	jge    0x409e31
  409e49:	ss call 0x1847:0xbc97680e
  409e51:	or     eax,0xf84f85ea
  409e56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e57:	ds dec ebp
  409e59:	outs   dx,BYTE PTR ds:[esi]
  409e5a:	jb     0x409e80
  409e5c:	sbb    DWORD PTR ds:0xd247100f,esp
  409e62:	in     eax,0xb5
  409e64:	clc    
  409e65:	aas    
  409e66:	dec    edx
  409e67:	pop    esp
  409e68:	inc    edi
  409e69:	iret   
  409e6a:	iret   
  409e6b:	rcr    al,cl
  409e6d:	cs in  al,0x5f
  409e70:	imul   eax,DWORD PTR [edx]
  409e73:	mov    edx,DWORD PTR [ebp-0x4]
  409e76:	xor    edx,ecx
  409e78:	mov    ecx,DWORD PTR [ebp+0x8]
  409e7b:	lea    ecx,[edx+ecx*1+0x3272dd]
  409e82:	cmp    ecx,eax
  409e84:	je     0x409efb
  409e8a:	mov    edi,DWORD PTR [ebp-0x14]
  409e8d:	mov    eax,DWORD PTR [ebp+0x8]
  409e90:	mov    edx,DWORD PTR [ebp+0x14]
  409e93:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  409e97:	mov    ecx,0x7510896
  409e9c:	xor    edx,edx
  409e9e:	xor    edi,ecx
  409ea0:	mov    esi,0x3272dd
  409ea5:	add    edi,esi
  409ea7:	div    edi
  409ea9:	mov    edx,DWORD PTR [ebp-0x4]
  409eac:	xor    edx,ecx
  409eae:	lea    eax,[edx+eax*1+0x3272dd]
  409eb5:	mov    edx,DWORD PTR [ebp+0x8]
  409eb8:	mov    edi,DWORD PTR [ebp-0x20]
  409ebb:	mov    DWORD PTR [edi+edx*4],eax
  409ebe:	mov    eax,DWORD PTR [ebp-0x14]
  409ec1:	mov    edx,DWORD PTR [ebp+0x8]
  409ec4:	xor    eax,ecx
  409ec6:	lea    eax,[eax+edx*1+0x3272dd]
  409ecd:	mov    DWORD PTR [ebp+0x8],eax
  409ed0:	mov    eax,DWORD PTR [ebp-0x14]
  409ed3:	mov    edx,DWORD PTR [ebp+0x14]
  409ed6:	xor    eax,ecx
  409ed8:	add    eax,esi
  409eda:	imul   eax,DWORD PTR [edx]
  409edd:	mov    edx,DWORD PTR [ebp-0x4]
  409ee0:	xor    edx,ecx
  409ee2:	mov    ecx,DWORD PTR [ebp+0x8]
  409ee5:	lea    ecx,[edx+ecx*1+0x3272dd]
  409eec:	cmp    ecx,eax
  409eee:	jne    0x409e8a
  409ef4:	mov    eax,esi
  409ef6:	jmp    0x409f00
  409efb:	mov    eax,0x3272dd
  409f00:	mov    ebx,0x7510896
  409f05:	mov    ecx,DWORD PTR [ebp-0x4]
  409f08:	xor    ecx,ebx
  409f0a:	add    ecx,eax
  409f0c:	mov    DWORD PTR [ebp-0xc],ecx
  409f0f:	mov    ebx,0x65655
  409f14:	add    ebx,0x3234
  409f1a:	xchg   ebx,esi
  409f1c:	xor    ebx,ebx
  409f1e:	push   esi
  409f1f:	mov    esi,ebx
  409f21:	pop    ebx
  409f22:	mov    edx,esi
  409f24:	add    ebx,0x1002
  409f2a:	lea    eax,[ebp-0x10]
  409f2d:	add    edx,eax
  409f2f:	add    edx,0x5
  409f32:	push   edx
  409f33:	inc    esi
  409f34:	pop    ecx
  409f35:	dec    ecx
  409f36:	xchg   ecx,eax
  409f37:	dec    eax
  409f38:	xchg   ecx,eax
  409f39:	dec    ecx
  409f3a:	xchg   ecx,edx
  409f3c:	dec    edx
  409f3d:	push   edx
  409f3e:	mov    edx,ebx
  409f40:	pop    ebx
  409f41:	dec    ebx
  409f42:	call   DWORD PTR [ebx]
  409f44:	cmp    DWORD PTR [ebp+0x10],esi
  409f47:	je     0x409f66
  409f4d:	xchg   edx,eax
  409f4e:	push   0xb
  409f50:	pop    ecx
  409f51:	push   0x4
  409f53:	pop    ebx
  409f54:	inc    ebx
  409f55:	xchg   ebx,ecx
  409f57:	sub    ebx,ecx
  409f59:	xchg   ebx,ecx
  409f5b:	dec    ecx
  409f5c:	dec    ecx
  409f5d:	mov    eax,DWORD PTR [ebp-0x1c]
  409f60:	imul   eax,ecx
  409f63:	add    esp,eax
  409f65:	xchg   edx,eax
  409f66:	push   eax
  409f67:	xor    ebx,ebx
  409f69:	mov    edx,esp
  409f6b:	dec    edx
  409f6c:	inc    ebx
  409f6d:	add    ebx,DWORD PTR [edx+ebx*1]
  409f70:	dec    ebx
  409f71:	xor    edx,edx
  409f73:	add    DWORD PTR [ebp-0xc],ebx
  409f76:	pop    ebx
  409f77:	mov    eax,DWORD PTR [ebp-0xc]
  409f7a:	pop    edi
  409f7b:	pop    esi
  409f7c:	pop    ebx
  409f7d:	leave  
  409f7e:	ret    0x10
  409f81:	push   ebp
  409f82:	mov    ebp,esp
  409f84:	sub    esp,0x7c
  409f87:	xor    ecx,ecx
  409f89:	xor    ecx,DWORD PTR ds:0x42c014
  409f8f:	xor    DWORD PTR ds:0x42d018,ecx
  409f95:	push   esi
  409f96:	push   edi
  409f97:	movzx  edi,WORD PTR ds:0x429014
  409f9e:	adc    edi,DWORD PTR ds:0x42c018
  409fa4:	mov    DWORD PTR ds:0x429014,edi
  409faa:	mov    eax,ds:0x42e435
  409faf:	or     ecx,0x9a5
  409fb5:	mov    DWORD PTR [ebp-0x24],eax
  409fb8:	mov    eax,ds:0x42e541
  409fbd:	mov    DWORD PTR [ebp-0x34],eax
  409fc0:	or     edi,eax
  409fc2:	and    DWORD PTR [ebp-0x30],0x0
  409fc6:	xor    DWORD PTR ds:0x429018,0x17b1
  409fd0:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  409fd7:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  409fde:	mov    eax,DWORD PTR [ebp-0x10]
  409fe1:	mov    ecx,DWORD PTR [ebp-0x10]
  409fe4:	sub    eax,ecx
  409fe6:	mov    DWORD PTR [ebp-0x10],eax
  409fe9:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  409ff0:	and    DWORD PTR ds:0x42901c,0x0
  409ffa:	xor    eax,eax
  409ffc:	or     eax,DWORD PTR ds:0x42901c
  40a002:	inc    eax
  40a003:	mov    ds:0x42901c,eax
  40a008:	cmp    DWORD PTR ds:0x42901c,0xb
  40a00f:	jne    0x40a029
  40a015:	push   0x42e14e
  40a01a:	push   DWORD PTR [ebp-0xc]
  40a01d:	push   DWORD PTR [ebp-0x18]
  40a020:	push   DWORD PTR [ebp-0x24]
  40a023:	call   DWORD PTR ds:0x42ed61
  40a029:	cmp    DWORD PTR ds:0x42901c,0xa
  40a030:	jne    0x40a041
  40a036:	mov    eax,ds:0x42901c
  40a03b:	inc    eax
  40a03c:	mov    ds:0x42901c,eax
  40a041:	cmp    DWORD PTR ds:0x42901c,0x13
  40a048:	jb     0x409ffa
  40a04e:	sub    eax,esi
  40a050:	mov    eax,DWORD PTR [ebp-0x18]
  40a053:	mov    ecx,DWORD PTR [ebp-0x18]
  40a056:	sub    eax,ecx
  40a058:	mov    DWORD PTR [ebp-0x18],eax
  40a05b:	and    DWORD PTR ds:0x429000,0x0
  40a065:	mov    edi,DWORD PTR ds:0x429000
  40a06b:	inc    edi
  40a06c:	mov    DWORD PTR ds:0x429000,edi
  40a072:	cmp    DWORD PTR ds:0x429000,0xe
  40a079:	jne    0x40a08f
  40a07f:	push   0x429000
  40a084:	push   0x4a29
  40a089:	call   DWORD PTR ds:0x42ed65
  40a08f:	cmp    DWORD PTR ds:0x429000,0xd
  40a096:	jne    0x40a0ab
  40a09c:	xor    edi,edi
  40a09e:	or     edi,DWORD PTR ds:0x429000
  40a0a4:	inc    edi
  40a0a5:	mov    DWORD PTR ds:0x429000,edi
  40a0ab:	cmp    DWORD PTR ds:0x429000,0x1e
  40a0b2:	jb     0x40a065
  40a0b8:	and    eax,0x2f3f
  40a0bd:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  40a0c4:	mov    eax,DWORD PTR [ebp-0xc]
  40a0c7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a0ca:	or     edi,esi
  40a0cc:	sub    eax,ecx
  40a0ce:	xor    edi,edi
  40a0d0:	xor    edi,DWORD PTR ds:0x42d004
  40a0d6:	and    DWORD PTR ds:0x429008,edi
  40a0dc:	mov    DWORD PTR [ebp-0xc],eax
  40a0df:	sbb    DWORD PTR ds:0x42a018,0x66a3
  40a0e9:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  40a0f0:	adc    DWORD PTR ds:0x42b010,ecx
  40a0f6:	mov    eax,DWORD PTR [ebp-0x1c]
  40a0f9:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a0fc:	xor    esi,esi
  40a0fe:	xor    esi,DWORD PTR ds:0x411fec
  40a104:	mov    edi,DWORD PTR ds:0x411ff8
  40a10a:	sub    edi,esi
  40a10c:	and    esi,DWORD PTR [esi+edi*1]
  40a10f:	sub    eax,ecx
  40a111:	and    DWORD PTR ds:0x42c008,0x0
  40a11b:	mov    ecx,DWORD PTR ds:0x42c008
  40a121:	inc    ecx
  40a122:	mov    DWORD PTR ds:0x42c008,ecx
  40a128:	cmp    DWORD PTR ds:0x42c008,0x16
  40a12f:	jne    0x40a159
  40a135:	push   0x2fca
  40a13a:	push   0x42c014
  40a13f:	push   0x8b86
  40a144:	push   0x42e0af
  40a149:	push   0x5b55
  40a14e:	push   0x1406
  40a153:	call   DWORD PTR ds:0x42ed6d
  40a159:	cmp    DWORD PTR ds:0x42c008,0x10
  40a160:	jb     0x40a11b
  40a166:	add    DWORD PTR ds:0x42a018,ecx
  40a16c:	mov    DWORD PTR [ebp-0x1c],eax
  40a16f:	adc    DWORD PTR ds:0x42d018,ebx
  40a175:	or     DWORD PTR [ebp-0x1c],0xf89c85d5
  40a17c:	mov    eax,DWORD PTR [ebp-0x20]
  40a17f:	mov    ecx,DWORD PTR [ebp-0x20]
  40a182:	mov    DWORD PTR ds:0x42c014,0x17
  40a18c:	cmp    DWORD PTR ds:0x42c014,0x0
  40a193:	je     0x40a1be
  40a199:	cmp    DWORD PTR ds:0x42c014,0x22
  40a1a0:	jne    0x40a1ac
  40a1a6:	call   DWORD PTR ds:0x42ed71
  40a1ac:	mov    esi,DWORD PTR ds:0x42c014
  40a1b2:	dec    esi
  40a1b3:	mov    DWORD PTR ds:0x42c014,esi
  40a1b9:	jmp    0x40a18c
  40a1be:	sub    eax,ecx
  40a1c0:	and    DWORD PTR ds:0x42a004,0x0
  40a1ca:	jmp    0x40a1dc
  40a1cf:	mov    edi,DWORD PTR ds:0x42a004
  40a1d5:	inc    edi
  40a1d6:	mov    DWORD PTR ds:0x42a004,edi
  40a1dc:	cmp    DWORD PTR ds:0x42a004,0x15
  40a1e3:	jae    0x40a220
  40a1e9:	cmp    DWORD PTR ds:0x42a004,0x6
  40a1f0:	jne    0x40a201
  40a1f6:	push   0x42c008
  40a1fb:	call   DWORD PTR ds:0x42ed75
  40a201:	cmp    DWORD PTR ds:0x42a004,0x5
  40a208:	jne    0x40a21b
  40a20e:	mov    edi,DWORD PTR ds:0x42a004
  40a214:	inc    edi
  40a215:	mov    DWORD PTR ds:0x42a004,edi
  40a21b:	jmp    0x40a1cf
  40a220:	mov    DWORD PTR [ebp-0x20],eax
  40a223:	mov    eax,DWORD PTR [ebp-0x2c]
  40a226:	mov    ecx,DWORD PTR [ebp-0x20]
  40a229:	mov    esi,0x7510896
  40a22e:	xor    eax,esi
  40a230:	mov    edi,0x3272dd
  40a235:	add    eax,edi
  40a237:	or     eax,ecx
  40a239:	mov    DWORD PTR [ebp-0x20],eax
  40a23c:	mov    eax,DWORD PTR [ebp-0x4]
  40a23f:	mov    ecx,DWORD PTR [ebp-0x4]
  40a242:	sub    eax,ecx
  40a244:	mov    DWORD PTR [ebp-0x4],eax
  40a247:	or     DWORD PTR [ebp-0x4],0xf89c85be
  40a24e:	mov    eax,DWORD PTR [ebp-0xc]
  40a251:	xor    eax,esi
  40a253:	add    eax,edi
  40a255:	push   eax
  40a256:	mov    eax,DWORD PTR [ebp-0x10]
  40a259:	xor    eax,esi
  40a25b:	add    eax,edi
  40a25d:	push   eax
  40a25e:	mov    eax,DWORD PTR [ebp-0x4]
  40a261:	xor    eax,esi
  40a263:	add    eax,edi
  40a265:	push   eax
  40a266:	lea    eax,[ebp-0x7c]
  40a269:	push   eax
  40a26a:	push   DWORD PTR [ebp-0x2c]
  40a26d:	push   DWORD PTR [ebp-0x28]
  40a270:	call   0x40f163
  40a275:	test   eax,eax
  40a277:	je     0x40a2a5
  40a27d:	lea    eax,[ebp-0x7c]
  40a280:	push   eax
  40a281:	mov    eax,DWORD PTR [ebp-0x28]
  40a284:	xor    eax,esi
  40a286:	add    eax,edi
  40a288:	push   eax
  40a289:	mov    eax,DWORD PTR [ebp-0x24]
  40a28c:	add    eax,0xaa
  40a291:	push   eax
  40a292:	mov    eax,DWORD PTR [ebp-0x24]
  40a295:	mov    eax,DWORD PTR [eax+0x198]
  40a29b:	push   DWORD PTR [eax]
  40a29d:	call   0x40508b
  40a2a2:	mov    DWORD PTR [ebp-0x14],eax
  40a2a5:	lea    eax,[ebp+0x4]
  40a2a8:	mov    DWORD PTR [ebp-0x30],eax
  40a2ab:	mov    eax,DWORD PTR [ebp-0x14]
  40a2ae:	test   eax,eax
  40a2b0:	je     0x40a318
  40a2b6:	lea    eax,[ebp-0x8]
  40a2b9:	mov    DWORD PTR [ebp-0x38],eax
  40a2bc:	mov    eax,DWORD PTR [ebp-0x34]
  40a2bf:	mov    DWORD PTR [ebp-0x8],eax
  40a2c2:	mov    eax,DWORD PTR [ebp-0x8]
  40a2c5:	mov    ecx,DWORD PTR [ebp-0x14]
  40a2c8:	sub    eax,ecx
  40a2ca:	mov    DWORD PTR [ebp-0x8],eax
  40a2cd:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2d0:	xor    ecx,esi
  40a2d2:	mov    eax,0xffcd8d23
  40a2d7:	sub    eax,ecx
  40a2d9:	add    DWORD PTR [ebp-0x8],eax
  40a2dc:	mov    eax,DWORD PTR [ebp-0x8]
  40a2df:	mov    ecx,DWORD PTR [ebp-0x14]
  40a2e2:	mov    DWORD PTR [ecx+0x1],eax
  40a2e5:	mov    eax,DWORD PTR [ebp-0x14]
  40a2e8:	push   DWORD PTR [ebp-0x24]
  40a2eb:	mov    BYTE PTR [eax],0xe9
  40a2ee:	mov    eax,ds:0x42e2b1
  40a2f3:	push   DWORD PTR [eax]
  40a2f5:	push   DWORD PTR ds:0x42e50d
  40a2fb:	push   DWORD PTR ds:0x42e2b9
  40a301:	push   DWORD PTR ds:0x42e4ed
  40a307:	push   DWORD PTR ds:0x42eafd
  40a30d:	push   DWORD PTR [ebp-0x28]
  40a310:	push   DWORD PTR [ebp-0x2c]
  40a313:	mov    eax,DWORD PTR [ebp-0x14]
  40a316:	call   eax
  40a318:	mov    eax,DWORD PTR [ebp-0x30]
  40a31b:	mov    ecx,DWORD PTR ds:0x42e4b1
  40a321:	add    DWORD PTR [eax],ecx
  40a323:	pop    edi
  40a324:	pop    esi
  40a325:	leave  
  40a326:	ret    
  40a327:	push   ebp
  40a328:	mov    ebp,esp
  40a32a:	sub    esp,0x18
  40a32d:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  40a334:	lea    eax,[ebp+0x14]
  40a337:	mov    DWORD PTR [ebp-0x4],eax
  40a33a:	add    edx,0x781f
  40a340:	push   esi
  40a341:	and    esi,esi
  40a343:	mov    esi,0xf89c85b5
  40a348:	mov    DWORD PTR [ebp-0xc],esi
  40a34b:	lea    eax,[ebp-0xc]
  40a34e:	mov    DWORD PTR [ebp-0x14],eax
  40a351:	mov    eax,DWORD PTR [ebp-0xc]
  40a354:	mov    edx,DWORD PTR [ebp-0x14]
  40a357:	mov    ecx,0x7510896
  40a35c:	and    DWORD PTR ds:0x42d010,0x34d
  40a366:	xor    eax,ecx
  40a368:	sub    DWORD PTR ds:0x42a00c,0x429018
  40a372:	add    eax,0x3272dd
  40a377:	adc    DWORD PTR ds:0x42d00c,0x760b
  40a381:	mov    DWORD PTR [edx],eax
  40a383:	dec    edx
  40a384:	mov    eax,ds:0x42e2ad
  40a389:	sub    DWORD PTR ds:0x429008,ecx
  40a38f:	mov    edx,DWORD PTR [ebp-0x4]
  40a392:	mov    eax,DWORD PTR [eax]
  40a394:	and    DWORD PTR ds:0x42d004,0x42a01c
  40a39e:	add    eax,DWORD PTR [edx]
  40a3a0:	push   edi
  40a3a1:	mov    DWORD PTR [ebp-0x8],eax
  40a3a4:	and    DWORD PTR ds:0x42c008,0x0
  40a3ae:	jmp    0x40a3c0
  40a3b3:	mov    edi,DWORD PTR ds:0x42c008
  40a3b9:	inc    edi
  40a3ba:	mov    DWORD PTR ds:0x42c008,edi
  40a3c0:	cmp    DWORD PTR ds:0x42c008,0x1f
  40a3c7:	jae    0x40a451
  40a3cd:	cmp    DWORD PTR ds:0x42c008,0x25
  40a3d4:	jne    0x40a3e8
  40a3da:	push   0x3550
  40a3df:	push   DWORD PTR [ebp-0x1c]
  40a3e2:	call   DWORD PTR ds:0x42ed35
  40a3e8:	jmp    0x40a3b3
  40a3ed:	and    DWORD PTR ds:0x42d018,0x0
  40a3f7:	jmp    0x40a407
  40a3fc:	mov    eax,ds:0x42d018
  40a401:	inc    eax
  40a402:	mov    ds:0x42d018,eax
  40a407:	cmp    DWORD PTR ds:0x42d018,0x1a
  40a40e:	jae    0x40a451
  40a414:	cmp    DWORD PTR ds:0x42d018,0x8
  40a41b:	jne    0x40a434
  40a421:	push   DWORD PTR [ebp-0x1c]
  40a424:	push   0x42d014
  40a429:	push   0x5fa0
  40a42e:	call   DWORD PTR ds:0x42ed39
  40a434:	cmp    DWORD PTR ds:0x42d018,0x7
  40a43b:	jne    0x40a44c
  40a441:	mov    eax,ds:0x42d018
  40a446:	inc    eax
  40a447:	mov    ds:0x42d018,eax
  40a44c:	jmp    0x40a3fc
  40a451:	mov    edi,DWORD PTR [ebp+0x8]
  40a454:	mov    eax,ds:0x42e435
  40a459:	and    DWORD PTR ds:0x42a00c,0x728
  40a463:	mov    eax,DWORD PTR [eax+0x198]
  40a469:	xor    edi,ecx
  40a46b:	mov    edx,0x3272dd
  40a470:	and    DWORD PTR ds:0x42b010,0x42d000
  40a47a:	add    edi,edx
  40a47c:	mov    DWORD PTR ds:0x429000,0x5af1
  40a486:	cmp    DWORD PTR [eax],edi
  40a488:	je     0x40a49f
  40a48e:	mov    DWORD PTR ds:0x429000,0x225c
  40a498:	mov    eax,DWORD PTR [eax]
  40a49a:	jmp    0x40cc18
  40a49f:	mov    eax,0x3847
  40a4a4:	mov    eax,DWORD PTR [ebp+0x18]
  40a4a7:	cmp    eax,esi
  40a4a9:	mov    DWORD PTR ds:0x429014,0x6496
  40a4b3:	jne    0x40a4d7
  40a4b9:	mov    DWORD PTR ds:0x42b000,0x18c7
  40a4c3:	push   0xf89c85b2
  40a4c8:	mov    DWORD PTR ds:0x42c014,0x18
  40a4d2:	jmp    0x40cc07
  40a4d7:	mov    esi,DWORD PTR [ebp+0x18]
  40a4da:	mov    DWORD PTR ds:0x42b000,ebx
  40a4e0:	mov    eax,0xf89c85b3
  40a4e5:	cmp    esi,eax
  40a4e7:	mov    DWORD PTR ds:0x42b008,0x2007
  40a4f1:	jne    0x40cbf7
  40a4f7:	mov    eax,ds:0x42c008
  40a4fc:	xor    DWORD PTR ds:0x429004,eax
  40a502:	mov    eax,DWORD PTR [ebp+0x10]
  40a505:	dec    esi
  40a506:	xor    eax,ecx
  40a508:	adc    esi,DWORD PTR ds:0x42d008
  40a50e:	add    eax,edx
  40a510:	xor    esi,esi
  40a512:	or     esi,DWORD PTR ds:0x42c008
  40a518:	adc    DWORD PTR ds:0x42d010,esi
  40a51e:	mov    DWORD PTR [ebp-0x18],eax
  40a521:	mov    eax,DWORD PTR [ebp+0xc]
  40a524:	adc    DWORD PTR ds:0x42d010,0x3da6
  40a52e:	mov    esi,DWORD PTR [ebp-0x8]
  40a531:	xor    eax,ecx
  40a533:	add    DWORD PTR ds:0x42d018,0x6859
  40a53d:	add    eax,edx
  40a53f:	imul   eax,DWORD PTR [esi]
  40a542:	mov    esi,DWORD PTR [ebp+0x8]
  40a545:	or     DWORD PTR ds:0x42d014,0x363e
  40a54f:	xor    esi,ecx
  40a551:	mov    DWORD PTR ds:0x42b010,0xc36
  40a55b:	add    esi,edx
  40a55d:	mov    DWORD PTR ds:0x42d010,0x490b
  40a567:	cmp    esi,eax
  40a569:	mov    eax,ds:0x42d018
  40a56e:	mov    eax,DWORD PTR [ebp-0x4]
  40a571:	push   ebx
  40a572:	mov    DWORD PTR ds:0x42a008,0x30a3
  40a57c:	je     0x40a688
  40a582:	mov    DWORD PTR ds:0x42d008,0x4e69
  40a58c:	mov    esi,DWORD PTR [ebp-0x18]
  40a58f:	or     DWORD PTR ds:0x42a01c,0x42c010
  40a599:	add    DWORD PTR [eax],esi
  40a59b:	mov    DWORD PTR ds:0x42b00c,0x14
  40a5a5:	cmp    DWORD PTR ds:0x42b00c,0x0
  40a5ac:	je     0x40a5f7
  40a5b2:	cmp    DWORD PTR ds:0x42b00c,0x3
  40a5b9:	jne    0x40a5cf
  40a5bf:	push   0x42e0a1
  40a5c4:	push   0x42e035
  40a5c9:	call   DWORD PTR ds:0x42ed3d
  40a5cf:	cmp    DWORD PTR ds:0x42b00c,0x4
  40a5d6:	jne    0x40a5e7
  40a5dc:	mov    eax,ds:0x42b00c
  40a5e1:	dec    eax
  40a5e2:	mov    ds:0x42b00c,eax
  40a5e7:	mov    eax,ds:0x42b00c
  40a5ec:	dec    eax
  40a5ed:	mov    ds:0x42b00c,eax
  40a5f2:	jmp    0x40a5a5
  40a5f7:	mov    eax,DWORD PTR [ebp-0x4]
  40a5fa:	mov    DWORD PTR ds:0x42d004,0x12
  40a604:	cmp    DWORD PTR ds:0x42d004,0x0
  40a60b:	je     0x40a64f
  40a611:	cmp    DWORD PTR ds:0x42d004,0x21
  40a618:	jne    0x40a633
  40a61e:	push   0x5688
  40a623:	push   0x5318
  40a628:	push   0x314e
  40a62d:	call   DWORD PTR ds:0x42ed41
  40a633:	mov    esi,DWORD PTR ds:0x42d004
  40a639:	dec    esi
  40a63a:	mov    DWORD PTR ds:0x42d004,esi
  40a640:	jmp    0x40a604
  40a645:	sub    DWORD PTR ds:0x42c010,0x7728
  40a64f:	mov    esi,DWORD PTR [ebp+0xc]
  40a652:	add    DWORD PTR ds:0x42c018,0x42b00c
  40a65c:	xor    esi,ecx
  40a65e:	xor    DWORD PTR ds:0x429020,0x39e1
  40a668:	add    esi,edx
  40a66a:	xor    DWORD PTR ds:0x42b00c,0x429028
  40a674:	imul   esi,DWORD PTR [eax]
  40a677:	mov    DWORD PTR [eax],esi
  40a679:	mov    DWORD PTR ds:0x42d000,0x1b30
  40a683:	jmp    0x40a68f
  40a688:	and    edi,edi
  40a68a:	mov    esi,DWORD PTR [ebp+0x14]
  40a68d:	xor    DWORD PTR [eax],esi
  40a68f:	sbb    eax,edi
  40a691:	mov    eax,DWORD PTR [ebp-0x4]
  40a694:	mov    DWORD PTR ds:0x429020,0x1e
  40a69e:	cmp    DWORD PTR ds:0x429020,0x0
  40a6a5:	je     0x40a6f7
  40a6ab:	cmp    DWORD PTR ds:0x429020,0xf
  40a6b2:	jne    0x40a6cb
  40a6b8:	push   DWORD PTR [ebp-0x24]
  40a6bb:	push   0x42b000
  40a6c0:	push   0x2936
  40a6c5:	call   DWORD PTR ds:0x42ed45
  40a6cb:	cmp    DWORD PTR ds:0x429020,0x10
  40a6d2:	jne    0x40a6e5
  40a6d8:	mov    esi,DWORD PTR ds:0x429020
  40a6de:	dec    esi
  40a6df:	mov    DWORD PTR ds:0x429020,esi
  40a6e5:	mov    esi,DWORD PTR ds:0x429020
  40a6eb:	dec    esi
  40a6ec:	mov    DWORD PTR ds:0x429020,esi
  40a6f2:	jmp    0x40a69e
  40a6f7:	mov    edi,DWORD PTR [ebp+0x10]
  40a6fa:	xor    edi,ecx
  40a6fc:	mov    esi,0xffcd8d23
  40a701:	mov    ebx,esi
  40a703:	sub    ebx,edi
  40a705:	jmp    0x40caae
  40a70a:	inc    ecx
  40a70b:	sbb    al,0x8b
  40a70e:	fwait
  40a70f:	jnp    0x40a702
  40a711:	mov    BYTE PTR [ebx+0x4957c083],bl
  40a717:	mov    esi,0x46d5b27
  40a71c:	jp     0x40a798
  40a71e:	out    0x5f,al
  40a720:	jp     0x40a79c
  40a722:	add    eax,0xc18e8bb5
  40a727:	sbb    BYTE PTR [ecx-0x241d0f46],al
  40a72d:	sbb    eax,0x8fa9242f
  40a732:	test   BYTE PTR [edx+0x8],0x31
  40a736:	xchg   BYTE PTR [edi],bl
  40a738:	xchg   edi,eax
  40a739:	mov    ecx,0x44d33738
  40a73e:	outs   dx,BYTE PTR ds:[esi]
  40a73f:	int    0x6f
  40a741:	(bad)  
  40a742:	je     0x40a740
  40a744:	popa   
  40a745:	loopne 0x40a6cd
  40a747:	jecxz  0x40a730
  40a749:	lea    edx,[esi-0x42]
  40a74c:	iret   
  40a74d:	sbb    BYTE PTR ds:0xebc71350,ch
  40a753:	xor    eax,0x6c0687ad
  40a758:	jb     0x40a74b
  40a75a:	push   edx
  40a75b:	mov    edx,0xd7cffba0
  40a760:	push   ss
  40a761:	adc    BYTE PTR [ebx-0x7d6f5efb],dl
  40a767:	jbe    0x40a7d3
  40a769:	pop    es
  40a76a:	jmp    0x383c:0x8f36d384
  40a771:	pop    edi
  40a772:	mov    bl,0x6b
  40a774:	sar    BYTE PTR [edx+0x334b81e1],cl
  40a77a:	test   al,0x1e
  40a77c:	mov    esp,0x9ef5228b
  40a781:	stos   DWORD PTR es:[edi],eax
  40a782:	test   BYTE PTR [esi],dh
  40a784:	xchg   BYTE PTR ds:0x3484d83c,ch
  40a78a:	pop    esp
  40a78b:	clc    
  40a78c:	xchg   BYTE PTR [edx+ecx*8],ch
  40a78f:	int    0x32
  40a791:	adc    al,BYTE PTR [edi+eax*8+0x445ecd80]
  40a798:	or     eax,0x4a885860
  40a79d:	adc    dh,BYTE PTR [esi]
  40a79f:	sub    DWORD PTR fs:[edi+eiz*4+0x3ff275a7],esp
  40a7a7:	sbb    ebx,DWORD PTR [edi+0x2f]
  40a7aa:	mov    esi,0xa9a2a26c
  40a7af:	sbb    dl,bh
  40a7b1:	test   eax,0xf5d10d95
  40a7b6:	mov    ds:0xb8762a40,eax
  40a7bb:	in     al,dx
  40a7bc:	pop    ds
  40a7bd:	sub    ecx,DWORD PTR [ebp-0x1e]
  40a7c0:	in     eax,0xa1
  40a7c2:	sub    eax,0xf971ae64
  40a7c7:	xchg   DWORD PTR ds:0x55cb4226,eax
  40a7cd:	fcmovnb st,st(0)
  40a7cf:	mov    esi,0x1c89ddb0
  40a7d4:	fadd   st(6),st
  40a7d6:	pop    edi
  40a7d7:	aad    0xf0
  40a7d9:	aas    
  40a7da:	scas   eax,DWORD PTR es:[edi]
  40a7db:	nop
  40a7dc:	add    eax,0x2b02c0ca
  40a7e1:	mov    ecx,0x2f5f32d8
  40a7e6:	sub    BYTE PTR [edx+0x591e5c6f],cl
  40a7ec:	repnz hlt 
  40a7ee:	loop   0x40a826
  40a7f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7f1:	mov    esp,0x1bdbaa05
  40a7f6:	xchg   edx,eax
  40a7f7:	push   esp
  40a7f8:	cmp    BYTE PTR [ecx+edi*2-0x7a755316],dl
  40a7ff:	mov    bh,0xe0
  40a801:	mov    ds:0xf7307bbb,al
  40a806:	sbb    dl,BYTE PTR [ebx]
  40a808:	and    edi,esp
  40a80a:	ins    BYTE PTR es:[edi],dx
  40a80b:	lahf   
  40a80c:	imul   eax,DWORD PTR [ebp-0x4a41ba65],0x6dcde87e
  40a816:	add    ah,BYTE PTR [esi]
  40a818:	pop    esi
  40a819:	and    dh,BYTE PTR [edx]
  40a81b:	pop    edi
  40a81c:	adc    bl,ah
  40a81e:	cdq    
  40a81f:	rcl    BYTE PTR [edx-0x6c],0x95
  40a823:	stos   BYTE PTR es:[edi],al
  40a824:	(bad)  
  40a825:	outs   dx,DWORD PTR ds:[esi]
  40a826:	lods   al,BYTE PTR ds:[esi]
  40a827:	es jmp 0x23936172
  40a82d:	and    eax,0xa9d6977d
  40a832:	cs (bad) 
  40a835:	jge    0x40a843
  40a837:	call   0xdc2360f6
  40a83c:	stos   BYTE PTR es:[edi],al
  40a83d:	icebp  
  40a83e:	(bad)  
  40a83f:	adc    al,0xb6
  40a841:	mov    dh,0x38
  40a843:	mov    eax,ds:0xa09145cf
  40a848:	ret    0x104e
  40a84b:	in     eax,dx
  40a84c:	leave  
  40a84d:	mov    ch,0xda
  40a84f:	push   ss
  40a850:	pop    esp
  40a851:	scas   al,BYTE PTR es:[edi]
  40a852:	lea    ebp,[esi+0x7707473f]
  40a858:	hlt    
  40a859:	clc    
  40a85a:	adc    eax,0x9b96eb83
  40a85f:	xchg   BYTE PTR [ecx],cl
  40a861:	dec    edi
  40a862:	inc    esi
  40a863:	mov    al,0x8c
  40a865:	pop    ebp
  40a866:	adc    BYTE PTR [ebx],0x75
  40a869:	sbb    bl,0x37
  40a86c:	dec    ebp
  40a86d:	add    BYTE PTR [ebx+esi*2],al
  40a870:	rcl    BYTE PTR [edx+0x3be85438],0x13
  40a877:	or     DWORD PTR [ebx+0x6246685f],ebp
  40a87d:	adc    eax,0xeb61c8fe
  40a882:	fimul  DWORD PTR [ebx-0x5d]
  40a885:	push   ecx
  40a886:	fld    DWORD PTR [edi-0x6f]
  40a889:	loop   0x40a8c6
  40a88b:	nop
  40a88c:	dec    esi
  40a88d:	xor    BYTE PTR [edx],bh
  40a88f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a890:	inc    ebx
  40a891:	int3   
  40a892:	aaa    
  40a893:	imul   eax,DWORD PTR [edi+0x6],0x5d
  40a897:	jmp    0xcfdf5329
  40a89c:	push   ecx
  40a89d:	(bad)  
  40a89e:	adc    BYTE PTR [edx],bl
  40a8a0:	test   DWORD PTR [edx+0x7dcab068],ebp
  40a8a6:	lods   eax,DWORD PTR ds:[esi]
  40a8a7:	es mov ebx,0xaf7bcdff
  40a8ad:	bound  edx,QWORD PTR [ebx]
  40a8af:	popa   
  40a8b0:	sbb    al,0x17
  40a8b2:	rcr    cl,0xea
  40a8b5:	jbe    0x40a8d8
  40a8b7:	sbb    eax,esi
  40a8b9:	inc    esi
  40a8ba:	xor    bl,BYTE PTR [esi]
  40a8bc:	sub    dh,BYTE PTR [edi+edi*1-0x50]
  40a8c0:	sbb    BYTE PTR [ecx-0x51c45d60],0x9c
  40a8c7:	scas   eax,DWORD PTR es:[edi]
  40a8c8:	sbb    BYTE PTR [eax+0x37067d35],0x9b
  40a8cf:	ss fucomip st,st(5)
  40a8d2:	out    dx,al
  40a8d3:	mov    al,0x54
  40a8d5:	mov    ebx,0x1e0a2b85
  40a8da:	cmp    al,0x79
  40a8dc:	push   ecx
  40a8dd:	jl     0x40a88b
  40a8df:	hlt    
  40a8e0:	xchg   edi,eax
  40a8e1:	add    esp,0xbba555e0
  40a8e7:	loop   0x40a8dc
  40a8e9:	fsub   QWORD PTR [edx]
  40a8eb:	pop    ebx
  40a8ec:	cmp    BYTE PTR [esi-0x43c745e1],cl
  40a8f2:	sar    BYTE PTR [esp+esi*8+0x68],1
  40a8f6:	pushf  
  40a8f7:	(bad)  
  40a8f8:	inc    edi
  40a8f9:	or     dh,dh
  40a8fb:	pop    edx
  40a8fc:	aam    0x8c
  40a8fe:	mov    edi,0x2ff3245a
  40a903:	cmp    eax,0xcd1a638f
  40a908:	sbb    esi,DWORD PTR ds:0x68e314e7
  40a90e:	fist   DWORD PTR [edi]
  40a910:	sti    
  40a911:	sbb    dl,BYTE PTR [ebx+ebp*4]
  40a914:	lock add al,0xd0
  40a917:	xor    BYTE PTR [ebx-0x4502194d],0x2e
  40a91e:	lds    ebx,FWORD PTR [ecx-0x444b4186]
  40a924:	sbb    eax,0x8e3b6f56
  40a929:	push   ds
  40a92a:	das    
  40a92b:	in     al,dx
  40a92c:	and    esp,esp
  40a92e:	sub    ebp,DWORD PTR [ebx-0x62]
  40a931:	and    ah,BYTE PTR [edx]
  40a933:	xor    di,WORD PTR [edx-0x20]
  40a937:	loope  0x40a99e
  40a939:	dec    ecx
  40a93a:	and    BYTE PTR [ecx],0xfc
  40a93d:	add    ebx,DWORD PTR [ebx]
  40a93f:	(bad)  
  40a941:	mov    dh,0x9a
  40a943:	sbb    cl,BYTE PTR [esi+eiz*1-0x5b04220f]
  40a94a:	push   ecx
  40a94b:	test   al,0x14
  40a94d:	push   ebp
  40a94e:	and    al,0x5c
  40a950:	adc    eax,0x91736918
  40a955:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a956:	pop    ebx
  40a957:	push   edi
  40a958:	outs   dx,DWORD PTR ds:[esi]
  40a959:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a95a:	test   DWORD PTR [eax-0x6dc343a5],esi
  40a960:	mov    dl,0x29
  40a962:	sbb    bh,dl
  40a964:	fmul   QWORD PTR [edx-0x4]
  40a967:	dec    ebx
  40a968:	ds popa 
  40a96a:	xchg   esp,eax
  40a96b:	in     eax,dx
  40a96c:	jb     0x40a94b
  40a96e:	stos   DWORD PTR es:[edi],eax
  40a96f:	loope  0x40a8fd
  40a971:	in     eax,dx
  40a972:	imul   esp,DWORD PTR [eax+0x41],0x50ba07e8
  40a979:	mov    al,ds:0xba819c8f
  40a97e:	leave  
  40a97f:	xchg   esp,eax
  40a980:	lahf   
  40a981:	push   ss
  40a982:	imul   ecx,DWORD PTR [ebx+0xdd6bbd4],0x16
  40a989:	mov    esp,DWORD PTR [edi+0x54]
  40a98c:	push   ebp
  40a98d:	inc    edi
  40a98e:	ds (bad) 
  40a990:	daa    
  40a991:	cmp    ebp,DWORD PTR [esi-0x47]
  40a994:	xchg   ch,al
  40a996:	adc    eax,0xd2e11163
  40a99b:	and    bh,cl
  40a99d:	es inc ebx
  40a99f:	mov    bl,0x34
  40a9a1:	fdiv   QWORD PTR [edx-0x62764a8b]
  40a9a7:	bound  ebx,QWORD PTR [ebx+0x61]
  40a9aa:	aad    0xc9
  40a9ac:	int3   
  40a9ad:	and    eax,0x7e9d041c
  40a9b2:	aaa    
  40a9b3:	xchg   edi,eax
  40a9b4:	mov    DWORD PTR [eax],esi
  40a9b6:	adc    DWORD PTR [ebx+edx*4+0xb],0xffffffe5
  40a9bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9bc:	push   0x704e3e16
  40a9c1:	xor    al,0x7c
  40a9c3:	sub    BYTE PTR fs:[esi-0x55],bh
  40a9c7:	ins    BYTE PTR es:[edi],dx
  40a9c8:	jnp    0x40aa1d
  40a9ca:	sbb    al,0x5e
  40a9cc:	and    BYTE PTR [edx],al
  40a9ce:	mov    BYTE PTR [esi-0x43],ah
  40a9d1:	loope  0x40aa2b
  40a9d3:	or     BYTE PTR [esi+0x57],dl
  40a9d6:	add    eax,0x8abfb107
  40a9db:	mov    edi,DWORD PTR [ecx-0x2d393655]
  40a9e1:	ja     0x40a9e0
  40a9e3:	or     BYTE PTR [ebx+0x5a834642],ch
  40a9e9:	jge    0x40a9c6
  40a9eb:	fsubr  DWORD PTR [eax-0x3da8bf86]
  40a9f1:	push   ebx
  40a9f2:	lahf   
  40a9f3:	xchg   ecx,eax
  40a9f4:	ficom  WORD PTR [ebx-0x6901e184]
  40a9fa:	push   esp
  40a9fb:	pop    eax
  40a9fc:	mov    cl,0xbc
  40a9fe:	pusha  
  40a9ff:	dec    esi
  40aa00:	cmp    ch,cl
  40aa02:	aad    0x3c
  40aa04:	stc    
  40aa05:	jne    0x40aa59
  40aa07:	mov    ah,0xec
  40aa09:	(bad)  
  40aa0b:	xchg   ecx,eax
  40aa0c:	pushf  
  40aa0d:	(bad)  
  40aa0e:	outs   dx,DWORD PTR ds:[esi]
  40aa0f:	mov    bl,0xb5
  40aa11:	hlt    
  40aa12:	adc    edx,ebx
  40aa14:	ffree  st(6)
  40aa16:	pop    ecx
  40aa17:	inc    esp
  40aa18:	in     al,dx
  40aa19:	in     eax,0x5f
  40aa1b:	ret    0x9195
  40aa1e:	push   ebp
  40aa1f:	push   edi
  40aa20:	cld    
  40aa21:	cmp    al,0x38
  40aa23:	repnz push ebp
  40aa25:	popf   
  40aa26:	pop    ss
  40aa27:	sahf   
  40aa28:	sar    BYTE PTR [edi-0x6961081c],1
  40aa2e:	sbb    dh,BYTE PTR [eax]
  40aa30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa31:	pop    esp
  40aa32:	aaa    
  40aa33:	or     dh,bh
  40aa35:	fxch   st(2)
  40aa37:	sbb    edi,DWORD PTR [ecx+0x4e983bbb]
  40aa3d:	or     dh,0x2f
  40aa40:	scas   eax,DWORD PTR es:[edi]
  40aa41:	pop    edx
  40aa42:	cmp    BYTE PTR [ecx-0xaccc924],ch
  40aa48:	push   ebp
  40aa49:	lods   al,BYTE PTR ds:[esi]
  40aa4a:	daa    
  40aa4b:	(bad)  
  40aa4c:	ror    DWORD PTR [eax-0x5e],cl
  40aa4f:	test   BYTE PTR ds:0x5655fab2,al
  40aa55:	jmp    0xaf83:0x536a54bf
  40aa5c:	push   cs
  40aa5d:	xor    BYTE PTR [ecx+0x40],0xd2
  40aa61:	icebp  
  40aa62:	inc    esi
  40aa63:	add    DWORD PTR [ecx+ecx*8+0x7a63d377],ebp
  40aa6a:	xchg   al,al
  40aa6c:	sub    cl,BYTE PTR [ecx]
  40aa6e:	int3   
  40aa6f:	popa   
  40aa70:	sbb    al,0x96
  40aa72:	sbb    edi,DWORD PTR [edx-0x7c999a58]
  40aa78:	mov    ds:0xb89618e8,eax
  40aa7d:	call   FWORD PTR [ebx]
  40aa7f:	icebp  
  40aa80:	mov    ebx,0xbf982ac7
  40aa85:	sub    BYTE PTR [esi-0x4c8cf42b],dl
  40aa8b:	jb     0x40aaf1
  40aa8d:	out    dx,al
  40aa8e:	test   BYTE PTR [ebx],al
  40aa90:	in     al,dx
  40aa91:	dec    ebp
  40aa92:	adc    BYTE PTR [edi],dl
  40aa94:	mov    esi,0xa66e7c59
  40aa99:	mov    ebx,0x26dd5184
  40aa9e:	mov    ebp,0xbfc49d71
  40aaa3:	fsubr  QWORD PTR [edi+0x6207373e]
  40aaa9:	jno    0x40aac7
  40aaab:	pop    ds
  40aaac:	pop    ds
  40aaad:	cmc    
  40aaae:	popf   
  40aaaf:	jnp    0x40aa62
  40aab1:	test   BYTE PTR [edx-0x6d759916],bh
  40aab7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aab8:	or     eax,0x7abef67f
  40aabd:	sub    DWORD PTR [edx+ecx*8],esi
  40aac0:	dec    edx
  40aac1:	pop    esp
  40aac2:	repnz and bl,BYTE PTR [eax+0x3e]
  40aac6:	test   al,0x80
  40aac8:	loop   0x40aa98
  40aaca:	cmc    
  40aacb:	mov    di,0x3a8e
  40aacf:	jp     0x40ab2d
  40aad1:	inc    esp
  40aad2:	sub    ah,cl
  40aad4:	push   ecx
  40aad5:	xor    eax,0xfce6ea4
  40aada:	xchg   edx,eax
  40aadb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aadc:	out    dx,al
  40aadd:	inc    eax
  40aade:	pusha  
  40aadf:	and    cl,dh
  40aae1:	sbb    DWORD PTR [eax+0x7298343a],esi
  40aae7:	sar    BYTE PTR [ebp-0x5d653476],0x9a
  40aaee:	cmc    
  40aaef:	jl     0x40aaf9
  40aaf1:	test   al,0x89
  40aaf3:	sbb    BYTE PTR [ebx],dl
  40aaf5:	loope  0x40aac5
  40aaf7:	ror    DWORD PTR [ebx],1
  40aaf9:	mov    dl,0xd5
  40aafb:	xor    al,0x9
  40aafd:	stos   DWORD PTR es:[edi],eax
  40aafe:	sbb    eax,0x95d35738
  40ab03:	in     al,dx
  40ab04:	out    dx,al
  40ab05:	mov    DWORD PTR [eax+0x1f],edi
  40ab08:	dec    edx
  40ab09:	bound  ecx,QWORD PTR [esi+0x43]
  40ab0c:	retf   
  40ab0d:	aam    0x67
  40ab0f:	outs   dx,DWORD PTR ds:[esi]
  40ab10:	bswap  edx
  40ab12:	mov    eax,0xd811dcf
  40ab17:	and    DWORD PTR [edx+0x61d6613b],0x15b37bbd
  40ab21:	dec    eax
  40ab22:	jo     0x40ab27
  40ab24:	or     dh,BYTE PTR [ebp+0x1aba0226]
  40ab2a:	ins    BYTE PTR es:[edi],dx
  40ab2b:	div    BYTE PTR [edi]
  40ab2d:	mov    ss:0xe6f29016,al
  40ab33:	jge    0x40aab5
  40ab35:	nop
  40ab36:	in     al,0x46
  40ab38:	imul   ebx,DWORD PTR [ebp-0x5fefecff],0xe
  40ab3f:	into   
  40ab40:	iret   
  40ab41:	retf   
  40ab42:	(bad)  [eax]
  40ab44:	scas   al,BYTE PTR es:[edi]
  40ab45:	fdivr  DWORD PTR [esi]
  40ab47:	mov    edi,esp
  40ab49:	shl    DWORD PTR [ebx],cl
  40ab4b:	pop    esi
  40ab4c:	sbb    esi,DWORD PTR ds:0xa69daaa7
  40ab52:	sub    eax,0x746cf7c7
  40ab57:	add    eax,0xe6d05450
  40ab5c:	repnz ins DWORD PTR es:[edi],dx
  40ab5e:	inc    esp
  40ab5f:	pop    ebp
  40ab60:	leave  
  40ab61:	adc    bh,bh
  40ab63:	loope  0x40ab5b
  40ab65:	inc    edi
  40ab66:	push   esi
  40ab67:	fcom   DWORD PTR [ebx-0x10]
  40ab6a:	xor    esp,DWORD PTR [ebx]
  40ab6c:	jl     0x40abe7
  40ab6e:	imul   edx,DWORD PTR [esi+0x2f6033c6],0xffffff96
  40ab75:	clc    
  40ab76:	pop    ss
  40ab77:	cmc    
  40ab78:	push   eax
  40ab79:	xlat   BYTE PTR ds:[ebx]
  40ab7a:	jmp    0xc552a47f
  40ab7f:	jle    0x40aba5
  40ab81:	mov    ebp,0x1e6b6d84
  40ab86:	out    dx,eax
  40ab87:	adc    eax,0x307eade4
  40ab8c:	xchg   esp,eax
  40ab8d:	mov    ah,BYTE PTR [ebx-0x467599db]
  40ab93:	test   DWORD PTR [esi],eax
  40ab95:	jecxz  0x40abdf
  40ab97:	dec    esp
  40ab98:	dec    ebp
  40ab99:	xlat   BYTE PTR ds:[ebx]
  40ab9a:	sub    edi,DWORD PTR [ecx-0x3e]
  40ab9d:	sbb    ch,BYTE PTR [edx+0x1805bc0f]
  40aba3:	inc    esi
  40aba4:	xchg   edi,eax
  40aba5:	xlat   BYTE PTR ds:[ebx]
  40aba6:	rol    ebp,1
  40aba8:	data16 test al,0xac
  40abab:	jbe    0x40ab79
  40abad:	ja     0x40ab97
  40abaf:	test   BYTE PTR [esi-0x77b35538],bh
  40abb5:	mov    cl,0xcf
  40abb7:	and    BYTE PTR [ebp-0x60],ch
  40abba:	xor    cl,ch
  40abbc:	hlt    
  40abbd:	jno    0x40abbd
  40abbf:	and    al,0xf5
  40abc1:	mov    ebx,0xaa955dc5
  40abc6:	and    BYTE PTR [edi-0x489ff44c],al
  40abcc:	or     DWORD PTR [ebx],ebx
  40abce:	push   ecx
  40abcf:	int3   
  40abd0:	loopne 0x40ab75
  40abd2:	sub    esi,DWORD PTR [eax-0x52]
  40abd5:	jge    0x40ab7f
  40abd7:	fadd   st,st(0)
  40abd9:	pop    esi
  40abda:	out    0x58,eax
  40abdc:	stc    
  40abdd:	xchg   dh,dl
  40abdf:	ja     0x40abc4
  40abe1:	sub    DWORD PTR [esi-0x7b7bbaab],edi
  40abe7:	jl     0x40ab81
  40abe9:	sub    al,0x8
  40abeb:	fdiv   QWORD PTR [eax+0x3c]
  40abee:	push   cs
  40abef:	dec    edx
  40abf0:	cwde   
  40abf1:	pop    ebp
  40abf2:	xchg   ah,dl
  40abf4:	adc    BYTE PTR [edi],ch
  40abf6:	in     eax,dx
  40abf7:	xlat   BYTE PTR ds:[ebx]
  40abf8:	sub    eax,DWORD PTR [ebp+0x55d4e67d]
  40abfe:	int    0xe2
  40ac00:	enter  0xc15e,0xab
  40ac04:	sbb    al,0xa
  40ac06:	not    DWORD PTR [ebp+0x2c9f3b13]
  40ac0c:	cmp    ebp,DWORD PTR [eax]
  40ac0e:	cli    
  40ac0f:	push   ebx
  40ac10:	enter  0xd4d8,0x2e
  40ac14:	cmp    DWORD PTR [ecx+0x16ec5e51],ecx
  40ac1a:	pop    ds
  40ac1b:	js     0x40ac5a
  40ac1d:	and    ebp,edi
  40ac1f:	int    0x8d
  40ac21:	inc    ebx
  40ac22:	sub    DWORD PTR [edi-0xc],edx
  40ac25:	mov    ecx,0x92f445d7
  40ac2a:	cdq    
  40ac2b:	stc    
  40ac2c:	std    
  40ac2d:	mov    ebx,0x1f04d2
  40ac32:	dec    ecx
  40ac33:	inc    esi
  40ac34:	aas    
  40ac35:	sub    ah,BYTE PTR ds:[edx-0x1b]
  40ac39:	test   eax,0xc0783bb8
  40ac3e:	xchg   ebx,eax
  40ac3f:	mov    dh,0x2d
  40ac41:	mov    al,ds:0x9a062f2f
  40ac46:	pop    edx
  40ac47:	pop    edx
  40ac48:	fs xor eax,0x36330e10
  40ac4e:	pop    esi
  40ac4f:	out    0xba,al
  40ac51:	dec    ebx
  40ac52:	fbld   TBYTE PTR [eax+0x5e8a79d4]
  40ac58:	and    ebp,DWORD PTR [ebx]
  40ac5a:	icebp  
  40ac5b:	inc    BYTE PTR [ecx-0x1da40a13]
  40ac61:	ret    0x88c0
  40ac64:	mov    bh,0x3b
  40ac66:	jg     0x40ac46
  40ac68:	xor    DWORD PTR [ebx-0x78e086eb],eax
  40ac6e:	sub    dh,dh
  40ac70:	mov    ch,BYTE PTR gs:[ebp+0x32664c77]
  40ac77:	push   ss
  40ac78:	adc    BYTE PTR [esi-0x7f4fdd2],ah
  40ac7e:	sub    DWORD PTR [esi-0x39],edi
  40ac81:	mov    eax,ds:0x3168fde3
  40ac86:	out    0x90,al
  40ac88:	adc    ebp,edx
  40ac8a:	xor    bl,bl
  40ac8c:	call   0x48fc441b
  40ac91:	sbb    BYTE PTR [ecx],bh
  40ac93:	dec    ebx
  40ac94:	xor    dl,bh
  40ac96:	sbb    al,ah
  40ac98:	les    edx,FWORD PTR [esi+0x36]
  40ac9b:	addr16 stc 
  40ac9d:	jmp    0xe0ba232d
  40aca2:	inc    esi
  40aca3:	out    dx,eax
  40aca4:	out    0xd2,al
  40aca6:	sub    ebp,esp
  40aca8:	out    dx,al
  40aca9:	test   al,0xdc
  40acab:	pop    ss
  40acac:	inc    ecx
  40acad:	rcr    BYTE PTR [ecx],cl
  40acaf:	adc    DWORD PTR [eax+0x67b4907],0x61
  40acb6:	mov    ds:0x1f0192fb,al
  40acbb:	and    al,0x1e
  40acbd:	icebp  
  40acbe:	arpl   di,dx
  40acc0:	(bad)  
  40acc1:	lock cmp al,0x8a
  40acc4:	mov    ch,0x20
  40acc6:	jg     0x40ad06
  40acc8:	cli    
  40acc9:	das    
  40acca:	pusha  
  40accb:	dec    ebp
  40accc:	cmp    DWORD PTR [ecx+0x747a02d5],esi
  40acd2:	dec    esi
  40acd3:	into   
  40acd4:	outs   dx,BYTE PTR ds:[esi]
  40acd5:	push   edx
  40acd6:	pushf  
  40acd7:	lock jl 0x40acf3
  40acda:	mov    ebx,0x871b87d8
  40acdf:	xchg   DWORD PTR [esi-0x1c],edi
  40ace2:	mov    ecx,0xe219f267
  40ace7:	or     eax,0xdbc205f7
  40aced:	mov    bh,0x45
  40acef:	leave  
  40acf0:	xchg   esp,eax
  40acf1:	sbb    edx,0xffffff8c
  40acf4:	sbb    esi,ecx
  40acf6:	(bad)  
  40acf7:	jno    0x40acd4
  40acf9:	push   ebx
  40acfa:	mov    ds,WORD PTR [edi]
  40acfc:	retf   
  40acfd:	dec    esp
  40acfe:	loopne 0x40ad60
  40ad00:	sub    eax,0x97ca0cbc
  40ad05:	mov    esp,0x95468bf8
  40ad0a:	outs   dx,DWORD PTR ds:[esi]
  40ad0b:	addr16 out dx,eax
  40ad0d:	add    bh,BYTE PTR [edx]
  40ad0f:	std    
  40ad10:	and    DWORD PTR [eax-0x37],esi
  40ad13:	ja     0x40acea
  40ad15:	jecxz  0x40aca9
  40ad17:	and    esi,edi
  40ad19:	inc    ebp
  40ad1a:	push   ds
  40ad1b:	stos   DWORD PTR es:[edi],eax
  40ad1c:	push   edx
  40ad1d:	rol    DWORD PTR [eax-0x76],cl
  40ad20:	rol    DWORD PTR [ecx],0x5c
  40ad23:	xor    cl,cl
  40ad25:	(bad)  
  40ad26:	jmp    0x40ad5a
  40ad28:	push   esi
  40ad29:	(bad)  
  40ad2a:	mov    ah,0x7
  40ad2c:	jmp    0x781e:0xf52ea84f
  40ad33:	inc    ebx
  40ad34:	add    esi,DWORD PTR [edi]
  40ad36:	xor    DWORD PTR [ebx],esi
  40ad38:	out    0x59,eax
  40ad3a:	aaa    
  40ad3b:	and    BYTE PTR [edx],0xca
  40ad3e:	jl     0x40ad38
  40ad40:	cmp    al,cl
  40ad42:	lea    ebp,[edi-0x31f676e8]
  40ad48:	cmp    BYTE PTR [eax-0x7179ac7e],0xe0
  40ad4f:	and    DWORD PTR [edi+ebp*1-0x11e03774],ebp
  40ad56:	sub    BYTE PTR [ecx],ah
  40ad58:	add    edi,DWORD PTR [edx+0x7b]
  40ad5b:	ins    DWORD PTR es:[edi],dx
  40ad5c:	lock jmp 0x40ace8
  40ad5f:	test   BYTE PTR [edx+0x7e714b79],al
  40ad65:	mov    BYTE PTR [ecx],dh
  40ad67:	push   eax
  40ad68:	stos   BYTE PTR es:[edi],al
  40ad69:	jmp    0x40ade5
  40ad6b:	nop
  40ad6c:	daa    
  40ad6d:	(bad)  
  40ad6e:	in     eax,0x54
  40ad70:	ins    BYTE PTR es:[edi],dx
  40ad71:	sahf   
  40ad72:	div    BYTE PTR [esi+0x614ab52a]
  40ad78:	dec    edx
  40ad79:	push   0x7e
  40ad7b:	add    cl,BYTE PTR [ebx-0x566718bb]
  40ad81:	out    dx,al
  40ad82:	sbb    DWORD PTR [ebp-0x1],edi
  40ad85:	jmp    0xebff87b9
  40ad8a:	pop    ecx
  40ad8b:	std    
  40ad8c:	jbe    0x40ad70
  40ad8e:	dec    ebx
  40ad8f:	add    bl,BYTE PTR [ecx-0x6dab1d5]
  40ad95:	inc    esi
  40ad96:	push   ds
  40ad97:	xchg   esi,eax
  40ad98:	out    0xd1,al
  40ad9a:	xor    BYTE PTR [ebx-0x15],dl
  40ad9d:	int3   
  40ad9e:	pop    esp
  40ad9f:	sbb    cl,dl
  40ada1:	jne    0x40ae19
  40ada3:	pop    ss
  40ada4:	in     eax,dx
  40ada5:	mov    ebp,ebx
  40ada7:	loop   0x40ad78
  40ada9:	adc    eax,0x11dd0b3f
  40adae:	out    0x80,al
  40adb0:	adc    al,0x18
  40adb2:	adc    eax,0x527b61d3
  40adb7:	les    ecx,FWORD PTR [ecx]
  40adb9:	push   ds
  40adba:	mov    ah,BYTE PTR [eax-0x7d]
  40adbd:	imul   esp,edi,0xffffffce
  40adc0:	dec    esp
  40adc1:	sar    bh,cl
  40adc3:	or     BYTE PTR [ebx-0x7df441ff],dh
  40adc9:	dec    edx
  40adca:	mov    eax,ebp
  40adcc:	xchg   esp,eax
  40adcd:	stc    
  40adce:	ds inc ebp
  40add0:	mov    dh,0x3b
  40add2:	inc    eax
  40add3:	int    0xa3
  40add5:	xor    dh,BYTE PTR [ebx+0x40]
  40add8:	push   edi
  40add9:	fs mov bl,0xff
  40addc:	dec    edi
  40addd:	stos   BYTE PTR es:[edi],al
  40adde:	loop   0x40ae5d
  40ade0:	mov    esi,0xc153543b
  40ade5:	retf   
  40ade6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ade7:	mov    eax,ds:0x1c7d64f4
  40adec:	out    0xda,al
  40adee:	xchg   ebx,eax
  40adef:	inc    esi
  40adf0:	call   0x4c9b:0x9f829253
  40adf7:	mov    al,ds:0xaef1137
  40adfc:	adc    esp,0x71
  40adff:	sub    ah,0x7f
  40ae02:	popa   
  40ae03:	mov    bl,0xdc
  40ae05:	ss dec esp
  40ae07:	ins    DWORD PTR es:[edi],dx
  40ae08:	cmc    
  40ae09:	lea    esi,[eax-0x42]
  40ae0c:	jae    0x40ae6b
  40ae0e:	mov    esi,DWORD PTR [edx+0x4a]
  40ae11:	sub    eax,DWORD PTR [edx+0x66]
  40ae14:	xor    ecx,edi
  40ae16:	stc    
  40ae17:	in     eax,dx
  40ae18:	pop    edx
  40ae19:	mov    al,ds:0xd39008e7
  40ae1e:	(bad)  
  40ae1f:	xchg   edx,eax
  40ae20:	aam    0x32
  40ae22:	ror    DWORD PTR [esi-0x64],cl
  40ae25:	mov    al,ds:0x10af2489
  40ae2a:	pop    es
  40ae2b:	cs adc al,0xa1
  40ae2e:	or     cl,BYTE PTR [ebp+0x619755e7]
  40ae34:	jl     0x40ae9e
  40ae36:	xor    dl,dl
  40ae38:	jne    0x40ae7c
  40ae3a:	aaa    
  40ae3b:	inc    esp
  40ae3c:	inc    eax
  40ae3d:	jmp    0x14e1:0x27299b4b
  40ae44:	add    DWORD PTR [esi+edi*1-0x3f1134cb],ebx
  40ae4b:	dec    edx
  40ae4c:	iret   
  40ae4d:	pop    ss
  40ae4e:	sub    DWORD PTR [eax+0x446760c9],edx
  40ae54:	into   
  40ae55:	jmp    0x40ae2d
  40ae57:	fdivr  QWORD PTR [edx-0x4070a76b]
  40ae5d:	jmp    0x5390:0xdb0331cc
  40ae64:	and    DWORD PTR [edx],edx
  40ae66:	xchg   ecx,eax
  40ae67:	into   
  40ae68:	int3   
  40ae69:	int3   
  40ae6a:	mov    ebp,0xfbab2d13
  40ae6f:	push   ds
  40ae70:	cmc    
  40ae71:	mov    ds:0x4c87788e,eax
  40ae76:	das    
  40ae77:	(bad)  
  40ae78:	jo     0x40aec1
  40ae7a:	or     eax,0xfe684bec
  40ae7f:	icebp  
  40ae80:	pushf  
  40ae81:	adc    al,BYTE PTR [edx]
  40ae83:	dec    ebx
  40ae84:	jmp    0x6a8a1961
  40ae89:	mov    ds:0xec60ef47,al
  40ae8e:	cmp    edi,ebp
  40ae90:	shl    BYTE PTR [ebp+0x2f5df472],0x4b
  40ae97:	xor    BYTE PTR [eax],cl
  40ae99:	push   edx
  40ae9a:	xchg   DWORD PTR [ebx+ebp*2],edi
  40ae9d:	cmp    al,0x2d
  40ae9f:	adc    BYTE PTR [ebp-0x9ef86e3],al
  40aea5:	lea    esi,[ebx]
  40aea7:	adc    BYTE PTR [esp+eiz*2+0x27101af3],bl
  40aeae:	popf   
  40aeaf:	adc    ebp,0xd59db60c
  40aeb5:	scas   al,BYTE PTR es:[edi]
  40aeb6:	ret    
  40aeb7:	dec    edx
  40aeb8:	(bad)  
  40aeb9:	icebp  
  40aeba:	imul   esp,DWORD PTR ds:0xb099e47f,0x40
  40aec1:	sbb    eax,0x744d415d
  40aec6:	or     eax,0x5a52068b
  40aecb:	or     al,0x8f
  40aecd:	test   DWORD PTR [edi-0xf9b7ac3],ebx
  40aed3:	mov    cl,0xe4
  40aed5:	push   0x48c883ab
  40aeda:	(bad)  
  40aedb:	xchg   esp,eax
  40aedc:	ret    0x15fa
  40aedf:	nop    DWORD PTR [ebx+0x47]
  40aee3:	dec    edi
  40aee4:	(bad)
  40aee8:	mov    edi,0xc7ffe819
  40aeed:	fs ins BYTE PTR es:[edi],dx
  40aeef:	sbb    BYTE PTR [edi],bh
  40aef1:	xchg   ebp,eax
  40aef2:	mov    ecx,0x6a95f152
  40aef7:	xchg   edx,eax
  40aef9:	dec    edx
  40aefa:	adc    ch,BYTE PTR [ebx-0x44]
  40aefd:	jnp    0x40ae82
  40aeff:	mov    DWORD PTR [ecx+0x6f],ecx
  40af02:	aad    0xc2
  40af04:	sbb    al,0xbb
  40af06:	cmp    ebx,edi
  40af08:	aas    
  40af09:	pop    DWORD PTR [ebp+0x51ebcd1b]
  40af0f:	adc    BYTE PTR [edi],ch
  40af11:	arpl   WORD PTR [edx+ebp*8],bp
  40af14:	fwait
  40af15:	sub    ebp,esi
  40af17:	mov    bh,0x9b
  40af19:	ja     0x40af25
  40af1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af1c:	jno    0x40af3a
  40af1e:	and    BYTE PTR [esi+0x67],ah
  40af21:	sahf   
  40af22:	add    DWORD PTR [edx-0x45],ebx
  40af25:	scas   eax,DWORD PTR es:[edi]
  40af26:	mov    ecx,0x98fbd7c4
  40af2c:	jne    0x40af08
  40af2e:	inc    esi
  40af2f:	pop    es
  40af30:	pop    esi
  40af31:	stos   BYTE PTR es:[edi],al
  40af32:	sbb    dh,0x4f
  40af35:	in     al,0x60
  40af37:	xlat   BYTE PTR ds:[ebx]
  40af38:	fcomp  DWORD PTR [ecx+0x77]
  40af3b:	ja     0x40af20
  40af3d:	int    0xaa
  40af3f:	fadd   DWORD PTR [edi-0x79]
  40af42:	xchg   esp,eax
  40af43:	jmp    0x40aedd
  40af45:	or     dh,BYTE PTR [eax-0x16]
  40af48:	cdq    
  40af49:	or     al,0xd3
  40af4b:	or     DWORD PTR [esi+0x7f],0x96a08dd
  40af52:	repz jns 0x40af36
  40af55:	inc    edx
  40af56:	pop    esi
  40af57:	das    
  40af58:	lods   eax,DWORD PTR ds:[esi]
  40af59:	or     al,0xe9
  40af5b:	inc    esp
  40af5c:	and    DWORD PTR [edx-0x6d],edx
  40af5f:	sbb    BYTE PTR [ebp+0x69],bh
  40af62:	call   0x90f:0xfe90617b
  40af69:	cmp    esi,DWORD PTR [esi]
  40af6b:	add    DWORD PTR [ecx-0x5912dc3],ecx
  40af71:	sub    ebx,ecx
  40af73:	test   BYTE PTR [edi+ecx*2+0x34],al
  40af77:	pop    esi
  40af78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af79:	xchg   DWORD PTR [esi-0x6c8d9d12],ebp
  40af7f:	daa    
  40af80:	out    0x4f,eax
  40af82:	cmc    
  40af83:	xchg   ebp,eax
  40af84:	aad    0x77
  40af86:	and    edx,esi
  40af88:	xor    edi,DWORD PTR [ecx-0x1c8f27dd]
  40af8e:	adc    DWORD PTR [edx-0x4a7e23d0],ebx
  40af94:	je     0x40af17
  40af96:	push   ecx
  40af97:	pop    edi
  40af98:	xchg   BYTE PTR [ecx],dl
  40af9a:	psubusb mm4,QWORD PTR [edx]
  40af9d:	push   cs
  40af9e:	cld    
  40af9f:	mov    ch,0xbb
  40afa1:	push   ecx
  40afa2:	mov    esi,0xe1a11dc9
  40afa7:	daa    
  40afa8:	lea    ecx,[ebx+eiz*2+0x31]
  40afac:	mov    edi,0xedafa5b6
  40afb1:	lock out dx,eax
  40afb3:	and    al,0xb2
  40afb5:	add    dh,BYTE PTR [ebp+0x6fd13b1c]
  40afbb:	dec    edi
  40afbc:	fwait
  40afbd:	in     eax,dx
  40afbe:	mov    ecx,0xbca99c2a
  40afc3:	cli    
  40afc4:	jo     0x40af4b
  40afc6:	out    dx,al
  40afc7:	cli    
  40afc8:	ret    
  40afc9:	push   esi
  40afca:	inc    ebx
  40afcb:	ins    BYTE PTR es:[edi],dx
  40afcc:	jnp    0x40b017
  40afce:	cmp    al,BYTE PTR [esi+0x70535c0a]
  40afd4:	lods   eax,DWORD PTR ds:[esi]
  40afd5:	xor    al,BYTE PTR [edi+0x79f6e0d0]
  40afdb:	inc    esp
  40afdc:	or     al,0x1a
  40afde:	xchg   ebp,eax
  40afdf:	in     al,0xa
  40afe1:	scas   al,BYTE PTR es:[edi]
  40afe2:	cmp    ebx,DWORD PTR [ebp+0x4e]
  40afe5:	and    BYTE PTR [eax+ecx*8+0x6a],dh
  40afe9:	sbb    BYTE PTR [ecx-0x7e],al
  40afec:	lds    edi,FWORD PTR [ebx+0x44]
  40afef:	or     eax,0xdf4f3e33
  40aff4:	das    
  40aff5:	mov    eax,0xc3407127
  40affa:	int    0xf9
  40affc:	bnd jle 0x40afc8
  40afff:	shr    BYTE PTR [ebx+eax*4],1
  40b002:	sbb    eax,0xc77cd9aa
  40b007:	in     eax,0xc9
  40b009:	mov    al,0x57
  40b00b:	xchg   esp,eax
  40b00c:	adc    bl,ch
  40b00e:	test   BYTE PTR [ecx],bl
  40b010:	xlat   BYTE PTR ds:[ebx]
  40b011:	jo     0x40afac
  40b013:	loopne 0x40b089
  40b015:	imul   edx,DWORD PTR [edi-0x26],0x8e427822
  40b01c:	outs   dx,DWORD PTR ds:[esi]
  40b01d:	push   esi
  40b01e:	lock fwait
  40b020:	sub    DWORD PTR [edx-0x3b9d7bdf],esi
  40b026:	mov    ecx,0x377d8281
  40b02b:	clc    
  40b02c:	jmp    0x40b034
  40b02e:	cmp    ebx,DWORD PTR [eax]
  40b030:	in     eax,0x82
  40b032:	repz scas al,BYTE PTR es:[edi]
  40b034:	ja     0x40b08a
  40b036:	cmp    ah,BYTE PTR es:[eax+ecx*4-0x30]
  40b03b:	hlt    
  40b03c:	sbb    edx,esi
  40b03e:	test   al,dh
  40b040:	dec    ecx
  40b041:	das    
  40b042:	pop    edi
  40b043:	into   
  40b044:	imul   ecx,DWORD PTR [ecx+0x4968206a],0xffffffed
  40b04b:	hlt    
  40b04c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b04d:	lea    esi,[ecx+0x44]
  40b050:	add    BYTE PTR [ebp-0x2a5c4da4],ch
  40b056:	jnp    0x40b044
  40b058:	jo     0x40b0cb
  40b05a:	mov    WORD PTR [ecx-0x3d],ds
  40b05d:	jge    0x40b08b
  40b05f:	inc    esp
  40b060:	retf   0x3da0
  40b063:	and    bh,BYTE PTR [ebx+0x4a]
  40b066:	mov    edi,0x3e6127d5
  40b06b:	pop    eax
  40b06c:	and    eax,0x996fcd33
  40b071:	outs   dx,DWORD PTR ds:[esi]
  40b072:	lods   al,BYTE PTR ds:[esi]
  40b073:	repnz inc ebx
  40b075:	ja     0x40b06b
  40b077:	mov    al,bl
  40b079:	push   esi
  40b07a:	inc    edi
  40b07b:	imul   eax,DWORD PTR [edx+edx*8+0x67357a18],0x2b
  40b083:	aad    0x1e
  40b085:	retf   
  40b086:	dec    esi
  40b087:	cmp    edi,0xc7d2c15
  40b08d:	pop    edi
  40b08e:	xor    edx,DWORD PTR [edi+0x18]
  40b091:	jno    0x40b0fc
  40b093:	out    dx,al
  40b094:	(bad)  
  40b095:	mov    bl,0x40
  40b097:	ds popa 
  40b099:	popa   
  40b09a:	pop    ecx
  40b09b:	push   ecx
  40b09c:	fldenv [eax]
  40b09e:	out    0xde,al
  40b0a0:	stos   BYTE PTR es:[edi],al
  40b0a1:	dec    edx
  40b0a2:	pop    ebp
  40b0a3:	jge    0x40b065
  40b0a5:	fsubr  DWORD PTR [esi]
  40b0a7:	test   BYTE PTR ds:0x12af1487,bh
  40b0ad:	xchg   edx,eax
  40b0ae:	xchg   ebx,eax
  40b0af:	mov    eax,0x5e62d296
  40b0b4:	fdivr  st,st(0)
  40b0b6:	(bad)  
  40b0b7:	ds cbw 
  40b0ba:	(bad)  
  40b0bb:	cmc    
  40b0bc:	xchg   edx,eax
  40b0bd:	push   esp
  40b0be:	cmp    dl,BYTE PTR [edi-0x1d9fff10]
  40b0c4:	loopne 0x40b0cd
  40b0c6:	loopne 0x40b0ba
  40b0c8:	pop    eax
  40b0c9:	sbb    dl,bh
  40b0cb:	add    BYTE PTR [ecx+0x21],cl
  40b0ce:	pusha  
  40b0cf:	imul   edi,DWORD PTR [esp+eax*4+0x24149644],0xffffffd4
  40b0d7:	loop   0x40b0b9
  40b0d9:	pop    ebx
  40b0da:	add    DWORD PTR [eax-0xb822965],edx
  40b0e0:	pop    ecx
  40b0e1:	and    BYTE PTR [esi+ebp*1-0x46ae3299],ch
  40b0e8:	pop    ds
  40b0e9:	mov    esi,0x859cfc6a
  40b0ee:	lods   eax,DWORD PTR ds:[esi]
  40b0ef:	push   0x4546ef7
  40b0f4:	push   esi
  40b0f5:	(bad)
  40b0f8:	shl    BYTE PTR [ecx],cl
  40b0fa:	push   cs
  40b0fb:	(bad)  
  40b0fc:	aas    
  40b0fd:	mov    ch,0x60
  40b0ff:	xchg   edx,eax
  40b100:	aas    
  40b101:	(bad)  
  40b102:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b103:	test   eax,0x62ccb160
  40b108:	and    edx,eax
  40b10a:	pop    eax
  40b10b:	iret   
  40b10c:	and    ah,bl
  40b10e:	loopne 0x40b103
  40b110:	jne    0x40b13e
  40b112:	mov    bl,0x6b
  40b114:	inc    edx
  40b115:	sahf   
  40b116:	mov    edx,0xc7a7df96
  40b11b:	jge    0x40b170
  40b11d:	cdq    
  40b11e:	xchg   edi,eax
  40b11f:	mov    al,0x36
  40b121:	push   ebx
  40b122:	xchg   esp,eax
  40b123:	neg    BYTE PTR [esi]
  40b125:	cmp    bh,al
  40b127:	aam    0x8f
  40b129:	les    ebp,FWORD PTR [ebp+0x1e]
  40b12c:	std    
  40b12d:	inc    esi
  40b12e:	mov    cl,0x8f
  40b130:	xchg   edx,eax
  40b131:	dec    edx
  40b132:	mov    esi,0xa111306f
  40b137:	add    al,0x58
  40b139:	ins    BYTE PTR es:[edi],dx
  40b13a:	adc    DWORD PTR [edi-0xf],ecx
  40b13d:	mov    ah,0x9f
  40b13f:	hlt    
  40b140:	popa   
  40b141:	cdq    
  40b142:	stos   DWORD PTR es:[edi],eax
  40b143:	xor    dl,ah
  40b145:	xchg   edi,eax
  40b146:	jne    0x40b1c7
  40b148:	push   0xabce188d
  40b14d:	and    eax,0xca2075d0
  40b152:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b153:	setle  BYTE PTR [edi]
  40b156:	push   ebp
  40b157:	lods   eax,DWORD PTR ds:[esi]
  40b158:	fnstenv [esp+eax*1+0x78393611]
  40b15f:	add    al,0xd1
  40b161:	outs   dx,BYTE PTR ds:[esi]
  40b162:	pop    esi
  40b163:	sub    BYTE PTR [ebx+esi*2-0x26],0xa7
  40b168:	mov    edi,0x19ff9235
  40b16d:	push   ebp
  40b16e:	(bad)  
  40b16f:	pop    edi
  40b170:	jo     0x40b0f9
  40b172:	bound  ecx,QWORD PTR [eax]
  40b174:	sub    eax,DWORD PTR [edi]
  40b176:	(bad)  
  40b177:	repz popa 
  40b179:	test   ebp,esp
  40b17b:	push   ebx
  40b17c:	pop    ds
  40b17d:	shr    dl,cl
  40b17f:	inc    edx
  40b180:	add    eax,0xe6c727fb
  40b185:	ficom  DWORD PTR [edi-0x49]
  40b188:	aaa    
  40b189:	cdq    
  40b18a:	in     eax,dx
  40b18b:	ror    BYTE PTR [eax+0x77fd769d],1
  40b191:	xlat   BYTE PTR ds:[ebx]
  40b192:	mov    ch,0x40
  40b194:	cli    
  40b195:	ret    0xc135
  40b198:	push   ecx
  40b199:	adc    ebx,ecx
  40b19b:	push   ebp
  40b19c:	xor    DWORD PTR [edi+edx*8+0x86ce565],edx
  40b1a3:	loop   0x40b128
  40b1a5:	ins    BYTE PTR es:[edi],dx
  40b1a6:	and    DWORD PTR [ebx+0x37d167de],esi
  40b1ac:	jo     0x40b17d
  40b1ae:	add    edi,DWORD PTR [edx+edi*8]
  40b1b1:	pushf  
  40b1b2:	test   DWORD PTR cs:[eax],0x517e0715
  40b1b9:	mov    al,0x49
  40b1bb:	jne    0x40b1b5
  40b1bd:	push   eax
  40b1be:	int3   
  40b1bf:	(bad)  
  40b1c0:	mov    ecx,0x69db2323
  40b1c5:	jp     0x40b174
  40b1c7:	hlt    
  40b1c8:	aam    0x46
  40b1ca:	push   edi
  40b1cb:	mov    esi,0xf36ba728
  40b1d0:	push   ebx
  40b1d1:	and    al,0xa4
  40b1d3:	cld    
  40b1d4:	adc    BYTE PTR [edi],bh
  40b1d6:	xor    edx,DWORD PTR [edx-0x404c6e65]
  40b1dc:	jl     0x40b180
  40b1de:	fistp  DWORD PTR [ecx]
  40b1e0:	xchg   esi,eax
  40b1e1:	or     BYTE PTR [esi+esi*1],0x92
  40b1e5:	out    dx,al
  40b1e6:	inc    BYTE PTR [ebp+ebx*4-0x3409eb73]
  40b1ed:	dec    edi
  40b1ee:	call   esi
  40b1f0:	push   ebx
  40b1f1:	clc    
  40b1f2:	bswap  edx
  40b1f4:	ja     0x40b1a5
  40b1f6:	ins    BYTE PTR es:[edi],dx
  40b1f7:	sbb    ch,BYTE PTR [edx+0x33]
  40b1fa:	popf   
  40b1fb:	fld    DWORD PTR [esi]
  40b1fd:	stos   BYTE PTR es:[edi],al
  40b1fe:	push   cs
  40b1ff:	cwde   
  40b200:	jmp    0x40b18d
  40b202:	cvttps2pi mm2,xmm3
  40b205:	cmc    
  40b206:	inc    ebx
  40b207:	adc    BYTE PTR [eax-0x2a],ch
  40b20a:	cmc    
  40b20b:	add    ebx,DWORD PTR [eax+0x114b698d]
  40b211:	rcr    ecx,cl
  40b213:	jne    0x40b260
  40b215:	test   al,0x23
  40b217:	es sbb al,0xc3
  40b21a:	push   esp
  40b21b:	push   eax
  40b21c:	outs   dx,BYTE PTR ds:[esi]
  40b21d:	cmp    al,0xfb
  40b21f:	jb     0x40b228
  40b221:	cmp    DWORD PTR [eax],0xffffffa6
  40b224:	fimul  WORD PTR [edi+0x8b87d]
  40b22a:	(bad)  
  40b22b:	aas    
  40b22c:	mov    edx,0x77d36cc8
  40b231:	sub    BYTE PTR [esi+0x71d0e4b9],ch
  40b237:	es into 
  40b239:	mov    ebp,0x420ee08f
  40b23e:	push   esi
  40b23f:	fmul   DWORD PTR ds:[edx-0x64152cd6]
  40b246:	test   BYTE PTR [eax],0x81
  40b249:	(bad)  
  40b24a:	ins    BYTE PTR es:[edi],dx
  40b24b:	aaa    
  40b24c:	fiadd  DWORD PTR [edi-0x62f31f5c]
  40b252:	or     dl,BYTE PTR [esi+edx*2-0x6a]
  40b256:	cld    
  40b257:	loop   0x40b264
  40b259:	mov    edi,0x9ea4081a
  40b25e:	rcr    BYTE PTR ds:0x1e2bcfc1,1
  40b264:	adc    BYTE PTR [ebx-0x392f5f17],ch
  40b26a:	lock push esp
  40b26c:	lahf   
  40b26d:	ret    0x8557
  40b270:	xor    DWORD PTR [ebx],0x6c632249
  40b276:	jbe    0x40b26d
  40b278:	je     0x40b248
  40b27a:	xchg   BYTE PTR [eax-0x211278ae],cl
  40b280:	inc    esp
  40b281:	loope  0x40b20d
  40b283:	aas    
  40b284:	mov    al,ds:0xc284aa1a
  40b289:	and    BYTE PTR [esi],ah
  40b28b:	leave  
  40b28c:	mov    gs,WORD PTR [ecx-0x3eb90843]
  40b292:	daa    
  40b293:	sub    edx,esi
  40b295:	shr    DWORD PTR [edx+esi*4+0x24],0xb4
  40b29a:	mov    bh,0xe
  40b29c:	mov    ds:0xc681f7be,al
  40b2a1:	sub    al,0x68
  40b2a3:	mov    dh,0xac
  40b2a5:	push   ebp
  40b2a6:	sbb    esi,ebx
  40b2a8:	xchg   ebp,eax
  40b2a9:	rcl    BYTE PTR [ecx+0x13],cl
  40b2ac:	push   ss
  40b2ad:	xchg   esi,eax
  40b2ae:	mov    al,0x73
  40b2b0:	jbe    0x40b30a
  40b2b2:	adc    edi,DWORD PTR [esi+0x54]
  40b2b5:	mov    ds:0x31092c15,al
  40b2ba:	icebp  
  40b2bb:	iret   
  40b2bc:	cmp    al,0xd1
  40b2be:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40b2c0:	loope  0x40b253
  40b2c2:	ret    0x8fe2
  40b2c5:	aas    
  40b2c6:	jno    0x40b32d
  40b2c8:	sbb    al,bl
  40b2ca:	stc    
  40b2cb:	outs   dx,DWORD PTR ds:[esi]
  40b2cc:	adc    DWORD PTR [ebp-0x785d7cfa],ebx
  40b2d2:	cld    
  40b2d3:	mov    esi,gs
  40b2d5:	jp     0x40b28d
  40b2d7:	leave  
  40b2d8:	jg     0x40b29e
  40b2da:	and    ah,BYTE PTR [eax]
  40b2dc:	jge    0x40b29e
  40b2de:	cmp    ebx,DWORD PTR [ebx]
  40b2e0:	cmp    eax,0x2c9a6531
  40b2e5:	test   ebx,ebp
  40b2e7:	sbb    BYTE PTR [esi],al
  40b2e9:	mov    eax,0x867081b7
  40b2ee:	jo     0x40b328
  40b2f0:	jg     0x40b2d2
  40b2f2:	imul   edi,DWORD PTR [edi+0x6a903015],0xffffffd2
  40b2f9:	call   0xdce0b19c
  40b2fe:	rcl    DWORD PTR [eax+0x72],1
  40b301:	fucomip st,st(0)
  40b303:	cmp    al,0xab
  40b305:	cmp    bh,BYTE PTR [edx+0x1270065a]
  40b30b:	fs cmp al,0xc0
  40b30e:	lods   eax,DWORD PTR ds:[esi]
  40b30f:	push   ebp
  40b310:	jle    0x40b35b
  40b312:	mov    ecx,0x86afc79
  40b317:	inc    esi
  40b318:	xchg   esp,eax
  40b319:	repnz push ebx
  40b31b:	imul   eax,ebx,0xd6fab3d7
  40b321:	mov    ?,WORD PTR [ebp+0x7b]
  40b324:	out    0xde,al
  40b326:	pop    edi
  40b327:	sbb    ebp,DWORD PTR [eax+edi*1]
  40b32a:	addr16 leave 
  40b32c:	dec    ebp
  40b32d:	fdiv   DWORD PTR [eax+0x1a81f163]
  40b333:	and    ebx,DWORD PTR [ebx+0x79]
  40b336:	shl    BYTE PTR [esi+0x592eaeb2],0xa0
  40b33d:	xlat   BYTE PTR ds:[ebx]
  40b33e:	pop    ebp
  40b33f:	jg     0x40b2ea
  40b341:	mov    esi,0x96cac996
  40b346:	test   eax,0x18a4c351
  40b34b:	mov    BYTE PTR [edi],al
  40b34d:	ss mov esp,esp
  40b350:	(bad)  
  40b351:	test   BYTE PTR [bx+si],dh
  40b354:	add    esp,esp
  40b356:	push   eax
  40b357:	xor    DWORD PTR [ecx],0x1e
  40b35a:	es pop ds
  40b35c:	not    BYTE PTR [eax+ebp*1-0x4e]
  40b360:	mov    esi,0x25ad5b28
  40b365:	scas   al,BYTE PTR es:[edi]
  40b366:	or     dh,BYTE PTR [edx-0x5760b680]
  40b36c:	fst    st(7)
  40b36e:	inc    esp
  40b36f:	jge    0x40b324
  40b371:	mov    ds:0x620f14c5,al
  40b376:	int    0x4b
  40b378:	lods   al,BYTE PTR ds:[esi]
  40b379:	loop   0x40b3ef
  40b37b:	mov    ch,0x20
  40b37d:	lods   al,BYTE PTR ds:[esi]
  40b37e:	sub    ebx,DWORD PTR [ebx-0x3b2d3ab6]
  40b384:	add    edi,esi
  40b386:	or     DWORD PTR [eax],esi
  40b388:	ret    
  40b389:	mov    cl,0xe0
  40b38b:	lods   al,BYTE PTR ds:[esi]
  40b38c:	dec    esi
  40b38d:	push   ds
  40b38e:	pop    eax
  40b38f:	(bad)  
  40b390:	test   eax,0x59d552df
  40b395:	stos   BYTE PTR es:[edi],al
  40b396:	mov    cs,WORD PTR [eax]
  40b398:	sahf   
  40b399:	rcr    ebx,cl
  40b39b:	or     DWORD PTR [esi+0x7f],edx
  40b39e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b39f:	fldcw  WORD PTR [edx+0x5]
  40b3a2:	iret   
  40b3a3:	aaa    
  40b3a4:	mov    esp,esi
  40b3a6:	sub    esp,DWORD PTR [esi+0x76]
  40b3a9:	dec    eax
  40b3aa:	pop    edx
  40b3ab:	scas   al,BYTE PTR es:[edi]
  40b3ac:	cmp    eax,0xe572b995
  40b3b1:	bound  ebp,QWORD PTR [edi-0x7d]
  40b3b4:	in     al,0xed
  40b3b6:	inc    eax
  40b3b7:	xlat   BYTE PTR ds:[ebx]
  40b3b8:	stos   BYTE PTR es:[edi],al
  40b3b9:	rcr    BYTE PTR [esi],1
  40b3bb:	and    ebp,DWORD PTR [ebx]
  40b3bd:	das    
  40b3be:	or     BYTE PTR [ebx+ebx*1+0x74],0xad
  40b3c3:	or     esp,ebx
  40b3c5:	adc    DWORD PTR [ebx],eax
  40b3c7:	mov    bh,0x5
  40b3c9:	sbb    al,0xe4
  40b3cb:	pushf  
  40b3cc:	shl    BYTE PTR [eax+esi*4+0x21],cl
  40b3d0:	mov    BYTE PTR [esi-0x6e],dl
  40b3d3:	dec    eax
  40b3d4:	aad    0xef
  40b3d6:	arpl   WORD PTR [edi+0x396e4163],sp
  40b3dc:	cmc    
  40b3dd:	out    dx,eax
  40b3de:	mov    ah,0x2a
  40b3e0:	sub    BYTE PTR [esi+edx*1-0x2ee6255f],dh
  40b3e7:	bound  esp,QWORD PTR [esi+eiz*8+0xb4a1a1c]
  40b3ee:	inc    edx
  40b3ef:	sbb    eax,edx
  40b3f1:	retf   
  40b3f2:	dec    ebx
  40b3f3:	xor    eax,0xd539455b
  40b3f8:	enter  0xb20e,0xd5
  40b3fc:	mov    esp,0x162640c0
  40b401:	mov    es,WORD PTR [eax]
  40b403:	mov    eax,0xe6432aaf
  40b408:	scas   eax,DWORD PTR es:[edi]
  40b409:	pop    edx
  40b40a:	mov    bl,0x40
  40b40c:	scas   eax,DWORD PTR es:[edi]
  40b40d:	xor    BYTE PTR ds:0x818f31a6,0x8d
  40b414:	sub    bl,cl
  40b416:	cmp    DWORD PTR ds:0xd632f8df,esi
  40b41c:	ret    0x3051
  40b41f:	nop
  40b420:	shl    bh,0x5b
  40b423:	jl     0x40b412
  40b425:	(bad)
  40b429:	stc    
  40b42a:	ins    DWORD PTR es:[edi],dx
  40b42b:	leave  
  40b42c:	bnd jle 0x40b476
  40b42f:	ror    BYTE PTR [ecx-0x3dde9cad],1
  40b435:	aaa    
  40b436:	js     0x40b49b
  40b438:	sbb    edi,DWORD PTR [ebx+0x187f81e9]
  40b43e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b43f:	mov    esp,0xcb96329b
  40b444:	test   eax,0xf258061a
  40b449:	inc    ebp
  40b44a:	dec    eax
  40b44b:	sub    al,0xcb
  40b44d:	jg     0x40b3d5
  40b44f:	(bad)  
  40b450:	sub    al,0xf4
  40b452:	lsl    edi,bx
  40b455:	adc    cl,BYTE PTR [edx+0x14bfd36a]
  40b45b:	mov    esp,0xc1f7b51d
  40b460:	mov    DWORD PTR [ebx+0x5f5d0c59],edx
  40b466:	adc    DWORD PTR [ecx],ecx
  40b468:	iret   
  40b469:	mov    edi,0xf641e80b
  40b46e:	mov    ebx,eax
  40b470:	xchg   BYTE PTR [esi+edi*1+0x7c8c3bda],ah
  40b477:	mov    bl,ch
  40b479:	push   edi
  40b47a:	mov    ebp,0x120b04b
  40b47f:	mov    al,ds:0xb4d7e009
  40b484:	pop    ebx
  40b485:	mov    ebp,0xf6ae1476
  40b48a:	fcomi  st,st(4)
  40b48c:	mov    ch,0x40
  40b48e:	es inc ebp
  40b490:	mov    edx,0xf04865ff
  40b495:	imul   esi,DWORD PTR [ebp-0x7d249c03],0x35
  40b49c:	dec    edx
  40b49d:	push   es
  40b49e:	mov    BYTE PTR [esi+edx*2+0x18e3b2b8],ah
  40b4a5:	sbb    edi,DWORD PTR [eax]
  40b4a7:	jl     0x40b43b
  40b4a9:	test   DWORD PTR [edx-0x54cadf3],0x43c7cd01
  40b4b3:	or     al,BYTE PTR [ebx+0x1ed08614]
  40b4b9:	xchg   esp,eax
  40b4ba:	in     eax,dx
  40b4bb:	cmp    BYTE PTR [ecx],dl
  40b4bd:	dec    ecx
  40b4be:	cmp    BYTE PTR [ebx+0x4ae2c0b7],bl
  40b4c4:	iret   
  40b4c5:	inc    edi
  40b4c6:	icebp  
  40b4c7:	push   ebx
  40b4c8:	xor    eax,0xf6528f9a
  40b4cd:	mov    ch,0x5
  40b4cf:	imul   esp,DWORD PTR [edi-0x2c],0xffffffae
  40b4d3:	ja     0x40b50b
  40b4d5:	aad    0x1
  40b4d7:	push   edi
  40b4d8:	iret   
  40b4d9:	ret    0x4eef
  40b4dc:	cmc    
  40b4dd:	daa    
  40b4de:	rcl    dh,cl
  40b4e0:	lods   eax,DWORD PTR ds:[esi]
  40b4e1:	sar    BYTE PTR [ecx+eiz*4],1
  40b4e4:	cli    
  40b4e5:	mov    dl,0xb7
  40b4e7:	add    ebp,esi
  40b4e9:	add    DWORD PTR [ebx],0xffffffd3
  40b4ec:	(bad)  
  40b4ed:	scas   al,BYTE PTR es:[edi]
  40b4ee:	mov    esp,0xd9807cc9
  40b4f3:	mov    gs,WORD PTR [eax-0x60b46d14]
  40b4f9:	push   0xffffffeb
  40b4fb:	pop    esi
  40b4fc:	xchg   ebp,eax
  40b4fd:	xor    al,0x46
  40b4ff:	sahf   
  40b500:	cs daa 
  40b502:	and    al,0xcb
  40b504:	jecxz  0x40b501
  40b506:	mov    ch,0x6c
  40b508:	cmp    edx,edi
  40b50a:	jno    0x40b4e0
  40b50c:	dec    ecx
  40b50d:	call   0xfeb6:0x236221c5
  40b514:	inc    esi
  40b515:	dec    ah
  40b517:	dec    ebp
  40b518:	sbb    BYTE PTR [edi-0x56],al
  40b51b:	aad    0xd4
  40b51d:	imul   esp,DWORD PTR [eax-0x50],0x8bc3121f
  40b524:	inc    ebp
  40b525:	mov    esp,0x9971cbf5
  40b52a:	adc    ch,BYTE PTR ds:0x74094d59
  40b530:	popf   
  40b531:	dec    eax
  40b532:	pop    ds
  40b533:	xor    DWORD PTR [ebx],esi
  40b535:	mov    DWORD PTR [edi+0x8],0xa731565c
  40b53c:	jge    0x40b539
  40b53e:	cmc    
  40b53f:	and    DWORD PTR [esi+0x6e],ebx
  40b542:	push   eax
  40b543:	push   esp
  40b544:	jmp    0xe431:0x954df66b
  40b54b:	sub    al,0xa9
  40b54d:	mov    ds:0x33947f69,al
  40b552:	mov    dl,cl
  40b554:	cmc    
  40b555:	cmp    ah,ch
  40b557:	mov    edx,0xaa2a8411
  40b55c:	cs out 0x96,eax
  40b55f:	cmp    bl,ah
  40b561:	push   ds
  40b562:	ret    0xe338
  40b565:	test   BYTE PTR [ebx+ecx*2],0xd2
  40b569:	push   0x7e4d1df1
  40b56e:	mov    bh,0xdd
  40b570:	adc    eax,0xa8967552
  40b575:	push   ebp
  40b576:	cmp    eax,0xf6319142
  40b57b:	pop    es
  40b57c:	jg     0x40b5f4
  40b57e:	dec    ebp
  40b57f:	inc    edx
  40b580:	xchg   esp,eax
  40b581:	sbb    DWORD PTR [ebx-0x16f837e],0x85c7dafa
  40b58b:	bound  ebp,QWORD PTR [ebx]
  40b58d:	dec    eax
  40b58e:	mov    al,0xed
  40b590:	xor    BYTE PTR [esp+ebp*4+0x19],bh
  40b594:	nop
  40b595:	dec    esp
  40b596:	mul    DWORD PTR [ebx+0x39408d94]
  40b59c:	lea    ebp,[eax]
  40b59e:	xchg   ah,bh
  40b5a0:	mov    cl,0x88
  40b5a2:	rcr    ecx,1
  40b5a4:	pop    ss
  40b5a5:	inc    ebp
  40b5a6:	xchg   edx,eax
  40b5a7:	dec    esp
  40b5a8:	aaa    
  40b5a9:	mov    ecx,edx
  40b5ab:	test   eax,0xf50395b5
  40b5b0:	test   DWORD PTR [edi-0x67],ecx
  40b5b3:	mov    BYTE PTR [ebx+0x4d20736f],0x26
  40b5ba:	outs   dx,DWORD PTR ds:[esi]
  40b5bb:	fst    st(4)
  40b5bd:	mov    edx,0xf93c3eba
  40b5c2:	pop    es
  40b5c3:	das    
  40b5c4:	jl     0x40b5e1
  40b5c6:	test   DWORD PTR [ebx-0x24],ecx
  40b5c9:	arpl   cx,di
  40b5cb:	sub    edi,DWORD PTR [eax+0x78]
  40b5ce:	fnstsw WORD PTR [eax-0x6c]
  40b5d1:	inc    esi
  40b5d2:	mov    eax,ds:0x687e5eb7
  40b5d7:	mov    ebp,0x467265d4
  40b5dc:	fld    TBYTE PTR [ebp+0x4a22c8b6]
  40b5e2:	sub    edi,ebx
  40b5e4:	imul   ebx,DWORD PTR [esi+0x22],0x62cf7621
  40b5eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5ec:	(bad)  
  40b5ee:	and    cl,cl
  40b5f0:	mov    edi,0xcb0d529b
  40b5f5:	mov    esi,ebx
  40b5f7:	iret   
  40b5f8:	scas   eax,DWORD PTR es:[edi]
  40b5f9:	jmp    0x4e24c664
  40b5fe:	dec    ecx
  40b5ff:	rcr    DWORD PTR [eax-0x46],cl
  40b602:	mov    edi,0xde3d69ee
  40b607:	lea    ecx,[edx-0x1d]
  40b60a:	outs   dx,BYTE PTR ds:[esi]
  40b60b:	mov    bl,0x68
  40b60d:	push   ebp
  40b60e:	loope  0x40b5e6
  40b610:	ins    BYTE PTR es:[edi],dx
  40b611:	push   edi
  40b612:	sbb    cl,BYTE PTR [edi+ebx*2+0x758fa7f0]
  40b619:	sub    edx,edx
  40b61b:	pop    eax
  40b61c:	in     eax,0x78
  40b61e:	and    BYTE PTR [edx+0x3ae19df],bh
  40b624:	sub    edx,eax
  40b626:	adc    BYTE PTR [edx+eiz*2+0x6700f2a6],0xe4
  40b62e:	jge    0x40b675
  40b630:	mov    esi,0xd9bf033d
  40b635:	mov    ebx,0x66cfb545
  40b63a:	dec    esi
  40b63b:	xchg   ebp,eax
  40b63c:	cmp    eax,0xa774caa6
  40b641:	icebp  
  40b642:	dec    esp
  40b643:	fbld   TBYTE PTR [ebx-0xd]
  40b646:	dec    edx
  40b647:	pop    edi
  40b648:	outs   dx,BYTE PTR ds:[esi]
  40b649:	xchg   esp,eax
  40b64a:	inc    eax
  40b64b:	int3   
  40b64c:	push   esi
  40b64d:	lea    edx,[eax+0x253b94ca]
  40b653:	pop    edx
  40b654:	int    0x9c
  40b656:	fisub  DWORD PTR [ebx-0x5d]
  40b659:	lahf   
  40b65a:	sahf   
  40b65b:	xor    ah,BYTE PTR [ebx-0x1b]
  40b65e:	retf   
  40b65f:	les    esi,FWORD PTR [eax-0x420b82c6]
  40b665:	jecxz  0x40b679
  40b667:	(bad)  
  40b669:	call   0x5063:0x84728e51
  40b670:	rcr    BYTE PTR [esi+0x28],0x1c
  40b674:	mov    ds:0x2245692d,al
  40b679:	enter  0xd25f,0x72
  40b67d:	(bad)  
  40b67f:	hlt    
  40b680:	xor    eax,0x2d4f3fd7
  40b685:	ss shl esp,1
  40b688:	stos   DWORD PTR es:[edi],eax
  40b689:	call   0xc07e90a2
  40b68e:	xlat   BYTE PTR ds:[ebx]
  40b68f:	mov    edi,DWORD PTR [ebp+0x15]
  40b692:	aaa    
  40b693:	lds    ecx,FWORD PTR [ebx-0x1a2a9294]
  40b699:	push   ss
  40b69a:	aad    0xc7
  40b69c:	jmp    0x5b95a2f7
  40b6a1:	push   esp
  40b6a2:	cmp    edi,DWORD PTR [edi-0x3ce294a2]
  40b6a8:	jne    0x40b6de
  40b6aa:	rcr    BYTE PTR [esi-0x52],0xad
  40b6ae:	mul    BYTE PTR [eax]
  40b6b0:	push   0x8e89b951
  40b6b5:	sub    DWORD PTR [edx+0x7b],ebp
  40b6b8:	jae    0x40b6c4
  40b6ba:	mov    dh,0x98
  40b6bc:	repz (bad) 
  40b6be:	test   al,0xee
  40b6c0:	fs js  0x40b6a2
  40b6c3:	rcr    DWORD PTR [eax],1
  40b6c5:	and    al,0xe
  40b6c7:	mov    DWORD PTR [ecx],edx
  40b6c9:	call   0x2b33d3e5
  40b6ce:	into   
  40b6cf:	xchg   DWORD PTR [ecx-0x4dcc8c6a],ecx
  40b6d5:	int3   
  40b6d6:	(bad)  
  40b6d7:	rcr    DWORD PTR [ecx-0x4c],0xde
  40b6db:	lahf   
  40b6dc:	fs ss std 
  40b6df:	rcl    DWORD PTR [esi+0x75],1
  40b6e2:	inc    ebp
  40b6e3:	mov    esp,0xe3acf604
  40b6e8:	push   ecx
  40b6e9:	fld    TBYTE PTR [ecx+0x44]
  40b6ec:	fwait
  40b6ed:	fs or  eax,0x6685622c
  40b6f3:	sub    DWORD PTR [edi],esp
  40b6f5:	shr    DWORD PTR [eax+0x29],0x7b
  40b6f9:	sbb    al,0xc3
  40b6fb:	dec    esi
  40b6fc:	int3   
  40b6fd:	fwait
  40b6fe:	lock mov dl,0x47
  40b701:	repnz test BYTE PTR [edx+0x17],0x1e
  40b706:	inc    ebx
  40b707:	retf   0x73ba
  40b70a:	gs call 0x14075f1
  40b710:	ja     0x40b720
  40b712:	(bad)  
  40b713:	ins    BYTE PTR es:[edi],dx
  40b714:	xchg   edx,eax
  40b715:	adc    al,0x50
  40b717:	push   esi
  40b718:	sar    BYTE PTR [esi],cl
  40b71a:	cli    
  40b71b:	xchg   edi,eax
  40b71c:	sar    DWORD PTR [eax+0x1ff19a6e],1
  40b722:	cmp    DWORD PTR [edi],eax
  40b724:	push   ss
  40b725:	pop    ebx
  40b726:	cmp    ah,0x5c
  40b729:	loope  0x40b71e
  40b72b:	or     edx,DWORD PTR [esi-0x11ed891d]
  40b731:	push   0x54
  40b733:	iret   
  40b734:	mov    BYTE PTR [ebx-0x4711463e],al
  40b73a:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b73c:	scas   al,BYTE PTR es:[edi]
  40b73d:	(bad)
  40b741:	sbb    ch,BYTE PTR [esp+edx*8+0x5a5bd038]
  40b748:	jmp    0xe3bba80
  40b74d:	add    dl,bh
  40b74f:	xor    bl,bl
  40b751:	fwait
  40b752:	add    DWORD PTR [ebx-0x5eed4e6a],0x2a
  40b759:	adc    BYTE PTR [eax+0x27],al
  40b75c:	addr16 fdivp st(5),st
  40b75f:	sbb    bh,BYTE PTR [ecx+eiz*2]
  40b762:	jbe    0x40b7e3
  40b764:	mov    WORD PTR [ecx],cs
  40b766:	cmp    BYTE PTR [edi+eax*2],bl
  40b769:	cmp    al,0x37
  40b76b:	addr16 mov cs,ebx
  40b76e:	pop    edx
  40b76f:	cmp    al,0xf5
  40b771:	test   al,0xe
  40b773:	or     edi,esp
  40b775:	sar    DWORD PTR [ecx+0x42bd4f97],1
  40b77b:	add    bl,cl
  40b77d:	push   eax
  40b77e:	call   0xdc69:0xa54c47b3
  40b785:	gs mov ebp,0xc44db512
  40b78b:	lods   eax,DWORD PTR ds:[esi]
  40b78c:	cmc    
  40b78d:	and    eax,0xd3cfa0ba
  40b792:	daa    
  40b793:	push   edi
  40b794:	push   ebx
  40b795:	or     eax,0xe34e3804
  40b79a:	std    
  40b79b:	int    0x4a
  40b79d:	add    eax,0xd8166465
  40b7a2:	xor    ah,BYTE PTR ds:0xf966ef71
  40b7a8:	and    DWORD PTR [esi-0x597453a6],esp
  40b7ae:	push   esp
  40b7af:	adc    DWORD PTR fs:[edx-0x35],eax
  40b7b3:	shl    esp,0xb3
  40b7b6:	xchg   ebx,eax
  40b7b7:	out    0xc6,al
  40b7b9:	hlt    
  40b7ba:	retf   
  40b7bb:	fstp   TBYTE PTR [ebp+0x658155ba]
  40b7c1:	and    bh,BYTE PTR [ebx+ecx*4+0x3d]
  40b7c5:	and    eax,0xfae26f94
  40b7ca:	lock mov ecx,0x7fdb877c
  40b7d0:	lock mov ah,BYTE PTR [eax+0x58]
  40b7d4:	xchg   esp,eax
  40b7d5:	adc    al,0x9a
  40b7d7:	mov    ebp,0xf0d2f466
  40b7dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7dd:	mov    dl,0x9d
  40b7df:	pop    ds
  40b7e0:	not    DWORD PTR [esi]
  40b7e2:	fld    TBYTE PTR [ecx+0x27f50f8e]
  40b7e8:	pop    edx
  40b7e9:	ds xchg esi,eax
  40b7eb:	mul    DWORD PTR [di-0x3b]
  40b7ef:	adc    cl,BYTE PTR [esi]
  40b7f1:	enter  0xff07,0xd8
  40b7f5:	push   es
  40b7f6:	sbb    al,0xd9
  40b7f8:	aas    
  40b7f9:	sbb    eax,0x69a60620
  40b7fe:	cmp    DWORD PTR [ecx],eax
  40b800:	in     al,0x6d
  40b802:	jno    0x40b7a6
  40b804:	call   0x72b236fc
  40b809:	imul   esp,DWORD PTR [ebp-0x67238cff],0xffffff9e
  40b810:	push   esi
  40b811:	les    edx,FWORD PTR [esi-0x79d9304a]
  40b817:	cmp    al,0xcb
  40b819:	lods   al,BYTE PTR ds:[esi]
  40b81a:	in     al,dx
  40b81b:	xor    BYTE PTR [ecx-0x7d],0xb4
  40b81f:	fwait
  40b820:	lock shl BYTE PTR [eax+0x27],1
  40b824:	aaa    
  40b825:	jae    0x40b81f
  40b827:	pop    es
  40b828:	shr    BYTE PTR [eax-0x7c],0xf9
  40b82c:	add    DWORD PTR [ecx+0x764cbbfd],0x29eb7264
  40b836:	add    al,0xde
  40b838:	cmp    edi,DWORD PTR ds:0x2e5b76da
  40b83e:	xchg   bh,dl
  40b840:	test   al,0x8f
  40b842:	xchg   esp,eax
  40b843:	movq   QWORD PTR [esi+eax*2],mm5
  40b847:	xchg   DWORD PTR [edi+0x21],ecx
  40b84a:	or     ah,ch
  40b84c:	push   ecx
  40b84d:	(bad)  
  40b84e:	shl    BYTE PTR [esi-0x31],cl
  40b851:	ror    DWORD PTR [esi+0x38b4954],1
  40b857:	ficomp DWORD PTR ss:0x24392f5a
  40b85e:	popf   
  40b85f:	add    esp,DWORD PTR [ebp+0x1e]
  40b862:	ret    0x80e1
  40b865:	aad    0x47
  40b867:	out    0x1d,eax
  40b869:	loopne 0x40b7ec
  40b86b:	sbb    WORD PTR [edi+0x4fc0cdf2],0x712c
  40b874:	dec    ebx
  40b875:	inc    ecx
  40b876:	sbb    ebp,esp
  40b878:	punpcklbw mm5,DWORD PTR [ebx]
  40b87b:	fimul  DWORD PTR [ebx]
  40b87d:	xlat   BYTE PTR ds:[ebx]
  40b87e:	mov    ebx,cs
  40b880:	jae    0x40b864
  40b882:	bswap  esp
  40b884:	(bad)  
  40b885:	test   DWORD PTR [eax+0x15],esi
  40b888:	data16 sbb BYTE PTR [ebx+eiz*1-0x7e],0x35
  40b88e:	mov    ebx,0xbd44b1ba
  40b893:	loopne 0x40b8c7
  40b895:	adc    BYTE PTR [edx],dl
  40b897:	(bad)
  40b89a:	fst    QWORD PTR [esi]
  40b89c:	jns    0x40b8dc
  40b89e:	loopne 0x40b90a
  40b8a0:	mov    eax,0x553c3009
  40b8a5:	popa   
  40b8a6:	jno    0x40b8af
  40b8a8:	das    
  40b8a9:	cmc    
  40b8aa:	hlt    
  40b8ab:	pushf  
  40b8ac:	dec    ebx
  40b8ad:	fsub   QWORD PTR [ebp-0x6f80dd8e]
  40b8b3:	inc    edi
  40b8b4:	mov    esp,0xd3b259b
  40b8b9:	ficomp WORD PTR [ebp-0x3a]
  40b8bc:	into   
  40b8bd:	mov    ds:0xc6bc7571,eax
  40b8c2:	add    al,0x9c
  40b8c4:	push   eax
  40b8c5:	enter  0xe484,0x8e
  40b8c9:	(bad)  
  40b8ca:	sub    ebx,DWORD PTR [ecx-0x511c5388]
  40b8d0:	enter  0xa2bd,0xaf
  40b8d4:	push   esi
  40b8d5:	mov    eax,0xe7683e67
  40b8da:	mov    ds:0xa5be2e02,al
  40b8df:	and    bl,BYTE PTR [ecx]
  40b8e1:	xchg   ebx,eax
  40b8e2:	out    0xaf,al
  40b8e4:	daa    
  40b8e5:	push   ecx
  40b8e6:	dec    esi
  40b8e7:	push   esi
  40b8e8:	mov    dl,0x70
  40b8ea:	scas   al,BYTE PTR es:[edi]
  40b8eb:	mov    eax,0x37a3c353
  40b8f0:	pop    ebp
  40b8f1:	je     0x40b92a
  40b8f3:	fwait
  40b8f4:	pop    es
  40b8f5:	mov    ds:0x7af6618b,al
  40b8fa:	int    0x36
  40b8fc:	mov    esp,0xf407e8c9
  40b901:	add    BYTE PTR [eax-0xc901ca9],0xb7
  40b908:	xchg   ebx,eax
  40b909:	mov    ecx,0xbc7dbf52
  40b90e:	enter  0x172d,0xfb
  40b912:	lea    edi,[ebx+0x5c]
  40b915:	test   BYTE PTR [ecx],dl
  40b917:	ins    BYTE PTR es:[edi],dx
  40b918:	or     al,0xeb
  40b91a:	add    esi,esp
  40b91c:	cwde   
  40b91d:	add    ah,0xc9
  40b920:	rcl    DWORD PTR [edx],0x13
  40b923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b924:	dec    edx
  40b925:	and    bl,BYTE PTR [eax]
  40b927:	jmp    0x40b956
  40b929:	adc    DWORD PTR [edi-0x1a82973f],ebp
  40b92f:	fild   WORD PTR [ecx]
  40b931:	je     0x40b97a
  40b933:	out    0x56,al
  40b935:	dec    ebp
  40b936:	test   DWORD PTR [ecx+0x68],ebx
  40b939:	jmp    0x40b96b
  40b93b:	inc    ebx
  40b93c:	lods   eax,DWORD PTR ds:[esi]
  40b93d:	ins    BYTE PTR es:[edi],dx
  40b93e:	jae    0x40b930
  40b940:	pushf  
  40b941:	and    eax,0x17040492
  40b946:	(bad)  
  40b947:	mov    ebp,0xf71070f9
  40b94c:	adc    eax,0x2cb990ef
  40b951:	jle    0x40b9cf
  40b953:	in     al,dx
  40b954:	movntq QWORD PTR [ecx],mm6
  40b957:	sub    DWORD PTR [esi+0x168e033e],ecx
  40b95d:	mov    ah,BYTE PTR [eax]
  40b95f:	je     0x40b9ba
  40b961:	mov    edi,0xf158ad04
  40b966:	es mov bl,0xf8
  40b969:	and    al,0x75
  40b96b:	mul    BYTE PTR ds:0xb82628e3
  40b971:	ficom  WORD PTR [ebx-0x1a]
  40b974:	pusha  
  40b975:	cmp    eax,0x87aec7ea
  40b97a:	jmp    0x40b948
  40b97c:	push   eax
  40b97d:	loopne 0x40b98b
  40b97f:	into   
  40b980:	gs into 
  40b982:	mov    eax,ds:0x97df966a
  40b987:	mov    bl,0x73
  40b989:	stos   BYTE PTR es:[edi],al
  40b98a:	inc    ebp
  40b98b:	(bad)  
  40b98c:	mov    ch,0x7c
  40b98e:	inc    ebx
  40b98f:	push   ecx
  40b990:	xor    ebx,DWORD PTR [ebp-0x3b]
  40b993:	mov    WORD PTR [edi+ecx*2+0x13632569],?
  40b99a:	fadd   st(2),st
  40b99c:	xchg   esp,eax
  40b99d:	sub    BYTE PTR es:[ecx],bh
  40b9a0:	test   BYTE PTR [ecx-0x4],bl
  40b9a3:	or     dh,BYTE PTR [edi-0x2e]
  40b9a6:	test   ah,bl
  40b9a8:	mov    DWORD PTR [eax],ecx
  40b9aa:	adc    al,0xdc
  40b9ac:	pop    ecx
  40b9ad:	test   BYTE PTR [edx],0x9c
  40b9b0:	call   0x2105:0xfacbabf1
  40b9b7:	in     eax,0x3f
  40b9b9:	push   0xffffffff
  40b9bb:	ins    BYTE PTR es:[edi],dx
  40b9bc:	sbb    dh,BYTE PTR [esi+0x59]
  40b9bf:	(bad)  
  40b9c0:	pop    eax
  40b9c1:	mov    edx,DWORD PTR [eax+0x43]
  40b9c4:	adc    eax,0xebb6e721
  40b9c9:	xchg   esi,eax
  40b9ca:	xor    DWORD PTR [ebp+0x19],0xffffffc5
  40b9ce:	sbb    eax,0x28118d13
  40b9d3:	inc    ebp
  40b9d4:	inc    eax
  40b9d5:	sahf   
  40b9d6:	mov    esi,0xb8eb3bcb
  40b9db:	jmp    0x6dec:0xcb8384e9
  40b9e2:	sbb    al,0xb6
  40b9e4:	aas    
  40b9e5:	push   eax
  40b9e6:	daa    
  40b9e7:	fldcw  WORD PTR [edi-0x25d2c9b4]
  40b9ed:	mov    ah,0x36
  40b9ef:	cmp    eax,0xcd017dee
  40b9f4:	and    al,0x18
  40b9f6:	sub    eax,DWORD PTR [ebx-0x22]
  40b9f9:	sahf   
  40b9fa:	imul   edi
  40b9fc:	shr    DWORD PTR [ebp+0x10c8ab0c],0x11
  40ba03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba04:	in     al,dx
  40ba05:	cmp    eax,0x507aff07
  40ba0a:	cmp    eax,DWORD PTR [eax+eiz*1+0xe]
  40ba0e:	mov    esp,0x903bc33d
  40ba13:	inc    edi
  40ba14:	adc    DWORD PTR ds:0xde020770,esi
  40ba1a:	daa    
  40ba1b:	pop    ss
  40ba1c:	xchg   esi,eax
  40ba1d:	and    cl,BYTE PTR [ecx+0x70925e5]
  40ba23:	gs mov bh,0xb9
  40ba26:	(bad)
  40ba2a:	push   ecx
  40ba2b:	test   BYTE PTR [eax+0x68],cl
  40ba2e:	fbld   TBYTE PTR [eax+edi*4+0x5bd989dc]
  40ba35:	scas   eax,DWORD PTR es:[edi]
  40ba36:	mov    al,ds:0x6897f631
  40ba3b:	in     eax,dx
  40ba3c:	sbb    eax,0x9306d675
  40ba41:	test   al,0x10
  40ba43:	dec    esi
  40ba44:	mov    bl,0x9d
  40ba46:	mov    ch,0xdd
  40ba48:	cdq    
  40ba49:	inc    esp
  40ba4a:	jae    0x40babe
  40ba4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba4d:	(bad)  
  40ba4f:	test   DWORD PTR [ebx-0x22b4c89a],edx
  40ba55:	add    ebx,DWORD PTR [esp+edx*1]
  40ba58:	mov    cl,0xf7
  40ba5a:	xchg   BYTE PTR [eax+0x61cf032],ch
  40ba60:	in     eax,dx
  40ba61:	or     BYTE PTR [edi-0x25],0x6c
  40ba65:	and    al,0xaa
  40ba67:	cli    
  40ba68:	shl    DWORD PTR [ebx],cl
  40ba6a:	mov    ebp,0xaa1efa5a
  40ba6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba70:	jg     0x40ba18
  40ba72:	ins    DWORD PTR es:[edi],dx
  40ba73:	out    0xe7,eax
  40ba75:	cmp    BYTE PTR [ecx-0x26],0xb7
  40ba79:	sar    DWORD PTR [ebx+0x2d129a35],cl
  40ba7f:	xor    eax,0xed4c90a6
  40ba84:	call   0x5e3a:0x27b28e2c
  40ba8b:	xor    eax,0xbe8eb034
  40ba90:	xor    ch,al
  40ba92:	jbe    0x40ba9a
  40ba94:	aad    0x77
  40ba96:	fcomp  QWORD PTR [ecx+0x393acd80]
  40ba9c:	lods   eax,DWORD PTR ds:[esi]
  40ba9d:	dec    ebx
  40ba9e:	mov    bh,0xf8
  40baa0:	pop    ecx
  40baa1:	ficomp DWORD PTR [edx-0x3dd2d4c8]
  40baa7:	xchg   esi,eax
  40baa8:	fdivr  QWORD PTR [ecx+0x2c4bae37]
  40baae:	xchg   esp,eax
  40baaf:	cdq    
  40bab0:	fidiv  WORD PTR ds:0x89469258
  40bab6:	cpuid  
  40bab8:	push   edx
  40bab9:	add    BYTE PTR [eax+0x2fc47536],ch
  40babf:	jecxz  0x40bb26
  40bac1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bac2:	push   edx
  40bac3:	sub    ch,BYTE PTR [ebx]
  40bac5:	push   0xdcfd3165
  40baca:	add    ecx,DWORD PTR [esi]
  40bacc:	push   0xffffff9f
  40bace:	in     al,0x51
  40bad0:	jecxz  0x40ba62
  40bad2:	ret    
  40bad3:	retf   
  40bad4:	add    ah,al
  40bad6:	jmp    0xd5a90891
  40badb:	outs   dx,BYTE PTR ds:[esi]
  40badc:	rol    BYTE PTR [ecx+ecx*1],0x75
  40bae0:	je     0x40bacf
  40bae2:	pop    edx
  40bae3:	cld    
  40bae4:	adc    eax,0xe058a581
  40bae9:	in     eax,0xe3
  40baeb:	add    BYTE PTR [ecx-0x26bd8446],al
  40baf1:	pop    ebx
  40baf2:	(bad)  
  40baf3:	pop    edx
  40baf4:	dec    ecx
  40baf5:	xor    al,0x2
  40baf7:	xchg   esi,eax
  40baf8:	loopne 0x40ba93
  40bafa:	in     al,dx
  40bafb:	cmp    al,ch
  40bafd:	cmc    
  40bafe:	mov    cl,al
  40bb00:	pop    ebx
  40bb01:	sti    
  40bb02:	sub    ecx,DWORD PTR [edx-0x5c]
  40bb05:	or     DWORD PTR [edi],ebx
  40bb07:	or     bl,BYTE PTR [esp+esi*4-0x27]
  40bb0b:	sti    
  40bb0c:	sbb    BYTE PTR [ecx],dl
  40bb0e:	jo     0x40bac7
  40bb10:	jmp    0x8d085668
  40bb15:	jmp    0x195eaaaf
  40bb1a:	mov    eax,ds:0x9d0e3394
  40bb1f:	outs   dx,DWORD PTR ds:[esi]
  40bb20:	and    al,0x4
  40bb22:	bound  ebp,QWORD PTR [edx]
  40bb24:	jne    0x40bb08
  40bb26:	mov    bl,0x68
  40bb28:	push   esp
  40bb29:	call   0xf52d:0x5600efe0
  40bb30:	xor    ch,al
  40bb32:	xchg   esi,eax
  40bb33:	mov    bl,BYTE PTR [ecx-0x7deb9280]
  40bb39:	dec    esi
  40bb3a:	aad    0xbc
  40bb3c:	fwait
  40bb3d:	mov    esi,0xee406f9d
  40bb42:	nop
  40bb43:	push   esi
  40bb44:	adc    BYTE PTR [ecx],bl
  40bb46:	iret   
  40bb47:	inc    eax
  40bb48:	div    DWORD PTR [esi]
  40bb4a:	jmp    0xd012ef67
  40bb4f:	mov    ecx,0x8b9b650
  40bb54:	push   ecx
  40bb55:	adc    al,0x75
  40bb57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb58:	daa    
  40bb59:	pop    ds
  40bb5a:	scas   al,BYTE PTR es:[edi]
  40bb5b:	(bad)  
  40bb5c:	mov    bl,0xf9
  40bb5e:	mov    ebp,0xae3724d7
  40bb63:	imul   ecx,DWORD PTR [esi],0xd98703d0
  40bb69:	xchg   ebx,eax
  40bb6a:	scas   eax,DWORD PTR es:[edi]
  40bb6b:	push   0x5de26f8d
  40bb70:	fmul   QWORD PTR [edx]
  40bb72:	cmp    edi,DWORD PTR [eax-0xb2a4e73]
  40bb78:	or     eax,0x449bfcc
  40bb7d:	sub    eax,0xadd018ee
  40bb82:	fisubr DWORD PTR ds:0xb349bfdc
  40bb88:	pop    ebx
  40bb89:	jmp    0x7f96aff5
  40bb8e:	popa   
  40bb8f:	in     al,dx
  40bb90:	and    BYTE PTR [ebx-0x6aa108e7],0x9c
  40bb97:	or     al,0x7b
  40bb99:	push   di
  40bb9b:	adc    esp,DWORD PTR es:[eax]
  40bb9e:	or     bx,WORD PTR [esi]
  40bba1:	and    eax,0x4119727e
  40bba6:	js     0x40bc00
  40bba8:	mov    cl,0x2c
  40bbaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbab:	pop    eax
  40bbac:	sub    ebx,esi
  40bbae:	call   0xa7b4:0x1a9ec78c
  40bbb5:	dec    esi
  40bbb6:	inc    ecx
  40bbb7:	mov    dh,0xae
  40bbb9:	mov    ds:0x1c25c6a7,al
  40bbbe:	in     eax,0x9b
  40bbc0:	scas   eax,DWORD PTR es:[edi]
  40bbc1:	dec    eax
  40bbc2:	mov    esp,0x40e4cb61
  40bbc7:	(bad)  
  40bbc9:	out    dx,al
  40bbca:	daa    
  40bbcb:	stc    
  40bbcc:	enter  0x9e08,0x78
  40bbd0:	mov    esp,0x88356798
  40bbd5:	test   al,0x9c
  40bbd7:	dec    eax
  40bbd8:	sti    
  40bbd9:	xchg   ebp,eax
  40bbda:	mov    al,0x83
  40bbdc:	adc    ebx,eax
  40bbde:	dec    eax
  40bbdf:	push   ebp
  40bbe0:	loop   0x40bbe4
  40bbe2:	dec    edx
  40bbe3:	out    dx,al
  40bbe4:	sbb    al,0xf5
  40bbe6:	push   0xffffffc4
  40bbe8:	test   DWORD PTR [edx],ebx
  40bbea:	movntps XMMWORD PTR [eax],xmm7
  40bbed:	pop    ss
  40bbee:	in     al,0x55
  40bbf0:	inc    edi
  40bbf1:	and    eax,0xde7432bd
  40bbf6:	enter  0x1b59,0xcf
  40bbfa:	fstp   QWORD PTR [edx+0x533ac833]
  40bc00:	jl     0x40bbf8
  40bc02:	mov    al,BYTE PTR [esi]
  40bc04:	push   esp
  40bc05:	sbb    DWORD PTR [ecx-0xf18a1e5],edx
  40bc0b:	sub    esp,DWORD PTR [ebx]
  40bc0d:	shl    BYTE PTR [edi-0x3d],1
  40bc10:	mov    al,ds:0x11f0d7a6
  40bc15:	xchg   ebp,eax
  40bc16:	adc    dh,BYTE PTR [ecx+esi*8]
  40bc19:	pop    ds
  40bc1a:	scas   al,BYTE PTR es:[edi]
  40bc1b:	scas   al,BYTE PTR es:[edi]
  40bc1c:	rcl    al,cl
  40bc1e:	pop    ecx
  40bc1f:	sub    BYTE PTR [ecx],al
  40bc21:	dec    esp
  40bc22:	fst    DWORD PTR ds:0x3af07919
  40bc28:	jg     0x40bbe2
  40bc2a:	ins    BYTE PTR es:[edi],dx
  40bc2b:	aad    0x28
  40bc2d:	arpl   WORD PTR [ebx-0x37bae52c],bp
  40bc33:	mov    dh,0xe1
  40bc35:	repnz lea ebx,ds:0x97d8b63a
  40bc3c:	add    edx,ebx
  40bc3e:	inc    esp
  40bc3f:	push   ds
  40bc40:	dec    eax
  40bc41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc42:	(bad)  
  40bc43:	jnp    0x40bca3
  40bc45:	or     esi,0xffffffc5
  40bc48:	push   ecx
  40bc49:	mul    DWORD PTR [ebx+0x48b33cc7]
  40bc4f:	stos   BYTE PTR es:[edi],al
  40bc50:	stos   DWORD PTR es:[edi],eax
  40bc51:	ins    BYTE PTR es:[edi],dx
  40bc52:	daa    
  40bc53:	cmp    DWORD PTR [edi-0x5c],edx
  40bc56:	or     eax,0xfbd48e98
  40bc5b:	push   ds
  40bc5c:	and    esi,edx
  40bc5e:	and    cl,0xbf
  40bc61:	mov    ebx,0x71e8798
  40bc66:	and    ebx,DWORD PTR ds:0x668e88ca
  40bc6c:	add    eax,0x3f0fb6e
  40bc71:	frstor [edx+0x5f]
  40bc74:	nop
  40bc75:	adc    ch,0xcd
  40bc78:	adc    bl,BYTE PTR [edi+ebx*2-0x65cfe8a3]
  40bc7f:	mov    al,ds:0x5d525a78
  40bc84:	mov    ah,BYTE PTR [edi]
  40bc86:	dec    ebp
  40bc87:	fadd   DWORD PTR [edx-0x60faf56f]
  40bc8d:	test   eax,0xac9dacd1
  40bc92:	sub    DWORD PTR [ebp+0x1b],eax
  40bc95:	stc    
  40bc96:	out    0x17,eax
  40bc98:	enter  0x52f1,0xd3
  40bc9c:	jg     0x40bcbd
  40bc9e:	ret    
  40bc9f:	xor    al,0x89
  40bca1:	sahf   
  40bca2:	mov    ds:0x878b727e,eax
  40bca7:	repz cs push cs
  40bcaa:	jmp    0x6d17:0x32c9e38e
  40bcb1:	sub    bh,ah
  40bcb3:	xchg   esi,eax
  40bcb4:	call   0x8ffefddf
  40bcb9:	not    DWORD PTR [edx-0x558f4fba]
  40bcbf:	sub    bl,BYTE PTR [esi-0x1e731c7c]
  40bcc5:	xchg   BYTE PTR [ebx-0x7b613d44],ah
  40bccb:	add    BYTE PTR [ebx-0x5f],0xf6
  40bccf:	pop    edi
  40bcd0:	adc    DWORD PTR [ebp-0x126367b2],ecx
  40bcd6:	inc    esi
  40bcd7:	and    eax,0x91402d20
  40bcdc:	pushf  
  40bcdd:	cmp    al,0x31
  40bcdf:	xchg   ebx,eax
  40bce0:	test   esi,esi
  40bce2:	scas   eax,DWORD PTR es:[edi]
  40bce3:	mov    BYTE PTR [esp+edx*4+0x279a302c],dh
  40bcea:	(bad)  
  40bceb:	sar    ah,cl
  40bced:	mov    dh,0x43
  40bcef:	cmp    cl,BYTE PTR [ecx]
  40bcf1:	(bad)
  40bcf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcf5:	adc    ebx,DWORD PTR [eax-0x3d9fa90f]
  40bcfb:	mov    ss,WORD PTR [eax]
  40bcfd:	mov    ds:0x398be7c2,eax
  40bd02:	xor    BYTE PTR [edi-0x16e6180c],ch
  40bd08:	(bad)
  40bd0b:	test   eax,0xc3757c1d
  40bd10:	out    0x4a,al
  40bd12:	cwde   
  40bd13:	sbb    ecx,DWORD PTR [edx+0x3a]
  40bd16:	add    ah,BYTE PTR [edx-0x3156877b]
  40bd1c:	jmp    0x40bd5f
  40bd1e:	enter  0xf868,0x4e
  40bd22:	xchg   ecx,eax
  40bd23:	stc    
  40bd24:	cmc    
  40bd25:	test   cl,dl
  40bd27:	or     ch,bh
  40bd29:	xlat   BYTE PTR ds:[ebx]
  40bd2a:	xor    al,BYTE PTR gs:[ebx+0x2056602b]
  40bd31:	sbb    BYTE PTR [ecx-0x19],0xad
  40bd35:	stos   BYTE PTR es:[edi],al
  40bd36:	out    0xc7,eax
  40bd38:	sbb    DWORD PTR [ecx+0x49],esi
  40bd3b:	repnz cli 
  40bd3d:	retf   
  40bd3e:	cmp    al,0x34
  40bd40:	ds inc edx
  40bd42:	pop    esi
  40bd43:	and    DWORD PTR [ebx-0x15ce6564],edx
  40bd49:	test   eax,0x75f25a93
  40bd4e:	mov    esp,0x2658c033
  40bd53:	push   ecx
  40bd54:	xchg   BYTE PTR gs:[edx-0x27fbc1bd],ch
  40bd5b:	mov    ch,BYTE PTR [edx]
  40bd5d:	sub    esi,DWORD PTR [ecx+0x77]
  40bd60:	pop    esp
  40bd61:	sbb    BYTE PTR [edx-0x4a1c1a3b],0x67
  40bd68:	enter  0xf446,0x6a
  40bd6c:	popf   
  40bd6d:	xor    eax,0xcb7c2616
  40bd72:	jmp    0x20c0b6a0
  40bd77:	fwait
  40bd78:	pusha  
  40bd79:	mov    dh,0xc
  40bd7b:	outs   dx,DWORD PTR ds:[esi]
  40bd7c:	mov    ch,BYTE PTR [esi]
  40bd7e:	jnp    0x40bd3a
  40bd80:	std    
  40bd81:	inc    ecx
  40bd82:	mov    edi,DWORD PTR [eax+0x10a616c]
  40bd88:	daa    
  40bd89:	ins    DWORD PTR es:[edi],dx
  40bd8a:	ss mov al,0x7b
  40bd8d:	mov    ecx,0x99ca18e1
  40bd92:	imul   esi,ebx,0x42
  40bd95:	addr16 js 0x40bdf4
  40bd98:	mov    ebp,0xd58b120b
  40bd9d:	outs   dx,DWORD PTR ds:[esi]
  40bd9e:	pop    esi
  40bd9f:	imul   ebx,DWORD PTR [ebx+0x70],0x29
  40bda3:	jno    0x40bd8b
  40bda5:	and    ah,BYTE PTR [eax+edx*8+0x5a]
  40bda9:	mov    ebx,0x3dbae07e
  40bdae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdaf:	mov    eax,0x6e2e673
  40bdb4:	mov    eax,0x3825a23d
  40bdb9:	ret    0xb3bf
  40bdbc:	jo     0x40bd93
  40bdbe:	mov    bl,BYTE PTR [eax]
  40bdc0:	jb     0x40bd88
  40bdc2:	sub    al,0xa1
  40bdc4:	fisub  WORD PTR [edx+0x18]
  40bdc7:	retf   
  40bdc8:	dec    ebx
  40bdc9:	jecxz  0x40bd69
  40bdcb:	test   BYTE PTR [eax+0x67],ch
  40bdce:	xchg   ecx,eax
  40bdcf:	sub    eax,0x59251224
  40bdd4:	pop    edi
  40bdd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdd6:	add    DWORD PTR [ebx],0x2a
  40bdd9:	(bad)  
  40bdda:	cdq    
  40bddb:	fiadd  DWORD PTR [edx]
  40bddd:	add    eax,0x6f676182
  40bde2:	push   edi
  40bde3:	imul   ecx,DWORD PTR [edx+0x3db10153],0x7363d5dc
  40bded:	call   0x27cf:0x70e2c4f3
  40bdf4:	dec    esp
  40bdf5:	les    edi,FWORD PTR [esi+0xeb30d06]
  40bdfb:	pop    eax
  40bdfc:	in     eax,dx
  40bdfd:	icebp  
  40bdfe:	test   eax,0x4ee3a9fd
  40be03:	les    esp,FWORD PTR [eax+edi*8]
  40be06:	mov    al,0x7e
  40be08:	daa    
  40be09:	pop    edx
  40be0a:	out    dx,eax
  40be0b:	pop    esp
  40be0c:	dec    esp
  40be0d:	or     BYTE PTR [edi-0x29236294],dl
  40be13:	pop    esp
  40be14:	daa    
  40be15:	(bad)  
  40be16:	sub    edi,edi
  40be18:	pop    es
  40be19:	xlat   BYTE PTR ds:[ebx]
  40be1a:	lods   al,BYTE PTR ds:[esi]
  40be1b:	push   ecx
  40be1c:	sahf   
  40be1d:	ret    0xbc5
  40be20:	mov    ds:0xb5c8f51b,al
  40be25:	jmp    0x40be66
  40be27:	ja     0x40bdcb
  40be29:	js     0x40be1f
  40be2b:	push   ss
  40be2c:	shr    BYTE PTR [ebp+0x74330636],1
  40be32:	pop    ebp
  40be33:	daa    
  40be34:	mov    edx,0x9b2285a7
  40be39:	call   DWORD PTR [edi-0xa2c0503]
  40be3f:	dec    ebp
  40be40:	outs   dx,DWORD PTR ds:[esi]
  40be41:	sub    eax,0x504a32c0
  40be46:	or     BYTE PTR [esi+0x2aa6fc7f],bh
  40be4c:	cld    
  40be4d:	mov    eax,0xec892383
  40be52:	rcr    ch,0x5d
  40be55:	xchg   ebp,eax
  40be56:	inc    esi
  40be57:	inc    ecx
  40be58:	in     al,0x53
  40be5a:	jmp    0x40bdf0
  40be5c:	repz xchg edx,eax
  40be5e:	sub    BYTE PTR [ebx+0x3b],bh
  40be61:	sbb    bl,BYTE PTR [ebx]
  40be63:	loop   0x40be47
  40be65:	dec    edx
  40be66:	mov    BYTE PTR [edi],ah
  40be68:	scas   al,BYTE PTR es:[edi]
  40be69:	lods   al,BYTE PTR ds:[esi]
  40be6a:	fisub  DWORD PTR [edi+0x1644bcec]
  40be70:	mov    ah,0x69
  40be72:	mov    ebx,0x85e6b9a
  40be77:	add    ebp,eax
  40be79:	outs   dx,BYTE PTR ds:[esi]
  40be7a:	outs   dx,BYTE PTR ds:[esi]
  40be7b:	jo     0x40befc
  40be7d:	pop    es
  40be7e:	and    al,dh
  40be80:	(bad)  
  40be81:	xlat   BYTE PTR ds:[ebx]
  40be82:	lahf   
  40be83:	add    al,0xda
  40be85:	lods   al,BYTE PTR ds:[esi]
  40be86:	sub    DWORD PTR [eax+0x1aebd72c],0x35
  40be8d:	xchg   ebp,eax
  40be8e:	sti    
  40be8f:	xor    dl,ch
  40be91:	sti    
  40be92:	fsub   QWORD PTR [edx+0x1c]
  40be95:	pop    esi
  40be96:	push   edx
  40be97:	je     0x40beea
  40be99:	int    0x7f
  40be9b:	in     eax,0x24
  40be9d:	pop    ebp
  40be9e:	stos   DWORD PTR es:[edi],eax
  40be9f:	and    eax,0x5a086e2b
  40bea4:	cdq    
  40bea5:	out    dx,eax
  40bea6:	imul   ebp,DWORD PTR [eax-0x20],0xbe69608d
  40bead:	shl    BYTE PTR [edx],1
  40beaf:	dec    ebx
  40beb0:	and    BYTE PTR [ebx+eax*8+0x7f404fbf],bh
  40beb7:	xor    ebp,eax
  40beb9:	inc    edi
  40beba:	and    BYTE PTR [ecx],al
  40bebc:	not    BYTE PTR [edx]
  40bebe:	call   0xcc178808
  40bec3:	mov    bh,0xf5
  40bec5:	mov    ah,0xc0
  40bec7:	std    
  40bec8:	fild   WORD PTR [esi]
  40beca:	jae    0x40bec6
  40becc:	loop   0x40bf40
  40bece:	js     0x40bebb
  40bed0:	dec    edi
  40bed1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bed2:	(bad)  
  40bed4:	and    bh,BYTE PTR [edx]
  40bed6:	mov    ebx,0xf965d8bc
  40bedb:	jne    0x40bed4
  40bedd:	mov    ?,WORD PTR [edi-0x1164e67e]
  40bee3:	xchg   esi,eax
  40bee4:	adc    eax,0x6ad5bdc3
  40bee9:	mov    ch,0x72
  40beeb:	pop    ebp
  40beec:	retf   
  40beed:	popf   
  40beee:	add    esi,DWORD PTR [eax]
  40bef0:	sub    al,0x83
  40bef2:	mov    ecx,0x7097d24b
  40bef7:	aam    0xe4
  40bef9:	mov    edi,0x1bbef2b0
  40befe:	call   0xb5873bb1
  40bf03:	aaa    
  40bf04:	dec    eax
  40bf05:	pop    ebp
  40bf06:	iret   
  40bf07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf08:	ud1    edx,DWORD PTR [edx]
  40bf0b:	and    BYTE PTR [eax-0x45],cl
  40bf0e:	rol    BYTE PTR [ebx],0xf8
  40bf11:	pushf  
  40bf12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf13:	and    al,0x3c
  40bf15:	pop    esi
  40bf16:	inc    edx
  40bf17:	xor    ch,BYTE PTR [edx+0x29]
  40bf1a:	mov    bh,0x56
  40bf1c:	fxch   st(4)
  40bf1e:	jge    0x40bec9
  40bf20:	pop    es
  40bf21:	cdq    
  40bf22:	xchg   ebx,eax
  40bf23:	mov    dl,0xef
  40bf25:	retf   0x4312
  40bf28:	cwde   
  40bf29:	(bad)  
  40bf2a:	mov    WORD PTR [ebx+0x2e313c8e],ss
  40bf30:	arpl   bx,cx
  40bf32:	in     al,0x60
  40bf34:	fcom   st(7)
  40bf36:	pushf  
  40bf37:	in     eax,0x45
  40bf39:	es jmp 0x40bee9
  40bf3c:	cs js  0x40bef6
  40bf3f:	jp     0x40bee7
  40bf41:	jg     0x40bf33
  40bf43:	push   0xd0f5e72d
  40bf48:	les    ecx,FWORD PTR [edi]
  40bf4a:	outs   dx,DWORD PTR ds:[esi]
  40bf4b:	sub    ebx,esi
  40bf4d:	cwde   
  40bf4e:	call   0xde62:0x41a5efc5
  40bf55:	inc    ecx
  40bf56:	or     BYTE PTR [edi+0x4c],ch
  40bf59:	in     al,0x12
  40bf5b:	jnp    0x40bedf
  40bf5d:	push   ss
  40bf5e:	and    esp,DWORD PTR [eax+0x4e526b6b]
  40bf64:	jecxz  0x40bfc1
  40bf66:	dec    edi
  40bf67:	int3   
  40bf68:	fmul   DWORD PTR [edx+0x2c67eda4]
  40bf6e:	pusha  
  40bf6f:	scas   al,BYTE PTR es:[edi]
  40bf70:	call   0x37fec5
  40bf75:	pop    ss
  40bf76:	imul   BYTE PTR [ecx]
  40bf78:	push   ss
  40bf79:	inc    esi
  40bf7a:	cmp    esp,edi
  40bf7c:	inc    edi
  40bf7d:	ret    
  40bf7e:	out    0x63,al
  40bf80:	fisubr WORD PTR [ecx]
  40bf82:	cli    
  40bf83:	imul   esi,ecx,0x38
  40bf86:	adc    al,0x94
  40bf88:	add    ebp,ebx
  40bf8a:	adc    DWORD PTR [edi+0x32],ecx
  40bf8d:	das    
  40bf8e:	jae    0x40bf86
  40bf90:	dec    edi
  40bf91:	(bad)  
  40bf92:	(bad)  
  40bf93:	imul   esp,DWORD PTR ds:[ebp+0x4a],0x3
  40bf98:	dec    esi
  40bf99:	or     al,0xb5
  40bf9b:	xor    DWORD PTR [edi+0x47213a97],esi
  40bfa1:	ds ds pop edi
  40bfa4:	out    dx,al
  40bfa5:	or     BYTE PTR [ecx+0x4e],bh
  40bfa8:	add    esp,eax
  40bfaa:	or     BYTE PTR [esp+ecx*8],ah
  40bfad:	xchg   ebx,eax
  40bfae:	sti    
  40bfaf:	sub    al,0x20
  40bfb1:	ja     0x40bf6b
  40bfb3:	jne    0x40bfee
  40bfb5:	imul   ecx,DWORD PTR [edi+0x76ad058a],0xecaf829f
  40bfbf:	mov    ds:0x271276e8,al
  40bfc4:	shl    bh,cl
  40bfc6:	xchg   BYTE PTR [ebx+0x20],dh
  40bfc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfca:	xchg   BYTE PTR [ebp+0x7c9c4422],cl
  40bfd0:	out    0x22,eax
  40bfd2:	lsl    ebp,WORD PTR [eax]
  40bfd5:	and    BYTE PTR ds:0xa56ab481,dl
  40bfdb:	out    0x4c,al
  40bfdd:	hlt    
  40bfde:	fs int 0x9b
  40bfe1:	fimul  WORD PTR [edx+ebp*4+0x6e6aa7f4]
  40bfe8:	xchg   esi,eax
  40bfe9:	mov    dh,0x25
  40bfeb:	in     al,dx
  40bfec:	mov    al,0x9c
  40bfee:	in     al,dx
  40bfef:	pop    esi
  40bff0:	lock inc eax
  40bff2:	lahf   
  40bff3:	mov    dl,0xd9
  40bff5:	pop    ebx
  40bff6:	sub    ecx,edx
  40bff8:	mov    ah,0x34
  40bffa:	cmp    edi,esp
  40bffc:	out    dx,eax
  40bffd:	loopne 0x40c06c
  40bfff:	ds pop es
  40c001:	adc    al,0x4d
  40c003:	adc    eax,0x8722cd85
  40c008:	cdq    
  40c009:	xchg   edi,eax
  40c00a:	xlat   BYTE PTR ds:[ebx]
  40c00b:	pop    edi
  40c00c:	inc    edx
  40c00d:	daa    
  40c00e:	int    0x6b
  40c010:	mov    bl,0xbb
  40c012:	nop
  40c013:	push   ss
  40c014:	stos   DWORD PTR es:[edi],eax
  40c015:	jns    0x40c082
  40c017:	pop    es
  40c018:	outs   dx,DWORD PTR ds:[esi]
  40c019:	xchg   DWORD PTR [ecx-0xa4b0bdf],esi
  40c01f:	test   BYTE PTR [ecx+0x1d],ah
  40c022:	xchg   esp,eax
  40c023:	ins    BYTE PTR es:[edi],dx
  40c024:	dec    esi
  40c025:	push   edi
  40c026:	push   ebx
  40c027:	data16 xlat BYTE PTR ds:[ebx]
  40c029:	inc    eax
  40c02a:	adc    DWORD PTR [esp+ebp*2],ebp
  40c02d:	fld    QWORD PTR [edx-0x3a2e71d4]
  40c033:	mov    bh,0xef
  40c035:	outs   dx,DWORD PTR ds:[esi]
  40c036:	mov    ah,0xc6
  40c038:	cmp    ecx,edx
  40c03a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c03b:	test   eax,0xe1c64fb7
  40c040:	jbe    0x40c095
  40c042:	dec    esp
  40c043:	aam    0x1f
  40c045:	bound  ebp,QWORD PTR [edx]
  40c047:	pop    ss
  40c048:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c049:	mov    dl,bl
  40c04b:	iret   
  40c04c:	into   
  40c04d:	sbb    bl,al
  40c04f:	pop    eax
  40c050:	mov    ch,0xc9
  40c052:	or     al,BYTE PTR [ebp-0x36]
  40c055:	(bad)  [ebp-0x19a6df5c]
  40c05b:	test   eax,0x3c0235db
  40c060:	je     0x40c0cb
  40c062:	test   eax,0x2740aa17
  40c067:	dec    edx
  40c068:	xlat   BYTE PTR ds:[ebx]
  40c069:	inc    ebx
  40c06a:	push   ds
  40c06b:	aad    0x5e
  40c06d:	rcl    DWORD PTR [edi+ebx*2],cl
  40c070:	lods   al,BYTE PTR ds:[esi]
  40c071:	push   ebx
  40c072:	sub    eax,0x7bc22c1a
  40c077:	paddq  mm0,mm0
  40c07a:	idiv   BYTE PTR [ebx]
  40c07c:	jb     0x40c0bd
  40c07e:	xchg   esp,eax
  40c07f:	ret    
  40c080:	push   ecx
  40c081:	cmc    
  40c082:	cmp    esp,0xffffffed
  40c085:	repz pop ebp
  40c087:	in     eax,0x9b
  40c089:	and    al,0x4b
  40c08b:	das    
  40c08c:	jne    0x40c01b
  40c08e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c08f:	into   
  40c090:	jmp    0x40c05a
  40c092:	int3   
  40c093:	fdiv   QWORD PTR [ecx+0x37]
  40c096:	retf   0x6c74
  40c099:	(bad)  
  40c09a:	sub    al,0x20
  40c09c:	push   ecx
  40c09d:	or     BYTE PTR [edx],0x15
  40c0a0:	je     0x40c0ac
  40c0a2:	mov    ds:0x4b51fa16,al
  40c0a7:	xchg   BYTE PTR [eax-0x76],al
  40c0aa:	mov    ch,0xe4
  40c0ac:	jge    0x40c0ab
  40c0ae:	jbe    0x40c0c8
  40c0b0:	sahf   
  40c0b1:	adc    eax,0x8d1ebe55
  40c0b6:	cmp    eax,0x4b50bfd9
  40c0bb:	test   al,0xb9
  40c0bd:	jb     0x40c0d9
  40c0bf:	(bad)
  40c0c3:	sbb    al,0x9f
  40c0c5:	cmp    BYTE PTR [esi+0x18a8069f],bh
  40c0cb:	(bad)  [edx+0x3a]
  40c0ce:	mov    ch,0x39
  40c0d0:	lods   eax,DWORD PTR ds:[esi]
  40c0d1:	sbb    DWORD PTR [eax+esi*8],esi
  40c0d4:	pop    eax
  40c0d5:	cld    
  40c0d6:	nop
  40c0d7:	xchg   ebp,eax
  40c0d8:	popa   
  40c0d9:	inc    ebx
  40c0da:	shl    DWORD PTR [ecx+0x3e30716b],1
  40c0e0:	shl    edx,0xca
  40c0e3:	popa   
  40c0e4:	mov    ebx,0x58eb7752
  40c0e9:	lds    eax,FWORD PTR [ebp-0x549aa892]
  40c0ef:	mov    ebx,0xaa940986
  40c0f4:	jbe    0x40c12a
  40c0f6:	mov    ch,0xd4
  40c0f8:	jmp    0x42c:0x71ea4e48
  40c0ff:	dec    edx
  40c100:	shl    DWORD PTR [eax+0x21],cl
  40c103:	fistp  QWORD PTR [eax]
  40c105:	sub    DWORD PTR [esi-0x796e31d],esi
  40c10b:	dec    edx
  40c10c:	daa    
  40c10d:	dec    edx
  40c10e:	sub    eax,0x1a56afe9
  40c113:	outs   dx,BYTE PTR ds:[esi]
  40c114:	mov    dl,0x34
  40c116:	push   edi
  40c117:	test   eax,0x5dbf7726
  40c11c:	int3   
  40c11d:	xchg   esp,eax
  40c11f:	out    0xa9,eax
  40c121:	jecxz  0x40c17e
  40c123:	pop    edi
  40c124:	push   ebp
  40c125:	data16 jnp 0x40c125
  40c128:	shr    cl,0x9f
  40c12b:	mov    ecx,0xa919a05f
  40c130:	fnsetpm(287 only) 
  40c132:	sbb    BYTE PTR [edi*1-0x172e070e],bh
  40c139:	out    0x7f,eax
  40c13b:	pushf  
  40c13c:	sahf   
  40c13d:	inc    esp
  40c13e:	repz dec eax
  40c140:	jbe    0x40c194
  40c142:	(bad)  
  40c143:	retf   0xf3a4
  40c146:	fwait
  40c147:	mov    fs,ebp
  40c149:	mov    ebp,0xefe7e77b
  40c14e:	lods   eax,DWORD PTR ds:[esi]
  40c14f:	cmp    eax,DWORD PTR [ebx]
  40c151:	sub    DWORD PTR [esi],ecx
  40c153:	cmp    ebx,DWORD PTR ss:[edx+0x28]
  40c157:	out    dx,eax
  40c158:	xor    BYTE PTR [ebx-0x28b20811],al
  40c15e:	sbb    BYTE PTR [edx+0x2b],dl
  40c161:	push   eax
  40c162:	addr16 mov ecx,0xfeb02669
  40c168:	pop    ecx
  40c169:	pop    esi
  40c16a:	sti    
  40c16b:	lods   al,BYTE PTR ds:[esi]
  40c16c:	sbb    ebp,ebp
  40c16e:	sub    eax,0x5dbcb99f
  40c173:	push   ebx
  40c174:	imul   BYTE PTR [ebx-0x6d]
  40c177:	adc    al,0x81
  40c179:	add    BYTE PTR [edi+0x305e2782],cl
  40c17f:	mov    es,WORD PTR [ebx+ebx*1-0x3069c896]
  40c186:	mov    ah,0x46
  40c188:	sbb    bl,BYTE PTR [eax+edi*1]
  40c18b:	out    0x5c,al
  40c18d:	dec    esi
  40c18e:	or     bl,BYTE PTR [ebx]
  40c190:	mov    al,BYTE PTR [ebx+ecx*4]
  40c193:	dec    esi
  40c194:	sbb    DWORD PTR [esi+0x7a],esp
  40c197:	mov    esp,0x285665d5
  40c19c:	imul   eax,DWORD PTR ds:0x453ae8c4,0xccf404e2
  40c1a6:	or     eax,0xa4a09101
  40c1ab:	jecxz  0x40c205
  40c1ad:	retf   0x8219
  40c1b0:	into   
  40c1b1:	add    esi,DWORD PTR [ebx]
  40c1b3:	inc    ebx
  40c1b4:	data16 jl 0x40c15a
  40c1b7:	leave  
  40c1b8:	and    DWORD PTR [ecx-0x643d034],edx
  40c1be:	adc    DWORD PTR [ebx+ebx*1-0x19d299b8],ecx
  40c1c5:	mov    BYTE PTR [edx],bl
  40c1c7:	mov    edi,ebx
  40c1c9:	fwait
  40c1ca:	sub    edi,DWORD PTR [esi+0x46a41911]
  40c1d0:	adc    al,0xa2
  40c1d2:	std    
  40c1d3:	add    al,ch
  40c1d5:	mov    esi,0x6aae5a38
  40c1da:	les    ebp,FWORD PTR [eax]
  40c1dc:	ja     0x40c240
  40c1de:	es test eax,0xec485135
  40c1e4:	mov    esi,0x37609458
  40c1e9:	stos   DWORD PTR es:[edi],eax
  40c1ea:	mov    cl,0x38
  40c1ec:	daa    
  40c1ed:	dec    ebx
  40c1ee:	add    al,ah
  40c1f0:	sbb    DWORD PTR [ebx-0x3b19be26],ebx
  40c1f6:	popf   
  40c1f7:	outs   dx,BYTE PTR ds:[esi]
  40c1f8:	xchg   ebp,eax
  40c1f9:	cmp    BYTE PTR [esi],dl
  40c1fb:	add    esp,DWORD PTR [eax-0x53]
  40c1fe:	and    ch,BYTE PTR [esi+0x68246db0]
  40c204:	pop    eax
  40c205:	xor    BYTE PTR [eax-0x61],0xd4
  40c209:	rcl    DWORD PTR [ecx-0x48a4f32f],1
  40c20f:	dec    ebp
  40c210:	dec    edi
  40c211:	adc    ebp,DWORD PTR [esi+edx*8+0x59fc66d8]
  40c218:	xor    esp,DWORD PTR [ecx-0x19096108]
  40c21e:	fs xor ah,ah
  40c221:	rcr    BYTE PTR [ebx],cl
  40c223:	xchg   ecx,eax
  40c224:	or     DWORD PTR [edx+0x6a93f35a],ebp
  40c22a:	popa   
  40c22b:	or     eax,DWORD PTR [esi]
  40c22d:	add    eax,0x3fc5721d
  40c232:	cmp    eax,0x2ec57745
  40c237:	lds    eax,FWORD PTR [ebp+0x2]
  40c23a:	cmp    BYTE PTR [edi+edi*8],ah
  40c23d:	and    BYTE PTR [esi+ebp*8-0x37],ch
  40c241:	mov    esi,0x18d29be2
  40c246:	cmp    eax,0xc1e9389d
  40c24b:	or     DWORD PTR [edi+0x66f437a6],0x818dd0da
  40c255:	stos   DWORD PTR es:[edi],eax
  40c256:	test   esp,ebx
  40c258:	dec    ebp
  40c259:	(bad)  
  40c25a:	push   edi
  40c25b:	arpl   sp,si
  40c25d:	sahf   
  40c25e:	pop    ecx
  40c25f:	or     BYTE PTR [eax-0x3a],0xc4
  40c263:	mov    ds:0xd5e28a76,eax
  40c268:	push   ebx
  40c269:	add    ebx,edi
  40c26b:	lock xchg edx,eax
  40c26d:	fimul  DWORD PTR [edx+0x69]
  40c270:	xchg   edi,eax
  40c271:	int3   
  40c272:	mov    dl,0xe2
  40c274:	jno    0x40c2b4
  40c276:	test   al,0xa5
  40c278:	push   edi
  40c279:	mov    ebp,0xc7f4a5ab
  40c27e:	cmpxchg DWORD PTR [edx+0x47650c33],ebp
  40c285:	pop    ecx
  40c286:	add    bh,BYTE PTR [edi-0x21]
  40c289:	inc    ecx
  40c28a:	jmp    0x40c2ee
  40c28c:	sub    BYTE PTR [edx+ecx*1+0x2ec6f6c7],dh
  40c293:	call   0xbbcb:0x180317f4
  40c29a:	sbb    al,0x28
  40c29c:	fcmovu st,st(6)
  40c29e:	int    0x40
  40c2a0:	push   cs
  40c2a1:	mov    ds:0x4dd73a7a,al
  40c2a6:	stos   DWORD PTR es:[edi],eax
  40c2a7:	lea    ebp,[esi+0x2c02bf47]
  40c2ad:	xchg   BYTE PTR [ebp+0x31],dl
  40c2b0:	dec    ecx
  40c2b1:	aad    0x25
  40c2b3:	ds icebp 
  40c2b5:	loope  0x40c24e
  40c2b7:	sbb    BYTE PTR [edx+ebp*2+0x4e6487c8],0xbf
  40c2bf:	arpl   bx,sp
  40c2c1:	dec    edi
  40c2c2:	jb     0x40c2aa
  40c2c4:	push   edx
  40c2c5:	je     0x40c2e0
  40c2c7:	shr    ebx,0xbe
  40c2ca:	test   al,0xd
  40c2cc:	mov    DWORD PTR [esi+0x7],eax
  40c2cf:	aam    0x75
  40c2d1:	pop    ebp
  40c2d2:	loope  0x40c295
  40c2d4:	dec    esp
  40c2d5:	clc    
  40c2d6:	imul   edi,eax,0x18117f63
  40c2dc:	add    eax,0xd56eb13
  40c2e1:	jbe    0x40c27f
  40c2e3:	inc    ecx
  40c2e4:	jae    0x40c34e
  40c2e6:	dec    esp
  40c2e7:	out    0x46,al
  40c2e9:	jo     0x40c34f
  40c2eb:	lods   eax,DWORD PTR ds:[esi]
  40c2ec:	hlt    
  40c2ed:	jle    0x40c311
  40c2ef:	xor    eax,0xe574558f
  40c2f4:	cmp    edi,esi
  40c2f6:	mov    esp,0x369ab755
  40c2fb:	clc    
  40c2fc:	mov    ds:0xfedd22b7,eax
  40c301:	push   0x15c5562
  40c306:	jnp    0x40c28c
  40c308:	mov    al,0x2c
  40c30a:	popf   
  40c30b:	push   esi
  40c30c:	cmp    ebp,DWORD PTR [esi]
  40c30e:	fwait
  40c30f:	mov    ecx,0x8b05bc0a
  40c314:	nop
  40c315:	jnp    0x40c323
  40c317:	aaa    
  40c318:	xchg   DWORD PTR [ebx-0x55feb4e9],ebp
  40c31e:	jbe    0x40c2cd
  40c320:	mov    edi,0x7c8eb8bc
  40c325:	or     al,0x89
  40c327:	xlat   BYTE PTR ds:[ebx]
  40c328:	fisubr DWORD PTR [ebp+0x6248f854]
  40c32e:	mov    ecx,esi
  40c330:	push   esp
  40c331:	out    dx,al
  40c332:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c333:	out    dx,eax
  40c334:	jbe    0x40c38f
  40c336:	out    0xaa,eax
  40c338:	dec    edx
  40c339:	je     0x40c3b2
  40c33b:	push   ebx
  40c33c:	xor    edi,DWORD PTR [eax-0x7f]
  40c33f:	dec    edi
  40c340:	adc    BYTE PTR [eax-0x387ac210],ah
  40c346:	inc    esi
  40c347:	add    BYTE PTR [ebx+esi*1],ah
  40c34a:	sti    
  40c34b:	push   0xd35da224
  40c350:	lods   eax,DWORD PTR ds:[esi]
  40c351:	loope  0x40c34d
  40c353:	xchg   al,ch
  40c355:	dec    ebx
  40c356:	or     BYTE PTR [esi+0xd],al
  40c359:	out    dx,al
  40c35a:	repnz xchg edx,eax
  40c35c:	xchg   DWORD PTR [eax-0x3163228f],ebp
  40c362:	xor    edi,DWORD PTR [esi-0x52c91fdc]
  40c368:	xor    ebx,DWORD PTR [esi+eiz*4+0x3fec1988]
  40c36f:	inc    edx
  40c370:	sbb    eax,0xb9af7f3a
  40c375:	cmc    
  40c376:	cdq    
  40c377:	call   0x6f652548
  40c37c:	mov    eax,0x4e335531
  40c381:	shr    DWORD PTR [ebp+0x5616dede],1
  40c387:	push   esp
  40c388:	stos   DWORD PTR es:[edi],eax
  40c389:	outs   dx,BYTE PTR ds:[esi]
  40c38a:	scas   al,BYTE PTR es:[edi]
  40c38b:	pop    eax
  40c38c:	and    al,0x9
  40c38e:	or     esp,DWORD PTR [edx-0x7f]
  40c391:	jns    0x40c3c1
  40c393:	mov    edx,0xcd8f1a74
  40c398:	mov    ch,0x4b
  40c39a:	mov    al,BYTE PTR [ecx+ebx*4]
  40c39d:	sub    eax,0x94a06e62
  40c3a2:	enter  0x92dc,0x63
  40c3a6:	push   edx
  40c3a7:	cmc    
  40c3a8:	cwde   
  40c3a9:	out    dx,eax
  40c3aa:	pop    ebx
  40c3ab:	push   esi
  40c3ac:	add    BYTE PTR [ecx],bl
  40c3ae:	inc    eax
  40c3af:	das    
  40c3b0:	add    bl,BYTE PTR [edi+0xa]
  40c3b3:	jecxz  0x40c400
  40c3b5:	mov    dh,0xd5
  40c3b7:	dec    ecx
  40c3b8:	jne    0x40c38e
  40c3ba:	vpmaxsw zmm1{z},zmm2,ZMMWORD PTR [ecx+ebx*2+0x440]
  40c3c2:	push   es
  40c3c3:	sahf   
  40c3c4:	jno    0x40c35d
  40c3c6:	pusha  
  40c3c7:	sahf   
  40c3c8:	xor    ah,BYTE PTR [esi-0x494252fa]
  40c3ce:	xrelease mov DWORD PTR [edx+0x31],edi
  40c3d2:	aam    0x2d
  40c3d4:	sar    BYTE PTR ds:0xec24705b,1
  40c3da:	jne    0x40c361
  40c3dc:	call   esi
  40c3de:	outs   dx,DWORD PTR ds:[esi]
  40c3df:	pop    eax
  40c3e0:	repz ja 0x40c429
  40c3e3:	mov    BYTE PTR [ebp-0x64305],dl
  40c3e9:	ret    
  40c3ea:	imul   esi,DWORD PTR [eax+0x2b50c2ec],0x44631864
  40c3f4:	cdq    
  40c3f5:	pop    esi
  40c3f6:	dec    ebx
  40c3f7:	jns    0x40c46c
  40c3f9:	dec    ebp
  40c3fa:	push   esp
  40c3fb:	outs   dx,BYTE PTR ds:[esi]
  40c3fc:	adc    DWORD PTR [edi],eax
  40c3fe:	retf   0x597a
  40c401:	vaddpd xmm2,xmm1,XMMWORD PTR [edx-0x4d1592f7]
  40c40a:	mov    bl,0x1c
  40c40c:	jge    0x40c3b3
  40c40e:	or     BYTE PTR [eax+0x4c7a51a4],0x81
  40c415:	pop    ebp
  40c416:	nop
  40c417:	mov    es,WORD PTR [ecx+0x33]
  40c41a:	mov    ecx,0xa7c16a77
  40c41f:	xlat   BYTE PTR ds:[ebx]
  40c420:	dec    edi
  40c421:	aam    0x3a
  40c423:	pop    esp
  40c424:	xchg   ebx,eax
  40c425:	shr    BYTE PTR ds:0x588b265d,0x81
  40c42c:	xor    ah,BYTE PTR [eax+0x1f]
  40c42f:	and    DWORD PTR [eax-0xce82c2f],edi
  40c435:	mov    cl,0x32
  40c437:	js     0x40c3e7
  40c439:	sar    ecx,cl
  40c43b:	jne    0x40c46c
  40c43d:	outs   dx,BYTE PTR ds:[esi]
  40c43e:	adc    BYTE PTR [esi-0x7c91e70],0x5f
  40c445:	in     eax,0xe9
  40c447:	out    dx,al
  40c448:	clc    
  40c449:	mov    eax,0xe440722b
  40c44e:	ret    
  40c44f:	cmp    eax,0xe3ca8eae
  40c454:	xchg   DWORD PTR [ebx+0x5c],esp
  40c457:	sub    cl,dl
  40c459:	pop    eax
  40c45a:	mov    ecx,DWORD PTR [edi]
  40c45c:	inc    ebp
  40c45d:	push   cs
  40c45e:	jne    0x40c42d
  40c460:	retf   0x49c
  40c463:	inc    esi
  40c464:	sub    ebp,edi
  40c466:	jle    0x40c41d
  40c468:	in     eax,dx
  40c469:	jno    0x40c4e2
  40c46b:	xchg   ebp,eax
  40c46c:	and    al,0xa5
  40c46e:	and    esp,0xffffff9d
  40c471:	push   0xfff73878
  40c476:	pop    edx
  40c477:	jmp    0x40c405
  40c479:	xchg   esp,eax
  40c47a:	jns    0x40c452
  40c47c:	mov    dh,0xa
  40c47e:	dec    esi
  40c47f:	out    dx,eax
  40c480:	mov    ?,WORD PTR [edx]
  40c482:	lea    esp,[edx+0x4750ad5c]
  40c488:	out    dx,eax
  40c489:	mov    ebx,0x45f6291c
  40c48e:	xor    ah,dl
  40c490:	cli    
  40c491:	gs mov ecx,0x9bfb7c4b
  40c497:	fwait
  40c498:	mov    ch,BYTE PTR [eax+0x2aa69931]
  40c49e:	ret    
  40c49f:	idiv   BYTE PTR [ecx-0x6c6bfa4]
  40c4a5:	das    
  40c4a6:	sub    BYTE PTR [ebx-0x25],bh
  40c4a9:	rcl    BYTE PTR [ecx-0x33],1
  40c4ac:	out    dx,al
  40c4ad:	add    BYTE PTR ds:0x8c99b9e4,ah
  40c4b3:	cwde   
  40c4b4:	jmp    0x9223a1e7
  40c4b9:	sbb    ecx,edx
  40c4bb:	add    al,0x5
  40c4bd:	dec    esp
  40c4be:	ja     0x40c4af
  40c4c0:	push   esi
  40c4c1:	push   eax
  40c4c2:	fadd   DWORD PTR [edx+ebx*4+0x5]
  40c4c6:	xchg   ebp,eax
  40c4c7:	fisubr WORD PTR [ecx-0x318d775e]
  40c4cd:	std    
  40c4ce:	inc    ecx
  40c4cf:	ret    0x5df4
  40c4d2:	or     al,0xe0
  40c4d4:	lods   eax,DWORD PTR ds:[esi]
  40c4d5:	dec    ecx
  40c4d6:	es or  bl,0x1d
  40c4da:	mov    dl,0xd3
  40c4dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4dd:	outs   dx,BYTE PTR fs:[esi]
  40c4df:	out    0x82,eax
  40c4e1:	mov    ch,0xeb
  40c4e3:	cmp    al,0xde
  40c4e5:	xor    eax,0xfcfee040
  40c4ea:	dec    esi
  40c4eb:	popf   
  40c4ec:	inc    ebp
  40c4ed:	sbb    eax,0x3a2d76d0
  40c4f2:	pop    esp
  40c4f3:	inc    eax
  40c4f4:	add    al,BYTE PTR [esi+0x7b0adc4c]
  40c4fa:	pusha  
  40c4fb:	sbb    al,0x3c
  40c4fd:	icebp  
  40c4fe:	jno    0x40c4ea
  40c500:	in     al,dx
  40c501:	mov    esi,DWORD PTR [ebx+edx*8]
  40c504:	push   edx
  40c505:	pop    eax
  40c506:	inc    edi
  40c507:	pop    ecx
  40c508:	inc    esi
  40c509:	dec    ebp
  40c50a:	daa    
  40c50b:	aad    0xc
  40c50d:	data16 test al,0x8d
  40c510:	call   0xf42:0xa9cea14f
  40c517:	mov    ah,0x21
  40c519:	mov    esp,0x2becbed0
  40c51e:	push   esi
  40c51f:	jns    0x40c4d2
  40c521:	sbb    ah,BYTE PTR [edi]
  40c523:	adc    BYTE PTR [ebx],ch
  40c525:	fwait
  40c526:	xor    al,0x67
  40c528:	pop    edi
  40c529:	mul    BYTE PTR [ebp+0x53537630]
  40c52f:	inc    ecx
  40c530:	inc    edx
  40c531:	sbb    al,0xb6
  40c534:	xchg   ebp,eax
  40c535:	mov    ebx,DWORD PTR [eax]
  40c537:	inc    edx
  40c538:	jge    0x40c55b
  40c53a:	jge    0x40c584
  40c53c:	daa    
  40c53d:	inc    eax
  40c53e:	sub    BYTE PTR [eax],0x7a
  40c541:	cmp    ah,ah
  40c543:	pop    ebp
  40c544:	lea    ebp,ds:0x2d02355b
  40c54a:	mov    edi,0xf32948d
  40c54f:	mov    bl,0x71
  40c551:	mov    ecx,0xbad6723b
  40c556:	push   ebx
  40c557:	mov    ah,0x24
  40c559:	in     eax,dx
  40c55a:	ret    0xaf00
  40c55d:	push   edi
  40c55e:	call   0x83b84f19
  40c563:	pushf  
  40c564:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c565:	enter  0x67f1,0xba
  40c569:	popa   
  40c56a:	popf   
  40c56b:	aas    
  40c56c:	popf   
  40c56d:	not    BYTE PTR [ebx-0x257b787d]
  40c573:	xor    eax,ebx
  40c575:	jnp    0x40c582
  40c577:	sti    
  40c578:	jecxz  0x40c527
  40c57a:	in     al,0x1
  40c57c:	cmp    bh,BYTE PTR [ebp+0x76]
  40c57f:	pop    ebx
  40c580:	arpl   WORD PTR [eax-0x2d],si
  40c583:	sub    dl,ah
  40c585:	ins    BYTE PTR es:[edi],dx
  40c586:	inc    ecx
  40c587:	pusha  
  40c588:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c589:	pusha  
  40c58a:	jns    0x40c606
  40c58c:	or     al,0x49
  40c58e:	adc    eax,0x30e37220
  40c593:	inc    ebx
  40c594:	je     0x40c564
  40c596:	and    al,0x62
  40c598:	bswap  ecx
  40c59a:	dec    esp
  40c59b:	mov    DWORD PTR [edi+0x25],ebp
  40c59e:	fld    QWORD PTR [edx+0x1b]
  40c5a1:	lock sahf 
  40c5a3:	xchg   edi,eax
  40c5a4:	stos   BYTE PTR es:[edi],al
  40c5a5:	call   0x5cd2:0x10f6d2b3
  40c5ac:	in     al,0x90
  40c5ae:	push   ebx
  40c5af:	add    al,0x33
  40c5b1:	sub    esi,esi
  40c5b3:	lea    eax,[eax]
  40c5b5:	aad    0x1a
  40c5b7:	sub    eax,0xdd68be0
  40c5bc:	sbb    DWORD PTR [ecx],ebx
  40c5be:	leave  
  40c5bf:	sbb    edi,DWORD PTR [esi+0x21f63827]
  40c5c5:	mov    ebp,0xdc8cd5df
  40c5ca:	xor    DWORD PTR [esi+0x44],edx
  40c5cd:	dec    ecx
  40c5ce:	jns    0x40c63a
  40c5d0:	aam    0x77
  40c5d2:	xor    ch,BYTE PTR [eax]
  40c5d4:	mov    al,0x3c
  40c5d6:	add    edi,DWORD PTR [ebx+ecx*8+0x147974e4]
  40c5dd:	mov    eax,ds:0xc0ae3480
  40c5e2:	adc    esp,DWORD PTR [edi+0x51]
  40c5e5:	test   DWORD PTR [ecx+0x3d],esp
  40c5e8:	aam    0x2
  40c5ea:	ror    BYTE PTR [ecx],cl
  40c5ec:	ins    DWORD PTR es:[edi],dx
  40c5ed:	lds    ecx,FWORD PTR [eax+0x706ea764]
  40c5f3:	inc    ebx
  40c5f4:	adc    eax,esi
  40c5f6:	int    0x8d
  40c5f8:	and    eax,0xebc43c5e
  40c5fd:	(bad)  
  40c5fe:	shr    DWORD PTR [esp+eax*8-0x6231bef5],1
  40c605:	call   0x4aa5:0xa96faaf9
  40c60c:	inc    esi
  40c60d:	enter  0x50f9,0xd4
  40c611:	lea    ebx,cs:[edx]
  40c614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c615:	xchg   esp,eax
  40c616:	popf   
  40c617:	sar    DWORD PTR [edx+edx*4+0x1f],cl
  40c61b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c61c:	and    dh,ch
  40c61e:	hlt    
  40c61f:	cmp    eax,0x36b4f919
  40c624:	and    eax,0x6bccea63
  40c629:	sub    bh,bl
  40c62b:	adc    al,0x88
  40c62d:	xchg   edi,eax
  40c62e:	stos   BYTE PTR es:[edi],al
  40c62f:	mov    ecx,DWORD PTR [esp+edx*8+0xe24e097]
  40c636:	jl     0x40c624
  40c638:	int3   
  40c639:	popa   
  40c63a:	fcmovnu st,st(6)
  40c63c:	mov    dl,0x60
  40c63e:	jnp    0x40c6a9
  40c640:	out    dx,al
  40c641:	cmp    eax,0x316fc190
  40c646:	mov    ecx,DWORD PTR [edx]
  40c648:	cmp    BYTE PTR [ecx+ebx*4],ah
  40c64b:	sub    al,0x7b
  40c64d:	inc    esp
  40c64e:	test   BYTE PTR [esp+esi*8+0x7585af09],cl
  40c655:	sbb    dh,bl
  40c657:	call   0x7912a0a5
  40c65c:	adc    bl,dl
  40c65e:	xor    edi,DWORD PTR [eax-0x299b4b63]
  40c664:	cmp    al,0xd8
  40c666:	adc    BYTE PTR [ecx+0x65],bl
  40c669:	push   ebp
  40c66a:	fld    TBYTE PTR [ecx]
  40c66c:	test   eax,0xb430eb90
  40c671:	adc    esi,ebx
  40c673:	out    dx,al
  40c674:	sbb    bl,BYTE PTR [eax]
  40c676:	sub    al,0x97
  40c678:	mov    ebp,0xc48f7fe1
  40c67d:	je     0x40c6c5
  40c67f:	fs mov eax,ebp
  40c682:	dec    esi
  40c683:	push   edx
  40c684:	add    eax,0x6d5cbba1
  40c689:	sbb    al,0x45
  40c68b:	ja     0x40c670
  40c68d:	xchg   edx,eax
  40c68e:	sub    DWORD PTR [eax],ebx
  40c690:	mov    al,ds:0x880000f0
  40c695:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c696:	out    dx,al
  40c697:	shr    DWORD PTR [esi],cl
  40c699:	mov    ebp,edi
  40c69b:	inc    esi
  40c69c:	mov    BYTE PTR [eax-0x4a],ah
  40c69f:	fxch   st(4)
  40c6a1:	sub    BYTE PTR [edi+esi*8],al
  40c6a4:	xor    eax,0xc52d040
  40c6a9:	out    dx,eax
  40c6aa:	cs mov ebp,0xaaf73ed3
  40c6b0:	loope  0x40c6b1
  40c6b2:	push   es
  40c6b3:	sti    
  40c6b4:	mov    ?,WORD PTR [ebx]
  40c6b6:	jecxz  0x40c689
  40c6b8:	cmp    bl,BYTE PTR [ecx+0x522b4fc1]
  40c6be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6bf:	mov    BYTE PTR [edx],cl
  40c6c1:	lea    edi,[esi-0x3f]
  40c6c4:	aaa    
  40c6c5:	jns    0x40c699
  40c6c7:	push   edi
  40c6c8:	mov    WORD PTR [ebx-0x5f],fs
  40c6cb:	xchg   esp,eax
  40c6cc:	push   ebp
  40c6cd:	gs jl  0x40c736
  40c6d0:	je     0x40c6d9
  40c6d2:	in     eax,dx
  40c6d3:	enter  0xbd49,0x53
  40c6d7:	fild   DWORD PTR [ebx+edx*4+0x753d075]
  40c6de:	sub    BYTE PTR [ecx+0x35b3b643],dl
  40c6e4:	popa   
  40c6e5:	and    bh,bh
  40c6e7:	fcomp  st(6)
  40c6e9:	sbb    ah,al
  40c6eb:	lds    ecx,FWORD PTR [ebx+edi*4]
  40c6ee:	ror    DWORD PTR [ebp+0x68],0xf5
  40c6f2:	inc    ebx
  40c6f4:	fisubr WORD PTR [ebx+0x6e421741]
  40c6fa:	or     DWORD PTR [eax+0x20],esp
  40c6fd:	push   edi
  40c6fe:	jnp    0x40c6bb
  40c700:	add    eax,0x85ab2303
  40c705:	fsubr  DWORD PTR [ebx+0x43c14ee]
  40c70b:	loope  0x40c784
  40c70d:	scas   al,BYTE PTR es:[edi]
  40c70e:	(bad)  [ecx-0x32891394]
  40c714:	aad    0xea
  40c716:	sbb    BYTE PTR [edx-0x49b81c76],cl
  40c71c:	pop    ebx
  40c71d:	or     dh,dh
  40c71f:	push   0x2a7193d9
  40c724:	lods   eax,DWORD PTR ds:[esi]
  40c725:	mov    edi,0xe8d513df
  40c72a:	xchg   edi,eax
  40c72b:	(bad)  
  40c72c:	fs stc 
  40c72e:	push   es
  40c72f:	les    ebp,FWORD PTR [eax]
  40c731:	int3   
  40c732:	lea    edi,[edx+0x70934c28]
  40c738:	mov    ecx,0x3b195960
  40c73d:	sub    DWORD PTR [esi+ecx*1-0xb],edx
  40c741:	sahf   
  40c742:	mov    bl,0x90
  40c744:	xlat   BYTE PTR ds:[ebx]
  40c745:	jo     0x40c773
  40c747:	lea    esp,[eax+0x15]
  40c74a:	pop    ss
  40c74b:	call   0xdf8a:0x491b29f7
  40c752:	mov    esp,DWORD PTR [edi+0x4617b2d6]
  40c758:	cmp    eax,edi
  40c75a:	repnz dec ecx
  40c75c:	push   ecx
  40c75d:	push   edi
  40c75e:	push   esp
  40c75f:	adc    al,BYTE PTR [eax+0x60ff65a6]
  40c765:	(bad)  
  40c766:	imul   edx,DWORD PTR [esi],0x5d
  40c769:	push   0xf9d93d16
  40c76e:	sbb    BYTE PTR [eax],cl
  40c770:	push   ebx
  40c771:	rol    edx,1
  40c773:	add    DWORD PTR [ecx],ebx
  40c775:	fisttp DWORD PTR [esi+0x38a51bcd]
  40c77b:	inc    BYTE PTR [ebp-0x7dc373ef]
  40c781:	(bad)  
  40c782:	arpl   WORD PTR [edi+0x33ee3bf3],di
  40c788:	retf   
  40c789:	(bad)  
  40c78a:	xlat   BYTE PTR ds:[ebx]
  40c78b:	inc    esi
  40c78c:	cmp    BYTE PTR [ebx],bl
  40c78e:	dec    esp
  40c78f:	and    DWORD PTR [ecx],0x5f76f608
  40c795:	mov    esi,0x346cc55b
  40c79a:	(bad)  [eax+edi*8+0x25]
  40c79e:	inc    edx
  40c79f:	jmp    0xd71b:0x80687ef1
  40c7a6:	test   BYTE PTR [ecx+ebx*1+0x33079188],ch
  40c7ad:	xor    BYTE PTR [ebx+0x1cf79a4f],al
  40c7b3:	pop    edi
  40c7b4:	aas    
  40c7b5:	test   al,0xdb
  40c7b7:	lea    esp,[ebp-0x62]
  40c7ba:	push   eax
  40c7bb:	jae    0x40c7ec
  40c7bd:	pop    ecx
  40c7be:	sbb    al,0x8f
  40c7c0:	aaa    
  40c7c1:	cmp    BYTE PTR [ebx+edx*1-0x5a],bh
  40c7c5:	icebp  
  40c7c6:	add    al,0x9b
  40c7c8:	cli    
  40c7c9:	ins    BYTE PTR es:[edi],dx
  40c7ca:	gs pop edi
  40c7cc:	inc    edi
  40c7cd:	sbb    eax,0x2b28075b
  40c7d2:	lods   al,BYTE PTR ds:[esi]
  40c7d3:	cmp    al,0xe4
  40c7d5:	mov    cl,0x49
  40c7d7:	cmp    WORD PTR [esi-0x5b97ea71],sp
  40c7de:	or     bl,BYTE PTR [ecx]
  40c7e0:	xor    eax,0xfecea23a
  40c7e5:	mov    edx,0x87d41a6
  40c7ea:	inc    edi
  40c7eb:	mov    al,0x91
  40c7ed:	xchg   edi,eax
  40c7ee:	inc    ecx
  40c7ef:	mov    edx,0xfcc8f1d9
  40c7f4:	sub    al,0x1f
  40c7f6:	inc    edx
  40c7f7:	pop    es
  40c7f8:	inc    ebx
  40c7f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7fa:	repnz cmp DWORD PTR [esi],edi
  40c7fd:	je     0x40c7cf
  40c7ff:	sbb    dl,BYTE PTR [ebx+0x39]
  40c802:	inc    ecx
  40c803:	imul   ebx,DWORD PTR [ecx+0x5e],0x5c
  40c807:	xor    eax,0xb25c55bf
  40c80c:	test   BYTE PTR [eax-0x5],bl
  40c80f:	mov    ah,0x7a
  40c811:	xchg   DWORD PTR [esi+0x40f287a4],eax
  40c817:	inc    ebx
  40c818:	mov    edx,0x9a8b00f8
  40c81d:	sbb    ch,0x25
  40c820:	xlat   BYTE PTR ds:[ebx]
  40c821:	sbb    BYTE PTR [eax+0x53e369f9],cl
  40c827:	sub    eax,0xb2701e40
  40c82c:	cmp    eax,0x7949d06d
  40c831:	or     edx,DWORD PTR ds:0xb7bfffae
  40c837:	push   ebx
  40c838:	xchg   ebx,eax
  40c839:	sub    edi,0xffffffd3
  40c83c:	xchg   esi,eax
  40c83d:	cwde   
  40c83e:	or     ah,BYTE PTR [eax]
  40c840:	xor    dh,BYTE PTR [ecx-0x4c]
  40c843:	xchg   esp,eax
  40c844:	mov    ebp,0x7480842f
  40c849:	jns    0x40c84a
  40c84b:	pop    es
  40c84c:	std    
  40c84d:	xor    ebp,DWORD PTR [esi+0x1f]
  40c850:	mov    dh,0x75
  40c852:	cld    
  40c853:	jae    0x40c888
  40c855:	jl     0x40c863
  40c857:	sbb    DWORD PTR [ecx+ecx*1-0x6232f59f],ebx
  40c85e:	xlat   BYTE PTR ds:[ebx]
  40c85f:	inc    edi
  40c860:	scas   al,BYTE PTR es:[edi]
  40c861:	cmp    DWORD PTR [eax-0xb340976],ebp
  40c867:	in     al,dx
  40c868:	pop    esi
  40c869:	mov    cl,0x46
  40c86b:	mov    ecx,0xa3870e50
  40c870:	jbe    0x40c882
  40c872:	push   eax
  40c873:	and    edx,0x3c3043e2
  40c879:	mov    dl,0x96
  40c87b:	inc    ecx
  40c87c:	mov    ch,0x9b
  40c87e:	add    DWORD PTR [eax-0x51b7c0ed],ecx
  40c884:	cmp    BYTE PTR [ecx+0x6f87b302],dl
  40c88a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c88b:	dec    esi
  40c88c:	loop   0x40c8d1
  40c88e:	mov    ch,0x4a
  40c890:	lock sub al,0xb3
  40c893:	dec    ebx
  40c894:	and    al,0x17
  40c896:	cmp    al,0xab
  40c898:	test   BYTE PTR [ebp+0x33],ah
  40c89b:	fistp  WORD PTR [edi-0x3]
  40c89e:	lock mov ch,cl
  40c8a1:	xchg   ebx,eax
  40c8a2:	popa   
  40c8a3:	aas    
  40c8a4:	fst    DWORD PTR [ebx+0x4f611627]
  40c8aa:	fiadd  DWORD PTR [ecx]
  40c8ac:	fs dec eax
  40c8ae:	test   BYTE PTR [ecx+0x4b3ef7c8],0x18
  40c8b5:	mov    al,0xfa
  40c8b7:	fmul   QWORD PTR [edi+0x7095ee83]
  40c8bd:	jl     0x40c846
  40c8bf:	sub    edi,0x5b
  40c8c2:	aad    0xd9
  40c8c4:	cmp    esi,DWORD PTR [edi]
  40c8c6:	cmp    al,0x26
  40c8c8:	mov    bl,0xa0
  40c8ca:	mov    ecx,0xfe33f977
  40c8cf:	xchg   ecx,eax
  40c8d0:	xor    DWORD PTR [ecx+0x2965fdc4],ebx
  40c8d6:	out    0x31,eax
  40c8d8:	sbb    ah,dl
  40c8da:	xlat   BYTE PTR ds:[ebx]
  40c8db:	inc    eax
  40c8dc:	adc    bl,BYTE PTR [eax]
  40c8de:	std    
  40c8df:	xor    ecx,DWORD PTR [edx-0x18]
  40c8e2:	daa    
  40c8e3:	mov    ecx,0xc044ec04
  40c8e8:	leave  
  40c8e9:	or     cl,BYTE PTR [esi]
  40c8eb:	mov    ah,BYTE PTR [edx-0x47071809]
  40c8f1:	sub    DWORD PTR [edi+esi*1],esi
  40c8f4:	xlat   BYTE PTR ds:[ebx]
  40c8f5:	inc    ebp
  40c8f6:	push   cs
  40c8f7:	inc    DWORD PTR [eax-0x53]
  40c8fa:	add    ebx,DWORD PTR [eiz*8-0x3c7674e2]
  40c901:	div    dl
  40c903:	in     eax,0x78
  40c905:	fimul  WORD PTR [ecx+eiz*4-0x3d380168]
  40c90c:	dec    esp
  40c90d:	pop    edx
  40c90e:	mov    al,ds:0x5054831f
  40c913:	es dec edi
  40c915:	jp     0x40c897
  40c917:	(bad)  [edi]
  40c919:	stos   DWORD PTR es:[edi],eax
  40c91a:	dec    ebx
  40c91b:	cwde   
  40c91c:	int    0x8e
  40c91e:	popa   
  40c91f:	cdq    
  40c920:	pop    ds
  40c921:	lods   al,BYTE PTR ds:[esi]
  40c922:	push   edx
  40c923:	aas    
  40c924:	jl     0x40c8be
  40c926:	mov    al,0xf0
  40c928:	and    BYTE PTR [edi-0x11],dh
  40c92b:	out    dx,al
  40c92c:	in     al,dx
  40c92d:	call   0x901a:0xc39df2b6
  40c934:	jns    0x40c940
  40c936:	push   0xffffffbb
  40c938:	js     0x40c8e4
  40c93a:	(bad)  
  40c93c:	push   ecx
  40c93d:	cwde   
  40c93e:	push   es
  40c93f:	push   ds
  40c940:	pusha  
  40c941:	cdq    
  40c942:	inc    edx
  40c943:	frstor [edi+0x65]
  40c946:	pop    eax
  40c947:	and    esp,eax
  40c949:	repz into 
  40c94b:	sbb    esp,DWORD PTR [ebp-0x70]
  40c94e:	add    DWORD PTR [ebx+ecx*1],ebx
  40c951:	push   ss
  40c952:	pop    ecx
  40c953:	adc    ah,al
  40c955:	mov    BYTE PTR [ebx+ebx*4-0x3711fcf5],bh
  40c95c:	dec    edx
  40c95d:	je     0x40c9d5
  40c95f:	xchg   ebx,eax
  40c960:	mov    ah,0xbb
  40c962:	pop    esi
  40c963:	jle    0x40c971
  40c965:	sahf   
  40c966:	mov    ah,0x14
  40c968:	xchg   ecx,eax
  40c969:	ja     0x40c9a9
  40c96b:	test   eax,0x9c900ba5
  40c970:	mov    bh,0x70
  40c972:	or     ah,BYTE PTR [ebx-0x550638ca]
  40c978:	pop    edi
  40c979:	mov    cl,0x65
  40c97b:	cmp    al,BYTE PTR [ebx+eax*4-0x31]
  40c97f:	sub    eax,0xa2b02f1e
  40c984:	retf   0x77a9
  40c987:	icebp  
  40c988:	cld    
  40c989:	cmp    DWORD PTR [ecx-0x667708ef],ecx
  40c98f:	dec    esi
  40c990:	fiadd  WORD PTR [ecx+ecx*4]
  40c993:	push   ss
  40c994:	dec    ebp
  40c995:	idiv   bl
  40c997:	aas    
  40c998:	add    al,0x2b
  40c99a:	push   esi
  40c99b:	fwait
  40c99c:	mov    ebx,0xed468018
  40c9a1:	dec    edx
  40c9a2:	inc    esi
  40c9a3:	pop    es
  40c9a4:	es adc eax,ecx
  40c9a7:	lock jne 0x40c936
  40c9aa:	xor    dl,dl
  40c9ac:	and    al,0x10
  40c9ae:	dec    eax
  40c9af:	xor    BYTE PTR [ebp+0x53463164],0x8d
  40c9b6:	inc    ecx
  40c9b7:	popa   
  40c9b8:	mov    BYTE PTR [edi],ch
  40c9ba:	add    eax,0xf0eb8d7d
  40c9bf:	and    bh,BYTE PTR [edx-0x247c4acf]
  40c9c5:	jmp    0x6f36:0xa7d622aa
  40c9cc:	rol    BYTE PTR [esi],1
  40c9ce:	sbb    dl,dh
  40c9d0:	fisttp DWORD PTR [edx-0x9d311b4]
  40c9d6:	je     0x40c97f
  40c9d8:	pop    esi
  40c9d9:	cmp    eax,0x159d4bca
  40c9de:	inc    esp
  40c9df:	mov    ebx,0xd23f4012
  40c9e4:	loope  0x40ca39
  40c9e6:	push   cs
  40c9e7:	mov    ebx,0x9a8db9d3
  40c9ec:	cmp    al,0x54
  40c9ee:	inc    esp
  40c9ef:	pop    esp
  40c9f0:	outs   dx,DWORD PTR ds:[esi]
  40c9f1:	sub    BYTE PTR gs:[edi+0x29],bh
  40c9f5:	jb     0x40c978
  40c9f7:	ins    DWORD PTR es:[edi],dx
  40c9f8:	mov    eax,0x6af0a56a
  40c9fd:	jnp    0x40ca32
  40c9ff:	repnz cli 
  40ca01:	mov    edi,0xe7a79773
  40ca06:	and    eax,0x568830d9
  40ca0b:	and    DWORD PTR [eax],esp
  40ca0d:	mov    ds:0x6176b155,eax
  40ca12:	adc    cl,BYTE PTR [ebx-0x29]
  40ca15:	dec    esi
  40ca16:	fisttp DWORD PTR [edx+ecx*4]
  40ca19:	pop    edi
  40ca1a:	jno    0x40ca65
  40ca1c:	cs mul ebx
  40ca1f:	repz xor bh,0xcb
  40ca23:	add    ah,cl
  40ca25:	lock out 0x2c,eax
  40ca28:	push   cs
  40ca29:	mov    ah,BYTE PTR [esi-0x1]
  40ca2c:	test   DWORD PTR [edi+ebx*4+0x4e],ecx
  40ca30:	push   ecx
  40ca31:	dec    ecx
  40ca32:	iret   
  40ca33:	cmp    ch,BYTE PTR [ebp+edx*4+0x508022e0]
  40ca3a:	rep stos DWORD PTR es:[edi],eax
  40ca3c:	sub    al,0xf2
  40ca3e:	and    al,0xd6
  40ca40:	enter  0x5547,0x38
  40ca44:	lahf   
  40ca45:	ret    0xab7d
  40ca48:	and    BYTE PTR [ecx],bl
  40ca4a:	out    0x4b,al
  40ca4c:	mov    ch,0x78
  40ca4e:	je     0x40ca62
  40ca50:	adc    al,0xb0
  40ca52:	sbb    al,dl
  40ca54:	xor    DWORD PTR [ecx+0x415d4ca3],esp
  40ca5a:	fsubr  st(3),st
  40ca5c:	sub    cl,al
  40ca5e:	or     edi,DWORD PTR [ecx+0x54]
  40ca61:	scas   al,BYTE PTR es:[edi]
  40ca62:	fbstp  TBYTE PTR [edi+0x8b3f770]
  40ca68:	sbb    DWORD PTR [ecx+0x51791657],eax
  40ca6e:	ret    
  40ca6f:	and    BYTE PTR [ecx-0x35],bl
  40ca72:	jecxz  0x40ca48
  40ca74:	and    eax,0xd66c1584
  40ca79:	inc    ebx
  40ca7a:	sar    esp,0xb0
  40ca7d:	or     ebp,esp
  40ca7f:	ins    DWORD PTR es:[edi],dx
  40ca80:	cdq    
  40ca81:	and    al,0x7f
  40ca83:	stos   DWORD PTR es:[edi],eax
  40ca84:	or     al,BYTE PTR [ebx+0x3c]
  40ca87:	push   esi
  40ca88:	dec    esp
  40ca89:	xlat   BYTE PTR ds:[ebx]
  40ca8a:	add    al,0x38
  40ca8c:	pop    ds
  40ca8d:	jno    0x40caad
  40ca8f:	sahf   
  40ca90:	loop   0x40ca21
  40ca92:	lds    ebx,FWORD PTR [edi+0x50cb63d5]
  40ca98:	sahf   
  40ca99:	into   
  40ca9a:	pop    edx
  40ca9b:	mov    al,0x1d
  40ca9d:	xor    DWORD PTR ds:0x703cacf5,0xcd983960
  40caa7:	sar    BYTE PTR [edx+edi*4+0x2b],cl
  40caab:	in     eax,0x7e
  40caad:	pop    ebx
  40caae:	add    DWORD PTR [eax],ebx
  40cab0:	mov    eax,DWORD PTR [ebp-0x4]
  40cab3:	mov    edi,DWORD PTR [ebp-0x8]
  40cab6:	add    edi,DWORD PTR [eax]
  40cab8:	mov    DWORD PTR [ebp-0x8],edi
  40cabb:	mov    eax,DWORD PTR [ebp+0xc]
  40cabe:	mov    edi,DWORD PTR [ebp+0xc]
  40cac1:	xor    edi,ecx
  40cac3:	xor    eax,ecx
  40cac5:	lea    eax,[eax+edi*1+0x64e5ba]
  40cacc:	mov    edi,DWORD PTR [ebp+0xc]
  40cacf:	xor    edi,ecx
  40cad1:	add    edi,edx
  40cad3:	imul   eax,edi
  40cad6:	mov    edi,DWORD PTR [ebp+0xc]
  40cad9:	xor    edi,ecx
  40cadb:	sub    edi,eax
  40cadd:	mov    eax,DWORD PTR [ebp-0x4]
  40cae0:	add    edi,edx
  40cae2:	cmp    DWORD PTR [eax],edi
  40cae4:	mov    eax,DWORD PTR [ebp-0x4]
  40cae7:	mov    edi,DWORD PTR [ebp+0x10]
  40caea:	jg     0x40cafd
  40caf0:	xor    edi,ecx
  40caf2:	mov    ebx,esi
  40caf4:	sub    ebx,edi
  40caf6:	add    DWORD PTR [eax],ebx
  40caf8:	jmp    0x40cb03
  40cafd:	xor    edi,ecx
  40caff:	add    edi,edx
  40cb01:	add    DWORD PTR [eax],edi
  40cb03:	mov    eax,DWORD PTR [ebp-0x8]
  40cb06:	mov    edi,DWORD PTR [ebp-0x10]
  40cb09:	mov    eax,DWORD PTR [eax]
  40cb0b:	xor    edi,ecx
  40cb0d:	add    edi,0x3272dc
  40cb13:	not    edi
  40cb15:	and    eax,edi
  40cb17:	movsx  di,BYTE PTR [eax+0x1]
  40cb1c:	mov    ebx,0x3b4c
  40cb21:	sub    di,bx
  40cb24:	mov    ebx,0x8a89
  40cb29:	xor    di,bx
  40cb2c:	mov    ebx,0x4f87
  40cb31:	cmp    di,bx
  40cb34:	jne    0x40cb5c
  40cb3a:	movsx  di,BYTE PTR [eax]
  40cb3e:	mov    ebx,0x3b4c
  40cb43:	sub    di,bx
  40cb46:	mov    ebx,0x8a89
  40cb4b:	xor    di,bx
  40cb4e:	mov    ebx,0x4f88
  40cb53:	cmp    di,bx
  40cb56:	je     0x40cb6c
  40cb5c:	mov    edi,DWORD PTR [ebp-0x10]
  40cb5f:	xor    edi,ecx
  40cb61:	mov    ebx,esi
  40cb63:	sub    ebx,edi
  40cb65:	add    eax,ebx
  40cb67:	jmp    0x40cb17
  40cb6c:	mov    esi,DWORD PTR [ebp-0x14]
  40cb6f:	mov    esi,DWORD PTR [esi]
  40cb71:	mov    edi,DWORD PTR [eax+0x3c]
  40cb74:	lea    esi,[edi+esi*8+0x78]
  40cb78:	mov    esi,DWORD PTR [esi+eax*1]
  40cb7b:	mov    DWORD PTR [ebp-0x8],esi
  40cb7e:	mov    esi,DWORD PTR [ebp+0x8]
  40cb81:	xor    esi,ecx
  40cb83:	add    esi,edx
  40cb85:	mov    DWORD PTR [ebp-0x14],esi
  40cb88:	mov    esi,DWORD PTR [ebp+0x8]
  40cb8b:	mov    edi,DWORD PTR [ebp-0x8]
  40cb8e:	xor    esi,ecx
  40cb90:	add    esi,edx
  40cb92:	pop    ebx
  40cb93:	cmp    edi,esi
  40cb95:	jne    0x40cbb3
  40cb9b:	mov    eax,DWORD PTR [ebp+0xc]
  40cb9e:	xor    eax,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp-0x8]
  40cba3:	add    eax,edx
  40cba5:	imul   eax,ecx
  40cba8:	mov    DWORD PTR [ebp-0x8],eax
  40cbab:	push   DWORD PTR [ebp+0x18]
  40cbae:	jmp    0x40cc07
  40cbb3:	mov    ecx,DWORD PTR [ebp-0x8]
  40cbb6:	add    ecx,eax
  40cbb8:	mov    DWORD PTR [ebp-0x14],ecx
  40cbbb:	mov    ecx,DWORD PTR [ebp-0x14]
  40cbbe:	mov    ecx,DWORD PTR [ecx+0xc]
  40cbc1:	movsx  cx,BYTE PTR [ecx+eax*1]
  40cbc6:	mov    edx,0x3b4c
  40cbcb:	sub    cx,dx
  40cbce:	mov    edx,0x8a89
  40cbd3:	xor    cx,dx
  40cbd6:	mov    edx,0x4e76
  40cbdb:	cmp    cx,dx
  40cbde:	jne    0x40cbab
  40cbe4:	mov    ecx,DWORD PTR ds:0x42e435
  40cbea:	mov    ecx,DWORD PTR [ecx+0x198]
  40cbf0:	mov    DWORD PTR [ecx],eax
  40cbf2:	jmp    0x40cc18
  40cbf7:	mov    ecx,DWORD PTR [ebp+0x18]
  40cbfa:	cmp    ecx,0xf89c85b2
  40cc00:	jne    0x40cc18
  40cc06:	push   eax
  40cc07:	push   DWORD PTR [ebp+0x14]
  40cc0a:	push   DWORD PTR [ebp+0x10]
  40cc0d:	push   DWORD PTR [ebp+0xc]
  40cc10:	push   DWORD PTR [ebp+0x8]
  40cc13:	call   0x40a327
  40cc18:	pop    edi
  40cc19:	pop    esi
  40cc1a:	leave  
  40cc1b:	ret    0x14
  40cc1e:	push   ebp
  40cc1f:	mov    ebp,esp
  40cc21:	push   ecx
  40cc22:	push   ecx
  40cc23:	add    DWORD PTR ds:0x42b010,edx
  40cc29:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  40cc30:	sub    DWORD PTR ds:0x429024,0x76a8
  40cc3a:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  40cc41:	and    DWORD PTR ds:0x42b018,edi
  40cc47:	mov    eax,DWORD PTR [ebp-0x4]
  40cc4a:	adc    DWORD PTR ds:0x429018,edx
  40cc50:	push   esi
  40cc51:	and    DWORD PTR ds:0x42a000,0x0
  40cc5b:	jmp    0x40cc6d
  40cc60:	mov    esi,DWORD PTR ds:0x42a000
  40cc66:	inc    esi
  40cc67:	mov    DWORD PTR ds:0x42a000,esi
  40cc6d:	cmp    DWORD PTR ds:0x42a000,0x1a
  40cc74:	jae    0x40cc98
  40cc7a:	cmp    DWORD PTR ds:0x42a000,0x26
  40cc81:	jne    0x40cc8d
  40cc87:	call   DWORD PTR ds:0x42ed51
  40cc8d:	jmp    0x40cc60
  40cc92:	sub    edx,0x54cb
  40cc98:	mov    esi,DWORD PTR [ebp-0x8]
  40cc9b:	and    DWORD PTR ds:0x429018,0x0
  40cca5:	jmp    0x40ccb7
  40ccaa:	mov    ecx,DWORD PTR ds:0x429018
  40ccb0:	inc    ecx
  40ccb1:	mov    DWORD PTR ds:0x429018,ecx
  40ccb7:	cmp    DWORD PTR ds:0x429018,0x1e
  40ccbe:	jae    0x40ccf6
  40ccc4:	cmp    DWORD PTR ds:0x429018,0x8
  40cccb:	jne    0x40ccd7
  40ccd1:	call   DWORD PTR ds:0x42ed55
  40ccd7:	cmp    DWORD PTR ds:0x429018,0x7
  40ccde:	jne    0x40ccf1
  40cce4:	mov    ecx,DWORD PTR ds:0x429018
  40ccea:	inc    ecx
  40cceb:	mov    DWORD PTR ds:0x429018,ecx
  40ccf1:	jmp    0x40ccaa
  40ccf6:	mov    edx,0x7510896
  40ccfb:	mov    ecx,DWORD PTR ds:0x42d00c
  40cd01:	sub    DWORD PTR ds:0x42a004,ecx
  40cd07:	xor    eax,edx
  40cd09:	xor    esi,edx
  40cd0b:	mov    DWORD PTR ds:0x42b00c,0x13
  40cd15:	cmp    DWORD PTR ds:0x42b00c,0x0
  40cd1c:	je     0x40cd7c
  40cd22:	cmp    DWORD PTR ds:0x42b00c,0x2
  40cd29:	jne    0x40cd50
  40cd2f:	push   DWORD PTR [ebp-0x14]
  40cd32:	push   0x6af7
  40cd37:	push   0x42b010
  40cd3c:	push   0x84d2
  40cd41:	push   DWORD PTR [ebp-0x10]
  40cd44:	push   DWORD PTR [ebp-0x20]
  40cd47:	push   DWORD PTR [ebp-0x28]
  40cd4a:	call   DWORD PTR ds:0x42ed59
  40cd50:	cmp    DWORD PTR ds:0x42b00c,0x3
  40cd57:	jne    0x40cd6a
  40cd5d:	mov    ecx,DWORD PTR ds:0x42b00c
  40cd63:	dec    ecx
  40cd64:	mov    DWORD PTR ds:0x42b00c,ecx
  40cd6a:	mov    ecx,DWORD PTR ds:0x42b00c
  40cd70:	dec    ecx
  40cd71:	mov    DWORD PTR ds:0x42b00c,ecx
  40cd77:	jmp    0x40cd15
  40cd7c:	mov    ecx,0x3272dd
  40cd81:	add    esi,ecx
  40cd83:	add    eax,ecx
  40cd85:	imul   eax,esi
  40cd88:	mov    esi,DWORD PTR [ebp+0xc]
  40cd8b:	cmp    esi,eax
  40cd8d:	jne    0x40cda9
  40cd93:	mov    eax,DWORD PTR [ebp-0x4]
  40cd96:	mov    esi,DWORD PTR [ebp-0x8]
  40cd99:	xor    eax,edx
  40cd9b:	xor    esi,edx
  40cd9d:	add    eax,ecx
  40cd9f:	add    esi,ecx
  40cda1:	imul   eax,esi
  40cda4:	jmp    0x40f15e
  40cda9:	mov    eax,DWORD PTR [ebp+0xc]
  40cdac:	mov    eax,DWORD PTR [eax+0x78]
  40cdaf:	mov    DWORD PTR [ebp+0xc],eax
  40cdb2:	mov    eax,DWORD PTR [ebp-0x4]
  40cdb5:	mov    esi,DWORD PTR [ebp-0x8]
  40cdb8:	xor    eax,edx
  40cdba:	xor    esi,edx
  40cdbc:	add    eax,ecx
  40cdbe:	add    esi,ecx
  40cdc0:	imul   eax,esi
  40cdc3:	jmp    0x40f13d
  40cdc8:	push   esi
  40cdc9:	pop    ss
  40cdca:	rcl    DWORD PTR [ebx-0x6d],cl
  40cdcd:	fwait
  40cdce:	(bad)  
  40cdcf:	pop    ss
  40cdd0:	push   ds
  40cdd1:	outs   dx,BYTE PTR ds:[esi]
  40cdd2:	adc    DWORD PTR ds:0x3c969b18,ebx
  40cdd8:	fldl2t 
  40cdda:	jp     0x40ce56
  40cddc:	sbb    DWORD PTR [edi+0x7a],ebx
  40cddf:	jp     0x40cd9e
  40cde1:	enter  0x3f32,0xf9
  40cde5:	push   esp
  40cde6:	mov    edx,0xe767883d
  40cdeb:	jb     0x40cddc
  40cded:	cs dec ecx
  40cdef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdf0:	mov    ch,0xd6
  40cdf2:	mov    bl,BYTE PTR [edx]
  40cdf4:	loope  0x40ce42
  40cdf6:	push   ecx
  40cdf7:	mov    eax,0xf135eafc
  40cdfc:	jge    0x40cd85
  40cdfe:	add    BYTE PTR [eax+0x28840709],ah
  40ce04:	inc    esp
  40ce05:	test   BYTE PTR [ebp-0x589de419],bl
  40ce0b:	sbb    ch,BYTE PTR [ecx+edi*2+0x16b9cac4]
  40ce12:	rcl    ebx,0x57
  40ce15:	imul   eax,esp,0x357099c
  40ce1b:	jecxz  0x40ce9b
  40ce1d:	adc    eax,0x30cf77b1
  40ce22:	test   BYTE PTR [edx],ch
  40ce24:	sbb    DWORD PTR [eax-0x2c],0xfffffffe
  40ce28:	les    esp,FWORD PTR [esi+0x71]
  40ce2b:	mov    dh,0x84
  40ce2d:	jns    0x40cdf7
  40ce2f:	push   cs
  40ce30:	xchg   ebx,eax
  40ce31:	sti    
  40ce32:	jmp    0x81ef:0x31d9e069
  40ce39:	mov    ds:0x7975a74c,al
  40ce3e:	dec    esp
  40ce3f:	pop    edx
  40ce40:	mov    dh,0x35
  40ce42:	dec    esi
  40ce43:	xchg   ecx,eax
  40ce44:	cmp    eax,0x32d8db0d
  40ce49:	call   0x3b5e:0x7872fb88
  40ce50:	inc    ebp
  40ce51:	add    esi,DWORD PTR [edx+0xc6058f0]
  40ce57:	rol    DWORD PTR [ebp+0x397058d6],0x26
  40ce5e:	call   0xa112ae6b
  40ce63:	scas   eax,DWORD PTR es:[edi]
  40ce64:	push   ecx
  40ce65:	push   0xffffffca
  40ce67:	popf   
  40ce68:	inc    ecx
  40ce69:	std    
  40ce6a:	loopne 0x40ceaa
  40ce6c:	pop    edi
  40ce6d:	sbb    eax,0xf7bc8a4b
  40ce72:	out    dx,eax
  40ce73:	or     eax,0x26f7dcfc
  40ce78:	scas   eax,DWORD PTR es:[edi]
  40ce79:	inc    esp
  40ce7a:	dec    ecx
  40ce7b:	or     BYTE PTR [edx],ch
  40ce7d:	mov    esi,0xd6d0b364
  40ce82:	(bad)  
  40ce83:	retf   0xb246
  40ce86:	sub    DWORD PTR [edx],0xffffffd7
  40ce89:	lods   eax,DWORD PTR ds:[esi]
  40ce8a:	sub    BYTE PTR [edx-0x58],0xc8
  40ce8e:	xchg   BYTE PTR [ebp+0x7fd68ecb],dh
  40ce94:	repnz xchg ebx,eax
  40ce96:	and    DWORD PTR [ebp-0x2f99c4ab],ebx
  40ce9c:	jo     0x40ce62
  40ce9e:	out    dx,eax
  40ce9f:	pop    esp
  40cea0:	int    0x41
  40cea2:	neg    DWORD PTR [edx-0x3e99cc0c]
  40cea8:	push   DWORD PTR [eax+0x7b]
  40ceab:	sub    BYTE PTR [edx],dh
  40cead:	xchg   edx,eax
  40ceae:	xchg   ebp,eax
  40ceaf:	bound  esp,QWORD PTR [eax-0x1faae47b]
  40ceb5:	ret    
  40ceb6:	mov    al,ds:0x80f252d7
  40cebb:	adc    al,0x87
  40cebd:	(bad)  
  40cebe:	mov    ah,0x6f
  40cec0:	adc    BYTE PTR [edx],bl
  40cec2:	sbb    eax,0x16a9b346
  40cec7:	lsl    edx,WORD PTR [ecx]
  40ceca:	clc    
  40cecb:	jp     0x40cea9
  40cecd:	lahf   
  40cece:	test   eax,0x906248a2
  40ced3:	cmp    al,0x77
  40ced5:	and    BYTE PTR [ebx-0x74],dh
  40ced8:	js     0x40ce90
  40ceda:	les    ebx,FWORD PTR [ebx+0x70]
  40cedd:	test   edx,ebp
  40cedf:	mov    eax,ds:0xbf52d95c
  40cee4:	push   es
  40cee5:	adc    eax,0x25fb093f
  40ceea:	pop    esp
  40ceeb:	pop    ss
  40ceec:	arpl   bx,di
  40ceee:	(bad)  
  40ceef:	je     0x40cf41
  40cef1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cef2:	or     bl,BYTE PTR [eax+0x126542b7]
  40cef8:	mov    edx,0x4c57d090
  40cefd:	test   DWORD PTR [eax+edi*2+0x36c7051c],esi
  40cf04:	jo     0x40cefe
  40cf06:	push   ebp
  40cf07:	mov    esp,DWORD PTR [ecx-0x20]
  40cf0a:	xor    eax,0x67b8d9c8
  40cf0f:	xor    BYTE PTR [edi+0x4d],cl
  40cf12:	or     bl,ah
  40cf14:	and    al,0x64
  40cf16:	mov    edx,DWORD PTR [eax+0x618ee7f8]
  40cf1c:	add    DWORD PTR [esi],ebx
  40cf1e:	dec    esi
  40cf1f:	inc    esp
  40cf20:	mov    fs,WORD PTR [ebx+0x16b26cb3]
  40cf26:	and    BYTE PTR [edx-0x18e485bc],bh
  40cf2c:	std    
  40cf2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf2e:	cdq    
  40cf2f:	aas    
  40cf30:	dec    edx
  40cf31:	and    eax,0xa2785a8
  40cf36:	sub    ecx,DWORD PTR [ecx-0x2a]
  40cf39:	push   ds
  40cf3a:	push   ss
  40cf3b:	push   ecx
  40cf3c:	sbb    eax,0x9e58c3c2
  40cf41:	std    
  40cf42:	jg     0x40cf23
  40cf44:	pop    esp
  40cf45:	xor    ebx,DWORD PTR [ebp+0x9a8feb2]
  40cf4b:	jl     0x40ceea
  40cf4d:	dec    ebx
  40cf4e:	sbb    eax,0x21478396
  40cf53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf54:	loop   0x40cf67
  40cf56:	mov    eax,ds:0x9b002580
  40cf5b:	(bad)  
  40cf5c:	and    DWORD PTR [eax+0xe7b3878],ebp
  40cf62:	sti    
  40cf63:	stos   BYTE PTR es:[edi],al
  40cf64:	adc    al,BYTE PTR [eax+eiz*1+0x74]
  40cf68:	ds jp  0x40cf1a
  40cf6b:	imul   ecx,DWORD PTR [ecx-0x35],0xf
  40cf6f:	jbe    0x40cf40
  40cf71:	fdivr  st(1),st
  40cf73:	sbb    BYTE PTR [edx+edi*8-0x1b],al
  40cf77:	and    eax,0x12844a63
  40cf7c:	pop    edx
  40cf7d:	cld    
  40cf7e:	imul   ecx
  40cf80:	hlt    
  40cf81:	cld    
  40cf82:	retf   
  40cf83:	and    edi,esp
  40cf85:	xchg   ebx,eax
  40cf86:	lds    eax,FWORD PTR [esi-0x4150a44f]
  40cf8c:	lahf   
  40cf8d:	aam    0xf1
  40cf8f:	sti    
  40cf90:	dec    ecx
  40cf91:	push   0x2b3cbcc9
  40cf96:	push   ebp
  40cf97:	int    0x4b
  40cf99:	iret   
  40cf9a:	daa    
  40cf9b:	inc    ebx
  40cf9c:	loop   0x40d00c
  40cf9e:	dec    esp
  40cf9f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfa1:	in     eax,0x55
  40cfa3:	mov    ebx,0x236cd1d
  40cfa8:	dec    ebp
  40cfa9:	xchg   esi,eax
  40cfaa:	mov    DWORD PTR [esp+edx*4],esp
  40cfad:	iret   
  40cfae:	fidiv  DWORD PTR [ecx+0x15]
  40cfb1:	js     0x40cfda
  40cfb3:	push   edx
  40cfb4:	jno    0x40cff6
  40cfb6:	call   0xb039:0xecb58b7
  40cfbd:	imul   ebp,DWORD PTR [esi],0xa8cdf856
  40cfc3:	(bad)  
  40cfc4:	jmp    0x40d01f
  40cfc6:	xchg   esi,eax
  40cfc7:	adc    dh,BYTE PTR [edi]
  40cfc9:	push   ds
  40cfca:	dec    edi
  40cfcb:	mov    bh,BYTE PTR ds:0xac808f2d
  40cfd1:	and    dh,BYTE PTR [eax-0x70]
  40cfd4:	shr    BYTE PTR [ecx-0x6b],0x49
  40cfd8:	xchg   ebx,eax
  40cfd9:	jp     0x40cf5f
  40cfdb:	jbe    0x40cfb6
  40cfdd:	adc    edi,esp
  40cfdf:	out    dx,eax
  40cfe0:	test   ah,0x60
  40cfe3:	cmp    esp,esp
  40cfe5:	gs pop edx
  40cfe7:	cdq    
  40cfe8:	and    eax,0x180ebd93
  40cfed:	(bad)  
  40cfee:	ror    esi,1
  40cff0:	ds enter 0x6392,0x56
  40cff5:	inc    esp
  40cff6:	cdq    
  40cff7:	shl    DWORD PTR [edi],cl
  40cff9:	arpl   cx,bp
  40cffb:	fistp  WORD PTR [ebx-0x33]
  40cffe:	rcr    edx,1
  40d000:	cmp    BYTE PTR [ecx-0x7f],bl
  40d003:	mov    cs,ecx
  40d005:	xchg   BYTE PTR [esi-0x11],dl
  40d008:	jle    0x40cff2
  40d00a:	jle    0x40cf98
  40d00c:	pop    ecx
  40d00d:	int3   
  40d00e:	jmp    0x40d00e
  40d010:	enter  0xa783,0xfe
  40d014:	das    
  40d015:	mov    edx,0xfb806edc
  40d01a:	sbb    bl,bl
  40d01c:	shl    BYTE PTR [eax],0x63
  40d01f:	in     al,dx
  40d020:	dec    eax
  40d021:	cmp    eax,0x9b2d861d
  40d026:	mov    ah,0x68
  40d028:	dec    ecx
  40d029:	cld    
  40d02a:	adc    al,BYTE PTR [eax]
  40d02c:	mov    esi,0xf3b0ff16
  40d031:	cs retf 
  40d033:	in     al,dx
  40d034:	add    DWORD PTR [ebp+ebp*1-0x53],edi
  40d038:	jl     0x40d025
  40d03a:	cmp    ebx,0xfffffffb
  40d03d:	mov    dl,0x92
  40d03f:	sbb    ah,BYTE PTR [ebp-0xcaaeeba]
  40d045:	mov    ebp,0x389700d4
  40d04a:	fiadd  DWORD PTR [ebx]
  40d04c:	push   bx
  40d04e:	pop    es
  40d04f:	xchg   DWORD PTR [ecx],ecx
  40d051:	arpl   WORD PTR [ebx+0x3c],cx
  40d054:	inc    ebx
  40d055:	cs jle 0x40d03d
  40d058:	mov    edx,0xc3164d6d
  40d05d:	jmp    0x40d05d
  40d05f:	jp     0x40d071
  40d061:	adc    BYTE PTR ds:0xe50476fe,al
  40d067:	pusha  
  40d068:	mov    al,ds:0x93087295
  40d06d:	stc    
  40d06e:	iret   
  40d06f:	pop    esp
  40d070:	pushf  
  40d071:	jmp    0xd00a:0xca84c320
  40d078:	outs   dx,DWORD PTR ds:[esi]
  40d079:	and    eax,0x24e33aae
  40d07e:	je     0x40d0d3
  40d080:	sbb    DWORD PTR [edi],esp
  40d082:	xchg   BYTE PTR [edi],dh
  40d084:	and    eax,0xc9e62d60
  40d089:	pop    ebx
  40d08a:	pop    esi
  40d08b:	xor    al,0x56
  40d08d:	pop    ebx
  40d08e:	cmp    ecx,esi
  40d090:	in     al,dx
  40d091:	outs   dx,BYTE PTR ds:[esi]
  40d092:	and    DWORD PTR [ecx],ebp
  40d094:	xor    ebx,DWORD PTR [edi+0x78]
  40d097:	mov    ds:0xadd90f45,al
  40d09c:	adc    al,0x6a
  40d09e:	sahf   
  40d09f:	test   al,0xc8
  40d0a1:	imul   edi,DWORD PTR [ebx+0x18dff53b],0xa70808c5
  40d0ab:	or     dl,BYTE PTR [ebx+0x40]
  40d0ae:	test   DWORD PTR [ecx+eax*2+0x61],edx
  40d0b2:	mov    cl,0x26
  40d0b4:	sbb    DWORD PTR [edi+0x7edfcbb5],esi
  40d0ba:	fwait
  40d0bb:	lock inc ebx
  40d0bd:	add    ebx,DWORD PTR [ebp+0x794922a]
  40d0c3:	daa    
  40d0c4:	pmullw mm6,QWORD PTR [ebp+0x2a034df1]
  40d0cb:	adc    eax,0xb0e51f2e
  40d0d0:	pop    eax
  40d0d1:	mov    ss,edi
  40d0d3:	inc    esi
  40d0d4:	jb     0x40d10b
  40d0d6:	add    eax,0x3552da1d
  40d0db:	jno    0x40d094
  40d0dd:	adc    ecx,DWORD PTR [ecx]
  40d0df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0e0:	ror    DWORD PTR [eax-0x30],1
  40d0e3:	jnp    0x40d105
  40d0e5:	out    0x30,eax
  40d0e7:	icebp  
  40d0e8:	fcmovbe st,st(0)
  40d0ea:	jg     0x40d0b4
  40d0ec:	daa    
  40d0ed:	mov    DWORD PTR [ebx-0x5b],ebp
  40d0f0:	add    BYTE PTR [eax+0x287c53e7],0x2a
  40d0f7:	test   BYTE PTR [ebp+0x66],ah
  40d0fa:	jo     0x40d16c
  40d0fc:	setg   BYTE PTR [ebx+0x43]
  40d100:	push   0xc614b1f1
  40d105:	sbb    DWORD PTR [eax],eax
  40d107:	mov    eax,ds:0x7d135b30
  40d10c:	mov    ds:0x1e48ebe8,al
  40d111:	loop   0x40d145
  40d113:	sbb    BYTE PTR [eax+0x24181f82],ch
  40d119:	pop    ebp
  40d11a:	sub    DWORD PTR [esi],ebp
  40d11c:	dec    esp
  40d11d:	(bad)  
  40d11f:	dec    ecx
  40d120:	pop    edi
  40d121:	stos   DWORD PTR es:[edi],eax
  40d122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d123:	xor    bl,BYTE PTR [esi]
  40d125:	jmp    0x23f9:0xc7310607
  40d12c:	aas    
  40d12d:	pop    eax
  40d12e:	mov    ah,0xc2
  40d130:	ds mov ebx,0xb7e9eb60
  40d136:	mul    DWORD PTR [edi]
  40d138:	add    ebp,DWORD PTR [ebp-0x1]
  40d13b:	sbb    dl,cl
  40d13d:	loope  0x40d0cd
  40d13f:	test   al,0xf4
  40d141:	js     0x40d125
  40d143:	scas   al,BYTE PTR es:[edi]
  40d144:	mov    ebx,0x2e550c4f
  40d149:	sbb    al,0xc2
  40d14b:	xor    BYTE PTR ds:0xbc9c578b,al
  40d152:	adc    eax,0x570536a8
  40d157:	adc    al,0x89
  40d15a:	sbb    eax,0x871912c5
  40d15f:	fiadd  WORD PTR [eax-0x647786e1]
  40d165:	(bad)  
  40d167:	mov    edi,0xe9a46cd6
  40d16c:	stos   BYTE PTR es:[edi],al
  40d16d:	ds push 0x3df18ec0
  40d173:	mov    ds:0x1c6ae9d6,al
  40d178:	mov    bh,0x1b
  40d17a:	dec    esi
  40d17b:	test   al,0x54
  40d17d:	gs fldln2 
  40d180:	inc    edx
  40d181:	xchg   esp,eax
  40d182:	mov    ah,0x59
  40d184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d185:	jmp    0x7353ddc5
  40d18a:	inc    eax
  40d18b:	cmc    
  40d18c:	ret    0x3b12
  40d18f:	scas   al,BYTE PTR es:[edi]
  40d190:	xor    cl,cl
  40d192:	add    eax,0xc5f37a09
  40d197:	xchg   BYTE PTR [edi],ch
  40d199:	neg    DWORD PTR [esi]
  40d19b:	js     0x40d14e
  40d19d:	ret    0xf127
  40d1a0:	mov    cl,0x98
  40d1a2:	jge    0x40d172
  40d1a4:	lock jo 0x40d20f
  40d1a7:	rcr    DWORD PTR ds:0xb0d2f8c2,1
  40d1ad:	lahf   
  40d1ae:	xchg   edi,eax
  40d1af:	jle    0x40d1e5
  40d1b1:	out    0x51,al
  40d1b3:	into   
  40d1b4:	pop    es
  40d1b5:	jmp    0xe94f:0xaf43f0df
  40d1bc:	rol    DWORD PTR [edx-0x7ba126ef],0xf6
  40d1c3:	bound  esp,QWORD PTR [edx+0x1a7567e8]
  40d1c9:	xor    DWORD PTR [eax+0x15],0x9ad9e84c
  40d1d0:	cmc    
  40d1d1:	or     eax,0x4111c0e6
  40d1d6:	daa    
  40d1d7:	sub    eax,0x316b68a4
  40d1dc:	jecxz  0x40d174
  40d1de:	nop
  40d1df:	pop    ds
  40d1e0:	pop    ss
  40d1e1:	repnz add edi,DWORD PTR [ecx]
  40d1e4:	idiv   DWORD PTR [esi]
  40d1e6:	lods   eax,DWORD PTR ds:[esi]
  40d1e7:	push   ecx
  40d1e8:	retf   0xe253
  40d1eb:	(bad)  
  40d1ee:	(bad)  
  40d1ef:	fidiv  WORD PTR [esi-0x2]
  40d1f2:	adc    al,0xdf
  40d1f4:	aad    0x45
  40d1f6:	cmp    eax,0x117e73c0
  40d1fb:	adc    al,0xad
  40d1fd:	out    dx,al
  40d1fe:	pushf  
  40d1ff:	int3   
  40d200:	hlt    
  40d201:	and    eax,0xd7bc5705
  40d206:	repnz cli 
  40d208:	and    al,0x67
  40d20a:	jle    0x40d25e
  40d20c:	mov    al,ds:0x78c3451c
  40d211:	sub    eax,ecx
  40d213:	loopne 0x40d1eb
  40d215:	mov    BYTE PTR ds:0xd0c1abc6,dh
  40d21b:	push   0x207f4e3b
  40d220:	mov    ds:0x83cc8b8d,al
  40d225:	cmp    eax,ebx
  40d227:	shr    BYTE PTR [eax-0x2b],0x7d
  40d22b:	scas   al,BYTE PTR es:[edi]
  40d22c:	and    al,0x75
  40d22e:	cs sbb ebp,ebp
  40d231:	call   0x37050ced
  40d236:	inc    ecx
  40d237:	pop    eax
  40d238:	sbb    eax,0x9d1fa0f
  40d23d:	xchg   edi,eax
  40d23e:	data16 jmp 0x40d1d0
  40d241:	jo     0x40d22e
  40d243:	sbb    ecx,ebp
  40d245:	test   eax,0x7edacd39
  40d24a:	sub    eax,0x44b12fde
  40d24f:	mov    ebp,0xc615b6b8
  40d254:	and    DWORD PTR [esi-0x75798fcb],edx
  40d25a:	addr16 push ebx
  40d25c:	sti    
  40d25d:	pop    edi
  40d25e:	pop    esp
  40d25f:	and    ebx,DWORD PTR [esi+eax*4+0x35a8e14a]
  40d266:	fstp   QWORD PTR [esi+0x6a]
  40d269:	das    
  40d26a:	pop    ds
  40d26b:	cs retf 
  40d26d:	xchg   esi,eax
  40d26e:	sbb    eax,DWORD PTR [esi+edx*4+0x1b92cfb5]
  40d275:	ja     0x40d227
  40d277:	mov    bl,0x15
  40d279:	adc    ecx,ecx
  40d27b:	(bad)  
  40d27c:	test   eax,0xb17536a3
  40d281:	fdiv   st(4),st
  40d283:	pop    ecx
  40d284:	ret    
  40d285:	lods   al,BYTE PTR ds:[esi]
  40d286:	adc    edi,edi
  40d288:	(bad)  
  40d289:	adc    dl,ch
  40d28b:	jns    0x40d26f
  40d28d:	(bad)  
  40d28e:	push   edi
  40d28f:	jle    0x40d22a
  40d291:	jle    0x40d310
  40d293:	rcl    edx,1
  40d295:	sbb    eax,0x15802510
  40d29a:	rol    ebp,1
  40d29c:	cdq    
  40d29d:	jmp    0xfd34b275
  40d2a2:	aas    
  40d2a3:	pop    eax
  40d2a4:	jns    0x40d30c
  40d2a6:	ins    BYTE PTR es:[edi],dx
  40d2a7:	fimul  DWORD PTR [edi]
  40d2a9:	mov    ch,0xe1
  40d2ab:	int3   
  40d2ac:	mov    ebx,0x20eb039d
  40d2b1:	mov    bh,al
  40d2b3:	test   BYTE PTR [edi],0xe7
  40d2b6:	add    edi,edx
  40d2b8:	ja     0x40d314
  40d2ba:	icebp  
  40d2bb:	inc    esi
  40d2bc:	data16 jl 0x40d32b
  40d2bf:	cdq    
  40d2c0:	lock sub al,BYTE PTR [edx-0x6c1b70d7]
  40d2c7:	ret    0x2922
  40d2ca:	or     BYTE PTR [edi],0x52
  40d2cd:	push   ds
  40d2ce:	bound  eax,QWORD PTR [edx+0x7f]
  40d2d1:	pop    ds
  40d2d2:	outs   dx,BYTE PTR ds:[esi]
  40d2d3:	fwait
  40d2d4:	dec    BYTE PTR [ecx+esi*1+0x79]
  40d2d8:	sub    eax,0x92c82480
  40d2dd:	outs   dx,BYTE PTR ds:[esi]
  40d2de:	inc    edx
  40d2df:	out    0xfb,al
  40d2e1:	add    cl,bl
  40d2e3:	inc    ecx
  40d2e4:	pop    ebp
  40d2e5:	adc    DWORD PTR [ebx-0x76],edx
  40d2e8:	call   0xc80b:0x15020121
  40d2ef:	outs   dx,BYTE PTR ds:[esi]
  40d2f0:	mov    cl,0x57
  40d2f2:	mov    esp,0xc0870d78
  40d2f7:	repz fwait
  40d2f9:	xchg   ecx,eax
  40d2fa:	lahf   
  40d2fb:	mov    dh,0x60
  40d2fd:	jno    0x40d2ed
  40d2ff:	xchg   esp,eax
  40d300:	or     BYTE PTR [edi-0x5c],0xa6
  40d304:	arpl   WORD PTR [eax-0x43],si
  40d307:	stc    
  40d308:	and    eax,0x24dc719f
  40d30d:	ja     0x40d2b9
  40d30f:	cmp    edi,DWORD PTR [edx+0x25]
  40d312:	les    eax,FWORD PTR [edx+0x79]
  40d315:	lods   eax,DWORD PTR ds:[esi]
  40d316:	nop
  40d317:	stos   BYTE PTR es:[edi],al
  40d318:	or     eax,0xc98e5a8e
  40d31d:	and    BYTE PTR [eax+0xde5332c],al
  40d323:	jle    0x40d2b8
  40d325:	push   eax
  40d326:	inc    eax
  40d327:	in     al,dx
  40d328:	out    dx,al
  40d329:	mov    esi,0x16df4fa7
  40d32e:	pop    ss
  40d32f:	fistp  DWORD PTR [eax-0x388a5a50]
  40d335:	scas   al,BYTE PTR es:[edi]
  40d336:	pop    esi
  40d337:	push   esi
  40d338:	xchg   edi,eax
  40d339:	mov    ch,0x6c
  40d33b:	pop    esp
  40d33c:	popf   
  40d33d:	rcr    DWORD PTR [ecx+0x1211e62a],cl
  40d343:	arpl   ax,bx
  40d345:	mov    ch,0x2b
  40d347:	lock call 0x7bed931a
  40d34d:	ja     0x40d342
  40d34f:	ret    
  40d350:	fld    TBYTE PTR ds:0x650037c2
  40d356:	scas   eax,DWORD PTR es:[edi]
  40d357:	arpl   WORD PTR [edx-0x6a],di
  40d35a:	inc    edx
  40d35b:	mov    ebp,0xa9dd3ba4
  40d360:	adc    DWORD PTR [esi-0x2b6b5506],0xffffffdd
  40d367:	jmp    0x5d9f:0xfc16abc9
  40d36e:	mov    dh,0x47
  40d370:	xchg   edi,eax
  40d371:	sub    esp,ebx
  40d373:	mov    ecx,0x24fc3075
  40d378:	sti    
  40d379:	inc    esp
  40d37a:	cmp    al,bl
  40d37c:	cmp    DWORD PTR [ecx+0x112bc7b9],0xf48fa69d
  40d386:	ret    0x1b69
  40d389:	and    bl,BYTE PTR [esi-0x51]
  40d38c:	stc    
  40d38d:	leave  
  40d38e:	rol    DWORD PTR [esi+0x3d],1
  40d391:	fldcw  WORD PTR [ebx+0x37]
  40d394:	push   ebx
  40d395:	mov    BYTE PTR [ecx],ah
  40d397:	outs   dx,BYTE PTR ds:[esi]
  40d398:	adc    esi,DWORD PTR [esi+0x33]
  40d39b:	push   0x79d56295
  40d3a0:	dec    ebp
  40d3a1:	in     eax,dx
  40d3a2:	aam    0x87
  40d3a4:	aas    
  40d3a5:	lods   eax,DWORD PTR ds:[esi]
  40d3a6:	iret   
  40d3a7:	ins    DWORD PTR es:[edi],dx
  40d3a8:	lods   eax,DWORD PTR ds:[esi]
  40d3a9:	push   eax
  40d3aa:	mov    BYTE PTR [ecx],bh
  40d3ac:	mov    ebp,DWORD PTR [ebx+0x368c65bf]
  40d3b2:	dec    edx
  40d3b3:	sub    al,0xf2
  40d3b5:	or     al,0x7
  40d3b7:	fwait
  40d3b8:	test   BYTE PTR [edx],dl
  40d3ba:	push   es
  40d3bb:	enter  0x78e5,0x3a
  40d3bf:	stos   DWORD PTR es:[edi],eax
  40d3c0:	mov    eax,ds:0x95bf5038
  40d3c5:	aam    0x71
  40d3c7:	xlat   BYTE PTR ds:[ebx]
  40d3c8:	cmp    al,0xf7
  40d3ca:	ss mov bl,0xc6
  40d3cd:	xchg   ebx,eax
  40d3ce:	fisttp WORD PTR [eax+0x31]
  40d3d1:	cmc    
  40d3d2:	pop    esp
  40d3d3:	dec    ebp
  40d3d4:	adc    DWORD PTR [esi+edi*2],edx
  40d3d7:	aas    
  40d3d8:	jl     0x40d452
  40d3da:	ds leave 
  40d3dc:	pop    ebp
  40d3dd:	sahf   
  40d3de:	pop    ds
  40d3df:	jo     0x40d3f3
  40d3e1:	wbinvd 
  40d3e3:	dec    esp
  40d3e4:	out    dx,al
  40d3e5:	repnz dec esi
  40d3e7:	adc    DWORD PTR [edi-0x68],ebx
  40d3ea:	xchg   ebp,eax
  40d3eb:	fistp  QWORD PTR [edx+0x737e415e]
  40d3f1:	xchg   ebx,eax
  40d3f2:	nop    DWORD PTR [esi+ebp*4+0x7ec45d39]
  40d3fa:	pop    esp
  40d3fb:	pop    edi
  40d3fc:	push   ecx
  40d3fd:	mov    cl,0x73
  40d3ff:	nop
  40d400:	sahf   
  40d401:	jnp    0x40d3de
  40d403:	xchg   BYTE PTR [edi+0x4d],bh
  40d406:	js     0x40d3d2
  40d408:	hlt    
  40d409:	repz daa 
  40d40b:	sbb    DWORD PTR [edx],edi
  40d40d:	pushf  
  40d40e:	push   ebx
  40d40f:	mov    DWORD PTR [edx],esp
  40d411:	repz fiadd WORD PTR [ecx+eax*4-0x74]
  40d416:	stc    
  40d417:	push   cs
  40d418:	je     0x40d3cd
  40d41a:	test   eax,0xac4d8784
  40d41f:	pop    ds
  40d420:	dec    esp
  40d421:	push   esi
  40d422:	int3   
  40d423:	out    0xbc,al
  40d425:	retf   0xeffb
  40d428:	fs gs in eax,0xdf
  40d42c:	jmp    0x4abf662e
  40d431:	ret    
  40d432:	lods   eax,DWORD PTR ds:[esi]
  40d433:	adc    eax,DWORD PTR [ebp+ebp*2-0x4b]
  40d437:	adc    al,0x80
  40d439:	pop    ecx
  40d43a:	add    bl,BYTE PTR [ebx-0x3a]
  40d43d:	add    BYTE PTR [eax-0x3a642d85],dh
  40d443:	lahf   
  40d444:	fstp   QWORD PTR [ebp-0x70]
  40d447:	sysenter 
  40d449:	or     eax,0x7c49b5ed
  40d44e:	push   esi
  40d44f:	shl    DWORD PTR [ebx-0x46c8f6b0],cl
  40d455:	sbb    al,0xa8
  40d457:	fwait
  40d458:	into   
  40d459:	out    dx,al
  40d45a:	xchg   DWORD PTR [eax+0x716824fb],edi
  40d460:	sar    DWORD PTR [esp+ebx*1+0x53],1
  40d464:	add    ebx,DWORD PTR [edi-0x4d1c3c5a]
  40d46a:	jae    0x40d4de
  40d46c:	and    al,0x8c
  40d46e:	adc    ebp,0x62
  40d471:	fdiv   st,st(1)
  40d473:	cmp    al,0x60
  40d475:	retf   
  40d476:	bound  esi,QWORD PTR [edx+0x61]
  40d479:	fidiv  WORD PTR [ebp-0x690425c6]
  40d47f:	outs   dx,DWORD PTR ds:[esi]
  40d480:	outs   dx,DWORD PTR ds:[esi]
  40d481:	inc    eax
  40d482:	outs   dx,BYTE PTR ds:[esi]
  40d483:	popa   
  40d484:	out    0xaa,al
  40d486:	outs   dx,BYTE PTR ds:[esi]
  40d487:	jmp    0xbaff2a3b
  40d48c:	or     eax,edi
  40d48e:	dec    edi
  40d48f:	inc    esp
  40d490:	into   
  40d491:	jnp    0x40d413
  40d493:	sbb    DWORD PTR [edi+0x8],ecx
  40d496:	nop
  40d497:	cmp    DWORD PTR [ecx-0x522cd4d3],edi
  40d49d:	jecxz  0x40d4d0
  40d49f:	sub    dl,BYTE PTR ds:[ecx-0x489c9624]
  40d4a6:	ret    0xcd79
  40d4a9:	cmp    DWORD PTR [esi-0x1d],esp
  40d4ac:	sub    eax,DWORD PTR [esi]
  40d4ae:	fadd   QWORD PTR [edi-0x2ccf1518]
  40d4b4:	sbb    BYTE PTR [edi+edi*1+0x5617cf90],cl
  40d4bb:	stc    
  40d4bc:	adc    eax,0x3e255818
  40d4c1:	addr16 test eax,0xad3c193c
  40d4c7:	ss push eax
  40d4c9:	scas   al,BYTE PTR es:[edi]
  40d4ca:	nop
  40d4cb:	mov    ah,0x32
  40d4cd:	mov    eax,ds:0xaadf3a1e
  40d4d2:	adc    ch,BYTE PTR [ebx]
  40d4d4:	inc    ebx
  40d4d5:	repnz (bad)
  40d4d8:	into   
  40d4d9:	enter  0x7ff8,0xea
  40d4dd:	(bad)  
  40d4de:	xlat   BYTE PTR ds:[ebx]
  40d4df:	neg    BYTE PTR [esi]
  40d4e1:	sbb    al,0x2a
  40d4e3:	dec    edi
  40d4e4:	mov    al,ds:0xf3feccdf
  40d4e9:	push   cs
  40d4ea:	jge    0x40d527
  40d4ec:	repz call 0x19f3:0x42c08a66
  40d4f4:	jle    0x40d4ba
  40d4f6:	js     0x40d533
  40d4f8:	nop    DWORD PTR [ecx+0x54d0fc43]
  40d4ff:	xchg   esp,eax
  40d500:	push   0xb4791f36
  40d505:	cmp    DWORD PTR [edi-0x22],esi
  40d508:	cs jmp 0x40d51a
  40d50b:	pop    ebx
  40d50c:	fdivr  DWORD PTR [ecx-0x54]
  40d50f:	cmp    BYTE PTR [edx+ecx*8],bl
  40d512:	xchg   edi,eax
  40d513:	(bad)  
  40d515:	push   ds
  40d516:	inc    esp
  40d517:	inc    edx
  40d518:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d519:	into   
  40d51a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d51b:	dec    edx
  40d51c:	dec    edx
  40d51d:	and    dh,BYTE PTR [ebx+0x7c]
  40d520:	push   ss
  40d521:	sbb    DWORD PTR [edx-0xf],edx
  40d524:	or     al,0xa2
  40d526:	int3   
  40d527:	ja     0x40d4e3
  40d529:	pop    ss
  40d52a:	ins    BYTE PTR es:[edi],dx
  40d52b:	popa   
  40d52c:	or     al,0xa5
  40d52e:	push   edi
  40d52f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d530:	popa   
  40d531:	jmp    0x40d572
  40d533:	out    0x3e,eax
  40d535:	add    dl,al
  40d537:	mov    dl,0xd5
  40d539:	mov    al,0x2a
  40d53b:	das    
  40d53c:	out    0xd0,eax
  40d53e:	xor    DWORD PTR [ebx-0x6b838a50],ebp
  40d544:	sbb    ecx,eax
  40d546:	pop    ss
  40d547:	(bad)  
  40d548:	sahf   
  40d549:	iret   
  40d54a:	or     eax,DWORD PTR [ebx+eax*2+0x39319bfb]
  40d551:	sahf   
  40d552:	dec    edx
  40d553:	sub    ecx,DWORD PTR [ebp+0x26]
  40d556:	sti    
  40d557:	xchg   edx,eax
  40d558:	retf   
  40d559:	sbb    DWORD PTR [ebx],esi
  40d55b:	inc    esp
  40d55c:	mov    ecx,0x87690acc
  40d561:	psraw  mm6,QWORD PTR [ecx+0x4d197a98]
  40d568:	ins    DWORD PTR es:[edi],dx
  40d569:	fisub  WORD PTR [esi-0x2d]
  40d56c:	(bad)  
  40d56d:	add    esp,ebp
  40d56f:	les    ecx,FWORD PTR [ecx]
  40d571:	sbb    BYTE PTR [edi+0x66e785ba],dl
  40d577:	sahf   
  40d578:	imul   edx,DWORD PTR [eax*1-0x5348ac60],0xffffff92
  40d580:	rcr    bh,cl
  40d582:	sti    
  40d583:	dec    edx
  40d584:	mov    al,ds:0x873d8ca1
  40d589:	sbb    BYTE PTR [ecx+0x58],0x75
  40d58d:	pop    ecx
  40d58e:	pushfw 
  40d590:	sbb    BYTE PTR fs:[edx],cl
  40d593:	push   edi
  40d594:	in     eax,dx
  40d595:	jnp    0x40d5eb
  40d597:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d599:	stos   BYTE PTR es:[edi],al
  40d59a:	sbb    al,0xd4
  40d59c:	push   ds
  40d59d:	and    edi,DWORD PTR [edi+0x690796dc]
  40d5a3:	inc    esi
  40d5a4:	mov    ebx,0x70400b9c
  40d5a9:	psubsb mm6,QWORD PTR [ebx+0x2e5c0c50]
  40d5b0:	mov    ah,0x23
  40d5b2:	repz pop esi
  40d5b4:	out    dx,al
  40d5b5:	sub    ch,bh
  40d5b7:	cwde   
  40d5b8:	pop    ss
  40d5b9:	aad    0xa6
  40d5bb:	fld1   
  40d5bd:	mov    ebx,0xf11844f2
  40d5c2:	push   0xc2ce15cc
  40d5c7:	enter  0x2f88,0x85
  40d5cb:	jns    0x40d56d
  40d5cd:	mov    DWORD PTR [ebx],ecx
  40d5cf:	idiv   DWORD PTR [esi+edx*1-0x19f036cd]
  40d5d6:	mov    ebx,ebp
  40d5d8:	pop    eax
  40d5d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5da:	fmul   DWORD PTR [ebx-0x5e]
  40d5dd:	xchg   esi,eax
  40d5de:	call   0x10f1:0x5ad017f1
  40d5e5:	xchg   esi,eax
  40d5e6:	jns    0x40d590
  40d5e8:	mov    cl,0x25
  40d5ea:	jno    0x40d635
  40d5ec:	mov    al,ds:0x2e54bcc
  40d5f1:	mov    esp,0x210924e4
  40d5f6:	retf   
  40d5f7:	xchg   edx,eax
  40d5f8:	pop    ebx
  40d5f9:	pushf  
  40d5fa:	mov    al,0xdb
  40d5fc:	sbb    ebp,ecx
  40d5fe:	mov    esp,0x1ee2ddc
  40d603:	cld    
  40d604:	inc    ebx
  40d605:	rep outs dx,BYTE PTR ds:[esi]
  40d607:	xor    al,0x69
  40d609:	jp     0x40d63e
  40d60b:	mov    ebx,0xd2d5b2a2
  40d610:	xchg   edi,eax
  40d611:	mov    dl,0x2c
  40d613:	(bad)  
  40d614:	std    
  40d615:	rol    BYTE PTR [ebp-0x3d469e6c],1
  40d61b:	arpl   WORD PTR [esi],bx
  40d61d:	lods   eax,DWORD PTR ds:[esi]
  40d61e:	les    esp,FWORD PTR [edi-0x7bc9bdb4]
  40d624:	clc    
  40d625:	dec    edi
  40d626:	push   ebx
  40d627:	repz cli 
  40d629:	sub    cl,0xb0
  40d62c:	mov    ch,0xcc
  40d62e:	mov    al,0x87
  40d630:	mov    ds:0xa099cf50,al
  40d635:	int3   
  40d636:	mov    eax,ds:0xb8226b74
  40d63b:	add    bl,BYTE PTR [ecx-0x79fd0103]
  40d641:	call   0xb11456c6
  40d646:	jae    0x40d60f
  40d648:	xor    dl,ch
  40d64a:	mov    al,0x8c
  40d64c:	xchg   edx,eax
  40d64d:	dec    edi
  40d64e:	pop    ecx
  40d64f:	(bad)  
  40d650:	xor    bl,dh
  40d652:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d653:	inc    ecx
  40d654:	test   eax,0x4adca8e6
  40d659:	pop    esi
  40d65a:	rcr    DWORD PTR [ebx+ebx*1],0x4b
  40d65e:	jnp    0x40d602
  40d660:	sar    BYTE PTR [esi-0x32],cl
  40d663:	and    cl,bh
  40d665:	adc    eax,0xfa22c6aa
  40d66a:	xor    al,0x95
  40d66c:	mov    ds:0xfcbbb660,al
  40d671:	popa   
  40d672:	fcmovu st,st(1)
  40d674:	mov    bl,0x4a
  40d676:	dec    edi
  40d677:	(bad)  
  40d678:	out    0xec,al
  40d67a:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d67c:	out    0x4d,al
  40d67e:	hlt    
  40d67f:	out    0x25,al
  40d681:	cdq    
  40d682:	outs   dx,DWORD PTR ds:[esi]
  40d683:	mov    al,ds:0x7753b880
  40d688:	pop    edx
  40d689:	fist   DWORD PTR [esi]
  40d68b:	popf   
  40d68c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d68d:	pusha  
  40d68e:	xchg   esp,eax
  40d68f:	mov    dl,0x5f
  40d691:	dec    edi
  40d692:	cmp    esi,eax
  40d694:	and    DWORD PTR [ebp+0x25],edi
  40d697:	in     al,0xb8
  40d699:	or     cl,BYTE PTR [edx+0x37]
  40d69c:	mov    eax,cs:0xdcffd01c
  40d6a2:	push   ecx
  40d6a3:	stos   BYTE PTR es:[edi],al
  40d6a4:	lods   al,BYTE PTR ds:[esi]
  40d6a5:	sar    DWORD PTR [ecx+0x48],1
  40d6a8:	adc    eax,0x6bdce457
  40d6ad:	ja     0x40d72d
  40d6af:	les    ebx,FWORD PTR [eax+0xc]
  40d6b2:	ret    0x76f6
  40d6b5:	mov    cl,0xcf
  40d6b7:	mov    bl,0x59
  40d6b9:	inc    edx
  40d6ba:	cwde   
  40d6bb:	dec    esp
  40d6bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6bd:	sahf   
  40d6be:	dec    edi
  40d6bf:	dec    edx
  40d6c0:	fst    DWORD PTR [edi+0x812970b]
  40d6c6:	push   0xbcc7e6ab
  40d6cb:	add    BYTE PTR ss:[edx+0x51b42766],dl
  40d6d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6d3:	lea    ebp,[edi+edi*1-0x4945311a]
  40d6da:	call   0xb855:0x3ef6f47a
  40d6e1:	jae    0x40d710
  40d6e3:	mov    dl,0xf7
  40d6e5:	fbld   TBYTE PTR [ebx-0x31]
  40d6e8:	add    esi,DWORD PTR [edi]
  40d6ea:	xchg   ebx,eax
  40d6eb:	sbb    edx,esp
  40d6ed:	xor    eax,0x844a82c9
  40d6f2:	mov    eax,ds:0x7b024d9e
  40d6f7:	pop    DWORD PTR [ecx+ecx*8+0x3ee93435]
  40d6fe:	test   eax,0xa1fe5621
  40d703:	xor    BYTE PTR [eax],ch
  40d705:	dec    esi
  40d706:	pop    esi
  40d707:	out    0x50,al
  40d709:	jmp    0x40d719
  40d70b:	pop    ebp
  40d70c:	mov    ds:0xe9d0a2e3,eax
  40d711:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d712:	push   es
  40d713:	std    
  40d714:	lahf   
  40d715:	in     eax,0x9b
  40d717:	lods   al,BYTE PTR ds:[esi]
  40d718:	pop    edi
  40d719:	test   BYTE PTR [ecx],dh
  40d71b:	mov    ebx,0x82ec1134
  40d720:	push   eax
  40d721:	not    BYTE PTR [eax+0x42]
  40d724:	addr16 out dx,al
  40d726:	dec    ebp
  40d727:	(bad)  
  40d728:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d729:	idiv   BYTE PTR ds:0x9b6d0137
  40d72f:	add    al,0x2a
  40d731:	dec    ebp
  40d732:	pmaddwd mm4,QWORD PTR [eax+0x755820e5]
  40d739:	adc    al,0x5f
  40d73b:	cld    
  40d73c:	xchg   ecx,eax
  40d73d:	outs   dx,DWORD PTR ds:[esi]
  40d73e:	(bad)  
  40d73f:	outs   dx,BYTE PTR ds:[esi]
  40d740:	out    0x79,al
  40d742:	nop
  40d743:	xor    BYTE PTR [edx],0x82
  40d746:	xor    dh,0x16
  40d749:	push   ss
  40d74a:	aas    
  40d74b:	sub    DWORD PTR [edi+ebp*8],esp
  40d74e:	addr16 fucomi st,st(6)
  40d751:	or     edx,ebx
  40d753:	pop    eax
  40d754:	ins    BYTE PTR es:[edi],dx
  40d755:	mov    al,ds:0xbda2e17b
  40d75a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d75b:	mov    edi,0xcf91de72
  40d760:	loope  0x40d6f5
  40d762:	call   0x2a257ee6
  40d767:	(bad)  
  40d768:	adc    bh,BYTE PTR [edi]
  40d76a:	mov    edx,0x3adb8050
  40d76f:	mov    eax,0x1b36584a
  40d774:	call   0xa5478e97
  40d779:	test   eax,0x6f532d53
  40d77e:	inc    edi
  40d77f:	je     0x40d74f
  40d781:	rol    BYTE PTR [edx+0x9],cl
  40d784:	sbb    ebx,edi
  40d786:	es xchg esi,eax
  40d788:	loope  0x40d7c7
  40d78a:	daa    
  40d78b:	jmp    0xccef:0x62a3adc6
  40d792:	ret    
  40d793:	popa   
  40d794:	mov    al,0x49
  40d796:	pop    edx
  40d797:	stos   DWORD PTR es:[edi],eax
  40d798:	out    0x88,al
  40d79a:	call   0x3b59:0xf5b06644
  40d7a1:	sbb    eax,0x54057adb
  40d7a6:	bound  ecx,QWORD PTR [ecx+0x705193fb]
  40d7ac:	inc    ebx
  40d7ad:	mov    bh,0x70
  40d7af:	ja     0x40d82b
  40d7b1:	or     edx,esp
  40d7b3:	loope  0x40d7a4
  40d7b5:	inc    edx
  40d7b6:	add    ah,BYTE PTR [ecx-0x78b904d]
  40d7bc:	outs   dx,DWORD PTR ds:[esi]
  40d7bd:	shl    BYTE PTR [ebp-0xf],1
  40d7c0:	leave  
  40d7c1:	retf   0x2970
  40d7c4:	xchg   esi,eax
  40d7c5:	out    dx,eax
  40d7c6:	xchg   DWORD PTR es:[edi-0x374d14fb],eax
  40d7cd:	popa   
  40d7ce:	sbb    BYTE PTR [esi],0x26
  40d7d1:	mov    ds:0xc72dc3d2,eax
  40d7d6:	jne    0x40d7d8
  40d7d8:	mov    esi,0x3032d1e4
  40d7dd:	mov    esi,0x33b2a098
  40d7e2:	rcr    BYTE PTR [edx-0x28f87e97],cl
  40d7e8:	loopne 0x40d7c5
  40d7ea:	xchg   ecx,eax
  40d7eb:	xor    DWORD PTR [edx],esp
  40d7ed:	dec    ebp
  40d7ee:	adc    esp,esp
  40d7f0:	add    DWORD PTR [edi],edx
  40d7f2:	mov    esi,0x3dc83d14
  40d7f7:	fbstp  TBYTE PTR [eax-0x5baf0e41]
  40d7fd:	fld    QWORD PTR [eax+0x5f]
  40d800:	and    dh,BYTE PTR [edi+0x19849714]
  40d806:	jecxz  0x40d7ff
  40d808:	fisub  WORD PTR [ecx]
  40d80a:	fmul   DWORD PTR [ecx-0x6960a80d]
  40d810:	xor    DWORD PTR [ecx-0x54],0xffffffad
  40d814:	dec    eax
  40d815:	mov    eax,ds:0x92084dac
  40d81a:	jmp    0x40d840
  40d81c:	outs   dx,DWORD PTR ds:[esi]
  40d81d:	pop    edi
  40d81e:	inc    esi
  40d81f:	aam    0xa0
  40d821:	mov    al,ds:0x399ec2a5
  40d826:	add    bh,BYTE PTR [ecx+eiz*2]
  40d829:	inc    eax
  40d82a:	fistp  WORD PTR [edi+0x49]
  40d82d:	inc    eax
  40d82e:	mov    ch,0x44
  40d830:	xor    al,0x33
  40d832:	les    ebp,FWORD PTR [eax]
  40d834:	mov    al,ds:0x2a300533
  40d839:	xchg   edi,eax
  40d83a:	mov    dh,0x7a
  40d83c:	pop    ss
  40d83d:	xlat   BYTE PTR ds:[ebx]
  40d83e:	lods   al,BYTE PTR ds:[esi]
  40d83f:	inc    edx
  40d840:	out    0x50,eax
  40d842:	popf   
  40d843:	pop    esi
  40d844:	pop    ecx
  40d845:	out    0x26,eax
  40d847:	aad    0xfa
  40d849:	(bad)  
  40d84b:	in     eax,dx
  40d84c:	mov    BYTE PTR [ebx-0x4c36ff4b],ch
  40d852:	gs pop esi
  40d854:	out    dx,al
  40d855:	and    BYTE PTR [ebp+0xb],al
  40d858:	cwde   
  40d859:	mov    dl,BYTE PTR [eax-0x5f59b914]
  40d85f:	fisttp DWORD PTR [eax-0x13]
  40d862:	stc    
  40d863:	div    dh
  40d865:	fadd   QWORD PTR [ebx+0x40]
  40d868:	pop    eax
  40d869:	sahf   
  40d86a:	loop   0x40d839
  40d86c:	push   esp
  40d86d:	das    
  40d86e:	mov    bl,BYTE PTR [ebx]
  40d870:	push   edi
  40d871:	xchg   edi,eax
  40d872:	xchg   esi,eax
  40d873:	or     esi,DWORD PTR [eax-0x1941ec51]
  40d879:	stos   BYTE PTR es:[edi],al
  40d87a:	add    al,0x1f
  40d87c:	out    0xc8,al
  40d87e:	dec    esi
  40d87f:	js     0x40d8a4
  40d881:	sbb    BYTE PTR fs:[esi+0x6e],bl
  40d885:	cmp    BYTE PTR [edx],bl
  40d887:	sti    
  40d888:	cmp    DWORD PTR [esi-0x74],esi
  40d88b:	cs jmp 0x22a6:0x87f05e94
  40d893:	retf   0xbafe
  40d896:	ror    BYTE PTR [eax+edi*2-0x71],1
  40d89a:	or     al,0xa4
  40d89c:	(bad)  
  40d89d:	(bad)  
  40d89e:	int3   
  40d89f:	mov    ds:0xb8ad045,eax
  40d8a4:	in     eax,0x74
  40d8a6:	cmp    al,0x44
  40d8a8:	call   0x35787c86
  40d8ad:	jbe    0x40d91e
  40d8af:	rol    BYTE PTR [ebx+0x9],1
  40d8b2:	xchg   BYTE PTR [eax+0x4e],dl
  40d8b5:	sbb    ebx,DWORD PTR [eax]
  40d8b7:	cli    
  40d8b8:	or     al,0xa5
  40d8ba:	mov    bh,0xd0
  40d8bc:	je     0x40d890
  40d8be:	in     eax,dx
  40d8bf:	jecxz  0x40d8e1
  40d8c1:	popf   
  40d8c2:	push   esp
  40d8c3:	mov    dh,0x19
  40d8c5:	push   cs
  40d8c6:	dec    ecx
  40d8c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8c8:	pop    ebp
  40d8c9:	loopne 0x40d8d1
  40d8cb:	push   ebp
  40d8cc:	dec    esp
  40d8cd:	jl     0x40d872
  40d8cf:	call   0xce1f5400
  40d8d4:	cmp    eax,0x90baeb94
  40d8d9:	mov    dl,0xad
  40d8db:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8dd:	push   esi
  40d8de:	ins    BYTE PTR es:[edi],dx
  40d8df:	push   es
  40d8e0:	cmp    esp,DWORD PTR [edx]
  40d8e2:	icebp  
  40d8e3:	stos   BYTE PTR es:[edi],al
  40d8e4:	push   es
  40d8e5:	sbb    ebx,DWORD PTR [edx-0x6a]
  40d8e8:	xchg   esi,eax
  40d8e9:	aas    
  40d8ea:	or     edi,DWORD PTR [ebp-0x3b47e303]
  40d8f0:	stos   DWORD PTR es:[edi],eax
  40d8f1:	daa    
  40d8f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8f3:	mov    bl,0x9b
  40d8f5:	pop    es
  40d8f6:	addr16 mov dh,0x22
  40d8f9:	out    dx,al
  40d8fa:	sub    ebp,edx
  40d8fc:	outs   dx,DWORD PTR ds:[esi]
  40d8fd:	test   al,0x4a
  40d8ff:	add    bl,BYTE PTR [ebx-0x5350bd85]
  40d905:	int    0x43
  40d907:	es (bad) 
  40d909:	jge    0x40d8da
  40d90b:	ss out 0xf2,eax
  40d90e:	jnp    0x40d8c6
  40d910:	dec    edi
  40d911:	jl     0x40d8e3
  40d913:	mov    ecx,0x2ae5d22
  40d918:	jmp    0x40d8c2
  40d91a:	jmp    0x40d95e
  40d91c:	mov    edx,0x4e996a81
  40d921:	jbe    0x40d912
  40d923:	adc    DWORD PTR [ebx],eax
  40d925:	fild   QWORD PTR [esi]
  40d927:	ja     0x40d8d0
  40d929:	cmp    al,0x6c
  40d92b:	add    eax,0xcf72439e
  40d930:	ins    DWORD PTR es:[edi],dx
  40d931:	stos   DWORD PTR es:[edi],eax
  40d932:	adc    dl,ah
  40d934:	or     DWORD PTR [esi-0x38285413],ebp
  40d93a:	pop    ss
  40d93b:	fcmovbe st,st(2)
  40d93d:	ss mov esi,0x88b385c4
  40d943:	xchg   BYTE PTR [esi+0xe],al
  40d946:	leave  
  40d947:	sub    al,0xaa
  40d949:	cwde   
  40d94a:	adc    ch,al
  40d94c:	cs dec ebp
  40d94e:	add    esi,DWORD PTR ds:0x520655a5
  40d954:	push   edi
  40d955:	pushf  
  40d956:	std    
  40d957:	popf   
  40d958:	stos   BYTE PTR es:[edi],al
  40d959:	inc    esi
  40d95a:	loop   0x40d9a7
  40d95c:	xchg   edi,eax
  40d95d:	cdq    
  40d95e:	cld    
  40d95f:	adc    eax,0x4503957a
  40d964:	lock mov eax,ds:0x93d65bc3
  40d96a:	test   al,0x8
  40d96c:	xlat   BYTE PTR cs:[ebx]
  40d96e:	jecxz  0x40d9cf
  40d970:	inc    ecx
  40d971:	xchg   BYTE PTR [eax+0x55],al
  40d974:	push   0xffffffec
  40d976:	hlt    
  40d977:	and    BYTE PTR [eax+ebx*4],0xe9
  40d97b:	shl    BYTE PTR [edi+0x6eaa74f9],1
  40d981:	pop    ss
  40d982:	sbb    eax,0x88db5bf7
  40d987:	(bad)  
  40d988:	mov    esi,0x648cda33
  40d98d:	xor    ebp,DWORD PTR [eax-0x1e]
  40d990:	ret    
  40d991:	sbb    ecx,DWORD PTR [ecx-0x53]
  40d994:	(bad)  
  40d995:	call   0x2427:0x7ffeae88
  40d99c:	xchg   esi,eax
  40d99d:	inc    ecx
  40d99e:	push   ss
  40d99f:	xchg   ebp,eax
  40d9a0:	jb     0x40d98c
  40d9a2:	fsubrp st(0),st
  40d9a4:	mov    bh,0xf4
  40d9a6:	(bad)  
  40d9a7:	out    0x14,eax
  40d9a9:	cdq    
  40d9aa:	sbb    eax,0x8b11837e
  40d9af:	inc    edx
  40d9b0:	sub    BYTE PTR [edx-0x2f],bh
  40d9b3:	mov    dl,0x34
  40d9b5:	outs   dx,BYTE PTR ds:[esi]
  40d9b6:	das    
  40d9b7:	adc    ecx,DWORD PTR [ecx-0x55]
  40d9ba:	ficom  WORD PTR [esi]
  40d9bc:	fidiv  WORD PTR [edx+0x38]
  40d9bf:	out    dx,eax
  40d9c0:	mov    al,ds:0xc83aa4f1
  40d9c5:	leave  
  40d9c6:	test   BYTE PTR [ecx],dh
  40d9c8:	test   DWORD PTR [eax],esp
  40d9ca:	mov    ch,0xf3
  40d9cc:	hlt    
  40d9cd:	out    dx,al
  40d9ce:	xchg   esp,eax
  40d9cf:	mov    ecx,0x23ed84d3
  40d9d4:	cmp    ebp,DWORD PTR [edx-0x29f8d568]
  40d9da:	xchg   ebp,eax
  40d9db:	xchg   ebp,eax
  40d9dc:	clc    
  40d9dd:	into   
  40d9de:	push   ebp
  40d9df:	mov    al,0x61
  40d9e1:	and    eax,0xc57155ce
  40d9e6:	jns    0x40d9e2
  40d9e8:	test   al,0xf3
  40d9ea:	inc    esi
  40d9eb:	sbb    al,0x2d
  40d9ed:	stos   DWORD PTR es:[edi],eax
  40d9ee:	push   edx
  40d9ef:	aaa    
  40d9f0:	sub    DWORD PTR [ecx+0x1ff6cdd1],ecx
  40d9f6:	sbb    eax,0x6aff42bc
  40d9fb:	push   eax
  40d9fc:	pop    es
  40d9fd:	xor    al,0x88
  40d9ff:	arpl   WORD PTR [esi+0x36],cx
  40da02:	mov    dh,0x35
  40da04:	or     al,0xe5
  40da06:	int    0xf7
  40da08:	leave  
  40da09:	shr    DWORD PTR [edx+0x1ed22659],0x22
  40da10:	rcr    ch,0xa1
  40da13:	stos   DWORD PTR es:[edi],eax
  40da14:	jmp    0x18d8:0xdf4d9155
  40da1b:	dec    esp
  40da1c:	imul   BYTE PTR [edi-0x43]
  40da1f:	test   eax,0x48db7c99
  40da24:	outs   dx,BYTE PTR ds:[esi]
  40da25:	mov    eax,0x1e135384
  40da2a:	add    BYTE PTR [ebx+ecx*2-0x1a],0x16
  40da2f:	inc    ebx
  40da30:	rcl    ah,cl
  40da32:	adc    ebx,DWORD PTR [edx]
  40da34:	mov    ebx,0x45e27090
  40da39:	hlt    
  40da3a:	ds jnp 0x40daa0
  40da3d:	or     eax,0x96bed2b
  40da42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da43:	dec    edx
  40da44:	mov    esi,DWORD PTR ds:0xf6ecbf16
  40da4a:	(bad)  
  40da4b:	xor    eax,0xbf89da36
  40da50:	mov    bl,0xfe
  40da52:	mov    al,0x2e
  40da54:	xchg   ebx,eax
  40da55:	mov    ds:0x88363a84,eax
  40da5a:	imul   edx
  40da5c:	jbe    0x40dabc
  40da5e:	dec    DWORD PTR [ecx+ecx*4]
  40da61:	lods   eax,DWORD PTR ds:[esi]
  40da62:	loop   0x40da6a
  40da64:	xor    al,0x78
  40da66:	pop    eax
  40da67:	sar    BYTE PTR [ecx+0x44],cl
  40da6a:	out    0x6d,eax
  40da6c:	xchg   BYTE PTR [ebx-0x52],dl
  40da6f:	mov    cx,0x54a9
  40da73:	jb     0x40daba
  40da75:	test   DWORD PTR [edx],esi
  40da77:	add    edi,DWORD PTR [ebp-0x5c]
  40da7a:	jne    0x40da28
  40da7c:	aas    
  40da7d:	mov    dl,0x69
  40da7f:	mov    ah,0xfc
  40da81:	das    
  40da82:	jbe    0x40dade
  40da84:	fxch   st(3)
  40da86:	push   edi
  40da87:	fadd   DWORD PTR [ecx-0x7da22e5c]
  40da8d:	cmc    
  40da8e:	je     0x40da50
  40da90:	imul   edx,DWORD PTR [esi+0x4598a9ab],0xabd6cd1a
  40da9a:	dec    edx
  40da9b:	sti    
  40da9c:	or     bh,BYTE PTR [eax+eiz*4]
  40da9f:	iret   
  40daa0:	lea    edx,[ebp+0x2]
  40daa3:	dec    ecx
  40daa4:	xor    dh,BYTE PTR [ebp+0x7b]
  40daa7:	out    0x1f,al
  40daa9:	mov    BYTE PTR [eax],al
  40daab:	aaa    
  40daac:	ins    DWORD PTR es:[edi],dx
  40daad:	push   ss
  40daae:	fist   DWORD PTR [esi-0x247f6f49]
  40dab4:	add    eax,0xfb68ef
  40dab9:	pop    ecx
  40daba:	stos   DWORD PTR es:[edi],eax
  40dabb:	popf   
  40dabc:	cmp    edi,esp
  40dabe:	jmp    0x318429e0
  40dac3:	cs adc ebx,esp
  40dac6:	lock push cs
  40dac8:	fcmovnb st,st(1)
  40daca:	pop    ebx
  40dacb:	cmp    eax,0x98a26d73
  40dad0:	adc    ecx,DWORD PTR [ebx+0x2caa9895]
  40dad6:	jns    0x40daf1
  40dad8:	sti    
  40dad9:	mov    bh,0x7d
  40dadb:	mov    eax,0x112e3b71
  40dae0:	out    0x75,eax
  40dae2:	xor    al,0x96
  40dae4:	pushf  
  40dae5:	lods   al,BYTE PTR ds:[esi]
  40dae6:	jae    0x40dafe
  40dae8:	lock sub ebx,DWORD PTR [esi]
  40daeb:	das    
  40daec:	mov    ecx,0x163e17b7
  40daf1:	xor    DWORD PTR [esi],esp
  40daf3:	inc    ebx
  40daf4:	ds into 
  40daf6:	test   eax,0xb6f786b4
  40dafb:	les    ebx,FWORD PTR [edi]
  40dafd:	or     DWORD PTR [edi+0x1e],edi
  40db00:	jmp    0x40db46
  40db02:	ret    0x70ef
  40db05:	and    dl,BYTE PTR [esi-0x28be7e31]
  40db0b:	xchg   BYTE PTR [ebx+ebp*1],bl
  40db0e:	std    
  40db0f:	in     al,dx
  40db10:	fstp   st(6)
  40db12:	push   0xffffffb3
  40db14:	push   ds
  40db15:	loop   0x40db76
  40db17:	mov    DWORD PTR [ecx-0x29],esp
  40db1a:	sbb    al,0x93
  40db1c:	or     al,0xe8
  40db1e:	retf   
  40db1f:	mov    ds:0xedce58ff,al
  40db24:	test   bl,al
  40db26:	popa   
  40db27:	jecxz  0x40dac8
  40db29:	add    BYTE PTR [ebp+0x41],0xda
  40db2d:	iret   
  40db2e:	gs loope 0x40dad3
  40db31:	mov    bl,0xbb
  40db33:	out    0xf1,eax
  40db35:	out    dx,eax
  40db36:	test   DWORD PTR [esp+ebp*8],ecx
  40db39:	mov    al,ds:0x93f4276e
  40db3e:	adc    eax,0x9d22f8b0
  40db43:	adc    DWORD PTR [esi+ecx*1+0x6e],0x1c22034
  40db4b:	and    BYTE PTR [ebp+esi*4+0x6c82a4be],bl
  40db52:	nop
  40db53:	repz imul edx,DWORD PTR ss:[esp+eax*8+0x3a],0x16
  40db5a:	push   esi
  40db5b:	test   BYTE PTR [eax],ah
  40db5d:	mov    al,0x69
  40db5f:	pop    ebp
  40db60:	in     al,0x20
  40db62:	sub    bh,BYTE PTR [ecx-0x7d71d7f3]
  40db68:	or     al,0x52
  40db6a:	and    edx,DWORD PTR [ebx-0x29b03ccd]
  40db70:	ins    DWORD PTR es:[edi],dx
  40db71:	xchg   esp,eax
  40db72:	ins    DWORD PTR es:[edi],dx
  40db73:	leave  
  40db74:	ficom  DWORD PTR [esi-0x16ca0bc1]
  40db7a:	mov    cl,0x89
  40db7c:	cwde   
  40db7d:	mov    al,0x22
  40db7f:	xor    edi,DWORD PTR [ebx]
  40db81:	mov    dl,0xe6
  40db83:	mov    ds:0x8b7b7a46,al
  40db88:	xlat   BYTE PTR ds:[ebx]
  40db89:	fs enter 0x876,0xd5
  40db8e:	jl     0x40dbf7
  40db90:	and    al,0xd5
  40db92:	aad    0x3b
  40db94:	icebp  
  40db95:	iret   
  40db96:	push   edi
  40db97:	adc    eax,0xb0702b51
  40db9c:	dec    eax
  40db9d:	dec    eax
  40db9e:	std    
  40db9f:	nop
  40dba0:	int    0xd0
  40dba2:	dec    edi
  40dba3:	(bad)  [ebx]
  40dba5:	outs   dx,BYTE PTR ds:[esi]
  40dba6:	dec    esp
  40dba7:	mov    ebp,0xda351bf4
  40dbac:	inc    eax
  40dbad:	jl     0x40dbee
  40dbaf:	mov    dl,0xb5
  40dbb1:	xchg   ecx,eax
  40dbb2:	jmp    0x6598:0xd9822a2e
  40dbb9:	int    0x37
  40dbbb:	and    eax,DWORD PTR [esi-0x1f]
  40dbbe:	stos   DWORD PTR es:[edi],eax
  40dbbf:	in     al,dx
  40dbc0:	xchg   esp,eax
  40dbc1:	lock (bad) 
  40dbc3:	fiadd  DWORD PTR [edx+edi*2]
  40dbc6:	sbb    BYTE PTR [eax-0x997e06e],ah
  40dbcc:	pop    ebp
  40dbcd:	aam    0xf9
  40dbcf:	imul   esp,DWORD PTR ds:0x40471d30,0x7c
  40dbd6:	outs   dx,DWORD PTR fs:[esi]
  40dbd8:	jp     0x40db5f
  40dbda:	mov    ecx,0xfb824c09
  40dbdf:	add    ah,BYTE PTR [ebx]
  40dbe1:	push   eax
  40dbe2:	dec    ebx
  40dbe3:	inc    edi
  40dbe4:	jns    0x40dc19
  40dbe6:	mov    ebp,0xebb368bb
  40dbeb:	push   ss
  40dbec:	ret    0x35c9
  40dbef:	pop    edx
  40dbf0:	jns    0x40dbc3
  40dbf2:	jae    0x40dc45
  40dbf4:	xor    ecx,DWORD PTR [ecx+edx*2]
  40dbf7:	and    esp,DWORD PTR [edi-0x54]
  40dbfa:	sbb    edi,eax
  40dbfc:	(bad)  [esi+0x27b9b946]
  40dc02:	sub    ch,BYTE PTR [edx]
  40dc04:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40dc06:	(bad)  
  40dc07:	fistp  QWORD PTR [ecx]
  40dc09:	ficom  DWORD PTR [ecx]
  40dc0b:	shl    DWORD PTR [esi-0x6ae2816c],cl
  40dc11:	dec    ebx
  40dc12:	stos   BYTE PTR es:[edi],al
  40dc13:	push   edi
  40dc14:	fldcw  WORD PTR [eax+0x763fc215]
  40dc1a:	add    al,0x55
  40dc1c:	xor    al,0xb2
  40dc1e:	rcr    BYTE PTR [eax+0x32],cl
  40dc21:	or     DWORD PTR [edi],edi
  40dc23:	sbb    DWORD PTR [edi+0x73],0x6d8fa235
  40dc2a:	ja     0x40dc84
  40dc2c:	mov    esi,0xd6b0c80b
  40dc31:	pop    ebp
  40dc32:	and    eax,0x1f63067e
  40dc37:	add    al,0xd9
  40dc39:	add    eax,0xa46e8b7f
  40dc3e:	fistp  QWORD PTR fs:[eax]
  40dc41:	and    esi,ebx
  40dc43:	fsub   DWORD PTR [edi-0x1c]
  40dc46:	mov    ecx,0xb307f7cf
  40dc4b:	ins    BYTE PTR es:[edi],dx
  40dc4c:	or     esi,ebx
  40dc4e:	dec    esp
  40dc4f:	retf   0x303f
  40dc52:	pop    es
  40dc53:	sahf   
  40dc54:	inc    edi
  40dc55:	(bad)  
  40dc56:	mov    ds:0x8b491da8,eax
  40dc5b:	ins    BYTE PTR es:[edi],dx
  40dc5c:	popf   
  40dc5d:	out    0x2b,eax
  40dc5f:	or     DWORD PTR [edx+0x4d],esp
  40dc62:	pop    ecx
  40dc63:	inc    ebp
  40dc64:	call   0x686:0x94c4a96f
  40dc6b:	call   0x11d9f116
  40dc70:	mov    cs,esp
  40dc72:	adc    al,0xb8
  40dc74:	xchg   edi,ebp
  40dc76:	in     eax,0x9
  40dc78:	dec    ebp
  40dc79:	mov    eax,ds:0x1381ff03
  40dc7e:	adc    bl,bh
  40dc80:	sbb    ecx,DWORD PTR [edx]
  40dc82:	jmp    FWORD PTR [edx+0x745a89f2]
  40dc88:	xor    ebx,DWORD PTR [edx+0x4b]
  40dc8b:	icebp  
  40dc8c:	das    
  40dc8d:	neg    DWORD PTR ds:0xf541c4e9
  40dc93:	imul   esp,DWORD PTR [ecx],0xfffffffd
  40dc96:	jb     0x40dd0f
  40dc98:	das    
  40dc99:	mov    DWORD PTR [ebx],edi
  40dc9b:	fild   WORD PTR [edi]
  40dc9d:	pop    ecx
  40dc9e:	or     BYTE PTR [ebx],0xa4
  40dca1:	scas   eax,DWORD PTR es:[edi]
  40dca2:	in     al,0xe0
  40dca4:	outs   dx,BYTE PTR ds:[esi]
  40dca5:	in     eax,dx
  40dca6:	cmp    al,0x9
  40dca8:	inc    ebp
  40dca9:	adc    al,ah
  40dcab:	xchg   ecx,eax
  40dcac:	mov    BYTE PTR [edx+0x61],dh
  40dcaf:	inc    ebp
  40dcb0:	xchg   BYTE PTR [eax],bl
  40dcb2:	shr    ecx,0x2
  40dcb5:	inc    ebp
  40dcb6:	(bad)  
  40dcb7:	adc    al,0x43
  40dcb9:	pop    edi
  40dcba:	pop    ds
  40dcbb:	or     DWORD PTR [ebx+ecx*4+0x38],edi
  40dcbf:	ret    
  40dcc0:	retf   
  40dcc1:	jg     0x40dcb2
  40dcc3:	cmp    eax,0x32b95708
  40dcc8:	call   0x62edab35
  40dccd:	push   ebp
  40dcce:	mov    edi,ds
  40dcd0:	jg     0x40dcf1
  40dcd2:	push   cs
  40dcd3:	mov    DWORD PTR [ebp+0x38],ebp
  40dcd6:	jb     0x40dd0c
  40dcd8:	cmp    ecx,DWORD PTR ds:0xe27bfcf4
  40dcde:	lods   al,BYTE PTR ds:[esi]
  40dcdf:	dec    ebx
  40dce0:	add    al,0xb2
  40dce2:	fwait
  40dce3:	sbb    ch,BYTE PTR [esi+ebp*2-0x313cf0d2]
  40dcea:	xor    BYTE PTR [edx],bl
  40dcec:	stos   DWORD PTR es:[edi],eax
  40dced:	fisub  DWORD PTR [edx+0x64]
  40dcf0:	hlt    
  40dcf1:	pop    edx
  40dcf2:	push   ebx
  40dcf3:	sub    al,0x2c
  40dcf5:	mov    edx,0x24e79988
  40dcfa:	dec    esp
  40dcfb:	mov    dl,dl
  40dcfd:	repnz xchg esp,eax
  40dcff:	leave  
  40dd00:	int    0x8b
  40dd02:	test   BYTE PTR [ecx-0x5f],al
  40dd05:	xor    bh,BYTE PTR [edx+0x18d6b615]
  40dd0b:	mov    ebx,0x35f15642
  40dd10:	cmp    eax,0xda066f5d
  40dd15:	push   ds
  40dd16:	aad    0x21
  40dd18:	mov    DWORD PTR [ecx-0x6eb5d1c0],ebp
  40dd1e:	inc    ebx
  40dd1f:	icebp  
  40dd20:	lock mov cl,0x47
  40dd23:	cmovae esp,DWORD PTR [edi+0x1d]
  40dd27:	shl    esi,cl
  40dd29:	lahf   
  40dd2a:	push   ss
  40dd2b:	jmp    0x40dd33
  40dd2d:	xor    DWORD PTR [esi+0x78d1516b],ecx
  40dd33:	rcl    DWORD PTR [eax+eax*2-0x76286067],cl
  40dd3a:	xor    DWORD PTR ds:0xf133887c,esi
  40dd40:	(bad)  
  40dd41:	into   
  40dd42:	jl     0x40dd1e
  40dd44:	xchg   edx,eax
  40dd45:	(bad)  [ecx-0x4]
  40dd48:	rcr    al,0x3f
  40dd4b:	hlt    
  40dd4c:	stos   BYTE PTR es:[edi],al
  40dd4d:	add    BYTE PTR [eax+0x59ba606d],cl
  40dd53:	jns    0x40dd6c
  40dd55:	fcmovne st,st(6)
  40dd57:	mov    edx,0xad9cd05f
  40dd5c:	inc    edx
  40dd5d:	call   0xaef7:0x447fa413
  40dd64:	aaa    
  40dd65:	jo     0x40ddac
  40dd67:	push   0x6a512566
  40dd6c:	popa   
  40dd6d:	test   eax,0x142f62f1
  40dd72:	xor    al,0xdf
  40dd74:	ret    0xba2c
  40dd77:	or     al,0x2b
  40dd79:	push   esi
  40dd7a:	loop   0x40dd50
  40dd7c:	nop
  40dd7d:	xchg   esp,eax
  40dd7e:	add    bh,BYTE PTR [esi+0x592c09e]
  40dd84:	out    dx,eax
  40dd85:	sbb    eax,DWORD PTR [ebp+0x62886dd8]
  40dd8b:	xchg   ebx,eax
  40dd8c:	mov    ecx,0xc3bc54e7
  40dd91:	add    esi,DWORD PTR [ebx-0x7c]
  40dd94:	lea    esi,[ecx+0x71]
  40dd97:	adc    BYTE PTR [esi+esi*4],ch
  40dd9a:	inc    edi
  40dd9b:	dec    ebp
  40dd9c:	arpl   WORD PTR [ebx],cx
  40dd9e:	mov    cl,dh
  40dda0:	outs   dx,DWORD PTR ds:[esi]
  40dda1:	adc    eax,0x15064070
  40dda6:	dec    esp
  40dda7:	popf   
  40dda8:	mov    esi,?
  40ddaa:	fst    DWORD PTR [edx]
  40ddac:	inc    ebp
  40ddad:	mov    edi,ecx
  40ddaf:	pop    ebx
  40ddb0:	jl     0x40dd6f
  40ddb2:	jae    0x40dded
  40ddb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddb5:	mov    esi,0x5a01cf0
  40ddba:	imul   edi,DWORD PTR [ebx+0x0],0xde36def9
  40ddc1:	pop    esp
  40ddc2:	arpl   WORD PTR [ecx-0x46],dx
  40ddc5:	into   
  40ddc6:	xchg   bh,ah
  40ddc8:	adc    edx,DWORD PTR [ebp-0x17]
  40ddcb:	sti    
  40ddcc:	sbb    BYTE PTR [edi-0x10],al
  40ddcf:	mov    eax,ds:0xc040eac6
  40ddd4:	pop    ebp
  40ddd5:	add    eax,0x836de6e2
  40ddda:	push   ebx
  40dddb:	jmp    DWORD PTR [ebx-0x7132771f]
  40dde1:	sub    al,0xc3
  40dde3:	out    0xc,al
  40dde5:	pusha  
  40dde6:	stos   BYTE PTR es:[edi],al
  40dde7:	(bad)  
  40dde8:	arpl   WORD PTR [ebx],di
  40ddea:	repnz xor bx,WORD PTR [ebx]
  40ddee:	(bad)  
  40ddef:	loope  0x40de1d
  40ddf1:	or     al,0xfb
  40ddf3:	(bad)  
  40ddf4:	mov    ebx,0x7f1af0c9
  40ddf9:	ret    0xd8db
  40ddfc:	data16 jl 0x40ddb8
  40ddff:	jg     0x40de6c
  40de01:	add    BYTE PTR [eax+eiz*8-0x6b],bh
  40de05:	add    BYTE PTR [ecx+0x6463254f],0x4b
  40de0c:	icebp  
  40de0d:	test   eax,0xbd315e14
  40de12:	sub    al,0x67
  40de14:	ror    BYTE PTR [ecx+0x22],1
  40de17:	lock pop es
  40de19:	dec    ebx
  40de1a:	push   eax
  40de1b:	mov    edi,0xd674c5c3
  40de20:	rcl    BYTE PTR [ecx+edi*4-0x4a93c31e],cl
  40de27:	push   ss
  40de28:	jmp    0xe3bec21c
  40de2d:	int    0xef
  40de2f:	pop    eax
  40de30:	jg     0x40ddb9
  40de32:	cli    
  40de33:	jmp    0xaf71:0xe9d76d7f
  40de3a:	sbb    eax,esi
  40de3c:	mov    eax,0xf19cd225
  40de41:	daa    
  40de42:	test   eax,esp
  40de44:	cmp    BYTE PTR [esi-0x2ec1bdc1],ah
  40de4a:	in     al,0x85
  40de4c:	cmp    edi,esi
  40de4e:	jmp    0x40de21
  40de50:	and    bh,BYTE PTR ds:0x64762d34
  40de56:	mov    eax,es:0x890f6e66
  40de5c:	mov    ds:0x1cd799d7,al
  40de61:	xchg   edi,eax
  40de62:	lds    esi,FWORD PTR [eax]
  40de64:	adc    eax,0x4bd8953f
  40de69:	in     eax,0xf0
  40de6b:	lock sti 
  40de6d:	push   cs
  40de6e:	ret    0xe823
  40de71:	outs   dx,BYTE PTR ds:[esi]
  40de72:	bound  ebx,QWORD PTR [ecx]
  40de74:	jae    0x40de28
  40de76:	mov    DWORD PTR [ebx+eiz*1],eax
  40de79:	pop    ecx
  40de7a:	push   es
  40de7b:	aad    0x50
  40de7d:	mov    al,ds:0x198968a
  40de82:	sbb    eax,0x2b7880a5
  40de87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de88:	int    0xec
  40de8a:	or     dl,bl
  40de8c:	test   eax,0xd64ccf32
  40de91:	sbb    al,0x7b
  40de93:	jns    0x40debb
  40de95:	and    ebx,esi
  40de97:	push   es
  40de98:	add    BYTE PTR [ebx],cl
  40de9a:	and    al,0xce
  40de9c:	jne    0x40de47
  40de9e:	inc    esp
  40de9f:	fmul   QWORD PTR [edi+0x1e052cc0]
  40dea5:	inc    esp
  40dea6:	arpl   sp,bx
  40dea8:	rol    DWORD PTR [eax],cl
  40deaa:	jnp    0x40deac
  40deac:	icebp  
  40dead:	scas   al,BYTE PTR es:[edi]
  40deae:	stc    
  40deaf:	pop    edx
  40deb0:	jnp    0x40de84
  40deb2:	add    dl,BYTE PTR [edx+0x7ceecd82]
  40deb8:	(bad)  ds:0x15e7da40
  40debe:	mov    DWORD PTR [ebx],edx
  40dec0:	pxor   mm5,QWORD PTR [edi+0x792838f1]
  40dec7:	mov    ah,0xda
  40dec9:	in     al,0x5e
  40decb:	daa    
  40decc:	sbb    DWORD PTR [esi+0xd],eax
  40decf:	push   ebx
  40ded0:	ret    
  40ded1:	mov    bl,0xc9
  40ded3:	pop    edi
  40ded4:	and    al,0x7e
  40ded6:	jecxz  0x40df3d
  40ded8:	adc    edx,DWORD PTR [ecx]
  40deda:	dec    esp
  40dedb:	mov    dl,0xfb
  40dedd:	xor    al,0xa8
  40dedf:	cli    
  40dee0:	and    ch,BYTE PTR [edi+0xbdffad7]
  40dee6:	and    ah,BYTE PTR es:[esi+0x74]
  40deea:	pop    esi
  40deeb:	sar    BYTE PTR [eax+0x47],cl
  40deee:	adc    al,0x3e
  40def0:	jge    0x40df4f
  40def2:	out    0xcd,eax
  40def4:	std    
  40def5:	call   0x8a8d:0x91a3b460
  40defc:	fdiv   QWORD PTR [edx-0x76c854d2]
  40df02:	mov    edx,DWORD PTR [esi]
  40df04:	in     al,dx
  40df05:	inc    edx
  40df06:	xor    BYTE PTR [edx+0x36],ah
  40df09:	mov    bh,ch
  40df0b:	cwde   
  40df0c:	stc    
  40df0d:	inc    esp
  40df0e:	mov    esi,0x9edc829
  40df13:	cwde   
  40df14:	arpl   WORD PTR [ecx+0x4c],di
  40df17:	ror    BYTE PTR [edx-0x27],1
  40df1a:	cmp    eax,0x128d892c
  40df1f:	xchg   esp,eax
  40df20:	shr    edi,cl
  40df22:	xchg   edi,eax
  40df23:	jne    0x40debb
  40df25:	or     dl,BYTE PTR [ebx+0x46]
  40df28:	add    al,0xb4
  40df2a:	pop    ecx
  40df2b:	inc    edi
  40df2c:	pop    edx
  40df2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df2e:	test   edx,edi
  40df30:	daa    
  40df31:	dec    esi
  40df32:	adc    eax,0x14
  40df35:	test   al,0x78
  40df37:	fwait
  40df38:	je     0x40df38
  40df3a:	xlat   BYTE PTR ds:[ebx]
  40df3b:	fimul  DWORD PTR [edi]
  40df3d:	ds pusha 
  40df3f:	jp     0x40dfb3
  40df41:	(bad)
  40df45:	call   0xfd0ad919
  40df4a:	and    DWORD PTR [esi+0x71],edi
  40df4d:	dec    ecx
  40df4e:	lods   eax,DWORD PTR ds:[esi]
  40df4f:	iret   
  40df50:	sub    al,0x1f
  40df52:	dec    eax
  40df53:	xchg   esp,eax
  40df54:	retf   0x7df1
  40df57:	mov    ah,0x5b
  40df59:	loop   0x40dfda
  40df5b:	in     eax,0x2d
  40df5d:	sub    edi,DWORD PTR [ecx]
  40df5f:	shr    DWORD PTR [eax-0x70],1
  40df62:	adc    DWORD PTR [esi-0x3ca5717e],esi
  40df68:	fcmovnbe st,st(4)
  40df6a:	and    al,0xfb
  40df6c:	sbb    BYTE PTR ds:0xe49419e9,bl
  40df72:	out    dx,eax
  40df73:	int3   
  40df74:	jae    0x40df99
  40df76:	imul   ebx,DWORD PTR [edi+0x2b],0xc06ba878
  40df7d:	add    al,0x1a
  40df7f:	in     eax,dx
  40df80:	xor    esi,ecx
  40df82:	dec    ecx
  40df83:	cdq    
  40df84:	pop    es
  40df85:	loop   0x40df17
  40df87:	add    DWORD PTR [edi-0x7edd928f],ecx
  40df8d:	add    DWORD PTR [esp+ebp*8-0x72],esp
  40df91:	mov    eax,0xd26165e8
  40df96:	and    BYTE PTR [ecx-0x1e75046e],dl
  40df9c:	ficomp DWORD PTR [edx+0x47]
  40df9f:	fisubr WORD PTR [ebx-0x3e]
  40dfa2:	retf   0x7534
  40dfa5:	scas   al,BYTE PTR es:[edi]
  40dfa6:	mov    DWORD PTR [eax+0x24],esi
  40dfa9:	ss mov eax,0xefd4eda8
  40dfaf:	call   0x41b962a7
  40dfb4:	mov    ecx,0xa753b6c
  40dfba:	mov    edi,0xa72e112f
  40dfbf:	and    BYTE PTR [ebx],ch
  40dfc1:	and    eax,DWORD PTR [ecx+eiz*1-0x74bad269]
  40dfc8:	dec    ebp
  40dfc9:	jae    0x40dfb0
  40dfcb:	test   BYTE PTR [esi+0x3f],0xc2
  40dfcf:	cs scas eax,DWORD PTR es:[edi]
  40dfd1:	iret   
  40dfd2:	dec    eax
  40dfd3:	test   eax,0x267a016e
  40dfd8:	xchg   ecx,eax
  40dfd9:	xchg   ecx,eax
  40dfda:	inc    ebp
  40dfdb:	push   esi
  40dfdc:	dec    ecx
  40dfdd:	fcomp  QWORD PTR [edx+0x48]
  40dfe0:	mov    al,ds:0xa98aaff6
  40dfe5:	and    eax,0xfb3fad7d
  40dfea:	and    dh,BYTE PTR ss:[ecx+0x61]
  40dfee:	stos   DWORD PTR es:[edi],eax
  40dfef:	jb     0x40e070
  40dff1:	mov    cl,bl
  40dff3:	imul   eax,edx,0xffffffbe
  40dff6:	arpl   WORD PTR [eax],si
  40dff8:	loopne 0x40dfb4
  40dffa:	or     eax,0xa32f3e05
  40dfff:	add    al,0x88
  40e001:	sbb    bh,BYTE PTR [esi+0x477bf548]
  40e007:	cmp    DWORD PTR [ecx-0x6f338b24],eax
  40e00d:	fsubrp st(3),st
  40e00f:	inc    eax
  40e010:	cmp    ebp,eax
  40e012:	ins    BYTE PTR es:[edi],dx
  40e013:	mov    ebp,?
  40e015:	fnsave [ebp-0x62]
  40e018:	in     eax,0xe1
  40e01a:	pop    esp
  40e01b:	ss jecxz 0x40dfa8
  40e01e:	xor    al,0xe8
  40e020:	mov    ds:0xdee8ae2b,al
  40e025:	mov    ?,WORD PTR [edx+0x52]
  40e028:	jbe    0x40e090
  40e02a:	inc    ebx
  40e02b:	shl    dl,0x72
  40e02e:	mov    cl,0xaf
  40e030:	or     dl,BYTE PTR [esi]
  40e032:	inc    esi
  40e033:	int3   
  40e034:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e035:	imul   eax,DWORD PTR [ebx-0x78],0xffffffd8
  40e039:	aad    0xe7
  40e03b:	ins    BYTE PTR es:[edi],dx
  40e03c:	fs enter 0x1cc6,0xf3
  40e041:	arpl   WORD PTR [ebx+0x364322a2],sp
  40e047:	adc    DWORD PTR [edi+0x67],ebp
  40e04a:	das    
  40e04b:	inc    edx
  40e04c:	inc    esp
  40e04d:	add    eax,0x52f35bb3
  40e052:	lds    edi,FWORD PTR [esi-0x15ac9cfd]
  40e058:	and    al,0x8d
  40e05a:	retf   0x1eb4
  40e05d:	icebp  
  40e05e:	jecxz  0x40e025
  40e060:	repnz xor BYTE PTR [ecx],cl
  40e063:	int3   
  40e064:	pop    ss
  40e065:	jo     0x40e042
  40e067:	dec    eax
  40e068:	xor    ebp,DWORD PTR [esi]
  40e06a:	ror    DWORD PTR [edx-0x57],cl
  40e06d:	imul   esp,DWORD PTR [esi],0xffffffdb
  40e070:	and    al,0xf9
  40e072:	or     BYTE PTR [edi-0x3c],al
  40e075:	cmp    DWORD PTR [ebx+edx*4+0x31ed4b74],edx
  40e07c:	ret    
  40e07d:	aad    0x2
  40e07f:	(bad)  
  40e080:	in     al,dx
  40e081:	or     edi,DWORD PTR [esi]
  40e083:	dec    esp
  40e084:	cmp    BYTE PTR [edx],al
  40e086:	mov    ebp,0x10a5bb78
  40e08b:	inc    ecx
  40e08c:	mov    WORD PTR [esi+0x42],?
  40e08f:	jne    0x40e051
  40e091:	mov    al,0xb4
  40e093:	dec    esi
  40e094:	xor    DWORD PTR [ebx-0x56],eax
  40e097:	lods   eax,DWORD PTR ds:[esi]
  40e098:	push   es
  40e099:	push   ds
  40e09a:	fld    DWORD PTR [ebx]
  40e09c:	jo     0x40e029
  40e09e:	stos   DWORD PTR es:[edi],eax
  40e09f:	icebp  
  40e0a0:	test   al,0x42
  40e0a2:	xor    eax,0x2b7a9490
  40e0a7:	setge  BYTE PTR [esi-0x716c5db4]
  40e0ae:	inc    ebp
  40e0af:	xor    ecx,eax
  40e0b1:	fcmove st,st(5)
  40e0b3:	mov    esi,0xb3b9c531
  40e0b8:	mov    ds,WORD PTR [ebx-0x1e9e432a]
  40e0be:	inc    ecx
  40e0bf:	or     eax,0xc0043323
  40e0c4:	int    0xf9
  40e0c6:	xchg   edx,eax
  40e0c7:	adc    BYTE PTR [edi],0xc7
  40e0ca:	sub    al,0x72
  40e0cc:	add    BYTE PTR [ebp-0x512202cf],dh
  40e0d2:	mov    ds:0x6b581b91,al
  40e0d7:	(bad)  
  40e0d9:	leave  
  40e0da:	into   
  40e0db:	mov    al,ds:0xffb604f
  40e0e0:	imul   esp,DWORD PTR es:[eax-0x3],0x47caf9
  40e0e8:	add    al,0xe6
  40e0ea:	add    dl,bl
  40e0ec:	sub    cl,BYTE PTR [ecx-0x616e08c3]
  40e0f2:	imul   BYTE PTR [edi+ebp*2]
  40e0f5:	mov    ebx,0x47cd511a
  40e0fa:	aas    
  40e0fb:	pop    esp
  40e0fc:	sub    BYTE PTR [ebp+0x4b],0x4e
  40e100:	out    dx,eax
  40e101:	jmp    0x40e114
  40e103:	and    edx,DWORD PTR [ecx+0x1c045a41]
  40e109:	or     al,0xa6
  40e10b:	fldenv [esi]
  40e10d:	lods   eax,DWORD PTR ds:[esi]
  40e10e:	push   ss
  40e10f:	retf   
  40e110:	push   es
  40e111:	and    DWORD PTR [esi-0x7f59d90c],esi
  40e117:	(bad)  
  40e118:	pop    ss
  40e119:	push   ds
  40e11a:	aad    0xed
  40e11c:	mov    edi,0x9ff255d7
  40e121:	mov    ebp,0xffa50761
  40e126:	ds xchg esi,eax
  40e128:	sbb    BYTE PTR [edi-0x6bfff675],ch
  40e12e:	lahf   
  40e12f:	int3   
  40e130:	mov    ah,0xf1
  40e132:	sar    DWORD PTR [ebp-0x4e],1
  40e135:	lods   al,BYTE PTR ds:[esi]
  40e136:	xor    BYTE PTR [ecx+0xc153220],bh
  40e13c:	popf   
  40e13d:	rcr    edx,0xf7
  40e140:	bound  edi,QWORD PTR ds:0xcb013c31
  40e146:	jle    0x40e125
  40e148:	scas   al,BYTE PTR es:[edi]
  40e149:	xchg   esi,eax
  40e14a:	jmp    0x40e192
  40e14c:	(bad)  
  40e14d:	cmp    al,0x2e
  40e14f:	xchg   ebx,eax
  40e150:	aad    0xc2
  40e152:	push   es
  40e153:	mov    dl,0x32
  40e155:	syscall 
  40e157:	test   al,0xcc
  40e159:	rcr    esp,1
  40e15b:	sub    dh,BYTE PTR [esi]
  40e15d:	sti    
  40e15e:	mov    esi,0x216ac45e
  40e163:	outs   dx,DWORD PTR ds:[esi]
  40e164:	mov    dl,0xd8
  40e166:	ds pop edi
  40e168:	push   edi
  40e169:	mov    DWORD PTR [edi+0x77c16f43],ecx
  40e16f:	fnstsw WORD PTR [ebx+ebx*8-0x3b0e1f06]
  40e176:	jg     0x40e131
  40e178:	and    eax,DWORD PTR [edi-0x3]
  40e17b:	sbb    al,0xc
  40e17d:	sahf   
  40e17e:	ss daa 
  40e180:	fnstcw WORD PTR [ebx-0x255b3ace]
  40e186:	mov    eax,ds:0xc91d19c8
  40e18b:	adc    eax,0xdffd71b0
  40e190:	and    edi,DWORD PTR [ebp-0x15aabad9]
  40e196:	inc    ecx
  40e197:	add    BYTE PTR [eax-0x6e],bl
  40e19a:	sbb    al,0xf3
  40e19c:	mov    bl,0x62
  40e19e:	jl     0x40e156
  40e1a0:	jg     0x40e1ef
  40e1a2:	add    DWORD PTR [edi-0x6b],edi
  40e1a5:	ret    
  40e1a6:	pop    esi
  40e1a7:	addr16 inc eax
  40e1a9:	in     eax,0x83
  40e1ab:	push   esp
  40e1ac:	adc    al,0x76
  40e1ae:	mov    ecx,0x7fde273a
  40e1b3:	or     DWORD PTR [ecx],0x8a92a80e
  40e1b9:	push   eax
  40e1ba:	loope  0x40e158
  40e1bc:	pop    edi
  40e1be:	push   ecx
  40e1bf:	jle    0x40e1ba
  40e1c1:	lods   eax,DWORD PTR ds:[esi]
  40e1c2:	and    al,0xa8
  40e1c4:	shl    DWORD PTR [eax+0x18664cd5],cl
  40e1ca:	test   ecx,edi
  40e1cc:	add    al,0x6e
  40e1ce:	loopne 0x40e15e
  40e1d0:	jnp    0x40e1f3
  40e1d2:	inc    eax
  40e1d3:	cmp    eax,0xdcc51788
  40e1d8:	sbb    eax,0x4e2392fe
  40e1dd:	jbe    0x40e1a3
  40e1df:	mov    bh,0x6c
  40e1e1:	std    
  40e1e2:	adc    eax,DWORD PTR [esi-0x24]
  40e1e5:	in     al,0x1f
  40e1e7:	jmp    0x9eee:0x62974fff
  40e1ee:	mov    esp,0x9bd934c6
  40e1f3:	sbb    eax,0xc68669b4
  40e1f8:	xchg   ebp,eax
  40e1f9:	loop   0x40e254
  40e1fb:	in     eax,dx
  40e1fc:	mov    esi,0xcaca083f
  40e201:	mov    ebx,0x3fa1e5ee
  40e206:	cs jnp 0x40e245
  40e209:	iret   
  40e20a:	pop    ebp
  40e20b:	push   esi
  40e20c:	ret    
  40e20d:	push   ss
  40e20e:	sub    DWORD PTR [ecx+0x74],esi
  40e211:	scas   al,BYTE PTR es:[edi]
  40e212:	sar    DWORD PTR [edi],1
  40e214:	sbb    DWORD PTR [ecx-0xfb891bc],ebx
  40e21a:	add    al,0x7e
  40e21c:	add    esp,DWORD PTR [eax-0x11]
  40e21f:	cmp    al,0x6f
  40e221:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e222:	jle    0x40e228
  40e224:	dec    ebx
  40e225:	rcl    BYTE PTR [ebx-0x71bdb7b],1
  40e22b:	or     eax,DWORD PTR [edx+eax*2]
  40e22e:	fldenv [edi+eiz*2-0x55]
  40e232:	nop
  40e233:	cmp    DWORD PTR [ecx+edi*2],esi
  40e236:	jp     0x40e299
  40e238:	int3   
  40e239:	lea    ebx,[edx+edi*8]
  40e23c:	mov    BYTE PTR [edx+0x21],0xb0
  40e240:	mov    bh,0x48
  40e242:	xchg   ebp,eax
  40e243:	and    eax,0xc321ff0a
  40e248:	jl     0x40e1f6
  40e24a:	cmp    DWORD PTR [edx-0x5f],0xffffff88
  40e24e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e24f:	mul    DWORD PTR [edi]
  40e251:	inc    ecx
  40e252:	jmp    0x40e246
  40e254:	aad    0x94
  40e256:	out    0xd1,al
  40e258:	mov    gs,WORD PTR [eax-0x2cfbdc41]
  40e25e:	add    BYTE PTR [edx+eax*8-0x4e61e912],ah
  40e265:	imul   esp,DWORD PTR [esi+ebp*4-0x11],0x61
  40e26a:	mov    WORD PTR [edx-0x16eff4aa],es
  40e270:	ret    0xff9a
  40e273:	and    eax,DWORD PTR [eax+0x24a43ed4]
  40e279:	imul   ecx,DWORD PTR [ebx-0x44],0x13
  40e27d:	not    esp
  40e27f:	or     al,0x81
  40e281:	fidiv  WORD PTR [esi+0x1a7cd191]
  40e287:	shl    DWORD PTR [ebx-0x6b],0xfb
  40e28b:	mov    al,ds:0x33e0acac
  40e290:	inc    esp
  40e291:	jp     0x40e291
  40e293:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e294:	mov    esp,0x83797dc0
  40e299:	pop    ebp
  40e29a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e29b:	ret    0xa41e
  40e29e:	or     ebx,DWORD PTR [esi*4+0x7c32f9b3]
  40e2a5:	mov    dl,0x32
  40e2a7:	fs in  al,0x60
  40e2aa:	test   DWORD PTR [edx],edi
  40e2ac:	pop    esp
  40e2ad:	mov    BYTE PTR [edi+0x3c],dl
  40e2b0:	(bad)
  40e2b3:	inc    esp
  40e2b4:	push   sp
  40e2b6:	or     eax,0xf932d892
  40e2bb:	rcl    DWORD PTR [ebp+0x6ef2d218],1
  40e2c1:	fs loop 0x40e2ae
  40e2c4:	cdq    
  40e2c5:	js     0x40e310
  40e2c7:	sub    ch,BYTE PTR [edx]
  40e2c9:	ss inc esi
  40e2cb:	test   ecx,0xa0f08c09
  40e2d1:	or     ah,dl
  40e2d3:	fwait
  40e2d4:	xor    bh,BYTE PTR [esi+0x3d099f44]
  40e2da:	push   ebx
  40e2db:	jbe    0x40e31c
  40e2dd:	xor    DWORD PTR ds:0xf0dea56a,ebx
  40e2e3:	or     ebx,esp
  40e2e5:	test   eax,0xf330305d
  40e2ea:	pop    ds
  40e2eb:	add    edx,DWORD PTR [ecx-0x798db790]
  40e2f1:	repnz mov dh,0x8b
  40e2f4:	sub    dh,BYTE PTR [ecx-0x4f75014]
  40e2fa:	jae    0x40e305
  40e2fc:	mov    esi,0x172b5315
  40e301:	add    dl,al
  40e303:	mov    eax,0xc94615e3
  40e308:	pop    ebp
  40e309:	bound  edi,QWORD PTR [ecx]
  40e30b:	xor    esi,DWORD PTR [ebp+0x6a911275]
  40e311:	add    al,0x99
  40e313:	or     edi,DWORD PTR [ecx-0x14c2be32]
  40e319:	out    0xdb,eax
  40e31b:	jl     0x40e2ab
  40e31d:	cld    
  40e31e:	xchg   ch,bh
  40e320:	rcl    DWORD PTR [ecx],cl
  40e322:	in     eax,dx
  40e323:	mov    ds:0xbf391b92,al
  40e328:	jp     0x40e39e
  40e32a:	mov    ebp,0x2fedd2af
  40e32f:	push   esp
  40e330:	dec    esp
  40e331:	sbb    BYTE PTR [ecx+0x15],al
  40e334:	cmp    DWORD PTR [edx],esp
  40e336:	scas   eax,DWORD PTR es:[edi]
  40e337:	es push eax
  40e339:	mov    eax,ds:0xa0381c0b
  40e33e:	pop    ecx
  40e33f:	pop    ebx
  40e340:	into   
  40e341:	adc    edi,0xffffffc3
  40e344:	(bad)  
  40e345:	fimul  DWORD PTR [ebx-0x62cb7fd4]
  40e34b:	in     eax,dx
  40e34c:	push   cs
  40e34d:	scas   al,BYTE PTR es:[edi]
  40e34e:	cmp    BYTE PTR [esi+esi*1+0x6b293d11],ch
  40e355:	sti    
  40e356:	xor    edi,DWORD PTR [esp+edi*8-0x53ee9e3f]
  40e35d:	mov    bl,0xfb
  40e35f:	pop    edi
  40e360:	outs   dx,DWORD PTR ds:[esi]
  40e361:	out    0xeb,al
  40e363:	iret   
  40e364:	and    eax,DWORD PTR [edi]
  40e366:	xchg   ebx,eax
  40e367:	ds aad 0xd3
  40e36a:	fistp  DWORD PTR gs:[ecx+0x36]
  40e36e:	cmp    al,0x71
  40e370:	mov    eax,ds:0x515a2e46
  40e375:	shl    BYTE PTR [edi+0x59],cl
  40e378:	fs push edx
  40e37a:	inc    ebp
  40e37b:	lahf   
  40e37c:	lea    esp,[esi-0xe]
  40e37f:	pop    edi
  40e380:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e381:	mov    WORD PTR [edi],cs
  40e383:	push   0x379ab43
  40e388:	xchg   edx,eax
  40e389:	mov    esi,0x3880e9f6
  40e38e:	in     al,dx
  40e38f:	inc    ebx
  40e390:	xchg   eax,edx
  40e392:	shl    BYTE PTR [ebx+0xd],0xd5
  40e396:	jno    0x40e416
  40e398:	sar    DWORD PTR [ecx],cl
  40e39a:	jmp    DWORD PTR [ecx+0x1b]
  40e39d:	in     eax,dx
  40e39e:	cmp    BYTE PTR [ebp+0x6de191f8],0x1
  40e3a5:	sub    bl,cl
  40e3a7:	fild   DWORD PTR [ebp+0x25]
  40e3aa:	mov    ds:0x2f86fb7a,al
  40e3af:	dec    ecx
  40e3b0:	pop    es
  40e3b1:	inc    eax
  40e3b2:	inc    esp
  40e3b3:	fs push edi
  40e3b5:	jno    0x40e3bd
  40e3b7:	cdq    
  40e3b8:	inc    edi
  40e3b9:	adc    eax,0xa50cc908
  40e3be:	int    0xbc
  40e3c0:	xchg   ebp,eax
  40e3c1:	in     al,dx
  40e3c2:	stc    
  40e3c3:	leave  
  40e3c4:	das    
  40e3c5:	xchg   ebp,eax
  40e3c6:	pop    ds
  40e3c7:	hlt    
  40e3c8:	mov    bl,0x78
  40e3ca:	and    DWORD PTR [ebx+0x52630676],ebp
  40e3d0:	mov    BYTE PTR [esi-0x61048b2c],ah
  40e3d6:	fdivrp st(4),st
  40e3d8:	data16 lahf 
  40e3da:	fcomp  DWORD PTR [ecx]
  40e3dc:	into   
  40e3dd:	test   eax,0x52e17c55
  40e3e2:	jl     0x40e372
  40e3e4:	cmp    DWORD PTR ds:0xcb62d8dd,0x2e53ff94
  40e3ee:	mov    edi,0x6743bd83
  40e3f3:	sti    
  40e3f4:	and    eax,0x1a807f92
  40e3f9:	fcmovnb st,st(2)
  40e3fb:	mov    edx,edi
  40e3fd:	adc    al,0xee
  40e3ff:	cmp    al,0xd2
  40e401:	imul   ebx,DWORD PTR [edx+edx*1-0x424ea64b],0xb8a5a8e1
  40e40c:	js     0x40e405
  40e40e:	pop    es
  40e40f:	mov    dh,0xa8
  40e411:	sub    BYTE PTR [ebx],0x35
  40e414:	sub    esp,esp
  40e416:	js     0x40e45e
  40e418:	jne    0x40e3c9
  40e41a:	mov    ebx,0x41c850dc
  40e41f:	lea    ebx,[edi+ecx*2-0x330b13f0]
  40e426:	add    edx,esi
  40e428:	mov    esp,cs
  40e42a:	out    0x7a,eax
  40e42c:	mov    bl,0x83
  40e42e:	jmp    0x43bf:0xffab53ba
  40e435:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e436:	sub    BYTE PTR [edi-0x13],ch
  40e439:	push   ecx
  40e43a:	cmp    dl,BYTE PTR ds:0xdb7694dd
  40e440:	aam    0x79
  40e442:	int    0x7c
  40e444:	nop
  40e445:	popf   
  40e446:	cmp    ecx,esi
  40e448:	pop    ebp
  40e449:	test   eax,0xf9f02e5c
  40e44e:	pop    ebx
  40e44f:	pushf  
  40e450:	mul    BYTE PTR [edx+0x11]
  40e453:	push   eax
  40e454:	rcl    ah,1
  40e456:	(bad)  
  40e457:	loope  0x40e407
  40e459:	(bad)  
  40e45a:	enter  0x5333,0x80
  40e45e:	or     al,0xb0
  40e460:	iret   
  40e461:	mov    ebp,0x862fa5ed
  40e466:	sub    al,bl
  40e468:	loope  0x40e46b
  40e46a:	imul   edi,DWORD PTR [esi-0x4c84cd63],0xdfd386ba
  40e474:	mov    WORD PTR [edi-0x79],?
  40e477:	pop    ebp
  40e478:	nop
  40e479:	mov    BYTE PTR [edx+0x2b],bh
  40e47c:	mov    eax,ds:0x7025ffc6
  40e481:	dec    esp
  40e482:	repz inc ebp
  40e484:	jle    0x40e4ad
  40e486:	je     0x40e44b
  40e488:	xchg   edi,eax
  40e489:	jae    0x40e494
  40e48b:	mov    dl,0x9a
  40e48d:	add    BYTE PTR [esi],0x4c
  40e490:	mov    ch,0x29
  40e492:	adc    DWORD PTR [edi+0x43],esp
  40e495:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e496:	cs dec ebp
  40e498:	(bad)  
  40e499:	pop    eax
  40e49a:	in     al,dx
  40e49b:	xchg   edx,eax
  40e49c:	push   0xffffffe2
  40e49e:	xchg   ebx,eax
  40e49f:	lds    esi,FWORD PTR [esi]
  40e4a1:	xor    BYTE PTR [ecx-0xa1ba361],0x78
  40e4a8:	adc    esp,DWORD PTR [ecx+0x14]
  40e4ab:	and    ebp,DWORD PTR [ebp+ebx*1+0x34c26d14]
  40e4b2:	pop    ecx
  40e4b3:	cdq    
  40e4b4:	lods   eax,DWORD PTR ds:[esi]
  40e4b5:	call   0x9a3d:0xd58fb27d
  40e4bc:	xchg   esi,edx
  40e4be:	add    edi,DWORD PTR [eax-0x2f]
  40e4c1:	je     0x40e444
  40e4c3:	mov    bl,0x77
  40e4c5:	gs out dx,eax
  40e4c7:	fcom   st(1)
  40e4c9:	(bad)  
  40e4ca:	adc    ah,al
  40e4cc:	mov    eax,ds:0xf88f3c07
  40e4d1:	fdivr  QWORD PTR [ecx-0x2a]
  40e4d4:	push   ecx
  40e4d5:	xor    eax,0xdb9f5157
  40e4da:	mov    bl,0x1b
  40e4dc:	lock sub DWORD PTR [edx-0x29],ebx
  40e4e0:	add    edx,edx
  40e4e2:	mov    al,ds:0x333584b5
  40e4e7:	aas    
  40e4e8:	stos   DWORD PTR es:[edi],eax
  40e4e9:	scas   eax,DWORD PTR es:[edi]
  40e4ea:	inc    edi
  40e4eb:	pop    ebx
  40e4ec:	jns    0x40e48d
  40e4ee:	inc    ebx
  40e4ef:	jl     0x40e4ec
  40e4f1:	rcl    ah,1
  40e4f3:	cs std 
  40e4f5:	add    eax,0x50d00c12
  40e4fa:	enter  0xcac9,0x65
  40e4fe:	jmp    0xf562199f
  40e503:	and    DWORD PTR [ebx+0x7bbfe7ab],edx
  40e509:	mul    BYTE PTR [edx+0x124f14f7]
  40e50f:	arpl   WORD PTR [esi-0x2ec4ca9a],cx
  40e515:	and    eax,0xadc8b28b
  40e51a:	out    dx,eax
  40e51b:	push   ebp
  40e51c:	fldenv [edi+0x7e97d9d7]
  40e522:	test   al,ch
  40e524:	xor    bl,BYTE PTR [ecx]
  40e526:	aaa    
  40e527:	sbb    eax,0x51af7dfc
  40e52c:	inc    ebp
  40e52d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e52e:	clc    
  40e52f:	mov    DWORD PTR [edi],eax
  40e531:	mov    al,0x42
  40e533:	test   esi,ebp
  40e535:	cmp    eax,0x72faac55
  40e53a:	mov    ebp,0x7a3ae760
  40e53f:	gs retf 
  40e541:	jne    0x40e51f
  40e543:	leave  
  40e544:	add    eax,0x3ecbe763
  40e549:	(bad)  [ebp-0x57164cf5]
  40e54f:	and    bl,dl
  40e551:	out    dx,eax
  40e552:	cmp    ebx,esi
  40e554:	hlt    
  40e555:	mov    dh,0xe1
  40e557:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40e559:	xor    dl,cl
  40e55b:	arpl   WORD PTR [ecx+0x14],ax
  40e55e:	dec    esp
  40e55f:	cmp    al,0xc6
  40e561:	loopne 0x40e55b
  40e563:	daa    
  40e564:	stos   DWORD PTR es:[edi],eax
  40e565:	lods   eax,DWORD PTR ds:[esi]
  40e566:	out    dx,al
  40e567:	pop    ebp
  40e568:	in     eax,dx
  40e569:	inc    esi
  40e56a:	ins    DWORD PTR es:[edi],dx
  40e56b:	cdq    
  40e56c:	inc    edx
  40e56d:	cli    
  40e56e:	and    dl,cl
  40e570:	out    dx,eax
  40e571:	sub    al,0xeb
  40e573:	repz push ebx
  40e575:	and    eax,0xaa804797
  40e57a:	cmp    bl,BYTE PTR cs:[edi]
  40e57d:	int    0xe3
  40e57f:	repz sub DWORD PTR [edi+edx*4+0x3fbd885b],ebp
  40e587:	ret    
  40e588:	repnz xchg ch,bl
  40e58b:	loopne 0x40e587
  40e58d:	and    ah,BYTE PTR [ebx-0x4f05ad6a]
  40e593:	fist   WORD PTR [ecx+0x24]
  40e596:	adc    al,0x2a
  40e598:	dec    esp
  40e599:	imul   esp,edi,0x646b0ea6
  40e59f:	xchg   esp,eax
  40e5a0:	mov    WORD PTR [eax],?
  40e5a2:	xchg   edi,eax
  40e5a3:	inc    ecx
  40e5a4:	sub    BYTE PTR [ecx-0x6dd15129],ch
  40e5aa:	shl    ebp,0xb5
  40e5ad:	and    al,0x80
  40e5af:	xor    DWORD PTR [ecx+edi*1+0x68],eax
  40e5b3:	jle    0x40e625
  40e5b5:	xchg   edi,eax
  40e5b6:	push   ss
  40e5b7:	repz jl 0x40e5ba
  40e5ba:	les    esi,FWORD PTR ds:0xb64f1290
  40e5c0:	mov    ah,0xd1
  40e5c2:	sbb    dl,bh
  40e5c4:	mov    ebx,0xcc497871
  40e5c9:	jne    0x40e57a
  40e5cb:	xchg   ebp,eax
  40e5cc:	dec    ebp
  40e5cd:	dec    ebx
  40e5ce:	push   ss
  40e5cf:	int    0x53
  40e5d1:	arpl   WORD PTR [esi+ebp*4+0x332b799c],sp
  40e5d8:	adc    bl,bh
  40e5da:	fist   WORD PTR [ecx-0x31]
  40e5dd:	aaa    
  40e5de:	mov    ah,cl
  40e5e0:	je     0x40e5a3
  40e5e2:	mov    bh,0x4d
  40e5e4:	cmp    cl,al
  40e5e6:	jnp    0x40e5d4
  40e5e8:	mov    al,0xb6
  40e5ea:	jmp    0xaefab37a
  40e5ef:	mov    BYTE PTR [edx-0x26],bh
  40e5f2:	xchg   ebx,eax
  40e5f3:	push   edi
  40e5f4:	sbb    eax,0x5c27825b
  40e5f9:	loope  0x40e596
  40e5fb:	dec    esi
  40e5fc:	fmulp  st(1),st
  40e5fe:	mov    ds:0x8db534e6,eax
  40e603:	stos   BYTE PTR es:[edi],al
  40e604:	lds    ecx,FWORD PTR [eax+edx*4+0x3ce45010]
  40e60b:	cmp    al,0x5
  40e60d:	cli    
  40e60e:	js     0x40e68c
  40e610:	jo     0x40e5c3
  40e612:	shl    edx,1
  40e614:	arpl   bp,ax
  40e616:	adc    al,0xf1
  40e618:	sub    eax,0x1d0ed755
  40e61d:	mov    esp,0x3539bb85
  40e622:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e623:	mov    esp,0x1a307150
  40e628:	mov    ds:0xf4072327,eax
  40e62d:	and    al,0xfe
  40e62f:	fwait
  40e630:	sub    eax,0x73e3d1fc
  40e635:	cwde   
  40e636:	adc    eax,0x58f29299
  40e63b:	mov    ebx,0x981c2cd7
  40e640:	jmp    0x40e676
  40e642:	test   esp,ebx
  40e644:	push   cs
  40e645:	pop    ebp
  40e646:	mov    dl,0x13
  40e648:	fld    QWORD PTR [eax-0x2f75e4f0]
  40e64e:	rol    dh,1
  40e650:	pop    edx
  40e651:	mov    ds:0xda290e60,eax
  40e656:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e657:	and    ebx,DWORD PTR [eax+0x54]
  40e65a:	fsubr  DWORD PTR [edx+0xf3f9e72]
  40e660:	imul   edi,DWORD PTR [eax+0x5e],0xffffff8f
  40e664:	mov    DWORD PTR [ebx+0x29],ebp
  40e667:	in     eax,dx
  40e668:	pop    esi
  40e669:	sbb    BYTE PTR [ecx-0x46],ch
  40e66c:	mov    BYTE PTR [ebp+0x2a5fe942],bh
  40e672:	xor    al,0xde
  40e674:	inc    ecx
  40e675:	push   es
  40e676:	jmp    0x40e6ea
  40e678:	lods   al,BYTE PTR ds:[esi]
  40e679:	push   edx
  40e67a:	lods   al,BYTE PTR ds:[esi]
  40e67b:	inc    ebx
  40e67c:	cld    
  40e67d:	daa    
  40e67e:	mov    ds:0x6e0ac420,al
  40e683:	sbb    dl,BYTE PTR [edx+0x2c803924]
  40e689:	pop    eax
  40e68a:	aas    
  40e68b:	push   edx
  40e68c:	ins    BYTE PTR es:[edi],dx
  40e68d:	not    eax
  40e68f:	(bad)  
  40e691:	jl     0x40e712
  40e693:	nop
  40e694:	sbb    eax,0x363d0ebd
  40e699:	jo     0x40e62e
  40e69b:	cmp    eax,0x1ac738be
  40e6a0:	sub    al,BYTE PTR [eax]
  40e6a2:	test   eax,0x8a173fbc
  40e6a7:	test   BYTE PTR ds:0x35df9c8f,0x5a
  40e6ae:	xor    al,0xb6
  40e6b0:	mov    esp,0x5b66493c
  40e6b5:	mov    dl,0x40
  40e6b7:	mov    al,0xec
  40e6b9:	jmp    0xa048:0x195df370
  40e6c0:	daa    
  40e6c1:	dec    ebx
  40e6c2:	ror    DWORD PTR [ebp+ebp*4-0x61],0xdf
  40e6c7:	bound  ebp,QWORD PTR [ecx+0x1e]
  40e6ca:	or     BYTE PTR [ebp+0x2c],0x97
  40e6ce:	loopne 0x40e6c1
  40e6d0:	outs   dx,BYTE PTR ds:[esi]
  40e6d1:	iret   
  40e6d2:	cdq    
  40e6d3:	sbb    dh,dl
  40e6d5:	loopne 0x40e6c6
  40e6d7:	sub    DWORD PTR [ebx],0x24
  40e6da:	or     DWORD PTR [edi-0x1b3cc430],edx
  40e6e0:	push   esi
  40e6e1:	pop    edx
  40e6e2:	retf   
  40e6e3:	js     0x40e743
  40e6e5:	fistp  WORD PTR [ecx+0x1e]
  40e6e8:	aas    
  40e6e9:	inc    ebx
  40e6ea:	xchg   esi,eax
  40e6eb:	stos   DWORD PTR es:[edi],eax
  40e6ec:	sub    al,0xeb
  40e6ee:	ins    BYTE PTR es:[edi],dx
  40e6ef:	xchg   ebp,eax
  40e6f0:	cmp    al,BYTE PTR [esi]
  40e6f2:	jle    0x40e69d
  40e6f4:	fcom   QWORD PTR [ecx+eax*1-0x50]
  40e6f8:	pushf  
  40e6f9:	mov    WORD PTR [eax-0x3f39666c],fs
  40e6ff:	jecxz  0x40e778
  40e701:	loopne 0x40e748
  40e703:	aas    
  40e704:	add    al,0x1a
  40e706:	cmp    ebx,DWORD PTR [ebx+0x44258239]
  40e70c:	repz retf 
  40e70e:	sub    eax,0x112f6085
  40e713:	retf   
  40e714:	mov    eax,ds:0x3cfe0603
  40e719:	cmc    
  40e71a:	popa   
  40e71b:	jno    0x40e6cc
  40e71d:	sbb    dh,BYTE PTR [edi-0x7937c80b]
  40e723:	mov    eax,ds:0x87ea8744
  40e728:	ja     0x40e6b3
  40e72a:	mov    ch,0x26
  40e72c:	jmp    0x3f19c366
  40e731:	or     esi,esi
  40e733:	icebp  
  40e734:	addr16 and cl,dh
  40e737:	add    DWORD PTR [ebp+0x7c2aa64e],esp
  40e73d:	fs mov al,0xc2
  40e740:	nop
  40e741:	cwde   
  40e742:	stos   BYTE PTR es:[edi],al
  40e743:	cmp    BYTE PTR [ebx+ebp*1],dl
  40e746:	push   0x1a33a377
  40e74b:	or     BYTE PTR [eax+0x7d],dh
  40e74e:	and    ch,bl
  40e750:	imul   ebp,ebx,0x5458b09f
  40e756:	jnp    0x40e7d1
  40e758:	push   ds
  40e759:	jmp    0x40e7a1
  40e75b:	mov    ebp,0x3975b6ac
  40e760:	mov    ebx,0x19bbf8c8
  40e765:	lods   al,BYTE PTR ds:[esi]
  40e766:	inc    ecx
  40e767:	sub    ah,BYTE PTR [eax-0x7d1aec98]
  40e76d:	leave  
  40e76e:	jle    0x40e7c2
  40e770:	cmp    ebp,esp
  40e772:	mov    ah,0x82
  40e774:	mov    ds:0xcba2f1d9,eax
  40e779:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e77a:	(bad)  
  40e77b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e77c:	sub    BYTE PTR [ebx-0x6ef9e3a6],ch
  40e782:	mov    esp,0x1295fa37
  40e787:	sub    al,0xa0
  40e789:	call   0xd534aa0f
  40e78e:	jo     0x40e74a
  40e790:	mov    ebp,0x6d871484
  40e795:	adc    BYTE PTR [esi],cl
  40e797:	inc    esp
  40e798:	imul   edx,DWORD PTR [ebx-0x61e0d9f1],0x95de4549
  40e7a2:	js     0x40e7b1
  40e7a4:	sub    ebp,DWORD PTR [edi]
  40e7a6:	bound  edi,QWORD PTR [edi-0x62]
  40e7a9:	arpl   WORD PTR [esi-0x1cf9dc8d],dx
  40e7af:	mov    edx,0x454fd4aa
  40e7b4:	mov    ebx,0x3776ded2
  40e7b9:	out    0xd2,eax
  40e7bb:	out    dx,al
  40e7bc:	rcr    DWORD PTR [edi],cl
  40e7be:	sub    eax,esp
  40e7c0:	(bad)  
  40e7c2:	sbb    BYTE PTR [eax],ch
  40e7c4:	push   esi
  40e7c5:	or     ah,bl
  40e7c7:	jecxz  0x40e752
  40e7c9:	(bad)  
  40e7ca:	mov    al,0x3
  40e7cc:	fcmovne st,st(6)
  40e7ce:	fs pop ebx
  40e7d0:	aas    
  40e7d1:	rcl    DWORD PTR [ecx+0x36],1
  40e7d4:	dec    edx
  40e7d5:	ficom  WORD PTR [edx]
  40e7d7:	cmp    DWORD PTR [ecx+0x509b233d],0x621e5be7
  40e7e1:	call   0x88c3:0x2971b360
  40e7e8:	add    bh,0x3e
  40e7eb:	mov    edx,0xb674c073
  40e7f0:	fcomp  QWORD PTR [ecx+0x3dec6708]
  40e7f6:	push   ebp
  40e7f7:	cmc    
  40e7f8:	nop
  40e7f9:	adc    DWORD PTR [ecx],edi
  40e7fb:	shl    BYTE PTR [ebp+0x4f],1
  40e7fe:	xchg   esp,eax
  40e7ff:	jl     0x40e7fa
  40e801:	sbb    eax,DWORD PTR [ebx+0x651153b9]
  40e807:	pmaddwd mm5,QWORD PTR [edx-0x2b]
  40e80b:	sbb    eax,0x6166f224
  40e810:	in     al,dx
  40e811:	jmp    0x40e7d9
  40e813:	and    eax,0x42c9cad0
  40e818:	or     DWORD PTR [edi],0xa7a2b3c3
  40e81e:	mov    ebx,DWORD PTR [edi-0x30]
  40e821:	lods   al,BYTE PTR ds:[esi]
  40e822:	rcl    ebp,1
  40e824:	sub    dh,BYTE PTR [ecx]
  40e826:	dec    edx
  40e827:	mov    esp,0xd72f6938
  40e82c:	test   ah,bl
  40e82e:	ss push ds
  40e830:	hlt    
  40e831:	test   DWORD PTR [edi+edi*2],eax
  40e834:	repnz fcmovu st,st(4)
  40e837:	outs   dx,BYTE PTR ds:[esi]
  40e838:	bound  edi,QWORD PTR [eax]
  40e83a:	pop    ebp
  40e83b:	sti    
  40e83c:	out    dx,al
  40e83d:	adc    al,0x5c
  40e83f:	call   0xfb467c76
  40e844:	cmp    edi,DWORD PTR [esi]
  40e846:	enter  0xd1f7,0x61
  40e84a:	bound  ecx,QWORD PTR [ebx]
  40e84c:	(bad)
  40e84f:	test   DWORD PTR ss:[esp+edx*8-0x46],esi
  40e854:	pop    DWORD PTR [esi+0x6bf212a0]
  40e85a:	jns    0x40e881
  40e85c:	adc    eax,DWORD PTR [ecx+0x57]
  40e85f:	shl    BYTE PTR [edi+0x55],cl
  40e862:	fcomp  DWORD PTR [edi]
  40e864:	popa   
  40e865:	xchg   ebp,eax
  40e866:	inc    eax
  40e867:	mov    ah,0xce
  40e869:	push   edx
  40e86a:	pop    edx
  40e86b:	sti    
  40e86c:	lea    edx,[edi-0xb]
  40e86f:	jmp    0x40e8e8
  40e871:	push   es
  40e872:	and    BYTE PTR [ebp-0x11],bl
  40e875:	jb     0x40e7fd
  40e877:	pushf  
  40e878:	int    0xe3
  40e87a:	dec    eax
  40e87b:	in     eax,dx
  40e87c:	popf   
  40e87d:	fiadd  DWORD PTR [ebp-0x2be4080a]
  40e883:	and    BYTE PTR [edx-0x78119165],cl
  40e889:	fist   WORD PTR [eax]
  40e88b:	mov    edi,DWORD PTR [esi+0x581aa486]
  40e891:	mov    dh,0x73
  40e893:	adc    DWORD PTR [edx-0x5c],edx
  40e896:	xchg   ecx,eax
  40e897:	sbb    ch,BYTE PTR [ecx]
  40e899:	pop    eax
  40e89a:	sbb    bh,BYTE PTR [ebx]
  40e89c:	popa   
  40e89d:	fcomp  DWORD PTR [edi+edi*2-0x17]
  40e8a1:	pop    edx
  40e8a2:	push   cs
  40e8a3:	mov    ss,WORD PTR ds:0x5aa6f086
  40e8a9:	jp     0x40e893
  40e8ab:	fs pop es
  40e8ad:	retf   0xb94d
  40e8b0:	(bad)
  40e8b4:	out    0x6e,eax
  40e8b6:	js     0x40e916
  40e8b8:	dec    ebx
  40e8b9:	dec    edi
  40e8ba:	cmp    eax,0x207810a3
  40e8bf:	pushf  
  40e8c0:	outs   dx,DWORD PTR ds:[esi]
  40e8c1:	sub    eax,0x14cdcee6
  40e8c6:	sbb    bl,cl
  40e8c8:	in     al,0x51
  40e8ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8cb:	fs in  eax,0x80
  40e8ce:	dec    edi
  40e8cf:	cmp    ah,BYTE PTR [ecx]
  40e8d1:	mov    al,0x3f
  40e8d3:	and    ecx,DWORD PTR [ecx]
  40e8d5:	sbb    DWORD PTR ds:0xe1507a26,edx
  40e8db:	and    ah,ch
  40e8dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8de:	inc    esp
  40e8df:	mov    eax,0xfdbed5f4
  40e8e4:	cmp    eax,esi
  40e8e6:	pop    es
  40e8e7:	push   esi
  40e8e8:	xor    DWORD PTR [edi-0x35d91f3f],0x84f51a6e
  40e8f2:	push   0x47
  40e8f4:	jmp    0xa8bc:0xcd71cb82
  40e8fb:	shl    BYTE PTR [ebx+0x69],cl
  40e8fe:	rol    BYTE PTR [eax+0x7e28e55a],1
  40e904:	pop    ecx
  40e905:	adc    al,0xb4
  40e907:	xlat   BYTE PTR ds:[ebx]
  40e908:	into   
  40e909:	test   BYTE PTR [edi+0x60],dl
  40e90c:	pop    esp
  40e90d:	pop    edi
  40e90e:	test   eax,0x2962c315
  40e913:	in     al,0x40
  40e915:	idiv   BYTE PTR [edi]
  40e917:	xchg   ecx,eax
  40e918:	cdq    
  40e919:	xor    dl,BYTE PTR [eax-0x6]
  40e91c:	mov    bl,0x6a
  40e91e:	jle    0x40e926
  40e920:	jecxz  0x40e96b
  40e922:	xchg   esp,eax
  40e923:	mov    ch,0xf8
  40e925:	leave  
  40e926:	mov    WORD PTR ds:0xd35d724c,es
  40e92c:	xchg   ebp,eax
  40e92d:	lea    esp,[edx+0x28]
  40e930:	mov    ch,0xd0
  40e932:	cmp    eax,0x342cf943
  40e937:	jecxz  0x40e968
  40e939:	pop    ss
  40e93a:	ins    DWORD PTR es:[edi],dx
  40e93b:	mov    ebx,0x7e0c2a73
  40e940:	call   0x11e2ceb4
  40e945:	fsub   QWORD PTR [ebp-0x64f148b8]
  40e94b:	inc    edi
  40e94c:	ret    
  40e94d:	scas   al,BYTE PTR es:[edi]
  40e94e:	pusha  
  40e94f:	mov    ch,BYTE PTR es:[esi]
  40e952:	jecxz  0x40e949
  40e954:	xchg   DWORD PTR [edx+0x347132f4],esi
  40e95a:	fdiv   DWORD PTR [ecx-0x5d639006]
  40e960:	sub    eax,0x5ecc9258
  40e965:	(bad)  
  40e967:	bound  edx,QWORD PTR [ebx]
  40e969:	lods   eax,DWORD PTR ds:[esi]
  40e96a:	test   al,0x7f
  40e96c:	add    bh,BYTE PTR [ebx-0x4a]
  40e96f:	pop    ds
  40e970:	adc    eax,0xbc50d471
  40e975:	jg     0x40e964
  40e977:	jmp    0x40e981
  40e979:	cmp    eax,esi
  40e97b:	jg     0x40e9bb
  40e97d:	mov    DWORD PTR [edx-0x6d612769],eax
  40e983:	dec    ebp
  40e984:	add    ecx,ecx
  40e986:	add    ebp,DWORD PTR [edx]
  40e988:	cmc    
  40e989:	stc    
  40e98a:	test   BYTE PTR [eax+0x6c],al
  40e98d:	dec    eax
  40e98e:	pop    edx
  40e98f:	aam    0xd2
  40e991:	test   eax,0xec76c6d8
  40e996:	sub    eax,0x9a3d633a
  40e99b:	jnp    0x40e983
  40e99d:	iret   
  40e99e:	mov    ah,0x9f
  40e9a0:	cmp    al,0x93
  40e9a2:	push   edi
  40e9a3:	call   0x641c:0x9160b703
  40e9aa:	sahf   
  40e9ab:	add    BYTE PTR [ebp-0x7b],al
  40e9ae:	repz sbb esi,edx
  40e9b1:	loopne 0x40e96d
  40e9b3:	repnz push esp
  40e9b5:	bnd jbe 0x40e956
  40e9b8:	ins    BYTE PTR es:[edi],dx
  40e9b9:	out    dx,al
  40e9ba:	cdq    
  40e9bb:	mov    ds:0xb2b204d,eax
  40e9c0:	mov    dh,0x6d
  40e9c2:	jl     0x40e99a
  40e9c4:	sbb    edi,eax
  40e9c6:	jg     0x40e961
  40e9c8:	(bad)  [edi+0x6a79cda7]
  40e9ce:	mov    edi,0x27657a7e
  40e9d3:	pop    ss
  40e9d4:	daa    
  40e9d5:	popf   
  40e9d6:	mov    ecx,0x27ac29cc
  40e9db:	(bad)  
  40e9dc:	dec    ecx
  40e9dd:	adc    eax,eax
  40e9df:	loop   0x40ea42
  40e9e1:	lds    eax,FWORD PTR [ecx-0x59]
  40e9e4:	loopne 0x40e96a
  40e9e6:	pushf  
  40e9e7:	xor    al,0xb5
  40e9e9:	xor    BYTE PTR [ecx-0x3ff76c9f],al
  40e9ef:	xchg   ebp,eax
  40e9f0:	aad    0x9c
  40e9f2:	add    al,0xc8
  40e9f4:	dec    ebp
  40e9f5:	lahf   
  40e9f6:	cmp    BYTE PTR gs:[ebp-0x3ff46036],cl
  40e9fd:	adc    eax,0x6cf2f497
  40ea02:	sti    
  40ea03:	mov    ds:0xefddf770,al
  40ea08:	stc    
  40ea09:	addr16 in eax,dx
  40ea0b:	jle    0x40ea23
  40ea0d:	sbb    DWORD PTR [esi-0x1e],ebx
  40ea10:	mov    ah,0x26
  40ea12:	cdq    
  40ea13:	pushf  
  40ea14:	ss shr eax,cl
  40ea17:	mov    al,dl
  40ea19:	or     BYTE PTR [esi-0x3c],dl
  40ea1c:	xor    ax,0xb0bc
  40ea20:	test   eax,0xde97f83e
  40ea25:	jbe    0x40e9ab
  40ea27:	and    ah,BYTE PTR [esi-0x2]
  40ea2a:	sub    esi,esi
  40ea2c:	rcl    DWORD PTR [eax+eiz*8-0x170fe30],0x95
  40ea34:	ins    BYTE PTR es:[edi],dx
  40ea35:	xchg   BYTE PTR [ecx+ebx*2+0x2700b89d],ah
  40ea3c:	mov    ch,0xc3
  40ea3e:	jae    0x40e9f7
  40ea40:	in     al,dx
  40ea41:	mov    ebx,0xd9e85b2f
  40ea46:	test   BYTE PTR [ebp-0x2c],0xdd
  40ea4a:	push   eax
  40ea4b:	cmc    
  40ea4c:	test   DWORD PTR [ebx-0x66],esi
  40ea4f:	sub    eax,ebx
  40ea51:	jp     0x40e9e7
  40ea53:	adc    eax,0x1ebe68cb
  40ea58:	sti    
  40ea59:	cmp    ebx,DWORD PTR [esi-0x5ab4fc2a]
  40ea5f:	fnsave [edx-0x1a]
  40ea62:	push   0x6ff3e71
  40ea67:	fcomp  QWORD PTR [eax-0x3c]
  40ea6a:	das    
  40ea6b:	pop    ds
  40ea6c:	mov    al,0x6e
  40ea6e:	sub    BYTE PTR [esi],ch
  40ea70:	jbe    0x40eaef
  40ea72:	cmp    ebx,0x99b7dca2
  40ea78:	neg    DWORD PTR [edx+0x24013e8b]
  40ea7e:	std    
  40ea7f:	imul   ecx,DWORD PTR [ebx-0x6168acf],0x1c2dab6d
  40ea89:	mov    edx,0x1cb8a3e
  40ea8e:	mov    eax,ds:0xe82b5080
  40ea93:	not    DWORD PTR [eax+0x7a]
  40ea96:	(bad)  
  40ea98:	mov    al,ds:0x2969e6b
  40ea9d:	fld    DWORD PTR [ebx]
  40ea9f:	jmp    0x1b56:0xe86fe588
  40eaa6:	call   0x7c798d11
  40eaab:	xacquire xchg BYTE PTR [edi+ecx*4+0x6a],bh
  40eab0:	hlt    
  40eab1:	sti    
  40eab2:	cld    
  40eab3:	add    al,0x7a
  40eab5:	sar    BYTE PTR [edi+0x2c],0xed
  40eab9:	push   ds
  40eaba:	in     eax,0x55
  40eabc:	dec    ecx
  40eabd:	ret    0x6564
  40eac0:	add    BYTE PTR ds:0x402606db,bl
  40eac6:	xchg   ebx,eax
  40eac7:	and    eax,0xc326091d
  40eacc:	and    eax,0xc1997d26
  40ead1:	mov    eax,0xcb14bde9
  40ead6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ead7:	data16 clc 
  40ead9:	adc    al,0x14
  40eadb:	add    DWORD PTR [ecx],eax
  40eadd:	jl     0x40eaf4
  40eadf:	imul   eax,edx,0xdf0f445
  40eae5:	xadd   DWORD PTR [ebp+0x6a],esi
  40eae9:	sub    eax,0x7a882eb7
  40eaee:	pop    esi
  40eaef:	pop    eax
  40eaf0:	bound  esi,QWORD PTR ds:0x33e9fcb0
  40eaf6:	ss cwde 
  40eaf8:	push   ebp
  40eaf9:	jb     0x40eabd
  40eafb:	mov    dh,0xb0
  40eafd:	bound  esi,QWORD PTR [edx]
  40eaff:	popa   
  40eb00:	in     eax,0xf2
  40eb02:	sti    
  40eb03:	imul   edi,DWORD PTR [ebx-0x73c19ea3],0xef461eab
  40eb0d:	and    DWORD PTR [esi+0x2ead5b9a],ebx
  40eb13:	call   0x90ef:0x3899cb0b
  40eb1a:	inc    ebx
  40eb1b:	mov    al,ds:0xd4f26667
  40eb20:	adc    dl,al
  40eb22:	fwait
  40eb23:	std    
  40eb24:	pusha  
  40eb25:	ret    
  40eb26:	rcr    DWORD PTR cs:[ebp+0x7055a1db],0x31
  40eb2e:	jb     0x40ebaf
  40eb30:	pop    ds
  40eb31:	call   0x3a93:0x25e58043
  40eb38:	hlt    
  40eb39:	aas    
  40eb3a:	sub    bl,0xe5
  40eb3d:	shl    DWORD PTR [esp+edi*1-0x5c],0x46
  40eb42:	repnz (bad) 
  40eb44:	(bad)  
  40eb45:	fxch   st(6)
  40eb47:	jns    0x40eada
  40eb49:	icebp  
  40eb4a:	push   cs
  40eb4b:	cdq    
  40eb4c:	(bad)  
  40eb4d:	sub    eax,0x88de8645
  40eb52:	fwait
  40eb53:	adc    al,al
  40eb55:	clc    
  40eb56:	inc    esi
  40eb57:	adc    eax,0xcd037fab
  40eb5c:	add    eax,0x436628ea
  40eb61:	mov    BYTE PTR ds:[ebp+eiz*8-0x5f],0xed
  40eb67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb68:	ja     0x40eb58
  40eb6a:	xor    eax,0xf29002d7
  40eb6f:	and    al,0x2f
  40eb71:	and    BYTE PTR [edi+0x66],cl
  40eb74:	dec    ebp
  40eb75:	loop   0x40eb35
  40eb77:	imul   edx,DWORD PTR [eax],0xfffffff5
  40eb7a:	fucomip st,st(0)
  40eb7c:	push   edi
  40eb7d:	sar    ebx,cl
  40eb7f:	jp     0x40ebf4
  40eb81:	xor    BYTE PTR [edx],ch
  40eb83:	and    esi,DWORD PTR [esi-0x60]
  40eb86:	sub    eax,0xa84b3913
  40eb8b:	bound  ebp,QWORD PTR [eax]
  40eb8d:	mov    eax,?
  40eb8f:	scas   al,BYTE PTR es:[edi]
  40eb90:	clc    
  40eb91:	sub    DWORD PTR [edi-0x43],esi
  40eb94:	rcl    BYTE PTR [eax+0x3757cfcc],cl
  40eb9a:	pop    es
  40eb9b:	mov    eax,0xf2938fe9
  40eba0:	dec    eax
  40eba1:	xchg   edx,eax
  40eba2:	mov    ecx,0xe7996955
  40eba7:	sbb    cl,BYTE PTR [ecx]
  40eba9:	add    eax,0x6b26cbf9
  40ebae:	out    0x96,al
  40ebb0:	pop    ds
  40ebb1:	inc    eax
  40ebb2:	mov    edi,ecx
  40ebb4:	mov    cl,0x18
  40ebb6:	mov    bh,0x71
  40ebb8:	fmulp  st(6),st
  40ebba:	pop    edx
  40ebbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebbc:	call   0xb2481806
  40ebc1:	pop    edi
  40ebc2:	fld    DWORD PTR [eax-0x4657a098]
  40ebc8:	rol    DWORD PTR [edi],1
  40ebca:	pop    ecx
  40ebcb:	shl    eax,cl
  40ebcd:	mov    ebp,0x5f9be113
  40ebd2:	pop    esp
  40ebd3:	es sbb al,0x2
  40ebd6:	mov    dl,0x86
  40ebd8:	dec    edi
  40ebd9:	jle    0x40ebc6
  40ebdb:	or     al,0xd2
  40ebdd:	retf   
  40ebde:	pop    ecx
  40ebdf:	fldcw  WORD PTR [edi]
  40ebe1:	or     DWORD PTR [ecx+0x32],ebp
  40ebe4:	xchg   ebx,eax
  40ebe5:	mov    dh,BYTE PTR [ecx]
  40ebe7:	data16 (bad) 
  40ebe9:	cmc    
  40ebea:	addr16 sub ebp,ebx
  40ebed:	das    
  40ebee:	sub    DWORD PTR [eax+0x7b],edi
  40ebf1:	shl    BYTE PTR [esi+0x6f9f30b7],cl
  40ebf7:	(bad)  
  40ebf8:	adc    eax,0xb9e54265
  40ebfd:	div    DWORD PTR [edx+0x5f]
  40ec00:	push   ds
  40ec01:	or     ebp,DWORD PTR [edx+0x49]
  40ec04:	mov    gs,WORD PTR [ecx]
  40ec06:	xchg   ebp,eax
  40ec07:	push   esi
  40ec08:	data16 mov ch,0xc1
  40ec0b:	cdq    
  40ec0c:	mov    es,WORD PTR [edx-0x5b]
  40ec0f:	(bad)  [edi+0x555b81fa]
  40ec15:	ret    0x465f
  40ec18:	add    DWORD PTR [edi+0x282283ce],0xfffffff0
  40ec1f:	push   es
  40ec20:	aaa    
  40ec21:	(bad)  
  40ec22:	mov    dh,0x44
  40ec24:	daa    
  40ec25:	mov    esi,0xb0b40f57
  40ec2a:	xchg   esp,eax
  40ec2b:	adc    DWORD PTR [ebx-0x63e2ee0a],eax
  40ec31:	mov    cl,0x5e
  40ec33:	pop    eax
  40ec34:	or     al,BYTE PTR [eax]
  40ec36:	icebp  
  40ec37:	pop    ecx
  40ec38:	pop    edx
  40ec39:	sbb    DWORD PTR ds:0xefea25db,eax
  40ec3f:	add    ah,BYTE PTR [edx-0xd7e2a3b]
  40ec45:	mov    ds:0x1051d4cc,eax
  40ec4a:	mov    eax,ds:0xfabd0b44
  40ec4f:	clc    
  40ec50:	xor    BYTE PTR [esi],dl
  40ec52:	jb     0x40ec33
  40ec54:	inc    edx
  40ec55:	lock push es
  40ec57:	loop   0x40ec4f
  40ec59:	sub    al,0x68
  40ec5b:	sbb    al,0x91
  40ec5d:	out    0x49,eax
  40ec5f:	popf   
  40ec60:	cmp    al,0x36
  40ec62:	adc    al,0xf0
  40ec64:	xor    eax,0x129707ef
  40ec69:	test   DWORD PTR [esi],ebx
  40ec6b:	mov    ecx,0x692e4b64
  40ec70:	rcr    BYTE PTR [eax-0x4103a99a],0xdd
  40ec77:	int    0x9e
  40ec79:	sub    eax,0x388963f2
  40ec7e:	cmp    DWORD PTR [edi+0x1773f09],esp
  40ec84:	sbb    BYTE PTR [ebx],0x3e
  40ec87:	sbb    DWORD PTR [edx],esp
  40ec89:	add    bl,BYTE PTR [ebx-0x88f6941]
  40ec8f:	pop    esi
  40ec90:	retf   0x9e23
  40ec93:	mov    cl,0xff
  40ec95:	imul   edx,eax,0xd88f76f0
  40ec9b:	add    DWORD PTR [eax+0x633dcaa1],eax
  40eca1:	rcr    DWORD PTR [edx-0x167c8c04],0x7d
  40eca8:	jbe    0x40ec58
  40ecaa:	inc    eax
  40ecab:	mov    eax,edx
  40ecad:	or     ebx,DWORD PTR [ebx-0x3bc98d94]
  40ecb3:	xchg   ebx,eax
  40ecb4:	sub    cl,BYTE PTR [eax+0x424ec2af]
  40ecba:	pop    ecx
  40ecbb:	add    DWORD PTR [eax+0x1a75a6c],ebp
  40ecc1:	cmp    BYTE PTR [edi],ch
  40ecc3:	in     eax,dx
  40ecc4:	push   cs
  40ecc5:	mov    esp,0xb0238c25
  40ecca:	shr    BYTE PTR [edi-0x7fbb1427],0x95
  40ecd1:	dec    edi
  40ecd2:	shl    BYTE PTR [edx+0x3394db2a],1
  40ecd8:	add    ch,BYTE PTR [ebx+edi*2]
  40ecdb:	fninit 
  40ecdd:	push   0x7
  40ecdf:	or     eax,0xa1a7659c
  40ece4:	mov    cl,BYTE PTR [edx]
  40ece6:	pop    ebp
  40ece7:	test   DWORD PTR [eax+0x4b],ebx
  40ecea:	xchg   DWORD PTR [esi-0x3888c148],esp
  40ecf0:	test   eax,0xbf195a2b
  40ecf5:	xor    eax,0x63a0a8df
  40ecfa:	gs sub eax,0x63506a04
  40ed00:	fld    QWORD PTR [ebx]
  40ed02:	jb     0x40ed42
  40ed04:	cmp    ebx,edi
  40ed06:	repnz push cs
  40ed08:	sahf   
  40ed09:	test   DWORD PTR [eax+0x1c],ecx
  40ed0c:	mov    esi,0x4cf40011
  40ed11:	inc    edx
  40ed12:	mov    BYTE PTR [edi],cl
  40ed14:	mov    eax,ds:0x133a1624
  40ed19:	pop    ebx
  40ed1a:	fbld   TBYTE PTR [ebx]
  40ed1c:	push   edx
  40ed1d:	fmulp  st(0),st
  40ed1f:	imul   esp,DWORD PTR [esi],0xe61ae379
  40ed25:	sub    edx,DWORD PTR [ebx+0x37]
  40ed28:	leave  
  40ed29:	jmp    0x40ecee
  40ed2b:	rol    DWORD PTR [ebp-0x40],cl
  40ed2e:	add    BYTE PTR [eax],bl
  40ed30:	push   ebp
  40ed31:	adc    eax,0xff8d2337
  40ed36:	ins    DWORD PTR es:[edi],dx
  40ed37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed38:	cs push ds
  40ed3a:	sub    dh,cl
  40ed3c:	mov    ecx,0x1c022de1
  40ed41:	(bad)  
  40ed42:	std    
  40ed43:	xor    BYTE PTR [esi+0x77],ah
  40ed46:	mov    ecx,DWORD PTR [eax-0x34]
  40ed49:	jns    0x40ecec
  40ed4b:	mov    ebp,0x1bab5927
  40ed50:	push   ss
  40ed51:	xchg   edi,eax
  40ed52:	pmulhuw mm1,mm4
  40ed55:	ret    
  40ed56:	div    BYTE PTR [ebp+0x63]
  40ed59:	sbb    dl,BYTE PTR [ecx]
  40ed5b:	add    ecx,DWORD PTR [edi]
  40ed5d:	test   DWORD PTR [edi+0x4a],ebx
  40ed60:	hlt    
  40ed61:	(bad)  
  40ed62:	xchg   edx,eax
  40ed63:	rcl    bl,cl
  40ed65:	and    ebp,DWORD PTR [ebp+0x66]
  40ed68:	shl    dl,cl
  40ed6a:	outs   dx,DWORD PTR ds:[esi]
  40ed6b:	lods   eax,DWORD PTR ds:[esi]
  40ed6c:	lods   al,BYTE PTR ds:[esi]
  40ed6d:	pushf  
  40ed6e:	shl    DWORD PTR [edx],1
  40ed70:	or     al,0xd3
  40ed72:	push   ebp
  40ed73:	outs   dx,DWORD PTR ds:[esi]
  40ed74:	add    ah,BYTE PTR [edx]
  40ed76:	mov    ecx,0x8b9ac9fe
  40ed7b:	cmp    al,0xd0
  40ed7d:	aam    0x82
  40ed7f:	popa   
  40ed80:	mov    bh,0x2b
  40ed82:	dec    ebx
  40ed83:	cmp    esp,DWORD PTR [eax-0x56ebeacb]
  40ed89:	or     DWORD PTR [ecx],ebx
  40ed8b:	mov    dl,0xf4
  40ed8d:	jbe    0x40edd3
  40ed8f:	inc    ebx
  40ed90:	xor    al,0x1a
  40ed92:	mov    esi,0xe553e089
  40ed97:	ja     0x40ed7a
  40ed99:	dec    ecx
  40ed9a:	dec    ebp
  40ed9c:	adc    al,BYTE PTR [ebx-0x33]
  40ed9f:	fimul  DWORD PTR [ebp-0x4e]
  40eda2:	out    dx,al
  40eda3:	gs std 
  40eda5:	xor    eax,0xef34dffe
  40edaa:	push   0x2d
  40edac:	add    ebx,DWORD PTR [eax]
  40edae:	cli    
  40edaf:	mov    edx,0xab4d68a
  40edb4:	xor    BYTE PTR [eax+ecx*1-0x6d],ah
  40edb8:	mov    ecx,0x768c36a2
  40edbd:	mov    al,0x2d
  40edbf:	adc    DWORD PTR [esi],ebp
  40edc1:	in     al,0xcb
  40edc3:	dec    esp
  40edc4:	and    bh,BYTE PTR [ebx-0x67e8b101]
  40edca:	dec    ecx
  40edcb:	das    
  40edcc:	scas   al,BYTE PTR es:[edi]
  40edcd:	icebp  
  40edce:	das    
  40edcf:	xor    bl,ah
  40edd1:	jne    0x40ee0c
  40edd3:	(bad)  
  40edd4:	jle    0x40ed57
  40edd6:	or     BYTE PTR [ecx+edi*2-0x7f6f2327],bh
  40eddd:	mov    eax,0xfc73877b
  40ede2:	and    BYTE PTR [edx-0x6d],ch
  40ede5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ede6:	push   es
  40ede7:	int    0x37
  40ede9:	clc    
  40edea:	test   eax,0xeaf50154
  40edef:	cmp    BYTE PTR [edx+0x38934987],0x8f
  40edf6:	test   eax,0xc0c53bf0
  40edfb:	out    0x73,eax
  40edfd:	enter  0x918b,0x36
  40ee01:	xor    DWORD PTR [eax-0x2c4efaae],eax
  40ee07:	in     al,dx
  40ee08:	stos   DWORD PTR es:[edi],eax
  40ee09:	pop    esp
  40ee0a:	inc    edi
  40ee0b:	mov    al,ds:0x2252092d
  40ee10:	out    0xbb,eax
  40ee12:	out    dx,eax
  40ee13:	jne    0x40ee5f
  40ee15:	(bad)  
  40ee16:	pop    ds
  40ee17:	ffreep st(3)
  40ee19:	sbb    ch,BYTE PTR [ebx+0x4f8746e9]
  40ee1f:	sub    edx,DWORD PTR [esi+0x39]
  40ee22:	scas   eax,DWORD PTR es:[edi]
  40ee23:	jnp    0x40ee9e
  40ee25:	inc    edi
  40ee26:	(bad)  
  40ee27:	fild   WORD PTR [ebx+0x4e]
  40ee2a:	mov    DWORD PTR [esi],eax
  40ee2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee2d:	ja     0x40edea
  40ee2f:	jmp    0x40edcd
  40ee31:	aad    0x65
  40ee33:	call   DWORD PTR [edi+0x38]
  40ee36:	push   edi
  40ee37:	fwait
  40ee38:	mov    DWORD PTR [ebx+0x3a],esi
  40ee3b:	mov    al,ds:0xdc0c14c9
  40ee40:	xor    eax,0x54390f8c
  40ee45:	add    dl,cl
  40ee47:	in     eax,dx
  40ee48:	add    DWORD PTR [edi-0x4f],ecx
  40ee4b:	test   BYTE PTR [ebp-0x1d7244e1],0xef
  40ee52:	pusha  
  40ee53:	dec    ebx
  40ee54:	popf   
  40ee55:	mov    eax,ds:0x94c92220
  40ee5a:	(bad)  
  40ee5b:	(bad)  
  40ee5c:	cmp    WORD PTR [edi-0x5fc66686],0x25
  40ee64:	mov    al,ds:0xcd6f433e
  40ee69:	cmp    eax,0xdc6c7239
  40ee6e:	shl    BYTE PTR [ecx-0x45],0x9b
  40ee72:	mov    bh,0xbb
  40ee74:	jmp    0x83da:0xbc3204c8
  40ee7b:	sub    DWORD PTR [eax-0x73a40153],0xffffffc2
  40ee82:	jb     0x40ee5b
  40ee84:	mov    eax,eax
  40ee86:	add    edx,DWORD PTR [ebp-0x137eeec1]
  40ee8c:	pop    ebp
  40ee8d:	sbb    al,0x42
  40ee8f:	mov    al,0xf8
  40ee91:	rcr    BYTE PTR ds:0x6a5a97b4,cl
  40ee97:	aam    0x10
  40ee99:	jg     0x40ef1a
  40ee9b:	mov    ch,0xac
  40ee9d:	adc    BYTE PTR [esi+0x78b4717d],0x22
  40eea4:	neg    BYTE PTR [edx]
  40eea6:	pop    esi
  40eea7:	div    BYTE PTR [esi-0x14c54695]
  40eead:	jnp    0x40ee3d
  40eeaf:	sbb    eax,0x1246b5b4
  40eeb4:	faddp  st(2),st
  40eeb6:	out    dx,eax
  40eeb7:	clc    
  40eeb8:	loopne 0x40eef0
  40eeba:	cli    
  40eebb:	in     al,0x4a
  40eebd:	mov    ds:0xf11d0520,eax
  40eec2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eec3:	xor    eax,0x62e0530c
  40eec8:	jecxz  0x40eef6
  40eeca:	jmp    0xad0fb94f
  40eecf:	cmp    DWORD PTR [eax+0xe],edi
  40eed2:	and    ebp,DWORD PTR [eax]
  40eed4:	mov    esi,0xdb22f48c
  40eed9:	add    eax,0x4f3a386e
  40eede:	or     BYTE PTR [ecx+ecx*8+0x65a61f80],al
  40eee5:	mov    bl,0xf2
  40eee7:	jmp    0x38979cec
  40eeec:	scas   eax,DWORD PTR es:[edi]
  40eeed:	outs   dx,DWORD PTR ds:[esi]
  40eeee:	sbb    eax,0xc0a9ee2e
  40eef3:	scas   eax,DWORD PTR es:[edi]
  40eef4:	cmp    eax,0x69234f88
  40eef9:	xor    bh,BYTE PTR [edx-0x7f]
  40eefc:	dec    esp
  40eefd:	mov    ch,0x71
  40eeff:	mov    ebx,0x53c36235
  40ef04:	adc    ebp,DWORD PTR [ebp+0x60]
  40ef07:	xor    eax,0xe14bd680
  40ef0c:	test   ch,dh
  40ef0e:	sbb    DWORD PTR [ebx-0xd],ebp
  40ef11:	popf   
  40ef12:	cmp    al,0x69
  40ef14:	cmp    DWORD PTR [ecx-0x772e4424],0x45
  40ef1b:	aam    0x88
  40ef1d:	iret   
  40ef1e:	xchg   ebp,eax
  40ef1f:	fild   QWORD PTR [edx-0x68]
  40ef22:	or     eax,0x63d504b6
  40ef27:	ds jb  0x40eec6
  40ef2a:	fidiv  DWORD PTR [edi+0x4f]
  40ef2d:	test   BYTE PTR [ecx+0x49837e94],ah
  40ef33:	cmp    al,0x83
  40ef35:	daa    
  40ef36:	add    al,cl
  40ef38:	leave  
  40ef39:	fstp   TBYTE PTR [edi-0x6d]
  40ef3c:	mov    bh,0xe0
  40ef3e:	ins    DWORD PTR es:[edi],dx
  40ef3f:	jp     0x40ef1a
  40ef41:	lods   al,BYTE PTR ds:[esi]
  40ef42:	dec    edx
  40ef43:	enter  0xa749,0xe
  40ef47:	add    eax,DWORD PTR [eax+0x184774c5]
  40ef4d:	in     al,0xff
  40ef4f:	mov    al,ds:0x74fb9c68
  40ef54:	xchg   edi,eax
  40ef55:	sub    bh,BYTE PTR [edx]
  40ef57:	and    DWORD PTR [ebp+0x6d5cf311],0xffffffb7
  40ef5e:	sti    
  40ef5f:	shr    BYTE PTR [eax-0x5],cl
  40ef62:	mov    esi,es
  40ef64:	popf   
  40ef65:	cwde   
  40ef66:	int3   
  40ef67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef68:	or     eax,0xaa5a05a6
  40ef6d:	js     0x40efb0
  40ef6f:	xchg   ebp,eax
  40ef70:	or     al,0x1b
  40ef72:	push   ss
  40ef73:	pop    ecx
  40ef74:	in     eax,0x87
  40ef76:	lahf   
  40ef77:	aad    0xe6
  40ef79:	pmaxub mm2,QWORD PTR [edx+0x2908db9f]
  40ef80:	xchg   DWORD PTR [edx+0x47],ecx
  40ef83:	ja     0x40effd
  40ef85:	sahf   
  40ef86:	mov    al,0x4e
  40ef88:	into   
  40ef89:	lea    ebp,ds:0xd2dde7b4
  40ef8f:	sub    al,0xa8
  40ef91:	fist   DWORD PTR [esp+esi*2+0x2902777f]
  40ef98:	(bad)  
  40ef99:	cmp    ecx,edx
  40ef9b:	test   DWORD PTR [edi-0x3],ecx
  40ef9e:	mov    ch,0x38
  40efa0:	push   0xffffff89
  40efa2:	mov    edi,0x1bc0f49e
  40efa7:	mov    al,0xac
  40efa9:	push   0x60
  40efab:	aaa    
  40efac:	retf   0xdea7
  40efaf:	lea    edx,[edi]
  40efb1:	cdq    
  40efb2:	retf   0x68e0
  40efb5:	xor    edx,DWORD PTR [edi-0x3]
  40efb8:	lods   eax,DWORD PTR ds:[esi]
  40efb9:	(bad)  
  40efba:	neg    BYTE PTR [esi]
  40efbc:	or     al,0xb6
  40efbe:	push   esi
  40efbf:	je     0x40f009
  40efc1:	ja     0x40ef82
  40efc3:	jnp    0x40efd2
  40efc5:	push   ds
  40efc6:	adc    ebp,DWORD PTR [eax+0xa976038]
  40efcc:	pusha  
  40efcd:	inc    eax
  40efce:	(bad)  
  40efcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efd0:	int3   
  40efd1:	pop    edi
  40efd2:	out    0x46,al
  40efd4:	mov    ebx,0xf1bb0509
  40efd9:	jle    0x40f023
  40efdb:	gs sbb al,0x88
  40efde:	dec    eax
  40efdf:	adc    eax,0xca3d8f0d
  40efe4:	mov    ah,0x84
  40efe6:	xchg   ebx,eax
  40efe7:	push   esp
  40efe8:	fs jns 0x40ef70
  40efeb:	fstp   TBYTE PTR [edi-0x5b37af3c]
  40eff1:	and    BYTE PTR [eax-0x13],ah
  40eff4:	out    dx,eax
  40eff5:	je     0x40f037
  40eff7:	(bad)  [esp+esi*4+0x447f046b]
  40effe:	aam    0xf7
  40f000:	in     al,0x63
  40f002:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f003:	je     0x40f011
  40f005:	xchg   BYTE PTR [ebx-0x44],dh
  40f008:	mov    edx,0x6f54081b
  40f00d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f00e:	cmp    al,BYTE PTR [edi+0x2cef8713]
  40f014:	lds    ebp,FWORD PTR [ebx-0x23d49f52]
  40f01a:	add    DWORD PTR [esi-0x1e3f6212],esi
  40f020:	mov    al,0xe7
  40f022:	cs jnp 0x40f06b
  40f025:	ja     0x40f05e
  40f027:	ret    0xb2bf
  40f02a:	jbe    0x40efe7
  40f02c:	pop    esp
  40f02d:	in     eax,dx
  40f02e:	jne    0x40f01c
  40f030:	jmp    0x40f029
  40f032:	pop    ebx
  40f033:	fwait
  40f034:	iret   
  40f035:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f036:	jbe    0x40eff3
  40f038:	inc    esi
  40f039:	lods   eax,DWORD PTR ds:[esi]
  40f03a:	pop    esp
  40f03b:	mov    WORD PTR [edx],ss
  40f03d:	mov    ch,0x2f
  40f03f:	sub    dl,dh
  40f041:	xor    ecx,esi
  40f043:	jg     0x40f051
  40f045:	inc    eax
  40f046:	fnstsw WORD PTR [edx]
  40f048:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f049:	add    BYTE PTR [edx],ch
  40f04b:	scas   eax,DWORD PTR es:[edi]
  40f04c:	(bad)  
  40f04d:	mov    ebp,0xa7086d4e
  40f052:	call   0x7569:0x1f537e6d
  40f059:	push   cs
  40f05a:	xchg   DWORD PTR [esi-0x10f49f84],ecx
  40f060:	or     ebp,DWORD PTR [edi]
  40f062:	pop    ss
  40f063:	scas   eax,DWORD PTR es:[edi]
  40f064:	pcmpgtw mm1,QWORD PTR [ebx+0x198a02a5]
  40f06b:	data16 rol BYTE PTR [esi-0x14],cl
  40f06f:	into   
  40f070:	mov    ds:0xc65bedca,al
  40f075:	pop    esi
  40f076:	add    bl,BYTE PTR [edi+0x6]
  40f079:	jmp    0x2c66b523
  40f07e:	test   DWORD PTR [edx-0x59],edx
  40f081:	mov    edi,0xdbd745f7
  40f086:	add    al,BYTE PTR [ecx+0xa]
  40f089:	iret   
  40f08a:	mov    ds:0x9612d768,al
  40f08f:	mov    WORD PTR [ecx+0x13bd9830],es
  40f095:	ins    DWORD PTR es:[edi],dx
  40f096:	fwait
  40f097:	sub    edi,DWORD PTR [edi-0x2d]
  40f09a:	fdivr  DWORD PTR [ebx-0xf7376d7]
  40f0a0:	or     esp,DWORD PTR [ecx-0xb]
  40f0a3:	icebp  
  40f0a4:	mov    ebp,0x8a19a9fc
  40f0a9:	xchg   esi,eax
  40f0aa:	push   edx
  40f0ab:	fnstsw WORD PTR [edx*4+0x1a48ce7b]
  40f0b2:	hlt    
  40f0b3:	adc    al,0x5a
  40f0b5:	jns    0x40f058
  40f0b7:	adc    al,BYTE PTR [ebx+0x5b473b3f]
  40f0bd:	and    BYTE PTR [ebx+0x17],dh
  40f0c0:	xor    dh,ch
  40f0c2:	pop    ebp
  40f0c3:	or     eax,0x87bebee3
  40f0c8:	add    al,0x53
  40f0ca:	mov    bl,0xb7
  40f0cc:	mov    al,ds:0x48b7fa7
  40f0d1:	jb     0x40f0ed
  40f0d3:	loop   0x40f0bc
  40f0d5:	aas    
  40f0d6:	xchg   ecx,eax
  40f0d7:	ss out dx,al
  40f0d9:	sbb    BYTE PTR [ebx],0x88
  40f0dc:	in     al,dx
  40f0dd:	mov    edi,0x5912b552
  40f0e2:	hlt    
  40f0e3:	sub    bh,al
  40f0e5:	xchg   ebx,eax
  40f0e6:	sub    eax,0xe1076546
  40f0eb:	rcl    DWORD PTR [eax-0x7c],0xf3
  40f0ef:	dec    ebp
  40f0f0:	repnz pop es
  40f0f2:	mov    ds:0xf8de9958,al
  40f0f7:	mov    edi,0x741f04a3
  40f0fc:	xchg   DWORD PTR [edx-0x7a13acb],ecx
  40f102:	xchg   ebx,eax
  40f103:	es xchg ecx,eax
  40f105:	inc    BYTE PTR [esi+0x52adbaf6]
  40f10b:	pop    ebx
  40f10c:	ficomp WORD PTR [ebx+0xe]
  40f10f:	in     eax,0x4e
  40f111:	mov    ebx,0xf0d28df1
  40f116:	dec    esp
  40f117:	push   eax
  40f118:	lds    eax,FWORD PTR [ebp-0x71]
  40f11b:	push   ecx
  40f11c:	sub    al,0x88
  40f11e:	(bad)
  40f122:	stos   BYTE PTR es:[edi],al
  40f123:	daa    
  40f124:	mov    bh,0x76
  40f126:	xor    al,0xc9
  40f128:	jp     0x40f14a
  40f12a:	leave  
  40f12b:	and    DWORD PTR [edx],esp
  40f12d:	mov    esi,0xf4fc3155
  40f132:	and    eax,0xde320053
  40f137:	xchg   BYTE PTR [eax+0x30495331],bh
  40f13d:	mov    esi,DWORD PTR [ebp+0xc]
  40f140:	cmp    esi,eax
  40f142:	mov    eax,DWORD PTR [ebp-0x4]
  40f145:	je     0x40cd96
  40f14b:	xor    eax,edx
  40f14d:	add    eax,ecx
  40f14f:	mov    ecx,DWORD PTR [ebp+0xc]
  40f152:	imul   eax,ecx
  40f155:	add    eax,DWORD PTR [ebp+0x8]
  40f158:	mov    DWORD PTR [ebp+0xc],eax
  40f15b:	mov    eax,DWORD PTR [ebp+0xc]
  40f15e:	pop    esi
  40f15f:	leave  
  40f160:	ret    0x8
  40f163:	push   ebp
  40f164:	mov    ebp,esp
  40f166:	push   ecx
  40f167:	or     eax,0x63ef
  40f16c:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  40f173:	adc    DWORD PTR ds:0x429004,0x1463
  40f17d:	mov    eax,DWORD PTR [ebp-0x4]
  40f180:	mov    edx,DWORD PTR [ebp+0x10]
  40f183:	mov    ecx,DWORD PTR ds:0x42b010
  40f189:	add    DWORD PTR ds:0x42a000,ecx
  40f18f:	mov    ecx,0x7510896
  40f194:	neg    DWORD PTR ds:0x42b010
  40f19a:	xor    eax,ecx
  40f19c:	add    eax,0x3272dd
  40f1a1:	and    DWORD PTR ds:0x429010,0xb4c
  40f1ab:	mov    DWORD PTR [edx],eax
  40f1ad:	and    DWORD PTR ds:0x42c01c,0x0
  40f1b7:	jmp    0x40f1c9
  40f1bc:	mov    edx,DWORD PTR ds:0x42c01c
  40f1c2:	inc    edx
  40f1c3:	mov    DWORD PTR ds:0x42c01c,edx
  40f1c9:	cmp    DWORD PTR ds:0x42c01c,0x1b
  40f1d0:	jae    0x40f1f8
  40f1d6:	cmp    DWORD PTR ds:0x42c01c,0x28
  40f1dd:	jne    0x40f1f3
  40f1e3:	push   0x22f2
  40f1e8:	push   0x42e134
  40f1ed:	call   DWORD PTR ds:0x42ed5d
  40f1f3:	jmp    0x40f1bc
  40f1f8:	mov    eax,DWORD PTR [ebp+0xc]
  40f1fb:	or     DWORD PTR ds:0x42a004,ecx
  40f201:	xor    eax,ecx
  40f203:	push   esi
  40f204:	mov    esi,DWORD PTR [ebp+0x10]
  40f207:	mov    edx,0x3272dd
  40f20c:	add    eax,edx
  40f20e:	mov    DWORD PTR [esi+0x4],eax
  40f211:	mov    eax,DWORD PTR [ebp+0x14]
  40f214:	mov    esi,DWORD PTR [ebp+0x10]
  40f217:	mov    DWORD PTR [esi+0x8],eax
  40f21a:	mov    eax,DWORD PTR [ebp+0x18]
  40f21d:	mov    esi,DWORD PTR [ebp+0x10]
  40f220:	mov    DWORD PTR [esi+0xc],eax
  40f223:	mov    eax,DWORD PTR [ebp+0x1c]
  40f226:	mov    esi,DWORD PTR [ebp+0x10]
  40f229:	mov    DWORD PTR [esi+0x10],eax
  40f22c:	mov    eax,DWORD PTR [ebp+0x8]
  40f22f:	xor    eax,ecx
  40f231:	add    eax,edx
  40f233:	pop    esi
  40f234:	leave  
  40f235:	ret    0x18
  40f238:	push   ebp
  40f239:	mov    ebp,esp
  40f23b:	sub    esp,0xa4
  40f241:	adc    eax,0x77b8
  40f246:	mov    ecx,DWORD PTR [ebp+0x8]
  40f249:	adc    DWORD PTR ds:0x429000,edi
  40f24f:	mov    eax,0x8a89
  40f254:	adc    DWORD PTR ds:0x42900c,0x429028
  40f25e:	xor    ax,WORD PTR [ecx+0x20]
  40f262:	mov    ecx,DWORD PTR ds:0x429028
  40f268:	and    DWORD PTR ds:0x42b00c,ecx
  40f26e:	mov    ecx,0x3b4c
  40f273:	dec    DWORD PTR ds:0x42d014
  40f279:	add    ax,cx
  40f27c:	movzx  eax,ax
  40f27f:	add    ecx,0x1468
  40f285:	mov    DWORD PTR [ebp-0x18],eax
  40f288:	mov    BYTE PTR [ebp-0x1],0x7d
  40f28c:	mov    ecx,DWORD PTR ds:0x412000
  40f292:	mov    ecx,DWORD PTR [ecx]
  40f294:	adc    DWORD PTR ds:0x42d01c,ecx
  40f29a:	lea    eax,[ebp-0x1]
  40f29d:	sub    DWORD PTR ds:0x42c014,0xae5
  40f2a7:	mov    DWORD PTR [ebp-0x10],eax
  40f2aa:	mov    al,BYTE PTR [ebp-0x1]
  40f2ad:	inc    ecx
  40f2ae:	mov    ecx,DWORD PTR [ebp-0x10]
  40f2b1:	xor    al,0x71
  40f2b3:	adc    DWORD PTR ds:0x42b018,0x264
  40f2bd:	sub    al,0xb
  40f2bf:	adc    DWORD PTR ds:0x429014,0x5cc7
  40f2c9:	mov    BYTE PTR [ecx],al
  40f2cb:	mov    DWORD PTR ds:0x42b004,0x11
  40f2d5:	cmp    DWORD PTR ds:0x42b004,0x0
  40f2dc:	je     0x40f31e
  40f2e2:	cmp    DWORD PTR ds:0x42b004,0x1d
  40f2e9:	jne    0x40f304
  40f2ef:	push   0x42e000
  40f2f4:	push   DWORD PTR [ebp-0x18]
  40f2f7:	push   0x0
  40f2f9:	push   0x4fbc
  40f2fe:	call   DWORD PTR ds:0x42ed61
  40f304:	mov    eax,ds:0x42b004
  40f309:	dec    eax
  40f30a:	mov    ds:0x42b004,eax
  40f30f:	jmp    0x40f2d5
  40f314:	sbb    DWORD PTR ds:0x42d010,0x7483
  40f31e:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40f325:	push   ebx
  40f326:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  40f32d:	mov    ecx,DWORD PTR [ebp-0x14]
  40f330:	push   esi
  40f331:	and    DWORD PTR ds:0x42a01c,0x0
  40f33b:	jmp    0x40f34d
  40f340:	mov    esi,DWORD PTR ds:0x42a01c
  40f346:	inc    esi
  40f347:	mov    DWORD PTR ds:0x42a01c,esi
  40f34d:	cmp    DWORD PTR ds:0x42a01c,0x1f
  40f354:	jae    0x40f3f6
  40f35a:	cmp    DWORD PTR ds:0x42a01c,0x21
  40f361:	jne    0x40f377
  40f367:	push   0x42c010
  40f36c:	push   0x562e
  40f371:	call   DWORD PTR ds:0x42ed65
  40f377:	jmp    0x40f340
  40f37c:	and    DWORD PTR ds:0x42d01c,0x0
  40f386:	xor    eax,eax
  40f388:	or     eax,DWORD PTR ds:0x42d01c
  40f38e:	inc    eax
  40f38f:	mov    ds:0x42d01c,eax
  40f394:	cmp    DWORD PTR ds:0x42d01c,0xb
  40f39b:	jne    0x40f3c1
  40f3a1:	push   DWORD PTR [ebp-0x24]
  40f3a4:	push   0x42a010
  40f3a9:	push   0x78c6
  40f3ae:	push   0x42e134
  40f3b3:	push   DWORD PTR [ebp-0x1c]
  40f3b6:	push   0x1e85
  40f3bb:	call   DWORD PTR ds:0x42ed6d
  40f3c1:	cmp    DWORD PTR ds:0x42d01c,0xa
  40f3c8:	jne    0x40f3d9
  40f3ce:	mov    eax,ds:0x42d01c
  40f3d3:	inc    eax
  40f3d4:	mov    ds:0x42d01c,eax
  40f3d9:	cmp    DWORD PTR ds:0x42d01c,0x18
  40f3e0:	jb     0x40f386
  40f3e6:	xor    eax,eax
  40f3e8:	xor    eax,DWORD PTR ds:0x411ff4
  40f3ee:	mov    eax,DWORD PTR [eax]
  40f3f0:	or     DWORD PTR ds:0x42b018,eax
  40f3f6:	mov    eax,0x7510896
  40f3fb:	sbb    DWORD PTR ds:0x42a01c,edx
  40f401:	xor    ecx,eax
  40f403:	or     esi,DWORD PTR ds:0x42a008
  40f409:	mov    esi,0x3272dd
  40f40e:	push   edi
  40f40f:	add    ecx,esi
  40f411:	jmp    0x40f435
  40f416:	mov    DWORD PTR ds:0x42a01c,0x2feb
  40f420:	mov    dl,BYTE PTR [ebp-0x1]
  40f423:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40f42a:	mov    DWORD PTR ds:0x42b01c,0x5ed5
  40f434:	inc    ecx
  40f435:	cmp    ecx,0x40
  40f438:	jb     0x40f416
  40f43e:	mov    DWORD PTR ds:0x429018,0x19
  40f448:	cmp    DWORD PTR ds:0x429018,0x0
  40f44f:	je     0x40f47c
  40f455:	cmp    DWORD PTR ds:0x429018,0x1d
  40f45c:	jne    0x40f468
  40f462:	call   DWORD PTR ds:0x42ed71
  40f468:	mov    edx,DWORD PTR ds:0x429018
  40f46e:	dec    edx
  40f46f:	mov    DWORD PTR ds:0x429018,edx
  40f475:	jmp    0x40f448
  40f47a:	not    edx
  40f47c:	mov    edx,DWORD PTR [ebp-0x14]
  40f47f:	sub    DWORD PTR ds:0x42c00c,0x42b014
  40f489:	xor    edx,eax
  40f48b:	adc    DWORD PTR ds:0x429024,0x42a018
  40f495:	add    edx,esi
  40f497:	mov    DWORD PTR ds:0x42b014,0x72c9
  40f4a1:	jmp    0x40f5bb
  40f4a6:	dec    DWORD PTR ds:0x429014
  40f4ac:	mov    edi,DWORD PTR [ebp+0x8]
  40f4af:	adc    ecx,DWORD PTR ds:0x42a018
  40f4b5:	mov    ecx,0x8a89
  40f4ba:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40f4bf:	and    DWORD PTR ds:0x429008,0x0
  40f4c9:	jmp    0x40f4dd
  40f4ce:	xor    edi,edi
  40f4d0:	xor    edi,DWORD PTR ds:0x429008
  40f4d6:	inc    edi
  40f4d7:	mov    DWORD PTR ds:0x429008,edi
  40f4dd:	cmp    DWORD PTR ds:0x429008,0x10
  40f4e4:	jae    0x40f511
  40f4ea:	cmp    DWORD PTR ds:0x429008,0x19
  40f4f1:	jne    0x40f502
  40f4f7:	push   0x429018
  40f4fc:	call   DWORD PTR ds:0x42ed75
  40f502:	jmp    0x40f4ce
  40f507:	adc    DWORD PTR ds:0x42a010,0x20e4
  40f511:	mov    edi,0x3b4c
  40f516:	sub    DWORD PTR ds:0x42a014,0x7a80
  40f520:	add    cx,di
  40f523:	movzx  ecx,cx
  40f526:	neg    DWORD PTR ds:0x42b000
  40f52c:	mov    DWORD PTR [ebp-0x10],ecx
  40f52f:	and    DWORD PTR ds:0x42a000,0x0
  40f539:	jmp    0x40f54b
  40f53e:	mov    ecx,DWORD PTR ds:0x42a000
  40f544:	inc    ecx
  40f545:	mov    DWORD PTR ds:0x42a000,ecx
  40f54b:	cmp    DWORD PTR ds:0x42a000,0x1f
  40f552:	jae    0x40f57e
  40f558:	cmp    DWORD PTR ds:0x42a000,0x26
  40f55f:	jne    0x40f573
  40f565:	push   0x3463
  40f56a:	push   DWORD PTR [ebp-0x1c]
  40f56d:	call   DWORD PTR ds:0x42ed35
  40f573:	jmp    0x40f53e
  40f578:	or     ecx,0x6b07
  40f57e:	mov    ecx,DWORD PTR [ebp+0x8]
  40f581:	movzx  ecx,WORD PTR [ecx+edx*4]
  40f585:	mov    DWORD PTR ds:0x42a010,0x2266
  40f58f:	xor    ecx,0x8a89
  40f595:	add    ecx,edi
  40f597:	mov    DWORD PTR ds:0x42b018,0x196a
  40f5a1:	mov    edi,DWORD PTR [ebp-0x10]
  40f5a4:	mov    DWORD PTR ds:0x42a018,0x15ce
  40f5ae:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40f5b5:	mov    ecx,0x651b
  40f5ba:	inc    edx
  40f5bb:	mov    ecx,DWORD PTR [ebp-0x18]
  40f5be:	mov    DWORD PTR ds:0x429020,0x7b55
  40f5c8:	cmp    edx,ecx
  40f5ca:	jne    0x40f4a6
  40f5d0:	mov    ecx,DWORD PTR [ebp-0x14]
  40f5d3:	mov    edx,DWORD PTR [ebp+0x10]
  40f5d6:	adc    DWORD PTR ds:0x429008,0x429014
  40f5e0:	xor    ecx,eax
  40f5e2:	mov    DWORD PTR ds:0x429028,0x35c1
  40f5ec:	add    ecx,esi
  40f5ee:	sub    DWORD PTR ds:0x429024,0xd80
  40f5f8:	mov    DWORD PTR [edx],ecx
  40f5fa:	add    ecx,0x553e
  40f600:	mov    ecx,DWORD PTR [ebp-0x14]
  40f603:	add    DWORD PTR ds:0x42901c,0xd2d
  40f60d:	xor    ecx,eax
  40f60f:	add    ecx,esi
  40f611:	mov    DWORD PTR ds:0x42d008,0x74bc
  40f61b:	mov    DWORD PTR [ebp-0x20],ecx
  40f61e:	mov    DWORD PTR ds:0x42a004,edi
  40f624:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  40f62b:	mov    DWORD PTR ds:0x429018,0x1d37
  40f635:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  40f63c:	mov    DWORD PTR ds:0x42901c,0x14b9
  40f646:	mov    DWORD PTR [ebp-0x1c],0xf89c95b5
  40f64d:	mov    DWORD PTR ds:0x42c000,edx
  40f653:	mov    ecx,DWORD PTR [ebp-0xc]
  40f656:	mov    DWORD PTR ds:0x42a018,0x1347
  40f660:	mov    DWORD PTR [ebp+0x8],ecx
  40f663:	mov    DWORD PTR ds:0x429014,0x4ea
  40f66d:	jmp    0x40f78d
  40f672:	sbb    DWORD PTR ds:0x42a018,0x42c008
  40f67c:	mov    ecx,DWORD PTR [ebp+0x8]
  40f67f:	and    edx,DWORD PTR ds:0x42c00c
  40f685:	mov    edx,DWORD PTR [ebp-0x8]
  40f688:	xor    DWORD PTR ds:0x42a008,0x42a018
  40f692:	xor    ecx,eax
  40f694:	xor    edx,eax
  40f696:	sub    ecx,edx
  40f698:	sub    edx,0x6561
  40f69e:	sub    ecx,esi
  40f6a0:	xor    ecx,eax
  40f6a2:	mov    DWORD PTR [ebp+0x8],ecx
  40f6a5:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6a8:	mov    edx,DWORD PTR [ebp-0x64]
  40f6ab:	sub    DWORD PTR ds:0x42901c,0x6b48
  40f6b5:	lea    ecx,[edx+ecx*1+0x5708f2]
  40f6bc:	movzx  edx,WORD PTR ds:0x42900c
  40f6c3:	adc    DWORD PTR ds:0x42c00c,edx
  40f6c9:	mov    DWORD PTR [ebp-0x64],ecx
  40f6cc:	sbb    DWORD PTR ds:0x42a018,0x1891
  40f6d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6d9:	dec    edx
  40f6da:	mov    edx,DWORD PTR [ebp-0x60]
  40f6dd:	lea    ecx,[edx+ecx*1+0x5708f2]
  40f6e4:	mov    DWORD PTR [ebp-0x60],ecx
  40f6e7:	sbb    DWORD PTR ds:0x42900c,0x79ab
  40f6f1:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6f4:	add    DWORD PTR ds:0x42a01c,edi
  40f6fa:	mov    edx,DWORD PTR [ebp-0x5c]
  40f6fd:	lea    ecx,[edx+ecx*1+0x5708f3]
  40f704:	mov    DWORD PTR [ebp-0x5c],ecx
  40f707:	inc    DWORD PTR ds:0x429004
  40f70d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f710:	sbb    DWORD PTR ds:0x42d018,edx
  40f716:	mov    edx,DWORD PTR [ebp-0x58]
  40f719:	and    DWORD PTR ds:0x42c008,0x42b004
  40f723:	lea    ecx,[edx+ecx*1+0x5708f0]
  40f72a:	dec    edx
  40f72b:	mov    DWORD PTR [ebp-0x58],ecx
  40f72e:	movzx  ecx,WORD PTR ds:0x429000
  40f735:	adc    DWORD PTR ds:0x42c008,ecx
  40f73b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f73e:	mov    edx,DWORD PTR [ebp-0x54]
  40f741:	add    DWORD PTR ds:0x42d004,0x42a014
  40f74b:	lea    ecx,[edx+ecx*1+0x5708f1]
  40f752:	mov    DWORD PTR [ebp-0x54],ecx
  40f755:	xor    DWORD PTR ds:0x42d01c,0x80b
  40f75f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f762:	and    DWORD PTR ds:0x42d008,0x7467
  40f76c:	mov    edx,DWORD PTR [ebp-0x50]
  40f76f:	or     DWORD PTR ds:0x42c004,0x42a000
  40f779:	lea    ecx,[edx+ecx*1+0x5708fe]
  40f780:	add    DWORD PTR ds:0x42c010,0x5221
  40f78a:	mov    DWORD PTR [ebp-0x50],ecx
  40f78d:	or     ecx,DWORD PTR ds:0x429028
  40f793:	mov    ecx,DWORD PTR [ebp+0x8]
  40f796:	xor    ecx,eax
  40f798:	add    ecx,esi
  40f79a:	mov    DWORD PTR ds:0x42c004,0x633d
  40f7a4:	jne    0x40f672
  40f7aa:	jmp    0x411e4d
  40f7af:	neg    DWORD PTR ds:0x42901c
  40f7b5:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7b8:	mov    edx,DWORD PTR [ebp-0x8]
  40f7bb:	sub    DWORD PTR ds:0x429008,0x429014
  40f7c5:	xor    ecx,eax
  40f7c7:	xor    edx,eax
  40f7c9:	sbb    DWORD PTR ds:0x42c018,0x25ac
  40f7d3:	sub    ecx,edx
  40f7d5:	or     DWORD PTR ds:0x42d000,0x429014
  40f7df:	sub    ecx,esi
  40f7e1:	xor    ecx,eax
  40f7e3:	mov    DWORD PTR ds:0x42b018,0x1de
  40f7ed:	mov    DWORD PTR [ebp-0x1c],ecx
  40f7f0:	mov    DWORD PTR ds:0x42c000,0x7d6a
  40f7fa:	mov    ecx,DWORD PTR [ebp-0xc]
  40f7fd:	mov    DWORD PTR ds:0x429028,0x9e0
  40f807:	mov    DWORD PTR [ebp+0x8],ecx
  40f80a:	jmp    0x40f91d
  40f80f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f812:	mov    edx,DWORD PTR [ebp-0x8]
  40f815:	xor    ecx,eax
  40f817:	adc    DWORD PTR ds:0x42c008,ecx
  40f81d:	xor    edx,eax
  40f81f:	xor    DWORD PTR ds:0x42900c,0x3273
  40f829:	sub    ecx,edx
  40f82b:	sub    ecx,esi
  40f82d:	or     edi,edi
  40f82f:	xor    ecx,eax
  40f831:	mov    DWORD PTR [ebp+0x8],ecx
  40f834:	and    DWORD PTR ds:0x429020,0x0
  40f83e:	jmp    0x40f850
  40f843:	mov    edi,DWORD PTR ds:0x429020
  40f849:	inc    edi
  40f84a:	mov    DWORD PTR ds:0x429020,edi
  40f850:	cmp    DWORD PTR ds:0x429020,0x1b
  40f857:	jae    0x40f8a8
  40f85d:	cmp    DWORD PTR ds:0x429020,0x6
  40f864:	jne    0x40f87f
  40f86a:	push   0x6ce2
  40f86f:	push   0x42d018
  40f874:	push   0x18a6
  40f879:	call   DWORD PTR ds:0x42ed39
  40f87f:	cmp    DWORD PTR ds:0x429020,0x5
  40f886:	jne    0x40f899
  40f88c:	mov    edi,DWORD PTR ds:0x429020
  40f892:	inc    edi
  40f893:	mov    DWORD PTR ds:0x429020,edi
  40f899:	jmp    0x40f843
  40f89e:	and    DWORD PTR ds:0x42b004,0x42b01c
  40f8a8:	mov    ecx,DWORD PTR [ebp+0x8]
  40f8ab:	mov    edx,DWORD PTR [ebp+0x8]
  40f8ae:	and    DWORD PTR ds:0x42d010,0x0
  40f8b8:	mov    edi,DWORD PTR ds:0x42d010
  40f8be:	inc    edi
  40f8bf:	mov    DWORD PTR ds:0x42d010,edi
  40f8c5:	cmp    DWORD PTR ds:0x42d010,0x5
  40f8cc:	jne    0x40f8e2
  40f8d2:	push   0x42e11d
  40f8d7:	push   0x42e110
  40f8dc:	call   DWORD PTR ds:0x42ed3d
  40f8e2:	cmp    DWORD PTR ds:0x42d010,0x4
  40f8e9:	jne    0x40f8fc
  40f8ef:	mov    edi,DWORD PTR ds:0x42d010
  40f8f5:	inc    edi
  40f8f6:	mov    DWORD PTR ds:0x42d010,edi
  40f8fc:	cmp    DWORD PTR ds:0x42d010,0x15
  40f903:	jb     0x40f8b8
  40f909:	imul   edx,edx,0x5708f2
  40f90f:	xor    ecx,eax
  40f911:	add    ecx,esi
  40f913:	lea    ecx,[ebp+ecx*4-0x64]
  40f917:	mov    edi,DWORD PTR [ecx]
  40f919:	add    edx,edi
  40f91b:	mov    DWORD PTR [ecx],edx
  40f91d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f920:	xor    ecx,eax
  40f922:	add    ecx,esi
  40f924:	jne    0x40f80f
  40f92a:	mov    ecx,DWORD PTR [ebp-0x20]
  40f92d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40f934:	mov    dl,BYTE PTR [ebp-0x1]
  40f937:	cmp    cl,dl
  40f939:	je     0x411dae
  40f93f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f942:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40f949:	mov    edx,DWORD PTR [ebp+0xc]
  40f94c:	cmp    cl,BYTE PTR [edx]
  40f94e:	jne    0x411e5f
  40f954:	mov    ecx,DWORD PTR [ebp-0x14]
  40f957:	mov    edx,DWORD PTR [ebp+0xc]
  40f95a:	movsx  edx,BYTE PTR [edx]
  40f95d:	xor    ecx,eax
  40f95f:	add    ecx,esi
  40f961:	cmp    edx,ecx
  40f963:	mov    ecx,DWORD PTR [ebp-0xc]
  40f966:	mov    DWORD PTR [ebp+0x8],ecx
  40f969:	mov    ecx,DWORD PTR [ebp+0x8]
  40f96c:	je     0x411ed9
  40f972:	jmp    0x40f9a7
  40f977:	mov    ecx,DWORD PTR [ebp+0x8]
  40f97a:	mov    edx,DWORD PTR [ebp-0x8]
  40f97d:	xor    ecx,eax
  40f97f:	xor    edx,eax
  40f981:	sub    ecx,edx
  40f983:	sub    ecx,esi
  40f985:	xor    ecx,eax
  40f987:	mov    DWORD PTR [ebp+0x8],ecx
  40f98a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f98d:	mov    edx,DWORD PTR [ebp+0x8]
  40f990:	xor    ecx,eax
  40f992:	imul   edx,edx,0x5708f2
  40f998:	add    ecx,esi
  40f99a:	lea    ecx,[ebp+ecx*4-0x64]
  40f99e:	mov    edi,DWORD PTR [ecx]
  40f9a0:	add    edx,edi
  40f9a2:	mov    DWORD PTR [ecx],edx
  40f9a4:	mov    ecx,DWORD PTR [ebp+0x8]
  40f9a7:	xor    ecx,eax
  40f9a9:	add    ecx,esi
  40f9ab:	jne    0x40f977
  40f9b1:	mov    ecx,DWORD PTR [ebp-0x14]
  40f9b4:	mov    edx,DWORD PTR [ebp+0x8]
  40f9b7:	xor    ecx,eax
  40f9b9:	xor    edx,eax
  40f9bb:	add    ecx,esi
  40f9bd:	add    edx,esi
  40f9bf:	cmp    ecx,edx
  40f9c1:	jae    0x411df3
  40f9c7:	lea    edx,[ecx-0x3272dd]
  40f9cd:	mov    DWORD PTR [ebp-0x18],edx
  40f9d0:	mov    edi,DWORD PTR [ebp-0x18]
  40f9d3:	mov    DWORD PTR [ebp-0x24],0x705fd0f
  40f9da:	lea    edx,[ebp-0x24]
  40f9dd:	mov    DWORD PTR [ebp-0x10],edx
  40f9e0:	mov    edx,DWORD PTR [ebp-0x10]
  40f9e3:	add    DWORD PTR [edx],0x705fa0f
  40f9e9:	mov    ebx,DWORD PTR [ebp-0x10]
  40f9ec:	xor    edi,eax
  40f9ee:	add    edi,DWORD PTR [ebx]
  40f9f0:	lea    edx,[ebp+ecx*4-0x64]
  40f9f4:	mov    ebx,DWORD PTR [edx]
  40f9f6:	xor    edi,ebx
  40f9f8:	mov    DWORD PTR [edx],edi
  40f9fa:	mov    edx,DWORD PTR [ebp+0x8]
  40f9fd:	xor    edx,eax
  40f9ff:	inc    ecx
  40fa00:	inc    DWORD PTR [ebp-0x18]
  40fa03:	add    edx,esi
  40fa05:	jmp    0x411da1
  40fa0a:	fstp   DWORD PTR [ebx]
  40fa0c:	sti    
  40fa0d:	sar    DWORD PTR [ebx-0x4f],1
  40fa10:	jnp    0x40fa2d
  40fa12:	inc    esi
  40fa13:	xchg   ebx,eax
  40fa14:	or     ch,BYTE PTR [eax]
  40fa16:	jg     0x40f9ed
  40fa18:	ret    0x746f
  40fa1b:	retf   0x7a7a
  40fa1e:	sti    
  40fa1f:	pop    edi
  40fa20:	jp     0x40fa9c
  40fa22:	pushf  
  40fa23:	mov    dl,0x6
  40fa25:	cmc    
  40fa26:	cmp    esp,DWORD PTR [ecx+0x56406a0a]
  40fa2c:	cmp    ah,BYTE PTR [edx+eax*4-0x18fc3ad1]
  40fa33:	sbb    BYTE PTR [eax+0x53],bh
  40fa36:	xchg   edx,eax
  40fa37:	js     0x40fa64
  40fa39:	jne    0x40fa04
  40fa3b:	mov    bh,0x68
  40fa3d:	jg     0x40fa7a
  40fa3f:	mov    ?,WORD PTR [edi+ecx*2+0x5b]
  40fa43:	or     DWORD PTR [edx-0x640a1d50],esp
  40fa49:	cmp    al,0xa4
  40fa4b:	fwait
  40fa4c:	das    
  40fa4d:	in     al,dx
  40fa4e:	xor    DWORD PTR [ebx],ebp
  40fa50:	mov    esp,0xd530789e
  40fa55:	jns    0x40fa47
  40fa57:	stos   BYTE PTR es:[edi],al
  40fa58:	dec    edi
  40fa59:	outs   dx,BYTE PTR ds:[esi]
  40fa5a:	sub    ah,BYTE PTR [ebx]
  40fa5c:	and    bl,BYTE PTR [ecx-0x17]
  40fa5f:	xchg   esi,eax
  40fa60:	or     ebx,DWORD PTR [ebx]
  40fa62:	in     eax,0x6a
  40fa64:	call   0xa410:0xbf4e8a4f
  40fa6b:	xor    eax,0x9dcdf8dc
  40fa70:	and    BYTE PTR [ebx],0x1a
  40fa73:	aas    
  40fa74:	mov    BYTE PTR [esi+0x69ce0888],0xa4
  40fa7b:	dec    ebp
  40fa7c:	fwait
  40fa7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa7e:	les    esp,FWORD PTR [edx+0x26690dd2]
  40fa84:	or     BYTE PTR cs:[ecx-0x84fb43d],bh
  40fa8b:	repnz retf 
  40fa8d:	popf   
  40fa8e:	or     DWORD PTR [esi-0x73e0b47b],eax
  40fa94:	mov    esp,DWORD PTR [esi+0xc]
  40fa97:	cs pop es
  40fa99:	pop    edi
  40fa9a:	(bad)  ss:[edx-0x3d672a83]
  40faa1:	inc    ebp
  40faa2:	sub    eax,0x607cf88b
  40faa7:	push   0x3e039893
  40faac:	push   esi
  40faad:	sahf   
  40faae:	pop    ebp
  40faaf:	xchg   esi,eax
  40fab0:	and    ch,BYTE PTR [edx+0x63]
  40fab3:	loop   0x40fb23
  40fab5:	cmp    bh,BYTE PTR [edx]
  40fab7:	popf   
  40fab8:	mov    ebx,0xc1c0bb82
  40fabd:	fstp   QWORD PTR [ebx]
  40fabf:	fsub   st,st(6)
  40fac1:	pop    edx
  40fac2:	sar    DWORD PTR [ecx+edi*8],1
  40fac5:	push   ss
  40fac6:	push   es
  40fac7:	push   es
  40fac8:	jge    0x40fa4f
  40faca:	cmp    edx,DWORD PTR [edi+ebp*4]
  40facd:	sbb    esp,DWORD PTR [ecx+0x4]
  40fad0:	out    dx,eax
  40fad1:	sub    al,0x1
  40fad3:	bound  ebp,QWORD PTR [ecx+0x323af6e8]
  40fad9:	xchg   DWORD PTR [ebp+0x19db5441],ebx
  40fadf:	and    DWORD PTR [ebx-0x311b3f65],0x28
  40fae6:	mov    cl,0xa3
  40fae8:	jl     0x40fb69
  40faea:	pop    eax
  40faeb:	xchg   edx,eax
  40faec:	repnz cmps BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40faef:	dec    edx
  40faf0:	cmp    eax,0x77bb6567
  40faf5:	jl     0x40fb22
  40faf7:	fwait
  40faf8:	std    
  40faf9:	sti    
  40fafa:	std    
  40fafb:	pop    ecx
  40fafc:	shl    BYTE PTR cs:[eax-0x62cdd3d6],0x24
  40fb04:	ret    0xe966
  40fb07:	test   DWORD PTR [ecx-0x5b00e5ce],edx
  40fb0d:	lahf   
  40fb0e:	cmc    
  40fb0f:	(bad)  
  40fb10:	and    ah,bl
  40fb12:	shl    DWORD PTR [esi-0x30ce45a5],cl
  40fb18:	jecxz  0x40fae1
  40fb1a:	cmp    eax,0x5007d473
  40fb1f:	mov    esp,0x666144bd
  40fb24:	test   BYTE PTR [ecx+0x329e632],ch
  40fb2a:	jnp    0x40fae9
  40fb2c:	and    DWORD PTR [edx+0x33f06e03],edi
  40fb32:	ret    
  40fb33:	xchg   esi,eax
  40fb34:	popa   
  40fb35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb36:	inc    esp
  40fb37:	and    DWORD PTR [eax+0x26cfc20a],eax
  40fb3d:	jnp    0x40fb2b
  40fb3f:	cwde   
  40fb40:	int3   
  40fb41:	loop   0x40fbba
  40fb43:	push   ss
  40fb44:	push   0xbbd7503f
  40fb49:	inc    eax
  40fb4a:	leave  
  40fb4b:	jo     0x40fb84
  40fb4d:	xor    al,0xf9
  40fb4f:	inc    ebp
  40fb50:	outs   dx,DWORD PTR ds:[esi]
  40fb51:	pop    ds
  40fb52:	push   ds
  40fb53:	inc    ebx
  40fb54:	cmp    al,0xe8
  40fb56:	mov    ds:0x12948548,eax
  40fb5b:	gs mov dl,0x63
  40fb5e:	adc    ch,BYTE PTR [ecx+0x55a37b8c]
  40fb64:	(bad)  
  40fb65:	sahf   
  40fb66:	dec    eax
  40fb67:	push   edx
  40fb68:	jns    0x40fb79
  40fb6a:	xor    al,BYTE PTR [esi+ecx*2-0x7d66be53]
  40fb71:	sub    eax,0x67db9710
  40fb76:	jns    0x40fb72
  40fb78:	dec    ebp
  40fb79:	push   es
  40fb7a:	or     al,BYTE PTR [ebp-0x7b4023ef]
  40fb80:	or     DWORD PTR [edx+0x2e38ffc4],ebp
  40fb86:	cmc    
  40fb87:	std    
  40fb88:	pop    esp
  40fb89:	stos   BYTE PTR es:[edi],al
  40fb8a:	mov    dl,0x28
  40fb8c:	mov    BYTE PTR [esi+0x377e5c81],al
  40fb92:	cdq    
  40fb93:	sub    eax,0x6952666b
  40fb98:	fst    DWORD PTR [ebp+0x575f739f]
  40fb9e:	fs pop ebp
  40fba0:	daa    
  40fba1:	cmp    bh,BYTE PTR [ebx-0x2fb6d8a7]
  40fba7:	xlat   BYTE PTR ds:[ebx]
  40fba8:	mov    ebp,0x427a0b63
  40fbad:	(bad)  
  40fbae:	jl     0x40fbe4
  40fbb0:	scas   eax,DWORD PTR es:[edi]
  40fbb1:	out    0x38,eax
  40fbb3:	shr    DWORD PTR [eax+0x6d92a5ef],1
  40fbb9:	jecxz  0x40fb5a
  40fbbb:	jmp    0x6b7ba4ad
  40fbc0:	std    
  40fbc1:	lea    ebx,[eiz*1+0x45c612e4]
  40fbc8:	fsubr  QWORD PTR [edx]
  40fbca:	daa    
  40fbcb:	mov    bh,0x3c
  40fbcd:	push   eax
  40fbce:	scas   eax,DWORD PTR es:[edi]
  40fbcf:	add    ebp,DWORD PTR [ecx]
  40fbd1:	lahf   
  40fbd2:	sub    eax,0xbe095e76
  40fbd7:	stos   DWORD PTR es:[edi],eax
  40fbd8:	or     cl,BYTE PTR [ebx+0x21]
  40fbdb:	std    
  40fbdc:	push   ds
  40fbdd:	push   ss
  40fbde:	mov    WORD PTR [ebx+0x2a069f33],es
  40fbe4:	mov    ecx,0xdb41974b
  40fbe9:	repnz sti 
  40fbeb:	inc    ebp
  40fbec:	cwde   
  40fbed:	rcl    BYTE PTR [ebx],1
  40fbef:	pop    es
  40fbf0:	push   ds
  40fbf1:	aad    0xda
  40fbf3:	lods   eax,DWORD PTR ds:[esi]
  40fbf4:	fild   WORD PTR [edi+0x4]
  40fbf7:	imul   eax,ebp,0x50
  40fbfa:	ret    0x6a7c
  40fbfd:	adc    dl,BYTE PTR [edx]
  40fbff:	test   eax,0x4f083f61
  40fc04:	retf   0x1338
  40fc07:	jmp    0x40fbde
  40fc09:	jmp    0x40fbe1
  40fc0b:	jp     0x40fbd4
  40fc0d:	outs   dx,DWORD PTR ds:[esi]
  40fc0e:	fwait
  40fc0f:	(bad)  
  40fc10:	pop    eax
  40fc11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc12:	je     0x40fc35
  40fc14:	(bad)  
  40fc15:	pop    esp
  40fc16:	xchg   esp,eax
  40fc17:	clc    
  40fc18:	inc    edi
  40fc19:	aaa    
  40fc1a:	mov    DWORD PTR [ebx+0x56442b2e],ecx
  40fc20:	div    DWORD PTR [edx-0x41]
  40fc23:	shr    DWORD PTR [ebp-0x60ace658],1
  40fc29:	not    BYTE PTR [ebx+esi*4+0x7877cc33]
  40fc30:	imul   esp,esp,0xffffffd6
  40fc33:	fst    QWORD PTR [ecx+edx*2+0x2ce5512]
  40fc3a:	ins    DWORD PTR es:[edi],dx
  40fc3b:	fiadd  WORD PTR [esi]
  40fc3d:	sbb    al,0xc2
  40fc3f:	ins    BYTE PTR es:[edi],dx
  40fc40:	push   0xfffffffe
  40fc42:	(bad)  
  40fc44:	clc    
  40fc45:	mov    esp,0x4957fee6
  40fc4a:	fstp   QWORD PTR [eax-0x2062e9ed]
  40fc50:	dec    ebx
  40fc51:	int3   
  40fc52:	retf   
  40fc53:	popf   
  40fc54:	daa    
  40fc55:	dec    al
  40fc57:	cdq    
  40fc58:	cdq    
  40fc59:	ffree  st(6)
  40fc5b:	pop    es
  40fc5c:	imul   esp,ecx,0x1
  40fc5f:	and    DWORD PTR [eax+ebp*1],0x4d
  40fc63:	cs ss dec eax
  40fc66:	pop    esp
  40fc67:	xlat   BYTE PTR ds:[ebx]
  40fc68:	(bad)  
  40fc69:	sti    
  40fc6a:	push   ecx
  40fc6b:	es popa 
  40fc6d:	push   ss
  40fc6e:	imul   esi,DWORD PTR [ebp+0x33aa6c60],0x1c4c3125
  40fc78:	fbld   TBYTE PTR [eax]
  40fc7a:	jb     0x40fc83
  40fc7c:	dec    eax
  40fc7d:	adc    BYTE PTR [ebx+0x1a],0xc
  40fc81:	sub    DWORD PTR [ecx],esp
  40fc83:	sub    eax,0x6088c925
  40fc88:	loop   0x40fd06
  40fc8a:	les    ebx,FWORD PTR [ecx-0x2d]
  40fc8d:	mov    esp,0xd1e733b2
  40fc92:	(bad)  
  40fc93:	repz fcmovbe st,st(5)
  40fc96:	xchg   esp,eax
  40fc97:	cmp    cl,BYTE PTR [ebx+edx*8]
  40fc9a:	addr16 push edi
  40fc9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc9d:	add    al,0x97
  40fc9f:	inc    ebp
  40fca0:	lds    esi,FWORD PTR [edi]
  40fca2:	xor    al,0x63
  40fca4:	arpl   sp,bx
  40fca6:	push   cs
  40fca7:	shr    BYTE PTR [edx],cl
  40fca9:	out    dx,eax
  40fcaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcab:	popf   
  40fcac:	hlt    
  40fcad:	dec    edi
  40fcae:	sub    esi,DWORD PTR [ebx+0x6eae5e39]
  40fcb4:	sub    al,0xbc
  40fcb6:	adc    DWORD PTR [ebx+edi*4],edi
  40fcb9:	mov    WORD PTR [ebp+0x26],?
  40fcbc:	inc    edx
  40fcbd:	lea    esp,[edx]
  40fcbf:	cdq    
  40fcc0:	jne    0x40fce5
  40fcc2:	mov    edi,0xd24515b3
  40fcc7:	inc    ecx
  40fcc8:	jno    0x40fcb5
  40fcca:	test   DWORD PTR [edx],0x526d13cc
  40fcd0:	(bad)  
  40fcd1:	enter  0x83c1,0xc8
  40fcd5:	aas    
  40fcd6:	cmc    
  40fcd7:	loope  0x40fcf7
  40fcd9:	(bad)  [ebx+0x31e7473]
  40fcdf:	cmp    edi,DWORD PTR [ebx]
  40fce1:	or     esp,DWORD PTR [ebx-0x2ee52114]
  40fce7:	sti    
  40fce8:	mov    edi,0xa0de2ade
  40fced:	pop    ecx
  40fcee:	je     0x40fd5d
  40fcf0:	add    BYTE PTR [edx],0x9e
  40fcf3:	pop    ss
  40fcf4:	mov    ebx,0xbf371a85
  40fcf9:	neg    BYTE PTR [ebx+0x55f1544f]
  40fcff:	(bad)  [ecx+0x48536e66]
  40fd05:	rcl    DWORD PTR [edx],1
  40fd07:	sti    
  40fd08:	scas   al,BYTE PTR es:[edi]
  40fd09:	pminub mm6,QWORD PTR [eax]
  40fd0c:	repz fs call 0x9277:0xc68c4178
  40fd15:	add    BYTE PTR [eax],dl
  40fd17:	rol    cl,1
  40fd19:	jb     0x40fd45
  40fd1b:	cmp    eax,0xd00f142
  40fd20:	inc    eax
  40fd21:	sar    DWORD PTR ds:0xe67bf3fb,0x4c
  40fd28:	inc    ebx
  40fd29:	jo     0x40fda8
  40fd2b:	jno    0x40fce7
  40fd2d:	sar    ch,0x64
  40fd30:	sbb    ecx,DWORD PTR [ebx+0x1786bd96]
  40fd36:	add    ecx,edi
  40fd38:	adc    al,0x59
  40fd3a:	adc    al,BYTE PTR [edx+ebp*8+0x35]
  40fd3e:	mov    ch,0xa9
  40fd40:	jg     0x40fd5c
  40fd42:	adc    cl,BYTE PTR [ebp-0x61]
  40fd45:	xor    edx,eax
  40fd47:	leave  
  40fd48:	lods   al,BYTE PTR ds:[esi]
  40fd49:	add    ah,BYTE PTR [esi]
  40fd4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd4c:	ret    
  40fd4d:	cmovb  edx,DWORD PTR [esi-0xb]
  40fd51:	pushf  
  40fd52:	test   al,0x8
  40fd54:	arpl   ax,bp
  40fd56:	aaa    
  40fd57:	xchg   edx,eax
  40fd58:	je     0x40fda6
  40fd5a:	(bad)  
  40fd5b:	out    dx,eax
  40fd5c:	daa    
  40fd5d:	adc    edi,edx
  40fd5f:	pop    esi
  40fd60:	sub    BYTE PTR [edi+0x75eedef3],al
  40fd66:	lods   eax,DWORD PTR ds:[esi]
  40fd67:	fdivr  st(4),st
  40fd69:	repz xor eax,0xe8596476
  40fd6f:	sar    edx,1
  40fd71:	mov    edi,DWORD PTR [ecx]
  40fd73:	das    
  40fd74:	dec    ecx
  40fd75:	add    al,0x1c
  40fd77:	in     al,0x59
  40fd79:	push   edi
  40fd7a:	cmp    al,0xf3
  40fd7c:	cmp    DWORD PTR [eax],ebp
  40fd7e:	inc    eax
  40fd7f:	mov    ss,WORD PTR [esi+0x55]
  40fd82:	xchg   ecx,eax
  40fd83:	mov    ebp,0x871b945c
  40fd88:	mov    BYTE PTR [ebx+ebp*2+0x65],cl
  40fd8c:	inc    ebx
  40fd8d:	gs push ebx
  40fd8f:	pushf  
  40fd90:	ja     0x40fd40
  40fd92:	popa   
  40fd93:	and    eax,esi
  40fd95:	pushf  
  40fd96:	push   eax
  40fd97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd98:	adc    DWORD PTR [ecx+0x4bd8e1c],esp
  40fd9e:	fiadd  WORD PTR [ebp-0x66]
  40fda1:	dec    eax
  40fda2:	(bad)  
  40fda3:	sti    
  40fda4:	outs   dx,BYTE PTR ds:[esi]
  40fda5:	push   eax
  40fda6:	adc    ch,BYTE PTR [edx+0x78]
  40fda9:	xchg   esi,eax
  40fdaa:	mov    al,0x6
  40fdac:	dec    esp
  40fdad:	mov    WORD PTR [ecx-0x5a13fe46],es
  40fdb3:	and    al,bh
  40fdb5:	repnz repz fmul DWORD PTR [ecx]
  40fdb9:	jnp    0x40fd50
  40fdbb:	hlt    
  40fdbc:	test   eax,0x6bf5919b
  40fdc1:	dec    eax
  40fdc2:	mov    ds:0xc1247b71,eax
  40fdc7:	ret    
  40fdc8:	add    eax,0x919c475c
  40fdcd:	fdiv   QWORD PTR [esi]
  40fdcf:	aad    0xe9
  40fdd1:	jmp    0x21c46ff8
  40fdd6:	lds    edi,FWORD PTR [eax-0x54677872]
  40fddc:	fistp  QWORD PTR [edi+ebx*2-0x74bb7109]
  40fde3:	cmove  edi,DWORD PTR [esi-0x95d60b1]
  40fdea:	jmp    0xfced:0x4fb94410
  40fdf1:	daa    
  40fdf2:	call   0xdf80:0x89cf8f73
  40fdf9:	mov    gs,WORD PTR [edi+0x4a]
  40fdfc:	test   al,0x95
  40fdfe:	cmp    ecx,DWORD PTR [edx+0x57]
  40fe01:	lds    esi,FWORD PTR [eax-0x13]
  40fe04:	pop    edi
  40fe05:	sub    ebx,DWORD PTR [edx-0x71]
  40fe08:	add    DWORD PTR ds:0xc7b952ca,esp
  40fe0e:	enter  0xedb0,0xee
  40fe12:	loope  0x40fe6c
  40fe14:	lods   eax,DWORD PTR ds:[esi]
  40fe15:	fst    QWORD PTR [edx+0x3858220a]
  40fe1b:	jno    0x40fda7
  40fe1d:	mov    edi,0xf2693c55
  40fe22:	(bad)  
  40fe23:	mov    ebp,0xbcb08471
  40fe28:	adc    eax,0x7999e321
  40fe2d:	push   ds
  40fe2e:	and    BYTE PTR [eax+0x44],dh
  40fe31:	test   al,0x50
  40fe33:	aas    
  40fe34:	cmp    BYTE PTR [edx-0x71],ch
  40fe37:	sbb    al,0x4c
  40fe39:	push   0x15b5b7eb
  40fe3e:	xor    eax,0x2cd8707
  40fe43:	xor    esp,eax
  40fe45:	push   eax
  40fe46:	jecxz  0x40fec6
  40fe48:	std    
  40fe49:	fcom   st(4)
  40fe4b:	shl    dl,cl
  40fe4d:	mov    BYTE PTR [eax+0x24d5f13],bh
  40fe53:	int    0xa3
  40fe55:	mov    ecx,0xcaef0268
  40fe5a:	in     al,dx
  40fe5b:	mov    dh,0xf0
  40fe5d:	add    al,0xc5
  40fe5f:	shl    BYTE PTR [eax+edx*8+0x6b],0xfa
  40fe64:	sbb    edx,ebx
  40fe66:	xchg   ebx,eax
  40fe67:	mov    cl,0xee
  40fe69:	les    ebx,FWORD PTR [ecx-0x5a11de7d]
  40fe6f:	test   al,0x26
  40fe71:	sbb    al,0x63
  40fe73:	lahf   
  40fe74:	aad    0x52
  40fe76:	dec    eax
  40fe77:	push   esp
  40fe78:	lahf   
  40fe79:	imul   edi,DWORD PTR [ebx],0x57
  40fe7c:	retf   
  40fe7d:	(bad)  
  40fe7e:	xchg   edi,eax
  40fe7f:	ret    0x2154
  40fe82:	sar    ah,cl
  40fe84:	inc    esp
  40fe85:	xor    dh,BYTE PTR [eax]
  40fe87:	mov    cl,0x32
  40fe89:	adc    BYTE PTR [edx],dh
  40fe8b:	ror    DWORD PTR [ecx+ecx*1],1
  40fe8e:	out    0xc3,eax
  40fe90:	int    0x95
  40fe92:	mov    BYTE PTR [edi+0x2f],bl
  40fe95:	ficom  DWORD PTR [ecx-0x6dfc72d3]
  40fe9b:	xchg   esp,eax
  40fe9c:	fisttp QWORD PTR [esp+ecx*2-0x3f]
  40fea0:	add    dl,BYTE PTR [edi]
  40fea2:	jne    0x40fe47
  40fea4:	sub    al,0xd1
  40fea6:	push   edi
  40fea7:	mov    BYTE PTR es:[ecx-0x286517ed],bl
  40feae:	sub    BYTE PTR [ecx-0x58],dh
  40feb1:	push   ecx
  40feb2:	fdivp  st(4),st
  40feb4:	repz test al,0xac
  40feb7:	ds arpl dx,dx
  40feba:	mov    ah,0x18
  40febc:	xor    edi,0x26
  40febf:	repz add edx,DWORD PTR ds:0xda386c19
  40fec6:	mov    edx,0x18769c88
  40fecb:	and    eax,0x8caf246d
  40fed0:	je     0x40ff27
  40fed2:	sbb    ah,BYTE PTR [edi+0x35]
  40fed5:	sbb    al,0xc5
  40fed7:	mov    bh,0x60
  40fed9:	mov    edi,0x3d4f952a
  40fede:	jl     0x40fe77
  40fee0:	jmp    0xf63ae2a3
  40fee5:	mov    ds:0xb59f8367,eax
  40feea:	dec    ebp
  40feeb:	cmp    ebx,ecx
  40feed:	dec    esi
  40feee:	add    al,al
  40fef0:	les    esp,FWORD PTR [esi+ebp*1]
  40fef3:	call   DWORD PTR [ebp-0x33]
  40fef6:	inc    eax
  40fef7:	rcr    DWORD PTR [esi],cl
  40fef9:	push   esi
  40fefa:	add    DWORD PTR [ebx+0x37],eax
  40fefd:	repnz ins DWORD PTR es:[edi],dx
  40feff:	xor    DWORD PTR [ecx-0x40],0x56
  40ff03:	ret    
  40ff04:	sbb    ebx,ebx
  40ff06:	mov    esp,0xca8dbf12
  40ff0b:	push   ds
  40ff0c:	mov    ah,BYTE PTR [edx+0x7a0ffa6a]
  40ff12:	lea    edi,[edi+0x2c4630f5]
  40ff18:	cmp    al,0x5
  40ff1a:	mov    edx,0xb1d1877e
  40ff1f:	fsubr  DWORD PTR [edi+edi*2-0x2a]
  40ff23:	repz pop edi
  40ff25:	pop    es
  40ff26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff27:	cmc    
  40ff28:	iret   
  40ff29:	aaa    
  40ff2a:	pushf  
  40ff2b:	cmc    
  40ff2c:	mov    dh,BYTE PTR [esi-0x6d9aeee2]
  40ff32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff33:	jle    0x40ff57
  40ff35:	jge    0x40ff8a
  40ff37:	or     al,0xd2
  40ff39:	adc    ebp,DWORD PTR [esi-0x1b166c08]
  40ff3f:	lods   al,BYTE PTR ds:[esi]
  40ff40:	mov    ch,0xa2
  40ff42:	ret    0x6b7d
  40ff45:	mov    ?,esp
  40ff47:	xchg   esi,eax
  40ff48:	inc    eax
  40ff49:	add    cl,BYTE PTR [edi+0x7b]
  40ff4c:	jno    0x40ff31
  40ff4e:	call   0x528f:0x2bf6a369
  40ff55:	lods   al,BYTE PTR ds:[esi]
  40ff56:	jmp    0x4bfa:0x1cbe4b8b
  40ff5d:	push   cs
  40ff5e:	mov    ?,WORD PTR [ebx]
  40ff60:	inc    ebx
  40ff61:	pop    es
  40ff62:	je     0x40ffd7
  40ff64:	mov    bh,0x3e
  40ff66:	sub    ah,BYTE PTR [ecx*2+0x1f76e1a9]
  40ff6d:	mov    ds:0x6e12b799,eax
  40ff72:	mov    esi,ebp
  40ff74:	mov    edi,0x3ef74fb
  40ff79:	jo     0x40ff7a
  40ff7b:	int    0x4b
  40ff7d:	(bad)  
  40ff7e:	jns    0x40ff8e
  40ff80:	gs inc ebx
  40ff82:	mov    cl,0xef
  40ff84:	mov    edx,0xc6a530b0
  40ff89:	pop    ebp
  40ff8a:	mov    dl,0x70
  40ff8c:	fstp   DWORD PTR [ecx]
  40ff8e:	xchg   edx,eax
  40ff8f:	jge    0x40ffa4
  40ff91:	mov    ebp,cs
  40ff93:	pop    ebp
  40ff94:	dec    esp
  40ff95:	jg     0x40ffeb
  40ff97:	adc    DWORD PTR [ebx+0x1797cc6b],edi
  40ff9d:	mov    esp,0x65d43912
  40ffa2:	xchg   DWORD PTR [eax+0x45],ecx
  40ffa5:	cmp    al,al
  40ffa7:	scas   al,BYTE PTR es:[edi]
  40ffa8:	es push ebp
  40ffaa:	(bad)  
  40ffab:	dec    ebx
  40ffac:	ds lahf 
  40ffae:	sub    BYTE PTR [ebx+ebp*2+0x489aad0a],dh
  40ffb5:	sub    eax,DWORD PTR [esp+eax*1]
  40ffb8:	js     0x40ff4a
  40ffba:	mov    cl,0x54
  40ffbc:	mov    dl,0x1
  40ffbe:	adc    DWORD PTR [esi+0x4e3482b0],ebx
  40ffc4:	les    ebp,FWORD PTR [ebx]
  40ffc6:	aam    0x63
  40ffc8:	jmp    0x410046
  40ffca:	clc    
  40ffcb:	xor    cl,dh
  40ffcd:	in     eax,dx
  40ffce:	aad    0xf
  40ffd0:	push   ebp
  40ffd1:	inc    ecx
  40ffd2:	pop    ecx
  40ffd3:	xchg   edx,eax
  40ffd4:	stos   DWORD PTR es:[edi],eax
  40ffd5:	(bad)  
  40ffd6:	shr    BYTE PTR [edx+0x55],1
  40ffd9:	pop    es
  40ffda:	test   DWORD PTR [esi+0x4a8ced81],ebx
  40ffe0:	ret    0x1819
  40ffe3:	rcr    DWORD PTR [ebx],cl
  40ffe5:	mov    bh,ch
  40ffe7:	cmp    dl,dh
  40ffe9:	(bad)  
  40ffea:	in     al,dx
  40ffeb:	imul   esp,DWORD PTR [ebp+0x204c57a5],0xffffffac
  40fff2:	mov    cl,0xf7
  40fff4:	pop    edi
  40fff5:	ins    DWORD PTR es:[edi],dx
  40fff6:	cmp    al,0x0
  40fff8:	mov    cl,0x6a
  40fffa:	jno    0x41004a
  40fffc:	xor    eax,DWORD PTR [edx-0x6d2541a7]
  410002:	imul   eax,DWORD PTR [eax+0x3f],0xee8fb773
  410009:	test   BYTE PTR [edi+0x18],ah
  41000c:	jl     0x410053
  41000e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41000f:	in     al,0xbe
  410011:	inc    edi
  410012:	das    
  410013:	loop   0x41000f
  410015:	push   edi
  410016:	retf   
  410017:	adc    eax,0x14997649
  41001c:	xchg   edi,eax
  41001d:	dec    esi
  41001e:	push   es
  41001f:	sub    DWORD PTR [edi-0x45ee481a],esp
  410025:	enter  0x6b3b,0x38
  410029:	inc    ebp
  41002a:	cmp    dh,ch
  41002c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41002d:	fnstcw WORD PTR [edi-0x21dfb303]
  410033:	mov    ds,WORD PTR ds:0x509532d4
  410039:	push   ebp
  41003a:	mov    bl,0x3f
  41003c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41003d:	pusha  
  41003e:	scas   eax,DWORD PTR es:[edi]
  41003f:	outs   dx,DWORD PTR ds:[esi]
  410040:	rcl    BYTE PTR ds:0x2e499d14,cl
  410046:	mul    dh
  410048:	dec    esp
  410049:	(bad)  
  41004a:	jae    0x40fff4
  41004c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41004d:	sbb    esp,DWORD PTR [esi]
  41004f:	enter  0x9ce1,0xed
  410053:	or     dh,0x36
  410056:	and    edx,DWORD PTR [edx]
  410058:	sti    
  410059:	xlat   BYTE PTR ds:[ebx]
  41005a:	sbb    edi,DWORD PTR [eax-0x64]
  41005d:	lods   al,BYTE PTR ds:[esi]
  41005e:	adc    DWORD PTR [esi-0x4],edx
  410061:	sub    al,0x4d
  410063:	xchg   ecx,eax
  410064:	das    
  410065:	in     eax,0xdf
  410067:	mov    ebp,0x61a4a0e6
  41006c:	call   0x3365:0x8a3afab4
  410073:	out    0x90,al
  410075:	xor    eax,0x37125b71
  41007a:	sub    eax,0xdf5ae863
  41007f:	or     ah,bl
  410081:	push   ebp
  410082:	bound  esi,QWORD PTR [ebx+0x13]
  410085:	dec    ebp
  410086:	loopne 0x4100b0
  410088:	out    dx,eax
  410089:	pushf  
  41008a:	gs add ah,al
  41008d:	mov    esi,DWORD PTR [ebp+0x5a]
  410090:	or     ch,bl
  410092:	ret    
  410093:	inc    eax
  410094:	mov    edx,0xbd473e7b
  410099:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41009a:	inc    esp
  41009b:	fidiv  WORD PTR [edx]
  41009d:	inc    edx
  41009e:	and    DWORD PTR [eax],ecx
  4100a0:	inc    ecx
  4100a1:	add    esp,DWORD PTR ds:0xe680d2a6
  4100a7:	and    DWORD PTR [eax],ecx
  4100a9:	out    0x3c,al
  4100ab:	adc    ah,dh
  4100ad:	sbb    bl,0xcc
  4100b0:	mov    DWORD PTR [ebp-0xb],edi
  4100b3:	mov    ah,0x87
  4100b5:	(bad)  
  4100b7:	xchg   ebx,eax
  4100b8:	mov    bl,BYTE PTR [ebx+0x2b020c9a]
  4100be:	in     al,dx
  4100bf:	or     esi,esp
  4100c1:	mov    ah,0x4e
  4100c3:	add    eax,0xb7cf21a6
  4100c8:	in     eax,0xe0
  4100ca:	adc    al,0x1e
  4100cc:	push   ecx
  4100cd:	pop    ebp
  4100ce:	scas   eax,DWORD PTR es:[edi]
  4100cf:	fild   WORD PTR [esi+edi*4+0x51]
  4100d3:	push   ebp
  4100d4:	mov    esp,0x77552680
  4100d9:	pop    ss
  4100da:	push   0xdb71c225
  4100df:	fs repnz in al,0xb6
  4100e3:	xor    BYTE PTR ds:0xb0461c3a,dh
  4100e9:	imul   edi,DWORD PTR [edi+ebx*2],0xdc4d57ad
  4100f0:	call   0x7767:0x4415aa02
  4100f7:	xor    eax,0x908951d2
  4100fc:	or     al,0x5f
  4100fe:	jnp    0x4100d1
  410100:	jbe    0x4100c0
  410102:	jmp    DWORD PTR [eax]
  410104:	rcl    DWORD PTR [ebp-0x208c24e0],1
  41010a:	rcr    ch,1
  41010c:	and    DWORD PTR [edx+0x67d88e51],0x4e5ab24
  410116:	xchg   edx,eax
  410117:	and    DWORD PTR [ebx],ecx
  410119:	add    al,0xd2
  41011b:	mov    ebx,0x6b181015
  410120:	jp     0x41013d
  410122:	mov    ds:0x7b8ad162,al
  410127:	jecxz  0x41018f
  410129:	outs   dx,BYTE PTR ds:[esi]
  41012a:	ret    0xba71
  41012d:	or     al,0x49
  41012f:	mov    bl,0xbf
  410131:	or     ebx,DWORD PTR [edx]
  410133:	mov    al,0x84
  410135:	adc    ecx,edi
  410137:	das    
  410138:	aam    0xd3
  41013a:	enter  0x6d24,0x29
  41013e:	sbb    eax,0x8221b75c
  410143:	pushf  
  410144:	xchg   bl,bh
  410146:	jnp    0x4101bf
  410148:	push   eax
  410149:	or     ah,BYTE PTR [ecx]
  41014b:	sbb    al,0x5e
  41014d:	ror    BYTE PTR [edi+edi*4],0x66
  410151:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410152:	scas   al,BYTE PTR es:[edi]
  410153:	and    esi,DWORD PTR [eax+0x4ba10cd2]
  410159:	add    ebx,0x5650e2ee
  41015f:	(bad)  
  410160:	outs   dx,BYTE PTR ds:[esi]
  410161:	fbld   TBYTE PTR gs:[edi]
  410164:	jg     0x41018a
  410166:	(bad)  
  410167:	add    al,0x5b
  410169:	xor    BYTE PTR [edx+esi*2-0x1b1b5db5],dh
  410170:	test   ecx,esp
  410172:	inc    ebp
  410173:	jle    0x4101e2
  410175:	sti    
  410176:	test   DWORD PTR [edi],ebx
  410178:	mov    ch,0x18
  41017a:	xor    BYTE PTR [ebx-0x36],0xcb
  41017e:	call   0x1c19f292
  410183:	push   edx
  410184:	pop    ebx
  410185:	addr16 shl eax,1
  410188:	push   esi
  410189:	dec    ebp
  41018a:	and    al,0x90
  41018c:	sbb    ah,dl
  41018e:	lahf   
  41018f:	es mov ebp,0x720f4f23
  410195:	jne    0x4101ed
  410197:	jbe    0x41015a
  410199:	jmp    0xb558:0x3ee6b148
  4101a0:	cmp    BYTE PTR [edx-0x5a],0x1
  4101a4:	xchg   ebp,eax
  4101a5:	popf   
  4101a6:	inc    edi
  4101a7:	in     al,0xa3
  4101a9:	fstp   QWORD PTR ss:[edx-0x57]
  4101ad:	mov    esp,0x1cf6796a
  4101b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101b3:	mov    ds:0x4f64da5a,eax
  4101b8:	jle    0x4101b4
  4101ba:	into   
  4101bb:	xchg   ebx,ecx
  4101bd:	adc    DWORD PTR [eax-0x2ffcebf],eax
  4101c3:	xor    dh,al
  4101c5:	dec    edx
  4101c6:	cdq    
  4101c7:	rcr    DWORD PTR [edx],0x3b
  4101ca:	shl    bl,1
  4101cc:	inc    edi
  4101cd:	jns    0x410200
  4101cf:	dec    ecx
  4101d0:	repz scas eax,DWORD PTR es:[edi]
  4101d2:	mov    ch,0x62
  4101d4:	bound  edx,QWORD PTR ds:0xa9202ce5
  4101da:	int3   
  4101db:	jp     0x4101a6
  4101dd:	inc    edi
  4101de:	xchg   DWORD PTR [edx-0x47],eax
  4101e1:	call   0xf565b623
  4101e6:	stos   BYTE PTR es:[edi],al
  4101e7:	dec    esi
  4101e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101e9:	imul   esi,DWORD PTR [edi+0x19],0x74ea9769
  4101f0:	rcr    ah,0xf9
  4101f3:	fcmovne st,st(7)
  4101f5:	jne    0x410269
  4101f7:	jecxz  0x410274
  4101f9:	jl     0x410201
  4101fb:	xchg   BYTE PTR [edx-0x61],cl
  4101fe:	iret   
  4101ff:	fld    DWORD PTR [edi+0x75]
  410202:	rol    DWORD PTR [ebx-0x20],1
  410205:	sub    BYTE PTR [ebp+0x49edfbb],cl
  41020b:	sub    dh,BYTE PTR [edi]
  41020d:	call   0xff13:0x83fa20e1
  410214:	cmp    ecx,ecx
  410216:	pop    esp
  410217:	shr    BYTE PTR [edi+0x6cc2b5e2],0x2d
  41021e:	jp     0x410221
  410220:	push   eax
  410221:	popw   ss
  410223:	add    DWORD PTR [ebx+0x69],0x5c14853
  41022a:	sub    DWORD PTR [ecx],edi
  41022c:	dec    ebx
  41022d:	lods   eax,DWORD PTR ds:[esi]
  41022e:	paddb  mm2,QWORD PTR [edi-0x2c]
  410232:	jle    0x41027c
  410234:	mov    ch,0xf0
  410236:	xchg   ebx,eax
  410237:	mov    WORD PTR [edi-0x44f83079],ds
  41023d:	mov    dl,BYTE PTR [eax+0x16e59bea]
  410243:	add    ebp,esp
  410245:	popa   
  410246:	jne    0x4102ab
  410248:	stos   BYTE PTR es:[edi],al
  410249:	in     eax,0xf
  41024b:	add    eax,0x5b715edf
  410250:	(bad)  
  410251:	or     DWORD PTR [esi+edi*4],edi
  410254:	jb     0x4102c1
  410256:	jg     0x4101eb
  410258:	fstp   TBYTE PTR [edx]
  41025a:	jmp    0x4f6:0xf299dd11
  410261:	mov    ds:0xe35ca0f3,eax
  410266:	jmp    0x5846:0xb974f9fd
  41026d:	int3   
  41026e:	ins    DWORD PTR es:[edi],dx
  41026f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410270:	adc    ebp,DWORD PTR [edx-0x70413a9e]
  410276:	add    BYTE PTR [ebp-0x2007bb2a],ah
  41027c:	pop    es
  41027d:	and    eax,ecx
  41027f:	(bad)  
  410280:	repz popf 
  410282:	push   ebp
  410283:	jle    0x41023a
  410285:	call   0x97ca6c90
  41028a:	jmp    0xacac9799
  41028f:	lods   al,BYTE PTR ds:[esi]
  410290:	push   ds
  410291:	and    ch,BYTE PTR [ebx]
  410293:	or     ecx,DWORD PTR [ecx]
  410295:	fsubr  st(5),st
  410297:	push   es
  410298:	cld    
  410299:	stc    
  41029a:	and    ah,BYTE PTR [eax-0x3a4a2190]
  4102a0:	sbb    DWORD PTR [edx],ecx
  4102a2:	scas   eax,DWORD PTR es:[edi]
  4102a3:	scas   al,BYTE PTR es:[edi]
  4102a4:	cmp    eax,0xb6f67400
  4102a9:	dec    esi
  4102aa:	icebp  
  4102ab:	adc    eax,0x907d230e
  4102b0:	ret    0x5acf
  4102b3:	pop    eax
  4102b4:	jmp    0xe1eef4cc
  4102b9:	sub    ch,BYTE PTR [ecx]
  4102bb:	idiv   DWORD PTR [ecx+0x2f]
  4102be:	or     ecx,edx
  4102c0:	(bad)  
  4102c1:	xor    eax,0x17063fab
  4102c6:	jmp    0x41026a
  4102c8:	mov    edx,0x8fd1481
  4102cd:	js     0x4102a2
  4102cf:	add    cl,0xc7
  4102d2:	sub    al,0x76
  4102d4:	inc    esp
  4102d5:	jbe    0x410270
  4102d7:	retf   
  4102d8:	jecxz  0x410329
  4102da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102db:	shr    BYTE PTR [ecx-0x3a5a8855],1
  4102e1:	into   
  4102e2:	paddusw mm4,QWORD PTR [ebx]
  4102e5:	mov    esi,0x729f0337
  4102ea:	mov    edi,0x7cf44df1
  4102ef:	sbb    DWORD PTR [edi+ebx*8+0x31],ecx
  4102f3:	sub    eax,DWORD PTR [edx]
  4102f5:	cli    
  4102f6:	xchg   edi,eax
  4102f7:	push   esp
  4102f8:	pop    ss
  4102f9:	mov    eax,ds:0xaa4654af
  4102fe:	xor    eax,0x5d5097e3
  410303:	xchg   ebp,edx
  410305:	sahf   
  410306:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410307:	imul   eax,DWORD PTR [eax+0x5155b99c],0x8ed84ef
  410311:	jmp    0x4102c5
  410313:	mov    eax,ds:0x9210d9cc
  410318:	shl    BYTE PTR [eax+esi*8-0x34],1
  41031c:	fldenv [ebp+ecx*2+0x4e]
  410320:	iret   
  410321:	jmp    0xd4b23691
  410326:	and    eax,0x90044d10
  41032b:	or     BYTE PTR [esi+0x78],cl
  41032e:	and    dh,BYTE PTR [ebx]
  410330:	mov    esi,ebp
  410332:	lods   eax,DWORD PTR ds:[esi]
  410333:	fcom   DWORD PTR [ebp+0x11de240e]
  410339:	leave  
  41033a:	sub    ch,BYTE PTR [edx+eiz*8-0x71224a6e]
  410341:	fsub   st,st(7)
  410343:	push   es
  410344:	or     BYTE PTR fs:[edx+0x15],dl
  410348:	sbb    eax,0x569100b9
  41034d:	sub    BYTE PTR ss:[edx-0x12af3d25],dh
  410354:	cs cmp ebp,edx
  410357:	(bad)  
  410358:	out    0x1a,eax
  41035a:	je     0x4102f4
  41035c:	cdq    
  41035d:	call   0x7fe74356
  410362:	add    al,bh
  410364:	jp     0x41033e
  410366:	jae    0x41032e
  410368:	pop    ss
  410369:	and    eax,0x72533988
  41036e:	daa    
  41036f:	sub    al,0x98
  410371:	push   esi
  410372:	stos   BYTE PTR es:[edi],al
  410373:	xor    ch,BYTE PTR [ebp-0x89e267e]
  410379:	stos   BYTE PTR es:[edi],al
  41037a:	xor    DWORD PTR [ebx-0x5d5c2153],eax
  410380:	(bad)  
  410382:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410383:	sbb    esi,edx
  410385:	or     bl,BYTE PTR [ecx+0x47]
  410388:	mov    ah,0x39
  41038a:	enter  0x1886,0xe1
  41038e:	and    BYTE PTR [ecx],ah
  410390:	sti    
  410391:	jge    0x4103f9
  410393:	add    edx,ebx
  410395:	mov    al,0xc7
  410397:	sbb    ebx,esi
  410399:	inc    edi
  41039a:	call   0x3243:0x8f8e059a
  4103a1:	sub    dh,BYTE PTR ds:0x7d7f4ea4
  4103a7:	rcr    ecx,0x92
  4103aa:	sbb    eax,0x122e06cc
  4103af:	ins    DWORD PTR es:[edi],dx
  4103b0:	aas    
  4103b1:	jmp    0x645320cd
  4103b6:	es (bad) 
  4103b8:	jecxz  0x410350
  4103ba:	xchg   DWORD PTR [ebp-0x4f271cc1],esp
  4103c0:	mov    dl,BYTE PTR [ebp-0x3f6d83c3]
  4103c6:	out    dx,al
  4103c7:	pop    ecx
  4103c8:	jmp    DWORD PTR [esi-0x45f142a3]
  4103ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103cf:	add    cl,BYTE PTR [ecx+0x251c87fb]
  4103d5:	icebp  
  4103d6:	mov    ah,0x71
  4103d8:	xchg   edi,eax
  4103d9:	mov    bl,0xbf
  4103db:	jbe    0x41043a
  4103dd:	cmp    cl,BYTE PTR [edi]
  4103df:	out    dx,al
  4103e0:	push   ss
  4103e1:	aad    0x6f
  4103e3:	into   
  4103e4:	leave  
  4103e5:	cmp    dh,bl
  4103e7:	fst    st(4)
  4103e9:	shl    BYTE PTR [edx-0x3ad3d0f8],cl
  4103ef:	xchg   ebp,eax
  4103f0:	mov    WORD PTR [ecx-0x3f],ss
  4103f3:	xor    BYTE PTR ds:0xaa314fe2,dh
  4103f9:	stc    
  4103fa:	lods   eax,DWORD PTR ds:[esi]
  4103fb:	dec    esi
  4103fc:	(bad)  
  4103fd:	inc    ecx
  4103fe:	or     al,0x7a
  410400:	test   ebx,eax
  410402:	mov    cl,BYTE PTR [ebp-0x515c60a3]
  410408:	cmp    BYTE PTR [esi-0x71],0x4d
  41040c:	pop    ss
  41040d:	jmp    FWORD PTR [esi]
  41040f:	fnsave [ebx+edx*8-0x51e642fe]
  410416:	sbb    eax,0x512617a0
  41041b:	and    esi,DWORD PTR [edx]
  41041d:	mov    al,0xa
  41041f:	hlt    
  410420:	retf   
  410421:	sub    al,0xd6
  410423:	and    esp,ebx
  410425:	mov    DWORD PTR [eax+0x20],eax
  410428:	sbb    DWORD PTR cs:[edi],edi
  41042b:	xor    DWORD PTR [ebx],esi
  41042d:	inc    ebx
  41042e:	adc    DWORD PTR [edx+0x502f7bba],ebp
  410434:	cmp    DWORD PTR [ebx-0x5b3b9cd0],ebp
  41043a:	into   
  41043b:	xchg   ecx,eax
  41043c:	cli    
  41043d:	ror    BYTE PTR [eax-0x601ba660],cl
  410443:	xor    al,0x93
  410445:	lods   al,BYTE PTR ds:[esi]
  410446:	(bad)  
  410447:	aas    
  410448:	stc    
  410449:	mov    ecx,0xf1f0944f
  41044e:	pusha  
  41044f:	retf   0x843f
  410452:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410453:	jecxz  0x41041e
  410455:	xchg   esi,eax
  410456:	fdiv   st(4),st
  410458:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410459:	fidiv  DWORD PTR [eax+0x1f]
  41045c:	sbb    BYTE PTR [ecx-0x34],0xca
  410460:	sti    
  410461:	pop    ds
  410462:	jmp    0x47c5fee4
  410467:	dec    esi
  410468:	jp     0x41046b
  41046a:	adc    eax,0x9126fb4d
  41046f:	dec    ecx
  410470:	and    BYTE PTR [ebx],cl
  410472:	or     BYTE PTR [eax+0x11],cl
  410475:	cs mov edx,0x4b3d02eb
  41047b:	sub    DWORD PTR [esi],edx
  41047d:	ja     0x410421
  41047f:	jge    0x4104a3
  410481:	jl     0x41041b
  410483:	xchg   esp,eax
  410484:	outs   dx,DWORD PTR ds:[esi]
  410485:	ret    
  410486:	xchg   edi,eax
  410487:	dec    ebx
  410488:	pop    ss
  410489:	int3   
  41048a:	jb     0x410415
  41048c:	jnp    0x410490
  41048e:	mov    eax,0xede8ca36
  410493:	rcr    DWORD PTR [esi+0x7a0432],cl
  410499:	jg     0x4104d8
  41049b:	inc    ebx
  41049c:	nop
  41049d:	mov    ebp,ebp
  41049f:	cdq    
  4104a0:	lahf   
  4104a1:	mov    ch,0x60
  4104a3:	push   esi
  4104a4:	out    0x39,eax
  4104a6:	mov    eax,0x95f83325
  4104ab:	fild   WORD PTR [ecx]
  4104ad:	das    
  4104ae:	pop    ebx
  4104af:	enter  0x7808,0x43
  4104b3:	fwait
  4104b4:	sbb    eax,0x41adf5e1
  4104b9:	or     al,0xcd
  4104bb:	ins    BYTE PTR es:[edi],dx
  4104bc:	mov    WORD PTR [ecx],cs
  4104be:	pusha  
  4104bf:	push   cs
  4104c0:	push   es
  4104c1:	retf   
  4104c2:	mov    edi,DWORD PTR [eax+0x241e0ea8]
  4104c8:	pop    edx
  4104c9:	pop    ss
  4104ca:	lods   eax,DWORD PTR ds:[esi]
  4104cb:	jo     0x410535
  4104cd:	es fwait
  4104cf:	dec    edx
  4104d1:	jne    0x4104e5
  4104d3:	pop    esi
  4104d4:	add    edi,DWORD PTR ds:0x5f83b39e
  4104da:	loop   0x41055a
  4104dc:	lods   eax,DWORD PTR ds:[esi]
  4104dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104de:	push   edx
  4104df:	ds sar dh,1
  4104e2:	lea    esp,[edx]
  4104e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104e5:	push   cs
  4104e6:	fsub   QWORD PTR [ebp-0x3ce80f53]
  4104ec:	sbb    DWORD PTR [edi],0xffffffd9
  4104ef:	rcr    DWORD PTR [eax-0x6a43e3a],0x3e
  4104f6:	es es test al,0x8c
  4104fa:	jecxz  0x410556
  4104fc:	repnz pop eax
  4104fe:	jmp    0x41054b
  410500:	packsswb mm0,QWORD PTR [eax-0x35]
  410504:	jle    0x41050e
  410506:	popa   
  410507:	jle    0x41056b
  410509:	pop    edx
  41050a:	and    DWORD PTR [edi],esp
  41050c:	jns    0x41053f
  41050e:	mov    al,0x9f
  410510:	pusha  
  410511:	lea    ebx,[edx+0x76]
  410514:	cld    
  410515:	fstp   QWORD PTR [ecx*4+0x6cc76ee5]
  41051c:	cli    
  41051d:	mov    gs,WORD PTR [edx]
  41051f:	nop
  410520:	jne    0x41052c
  410522:	xchg   ebp,eax
  410523:	pop    eax
  410524:	cwde   
  410525:	push   esp
  410526:	cmp    esi,DWORD PTR [edx]
  410528:	adc    DWORD PTR [edi],0xffffff9b
  41052b:	pop    ecx
  41052c:	sub    al,0xc9
  41052e:	(bad)  
  41052f:	iret   
  410530:	jp     0x4104c1
  410532:	xor    ch,bl
  410534:	jmp    0x907a:0x1439fac0
  41053b:	push   ecx
  41053c:	mov    dl,0x8e
  41053e:	ins    DWORD PTR es:[edi],dx
  41053f:	in     al,0x1c
  410541:	add    DWORD PTR [esi-0x28e8415e],eax
  410547:	out    dx,eax
  410548:	pop    edi
  410549:	mov    esp,0x78dbec3c
  41054e:	inc    ebp
  41054f:	int    0x5b
  410551:	jno    0x41054f
  410553:	or     al,0x63
  410555:	rol    esi,cl
  410557:	and    edx,DWORD PTR [ecx+0xa]
  41055a:	popf   
  41055b:	aas    
  41055c:	retf   0xbbe9
  41055f:	or     eax,DWORD PTR [eax]
  410561:	push   esi
  410562:	mov    fs,WORD PTR [eax+edi*2-0x6c2d5246]
  410569:	jne    0x410533
  41056b:	cld    
  41056c:	xchg   edi,eax
  41056d:	ds and eax,0x67917101
  410573:	js     0x4105cb
  410575:	out    0x93,eax
  410577:	into   
  410578:	push   cs
  410579:	hlt    
  41057a:	imul   ebx,DWORD PTR [ebx+eiz*4-0x57185651],0xffffff85
  410582:	sbb    DWORD PTR [eax+0x14],edi
  410585:	loopne 0x4105b6
  410587:	cld    
  410588:	fist   DWORD PTR [ebx]
  41058a:	(bad)  
  41058b:	in     eax,dx
  41058c:	shl    DWORD PTR ds:0xb8908175,0x58
  410593:	into   
  410594:	(bad)  
  410595:	adc    DWORD PTR [esi],ecx
  410597:	idiv   BYTE PTR [ecx+0x42]
  41059a:	cmp    BYTE PTR [ecx-0x5c],al
  41059d:	inc    eax
  41059e:	ds adc ah,al
  4105a1:	cmp    DWORD PTR [edx+0x7dcf59cd],0xe0463c2d
  4105ab:	test   al,0x9
  4105ad:	imul   eax,DWORD PTR [ebp-0x3d130c6d],0x45
  4105b4:	push   ebp
  4105b5:	daa    
  4105b6:	pop    ecx
  4105b7:	sub    bl,BYTE PTR [ebp+0x63b8ff88]
  4105bd:	rcr    DWORD PTR [esi-0x9],cl
  4105c0:	shr    ecx,1
  4105c2:	xor    cl,BYTE PTR [esi]
  4105c4:	push   ebp
  4105c5:	je     0x410604
  4105c7:	or     ebp,edi
  4105c9:	mov    bl,0xc4
  4105cb:	sub    bh,bh
  4105cd:	sbb    eax,0xda4f8a1e
  4105d2:	cs pop ecx
  4105d4:	cmp    DWORD PTR [eax+0x15fecd93],esi
  4105da:	sub    DWORD PTR [ebp+edi*2+0x79d16348],ecx
  4105e1:	pop    ebp
  4105e2:	addr16 xchg edi,eax
  4105e4:	jo     0x4105b9
  4105e6:	loop   0x41058f
  4105e8:	push   eax
  4105e9:	and    al,0xfe
  4105ec:	mov    ds:0x59993323,al
  4105f1:	popf   
  4105f2:	inc    ebx
  4105f3:	or     al,0x16
  4105f5:	aam    0xf2
  4105f7:	sub    DWORD PTR [eax-0x74],esp
  4105fa:	jmp    0x9c36:0x78630eeb
  410601:	mov    ecx,0x651ae66d
  410606:	jne    0x41060e
  410608:	inc    esi
  410609:	sub    eax,ebp
  41060b:	daa    
  41060c:	push   edi
  41060d:	inc    ebx
  41060e:	daa    
  41060f:	dec    edi
  410610:	push   ds
  410611:	mov    esp,0x86fc01f2
  410616:	in     eax,0x5
  410618:	cmp    eax,0xe1ed6058
  41061d:	ins    DWORD PTR es:[edi],dx
  41061e:	loope  0x410631
  410620:	inc    ecx
  410621:	pop    es
  410622:	mov    WORD PTR [ecx-0x66],?
  410625:	or     DWORD PTR [ebx],ebp
  410627:	ins    BYTE PTR es:[edi],dx
  410628:	push   ds
  410629:	out    dx,eax
  41062a:	inc    ebx
  41062b:	nop
  41062c:	cwde   
  41062d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41062e:	stos   BYTE PTR es:[edi],al
  41062f:	and    DWORD PTR [edi],esi
  410631:	loop   0x41064e
  410633:	int    0x82
  410635:	inc    eax
  410636:	aad    0x64
  410638:	outs   dx,BYTE PTR ds:[esi]
  410639:	push   0x716a66d8
  41063e:	inc    eax
  41063f:	daa    
  410640:	jb     0x4105fa
  410642:	test   ecx,eax
  410644:	jecxz  0x41067f
  410646:	cmp    DWORD PTR [edx-0x2f58126e],esi
  41064c:	fs call 0x74c576c2
  410652:	mov    bh,0x20
  410654:	(bad)  
  410655:	ror    DWORD PTR [eax],1
  410657:	ret    
  410658:	hlt    
  410659:	jp     0x4106a5
  41065b:	mov    esi,0x4685ebfb
  410660:	stos   DWORD PTR es:[edi],eax
  410661:	adc    ch,BYTE PTR [edx]
  410663:	mov    ecx,0x6b382ce
  410668:	loopne 0x4106bf
  41066a:	or     dl,BYTE PTR [eax]
  41066c:	mov    ds:0x4f50a2cf,al
  410671:	lods   eax,DWORD PTR ds:[esi]
  410672:	outs   dx,BYTE PTR ds:[esi]
  410673:	retf   0x841e
  410676:	in     al,0xc4
  410678:	imul   edi,DWORD PTR ds:0x8123e17f,0xf773821d
  410682:	mov    ah,0x2f
  410684:	jg     0x41062c
  410686:	push   ebp
  410687:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410688:	inc    edi
  410689:	dec    ebp
  41068a:	ret    0x4410
  41068d:	cmp    BYTE PTR [esi],0xd6
  410690:	ret    0x2f4
  410693:	stc    
  410694:	dec    ecx
  410695:	data16 outs dx,BYTE PTR ds:[esi]
  410697:	xor    bh,BYTE PTR [eax]
  410699:	test   eax,0xafa6e73d
  41069e:	sub    bl,ch
  4106a0:	mov    dh,0x12
  4106a2:	call   0x20f0f1b7
  4106a7:	xor    esp,DWORD PTR [ebp+0x6d548866]
  4106ad:	mov    dl,0x36
  4106af:	addr16 jmp 0x89f:0x7862077b
  4106b7:	stos   DWORD PTR es:[di],eax
  4106b9:	mov    ebx,0x3f258152
  4106be:	pop    ebp
  4106bf:	scas   eax,DWORD PTR es:[edi]
  4106c0:	mov    edx,DWORD PTR [eax]
  4106c2:	pop    esp
  4106c3:	and    DWORD PTR [eax+0x728b9fc1],ebp
  4106c9:	push   ecx
  4106ca:	stos   BYTE PTR es:[edi],al
  4106cb:	adc    BYTE PTR [esi+0x20a68182],0x64
  4106d2:	sar    DWORD PTR [edi+ebp*8-0x268ae43b],0xcf
  4106da:	shr    BYTE PTR [eax+edx*4-0x48],1
  4106de:	sub    al,0x1a
  4106e0:	mov    eax,0x4d4eca1d
  4106e5:	sti    
  4106e6:	cli    
  4106e7:	in     al,dx
  4106e8:	push   ebx
  4106e9:	cmp    edx,edi
  4106eb:	cmp    al,0x10
  4106ed:	xchg   ebx,eax
  4106ee:	(bad)  
  4106ef:	sti    
  4106f0:	cli    
  4106f1:	ins    DWORD PTR es:[edi],dx
  4106f2:	(bad)  
  4106f4:	sub    ebx,eax
  4106f6:	pusha  
  4106f7:	in     al,dx
  4106f8:	push   esi
  4106f9:	jp     0x410716
  4106fb:	test   al,0x64
  4106fd:	aaa    
  4106fe:	aas    
  4106ff:	mov    esp,0x9db5b8b1
  410704:	jns    0x4106d8
  410706:	sub    DWORD PTR ds:0x8ef73b6d,ecx
  41070c:	shr    DWORD PTR [esi],1
  41070e:	inc    ebp
  41070f:	dec    ebp
  410710:	test   eax,0xbe63410b
  410715:	test   DWORD PTR [edx],ecx
  410717:	add    BYTE PTR [ecx-0x5c],cl
  41071a:	pop    esp
  41071b:	into   
  41071c:	mov    al,ds:0xe4cade65
  410721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410722:	mov    dl,0x65
  410724:	ret    
  410725:	sbb    al,0x56
  410727:	push   ds
  410728:	xor    esp,DWORD PTR [eax+esi*2-0x48f51ac3]
  41072f:	pushf  
  410730:	jmp    0x8ab7:0x3d743815
  410737:	stc    
  410738:	sti    
  410739:	ss dec ecx
  41073b:	sub    al,0x95
  41073d:	fisubr WORD PTR [esi]
  41073f:	jb     0x41077b
  410741:	or     eax,0x9a8a9eb4
  410747:	imul   eax,edx,0x6b
  41074a:	cmc    
  41074b:	mov    dl,0x46
  41074d:	mov    dl,0x3f
  41074f:	int3   
  410750:	cld    
  410751:	(bad)  
  410752:	dec    esi
  410753:	pop    ebp
  410754:	inc    ebp
  410755:	push   ebp
  410756:	jae    0x410734
  410758:	jecxz  0x4106fe
  41075a:	fwait
  41075b:	les    eax,FWORD PTR [ebx-0x14]
  41075e:	sbb    dh,BYTE PTR [ebp+0x3a]
  410761:	xor    bh,al
  410763:	cli    
  410764:	mov    es,WORD PTR ds:0xae965f2a
  41076a:	adc    al,0xac
  41076c:	repnz fs das 
  41076f:	sar    DWORD PTR [ebx-0x20],0x3d
  410773:	dec    eax
  410774:	popa   
  410775:	or     bl,BYTE PTR [esi+0x9]
  410778:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410779:	mov    DWORD PTR [ebx+ecx*8-0x3c9318b2],esi
  410780:	cmp    bh,BYTE PTR [ebp-0x13]
  410783:	sbb    BYTE PTR [edx+eax*2-0x10],dh
  410787:	xor    edi,DWORD PTR [ebx+0x79]
  41078a:	sub    eax,0x4efcd8d2
  41078f:	stc    
  410790:	icebp  
  410791:	jmp    0x41071b
  410793:	dec    ebp
  410794:	sub    BYTE PTR [edi-0x343c1763],bl
  41079a:	test   ebx,esi
  41079c:	ds xchg ebx,eax
  41079e:	inc    ecx
  41079f:	pop    edx
  4107a0:	xor    eax,0x8982c444
  4107a5:	lahf   
  4107a6:	retf   
  4107a7:	adc    edx,DWORD PTR [ebx]
  4107a9:	and    BYTE PTR [ebx-0x17bb87f3],dl
  4107af:	jge    0x4107ab
  4107b1:	arpl   WORD PTR [esi],ax
  4107b3:	sub    BYTE PTR [si],0x7b
  4107b7:	xchg   ebx,eax
  4107b8:	add    DWORD PTR [edx-0x40],edx
  4107bb:	fcomp  DWORD PTR [ebp-0x3d903b45]
  4107c1:	(bad)  
  4107c2:	sbb    eax,0x3f85c682
  4107c7:	push   ecx
  4107c8:	xchg   ebx,eax
  4107c9:	in     al,dx
  4107ca:	lahf   
  4107cb:	fcomp  QWORD PTR [esi]
  4107cd:	jb     0x4107bc
  4107cf:	and    al,0x3e
  4107d1:	xchg   ebp,ecx
  4107d3:	scas   eax,DWORD PTR es:[edi]
  4107d4:	neg    DWORD PTR es:[edx]
  4107d7:	pop    esi
  4107d8:	push   0xe7134186
  4107dd:	out    0x79,eax
  4107df:	and    ah,BYTE PTR ds:0x9d7dae61
  4107e5:	in     al,dx
  4107e6:	cmp    BYTE PTR [esp+eax*4+0x385cf484],bl
  4107ed:	or     DWORD PTR [ecx],ecx
  4107ef:	jmp    0xabdf:0xf1d73a52
  4107f6:	scas   al,BYTE PTR es:[edi]
  4107f7:	pop    ds
  4107f8:	and    ebx,DWORD PTR [eax]
  4107fa:	add    ebp,ecx
  4107fc:	lahf   
  4107fd:	cs call esi
  410800:	xor    dh,bh
  410802:	add    DWORD PTR [ebp-0x2a97b0c4],0x1d6ecbd2
  41080c:	push   esi
  41080d:	out    dx,eax
  41080e:	lods   al,BYTE PTR ds:[esi]
  41080f:	fimul  WORD PTR [ebp-0x8]
  410812:	adc    DWORD PTR [ecx*1-0x2ef61691],0x30
  41081a:	sub    al,0x30
  41081c:	iret   
  41081d:	shl    DWORD PTR ds:0xb0359595,cl
  410823:	mov    ds:0xe52bb10a,eax
  410828:	or     BYTE PTR [eax+0x6189a76f],dl
  41082e:	push   eax
  41082f:	mov    ch,0xc8
  410831:	push   esp
  410832:	push   0x6bd94553
  410837:	inc    ecx
  410838:	loopne 0x4107c6
  41083a:	scas   eax,DWORD PTR es:[edi]
  41083b:	mov    DWORD PTR [esi-0x8012491],eax
  410841:	mov    ch,0xce
  410843:	test   eax,0x4b37e26d
  410848:	sbb    bl,BYTE PTR [ebx-0x112dad20]
  41084e:	repnz outs dx,DWORD PTR ds:[esi]
  410850:	xor    DWORD PTR [esp+edx*1+0x7a8e12e9],0x6d298866
  41085b:	sbb    al,0x9b
  41085d:	mov    dh,BYTE PTR [edx-0x4f]
  410860:	pop    esp
  410861:	lea    ecx,[esi]
  410863:	mov    ds:0xa9826e31,al
  410868:	sahf   
  410869:	pusha  
  41086a:	adc    al,0x80
  41086c:	inc    ecx
  41086d:	retf   
  41086e:	push   ss
  41086f:	sbb    eax,0xa09b2ce5
  410875:	stc    
  410876:	ror    BYTE PTR [ecx],0x65
  410879:	sbb    eax,0xc9280c16
  41087e:	mov    WORD PTR [ebx],?
  410880:	mov    bl,dl
  410882:	loope  0x41081b
  410884:	xchg   esp,eax
  410885:	arpl   WORD PTR [ecx],bx
  410887:	xor    al,0xbc
  410889:	fistp  WORD PTR [edx]
  41088b:	pop    esp
  41088c:	out    0x76,al
  41088e:	mov    esp,0x99cea065
  410893:	cmp    eax,0x68
  410896:	(bad)  
  410897:	jno    0x41090f
  410899:	int3   
  41089a:	sti    
  41089b:	imul   esp,DWORD PTR [edx],0xfffffffb
  41089e:	fmul   DWORD PTR [esi]
  4108a0:	adc    al,0x7b
  4108a2:	xchg   esi,esp
  4108a4:	and    DWORD PTR [bx+di+0x7bae],ebp
  4108a9:	outs   dx,DWORD PTR ds:[esi]
  4108aa:	mov    al,ds:0x9a706c8d
  4108af:	fild   DWORD PTR [esi+0x2a]
  4108b2:	dec    ebp
  4108b3:	(bad)  
  4108b4:	fxch   st(3)
  4108b6:	imul   dh
  4108b8:	cdq    
  4108b9:	inc    edi
  4108ba:	std    
  4108bb:	and    al,bh
  4108bd:	sbb    dh,dh
  4108bf:	dec    eax
  4108c0:	push   ebp
  4108c1:	mov    ebx,0xc40e2c14
  4108c6:	ret    0x73f0
  4108c9:	stos   DWORD PTR es:[edi],eax
  4108ca:	jne    0x4108d6
  4108cc:	jnp    0x4108a2
  4108ce:	push   0x13
  4108d0:	rol    BYTE PTR [ebx-0x24],cl
  4108d3:	dec    esi
  4108d4:	les    ecx,FWORD PTR [edx]
  4108d6:	je     0x4108b9
  4108d8:	mov    dh,0x36
  4108da:	lahf   
  4108db:	dec    edi
  4108dc:	in     al,dx
  4108dd:	jp     0x4108c6
  4108df:	jno    0x410891
  4108e1:	add    dl,BYTE PTR [esi+0xe]
  4108e4:	cmp    cl,BYTE PTR [edi+edx*4]
  4108e7:	dec    esi
  4108e8:	jns    0x410899
  4108ea:	daa    
  4108eb:	jge    0x41096c
  4108ed:	popf   
  4108ee:	sbb    dh,cl
  4108f0:	jno    0x410928
  4108f2:	aas    
  4108f3:	aad    0x6e
  4108f5:	lods   eax,DWORD PTR ds:[esi]
  4108f6:	stos   BYTE PTR es:[edi],al
  4108f7:	cmp    eax,0x3a0dce59
  4108fc:	xlat   BYTE PTR ds:[ebx]
  4108fd:	add    DWORD PTR [eax+0x3d],esp
  410900:	sar    esi,cl
  410902:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410903:	gs inc esi
  410905:	(bad)  
  410906:	xchg   ecx,eax
  410907:	and    ebx,0xb62ee0df
  41090d:	jbe    0x4108b9
  41090f:	mov    eax,ds:0xdca1149a
  410914:	push   0xffffff99
  410916:	fcomp  QWORD PTR [edx+0x28]
  410919:	xor    al,0x40
  41091b:	sbb    DWORD PTR [ebx-0x66],ebx
  41091e:	sub    ah,BYTE PTR [eax]
  410920:	cli    
  410921:	push   es
  410922:	push   cs
  410923:	push   0x83c28f2a
  410928:	mov    dh,0x77
  41092a:	xor    DWORD PTR [ecx],edx
  41092c:	sbb    edi,ecx
  41092e:	out    0x19,eax
  410930:	sbb    BYTE PTR [edi+ebx*2-0x79812342],dh
  410937:	stos   BYTE PTR es:[edi],al
  410938:	and    al,0x60
  41093a:	enter  0xc7a3,0x57
  41093e:	add    eax,0x4ab9de36
  410943:	into   
  410944:	lods   eax,DWORD PTR ds:[esi]
  410945:	sub    dl,BYTE PTR [ecx]
  410947:	js     0x4109c2
  410949:	jp     0x410931
  41094b:	mov    DWORD PTR [esi-0x1e7109a4],ebp
  410951:	or     BYTE PTR [eax+0x2a],dh
  410954:	dec    edx
  410955:	mov    eax,0x2a9c85a9
  41095a:	push   edi
  41095b:	fisubr WORD PTR [ebx]
  41095d:	call   DWORD PTR [ebp+edi*2+0x6d8dad20]
  410964:	mov    al,0x60
  410966:	outs   dx,DWORD PTR ds:[esi]
  410967:	fisttp WORD PTR [edi-0x6f]
  41096a:	addr16 in eax,0x72
  41096d:	xchg   ebp,eax
  41096e:	push   0x40
  410970:	push   ebx
  410971:	lds    ecx,FWORD PTR [ecx+edi*2]
  410974:	into   
  410975:	mov    eax,ds:0x8febacaa
  41097a:	imul   ebx,ecx,0xffffffe9
  41097d:	pop    ebp
  41097e:	pop    ss
  41097f:	loopne 0x41093c
  410981:	imul   ebp,DWORD PTR [ebp+0x7fec05dc],0x1d
  410988:	mov    al,0xf8
  41098a:	jne    0x4109a1
  41098c:	jecxz  0x4109c3
  41098e:	dec    ebp
  41098f:	mov    eax,0xdd15984f
  410994:	push   edi
  410995:	repz std 
  410997:	mov    ah,0xbd
  410999:	pop    esi
  41099a:	jb     0x410921
  41099c:	scas   eax,DWORD PTR es:[edi]
  41099d:	gs mov edx,0x537fb050
  4109a3:	inc    ebx
  4109a4:	std    
  4109a5:	loopne 0x41099f
  4109a7:	dec    edi
  4109a8:	jbe    0x4109d6
  4109aa:	add    cl,cl
  4109ac:	push   cs
  4109ad:	pop    esi
  4109ae:	rep lods eax,DWORD PTR ds:[esi]
  4109b0:	add    BYTE PTR [esi+0x1ada05a3],ah
  4109b6:	inc    eax
  4109b7:	hlt    
  4109b8:	jmp    0x410a38
  4109ba:	mov    edi,0x767a8ced
  4109bf:	shl    BYTE PTR [eax*4+0x405daec2],cl
  4109c6:	adc    edi,DWORD PTR [edi+0x5faf9f28]
  4109cc:	pushf  
  4109cd:	mov    dl,0xd1
  4109cf:	add    ebp,DWORD PTR [eax+0x2d]
  4109d2:	xchg   ebp,eax
  4109d3:	mov    al,ds:0x4e16a427
  4109d8:	lods   eax,DWORD PTR ds:[esi]
  4109d9:	add    DWORD PTR [ecx-0x39027920],ebp
  4109df:	sahf   
  4109e0:	sti    
  4109e1:	cmp    dh,dh
  4109e3:	stc    
  4109e4:	hlt    
  4109e5:	xchg   ecx,eax
  4109e6:	jmp    0x410a67
  4109e8:	mov    edi,0x549b0811
  4109ed:	dec    esi
  4109ee:	adc    edi,DWORD PTR [ebx-0x24]
  4109f1:	mov    eax,0x56fea4eb
  4109f6:	in     eax,dx
  4109f7:	cmp    al,0xe2
  4109f9:	push   ecx
  4109fa:	cmp    al,0xa0
  4109fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109fd:	cdq    
  4109fe:	popf   
  4109ff:	mov    eax,ds:0x383d6906
  410a04:	stc    
  410a05:	mov    al,BYTE PTR [edi-0x5ccd10c0]
  410a0b:	dec    ebp
  410a0c:	dec    ecx
  410a0d:	hlt    
  410a0e:	push   ss
  410a0f:	in     eax,0x82
  410a11:	lea    esp,[edx+0x66e821e8]
  410a17:	mov    ebx,0x7596d917
  410a1c:	(bad)  
  410a1e:	gs ret 0x7663
  410a22:	aas    
  410a23:	out    0x88,eax
  410a25:	retf   
  410a26:	xor    al,0xca
  410a28:	int3   
  410a29:	jge    0x410aa0
  410a2b:	dec    edi
  410a2c:	inc    esp
  410a2d:	lds    ebp,FWORD PTR [ebx-0x6d855ff1]
  410a33:	lods   eax,DWORD PTR ds:[esi]
  410a34:	mov    DWORD PTR [ecx-0x2b42dc99],ebx
  410a3a:	jmp    0x2ceb705
  410a3f:	xor    al,0xdd
  410a41:	jp     0x410a9e
  410a43:	shl    DWORD PTR [di+0xa],1
  410a47:	clc    
  410a48:	xor    ebp,ebp
  410a4a:	sbb    dl,BYTE PTR [edi]
  410a4c:	out    0xac,eax
  410a4e:	or     al,ch
  410a50:	mov    bh,0xba
  410a52:	adc    DWORD PTR [ecx],0xf4ebe181
  410a58:	div    DWORD PTR [edx-0x715cb3e0]
  410a5e:	cli    
  410a5f:	jmp    0x36b706c1
  410a64:	xor    esi,edi
  410a66:	repnz (bad) 
  410a68:	jmp    0x9f7d5d23
  410a6d:	stos   BYTE PTR es:[edi],al
  410a6e:	mov    DWORD PTR [edi],ecx
  410a70:	mov    al,BYTE PTR [eax-0x1b]
  410a73:	push   ebx
  410a74:	popf   
  410a75:	and    DWORD PTR [ecx+esi*1-0x776bf66d],ebp
  410a7c:	mov    ds:0xc081aeef,al
  410a81:	aam    0xaf
  410a83:	or     BYTE PTR es:[esi+0x3384fcf2],bl
  410a8a:	sbb    ebp,ecx
  410a8c:	icebp  
  410a8d:	ins    BYTE PTR es:[edi],dx
  410a8e:	lds    ebx,FWORD PTR [ebp+0xcd0f106]
  410a94:	fadd   DWORD PTR [edi-0x10]
  410a97:	mov    edx,0x36f7a96c
  410a9c:	div    DWORD PTR [esi-0x6c54d9b5]
  410aa2:	aaa    
  410aa3:	xchg   edi,eax
  410aa4:	scas   al,BYTE PTR es:[edi]
  410aa5:	mov    cl,0xb9
  410aa7:	xor    DWORD PTR [ecx-0x7],edx
  410aaa:	daa    
  410aab:	sub    al,0x8d
  410aad:	scas   al,BYTE PTR es:[edi]
  410aae:	xlat   BYTE PTR ds:[ebx]
  410aaf:	cmp    eax,0xf6a382f5
  410ab4:	inc    esp
  410ab5:	nop
  410ab6:	push   ss
  410ab7:	call   0x8fed7e2
  410abc:	call   0x13df7453
  410ac1:	adc    al,0xc8
  410ac3:	cli    
  410ac4:	mov    bh,0xd
  410ac6:	popf   
  410ac7:	cmp    BYTE PTR [edx+esi*4-0xde15b56],0x54
  410acf:	xor    al,0x95
  410ad1:	push   esp
  410ad2:	inc    ebx
  410ad3:	inc    edx
  410ad4:	adc    eax,0x601d1c67
  410ad9:	(bad)  
  410ada:	fnsave [ecx+0x65659cc7]
  410ae0:	pop    ecx
  410ae1:	dec    ecx
  410ae2:	(bad)  
  410ae3:	xchg   ebp,eax
  410ae4:	add    edx,DWORD PTR [esi-0x45]
  410ae7:	jmp    DWORD PTR [esi]
  410ae9:	ret    
  410aea:	ins    BYTE PTR es:[edi],dx
  410aeb:	call   0xcbf1:0x2df130a7
  410af2:	and    eax,0xabe793cf
  410af7:	out    dx,eax
  410af8:	or     BYTE PTR [esi-0x57],0x2f
  410afc:	les    edx,FWORD PTR [edi+0x1f]
  410aff:	mov    al,0xdc
  410b01:	pand   mm2,QWORD PTR [ecx]
  410b04:	(bad)  
  410b05:	cmc    
  410b06:	stos   BYTE PTR es:[edi],al
  410b07:	mov    eax,ds:0xa076bca3
  410b0c:	into   
  410b0d:	jo     0x410af6
  410b0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b10:	mov    bh,0x58
  410b12:	mov    DWORD PTR [esi-0x26],edx
  410b15:	mov    DWORD PTR [ecx],edi
  410b17:	outs   dx,BYTE PTR ds:[esi]
  410b18:	mov    ebp,0xb817ef53
  410b1d:	mov    ah,0x7b
  410b1f:	mov    WORD PTR [eax],fs
  410b21:	cmp    al,0x40
  410b23:	int3   
  410b24:	pop    ds
  410b25:	push   ecx
  410b26:	jle    0x410b52
  410b28:	add    al,0x99
  410b2a:	push   edx
  410b2b:	test   al,0xb6
  410b2d:	lahf   
  410b2e:	pop    esp
  410b2f:	ss jle 0x410afa
  410b32:	imul   esi,DWORD PTR [ecx+ebx*8+0x7a],0x8e84398c
  410b3a:	(bad)  
  410b3b:	lea    edi,ds:0xedd42f2b
  410b41:	rcl    BYTE PTR [ebx-0xc],cl
  410b44:	stc    
  410b45:	or     ah,bl
  410b47:	aas    
  410b48:	xchg   esi,eax
  410b49:	jl     0x410b42
  410b4b:	lock mov ecx,0x358bce88
  410b51:	xchg   BYTE PTR [esi+esi*4+0x57],dh
  410b55:	aam    0xab
  410b57:	nop
  410b58:	loopne 0x410afb
  410b5a:	aaa    
  410b5b:	sbb    dl,BYTE PTR [eax+0x25]
  410b5e:	cmp    eax,DWORD PTR [ebp-0x3a]
  410b61:	push   edx
  410b62:	es popa 
  410b64:	sub    al,0x86
  410b66:	aad    0x14
  410b68:	retf   0xd07b
  410b6b:	xchg   esp,eax
  410b6c:	je     0x410b88
  410b6e:	pop    ss
  410b6f:	add    DWORD PTR [edi+ebx*1+0x28],esi
  410b73:	into   
  410b74:	mov    al,0xfd
  410b76:	add    eax,DWORD PTR [ebp+eax*1-0x2285b16f]
  410b7d:	or     cl,BYTE PTR [eax+0x79d3656e]
  410b83:	sub    al,0xd9
  410b85:	add    DWORD PTR [edx+eiz*8],ebx
  410b88:	imul   ebx,DWORD PTR ds:0x1db9e437,0x28
  410b8f:	data16 ficomp DWORD PTR [esi-0xe]
  410b93:	adc    DWORD PTR [ebx],0x5b
  410b96:	mov    WORD PTR [ebp+0x3de058be],?
  410b9c:	stos   DWORD PTR es:[edi],eax
  410b9d:	push   eax
  410b9e:	test   eax,0xca442c47
  410ba3:	bound  ecx,QWORD PTR [edi-0x72]
  410ba6:	pusha  
  410ba7:	mov    ds:0x98ba49f0,eax
  410bac:	mov    ah,0xd2
  410bae:	mov    esp,0xd2755d6a
  410bb3:	imul   ecx,ebx,0x9e338cb
  410bb9:	push   0xffffff9d
  410bbb:	ins    DWORD PTR es:[edi],dx
  410bbc:	jns    0x410b67
  410bbe:	jmp    0xd4b25e
  410bc3:	aad    0xe6
  410bc5:	add    al,0xe7
  410bc7:	mov    ah,0xad
  410bc9:	repnz dec ebx
  410bcb:	popf   
  410bcc:	dec    esp
  410bcd:	pop    edx
  410bce:	cmp    al,0x5a
  410bd0:	jle    0x410b94
  410bd2:	in     eax,dx
  410bd3:	dec    esp
  410bd4:	sub    DWORD PTR [ecx+eax*1+0x67],0x2f7f0aca
  410bdc:	push   esp
  410bdd:	sahf   
  410bde:	push   ss
  410bdf:	dec    esp
  410be0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410be1:	add    al,0x37
  410be3:	stos   DWORD PTR es:[edi],eax
  410be4:	dec    edi
  410be5:	add    al,0xc0
  410be7:	mov    cl,0xd0
  410be9:	mov    eax,es:0xc9805997
  410bef:	fs ins DWORD PTR es:[edi],dx
  410bf1:	out    0xe7,al
  410bf3:	jl     0x410c37
  410bf5:	cwde   
  410bf6:	pop    ecx
  410bf7:	sub    BYTE PTR [esi],bh
  410bf9:	ja     0x410c0a
  410bfb:	mov    dl,0x78
  410bfd:	int    0xa7
  410bff:	cmp    dh,BYTE PTR [ebp-0x5ee8c388]
  410c05:	mov    DWORD PTR [esi-0x1a],ebp
  410c08:	jmp    0x5a870bd7
  410c0d:	iret   
  410c0e:	lods   eax,DWORD PTR ds:[esi]
  410c0f:	test   DWORD PTR [esp+ebx*1+0x3f],edi
  410c13:	shl    BYTE PTR [esi-0x4f],cl
  410c16:	leave  
  410c17:	aaa    
  410c18:	aam    0x1a
  410c1a:	hlt    
  410c1b:	dec    esp
  410c1c:	mov    al,ds:0x4c9518b
  410c21:	rol    BYTE PTR [ecx+0x50],cl
  410c24:	icebp  
  410c25:	jg     0x410c72
  410c27:	lahf   
  410c28:	js     0x410c1a
  410c2a:	call   0x10990b7c
  410c2f:	or     BYTE PTR [ebx+ebx*8-0x6],dl
  410c33:	aas    
  410c34:	add    DWORD PTR [esi+edi*2-0x37],edx
  410c38:	push   edx
  410c39:	adc    al,BYTE PTR [ebp-0x5e984997]
  410c3f:	retf   
  410c40:	jns    0x410c55
  410c42:	jmp    0xb867:0x6f5fd078
  410c49:	aas    
  410c4a:	or     BYTE PTR [edx+esi*8],bl
  410c4d:	(bad)  
  410c4f:	icebp  
  410c50:	jne    0x410bda
  410c52:	pop    esp
  410c53:	sub    edx,DWORD PTR ds:[edi-0x5f]
  410c57:	clc    
  410c58:	adc    BYTE PTR [ebp+0x444171e6],dl
  410c5e:	xor    edi,ecx
  410c60:	adc    dh,BYTE PTR [ecx+0x297085f1]
  410c66:	es inc edi
  410c68:	jae    0x410cca
  410c6a:	lock inc edx
  410c6c:	repz push eax
  410c6e:	fcmovbe st,st(7)
  410c70:	mov    ebp,0x63563a22
  410c75:	push   ds
  410c76:	mov    ecx,0x17e72ca0
  410c7b:	lahf   
  410c7c:	sahf   
  410c7d:	and    DWORD PTR [ecx],0xffffffda
  410c80:	push   ss
  410c81:	jp     0x410cff
  410c83:	inc    ebp
  410c84:	jl     0x410c50
  410c86:	sbb    esp,edi
  410c88:	imul   edx,DWORD PTR [esi-0xacb0efa],0xff3ed46c
  410c92:	push   edx
  410c93:	cmp    bl,ah
  410c95:	ret    0xb76a
  410c98:	retf   0xbd22
  410c9b:	imul   esi,DWORD PTR [edi+0x53],0xa810ad66
  410ca2:	jl     0x410c84
  410ca4:	es xchg edi,eax
  410ca6:	test   eax,0x9d69d2ef
  410cab:	ins    DWORD PTR es:[edi],dx
  410cac:	xchg   BYTE PTR [esi+0x74fc229d],cl
  410cb2:	sahf   
  410cb3:	sub    DWORD PTR [esi-0x46],edi
  410cb6:	popf   
  410cb7:	push   ebp
  410cb8:	hlt    
  410cb9:	jge    0x410cf2
  410cbb:	jns    0x410cf1
  410cbd:	add    esp,DWORD PTR [esi]
  410cbf:	sub    eax,0xe0353537
  410cc4:	fcomi  st,st(0)
  410cc6:	xlat   BYTE PTR ds:[ebx]
  410cc7:	mov    DWORD PTR [edx+0x189befb9],ebx
  410ccd:	outs   dx,BYTE PTR ds:[esi]
  410cce:	outs   dx,BYTE PTR ds:[esi]
  410ccf:	adc    DWORD PTR [esi+0x2ca6a93e],esp
  410cd5:	cwde   
  410cd6:	sbb    edi,eax
  410cd8:	mov    WORD PTR [ecx+0x730bce52],?
  410cde:	adc    ah,dh
  410ce0:	inc    ecx
  410ce1:	pop    edi
  410ce2:	adc    ah,BYTE PTR [bp+di]
  410ce5:	ds sbb al,0x2e
  410ce8:	neg    al
  410cea:	mov    al,ds:0x439c6cb8
  410cef:	inc    esi
  410cf0:	ret    
  410cf1:	xlat   BYTE PTR ds:[ebx]
  410cf2:	out    dx,al
  410cf3:	inc    esp
  410cf4:	mov    eax,ds:0xda71fd42
  410cf9:	fstp   DWORD PTR [eax]
  410cfb:	icebp  
  410cfc:	out    dx,eax
  410cfd:	mov    edx,0xa7baaa3a
  410d02:	jns    0x410c96
  410d04:	imul   ebp,eax,0xffffffb7
  410d07:	sub    al,0xb8
  410d09:	sbb    ecx,DWORD PTR [edx+0x2a8cdcd1]
  410d0f:	aad    0xab
  410d11:	push   ecx
  410d12:	fld    TBYTE PTR [edi-0xd367f24]
  410d18:	jge    0x410cd5
  410d1a:	test   eax,0xfbbddb81
  410d1f:	leave  
  410d20:	(bad)  
  410d21:	xchg   edx,eax
  410d22:	rcr    DWORD PTR [ebx],0x60
  410d25:	neg    ebx
  410d27:	pop    ecx
  410d28:	cmp    al,0x62
  410d2a:	je     0x410ce6
  410d2c:	adc    al,0xf2
  410d2e:	outs   dx,DWORD PTR ds:[esi]
  410d2f:	nop
  410d30:	clc    
  410d31:	mov    ds,ebp
  410d33:	enter  0xe7bb,0x60
  410d37:	outs   dx,BYTE PTR ds:[esi]
  410d38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d39:	or     bl,bl
  410d3b:	dec    edx
  410d3c:	cmp    DWORD PTR [ebx],ecx
  410d3e:	add    bh,BYTE PTR [ebp-0xb]
  410d41:	mov    al,ds:0x384a0740
  410d46:	push   esp
  410d47:	jnp    0x410d9b
  410d49:	repz js 0x410cce
  410d4c:	stos   DWORD PTR es:[edi],eax
  410d4d:	push   esi
  410d4e:	out    dx,eax
  410d4f:	fisttp QWORD PTR [edi+0x190d873b]
  410d55:	sub    edx,DWORD PTR [edi]
  410d57:	sbb    BYTE PTR ds:0x3e54f412,ah
  410d5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d5e:	repz mov edi,edx
  410d61:	mov    ecx,fs
  410d63:	into   
  410d64:	sub    BYTE PTR [esi+0x2a],cl
  410d67:	mov    al,ds:0xab943e05
  410d6c:	mov    eax,0x7ef19457
  410d71:	jecxz  0x410d83
  410d73:	daa    
  410d74:	aaa    
  410d75:	aad    0xb6
  410d77:	and    DWORD PTR [eax],esi
  410d79:	jmp    FWORD PTR [ebp-0x70e6f77b]
  410d7f:	and    esi,esp
  410d81:	pop    es
  410d82:	or     DWORD PTR [edi],esp
  410d84:	mov    ds:0xe5ec09e9,al
  410d89:	adc    eax,0x827f566
  410d8e:	xor    BYTE PTR [edx-0x51],0x82
  410d92:	lods   eax,DWORD PTR ds:[esi]
  410d93:	mov    ds:0x4d817e81,eax
  410d98:	xor    BYTE PTR [ebx-0x7b],0x15
  410d9c:	mov    BYTE PTR [edx],bh
  410d9e:	pop    ecx
  410d9f:	scas   al,BYTE PTR es:[edi]
  410da0:	pop    ebp
  410da1:	std    
  410da2:	int    0xef
  410da4:	test   BYTE PTR [esi],cl
  410da6:	mov    esi,DWORD PTR [eax]
  410da8:	cmp    edi,ecx
  410daa:	out    0xff,eax
  410dac:	jle    0x410da9
  410dae:	pop    ss
  410daf:	dec    edx
  410db0:	fs cdq 
  410db2:	mov    ch,0xe
  410db4:	and    al,BYTE PTR [edi+edi*1-0x4ffb46fc]
  410dbb:	adc    ah,0xbd
  410dbe:	lea    ebx,[eax+0x2149fc70]
  410dc4:	iret   
  410dc5:	jmp    0x410e20
  410dc7:	pop    edi
  410dc8:	aas    
  410dc9:	cmp    eax,0x61f5885c
  410dce:	mov    ds,WORD PTR [ecx-0x5206dec8]
  410dd4:	mov    bh,0xef
  410dd6:	or     DWORD PTR [edi-0x6c20d900],eax
  410ddc:	sti    
  410ddd:	fistp  QWORD PTR [eax-0x2ee3aaeb]
  410de3:	jae    0x410e12
  410de5:	ror    BYTE PTR [ebx],cl
  410de7:	rcl    BYTE PTR [ecx+0x223c75f7],cl
  410ded:	mul    DWORD PTR [ebp-0x33831aa]
  410df3:	push   ecx
  410df4:	jle    0x410de1
  410df6:	dec    ecx
  410df7:	pushf  
  410df8:	jo     0x410d7b
  410dfa:	adc    DWORD PTR [ecx+0x37],eax
  410dfd:	sub    BYTE PTR [ebx+0x14],bl
  410e00:	aam    0xac
  410e02:	retf   0xc301
  410e05:	dec    esi
  410e06:	les    ecx,FWORD PTR [edi]
  410e08:	js     0x410e05
  410e0a:	enter  0x5a4d,0xb4
  410e0e:	test   eax,0x91e6edec
  410e13:	or     DWORD PTR [edi],ebx
  410e15:	addr16 cld 
  410e17:	mov    BYTE PTR [ecx+0x75543bfa],0xa2
  410e1e:	stc    
  410e1f:	sbb    cl,dh
  410e21:	mov    ds:0xf6d2385d,al
  410e26:	loop   0x410dad
  410e28:	dec    esi
  410e29:	jmp    0x410e0c
  410e2b:	fsubp  st(7),st
  410e2d:	pop    eax
  410e2e:	mov    bl,0x49
  410e30:	xchg   edx,eax
  410e31:	test   al,0x54
  410e33:	jns    0x410e03
  410e35:	jmp    0x410e84
  410e37:	xchg   ebp,eax
  410e38:	daa    
  410e39:	das    
  410e3a:	int3   
  410e3b:	xchg   ecx,eax
  410e3c:	aaa    
  410e3d:	mov    ah,0xb7
  410e3f:	and    eax,0x753c88a9
  410e44:	mov    fs,WORD PTR [ebp-0x7f634675]
  410e4a:	int3   
  410e4b:	call   0x4528cf74
  410e50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e51:	in     eax,dx
  410e52:	daa    
  410e53:	sub    eax,DWORD PTR [ebx+0x17]
  410e56:	mov    WORD PTR ds:0xdd704a81,cs
  410e5c:	mov    ds:0xc616ce4a,al
  410e61:	pop    eax
  410e62:	adc    eax,0x7ca10fe0
  410e67:	out    dx,eax
  410e68:	lods   eax,DWORD PTR ds:[esi]
  410e69:	mov    ebp,0x7f60737c
  410e6e:	aas    
  410e6f:	cmp    DWORD PTR [edi],esi
  410e71:	cli    
  410e72:	jg     0x410e39
  410e74:	loopne 0x410ec2
  410e76:	dec    ecx
  410e77:	scas   al,BYTE PTR es:[edi]
  410e78:	test   BYTE PTR [esi+0x76],0x9f
  410e7c:	test   al,0xd8
  410e7e:	pop    edi
  410e7f:	fimul  DWORD PTR [eax+ecx*1-0x16]
  410e83:	popf   
  410e84:	inc    eax
  410e85:	inc    ebx
  410e86:	vpsubsw ymm6,ymm3,ymm1
  410e8a:	dec    esi
  410e8b:	sar    DWORD PTR [edx],0xdb
  410e8e:	xlat   BYTE PTR ds:[ebx]
  410e8f:	icebp  
  410e90:	adc    eax,0x1fea45d8
  410e95:	mov    ebx,0x7ec02ac3
  410e9a:	sub    al,0x32
  410e9c:	loope  0x410e21
  410e9e:	fcom   QWORD PTR [ecx+0x68687cf2]
  410ea4:	push   cs
  410ea5:	push   0x33e22e02
  410eaa:	es mov esp,0x5fc59439
  410eb0:	jae    0x410e4d
  410eb2:	inc    eax
  410eb3:	and    DWORD PTR [eax-0x6b],ebp
  410eb6:	mov    ebx,0x325d3534
  410ebb:	adc    dl,BYTE PTR [ebx+0x1c1fbc02]
  410ec1:	les    esp,FWORD PTR [edi+ecx*2]
  410ec4:	pop    esp
  410ec5:	add    bh,ah
  410ec7:	and    al,0xf2
  410ec9:	ds xchg al,ah
  410ecc:	push   es
  410ecd:	int3   
  410ece:	je     0x410f27
  410ed0:	sti    
  410ed1:	mov    ch,dh
  410ed3:	loopne 0x410e62
  410ed5:	jge    0x410e78
  410ed7:	push   ss
  410ed8:	adc    eax,0xa2320844
  410edd:	lahf   
  410ede:	in     eax,dx
  410edf:	shl    DWORD PTR cs:[ebx],0xee
  410ee3:	push   0x39
  410ee5:	js     0x410e91
  410ee7:	inc    edi
  410ee8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ee9:	jbe    0x410e93
  410eeb:	pop    ebp
  410eec:	cmp    dh,dl
  410eee:	outs   dx,BYTE PTR ds:[esi]
  410eef:	dec    ebp
  410ef0:	aam    0xdf
  410ef2:	sbb    BYTE PTR [esi-0x5fd56b7e],ch
  410ef8:	cmp    DWORD PTR [ebp+0x3d0412d5],edx
  410efe:	es xchg edi,eax
  410f00:	xchg   edx,eax
  410f01:	push   edi
  410f02:	(bad)  
  410f03:	cs mov ebx,0x3cc58371
  410f09:	ret    0x22e1
  410f0c:	sbb    al,0x3c
  410f0e:	jp     0x410ec1
  410f10:	scas   al,BYTE PTR es:[edi]
  410f11:	sbb    DWORD PTR [ecx*1+0x212a839f],ebp
  410f18:	call   0x762c:0xadc508cf
  410f1f:	mov    bh,0x66
  410f21:	sub    ebp,DWORD PTR [ebp+0x1d]
  410f24:	add    eax,0x85388b8d
  410f29:	push   eax
  410f2a:	ins    DWORD PTR es:[edi],dx
  410f2b:	add    dl,BYTE PTR [ecx+eiz*8]
  410f2e:	stc    
  410f2f:	xor    dl,dl
  410f31:	cmc    
  410f32:	sub    edx,0x6c
  410f35:	sub    eax,0x802d8487
  410f3a:	out    0x2a,eax
  410f3c:	fsub   DWORD PTR [ebx-0x19d0be89]
  410f42:	jnp    0x410fa7
  410f44:	ins    DWORD PTR es:[edi],dx
  410f45:	mov    eax,ds:0x93d49e41
  410f4a:	aad    0x85
  410f4c:	mov    edi,0x4c2b9728
  410f51:	mov    edx,0x4dfdaa86
  410f56:	mov    esp,0xc78fa38a
  410f5b:	jp     0x410f53
  410f5d:	or     al,0x72
  410f5f:	inc    ecx
  410f60:	arpl   WORD PTR [eax+0x8],di
  410f63:	mul    DWORD PTR [ecx]
  410f65:	mov    ds:0x428c22a7,eax
  410f6a:	aad    0x74
  410f6c:	push   0xffffff83
  410f6e:	rcl    BYTE PTR es:[ebp+0x4d0eb43c],cl
  410f75:	scas   eax,DWORD PTR es:[edi]
  410f76:	xor    bh,BYTE PTR [ecx]
  410f78:	rcr    DWORD PTR [edi+0x1b680919],0x21
  410f7f:	and    eax,0x832cda82
  410f84:	ins    DWORD PTR es:[edi],dx
  410f85:	cmp    eax,DWORD PTR [edx]
  410f87:	push   es
  410f88:	ins    BYTE PTR es:[edi],dx
  410f89:	jne    0x410fbe
  410f8b:	inc    BYTE PTR [ecx+0x2e]
  410f8e:	daa    
  410f8f:	sub    al,0x25
  410f91:	fldenv [esi+0x7f0c4de3]
  410f97:	and    BYTE PTR [esi],0xc4
  410f9a:	jmp    0xed79f6ec
  410f9f:	jle    0x410fa0
  410fa1:	test   DWORD PTR [eax+0x51],edi
  410fa4:	aaa    
  410fa5:	loope  0x41101a
  410fa7:	mov    al,ds:0xa2f96f9c
  410fac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fad:	xchg   ecx,eax
  410fae:	cld    
  410faf:	shl    DWORD PTR [eax+0x14fb2300],1
  410fb5:	int3   
  410fb6:	push   ds
  410fb7:	mov    ebx,0x870f30b3
  410fbc:	in     eax,dx
  410fbd:	push   esp
  410fbe:	cli    
  410fbf:	sub    DWORD PTR [ebp-0x8],ebp
  410fc2:	icebp  
  410fc3:	(bad)  
  410fc4:	mov    ds:0x5b5d0254,al
  410fc9:	adc    ch,BYTE PTR [edi+0xe]
  410fcc:	imul   ecx,DWORD PTR [esi+0x690ef6c5],0x8c852f71
  410fd6:	(bad)  
  410fd7:	mov    esp,0x3f585065
  410fdc:	ins    BYTE PTR es:[edi],dx
  410fdd:	mov    WORD PTR [ebx-0x3f],?
  410fe0:	pop    ebx
  410fe1:	mov    ds:0x7f0aba34,eax
  410fe6:	jge    0x411028
  410fe8:	dec    eax
  410fe9:	je     0x410fc9
  410feb:	lods   eax,DWORD PTR ds:[esi]
  410fec:	pusha  
  410fed:	fsubr  QWORD PTR [ecx+ebx*2]
  410ff0:	sub    ebp,DWORD PTR [edx]
  410ff2:	xlat   BYTE PTR ds:[ebx]
  410ff3:	(bad)  
  410ff4:	mov    ah,0x4a
  410ff6:	arpl   WORD PTR [eax+ecx*8+0x30fbc89b],bx
  410ffd:	mov    ebp,DWORD PTR [ecx-0x3e1cc7c]
  411003:	xlat   BYTE PTR ds:[ebx]
  411004:	jae    0x41102c
  411006:	jmp    0x44b7:0xdd8596ec
  41100d:	jo     0x41102f
  41100f:	mov    ah,0x8b
  411011:	test   DWORD PTR [ebp+0x1c],0xc169dea1
  411018:	cdq    
  411019:	push   edx
  41101a:	loop   0x41104b
  41101c:	gs jne 0x411016
  41101f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411020:	mov    bl,0xb
  411022:	scas   eax,DWORD PTR es:[edi]
  411023:	jmp    0x41109d
  411025:	push   es
  411026:	int    0xf9
  411028:	mov    ds:0xbb655eb9,al
  41102d:	ja     0x41106a
  41102f:	aas    
  411030:	sub    al,0xdd
  411032:	call   DWORD PTR [esi]
  411034:	pop    ds
  411035:	mov    ds:0x8734e7dd,al
  41103a:	int3   
  41103b:	pop    ss
  41103c:	sbb    eax,0xcbe60dff
  411041:	inc    ebx
  411042:	inc    eax
  411043:	dec    edx
  411044:	in     al,dx
  411045:	or     al,0x4f
  411047:	cwde   
  411048:	or     DWORD PTR ds:0xa51eea27,edx
  41104e:	(bad)  
  41104f:	call   0x2217:0x71b34ce1
  411056:	(bad)  
  411057:	jmp    0xd813728
  41105c:	sbb    DWORD PTR [eax+0x1a58a106],ebp
  411062:	std    
  411063:	imul   esi,edi,0x4521a0ab
  411069:	sub    DWORD PTR [ebp+0x42],0xf123bad0
  411070:	pop    ecx
  411071:	or     DWORD PTR [ecx],edx
  411073:	pop    ebp
  411074:	scas   eax,DWORD PTR es:[edi]
  411075:	pop    esp
  411076:	arpl   WORD PTR [eax+0x6f],bp
  411079:	shr    BYTE PTR [edx+0x7],1
  41107c:	les    ecx,FWORD PTR [esp+eiz*4+0x70f7405e]
  411083:	and    bh,BYTE PTR ss:[ecx]
  411086:	std    
  411087:	pop    ss
  411088:	xor    al,0xb3
  41108a:	lods   al,BYTE PTR ds:[esi]
  41108b:	push   edx
  41108c:	ror    BYTE PTR [ebx+0x16],cl
  41108f:	fcom   QWORD PTR [esi+0x54]
  411092:	jo     0x4110f2
  411094:	pop    esi
  411095:	(bad)  
  411096:	rol    ah,cl
  411098:	arpl   dx,dx
  41109a:	lea    ecx,[edx+0x7bb29638]
  4110a0:	retf   
  4110a1:	outs   dx,BYTE PTR ds:[esi]
  4110a2:	and    al,0x15
  4110a4:	int3   
  4110a5:	xchg   edi,eax
  4110a6:	dec    ebx
  4110a7:	adc    cl,BYTE PTR [ecx+0x650d919e]
  4110ad:	stos   BYTE PTR es:[edi],al
  4110ae:	clc    
  4110af:	inc    eax
  4110b0:	aad    0xea
  4110b2:	push   ss
  4110b3:	lods   eax,DWORD PTR ds:[esi]
  4110b4:	lahf   
  4110b5:	xlat   BYTE PTR ds:[ebx]
  4110b6:	and    esi,DWORD PTR [edx]
  4110b8:	test   dl,ah
  4110ba:	(bad)  
  4110bb:	idiv   BYTE PTR [eax+0x78]
  4110be:	leave  
  4110bf:	add    eax,0xe6775919
  4110c4:	dec    esi
  4110c5:	mov    cl,0xe3
  4110c7:	dec    esi
  4110c8:	(bad)  
  4110c9:	mov    gs,WORD PTR [esi+0x5b]
  4110cc:	mov    esi,0x9f935368
  4110d1:	stos   DWORD PTR es:[edi],eax
  4110d2:	imul   esp,DWORD PTR [esi+0x47],0x16f8749
  4110d9:	pop    eax
  4110da:	sub    DWORD PTR [ebx-0x48],esp
  4110dd:	fldcw  WORD PTR [eax]
  4110df:	lahf   
  4110e0:	in     eax,dx
  4110e1:	cmp    eax,0xf93cc585
  4110e6:	sub    ch,BYTE PTR [edi+0x2bc8aac0]
  4110ec:	mov    eax,0x17139f38
  4110f1:	cli    
  4110f2:	cld    
  4110f3:	or     dl,BYTE PTR [edi+0x44f1ec06]
  4110f9:	cs xor al,0x42
  4110fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110fd:	push   ss
  4110fe:	in     eax,dx
  4110ff:	or     al,0x36
  411101:	sahf   
  411102:	ret    0xe022
  411105:	mov    ds:0x9d8a94ff,al
  41110a:	push   0xffffff99
  41110c:	(bad)  
  41110d:	ss pop ecx
  41110f:	fs daa 
  411111:	das    
  411112:	mov    ebp,0xc31a1a27
  411117:	xchg   edx,eax
  411118:	mov    cl,0xa1
  41111a:	push   0x36
  41111c:	cmp    eax,0x2b550d88
  411121:	dec    edi
  411122:	and    edx,DWORD PTR [edi+eiz*1-0x2efe49ee]
  411129:	adc    al,dl
  41112b:	jmp    DWORD PTR [ebp+0xd]
  41112e:	xchg   edi,eax
  41112f:	daa    
  411130:	xchg   edi,eax
  411131:	out    dx,eax
  411132:	neg    DWORD PTR [esi-0x1c567b6d]
  411138:	dec    esi
  411139:	ret    
  41113a:	xchg   ebp,eax
  41113b:	push   0x45
  41113d:	enter  0xc4ad,0xe1
  411141:	cli    
  411142:	adc    al,0xa9
  411144:	mov    eax,ds:0x7a4c054f
  411149:	sub    eax,0xf5e195b6
  41114e:	xchg   edx,eax
  41114f:	jl     0x411102
  411151:	cld    
  411152:	fistp  QWORD PTR [esi-0x6a]
  411155:	les    esp,FWORD PTR [ebx-0x451725d2]
  41115b:	push   esp
  41115c:	jle    0x4111a1
  41115e:	cmp    esp,edx
  411160:	dec    ecx
  411161:	jg     0x29432c2a
  411167:	dec    esi
  411168:	add    edi,ebx
  41116a:	cmp    ebp,DWORD PTR [ebx-0x5992cc90]
  411170:	sbb    DWORD PTR [edi+0x35b82ede],edi
  411176:	xchg   ebx,eax
  411177:	sbb    al,0x23
  411179:	jne    0x4111a5
  41117b:	imul   edx,DWORD PTR [ebp-0x3c],0x23
  41117f:	stos   DWORD PTR es:[edi],eax
  411180:	je     0x411115
  411182:	mov    ah,0xe4
  411184:	(bad)  
  411185:	out    dx,eax
  411186:	cmp    DWORD PTR [esi-0x7b],ecx
  411189:	xor    eax,0xa29a927c
  41118e:	xchg   ebx,eax
  41118f:	fdivrp st(2),st
  411191:	push   esp
  411192:	jecxz  0x4111b2
  411194:	div    DWORD PTR [edx+0x6b71cf80]
  41119a:	stos   DWORD PTR es:[edi],eax
  41119b:	fcom   DWORD PTR [eax-0x4cb4432f]
  4111a1:	adc    edi,DWORD PTR [ecx]
  4111a3:	xor    eax,0x173b5f09
  4111a8:	ret    0x67a7
  4111ab:	pushf  
  4111ac:	mov    WORD PTR [eax-0x27],?
  4111af:	mov    ah,0xaf
  4111b1:	lock addr16 popf 
  4111b4:	xchg   DWORD PTR [edx+0x3a],eax
  4111b7:	inc    ebx
  4111b8:	das    
  4111b9:	int    0xe9
  4111bb:	inc    ebx
  4111bc:	fldcw  WORD PTR ds:0xc3ad244b
  4111c2:	lods   eax,DWORD PTR ds:[esi]
  4111c3:	push   edx
  4111c4:	aaa    
  4111c5:	xor    edi,eax
  4111c7:	and    esp,DWORD PTR ss:[edx]
  4111ca:	sbb    al,0xaa
  4111cc:	stos   BYTE PTR es:[edi],al
  4111cd:	out    dx,eax
  4111ce:	and    esp,ebx
  4111d0:	sbb    DWORD PTR [esi+0x1e],edx
  4111d3:	xchg   ebp,eax
  4111d4:	les    esi,FWORD PTR [esi]
  4111d6:	lahf   
  4111d7:	xor    dh,BYTE PTR [ebx]
  4111d9:	adc    bh,dh
  4111db:	(bad)  
  4111dc:	xor    eax,ecx
  4111de:	jo     0x4111ba
  4111e0:	mov    WORD PTR [esi-0x45],cs
  4111e3:	jle    0x411214
  4111e5:	add    dl,BYTE PTR [edx-0x1613d693]
  4111eb:	jle    0x4111e3
  4111ed:	sub    ch,BYTE PTR [esi]
  4111ef:	(bad)  
  4111f0:	push   0xddd0285a
  4111f5:	inc    esp
  4111f6:	mov    ds:0xbcbf973b,eax
  4111fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111fc:	lods   al,BYTE PTR ds:[esi]
  4111fd:	or     al,0xfa
  4111ff:	adc    BYTE PTR [esi-0x6],dl
  411202:	mov    dh,0x73
  411204:	dec    edi
  411205:	jle    0x411280
  411207:	inc    ecx
  411208:	jns    0x4111a3
  41120a:	add    al,0x53
  41120c:	jb     0x4111eb
  41120e:	les    edx,FWORD PTR [edi-0x69]
  411211:	mov    edx,0xb4088bc7
  411216:	pushf  
  411217:	cld    
  411218:	test   BYTE PTR [ecx+ebp*2],0xc5
  41121c:	mov    cl,0xf4
  41121e:	jmp    0xb8f2476
  411223:	rol    DWORD PTR [ebx],1
  411225:	imul   esp,DWORD PTR [edx+0x3603e72],0xffffffa2
  41122c:	push   cs
  41122d:	inc    ebp
  41122e:	dec    edi
  41122f:	in     eax,0x9c
  411231:	fwait
  411232:	pop    es
  411233:	fistp  WORD PTR [ebx+0x72]
  411236:	fdivp  st(0),st
  411238:	jae    0x411239
  41123a:	out    dx,eax
  41123b:	cmp    DWORD PTR [edx],ebx
  41123d:	push   0xe26d526e
  411242:	data16 xor BYTE PTR es:[ecx],ah
  411246:	out    dx,eax
  411247:	xchg   edi,eax
  411248:	adc    BYTE PTR [eax-0x47],dh
  41124b:	push   sp
  41124d:	sub    DWORD PTR [ebp-0x10],eax
  411250:	ret    
  411251:	lock lock xchg ebp,eax
  411254:	stc    
  411255:	loope  0x411247
  411257:	int3   
  411258:	cdq    
  411259:	(bad)  [ebx-0xe]
  41125c:	into   
  41125d:	mov    ds:0x61f242d9,al
  411262:	push   ebx
  411263:	mov    eax,ds:0xea58dae5
  411268:	test   eax,0x9bbc8850
  41126d:	das    
  41126e:	mov    WORD PTR fs:[ecx],?
  411271:	jbe    0x41122b
  411273:	xchg   DWORD PTR [edx-0x44ff6b0e],eax
  411279:	ss push es
  41127b:	push   edx
  41127c:	cmp    ecx,DWORD PTR [edi]
  41127e:	shr    DWORD PTR [esi-0x2],1
  411281:	es jb  0x411284
  411284:	fwait
  411285:	mov    ecx,esi
  411287:	mov    ds:0x5429b61d,al
  41128c:	sbb    BYTE PTR [esi-0x4696b128],dh
  411292:	xor    esi,DWORD PTR [esi+0x73]
  411295:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411296:	mov    WORD PTR ds:0x79c7bc9,?
  41129c:	cli    
  41129d:	and    al,0x7d
  41129f:	mov    ds:0x74b0e417,eax
  4112a4:	call   0x89283a20
  4112a9:	aas    
  4112aa:	fwait
  4112ab:	jbe    0x41123c
  4112ad:	jne    0x41124c
  4112af:	or     bh,BYTE PTR ds:0xa7cf4d7b
  4112b5:	sbb    DWORD PTR [ebx-0x69a2a897],ecx
  4112bb:	sub    bl,ch
  4112bd:	dec    ebp
  4112be:	ins    DWORD PTR es:[edi],dx
  4112bf:	das    
  4112c0:	mov    dl,0xd7
  4112c2:	pop    eax
  4112c3:	popa   
  4112c4:	push   edi
  4112c5:	fild   WORD PTR [ebx+esi*1]
  4112c8:	pop    esi
  4112c9:	loope  0x411285
  4112cb:	jmp    0xa43ffea
  4112d0:	mov    gs,WORD PTR [edi+0x8]
  4112d3:	and    BYTE PTR [esi-0x41bb56c7],bl
  4112d9:	bound  ebx,QWORD PTR [ebp+0x2ab90069]
  4112df:	enter  0xae47,0xf7
  4112e3:	adc    bl,BYTE PTR [esi+edi*1+0x6e]
  4112e7:	push   0x64
  4112e9:	dec    edx
  4112ea:	mov    dl,0x85
  4112ec:	outs   dx,BYTE PTR ds:[esi]
  4112ed:	push   es
  4112ee:	fiadd  DWORD PTR [ebx]
  4112f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112f1:	ja     0x4112ec
  4112f3:	xchg   edi,eax
  4112f4:	inc    esi
  4112f5:	nop    DWORD PTR [esi]
  4112f8:	inc    ebp
  4112f9:	cs das 
  4112fb:	mov    ebp,0x78ed9584
  411300:	loop   0x411341
  411302:	xchg   esi,eax
  411303:	sub    ecx,esp
  411305:	jbe    0x41135f
  411307:	in     al,dx
  411308:	(bad)  [ebx-0x110cfea]
  41130e:	test   BYTE PTR [edx+0xc7354b],al
  411314:	pop    ebx
  411315:	ins    DWORD PTR es:[edi],dx
  411316:	jecxz  0x411335
  411318:	lods   al,BYTE PTR ds:[esi]
  411319:	pop    ebp
  41131a:	dec    esi
  41131b:	dec    eax
  41131c:	mov    eax,ds:0x271c8c4b
  411321:	push   0xa2d4a44a
  411326:	lods   al,BYTE PTR ds:[esi]
  411327:	push   0x28
  411329:	pop    ebx
  41132a:	sbb    ebp,DWORD PTR [ebp+eiz*2-0x7c1a11d3]
  411331:	ins    DWORD PTR es:[edi],dx
  411332:	test   DWORD PTR [eax+ebp*4],esi
  411335:	jo     0x41134e
  411337:	push   0x16
  411339:	aas    
  41133a:	mov    BYTE PTR [edx],bh
  41133c:	repnz lahf 
  41133e:	je     0x4112c4
  411340:	sbb    eax,0x54e56096
  411345:	xor    edx,DWORD PTR [ebx-0x4ab043e1]
  41134b:	xchg   esi,eax
  41134c:	mov    bh,0xe5
  41134e:	test   al,0x97
  411350:	dec    ecx
  411351:	xor    esp,DWORD PTR [bx+si+0x18d5]
  411356:	mov    eax,ds:0xe1550941
  41135b:	ins    DWORD PTR es:[edi],dx
  41135c:	or     eax,0x7dafb563
  411361:	ror    DWORD PTR [ecx],1
  411363:	int    0x65
  411365:	mov    edi,0x2f0b5e03
  41136a:	retf   0xaadf
  41136d:	push   ebx
  41136e:	scas   al,BYTE PTR es:[edi]
  41136f:	lds    ebx,FWORD PTR [edx]
  411371:	mov    cl,0x66
  411373:	inc    ebp
  411374:	pop    ebx
  411375:	mov    eax,ds:0x18a112b6
  41137a:	push   ebx
  41137b:	aad    0xe
  41137d:	stc    
  41137e:	push   eax
  41137f:	sahf   
  411380:	out    dx,al
  411381:	mov    cl,0xd6
  411383:	mov    esi,esi
  411385:	or     edi,DWORD PTR [edi-0x44]
  411388:	dec    edi
  411389:	(bad)  
  41138a:	mov    esi,0x4a924a99
  41138f:	mov    cl,0xb3
  411391:	dec    ecx
  411392:	neg    BYTE PTR es:[esi]
  411395:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411396:	es jge 0x41137f
  411399:	push   edx
  41139a:	pop    eax
  41139b:	push   edx
  41139c:	fs mov al,0xcb
  41139f:	xchg   edi,eax
  4113a0:	add    al,0xe7
  4113a2:	fwait
  4113a3:	mov    cl,0xa4
  4113a5:	les    eax,FWORD PTR [edx+ecx*1+0x498b431a]
  4113ac:	xchg   esi,eax
  4113ad:	ja     0x411407
  4113af:	push   DWORD PTR [esi+0x1a]
  4113b2:	imul   esp,DWORD PTR [ecx],0x74
  4113b5:	rcr    BYTE PTR [ebx+0x3b],0x42
  4113b9:	sub    eax,0x6bb85cde
  4113be:	jle    0x4113b3
  4113c0:	sub    ch,BYTE PTR [eax]
  4113c2:	fidivr DWORD PTR [edi]
  4113c4:	cli    
  4113c5:	(bad)  
  4113c6:	retf   0x8b3e
  4113c9:	add    al,dh
  4113cb:	jne    0x411417
  4113cd:	mov    ebx,0xaa16ae5c
  4113d2:	loope  0x411372
  4113d4:	adc    al,0xc4
  4113d6:	shr    BYTE PTR [ebp+0x23133ae7],1
  4113dc:	push   ecx
  4113dd:	mov    ebx,0x87d93af5
  4113e2:	ins    DWORD PTR es:[edi],dx
  4113e3:	xor    al,ch
  4113e5:	mov    ebp,0x4d9303d4
  4113ea:	stos   DWORD PTR es:[edi],eax
  4113eb:	inc    edx
  4113ec:	xchg   ecx,eax
  4113ed:	push   ebp
  4113ee:	or     BYTE PTR [ebx],dl
  4113f0:	dec    edx
  4113f1:	bound  edi,QWORD PTR [edx]
  4113f3:	push   edx
  4113f4:	push   ecx
  4113f5:	std    
  4113f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113f8:	and    BYTE PTR ds:0x9542294b,0x27
  4113ff:	xor    DWORD PTR [esi+0x43],esp
  411402:	shl    DWORD PTR [esi],cl
  411404:	sub    DWORD PTR [ebp+0x4f],ecx
  411407:	lds    edx,FWORD PTR [ebp+0x5f]
  41140a:	enter  0x4a76,0x52
  41140e:	adc    ecx,DWORD PTR [ebx]
  411410:	sbb    edi,ebp
  411412:	jbe    0x4113e1
  411414:	xchg   DWORD PTR [ebx+eiz*1-0x63],edi
  411418:	repnz or dh,cl
  41141b:	daa    
  41141c:	push   0x2d2616b
  411421:	xor    BYTE PTR [edi],bh
  411423:	lea    ecx,[ebx-0x52]
  411426:	xor    DWORD PTR [ecx+0x7c],ecx
  411429:	les    esi,FWORD PTR ds:0x5bda464e
  41142f:	cmp    DWORD PTR [ecx+0x2a630e68],0x82e84f37
  411439:	jae    0x411444
  41143b:	ins    BYTE PTR es:[edi],dx
  41143c:	aam    0xb1
  41143e:	cs stc 
  411440:	mov    WORD PTR [ecx],ss
  411442:	and    DWORD PTR [esi+0x22f60ae9],ebx
  411448:	inc    ecx
  411449:	inc    edi
  41144a:	adc    al,0x9e
  41144c:	test   al,0x98
  41144e:	arpl   WORD PTR [ebx-0x5ce601e1],bx
  411454:	rol    DWORD PTR [edi],1
  411456:	mov    eax,DWORD PTR [ecx+0x3ef7bc14]
  41145c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41145d:	out    0xf7,eax
  41145f:	pusha  
  411460:	add    eax,0x854eaaa7
  411465:	pop    es
  411466:	loope  0x4114ba
  411468:	loopne 0x4113eb
  41146a:	aad    0x37
  41146c:	or     al,0x6a
  41146e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41146f:	int    0x92
  411471:	cmc    
  411472:	sbb    al,0x13
  411474:	vpsrlw xmm1,xmm2,XMMWORD PTR [eax-0x11]
  411479:	add    DWORD PTR [ecx-0x7a73f9f4],ebx
  41147f:	std    
  411480:	das    
  411481:	cwde   
  411482:	and    ebp,edx
  411484:	dec    edx
  411485:	mov    bl,0x37
  411487:	test   BYTE PTR [edx],0xf8
  41148a:	push   ecx
  41148b:	das    
  41148c:	popa   
  41148d:	xor    dl,BYTE PTR [eax]
  41148f:	dec    eax
  411490:	loop   0x411506
  411492:	adc    ebx,edx
  411494:	sbb    ecx,0x2d22918b
  41149a:	je     0x4114ca
  41149c:	shl    ebx,cl
  41149e:	(bad)  [ebx-0x1a37f8b0]
  4114a4:	mov    eax,0x6ae0876e
  4114a9:	sub    esp,DWORD PTR [esi+0x1d7c31de]
  4114af:	mov    esp,0x469f7494
  4114b4:	idiv   BYTE PTR [ebp-0x1c9360c8]
  4114ba:	mov    esp,0x43427492
  4114bf:	xor    ebp,DWORD PTR [ecx+0x2]
  4114c2:	shr    ebx,0x9d
  4114c5:	fwait
  4114c6:	popf   
  4114c7:	fucom  st(7)
  4114c9:	loopne 0x4114d5
  4114cb:	sbb    al,0x2b
  4114cd:	mov    dl,BYTE PTR cs:[ecx]
  4114d0:	shr    DWORD PTR [esi],1
  4114d2:	cmp    al,BYTE PTR [edx-0x23]
  4114d5:	call   0xa068:0x120a06a5
  4114dc:	retf   
  4114dd:	jg     0x411480
  4114df:	xor    DWORD PTR ds:0x65fda2c3,0x1bf78278
  4114e9:	mov    esi,0x55376dcb
  4114ee:	jp     0x411515
  4114f0:	in     eax,dx
  4114f1:	dec    DWORD PTR [ebx-0x4e]
  4114f4:	cli    
  4114f5:	sub    DWORD PTR [esi-0x75a72e60],edi
  4114fb:	pusha  
  4114fc:	push   0x90417d5d
  411501:	dec    eax
  411502:	leave  
  411503:	es pop es
  411505:	sbb    DWORD PTR [eax-0x25828e55],edx
  41150b:	repz or DWORD PTR [ecx],edx
  41150e:	fst    QWORD PTR [ebx+eiz*1]
  411511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411512:	gs (bad) 
  411514:	and    al,0x40
  411516:	or     BYTE PTR [ecx-0x7],dh
  411519:	aad    0xbe
  41151b:	push   es
  41151c:	lods   al,BYTE PTR ds:[esi]
  41151d:	cmp    al,0x60
  41151f:	(bad)  
  411520:	pop    edi
  411521:	sub    esi,ebp
  411523:	loope  0x41154d
  411525:	pop    edi
  411526:	lea    edx,[edx+edx*8-0x3a]
  41152a:	ret    0x8468
  41152d:	or     BYTE PTR ds:0x3f96b1f3,ah
  411533:	inc    esi
  411534:	pop    eax
  411535:	sub    bl,BYTE PTR [edi]
  411537:	adc    al,0xf7
  411539:	imul   ebp,ecx,0xe1992de0
  41153f:	add    BYTE PTR [esi+0x3ff5b111],dl
  411545:	cmp    cl,bh
  411547:	je     0x411545
  411549:	add    bl,BYTE PTR [edi+0x26]
  41154c:	mov    BYTE PTR [esi],bl
  41154e:	cmp    ah,BYTE PTR [edx-0xc]
  411551:	mov    ds:0x5deddf7d,al
  411556:	jae    0x4114f4
  411558:	mov    ebp,0x549ec706
  41155d:	mov    ebx,0x35f1bcb1
  411562:	cwde   
  411563:	mov    ds:0x1cac6656,eax
  411568:	add    ch,dl
  41156a:	inc    ecx
  41156b:	pop    eax
  41156c:	xlat   BYTE PTR ds:[ebx]
  41156d:	mov    al,ds:0xfbae5cea
  411572:	clc    
  411573:	inc    BYTE PTR ss:[esi+ebp*2]
  411577:	out    0x8a,eax
  411579:	sub    DWORD PTR [edx-0x3563739a],eax
  41157f:	mov    al,ds:0x11f89c0d
  411584:	out    dx,eax
  411585:	idiv   BYTE PTR [ecx]
  411587:	sahf   
  411588:	xchg   BYTE PTR [edi-0x64ab1b36],dl
  41158e:	push   ecx
  41158f:	into   
  411590:	push   ebp
  411591:	(bad)  
  411592:	nop
  411593:	adc    eax,DWORD PTR [edi-0x56a09c1f]
  411599:	push   es
  41159a:	or     eax,0x8c75a077
  41159f:	rcr    DWORD PTR [ebp+esi*4+0x0],0xca
  4115a4:	sbb    ch,bl
  4115a6:	cmp    ebp,DWORD PTR [esi+0x774db8df]
  4115ac:	cmp    ah,BYTE PTR [edi+esi*8]
  4115af:	out    dx,eax
  4115b0:	(bad)  
  4115b1:	and    al,0x2
  4115b3:	mov    ebp,DWORD PTR [ecx]
  4115b5:	xlat   BYTE PTR ds:[ebx]
  4115b6:	into   
  4115b7:	scas   eax,DWORD PTR es:[edi]
  4115b8:	outs   dx,DWORD PTR ds:[esi]
  4115b9:	pop    edi
  4115ba:	mov    WORD PTR [ebp-0x5a342d11],gs
  4115c0:	push   edx
  4115c1:	call   0xcb5:0x12a1a39c
  4115c8:	fcom   DWORD PTR [esi-0x4e4b79d7]
  4115ce:	hlt    
  4115cf:	push   ds
  4115d0:	or     DWORD PTR [edx-0x53],esp
  4115d3:	pop    ds
  4115d4:	jle    0x411591
  4115d6:	test   BYTE PTR [ebp-0x7a],dl
  4115d9:	sub    eax,0x6cdb5136
  4115de:	mul    bl
  4115e0:	xchg   esp,eax
  4115e1:	popa   
  4115e2:	call   0xef6d:0x15289fb9
  4115e9:	pop    ebx
  4115ea:	popf   
  4115eb:	(bad)
  4115ef:	mov    BYTE PTR [edi],0x71
  4115f2:	dec    esp
  4115f3:	fmul   QWORD PTR [edi+0x27ed5162]
  4115f9:	push   ds
  4115fa:	sbb    BYTE PTR [ebx],dl
  4115fc:	repz push cs
  4115fe:	mov    cl,0xa9
  411600:	(bad)  [esi-0x29]
  411603:	fld    QWORD PTR [edx-0x2e]
  411606:	ins    DWORD PTR es:[edi],dx
  411607:	stc    
  411608:	out    0x42,eax
  41160a:	loope  0x411652
  41160c:	and    dl,BYTE PTR [ebx+0x70d3b23f]
  411612:	lods   al,BYTE PTR ds:[esi]
  411613:	ins    BYTE PTR es:[edi],dx
  411614:	iret   
  411615:	js     0x41165f
  411617:	jle    0x4115d2
  411619:	ins    DWORD PTR es:[edi],dx
  41161a:	mov    ds:0x943d6a6b,al
  41161f:	test   ebp,edi
  411621:	and    BYTE PTR [edx-0x58349c36],dh
  411627:	jmp    0x17ecb81e
  41162c:	in     al,0x67
  41162e:	rol    DWORD PTR [ecx+eax*8+0x65ddd79a],1
  411635:	xchg   esi,eax
  411636:	sub    esi,DWORD PTR [ebx-0x7e]
  411639:	out    dx,al
  41163a:	mov    esi,DWORD PTR [esi-0x38b31fda]
  411640:	push   ebx
  411641:	(bad)  
  411642:	pop    esi
  411643:	ds dec eax
  411645:	and    DWORD PTR [ecx-0x7218ec07],edx
  41164b:	aaa    
  41164c:	adc    DWORD PTR [edx+0x4],esi
  41164f:	(bad)  
  411650:	popf   
  411651:	jmp    0x64b9ff76
  411656:	(bad)
  41165a:	adc    BYTE PTR [eax+0x74],0x77
  41165e:	dec    edi
  41165f:	retf   0x6966
  411662:	xor    ebp,edx
  411664:	mov    ah,0xf7
  411666:	stc    
  411667:	cli    
  411668:	gs ins DWORD PTR es:[edi],dx
  41166a:	and    al,0x70
  41166c:	dec    esi
  41166d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41166e:	adc    eax,DWORD PTR [ecx-0x2a89b978]
  411674:	imul   esi,DWORD PTR [ebx+0x7fd06e78],0xffffffc6
  41167b:	icebp  
  41167c:	cld    
  41167d:	add    BYTE PTR es:[ecx+0x78b4567d],al
  411684:	pop    edi
  411685:	sahf   
  411686:	sbb    DWORD PTR [eax],ecx
  411688:	cmp    esi,ebx
  41168a:	mov    ds:0xa5574f5f,eax
  41168f:	popf   
  411690:	xchg   ecx,eax
  411691:	pop    ebx
  411692:	mov    eax,ds:0xd0897caf
  411698:	std    
  411699:	je     0x411698
  41169b:	cld    
  41169c:	in     eax,dx
  41169d:	aaa    
  41169e:	sar    al,cl
  4116a0:	push   eax
  4116a1:	mul    DWORD PTR [ebx-0x20]
  4116a4:	fisttp DWORD PTR [ebx+0x5b9d090d]
  4116aa:	ret    
  4116ab:	or     ebp,ecx
  4116ad:	xchg   esi,eax
  4116ae:	clc    
  4116af:	mov    cl,0xc8
  4116b1:	out    0xf9,al
  4116b3:	xor    ecx,DWORD PTR [edx]
  4116b5:	pop    edi
  4116b6:	add    DWORD PTR [ecx],edx
  4116b8:	arpl   si,bp
  4116ba:	call   0x5ef:0xf3b67427
  4116c1:	push   esi
  4116c2:	mov    ebx,0x9bf71428
  4116c7:	clc    
  4116c8:	mov    eax,DWORD PTR [esp+eax*2]
  4116cb:	popa   
  4116cc:	punpckhwd mm2,QWORD PTR [edx-0x245a751d]
  4116d3:	das    
  4116d4:	mov    DWORD PTR [eax],edi
  4116d6:	jae    0x411669
  4116d8:	rcl    DWORD PTR [edx],1
  4116da:	mov    esp,0x282e6800
  4116df:	sti    
  4116e0:	and    eax,0x1e3b4495
  4116e5:	popf   
  4116e6:	inc    ebx
  4116e7:	add    al,0x90
  4116e9:	call   0x16928e05
  4116ee:	mov    dh,0xa
  4116f0:	xor    al,0x2d
  4116f2:	adc    BYTE PTR [eax+ecx*4-0x33],dl
  4116f6:	xchg   bl,ah
  4116f8:	call   0x9ef3e998
  4116fd:	sbb    dh,BYTE PTR [ebp+0xe]
  411700:	int    0x52
  411702:	jnp    0x411770
  411704:	mov    bh,0xa5
  411706:	dec    ebp
  411707:	or     eax,0xba299e7d
  41170c:	sar    BYTE PTR [ebp-0x59115074],cl
  411712:	hlt    
  411713:	jnp    0x41169c
  411715:	or     eax,0xe1e19623
  41171a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41171b:	pop    ds
  41171c:	jp     0x4116ab
  41171e:	sahf   
  41171f:	fild   DWORD PTR [esi-0xf]
  411722:	aaa    
  411723:	push   esp
  411724:	clc    
  411725:	pmulhw mm3,QWORD PTR [edx]
  411728:	cwde   
  411729:	push   0x58
  41172b:	xor    eax,DWORD PTR [esi-0x4653b2a5]
  411731:	mov    ds:0xa52d4e46,al
  411736:	xchg   ecx,eax
  411737:	ror    BYTE PTR ds:0x41db11,0x77
  41173e:	sbb    bl,ch
  411740:	dec    edi
  411741:	call   0x6228:0xaf8b0361
  411748:	and    al,0x12
  41174a:	add    eax,0x78011f84
  41174f:	jbe    0x411774
  411751:	enter  0xfba0,0x74
  411755:	in     eax,dx
  411756:	adc    bl,BYTE PTR [esi+eiz*1]
  411759:	and    BYTE PTR [esi+edx*4],dl
  41175c:	jnp    0x411776
  41175e:	push   0xffffff87
  411760:	call   FWORD PTR [ebx]
  411762:	jecxz  0x411772
  411764:	add    DWORD PTR [edi],eax
  411766:	mov    dl,0x40
  411768:	fsub   st,st(4)
  41176a:	pop    esi
  41176b:	cdq    
  41176c:	sar    BYTE PTR [edi+0x51],0xee
  411770:	cmc    
  411771:	xor    esi,eax
  411773:	mov    BYTE PTR [eax],bl
  411775:	push   0x5e
  411777:	add    edi,ebx
  411779:	xor    al,cl
  41177b:	sahf   
  41177c:	lods   al,BYTE PTR ds:[esi]
  41177d:	clc    
  41177e:	mov    cl,0x1e
  411780:	add    DWORD PTR [ecx-0x679129c3],esp
  411786:	ror    DWORD PTR [ebx],0x98
  411789:	push   ss
  41178a:	pop    eax
  41178b:	cmp    al,0x90
  41178d:	leave  
  41178e:	ret    0x42fc
  411791:	inc    esi
  411792:	sbb    ebp,eax
  411794:	cmp    cl,bh
  411796:	mov    eax,0x8af05c02
  41179b:	jae    0x41180a
  41179d:	shl    BYTE PTR [ecx],1
  41179f:	and    BYTE PTR fs:[ebx],al
  4117a2:	adc    eax,0x3ec0b071
  4117a7:	push   ebx
  4117a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117a9:	and    al,cl
  4117ab:	xor    esi,ebp
  4117ad:	fs mov esi,0x664dd4fb
  4117b3:	fstp   QWORD PTR gs:[eax]
  4117b6:	out    0x5e,al
  4117b8:	push   eax
  4117b9:	ss gs mov dl,0xfc
  4117bd:	dec    esi
  4117be:	(bad)  
  4117bf:	sbb    eax,0x5e18385a
  4117c4:	retf   
  4117c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117c6:	xor    BYTE PTR [ecx+0x16],ch
  4117c9:	mov    al,0x14
  4117cb:	mov    ebp,gs
  4117cd:	mov    esp,0x323b7469
  4117d2:	call   0x3762:0x8795766
  4117d9:	adc    al,0xd6
  4117db:	adc    dl,bh
  4117dd:	mov    WORD PTR [edx+edi*1+0x28],cs
  4117e1:	mov    ds:0xead52ce5,al
  4117e6:	(bad)  
  4117e7:	mov    al,ds:0xb5f6dfa
  4117ec:	mov    DWORD PTR [ebp+0x1dee206d],ebx
  4117f2:	cmp    bh,BYTE PTR [edx-0x4c]
  4117f5:	mov    ebx,0xf69963f2
  4117fa:	jae    0x411807
  4117fc:	mov    al,ds:0xf4e2f4ca
  411801:	ja     0x41187e
  411803:	jmp    0x4117f8
  411805:	sar    DWORD PTR [edx-0x73],cl
  411808:	shl    BYTE PTR [edx+0x4ec8ae7d],cl
  41180e:	mov    eax,0xf2cc51e4
  411813:	sbb    BYTE PTR [ebp-0x3e2e0e4a],0xff
  41181a:	pushf  
  41181b:	pop    esp
  41181c:	out    dx,al
  41181d:	in     eax,dx
  41181e:	sub    BYTE PTR [ebx-0x67],dh
  411821:	mov    dl,0xa8
  411823:	loopne 0x4117ba
  411825:	aad    0x8
  411827:	xchg   ecx,eax
  411828:	aas    
  411829:	ins    BYTE PTR es:[edi],dx
  41182a:	pop    esp
  41182b:	pop    esp
  41182c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41182d:	daa    
  41182e:	push   ebp
  41182f:	imul   edi,ecx,0x2f5cac59
  411835:	push   0xffffffb2
  411837:	add    eax,ebp
  411839:	mov    dl,0x95
  41183b:	xor    BYTE PTR [ecx+ecx*2+0x614443c8],cl
  411842:	or     DWORD PTR [eax-0x48],ebp
  411845:	mov    dh,0x42
  411847:	shl    BYTE PTR [ecx-0x49],1
  41184a:	in     al,dx
  41184b:	loop   0x41180a
  41184d:	mov    ebx,0x4f7fb99b
  411852:	lea    edx,[ecx-0x1de370e]
  411858:	xchg   edx,eax
  411859:	mov    cl,0x5b
  41185b:	jmp    0x4118b2
  41185d:	(bad)  
  41185e:	test   BYTE PTR [ecx+0x43],0x2
  411862:	pop    ds
  411863:	nop
  411864:	dec    eax
  411865:	xor    al,0x6b
  411867:	jnp    0x411881
  411869:	imul   edx,DWORD PTR cs:[edx+eiz*8],0xfffffffd
  41186e:	xchg   DWORD PTR ds:0xcf245826,eax
  411874:	jl     0x41187e
  411876:	jl     0x4118b6
  411878:	cs add eax,0x53d48f9d
  41187e:	addr16 (bad) 
  411880:	xor    BYTE PTR [ebx+eax*4+0x8],bl
  411884:	jecxz  0x411854
  411886:	bswap  ecx
  411888:	jbe    0x4118e8
  41188a:	push   eax
  41188b:	sbb    eax,0x5d
  41188e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41188f:	cmp    DWORD PTR [ecx+0x78dad9ec],0x2296114
  411899:	hlt    
  41189a:	and    DWORD PTR [edi+edx*1],ecx
  41189d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41189e:	xchg   ebx,eax
  41189f:	aad    0x9a
  4118a1:	ror    ebp,cl
  4118a3:	inc    edx
  4118a4:	dec    ebp
  4118a5:	add    bh,cl
  4118a7:	fimul  DWORD PTR [ebp-0x1e]
  4118aa:	mov    al,ds:0xd00f390c
  4118af:	(bad)  
  4118b1:	stos   BYTE PTR es:[edi],al
  4118b2:	fcmovnb st,st(3)
  4118b4:	out    dx,al
  4118b5:	hlt    
  4118b6:	dec    esi
  4118b7:	dec    edx
  4118b8:	jmp    0x411883
  4118ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118bb:	sub    DWORD PTR [ecx],ebx
  4118bd:	xchg   ebx,eax
  4118be:	xor    ecx,ebx
  4118c0:	fwait
  4118c1:	sahf   
  4118c2:	icebp  
  4118c3:	pop    eax
  4118c4:	jno    0x411902
  4118c6:	mov    ds:0x10cdb644,eax
  4118cb:	and    DWORD PTR [esi-0x340b9a6c],ebx
  4118d1:	jg     0x411900
  4118d3:	inc    ebx
  4118d4:	add    cl,bh
  4118d6:	inc    ebp
  4118d7:	fs ja  0x411884
  4118da:	jno    0x41190b
  4118dc:	(bad)  
  4118dd:	iret   
  4118de:	ror    DWORD PTR [esi*8-0x654d7541],cl
  4118e5:	outs   dx,BYTE PTR ds:[esi]
  4118e6:	int    0x41
  4118e8:	xor    al,0xf3
  4118ea:	call   0x871577e8
  4118ef:	gs dec ebp
  4118f1:	mov    ecx,0x40f5ab7a
  4118f6:	ret    
  4118f7:	pop    ecx
  4118f8:	(bad)  
  4118f9:	cmp    al,0x22
  4118fb:	inc    esi
  4118fc:	shl    BYTE PTR [edx+0x3a],1
  4118ff:	ins    DWORD PTR es:[edi],dx
  411900:	pop    ecx
  411901:	addr16 cmp ecx,edx
  411904:	jns    0x41196f
  411906:	int3   
  411907:	out    0x6e,al
  411909:	jp     0x41191e
  41190b:	cmp    al,0xa4
  41190d:	out    dx,al
  41190e:	xchg   esp,eax
  41190f:	adc    BYTE PTR [edi],dl
  411911:	into   
  411912:	mov    ds:0xfe7fd60e,al
  411917:	add    bh,bl
  411919:	jnp    0x411946
  41191b:	sub    BYTE PTR [eax+0x4b],0xc
  41191f:	mov    BYTE PTR [eax+esi*1+0x1f6dc9d8],dh
  411926:	in     al,dx
  411927:	pop    eax
  411928:	pushf  
  411929:	adc    bh,cl
  41192b:	inc    ebp
  41192c:	inc    ebx
  41192d:	inc    esi
  41192e:	(bad)  
  41192f:	hlt    
  411930:	shl    al,cl
  411932:	cld    
  411933:	or     ebp,DWORD PTR [edi]
  411935:	push   es
  411936:	(bad)  
  411937:	or     esi,DWORD PTR [eax+0x5f20d124]
  41193d:	pop    ss
  41193e:	sub    al,0xd8
  411940:	pop    ebp
  411941:	in     eax,dx
  411942:	pop    es
  411943:	outs   dx,DWORD PTR ds:[esi]
  411944:	cdq    
  411945:	xchg   ebp,eax
  411946:	mov    cl,0xff
  411948:	rcr    BYTE PTR [edx],1
  41194a:	push   ds
  41194b:	jo     0x41192f
  41194d:	sub    al,0x2a
  41194f:	scas   al,BYTE PTR es:[edi]
  411950:	push   eax
  411951:	jmp    0x26ef:0xb8aa2849
  411958:	in     eax,0x30
  41195a:	sub    DWORD PTR ds:0xddeb8b7e,ebx
  411960:	or     DWORD PTR [ebp+0x1d],eax
  411963:	outs   dx,BYTE PTR ds:[esi]
  411964:	lea    eax,[edi]
  411966:	cmp    ecx,ecx
  411968:	lock sbb BYTE PTR cs:[ecx-0x4a00c4fc],bh
  411970:	mov    ebp,0xca23be1a
  411975:	inc    DWORD PTR [esi+ebx*8+0x5a]
  411979:	mov    ebx,0xde6bc956
  41197e:	or     al,BYTE PTR [esi+0x7e2b8c48]
  411984:	in     eax,0xee
  411986:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411987:	adc    BYTE PTR [edx],ch
  411989:	sub    ebp,eax
  41198b:	aaa    
  41198c:	lods   eax,DWORD PTR ds:[esi]
  41198d:	daa    
  41198e:	or     BYTE PTR [eax],dh
  411990:	mov    esp,edx
  411992:	jl     0x4119dc
  411994:	jbe    0x4119e9
  411996:	fisubr DWORD PTR [ebx+esi*4+0xf371eab]
  41199d:	fcomp  st(6)
  41199f:	lea    ebx,[ebx-0x2b]
  4119a2:	(bad)  
  4119a3:	mov    eax,ds:0xa181d1e1
  4119a8:	jbe    0x4119f4
  4119aa:	test   al,0x6b
  4119ac:	add    ebx,DWORD PTR [edi]
  4119ae:	jg     0x4119d6
  4119b0:	dec    ebx
  4119b1:	mov    ebp,0xb8f3ca05
  4119b6:	mov    BYTE PTR [ebx+0x3e],dl
  4119b9:	imul   BYTE PTR [edi-0x80]
  4119bc:	adc    BYTE PTR [edx-0x221f28e2],bl
  4119c2:	mov    esi,0xf6bb3be0
  4119c7:	(bad)  
  4119c8:	mov    ah,bh
  4119ca:	mov    dl,0xb
  4119cc:	mov    al,0xe5
  4119ce:	inc    eax
  4119cf:	and    ch,BYTE PTR cs:[edi]
  4119d2:	cmp    DWORD PTR [ecx+ecx*2],ebx
  4119d5:	popa   
  4119d6:	push   edi
  4119d7:	cwde   
  4119d8:	inc    ebp
  4119d9:	mov    esi,0x61e9abe3
  4119de:	mov    bl,0xbb
  4119e0:	push   ds
  4119e1:	pop    ebp
  4119e2:	push   edi
  4119e3:	pusha  
  4119e4:	and    ch,BYTE PTR [ebp-0x3b924548]
  4119ea:	cmp    al,0x21
  4119ec:	sub    al,0xfe
  4119ee:	jns    0x411a1d
  4119f0:	fsubr  QWORD PTR [esi-0x75]
  4119f3:	lods   eax,DWORD PTR ds:[esi]
  4119f4:	scas   al,BYTE PTR es:[edi]
  4119f5:	pop    edx
  4119f6:	xor    ch,BYTE PTR [edi-0x18de2635]
  4119fc:	mov    edi,0x9364470
  411a01:	imul   ecx,eax,0x54
  411a04:	jmp    0x411a32
  411a06:	enter  0x3fbb,0x5
  411a0a:	scas   eax,DWORD PTR es:[edi]
  411a0b:	or     bh,BYTE PTR [esi]
  411a0d:	dec    ecx
  411a0e:	add    BYTE PTR [edx],dh
  411a10:	jb     0x411a5f
  411a12:	jb     0x411a83
  411a14:	add    eax,0xbfd0c92e
  411a19:	push   es
  411a1a:	cmp    DWORD PTR [ebx+0x774efa58],0xffffffc5
  411a21:	(bad)  
  411a22:	or     al,0xf2
  411a24:	outs   dx,DWORD PTR ds:[esi]
  411a25:	icebp  
  411a26:	add    al,bl
  411a28:	icebp  
  411a29:	cmc    
  411a2a:	sub    bl,BYTE PTR [eax+0x52fe7210]
  411a30:	pop    ecx
  411a31:	nop
  411a32:	mov    ebp,0x986ee253
  411a37:	inc    eax
  411a38:	out    0x2a,al
  411a3a:	ret    
  411a3b:	loopne 0x411a58
  411a3d:	xchg   DWORD PTR [edi],esi
  411a3f:	xor    dl,bl
  411a41:	ins    BYTE PTR es:[edi],dx
  411a42:	hlt    
  411a43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a44:	pop    eax
  411a45:	inc    edi
  411a46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a47:	and    edx,ecx
  411a49:	xchg   ebp,eax
  411a4a:	jge    0x411a5a
  411a4c:	mov    al,ds:0x705847c2
  411a51:	fcom   QWORD PTR [edi-0x4f]
  411a54:	bound  edi,QWORD PTR fs:[eax]
  411a57:	mov    dl,0x54
  411a59:	pusha  
  411a5a:	add    eax,0x8382c65f
  411a5f:	adc    ecx,edx
  411a61:	loope  0x411a44
  411a63:	mov    al,0x27
  411a65:	test   BYTE PTR [eax],ah
  411a67:	ds sub al,0x42
  411a6a:	rcr    BYTE PTR [ecx],1
  411a6c:	push   ebp
  411a6d:	cmp    al,0x2f
  411a6f:	xchg   ebp,eax
  411a70:	(bad)  
  411a71:	push   ecx
  411a72:	test   esi,0x9d3be532
  411a78:	fbld   TBYTE PTR [ebx-0x57]
  411a7b:	iret   
  411a7c:	jae    0x411ae7
  411a7e:	push   ebx
  411a7f:	mov    esp,DWORD PTR [ecx]
  411a81:	fld    TBYTE PTR [esi]
  411a83:	lods   al,BYTE PTR ds:[esi]
  411a84:	dec    ecx
  411a85:	fsubr  DWORD PTR [ebp+0x4e]
  411a88:	fcmovb st,st(2)
  411a8a:	jbe    0x411a7f
  411a8c:	mov    ds:0xc8e79932,al
  411a91:	fidiv  DWORD PTR [ecx]
  411a93:	shl    cl,0xab
  411a96:	lea    esi,[ebp+0x20]
  411a99:	not    BYTE PTR [ecx]
  411a9b:	fadd   QWORD PTR [ecx-0x29610e48]
  411aa1:	int3   
  411aa2:	fdivr  QWORD PTR [eax+0x4c42cb9e]
  411aa8:	lahf   
  411aa9:	lea    esi,[edx-0x36]
  411aac:	loope  0x411a5d
  411aae:	adc    bh,BYTE PTR [edx+0xe]
  411ab1:	sbb    eax,0x8646041e
  411ab6:	adc    bl,BYTE PTR [ebp+0x2bc57bd0]
  411abc:	or     edi,ebp
  411abe:	out    0xd9,eax
  411ac0:	fld    st(1)
  411ac2:	inc    esi
  411ac3:	js     0x411b3e
  411ac5:	pop    esp
  411ac6:	mov    ebp,edx
  411ac8:	cli    
  411ac9:	xor    dl,dh
  411acb:	loopne 0x411ab8
  411acd:	lea    esp,ds:0x225fa33a
  411ad3:	push   cs
  411ad4:	pop    ecx
  411ad5:	xchg   DWORD PTR [ebx-0x25],eax
  411ad8:	outs   dx,BYTE PTR ds:[esi]
  411ad9:	mov    DWORD PTR [ecx-0x76],ebp
  411adc:	loope  0x411a71
  411ade:	std    
  411adf:	dec    eax
  411ae0:	mov    dh,0x2f
  411ae2:	inc    ebx
  411ae3:	push   esi
  411ae4:	leave  
  411ae5:	add    esp,edi
  411ae7:	imul   BYTE PTR [ecx-0x3f3eaa4a]
  411aed:	xchg   DWORD PTR [esi],ebx
  411aef:	nop
  411af0:	xchg   edi,eax
  411af1:	aas    
  411af2:	dec    edx
  411af3:	sbb    ebp,DWORD PTR [eax]
  411af5:	adc    cl,BYTE PTR ds:[eax+ebx*1+0x526da447]
  411afd:	cs das 
  411aff:	cmp    eax,ebx
  411b01:	push   edi
  411b02:	mov    eax,0x658710e3
  411b07:	jb     0x411ada
  411b09:	hlt    
  411b0a:	inc    edx
  411b0b:	mov    edx,fs
  411b0d:	cwde   
  411b0e:	push   ss
  411b0f:	stos   DWORD PTR es:[edi],eax
  411b10:	add    BYTE PTR ds:0x2ca359b9,0x67
  411b17:	push   es
  411b18:	adc    DWORD PTR [esi],esp
  411b1a:	sbb    eax,0xb33abe4d
  411b1f:	xchg   DWORD PTR [ebx],edx
  411b21:	stos   BYTE PTR es:[edi],al
  411b22:	add    DWORD PTR [ebp+esi*2+0x685ca09c],edx
  411b29:	fwait
  411b2a:	jbe    0x411b2f
  411b2c:	inc    esi
  411b2d:	xor    ebx,ebx
  411b2f:	fsub   QWORD PTR [edx-0x1f]
  411b32:	les    edi,FWORD PTR [edx+0x2694b934]
  411b38:	add    BYTE PTR [esi+ebp*4+0xc],bh
  411b3c:	(bad)  
  411b3d:	std    
  411b3e:	faddp  st(7),st
  411b40:	cli    
  411b41:	retf   
  411b42:	inc    esi
  411b43:	jle    0x411ad0
  411b45:	retf   
  411b46:	test   al,0xd2
  411b48:	or     al,0x7f
  411b4a:	stc    
  411b4b:	xchg   edx,eax
  411b4c:	aad    0x47
  411b4e:	mov    ?,WORD PTR [edx+0x69]
  411b51:	lahf   
  411b52:	xchg   BYTE PTR [eax+0x2f2d6c1],bh
  411b58:	xchg   ebx,eax
  411b59:	or     eax,0xfc484965
  411b5e:	aaa    
  411b5f:	xor    edx,DWORD PTR [ebp+0x50]
  411b62:	pop    es
  411b63:	jno    0x411b15
  411b65:	adc    ah,BYTE PTR [eax]
  411b67:	je     0x411b62
  411b69:	shl    dh,cl
  411b6b:	call   0xf4156b21
  411b70:	mov    BYTE PTR [ebx+0x54b0db4e],cl
  411b76:	in     eax,0xbd
  411b78:	mov    ah,0x59
  411b7a:	mov    esp,0x4742813c
  411b7f:	xchg   BYTE PTR [esi-0x3870dd84],ah
  411b85:	xchg   DWORD PTR [ebx+esi*2-0x51],ecx
  411b89:	mov    ah,0x2
  411b8b:	push   edi
  411b8c:	or     ah,ch
  411b8e:	outs   dx,BYTE PTR ds:[esi]
  411b8f:	sbb    eax,0x7fd4e807
  411b94:	bound  edi,QWORD PTR [ebx+0x1a]
  411b97:	adc    DWORD PTR [ebx],edi
  411b99:	in     eax,0x75
  411b9b:	cmp    eax,0x6c495669
  411ba0:	call   0xa9b808c2
  411ba5:	(bad)  
  411ba6:	mov    edx,DWORD PTR [esi-0x19]
  411ba9:	aas    
  411baa:	call   0x7df309fb
  411baf:	dec    esp
  411bb0:	imul   edx,DWORD PTR [eax+0x28de54a8],0xffffffe2
  411bb7:	sub    eax,edi
  411bb9:	dec    ebp
  411bba:	ja     0x411ba2
  411bbc:	jp     0x411bff
  411bbe:	cmc    
  411bbf:	cmp    bh,BYTE PTR [ebx+0x65723f26]
  411bc5:	js     0x411c12
  411bc7:	scas   al,BYTE PTR es:[edi]
  411bc8:	cdq    
  411bc9:	mov    cl,0x7c
  411bcb:	and    al,BYTE PTR [ecx+0x5152bc6d]
  411bd1:	sub    eax,0xc69a42e
  411bd6:	push   esi
  411bd7:	xor    eax,DWORD PTR [eax-0x5bb38763]
  411bdd:	icebp  
  411bde:	clc    
  411bdf:	push   cs
  411be0:	imul   esp,ebx,0x1f
  411be3:	ds ds cmc 
  411be6:	mov    edx,0xf6f29f18
  411beb:	pop    ebx
  411bec:	aam    0x83
  411bee:	call   0x9b40:0x7dc54908
  411bf5:	shr    bl,1
  411bf7:	and    bl,BYTE PTR [eax+0x4319ddae]
  411bfd:	pop    es
  411bfe:	dec    ecx
  411bff:	or     BYTE PTR [edi+0x780459c4],al
  411c05:	dec    edx
  411c06:	dec    ebp
  411c07:	xchg   ebp,eax
  411c08:	cmp    eax,0xadff797b
  411c0d:	sub    BYTE PTR [esi],ch
  411c0f:	aaa    
  411c10:	push   ebx
  411c11:	stc    
  411c12:	and    dl,dl
  411c14:	jne    0x411b96
  411c16:	repnz mov ch,0x35
  411c19:	popf   
  411c1a:	(bad)  
  411c1b:	popf   
  411c1c:	jbe    0x411c5c
  411c1e:	leave  
  411c1f:	and    DWORD PTR [edi+0x324f9ec8],ecx
  411c25:	mov    ebp,0xbdc2b383
  411c2a:	scas   eax,DWORD PTR es:[edi]
  411c2b:	fldenv [eax+edi*1-0x2cdb917a]
  411c32:	sub    esi,DWORD PTR [ebx-0x44ddaa8a]
  411c38:	add    BYTE PTR [edi-0x13],ah
  411c3b:	jb     0x411c8d
  411c3d:	cli    
  411c3e:	adc    ecx,eax
  411c40:	inc    ecx
  411c41:	inc    ebx
  411c42:	jns    0x411c69
  411c44:	mov    ds:0x154d9357,al
  411c49:	scas   eax,DWORD PTR es:[edi]
  411c4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c4b:	pop    ecx
  411c4c:	or     eax,0xd94f333b
  411c51:	inc    edi
  411c52:	pushf  
  411c53:	shl    cl,cl
  411c55:	mov    ch,0x36
  411c57:	inc    ebx
  411c58:	in     eax,dx
  411c59:	scas   al,BYTE PTR es:[edi]
  411c5a:	inc    esp
  411c5b:	jmp    0xdb756653
  411c60:	iret   
  411c61:	es in  eax,dx
  411c63:	pop    edi
  411c64:	or     BYTE PTR [esi],dh
  411c66:	push   ebp
  411c67:	or     DWORD PTR [eax-0x4c2f562d],edi
  411c6d:	(bad)  
  411c6e:	dec    ecx
  411c6f:	retf   
  411c70:	ja     0x411c80
  411c72:	jecxz  0x411c46
  411c74:	mov    WORD PTR [ecx+0x4a],gs
  411c77:	mov    dl,0xa7
  411c79:	jno    0x411c10
  411c7b:	cld    
  411c7c:	mov    ds:0x76e509b7,eax
  411c81:	push   0xffffffe4
  411c83:	fimul  DWORD PTR [ebx]
  411c85:	jo     0x411c68
  411c87:	xchg   DWORD PTR [edx+0x73],ecx
  411c8a:	loope  0x411cd4
  411c8c:	sbb    BYTE PTR [edx+0x2],dl
  411c8f:	add    bh,BYTE PTR [ecx]
  411c91:	add    eax,0x590af441
  411c96:	lock mov cl,0x8f
  411c99:	mov    esi,0x2fbca75
  411c9e:	and    al,0xff
  411ca0:	pop    esp
  411ca1:	pop    eax
  411ca2:	and    edi,DWORD PTR [ebx]
  411ca4:	jbe    0x411c3e
  411ca6:	xchg   edi,eax
  411ca7:	sub    eax,0xcf42133
  411cac:	je     0x411c71
  411cae:	pop    ebp
  411caf:	mov    ebx,0x7506cfd0
  411cb4:	mov    edx,0x59bcefc6
  411cb9:	fimul  DWORD PTR [eax]
  411cbb:	pop    edi
  411cbc:	ja     0x411c62
  411cbe:	mul    DWORD PTR [ebx+0x2e]
  411cc1:	arpl   WORD PTR [ecx],cx
  411cc3:	xchg   edi,eax
  411cc4:	add    al,BYTE PTR [edx-0x108eaa5b]
  411cca:	ror    BYTE PTR [ecx-0x42e52ad4],0xfb
  411cd1:	mov    cl,al
  411cd3:	adc    al,0xc5
  411cd5:	mov    ebp,0x71a10f80
  411cda:	pop    edx
  411cdb:	sub    DWORD PTR [edx+0x1d],0xffffffa2
  411cdf:	add    ebx,edx
  411ce1:	or     cl,BYTE PTR [edx-0x58cc8957]
  411ce7:	fsubp  st(6),st
  411ce9:	mov    edx,esp
  411ceb:	in     eax,0x91
  411ced:	test   al,0x6f
  411cef:	or     BYTE PTR [ebx+0x2361c9db],cl
  411cf5:	js     0x411d3a
  411cf7:	dec    esi
  411cf8:	mov    ah,0x3
  411cfa:	dec    esp
  411cfb:	xor    BYTE PTR [ecx],ch
  411cfd:	mov    edx,0xdf1dafaf
  411d02:	pop    ebp
  411d03:	push   ss
  411d04:	inc    edi
  411d05:	adc    al,0x9e
  411d07:	mov    dl,0x7a
  411d09:	(bad)  
  411d0b:	sbb    bl,BYTE PTR [ecx-0x7]
  411d0e:	mov    ebx,0x6a2632a6
  411d13:	pop    edx
  411d14:	sbb    DWORD PTR [ebp+ebp*4+0x7bce946e],0x852bd6ce
  411d1f:	sar    DWORD PTR [ecx],0x21
  411d22:	jecxz  0x411cde
  411d24:	pop    edx
  411d25:	lds    edi,FWORD PTR [esi+eax*1]
  411d28:	cwde   
  411d29:	js     0x411d52
  411d2b:	popf   
  411d2c:	in     eax,0x69
  411d2e:	test   DWORD PTR [esi-0x20],0x72348ce6
  411d35:	bswap  esi
  411d37:	mov    esp,0x4649245f
  411d3c:	inc    edi
  411d3d:	rol    BYTE PTR ds:0x687a10f8,0xbf
  411d44:	mov    al,ds:0xb61784bb
  411d49:	(bad)  
  411d4b:	push   es
  411d4c:	dec    esi
  411d4d:	sbb    ebx,ecx
  411d4f:	leave  
  411d50:	aam    0xc8
  411d52:	sti    
  411d53:	ins    DWORD PTR es:[edi],dx
  411d54:	xchg   edi,eax
  411d55:	xchg   esi,eax
  411d56:	clc    
  411d57:	mov    ds:0xed3cd86e,al
  411d5c:	fcmovu st,st(5)
  411d5e:	sub    BYTE PTR [edx+0x5084310b],dl
  411d64:	cmp    bl,0x35
  411d67:	xchg   edx,eax
  411d68:	bound  edx,QWORD PTR [edx+eiz*8+0x3d]
  411d6c:	push   0x2143d398
  411d71:	cmp    al,0xdb
  411d73:	iret   
  411d74:	adc    al,al
  411d76:	sub    eax,0x59cf7a9a
  411d7b:	out    0xd1,eax
  411d7d:	pop    ss
  411d7e:	call   0x31010dea
  411d83:	jo     0x411ded
  411d85:	je     0x411db8
  411d87:	sti    
  411d88:	mov    al,ds:0x8219c0b5
  411d8d:	js     0x411dac
  411d8f:	push   ds
  411d90:	sahf   
  411d91:	cmc    
  411d92:	mov    ds:0x978405e8,eax
  411d97:	nop
  411d98:	add    dh,BYTE PTR [edi+ebx*8+0x2972f38a]
  411d9f:	add    dl,BYTE PTR [ecx+0x3b]
  411da2:	retf   0x820f
  411da5:	daa    
  411da6:	fdiv   st(7),st
  411da8:	(bad)  
  411da9:	jmp    0x411df3
  411dae:	mov    ecx,DWORD PTR [ebp-0xc]
  411db1:	mov    DWORD PTR [ebp+0x8],ecx
  411db4:	jmp    0x411de6
  411db9:	mov    ecx,DWORD PTR [ebp+0x8]
  411dbc:	mov    edx,DWORD PTR [ebp-0x8]
  411dbf:	xor    ecx,eax
  411dc1:	xor    edx,eax
  411dc3:	sub    ecx,edx
  411dc5:	sub    ecx,esi
  411dc7:	xor    ecx,eax
  411dc9:	mov    DWORD PTR [ebp+0x8],ecx
  411dcc:	mov    ecx,DWORD PTR [ebp+0x8]
  411dcf:	mov    edx,DWORD PTR [ebp+0x8]
  411dd2:	imul   edx,edx,0x5708f2
  411dd8:	xor    ecx,eax
  411dda:	add    ecx,esi
  411ddc:	lea    ecx,[ebp+ecx*4-0x64]
  411de0:	mov    edi,DWORD PTR [ecx]
  411de2:	add    edx,edi
  411de4:	mov    DWORD PTR [ecx],edx
  411de6:	mov    ecx,DWORD PTR [ebp+0x8]
  411de9:	xor    ecx,eax
  411deb:	add    ecx,esi
  411ded:	jne    0x411db9
  411df3:	mov    ecx,DWORD PTR [ebp-0xc]
  411df6:	mov    DWORD PTR [ebp+0x8],ecx
  411df9:	jmp    0x411e2b
  411dfe:	mov    ecx,DWORD PTR [ebp+0x8]
  411e01:	mov    edx,DWORD PTR [ebp-0x8]
  411e04:	xor    ecx,eax
  411e06:	xor    edx,eax
  411e08:	sub    ecx,edx
  411e0a:	sub    ecx,esi
  411e0c:	xor    ecx,eax
  411e0e:	mov    DWORD PTR [ebp+0x8],ecx
  411e11:	mov    ecx,DWORD PTR [ebp+0x8]
  411e14:	mov    edx,DWORD PTR [ebp+0x8]
  411e17:	imul   edx,edx,0x5708f2
  411e1d:	xor    ecx,eax
  411e1f:	add    ecx,esi
  411e21:	lea    ecx,[ebp+ecx*4-0x64]
  411e25:	mov    edi,DWORD PTR [ecx]
  411e27:	add    edx,edi
  411e29:	mov    DWORD PTR [ecx],edx
  411e2b:	mov    ecx,DWORD PTR [ebp+0x8]
  411e2e:	xor    ecx,eax
  411e30:	add    ecx,esi
  411e32:	jne    0x411dfe
  411e38:	mov    ecx,DWORD PTR [ebp-0x8]
  411e3b:	mov    edx,DWORD PTR [ebp-0x20]
  411e3e:	xor    ecx,eax
  411e40:	lea    ecx,[ecx+edx*1+0x3272dd]
  411e47:	mov    DWORD PTR [ebp-0x20],ecx
  411e4a:	inc    DWORD PTR [ebp+0xc]
  411e4d:	mov    ecx,DWORD PTR [ebp-0x1c]
  411e50:	xor    ecx,eax
  411e52:	add    ecx,esi
  411e54:	jne    0x40f7af
  411e5a:	jmp    0x411ee3
  411e5f:	mov    ecx,DWORD PTR [ebp-0xc]
  411e62:	mov    DWORD PTR [ebp+0x8],ecx
  411e65:	jmp    0x411e97
  411e6a:	mov    ecx,DWORD PTR [ebp+0x8]
  411e6d:	mov    edx,DWORD PTR [ebp-0x8]
  411e70:	xor    ecx,eax
  411e72:	xor    edx,eax
  411e74:	sub    ecx,edx
  411e76:	sub    ecx,esi
  411e78:	xor    ecx,eax
  411e7a:	mov    DWORD PTR [ebp+0x8],ecx
  411e7d:	mov    ecx,DWORD PTR [ebp+0x8]
  411e80:	mov    edx,DWORD PTR [ebp+0x8]
  411e83:	imul   edx,edx,0x5708f2
  411e89:	xor    ecx,eax
  411e8b:	add    ecx,esi
  411e8d:	lea    ecx,[ebp+ecx*4-0x64]
  411e91:	mov    edi,DWORD PTR [ecx]
  411e93:	add    edx,edi
  411e95:	mov    DWORD PTR [ecx],edx
  411e97:	mov    ecx,DWORD PTR [ebp+0x8]
  411e9a:	xor    ecx,eax
  411e9c:	add    ecx,esi
  411e9e:	jne    0x411e6a
  411ea4:	jmp    0x411eef
  411ea9:	mov    ecx,DWORD PTR [ebp+0x8]
  411eac:	mov    edx,DWORD PTR [ebp-0x8]
  411eaf:	xor    ecx,eax
  411eb1:	xor    edx,eax
  411eb3:	sub    ecx,edx
  411eb5:	sub    ecx,esi
  411eb7:	xor    ecx,eax
  411eb9:	mov    DWORD PTR [ebp+0x8],ecx
  411ebc:	mov    ecx,DWORD PTR [ebp+0x8]
  411ebf:	mov    edx,DWORD PTR [ebp+0x8]
  411ec2:	xor    ecx,eax
  411ec4:	imul   edx,edx,0x5708f2
  411eca:	add    ecx,esi
  411ecc:	lea    ecx,[ebp+ecx*4-0x64]
  411ed0:	mov    edi,DWORD PTR [ecx]
  411ed2:	add    edx,edi
  411ed4:	mov    DWORD PTR [ecx],edx
  411ed6:	mov    ecx,DWORD PTR [ebp+0x8]
  411ed9:	xor    ecx,eax
  411edb:	add    ecx,esi
  411edd:	jne    0x411ea9
  411ee3:	mov    ecx,DWORD PTR [ebp-0x8]
  411ee6:	xor    ecx,eax
  411ee8:	mov    eax,DWORD PTR [ebp+0x10]
  411eeb:	add    ecx,esi
  411eed:	mov    DWORD PTR [eax],ecx
  411eef:	pop    edi
  411ef0:	pop    esi
  411ef1:	pop    ebx
  411ef2:	leave  
  411ef3:	ret    0xc
	...
  411f02:	add    BYTE PTR [eax],al
  411f04:	pop    esi
  411f05:	mov    eax,0x4dd0
  411f0a:	add    BYTE PTR [eax],al
  411f0c:	xor    bl,BYTE PTR [edi]
  411f0e:	add    DWORD PTR [eax],eax
  411f10:	add    DWORD PTR [eax],eax
  411f12:	add    BYTE PTR [eax],al
  411f14:	add    DWORD PTR [eax],eax
  411f16:	add    BYTE PTR [eax],al
  411f18:	add    DWORD PTR [eax],eax
  411f1a:	add    BYTE PTR [eax],al
  411f1c:	sub    BYTE PTR [edi],bl
  411f1e:	add    DWORD PTR [eax],eax
  411f20:	sub    al,0x1f
  411f22:	add    DWORD PTR [eax],eax
  411f24:	xor    BYTE PTR [edi],bl
  411f26:	add    DWORD PTR [eax],eax
  411f28:	test   eax,0x3e000029
  411f2d:	pop    ds
  411f2e:	add    DWORD PTR [eax],eax
  411f30:	add    BYTE PTR [eax],al
  411f32:	push   ebx
  411f33:	jns    0x411fa2
  411f35:	bound  ebp,QWORD PTR [edi+0x6c]
  411f38:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  411f3f:	inc    ebx
  411f40:	ins    BYTE PTR es:[edi],dx
  411f41:	outs   dx,DWORD PTR ds:[esi]
  411f42:	jae    0x411fa9
  411f44:	push   edi
  411f45:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  411f4c:	popa   
  411f4d:	je     0x411fb8
  411f4f:	outs   dx,DWORD PTR ds:[esi]
  411f50:	outs   dx,BYTE PTR ds:[esi]
  411f51:	inc    ebx
  411f52:	ins    BYTE PTR es:[edi],dx
  411f53:	outs   dx,DWORD PTR ds:[esi]
  411f54:	jae    0x411fbb
  411f56:	push   edi
  411f57:	imul   eax,DWORD PTR [eax],0x40042a0
  411f5d:	mov    al,ds:0xa0080042
  411f62:	inc    edx
  411f63:	add    BYTE PTR [eax+eiz*4],cl
  411f66:	inc    edx
  411f67:	add    BYTE PTR [eax],dl
  411f69:	mov    al,ds:0xa0140042
  411f6e:	inc    edx
  411f6f:	add    BYTE PTR [eax],bl
  411f71:	mov    al,ds:0xa01c0042
  411f76:	inc    edx
  411f77:	add    BYTE PTR [eax],al
  411f79:	rol    BYTE PTR [edx+0x0],1
  411f7c:	add    al,0xd0
  411f7e:	inc    edx
  411f7f:	add    BYTE PTR [eax],cl
  411f81:	rol    BYTE PTR [edx+0x0],1
  411f84:	or     al,0xd0
  411f86:	inc    edx
  411f87:	add    BYTE PTR [eax],dl
  411f89:	rol    BYTE PTR [edx+0x0],1
  411f8c:	adc    al,0xd0
  411f8e:	inc    edx
  411f8f:	add    BYTE PTR [eax],bl
  411f91:	rol    BYTE PTR [edx+0x0],1
  411f94:	sbb    al,0xd0
  411f96:	inc    edx
	...
  411fa3:	add    BYTE PTR [esi-0x48],bl
  411fa6:	ror    BYTE PTR [ebp+0x0],1
  411fa9:	add    BYTE PTR [eax],al
  411fab:	add    BYTE PTR [edx],al
  411fad:	add    BYTE PTR [eax],al
  411faf:	add    BYTE PTR ds:0x30000000,bh
  411fb5:	and    BYTE PTR [ecx],al
  411fb7:	add    BYTE PTR [eax],dh
  411fb9:	adc    al,0x1
  411fbb:	add    BYTE PTR [eax],al
  411fbd:	nop
  411fbe:	inc    edx
  411fbf:	add    BYTE PTR [eax+edx*4],al
  411fc2:	inc    edx
  411fc3:	add    BYTE PTR [eax],cl
  411fc5:	nop
  411fc6:	inc    edx
  411fc7:	add    BYTE PTR [eax+edx*4],cl
  411fca:	inc    edx
  411fcb:	add    BYTE PTR [eax],dl
  411fcd:	nop
  411fce:	inc    edx
  411fcf:	add    BYTE PTR [eax+edx*4],dl
  411fd2:	inc    edx
  411fd3:	add    BYTE PTR [eax],bl
  411fd5:	nop
  411fd6:	inc    edx
  411fd7:	add    BYTE PTR [eax+edx*4],bl
  411fda:	inc    edx
  411fdb:	add    BYTE PTR [eax],ah
  411fdd:	nop
  411fde:	inc    edx
  411fdf:	add    BYTE PTR [eax+edx*4],ah
  411fe2:	inc    edx
  411fe3:	add    BYTE PTR [eax],ch
  411fe5:	nop
  411fe6:	inc    edx
  411fe7:	add    BYTE PTR [eax],al
  411fe9:	mov    al,0x42
  411feb:	add    BYTE PTR [eax+esi*4],al
  411fee:	inc    edx
  411fef:	add    BYTE PTR [eax],cl
  411ff1:	mov    al,0x42
  411ff3:	add    BYTE PTR [eax+esi*4],cl
  411ff6:	inc    edx
  411ff7:	add    BYTE PTR [eax],dl
  411ff9:	mov    al,0x42
  411ffb:	add    BYTE PTR [eax+esi*4],dl
  411ffe:	inc    edx
  411fff:	add    BYTE PTR [eax],bl
  412001:	mov    al,0x42
  412003:	add    BYTE PTR [eax+esi*4],bl
  412006:	inc    edx
  412007:	add    BYTE PTR [eax],al
  412009:	rol    BYTE PTR [edx+0x0],0x4
  41200d:	rol    BYTE PTR [edx+0x0],0x8
  412011:	rol    BYTE PTR [edx+0x0],0xc
  412015:	rol    BYTE PTR [edx+0x0],0x10
  412019:	rol    BYTE PTR [edx+0x0],0x14
  41201d:	rol    BYTE PTR [edx+0x0],0x18
  412021:	rol    BYTE PTR [edx+0x0],0x1c
  412025:	rol    BYTE PTR [edx+0x0],0x0
  412029:	add    BYTE PTR [eax],al
  41202b:	add    BYTE PTR [eax],al
  41202d:	add    BYTE PTR [eax],al
  41202f:	add    BYTE PTR [edx+0x53],dl
  412032:	inc    esp
  412033:	push   ebx
  412034:	pop    ss
  412035:	push   es
  412036:	inc    eax
  412037:	jbe    0x412041
  412039:	in     eax,0x4e
  41203b:	inc    eax
  41203c:	cwde   
  41203d:	rcr    BYTE PTR [ebp-0x8244083],0x7c
  412044:	add    DWORD PTR [eax],eax
  412046:	add    BYTE PTR [eax],al
  412048:	inc    ebx
  412049:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  41204d:	jb     0x4120c1
  41204f:	outs   dx,BYTE PTR gs:[esi]
  412051:	je     0x412097
  412053:	popa   
  412054:	je     0x4120b7
  412056:	pop    esp
  412057:	dec    ebp
  412058:	outs   dx,DWORD PTR ds:[esi]
  412059:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  412061:	ins    BYTE PTR es:[edi],dx
  412062:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  412069:	dec    esi
  41206a:	gs ja  0x41206d
  41206d:	mov    edx,DWORD PTR [ebp-0x14]
  412070:	sub    esp,0xe4
  412076:	push   ebx
  412077:	mov    eax,ebx
  412079:	xchg   ecx,eax
  41207a:	mov    eax,DWORD PTR [ebp+0x8]
  41207d:	cmp    eax,0xf89c85b5
  412082:	jne    0x412416
  412088:	mov    eax,DWORD PTR [ebp+0xc]
  41208b:	cmp    eax,0xf89c85b2
  412090:	jne    0x412416
  412096:	mov    eax,DWORD PTR [ebp+0x24]
  412099:	mov    DWORD PTR [ebp-0x4],eax
  41209c:	mov    BYTE PTR [ebp-0x18],0x3
  4120a0:	mov    BYTE PTR [ebp-0x17],0x1e
  4120a4:	mov    BYTE PTR [ebp-0x16],0x5
  4120a8:	mov    BYTE PTR [ebp-0x15],0x4f
  4120ac:	mov    BYTE PTR [ebp-0x14],0x4c
  4120b0:	mov    BYTE PTR [ebp-0x13],0x7a
  4120b4:	mov    BYTE PTR [ebp-0x20],0xf1
  4120b8:	mov    BYTE PTR [ebp-0x1f],0xf
  4120bc:	mov    BYTE PTR [ebp-0x1e],0x1
  4120c0:	mov    BYTE PTR [ebp-0x1d],0xc
  4120c4:	mov    BYTE PTR [ebp-0x1c],0x4f
  4120c8:	mov    BYTE PTR [ebp-0x1b],0x4c
  4120cc:	mov    BYTE PTR [ebp-0x1a],0x7a
  4120d0:	mov    BYTE PTR [ebp-0x28],0xf
  4120d4:	mov    BYTE PTR [ebp-0x27],0x2
  4120d8:	push   esi
  4120d9:	mov    BYTE PTR [ebp-0x26],0x6
  4120dd:	mov    BYTE PTR [ebp-0x25],0xf3
  4120e1:	push   edi
  4120e2:	mov    BYTE PTR [ebp-0x24],0x1d
  4120e6:	mov    BYTE PTR [ebp-0x23],0xa
  4120ea:	push   0x71
  4120ec:	mov    BYTE PTR [ebp-0x22],0x5
  4120f0:	xor    edi,edi
  4120f2:	mov    BYTE PTR [ebp-0x21],0x7a
  4120f6:	xor    esi,esi
  4120f8:	pop    edx
  4120f9:	mov    eax,0xf5
  4120fe:	lea    ecx,[ebp+esi*1-0x18]
  412102:	movzx  ebx,BYTE PTR [ecx]
  412105:	xor    ebx,edx
  412107:	add    ebx,eax
  412109:	inc    esi
  41210a:	mov    BYTE PTR [ecx],bl
  41210c:	cmp    esi,0x6
  41210f:	jb     0x4120fe
  412111:	xor    esi,esi
  412113:	lea    ecx,[ebp+esi*1-0x20]
  412117:	movzx  ebx,BYTE PTR [ecx]
  41211a:	xor    ebx,edx
  41211c:	add    ebx,eax
  41211e:	inc    esi
  41211f:	mov    BYTE PTR [ecx],bl
  412121:	cmp    esi,0x7
  412124:	jb     0x412113
  412126:	xor    esi,esi
  412128:	lea    ecx,[ebp+esi*1-0x28]
  41212c:	movzx  ebx,BYTE PTR [ecx]
  41212f:	xor    ebx,edx
  412131:	add    ebx,eax
  412133:	push   0x8
  412135:	mov    BYTE PTR [ecx],bl
  412137:	inc    esi
  412138:	pop    ecx
  412139:	cmp    esi,ecx
  41213b:	jb     0x412128
  41213d:	lea    eax,[ebp-0x2c]
  412140:	mov    DWORD PTR [ebp-0x8],eax
  412143:	mov    esi,DWORD PTR [ebp-0x8]
  412146:	mov    eax,0x7113fcef
  41214b:	mov    DWORD PTR [esi],eax
  41214d:	mov    esi,DWORD PTR [ebp-0x2c]
  412150:	cmp    esi,eax
  412152:	jne    0x412162
  412154:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41215b:	mov    DWORD PTR [ebp-0x8],0xf89c85e0
  412162:	mov    eax,DWORD PTR [ebp-0x4]
  412165:	mov    eax,DWORD PTR [eax+0x18c]
  41216b:	cmp    DWORD PTR [eax],edi
  41216d:	jne    0x4123bf
  412173:	mov    eax,DWORD PTR [ebp-0x4]
  412176:	mov    eax,DWORD PTR [eax+0x17c]
  41217c:	mov    DWORD PTR [eax],edi
  41217e:	mov    eax,DWORD PTR [ebp-0x4]
  412181:	mov    eax,DWORD PTR [eax+0x180]
  412187:	mov    DWORD PTR [eax],edi
  412189:	mov    edi,0x4e3d
  41218e:	mov    eax,0x4f8e
  412193:	mov    WORD PTR [ebp-0x78],ax
  412197:	mov    eax,edi
  412199:	mov    WORD PTR [ebp-0x76],ax
  41219d:	add    eax,0x41
  4121a0:	mov    WORD PTR [ebp-0x74],ax
  4121a4:	lea    eax,[edi+0x1]
  4121a7:	mov    WORD PTR [ebp-0x72],ax
  4121ab:	mov    eax,0x4fad
  4121b0:	mov    WORD PTR [ebp-0x70],ax
  4121b4:	lea    eax,[edi-0xc]
  4121b7:	mov    WORD PTR [ebp-0x6e],ax
  4121bb:	add    eax,0x4b
  4121be:	mov    WORD PTR [ebp-0x6c],ax
  4121c2:	lea    eax,[edi-0xa]
  4121c5:	mov    WORD PTR [ebp-0x6a],ax
  4121c9:	mov    eax,edi
  4121cb:	mov    WORD PTR [ebp-0x68],ax
  4121cf:	add    eax,0xfffffff5
  4121d2:	mov    WORD PTR [ebp-0x66],ax
  4121d6:	mov    eax,0x99fe
  4121db:	mov    WORD PTR [ebp-0x64],ax
  4121df:	mov    eax,0x8281
  4121e4:	mov    WORD PTR [ebp-0x62],ax
  4121e8:	mov    eax,0xd78c
  4121ed:	mov    WORD PTR [ebp-0x60],ax
  4121f1:	add    eax,0x14
  4121f4:	mov    WORD PTR [ebp-0x5e],ax
  4121f8:	mov    eax,0x27a3
  4121fd:	mov    WORD PTR [ebp-0x5c],ax
  412201:	mov    eax,0x47a3
  412206:	mov    WORD PTR [ebp-0x5a],ax
  41220a:	lea    eax,[edi-0xd]
  41220d:	mov    WORD PTR [ebp-0x58],ax
  412211:	mov    DWORD PTR [ebp-0x10],0xf306020f
  412218:	mov    DWORD PTR [ebp-0xc],0x7a050a1d
  41221f:	lea    eax,[ebp-0x10]
  412222:	mov    bl,BYTE PTR [eax]
  412224:	xor    bl,dl
  412226:	sub    bl,0xb
  412229:	mov    BYTE PTR [eax],bl
  41222b:	inc    eax
  41222c:	dec    ecx
  41222d:	jne    0x412222
  41222f:	lea    eax,[ebp-0x10]
  412232:	mov    DWORD PTR [ebp-0xb8],eax
  412238:	lea    eax,[ebp-0xbc]
  41223e:	push   eax
  41223f:	mov    eax,DWORD PTR [ebp+0xc]
  412242:	mov    ebx,0x7510896
  412247:	xor    eax,ebx
  412249:	mov    esi,0x3272dd
  41224e:	add    eax,esi
  412250:	push   eax
  412251:	mov    eax,DWORD PTR [ebp-0x4]
  412254:	add    eax,0x66
  412257:	push   eax
  412258:	mov    eax,DWORD PTR [ebp-0x4]
  41225b:	mov    eax,DWORD PTR [eax+0x198]
  412261:	mov    DWORD PTR [ebp-0xbc],0x1
  41226b:	push   DWORD PTR [eax]
  41226d:	mov    eax,DWORD PTR [ebp+0x10]
  412270:	call   eax
  412272:	mov    ecx,DWORD PTR [ebp+0x8]
  412275:	xor    ecx,ebx
  412277:	add    ecx,esi
  412279:	mov    DWORD PTR [ebp-0x8],eax
  41227c:	cmp    eax,ecx
  41227e:	jne    0x412299
  412280:	mov    eax,ds:0x33730bec
  412285:	or     eax,0x22150bef
  41228a:	mov    ds:0x33730bec,eax
  41228f:	add    eax,0x3372e90f
  412294:	mov    ds:0x33730bec,eax
  412299:	mov    ecx,0x4f85
  41229e:	mov    eax,ecx
  4122a0:	mov    WORD PTR [ebp-0x40],ax
  4122a4:	add    eax,0x3
  4122a7:	mov    edx,eax
  4122a9:	mov    WORD PTR [ebp-0x3e],dx
  4122ad:	lea    edx,[ecx+0xb]
  4122b0:	mov    WORD PTR [ebp-0x3c],dx
  4122b4:	add    edx,0x18
  4122b7:	mov    WORD PTR [ebp-0x3a],dx
  4122bb:	lea    edx,[ecx+0x25]
  4122be:	mov    WORD PTR [ebp-0x38],dx
  4122c2:	add    edx,0x5
  4122c5:	mov    WORD PTR [ebp-0x36],dx
  4122c9:	lea    edx,[ecx+0x1f]
  4122cc:	mov    WORD PTR [ebp-0x34],dx
  4122d0:	mov    WORD PTR [ebp-0x32],cx
  4122d4:	mov    ecx,edi
  4122d6:	mov    WORD PTR [ebp-0x30],cx
  4122da:	lea    ecx,[edx+0x1]
  4122dd:	mov    edx,ecx
  4122df:	mov    WORD PTR [ebp-0x54],dx
  4122e3:	mov    edx,eax
  4122e5:	mov    WORD PTR [ebp-0x52],dx
  4122e9:	mov    edx,0x4e70
  4122ee:	mov    WORD PTR [ebp-0x50],dx
  4122f2:	mov    WORD PTR [ebp-0x4e],ax
  4122f6:	lea    eax,[ecx-0x1b]
  4122f9:	mov    WORD PTR [ebp-0x4c],ax
  4122fd:	add    eax,0x5
  412300:	mov    WORD PTR [ebp-0x4a],ax
  412304:	lea    eax,[ecx-0x21]
  412307:	mov    WORD PTR [ebp-0x48],ax
  41230b:	mov    WORD PTR [ebp-0x46],cx
  41230f:	mov    WORD PTR [ebp-0x44],di
  412313:	mov    eax,DWORD PTR [ebp+0x8]
  412316:	movzx  ecx,WORD PTR [ebp-0x54]
  41231a:	xor    eax,ebx
  41231c:	add    eax,esi
  41231e:	xor    eax,ecx
  412320:	mov    WORD PTR [ebp-0x54],ax
  412324:	mov    eax,DWORD PTR [ebp+0x8]
  412327:	movzx  ecx,WORD PTR [ebp-0x40]
  41232b:	xor    eax,ebx
  41232d:	add    eax,esi
  41232f:	xor    eax,ecx
  412331:	mov    WORD PTR [ebp-0x40],ax
  412335:	xor    eax,eax
  412337:	mov    WORD PTR [ebp-0xd0],ax
  41233e:	mov    WORD PTR [ebp-0xe4],ax
  412345:	mov    edi,DWORD PTR [ebp+0x24]
  412348:	lea    eax,[ebp-0xd0]
  41234e:	lea    edx,[ebp-0x54]
  412351:	mov    DWORD PTR [ebp-0xbc],0x2
  41235b:	mov    DWORD PTR [ebp-0xb8],eax
  412361:	call   0x414b33
  412366:	mov    DWORD PTR [ebp-0xb4],eax
  41236c:	lea    eax,[ebp-0xbc]
  412372:	push   eax
  412373:	mov    eax,DWORD PTR [ebp+0xc]
  412376:	xor    eax,ebx
  412378:	add    eax,esi
  41237a:	push   eax
  41237b:	lea    eax,[ebp-0x78]
  41237e:	push   eax
  41237f:	push   DWORD PTR [ebp-0x8]
  412382:	mov    eax,DWORD PTR [ebp+0x10]
  412385:	call   eax
  412387:	mov    edi,DWORD PTR [ebp+0x24]
  41238a:	lea    eax,[ebp-0xe4]
  412390:	lea    edx,[ebp-0x40]
  412393:	mov    DWORD PTR [ebp-0xb8],eax
  412399:	call   0x414b33
  41239e:	mov    DWORD PTR [ebp-0xb4],eax
  4123a4:	lea    eax,[ebp-0xbc]
  4123aa:	push   eax
  4123ab:	mov    eax,DWORD PTR [ebp+0xc]
  4123ae:	xor    eax,ebx
  4123b0:	add    eax,esi
  4123b2:	push   eax
  4123b3:	lea    eax,[ebp-0x78]
  4123b6:	push   eax
  4123b7:	push   DWORD PTR [ebp-0x8]
  4123ba:	mov    eax,DWORD PTR [ebp+0x10]
  4123bd:	call   eax
  4123bf:	mov    eax,DWORD PTR [ebp+0x14]
  4123c2:	push   DWORD PTR [ebp-0x4]
  4123c5:	push   DWORD PTR [ebp+0x20]
  4123c8:	push   DWORD PTR [ebp+0x1c]
  4123cb:	push   DWORD PTR [ebp+0x18]
  4123ce:	push   DWORD PTR [ebp+0x10]
  4123d1:	push   DWORD PTR [ebp+0x8]
  4123d4:	push   DWORD PTR [ebp+0xc]
  4123d7:	call   0x4133d7
  4123dc:	add    DWORD PTR [ebp-0x4],eax
  4123df:	mov    eax,DWORD PTR [ebp-0x4]
  4123e2:	mov    eax,DWORD PTR [ebp-0x4]
  4123e5:	mov    edi,DWORD PTR [eax+0x190]
  4123eb:	mov    eax,DWORD PTR [ebp-0x4]
  4123ee:	mov    eax,DWORD PTR [eax+0x18c]
  4123f4:	mov    esi,DWORD PTR [eax]
  4123f6:	lea    ecx,[ebp+0x4]
  4123f9:	mov    edx,DWORD PTR [ecx]
  4123fb:	cmp    edx,esi
  4123fd:	jb     0x412414
  4123ff:	mov    eax,DWORD PTR [edi]
  412401:	mov    edi,DWORD PTR [eax+0x3c]
  412404:	mov    edi,DWORD PTR [edi+eax*1+0x50]
  412408:	add    edi,esi
  41240a:	cmp    edx,edi
  41240c:	jae    0x412414
  41240e:	sub    eax,esi
  412410:	add    eax,edx
  412412:	mov    DWORD PTR [ecx],eax
  412414:	pop    edi
  412415:	pop    esi
  412416:	pop    ebx
  412417:	leave  
  412418:	ret    0x20
  41241b:	push   edi
  41241c:	push   esi
  41241d:	push   ebx
  41241e:	push   ebp
  41241f:	mov    ebp,esp
  412421:	mov    eax,DWORD PTR [ebp+0x24]
  412424:	add    DWORD PTR [ebp+0x28],eax
  412427:	push   eax
  412428:	cld    
  412429:	mov    esi,DWORD PTR [ebp+0x18]
  41242c:	add    DWORD PTR [ebp+0x1c],esi
  41242f:	push   esi
  412430:	mov    esi,DWORD PTR [ebp+0x14]
  412433:	lods   eax,DWORD PTR ds:[esi]
  412434:	xchg   edx,eax
  412435:	push   edx
  412436:	mov    cl,BYTE PTR [esi-0x2]
  412439:	or     eax,0xffffffff
  41243c:	shl    eax,cl
  41243e:	not    eax
  412440:	push   eax
  412441:	mov    cl,dh
  412443:	or     eax,0xffffffff
  412446:	shl    eax,cl
  412448:	not    eax
  41244a:	push   eax
  41244b:	add    cl,dl
  41244d:	mov    edi,esi
  41244f:	sub    esp,0xc
  412452:	sub    eax,eax
  412454:	inc    eax
  412455:	push   eax
  412456:	push   eax
  412457:	push   eax
  412458:	push   eax
  412459:	push   eax
  41245a:	push   edi
  41245b:	sub    esi,esi
  41245d:	push   esi
  41245e:	or     ebx,0xffffffff
  412461:	mov    eax,0x300
  412466:	shl    eax,cl
  412468:	lea    ecx,[eax+0x736]
  41246e:	mov    eax,0x4000400
  412473:	shr    ecx,1
  412475:	rep stos DWORD PTR es:[edi],eax
  412477:	push   0x5
  412479:	pop    ecx
  41247a:	call   0x412765
  41247f:	loop   0x41247a
  412481:	lea    esi,[esi]
  412483:	lea    edi,[edi]
  412485:	mov    edi,DWORD PTR [ebp-0x4]
  412488:	mov    eax,DWORD PTR [ebp-0x10]
  41248b:	sub    edi,DWORD PTR [ebp+0x24]
  41248e:	and    eax,edi
  412490:	mov    DWORD PTR [ebp-0x18],eax
  412493:	mov    al,0x0
  412495:	call   0x41277d
  41249a:	jne    0x412535
  4124a0:	mov    cl,BYTE PTR [ebp-0xc]
  4124a3:	and    edi,DWORD PTR [ebp-0x14]
  4124a6:	shl    edi,cl
  4124a8:	sub    cl,0x8
  4124ab:	neg    cl
  4124ad:	shr    esi,cl
  4124af:	pop    eax
  4124b0:	add    edi,esi
  4124b2:	pop    esi
  4124b3:	lea    edi,[edi+edi*2]
  4124b6:	shl    edi,0x8
  4124b9:	cmp    al,0x7
  4124bb:	pop    edx
  4124bc:	lea    ecx,[esi+edi*2+0xe6c]
  4124c3:	push   ecx
  4124c4:	push   esi
  4124c5:	mov    esi,0x100
  4124ca:	push   eax
  4124cb:	mov    al,0x1
  4124cd:	jb     0x412503
  4124cf:	mov    edi,DWORD PTR [ebp-0x4]
  4124d2:	sub    edi,DWORD PTR [ebp-0x24]
  4124d5:	movzx  edi,BYTE PTR [edi]
  4124d8:	mov    ebp,DWORD PTR [ebp-0x34]
  4124db:	shl    edi,1
  4124dd:	mov    ecx,esi
  4124df:	and    esi,edi
  4124e1:	add    ecx,esi
  4124e3:	lea    ebp,[ebp+ecx*2+0x0]
  4124e7:	call   0x41279c
  4124ec:	mov    ecx,eax
  4124ee:	shr    esi,0x8
  4124f1:	and    ecx,0x1
  4124f4:	cmp    esi,ecx
  4124f6:	mov    esi,0x100
  4124fb:	jne    0x41250b
  4124fd:	cmp    eax,esi
  4124ff:	jb     0x4124d8
  412501:	jmp    0x412517
  412503:	mov    ebp,DWORD PTR [ebp-0x34]
  412506:	call   0x41279c
  41250b:	inc    eax
  41250c:	inc    esi
  41250d:	sub    eax,0x1
  412510:	sub    esi,0x1
  412513:	cmp    eax,esi
  412515:	jb     0x412503
  412517:	pop    edx
  412518:	inc    edx
  412519:	cmp    edx,0x5
  41251c:	dec    edx
  41251d:	mov    ecx,edx
  41251f:	jb     0x412530
  412521:	inc    edx
  412522:	cmp    edx,0xb
  412525:	dec    edx
  412526:	mov    cl,0x4
  412528:	dec    cl
  41252a:	jb     0x412530
  41252c:	mov    cl,0x7
  41252e:	dec    cl
  412530:	sub    edx,ecx
  412532:	push   edx
  412533:	jmp    0x412584
  412535:	mov    al,0xc1
  412537:	dec    al
  412539:	call   0x41278d
  41253e:	jne    0x412554
  412540:	pop    eax
  412541:	pop    edi
  412542:	pop    edx
  412543:	pop    ecx
  412544:	pop    edx
  412545:	pop    ecx
  412546:	push   DWORD PTR [esp]
  412549:	push   ecx
  41254a:	push   edx
  41254b:	mov    edx,0x664
  412550:	mov    cl,0x0
  412552:	jmp    0x4125c7
  412554:	mov    al,0xcd
  412556:	dec    al
  412558:	call   0x41278d
  41255d:	jne    0x41258d
  41255f:	mov    al,0xf1
  412561:	dec    al
  412563:	call   0x41277d
  412568:	jne    0x4125bd
  41256a:	pop    eax
  41256b:	cmp    al,0x7
  41256d:	mov    al,0x9
  41256f:	jb     0x412573
  412571:	mov    al,0xb
  412573:	push   eax
  412574:	mov    esi,DWORD PTR [ebp-0x4]
  412577:	sub    esi,DWORD PTR [ebp-0x24]
  41257a:	cmp    esi,DWORD PTR [ebp+0x24]
  41257d:	jb     0x412754
  412583:	lods   al,BYTE PTR ds:[esi]
  412584:	mov    edi,DWORD PTR [ebp-0x4]
  412587:	stos   BYTE PTR es:[edi],al
  412588:	jmp    0x41271b
  41258d:	mov    al,0xd8
  41258f:	call   0x41278d
  412594:	mov    esi,DWORD PTR [ebp-0x28]
  412597:	je     0x4125b4
  412599:	mov    al,0xe4
  41259b:	call   0x41278d
  4125a0:	mov    esi,DWORD PTR [ebp-0x2c]
  4125a3:	je     0x4125ae
  4125a5:	mov    esi,DWORD PTR [ebp-0x30]
  4125a8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4125ab:	mov    DWORD PTR [ebp-0x30],ecx
  4125ae:	mov    ecx,DWORD PTR [ebp-0x28]
  4125b1:	mov    DWORD PTR [ebp-0x2c],ecx
  4125b4:	mov    ecx,DWORD PTR [ebp-0x24]
  4125b7:	mov    DWORD PTR [ebp-0x28],ecx
  4125ba:	mov    DWORD PTR [ebp-0x24],esi
  4125bd:	pop    eax
  4125be:	pop    edi
  4125bf:	pop    ecx
  4125c0:	mov    edx,0xa68
  4125c5:	mov    cl,0x8
  4125c7:	add    edx,edi
  4125c9:	push   edx
  4125ca:	push   edi
  4125cb:	cmp    al,0x7
  4125cd:	mov    al,cl
  4125cf:	jb     0x4125d3
  4125d1:	add    al,0x3
  4125d3:	push   eax
  4125d4:	mov    ebp,DWORD PTR [ebp-0x34]
  4125d7:	call   0x41279a
  4125dc:	jne    0x4125f2
  4125de:	mov    eax,DWORD PTR [ebp-0x18]
  4125e1:	mov    edi,DWORD PTR [ebp-0x34]
  4125e4:	shl    eax,0x3
  4125e7:	sub    ecx,ecx
  4125e9:	push   0x8
  4125eb:	pop    esi
  4125ec:	lea    edi,[edi+eax*2+0x4]
  4125f0:	jmp    0x412627
  4125f2:	mov    ebp,DWORD PTR [ebp-0x34]
  4125f5:	add    ebp,0x2
  4125f8:	call   0x41279a
  4125fd:	jne    0x412617
  4125ff:	mov    eax,DWORD PTR [ebp-0x18]
  412602:	mov    edi,DWORD PTR [ebp-0x34]
  412605:	shl    eax,0x3
  412608:	push   0x8
  41260a:	pop    ecx
  41260b:	push   0x8
  41260d:	pop    esi
  41260e:	lea    edi,[edi+eax*2+0x104]
  412615:	jmp    0x412627
  412617:	mov    edi,0x204
  41261c:	add    edi,DWORD PTR [ebp-0x34]
  41261f:	push   0x10
  412621:	pop    ecx
  412622:	mov    esi,0x100
  412627:	mov    DWORD PTR [ebp-0x1c],ecx
  41262a:	sub    eax,eax
  41262c:	inc    eax
  41262d:	mov    ebp,edi
  41262f:	call   0x41279c
  412634:	mov    ecx,eax
  412636:	sub    ecx,esi
  412638:	jb     0x41262d
  41263a:	add    DWORD PTR [ebp-0x1c],ecx
  41263d:	cmp    DWORD PTR [ebp-0x3c],0x4
  412641:	jae    0x4126f7
  412647:	add    DWORD PTR [ebp-0x3c],0x7
  41264b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41264e:	cmp    ecx,0x4
  412651:	jb     0x412656
  412653:	push   0x3
  412655:	pop    ecx
  412656:	mov    edi,DWORD PTR [ebp-0x38]
  412659:	shl    ecx,0x6
  41265c:	sub    eax,eax
  41265e:	inc    eax
  41265f:	push   0x40
  412661:	pop    esi
  412662:	lea    edi,[edi+ecx*2+0x360]
  412669:	mov    ebp,edi
  41266b:	call   0x41279c
  412670:	mov    ecx,eax
  412672:	sub    ecx,esi
  412674:	jb     0x412669
  412676:	mov    DWORD PTR [ebp-0x18],ecx
  412679:	mov    DWORD PTR [ebp-0x24],ecx
  41267c:	cmp    ecx,0x4
  41267f:	jb     0x4126f4
  412681:	mov    esi,ecx
  412683:	and    DWORD PTR [ebp-0x24],0x1
  412687:	shr    esi,1
  412689:	or     DWORD PTR [ebp-0x24],0x2
  41268d:	dec    esi
  41268e:	cmp    ecx,0xe
  412691:	jae    0x4126ac
  412693:	mov    eax,0x2af
  412698:	sub    eax,ecx
  41269a:	mov    ecx,esi
  41269c:	shl    BYTE PTR [ebp-0x24],cl
  41269f:	add    eax,DWORD PTR [ebp-0x24]
  4126a2:	shl    eax,1
  4126a4:	add    eax,DWORD PTR [ebp-0x38]
  4126a7:	mov    DWORD PTR [ebp-0x34],eax
  4126aa:	jmp    0x4126d9
  4126ac:	sub    esi,0x4
  4126af:	call   0x412759
  4126b4:	shr    ebx,1
  4126b6:	shl    DWORD PTR [ebp-0x24],1
  4126b9:	cmp    DWORD PTR [ebp-0x20],ebx
  4126bc:	jb     0x4126c4
  4126be:	inc    DWORD PTR [ebp-0x24]
  4126c1:	sub    DWORD PTR [ebp-0x20],ebx
  4126c4:	dec    esi
  4126c5:	jne    0x4126af
  4126c7:	mov    eax,0x644
  4126cc:	add    eax,DWORD PTR [ebp-0x38]
  4126cf:	mov    DWORD PTR [ebp-0x34],eax
  4126d2:	shl    DWORD PTR [ebp-0x24],0x4
  4126d6:	push   0x4
  4126d8:	pop    esi
  4126d9:	sub    edi,edi
  4126db:	inc    edi
  4126dc:	mov    eax,edi
  4126de:	mov    ebp,DWORD PTR [ebp-0x34]
  4126e1:	call   0x41279c
  4126e6:	test   al,0x1
  4126e8:	je     0x4126ed
  4126ea:	or     DWORD PTR [ebp-0x24],edi
  4126ed:	shl    edi,1
  4126ef:	dec    esi
  4126f0:	jne    0x4126de
  4126f2:	jmp    0x4126f4
  4126f4:	inc    DWORD PTR [ebp-0x24]
  4126f7:	mov    ecx,DWORD PTR [ebp-0x1c]
  4126fa:	add    ecx,0x2
  4126fd:	mov    edi,DWORD PTR [ebp-0x4]
  412700:	mov    eax,edi
  412702:	sub    eax,DWORD PTR [ebp+0x24]
  412705:	cmp    DWORD PTR [ebp-0x24],eax
  412708:	ja     0x412754
  41270a:	mov    esi,edi
  41270c:	sub    esi,DWORD PTR [ebp-0x24]
  41270f:	mov    edx,DWORD PTR [ebp+0x28]
  412712:	lods   al,BYTE PTR ds:[esi]
  412713:	stos   BYTE PTR es:[edi],al
  412714:	cmp    edi,edx
  412716:	jae    0x41271b
  412718:	dec    ecx
  412719:	jne    0x412712
  41271b:	mov    DWORD PTR [ebp-0x4],edi
  41271e:	movzx  esi,al
  412721:	cmp    edi,DWORD PTR [ebp+0x28]
  412724:	jb     0x412485
  41272a:	call   0x412759
  41272f:	sub    eax,eax
  412731:	lea    ebp,[esp+0x3c]
  412735:	mov    edx,DWORD PTR [ebp+0x20]
  412738:	mov    esi,DWORD PTR [ebp-0x8]
  41273b:	sub    esi,DWORD PTR [ebp+0x18]
  41273e:	mov    DWORD PTR [edx],esi
  412740:	mov    edx,DWORD PTR [ebp+0x2c]
  412743:	mov    edi,DWORD PTR [ebp-0x4]
  412746:	sub    edi,DWORD PTR [ebp+0x24]
  412749:	mov    DWORD PTR [edx],edi
  41274b:	leave  
  41274c:	pop    ebx
  41274d:	pop    esi
  41274e:	pop    edi
  41274f:	ret    0x1c
  412752:	pop    esi
  412753:	pop    eax
  412754:	sub    eax,eax
  412756:	inc    eax
  412757:	jmp    0x412731
  412759:	cmp    ebx,0x1000000
  41275f:	jb     0x412762
  412761:	ret    
  412762:	shl    ebx,0x8
  412765:	push   esi
  412766:	mov    esi,DWORD PTR [ebp-0x8]
  412769:	cmp    esi,DWORD PTR [ebp+0x1c]
  41276c:	jae    0x412752
  41276e:	mov    eax,DWORD PTR [ebp-0x20]
  412771:	shl    eax,0x8
  412774:	lods   al,BYTE PTR ds:[esi]
  412775:	mov    DWORD PTR [ebp-0x20],eax
  412778:	mov    DWORD PTR [ebp-0x8],esi
  41277b:	pop    esi
  41277c:	ret    
  41277d:	mov    ecx,DWORD PTR [ebp-0x3c]
  412780:	movzx  eax,al
  412783:	shl    ecx,0x4
  412786:	add    eax,DWORD PTR [ebp-0x18]
  412789:	add    eax,ecx
  41278b:	jmp    0x412793
  41278d:	movzx  eax,al
  412790:	add    eax,DWORD PTR [ebp-0x3c]
  412793:	mov    ebp,DWORD PTR [ebp-0x38]
  412796:	lea    ebp,[ebp+eax*2+0x0]
  41279a:	sub    eax,eax
  41279c:	lea    ebp,[ebp+eax*2+0x0]
  4127a0:	cmp    ebx,0x1000000
  4127a6:	jae    0x4127c4
  4127a8:	mov    ecx,DWORD PTR [esp+0x38]
  4127ac:	shl    DWORD PTR [esp+0x20],0x8
  4127b1:	cmp    ecx,DWORD PTR [esp+0x5c]
  4127b5:	jae    0x412753
  4127b7:	mov    dl,BYTE PTR [ecx]
  4127b9:	inc    DWORD PTR [esp+0x38]
  4127bd:	shl    ebx,0x8
  4127c0:	mov    BYTE PTR [esp+0x20],dl
  4127c4:	mov    ecx,ebx
  4127c6:	movzx  edx,WORD PTR [ebp+0x0]
  4127ca:	shr    ecx,0xb
  4127cd:	imul   ecx,edx
  4127d0:	cmp    DWORD PTR [esp+0x20],ecx
  4127d4:	jae    0x4127ed
  4127d6:	mov    ebx,ecx
  4127d8:	mov    ecx,0x800
  4127dd:	sub    ecx,edx
  4127df:	shr    ecx,0x5
  4127e2:	add    WORD PTR [ebp+0x0],cx
  4127e6:	add    eax,eax
  4127e8:	lea    ebp,[esp+0x40]
  4127ec:	ret    
  4127ed:	shr    edx,0x5
  4127f0:	sub    DWORD PTR [esp+0x20],ecx
  4127f4:	sub    ebx,ecx
  4127f6:	sub    WORD PTR [ebp+0x0],dx
  4127fa:	add    eax,eax
  4127fc:	add    eax,0x1
  4127ff:	lea    ebp,[esp+0x40]
  412803:	ret    
  412804:	push   ebp
  412805:	mov    ebp,esp
  412807:	sub    esp,0xec
  41280d:	push   ebx
  41280e:	push   esi
  41280f:	push   edi
  412810:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  412817:	mov    DWORD PTR [ebp-0x34],0xf89c85b2
  41281e:	mov    eax,DWORD PTR [ebp+0x8]
  412821:	mov    DWORD PTR [ebp+0x8],eax
  412824:	mov    ecx,DWORD PTR [ebp-0x8]
  412827:	mov    ebx,0x7510896
  41282c:	xor    ecx,ebx
  41282e:	mov    eax,0x3272dd
  412833:	add    ecx,eax
  412835:	mov    DWORD PTR [ebp-0x20],ecx
  412838:	mov    ecx,DWORD PTR [ebp-0x8]
  41283b:	xor    ecx,ebx
  41283d:	add    ecx,eax
  41283f:	mov    DWORD PTR [ebp-0x30],ecx
  412842:	mov    ecx,DWORD PTR [ebp-0x8]
  412845:	xor    ecx,ebx
  412847:	add    ecx,eax
  412849:	mov    DWORD PTR [ebp-0x2c],ecx
  41284c:	mov    ecx,DWORD PTR [ebp-0x8]
  41284f:	xor    ecx,ebx
  412851:	add    ecx,eax
  412853:	mov    DWORD PTR [ebp-0xa0],ecx
  412859:	mov    DWORD PTR [ebp-0x48],0xf89f05b5
  412860:	mov    DWORD PTR [ebp-0x2c],0xf89cb5b5
  412867:	mov    DWORD PTR [ebp-0x3c],0xf89c85b1
  41286e:	push   0x24
  412870:	pop    ecx
  412871:	mov    DWORD PTR [ebp-0x28],ecx
  412874:	mov    DWORD PTR [ebp-0x28],ecx
  412877:	push   0x64
  412879:	pop    ecx
  41287a:	mov    DWORD PTR [ebp-0x28],ecx
  41287d:	mov    DWORD PTR [ebp-0x28],ecx
  412880:	mov    DWORD PTR [ebp-0x28],0x4c
  412887:	mov    DWORD PTR [ebp-0x28],0x42
  41288e:	mov    ecx,DWORD PTR [ebp-0x8]
  412891:	xor    ecx,ebx
  412893:	add    ecx,eax
  412895:	mov    DWORD PTR [ebp-0x28],ecx
  412898:	mov    ecx,DWORD PTR [ebp-0x8]
  41289b:	xor    ecx,ebx
  41289d:	add    ecx,eax
  41289f:	mov    DWORD PTR [ebp-0x28],ecx
  4128a2:	mov    DWORD PTR [ebp-0x24],0x256
  4128a9:	mov    DWORD PTR [ebp-0x1c],0x34
  4128b0:	mov    DWORD PTR [ebp-0xc],0x78
  4128b7:	lea    edi,[ebp-0xcc]
  4128bd:	lea    esi,[ebp-0xec]
  4128c3:	call   0x413346
  4128c8:	dec    DWORD PTR [ebp-0xc]
  4128cb:	jne    0x4128b7
  4128cd:	dec    DWORD PTR [ebp-0x1c]
  4128d0:	jne    0x4128b0
  4128d2:	dec    DWORD PTR [ebp-0x24]
  4128d5:	jne    0x4128a9
  4128d7:	mov    DWORD PTR [ebp-0x1c],0x400c
  4128de:	mov    eax,DWORD PTR [ebp-0x8]
  4128e1:	xor    eax,ebx
  4128e3:	mov    esi,0x3272dd
  4128e8:	add    eax,esi
  4128ea:	mov    DWORD PTR [ebp-0x14],eax
  4128ed:	mov    eax,DWORD PTR [ebp-0x8]
  4128f0:	and    DWORD PTR [ebp-0x8c],0x0
  4128f7:	xor    eax,ebx
  4128f9:	add    eax,esi
  4128fb:	mov    DWORD PTR [ebp-0x24],eax
  4128fe:	mov    eax,fs:0x18
  412904:	mov    DWORD PTR [ebp-0x8c],eax
  41290a:	mov    eax,DWORD PTR [eax+0x30]
  41290d:	mov    DWORD PTR [ebp-0x90],eax
  412913:	mov    eax,DWORD PTR [eax+0xc]
  412916:	mov    DWORD PTR [ebp-0x9c],eax
  41291c:	mov    eax,DWORD PTR [ebp+0x8]
  41291f:	lea    ecx,[ebp-0x8c]
  412925:	mov    DWORD PTR [eax+0x1a0],ecx
  41292b:	mov    eax,DWORD PTR [ebp+0x8]
  41292e:	lea    ecx,[ebp-0x90]
  412934:	mov    DWORD PTR [eax+0x1a4],ecx
  41293a:	mov    eax,DWORD PTR [ebp+0x8]
  41293d:	push   DWORD PTR [ebp+0x8]
  412940:	lea    ecx,[ebp-0x9c]
  412946:	mov    DWORD PTR [eax+0x1a8],ecx
  41294c:	call   0x414b04
  412951:	mov    ecx,DWORD PTR [ebp-0x8]
  412954:	xor    ecx,ebx
  412956:	add    ecx,esi
  412958:	cmp    ecx,eax
  41295a:	je     0x412c2e
  412960:	mov    eax,DWORD PTR [ebp+0x8]
  412963:	mov    eax,DWORD PTR [eax+0x194]
  412969:	mov    ecx,DWORD PTR [eax]
  41296b:	mov    eax,DWORD PTR [ebp+0x8]
  41296e:	mov    eax,DWORD PTR [eax+0x194]
  412974:	mov    eax,DWORD PTR [eax]
  412976:	add    eax,DWORD PTR [ecx+0x3c]
  412979:	mov    ecx,DWORD PTR [ebp+0x8]
  41297c:	mov    ecx,DWORD PTR [ecx+0x1d8]
  412982:	lea    edx,[ebp-0xac]
  412988:	push   edx
  412989:	mov    edx,DWORD PTR [ebp+0x8]
  41298c:	mov    edx,DWORD PTR [edx+0x18c]
  412992:	mov    edx,DWORD PTR [edx]
  412994:	add    edx,DWORD PTR [eax+0x88]
  41299a:	push   0x4
  41299c:	push   DWORD PTR [eax+0x8c]
  4129a2:	push   edx
  4129a3:	call   DWORD PTR [ecx+0x1c]
  4129a6:	push   DWORD PTR [ebp+0x8]
  4129a9:	mov    edi,DWORD PTR [ebp+0x8]
  4129ac:	mov    eax,DWORD PTR [ebp+0x8]
  4129af:	mov    edx,DWORD PTR [eax+0x1b8]
  4129b5:	mov    DWORD PTR [ebp-0x5c],0xc0e0f06
  4129bc:	mov    DWORD PTR [ebp-0x58],0x50a091f
  4129c3:	mov    WORD PTR [ebp-0x54],0x7a3d
  4129c9:	mov    DWORD PTR [ebp-0x70],0x23f0f25
  4129d0:	mov    DWORD PTR [ebp-0x6c],0x63d0c1d
  4129d7:	mov    DWORD PTR [ebp-0x68],0x281d020a
  4129de:	mov    DWORD PTR [ebp-0x64],0xc0109f1
  4129e5:	mov    DWORD PTR [ebp-0x60],0x7a3d1f05
  4129ec:	mov    DWORD PTR [ebp-0x84],0x23f0f25
  4129f6:	mov    DWORD PTR [ebp-0x80],0x63d0c1d
  4129fd:	mov    DWORD PTR [ebp-0x7c],0x281d020a
  412a04:	mov    DWORD PTR [ebp-0x78],0xc0109f1
  412a0b:	mov    DWORD PTR [ebp-0x74],0x7a131f05
  412a12:	call   0x414b33
  412a17:	push   eax
  412a18:	mov    eax,DWORD PTR [ebp+0x8]
  412a1b:	mov    eax,DWORD PTR [eax+0x1a8]
  412a21:	push   DWORD PTR [eax]
  412a23:	call   0x4147d5
  412a28:	test   eax,eax
  412a2a:	jne    0x412a7c
  412a2c:	mov    eax,DWORD PTR [ebp+0x8]
  412a2f:	mov    eax,DWORD PTR [eax+0x1d8]
  412a35:	mov    edi,DWORD PTR [ebp+0x8]
  412a38:	add    eax,0x4
  412a3b:	mov    DWORD PTR [ebp-0x18],eax
  412a3e:	mov    eax,DWORD PTR [ebp+0x8]
  412a41:	mov    edx,DWORD PTR [eax+0x1b8]
  412a47:	call   0x414b33
  412a4c:	push   eax
  412a4d:	mov    eax,DWORD PTR [ebp-0x18]
  412a50:	call   DWORD PTR [eax]
  412a52:	test   eax,eax
  412a54:	jne    0x412a7c
  412a56:	mov    eax,DWORD PTR [ebp+0x8]
  412a59:	mov    eax,DWORD PTR [eax+0x1d8]
  412a5f:	mov    edi,DWORD PTR [ebp+0x8]
  412a62:	add    eax,0x10
  412a65:	mov    DWORD PTR [ebp-0x18],eax
  412a68:	mov    eax,DWORD PTR [ebp+0x8]
  412a6b:	mov    edx,DWORD PTR [eax+0x1b8]
  412a71:	call   0x414b33
  412a76:	push   eax
  412a77:	mov    eax,DWORD PTR [ebp-0x18]
  412a7a:	call   DWORD PTR [eax]
  412a7c:	mov    eax,DWORD PTR [ebp-0x8]
  412a7f:	mov    ecx,DWORD PTR [ebp-0x1c]
  412a82:	xor    eax,ebx
  412a84:	add    eax,esi
  412a86:	cmp    eax,ecx
  412a88:	je     0x412c07
  412a8e:	mov    eax,DWORD PTR [ebp-0x34]
  412a91:	xor    eax,ebx
  412a93:	mov    ecx,0xffcd8d23
  412a98:	sub    ecx,eax
  412a9a:	add    ecx,DWORD PTR [ebp-0x1c]
  412a9d:	mov    eax,DWORD PTR [ebp-0x14]
  412aa0:	cmp    eax,ecx
  412aa2:	ja     0x412c07
  412aa8:	mov    DWORD PTR [ebp-0x4],0x0
  412aaf:	push   DWORD PTR [ebp+0x8]
  412ab2:	mov    edi,DWORD PTR [ebp+0x8]
  412ab5:	mov    eax,DWORD PTR [ebp+0x8]
  412ab8:	mov    edx,DWORD PTR [eax+0x1b4]
  412abe:	call   0x414b33
  412ac3:	push   eax
  412ac4:	mov    eax,DWORD PTR [ebp+0x8]
  412ac7:	mov    eax,DWORD PTR [eax+0x1a8]
  412acd:	push   DWORD PTR [eax]
  412acf:	call   0x4147d5
  412ad4:	mov    ecx,DWORD PTR [ebp+0x8]
  412ad7:	mov    ecx,DWORD PTR [ecx+0x19c]
  412add:	mov    DWORD PTR [ecx],eax
  412adf:	mov    eax,DWORD PTR [ebp+0x8]
  412ae2:	mov    edi,DWORD PTR [eax+0x1d8]
  412ae8:	mov    esi,DWORD PTR [ebp+0x8]
  412aeb:	xor    eax,eax
  412aed:	lea    edx,[ebp-0x84]
  412af3:	call   0x414b69
  412af8:	push   eax
  412af9:	mov    eax,DWORD PTR [ebp+0x8]
  412afc:	mov    eax,DWORD PTR [eax+0x19c]
  412b02:	push   DWORD PTR [eax]
  412b04:	call   DWORD PTR [edi+0x8]
  412b07:	mov    DWORD PTR [ebp-0x18],eax
  412b0a:	mov    eax,DWORD PTR [ebp+0x8]
  412b0d:	mov    edi,DWORD PTR [eax+0x1d8]
  412b13:	mov    esi,DWORD PTR [ebp+0x8]
  412b16:	xor    eax,eax
  412b18:	lea    edx,[ebp-0x70]
  412b1b:	call   0x414b69
  412b20:	push   eax
  412b21:	mov    eax,DWORD PTR [ebp+0x8]
  412b24:	mov    eax,DWORD PTR [eax+0x19c]
  412b2a:	push   DWORD PTR [eax]
  412b2c:	call   DWORD PTR [edi+0x8]
  412b2f:	and    DWORD PTR [ebp-0x10],0x0
  412b33:	mov    eax,DWORD PTR [ebp-0x10]
  412b36:	and    eax,0x7
  412b39:	add    eax,0x31
  412b3c:	push   eax
  412b3d:	call   DWORD PTR [ebp-0x18]
  412b40:	test   eax,eax
  412b42:	jne    0x412b49
  412b44:	and    DWORD PTR [ebp-0xc],eax
  412b47:	jmp    0x412b71
  412b49:	mov    eax,DWORD PTR [ebp+0x8]
  412b4c:	mov    edi,DWORD PTR [eax+0x1d8]
  412b52:	mov    esi,DWORD PTR [ebp+0x8]
  412b55:	xor    eax,eax
  412b57:	lea    edx,[ebp-0x5c]
  412b5a:	call   0x414b69
  412b5f:	push   eax
  412b60:	mov    eax,DWORD PTR [ebp+0x8]
  412b63:	mov    eax,DWORD PTR [eax+0x198]
  412b69:	push   DWORD PTR [eax]
  412b6b:	call   DWORD PTR [edi+0x8]
  412b6e:	mov    DWORD PTR [ebp-0xc],eax
  412b71:	inc    DWORD PTR [ebp-0x10]
  412b74:	cmp    DWORD PTR [ebp-0x10],0x10
  412b78:	jb     0x412b33
  412b7a:	mov    eax,DWORD PTR [ebp-0x34]
  412b7d:	mov    esi,DWORD PTR [ebp+0x8]
  412b80:	xor    eax,ebx
  412b82:	mov    edi,0x3272dd
  412b87:	add    eax,edi
  412b89:	lea    edx,[ebp-0xcc]
  412b8f:	call   0x414b69
  412b94:	push   eax
  412b95:	mov    eax,DWORD PTR [ebp-0x8]
  412b98:	mov    esi,DWORD PTR [ebp+0x8]
  412b9b:	xor    eax,ebx
  412b9d:	add    eax,edi
  412b9f:	lea    edx,[ebp-0xec]
  412ba5:	call   0x414b69
  412baa:	push   eax
  412bab:	call   DWORD PTR [ebp-0xc]
  412bae:	mov    ecx,DWORD PTR [ebp-0x8]
  412bb1:	xor    ecx,ebx
  412bb3:	add    ecx,edi
  412bb5:	cmp    ecx,eax
  412bb7:	jne    0x412bc0
  412bb9:	mov    DWORD PTR [ebp-0x4],0x1
  412bc0:	mov    eax,DWORD PTR [ebp-0x34]
  412bc3:	mov    ecx,DWORD PTR [ebp-0x14]
  412bc6:	xor    eax,ebx
  412bc8:	lea    eax,[eax+ecx*1+0x3272dd]
  412bcf:	mov    DWORD PTR [ebp-0x14],eax
  412bd2:	mov    eax,DWORD PTR [ebp-0x4]
  412bd5:	test   eax,eax
  412bd7:	je     0x412beb
  412bd9:	mov    eax,DWORD PTR [ebp-0x34]
  412bdc:	mov    ecx,DWORD PTR [ebp-0x24]
  412bdf:	xor    eax,ebx
  412be1:	lea    eax,[eax+ecx*1+0x3272dd]
  412be8:	mov    DWORD PTR [ebp-0x24],eax
  412beb:	mov    eax,DWORD PTR [ebp-0x34]
  412bee:	xor    eax,ebx
  412bf0:	mov    ecx,0xffcd8d23
  412bf5:	sub    ecx,eax
  412bf7:	add    ecx,DWORD PTR [ebp-0x1c]
  412bfa:	mov    eax,DWORD PTR [ebp-0x14]
  412bfd:	cmp    eax,ecx
  412bff:	jbe    0x412aa8
  412c05:	mov    esi,edi
  412c07:	mov    eax,DWORD PTR [ebp-0x24]
  412c0a:	mov    ecx,DWORD PTR [ebp-0x14]
  412c0d:	cmp    ecx,eax
  412c0f:	jne    0x412c22
  412c11:	push   DWORD PTR [ebp+0x8]
  412c14:	lea    eax,[ebp-0x30]
  412c17:	push   eax
  412c18:	call   0x4155e2
  412c1d:	mov    DWORD PTR [ebp-0x20],eax
  412c20:	jmp    0x412c2e
  412c22:	mov    eax,DWORD PTR [ebp-0x20]
  412c25:	mov    ecx,DWORD PTR [ebp-0x34]
  412c28:	xor    ecx,ebx
  412c2a:	add    ecx,esi
  412c2c:	xor    DWORD PTR [eax],ecx
  412c2e:	mov    eax,DWORD PTR [ebp-0x8]
  412c31:	mov    ecx,DWORD PTR [ebp-0x20]
  412c34:	xor    eax,ebx
  412c36:	add    eax,esi
  412c38:	cmp    eax,ecx
  412c3a:	je     0x413224
  412c40:	mov    eax,DWORD PTR [ebp-0x8]
  412c43:	mov    ecx,DWORD PTR [ebp-0x30]
  412c46:	xor    eax,ebx
  412c48:	add    eax,esi
  412c4a:	cmp    eax,ecx
  412c4c:	je     0x413224
  412c52:	mov    eax,DWORD PTR [ebp-0x8]
  412c55:	xor    eax,ebx
  412c57:	add    eax,esi
  412c59:	jmp    0x412c77
  412c5b:	mov    edi,DWORD PTR [ebp-0x20]
  412c5e:	mov    cl,al
  412c60:	and    cl,0x1f
  412c63:	or     dl,0xff
  412c66:	sub    dl,cl
  412c68:	add    BYTE PTR [edi+eax*1],dl
  412c6b:	mov    ecx,DWORD PTR [ebp-0x34]
  412c6e:	xor    ecx,ebx
  412c70:	lea    eax,[eax+ecx*1+0x3272dd]
  412c77:	mov    ecx,DWORD PTR [ebp-0x30]
  412c7a:	cmp    eax,ecx
  412c7c:	jb     0x412c5b
  412c7e:	mov    eax,DWORD PTR [ebp-0x30]
  412c81:	mov    DWORD PTR [ebp-0x1c],eax
  412c84:	mov    eax,DWORD PTR [ebp-0x20]
  412c87:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  412c8e:	mov    DWORD PTR [ebp-0xa8],eax
  412c94:	mov    ecx,0xf89c85b2
  412c99:	mov    DWORD PTR [ebp-0x14],ecx
  412c9c:	mov    eax,DWORD PTR [ebp-0x24]
  412c9f:	xor    eax,ebx
  412ca1:	add    eax,esi
  412ca3:	mov    DWORD PTR [ebp-0x4],eax
  412ca6:	mov    eax,DWORD PTR [ebp-0x24]
  412ca9:	xor    eax,ebx
  412cab:	add    eax,esi
  412cad:	mov    DWORD PTR [ebp-0x10],eax
  412cb0:	mov    DWORD PTR [ebp-0x40],0xf89c85d5
  412cb7:	mov    DWORD PTR [ebp-0x44],0xf89c85bc
  412cbe:	mov    eax,DWORD PTR [ebp-0x24]
  412cc1:	mov    edx,DWORD PTR [ebp-0x1c]
  412cc4:	xor    eax,ebx
  412cc6:	add    eax,esi
  412cc8:	cmp    edx,eax
  412cca:	je     0x412e02
  412cd0:	jmp    0x412dde
  412cd5:	mov    edx,DWORD PTR [ebp-0x4]
  412cd8:	mov    eax,DWORD PTR [ebp-0x1c]
  412cdb:	mov    edi,DWORD PTR [ebp-0x40]
  412cde:	sub    eax,edx
  412ce0:	xor    edi,ebx
  412ce2:	xor    edx,edx
  412ce4:	add    edi,esi
  412ce6:	div    edi
  412ce8:	mov    DWORD PTR [ebp-0x10],eax
  412ceb:	mov    eax,DWORD PTR [ebp-0x44]
  412cee:	mov    edx,DWORD PTR [ebp-0x10]
  412cf1:	xor    eax,ebx
  412cf3:	add    eax,esi
  412cf5:	cmp    edx,eax
  412cf7:	jbe    0x412d03
  412cf9:	mov    eax,DWORD PTR [ebp-0x44]
  412cfc:	xor    eax,ebx
  412cfe:	add    eax,esi
  412d00:	mov    DWORD PTR [ebp-0x10],eax
  412d03:	mov    eax,DWORD PTR [ebp-0x40]
  412d06:	mov    edx,DWORD PTR [ebp-0x10]
  412d09:	xor    eax,ebx
  412d0b:	add    eax,esi
  412d0d:	imul   eax,edx
  412d10:	mov    DWORD PTR [ebp-0x10],eax
  412d13:	mov    eax,DWORD PTR [ebp-0x24]
  412d16:	mov    edx,DWORD PTR [ebp-0x10]
  412d19:	xor    eax,ebx
  412d1b:	add    eax,esi
  412d1d:	cmp    edx,eax
  412d1f:	je     0x412dcc
  412d25:	mov    eax,DWORD PTR [ebp-0x10]
  412d28:	mov    DWORD PTR [ebp-0xc],eax
  412d2b:	mov    eax,DWORD PTR [ebp-0x4]
  412d2e:	add    eax,DWORD PTR [ebp-0xa8]
  412d34:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  412d3b:	mov    DWORD PTR [ebp-0x38],ecx
  412d3e:	mov    DWORD PTR [ebp-0x28],0xf89c85b3
  412d45:	mov    DWORD PTR [ebp-0x88],eax
  412d4b:	mov    DWORD PTR [ebp-0x28],0xf89c85b0
  412d52:	mov    DWORD PTR [ebp-0x94],ecx
  412d58:	mov    eax,DWORD PTR [ebp-0x18]
  412d5b:	xor    eax,ebx
  412d5d:	add    eax,esi
  412d5f:	jmp    0x412d8f
  412d61:	mov    eax,DWORD PTR [ebp-0x94]
  412d67:	mov    edx,DWORD PTR [ebp-0x10]
  412d6a:	xor    eax,ebx
  412d6c:	add    eax,esi
  412d6e:	imul   eax,edx
  412d71:	mov    edx,DWORD PTR [ebp-0x88]
  412d77:	mov    BYTE PTR [eax+edx*1],0x0
  412d7b:	mov    eax,DWORD PTR [ebp-0x28]
  412d7e:	mov    edx,DWORD PTR [ebp-0x38]
  412d81:	xor    eax,ebx
  412d83:	xor    edx,ebx
  412d85:	add    eax,esi
  412d87:	add    edx,esi
  412d89:	imul   eax,edx
  412d8c:	add    eax,DWORD PTR [ebp-0x10]
  412d8f:	mov    DWORD PTR [ebp-0x10],eax
  412d92:	mov    eax,DWORD PTR [ebp-0x10]
  412d95:	mov    edx,DWORD PTR [ebp-0xc]
  412d98:	cmp    edx,eax
  412d9a:	jb     0x412d61
  412d9c:	mov    eax,DWORD PTR [ebp-0x38]
  412d9f:	mov    edx,DWORD PTR [ebp-0xc]
  412da2:	xor    eax,ebx
  412da4:	add    eax,esi
  412da6:	imul   eax,edx
  412da9:	mov    edx,DWORD PTR [ebp-0x18]
  412dac:	xor    edx,ebx
  412dae:	add    edx,esi
  412db0:	or     eax,edx
  412db2:	mov    edx,DWORD PTR [ebp-0x14]
  412db5:	xor    edx,ebx
  412db7:	add    eax,edx
  412db9:	mov    edx,DWORD PTR [ebp-0x14]
  412dbc:	xor    edx,ebx
  412dbe:	add    eax,edx
  412dc0:	mov    edx,DWORD PTR [ebp-0x4]
  412dc3:	lea    eax,[eax+edx*1+0x64e5ba]
  412dca:	jmp    0x412ddb
  412dcc:	mov    eax,DWORD PTR [ebp-0x14]
  412dcf:	mov    edx,DWORD PTR [ebp-0x4]
  412dd2:	xor    eax,ebx
  412dd4:	lea    eax,[eax+edx*1+0x3272dd]
  412ddb:	mov    DWORD PTR [ebp-0x4],eax
  412dde:	mov    eax,DWORD PTR [ebp-0x14]
  412de1:	xor    eax,ebx
  412de3:	mov    edx,0xffcd8d23
  412de8:	sub    edx,eax
  412dea:	add    edx,DWORD PTR [ebp-0x1c]
  412ded:	mov    eax,DWORD PTR [ebp-0x14]
  412df0:	mov    edi,DWORD PTR [ebp-0x4]
  412df3:	xor    eax,ebx
  412df5:	add    eax,esi
  412df7:	imul   eax,edi
  412dfa:	cmp    eax,edx
  412dfc:	jbe    0x412cd5
  412e02:	mov    eax,DWORD PTR [ebp-0x8]
  412e05:	mov    ecx,DWORD PTR [ebp-0x30]
  412e08:	mov    eax,DWORD PTR [ebp+0x8]
  412e0b:	mov    edx,DWORD PTR [ebp-0x3c]
  412e0e:	mov    eax,DWORD PTR [eax+0x1d8]
  412e14:	xor    edx,ebx
  412e16:	add    edx,esi
  412e18:	push   edx
  412e19:	mov    edx,DWORD PTR [ebp-0x2c]
  412e1c:	xor    edx,ebx
  412e1e:	add    edx,esi
  412e20:	push   edx
  412e21:	push   ecx
  412e22:	mov    DWORD PTR [ebp-0x28],ecx
  412e25:	mov    ecx,DWORD PTR [ebp-0x8]
  412e28:	xor    ecx,ebx
  412e2a:	add    ecx,esi
  412e2c:	push   ecx
  412e2d:	call   DWORD PTR [eax+0x14]
  412e30:	mov    edi,eax
  412e32:	mov    eax,DWORD PTR [ebp-0x8]
  412e35:	xor    eax,ebx
  412e37:	add    eax,esi
  412e39:	cmp    eax,edi
  412e3b:	je     0x412e96
  412e3d:	mov    eax,DWORD PTR [ebp-0x8]
  412e40:	jmp    0x412e63
  412e42:	mov    ecx,DWORD PTR [ebp-0x20]
  412e45:	xor    eax,ebx
  412e47:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  412e4e:	mov    BYTE PTR [eax+edi*1+0x3272dd],cl
  412e55:	mov    ecx,DWORD PTR [ebp-0x34]
  412e58:	xor    ecx,ebx
  412e5a:	lea    eax,[ecx+eax*1+0x3272dd]
  412e61:	xor    eax,ebx
  412e63:	mov    ecx,DWORD PTR [ebp-0x30]
  412e66:	sub    ecx,esi
  412e68:	xor    ecx,ebx
  412e6a:	cmp    eax,ecx
  412e6c:	jne    0x412e42
  412e6e:	mov    eax,DWORD PTR [ebp+0x8]
  412e71:	mov    ecx,DWORD PTR [ebp-0x48]
  412e74:	mov    eax,DWORD PTR [eax+0x1d8]
  412e7a:	xor    ecx,ebx
  412e7c:	add    ecx,esi
  412e7e:	push   ecx
  412e7f:	mov    ecx,DWORD PTR [ebp-0x8]
  412e82:	xor    ecx,ebx
  412e84:	add    ecx,esi
  412e86:	push   ecx
  412e87:	push   DWORD PTR [ebp-0x20]
  412e8a:	call   DWORD PTR [eax+0x18]
  412e8d:	mov    eax,DWORD PTR [ebp-0x28]
  412e90:	mov    DWORD PTR [ebp-0x20],edi
  412e93:	mov    DWORD PTR [ebp-0x30],eax
  412e96:	mov    edi,DWORD PTR [ebp-0x20]
  412e99:	mov    eax,DWORD PTR [ebp-0x34]
  412e9c:	mov    ecx,DWORD PTR [ebp-0x8]
  412e9f:	xor    eax,ebx
  412ea1:	mov    DWORD PTR [ebp-0x28],edi
  412ea4:	add    eax,esi
  412ea6:	mov    DWORD PTR [ebp-0x50],0x3d122a12
  412ead:	mov    DWORD PTR [ebp-0x4c],0x27123f12
  412eb4:	jmp    0x412ee8
  412eb6:	xor    ecx,ebx
  412eb8:	mov    dl,BYTE PTR [ebp+ecx*1+0x32728d]
  412ebf:	xor    dl,0x71
  412ec2:	sub    dl,0xb
  412ec5:	mov    DWORD PTR [ebp-0x2c],ecx
  412ec8:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272dd]
  412ed0:	movzx  edx,dl
  412ed3:	cmp    ecx,edx
  412ed5:	jne    0x412ef2
  412ed7:	mov    ecx,DWORD PTR [ebp-0x34]
  412eda:	mov    edx,DWORD PTR [ebp-0x2c]
  412edd:	xor    ecx,ebx
  412edf:	lea    ecx,[ecx+edx*1+0x3272dd]
  412ee6:	xor    ecx,ebx
  412ee8:	cmp    ecx,0xf89c85bd
  412eee:	jne    0x412eb6
  412ef0:	jmp    0x412ef9
  412ef2:	mov    eax,DWORD PTR [ebp-0x8]
  412ef5:	xor    eax,ebx
  412ef7:	add    eax,esi
  412ef9:	mov    ecx,DWORD PTR [ebp-0x8]
  412efc:	xor    ecx,ebx
  412efe:	add    ecx,esi
  412f00:	cmp    ecx,eax
  412f02:	je     0x413075
  412f08:	mov    eax,DWORD PTR [edi+0x8]
  412f0b:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  412f12:	mov    DWORD PTR [ebp-0x2c],0xf89cc304
  412f19:	mov    DWORD PTR [ebp-0x38],0xf89cb5b5
  412f20:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  412f27:	mov    DWORD PTR [ebp-0xc],eax
  412f2a:	mov    eax,DWORD PTR [ebp+0x8]
  412f2d:	mov    ecx,DWORD PTR [ebp-0x18]
  412f30:	xor    ecx,ebx
  412f32:	add    ecx,esi
  412f34:	push   ecx
  412f35:	mov    ecx,DWORD PTR [ebp-0x38]
  412f38:	mov    eax,DWORD PTR [eax+0x1d8]
  412f3e:	xor    ecx,ebx
  412f40:	add    ecx,esi
  412f42:	push   ecx
  412f43:	mov    ecx,DWORD PTR [ebp-0x2c]
  412f46:	xor    ecx,ebx
  412f48:	add    ecx,esi
  412f4a:	push   ecx
  412f4b:	mov    ecx,DWORD PTR [ebp-0x4]
  412f4e:	xor    ecx,ebx
  412f50:	add    ecx,esi
  412f52:	push   ecx
  412f53:	call   DWORD PTR [eax+0x14]
  412f56:	mov    edi,eax
  412f58:	mov    eax,DWORD PTR [ebp+0x8]
  412f5b:	mov    ecx,DWORD PTR [ebp-0x18]
  412f5e:	mov    eax,DWORD PTR [eax+0x1d8]
  412f64:	xor    ecx,ebx
  412f66:	add    ecx,esi
  412f68:	push   ecx
  412f69:	mov    ecx,DWORD PTR [ebp-0x38]
  412f6c:	xor    ecx,ebx
  412f6e:	add    ecx,esi
  412f70:	push   ecx
  412f71:	mov    ecx,DWORD PTR [ebp-0x4]
  412f74:	push   DWORD PTR [ebp-0xc]
  412f77:	xor    ecx,ebx
  412f79:	add    ecx,esi
  412f7b:	push   ecx
  412f7c:	call   DWORD PTR [eax+0x14]
  412f7f:	mov    ecx,DWORD PTR [ebp-0x4]
  412f82:	xor    ecx,ebx
  412f84:	add    ecx,esi
  412f86:	mov    DWORD PTR [ebp-0x18],eax
  412f89:	cmp    ecx,edi
  412f8b:	je     0x413251
  412f91:	mov    ecx,DWORD PTR [ebp-0x4]
  412f94:	xor    ecx,ebx
  412f96:	add    ecx,esi
  412f98:	cmp    ecx,eax
  412f9a:	je     0x413251
  412fa0:	mov    DWORD PTR [ebp-0x2c],0xf89c85b0
  412fa7:	mov    DWORD PTR [ebp-0x3c],0xf89c85b3
  412fae:	mov    ecx,DWORD PTR [ebp-0x2c]
  412fb1:	xor    cl,0x96
  412fb4:	sub    cl,0x23
  412fb7:	mov    BYTE PTR [edi],cl
  412fb9:	mov    ecx,DWORD PTR [ebp-0x4]
  412fbc:	xor    cl,0x96
  412fbf:	sub    cl,0x23
  412fc2:	mov    BYTE PTR [edi+0x1],cl
  412fc5:	mov    ecx,DWORD PTR [ebp-0x3c]
  412fc8:	xor    cl,0x96
  412fcb:	sub    cl,0x23
  412fce:	mov    BYTE PTR [edi+0x2],cl
  412fd1:	and    DWORD PTR [ebp-0x98],0x0
  412fd8:	and    DWORD PTR [ebp-0xa4],0x0
  412fdf:	lea    ecx,[ebp-0xa4]
  412fe5:	push   ecx
  412fe6:	push   DWORD PTR [ebp-0xc]
  412fe9:	push   eax
  412fea:	lea    eax,[ebp-0x98]
  412ff0:	push   eax
  412ff1:	mov    eax,DWORD PTR [ebp-0x28]
  412ff4:	push   DWORD PTR [eax+0xc]
  412ff7:	mov    eax,DWORD PTR [ebp-0x20]
  412ffa:	add    eax,0x10
  412ffd:	push   eax
  412ffe:	push   edi
  412fff:	call   0x41241b
  413004:	mov    DWORD PTR [ebp-0x2c],eax
  413007:	mov    eax,DWORD PTR [ebp+0x8]
  41300a:	mov    ecx,DWORD PTR [ebp-0x48]
  41300d:	mov    eax,DWORD PTR [eax+0x1d8]
  413013:	xor    ecx,ebx
  413015:	add    ecx,esi
  413017:	push   ecx
  413018:	mov    ecx,DWORD PTR [ebp-0x4]
  41301b:	xor    ecx,ebx
  41301d:	add    ecx,esi
  41301f:	push   ecx
  413020:	push   edi
  413021:	call   DWORD PTR [eax+0x18]
  413024:	mov    eax,DWORD PTR [ebp-0x2c]
  413027:	add    eax,0xffcd8d23
  41302c:	xor    eax,ebx
  41302e:	cmp    eax,0xf89c85b5
  413033:	mov    eax,DWORD PTR [ebp+0x8]
  413036:	mov    eax,DWORD PTR [eax+0x1d8]
  41303c:	mov    ecx,DWORD PTR [ebp-0x48]
  41303f:	jne    0x413062
  413041:	xor    ecx,ebx
  413043:	add    ecx,esi
  413045:	push   ecx
  413046:	mov    ecx,DWORD PTR [ebp-0x4]
  413049:	xor    ecx,ebx
  41304b:	add    ecx,esi
  41304d:	push   ecx
  41304e:	push   DWORD PTR [ebp-0x20]
  413051:	call   DWORD PTR [eax+0x18]
  413054:	mov    eax,DWORD PTR [ebp-0x18]
  413057:	mov    DWORD PTR [ebp-0x20],eax
  41305a:	mov    eax,DWORD PTR [ebp-0xc]
  41305d:	mov    DWORD PTR [ebp-0x30],eax
  413060:	jmp    0x413075
  413062:	xor    ecx,ebx
  413064:	add    ecx,esi
  413066:	push   ecx
  413067:	mov    ecx,DWORD PTR [ebp-0x4]
  41306a:	xor    ecx,ebx
  41306c:	add    ecx,esi
  41306e:	push   ecx
  41306f:	push   DWORD PTR [ebp-0x18]
  413072:	call   DWORD PTR [eax+0x18]
  413075:	mov    eax,DWORD PTR [ebp-0x30]
  413078:	mov    DWORD PTR [ebp-0x24],eax
  41307b:	mov    eax,DWORD PTR [ebp-0x20]
  41307e:	mov    DWORD PTR [ebp-0x1c],0xf89c85b5
  413085:	mov    DWORD PTR [ebp-0x2c],eax
  413088:	mov    ecx,0xf89c85b2
  41308d:	mov    DWORD PTR [ebp-0x14],ecx
  413090:	mov    eax,DWORD PTR [ebp-0x1c]
  413093:	xor    eax,ebx
  413095:	add    eax,esi
  413097:	mov    DWORD PTR [ebp-0x4],eax
  41309a:	mov    eax,DWORD PTR [ebp-0x1c]
  41309d:	xor    eax,ebx
  41309f:	add    eax,esi
  4130a1:	mov    DWORD PTR [ebp-0xc],eax
  4130a4:	mov    DWORD PTR [ebp-0x38],0xf89c85d5
  4130ab:	mov    DWORD PTR [ebp-0x18],0xf89c85bc
  4130b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4130b5:	mov    edx,DWORD PTR [ebp-0x24]
  4130b8:	xor    eax,ebx
  4130ba:	add    eax,esi
  4130bc:	cmp    edx,eax
  4130be:	je     0x4131ed
  4130c4:	jmp    0x4131c9
  4130c9:	mov    edx,DWORD PTR [ebp-0x4]
  4130cc:	mov    eax,DWORD PTR [ebp-0x24]
  4130cf:	mov    edi,DWORD PTR [ebp-0x38]
  4130d2:	sub    eax,edx
  4130d4:	xor    edi,ebx
  4130d6:	xor    edx,edx
  4130d8:	add    edi,esi
  4130da:	div    edi
  4130dc:	mov    DWORD PTR [ebp-0xc],eax
  4130df:	mov    eax,DWORD PTR [ebp-0x18]
  4130e2:	mov    edx,DWORD PTR [ebp-0xc]
  4130e5:	xor    eax,ebx
  4130e7:	add    eax,esi
  4130e9:	cmp    edx,eax
  4130eb:	jbe    0x4130f7
  4130ed:	mov    eax,DWORD PTR [ebp-0x18]
  4130f0:	xor    eax,ebx
  4130f2:	add    eax,esi
  4130f4:	mov    DWORD PTR [ebp-0xc],eax
  4130f7:	mov    eax,DWORD PTR [ebp-0x38]
  4130fa:	mov    edx,DWORD PTR [ebp-0xc]
  4130fd:	xor    eax,ebx
  4130ff:	add    eax,esi
  413101:	imul   eax,edx
  413104:	mov    DWORD PTR [ebp-0xc],eax
  413107:	mov    eax,DWORD PTR [ebp-0x1c]
  41310a:	mov    edx,DWORD PTR [ebp-0xc]
  41310d:	xor    eax,ebx
  41310f:	add    eax,esi
  413111:	cmp    edx,eax
  413113:	je     0x4131b7
  413119:	mov    eax,DWORD PTR [ebp-0xc]
  41311c:	mov    DWORD PTR [ebp-0xc],eax
  41311f:	mov    eax,DWORD PTR [ebp-0x4]
  413122:	add    eax,DWORD PTR [ebp-0x2c]
  413125:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  41312c:	mov    DWORD PTR [ebp-0x40],ecx
  41312f:	mov    DWORD PTR [ebp-0x3c],0xf89c85b3
  413136:	mov    DWORD PTR [ebp-0x28],eax
  413139:	mov    DWORD PTR [ebp-0x88],0xf89c85b0
  413143:	mov    DWORD PTR [ebp-0x3c],ecx
  413146:	mov    eax,DWORD PTR [ebp-0x44]
  413149:	xor    eax,ebx
  41314b:	add    eax,esi
  41314d:	jmp    0x41317a
  41314f:	mov    eax,DWORD PTR [ebp-0x3c]
  413152:	mov    edx,DWORD PTR [ebp-0x10]
  413155:	xor    eax,ebx
  413157:	add    eax,esi
  413159:	imul   eax,edx
  41315c:	mov    edx,DWORD PTR [ebp-0x28]
  41315f:	mov    BYTE PTR [eax+edx*1],0x0
  413163:	mov    eax,DWORD PTR [ebp-0x88]
  413169:	mov    edx,DWORD PTR [ebp-0x40]
  41316c:	xor    eax,ebx
  41316e:	xor    edx,ebx
  413170:	add    eax,esi
  413172:	add    edx,esi
  413174:	imul   eax,edx
  413177:	add    eax,DWORD PTR [ebp-0x10]
  41317a:	mov    DWORD PTR [ebp-0x10],eax
  41317d:	mov    eax,DWORD PTR [ebp-0x10]
  413180:	mov    edx,DWORD PTR [ebp-0xc]
  413183:	cmp    edx,eax
  413185:	jb     0x41314f
  413187:	mov    eax,DWORD PTR [ebp-0x40]
  41318a:	mov    edx,DWORD PTR [ebp-0xc]
  41318d:	xor    eax,ebx
  41318f:	add    eax,esi
  413191:	imul   eax,edx
  413194:	mov    edx,DWORD PTR [ebp-0x44]
  413197:	xor    edx,ebx
  413199:	add    edx,esi
  41319b:	or     eax,edx
  41319d:	mov    edx,DWORD PTR [ebp-0x14]
  4131a0:	xor    edx,ebx
  4131a2:	add    eax,edx
  4131a4:	mov    edx,DWORD PTR [ebp-0x14]
  4131a7:	xor    edx,ebx
  4131a9:	add    eax,edx
  4131ab:	mov    edx,DWORD PTR [ebp-0x4]
  4131ae:	lea    eax,[eax+edx*1+0x64e5ba]
  4131b5:	jmp    0x4131c6
  4131b7:	mov    eax,DWORD PTR [ebp-0x14]
  4131ba:	mov    edx,DWORD PTR [ebp-0x4]
  4131bd:	xor    eax,ebx
  4131bf:	lea    eax,[eax+edx*1+0x3272dd]
  4131c6:	mov    DWORD PTR [ebp-0x4],eax
  4131c9:	mov    eax,DWORD PTR [ebp-0x14]
  4131cc:	xor    eax,ebx
  4131ce:	mov    edx,0xffcd8d23
  4131d3:	sub    edx,eax
  4131d5:	add    edx,DWORD PTR [ebp-0x24]
  4131d8:	mov    eax,DWORD PTR [ebp-0x14]
  4131db:	mov    edi,DWORD PTR [ebp-0x4]
  4131de:	xor    eax,ebx
  4131e0:	add    eax,esi
  4131e2:	imul   eax,edi
  4131e5:	cmp    eax,edx
  4131e7:	jbe    0x4130c9
  4131ed:	push   DWORD PTR [ebp+0x8]
  4131f0:	mov    eax,DWORD PTR [ebp+0x8]
  4131f3:	push   DWORD PTR [eax+0x1cc]
  4131f9:	lea    eax,[ebp-0xa0]
  4131ff:	push   eax
  413200:	mov    eax,DWORD PTR [ebp+0x8]
  413203:	mov    eax,DWORD PTR [eax+0x1c4]
  413209:	push   DWORD PTR [eax]
  41320b:	mov    eax,DWORD PTR [ebp+0x8]
  41320e:	mov    eax,DWORD PTR [eax+0x1c0]
  413214:	push   DWORD PTR [eax]
  413216:	push   DWORD PTR [ebp-0x30]
  413219:	push   DWORD PTR [ebp-0x20]
  41321c:	call   0x413cf2
  413221:	mov    DWORD PTR [ebp-0x2c],eax
  413224:	mov    eax,DWORD PTR [ebp-0x8]
  413227:	mov    ecx,DWORD PTR [ebp-0x20]
  41322a:	xor    eax,ebx
  41322c:	add    eax,esi
  41322e:	cmp    eax,ecx
  413230:	je     0x413251
  413232:	mov    eax,DWORD PTR [ebp+0x8]
  413235:	mov    ecx,DWORD PTR [ebp-0x48]
  413238:	mov    eax,DWORD PTR [eax+0x1d8]
  41323e:	xor    ecx,ebx
  413240:	add    ecx,esi
  413242:	push   ecx
  413243:	mov    ecx,DWORD PTR [ebp-0x8]
  413246:	xor    ecx,ebx
  413248:	add    ecx,esi
  41324a:	push   ecx
  41324b:	push   DWORD PTR [ebp-0x20]
  41324e:	call   DWORD PTR [eax+0x18]
  413251:	pop    edi
  413252:	pop    esi
  413253:	pop    ebx
  413254:	leave  
  413255:	ret    0x4
  413258:	push   ebp
  413259:	mov    ebp,esp
  41325b:	push   ecx
  41325c:	push   ecx
  41325d:	lea    eax,[ebp-0x8]
  413260:	mov    DWORD PTR [ebp-0x4],eax
  413263:	push   esi
  413264:	mov    esi,DWORD PTR [ebp-0x4]
  413267:	mov    eax,0xf881ba0f
  41326c:	mov    DWORD PTR [esi],eax
  41326e:	mov    esi,DWORD PTR [ebp-0x8]
  413271:	cmp    esi,eax
  413273:	pop    esi
  413274:	jne    0x41327e
  413276:	mov    BYTE PTR [ecx+0xa],0x7a
  41327a:	mov    BYTE PTR [edx+0x8],0x2f
  41327e:	mov    BYTE PTR [edx+0xa],0x7a
  413282:	mov    BYTE PTR [ecx+0x2],0x8
  413286:	leave  
  413287:	ret    
  413288:	push   ebp
  413289:	mov    ebp,esp
  41328b:	push   ecx
  41328c:	push   ecx
  41328d:	lea    eax,[ebp-0x8]
  413290:	mov    DWORD PTR [ebp-0x4],eax
  413293:	mov    edx,DWORD PTR [ebp-0x4]
  413296:	mov    eax,0xf88b0beb
  41329b:	mov    DWORD PTR [edx],eax
  41329d:	mov    edx,DWORD PTR [ebp-0x8]
  4132a0:	cmp    edx,eax
  4132a2:	jne    0x4132b3
  4132a4:	mov    eax,DWORD PTR [ebp+0x8]
  4132a7:	mov    BYTE PTR [ecx+0x9],0xe
  4132ab:	mov    BYTE PTR [eax+0x7],0x47
  4132af:	mov    BYTE PTR [ecx+0x6],0xf
  4132b3:	mov    BYTE PTR [ecx+0x3],0x1e
  4132b7:	leave  
  4132b8:	ret    0x4
  4132bb:	push   ebp
  4132bc:	mov    ebp,esp
  4132be:	push   ecx
  4132bf:	push   ecx
  4132c0:	lea    eax,[ebp-0x8]
  4132c3:	mov    DWORD PTR [ebp-0x4],eax
  4132c6:	mov    edx,DWORD PTR [ebp-0x4]
  4132c9:	mov    eax,0x7e0da0f
  4132ce:	mov    DWORD PTR [edx],eax
  4132d0:	mov    edx,DWORD PTR [ebp-0x8]
  4132d3:	cmp    edx,eax
  4132d5:	jne    0x4132db
  4132d7:	mov    BYTE PTR [ecx+0x7],0x47
  4132db:	mov    eax,DWORD PTR [ebp+0x8]
  4132de:	mov    BYTE PTR [ecx+0x1],0x5
  4132e2:	mov    BYTE PTR [eax+0x9],0x2e
  4132e6:	leave  
  4132e7:	ret    0x4
  4132ea:	push   ebp
  4132eb:	mov    ebp,esp
  4132ed:	push   ecx
  4132ee:	push   ecx
  4132ef:	lea    eax,[ebp-0x8]
  4132f2:	mov    DWORD PTR [ebp-0x4],eax
  4132f5:	push   esi
  4132f6:	mov    esi,DWORD PTR [ebp-0x4]
  4132f9:	mov    eax,0x7060e3c
  4132fe:	mov    DWORD PTR [esi],eax
  413300:	mov    esi,DWORD PTR [ebp-0x8]
  413303:	cmp    esi,eax
  413305:	pop    esi
  413306:	jne    0x413312
  413308:	mov    BYTE PTR [edx+0x4],0xb
  41330c:	mov    WORD PTR [ecx+0x3],0xb1e
  413312:	mov    BYTE PTR [edx],0x3f
  413315:	leave  
  413316:	ret    
  413317:	push   ebp
  413318:	mov    ebp,esp
  41331a:	push   ecx
  41331b:	push   ecx
  41331c:	lea    eax,[ebp-0x8]
  41331f:	mov    DWORD PTR [ebp-0x4],eax
  413322:	mov    edx,DWORD PTR [ebp-0x4]
  413325:	mov    eax,0xf8870b3f
  41332a:	mov    DWORD PTR [edx],eax
  41332c:	mov    edx,DWORD PTR [ebp-0x8]
  41332f:	cmp    edx,eax
  413331:	jne    0x41333e
  413333:	mov    eax,DWORD PTR [ebp+0x8]
  413336:	mov    BYTE PTR [ecx+0x8],0xf
  41333a:	mov    BYTE PTR [eax+0x1],0x5
  41333e:	mov    BYTE PTR [ecx+0x5],0xf3
  413342:	leave  
  413343:	ret    0x4
  413346:	push   esi
  413347:	mov    ecx,edi
  413349:	call   0x413317
  41334e:	mov    edx,edi
  413350:	mov    ecx,esi
  413352:	mov    BYTE PTR [esi],0x1f
  413355:	call   0x4132ea
  41335a:	push   esi
  41335b:	mov    ecx,edi
  41335d:	mov    BYTE PTR [esi+0x5],0xf3
  413361:	call   0x4132bb
  413366:	push   esi
  413367:	mov    BYTE PTR [esi+0x6],0xf
  41336b:	call   0x413288
  413370:	mov    BYTE PTR [esi+0x2],0x8
  413374:	mov    edx,esi
  413376:	jmp    0x413258
  41337b:	push   ebp
  41337c:	mov    ebp,esp
  41337e:	push   ecx
  41337f:	mov    ecx,DWORD PTR [edx+0x194]
  413385:	push   esi
  413386:	mov    esi,DWORD PTR [ebp+0x8]
  413389:	mov    esi,DWORD PTR [esi]
  41338b:	mov    DWORD PTR [ecx],esi
  41338d:	mov    ecx,DWORD PTR [edx+0x194]
  413393:	mov    ecx,DWORD PTR [ecx]
  413395:	mov    esi,DWORD PTR [edx+0x190]
  41339b:	mov    DWORD PTR [esi],ecx
  41339d:	mov    eax,DWORD PTR [edx+0x194]
  4133a3:	mov    ecx,DWORD PTR [eax]
  4133a5:	mov    ecx,DWORD PTR [ecx+0x3c]
  4133a8:	add    ecx,DWORD PTR [eax]
  4133aa:	mov    DWORD PTR [ebp-0x4],0xf89ca5b5
  4133b1:	mov    eax,DWORD PTR [ebp-0x4]
  4133b4:	movzx  ecx,WORD PTR [ecx+0x16]
  4133b8:	xor    eax,0x7510896
  4133bd:	add    eax,0x3272dd
  4133c2:	pop    esi
  4133c3:	test   ecx,eax
  4133c5:	je     0x4133d3
  4133c7:	mov    eax,DWORD PTR [edx+0x1c8]
  4133cd:	mov    DWORD PTR [eax],0xf89c85b2
  4133d3:	leave  
  4133d4:	ret    0x4
  4133d7:	push   ebp
  4133d8:	mov    ebp,esp
  4133da:	sub    esp,0x70
  4133dd:	and    DWORD PTR [ebp-0x20],0x0
  4133e1:	mov    DWORD PTR [ebp-0x18],0xf89cb5b5
  4133e8:	mov    DWORD PTR [ebp-0x1c],0xf89c85f5
  4133ef:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  4133f6:	mov    DWORD PTR [ebp-0x14],0xf89c85b3
  4133fd:	mov    DWORD PTR [ebp-0x2c],0xf89f05b5
  413404:	mov    eax,DWORD PTR [ebp+0x20]
  413407:	mov    eax,DWORD PTR [eax+0x194]
  41340d:	mov    DWORD PTR [ebp-0xc],eax
  413410:	mov    eax,DWORD PTR [ebp+0x20]
  413413:	push   ebx
  413414:	push   esi
  413415:	mov    esi,DWORD PTR [eax+0x190]
  41341b:	mov    eax,DWORD PTR [ebp+0x20]
  41341e:	mov    eax,DWORD PTR [eax+0x18c]
  413424:	mov    DWORD PTR [ebp-0x8],eax
  413427:	mov    eax,DWORD PTR [eax]
  413429:	push   edi
  41342a:	mov    DWORD PTR [ebp-0x4],esi
  41342d:	test   eax,eax
  41342f:	jne    0x41343c
  413431:	push   DWORD PTR [ebp+0x1c]
  413434:	mov    edx,DWORD PTR [ebp+0x20]
  413437:	call   0x41337b
  41343c:	mov    eax,DWORD PTR [esi]
  41343e:	mov    ebx,DWORD PTR [esi]
  413440:	add    ebx,DWORD PTR [eax+0x3c]
  413443:	mov    eax,DWORD PTR [ebp+0xc]
  413446:	mov    ecx,DWORD PTR [ebp-0x8]
  413449:	mov    ecx,DWORD PTR [ecx]
  41344b:	mov    esi,0x7510896
  413450:	xor    eax,esi
  413452:	mov    edi,0x3272dd
  413457:	add    eax,edi
  413459:	cmp    eax,ecx
  41345b:	jne    0x413693
  413461:	mov    eax,DWORD PTR [ebp-0xc]
  413464:	mov    eax,DWORD PTR [eax]
  413466:	mov    DWORD PTR [ebp-0x10],eax
  413469:	mov    eax,DWORD PTR [ebx+0x50]
  41346c:	mov    DWORD PTR [ebp-0x68],eax
  41346f:	mov    eax,DWORD PTR [ebp-0x18]
  413472:	xor    eax,esi
  413474:	add    eax,edi
  413476:	mov    DWORD PTR [ebp-0x64],eax
  413479:	mov    eax,DWORD PTR [ebp-0x14]
  41347c:	and    DWORD PTR [ebp-0x6c],0x0
  413480:	xor    eax,esi
  413482:	add    eax,edi
  413484:	mov    DWORD PTR [ebp-0x60],eax
  413487:	lea    eax,[ebp-0x70]
  41348a:	push   eax
  41348b:	mov    eax,DWORD PTR [ebp+0x8]
  41348e:	xor    eax,esi
  413490:	add    eax,edi
  413492:	push   eax
  413493:	mov    eax,DWORD PTR [ebp+0x20]
  413496:	add    eax,0xaa
  41349b:	push   eax
  41349c:	mov    eax,DWORD PTR [ebp+0x20]
  41349f:	mov    eax,DWORD PTR [eax+0x198]
  4134a5:	mov    DWORD PTR [ebp-0x70],0x4
  4134ac:	push   DWORD PTR [eax]
  4134ae:	mov    eax,DWORD PTR [ebp+0x10]
  4134b1:	call   eax
  4134b3:	mov    ecx,DWORD PTR [ebp-0xc]
  4134b6:	mov    ecx,DWORD PTR [ecx]
  4134b8:	mov    edx,DWORD PTR [ebp-0x8]
  4134bb:	mov    DWORD PTR [ebp-0x6c],eax
  4134be:	mov    DWORD PTR [ebp+0x1c],eax
  4134c1:	mov    DWORD PTR [edx],ecx
  4134c3:	mov    ecx,DWORD PTR [ebp-0x4]
  4134c6:	mov    DWORD PTR [ecx],eax
  4134c8:	mov    eax,DWORD PTR [ebx+0x50]
  4134cb:	mov    DWORD PTR [ebp-0x68],eax
  4134ce:	mov    eax,DWORD PTR [ebp-0x1c]
  4134d1:	xor    eax,esi
  4134d3:	add    eax,edi
  4134d5:	mov    DWORD PTR [ebp-0x64],eax
  4134d8:	lea    eax,[ebp-0x20]
  4134db:	mov    DWORD PTR [ebp-0x60],eax
  4134de:	lea    eax,[ebp-0x70]
  4134e1:	push   eax
  4134e2:	mov    eax,DWORD PTR [ebp+0x8]
  4134e5:	xor    eax,esi
  4134e7:	add    eax,edi
  4134e9:	push   eax
  4134ea:	mov    eax,DWORD PTR [ebp+0x20]
  4134ed:	add    eax,0xee
  4134f2:	push   eax
  4134f3:	mov    eax,DWORD PTR [ebp+0x20]
  4134f6:	mov    eax,DWORD PTR [eax+0x198]
  4134fc:	mov    DWORD PTR [ebp-0x70],0x4
  413503:	push   DWORD PTR [eax]
  413505:	mov    eax,DWORD PTR [ebp+0x10]
  413508:	call   eax
  41350a:	test   eax,eax
  41350c:	je     0x413531
  41350e:	and    DWORD PTR [ebp+0xc],0x0
  413512:	cmp    DWORD PTR [ebx+0x50],0x0
  413516:	jbe    0x413531
  413518:	mov    eax,DWORD PTR [ebp+0x1c]
  41351b:	mov    ecx,DWORD PTR [ebp-0x10]
  41351e:	sub    ecx,eax
  413520:	mov    dl,BYTE PTR [ecx+eax*1]
  413523:	inc    DWORD PTR [ebp+0xc]
  413526:	mov    BYTE PTR [eax],dl
  413528:	mov    edx,DWORD PTR [ebp+0xc]
  41352b:	inc    eax
  41352c:	cmp    edx,DWORD PTR [ebx+0x50]
  41352f:	jb     0x413520
  413531:	mov    edx,DWORD PTR [ebp+0x1c]
  413534:	mov    ecx,DWORD PTR [edx+0x3c]
  413537:	add    ecx,edx
  413539:	mov    eax,DWORD PTR [ecx+0xa0]
  41353f:	mov    ebx,DWORD PTR [ecx+0x28]
  413542:	add    eax,edx
  413544:	sub    edx,DWORD PTR [ebp-0x10]
  413547:	add    ebx,DWORD PTR [ebp+0x1c]
  41354a:	mov    DWORD PTR [ebp+0xc],edx
  41354d:	mov    DWORD PTR [ebp-0x2c],ecx
  413550:	mov    DWORD PTR [ebp-0x14],ebx
  413553:	mov    DWORD PTR [ebp-0x8],0x0
  41355a:	jmp    0x4135d6
  41355c:	add    edx,0xfffffff8
  41355f:	shr    edx,1
  413561:	mov    DWORD PTR [ebp-0x18],edx
  413564:	je     0x4135c2
  413566:	lea    edx,[eax+0x8]
  413569:	mov    DWORD PTR [ebp-0x4],edx
  41356c:	mov    edx,DWORD PTR [ebp-0x18]
  41356f:	mov    DWORD PTR [ebp-0x18],edx
  413572:	mov    edx,DWORD PTR [ebp-0x4]
  413575:	movzx  edx,WORD PTR [edx]
  413578:	mov    DWORD PTR [ebp-0x24],edx
  41357b:	and    edx,0xfff
  413581:	mov    DWORD PTR [ebp-0x28],edx
  413584:	mov    edx,DWORD PTR [ebp-0x24]
  413587:	shr    edx,0xc
  41358a:	add    edx,0xffcd8d23
  413590:	xor    edx,esi
  413592:	cmp    edx,0xf89c85b0
  413598:	jne    0x4135b9
  41359a:	mov    edx,DWORD PTR [ebp-0x28]
  41359d:	add    edx,DWORD PTR [ebp+0x1c]
  4135a0:	mov    ebx,DWORD PTR [eax]
  4135a2:	cmp    DWORD PTR [ebx+edx*1],0x0
  4135a6:	je     0x4135b6
  4135a8:	mov    ecx,DWORD PTR [ebp+0xc]
  4135ab:	add    ecx,DWORD PTR [ebx+edx*1]
  4135ae:	mov    ebx,DWORD PTR [eax]
  4135b0:	mov    DWORD PTR [edx+ebx*1],ecx
  4135b3:	mov    ecx,DWORD PTR [ebp-0x2c]
  4135b6:	mov    ebx,DWORD PTR [ebp-0x14]
  4135b9:	add    DWORD PTR [ebp-0x4],0x2
  4135bd:	dec    DWORD PTR [ebp-0x18]
  4135c0:	jne    0x413572
  4135c2:	mov    edx,DWORD PTR [ebp-0xc]
  4135c5:	add    DWORD PTR [ebp-0x8],edx
  4135c8:	mov    edx,DWORD PTR [ebp-0x8]
  4135cb:	cmp    edx,DWORD PTR [ecx+0xa4]
  4135d1:	jae    0x4135e4
  4135d3:	add    eax,DWORD PTR [ebp-0xc]
  4135d6:	mov    edx,DWORD PTR [eax+0x4]
  4135d9:	mov    DWORD PTR [ebp-0xc],edx
  4135dc:	test   edx,edx
  4135de:	jne    0x41355c
  4135e4:	mov    eax,DWORD PTR [ebp-0x10]
  4135e7:	mov    DWORD PTR [ebp-0x6c],eax
  4135ea:	mov    DWORD PTR [ebp-0x70],0x4
  4135f1:	mov    eax,DWORD PTR [ecx+0x50]
  4135f4:	mov    DWORD PTR [ebp-0x68],eax
  4135f7:	mov    eax,DWORD PTR [ebp-0x1c]
  4135fa:	xor    eax,esi
  4135fc:	add    eax,edi
  4135fe:	mov    DWORD PTR [ebp-0x64],eax
  413601:	lea    eax,[ebp-0x20]
  413604:	mov    DWORD PTR [ebp-0x60],eax
  413607:	lea    eax,[ebp-0x70]
  41360a:	push   eax
  41360b:	mov    eax,DWORD PTR [ebp+0x8]
  41360e:	xor    eax,esi
  413610:	add    eax,edi
  413612:	push   eax
  413613:	mov    eax,DWORD PTR [ebp+0x20]
  413616:	add    eax,0xee
  41361b:	push   eax
  41361c:	mov    eax,DWORD PTR [ebp+0x20]
  41361f:	mov    eax,DWORD PTR [eax+0x198]
  413625:	push   DWORD PTR [eax]
  413627:	mov    eax,DWORD PTR [ebp+0x10]
  41362a:	call   eax
  41362c:	mov    eax,DWORD PTR [ebp+0x20]
  41362f:	mov    eax,DWORD PTR [eax+0x180]
  413635:	add    eax,DWORD PTR [ebp+0xc]
  413638:	mov    ecx,DWORD PTR [ebp+0xc]
  41363b:	push   DWORD PTR [ebp+0x18]
  41363e:	mov    DWORD PTR [eax],ecx
  413640:	push   DWORD PTR [ebp+0x14]
  413643:	push   DWORD PTR [ebp+0x1c]
  413646:	call   ebx
  413648:	mov    eax,DWORD PTR [ebp+0xc]
  41364b:	add    eax,DWORD PTR [ebp+0x20]
  41364e:	lea    ecx,[ebp+0x4]
  413651:	mov    DWORD PTR [ebp+0x20],eax
  413654:	mov    eax,DWORD PTR [ebp+0x20]
  413657:	mov    eax,DWORD PTR [ebp+0x20]
  41365a:	mov    edx,DWORD PTR [eax+0x190]
  413660:	mov    eax,DWORD PTR [ebp+0x20]
  413663:	mov    eax,DWORD PTR [eax+0x18c]
  413669:	mov    esi,DWORD PTR [eax]
  41366b:	cmp    DWORD PTR [ecx],esi
  41366d:	jb     0x41368e
  41366f:	mov    esi,DWORD PTR [edx]
  413671:	mov    edi,DWORD PTR [edx]
  413673:	mov    esi,DWORD PTR [esi+0x3c]
  413676:	lea    esi,[edi+esi*1+0x50]
  41367a:	mov    edi,DWORD PTR [eax]
  41367c:	add    edi,DWORD PTR [esi]
  41367e:	cmp    DWORD PTR [ecx],edi
  413680:	jae    0x41368e
  413682:	mov    esi,DWORD PTR [eax]
  413684:	mov    eax,DWORD PTR [ecx]
  413686:	mov    edx,DWORD PTR [edx]
  413688:	sub    eax,esi
  41368a:	add    edx,eax
  41368c:	mov    DWORD PTR [ecx],edx
  41368e:	mov    eax,DWORD PTR [ebp+0xc]
  413691:	jmp    0x4136d4
  413693:	push   DWORD PTR [ebp+0x20]
  413696:	call   0x412804
  41369b:	mov    eax,DWORD PTR [ebp+0x20]
  41369e:	mov    eax,DWORD PTR [eax+0x1c8]
  4136a4:	mov    eax,DWORD PTR [eax]
  4136a6:	xor    eax,esi
  4136a8:	add    eax,edi
  4136aa:	mov    eax,DWORD PTR [ebp+0x20]
  4136ad:	jne    0x4136c5
  4136af:	mov    ecx,DWORD PTR [ebp+0x20]
  4136b2:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4136b8:	push   DWORD PTR [ecx]
  4136ba:	mov    eax,DWORD PTR [eax+0x1d8]
  4136c0:	call   DWORD PTR [eax+0x28]
  4136c3:	jmp    0x4136d2
  4136c5:	mov    eax,DWORD PTR [eax+0x17c]
  4136cb:	mov    ecx,DWORD PTR [eax]
  4136cd:	lea    eax,[ebp+0x4]
  4136d0:	add    DWORD PTR [eax],ecx
  4136d2:	xor    eax,eax
  4136d4:	pop    edi
  4136d5:	pop    esi
  4136d6:	pop    ebx
  4136d7:	leave  
  4136d8:	ret    0x1c
  4136db:	push   ebp
  4136dc:	mov    ebp,esp
  4136de:	sub    esp,0x1c
  4136e1:	push   esi
  4136e2:	mov    esi,eax
  4136e4:	mov    eax,DWORD PTR [ecx+0x190]
  4136ea:	cmp    DWORD PTR [eax],0x0
  4136ed:	je     0x4137fd
  4136f3:	test   edx,edx
  4136f5:	je     0x4137fd
  4136fb:	test   esi,esi
  4136fd:	je     0x4137fd
  413703:	mov    eax,DWORD PTR [esi+0x88]
  413709:	test   eax,eax
  41370b:	je     0x4137f8
  413711:	cmp    DWORD PTR [esi+0x8c],0x10
  413718:	je     0x4137f8
  41371e:	cmp    DWORD PTR [esi+0x34],edx
  413721:	je     0x4137f8
  413727:	mov    esi,DWORD PTR [ecx+0x18c]
  41372d:	and    DWORD PTR [ebp-0x10],0x0
  413731:	mov    ecx,edx
  413733:	sub    ecx,DWORD PTR [esi]
  413735:	add    eax,edx
  413737:	movzx  edx,WORD PTR [eax+0xc]
  41373b:	mov    DWORD PTR [ebp-0x1c],ecx
  41373e:	movzx  ecx,WORD PTR [eax+0xe]
  413742:	add    ecx,edx
  413744:	je     0x4137f8
  41374a:	lea    ecx,[eax+0x14]
  41374d:	push   ebx
  41374e:	mov    DWORD PTR [ebp-0x18],ecx
  413751:	mov    esi,0x7fffffff
  413756:	push   edi
  413757:	test   DWORD PTR [ecx],esi
  413759:	je     0x4137da
  41375b:	mov    edx,DWORD PTR [ecx]
  41375d:	and    DWORD PTR [ebp-0xc],0x0
  413761:	and    edx,esi
  413763:	add    edx,eax
  413765:	movzx  edi,WORD PTR [edx+0xe]
  413769:	movzx  ebx,WORD PTR [edx+0xc]
  41376d:	add    edi,ebx
  41376f:	je     0x4137da
  413771:	lea    ecx,[edx+0x14]
  413774:	mov    DWORD PTR [ebp-0x14],ecx
  413777:	test   DWORD PTR [ecx],esi
  413779:	je     0x4137bc
  41377b:	mov    ecx,DWORD PTR [ecx]
  41377d:	and    DWORD PTR [ebp-0x8],0x0
  413781:	and    ecx,esi
  413783:	add    ecx,eax
  413785:	movzx  edi,WORD PTR [ecx+0xe]
  413789:	movzx  ebx,WORD PTR [ecx+0xc]
  41378d:	add    edi,ebx
  41378f:	je     0x4137bc
  413791:	lea    edi,[ecx+0x14]
  413794:	mov    DWORD PTR [ebp-0x4],edi
  413797:	mov    edi,DWORD PTR [ebp-0x4]
  41379a:	mov    edi,DWORD PTR [edi]
  41379c:	test   edi,edi
  41379e:	je     0x4137a6
  4137a0:	mov    ebx,DWORD PTR [ebp-0x1c]
  4137a3:	add    DWORD PTR [edi+eax*1],ebx
  4137a6:	movzx  edi,WORD PTR [ecx+0xe]
  4137aa:	movzx  ebx,WORD PTR [ecx+0xc]
  4137ae:	inc    DWORD PTR [ebp-0x8]
  4137b1:	add    DWORD PTR [ebp-0x4],0x8
  4137b5:	add    edi,ebx
  4137b7:	cmp    DWORD PTR [ebp-0x8],edi
  4137ba:	jb     0x413797
  4137bc:	movzx  edi,WORD PTR [edx+0xe]
  4137c0:	movzx  ebx,WORD PTR [edx+0xc]
  4137c4:	mov    ecx,DWORD PTR [ebp-0x14]
  4137c7:	inc    DWORD PTR [ebp-0xc]
  4137ca:	add    ecx,0x8
  4137cd:	add    edi,ebx
  4137cf:	mov    DWORD PTR [ebp-0x14],ecx
  4137d2:	cmp    DWORD PTR [ebp-0xc],edi
  4137d5:	jb     0x413777
  4137d7:	mov    ecx,DWORD PTR [ebp-0x18]
  4137da:	movzx  edx,WORD PTR [eax+0xe]
  4137de:	movzx  edi,WORD PTR [eax+0xc]
  4137e2:	inc    DWORD PTR [ebp-0x10]
  4137e5:	add    ecx,0x8
  4137e8:	add    edx,edi
  4137ea:	mov    DWORD PTR [ebp-0x18],ecx
  4137ed:	cmp    DWORD PTR [ebp-0x10],edx
  4137f0:	jb     0x413757
  4137f6:	pop    edi
  4137f7:	pop    ebx
  4137f8:	xor    eax,eax
  4137fa:	inc    eax
  4137fb:	jmp    0x4137ff
  4137fd:	xor    eax,eax
  4137ff:	pop    esi
  413800:	leave  
  413801:	ret    
  413802:	push   ebp
  413803:	mov    ebp,esp
  413805:	mov    ecx,DWORD PTR [ecx+0x190]
  41380b:	mov    eax,DWORD PTR [ebp+0xc]
  41380e:	sub    esp,0x10
  413811:	push   ebx
  413812:	xor    ebx,ebx
  413814:	push   esi
  413815:	push   edi
  413816:	cmp    DWORD PTR [ecx],ebx
  413818:	je     0x4138a0
  41381e:	cmp    eax,ebx
  413820:	je     0x4138a0
  413822:	cmp    DWORD PTR [eax+0x78],ebx
  413825:	jne    0x41382c
  413827:	xor    eax,eax
  413829:	inc    eax
  41382a:	jmp    0x4138a2
  41382c:	mov    eax,DWORD PTR [eax+0x78]
  41382f:	add    eax,DWORD PTR [ebp+0x8]
  413832:	mov    ecx,DWORD PTR [eax+0x1c]
  413835:	mov    edx,DWORD PTR [eax+0x24]
  413838:	mov    esi,DWORD PTR [eax+0x14]
  41383b:	mov    edi,DWORD PTR [eax+0x18]
  41383e:	add    ecx,DWORD PTR [ebp+0x8]
  413841:	add    edx,DWORD PTR [ebp+0x8]
  413844:	mov    DWORD PTR [ebp-0x4],esi
  413847:	cmp    esi,edi
  413849:	ja     0x41384e
  41384b:	mov    DWORD PTR [ebp-0x4],edi
  41384e:	mov    DWORD PTR [ebp-0x8],ebx
  413851:	cmp    DWORD PTR [ebp-0x4],ebx
  413854:	jbe    0x413827
  413856:	cmp    ebx,DWORD PTR [eax+0x14]
  413859:	jae    0x413861
  41385b:	movzx  esi,WORD PTR [edx+ebx*2]
  41385f:	jmp    0x413863
  413861:	mov    esi,ebx
  413863:	lea    esi,[ecx+esi*4]
  413866:	mov    edi,DWORD PTR [esi]
  413868:	test   edi,edi
  41386a:	je     0x413895
  41386c:	add    edi,DWORD PTR [ebp+0x8]
  41386f:	mov    DWORD PTR [ebp-0x10],edi
  413872:	cmp    edi,eax
  413874:	jbe    0x413886
  413876:	mov    ebx,DWORD PTR [ebp+0xc]
  413879:	mov    ebx,DWORD PTR [ebx+0x7c]
  41387c:	add    ebx,eax
  41387e:	cmp    edi,ebx
  413880:	jae    0x413886
  413882:	mov    esi,DWORD PTR [esi]
  413884:	jmp    0x41388e
  413886:	sub    edi,DWORD PTR [ebp+0x8]
  413889:	mov    DWORD PTR [esi],edi
  41388b:	mov    esi,DWORD PTR [ebp-0x10]
  41388e:	test   esi,esi
  413890:	je     0x4138a0
  413892:	mov    ebx,DWORD PTR [ebp-0x8]
  413895:	inc    ebx
  413896:	mov    DWORD PTR [ebp-0x8],ebx
  413899:	cmp    ebx,DWORD PTR [ebp-0x4]
  41389c:	jb     0x413856
  41389e:	jmp    0x413827
  4138a0:	xor    eax,eax
  4138a2:	pop    edi
  4138a3:	pop    esi
  4138a4:	pop    ebx
  4138a5:	leave  
  4138a6:	ret    0x8
  4138a9:	push   ebp
  4138aa:	mov    ebp,esp
  4138ac:	sub    esp,0x2c
  4138af:	mov    edx,0xf89c85b5
  4138b4:	mov    DWORD PTR [ebp-0x4],edx
  4138b7:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  4138be:	mov    eax,DWORD PTR [ebp-0x4]
  4138c1:	mov    ecx,DWORD PTR [ebp-0x4]
  4138c4:	mov    ecx,DWORD PTR [ebp-0x4]
  4138c7:	mov    ecx,DWORD PTR [ebp-0x4]
  4138ca:	mov    ecx,DWORD PTR [ebp-0x4]
  4138cd:	mov    ecx,DWORD PTR [ebp-0x4]
  4138d0:	push   ebx
  4138d1:	mov    ebx,DWORD PTR [ebp+0x10]
  4138d4:	push   esi
  4138d5:	mov    esi,0x7510896
  4138da:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  4138e1:	mov    ecx,DWORD PTR [ebp-0x4]
  4138e4:	mov    ebx,DWORD PTR [ebx+0x190]
  4138ea:	push   edi
  4138eb:	mov    edi,0x3272dd
  4138f0:	xor    ecx,esi
  4138f2:	xor    eax,esi
  4138f4:	add    eax,edi
  4138f6:	add    ecx,edi
  4138f8:	mov    DWORD PTR [ebp-0x18],eax
  4138fb:	cmp    ecx,DWORD PTR [ebx]
  4138fd:	je     0x413b7e
  413903:	mov    ebx,DWORD PTR [ebp-0x4]
  413906:	mov    ecx,DWORD PTR [ebp+0xc]
  413909:	xor    ebx,esi
  41390b:	add    ebx,edi
  41390d:	cmp    ebx,ecx
  41390f:	je     0x413b7e
  413915:	mov    ebx,DWORD PTR [ebp-0x4]
  413918:	mov    ecx,DWORD PTR [ecx+0x80]
  41391e:	xor    ebx,esi
  413920:	add    ebx,edi
  413922:	cmp    ecx,ebx
  413924:	je     0x413b79
  41392a:	add    ecx,DWORD PTR [ebp+0x8]
  41392d:	mov    DWORD PTR [ebp-0x2c],ecx
  413930:	mov    ebx,edx
  413932:	xor    ebx,esi
  413934:	add    ebx,edi
  413936:	mov    DWORD PTR [ebp-0x10],ebx
  413939:	mov    ebx,DWORD PTR [ebp-0x10]
  41393c:	cmp    ebx,edx
  41393e:	je     0x413952
  413940:	mov    edx,DWORD PTR [ebp-0x10]
  413943:	mov    ebx,DWORD PTR [ebp-0x4]
  413946:	imul   edx,edx,0x14
  413949:	xor    ebx,esi
  41394b:	add    ebx,edi
  41394d:	cmp    DWORD PTR [edx+ecx*1],ebx
  413950:	jne    0x413969
  413952:	mov    edx,DWORD PTR [ebp-0x10]
  413955:	mov    ebx,DWORD PTR [ebp-0x4]
  413958:	imul   edx,edx,0x14
  41395b:	xor    ebx,esi
  41395d:	add    ebx,edi
  41395f:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  413963:	je     0x413b6b
  413969:	mov    eax,DWORD PTR [ebp-0x4]
  41396c:	mov    ebx,DWORD PTR [ebp-0x4]
  41396f:	mov    eax,DWORD PTR [ebp-0x10]
  413972:	imul   eax,eax,0x14
  413975:	add    eax,ecx
  413977:	mov    ecx,DWORD PTR [eax+0x10]
  41397a:	add    ecx,DWORD PTR [ebp+0x8]
  41397d:	xor    ebx,esi
  41397f:	mov    DWORD PTR [ebp-0x1c],ecx
  413982:	mov    ecx,DWORD PTR [ebp-0x4]
  413985:	mov    edx,DWORD PTR [ebp-0x4]
  413988:	xor    ecx,esi
  41398a:	add    ecx,edi
  41398c:	xor    edx,esi
  41398e:	mov    DWORD PTR [ebp-0x24],ecx
  413991:	mov    ecx,DWORD PTR [eax]
  413993:	add    edx,edi
  413995:	add    ebx,edi
  413997:	cmp    ecx,edx
  413999:	je     0x4139a1
  41399b:	add    ecx,DWORD PTR [ebp+0x8]
  41399e:	mov    DWORD PTR [ebp-0x24],ecx
  4139a1:	mov    ecx,DWORD PTR [ebp-0x4]
  4139a4:	xor    ecx,esi
  4139a6:	add    ecx,DWORD PTR [eax+0xc]
  4139a9:	mov    eax,DWORD PTR [ebp+0x8]
  4139ac:	lea    eax,[ecx+eax*1+0x3272dd]
  4139b3:	mov    DWORD PTR [ebp+0xc],eax
  4139b6:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4139bd:	mov    eax,DWORD PTR [ebp+0x10]
  4139c0:	push   DWORD PTR [ebp+0xc]
  4139c3:	mov    eax,DWORD PTR [eax+0x1d8]
  4139c9:	call   DWORD PTR [eax]
  4139cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4139ce:	xor    ecx,esi
  4139d0:	add    ecx,edi
  4139d2:	mov    DWORD PTR [ebp-0xc],eax
  4139d5:	cmp    ecx,eax
  4139d7:	jne    0x4139eb
  4139d9:	mov    eax,DWORD PTR [ebp+0x10]
  4139dc:	push   DWORD PTR [ebp+0xc]
  4139df:	mov    eax,DWORD PTR [eax+0x1d8]
  4139e5:	call   DWORD PTR [eax+0xc]
  4139e8:	mov    DWORD PTR [ebp-0xc],eax
  4139eb:	mov    DWORD PTR [ebp-0x20],0x7f661b0a
  4139f2:	mov    DWORD PTR [ebp-0x20],0xf89c999a
  4139f9:	mov    eax,DWORD PTR [ebp-0x4]
  4139fc:	xor    eax,esi
  4139fe:	add    eax,edi
  413a00:	cmp    eax,DWORD PTR [ebp-0xc]
  413a03:	jne    0x413a28
  413a05:	mov    eax,DWORD PTR [ebp-0x8]
  413a08:	mov    ecx,DWORD PTR [ebp-0x20]
  413a0b:	xor    eax,esi
  413a0d:	xor    ecx,esi
  413a0f:	lea    ebx,[ebx+eax*1+0x3272dd]
  413a16:	mov    eax,DWORD PTR [ebp+0x10]
  413a19:	mov    eax,DWORD PTR [eax+0x1d8]
  413a1f:	add    ecx,edi
  413a21:	imul   ecx,ebx
  413a24:	push   ecx
  413a25:	call   DWORD PTR [eax+0x24]
  413a28:	mov    eax,DWORD PTR [ebp-0x4]
  413a2b:	xor    eax,esi
  413a2d:	add    eax,edi
  413a2f:	cmp    eax,DWORD PTR [ebp-0xc]
  413a32:	jne    0x413a43
  413a34:	mov    eax,DWORD PTR [ebp-0x28]
  413a37:	xor    eax,esi
  413a39:	add    eax,edi
  413a3b:	cmp    ebx,eax
  413a3d:	jbe    0x4139bd
  413a43:	mov    eax,DWORD PTR [ebp-0x4]
  413a46:	xor    eax,esi
  413a48:	add    eax,edi
  413a4a:	cmp    eax,DWORD PTR [ebp-0xc]
  413a4d:	jne    0x413a66
  413a4f:	mov    eax,DWORD PTR [ebp-0x8]
  413a52:	mov    ecx,DWORD PTR [ebp-0x18]
  413a55:	xor    eax,esi
  413a57:	lea    eax,[ecx+eax*1+0x3272dd]
  413a5e:	mov    DWORD PTR [ebp-0x18],eax
  413a61:	jmp    0x413b55
  413a66:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  413a6d:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  413a74:	mov    ebx,DWORD PTR [ebp-0x4]
  413a77:	xor    ebx,esi
  413a79:	add    ebx,edi
  413a7b:	jmp    0x413b42
  413a80:	mov    eax,DWORD PTR [ebp-0x4]
  413a83:	xor    eax,esi
  413a85:	add    eax,edi
  413a87:	mov    DWORD PTR [ebp-0x14],eax
  413a8a:	mov    eax,DWORD PTR [ebp-0x4]
  413a8d:	xor    eax,esi
  413a8f:	add    eax,edi
  413a91:	mov    DWORD PTR [ebp+0xc],eax
  413a94:	mov    ecx,DWORD PTR [ebp-0x4]
  413a97:	mov    eax,DWORD PTR [ebp-0x24]
  413a9a:	xor    ecx,esi
  413a9c:	add    ecx,edi
  413a9e:	cmp    ecx,eax
  413aa0:	je     0x413aa8
  413aa2:	mov    eax,DWORD PTR [eax+ebx*4]
  413aa5:	mov    DWORD PTR [ebp-0x14],eax
  413aa8:	mov    eax,DWORD PTR [ebp-0x1c]
  413aab:	mov    eax,DWORD PTR [eax+ebx*4]
  413aae:	mov    DWORD PTR [ebp+0xc],eax
  413ab1:	mov    eax,DWORD PTR [ebp-0x4]
  413ab4:	mov    ecx,DWORD PTR [ebp-0x14]
  413ab7:	xor    eax,esi
  413ab9:	add    eax,edi
  413abb:	cmp    eax,ecx
  413abd:	je     0x413ae8
  413abf:	mov    eax,DWORD PTR [ebp-0x4]
  413ac2:	mov    ecx,DWORD PTR [ebp-0x14]
  413ac5:	xor    eax,esi
  413ac7:	add    eax,edi
  413ac9:	shr    ecx,0x1f
  413acc:	cmp    eax,ecx
  413ace:	je     0x413ae8
  413ad0:	mov    ecx,DWORD PTR [ebp-0x14]
  413ad3:	mov    eax,DWORD PTR [ebp+0x10]
  413ad6:	mov    eax,DWORD PTR [eax+0x1d8]
  413adc:	movzx  ecx,cx
  413adf:	push   ecx
  413ae0:	push   DWORD PTR [ebp-0xc]
  413ae3:	call   DWORD PTR [eax+0x8]
  413ae6:	jmp    0x413b01
  413ae8:	mov    eax,DWORD PTR [ebp+0xc]
  413aeb:	add    eax,DWORD PTR [ebp+0x8]
  413aee:	mov    ecx,DWORD PTR [ebp+0x10]
  413af1:	mov    ecx,DWORD PTR [ecx+0x1d8]
  413af7:	add    eax,0x2
  413afa:	push   eax
  413afb:	push   DWORD PTR [ebp-0xc]
  413afe:	call   DWORD PTR [ecx+0x8]
  413b01:	mov    DWORD PTR [ebp+0xc],eax
  413b04:	mov    eax,DWORD PTR [ebp-0x4]
  413b07:	mov    ecx,DWORD PTR [ebp+0xc]
  413b0a:	xor    eax,esi
  413b0c:	add    eax,edi
  413b0e:	cmp    eax,ecx
  413b10:	mov    eax,DWORD PTR [ebp-0x8]
  413b13:	jne    0x413b26
  413b15:	mov    ecx,DWORD PTR [ebp-0x18]
  413b18:	xor    eax,esi
  413b1a:	lea    eax,[ecx+eax*1+0x3272dd]
  413b21:	mov    DWORD PTR [ebp-0x18],eax
  413b24:	jmp    0x413b36
  413b26:	mov    ecx,DWORD PTR [ebp+0xc]
  413b29:	xor    eax,esi
  413b2b:	add    eax,edi
  413b2d:	imul   eax,ecx
  413b30:	mov    ecx,DWORD PTR [ebp-0x1c]
  413b33:	mov    DWORD PTR [ecx+ebx*4],eax
  413b36:	mov    eax,DWORD PTR [ebp-0x8]
  413b39:	xor    eax,esi
  413b3b:	lea    ebx,[ebx+eax*1+0x3272dd]
  413b42:	mov    eax,DWORD PTR [ebp-0x4]
  413b45:	mov    ecx,DWORD PTR [ebp-0x1c]
  413b48:	xor    eax,esi
  413b4a:	add    eax,edi
  413b4c:	cmp    DWORD PTR [ecx+ebx*4],eax
  413b4f:	jne    0x413a80
  413b55:	mov    edx,DWORD PTR [ebp-0x10]
  413b58:	mov    eax,DWORD PTR [ebp-0x18]
  413b5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  413b5e:	sub    edx,0x3272dc
  413b64:	xor    edx,esi
  413b66:	jmp    0x413930
  413b6b:	mov    ecx,DWORD PTR [ebp-0x4]
  413b6e:	xor    ecx,esi
  413b70:	add    ecx,edi
  413b72:	cmp    eax,ecx
  413b74:	mov    eax,DWORD PTR [ebp-0x4]
  413b77:	jne    0x413b81
  413b79:	mov    eax,DWORD PTR [ebp-0x8]
  413b7c:	jmp    0x413b81
  413b7e:	mov    eax,DWORD PTR [ebp-0x4]
  413b81:	xor    eax,esi
  413b83:	add    eax,edi
  413b85:	pop    edi
  413b86:	pop    esi
  413b87:	pop    ebx
  413b88:	leave  
  413b89:	ret    0xc
  413b8c:	push   ebp
  413b8d:	mov    ebp,esp
  413b8f:	sub    esp,0x28
  413b92:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  413b99:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  413ba0:	mov    eax,DWORD PTR [ebp+0xc]
  413ba3:	mov    DWORD PTR [ebp+0xc],eax
  413ba6:	push   esi
  413ba7:	mov    eax,eax
  413ba9:	mov    eax,DWORD PTR [ebp-0x4]
  413bac:	mov    esi,DWORD PTR [ebp+0x8]
  413baf:	mov    ecx,0x7510896
  413bb4:	xor    eax,ecx
  413bb6:	mov    edx,0x3272dd
  413bbb:	add    eax,edx
  413bbd:	cmp    esi,eax
  413bbf:	je     0x413ce6
  413bc5:	mov    eax,DWORD PTR [ebp+0x8]
  413bc8:	mov    esi,DWORD PTR [ebp+0x8]
  413bcb:	add    esi,DWORD PTR [eax+0x3c]
  413bce:	push   edi
  413bcf:	mov    DWORD PTR [ebp+0xc],esi
  413bd2:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  413bd9:	mov    eax,DWORD PTR [ebp-0x1c]
  413bdc:	mov    esi,DWORD PTR [ebp-0x4]
  413bdf:	mov    edi,DWORD PTR [ebp+0xc]
  413be2:	xor    esi,ecx
  413be4:	xor    eax,ecx
  413be6:	add    esi,edx
  413be8:	cmp    DWORD PTR [edi+eax*8+0x1939760],esi
  413bef:	je     0x413ce0
  413bf5:	mov    esi,DWORD PTR [ebp+0xc]
  413bf8:	mov    eax,DWORD PTR [ebp+0x8]
  413bfb:	add    eax,DWORD PTR [esi+0xa0]
  413c01:	mov    esi,DWORD PTR [ebp+0x8]
  413c04:	mov    edi,DWORD PTR [ebp+0xc]
  413c07:	sub    esi,DWORD PTR [edi+0x34]
  413c0a:	mov    edi,DWORD PTR [ebp-0x4]
  413c0d:	xor    edi,ecx
  413c0f:	add    edi,edx
  413c11:	mov    DWORD PTR [ebp-0x24],esi
  413c14:	cmp    esi,edi
  413c16:	je     0x413ce0
  413c1c:	mov    esi,DWORD PTR [ebp-0x4]
  413c1f:	xor    esi,ecx
  413c21:	add    esi,edx
  413c23:	mov    DWORD PTR [ebp-0x8],esi
  413c26:	push   ebx
  413c27:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  413c2e:	jmp    0x413cca
  413c33:	mov    esi,DWORD PTR [ebp-0x4]
  413c36:	xor    esi,ecx
  413c38:	lea    edi,[ebx-0x8]
  413c3b:	add    esi,edx
  413c3d:	shr    edi,1
  413c3f:	cmp    esi,edi
  413c41:	jae    0x413cb0
  413c43:	sub    edi,esi
  413c45:	lea    ebx,[eax+esi*2+0x8]
  413c49:	mov    DWORD PTR [ebp-0x18],edi
  413c4c:	movzx  esi,WORD PTR [ebx]
  413c4f:	and    esi,0xfff
  413c55:	mov    DWORD PTR [ebp-0x14],esi
  413c58:	mov    edi,DWORD PTR [ebp-0x14]
  413c5b:	mov    esi,DWORD PTR [eax]
  413c5d:	sub    esi,edx
  413c5f:	add    edi,esi
  413c61:	movzx  esi,WORD PTR [ebx]
  413c64:	shr    esi,0xc
  413c67:	xor    edi,ecx
  413c69:	mov    DWORD PTR [ebp-0x20],edi
  413c6c:	mov    DWORD PTR [ebp-0x14],esi
  413c6f:	mov    esi,DWORD PTR [ebp-0x20]
  413c72:	mov    edi,DWORD PTR [ebp+0x8]
  413c75:	xor    esi,ecx
  413c77:	lea    esi,[esi+edi*1+0x3272dd]
  413c7e:	mov    DWORD PTR [ebp-0x20],esi
  413c81:	mov    esi,DWORD PTR [ebp-0x10]
  413c84:	mov    edi,DWORD PTR [ebp-0x14]
  413c87:	xor    esi,ecx
  413c89:	add    esi,edx
  413c8b:	cmp    edi,esi
  413c8d:	jne    0x413ca5
  413c8f:	mov    esi,DWORD PTR [ebp-0x10]
  413c92:	mov    edi,DWORD PTR [ebp-0x14]
  413c95:	xor    esi,ecx
  413c97:	add    esi,edx
  413c99:	cmp    edi,esi
  413c9b:	jne    0x413ca5
  413c9d:	mov    esi,DWORD PTR [ebp-0x20]
  413ca0:	mov    edi,DWORD PTR [ebp-0x24]
  413ca3:	add    DWORD PTR [esi],edi
  413ca5:	add    ebx,0x2
  413ca8:	dec    DWORD PTR [ebp-0x18]
  413cab:	jne    0x413c4c
  413cad:	mov    ebx,DWORD PTR [ebp-0xc]
  413cb0:	add    DWORD PTR [ebp-0x8],ebx
  413cb3:	mov    esi,DWORD PTR [ebp-0x1c]
  413cb6:	mov    edi,DWORD PTR [ebp-0x8]
  413cb9:	mov    ebx,DWORD PTR [ebp+0xc]
  413cbc:	xor    esi,ecx
  413cbe:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939764]
  413cc5:	jae    0x413cdf
  413cc7:	add    eax,DWORD PTR [ebp-0xc]
  413cca:	mov    esi,DWORD PTR [ebp-0x4]
  413ccd:	mov    ebx,DWORD PTR [eax+0x4]
  413cd0:	xor    esi,ecx
  413cd2:	add    esi,edx
  413cd4:	mov    DWORD PTR [ebp-0xc],ebx
  413cd7:	cmp    ebx,esi
  413cd9:	jne    0x413c33
  413cdf:	pop    ebx
  413ce0:	mov    eax,DWORD PTR [ebp-0x28]
  413ce3:	pop    edi
  413ce4:	jmp    0x413ce9
  413ce6:	mov    eax,DWORD PTR [ebp-0x4]
  413ce9:	xor    eax,ecx
  413ceb:	add    eax,edx
  413ced:	pop    esi
  413cee:	leave  
  413cef:	ret    0x8
  413cf2:	push   ebp
  413cf3:	mov    ebp,esp
  413cf5:	sub    esp,0x54
  413cf8:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  413cff:	mov    DWORD PTR [ebp-0x24],0xf89c85b2
  413d06:	mov    eax,DWORD PTR [ebp-0x4]
  413d09:	push   ebx
  413d0a:	push   esi
  413d0b:	mov    esi,0x7510896
  413d10:	xor    eax,esi
  413d12:	mov    ebx,0x3272dd
  413d17:	add    eax,ebx
  413d19:	mov    DWORD PTR [ebp-0x18],eax
  413d1c:	mov    eax,DWORD PTR [ebp-0x4]
  413d1f:	xor    eax,esi
  413d21:	add    eax,ebx
  413d23:	mov    DWORD PTR [ebp-0x20],eax
  413d26:	push   edi
  413d27:	mov    edi,DWORD PTR [ebp+0x20]
  413d2a:	mov    eax,DWORD PTR [ebp-0x10]
  413d2d:	mov    ecx,DWORD PTR [ebp-0x10]
  413d30:	xor    eax,ecx
  413d32:	mov    DWORD PTR [ebp-0x10],eax
  413d35:	add    DWORD PTR [ebp-0x10],0xf89cb5b5
  413d3c:	mov    eax,DWORD PTR [ebp-0x8]
  413d3f:	mov    ecx,DWORD PTR [ebp-0x8]
  413d42:	xor    eax,ecx
  413d44:	mov    DWORD PTR [ebp-0x8],eax
  413d47:	add    DWORD PTR [ebp-0x8],0xf89c85f5
  413d4e:	mov    eax,DWORD PTR [ebp-0xc]
  413d51:	mov    ecx,DWORD PTR [ebp-0xc]
  413d54:	xor    eax,ecx
  413d56:	mov    DWORD PTR [ebp-0xc],eax
  413d59:	add    DWORD PTR [ebp-0xc],0xf89c85b1
  413d60:	mov    eax,DWORD PTR [ebp-0x14]
  413d63:	mov    ecx,DWORD PTR [ebp-0x14]
  413d66:	xor    eax,ecx
  413d68:	mov    DWORD PTR [ebp-0x14],eax
  413d6b:	add    DWORD PTR [ebp-0x14],0xf89f05b5
  413d72:	mov    eax,0x9588
  413d77:	mov    WORD PTR [ebp+0x20],ax
  413d7b:	mov    eax,DWORD PTR [ebp+0x8]
  413d7e:	test   eax,eax
  413d80:	je     0x414165
  413d86:	mov    eax,DWORD PTR [ebp+0xc]
  413d89:	test   eax,eax
  413d8b:	je     0x414165
  413d91:	mov    eax,DWORD PTR [ebp+0x18]
  413d94:	test   eax,eax
  413d96:	je     0x414165
  413d9c:	mov    ax,WORD PTR [ebp+0x20]
  413da0:	mov    ecx,0x8a89
  413da5:	xor    ax,cx
  413da8:	mov    ecx,0x3b4c
  413dad:	add    ax,cx
  413db0:	mov    ecx,DWORD PTR [ebp+0x8]
  413db3:	cmp    WORD PTR [ecx],ax
  413db6:	jne    0x414165
  413dbc:	mov    eax,DWORD PTR [ebp-0x4]
  413dbf:	mov    ecx,DWORD PTR [ebp+0x8]
  413dc2:	mov    eax,DWORD PTR [ebp+0x8]
  413dc5:	add    eax,DWORD PTR [ecx+0x3c]
  413dc8:	mov    DWORD PTR [ebp+0xc],eax
  413dcb:	mov    eax,DWORD PTR [eax+0x50]
  413dce:	test   eax,eax
  413dd0:	je     0x414165
  413dd6:	mov    DWORD PTR [ebp-0x2c],0xf88c85b5
  413ddd:	mov    eax,DWORD PTR [ebp-0x2c]
  413de0:	xor    eax,esi
  413de2:	add    eax,ebx
  413de4:	mov    DWORD PTR [ebp-0x2c],eax
  413de7:	mov    eax,DWORD PTR [ebp-0x4]
  413dea:	mov    eax,DWORD PTR [edi+0x190]
  413df0:	mov    ecx,DWORD PTR [eax]
  413df2:	mov    ecx,DWORD PTR [ecx+0x3c]
  413df5:	add    ecx,DWORD PTR [eax]
  413df7:	mov    eax,DWORD PTR [ebp-0x4]
  413dfa:	mov    eax,DWORD PTR [edi+0x18c]
  413e00:	mov    edx,DWORD PTR [eax]
  413e02:	mov    DWORD PTR [ebp-0x1c],ecx
  413e05:	mov    DWORD PTR [ebp+0x20],edx
  413e08:	cmp    edx,edx
  413e0a:	jne    0x413e3f
  413e0c:	mov    eax,DWORD PTR [edi+0x1d8]
  413e12:	lea    edx,[ebp-0x18]
  413e15:	push   edx
  413e16:	mov    edx,DWORD PTR [ebp-0x8]
  413e19:	xor    edx,esi
  413e1b:	add    edx,ebx
  413e1d:	push   edx
  413e1e:	push   DWORD PTR [ecx+0x50]
  413e21:	push   DWORD PTR [ebp+0x20]
  413e24:	call   DWORD PTR [eax+0x1c]
  413e27:	mov    ecx,DWORD PTR [ebp-0x1c]
  413e2a:	mov    eax,DWORD PTR [ecx+0x54]
  413e2d:	mov    ecx,DWORD PTR [ecx+0x50]
  413e30:	sub    ecx,eax
  413e32:	add    eax,DWORD PTR [ebp+0x20]
  413e35:	push   ecx
  413e36:	push   eax
  413e37:	call   0x414779
  413e3c:	mov    edx,DWORD PTR [ebp+0x20]
  413e3f:	mov    eax,DWORD PTR [edi+0x194]
  413e45:	mov    DWORD PTR [eax],edx
  413e47:	mov    eax,DWORD PTR [ebp+0xc]
  413e4a:	push   DWORD PTR [eax+0x54]
  413e4d:	push   DWORD PTR [ebp+0x8]
  413e50:	push   edx
  413e51:	call   0x414620
  413e56:	mov    ecx,DWORD PTR [ebp+0x20]
  413e59:	mov    eax,DWORD PTR [ecx+0x3c]
  413e5c:	add    eax,ecx
  413e5e:	movzx  ecx,WORD PTR [eax+0x14]
  413e62:	lea    ecx,[ecx+eax*1+0x18]
  413e66:	mov    DWORD PTR [ebp+0x18],ecx
  413e69:	mov    ecx,DWORD PTR [ebp-0x4]
  413e6c:	movzx  edx,WORD PTR [eax+0x6]
  413e70:	xor    ecx,esi
  413e72:	add    ecx,ebx
  413e74:	mov    DWORD PTR [ebp+0xc],eax
  413e77:	cmp    edx,ecx
  413e79:	je     0x413f27
  413e7f:	mov    ecx,DWORD PTR [ebp-0x4]
  413e82:	xor    ecx,esi
  413e84:	add    ecx,ebx
  413e86:	mov    DWORD PTR [ebp-0x20],ecx
  413e89:	mov    ecx,DWORD PTR [ebp-0x24]
  413e8c:	movzx  edx,WORD PTR [eax+0x6]
  413e90:	xor    ecx,esi
  413e92:	sub    edx,ecx
  413e94:	sub    edx,ebx
  413e96:	cmp    DWORD PTR [ebp-0x20],edx
  413e99:	ja     0x413f27
  413e9f:	mov    edx,DWORD PTR [ebp+0x18]
  413ea2:	add    edx,0x8
  413ea5:	mov    DWORD PTR [ebp+0x18],edx
  413ea8:	jmp    0x413ead
  413eaa:	mov    edx,DWORD PTR [ebp+0x18]
  413ead:	mov    eax,DWORD PTR [eax+0x38]
  413eb0:	lea    ecx,[eax-0x1]
  413eb3:	mov    DWORD PTR [ebp-0x30],eax
  413eb6:	mov    eax,DWORD PTR [edx]
  413eb8:	test   ecx,eax
  413eba:	je     0x413ec3
  413ebc:	not    ecx
  413ebe:	and    eax,ecx
  413ec0:	add    eax,DWORD PTR [ebp-0x30]
  413ec3:	push   eax
  413ec4:	mov    eax,DWORD PTR [edx+0x4]
  413ec7:	add    eax,DWORD PTR [ebp+0x20]
  413eca:	push   eax
  413ecb:	call   0x414779
  413ed0:	mov    edx,DWORD PTR [ebp-0x4]
  413ed3:	mov    eax,DWORD PTR [ebp+0x18]
  413ed6:	mov    ecx,DWORD PTR [eax+0x8]
  413ed9:	xor    edx,esi
  413edb:	add    edx,ebx
  413edd:	cmp    ecx,edx
  413edf:	je     0x413ef8
  413ee1:	push   ecx
  413ee2:	mov    ecx,DWORD PTR [ebp+0x8]
  413ee5:	add    ecx,DWORD PTR [eax+0xc]
  413ee8:	mov    eax,DWORD PTR [eax+0x4]
  413eeb:	add    eax,DWORD PTR [ebp+0x20]
  413eee:	push   ecx
  413eef:	push   eax
  413ef0:	call   0x414620
  413ef5:	mov    eax,DWORD PTR [ebp+0x18]
  413ef8:	mov    ecx,DWORD PTR [ebp-0x24]
  413efb:	mov    edx,DWORD PTR [ebp-0x20]
  413efe:	add    eax,0x28
  413f01:	xor    ecx,esi
  413f03:	lea    ecx,[edx+ecx*1+0x3272dd]
  413f0a:	mov    edx,DWORD PTR [ebp+0xc]
  413f0d:	mov    DWORD PTR [ebp+0x18],eax
  413f10:	mov    eax,DWORD PTR [ebp-0x24]
  413f13:	movzx  edx,WORD PTR [edx+0x6]
  413f17:	xor    eax,esi
  413f19:	sub    edx,eax
  413f1b:	mov    eax,DWORD PTR [ebp+0xc]
  413f1e:	sub    edx,ebx
  413f20:	mov    DWORD PTR [ebp-0x20],ecx
  413f23:	cmp    ecx,edx
  413f25:	jbe    0x413eaa
  413f27:	mov    ecx,DWORD PTR [ebp-0x4]
  413f2a:	mov    edx,DWORD PTR [edi+0x18c]
  413f30:	xor    ecx,esi
  413f32:	add    ecx,ebx
  413f34:	mov    DWORD PTR [ebp+0x18],ecx
  413f37:	mov    ecx,DWORD PTR [ebp+0x20]
  413f3a:	cmp    ecx,DWORD PTR [edx]
  413f3c:	jne    0x413f65
  413f3e:	mov    eax,DWORD PTR [edi+0x1d8]
  413f44:	lea    edx,[ebp-0x18]
  413f47:	push   edx
  413f48:	mov    edx,DWORD PTR [ebp-0xc]
  413f4b:	xor    edx,esi
  413f4d:	add    edx,ebx
  413f4f:	push   edx
  413f50:	mov    edx,DWORD PTR [ebp-0x1c]
  413f53:	push   DWORD PTR [edx+0x54]
  413f56:	push   ecx
  413f57:	call   DWORD PTR [eax+0x1c]
  413f5a:	test   eax,eax
  413f5c:	je     0x414156
  413f62:	mov    eax,DWORD PTR [ebp+0xc]
  413f65:	mov    ecx,DWORD PTR [edi+0x1c8]
  413f6b:	mov    ecx,DWORD PTR [ecx]
  413f6d:	xor    ecx,esi
  413f6f:	add    ecx,ebx
  413f71:	je     0x414081
  413f77:	and    DWORD PTR [ebp-0x28],0x0
  413f7b:	mov    eax,0x4fab
  413f80:	mov    WORD PTR [ebp-0x3c],ax
  413f84:	add    eax,0xfffffff6
  413f87:	mov    WORD PTR [ebp-0x3a],ax
  413f8b:	mov    eax,0x4f91
  413f90:	mov    WORD PTR [ebp-0x38],ax
  413f94:	add    eax,0x18
  413f97:	and    DWORD PTR [ebp+0x8],0x0
  413f9b:	mov    ecx,eax
  413f9d:	mov    WORD PTR [ebp-0x34],ax
  413fa1:	mov    eax,0x4e3d
  413fa6:	mov    WORD PTR [ebp-0x36],cx
  413faa:	mov    WORD PTR [ebp-0x32],ax
  413fae:	mov    eax,DWORD PTR [ebp+0x8]
  413fb1:	lea    eax,[ebp+eax*2-0x3c]
  413fb5:	mov    ecx,0x8a89
  413fba:	xor    cx,WORD PTR [eax]
  413fbd:	mov    edx,0x3b4c
  413fc2:	add    cx,dx
  413fc5:	inc    DWORD PTR [ebp+0x8]
  413fc8:	cmp    DWORD PTR [ebp+0x8],0x6
  413fcc:	mov    WORD PTR [eax],cx
  413fcf:	jb     0x413fae
  413fd1:	mov    DWORD PTR [ebp-0x54],0x200c1e26
  413fd8:	mov    DWORD PTR [ebp-0x50],0x211e0805
  413fdf:	mov    DWORD PTR [ebp-0x4c],0xf50c0e08
  413fe6:	mov    DWORD PTR [ebp-0x48],0x3d0c0b20
  413fed:	mov    DWORD PTR [ebp-0x44],0x10c1e1e
  413ff4:	mov    WORD PTR [ebp-0x40],0xf0f
  413ffa:	mov    BYTE PTR [ebp-0x3e],0x7a
  413ffe:	xor    ecx,ecx
  414000:	lea    eax,[ebp+ecx*1-0x54]
  414004:	mov    dl,BYTE PTR [eax]
  414006:	xor    dl,0x71
  414009:	sub    dl,0xb
  41400c:	inc    ecx
  41400d:	mov    BYTE PTR [eax],dl
  41400f:	cmp    ecx,0x17
  414012:	jb     0x414000
  414014:	mov    eax,DWORD PTR [edi+0x1d8]
  41401a:	lea    ecx,[ebp-0x3c]
  41401d:	push   ecx
  41401e:	call   DWORD PTR [eax+0x4]
  414021:	mov    ecx,DWORD PTR [edi+0x1d8]
  414027:	lea    edx,[ebp-0x54]
  41402a:	push   edx
  41402b:	push   eax
  41402c:	call   DWORD PTR [ecx+0x8]
  41402f:	lea    ecx,[ebp-0x28]
  414032:	push   ecx
  414033:	mov    ecx,DWORD PTR [edi+0x18c]
  414039:	push   DWORD PTR [ecx]
  41403b:	call   eax
  41403d:	mov    eax,DWORD PTR [ebp-0x28]
  414040:	test   eax,eax
  414042:	je     0x41407e
  414044:	mov    DWORD PTR [ebp+0x8],eax
  414047:	jmp    0x414053
  414049:	mov    eax,DWORD PTR [eax]
  41404b:	mov    DWORD PTR [ebp-0x28],eax
  41404e:	cmp    eax,DWORD PTR [ebp+0x8]
  414051:	je     0x414060
  414053:	mov    edx,DWORD PTR [eax+0x18]
  414056:	mov    ecx,DWORD PTR [edi+0x18c]
  41405c:	cmp    edx,DWORD PTR [ecx]
  41405e:	jne    0x414049
  414060:	mov    edx,DWORD PTR [eax+0x18]
  414063:	mov    ecx,DWORD PTR [edi+0x18c]
  414069:	cmp    edx,DWORD PTR [ecx]
  41406b:	jne    0x41407e
  41406d:	mov    edx,DWORD PTR [ebp-0x1c]
  414070:	mov    ecx,DWORD PTR [edi+0x190]
  414076:	mov    edx,DWORD PTR [edx+0x28]
  414079:	add    edx,DWORD PTR [ecx]
  41407b:	mov    DWORD PTR [eax+0x1c],edx
  41407e:	mov    eax,DWORD PTR [ebp+0xc]
  414081:	push   edi
  414082:	push   eax
  414083:	push   DWORD PTR [ebp+0x20]
  414086:	call   0x4138a9
  41408b:	test   eax,eax
  41408d:	je     0x414156
  414093:	push   DWORD PTR [ebp+0xc]
  414096:	mov    ecx,edi
  414098:	push   DWORD PTR [ebp+0x20]
  41409b:	call   0x413802
  4140a0:	test   eax,eax
  4140a2:	je     0x414156
  4140a8:	mov    eax,DWORD PTR [ebp+0xc]
  4140ab:	mov    edx,DWORD PTR [ebp+0x20]
  4140ae:	mov    ecx,edi
  4140b0:	call   0x4136db
  4140b5:	test   eax,eax
  4140b7:	je     0x414156
  4140bd:	push   edi
  4140be:	push   DWORD PTR [ebp+0x20]
  4140c1:	call   0x413b8c
  4140c6:	test   eax,eax
  4140c8:	je     0x414156
  4140ce:	mov    eax,DWORD PTR [edi+0x18c]
  4140d4:	mov    edx,DWORD PTR [ebp+0x20]
  4140d7:	cmp    edx,DWORD PTR [eax]
  4140d9:	jne    0x4140f5
  4140db:	mov    eax,DWORD PTR [edi+0x1d8]
  4140e1:	lea    ecx,[ebp-0x18]
  4140e4:	push   ecx
  4140e5:	push   DWORD PTR [ebp-0x18]
  4140e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4140eb:	push   DWORD PTR [ecx+0x54]
  4140ee:	push   edx
  4140ef:	call   DWORD PTR [eax+0x1c]
  4140f2:	mov    edx,DWORD PTR [ebp+0x20]
  4140f5:	mov    eax,DWORD PTR [edi+0x1c8]
  4140fb:	mov    eax,DWORD PTR [eax]
  4140fd:	xor    eax,esi
  4140ff:	add    eax,ebx
  414101:	je     0x41413a
  414103:	mov    ecx,DWORD PTR [ebp+0xc]
  414106:	mov    eax,DWORD PTR [ecx+0x28]
  414109:	mov    DWORD PTR [ebp+0x8],0xf89ca5b5
  414110:	mov    esi,DWORD PTR [ebp+0x8]
  414113:	push   DWORD PTR [ebp+0x14]
  414116:	xor    esi,0x896
  41411c:	push   DWORD PTR [ebp+0x10]
  41411f:	add    esi,0x72dd
  414125:	or     WORD PTR [ecx+0x16],si
  414129:	add    eax,edx
  41412b:	push   edx
  41412c:	call   eax
  41412e:	mov    DWORD PTR [edi+0x1d0],0xf89c85b2
  414138:	jmp    0x414144
  41413a:	mov    eax,DWORD PTR [ebp+0xc]
  41413d:	mov    eax,DWORD PTR [eax+0x28]
  414140:	add    eax,edx
  414142:	call   eax
  414144:	mov    DWORD PTR [ebp-0x20],eax
  414147:	mov    eax,DWORD PTR [ebp-0x20]
  41414a:	mov    ecx,DWORD PTR [ebp+0x1c]
  41414d:	mov    DWORD PTR [ecx],eax
  41414f:	mov    DWORD PTR [ebp+0x18],0x1
  414156:	cmp    DWORD PTR [ebp+0x18],0x0
  41415a:	jne    0x414160
  41415c:	and    DWORD PTR [ebp+0x20],0x0
  414160:	mov    eax,DWORD PTR [ebp+0x20]
  414163:	jmp    0x414167
  414165:	xor    eax,eax
  414167:	pop    edi
  414168:	pop    esi
  414169:	pop    ebx
  41416a:	leave  
  41416b:	ret    0x1c
  41416e:	push   ebp
  41416f:	mov    ebp,esp
  414171:	movzx  edx,WORD PTR [ecx+0x6]
  414175:	movzx  eax,WORD PTR [ecx+0x14]
  414179:	push   ebx
  41417a:	push   edi
  41417b:	xor    edi,edi
  41417d:	lea    eax,[eax+ecx*1+0x18]
  414181:	test   edx,edx
  414183:	je     0x4141a4
  414185:	mov    ecx,DWORD PTR [eax+0xc]
  414188:	lea    ebx,[ecx+esi*1]
  41418b:	cmp    DWORD PTR [ebp+0x8],ebx
  41418e:	jb     0x41419c
  414190:	mov    ebx,DWORD PTR [eax+0x8]
  414193:	add    ebx,ecx
  414195:	add    ebx,esi
  414197:	cmp    DWORD PTR [ebp+0x8],ebx
  41419a:	jb     0x4141a6
  41419c:	add    eax,0x28
  41419f:	inc    edi
  4141a0:	cmp    edi,edx
  4141a2:	jb     0x414185
  4141a4:	xor    eax,eax
  4141a6:	pop    edi
  4141a7:	pop    ebx
  4141a8:	pop    ebp
  4141a9:	ret    0x4
  4141ac:	push   ebp
  4141ad:	mov    ebp,esp
  4141af:	sub    esp,0x28
  4141b2:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  4141b9:	mov    DWORD PTR [ebp-0x1c],0xf89c85b2
  4141c0:	mov    DWORD PTR [ebp-0x28],0xf89c85b3
  4141c7:	mov    eax,0x4f9c
  4141cc:	mov    WORD PTR [ebp-0xc],ax
  4141d0:	mov    eax,0x4e7c
  4141d5:	mov    WORD PTR [ebp-0x4],ax
  4141d9:	mov    eax,0x4fa7
  4141de:	mov    WORD PTR [ebp-0x8],ax
  4141e2:	add    eax,0xffffffe0
  4141e5:	mov    WORD PTR [ebp-0x8],ax
  4141e9:	mov    eax,DWORD PTR [ebp+0x8]
  4141ec:	mov    DWORD PTR [ebp-0x14],eax
  4141ef:	mov    eax,DWORD PTR [ebp+0xc]
  4141f2:	mov    DWORD PTR [ebp-0x18],eax
  4141f5:	mov    eax,DWORD PTR [ebp-0x10]
  4141f8:	push   ebx
  4141f9:	mov    ecx,0x7510896
  4141fe:	xor    eax,ecx
  414200:	push   esi
  414201:	mov    esi,DWORD PTR [ebp-0x14]
  414204:	mov    edx,0x3272dd
  414209:	add    eax,edx
  41420b:	push   edi
  41420c:	cmp    esi,eax
  41420e:	je     0x41440c
  414214:	mov    eax,DWORD PTR [ebp-0x10]
  414217:	mov    esi,DWORD PTR [ebp-0x18]
  41421a:	xor    eax,ecx
  41421c:	add    eax,edx
  41421e:	cmp    esi,eax
  414220:	je     0x41440c
  414226:	mov    eax,DWORD PTR [ebp-0x10]
  414229:	xor    eax,ecx
  41422b:	add    eax,edx
  41422d:	mov    DWORD PTR [ebp-0x20],eax
  414230:	mov    eax,DWORD PTR [ebp-0x10]
  414233:	xor    eax,ecx
  414235:	add    eax,edx
  414237:	mov    DWORD PTR [ebp-0x24],eax
  41423a:	movzx  esi,WORD PTR [ebp-0x4]
  41423e:	movzx  edi,WORD PTR [ebp-0xc]
  414242:	mov    eax,0x8a89
  414247:	xor    si,ax
  41424a:	mov    ebx,0x8a89
  41424f:	xor    di,bx
  414252:	mov    eax,0x3b4c
  414257:	add    si,ax
  41425a:	add    di,ax
  41425d:	sub    edi,esi
  41425f:	mov    WORD PTR [ebp-0xc],di
  414263:	mov    esi,DWORD PTR [ebp-0x20]
  414266:	mov    edi,DWORD PTR [ebp-0x14]
  414269:	mov    si,WORD PTR [edi+esi*2]
  41426d:	mov    WORD PTR [ebp+0x8],si
  414271:	mov    esi,DWORD PTR [ebp-0x24]
  414274:	mov    edi,DWORD PTR [ebp-0x18]
  414277:	mov    si,WORD PTR [edi+esi*2]
  41427b:	mov    WORD PTR [ebp+0xc],si
  41427f:	mov    esi,0x72dd
  414284:	jmp    0x414391
  414289:	mov    edi,DWORD PTR [ebp-0x10]
  41428c:	mov    bx,WORD PTR [ebp+0xc]
  414290:	xor    edi,0x896
  414296:	add    edi,esi
  414298:	cmp    bx,di
  41429b:	je     0x4143bb
  4142a1:	mov    edi,DWORD PTR [ebp-0x10]
  4142a4:	mov    ebx,DWORD PTR [ebp+0x10]
  4142a7:	xor    edi,ecx
  4142a9:	add    edi,edx
  4142ab:	cmp    ebx,edi
  4142ad:	mov    di,WORD PTR [ebp+0xc]
  4142b1:	mov    bx,WORD PTR [ebp+0x8]
  4142b5:	je     0x414348
  4142bb:	cmp    bx,di
  4142be:	je     0x414351
  4142c4:	mov    di,WORD PTR [ebp-0x4]
  4142c8:	mov    ebx,0x8a89
  4142cd:	xor    di,bx
  4142d0:	mov    bx,WORD PTR [ebp+0x8]
  4142d4:	add    di,ax
  4142d7:	cmp    bx,di
  4142da:	jb     0x414302
  4142dc:	mov    di,WORD PTR [ebp-0x8]
  4142e0:	mov    ebx,0x8a89
  4142e5:	xor    di,bx
  4142e8:	mov    bx,WORD PTR [ebp+0x8]
  4142ec:	add    di,ax
  4142ef:	cmp    bx,di
  4142f2:	ja     0x414302
  4142f4:	movzx  edi,WORD PTR [ebp+0x8]
  4142f8:	movzx  ebx,WORD PTR [ebp-0xc]
  4142fc:	add    edi,ebx
  4142fe:	mov    WORD PTR [ebp+0x8],di
  414302:	mov    di,WORD PTR [ebp-0x4]
  414306:	mov    ebx,0x8a89
  41430b:	xor    di,bx
  41430e:	mov    bx,WORD PTR [ebp+0xc]
  414312:	add    di,ax
  414315:	cmp    bx,di
  414318:	jb     0x414340
  41431a:	mov    di,WORD PTR [ebp-0x8]
  41431e:	mov    ebx,0x8a89
  414323:	xor    di,bx
  414326:	mov    bx,WORD PTR [ebp+0xc]
  41432a:	add    di,ax
  41432d:	cmp    bx,di
  414330:	ja     0x414340
  414332:	movzx  edi,WORD PTR [ebp+0xc]
  414336:	movzx  ebx,WORD PTR [ebp-0xc]
  41433a:	add    edi,ebx
  41433c:	mov    WORD PTR [ebp+0xc],di
  414340:	mov    di,WORD PTR [ebp+0xc]
  414344:	mov    bx,WORD PTR [ebp+0x8]
  414348:	cmp    bx,di
  41434b:	jne    0x41440c
  414351:	mov    edi,DWORD PTR [ebp-0x28]
  414354:	mov    ebx,DWORD PTR [ebp-0x14]
  414357:	xor    edi,ecx
  414359:	lea    edi,[edi+ebx*1+0x3272dd]
  414360:	mov    DWORD PTR [ebp-0x14],edi
  414363:	mov    edi,DWORD PTR [ebp-0x28]
  414366:	mov    ebx,DWORD PTR [ebp-0x18]
  414369:	xor    edi,ecx
  41436b:	lea    edi,[edi+ebx*1+0x3272dd]
  414372:	mov    DWORD PTR [ebp-0x18],edi
  414375:	mov    edi,DWORD PTR [ebp-0x20]
  414378:	mov    ebx,DWORD PTR [ebp-0x14]
  41437b:	mov    di,WORD PTR [ebx+edi*2]
  41437f:	mov    WORD PTR [ebp+0x8],di
  414383:	mov    edi,DWORD PTR [ebp-0x24]
  414386:	mov    ebx,DWORD PTR [ebp-0x18]
  414389:	mov    di,WORD PTR [ebx+edi*2]
  41438d:	mov    WORD PTR [ebp+0xc],di
  414391:	mov    edi,DWORD PTR [ebp-0x10]
  414394:	mov    bx,WORD PTR [ebp+0x8]
  414398:	xor    edi,0x896
  41439e:	add    edi,esi
  4143a0:	cmp    bx,di
  4143a3:	jne    0x414289
  4143a9:	mov    esi,DWORD PTR [ebp-0x1c]
  4143ac:	xor    esi,ecx
  4143ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4143b1:	add    esi,edx
  4143b3:	imul   esi,ecx
  4143b6:	mov    DWORD PTR [ebp-0x10],esi
  4143b9:	jmp    0x4143cd
  4143bb:	mov    edx,DWORD PTR [ebp-0x10]
  4143be:	xor    edx,ecx
  4143c0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4143c3:	lea    ecx,[edx+ecx*1+0x3272dd]
  4143ca:	mov    DWORD PTR [ebp-0x1c],ecx
  4143cd:	mov    edx,DWORD PTR [ebp-0x20]
  4143d0:	mov    esi,DWORD PTR [ebp-0x14]
  4143d3:	mov    si,WORD PTR [esi+edx*2]
  4143d7:	mov    ecx,eax
  4143d9:	sub    si,cx
  4143dc:	mov    edx,0x8a89
  4143e1:	xor    si,dx
  4143e4:	mov    ecx,0x4e3d
  4143e9:	cmp    si,cx
  4143ec:	jne    0x414407
  4143ee:	mov    esi,DWORD PTR [ebp-0x24]
  4143f1:	mov    edi,DWORD PTR [ebp-0x18]
  4143f4:	mov    si,WORD PTR [edi+esi*2]
  4143f8:	sub    si,ax
  4143fb:	xor    si,dx
  4143fe:	cmp    si,cx
  414401:	jne    0x414407
  414403:	xor    eax,eax
  414405:	jmp    0x414413
  414407:	xor    eax,eax
  414409:	inc    eax
  41440a:	jmp    0x414413
  41440c:	mov    eax,DWORD PTR [ebp-0x1c]
  41440f:	xor    eax,ecx
  414411:	add    eax,edx
  414413:	pop    edi
  414414:	pop    esi
  414415:	pop    ebx
  414416:	leave  
  414417:	ret    0xc
  41441a:	push   ebp
  41441b:	mov    ebp,esp
  41441d:	push   ecx
  41441e:	mov    cx,WORD PTR [eax]
  414421:	push   esi
  414422:	mov    esi,0x3b4c
  414427:	sub    cx,si
  41442a:	mov    esi,0x8a89
  41442f:	xor    cx,si
  414432:	mov    esi,0x4e3d
  414437:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41443e:	mov    edx,0xf89c85b5
  414443:	cmp    cx,si
  414446:	je     0x4144a5
  414448:	push   ebx
  414449:	push   edi
  41444a:	movzx  ecx,cx
  41444d:	mov    edi,0xffcd8d23
  414452:	mov    esi,0x7510896
  414457:	mov    ebx,0x4f99
  41445c:	cmp    cx,bx
  41445f:	jne    0x414464
  414461:	mov    DWORD PTR [ebp-0x4],edx
  414464:	lea    edx,[edi+0x1]
  414467:	xor    edx,esi
  414469:	mov    edi,edx
  41446b:	xor    edi,esi
  41446d:	mov    cx,WORD PTR [eax+edi*2+0x64e5ba]
  414475:	mov    ebx,0x3b4c
  41447a:	sub    cx,bx
  41447d:	mov    ebx,0x8a89
  414482:	xor    cx,bx
  414485:	mov    ebx,0x4e3d
  41448a:	cmp    cx,bx
  41448d:	jne    0x414457
  41448f:	mov    ecx,DWORD PTR [ebp-0x4]
  414492:	pop    edi
  414493:	pop    ebx
  414494:	cmp    ecx,0xf89c85b4
  41449a:	je     0x4144a5
  41449c:	xor    ecx,esi
  41449e:	lea    eax,[eax+ecx*2+0x64e5bc]
  4144a5:	pop    esi
  4144a6:	leave  
  4144a7:	ret    
  4144a8:	push   ebp
  4144a9:	mov    ebp,esp
  4144ab:	push   ecx
  4144ac:	push   esi
  4144ad:	push   edi
  4144ae:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  4144b5:	mov    esi,0xf89c85b5
  4144ba:	call   0x41441a
  4144bf:	mov    edi,eax
  4144c1:	mov    al,BYTE PTR [edi]
  4144c3:	add    al,0xb
  4144c5:	xor    al,0x71
  4144c7:	cmp    al,0x7a
  4144c9:	je     0x41452c
  4144cb:	mov    eax,edi
  4144cd:	mov    edx,0xffcd8d23
  4144d2:	mov    ecx,0x7510896
  4144d7:	push   ebx
  4144d8:	mov    ax,WORD PTR [eax]
  4144db:	mov    ebx,0x3b4c
  4144e0:	sub    ax,bx
  4144e3:	mov    ebx,0x8a89
  4144e8:	xor    ax,bx
  4144eb:	mov    ebx,0x4e6b
  4144f0:	cmp    ax,bx
  4144f3:	jne    0x4144f8
  4144f5:	mov    DWORD PTR [ebp-0x4],esi
  4144f8:	lea    esi,[edx+0x1]
  4144fb:	xor    esi,ecx
  4144fd:	mov    edx,esi
  4144ff:	xor    edx,ecx
  414501:	lea    eax,[edi+edx*2+0x64e5ba]
  414508:	mov    bl,BYTE PTR [eax]
  41450a:	add    bl,0xb
  41450d:	xor    bl,0x71
  414510:	cmp    bl,0x7a
  414513:	jne    0x4144d8
  414515:	mov    eax,DWORD PTR [ebp-0x4]
  414518:	pop    ebx
  414519:	cmp    eax,0xf89c85b4
  41451e:	je     0x41452c
  414520:	xor    eax,ecx
  414522:	xor    ecx,ecx
  414524:	mov    WORD PTR [edi+eax*2+0x64e5ba],cx
  41452c:	mov    eax,edi
  41452e:	pop    edi
  41452f:	pop    esi
  414530:	leave  
  414531:	ret    
  414532:	push   ebp
  414533:	mov    ebp,esp
  414535:	push   ecx
  414536:	push   esi
  414537:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41453e:	mov    esi,0xf89c85b5
  414543:	call   0x41441a
  414548:	mov    cx,WORD PTR [eax]
  41454b:	mov    edx,0x3b4c
  414550:	sub    cx,dx
  414553:	mov    edx,0x8a89
  414558:	xor    cx,dx
  41455b:	mov    edx,0x4e3d
  414560:	cmp    cx,dx
  414563:	je     0x4145bc
  414565:	push   ebx
  414566:	push   edi
  414567:	movzx  ecx,cx
  41456a:	mov    edx,0xffcd8d23
  41456f:	mov    edi,0x7510896
  414574:	mov    ebx,0x4e6b
  414579:	cmp    cx,bx
  41457c:	jne    0x414581
  41457e:	mov    DWORD PTR [ebp-0x4],esi
  414581:	lea    esi,[edx+0x1]
  414584:	xor    esi,edi
  414586:	mov    edx,esi
  414588:	xor    edx,edi
  41458a:	mov    cx,WORD PTR [eax+edx*2+0x64e5ba]
  414592:	mov    ebx,0x3b4c
  414597:	sub    cx,bx
  41459a:	mov    ebx,0x8a89
  41459f:	xor    cx,bx
  4145a2:	mov    ebx,0x4e3d
  4145a7:	cmp    cx,bx
  4145aa:	jne    0x414574
  4145ac:	cmp    DWORD PTR [ebp-0x4],0xf89c85b4
  4145b3:	pop    edi
  4145b4:	pop    ebx
  4145b5:	je     0x4145bc
  4145b7:	xor    eax,eax
  4145b9:	inc    eax
  4145ba:	jmp    0x4145be
  4145bc:	xor    eax,eax
  4145be:	pop    esi
  4145bf:	leave  
  4145c0:	ret    
  4145c1:	push   ebp
  4145c2:	mov    ebp,esp
  4145c4:	push   ecx
  4145c5:	mov    eax,DWORD PTR [ebp+0x8]
  4145c8:	movzx  ecx,WORD PTR [eax]
  4145cb:	push   esi
  4145cc:	lea    eax,[ecx-0x3b4c]
  4145d2:	mov    esi,0x8a89
  4145d7:	push   edi
  4145d8:	xor    eax,esi
  4145da:	mov    edi,0x4e3d
  4145df:	mov    DWORD PTR [ebp-0x4],edx
  4145e2:	cmp    ax,di
  4145e5:	je     0x414612
  4145e7:	mov    eax,DWORD PTR [ebp+0x8]
  4145ea:	sub    eax,edx
  4145ec:	mov    DWORD PTR [ebp+0x8],eax
  4145ef:	jmp    0x4145f4
  4145f1:	mov    eax,DWORD PTR [ebp+0x8]
  4145f4:	mov    WORD PTR [edx],cx
  4145f7:	add    edx,0x2
  4145fa:	movzx  edi,WORD PTR [eax+edx*1]
  4145fe:	mov    ecx,edi
  414600:	add    edi,0xffffc4b4
  414606:	xor    edi,esi
  414608:	mov    eax,0x4e3d
  41460d:	cmp    di,ax
  414610:	jne    0x4145f1
  414612:	xor    eax,eax
  414614:	pop    edi
  414615:	mov    WORD PTR [edx],ax
  414618:	mov    eax,DWORD PTR [ebp-0x4]
  41461b:	pop    esi
  41461c:	leave  
  41461d:	ret    0x4
  414620:	push   ebp
  414621:	mov    ebp,esp
  414623:	sub    esp,0x18
  414626:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  41462d:	mov    DWORD PTR [ebp-0x18],0xf89c85b2
  414634:	mov    eax,DWORD PTR [ebp-0x14]
  414637:	xor    eax,0x7510896
  41463c:	add    eax,0x3272dd
  414641:	mov    DWORD PTR [ebp-0x8],eax
  414644:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  41464b:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  414652:	mov    DWORD PTR [ebp-0x4],0xf89c85b3
  414659:	mov    eax,DWORD PTR [ebp-0x14]
  41465c:	xor    eax,0x7510896
  414661:	mov    ecx,DWORD PTR [ebp-0x8]
  414664:	lea    eax,[ecx+eax*1+0x3272dd]
  41466b:	mov    ecx,DWORD PTR [ebp-0x18]
  41466e:	xor    ecx,0x7510896
  414674:	add    ecx,0x3272dd
  41467a:	mov    edx,DWORD PTR [ebp+0x10]
  41467d:	imul   edx,ecx
  414680:	cmp    eax,edx
  414682:	jae    0x414775
  414688:	mov    eax,DWORD PTR [ebp+0x10]
  41468b:	mov    ecx,DWORD PTR [ebp-0x8]
  41468e:	sub    eax,ecx
  414690:	mov    ecx,DWORD PTR [ebp-0x10]
  414693:	xor    ecx,0x7510896
  414699:	add    ecx,0x3272dd
  41469f:	cmp    eax,ecx
  4146a1:	jbe    0x4146d3
  4146a3:	mov    eax,DWORD PTR [ebp+0x8]
  4146a6:	add    eax,DWORD PTR [ebp-0x8]
  4146a9:	mov    ecx,DWORD PTR [ebp+0xc]
  4146ac:	add    ecx,DWORD PTR [ebp-0x8]
  4146af:	mov    edx,DWORD PTR [ecx]
  4146b1:	mov    DWORD PTR [eax],edx
  4146b3:	mov    ecx,DWORD PTR [ecx+0x4]
  4146b6:	mov    DWORD PTR [eax+0x4],ecx
  4146b9:	mov    eax,DWORD PTR [ebp-0x10]
  4146bc:	xor    eax,0x7510896
  4146c1:	mov    ecx,DWORD PTR [ebp-0x8]
  4146c4:	lea    eax,[ecx+eax*1+0x3272dd]
  4146cb:	mov    DWORD PTR [ebp-0x8],eax
  4146ce:	jmp    0x414770
  4146d3:	mov    eax,DWORD PTR [ebp+0x10]
  4146d6:	mov    ecx,DWORD PTR [ebp-0x8]
  4146d9:	sub    eax,ecx
  4146db:	mov    ecx,DWORD PTR [ebp-0xc]
  4146de:	xor    ecx,0x7510896
  4146e4:	add    ecx,0x3272dd
  4146ea:	cmp    eax,ecx
  4146ec:	jbe    0x414715
  4146ee:	mov    eax,DWORD PTR [ebp+0x8]
  4146f1:	add    eax,DWORD PTR [ebp-0x8]
  4146f4:	mov    ecx,DWORD PTR [ebp+0xc]
  4146f7:	add    ecx,DWORD PTR [ebp-0x8]
  4146fa:	mov    ecx,DWORD PTR [ecx]
  4146fc:	mov    DWORD PTR [eax],ecx
  4146fe:	mov    eax,DWORD PTR [ebp-0xc]
  414701:	xor    eax,0x7510896
  414706:	mov    ecx,DWORD PTR [ebp-0x8]
  414709:	lea    eax,[ecx+eax*1+0x3272dd]
  414710:	mov    DWORD PTR [ebp-0x8],eax
  414713:	jmp    0x414770
  414715:	mov    eax,DWORD PTR [ebp+0x10]
  414718:	mov    ecx,DWORD PTR [ebp-0x8]
  41471b:	sub    eax,ecx
  41471d:	mov    ecx,DWORD PTR [ebp-0x4]
  414720:	xor    ecx,0x7510896
  414726:	add    ecx,0x3272dd
  41472c:	cmp    eax,ecx
  41472e:	jbe    0x414759
  414730:	mov    eax,DWORD PTR [ebp+0x8]
  414733:	add    eax,DWORD PTR [ebp-0x8]
  414736:	mov    ecx,DWORD PTR [ebp+0xc]
  414739:	add    ecx,DWORD PTR [ebp-0x8]
  41473c:	mov    cx,WORD PTR [ecx]
  41473f:	mov    WORD PTR [eax],cx
  414742:	mov    eax,DWORD PTR [ebp-0x4]
  414745:	xor    eax,0x7510896
  41474a:	mov    ecx,DWORD PTR [ebp-0x8]
  41474d:	lea    eax,[ecx+eax*1+0x3272dd]
  414754:	mov    DWORD PTR [ebp-0x8],eax
  414757:	jmp    0x414770
  414759:	mov    eax,DWORD PTR [ebp+0x8]
  41475c:	add    eax,DWORD PTR [ebp-0x8]
  41475f:	mov    ecx,DWORD PTR [ebp+0xc]
  414762:	add    ecx,DWORD PTR [ebp-0x8]
  414765:	mov    cl,BYTE PTR [ecx]
  414767:	mov    BYTE PTR [eax],cl
  414769:	mov    eax,DWORD PTR [ebp-0x8]
  41476c:	inc    eax
  41476d:	mov    DWORD PTR [ebp-0x8],eax
  414770:	jmp    0x414659
  414775:	leave  
  414776:	ret    0xc
  414779:	push   ebp
  41477a:	mov    ebp,esp
  41477c:	push   ecx
  41477d:	push   ecx
  41477e:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  414785:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  41478c:	xor    eax,eax
  41478e:	inc    eax
  41478f:	je     0x4147d1
  414791:	mov    eax,DWORD PTR [ebp-0x4]
  414794:	xor    eax,0x7510896
  414799:	add    eax,0x3272dd
  41479e:	cmp    DWORD PTR [ebp+0xc],eax
  4147a1:	jne    0x4147a5
  4147a3:	jmp    0x4147d1
  4147a5:	mov    eax,DWORD PTR [ebp-0x8]
  4147a8:	xor    eax,0x7510896
  4147ad:	add    eax,0x3272dd
  4147b2:	mov    ecx,DWORD PTR [ebp+0xc]
  4147b5:	sub    ecx,eax
  4147b7:	mov    DWORD PTR [ebp+0xc],ecx
  4147ba:	mov    eax,DWORD PTR [ebp-0x4]
  4147bd:	xor    eax,0x7510896
  4147c2:	add    eax,0x3272dd
  4147c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4147ca:	add    ecx,DWORD PTR [ebp+0xc]
  4147cd:	mov    BYTE PTR [ecx],al
  4147cf:	jmp    0x41478c
  4147d1:	leave  
  4147d2:	ret    0x8
  4147d5:	push   ebp
  4147d6:	mov    ebp,esp
  4147d8:	sub    esp,0x21c
  4147de:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4147e5:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4147ec:	mov    eax,DWORD PTR [ebp+0x10]
  4147ef:	mov    eax,DWORD PTR [ebp-0x4]
  4147f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4147f5:	push   esi
  4147f6:	push   edi
  4147f7:	mov    edi,0x7510896
  4147fc:	xor    eax,edi
  4147fe:	mov    esi,0x3272dd
  414803:	add    eax,esi
  414805:	cmp    eax,ecx
  414807:	mov    eax,DWORD PTR [ebp-0x4]
  41480a:	jne    0x414815
  41480c:	xor    eax,edi
  41480e:	add    eax,esi
  414810:	jmp    0x4148c1
  414815:	mov    ecx,DWORD PTR [ebp+0xc]
  414818:	xor    eax,edi
  41481a:	add    eax,esi
  41481c:	cmp    eax,ecx
  41481e:	jne    0x414825
  414820:	mov    eax,DWORD PTR [ebp-0x4]
  414823:	jmp    0x41480c
  414825:	lea    eax,[ebp-0x21c]
  41482b:	mov    DWORD PTR [ebp-0x8],eax
  41482e:	mov    eax,DWORD PTR [ebp+0xc]
  414831:	mov    DWORD PTR [ebp-0x10],eax
  414834:	mov    eax,DWORD PTR [ebp-0x4]
  414837:	xor    eax,edi
  414839:	add    eax,esi
  41483b:	mov    DWORD PTR [ebp+0x10],eax
  41483e:	mov    eax,DWORD PTR [ebp+0xc]
  414841:	push   ebx
  414842:	call   0x414532
  414847:	mov    ebx,eax
  414849:	mov    eax,DWORD PTR [ebp+0x8]
  41484c:	mov    eax,DWORD PTR [eax+0x14]
  41484f:	jmp    0x4148a9
  414851:	mov    eax,DWORD PTR [ebp+0xc]
  414854:	sub    eax,0x8
  414857:	mov    DWORD PTR [ebp-0xc],eax
  41485a:	mov    eax,DWORD PTR [ebp-0xc]
  41485d:	mov    eax,DWORD PTR [eax+0x28]
  414860:	call   0x41441a
  414865:	mov    DWORD PTR [ebp+0x10],eax
  414868:	push   DWORD PTR [ebp+0x10]
  41486b:	mov    edx,DWORD PTR [ebp-0x8]
  41486e:	call   0x4145c1
  414873:	mov    eax,DWORD PTR [ebp-0x4]
  414876:	xor    eax,edi
  414878:	add    eax,esi
  41487a:	cmp    eax,ebx
  41487c:	jne    0x414886
  41487e:	mov    eax,DWORD PTR [ebp-0x8]
  414881:	call   0x4144a8
  414886:	mov    eax,DWORD PTR [ebp-0x14]
  414889:	xor    eax,edi
  41488b:	add    eax,esi
  41488d:	push   eax
  41488e:	push   DWORD PTR [ebp-0x10]
  414891:	push   DWORD PTR [ebp-0x8]
  414894:	call   0x4141ac
  414899:	mov    ecx,DWORD PTR [ebp-0x4]
  41489c:	xor    ecx,edi
  41489e:	add    ecx,esi
  4148a0:	cmp    eax,ecx
  4148a2:	je     0x4148c7
  4148a4:	mov    eax,DWORD PTR [ebp+0xc]
  4148a7:	mov    eax,DWORD PTR [eax]
  4148a9:	mov    DWORD PTR [ebp+0xc],eax
  4148ac:	mov    eax,DWORD PTR [ebp+0x8]
  4148af:	mov    ecx,DWORD PTR [ebp+0xc]
  4148b2:	add    eax,0x14
  4148b5:	cmp    ecx,eax
  4148b7:	jne    0x414851
  4148b9:	mov    eax,DWORD PTR [ebp-0x4]
  4148bc:	xor    eax,edi
  4148be:	add    eax,esi
  4148c0:	pop    ebx
  4148c1:	pop    edi
  4148c2:	pop    esi
  4148c3:	leave  
  4148c4:	ret    0xc
  4148c7:	mov    eax,DWORD PTR [ebp-0xc]
  4148ca:	mov    eax,DWORD PTR [eax+0x18]
  4148cd:	jmp    0x4148c0
  4148cf:	push   ebp
  4148d0:	mov    ebp,esp
  4148d2:	mov    eax,DWORD PTR [ebp+0xc]
  4148d5:	sub    esp,0x10
  4148d8:	cmp    DWORD PTR [ebp+0x8],0x0
  4148dc:	push   ebx
  4148dd:	push   esi
  4148de:	push   edi
  4148df:	je     0x414994
  4148e5:	test   eax,eax
  4148e7:	je     0x414994
  4148ed:	movzx  eax,WORD PTR [eax+0x20]
  4148f1:	mov    ecx,eax
  4148f3:	mov    DWORD PTR [ebp-0x10],eax
  4148f6:	xor    edx,edx
  4148f8:	and    DWORD PTR [ebp-0x8],edx
  4148fb:	mov    eax,0x8a89
  414900:	xor    ecx,eax
  414902:	add    ecx,0x3b4c
  414908:	mov    DWORD PTR [ebp-0xc],ecx
  41490b:	and    DWORD PTR [ebp-0x4],0x0
  41490f:	xor    ecx,ecx
  414911:	push   0x7c
  414913:	pop    edi
  414914:	cmp    cx,WORD PTR [ebp-0xc]
  414918:	jae    0x41497e
  41491a:	lea    esi,[edx-0x3b4c]
  414920:	xor    esi,eax
  414922:	movzx  ecx,WORD PTR [ebp-0x4]
  414926:	mov    ebx,DWORD PTR [ebp+0xc]
  414929:	lea    ecx,[ebx+ecx*4]
  41492c:	cmp    WORD PTR [ecx+0x2],si
  414930:	jne    0x414969
  414932:	movzx  ecx,WORD PTR [ecx]
  414935:	mov    edi,0x4e3d
  41493a:	cmp    cx,di
  41493d:	jne    0x41494b
  41493f:	mov    ebx,DWORD PTR [ebp+0x8]
  414942:	movzx  edi,dx
  414945:	cmp    BYTE PTR [edi+ebx*1],0x0
  414949:	je     0x414978
  41494b:	mov    ebx,DWORD PTR [ebp+0x8]
  41494e:	movzx  edi,dx
  414951:	movsx  di,BYTE PTR [edi+ebx*1]
  414956:	mov    ebx,0x3b4c
  41495b:	sub    di,bx
  41495e:	xor    di,ax
  414961:	cmp    cx,di
  414964:	je     0x414978
  414966:	push   0x7a
  414968:	pop    edi
  414969:	inc    DWORD PTR [ebp-0x4]
  41496c:	mov    cx,WORD PTR [ebp-0xc]
  414970:	cmp    WORD PTR [ebp-0x4],cx
  414974:	jb     0x414922
  414976:	jmp    0x41497e
  414978:	inc    DWORD PTR [ebp-0x8]
  41497b:	push   0x7d
  41497d:	pop    edi
  41497e:	mov    esi,DWORD PTR [ebp+0x8]
  414981:	movzx  ecx,dx
  414984:	cmp    BYTE PTR [ecx+esi*1],0x0
  414988:	je     0x41499d
  41498a:	inc    edx
  41498b:	cmp    edi,0x7a
  41498e:	jne    0x41490b
  414994:	xor    eax,eax
  414996:	pop    edi
  414997:	pop    esi
  414998:	pop    ebx
  414999:	leave  
  41499a:	ret    0x8
  41499d:	mov    ecx,DWORD PTR [ebp-0x8]
  4149a0:	add    ecx,0xffffc4b4
  4149a6:	xor    cx,ax
  4149a9:	xor    eax,eax
  4149ab:	cmp    cx,WORD PTR [ebp-0x10]
  4149af:	sete   al
  4149b2:	jmp    0x414996
  4149b4:	push   ebp
  4149b5:	mov    ebp,esp
  4149b7:	sub    esp,0x50
  4149ba:	push   edi
  4149bb:	mov    edi,eax
  4149bd:	mov    eax,DWORD PTR [edi+0x1a8]
  4149c3:	cmp    DWORD PTR [eax],0x0
  4149c6:	jne    0x4149cf
  4149c8:	xor    eax,eax
  4149ca:	jmp    0x414aff
  4149cf:	push   0x2c
  4149d1:	push   DWORD PTR [ebp+0x8]
  4149d4:	call   0x414779
  4149d9:	mov    edx,DWORD PTR [edi+0x1ac]
  4149df:	lea    eax,[edi+0x22]
  4149e2:	mov    DWORD PTR [ebp-0x4c],eax
  4149e5:	lea    eax,[edi+0x44]
  4149e8:	mov    DWORD PTR [ebp-0x48],eax
  4149eb:	lea    eax,[edi+0x66]
  4149ee:	mov    DWORD PTR [ebp-0x44],eax
  4149f1:	lea    eax,[edi+0x88]
  4149f7:	mov    DWORD PTR [ebp-0x40],eax
  4149fa:	lea    eax,[edi+0xaa]
  414a00:	mov    DWORD PTR [ebp-0x3c],eax
  414a03:	lea    eax,[edi+0xcc]
  414a09:	mov    DWORD PTR [ebp-0x38],eax
  414a0c:	lea    eax,[edi+0xee]
  414a12:	mov    DWORD PTR [ebp-0x34],eax
  414a15:	lea    eax,[edi+0x110]
  414a1b:	mov    DWORD PTR [ebp-0x30],eax
  414a1e:	lea    eax,[edi+0x132]
  414a24:	mov    DWORD PTR [ebp-0x2c],eax
  414a27:	lea    eax,[edi+0x154]
  414a2d:	push   edi
  414a2e:	mov    DWORD PTR [ebp-0x50],edi
  414a31:	mov    DWORD PTR [ebp-0x28],eax
  414a34:	call   0x414b33
  414a39:	push   eax
  414a3a:	mov    eax,DWORD PTR [edi+0x1a8]
  414a40:	push   DWORD PTR [eax]
  414a42:	call   0x4147d5
  414a47:	mov    DWORD PTR [ebp-0x10],eax
  414a4a:	test   eax,eax
  414a4c:	je     0x414aff
  414a52:	mov    ecx,DWORD PTR [eax+0x3c]
  414a55:	push   ebx
  414a56:	push   esi
  414a57:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  414a5b:	add    esi,eax
  414a5d:	mov    edi,DWORD PTR [esi+0x24]
  414a60:	mov    ecx,DWORD PTR [esi+0x1c]
  414a63:	mov    edx,DWORD PTR [esi+0x20]
  414a66:	mov    ebx,DWORD PTR [esi+0x18]
  414a69:	add    edi,eax
  414a6b:	mov    DWORD PTR [ebp-0x20],edi
  414a6e:	mov    edi,DWORD PTR [esi+0x14]
  414a71:	add    ecx,eax
  414a73:	add    edx,eax
  414a75:	mov    DWORD PTR [ebp-0xc],ecx
  414a78:	mov    DWORD PTR [ebp-0x1c],edx
  414a7b:	mov    DWORD PTR [ebp-0x8],edi
  414a7e:	cmp    edi,ebx
  414a80:	ja     0x414a85
  414a82:	mov    DWORD PTR [ebp-0x8],ebx
  414a85:	xor    ebx,ebx
  414a87:	mov    DWORD PTR [ebp-0x18],ebx
  414a8a:	cmp    DWORD PTR [ebp-0x8],ebx
  414a8d:	jbe    0x414afd
  414a8f:	jmp    0x414a94
  414a91:	mov    edx,DWORD PTR [ebp-0x1c]
  414a94:	mov    edi,DWORD PTR [ebp-0x20]
  414a97:	movzx  edi,WORD PTR [edi+ebx*2]
  414a9b:	cmp    ebx,DWORD PTR [esi+0x18]
  414a9e:	jae    0x414afd
  414aa0:	cmp    edi,DWORD PTR [esi+0x14]
  414aa3:	jae    0x414afd
  414aa5:	mov    ebx,DWORD PTR [edx+ebx*4]
  414aa8:	mov    edx,DWORD PTR [ebp+0x8]
  414aab:	mov    edi,DWORD PTR [ecx+edi*4]
  414aae:	mov    DWORD PTR [ebp-0x4],edx
  414ab1:	lea    edx,[ebp-0x50]
  414ab4:	add    ebx,eax
  414ab6:	add    edi,eax
  414ab8:	sub    edx,DWORD PTR [ebp+0x8]
  414abb:	mov    DWORD PTR [ebp-0x14],0xb
  414ac2:	mov    DWORD PTR [ebp-0x24],edx
  414ac5:	mov    edx,DWORD PTR [ebp-0x4]
  414ac8:	cmp    DWORD PTR [edx],0x0
  414acb:	jne    0x414ae8
  414acd:	mov    eax,DWORD PTR [ebp-0x24]
  414ad0:	push   DWORD PTR [eax+edx*1]
  414ad3:	push   ebx
  414ad4:	call   0x4148cf
  414ad9:	mov    ecx,DWORD PTR [ebp-0xc]
  414adc:	test   eax,eax
  414ade:	je     0x414ae5
  414ae0:	mov    eax,DWORD PTR [ebp-0x4]
  414ae3:	mov    DWORD PTR [eax],edi
  414ae5:	mov    eax,DWORD PTR [ebp-0x10]
  414ae8:	add    DWORD PTR [ebp-0x4],0x4
  414aec:	dec    DWORD PTR [ebp-0x14]
  414aef:	jne    0x414ac5
  414af1:	mov    ebx,DWORD PTR [ebp-0x18]
  414af4:	inc    ebx
  414af5:	mov    DWORD PTR [ebp-0x18],ebx
  414af8:	cmp    ebx,DWORD PTR [ebp-0x8]
  414afb:	jb     0x414a91
  414afd:	pop    esi
  414afe:	pop    ebx
  414aff:	pop    edi
  414b00:	leave  
  414b01:	ret    0x4
  414b04:	push   ebp
  414b05:	mov    ebp,esp
  414b07:	mov    eax,DWORD PTR [ebp+0x8]
  414b0a:	push   esi
  414b0b:	push   DWORD PTR [eax+0x1d8]
  414b11:	lea    esi,[eax+0x198]
  414b17:	mov    eax,DWORD PTR [ebp+0x8]
  414b1a:	call   0x4149b4
  414b1f:	mov    ecx,DWORD PTR [esi]
  414b21:	mov    DWORD PTR [ecx],eax
  414b23:	mov    eax,DWORD PTR [esi]
  414b25:	xor    ecx,ecx
  414b27:	cmp    DWORD PTR [eax],ecx
  414b29:	pop    esi
  414b2a:	setne  cl
  414b2d:	mov    eax,ecx
  414b2f:	pop    ebp
  414b30:	ret    0x4
  414b33:	mov    ecx,DWORD PTR [edi+0x188]
  414b39:	push   ebx
  414b3a:	jmp    0x414b4f
  414b3c:	xor    eax,0x8a89
  414b41:	add    eax,0x3b4c
  414b46:	mov    WORD PTR [ecx],ax
  414b49:	add    ecx,0x2
  414b4c:	add    edx,0x2
  414b4f:	movzx  eax,WORD PTR [edx]
  414b52:	mov    ebx,0x4e3d
  414b57:	cmp    ax,bx
  414b5a:	jne    0x414b3c
  414b5c:	xor    eax,eax
  414b5e:	mov    WORD PTR [ecx],ax
  414b61:	mov    eax,DWORD PTR [edi+0x188]
  414b67:	pop    ebx
  414b68:	ret    
  414b69:	push   edi
  414b6a:	mov    edi,eax
  414b6c:	mov    eax,DWORD PTR [esi+0x188]
  414b72:	shl    edi,0x6
  414b75:	add    eax,edi
  414b77:	jmp    0x414b83
  414b79:	xor    cl,0x71
  414b7c:	sub    cl,0xb
  414b7f:	mov    BYTE PTR [eax],cl
  414b81:	inc    eax
  414b82:	inc    edx
  414b83:	mov    cl,BYTE PTR [edx]
  414b85:	cmp    cl,0x7a
  414b88:	jne    0x414b79
  414b8a:	mov    BYTE PTR [eax],0x0
  414b8d:	mov    eax,DWORD PTR [esi+0x188]
  414b93:	add    eax,edi
  414b95:	pop    edi
  414b96:	ret    
  414b97:	push   ebp
  414b98:	mov    ebp,esp
  414b9a:	sub    esp,0x38
  414b9d:	push   ebx
  414b9e:	mov    ebx,0xf89c85b5
  414ba3:	mov    DWORD PTR [ebp-0x4],ebx
  414ba6:	lea    eax,[ebx-0x3]
  414ba9:	push   esi
  414baa:	mov    DWORD PTR [ebp-0x24],eax
  414bad:	mov    ecx,DWORD PTR [ebp-0x4]
  414bb0:	mov    edx,DWORD PTR [ebp+0x8]
  414bb3:	mov    esi,0x7510896
  414bb8:	push   edi
  414bb9:	xor    ecx,esi
  414bbb:	mov    edi,0x3272dd
  414bc0:	add    ecx,edi
  414bc2:	cmp    edx,ecx
  414bc4:	je     0x414d32
  414bca:	mov    ecx,DWORD PTR [ebp-0x4]
  414bcd:	mov    edx,DWORD PTR [ebp+0xc]
  414bd0:	xor    ecx,esi
  414bd2:	add    ecx,edi
  414bd4:	cmp    edx,ecx
  414bd6:	je     0x414d32
  414bdc:	mov    ecx,DWORD PTR [ebp+0x10]
  414bdf:	mov    DWORD PTR [ebp-0x18],ecx
  414be2:	mov    ecx,DWORD PTR [ebp+0xc]
  414be5:	mov    DWORD PTR [ebp-0x14],ecx
  414be8:	mov    ecx,DWORD PTR [ebp+0x8]
  414beb:	mov    DWORD PTR [ebp-0x1c],0xf89c8508
  414bf2:	mov    DWORD PTR [ebp-0x20],eax
  414bf5:	mov    DWORD PTR [ebp-0x10],ebx
  414bf8:	mov    DWORD PTR [ebp+0xc],eax
  414bfb:	mov    DWORD PTR [ebp+0x10],0xf89c85b3
  414c02:	mov    eax,DWORD PTR [ebp+0xc]
  414c05:	mov    DWORD PTR [ebp-0xc],ecx
  414c08:	xor    eax,esi
  414c0a:	mov    ecx,0xffcd8d23
  414c0f:	sub    ecx,eax
  414c11:	add    ecx,DWORD PTR [ebp-0x14]
  414c14:	mov    DWORD PTR [ebp+0x8],ecx
  414c17:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  414c1e:	jmp    0x414d22
  414c23:	mov    eax,DWORD PTR [ebp+0xc]
  414c26:	mov    ecx,DWORD PTR [ebp+0xc]
  414c29:	xor    eax,esi
  414c2b:	xor    ecx,esi
  414c2d:	lea    ecx,[eax+ecx*1+0x64e5ba]
  414c34:	mov    eax,DWORD PTR [ebp+0x8]
  414c37:	xor    edx,edx
  414c39:	div    ecx
  414c3b:	mov    eax,DWORD PTR [ebp+0x10]
  414c3e:	mov    ecx,DWORD PTR [ebp+0xc]
  414c41:	xor    eax,esi
  414c43:	xor    ecx,esi
  414c45:	sub    eax,ecx
  414c47:	cmp    edx,eax
  414c49:	jne    0x414cde
  414c4f:	mov    eax,DWORD PTR [ebp+0x8]
  414c52:	add    eax,DWORD PTR [ebp-0xc]
  414c55:	mov    dl,BYTE PTR [eax]
  414c57:	mov    eax,DWORD PTR [ebp-0x10]
  414c5a:	mov    ecx,DWORD PTR [ebp-0x8]
  414c5d:	xor    eax,esi
  414c5f:	xor    ecx,esi
  414c61:	add    eax,edi
  414c63:	add    ecx,edi
  414c65:	cmp    eax,ecx
  414c67:	jae    0x414caf
  414c69:	lea    ecx,[eax-0x3272dd]
  414c6f:	mov    DWORD PTR [ebp-0x4],ecx
  414c72:	mov    ebx,DWORD PTR [ebp-0x4]
  414c75:	xor    ebx,esi
  414c77:	add    ebx,0x7f55d8f3
  414c7d:	lea    ecx,[ebp+eax*4-0x38]
  414c81:	mov    DWORD PTR [ecx],ebx
  414c83:	mov    ebx,DWORD PTR [ecx]
  414c85:	cmp    ebx,0x244ecbd0
  414c8b:	jbe    0x414c95
  414c8d:	add    DWORD PTR [ecx],0x405fc11
  414c93:	jmp    0x414c9b
  414c95:	add    DWORD PTR [ecx],0xfdaf43ef
  414c9b:	mov    ecx,DWORD PTR [ebp-0x8]
  414c9e:	xor    ecx,esi
  414ca0:	inc    eax
  414ca1:	inc    DWORD PTR [ebp-0x4]
  414ca4:	add    ecx,edi
  414ca6:	cmp    eax,ecx
  414ca8:	jb     0x414c72
  414caa:	mov    ebx,0xf89c85b5
  414caf:	mov    eax,DWORD PTR [ebp-0x18]
  414cb2:	test   eax,eax
  414cb4:	jne    0x414cbe
  414cb6:	xor    dl,0x71
  414cb9:	sub    dl,0xb
  414cbc:	jmp    0x414cd4
  414cbe:	mov    eax,DWORD PTR [ebp-0x1c]
  414cc1:	xor    al,0x96
  414cc3:	mov    cl,0x23
  414cc5:	sub    cl,al
  414cc7:	add    dl,cl
  414cc9:	mov    ecx,DWORD PTR [ebp-0x20]
  414ccc:	xor    cl,0x96
  414ccf:	sub    cl,0x23
  414cd2:	ror    dl,cl
  414cd4:	xor    eax,eax
  414cd6:	mov    eax,DWORD PTR [ebp+0x8]
  414cd9:	add    eax,DWORD PTR [ebp-0xc]
  414cdc:	mov    BYTE PTR [eax],dl
  414cde:	mov    eax,DWORD PTR [ebp+0x8]
  414ce1:	mov    ecx,DWORD PTR [ebp-0x10]
  414ce4:	sub    eax,edi
  414ce6:	xor    eax,esi
  414ce8:	cmp    eax,ecx
  414cea:	jne    0x414d10
  414cec:	mov    eax,DWORD PTR [ebp+0x10]
  414cef:	mov    ecx,DWORD PTR [ebp+0xc]
  414cf2:	xor    eax,esi
  414cf4:	xor    ecx,esi
  414cf6:	sub    eax,ecx
  414cf8:	sub    eax,edi
  414cfa:	xor    eax,esi
  414cfc:	mov    DWORD PTR [ebp+0x10],eax
  414cff:	mov    eax,DWORD PTR [ebp+0xc]
  414d02:	xor    eax,esi
  414d04:	mov    ecx,0xffcd8d23
  414d09:	sub    ecx,eax
  414d0b:	add    ecx,DWORD PTR [ebp-0x14]
  414d0e:	jmp    0x414d1f
  414d10:	mov    eax,DWORD PTR [ebp+0xc]
  414d13:	xor    eax,esi
  414d15:	mov    ecx,0xffcd8d23
  414d1a:	sub    ecx,eax
  414d1c:	add    ecx,DWORD PTR [ebp+0x8]
  414d1f:	mov    DWORD PTR [ebp+0x8],ecx
  414d22:	mov    eax,DWORD PTR [ebp+0x10]
  414d25:	cmp    eax,ebx
  414d27:	jne    0x414c23
  414d2d:	mov    eax,DWORD PTR [ebp-0x24]
  414d30:	jmp    0x414d35
  414d32:	mov    eax,DWORD PTR [ebp-0x4]
  414d35:	xor    eax,esi
  414d37:	add    eax,edi
  414d39:	pop    edi
  414d3a:	pop    esi
  414d3b:	pop    ebx
  414d3c:	leave  
  414d3d:	ret    0xc
  414d40:	push   ebp
  414d41:	mov    ebp,esp
  414d43:	sub    esp,0x14
  414d46:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  414d4d:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  414d54:	mov    eax,DWORD PTR [ebx]
  414d56:	mov    DWORD PTR [ebp-0x8],eax
  414d59:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  414d60:	push   esi
  414d61:	push   edi
  414d62:	mov    DWORD PTR [ebp-0x14],0xead718d5
  414d69:	mov    edi,DWORD PTR [ebp-0x4]
  414d6c:	mov    ecx,DWORD PTR [ebp-0x10]
  414d6f:	mov    eax,0x7510896
  414d74:	xor    edi,eax
  414d76:	mov    edx,0x3272dd
  414d7b:	xor    ecx,eax
  414d7d:	add    edi,edx
  414d7f:	add    ecx,edx
  414d81:	imul   edi,ecx
  414d84:	jmp    0x414dcc
  414d86:	mov    ecx,DWORD PTR [ebp-0x8]
  414d89:	mov    esi,DWORD PTR [ebp-0x4]
  414d8c:	xor    ecx,eax
  414d8e:	xor    esi,eax
  414d90:	add    ecx,edx
  414d92:	add    esi,edx
  414d94:	test   esi,ecx
  414d96:	mov    esi,DWORD PTR [ebp-0x8]
  414d99:	mov    ecx,DWORD PTR [ebp-0x4]
  414d9c:	je     0x414db3
  414d9e:	xor    ecx,eax
  414da0:	xor    esi,eax
  414da2:	add    ecx,edx
  414da4:	add    esi,edx
  414da6:	shr    esi,cl
  414da8:	mov    ecx,DWORD PTR [ebp-0x14]
  414dab:	xor    ecx,eax
  414dad:	add    ecx,edx
  414daf:	xor    esi,ecx
  414db1:	jmp    0x414dbd
  414db3:	xor    esi,eax
  414db5:	xor    ecx,eax
  414db7:	add    esi,edx
  414db9:	add    ecx,edx
  414dbb:	shr    esi,cl
  414dbd:	mov    DWORD PTR [ebp-0x8],esi
  414dc0:	mov    ecx,DWORD PTR [ebp-0x4]
  414dc3:	xor    ecx,eax
  414dc5:	lea    edi,[edi+ecx*1+0x3272dd]
  414dcc:	mov    ecx,DWORD PTR [ebp-0xc]
  414dcf:	mov    esi,DWORD PTR [ebp-0x4]
  414dd2:	xor    esi,eax
  414dd4:	xor    ecx,eax
  414dd6:	sub    ecx,esi
  414dd8:	cmp    edi,ecx
  414dda:	jbe    0x414d86
  414ddc:	mov    eax,DWORD PTR [ebp-0x8]
  414ddf:	pop    edi
  414de0:	mov    DWORD PTR [ebx],eax
  414de2:	mov    eax,DWORD PTR [ebp-0x8]
  414de5:	pop    esi
  414de6:	leave  
  414de7:	ret    
  414de8:	push   ebp
  414de9:	mov    ebp,esp
  414deb:	sub    esp,0x420
  414df1:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  414df8:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  414dff:	mov    DWORD PTR [ebp-0x18],0xf89c86b5
  414e06:	push   ebx
  414e07:	mov    DWORD PTR [ebp-0x1c],0xf89c85b4
  414e0e:	mov    eax,DWORD PTR [ebp-0x14]
  414e11:	push   esi
  414e12:	mov    esi,0x7510896
  414e17:	push   edi
  414e18:	xor    eax,esi
  414e1a:	mov    edi,0x3272dd
  414e1f:	add    eax,edi
  414e21:	mov    DWORD PTR [ebp-0x8],eax
  414e24:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  414e2b:	mov    DWORD PTR [ebp-0x4],0xead718d5
  414e32:	mov    DWORD PTR [ebp-0x10],0x8
  414e39:	mov    ecx,ecx
  414e3b:	mov    eax,DWORD PTR [ebp-0xc]
  414e3e:	mov    ecx,DWORD PTR [ebp-0x14]
  414e41:	xor    eax,esi
  414e43:	xor    ecx,esi
  414e45:	add    eax,edi
  414e47:	add    ecx,edi
  414e49:	imul   eax,ecx
  414e4c:	jmp    0x414e7f
  414e4e:	mov    eax,DWORD PTR [ebp-0x4]
  414e51:	sub    eax,edi
  414e53:	xor    eax,esi
  414e55:	mov    DWORD PTR [ebp-0x8],eax
  414e58:	lea    ebx,[ebp-0x8]
  414e5b:	call   0x414d40
  414e60:	mov    DWORD PTR [ebp-0x8],eax
  414e63:	mov    eax,DWORD PTR [ebp-0x8]
  414e66:	mov    ecx,DWORD PTR [ebp-0x4]
  414e69:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  414e70:	mov    eax,DWORD PTR [ebp-0xc]
  414e73:	mov    ecx,DWORD PTR [ebp-0x4]
  414e76:	xor    eax,esi
  414e78:	lea    eax,[eax+ecx*1+0x3272dd]
  414e7f:	mov    DWORD PTR [ebp-0x4],eax
  414e82:	mov    eax,DWORD PTR [ebp-0x18]
  414e85:	mov    ecx,DWORD PTR [ebp-0xc]
  414e88:	xor    ecx,esi
  414e8a:	xor    eax,esi
  414e8c:	sub    eax,ecx
  414e8e:	mov    ecx,DWORD PTR [ebp-0x4]
  414e91:	cmp    ecx,eax
  414e93:	jbe    0x414e4e
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	xor    eax,esi
  414e9a:	add    eax,edi
  414e9c:	mov    DWORD PTR [ebp-0x8],eax
  414e9f:	mov    DWORD PTR [ebp-0x18],0xf89c86b4
  414ea6:	mov    ebx,ebx
  414ea8:	jmp    0x414f0b
  414eaa:	mov    ecx,DWORD PTR [ebp-0x20]
  414ead:	mov    eax,DWORD PTR [ebp-0x8]
  414eb0:	xor    ecx,esi
  414eb2:	add    ecx,edi
  414eb4:	shr    eax,cl
  414eb6:	mov    DWORD PTR [ebp-0x4],eax
  414eb9:	mov    eax,DWORD PTR [ebp+0x8]
  414ebc:	mov    cl,BYTE PTR [eax]
  414ebe:	mov    BYTE PTR [ebp+0xb],cl
  414ec1:	mov    cl,BYTE PTR [ebp+0xb]
  414ec4:	mov    edx,DWORD PTR [ebp-0x8]
  414ec7:	movzx  ecx,cl
  414eca:	xor    ecx,edx
  414ecc:	mov    DWORD PTR [ebp+0x8],ecx
  414ecf:	mov    ecx,DWORD PTR [ebp-0x18]
  414ed2:	mov    edx,DWORD PTR [ebp+0x8]
  414ed5:	xor    ecx,esi
  414ed7:	add    ecx,edi
  414ed9:	and    ecx,edx
  414edb:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  414ee2:	mov    edx,DWORD PTR [ebp-0x4]
  414ee5:	xor    ecx,edx
  414ee7:	mov    DWORD PTR [ebp-0x8],ecx
  414eea:	mov    ecx,DWORD PTR [ebp-0xc]
  414eed:	xor    ecx,esi
  414eef:	lea    eax,[eax+ecx*1+0x3272dd]
  414ef6:	mov    DWORD PTR [ebp+0x8],eax
  414ef9:	mov    eax,DWORD PTR [ebp-0xc]
  414efc:	xor    eax,esi
  414efe:	mov    ecx,0xffcd8d23
  414f03:	sub    ecx,eax
  414f05:	add    ecx,DWORD PTR [ebp-0x10]
  414f08:	mov    DWORD PTR [ebp-0x10],ecx
  414f0b:	mov    eax,DWORD PTR [ebp-0x14]
  414f0e:	mov    ecx,DWORD PTR [ebp-0x10]
  414f11:	xor    eax,esi
  414f13:	add    eax,edi
  414f15:	cmp    ecx,eax
  414f17:	jne    0x414eaa
  414f19:	mov    eax,DWORD PTR [ebp-0x1c]
  414f1c:	mov    ecx,DWORD PTR [ebp-0x8]
  414f1f:	xor    eax,esi
  414f21:	add    eax,edi
  414f23:	pop    edi
  414f24:	pop    esi
  414f25:	xor    eax,ecx
  414f27:	pop    ebx
  414f28:	leave  
  414f29:	ret    0x4
  414f2c:	push   ebp
  414f2d:	mov    ebp,esp
  414f2f:	mov    eax,DWORD PTR [ebp+0x1c]
  414f32:	mov    ecx,DWORD PTR [ebp+0x8]
  414f35:	mov    edx,DWORD PTR [ebp+0x10]
  414f38:	mov    eax,DWORD PTR [eax+0x190]
  414f3e:	mov    eax,DWORD PTR [eax]
  414f40:	sub    esp,0x64
  414f43:	push   ebx
  414f44:	push   esi
  414f45:	push   edi
  414f46:	mov    edi,0x7510896
  414f4b:	xor    ecx,edi
  414f4d:	mov    ebx,0x3272dd
  414f52:	add    ecx,ebx
  414f54:	cmp    ecx,edx
  414f56:	jne    0x414f67
  414f58:	or     DWORD PTR ds:0x3750c3f,0x4263eb0c
  414f62:	jmp    0x415464
  414f67:	mov    ecx,DWORD PTR [ebp+0x8]
  414f6a:	mov    esi,DWORD PTR [ebp+0x14]
  414f6d:	mov    edx,DWORD PTR [esi]
  414f6f:	xor    ecx,edi
  414f71:	add    ecx,ebx
  414f73:	cmp    edx,ecx
  414f75:	je     0x41541f
  414f7b:	mov    ecx,DWORD PTR [ebp+0x1c]
  414f7e:	mov    DWORD PTR [ebp-0x1c],eax
  414f81:	mov    DWORD PTR [ebp+0x1c],ecx
  414f84:	mov    ecx,DWORD PTR [ebp+0x18]
  414f87:	mov    eax,DWORD PTR [esi]
  414f89:	mov    DWORD PTR [ebp-0x20],eax
  414f8c:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  414f93:	mov    edx,0xf89c85b2
  414f98:	mov    DWORD PTR [ebp-0x8],edx
  414f9b:	mov    eax,DWORD PTR [ebp+0x1c]
  414f9e:	mov    DWORD PTR [ebp+0x1c],eax
  414fa1:	mov    eax,DWORD PTR [ebp+0x1c]
  414fa4:	mov    eax,DWORD PTR [eax+0x190]
  414faa:	mov    eax,DWORD PTR [eax]
  414fac:	mov    DWORD PTR [ebp-0x24],ecx
  414faf:	mov    ecx,DWORD PTR [ebp+0x1c]
  414fb2:	mov    ecx,DWORD PTR [ecx+0x190]
  414fb8:	mov    ecx,DWORD PTR [ecx]
  414fba:	add    ecx,DWORD PTR [eax+0x3c]
  414fbd:	mov    DWORD PTR [ebp+0x10],ecx
  414fc0:	mov    eax,DWORD PTR [ebp+0x8]
  414fc3:	xor    eax,edi
  414fc5:	add    eax,ebx
  414fc7:	mov    DWORD PTR [ebp-0x4],eax
  414fca:	mov    eax,DWORD PTR [ebp+0x8]
  414fcd:	xor    eax,edi
  414fcf:	add    eax,ebx
  414fd1:	mov    DWORD PTR [ebp+0x18],eax
  414fd4:	mov    eax,DWORD PTR [ebp+0x10]
  414fd7:	mov    eax,DWORD PTR [eax+0x50]
  414fda:	sub    eax,0xc
  414fdd:	mov    DWORD PTR [ebp-0x28],eax
  414fe0:	mov    eax,DWORD PTR [ebp+0x10]
  414fe3:	mov    eax,DWORD PTR [eax+0x38]
  414fe6:	mov    ecx,DWORD PTR [ebp+0x10]
  414fe9:	dec    eax
  414fea:	test   DWORD PTR [ecx+0x54],eax
  414fed:	mov    eax,DWORD PTR [ebp+0x10]
  414ff0:	je     0x41500a
  414ff2:	mov    eax,DWORD PTR [eax+0x38]
  414ff5:	mov    ecx,DWORD PTR [ebp+0x10]
  414ff8:	mov    ecx,DWORD PTR [ecx+0x54]
  414ffb:	dec    eax
  414ffc:	not    eax
  414ffe:	and    ecx,eax
  415000:	mov    eax,DWORD PTR [ebp+0x10]
  415003:	mov    eax,DWORD PTR [eax+0x38]
  415006:	add    eax,ecx
  415008:	jmp    0x41500d
  41500a:	mov    eax,DWORD PTR [eax+0x54]
  41500d:	mov    DWORD PTR [ebp+0x1c],eax
  415010:	mov    eax,DWORD PTR [ebp+0x8]
  415013:	xor    eax,edi
  415015:	add    eax,ebx
  415017:	mov    DWORD PTR [ebp+0x18],eax
  41501a:	mov    eax,DWORD PTR [ebp+0x8]
  41501d:	xor    eax,edi
  41501f:	add    eax,ebx
  415021:	mov    DWORD PTR [ebp+0x18],eax
  415024:	mov    eax,DWORD PTR [ebp+0x8]
  415027:	mov    ecx,DWORD PTR [ebp-0x24]
  41502a:	xor    eax,edi
  41502c:	add    eax,ebx
  41502e:	mov    DWORD PTR [ecx],eax
  415030:	mov    DWORD PTR [ebp+0x18],edx
  415033:	mov    DWORD PTR [ebp+0x18],0xf89c85b3
  41503a:	mov    DWORD PTR [ebp+0x18],0xf89c85b0
  415041:	mov    DWORD PTR [ebp+0x18],0xf89c85b1
  415048:	mov    eax,DWORD PTR [ebp-0x8]
  41504b:	mov    ecx,DWORD PTR [ebp+0x1c]
  41504e:	xor    eax,edi
  415050:	add    eax,ebx
  415052:	imul   eax,ecx
  415055:	mov    ecx,DWORD PTR [ebp+0x8]
  415058:	mov    edx,DWORD PTR [ebp-0x28]
  41505b:	xor    ecx,edi
  41505d:	lea    ecx,[ecx+edx*1+0x3272dd]
  415064:	cmp    eax,ecx
  415066:	jae    0x415418
  41506c:	mov    eax,DWORD PTR [ebp+0x8]
  41506f:	xor    eax,edi
  415071:	add    eax,ebx
  415073:	mov    DWORD PTR [ebp+0x18],eax
  415076:	mov    eax,DWORD PTR [ebp+0x1c]
  415079:	add    eax,DWORD PTR [ebp-0x1c]
  41507c:	mov    DWORD PTR [ebp-0x4],eax
  41507f:	push   DWORD PTR [ebp-0x4]
  415082:	mov    esi,DWORD PTR [ebp-0x1c]
  415085:	mov    ecx,DWORD PTR [ebp+0x10]
  415088:	call   0x41416e
  41508d:	mov    DWORD PTR [ebp+0xc],eax
  415090:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  415097:	mov    eax,DWORD PTR [ebp-0x18]
  41509a:	xor    eax,edi
  41509c:	add    eax,ebx
  41509e:	push   eax
  41509f:	lea    eax,[ebp-0x40]
  4150a2:	push   eax
  4150a3:	call   0x414779
  4150a8:	mov    eax,DWORD PTR [ebp+0xc]
  4150ab:	test   eax,eax
  4150ad:	je     0x4150fd
  4150af:	mov    eax,DWORD PTR [ebp-0x18]
  4150b2:	xor    eax,edi
  4150b4:	add    eax,ebx
  4150b6:	push   eax
  4150b7:	push   DWORD PTR [ebp+0xc]
  4150ba:	lea    eax,[ebp-0x40]
  4150bd:	push   eax
  4150be:	call   0x414620
  4150c3:	mov    eax,DWORD PTR [ebp-0x4]
  4150c6:	mov    DWORD PTR [ebp-0x18],eax
  4150c9:	mov    eax,DWORD PTR [ebp-0x18]
  4150cc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4150cf:	sub    eax,ecx
  4150d1:	mov    DWORD PTR [ebp-0x18],eax
  4150d4:	mov    eax,DWORD PTR [ebp+0xc]
  4150d7:	mov    ecx,DWORD PTR [ebp+0xc]
  4150da:	mov    eax,DWORD PTR [eax+0x10]
  4150dd:	add    eax,DWORD PTR [ecx+0xc]
  4150e0:	mov    ecx,DWORD PTR [ebp-0x18]
  4150e3:	cmp    ecx,eax
  4150e5:	jb     0x4150fd
  4150e7:	mov    eax,DWORD PTR [ebp+0xc]
  4150ea:	mov    eax,DWORD PTR [eax+0xc]
  4150ed:	mov    ecx,DWORD PTR [ebp+0xc]
  4150f0:	add    eax,DWORD PTR [ecx+0x8]
  4150f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4150f6:	sub    eax,ecx
  4150f8:	jmp    0x4153eb
  4150fd:	push   0xc
  4150ff:	push   DWORD PTR [ebp-0x4]
  415102:	lea    eax,[ebp-0x4c]
  415105:	push   eax
  415106:	call   0x414620
  41510b:	mov    eax,0xf89c85b5
  415110:	mov    DWORD PTR [ebp-0x2c],eax
  415113:	mov    DWORD PTR [ebp-0x30],0xf89c85b2
  41511a:	mov    DWORD PTR [ebp-0x34],0xf89c85b3
  415121:	mov    DWORD PTR [ebp-0x38],0xf89c85b0
  415128:	lea    ecx,[ebp-0x2c]
  41512b:	mov    DWORD PTR [ebp-0xc],ecx
  41512e:	lea    ecx,[ebp-0x30]
  415131:	mov    DWORD PTR [ebp-0x10],ecx
  415134:	lea    ecx,[ebp-0x34]
  415137:	mov    DWORD PTR [ebp+0xc],ecx
  41513a:	lea    ecx,[ebp-0x38]
  41513d:	mov    DWORD PTR [ebp-0x14],ecx
  415140:	mov    ecx,DWORD PTR [ebp+0x8]
  415143:	xor    ecx,edi
  415145:	add    ecx,ebx
  415147:	mov    DWORD PTR [ebp-0x18],ecx
  41514a:	jmp    0x415346
  41514f:	cmp    eax,0xf89c85b3
  415154:	je     0x415358
  41515a:	mov    ecx,DWORD PTR [ebp-0x8]
  41515d:	xor    ecx,edi
  41515f:	mov    esi,eax
  415161:	add    ecx,ebx
  415163:	mov    DWORD PTR [ebp+0x18],ecx
  415166:	mov    eax,DWORD PTR [ebp-0x18]
  415169:	xor    esi,edi
  41516b:	lea    eax,[eax+esi*1+0x3272dd]
  415172:	mov    DWORD PTR [ebp-0x18],eax
  415175:	mov    eax,DWORD PTR [ebp-0x8]
  415178:	mov    ecx,DWORD PTR [ebp-0x18]
  41517b:	xor    eax,edi
  41517d:	add    eax,ebx
  41517f:	cmp    ecx,eax
  415181:	jne    0x415196
  415183:	mov    eax,DWORD PTR [ebp+0x8]
  415186:	xor    eax,edi
  415188:	add    eax,ebx
  41518a:	push   eax
  41518b:	push   0xc
  41518d:	lea    eax,[ebp-0x4c]
  415190:	push   eax
  415191:	call   0x414b97
  415196:	mov    eax,DWORD PTR [ebp-0xc]
  415199:	mov    eax,DWORD PTR [eax]
  41519b:	xor    eax,edi
  41519d:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151a7:	xor    ecx,edi
  4151a9:	movzx  eax,al
  4151ac:	add    ecx,ebx
  4151ae:	cmp    eax,ecx
  4151b0:	je     0x41532e
  4151b6:	mov    eax,DWORD PTR [ebp-0x10]
  4151b9:	mov    eax,DWORD PTR [eax]
  4151bb:	xor    eax,edi
  4151bd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151c4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151c7:	xor    ecx,edi
  4151c9:	movzx  eax,al
  4151cc:	add    ecx,ebx
  4151ce:	cmp    eax,ecx
  4151d0:	je     0x41532e
  4151d6:	mov    eax,DWORD PTR [ebp+0xc]
  4151d9:	mov    eax,DWORD PTR [eax]
  4151db:	xor    eax,edi
  4151dd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151e7:	xor    ecx,edi
  4151e9:	movzx  eax,al
  4151ec:	add    ecx,ebx
  4151ee:	cmp    eax,ecx
  4151f0:	je     0x41532e
  4151f6:	mov    eax,DWORD PTR [ebp-0x14]
  4151f9:	mov    eax,DWORD PTR [eax]
  4151fb:	xor    eax,edi
  4151fd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415204:	mov    ecx,DWORD PTR [ebp+0x8]
  415207:	xor    ecx,edi
  415209:	movzx  eax,al
  41520c:	add    ecx,ebx
  41520e:	cmp    eax,ecx
  415210:	je     0x41532e
  415216:	mov    eax,DWORD PTR [ebp-0x10]
  415219:	mov    eax,DWORD PTR [eax]
  41521b:	xor    eax,edi
  41521d:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415224:	mov    ecx,DWORD PTR [ebp-0xc]
  415227:	mov    ecx,DWORD PTR [ecx]
  415229:	xor    ecx,edi
  41522b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415232:	xor    al,cl
  415234:	mov    ecx,DWORD PTR [ebp+0xc]
  415237:	mov    ecx,DWORD PTR [ecx]
  415239:	xor    ecx,edi
  41523b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415242:	or     al,cl
  415244:	mov    ecx,DWORD PTR [ebp-0xc]
  415247:	mov    ecx,DWORD PTR [ecx]
  415249:	xor    ecx,edi
  41524b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  415252:	cmp    cl,al
  415254:	jne    0x41532e
  41525a:	mov    eax,DWORD PTR [ebp+0xc]
  41525d:	mov    eax,DWORD PTR [eax]
  41525f:	xor    eax,edi
  415261:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415268:	mov    ecx,DWORD PTR [ebp-0x10]
  41526b:	mov    ecx,DWORD PTR [ecx]
  41526d:	xor    ecx,edi
  41526f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415276:	xor    al,cl
  415278:	mov    ecx,DWORD PTR [ebp-0x14]
  41527b:	mov    ecx,DWORD PTR [ecx]
  41527d:	xor    ecx,edi
  41527f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415286:	or     al,cl
  415288:	mov    ecx,DWORD PTR [ebp-0x10]
  41528b:	mov    ecx,DWORD PTR [ecx]
  41528d:	xor    ecx,edi
  41528f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  415296:	cmp    cl,al
  415298:	jne    0x41532e
  41529e:	mov    eax,DWORD PTR [ebp-0x14]
  4152a1:	mov    eax,DWORD PTR [eax]
  4152a3:	xor    eax,edi
  4152a5:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4152ac:	mov    ecx,DWORD PTR [ebp+0xc]
  4152af:	mov    ecx,DWORD PTR [ecx]
  4152b1:	xor    ecx,edi
  4152b3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152ba:	xor    al,cl
  4152bc:	mov    ecx,DWORD PTR [ebp-0xc]
  4152bf:	mov    ecx,DWORD PTR [ecx]
  4152c1:	xor    ecx,edi
  4152c3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152ca:	or     al,cl
  4152cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4152cf:	mov    ecx,DWORD PTR [ecx]
  4152d1:	xor    ecx,edi
  4152d3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  4152da:	cmp    cl,al
  4152dc:	jne    0x41532e
  4152de:	mov    eax,DWORD PTR [ebp-0x14]
  4152e1:	mov    eax,DWORD PTR [eax]
  4152e3:	xor    eax,edi
  4152e5:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4152ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4152ef:	mov    ecx,DWORD PTR [ecx]
  4152f1:	xor    ecx,edi
  4152f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152fa:	xor    al,cl
  4152fc:	mov    ecx,DWORD PTR [ebp-0x10]
  4152ff:	mov    ecx,DWORD PTR [ecx]
  415301:	xor    ecx,edi
  415303:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  41530a:	or     al,cl
  41530c:	mov    ecx,DWORD PTR [ebp-0x14]
  41530f:	mov    ecx,DWORD PTR [ecx]
  415311:	xor    ecx,edi
  415313:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  41531a:	cmp    cl,al
  41531c:	jne    0x41532e
  41531e:	lea    eax,[ebp-0x4c]
  415321:	push   eax
  415322:	call   0x414de8
  415327:	mov    ecx,DWORD PTR [ebp-0x44]
  41532a:	cmp    eax,ecx
  41532c:	je     0x415338
  41532e:	mov    eax,DWORD PTR [ebp+0x8]
  415331:	xor    eax,edi
  415333:	add    eax,ebx
  415335:	mov    DWORD PTR [ebp+0x18],eax
  415338:	mov    eax,DWORD PTR [ebp-0x8]
  41533b:	xor    eax,edi
  41533d:	lea    eax,[eax+esi*1+0x3272dd]
  415344:	xor    eax,edi
  415346:	mov    ecx,DWORD PTR [ebp+0x8]
  415349:	mov    edx,DWORD PTR [ebp+0x18]
  41534c:	xor    ecx,edi
  41534e:	add    ecx,ebx
  415350:	cmp    edx,ecx
  415352:	je     0x41514f
  415358:	mov    eax,DWORD PTR [ebp+0x8]
  41535b:	mov    ecx,DWORD PTR [ebp+0x18]
  41535e:	xor    eax,edi
  415360:	add    eax,ebx
  415362:	cmp    ecx,eax
  415364:	jne    0x415377
  415366:	mov    eax,DWORD PTR [ebp-0x8]
  415369:	mov    ecx,DWORD PTR [ebp+0x1c]
  41536c:	xor    eax,edi
  41536e:	lea    eax,[eax+ecx*1+0x3272dd]
  415375:	jmp    0x4153ee
  415377:	push   0x18
  415379:	push   DWORD PTR [ebp-0x4]
  41537c:	lea    eax,[ebp-0x64]
  41537f:	push   eax
  415380:	call   0x414620
  415385:	mov    eax,DWORD PTR [ebp+0x8]
  415388:	mov    ecx,DWORD PTR [ebp-0x18]
  41538b:	xor    eax,edi
  41538d:	add    eax,ebx
  41538f:	cmp    eax,ecx
  415391:	je     0x4153a6
  415393:	mov    eax,DWORD PTR [ebp+0x8]
  415396:	xor    eax,edi
  415398:	add    eax,ebx
  41539a:	push   eax
  41539b:	push   0x18
  41539d:	lea    eax,[ebp-0x64]
  4153a0:	push   eax
  4153a1:	call   0x414b97
  4153a6:	mov    eax,DWORD PTR [ebp-0x4]
  4153a9:	add    eax,0x18
  4153ac:	mov    DWORD PTR [ebp+0x18],eax
  4153af:	push   DWORD PTR [ebp-0x50]
  4153b2:	push   DWORD PTR [ebp+0x18]
  4153b5:	mov    eax,DWORD PTR [ebp-0x54]
  4153b8:	add    eax,DWORD PTR [ebp-0x20]
  4153bb:	push   eax
  4153bc:	call   0x414620
  4153c1:	mov    eax,DWORD PTR [ebp+0x8]
  4153c4:	mov    ecx,DWORD PTR [ebp-0x18]
  4153c7:	xor    eax,edi
  4153c9:	add    eax,ebx
  4153cb:	cmp    eax,ecx
  4153cd:	je     0x4153e0
  4153cf:	push   0x0
  4153d1:	push   DWORD PTR [ebp-0x50]
  4153d4:	mov    eax,DWORD PTR [ebp-0x54]
  4153d7:	add    eax,DWORD PTR [ebp-0x20]
  4153da:	push   eax
  4153db:	call   0x414b97
  4153e0:	mov    eax,DWORD PTR [ebp-0x24]
  4153e3:	mov    ecx,DWORD PTR [ebp-0x50]
  4153e6:	add    DWORD PTR [eax],ecx
  4153e8:	mov    eax,DWORD PTR [ebp-0x50]
  4153eb:	add    eax,DWORD PTR [ebp+0x1c]
  4153ee:	mov    DWORD PTR [ebp+0x1c],eax
  4153f1:	mov    eax,DWORD PTR [ebp-0x8]
  4153f4:	mov    ecx,DWORD PTR [ebp+0x1c]
  4153f7:	xor    eax,edi
  4153f9:	add    eax,ebx
  4153fb:	imul   eax,ecx
  4153fe:	mov    ecx,DWORD PTR [ebp+0x8]
  415401:	mov    edx,DWORD PTR [ebp-0x28]
  415404:	xor    ecx,edi
  415406:	lea    ecx,[ecx+edx*1+0x3272dd]
  41540d:	cmp    eax,ecx
  41540f:	jb     0x41506c
  415415:	mov    esi,DWORD PTR [ebp+0x14]
  415418:	mov    eax,DWORD PTR [ebp-0x20]
  41541b:	mov    DWORD PTR [esi],eax
  41541d:	jmp    0x415464
  41541f:	mov    ecx,DWORD PTR [ebp+0x8]
  415422:	mov    edx,DWORD PTR [ebp+0xc]
  415425:	xor    ecx,edi
  415427:	xor    edx,edi
  415429:	add    ecx,ebx
  41542b:	add    edx,ebx
  41542d:	cmp    ecx,edx
  41542f:	jne    0x415443
  415431:	mov    eax,ds:0x7f642d1c
  415436:	imul   eax,eax,0x9f15fcef
  41543c:	mov    ds:0x7f642d1c,eax
  415441:	jmp    0x415464
  415443:	mov    ecx,DWORD PTR [ebp+0x8]
  415446:	xor    ecx,edi
  415448:	add    ecx,ebx
  41544a:	cmp    eax,ecx
  41544c:	je     0x41545a
  41544e:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  415458:	jmp    0x415464
  41545a:	and    DWORD PTR ds:0x3343fa1c,0x5265ec3f
  415464:	pop    edi
  415465:	pop    esi
  415466:	pop    ebx
  415467:	leave  
  415468:	ret    0x18
  41546b:	push   ebp
  41546c:	mov    ebp,esp
  41546e:	and    esp,0xfffffff8
  415471:	mov    eax,DWORD PTR [ebp+0x20]
  415474:	sub    esp,0x14
  415477:	push   ebx
  415478:	mov    ebx,DWORD PTR [ebp+0x14]
  41547b:	push   esi
  41547c:	push   edi
  41547d:	cmp    eax,0xf89c85b5
  415482:	jne    0x41548e
  415484:	push   0xf89c85b2
  415489:	jmp    0x4155c0
  41548e:	mov    eax,DWORD PTR [ebp+0x20]
  415491:	cmp    eax,0xf89c85b2
  415496:	jne    0x4154a2
  415498:	push   0xf89c85b3
  41549d:	jmp    0x4155c0
  4154a2:	mov    eax,DWORD PTR [ebp+0x20]
  4154a5:	cmp    eax,0xf89c85b3
  4154aa:	jne    0x4154b6
  4154ac:	push   0xf89c85b0
  4154b1:	jmp    0x4155c0
  4154b6:	mov    eax,DWORD PTR [ebp+0x20]
  4154b9:	cmp    eax,0xf89c85b0
  4154be:	jne    0x4154ca
  4154c0:	push   0xf89c85b1
  4154c5:	jmp    0x4155c0
  4154ca:	mov    ecx,DWORD PTR [ebp+0x20]
  4154cd:	mov    eax,0xf89c85bc
  4154d2:	cmp    ecx,eax
  4154d4:	jne    0x415590
  4154da:	mov    eax,DWORD PTR [ebp+0x10]
  4154dd:	mov    DWORD PTR [esp+0xc],eax
  4154e1:	mov    eax,DWORD PTR [ebp+0x18]
  4154e4:	mov    DWORD PTR [esp+0x14],eax
  4154e8:	mov    eax,DWORD PTR [ebp+0xc]
  4154eb:	mov    DWORD PTR [esp+0x18],eax
  4154ef:	mov    eax,DWORD PTR [ebp+0x8]
  4154f2:	mov    DWORD PTR [esp+0x10],eax
  4154f6:	mov    eax,DWORD PTR [esp+0x10]
  4154fa:	mov    ecx,DWORD PTR [esp+0x14]
  4154fe:	mov    edi,0x7510896
  415503:	xor    eax,edi
  415505:	mov    esi,0x3272dd
  41550a:	add    eax,esi
  41550c:	mov    DWORD PTR [ecx],eax
  41550e:	mov    eax,DWORD PTR [esp+0xc]
  415512:	mov    eax,DWORD PTR [eax+0x194]
  415518:	mov    ecx,DWORD PTR [eax]
  41551a:	mov    eax,DWORD PTR [esp+0xc]
  41551e:	mov    eax,DWORD PTR [eax+0x194]
  415524:	mov    eax,DWORD PTR [eax]
  415526:	add    eax,DWORD PTR [ecx+0x3c]
  415529:	mov    ecx,DWORD PTR [esp+0xc]
  41552d:	mov    ecx,DWORD PTR [ecx+0x1d8]
  415533:	mov    ecx,DWORD PTR [ecx+0x14]
  415536:	push   0x4
  415538:	push   0x3000
  41553d:	push   DWORD PTR [eax+0x50]
  415540:	push   0x0
  415542:	call   ecx
  415544:	mov    DWORD PTR [ebx],eax
  415546:	mov    eax,DWORD PTR [esp+0x10]
  41554a:	push   DWORD PTR [esp+0xc]
  41554e:	xor    eax,edi
  415550:	add    eax,esi
  415552:	mov    DWORD PTR [esp+0x20],eax
  415556:	lea    eax,[esp+0x20]
  41555a:	push   eax
  41555b:	push   ebx
  41555c:	push   DWORD PTR [esp+0x20]
  415560:	push   DWORD PTR [esp+0x28]
  415564:	push   DWORD PTR [esp+0x24]
  415568:	call   0x414f2c
  41556d:	mov    eax,DWORD PTR [esp+0x10]
  415571:	mov    ecx,DWORD PTR [ebx]
  415573:	xor    eax,edi
  415575:	add    eax,esi
  415577:	cmp    ecx,eax
  415579:	je     0x4155d7
  41557b:	mov    eax,DWORD PTR [esp+0x18]
  41557f:	mov    ecx,DWORD PTR [esp+0x14]
  415583:	xor    eax,edi
  415585:	add    eax,esi
  415587:	imul   eax,DWORD PTR [esp+0x1c]
  41558c:	mov    DWORD PTR [ecx],eax
  41558e:	jmp    0x4155d7
  415590:	mov    ecx,DWORD PTR [ebp+0x20]
  415593:	cmp    ecx,0xf89c85b1
  415599:	jne    0x4155a2
  41559b:	push   0xf89c85be
  4155a0:	jmp    0x4155c0
  4155a2:	mov    ecx,DWORD PTR [ebp+0x20]
  4155a5:	cmp    ecx,0xf89c85be
  4155ab:	jne    0x4155b4
  4155ad:	push   0xf89c85bf
  4155b2:	jmp    0x4155c0
  4155b4:	mov    ecx,DWORD PTR [ebp+0x20]
  4155b7:	cmp    ecx,0xf89c85bf
  4155bd:	jne    0x4155d7
  4155bf:	push   eax
  4155c0:	push   DWORD PTR [ebp+0x1c]
  4155c3:	push   DWORD PTR [ebp+0x18]
  4155c6:	push   ebx
  4155c7:	push   DWORD PTR [ebp+0x10]
  4155ca:	push   DWORD PTR [ebp+0xc]
  4155cd:	push   DWORD PTR [ebp+0x8]
  4155d0:	call   0x41546b
  4155d5:	mov    DWORD PTR [ebx],eax
  4155d7:	mov    eax,DWORD PTR [ebx]
  4155d9:	pop    edi
  4155da:	pop    esi
  4155db:	pop    ebx
  4155dc:	mov    esp,ebp
  4155de:	pop    ebp
  4155df:	ret    0x1c
  4155e2:	push   ebp
  4155e3:	mov    ebp,esp
  4155e5:	sub    esp,0xc
  4155e8:	mov    eax,0xf89c85b5
  4155ed:	mov    DWORD PTR [ebp-0x8],eax
  4155f0:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  4155f7:	mov    ecx,DWORD PTR [ebp-0x8]
  4155fa:	xor    ecx,0x7510896
  415600:	add    ecx,0x3272dd
  415606:	mov    DWORD PTR [ebp-0x4],ecx
  415609:	mov    ecx,DWORD PTR [ebp+0xc]
  41560c:	push   eax
  41560d:	mov    DWORD PTR [ebp+0xc],ecx
  415610:	push   DWORD PTR [ebp+0xc]
  415613:	lea    eax,[ebp-0x4]
  415616:	push   DWORD PTR [ebp+0x8]
  415619:	push   eax
  41561a:	push   DWORD PTR [ebp+0xc]
  41561d:	push   DWORD PTR [ebp-0xc]
  415620:	push   DWORD PTR [ebp-0x8]
  415623:	call   0x41546b
  415628:	mov    DWORD PTR [ebp-0x4],eax
  41562b:	mov    eax,DWORD PTR [ebp-0x4]
  41562e:	leave  
  41562f:	ret    0x8
  415632:	mov    cl,0x27
  415634:	popa   
  415635:	test   bh,dh
  415637:	(bad)  
  415638:	cmc    
  415639:	aaa    
  41563a:	push   ss
  41563b:	shr    BYTE PTR [edi],0x1f
  41563e:	jbe    0x415698
  415640:	outs   dx,DWORD PTR ds:[esi]
  415641:	lea    edi,[ecx-0x2c]
  415644:	add    BYTE PTR [eax],al
  415646:	repz add al,0x0
  415649:	add    BYTE PTR [edx+0x24],ch
  41564c:	jl     0x4155f6
  41564e:	call   FWORD PTR [esi]
  415650:	inc    eax
  415651:	popa   
  415652:	icebp  
  415653:	retf   
  415654:	xchg   esp,eax
  415655:	pop    ecx
  415656:	shl    edi,1
  415658:	sbb    esi,DWORD PTR [eax]
  41565a:	ret    
  41565b:	mov    bl,0x86
  41565d:	sbb    al,0x13
  41565f:	push   es
  415660:	das    
  415661:	or     al,0x6f
  415663:	dec    ebx
  415664:	aas    
  415665:	dec    eax
  415666:	xor    bl,ch
  415668:	or     al,0xb8
  41566a:	xor    edi,edx
  41566c:	pop    edx
  41566d:	loop   0x4156d9
  41566f:	out    dx,eax
  415670:	mov    ds:0xf1037462,al
  415675:	out    0xa0,eax
  415677:	sub    eax,0x34bc3988
  41567c:	leave  
  41567d:	and    al,0xd6
  41567f:	les    eax,FWORD PTR [ebx+0x65]
  415682:	aas    
  415683:	mov    ecx,0x7bb0c7e1
  415688:	popf   
  415689:	imul   esi,DWORD PTR [ebx-0x341d4834],0x2f
  415690:	inc    ecx
  415691:	rcr    BYTE PTR [ecx-0xaedeb8c],cl
  415697:	jmp    0x4156a7
  415699:	cmp    DWORD PTR [ebp+0x1c],ebp
  41569c:	ficomp DWORD PTR [eax-0x6e]
  41569f:	dec    ecx
  4156a0:	pop    edx
  4156a1:	or     BYTE PTR [edx+ecx*2],dh
  4156a4:	inc    ebp
  4156a5:	dec    esp
  4156a6:	mov    ch,0xc0
  4156a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156a9:	out    0x6d,eax
  4156ab:	sub    eax,DWORD PTR [eax+0x6aed6afa]
  4156b1:	or     DWORD PTR ds:0x2179f406,edi
  4156b7:	cs jmp 0x415699
  4156ba:	lock loop 0x415736
  4156bd:	mov    eax,0x11c73f7b
  4156c2:	mov    bl,BYTE PTR [ebx-0x52]
  4156c5:	lods   al,BYTE PTR ds:[esi]
  4156c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156c7:	pusha  
  4156c8:	mov    dl,0x8d
  4156ca:	out    0xce,eax
  4156cc:	mov    bl,0x13
  4156ce:	mov    fs,eax
  4156d0:	loopne 0x41569d
  4156d2:	or     dl,BYTE PTR [ebx+0x37]
  4156d5:	add    al,0x81
  4156d7:	cmp    BYTE PTR [edi+0x63],ah
  4156da:	fnsave [ebx]
  4156dc:	fs inc ecx
  4156de:	test   BYTE PTR [esi-0x40b4cd86],dh
  4156e4:	shl    BYTE PTR [esi],1
  4156e6:	out    0xd3,eax
  4156e8:	test   DWORD PTR [ecx-0x74],ecx
  4156eb:	rol    DWORD PTR [edi],cl
  4156ed:	cmc    
  4156ee:	(bad)  
  4156ef:	les    ecx,FWORD PTR [edi+eiz*2-0x1fc447b1]
  4156f6:	out    0xa7,eax
  4156f8:	dec    ebp
  4156f9:	xchg   ecx,esp
  4156fb:	jmp    0x12c4:0xe8b1b6f1
  415702:	test   BYTE PTR [edx-0x42],ch
  415705:	(bad)  
  415706:	stos   BYTE PTR es:[edi],al
  415707:	sbb    al,0x90
  415709:	xor    DWORD PTR [ebx-0x35],ecx
  41570c:	push   eax
  41570d:	jb     0x4156b1
  41570f:	sub    BYTE PTR [edi],0x2
  415712:	shl    esp,cl
  415714:	adc    DWORD PTR [esi+0x5b5b8e74],ecx
  41571a:	les    ebx,FWORD PTR [esi]
  41571c:	sbb    eax,DWORD PTR [esi+0x3e]
  41571f:	cli    
  415720:	xor    DWORD PTR [esi-0x70],esi
  415723:	fsubp  st(2),st
  415725:	sbb    ah,BYTE PTR [ecx+0x59]
  415728:	js     0x41574a
  41572a:	out    dx,eax
  41572b:	out    dx,eax
  41572c:	popf   
  41572d:	inc    esi
  41572e:	outs   dx,DWORD PTR ds:[esi]
  41572f:	add    BYTE PTR [esi+edx*4+0x71],ch
  415733:	push   ebx
  415734:	push   ebp
  415735:	sbb    al,0x6
  415737:	jne    0x41574f
  415739:	jle    0x4157a2
  41573b:	dec    ecx
  41573c:	lahf   
  41573d:	outs   dx,DWORD PTR ds:[esi]
  41573e:	stc    
  41573f:	sar    BYTE PTR [edx+0x79],0x70
  415743:	mov    ds:0x3cd41469,al
  415748:	sbb    eax,0x4527846c
  41574d:	retf   
  41574e:	cmc    
  41574f:	ret    0xcceb
  415752:	adc    esp,DWORD PTR [ebx]
  415754:	sub    BYTE PTR [ebx-0x27],al
  415757:	clc    
  415758:	inc    esp
  415759:	test   DWORD PTR [eax-0xd],eax
  41575c:	ret    
  41575d:	lods   eax,DWORD PTR ds:[esi]
  41575e:	sbb    BYTE PTR [ecx+0x2d4d3b65],ch
  415764:	stc    
  415765:	or     DWORD PTR [ecx],ebp
  415767:	js     0x4157b7
  415769:	push   ebx
  41576a:	push   es
  41576b:	mov    ebp,0xc99fd5
  415770:	or     BYTE PTR [esi+0x9d24abe],bl
  415776:	je     0x4157f7
  415778:	mov    gs,ebp
  41577a:	pop    edx
  41577b:	push   esi
  41577c:	inc    esi
  41577d:	sub    ah,ah
  41577f:	ss lock pop eax
  415782:	jns    0x415719
  415784:	dec    ebp
  415785:	(bad)  
  415786:	popa   
  415787:	sbb    eax,0xf5e34c9a
  41578c:	icebp  
  41578d:	xor    cl,0x4b
  415790:	(bad)  
  415792:	iret   
  415793:	dec    esi
  415794:	shr    ebx,0x27
  415797:	mov    eax,ds:0xb762e510
  41579c:	popf   
  41579d:	mov    bh,0x8a
  41579f:	ja     0x79a264aa
  4157a5:	sbb    edi,DWORD PTR [eax+0x11]
  4157a8:	add    ah,dl
  4157aa:	mov    DWORD PTR [esi],edi
  4157ac:	xor    DWORD PTR [eax+0x44],edi
  4157af:	mov    ds:0xf05aeaee,eax
  4157b4:	cmp    eax,0x2fdc7f51
  4157b9:	dec    ecx
  4157ba:	pop    eax
  4157bb:	test   BYTE PTR [edx-0x70],0x39
  4157bf:	mov    ds:0x5355981d,al
  4157c4:	pop    es
  4157c5:	rcl    DWORD PTR [edx+0x2827d697],1
  4157cb:	(bad)  
  4157cc:	loop   0x4157fb
  4157ce:	lahf   
  4157cf:	ss mov edi,0xee39d1cc
  4157d5:	dec    edi
  4157d6:	lock mov ecx,DWORD PTR [esp+ecx*8-0x7c]
  4157db:	ins    BYTE PTR es:[edi],dx
  4157dc:	sub    eax,0x48a05b85
  4157e1:	xchg   esi,eax
  4157e2:	jnp    0x4157fe
  4157e4:	mov    WORD PTR [esi+0x1ba1d137],cs
  4157ea:	jl     0x41578d
  4157ec:	xor    edx,DWORD PTR [ebx-0x4bbe1852]
  4157f2:	mov    edi,esp
  4157f4:	mov    WORD PTR [ebp-0x57fe586e],ds
  4157fa:	scas   eax,DWORD PTR es:[edi]
  4157fb:	mov    al,0x21
  4157fd:	xor    bh,bh
  4157ff:	in     al,0xce
  415801:	jp     0x415859
  415803:	in     eax,0x20
  415805:	int3   
  415806:	xor    al,0xde
  415808:	jo     0x415841
  41580a:	mov    edx,edi
  41580c:	call   ebp
  41580e:	push   ebx
  41580f:	ja     0x41583a
  415811:	std    
  415812:	and    bl,cl
  415814:	imul   eax,esp,0x18955517
  41581a:	or     ebp,ecx
  41581c:	out    0x1f,al
  41581e:	data16 hlt 
  415820:	imul   esp,DWORD PTR [ecx+ebp*2-0x4a9d92e1],0x49
  415828:	(bad)  
  415829:	retf   
  41582a:	aam    0xb3
  41582c:	call   0x9aa86d86
  415831:	pop    es
  415832:	repz scas eax,DWORD PTR es:[edi]
  415834:	push   0x1d
  415836:	mov    al,0x9
  415838:	(bad)  
  415839:	test   al,0x1b
  41583b:	sbb    al,BYTE PTR [edx-0x58]
  41583e:	pop    esp
  41583f:	xor    ah,BYTE PTR [ebx+0x69c5bb35]
  415845:	iret   
  415846:	int3   
  415847:	repnz xchg ebp,eax
  415849:	cmp    dl,BYTE PTR [edx]
  41584b:	sbb    ecx,esp
  41584d:	mov    esp,0xccfb1789
  415852:	loop   0x41581d
  415854:	mov    esp,0xa2ffd91
  415859:	sbb    eax,0x84f72c84
  41585e:	fdiv   DWORD PTR [eax+0x1870ad9f]
  415864:	cld    
  415865:	inc    edx
  415866:	sti    
  415867:	pop    edi
  415868:	into   
  415869:	xor    al,0x1
  41586b:	add    eax,DWORD PTR [edi-0x9]
  41586e:	mov    ss,WORD PTR [eax]
  415870:	push   edx
  415871:	leave  
  415872:	add    edx,DWORD PTR [ecx+0x65]
  415875:	pop    ebx
  415876:	lea    ecx,[ebp-0x2a]
  415879:	ds ins DWORD PTR es:[edi],dx
  41587b:	cs clc 
  41587d:	das    
  41587e:	pop    ss
  41587f:	shl    BYTE PTR [ecx+0x638f8a57],0xfc
  415886:	and    dh,BYTE PTR [edi]
  415888:	scas   eax,DWORD PTR es:[edi]
  415889:	xor    ebx,0xffffffbe
  41588c:	scas   al,BYTE PTR es:[edi]
  41588d:	adc    BYTE PTR [ebx],ch
  41588f:	adc    al,0x84
  415891:	mov    eax,ds:0x83812998
  415896:	xchg   ebp,ecx
  415898:	out    0x5f,eax
  41589a:	cmovb  esi,edi
  41589d:	dec    esp
  41589e:	and    DWORD PTR [edi-0x3fccd7dc],0x72
  4158a5:	sbb    al,0x8
  4158a7:	xchg   esp,eax
  4158a8:	mov    al,ds:0x48836fe0
  4158ad:	fwait
  4158ae:	xor    al,0xa
  4158b0:	out    dx,eax
  4158b1:	test   cl,0x48
  4158b4:	mov    eax,ds:0xc65a70e0
  4158b9:	cld    
  4158ba:	lock push eax
  4158bc:	add    BYTE PTR [edi+0x64],0x8b
  4158c0:	push   eax
  4158c1:	pushf  
  4158c2:	pop    ebx
  4158c3:	sar    BYTE PTR [esi+0x4f479e2d],cl
  4158c9:	(bad)  
  4158ca:	out    0x1a,al
  4158cc:	cmp    dl,BYTE PTR [eax-0x535459da]
  4158d2:	add    BYTE PTR [ebp-0x2e],cl
  4158d5:	jmp    0x4158e1
  4158d7:	push   edi
  4158d8:	and    eax,0x138b96f4
  4158dd:	xchg   edx,eax
  4158de:	jo     0x4158ce
  4158e0:	(bad)  
  4158e1:	sar    DWORD PTR [ecx],cl
  4158e3:	cdq    
  4158e4:	push   0x91fb998f
  4158e9:	mov    esp,0x60ebe48c
  4158ee:	pop    ds
  4158ef:	dec    edx
  4158f0:	loope  0x415915
  4158f2:	scas   al,BYTE PTR es:[edi]
  4158f3:	jg     0x41593a
  4158f5:	in     al,dx
  4158f6:	in     eax,dx
  4158f7:	mov    al,ds:0xe1400ce1
  4158fc:	out    0xb4,al
  4158fe:	push   ecx
  4158ff:	inc    edi
  415900:	dec    esp
  415901:	jmp    0x1b4:0xd49ebd77
  415908:	dec    ecx
  415909:	not    BYTE PTR [edx-0x3ba04c45]
  41590f:	add    bl,BYTE PTR [ecx+edx*1]
  415912:	cmp    DWORD PTR [edx],eax
  415914:	push   edx
  415915:	aaa    
  415916:	and    dl,dl
  415918:	cmp    BYTE PTR [ebp-0x66396b8c],ch
  41591e:	fmul   DWORD PTR [edi-0x13]
  415921:	pop    ebp
  415922:	fidivr WORD PTR [edx*2+0x1d504f9b]
  415929:	imul   edi,esp,0x2d33e392
  41592f:	push   eax
  415930:	xor    eax,DWORD PTR [ebp-0x50]
  415933:	pop    ss
  415934:	jae    0x415959
  415936:	(bad)  
  415937:	mov    ds:0xa4c1aee9,eax
  41593c:	scas   al,BYTE PTR es:[edi]
  41593d:	and    al,0x55
  41593f:	sub    eax,0x1a90427c
  415944:	xchg   esp,eax
  415945:	int    0xd7
  415947:	aad    0xcc
  415949:	add    al,0x42
  41594b:	es (bad) 
  41594e:	sbb    eax,0xf2257b65
  415953:	inc    ebx
  415954:	pushf  
  415955:	(bad)  
  415956:	jmp    0x187d2236
  41595b:	and    BYTE PTR [edi+ecx*2-0x4e8021ea],ah
  415962:	pushf  
  415963:	rcl    al,cl
  415965:	test   al,0x6d
  415967:	mov    ecx,0x27c21228
  41596c:	pusha  
  41596d:	loope  0x41597e
  41596f:	and    cl,bh
  415971:	mov    ecx,0x405abd8b
  415976:	dec    ebp
  415977:	mov    cs,WORD PTR [ebx+0x60]
  41597a:	or     BYTE PTR [edx],bl
  41597c:	dec    esp
  41597d:	push   0x44a405f9
  415982:	jecxz  0x4159bc
  415984:	mov    ch,0x74
  415986:	fistp  QWORD PTR [eax]
  415988:	dec    ebx
  415989:	cmp    al,0xba
  41598b:	jnp    0x4159e4
  41598d:	mov    bh,bl
  41598f:	jp     0x4159b8
  415991:	not    BYTE PTR [edi-0x31]
  415994:	daa    
  415995:	mov    esp,0x59fddcae
  41599a:	sbb    eax,0xe4aff116
  41599f:	add    ch,0x3b
  4159a2:	xchg   ebx,eax
  4159a3:	(bad)  
  4159a4:	das    
  4159a5:	mov    al,ds:0x6ff7585b
  4159aa:	cmp    eax,0xf0cfa0b2
  4159af:	aas    
  4159b0:	mov    bl,0x17
  4159b2:	or     al,0x5
  4159b4:	test   al,0xa8
  4159b6:	jg     0x4159bb
  4159b8:	data16 div dl
  4159bb:	xor    ebx,ecx
  4159bd:	xchg   esp,eax
  4159be:	push   0x79880918
  4159c3:	cmp    cl,cl
  4159c5:	jl     0x4159b0
  4159c7:	ficomp DWORD PTR [ecx-0x73ce30ff]
  4159cd:	xchg   DWORD PTR [edx],ebx
  4159cf:	add    eax,0xeff7fec5
  4159d4:	and    al,0xe3
  4159d6:	sar    BYTE PTR [ebx+0xbe12dda],1
  4159dc:	pop    ebp
  4159dd:	or     ebp,DWORD PTR [edi+0x24449ae8]
  4159e3:	addr16 out 0xeb,eax
  4159e6:	add    ebx,edi
  4159e8:	in     eax,dx
  4159e9:	sub    bl,al
  4159eb:	mov    dh,0x54
  4159ed:	and    dl,BYTE PTR [ebx]
  4159ef:	mov    bh,0xa7
  4159f1:	ds (bad) 
  4159f3:	cmp    al,BYTE PTR [esi+ebx*1-0x21]
  4159f7:	gs out dx,al
  4159f9:	test   eax,0x7d0bbf43
  4159fe:	ins    BYTE PTR es:[edi],dx
  4159ff:	hlt    
  415a00:	cmp    DWORD PTR [eax+0x6b],ebx
  415a03:	popf   
  415a04:	(bad)  
  415a06:	loop   0x4159d2
  415a08:	int    0x3e
  415a0a:	sbb    al,0x42
  415a0c:	lock push bp
  415a0f:	push   ebx
  415a10:	ret    0x79c0
  415a13:	jg     0x4159a6
  415a15:	dec    edx
  415a16:	add    eax,0xb268d850
  415a1b:	jae    0x415a94
  415a1d:	pop    ebp
  415a1e:	mov    WORD PTR [edi],ds
  415a20:	stos   BYTE PTR es:[edi],al
  415a21:	sbb    bl,BYTE PTR [ebx-0x3c9f4445]
  415a27:	pushf  
  415a28:	in     eax,0xe4
  415a2a:	inc    ecx
  415a2b:	xor    BYTE PTR [ebp-0x1c],0xd
  415a2f:	lea    edi,[eiz*1-0x1f9aa6f2]
  415a36:	xor    eax,0x8b50f6d2
  415a3b:	cmp    esp,0x7f
  415a3e:	into   
  415a3f:	and    eax,0xa2193e89
  415a44:	mul    DWORD PTR [ecx+0x6f]
  415a47:	das    
  415a48:	sbb    eax,0xf20b7d15
  415a4d:	into   
  415a4e:	adc    cl,dl
  415a50:	mov    eax,edx
  415a52:	popa   
  415a53:	ss xor ebp,ecx
  415a56:	ret    
  415a57:	je     0x415a40
  415a59:	cwde   
  415a5a:	pusha  
  415a5b:	jge    0x415acc
  415a5d:	cmp    al,0xea
  415a5f:	jb     0x415a68
  415a61:	pop    eax
  415a62:	dec    ebx
  415a63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a64:	sbb    al,0x41
  415a66:	hlt    
  415a67:	cmp    DWORD PTR [ecx+edi*1],ebx
  415a6a:	dec    edi
  415a6b:	pop    edi
  415a6c:	mov    ecx,0xef788a5
  415a71:	enter  0x40bd,0x5e
  415a75:	inc    edx
  415a76:	(bad)  
  415a77:	jp     0x415a65
  415a79:	xor    al,bl
  415a7b:	leave  
  415a7c:	jmp    0x415ab0
  415a7e:	and    eax,ebx
  415a80:	mov    ebx,eax
  415a82:	sbb    DWORD PTR [ebp-0x3a],esi
  415a85:	je     0x415a78
  415a87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a88:	mov    bl,0x25
  415a8a:	sub    dl,BYTE PTR ss:[ecx+0x50340f83]
  415a91:	push   esp
  415a92:	lods   eax,DWORD PTR ds:[esi]
  415a93:	(bad)  [eax+0x4b749a1b]
  415a99:	cli    
  415a9a:	(bad)  
  415a9b:	sti    
  415a9c:	xor    edi,eax
  415a9e:	outs   dx,DWORD PTR ds:[esi]
  415a9f:	repnz or ch,BYTE PTR [eax]
  415aa2:	pop    esi
  415aa3:	test   al,0x4f
  415aa5:	sub    BYTE PTR [ecx-0x60a2d008],cl
  415aab:	pusha  
  415aac:	cmp    al,0x70
  415aae:	mov    al,0x29
  415ab0:	sahf   
  415ab1:	pop    es
  415ab2:	jge    0x415a9f
  415ab4:	pop    ebx
  415ab5:	jae    0x415b11
  415ab7:	popf   
  415ab8:	mov    ebp,0x6e9797d8
  415abd:	push   ds
  415abe:	inc    edx
  415abf:	lock (bad) 
  415ac2:	in     eax,dx
  415ac3:	fcom   QWORD PTR [edi]
  415ac5:	mov    ch,0x71
  415ac7:	(bad)  
  415ac8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ac9:	repnz lods eax,DWORD PTR es:[esi]
  415acc:	das    
  415acd:	cmp    edx,0x8bac864a
  415ad3:	int3   
  415ad4:	jl     0x415aa0
  415ad6:	(bad)  
  415ad7:	mov    esp,0x824f81ac
  415adc:	test   eax,0xfc30f681
  415ae1:	jno    0x415b30
  415ae3:	and    al,0x84
  415ae5:	adc    DWORD PTR [ebx],0x91ecad9d
  415aeb:	jg     0x415acf
  415aed:	scas   al,BYTE PTR es:[edi]
  415aee:	sub    ch,dh
  415af0:	add    BYTE PTR [ecx-0x2d],0x13
  415af4:	inc    eax
  415af5:	jmp    0x415af0
  415af7:	lahf   
  415af8:	sbb    BYTE PTR [ecx-0x1a],bl
  415afb:	jp     0x415acb
  415afd:	push   edi
  415afe:	ja     0x415ae2
  415b00:	xchg   edi,eax
  415b01:	add    sp,WORD PTR [ebp+0x7d93bcf8]
  415b08:	rcl    DWORD PTR [edx],1
  415b0a:	xchg   edx,eax
  415b0b:	cmp    DWORD PTR [edx+0x4e],edx
  415b0e:	xchg   ecx,eax
  415b0f:	sbb    eax,0xcbbb426f
  415b14:	mov    ds:0x615d0bd1,al
  415b19:	jmp    0xc331:0x3876ac40
  415b20:	xchg   ebx,eax
  415b21:	mov    DWORD PTR [ecx-0x312ecbf1],eax
  415b27:	fisubr DWORD PTR [esi]
  415b29:	mov    bl,0x75
  415b2b:	bound  eax,QWORD PTR [ecx+0x6c]
  415b2e:	in     eax,0xbf
  415b30:	in     al,dx
  415b31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b32:	lock dec eax
  415b34:	xor    eax,0x221583ef
  415b39:	cmp    ecx,DWORD PTR [ebp+0xac4]
  415b3f:	add    BYTE PTR [eax],al
  415b41:	add    al,al
  415b43:	push   ss
  415b44:	sbb    BYTE PTR [ebx-0x2a],0xdf
  415b48:	fistp  DWORD PTR [edi-0x239a6a81]
  415b4e:	add    DWORD PTR [eax-0x2693825d],esp
  415b54:	add    BYTE PTR [eax],al
  415b56:	repz add al,0x0
  415b59:	add    BYTE PTR [esi],bl
  415b5b:	imul   ebx,DWORD PTR [eax-0x42c726e9],0x37b0f571
  415b65:	ror    DWORD PTR [esi+0xe],1
  415b68:	stos   BYTE PTR es:[edi],al
  415b69:	or     eax,0xed2b7005
  415b6e:	test   DWORD PTR [eax+0x13e5f206],ebx
  415b74:	mov    ah,BYTE PTR [edx]
  415b76:	out    0x33,eax
  415b78:	push   esi
  415b79:	mov    bh,0x6f
  415b7b:	jmp    0xcec6:0x225d0bf0
  415b82:	adc    eax,0x3d6c8163
  415b87:	jle    0x415ba6
  415b89:	or     cl,bh
  415b8b:	and    BYTE PTR [ebx+0x6e],al
  415b8e:	es pop esp
  415b90:	sub    BYTE PTR [ebx-0x5f],0xf3
  415b94:	mov    eax,ds:0xf3a2f478
  415b99:	nop
  415b9a:	bound  ecx,QWORD PTR [eax]
  415b9c:	lds    edi,FWORD PTR [ecx+esi*1]
  415b9f:	xchg   edx,eax
  415ba0:	xchg   ecx,eax
  415ba1:	inc    esi
  415ba2:	fdivr  st,st(3)
  415ba4:	pop    ecx
  415ba5:	loopne 0x415c13
  415ba7:	and    dh,BYTE PTR [edx]
  415ba9:	stos   DWORD PTR es:[edi],eax
  415baa:	or     ebx,DWORD PTR [ebp+0x16]
  415bad:	scas   al,BYTE PTR es:[edi]
  415bae:	jbe    0x415bb8
  415bb0:	cwde   
  415bb1:	cwde   
  415bb2:	xchg   edx,eax
  415bb3:	inc    ebp
  415bb4:	bound  edi,QWORD PTR [esi-0x7db761cb]
  415bba:	mov    esp,0x86070bf9
  415bbf:	icebp  
  415bc0:	hlt    
  415bc1:	loopne 0x415b84
  415bc3:	out    dx,eax
  415bc4:	out    0x89,al
  415bc6:	es mov ah,0x72
  415bc9:	in     eax,dx
  415bca:	dec    edi
  415bcb:	icebp  
  415bcc:	scas   al,BYTE PTR es:[edi]
  415bcd:	mov    DWORD PTR [esi+esi*1+0xd0b967d],esp
  415bd4:	push   edx
  415bd5:	and    esp,edx
  415bd7:	cwde   
  415bd8:	cmp    al,0x67
  415bda:	leave  
  415bdb:	sub    bl,BYTE PTR [esi]
  415bdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bde:	test   BYTE PTR gs:[ecx-0x1920b787],ch
  415be5:	mov    edx,0x9d594cb8
  415bea:	mov    ch,0x16
  415bec:	push   cs
  415bed:	mov    ds:0x54d8546a,al
  415bf2:	cmp    eax,0x37f612fc
  415bf7:	inc    ebp
  415bf8:	fucomi st,st(6)
  415bfa:	xor    BYTE PTR ds:0x3927ddee,0xa8
  415c01:	and    ah,BYTE PTR [edx+ecx*1]
  415c04:	(bad)  
  415c05:	jmp    0x415c80
  415c07:	pop    es
  415c08:	cmc    
  415c09:	cs call 0xe69d5c59
  415c0f:	(bad)  
  415c10:	imul   WORD PTR [eax-0x53]
  415c14:	outs   dx,BYTE PTR ds:[esi]
  415c15:	push   edx
  415c16:	xor    eax,0x426387f6
  415c1b:	cmp    DWORD PTR [edx],0x31
  415c1e:	jns    0x415c7e
  415c20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c21:	push   ss
  415c22:	icebp  
  415c23:	mov    edi,0xd0d7a9d
  415c28:	call   0x16a4:0x56c1b100
  415c2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c30:	xchg   edi,eax
  415c31:	and    eax,0xff7482c3
  415c36:	sbb    DWORD PTR [edi+0x6918d3b9],esi
  415c3c:	test   al,0x22
  415c3e:	xchg   edx,eax
  415c3f:	lar    ebx,WORD PTR [ebx+0x38ce8456]
  415c46:	jne    0x415c90
  415c48:	xlat   BYTE PTR ds:[ebx]
  415c49:	js     0x415ca3
  415c4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c4c:	outs   dx,BYTE PTR ds:[esi]
  415c4d:	xchg   esi,eax
  415c4e:	pop    ss
  415c4f:	xor    edx,ebx
  415c51:	sub    eax,0x527f0c11
  415c56:	test   eax,0x1f74061f
  415c5b:	and    BYTE PTR [ebp+0x54],bl
  415c5e:	mov    ch,0x6a
  415c60:	inc    ecx
  415c61:	in     al,0x38
  415c63:	push   esp
  415c64:	cmp    eax,0xea758492
  415c69:	shl    BYTE PTR [ecx-0x7c],0x5f
  415c6d:	inc    ecx
  415c6e:	imul   ebp,DWORD PTR [ecx+0x43],0xd313135e
  415c75:	mov    edi,0x68da98bf
  415c7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c7b:	jmp    0x415c5f
  415c7d:	mov    ebp,0x2a13bdaf
  415c82:	jp     0x415c91
  415c84:	push   ecx
  415c85:	aad    0x3
  415c87:	ret    0xf5ab
  415c8a:	jecxz  0x415cd1
  415c8c:	fistp  DWORD PTR [ecx-0x66]
  415c8f:	shl    BYTE PTR [edi+esi*2-0x6e7b7108],0x9a
  415c97:	ror    DWORD PTR [eax+0x702d6c4a],1
  415c9d:	push   es
  415c9e:	test   DWORD PTR ds:0x90c4fa0a,0xa889ce9a
  415ca8:	pop    edx
  415ca9:	jne    0x415c9e
  415cab:	int3   
  415cac:	mov    ah,0x76
  415cae:	stc    
  415caf:	mov    al,cl
  415cb1:	jecxz  0x415ca7
  415cb3:	(bad)  
  415cb4:	imul   esp,DWORD PTR [edx-0x61],0xd6410e63
  415cbb:	xlat   BYTE PTR ds:[ebx]
  415cbc:	cmp    al,0x3c
  415cbe:	or     bl,BYTE PTR [esi-0xf8b2930]
  415cc4:	cmp    DWORD PTR [eax+0x6c],0x8cbef643
  415ccb:	(bad)  
  415ccc:	push   0x213ee1bd
  415cd1:	test   bh,cl
  415cd3:	nop
  415cd4:	pop    es
  415cd5:	sub    al,0xed
  415cd7:	jge    0x415ca4
  415cd9:	add    bh,BYTE PTR [esi-0x47135fca]
  415cdf:	sbb    ebx,esp
  415ce1:	dec    ebp
  415ce2:	pop    ebx
  415ce3:	xchg   ebp,eax
  415ce4:	cld    
  415ce5:	jae    0x415caa
  415ce7:	test   al,0x49
  415ce9:	pop    es
  415cea:	(bad)  [ecx+0x609a173c]
  415cf0:	add    DWORD PTR [esi-0x5b],eax
  415cf3:	js     0x415d20
  415cf5:	shl    BYTE PTR [esi+0x9d1f203],1
  415cfb:	push   es
  415cfc:	fcmovnu st,st(0)
  415cfe:	cli    
  415cff:	pop    edi
  415d00:	xlat   BYTE PTR ds:[ebx]
  415d01:	or     BYTE PTR ds:0x366d342f,al
  415d07:	jmp    0x728cbf36
  415d0c:	pop    ds
  415d0d:	jge    0x415d31
  415d0f:	sub    BYTE PTR [edi+0x4c],ah
  415d12:	xchg   esi,eax
  415d13:	pop    es
  415d14:	ficomp DWORD PTR [esi+0x682636a3]
  415d1a:	or     ah,BYTE PTR [eax]
  415d1c:	xchg   esp,eax
  415d1d:	mov    eax,0x169ca449
  415d22:	loopne 0x415cb2
  415d24:	jnp    0x415d4d
  415d26:	jo     0x415d96
  415d28:	jmp    0x68e6:0xd359932e
  415d2f:	hlt    
  415d30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d31:	or     eax,0xf398dea5
  415d36:	jno    0x415cf0
  415d38:	push   ebp
  415d39:	sbb    ebp,ebp
  415d3b:	call   0xeb54:0xc614fc04
  415d42:	push   0xffffff8e
  415d44:	ins    BYTE PTR es:[edi],dx
  415d45:	cmp    eax,0x248e56a8
  415d4a:	push   ecx
  415d4b:	iret   
  415d4c:	sub    DWORD PTR [ecx-0x434fc298],edx
  415d52:	push   eax
  415d53:	retf   0x1e3a
  415d56:	dec    ebx
  415d57:	aaa    
  415d58:	mov    es,eax
  415d5a:	dec    esi
  415d5b:	(bad)  
  415d5d:	xchg   ebx,eax
  415d5e:	cmp    eax,0x721bcbf8
  415d63:	or     eax,0xc58a9b3b
  415d68:	adc    BYTE PTR [esi-0x1bfd6d19],ah
  415d6e:	repnz das 
  415d70:	imul   edx,DWORD PTR [edx+esi*8+0x5a],0x6f18018
  415d78:	adc    ebp,edi
  415d7a:	add    ebp,edx
  415d7c:	in     al,0x1e
  415d7e:	jge    0x415d87
  415d80:	cwde   
  415d81:	fwait
  415d82:	clc    
  415d83:	xchg   ebp,eax
  415d84:	adc    dh,dl
  415d86:	icebp  
  415d87:	and    ah,bl
  415d89:	dec    ebp
  415d8a:	mov    ds:0x154f5c53,eax
  415d8f:	jns    0x415d79
  415d91:	sub    al,0x5c
  415d93:	in     eax,dx
  415d94:	into   
  415d95:	in     al,dx
  415d96:	jnp    0x415d64
  415d98:	pop    ebx
  415d99:	dec    esp
  415d9a:	sbb    al,BYTE PTR [ecx-0x62]
  415d9d:	pop    ds
  415d9e:	push   ecx
  415d9f:	sahf   
  415da0:	sub    eax,0x5f1dde26
  415da5:	jns    0x415e10
  415da7:	mov    ds:0x729d2c18,eax
  415dac:	sbb    ebx,DWORD PTR [ecx+0x3ca18d25]
  415db2:	sbb    BYTE PTR [eax+edx*1+0x7b7621e5],dl
  415db9:	push   edx
  415dba:	xlat   BYTE PTR ds:[ebx]
  415dbb:	(bad)  
  415dbc:	xchg   edi,eax
  415dbd:	xchg   esi,eax
  415dbe:	sahf   
  415dbf:	call   0x4070:0xed36bfa2
  415dc6:	loop   0x415d6e
  415dc8:	xlat   BYTE PTR ds:[ebx]
  415dc9:	stc    
  415dca:	fwait
  415dcb:	(bad)  
  415dcc:	rcr    DWORD PTR [ebp+0x38],cl
  415dcf:	hlt    
  415dd0:	jmp    0x415e34
  415dd2:	fucomp st(0)
  415dd4:	dec    edi
  415dd5:	mov    edx,0xab095e3e
  415dda:	push   0xfffffff5
  415ddc:	sbb    cl,0x99
  415ddf:	(bad)  
  415de0:	jle    0x415e5d
  415de2:	jmp    0x86e5be9d
  415de7:	arpl   WORD PTR [edx+ecx*1-0x7d],dx
  415deb:	in     eax,dx
  415dec:	dec    esi
  415ded:	shl    edx,1
  415def:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415df0:	ret    0x6546
  415df3:	xor    eax,0xdfd2cdc1
  415df8:	rcl    BYTE PTR [ecx+0x75],0x9b
  415dfc:	sar    DWORD PTR [ebx+0x4f6fc125],1
  415e02:	xchg   ecx,eax
  415e03:	jmp    0x415e04
  415e05:	(bad)  
  415e06:	shl    al,0x4e
  415e09:	cmp    ch,bl
  415e0b:	ja     0x415e0c
  415e0d:	lea    ebx,[edx+0x72693142]
  415e13:	inc    ebp
  415e14:	pop    ebx
  415e15:	imul   ecx,esp,0xffffff91
  415e18:	test   esi,edx
  415e1a:	adc    al,0xe9
  415e1c:	loop   0x415da4
  415e1e:	rol    DWORD PTR [edx],1
  415e20:	jb     0x415e96
  415e22:	ror    dh,0x90
  415e25:	push   ecx
  415e26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e27:	pop    esp
  415e28:	push   esi
  415e29:	pop    ecx
  415e2a:	arpl   WORD PTR [eax-0xba15eb],cx
  415e30:	sbb    al,0xec
  415e32:	inc    eax
  415e33:	scas   eax,DWORD PTR es:[edi]
  415e34:	ja     0x415dbf
  415e36:	xchg   esp,eax
  415e37:	add    BYTE PTR [ebp-0x67],ch
  415e3a:	push   es
  415e3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e3c:	repnz adc DWORD PTR [eax],esi
  415e3f:	jae    0x415e55
  415e41:	mov    eax,ds:0x96f00654
  415e46:	dec    esi
  415e47:	jmp    0x7a1c:0x6c827d5a
  415e4e:	jae    0x415e04
  415e50:	in     al,dx
  415e51:	add    eax,0xa398abcf
  415e56:	ror    BYTE PTR [edx],cl
  415e58:	mov    eax,esi
  415e5a:	call   0x435bd9e3
  415e5f:	sbb    eax,0x9ab35754
  415e64:	fdiv   QWORD PTR [edi-0xc9608b5]
  415e6a:	es dec ebx
  415e6c:	shr    al,cl
  415e6e:	mov    ah,0x8f
  415e70:	mov    DWORD PTR [eax+0x1d505f05],eax
  415e76:	or     al,0x3
  415e78:	stc    
  415e79:	rol    BYTE PTR [edx],cl
  415e7b:	jb     0x415e23
  415e7d:	les    esp,FWORD PTR [eax+edi*8-0xc]
  415e81:	aaa    
  415e82:	fdiv   DWORD PTR [esi]
  415e84:	in     al,dx
  415e85:	and    edi,esi
  415e87:	fisubr WORD PTR [ebx]
  415e8a:	sahf   
  415e8b:	dec    edi
  415e8c:	test   BYTE PTR [esi+0x3c],ah
  415e8f:	shl    DWORD PTR [esi+ebp*8-0x312dcd56],cl
  415e96:	(bad)  
  415e97:	mov    ch,0xbf
  415e99:	imul   esi,esp,0xfffffffb
  415e9c:	sbb    al,0xba
  415e9e:	std    
  415e9f:	push   ss
  415ea0:	jb     0x415ee9
  415ea2:	bound  ebp,QWORD PTR [ebp-0x7a]
  415ea5:	and    eax,0x43219be0
  415eaa:	jmp    0x415e5d
  415eac:	adc    DWORD PTR [ecx+0x45],esi
  415eaf:	ret    0x56b1
  415eb2:	or     eax,0x28faca2
  415eb7:	out    dx,eax
  415eb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415eb9:	xchg   BYTE PTR ds:0x6188f394,bh
  415ebf:	stos   BYTE PTR es:[edi],al
  415ec0:	dec    ecx
  415ec1:	jb     0x415e4a
  415ec3:	or     ch,cl
  415ec5:	mov    bh,0x3e
  415ec7:	and    ecx,DWORD PTR [edi-0x1d3c1d19]
  415ecd:	rcr    ah,0xa8
  415ed0:	ror    DWORD PTR [ecx],1
  415ed2:	arpl   WORD PTR [esi],sp
  415ed4:	mov    ebx,0x2774175d
  415ed9:	pop    ebx
  415eda:	in     al,0x4a
  415edc:	sub    DWORD PTR ds:0x3e968ca6,ebx
  415ee2:	or     DWORD PTR [ecx+0x708dfb91],esp
  415ee8:	push   esi
  415ee9:	mov    edi,0xcf768a36
  415eee:	xlat   BYTE PTR ds:[ebx]
  415eef:	xor    DWORD PTR ss:[ebp+0x7b37860f],ebx
  415ef6:	jp     0x415e88
  415ef8:	(bad)  
  415ef9:	punpcklbw mm1,mm7
  415efc:	jecxz  0x415efe
  415efe:	inc    ebx
  415eff:	cmp    cl,BYTE PTR [esp+eiz*4+0x5c]
  415f03:	push   ss
  415f04:	sbb    ecx,esi
  415f06:	lods   eax,DWORD PTR ds:[esi]
  415f07:	js     0x415f85
  415f09:	inc    edi
  415f0a:	mov    esp,?
  415f0c:	sbb    DWORD PTR [esi],esi
  415f0e:	dec    edi
  415f0f:	loope  0x415eeb
  415f11:	mov    ebp,0x142c26bd
  415f16:	adc    edx,ebp
  415f18:	iret   
  415f19:	fsub   DWORD PTR [eax+ebp*4+0x2e910ca4]
  415f20:	lock cmp ah,BYTE PTR [edi+0x43]
  415f24:	cmp    BYTE PTR [ebp+eax*1+0x2ebf7e02],ah
  415f2b:	inc    ebp
  415f2c:	cdq    
  415f2d:	ins    BYTE PTR es:[edi],dx
  415f2e:	jbe    0x415ee5
  415f30:	or     ah,al
  415f32:	and    eax,0xddca2113
  415f37:	int    0xa5
  415f39:	push   cs
  415f3a:	das    
  415f3b:	mov    bh,0xa7
  415f3d:	sbb    BYTE PTR [eax*2-0x2dd8d519],dh
  415f44:	push   0xffffffc3
  415f46:	ins    BYTE PTR es:[edi],dx
  415f47:	or     ch,dl
  415f49:	(bad)  
  415f4a:	pop    ebp
  415f4b:	xlat   BYTE PTR ds:[ebx]
  415f4c:	aad    0xcd
  415f4e:	sbb    dl,bh
  415f50:	pop    edi
  415f51:	xchg   edx,eax
  415f52:	dec    eax
  415f53:	xchg   DWORD PTR ds:0x85d49a5e,edi
  415f59:	loop   0x415f50
  415f5b:	aas    
  415f5c:	mov    ah,0x22
  415f5e:	cld    
  415f5f:	icebp  
  415f60:	cmp    eax,0xf4b98c26
  415f65:	inc    esi
  415f66:	xlat   BYTE PTR ds:[ebx]
  415f67:	cmp    al,0x35
  415f69:	adc    DWORD PTR [edx],esp
  415f6b:	test   eax,0xde08e84a
  415f70:	cmp    DWORD PTR [eax+0x56e0c1d0],eax
  415f76:	xchg   esi,eax
  415f77:	push   es
  415f78:	adc    al,0xe0
  415f7a:	adc    dh,BYTE PTR [eax]
  415f7c:	stos   DWORD PTR es:[edi],eax
  415f7d:	mov    WORD PTR [edx+0x5f6a458],fs
  415f83:	xor    al,0x30
  415f85:	sbb    esi,ebp
  415f87:	cld    
  415f88:	addr16 push cs
  415f8a:	push   ss
  415f8b:	sbb    al,0xb
  415f8d:	(bad)  
  415f8e:	lods   al,BYTE PTR ds:[esi]
  415f8f:	mov    ecx,0x9c8161a2
  415f94:	xchg   ebp,eax
  415f95:	and    bh,BYTE PTR [bx+si]
  415f98:	sbb    eax,0x3f414f3c
  415f9d:	or     eax,0x6f78a151
  415fa2:	pop    edi
  415fa3:	ret    
  415fa4:	scas   al,BYTE PTR es:[edi]
  415fa5:	cmp    ah,BYTE PTR [ebx]
  415fa7:	scas   eax,DWORD PTR es:[edi]
  415fa8:	into   
  415fa9:	mov    esi,0x9d3122f9
  415fae:	rcl    edx,0xdc
  415fb1:	int3   
  415fb2:	xchg   esp,eax
  415fb3:	hlt    
  415fb4:	and    BYTE PTR [ecx],dl
  415fb6:	js     0x415f95
  415fb8:	jae    0x415fab
  415fba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fbb:	cdq    
  415fbc:	rcr    DWORD PTR ds:0x8e452502,1
  415fc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fc3:	pusha  
  415fc4:	cs fwait
  415fc6:	xchg   ebx,eax
  415fc7:	lods   eax,DWORD PTR ds:[esi]
  415fc8:	mov    WORD PTR [esi],ss
  415fca:	mov    ah,0x95
  415fcc:	das    
  415fcd:	mov    eax,ds:0x2761bf4d
  415fd2:	rcr    DWORD PTR [edi-0x484c4637],cl
  415fd8:	fs loop 0x415f70
  415fdb:	idiv   edi
  415fdd:	jns    0x416006
  415fdf:	retf   
  415fe0:	pop    edx
  415fe1:	out    dx,al
  415fe2:	xor    al,0x79
  415fe4:	out    dx,al
  415fe5:	outs   dx,BYTE PTR ds:[esi]
  415fe6:	retf   
  415fe7:	fwait
  415fe8:	rcl    DWORD PTR ds:0xe577fae7,0xe
  415fef:	jno    0x415f9e
  415ff1:	sti    
  415ff2:	sbb    bh,BYTE PTR [ecx]
  415ff4:	mov    edx,0xdde15d68
  415ff9:	sub    ecx,DWORD PTR [esi-0x1a3430f]
  415fff:	ja     0x41600e
  416001:	retf   
  416002:	xchg   ecx,eax
  416003:	xchg   ecx,eax
  416004:	push   esi
  416005:	ins    DWORD PTR es:[edi],dx
  416006:	sbb    edi,DWORD PTR [ebx-0x73e989a0]
  41600c:	push   ecx
  41600d:	shr    DWORD PTR [edx],0x67
  416010:	cmp    edi,DWORD PTR [eax+0x17]
  416013:	ret    
  416014:	into   
  416015:	outs   dx,BYTE PTR ds:[esi]
  416016:	cmc    
  416017:	jo     0x415fd6
  416019:	pop    ecx
  41601a:	ja     0x415fa3
  41601c:	ins    DWORD PTR es:[edi],dx
  41601d:	test   BYTE PTR [eax],0x9e
  416020:	push   eax
  416021:	(bad)  
  416022:	jp     0x41609b
  416024:	add    BYTE PTR [esi],bh
  416026:	inc    eax
  416027:	sbb    DWORD PTR [ecx-0x1c],eax
  41602a:	xchg   ebp,eax
  41602b:	popf   
  41602c:	mov    ah,ah
  41602e:	hlt    
  41602f:	jmp    0x415fe6
  416031:	es je  0x41609a
  416034:	(bad)
  416038:	xor    ebx,DWORD PTR [edi+0x33]
  41603b:	inc    edx
  41603c:	mov    ds:0x368c84b0,eax
  416041:	push   ebp
  416042:	ss hlt 
  416044:	call   0xf3a3:0xd41c
  41604a:	lods   eax,DWORD PTR ds:[esi]
  41604b:	(bad)  
  41604d:	add    BYTE PTR [eax],al
  41604f:	add    BYTE PTR [eax],al
  416051:	add    BYTE PTR [edx],bh
  416053:	jne    0x416091
  416055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416056:	jg     0x416047
  416058:	mov    edx,0xd72f5cfd
  41605d:	jae    0x41609b
  41605f:	addr16 clc 
  416061:	mov    ds:0xde5f,al
  416066:	repz add al,0x0
  416069:	add    bl,ah
  41606b:	das    
  41606c:	dec    esi
  41606d:	sahf   
  41606e:	ds cli 
  416070:	mov    ch,bl
  416072:	xchg   edi,eax
  416073:	dec    esp
  416074:	xchg   esp,eax
  416075:	push   ebx
  416076:	adc    BYTE PTR [ecx+0x54],dl
  416079:	jl     0x41600e
  41607b:	jno    0x4160e5
  41607d:	mov    DWORD PTR [edi],ebp
  41607f:	push   ss
  416080:	mov    ecx,0x47837a5c
  416085:	test   al,0xac
  416087:	cdq    
  416088:	loopne 0x4160a9
  41608a:	leave  
  41608b:	push   0xfffffffb
  41608d:	fisttp DWORD PTR [eax-0x77]
  416090:	rcr    BYTE PTR [ebp+0x46],0x1e
  416094:	pop    ecx
  416095:	mov    eax,0xdb1c641a
  41609a:	ja     0x416028
  41609c:	pop    ebx
  41609d:	in     al,dx
  41609e:	shl    esi,1
  4160a0:	jmp    0x4160c6
  4160a2:	ror    eax,0x5e
  4160a5:	cmp    esp,DWORD PTR [eax]
  4160a7:	test   DWORD PTR [esi-0x5f],ebp
  4160aa:	repz sbb eax,0x466c4a7e
  4160b0:	add    al,BYTE PTR [ebp-0x1]
  4160b3:	jg     0x41603a
  4160b5:	mov    ebx,0xcf68e10d
  4160ba:	popa   
  4160bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160bc:	in     eax,dx
  4160bd:	sub    ebp,DWORD PTR [eax]
  4160bf:	xor    BYTE PTR [ecx],al
  4160c1:	js     0x416135
  4160c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160c4:	mov    ecx,0x64987723
  4160c9:	ds mov edi,0x2b4e3066
  4160cf:	ret    0x50af
  4160d2:	mov    eax,ds:0x2dde71c3
  4160d7:	add    ch,ch
  4160d9:	call   0x2a11:0x4e52eff4
  4160e0:	lods   al,BYTE PTR ds:[esi]
  4160e1:	cmp    al,0x9d
  4160e3:	or     eax,0x52cf04b3
  4160e8:	jmp    0x3edd:0x62d125a8
  4160ef:	es dec ebx
  4160f1:	call   0xb8734d40
  4160f6:	mov    dl,bh
  4160f8:	ret    
  4160f9:	dec    edx
  4160fa:	lock sbb al,0xcd
  4160fd:	or     BYTE PTR [edi+0x2721cf69],al
  416103:	ret    
  416104:	mov    esp,0x31acac91
  416109:	imul   edx,edi,0xfffffffd
  41610c:	inc    ebx
  41610d:	and    BYTE PTR [edx-0x35a3b8b3],ah
  416113:	mov    bh,0x1b
  416115:	test   al,0x5d
  416117:	sub    eax,0xd3fef466
  41611c:	out    dx,eax
  41611d:	out    dx,eax
  41611e:	hlt    
  41611f:	shr    BYTE PTR [edx],1
  416121:	fsub   st(4),st
  416123:	out    dx,eax
  416124:	mov    ebp,0x54a38df1
  416129:	adc    al,BYTE PTR [ecx-0x4d]
  41612c:	je     0x4160b8
  41612e:	adc    esi,DWORD PTR [ebx]
  416130:	push   0x7d91c74c
  416135:	fwait
  416136:	add    eax,0x2ef740b0
  41613b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41613c:	ret    0x292a
  41613f:	nop
  416140:	pop    es
  416141:	xchg   edx,eax
  416142:	mov    bl,0x6c
  416144:	and    eax,0x454e7f7
  416149:	jbe    0x41617a
  41614b:	mov    edx,0x60032e3d
  416150:	std    
  416151:	cmp    eax,0x26d4828f
  416156:	lock push cs
  416158:	adc    bh,dh
  41615a:	sbb    DWORD PTR [esi-0x4a],edx
  41615d:	(bad)  
  41615f:	(bad)  
  416160:	out    dx,al
  416161:	aad    0x42
  416163:	xchg   ebx,eax
  416164:	inc    esi
  416165:	mov    dh,0x31
  416167:	inc    edx
  416168:	imul   edi,DWORD PTR [edi],0xede14dc5
  41616e:	push   es
  41616f:	push   esi
  416170:	and    al,0x4e
  416172:	and    bl,ch
  416174:	int    0x9a
  416176:	(bad)  
  416177:	out    dx,eax
  416178:	or     al,0x76
  41617a:	int    0x4b
  41617c:	pushf  
  41617d:	in     eax,dx
  41617e:	ret    
  41617f:	sti    
  416180:	cld    
  416181:	pop    esp
  416182:	xchg   edi,eax
  416183:	lea    edi,[edx-0x54]
  416186:	js     0x4161dd
  416188:	ret    
  416189:	test   BYTE PTR [edx-0x28],cl
  41618c:	lds    ecx,FWORD PTR [ebx+0x51]
  41618f:	pushf  
  416190:	aad    0x46
  416192:	das    
  416193:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416194:	sub    al,0x6c
  416196:	jmp    0x3370a77e
  41619b:	retf   0xb10b
  41619e:	mov    DWORD PTR [ebp-0x1cf93933],0xb4374b32
  4161a8:	sar    dl,1
  4161aa:	out    dx,eax
  4161ab:	or     al,0x59
  4161ad:	sub    dx,cx
  4161b0:	dec    esi
  4161b1:	ins    BYTE PTR es:[edi],dx
  4161b2:	fisttp QWORD PTR [eax]
  4161b4:	fsubrp st(3),st
  4161b6:	xchg   edi,eax
  4161b7:	xchg   edi,eax
  4161b8:	mov    edx,0x4b2a3719
  4161bd:	dec    edi
  4161be:	xchg   BYTE PTR [edi+0x6111914b],al
  4161c4:	add    al,0xf7
  4161c6:	cmp    DWORD PTR [edx],eax
  4161c8:	rol    ebx,1
  4161ca:	add    al,0xe5
  4161cc:	jle    0x416241
  4161ce:	pop    esp
  4161cf:	push   ebx
  4161d0:	lea    esi,[ecx-0x2681abfe]
  4161d6:	rol    ah,1
  4161d8:	fdiv   st(5),st
  4161da:	dec    edi
  4161db:	xchg   DWORD PTR [edi+0x1c],ebx
  4161de:	sbb    bh,al
  4161e0:	idiv   BYTE PTR [ecx]
  4161e2:	mov    cl,0x97
  4161e4:	xchg   esp,eax
  4161e5:	ins    DWORD PTR es:[edi],dx
  4161e6:	(bad)  
  4161e7:	fld    TBYTE PTR [edx]
  4161e9:	xchg   esi,eax
  4161ea:	pusha  
  4161eb:	fisubr WORD PTR [ebx+0x41acecad]
  4161f1:	add    eax,DWORD PTR [ebp+edx*2-0x2a1c4204]
  4161f8:	cdq    
  4161f9:	in     al,dx
  4161fa:	loope  0x4161ca
  4161fc:	repz inc ecx
  4161fe:	xor    eax,0xda8567e0
  416203:	and    ebx,DWORD PTR [ecx+0x8837aa2]
  416209:	sbb    eax,DWORD PTR [eax+0x23]
  41620c:	cmp    bh,BYTE PTR [esi]
  41620e:	scas   eax,DWORD PTR es:[edi]
  41620f:	test   eax,0x122f31c3
  416214:	mov    dl,0xc6
  416216:	(bad)  
  416217:	dec    esi
  416218:	lock xchg edi,eax
  41621a:	fs lock inc ebp
  41621d:	outs   dx,BYTE PTR ds:[esi]
  41621e:	xchg   al,ch
  416220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416222:	xor    BYTE PTR [ecx+0x64669786],dl
  416228:	sub    BYTE PTR [ebp-0x6c50762c],ch
  41622e:	mov    ds:0x3dde6b54,eax
  416233:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416234:	repz ds cmp bh,dl
  416238:	xchg   esi,eax
  416239:	scas   al,BYTE PTR es:[edi]
  41623a:	cvttps2pi mm3,xmm0
  41623d:	and    eax,0x30c486e3
  416242:	loopne 0x416232
  416244:	add    BYTE PTR [eax-0x5ef2005d],dl
  41624a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41624b:	mov    edi,0x62ee939d
  416250:	arpl   WORD PTR [edi-0x4ad6ffa8],bp
  416256:	jge    0x4161f7
  416258:	les    edx,FWORD PTR [ecx]
  41625a:	jecxz  0x4162b3
  41625c:	inc    ebp
  41625d:	sbb    ebx,DWORD PTR [edx-0x10]
  416260:	jl     0x4162bb
  416262:	call   0xb0a826a
  416267:	sbb    DWORD PTR [esi+eiz*4-0x2d29b5b],ebp
  41626e:	jl     0x416298
  416270:	addr16 cdq 
  416272:	push   ds
  416273:	and    al,0x8e
  416275:	(bad)  
  416276:	cs sub eax,0xe8bc0b1e
  41627c:	bound  ebp,QWORD PTR [ebx-0x67]
  41627f:	ins    DWORD PTR es:[edi],dx
  416280:	pop    es
  416281:	pop    edi
  416282:	rcl    cl,0x88
  416285:	and    esp,DWORD PTR [edi]
  416287:	scas   al,BYTE PTR es:[edi]
  416288:	arpl   WORD PTR [ebp+0x2f2b7fee],si
  41628e:	int    0x78
  416290:	scas   al,BYTE PTR es:[edi]
  416291:	mov    esi,0x910d79ed
  416296:	inc    eax
  416297:	fnstsw WORD PTR ds:[ecx+0x4d]
  41629b:	add    al,0xcd
  41629d:	xchg   DWORD PTR [ecx-0x7edd0903],edx
  4162a3:	fbstp  TBYTE PTR [edx]
  4162a5:	pop    edi
  4162a6:	or     al,0xa4
  4162a8:	mov    ah,0xd7
  4162aa:	ret    0x73ea
  4162ad:	out    0x19,eax
  4162af:	or     BYTE PTR [esi],dh
  4162b1:	icebp  
  4162b2:	jmp    0x416277
  4162b4:	push   edx
  4162b5:	(bad)  
  4162b6:	push   ebp
  4162b7:	in     eax,0xe9
  4162b9:	and    BYTE PTR [ebx-0x581216ce],0x13
  4162c0:	(bad)  
  4162c1:	iret   
  4162c2:	fs mov cl,0x2d
  4162c5:	mov    bl,0x75
  4162c7:	push   es
  4162c8:	arpl   WORD PTR ds:0x72e95e27,dx
  4162ce:	sahf   
  4162cf:	mov    al,0xae
  4162d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162d2:	lea    ebx,[esi]
  4162d4:	lods   eax,DWORD PTR ds:[esi]
  4162d5:	jge    0x41627e
  4162d7:	push   cs
  4162d8:	dec    ebx
  4162d9:	add    DWORD PTR [esi+esi*8-0x6c182ae2],edx
  4162e0:	aas    
  4162e1:	jne    0x416313
  4162e3:	in     eax,0x7f
  4162e5:	fisubr DWORD PTR [ecx]
  4162e7:	rol    DWORD PTR [edx-0x11],cl
  4162ea:	inc    ebp
  4162eb:	je     0x41630c
  4162ed:	mov    ebp,0x7ff7f3a9
  4162f2:	dec    ebx
  4162f3:	(bad)  
  4162f4:	xchg   esi,eax
  4162f5:	div    DWORD PTR [ecx-0x15]
  4162f8:	mov    esp,0xd3bdd014
  4162fd:	xchg   edx,eax
  4162fe:	mov    bl,0xd9
  416300:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416301:	pop    esp
  416302:	add    BYTE PTR [ecx+0x7b],bl
  416305:	ret    0xab5d
  416308:	jmp    0x41633d
  41630a:	retf   0x304b
  41630d:	das    
  41630e:	(bad)  
  41630f:	loope  0x41630d
  416311:	imul   edi,ecx,0x7d
  416314:	mov    ah,0x42
  416316:	scas   al,BYTE PTR es:[edi]
  416317:	es xchg edx,eax
  416319:	xor    edi,DWORD PTR [edx+0x1d]
  41631c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41631d:	inc    ecx
  41631e:	ss mov ebp,0xe59d98e0
  416324:	jge    0x416390
  416326:	bnd jns 0x4162f2
  416329:	outs   dx,BYTE PTR ds:[esi]
  41632a:	mov    cl,0x87
  41632c:	cmp    eax,0x95b71477
  416331:	add    ebp,DWORD PTR [edi]
  416333:	or     esi,edx
  416335:	adc    ah,bh
  416337:	add    esp,eax
  416339:	shr    DWORD PTR gs:[ebp+0x1fde8f5c],0xd1
  416341:	in     eax,dx
  416342:	sbb    eax,0x9d8d88b8
  416347:	add    ah,al
  416349:	inc    ebp
  41634a:	mov    edi,DWORD PTR [ecx+0x43]
  41634d:	sbb    al,0x6e
  41634f:	sbb    dh,BYTE PTR [ecx]
  416351:	aam    0x46
  416353:	ins    DWORD PTR es:[edi],dx
  416354:	adc    edx,eax
  416356:	push   es
  416357:	aam    0xa5
  416359:	push   eax
  41635a:	and    al,0xe6
  41635c:	dec    ebx
  41635d:	addr16 test eax,0xc808a92f
  416363:	push   0xffffffd1
  416365:	shl    DWORD PTR [edi-0x64],cl
  416368:	jb     0x41632c
  41636a:	sub    BYTE PTR [ecx+0x20],cl
  41636d:	mov    dl,0x5f
  41636f:	arpl   WORD PTR [esi],bp
  416371:	scas   al,BYTE PTR es:[edi]
  416372:	loopne 0x416389
  416374:	test   BYTE PTR [ecx-0x43f3d7ed],al
  41637a:	sub    eax,0xe8192de
  41637f:	jmp    0x4c08:0x33d10537
  416386:	add    bl,bl
  416388:	add    eax,0xaa06dcca
  41638d:	mov    al,0x9d
  41638f:	dec    eax
  416390:	cmp    eax,0x1a5b490a
  416395:	mov    al,0x1f
  416397:	(bad)  
  416398:	test   BYTE PTR [esi+eiz*8-0x5ee3b51e],0x6b
  4163a0:	xlat   BYTE PTR ds:[ebx]
  4163a1:	push   0xffffffa7
  4163a3:	test   eax,0x5611dc34
  4163a8:	sbb    eax,esi
  4163aa:	fnstcw WORD PTR [eax-0x80]
  4163ad:	dec    ebp
  4163ae:	jns    0x4163fc
  4163b0:	repz repz sub eax,0x7badd001
  4163b7:	xchg   ecx,eax
  4163b8:	bound  ecx,QWORD PTR [eax-0x6c96462d]
  4163be:	cmp    bl,ah
  4163c0:	std    
  4163c1:	mov    bh,0x65
  4163c3:	pop    ecx
  4163c4:	fsubrp st(6),st
  4163c6:	add    DWORD PTR [edi+0x474a14ae],0x16
  4163cd:	das    
  4163ce:	xor    eax,0x468851b5
  4163d3:	lock jbe 0x41638f
  4163d6:	pop    ecx
  4163d7:	xor    DWORD PTR [edx-0xff61fcc],ecx
  4163dd:	addr16 mov ch,0xcd
  4163e0:	stos   BYTE PTR es:[edi],al
  4163e1:	fisub  DWORD PTR [esi]
  4163e3:	mov    dh,0x5
  4163e5:	mov    bh,0x68
  4163e7:	or     al,0x90
  4163e9:	mov    BYTE PTR [ecx],0x34
  4163ec:	mov    bl,0xff
  4163ee:	scas   al,BYTE PTR es:[edi]
  4163ef:	repz sbb esi,0xffffff8a
  4163f3:	cmp    edi,esp
  4163f5:	pop    esp
  4163f6:	adc    DWORD PTR [ecx+0x74],0x63d2188c
  4163fd:	mov    bh,BYTE PTR [edi]
  4163ff:	adc    BYTE PTR [edx],0x2f
  416402:	xor    al,cl
  416404:	(bad)  
  416406:	and    BYTE PTR [ecx-0x5ebc29a3],bh
  41640c:	cmp    eax,esi
  41640e:	jnp    0x416416
  416410:	push   ecx
  416411:	scas   al,BYTE PTR es:[edi]
  416412:	in     eax,dx
  416413:	push   0xffffffe8
  416415:	in     eax,0xb0
  416417:	mov    ch,0xce
  416419:	mov    ch,0x94
  41641b:	cmp    al,0x77
  41641d:	das    
  41641e:	push   edi
  41641f:	je     0x4163c7
  416421:	int    0xa9
  416423:	pop    ds
  416424:	cmp    DWORD PTR [eax+0x7a5fe65b],edx
  41642a:	mov    bl,ah
  41642c:	sub    eax,0xcee8eb07
  416431:	sti    
  416432:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416433:	xor    ch,cl
  416435:	sbb    eax,0x4abadcfc
  41643a:	cld    
  41643b:	das    
  41643c:	ja     0x41640b
  41643e:	mov    eax,ds:0xaefeac93
  416443:	cmp    dh,BYTE PTR [esi-0xf70922]
  416449:	icebp  
  41644a:	fcom   DWORD PTR [ebp+0x43]
  41644d:	sbb    eax,0x7326074c
  416452:	push   cs
  416453:	cmc    
  416454:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416455:	jb     0x416420
  416457:	adc    BYTE PTR [esi],al
  416459:	into   
  41645a:	mov    esi,0xeb0bd5da
  41645f:	lods   al,BYTE PTR ds:[esi]
  416460:	sbb    DWORD PTR es:[edx+0x2e],0xe217adf4
  416468:	iret   
  416469:	fsub   DWORD PTR [eax]
  41646b:	adc    DWORD PTR [ecx+0x63312a1e],edi
  416471:	fmul   st,st(7)
  416473:	push   0x9472b38c
  416478:	dec    eax
  416479:	add    bl,BYTE PTR [ecx+esi*2+0xf]
  41647d:	loopne 0x4164e3
  41647f:	xchg   esi,eax
  416480:	adc    ecx,DWORD PTR [edi+ebx*2+0x3b]
  416484:	push   esi
  416485:	inc    eax
  416486:	mov    ecx,0x7d0ecc09
  41648b:	mov    ah,0xcd
  41648d:	out    dx,eax
  41648e:	(bad)  
  416490:	stc    
  416491:	pop    edi
  416492:	add    DWORD PTR [ebx],0x4e622216
  416498:	lods   eax,DWORD PTR ds:[esi]
  416499:	adc    DWORD PTR [edi-0x59943bbc],esp
  41649f:	jmp    0xf513b638
  4164a4:	mov    edx,DWORD PTR [edx+0x27]
  4164a7:	xchg   edi,eax
  4164a8:	push   0x42
  4164aa:	or     DWORD PTR [eax-0x52f763cb],ebp
  4164b0:	xchg   BYTE PTR [eax-0x4c],al
  4164b3:	je     0x41651b
  4164b5:	mov    al,0xea
  4164b7:	mov    ds:0xb024e606,al
  4164bc:	mov    eax,ds:0xd02c99b1
  4164c1:	cmc    
  4164c2:	pop    ds
  4164c3:	pop    edx
  4164c4:	stc    
  4164c5:	(bad)  
  4164c6:	jnp    0x416466
  4164c8:	push   edx
  4164c9:	and    BYTE PTR [ebx+0x794292c6],dh
  4164cf:	add    ah,cl
  4164d1:	fmul   QWORD PTR [esi-0x3a]
  4164d4:	pop    esp
  4164d5:	popf   
  4164d6:	pop    ss
  4164d7:	repnz cmp eax,0x78859e4e
  4164dd:	fsubr  DWORD PTR [esi-0x2d]
  4164e0:	dec    eax
  4164e1:	jmp    0xc971:0x7da02414
  4164e8:	sbb    al,0xd1
  4164ea:	and    DWORD PTR [edx],eax
  4164ec:	or     ebx,DWORD PTR [esi-0x15]
  4164ef:	cs inc edi
  4164f1:	fst    DWORD PTR [ecx+0x1]
  4164f4:	inc    esi
  4164f5:	arpl   WORD PTR [eax],sp
  4164f7:	fisttp DWORD PTR [ecx-0x5df93b60]
  4164fd:	and    al,0x75
  4164ff:	mov    esi,0xfee50a57
  416504:	inc    ebx
  416505:	mov    esp,DWORD PTR [ecx-0x73]
  416508:	mov    esp,0x493c7970
  41650d:	cdq    
  41650e:	cs inc ebp
  416510:	stos   BYTE PTR es:[edi],al
  416511:	cmp    bh,BYTE PTR fs:[esi-0x525e6d3c]
  416518:	cmp    al,0x4c
  41651a:	mov    ds:0x74138f36,al
  41651f:	and    BYTE PTR [edx-0x7549b801],ch
  416525:	dec    ebp
  416526:	shl    BYTE PTR [ecx+0x4f0b8436],cl
  41652c:	(bad)  
  41652d:	mov    fs,eax
  41652f:	mov    DWORD PTR [edi-0x4e],edx
  416532:	push   ds
  416533:	addr16 push 0xa1a5f48d
  416539:	mov    ebx,0xf8f33127
  41653e:	scas   al,BYTE PTR es:[edi]
  41653f:	pop    ebx
  416540:	cmp    dl,BYTE PTR [eax]
  416542:	pusha  
  416543:	cmp    ah,BYTE PTR [ebp+esi*4-0x1535e987]
  41654a:	adc    al,0x51
  41654c:	fnstcw WORD PTR ds:0x55401d39
  416552:	jmp    0x97f7:0xa8714f96
  416559:	ret    0xafe6
  41655c:	xor    BYTE PTR [eax],al
  41655e:	add    BYTE PTR [eax],al
  416560:	add    BYTE PTR [eax],al
  416562:	clc    
  416563:	pminsw mm6,QWORD PTR [edi-0x1]
  416567:	idiv   ebp
  416569:	(bad)  
  41656a:	repz push esi
  41656c:	retf   0xc9f1
  41656f:	call   0x0:0xe3528b8f
  416576:	repz add al,0x0
  416579:	add    BYTE PTR [eax],ah
  41657b:	mov    bl,0xec
  41657d:	inc    ebx
  41657e:	cmp    bl,BYTE PTR [ebp-0x7669eacf]
  416584:	fstp   QWORD PTR [edx]
  416586:	test   eax,0x84a74cff
  41658b:	neg    DWORD PTR [ebx]
  41658d:	sub    eax,0x7fc6b8d5
  416592:	mov    ds:0x2609a9fb,al
  416597:	dec    dl
  416599:	and    eax,0xb6d1f071
  41659e:	lods   eax,DWORD PTR ds:[esi]
  41659f:	or     eax,0x861e6635
  4165a4:	sahf   
  4165a5:	and    eax,0x76e9862f
  4165aa:	jl     0x41657a
  4165ac:	dec    ecx
  4165ad:	xor    dh,BYTE PTR [ecx+0x7eb56161]
  4165b3:	fnsave [eax]
  4165b5:	cmp    cl,ah
  4165b7:	cs int3 
  4165b9:	sub    ch,0x4a
  4165bc:	adc    DWORD PTR [eax+0x7b],esp
  4165bf:	data16 mov bl,0xdc
  4165c2:	fidiv  WORD PTR [ebp+0x4c]
  4165c5:	pop    edi
  4165c6:	cmp    edx,DWORD PTR [ecx+ebp*4-0x2e]
  4165ca:	nop
  4165cb:	(bad)  
  4165cc:	(bad)  
  4165ce:	in     eax,0x2d
  4165d0:	outs   dx,DWORD PTR ds:[esi]
  4165d1:	push   ecx
  4165d2:	mov    edi,0xd6f9092
  4165d7:	out    dx,al
  4165d8:	dec    ecx
  4165d9:	mov    bh,0x89
  4165db:	add    eax,0xe124c7fb
  4165e0:	sub    eax,DWORD PTR [ebp-0x72]
  4165e3:	call   0x58e526cc
  4165e8:	jbe    0x416597
  4165ea:	fcom   st(5)
  4165ec:	in     al,dx
  4165ed:	xchg   BYTE PTR gs:[ebx-0x16],dh
  4165f1:	mov    bl,0x11
  4165f3:	cli    
  4165f4:	adc    BYTE PTR [eax-0x3a],ah
  4165f7:	ins    DWORD PTR es:[edi],dx
  4165f8:	sbb    al,0x9e
  4165fa:	shl    DWORD PTR [edx+0x728b1e6c],0xea
  416601:	mov    dl,0xd4
  416603:	mov    ebx,0xe2a20822
  416608:	fist   WORD PTR [eax+0x1f4a9282]
  41660e:	mov    bh,0x2
  416610:	fcomp  DWORD PTR [esi]
  416612:	js     0x416687
  416614:	and    esp,edi
  416616:	dec    esi
  416617:	std    
  416618:	cmp    eax,0x643c4aaa
  41661d:	sti    
  41661e:	and    DWORD PTR ds:0x55adffab,0x59
  416625:	sahf   
  416626:	mov    edi,0xe9ac5cfc
  41662b:	aam    0x4b
  41662d:	repnz mov al,ds:0x3785f379
  416633:	and    al,0x56
  416635:	jmp    0xb8139ea2
  41663a:	imul   esp,DWORD PTR [ebx],0xffffffa5
  41663d:	pushf  
  41663e:	jo     0x41663c
  416640:	push   eax
  416641:	stos   BYTE PTR es:[edi],al
  416642:	rcl    DWORD PTR [esp+esi*4-0x37],cl
  416646:	stos   DWORD PTR es:[edi],eax
  416647:	sub    ah,BYTE PTR [ebx-0x238feb99]
  41664d:	and    al,0xd4
  41664f:	mov    bh,BYTE PTR [edx]
  416651:	imul   esp,DWORD PTR [ebp+0x5624a41b],0x844e9d31
  41665b:	push   cs
  41665c:	mov    bh,0x7d
  41665e:	sbb    eax,0x8067e025
  416663:	movaps XMMWORD PTR [ecx],xmm0
  416666:	cwde   
  416667:	arpl   WORD PTR [ecx-0x169c5d85],ax
  41666d:	je     0x4166a7
  41666f:	imul   esp,DWORD PTR [ecx-0x1110af5b],0x1e232558
  416679:	nop
  41667a:	inc    ebp
  41667b:	jbe    0x4166ea
  41667d:	jne    0x4166b2
  41667f:	mov    BYTE PTR [esi],bl
  416681:	shrd   DWORD PTR [esi+0x7e],ebp,0x83
  416686:	fwait
  416687:	jb     0x4166cd
  416689:	outs   dx,BYTE PTR ds:[esi]
  41668a:	ja     0x4166de
  41668c:	mov    esp,DWORD PTR [eax+ebx*2]
  41668f:	xlat   BYTE PTR ds:[ebx]
  416690:	add    eax,0xffffff93
  416693:	inc    DWORD PTR [ecx-0x8dbb20c]
  416699:	add    DWORD PTR [ebx-0xf],0xed860580
  4166a0:	call   0x35d8:0x9f00fcf4
  4166a7:	mov    ds,WORD PTR [esi-0x5b]
  4166aa:	scas   al,BYTE PTR es:[edi]
  4166ab:	call   0xb5db:0x21a251e1
  4166b2:	add    ecx,esi
  4166b4:	dec    esp
  4166b5:	adc    ebx,edx
  4166b7:	mov    dh,0x6e
  4166b9:	lods   al,BYTE PTR ds:[esi]
  4166ba:	fnsave [ebx-0x7ea8e947]
  4166c0:	jp     0x416727
  4166c2:	jl     0x4166cb
  4166c4:	loop   0x4166b0
  4166c6:	mov    ds:0xb7b2f928,al
  4166cb:	mov    eax,0x27455016
  4166d0:	mov    edi,0xaefc7fed
  4166d5:	dec    edi
  4166d6:	lahf   
  4166d7:	cmp    BYTE PTR [edx-0x74],dl
  4166da:	push   cs
  4166db:	test   BYTE PTR [ecx+0xa2de7d7],bh
  4166e1:	sahf   
  4166e2:	mov    al,0x36
  4166e4:	mov    cl,0xef
  4166e6:	or     eax,DWORD PTR gs:[eax]
  4166e9:	ficom  DWORD PTR [edx-0x68]
  4166ec:	retf   0x38ee
  4166ef:	call   0xb6a83da0
  4166f4:	in     al,0x83
  4166f6:	int3   
  4166f7:	dec    esp
  4166f8:	mov    esp,0xd6bf7fd7
  4166fd:	mov    ah,0x5c
  4166ff:	add    dh,0x48
  416702:	enter  0xc1c0,0x3e
  416706:	neg    BYTE PTR [esi+0x14]
  416709:	xchg   ebp,eax
  41670a:	pusha  
  41670b:	jecxz  0x416750
  41670d:	xor    eax,0x59e45267
  416712:	retf   
  416713:	dec    ebx
  416714:	fsub   st,st(2)
  416716:	dec    eax
  416717:	mov    ecx,0xfee8f4cb
  41671c:	ret    0x871a
  41671f:	hlt    
  416720:	pop    esi
  416721:	xchg   BYTE PTR [ebx-0x7b],ah
  416724:	jo     0x416729
  416726:	cmp    cl,BYTE PTR [ecx-0x41]
  416729:	cmp    DWORD PTR [ecx-0x73],0x30
  41672d:	inc    esi
  41672e:	and    DWORD PTR [eax],edi
  416730:	or     cl,BYTE PTR [edi-0x7c]
  416733:	mov    BYTE PTR [edi+0x4d],0xa9
  416737:	out    dx,al
  416738:	mov    ds:0xe3497057,al
  41673d:	jae    0x416712
  41673f:	sub    eax,0xbabc2e56
  416744:	lods   al,BYTE PTR ds:[esi]
  416745:	add    al,0x3a
  416747:	(bad)  
  416749:	push   es
  41674a:	xchg   esp,eax
  41674b:	sub    eax,DWORD PTR [esi+0x2a3bb8a2]
  416751:	div    dh
  416753:	mov    ecx,0x2060ae52
  416758:	and    DWORD PTR [ecx+0x1fb61333],eax
  41675e:	xlat   BYTE PTR ds:[ebx]
  41675f:	and    BYTE PTR gs:[esi-0x46],al
  416763:	dec    BYTE PTR [edi]
  416765:	shr    BYTE PTR [eax],0x5d
  416768:	dec    eax
  416769:	sbb    eax,DWORD PTR [esi+0x34]
  41676c:	and    al,0xbb
  41676e:	or     eax,0x8c3039fc
  416773:	add    DWORD PTR [ecx-0x6892393f],edx
  416779:	in     al,0x53
  41677b:	test   eax,0x19797c69
  416780:	pop    ecx
  416781:	dec    ebx
  416782:	jecxz  0x41671f
  416784:	adc    edx,DWORD PTR [ebx+0x2a]
  416787:	dec    esi
  416788:	mov    ebx,0x625e3d2c
  41678d:	jns    0x4167b3
  41678f:	or     eax,0x94a5a6be
  416794:	xchg   edi,eax
  416795:	xchg   DWORD PTR [edi+0xc],edi
  416798:	push   ds
  416799:	and    edx,ebx
  41679b:	scas   al,BYTE PTR es:[edi]
  41679c:	mov    edi,0xfd4c8616
  4167a1:	test   al,0x4d
  4167a3:	push   0x3674781e
  4167a8:	enter  0x4257,0xb9
  4167ac:	ins    BYTE PTR es:[di],dx
  4167ae:	inc    ecx
  4167af:	mov    eax,0x418ae18c
  4167b4:	mov    dh,0xc8
  4167b6:	inc    edx
  4167b7:	sbb    dh,BYTE PTR [eax+edi*1-0x61]
  4167bb:	test   DWORD PTR [esi-0x4d],0x5929d27c
  4167c2:	jb     0x4167ac
  4167c4:	push   ss
  4167c5:	(bad)  
  4167c6:	vmwrite edx,DWORD PTR [ecx-0x44]
  4167ca:	push   0x9d179dc
  4167cf:	adc    al,0x39
  4167d1:	push   esp
  4167d2:	inc    ecx
  4167d3:	fcomp  DWORD PTR [esp+ecx*2]
  4167d6:	sub    al,0x55
  4167d8:	lods   eax,DWORD PTR ds:[esi]
  4167d9:	in     al,0xbc
  4167db:	and    DWORD PTR [ebx-0x5065f2a1],0xffffffa0
  4167e2:	jmp    0x2bdd6507
  4167e7:	push   ds
  4167e8:	mov    eax,DWORD PTR ds:0x97b67d5c
  4167ee:	push   edi
  4167ef:	pop    esp
  4167f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167f1:	xchg   ecx,eax
  4167f2:	out    0x87,eax
  4167f4:	mov    eax,DWORD PTR [edi+edx*8+0x1da50f42]
  4167fb:	ret    0x6265
  4167fe:	inc    edi
  4167ff:	jmp    0x4d76:0x52c1ddd3
  416806:	mov    BYTE PTR [ecx-0x16],bh
  416809:	adc    al,0xca
  41680b:	lahf   
  41680c:	(bad)  
  41680d:	xor    DWORD PTR [ebp+0xd670f2],esp
  416813:	lds    ebp,FWORD PTR [edx]
  416815:	cmp    ebp,DWORD PTR [esi]
  416817:	jge    0x41688d
  416819:	jmp    0x41686d
  41681b:	aam    0x8b
  41681d:	mov    ecx,ecx
  41681f:	aas    
  416820:	sti    
  416821:	test   al,0x57
  416823:	xchg   esi,eax
  416824:	ins    DWORD PTR es:[edi],dx
  416825:	add    ch,dl
  416827:	imul   eax,DWORD PTR [ebp+0x2c],0xffffffb1
  41682b:	xchg   ebp,eax
  41682c:	push   edx
  41682d:	lods   eax,DWORD PTR ds:[esi]
  41682e:	ins    DWORD PTR es:[edi],dx
  41682f:	or     al,0xac
  416831:	and    esp,DWORD PTR [ecx-0x3d]
  416834:	lock mov al,0x1
  416837:	sbb    al,0xf0
  416839:	and    ecx,DWORD PTR [ebx+ebx*1]
  41683c:	inc    esi
  41683d:	into   
  41683e:	fimul  WORD PTR [eax-0xe418ba]
  416844:	or     DWORD PTR [ebx],esp
  416846:	bound  ecx,QWORD PTR [edi+edx*2+0x64]
  41684a:	dec    edi
  41684b:	mov    ebp,0x255a64fb
  416850:	push   ecx
  416851:	ins    BYTE PTR es:[edi],dx
  416852:	rol    DWORD PTR [eax+0x65],0xc3
  416856:	call   0x1ebac680
  41685b:	pop    edi
  41685c:	popf   
  41685d:	sbb    eax,0xe56d3c57
  416862:	xor    BYTE PTR [ebx+0x5d9fdf30],dl
  416868:	jns    0x416824
  41686a:	arpl   WORD PTR [edi],cx
  41686c:	or     BYTE PTR [edi-0x6ba54e1d],cl
  416872:	stos   DWORD PTR es:[edi],eax
  416873:	ficom  DWORD PTR [edx]
  416875:	and    ch,BYTE PTR [edi]
  416877:	jmp    0x41681c
  416879:	ret    
  41687a:	jl     0x4168e8
  41687c:	mov    ch,cl
  41687e:	push   ecx
  41687f:	sub    dl,BYTE PTR fs:[esi+0x4f]
  416883:	ja     0x41688f
  416885:	and    ebp,0x76e7481
  41688b:	or     eax,DWORD PTR ds:0x88d7b97a
  416891:	push   edx
  416892:	retf   0x3873
  416895:	or     dh,BYTE PTR [ebx]
  416897:	xchg   esp,eax
  416898:	xchg   ecx,eax
  416899:	mov    WORD PTR [eax],fs
  41689b:	shl    ebx,cl
  41689d:	sbb    cl,BYTE PTR [edi]
  41689f:	dec    ebx
  4168a0:	or     al,0x8
  4168a2:	add    cl,BYTE PTR [ebx-0x21]
  4168a5:	dec    esi
  4168a6:	push   edx
  4168a7:	stos   BYTE PTR es:[edi],al
  4168a8:	inc    eax
  4168a9:	dec    ebp
  4168aa:	scas   eax,DWORD PTR es:[edi]
  4168ab:	pop    ebx
  4168ac:	ins    BYTE PTR es:[edi],dx
  4168ad:	fstp   TBYTE PTR [edi-0x3b2bf04]
  4168b3:	xor    al,0x84
  4168b5:	sahf   
  4168b6:	mov    esp,0x9ae45394
  4168bb:	sti    
  4168bc:	lods   eax,DWORD PTR ds:[esi]
  4168bd:	cmp    ebp,0xffffffbe
  4168c0:	mov    dl,0x31
  4168c2:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168c4:	xor    eax,0x22af714e
  4168c9:	inc    ebp
  4168ca:	xchg   edx,eax
  4168cb:	cwde   
  4168cc:	xchg   bh,bh
  4168ce:	pop    ecx
  4168cf:	mov    ah,0xca
  4168d1:	dec    ecx
  4168d2:	push   0x1ae2d34d
  4168d7:	mov    dl,0x96
  4168d9:	inc    esp
  4168da:	ja     0x416915
  4168dc:	fwait
  4168dd:	inc    ebx
  4168de:	nop
  4168df:	outs   dx,BYTE PTR ds:[esi]
  4168e0:	dec    edx
  4168e1:	sbb    BYTE PTR [edi],ah
  4168e3:	xchg   ebp,eax
  4168e4:	loop   0x416908
  4168e6:	inc    edx
  4168e7:	lock mov dl,0xc6
  4168ea:	lods   al,BYTE PTR ds:[esi]
  4168eb:	pop    edi
  4168ec:	out    0x1b,eax
  4168ee:	int3   
  4168ef:	bound  edx,QWORD PTR [ebx-0x76f600b1]
  4168f5:	inc    ebx
  4168f6:	jle    0x416977
  4168f8:	jl     0x41691a
  4168fa:	fnstcw WORD PTR [eax-0x14]
  4168fd:	cli    
  4168fe:	xor    eax,DWORD PTR [edx+0x47]
  416901:	popa   
  416902:	mov    ecx,0x711fd646
  416907:	fstp   QWORD PTR [eax]
  416909:	xchg   edi,eax
  41690a:	push   ds
  41690b:	aam    0x9f
  41690d:	push   ds
  41690e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41690f:	shl    BYTE PTR [edx+eax*1-0x41ad6511],1
  416916:	out    0x94,eax
  416918:	mov    cl,0x32
  41691a:	inc    ebp
  41691b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41691c:	fidiv  WORD PTR [edx+esi*1-0x33f5d3e7]
  416923:	and    eax,0x2e6f491f
  416928:	pop    eax
  416929:	int3   
  41692a:	ss mov edx,0x4f8358d8
  416930:	lock (bad) 
  416932:	push   edx
  416933:	mov    eax,ds:0x10ccc844
  416938:	fcom   QWORD PTR [esi+0x50411fdc]
  41693e:	add    DWORD PTR [ebx+0x73dba19d],edx
  416944:	loopne 0x4168dd
  416946:	(bad)  
  416948:	sbb    DWORD PTR [ebx],ecx
  41694a:	inc    ecx
  41694b:	mov    ecx,DWORD PTR [eax-0x6b]
  41694e:	cmp    cl,ah
  416950:	jae    0x41695a
  416952:	icebp  
  416953:	pusha  
  416954:	adc    DWORD PTR [edx+0x50],ebx
  416957:	push   0x4a
  416959:	in     al,0x9b
  41695b:	cmp    DWORD PTR [ecx-0x64],edx
  41695e:	addr16 mov eax,ds:0x9e71
  416962:	sti    
  416963:	xor    al,0xdd
  416965:	mov    eax,gs:0xe8847d47
  41696b:	xchg   esp,eax
  41696c:	pop    edi
  41696d:	xor    eax,0x5163b8b8
  416972:	ja     0x41697c
  416974:	pop    edi
  416975:	pushf  
  416976:	mov    ebp,0xd82f4888
  41697b:	sbb    ch,ch
  41697d:	stc    
  41697e:	mov    dl,0xf6
  416980:	jae    0x416942
  416982:	push   cs
  416983:	sub    BYTE PTR [edi],al
  416985:	jno    0x416940
  416987:	pop    eax
  416988:	ds ins BYTE PTR es:[edi],dx
  41698a:	or     DWORD PTR [ebp-0x375b5098],eax
  416990:	ja     0x416a0f
  416992:	cli    
  416993:	aaa    
  416994:	popf   
  416995:	sub    BYTE PTR [ecx+0x46],0x6d
  416999:	cmc    
  41699a:	mov    eax,ds
  41699c:	pop    esi
  41699d:	jecxz  0x416a14
  41699f:	je     0x416955
  4169a1:	adc    BYTE PTR [edi-0x51],ch
  4169a4:	popf   
  4169a5:	lods   eax,DWORD PTR ds:[esi]
  4169a6:	(bad)  
  4169a7:	adc    ah,BYTE PTR [edx]
  4169a9:	(bad)  
  4169aa:	ja     0x416987
  4169ac:	loop   0x41694a
  4169ae:	mov    al,0x14
  4169b0:	arpl   WORD PTR [ebp+0x74706f3f],sp
  4169b6:	aad    0xe1
  4169b8:	push   0x20
  4169ba:	mov    esi,0x5e9b5281
  4169bf:	pop    es
  4169c0:	xchg   esp,eax
  4169c1:	mov    ds:0x9edfd356,al
  4169c6:	inc    ecx
  4169c7:	mov    cl,0xb1
  4169c9:	dec    eax
  4169ca:	popa   
  4169cb:	mov    cl,0xef
  4169cd:	scas   al,BYTE PTR es:[edi]
  4169ce:	shr    BYTE PTR [eax+edx*2],1
  4169d1:	mov    edx,0xc82679af
  4169d6:	dec    ebp
  4169d7:	cmp    ebx,DWORD PTR [eax-0x64]
  4169da:	mul    DWORD PTR [edx]
  4169dc:	cli    
  4169dd:	shl    BYTE PTR [esi],cl
  4169df:	loopne 0x416a51
  4169e1:	loope  0x416a4a
  4169e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169e4:	xchg   esi,eax
  4169e5:	(bad)  
  4169e6:	fcomp  QWORD PTR [eax+0x43]
  4169e9:	mov    ah,0x2c
  4169eb:	mov    dl,dl
  4169ed:	and    ebp,ebx
  4169ef:	xor    edi,edx
  4169f1:	pop    es
  4169f2:	dec    ecx
  4169f3:	xlat   BYTE PTR ds:[ebx]
  4169f4:	mov    bl,0xb4
  4169f6:	je     0x416a58
  4169f8:	mov    ebp,0x1c686c43
  4169fd:	pop    ebx
  4169fe:	repz stc 
  416a00:	xchg   ebp,eax
  416a01:	push   es
  416a02:	lea    edx,[eax+0xd37059c]
  416a08:	mov    eax,ds:0x13ef51b2
  416a0d:	add    eax,DWORD PTR [esi]
  416a0f:	cmp    eax,0xad0772b3
  416a14:	data16 test al,0x74
  416a17:	mov    eax,ds:0x65403d16
  416a1c:	cmp    dh,BYTE PTR [eax+0x3aa3dd67]
  416a22:	mov    dh,0x78
  416a24:	dec    edi
  416a25:	scas   al,BYTE PTR es:[edi]
  416a26:	shr    DWORD PTR [esi+0x3e61af81],0xb3
  416a2d:	sub    DWORD PTR [edx+esi*4],0xc8936af9
  416a34:	xlat   BYTE PTR ds:[ebx]
  416a35:	retf   0x6a27
  416a38:	mov    bl,BYTE PTR [esi+0x59]
  416a3b:	mov    eax,ds:0xa9c65de8
  416a40:	or     DWORD PTR [eax-0x63],0x4b0dbbfc
  416a47:	es jns 0x416ac7
  416a4a:	xchg   BYTE PTR [edi+0x3cac3fc0],dl
  416a50:	test   al,0x1a
  416a52:	outs   dx,DWORD PTR ds:[esi]
  416a53:	iret   
  416a54:	cmc    
  416a55:	call   0xf6dd:0x5d0e1cd9
  416a5c:	je     0x416a64
  416a5e:	xor    al,0x5e
  416a60:	test   al,0xeb
  416a62:	fwait
  416a63:	jmp    DWORD PTR [edi]
  416a65:	push   es
  416a66:	xchg   esp,eax
  416a67:	jg     0x416a36
  416a69:	shr    BYTE PTR [eax+0xd401],0x0
  416a70:	add    BYTE PTR [eax],al
  416a72:	call   0xfb7c3508
  416a77:	jnp    0x416a71
  416a79:	sar    DWORD PTR [edx-0x140c478b],cl
  416a7f:	mov    esp,0xe84558e5
  416a84:	add    BYTE PTR [eax],al
  416a86:	repz add al,0x0
  416a89:	add    BYTE PTR ds:0x295f638b,cl
  416a8f:	xor    DWORD PTR [esi-0x10],0xffffffb3
  416a93:	idiv   DWORD PTR [ebp+edx*4-0x8012f]
  416a9a:	retf   0x30e
  416a9d:	xor    al,0x52
  416a9f:	imul   ebx,ebp,0x7
  416aa2:	cmp    DWORD PTR [ebx+0x40],ebp
  416aa5:	lock inc DWORD PTR [ebx-0x76]
  416aa9:	(bad)  
  416aab:	cmp    eax,0x492e57f3
  416ab0:	adc    bh,bl
  416ab2:	mov    eax,ds:0x2a49a99f
  416ab7:	xor    BYTE PTR [eax+0x73],cl
  416aba:	cdq    
  416abb:	push   ebx
  416abc:	das    
  416abd:	xchg   ecx,eax
  416abe:	adc    al,0xa9
  416ac0:	iret   
  416ac1:	test   ebx,0x67b8f022
  416ac7:	fidiv  DWORD PTR [edi+edx*2]
  416aca:	in     eax,0x5f
  416acc:	add    BYTE PTR ds:0xbfe70781,0x57
  416ad3:	adc    DWORD PTR [eax+eax*8-0x56],eax
  416ad7:	popf   
  416ad8:	loopne 0x416ae1
  416ada:	mov    ebp,0xa265f69
  416adf:	pusha  
  416ae0:	popa   
  416ae1:	ds push ecx
  416ae3:	or     dh,dh
  416ae5:	push   es
  416ae6:	and    eax,0x3b60278
  416aeb:	push   eax
  416aec:	cmovb  ebx,DWORD PTR [esi-0x43]
  416af0:	imul   esp,DWORD PTR [esi-0x2],0x7ae6ab9f
  416af7:	xchg   esp,eax
  416af8:	mov    WORD PTR [ecx],fs
  416afa:	inc    eax
  416afb:	add    DWORD PTR [ebx],ecx
  416afd:	cmp    al,0xdd
  416aff:	push   esp
  416b00:	and    ch,BYTE PTR [ecx-0x74]
  416b03:	sub    DWORD PTR [edx-0x5d],0xf1273ff6
  416b0a:	popf   
  416b0b:	xchg   ebx,eax
  416b0c:	sub    BYTE PTR [ecx+0x59c92e0d],al
  416b12:	je     0x416ad1
  416b14:	xor    esi,DWORD PTR [eax+ecx*4]
  416b17:	enter  0x2399,0x54
  416b1b:	loope  0x416b8d
  416b1d:	push   eax
  416b1e:	cmp    DWORD PTR [ecx+0x1e23e4b4],0x7d
  416b25:	sbb    cl,BYTE PTR [eax+0x52]
  416b28:	in     eax,dx
  416b29:	and    bh,BYTE PTR [eax-0x789c02f6]
  416b2f:	add    DWORD PTR [ebp-0x59e7f881],0x68d91476
  416b39:	imul   edi,DWORD PTR [eax],0x79
  416b3c:	dec    ecx
  416b3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b3e:	mov    ch,BYTE PTR [esi]
  416b40:	jp     0x416b90
  416b42:	xor    bh,cl
  416b44:	ins    BYTE PTR es:[edi],dx
  416b45:	das    
  416b46:	sbb    BYTE PTR [esi-0x1df3eb1],cl
  416b4c:	data16 jae 0x416b85
  416b4f:	xchg   edx,eax
  416b50:	scas   al,BYTE PTR es:[edi]
  416b51:	dec    ecx
  416b52:	ret    0xb1e0
  416b55:	sub    DWORD PTR [ebp-0x6a],ebp
  416b58:	lods   al,BYTE PTR ds:[esi]
  416b59:	mov    ds:0x90b2a37d,al
  416b5e:	cwde   
  416b5f:	outs   dx,BYTE PTR ds:[esi]
  416b60:	jno    0x416b18
  416b62:	pop    ecx
  416b63:	mov    BYTE PTR [esp+edi*2+0x2a1b21c0],dh
  416b6a:	lods   al,BYTE PTR ds:[esi]
  416b6b:	rol    DWORD PTR [esi],cl
  416b6d:	int3   
  416b6e:	fnstenv [ecx]
  416b70:	xor    al,0x5
  416b72:	sub    DWORD PTR ds:0x90477c5e,ebp
  416b78:	adc    BYTE PTR [edi+0x79547e8e],ch
  416b7e:	mov    BYTE PTR [esi-0x67],bh
  416b81:	stc    
  416b82:	loope  0x416b84
  416b84:	gs inc edx
  416b86:	mov    dl,0xbf
  416b88:	jle    0x416b35
  416b8a:	jmp    0x35d1:0x7b0d1b5c
  416b91:	into   
  416b92:	push   es
  416b93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b94:	mov    ebp,0x9402918
  416b99:	sub    ebx,DWORD PTR ds:0xf90f9a97
  416b9f:	push   cs
  416ba0:	lahf   
  416ba1:	sub    dh,dh
  416ba3:	repz xchg esp,eax
  416ba5:	out    dx,al
  416ba6:	ror    esi,1
  416ba8:	dec    ecx
  416ba9:	cdq    
  416baa:	mov    DWORD PTR [ecx],ecx
  416bac:	jnp    0x416beb
  416bae:	cmp    al,0x38
  416bb0:	dec    esp
  416bb1:	test   al,0x9a
  416bb3:	bound  ebx,QWORD PTR [ebp-0x4c9c03d7]
  416bb9:	adc    ebx,ebp
  416bbb:	pop    ss
  416bbc:	sbb    cl,dl
  416bbe:	in     al,0x53
  416bc0:	adc    bl,BYTE PTR [ecx-0xf475b13]
  416bc6:	lahf   
  416bc7:	retf   
  416bc8:	les    edx,FWORD PTR [esi-0x5fa0bcde]
  416bce:	cmp    edi,esi
  416bd0:	call   0x908ce307
  416bd5:	jb     0x416b67
  416bd7:	bound  esi,QWORD PTR [edx]
  416bd9:	mov    ?,ecx
  416bdb:	outs   dx,DWORD PTR ds:[esi]
  416bdc:	test   esi,ecx
  416bde:	cmp    al,0xe3
  416be0:	mov    fs,ecx
  416be2:	jmp    0x202b:0x95e09c17
  416be9:	sub    esi,DWORD PTR gs:[esi+0x34]
  416bed:	and    al,0x8d
  416bef:	aaa    
  416bf0:	lds    ecx,FWORD PTR [edi]
  416bf2:	dec    edx
  416bf3:	fsub   DWORD PTR [edi+esi*4]
  416bf6:	mov    ch,0xa3
  416bf8:	inc    esi
  416bf9:	shl    BYTE PTR [edx-0x4583bfba],1
  416bff:	xor    ah,BYTE PTR [esi+0x32]
  416c02:	pop    ebp
  416c03:	iret   
  416c04:	mov    eax,0xa204761a
  416c09:	push   0x7a
  416c0b:	in     al,0x2d
  416c0d:	rcl    DWORD PTR [edi+0x76],0x2f
  416c11:	les    edi,FWORD PTR [ebp-0x6066646b]
  416c17:	arpl   WORD PTR [ecx+0x33],cx
  416c1a:	jnp    0x416c72
  416c1c:	hlt    
  416c1d:	sbb    al,0xff
  416c1f:	(bad)  
  416c20:	dec    edi
  416c21:	pushf  
  416c22:	pop    eax
  416c23:	and    ah,BYTE PTR [ecx]
  416c25:	add    al,ch
  416c27:	pushf  
  416c28:	or     dh,BYTE PTR [esi]
  416c2a:	imul   edx,DWORD PTR [edi+0x44],0xb23f1589
  416c31:	cwde   
  416c32:	push   esp
  416c33:	mov    ss,WORD PTR [ebx]
  416c35:	inc    esp
  416c36:	aad    0xa9
  416c38:	outs   dx,DWORD PTR ds:[esi]
  416c39:	xchg   edx,eax
  416c3a:	aas    
  416c3b:	and    al,0xa2
  416c3d:	or     dl,BYTE PTR [esp+ecx*2-0x3f]
  416c41:	test   dl,al
  416c43:	sbb    esp,ecx
  416c45:	js     0x416c31
  416c47:	(bad)  
  416c48:	lock pop ebx
  416c4a:	xchg   esp,eax
  416c4b:	clc    
  416c4c:	push   DWORD PTR [edx-0x22]
  416c4f:	fst    QWORD PTR [eax+0x44]
  416c52:	adc    cl,BYTE PTR [edi+0x73]
  416c55:	push   es
  416c56:	push   0x8d90f775
  416c5b:	aam    0xb4
  416c5d:	cdq    
  416c5e:	sub    dl,cl
  416c60:	popa   
  416c61:	rol    BYTE PTR [ecx],1
  416c63:	cdq    
  416c64:	fnstenv [ebp-0x6b]
  416c67:	pop    edi
  416c68:	bound  eax,QWORD PTR [eax+0x52]
  416c6b:	pop    esp
  416c6c:	shr    BYTE PTR [eax+0x4e3e1e16],cl
  416c72:	dec    ebx
  416c73:	int    0xe
  416c75:	loope  0x416ce8
  416c77:	daa    
  416c78:	popf   
  416c79:	jo     0x416ce0
  416c7b:	out    0xd8,eax
  416c7d:	mov    esi,ebp
  416c7f:	loopne 0x416c66
  416c81:	dec    edi
  416c82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c83:	sub    edi,DWORD PTR [ebp+0x24dd9a4b]
  416c89:	xchg   edi,eax
  416c8a:	arpl   si,dx
  416c8c:	fucom  st(5)
  416c8e:	xchg   ecx,eax
  416c8f:	inc    eax
  416c90:	xor    dh,BYTE PTR [edi-0x19935f8b]
  416c96:	ret    
  416c97:	shr    BYTE PTR [edx-0x7c73a6d0],cl
  416c9d:	test   DWORD PTR [ecx+0x7164dd62],0xb8c1c4c5
  416ca7:	dec    esp
  416ca8:	inc    ecx
  416ca9:	sbb    DWORD PTR [ebx],ebx
  416cab:	ss ret 0x5482
  416caf:	mov    dl,cl
  416cb1:	pop    ebx
  416cb2:	jg     0x416c3f
  416cb4:	loopne 0x416caa
  416cb6:	jne    0x416c67
  416cb8:	pop    es
  416cb9:	(bad)  
  416cba:	popf   
  416cbb:	xor    BYTE PTR ds:0x91d0eb98,dh
  416cc1:	xchg   edi,eax
  416cc2:	pop    ecx
  416cc3:	aas    
  416cc4:	xlat   BYTE PTR ds:[ebx]
  416cc5:	mov    ds:0x3ef3ae4a,al
  416cca:	clc    
  416ccb:	int    0x3
  416ccd:	fstp   TBYTE PTR [edx-0xa]
  416cd0:	ror    BYTE PTR [eax-0x4f90d00e],cl
  416cd6:	mov    fs,WORD PTR [ecx+0x58]
  416cd9:	ds sbb al,al
  416cdc:	addr16 mov esp,0xff514e52
  416ce2:	dec    eax
  416ce3:	fld    st(6)
  416ce5:	iret   
  416ce6:	mov    BYTE PTR [ecx],cl
  416ce8:	fwait
  416ce9:	cld    
  416cea:	stos   DWORD PTR es:[edi],eax
  416ceb:	jae    0x416cba
  416ced:	aam    0xc9
  416cef:	pop    ecx
  416cf0:	lea    ecx,ds:0xbbb1736e
  416cf6:	xor    DWORD PTR [edi-0x67],esi
  416cf9:	jmp    0x416d17
  416cfb:	pop    esp
  416cfc:	push   esi
  416cfd:	nop
  416cfe:	xchg   BYTE PTR [edx-0x3eb3da54],ch
  416d04:	sbb    eax,0x7cbeb9c9
  416d09:	sbb    ebx,DWORD PTR ss:[edi-0x5f5d1e29]
  416d10:	in     eax,0x55
  416d12:	idiv   cl
  416d14:	jle    0x416d39
  416d16:	xor    dh,BYTE PTR [edi-0x5d]
  416d19:	js     0x416d8a
  416d1b:	ficom  WORD PTR [edx+0x10]
  416d1e:	adc    ch,cl
  416d20:	int    0x5
  416d22:	xchg   ecx,eax
  416d23:	gs mov ch,0x60
  416d26:	pop    edx
  416d27:	push   cs
  416d28:	dec    bp
  416d2a:	or     edx,DWORD PTR [ebx+0x27af4ae7]
  416d30:	cmp    edi,DWORD PTR [eax]
  416d32:	push   eax
  416d33:	xchg   ecx,eax
  416d34:	(bad)
  416d38:	test   eax,0x59fdeb26
  416d3d:	repz pop eax
  416d3f:	dec    edx
  416d40:	jmp    0x416d25
  416d42:	das    
  416d43:	adc    BYTE PTR [esi+eax*1+0x694ed898],ah
  416d4a:	rcr    BYTE PTR [edi],cl
  416d4c:	ja     0x416d91
  416d4e:	xchg   edx,eax
  416d4f:	and    eax,0x66d5985e
  416d54:	test   cl,ch
  416d56:	add    esp,DWORD PTR ds:0x7fd25a71
  416d5c:	(bad)  
  416d5d:	jge    0x416dab
  416d5f:	cmp    ah,dh
  416d61:	das    
  416d62:	lods   eax,DWORD PTR ds:[esi]
  416d63:	xor    al,ch
  416d65:	fistp  QWORD PTR ds:0x5cf38a9d
  416d6b:	dec    edi
  416d6c:	add    ecx,DWORD PTR [ebp+esi*2+0x18]
  416d70:	dec    ecx
  416d71:	imul   ebp,DWORD PTR [edx-0xf],0xe44cba5c
  416d78:	stos   BYTE PTR es:[edi],al
  416d79:	aam    0xff
  416d7b:	call   0x69f5:0xa4fe9d5d
  416d82:	(bad)  
  416d84:	mov    eax,0x71894715
  416d89:	inc    edi
  416d8a:	loope  0x416d8d
  416d8c:	jbe    0x416d9d
  416d8e:	outs   dx,BYTE PTR ds:[esi]
  416d8f:	cmp    DWORD PTR [ebx-0x68b4a51],0x32
  416d96:	scas   eax,DWORD PTR es:[edi]
  416d97:	cld    
  416d98:	add    edx,edx
  416d9a:	jmp    0x416dc2
  416d9c:	std    
  416d9d:	adc    eax,0xdf62a7e6
  416da2:	sbb    al,0x13
  416da4:	fdiv   DWORD PTR [ebx]
  416da6:	pushf  
  416da7:	dec    edi
  416da8:	push   ebx
  416da9:	fcmovnbe st,st(4)
  416dab:	std    
  416dac:	jp     0x416e06
  416dae:	int3   
  416daf:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  416db1:	pop    ebp
  416db2:	out    dx,al
  416db3:	xchg   edx,eax
  416db4:	sub    DWORD PTR [ebx+eax*4+0x58],edx
  416db8:	jns    0x416db7
  416dba:	mov    DWORD PTR [edx+0x38f53a56],edx
  416dc0:	fs dec esp
  416dc2:	push   es
  416dc3:	adc    edi,0x47ef5102
  416dc9:	fstp   QWORD PTR [esi]
  416dcb:	jbe    0x416db1
  416dcd:	popa   
  416dce:	jmp    0xfed50489
  416dd3:	mov    esi,0xd2934e48
  416dd8:	and    bl,ch
  416dda:	es in  al,dx
  416ddc:	sub    eax,0xf12befc8
  416de1:	aas    
  416de2:	jmp    0x416d9f
  416de4:	out    0x78,eax
  416de6:	lock ja 0x416df4
  416de9:	xlat   BYTE PTR ds:[ebx]
  416dea:	dec    esp
  416deb:	fsubr  st(7),st
  416ded:	(bad)  
  416dee:	pop    esp
  416def:	bound  ecx,QWORD PTR [ebx-0x25]
  416df2:	pop    edx
  416df3:	xor    ecx,DWORD PTR [ebx+0x45]
  416df6:	mov    esi,0xda9eb93d
  416dfb:	add    dh,BYTE PTR [edi-0x66be0a05]
  416e01:	repz push cs
  416e03:	and    DWORD PTR [eax+edi*1],0xffffffaf
  416e07:	out    0x70,eax
  416e09:	sbb    al,0x43
  416e0b:	push   ds
  416e0c:	jmp    0x416dff
  416e0e:	sub    al,0xb1
  416e10:	pusha  
  416e11:	jle    0x416e3a
  416e13:	or     esp,DWORD PTR [esp+ebp*1]
  416e16:	pusha  
  416e17:	mov    edx,0x6973b35f
  416e1c:	xchg   edx,eax
  416e1d:	sahf   
  416e1e:	retf   0xaba1
  416e21:	je     0x416e26
  416e23:	std    
  416e24:	scas   eax,DWORD PTR es:[edi]
  416e25:	or     bl,BYTE PTR [esp+ebx*4]
  416e28:	and    al,0xdb
  416e2a:	pop    eax
  416e2b:	push   edi
  416e2c:	imul   esi,DWORD PTR [ecx],0xb
  416e2f:	lods   eax,DWORD PTR ds:[esi]
  416e30:	mov    esp,0xa00e6d4b
  416e35:	xchg   ebp,eax
  416e36:	sub    BYTE PTR ds:[edx+0x72],bl
  416e3a:	pop    esi
  416e3b:	mov    eax,esp
  416e3d:	lea    esp,[edi-0x57]
  416e40:	cwde   
  416e41:	pop    edi
  416e42:	or     DWORD PTR [edx],esi
  416e44:	mov    al,ds:0xb418a926
  416e49:	dec    ebp
  416e4a:	push   0xad28fe2f
  416e4f:	or     al,0x4f
  416e51:	sbb    ecx,DWORD PTR [ebx+ecx*1]
  416e54:	iret   
  416e55:	dec    ecx
  416e56:	xor    DWORD PTR [eax+0x3a],eax
  416e59:	pop    edx
  416e5a:	loopne 0x416ec7
  416e5c:	dec    edx
  416e5d:	test   eax,0x3a5b9678
  416e62:	adc    cl,BYTE PTR [ecx-0x2a]
  416e65:	xchg   ecx,eax
  416e66:	push   ebx
  416e67:	sar    DWORD PTR [esi+0x4f],0x7
  416e6b:	stos   DWORD PTR es:[edi],eax
  416e6c:	xchg   esi,eax
  416e6d:	out    dx,eax
  416e6e:	mov    edi,0x4ba953db
  416e73:	test   eax,0x1b875d7b
  416e78:	xchg   edi,eax
  416e79:	xor    ebx,edx
  416e7b:	or     al,0x22
  416e7d:	inc    esi
  416e7e:	popf   
  416e7f:	push   eax
  416e80:	imul   ebp,ecx,0xe79c01b9
  416e86:	jle    0x416ecb
  416e88:	mov    WORD PTR [bp+si-0x2e68],?
  416e8d:	mov    ebp,0x23a46033
  416e92:	test   DWORD PTR [ebx],ebx
  416e94:	mov    ecx,0x87568425
  416e99:	jle    0x416ef7
  416e9b:	xor    DWORD PTR [eax],0x44
  416e9e:	pusha  
  416e9f:	sbb    ebp,esp
  416ea1:	loop   0x416ebb
  416ea3:	outs   dx,BYTE PTR es:[esi]
  416ea5:	and    BYTE PTR [eax+0xe],0x57
  416ea9:	lea    ebx,[edx+eax*4+0x268c99e2]
  416eb0:	dec    ebx
  416eb1:	inc    edi
  416eb2:	int3   
  416eb3:	je     0x416e77
  416eb5:	out    0x37,al
  416eb7:	mov    bh,0xa0
  416eb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416eba:	or     al,0xb
  416ebc:	push   esp
  416ebd:	xchg   BYTE PTR [esi-0x5a],dh
  416ec0:	mov    eax,0x29bfc561
  416ec5:	stos   BYTE PTR es:[edi],al
  416ec6:	mov    bl,0x1e
  416ec8:	aas    
  416ec9:	fsub   QWORD PTR [edi+esi*4]
  416ecc:	dec    ebx
  416ecd:	in     al,0xf7
  416ecf:	add    eax,0xa377b91c
  416ed4:	adc    BYTE PTR [edi-0x9f36010],cl
  416eda:	add    ecx,DWORD PTR [edx+0x16eb30c5]
  416ee0:	sub    ecx,ebp
  416ee2:	xor    DWORD PTR [edx-0xe],ebx
  416ee5:	jo     0x416f3b
  416ee7:	stos   BYTE PTR es:[edi],al
  416ee8:	jno    0x416f33
  416eea:	dec    ecx
  416eeb:	jmp    0xd8ec:0x255a6ccf
  416ef2:	pop    eax
  416ef3:	(bad)  
  416ef5:	ins    DWORD PTR es:[edi],dx
  416ef6:	dec    esp
  416ef7:	mov    ds:0x76185dea,al
  416efc:	mov    ch,0x80
  416efe:	pop    ds
  416eff:	xchg   ebx,eax
  416f00:	push   ebx
  416f01:	stos   DWORD PTR es:[edi],eax
  416f02:	in     al,0x5c
  416f04:	sbb    BYTE PTR ds:0xe765db27,dl
  416f0a:	out    0x7f,eax
  416f0c:	call   0x3367:0x31d69d30
  416f13:	rcr    DWORD PTR [ecx],1
  416f15:	add    eax,0x3b301f02
  416f1a:	cmp    dl,BYTE PTR [edx+0x12bba677]
  416f20:	jle    0x416fa0
  416f22:	mov    ebp,0x3b8e3446
  416f27:	out    0x66,al
  416f29:	xor    dh,bh
  416f2b:	fdiv   QWORD PTR [ebx+0x18]
  416f2e:	fidiv  DWORD PTR [ecx-0x4a1d3439]
  416f34:	out    0xa2,al
  416f36:	pop    esi
  416f37:	loope  0x416f31
  416f39:	xor    BYTE PTR [ecx],dl
  416f3b:	adc    BYTE PTR [eax],bh
  416f3d:	add    eax,0x792b135f
  416f42:	imul   eax,DWORD PTR [esi-0x44],0xcb6bb12a
  416f49:	sub    BYTE PTR [ebx-0x7b],cl
  416f4c:	aas    
  416f4d:	sar    ecx,cl
  416f4f:	into   
  416f50:	mov    ebx,0xe25b1af6
  416f55:	push   0x67c4692
  416f5a:	pop    ebp
  416f5b:	xor    esp,DWORD PTR [esi+edi*8+0xc]
  416f5f:	mov    al,ds:0xa6395564
  416f64:	stos   BYTE PTR es:[edi],al
  416f65:	ret    0x7ce
  416f68:	sbb    DWORD PTR [edx+0x3366a761],ecx
  416f6e:	mov    ebx,0x515725c5
  416f73:	xchg   BYTE PTR [ebp+0x13],al
  416f76:	xchg   bh,bl
  416f78:	ins    DWORD PTR es:[edi],dx
  416f79:	mov    WORD PTR [eax-0x77],ss
  416f7c:	lahf   
  416f7d:	add    BYTE PTR [eax],al
  416f7f:	add    BYTE PTR [eax],al
  416f81:	add    BYTE PTR [ebp+0x2c],dl
  416f84:	pop    edi
  416f85:	test   DWORD PTR [edi-0x9],edi
  416f88:	(bad)  
  416f8a:	adc    dh,BYTE PTR [ecx-0x7b0a09da]
  416f90:	or     al,0x7f
  416f92:	cmp    ch,ch
  416f94:	add    BYTE PTR [eax],al
  416f96:	repz add al,0x0
  416f99:	add    BYTE PTR [esi+0x51ef201a],ch
  416f9f:	frstor [eax]
  416fa1:	sub    al,0xc9
  416fa3:	jnp    0x416f70
  416fa5:	inc    edi
  416fa6:	xchg   ch,ah
  416fa8:	mov    cs,WORD PTR [esi]
  416faa:	xchg   ebp,eax
  416fab:	cmp    esi,ebx
  416fad:	loope  0x416f9e
  416faf:	loop   0x416fba
  416fb1:	(bad)  
  416fb2:	push   esi
  416fb4:	add    bh,BYTE PTR [edx]
  416fb6:	lods   eax,DWORD PTR ds:[esi]
  416fb7:	not    DWORD PTR [edi]
  416fb9:	adc    eax,esi
  416fbb:	jbe    0x416f97
  416fbd:	jno    0x416fdc
  416fbf:	mov    BYTE PTR [eax],dl
  416fc1:	cld    
  416fc2:	int    0x34
  416fc4:	and    DWORD PTR [eax-0x2202ec25],ebx
  416fca:	mov    dl,0xa5
  416fcc:	add    al,0xbe
  416fce:	sub    DWORD PTR [eax+0x16],edi
  416fd1:	xchg   edi,eax
  416fd2:	in     eax,0x45
  416fd4:	aam    0x78
  416fd6:	push   cs
  416fd7:	lock pop ebx
  416fd9:	cmp    BYTE PTR [eax],bh
  416fdb:	sbb    DWORD PTR [esi],edi
  416fdd:	jb     0x417058
  416fdf:	or     BYTE PTR [ecx+ecx*1-0x4e],dl
  416fe3:	sbb    eax,0x6d15ab8c
  416fe8:	dec    eax
  416fe9:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416feb:	mov    dh,0x14
  416fed:	retf   
  416fee:	adc    cl,BYTE PTR [eax-0x68]
  416ff1:	jae    0x416f81
  416ff3:	xor    eax,0xce9f4eb
  416ff8:	jbe    0x41701b
  416ffa:	cdq    
  416ffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ffc:	(bad)  
  416ffd:	mov    BYTE PTR [edi+0x1d],0x65
  417001:	mov    al,ds:0x21f83378
  417006:	(bad)  
  417007:	out    dx,al
  417008:	out    0xe,al
  41700a:	stos   DWORD PTR es:[edi],eax
  41700b:	jae    0x417015
  41700d:	arpl   WORD PTR [eax+0x393eec2f],sp
  417013:	(bad)  
  417014:	xor    bl,BYTE PTR [ecx]
  417016:	inc    eax
  417017:	and    BYTE PTR [esi-0x3a75cf89],ah
  41701d:	jmp    0x8b1be762
  417022:	out    0x61,al
  417024:	sub    ch,ch
  417026:	in     eax,dx
  417027:	stc    
  417028:	push   eax
  417029:	jp     0x416fd2
  41702b:	out    dx,al
  41702c:	xchg   dl,ah
  41702e:	cmp    eax,0xcfcabd09
  417033:	jg     0x417035
  417035:	sbb    BYTE PTR [edx+0x41],ah
  417038:	cmp    esi,DWORD PTR [ebx+0x7e]
  41703b:	je     0x4170b9
  41703d:	cmp    BYTE PTR [edx-0x2d],bl
  417040:	arpl   WORD PTR [esi-0x44c63daf],si
  417046:	cmp    eax,0x9d644497
  41704b:	or     eax,ebp
  41704d:	add    eax,0x34ec8d0a
  417052:	gs push edi
  417054:	jle    0x417063
  417056:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417057:	or     bl,cl
  417059:	mov    fs,WORD PTR [edx]
  41705b:	jg     0x416ffd
  41705d:	or     DWORD PTR [ecx],0xfffffffe
  417060:	repz cdq 
  417062:	dec    DWORD PTR [ecx]
  417064:	cwde   
  417065:	pusha  
  417066:	call   0x6ec6ed70
  41706b:	leave  
  41706c:	mov    edi,fs
  41706e:	loopne 0x41706b
  417070:	mov    edx,0x61e3b2f6
  417075:	frstor [ebx]
  417077:	stc    
  417078:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417079:	test   BYTE PTR [edx],dl
  41707b:	sbb    BYTE PTR [eax],bh
  41707d:	and    al,0x1d
  41707f:	sub    BYTE PTR [eax-0x6d],dh
  417082:	jge    0x417019
  417084:	sbb    eax,0x974ea706
  417089:	push   ebp
  41708a:	inc    esp
  41708b:	popa   
  41708c:	dec    eax
  41708d:	push   es
  41708e:	and    DWORD PTR [edx-0x34ca1af0],esp
  417094:	call   0x41cd:0x7c2f501f
  41709b:	pop    edi
  41709c:	push   esi
  41709d:	pop    ecx
  41709e:	popa   
  41709f:	mov    ebp,0x78254cfa
  4170a4:	mov    ebx,0x4624713c
  4170a9:	imul   BYTE PTR [eax-0x6e18e571]
  4170af:	xchg   BYTE PTR [eax+ebx*4-0x2faf6ff2],bl
  4170b6:	pop    edi
  4170b7:	gs xchg ecx,eax
  4170b9:	das    
  4170ba:	and    eax,ebx
  4170bc:	mov    ecx,0x88c62db3
  4170c1:	and    ebp,edx
  4170c3:	push   eax
  4170c4:	mov    eax,ds:0xf2d868d0
  4170c9:	xchg   dh,cl
  4170cb:	cmp    dh,BYTE PTR [edx-0x45]
  4170ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170cf:	pop    esp
  4170d0:	and    DWORD PTR [ecx+0x7a],ebx
  4170d3:	jmp    0x5211fa3d
  4170d8:	pop    edx
  4170d9:	push   ebp
  4170da:	jo     0x417095
  4170dc:	mov    al,0xed
  4170de:	dec    ecx
  4170df:	cdq    
  4170e0:	bound  ecx,QWORD PTR [ecx+edi*4-0x1a]
  4170e4:	or     ch,BYTE PTR [eax+0x1a]
  4170e7:	loope  0x4170d5
  4170e9:	sbb    eax,0x359f9deb
  4170ee:	cs add bl,al
  4170f1:	jnp    0x4170ea
  4170f3:	retf   0xba2b
  4170f6:	mov    dl,BYTE PTR ds:0x4ad865b
  4170fc:	mov    ebx,0x8318e1f1
  417101:	mov    BYTE PTR [ebx-0x5972d05e],dl
  417107:	aas    
  417108:	shr    DWORD PTR [edi-0x37],cl
  41710b:	fwait
  41710c:	xchg   edx,eax
  41710d:	mov    edx,ds
  41710f:	addr16 jb 0x4170cb
  417112:	(bad)  
  417113:	adc    eax,0x6d2f1b58
  417118:	les    esi,FWORD PTR [ebx]
  41711a:	push   ebx
  41711b:	outs   dx,DWORD PTR ds:[esi]
  41711c:	or     al,cl
  41711e:	and    cl,BYTE PTR [esi+0x38]
  417121:	inc    ecx
  417122:	add    ebx,DWORD PTR [edx-0x62]
  417125:	cmp    esp,esi
  417127:	jae    0x4170c9
  417129:	pop    eax
  41712a:	dec    esp
  41712b:	add    eax,DWORD PTR [ebp-0x57]
  41712e:	push   cs
  41712f:	jg     0x41719b
  417131:	mov    ch,0x8e
  417133:	dec    edi
  417134:	jecxz  0x417190
  417136:	adc    al,0xf7
  417138:	xchg   edi,esp
  41713a:	js     0x4170d3
  41713c:	adc    DWORD PTR [edi],eax
  41713e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41713f:	mov    ebp,eax
  417141:	mov    ds,WORD PTR [ebx]
  417143:	arpl   bx,cx
  417145:	mov    edi,0x458c84c7
  41714a:	pop    ss
  41714b:	pop    ebx
  41714c:	push   cs
  41714d:	fxch   st(4)
  41714f:	inc    edi
  417150:	mov    cl,dh
  417152:	mov    BYTE PTR [ebx-0x67],dl
  417155:	mov    ebx,0x8f1264c0
  41715a:	and    edi,DWORD PTR [ecx-0x2d]
  41715d:	xchg   esi,eax
  41715e:	(bad)  
  41715f:	mov    eax,0x4f437a97
  417164:	imul   edx,ebx,0x201877ae
  41716a:	pushf  
  41716b:	xor    esp,DWORD PTR [ebx]
  41716d:	push   ss
  41716e:	and    ah,BYTE PTR [esi]
  417170:	dec    esp
  417171:	cld    
  417172:	pop    eax
  417173:	lea    esp,[ebx+0x11]
  417176:	mov    ch,BYTE PTR [ebx+0x23]
  417179:	enter  0x1da5,0x9e
  41717d:	mov    edx,0x9b23f4d5
  417182:	jnp    0x417114
  417184:	sahf   
  417185:	cli    
  417186:	mov    ebx,0x9c3b521a
  41718b:	pop    ss
  41718c:	inc    ebp
  41718d:	mov    ecx,0x4873583f
  417192:	jmp    0x64f9:0x635ba2b2
  417199:	add    ch,cl
  41719b:	mov    ebp,eax
  41719d:	imul   ecx,DWORD PTR [ebp+0x3f],0xfcd99978
  4171a4:	hlt    
  4171a5:	or     eax,0x402b9946
  4171aa:	adc    ch,BYTE PTR [ecx-0x67]
  4171ad:	mov    dh,0x5c
  4171af:	push   eax
  4171b0:	inc    ecx
  4171b1:	inc    eax
  4171b2:	stc    
  4171b3:	lds    esp,FWORD PTR [eax+0x795fd151]
  4171b9:	mov    ecx,0x802aa00c
  4171be:	cmp    BYTE PTR [eax+0xf],ah
  4171c1:	sbb    eax,ebx
  4171c3:	sar    DWORD PTR [edx],0x52
  4171c6:	out    dx,eax
  4171c7:	(bad)  
  4171c9:	popf   
  4171ca:	out    dx,al
  4171cb:	mov    gs,WORD PTR [edi+eax*4+0x3c]
  4171cf:	test   edi,esi
  4171d1:	fld    DWORD PTR [edx]
  4171d3:	mov    ds:0xe4be4053,al
  4171d8:	jb     0x4171b8
  4171da:	mov    eax,0x99c64c65
  4171df:	mov    eax,0x7cfb1aa5
  4171e4:	les    esi,FWORD PTR [edx]
  4171e6:	lds    ecx,FWORD PTR [edx]
  4171e8:	test   ebp,edi
  4171ea:	and    al,0xb9
  4171ec:	dec    ecx
  4171ed:	jge    0x417214
  4171ef:	inc    edx
  4171f0:	inc    ebx
  4171f1:	lods   eax,DWORD PTR ds:[esi]
  4171f2:	jne    0x417233
  4171f4:	or     DWORD PTR [eax+0x4d3f3274],esp
  4171fa:	fs push 0xffffffe2
  4171fd:	mov    DWORD PTR ds:0xcef308bd,esi
  417203:	inc    edi
  417204:	es pushf 
  417206:	cmp    eax,esp
  417208:	fdivr  st,st(2)
  41720a:	sti    
  41720b:	and    eax,0xbef8b9d
  417210:	(bad)  
  417211:	mov    ebx,0x49b44579
  417216:	or     ah,bh
  417218:	adc    DWORD PTR [esi-0x3e2cb896],0x7e
  41721f:	aas    
  417220:	das    
  417221:	add    eax,0x8a167f77
  417226:	sti    
  417227:	xchg   ebp,eax
  417228:	push   0x4
  41722a:	das    
  41722b:	daa    
  41722c:	jle    0x41727d
  41722e:	adc    dh,al
  417230:	cmc    
  417231:	ret    
  417232:	fwait
  417233:	push   esi
  417234:	dec    ebx
  417235:	gs fs std 
  417238:	xor    al,0x31
  41723a:	not    DWORD PTR [eax]
  41723c:	mov    bl,0xe4
  41723e:	gs jle 0x4171e1
  417241:	iret   
  417242:	xchg   esp,eax
  417243:	sub    al,0x95
  417245:	xor    eax,eax
  417247:	dec    edi
  417248:	inc    ebp
  417249:	push   esp
  41724a:	xor    eax,0x787aa36
  41724f:	cmpps  xmm4,XMMWORD PTR [edx+0x13e80945],0x10
  417257:	xchg   DWORD PTR [edi+ecx*8],ecx
  41725a:	(bad)  
  41725b:	adc    edx,DWORD PTR [edx-0x12]
  41725e:	mov    esi,0x4cfbbb4f
  417263:	popf   
  417264:	jbe    0x41724c
  417266:	imul   ebx,ecx,0xfffffff0
  417269:	leave  
  41726a:	mov    dl,0x5f
  41726c:	std    
  41726d:	leave  
  41726e:	(bad)  
  417270:	mov    al,ds:0xdf11381d
  417275:	rol    BYTE PTR [ecx],1
  417277:	hlt    
  417278:	adc    DWORD PTR [ebp-0xd],0xe96a6314
  41727f:	in     al,dx
  417280:	mov    dh,0xdc
  417282:	mov    bl,0xf2
  417284:	cli    
  417285:	dec    ebp
  417286:	test   BYTE PTR [edi-0x46],al
  417289:	jmp    0x5422976d
  41728e:	mov    eax,0x24d43d5c
  417293:	dec    edx
  417294:	icebp  
  417295:	gs xchg ebp,eax
  417297:	inc    BYTE PTR [eax+eiz*4+0x35ff889c]
  41729e:	pmaxsw mm2,QWORD PTR [esi-0x58]
  4172a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172a3:	push   esi
  4172a4:	fcmovnb st,st(7)
  4172a6:	dec    esi
  4172a7:	shl    bh,0xc1
  4172aa:	sbb    edi,ebp
  4172ac:	sbb    DWORD PTR [edi-0x44],esi
  4172af:	mov    edx,0xfa13dfa2
  4172b4:	or     eax,0x200f0c8
  4172b9:	(bad)  
  4172ba:	mov    edx,0xb2d8cc29
  4172bf:	daa    
  4172c0:	mov    bh,0x1e
  4172c2:	fst    DWORD PTR [edi]
  4172c4:	int3   
  4172c5:	mov    eax,0x31edacac
  4172ca:	pop    eax
  4172cb:	push   esp
  4172cc:	(bad)  
  4172cd:	mov    dh,0x55
  4172cf:	scas   al,BYTE PTR es:[edi]
  4172d0:	retf   
  4172d1:	jmp    0x417264
  4172d3:	loope  0x4172e4
  4172d5:	xchg   ebp,eax
  4172d6:	mov    eax,0xe5a0e539
  4172db:	inc    ecx
  4172dc:	gs gs data16 (bad) 
  4172e0:	call   0x98f:0xefdf1225
  4172e7:	(bad)  
  4172e8:	clc    
  4172e9:	xchg   esp,eax
  4172ea:	push   esi
  4172eb:	mov    bl,0xf2
  4172ed:	sbb    al,0x12
  4172ef:	bound  ecx,QWORD PTR [esi-0x70e5d36c]
  4172f5:	(bad)  
  4172f6:	jmp    0xb968:0x8383ac7c
  4172fd:	(bad)  
  4172fe:	fdiv   DWORD PTR [eax+ecx*4]
  417301:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417302:	or     DWORD PTR [edi-0x5c],edx
  417305:	push   ebx
  417306:	loop   0x41732c
  417308:	push   esp
  417309:	cmp    BYTE PTR [edx],dh
  41730b:	fst    QWORD PTR ds:0x1f5d10cd
  417311:	pop    ebp
  417312:	lds    ebx,FWORD PTR [ebp+0x4a4d3924]
  417318:	jns    0x41736b
  41731a:	add    al,0x6a
  41731c:	push   0x9d545b7b
  417321:	stc    
  417322:	mov    ds:0x8c0aa587,eax
  417327:	add    DWORD PTR cs:[ecx],edi
  41732a:	pop    esi
  41732b:	es retf 
  41732d:	adc    edi,eax
  41732f:	or     edx,0x4ce6a80f
  417335:	(bad)  [edi]
  417337:	scas   al,BYTE PTR es:[edi]
  417338:	test   DWORD PTR [ecx-0xb91835a],edx
  41733e:	ins    DWORD PTR es:[edi],dx
  41733f:	and    edx,edi
  417341:	mov    al,0xae
  417343:	loopne 0x417356
  417345:	mov    eax,0xf43bd18a
  41734a:	mov    cl,0x29
  41734c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41734d:	xor    al,0xe3
  41734f:	dec    ecx
  417350:	push   es
  417351:	lahf   
  417352:	xchg   ebx,eax
  417353:	mov    al,ds:0x520deecd
  417358:	xor    dh,BYTE PTR [edi+0x2cdec060]
  41735e:	sub    BYTE PTR [edx],al
  417360:	pop    edi
  417361:	jb     0x41732e
  417363:	loop   0x4173c3
  417365:	ins    BYTE PTR es:[edi],dx
  417366:	test   al,al
  417368:	loop   0x417384
  41736a:	dec    esp
  41736b:	test   DWORD PTR [ebx],ebx
  41736d:	stos   BYTE PTR es:[edi],al
  41736e:	jp     0x4173bd
  417370:	and    al,0x0
  417372:	fnstsw WORD PTR [eax]
  417374:	pop    esi
  417375:	mov    eax,0xc5bc436f
  41737a:	cmp    eax,0x31928949
  41737f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417380:	mov    eax,0x55843b72
  417385:	stos   BYTE PTR es:[edi],al
  417386:	mov    fs,WORD PTR [esi-0xc83e06]
  41738c:	or     bl,bl
  41738e:	inc    edi
  41738f:	icebp  
  417390:	inc    eax
  417391:	pop    ss
  417392:	and    al,0x4
  417394:	rcl    DWORD PTR [esi+0x720fe27d],1
  41739a:	add    DWORD PTR [ebx+0x56],edi
  41739d:	scas   al,BYTE PTR es:[edi]
  41739e:	and    DWORD PTR [ebx+0x71de258e],edi
  4173a4:	sbb    cl,BYTE PTR [esi]
  4173a6:	mov    bh,0xe7
  4173a8:	mov    edx,0x35f99111
  4173ad:	out    0x11,al
  4173af:	and    eax,DWORD PTR [edx+0x7e]
  4173b2:	test   eax,0x3a51162
  4173b7:	inc    edi
  4173b8:	push   ds
  4173b9:	bswap  ebp
  4173bb:	outs   dx,BYTE PTR ds:[esi]
  4173bc:	addr16 jno 0x417376
  4173bf:	mov    BYTE PTR [edx+0x44],bl
  4173c2:	pop    ecx
  4173c3:	xchg   edi,eax
  4173c4:	(bad)  [ecx]
  4173c6:	mov    dl,0xf0
  4173c8:	jmp    0x201de0da
  4173cd:	(bad)  
  4173ce:	xchg   ebx,eax
  4173cf:	inc    edx
  4173d0:	jno    0x417372
  4173d2:	adc    esp,DWORD PTR [edi-0x1d0b32c5]
  4173d8:	sbb    eax,DWORD PTR [ebx+0x66]
  4173db:	xor    dh,BYTE PTR [eax+0x34]
  4173de:	shl    ebx,cl
  4173e0:	mov    ah,0x79
  4173e2:	cdq    
  4173e3:	sub    DWORD PTR [edx+eiz*4],esp
  4173e6:	inc    eax
  4173e7:	jp     0x417448
  4173e9:	int    0x56
  4173eb:	mov    edi,0x1f6eb4bf
  4173f0:	in     eax,0x1b
  4173f2:	xchg   edx,eax
  4173f3:	aaa    
  4173f4:	dec    ebx
  4173f5:	mov    ds,esi
  4173f7:	adc    eax,0xec79cbce
  4173fc:	div    BYTE PTR [edi-0x70cb8f5f]
  417402:	test   dh,ch
  417404:	test   BYTE PTR [edi-0x6debbae5],bl
  41740a:	pop    ds
  41740b:	xchg   ebp,eax
  41740c:	(bad)  
  41740d:	ds or  eax,0x6bb0a722
  417413:	mov    cl,0xae
  417415:	pop    es
  417416:	nop
  417417:	fidivr WORD PTR [ebx+0x750251d8]
  41741d:	adc    ecx,DWORD PTR [ebx+0x17]
  417420:	call   0x2d1dfbdc
  417425:	sbb    BYTE PTR [ecx+0xa],bl
  417428:	fld1   
  41742a:	mov    ch,0x76
  41742c:	out    dx,eax
  41742d:	adc    dl,BYTE PTR [esi]
  41742f:	retf   
  417430:	shl    ebx,0xcd
  417433:	jmp    0x946a:0xdea3b499
  41743a:	test   DWORD PTR [edi-0x68],esp
  41743d:	and    BYTE PTR [ebx-0x49],0x98
  417441:	pop    ds
  417442:	add    al,0x93
  417444:	mov    ecx,0x55f59597
  417449:	inc    ebx
  41744a:	add    dl,BYTE PTR [ebx-0x8984a1e]
  417450:	daa    
  417451:	rol    BYTE PTR [eax],0x5a
  417454:	inc    edx
  417455:	cwde   
  417456:	xlat   BYTE PTR ds:[ebx]
  417457:	mov    cl,0x4d
  417459:	jp     0x41742e
  41745b:	push   ecx
  41745c:	pop    es
  41745d:	add    BYTE PTR [ebx-0x64],0x6
  417461:	sub    al,0x78
  417463:	jmp    0xfcb7b853
  417468:	mov    edi,0xc34264ea
  41746d:	jns    0x4174cc
  41746f:	mov    es,WORD PTR [edx]
  417471:	hlt    
  417472:	nop
  417473:	and    bh,cl
  417475:	push   ds
  417476:	jmp    0x48456db3
  41747b:	mov    dh,0x4c
  41747d:	inc    eax
  41747e:	ds xor eax,0x914ccdb1
  417484:	out    dx,eax
  417485:	mov    eax,DWORD PTR [ebx]
  417487:	xor    cl,BYTE PTR [ebx]
  417489:	leave  
  41748a:	shr    BYTE PTR [ecx],cl
  41748c:	xor    eax,0x0
  417491:	add    bh,bl
  417493:	dec    ebp
  417494:	call   0x305f:0xdfdf9a89
  41749b:	adc    al,0x61
  41749d:	retf   0x7342
  4174a0:	in     eax,dx
  4174a1:	leave  
  4174a2:	sub    esi,edx
  4174a4:	add    BYTE PTR [eax],al
  4174a6:	repz add al,0x0
  4174a9:	add    BYTE PTR [ebx+0x3cd5570f],cl
  4174af:	lods   eax,DWORD PTR ds:[esi]
  4174b0:	mov    ds:0xc165160a,al
  4174b5:	add    DWORD PTR ds:0xa40616cc,esi
  4174bb:	cs push ds
  4174bd:	push   edi
  4174be:	dec    ecx
  4174bf:	inc    edi
  4174c0:	in     al,0x1a
  4174c2:	imul   esp,DWORD PTR [eax],0x2a0d0c8f
  4174c8:	and    DWORD PTR [ebx+0x2f],eax
  4174cb:	addr16 jmp 0x417545
  4174ce:	pop    ds
  4174cf:	xchg   esp,eax
  4174d0:	adc    eax,0x31fc5276
  4174d5:	cmc    
  4174d6:	mov    edi,0x992034f5
  4174db:	(bad)  
  4174dc:	cli    
  4174dd:	pop    ds
  4174de:	imul   esi,DWORD PTR [ecx-0x311c44df],0x6a3970c
  4174e8:	mov    ds:0x71fe256a,al
  4174ed:	(bad)  
  4174ee:	das    
  4174ef:	test   BYTE PTR [ebp-0x7e],al
  4174f2:	cld    
  4174f3:	lds    esp,FWORD PTR [edx-0x7c4c5f01]
  4174f9:	lods   al,BYTE PTR ds:[esi]
  4174fa:	stc    
  4174fb:	jecxz  0x417535
  4174fd:	push   edx
  4174fe:	dec    esp
  4174ff:	xchg   cl,bh
  417501:	push   ebx
  417502:	sbb    ecx,ebp
  417504:	mov    bl,0x1c
  417506:	js     0x41753f
  417508:	dec    eax
  417509:	xchg   esp,eax
  41750a:	inc    esi
  41750b:	xor    eax,DWORD PTR [ebx+edi*1]
  41750e:	clc    
  41750f:	inc    esp
  417510:	mov    al,ds:0x8e583806
  417515:	sub    DWORD PTR [ecx+0x222c40e5],ebx
  41751b:	push   esp
  41751c:	and    al,0x34
  41751e:	cdq    
  41751f:	adc    al,0xc0
  417521:	pop    edx
  417522:	mov    al,0x8b
  417524:	sbb    BYTE PTR [esp+ebp*8-0x45],dh
  417528:	shr    al,1
  41752a:	fadd   DWORD PTR [eax]
  41752c:	push   cs
  41752d:	sar    BYTE PTR [esi+0x3d149379],1
  417533:	stos   BYTE PTR es:[edi],al
  417534:	repz retf 0x152c
  417538:	jg     0x4174f7
  41753a:	xchg   esi,eax
  41753b:	ds scas al,BYTE PTR es:[edi]
  41753d:	mov    bl,0x6f
  41753f:	mov    bl,0x9b
  417541:	inc    ecx
  417542:	test   eax,0x459bb371
  417547:	or     ch,BYTE PTR [eax+ebp*2+0x357b1065]
  41754e:	mov    dh,0xb
  417550:	xchg   edx,eax
  417551:	fsubr  DWORD PTR [ebx]
  417553:	ror    DWORD PTR [ebx-0x27],1
  417556:	hlt    
  417557:	dec    ebx
  417558:	add    BYTE PTR ds:0xacbab84d,bh
  41755e:	pop    ebx
  41755f:	mov    bh,0x0
  417561:	(bad)  
  417562:	out    dx,al
  417563:	sbb    cl,dl
  417565:	fcmovbe st,st(1)
  417567:	xchg   esi,eax
  417568:	pop    ss
  417569:	inc    ebx
  41756a:	push   ss
  41756b:	(bad)  
  41756c:	pop    edi
  41756d:	mov    ah,0x66
  41756f:	sub    DWORD PTR [ecx+0x5256d583],ebp
  417575:	jne    0x417582
  417577:	xor    bl,bh
  417579:	outs   dx,BYTE PTR ds:[esi]
  41757a:	jmp    0x4175fa
  41757c:	mov    BYTE PTR [eax+0x1f],cl
  41757f:	mov    cl,0xb5
  417581:	cmp    al,0x62
  417583:	push   ecx
  417584:	mov    al,ds:0xaf5ee5a
  417589:	mov    al,0x17
  41758b:	pushf  
  41758c:	(bad)  
  41758d:	push   ebx
  41758e:	adc    al,0x8f
  417590:	pop    ebx
  417591:	nop
  417592:	int3   
  417593:	xor    al,0x6a
  417595:	out    dx,eax
  417596:	sbb    bl,al
  417598:	ins    BYTE PTR es:[edi],dx
  417599:	sub    eax,0x3b7174c
  41759e:	xchg   DWORD PTR cs:[ecx+0x3e],ebp
  4175a2:	push   cs
  4175a3:	sahf   
  4175a4:	ss pusha 
  4175a6:	or     ebx,ecx
  4175a8:	std    
  4175a9:	cmp    ecx,DWORD PTR [esi]
  4175ab:	ret    
  4175ac:	xchg   ebx,eax
  4175ad:	cs test eax,ecx
  4175b0:	sar    edi,cl
  4175b2:	push   esp
  4175b3:	sub    DWORD PTR [edi+0x1b],eax
  4175b6:	xchg   BYTE PTR [ecx+0x0],bl
  4175b9:	stc    
  4175ba:	mov    al,0x65
  4175bc:	mov    ah,0xb
  4175be:	das    
  4175bf:	jnp    0x4175eb
  4175c1:	adc    BYTE PTR [ebp+0x2177b663],ah
  4175c7:	push   esi
  4175c8:	xchg   BYTE PTR es:[ecx],bl
  4175cb:	fld    TBYTE PTR [edi+ebp*1]
  4175ce:	dec    ebp
  4175cf:	pop    ebx
  4175d0:	sbb    cl,bh
  4175d2:	mov    edi,0x9a8e069
  4175d7:	call   0xe4eb:0xb8f5319d
  4175de:	popa   
  4175df:	dec    ebx
  4175e0:	fwait
  4175e1:	out    0x51,eax
  4175e3:	add    BYTE PTR [ecx+0x7629a7d4],0x78
  4175ea:	xor    al,0x4e
  4175ec:	test   dh,dl
  4175ee:	sub    DWORD PTR [ebx],eax
  4175f0:	dec    edi
  4175f1:	fidiv  DWORD PTR [ecx-0x6d]
  4175f4:	adc    al,0xeb
  4175f6:	test   eax,0x5b42e8c0
  4175fb:	aad    0xd9
  4175fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175fe:	xor    esp,eax
  417600:	bnd jo 0x41761d
  417603:	inc    si
  417605:	fidivr WORD PTR [edx+0x64411aa3]
  41760b:	pop    esi
  41760c:	push   es
  41760d:	gs pop eax
  41760f:	sti    
  417610:	and    BYTE PTR [eax-0x35],bh
  417613:	shl    BYTE PTR [eax-0xc278cd2],0x77
  41761a:	push   ds
  41761b:	cmp    eax,0xfb84afcf
  417620:	xor    cl,BYTE PTR [esi-0x59]
  417623:	ror    DWORD PTR [esi],cl
  417625:	sti    
  417626:	fld    DWORD PTR ss:[edi+0x60]
  41762a:	bound  ebp,QWORD PTR [edi+eax*1+0x7398fd54]
  417631:	pop    ecx
  417632:	and    dh,BYTE PTR [ebx-0x6146b46]
  417638:	dec    edx
  417639:	pop    esi
  41763a:	cdq    
  41763b:	and    al,0x80
  41763d:	jge    0x4175cc
  41763f:	push   ss
  417640:	jmp    0xa2b0567d
  417645:	int3   
  417646:	push   DWORD PTR [edi+0x0]
  417649:	dec    esi
  41764a:	test   DWORD PTR [ebx],eax
  41764c:	scas   eax,DWORD PTR es:[edi]
  41764d:	(bad)  
  41764e:	das    
  41764f:	jle    0x4175d4
  417651:	jo     0x4175eb
  417653:	clc    
  417654:	xchg   DWORD PTR [edx-0x7b2eda01],esi
  41765a:	scas   al,BYTE PTR es:[edi]
  41765b:	sub    DWORD PTR [esi-0xb],0x250fa4da
  417662:	mov    ecx,0x244fa42a
  417667:	lahf   
  417668:	sub    eax,0x9d828bcd
  41766d:	addr16 icebp 
  41766f:	xor    al,0x72
  417671:	cmp    al,0x34
  417673:	pop    eax
  417674:	sub    BYTE PTR [ecx+eiz*4-0x2c40375],0x10
  41767c:	cli    
  41767d:	rcr    BYTE PTR [edx-0x53],cl
  417680:	mov    al,0x7f
  417682:	push   cs
  417683:	cmp    BYTE PTR ds:0x4d5ce598,ch
  417689:	xchg   esp,eax
  41768a:	and    DWORD PTR [edx+0x1df9d964],ebx
  417690:	and    eax,0xbad05cb
  417695:	retf   0xccf9
  417698:	mov    esi,0xf7e4d5e1
  41769d:	imul   ebx,DWORD PTR [ecx-0x2a],0x2
  4176a1:	test   al,0x43
  4176a3:	and    bl,BYTE PTR ds:0x12b136f3
  4176a9:	ret    0xa1f8
  4176ac:	mov    bl,0x5
  4176ae:	mov    eax,ds:0x503b71c3
  4176b3:	pop    ds
  4176b4:	jne    0x41769b
  4176b6:	pop    eax
  4176b7:	sbb    ch,dh
  4176b9:	xchg   esi,eax
  4176ba:	sar    BYTE PTR [eax],1
  4176bc:	scas   eax,DWORD PTR es:[edi]
  4176bd:	cmp    ah,BYTE PTR [edi-0x6fb149ec]
  4176c3:	aas    
  4176c4:	sbb    DWORD PTR [edx+0x6e],edx
  4176c7:	into   
  4176c8:	dec    ecx
  4176c9:	leave  
  4176ca:	sub    esp,esi
  4176cc:	(bad)  [edx]
  4176ce:	loope  0x41767c
  4176d0:	and    eax,edi
  4176d2:	scas   al,BYTE PTR es:[edi]
  4176d3:	vmread DWORD PTR [edx-0x2f75b00b],esi
  4176da:	stos   BYTE PTR es:[edi],al
  4176db:	fwait
  4176dc:	sub    esp,DWORD PTR [edx-0x72]
  4176df:	sub    al,0x6
  4176e1:	mov    ebp,ecx
  4176e3:	inc    edx
  4176e4:	or     eax,0x420ca052
  4176e9:	aas    
  4176ea:	and    eax,0x8e203180
  4176ef:	pop    es
  4176f0:	rcl    edi,1
  4176f2:	mov    dh,bh
  4176f4:	stos   BYTE PTR es:[edi],al
  4176f5:	or     dl,bl
  4176f7:	data16 aad 0xf4
  4176fa:	ret    
  4176fb:	je     0x4176cc
  4176fd:	mov    BYTE PTR [ebp+0x39],bl
  417700:	mov    edi,0x1b937206
  417705:	addr16 push ss
  417707:	dec    ecx
  417708:	icebp  
  417709:	push   ecx
  41770a:	mov    BYTE PTR [ecx-0x6e],bl
  41770d:	(bad)  
  41770e:	in     eax,0xf3
  417710:	jae    0x41771f
  417712:	adc    esi,ebx
  417714:	scas   eax,DWORD PTR es:[edi]
  417715:	scas   al,BYTE PTR es:[edi]
  417716:	add    al,0x75
  417718:	jne    0x417730
  41771a:	imul   ebx,DWORD PTR [edi+0x4ced0d62],0xce202f7b
  417724:	mov    DWORD PTR [ebx+0x1],ecx
  417727:	enter  0x5a19,0x12
  41772b:	sub    BYTE PTR [edx+ecx*1],al
  41772e:	jo     0x417773
  417730:	jle    0x4176f4
  417732:	adc    dl,BYTE PTR [edx-0x46929b0b]
  417738:	adc    ebp,DWORD PTR [edx+0x1230e0a]
  41773e:	sub    BYTE PTR [eax-0x30],dh
  417741:	(bad)  
  417742:	sahf   
  417743:	bnd call 0x710e488d
  417749:	int    0x68
  41774b:	xor    BYTE PTR [ebx-0x514a5ef9],0xbd
  417752:	pop    ecx
  417753:	xchg   ebx,eax
  417754:	(bad)  
  417755:	popf   
  417756:	retf   
  417757:	aad    0x8d
  417759:	mov    eax,ds:0xdbf6e952
  41775e:	add    eax,0xd96c4b85
  417763:	(bad)  
  417764:	mov    esp,0xf2f8957b
  417769:	popf   
  41776a:	inc    ebp
  41776b:	iret   
  41776c:	pop    eax
  41776d:	popa   
  41776e:	test   ch,dh
  417770:	nop
  417771:	not    DWORD PTR ss:[edx]
  417774:	popa   
  417775:	push   es
  417776:	ret    
  417777:	mov    dl,0x96
  417779:	mov    DWORD PTR [ebx-0x10],ebx
  41777c:	in     eax,0x83
  41777e:	dec    edi
  41777f:	mov    esp,DWORD PTR [ecx+0x27c41c5a]
  417785:	popf   
  417786:	mov    al,BYTE PTR [esi]
  417788:	std    
  417789:	scas   eax,DWORD PTR es:[edi]
  41778a:	dec    ebp
  41778b:	xor    ch,BYTE PTR ds:0x17f675c3
  417791:	les    eax,FWORD PTR [ebx]
  417793:	fucomip st,st(0)
  417795:	cli    
  417796:	sub    BYTE PTR [ecx],al
  417798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417799:	inc    ebp
  41779a:	jb     0x4177dc
  41779c:	(bad)  
  41779d:	out    dx,al
  41779e:	out    0x55,al
  4177a0:	mov    ds:0x12890c36,eax
  4177a5:	or     esi,DWORD PTR [edi-0x67]
  4177a8:	sub    al,0xc1
  4177aa:	or     BYTE PTR [ebp+0x2],al
  4177ad:	pushf  
  4177ae:	jo     0x417824
  4177b0:	mov    ds,WORD PTR [edx+0x5d27b88d]
  4177b6:	loopne 0x417765
  4177b8:	call   0x92e16eac
  4177bd:	div    DWORD PTR [ebp-0x77e30144]
  4177c3:	aaa    
  4177c4:	push   ss
  4177c5:	sbb    DWORD PTR [esp+edi*2],edx
  4177c8:	jp     0x417791
  4177ca:	adc    al,0xba
  4177cc:	imul   eax,esp,0xc93344b5
  4177d2:	mov    bh,0xe5
  4177d4:	mov    bh,0x24
  4177d6:	(bad)  
  4177d7:	iret   
  4177d8:	dec    esp
  4177d9:	sub    ah,BYTE PTR [ecx]
  4177db:	sub    edi,DWORD PTR [ecx+ebp*4-0x630a8f41]
  4177e2:	addr16 add eax,0xdc4bb7ec
  4177e8:	ins    BYTE PTR es:[edi],dx
  4177e9:	xor    edi,DWORD PTR [ebx]
  4177eb:	adc    bl,0x4e
  4177ee:	std    
  4177ef:	and    edi,DWORD PTR ds:0x992f75be
  4177f5:	xor    dh,BYTE PTR [ebx]
  4177f7:	ins    BYTE PTR es:[edi],dx
  4177f8:	and    eax,0x246c7eb7
  4177fd:	push   ds
  4177fe:	pop    eax
  4177ff:	xchg   ebx,eax
  417800:	push   esi
  417801:	stc    
  417802:	retf   
  417803:	cmp    DWORD PTR [esi+0x15fcf958],ebx
  417809:	mov    al,BYTE PTR [eax-0x41c3724e]
  41780f:	mov    ebp,0xe98ebb01
  417814:	outs   dx,BYTE PTR ds:[esi]
  417815:	xor    ebx,ebx
  417817:	(bad)  
  417818:	fstp   QWORD PTR ss:[ebx-0x17d5d09e]
  41781f:	and    DWORD PTR [ebx+0x6],0x1853359b
  417826:	nop
  417827:	dec    esp
  417828:	and    al,0x9
  41782a:	jmp    0x514673be
  41782f:	aas    
  417830:	(bad)  
  417831:	ss (bad) 
  417833:	mov    ecx,0x439032e
  417838:	retf   0x4464
  41783b:	push   0xffffffb7
  41783d:	bound  esp,QWORD PTR [ebx-0x71]
  417840:	and    al,0x25
  417842:	scas   al,BYTE PTR es:[edi]
  417843:	lahf   
  417844:	add    al,0x5b
  417846:	add    DWORD PTR ds:0xe38684fa,esp
  41784c:	mov    ds:0x1c42a662,eax
  417851:	(bad)  
  417852:	cmp    al,0x4a
  417854:	pop    ecx
  417855:	pop    ecx
  417856:	mov    edi,0x8540978e
  41785b:	shr    BYTE PTR [ebp-0x15],0x1b
  41785f:	mov    esp,DWORD PTR [edx]
  417861:	inc    ecx
  417862:	or     eax,0xc6648526
  417867:	xor    edx,0xbd5e5ad4
  41786d:	xchg   esp,eax
  41786e:	adc    BYTE PTR [ecx+eiz*2-0x17],dl
  417872:	shl    DWORD PTR [edx+edx*2+0x39],0x3b
  417877:	sub    ebp,ebp
  417879:	mov    eax,0x1c743096
  41787e:	add    eax,0xfe7146c1
  417883:	pop    ecx
  417884:	push   0xd02930c
  417889:	xor    DWORD PTR [edi-0x5c],0x894cddec
  417890:	or     al,BYTE PTR ds:0x885bc22e
  417896:	leave  
  417897:	mov    ds:0x2ab490bb,al
  41789c:	in     eax,dx
  41789d:	sar    DWORD PTR [ecx+0x7a0a57cd],cl
  4178a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178a4:	xchg   BYTE PTR [esi+0x1b],dh
  4178a7:	out    0x77,eax
  4178a9:	sub    BYTE PTR [eax],bl
  4178ab:	dec    ebx
  4178ac:	jbe    0x417929
  4178ae:	mov    gs,edi
  4178b0:	(bad)  
  4178b1:	in     eax,0xa0
  4178b3:	lock adc ebx,eax
  4178b6:	mov    al,ds:0x91ab3d67
  4178bb:	daa    
  4178bc:	xor    edi,DWORD PTR [esp+esi*8-0x64a549f9]
  4178c3:	xor    dl,BYTE PTR [ebp+ebp*1-0x9]
  4178c7:	out    0x9,eax
  4178c9:	push   edi
  4178ca:	retf   
  4178cb:	cdq    
  4178cc:	out    0xbc,al
  4178ce:	js     0x4178e9
  4178d0:	and    al,0x50
  4178d2:	sub    DWORD PTR [edx],edi
  4178d4:	iret   
  4178d5:	xchg   ebp,eax
  4178d6:	adc    al,0xe4
  4178d8:	dec    edi
  4178d9:	xor    ebx,ebp
  4178db:	xchg   edi,edi
  4178dd:	not    BYTE PTR [edi+0x6c]
  4178e0:	cdq    
  4178e1:	and    cl,ah
  4178e3:	or     DWORD PTR [edx+0x5484c146],ebx
  4178e9:	jbe    0x4178d7
  4178eb:	loop   0x417911
  4178ed:	pushf  
  4178ee:	mov    ecx,gs
  4178f0:	pushf  
  4178f1:	fst    DWORD PTR [eax-0x31e51d9c]
  4178f7:	xor    bh,ch
  4178f9:	pop    ds
  4178fa:	out    dx,al
  4178fb:	je     0x417896
  4178fd:	lods   al,BYTE PTR ds:[esi]
  4178fe:	adc    bl,BYTE PTR [ebx-0x14f82418]
  417904:	cmp    al,0x0
  417906:	lahf   
  417907:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417908:	cmp    eax,0x9d6a8bba
  41790d:	mov    dh,0x26
  41790f:	mov    ch,BYTE PTR [ecx-0xb]
  417912:	jno    0x4178c6
  417914:	sbb    al,0x15
  417916:	inc    edx
  417917:	icebp  
  417918:	dec    edx
  417919:	cdq    
  41791a:	inc    edx
  41791b:	add    eax,0x454e2b53
  417920:	(bad)  
  417921:	xchg   esi,eax
  417922:	pop    ds
  417923:	icebp  
  417924:	std    
  417925:	xor    BYTE PTR [eax-0x65],cl
  417928:	scas   al,BYTE PTR es:[edi]
  417929:	ret    0x2d32
  41792c:	xor    BYTE PTR [ecx],0xb0
  41792f:	jbe    0x417980
  417931:	push   ds
  417932:	(bad)  
  417933:	cs add eax,0x2e6a30b6
  417939:	mov    ah,0x2a
  41793b:	and    esi,DWORD PTR [edi-0x68b24dba]
  417941:	pop    es
  417942:	mov    ch,BYTE PTR [esi]
  417944:	jp     0x4178f9
  417946:	fiadd  WORD PTR [ebx]
  417948:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417949:	aas    
  41794a:	clc    
  41794b:	jo     0x4178fa
  41794d:	jns    0x4179a4
  41794f:	pop    esp
  417950:	aas    
  417951:	add    al,BYTE PTR [ebx-0x69fe8827]
  417957:	adc    eax,0x5c4be734
  41795c:	std    
  41795d:	sbb    eax,0xe6841107
  417962:	repz test BYTE PTR [ebx],al
  417965:	retf   0x95c4
  417968:	xor    eax,0x865f7568
  41796d:	xchg   sp,ax
  41796f:	into   
  417970:	fs scas al,BYTE PTR es:[edi]
  417972:	pop    eax
  417973:	and    al,BYTE PTR [edi+0x7a]
  417976:	adc    DWORD PTR [edi+0x2],ebp
  417979:	shl    DWORD PTR [eax-0x3b],cl
  41797c:	adc    al,0x61
  41797e:	mov    WORD PTR [ebp+edx*8+0x65],ss
  417982:	int    0x18
  417984:	add    eax,0x18275c75
  417989:	mov    bl,0x68
  41798b:	cmp    DWORD PTR [edx+edi*4-0x6e2cfb2d],edi
  417992:	arpl   WORD PTR [ebx+0x3b],bp
  417995:	pop    ebp
  417996:	mov    dl,0xca
  417998:	fidivr WORD PTR [edi+ecx*1-0x43]
  41799c:	mov    eax,DWORD PTR [eax]
  41799e:	add    BYTE PTR [eax],al
  4179a0:	add    BYTE PTR [eax],al
  4179a2:	es mov ah,0x71
  4179a5:	jno    0x41799a
  4179a7:	cmc    
  4179a8:	div    DWORD PTR es:[edx+0x8]
  4179ac:	mov    eax,ds:0x7e1e9975
  4179b1:	dec    ebx
  4179b2:	push   ds
  4179b3:	test   DWORD PTR [eax],0x4f300
  4179b9:	add    BYTE PTR [ebx+0x13],dl
  4179bc:	push   cs
  4179bd:	xchg   DWORD PTR [ebx-0x26],esp
  4179c0:	cmp    esi,DWORD PTR [eax]
  4179c2:	shl    DWORD PTR [eax],1
  4179c4:	and    eax,0x235d759
  4179c9:	cld    
  4179ca:	gs inc edx
  4179cc:	bound  ebx,QWORD PTR ds:0xe0171fba
  4179d2:	mov    eax,0xa83cfbfb
  4179d7:	mov    dl,BYTE PTR [edx+0xf86d462]
  4179dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179de:	mov    al,0x53
  4179e0:	jo     0x4179aa
  4179e2:	sbb    BYTE PTR [eax-0x6d4b44e3],ch
  4179e8:	cs dec edi
  4179ea:	inc    edx
  4179eb:	pop    esp
  4179ec:	xchg   ecx,eax
  4179ed:	xchg   cx,ax
  4179ef:	ss fs inc esi
  4179f2:	dec    edi
  4179f3:	fcom   st(3)
  4179f5:	dec    ebx
  4179f6:	(bad)  
  4179f7:	mov    ah,0xe8
  4179f9:	leave  
  4179fa:	or     al,0x22
  4179fc:	(bad)  
  4179fd:	or     eax,0x30831100
  417a02:	outs   dx,BYTE PTR ds:[esi]
  417a03:	aad    0xea
  417a05:	xchg   ecx,eax
  417a06:	xor    dl,ah
  417a08:	ffreep st(3)
  417a0a:	aaa    
  417a0b:	mov    ebp,0xbd6f0ab2
  417a10:	sub    DWORD PTR [edi-0x4dfb3bd8],esp
  417a16:	(bad)  
  417a18:	xor    ebx,DWORD PTR [esp+eax*2+0x11c771eb]
  417a1f:	popa   
  417a20:	stos   DWORD PTR es:[edi],eax
  417a21:	inc    ebx
  417a22:	mov    bh,0x13
  417a24:	jo     0x4179f6
  417a26:	clc    
  417a27:	int3   
  417a28:	jecxz  0x417a18
  417a2a:	shl    DWORD PTR [ebx-0x54cc2e07],1
  417a30:	cmp    eax,0x7b3290ce
  417a35:	ins    BYTE PTR es:[edi],dx
  417a36:	loop   0x417a89
  417a38:	pop    esp
  417a39:	and    eax,0x981d17cf
  417a3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a3f:	mov    cl,0xbe
  417a41:	sahf   
  417a42:	mov    bh,0x94
  417a44:	lds    esi,FWORD PTR [ebx+0x168a5e80]
  417a4a:	inc    eax
  417a4b:	popf   
  417a4c:	test   eax,0x659ff6a1
  417a51:	outs   dx,BYTE PTR ds:[esi]
  417a52:	jb     0x417a7b
  417a54:	xlat   BYTE PTR ds:[ebx]
  417a56:	aas    
  417a57:	fs mov dl,0xc1
  417a5a:	adc    esi,DWORD PTR [ebp*8+0x6d6068e8]
  417a61:	add    esi,DWORD PTR [edx]
  417a63:	aam    0x97
  417a65:	mov    edi,cs
  417a67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a68:	jae    0x417a46
  417a6a:	mov    ebx,0x6e238588
  417a6f:	dec    ebx
  417a70:	gs std 
  417a72:	xlat   BYTE PTR ds:[ebx]
  417a73:	adc    eax,0x5bcf95de
  417a78:	sub    ebx,esp
  417a7a:	mov    esi,DWORD PTR cs:[edi+0x5a]
  417a7e:	and    BYTE PTR [edx+0x2446efe6],dl
  417a84:	adc    eax,0xe47fde24
  417a89:	imul   esi,edi,0xffffff9e
  417a8c:	(bad)  
  417a8d:	shl    DWORD PTR [eax-0x71],1
  417a90:	cwde   
  417a91:	out    0xb2,eax
  417a93:	xchg   BYTE PTR cs:[ebp-0x5015943b],ch
  417a9a:	push   eax
  417a9b:	frstor [eax-0x22a513b4]
  417aa1:	sbb    al,0x20
  417aa3:	repz cmp ebp,DWORD PTR [ebx]
  417aa6:	not    BYTE PTR [edi]
  417aa8:	into   
  417aa9:	repnz shl bl,0xa8
  417aad:	enter  0x3cc9,0x4e
  417ab1:	scas   eax,DWORD PTR es:[edi]
  417ab2:	int3   
  417ab3:	pop    ds
  417ab4:	xor    esi,DWORD PTR [ebp*4-0x7ee1b61c]
  417abb:	xor    eax,0xf382312a
  417ac0:	test   eax,0xd796593a
  417ac5:	ins    DWORD PTR es:[edi],dx
  417ac6:	aad    0xc7
  417ac8:	inc    esi
  417ac9:	jle    0x417abb
  417acb:	cmp    edx,DWORD PTR [ecx+eiz*4-0x37dabefa]
  417ad2:	or     bl,BYTE PTR [ecx]
  417ad4:	mov    edx,0x541ba985
  417ad9:	rol    DWORD PTR [ecx+0x5b],cl
  417adc:	loope  0x417a93
  417ade:	pop    es
  417adf:	xchg   esp,eax
  417ae0:	pop    edx
  417ae1:	aas    
  417ae2:	call   0x1fe726ac
  417ae7:	jmp    0xc8afc45d
  417aec:	or     esi,DWORD PTR [ebx-0x2c37d805]
  417af2:	xchg   ecx,eax
  417af3:	jge    0x417aa1
  417af5:	xchg   edx,eax
  417af6:	sti    
  417af7:	call   0x69abe2cd
  417afc:	mov    cl,0xfe
  417afe:	ror    ah,cl
  417b00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b01:	push   ebp
  417b02:	sub    al,0x2c
  417b04:	inc    ecx
  417b05:	rcr    ebp,0x3e
  417b08:	add    al,0x9f
  417b0a:	mov    al,0x9d
  417b0c:	sub    bl,bl
  417b0e:	in     al,dx
  417b0f:	push   ecx
  417b10:	dec    eax
  417b11:	pop    esi
  417b12:	ret    
  417b13:	jmp    0x11559472
  417b18:	cdq    
  417b19:	adc    BYTE PTR [edx],ch
  417b1b:	scas   al,BYTE PTR es:[edi]
  417b1c:	and    ebp,eax
  417b1e:	outs   dx,BYTE PTR ds:[esi]
  417b1f:	xchg   BYTE PTR [eax-0x49],dh
  417b22:	or     bl,BYTE PTR [edx]
  417b24:	mov    ecx,0xfc5e4917
  417b29:	outs   dx,BYTE PTR ds:[esi]
  417b2a:	and    ah,BYTE PTR [ebx]
  417b2c:	ret    0xc66e
  417b2f:	inc    eax
  417b30:	add    cl,BYTE PTR [ecx]
  417b32:	outs   dx,BYTE PTR ds:[esi]
  417b33:	mov    ebp,0xe6bd3edd
  417b38:	xchg   edx,eax
  417b39:	in     al,dx
  417b3a:	retfw  0xc082
  417b3e:	push   ds
  417b3f:	or     dl,ah
  417b41:	and    al,0x1f
  417b43:	sbb    eax,0xb5151cc5
  417b48:	pop    edx
  417b49:	or     cl,cl
  417b4b:	or     esi,esi
  417b4d:	jl     0x417ae0
  417b4f:	outs   dx,DWORD PTR ds:[esi]
  417b50:	outs   dx,DWORD PTR ds:[esi]
  417b51:	mov    ebx,0x3e46a53b
  417b56:	push   edx
  417b57:	cmp    bh,BYTE PTR [edi+0x31]
  417b5a:	mov    eax,0x80b4ad32
  417b5f:	arpl   WORD PTR [edx-0x28584ae1],bp
  417b65:	enter  0x90be,0x9f
  417b69:	mov    dh,0xf6
  417b6b:	mov    ch,0xe9
  417b6d:	int3   
  417b6e:	xor    DWORD PTR [eax+0x6fb54d72],edi
  417b74:	ret    
  417b75:	xchg   BYTE PTR [ebx],cl
  417b77:	es adc ax,0xfb51
  417b7c:	int    0xd1
  417b7e:	adc    dl,ah
  417b80:	fisub  WORD PTR [esp+eax*4-0x4137e13f]
  417b87:	hlt    
  417b88:	mov    ds:0xb00c05f5,eax
  417b8d:	add    al,0x48
  417b8f:	add    bl,BYTE PTR [ecx+ebp*8]
  417b92:	sbb    DWORD PTR [esi],ebx
  417b94:	das    
  417b95:	int3   
  417b96:	bound  esi,QWORD PTR [edi]
  417b98:	mov    cl,0x2a
  417b9a:	pop    ebx
  417b9b:	inc    edi
  417b9c:	rcr    BYTE PTR [ebx-0x2201b078],0xea
  417ba3:	or     al,0x5a
  417ba5:	fucomp st(3)
  417ba7:	out    0x56,eax
  417ba9:	mov    dh,0xad
  417bab:	repnz pushf 
  417bad:	popa   
  417bae:	xchg   esi,eax
  417baf:	enter  0xa035,0xc2
  417bb3:	aad    0x60
  417bb5:	imul   edi,DWORD PTR [esi+edx*2],0x95d90843
  417bbc:	popf   
  417bbd:	sub    eax,0x6ef23bdd
  417bc2:	add    eax,0x5048452b
  417bc7:	fwait
  417bc8:	je     0x417b61
  417bca:	xchg   ebx,eax
  417bcb:	daa    
  417bcc:	in     al,dx
  417bcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bce:	push   es
  417bcf:	jmp    0x2758:0x90f4a453
  417bd6:	(bad)  
  417bd7:	outs   dx,BYTE PTR ds:[esi]
  417bd8:	sub    al,0xff
  417bda:	jbe    0x417bfb
  417bdc:	dec    edi
  417bdd:	push   ebp
  417bde:	nop
  417bdf:	mov    al,ds:0x6083da1c
  417be4:	inc    esi
  417be5:	(bad)  
  417be6:	push   ebx
  417be7:	cmp    bh,bh
  417be9:	iret   
  417bea:	or     DWORD PTR [ebp+0x46268327],0xffffffc1
  417bf1:	leave  
  417bf2:	and    DWORD PTR [esi-0x4d7e6ec2],0x889ef47e
  417bfc:	pusha  
  417bfd:	jo     0x417c7b
  417bff:	mov    esi,0xe00960e8
  417c04:	into   
  417c05:	test   eax,0xb1b3987f
  417c0a:	sub    eax,0xbe9bee13
  417c0f:	sti    
  417c10:	retf   0x8b76
  417c13:	jmp    0x6c73:0x37f4f97d
  417c1a:	and    esp,DWORD PTR [eax-0x21]
  417c1d:	jnp    0x417c6c
  417c1f:	sub    BYTE PTR [edx-0x1ccd1ac7],dl
  417c25:	ja     0x417bce
  417c27:	jg     0x417bc3
  417c29:	out    dx,eax
  417c2a:	dec    esp
  417c2b:	xchg   DWORD PTR [ecx],ebx
  417c2d:	mov    eax,ds:0x2f644c5f
  417c32:	lock mov cl,0x55
  417c35:	nop
  417c36:	daa    
  417c37:	test   eax,ebx
  417c39:	mov    ecx,0xe0ca0318
  417c3e:	cmp    DWORD PTR [ebx+0x3c196983],0x4b4dd669
  417c48:	jbe    0x417c20
  417c4a:	mov    cl,ch
  417c4c:	ror    BYTE PTR [ecx-0x1a],1
  417c4f:	mov    al,dh
  417c51:	mov    eax,0xaa9a77fb
  417c56:	mov    esi,0xd519b6f4
  417c5b:	xor    al,0x2e
  417c5d:	mov    ds:0x596c0a0e,eax
  417c62:	xor    al,0xf3
  417c64:	dec    ecx
  417c65:	mov    ch,0x91
  417c67:	mov    ?,WORD PTR [ecx+0x31614373]
  417c6d:	stos   BYTE PTR es:[edi],al
  417c6e:	push   ebx
  417c6f:	mov    dl,0x34
  417c71:	push   ds
  417c72:	add    al,0xa9
  417c74:	bound  esi,QWORD PTR [eax+0x7d]
  417c77:	push   es
  417c78:	enter  0xb95e,0x25
  417c7c:	push   edx
  417c7d:	fdiv   QWORD PTR [esp+eax*1+0x27]
  417c81:	jge    0x417ccf
  417c83:	push   0x67
  417c85:	fist   DWORD PTR [ebp-0x28756eab]
  417c8b:	dec    esi
  417c8c:	dec    esi
  417c8d:	mov    cl,BYTE PTR [esi+0x6b]
  417c90:	icebp  
  417c91:	cmp    edi,DWORD PTR [edi-0x46569103]
  417c97:	not    DWORD PTR [eax+0x1892f06e]
  417c9d:	push   edi
  417c9e:	imul   ecx,ebx,0xa
  417ca1:	jmp    0x417cf6
  417ca3:	stos   BYTE PTR es:[edi],al
  417ca4:	mul    BYTE PTR [edi]
  417ca6:	pop    es
  417ca7:	push   ss
  417ca8:	mov    eax,0x5ad6f7b
  417cad:	icebp  
  417cae:	ins    BYTE PTR es:[edi],dx
  417caf:	stc    
  417cb0:	stos   BYTE PTR es:[edi],al
  417cb1:	or     DWORD PTR [esi-0x3f],esp
  417cb4:	fbld   TBYTE PTR [ecx]
  417cb6:	add    DWORD PTR [esi+0x21601958],edx
  417cbc:	es sbb eax,0xc433625
  417cc2:	int    0xdd
  417cc4:	dec    eax
  417cc5:	leave  
  417cc6:	jne    0x417d0e
  417cc8:	inc    ebp
  417cc9:	ret    
  417cca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ccb:	mov    ebp,0x5c90240a
  417cd0:	in     eax,dx
  417cd1:	in     eax,dx
  417cd2:	fwait
  417cd3:	mov    esi,DWORD PTR [esi+0x7b1bf0e6]
  417cd9:	mov    bh,0xb1
  417cdb:	mov    al,ds:0xa05960a0
  417ce0:	xor    ebp,DWORD PTR [ecx]
  417ce2:	fcmove st,st(0)
  417ce4:	stos   BYTE PTR es:[edi],al
  417ce5:	mov    eax,ds:0x6ccc9f09
  417cea:	jns    0x417ca8
  417cec:	push   0xffffffc3
  417cee:	inc    ebx
  417cef:	mov    al,ds:0x422aa837
  417cf4:	(bad)  
  417cf5:	jg     0x417c86
  417cf7:	adc    edx,esp
  417cf9:	addr16 pop ds
  417cfb:	add    edx,DWORD PTR [ecx-0x7ea42c8e]
  417d01:	inc    ebp
  417d02:	mov    WORD PTR [esi],es
  417d04:	test   ebp,edi
  417d06:	add    dl,BYTE PTR [esi+0x1b]
  417d09:	out    0xc3,al
  417d0b:	mov    ebx,0x7a314bf
  417d10:	imul   eax,DWORD PTR [edi],0x89f35f18
  417d16:	sbb    al,0xff
  417d18:	cmp    eax,0x40532cb4
  417d1d:	xor    dl,0xfa
  417d20:	push   eax
  417d21:	mov    esi,0xd57df8c1
  417d26:	enter  0x88a5,0xd5
  417d2a:	mov    eax,ds:0xffdfec1f
  417d2f:	psrlw  mm5,QWORD PTR [esi]
  417d32:	stc    
  417d33:	push   edx
  417d34:	push   edi
  417d35:	inc    esi
  417d36:	jl     0x417d6a
  417d38:	fcomp  DWORD PTR [esi-0x8de41ca]
  417d3e:	dec    ebx
  417d3f:	xchg   BYTE PTR [edi],bh
  417d41:	gs popa 
  417d43:	out    0x22,al
  417d45:	sub    BYTE PTR [ebx-0xe],cl
  417d48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d49:	and    BYTE PTR [esi-0x392c11c],bh
  417d4f:	dec    edx
  417d50:	inc    ebp
  417d51:	mov    dh,0xdc
  417d53:	sti    
  417d54:	dec    ecx
  417d55:	mov    eax,ds:0x765324ed
  417d5a:	je     0x417d65
  417d5c:	ficom  DWORD PTR [edi]
  417d5e:	fcmovnu st,st(7)
  417d60:	pop    edi
  417d61:	pop    ecx
  417d62:	add    dh,BYTE PTR [esi+0x963a376]
  417d68:	inc    ebp
  417d69:	jne    0x417dea
  417d6b:	data16 add BYTE PTR [esi+0x58],ah
  417d6f:	jmp    0x417d78
  417d71:	push   ss
  417d72:	jo     0x417daa
  417d74:	sub    al,0x6a
  417d76:	int3   
  417d77:	mov    cl,0x6f
  417d79:	jmp    0x417d32
  417d7b:	(bad)  
  417d7c:	rcl    DWORD PTR [ebp-0x70],cl
  417d7f:	and    al,BYTE PTR [esi-0x4f1c94d5]
  417d85:	pop    edi
  417d86:	mov    dh,0xdf
  417d88:	clc    
  417d89:	sub    DWORD PTR [esi],ebx
  417d8b:	and    al,0x4d
  417d8d:	or     al,0x67
  417d8f:	rdmsr  
  417d91:	xchg   ebp,eax
  417d92:	pop    eax
  417d93:	popf   
  417d94:	xchg   esi,eax
  417d95:	cmp    eax,0x7c6962a5
  417d9a:	and    al,BYTE PTR [eax]
  417d9c:	jo     0x417d94
  417d9e:	jo     0x417dba
  417da0:	loop   0x417d42
  417da2:	test   ebp,edi
  417da4:	xchg   edx,eax
  417da5:	jae    0x417d28
  417da7:	jp     0x417dd4
  417da9:	pop    ebx
  417daa:	mov    DWORD PTR [eax-0xb4490d3],eax
  417db0:	cmc    
  417db1:	cs rcr dh,cl
  417db4:	sub    al,0x1f
  417db6:	adc    eax,0x5ab7b8f6
  417dbb:	dec    esi
  417dbc:	mov    BYTE PTR [edi+0x51],bl
  417dbf:	retf   
  417dc0:	sub    DWORD PTR [edi-0x1c],ebx
  417dc3:	mov    ebp,0x736d7d87
  417dc8:	shl    DWORD PTR [eax-0x7bf80d39],1
  417dce:	loopne 0x417d83
  417dd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dd1:	lods   al,BYTE PTR ds:[esi]
  417dd2:	hlt    
  417dd3:	add    al,0x9b
  417dd5:	xor    ebx,DWORD PTR [edi-0x12091ae7]
  417ddb:	mov    edx,0x618851e4
  417de0:	jge    0x417e22
  417de2:	or     al,0x7d
  417de4:	cmp    ebx,DWORD PTR ds:0x414b5588
  417dea:	sbb    ah,BYTE PTR [edi-0x11]
  417ded:	int    0x6a
  417def:	out    0x91,eax
  417df1:	(bad)  
  417df2:	mov    dh,0xba
  417df4:	mov    dl,0xa
  417df6:	daa    
  417df7:	aam    0x7f
  417df9:	cmc    
  417dfa:	dec    ecx
  417dfb:	xchg   ebx,eax
  417dfc:	push   ecx
  417dfd:	and    al,0xc8
  417dff:	cmc    
  417e00:	aaa    
  417e01:	jmp    0x7255c214
  417e06:	mov    gs,WORD PTR [eax+edx*1-0xa]
  417e0a:	fcom   st(4)
  417e0c:	push   edx
  417e0d:	push   esi
  417e0e:	push   edi
  417e0f:	lock shl BYTE PTR [esi],cl
  417e12:	mov    ebx,0x7558b1dc
  417e17:	push   ds
  417e18:	adc    edx,DWORD PTR [esi-0x31e85f14]
  417e1e:	inc    ebp
  417e1f:	pop    eax
  417e20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e22:	jno    0x417e01
  417e24:	sub    ebx,DWORD PTR [ebx+eiz*2]
  417e27:	sti    
  417e28:	loop   0x417dfe
  417e2a:	fistp  DWORD PTR [ebp+0x2d]
  417e2d:	clc    
  417e2e:	or     DWORD PTR [esi-0x4c],0x74
  417e32:	daa    
  417e33:	fmul   QWORD PTR [bp+di]
  417e36:	push   0xfffffff7
  417e38:	xchg   edi,eax
  417e39:	push   edx
  417e3a:	pop    eax
  417e3b:	push   ebx
  417e3c:	popa   
  417e3d:	ror    al,cl
  417e3f:	and    DWORD PTR [eax+0x1e802d8b],ecx
  417e45:	or     dl,bh
  417e47:	jmp    0x6325:0xddb385bf
  417e4e:	cwde   
  417e4f:	test   eax,0x2e85f0
  417e54:	pusha  
  417e55:	jle    0x417ece
  417e57:	jbe    0x417e1a
  417e59:	push   0xffffff99
  417e5b:	fstp   QWORD PTR [ebx-0x2cb7e085]
  417e61:	pop    es
  417e62:	shr    DWORD PTR [eax+0xb],1
  417e65:	pop    es
  417e66:	jl     0x417e60
  417e68:	loope  0x417e53
  417e6a:	rcr    DWORD PTR [edi-0x1fbcf998],0x56
  417e71:	jb     0x417e9f
  417e73:	popa   
  417e74:	mov    ch,BYTE PTR [eax+0x7f]
  417e77:	fisttp QWORD PTR [edi+0x52491134]
  417e7d:	jne    0x417e59
  417e7f:	pop    esp
  417e80:	loop   0x417e60
  417e82:	aaa    
  417e83:	pop    esi
  417e84:	push   ecx
  417e85:	cmp    DWORD PTR [esi-0x3f],0x193c0526
  417e8c:	dec    esi
  417e8d:	pop    ss
  417e8e:	ret    0x71e8
  417e91:	mov    esp,DWORD PTR [edx-0x2771c306]
  417e97:	xchg   ebp,eax
  417e98:	sub    ah,al
  417e9a:	pop    ebx
  417e9b:	ret    0xc4e5
  417e9e:	dec    esi
  417e9f:	shl    DWORD PTR [ecx+0x11],cl
  417ea2:	les    esi,FWORD PTR [ecx+0x24af41bc]
  417ea8:	sahf   
  417ea9:	(bad)  
  417eaa:	cmp    eax,0x4ce8
  417eaf:	add    BYTE PTR [eax],al
  417eb1:	add    dl,al
  417eb3:	sahf   
  417eb4:	xchg   ebx,eax
  417eb5:	inc    edi
  417eb6:	fisttp WORD PTR [edi-0x2a]
  417eb9:	lahf   
  417eba:	int    0x45
  417ebc:	push   eax
  417ebd:	punpckldq mm7,DWORD PTR [eax-0x3ee8b1b]
  417ec4:	add    BYTE PTR [eax],al
  417ec6:	repz add al,0x0
  417ec9:	add    BYTE PTR [ebx+0x44],dl
  417ecc:	jbe    0x417ea4
  417ece:	fs int 0x13
  417ed1:	mov    edx,esp
  417ed3:	push   eax
  417ed4:	jb     0x417ed0
  417ed6:	aad    0xaf
  417ed8:	sahf   
  417ed9:	test   al,0x9a
  417edb:	ret    0x1728
  417ede:	pop    es
  417edf:	aaa    
  417ee0:	or     al,0xc6
  417ee2:	adc    al,0xa1
  417ee4:	xor    dh,dh
  417ee6:	pop    edi
  417ee7:	inc    ebx
  417ee8:	mov    ecx,eax
  417eea:	mov    al,0x7f
  417eec:	mov    edi,0x5a0e862d
  417ef1:	inc    esi
  417ef2:	ficom  WORD PTR [ebx-0x19]
  417ef5:	pop    esi
  417ef6:	or     DWORD PTR [ebp+edi*8-0x2d4de39e],esp
  417efd:	rcr    DWORD PTR [eax+0x71],0xf6
  417f01:	push   eax
  417f02:	xor    esp,DWORD PTR [edi+0x25835214]
  417f08:	sti    
  417f09:	cmp    ecx,eax
  417f0b:	pop    edx
  417f0c:	test   BYTE PTR [edx-0x3e4e0ac7],bh
  417f12:	xor    esp,DWORD PTR [edx]
  417f14:	or     ebx,esi
  417f16:	dec    ebx
  417f17:	mov    cl,0x4d
  417f19:	popa   
  417f1a:	fiadd  WORD PTR [edi]
  417f1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f1d:	mov    es,WORD PTR [edx]
  417f1f:	sti    
  417f20:	(bad)  [bp-0x6]
  417f24:	jb     0x417f98
  417f26:	cmp    eax,0xb3560a3a
  417f2b:	fld    DWORD PTR [edx]
  417f2d:	mov    ebp,DWORD PTR [ecx]
  417f2f:	ins    BYTE PTR es:[edi],dx
  417f30:	push   ebx
  417f31:	std    
  417f32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f33:	pop    esp
  417f34:	lahf   
  417f35:	and    bh,BYTE PTR [ebp+esi*2-0x13]
  417f39:	fnstsw WORD PTR [edx+0x12]
  417f3c:	mov    al,0x55
  417f3e:	push   ds
  417f3f:	ins    BYTE PTR es:[edi],dx
  417f40:	repz or eax,0x4a73de75
  417f46:	fbld   TBYTE PTR [esp+ebx*2-0x63790ba6]
  417f4d:	or     edi,DWORD PTR [ebx+0x73910a77]
  417f53:	push   0x23
  417f55:	jle    0x417fd0
  417f57:	cmp    bl,BYTE PTR [eax-0x1d]
  417f5a:	pop    ds
  417f5b:	inc    esi
  417f5c:	xchg   esi,eax
  417f5d:	mov    esp,0x1586b10f
  417f62:	mov    WORD PTR [eax-0x918d4c9],ds
  417f68:	adc    eax,ecx
  417f6a:	and    ecx,esi
  417f6c:	(bad)  
  417f6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f6f:	fwait
  417f70:	js     0x417ef7
  417f72:	mov    fs:0x9d24041e,al
  417f78:	fsin   
  417f7a:	add    eax,0xd9e425a4
  417f7f:	pop    es
  417f80:	outs   dx,BYTE PTR ds:[esi]
  417f81:	test   DWORD PTR [ebx-0x301c8122],edi
  417f87:	pop    edi
  417f88:	or     ecx,DWORD PTR [ebx+0x1710574a]
  417f8e:	dec    edi
  417f8f:	cdq    
  417f90:	ins    BYTE PTR es:[edi],dx
  417f91:	or     al,0x7
  417f93:	pop    ds
  417f94:	jp     0x418004
  417f96:	xor    BYTE PTR [esi-0xf2fe92b],0x92
  417f9d:	mov    edi,0xa4489554
  417fa2:	mov    cl,0x6
  417fa4:	cwde   
  417fa5:	mov    esi,DWORD PTR [edi-0x674302b0]
  417fab:	dec    esi
  417fac:	call   0x56a1:0xafde04df
  417fb3:	push   ss
  417fb4:	pop    edx
  417fb5:	sbb    BYTE PTR [eax-0x6f],dh
  417fb8:	and    DWORD PTR [edx-0x72a5ef36],ebp
  417fbe:	nop
  417fbf:	aam    0x14
  417fc1:	lock adc eax,0x9d60c4af
  417fc7:	mov    ds:0xdb76d4c,al
  417fcc:	sub    dl,0xed
  417fcf:	repz scas al,BYTE PTR es:[di]
  417fd2:	int    0x9c
  417fd4:	xchg   DWORD PTR [ecx+0x1a],ebx
  417fd7:	arpl   WORD PTR [ebx],dx
  417fd9:	xchg   DWORD PTR fs:[ecx-0x3f],ecx
  417fdd:	cmp    al,0x70
  417fdf:	fiadd  WORD PTR gs:[edx-0x50b03be3]
  417fe6:	adc    edx,DWORD PTR [eax+0x1d]
  417fe9:	pop    eax
  417fea:	xor    eax,0x4bdeec09
  417fef:	and    dh,BYTE PTR es:[ecx]
  417ff2:	fld    TBYTE PTR [ebx]
  417ff4:	sbb    eax,0x8524dad
  417ffa:	add    al,0xb8
  417ffc:	das    
  417ffd:	(bad)  [ebx]
  417fff:	cmc    
  418000:	aam    0x3c
  418002:	jmp    0x350cde2a
  418007:	aas    
  418008:	mov    WORD PTR [esi+0x14af894c],ds
  41800e:	out    0xc4,eax
  418010:	sbb    dl,ch
  418012:	pop    ss
  418013:	cmp    eax,0x3e1af347
  418018:	in     al,0xab
  41801a:	iret   
  41801b:	aaa    
  41801c:	dec    BYTE PTR [ecx+0x66]
  41801f:	and    al,0x76
  418021:	outs   dx,BYTE PTR ds:[esi]
  418022:	mov    cl,0xd3
  418024:	sahf   
  418025:	jnp    0x418043
  418027:	jb     0x418035
  418029:	jmp    0x8e48dff
  41802e:	sub    eax,0x890b7c09
  418033:	sub    esp,esi
  418035:	into   
  418036:	fisub  WORD PTR [eax-0x17]
  418039:	cdq    
  41803a:	pop    eax
  41803b:	xor    al,0x8c
  41803d:	mov    edx,0x88719913
  418042:	mov    dh,0x2d
  418044:	daa    
  418045:	outs   dx,BYTE PTR ds:[esi]
  418046:	add    BYTE PTR ds:[esi-0x2baa8400],al
  41804d:	jbe    0x62645f87
  418053:	jge    0x4180ae
  418055:	push   ecx
  418056:	test   al,0xa3
  418058:	mov    esp,0x917b836c
  41805d:	frstor [edx]
  41805f:	pop    edi
  418060:	xor    esi,DWORD PTR [ebp-0x61]
  418063:	imul   ecx,DWORD PTR [edx],0x33
  418066:	sbb    DWORD PTR [ebx],0xffffffd2
  418069:	xor    BYTE PTR [edi+0x4e419287],dh
  41806f:	mov    bl,0xae
  418071:	mov    es,ebp
  418073:	popf   
  418074:	stos   DWORD PTR es:[edi],eax
  418075:	push   edi
  418076:	not    DWORD PTR [edx]
  418078:	mov    esi,0xb3a2641c
  41807d:	sub    al,0x6d
  41807f:	mov    bl,0x7b
  418081:	es jb  0x418081
  418084:	dec    eax
  418085:	(bad)  
  418087:	xor    DWORD PTR [edx],esi
  418089:	cmp    bl,BYTE PTR [eax]
  41808b:	ins    DWORD PTR es:[edi],dx
  41808c:	cmp    DWORD PTR [eax+0x50215e16],esi
  418092:	or     cl,BYTE PTR [ecx-0x64]
  418095:	add    eax,0xb0034b2a
  41809a:	arpl   WORD PTR [ecx+0x4ee78ac4],sp
  4180a0:	lahf   
  4180a1:	outs   dx,DWORD PTR ds:[esi]
  4180a2:	xchg   ebp,eax
  4180a3:	js     0x418078
  4180a5:	pop    ebx
  4180a6:	repz shl BYTE PTR [ebp-0x4a],cl
  4180aa:	adc    eax,0xd185575
  4180af:	jbe    0x4180d6
  4180b1:	mov    cl,BYTE PTR [esi-0x3adb22c5]
  4180b7:	and    edi,DWORD PTR [ebx]
  4180b9:	js     0x4180a8
  4180bb:	scas   al,BYTE PTR es:[edi]
  4180bc:	jno    0x4180cb
  4180be:	jbe    0x41808a
  4180c0:	cli    
  4180c1:	or     esi,DWORD PTR [edi-0x41060cf1]
  4180c7:	xor    DWORD PTR [edx-0x73],ebx
  4180ca:	sahf   
  4180cb:	icebp  
  4180cc:	test   eax,0x40630343
  4180d1:	imul   esp,esi,0x7c
  4180d4:	mov    edi,0xfcf46fca
  4180d9:	js     0x4180ae
  4180db:	rcl    ebx,0x49
  4180de:	shr    BYTE PTR [eax],0xad
  4180e1:	lahf   
  4180e2:	cmp    BYTE PTR [edx-0x61],0x71
  4180e6:	inc    eax
  4180e7:	mov    ebx,0x1255027c
  4180ec:	mov    bl,0x17
  4180ee:	mov    al,ds:0x56f9be73
  4180f3:	or     eax,esp
  4180f5:	out    0x90,eax
  4180f7:	adc    al,ah
  4180f9:	shl    BYTE PTR [eax-0x75eee18a],1
  4180ff:	pop    eax
  418100:	mov    al,0x8e
  418102:	ret    
  418103:	leave  
  418104:	shr    DWORD PTR [esi+0x7665eeac],cl
  41810a:	ins    BYTE PTR es:[edi],dx
  41810b:	push   0x934c5e16
  418110:	(bad)  
  418111:	repz add BYTE PTR [edx+0x13],dl
  418115:	pop    ebp
  418116:	es cmp al,0xc7
  418119:	push   ebp
  41811a:	(bad)  
  41811b:	mov    eax,ds:0x4093dd45
  418120:	push   eax
  418121:	mov    ebx,0xa6320224
  418127:	test   DWORD PTR [ecx],esi
  418129:	(bad)  
  41812a:	push   eax
  41812b:	inc    edx
  41812c:	sbb    BYTE PTR [ecx+ebx*4-0x42],ah
  418130:	fmul   DWORD PTR [edx-0x62fdbd9c]
  418136:	and    DWORD PTR [edx],ecx
  418138:	add    ebx,esp
  41813a:	xor    BYTE PTR [edx],bl
  41813c:	out    0x4,eax
  41813e:	push   es
  41813f:	fsubr  DWORD PTR [edx+0x4a]
  418142:	in     al,dx
  418143:	xor    DWORD PTR [esi+0x20],esp
  418146:	rcl    BYTE PTR [ebx],1
  418148:	push   ebp
  418149:	stc    
  41814a:	adc    bh,BYTE PTR [ebx-0x606cc9ff]
  418150:	cmp    edx,edx
  418152:	add    DWORD PTR [edi-0x62],ebx
  418155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418156:	bound  edi,QWORD PTR [esi*4+0x666748af]
  41815d:	sub    eax,0x9156bb8b
  418162:	shr    ch,cl
  418164:	xlat   BYTE PTR ds:[ebx]
  418165:	adc    DWORD PTR [edx+eax*8-0x4f],edx
  418169:	cmc    
  41816a:	add    edi,DWORD PTR [ebp+edi*4-0x27e29518]
  418171:	sub    eax,0x81d19278
  418176:	mov    ds:0x9301962f,al
  41817b:	lahf   
  41817c:	rcr    ecx,0xf3
  41817f:	cmc    
  418180:	fwait
  418181:	adc    al,dh
  418183:	pop    esi
  418184:	stos   DWORD PTR es:[edi],eax
  418185:	mov    ecx,0xb367ba52
  41818a:	fwait
  41818b:	outs   dx,DWORD PTR ds:[esi]
  41818c:	ss mov cl,0x7a
  41818f:	cld    
  418190:	fimul  WORD PTR cs:[esi+0xa5735f9]
  418197:	call   0x5573b293
  41819c:	mov    al,0xdc
  41819e:	add    esp,DWORD PTR [eax+0x174e297]
  4181a4:	sbb    BYTE PTR [ebp-0x5daee125],bh
  4181aa:	lds    ebx,FWORD PTR [esi+0x43f8b7bd]
  4181b0:	outs   dx,BYTE PTR ds:[esi]
  4181b1:	push   ds
  4181b2:	clc    
  4181b3:	(bad)  
  4181b4:	push   cs
  4181b5:	jmp    0x41813b
  4181b7:	dec    edx
  4181b8:	mov    edx,0xc512cd2d
  4181bd:	leave  
  4181be:	push   ss
  4181bf:	adc    ecx,DWORD PTR [ebx+0xb3879f5]
  4181c5:	adc    BYTE PTR ds:0x262586c9,al
  4181cb:	mov    edx,0x2cf5292b
  4181d0:	fisubr DWORD PTR [esi+0x44]
  4181d3:	loope  0x418184
  4181d5:	bound  ebp,QWORD PTR [ecx]
  4181d7:	and    al,0x13
  4181d9:	(bad)  
  4181da:	vpor   ymm7,ymm2,YMMWORD PTR [ebp-0x1ed82655]
  4181e2:	jg     0x41819a
  4181e4:	xchg   esp,eax
  4181e5:	jge    0x4181a4
  4181e7:	test   al,0x36
  4181e9:	mov    DWORD PTR [edx],edx
  4181eb:	jl     0x41820a
  4181ed:	push   ds
  4181ee:	icebp  
  4181ef:	mov    al,0x54
  4181f1:	lea    edi,[eax]
  4181f3:	sbb    BYTE PTR [edi+0x21],dh
  4181f6:	mov    dl,0x13
  4181f8:	fnsave [edi+0x1f]
  4181fb:	mov    ch,ah
  4181fd:	cs push ds
  4181ff:	mov    BYTE PTR [edx],ch
  418201:	pop    ebx
  418202:	mov    esi,0xd5ce395b
  418207:	sbb    edi,DWORD PTR [ebp+0x57400ec2]
  41820d:	adc    ecx,ecx
  41820f:	loopne 0x41822e
  418211:	cs in  al,0xac
  418214:	dec    eax
  418215:	out    dx,al
  418216:	xchg   ebp,eax
  418217:	or     DWORD PTR [eax],ebp
  418219:	and    bl,bl
  41821b:	jnp    0x4181a2
  41821d:	cld    
  41821e:	jmp    0x889e:0x5ba28ba2
  418225:	push   edi
  418226:	mov    bl,cl
  418228:	(bad)  
  418229:	and    dh,BYTE PTR [edx+edx*2+0x10]
  41822d:	dec    ecx
  41822e:	push   esp
  41822f:	clc    
  418230:	leave  
  418231:	mov    dl,ch
  418233:	push   es
  418234:	and    al,0xd2
  418236:	xor    BYTE PTR [edx+0x32],ah
  418239:	aaa    
  41823a:	jmp    0x418202
  41823c:	pop    ss
  41823d:	and    esp,DWORD PTR [esi+ebp*8+0x28]
  418241:	sub    DWORD PTR [edi],0xffffff9f
  418244:	test   edi,esp
  418246:	enter  0x27e6,0xb6
  41824a:	xlat   BYTE PTR ds:[ebx]
  41824b:	js     0x41822b
  41824d:	bound  eax,QWORD PTR [ecx+0x57ef85fb]
  418253:	ds push ss
  418255:	and    esi,DWORD PTR [ebx]
  418257:	sub    BYTE PTR [esi],ah
  418259:	das    
  41825a:	push   edi
  41825b:	loope  0x4182a5
  41825d:	aas    
  41825e:	push   cs
  41825f:	popf   
  418260:	push   0xd406e1cb
  418265:	in     eax,0xc6
  418267:	cmp    al,0x8d
  418269:	iret   
  41826a:	jbe    0x4182b9
  41826c:	(bad)
  418270:	lahf   
  418271:	aaa    
  418272:	in     al,0x96
  418274:	(bad)  
  418275:	das    
  418276:	pop    ss
  418277:	push   0xe
  418279:	addr16 and ebx,ebx
  41827c:	fidiv  WORD PTR [edi]
  41827e:	mov    esp,0xfe910268
  418283:	xchg   edx,eax
  418284:	das    
  418285:	jns    0x418306
  418287:	loopne 0x418238
  418289:	adc    eax,0x9fcf30e3
  41828e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41828f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418291:	or     BYTE PTR [ebx+eiz*2-0x66],0xe4
  418296:	in     eax,dx
  418297:	int    0x82
  418299:	imul   esp,DWORD PTR [esp+edi*2],0x13
  41829d:	ds inc ebp
  41829f:	test   BYTE PTR [ebx],0xd9
  4182a2:	nop
  4182a3:	sub    eax,0x4da7f9db
  4182a8:	ret    
  4182a9:	ret    
  4182aa:	dec    esp
  4182ab:	stc    
  4182ac:	pop    ss
  4182ad:	lea    ecx,[esi-0x6f]
  4182b0:	shl    BYTE PTR ds:[esi],cl
  4182b3:	sbb    al,BYTE PTR [ebp+0x28c04774]
  4182b9:	shl    DWORD PTR ds:0xcdc453dc,1
  4182bf:	js     0x4182ab
  4182c1:	xchg   BYTE PTR [esi-0x2],ah
  4182c4:	adc    BYTE PTR [edi],bh
  4182c6:	dec    edx
  4182c7:	xlat   BYTE PTR ds:[ebx]
  4182c8:	push   edx
  4182c9:	data16 sar BYTE PTR [ebx],cl
  4182cc:	jmp    0xae1d:0x1c0628a0
  4182d3:	mov    ebx,0xcdb6da65
  4182d8:	ret    0xd0b1
  4182db:	daa    
  4182dc:	ficom  DWORD PTR [edx+0x1d]
  4182df:	mov    dl,0xdb
  4182e1:	xchg   esp,eax
  4182e2:	inc    ebx
  4182e3:	ret    
  4182e4:	jne    0x418333
  4182e6:	sar    BYTE PTR [eax+0x6b],0x90
  4182ea:	loope  0x4182eb
  4182ec:	xlat   BYTE PTR ds:[ebx]
  4182ed:	xor    ah,BYTE PTR [ebx+0x28f94eb3]
  4182f3:	stos   DWORD PTR es:[edi],eax
  4182f4:	sub    ch,ch
  4182f6:	hlt    
  4182f7:	pop    ds
  4182f8:	mov    dl,0xf7
  4182fa:	call   0x691c:0x551d8ade
  418301:	clc    
  418302:	mov    gs,WORD PTR [edi+0x289349f3]
  418308:	xor    esp,ecx
  41830a:	rcr    bl,0x6b
  41830d:	cmp    bh,BYTE PTR [esi+ecx*4+0x7d675e6d]
  418314:	aaa    
  418315:	xchg   ecx,eax
  418316:	mov    eax,0x1affade5
  41831b:	pop    ebp
  41831c:	inc    edi
  41831d:	jmp    0xac8a:0x435c4edb
  418324:	push   0x29
  418326:	push   ecx
  418327:	jne    0x4182b2
  418329:	jmp    0x619c3122
  41832e:	sub    eax,0x7a95df49
  418333:	lock (bad) 
  418335:	xchg   DWORD PTR [ebp+esi*8-0x1f],eax
  418339:	mov    edi,esp
  41833b:	cdq    
  41833c:	sub    edi,edi
  41833e:	xchg   BYTE PTR [ecx],ch
  418340:	cmp    BYTE PTR [ecx+0x24],dh
  418343:	scas   al,BYTE PTR es:[edi]
  418344:	mov    ch,0xbc
  418346:	or     eax,0x13262f11
  41834b:	cmp    ecx,DWORD PTR [eax+0x43]
  41834e:	sub    al,0x9a
  418350:	iret   
  418351:	in     al,dx
  418352:	fstp   QWORD PTR [ebx+esi*2-0x61]
  418356:	pushf  
  418357:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418358:	xor    edx,DWORD PTR ds:[ebp-0x6bd1b226]
  41835f:	fsub   DWORD PTR [ebx-0x657d7baf]
  418365:	inc    esi
  418366:	call   0xbef0e393
  41836b:	jg     0x41836e
  41836d:	add    edi,esp
  41836f:	or     bh,bh
  418371:	mov    bh,BYTE PTR [edx+0x5f]
  418374:	xlat   BYTE PTR ds:[ebx]
  418375:	or     eax,0xb14a418d
  41837a:	sub    al,0xe1
  41837c:	sbb    ecx,DWORD PTR [edi]
  41837e:	push   cs
  41837f:	inc    ebx
  418380:	sbb    ecx,esp
  418382:	cmp    DWORD PTR [edi],eax
  418384:	inc    ebx
  418385:	push   ss
  418386:	or     eax,0x9c20321a
  41838b:	cmp    al,0x46
  41838d:	xbegin 0x5ccf6b9a
  418393:	test   eax,0x48e55eda
  418398:	jmp    0xe2bb:0x2cfcb949
  41839f:	stc    
  4183a0:	mov    cl,0x8b
  4183a2:	std    
  4183a3:	pop    esp
  4183a4:	and    dh,ch
  4183a6:	mov    al,ds:0x534791e5
  4183ab:	cmp    dh,BYTE PTR ds:0xc04a244e
  4183b1:	and    BYTE PTR [eax+ebx*4+0x3dd1a11f],ah
  4183b8:	fucomi st,st(4)
  4183ba:	fidivr WORD PTR [ebx-0x34]
  4183bd:	add    BYTE PTR [eax],al
  4183bf:	add    BYTE PTR [eax],al
  4183c1:	add    BYTE PTR [esi-0x144a9dc3],dl
  4183c7:	call   edi
  4183c9:	aas    
  4183ca:	popa   
  4183cb:	adc    ch,cl
  4183cd:	add    DWORD PTR [edi+0x4621a92],0x1
  4183d4:	add    DWORD PTR [eax],eax
  4183d6:	repz add al,0x0
  4183d9:	add    al,al
  4183db:	jg     0x41836d
  4183dd:	mov    ds:0x17ec3a7c,al
  4183e2:	imul   ecx,DWORD PTR [edi+0x47],0xffffffaa
  4183e6:	pushf  
  4183e7:	mov    bh,0x4e
  4183e9:	inc    edx
  4183ea:	sub    BYTE PTR [edx+ecx*1-0x66],al
  4183ee:	and    BYTE PTR [ecx+0x5c],cl
  4183f1:	sbb    al,dl
  4183f3:	call   0xb02f59b7
  4183f8:	add    DWORD PTR [ebx-0x69a4bb1b],edx
  4183fe:	mov    WORD PTR [esi+esi*1+0x24910396],?
  418405:	ja     0x41845e
  418407:	ficom  DWORD PTR [edi+edi*4+0x7d]
  41840b:	fincstp 
  41840d:	shl    dh,cl
  41840f:	sbb    eax,0x7940eb4e
  418414:	leave  
  418415:	add    al,0xe
  418417:	adc    esi,0x31
  41841a:	cli    
  41841b:	sti    
  41841c:	pop    edi
  41841d:	jo     0x4183f1
  41841f:	int    0xa1
  418421:	jns    0x418422
  418423:	shr    dl,1
  418425:	mov    ah,0x72
  418427:	and    bl,bh
  418429:	hlt    
  41842a:	mov    cl,0x10
  41842c:	(bad)  
  41842d:	int    0xe2
  41842f:	loopne 0x418401
  418431:	sub    eax,0xfea50329
  418436:	sbb    ah,BYTE PTR [ecx+0x1a]
  418439:	or     DWORD PTR [ecx-0x62376604],edx
  41843f:	xor    DWORD PTR [ebp+ebx*1-0x4bc9195],0x4ee9cddb
  41844a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41844b:	out    dx,al
  41844c:	sub    edi,DWORD PTR [eax+0x79a1593b]
  418452:	cli    
  418453:	scas   eax,DWORD PTR es:[edi]
  418454:	stos   BYTE PTR es:[edi],al
  418455:	shl    BYTE PTR [ebp-0x25],cl
  418458:	imul   ebx,DWORD PTR [eax+0x9962528],0xffffffa0
  41845f:	and    BYTE PTR [edx+0x1f7c09cc],0x28
  418466:	pop    edx
  418467:	inc    ecx
  418468:	xacquire xchg BYTE PTR [ebx+0x1b],ch
  41846c:	xchg   esp,eax
  41846d:	push   cs
  41846e:	jno    0x41845a
  418470:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418471:	xchg   edx,eax
  418472:	in     eax,dx
  418473:	pop    edi
  418474:	sub    al,0xe1
  418476:	dec    edx
  418477:	retf   0xf251
  41847a:	(bad)  
  41847b:	in     al,0x9b
  41847d:	sub    ah,BYTE PTR [ebp+0xf]
  418480:	stos   DWORD PTR es:[edi],eax
  418481:	aad    0xab
  418483:	cmp    ch,BYTE PTR [edx+0x31]
  418486:	xor    BYTE PTR es:[esi-0x21],cl
  41848a:	jmp    0x80412ced
  41848f:	inc    DWORD PTR [edx+ecx*4]
  418492:	js     0x41843f
  418494:	ins    DWORD PTR es:[edi],dx
  418495:	enter  0xb91,0x8f
  418499:	push   esi
  41849a:	jecxz  0x4184da
  41849c:	inc    ebx
  41849d:	mov    al,ds:0xe6aeff8d
  4184a2:	scas   eax,DWORD PTR es:[edi]
  4184a3:	add    ebx,DWORD PTR [eax+edx*2]
  4184a6:	xor    eax,0x3ce95514
  4184ab:	jo     0x418517
  4184ad:	(bad)  
  4184ae:	lahf   
  4184af:	nop
  4184b0:	push   ebx
  4184b1:	imul   esp,DWORD PTR [ecx],0xffffffd3
  4184b4:	cmp    eax,0x7edc89ba
  4184b9:	aam    0x3c
  4184bb:	add    eax,0xaccbb3ba
  4184c0:	fidivr DWORD PTR [ecx+0x1574f5ff]
  4184c6:	push   0xffffff87
  4184c8:	popf   
  4184c9:	retf   0x8328
  4184cc:	fcomp  QWORD PTR ds:0x84931015
  4184d2:	nop
  4184d3:	cdq    
  4184d4:	in     al,dx
  4184d5:	in     al,0x61
  4184d7:	xchg   esp,eax
  4184d8:	dec    esi
  4184d9:	dec    esi
  4184da:	sub    al,0x96
  4184dc:	les    esi,FWORD PTR [eax+0x61]
  4184df:	ror    DWORD PTR [ebx-0x2c114a95],1
  4184e5:	pop    esi
  4184e6:	push   ebx
  4184e7:	mov    eax,0x6069bbe5
  4184ec:	sbb    DWORD PTR [eax+edi*4-0x18],ebp
  4184f0:	xchg   DWORD PTR [esi],esp
  4184f2:	inc    edi
  4184f3:	addr16 lock mov ch,0xe
  4184f7:	mov    edx,0x3bc4226e
  4184fc:	cdq    
  4184fd:	mov    edx,0x734268f2
  418502:	dec    esp
  418503:	dec    edx
  418504:	ret    
  418505:	and    ah,BYTE PTR [edi+0x23e013fe]
  41850b:	xchg   ebp,eax
  41850c:	mov    bl,bl
  41850e:	mov    ch,0xb9
  418510:	cmp    esp,edi
  418512:	pusha  
  418513:	(bad)  
  418514:	loope  0x4184be
  418516:	xchg   esi,eax
  418517:	xor    eax,0x867e4b77
  41851c:	add    al,0x58
  41851e:	test   eax,0xb8d6b341
  418523:	nop
  418524:	loope  0x4184cb
  418526:	xor    ch,dl
  418528:	push   es
  418529:	int3   
  41852a:	adc    al,0xfc
  41852c:	or     dl,BYTE PTR [esi+ebp*4-0x76]
  418530:	jno    0x4184e5
  418532:	xor    BYTE PTR [bp+di+0x7806],0x15
  418538:	mov    ebp,DWORD PTR [ebp-0x4f]
  41853b:	rol    ebx,cl
  41853d:	fld    QWORD PTR [edi]
  41853f:	pop    ebp
  418540:	add    DWORD PTR [edi],eax
  418542:	add    bh,BYTE PTR [edx+edx*8-0x71bc5934]
  418549:	(bad)  
  41854a:	rol    esi,cl
  41854c:	sub    DWORD PTR [eax+eax*4-0x4e317695],0x63
  418554:	mov    ?,edi
  418556:	jae    0x4184ee
  418558:	cmp    eax,0x78f83efa
  41855d:	xlat   BYTE PTR ds:[ebx]
  41855e:	cmc    
  41855f:	scas   al,BYTE PTR es:[edi]
  418560:	pop    esp
  418561:	inc    edi
  418562:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418563:	out    0x83,eax
  418565:	cdq    
  418566:	adc    DWORD PTR [ecx+0x0],ecx
  418569:	imul   ecx,DWORD PTR [eax],0x40
  41856c:	inc    esi
  41856d:	(bad)  
  41856e:	mov    ebx,0xd2f7ae0e
  418573:	jb     0x4185e7
  418575:	mov    dh,0x8a
  418577:	mov    bl,bh
  418579:	das    
  41857a:	fst    DWORD PTR [eax]
  41857c:	xsaves [esi+0x42]
  418580:	sub    al,0xb4
  418582:	rcl    BYTE PTR [esi+0x456de592],1
  418588:	pop    edx
  418589:	jl     0x41853b
  41858b:	iret   
  41858c:	mov    ch,0x73
  41858e:	lahf   
  41858f:	mov    esi,esp
  418591:	cmp    ecx,DWORD PTR [edx]
  418593:	loope  0x41852c
  418595:	test   esp,ecx
  418597:	inc    edi
  418598:	cmp    DWORD PTR [edx+ebp*1-0x5],ebp
  41859c:	repnz mov esi,0xa24c702b
  4185a2:	ret    0xdf3e
  4185a5:	inc    esp
  4185a6:	inc    edi
  4185a7:	xchg   esi,eax
  4185a8:	jle    0x418586
  4185aa:	cmp    BYTE PTR [edx+0x20ef38d9],al
  4185b0:	pop    es
  4185b1:	xlat   BYTE PTR ds:[ebx]
  4185b2:	std    
  4185b3:	and    eax,0xf719f121
  4185b8:	pop    ebx
  4185b9:	aas    
  4185ba:	jp     0x4185a4
  4185bc:	mov    ch,0x7c
  4185be:	jge    0x418616
  4185c0:	mov    esi,0xa3fb1b57
  4185c5:	inc    ebx
  4185c6:	mov    esp,0xbccaa756
  4185cb:	popa   
  4185cc:	test   BYTE PTR [ebx],0x2a
  4185cf:	push   es
  4185d0:	cli    
  4185d1:	adc    eax,0xe1cc8d1e
  4185d6:	pushf  
  4185d7:	rcr    ebx,cl
  4185d9:	xchg   ecx,ebp
  4185db:	jecxz  0x4185eb
  4185dd:	ins    BYTE PTR es:[edi],dx
  4185de:	adc    esi,0x3ef1a871
  4185e4:	push   0xc6283aa6
  4185e9:	xor    BYTE PTR [edi+0x20],dh
  4185ec:	cmp    DWORD PTR [ecx-0x26],edi
  4185ef:	data16 add al,0x5e
  4185f2:	dec    edx
  4185f3:	pop    edi
  4185f4:	mov    cl,0x86
  4185f6:	add    al,0xdd
  4185f8:	push   0xffffff94
  4185fa:	add    al,0xf1
  4185fc:	jg     0x418603
  4185fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185ff:	test   BYTE PTR [ebp+esi*4-0x12],bl
  418603:	xchg   BYTE PTR [edi-0x6a4824ee],al
  418609:	clc    
  41860a:	sub    ecx,edx
  41860c:	jb     0x41864c
  41860e:	shl    eax,0xba
  418611:	cs push ebp
  418613:	sbb    edx,edx
  418615:	dec    eax
  418616:	xor    ch,BYTE PTR [ebx-0x64]
  418619:	rcr    BYTE PTR [edx-0x4e],cl
  41861c:	mov    bh,0xb9
  41861e:	jae    0x41863d
  418620:	scas   eax,DWORD PTR es:[edi]
  418621:	adc    dh,BYTE PTR [edx]
  418623:	push   ss
  418624:	fwait
  418625:	mov    bh,0xc
  418627:	int3   
  418628:	dec    edx
  418629:	xor    bl,al
  41862b:	xlat   BYTE PTR ds:[ebx]
  41862c:	pop    edx
  41862d:	push   cs
  41862e:	and    al,0xb3
  418630:	retf   0x8c96
  418633:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418634:	sbb    DWORD PTR cs:[ecx+0x65d61dfe],ecx
  41863b:	mov    ah,0x66
  41863d:	out    0x57,eax
  41863f:	sub    al,0xfe
  418641:	mov    al,gs:0x1f65f7c8
  418647:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418648:	std    
  418649:	pop    edx
  41864a:	(bad)  
  41864c:	adc    DWORD PTR [eax],ecx
  41864e:	xchg   DWORD PTR [esi-0x34],esi
  418651:	xchg   ebx,eax
  418652:	cmc    
  418653:	cmp    ah,cl
  418655:	push   ebx
  418656:	pop    ecx
  418657:	fidivr WORD PTR [ecx-0x3575b23e]
  41865d:	or     BYTE PTR [ebx],dl
  41865f:	cld    
  418660:	call   0x7a26:0xe47dd3c2
  418667:	retf   
  418668:	and    ebx,DWORD PTR [ecx]
  41866a:	xchg   edi,eax
  41866b:	adc    eax,0x2e473e42
  418670:	jnp    0x418662
  418672:	or     edi,eax
  418674:	xor    al,0xaa
  418676:	or     DWORD PTR [esi+0x18],ecx
  418679:	push   edx
  41867a:	pop    ds
  41867b:	jb     0x4186d9
  41867d:	pop    esi
  41867e:	in     al,0xe
  418680:	pop    ebx
  418681:	(bad)  
  418682:	fild   DWORD PTR [esi-0x46]
  418685:	loopne 0x4186c0
  418687:	add    eax,0x6586c451
  41868c:	ret    0xe5b9
  41868f:	push   ss
  418690:	mov    esi,0x512943e8
  418695:	adc    eax,0xa7111cfb
  41869a:	icebp  
  41869b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41869c:	sub    al,BYTE PTR [edx-0x6ee046b6]
  4186a2:	test   ebx,ebx
  4186a4:	add    BYTE PTR [edi+0x8],bh
  4186a7:	shl    DWORD PTR [ebx+0x49],0xf9
  4186ab:	or     eax,0x5f3ff1c6
  4186b0:	test   eax,0x9f65d12e
  4186b5:	xchg   edx,eax
  4186b6:	push   ss
  4186b7:	fcom   QWORD PTR [ecx-0x7f3f728a]
  4186bd:	lea    esp,[edx]
  4186bf:	(bad)  
  4186c0:	(bad)  
  4186c1:	mov    dl,0x63
  4186c3:	enter  0xfd0b,0x30
  4186c7:	loop   0x418706
  4186c9:	mov    al,ds:0xfa97ae38
  4186ce:	and    al,BYTE PTR [eax+0x51]
  4186d1:	popa   
  4186d2:	out    dx,eax
  4186d3:	out    0xa2,al
  4186d5:	(bad)  
  4186d6:	in     eax,dx
  4186d7:	fisttp DWORD PTR [edx-0x7]
  4186da:	in     eax,dx
  4186db:	popa   
  4186dc:	cwde   
  4186dd:	dec    edx
  4186de:	test   eax,0x63f97989
  4186e3:	aam    0x4
  4186e5:	adc    bh,BYTE PTR [eax-0x15]
  4186e8:	add    DWORD PTR ds:0xa4307c80,ecx
  4186ee:	sbb    BYTE PTR [edx],cl
  4186f0:	je     0x4186f5
  4186f2:	int3   
  4186f3:	mov    ?,WORD PTR [esi+0x4fd81775]
  4186f9:	mov    eax,ds:0x88223a59
  4186fe:	lods   al,BYTE PTR ds:[esi]
  4186ff:	or     DWORD PTR [eax-0x56],esp
  418702:	inc    ebx
  418703:	repnz (bad) 
  418705:	aas    
  418706:	xchg   edx,eax
  418707:	(bad)  
  418708:	jb     0x418747
  41870a:	enter  0x2da7,0x4a
  41870e:	or     ch,BYTE PTR [esi+0x5d]
  418711:	xor    edi,esp
  418713:	cmc    
  418714:	jge    0x418739
  418716:	stc    
  418717:	xchg   ebp,eax
  418718:	and    al,0x3e
  41871a:	pop    esp
  41871b:	mulps  xmm6,XMMWORD PTR [edi+0x42]
  41871f:	icebp  
  418720:	and    DWORD PTR [ecx+0x26],ebp
  418723:	push   ecx
  418724:	arpl   di,sp
  418726:	pop    eax
  418727:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418728:	adc    dl,BYTE PTR [ebp-0x3]
  41872b:	(bad)  
  41872c:	call   0x2d08c696
  418731:	xchg   edx,eax
  418732:	popa   
  418733:	je     0x4187a2
  418735:	or     bh,0xeb
  418738:	cli    
  418739:	movaps xmm4,xmm0
  41873c:	dec    ebp
  41873d:	mov    esi,0x116380ef
  418742:	jb     0x418700
  418744:	ret    0x515f
  418747:	mov    al,ds:0x130c5fc9
  41874c:	xchg   ecx,eax
  41874d:	add    eax,0xf1c152db
  418752:	jmp    0x250ec63b
  418757:	and    ch,dl
  418759:	cmp    ah,al
  41875b:	in     al,dx
  41875c:	out    0x7a,al
  41875e:	jae    0x418760
  418760:	mov    ch,0x1d
  418762:	push   0x7b770878
  418767:	push   ecx
  418768:	mov    edi,0x5e5bbafe
  41876d:	and    eax,0x4119dd79
  418772:	repz jmp 0xb867:0x29037a6c
  41877a:	scas   al,BYTE PTR es:[edi]
  41877b:	push   ebp
  41877c:	push   ds
  41877d:	icebp  
  41877e:	jecxz  0x418746
  418780:	pop    esp
  418781:	(bad)
  418785:	loop   0x4187db
  418787:	add    al,BYTE PTR [esi]
  418789:	aad    0x38
  41878b:	not    BYTE PTR [ebp-0x15178300]
  418791:	xor    cl,BYTE PTR [edi-0x28]
  418794:	dec    edx
  418795:	add    al,0xc2
  418797:	ret    
  418798:	popa   
  418799:	sbb    dh,0x27
  41879c:	push   esp
  41879d:	and    bh,al
  41879f:	push   esp
  4187a0:	push   0x23a2b389
  4187a5:	mov    dh,0x5
  4187a7:	inc    esi
  4187a8:	scas   eax,DWORD PTR es:[edi]
  4187a9:	xchg   ecx,eax
  4187aa:	sbb    DWORD PTR [ecx],0xffffffa4
  4187ad:	xchg   ebx,eax
  4187ae:	push   es
  4187af:	sti    
  4187b0:	add    eax,0x5308c659
  4187b5:	test   BYTE PTR [edi+0x7c9d12d3],dl
  4187bb:	mov    bl,0xa5
  4187bd:	dec    ecx
  4187be:	push   DWORD PTR [ecx]
  4187c0:	lock sub eax,0x3dbd321d
  4187c6:	cmp    esp,DWORD PTR [edx]
  4187c8:	push   ebx
  4187c9:	into   
  4187ca:	lock ss adc eax,0x6f58c44d
  4187d1:	jbe    0x418775
  4187d3:	bound  edx,QWORD PTR [edx+0x1cd65b56]
  4187d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187da:	mov    eax,0x23bbcf3
  4187df:	stos   BYTE PTR es:[edi],al
  4187e0:	je     0x418812
  4187e2:	push   ds
  4187e3:	ins    BYTE PTR es:[edi],dx
  4187e4:	mov    ah,0x93
  4187e6:	(bad)  
  4187e7:	aas    
  4187e8:	jecxz  0x41879c
  4187ea:	push   es
  4187eb:	mov    bl,0x4d
  4187ed:	mov    ch,0x9d
  4187ef:	fs loopne 0x418797
  4187f2:	call   FWORD PTR [esi]
  4187f4:	push   0x2508d840
  4187f9:	inc    eax
  4187fa:	retf   0x1e96
  4187fd:	dec    esi
  4187fe:	fadd   QWORD PTR [edi-0x1a]
  418801:	dec    esp
  418802:	cli    
  418803:	add    DWORD PTR [edi+0x40c1ffaf],ebx
  418809:	mov    ah,0x8f
  41880b:	ss (bad) 
  41880d:	fsub   DWORD PTR ds:0x685288eb
  418813:	mov    bh,0x7b
  418815:	(bad)  
  418816:	retf   0x6d70
  418819:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41881a:	test   al,0x99
  41881c:	sbb    al,0x2d
  41881e:	adc    al,0xf7
  418820:	mov    al,0x8b
  418822:	das    
  418823:	inc    DWORD PTR [ebx]
  418825:	mov    ah,ch
  418827:	out    dx,al
  418828:	mov    al,0x78
  41882a:	mov    bh,0x46
  41882c:	jmp    0x41882a
  41882e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41882f:	add    DWORD PTR [eax+0x1eca74f3],esp
  418835:	ss jg  0x418882
  418838:	out    dx,eax
  418839:	jne    0x4187d6
  41883b:	(bad)  
  41883d:	int3   
  41883e:	popa   
  41883f:	stc    
  418840:	add    ah,cl
  418842:	cmp    BYTE PTR [ecx+0x1f70b164],al
  418848:	pop    ebx
  418849:	lods   al,BYTE PTR ds:[esi]
  41884a:	fsubr  DWORD PTR [edi-0x7c]
  41884d:	xchg   ecx,eax
  41884e:	xor    BYTE PTR [edx+esi*8],bl
  418851:	outs   dx,DWORD PTR ds:[esi]
  418852:	xchg   DWORD PTR [edi],edx
  418854:	dec    edx
  418855:	fnstsw WORD PTR [edx]
  418857:	mov    dl,0x52
  418859:	ds in  al,dx
  41885b:	arpl   bp,dx
  41885d:	adc    cl,BYTE PTR [esi-0x1e]
  418860:	aas    
  418861:	pusha  
  418862:	mov    DWORD PTR [edx+0x5c],ecx
  418865:	adc    dl,0xab
  418868:	in     eax,0x84
  41886a:	mov    ecx,ecx
  41886c:	ret    0xa150
  41886f:	xchg   esp,eax
  418870:	data16 jb 0x41888e
  418873:	ja     0x4188bc
  418875:	inc    edx
  418876:	inc    ecx
  418877:	dec    edi
  418878:	gs ja  0x4188d9
  41887b:	pop    esp
  41887c:	enter  0x108f,0x2b
  418880:	fistp  WORD PTR [eax+0x4b]
  418883:	inc    esi
  418884:	xchg   dl,cl
  418886:	sub    DWORD PTR [ebp+0x24d29a7d],ebp
  41888c:	aad    0xa4
  41888e:	clc    
  41888f:	div    BYTE PTR [ebp+0xc]
  418892:	xor    cl,BYTE PTR [ecx-0x6f36d160]
  418898:	push   ss
  418899:	neg    DWORD PTR [ebx-0x3b]
  41889c:	sbb    dh,BYTE PTR [esp+eiz*4+0x55]
  4188a0:	fcom   DWORD PTR ds:0xa1419046
  4188a6:	and    ebp,DWORD PTR [ebx-0x363b9676]
  4188ac:	push   ebx
  4188ad:	inc    ebx
  4188ae:	mov    ah,0x84
  4188b0:	(bad)  
  4188b2:	enter  0xa823,0x5f
  4188b6:	xor    eax,0x2c240d5b
  4188bb:	xor    DWORD PTR [ebp+0x60],ebp
  4188be:	call   0x7fc6:0xbb772fb4
  4188c5:	sub    bh,BYTE PTR [edi]
  4188c7:	cmc    
  4188c8:	cmp    BYTE PTR [edx-0x16],dl
  4188cb:	xor    eax,0x98
  4188d0:	add    BYTE PTR [eax],al
  4188d2:	sahf   
  4188d3:	ins    DWORD PTR es:[edi],dx
  4188d4:	not    esi
  4188d6:	neg    esi
  4188d8:	mov    edi,0x9e0bd66d
  4188dd:	int    0x2e
  4188df:	sti    
  4188e0:	fsub   st(1),st
  4188e2:	test   DWORD PTR ds:0x4f30001,0x3f1b0000
  4188ec:	gs push ecx
  4188ee:	push   ss
  4188ef:	sbb    ebp,DWORD PTR [ebp+0x38709e22]
  4188f5:	adc    DWORD PTR [ebp+eax*1-0x2d621b94],ecx
  4188fc:	jl     0x4188f3
  4188fe:	adc    esi,DWORD PTR [ecx]
  418900:	std    
  418901:	call   0x550408ce
  418906:	inc    ecx
  418907:	adc    DWORD PTR [ebx],edx
  418909:	mov    ah,0xa2
  41890b:	inc    ebp
  41890c:	inc    edi
  41890d:	out    0xc0,eax
  41890f:	mov    bl,0xe2
  418911:	add    BYTE PTR [edx+edi*8],dl
  418914:	inc    ebx
  418915:	inc    edx
  418916:	aas    
  418917:	push   edi
  418918:	shl    BYTE PTR ds:0x65cd544a,0x4d
  41891f:	push   es
  418920:	push   ecx
  418921:	fld    QWORD PTR cs:[eax+0x605cb529]
  418928:	pop    edi
  418929:	mov    esp,0xd8b3b292
  41892e:	adc    DWORD PTR [edi+eax*8],ebx
  418931:	imul   edi,DWORD PTR [eax],0x5c
  418934:	pushf  
  418935:	push   ecx
  418936:	jns    0x41891d
  418938:	pop    ecx
  418939:	lods   eax,DWORD PTR ds:[esi]
  41893a:	les    esi,FWORD PTR [ebp+0x76]
  41893d:	cmp    eax,0xb44f231f
  418942:	push   es
  418943:	aad    0x7a
  418945:	loop   0x41899e
  418947:	jecxz  0x4188e0
  418949:	repz mov edx,0xd58766f2
  41894f:	xchg   ebp,eax
  418950:	push   ss
  418951:	ds push 0xb9cc6477
  418957:	arpl   WORD PTR [ecx],cx
  418959:	sub    DWORD PTR [edi-0x5446b74a],eax
  41895f:	mov    bh,BYTE PTR [ebx]
  418961:	sbb    BYTE PTR [edx+0x18834721],dl
  418967:	jmp    0x4189b7
  418969:	sub    al,0x9e
  41896b:	jbe    0x4189c5
  41896d:	jns    0x41890e
  41896f:	aad    0x94
  418971:	pop    eax
  418972:	jno    0x4189a1
  418974:	hlt    
  418975:	cdq    
  418976:	mov    esp,0x79d58f37
  41897b:	addr16 dec esp
  41897d:	and    eax,0x316083de
  418982:	(bad)  
  418983:	in     eax,dx
  418984:	(bad)  
  418985:	out    dx,al
  418986:	stos   BYTE PTR es:[edi],al
  418987:	add    ah,ch
  418989:	adc    ch,ch
  41898b:	pusha  
  41898c:	rol    al,cl
  41898e:	dec    ecx
  41898f:	jge    0x418916
  418991:	repz hlt 
  418993:	popf   
  418994:	pop    esi
  418995:	sbb    DWORD PTR [esi],ecx
  418997:	xor    DWORD PTR [ecx-0x4e],esi
  41899a:	sbb    esi,DWORD PTR [ecx]
  41899c:	push   es
  41899d:	stos   DWORD PTR es:[edi],eax
  41899e:	cmp    BYTE PTR [edx],al
  4189a0:	in     eax,dx
  4189a1:	jns    0x418990
  4189a3:	fwait
  4189a4:	cwde   
  4189a5:	in     eax,dx
  4189a6:	imul   esi,DWORD PTR [edi*4-0xe6b3001],0x82d01026
  4189b1:	ret    
  4189b2:	jl     0x418a00
  4189b4:	outs   dx,BYTE PTR ds:[esi]
  4189b5:	jmp    0x4189f0
  4189b7:	sbb    al,0x10
  4189b9:	push   eax
  4189ba:	jge    0x418963
  4189bc:	(bad)
  4189c0:	pcmpeqw mm4,QWORD PTR [esi+0x55dfa08b]
  4189c7:	dec    edx
  4189c8:	mov    ebx,0xa73916c6
  4189cd:	in     al,0x73
  4189cf:	push   es
  4189d0:	mov    cl,0xfd
  4189d2:	stos   BYTE PTR es:[edi],al
  4189d3:	stos   BYTE PTR es:[edi],al
  4189d4:	push   ss
  4189d5:	imul   esi,DWORD PTR [ebp+0x61],0xffffffbf
  4189d9:	(bad)  
  4189da:	sar    BYTE PTR [edx+0xe5a2498],0x73
  4189e1:	xchg   edi,eax
  4189e2:	iret   
  4189e3:	out    dx,al
  4189e4:	or     eax,0x466dc879
  4189e9:	(bad)  
  4189ea:	jp     0x418a0e
  4189ec:	daa    
  4189ed:	mov    dh,0xb3
  4189ef:	or     DWORD PTR es:[edx-0x3b6991aa],ebx
  4189f6:	add    cl,BYTE PTR [ecx-0x19cd187e]
  4189fc:	es jno 0x418a10
  4189ff:	and    al,0x57
  418a01:	pop    ss
  418a02:	outs   dx,DWORD PTR ds:[esi]
  418a03:	or     al,0xce
  418a05:	xchg   ecx,eax
  418a06:	adc    BYTE PTR [edi],0x34
  418a09:	pop    ecx
  418a0a:	stos   DWORD PTR es:[edi],eax
  418a0b:	gs in  al,dx
  418a0d:	xor    eax,0xed3a577e
  418a12:	ins    DWORD PTR es:[edi],dx
  418a13:	rcl    BYTE PTR [ebp+0x6c085c2d],cl
  418a19:	cmc    
  418a1a:	loop   0x4189d3
  418a1c:	popa   
  418a1d:	xor    edi,DWORD PTR [eax+0x417325a0]
  418a23:	fldenv [esi]
  418a25:	sub    eax,ebp
  418a27:	(bad)  
  418a28:	mov    esi,0x524596d6
  418a2d:	pushfw 
  418a2f:	push   ebp
  418a30:	cmp    DWORD PTR ds:0x85b0d663,edi
  418a36:	xor    DWORD PTR [edi-0x17],esi
  418a39:	pop    ecx
  418a3a:	fisub  WORD PTR [ebp-0x25]
  418a3d:	cli    
  418a3e:	pop    esp
  418a3f:	xchg   ebx,eax
  418a40:	or     al,0x9a
  418a42:	dec    ebp
  418a43:	mov    ds:0x25c79f12,eax
  418a48:	push   eax
  418a49:	or     BYTE PTR [edx-0x3b],al
  418a4c:	outs   dx,DWORD PTR ds:[esi]
  418a4d:	arpl   WORD PTR [ebx+0x2a86b0e9],di
  418a53:	in     al,dx
  418a54:	push   ecx
  418a55:	call   0xea53cea2
  418a5a:	popf   
  418a5b:	pop    edi
  418a5c:	mov    ah,BYTE PTR [ebx+0x2f]
  418a5f:	mov    esi,0x9f47c3a2
  418a64:	adc    BYTE PTR [eax],dh
  418a66:	cdq    
  418a67:	push   0xffffff9f
  418a69:	cmc    
  418a6a:	stc    
  418a6b:	sbb    BYTE PTR ds:0x4643,0x18
  418a71:	(bad)  
  418a72:	and    BYTE PTR [ebp+0x6a],ah
  418a75:	mov    ebx,0xe1dddcc6
  418a7a:	sti    
  418a7b:	push   ss
  418a7c:	push   esi
  418a7d:	ss daa 
  418a7f:	xor    al,0xd0
  418a81:	mov    dh,0x91
  418a83:	dec    ebp
  418a84:	or     bl,ah
  418a86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a87:	xchg   ecx,eax
  418a88:	jo     0x418a92
  418a8a:	fiadd  WORD PTR [eax+0x24]
  418a8d:	push   ds
  418a8e:	dec    eax
  418a8f:	mov    ebp,0x809f51b1
  418a94:	(bad)  
  418a95:	jbe    0x418a36
  418a97:	shl    DWORD PTR [eax-0x521601b3],0xe1
  418a9e:	out    dx,al
  418a9f:	fwait
  418aa0:	jbe    0x418a3b
  418aa2:	and    ebp,DWORD PTR [edx-0x3db152f5]
  418aa8:	leave  
  418aa9:	nop
  418aaa:	push   ss
  418aab:	mov    esi,0x9b78347c
  418ab0:	jp     0x418a7f
  418ab2:	scas   al,BYTE PTR es:[edi]
  418ab3:	cmp    BYTE PTR [ecx+esi*1],0xb8
  418ab7:	xlat   BYTE PTR ds:[ebx]
  418ab8:	mov    cs,WORD PTR [esi+ecx*2-0x35]
  418abc:	xlat   BYTE PTR ds:[ebx]
  418abd:	cmp    ecx,esp
  418abf:	(bad)  
  418ac1:	push   ecx
  418ac2:	jl     0x418a6f
  418ac4:	mov    edi,0x8435ca29
  418ac9:	ret    
  418aca:	cmc    
  418acb:	jns    0x418ad1
  418acd:	add    DWORD PTR [esi],ebx
  418acf:	lds    ecx,FWORD PTR [edx-0x2f]
  418ad2:	cwde   
  418ad3:	cmp    esp,DWORD PTR [esi]
  418ad5:	aam    0x93
  418ad7:	rcr    BYTE PTR [ebp-0x8],1
  418ada:	cwde   
  418adb:	mov    fs,esi
  418add:	or     dl,BYTE PTR [eax]
  418adf:	out    0x7e,eax
  418ae1:	mov    ecx,ds
  418ae3:	push   esi
  418ae4:	push   cs
  418ae5:	test   eax,0xca716d8b
  418aea:	(bad)  
  418aeb:	sub    al,0xf1
  418aed:	ss ss (bad) 
  418af0:	fsub   QWORD PTR [ebp+edi*8+0x740a3ab8]
  418af7:	pop    ss
  418af8:	cmp    eax,0x99a1b831
  418afd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418afe:	repz dec ebp
  418b00:	sbb    DWORD PTR [ebx+0x35],edx
  418b03:	mov    edx,0x1726bc55
  418b08:	outs   dx,DWORD PTR ds:[esi]
  418b09:	in     eax,dx
  418b0a:	lahf   
  418b0b:	repnz mov ds:0xdb977a02,eax
  418b11:	test   BYTE PTR [esi+esi*2],bl
  418b14:	aam    0xa
  418b16:	mov    ebp,0x732d5f52
  418b1b:	ds cmp eax,0xe43b615
  418b21:	pop    ss
  418b22:	cmp    ebx,edi
  418b24:	or     bh,ch
  418b26:	rol    eax,0xa3
  418b29:	inc    ch
  418b2b:	fild   WORD PTR [edi]
  418b2d:	push   ebx
  418b2e:	or     ah,BYTE PTR cs:[ecx]
  418b31:	jp     0x418ad4
  418b33:	sbb    ch,dl
  418b35:	add    ecx,DWORD PTR [ebx+edi*2-0x21]
  418b39:	js     0x418b90
  418b3b:	add    DWORD PTR [esi-0x2159fffe],esp
  418b41:	push   es
  418b42:	je     0x418bc3
  418b44:	mov    edi,0xc1909996
  418b49:	inc    edx
  418b4a:	inc    edi
  418b4b:	fdiv   QWORD PTR [ebp+0x67]
  418b4e:	and    BYTE PTR [esi],0xce
  418b51:	xor    al,0xcc
  418b53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b54:	pop    edi
  418b55:	cmp    cl,BYTE PTR [ecx+0x2d]
  418b58:	or     bh,BYTE PTR [edi+0x42b86f06]
  418b5e:	push   0x1f
  418b60:	mov    ebx,es
  418b62:	cmp    eax,0x3b9eb0fc
  418b67:	nop
  418b68:	dec    esp
  418b69:	call   0x9280:0xc246ccbf
  418b70:	dec    ecx
  418b71:	sbb    eax,0xc96fa622
  418b76:	call   0xbab10ac6
  418b7b:	ins    DWORD PTR es:[edi],dx
  418b7c:	push   0x91db5aea
  418b81:	and    ecx,DWORD PTR [edx]
  418b83:	ins    DWORD PTR es:[edi],dx
  418b84:	mov    bh,0xac
  418b86:	(bad)  
  418b87:	pop    ebp
  418b88:	and    DWORD PTR [edx+ebx*4],0xd64163a2
  418b8f:	push   es
  418b90:	icebp  
  418b91:	lods   al,BYTE PTR ds:[esi]
  418b92:	(bad)  
  418b94:	xor    dh,ch
  418b96:	into   
  418b97:	sub    DWORD PTR [ebx-0x2b],0xffffff93
  418b9b:	and    BYTE PTR ds:0x91183ae3,bh
  418ba1:	pop    ecx
  418ba2:	xchg   esi,eax
  418ba3:	lock hlt 
  418ba5:	mov    dl,0xeb
  418ba7:	mov    DWORD PTR [esi+eax*1-0x79],eax
  418bab:	loop   0x418b3f
  418bad:	inc    esp
  418bae:	xor    ah,cl
  418bb0:	idiv   DWORD PTR [ecx+0x6e]
  418bb3:	sbb    edi,edi
  418bb5:	push   edx
  418bb6:	lea    edi,[esi+0x18e73f6d]
  418bbc:	xor    BYTE PTR [esi+0x6f638c5f],ah
  418bc2:	aam    0x9
  418bc4:	lock sub BYTE PTR [ebx+0x26],cl
  418bc8:	fs mov ebx,0x7bb3411d
  418bce:	or     cl,BYTE PTR [ebx-0x1428f1fe]
  418bd4:	and    DWORD PTR [ebx+0x35],esp
  418bd7:	adc    DWORD PTR [edx-0x20],eax
  418bda:	fsubr  DWORD PTR [eax]
  418bdc:	pushf  
  418bdd:	dec    ebx
  418bde:	adc    BYTE PTR [eax],dh
  418be0:	pop    ss
  418be1:	cmp    esp,ebp
  418be3:	mov    eax,0xed57e9b6
  418be8:	test   DWORD PTR [eax-0x2c25c7fd],esp
  418bee:	pop    ebx
  418bef:	fadd   QWORD PTR [ebp-0x57bb0266]
  418bf5:	and    dl,BYTE PTR [esi+0x175b8ab7]
  418bfb:	cmp    bl,dl
  418bfd:	jge    0x418bbb
  418bff:	shl    DWORD PTR [edx],0x5e
  418c02:	sub    DWORD PTR [ecx+0x70ab15f5],esp
  418c08:	fwait
  418c09:	aad    0x17
  418c0b:	nop
  418c0c:	dec    esi
  418c0d:	adc    BYTE PTR [ecx-0x2185346c],0x2c
  418c14:	mov    edi,0x8a59c187
  418c19:	mov    ch,0x75
  418c1b:	out    0xbc,al
  418c1d:	(bad)
  418c20:	jns    0x418c58
  418c22:	ss jge 0x418bf1
  418c25:	and    eax,0x361e1b05
  418c2a:	jmp    0x418c39
  418c2c:	inc    edx
  418c2d:	xor    edx,DWORD PTR [edx+0x18c33f17]
  418c33:	popa   
  418c34:	vpshaq xmm14,xmm6,[ebx+0x38]
  418c3a:	icebp  
  418c3b:	xchg   edi,eax
  418c3c:	and    ebx,DWORD PTR [ebp+0x49]
  418c3f:	adc    BYTE PTR ds:0xfc4418eb,bh
  418c45:	outs   dx,DWORD PTR ds:[esi]
  418c46:	add    BYTE PTR [ecx+0x49],ah
  418c49:	(bad)  
  418c4a:	mov    db1,edi
  418c4d:	cmc    
  418c4e:	jo     0x418bff
  418c50:	pop    es
  418c51:	jg     0x418c91
  418c53:	cmp    al,0x6f
  418c55:	mov    ch,0x69
  418c57:	mov    cx,ax
  418c5a:	xchg   esi,eax
  418c5b:	mov    dl,0xd1
  418c5d:	ret    0x7d88
  418c60:	mov    bh,0x30
  418c62:	gs cld 
  418c64:	ret    0xa37a
  418c67:	jle    0x418cc7
  418c69:	mov    ds:0x1047336b,al
  418c6e:	sbb    cl,BYTE PTR [eax+0xf]
  418c71:	icebp  
  418c72:	leave  
  418c73:	sub    eax,0xb5ccebd3
  418c78:	mov    WORD PTR [eax+esi*1],gs
  418c7b:	sub    eax,0x15fbf313
  418c80:	mov    DWORD PTR [edi+0x35bbc429],ecx
  418c86:	mov    cl,0x56
  418c88:	cdq    
  418c89:	shl    BYTE PTR ds:0x1debb326,cl
  418c8f:	rol    DWORD PTR [ecx],0x62
  418c92:	popf   
  418c93:	iret   
  418c94:	dec    esi
  418c95:	mov    al,0x87
  418c97:	fs push edi
  418c99:	mov    DWORD PTR [ebp+0x70],ebx
  418c9c:	push   esi
  418c9d:	clc    
  418c9e:	mov    ecx,0x46e6a994
  418ca3:	retf   0x6ecb
  418ca6:	aad    0x5
  418ca8:	sbb    cl,BYTE PTR [ebx]
  418caa:	xor    esp,DWORD PTR [esi-0x4b4b0ab3]
  418cb0:	in     eax,0x45
  418cb2:	outs   dx,DWORD PTR ds:[esi]
  418cb3:	mov    ?,WORD PTR [ebx+0x50]
  418cb6:	push   eax
  418cb7:	ror    BYTE PTR [ecx+esi*4+0x1e],0x95
  418cbc:	inc    ecx
  418cbd:	push   ebx
  418cbe:	fist   WORD PTR [edi+0x6]
  418cc1:	rcl    BYTE PTR [ecx],1
  418cc3:	or     al,0xd5
  418cc5:	mov    ah,0xe6
  418cc7:	sbb    BYTE PTR [edx+edi*4],bh
  418cca:	rcr    BYTE PTR [ebp+0x5f],0x83
  418cce:	mov    cl,0x64
  418cd0:	sbb    DWORD PTR [eax-0x5e],edx
  418cd3:	adc    eax,0xc626603a
  418cd8:	out    0x80,eax
  418cda:	sti    
  418cdb:	or     BYTE PTR [esp+edi*4-0x42f44195],bl
  418ce2:	hlt    
  418ce3:	pop    esi
  418ce4:	or     BYTE PTR [esi+0x59],0x22
  418ce8:	add    DWORD PTR [esi],edi
  418cea:	leave  
  418ceb:	jg     0x418d32
  418ced:	mov    eax,0x86dea1f5
  418cf2:	je     0x418d42
  418cf4:	jo     0x418d49
  418cf6:	push   cs
  418cf7:	std    
  418cf8:	cmp    al,0x20
  418cfa:	ficom  WORD PTR [esi-0x7e]
  418cfd:	adc    edx,DWORD PTR ds:0x5be7aa31
  418d03:	pop    ds
  418d04:	ror    DWORD PTR [eax],cl
  418d06:	mov    WORD PTR [ecx-0x76949ec7],gs
  418d0c:	nop
  418d0d:	and    BYTE PTR [eax+0x4d],bl
  418d10:	adc    DWORD PTR gs:[ebp-0x17],eax
  418d14:	fs pop esp
  418d16:	scas   eax,DWORD PTR es:[edi]
  418d17:	popf   
  418d18:	lods   al,BYTE PTR ds:[esi]
  418d19:	inc    edx
  418d1a:	ja     0x418ccb
  418d1c:	jl     0x418d26
  418d1e:	mov    DWORD PTR [eax+0x22e6f00d],ebp
  418d24:	pop    ss
  418d25:	xchg   ebp,eax
  418d26:	fbstp  TBYTE PTR [edx]
  418d28:	xor    al,0xa9
  418d2a:	mov    BYTE PTR [eax],dh
  418d2c:	or     ch,BYTE PTR [edx-0x5d]
  418d2f:	sbb    al,0x53
  418d31:	lgs    ebp,FWORD PTR [ebx-0x60]
  418d35:	xchg   esi,eax
  418d36:	mov    ah,0x19
  418d38:	out    0x2b,al
  418d3a:	push   ebp
  418d3b:	cmp    bh,BYTE PTR [eax-0x4850da25]
  418d41:	add    ch,ah
  418d43:	cmp    eax,0x792988f6
  418d48:	iret   
  418d49:	dec    edi
  418d4a:	lea    edx,[ebp-0x4d]
  418d4d:	hlt    
  418d4e:	sub    eax,0x9b0458e2
  418d53:	lea    eax,[ecx]
  418d55:	dec    ebx
  418d56:	mov    esp,0x29f0da81
  418d5b:	xchg   ebp,eax
  418d5c:	adc    ecx,DWORD PTR [ebp-0xe]
  418d5f:	sub    BYTE PTR [esi+ebx*2],ah
  418d62:	xor    al,0x6c
  418d64:	clc    
  418d65:	xor    dh,BYTE PTR [eax-0x4d]
  418d68:	in     al,dx
  418d69:	or     al,0x8a
  418d6b:	mov    dl,0xd8
  418d6d:	xor    edx,edx
  418d6f:	sbb    DWORD PTR [ecx+ebp*8-0x40855ee0],esi
  418d76:	adc    eax,0xa8ed81a7
  418d7b:	sbb    edi,eax
  418d7d:	jg     0x418d2f
  418d7f:	adc    ebx,DWORD PTR ds:0x6f48c45b
  418d85:	mov    ss,eax
  418d87:	inc    esi
  418d88:	outs   dx,BYTE PTR ds:[esi]
  418d89:	(bad)
  418d8c:	push   0xc6881f6f
  418d91:	pop    ss
  418d92:	xchg   ebp,eax
  418d93:	add    ebp,DWORD PTR [ebx]
  418d95:	dec    eax
  418d96:	adc    BYTE PTR [ecx+ecx*8+0x5f358e23],cl
  418d9d:	mov    bl,0xed
  418d9f:	jmp    0x5c842efb
  418da4:	ds mov eax,0x9747d115
  418daa:	test   DWORD PTR [edi+0x381b8aaf],esi
  418db0:	xor    edi,ebx
  418db2:	mov    ds:0x39030fd5,eax
  418db7:	adc    ebp,0x4a
  418dba:	and    eax,0x263805b1
  418dbf:	cmp    BYTE PTR [eax+0x2419a954],bh
  418dc5:	sahf   
  418dc6:	and    esp,ecx
  418dc8:	and    dh,cl
  418dca:	sub    eax,0xa18048b5
  418dcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dd0:	mov    ds:0x269b859,al
  418dd5:	ins    DWORD PTR es:[edi],dx
  418dd6:	inc    esi
  418dd7:	push   ecx
  418dd8:	in     eax,0x7a
  418dda:	gs (bad) 
  418ddc:	cld    
  418ddd:	add    BYTE PTR [eax],al
  418ddf:	add    BYTE PTR [eax],al
  418de1:	add    BYTE PTR [edx-0x103695a9],dh
  418de7:	std    
  418de8:	mov    bl,0x7f
  418dea:	push   ebx
  418deb:	jg     0x418e10
  418ded:	mov    ecx,0xcc8c7847
  418df2:	jmp    0x4:0xf300010a
  418df9:	add    bh,ah
  418dfb:	dec    edi
  418dfc:	cmp    DWORD PTR [ebp+0x5aca6f71],edi
  418e02:	shl    BYTE PTR [eax],1
  418e04:	nop
  418e05:	in     eax,dx
  418e06:	pop    es
  418e07:	or     edi,DWORD PTR [ecx+esi*4]
  418e0a:	push   edi
  418e0b:	mov    eax,0x57548f2b
  418e10:	leave  
  418e11:	js     0x418db1
  418e13:	inc    ecx
  418e14:	inc    esi
  418e15:	lds    eax,FWORD PTR [edi+0x7141df64]
  418e1b:	stc    
  418e1c:	inc    ecx
  418e1d:	push   ss
  418e1e:	sbb    BYTE PTR [esi+0x77],dl
  418e21:	mov    ds:0x80bb5c01,al
  418e26:	cmp    esp,edx
  418e28:	cmp    eax,ebp
  418e2a:	fidiv  DWORD PTR [ecx+0x39]
  418e2d:	mov    al,ds:0x53231c89
  418e32:	daa    
  418e33:	jl     0x418e3a
  418e35:	retf   0xb1a5
  418e38:	ja     0x418ddb
  418e3a:	fistp  DWORD PTR [ecx+0x3089f333]
  418e40:	je     0x418e08
  418e42:	push   ds
  418e43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e44:	scas   al,BYTE PTR es:[edi]
  418e45:	dec    esi
  418e46:	jo     0x418dfa
  418e48:	adc    BYTE PTR [ecx+0x6784d718],al
  418e4e:	dec    eax
  418e4f:	mov    dh,0x65
  418e51:	jbe    0x418e28
  418e53:	jns    0x418e05
  418e55:	popa   
  418e56:	pop    ebp
  418e57:	cdq    
  418e58:	outs   dx,BYTE PTR ds:[esi]
  418e59:	push   edi
  418e5a:	jns    0x418ecb
  418e5c:	ins    DWORD PTR es:[edi],dx
  418e5d:	jae    0x418e1f
  418e5f:	aad    0x52
  418e61:	out    0x4b,al
  418e63:	aam    0x5d
  418e65:	jecxz  0x418de8
  418e67:	iret   
  418e68:	jbe    0x418dec
  418e6a:	fwait
  418e6b:	pop    eax
  418e6c:	mov    ch,0x19
  418e6e:	test   BYTE PTR [ecx+0x37c83bc8],bl
  418e74:	sub    al,0xb7
  418e76:	pop    edi
  418e77:	or     DWORD PTR [esi-0x33],0x3967b7fe
  418e7e:	push   ss
  418e7f:	mov    edi,0x4baedff6
  418e84:	jg     0x418e5c
  418e86:	scas   eax,DWORD PTR es:[edi]
  418e87:	int3   
  418e88:	push   ebx
  418e89:	cld    
  418e8a:	pushf  
  418e8b:	mov    ch,0x39
  418e8d:	jle    0x418edc
  418e8f:	scas   al,BYTE PTR es:[edi]
  418e90:	stos   BYTE PTR es:[edi],al
  418e91:	out    0x1a,eax
  418e93:	cdq    
  418e94:	jecxz  0x418e85
  418e96:	loope  0x418e5d
  418e98:	rol    BYTE PTR [edx+ebp*8+0x34df4a50],cl
  418e9f:	not    DWORD PTR [ebp-0x3e]
  418ea2:	jns    0x418f11
  418ea4:	jp     0x418e5d
  418ea6:	cld    
  418ea7:	jg     0x418efe
  418ea9:	mov    cl,0xb4
  418eab:	dec    edx
  418eac:	mov    ds:0x1e97ca30,eax
  418eb1:	push   ss
  418eb2:	adc    eax,0x75237b0b
  418eb7:	fidiv  DWORD PTR [eax-0x12e6ff54]
  418ebd:	jno    0x418ef9
  418ebf:	push   esi
  418ec0:	mov    bh,0xcf
  418ec2:	mov    al,ds:0x1c6a299c
  418ec7:	jp     0x418efb
  418ec9:	xor    dl,dh
  418ecb:	jbe    0x418ec4
  418ecd:	jo     0x418f49
  418ecf:	les    ecx,FWORD PTR [eax-0x63]
  418ed2:	jo     0x418e94
  418ed4:	es stc 
  418ed6:	inc    ecx
  418ed7:	in     al,0x27
  418ed9:	rcr    ah,1
  418edb:	dec    ebx
  418edc:	xchg   esi,eax
  418edd:	pop    eax
  418ede:	xchg   edx,eax
  418edf:	inc    esp
  418ee0:	ja     0x418e93
  418ee2:	adc    edi,0x906c0fb3
  418ee8:	call   FWORD PTR [edi-0x35]
  418eeb:	pop    ss
  418eec:	loopne 0x418f0c
  418eee:	int3   
  418eef:	adc    DWORD PTR [esi],ebx
  418ef1:	adc    BYTE PTR [edi+eax*2+0x64],bh
  418ef5:	aas    
  418ef6:	fcmove st,st(1)
  418ef8:	push   ebp
  418ef9:	loop   0x418f1b
  418efb:	add    bl,BYTE PTR [esi-0x13]
  418efe:	(bad)  
  418eff:	fadd   st(2),st
  418f01:	sbb    BYTE PTR [edx-0x1],ch
  418f04:	icebp  
  418f05:	xor    ecx,ebp
  418f07:	enter  0x702e,0x5
  418f0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f0c:	add    bh,BYTE PTR [edx+0x6e4123de]
  418f12:	adc    cl,BYTE PTR [ecx]
  418f14:	sbb    DWORD PTR [eax+0x5f],edx
  418f17:	dec    ecx
  418f18:	loopne 0x418f26
  418f1a:	ins    BYTE PTR es:[edi],dx
  418f1b:	jns    0x418e9f
  418f1d:	or     BYTE PTR [esi],cl
  418f1f:	dec    esi
  418f20:	les    eax,FWORD PTR [edi-0x41c57625]
  418f26:	xchg   esi,eax
  418f27:	int3   
  418f28:	cwde   
  418f29:	rcl    DWORD PTR [ebx],1
  418f2b:	inc    edx
  418f2c:	sub    esp,DWORD PTR [eax]
  418f2e:	jge    0x418efc
  418f30:	enter  0xb7d4,0x44
  418f34:	pop    ss
  418f35:	inc    eax
  418f36:	repnz pop ebp
  418f38:	xor    al,0x51
  418f3a:	sbb    bh,BYTE PTR [ebx-0x4f]
  418f3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f3e:	dec    esi
  418f3f:	pop    esi
  418f40:	rcr    dh,0x85
  418f43:	xchg   edx,eax
  418f44:	jo     0x418f89
  418f46:	push   ebp
  418f47:	je     0x418ee3
  418f49:	push   0x45
  418f4b:	xor    DWORD PTR [esi+ecx*8-0x79],ebx
  418f4f:	out    0xc6,eax
  418f51:	test   ebp,0x42d87a44
  418f57:	mul    bl
  418f59:	mov    WORD PTR [ecx],?
  418f5b:	sbb    eax,0xc7efd51
  418f60:	mov    esi,0x11c362d4
  418f65:	repnz stc 
  418f67:	dec    esi
  418f68:	bnd jne 0x418fd1
  418f6b:	push   esp
  418f6c:	jnp    0x418f87
  418f6e:	sbb    eax,0xc9603b5b
  418f73:	mov    cl,0xad
  418f75:	sub    BYTE PTR [edi+eax*2],ch
  418f78:	add    al,0xc4
  418f7a:	mov    al,0xdd
  418f7c:	inc    esp
  418f7d:	dec    edi
  418f7e:	aad    0xab
  418f80:	iret   
  418f81:	(bad)  
  418f82:	int3   
  418f83:	sub    cl,BYTE PTR [ebp+0x7325da20]
  418f89:	mov    cl,0x4f
  418f8b:	and    BYTE PTR [edi],dl
  418f8d:	mov    ecx,0x8ddd6baa
  418f92:	and    bl,al
  418f94:	sub    dh,BYTE PTR [esi]
  418f96:	movmskps ecx,xmm5
  418f99:	add    al,0xb5
  418f9b:	jmp    0x7e9e:0xce267b28
  418fa2:	popa   
  418fa3:	mov    gs,WORD PTR [ebp-0x68]
  418fa6:	xor    al,0xfc
  418fa8:	call   0xc45a7de8
  418fad:	fst    st(5)
  418faf:	lahf   
  418fb0:	mov    ecx,0xcc3bce6b
  418fb5:	xor    eax,esi
  418fb7:	out    0x6b,eax
  418fb9:	dec    eax
  418fba:	pop    es
  418fbb:	in     al,dx
  418fbc:	dec    esp
  418fbd:	test   esi,ebx
  418fbf:	sub    eax,0xfc5d6026
  418fc4:	stos   DWORD PTR es:[edi],eax
  418fc5:	mov    dh,0x89
  418fc7:	mov    ds:0xf8132d6e,al
  418fcc:	push   esp
  418fcd:	or     eax,0x79ef830e
  418fd2:	cvtpi2ps xmm6,mm5
  418fd5:	add    eax,0x788b1c70
  418fda:	and    al,0xfc
  418fdc:	pop    ebx
  418fdd:	xor    DWORD PTR [edi],ebp
  418fdf:	sub    DWORD PTR [ecx-0x39b9cd5e],edi
  418fe5:	mov    ds:0x230286d1,eax
  418fea:	dec    esi
  418feb:	cmp    DWORD PTR [edx+ecx*1-0x18],ecx
  418fef:	adc    al,0x98
  418ff1:	int3   
  418ff2:	cli    
  418ff3:	push   ebx
  418ff4:	iret   
  418ff5:	cmp    BYTE PTR [edx],ch
  418ff7:	cli    
  418ff8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ff9:	xchg   ecx,eax
  418ffa:	ins    BYTE PTR es:[edi],dx
  418ffb:	xor    eax,0x77141fec
  419000:	and    esp,DWORD PTR [ecx+0x1f]
  419003:	cmp    eax,0xe7c64572
  419008:	xchg   esp,eax
  419009:	aas    
  41900a:	add    al,0xee
  41900c:	dec    esi
  41900d:	ror    ecx,1
  41900f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419010:	xor    ch,BYTE PTR [eax]
  419012:	iret   
  419013:	shl    dh,0x79
  419016:	popa   
  419017:	sahf   
  419018:	cdq    
  419019:	stos   DWORD PTR es:[edi],eax
  41901a:	jne    0x418fd5
  41901c:	sub    ah,BYTE PTR [edx]
  41901e:	cli    
  41901f:	pop    ebx
  419020:	(bad)  
  419021:	ffree  st(3)
  419023:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419024:	and    cl,BYTE PTR fs:[esi-0x635337c1]
  41902b:	xchg   DWORD PTR [ecx-0x29],ebx
  41902e:	mov    ecx,0xa30fd6a7
  419033:	ror    DWORD PTR [edi],1
  419035:	psubsw mm3,QWORD PTR [ebp+0x7b42db57]
  41903c:	cli    
  41903d:	xor    dh,BYTE PTR [edi-0x46361d43]
  419043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419044:	in     al,dx
  419045:	jecxz  0x419039
  419047:	jnp    0x41905a
  419049:	and    al,0xad
  41904b:	imul   ecx,ebx,0xe96a0283
  419051:	outs   dx,DWORD PTR ds:[esi]
  419052:	jmp    0x8765:0x7813bc96
  419059:	cwde   
  41905a:	lods   al,BYTE PTR ds:[esi]
  41905b:	add    esp,ebp
  41905d:	cmp    BYTE PTR [ebx-0x16c43b8f],ch
  419063:	repz out 0xc2,eax
  419066:	adc    edx,DWORD PTR [ebp-0x61b884b0]
  41906c:	stos   BYTE PTR es:[edi],al
  41906d:	out    0xb2,eax
  41906f:	xor    al,0x48
  419071:	icebp  
  419072:	inc    ebp
  419073:	in     al,dx
  419074:	jmp    0xaf89656
  419079:	pop    ebx
  41907a:	push   ss
  41907b:	div    DWORD PTR [esp+eax*1]
  41907e:	push   edi
  41907f:	(bad)  
  419080:	mov    al,0x2b
  419082:	bound  ebp,QWORD PTR [ebx-0x32]
  419085:	jbe    0x419052
  419087:	jge    0x4190bc
  419089:	push   ebx
  41908a:	pop    esi
  41908b:	sbb    BYTE PTR [esp+edx*8+0x63],ch
  41908f:	gs cli 
  419091:	scas   eax,DWORD PTR es:[edi]
  419092:	ds mov dh,0x88
  419095:	dec    ecx
  419096:	cli    
  419097:	aad    0x62
  419099:	dec    esp
  41909a:	loopne 0x419031
  41909c:	sti    
  41909d:	je     0x419109
  41909f:	sahf   
  4190a0:	inc    ecx
  4190a1:	xor    ah,BYTE PTR [edx]
  4190a3:	push   esi
  4190a4:	sub    al,ah
  4190a6:	mov    dh,0x4e
  4190a8:	in     al,0xbf
  4190aa:	shr    BYTE PTR [bx+si-0x40],cl
  4190ae:	and    al,0x85
  4190b0:	or     BYTE PTR [ebx+0x42164171],cl
  4190b6:	(bad)  
  4190b7:	and    esi,esp
  4190b9:	aam    0xf2
  4190bb:	mul    DWORD PTR [esp+edx*4]
  4190be:	lods   eax,DWORD PTR ds:[esi]
  4190bf:	hlt    
  4190c0:	dec    ebx
  4190c1:	retf   0x4d7b
  4190c4:	inc    ebp
  4190c5:	ss nop
  4190c7:	mov    ecx,0x132a913c
  4190cc:	repnz lds ebp,FWORD PTR [esi-0x2c2fa44c]
  4190d3:	cmp    ebx,DWORD PTR [esi+edi*8+0x3b39e0b5]
  4190da:	push   esi
  4190db:	dec    edx
  4190dc:	pusha  
  4190dd:	jmp    0xd98e1173
  4190e2:	or     BYTE PTR [ebp+0x314cdb36],0x11
  4190e9:	(bad)  
  4190ea:	aad    0xd5
  4190ec:	test   al,0xf8
  4190ee:	leave  
  4190ef:	inc    esi
  4190f0:	popa   
  4190f1:	fcmovnb st,st(6)
  4190f3:	xchg   DWORD PTR [ecx+esi*2-0x71d1647d],edi
  4190fa:	out    dx,eax
  4190fb:	cli    
  4190fc:	retf   0xf819
  4190ff:	jecxz  0x4190c7
  419101:	repnz (bad) 
  419103:	shl    dl,1
  419105:	push   ebx
  419106:	and    bl,BYTE PTR [ecx]
  419108:	ficom  WORD PTR [ecx+0x1e]
  41910b:	xchg   edi,eax
  41910c:	shl    ecx,1
  41910e:	in     al,0xc5
  419110:	pop    ecx
  419111:	psllq  mm7,QWORD PTR [esi-0x46]
  419115:	dec    edx
  419116:	or     eax,0xd5a81097
  41911b:	pushf  
  41911c:	fbld   TBYTE PTR [ebx-0x42]
  41911f:	aad    0x38
  419121:	jg     0x419116
  419123:	call   FWORD PTR ds:[edi+eiz*1-0x64e80291]
  41912b:	iret   
  41912c:	mov    dh,0xde
  41912e:	popa   
  41912f:	xlat   BYTE PTR ds:[ebx]
  419130:	movzx  ecx,dh
  419133:	push   0xffffffbd
  419135:	push   edx
  419136:	sbb    BYTE PTR [ebp+0x3c],dl
  419139:	add    BYTE PTR [esi],ah
  41913b:	push   0x50e416d6
  419140:	pop    esi
  419141:	and    ch,dl
  419143:	lods   al,BYTE PTR ds:[esi]
  419144:	shl    BYTE PTR [edx],cl
  419146:	sub    BYTE PTR [edi-0x48],bl
  419149:	mov    al,ds:0x6d8034b
  41914e:	stos   BYTE PTR es:[edi],al
  41914f:	out    dx,al
  419150:	hlt    
  419151:	scas   al,BYTE PTR es:[edi]
  419152:	repz in eax,dx
  419154:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419155:	mov    ecx,0x1375fcd8
  41915a:	push   ebp
  41915b:	and    DWORD PTR [eax],esp
  41915d:	dec    ecx
  41915e:	jmp    0x4a2ad18c
  419163:	pop    edx
  419164:	adc    DWORD PTR [ecx+esi*8-0x4fc54c8],ebp
  41916b:	push   ds
  41916c:	xlat   BYTE PTR ds:[ebx]
  41916d:	jbe    0x4191aa
  41916f:	push   eax
  419170:	mov    cl,0xf8
  419172:	fmulp  st(6),st
  419174:	fisttp DWORD PTR [ecx-0x7a]
  419177:	and    DWORD PTR ds:[ecx],0x3c273d0e
  41917e:	mov    bh,0xf4
  419180:	xor    DWORD PTR [ecx],0x75
  419183:	mov    ?,WORD PTR [ecx-0x69]
  419186:	retf   0x7ef6
  419189:	ins    BYTE PTR es:[edi],dx
  41918a:	jae    0x4191d4
  41918c:	xor    al,0x94
  41918e:	mov    eax,ds:0x80d1ffae
  419193:	push   ebp
  419194:	or     eax,0xc45f1c1f
  419199:	push   edx
  41919a:	stos   DWORD PTR es:[edi],eax
  41919b:	xor    eax,0x3e71b102
  4191a0:	push   cs
  4191a1:	push   ebx
  4191a2:	(bad)  
  4191a3:	out    dx,al
  4191a4:	rcr    DWORD PTR [ecx+0x52],cl
  4191a7:	cmovo  esi,DWORD PTR [ebx]
  4191aa:	xchg   ebp,eax
  4191ab:	adc    ebp,DWORD PTR [edi+0xa]
  4191ae:	sub    al,0x8f
  4191b0:	(bad)  
  4191b1:	mov    cl,0x4d
  4191b3:	test   DWORD PTR [ecx+ebp*2+0x40efc6e7],esi
  4191ba:	pusha  
  4191bb:	daa    
  4191bc:	fnstcw WORD PTR [ebx]
  4191be:	mov    bh,0xa8
  4191c0:	cwde   
  4191c1:	push   ds
  4191c2:	inc    esi
  4191c3:	shr    BYTE PTR ds:[ebp+0x61],0x14
  4191c8:	ins    DWORD PTR es:[edi],dx
  4191c9:	popf   
  4191ca:	out    dx,al
  4191cb:	pushf  
  4191cc:	push   esi
  4191cd:	ror    BYTE PTR [ebx],1
  4191cf:	mov    eax,ds:0x9d655459
  4191d4:	mov    edx,0xd5444975
  4191d9:	bsf    edi,DWORD PTR [edx-0x2979c9aa]
  4191e0:	pop    ecx
  4191e1:	ds sbb al,0x38
  4191e4:	inc    edi
  4191e5:	fdiv   st,st(4)
  4191e7:	push   ecx
  4191e8:	push   esp
  4191e9:	(bad)  
  4191ea:	clc    
  4191eb:	cmp    eax,DWORD PTR [esi-0x2478bebf]
  4191f1:	push   eax
  4191f2:	inc    eax
  4191f3:	test   DWORD PTR [ebp+0x287f3bcc],0xcf684abb
  4191fd:	shl    BYTE PTR [eax],0xb5
  419200:	jg     0x419232
  419202:	fistp  WORD PTR [esp+eax*4+0x5f2d8bfc]
  419209:	push   cs
  41920a:	or     cl,bh
  41920c:	iret   
  41920d:	int    0xac
  41920f:	pop    es
  419210:	retf   0x2eec
  419213:	fsubr  QWORD PTR [eax+ecx*1+0x6f7ca3aa]
  41921a:	sbb    eax,0x69738d47
  41921f:	or     BYTE PTR [eax+0x256d223b],al
  419225:	sbb    BYTE PTR [ebx+0x22],0x5b
  419229:	iret   
  41922a:	ja     0x4191ec
  41922c:	mov    dh,0x8b
  41922e:	jp     0x419292
  419230:	inc    edx
  419231:	loopne 0x4191c4
  419233:	xchg   edi,eax
  419234:	jne    0x4191c6
  419236:	and    al,0x6c
  419238:	push   esi
  419239:	lods   al,BYTE PTR ds:[esi]
  41923a:	aaa    
  41923b:	shl    edi,1
  41923d:	cmp    DWORD PTR [edx],0xffffffc1
  419240:	mov    eax,ds:0x8196935
  419245:	jne    0x41921a
  419247:	pop    edi
  419248:	daa    
  419249:	inc    eax
  41924a:	and    al,0xf1
  41924c:	das    
  41924d:	adc    al,0xb2
  41924f:	xchg   edi,eax
  419250:	rcl    BYTE PTR [edi],cl
  419252:	cld    
  419253:	and    ebx,DWORD PTR [eax]
  419255:	scas   al,BYTE PTR es:[edi]
  419256:	gs ficomp DWORD PTR ds:[edi-0x2079687a]
  41925e:	jno    0x41927c
  419260:	adc    eax,0xa1dfecb1
  419265:	adc    al,0xcc
  419267:	data16 mov al,ds:0xdd59e7c0
  41926d:	pusha  
  41926e:	ins    DWORD PTR es:[edi],dx
  41926f:	add    eax,0x4acbfa30
  419274:	cmp    al,0x94
  419276:	call   0x4b39:0x80e0272a
  41927d:	mov    cl,0xaf
  41927f:	cwde   
  419280:	mov    cl,0x1d
  419282:	mov    al,ds:0x3879813a
  419287:	and    dl,BYTE PTR [edx]
  419289:	jle    0x4192e1
  41928b:	or     eax,0x6f56569
  419290:	sub    ecx,DWORD PTR [eax+eax*4+0x2d]
  419294:	push   eax
  419295:	ucomiss xmm7,DWORD PTR [ebx-0x1f]
  419299:	mov    bh,0x7
  41929b:	enter  0x3b4a,0x7f
  41929f:	ja     0x4192db
  4192a1:	mov    esi,0xe0b28c55
  4192a6:	xor    al,0x5f
  4192a8:	dec    esi
  4192a9:	inc    ebp
  4192aa:	or     ah,BYTE PTR ds:0x466db85c
  4192b0:	jl     0x41925b
  4192b2:	jne    0x4192f3
  4192b4:	adc    BYTE PTR [eax+esi*1],al
  4192b7:	jg     0x419285
  4192b9:	mov    esp,0x1273d4c6
  4192be:	leave  
  4192bf:	cdq    
  4192c0:	xchg   esi,eax
  4192c1:	jo     0x4192d6
  4192c3:	xchg   ebp,eax
  4192c4:	and    ebp,DWORD PTR [ecx-0x66]
  4192c7:	adc    al,0xbd
  4192c9:	sbb    edi,DWORD PTR [esi+0x6]
  4192cc:	pop    eax
  4192cd:	pop    esi
  4192ce:	cs mov esp,0x377b928e
  4192d4:	mov    eax,ecx
  4192d6:	out    0x42,al
  4192d8:	mov    bl,0xc
  4192da:	into   
  4192db:	xchg   ebp,eax
  4192dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192de:	jne    0x419319
  4192e0:	pop    es
  4192e1:	inc    ebx
  4192e2:	xchg   ebp,eax
  4192e3:	pusha  
  4192e4:	push   es
  4192e5:	mov    ?,WORD PTR [esi-0x4dc55b76]
  4192eb:	gs loopne 0x4192ee
  4192ee:	add    BYTE PTR [eax],al
  4192f0:	add    BYTE PTR [eax],al
  4192f2:	inc    ebp
  4192f3:	push   cs
  4192f4:	retf   0xcb6c
  4192f7:	in     al,dx
  4192f8:	out    0x2f,eax
  4192fa:	dec    ecx
  4192fb:	add    eax,0xa2cb5d81
  419300:	lea    ebx,[edi-0x23]
  419303:	sgdtd  [eax]
  419306:	repz add al,0x0
  419309:	add    BYTE PTR [ebp-0x60a3f342],dh
  41930f:	aas    
  419310:	imul   esi,ebp,0x6999b536
  419316:	mov    bl,BYTE PTR [esi-0x45]
  419319:	mov    ds:0xded4e3af,eax
  41931e:	scas   eax,DWORD PTR es:[edi]
  41931f:	add    edx,DWORD PTR ds:0x20a8c8b8
  419325:	nop
  419326:	daa    
  419327:	(bad)
  41932b:	ja     0x4192f1
  41932d:	xlat   BYTE PTR ds:[ebx]
  41932e:	lods   eax,DWORD PTR ds:[esi]
  41932f:	add    BYTE PTR [eax+ebp*2-0x51f07387],al
  419336:	push   edx
  419337:	or     cl,dl
  419339:	pop    ds
  41933a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41933b:	rcr    BYTE PTR [edx-0x67614a4c],1
  419341:	jl     0x4193a0
  419343:	jo     0x419337
  419345:	mov    ah,0xd1
  419347:	mov    WORD PTR [eax+0x29832e],?
  41934d:	inc    esp
  41934e:	mov    bh,0x6e
  419350:	mov    bl,0x45
  419352:	xchg   DWORD PTR [ecx],esi
  419354:	xor    eax,0x3f137e0e
  419359:	push   eax
  41935a:	adc    al,0x2f
  41935c:	push   edi
  41935d:	xchg   ecx,eax
  41935e:	cmp    DWORD PTR [esi],0x55bd7b26
  419364:	out    dx,eax
  419365:	add    al,0x89
  419367:	lods   eax,DWORD PTR ds:[esi]
  419368:	dec    esi
  419369:	jge    0x419377
  41936b:	ja     0x41937c
  41936d:	std    
  41936e:	lock shl BYTE PTR [esi],cl
  419371:	in     eax,0xef
  419373:	lock out 0xb5,eax
  419376:	scas   eax,DWORD PTR es:[edi]
  419377:	or     BYTE PTR [ebx],cl
  419379:	xchg   edi,eax
  41937a:	push   eax
  41937b:	or     al,0xb9
  41937d:	inc    esp
  41937e:	xor    cl,dh
  419380:	add    al,0xe0
  419382:	das    
  419383:	adc    dl,BYTE PTR [ebx+0x4f58bec9]
  419389:	mov    ecx,0x5e6192a
  41938e:	cmp    DWORD PTR [esp+edi*8+0x36],ecx
  419392:	lods   al,BYTE PTR ds:[esi]
  419393:	add    BYTE PTR [esi+0x14],ah
  419396:	loopne 0x419350
  419398:	outs   dx,DWORD PTR ds:[esi]
  419399:	xor    DWORD PTR [edx],esp
  41939b:	int3   
  41939c:	xor    ecx,ebp
  41939e:	sbb    eax,0x451b58e2
  4193a3:	lock sbb bl,BYTE PTR [edx]
  4193a6:	cmp    esp,DWORD PTR ss:[ebx+0x4a3b70e7]
  4193ad:	mov    eax,DWORD PTR [edi+0x2ff9f4b0]
  4193b3:	shl    ecx,0xdf
  4193b6:	jns    0x4193f9
  4193b8:	jle    0x419367
  4193ba:	in     al,0x46
  4193bc:	(bad)  
  4193bd:	sub    al,0x30
  4193bf:	rol    bl,0xd2
  4193c2:	adc    cl,BYTE PTR [ebx]
  4193c4:	pusha  
  4193c5:	adc    ebx,DWORD PTR [esi+0x315a9c1b]
  4193cb:	clc    
  4193cc:	clc    
  4193cd:	(bad)  
  4193cf:	inc    ecx
  4193d0:	jp     0x4193a3
  4193d2:	cli    
  4193d3:	test   BYTE PTR [ebx-0x17a191b8],cl
  4193d9:	lahf   
  4193da:	xchg   edi,eax
  4193db:	mov    al,0x5
  4193dd:	das    
  4193de:	push   cs
  4193df:	sbb    al,0x4e
  4193e1:	pop    edx
  4193e2:	mov    al,ds:0x46bfb0e3
  4193e7:	mov    dh,0x9
  4193e9:	bnd jns 0x41939c
  4193ec:	dec    eax
  4193ed:	fnstcw WORD PTR [ebx+0x74]
  4193f0:	mov    edx,0x38686597
  4193f5:	cmp    bh,al
  4193f7:	xchg   edi,eax
  4193f8:	push   ecx
  4193f9:	jmp    0x419398
  4193fb:	sbb    DWORD PTR [esi-0x3e],esi
  4193fe:	repnz pop esp
  419400:	add    al,ch
  419402:	push   ss
  419403:	cmc    
  419404:	mov    DWORD PTR [ecx+0x54],edi
  419407:	xor    BYTE PTR [esi],dh
  419409:	sbb    ebx,esp
  41940b:	arpl   WORD PTR ds:0xdf5e3157,bx
  419411:	mov    bl,0x4f
  419413:	out    0x3b,eax
  419415:	inc    eax
  419416:	jmp    0xd3da1060
  41941b:	retf   
  41941c:	stc    
  41941d:	inc    edi
  41941e:	mov    cl,BYTE PTR [eax]
  419420:	(bad)  
  419422:	jmp    0x41941a
  419424:	jae    0x4193d2
  419426:	es ret 0x2735
  41942a:	or     dh,BYTE PTR [ebp+0x48ed18f1]
  419430:	ins    BYTE PTR es:[edi],dx
  419431:	pop    eax
  419432:	iret   
  419433:	xchg   ecx,eax
  419434:	arpl   WORD PTR [ebx],si
  419436:	add    edi,DWORD PTR [ecx+edx*8+0x7b]
  41943a:	and    ebx,DWORD PTR [esi+0x73]
  41943d:	stc    
  41943e:	mov    ebp,0x40088cc1
  419443:	mov    eax,ds:0xa8f5d184
  419448:	xor    DWORD PTR [esp+edx*2],edi
  41944b:	xchg   ebp,eax
  41944c:	push   ebx
  41944d:	dec    esp
  41944e:	loop   0x41947e
  419450:	mov    bh,0xc2
  419452:	xchg   esi,ecx
  419454:	xor    al,0x39
  419456:	aaa    
  419457:	cwde   
  419458:	jb     0x419445
  41945a:	sbb    eax,0xecd8bd4
  41945f:	add    eax,0x3df9b812
  419464:	xlat   BYTE PTR ds:[ebx]
  419465:	lahf   
  419466:	or     esp,ebp
  419468:	or     BYTE PTR [ecx-0x2a],dl
  41946b:	(bad)  
  41946d:	xchg   esp,eax
  41946e:	xor    bh,BYTE PTR [eax]
  419470:	mov    ebp,0xd8e0cd51
  419475:	xchg   esp,eax
  419476:	mov    bl,0xae
  419478:	lahf   
  419479:	push   es
  41947a:	enter  0x9c63,0x1b
  41947e:	rcr    eax,1
  419480:	fistp  DWORD PTR [ebx-0x75]
  419483:	in     eax,0xb6
  419485:	je     0x4194bc
  419487:	push   esp
  419488:	loope  0x4194e3
  41948a:	test   edx,0x13aec41c
  419490:	sbb    BYTE PTR [edx-0x3f],al
  419493:	pop    esp
  419494:	add    ebx,DWORD PTR [ecx+0x686ca9ad]
  41949a:	xchg   ecx,eax
  41949b:	cld    
  41949c:	mov    ds:0x941e862c,al
  4194a1:	test   eax,0x9f69f11b
  4194a6:	push   cs
  4194a7:	push   ebp
  4194a8:	cs and al,0xb5
  4194ab:	out    0x8d,al
  4194ad:	dec    ebx
  4194ae:	pusha  
  4194af:	jb     0x4194f8
  4194b1:	mov    ds:0xafb89a67,eax
  4194b6:	out    dx,al
  4194b7:	jmp    0x56e60e04
  4194bc:	dec    ecx
  4194bd:	pop    edx
  4194be:	mov    esi,0x7aacf04b
  4194c3:	int    0xea
  4194c5:	xor    eax,0x76305446
  4194ca:	xchg   esi,eax
  4194cb:	add    esp,DWORD PTR [esi+0x1]
  4194ce:	pop    ebp
  4194cf:	sbb    DWORD PTR [eax+0x78fdafd],edx
  4194d5:	add    eax,0xbc3356aa
  4194da:	cmovl  edi,DWORD PTR [esi]
  4194dd:	sbb    dl,BYTE PTR [esp+esi*1-0x435daf34]
  4194e4:	lds    edx,FWORD PTR ds:0xe99aab2a
  4194ea:	ret    0xbeb5
  4194ed:	clc    
  4194ee:	stc    
  4194ef:	xchg   ebp,eax
  4194f0:	mov    ah,0xc
  4194f2:	pop    esi
  4194f3:	test   eax,0x29128511
  4194f8:	retf   0x3b5d
  4194fb:	mov    WORD PTR [esi+0x21],fs
  4194fe:	sahf   
  4194ff:	xor    ebx,DWORD PTR [esi+0x4f]
  419502:	pop    ebx
  419503:	in     al,0x5a
  419505:	inc    edx
  419506:	push   cs
  419507:	mov    ecx,0xd9695952
  41950c:	mov    eax,ds:0xaf1d23b3
  419511:	add    al,0x8f
  419513:	shl    DWORD PTR [esi-0x56fd0afc],1
  419519:	fwait
  41951a:	lahf   
  41951b:	xchg   BYTE PTR ds:0x1b68c8ec,ch
  419521:	and    eax,0x6dabef87
  419526:	or     edi,DWORD PTR [ecx-0x30e4ff6a]
  41952c:	mov    BYTE PTR [edi],dh
  41952e:	mov    dl,0xb1
  419530:	and    al,0xd9
  419532:	pop    ss
  419533:	jbe    0x4194dc
  419535:	clc    
  419536:	out    0x31,eax
  419538:	dec    ebp
  419539:	inc    ebx
  41953a:	push   edx
  41953b:	dec    ecx
  41953c:	jb     0x41958b
  41953e:	or     eax,0x70a2c605
  419543:	out    dx,al
  419544:	clc    
  419545:	jg     0x4194ec
  419547:	mov    bh,0xff
  419549:	(bad)  
  41954a:	fst    DWORD PTR [esi+0xf2ed273]
  419550:	sbb    ch,BYTE PTR [edi]
  419552:	je     0x419541
  419554:	pop    es
  419555:	or     ah,BYTE PTR [ecx+0x78]
  419558:	jl     0x41954e
  41955a:	xchg   esi,eax
  41955b:	push   cs
  41955c:	pop    eax
  41955d:	mov    WORD PTR [eax-0x61],ds
  419560:	add    DWORD PTR ds:0xc42d6918,edi
  419566:	dec    eax
  419567:	js     0x4194f9
  419569:	jb     0x41954d
  41956b:	in     eax,0x35
  41956d:	cmp    ah,BYTE PTR [ecx+ebp*8-0x1c]
  419571:	iret   
  419572:	(bad)  
  419573:	cmc    
  419574:	repz inc ebx
  419576:	or     eax,0x9c0dd24d
  41957b:	sbb    esp,ebp
  41957d:	cdq    
  41957e:	xchg   esi,eax
  41957f:	jns    0x41957e
  419581:	xchg   esp,eax
  419582:	cmp    eax,0x3e80699
  419587:	icebp  
  419588:	sbb    eax,0x52068f7b
  41958d:	adc    DWORD PTR [esi],esi
  41958f:	dec    edx
  419590:	xor    eax,0xaddbc3a6
  419595:	dec    ebp
  419596:	loopne 0x4195d7
  419598:	xchg   ebp,eax
  419599:	sbb    al,0xde
  41959b:	xor    eax,0xe7211b90
  4195a0:	dec    esi
  4195a1:	ins    DWORD PTR es:[edi],dx
  4195a2:	xor    eax,0x23acb723
  4195a7:	push   eax
  4195a8:	inc    ebx
  4195a9:	add    eax,0x6dffff09
  4195ae:	dec    ebp
  4195af:	adc    esp,eax
  4195b1:	mov    esi,0x3316d5fa
  4195b6:	in     eax,0xb0
  4195b8:	(bad)  
  4195b9:	cmp    al,BYTE PTR [edi+0x5b]
  4195bc:	cld    
  4195bd:	xor    BYTE PTR [edi],0x8d
  4195c0:	sub    eax,0x11340695
  4195c5:	mov    eax,0x6a78ecc1
  4195ca:	ins    BYTE PTR es:[edi],dx
  4195cb:	int3   
  4195cc:	dec    edx
  4195cd:	arpl   WORD PTR ds:0x1dd0df2a,si
  4195d3:	or     DWORD PTR [eax-0x48],ebp
  4195d6:	jbe    0x4195f1
  4195d8:	push   0xfec61bf4
  4195dd:	jle    0x4195e0
  4195df:	jns    0x419562
  4195e1:	dec    eax
  4195e2:	cmp    BYTE PTR [ebx+0x20064b5],bl
  4195e8:	inc    edi
  4195e9:	push   eax
  4195ea:	dec    ebx
  4195eb:	jp     0x4195e3
  4195ed:	mov    eax,0xb0bf5656
  4195f2:	push   cs
  4195f3:	mov    eax,0x4cc0700c
  4195f8:	cmp    BYTE PTR [ebx-0x67],0x5
  4195fc:	mov    bh,0x91
  4195fe:	arpl   WORD PTR [ecx+0x6a],ax
  419601:	xchg   edi,eax
  419602:	and    dh,bh
  419604:	pop    esp
  419605:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419606:	int    0xd6
  419608:	jge    0x419621
  41960a:	mov    ebx,0xf2a3ea11
  41960f:	inc    edx
  419610:	aas    
  419611:	gs cs cli 
  419614:	imul   esi,DWORD PTR [ebp+0x5f],0x8bf5bbc7
  41961b:	push   bp
  41961d:	fwait
  41961e:	jp     0x41965b
  419620:	push   esi
  419621:	dec    esp
  419622:	cdq    
  419623:	mov    edx,0x1c4fdc93
  419628:	mov    fs,WORD PTR [edx+0x4]
  41962b:	mov    dh,0xe
  41962d:	and    al,0xe
  41962f:	sbb    BYTE PTR [eax+0x1],ch
  419632:	mov    ds:0x1e127b11,al
  419637:	xchg   ebp,eax
  419638:	push   ds
  419639:	ds add eax,0xfd0a340e
  41963f:	xor    DWORD PTR [ecx-0x32ec1b20],edi
  419645:	retf   
  419646:	xor    eax,0xd5d452a0
  41964b:	popf   
  41964c:	das    
  41964d:	sub    al,0x5b
  41964f:	adc    al,dh
  419651:	mov    WORD PTR [esp+eiz*2-0x4279e252],gs
  419658:	mov    ?,edi
  41965a:	push   edi
  41965b:	inc    ebp
  41965c:	inc    esp
  41965d:	sub    BYTE PTR [ebp+0x490e9e98],bh
  419663:	xlat   BYTE PTR ds:[ebx]
  419664:	daa    
  419665:	in     eax,0xd6
  419667:	lods   al,BYTE PTR ds:[esi]
  419668:	cmp    BYTE PTR [edi],dh
  41966a:	mov    bl,0x28
  41966c:	mov    bh,0x1e
  41966e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41966f:	jmp    0x75b895be
  419674:	and    eax,0x72308db6
  419679:	mov    esp,0xfdbcd8ff
  41967e:	pop    esi
  41967f:	aas    
  419680:	in     al,0xf0
  419682:	retf   0xe413
  419685:	popa   
  419686:	outs   dx,BYTE PTR ds:[esi]
  419687:	cs inc edx
  419689:	ins    BYTE PTR es:[edi],dx
  41968a:	mov    eax,0x6e8b2bfe
  41968f:	stos   BYTE PTR es:[edi],al
  419690:	fnsave [edi+0x4a]
  419693:	(bad)  [esp+esi*2+0x57b2b41a]
  41969a:	or     BYTE PTR [eax+0x49f61fa5],cl
  4196a0:	scas   eax,DWORD PTR es:[edi]
  4196a1:	retf   0xfcb3
  4196a4:	or     DWORD PTR [edx-0x6c],esp
  4196a7:	out    0x6a,eax
  4196a9:	push   esi
  4196aa:	bound  ecx,QWORD PTR [esi]
  4196ac:	pop    ebx
  4196ad:	sbb    dh,BYTE PTR ds:0x14dd9c58
  4196b3:	ins    DWORD PTR es:[edi],dx
  4196b4:	mov    eax,0xe77596ec
  4196b9:	cs loope 0x419655
  4196bc:	push   ecx
  4196bd:	pop    esp
  4196be:	int3   
  4196bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196c0:	(bad)  
  4196c1:	js     0x41967f
  4196c3:	and    al,0x2a
  4196c5:	jne    0x419703
  4196c7:	mov    bh,0xb3
  4196c9:	mov    DWORD PTR [edi],esi
  4196cb:	out    dx,al
  4196cc:	ret    0x2f4e
  4196cf:	sub    ah,BYTE PTR [edx+0x6d172038]
  4196d5:	cmp    eax,0xd252d6d2
  4196da:	jmp    0x2d9e8900
  4196df:	jb     0x419693
  4196e1:	test   al,0x1f
  4196e3:	inc    edi
  4196e4:	fimul  DWORD PTR [edi+0x1cb74f12]
  4196ea:	push   es
  4196eb:	sub    BYTE PTR gs:[ecx+esi*8-0x7],0xde
  4196f1:	fcmovnb st,st(1)
  4196f3:	mov    edx,DWORD PTR [edi+0x54]
  4196f6:	jg     0x419776
  4196f8:	cmp    al,0x13
  4196fa:	pop    es
  4196fb:	push   eax
  4196fc:	sbb    esi,DWORD PTR cs:[ebx-0x5400dc52]
  419703:	or     BYTE PTR [eax],dh
  419705:	adc    al,0x63
  419707:	dec    eax
  419708:	cld    
  419709:	lahf   
  41970a:	pop    es
  41970b:	mov    BYTE PTR [edx-0x5c77e585],0xb1
  419712:	push   es
  419713:	repnz in al,dx
  419715:	mov    BYTE PTR [ebx+ebp*1-0x26539dfd],al
  41971c:	imul   edx,DWORD PTR [eax+eax*8],0x7d
  419720:	mov    edi,0xa9d7511d
  419725:	daa    
  419726:	pop    edi
  419727:	cs mov bx,0x2f52
  41972c:	mov    ds:0x3f716116,al
  419731:	stc    
  419732:	cs cmp al,0x79
  419735:	cmp    BYTE PTR [edi],ah
  419737:	(bad)
  41973a:	(bad)  
  41973b:	(bad)  
  41973c:	cwde   
  41973d:	in     al,0x51
  41973f:	in     eax,dx
  419740:	xchg   edx,eax
  419741:	cmp    DWORD PTR [esi+0xc79d85e],edi
  419747:	jbe    0x4196de
  419749:	out    0x7a,al
  41974b:	div    BYTE PTR [eax]
  41974d:	scas   eax,DWORD PTR es:[edi]
  41974e:	pop    ss
  41974f:	es jbe 0x41974e
  419752:	add    DWORD PTR [ecx+ebp*8],esp
  419755:	or     esi,eax
  419757:	enter  0xa246,0x4e
  41975b:	inc    ebx
  41975c:	jl     0x4197a5
  41975e:	out    0xc1,eax
  419760:	fild   WORD PTR [eax+ebx*1+0xe]
  419764:	xchg   esp,eax
  419765:	push   ds
  419766:	pop    eax
  419767:	icebp  
  419768:	fst    DWORD PTR [edi-0x976e4cd]
  41976e:	mov    cl,0x45
  419770:	lahf   
  419771:	dec    edx
  419772:	pop    ecx
  419773:	es inc edx
  419775:	pushf  
  419776:	hlt    
  419777:	imul   eax,ebx,0xc2e84f89
  41977d:	imul   edi,DWORD PTR [ebx],0xa6755bc6
  419783:	ins    DWORD PTR es:[edi],dx
  419784:	(bad)  
  419786:	pop    esp
  419787:	mov    cl,0x62
  419789:	mov    al,0x24
  41978b:	pop    es
  41978c:	shr    BYTE PTR [edx],cl
  41978e:	fimul  DWORD PTR [edi-0x61]
  419791:	mov    eax,ds:0xd303b85
  419796:	std    
  419797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419798:	call   0x711cb6
  41979d:	inc    esp
  41979e:	pop    es
  41979f:	test   esi,ecx
  4197a1:	fbstp  TBYTE PTR ds:0x9559bd9c
  4197a7:	xchg   DWORD PTR [edi],eax
  4197a9:	inc    esi
  4197aa:	arpl   WORD PTR ss:0x9c004fee,cx
  4197b1:	fmul   QWORD PTR [esi]
  4197b3:	loop   0x4197f9
  4197b5:	pusha  
  4197b6:	mov    al,ds:0x634da842
  4197bb:	push   edx
  4197bc:	lods   al,BYTE PTR ds:[esi]
  4197bd:	xchg   ecx,eax
  4197be:	(bad)  
  4197bf:	lock pop edi
  4197c1:	mov    WORD PTR [eax-0x29],fs
  4197c4:	mov    dl,0x9
  4197c6:	pop    esp
  4197c7:	and    BYTE PTR [edi-0x477e7460],dh
  4197cd:	add    al,0x8d
  4197cf:	shl    ecx,0xbf
  4197d2:	ins    BYTE PTR es:[edi],dx
  4197d3:	test   DWORD PTR [ecx+edi*1+0x11],0x11fca8bc
  4197db:	xor    al,0x2d
  4197dd:	and    BYTE PTR [edx+esi*8-0x80],dh
  4197e1:	jne    0x41976c
  4197e3:	mov    eax,ds:0x7be0a1c7
  4197e8:	add    BYTE PTR ds:0x3c7131b7,al
  4197ee:	retf   0x3d9a
  4197f1:	xchg   edi,eax
  4197f2:	je     0x4197be
  4197f4:	in     eax,0x99
  4197f6:	sub    eax,DWORD PTR [eax]
  4197f8:	into   
  4197f9:	jg     0x4197d3
  4197fb:	out    0xa,eax
  4197fd:	add    BYTE PTR [eax],al
  4197ff:	add    BYTE PTR [eax],al
  419801:	add    BYTE PTR [ecx+ebp*8],dl
  419804:	je     0x41982a
  419806:	std    
  419807:	mov    ebp,0x2ac7f954
  41980c:	(bad)  
  41980d:	shr    bh,1
  41980f:	dec    esi
  419810:	clc    
  419811:	push   ebx
  419812:	rcl    BYTE PTR [ecx+eax*1],1
  419815:	add    bl,dh
  419817:	add    al,0x0
  419819:	add    cl,al
  41981b:	add    ebp,DWORD PTR [edi+0x749975d8]
  419821:	fild   WORD PTR [esi+0x3b5f4340]
  419827:	test   al,0x35
  419829:	cdq    
  41982a:	inc    ebp
  41982b:	cmp    dh,BYTE PTR [ebp-0x354ad545]
  419831:	push   edx
  419832:	fisttp WORD PTR [ebx-0x1bdf0709]
  419838:	call   0xc99b:0x8893f562
  41983f:	and    esi,esp
  419841:	jb     0x419863
  419843:	stc    
  419844:	push   0x35d32b91
  419849:	daa    
  41984a:	xor    DWORD PTR [eax+ebp*2],ebp
  41984d:	js     0x419820
  41984f:	xchg   esi,eax
  419850:	gs jno 0x4198d1
  419853:	aam    0x88
  419855:	out    0xf2,eax
  419857:	sbb    DWORD PTR [ebp-0x13],ecx
  41985a:	fistp  QWORD PTR [esi+eax*4]
  41985d:	mov    ah,0x65
  41985f:	inc    esi
  419860:	inc    ecx
  419861:	xor    ch,BYTE PTR [ebx+0x36]
  419864:	mov    bl,0x89
  419866:	jno    0x419892
  419868:	test   DWORD PTR [edx+0xfc933b2],ebp
  41986e:	out    dx,al
  41986f:	push   es
  419870:	adc    ebx,edi
  419872:	pusha  
  419873:	hlt    
  419874:	cmp    ebx,DWORD PTR [eax-0x5a376a47]
  41987a:	sub    ch,ah
  41987c:	sub    DWORD PTR [esi+0x7b],edi
  41987f:	outs   dx,DWORD PTR ds:[esi]
  419880:	xor    al,BYTE PTR [ebx]
  419882:	out    0xb0,al
  419884:	sti    
  419885:	push   ss
  419886:	mov    dl,0x95
  419888:	pusha  
  419889:	mov    WORD PTR [eax+eax*4+0x1d],es
  41988d:	out    0x40,eax
  41988f:	mov    dh,0x98
  419891:	xor    eax,0xa1c7e92f
  419896:	push   ebp
  419897:	mov    ds:0xb57c1dfe,eax
  41989c:	push   ss
  41989d:	sub    BYTE PTR [eax],ah
  41989f:	retf   
  4198a0:	or     ah,BYTE PTR [esi-0x1f]
  4198a3:	xchg   DWORD PTR [edi-0xb04dac2],eax
  4198a9:	xchg   ebx,eax
  4198aa:	xchg   ecx,eax
  4198ab:	cmp    BYTE PTR [ebx+0x38544512],dl
  4198b1:	ins    BYTE PTR es:[edi],dx
  4198b2:	inc    ebx
  4198b3:	push   edx
  4198b4:	mov    esp,0x308bf044
  4198b9:	sub    eax,0x3191a6e5
  4198be:	ret    
  4198bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198c0:	mov    eax,ds:0x253b0857
  4198c5:	loope  0x41990b
  4198c7:	loop   0x41991e
  4198c9:	jae    0x4198c3
  4198cb:	loopne 0x419874
  4198cd:	cmp    esp,DWORD PTR [esi+eiz*4-0x15453800]
  4198d4:	or     DWORD PTR [ebp-0x7158b1a3],ebp
  4198da:	stos   DWORD PTR es:[edi],eax
  4198db:	pop    ebx
  4198dc:	aad    0x2a
  4198de:	lahf   
  4198df:	sbb    BYTE PTR [edx-0x51],0x4d
  4198e3:	popa   
  4198e4:	mov    ch,BYTE PTR [edx+0x25]
  4198e7:	fnstsw WORD PTR [ebx-0x4d]
  4198ea:	cmp    dl,ch
  4198ec:	mov    esi,eax
  4198ee:	sbb    al,0x6b
  4198f0:	ror    ecx,cl
  4198f2:	(bad)  
  4198f3:	mul    DWORD PTR [edi-0x5ed2df60]
  4198f9:	dec    edi
  4198fa:	lods   eax,DWORD PTR ds:[esi]
  4198fb:	adc    eax,0x505ba4c2
  419900:	ss cmps BYTE PTR ss:[esi],BYTE PTR es:[edi]
  419903:	stos   BYTE PTR es:[edi],al
  419904:	mov    cl,0x6b
  419906:	xchg   esp,eax
  419907:	idiv   DWORD PTR [edx+ebp*8+0x17]
  41990b:	mov    ds:0x6f65d7c6,eax
  419910:	out    dx,eax
  419911:	xchg   esp,eax
  419912:	inc    ebp
  419913:	mov    dl,0x3
  419915:	andps  xmm5,XMMWORD PTR [edi-0x30e7d5d5]
  41991c:	out    0x16,al
  41991e:	or     BYTE PTR [edx+0x68e53092],0xde
  419925:	xchg   esi,eax
  419926:	xor    ecx,DWORD PTR [ecx+0x14]
  419929:	mov    edi,es
  41992b:	add    BYTE PTR [edx-0x15],al
  41992e:	inc    ebp
  41992f:	mov    ds:0x602fbadf,al
  419934:	mov    eax,0x6e9641d2
  419939:	mov    dh,0x58
  41993c:	mov    ah,0x1a
  41993e:	mov    ah,0x6f
  419940:	(bad)  
  419941:	pop    esp
  419942:	data16 jp 0x4199b1
  419945:	das    
  419946:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419947:	scas   al,BYTE PTR es:[edi]
  419948:	fs pop ds
  41994a:	mov    ecx,0xa4398d28
  41994f:	icebp  
  419950:	stc    
  419951:	xchg   edx,eax
  419952:	mov    WORD PTR [edi+0xa],?
  419955:	add    al,0x8f
  419957:	(bad)  
  419958:	ret    
  419959:	push   0xffffffb0
  41995b:	xor    dh,ch
  41995d:	cld    
  41995e:	xchg   ecx,eax
  41995f:	cwde   
  419960:	inc    ecx
  419961:	adc    DWORD PTR [edi-0x73],edi
  419964:	mov    bl,0x1a
  419966:	(bad)  
  419967:	aad    0xde
  419969:	push   cs
  41996a:	lahf   
  41996b:	cmp    dh,dl
  41996d:	or     dh,BYTE PTR [esi+0x79]
  419970:	iret   
  419971:	mov    al,ds:0xa4c1e9dc
  419976:	push   eax
  419977:	loope  0x4199ed
  419979:	inc    eax
  41997a:	out    0xcb,eax
  41997c:	int    0x3a
  41997e:	pushf  
  41997f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419980:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419981:	or     ebp,0x11
  419984:	adc    eax,0xaa8498f6
  419989:	jb     0x41997d
  41998b:	mov    edi,0xca7232e0
  419990:	es or  edx,ebx
  419993:	bound  edi,QWORD PTR [edx+0x30b674c7]
  419999:	xlat   BYTE PTR ds:[ebx]
  41999a:	imul   eax,DWORD PTR [edi-0x10],0x29
  41999e:	mov    ds:0xe5c8b692,eax
  4199a3:	jbe    0x419a06
  4199a5:	cs push ds
  4199a7:	aas    
  4199a8:	lea    ebp,[esp+ecx*4]
  4199ab:	repz adc DWORD PTR [eax],edi
  4199ae:	mov    al,0x49
  4199b0:	lahf   
  4199b1:	or     al,0x5
  4199b3:	and    DWORD PTR [ebp+0x74db08b8],edi
  4199b9:	scas   al,BYTE PTR es:[edi]
  4199ba:	mov    fs,ecx
  4199bc:	push   esp
  4199bd:	jns    0x41994e
  4199bf:	shl    DWORD PTR [ebx+0x3a62dfa1],1
  4199c5:	imul   edx,DWORD PTR [edi-0x41ee3b4b],0x594cf9ca
  4199cf:	loop   0x4199d4
  4199d1:	int3   
  4199d2:	jbe    0x419a2c
  4199d4:	sahf   
  4199d5:	rcl    DWORD PTR [ebx+edx*2-0x353b02d1],0xd2
  4199dd:	or     al,0x53
  4199df:	das    
  4199e0:	add    eax,0x1f29cb61
  4199e5:	mov    ebx,0xb90813da
  4199ea:	xchg   esp,eax
  4199eb:	xor    eax,0x23c4d5be
  4199f0:	xlat   BYTE PTR ds:[ebx]
  4199f1:	cmp    eax,0x57dc3a2
  4199f6:	stos   DWORD PTR es:[edi],eax
  4199f7:	adc    bl,bh
  4199f9:	add    esi,DWORD PTR [edi+eiz*8]
  4199fc:	cmp    dh,BYTE PTR [esi-0x4b]
  4199ff:	jbe    0x419a6f
  419a01:	push   eax
  419a02:	adc    al,BYTE PTR [bx+di]
  419a05:	or     eax,0x5e87f561
  419a0a:	sub    eax,0x6b99d239
  419a0f:	aad    0x1e
  419a11:	loope  0x419a49
  419a13:	shl    dh,0xf2
  419a16:	mov    esp,0x561988e3
  419a1b:	ror    BYTE PTR [edx-0x51ea0a0],1
  419a21:	xor    al,0x39
  419a23:	fsub   DWORD PTR [edi+eiz*1]
  419a26:	ror    eax,cl
  419a28:	loope  0x4199b8
  419a2a:	loopne 0x4199ff
  419a2c:	in     eax,dx
  419a2d:	xchg   ebx,esi
  419a2f:	bound  ebp,QWORD PTR [eax+0x4a]
  419a32:	mov    DWORD PTR [ecx+ebx*2-0x37],0xa0794d79
  419a3a:	inc    eax
  419a3b:	jnp    0x4199e7
  419a3d:	or     dl,BYTE PTR [ebx]
  419a3f:	jb     0x419a9d
  419a41:	sti    
  419a42:	adc    al,0xc
  419a44:	mov    bl,0xef
  419a46:	and    DWORD PTR [esi-0x634e3543],0x1f36777c
  419a50:	mov    dh,BYTE PTR [ebx+0x3d]
  419a53:	(bad)  
  419a54:	cli    
  419a55:	rcr    BYTE PTR [eax-0x20e85a61],cl
  419a5b:	mov    ?,WORD PTR [ecx+0x3f107cc]
  419a61:	push   0x1cc706
  419a66:	ret    0x5885
  419a69:	jle    0x419a7a
  419a6b:	inc    ecx
  419a6c:	dec    ecx
  419a6d:	pop    ecx
  419a6e:	(bad)  
  419a6f:	retf   0xf1c6
  419a72:	mov    ds:0x2ba44f3b,eax
  419a77:	jb     0x419a22
  419a79:	jg     0x419abd
  419a7b:	or     edx,edx
  419a7d:	nop
  419a7e:	aaa    
  419a7f:	add    DWORD PTR [ecx],ebx
  419a81:	jbe    0x419a4c
  419a83:	adc    cl,dh
  419a85:	pop    ds
  419a86:	pop    ds
  419a87:	and    al,0xcd
  419a89:	scas   eax,DWORD PTR es:[edi]
  419a8a:	ret    
  419a8b:	mov    al,0xf1
  419a8d:	mov    esp,cs
  419a8f:	jbe    0x419a1a
  419a91:	stos   DWORD PTR es:[edi],eax
  419a92:	push   0xffffff9f
  419a94:	hlt    
  419a95:	adc    DWORD PTR [esi],esp
  419a97:	test   DWORD PTR [esi-0x2b],esp
  419a9a:	jns    0x419add
  419a9c:	pop    esi
  419a9d:	mov    ah,0x4c
  419a9f:	dec    ebp
  419aa0:	popf   
  419aa1:	and    DWORD PTR [edx-0x40c8c6a4],ecx
  419aa7:	out    0xf0,al
  419aa9:	sbb    eax,0xa2268365
  419aae:	out    0x33,al
  419ab0:	mov    eax,0xe7fd43c5
  419ab5:	out    0xe1,al
  419ab7:	ja     0x419a8d
  419ab9:	push   0x5cd5ed68
  419abe:	(bad)  
  419abf:	dec    eax
  419ac0:	inc    ebp
  419ac1:	dec    esi
  419ac2:	cmc    
  419ac3:	or     al,0x1a
  419ac5:	fadd   DWORD PTR [eax-0x19447c2f]
  419acb:	fistp  DWORD PTR [esi]
  419acd:	test   al,0x98
  419acf:	dec    edx
  419ad0:	ficomp WORD PTR [edx+ebp*1]
  419ad3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ad4:	cmc    
  419ad5:	dec    ebx
  419ad6:	jmp    0x68ee:0x4250aa54
  419add:	fwait
  419ade:	pop    esi
  419adf:	lea    ebp,[ebx]
  419ae1:	xor    DWORD PTR [eax+0x30691e6e],ebp
  419ae7:	das    
  419ae8:	fwait
  419ae9:	push   edi
  419aea:	stos   DWORD PTR es:[edi],eax
  419aeb:	mov    eax,0x699074d9
  419af0:	shr    BYTE PTR [eax-0x781db14a],1
  419af6:	popf   
  419af7:	ret    
  419af8:	xchg   ebx,eax
  419af9:	inc    edx
  419afa:	mov    esi,edx
  419afc:	mov    edi,0x81fe811a
  419b01:	ret    0x6f40
  419b04:	(bad)  
  419b05:	rcr    DWORD PTR [edx],cl
  419b07:	mov    al,0xf4
  419b09:	call   0xf9d0f762
  419b0e:	call   0xc90b165c
  419b13:	push   es
  419b14:	jns    0x419b6a
  419b16:	cmp    esp,DWORD PTR [esi-0xfafd62a]
  419b1c:	xor    BYTE PTR [ebx-0xd],0x25
  419b20:	sbb    DWORD PTR [ecx-0x78abc746],0x572067a3
  419b2a:	and    eax,0xd8996b25
  419b2f:	ret    
  419b30:	pusha  
  419b31:	or     DWORD PTR [edx-0x4ac10ca8],eax
  419b37:	cmp    esp,edi
  419b39:	pop    edi
  419b3a:	shl    BYTE PTR [eax-0x52],1
  419b3d:	(bad)  
  419b3e:	mov    dh,0xd6
  419b40:	fxch   st(7)
  419b42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b43:	mov    dl,0x1e
  419b45:	(bad)  
  419b46:	mov    ch,0x33
  419b48:	xchg   DWORD PTR [esp+ebx*8-0x14dcccd8],ebp
  419b4f:	out    dx,eax
  419b50:	pop    edx
  419b51:	or     DWORD PTR [ebx+0x22],esi
  419b54:	pop    esi
  419b55:	xor    bh,al
  419b57:	fdiv   QWORD PTR [edi]
  419b59:	jno    0x419bc6
  419b5b:	xchg   ebp,eax
  419b5c:	mov    dh,0x75
  419b5e:	mov    WORD PTR [edx+0x39],ds
  419b61:	popf   
  419b62:	push   esi
  419b63:	jo     0x419bdb
  419b65:	ss push ds
  419b67:	loop   0x419bb6
  419b69:	xchg   BYTE PTR [ebp+0x6eb98d00],cl
  419b6f:	cmp    eax,0x62680a5e
  419b74:	(bad)  
  419b76:	dec    dh
  419b78:	fs in  al,0x14
  419b7b:	push   esp
  419b7c:	jbe    0x419b82
  419b7e:	xlat   BYTE PTR ds:[ebx]
  419b7f:	jl     0x419b9b
  419b81:	sbb    DWORD PTR [edi+0x46274e3d],ebx
  419b87:	xor    ch,bl
  419b89:	(bad)  
  419b8a:	jmp    0x419b1d
  419b8c:	and    eax,0xb80abffc
  419b91:	xchg   edi,eax
  419b92:	sub    dl,BYTE PTR [ebx+ecx*4]
  419b95:	xchg   ebx,eax
  419b96:	and    ebx,edi
  419b98:	cld    
  419b99:	pop    ds
  419b9a:	pop    edi
  419b9b:	pushf  
  419b9c:	pop    ecx
  419b9d:	(bad)  
  419b9e:	pop    esi
  419b9f:	jae    0x419b72
  419ba1:	add    dh,BYTE PTR [ebx-0x4669d9d0]
  419ba7:	dec    edi
  419ba8:	pop    ds
  419ba9:	adc    al,BYTE PTR [ebx+0xe]
  419bac:	jp     0x419c1d
  419bae:	loope  0x419b32
  419bb0:	pusha  
  419bb1:	sub    BYTE PTR [ebx-0x248580a3],dl
  419bb7:	(bad)  [edi+ebx*8]
  419bba:	pop    es
  419bbb:	cmp    esp,DWORD PTR [edx-0x77]
  419bbe:	iret   
  419bbf:	pop    ss
  419bc0:	aam    0x52
  419bc2:	mov    edi,0x37cd16c1
  419bc7:	out    0x6f,al
  419bc9:	leave  
  419bca:	dec    edx
  419bcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bcc:	or     DWORD PTR [ebx+0xdc44236],eax
  419bd2:	pop    edx
  419bd3:	gs mov esi,0x81e8590e
  419bd9:	sub    eax,0x99838bae
  419bde:	sahf   
  419bdf:	adc    eax,0xa8200f0f
  419be4:	mov    bh,BYTE PTR [ebp+0x17b61150]
  419bea:	pop    ss
  419beb:	arpl   WORD PTR [ecx],cx
  419bed:	mov    eax,ds:0xbee53b36
  419bf2:	push   eax
  419bf3:	mov    ds:0xd991c3aa,al
  419bf8:	fisttp QWORD PTR [edi+esi*8+0x7c]
  419bfc:	stc    
  419bfd:	dec    ecx
  419bfe:	push   0xf73407b0
  419c03:	push   ds
  419c04:	cdq    
  419c05:	arpl   WORD PTR [edi],sp
  419c07:	mov    ds:0xb321bf2b,eax
  419c0c:	pop    esi
  419c0d:	enter  0x5810,0xc7
  419c11:	mov    bh,0xd0
  419c13:	cwde   
  419c14:	std    
  419c15:	fwait
  419c16:	popa   
  419c17:	inc    esi
  419c18:	mov    ds:0x9336602,al
  419c1d:	xchg   ebx,eax
  419c1e:	idiv   BYTE PTR [esi+0xc]
  419c21:	or     ecx,DWORD PTR [ecx+0x46d1e2d9]
  419c27:	or     DWORD PTR [ecx],edx
  419c29:	imul   esi,DWORD PTR ss:[ebp-0x6b5f139a],0x5e
  419c31:	jns    0x419c84
  419c33:	std    
  419c34:	ins    DWORD PTR es:[edi],dx
  419c35:	sbb    DWORD PTR [ecx+edi*1-0x6687feea],0x690ff443
  419c40:	mov    al,ds:0xc8579790
  419c45:	xor    eax,0xe922f720
  419c4a:	bound  eax,QWORD PTR [edi+0x50bb26dd]
  419c50:	push   edi
  419c51:	iret   
  419c52:	ffreep st(7)
  419c54:	inc    edx
  419c55:	adc    al,0xd2
  419c57:	fld    TBYTE PTR [esi-0x41]
  419c5a:	fsubr  st,st(6)
  419c5c:	jmp    0x1e4b:0xe6303839
  419c63:	jmp    0xd4aec6da
  419c68:	pusha  
  419c69:	cs dec ecx
  419c6b:	mov    ds,WORD PTR ds:0x320d6ca4
  419c71:	pusha  
  419c72:	(bad)  
  419c73:	fidiv  WORD PTR [esi]
  419c75:	ret    0xf5d0
  419c78:	outs   dx,BYTE PTR ds:[esi]
  419c79:	jno    0x419c7b
  419c7b:	out    0x90,al
  419c7d:	iret   
  419c7e:	push   ds
  419c7f:	out    0x2b,eax
  419c81:	mov    ss,ecx
  419c83:	inc    ebx
  419c84:	sub    eax,0x7d6f2c3f
  419c89:	stc    
  419c8a:	jno    0x419c5b
  419c8c:	shl    DWORD PTR [ebx-0x48],0x8
  419c90:	cmp    al,0xca
  419c92:	neg    DWORD PTR [ebx-0x619e4164]
  419c98:	sbb    eax,0xb181dcd3
  419c9d:	xchg   ebp,eax
  419c9e:	mov    ch,0x6
  419ca0:	enter  0xc7e7,0x22
  419ca4:	ins    BYTE PTR es:[edi],dx
  419ca5:	mov    bh,0xd6
  419ca7:	cmp    edx,DWORD PTR [edi-0x45]
  419caa:	inc    edi
  419cab:	jo     0x419c67
  419cad:	pop    ss
  419cae:	imul   ecx,DWORD PTR [ebx],0xffffffce
  419cb1:	mov    esi,0x81780d70
  419cb6:	sbb    dl,BYTE PTR [esi+0x26]
  419cb9:	div    edx
  419cbb:	xchg   esp,eax
  419cbc:	popa   
  419cbd:	enter  0xdcbc,0x16
  419cc1:	jmp    0x419d33
  419cc3:	div    ah
  419cc5:	rol    DWORD PTR [ebp-0x68],cl
  419cc8:	xchg   edx,eax
  419cc9:	pop    ds
  419cca:	lods   al,BYTE PTR ds:[esi]
  419ccb:	inc    ecx
  419ccc:	jo     0x419cb9
  419cce:	lock push ds
  419cd0:	mov    eax,0x7d4f8ddc
  419cd5:	pushf  
  419cd6:	and    ebx,edx
  419cd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cd9:	adc    eax,ebp
  419cdb:	pop    ss
  419cdc:	retf   
  419cdd:	lock hlt 
  419cdf:	or     dh,BYTE PTR [ecx]
  419ce1:	cli    
  419ce2:	xchg   edi,eax
  419ce3:	mov    ds:0xc8b00cb5,al
  419ce8:	loopne 0x419d66
  419cea:	in     al,dx
  419ceb:	mov    ch,0x3
  419ced:	xor    DWORD PTR [edi],esi
  419cef:	scas   al,BYTE PTR es:[edi]
  419cf0:	fnstenv [eax-0x202fd57e]
  419cf6:	xor    eax,DWORD PTR [eax]
  419cf8:	cmp    eax,0x863efa
  419cfd:	idiv   BYTE PTR [ebx]
  419cff:	sub    BYTE PTR [ebx],ch
  419d01:	mov    DWORD PTR [ebp+0x30],ebx
  419d04:	or     al,BYTE PTR [eax]
  419d06:	add    eax,0xfee166f9
  419d0b:	fwait
  419d0c:	xchg   ecx,eax
  419d0d:	add    BYTE PTR [eax],al
  419d0f:	add    BYTE PTR [eax],al
  419d11:	add    BYTE PTR [eax-0x329b3fbb],cl
  419d17:	in     eax,0xac
  419d19:	in     eax,dx
  419d1a:	or     dh,BYTE PTR [ebp-0xe91f884]
  419d20:	jl     0x419d9c
  419d22:	ret    
  419d23:	sbb    DWORD PTR [ecx],eax
  419d25:	add    bl,dh
  419d27:	add    al,0x0
  419d29:	add    BYTE PTR [ebp+0x1f],cl
  419d2c:	iret   
  419d2d:	push   0x8bacccd
  419d32:	push   ebx
  419d33:	add    DWORD PTR [ebx],eax
  419d35:	das    
  419d36:	add    DWORD PTR [eax],ebp
  419d38:	sub    BYTE PTR [esp+eiz*8],al
  419d3b:	lds    eax,FWORD PTR fs:[edx-0x4a1ae668]
  419d42:	or     ebp,DWORD PTR ds:[ebx+0x41]
  419d46:	(bad)  
  419d47:	mov    ebx,0xc432fc67
  419d4c:	sbb    cl,BYTE PTR ds:0xeefb3c96
  419d52:	dec    ebp
  419d53:	inc    ebx
  419d54:	push   ecx
  419d55:	retf   0x4ea6
  419d58:	loope  0x419d62
  419d5a:	adc    eax,0xbaec0263
  419d5f:	loopne 0x419d20
  419d61:	and    ebx,eax
  419d63:	mov    ch,0x8f
  419d65:	or     al,0xe8
  419d67:	xor    al,0x9
  419d69:	pop    ecx
  419d6a:	adc    edx,DWORD PTR [ecx]
  419d6c:	neg    BYTE PTR [edi-0x74edb045]
  419d72:	dec    esi
  419d73:	xchg   DWORD PTR [esi],esp
  419d75:	cmp    edi,DWORD PTR [edx-0x4f6c96d1]
  419d7b:	push   esp
  419d7c:	(bad)  
  419d7d:	popf   
  419d7e:	mov    WORD PTR [ecx],?
  419d80:	ins    DWORD PTR es:[edi],dx
  419d81:	nop
  419d82:	sar    DWORD PTR [ebx+ebp*1-0x92d997],0x88
  419d8a:	std    
  419d8b:	mov    fs,ebp
  419d8d:	ret    0xa34d
  419d90:	pop    es
  419d91:	and    ecx,0xe801e564
  419d97:	pop    ebx
  419d98:	mov    BYTE PTR [ebx+0x31666099],bh
  419d9e:	cmp    bh,BYTE PTR ds:0x94b9c0bf
  419da4:	mov    cl,0x1e
  419da6:	fst    QWORD PTR [edi]
  419da8:	hlt    
  419da9:	or     eax,0xbbc3f14f
  419dae:	aas    
  419daf:	dec    edx
  419db0:	aad    0x8e
  419db2:	lods   al,BYTE PTR ds:[esi]
  419db3:	scas   al,BYTE PTR es:[edi]
  419db4:	aam    0x9
  419db6:	fs jp  0x419dd3
  419db9:	add    ch,BYTE PTR [eax+0x5e]
  419dbc:	stos   DWORD PTR es:[edi],eax
  419dbd:	ss jbe 0x419dbe
  419dc0:	cmp    al,0x64
  419dc2:	ficom  WORD PTR [ebx-0x29]
  419dc5:	add    esi,DWORD PTR [esi+0x62]
  419dc8:	mov    ebx,0x3f395df6
  419dcd:	nop
  419dce:	sar    BYTE PTR [edx],0xcd
  419dd1:	cld    
  419dd2:	adc    al,0x9e
  419dd4:	dec    ecx
  419dd5:	ror    BYTE PTR [edx],cl
  419dd7:	jecxz  0x419d78
  419dd9:	or     eax,0x87cdb78c
  419dde:	int3   
  419ddf:	scas   al,BYTE PTR es:[edi]
  419de0:	icebp  
  419de1:	dec    ebx
  419de2:	pop    edi
  419de3:	jge    0x419da5
  419de5:	outs   dx,DWORD PTR ds:[esi]
  419de6:	loopne 0x419dca
  419de8:	jmp    0x374e:0x624d4d5e
  419def:	adc    dh,BYTE PTR [eax]
  419df1:	leave  
  419df2:	loop   0x419d79
  419df4:	repz xor DWORD PTR [ecx+0x1b],edx
  419df8:	mov    ds,edi
  419dfa:	dec    edx
  419dfb:	scas   eax,DWORD PTR es:[edi]
  419dfc:	fldcw  WORD PTR [eax-0x13]
  419e00:	ds dec edi
  419e02:	popf   
  419e03:	cmp    al,0x13
  419e05:	sbb    eax,0xf04233e1
  419e0a:	out    dx,eax
  419e0b:	inc    ebx
  419e0c:	std    
  419e0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e0e:	daa    
  419e0f:	outs   dx,BYTE PTR ds:[esi]
  419e10:	daa    
  419e11:	aad    0x1e
  419e13:	mov    dl,0x31
  419e15:	sbb    edx,DWORD PTR [eax+ebp*8-0x63]
  419e19:	adc    DWORD PTR [edi+0x5614f72b],ebp
  419e1f:	test   BYTE PTR [edi+0x64b8ede],ch
  419e25:	hlt    
  419e26:	out    0x7,al
  419e28:	lea    ebp,gs:[ecx-0x5f]
  419e2c:	es (bad) 
  419e2e:	pushf  
  419e2f:	sub    edx,esp
  419e31:	lds    ebx,FWORD PTR [edi]
  419e33:	add    al,0x9c
  419e35:	mov    bl,0x9
  419e37:	gs mov dl,0xdc
  419e3a:	scas   eax,DWORD PTR es:[edi]
  419e3b:	mov    dh,0x97
  419e3d:	mov    eax,0xad24d2c6
  419e42:	mov    esp,0x1d90f358
  419e47:	daa    
  419e48:	aas    
  419e49:	retf   
  419e4a:	outs   dx,BYTE PTR ds:[esi]
  419e4b:	ret    
  419e4c:	aaa    
  419e4d:	fs repz sti 
  419e50:	jb     0x419e64
  419e52:	inc    eax
  419e53:	sbb    BYTE PTR [esi-0xd6eba6d],dh
  419e59:	and    eax,DWORD PTR [edx-0x666eebfe]
  419e5f:	mov    al,ds:0x56c84a86
  419e64:	jo     0x419e6a
  419e66:	sbb    DWORD PTR ds:0x5ef0364a,eax
  419e6c:	xchg   ebp,eax
  419e6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e6e:	mov    DWORD PTR [ebx-0x4],eax
  419e71:	inc    esi
  419e72:	cmp    ebp,esp
  419e74:	inc    edx
  419e75:	inc    edx
  419e76:	cmp    DWORD PTR [esi],edx
  419e78:	enter  0x771c,0x80
  419e7c:	ret    0xcf34
  419e7f:	mov    WORD PTR [ebx],es
  419e81:	addr16 xchg ebp,eax
  419e83:	out    0x66,al
  419e85:	sub    eax,0x702a2af
  419e8a:	add    BYTE PTR [ebx+esi*2],dl
  419e8d:	fadd   QWORD PTR [eax+0x43]
  419e90:	fdiv   QWORD PTR [esi+esi*2]
  419e93:	test   DWORD PTR [eax-0x36],esi
  419e96:	push   cs
  419e97:	mov    esi,0x8b19107d
  419e9c:	jmp    0x419ef9
  419e9e:	and    DWORD PTR [eax-0x7a],edx
  419ea1:	jg     0x419efb
  419ea3:	shl    ebx,0xcb
  419ea6:	jns    0x419e95
  419ea8:	ss xchg edi,eax
  419eaa:	aad    0xde
  419eac:	pop    ecx
  419ead:	sub    DWORD PTR gs:[ebx],esp
  419eb0:	jp     0x419f13
  419eb2:	jbe    0x419f02
  419eb4:	int3   
  419eb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419eb6:	xlat   BYTE PTR ds:[ebx]
  419eb7:	inc    ebx
  419eb8:	mov    ds:0xa8c90344,al
  419ebd:	pop    ecx
  419ebe:	sub    dl,BYTE PTR [esi-0x4c]
  419ec1:	shl    BYTE PTR [edx],1
  419ec3:	call   0xb592eff1
  419ec8:	fild   DWORD PTR [esi+0x73]
  419ecb:	test   al,0x46
  419ecd:	ror    DWORD PTR [edi-0x41a539c3],cl
  419ed3:	enter  0xf2b2,0x3f
  419ed7:	sub    BYTE PTR [edi+0x3d],dh
  419eda:	into   
  419edb:	jb     0x419eca
  419edd:	je     0x419ee4
  419edf:	cmp    DWORD PTR [eax-0x75],0x43
  419ee3:	xchg   esp,eax
  419ee4:	leave  
  419ee5:	ds push cs
  419ee7:	push   es
  419ee8:	pop    esi
  419ee9:	pop    esp
  419eea:	pop    es
  419eeb:	and    BYTE PTR [esi],ch
  419eed:	movq   mm7,mm5
  419ef0:	aam    0x93
  419ef2:	xor    BYTE PTR [eax+0x4],0x33
  419ef6:	bound  eax,QWORD PTR [ecx+0x3b0c7c78]
  419efc:	jge    0x419eab
  419efe:	cdq    
  419eff:	jmp    0x419f2f
  419f01:	adc    ecx,esp
  419f03:	or     BYTE PTR [edx],bh
  419f05:	scas   al,BYTE PTR es:[edi]
  419f06:	push   ebx
  419f07:	jmp    0x419e93
  419f09:	pop    esp
  419f0a:	dec    ecx
  419f0b:	dec    ebp
  419f0c:	test   BYTE PTR [edx],bh
  419f0e:	scas   al,BYTE PTR es:[edi]
  419f0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f10:	mov    dh,ch
  419f12:	inc    esp
  419f13:	mov    cl,0xe0
  419f15:	sbb    eax,0x6d
  419f18:	out    dx,al
  419f19:	xchg   esp,eax
  419f1a:	dec    eax
  419f1b:	js     0x419f46
  419f1d:	jmp    0xa1ca74e4
  419f22:	retf   
  419f23:	inc    esp
  419f24:	jne    0x419ed3
  419f26:	mov    cl,0x78
  419f28:	js     0x419ee3
  419f2a:	rol    BYTE PTR [edi-0x7e],0xf1
  419f2e:	mov    bh,0x44
  419f30:	or     BYTE PTR [edx+0x62bae152],bl
  419f36:	cmp    eax,0x31eeb397
  419f3b:	mov    ebx,0xd720ef63
  419f40:	push   ebp
  419f41:	jge    0x419f21
  419f43:	xchg   ebp,eax
  419f44:	enter  0x35d1,0x3e
  419f48:	fwait
  419f49:	jbe    0x419ef6
  419f4b:	mov    BYTE PTR [ebx-0x1495cdf1],ch
  419f51:	pop    edi
  419f52:	or     ch,ah
  419f54:	ds call 0xe0ac:0x39f2fe3a
  419f5c:	aam    0xcd
  419f5e:	in     al,0xe
  419f60:	dec    DWORD PTR [ebp-0x23]
  419f63:	jle    0x419f7c
  419f65:	dec    edi
  419f66:	mov    ?,WORD PTR [edi]
  419f68:	pop    ds
  419f69:	or     al,0x9a
  419f6b:	xchg   esp,eax
  419f6c:	shl    DWORD PTR [esi-0x16],0x37
  419f70:	cmp    cl,BYTE PTR [edi]
  419f72:	sub    BYTE PTR [ebx+0x3d506a3f],cl
  419f78:	shl    BYTE PTR [eax+esi*4],1
  419f7b:	scas   al,BYTE PTR es:[edi]
  419f7c:	cmp    al,0xd3
  419f7e:	or     esi,DWORD PTR [edi+0x6212ce8b]
  419f84:	cmp    ebx,ebx
  419f86:	xchg   esp,eax
  419f87:	mov    dh,0x24
  419f89:	mov    ebp,0x68978d42
  419f8e:	int    0x98
  419f90:	mov    ebx,0x3c6ca80c
  419f95:	dec    esp
  419f96:	xor    esp,esi
  419f98:	stc    
  419f99:	pop    esi
  419f9a:	dec    edi
  419f9b:	lds    ebp,FWORD PTR [ebx+0x2e032fde]
  419fa1:	add    eax,ebx
  419fa3:	xor    ch,BYTE PTR [eax-0x2d]
  419fa6:	(bad)  
  419fa7:	push   esi
  419fa8:	ret    
  419fa9:	ds js  0x419f63
  419fac:	dec    ebx
  419fad:	je     0x419fe8
  419faf:	or     cl,BYTE PTR [edx-0x22]
  419fb2:	xor    edi,DWORD PTR [esi+0x8]
  419fb5:	or     al,BYTE PTR [eax-0x7222d628]
  419fbb:	pop    ebx
  419fbc:	sbb    BYTE PTR [edx+0x1d225803],dh
  419fc2:	xor    DWORD PTR [esi+0x60],0x5d714dbc
  419fc9:	sbb    eax,0xaa79d54c
  419fce:	popf   
  419fcf:	retf   0x2578
  419fd2:	imul   ecx,DWORD PTR [esi],0xffffffed
  419fd5:	mov    esp,cs
  419fd7:	mov    ds:0x487d9f04,eax
  419fdc:	in     eax,dx
  419fdd:	jmp    0xc666ba8e
  419fe2:	je     0x419f7c
  419fe4:	gs inc eax
  419fe6:	xor    bh,BYTE PTR [edx+0x6c]
  419fe9:	jno    0x41a056
  419feb:	jo     0x41a02f
  419fed:	into   
  419fee:	lahf   
  419fef:	jno    0x41a030
  419ff1:	xor    DWORD PTR [edi],esi
  419ff3:	jge    0x41a06a
  419ff5:	inc    ebx
  419ff6:	and    al,0x86
  419ff8:	push   ds
  419ff9:	loop   0x419fd7
  419ffb:	test   eax,0xab5ac0f3
  41a000:	aam    0xc1
  41a002:	jns    0x41a042
  41a004:	adc    eax,0x8232ae55
  41a009:	and    eax,0x7151f304
  41a00e:	stos   BYTE PTR es:[edi],al
  41a00f:	fistp  QWORD PTR [ecx]
  41a011:	fcomp  DWORD PTR [ebx-0x35c7efe9]
  41a017:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a018:	xchg   ebx,eax
  41a019:	xor    eax,0x46ada118
  41a01e:	add    dl,BYTE PTR [ebx-0x31]
  41a021:	imul   ebx,DWORD PTR gs:[edi-0x59e54f6e],0x57f28de8
  41a02c:	ror    BYTE PTR [edi+0x42],0xc1
  41a030:	push   esp
  41a031:	sub    cl,0xe7
  41a034:	jnp    0x41a068
  41a036:	dec    esi
  41a037:	or     eax,0x600d7e7e
  41a03c:	mov    ch,0xf7
  41a03e:	in     eax,dx
  41a03f:	xchg   ebp,eax
  41a040:	addr16 sti 
  41a042:	std    
  41a043:	mov    al,ds:0xbd0e8bda
  41a048:	mov    al,0xb1
  41a04a:	cs mov bh,0x53
  41a04d:	sub    al,0xa
  41a04f:	cmp    eax,0x5becfd10
  41a054:	sbb    DWORD PTR [esi+0x40],0xc08d4cf3
  41a05b:	icebp  
  41a05c:	xor    eax,0x20c7020a
  41a061:	(bad)  
  41a062:	imul   ebp,edi,0xf5aa55d6
  41a068:	xor    esi,ecx
  41a06a:	fmul   QWORD PTR cs:[esp+eiz*8-0x5a]
  41a06f:	repz and ch,BYTE PTR [esi-0x11]
  41a073:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a074:	pop    ebx
  41a075:	mov    eax,ds:0x4db0c336
  41a07a:	fs (bad) 
  41a07d:	push   ebp
  41a07e:	ins    BYTE PTR es:[edi],dx
  41a07f:	rcr    BYTE PTR [ebx],1
  41a081:	ins    BYTE PTR es:[edi],dx
  41a082:	loop   0x41a017
  41a084:	(bad)  
  41a085:	loopne 0x41a00c
  41a087:	imul   esi,DWORD PTR [esi+0x7b6993f0],0x6e
  41a08e:	gs in  eax,0x7
  41a091:	sbb    esp,0x71
  41a094:	imul   DWORD PTR [edi-0x33edd487]
  41a09a:	lahf   
  41a09b:	dec    eax
  41a09c:	test   eax,0x3639474b
  41a0a1:	pop    esp
  41a0a2:	pop    ss
  41a0a3:	cmp    BYTE PTR [edi-0x43],bl
  41a0a6:	dec    ecx
  41a0a7:	pop    ebx
  41a0a8:	dec    ecx
  41a0a9:	cmc    
  41a0aa:	lods   al,BYTE PTR ds:[esi]
  41a0ab:	lahf   
  41a0ac:	lea    edi,[ebx+edi*2-0x39]
  41a0b0:	or     BYTE PTR [ecx-0x1b35fc8],ah
  41a0b6:	inc    esi
  41a0b7:	jns    0x41a119
  41a0b9:	cmp    BYTE PTR [ebp+0x1fe47195],bl
  41a0bf:	pop    es
  41a0c0:	mov    edx,eax
  41a0c2:	sub    DWORD PTR [ecx],ebx
  41a0c4:	push   edi
  41a0c5:	cmp    bh,dh
  41a0c7:	lods   eax,DWORD PTR ds:[esi]
  41a0c8:	inc    ecx
  41a0c9:	mov    ebp,0x7ce00581
  41a0ce:	or     eax,0x1cbcd831
  41a0d3:	enter  0xa379,0xdc
  41a0d7:	fld    TBYTE PTR [ebp-0x57]
  41a0da:	mov    edx,0x6b196fb7
  41a0df:	mov    dh,0xd2
  41a0e1:	xor    dl,dl
  41a0e3:	aaa    
  41a0e4:	jmp    0x41a0c9
  41a0e6:	jae    0x41a145
  41a0e8:	inc    ecx
  41a0e9:	mov    ds:0xd543b334,eax
  41a0ee:	mov    esi,0x3b8209e5
  41a0f3:	mov    esp,0x56b42dd3
  41a0f8:	bound  ecx,QWORD PTR [edi+0x5814db26]
  41a0fe:	xor    DWORD PTR [ecx+0x43fd688],ebp
  41a104:	dec    ecx
  41a105:	and    ah,BYTE PTR [esi]
  41a107:	in     eax,dx
  41a108:	xchg   edx,eax
  41a109:	pop    esi
  41a10a:	int    0x31
  41a10c:	mov    eax,ds:0xf6994d07
  41a111:	dec    edi
  41a112:	hlt    
  41a113:	mov    edi,0x7740b513
  41a118:	and    al,0x26
  41a11a:	cdq    
  41a11b:	cmp    al,bl
  41a11d:	jle    0x41a10a
  41a11f:	mov    ah,cl
  41a121:	(bad)  
  41a122:	fcom   DWORD PTR [eax]
  41a124:	out    dx,al
  41a125:	dec    ecx
  41a126:	xchg   ebx,ecx
  41a128:	(bad)  
  41a129:	fiadd  WORD PTR [esi-0x4d83a8fc]
  41a12f:	sub    DWORD PTR [edi+0x654416b9],edx
  41a135:	xor    BYTE PTR ds:0xaa37d8d5,dl
  41a13b:	clc    
  41a13c:	pop    es
  41a13d:	cli    
  41a13e:	mov    es,ebx
  41a140:	push   DWORD PTR [ebx-0x7b]
  41a143:	push   es
  41a144:	sub    al,0x77
  41a146:	push   edx
  41a147:	fwait
  41a148:	mov    dh,0xbc
  41a14a:	pop    ebx
  41a14b:	xchg   BYTE PTR [ebp-0x45],ah
  41a14e:	outs   dx,DWORD PTR ds:[esi]
  41a14f:	and    eax,0x9494116d
  41a154:	cwde   
  41a155:	retf   
  41a156:	test   BYTE PTR [eax],ah
  41a158:	and    al,0x7
  41a15a:	xchg   ecx,eax
  41a15b:	push   cs
  41a15c:	pop    ebp
  41a15d:	xchg   edx,eax
  41a15e:	mov    eax,0x7f619eaa
  41a163:	(bad)  
  41a164:	push   edi
  41a165:	sub    cl,BYTE PTR [edi]
  41a167:	sub    al,0x58
  41a169:	push   edi
  41a16a:	mov    ecx,DWORD PTR [ecx]
  41a16c:	sub    DWORD PTR [edx+0x6e8d59e2],edx
  41a172:	and    DWORD PTR [ebx],edi
  41a174:	or     cl,dh
  41a176:	stos   DWORD PTR es:[edi],eax
  41a177:	dec    ecx
  41a178:	jl     0x41a1af
  41a17a:	test   BYTE PTR [ecx+edx*1-0x57],ah
  41a17e:	mov    WORD PTR [esi-0x6b],ds
  41a181:	inc    ebx
  41a182:	xchg   ecx,eax
  41a183:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a184:	cmp    ah,cl
  41a186:	mov    BYTE PTR [edi-0x1f],bh
  41a189:	dec    esp
  41a18a:	mov    ah,BYTE PTR [edi+0x4c]
  41a18d:	pop    ds
  41a18e:	cmp    DWORD PTR [ebx],esi
  41a190:	outs   dx,DWORD PTR ds:[esi]
  41a191:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a192:	sahf   
  41a193:	mov    edi,0x7a15021d
  41a198:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a199:	push   esp
  41a19a:	sahf   
  41a19b:	ja     0x41a16d
  41a19d:	ds je  0x41a218
  41a1a0:	retf   
  41a1a1:	inc    ecx
  41a1a2:	xor    dh,bh
  41a1a4:	ss daa 
  41a1a6:	pop    es
  41a1a7:	sbb    al,0xef
  41a1a9:	jmp    0x41a1a5
  41a1ab:	mov    eax,0x3d41f28d
  41a1b0:	adc    BYTE PTR [esi],bh
  41a1b2:	aam    0x3f
  41a1b4:	jno    0x41a17d
  41a1b6:	sub    ebx,DWORD PTR [edx-0x15]
  41a1b9:	pusha  
  41a1ba:	dec    esp
  41a1bb:	and    DWORD PTR [ecx],ebp
  41a1bd:	cli    
  41a1be:	out    dx,eax
  41a1bf:	jbe    0x41a16c
  41a1c1:	push   ss
  41a1c2:	aam    0xd9
  41a1c4:	pop    edi
  41a1c5:	(bad)  
  41a1c6:	or     eax,0x81482fb4
  41a1cb:	pop    edi
  41a1cc:	ds jbe 0x41a1c9
  41a1cf:	mov    ebx,0x5ae7f787
  41a1d4:	xor    ebx,DWORD PTR [esi-0x2052e032]
  41a1da:	jb     0x41a238
  41a1dc:	adc    al,BYTE PTR [eax+0x60]
  41a1df:	mov    ecx,0xccbd8d8d
  41a1e4:	pop    es
  41a1e5:	out    dx,eax
  41a1e6:	jo     0x41a1a6
  41a1e8:	jbe    0x41a20d
  41a1ea:	sbb    BYTE PTR [edi+0xb69328],cl
  41a1f0:	sbb    ch,cl
  41a1f2:	gs push ebx
  41a1f4:	ds js  0x41a1e7
  41a1f7:	stos   DWORD PTR es:[edi],eax
  41a1f8:	xor    BYTE PTR cs:[edi+0x5d],al
  41a1fc:	popf   
  41a1fd:	sub    eax,DWORD PTR [eax]
  41a1ff:	or     DWORD PTR ds:0x79004590,esi
  41a205:	push   cs
  41a206:	push   ss
  41a207:	int    0x76
  41a209:	dec    esp
  41a20a:	inc    eax
  41a20b:	pop    ebx
  41a20c:	pop    ds
  41a20d:	shr    BYTE PTR [ebx-0x24],cl
  41a210:	push   esp
  41a211:	call   0xa4d8:0x25cd4873
  41a218:	pop    ss
  41a219:	loop   0x41a245
  41a21b:	mov    ecx,0x6b
  41a220:	add    BYTE PTR [eax],al
  41a222:	sbb    BYTE PTR [ebp+0xe],dl
  41a225:	add    eax,0x5d1b5f4f
  41a22a:	lods   eax,DWORD PTR ds:[esi]
  41a22b:	test   al,0x5b
  41a22d:	gs pop ebx
  41a22f:	iret   
  41a230:	lods   al,BYTE PTR es:[esi]
  41a232:	mov    dh,0x1e
  41a234:	add    DWORD PTR [eax],eax
  41a236:	repz add al,0x0
  41a239:	add    BYTE PTR [edx+edi*2],ch
  41a23c:	sub    BYTE PTR [esi],dl
  41a23e:	inc    edx
  41a23f:	inc    ebp
  41a240:	add    al,0x7a
  41a242:	pop    esi
  41a243:	and    ecx,ebx
  41a245:	sub    DWORD PTR [eax-0x18426bf5],edi
  41a24b:	jecxz  0x41a23a
  41a24d:	enter  0x72f4,0x3c
  41a251:	(bad)  
  41a252:	fnstsw WORD PTR [esi-0x42]
  41a255:	shl    BYTE PTR ds:0xee49d76d,cl
  41a25b:	daa    
  41a25c:	out    dx,eax
  41a25d:	adc    BYTE PTR [esi],0xbb
  41a260:	daa    
  41a261:	xchg   ecx,eax
  41a262:	jp     0x41a1fe
  41a264:	add    ebx,DWORD PTR [esi+0x7132692e]
  41a26a:	mov    esi,0x22431e59
  41a26f:	sub    edx,DWORD PTR [eax+0x62e69fe8]
  41a275:	(bad)
  41a279:	sti    
  41a27a:	daa    
  41a27b:	mov    ch,0xf7
  41a27d:	into   
  41a27e:	jb     0x41a292
  41a280:	sub    bh,ah
  41a282:	mov    esi,0xe2e3b7e6
  41a287:	loopne 0x41a244
  41a289:	inc    ecx
  41a28a:	iret   
  41a28b:	(bad)  
  41a28c:	sbb    BYTE PTR [edi-0x78f42d09],bh
  41a292:	shl    DWORD PTR [esi+0x507bf0d7],cl
  41a298:	out    dx,al
  41a299:	add    eax,0x68236dbf
  41a29e:	mov    DWORD PTR [ebx+0x5b],esp
  41a2a1:	lods   al,BYTE PTR ds:[esi]
  41a2a2:	inc    esp
  41a2a3:	mov    ds:0x5a4f8c66,al
  41a2a8:	fidivr DWORD PTR [esi+0x53cefc13]
  41a2ae:	and    dl,BYTE PTR [edi]
  41a2b0:	stos   DWORD PTR es:[edi],eax
  41a2b1:	shl    DWORD PTR [eax+0xc],0x3b
  41a2b5:	push   ecx
  41a2b6:	out    dx,eax
  41a2b7:	iret   
  41a2b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2b9:	in     al,0xe1
  41a2bb:	push   0xa
  41a2bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2be:	rcl    BYTE PTR [edi],1
  41a2c0:	pusha  
  41a2c1:	xor    esp,ebx
  41a2c3:	(bad)  
  41a2c4:	ret    
  41a2c5:	addr16 inc ecx
  41a2c7:	js     0x41a2a1
  41a2c9:	dec    esp
  41a2ca:	jnp    0x41a30a
  41a2cc:	or     eax,0x1c8c9366
  41a2d1:	dec    DWORD PTR [edx+0x15afb241]
  41a2d7:	or     esp,DWORD PTR [edi+eiz*8]
  41a2da:	mov    esp,DWORD PTR [edi+0x68]
  41a2dd:	or     eax,0x88a0a792
  41a2e2:	add    DWORD PTR [ecx],0x22cc5ddf
  41a2e8:	sbb    al,0x1e
  41a2ea:	cmp    eax,0x94d566a0
  41a2ef:	pop    ecx
  41a2f0:	popf   
  41a2f1:	jnp    0x41a312
  41a2f3:	fcomi  st,st(6)
  41a2f5:	bound  ebx,QWORD PTR [edx+0x456bff8e]
  41a2fb:	mov    al,ds:0xcaa6708d
  41a300:	pusha  
  41a301:	aad    0x7
  41a303:	pop    ecx
  41a304:	repnz int3 
  41a306:	and    DWORD PTR [ecx+edi*2],ebp
  41a309:	leave  
  41a30a:	iret   
  41a30b:	mov    bh,BYTE PTR [edi-0x369dd36a]
  41a311:	(bad)  
  41a312:	into   
  41a313:	retf   0x5d05
  41a316:	out    0x4,al
  41a318:	xchg   BYTE PTR [ecx],bl
  41a31a:	pop    ss
  41a31b:	jge    0x41a385
  41a31d:	xchg   esp,eax
  41a31e:	ja     0x41a32b
  41a320:	retf   0xb688
  41a323:	or     ecx,DWORD PTR [edi-0x1d78302c]
  41a329:	xor    esi,ecx
  41a32b:	mov    esi,0x295c7b07
  41a330:	xchg   BYTE PTR [ebx+0x2eacb3c3],ch
  41a336:	pop    eax
  41a337:	dec    edx
  41a338:	jb     0x41a3a5
  41a33a:	jne    0x41a3a8
  41a33c:	and    al,0xc8
  41a33e:	jge    0x41a2e3
  41a340:	sbb    ecx,DWORD PTR [esi-0x42]
  41a343:	push   cs
  41a344:	xor    ecx,edi
  41a346:	xchg   edi,eax
  41a347:	fadd   DWORD PTR [ecx]
  41a349:	mov    ch,0x6
  41a34b:	aas    
  41a34c:	adc    DWORD PTR [edi],ebp
  41a34e:	cmp    BYTE PTR [esi+0x46],0xc4
  41a352:	faddp  st(3),st
  41a354:	mov    esp,0x324593ea
  41a359:	ins    DWORD PTR es:[edi],dx
  41a35a:	xor    DWORD PTR [esi],ecx
  41a35c:	pop    ebp
  41a35d:	cmp    DWORD PTR [ebx+0x7bbb6fc2],edx
  41a363:	cmp    DWORD PTR [ebx],esp
  41a365:	xor    DWORD PTR [ebx],ebp
  41a367:	jle    0x41a32c
  41a369:	sbb    eax,0xd81edbd7
  41a36e:	cdq    
  41a36f:	xchg   ebx,eax
  41a370:	push   ebp
  41a371:	(bad)  
  41a372:	nop
  41a373:	lea    edx,[esi]
  41a375:	fdivr  QWORD PTR [ebx+0x62]
  41a378:	xchg   ebp,eax
  41a379:	ret    0xec1d
  41a37c:	sub    al,0x36
  41a37e:	cmp    cl,dl
  41a380:	pop    eax
  41a381:	outs   dx,BYTE PTR ds:[esi]
  41a382:	sbb    esi,DWORD PTR [eax-0x26]
  41a385:	and    eax,DWORD PTR [ebx-0x45]
  41a388:	fcmovnu st,st(5)
  41a38a:	jnp    0x41a3fe
  41a38c:	xor    al,0x18
  41a38e:	je     0x41a33c
  41a390:	xor    al,0xca
  41a392:	or     bh,BYTE PTR [edx-0x3a4d60b7]
  41a398:	dec    ecx
  41a399:	and    DWORD PTR [edx-0x6a],esp
  41a39c:	or     al,0x85
  41a39e:	push   cs
  41a39f:	outs   dx,DWORD PTR ds:[esi]
  41a3a0:	add    BYTE PTR [eax],ch
  41a3a2:	sar    edx,0x99
  41a3a5:	in     al,0x1a
  41a3a7:	inc    eax
  41a3a8:	(bad)  
  41a3aa:	xor    esi,DWORD PTR [ebx-0x6a]
  41a3ad:	loop   0x41a374
  41a3af:	or     eax,0xf7175b62
  41a3b4:	push   ecx
  41a3b5:	and    ebp,DWORD PTR [esi+0x79398dc]
  41a3bb:	add    esi,esp
  41a3bd:	push   ss
  41a3be:	fnstenv [esi+0x3602f321]
  41a3c4:	mov    esi,0x80d76e0a
  41a3c9:	or     eax,0x1c77c5f6
  41a3ce:	imul   eax,edx,0x2d
  41a3d1:	xchg   ebp,eax
  41a3d2:	out    0xc2,al
  41a3d4:	fistp  WORD PTR [edi]
  41a3d6:	adc    DWORD PTR [ecx],edi
  41a3d8:	sub    BYTE PTR [edx],dl
  41a3da:	cmp    eax,ebp
  41a3dc:	jg     0x41a3d4
  41a3de:	adc    DWORD PTR [ebp-0x6a10b076],esi
  41a3e4:	or     ebp,edi
  41a3e6:	jnp    0x41a3c1
  41a3e8:	sbb    al,0x80
  41a3ea:	fsubr  QWORD PTR [ecx-0x4a]
  41a3ed:	jmp    0x1228:0xdf61c94d
  41a3f4:	leave  
  41a3f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3f6:	nop
  41a3f7:	loopne 0x41a408
  41a3f9:	pushw  es
  41a3fb:	outs   dx,DWORD PTR ds:[esi]
  41a3fc:	push   0xffffffc8
  41a3fe:	dec    eax
  41a3ff:	push   ecx
  41a400:	xor    bh,BYTE PTR [eax+0x40aa6bf8]
  41a406:	les    edx,FWORD PTR [edi-0xe095231]
  41a40c:	aad    0xed
  41a40e:	es jbe 0x41a3c6
  41a411:	mov    dh,0x4f
  41a413:	repnz pushf 
  41a415:	inc    edi
  41a416:	arpl   WORD PTR [eax-0x17],ax
  41a419:	jmp    0x2405:0xc7a42de8
  41a420:	scas   al,BYTE PTR es:[edi]
  41a421:	add    ah,BYTE PTR [edi+ebx*8]
  41a424:	sub    dl,bh
  41a426:	cmp    cl,BYTE PTR [edi-0x4015ffa2]
  41a42c:	push   ebx
  41a42d:	and    BYTE PTR [esi],ah
  41a42f:	and    esi,DWORD PTR [eax]
  41a431:	xchg   esp,eax
  41a432:	out    dx,al
  41a433:	mov    bl,0x14
  41a435:	push   esp
  41a436:	fdiv   DWORD PTR [ebp-0x6b84c48]
  41a43c:	cli    
  41a43d:	jle    0x41a4b6
  41a43f:	(bad)  
  41a440:	xchg   edx,eax
  41a441:	xchg   ebp,eax
  41a442:	iret   
  41a443:	repz xchg si,ax
  41a446:	ficom  WORD PTR [edi+0x3]
  41a449:	ret    0xc262
  41a44c:	xor    al,0x80
  41a44e:	or     ah,dl
  41a450:	fdiv   QWORD PTR [edx+0x44]
  41a453:	jmp    0x493ca09a
  41a458:	xchg   ebx,eax
  41a459:	push   ss
  41a45a:	adc    ecx,esp
  41a45c:	pushf  
  41a45d:	mov    ecx,DWORD PTR [edi+0x5b]
  41a460:	inc    ebp
  41a461:	dec    ecx
  41a462:	xchg   ebp,eax
  41a463:	jno    0x41a47a
  41a465:	fsubrp st(2),st
  41a467:	jmp    0x32641f0b
  41a46c:	jmp    0xc2d34541
  41a471:	scas   eax,DWORD PTR es:[edi]
  41a472:	mov    ecx,ebx
  41a474:	cld    
  41a475:	sbb    DWORD PTR [esp+esi*8],esp
  41a478:	mov    esp,0xb5640888
  41a47d:	fsub   QWORD PTR [edx]
  41a47f:	jmp    0xd9a8:0x3d746bb7
  41a486:	iret   
  41a487:	push   cs
  41a488:	push   ss
  41a489:	stc    
  41a48a:	retf   0x996e
  41a48d:	fdivr  DWORD PTR [edx-0x3b]
  41a490:	sbb    eax,0x5811c358
  41a495:	mov    ebp,0xb2f7724f
  41a49a:	loopne 0x41a4be
  41a49c:	pop    esp
  41a49d:	clc    
  41a49e:	sub    al,0x4f
  41a4a0:	rol    ebx,cl
  41a4a2:	mov    dh,0x1f
  41a4a4:	retf   
  41a4a5:	cdq    
  41a4a6:	xor    BYTE PTR [ecx],ch
  41a4a8:	daa    
  41a4a9:	and    BYTE PTR ds:0xf0ef9d,cl
  41a4af:	lods   eax,DWORD PTR ds:[esi]
  41a4b0:	adc    al,BYTE PTR [ebx-0x6a554600]
  41a4b6:	das    
  41a4b7:	mov    ecx,0x5dd23ddd
  41a4bc:	inc    esp
  41a4bd:	pop    ecx
  41a4be:	pop    es
  41a4bf:	cmp    ch,BYTE PTR [ebx-0x2092e4c8]
  41a4c5:	cmp    BYTE PTR [edx],0x78
  41a4c8:	fcmovnbe st,st(0)
  41a4ca:	(bad)  
  41a4cb:	mov    eax,?
  41a4cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4ce:	cwde   
  41a4cf:	iret   
  41a4d0:	shr    DWORD PTR [edx],cl
  41a4d2:	in     al,dx
  41a4d3:	fwait
  41a4d4:	outs   dx,BYTE PTR ds:[esi]
  41a4d5:	fmul   DWORD PTR [esi-0x72198125]
  41a4db:	stos   DWORD PTR es:[edi],eax
  41a4dc:	ins    DWORD PTR es:[edi],dx
  41a4dd:	(bad)
  41a4e1:	mov    edx,0xfbfe869e
  41a4e6:	retf   
  41a4e7:	in     eax,0xfe
  41a4e9:	fsub   DWORD PTR [ebx-0x12]
  41a4ec:	push   esp
  41a4ed:	mov    dl,BYTE PTR [ecx-0x36]
  41a4f0:	jl     0x41a4cb
  41a4f2:	mov    al,0x14
  41a4f4:	fwait
  41a4f5:	pop    ss
  41a4f6:	mov    bh,BYTE PTR [eax-0x9]
  41a4f9:	dec    ecx
  41a4fa:	and    DWORD PTR [edi+0x4e6bea0a],ebp
  41a500:	popf   
  41a501:	dec    edi
  41a502:	lahf   
  41a503:	add    dh,BYTE PTR [ebp-0x54a2a5ad]
  41a509:	(bad)  
  41a50b:	mov    dh,BYTE PTR [ebx+0x4aac9b7d]
  41a511:	inc    ebp
  41a512:	xlat   BYTE PTR ds:[ebx]
  41a513:	out    dx,eax
  41a514:	idiv   bh
  41a516:	xor    ebx,DWORD PTR [eax-0x7b]
  41a519:	call   0x9303:0x662a627a
  41a520:	push   ebx
  41a521:	mov    al,0xef
  41a523:	test   al,0xd9
  41a525:	dec    eax
  41a526:	and    eax,0x9234c4a
  41a52b:	int3   
  41a52c:	call   0x3701d844
  41a531:	into   
  41a532:	js     0x41a4c0
  41a534:	imul   edi,esp,0x7f
  41a537:	(bad)  
  41a538:	xchg   ecx,eax
  41a539:	sub    ecx,DWORD PTR [edi-0x59]
  41a53c:	jbe    0x41a515
  41a53e:	inc    edi
  41a53f:	mov    dh,0xd5
  41a541:	xlat   BYTE PTR ds:[ebx]
  41a542:	test   DWORD PTR [esi+edi*1-0x7574b20d],0x1e30bc49
  41a54d:	inc    eax
  41a54e:	mov    cl,0xfe
  41a550:	neg    DWORD PTR [ecx+0xa4b1c5f]
  41a556:	jp     0x41a574
  41a558:	fs or  al,dh
  41a55b:	in     eax,0x15
  41a55d:	pop    es
  41a55e:	mov    dh,0xfc
  41a560:	inc    edx
  41a561:	sub    ebp,eax
  41a563:	and    BYTE PTR [eax-0x4b],ah
  41a566:	(bad)  
  41a567:	inc    edx
  41a568:	jnp    0x41a514
  41a56a:	retf   
  41a56b:	out    0x77,eax
  41a56d:	mov    bl,0x48
  41a56f:	xchg   dx,ax
  41a571:	push   eax
  41a572:	adc    bh,ch
  41a574:	push   cs
  41a575:	scas   al,BYTE PTR es:[edi]
  41a576:	inc    ebp
  41a577:	or     BYTE PTR [ecx*8+0x600cdabc],0xc
  41a57f:	or     DWORD PTR [eax+ebx*4-0x38],ebx
  41a583:	mov    WORD PTR [ecx+0xa],?
  41a586:	cdq    
  41a587:	fcomp  st(0)
  41a589:	jae    0x41a53d
  41a58b:	xchg   ebp,eax
  41a58c:	fnsave [ecx+0x7f]
  41a58f:	or     edi,esp
  41a591:	pop    ss
  41a592:	sub    edx,DWORD PTR [edi]
  41a594:	or     eax,0xdedd556f
  41a599:	sbb    al,0xbd
  41a59b:	pop    ebx
  41a59c:	inc    ebp
  41a59d:	xor    al,0x3f
  41a59f:	ret    0x796c
  41a5a2:	enter  0x17cd,0x22
  41a5a6:	and    eax,0x90708fc4
  41a5ab:	push   edi
  41a5ac:	jb     0x41a621
  41a5ae:	cld    
  41a5af:	scas   al,BYTE PTR es:[edi]
  41a5b0:	in     al,dx
  41a5b1:	clc    
  41a5b2:	cmp    bh,BYTE PTR [ebx]
  41a5b4:	mov    ds:0x7cf9b021,al
  41a5b9:	rcr    DWORD PTR [edi-0x23],0x98
  41a5bd:	test   BYTE PTR [eax+0x1888f446],ah
  41a5c3:	pop    eax
  41a5c4:	int    0xb5
  41a5c6:	aad    0x7e
  41a5c8:	cmp    BYTE PTR [esi],ch
  41a5ca:	popf   
  41a5cb:	sub    al,0xc6
  41a5cd:	push   0xffffffea
  41a5cf:	xor    ah,dl
  41a5d1:	pop    esi
  41a5d2:	js     0x41a5ae
  41a5d4:	call   0xdd450d60
  41a5d9:	add    al,0xbe
  41a5db:	jg     0x41a591
  41a5dd:	jae    0x41a61c
  41a5df:	lds    ebp,FWORD PTR [ebx+0x2f1a96e6]
  41a5e5:	jmp    0x41a5cf
  41a5e7:	mov    cl,0x8e
  41a5e9:	rcl    bl,1
  41a5eb:	bound  esp,QWORD PTR [eax-0x5813a181]
  41a5f1:	xor    dh,BYTE PTR [ecx]
  41a5f3:	xchg   esi,eax
  41a5f4:	push   ss
  41a5f5:	out    dx,eax
  41a5f6:	pop    edi
  41a5f7:	jae    0x41a5ef
  41a5f9:	call   0x9c:0x28261f6f
  41a600:	cmp    BYTE PTR [ecx+0x646abbe],ch
  41a606:	les    esp,FWORD PTR [esi+0x6b]
  41a609:	call   0x186:0xef7548a3
  41a610:	or     eax,0xc8963c14
  41a615:	mov    bl,0x60
  41a617:	rep outs dx,DWORD PTR ds:[esi]
  41a619:	or     ebp,DWORD PTR [ebx]
  41a61b:	xor    al,0x6a
  41a61d:	or     ch,BYTE PTR [ebx+0x166a2875]
  41a623:	(bad)
  41a626:	sub    dl,al
  41a628:	mov    edx,0xf1603c38
  41a62d:	dec    esp
  41a62e:	lds    ecx,FWORD PTR [ebx]
  41a630:	xor    eax,0x480367da
  41a635:	fmul   DWORD PTR [eax-0x66f78c2]
  41a63b:	mov    bl,0x57
  41a63d:	xor    eax,0x862e4643
  41a642:	cmp    edx,edi
  41a644:	in     al,dx
  41a645:	in     eax,0xf5
  41a647:	or     al,BYTE PTR [ecx-0x333db9ea]
  41a64d:	push   ebx
  41a64e:	pop    ebp
  41a64f:	hlt    
  41a650:	les    ecx,FWORD PTR [edx]
  41a652:	and    dh,BYTE PTR [ecx+0x4d]
  41a655:	xor    bl,cl
  41a657:	xchg   DWORD PTR [ecx-0x40],ebp
  41a65a:	ret    0x606f
  41a65d:	call   DWORD PTR [ecx+0xeef06a1]
  41a663:	scas   al,BYTE PTR es:[edi]
  41a664:	imul   ebx,DWORD PTR [ebx],0xb0326646
  41a66a:	(bad)  
  41a66b:	icebp  
  41a66c:	mov    DWORD PTR [eax-0x12],edi
  41a66f:	xchg   edi,eax
  41a670:	repnz add DWORD PTR [ebx-0x6b],ecx
  41a674:	pop    edi
  41a675:	enter  0x29c7,0x97
  41a679:	sahf   
  41a67a:	loop   0x41a66a
  41a67c:	adc    al,0x29
  41a67e:	test   DWORD PTR [eax-0x729c41ab],edi
  41a684:	out    dx,eax
  41a685:	and    bl,BYTE PTR [edx+0xd9872f2]
  41a68b:	iret   
  41a68c:	fwait
  41a68d:	lea    edi,[edi+0x45]
  41a690:	aaa    
  41a691:	inc    edi
  41a692:	fidiv  DWORD PTR [ebx-0x9]
  41a695:	xchg   esp,eax
  41a696:	in     eax,0x14
  41a698:	out    dx,al
  41a699:	pop    esp
  41a69a:	ss arpl bp,bp
  41a69d:	dec    DWORD PTR [ebx-0x3b]
  41a6a0:	out    0xbe,eax
  41a6a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6a3:	(bad)  
  41a6a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6a6:	mov    ds,WORD PTR [ebx]
  41a6a8:	push   cs
  41a6a9:	call   0xae5ee2b5
  41a6ae:	mov    dx,0xcf7c
  41a6b2:	pop    edi
  41a6b3:	xchg   ebx,eax
  41a6b4:	repnz mov edx,0x1dfdb858
  41a6ba:	test   BYTE PTR [ecx+0x6e316a04],dh
  41a6c0:	int    0x35
  41a6c2:	xlat   BYTE PTR ds:[ebx]
  41a6c3:	push   ds
  41a6c4:	mov    edi,0x8bc27d5d
  41a6c9:	inc    esi
  41a6ca:	jmp    0xd7fd2cd4
  41a6cf:	sub    ah,BYTE PTR [eax+eiz*4-0x75608ab7]
  41a6d6:	psrlw  mm0,mm1
  41a6d9:	popf   
  41a6da:	mov    ch,BYTE PTR [ebx]
  41a6dc:	xchg   edx,eax
  41a6dd:	push   cs
  41a6de:	out    dx,al
  41a6df:	pop    ebp
  41a6e1:	adc    eax,DWORD PTR [eax+0x2cbeba4d]
  41a6e7:	je     0x41a75a
  41a6e9:	fld    TBYTE PTR [edx]
  41a6eb:	push   edi
  41a6ec:	loop   0x41a759
  41a6ee:	push   eax
  41a6ef:	enter  0x9059,0x74
  41a6f3:	mov    esp,0x513785cd
  41a6f8:	jns    0x41a6d9
  41a6fa:	retf   0x715a
  41a6fd:	(bad)  
  41a6fe:	ja     0x41a6f5
  41a700:	test   eax,edi
  41a702:	mov    ebx,0x20747c90
  41a707:	data16 mov ds:0xa4ff1237,al
  41a70d:	and    bh,BYTE PTR [eax]
  41a70f:	dec    edi
  41a710:	ss inc esi
  41a712:	lods   eax,DWORD PTR ds:[esi]
  41a713:	jns    0x41a752
  41a715:	outs   dx,BYTE PTR ds:[esi]
  41a716:	rcr    esp,cl
  41a718:	jle    0x41a77f
  41a71a:	in     eax,0xe0
  41a71c:	rep lods eax,DWORD PTR ds:[esi]
  41a71e:	adc    BYTE PTR [esi-0x3d5e2ff],al
  41a724:	xchg   BYTE PTR [esi+0x78],ah
  41a727:	pushf  
  41a728:	fild   WORD PTR [esi]
  41a72a:	jmp    0x41a717
  41a72c:	mov    WORD PTR [eax],es
  41a72e:	add    BYTE PTR [eax],al
  41a730:	add    BYTE PTR [eax],al
  41a732:	dec    esi
  41a733:	outs   dx,DWORD PTR ds:[esi]
  41a734:	je     0x41a75e
  41a736:	jne    0x41a773
  41a738:	pop    esi
  41a739:	outs   dx,DWORD PTR ds:[esi]
  41a73a:	out    dx,eax
  41a73b:	aaa    
  41a73c:	jae    0x41a716
  41a73e:	shl    DWORD PTR [edi+0x23a9e08d],cl
  41a744:	add    DWORD PTR [eax],eax
  41a746:	repz add al,0x0
  41a749:	add    BYTE PTR [edx],ah
  41a74b:	fucomp st(2)
  41a74d:	cli    
  41a74e:	push   es
  41a74f:	dec    edi
  41a750:	mov    dl,0x61
  41a752:	addr16 cmc 
  41a754:	(bad)  
  41a755:	or     eax,0x582e1499
  41a75a:	leave  
  41a75b:	rcl    DWORD PTR [ecx+0x3e],cl
  41a75e:	ds mov ecx,0xf9a394a
  41a764:	add    BYTE PTR [ebp+0x6f],bl
  41a767:	or     DWORD PTR [esi],esi
  41a769:	adc    al,0x21
  41a76b:	stc    
  41a76c:	in     eax,0x86
  41a76e:	add    ecx,eax
  41a770:	or     cl,BYTE PTR [edi+edx*4]
  41a773:	sbb    al,0xfb
  41a775:	or     ebx,DWORD PTR [edx-0x7b]
  41a778:	inc    esi
  41a779:	ret    
  41a77a:	add    WORD PTR [eax-0x5c],sp
  41a77e:	(bad)  
  41a77f:	je     0x41a796
  41a781:	loope  0x41a7b4
  41a783:	shl    BYTE PTR [esi+0x75443e73],0x2d
  41a78a:	add    eax,0xbf0d7832
  41a78f:	xor    bh,dl
  41a791:	lods   eax,DWORD PTR ds:[esi]
  41a792:	lock rol DWORD PTR [eax],cl
  41a795:	es xchg esp,eax
  41a797:	xchg   edi,eax
  41a798:	scas   eax,DWORD PTR es:[edi]
  41a799:	aas    
  41a79a:	inc    edi
  41a79b:	ret    
  41a79c:	mov    edx,DWORD PTR [ebx+0x5bc70806]
  41a7a2:	(bad)  
  41a7a3:	(bad)  
  41a7a4:	push   0x98f57811
  41a7a9:	cwde   
  41a7aa:	jmp    0x41a800
  41a7ac:	ret    
  41a7ad:	adc    al,0xe2
  41a7af:	test   eax,0xe88bdf1
  41a7b4:	and    BYTE PTR [eax],cl
  41a7b6:	cs ins BYTE PTR es:[edi],dx
  41a7b8:	fst    DWORD PTR [eax]
  41a7ba:	idiv   BYTE PTR [edi]
  41a7bc:	inc    ebx
  41a7bd:	sbb    eax,0xa3669fd2
  41a7c2:	rol    BYTE PTR [ebp+0x4b],cl
  41a7c5:	dec    eax
  41a7c6:	lds    esi,FWORD PTR [ebp-0x2c]
  41a7c9:	das    
  41a7ca:	lds    esi,FWORD PTR [esi+0x40]
  41a7cd:	cld    
  41a7ce:	inc    BYTE PTR [eax]
  41a7d0:	jne    0x41a7a2
  41a7d2:	or     eax,0x19cb7bb9
  41a7d7:	sub    edi,DWORD PTR [ebp-0x68]
  41a7da:	xchg   edx,eax
  41a7db:	xor    BYTE PTR [eax],ah
  41a7dd:	mov    al,ds:0x488251ee
  41a7e2:	popf   
  41a7e3:	mov    eax,ds:0xd33b003e
  41a7e8:	je     0x41a77a
  41a7ea:	lods   al,BYTE PTR ds:[esi]
  41a7eb:	dec    ecx
  41a7ec:	out    dx,al
  41a7ed:	in     al,0xdc
  41a7ef:	repnz sbb al,0x54
  41a7f2:	(bad)  
  41a7f3:	sbb    esp,DWORD PTR [edi]
  41a7f5:	xlat   BYTE PTR ds:[ebx]
  41a7f6:	xchg   DWORD PTR [ebp+0x1],ecx
  41a7f9:	retf   
  41a7fa:	dec    esi
  41a7fb:	jbe    0x41a7e9
  41a7fd:	mov    edi,0x1ff770a
  41a802:	ret    
  41a803:	xchg   ebp,eax
  41a804:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a805:	pop    edx
  41a806:	sbb    eax,0xbf236259
  41a80b:	stos   BYTE PTR es:[edi],al
  41a80c:	fdivr  DWORD PTR [eax]
  41a80e:	jmp    0xc3da:0xf6a8393d
  41a815:	mov    al,0xc8
  41a817:	cmc    
  41a818:	aam    0xcb
  41a81a:	int    0xe4
  41a81c:	xchg   edi,eax
  41a81d:	push   ebx
  41a81e:	mov    ds,WORD PTR [ecx-0x4a8ea2d3]
  41a824:	cmc    
  41a825:	cdq    
  41a826:	xchg   edx,eax
  41a827:	data16 int 0xcb
  41a82a:	xchg   ebp,eax
  41a82b:	retf   
  41a82c:	in     eax,0xfd
  41a82e:	clc    
  41a82f:	push   edi
  41a830:	xor    bl,bl
  41a832:	pop    ecx
  41a833:	nop
  41a834:	aas    
  41a835:	loopne 0x41a87a
  41a837:	cwde   
  41a838:	andnps xmm3,XMMWORD PTR [ecx]
  41a83b:	xchg   esi,eax
  41a83c:	popa   
  41a83d:	mov    ds:0x8e310fb,eax
  41a842:	ins    BYTE PTR es:[edi],dx
  41a843:	inc    ebx
  41a844:	sbb    al,0xa9
  41a846:	rol    DWORD PTR [ecx],1
  41a848:	sbb    ecx,esp
  41a84a:	sub    cl,ah
  41a84c:	cmp    eax,0x680590dc
  41a851:	pop    ebp
  41a852:	cmp    dh,dh
  41a854:	push   ebx
  41a855:	fdivr  DWORD PTR [ecx]
  41a857:	xchg   ebx,eax
  41a858:	mov    WORD PTR [ebp+0x6a],ds
  41a85b:	mov    esp,0x389b2c4c
  41a860:	xchg   esi,eax
  41a861:	retf   0x4230
  41a864:	(bad)  
  41a865:	std    
  41a866:	sbb    al,0x8d
  41a868:	mov    ?,WORD PTR ds:0x4a9d4042
  41a86e:	ret    0x1000
  41a871:	mov    eax,ds:0xc804af66
  41a876:	inc    edx
  41a877:	mov    edi,DWORD PTR [eax+0x1e]
  41a87a:	xchg   DWORD PTR [ecx],ecx
  41a87c:	clc    
  41a87d:	stos   DWORD PTR es:[edi],eax
  41a87e:	push   ebp
  41a87f:	shr    DWORD PTR [edx+0x61],cl
  41a882:	xchg   ecx,eax
  41a883:	pusha  
  41a884:	fstp   st(6)
  41a886:	cmp    eax,eax
  41a888:	mov    esi,0xdd12d827
  41a88d:	data16 jb 0x41a833
  41a890:	jge    0x41a8c9
  41a892:	sar    DWORD PTR [eax+0x4d],cl
  41a895:	mov    dl,BYTE PTR ds:0xdff3e076
  41a89b:	mov    al,BYTE PTR [eax]
  41a89d:	dec    ebp
  41a89e:	inc    ebp
  41a89f:	inc    ebx
  41a8a0:	test   DWORD PTR [ecx+0x4e],ebx
  41a8a3:	jmp    0x10b0:0x4faa1f3a
  41a8aa:	add    esp,esi
  41a8ac:	sub    al,0xa8
  41a8ae:	or     BYTE PTR [ebp-0x41e9d73e],ch
  41a8b4:	js     0x41a867
  41a8b6:	rcr    DWORD PTR [edx-0x3f],0x90
  41a8ba:	rcl    DWORD PTR [ebp+0x62],cl
  41a8bd:	or     bh,ch
  41a8bf:	xchg   ecx,eax
  41a8c0:	jg     0x41a88c
  41a8c2:	(bad)
  41a8c5:	or     ebx,ebx
  41a8c7:	pop    es
  41a8c8:	or     dh,0x64
  41a8cb:	jb     0x41a944
  41a8cd:	(bad)  
  41a8ce:	in     al,dx
  41a8cf:	sub    esi,DWORD PTR [ecx]
  41a8d1:	ja     0x41a927
  41a8d3:	mov    ebx,DWORD PTR [ebx]
  41a8d5:	mov    eax,0xaa556ba6
  41a8da:	pop    esp
  41a8db:	out    dx,eax
  41a8dc:	adc    BYTE PTR [ebp+eiz*2-0x4d6bf2a5],0x9e
  41a8e4:	add    eax,0x342ba836
  41a8e9:	pop    esp
  41a8ea:	out    0x74,al
  41a8ec:	rol    DWORD PTR [edx-0x6a],1
  41a8ef:	cwde   
  41a8f0:	cmp    DWORD PTR [esi+0xd84c33e],esp
  41a8f6:	shr    DWORD PTR [edx-0x46],cl
  41a8f9:	add    BYTE PTR [ecx+0x52],0x9f
  41a8fd:	cs dec ebp
  41a8ff:	dec    BYTE PTR [esi+0x58]
  41a902:	(bad)  
  41a903:	fistp  DWORD PTR [eax]
  41a905:	adc    al,0x2
  41a907:	(bad)  
  41a908:	lock arpl WORD PTR es:[ebx+0x5e],bp
  41a90d:	aam    0x75
  41a90f:	xchg   edx,eax
  41a910:	pop    ebp
  41a911:	or     DWORD PTR [eax+0x77],esi
  41a914:	mov    bh,0xa
  41a916:	fstp   QWORD PTR [eax-0x55]
  41a919:	fs and dl,ch
  41a91c:	ins    BYTE PTR es:[edi],dx
  41a91d:	cmp    esp,DWORD PTR [eax+0x4bad6e2]
  41a923:	out    0xf9,al
  41a925:	not    DWORD PTR [ebp+0x46]
  41a928:	enter  0xb4f0,0xd3
  41a92c:	jae    0x41a944
  41a92e:	fdiv   QWORD PTR [ebx]
  41a930:	cmp    eax,0x38d53ef4
  41a935:	add    edi,DWORD PTR [ebp-0x28]
  41a938:	fldcw  WORD PTR [edi-0x5b]
  41a93b:	lahf   
  41a93c:	les    ebp,FWORD PTR [edi+0x7c]
  41a93f:	cmp    al,0x62
  41a941:	cmp    edx,DWORD PTR [edi]
  41a943:	push   cs
  41a944:	lods   al,BYTE PTR ds:[esi]
  41a945:	sub    al,0x18
  41a947:	int    0xf6
  41a949:	sbb    DWORD PTR [eax+0x5afb5def],esi
  41a94f:	das    
  41a950:	cdq    
  41a951:	rcr    DWORD PTR [ebx-0x6736153f],cl
  41a957:	push   esp
  41a958:	(bad)  
  41a959:	mov    esp,0xae963ffa
  41a95e:	push   0xe48e9f36
  41a963:	mov    al,ds:0xfd8b5bbb
  41a968:	cdq    
  41a969:	mov    edx,0xdda1dc08
  41a96e:	jmp    0x7b3c:0x15b55c6
  41a975:	lock pop edi
  41a977:	fadd   st(7),st
  41a979:	jb     0x41a98f
  41a97b:	rcr    BYTE PTR [eax+eiz*2],1
  41a97e:	lds    edx,FWORD PTR [ebp+0x32]
  41a981:	stos   BYTE PTR es:[edi],al
  41a982:	xor    DWORD PTR [edi-0x5d],0x5542dbd2
  41a989:	sbb    al,0x47
  41a98b:	das    
  41a98c:	les    edx,FWORD PTR [edx-0x31609414]
  41a992:	stos   BYTE PTR es:[edi],al
  41a993:	lahf   
  41a994:	mov    WORD PTR [esi+0x39],es
  41a997:	cdq    
  41a998:	jg     0x41aa0d
  41a99a:	pusha  
  41a99b:	loope  0x41a989
  41a99d:	pusha  
  41a99e:	pusha  
  41a99f:	and    BYTE PTR [edx-0x71],dh
  41a9a2:	pop    ds
  41a9a3:	mov    DWORD PTR [esi],esi
  41a9a5:	push   ds
  41a9a6:	cmp    esi,DWORD PTR [ecx]
  41a9a8:	repz inc ecx
  41a9aa:	out    dx,al
  41a9ab:	or     bl,BYTE PTR [ecx+edi*2-0x6e]
  41a9af:	mov    dh,0x63
  41a9b1:	add    al,0xca
  41a9b3:	fidivr DWORD PTR [eax]
  41a9b5:	fistp  DWORD PTR [esi+0x77]
  41a9b8:	sahf   
  41a9b9:	push   esp
  41a9ba:	scas   al,BYTE PTR es:[edi]
  41a9bb:	push   es
  41a9bc:	or     al,0x6f
  41a9be:	mov    ds:0xb89121b0,eax
  41a9c3:	dec    ecx
  41a9c4:	mov    ch,bl
  41a9c6:	sti    
  41a9c7:	sub    edx,DWORD PTR [ecx]
  41a9c9:	lea    esi,ds:0x82f67ff
  41a9cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9d0:	push   edi
  41a9d1:	pop    eax
  41a9d2:	push   ecx
  41a9d3:	dec    eax
  41a9d4:	dec    esp
  41a9d5:	(bad)  
  41a9d6:	out    0x7d,al
  41a9d8:	loop   0x41a9dc
  41a9da:	test   al,0xad
  41a9dc:	dec    esp
  41a9dd:	fld    DWORD PTR [ebp+esi*2+0x22]
  41a9e1:	sub    cl,BYTE PTR [edi-0x13]
  41a9e4:	cld    
  41a9e5:	mov    dh,0xab
  41a9e7:	sbb    al,0xc6
  41a9e9:	cmp    ecx,DWORD PTR [ecx-0x26de63ba]
  41a9ef:	sub    al,0xa1
  41a9f1:	xchg   ecx,eax
  41a9f2:	in     eax,dx
  41a9f3:	mov    edi,0x1ebe13a6
  41a9f8:	sbb    eax,0xd1cb632f
  41a9fd:	(bad)  
  41a9ff:	pop    ss
  41aa00:	adc    BYTE PTR [esi+0x1092c11a],dh
  41aa06:	fimul  DWORD PTR [ebx+0x20215008]
  41aa0c:	push   ebp
  41aa0d:	fst    DWORD PTR [edi-0x394470b]
  41aa13:	mov    ecx,0xe16979c2
  41aa18:	jl     0x41a9af
  41aa1a:	inc    esi
  41aa1b:	ins    DWORD PTR es:[edi],dx
  41aa1c:	fs xor eax,0x59658347
  41aa22:	and    ah,BYTE PTR [ebx-0x6b]
  41aa25:	sub    al,0x26
  41aa27:	mov    al,ds:0x64d25cea
  41aa2c:	mov    dh,0xdf
  41aa2e:	mov    edx,0x4b11de1d
  41aa33:	push   0x43b45e99
  41aa38:	cmp    DWORD PTR [ebx+0x49],ebp
  41aa3b:	cdq    
  41aa3c:	jnp    0x41aa17
  41aa3e:	sbb    eax,0x86655c39
  41aa43:	(bad)
  41aa46:	jnp    0x41aa5e
  41aa48:	repz xor ch,BYTE PTR [eax-0x66]
  41aa4c:	rcl    BYTE PTR [ebp+0x728c950f],cl
  41aa52:	jmp    0x45f205de
  41aa57:	sbb    BYTE PTR [ebx-0x476196e3],ch
  41aa5d:	mov    bl,0x67
  41aa5f:	cld    
  41aa60:	xlat   BYTE PTR ds:[ebx]
  41aa61:	add    al,0xe1
  41aa63:	lods   al,BYTE PTR ds:[esi]
  41aa64:	mov    esp,0x7a4bb220
  41aa69:	add    BYTE PTR [ebp+0x6e8f6aae],ch
  41aa6f:	jnp    0x41aaa7
  41aa71:	test   al,0x88
  41aa73:	xor    eax,0x6802c1f0
  41aa78:	iret   
  41aa79:	dec    ebx
  41aa7a:	fild   QWORD PTR [edx+edx*1+0xb]
  41aa7e:	cwde   
  41aa7f:	mov    ecx,0x806044dc
  41aa84:	rcl    DWORD PTR [edx+0x59],1
  41aa87:	in     eax,0x7b
  41aa89:	fbld   TBYTE PTR [edx-0x50]
  41aa8c:	popf   
  41aa8d:	mov    DWORD PTR [ebp+0x19a6d211],ecx
  41aa93:	pop    ss
  41aa94:	xlat   BYTE PTR ds:[ebx]
  41aa95:	fdivr  QWORD PTR [esi+0x39]
  41aa98:	iret   
  41aa99:	and    ah,ch
  41aa9b:	das    
  41aa9c:	sbb    ebx,esi
  41aa9e:	push   esi
  41aa9f:	scas   al,BYTE PTR es:[edi]
  41aaa0:	or     al,BYTE PTR [esi]
  41aaa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aaa3:	pushf  
  41aaa4:	ins    BYTE PTR es:[edi],dx
  41aaa5:	adc    ebp,DWORD PTR [edx]
  41aaa7:	sbb    ch,BYTE PTR [ecx-0x54]
  41aaaa:	in     eax,dx
  41aaab:	ret    0x504c
  41aaae:	add    DWORD PTR [ebp-0x2adf742],esi
  41aab4:	mov    cl,0xa6
  41aab6:	cmp    ebp,0x63
  41aab9:	cwde   
  41aaba:	jbe    0x41aa61
  41aabc:	shl    DWORD PTR [edi+eiz*1-0x65e474f3],cl
  41aac3:	mov    WORD PTR [ebx+0x5e],cs
  41aac6:	and    bl,BYTE PTR [edi-0x72]
  41aac9:	mov    al,ds:0x864fe1b7
  41aace:	cmc    
  41aacf:	cld    
  41aad0:	sub    eax,0x198ee7b9
  41aad5:	cmp    DWORD PTR [ebp+0x2de1e06a],edx
  41aadb:	mov    ebx,0x9a417cb1
  41aae0:	and    BYTE PTR [eax+0x359b0e4],dl
  41aae6:	push   esp
  41aae7:	arpl   WORD PTR [edx-0x6b],si
  41aaea:	xor    BYTE PTR [edx],dh
  41aaec:	cld    
  41aaed:	xchg   esi,eax
  41aaee:	dec    edi
  41aaef:	fnstsw WORD PTR [ecx+0x625d8947]
  41aaf5:	std    
  41aaf6:	sub    ebp,edx
  41aaf8:	cmp    cl,BYTE PTR [ebp-0x1b68e7fd]
  41aafe:	xchg   ecx,eax
  41aaff:	push   ebp
  41ab00:	sbb    ebp,DWORD PTR [edi+0x29a3152]
  41ab06:	add    eax,0xc6c7acc4
  41ab0b:	outs   dx,DWORD PTR ds:[esi]
  41ab0c:	cmp    esi,DWORD PTR ds:0x7c0006e8
  41ab12:	inc    ecx
  41ab13:	pxor   mm4,QWORD PTR [ecx]
  41ab16:	jnp    0x41ab7a
  41ab18:	pop    eax
  41ab19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab1a:	or     eax,0x169e4ec1
  41ab1f:	pop    esp
  41ab20:	popf   
  41ab21:	mov    cl,0xc1
  41ab23:	lahf   
  41ab24:	mov    al,0x96
  41ab26:	jge    0x41ab8f
  41ab28:	sub    DWORD PTR [ecx+0x10c54cc4],0x9c183874
  41ab32:	int3   
  41ab33:	fimul  DWORD PTR [esp+ebx*8]
  41ab36:	lea    edi,[edi+0x72fb6099]
  41ab3c:	cli    
  41ab3d:	ds pushf 
  41ab3f:	fcmove st,st(0)
  41ab41:	data16 jo 0x41abae
  41ab44:	iret   
  41ab45:	push   ebp
  41ab46:	stos   DWORD PTR es:[edi],eax
  41ab47:	imul   edx,DWORD PTR [ecx-0x55],0x5a830f97
  41ab4e:	xchg   DWORD PTR [esi+0x53dc8964],edi
  41ab54:	imul   ecx,DWORD PTR [ecx+ebp*4-0x74b22a66],0x73d7a8fd
  41ab5f:	push   edx
  41ab60:	pop    eax
  41ab61:	jb     0x41ab8c
  41ab63:	jl     0x41ab6f
  41ab65:	sbb    BYTE PTR [edi-0x67],cl
  41ab68:	jl     0x41abc6
  41ab6a:	fcmovne st,st(0)
  41ab6c:	or     DWORD PTR [edx+0x1b],0xffffffab
  41ab70:	pop    edi
  41ab71:	sbb    BYTE PTR [eax+esi*1],dl
  41ab74:	in     al,0x4f
  41ab76:	std    
  41ab77:	mov    ebx,0xcba243a1
  41ab7c:	jne    0x41ab49
  41ab7e:	sub    BYTE PTR [esi+eiz*2-0x3bf5d697],dh
  41ab85:	add    DWORD PTR [edi+0x3],esi
  41ab88:	mov    eax,ds:0xa00e3ad6
  41ab8d:	icebp  
  41ab8e:	cdq    
  41ab8f:	jmp    0xf8c0b61f
  41ab94:	leave  
  41ab95:	(bad)  
  41ab96:	out    0xb1,al
  41ab98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab99:	mov    cl,0xc8
  41ab9b:	call   0x609e:0x1f140e6a
  41aba2:	push   ecx
  41aba3:	xor    dl,BYTE PTR [ecx+0x7bb970dd]
  41aba9:	mov    BYTE PTR [ebp+0x70],al
  41abac:	imul   ecx,DWORD PTR [ebp-0x3a7e1d9f],0xffffffb1
  41abb3:	cdq    
  41abb4:	cwde   
  41abb5:	(bad)  
  41abb6:	lock jbe 0x41ac2c
  41abb9:	icebp  
  41abba:	(bad)  
  41abbb:	ja     0x41ab53
  41abbd:	mov    eax,0x80063330
  41abc3:	or     bh,dh
  41abc5:	dec    ecx
  41abc6:	in     eax,dx
  41abc7:	mov    bl,0x52
  41abc9:	mov    bh,0xb6
  41abcb:	xor    DWORD PTR [ebp+ebp*8+0x64156c4],esp
  41abd2:	xchg   esp,eax
  41abd3:	fistp  QWORD PTR [ecx+0x6d1a139b]
  41abd9:	mov    bl,0x4f
  41abdb:	pop    edx
  41abdc:	add    eax,0xb44c1b17
  41abe1:	xor    BYTE PTR [eax],cl
  41abe3:	daa    
  41abe4:	aad    0x79
  41abe6:	cmp    ebx,edi
  41abe8:	lods   al,BYTE PTR ds:[esi]
  41abe9:	ja     0x41ab7e
  41abeb:	call   0x1f66:0x82057f9e
  41abf2:	mov    ch,BYTE PTR [eax+ebx*4-0x21db1cda]
  41abf9:	dec    esi
  41abfa:	scas   eax,DWORD PTR es:[edi]
  41abfb:	pusha  
  41abfc:	pop    es
  41abfd:	rol    BYTE PTR [ebx],cl
  41abff:	fidiv  DWORD PTR [eax+0x21]
  41ac02:	mov    BYTE PTR [ebx],dh
  41ac04:	mov    dl,0x34
  41ac06:	out    0x2f,eax
  41ac08:	sbb    eax,0x10ab862d
  41ac0d:	xor    BYTE PTR [ebx+ebx*8],0x75
  41ac11:	mov    ch,0xfb
  41ac13:	or     DWORD PTR [edi-0x2bbf43d5],ebx
  41ac19:	jae    0x41ab9b
  41ac1b:	and    ecx,ecx
  41ac1d:	mov    ?,WORD PTR [edx]
  41ac1f:	and    DWORD PTR [ebp-0x2d3fcae5],edi
  41ac25:	sbb    edi,ebx
  41ac27:	or     al,0x6d
  41ac29:	sbb    DWORD PTR [ecx+0x7573c894],edx
  41ac2f:	or     edx,DWORD PTR [edx-0x37]
  41ac32:	lods   eax,DWORD PTR ds:[esi]
  41ac33:	js     0x41ac29
  41ac35:	jb     0x41aca8
  41ac37:	sub    edx,DWORD PTR [edx+0x5bc92859]
  41ac3d:	add    BYTE PTR [eax],al
  41ac3f:	add    BYTE PTR [eax],al
  41ac41:	add    BYTE PTR [ebp+0x4d],cl
  41ac44:	ss retf 0xfb36
  41ac48:	std    
  41ac49:	iret   
  41ac4a:	cmp    esp,DWORD PTR [edx]
  41ac4c:	(bad)  
  41ac4d:	cld    
  41ac4e:	mov    ebp,0x9ce0d27a
  41ac53:	sub    BYTE PTR [ecx],al
  41ac55:	add    bl,dh
  41ac57:	add    al,0x0
  41ac59:	add    ch,al
  41ac5b:	xor    DWORD PTR [eax-0x75ce1862],edx
  41ac61:	push   ecx
  41ac62:	add    bl,0xff
  41ac65:	imul   BYTE PTR [eax]
  41ac67:	clc    
  41ac68:	push   ss
  41ac69:	sbb    DWORD PTR [edx+0x5f],ebx
  41ac6c:	xchg   edi,eax
  41ac6d:	stc    
  41ac6e:	and    cl,BYTE PTR [esi+0x1ffba503]
  41ac74:	loope  0x41acbc
  41ac76:	cmp    eax,0x4144fb4f
  41ac7b:	aad    0xc9
  41ac7d:	es cmp eax,0xb4d47bcc
  41ac83:	sbb    DWORD PTR [ebp+esi*8+0xa],ecx
  41ac87:	xchg   esi,eax
  41ac88:	stos   DWORD PTR es:[edi],eax
  41ac89:	sbb    DWORD PTR [esi+0x56301936],ecx
  41ac8f:	or     BYTE PTR [esi+0x72fec810],al
  41ac95:	fistp  DWORD PTR [edx+eax*1-0x25f607fa]
  41ac9c:	lock retf 0x2dd1
  41aca0:	dec    esi
  41aca1:	xchg   ebp,eax
  41aca2:	mov    ds,WORD PTR gs:[edx]
  41aca5:	cmp    edx,ebx
  41aca7:	xchg   ecx,eax
  41aca8:	ficomp DWORD PTR [edi+ebx*8-0x6]
  41acac:	call   0x5a08b099
  41acb1:	lea    eax,[ecx+0x3beb248]
  41acb7:	jg     0x41acbe
  41acb9:	cmc    
  41acba:	mov    esp,0x5757624e
  41acbf:	ins    DWORD PTR es:[edi],dx
  41acc0:	mov    al,ds:0x3365014e
  41acc5:	jae    0x41acce
  41acc7:	mov    ebp,0xb0baa4f8
  41accc:	pop    ecx
  41accd:	or     dh,BYTE PTR [edx]
  41accf:	dec    edx
  41acd0:	nop
  41acd1:	sbb    ebp,ecx
  41acd3:	mov    eax,0x36c8c4fd
  41acd8:	inc    edi
  41acd9:	push   esp
  41acda:	sub    dh,al
  41acdc:	or     al,0x49
  41acde:	mov    edi,0x1a1b318f
  41ace3:	mov    ebp,0x417c2d05
  41ace8:	lods   al,BYTE PTR ds:[esi]
  41ace9:	sub    al,0x86
  41aceb:	std    
  41acec:	xchg   ebp,eax
  41aced:	mov    eax,0x13767c68
  41acf2:	push   0x36ae3d25
  41acf7:	enter  0x9094,0x83
  41acfb:	add    eax,0xd090cb68
  41ad00:	fild   DWORD PTR [esi]
  41ad02:	push   ss
  41ad03:	push   esi
  41ad04:	mov    esp,0xffe22fdf
  41ad09:	ret    
  41ad0a:	adc    al,BYTE PTR [ecx+0x33]
  41ad0d:	push   esp
  41ad0e:	sar    DWORD PTR [ecx+0x62df0cdb],0xe1
  41ad15:	cs xchg edx,eax
  41ad17:	scas   al,BYTE PTR es:[edi]
  41ad18:	bound  ebx,QWORD PTR [ecx]
  41ad1a:	es or  eax,0x2aa105d0
  41ad20:	in     eax,0x6c
  41ad22:	lods   al,BYTE PTR ds:[esi]
  41ad23:	cmp    dh,BYTE PTR [ebx+esi*2+0x42801f3a]
  41ad2a:	add    al,0xd1
  41ad2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad2d:	xchg   ebx,eax
  41ad2e:	mov    dh,0x27
  41ad30:	ins    BYTE PTR es:[edi],dx
  41ad31:	xor    ebp,DWORD PTR [edx]
  41ad33:	adc    bl,BYTE PTR fs:[esi+0x284af19c]
  41ad3a:	or     bh,bh
  41ad3c:	xchg   BYTE PTR ds:0xdfe6f8a,ah
  41ad42:	jmp    0xb1e40b69
  41ad47:	jae    0x41adbf
  41ad49:	(bad)  
  41ad4a:	hlt    
  41ad4b:	sbb    DWORD PTR [ebx],ebp
  41ad4d:	adc    dh,BYTE PTR [ebx]
  41ad4f:	das    
  41ad50:	ror    DWORD PTR [ecx],cl
  41ad52:	push   ebx
  41ad53:	cli    
  41ad54:	fild   WORD PTR [edx+0x4]
  41ad57:	mov    DWORD PTR [esi],edi
  41ad59:	icebp  
  41ad5a:	inc    ecx
  41ad5b:	retf   0x5d2f
  41ad5e:	gs cld 
  41ad60:	sbb    al,0x8d
  41ad62:	dec    ebp
  41ad63:	iret   
  41ad64:	push   ecx
  41ad65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad66:	loopne 0x41ad99
  41ad68:	jb     0x41ad59
  41ad6a:	mov    ch,0x79
  41ad6c:	ja     0x41add3
  41ad6e:	nop
  41ad6f:	enter  0x7354,0x34
  41ad73:	in     eax,dx
  41ad74:	out    0xff,eax
  41ad76:	stc    
  41ad77:	xchg   ecx,eax
  41ad78:	inc    esp
  41ad79:	or     al,0x87
  41ad7b:	ja     0x41ad80
  41ad7d:	in     al,0x0
  41ad7f:	xor    al,BYTE PTR ds:0x4309c506
  41ad85:	shr    DWORD PTR [edi+0x4c],cl
  41ad88:	lock dec edx
  41ad8a:	xor    al,0xdc
  41ad8c:	in     eax,dx
  41ad8d:	fcmovb st,st(1)
  41ad8f:	sub    BYTE PTR [eax-0x15],ah
  41ad92:	enter  0x3a66,0xe
  41ad96:	loop   0x41ad85
  41ad98:	aad    0x84
  41ad9a:	mov    al,ds:0x20bdac9b
  41ad9f:	out    0x1e,al
  41ada1:	in     al,dx
  41ada2:	mov    ebp,0x86497a9f
  41ada7:	jecxz  0x41ad62
  41ada9:	dec    eax
  41adaa:	inc    edx
  41adab:	dec    edx
  41adac:	adc    DWORD PTR [edx],esi
  41adae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adaf:	pop    eax
  41adb0:	mov    eax,0xf25bd308
  41adb5:	fs ret 
  41adb7:	push   cs
  41adb8:	mov    ah,0x56
  41adba:	mov    ds:0xfd095c4e,eax
  41adbf:	lods   eax,DWORD PTR ds:[esi]
  41adc0:	jbe    0x41ad4d
  41adc2:	(bad)  
  41adc3:	(bad)  
  41adc4:	outs   dx,DWORD PTR ds:[esi]
  41adc5:	data16 out 0xb6,al
  41adc8:	ins    BYTE PTR es:[edi],dx
  41adc9:	inc    edx
  41adca:	adc    eax,0xed9f2195
  41adcf:	push   ds
  41add0:	mov    BYTE PTR [edi-0x60],0x94
  41add4:	mov    dl,0x3f
  41add6:	fcmove st,st(1)
  41add8:	aad    0x7e
  41adda:	call   0x1a2a:0x27584cd2
  41ade1:	clc    
  41ade2:	ins    BYTE PTR es:[edi],dx
  41ade3:	jne    0x41ae35
  41ade5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ade6:	jge    0x41ad80
  41ade8:	aas    
  41ade9:	mov    ebp,0x5e430d4a
  41adee:	aaa    
  41adef:	adc    eax,0xcaf66fe2
  41adf4:	push   edi
  41adf5:	push   0x1ba0c7f1
  41adfa:	inc    esi
  41adfb:	mov    WORD PTR [edx-0xd],es
  41adfe:	xor    BYTE PTR [ebx+0x7a9169e4],0xd8
  41ae05:	loope  0x41ae4d
  41ae07:	mov    ds:0x66b4e84e,al
  41ae0c:	add    ecx,edi
  41ae0e:	stc    
  41ae0f:	iret   
  41ae10:	fst    st(3)
  41ae12:	pop    es
  41ae13:	xchg   ebx,eax
  41ae14:	(bad)  
  41ae15:	xchg   edx,eax
  41ae16:	pop    ebp
  41ae17:	ins    DWORD PTR es:[edi],dx
  41ae18:	rep outs dx,BYTE PTR ds:[esi]
  41ae1a:	mov    BYTE PTR [ebx+0x588d6abd],al
  41ae20:	cmp    cl,al
  41ae22:	pop    ds
  41ae23:	cdq    
  41ae24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae25:	push   es
  41ae26:	jg     0x41ae43
  41ae28:	inc    eax
  41ae29:	clc    
  41ae2a:	mov    dh,0x65
  41ae2c:	mov    ebx,0xa824bc71
  41ae31:	cmp    eax,0xfc9df09a
  41ae36:	push   esp
  41ae37:	ret    0x346b
  41ae3a:	ja     0x41ae2f
  41ae3c:	dec    eax
  41ae3d:	jge    0x41ae26
  41ae3f:	ret    0x4b52
  41ae42:	enter  0x4fe3,0xb0
  41ae46:	dec    esi
  41ae47:	sahf   
  41ae48:	cmp    eax,0x5c25e6b2
  41ae4d:	adc    BYTE PTR [edi+0x4],ch
  41ae50:	mov    ah,0x30
  41ae52:	loope  0x41ae58
  41ae54:	pushf  
  41ae55:	ret    0x9fa
  41ae58:	cli    
  41ae59:	jmp    0x40d7:0x98181170
  41ae60:	add    esp,ecx
  41ae62:	jge    0x41ae97
  41ae64:	fcmovb st,st(1)
  41ae66:	mov    DWORD PTR ds:0xcb41080c,esi
  41ae6c:	mov    eax,DWORD PTR [edi]
  41ae6e:	es xchg ecx,eax
  41ae70:	pushf  
  41ae71:	sub    BYTE PTR [eax+0x62],dl
  41ae74:	sti    
  41ae75:	bound  ecx,QWORD PTR [esi+edx*1+0x35]
  41ae79:	mov    edx,0xb68e2aa1
  41ae7e:	test   al,0xa7
  41ae80:	arpl   WORD PTR [ebx-0x15],dx
  41ae83:	mov    edx,0x79b361fc
  41ae88:	inc    esp
  41ae89:	mov    dl,BYTE PTR [edx]
  41ae8b:	push   edx
  41ae8c:	sbb    ah,BYTE PTR [eax-0x20ac3158]
  41ae92:	or     cl,dh
  41ae94:	mov    dh,0x43
  41ae96:	es (bad) 
  41ae98:	in     al,dx
  41ae99:	pushf  
  41ae9a:	and    al,0xe
  41ae9c:	push   ebx
  41ae9d:	int3   
  41ae9e:	call   0xe7cf5983
  41aea3:	mov    bh,0xd5
  41aea5:	pop    esi
  41aea6:	sub    al,0x29
  41aea8:	xchg   edx,eax
  41aea9:	retf   
  41aeaa:	mov    esp,0x9daae59d
  41aeaf:	xchg   DWORD PTR ds:0xbbeefcff,ebx
  41aeb5:	sub    ecx,DWORD PTR [esi]
  41aeb7:	mov    cl,0xe3
  41aeb9:	add    BYTE PTR [esi-0x46],ah
  41aebc:	jmp    0xb567:0xec009ce6
  41aec3:	and    BYTE PTR [edi],bh
  41aec5:	mov    ?,WORD PTR [ecx-0x197a2452]
  41aecb:	xchg   ebp,eax
  41aecc:	fisttp DWORD PTR [esi]
  41aece:	pop    ebx
  41aecf:	push   es
  41aed0:	hlt    
  41aed1:	(bad)  
  41aed2:	retf   
  41aed3:	stos   DWORD PTR es:[edi],eax
  41aed4:	cmp    BYTE PTR [esi-0x6],0x7c
  41aed8:	push   0x1e38f135
  41aedd:	mov    esp,0x9b0cbc00
  41aee2:	rcl    BYTE PTR [ebx-0x7a],cl
  41aee5:	sbb    ecx,DWORD PTR [esi]
  41aee7:	rol    edi,1
  41aee9:	pop    ds
  41aeea:	lea    esi,[edx]
  41aeec:	xchg   ebp,eax
  41aeed:	mov    cl,0xa8
  41aeef:	icebp  
  41aef0:	fst    DWORD PTR [esi]
  41aef2:	jae    0x41aed3
  41aef4:	sbb    BYTE PTR [ecx-0x96cab7d],0x3f
  41aefb:	push   0x1
  41aefd:	xor    al,bh
  41aeff:	dec    eax
  41af00:	repnz stos BYTE PTR es:[edi],al
  41af02:	cmp    al,0x25
  41af04:	cdq    
  41af05:	xor    ebx,DWORD PTR [ecx-0x21426fde]
  41af0b:	pushf  
  41af0c:	(bad)  
  41af0d:	retf   
  41af0e:	pop    esp
  41af0f:	ss inc esp
  41af11:	push   eax
  41af12:	rol    BYTE PTR [eax-0x16],cl
  41af15:	add    al,0x52
  41af17:	or     DWORD PTR [eax],ebp
  41af19:	mov    bh,BYTE PTR [edx]
  41af1b:	xor    DWORD PTR [ecx-0x5f],eax
  41af1e:	pop    edx
  41af1f:	cli    
  41af20:	xor    dh,BYTE PTR [esi+eiz*4+0x399bb080]
  41af27:	pop    edi
  41af28:	hlt    
  41af29:	ficom  DWORD PTR fs:[esi+ecx*4]
  41af2d:	imul   ebp,DWORD PTR [ebx],0xd0250741
  41af33:	arpl   WORD PTR [esi-0x1389a95f],bx
  41af39:	cs lahf 
  41af3b:	sti    
  41af3c:	mov    ecx,esp
  41af3e:	imul   ebx,DWORD PTR ds:0xb2162d79,0xffffffad
  41af45:	dec    esp
  41af46:	jne    0x41aedd
  41af48:	xchg   ebp,eax
  41af49:	xchg   edi,eax
  41af4a:	shl    DWORD PTR [edi],1
  41af4c:	add    BYTE PTR [edx],0xc
  41af4f:	mov    esi,0xd291f3fd
  41af54:	enter  0x1e90,0x46
  41af58:	mov    dl,0x99
  41af5a:	mov    ds:0x21c6edfe,eax
  41af5f:	pop    ecx
  41af60:	push   ss
  41af61:	mov    ?,WORD PTR [esi]
  41af63:	adc    DWORD PTR [ebx-0x6bb3e633],ebp
  41af69:	sub    eax,0x34c56e57
  41af6e:	aam    0x34
  41af70:	adc    al,0x53
  41af72:	inc    ecx
  41af73:	arpl   WORD PTR [ecx+0x4a],bx
  41af76:	cmc    
  41af77:	pop    esi
  41af78:	jns    0x41af23
  41af7a:	stos   DWORD PTR es:[edi],eax
  41af7b:	sub    ah,BYTE PTR [ebp-0x2d3c1ece]
  41af81:	aad    0xf4
  41af83:	push   cs
  41af84:	cmp    al,BYTE PTR [esi+0x7f]
  41af87:	xor    al,0xfe
  41af89:	adc    edx,DWORD PTR [edx]
  41af8b:	sbb    ebp,DWORD PTR [ecx]
  41af8d:	mov    DWORD PTR [esi+0x7d],0xe7ff015b
  41af94:	hlt    
  41af95:	sti    
  41af96:	call   0x166f:0xd008cb66
  41af9d:	mov    esp,0xcec21394
  41afa2:	xlat   BYTE PTR ds:[ebx]
  41afa3:	push   esi
  41afa4:	pop    ebx
  41afa5:	jl     0x41b01b
  41afa7:	and    BYTE PTR [edi+0x24],dh
  41afaa:	add    al,0x3e
  41afac:	fidivr WORD PTR [ebx+ecx*1-0x18]
  41afb0:	push   ebx
  41afb1:	xchg   DWORD PTR [eax-0x5010efef],esp
  41afb7:	lds    edi,FWORD PTR ss:[ebp-0x10]
  41afbb:	or     BYTE PTR [eax],bl
  41afbd:	mov    bh,0x69
  41afbf:	xor    DWORD PTR [ecx+edi*2],ebx
  41afc2:	cmp    DWORD PTR [edx],edi
  41afc4:	cmp    esi,DWORD PTR [eax]
  41afc6:	jp     0x41af86
  41afc8:	(bad)  
  41afc9:	imul   ebp,DWORD PTR [esp+edx*1],0xffffffcf
  41afcd:	nop
  41afce:	popa   
  41afcf:	dec    edx
  41afd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afd1:	int    0x38
  41afd3:	popf   
  41afd4:	push   ebx
  41afd5:	mov    eax,0xfd800ed
  41afda:	aas    
  41afdb:	imul   ecx,ebx,0x74
  41afde:	nop
  41afdf:	test   al,0x5e
  41afe1:	inc    ebp
  41afe2:	fldenv [ebx]
  41afe4:	sbb    ah,BYTE PTR [ebx+0x55]
  41afe7:	lock leave 
  41afe9:	popf   
  41afea:	fsub   QWORD PTR [esi+0x7c05eab0]
  41aff0:	sub    DWORD PTR [ecx-0x31],esp
  41aff3:	mov    esp,0x30bf7ec2
  41aff8:	push   0x25
  41affa:	fsub   st,st(6)
  41affc:	push   ebp
  41affd:	xchg   ebx,eax
  41affe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afff:	fsubr  QWORD PTR [ebp-0x31]
  41b002:	inc    edx
  41b003:	inc    eax
  41b004:	jmp    0xe072775c
  41b009:	push   eax
  41b00a:	inc    edi
  41b00b:	inc    ebp
  41b00c:	scas   al,BYTE PTR es:[edi]
  41b00d:	xor    bh,bh
  41b00f:	push   ss
  41b010:	aad    0x5c
  41b012:	adc    al,0xe6
  41b014:	inc    esp
  41b015:	call   0xce0c:0x833a7370
  41b01c:	jno    0x41b04c
  41b01e:	in     al,0xc6
  41b020:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b021:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b022:	arpl   ax,si
  41b024:	lods   eax,DWORD PTR ds:[esi]
  41b025:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b026:	push   esi
  41b027:	mov    dl,0x92
  41b029:	repz in eax,dx
  41b02b:	shl    BYTE PTR [ebp+0x6b],cl
  41b02e:	xor    BYTE PTR [ebx-0x71],bl
  41b031:	jmp    0xd943:0x95875a9c
  41b038:	test   DWORD PTR [esi],edi
  41b03a:	(bad)  
  41b03c:	mov    fs,WORD PTR [ecx-0x6c59289f]
  41b042:	xchg   DWORD PTR [edx+eiz*8-0x34],ebx
  41b046:	lods   al,BYTE PTR ds:[esi]
  41b047:	mov    ds:0x9a5ee11b,eax
  41b04c:	cmp    eax,0x76edd80b
  41b051:	clc    
  41b052:	dec    esi
  41b053:	adc    eax,0xd5237674
  41b058:	mov    DWORD PTR [esi],edi
  41b05a:	sbb    DWORD PTR [edi+0x20],edx
  41b05d:	pop    ebx
  41b05e:	sbb    edx,DWORD PTR [esp+eax*2-0x75]
  41b062:	shl    DWORD PTR [edi],0xe4
  41b065:	ret    
  41b066:	push   0x1768ffcf
  41b06b:	cmp    BYTE PTR [eax+0x71],0x9c
  41b06f:	push   eax
  41b070:	sbb    eax,0xa0254d40
  41b075:	xor    edi,DWORD PTR [edx]
  41b077:	ret    
  41b078:	enter  0x425,0xa9
  41b07c:	mov    cl,BYTE PTR [ebx-0x1968b69b]
  41b082:	jl     0x41b0d5
  41b084:	adc    ebp,DWORD PTR [ebx]
  41b086:	aaa    
  41b087:	mov    bl,0x61
  41b089:	and    BYTE PTR [eax],bl
  41b08b:	mov    ch,0xc8
  41b08d:	adc    ah,ch
  41b08f:	aad    0xe2
  41b091:	cmp    al,BYTE PTR [ebx]
  41b093:	into   
  41b094:	out    dx,al
  41b095:	clc    
  41b096:	sub    ecx,ecx
  41b098:	je     0x41b107
  41b09a:	jecxz  0x41b0ec
  41b09c:	cmp    al,0xde
  41b09e:	xlat   BYTE PTR ds:[ebx]
  41b09f:	int3   
  41b0a0:	test   BYTE PTR [ecx+0x1a],bh
  41b0a3:	int3   
  41b0a4:	popa   
  41b0a5:	ss jnp 0x41b090
  41b0a8:	in     eax,0xe5
  41b0aa:	mov    DWORD PTR [edi],esi
  41b0ac:	cmp    DWORD PTR [eax+0x2913b434],edx
  41b0b2:	mov    BYTE PTR [esi+eiz*1+0x7c],ch
  41b0b6:	mov    edi,0xb482b5a0
  41b0bb:	and    eax,0x4d42f0c1
  41b0c0:	jle    0x41b0ff
  41b0c2:	or     bh,0xf5
  41b0c5:	sub    al,0xc0
  41b0c7:	pop    eax
  41b0c8:	jmp    DWORD PTR [edi]
  41b0ca:	sbb    DWORD PTR [eax+0xd],esi
  41b0cd:	and    BYTE PTR [edi+0x237711be],dl
  41b0d3:	and    eax,0x226ee589
  41b0d8:	out    0x39,eax
  41b0da:	cli    
  41b0db:	push   edi
  41b0dc:	sbb    BYTE PTR [esi+0x7b2e41f6],ch
  41b0e2:	fdivr  st,st(3)
  41b0e4:	out    dx,eax
  41b0e5:	lock enter 0xd33f,0xb5
  41b0ea:	(bad)  
  41b0eb:	xchg   ebx,eax
  41b0ec:	sar    DWORD PTR [edx+0x358380db],cl
  41b0f2:	test   eax,0x2eaa8cb5
  41b0f7:	push   esp
  41b0f8:	push   ebx
  41b0f9:	mov    dh,0x35
  41b0fb:	jecxz  0x41b0eb
  41b0fd:	jne    0x41b13a
  41b0ff:	sub    BYTE PTR [edi-0x59fa36c2],cl
  41b105:	push   ecx
  41b106:	sub    al,0x73
  41b108:	(bad)  [edi]
  41b10a:	(bad)  [edi]
  41b10c:	out    dx,eax
  41b10d:	or     ch,BYTE PTR [eax+0x59]
  41b110:	mov    edi,esp
  41b112:	jns    0x41b0f1
  41b114:	shr    esp,cl
  41b116:	sbb    DWORD PTR [ebx-0x69fdb832],ecx
  41b11c:	pop    ebp
  41b11d:	popa   
  41b11e:	lds    edi,FWORD PTR [ebp-0xb]
  41b121:	retf   0x7932
  41b124:	repz inc ebp
  41b126:	push   ds
  41b127:	mov    edx,0x1b9851d4
  41b12c:	add    esi,DWORD PTR [esi]
  41b12e:	jb     0x41b108
  41b130:	mov    edx,0xc967bed3
  41b135:	pushf  
  41b136:	repz scas al,BYTE PTR es:[edi]
  41b138:	dec    esp
  41b139:	xor    ch,BYTE PTR [ebp+0x6cbb2775]
  41b13f:	aam    0xb9
  41b141:	outs   dx,BYTE PTR ds:[esi]
  41b142:	adc    al,0x3
  41b144:	sbb    ch,BYTE PTR [edx+0x66]
  41b147:	leave  
  41b148:	(bad)  
  41b149:	fnstenv [ebp-0x5d]
  41b14c:	repnz add BYTE PTR [eax],al
  41b14f:	add    BYTE PTR [eax],al
  41b151:	add    ah,bh
  41b153:	es out dx,eax
  41b155:	mov    eax,ds:0x7ffee9ff
  41b15a:	jmp    edx
  41b15c:	fdivp  st(6),st
  41b15e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b15f:	sahf   
  41b160:	dec    ebp
  41b161:	sbb    ecx,DWORD PTR [edi-0xcfffed3]
  41b167:	add    al,0x0
  41b169:	add    BYTE PTR [ebx+0x4e9d14b2],bh
  41b16f:	mov    dl,0x17
  41b171:	pop    ebp
  41b172:	or     DWORD PTR [eax+esi*8+0x68],eax
  41b176:	cmc    
  41b177:	add    BYTE PTR [esi+0x2],0x94
  41b17b:	mov    al,0xaf
  41b17d:	mov    ebx,0x56fd7341
  41b182:	mov    ah,0xe1
  41b184:	sbb    al,0xf1
  41b186:	inc    esi
  41b187:	or     DWORD PTR [esi+0x2e8fa5fd],edi
  41b18d:	enter  0x1761,0xb7
  41b191:	pop    es
  41b192:	ret    
  41b193:	aam    0xdc
  41b195:	jns    0x41b1d9
  41b197:	sub    DWORD PTR gs:[ecx+0x3e],edi
  41b19b:	pop    esp
  41b19c:	dec    esi
  41b19d:	adc    ebx,ebx
  41b19f:	sbb    al,0xff
  41b1a1:	lods   eax,DWORD PTR ds:[esi]
  41b1a2:	push   ss
  41b1a3:	jo     0x41b1d0
  41b1a5:	sbb    ch,dh
  41b1a7:	repnz ins BYTE PTR es:[edi],dx
  41b1a9:	jl     0x41b191
  41b1ab:	bound  edx,QWORD PTR [edi+0x5abc099f]
  41b1b1:	mov    edx,0x25270346
  41b1b6:	cmp    al,0xd6
  41b1b8:	rep ins DWORD PTR es:[edi],dx
  41b1ba:	jp     0x41b1d5
  41b1bc:	int3   
  41b1bd:	cwd    
  41b1bf:	jo     0x41b19c
  41b1c1:	in     eax,dx
  41b1c2:	mov    edi,0xc2d05b90
  41b1c7:	cmp    BYTE PTR [edx+0x19a3960],0x49
  41b1ce:	icebp  
  41b1cf:	jne    0x41b191
  41b1d1:	or     BYTE PTR [esi-0x49],ch
  41b1d4:	push   ebx
  41b1d5:	stos   DWORD PTR es:[edi],eax
  41b1d6:	fnstcw WORD PTR [eax+0x72]
  41b1d9:	jo     0x41b1b3
  41b1db:	std    
  41b1dc:	stc    
  41b1dd:	mov    ch,0x93
  41b1df:	outs   dx,DWORD PTR ds:[esi]
  41b1e0:	paddb  mm1,QWORD PTR [ebx+0x6a]
  41b1e4:	in     eax,0x36
  41b1e6:	fstp   TBYTE PTR ds:0xd6ac88d6
  41b1ec:	mov    ecx,0x7c130c51
  41b1f1:	xor    eax,0x16170f68
  41b1f6:	or     DWORD PTR [eax-0x291e1910],ebp
  41b1fc:	mov    ebx,0xa21bab25
  41b201:	popf   
  41b202:	cmp    al,0xdc
  41b204:	call   0x8bcc:0x2fe41f18
  41b20b:	adc    bh,BYTE PTR [ecx-0x28c6f869]
  41b211:	into   
  41b212:	xor    eax,edx
  41b214:	or     al,bl
  41b216:	sti    
  41b217:	pop    es
  41b218:	scas   al,BYTE PTR es:[edi]
  41b219:	inc    eax
  41b21a:	rol    BYTE PTR [ebp-0x1bb35f3a],1
  41b220:	mov    dl,0xff
  41b222:	pop    ecx
  41b223:	jns    0x41b1b4
  41b225:	dec    ecx
  41b226:	fisttp DWORD PTR [ebx-0x7d975ea8]
  41b22c:	out    0x57,al
  41b22e:	loope  0x41b1d4
  41b230:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b231:	mov    ds:0x7ca8b9b4,eax
  41b236:	or     eax,0xa51de210
  41b23b:	inc    ecx
  41b23c:	mov    al,0xab
  41b23e:	rcl    DWORD PTR [esi+0x3e1d06be],cl
  41b244:	xlat   BYTE PTR ds:[ebx]
  41b245:	xchg   edx,eax
  41b246:	out    dx,eax
  41b247:	add    BYTE PTR [eax-0xe],ch
  41b24a:	jne    0x41b24a
  41b24c:	jge    0x41b228
  41b24e:	fidiv  DWORD PTR [edi-0x2cd3dc5b]
  41b254:	inc    edi
  41b255:	xchg   esp,eax
  41b256:	xor    esp,DWORD PTR [eax+esi*4]
  41b259:	dec    ebp
  41b25a:	pop    edx
  41b25b:	xchg   esi,eax
  41b25c:	adc    BYTE PTR ds:0x4d3c758d,al
  41b262:	sub    eax,0xd19a8f7e
  41b267:	mov    ecx,0x7d71b703
  41b26c:	call   0x51b5032c
  41b271:	push   ebx
  41b272:	cmp    al,0x63
  41b274:	pusha  
  41b275:	xchg   edi,eax
  41b276:	jg     0x41b25f
  41b278:	push   ds
  41b279:	(bad)
  41b27c:	popa   
  41b27d:	mov    fs,WORD PTR [ecx+0x58]
  41b280:	mov    eax,DWORD PTR [ebx-0x4599eedc]
  41b286:	sub    DWORD PTR [edi],ecx
  41b288:	pop    es
  41b289:	test   al,0x8a
  41b28b:	pop    ebx
  41b28c:	jle    0x41b304
  41b28e:	or     eax,0x428fd5e2
  41b293:	xor    ebp,ebx
  41b295:	jo     0x41b2d0
  41b297:	mov    ?,eax
  41b299:	pushf  
  41b29a:	std    
  41b29b:	push   cs
  41b29c:	je     0x41b28e
  41b29e:	inc    edx
  41b29f:	aad    0x7
  41b2a1:	xchg   ebx,eax
  41b2a2:	les    esi,FWORD PTR [edx-0x3520201b]
  41b2a8:	mov    eax,ds:0xd3ae5031
  41b2ad:	leave  
  41b2ae:	adc    DWORD PTR [esi+0x15a87733],ebx
  41b2b4:	adc    DWORD PTR [edx],esp
  41b2b6:	jp     0x41b2c5
  41b2b8:	xor    edx,esi
  41b2ba:	xlat   BYTE PTR ds:[ebx]
  41b2bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2bc:	xor    DWORD PTR [eax+0xf],ebp
  41b2bf:	sar    bh,1
  41b2c1:	adc    BYTE PTR [ecx],dl
  41b2c3:	mov    dl,0xaf
  41b2c5:	adc    DWORD PTR [esi+0x40],esi
  41b2c8:	mov    dh,0xb3
  41b2ca:	push   ebx
  41b2cb:	sbb    BYTE PTR [ebx+0x1],al
  41b2ce:	scas   al,BYTE PTR es:[edi]
  41b2cf:	in     eax,dx
  41b2d0:	mov    ds:0xa77fa35c,al
  41b2d5:	cdq    
  41b2d6:	sub    DWORD PTR ds:0x815dab9a,ebp
  41b2dc:	mov    dl,0x3e
  41b2de:	adc    eax,0x53a0abbb
  41b2e3:	push   eax
  41b2e4:	mov    edx,0xeda3f93f
  41b2e9:	fmul   QWORD PTR [edi-0x4d27aafd]
  41b2ef:	int    0xf
  41b2f1:	in     al,0x6d
  41b2f3:	jmp    0xc2ae:0x89bdb1d7
  41b2fa:	jns    0x41b2c8
  41b2fc:	and    eax,0xf27baa78
  41b301:	add    eax,DWORD PTR [ebp+0xe]
  41b304:	std    
  41b305:	ret    
  41b306:	push   ds
  41b307:	cdq    
  41b308:	(bad)  
  41b309:	mov    dl,0xfa
  41b30b:	out    0xc6,eax
  41b30d:	dec    edx
  41b30e:	sbb    eax,0x195a9ee1
  41b313:	fild   WORD PTR [ebp-0x4c32f93d]
  41b319:	jmp    0x222ac89f
  41b31e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b31f:	(bad)  
  41b321:	xor    DWORD PTR [ebp-0x5f],esi
  41b324:	sub    ecx,edi
  41b326:	and    edi,ecx
  41b328:	ror    DWORD PTR [edx+0x2777975a],cl
  41b32e:	push   edi
  41b32f:	dec    ebp
  41b330:	inc    ebp
  41b331:	addr16 dec edi
  41b333:	ja     0x41b32f
  41b335:	adc    al,0x61
  41b337:	into   
  41b338:	adc    al,bh
  41b33a:	push   ebp
  41b33b:	ret    0x45d5
  41b33e:	jmp    0x7977:0x380b9061
  41b345:	ret    0xab95
  41b348:	push   eax
  41b349:	jmp    0xce6f:0x3ab8f0f8
  41b350:	adc    BYTE PTR [esi+0xe07ac67],0xc5
  41b357:	cdq    
  41b358:	ror    ecx,0x7b
  41b35b:	mov    BYTE PTR [esi+0x6873b5c2],bl
  41b361:	push   ds
  41b362:	cmp    ch,BYTE PTR [edx]
  41b364:	push   ebp
  41b365:	and    al,0xb
  41b367:	stos   BYTE PTR es:[edi],al
  41b368:	loop   0x41b2f7
  41b36a:	dec    esp
  41b36b:	iret   
  41b36c:	leave  
  41b36d:	dec    ecx
  41b36e:	sub    BYTE PTR [ebx],ch
  41b370:	mov    ds:0x186ba718,eax
  41b375:	scas   al,BYTE PTR es:[edi]
  41b376:	cmp    eax,esi
  41b378:	ret    0x2e38
  41b37b:	sbb    al,0x2d
  41b37d:	push   edx
  41b37e:	clc    
  41b37f:	sbb    bh,BYTE PTR [eax+0xae66890]
  41b385:	and    bl,ah
  41b387:	adc    DWORD PTR [ebx-0x42],0x82d18299
  41b38e:	cwde   
  41b38f:	retf   0x972d
  41b392:	fist   WORD PTR [ebp-0x52]
  41b395:	cmp    DWORD PTR [edx-0x6e],ebx
  41b398:	(bad)  
  41b399:	addr16 stc 
  41b39b:	clc    
  41b39c:	xor    DWORD PTR [edi],0x35
  41b39f:	mov    DWORD PTR [eax+0x16500318],esp
  41b3a5:	jnp    0x41b3ca
  41b3a7:	fisub  DWORD PTR [edx+0x2a]
  41b3aa:	es cld 
  41b3ac:	not    BYTE PTR [eax]
  41b3ae:	jb     0x41b3b8
  41b3b0:	mov    ds:0xc56a9ec1,eax
  41b3b5:	jae    0x41b3e2
  41b3b7:	pop    ebx
  41b3b8:	(bad)  
  41b3ba:	xchg   esp,eax
  41b3bb:	(bad)  
  41b3bc:	(bad)  
  41b3bd:	je     0x41b384
  41b3bf:	xor    ch,bl
  41b3c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3c2:	mov    WORD PTR [edi+0x532b8ca9],ss
  41b3c8:	arpl   WORD PTR [esi-0x53],bp
  41b3cb:	stos   DWORD PTR es:[edi],eax
  41b3cc:	not    BYTE PTR [edx]
  41b3ce:	gs nop
  41b3d0:	mov    esp,0xeb62f842
  41b3d5:	dec    esp
  41b3d6:	repz in eax,0x0
  41b3d9:	call   0x8d1a:0x200b3812
  41b3e0:	cmp    al,0x13
  41b3e2:	pop    ds
  41b3e3:	fadd   DWORD PTR [ebp+0x52]
  41b3e6:	ins    DWORD PTR es:[edi],dx
  41b3e7:	pop    edi
  41b3e8:	ror    BYTE PTR [ebx-0x69],0xc2
  41b3ec:	in     al,dx
  41b3ed:	loopne 0x41b3dc
  41b3ef:	and    ebx,ebp
  41b3f1:	and    al,BYTE PTR [ebx-0xd145367]
  41b3f7:	ss hlt 
  41b3f9:	inc    edx
  41b3fa:	pushf  
  41b3fb:	jno    0x41b423
  41b3fd:	out    dx,al
  41b3fe:	hlt    
  41b3ff:	or     al,0x4e
  41b401:	mov    cl,bh
  41b403:	hlt    
  41b404:	mov    ch,0x9
  41b406:	xlat   BYTE PTR ds:[ebx]
  41b407:	popa   
  41b408:	(bad)  
  41b409:	push   ss
  41b40a:	ret    
  41b40b:	jge    0x41b43a
  41b40d:	cwde   
  41b40e:	lahf   
  41b40f:	ja     0x41b433
  41b411:	cmp    BYTE PTR [ebp-0x3f],ah
  41b414:	add    DWORD PTR [edx+0x1d2147de],edx
  41b41a:	cld    
  41b41b:	cmp    ebp,DWORD PTR [edi-0x7c83c436]
  41b421:	icebp  
  41b422:	imul   ebp,DWORD PTR [esp+ebx*4-0x3],0x2b
  41b427:	mov    ds:0xbe456aa0,al
  41b42c:	aam    0xe5
  41b42e:	aam    0x26
  41b430:	push   cs
  41b431:	fs jl  0x41b47c
  41b434:	setbe  BYTE PTR [ebx+0x5ee74918]
  41b43b:	push   esi
  41b43c:	scas   al,BYTE PTR es:[edi]
  41b43d:	xchg   edi,eax
  41b43e:	adc    al,0x6a
  41b440:	mov    dh,0xd8
  41b442:	stos   BYTE PTR es:[edi],al
  41b443:	(bad)  
  41b444:	fisub  DWORD PTR [ebp+0x7a]
  41b447:	dec    eax
  41b448:	or     cl,BYTE PTR cs:[ebp+0x5568a12e]
  41b44f:	mov    dl,0x85
  41b451:	jle    0x41b3ef
  41b453:	push   cs
  41b454:	cmp    DWORD PTR [ecx],esi
  41b456:	fs icebp 
  41b458:	mov    edi,0xf3abd7f5
  41b45d:	scas   eax,DWORD PTR es:[edi]
  41b45e:	pop    edi
  41b45f:	outs   dx,BYTE PTR ds:[esi]
  41b460:	stc    
  41b461:	pop    edi
  41b462:	fmul   QWORD PTR [edi+0x63eead7b]
  41b468:	or     ah,BYTE PTR es:[ebx-0x2e]
  41b46c:	add    eax,0x50c9f5e2
  41b471:	cmc    
  41b472:	out    0xb3,eax
  41b474:	js     0x41b4f0
  41b476:	jo     0x41b464
  41b478:	jecxz  0x41b4e5
  41b47a:	jecxz  0x41b491
  41b47c:	mov    dl,0x55
  41b47e:	ds in  eax,dx
  41b480:	lds    esp,FWORD PTR [ebx+0x67]
  41b483:	dec    edi
  41b484:	mov    al,ds:0xe9fbe5f3
  41b489:	xchg   ebx,eax
  41b48a:	push   edx
  41b48b:	and    DWORD PTR [ebx],esp
  41b48d:	add    eax,0x3f44fc13
  41b492:	jle    0x41b4b7
  41b494:	jl     0x41b45c
  41b496:	xchg   esp,eax
  41b497:	fwait
  41b498:	mov    ?,WORD PTR [ebx+0x2]
  41b49b:	lds    esi,FWORD PTR [ebx-0x27]
  41b49e:	or     esp,DWORD PTR [ecx-0x6a]
  41b4a1:	push   0x9c21bf23
  41b4a6:	fst    QWORD PTR [edx+0x16]
  41b4a9:	push   esp
  41b4aa:	push   ecx
  41b4ab:	adc    ecx,DWORD PTR [esi-0x60]
  41b4ae:	lahf   
  41b4af:	sub    ah,bl
  41b4b1:	mov    dh,0x8e
  41b4b3:	mov    dl,0x0
  41b4b5:	jbe    0x41b49d
  41b4b7:	mov    edx,?
  41b4b9:	mov    bl,0x27
  41b4bb:	pop    ds
  41b4bc:	dec    edx
  41b4bd:	push   es
  41b4be:	es inc esp
  41b4c0:	in     eax,dx
  41b4c1:	mov    esi,DWORD PTR [ebx+0x43]
  41b4c4:	out    0x17,eax
  41b4c6:	adc    BYTE PTR [edx+0x18e1e03a],dh
  41b4cc:	sbb    DWORD PTR [ebp-0x7e1f2bec],esi
  41b4d2:	not    BYTE PTR [esi]
  41b4d4:	and    eax,0xb7f1b87a
  41b4d9:	test   BYTE PTR [esi-0x12],bl
  41b4dc:	imul   eax,eax,0xa6453c92
  41b4e2:	push   es
  41b4e3:	xchg   ecx,eax
  41b4e4:	hlt    
  41b4e5:	push   esp
  41b4e6:	jle    0x41b48d
  41b4e8:	inc    ebx
  41b4e9:	mov    bl,0x88
  41b4eb:	lds    esp,FWORD PTR [edi-0x1ea8750b]
  41b4f1:	push   edx
  41b4f2:	xchg   esi,eax
  41b4f3:	hlt    
  41b4f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4f5:	stos   DWORD PTR es:[edi],eax
  41b4f6:	or     BYTE PTR [esi+0x2a00b9c2],bl
  41b4fc:	adc    al,0xed
  41b4fe:	push   esi
  41b4ff:	adc    al,0x43
  41b501:	xchg   BYTE PTR [edi],bl
  41b503:	arpl   WORD PTR [eax+0x52],di
  41b506:	shl    BYTE PTR [edi+0x47],1
  41b509:	inc    edx
  41b50a:	in     al,dx
  41b50b:	out    dx,al
  41b50c:	lahf   
  41b50d:	sub    al,0x91
  41b50f:	(bad)  
  41b510:	out    0xd3,al
  41b512:	bound  ecx,QWORD PTR [ebx-0x1d]
  41b515:	pop    ds
  41b516:	pusha  
  41b517:	push   es
  41b518:	sbb    edx,DWORD PTR [esi+edi*1]
  41b51b:	adc    dl,BYTE PTR [ebx]
  41b51d:	int3   
  41b51e:	dec    ebp
  41b51f:	mov    eax,ds:0x280ea91b
  41b524:	outs   dx,BYTE PTR ds:[esi]
  41b525:	test   al,0x70
  41b527:	jmp    0x3a70:0xc90407af
  41b52e:	lea    esi,[edx+edx*4+0x39fdf41b]
  41b535:	les    edx,FWORD PTR [ebx]
  41b537:	not    dh
  41b539:	pop    ecx
  41b53a:	icebp  
  41b53b:	outs   dx,BYTE PTR ds:[esi]
  41b53c:	(bad)  [ebx+0x14]
  41b53f:	rol    DWORD PTR fs:[edi-0x12],1
  41b543:	adc    DWORD PTR ds:0x70962d27,eax
  41b549:	jne    0x41b571
  41b54b:	or     edi,DWORD PTR [edi]
  41b54d:	jp     0x41b54e
  41b54f:	outs   dx,BYTE PTR ds:[esi]
  41b550:	cld    
  41b551:	das    
  41b552:	icebp  
  41b553:	into   
  41b554:	in     eax,0x94
  41b556:	dec    ecx
  41b557:	mov    eax,ds:0x7f4ce693
  41b55c:	ret    
  41b55d:	jbe    0x41b5db
  41b55f:	sub    DWORD PTR [edx],esp
  41b561:	mov    ds:0x586ac718,al
  41b566:	in     al,dx
  41b567:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b568:	and    esi,DWORD PTR [ebp+0x62]
  41b56b:	jmp    0x41b5a2
  41b56d:	rol    DWORD PTR [edx+edx*8+0x72],cl
  41b571:	sahf   
  41b572:	cmp    al,0xd9
  41b574:	cmp    BYTE PTR [ecx],cl
  41b576:	mov    ds:0x11cde3b3,al
  41b57b:	ins    DWORD PTR es:[edi],dx
  41b57c:	mov    esi,0x3a6840a3
  41b581:	and    al,0x1b
  41b583:	sahf   
  41b584:	scas   eax,DWORD PTR es:[edi]
  41b585:	in     al,dx
  41b586:	inc    eax
  41b587:	xchg   DWORD PTR [eax-0x54164427],eax
  41b58d:	push   es
  41b58e:	or     esi,DWORD PTR [edx-0x76]
  41b591:	daa    
  41b592:	inc    ecx
  41b593:	outs   dx,DWORD PTR ds:[esi]
  41b594:	inc    esp
  41b595:	(bad)  
  41b596:	je     0x41b592
  41b598:	xor    BYTE PTR [ebx-0x1a44b64a],al
  41b59e:	mov    edi,0x4bef7ccb
  41b5a3:	scas   al,BYTE PTR es:[edi]
  41b5a4:	fist   WORD PTR [edi+0x2c]
  41b5a7:	imul   edi,DWORD PTR ds:0xbd555657,0xef7e7b99
  41b5b1:	cli    
  41b5b2:	cld    
  41b5b3:	xor    edx,DWORD PTR [ecx]
  41b5b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5b6:	retf   
  41b5b7:	bound  eax,QWORD PTR [eax-0x64]
  41b5ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5bb:	inc    ecx
  41b5bc:	lock jp 0x41b5aa
  41b5bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5c0:	not    DWORD PTR ss:[edx]
  41b5c3:	retf   0x4d14
  41b5c6:	outs   dx,BYTE PTR ds:[esi]
  41b5c8:	mov    bh,0x47
  41b5ca:	xchg   BYTE PTR [edx],dl
  41b5cc:	inc    esp
  41b5cd:	xor    al,0x33
  41b5cf:	nop
  41b5d0:	popa   
  41b5d1:	push   edx
  41b5d2:	jmp    0x41b62d
  41b5d4:	xor    BYTE PTR [edi],ah
  41b5d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5d7:	ret    0x8850
  41b5da:	dec    ebx
  41b5db:	scas   eax,DWORD PTR es:[edi]
  41b5dc:	call   0x1b4d:0x8cbd2299
  41b5e3:	icebp  
  41b5e4:	jmp    0x5bca192c
  41b5e9:	sub    DWORD PTR [edi],esi
  41b5eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5ec:	out    dx,al
  41b5ed:	sbb    ebx,edi
  41b5ef:	inc    ebp
  41b5f0:	stos   BYTE PTR es:[edi],al
  41b5f1:	inc    edi
  41b5f2:	es jmp 0x19346b23
  41b5f8:	or     DWORD PTR [esi-0x49],0x3
  41b5fc:	stos   DWORD PTR es:[edi],eax
  41b5fd:	pop    es
  41b5fe:	mov    ds:0xc21fd29c,eax
  41b603:	push   esi
  41b604:	ret    
  41b605:	mul    BYTE PTR [ebx-0x6fd12637]
  41b60b:	inc    esi
  41b60c:	icebp  
  41b60d:	xor    eax,0xe39a55ec
  41b612:	and    ah,BYTE PTR [esi+0x6e]
  41b615:	sbb    eax,0x55f02db4
  41b61a:	cli    
  41b61b:	cdq    
  41b61c:	loop   0x41b606
  41b61e:	mov    bl,0x31
  41b620:	fld    TBYTE PTR [ebp+0x1f]
  41b623:	(bad)  [eax-0x449dd9e5]
  41b629:	lods   eax,DWORD PTR ds:[esi]
  41b62a:	popa   
  41b62b:	pushf  
  41b62c:	push   ss
  41b62d:	mov    dl,0xc6
  41b62f:	jmp    DWORD PTR [eax]
  41b631:	inc    ecx
  41b632:	popf   
  41b633:	mov    eax,0xd05d4902
  41b638:	rdmsr  
  41b63a:	push   edx
  41b63b:	in     eax,0x8c
  41b63d:	shl    DWORD PTR [ebx-0x39ce9bbc],0x0
  41b644:	inc    esp
  41b645:	int    0x69
  41b647:	mov    ah,0x7
  41b649:	sbb    al,0x6e
  41b64b:	jo     0x41b605
  41b64d:	bound  esp,QWORD PTR [ecx+edi*4+0x62252948]
  41b654:	pushf  
  41b655:	mov    eax,ds:0x72ba3b4
  41b65a:	or     dl,BYTE PTR [esi+0xf6]
  41b660:	add    BYTE PTR [eax],al
  41b662:	(bad)  
  41b663:	aaa    
  41b664:	sti    
  41b665:	addr16 sti 
  41b667:	out    dx,eax
  41b668:	fidiv  WORD PTR [edi-0x5c01975c]
  41b66e:	sbb    edi,edi
  41b670:	popa   
  41b671:	push   edx
  41b672:	xor    BYTE PTR [edx],0x1
  41b675:	add    bl,dh
  41b677:	add    al,0x0
  41b679:	add    BYTE PTR [edi+0x53f4995f],bl
  41b67f:	sbb    dh,dl
  41b681:	lods   al,BYTE PTR ds:[esi]
  41b682:	ss aaa 
  41b684:	sbb    ebp,DWORD PTR [edi+eax*4]
  41b687:	(bad)  
  41b688:	mov    al,ds:0xdab66447
  41b68d:	dec    esi
  41b68e:	inc    edx
  41b68f:	jle    0x41b6f6
  41b691:	jae    0x41b6a8
  41b693:	into   
  41b694:	adc    al,0xdd
  41b696:	xor    dl,ch
  41b698:	and    BYTE PTR [edi+0x6c9966d0],ah
  41b69e:	idiv   DWORD PTR [esi]
  41b6a0:	gs mov ebx,0x488bfc85
  41b6a6:	dec    ecx
  41b6a7:	imul   esp,DWORD PTR [eax+0x5b],0x62
  41b6ab:	int    0x19
  41b6ad:	adc    al,BYTE PTR [edi]
  41b6af:	pusha  
  41b6b0:	ss mov ah,0x35
  41b6b3:	test   BYTE PTR [edx],cl
  41b6b5:	pop    ecx
  41b6b6:	stos   BYTE PTR es:[edi],al
  41b6b7:	xor    al,0x49
  41b6b9:	out    0xc,eax
  41b6bb:	dec    esi
  41b6bc:	push   edi
  41b6bd:	loop   0x41b71e
  41b6bf:	pusha  
  41b6c0:	out    0x46,al
  41b6c2:	xor    DWORD PTR [ebp-0x27],esp
  41b6c5:	mov    ds:0xb9ab4b7d,eax
  41b6ca:	nop
  41b6cb:	inc    ebx
  41b6cc:	jae    0x41b704
  41b6ce:	mov    al,ds:0x721f4ea1
  41b6d3:	out    0x58,al
  41b6d5:	shr    DWORD PTR [ecx+ecx*1],1
  41b6d8:	pop    ebx
  41b6d9:	or     bh,BYTE PTR [edx+0x4c3f9762]
  41b6df:	outs   dx,BYTE PTR ds:[esi]
  41b6e0:	mov    edx,0x7c311288
  41b6e5:	xchg   edx,eax
  41b6e6:	pop    eax
  41b6e7:	call   0x6426:0x691748e4
  41b6ee:	mov    esp,0x8ce390d6
  41b6f3:	jnp    0x41b71d
  41b6f5:	icebp  
  41b6f6:	mov    edx,ebp
  41b6f8:	pop    ebx
  41b6f9:	(bad)  
  41b6fa:	call   0x21ea44bb
  41b6ff:	test   al,0xe4
  41b701:	jo     0x41b6d8
  41b703:	xchg   ebp,eax
  41b704:	mov    fs,WORD PTR [edi]
  41b706:	in     al,0x93
  41b708:	mov    ecx,0x6f7278d4
  41b70d:	sbb    al,0xc3
  41b70f:	(bad)  
  41b710:	dec    edx
  41b711:	ins    BYTE PTR es:[edi],dx
  41b712:	shl    ah,0xe1
  41b715:	sbb    DWORD PTR ds:0xb242ea8c,esp
  41b71b:	outs   dx,BYTE PTR ds:[esi]
  41b71c:	xor    dl,BYTE PTR [ebx]
  41b71e:	mov    ecx,DWORD PTR [esi+0x7d888643]
  41b724:	adc    esp,DWORD PTR [edx+0x6c]
  41b727:	ret    0xbbe5
  41b72a:	into   
  41b72b:	stc    
  41b72c:	(bad)  
  41b72d:	repnz and al,0x97
  41b730:	cld    
  41b731:	and    DWORD PTR [ecx-0x5f13dec],0xfffffffa
  41b738:	xchg   DWORD PTR [edx+ebp*1+0x7b45c798],esp
  41b73f:	push   ecx
  41b740:	int3   
  41b741:	pop    ss
  41b742:	ret    0x6304
  41b745:	mov    ah,0xf3
  41b747:	out    0x2a,al
  41b749:	xlat   BYTE PTR ds:[ebx]
  41b74a:	jo     0x41b7b5
  41b74c:	jb     0x41b78b
  41b74e:	dec    ecx
  41b74f:	call   0x3aa713b0
  41b754:	fist   WORD PTR [esi+0x7e]
  41b757:	inc    ebx
  41b758:	mov    ebx,0x90eb66ee
  41b75d:	ins    DWORD PTR es:[edi],dx
  41b75e:	aas    
  41b75f:	add    BYTE PTR [edi-0x5a41c329],bl
  41b765:	fsubrp st(0),st
  41b767:	adc    edx,DWORD PTR [esi]
  41b769:	push   ss
  41b76a:	cld    
  41b76b:	(bad)  
  41b76c:	sub    bh,BYTE PTR [esi+0x20936b0]
  41b772:	pop    ss
  41b773:	add    al,0xc
  41b775:	adc    bl,ch
  41b777:	push   0xffffffa4
  41b779:	sbb    ah,dl
  41b77b:	push   ds
  41b77c:	comiss xmm7,xmm3
  41b77f:	push   es
  41b780:	aaa    
  41b781:	add    al,0xf
  41b783:	cwde   
  41b784:	rcl    DWORD PTR [ecx],0xbd
  41b787:	mov    esi,0xe1068586
  41b78c:	cmp    esp,DWORD PTR [eax+0x2661e0af]
  41b792:	pop    edx
  41b793:	scas   al,BYTE PTR es:[edi]
  41b794:	push   eax
  41b795:	pop    esi
  41b796:	add    BYTE PTR [ebp-0x3d93a83],dh
  41b79c:	ror    eax,0x2b
  41b79f:	mov    ds:0x776bbeff,al
  41b7a4:	hlt    
  41b7a5:	sahf   
  41b7a6:	retf   0x248d
  41b7a9:	push   ebp
  41b7aa:	call   0xe0836caa
  41b7af:	addr16 rcr edx,1
  41b7b2:	rcr    eax,cl
  41b7b4:	mov    bh,0xd1
  41b7b6:	mov    ch,BYTE PTR [edi-0x31c6ce2c]
  41b7bc:	push   esp
  41b7bd:	add    DWORD PTR [ecx+0x64],ecx
  41b7c0:	sti    
  41b7c1:	mov    ch,0xbe
  41b7c3:	sub    BYTE PTR [eax-0x69],al
  41b7c6:	(bad)  
  41b7c7:	pop    ss
  41b7c8:	push   esi
  41b7c9:	fcomp  QWORD PTR [esi]
  41b7cb:	mov    ebp,0xa8f1246f
  41b7d0:	mov    DWORD PTR [ebp+0x2be9ad33],ebx
  41b7d6:	call   0x959ffd4
  41b7db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7dc:	push   ds
  41b7dd:	dec    edi
  41b7de:	in     eax,0xdf
  41b7e0:	xchg   BYTE PTR [edx+0x47b4e239],bh
  41b7e6:	mov    ds:0x12147e3,al
  41b7eb:	popf   
  41b7ec:	out    dx,al
  41b7ed:	xchg   DWORD PTR [ebx-0x28],eax
  41b7f0:	sti    
  41b7f1:	mov    eax,ds:0x65a945ff
  41b7f6:	push   cs
  41b7f7:	pop    ebx
  41b7f8:	xchg   esi,eax
  41b7f9:	pop    ebp
  41b7fa:	adc    al,0x9a
  41b7fc:	inc    edi
  41b7fd:	out    0x6b,al
  41b7ff:	pop    esp
  41b800:	loop   0x41b86a
  41b802:	xchg   edi,eax
  41b803:	inc    ebx
  41b804:	pop    esp
  41b805:	inc    edi
  41b806:	das    
  41b807:	mov    ch,0x38
  41b809:	fiadd  DWORD PTR [edx-0x23]
  41b80c:	dec    ebp
  41b80d:	sub    cl,bl
  41b80f:	jbe    0x41b826
  41b811:	mov    ch,0x6a
  41b813:	mov    esp,0x2b8cf077
  41b818:	and    cl,bl
  41b81a:	jmp    0x33c84f55
  41b81f:	mov    esp,edi
  41b821:	imul   edx,DWORD PTR [esi-0x3a],0xfffffff2
  41b825:	pop    ss
  41b826:	jg     0x41b801
  41b828:	xlat   BYTE PTR ss:[ebx]
  41b82a:	push   cs
  41b82b:	cmp    eax,0x26ff4320
  41b830:	jns    0x41b834
  41b832:	mov    cl,dl
  41b834:	push   esi
  41b835:	adc    al,BYTE PTR [eax]
  41b837:	data16 pop si
  41b83a:	leave  
  41b83b:	add    al,0x7b
  41b83d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b83e:	scas   eax,DWORD PTR es:[edi]
  41b83f:	in     eax,dx
  41b840:	sbb    dh,ah
  41b842:	mov    ah,0x89
  41b844:	jb     0x41b824
  41b846:	cli    
  41b847:	int    0x5f
  41b849:	iret   
  41b84a:	jbe    0x41b89a
  41b84c:	(bad)  
  41b84d:	mov    esi,0xc68688a6
  41b852:	mov    WORD PTR [ecx+0x4862202a],ss
  41b858:	test   al,0x7e
  41b85a:	test   al,0x49
  41b85c:	cdq    
  41b85d:	cmp    BYTE PTR [edi+esi*2],ah
  41b860:	sub    al,0xb1
  41b862:	push   edx
  41b863:	daa    
  41b864:	add    al,0xcd
  41b866:	pop    edx
  41b867:	ret    0x1c0e
  41b86a:	(bad)  
  41b86b:	sub    al,0x55
  41b86d:	adc    DWORD PTR [esi+0x71],esi
  41b870:	mov    gs:0x52f125ad,eax
  41b876:	in     al,dx
  41b877:	pop    eax
  41b878:	jg     0x41b8ca
  41b87a:	inc    edx
  41b87b:	imul   BYTE PTR [edx+edx*4]
  41b87e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b87f:	xchg   BYTE PTR [ecx-0x7f],cl
  41b882:	ins    BYTE PTR es:[edi],dx
  41b883:	and    dh,BYTE PTR [esp+esi*2+0x2c6436fc]
  41b88a:	int    0xd5
  41b88c:	pop    edx
  41b88d:	(bad)  
  41b88e:	fsubp  st(0),st
  41b890:	sub    al,0x87
  41b892:	ficomp DWORD PTR [edx]
  41b894:	ins    BYTE PTR es:[edi],dx
  41b895:	mov    es,ebx
  41b897:	push   eax
  41b898:	cld    
  41b899:	pop    ss
  41b89a:	pop    edx
  41b89b:	and    bl,BYTE PTR [ebx+edx*8+0x3a979cb5]
  41b8a2:	xchg   ebp,eax
  41b8a3:	fs ds sub ebx,eax
  41b8a7:	bound  esp,QWORD PTR [edx+0x0]
  41b8aa:	into   
  41b8ab:	int3   
  41b8ac:	stos   BYTE PTR es:[edi],al
  41b8ad:	(bad)  
  41b8ae:	retf   
  41b8af:	mov    bh,0x5d
  41b8b1:	push   ds
  41b8b2:	add    ebx,DWORD PTR [esi]
  41b8b4:	gs push esi
  41b8b6:	adc    BYTE PTR [ecx-0xa244514],dl
  41b8bc:	xor    al,0xca
  41b8be:	cmp    DWORD PTR [ebx-0x3f2bb43e],edi
  41b8c4:	jno    0x41b8f9
  41b8c6:	push   bp
  41b8c8:	sub    BYTE PTR [edi],bh
  41b8ca:	cdq    
  41b8cb:	xor    BYTE PTR [esi-0x35],bh
  41b8ce:	in     eax,dx
  41b8cf:	sbb    al,0x1a
  41b8d1:	leave  
  41b8d2:	out    0x2c,al
  41b8d4:	and    dh,al
  41b8d6:	dec    eax
  41b8d7:	dec    eax
  41b8d8:	cmp    al,0x46
  41b8da:	fwait
  41b8db:	hlt    
  41b8dc:	and    bl,dh
  41b8de:	jmp    0x41b8be
  41b8e0:	adc    BYTE PTR es:[ebx],0x23
  41b8e4:	cs mov bl,0x64
  41b8e7:	(bad)  
  41b8e8:	in     al,0xc3
  41b8ea:	fld    DWORD PTR [esi+0x65]
  41b8ed:	push   esi
  41b8ee:	xchg   esp,eax
  41b8ef:	inc    esp
  41b8f0:	rcl    BYTE PTR [eax+ecx*4-0x5a98ff49],cl
  41b8f7:	adc    al,0x8
  41b8f9:	les    esi,FWORD PTR [edx]
  41b8fb:	pop    edx
  41b8fc:	jbe    0x41b8d3
  41b8fe:	mov    esi,0x9f8f195d
  41b903:	push   es
  41b904:	pop    ebx
  41b905:	dec    ecx
  41b906:	jge    0x41b90a
  41b908:	sbb    DWORD PTR [edx],edx
  41b90a:	addr16 in eax,0x37
  41b90d:	paddq  mm7,mm3
  41b910:	or     eax,0xa0a06d94
  41b915:	pop    ebx
  41b916:	(bad)  
  41b917:	cli    
  41b918:	inc    edx
  41b919:	(bad)  
  41b91a:	sub    edi,ecx
  41b91c:	cs dec ebx
  41b91e:	cwde   
  41b91f:	or     BYTE PTR [ecx],ah
  41b921:	dec    esi
  41b922:	mov    esp,0xc2433f73
  41b927:	add    ch,BYTE PTR [edx]
  41b929:	and    eax,0x1e12f5ee
  41b92e:	fadd   DWORD PTR [esi-0x21]
  41b931:	lods   eax,DWORD PTR ds:[esi]
  41b932:	ss push ecx
  41b934:	fimul  DWORD PTR [edi+0x704f7c77]
  41b93a:	add    eax,0x357240ef
  41b93f:	jnp    0x41b8c6
  41b941:	sbb    eax,0xae414d25
  41b946:	pop    esi
  41b947:	js     0x41b95a
  41b949:	arpl   WORD PTR [ebx+0x5e],si
  41b94c:	push   esp
  41b94d:	pop    ecx
  41b94e:	xchg   edi,eax
  41b94f:	or     BYTE PTR [edx],al
  41b951:	sbb    DWORD PTR [eax+ecx*2+0x58c76a29],ecx
  41b958:	mov    dh,0xba
  41b95a:	cmp    dl,BYTE PTR [ebp+0x590d96d9]
  41b960:	inc    edx
  41b961:	bound  edx,QWORD PTR [ebp+0x2745b552]
  41b967:	es cs cli 
  41b96a:	push   ecx
  41b96b:	fmulp  st(1),st
  41b96d:	inc    esi
  41b96e:	ret    0x9e20
  41b971:	mov    eax,ds:0x818ced3c
  41b976:	mov    dl,0x2e
  41b978:	add    BYTE PTR [ebx+0x33],ah
  41b97b:	aam    0xcd
  41b97d:	xor    cl,cl
  41b97f:	mov    ah,0x34
  41b981:	jno    0x41b98f
  41b983:	adc    eax,0x58bdb6ea
  41b988:	repnz aas 
  41b98a:	sbb    BYTE PTR [ecx-0x53a9a736],bh
  41b990:	mov    cl,0xae
  41b992:	pop    ebp
  41b993:	int3   
  41b994:	in     al,dx
  41b995:	gs sub bl,dh
  41b998:	jle    0x41ba09
  41b99a:	gs es jmp 0x77d192cb
  41b9a1:	push   0x1d9bc923
  41b9a6:	xchg   esi,eax
  41b9a7:	xchg   ebx,eax
  41b9a8:	adc    DWORD PTR ds:0x4e2804e3,eax
  41b9ae:	add    eax,0x4e2a9b7
  41b9b3:	adc    ch,BYTE PTR [esi-0x528f347c]
  41b9b9:	jl     0x41b9bf
  41b9bb:	or     eax,0x5f11f830
  41b9c0:	xchg   DWORD PTR [ebp-0x31235fb4],eax
  41b9c6:	mov    ds:0xbcd3160c,eax
  41b9cb:	mov    ebp,ecx
  41b9cd:	mov    dl,0xd3
  41b9cf:	in     eax,dx
  41b9d0:	mov    ah,0xf1
  41b9d2:	sbb    cl,al
  41b9d4:	cmp    esi,ecx
  41b9d6:	call   0xe5c3:0xf688151a
  41b9dd:	adc    eax,0x5fdf1569
  41b9e2:	loope  0x41ba53
  41b9e4:	or     cl,BYTE PTR [esi+0x47]
  41b9e7:	and    DWORD PTR [edi-0xf0efe7],ebx
  41b9ed:	pushf  
  41b9ee:	std    
  41b9ef:	and    ebp,0xffffffd2
  41b9f2:	bound  ebp,QWORD PTR [ecx+0x6bcb08b5]
  41b9f8:	adc    bh,BYTE PTR [eax+ebx*8+0x4f]
  41b9fc:	add    BYTE PTR [ebx+0x54],ch
  41b9ff:	inc    esp
  41ba00:	push   ecx
  41ba01:	or     BYTE PTR [edi-0x37f1edf9],al
  41ba07:	sub    eax,DWORD PTR [esi]
  41ba09:	pop    esp
  41ba0a:	xchg   BYTE PTR [eax],cl
  41ba0c:	sar    DWORD PTR [esi-0x52],1
  41ba0f:	imul   esi,DWORD PTR [ecx+0x6e],0x9abdb8e5
  41ba16:	dec    ebx
  41ba17:	das    
  41ba18:	je     0x41b99d
  41ba1a:	pop    ebx
  41ba1b:	fadd   QWORD PTR [edx-0x72e0ad64]
  41ba21:	(bad)  
  41ba22:	mov    dl,0x56
  41ba24:	fisubr WORD PTR [esi+0x18]
  41ba27:	push   es
  41ba28:	aam    0x8d
  41ba2a:	daa    
  41ba2b:	cdq    
  41ba2c:	in     eax,dx
  41ba2d:	mov    esp,0xc7c689f8
  41ba32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba33:	dec    esp
  41ba34:	jne    0x41ba51
  41ba36:	push   ss
  41ba37:	add    al,BYTE PTR [esi]
  41ba39:	fldenv [eax]
  41ba3b:	jp     0x41ba2d
  41ba3d:	cld    
  41ba3e:	int    0x5b
  41ba40:	scas   eax,DWORD PTR es:[edi]
  41ba41:	dec    ebx
  41ba42:	mov    esp,0x5c3293c4
  41ba47:	and    DWORD PTR [eax+eax*2],esp
  41ba4a:	retf   
  41ba4b:	loope  0x41ba6c
  41ba4d:	fsubr  QWORD PTR [esi-0x6]
  41ba50:	pop    edx
  41ba51:	pop    ebp
  41ba52:	sti    
  41ba53:	inc    ebx
  41ba54:	sub    DWORD PTR [ecx-0xc],edx
  41ba57:	(bad)  
  41ba59:	lods   al,BYTE PTR ds:[esi]
  41ba5a:	stc    
  41ba5b:	inc    ecx
  41ba5c:	mov    bh,0xd0
  41ba5e:	imul   ecx,DWORD PTR [ebx-0x28],0xffffffa5
  41ba62:	fs pop ebp
  41ba64:	dec    eax
  41ba65:	leave  
  41ba66:	cdq    
  41ba67:	mov    ds:0x802b68b7,eax
  41ba6c:	adc    eax,0x81569b54
  41ba71:	ins    DWORD PTR es:[edi],dx
  41ba72:	sub    al,0x8a
  41ba74:	data16 std 
  41ba76:	fisubr DWORD PTR [edx+0x52]
  41ba79:	jnp    0x41ba79
  41ba7b:	pop    ebp
  41ba7c:	cdq    
  41ba7d:	mov    al,0x6c
  41ba7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba80:	data16 sub al,BYTE PTR [ecx+ecx*1+0x60218cc6]
  41ba88:	inc    ebx
  41ba89:	enter  0x80a,0x5a
  41ba8d:	xchg   ebp,eax
  41ba8e:	jmp    FWORD PTR [edi+0xe1b04d4]
  41ba94:	fild   DWORD PTR [edi+0x62]
  41ba97:	in     eax,0x4b
  41ba99:	scas   al,BYTE PTR es:[edi]
  41ba9a:	mov    bl,0x5
  41ba9c:	inc    eax
  41ba9d:	jmp    0x3fbe:0xe08f53af
  41baa4:	pop    ecx
  41baa5:	xor    DWORD PTR [esi],ebp
  41baa7:	sub    al,0x46
  41baa9:	push   0x5c4ea59c
  41baae:	inc    edx
  41baaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bab0:	inc    esi
  41bab1:	shl    BYTE PTR cs:[edx],0x43
  41bab5:	jp     0x41ba3e
  41bab7:	inc    ebp
  41bab8:	mov    fs,edi
  41baba:	adc    eax,0x8c588eca
  41babf:	int    0x3f
  41bac1:	test   eax,0x8ed8c3b9
  41bac6:	sahf   
  41bac7:	mov    ch,0xcb
  41bac9:	ins    BYTE PTR es:[edi],dx
  41baca:	pushf  
  41bacb:	xchg   ecx,eax
  41bacc:	or     al,BYTE PTR [edi]
  41bace:	fxch   st(1)
  41bad0:	jne    0x41baf2
  41bad2:	push   esp
  41bad3:	and    BYTE PTR [esi],dl
  41bad5:	fsubr  st,st(6)
  41bad7:	xchg   BYTE PTR [ebx+0x6b500442],ch
  41badd:	aaa    
  41bade:	popa   
  41badf:	sbb    edi,DWORD PTR [eax]
  41bae1:	lea    esp,[ebx+0xa652bfc]
  41bae7:	mov    al,0x87
  41bae9:	int3   
  41baea:	lea    eax,[esi]
  41baec:	push   edx
  41baed:	xchg   edi,eax
  41baee:	in     eax,0xb2
  41baf0:	mov    al,0x6f
  41baf2:	push   edx
  41baf3:	add    esi,edi
  41baf5:	push   edx
  41baf6:	stc    
  41baf7:	mov    cl,0xb0
  41baf9:	pusha  
  41bafa:	mov    eax,ds:0x96218400
  41baff:	push   ss
  41bb00:	xchg   edi,eax
  41bb01:	adc    al,0x11
  41bb03:	sub    ch,ch
  41bb05:	and    ebp,DWORD PTR [edi]
  41bb07:	out    0x11,eax
  41bb09:	rcl    DWORD PTR [ebp+0x3e],cl
  41bb0c:	lahf   
  41bb0d:	retf   0x7fa6
  41bb10:	xor    eax,0xc14a7aa2
  41bb15:	jecxz  0x41bb21
  41bb17:	je     0x41baa5
  41bb19:	mov    esi,0xcbca611f
  41bb1e:	cmp    DWORD PTR [ebp-0x6d7f85f5],edx
  41bb24:	xchg   esi,eax
  41bb25:	scas   eax,DWORD PTR es:[edi]
  41bb26:	add    ebx,DWORD PTR [ebx+0x63caca75]
  41bb2c:	pop    ds
  41bb2d:	jae    0x41bb73
  41bb2f:	push   esi
  41bb30:	shl    DWORD PTR [ecx+ecx*2+0x3a0c70a6],cl
  41bb37:	mov    WORD PTR [ecx-0x1e],ss
  41bb3a:	sub    DWORD PTR [edx],edx
  41bb3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb3d:	sar    BYTE PTR [ebp+0x7728a98c],cl
  41bb43:	test   edi,edx
  41bb45:	test   al,0x2c
  41bb47:	shl    BYTE PTR [eax],1
  41bb49:	inc    esp
  41bb4a:	mov    esp,0xc20b9a4f
  41bb4f:	into   
  41bb50:	or     al,0x89
  41bb52:	dec    edx
  41bb53:	es aad 0x2f
  41bb56:	xor    eax,0x9f0d06c
  41bb5b:	xchg   ebp,eax
  41bb5c:	js     0x41bb68
  41bb5e:	push   ss
  41bb5f:	cmp    al,0x3b
  41bb61:	in     eax,0x7
  41bb63:	sbb    bl,BYTE PTR [esi+0x2e]
  41bb66:	push   edi
  41bb67:	lock or dh,BYTE PTR [esi*2+0x824e]
  41bb6f:	add    BYTE PTR [eax],al
  41bb71:	add    dh,ah
  41bb73:	inc    eax
  41bb74:	sbb    eax,0xee5dbf15
  41bb79:	repz adc eax,0x51442583
  41bb7f:	xlat   BYTE PTR ds:[ebx]
  41bb80:	sbb    BYTE PTR [edi+0x75],bh
  41bb83:	aaa    
  41bb84:	add    DWORD PTR [eax],eax
  41bb86:	repz add al,0x0
  41bb89:	add    BYTE PTR [ecx],bh
  41bb8b:	out    0xe8,al
  41bb8d:	jb     0x41bbfa
  41bb8f:	adc    BYTE PTR [ebp+0x2750b626],bh
  41bb95:	xchg   esi,ecx
  41bb97:	push   esi
  41bb98:	mov    esi,0xc02e2de4
  41bb9d:	xchg   esi,eax
  41bb9e:	xchg   esp,eax
  41bb9f:	dec    ecx
  41bba0:	aaa    
  41bba1:	xor    DWORD PTR [edx],esp
  41bba3:	mov    edi,DWORD PTR [ebx-0x4c55d91c]
  41bba9:	pop    ebx
  41bbaa:	add    BYTE PTR [ecx+0x27],bl
  41bbad:	xchg   ebp,eax
  41bbae:	xchg   edi,eax
  41bbaf:	fwait
  41bbb0:	dec    ecx
  41bbb1:	add    BYTE PTR [ebx-0x202c1b90],ah
  41bbb7:	jmp    0x154a:0x3e4cc2c6
  41bbbe:	std    
  41bbbf:	push   ebx
  41bbc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbc2:	ins    BYTE PTR es:[edi],dx
  41bbc3:	fidivr DWORD PTR [edx+0x4d7c500f]
  41bbc9:	frstor [eax-0x38]
  41bbcc:	(bad)  
  41bbcd:	and    BYTE PTR [esi-0x1f9b0ca7],dh
  41bbd3:	xor    eax,0x1504072b
  41bbd8:	mov    es:0x6bf5f09d,eax
  41bbde:	jmp    0x41bbdf
  41bbe0:	(bad)  
  41bbe2:	cs mov al,0xf7
  41bbe5:	jecxz  0x41bba0
  41bbe7:	add    DWORD PTR [ebp+0x4743d3b5],edi
  41bbed:	addr16 fs into 
  41bbf0:	inc    esp
  41bbf1:	lods   al,BYTE PTR ds:[esi]
  41bbf2:	jb     0x41bbac
  41bbf4:	pop    ebx
  41bbf5:	cmp    bh,BYTE PTR [ebx]
  41bbf7:	add    ah,BYTE PTR [edi+0x7d84a1f7]
  41bbfd:	(bad)  
  41bbfe:	idiv   DWORD PTR [ebx+eax*4-0x19]
  41bc02:	pop    ds
  41bc03:	pop    edi
  41bc04:	push   esp
  41bc05:	aam    0xf7
  41bc07:	jmp    0x98e5:0x75883481
  41bc0e:	push   ebx
  41bc0f:	mov    esi,0x9d2cc8fe
  41bc14:	mov    ecx,0xdf66729c
  41bc19:	jge    0x41bc18
  41bc1b:	mov    BYTE PTR [edi-0x687d7a35],bl
  41bc21:	cs pop eax
  41bc23:	stos   BYTE PTR es:[edi],al
  41bc24:	test   eax,0x9fe63031
  41bc29:	sar    DWORD PTR [esi-0x61],1
  41bc2c:	xor    eax,DWORD PTR [eax]
  41bc2e:	lahf   
  41bc2f:	out    dx,eax
  41bc30:	sub    dh,BYTE PTR [ebp-0x7b5caf59]
  41bc36:	leave  
  41bc37:	loopne 0x41bc2c
  41bc39:	cmp    DWORD PTR [esi],esp
  41bc3b:	xor    al,0x70
  41bc3d:	mov    bl,0x18
  41bc3f:	ret    0xe5c8
  41bc42:	xlat   BYTE PTR ds:[ebx]
  41bc43:	add    BYTE PTR ds:0x5de3aed9,0x2f
  41bc4a:	cmp    DWORD PTR [ebx],ebp
  41bc4c:	add    BYTE PTR [esi-0x23],bh
  41bc4f:	jb     0x41bbdd
  41bc51:	and    eax,0x9f08b0b5
  41bc56:	dec    ecx
  41bc57:	scas   eax,DWORD PTR es:[edi]
  41bc58:	inc    ebx
  41bc59:	adc    bl,BYTE PTR [ebx-0x184e3bec]
  41bc5f:	fwait
  41bc60:	sub    eax,0x6918a669
  41bc65:	cdq    
  41bc66:	and    eax,0xe8c53dd3
  41bc6b:	dec    ebx
  41bc6c:	test   ebp,ebp
  41bc6e:	(bad)  
  41bc6f:	nop    esp
  41bc72:	mov    esp,0x17bf7041
  41bc77:	sar    DWORD PTR [esi+0x5d],cl
  41bc7a:	je     0x41bcb8
  41bc7c:	(bad)  
  41bc7d:	retf   
  41bc7e:	sbb    DWORD PTR [esi+0x6f],0xfffffff1
  41bc82:	fs jmp 0x6912e308
  41bc88:	pushfw 
  41bc8a:	pop    ds
  41bc8b:	shl    BYTE PTR ds:0xfd510fa0,cl
  41bc91:	mov    ebp,?
  41bc93:	push   esi
  41bc94:	xor    eax,0x6bbf63db
  41bc99:	pushf  
  41bc9a:	pop    ecx
  41bc9b:	sub    BYTE PTR [ebx+edx*2-0x7e91b0eb],cl
  41bca2:	lock shl DWORD PTR [ebx],1
  41bca5:	jle    0x41bc83
  41bca7:	fyl2x  
  41bca9:	mov    ch,0x3c
  41bcab:	adc    bl,BYTE PTR [edx+0x6f549754]
  41bcb1:	cwde   
  41bcb2:	icebp  
  41bcb3:	out    0xed,al
  41bcb5:	mov    bh,0x65
  41bcb7:	rcl    DWORD PTR [esi+eiz*2-0x1d],cl
  41bcbb:	dec    DWORD PTR [ebp-0x5ab49803]
  41bcc1:	pop    ds
  41bcc2:	push   es
  41bcc3:	pop    edx
  41bcc4:	jecxz  0x41bc78
  41bcc6:	shr    BYTE PTR [ebp-0x2008e072],cl
  41bccc:	clc    
  41bccd:	mov    es,WORD PTR [eax]
  41bccf:	std    
  41bcd0:	loopne 0x41bcdd
  41bcd2:	in     al,0xd5
  41bcd4:	stc    
  41bcd5:	sahf   
  41bcd6:	jg     0x41bd31
  41bcd8:	fimul  WORD PTR [edi-0x14]
  41bcdb:	xchg   ebp,eax
  41bcdc:	out    0x34,al
  41bcde:	leave  
  41bcdf:	daa    
  41bce0:	lea    esi,[eax+0x13]
  41bce3:	pop    edi
  41bce4:	fist   DWORD PTR [ebx+eax*4+0x689a502d]
  41bceb:	xchg   ecx,eax
  41bcec:	(bad)  
  41bced:	mov    dl,0x50
  41bcef:	out    dx,eax
  41bcf0:	push   ecx
  41bcf1:	jmp    edi
  41bcf3:	pop    ss
  41bcf4:	pushf  
  41bcf5:	pushf  
  41bcf6:	adc    eax,0x55f20970
  41bcfb:	pop    eax
  41bcfc:	jge    0x41bcef
  41bcfe:	and    eax,DWORD PTR [edx]
  41bd00:	dec    edx
  41bd01:	pop    ss
  41bd02:	aas    
  41bd03:	js     0x41bd79
  41bd05:	inc    esi
  41bd06:	sbb    ebp,DWORD PTR [edi]
  41bd08:	aas    
  41bd09:	dec    ebp
  41bd0a:	call   0x3016:0x280bd7b1
  41bd11:	outs   dx,DWORD PTR ds:[esi]
  41bd12:	push   ebx
  41bd13:	cmp    ebp,DWORD PTR [ebx+0x63105b7]
  41bd19:	or     ebx,ecx
  41bd1b:	fsub   QWORD PTR [esi+0x2ceb41ae]
  41bd21:	xchg   esp,eax
  41bd22:	jle    0x41bd7e
  41bd24:	iret   
  41bd25:	mov    al,ds:0x230133ad
  41bd2a:	xor    esp,ebp
  41bd2c:	sti    
  41bd2d:	adc    eax,0x90ca7e5e
  41bd32:	pop    eax
  41bd33:	jmp    0x41bd40
  41bd35:	test   DWORD PTR [esi-0x44],ecx
  41bd38:	sbb    DWORD PTR [ebp-0x2a9c996c],ecx
  41bd3e:	mov    eax,ds:0xbec3159e
  41bd43:	int    0xd3
  41bd45:	sahf   
  41bd46:	xor    eax,0xdaa5016f
  41bd4b:	push   ecx
  41bd4c:	clc    
  41bd4d:	repnz imul esp,DWORD PTR [ecx],0xf1d84a4a
  41bd54:	add    ecx,0xb
  41bd57:	pop    edi
  41bd58:	fst    st(6)
  41bd5a:	popf   
  41bd5b:	or     al,0x38
  41bd5d:	cmp    eax,edi
  41bd5f:	pop    ds
  41bd60:	adc    cl,BYTE PTR [eax-0x25]
  41bd63:	in     al,dx
  41bd64:	adc    edi,DWORD PTR [ecx+0x40]
  41bd67:	dec    ebx
  41bd68:	in     al,dx
  41bd69:	and    al,0x68
  41bd6b:	mov    edx,eax
  41bd6d:	dec    ebp
  41bd6e:	jp     0x41bd35
  41bd70:	and    edx,DWORD PTR [edx+0x34fab693]
  41bd76:	out    dx,eax
  41bd77:	daa    
  41bd78:	and    ch,BYTE PTR [ebx-0x490bfade]
  41bd7e:	inc    edx
  41bd7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd80:	jnp    0x41bdb7
  41bd82:	sub    al,0xee
  41bd84:	fimul  DWORD PTR [ecx-0x62]
  41bd87:	mov    ebp,0x7d90e9ec
  41bd8c:	outs   dx,DWORD PTR ds:[esi]
  41bd8d:	hlt    
  41bd8e:	and    edx,DWORD PTR [ecx]
  41bd90:	in     eax,0xbc
  41bd92:	imul   DWORD PTR [edi+0x8]
  41bd95:	xor    eax,0xad3aa68f
  41bd9a:	das    
  41bd9b:	mov    edx,0xb79206e5
  41bda0:	retf   0x4920
  41bda3:	mov    ds:0x6e756cf4,al
  41bda8:	pop    eax
  41bda9:	mov    ch,0x34
  41bdab:	stc    
  41bdac:	cld    
  41bdad:	arpl   WORD PTR [edx+0x2019c597],ax
  41bdb3:	gs dec eax
  41bdb5:	mov    ch,0x7b
  41bdb7:	sub    eax,0x58ca6397
  41bdbc:	pop    ebx
  41bdbd:	arpl   WORD PTR [ecx],di
  41bdbf:	outs   dx,DWORD PTR ds:[esi]
  41bdc0:	popa   
  41bdc1:	adc    al,0xeb
  41bdc3:	mov    ah,0xad
  41bdc5:	cli    
  41bdc6:	shl    BYTE PTR [ebx+edx*4-0x13],1
  41bdca:	inc    edi
  41bdcb:	lock mov cl,0xa6
  41bdce:	ficomp DWORD PTR [esi+0x17f01883]
  41bdd4:	das    
  41bdd5:	fdivrp st(6),st
  41bdd7:	(bad)  
  41bdd8:	lods   al,BYTE PTR ds:[esi]
  41bdd9:	cwde   
  41bdda:	adc    ch,BYTE PTR [ebx-0x11]
  41bddd:	jae    0x41bd97
  41bddf:	or     BYTE PTR [esi-0x13acb34f],ah
  41bde5:	add    eax,0x3e7941d3
  41bdea:	leave  
  41bdeb:	ret    
  41bdec:	mov    ch,0xa9
  41bdee:	jg     0x41be51
  41bdf0:	pop    eax
  41bdf1:	scas   al,BYTE PTR es:[edi]
  41bdf2:	sub    BYTE PTR [edx+0x5d1776db],al
  41bdf8:	adc    BYTE PTR [ebx+0x11],al
  41bdfb:	dec    edi
  41bdfc:	mov    ds:0x28580bd8,eax
  41be01:	pop    es
  41be02:	imul   eax,DWORD PTR [eax-0x3c630164],0x3c7ffaa3
  41be0c:	sbb    al,bl
  41be0e:	sub    eax,DWORD PTR [edi+0x28]
  41be11:	int3   
  41be12:	arpl   WORD PTR [eax+0x49],cx
  41be15:	inc    esp
  41be16:	inc    ebp
  41be17:	add    ebp,edx
  41be19:	arpl   WORD PTR [ebp-0x765dc6ff],dx
  41be1f:	in     eax,dx
  41be20:	pop    ebp
  41be21:	and    al,0x56
  41be23:	sti    
  41be24:	mov    BYTE PTR [eax-0x21c5c1b3],al
  41be2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be2b:	(bad)  
  41be2c:	aam    0xbd
  41be2e:	cli    
  41be2f:	ins    DWORD PTR es:[edi],dx
  41be30:	sbb    dh,BYTE PTR [esi-0x1e209ffe]
  41be36:	test   ch,bl
  41be38:	mov    es,WORD PTR [eax-0x4fb26b24]
  41be3e:	sbb    al,BYTE PTR [edx]
  41be40:	jb     0x41be1a
  41be42:	pop    ds
  41be43:	inc    ecx
  41be44:	jge    0x41be72
  41be46:	and    ah,cl
  41be48:	cmp    BYTE PTR [edx-0x2a],ah
  41be4b:	mov    eax,0x89b1b258
  41be50:	sbb    al,0x56
  41be52:	lds    ecx,FWORD PTR [eax+0x6d]
  41be55:	shr    edi,cl
  41be57:	jge    0x41be3e
  41be59:	test   DWORD PTR [edx+0x3],0xf9f041d6
  41be60:	mov    al,ds:0x9ba7637d
  41be65:	es jne 0x41bece
  41be68:	clc    
  41be69:	ds push 0xffffffc8
  41be6c:	out    0xb,eax
  41be6e:	mov    ch,BYTE PTR [ebx]
  41be70:	retf   0xc08b
  41be73:	and    ecx,edi
  41be75:	les    ecx,FWORD PTR [edx-0x2af74bcb]
  41be7b:	pop    ss
  41be7c:	push   es
  41be7d:	push   esi
  41be7e:	cdq    
  41be7f:	call   0xad2dbac1
  41be84:	mov    bh,0x72
  41be86:	inc    edi
  41be87:	mov    ch,0x88
  41be89:	mov    WORD PTR [edi+0x25c5b3b5],cs
  41be8f:	ja     0x41be54
  41be91:	arpl   WORD PTR [edx+0x6],di
  41be94:	or     ecx,ecx
  41be96:	dec    ecx
  41be97:	iret   
  41be98:	fdiv   st,st(0)
  41be9a:	cwde   
  41be9b:	sbb    bl,ah
  41be9d:	jbe    0x41bef0
  41be9f:	div    BYTE PTR ds:0x6e43e571
  41bea5:	adc    ch,bl
  41bea7:	repz cmp DWORD PTR [edx],ecx
  41beaa:	(bad)  
  41beab:	xor    eax,0x63f544fb
  41beb0:	jmp    0xe180:0xe739f07d
  41beb7:	push   edi
  41beb8:	jo     0x41bf2e
  41beba:	test   BYTE PTR [esi],bh
  41bebc:	ret    
  41bebd:	aam    0xe5
  41bebf:	arpl   WORD PTR [esi],di
  41bec1:	fidivr WORD PTR [eax+0x27f72c1]
  41bec7:	and    al,0x78
  41bec9:	sbb    eax,0x47d2d0e1
  41bece:	xchg   edi,eax
  41becf:	jno    0x41bf37
  41bed1:	cld    
  41bed2:	sub    eax,0xd36ff32d
  41bed7:	icebp  
  41bed8:	int    0xc1
  41beda:	and    al,BYTE PTR [ebx+0x26188def]
  41bee0:	cmp    eax,0x884df2a5
  41bee5:	and    ch,cl
  41bee7:	ret    
  41bee8:	sub    eax,0xb5c1e40d
  41beed:	cmp    BYTE PTR [ecx-0x18],dh
  41bef0:	cmp    al,0x13
  41bef2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bef3:	jno    0x41beee
  41bef5:	sahf   
  41bef6:	add    esi,ebx
  41bef8:	mov    eax,0xf9a88dfc
  41befd:	jg     0x41befc
  41beff:	dec    edi
  41bf00:	fiadd  WORD PTR [edx-0x63]
  41bf03:	lods   eax,DWORD PTR ds:[esi]
  41bf04:	iret   
  41bf05:	push   0xffffffca
  41bf07:	call   0xdece:0x6a59654b
  41bf0e:	cdq    
  41bf0f:	xlat   BYTE PTR ds:[ebx]
  41bf10:	ret    0xa84e
  41bf13:	repz enter 0x84f7,0xa5
  41bf18:	sub    edi,edx
  41bf1a:	sub    DWORD PTR [esi+0x2],ecx
  41bf1d:	pop    edi
  41bf1e:	mov    esi,cs
  41bf20:	push   ebp
  41bf21:	mov    ebx,0xef5e407e
  41bf26:	repz mov edi,0xabc9cd92
  41bf2c:	(bad)  
  41bf2d:	pop    edx
  41bf2e:	leave  
  41bf2f:	xchg   edx,eax
  41bf30:	adc    BYTE PTR [ebp-0x1a],ch
  41bf33:	pop    ecx
  41bf34:	(bad)
  41bf38:	sbb    DWORD PTR [eax],0xffffff8c
  41bf3b:	sub    eax,0xad53e2d5
  41bf40:	xchg   esp,eax
  41bf41:	push   cs
  41bf42:	adc    eax,0x2e92790b
  41bf47:	pop    esp
  41bf48:	pop    ebp
  41bf49:	mov    cl,cl
  41bf4b:	and    BYTE PTR [esi-0x1783358c],dl
  41bf51:	into   
  41bf52:	dec    edi
  41bf53:	sub    dh,cl
  41bf55:	mov    ds:0x952da234,al
  41bf5a:	clc    
  41bf5b:	lods   eax,DWORD PTR ds:[esi]
  41bf5c:	add    DWORD PTR [eax-0x784fcde5],esp
  41bf62:	push   ebx
  41bf63:	fdiv   QWORD PTR [ebp-0x7c]
  41bf66:	fimul  WORD PTR [ecx+0x6f]
  41bf69:	push   ebp
  41bf6a:	adc    esi,eax
  41bf6c:	outs   dx,DWORD PTR ds:[esi]
  41bf6d:	mov    ecx,edx
  41bf6f:	inc    edx
  41bf70:	lods   al,BYTE PTR ds:[esi]
  41bf71:	ins    DWORD PTR es:[edi],dx
  41bf72:	scas   al,BYTE PTR es:[edi]
  41bf73:	fldcw  WORD PTR [esi+0x4d]
  41bf76:	cwde   
  41bf77:	sub    eax,0x2ce46378
  41bf7c:	gs xchg esi,eax
  41bf7e:	push   0xffffffde
  41bf80:	and    DWORD PTR [edi+ebp*8-0x70],esp
  41bf84:	scas   al,BYTE PTR es:[edi]
  41bf85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf86:	jns    0x41bf24
  41bf88:	fisubr WORD PTR ds:[ebp-0x6b]
  41bf8c:	add    BYTE PTR [ebx+0x3e31ee56],cl
  41bf92:	stos   BYTE PTR es:[edi],al
  41bf93:	and    esi,0x62
  41bf96:	adc    eax,0x8b91f6a8
  41bf9b:	sub    BYTE PTR [edi+ebp*8-0x57],0xed
  41bfa0:	fsub   QWORD PTR [ebp-0x617a7cdd]
  41bfa6:	das    
  41bfa7:	and    bl,BYTE PTR [edi+0x57dac88e]
  41bfad:	mov    al,ds:0x8dbea6a
  41bfb2:	mov    al,ds:0x4b51e98b
  41bfb7:	outs   dx,BYTE PTR ds:[esi]
  41bfb8:	mov    ds:0xcfcdc289,al
  41bfbd:	sbb    ch,cl
  41bfbf:	push   cs
  41bfc0:	neg    BYTE PTR [ebx+ebx*4]
  41bfc3:	jp     0x41bffa
  41bfc5:	pop    es
  41bfc6:	adc    ebp,DWORD PTR [ebp+ebx*4+0x13]
  41bfca:	(bad)  
  41bfcb:	mov    WORD PTR [edx-0x1d],fs
  41bfce:	jmp    0x8b16:0xe385ea1b
  41bfd5:	adc    bl,ah
  41bfd7:	pop    es
  41bfd8:	popa   
  41bfd9:	and    DWORD PTR [ebx-0x62],esi
  41bfdc:	inc    esp
  41bfdd:	sub    ah,dl
  41bfdf:	sub    BYTE PTR [edx],0x6d
  41bfe2:	dec    edx
  41bfe3:	ss pop esp
  41bfe5:	push   0x37
  41bfe7:	mov    cl,0x2c
  41bfe9:	jp     0x41c05c
  41bfeb:	test   esp,edi
  41bfed:	aaa    
  41bfee:	sub    bl,ch
  41bff0:	aam    0x69
  41bff2:	mov    ds:0xb06e3143,al
  41bff7:	lods   eax,DWORD PTR ds:[esi]
  41bff8:	xor    DWORD PTR es:[ebp-0x59cd0ae0],edi
  41bfff:	int    0x32
  41c001:	sbb    edx,esi
  41c003:	not    DWORD PTR [ecx-0x5a]
  41c006:	out    dx,eax
  41c007:	xor    DWORD PTR [edi],eax
  41c009:	mov    bh,0xda
  41c00b:	ss sahf 
  41c00d:	lods   eax,DWORD PTR ds:[esi]
  41c00e:	mov    bh,0x86
  41c010:	sub    DWORD PTR [ebx-0x570173f8],edx
  41c016:	rcl    BYTE PTR [edx+0x7bd1c825],0x30
  41c01d:	jns    0x41bff2
  41c01f:	mov    edx,0x5488349b
  41c024:	push   cs
  41c025:	inc    esp
  41c026:	pop    edx
  41c027:	mov    eax,0xc2da1e5b
  41c02c:	mov    dl,0x22
  41c02e:	(bad)  [ebp+0x210e6a5c]
  41c034:	sbb    dl,BYTE PTR [ebx+0x56875df3]
  41c03a:	into   
  41c03b:	mov    edx,0x16e7e015
  41c040:	cmp    DWORD PTR [edi+0x495d1239],0x11
  41c047:	add    al,0xaa
  41c049:	add    eax,0x574081ce
  41c04e:	sub    al,0xf
  41c050:	cmc    
  41c051:	scas   al,BYTE PTR es:[edi]
  41c052:	pop    ds
  41c053:	or     ebp,DWORD PTR [edx]
  41c055:	mov    DWORD PTR [esi+ecx*2],ecx
  41c058:	mov    ch,0x72
  41c05a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c05b:	sub    al,0xfe
  41c05d:	jl     0x41c099
  41c05f:	iret   
  41c060:	loope  0x41c00a
  41c062:	fdivp  st(0),st
  41c064:	loopne 0x41c0b2
  41c066:	mov    bl,0x65
  41c068:	dec    ebp
  41c069:	dec    ebp
  41c06a:	int    0xef
  41c06c:	xor    BYTE PTR [esi],dh
  41c06e:	jbe    0x41c09e
  41c070:	in     al,dx
  41c071:	sub    edx,eax
  41c073:	je     0x41c070
  41c075:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c076:	cmp    al,0x5e
  41c078:	js     0x41c0b4
  41c07a:	sbb    ebp,DWORD PTR [eax]
  41c07c:	add    BYTE PTR [eax],0x0
  41c07f:	add    BYTE PTR [eax],al
  41c081:	add    BYTE PTR [esi-0x10fe18c6],dh
  41c087:	(bad)  
  41c089:	mov    edi,0xdf2dff43
  41c08e:	sbb    bh,BYTE PTR [eax+edi*1-0x3f]
  41c092:	push   0xf300013c
  41c097:	add    al,0x0
  41c099:	add    dh,ah
  41c09b:	mov    ah,0x53
  41c09d:	test   dh,dh
  41c09f:	fistp  QWORD PTR [esi+0x2b25f84e]
  41c0a5:	lea    ebx,[ecx+0x3558523b]
  41c0ab:	repz and edi,DWORD PTR [ebx+0x7f]
  41c0af:	xchg   esi,eax
  41c0b0:	cdq    
  41c0b1:	push   edx
  41c0b2:	repnz pop ds
  41c0b4:	dec    ebp
  41c0b5:	pop    esp
  41c0b6:	dec    edi
  41c0b7:	aad    0xcb
  41c0b9:	icebp  
  41c0ba:	mov    eax,0xe027994b
  41c0bf:	fucom  st(6)
  41c0c1:	push   esp
  41c0c2:	xor    edx,esi
  41c0c4:	iret   
  41c0c5:	and    DWORD PTR [edi],ebx
  41c0c7:	pusha  
  41c0c8:	mov    al,0xa9
  41c0ca:	fmul   QWORD PTR [eax]
  41c0cc:	cmp    al,0x1
  41c0ce:	cmp    ah,BYTE PTR [ebx-0x75]
  41c0d1:	mov    esp,0x88f38fad
  41c0d6:	mov    ebp,0x32230926
  41c0db:	push   0x9474ea7a
  41c0e0:	dec    edi
  41c0e1:	mov    ebx,0xbd67c48b
  41c0e6:	push   0xb
  41c0e8:	js     0x41c11d
  41c0ea:	xor    al,0xe
  41c0ec:	xor    eax,DWORD PTR [ecx+0x63a28082]
  41c0f2:	not    DWORD PTR [ecx-0x39]
  41c0f5:	cmp    DWORD PTR [ebx-0x6c],esi
  41c0f8:	in     al,dx
  41c0f9:	inc    BYTE PTR [edx]
  41c0fb:	mov    WORD PTR [edi+0x4b],ss
  41c0fe:	iret   
  41c0ff:	inc    esi
  41c100:	aaa    
  41c101:	add    eax,0xc825c3ad
  41c106:	mov    ebp,0x6a6e442b
  41c10b:	fidivr WORD PTR [eax+0x5ea19222]
  41c111:	stos   DWORD PTR es:[edi],eax
  41c112:	and    edi,DWORD PTR [esi+0x2b8cb27e]
  41c118:	and    DWORD PTR [ebp+0x7e],0x71
  41c11c:	psubsw mm3,QWORD PTR [edi]
  41c11f:	popa   
  41c120:	leave  
  41c121:	xchg   edi,eax
  41c122:	into   
  41c123:	pop    eax
  41c124:	pop    ebx
  41c125:	sar    BYTE PTR [ebp-0x67],0xc1
  41c129:	cmp    eax,0x2f59e26c
  41c12e:	and    ecx,DWORD PTR [eax-0x13be7561]
  41c134:	jl     0x41c19a
  41c136:	add    DWORD PTR [edx+0x71],0xf9e14ab8
  41c13d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c13e:	mov    esi,0xc2cdc5c
  41c143:	arpl   WORD PTR [eax+ebx*2-0x32fb727c],di
  41c14a:	cmp    eax,0xc1d7550f
  41c14f:	inc    ebx
  41c150:	mov    WORD PTR [eax-0x4c],?
  41c153:	mov    al,ds:0x4bf232d8
  41c158:	push   esi
  41c159:	call   0x939d650e
  41c15e:	cmp    dl,BYTE PTR [esi-0x57abce0f]
  41c164:	mov    eax,ds:0x5f861c2c
  41c169:	retf   0x7e61
  41c16c:	cmp    bh,ch
  41c16e:	outs   dx,DWORD PTR ds:[esi]
  41c16f:	and    ah,bh
  41c171:	and    cl,BYTE PTR [edx]
  41c173:	push   0x3e
  41c175:	add    bh,BYTE PTR [eax+0xc1b7bf5]
  41c17b:	mov    ecx,0x985bc955
  41c180:	mov    eax,ds:0xa76a512a
  41c185:	sbb    ah,BYTE PTR [edx]
  41c187:	fild   WORD PTR [ebx-0x3d]
  41c18a:	(bad)  
  41c18b:	fs mov bl,0xff
  41c18e:	and    eax,0xc72ced44
  41c193:	push   ecx
  41c194:	outs   dx,BYTE PTR ds:[esi]
  41c195:	aam    0x90
  41c197:	and    edi,DWORD PTR [edi+0x1b2fd313]
  41c19d:	mov    edi,0xbbca2f95
  41c1a2:	outs   dx,BYTE PTR ds:[esi]
  41c1a3:	push   es
  41c1a4:	mov    ds:0xc22877a7,eax
  41c1a9:	jnp    0x41c19f
  41c1ab:	popf   
  41c1ac:	cdq    
  41c1ad:	(bad)  
  41c1ae:	mov    esi,esp
  41c1b0:	je     0x41c1f2
  41c1b2:	sub    BYTE PTR [esi],0xff
  41c1b5:	sub    eax,0xeab5ab0c
  41c1ba:	test   DWORD PTR [ecx],edx
  41c1bc:	mov    ch,0xb3
  41c1be:	sbb    eax,0xc67738b4
  41c1c3:	jecxz  0x41c20f
  41c1c5:	mov    cl,0x18
  41c1c7:	adc    BYTE PTR [esi+eax*2-0x32],0x1d
  41c1cc:	cmp    esi,DWORD PTR [ecx-0x272be75d]
  41c1d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1d3:	loopne 0x41c1aa
  41c1d5:	lds    ebp,FWORD PTR [edi+0x61]
  41c1d8:	lock rcl BYTE PTR [ebp+0x19807ff7],0x86
  41c1e0:	push   edi
  41c1e1:	mov    ecx,0x7250a9b9
  41c1e6:	and    eax,0xb054ed3e
  41c1eb:	sbb    al,0x7a
  41c1ed:	xor    BYTE PTR [ebp+0x51],ch
  41c1f0:	mov    bh,0xdd
  41c1f2:	les    ebp,FWORD PTR [ebx]
  41c1f4:	cmp    BYTE PTR [ebx-0x269ebb00],0x10
  41c1fb:	out    dx,eax
  41c1fc:	fsub   QWORD PTR ds:0x2d9fa52
  41c202:	mov    bl,0x2b
  41c204:	je     0x41c212
  41c206:	(bad)  
  41c207:	test   eax,0xc5393775
  41c20c:	loope  0x41c253
  41c20e:	cdq    
  41c20f:	pop    eax
  41c210:	dec    edx
  41c211:	pop    ebp
  41c212:	push   esi
  41c213:	ss call 0xa769:0x185b9979
  41c21b:	push   ss
  41c21c:	gs dec esp
  41c21e:	sar    BYTE PTR [ecx-0x4d369f6c],cl
  41c224:	push   esp
  41c225:	(bad)  
  41c227:	dec    edi
  41c228:	mov    ah,0x7a
  41c22a:	xchg   edx,eax
  41c22b:	xchg   esi,eax
  41c22c:	and    eax,0x2891d09e
  41c231:	pushf  
  41c232:	fdivr  QWORD PTR [ebx+0x40]
  41c235:	inc    ebp
  41c236:	push   0x68
  41c238:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c239:	adc    ebx,DWORD PTR [edx+0x3b]
  41c23c:	jb     0x41c1f8
  41c23e:	stos   DWORD PTR es:[edi],eax
  41c23f:	sbb    al,0x6a
  41c241:	imul   esi,edi,0x5e362240
  41c247:	imul   esi,edi,0xa
  41c24a:	pop    ecx
  41c24b:	cdq    
  41c24c:	call   0xa8f4f3de
  41c251:	fwait
  41c252:	outs   dx,DWORD PTR ds:[esi]
  41c253:	fistp  DWORD PTR [eax]
  41c255:	lods   eax,DWORD PTR ds:[esi]
  41c256:	(bad)  
  41c257:	mov    bh,0x3a
  41c259:	push   edx
  41c25a:	popa   
  41c25b:	sar    DWORD PTR [eax],0x68
  41c25e:	aaa    
  41c25f:	cdq    
  41c260:	jge    0x41c255
  41c262:	jg     0x41c229
  41c264:	fld    DWORD PTR [edi-0x6857d147]
  41c26a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c26b:	rcl    al,cl
  41c26d:	out    dx,al
  41c26e:	out    0x10,eax
  41c270:	jae    0x41c260
  41c272:	int3   
  41c273:	scas   al,BYTE PTR es:[edi]
  41c274:	loopne 0x41c2b0
  41c276:	push   edi
  41c277:	xor    DWORD PTR [edx+0x5d],eax
  41c27a:	rol    BYTE PTR [esi+0x47],1
  41c27d:	loope  0x41c271
  41c27f:	(bad)  
  41c280:	aas    
  41c281:	fs in  eax,0x64
  41c284:	enter  0x7c8e,0xc4
  41c288:	ins    DWORD PTR es:[edi],dx
  41c289:	cld    
  41c28a:	cmp    BYTE PTR [ebp+0x7d5fe885],al
  41c290:	push   0x27
  41c292:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c293:	pop    ss
  41c294:	mov    eax,ds:0x5ee609b6
  41c299:	and    DWORD PTR [ecx-0x6f],esp
  41c29c:	or     DWORD PTR [edx+0x1d9cd15e],eax
  41c2a2:	mov    edi,0x72afafde
  41c2a7:	sahf   
  41c2a8:	adc    al,0x1c
  41c2aa:	shr    DWORD PTR [esi-0x6e],0xaa
  41c2ae:	mov    ebx,0xc2fc036f
  41c2b3:	dec    ebp
  41c2b4:	fstp   DWORD PTR [ecx+0x19605b31]
  41c2ba:	jge    0x41c2a0
  41c2bc:	int3   
  41c2bd:	fild   DWORD PTR gs:[edi-0x36]
  41c2c1:	sbb    ch,al
  41c2c3:	xor    dh,bh
  41c2c5:	fcmovbe st,st(3)
  41c2c7:	int3   
  41c2c8:	fsub   QWORD PTR [edi+0x2fa3b642]
  41c2ce:	ins    BYTE PTR es:[edi],dx
  41c2cf:	(bad)  
  41c2d0:	scas   al,BYTE PTR es:[edi]
  41c2d1:	gs lahf 
  41c2d3:	adc    ecx,esi
  41c2d5:	ss mov ch,0x8d
  41c2d8:	push   ds
  41c2d9:	add    eax,0x8eae7f7c
  41c2de:	scas   al,BYTE PTR es:[edi]
  41c2df:	je     0x41c35e
  41c2e1:	jg     0x41c2d0
  41c2e3:	push   0xa50e4c82
  41c2e8:	add    dh,BYTE PTR [ebx]
  41c2ea:	and    al,0xf4
  41c2ec:	mov    bl,0x2d
  41c2ee:	daa    
  41c2ef:	jae    0x41c347
  41c2f1:	mov    WORD PTR [eax-0x58],ss
  41c2f4:	inc    edi
  41c2f5:	add    eax,eax
  41c2f7:	or     DWORD PTR [esp+ecx*8],eax
  41c2fa:	sar    bl,1
  41c2fc:	lock mov esi,0x80b98bf0
  41c302:	icebp  
  41c303:	(bad)  
  41c304:	jle    0x41c356
  41c306:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c307:	push   0x6e
  41c309:	stos   DWORD PTR es:[edi],eax
  41c30a:	loop   0x41c304
  41c30c:	imul   ebx,DWORD PTR [edx-0x1f811c3c],0x753ef341
  41c316:	rcl    BYTE PTR [edx-0x6e3a7462],cl
  41c31c:	cli    
  41c31d:	mov    cl,0xb0
  41c31f:	repnz inc ecx
  41c321:	or     al,0xc3
  41c323:	dec    eax
  41c324:	int    0xc8
  41c326:	(bad)  
  41c327:	bound  ebx,QWORD PTR [edi]
  41c329:	jne    0x41c2e7
  41c32b:	and    BYTE PTR [edi-0x6eaf9261],0x18
  41c332:	shl    cl,0xcf
  41c335:	and    ebp,DWORD PTR [ecx+0x1bb6b46e]
  41c33b:	popf   
  41c33c:	inc    ecx
  41c33d:	test   al,0x42
  41c33f:	ds xchg edi,eax
  41c341:	clc    
  41c342:	push   cs
  41c343:	pop    ecx
  41c344:	mov    edi,0xce2c7c0b
  41c349:	lock lods eax,DWORD PTR ds:[esi]
  41c34b:	test   edi,0x9a0d67cd
  41c351:	dec    ecx
  41c352:	sub    al,dh
  41c354:	sbb    DWORD PTR [eax],eax
  41c356:	and    bl,BYTE PTR [edi+ebp*4-0x5cb79795]
  41c35d:	cmp    eax,0x253a2397
  41c362:	mov    ds:0x720f6f91,eax
  41c367:	jae    0x41c363
  41c369:	sbb    ch,BYTE PTR [eax]
  41c36b:	fisttp WORD PTR [ebx+0x60cc0d17]
  41c371:	lods   eax,DWORD PTR ds:[esi]
  41c372:	xor    al,BYTE PTR [edx]
  41c374:	and    dl,BYTE PTR [edx-0x49cb85f5]
  41c37a:	stos   BYTE PTR es:[edi],al
  41c37b:	adc    eax,0x54696139
  41c380:	and    DWORD PTR [esi],0x9f08a112
  41c386:	sbb    DWORD PTR [ebx],esi
  41c388:	mov    edx,0xd69e4e3b
  41c38d:	jae    0x41c361
  41c38f:	or     eax,DWORD PTR [eax-0x8778ba3]
  41c395:	sub    dl,BYTE PTR [ecx+0x39]
  41c398:	js     0x41c411
  41c39a:	and    ebx,DWORD PTR [ebx-0x6541f2ee]
  41c3a0:	sbb    DWORD PTR [eax],ebp
  41c3a2:	ds inc ebp
  41c3a4:	pop    ecx
  41c3a5:	push   ecx
  41c3a6:	sub    ecx,DWORD PTR [esp+ebx*8]
  41c3a9:	jle    0x41c369
  41c3ab:	inc    ebp
  41c3ac:	and    BYTE PTR [ebp+0x7c],0x63
  41c3b0:	jmp    0x41c371
  41c3b2:	into   
  41c3b3:	xchg   edi,eax
  41c3b4:	add    al,0xf8
  41c3b6:	sbb    ebp,DWORD PTR [ecx+0xb]
  41c3b9:	xor    esi,DWORD PTR [edi]
  41c3bb:	dec    esp
  41c3bc:	mov    eax,ds:0x6b24cf09
  41c3c1:	xor    ebp,esp
  41c3c3:	jo     0x41c3f5
  41c3c5:	adc    bh,BYTE PTR [ecx+0xc]
  41c3c8:	push   es
  41c3c9:	aad    0x77
  41c3cb:	ror    DWORD PTR [ebx],cl
  41c3cd:	and    bl,BYTE PTR [ebx+0x4a]
  41c3d0:	add    BYTE PTR [edx+0x56408e16],bh
  41c3d6:	xchg   ecx,eax
  41c3d7:	jb     0x41c3d3
  41c3d9:	imul   ecx,DWORD PTR [ecx],0xffffffab
  41c3dc:	cmp    eax,0x1c4710cc
  41c3e1:	dec    esp
  41c3e2:	sbb    eax,0x1f46b8b5
  41c3e7:	sub    ah,BYTE PTR [ebx+0x28]
  41c3ea:	enter  0xb1c1,0xe2
  41c3ee:	in     al,dx
  41c3ef:	sahf   
  41c3f0:	in     al,0xf9
  41c3f2:	(bad)  
  41c3f3:	or     ebp,DWORD PTR [edi+0x1355507]
  41c3f9:	scas   eax,DWORD PTR es:[edi]
  41c3fa:	jle    0x41c407
  41c3fc:	sbb    DWORD PTR [esi],esi
  41c3fe:	xchg   BYTE PTR [ebx],cl
  41c400:	mov    edx,0xe7dfe506
  41c405:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c406:	outs   dx,BYTE PTR fs:[esi]
  41c408:	rep outs dx,DWORD PTR ds:[esi]
  41c40a:	xchg   ebx,eax
  41c40b:	push   esi
  41c40c:	pop    ds
  41c40d:	leave  
  41c40e:	test   BYTE PTR [ecx],ch
  41c410:	je     0x41c3e4
  41c412:	imul   edx,DWORD PTR [edx],0x8870e226
  41c418:	bound  ebp,QWORD PTR [esi]
  41c41a:	push   ecx
  41c41b:	xchg   ebx,eax
  41c41c:	aas    
  41c41d:	in     eax,dx
  41c41e:	sbb    eax,0xa0e8578e
  41c423:	fstp   TBYTE PTR [edi+0x45]
  41c426:	cmc    
  41c427:	fsub   QWORD PTR ds:0xbd6a87d8
  41c42d:	cs mov esi,0xba6b7102
  41c433:	xchg   DWORD PTR [edi+0x1defe597],ebp
  41c439:	nop
  41c43a:	inc    ebp
  41c43b:	outs   dx,DWORD PTR ds:[esi]
  41c43c:	jmp    0x41c41a
  41c43e:	xchg   DWORD PTR [esi-0x6bfa2055],ebx
  41c444:	ss jnp 0x41c419
  41c447:	jp     0x41c42f
  41c449:	jg     0x41c4bb
  41c44b:	push   0x4
  41c44d:	jl     0x41c3d8
  41c44f:	pushf  
  41c450:	and    BYTE PTR [bp+di-0x39],dl
  41c454:	xchg   esp,eax
  41c455:	pop    ss
  41c456:	ret    0xb341
  41c459:	xchg   edx,eax
  41c45a:	loope  0x41c43a
  41c45c:	jne    0x41c4c9
  41c45e:	sahf   
  41c45f:	dec    ebx
  41c460:	loopne 0x41c416
  41c462:	imul   ebp,DWORD PTR [edx],0x77797d8b
  41c468:	sub    DWORD PTR [ecx-0x27],ecx
  41c46b:	mov    es,ebp
  41c46d:	popf   
  41c46e:	js     0x41c444
  41c470:	scas   eax,DWORD PTR es:[edi]
  41c471:	jmp    0x41c431
  41c473:	pop    ds
  41c474:	sahf   
  41c475:	adc    ebx,eax
  41c477:	jno    0x41c4f4
  41c479:	std    
  41c47a:	sub    BYTE PTR [ebx+0x520c5508],ah
  41c480:	or     ch,BYTE PTR [edx]
  41c482:	cld    
  41c483:	retf   
  41c484:	lods   al,BYTE PTR ds:[esi]
  41c485:	test   eax,0x24c666c1
  41c48a:	mov    al,0x79
  41c48c:	adc    BYTE PTR [edi],bl
  41c48e:	jnp    0x41c500
  41c490:	jmp    0x2ec366df
  41c495:	push   es
  41c496:	ja     0x41c4fd
  41c498:	into   
  41c499:	adc    BYTE PTR [ecx-0xb],al
  41c49c:	mov    dl,BYTE PTR [ecx-0x28]
  41c49f:	cmp    BYTE PTR [ebp+0x77eb3eb0],cl
  41c4a5:	push   0x10
  41c4a7:	mov    ch,0xf
  41c4a9:	lahf   
  41c4aa:	test   BYTE PTR [edi+0x3b],0x68
  41c4ae:	shl    ch,0xd2
  41c4b1:	out    dx,eax
  41c4b2:	cmc    
  41c4b3:	sbb    BYTE PTR [edx+0x68],dh
  41c4b6:	inc    ecx
  41c4b7:	or     eax,0xa1ba1b19
  41c4bc:	push   ebp
  41c4bd:	cmp    al,0x5f
  41c4bf:	cmp    DWORD PTR [ebx+0x93ec664],ecx
  41c4c5:	es daa 
  41c4c7:	leave  
  41c4c8:	ret    0x743e
  41c4cb:	ins    DWORD PTR es:[edi],dx
  41c4cc:	in     al,0xdd
  41c4ce:	faddp  st(4),st
  41c4d0:	pop    edx
  41c4d1:	sar    BYTE PTR [edx-0x65],cl
  41c4d4:	scas   al,BYTE PTR es:[edi]
  41c4d5:	add    bh,BYTE PTR [esp+esi*4-0x514355ce]
  41c4dc:	popf   
  41c4dd:	push   0xffffffcd
  41c4df:	inc    ebp
  41c4e0:	les    ebx,FWORD PTR [esi+esi*8]
  41c4e3:	mov    edx,0x9c11ea31
  41c4e8:	pushf  
  41c4e9:	rcr    ebx,0xcc
  41c4ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4ed:	add    ecx,esi
  41c4ef:	xchg   DWORD PTR [edx+0x68],ebp
  41c4f2:	in     al,dx
  41c4f3:	cmc    
  41c4f4:	inc    esi
  41c4f5:	int    0x92
  41c4f7:	call   DWORD PTR [edx-0x61a98d70]
  41c4fd:	or     bh,bh
  41c4ff:	lods   al,BYTE PTR ds:[esi]
  41c500:	mov    ds:0xc64d8066,eax
  41c505:	adc    al,0x16
  41c507:	popa   
  41c508:	push   ebx
  41c509:	xor    edi,DWORD PTR [edi+0x2f]
  41c50c:	dec    ebp
  41c50d:	sti    
  41c50e:	(bad)  
  41c50f:	mov    bh,0xa6
  41c511:	dec    ebp
  41c512:	mov    cl,0xbc
  41c514:	sub    ah,BYTE PTR [esi]
  41c516:	xchg   DWORD PTR [ebp-0x705578f6],ebx
  41c51c:	in     al,dx
  41c51d:	xor    ah,bl
  41c51f:	xor    eax,0xf4992db3
  41c524:	dec    esp
  41c525:	push   ecx
  41c526:	pop    esi
  41c527:	adc    al,0x1f
  41c529:	xchg   ebx,eax
  41c52a:	pop    ebx
  41c52b:	or     BYTE PTR [esp+ebp*2],ch
  41c52e:	jl     0x41c4b9
  41c530:	pop    eax
  41c531:	sbb    ebp,0x77
  41c534:	bound  edx,QWORD PTR [eax-0xe]
  41c537:	mov    WORD PTR [ecx+0x2e],ds
  41c53a:	push   ds
  41c53b:	xchg   edx,eax
  41c53c:	sbb    DWORD PTR [ebp-0x7d3bcf2a],edx
  41c542:	xchg   edx,eax
  41c543:	nop
  41c544:	fadd   QWORD PTR ds:0xe09b91f
  41c54a:	mov    bl,0xb0
  41c54c:	aad    0xf3
  41c54e:	mul    DWORD PTR [esp+ebx*8]
  41c551:	ffree  st(2)
  41c553:	sbb    esi,DWORD PTR [eax+eiz*2-0x1a64b45d]
  41c55a:	rol    DWORD PTR [esi+0x651c9b0a],cl
  41c560:	shl    bh,1
  41c562:	push   edi
  41c563:	mov    al,ds:0x1c79e0ff
  41c568:	add    DWORD PTR [eax],esp
  41c56a:	add    ebp,DWORD PTR [edx+eax*1]
  41c56d:	jns    0x41c5be
  41c56f:	mov    ebp,0xb7d9e4f7
  41c574:	push   ss
  41c575:	lods   al,BYTE PTR ds:[esi]
  41c576:	dec    ebp
  41c577:	std    
  41c578:	cmp    al,0xe7
  41c57a:	xchg   edi,eax
  41c57b:	push   esp
  41c57d:	(bad)  
  41c57e:	jle    0x41c571
  41c580:	icebp  
  41c581:	mov    edi,0x19dba2a8
  41c586:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c587:	fistp  DWORD PTR [ecx]
  41c589:	pop    ecx
  41c58a:	shl    BYTE PTR [esi+0x14],cl
  41c58d:	add    BYTE PTR [eax],al
  41c58f:	add    BYTE PTR [eax],al
  41c591:	add    ch,ah
  41c593:	adc    al,BYTE PTR [edi]
  41c595:	dec    ebx
  41c596:	neg    DWORD PTR [edi-0x13]
  41c599:	mov    esi,0xd2d3b943
  41c59e:	aam    0x7e
  41c5a0:	sub    ah,BYTE PTR [ebx+0x1415b]
  41c5a6:	repz add al,0x0
  41c5a9:	add    bl,cl
  41c5ab:	enter  0xe823,0xb3
  41c5af:	int    0x29
  41c5b1:	out    0xfe,al
  41c5b3:	imul   ebx,edi,0x5a88442b
  41c5b9:	and    al,0xe
  41c5bb:	push   esi
  41c5bc:	sbb    DWORD PTR [ebp+0x19d60ff8],ecx
  41c5c2:	push   0xd181d31f
  41c5c7:	sub    BYTE PTR [ebx-0xfd98634],dl
  41c5cd:	mov    BYTE PTR [ebx],ah
  41c5cf:	in     al,0xdb
  41c5d1:	add    ecx,DWORD PTR [ebp+0x6c]
  41c5d4:	adc    eax,0x2dc40cee
  41c5d9:	popa   
  41c5da:	addr16 push cs
  41c5dc:	jle    0x41c590
  41c5de:	outs   dx,DWORD PTR ds:[esi]
  41c5df:	into   
  41c5e0:	ins    BYTE PTR es:[edi],dx
  41c5e1:	inc    esp
  41c5e2:	loopne 0x41c656
  41c5e4:	xor    al,0xb3
  41c5e6:	fsub   QWORD PTR [edi-0x25]
  41c5e9:	jnp    0x41c5a9
  41c5eb:	jb     0x41c58c
  41c5ed:	jecxz  0x41c64b
  41c5ef:	(bad)  
  41c5f0:	lock sbb BYTE PTR [edx-0x4d04204f],al
  41c5f7:	mov    eax,ds:0x4705c277
  41c5fc:	popf   
  41c5fd:	mov    WORD PTR [edx],fs
  41c5ff:	lods   al,BYTE PTR ds:[esi]
  41c600:	call   0x8895:0xe10cacfe
  41c607:	ret    
  41c608:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c609:	mov    ebx,0xc7fb9b1d
  41c60e:	pop    edi
  41c60f:	dec    edi
  41c610:	bound  eax,QWORD PTR [eax]
  41c612:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c613:	scas   eax,DWORD PTR es:[edi]
  41c614:	in     eax,dx
  41c615:	in     eax,0x4a
  41c617:	mov    bl,0x65
  41c619:	iret   
  41c61a:	push   ss
  41c61b:	lahf   
  41c61c:	push   eax
  41c61d:	adc    DWORD PTR [edi],ebp
  41c61f:	mov    ebp,0x644de7fe
  41c624:	inc    eax
  41c625:	sahf   
  41c626:	js     0x41c637
  41c628:	dec    esi
  41c629:	pop    ebp
  41c62a:	jmp    0x41c696
  41c62c:	push   es
  41c62d:	mov    al,ds:0x66892569
  41c632:	push   ds
  41c633:	or     bl,BYTE PTR [edx]
  41c635:	es test eax,0x51294f03
  41c63b:	cmp    eax,0xe48ecf16
  41c640:	and    BYTE PTR [edi-0x6f],dh
  41c643:	sbb    edx,DWORD PTR [esi]
  41c645:	outs   dx,DWORD PTR ds:[esi]
  41c646:	push   es
  41c647:	hlt    
  41c648:	outs   dx,DWORD PTR ds:[esi]
  41c649:	popf   
  41c64a:	xchg   ebx,eax
  41c64b:	fnsave [esi+0x2]
  41c64e:	jmp    0x41c60d
  41c650:	mov    eax,0xbf3d6a85
  41c655:	fsub   DWORD PTR [ebx]
  41c657:	lahf   
  41c658:	xor    BYTE PTR [edi],bl
  41c65a:	add    BYTE PTR [ebx],bh
  41c65c:	xchg   ebp,eax
  41c65d:	inc    ebp
  41c65e:	sbb    al,0x3a
  41c660:	div    BYTE PTR [eax]
  41c662:	lods   eax,DWORD PTR ds:[esi]
  41c663:	push   0x102b2c86
  41c668:	hlt    
  41c669:	retf   
  41c66a:	in     al,0x25
  41c66c:	mov    ebp,0xae4c63d
  41c671:	hlt    
  41c672:	popa   
  41c673:	jg     0x41c6db
  41c675:	and    al,dl
  41c677:	test   al,0x40
  41c679:	mov    ah,0xeb
  41c67b:	mov    eax,ds:0x489abaa5
  41c680:	fs push eax
  41c682:	mov    ds:0xe7b1ea0f,al
  41c687:	mov    ebx,DWORD PTR [ebp-0x17508ed0]
  41c68d:	push   esp
  41c68e:	dec    esi
  41c68f:	leave  
  41c690:	retf   
  41c691:	fistp  WORD PTR [eax+0x29]
  41c694:	stos   BYTE PTR es:[edi],al
  41c695:	jb     0x41c66d
  41c697:	test   ecx,esp
  41c699:	jl     0x41c6d1
  41c69b:	stos   DWORD PTR es:[edi],eax
  41c69c:	jmp    0xd1131beb
  41c6a1:	sbb    DWORD PTR [eax+ebp*8+0x3caa9c3b],edx
  41c6a8:	mov    al,ds:0xcda09413
  41c6ad:	loop   0x41c6ee
  41c6af:	loopne 0x41c6d3
  41c6b1:	lea    eax,[ebp+0x67]
  41c6b4:	cmp    ah,BYTE PTR [edx]
  41c6b6:	(bad)  
  41c6b7:	dec    BYTE PTR [esi+0x64]
  41c6ba:	and    al,0xa
  41c6bc:	call   0x4773:0x497c5824
  41c6c3:	int    0x85
  41c6c5:	mov    dh,0x12
  41c6c7:	inc    ebx
  41c6c8:	sub    ah,bh
  41c6ca:	lods   eax,DWORD PTR ds:[esi]
  41c6cb:	cmp    edi,DWORD PTR [edx+ebp*4+0x36]
  41c6cf:	jnp    0x41c73f
  41c6d1:	mov    bl,0x50
  41c6d3:	test   al,0x95
  41c6d5:	scas   al,BYTE PTR es:[edi]
  41c6d6:	xchg   ecx,eax
  41c6d7:	enter  0xf7fd,0xaa
  41c6db:	push   0x5eea091a
  41c6e0:	adc    eax,DWORD PTR [ebx+0x1b]
  41c6e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6e4:	and    dh,cl
  41c6e6:	data16 scas al,BYTE PTR es:[edi]
  41c6e8:	jge    0x41c68d
  41c6ea:	jae    0x41c698
  41c6ec:	xor    BYTE PTR [ecx+0x64],dl
  41c6ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6f0:	dec    esi
  41c6f1:	xchg   ebx,eax
  41c6f2:	inc    esp
  41c6f3:	hlt    
  41c6f4:	lahf   
  41c6f5:	(bad)  
  41c6f6:	sbb    edi,eax
  41c6f8:	(bad)  
  41c6f9:	enter  0xe381,0xed
  41c6fd:	retf   
  41c6fe:	test   DWORD PTR [esi+eiz*2-0x368414bd],0x9b16cf10
  41c709:	or     eax,0xc854cbdc
  41c70e:	xchg   ebp,eax
  41c70f:	fnstcw WORD PTR ds:0xfb76a326
  41c715:	sbb    ah,cl
  41c717:	mov    ds:0xd575d4bd,eax
  41c71c:	ret    
  41c71d:	mov    BYTE PTR [eax+ebp*8+0x7f2ef420],bh
  41c724:	pop    ebp
  41c725:	push   ds
  41c726:	repz sti 
  41c728:	(bad)  
  41c729:	ss push esp
  41c72b:	sub    eax,0x1dba3378
  41c730:	popf   
  41c731:	adc    ebx,DWORD PTR [eax]
  41c733:	xchg   ecx,eax
  41c734:	enter  0xd986,0x75
  41c738:	push   ds
  41c739:	int    0x9d
  41c73b:	and    BYTE PTR [ecx+ebx*4],bh
  41c73e:	loope  0x41c783
  41c740:	int3   
  41c741:	add    eax,0xfffffffc
  41c744:	test   DWORD PTR [ebp-0x2de8654c],esp
  41c74a:	push   0xffffffd8
  41c74c:	jmp    0x41c724
  41c74e:	addr16 retf 0xb838
  41c752:	xor    esp,edx
  41c754:	imul   esi,DWORD PTR [edi+esi*1+0x11],0x7e
  41c759:	add    bl,BYTE PTR [ecx-0xc]
  41c75c:	push   ecx
  41c75d:	xor    dl,ah
  41c75f:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41c761:	or     DWORD PTR [esi],esp
  41c763:	inc    ebp
  41c764:	mov    eax,ds:0xeea8ed4
  41c769:	inc    eax
  41c76a:	into   
  41c76b:	jecxz  0x41c795
  41c76d:	pop    ecx
  41c76e:	add    eax,0x66579678
  41c773:	add    BYTE PTR [edi-0x3e],ah
  41c776:	cmp    DWORD PTR [edi-0x7c653e12],edi
  41c77c:	(bad)  
  41c77d:	cli    
  41c77e:	clc    
  41c77f:	dec    esp
  41c780:	jnp    0x41c75f
  41c782:	(bad)  
  41c786:	or     DWORD PTR [edx+esi*2],0xaaf1e017
  41c78d:	push   ebx
  41c78e:	jp     0x41c7ab
  41c790:	dec    eax
  41c791:	ja     0x41c746
  41c793:	in     al,dx
  41c794:	enter  0xb3fd,0x56
  41c798:	mov    BYTE PTR [ebx+0x2821e551],ch
  41c79e:	das    
  41c79f:	mov    ch,0x6
  41c7a1:	adc    edi,edi
  41c7a3:	lods   al,BYTE PTR ds:[esi]
  41c7a4:	loop   0x41c7b2
  41c7a6:	(bad)  
  41c7a7:	outs   dx,BYTE PTR ds:[esi]
  41c7a8:	loopne 0x41c733
  41c7aa:	sbb    BYTE PTR ds:0x594ace74,0xe9
  41c7b1:	xchg   BYTE PTR [edi+0x2c6d2515],bh
  41c7b7:	int    0x95
  41c7b9:	and    DWORD PTR [eax+0xc],edi
  41c7bc:	or     DWORD PTR [ecx+0x2b],0x96614c0c
  41c7c3:	xchg   esp,eax
  41c7c4:	or     BYTE PTR [ecx],ch
  41c7c6:	mov    ch,0x54
  41c7c8:	test   eax,0xa0580a98
  41c7cd:	fld    QWORD PTR [esi+0x2f561cac]
  41c7d3:	in     eax,dx
  41c7d4:	pop    ss
  41c7d5:	mov    DWORD PTR [ebx*2+0x388ca689],edx
  41c7dc:	fdiv   st(2),st
  41c7de:	out    0xad,eax
  41c7e0:	in     eax,dx
  41c7e1:	and    eax,0x41fb0685
  41c7e6:	pop    es
  41c7e7:	scas   eax,DWORD PTR es:[edi]
  41c7e8:	or     al,0x5b
  41c7ea:	xor    eax,0xaf24be4f
  41c7ef:	sbb    edi,DWORD PTR [edx+ebx*4-0x1]
  41c7f3:	mov    dh,0x27
  41c7f5:	lea    esi,[ecx+0x6ccd3a8b]
  41c7fb:	add    eax,ebx
  41c7fd:	loopne 0x41c7df
  41c7ff:	fbld   TBYTE PTR [edi]
  41c801:	sub    BYTE PTR [edx],al
  41c803:	rcl    DWORD PTR [ebx-0x2c],0xf8
  41c807:	es ins BYTE PTR es:[edi],dx
  41c809:	xchg   edi,eax
  41c80a:	pop    eax
  41c80b:	inc    eax
  41c80c:	jmp    0xf6df:0x67bd0b8c
  41c813:	push   esp
  41c814:	std    
  41c815:	mov    edi,DWORD PTR [ebp+0x22]
  41c818:	push   eax
  41c819:	jo     0x41c7c5
  41c81b:	mov    eax,0x3c176571
  41c820:	popf   
  41c821:	stos   DWORD PTR es:[edi],eax
  41c822:	mov    ecx,0xbaecda89
  41c827:	pop    esp
  41c828:	aad    0x28
  41c82a:	adc    al,0x54
  41c82c:	ins    DWORD PTR es:[edi],dx
  41c82d:	icebp  
  41c82e:	or     eax,DWORD PTR [ecx]
  41c830:	jns    0x41c824
  41c832:	dec    ebp
  41c833:	mov    ecx,0x53fbf7f6
  41c838:	ins    BYTE PTR es:[edi],dx
  41c839:	imul   esp,DWORD PTR ds:0x17c78026,0x37fb4adf
  41c843:	fsubrp st(7),st
  41c845:	push   ebx
  41c846:	mov    edx,DWORD PTR ds:0x7a0dd043
  41c84c:	xor    ch,BYTE PTR [eax]
  41c84e:	ror    ebx,0x7f
  41c851:	retf   
  41c852:	adc    DWORD PTR ds:0xa1ec5961,esp
  41c858:	rcr    bl,cl
  41c85a:	pop    esi
  41c85b:	fist   DWORD PTR [esi-0x51]
  41c85e:	iret   
  41c85f:	test   BYTE PTR [ebp+0x63],al
  41c862:	jmp    0x1319da83
  41c867:	icebp  
  41c868:	stc    
  41c869:	in     eax,0x30
  41c86b:	aam    0x4a
  41c86d:	sub    ecx,DWORD PTR [ebx+edx*2]
  41c870:	mov    al,ds:0x9a2a386f
  41c875:	jns    0x41c88b
  41c877:	das    
  41c878:	jb     0x41c7fa
  41c87a:	imul   ebx,DWORD PTR [ecx-0x11],0xffffffa4
  41c87e:	cmp    BYTE PTR [ecx],dl
  41c880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c881:	mov    bl,0x7a
  41c883:	loopne 0x41c828
  41c885:	loop   0x41c83f
  41c887:	sbb    al,BYTE PTR [edx]
  41c889:	xor    ebp,DWORD PTR [edi+edx*1+0x46]
  41c88d:	leave  
  41c88e:	fidiv  WORD PTR [edi]
  41c890:	pop    esi
  41c891:	mov    edi,0x6f5d532e
  41c896:	outs   dx,BYTE PTR ds:[esi]
  41c897:	pop    esp
  41c898:	inc    edi
  41c899:	sbb    ebx,DWORD PTR [ecx+0x7e]
  41c89c:	jl     0x41c8ef
  41c89e:	rol    edi,cl
  41c8a0:	ret    0x2ad5
  41c8a3:	shl    ebp,0x72
  41c8a6:	mov    ecx,0xf8119e28
  41c8ab:	call   DWORD PTR [ecx-0x4c]
  41c8ae:	sub    ebx,esi
  41c8b0:	leave  
  41c8b1:	jbe    0x41c92f
  41c8b3:	out    dx,eax
  41c8b4:	adc    eax,0x53488083
  41c8b9:	xor    al,0x59
  41c8bb:	cmp    dh,BYTE PTR [ebx+0x66]
  41c8be:	and    eax,0xa1b60d65
  41c8c3:	in     eax,dx
  41c8c4:	mov    esi,DWORD PTR [eax]
  41c8c6:	dec    ebx
  41c8c7:	dec    eax
  41c8c8:	sub    cl,BYTE PTR [ebx-0x52f7154]
  41c8ce:	int    0x63
  41c8d0:	test   al,0x6f
  41c8d2:	in     eax,0xff
  41c8d4:	mov    ah,0xd9
  41c8d6:	lds    edi,FWORD PTR [ebx+0x78f779ee]
  41c8dc:	sbb    al,0xe0
  41c8de:	or     DWORD PTR [ebx+ebx*8+0x11],esi
  41c8e2:	push   esp
  41c8e3:	mov    ecx,0x35b4f766
  41c8e8:	ins    BYTE PTR es:[edi],dx
  41c8e9:	in     eax,dx
  41c8ea:	push   esi
  41c8eb:	mov    dh,0x8d
  41c8ed:	inc    esp
  41c8ee:	and    edi,DWORD PTR ds:0x9eb59e0d
  41c8f4:	(bad)  
  41c8f5:	push   edi
  41c8f6:	data16 into 
  41c8f8:	push   edi
  41c8f9:	js     0x41c895
  41c8fb:	cmp    al,0x15
  41c8fd:	iret   
  41c8fe:	mov    edx,0xe474427
  41c903:	xor    esp,DWORD PTR [edx]
  41c905:	cmp    eax,edi
  41c907:	sbb    BYTE PTR [ecx],0x42
  41c90a:	pop    eax
  41c90b:	dec    ebx
  41c90c:	inc    eax
  41c90d:	imul   ebx,esp,0x98bed778
  41c913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c914:	mov    ebx,0x8ca39148
  41c919:	lods   al,BYTE PTR ds:[esi]
  41c91a:	dec    edx
  41c91b:	imul   DWORD PTR [ebx-0x7f30e19c]
  41c921:	mov    dl,0xb0
  41c923:	mov    eax,0x8e596489
  41c928:	les    ebp,FWORD PTR [ebx-0x33ad8cc0]
  41c92e:	xchg   edx,eax
  41c92f:	ret    
  41c930:	xchg   ecx,eax
  41c931:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c932:	les    ebp,FWORD PTR [eax]
  41c934:	test   DWORD PTR [eax+0x4ba6c1ec],ebx
  41c93a:	cdq    
  41c93b:	imul   eax,DWORD PTR [ecx],0x59
  41c93e:	fcmovnu st,st(7)
  41c940:	jge    0x41c948
  41c942:	popf   
  41c943:	sub    ah,BYTE PTR [ecx-0x38]
  41c946:	mov    eax,ds:0xceee78e3
  41c94b:	sub    ch,BYTE PTR [edi-0x1acbc5cb]
  41c951:	mov    esi,0xc5db74c8
  41c956:	(bad)  [edi+esi*1]
  41c959:	push   cs
  41c95a:	mov    al,ds:0x43877d60
  41c95f:	shl    DWORD PTR [edi-0x6d],cl
  41c962:	dec    esi
  41c963:	into   
  41c964:	pop    ds
  41c965:	popa   
  41c966:	les    edx,FWORD PTR [esp+ebp*2-0x3c]
  41c96a:	hlt    
  41c96b:	jno    0x41c9e4
  41c96d:	xchg   edx,eax
  41c96e:	ret    0x5691
  41c971:	repnz mov ds:0xc7aa8a57,al
  41c977:	xor    eax,0x68cd4f19
  41c97c:	and    al,0xa7
  41c97e:	xor    ax,0xd006
  41c982:	jmp    0xd551:0x5697a380
  41c989:	shr    DWORD PTR [eax+0x79],1
  41c98c:	mov    ebx,0x1af77776
  41c991:	push   ebp
  41c992:	inc    esi
  41c993:	out    0x47,eax
  41c995:	add    al,BYTE PTR ds:0xb5f732d2
  41c99b:	jae    0x41c99a
  41c99d:	popa   
  41c99e:	leave  
  41c99f:	xlat   BYTE PTR ds:[ebx]
  41c9a0:	lahf   
  41c9a1:	mov    bh,0x49
  41c9a3:	mov    ds:0xf1ecfe87,al
  41c9a8:	jmp    0x41c9fa
  41c9aa:	ins    DWORD PTR es:[edi],dx
  41c9ab:	push   ebp
  41c9ac:	xchg   esp,eax
  41c9ad:	push   ebx
  41c9ae:	sbb    DWORD PTR [edi-0x6e98a6f6],edi
  41c9b4:	push   ebp
  41c9b5:	in     eax,0x18
  41c9b7:	das    
  41c9b8:	ja     0x41c94f
  41c9ba:	add    ebx,ebx
  41c9bc:	push   0x33e42331
  41c9c1:	js     0x41c9e4
  41c9c3:	inc    edx
  41c9c4:	jl     0x41c9fe
  41c9c6:	pop    es
  41c9c7:	jl     0x41c9c2
  41c9c9:	cmp    BYTE PTR [edx+0x59],0x45
  41c9cd:	jmp    0x8df4:0x609dde73
  41c9d4:	add    DWORD PTR [ecx],ecx
  41c9d6:	add    eax,0xa75c1086
  41c9db:	fcom   DWORD PTR [ebx+0x48]
  41c9de:	dec    esp
  41c9df:	dec    edx
  41c9e0:	push   ds
  41c9e1:	sbb    BYTE PTR [edi],cl
  41c9e3:	jb     0x41ca22
  41c9e5:	dec    edi
  41c9e6:	dec    esp
  41c9e7:	imul   ebx,ecx,0xfb811e79
  41c9ed:	rol    BYTE PTR [edi+0x4],0x1
  41c9f1:	xchg   edx,eax
  41c9f2:	dec    edx
  41c9f3:	js     0x41ca4e
  41c9f5:	hlt    
  41c9f6:	xor    eax,DWORD PTR [esi+esi*2+0x3d]
  41c9fa:	sub    BYTE PTR [ecx-0x42],bl
  41c9fd:	test   eax,0xa91ff6b8
  41ca02:	in     al,dx
  41ca03:	push   ss
  41ca04:	stos   BYTE PTR es:[edi],al
  41ca05:	pop    esp
  41ca06:	retf   0x8c72
  41ca09:	push   eax
  41ca0a:	xor    al,0xa8
  41ca0c:	ret    0x5445
  41ca0f:	mov    bh,0xb9
  41ca11:	fist   WORD PTR [eax+edx*2-0x3]
  41ca15:	retf   0x551f
  41ca18:	or     BYTE PTR [ecx+esi*4+0x150c3809],bl
  41ca1f:	sub    DWORD PTR [eax+edx*8-0x6d],edx
  41ca23:	or     DWORD PTR [ecx],esp
  41ca25:	and    dh,ah
  41ca27:	icebp  
  41ca28:	mov    ebx,0x968951d4
  41ca2d:	(bad)  
  41ca2e:	outs   dx,BYTE PTR ds:[esi]
  41ca2f:	or     al,0xb0
  41ca31:	mov    ah,BYTE PTR [esi-0x23de15f9]
  41ca37:	sub    ah,cl
  41ca39:	xchg   esp,eax
  41ca3a:	push   esp
  41ca3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca3c:	shl    BYTE PTR [eax],0xcb
  41ca3f:	mov    ah,0xb9
  41ca41:	inc    eax
  41ca42:	out    0x48,al
  41ca44:	adc    ecx,DWORD PTR [edx-0x49f4b4d4]
  41ca4a:	stos   DWORD PTR es:[edi],eax
  41ca4b:	in     ax,dx
  41ca4d:	mov    cl,0xd1
  41ca4f:	(bad)  
  41ca50:	ror    DWORD PTR [edi],1
  41ca52:	mov    ebx,DWORD PTR [ecx]
  41ca54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca55:	push   0x7d479e3b
  41ca5a:	cmp    DWORD PTR [edi-0x36b67035],edi
  41ca60:	ds dec ebx
  41ca62:	xchg   esi,eax
  41ca63:	jbe    0x41ca01
  41ca65:	lods   eax,DWORD PTR gs:[esi]
  41ca67:	loope  0x41ca1c
  41ca69:	jle    0x41ca37
  41ca6b:	pop    ecx
  41ca6c:	call   0x9fc03425
  41ca71:	xchg   edi,eax
  41ca72:	sub    edx,DWORD PTR [ebp-0x3d]
  41ca75:	mov    edx,0x31ae9625
  41ca7a:	ins    BYTE PTR es:[edi],dx
  41ca7b:	test   eax,0x79986955
  41ca80:	jecxz  0x41ca69
  41ca82:	pop    ebp
  41ca83:	lock push eax
  41ca85:	cwde   
  41ca86:	fild   WORD PTR [edi-0xe]
  41ca89:	jge    0x41ca40
  41ca8b:	retf   
  41ca8c:	add    ecx,0xffffffb2
  41ca8f:	pop    eax
  41ca90:	dec    ecx
  41ca91:	cmp    BYTE PTR [eax-0x22a865b0],bh
  41ca97:	sahf   
  41ca98:	ds ins DWORD PTR es:[edi],dx
  41ca9a:	mov    esp,0x3cb0
  41ca9f:	add    BYTE PTR [eax],al
  41caa1:	add    ah,ah
  41caa3:	ds mov esp,ss
  41caa6:	fdivrp st(6),st
  41caa8:	cld    
  41caa9:	ds push esp
  41caab:	daa    
  41caac:	cmp    esi,DWORD PTR [edx-0x32]
  41caaf:	in     al,0x3a
  41cab1:	inc    esp
  41cab2:	dec    esi
  41cab3:	inc    esi
  41cab4:	add    DWORD PTR [eax],eax
  41cab6:	repz add al,0x0
  41cab9:	add    BYTE PTR [esi],dh
  41cabb:	pushf  
  41cabc:	xchg   edi,eax
  41cabd:	mov    ah,al
  41cabf:	adc    al,0x34
  41cac1:	mov    BYTE PTR ds:0x70fd76e3,bh
  41cac7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cac8:	dec    edi
  41cac9:	and    esi,DWORD PTR [ebp+0x57]
  41cacc:	test   DWORD PTR [eax-0x6248a755],ecx
  41cad2:	inc    esi
  41cad3:	xchg   esi,eax
  41cad4:	mov    bh,0x43
  41cad6:	dec    edi
  41cad7:	test   DWORD PTR [eax-0x7fc9052c],edx
  41cadd:	cdq    
  41cade:	outs   dx,BYTE PTR ds:[esi]
  41cadf:	pusha  
  41cae0:	psrlq  mm4,mm4
  41cae3:	repz jle 0x41ca83
  41cae6:	jmp    0x611cb633
  41caeb:	arpl   WORD PTR [ecx+eax*8],bx
  41caee:	ins    BYTE PTR es:[edi],dx
  41caef:	out    dx,al
  41caf0:	xlat   BYTE PTR ds:[ebx]
  41caf1:	mov    eax,ds:0xc8dd608e
  41caf6:	push   0xffffffcc
  41caf8:	lock dec ebx
  41cafa:	push   ebx
  41cafb:	daa    
  41cafc:	inc    esi
  41cafd:	xor    cl,BYTE PTR [esi+eiz*1+0x2e]
  41cb01:	fdivrp st(3),st
  41cb03:	push   ds
  41cb04:	mov    eax,0x59f6bc42
  41cb09:	std    
  41cb0a:	sub    al,0xce
  41cb0c:	sbb    eax,ebp
  41cb0e:	sub    BYTE PTR [eax],ch
  41cb10:	mov    dh,0xf9
  41cb12:	inc    edx
  41cb13:	mov    ah,0xa6
  41cb15:	arpl   dx,bx
  41cb17:	sub    edi,DWORD PTR ds:0x57e3df8
  41cb1d:	mov    al,0x34
  41cb1f:	popf   
  41cb20:	inc    DWORD PTR [ecx]
  41cb22:	push   esi
  41cb23:	int3   
  41cb24:	mov    dh,0x2e
  41cb26:	cmp    DWORD PTR [ebx+0x6600a6a],edx
  41cb2c:	fimul  DWORD PTR ds:0x195cc371
  41cb32:	jmp    0x16baca5f
  41cb37:	mov    bl,0xec
  41cb39:	mov    DWORD PTR [edx-0x43],ebp
  41cb3c:	mov    bl,0x3a
  41cb3e:	ja     0x41cb54
  41cb40:	jl     0x41cbc0
  41cb42:	adc    dh,cl
  41cb44:	shl    al,1
  41cb46:	test   BYTE PTR [edi],0x9e
  41cb49:	xchg   ecx,eax
  41cb4a:	call   0xc5d06798
  41cb4f:	in     al,dx
  41cb50:	mov    ch,0xfd
  41cb52:	sti    
  41cb53:	mov    bl,0xfd
  41cb55:	leave  
  41cb56:	sub    eax,0x18daaba
  41cb5b:	jnp    0x41cb06
  41cb5d:	pop    ss
  41cb5e:	xchg   DWORD PTR [edx+0x16808d4f],esp
  41cb64:	jb     0xaa38ff86
  41cb6a:	lahf   
  41cb6b:	lahf   
  41cb6c:	jne    0x41cb62
  41cb6e:	pop    es
  41cb6f:	cli    
  41cb70:	mov    ch,BYTE PTR gs:[ecx-0x9]
  41cb74:	mov    eax,0x897a7e6d
  41cb79:	and    eax,0x98b1f752
  41cb7e:	xchg   DWORD PTR [edx-0x6e2efab],edx
  41cb84:	imul   edi,DWORD PTR [ebx-0x7f],0xffffff9d
  41cb88:	sbb    BYTE PTR [edx+0x208769cc],cl
  41cb8e:	adc    al,0x7a
  41cb90:	mov    eax,0xffb8438
  41cb95:	add    al,0xf4
  41cb97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb98:	adc    edx,edx
  41cb9a:	rol    BYTE PTR [ebx+ebp*8],cl
  41cb9d:	xor    DWORD PTR ds:0x1ebe5784,0xfee88025
  41cba7:	std    
  41cba8:	or     BYTE PTR [ebp-0x6789ca54],bh
  41cbae:	lock push bx
  41cbb1:	cwde   
  41cbb2:	imul   ecx,DWORD PTR [esi],0x21796742
  41cbb8:	lahf   
  41cbb9:	retf   
  41cbba:	mov    ecx,0x21f73b1d
  41cbbf:	xchg   edx,eax
  41cbc0:	imul   esp,DWORD PTR [esi+0x3],0xd950721c
  41cbc7:	mov    ebp,0x1ae2a3da
  41cbcc:	push   ebp
  41cbcd:	fdiv   DWORD PTR [eax]
  41cbcf:	mov    ds:0xb12aa8e8,al
  41cbd4:	add    al,0x8d
  41cbd6:	call   0x1422f861
  41cbdb:	aad    0x31
  41cbdd:	cmp    eax,0x74a9a2da
  41cbe2:	pop    ebx
  41cbe3:	mov    bl,0xff
  41cbe5:	pop    eax
  41cbe6:	jae    0x41cbba
  41cbe8:	pop    ebp
  41cbe9:	leave  
  41cbea:	jmp    0x45aea5c3
  41cbef:	dec    ecx
  41cbf0:	cdq    
  41cbf1:	pop    ss
  41cbf2:	int    0x5f
  41cbf4:	adc    al,0xb2
  41cbf6:	inc    edi
  41cbf7:	lahf   
  41cbf8:	std    
  41cbf9:	dec    ecx
  41cbfa:	sub    BYTE PTR [edi-0x7],al
  41cbfd:	fucomi st,st(5)
  41cbff:	mov    al,ds:0x277dc5f0
  41cc04:	loopne 0x41cbad
  41cc06:	mov    esp,0xf8257820
  41cc0b:	mov    al,ds:0xaba8013
  41cc10:	xor    dl,BYTE PTR [esi+0x54d471e6]
  41cc16:	jle    0x41cc94
  41cc18:	lock push ebp
  41cc1a:	push   cs
  41cc1b:	mov    ds:0x894dc23f,eax
  41cc20:	ret    
  41cc21:	sbb    cl,dl
  41cc23:	call   FWORD PTR [esi+0x2e1faa8b]
  41cc29:	cli    
  41cc2a:	push   ebp
  41cc2b:	dec    ebx
  41cc2c:	imul   eax,DWORD PTR [eax],0xf1143e54
  41cc32:	push   ss
  41cc33:	push   ebx
  41cc34:	es pop edi
  41cc36:	fcomp  QWORD PTR [esi+0x58a67c6d]
  41cc3c:	mov    ds:0x3fc5b6ed,al
  41cc41:	push   0xffffff94
  41cc43:	mov    dl,0x2f
  41cc45:	jmp    0x41cc22
  41cc47:	loop   0x41cc7d
  41cc49:	or     dh,BYTE PTR [edi+0x47]
  41cc4c:	push   ecx
  41cc4d:	or     al,0x3e
  41cc4f:	adc    al,0x25
  41cc51:	xchg   esi,eax
  41cc52:	inc    edi
  41cc53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc54:	shl    BYTE PTR [edi],1
  41cc56:	out    0x50,al
  41cc58:	fistp  DWORD PTR [ecx]
  41cc5a:	fcom   QWORD PTR [ebx+0x49]
  41cc5d:	pop    ss
  41cc5e:	mov    dh,0xc4
  41cc60:	daa    
  41cc61:	fs inc esi
  41cc63:	daa    
  41cc64:	scas   al,BYTE PTR es:[edi]
  41cc65:	push   ss
  41cc66:	mov    edi,DWORD PTR [edi]
  41cc68:	xchg   esi,eax
  41cc69:	push   cs
  41cc6a:	mov    DWORD PTR [eax-0x24],ebp
  41cc6d:	pusha  
  41cc6e:	or     ah,BYTE PTR [eax]
  41cc70:	mov    dl,0x15
  41cc72:	xchg   esp,eax
  41cc73:	popf   
  41cc74:	jnp    0x41ccae
  41cc76:	pop    ebp
  41cc77:	stos   DWORD PTR es:[edi],eax
  41cc78:	mov    ebx,0x201a03f2
  41cc7d:	inc    ecx
  41cc7e:	sub    bh,BYTE PTR [ebp-0x13ee388b]
  41cc84:	bt     DWORD PTR ds:0x1a73d0a,ebp
  41cc8b:	push   edx
  41cc8c:	es adc al,0x57
  41cc8f:	pop    edx
  41cc90:	add    DWORD PTR [eax+0x36],eax
  41cc93:	mov    ecx,eax
  41cc95:	cld    
  41cc96:	je     0x41cc59
  41cc98:	xchg   ebp,eax
  41cc99:	and    eax,DWORD PTR [edi-0x3a]
  41cc9c:	mov    edx,edi
  41cc9e:	dec    eax
  41cc9f:	dec    ebp
  41cca0:	inc    edi
  41cca1:	xor    al,BYTE PTR [ecx-0x1566ffda]
  41cca7:	aaa    
  41cca8:	cli    
  41cca9:	sbb    cl,BYTE PTR [ecx-0x44efa4d9]
  41ccaf:	jmp    0x7921:0x8133f30c
  41ccb6:	fisttp DWORD PTR [esi-0x6f]
  41ccb9:	cmp    BYTE PTR [edx-0x10],0x32
  41ccbd:	adc    ebx,DWORD PTR [esi-0x29]
  41ccc0:	(bad)  
  41ccc1:	jmp    0x41cd3c
  41ccc3:	addr16 jo 0x41cca2
  41ccc6:	jno    0x41cd00
  41ccc8:	mov    bl,0xd0
  41ccca:	sbb    BYTE PTR [esi-0x6fbfa32f],al
  41ccd0:	mov    bl,0x60
  41ccd2:	mov    eax,ds:0xdf675a54
  41ccd7:	call   0x138d:0xc76c2630
  41ccde:	pop    es
  41ccdf:	dec    edi
  41cce0:	hlt    
  41cce1:	push   cs
  41cce2:	sbb    BYTE PTR [ebx+0x71e3fefe],0x79
  41cce9:	mov    edi,ecx
  41cceb:	jnp    0x41ccd9
  41cced:	xor    ebx,ecx
  41ccef:	and    DWORD PTR [eax+0x5bd94148],ebp
  41ccf5:	popf   
  41ccf6:	xor    ah,bh
  41ccf8:	add    eax,0xa164197
  41ccfd:	mov    edi,0x25c7a555
  41cd02:	pop    edx
  41cd03:	inc    edx
  41cd04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd05:	fstp   QWORD PTR [ebx-0x7e276002]
  41cd0b:	ret    0x8156
  41cd0e:	add    al,0x40
  41cd10:	sbb    bh,dh
  41cd12:	mov    edi,0x38e39c1c
  41cd17:	(bad)  
  41cd18:	jnp    0x41cced
  41cd1a:	fmulp  st(7),st
  41cd1c:	sahf   
  41cd1d:	rcl    BYTE PTR [ebx+0x239e2f95],1
  41cd23:	iret   
  41cd24:	sahf   
  41cd25:	and    bh,BYTE PTR [ebp+0x5cc3f672]
  41cd2b:	adc    eax,0xd28c4c9e
  41cd30:	lock adc ebx,DWORD PTR [ebx+0x101a0134]
  41cd37:	out    0xbe,al
  41cd39:	ss cmp ecx,edi
  41cd3c:	cmp    dh,BYTE PTR [esi*1-0x50e1a349]
  41cd43:	data16 or dh,BYTE PTR [edi]
  41cd46:	mov    ah,0xb4
  41cd48:	inc    esi
  41cd49:	jns    0x41ccfb
  41cd4b:	xchg   esi,eax
  41cd4c:	scas   al,BYTE PTR es:[edi]
  41cd4d:	adc    al,BYTE PTR [ecx-0x17e1e18a]
  41cd53:	push   edx
  41cd54:	pop    ss
  41cd55:	adc    bl,dl
  41cd57:	push   ss
  41cd58:	pop    ecx
  41cd59:	int3   
  41cd5a:	int3   
  41cd5b:	imul   ebp,ecx,0x64
  41cd5e:	push   esp
  41cd5f:	ss nop
  41cd61:	jns    0x41cd9f
  41cd63:	cmp    eax,0x189f5659
  41cd68:	jmp    0x646ed012
  41cd6d:	std    
  41cd6e:	(bad)  
  41cd6f:	enter  0x8d72,0xa4
  41cd73:	cmp    BYTE PTR [ebx],0x85
  41cd76:	and    eax,0xfc849f6c
  41cd7b:	xchg   bh,dh
  41cd7d:	lahf   
  41cd7e:	js     0x41cd4b
  41cd80:	xchg   al,al
  41cd82:	xchg   DWORD PTR [edx],esp
  41cd84:	pop    ebp
  41cd85:	pushf  
  41cd86:	aas    
  41cd87:	retf   0x4aa8
  41cd8a:	fimul  DWORD PTR [eax]
  41cd8c:	addr16 dec ebx
  41cd8e:	pop    ecx
  41cd8f:	or     edi,eax
  41cd91:	jo     0x41cd66
  41cd93:	in     eax,0x37
  41cd95:	imul   ebp,ebx,0xffffffda
  41cd98:	mov    DWORD PTR [edx+edi*2+0x49],edi
  41cd9c:	cmp    eax,0xd83f9d99
  41cda1:	mov    bl,BYTE PTR [ecx+0x2886889e]
  41cda7:	call   0x9d5c:0x4c928b3d
  41cdae:	sub    BYTE PTR [ebx],ch
  41cdb0:	cmp    ebx,esi
  41cdb2:	xchg   ebx,eax
  41cdb3:	inc    edx
  41cdb4:	push   ss
  41cdb5:	cdq    
  41cdb6:	jecxz  0x41cdd7
  41cdb8:	lahf   
  41cdb9:	aas    
  41cdba:	mov    edi,0x4d5b6e8b
  41cdbf:	int    0xfe
  41cdc1:	jge    0x41cdfb
  41cdc3:	cmp    al,0xd7
  41cdc5:	or     dh,ch
  41cdc7:	call   0x827aaae
  41cdcc:	outs   dx,BYTE PTR ds:[esi]
  41cdcd:	mov    eax,ds:0xb92fa3b
  41cdd2:	lods   eax,DWORD PTR ds:[esi]
  41cdd3:	retf   0x8dfc
  41cdd6:	pop    eax
  41cdd7:	cwde   
  41cdd8:	repnz or bh,BYTE PTR [ebp+0x4a]
  41cddc:	repz mov ds:0x786f317d,al
  41cde2:	mov    bl,0x46
  41cde4:	and    DWORD PTR [ebx+0x9],ecx
  41cde7:	(bad)  [ebp-0x24]
  41cdea:	daa    
  41cdeb:	xchg   ebp,eax
  41cdec:	inc    esp
  41cded:	popf   
  41cdee:	loop   0x41cde5
  41cdf0:	lods   eax,DWORD PTR ds:[esi]
  41cdf1:	mov    edi,0x2b76f6e0
  41cdf6:	add    esp,DWORD PTR [edx-0x34]
  41cdf9:	popa   
  41cdfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdfb:	loopne 0x41ce26
  41cdfd:	jo     0x41ce55
  41cdff:	adc    bl,dl
  41ce01:	jg     0x41ce57
  41ce03:	mov    cl,0x30
  41ce05:	push   esi
  41ce06:	data16 stos BYTE PTR es:[edi],al
  41ce08:	xor    bh,dh
  41ce0a:	pop    edx
  41ce0b:	and    ebx,ebp
  41ce0d:	imul   edi,DWORD PTR [edx+0x7df21aa0],0x33
  41ce14:	js     0x41ce41
  41ce16:	or     dl,ah
  41ce18:	repz xor al,BYTE PTR [eax+0x44]
  41ce1c:	push   es
  41ce1d:	pop    ecx
  41ce1e:	adc    esp,DWORD PTR [ecx]
  41ce20:	xchg   ebp,eax
  41ce21:	fucom  st(4)
  41ce23:	mov    ch,0x61
  41ce25:	hlt    
  41ce26:	inc    ebp
  41ce27:	ficom  DWORD PTR [bx+di-0x2618]
  41ce2c:	adc    DWORD PTR [ecx-0x30b95891],eax
  41ce32:	test   ch,cl
  41ce34:	adc    ebp,DWORD PTR ds:0xedb89ccb
  41ce3a:	xchg   ebp,eax
  41ce3b:	inc    ecx
  41ce3c:	out    dx,eax
  41ce3d:	popf   
  41ce3e:	xchg   esi,eax
  41ce3f:	lds    eax,FWORD PTR [esi-0x18]
  41ce42:	popa   
  41ce43:	rol    BYTE PTR [edi-0x7],0x74
  41ce47:	ds test bh,bl
  41ce4a:	dec    edx
  41ce4b:	and    edi,DWORD PTR ds:0xafde5f17
  41ce51:	(bad)  
  41ce53:	inc    edx
  41ce54:	stos   BYTE PTR es:[edi],al
  41ce55:	or     eax,0xd1172fda
  41ce5a:	mov    dh,0x78
  41ce5c:	fwait
  41ce5d:	das    
  41ce5e:	popf   
  41ce5f:	sbb    bh,BYTE PTR [edx]
  41ce61:	imul   ecx,DWORD PTR [edx+0x14],0x861aafc9
  41ce68:	pop    ebp
  41ce69:	xor    edi,ebp
  41ce6b:	push   edi
  41ce6c:	dec    esi
  41ce6d:	and    ch,bh
  41ce6f:	push   0x7277bc50
  41ce74:	inc    esi
  41ce75:	daa    
  41ce76:	sub    eax,0x7b010097
  41ce7b:	xlat   BYTE PTR ds:[ebx]
  41ce7c:	push   cs
  41ce7d:	out    dx,al
  41ce7e:	fsubr  DWORD PTR [edx+edx*8+0x69]
  41ce82:	out    dx,al
  41ce83:	popf   
  41ce84:	std    
  41ce85:	jmp    0xf1f1:0x6a62bd6a
  41ce8c:	add    ah,ah
  41ce8e:	aaa    
  41ce8f:	pop    eax
  41ce90:	out    0xa6,al
  41ce92:	out    0x38,eax
  41ce94:	icebp  
  41ce95:	mov    ds:0x88d570dc,eax
  41ce9a:	cld    
  41ce9b:	sub    BYTE PTR [edx-0x16804c3e],dh
  41cea1:	jb     0x41cee0
  41cea3:	pop    es
  41cea4:	out    dx,eax
  41cea5:	push   ebp
  41cea6:	es test eax,0x640a36ee
  41ceac:	or     BYTE PTR [edi],al
  41ceae:	fst    QWORD PTR [edi-0x1541b5b8]
  41ceb4:	pop    edi
  41ceb5:	cli    
  41ceb6:	sub    ch,bh
  41ceb8:	sub    cl,BYTE PTR [ebp-0x4c211305]
  41cebe:	data16 loop 0x41cea9
  41cec1:	cmp    esp,edx
  41cec3:	ss pop edx
  41cec5:	xor    ebx,DWORD PTR [eax-0x13]
  41cec8:	add    eax,DWORD PTR [ecx]
  41ceca:	xor    esi,ebx
  41cecc:	mov    eax,DWORD PTR [eax+0x62f2dc24]
  41ced2:	sahf   
  41ced3:	fs in  al,0x92
  41ced6:	js     0x41cf0e
  41ced8:	test   DWORD PTR [edx-0x11],ebx
  41cedb:	retf   
  41cedc:	cmp    bl,BYTE PTR [ebp-0x55e14b8c]
  41cee2:	leave  
  41cee3:	sti    
  41cee4:	mov    bh,0x94
  41cee6:	add    edx,ebp
  41cee8:	jo     0x41cefc
  41ceea:	aaa    
  41ceeb:	fdivr  QWORD PTR [esi]
  41ceed:	cli    
  41ceee:	stc    
  41ceef:	les    esp,FWORD PTR ds:0xde4d019e
  41cef5:	loopne 0x41cf19
  41cef7:	das    
  41cef8:	ret    
  41cef9:	fimul  DWORD PTR [eax]
  41cefb:	in     al,dx
  41cefc:	iret   
  41cefd:	cli    
  41cefe:	inc    ecx
  41ceff:	fdivr  QWORD PTR [edi+eiz*4-0x13b038ce]
  41cf06:	xchg   esi,eax
  41cf07:	push   ds
  41cf08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf09:	pop    ds
  41cf0a:	dec    edx
  41cf0b:	cmp    eax,0x9a88d39a
  41cf10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf11:	dec    ebx
  41cf12:	add    edx,edx
  41cf14:	jle    0x41cf4b
  41cf16:	dec    edi
  41cf17:	fxch   st(7)
  41cf19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf1a:	inc    ebp
  41cf1b:	inc    esp
  41cf1c:	popf   
  41cf1d:	int3   
  41cf1e:	jle    0x41cf9c
  41cf20:	in     al,0x59
  41cf22:	add    DWORD PTR [edi+0x7b4caffb],edx
  41cf28:	sub    bl,ah
  41cf2a:	in     al,0xd4
  41cf2c:	(bad)  
  41cf2d:	jmp    0x262f9a02
  41cf32:	lea    esi,[edi]
  41cf34:	(bad)  
  41cf35:	aaa    
  41cf36:	fidiv  DWORD PTR [ebp+0x11938b08]
  41cf3c:	jbe    0x41cfa1
  41cf3e:	pop    eax
  41cf3f:	or     BYTE PTR [edx],ah
  41cf41:	add    ebp,DWORD PTR [esi+0x71aabec8]
  41cf47:	stos   DWORD PTR es:[edi],eax
  41cf48:	nop
  41cf49:	cdq    
  41cf4a:	js     0x41cf59
  41cf4c:	je     0x41cf39
  41cf4e:	xchg   esp,eax
  41cf4f:	pop    ecx
  41cf50:	push   edi
  41cf51:	fstp   QWORD PTR [esp+edx*8]
  41cf54:	pop    esp
  41cf55:	add    cl,BYTE PTR [esi+0x40aaab0f]
  41cf5b:	and    ebp,DWORD PTR [edi]
  41cf5d:	push   ss
  41cf5e:	mov    esp,0xd5ec1168
  41cf63:	ss out 0xbb,eax
  41cf66:	inc    eax
  41cf67:	jae    0x41cf3d
  41cf69:	xor    ch,BYTE PTR [ebp+0x2f]
  41cf6c:	xchg   ebx,eax
  41cf6d:	adc    eax,0x732b411
  41cf72:	mov    ecx,0xbb5f8697
  41cf77:	xor    BYTE PTR [esi-0x11ada07e],bl
  41cf7d:	sub    DWORD PTR [edx-0x76],esp
  41cf80:	in     eax,0xf4
  41cf82:	xchg   BYTE PTR [ecx-0x2e],bh
  41cf85:	inc    eax
  41cf86:	pushf  
  41cf87:	mov    dh,0xe5
  41cf89:	popf   
  41cf8a:	out    dx,al
  41cf8b:	fistp  QWORD PTR [edx]
  41cf8d:	(bad)  
  41cf8e:	call   0xfd8d:0xd9e0ebed
  41cf95:	jno    0x41cffb
  41cf97:	retf   
  41cf98:	stos   BYTE PTR es:[edi],al
  41cf99:	ret    
  41cf9a:	arpl   ax,si
  41cf9c:	sbb    al,0x70
  41cf9e:	test   DWORD PTR [eax],edx
  41cfa0:	out    dx,eax
  41cfa1:	lods   al,BYTE PTR ds:[esi]
  41cfa2:	in     eax,dx
  41cfa3:	std    
  41cfa4:	and    al,0xcc
  41cfa6:	mov    ss,WORD PTR [edi-0x39]
  41cfa9:	pop    ecx
  41cfaa:	and    ch,BYTE PTR [eax+0x74]
  41cfad:	add    BYTE PTR [eax],al
  41cfaf:	add    BYTE PTR [eax],al
  41cfb1:	add    BYTE PTR [ebx-0x37],bh
  41cfb4:	xor    bh,0xb2
  41cfb7:	(bad)  
  41cfb8:	jg     0x41cf87
  41cfba:	sbb    DWORD PTR [esp+esi*1-0x5b],0x2b463530
  41cfc2:	inc    ecx
  41cfc3:	dec    ebx
  41cfc4:	add    DWORD PTR [eax],eax
  41cfc6:	repz add al,0x0
  41cfc9:	add    bl,ch
  41cfcb:	loop   0x41cf61
  41cfcd:	and    DWORD PTR [edx+0x2111766a],0xffffffa1
  41cfd4:	ins    DWORD PTR es:[edi],dx
  41cfd5:	cmp    DWORD PTR [edi],ebp
  41cfd7:	test   al,0xca
  41cfd9:	mov    al,ds:0x5be530f6
  41cfde:	outs   dx,BYTE PTR ds:[esi]
  41cfdf:	shr    BYTE PTR [eax],1
  41cfe1:	pushf  
  41cfe2:	xchg   edx,eax
  41cfe3:	mov    ebx,0xad656c0b
  41cfe8:	sub    DWORD PTR [ebx-0x3fe93ae5],ebx
  41cfee:	data16 adc ah,BYTE PTR [ebx+0x2d446a04]
  41cff5:	pop    ebx
  41cff6:	(bad)  
  41cff7:	call   0xee072f7a
  41cffc:	mov    ss,edx
  41cffe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfff:	xor    eax,0xf7cc133a
  41d004:	sub    bh,bh
  41d006:	xor    al,0xf
  41d008:	mul    BYTE PTR [esi+0x42]
  41d00b:	jge    0x41d077
  41d00d:	push   es
  41d00e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d00f:	inc    esp
  41d010:	or     ecx,ecx
  41d012:	and    eax,0x43b70e55
  41d017:	xchg   BYTE PTR [ecx-0x5949fe65],ch
  41d01d:	bound  ebp,QWORD PTR [ebx]
  41d01f:	popa   
  41d020:	mov    ch,0xfa
  41d022:	aad    0x98
  41d024:	imul   edi,DWORD PTR [ecx],0xe775cb26
  41d02a:	adc    DWORD PTR [ebx+0x2b],0xffffffe9
  41d02e:	add    BYTE PTR [edi+ecx*2],bh
  41d031:	adc    eax,0x307848d9
  41d036:	pushf  
  41d037:	into   
  41d038:	imul   DWORD PTR [ecx+0x37]
  41d03b:	mov    edi,0x784da147
  41d040:	daa    
  41d041:	rcr    BYTE PTR [edi+0x79],0xd8
  41d045:	xchg   esi,eax
  41d046:	test   al,0xa9
  41d048:	int    0x2e
  41d04a:	push   0xffffffff
  41d04c:	fild   QWORD PTR [eax+ecx*4+0x2b]
  41d050:	dec    edx
  41d051:	scas   eax,DWORD PTR es:[edi]
  41d052:	leave  
  41d053:	mov    esp,DWORD PTR es:[eax-0x10dbe829]
  41d05a:	dec    esp
  41d05b:	adc    eax,0xfc4f5252
  41d060:	bound  esi,QWORD PTR [eax-0x39af746e]
  41d066:	cmp    dh,al
  41d068:	ins    DWORD PTR es:[edi],dx
  41d069:	daa    
  41d06a:	cmp    DWORD PTR [ebp-0x1e65dd05],0xfffffff1
  41d071:	xchg   edx,eax
  41d072:	fs retf 0x8fb6
  41d076:	xor    DWORD PTR [edi+0x59],ebp
  41d079:	and    eax,edi
  41d07b:	push   ds
  41d07c:	adc    BYTE PTR [edx+0x3b],ah
  41d07f:	mov    ah,0x92
  41d081:	pop    ds
  41d082:	push   ebp
  41d084:	adc    al,0xfc
  41d086:	and    BYTE PTR [ebx+eax*8-0x74],ch
  41d08a:	xchg   BYTE PTR [edx-0x3c],dl
  41d08d:	xor    eax,0xdb55294a
  41d092:	xor    ah,BYTE PTR [esi]
  41d094:	in     eax,dx
  41d095:	int3   
  41d096:	(bad)  
  41d097:	leave  
  41d098:	arpl   WORD PTR [ebx-0x41],dx
  41d09b:	or     eax,0xf92fd273
  41d0a0:	fcmovbe st,st(4)
  41d0a2:	int3   
  41d0a3:	int3   
  41d0a4:	pop    es
  41d0a5:	push   edx
  41d0a6:	sbb    bh,dl
  41d0a8:	add    al,0xb1
  41d0aa:	mov    ds,WORD PTR [edi+0x255cde78]
  41d0b0:	mov    eax,ds:0xa328d94f
  41d0b5:	push   ss
  41d0b6:	(bad)  
  41d0b7:	out    0xa6,eax
  41d0b9:	jg     0x41d10a
  41d0bb:	jl     0x41d0af
  41d0bd:	hlt    
  41d0be:	iret   
  41d0bf:	nop
  41d0c0:	push   esp
  41d0c1:	fs dec edi
  41d0c3:	ins    DWORD PTR es:[edi],dx
  41d0c4:	cmp    eax,0xaeee1a57
  41d0c9:	icebp  
  41d0ca:	inc    eax
  41d0cb:	outs   dx,BYTE PTR ds:[esi]
  41d0cc:	icebp  
  41d0cd:	shr    ebp,cl
  41d0cf:	gs aad 0xeb
  41d0d2:	popf   
  41d0d3:	leave  
  41d0d4:	popf   
  41d0d5:	popa   
  41d0d6:	sbb    eax,0x318822ae
  41d0db:	leave  
  41d0dc:	rol    dl,0xc4
  41d0df:	push   gs
  41d0e1:	test   DWORD PTR [edi+0x3a56053b],esi
  41d0e7:	repnz cmp DWORD PTR [ebx],edi
  41d0ea:	add    BYTE PTR [esi],ch
  41d0ec:	or     bh,BYTE PTR [ebp+0x52783d7a]
  41d0f2:	jmp    0x9f69:0xe9d765e0
  41d0f9:	and    al,0xdf
  41d0fb:	js     0x41d0e4
  41d0fd:	stc    
  41d0fe:	ja     0x41d0e1
  41d100:	mov    edi,0x333a4232
  41d105:	jp     0x41d0fd
  41d107:	cmp    BYTE PTR [ebp+0x6f0704c3],bl
  41d10d:	adc    eax,DWORD PTR [edx]
  41d10f:	pop    edx
  41d110:	loope  0x41d127
  41d112:	add    edx,DWORD PTR [ebx+0x76add11d]
  41d118:	jns    0x41d10a
  41d11a:	mov    WORD PTR [eax-0x340a342a],fs
  41d120:	jns    0x41d0fe
  41d122:	sbb    ecx,DWORD PTR [eax+0x2d9e1f48]
  41d128:	fucompp 
  41d12a:	test   al,0x0
  41d12c:	pusha  
  41d12d:	mov    esp,0x63447be7
  41d132:	jmp    0x41d12f
  41d134:	outs   dx,DWORD PTR ds:[esi]
  41d135:	out    0x53,al
  41d137:	cdq    
  41d138:	pop    es
  41d139:	xor    dl,BYTE PTR [eax-0x1591ae03]
  41d13f:	fistp  WORD PTR [edi-0x6235e7e7]
  41d145:	jmp    0x3c47b084
  41d14a:	jle    0x41d136
  41d14c:	lea    esp,[edi+ebp*2]
  41d14f:	adc    DWORD PTR [edx-0x66],esi
  41d152:	dec    esp
  41d153:	retf   0x2031
  41d156:	pushf  
  41d157:	ja     0x41d181
  41d159:	and    ah,dl
  41d15b:	hlt    
  41d15c:	(bad)  
  41d15d:	dec    edi
  41d15e:	jmp    0x68c421f4
  41d163:	cld    
  41d164:	mov    BYTE PTR [edx-0x266a4e1c],0xa8
  41d16b:	mov    edx,0xd3ce0ef
  41d170:	lock push eax
  41d172:	test   BYTE PTR [edi-0x5644493a],ah
  41d178:	xchg   ebx,eax
  41d179:	aaa    
  41d17a:	jae    0x41d170
  41d17c:	add    ecx,DWORD PTR [eax]
  41d17e:	mov    dl,0xaa
  41d180:	push   esp
  41d181:	retf   
  41d182:	and    BYTE PTR [edx-0x2a37874],cl
  41d188:	gs add dh,al
  41d18b:	mov    WORD PTR [edx],ss
  41d18d:	and    eax,0xfcd4f9ec
  41d192:	or     ch,BYTE PTR [edx-0x7fa05aa2]
  41d198:	mov    eax,0x755107c3
  41d19d:	mov    cl,0x3d
  41d19f:	test   eax,0xef0d7b2a
  41d1a4:	sub    DWORD PTR [ecx],edi
  41d1a6:	push   es
  41d1a7:	outs   dx,DWORD PTR ds:[esi]
  41d1a8:	push   ds
  41d1a9:	and    bh,bh
  41d1ab:	cmp    ebp,DWORD PTR [ebx+ecx*8]
  41d1ae:	dec    esi
  41d1af:	fidivr DWORD PTR [ebp+0x81c8bd4]
  41d1b5:	retf   
  41d1b6:	mov    bh,0x7b
  41d1b8:	cdq    
  41d1b9:	mov    bh,0xf9
  41d1bb:	mov    dl,0x8c
  41d1bd:	mov    bl,0x2e
  41d1bf:	push   ecx
  41d1c0:	or     BYTE PTR [edx+0x1e7f5c70],al
  41d1c6:	das    
  41d1c7:	sbb    al,0xac
  41d1c9:	and    al,0xc4
  41d1cb:	popf   
  41d1cc:	or     eax,0xb28c5c77
  41d1d1:	mov    DWORD PTR [ebx],edx
  41d1d3:	cld    
  41d1d4:	sbb    ebp,DWORD PTR [edi]
  41d1d6:	lea    esi,[eax-0x6d79c720]
  41d1dc:	in     eax,0xcc
  41d1de:	pop    eax
  41d1df:	mov    eax,0x700b9fc0
  41d1e4:	std    
  41d1e5:	and    al,0xba
  41d1e7:	lahf   
  41d1e8:	retf   
  41d1e9:	(bad)  
  41d1ea:	in     al,dx
  41d1eb:	and    ch,BYTE PTR [ebx]
  41d1ed:	jp     0x41d261
  41d1ef:	stos   DWORD PTR es:[edi],eax
  41d1f0:	test   al,0x3f
  41d1f2:	aad    0xbd
  41d1f4:	xor    ch,ch
  41d1f6:	and    eax,0x35cbe73e
  41d1fb:	inc    esp
  41d1fc:	jmp    0x41d1cf
  41d1fe:	sbb    edx,esi
  41d200:	iret   
  41d201:	adc    cl,BYTE PTR [eax]
  41d203:	and    al,0xe3
  41d205:	les    ebx,FWORD PTR [edx]
  41d207:	sub    al,0x6d
  41d209:	mov    eax,ds:0xa6390bc6
  41d20e:	mov    ecx,0x3fa6c415
  41d213:	leave  
  41d214:	pop    ebx
  41d215:	cmp    cl,bl
  41d217:	pop    ds
  41d218:	jmp    0xef183070
  41d21d:	mov    eax,ds:0xf0045d99
  41d222:	inc    esp
  41d223:	loope  0x41d22b
  41d225:	pop    ebp
  41d226:	sub    al,0x72
  41d228:	and    DWORD PTR [eax],ecx
  41d22a:	retf   0x6f02
  41d22d:	pop    ds
  41d22e:	ds repz mov dh,0xc9
  41d232:	push   cs
  41d233:	jno    0x41d208
  41d235:	js     0x41d28d
  41d237:	in     al,0xf7
  41d239:	in     al,dx
  41d23a:	dec    ecx
  41d23b:	xor    al,0x5e
  41d23d:	std    
  41d23e:	int    0x38
  41d240:	mov    dh,0x4f
  41d242:	ret    0x2204
  41d245:	arpl   cx,si
  41d247:	jbe    0x41d2a4
  41d249:	daa    
  41d24a:	fiadd  WORD PTR [esp+ebx*1+0x533e7086]
  41d251:	pop    ecx
  41d252:	or     DWORD PTR [edx+0x59beb5e3],0xf
  41d259:	sbb    al,0xae
  41d25b:	cmp    eax,0x26ad6cb6
  41d260:	test   eax,0x68d429f6
  41d265:	push   ebx
  41d266:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d267:	cmp    eax,0x31379579
  41d26c:	add    BYTE PTR [eax+0x17],ch
  41d26f:	not    DWORD PTR [ebp+0x43]
  41d272:	pop    ebp
  41d273:	mov    eax,ds:0x89875e4a
  41d278:	fucomip st,st(6)
  41d27a:	dec    eax
  41d27b:	add    dl,BYTE PTR [esp+eax*4+0x3b]
  41d27f:	loope  0x41d20f
  41d281:	into   
  41d282:	mov    esi,0x26f8f432
  41d287:	push   0xffffff85
  41d289:	or     eax,0x91952c67
  41d28e:	cmp    BYTE PTR [ebp+0x32202d13],cl
  41d294:	and    al,0x12
  41d296:	sar    al,1
  41d298:	mov    esp,esi
  41d29a:	mov    ecx,DWORD PTR [eax+0x46]
  41d29d:	dec    eax
  41d29e:	fucomi st,st(0)
  41d2a0:	jle    0x41d284
  41d2a2:	jp     0x41d2dd
  41d2a4:	cmp    dl,BYTE PTR [ebx]
  41d2a6:	mov    cl,0xbe
  41d2a8:	shr    dl,0x17
  41d2ab:	call   0x55f7f742
  41d2b0:	pusha  
  41d2b1:	hlt    
  41d2b2:	(bad)  
  41d2b4:	popf   
  41d2b5:	in     eax,dx
  41d2b6:	in     eax,0xd1
  41d2b8:	or     eax,0xb4a5cb89
  41d2bd:	jbe    0x41d2db
  41d2bf:	push   eax
  41d2c0:	dec    eax
  41d2c1:	repnz inc ebx
  41d2c3:	pop    ebp
  41d2c4:	add    eax,0x9130b18d
  41d2c9:	pop    esi
  41d2ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2cb:	mov    bh,0x13
  41d2cd:	mov    esi,ecx
  41d2cf:	cmp    eax,0x76adab99
  41d2d4:	mov    ebx,0xfd80b511
  41d2d9:	ret    0xb54c
  41d2dc:	outs   dx,DWORD PTR ds:[esi]
  41d2dd:	xor    al,0x4a
  41d2df:	xchg   ebx,eax
  41d2e0:	mov    dl,0x8a
  41d2e2:	xor    al,0x2f
  41d2e4:	jns    0x41d2c2
  41d2e6:	pushf  
  41d2e7:	cs jecxz 0x41d339
  41d2ea:	mov    ebx,0xf66b01c6
  41d2ef:	imul   edi,DWORD PTR [eax+0x360897bb],0x1f
  41d2f6:	mov    al,ds:0x89a2240d
  41d2fb:	sbb    al,0x1c
  41d2fd:	push   si
  41d2ff:	and    DWORD PTR [ecx],edi
  41d301:	fwait
  41d302:	scas   eax,DWORD PTR es:[edi]
  41d303:	sbb    edx,eax
  41d305:	sar    DWORD PTR [ebx],0x5b
  41d308:	xor    al,0x67
  41d30a:	push   eax
  41d30b:	inc    ebp
  41d30c:	xchg   edx,eax
  41d30d:	in     eax,0x95
  41d30f:	pushf  
  41d310:	mov    ds:0x46493218,eax
  41d315:	xchg   ecx,eax
  41d316:	mov    ebp,0x627ab602
  41d31b:	jmp    0x41d323
  41d31d:	fistp  WORD PTR [ebp+0x72009233]
  41d323:	retf   
  41d324:	lods   al,BYTE PTR ds:[esi]
  41d325:	mov    bl,0x4f
  41d327:	out    0xf0,al
  41d329:	les    esp,FWORD PTR [ebx+ebx*1]
  41d32c:	loop   0x41d342
  41d32e:	rcr    edx,cl
  41d330:	cmp    al,0x43
  41d332:	sbb    eax,0x541642ea
  41d337:	push   ecx
  41d338:	out    0xc,al
  41d33a:	mov    esp,0x7ea21876
  41d33f:	repnz jmp 0x401a:0xa708bad4
  41d347:	test   eax,0x579bc707
  41d34c:	in     al,dx
  41d34d:	cdq    
  41d34e:	cmp    eax,0xb51fae08
  41d353:	stc    
  41d354:	xchg   esp,eax
  41d355:	mov    es,WORD PTR [ecx]
  41d357:	js     0x41d38f
  41d359:	ror    ecx,0x45
  41d35c:	and    cl,bh
  41d35e:	pop    ebp
  41d35f:	pop    esi
  41d360:	sbb    DWORD PTR [esi-0x6f89c58],edx
  41d366:	iret   
  41d367:	nop
  41d368:	int3   
  41d369:	sbb    bl,bl
  41d36b:	pop    ebx
  41d36c:	loop   0x41d323
  41d36e:	lods   al,BYTE PTR ds:[esi]
  41d36f:	sbb    ch,BYTE PTR fs:[ecx]
  41d372:	ds mov al,0xe0
  41d375:	or     dl,BYTE PTR [ebp-0x78]
  41d378:	mov    esi,0x91681bf9
  41d37d:	pop    esi
  41d37e:	loope  0x41d346
  41d380:	imul   cl
  41d382:	dec    eax
  41d383:	cs (bad) 
  41d385:	mov    al,ds:0x9800e63
  41d38a:	test   eax,0x7e1598c0
  41d38f:	xor    eax,0x388ce48f
  41d394:	out    0x66,eax
  41d396:	push   ss
  41d397:	mov    ebp,0x90b44e15
  41d39c:	ins    BYTE PTR es:[edi],dx
  41d39d:	cdq    
  41d39e:	outs   dx,DWORD PTR ds:[esi]
  41d39f:	mov    edx,0x4d080ca1
  41d3a4:	or     al,BYTE PTR [esi+ebp*1]
  41d3a7:	es pmullw xmm2,xmm7
  41d3ac:	pop    eax
  41d3ad:	sbb    al,ch
  41d3af:	cmp    ebx,ebx
  41d3b1:	xor    DWORD PTR [ecx+0x1ad55225],eax
  41d3b7:	loopne 0x41d3ac
  41d3b9:	jns    0x41d386
  41d3bb:	push   edi
  41d3bc:	mov    esi,0x95bbb8ea
  41d3c1:	and    al,0x51
  41d3c3:	mov    ah,0xfe
  41d3c5:	pop    edi
  41d3c6:	xor    DWORD PTR [ecx-0x2127b886],ebx
  41d3cc:	leave  
  41d3cd:	data16 (bad) 
  41d3cf:	push   0xffffffe5
  41d3d1:	lds    ebx,FWORD PTR [ebx-0x777d7c31]
  41d3d7:	clc    
  41d3d8:	cmp    eax,0x8a1ff466
  41d3dd:	mov    ch,0x27
  41d3df:	sub    esi,DWORD PTR [eax-0x947064f]
  41d3e5:	inc    esp
  41d3e6:	and    esi,0xfba19254
  41d3ec:	jg     0x41d3c6
  41d3ee:	pop    ds
  41d3ef:	ja     0x41d3b3
  41d3f1:	in     eax,dx
  41d3f2:	out    dx,al
  41d3f3:	fldcw  WORD PTR [ebx-0x32113e57]
  41d3f9:	sub    eax,DWORD PTR [eax]
  41d3fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3fc:	je     0x41d42a
  41d3fe:	mov    ds:0x4555f4c0,al
  41d403:	aad    0x7f
  41d405:	lock bound eax,QWORD PTR [ebx+0x3e]
  41d409:	mov    BYTE PTR [ebx+edx*2-0x16],al
  41d40d:	cld    
  41d40e:	inc    eax
  41d40f:	mov    ebp,0xd2c7c89b
  41d414:	rol    DWORD PTR [edi],cl
  41d416:	mov    bh,0xde
  41d418:	or     DWORD PTR ds:0xc624d3e5,edi
  41d41e:	pop    edx
  41d41f:	inc    eax
  41d420:	dec    eax
  41d421:	es in  eax,0x5d
  41d424:	or     edi,DWORD PTR [esi-0x7b0f780a]
  41d42a:	(bad)  
  41d42b:	jno    0x41d479
  41d42d:	xlat   BYTE PTR ds:[ebx]
  41d42e:	aam    0x7e
  41d430:	add    DWORD PTR [edi-0x388c30ef],esp
  41d436:	push   ebp
  41d437:	cld    
  41d438:	push   esi
  41d439:	and    al,0xb6
  41d43b:	outs   dx,BYTE PTR ds:[esi]
  41d43c:	jp     0x41d459
  41d43e:	xor    cl,BYTE PTR [eax-0x63108465]
  41d444:	fstp   QWORD PTR [esi]
  41d446:	inc    edx
  41d447:	add    ecx,DWORD PTR ds:0x965069a0
  41d44d:	pop    eax
  41d44e:	mov    ecx,0xf6f5148
  41d453:	push   eax
  41d454:	cmp    al,0x49
  41d456:	cli    
  41d457:	and    DWORD PTR [ecx],ebp
  41d459:	mov    ebp,0xc133be4c
  41d45e:	sub    dl,bh
  41d460:	scas   eax,DWORD PTR es:[edi]
  41d461:	daa    
  41d462:	clc    
  41d463:	jne    0x41d43b
  41d465:	mov    ?,esp
  41d467:	jo     0x41d414
  41d469:	in     al,dx
  41d46a:	sahf   
  41d46b:	sar    DWORD PTR [edx-0x1e],0x73
  41d46f:	jmp    0xd64d:0xcb951dd
  41d476:	and    eax,esi
  41d478:	fcom   DWORD PTR [esi+0x3ae58e49]
  41d47e:	and    dl,BYTE PTR [edx+0x31]
  41d481:	sbb    al,0xc5
  41d483:	fwait
  41d484:	adc    eax,0x2c3dbaa6
  41d489:	xor    eax,0x2bce0c46
  41d48e:	popa   
  41d48f:	jne    0x41d4ce
  41d491:	xor    BYTE PTR [eax+eiz*4+0xf],al
  41d495:	lea    eax,[ebx+0x33]
  41d498:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d499:	(bad)  
  41d49a:	fcom   QWORD PTR [ebx+0x6e]
  41d49d:	std    
  41d49e:	add    ecx,DWORD PTR [edi+0x3c]
  41d4a1:	loopne 0x41d4a2
  41d4a3:	aad    0x40
  41d4a5:	sbb    BYTE PTR [eax-0x54],0xc3
  41d4a9:	int    0x47
  41d4ab:	jmp    0x1fdc78a6
  41d4b0:	add    al,0x56
  41d4b2:	dec    esp
  41d4b3:	in     eax,dx
  41d4b4:	stos   DWORD PTR es:[edi],eax
  41d4b5:	dec    ebx
  41d4b6:	leave  
  41d4b7:	mov    ch,0x4b
  41d4b9:	neg    BYTE PTR [ecx+ebx*1+0xa8]
  41d4c0:	add    BYTE PTR [eax],al
  41d4c2:	loop   0x41d4ce
  41d4c4:	add    DWORD PTR [ecx+0x7bf29be9],edx
  41d4ca:	mov    ebp,0x1f5ff411
  41d4cf:	jmp    0x41d54d
  41d4d1:	imul   esi,DWORD PTR [eax+edx*2],0x1
  41d4d5:	add    bl,dh
  41d4d7:	add    al,0x0
  41d4d9:	add    BYTE PTR [edi+0x3a],ah
  41d4dc:	popf   
  41d4dd:	push   0xffffff85
  41d4df:	dec    ebx
  41d4e0:	loope  0x41d4ad
  41d4e2:	ins    DWORD PTR es:[edi],dx
  41d4e3:	int    0x3f
  41d4e5:	sub    DWORD PTR [ebp-0x3],edi
  41d4e8:	mov    bl,0xa7
  41d4ea:	dec    edi
  41d4eb:	mov    edx,0x7fedab03
  41d4f0:	mov    eax,ds:0x183cea4e
  41d4f5:	cmp    eax,0xd395e44a
  41d4fa:	adc    esp,edi
  41d4fc:	je     0x41d526
  41d4fe:	jle    0x41d4ba
  41d500:	nop
  41d501:	cld    
  41d502:	mov    ds:0xa1cef987,eax
  41d507:	sbb    BYTE PTR [ebx-0x1fbeb066],al
  41d50d:	aaa    
  41d50e:	xchg   BYTE PTR [ecx],bl
  41d510:	xlat   BYTE PTR ds:[ebx]
  41d511:	(bad)  
  41d512:	in     eax,dx
  41d513:	jne    0x41d4e1
  41d515:	shl    BYTE PTR [eax],cl
  41d517:	adc    BYTE PTR [esi],0xac
  41d51a:	adc    al,0x61
  41d51c:	mov    eax,ds:0x53e034ad
  41d521:	cmp    BYTE PTR [ebx-0x29bfb67e],al
  41d527:	push   ds
  41d528:	inc    ebx
  41d529:	fst    QWORD PTR [ebx+0x37]
  41d52c:	shl    BYTE PTR [esi-0x7571144f],1
  41d532:	jle    0x41d4fb
  41d534:	xor    dl,dh
  41d536:	pop    ebx
  41d537:	sub    ch,ch
  41d539:	mov    BYTE PTR [ebx],al
  41d53b:	add    eax,esp
  41d53d:	add    DWORD PTR [ebp+0x6493c5fd],edi
  41d543:	mov    BYTE PTR [eax+0x48],cl
  41d546:	call   0x90c1:0xac57ebd1
  41d54d:	mov    cl,BYTE PTR [eax]
  41d54f:	mov    ecx,fs
  41d551:	out    0x55,al
  41d553:	adc    eax,esi
  41d555:	mov    ecx,DWORD PTR [ebp-0x50a8b4a8]
  41d55b:	jae    0x41d598
  41d55d:	jb     0x41d53c
  41d55f:	sub    ebx,edi
  41d561:	call   DWORD PTR [edi-0x4701e63d]
  41d567:	test   esi,ecx
  41d569:	sub    bl,BYTE PTR [esi-0x7555bf07]
  41d56f:	ds add dh,0xa8
  41d573:	repnz fisttp QWORD PTR [edx+0x67]
  41d577:	(bad)  
  41d578:	imul   eax,DWORD PTR [eax-0x1b08851b],0x24
  41d57f:	and    eax,0x253ca477
  41d584:	and    BYTE PTR [esi-0x2ead845d],0x2a
  41d58b:	xchg   DWORD PTR [edx-0x69],esi
  41d58e:	pop    eax
  41d58f:	add    ebp,DWORD PTR [edi-0x52c95641]
  41d595:	adc    DWORD PTR [ebx+0x23699e5e],esp
  41d59b:	sub    edx,edi
  41d59d:	arpl   WORD PTR [esi-0x39],dx
  41d5a0:	jns    0x41d5d6
  41d5a2:	push   ss
  41d5a3:	loop   0x41d58b
  41d5a5:	xchg   ebx,eax
  41d5a6:	rcl    DWORD PTR [esi],1
  41d5a8:	cld    
  41d5a9:	loope  0x41d587
  41d5ab:	inc    BYTE PTR [ecx+0x1e]
  41d5ae:	pop    edx
  41d5af:	sbb    DWORD PTR [eax],esi
  41d5b1:	dec    ebx
  41d5b2:	outs   dx,DWORD PTR ds:[esi]
  41d5b3:	shr    BYTE PTR [eax+edx*1+0x70],cl
  41d5b7:	jl     0x41d630
  41d5b9:	(bad)  
  41d5ba:	cmp    edi,DWORD PTR [ebx+0x1aaeb90c]
  41d5c0:	mov    bl,0x13
  41d5c2:	(bad)  
  41d5c3:	std    
  41d5c4:	sbb    bl,ah
  41d5c6:	adc    BYTE PTR [esi+ecx*1],ch
  41d5c9:	push   esi
  41d5ca:	(bad)  
  41d5cb:	aad    0x71
  41d5cd:	sub    BYTE PTR ds:[esi+0x7],dh
  41d5d1:	sti    
  41d5d2:	dec    eax
  41d5d3:	jae    0x41d5cd
  41d5d5:	or     eax,0xa04e9ac2
  41d5da:	xor    DWORD PTR [edx],edi
  41d5dc:	aam    0xca
  41d5de:	(bad)
  41d5e2:	adc    bh,al
  41d5e4:	xchg   esp,eax
  41d5e5:	jl     0x41d577
  41d5e7:	and    eax,DWORD PTR [ebp-0xb]
  41d5ea:	loopne 0x41d5c5
  41d5ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5ed:	js     0x41d659
  41d5ef:	jae    0x41d58f
  41d5f1:	jnp    0x41d653
  41d5f3:	add    ah,BYTE PTR [edi-0x7ff419e5]
  41d5f9:	push   ds
  41d5fa:	scas   al,BYTE PTR es:[edi]
  41d5fb:	iret   
  41d5fc:	or     ebx,DWORD PTR [edi+ebx*1-0x7e485f59]
  41d603:	popf   
  41d604:	mov    bh,0xc5
  41d606:	push   edx
  41d607:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d608:	arpl   WORD PTR [ecx-0x2e],bx
  41d60b:	inc    edi
  41d60c:	dec    esp
  41d60d:	push   edx
  41d60e:	test   eax,0x6cd7784a
  41d613:	push   es
  41d614:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d615:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d616:	mov    ah,0x9b
  41d618:	or     al,0x32
  41d61a:	stos   BYTE PTR es:[edi],al
  41d61b:	fisubr WORD PTR [ebp+0x4da7a04f]
  41d621:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d622:	(bad)  
  41d624:	inc    ebp
  41d625:	pop    ebx
  41d626:	push   esi
  41d627:	mov    DWORD PTR [esi],edx
  41d629:	and    al,0x95
  41d62b:	popa   
  41d62c:	pop    ds
  41d62d:	scas   eax,DWORD PTR es:[edi]
  41d62e:	jmp    0x84:0x36e28d87
  41d635:	dec    esi
  41d636:	sub    dl,BYTE PTR [edx-0x509c2117]
  41d63c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d63d:	(bad)  
  41d63e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d63f:	outs   dx,DWORD PTR ds:[esi]
  41d640:	or     edi,0xc599f879
  41d646:	push   ds
  41d647:	neg    BYTE PTR ds:0xd1eefa00
  41d64d:	inc    eax
  41d64e:	fldcw  WORD PTR [ebx]
  41d650:	xchg   edi,eax
  41d651:	dec    eax
  41d652:	mov    eax,ds:0xb9a2da4c
  41d657:	xor    al,0x5e
  41d659:	inc    edx
  41d65a:	xor    ch,bh
  41d65c:	js     0x41d6b1
  41d65e:	mov    edi,0x1f97bfc3
  41d663:	sub    DWORD PTR [esi],edx
  41d665:	out    dx,al
  41d666:	out    dx,eax
  41d667:	(bad)  
  41d668:	dec    edi
  41d669:	push   ds
  41d66a:	xor    eax,0x525d20a
  41d66f:	mov    edi,0xe5503ce0
  41d674:	xchg   BYTE PTR [eax+0x51],ch
  41d677:	inc    esp
  41d678:	push   ecx
  41d679:	jo     0x41d620
  41d67b:	lahf   
  41d67c:	arpl   WORD PTR [ecx],di
  41d67e:	loop   0x41d62c
  41d680:	add    DWORD PTR ds:0xc4e656bf,0x67884d2a
  41d68a:	xchg   edi,eax
  41d68b:	jbe    0x41d6e6
  41d68d:	xor    edx,DWORD PTR [esi+edi*2]
  41d690:	add    eax,0xbe2b9ae7
  41d695:	fsubrp st(0),st
  41d697:	enter  0xd046,0x4a
  41d69b:	sahf   
  41d69c:	push   cs
  41d69d:	imul   esp,DWORD PTR [ebx],0x45
  41d6a0:	adc    ch,BYTE PTR [esi-0x45]
  41d6a3:	jmp    0x8380:0xe41bb93c
  41d6aa:	out    dx,al
  41d6ab:	jle    0x41d729
  41d6ad:	shl    BYTE PTR [ecx],cl
  41d6af:	add    edx,DWORD PTR [ebp-0x7b5be75e]
  41d6b5:	mov    esp,0x498507eb
  41d6ba:	icebp  
  41d6bb:	sub    dh,BYTE PTR [esp+edx*2]
  41d6be:	icebp  
  41d6bf:	mov    edx,0x87d262af
  41d6c4:	push   esp
  41d6c5:	xchg   ebp,eax
  41d6c6:	adc    DWORD PTR [ecx+0xc],eax
  41d6c9:	jae    0x41d6b1
  41d6cb:	pusha  
  41d6cc:	imul   edi,DWORD PTR [ecx+0x27],0xaef19d86
  41d6d3:	not    dh
  41d6d5:	xchg   ebx,eax
  41d6d6:	lea    eax,[edx+edx*2+0x59]
  41d6da:	and    BYTE PTR ds:0x9c0e90a4,ah
  41d6e0:	xor    BYTE PTR [ebx-0x3d],ch
  41d6e3:	and    edx,DWORD PTR [edx]
  41d6e5:	das    
  41d6e6:	popa   
  41d6e7:	mov    edx,0xe120c5f1
  41d6ec:	jmp    0x41d74c
  41d6ee:	jbe    0x41d6ba
  41d6f0:	scas   al,BYTE PTR es:[edi]
  41d6f1:	jne    0x41d739
  41d6f3:	setle  BYTE PTR [eax+eiz*8+0x5c6ccdc5]
  41d6fb:	jbe    0x41d6c9
  41d6fd:	add    ebx,ebp
  41d6ff:	xchg   edi,eax
  41d700:	fistp  QWORD PTR [eax+0x7a280a20]
  41d706:	out    dx,al
  41d707:	jb     0x41d6ea
  41d709:	lahf   
  41d70a:	in     eax,0x95
  41d70c:	stc    
  41d70d:	jp     0x41d72c
  41d70f:	mov    bl,0xf7
  41d711:	and    edi,edx
  41d713:	test   eax,0x279c064d
  41d718:	cli    
  41d719:	jbe    0x41d69e
  41d71b:	pushf  
  41d71c:	in     al,dx
  41d71d:	sar    BYTE PTR [edx+0x35],cl
  41d720:	push   0x5f
  41d722:	and    al,0x6a
  41d724:	inc    ebx
  41d725:	inc    ebp
  41d726:	repz leave 
  41d728:	mov    es,WORD PTR [esi]
  41d72a:	es in  al,dx
  41d72c:	(bad)  
  41d72d:	push   edx
  41d72e:	add    BYTE PTR [edi+edi*4-0x6],0xf6
  41d733:	and    DWORD PTR [ebx+0x33],esp
  41d736:	pop    ebx
  41d737:	in     eax,0x4c
  41d739:	cmp    BYTE PTR [ebx],0xd6
  41d73c:	mov    cl,0x30
  41d73e:	outs   dx,BYTE PTR ds:[esi]
  41d73f:	pop    ss
  41d740:	jecxz  0x41d741
  41d742:	dec    ebx
  41d743:	or     DWORD PTR [edx-0x22],edi
  41d746:	sub    DWORD PTR ds:0xea77ce99,ebp
  41d74c:	jno    0x41d6f9
  41d74e:	sub    BYTE PTR [ecx-0x33],bl
  41d751:	repz jmp 0x41d794
  41d754:	out    dx,al
  41d755:	inc    esi
  41d756:	inc    esp
  41d757:	sub    eax,0x6b87ede9
  41d75c:	lds    ebx,FWORD PTR [edi-0xe284e08]
  41d762:	cmp    ebx,eax
  41d764:	and    eax,0x9a138d6
  41d769:	stc    
  41d76a:	add    BYTE PTR [esi+0x75],0xca
  41d76e:	jl     0x41d7ba
  41d770:	sub    esp,edi
  41d772:	mov    ds,WORD PTR [edx+0x62571e9c]
  41d778:	retf   0x1fd5
  41d77b:	pop    esi
  41d77c:	jae    0x41d7a6
  41d77e:	test   BYTE PTR [edi+eax*4],cl
  41d781:	outs   dx,DWORD PTR ds:[esi]
  41d782:	jg     0x41d705
  41d784:	or     al,0x89
  41d786:	jge    0x41d738
  41d788:	pop    ds
  41d789:	mov    ah,0xf2
  41d78b:	popa   
  41d78c:	xchg   ebx,eax
  41d78d:	ins    DWORD PTR es:[edi],dx
  41d78e:	in     al,dx
  41d78f:	and    eax,0x29dc4631
  41d794:	ds xchg esi,eax
  41d796:	sbb    al,0xf0
  41d798:	ss sub eax,0x9cdc20b5
  41d79e:	dec    BYTE PTR ds:0x23c9591c
  41d7a4:	(bad)  
  41d7a5:	cmp    DWORD PTR [edx+0x87943ce],edi
  41d7ab:	mov    esp,0x4791bbcc
  41d7b0:	jb     0x41d769
  41d7b2:	lods   eax,DWORD PTR ds:[esi]
  41d7b3:	push   es
  41d7b4:	shl    ebp,1
  41d7b6:	in     eax,0xb7
  41d7b8:	pop    ecx
  41d7b9:	adc    esp,DWORD PTR [eax]
  41d7bb:	jno    0x41d7b9
  41d7bd:	scas   eax,DWORD PTR es:[edi]
  41d7be:	cmp    BYTE PTR [esi+0x4a1027c2],dh
  41d7c4:	mov    esi,0xcadec8a4
  41d7c9:	sar    BYTE PTR [esp+ebx*2-0x10],1
  41d7cd:	mov    bh,0xd9
  41d7cf:	(bad)  
  41d7d0:	aas    
  41d7d1:	fdivr  st,st(7)
  41d7d3:	sub    ebx,DWORD PTR [esp+edi*8]
  41d7d6:	jge    0x41d75d
  41d7d8:	out    0xa1,al
  41d7da:	sahf   
  41d7db:	cli    
  41d7dc:	mov    ebx,0x420f3cc0
  41d7e1:	cmc    
  41d7e2:	pop    edi
  41d7e3:	push   ds
  41d7e4:	adc    ch,BYTE PTR [ebp-0x1a]
  41d7e7:	add    ch,dh
  41d7e9:	std    
  41d7ea:	mov    esp,0xa3f2ab3a
  41d7ef:	adc    eax,DWORD PTR [edi]
  41d7f1:	and    DWORD PTR [esi],esi
  41d7f3:	mov    al,0x85
  41d7f5:	mov    ds:0xc8ad0b6b,al
  41d7fa:	in     eax,dx
  41d7fb:	dec    esi
  41d7fc:	inc    edx
  41d7fd:	aad    0x6e
  41d7ff:	adc    BYTE PTR [edi-0x49956edc],cl
  41d805:	mov    bh,0x6c
  41d807:	inc    edx
  41d808:	or     al,0x11
  41d80a:	inc    esp
  41d80b:	rcr    DWORD PTR [esi+ebx*1],0x28
  41d80f:	daa    
  41d810:	sub    dl,BYTE PTR [ebp+0x5e20a56e]
  41d816:	sub    esi,DWORD PTR [esi]
  41d818:	(bad)  
  41d819:	aad    0xac
  41d81b:	fs sar dh,cl
  41d81e:	(bad)  
  41d81f:	or     al,ch
  41d821:	sbb    DWORD PTR [ebp+ebp*4+0x19],edi
  41d825:	call   0x41fe:0xec3d6e55
  41d82c:	aad    0xa1
  41d82e:	sti    
  41d82f:	lock adc DWORD PTR [edx],edx
  41d832:	and    BYTE PTR [esi-0x7f],dl
  41d835:	mov    esp,0x247232ec
  41d83a:	call   0x68a11c6f
  41d83f:	(bad)  
  41d840:	mov    ah,0x1
  41d842:	jno    0x41d893
  41d844:	nop
  41d845:	out    0x2,eax
  41d847:	add    eax,DWORD PTR [eax+0x7d]
  41d84a:	ror    DWORD PTR [esi-0x64e46788],cl
  41d850:	jmp    0x4dd32b24
  41d855:	popf   
  41d856:	jmp    0xe918:0x5fbe10fe
  41d85d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d85e:	gs popf 
  41d860:	je     0x41d86c
  41d862:	push   ds
  41d863:	mov    dl,dh
  41d865:	jmp    0xd210:0x85dc33e4
  41d86c:	ret    0x77e4
  41d86f:	test   DWORD PTR [ebp-0x2dc03925],edi
  41d875:	and    esi,DWORD PTR [ecx+0x28f8f37d]
  41d87b:	adc    edx,DWORD PTR [ecx-0x235bc5de]
  41d881:	dec    ebx
  41d882:	out    dx,eax
  41d883:	xchg   edx,eax
  41d884:	add    al,0xe7
  41d886:	xchg   edx,eax
  41d887:	(bad)  
  41d888:	dec    edx
  41d889:	fbld   TBYTE PTR [ebx]
  41d88b:	ss or  al,0xfd
  41d88e:	sub    ebp,esi
  41d890:	hlt    
  41d891:	data16 fistp WORD PTR [ecx+0x4f]
  41d895:	nop
  41d896:	jb     0x41d8b4
  41d898:	ins    DWORD PTR es:[edi],dx
  41d899:	mov    eax,ds:0x4afb6a5b
  41d89e:	inc    ebx
  41d89f:	enter  0x7dd9,0x5a
  41d8a3:	add    BYTE PTR [ebp+0x6d],cl
  41d8a6:	xchg   ecx,eax
  41d8a7:	jnp    0x41d8b2
  41d8a9:	lds    edx,FWORD PTR [eax+0x53dbbc90]
  41d8af:	xor    al,0x85
  41d8b1:	sti    
  41d8b2:	add    DWORD PTR [ebx-0x5b],esp
  41d8b5:	inc    esi
  41d8b6:	(bad)  
  41d8b7:	lods   al,BYTE PTR ds:[esi]
  41d8b8:	ror    eax,cl
  41d8ba:	xor    BYTE PTR [eax+0x27],ch
  41d8bd:	retf   0xd988
  41d8c0:	clc    
  41d8c1:	imul   ebp,DWORD PTR [ebx],0x1c
  41d8c4:	stos   DWORD PTR es:[edi],eax
  41d8c5:	int3   
  41d8c6:	and    DWORD PTR [edx+eax*1],esp
  41d8c9:	jmp    0xdba7cd6
  41d8ce:	gs ror dl,cl
  41d8d1:	and    al,0x50
  41d8d3:	in     al,dx
  41d8d4:	icebp  
  41d8d5:	hlt    
  41d8d6:	pop    ss
  41d8d7:	es cmp edx,ecx
  41d8da:	int    0x74
  41d8dc:	fs push esp
  41d8de:	jne    0x41d94d
  41d8e0:	add    eax,0xcd057c5c
  41d8e5:	push   es
  41d8e6:	in     al,dx
  41d8e7:	push   ebp
  41d8e8:	iret   
  41d8e9:	out    0x7c,eax
  41d8eb:	and    eax,0xdd70f6b6
  41d8f0:	inc    ebp
  41d8f1:	enter  0xe6e4,0x6b
  41d8f5:	xor    edi,DWORD PTR [eax+0x4f]
  41d8f8:	push   DWORD PTR [ecx-0x2c193a72]
  41d8fe:	jb     0x41d895
  41d900:	dec    ebp
  41d901:	test   BYTE PTR [ebx],bl
  41d903:	sbb    edx,DWORD PTR [esi+0x5db9614d]
  41d909:	(bad)  
  41d90a:	ins    BYTE PTR es:[edi],dx
  41d90b:	adc    BYTE PTR [ecx-0x75],ah
  41d90e:	pop    esp
  41d90f:	cld    
  41d910:	sbb    bl,BYTE PTR [edx]
  41d912:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d913:	faddp  st(4),st
  41d915:	push   ebp
  41d916:	pop    esi
  41d917:	out    0x56,al
  41d919:	pop    ss
  41d91a:	pop    ds
  41d91b:	les    ecx,FWORD PTR [edx-0xca5c706]
  41d921:	push   0x73bcd24d
  41d926:	sub    BYTE PTR [edi*8-0x6d6d7dc5],0xd
  41d92e:	mov    WORD PTR [esi+0x7cc89bd8],cs
  41d934:	add    eax,0xed7b8b53
  41d939:	div    BYTE PTR [ecx+ebp*2]
  41d93c:	sub    al,0x49
  41d93e:	aas    
  41d93f:	sbb    eax,0x28c42360
  41d944:	sbb    eax,0xa48660
  41d949:	mov    WORD PTR [edi],cs
  41d94b:	mul    edi
  41d94d:	add    eax,0x12c87edf
  41d952:	outs   dx,BYTE PTR ds:[esi]
  41d953:	mov    dl,0x9
  41d955:	jbe    0x41d9a3
  41d957:	push   cs
  41d958:	int3   
  41d959:	stos   BYTE PTR es:[edi],al
  41d95a:	cmc    
  41d95b:	into   
  41d95c:	aas    
  41d95d:	cmp    eax,0x236cbb9c
  41d962:	fisub  DWORD PTR [esi]
  41d964:	adc    eax,0x29de78fc
  41d969:	inc    esp
  41d96a:	nop
  41d96b:	jbe    0xb5ac2b88
  41d971:	mov    ds:0xbfe502bb,al
  41d976:	scas   eax,DWORD PTR es:[edi]
  41d977:	add    edi,ebx
  41d979:	imul   edx,DWORD PTR [ecx-0xe],0x95f5b643
  41d980:	or     al,0x5
  41d982:	loop   0x41d964
  41d984:	mov    ebp,0xa73cd069
  41d989:	sbb    BYTE PTR [edx-0x10],ah
  41d98c:	ja     0x41d95a
  41d98e:	cmp    ebx,0x45e7a1f1
  41d994:	ret    0x9fd3
  41d997:	shl    DWORD PTR [ecx+0x44],cl
  41d99a:	push   cs
  41d99b:	push   esi
  41d99c:	dec    edx
  41d99d:	(bad)  
  41d99e:	jecxz  0x41d92e
  41d9a0:	ins    BYTE PTR es:[edi],dx
  41d9a1:	add    eax,0x5dc7aafa
  41d9a6:	out    0xc9,eax
  41d9a8:	bound  ecx,QWORD PTR [edi-0x3869277a]
  41d9ae:	cmp    al,0x83
  41d9b0:	mov    bl,BYTE PTR [edx]
  41d9b2:	dec    ebp
  41d9b3:	jns    0x41d947
  41d9b5:	xchg   BYTE PTR [edi-0x56],dh
  41d9b8:	pop    es
  41d9b9:	push   ebp
  41d9ba:	sbb    eax,DWORD PTR [ebx-0x2f]
  41d9bd:	pop    ss
  41d9be:	mov    eax,ds:0xdd1539e8
  41d9c3:	jb     0x41da28
  41d9c5:	loop   0x41d995
  41d9c7:	fmul   DWORD PTR [ebp-0x3e26c4f5]
  41d9cd:	add    BYTE PTR [eax],al
  41d9cf:	add    BYTE PTR [eax],al
  41d9d1:	add    BYTE PTR [esi+0x5e],bl
  41d9d4:	loope  0x41da44
  41d9d6:	loope  0x41d9d7
  41d9d8:	fistp  QWORD PTR [esi-0x6e]
  41d9db:	adc    DWORD PTR [esi],0xa
  41d9de:	xchg   ecx,eax
  41d9df:	mov    DWORD PTR [eax],ecx
  41d9e1:	daa    
  41d9e2:	daa    
  41d9e3:	push   ebp
  41d9e4:	add    DWORD PTR [eax],eax
  41d9e6:	repz add al,0x0
  41d9e9:	add    BYTE PTR [ecx-0x4e],dh
  41d9ec:	outs   dx,DWORD PTR ds:[esi]
  41d9ed:	pop    es
  41d9ee:	icebp  
  41d9ef:	test   DWORD PTR [ecx+edx*1-0x66],0x745bd1b8
  41d9f7:	outs   dx,DWORD PTR ds:[esi]
  41d9f8:	js     0x41d9ff
  41d9fa:	mov    dl,0xe7
  41d9fc:	jns    0x41da06
  41d9fe:	iret   
  41d9ff:	mov    ds:0x3cf6affb,al
  41da04:	cmp    BYTE PTR [eax+edx*2],0x72
  41da08:	and    ecx,DWORD PTR [edx]
  41da0a:	ds mov ebp,0x56c35818
  41da10:	adc    ebx,ebx
  41da12:	stos   DWORD PTR es:[edi],eax
  41da13:	jo     0x41d9de
  41da15:	js     0x41da0b
  41da17:	mov    ds:0xb40a33c3,al
  41da1c:	xchg   edx,eax
  41da1d:	(bad)  
  41da1e:	and    eax,0x702ef0a
  41da23:	sbb    DWORD PTR [eax+0x2f],eax
  41da26:	dec    ecx
  41da27:	inc    ebp
  41da28:	xor    BYTE PTR [edi-0xa],dh
  41da2b:	fnstsw WORD PTR [eax+0x1]
  41da2e:	mov    es,WORD PTR [esi]
  41da30:	retf   
  41da31:	ret    0x2580
  41da34:	or     BYTE PTR [edx],0x54
  41da37:	(bad)  
  41da38:	into   
  41da39:	pushf  
  41da3a:	out    dx,eax
  41da3b:	in     eax,0x3d
  41da3d:	sub    esp,ebp
  41da3f:	add    bh,cl
  41da41:	push   esp
  41da42:	cld    
  41da43:	ja     0x41da6b
  41da45:	adc    BYTE PTR [ebx+0x58],bh
  41da48:	mov    edi,0x39ca086a
  41da4d:	addr16 mov eax,0xf167875d
  41da53:	inc    ebp
  41da54:	shr    BYTE PTR [eax-0x896f258],cl
  41da5a:	pop    ebp
  41da5b:	into   
  41da5c:	aad    0x6c
  41da5e:	jbe    0x41da95
  41da60:	cli    
  41da61:	xchg   esp,eax
  41da62:	stc    
  41da63:	sbb    ebx,DWORD PTR [edx]
  41da65:	jp     0x41da81
  41da67:	aas    
  41da68:	adc    al,0x18
  41da6a:	pop    ecx
  41da6b:	or     DWORD PTR [ebx-0x66],esi
  41da6e:	in     eax,dx
  41da6f:	call   0x9ecc:0x6ab8ff7b
  41da76:	xchg   DWORD PTR [ebx],ecx
  41da78:	jnp    0x41da5f
  41da7a:	hlt    
  41da7b:	loopne 0x41dad3
  41da7d:	cmp    BYTE PTR [edi],ch
  41da7f:	pop    edi
  41da80:	jae    0x41daa8
  41da82:	xor    dl,BYTE PTR [esi+eax*2]
  41da85:	retf   0xebc0
  41da88:	jmp    0x6792:0xda6a4d31
  41da8f:	mov    edi,DWORD PTR [ebx-0x7f502857]
  41da95:	push   eax
  41da96:	jmp    0x41db05
  41da98:	imul   edi,DWORD PTR [ecx+0x5d61cdaa],0xffffffdb
  41da9f:	lock mov ebp,0x86286e6c
  41daa5:	mov    esi,0xa05f705c
  41daaa:	mov    cl,0x63
  41daac:	xor    al,0xb8
  41daae:	sti    
  41daaf:	push   cs
  41dab0:	jmp    0xe4f1:0x85a24397
  41dab7:	jno    0x41da59
  41dab9:	cmc    
  41daba:	pop    eax
  41dabb:	xchg   esi,eax
  41dabc:	pop    ss
  41dabd:	mov    bh,0xb4
  41dabf:	mov    eax,ds:0x47c8cd37
  41dac4:	scas   eax,DWORD PTR es:[edi]
  41dac5:	mov    eax,0xc192bb17
  41daca:	add    DWORD PTR [edx-0x2b],0xfffffffe
  41dace:	loopne 0x41db0d
  41dad0:	pop    esi
  41dad1:	gs xchg ebp,eax
  41dad3:	das    
  41dad4:	test   DWORD PTR [edx+esi*4],esi
  41dad7:	push   edi
  41dad8:	sbb    al,0xf6
  41dada:	mov    bh,0x3d
  41dadc:	outs   dx,DWORD PTR ds:[esi]
  41dadd:	adc    al,0x85
  41dadf:	imul   ebp,eax,0x9a959061
  41dae5:	xor    cl,BYTE PTR [eax-0x46]
  41dae8:	aas    
  41dae9:	pop    eax
  41daea:	ss mov ch,0xbb
  41daed:	lods   al,BYTE PTR ds:[esi]
  41daee:	jmp    0x61bd:0xbc68a922
  41daf5:	es mov ebp,0xe68d50db
  41dafb:	mov    bh,BYTE PTR [esi-0x4fcbcde9]
  41db01:	sub    eax,0x9ba3e6c2
  41db06:	repz mul ah
  41db09:	cld    
  41db0a:	in     eax,dx
  41db0b:	outs   dx,DWORD PTR ds:[esi]
  41db0c:	inc    ecx
  41db0d:	in     eax,0xf0
  41db0f:	retf   0xc21c
  41db12:	icebp  
  41db13:	add    dl,ch
  41db15:	int3   
  41db16:	lods   eax,DWORD PTR ds:[esi]
  41db17:	out    dx,al
  41db18:	mov    dh,0x43
  41db1a:	jmp    0xd60c7cf2
  41db1f:	outs   dx,BYTE PTR ds:[esi]
  41db20:	pop    edx
  41db21:	bound  esi,QWORD PTR [ebx-0x29f75a7b]
  41db27:	int    0x19
  41db29:	sbb    dh,0xf4
  41db2c:	loop   0x41db69
  41db2e:	retf   
  41db2f:	pop    esi
  41db30:	mov    al,ds:0x273d9295
  41db35:	lods   al,BYTE PTR ds:[esi]
  41db36:	push   ss
  41db37:	stos   BYTE PTR es:[edi],al
  41db38:	ds xchg edx,eax
  41db3a:	cmc    
  41db3b:	mov    ecx,0x54dfeaf8
  41db40:	fwait
  41db41:	inc    edi
  41db42:	das    
  41db43:	cmc    
  41db44:	jbe    0x41dada
  41db46:	push   ecx
  41db47:	mov    eax,ds:0xe84d4505
  41db4c:	icebp  
  41db4d:	jo     0x41db34
  41db4f:	imul   edx,DWORD PTR [ecx-0x78],0xc8ac7b6f
  41db56:	(bad)  
  41db58:	add    BYTE PTR [ecx-0x7b],bl
  41db5b:	(bad)  
  41db5d:	sbb    cl,cl
  41db5f:	dec    ebx
  41db60:	add    al,0x64
  41db62:	mov    ebp,0xb4ef5975
  41db67:	lods   eax,DWORD PTR ds:[esi]
  41db68:	xchg   edi,eax
  41db69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db6a:	xlat   BYTE PTR ds:[ebx]
  41db6b:	ret    0x3fee
  41db6e:	enter  0xa7a6,0x25
  41db72:	push   edi
  41db73:	test   BYTE PTR [ecx+0x51],ah
  41db76:	push   ebp
  41db77:	sbb    eax,0xaad4ed9b
  41db7c:	adc    eax,esi
  41db7e:	add    DWORD PTR [ebp-0x14bc59ca],edi
  41db84:	in     eax,dx
  41db85:	sbb    edx,esp
  41db87:	push   ebx
  41db88:	jbe    0x41db86
  41db8a:	mov    ebx,0xea51e171
  41db8f:	dec    ebp
  41db90:	pop    esi
  41db91:	add    DWORD PTR [edx-0x337ad026],eax
  41db97:	push   esi
  41db98:	adc    al,0x2
  41db9a:	shl    BYTE PTR [ebp+0x67],1
  41db9d:	sbb    ax,0x7180
  41dba1:	mov    ebx,0xba79c56c
  41dba6:	pop    edx
  41dba7:	jmp    0x8740437b
  41dbac:	add    dl,bl
  41dbae:	lods   eax,DWORD PTR ds:[esi]
  41dbaf:	loopne 0x41dbc4
  41dbb1:	pop    ebx
  41dbb2:	(bad)  
  41dbb3:	nop
  41dbb4:	ficom  DWORD PTR [edi+eiz*2]
  41dbb7:	mov    edi,0x451458be
  41dbbc:	es aaa 
  41dbbe:	adc    al,0xc8
  41dbc0:	popf   
  41dbc1:	jp     0x41db76
  41dbc3:	outs   dx,BYTE PTR ds:[esi]
  41dbc4:	fist   DWORD PTR [edx]
  41dbc6:	lds    edi,FWORD PTR [ebp-0x782a3cbd]
  41dbcc:	sbb    al,0x87
  41dbce:	repz mov eax,ds:0xc10d6d11
  41dbd4:	cmp    DWORD PTR [ecx-0x6e124cf8],0xa1dbec88
  41dbde:	xor    al,0xa7
  41dbe0:	scas   al,BYTE PTR es:[edi]
  41dbe1:	push   esp
  41dbe2:	dec    esp
  41dbe3:	push   ss
  41dbe4:	cmp    eax,0x49fc8872
  41dbe9:	lock push 0xc9bfc197
  41dbef:	sub    ah,BYTE PTR [esi-0x31]
  41dbf2:	into   
  41dbf3:	mov    ds:0x4fecbbe7,eax
  41dbf8:	retf   0xd3f9
  41dbfb:	push   0x2772766b
  41dc00:	repz adc al,0xa0
  41dc03:	push   edi
  41dc04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc05:	cmp    al,0xe7
  41dc07:	in     eax,dx
  41dc08:	sbb    al,BYTE PTR [ecx+eiz*8-0x3366b0f4]
  41dc0f:	cmp    dh,al
  41dc11:	pop    ecx
  41dc12:	retf   0x20dc
  41dc15:	(bad)  
  41dc16:	cld    
  41dc17:	cmp    eax,0xd476cba2
  41dc1c:	sbb    ah,BYTE PTR [ebx-0x58]
  41dc1f:	push   cs
  41dc20:	xchg   ecx,eax
  41dc21:	dec    ebp
  41dc22:	cs mov ch,0x99
  41dc25:	scas   al,BYTE PTR es:[edi]
  41dc26:	es xchg esp,esp
  41dc29:	ins    DWORD PTR es:[edi],dx
  41dc2a:	clc    
  41dc2b:	aas    
  41dc2c:	xchg   ecx,eax
  41dc2d:	push   ds
  41dc2e:	mov    DWORD PTR [eax+edx*1-0x131eead3],esp
  41dc35:	jne    0x41dc55
  41dc37:	mov    cl,0x26
  41dc39:	out    dx,al
  41dc3a:	mov    al,BYTE PTR [esi+0x1589d245]
  41dc40:	xchg   BYTE PTR [eax+0x34],ch
  41dc43:	adc    bh,bl
  41dc45:	sti    
  41dc46:	gs int 0xd8
  41dc49:	test   BYTE PTR [esi+0x1c1d12b3],0x67
  41dc50:	and    esp,ebx
  41dc52:	bound  ebp,QWORD PTR [edi-0x4]
  41dc55:	mov    BYTE PTR [ebx],ah
  41dc57:	lods   eax,DWORD PTR ds:[esi]
  41dc58:	jmp    0xea99:0xd893b945
  41dc5f:	jb     0x41dcc3
  41dc61:	xchg   DWORD PTR [ebx+0x24],esp
  41dc64:	adc    eax,0xee23d7f0
  41dc69:	sbb    ah,BYTE PTR [ebx-0x3b]
  41dc6c:	push   ecx
  41dc6d:	xchg   ebx,eax
  41dc6e:	inc    esp
  41dc6f:	push   0xb167760e
  41dc74:	mov    bh,0x75
  41dc76:	lock cmp ah,dl
  41dc79:	cmp    BYTE PTR [esi-0x3d878c9b],dl
  41dc7f:	shl    dl,0x51
  41dc82:	xchg   ecx,eax
  41dc83:	inc    edx
  41dc84:	fld    DWORD PTR [edi]
  41dc86:	inc    esp
  41dc87:	ja     0x41dcd5
  41dc89:	leave  
  41dc8a:	loop   0x41dc8f
  41dc8c:	imul   ebp,DWORD PTR [eax+eiz*1-0x7d8a8a5e],0xbd7406c7
  41dc97:	sub    eax,0x6b41ecb6
  41dc9c:	into   
  41dc9d:	dec    edi
  41dc9e:	aaa    
  41dc9f:	mov    ds:0x182d3e31,eax
  41dca4:	inc    ebp
  41dca5:	es aad 0xb1
  41dca8:	setge  BYTE PTR [ebx+0x78068312]
  41dcaf:	int    0x1b
  41dcb1:	ja     0x41dcc8
  41dcb3:	loope  0x41dc92
  41dcb5:	jo     0x41dcaf
  41dcb7:	gs sub al,0x47
  41dcba:	lods   al,BYTE PTR ds:[esi]
  41dcbb:	daa    
  41dcbc:	popa   
  41dcbd:	mov    al,ds:0x78b47ef7
  41dcc2:	(bad)  
  41dcc3:	inc    ebp
  41dcc4:	xor    DWORD PTR [eax-0x3393bd3d],eax
  41dcca:	into   
  41dccb:	test   al,0x5e
  41dccd:	in     eax,0x78
  41dccf:	push   ds
  41dcd0:	cmp    al,0xc4
  41dcd2:	test   eax,0x48e12fc1
  41dcd7:	xor    dh,bl
  41dcd9:	(bad)  
  41dcda:	xor    dl,BYTE PTR [ebp-0x7d]
  41dcdd:	jno    0x41dcc3
  41dcdf:	not    ch
  41dce1:	jne    0x41dcbe
  41dce3:	pop    ss
  41dce4:	ds add edi,esp
  41dce7:	xchg   ebp,ebp
  41dce9:	outs   dx,DWORD PTR ds:[esi]
  41dcea:	cmp    eax,DWORD PTR [edi+0x13c85172]
  41dcf0:	jmp    0x41dcd0
  41dcf2:	cmp    ah,BYTE PTR [esi-0x22]
  41dcf5:	fisub  DWORD PTR [esp+ebp*2-0x4a5f77b8]
  41dcfc:	xchg   ecx,eax
  41dcfd:	pop    ds
  41dcfe:	(bad)  
  41dcff:	std    
  41dd00:	inc    ebx
  41dd01:	imul   edi,DWORD PTR [esi+0x45],0x43
  41dd05:	xchg   ecx,eax
  41dd06:	or     eax,0x93c58e8c
  41dd0b:	ror    DWORD PTR [eax+0x3d353ef6],0x19
  41dd12:	stos   DWORD PTR es:[edi],eax
  41dd13:	fwait
  41dd14:	push   DWORD PTR [ebx+esi*8-0x5]
  41dd18:	(bad)  
  41dd19:	cmp    DWORD PTR [ecx-0x67],ecx
  41dd1c:	add    DWORD PTR [ecx+0x216fc11c],eax
  41dd22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd23:	sub    DWORD PTR [ebx],ebx
  41dd25:	push   edx
  41dd26:	les    ebx,FWORD PTR [edi+0x13]
  41dd29:	arpl   WORD PTR [edi+0x56],ax
  41dd2c:	inc    esi
  41dd2d:	aas    
  41dd2e:	imul   DWORD PTR [edx+esi*4-0x15]
  41dd32:	or     edx,DWORD PTR [ecx+0x70]
  41dd35:	mov    esp,0xf5676c21
  41dd3a:	jns    0x41dd19
  41dd3c:	xor    BYTE PTR [ebp-0x417ca82e],dl
  41dd42:	jl     0x41dd64
  41dd44:	pop    esi
  41dd45:	sub    al,0x2c
  41dd47:	jb     0x41dd89
  41dd49:	xlat   BYTE PTR ds:[ebx]
  41dd4a:	in     eax,0xad
  41dd4c:	(bad)  
  41dd4d:	nop
  41dd4e:	movntq QWORD PTR [esi+0x3f],mm0
  41dd52:	out    0x44,al
  41dd54:	into   
  41dd55:	cmp    eax,0x4fdde864
  41dd5a:	int3   
  41dd5b:	into   
  41dd5c:	xchg   ecx,eax
  41dd5d:	mov    DWORD PTR [esi+ebp*8],ebx
  41dd60:	es jno 0x41dd16
  41dd63:	cmp    al,0xbf
  41dd65:	dec    esi
  41dd66:	icebp  
  41dd67:	out    dx,eax
  41dd68:	cmp    eax,0x25e25427
  41dd6d:	ss jbe 0x41dd74
  41dd70:	adc    DWORD PTR [ebx-0x7a5f5c4c],0xffffff91
  41dd77:	ds mov ebx,0x60dfdb4f
  41dd7d:	mov    edx,0x578db73c
  41dd82:	shr    BYTE PTR [ecx],cl
  41dd84:	call   0xb73b4970
  41dd89:	les    eax,FWORD PTR ds:0x4ff2d1b0
  41dd8f:	mov    edi,0x7bd75434
  41dd94:	in     eax,0xfe
  41dd96:	pop    es
  41dd97:	inc    esp
  41dd98:	retf   0xf4eb
  41dd9b:	retf   0x2eaf
  41dd9e:	jbe    0x41dd26
  41dda0:	mov    cl,0x70
  41dda2:	fwait
  41dda3:	jmp    0xdc16:0x2c43ddb4
  41ddaa:	sbb    eax,0xa836b2de
  41ddaf:	pop    esp
  41ddb0:	dec    edi
  41ddb1:	mov    ch,0xab
  41ddb3:	loopne 0x41dd42
  41ddb5:	leave  
  41ddb6:	sbb    esi,esp
  41ddb8:	xchg   ebp,eax
  41ddb9:	outs   dx,DWORD PTR ds:[esi]
  41ddba:	fdivp  st(0),st
  41ddbc:	ins    BYTE PTR es:[edi],dx
  41ddbd:	xor    al,0xa8
  41ddbf:	aas    
  41ddc0:	push   esi
  41ddc1:	icebp  
  41ddc2:	out    dx,al
  41ddc3:	(bad)  
  41ddc4:	int    0xf8
  41ddc6:	inc    edi
  41ddc7:	and    BYTE PTR [edi],0xb7
  41ddca:	dec    ecx
  41ddcb:	pushf  
  41ddcc:	xchg   edi,eax
  41ddcd:	imul   eax,DWORD PTR [ebp+0x37a84fda],0x8e52c72e
  41ddd7:	mov    ds:0x8b76f198,al
  41dddc:	sahf   
  41dddd:	xor    DWORD PTR [esi+ebp*8+0x8],eax
  41dde1:	dec    eax
  41dde2:	ss jb  0x41de07
  41dde5:	mov    DWORD PTR [edx],edi
  41dde7:	push   ecx
  41dde8:	mov    edi,0xecca9900
  41dded:	sbb    eax,0x719ddd1e
  41ddf2:	nop
  41ddf3:	(bad)  
  41ddf4:	std    
  41ddf5:	push   ebp
  41ddf6:	test   DWORD PTR [esi+0x46a0df8c],ecx
  41ddfc:	adc    edi,edi
  41ddfe:	cdq    
  41ddff:	adc    eax,0xf7b91ef2
  41de04:	(bad)  
  41de05:	pop    esi
  41de06:	and    al,0x85
  41de08:	daa    
  41de09:	and    al,0x75
  41de0b:	add    ebx,ebp
  41de0d:	(bad)  
  41de0f:	jnp    0x41de63
  41de11:	shl    ecx,1
  41de13:	pop    ecx
  41de14:	imul   edi,DWORD PTR [ebx-0x2b],0xf30c013d
  41de1b:	call   0xf32f4ed5
  41de20:	in     al,0x32
  41de22:	aaa    
  41de23:	lods   al,BYTE PTR ds:[esi]
  41de24:	sar    BYTE PTR [edi],1
  41de26:	data16 jnp 0x41de17
  41de29:	add    al,0xd6
  41de2b:	outs   dx,DWORD PTR ds:[esi]
  41de2c:	or     ebx,DWORD PTR [eax*2-0x25ff875c]
  41de33:	xlat   BYTE PTR ds:[ebx]
  41de34:	lea    edx,ds:[edi]
  41de37:	popa   
  41de38:	xchg   bl,bh
  41de3a:	add    BYTE PTR [ebx-0x403dba7],al
  41de40:	sti    
  41de41:	aad    0x25
  41de43:	mov    DWORD PTR [ebx*8-0x25c4c816],esp
  41de4a:	or     esi,DWORD PTR [eax+eax*4-0x74]
  41de4e:	mov    eax,0x2a2c031b
  41de53:	fsubr  st(7),st
  41de55:	jo     0x41dde1
  41de57:	sub    esp,DWORD PTR [ecx+0x169ef1e9]
  41de5d:	not    ch
  41de5f:	mov    eax,0x20be1cee
  41de64:	cmp    DWORD PTR [ebp+0x43],ebp
  41de67:	xchg   edi,esp
  41de69:	(bad)  
  41de6b:	mov    gs,WORD PTR [eax]
  41de6d:	xor    al,0x13
  41de6f:	lahf   
  41de70:	xchg   BYTE PTR [edi+esi*4+0x467177d2],al
  41de77:	mov    bl,BYTE PTR [ebx-0x41]
  41de7a:	cld    
  41de7b:	push   ecx
  41de7c:	test   BYTE PTR [eax+0x473def24],dh
  41de82:	pop    esi
  41de83:	and    al,0xe3
  41de85:	sti    
  41de86:	shl    DWORD PTR [edi+eiz*4],cl
  41de89:	int    0xe9
  41de8b:	mov    WORD PTR [esi-0x247d5bf9],fs
  41de91:	mov    al,ds:0xf8266bfa
  41de96:	pop    ecx
  41de97:	inc    eax
  41de98:	inc    ecx
  41de99:	cwde   
  41de9a:	pusha  
  41de9b:	push   ebp
  41de9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de9d:	jo     0x41dea6
  41de9f:	pop    esi
  41dea0:	pop    ds
  41dea1:	mov    ds:0x9f7f31af,al
  41dea6:	xor    BYTE PTR [esi-0x3b],ch
  41dea9:	in     eax,dx
  41deaa:	shr    esp,cl
  41deac:	jae    0x41dec2
  41deae:	out    dx,al
  41deaf:	popa   
  41deb0:	lahf   
  41deb1:	cmp    ebx,DWORD PTR [esi]
  41deb3:	push   esi
  41deb4:	cs das 
  41deb6:	fnsave [eax]
  41deb8:	ficomp WORD PTR [edx-0x2b]
  41debb:	inc    esp
  41debc:	enter  0xfd5,0x78
  41dec0:	add    bl,dl
  41dec2:	push   esp
  41dec3:	mov    ch,BYTE PTR [esi]
  41dec5:	cwde   
  41dec6:	add    BYTE PTR [ebp+ebx*1+0x65],bh
  41deca:	addr16 cld 
  41decc:	das    
  41decd:	pop    ebx
  41dece:	(bad)  
  41decf:	clc    
  41ded0:	pop    esi
  41ded1:	add    dh,dh
  41ded3:	xchg   DWORD PTR [esp+ecx*2],eax
  41ded6:	inc    ebp
  41ded7:	mov    ds:0x2fdb8106,eax
  41dedc:	mov    ds:0x0,eax
  41dee1:	add    cl,ah
  41dee3:	test   BYTE PTR [esi-0x80d1810],al
  41dee9:	xchg   ebp,eax
  41deea:	and    DWORD PTR [eax],eax
  41deec:	cmp    ebx,edx
  41deee:	mov    esi,0x1a13c478
  41def3:	pop    edx
  41def4:	add    DWORD PTR [eax],eax
  41def6:	repz add al,0x0
  41def9:	add    BYTE PTR [esi],al
  41defb:	xor    DWORD PTR [ecx+ebx*2+0x22c7d698],0x12
  41df03:	jl     0x41de85
  41df05:	push   cs
  41df06:	pop    ss
  41df07:	sbb    al,0x3e
  41df09:	mov    edx,0x551b222a
  41df0e:	inc    esp
  41df0f:	retf   
  41df10:	lea    edx,[edi]
  41df12:	ins    DWORD PTR es:[edi],dx
  41df13:	cld    
  41df14:	pusha  
  41df15:	leave  
  41df16:	mov    ebp,0xfb9023c1
  41df1b:	pop    ebx
  41df1c:	leave  
  41df1d:	mov    ch,0xbd
  41df1f:	loopne 0x41df76
  41df21:	fstp   QWORD PTR [ebx+0x62883750]
  41df27:	stos   BYTE PTR es:[edi],al
  41df28:	mov    bl,0x3f
  41df2a:	das    
  41df2b:	test   al,0x2e
  41df2d:	stos   DWORD PTR es:[edi],eax
  41df2e:	enter  0x8088,0x7f
  41df32:	dec    BYTE PTR [esi+0x60a20577]
  41df38:	dec    esi
  41df39:	mov    esp,0x1a95cc33
  41df3e:	push   edx
  41df3f:	and    al,0xba
  41df41:	or     BYTE PTR [ecx],ch
  41df43:	dec    esi
  41df44:	mov    cl,BYTE PTR [eax-0xd2816ef]
  41df4a:	lods   al,BYTE PTR ds:[esi]
  41df4b:	imul   esp,edx,0x41
  41df4e:	xchg   edx,eax
  41df4f:	cld    
  41df50:	psubd  mm0,mm7
  41df53:	jmp    0x41df6b
  41df55:	aas    
  41df56:	mov    eax,fs
  41df58:	retf   
  41df59:	inc    edi
  41df5a:	mov    ch,0xa6
  41df5c:	dec    edi
  41df5d:	xor    bh,BYTE PTR [ebx]
  41df5f:	int    0x7f
  41df61:	jns    0x41df3d
  41df63:	lock pop esi
  41df65:	mov    ds:0xd4f192c3,al
  41df6a:	shl    BYTE PTR ds:[edx+0x72],0xa8
  41df6f:	rcr    BYTE PTR [eax],0x3b
  41df72:	(bad)  
  41df74:	in     al,dx
  41df75:	jns    0x41df18
  41df77:	pop    es
  41df78:	sbb    al,BYTE PTR [edi-0x7b]
  41df7b:	dec    ebp
  41df7c:	push   ebx
  41df7d:	or     ebp,DWORD PTR [ebx]
  41df7f:	fild   QWORD PTR [ebx+0x7192641e]
  41df85:	mov    bl,BYTE PTR [ebp+0x67]
  41df88:	mov    dh,bl
  41df8a:	and    BYTE PTR [edx+0x4ed8d947],0xb7
  41df91:	xchg   DWORD PTR [ebx+0x32],ecx
  41df94:	jno    0x41df1f
  41df96:	pop    edi
  41df98:	or     bl,dl
  41df9a:	seta   BYTE PTR [edx+0x33dbc479]
  41dfa1:	sbb    DWORD PTR [eax+0x635cfa4],esp
  41dfa7:	or     BYTE PTR [ecx+eax*2-0x3d],0x43
  41dfac:	xchg   ebp,eax
  41dfad:	and    al,0x63
  41dfaf:	cmc    
  41dfb0:	bound  edi,QWORD PTR ds:[ebp-0x4]
  41dfb4:	cwde   
  41dfb5:	mov    ds:0xb8a9dc4,al
  41dfba:	pop    esi
  41dfbb:	neg    DWORD PTR [edx]
  41dfbd:	loopne 0x41dfcb
  41dfbf:	mov    ebp,0xad9bc8c5
  41dfc4:	mov    edx,edi
  41dfc6:	imul   edi,DWORD PTR [edx+0x79],0x38
  41dfca:	mov    esp,0x268663b3
  41dfcf:	jns    0x41e019
  41dfd1:	pop    ss
  41dfd2:	or     esp,ebp
  41dfd4:	pop    edi
  41dfd5:	mov    bl,bl
  41dfd7:	sub    BYTE PTR [esi],bl
  41dfd9:	data16 fisttp QWORD PTR [edi-0x5348af2b]
  41dfe0:	dec    eax
  41dfe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfe2:	nop
  41dfe3:	aam    0xdc
  41dfe5:	inc    ebx
  41dfe6:	retf   
  41dfe7:	mov    bl,0x6e
  41dfe9:	add    eax,0x3ae4d338
  41dfee:	sbb    ah,cl
  41dff0:	fidiv  WORD PTR [ebp-0x507f052c]
  41dff6:	xchg   esp,eax
  41dff7:	rcr    DWORD PTR [eax+0x4a],cl
  41dffa:	(bad)  
  41dffc:	sub    eax,0xfe1f6e6e
  41e001:	js     0x41e010
  41e003:	jbe    0x41e02d
  41e005:	push   edx
  41e006:	cmp    ah,BYTE PTR [eax]
  41e008:	lea    esi,[esi+0x6117b143]
  41e00e:	add    esi,DWORD PTR ds:0x102ba504
  41e014:	out    0x63,eax
  41e016:	fcomip st,st(7)
  41e018:	mov    DWORD PTR [edi],edx
  41e01a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e01b:	jg     0x41e035
  41e01d:	mov    ds:0x57beef3,eax
  41e022:	cli    
  41e023:	sbb    al,0x67
  41e025:	mov    WORD PTR [edx+0xbb692c7],es
  41e02b:	ror    BYTE PTR [eax-0x4641de0e],0xe7
  41e032:	popa   
  41e033:	sbb    DWORD PTR ss:[edi-0x247a6e9a],esi
  41e03a:	scas   eax,DWORD PTR es:[edi]
  41e03b:	push   eax
  41e03c:	inc    ecx
  41e03d:	mov    edi,0x514532b
  41e042:	xchg   esp,eax
  41e043:	add    DWORD PTR [edx],ecx
  41e045:	pop    esi
  41e046:	cmp    BYTE PTR [ebp+0x44f48243],ah
  41e04c:	pop    ds
  41e04d:	fisttp DWORD PTR [ebp-0x338d8e7b]
  41e053:	cmp    BYTE PTR [ebx],0x7e
  41e056:	dec    edx
  41e057:	lahf   
  41e058:	xor    cl,dl
  41e05a:	sub    DWORD PTR [ecx+0xc3cc885],0x467e030d
  41e064:	fs das 
  41e066:	push   eax
  41e067:	add    BYTE PTR [edi+ebx*2-0x523c6fff],bl
  41e06e:	jno    0x41e03c
  41e070:	adc    DWORD PTR [ebx],0x4c53ddf8
  41e076:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e077:	outs   dx,BYTE PTR ds:[esi]
  41e078:	pop    ebx
  41e079:	mov    ecx,DWORD PTR [ebx-0x46]
  41e07c:	cwde   
  41e07d:	xor    bl,BYTE PTR [ebp+0x3f917c35]
  41e083:	arpl   ax,dx
  41e085:	les    edx,FWORD PTR [esi]
  41e087:	mov    ss,eax
  41e089:	cld    
  41e08a:	mov    ah,bl
  41e08c:	mov    BYTE PTR [eax+0x33],bl
  41e08f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e090:	ins    DWORD PTR es:[edi],dx
  41e091:	pop    es
  41e092:	xor    eax,0xa0c7a334
  41e097:	shr    esi,0x59
  41e09a:	xor    DWORD PTR [edi-0x5db8c9ad],ebp
  41e0a0:	cmp    al,0x5f
  41e0a2:	retf   0x6b12
  41e0a5:	and    eax,0xaa34d941
  41e0aa:	xor    cl,BYTE PTR [ebp+ebp*2-0x7df980a6]
  41e0b1:	daa    
  41e0b2:	(bad)  
  41e0b3:	aam    0xb4
  41e0b5:	mov    edx,0xb6ff55d
  41e0ba:	mov    dl,BYTE PTR [ecx-0x15466106]
  41e0c0:	enter  0xa1eb,0x9d
  41e0c4:	dec    ecx
  41e0c5:	inc    ebx
  41e0c6:	loopne 0x41e08c
  41e0c8:	cli    
  41e0c9:	test   eax,0x930d9613
  41e0ce:	jno    0x41e064
  41e0d0:	inc    ecx
  41e0d1:	leave  
  41e0d2:	fisubr DWORD PTR ds:0x79f5a228
  41e0d8:	adc    al,0x39
  41e0da:	pop    ds
  41e0db:	retf   
  41e0dc:	fistp  DWORD PTR [esi+0x45]
  41e0df:	test   BYTE PTR [ecx],al
  41e0e1:	jl     0x41e123
  41e0e3:	cmp    al,0x93
  41e0e5:	out    0x11,al
  41e0e7:	xchg   ebx,eax
  41e0e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0e9:	ja     0x41e163
  41e0eb:	inc    ecx
  41e0ec:	scas   eax,DWORD PTR es:[edi]
  41e0ed:	sub    BYTE PTR [ebx-0x78],0xf4
  41e0f1:	pop    ebp
  41e0f2:	sbb    eax,0xf751c53c
  41e0f7:	sub    al,BYTE PTR [esi+0x2c7671a9]
  41e0fd:	xor    eax,0xa4b9359a
  41e102:	ins    DWORD PTR es:[edi],dx
  41e103:	xlat   BYTE PTR ds:[ebx]
  41e104:	xchg   edi,eax
  41e105:	nop
  41e106:	leave  
  41e107:	or     al,0xdf
  41e109:	adc    eax,ebp
  41e10b:	and    eax,0x16d4b715
  41e110:	rcr    esp,1
  41e112:	sbb    esi,ecx
  41e114:	lahf   
  41e115:	adc    DWORD PTR [ebp+0x2c],ecx
  41e118:	packuswb mm3,mm2
  41e11b:	sub    edi,esi
  41e11d:	not    ebx
  41e11f:	not    DWORD PTR es:[edx]
  41e122:	xor    bl,bl
  41e124:	or     DWORD PTR [ebx],ebx
  41e126:	arpl   WORD PTR [esi],dx
  41e128:	ret    
  41e129:	xor    dh,dl
  41e12b:	outs   dx,DWORD PTR ds:[esi]
  41e12c:	mov    al,0x7f
  41e12e:	xchg   edx,eax
  41e12f:	jle    0x41e102
  41e131:	out    dx,al
  41e132:	lea    edx,[eax-0x72]
  41e135:	cmp    esp,0xffffffcc
  41e138:	xchg   ebx,eax
  41e139:	cmp    bl,bl
  41e13b:	xchg   esi,eax
  41e13c:	and    eax,0x1b05661b
  41e141:	mov    dh,ch
  41e143:	mov    bl,0x2d
  41e145:	mov    dh,0xb7
  41e147:	retf   0x3200
  41e14a:	repnz or eax,0x5f9bcef4
  41e150:	or     al,0x76
  41e152:	pop    ds
  41e153:	mov    al,0x33
  41e155:	or     ch,cl
  41e157:	mov    ah,0x91
  41e159:	std    
  41e15a:	sub    ax,0xa7a7
  41e15e:	xlat   BYTE PTR ds:[ebx]
  41e15f:	mov    eax,0xbb71dcc4
  41e164:	adc    DWORD PTR [edi],0x6da99129
  41e16a:	mov    dl,0x57
  41e16c:	enter  0x54f,0x72
  41e170:	mov    dl,0x3d
  41e172:	sti    
  41e173:	sbb    eax,0x5bcbab33
  41e178:	pop    esp
  41e179:	ret    0x313a
  41e17c:	cmp    eax,DWORD PTR [bp+di-0x51c9]
  41e181:	xchg   edx,eax
  41e182:	mov    esi,0x1c48915
  41e187:	pop    ss
  41e188:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e189:	mov    BYTE PTR [esi],ch
  41e18b:	test   eax,0xe9d4789a
  41e190:	icebp  
  41e191:	jge    0x41e199
  41e193:	test   eax,0xc5d67f27
  41e198:	dec    ecx
  41e199:	pop    edi
  41e19a:	inc    edi
  41e19b:	xlat   BYTE PTR ds:[ebx]
  41e19c:	adc    BYTE PTR [eax+0x3c3c42c0],ah
  41e1a2:	cmp    eax,esp
  41e1a4:	mov    cs,edx
  41e1a6:	xchg   ebp,eax
  41e1a7:	clc    
  41e1a8:	jg     0x41e161
  41e1aa:	fist   WORD PTR [ebp+0x9]
  41e1ad:	xlat   BYTE PTR cs:[ebx]
  41e1af:	mov    eax,DWORD PTR [edx+0x7f]
  41e1b2:	mov    ebp,gs
  41e1b4:	test   eax,0x10fe1e3a
  41e1b9:	sbb    al,0x9d
  41e1bb:	add    DWORD PTR [ecx],eax
  41e1bd:	push   ebp
  41e1be:	or     BYTE PTR [edx+0x5f],bh
  41e1c1:	imul   ebx,DWORD PTR [edi-0xf01694],0x2e
  41e1c8:	sub    ebx,esi
  41e1ca:	jg     0x41e217
  41e1cc:	nop
  41e1cd:	fdivr  DWORD PTR ss:[ebx]
  41e1d0:	mov    dl,0x7
  41e1d2:	inc    edx
  41e1d3:	or     edx,ecx
  41e1d5:	sub    al,0xcc
  41e1d7:	es pop edi
  41e1d9:	arpl   WORD PTR [ecx+0x4a15c54c],bx
  41e1df:	in     al,0xf3
  41e1e1:	jle    0x41e23f
  41e1e3:	sub    eax,0x243fdc52
  41e1e8:	mov    ah,0xed
  41e1ea:	pop    ebx
  41e1eb:	cs inc esi
  41e1ed:	daa    
  41e1ee:	pop    ss
  41e1ef:	aaa    
  41e1f0:	inc    BYTE PTR [ecx+0x6c]
  41e1f3:	or     BYTE PTR ds:0x3c76f3bc,0x88
  41e1fa:	dec    edi
  41e1fb:	fisttp WORD PTR [ebp-0x7820377f]
  41e201:	adc    DWORD PTR [edi],0x70974682
  41e207:	pop    edx
  41e208:	(bad)  
  41e209:	mov    al,ds:0xb22a40d3
  41e20e:	or     edx,ebp
  41e210:	(bad)  
  41e211:	cld    
  41e212:	xor    ebp,esp
  41e214:	xchg   edx,eax
  41e215:	adc    BYTE PTR [ecx-0x5],cl
  41e218:	jl     0x41e1f7
  41e21a:	int3   
  41e21b:	pusha  
  41e21c:	push   ebp
  41e21d:	dec    esi
  41e21e:	xor    DWORD PTR [edi],esi
  41e220:	jns    0x41e209
  41e222:	or     edi,DWORD PTR [esi]
  41e224:	test   al,0xde
  41e226:	inc    edi
  41e227:	adc    eax,0x2d5eaff5
  41e22c:	pop    eax
  41e22d:	fldcw  WORD PTR fs:[ebx+0x4b]
  41e231:	lds    esp,FWORD PTR [ecx+0x75]
  41e234:	ins    BYTE PTR es:[edi],dx
  41e235:	rcl    BYTE PTR [edi],0x44
  41e238:	ds pusha 
  41e23a:	sbb    eax,0x350ef30
  41e23f:	pop    ds
  41e240:	retf   0x47c7
  41e243:	and    al,0xcd
  41e245:	outs   dx,DWORD PTR ds:[esi]
  41e246:	cwde   
  41e247:	xchg   edi,eax
  41e248:	pop    edi
  41e249:	pop    edx
  41e24a:	jb     0x41e2af
  41e24c:	out    0xab,eax
  41e24e:	test   eax,0xac2a2c4
  41e253:	mov    edx,0x4804afa8
  41e258:	or     al,0x2c
  41e25a:	jno    0x41e23d
  41e25c:	jno    0x41e287
  41e25e:	out    dx,al
  41e25f:	cmp    bl,BYTE PTR [esi-0x6e]
  41e262:	xchg   ecx,eax
  41e263:	jle    0x41e29b
  41e265:	mov    WORD PTR [esi+0x72a730c0],ds
  41e26b:	es add al,0x9b
  41e26e:	into   
  41e26f:	mov    ah,0x93
  41e271:	(bad)  
  41e272:	mov    ah,0x9a
  41e274:	(bad)  
  41e275:	xor    bl,BYTE PTR [edx]
  41e277:	adc    eax,0xba76c585
  41e27c:	pop    esp
  41e27d:	(bad)  
  41e27e:	or     ebp,ebp
  41e280:	ins    BYTE PTR es:[edi],dx
  41e281:	inc    ebx
  41e282:	shr    dl,0x69
  41e285:	jge    0x41e2ef
  41e287:	ja     0x41e2a0
  41e289:	leave  
  41e28a:	xchg   ebp,eax
  41e28b:	push   es
  41e28c:	int    0xec
  41e28e:	ja     0x41e240
  41e290:	leave  
  41e291:	pusha  
  41e292:	cmp    esi,ebx
  41e294:	jecxz  0x41e2b6
  41e296:	pop    esi
  41e297:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e298:	scas   eax,DWORD PTR es:[edi]
  41e299:	add    ch,cl
  41e29b:	mov    esp,0xb638ef6f
  41e2a0:	icebp  
  41e2a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2a2:	(bad)  [edx-0x4a]
  41e2a5:	js     0x41e2b2
  41e2a7:	je     0x41e29b
  41e2a9:	mov    dl,0x63
  41e2ab:	push   esp
  41e2ac:	and    bh,dl
  41e2ae:	lahf   
  41e2af:	mov    ah,0x1d
  41e2b1:	daa    
  41e2b2:	in     al,0x9
  41e2b4:	mov    ds:0xf2771ad8,eax
  41e2b9:	mov    ebx,0x2e48519f
  41e2be:	sub    BYTE PTR [ebp+0xd7bb72b],ah
  41e2c4:	sbb    al,0x38
  41e2c6:	ja     0x41e33b
  41e2c8:	(bad)  
  41e2c9:	out    0x36,eax
  41e2cb:	pop    ds
  41e2cc:	mov    ebp,0xe40e4570
  41e2d1:	mov    WORD PTR [ebx+0x42a1a1ae],ss
  41e2d7:	pusha  
  41e2d8:	lds    ebp,FWORD PTR [ebp-0x69]
  41e2db:	ret    
  41e2dc:	pop    esi
  41e2dd:	lock fwait
  41e2df:	aaa    
  41e2e0:	mov    ds:0x71b90eba,eax
  41e2e5:	pop    ebx
  41e2e6:	push   cs
  41e2e7:	or     edx,DWORD PTR [esi+0x14]
  41e2ea:	xchg   edi,eax
  41e2eb:	call   0xb2a3afa0
  41e2f0:	or     al,0x7
  41e2f2:	(bad)  
  41e2f3:	jmp    0xfc144966
  41e2f8:	jl     0x41e2ae
  41e2fa:	jne    0x41e33c
  41e2fc:	xlat   BYTE PTR ds:[ebx]
  41e2fd:	cs adc eax,0x1019b93
  41e303:	rcr    DWORD PTR [eax],0x2e
  41e306:	test   BYTE PTR [esi-0xed100c5],bl
  41e30c:	repnz mov esi,0x6cd52c0c
  41e312:	xor    ebx,DWORD PTR [edi+0x14924917]
  41e318:	cli    
  41e319:	inc    eax
  41e31a:	int    0x69
  41e31c:	add    bl,BYTE PTR [edi-0x21223f6d]
  41e322:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e323:	xchg   BYTE PTR [eax-0xb04f90b],bl
  41e329:	and    BYTE PTR [eax],bh
  41e32b:	push   esp
  41e32c:	push   ds
  41e32d:	(bad)  
  41e32f:	test   DWORD PTR [ebx+0x41],0x781cb898
  41e336:	call   0x7d00:0xf455417c
  41e33d:	jnp    0x41e393
  41e33f:	xchg   ebx,eax
  41e340:	es push ds
  41e342:	imul   ebp,DWORD PTR [edx+0x395ffbb3],0xa0b1bd0b
  41e34c:	sti    
  41e34d:	cmp    BYTE PTR [ebx+0x5f],dl
  41e350:	dec    ebp
  41e351:	inc    esi
  41e352:	vandps xmm4,xmm0,XMMWORD PTR [ecx+ebx*4+0x6d]
  41e358:	fwait
  41e359:	push   esi
  41e35a:	xchg   ebx,eax
  41e35b:	fs aas 
  41e35d:	fdiv   DWORD PTR [eax+esi*1-0x1f]
  41e361:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e362:	pop    ss
  41e363:	jecxz  0x41e371
  41e365:	rcr    dl,cl
  41e367:	mov    ah,0x90
  41e369:	scas   eax,DWORD PTR es:[edi]
  41e36a:	mov    ch,0xa3
  41e36c:	fnstenv [ebx]
  41e36e:	cdq    
  41e36f:	jge    0x41e3e6
  41e371:	mov    eax,ds:0x1895474b
  41e376:	stc    
  41e377:	sub    eax,0xb31f5d85
  41e37c:	loop   0x41e35d
  41e37e:	inc    ebx
  41e37f:	sub    eax,0x44a181c8
  41e384:	sahf   
  41e385:	mov    BYTE PTR [ebx+edx*1+0x39],dh
  41e389:	jo     0x41e408
  41e38b:	cmp    eax,0xcfa91d54
  41e390:	idiv   DWORD PTR [edx+0x55]
  41e393:	ror    DWORD PTR [edx+0x69cfb1d2],cl
  41e399:	inc    esi
  41e39a:	fdivr  st,st(3)
  41e39c:	cdq    
  41e39d:	(bad)  
  41e39e:	(bad)  
  41e39f:	dec    esp
  41e3a0:	inc    ebp
  41e3a1:	or     DWORD PTR ds:0x91de61d0,0x3d
  41e3a8:	imul   esi,edx,0xaca68036
  41e3ae:	ret    0xcaf8
  41e3b1:	sub    ebx,DWORD PTR [ebx+eiz*4-0x77]
  41e3b5:	mov    BYTE PTR [ebp*4-0x6469aaed],ch
  41e3bc:	cmp    eax,esi
  41e3be:	and    ch,BYTE PTR [ecx+0x79]
  41e3c1:	push   ecx
  41e3c2:	fisub  WORD PTR [edi+0x24395fef]
  41e3c8:	sub    dl,BYTE PTR [edi+0xdd7a27b]
  41e3ce:	or     esi,ecx
  41e3d0:	pushf  
  41e3d1:	dec    ecx
  41e3d2:	push   es
  41e3d3:	out    dx,al
  41e3d4:	and    eax,DWORD PTR [esi-0x80]
  41e3d7:	enter  0x8ff2,0x4c
  41e3db:	addr16 std 
  41e3dd:	stos   BYTE PTR es:[edi],al
  41e3de:	dec    eax
  41e3df:	loopne 0x41e39e
  41e3e1:	jo     0x41e367
  41e3e3:	addr16 hlt 
  41e3e5:	jb     0x41e459
  41e3e7:	outs   dx,BYTE PTR ds:[esi]
  41e3e8:	stos   DWORD PTR es:[edi],eax
  41e3e9:	mov    ch,0x6c
  41e3eb:	mov    bh,0x28
  41e3ed:	add    BYTE PTR [eax],al
  41e3ef:	add    BYTE PTR [eax],al
  41e3f1:	add    BYTE PTR [eax-0x7de0740],al
  41e3f7:	cmp    ecx,ebx
  41e3f9:	loope  0x41e3df
  41e3fb:	mov    esi,0x3e2bfc94
  41e400:	sbb    BYTE PTR [ebp+0xd],0x5f
  41e404:	add    DWORD PTR [eax],eax
  41e406:	repz add al,0x0
  41e409:	add    BYTE PTR [eax],ch
  41e40b:	jbe    0x41e3e2
  41e40d:	cmp    eax,0xffffffb3
  41e410:	push   0x9f323553
  41e415:	push   esp
  41e416:	outs   dx,DWORD PTR ds:[esi]
  41e417:	mov    gs,WORD PTR [eax+0x7551aeac]
  41e41d:	inc    eax
  41e41e:	and    BYTE PTR [ecx],dh
  41e420:	mov    dh,0xef
  41e422:	out    0xf4,al
  41e424:	outs   dx,DWORD PTR ds:[esi]
  41e425:	push   es
  41e426:	repz out 0x53,al
  41e429:	(bad)  [ebp-0x72]
  41e42c:	in     al,0x42
  41e42e:	mov    dh,0x4a
  41e430:	and    al,0x1
  41e432:	mov    edx,0xa20a464
  41e437:	xor    eax,0x6f11d3aa
  41e43c:	pop    ebp
  41e43d:	sub    bh,al
  41e43f:	adc    al,0x35
  41e441:	fnsave [eax-0x6981043]
  41e447:	(bad)  
  41e449:	sub    BYTE PTR [edi-0x14],dh
  41e44c:	loop   0x41e466
  41e44e:	jns    0x41e3e1
  41e450:	sti    
  41e451:	mov    ebx,0x15104ddc
  41e456:	test   al,0x78
  41e458:	imul   ebx,DWORD PTR [edi+0x1e],0xa9130b
  41e45f:	lds    ebx,FWORD PTR [eax+ebx*4-0x162c6a52]
  41e466:	ins    DWORD PTR es:[edi],dx
  41e467:	mov    dl,0xbf
  41e469:	sbb    DWORD PTR ds:0xb40af10c,0x7
  41e470:	add    al,0x5c
  41e472:	sti    
  41e473:	sub    BYTE PTR [edi],cl
  41e475:	ins    DWORD PTR es:[edi],dx
  41e476:	add    ebp,esi
  41e478:	adc    BYTE PTR [edx+0x607a2ad3],al
  41e47e:	sbb    al,0x0
  41e480:	popa   
  41e481:	je     0x41e4e4
  41e483:	ficomp DWORD PTR [edi+0x5b]
  41e486:	xchg   edi,eax
  41e487:	test   BYTE PTR [esi+0x78],0xf9
  41e48b:	dec    ebp
  41e48c:	or     esp,DWORD PTR [edi+0xbcef2bc]
  41e492:	mov    ch,0x96
  41e494:	loopne 0x41e4ff
  41e496:	outs   dx,DWORD PTR ds:[esi]
  41e497:	dec    edi
  41e498:	pop    ebp
  41e499:	adc    edx,DWORD PTR [eax+0x359670ae]
  41e49f:	or     BYTE PTR [edi+edx*8-0x3d8a21eb],cl
  41e4a6:	mov    ?,WORD PTR [eax-0xaadfeb2]
  41e4ac:	adc    al,0x3b
  41e4ae:	stos   DWORD PTR es:[edi],eax
  41e4af:	bound  esp,QWORD PTR [esi+0x3]
  41e4b2:	ficomp DWORD PTR [ecx+0x6cc42614]
  41e4b8:	mov    bl,0xae
  41e4ba:	add    BYTE PTR [edi+eiz*8],ah
  41e4bd:	mov    WORD PTR [edi+edi*1-0x23],?
  41e4c1:	pop    ss
  41e4c2:	arpl   WORD PTR [eax],bx
  41e4c4:	data16 jle 0x41e472
  41e4c7:	xchg   esp,eax
  41e4c8:	mov    ah,BYTE PTR ds:0x249d50ad
  41e4ce:	rcr    DWORD PTR [eax+ecx*1+0x76],0x6b
  41e4d3:	mov    BYTE PTR [ebp-0x20],bh
  41e4d6:	sub    BYTE PTR gs:[esi-0x2a80d99b],ch
  41e4dd:	stc    
  41e4de:	jo     0x41e469
  41e4e0:	or     al,0xdb
  41e4e2:	sti    
  41e4e3:	pop    ebp
  41e4e4:	lahf   
  41e4e5:	int3   
  41e4e6:	fwait
  41e4e7:	mov    ds:0xf12527d7,eax
  41e4ec:	or     BYTE PTR [ebx-0x3231febb],dl
  41e4f2:	or     al,0xe7
  41e4f4:	hlt    
  41e4f5:	mov    eax,0x18098353
  41e4fa:	mov    edi,ds
  41e4fc:	ins    BYTE PTR es:[edi],dx
  41e4fd:	jo     0x41e560
  41e4ff:	ss ins DWORD PTR es:[edi],dx
  41e501:	fsub   st(7),st
  41e503:	mov    ebp,0x878e1c99
  41e508:	xor    esp,ebx
  41e50a:	adc    BYTE PTR [ebx+0x23f865cd],al
  41e510:	rcr    edx,cl
  41e512:	xchg   ebx,eax
  41e513:	adc    BYTE PTR ds:0xce70e341,dh
  41e519:	lods   al,BYTE PTR ds:[esi]
  41e51a:	dec    edx
  41e51b:	add    BYTE PTR ds:[eax-0x3e],dh
  41e51f:	xchg   edi,eax
  41e520:	jl     0x41e4f9
  41e522:	les    edi,FWORD PTR [ebx]
  41e524:	pop    esp
  41e525:	pushf  
  41e526:	push   eax
  41e527:	sbb    BYTE PTR [edx],0x18
  41e52a:	ds aam 0x93
  41e52d:	imul   eax,DWORD PTR es:[ebx+0x61de4f31],0x27d63d19
  41e538:	mov    eax,DWORD PTR [ecx]
  41e53a:	sub    BYTE PTR [esi],ch
  41e53c:	xchg   ebp,eax
  41e53d:	or     al,0x86
  41e53f:	lods   al,BYTE PTR ds:[esi]
  41e540:	xchg   edi,eax
  41e541:	lods   al,BYTE PTR ds:[esi]
  41e542:	fmul   DWORD PTR [esi]
  41e544:	push   0x314fa465
  41e549:	mov    esi,0x193e1249
  41e54e:	mov    dl,0xe3
  41e550:	xor    BYTE PTR [edi-0x6fe85132],al
  41e556:	mov    al,ds:0x60ea601
  41e55b:	shl    edx,1
  41e55d:	xchg   ebp,eax
  41e55e:	xor    DWORD PTR [edi-0x5d],eax
  41e561:	xchg   ebx,eax
  41e562:	inc    ecx
  41e563:	cwde   
  41e564:	popa   
  41e565:	inc    esi
  41e566:	rcr    DWORD PTR [esi-0x1a],0x9
  41e56a:	jmp    0x41e57e
  41e56c:	out    dx,eax
  41e56d:	push   ds
  41e56e:	xor    ah,BYTE PTR ds:0x5023aa33
  41e574:	pop    esp
  41e575:	pop    ds
  41e576:	mov    ?,WORD PTR [ecx+eiz*1+0x166f837e]
  41e57d:	in     eax,0xb3
  41e57f:	mov    DWORD PTR [esi],esp
  41e581:	call   0x5c53:0xdf72159b
  41e588:	lods   eax,DWORD PTR ds:[esi]
  41e589:	mov    ebp,0x9dd14e8f
  41e58e:	pusha  
  41e58f:	or     eax,0x50e57dc7
  41e594:	cdq    
  41e595:	outs   dx,DWORD PTR ds:[esi]
  41e596:	push   es
  41e597:	ja     0x41e590
  41e599:	inc    esp
  41e59a:	adc    bl,al
  41e59c:	les    esi,FWORD PTR [ecx-0x62969eb0]
  41e5a2:	sub    BYTE PTR [esi+0x73897631],al
  41e5a8:	mov    bh,BYTE PTR [ebx]
  41e5aa:	clc    
  41e5ab:	scas   eax,DWORD PTR es:[edi]
  41e5ac:	aaa    
  41e5ad:	nop
  41e5ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5af:	pop    ebx
  41e5b0:	adc    al,0xe9
  41e5b2:	scas   al,BYTE PTR es:[edi]
  41e5b3:	inc    esp
  41e5b4:	mov    ds,WORD PTR ds:0xf26a4979
  41e5ba:	and    esp,DWORD PTR [edi+0x6ba304e6]
  41e5c0:	fistp  QWORD PTR ds:0x988a5079
  41e5c6:	pop    ebp
  41e5c7:	scas   al,BYTE PTR es:[edi]
  41e5c8:	(bad)  [ecx+0x13]
  41e5cb:	inc    esi
  41e5cc:	loop   0x41e5f3
  41e5ce:	cs xor eax,0x8d28e203
  41e5d4:	dec    esp
  41e5d5:	(bad)  [edx+0x6e]
  41e5d8:	add    BYTE PTR ds:0xcef804e8,0x3b
  41e5df:	push   0x3f4ef699
  41e5e4:	pushf  
  41e5e5:	test   BYTE PTR [edx],dl
  41e5e7:	sbb    DWORD PTR [eax-0x1b],ebp
  41e5ea:	inc    esp
  41e5eb:	aaa    
  41e5ec:	inc    eax
  41e5ed:	in     eax,dx
  41e5ee:	icebp  
  41e5ef:	cmp    al,0xbe
  41e5f1:	jp     0x41e5c2
  41e5f3:	mov    bl,0xd4
  41e5f5:	sbb    ecx,DWORD PTR [eax-0x67]
  41e5f8:	ds push esp
  41e5fa:	sbb    BYTE PTR [edx+0x42],ch
  41e5fd:	ret    0xd1ed
  41e600:	fiadd  WORD PTR [ecx-0x10611a32]
  41e606:	xchg   edi,eax
  41e607:	cmp    DWORD PTR [ebx],eax
  41e609:	scas   al,BYTE PTR es:[edi]
  41e60a:	inc    edx
  41e60b:	or     cl,BYTE PTR [ecx-0x7d]
  41e60e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e60f:	push   0xffffff9e
  41e611:	sbb    DWORD PTR [ebp+0x32184ee4],0x42
  41e618:	lods   eax,DWORD PTR ds:[esi]
  41e619:	test   DWORD PTR [esi],edx
  41e61b:	aaa    
  41e61c:	in     eax,dx
  41e61d:	cmp    al,0x57
  41e61f:	outs   dx,DWORD PTR ds:[esi]
  41e620:	add    dl,dl
  41e622:	mov    eax,0xbeb24972
  41e627:	js     0x41e65c
  41e629:	or     BYTE PTR [edi-0x76e2900c],0x6a
  41e630:	fldenv [ecx-0x1a03ce6]
  41e636:	inc    esp
  41e637:	hlt    
  41e638:	inc    ebx
  41e639:	enter  0xca2f,0xb7
  41e63d:	scas   eax,DWORD PTR es:[edi]
  41e63e:	loopne 0x41e5cb
  41e640:	test   DWORD PTR [esi+0x32],eax
  41e643:	sbb    esi,esi
  41e645:	xchg   esi,eax
  41e646:	ss mov dh,0x2c
  41e649:	retf   0xb110
  41e64c:	addr16 sub eax,0x32d604d2
  41e652:	mov    ah,0xc9
  41e654:	out    0x24,al
  41e656:	not    BYTE PTR [eax]
  41e658:	aas    
  41e659:	mov    esp,0xbd2911be
  41e65e:	pop    ss
  41e65f:	test   BYTE PTR [ecx],dl
  41e661:	jmp    0xab6bd2a0
  41e666:	xor    edi,esp
  41e668:	mov    esi,0x9123052a
  41e66d:	mov    bl,0xb0
  41e66f:	ins    BYTE PTR es:[edi],dx
  41e670:	hlt    
  41e671:	mov    al,ds:0xf1d935c8
  41e676:	fucomp st(6)
  41e678:	in     eax,0x0
  41e67a:	jae    0x41e680
  41e67c:	push   eax
  41e67d:	push   esp
  41e67e:	push   eax
  41e67f:	adc    BYTE PTR [eax+0x7fb4797a],dl
  41e685:	outs   dx,DWORD PTR ds:[esi]
  41e686:	inc    ebp
  41e687:	neg    BYTE PTR [ebx+0x53]
  41e68a:	dec    eax
  41e68b:	push   edx
  41e68c:	dec    esi
  41e68d:	mov    ebx,0x5cb29c7
  41e692:	out    0x27,eax
  41e694:	push   esi
  41e695:	cmc    
  41e696:	sbb    BYTE PTR [esi+ecx*2],ah
  41e699:	mov    bh,0x9e
  41e69b:	xor    esp,ebp
  41e69d:	fstp   QWORD PTR ds:0x428cee0e
  41e6a3:	cmp    DWORD PTR [edi+0x6ab32571],esi
  41e6a9:	mov    dh,0x25
  41e6ab:	jle    0x41e701
  41e6ad:	aaa    
  41e6ae:	stc    
  41e6af:	and    ch,ch
  41e6b1:	sbb    ah,BYTE PTR [edi]
  41e6b3:	js     0x41e664
  41e6b5:	test   al,0x5b
  41e6b7:	pop    es
  41e6b8:	fs cld 
  41e6ba:	mov    ds:0xf1caa584,al
  41e6bf:	retf   0xde0b
  41e6c2:	mov    eax,ds:0x159c0247
  41e6c7:	scas   eax,DWORD PTR es:[edi]
  41e6c8:	xor    eax,DWORD PTR [eax]
  41e6ca:	stos   BYTE PTR es:[edi],al
  41e6cb:	lahf   
  41e6cc:	dec    edx
  41e6cd:	in     eax,0x4e
  41e6cf:	dec    ecx
  41e6d0:	push   eax
  41e6d1:	cmc    
  41e6d2:	sar    BYTE PTR [edx-0x1d],cl
  41e6d5:	fdiv   QWORD PTR [edi]
  41e6d7:	pop    esp
  41e6d8:	idiv   BYTE PTR [edi-0x41114351]
  41e6de:	xchg   edi,eax
  41e6df:	or     al,0x4a
  41e6e1:	cli    
  41e6e2:	and    BYTE PTR [esi-0x75],dh
  41e6e5:	shr    DWORD PTR [ecx+0x61],cl
  41e6e8:	pushf  
  41e6e9:	fisubr WORD PTR [edi+esi*1+0x2b]
  41e6ed:	outs   dx,DWORD PTR ds:[esi]
  41e6ee:	pop    ebp
  41e6ef:	mov    ds:0x544aa48c,al
  41e6f4:	jae    0x41e700
  41e6f6:	sbb    cl,bl
  41e6f8:	mov    BYTE PTR [eax-0x4b9ca7b9],al
  41e6fe:	es inc edx
  41e700:	add    eax,0x568d82e2
  41e705:	mov    ah,0x89
  41e707:	cld    
  41e708:	sti    
  41e709:	aad    0xde
  41e70b:	push   es
  41e70c:	mov    edx,0x5d7d979d
  41e711:	aam    0x3
  41e713:	sbb    ebx,DWORD PTR [edx]
  41e715:	mov    dl,0xc4
  41e717:	xchg   ebp,eax
  41e718:	leave  
  41e719:	jb     0x41e6b2
  41e71b:	into   
  41e71c:	jbe    0x41e718
  41e71e:	retf   0x9a7c
  41e721:	mov    esi,0xeee3fe9c
  41e726:	test   DWORD PTR [esi+edi*4+0x39],ecx
  41e72a:	inc    edi
  41e72b:	jecxz  0x41e76d
  41e72d:	sub    bh,BYTE PTR [edi+0x1d43ac8c]
  41e733:	dec    esi
  41e734:	imul   esp,DWORD PTR [esi-0x62],0xb81c19ee
  41e73b:	sbb    cl,0x79
  41e73e:	lods   eax,DWORD PTR ds:[esi]
  41e73f:	xchg   edi,eax
  41e740:	mov    bh,BYTE PTR [eax-0x122858cb]
  41e746:	jecxz  0x41e767
  41e748:	mov    bh,0x8f
  41e74a:	xchg   ecx,eax
  41e74b:	pop    ebx
  41e74c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e74d:	cmp    BYTE PTR [ebx],ah
  41e74f:	mov    WORD PTR [ebx+0x77921a3],cs
  41e755:	xor    ebp,DWORD PTR [ebp+0x2fd83086]
  41e75b:	push   0x146da265
  41e760:	cmp    al,0x36
  41e762:	add    cl,BYTE PTR [ebx-0x3a76198b]
  41e768:	aad    0x3e
  41e76a:	les    edx,FWORD PTR [eax-0x5b921681]
  41e770:	pop    ss
  41e771:	cmp    ecx,esp
  41e773:	pop    edi
  41e774:	stos   BYTE PTR es:[edi],al
  41e775:	mov    bh,0x56
  41e777:	mov    cl,0x36
  41e779:	jmp    0xf2a2:0xf00fb9bc
  41e780:	pop    eax
  41e781:	retf   0xddba
  41e784:	aaa    
  41e785:	and    esp,esi
  41e787:	jo     0x41e79b
  41e789:	ror    cl,0x9a
  41e78c:	mov    ah,0x4f
  41e78e:	jns    0x41e7bb
  41e790:	stos   BYTE PTR es:[edi],al
  41e791:	and    ebp,esi
  41e793:	or     ah,bl
  41e795:	push   eax
  41e796:	mov    dh,0x64
  41e798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e799:	loop   0x41e7ac
  41e79b:	mov    bh,0x76
  41e79d:	ja     0x41e7d8
  41e79f:	pusha  
  41e7a0:	mov    bh,0x61
  41e7a2:	mov    ss,WORD PTR fs:[ebp+0x7455dde7]
  41e7a9:	lods   al,BYTE PTR ds:[esi]
  41e7aa:	inc    BYTE PTR [eax]
  41e7ac:	ja     0x41e746
  41e7ae:	mov    ebp,0xd238db4e
  41e7b3:	retf   0x5cb1
  41e7b6:	das    
  41e7b7:	outs   dx,DWORD PTR ds:[esi]
  41e7b8:	jmp    0x4f57:0xdcf73d03
  41e7bf:	and    dl,cl
  41e7c1:	arpl   WORD PTR [edx-0x2738c2b4],cx
  41e7c7:	jo     0x41e7c1
  41e7c9:	pop    ebp
  41e7ca:	retf   0xdc9e
  41e7cd:	outs   dx,BYTE PTR ds:[esi]
  41e7ce:	jmp    0x41e775
  41e7d0:	push   ds
  41e7d1:	pavgw  mm7,QWORD PTR [ecx-0x2c]
  41e7d5:	fs cwde 
  41e7d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7d8:	lds    ebp,FWORD PTR [esi+0x77cd5b7b]
  41e7de:	cmp    al,0x27
  41e7e0:	aas    
  41e7e1:	in     eax,0x8c
  41e7e3:	pop    edi
  41e7e4:	aad    0x9c
  41e7e6:	sub    ah,cl
  41e7e8:	ins    DWORD PTR es:[edi],dx
  41e7e9:	loope  0x41e7c7
  41e7eb:	bnd jb 0x41e7ca
  41e7ee:	das    
  41e7ef:	cmp    DWORD PTR [edi+0x6b],0x73d6a5b5
  41e7f6:	fnsave [eax-0x4a]
  41e7f9:	mov    eax,0x1f90043c
  41e7fe:	out    0xfb,eax
  41e800:	stos   DWORD PTR es:[edi],eax
  41e801:	lahf   
  41e802:	in     eax,0xda
  41e804:	ror    DWORD PTR ds:0xbce0b195,0x34
  41e80b:	out    dx,al
  41e80c:	push   eax
  41e80d:	test   al,0x74
  41e80f:	outs   dx,BYTE PTR ds:[esi]
  41e810:	push   cs
  41e811:	and    eax,0xceabdb28
  41e816:	inc    ecx
  41e817:	mov    DWORD PTR fs:[ecx+eiz*2-0x65],0xbce336b6
  41e820:	mov    cl,0x77
  41e822:	scas   al,BYTE PTR es:[edi]
  41e823:	cmp    BYTE PTR [esi],bh
  41e825:	xchg   esp,eax
  41e826:	push   ss
  41e827:	jge    0x41e84a
  41e829:	push   esp
  41e82a:	jnp    0x41e837
  41e82c:	shr    BYTE PTR [edi],1
  41e82e:	dec    eax
  41e82f:	cmp    DWORD PTR [esi+0x4],0x89e3e1db
  41e836:	inc    edi
  41e837:	add    al,0x2c
  41e839:	or     eax,esp
  41e83b:	adc    eax,DWORD PTR [esp+edx*1]
  41e83e:	cmp    DWORD PTR [ebx+eax*2],eax
  41e841:	jg     0x41e82b
  41e843:	pop    ss
  41e844:	es loopne 0x41e895
  41e847:	cmc    
  41e848:	retf   
  41e849:	add    al,0x17
  41e84b:	lods   eax,DWORD PTR ds:[esi]
  41e84c:	xchg   ebp,eax
  41e84d:	dec    esp
  41e84e:	mov    edi,0x7f16348a
  41e853:	out    dx,al
  41e854:	retw   0xee20
  41e858:	je     0x41e884
  41e85a:	cmp    edi,DWORD PTR [edx*4-0x72c49bdf]
  41e861:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e862:	mov    BYTE PTR [ecx-0x22198f5f],al
  41e868:	retf   0x46bc
  41e86b:	sbb    al,0x9e
  41e86d:	or     cl,BYTE PTR [ebp+0x59]
  41e870:	fadd   st,st(0)
  41e872:	ret    
  41e873:	sbb    eax,0xa526beba
  41e878:	dec    esp
  41e879:	xor    eax,0xb6da45d
  41e87e:	rol    BYTE PTR [esi-0x39e87c22],0xb0
  41e885:	mov    ah,0xfe
  41e887:	sub    eax,0xd85b1f46
  41e88c:	jmp    0xe333bf15
  41e891:	or     eax,0xd20998c1
  41e896:	push   esi
  41e897:	pop    es
  41e898:	mov    esi,0x3e64de1e
  41e89d:	cmp    dl,dl
  41e89f:	xchg   esp,eax
  41e8a0:	xchg   edx,eax
  41e8a1:	enter  0xd8e6,0x51
  41e8a5:	push   edi
  41e8a6:	xor    eax,0x5723a30b
  41e8ab:	and    DWORD PTR [edi+0x30],0xffffffb0
  41e8af:	sub    al,0x30
  41e8b1:	retf   
  41e8b2:	cdq    
  41e8b3:	(bad)  
  41e8b4:	js     0x41e8ed
  41e8b6:	push   es
  41e8b7:	pop    eax
  41e8b8:	jmp    0x627e:0x46ba98a6
  41e8bf:	in     al,0x23
  41e8c1:	xor    eax,DWORD PTR [esi+edx*2-0x5d]
  41e8c5:	sbb    edx,ebp
  41e8c7:	cmc    
  41e8c8:	mov    BYTE PTR [edx+0x7e],dl
  41e8cb:	sub    eax,0xffffff9e
  41e8ce:	iret   
  41e8cf:	leave  
  41e8d0:	push   edx
  41e8d1:	adc    al,0x6f
  41e8d3:	lods   al,BYTE PTR ds:[esi]
  41e8d4:	pop    ss
  41e8d5:	outs   dx,DWORD PTR ds:[esi]
  41e8d6:	ins    DWORD PTR es:[edi],dx
  41e8d7:	xchg   edi,eax
  41e8d8:	cmc    
  41e8d9:	or     DWORD PTR [eax],ecx
  41e8db:	outs   dx,BYTE PTR ds:[esi]
  41e8dc:	(bad)  
  41e8dd:	dec    esi
  41e8de:	ficomp DWORD PTR [esi]
  41e8e0:	inc    ebp
  41e8e1:	call   0xd449f94f
  41e8e6:	loop   0x41e86e
  41e8e8:	pusha  
  41e8e9:	inc    eax
  41e8ea:	ins    BYTE PTR es:[edi],dx
  41e8eb:	xchg   ecx,eax
  41e8ec:	inc    edx
  41e8ed:	jl     0x41e94a
  41e8ef:	(bad)  
  41e8f0:	pop    ebp
  41e8f1:	jmp    0x41e896
  41e8f3:	std    
  41e8f4:	aaa    
  41e8f5:	js     0x41e88a
  41e8f7:	sti    
  41e8f8:	out    0xcb,eax
  41e8fa:	aad    0x20
  41e8fc:	das    
  41e8fd:	add    BYTE PTR [eax],al
  41e8ff:	add    BYTE PTR [eax],al
  41e901:	add    BYTE PTR [edi+0x78],bh
  41e904:	mov    ecx,0xffd5bf55
  41e909:	jp     0x41e931
  41e90b:	ret    0x676d
  41e90e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e90f:	push   edi
  41e910:	pushf  
  41e911:	ja     0x41e913
  41e913:	add    DWORD PTR fs:[eax],eax
  41e916:	repz add al,0x0
  41e919:	add    BYTE PTR [esi],dl
  41e91b:	call   0xf94e:0xee09be24
  41e922:	popf   
  41e923:	daa    
  41e924:	ds enter 0x54fd,0xbe
  41e929:	xchg   esi,eax
  41e92a:	(bad)  
  41e92b:	sahf   
  41e92c:	loope  0x41e976
  41e92e:	xchg   BYTE PTR [edx-0x6310234a],dl
  41e934:	mov    bl,0x38
  41e936:	(bad)  
  41e937:	pop    ecx
  41e938:	push   0x50
  41e93a:	pop    eax
  41e93b:	pop    ecx
  41e93c:	cmp    BYTE PTR [edx],0x4a
  41e93f:	jbe    0x41e9a1
  41e941:	or     ch,BYTE PTR [ecx-0x7865eaae]
  41e947:	mov    ds:0x697929b9,al
  41e94c:	mov    edx,0xd00eadd9
  41e951:	or     al,0x53
  41e953:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e954:	in     al,dx
  41e955:	stos   BYTE PTR es:[edi],al
  41e956:	mov    bh,0x95
  41e958:	repnz dec ecx
  41e95a:	in     al,0xb5
  41e95c:	dec    esp
  41e95d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e95e:	faddp  st(5),st
  41e960:	cli    
  41e961:	push   es
  41e962:	ds iret 
  41e964:	mov    ebp,0xab6a66f0
  41e969:	mov    edi,0xbd7beed8
  41e96e:	pop    ecx
  41e96f:	mov    ds:0xef45890b,al
  41e974:	push   esi
  41e975:	ss cld 
  41e977:	push   edi
  41e978:	dec    edi
  41e979:	push   edx
  41e97a:	add    ebp,DWORD PTR [eax]
  41e97c:	sub    ebp,ecx
  41e97e:	leave  
  41e97f:	dec    ebp
  41e980:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e981:	popf   
  41e982:	nop
  41e983:	jo     0x41e90f
  41e985:	pop    ecx
  41e986:	retf   0xe92f
  41e989:	jg     0x41e938
  41e98b:	jle    0x41e9cb
  41e98d:	adc    esp,DWORD PTR [ecx+0x78]
  41e990:	and    al,0x61
  41e992:	mov    ebx,0x2a268995
  41e997:	les    edx,FWORD PTR [ebx-0x35d4c4fd]
  41e99d:	cmp    BYTE PTR [eax-0x2699275c],0x7a
  41e9a4:	cs jns 0x41e99d
  41e9a7:	loop   0x41e9d8
  41e9a9:	je     0x41e9f0
  41e9ab:	push   0xfc955333
  41e9b0:	stos   DWORD PTR es:[edi],eax
  41e9b1:	not    BYTE PTR [edx+0x2eb5802a]
  41e9b7:	xchg   edx,eax
  41e9b8:	xor    al,BYTE PTR [ebx-0x7c5fd270]
  41e9be:	fst    DWORD PTR [ebp-0x3ad06b81]
  41e9c4:	sub    ch,ah
  41e9c6:	das    
  41e9c7:	dec    ebp
  41e9c8:	adc    BYTE PTR [ecx-0xb],al
  41e9cb:	out    0x32,eax
  41e9cd:	and    dl,BYTE PTR [edx]
  41e9cf:	push   ss
  41e9d0:	add    ecx,DWORD PTR [ebx+0x2e]
  41e9d3:	xchg   ebx,eax
  41e9d4:	xchg   esp,eax
  41e9d5:	fcom   QWORD PTR [ebp+0x799fd11]
  41e9db:	int3   
  41e9dc:	pop    esi
  41e9dd:	jg     0x41e9aa
  41e9df:	or     ebx,DWORD PTR [edx+0x71683ea9]
  41e9e5:	clc    
  41e9e6:	int3   
  41e9e7:	mov    eax,DWORD PTR [ecx]
  41e9e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9ea:	jl     0x41e9d9
  41e9ec:	jo     0x41e9a7
  41e9ee:	or     al,0x26
  41e9f0:	pop    ecx
  41e9f1:	imul   ebp,ecx,0xffffffa2
  41e9f4:	aaa    
  41e9f5:	push   esi
  41e9f6:	cmp    al,0xd7
  41e9f8:	xor    DWORD PTR [edx+0x46c164af],0xa43733c6
  41ea02:	xchg   ebx,eax
  41ea03:	mov    esp,0x40adb6be
  41ea08:	add    bl,dl
  41ea0a:	mov    ch,0xda
  41ea0c:	inc    edx
  41ea0d:	sbb    esp,DWORD PTR cs:[ebp-0x7f971808]
  41ea14:	rol    esi,1
  41ea16:	(bad)  
  41ea18:	les    esi,FWORD PTR [esi+0x4c]
  41ea1b:	in     eax,0xf6
  41ea1d:	push   ebx
  41ea1e:	das    
  41ea1f:	adc    esi,DWORD PTR [ebx]
  41ea21:	xor    eax,0x1ac9f497
  41ea26:	imul   esp,DWORD PTR [edx+eax*4-0x3],0xffffff97
  41ea2b:	fistp  DWORD PTR [esi+edi*1+0x4f]
  41ea2f:	mov    DWORD PTR [ecx+0x4e602a0f],ecx
  41ea35:	push   esp
  41ea36:	mul    DWORD PTR [ebp+ebp*8+0x5526ebb4]
  41ea3d:	arpl   WORD PTR [ecx],cx
  41ea3f:	xor    BYTE PTR [ecx-0x7ca318f8],bl
  41ea45:	or     ebp,DWORD PTR [esp+ecx*2]
  41ea48:	scas   al,BYTE PTR es:[edi]
  41ea49:	mov    DWORD PTR [eax],ebp
  41ea4b:	pop    edx
  41ea4c:	and    DWORD PTR [esi],ebx
  41ea4e:	lods   eax,DWORD PTR ds:[esi]
  41ea4f:	sbb    DWORD PTR [ecx],ebx
  41ea51:	xchg   edx,eax
  41ea52:	inc    ebp
  41ea53:	cmp    al,0xc0
  41ea55:	das    
  41ea56:	comiss xmm6,DWORD PTR [ebx+0x1951db0d]
  41ea5d:	rol    bl,cl
  41ea5f:	repz jae 0x41eab4
  41ea62:	push   edx
  41ea63:	jno    0x41ea86
  41ea65:	xor    cl,dl
  41ea67:	add    eax,0x4819257
  41ea6c:	inc    ebx
  41ea6d:	retf   0xfb3
  41ea70:	xchg   ebp,eax
  41ea71:	ficomp WORD PTR [eax]
  41ea73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea74:	ins    DWORD PTR es:[edi],dx
  41ea75:	fs dec eax
  41ea77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea78:	push   ebp
  41ea79:	mov    al,ds:0xd3728bc9
  41ea7e:	test   BYTE PTR [eax-0x6d627fdc],al
  41ea84:	xor    eax,0x3d8ceacc
  41ea89:	mov    eax,ds:0xdcec9e01
  41ea8e:	jne    0x41eafd
  41ea90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea91:	cmp    edx,0x614bc955
  41ea97:	repz in eax,0x94
  41ea9a:	dec    ebp
  41ea9b:	xor    ebp,0x3c
  41ea9e:	push   edx
  41ea9f:	(bad)  
  41eaa0:	(bad)  
  41eaa2:	(bad)  [ebx-0x10]
  41eaa5:	sub    eax,0x70a2e099
  41eaaa:	cld    
  41eaab:	fcomp  DWORD PTR [ecx+0x24]
  41eaae:	iret   
  41eaaf:	lahf   
  41eab0:	jbe    0x41ea88
  41eab2:	adc    DWORD PTR [eax],0x29c9ad11
  41eab8:	jbe    0x41ea58
  41eaba:	sub    BYTE PTR [edi],ch
  41eabc:	jne    0x41ea81
  41eabe:	mov    edi,0x7f6795d5
  41eac3:	hlt    
  41eac4:	or     BYTE PTR [eax-0x75],bh
  41eac7:	xor    al,0x7d
  41eac9:	out    0x94,eax
  41eacb:	ja     0x41eb3c
  41eacd:	shl    BYTE PTR [eax+edi*8-0x6c],1
  41ead1:	(bad)  
  41ead2:	lahf   
  41ead3:	mov    cl,0xc7
  41ead5:	pop    ecx
  41ead6:	push   es
  41ead7:	inc    eax
  41ead8:	adc    BYTE PTR [ebx+eax*8-0x5a],0x8c
  41eadd:	inc    esi
  41eade:	pop    ss
  41eadf:	mov    ebx,0x181e2f44
  41eae4:	push   0x6f1e5f5b
  41eae9:	dec    edi
  41eaea:	pop    ebp
  41eaeb:	sbb    eax,0x2272f8b0
  41eaf0:	jmp    0x8cf8:0x4c49294a
  41eaf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eaf8:	bound  edi,QWORD PTR [ebx+0x7eed900c]
  41eafe:	xchg   ebx,eax
  41eaff:	adc    al,0x91
  41eb01:	add    DWORD PTR [edx+0x295f3e92],0xdb033ce0
  41eb0b:	or     al,0x22
  41eb0d:	scas   eax,DWORD PTR es:[edi]
  41eb0e:	out    dx,al
  41eb0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb10:	add    BYTE PTR [esi],ah
  41eb12:	fidivr WORD PTR [eax+0x1004299]
  41eb18:	cmp    al,0x3b
  41eb1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb1b:	push   ss
  41eb1c:	mov    ebx,0xf33f4d8e
  41eb21:	cmp    DWORD PTR [ebp-0x2d3b25ab],esp
  41eb27:	aas    
  41eb28:	stc    
  41eb29:	xor    BYTE PTR [ebx-0x21],al
  41eb2c:	adc    eax,DWORD PTR [edx]
  41eb2e:	xor    al,0x24
  41eb30:	fdiv   QWORD PTR [esi+0x34d437c8]
  41eb36:	adc    ecx,DWORD PTR [edi+edx*1-0xfed084e]
  41eb3d:	add    eax,0x737ecefe
  41eb42:	lea    ecx,[esi-0x62]
  41eb45:	jge    0x41eb27
  41eb47:	xor    DWORD PTR [esi+0x35c7fd30],esi
  41eb4d:	push   ecx
  41eb4e:	popa   
  41eb4f:	fs stos BYTE PTR es:[edi],al
  41eb51:	je     0x41ead9
  41eb53:	imul   edi,DWORD PTR [esi+0x67],0xf7788f83
  41eb5a:	lods   eax,DWORD PTR ds:[esi]
  41eb5b:	push   ecx
  41eb5c:	push   esi
  41eb5d:	popa   
  41eb5e:	and    BYTE PTR ds:0xe321b4d7,al
  41eb64:	sub    eax,edi
  41eb66:	dec    edi
  41eb67:	dec    esp
  41eb68:	imul   ah
  41eb6a:	(bad)  
  41eb6b:	sub    dl,BYTE PTR [ecx-0x198d2d1b]
  41eb71:	leave  
  41eb72:	test   BYTE PTR [edx+0x38],bl
  41eb75:	adc    dl,bh
  41eb77:	int    0xac
  41eb79:	mov    bl,0x86
  41eb7b:	gs xchg esi,eax
  41eb7d:	xchg   BYTE PTR [eax-0x44134c95],bh
  41eb83:	rol    esp,cl
  41eb85:	sub    ecx,DWORD PTR [ecx+0x19]
  41eb88:	cmp    dh,BYTE PTR [edi]
  41eb8a:	lahf   
  41eb8b:	enter  0x515f,0x4b
  41eb8f:	xor    al,0xe2
  41eb91:	lods   eax,DWORD PTR ds:[esi]
  41eb92:	(bad)  
  41eb94:	aam    0x6f
  41eb96:	xchg   edx,eax
  41eb97:	inc    esi
  41eb98:	sar    ah,1
  41eb9a:	adc    eax,DWORD PTR [ecx]
  41eb9c:	sub    al,0x93
  41eb9e:	std    
  41eb9f:	mov    esp,ebp
  41eba1:	or     eax,0xa4005c22
  41eba6:	ja     0x41ebe2
  41eba8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eba9:	and    DWORD PTR [ecx],0xc79dc70f
  41ebaf:	out    dx,al
  41ebb0:	por    mm7,QWORD PTR [edx+0x2f]
  41ebb4:	aad    0x3d
  41ebb6:	push   cs
  41ebb7:	gs daa 
  41ebb9:	out    0xae,al
  41ebbb:	add    dl,BYTE PTR [eax+0x50cfa96e]
  41ebc1:	int    0xf6
  41ebc3:	pop    ds
  41ebc4:	out    0xf3,eax
  41ebc6:	in     eax,0x9f
  41ebc8:	jmp    0x9b57:0xf5fa5a53
  41ebcf:	mov    ebx,0xbc2fdba7
  41ebd4:	and    DWORD PTR [ebx+0x42186d21],eax
  41ebda:	or     eax,DWORD PTR [esi]
  41ebdc:	or     dh,bh
  41ebde:	cmp    edi,DWORD PTR [ecx]
  41ebe0:	pusha  
  41ebe1:	push   ebp
  41ebe2:	or     bl,dh
  41ebe4:	fbld   TBYTE PTR [esp+ebx*4]
  41ebe7:	bswap  esi
  41ebe9:	jmp    0x41ec3f
  41ebeb:	out    dx,eax
  41ebec:	adc    bh,BYTE PTR [ebx-0x39f0dc9c]
  41ebf2:	jb     0x41ebe4
  41ebf4:	sbb    eax,0x6836d3ea
  41ebf9:	mov    eax,ds:0x204b32a
  41ebfe:	stos   BYTE PTR es:[edi],al
  41ebff:	pop    edx
  41ec00:	pop    es
  41ec01:	stos   BYTE PTR es:[edi],al
  41ec02:	inc    ecx
  41ec03:	(bad)  
  41ec05:	push   esi
  41ec06:	xchg   ebp,eax
  41ec07:	das    
  41ec08:	dec    ebx
  41ec09:	or     edx,DWORD PTR [ecx+eax*8]
  41ec0c:	fnstenv [ecx+eiz*2+0x3c]
  41ec10:	mov    esi,0x79ddffe7
  41ec15:	jno    0x41ec31
  41ec17:	out    dx,al
  41ec18:	repnz das 
  41ec1a:	sub    al,0xcd
  41ec1c:	sub    BYTE PTR [ecx],cl
  41ec1e:	(bad)  
  41ec1f:	cld    
  41ec20:	sti    
  41ec21:	pop    ss
  41ec22:	cld    
  41ec23:	cmp    eax,0x259d2bb5
  41ec28:	(bad)  
  41ec29:	cs xchg edi,eax
  41ec2b:	sub    al,0x4e
  41ec2d:	test   eax,0xc6643213
  41ec32:	cmc    
  41ec33:	lea    ebp,[esi-0x22]
  41ec36:	jno    0x41ec6c
  41ec38:	mov    ecx,0xd3e683f5
  41ec3d:	idiv   DWORD PTR [ebx+0x527f271c]
  41ec43:	jl     0x41ec00
  41ec45:	inc    ebp
  41ec46:	ret    0x6240
  41ec49:	cmp    DWORD PTR [eax+0x7],edi
  41ec4c:	cld    
  41ec4d:	popf   
  41ec4e:	xchg   BYTE PTR [ebp-0x69f758d9],cl
  41ec54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec55:	fcomp  DWORD PTR [ecx]
  41ec57:	into   
  41ec58:	outs   dx,BYTE PTR ds:[esi]
  41ec59:	add    eax,0x364b17
  41ec5e:	mov    dl,0x6d
  41ec60:	pusha  
  41ec61:	push   cs
  41ec62:	mov    eax,ds:0x2516405d
  41ec67:	(bad)  
  41ec68:	stos   BYTE PTR es:[edi],al
  41ec69:	xchg   esp,eax
  41ec6a:	push   esp
  41ec6b:	push   cs
  41ec6c:	mov    ebp,0xb783cf4f
  41ec71:	cli    
  41ec72:	sbb    DWORD PTR [ecx],ebp
  41ec74:	jge    0x41ecf0
  41ec76:	idiv   DWORD PTR [esi+0x61f6013c]
  41ec7c:	cwde   
  41ec7d:	mov    cl,0x2e
  41ec7f:	daa    
  41ec80:	pushf  
  41ec81:	mov    ch,BYTE PTR [edx]
  41ec83:	bound  ebp,QWORD PTR [edi+0x4]
  41ec86:	frstor [ecx+0x79c48751]
  41ec8c:	mov    al,0xd6
  41ec8e:	adc    al,0x1b
  41ec90:	cli    
  41ec91:	mov    esp,ecx
  41ec93:	jg     0x41ecf7
  41ec95:	or     bl,bh
  41ec97:	inc    edx
  41ec98:	loopne 0x41ed00
  41ec9a:	aas    
  41ec9b:	jge    0x41ecf7
  41ec9d:	push   ecx
  41ec9e:	(bad)  
  41ec9f:	js     0x41ecda
  41eca1:	push   eax
  41eca2:	jns    0x41ec7a
  41eca4:	and    bl,BYTE PTR [esi-0x2e3b42e0]
  41ecaa:	jns    0x41ecc1
  41ecac:	(bad)  
  41ecad:	mov    esp,0x5c6e4600
  41ecb2:	xchg   ecx,eax
  41ecb3:	retf   
  41ecb4:	and    bl,BYTE PTR [edi]
  41ecb6:	out    0x50,al
  41ecb8:	fucomi st,st(5)
  41ecba:	pop    ebx
  41ecbb:	aad    0x92
  41ecbd:	adc    bh,BYTE PTR [esi-0x62]
  41ecc0:	aaa    
  41ecc1:	xchg   esp,eax
  41ecc2:	xor    ebx,DWORD PTR [ecx]
  41ecc4:	pop    edx
  41ecc5:	xchg   esi,eax
  41ecc6:	loopne 0x41ed30
  41ecc8:	mov    ds:0xc50d5f36,al
  41eccd:	test   eax,0x13a47f5a
  41ecd2:	popa   
  41ecd3:	shl    BYTE PTR [eax],cl
  41ecd5:	lds    eax,FWORD PTR [ebx-0x52d70aba]
  41ecdb:	scas   eax,DWORD PTR es:[edi]
  41ecdc:	mov    ecx,ebx
  41ecde:	outs   dx,DWORD PTR ds:[esi]
  41ecdf:	rcl    dl,0x45
  41ece2:	mov    bh,0xf3
  41ece4:	jo     0x41ed0c
  41ece6:	cmp    eax,0x4355e793
  41eceb:	cmp    al,0x7f
  41eced:	popf   
  41ecee:	mov    esp,0xe3ba7e43
  41ecf3:	or     BYTE PTR [esi-0x56],dl
  41ecf6:	(bad)  
  41ecf7:	ja     0x41ed63
  41ecf9:	push   ecx
  41ecfa:	int    0xd3
  41ecfc:	addr16 push cs
  41ecfe:	inc    edi
  41ecff:	push   ds
  41ed00:	(bad)
  41ed03:	test   eax,0x374788b3
  41ed08:	push   edx
  41ed09:	retf   0xe248
  41ed0c:	fsubrp st(2),st
  41ed0e:	inc    esp
  41ed0f:	and    esi,ecx
  41ed11:	in     al,0x8a
  41ed13:	mov    ch,0x30
  41ed15:	idiv   DWORD PTR [ebp+0x3b]
  41ed18:	clc    
  41ed19:	inc    ecx
  41ed1a:	test   DWORD PTR [ebx+0x57a934f9],edx
  41ed20:	push   esp
  41ed21:	add    al,0xab
  41ed23:	pop    ds
  41ed24:	or     BYTE PTR [esi-0x1015aec3],dh
  41ed2a:	test   eax,0xd1f8eed2
  41ed2f:	inc    esi
  41ed30:	jmp    ebx
  41ed32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed33:	inc    esi
  41ed34:	jge    0x41ed32
  41ed36:	and    eax,0xd33c74c4
  41ed3b:	(bad)  [edx]
  41ed3d:	(bad)  
  41ed3e:	loope  0x41ed28
  41ed40:	jns    0x41ed1a
  41ed42:	jno    0x41ed2c
  41ed44:	repnz cmp eax,DWORD PTR [eax]
  41ed47:	inc    edx
  41ed48:	mov    ds:0x400df919,eax
  41ed4d:	jbe    0x41ed0a
  41ed4f:	xchg   DWORD PTR [eax],esp
  41ed51:	dec    ecx
  41ed52:	and    ebp,ebx
  41ed54:	push   edx
  41ed55:	push   edi
  41ed56:	pop    eax
  41ed57:	mov    eax,0xdf42bd8a
  41ed5c:	retf   0x5987
  41ed5f:	mov    ebx,eax
  41ed61:	xchg   edi,eax
  41ed62:	xor    BYTE PTR [esi-0x17d61df0],ch
  41ed68:	inc    esi
  41ed69:	es iret 
  41ed6b:	fist   DWORD PTR [esi-0x23]
  41ed6e:	jne    0x41ed93
  41ed70:	clc    
  41ed71:	inc    esp
  41ed72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed73:	jbe    0x41edc7
  41ed75:	add    BYTE PTR [ecx],bh
  41ed77:	retf   
  41ed78:	push   esi
  41ed79:	retf   
  41ed7a:	jmp    DWORD PTR ds:0xff3a8b71
  41ed80:	popa   
  41ed81:	ficom  WORD PTR [eax+0x6d20bc93]
  41ed87:	lahf   
  41ed88:	or     al,0x8a
  41ed8a:	xor    al,0x4
  41ed8c:	add    DWORD PTR [edx+0x19],esp
  41ed8f:	fbstp  TBYTE PTR [edx+0x3b]
  41ed92:	mov    ebp,0xae58de5c
  41ed97:	cmp    eax,0xfc83a3f5
  41ed9c:	das    
  41ed9d:	sbb    DWORD PTR [edi-0x33],ebp
  41eda0:	mov    gs,WORD PTR [edx]
  41eda2:	in     eax,dx
  41eda3:	(bad)  [ecx]
  41eda5:	mov    eax,DWORD PTR [ebx]
  41eda7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eda8:	repnz sub DWORD PTR [ebp+0x3e8154f0],edi
  41edaf:	and    eax,0xe3073af6
  41edb4:	add    DWORD PTR [edx+esi*8+0x46253ccc],edi
  41edbb:	aad    0x21
  41edbd:	jns    0x41ed61
  41edbf:	data16 jnp 0x41edc1
  41edc2:	and    al,dl
  41edc4:	xor    al,0xd8
  41edc6:	pusha  
  41edc7:	out    dx,eax
  41edc8:	loope  0x41ee2d
  41edca:	mov    al,0x36
  41edcc:	(bad)  
  41edcd:	mov    BYTE PTR [ebp-0x36],cl
  41edd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edd1:	bound  edx,QWORD PTR [esi+ecx*8-0x9]
  41edd5:	push   ebp
  41edd6:	outs   dx,BYTE PTR ds:[esi]
  41edd7:	xchg   ebx,eax
  41edd8:	inc    ebx
  41edd9:	pushf  
  41edda:	jo     0x41edfb
  41eddc:	fidiv  DWORD PTR [eax+edi*8+0x7c06d501]
  41ede3:	adc    eax,0x74370633
  41ede8:	ret    
  41ede9:	sub    al,0x9
  41edeb:	push   ss
  41edec:	push   es
  41eded:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edee:	mov    edi,DWORD PTR [edx+0x5316482c]
  41edf4:	aam    0xf6
  41edf6:	mov    edi,fs
  41edf8:	and    ah,dh
  41edfa:	ja     0x41ee07
  41edfc:	in     al,0x55
  41edfe:	test   edi,ebp
  41ee00:	mov    edx,0x65e8d0ff
  41ee05:	push   ebx
  41ee06:	pusha  
  41ee07:	pop    ss
  41ee08:	int    0x6d
  41ee0a:	add    DWORD PTR [ebx],esi
  41ee0c:	sldt   WORD PTR [eax]
  41ee0f:	add    BYTE PTR [eax],al
  41ee11:	add    BYTE PTR [edx+0x51],dl
  41ee14:	cmp    BYTE PTR [ebx],al
  41ee16:	cmp    ebp,DWORD PTR [ebx+0x7b]
  41ee19:	push   ecx
  41ee1a:	pop    edx
  41ee1b:	mov    ch,0xf5
  41ee1d:	lahf   
  41ee1e:	sub    DWORD PTR [edx+0x68f34f85],esi
  41ee24:	add    DWORD PTR [eax],eax
  41ee26:	repz add al,0x0
  41ee29:	add    dl,dl
  41ee2b:	sub    bl,BYTE PTR [ecx]
  41ee2d:	cld    
  41ee2e:	sub    ecx,DWORD PTR [esp+esi*4+0x6b0218ca]
  41ee35:	sub    al,0xc1
  41ee37:	adc    al,0x49
  41ee39:	fild   DWORD PTR [ebp+ecx*1-0x6879fba7]
  41ee40:	jbe    0x41eeb0
  41ee42:	pop    edi
  41ee43:	sti    
  41ee44:	mov    al,ds:0x27639be8
  41ee49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee4a:	push   ebx
  41ee4b:	in     eax,dx
  41ee4c:	pop    ds
  41ee4d:	(bad)  [eax+0x360534a7]
  41ee53:	push   es
  41ee54:	aas    
  41ee55:	cmp    eax,0x8d31ab62
  41ee5a:	mov    bl,0x8a
  41ee5c:	fst    QWORD PTR [eax-0x5279da]
  41ee62:	xor    BYTE PTR [esi+0x6fba1de7],ch
  41ee68:	loopne 0x41ee70
  41ee6a:	mov    al,ds:0x878a886c
  41ee6f:	dec    esi
  41ee70:	sub    DWORD PTR [esi+0x74],esp
  41ee73:	scas   al,BYTE PTR es:[edi]
  41ee74:	pop    es
  41ee75:	sbb    al,0x8a
  41ee77:	add    eax,0x84769595
  41ee7c:	fidiv  DWORD PTR [edx-0x59d2d9e0]
  41ee82:	js     0x41eec1
  41ee84:	mov    al,ds:0x43ecb0d2
  41ee89:	mov    ?,WORD PTR [ebx]
  41ee8b:	imul   edi,eax,0x568ead3c
  41ee91:	fcomp  DWORD PTR [edx+eiz*2]
  41ee94:	fcmovbe st,st(6)
  41ee96:	loopne 0x41eedf
  41ee98:	jb     0x41eed3
  41ee9a:	xchg   ebp,eax
  41ee9b:	loopne 0x41ee1f
  41ee9d:	cwde   
  41ee9e:	mov    ch,0x30
  41eea0:	inc    eax
  41eea1:	aas    
  41eea2:	mov    ds:0x5497d05f,al
  41eea7:	rol    ah,cl
  41eea9:	hlt    
  41eeaa:	ret    0x88b1
  41eead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eeae:	xchg   esp,eax
  41eeaf:	ins    BYTE PTR es:[edi],dx
  41eeb0:	add    DWORD PTR [edi-0x46640ce6],edx
  41eeb6:	sar    bl,cl
  41eeb8:	mov    DWORD PTR [ebx-0x1f],eax
  41eebb:	ret    
  41eebc:	mov    ebp,0xe1fd7194
  41eec1:	mov    ch,0xed
  41eec3:	xchg   ebp,eax
  41eec4:	lods   al,BYTE PTR ds:[esi]
  41eec5:	out    0xec,al
  41eec7:	sbb    DWORD PTR [edx-0x29],0x71d69c6e
  41eece:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eecf:	test   edx,esp
  41eed1:	xor    cl,al
  41eed3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eed4:	push   0x2
  41eed6:	out    dx,al
  41eed7:	das    
  41eed8:	adc    BYTE PTR [edi-0x4d7b6c6e],dh
  41eede:	arpl   WORD PTR [ebp+0x7b],sp
  41eee1:	clc    
  41eee2:	aam    0x65
  41eee4:	ffree  st(7)
  41eee6:	add    ecx,esp
  41eee8:	push   cs
  41eee9:	into   
  41eeea:	xchg   ecx,eax
  41eeeb:	jg     0x41ee75
  41eeed:	mov    eax,ds:0xf369d2f2
  41eef2:	and    edx,DWORD PTR [ecx]
  41eef4:	loop   0x41ef50
  41eef6:	inc    dx
  41eef8:	ja     0x41ef14
  41eefa:	cmp    eax,0x3c43f370
  41eeff:	mov    edx,ebp
  41ef01:	jno    0x41ef2c
  41ef03:	das    
  41ef04:	jb     0x41ef15
  41ef06:	in     eax,dx
  41ef07:	mov    ah,0xe2
  41ef09:	sti    
  41ef0a:	sbb    eax,DWORD PTR [edx+0x36b0df86]
  41ef10:	add    DWORD PTR [ebp-0x13],edx
  41ef13:	ds mov eax,0x7b5509b4
  41ef19:	adc    ebx,edx
  41ef1b:	pusha  
  41ef1c:	(bad)  
  41ef1d:	and    eax,0xb79184e6
  41ef22:	sbb    al,0xf7
  41ef25:	fbld   TBYTE PTR [edi+0x7b]
  41ef28:	out    0x5a,eax
  41ef2a:	jecxz  0x41eee1
  41ef2c:	das    
  41ef2d:	sub    eax,DWORD PTR [ecx+0x33b17ea9]
  41ef33:	mov    edx,0xd37913f3
  41ef38:	pop    ebx
  41ef39:	mov    ebp,0x4ddd327b
  41ef3e:	adc    edx,eax
  41ef40:	and    eax,0x9453b709
  41ef45:	addr16 push ecx
  41ef47:	dec    ebp
  41ef48:	mov    BYTE PTR [ecx+0x1f1079a],dl
  41ef4e:	je     0x41ef22
  41ef50:	fdivr  QWORD PTR [ebx+0x2c]
  41ef53:	and    ebx,ebp
  41ef55:	call   0xc87b:0x146e641c
  41ef5c:	add    BYTE PTR [ebp-0x7f],0x9f
  41ef60:	arpl   si,bx
  41ef62:	mov    cl,0xa8
  41ef64:	mov    eax,0xca0cbe5f
  41ef69:	shl    DWORD PTR [ecx],cl
  41ef6b:	sbb    al,0x53
  41ef6d:	cmp    DWORD PTR cs:[edx+0x5a2d042],0x3a
  41ef75:	fcomp  QWORD PTR [ebx+0x48]
  41ef78:	clc    
  41ef79:	inc    edi
  41ef7a:	fdiv   QWORD PTR [eax-0x1]
  41ef7d:	push   ebx
  41ef7e:	test   al,0x8d
  41ef80:	mov    eax,ecx
  41ef82:	sbb    al,0x3c
  41ef84:	add    BYTE PTR [ebp-0x2b47c12f],ah
  41ef8a:	cmp    edx,ecx
  41ef8c:	push   esp
  41ef8d:	ins    DWORD PTR es:[edi],dx
  41ef8e:	pop    ecx
  41ef8f:	push   esp
  41ef90:	in     ax,dx
  41ef92:	add    eax,0x2ad9a76b
  41ef97:	jl     0x41efd7
  41ef99:	ds jbe 0x41ef7d
  41ef9c:	inc    ecx
  41ef9d:	push   edi
  41ef9e:	fiadd  WORD PTR ds:0x9752ed5e
  41efa4:	(bad)  
  41efa5:	aam    0x93
  41efa7:	test   dh,ch
  41efa9:	add    esi,DWORD PTR [ebp+eax*8-0x4e]
  41efad:	sbb    bl,BYTE PTR [esi+0x15cdafef]
  41efb3:	cli    
  41efb4:	sub    eax,0xba828aad
  41efb9:	popf   
  41efba:	mov    bl,bh
  41efbc:	ret    0xea87
  41efbf:	dec    edi
  41efc0:	adc    ecx,DWORD PTR [edi]
  41efc2:	mov    ebx,0x6060b2a5
  41efc7:	sub    ecx,DWORD PTR [edi+0x2f6d2694]
  41efcd:	mov    eax,ds:0xa7c6d98e
  41efd2:	out    0x63,al
  41efd4:	mov    eax,ds:0x877b8d88
  41efd9:	mov    edi,0x8a7a550
  41efde:	mov    cl,0x6b
  41efe0:	mov    esi,0xfa718a08
  41efe5:	aad    0xf2
  41efe7:	sub    DWORD PTR [eax],0xd66c91d9
  41efed:	rol    ah,cl
  41efef:	addr16 retf 
  41eff1:	pop    esi
  41eff2:	sbb    edx,DWORD PTR [esp+ecx*4]
  41eff5:	adc    BYTE PTR [ecx],bh
  41eff7:	mov    ecx,DWORD PTR [edi+0x73b10ca]
  41effd:	cmp    al,ch
  41efff:	jne    0x41f03d
  41f001:	adc    ebp,DWORD PTR [esi-0x5dac4042]
  41f007:	xor    BYTE PTR [ebx],bh
  41f009:	mov    dl,0x49
  41f00b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f00c:	loopne 0x41efe9
  41f00e:	popf   
  41f00f:	add    esp,DWORD PTR [ebp+esi*2+0x797c0ef8]
  41f016:	std    
  41f017:	xor    al,0x3d
  41f019:	mov    dh,0x42
  41f01b:	and    al,0x14
  41f01d:	jg     0x41f069
  41f01f:	inc    edi
  41f020:	into   
  41f021:	inc    esp
  41f022:	fucomp st(5)
  41f024:	mov    dh,0x6a
  41f026:	xchg   DWORD PTR [esi-0x40],edi
  41f029:	test   dl,ch
  41f02b:	bound  esp,QWORD PTR [ebp-0x1002b06a]
  41f031:	outs   dx,BYTE PTR ds:[esi]
  41f032:	test   edi,esp
  41f034:	imul   ebx,DWORD PTR [ecx-0x5e22463a],0x11
  41f03b:	jns    0x41eff5
  41f03d:	imul   ebp,esp,0x69
  41f040:	sub    DWORD PTR [edi],edx
  41f042:	xor    ebp,DWORD PTR [ebp-0x7e67737c]
  41f048:	fistp  DWORD PTR [esp+0x3c1d0a5d]
  41f04f:	(bad)  
  41f050:	in     al,dx
  41f051:	push   0x12
  41f053:	cmp    edx,ebx
  41f055:	repnz inc edx
  41f057:	inc    esp
  41f058:	jmp    0x501ade95
  41f05d:	ret    
  41f05e:	fwait
  41f05f:	inc    ebx
  41f060:	ret    
  41f061:	aad    0xdd
  41f063:	cld    
  41f064:	ja     0x41f082
  41f066:	nop
  41f067:	mov    edx,0x9a50f12c
  41f06c:	(bad)  
  41f06e:	push   esp
  41f06f:	push   edx
  41f070:	arpl   WORD PTR [edi+0x676a14ab],bp
  41f076:	push   eax
  41f077:	mov    esi,0xa5b6841f
  41f07c:	sub    al,0x41
  41f07e:	sbb    esp,eax
  41f080:	cld    
  41f081:	shl    DWORD PTR [ebx+0x42],1
  41f084:	sub    DWORD PTR [ebx-0x6ef867ca],ebx
  41f08a:	ins    BYTE PTR es:[edi],dx
  41f08b:	imul   esi,DWORD PTR [esi],0x32d4cf38
  41f091:	fiadd  WORD PTR [esi]
  41f093:	mov    esi,0x4cce4a58
  41f098:	lods   eax,DWORD PTR ds:[esi]
  41f099:	imul   edx,DWORD PTR [ebx+0x18],0x26
  41f09d:	mov    bl,0x39
  41f09f:	stos   BYTE PTR es:[edi],al
  41f0a0:	mov    ebx,0xa3f3fa4f
  41f0a5:	imul   eax,DWORD PTR ds:0xa0a50738,0x7e12ce4f
  41f0af:	ss mov edx,DWORD PTR ss:[ecx-0xc3c26d3]
  41f0b7:	mov    WORD PTR es:[esi],es
  41f0ba:	cs inc ebx
  41f0bc:	adc    eax,0xb6301da5
  41f0c1:	inc    DWORD PTR [eax+0x5d]
  41f0c4:	lahf   
  41f0c5:	adc    eax,ebp
  41f0c7:	fst    QWORD PTR [esi-0x4011422d]
  41f0cd:	pop    eax
  41f0ce:	je     0x41f05f
  41f0d0:	fisttp QWORD PTR [eax-0x23]
  41f0d3:	int    0xe0
  41f0d5:	hlt    
  41f0d6:	mov    ds:0x3700a75d,al
  41f0db:	sbb    bh,BYTE PTR [eax-0x33b207fd]
  41f0e1:	adc    ebx,DWORD PTR [ecx+eiz*1+0x5d87d295]
  41f0e8:	cmp    BYTE PTR [edi-0x404c7e4e],ah
  41f0ee:	adc    DWORD PTR [edx+eiz*1-0x74bfa809],0x19
  41f0f6:	in     eax,dx
  41f0f7:	pop    ebx
  41f0f8:	jle    0x41f15b
  41f0fa:	xor    eax,0x81d6cb8b
  41f0ff:	inc    esp
  41f100:	jae    0x41f0fb
  41f102:	jns    0x41f135
  41f104:	dec    ecx
  41f105:	stc    
  41f106:	fadd   DWORD PTR [edi+esi*8-0xbe0f0a5]
  41f10d:	(bad)  
  41f10f:	adc    BYTE PTR [edx],ah
  41f111:	cli    
  41f112:	dec    edi
  41f113:	sti    
  41f114:	sbb    eax,DWORD PTR [eax]
  41f116:	sub    al,0xf3
  41f118:	and    al,dl
  41f11a:	mov    DWORD PTR [ebx+esi*1+0x62],ecx
  41f11e:	hlt    
  41f11f:	push   edi
  41f120:	jmp    0x48ab:0xe4fa6901
  41f127:	dec    edx
  41f128:	push   edi
  41f129:	push   ss
  41f12a:	rcr    DWORD PTR ss:[eax+0x3da8a1bb],0x18
  41f132:	inc    edi
  41f133:	sub    BYTE PTR [edi+0xa],cl
  41f136:	fwait
  41f137:	aaa    
  41f138:	(bad)
  41f13b:	(bad)  
  41f13c:	clc    
  41f13d:	mov    ebx,DWORD PTR [eax+ebx*2]
  41f140:	mov    ch,0x26
  41f142:	jnp    0x41f1ab
  41f144:	stc    
  41f145:	cdq    
  41f146:	cmp    eax,0x6a74d755
  41f14b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f14c:	inc    edx
  41f14d:	je     0x41f1b4
  41f14f:	shl    BYTE PTR [eiz*4+0x1690d9b7],cl
  41f156:	in     eax,0xd5
  41f158:	dec    edi
  41f159:	mov    ah,0x2e
  41f15b:	mov    ds:0x2d21e792,eax
  41f160:	dec    eax
  41f161:	fidivr DWORD PTR [esi+0x3168421b]
  41f167:	xlat   BYTE PTR ds:[ebx]
  41f168:	(bad)  
  41f169:	jno    0x41f163
  41f16b:	rcl    BYTE PTR [esp+ebx*8],1
  41f16e:	pop    ecx
  41f16f:	push   esi
  41f170:	in     al,0x19
  41f172:	arpl   WORD PTR [edx+0x58948d0],si
  41f178:	daa    
  41f179:	xchg   edx,eax
  41f17a:	scas   eax,DWORD PTR es:[edi]
  41f17b:	shr    DWORD PTR [edx-0x2de1f4f9],0x16
  41f182:	mov    DWORD PTR fs:[edi],edx
  41f185:	scas   al,BYTE PTR es:[edi]
  41f186:	ins    DWORD PTR es:[edi],dx
  41f187:	js     0x41f1e0
  41f189:	test   eax,0x446dd8cb
  41f18e:	mov    ebp,0x702f6e18
  41f193:	xlat   BYTE PTR ds:[ebx]
  41f194:	jle    0x41f12b
  41f196:	arpl   WORD PTR [eax],ax
  41f198:	mov    ds:0x58c7212e,eax
  41f19d:	jne    0x41f212
  41f19f:	popa   
  41f1a0:	js     0x41f1b8
  41f1a2:	test   al,0xb
  41f1a4:	cwde   
  41f1a5:	adc    ebx,DWORD PTR [edi]
  41f1a7:	xor    esp,DWORD PTR [esi]
  41f1a9:	xchg   edi,eax
  41f1aa:	pop    edx
  41f1ab:	out    dx,al
  41f1ac:	and    DWORD PTR [edi],esp
  41f1ae:	pmulhw mm7,mm5
  41f1b1:	(bad)  
  41f1b3:	test   DWORD PTR [eax+0x15],0xecef1600
  41f1ba:	les    eax,FWORD PTR [ebx+0x19]
  41f1bd:	pop    edi
  41f1be:	cmp    al,0xd4
  41f1c0:	lock xlat BYTE PTR ds:[ebx]
  41f1c3:	fistp  QWORD PTR [eax-0x44]
  41f1c6:	aaa    
  41f1c7:	je     0x41f1f5
  41f1c9:	xor    DWORD PTR [ecx],esi
  41f1cb:	ds dec ecx
  41f1cd:	in     al,0x4
  41f1cf:	mov    bh,0x2d
  41f1d1:	jmp    0x428d:0x12838726
  41f1d8:	dec    esp
  41f1d9:	pop    ecx
  41f1da:	into   
  41f1db:	mov    ch,0xd3
  41f1dd:	jno    0x41f1ab
  41f1df:	mov    ds:0x488ecd23,eax
  41f1e4:	inc    edx
  41f1e5:	mov    dh,0x30
  41f1e7:	shr    DWORD PTR [eax+0x5f],cl
  41f1ea:	pop    esp
  41f1eb:	fidiv  WORD PTR [eax-0x35]
  41f1ee:	test   al,0x2
  41f1f0:	mov    eax,0x4c236d04
  41f1f5:	xor    DWORD PTR [ecx],ecx
  41f1f7:	jmp    0x41f26f
  41f1f9:	sbb    DWORD PTR [ecx],0x76
  41f1fc:	jb     0x41f17f
  41f1fe:	jns    0x41f268
  41f200:	sub    cl,BYTE PTR [eax+ecx*2-0x2056d4dc]
  41f207:	cmp    bh,BYTE PTR [edi-0x79]
  41f20a:	fmulp  st(4),st
  41f20c:	cmp    bh,BYTE PTR [ebx]
  41f20e:	ins    BYTE PTR es:[edi],dx
  41f20f:	cld    
  41f210:	and    eax,0x52f923f8
  41f215:	lock bound ecx,QWORD PTR [esi-0x1e]
  41f219:	retf   
  41f21a:	pop    edx
  41f21b:	sub    edi,DWORD PTR [ecx+0x10b8ad46]
  41f221:	sub    cl,ch
  41f223:	cwde   
  41f224:	std    
  41f225:	fstp   QWORD PTR ds:[ebx]
  41f228:	cmc    
  41f229:	or     eax,0x20389ff8
  41f22e:	ja     0x41f22e
  41f230:	mov    DWORD PTR [ebp-0x20a662f1],0x5771afc3
  41f23a:	mov    eax,0x4fe97914
  41f23f:	pop    ecx
  41f240:	adc    BYTE PTR [edx+edx*2+0x1aa8fc87],0x7
  41f248:	pop    eax
  41f249:	cmp    dh,BYTE PTR [ebx]
  41f24b:	retf   0xaaec
  41f24e:	add    eax,0x20954f0
  41f253:	test   esi,0xa86d1ddc
  41f259:	ror    BYTE PTR [edx],cl
  41f25b:	mov    bh,0x60
  41f25d:	shl    BYTE PTR [edx-0x4a3e7e3c],0x51
  41f264:	or     BYTE PTR [ecx],bh
  41f266:	and    al,0xaa
  41f268:	xlat   BYTE PTR ds:[ebx]
  41f269:	pop    es
  41f26a:	and    eax,0x7c042763
  41f26f:	adc    eax,0x4ece55b8
  41f274:	jne    0x41f257
  41f276:	push   es
  41f277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f278:	sbb    ah,ch
  41f27a:	rcl    DWORD PTR [edx+0x8],1
  41f27d:	loope  0x41f2b8
  41f27f:	loope  0x41f2fa
  41f281:	pop    esp
  41f282:	xor    DWORD PTR [ebx+ebp*2+0x34],ebp
  41f286:	ror    BYTE PTR [ecx+0x8eb3242],1
  41f28c:	inc    ebp
  41f28d:	daa    
  41f28e:	(bad)  
  41f28f:	int3   
  41f290:	repz js 0x41f219
  41f293:	and    ecx,DWORD PTR [edx+0x3843c9aa]
  41f299:	fbstp  TBYTE PTR [ebx+edi*2-0x7d331c3a]
  41f2a0:	cs mov esi,0xe7ea75c3
  41f2a6:	pop    ecx
  41f2a7:	sub    bl,al
  41f2a9:	add    al,0x46
  41f2ab:	xchg   ecx,eax
  41f2ac:	add    ecx,edi
  41f2ae:	sbb    DWORD PTR [eax-0x75],edi
  41f2b1:	or     al,0x5d
  41f2b3:	(bad)  
  41f2b4:	cmp    al,0x1
  41f2b6:	sub    dl,BYTE PTR [ebx+0x28e32ab4]
  41f2bc:	fcomp  DWORD PTR [eax+0x1c]
  41f2bf:	add    DWORD PTR [esi-0xe],ebx
  41f2c2:	rol    DWORD PTR [esi+0x78],cl
  41f2c5:	jmp    0x162d0218
  41f2ca:	iret   
  41f2cb:	call   0xcbb2:0x189368c0
  41f2d2:	repnz pop es
  41f2d4:	xor    BYTE PTR [ecx+0x3ce89311],al
  41f2da:	adc    eax,DWORD PTR [esi]
  41f2dc:	adc    DWORD PTR [ebx-0x19064cc4],esp
  41f2e2:	retf   0x44d1
  41f2e5:	mov    ebp,0xaf713bad
  41f2ea:	fs mov dl,0x64
  41f2ed:	add    edi,ebp
  41f2ef:	in     eax,dx
  41f2f0:	sbb    edx,DWORD PTR [ebp+0x67]
  41f2f3:	test   eax,0x8959e14f
  41f2f8:	(bad)  
  41f2f9:	mov    dl,0x43
  41f2fb:	push   ss
  41f2fc:	pop    eax
  41f2fd:	sbb    al,0x79
  41f2ff:	cmp    al,0x18
  41f301:	cld    
  41f302:	mov    ds:0x486412bb,eax
  41f308:	mov    al,ds:0xc27af23a
  41f30d:	sub    dh,bh
  41f30f:	jo     0x41f325
  41f311:	mov    ds:0x7ea544ba,eax
  41f316:	lahf   
  41f317:	mov    ds:0xdfd31d12,al
  41f31c:	lock add BYTE PTR [eax],al
  41f31f:	add    BYTE PTR [eax],al
  41f321:	add    BYTE PTR [ebx],ch
  41f323:	mov    eax,ds:0xf6cb1443
  41f328:	jg     0x41f2e9
  41f32a:	test   ch,ch
  41f32c:	out    dx,al
  41f32d:	sbb    BYTE PTR [edi],0xc2
  41f330:	ja     0x41f3a3
  41f332:	out    0x6d,al
  41f334:	add    DWORD PTR [eax],eax
  41f336:	repz add al,0x0
  41f339:	add    BYTE PTR ds:0xa30860c8,cl
  41f33f:	xchg   esp,eax
  41f340:	mov    ah,0x61
  41f342:	cwde   
  41f343:	data16 or BYTE PTR [ebp+0x7041ae6d],0xeb
  41f34b:	add    al,0x66
  41f34d:	lea    ecx,[esi+0x5e]
  41f350:	jb     0x41f350
  41f352:	dec    ebp
  41f353:	cmp    DWORD PTR [ecx-0x69e0b33],eax
  41f359:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f35a:	not    DWORD PTR [ecx]
  41f35c:	rcl    BYTE PTR [ebx-0x1cce179a],0x6f
  41f363:	out    0x7a,eax
  41f365:	out    dx,al
  41f366:	arpl   WORD PTR [eax],bp
  41f368:	arpl   WORD PTR [ebp-0x22],bp
  41f36b:	mov    al,ds:0xa30a8ecc
  41f370:	or     DWORD PTR [eax+0x17],eax
  41f373:	es push ss
  41f375:	mov    cl,0x91
  41f377:	and    BYTE PTR [esp+ebx*2-0x2b],al
  41f37b:	xchg   BYTE PTR [ecx-0x56],dl
  41f37e:	cmp    eax,0x652b3f1b
  41f383:	test   BYTE PTR [ecx+0x6f6beea7],0xe7
  41f38a:	test   al,0xc8
  41f38c:	add    ebx,DWORD PTR [edi+ebx*8+0x2d]
  41f390:	ja     0x41f35d
  41f392:	les    edx,FWORD PTR [esi+0x26c07ea4]
  41f398:	push   ecx
  41f399:	adc    al,BYTE PTR [ecx+ecx*4-0xbe8c04b]
  41f3a0:	xchg   BYTE PTR [ebx+0x29],dl
  41f3a3:	es je  0x41f3be
  41f3a6:	mov    cs,WORD PTR [esi]
  41f3a8:	ds xchg ebx,eax
  41f3aa:	das    
  41f3ab:	ins    BYTE PTR es:[edi],dx
  41f3ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3ad:	dec    ebx
  41f3ae:	in     eax,dx
  41f3af:	cld    
  41f3b0:	(bad)  
  41f3b1:	cs push ecx
  41f3b3:	scas   eax,DWORD PTR es:[edi]
  41f3b4:	or     eax,0xec60b7e9
  41f3b9:	pop    DWORD PTR [ebx-0x1d]
  41f3bc:	inc    esp
  41f3bd:	add    DWORD PTR [ebx-0x3b],esi
  41f3c0:	fiadd  DWORD PTR [esi-0xb0d961]
  41f3c6:	loopne 0x41f37e
  41f3c8:	jb     0x41f39f
  41f3ca:	test   eax,0xbd779279
  41f3cf:	in     eax,0xed
  41f3d1:	cmp    bh,cl
  41f3d3:	pop    edi
  41f3d4:	sbb    eax,0x7cb01317
  41f3d9:	pop    esi
  41f3da:	jmp    0x4344adcd
  41f3df:	add    esi,DWORD PTR [edx+0x69]
  41f3e2:	retf   
  41f3e3:	mov    BYTE PTR [edx+0x48e29429],bl
  41f3e9:	sbb    eax,0x63af7a50
  41f3ee:	xlat   BYTE PTR ds:[ebx]
  41f3ef:	mov    ecx,0xa66fa2e4
  41f3f4:	rol    DWORD PTR [esi],cl
  41f3f6:	stos   BYTE PTR es:[edi],al
  41f3f7:	xor    BYTE PTR [eax-0x24],ch
  41f3fa:	mov    edx,DWORD PTR [eax+ebp*1-0x4c57c593]
  41f401:	in     eax,0xa8
  41f403:	(bad)  
  41f404:	leave  
  41f405:	data16 jo 0x41f3d7
  41f408:	sbb    cl,BYTE PTR [eax]
  41f40a:	sub    eax,0x691e8da6
  41f40f:	into   
  41f410:	lock add bh,BYTE PTR [ebp-0x75a92032]
  41f417:	les    ebx,FWORD PTR [eax+0x3e3349b3]
  41f41d:	je     0x41f461
  41f41f:	xor    eax,0x9ca1e54
  41f424:	jno    0x41f3e7
  41f426:	pusha  
  41f427:	xor    ebp,DWORD PTR [esi+edi*4]
  41f42a:	rcr    edi,cl
  41f42c:	mov    esi,0x939e50b8
  41f431:	loopne 0x41f41f
  41f433:	sbb    eax,0x880be884
  41f438:	push   ss
  41f439:	gs jo  0x41f409
  41f43c:	dec    ebx
  41f43d:	or     eax,0x6826e19a
  41f442:	inc    ebp
  41f443:	mov    ds:0x5f7cf0aa,al
  41f448:	test   DWORD PTR [edi+0x48],edx
  41f44b:	cmp    al,0x81
  41f44d:	cmp    BYTE PTR ss:[edx],0xf3
  41f451:	xor    eax,0xac9952a4
  41f456:	leave  
  41f457:	add    DWORD PTR es:[esi],esp
  41f45a:	mov    esi,0xadfa8444
  41f45f:	fcmovne st,st(7)
  41f461:	jmp    0x41f49c
  41f463:	mov    eax,0xf262b157
  41f468:	jp     0x41f409
  41f46a:	dec    ebx
  41f46b:	rcl    esi,cl
  41f46d:	cmp    al,BYTE PTR [eax+ecx*2+0x5d]
  41f471:	sbb    ch,BYTE PTR [edx]
  41f473:	addr16 iret 
  41f475:	out    dx,al
  41f476:	and    dh,bl
  41f478:	leave  
  41f479:	ins    DWORD PTR es:[edi],dx
  41f47a:	sub    bh,dh
  41f47c:	fwait
  41f47d:	push   es
  41f47e:	cmp    BYTE PTR [esp+edx*4+0x631b160f],cl
  41f485:	str    WORD PTR [ebx]
  41f488:	jo     0x41f479
  41f48a:	mov    ds:0xfdc182b6,eax
  41f48f:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41f491:	mov    ebp,0x9a13e9f4
  41f496:	inc    eax
  41f497:	repnz in eax,0xa9
  41f49a:	xor    eax,0xfe8f6053
  41f49f:	stos   DWORD PTR es:[edi],eax
  41f4a0:	sar    BYTE PTR [eax-0x2f],0x9a
  41f4a4:	xchg   edi,eax
  41f4a5:	and    BYTE PTR [esi+0x2d],bl
  41f4a8:	daa    
  41f4a9:	(bad)  
  41f4aa:	aam    0xe4
  41f4ac:	push   cs
  41f4ad:	dec    edx
  41f4ae:	jl     0x41f51d
  41f4b0:	xchg   ecx,eax
  41f4b1:	xchg   ecx,eax
  41f4b2:	popa   
  41f4b3:	fisub  DWORD PTR [eax]
  41f4b5:	push   edx
  41f4b6:	and    al,0xf3
  41f4b8:	(bad)  
  41f4b9:	cmp    esi,DWORD PTR [eax+esi*4]
  41f4bc:	call   0x3143:0x527368c3
  41f4c3:	leave  
  41f4c4:	dec    ebx
  41f4c5:	shl    esi,0x54
  41f4c8:	jg     0x41f4ba
  41f4ca:	in     eax,0x6a
  41f4cc:	inc    edx
  41f4cd:	xor    al,0xb6
  41f4cf:	xor    esp,DWORD PTR [edi+edx*4+0x53665470]
  41f4d6:	xchg   ecx,eax
  41f4d7:	dec    ebx
  41f4d8:	push   eax
  41f4d9:	sub    BYTE PTR [esp+ebx*1+0x734c4215],dh
  41f4e0:	dec    ax
  41f4e2:	dec    ebx
  41f4e3:	xor    al,0x64
  41f4e5:	mov    al,0xdb
  41f4e7:	jo     0x41f513
  41f4e9:	push   eax
  41f4ea:	popa   
  41f4eb:	cmp    eax,0xec1ed26f
  41f4f0:	outs   dx,BYTE PTR ds:[esi]
  41f4f1:	or     eax,0xb6121fcf
  41f4f6:	ret    0xe524
  41f4f9:	jle    0x41f4a1
  41f4fb:	inc    esi
  41f4fc:	mov    ch,0xba
  41f4fe:	mov    eax,0xcf54578f
  41f503:	mov    edi,0x6ad6085c
  41f508:	mov    ecx,0x32e662bf
  41f50d:	popf   
  41f50e:	(bad)  
  41f50f:	mov    dh,0x24
  41f511:	adc    esp,DWORD PTR [edi-0x10]
  41f514:	pop    edx
  41f515:	std    
  41f516:	bound  edx,QWORD PTR [ebx-0x45]
  41f519:	daa    
  41f51a:	push   ecx
  41f51b:	inc    ecx
  41f51c:	mov    ecx,0x723fc877
  41f521:	push   eax
  41f522:	(bad)
  41f526:	ret    0x84f1
  41f529:	in     al,dx
  41f52a:	out    dx,al
  41f52b:	lods   eax,DWORD PTR ds:[esi]
  41f52c:	je     0x41f565
  41f52e:	dec    eax
  41f52f:	pop    ds
  41f530:	pop    edx
  41f531:	push   ds
  41f532:	sub    BYTE PTR [ebp+0x29],ah
  41f535:	xchg   edi,eax
  41f536:	std    
  41f537:	outs   dx,DWORD PTR ds:[esi]
  41f538:	xchg   ecx,eax
  41f539:	out    dx,al
  41f53a:	pop    ebp
  41f53b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f53c:	mov    esp,0xc174da89
  41f541:	push   ebx
  41f542:	repnz pusha 
  41f544:	and    eax,0xeca28c7e
  41f549:	es inc eax
  41f54b:	fcmovnb st,st(7)
  41f54d:	push   cs
  41f54e:	add    DWORD PTR ds:0x5eae298,ebp
  41f554:	push   ds
  41f555:	jb     0x41f5b4
  41f557:	out    0xe6,al
  41f559:	jmp    0x8363:0xf3bc4ebd
  41f560:	test   eax,0x7fa002c7
  41f565:	dec    ecx
  41f566:	or     BYTE PTR [ebx],ch
  41f568:	jne    0x41f555
  41f56a:	jge    0x41f53b
  41f56c:	or     al,0xe7
  41f56e:	mov    dh,0x40
  41f570:	pop    es
  41f571:	(bad)  
  41f572:	pop    edi
  41f573:	mov    ebp,0xcea198ee
  41f578:	push   0x250a54b4
  41f57d:	cld    
  41f57e:	cmp    esp,eax
  41f580:	push   0x4e
  41f582:	and    ebp,DWORD PTR [eax]
  41f584:	(bad)  
  41f585:	fdiv   DWORD PTR [esi+esi*4-0x76]
  41f589:	sub    eax,DWORD PTR ds:0x35c0b42a
  41f58f:	pop    es
  41f590:	sub    BYTE PTR [edi+0x60],cl
  41f593:	frstor ds:0x5772efbe
  41f599:	js     0x41f525
  41f59b:	or     DWORD PTR [eax+0x6c],0xffffff9a
  41f59f:	das    
  41f5a0:	(bad)  
  41f5a1:	into   
  41f5a2:	mov    dh,0x50
  41f5a4:	dec    edx
  41f5a5:	dec    edi
  41f5a6:	pop    ebp
  41f5a7:	mov    al,0xfb
  41f5a9:	sbb    DWORD PTR [ecx],eax
  41f5ab:	mov    bl,0x4d
  41f5ad:	xchg   edx,eax
  41f5ae:	stos   BYTE PTR es:[edi],al
  41f5af:	inc    ebx
  41f5b0:	lea    eax,[edi]
  41f5b2:	(bad)  [ebp-0x12]
  41f5b5:	sbb    eax,ebx
  41f5b7:	sub    al,0xa9
  41f5b9:	ja     0x41f5af
  41f5bb:	cmp    ebx,esi
  41f5bd:	stos   BYTE PTR es:[edi],al
  41f5be:	int    0xa8
  41f5c0:	cmp    DWORD PTR [ebx],ebx
  41f5c2:	idiv   BYTE PTR [eax-0x59]
  41f5c5:	dec    edi
  41f5c6:	dec    eax
  41f5c7:	pop    eax
  41f5c8:	dec    edi
  41f5c9:	jle    0x41f551
  41f5cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5cc:	mov    ebx,es
  41f5ce:	outs   dx,DWORD PTR ds:[esi]
  41f5cf:	test   al,0xea
  41f5d1:	sub    edx,DWORD PTR ss:[ebx]
  41f5d4:	popa   
  41f5d5:	(bad)  
  41f5d6:	or     BYTE PTR [edx-0x22b03349],ch
  41f5dc:	fisub  WORD PTR [eax+0x747a6f97]
  41f5e2:	xor    BYTE PTR [eax-0x45],al
  41f5e5:	xor    al,0x5a
  41f5e7:	inc    esp
  41f5e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5e9:	(bad)  
  41f5ea:	and    eax,0x7cda0b48
  41f5ef:	sub    edx,0x7a
  41f5f2:	clc    
  41f5f3:	pushf  
  41f5f4:	sbb    ebp,DWORD PTR [ecx-0x80]
  41f5f7:	xchg   dh,al
  41f5f9:	jge    0x41f60e
  41f5fb:	inc    ecx
  41f5fc:	sub    al,0xd8
  41f5fe:	fnstsw ax
  41f600:	push   ds
  41f601:	sub    al,0xb8
  41f603:	ins    BYTE PTR es:[edi],dx
  41f604:	pop    edi
  41f605:	sti    
  41f606:	mov    esi,0x23e3526f
  41f60b:	mov    BYTE PTR [edi-0x5b],al
  41f60e:	mov    ss,WORD PTR [edi+eiz*4]
  41f611:	fsubr  DWORD PTR [ecx]
  41f613:	inc    edx
  41f614:	mov    ecx,0x9d4bf4e5
  41f619:	sti    
  41f61a:	leave  
  41f61b:	jnp    0x41f67a
  41f61d:	dec    edx
  41f61e:	fcom   QWORD PTR [ecx+0x34a04f68]
  41f624:	call   DWORD PTR [ebp-0x3f]
  41f627:	jns    0x41f5e8
  41f629:	daa    
  41f62a:	sub    esp,DWORD PTR [edi]
  41f62c:	and    DWORD PTR [edi],ebx
  41f62e:	test   BYTE PTR [ebp-0x47],dh
  41f631:	pop    ss
  41f632:	inc    ebx
  41f633:	add    eax,0x806fd295
  41f638:	or     al,0xa6
  41f63a:	es adc bl,dl
  41f63d:	sub    DWORD PTR [ebx],eax
  41f63f:	and    cl,cl
  41f641:	add    DWORD PTR [ebp-0x68],ecx
  41f644:	adc    al,cl
  41f646:	cmp    al,0xca
  41f648:	mov    esp,0x4834e87d
  41f64d:	adc    BYTE PTR [eax-0x2eef7976],cl
  41f653:	and    ebx,0x5c2c48a2
  41f659:	dec    eax
  41f65a:	inc    ebp
  41f65b:	xor    ecx,DWORD PTR [edx+0x2e]
  41f65e:	sub    al,0xba
  41f660:	xor    BYTE PTR [ebp*8+0x5490b4ae],0x9b
  41f668:	xor    edi,DWORD PTR [ebx+0x71aaf345]
  41f66e:	cmp    BYTE PTR [edx],dl
  41f670:	test   BYTE PTR [eax],bh
  41f672:	loopne 0x41f6a0
  41f674:	(bad)  
  41f676:	xor    edi,esp
  41f678:	iret   
  41f679:	sub    BYTE PTR [edx+0x26],dl
  41f67c:	aas    
  41f67d:	and    ecx,DWORD PTR [esi-0x1]
  41f680:	cdq    
  41f681:	mov    bh,BYTE PTR [ebp+0x8]
  41f684:	sub    DWORD PTR [eax+0x2cc2f4a9],esp
  41f68a:	add    ah,BYTE PTR [edx]
  41f68c:	push   ss
  41f68d:	add    BYTE PTR [esi-0xc447b56],bl
  41f693:	dec    esp
  41f694:	or     eax,0x7f561dab
  41f699:	jmp    0x2699:0xbfd19979
  41f6a0:	push   ebp
  41f6a1:	popa   
  41f6a2:	imul   ecx,DWORD PTR [edx+0x6b1d73fb],0x1a
  41f6a9:	pop    ds
  41f6aa:	js     0x41f6e1
  41f6ac:	sub    al,0x25
  41f6ae:	cdq    
  41f6af:	pop    esp
  41f6b0:	out    dx,al
  41f6b1:	test   DWORD PTR [ebx+0x61],ecx
  41f6b4:	cmp    al,0x3d
  41f6b6:	enter  0xc4dd,0xf6
  41f6ba:	mov    ebx,0xdec11d3f
  41f6bf:	jmp    0x41f73b
  41f6c1:	cld    
  41f6c2:	xor    bh,BYTE PTR [eax]
  41f6c4:	push   edi
  41f6c5:	xor    eax,0xf4257fe
  41f6ca:	push   ebx
  41f6cb:	clc    
  41f6cc:	cld    
  41f6cd:	aad    0x8e
  41f6cf:	pop    ebp
  41f6d0:	inc    esi
  41f6d1:	xlat   BYTE PTR ds:[ebx]
  41f6d2:	in     eax,0x47
  41f6d4:	or     al,0xa6
  41f6d6:	test   BYTE PTR [ebp-0x7d],dh
  41f6d9:	dec    ebx
  41f6da:	gs cwde 
  41f6dc:	popa   
  41f6dd:	mov    cl,0x3f
  41f6df:	mov    eax,ds:0x2b68f880
  41f6e4:	loope  0x41f681
  41f6e6:	xor    DWORD PTR [eax],eax
  41f6e8:	jae    0x41f730
  41f6ea:	adc    eax,DWORD PTR [ebx+esi*8]
  41f6ed:	ins    DWORD PTR es:[edi],dx
  41f6ee:	mov    cl,0xa3
  41f6f0:	shr    esp,cl
  41f6f2:	add    dl,BYTE PTR [edx+0x34]
  41f6f5:	push   ebp
  41f6f6:	das    
  41f6f7:	mov    bl,0x5d
  41f6f9:	out    dx,al
  41f6fa:	sti    
  41f6fb:	mov    eax,ds:0xad771c91
  41f700:	pushf  
  41f701:	adc    BYTE PTR [ebp+0x36],0xac
  41f705:	dec    edi
  41f706:	call   0xd650:0xbd8a1d3a
  41f70d:	rcr    bl,0xa2
  41f710:	popa   
  41f711:	inc    edx
  41f712:	add    edi,DWORD PTR [ebx+0x7e]
  41f715:	iret   
  41f716:	in     eax,0xe7
  41f718:	add    DWORD PTR [eax-0x3f39cdd5],edx
  41f71e:	popa   
  41f71f:	shl    DWORD PTR [edi],1
  41f721:	sbb    ecx,DWORD PTR es:[edx+0x41fd975b]
  41f728:	cmp    esi,DWORD PTR [ecx+0xdeb4a37]
  41f72e:	fldenv [ecx-0x23238de]
  41f734:	iret   
  41f735:	sbb    dl,0xc9
  41f738:	pop    ds
  41f739:	clc    
  41f73a:	ja     0x41f7b4
  41f73c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f73d:	xlat   BYTE PTR ds:[ebx]
  41f73e:	hlt    
  41f73f:	das    
  41f740:	dec    esp
  41f741:	test   BYTE PTR [ebx-0x32],0xf8
  41f745:	pop    es
  41f746:	adc    esp,DWORD PTR [ebx-0x4d95c02]
  41f74c:	je     0x41f79a
  41f74e:	and    BYTE PTR [eax-0x70c7f48c],bl
  41f754:	imul   eax,DWORD PTR [eax+0x7caedc5e],0xdfcee7b2
  41f75e:	xor    edx,DWORD PTR ds:0x8f572395
  41f764:	in     al,dx
  41f765:	mov    ds:0xa09956f1,eax
  41f76a:	enter  0xa6c,0xe8
  41f76e:	stos   BYTE PTR es:[edi],al
  41f76f:	nop
  41f770:	enter  0xfd40,0xdf
  41f774:	or     al,0xa6
  41f776:	js     0x41f703
  41f778:	out    0x54,al
  41f77a:	add    bh,BYTE PTR [ecx]
  41f77c:	xchg   esp,eax
  41f77d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f77e:	and    eax,0x3be532b4
  41f783:	call   0xdad968b1
  41f788:	cmp    edx,DWORD PTR [ebx]
  41f78a:	ret    
  41f78b:	(bad)  
  41f78c:	(bad)  
  41f78d:	pop    es
  41f78e:	push   es
  41f78f:	push   cs
  41f790:	inc    esp
  41f791:	pop    ebx
  41f792:	aad    0x3f
  41f794:	cmp    BYTE PTR [ebp-0x5128b253],ah
  41f79a:	ja     0x41f7c7
  41f79c:	das    
  41f79d:	xchg   BYTE PTR [ebx+0x20],ah
  41f7a0:	sbb    BYTE PTR [esi+0x5a7f7e8c],cl
  41f7a6:	nop
  41f7a7:	pop    ebx
  41f7a8:	xchg   edx,eax
  41f7a9:	jae    0x41f7d1
  41f7ab:	fsubr  st,st(3)
  41f7ad:	stc    
  41f7ae:	addr16 test ch,bl
  41f7b1:	add    BYTE PTR [ebx],0xf6
  41f7b4:	lock add al,0x1d
  41f7b7:	sbb    al,0xb5
  41f7b9:	inc    edi
  41f7ba:	pop    esp
  41f7bb:	scas   eax,DWORD PTR es:[edi]
  41f7bc:	daa    
  41f7bd:	scas   eax,DWORD PTR es:[edi]
  41f7be:	ja     0x41f7f6
  41f7c0:	and    BYTE PTR [eax],0x80
  41f7c3:	inc    ebx
  41f7c4:	or     BYTE PTR [ecx+0x70],dh
  41f7c7:	popf   
  41f7c8:	(bad)  
  41f7c9:	fcmovu st,st(4)
  41f7cb:	push   0xac3533d5
  41f7d0:	addr16 add esp,edx
  41f7d3:	and    ebx,edi
  41f7d5:	cs dec edx
  41f7d7:	lods   al,BYTE PTR ds:[esi]
  41f7d8:	jnp    0x41f7c0
  41f7da:	int    0xa7
  41f7dc:	(bad)  
  41f7dd:	push   ds
  41f7de:	push   0x491eeff6
  41f7e3:	icebp  
  41f7e4:	cmp    edi,DWORD PTR [esi-0x58be2123]
  41f7ea:	retf   
  41f7eb:	xchg   ebp,eax
  41f7ec:	xor    al,0xe1
  41f7ee:	dec    esp
  41f7ef:	mov    ebx,0xff9694fb
  41f7f4:	push   esi
  41f7f5:	jno    0x41f7aa
  41f7f7:	hlt    
  41f7f8:	pop    eax
  41f7f9:	mov    eax,0x7f609c64
  41f7fe:	aad    0x32
  41f800:	adc    ebp,ebp
  41f802:	sub    DWORD PTR [ebp+0x49],edi
  41f805:	mov    edi,0x4e49d623
  41f80a:	popf   
  41f80b:	and    DWORD PTR [eax+0x1403fd98],ebp
  41f811:	lock and al,ah
  41f814:	call   0xbe472b72
  41f819:	ds mov dh,0xe3
  41f81c:	popf   
  41f81d:	ins    BYTE PTR es:[edi],dx
  41f81e:	mov    ds:0x4ca3f21c,al
  41f823:	add    DWORD PTR [ecx-0x1adeb0e5],esp
  41f829:	(bad)  [edi+0x80c5]
  41f82f:	add    BYTE PTR [eax],al
  41f831:	add    BYTE PTR [eax+0x64],cl
  41f834:	mul    BYTE PTR [eax-0x2]
  41f837:	repnz fisubr WORD PTR [ecx+eiz*8-0x64]
  41f83c:	out    0x52,eax
  41f83e:	retf   
  41f83f:	(bad)  [esi+edi*8-0x27]
  41f843:	jb     0x41f846
  41f845:	add    bl,dh
  41f847:	add    al,0x0
  41f849:	add    BYTE PTR [edi],dl
  41f84b:	mov    bh,0xb5
  41f84d:	xor    BYTE PTR [edx+edi*1-0x53],dl
  41f851:	sub    dh,cl
  41f853:	xor    bh,ch
  41f855:	push   cs
  41f856:	inc    esp
  41f857:	popa   
  41f858:	adc    ebx,esp
  41f85a:	push   es
  41f85b:	mov    ebx,0x534ade7a
  41f860:	add    DWORD PTR [esi-0x179c42d8],ecx
  41f866:	add    esi,esp
  41f868:	pop    eax
  41f869:	mov    eax,ds:0x5ad6d762
  41f86e:	or     eax,0x589fc26a
  41f873:	sbb    al,0x9c
  41f875:	xchg   edi,eax
  41f876:	inc    edx
  41f877:	xchg   edi,eax
  41f878:	jge    0x41f89e
  41f87a:	jmp    0x41f892
  41f87c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f87d:	es xchg edx,eax
  41f87f:	mov    ah,0x22
  41f881:	mov    dh,0x70
  41f883:	xlat   BYTE PTR ds:[ebx]
  41f884:	mov    ss,esp
  41f886:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f887:	push   esp
  41f888:	xor    esi,DWORD PTR [ebx+0xca035f6]
  41f88e:	imul   ecx,esi,0x41305398
  41f894:	ins    DWORD PTR es:[edi],dx
  41f895:	xor    esi,DWORD PTR [eax+0x13506416]
  41f89b:	and    edi,DWORD PTR [esi-0x2d]
  41f89e:	jle    0x41f836
  41f8a0:	ret    0xdb1d
  41f8a3:	sub    DWORD PTR [edi],ebx
  41f8a5:	inc    edx
  41f8a6:	icebp  
  41f8a7:	popa   
  41f8a8:	pusha  
  41f8a9:	or     al,0xf2
  41f8ab:	sbb    al,0x51
  41f8ad:	adc    BYTE PTR [edi+ebx*2+0x37eb4db2],bl
  41f8b4:	inc    ecx
  41f8b5:	sti    
  41f8b6:	adc    BYTE PTR [esi-0x72],cl
  41f8b9:	xchg   edi,ebx
  41f8bb:	outs   dx,BYTE PTR ds:[esi]
  41f8bc:	cli    
  41f8bd:	jnp    0x41f847
  41f8bf:	pop    esi
  41f8c0:	(bad)  
  41f8c1:	jp     0x41f893
  41f8c3:	jnp    0x41f8a5
  41f8c5:	iret   
  41f8c6:	scas   al,BYTE PTR es:[edi]
  41f8c7:	jnp    0x41f8da
  41f8c9:	sub    ecx,DWORD PTR [ebx-0x5431e2ba]
  41f8cf:	aad    0x8f
  41f8d1:	push   cs
  41f8d2:	sub    esp,ecx
  41f8d4:	mov    DWORD PTR [edx+0x68],esi
  41f8d7:	xchg   ecx,eax
  41f8d8:	cmp    DWORD PTR [edx],ebp
  41f8da:	sbb    eax,0xdaa8f317
  41f8df:	aaa    
  41f8e0:	test   eax,0xdcc1ada4
  41f8e5:	pop    ebp
  41f8e6:	scas   al,BYTE PTR es:[edi]
  41f8e7:	loop   0x41f8ad
  41f8e9:	mov    esp,0x52da1143
  41f8ee:	xlat   BYTE PTR ds:[ebx]
  41f8ef:	push   ds
  41f8f0:	push   ebp
  41f8f1:	or     dh,BYTE PTR [ebx+ebx*4]
  41f8f4:	pop    ebx
  41f8f5:	and    al,0x1a
  41f8f7:	sbb    eax,0x6bae0e74
  41f8fc:	sub    BYTE PTR [ebx],ch
  41f8fe:	or     dl,BYTE PTR [edi+ecx*1]
  41f901:	jno    0x41f929
  41f903:	jle    0x41f8ef
  41f905:	lods   al,BYTE PTR ds:[esi]
  41f906:	icebp  
  41f907:	push   0xc1e3d74c
  41f90c:	out    0xc8,eax
  41f90e:	pop    ebx
  41f90f:	add    eax,0x829d723b
  41f914:	pop    esi
  41f915:	jae    0x41f97a
  41f917:	daa    
  41f918:	mov    ds:0xa4b9855b,al
  41f91d:	sub    al,0x5a
  41f91f:	loop   0x41f8a9
  41f921:	in     al,dx
  41f922:	mov    al,0xf6
  41f924:	push   esi
  41f925:	mov    WORD PTR gs:[edx+edi*2],gs
  41f929:	popf   
  41f92a:	imul   ecx,DWORD PTR [eax],0xfffffff8
  41f92d:	sub    ebp,ebx
  41f92f:	fdiv   st,st(3)
  41f931:	push   ss
  41f932:	fndisi(8087 only) 
  41f934:	dec    eax
  41f935:	push   esi
  41f936:	adc    DWORD PTR [esi+0x2fac06af],ebp
  41f93c:	cmp    cl,BYTE PTR ds:0x5276ee47
  41f942:	pop    ds
  41f943:	add    BYTE PTR [ebx],bh
  41f945:	jns    0x41f902
  41f947:	pop    ebp
  41f948:	mov    edi,DWORD PTR [edx+0x737985cc]
  41f94e:	add    DWORD PTR [ecx+0x7a1019ab],ebp
  41f954:	lods   al,BYTE PTR ds:[esi]
  41f955:	pop    es
  41f956:	mov    edx,0xfcf447e
  41f95b:	test   BYTE PTR [ecx-0x733cc36f],dl
  41f961:	adc    eax,0x68a370b5
  41f966:	push   esp
  41f967:	das    
  41f968:	xchg   ebx,eax
  41f969:	dec    esi
  41f96a:	imul   eax,DWORD PTR [edx],0x28b89be3
  41f970:	mov    bl,BYTE PTR [ecx+0x5]
  41f973:	rcr    BYTE PTR [edi+0x6aefcd6d],cl
  41f979:	sub    ecx,eax
  41f97b:	fsub   DWORD PTR [esi+ebp*4-0x76]
  41f97f:	or     esp,DWORD PTR [esi-0x50d082a4]
  41f985:	lahf   
  41f986:	popf   
  41f987:	add    bh,BYTE PTR [eax*2+0x60ffc1]
  41f98e:	mov    al,0xe4
  41f990:	add    ecx,DWORD PTR [edx-0x3372af27]
  41f996:	xor    esi,DWORD PTR [ecx+0x141b8286]
  41f99c:	fs ss gs add al,0x55
  41f9a1:	enter  0x2449,0xf0
  41f9a5:	or     BYTE PTR [ebx],al
  41f9a7:	mov    WORD PTR [ebx-0x4269b79b],cs
  41f9ad:	mov    edx,0x8335f1be
  41f9b2:	popf   
  41f9b3:	(bad)  
  41f9b4:	daa    
  41f9b5:	ins    BYTE PTR es:[edi],dx
  41f9b6:	sbb    eax,0xaf6e9742
  41f9bb:	test   BYTE PTR ds:0x9dfaccb9,al
  41f9c1:	sbb    al,0x61
  41f9c3:	scas   al,BYTE PTR es:[edi]
  41f9c4:	ffree  st(5)
  41f9c6:	and    dl,cl
  41f9c8:	iret   
  41f9c9:	sub    al,0x9b
  41f9cb:	cmp    edx,0x4d
  41f9ce:	in     eax,0x73
  41f9d0:	add    BYTE PTR [edx],ah
  41f9d2:	mov    bh,0x3c
  41f9d4:	and    eax,0x2a323070
  41f9d9:	jge    0x41fa45
  41f9db:	sub    BYTE PTR [ecx-0x1b1be04f],dl
  41f9e1:	sub    DWORD PTR [ebx+ecx*8+0x6],edx
  41f9e5:	and    DWORD PTR [esi*4-0x2671878e],edi
  41f9ec:	sub    eax,0x77b90a5c
  41f9f1:	add    DWORD PTR [eax],0x7bb3567b
  41f9f7:	cmp    al,0x80
  41f9f9:	mov    ecx,0x4bc581bb
  41f9fe:	sbb    DWORD PTR [esi],ebp
  41fa00:	ror    BYTE PTR [ebx-0x19],0xca
  41fa04:	mov    ebp,0x815ba169
  41fa09:	jno    0x41f996
  41fa0b:	jmp    0xd8902e5f
  41fa10:	jne    0x41fa35
  41fa12:	inc    edx
  41fa13:	pop    es
  41fa14:	aaa    
  41fa15:	mov    ebx,0x57616701
  41fa1a:	sub    ecx,esi
  41fa1c:	xchg   DWORD PTR [edi+0x44cd8f63],eax
  41fa22:	push   0xfffffff1
  41fa24:	jg     0x41fa5c
  41fa26:	xchg   ecx,eax
  41fa27:	pop    edx
  41fa28:	cmp    al,0xe3
  41fa2a:	dec    ecx
  41fa2b:	and    bh,BYTE PTR [ebx+0x7ea258f6]
  41fa31:	outs   dx,BYTE PTR ds:[esi]
  41fa32:	sub    dl,cl
  41fa34:	retf   
  41fa35:	push   eax
  41fa36:	sub    ebp,DWORD PTR [eax+edi*8-0x2979a433]
  41fa3d:	js     0x41fa4a
  41fa3f:	mov    edx,0xd51a601b
  41fa44:	call   0x311f06d1
  41fa49:	inc    edi
  41fa4a:	pop    esp
  41fa4b:	pop    ecx
  41fa4c:	push   ds
  41fa4d:	ret    0x9b75
  41fa50:	cld    
  41fa51:	stos   BYTE PTR es:[edi],al
  41fa52:	jmp    0x46de:0x93129a39
  41fa59:	jecxz  0x41fa77
  41fa5b:	daa    
  41fa5c:	and    BYTE PTR ds:0xaea47fed,dh
  41fa62:	jns    0x41fa1e
  41fa64:	add    edx,DWORD PTR [edx-0x33b724a2]
  41fa6a:	stc    
  41fa6b:	and    BYTE PTR [esi],dl
  41fa6d:	and    al,0x30
  41fa6f:	or     DWORD PTR ds:0x47f4356a,edi
  41fa75:	sar    DWORD PTR [edx+0x59b39a7d],1
  41fa7b:	mov    eax,0x53a8490f
  41fa80:	test   eax,0x8c01f9ac
  41fa85:	cmp    ebx,ecx
  41fa87:	mov    DWORD PTR [ebx-0x76],eax
  41fa8a:	lds    ebp,FWORD PTR [edi-0x7b0f678d]
  41fa90:	push   ecx
  41fa91:	(bad)  
  41fa92:	sahf   
  41fa93:	loop   0x41fa54
  41fa95:	push   esp
  41fa96:	mov    edi,0x49120fdb
  41fa9b:	push   0x1f
  41fa9d:	xchg   edi,eax
  41fa9e:	mov    cl,BYTE PTR [esi]
  41faa0:	mov    ebx,0xab166d46
  41faa5:	jbe    0x41fb0e
  41faa7:	repnz push esp
  41faa9:	inc    ebx
  41faaa:	aas    
  41faab:	or     DWORD PTR [ecx-0x10962010],0xee5b18ce
  41fab5:	mov    dh,0xfb
  41fab7:	mov    ebp,0xb9441071
  41fabc:	aad    0x5f
  41fabe:	add    ebx,DWORD PTR [edx-0x6d]
  41fac1:	fsub   st(2),st
  41fac3:	sub    bh,BYTE PTR [edi+0x3150e867]
  41fac9:	and    al,BYTE PTR [edi+0x53]
  41facc:	cli    
  41facd:	cmp    cl,BYTE PTR [ebx]
  41facf:	mov    al,ds:0xf5d828b5
  41fad4:	sub    al,0x5c
  41fad6:	(bad)  
  41fad7:	icebp  
  41fad8:	jno    0x41fa92
  41fada:	mov    al,dh
  41fadc:	call   0x2a0e8a1b
  41fae1:	leave  
  41fae2:	inc    eax
  41fae3:	stc    
  41fae4:	stc    
  41fae5:	pushf  
  41fae6:	lods   al,BYTE PTR ds:[esi]
  41fae7:	xor    DWORD PTR [ecx+0x33fcc732],eax
  41faed:	ret    
  41faee:	or     bl,BYTE PTR [edi]
  41faf0:	imul   ecx,DWORD PTR [edx+eiz*2-0x234a1dc5],0x4
  41faf8:	addr16 mov eax,ds:0xcac1
  41fafc:	rcr    DWORD PTR [ebp-0x747f36af],1
  41fb02:	outs   dx,BYTE PTR ds:[esi]
  41fb03:	jae    0x41fb0b
  41fb05:	daa    
  41fb06:	cmp    al,0x67
  41fb08:	loope  0x41fac5
  41fb0a:	push   ebp
  41fb0b:	mov    eax,ds:0x9c72b27e
  41fb10:	cmp    ebx,ecx
  41fb12:	mov    esi,esi
  41fb14:	ds icebp 
  41fb16:	push   ecx
  41fb17:	jle    0x41faf3
  41fb19:	rcr    BYTE PTR [edi+0xa],1
  41fb1c:	lock push ss
  41fb1e:	out    0x53,al
  41fb20:	imul   edi,DWORD PTR [eax+0x62],0x6db0f352
  41fb27:	mov    dh,0x59
  41fb29:	push   ds
  41fb2a:	jmp    0xfdc1162b
  41fb2f:	sub    eax,0xaeaa495a
  41fb34:	xor    al,0xe5
  41fb36:	ror    BYTE PTR [ecx],1
  41fb38:	sub    BYTE PTR [ebx-0x51],ah
  41fb3b:	lods   eax,DWORD PTR ds:[esi]
  41fb3c:	inc    edi
  41fb3d:	fs cmc 
  41fb3f:	sbb    ch,al
  41fb41:	and    bl,BYTE PTR [eax+0x6b]
  41fb44:	jp     0x41fad0
  41fb46:	pop    ebp
  41fb47:	add    DWORD PTR [edx],esp
  41fb49:	es dec ebx
  41fb4b:	popa   
  41fb4c:	inc    ecx
  41fb4d:	imul   ebx,edi,0x8832f38f
  41fb53:	fmul   DWORD PTR [edi+0x3f]
  41fb56:	dec    esp
  41fb57:	adc    ch,bl
  41fb59:	pand   mm5,QWORD PTR [esi]
  41fb5c:	dec    esi
  41fb5d:	test   DWORD PTR [ecx+ecx*2-0x3f],0x5fcbb5b8
  41fb65:	inc    BYTE PTR [edx-0x19b5254b]
  41fb6b:	retf   
  41fb6c:	or     DWORD PTR [ebp+0x3fb1d54f],eax
  41fb72:	cmp    eax,0x31955bfa
  41fb77:	cdq    
  41fb78:	(bad)  
  41fb79:	sahf   
  41fb7a:	fbld   TBYTE PTR [esi-0x6ca15039]
  41fb80:	sbb    DWORD PTR [edi-0x2d],edx
  41fb83:	inc    edx
  41fb84:	in     al,0x7d
  41fb86:	gs jg  0x41fb46
  41fb89:	ss pop ebx
  41fb8b:	je     0x41fb41
  41fb8d:	dec    ecx
  41fb8e:	jns    0x41fba9
  41fb90:	or     esi,ebx
  41fb92:	aas    
  41fb93:	jne    0x41fb9e
  41fb95:	scas   al,BYTE PTR es:[edi]
  41fb96:	and    bh,BYTE PTR [ebx]
  41fb98:	call   0xa7bc7ff2
  41fb9d:	retf   0xf5f
  41fba0:	into   
  41fba1:	iret   
  41fba2:	sub    eax,0xbbe347a1
  41fba7:	lods   eax,DWORD PTR ds:[esi]
  41fba8:	out    0x43,al
  41fbaa:	fld    DWORD PTR [ebp+ebp*2+0x5d4d515b]
  41fbb1:	add    dh,BYTE PTR [ecx]
  41fbb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbb4:	push   ds
  41fbb5:	and    DWORD PTR [eax+0x4a246f13],0x25f7ae25
  41fbbf:	pusha  
  41fbc0:	out    0x68,eax
  41fbc2:	mov    ebx,0xfe08a2e
  41fbc7:	dec    ecx
  41fbc8:	jecxz  0x41fbe5
  41fbca:	sub    DWORD PTR [esi+ebp*2-0x10],ebx
  41fbce:	cld    
  41fbcf:	out    0xf8,eax
  41fbd1:	and    al,0x7f
  41fbd3:	data16 ds mov dl,0xe1
  41fbd7:	test   BYTE PTR [edi-0x3a],dh
  41fbda:	jp     0x41fc4e
  41fbdc:	into   
  41fbdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbde:	dec    ebx
  41fbdf:	mov    ds:0x9c8e4fd3,al
  41fbe4:	ret    0x15a8
  41fbe7:	push   ecx
  41fbe8:	xchg   edx,eax
  41fbe9:	shr    edi,1
  41fbeb:	and    bh,BYTE PTR [ecx+0x8a32b97]
  41fbf1:	pusha  
  41fbf2:	rcr    DWORD PTR [esi],1
  41fbf4:	fwait
  41fbf5:	imul   eax,esi,0x72866177
  41fbfb:	ins    DWORD PTR es:[edi],dx
  41fbfc:	push   0xbca5a066
  41fc01:	(bad)  
  41fc02:	dec    ebx
  41fc03:	test   eax,0xf9c0e4eb
  41fc08:	pop    ebx
  41fc09:	mov    eax,0xce384a46
  41fc0e:	aam    0x8f
  41fc10:	mov    al,0xed
  41fc12:	cmovne ebp,DWORD PTR [esi]
  41fc15:	jne    0x41fc31
  41fc17:	inc    edx
  41fc18:	or     ecx,eax
  41fc1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc1b:	pop    edi
  41fc1c:	mov    ds:0x6685d37c,eax
  41fc21:	add    BYTE PTR [edi+0x672cb26e],bl
  41fc27:	mov    esi,0xc07b681a
  41fc2c:	or     BYTE PTR [edx+eiz*1+0x5f654ce1],bl
  41fc33:	xchg   edi,eax
  41fc34:	xor    dh,bl
  41fc36:	inc    edx
  41fc38:	ret    
  41fc39:	les    esi,FWORD PTR [ebx+0x24dece11]
  41fc3f:	xchg   esi,eax
  41fc40:	sub    edi,DWORD PTR [eax]
  41fc42:	frstor [esi]
  41fc44:	out    dx,al
  41fc45:	push   0xffffffc3
  41fc47:	div    DWORD PTR [ebx-0x60]
  41fc4a:	fstp   DWORD PTR [ebx]
  41fc4c:	mov    esi,0x902f7b6
  41fc51:	add    al,0xb4
  41fc53:	sbb    BYTE PTR fs:[ebx],0x1
  41fc57:	ret    0x266d
  41fc5a:	xchg   edi,eax
  41fc5b:	jecxz  0x41fc1f
  41fc5d:	aas    
  41fc5e:	jmp    FWORD PTR [ebp+0x6a]
  41fc61:	xor    eax,0x24ac1839
  41fc66:	icebp  
  41fc67:	es (bad) 
  41fc69:	xchg   edx,eax
  41fc6a:	push   es
  41fc6b:	mov    bl,0x40
  41fc6d:	test   al,0x14
  41fc6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc70:	imul   ebx,DWORD PTR [esi+ecx*8-0x1c11674c],0xffffff8d
  41fc78:	push   0x958af9e9
  41fc7d:	mov    ds:0x1748cf13,al
  41fc82:	xchg   esi,eax
  41fc83:	and    dh,ah
  41fc85:	(bad)  
  41fc86:	jmp    0x4c575b31
  41fc8b:	test   ch,0x7c
  41fc8e:	and    DWORD PTR ds:0xbcf13637,0xffffffef
  41fc95:	push   edx
  41fc96:	outs   dx,BYTE PTR ds:[esi]
  41fc97:	pop    ds
  41fc98:	icebp  
  41fc99:	jne    0x41fc82
  41fc9b:	lods   al,BYTE PTR ds:[esi]
  41fc9c:	pop    esp
  41fc9d:	add    ebp,DWORD PTR [esi-0x3de7c51d]
  41fca3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fca4:	arpl   bp,si
  41fca6:	lahf   
  41fca7:	and    al,0x22
  41fca9:	leave  
  41fcaa:	mov    edx,0x467dea02
  41fcaf:	fwait
  41fcb0:	(bad)  
  41fcb1:	je     0x41fcdd
  41fcb3:	mov    al,0xf1
  41fcb5:	leave  
  41fcb6:	int3   
  41fcb7:	adc    cl,BYTE PTR [esp+edi*4-0x3f]
  41fcbb:	mov    edi,0x986d795e
  41fcc0:	mov    al,ds:0x6b7720c7
  41fcc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcc6:	std    
  41fcc7:	je     0x41fc9a
  41fcc9:	sub    cl,BYTE PTR [ebp-0x7b]
  41fccc:	sub    DWORD PTR [edx-0x5d],0xfffffff1
  41fcd0:	xchg   ebx,eax
  41fcd1:	jae    0x41fc6b
  41fcd3:	push   edi
  41fcd4:	test   eax,0x7a5018ca
  41fcd9:	cld    
  41fcda:	adc    DWORD PTR [eax],eax
  41fcdc:	rol    bh,cl
  41fcde:	sub    eax,0xc5ed8435
  41fce3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fce4:	pop    eax
  41fce5:	mov    edx,0x636ab696
  41fcea:	inc    ebp
  41fceb:	cmp    BYTE PTR [edx+0x1f],dl
  41fcee:	xor    DWORD PTR [ebp+0x7a609ee0],ebx
  41fcf4:	add    ebx,eax
  41fcf6:	mov    ebp,0xbefd7297
  41fcfb:	sbb    cl,BYTE PTR [ebx+0x42]
  41fcfe:	push   ecx
  41fcff:	mov    ecx,0x722381d4
  41fd04:	fsubr  DWORD PTR [ebx+0x5e9a8ead]
  41fd0a:	bnd jnp 0x41fc8d
  41fd0d:	jae    0x41fd53
  41fd0f:	sti    
  41fd10:	push   esp
  41fd11:	mov    ch,0xde
  41fd13:	mov    cl,0x8a
  41fd15:	clc    
  41fd16:	leave  
  41fd17:	jge    0x41fce2
  41fd19:	adc    DWORD PTR [edx+eiz*1-0x900e5c],ebp
  41fd20:	jno    0x41fd96
  41fd22:	mov    ah,0xcb
  41fd24:	lods   al,BYTE PTR ds:[esi]
  41fd25:	xchg   ebx,eax
  41fd26:	lds    eax,FWORD PTR [edx-0x3c918e2e]
  41fd2c:	xchg   ebx,eax
  41fd2d:	jne    0x41fd05
  41fd2f:	aam    0x74
  41fd31:	jno    0x41fd9b
  41fd33:	dec    esi
  41fd34:	test   BYTE PTR [eax],bh
  41fd36:	sti    
  41fd37:	sbb    ch,BYTE PTR [ecx-0x54]
  41fd3a:	shl    BYTE PTR fs:[esi+0x0],0x0
  41fd42:	mov    ds:0xb713b617,al
  41fd47:	mov    bl,0xa7
  41fd49:	mov    bh,0xb
  41fd4b:	add    BYTE PTR [edi+0x55a9abdc],dh
  41fd51:	mov    edi,0x177cc
  41fd56:	repz add al,0x0
  41fd59:	add    BYTE PTR [esp+esi*8+0x79],ah
  41fd5d:	sub    ch,bh
  41fd5f:	aaa    
  41fd60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd61:	cmc    
  41fd62:	mov    dl,0x4d
  41fd64:	cmp    BYTE PTR [ebx],0x50
  41fd67:	sub    BYTE PTR [ebx+0x11],dh
  41fd6a:	(bad)  
  41fd6b:	sub    al,BYTE PTR fs:[edi+0x49]
  41fd6f:	ja     0x41fd47
  41fd71:	mov    bl,0x3e
  41fd73:	pop    ebx
  41fd74:	push   cs
  41fd75:	pop    edx
  41fd76:	call   0x2935:0x759f7452
  41fd7d:	mov    WORD PTR [esi-0x66],?
  41fd80:	mov    dh,0x4
  41fd82:	sti    
  41fd83:	xlat   BYTE PTR ds:[ebx]
  41fd84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd85:	cmp    BYTE PTR [edx+ebx*2],al
  41fd88:	cli    
  41fd89:	fidivr DWORD PTR [ecx-0x22]
  41fd8c:	pop    ebx
  41fd8d:	repz out dx,eax
  41fd8f:	enter  0x76aa,0x54
  41fd93:	mov    eax,0xda8f0d59
  41fd98:	push   ecx
  41fd99:	test   al,0x79
  41fd9b:	jb     0x41fd7b
  41fd9d:	(bad)  
  41fd9e:	sub    eax,0xc157407f
  41fda3:	clc    
  41fda4:	pop    es
  41fda5:	shr    DWORD PTR [edx+0x2426c0a2],0x1c
  41fdac:	sbb    ah,bh
  41fdae:	sti    
  41fdaf:	fnstcw WORD PTR [ecx+0x4b]
  41fdb2:	xor    al,0xe4
  41fdb4:	sub    esp,0xffffff8d
  41fdb7:	cmp    dh,dh
  41fdb9:	mov    ds:0xcba27f2a,eax
  41fdbe:	mov    ebp,0x726ff795
  41fdc3:	(bad)  
  41fdc4:	xor    al,BYTE PTR [ebx]
  41fdc6:	mov    WORD PTR [ecx+0x591efb8b],fs
  41fdcc:	sar    BYTE PTR es:[ebx+0x6f4cc6f3],1
  41fdd3:	aas    
  41fdd4:	fisttp DWORD PTR [edi+0x1b6e474f]
  41fdda:	dec    edx
  41fddb:	repnz clc 
  41fddd:	cmp    BYTE PTR [esi],0x4a
  41fde0:	mov    bh,0x76
  41fde2:	mov    esi,0x9ff6af19
  41fde7:	inc    edx
  41fde8:	rol    BYTE PTR [eax],cl
  41fdea:	int    0xb
  41fdec:	ret    
  41fded:	dec    ebx
  41fdee:	sbb    dl,dl
  41fdf0:	add    ecx,DWORD PTR [edi+0x1bb8ae33]
  41fdf6:	sbb    DWORD PTR [edi],ebp
  41fdf8:	and    ebp,eax
  41fdfa:	push   cs
  41fdfb:	aas    
  41fdfc:	div    BYTE PTR [ebx-0x59]
  41fdff:	aas    
  41fe00:	adc    al,0x49
  41fe02:	xchg   edi,eax
  41fe03:	xchg   edi,eax
  41fe04:	push   0xffffff80
  41fe06:	push   edi
  41fe07:	ss sar al,cl
  41fe0a:	shl    DWORD PTR [ecx-0x8],0x6
  41fe0e:	jge    0x41fde8
  41fe10:	aam    0x1a
  41fe12:	sub    BYTE PTR [edx+ebp*1+0x6c2c02b7],0xe7
  41fe1a:	clc    
  41fe1b:	mov    ch,0x42
  41fe1d:	mov    edx,0x496cadf2
  41fe22:	jbe    0x41fe13
  41fe24:	push   esp
  41fe25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe26:	in     eax,0x50
  41fe28:	call   DWORD PTR [edi]
  41fe2a:	fisttp QWORD PTR [edx-0x5c]
  41fe2d:	rol    DWORD PTR [eax-0xb],0x4a
  41fe31:	xchg   ebx,eax
  41fe32:	cmc    
  41fe33:	nop
  41fe34:	std    
  41fe35:	iret   
  41fe36:	gs (bad) 
  41fe38:	jp     0x41fde1
  41fe3a:	ss ret 
  41fe3c:	rcl    BYTE PTR [eax-0x77b58aef],cl
  41fe42:	push   esp
  41fe43:	adc    bl,BYTE PTR [edx+0x2d16b38f]
  41fe49:	cli    
  41fe4a:	sbb    BYTE PTR [ecx+0x6dbc6761],dh
  41fe50:	adc    DWORD PTR [ebx+0x20],ebx
  41fe53:	push   ss
  41fe54:	outs   dx,BYTE PTR ds:[esi]
  41fe55:	lea    ebp,[eax+0x47]
  41fe58:	fwait
  41fe59:	push   ss
  41fe5a:	pusha  
  41fe5b:	lock sbb BYTE PTR [edi-0x4dda52e7],0xc1
  41fe63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe64:	rcl    BYTE PTR [ebp+0x51],0x20
  41fe68:	cmp    eax,0xc428e514
  41fe6d:	js     0x41fe6e
  41fe6f:	jbe    0x41fec7
  41fe71:	push   0xffffffd6
  41fe73:	sti    
  41fe74:	fisub  WORD PTR [esi+0x6]
  41fe77:	out    0xaa,eax
  41fe79:	enter  0x896e,0x2d
  41fe7d:	(bad)  
  41fe7e:	rol    DWORD PTR [eax+0x59],1
  41fe81:	repz int 0x8b
  41fe84:	inc    esi
  41fe85:	add    BYTE PTR [ebx+0x65081c65],dh
  41fe8b:	sbb    ecx,0xb5588f98
  41fe91:	pop    esp
  41fe92:	xor    DWORD PTR [esi-0x8aa2f1a],edi
  41fe98:	push   ecx
  41fe99:	mov    DWORD PTR [edi+0x5086ee91],edx
  41fe9f:	cwde   
  41fea0:	rcr    BYTE PTR [ebx-0x7df2081f],0xff
  41fea7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fea8:	bound  eax,QWORD PTR [ebx+0x2c178195]
  41feae:	inc    edi
  41feaf:	mov    edi,0x3fe68e00
  41feb4:	adc    cl,BYTE PTR [ebx+ebp*8]
  41feb7:	fld    TBYTE PTR [esi+0xd]
  41feba:	mov    ds:0x738cb26,eax
  41febf:	div    BYTE PTR ds:0x15e2a8e3
  41fec5:	mov    BYTE PTR [ebx+0xf65defd],ch
  41fecb:	adc    al,cl
  41fecd:	cmp    DWORD PTR [esi-0x57],esi
  41fed0:	adc    al,0x3e
  41fed2:	xchg   edx,eax
  41fed3:	mov    edx,0x87b985fd
  41fed8:	push   0x24
  41feda:	xlat   BYTE PTR ds:[ebx]
  41fedb:	pop    eax
  41fedc:	adc    eax,ecx
  41fede:	imul   esp,edx,0xffffffb1
  41fee1:	ss push ss
  41fee3:	pop    esi
  41fee4:	adc    esp,DWORD PTR [ebp+0x1c4d3b12]
  41feea:	repnz sub DWORD PTR es:[esp+ebp*2+0x4b],ebx
  41fef0:	fisubr WORD PTR [ebx-0x1f383fa6]
  41fef6:	cmp    esi,ecx
  41fef8:	xchg   BYTE PTR [ecx],dl
  41fefa:	push   eax
  41fefb:	mov    al,0xf
  41fefd:	cmp    esp,ebp
  41feff:	mov    ebx,0x5462bcf2
  41ff04:	ret    0xfdf6
  41ff07:	inc    eax
  41ff08:	mov    al,ah
  41ff0a:	in     al,0x99
  41ff0c:	push   0xffffffed
  41ff0e:	loopne 0x41fee9
  41ff10:	out    dx,al
  41ff11:	retf   
  41ff12:	lea    edi,ds:0xa1037118
  41ff18:	div    DWORD PTR [edi-0x1ab85fc5]
  41ff1e:	mov    edi,DWORD PTR [ebx+ebx*4+0x9]
  41ff22:	dec    esp
  41ff23:	imul   esp,DWORD PTR [edx+eax*8],0x460ddc9d
  41ff2a:	xchg   esp,eax
  41ff2b:	fmul   DWORD PTR [esi]
  41ff2d:	cmp    al,0xc8
  41ff2f:	mov    eax,ds:0x36a9a7c3
  41ff34:	inc    ebp
  41ff35:	arpl   WORD PTR [eax+0x79],cx
  41ff38:	dec    ecx
  41ff39:	jns    0x41ff48
  41ff3b:	mov    al,ds:0x392beb8e
  41ff40:	cli    
  41ff41:	in     al,0xb3
  41ff43:	lock or ecx,DWORD PTR [edi]
  41ff46:	mov    ds:0x2018c470,al
  41ff4b:	pop    ss
  41ff4c:	mov    ds:0x4a9ef5cc,al
  41ff51:	leave  
  41ff52:	pop    ds
  41ff53:	and    DWORD PTR [ebx+0x122361e8],ecx
  41ff59:	out    dx,al
  41ff5a:	xor    esi,edx
  41ff5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff5d:	fldenv [esi+0x712eaf93]
  41ff63:	or     al,0xc2
  41ff65:	mov    ds:0xd1a409b1,al
  41ff6a:	cmp    eax,0x7a630d0b
  41ff6f:	scas   eax,DWORD PTR es:[edi]
  41ff70:	fadd   QWORD PTR [ecx]
  41ff72:	enter  0x7c75,0x38
  41ff76:	mov    cl,0xe4
  41ff78:	sub    BYTE PTR [eax+0x0],al
  41ff7b:	adc    al,0xd2
  41ff7d:	add    ebx,edi
  41ff7f:	jecxz  0x41fff2
  41ff81:	xor    BYTE PTR [ecx],bl
  41ff83:	mov    cl,0x42
  41ff85:	test   BYTE PTR [ecx+0x4f],cl
  41ff88:	test   al,0xb7
  41ff8a:	or     BYTE PTR [eax+0x6a],cl
  41ff8d:	sbb    al,0x22
  41ff8f:	pop    edi
  41ff90:	mov    bl,0x96
  41ff92:	sahf   
  41ff93:	xchg   DWORD PTR [edi],ebp
  41ff95:	std    
  41ff96:	in     al,0xb3
  41ff98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff99:	jecxz  0x420009
  41ff9b:	dec    ebx
  41ff9c:	add    BYTE PTR [esi],cl
  41ff9e:	mov    bl,0x5a
  41ffa0:	or     cl,dh
  41ffa2:	cmp    al,0x92
  41ffa4:	fbld   TBYTE PTR [ebx]
  41ffa6:	xchg   ebx,eax
  41ffa7:	test   eax,0xee3ae887
  41ffac:	lock push ecx
  41ffae:	(bad)  
  41ffaf:	xor    eax,0x9db61377
  41ffb4:	lock scas eax,DWORD PTR es:[edi]
  41ffb6:	jne    0x41ff98
  41ffb8:	inc    BYTE PTR [edx]
  41ffba:	xchg   esi,eax
  41ffbb:	test   eax,0xd77f1235
  41ffc0:	ror    dh,cl
  41ffc2:	add    al,0x3d
  41ffc4:	xlat   BYTE PTR ds:[ebx]
  41ffc5:	pushf  
  41ffc6:	push   esi
  41ffc7:	or     esp,esi
  41ffc9:	test   al,0x6
  41ffcb:	dec    ebx
  41ffcc:	sub    bh,al
  41ffce:	jnp    0x420032
  41ffd0:	xchg   ebp,eax
  41ffd1:	mov    edi,0xe918b355
  41ffd6:	cmp    DWORD PTR [ecx],esp
  41ffd8:	xlat   BYTE PTR ds:[ebx]
  41ffd9:	icebp  
  41ffda:	ret    
  41ffdb:	jecxz  0x41ffa2
  41ffdd:	sbb    dl,ah
  41ffdf:	cli    
  41ffe0:	inc    ecx
  41ffe1:	cs add eax,0xe7b9720
  41ffe7:	add    eax,0x70158d8a
  41ffec:	scas   eax,DWORD PTR es:[edi]
  41ffed:	out    dx,eax
  41ffee:	cmp    edi,DWORD PTR [esi+edi*8+0x9e4064a]
  41fff5:	in     eax,dx
  41fff6:	sbb    DWORD PTR es:[edx+0x5b],0xffffff9c
  41fffb:	fcom   DWORD PTR [edi-0x5c]
  41fffe:	mov    ds:0x9d74973d,al
  420003:	push   ebx
  420004:	inc    edi
  420005:	push   ebp
  420006:	dec    edx
  420007:	fs and eax,0x22d881d8
  42000d:	xor    eax,0x32defcf9
  420012:	mov    ebp,0x4b5ba457
  420017:	loopne 0x41ffc3
  420019:	xor    al,0x71
  42001b:	adc    eax,0x2eccbc20
  420020:	in     eax,0x2a
  420022:	jno    0x420035
  420024:	inc    ebx
  420025:	andnps xmm0,xmm4
  420028:	add    eax,0x6b34dbb0
  42002d:	call   0x8597851
  420032:	dec    eax
  420033:	arpl   WORD PTR [esp+edx*4+0x21],bx
  420037:	pop    esi
  420038:	adc    eax,0x50d15a24
  42003d:	sub    ecx,DWORD PTR [eax]
  42003f:	push   cs
  420040:	xor    BYTE PTR [esi-0x419e3a77],cl
  420046:	mov    ah,BYTE PTR [edi]
  420048:	jb     0x42007a
  42004a:	jmp    0xc5bb9956
  42004f:	shl    BYTE PTR ss:[esi-0x27],0x50
  420054:	mov    edx,0xaafd5f03
  420059:	mov    bl,0xfe
  42005b:	rcl    bh,cl
  42005d:	fadd   QWORD PTR [ecx+0x22]
  420060:	adc    DWORD PTR [ebx-0x2587e536],ecx
  420066:	(bad)
  420069:	int3   
  42006a:	call   0x7eaa9093
  42006f:	dec    edi
  420070:	add    ebx,DWORD PTR [ecx-0x67]
  420073:	inc    edx
  420074:	(bad)  
  420075:	fld    QWORD PTR [eax+ebx*4-0x1f]
  420079:	test   al,0xdb
  42007b:	ss cmp ch,ch
  42007e:	shl    BYTE PTR [esi-0x520afc72],0xc
  420085:	imul   ebx,DWORD PTR [edx],0x63
  420088:	mov    bl,cl
  42008a:	(bad)  
  42008b:	mov    ds:0x998923cd,al
  420090:	sub    BYTE PTR [ebp-0x4475136b],bl
  420096:	imul   ch
  420098:	icebp  
  420099:	pop    ebx
  42009a:	and    ebp,DWORD PTR [esi+0x2]
  42009d:	mov    ah,0xae
  42009f:	bound  ecx,QWORD PTR [edi+0x2a2af54d]
  4200a5:	outs   dx,DWORD PTR ds:[esi]
  4200a6:	or     ebp,DWORD PTR [ebx]
  4200a8:	or     eax,0xec677d46
  4200ad:	and    eax,0x8d3c501e
  4200b2:	pop    ds
  4200b3:	popf   
  4200b4:	hlt    
  4200b5:	(bad)  
  4200b6:	imul   ebx,DWORD PTR [eax],0x6e
  4200b9:	sbb    DWORD PTR [eax],0xffffffe3
  4200bc:	or     ebx,DWORD PTR [ecx-0x3f75e92e]
  4200c2:	ret    
  4200c3:	mov    ebp,0x5d55dab9
  4200c8:	scas   eax,DWORD PTR es:[edi]
  4200c9:	adc    eax,0xb9ef2847
  4200ce:	sti    
  4200cf:	and    bl,bh
  4200d1:	aam    0x8e
  4200d3:	fs xchg edx,eax
  4200d6:	lahf   
  4200d7:	scas   eax,DWORD PTR es:[edi]
  4200d8:	sub    ah,bl
  4200da:	sbb    eax,0x706f644d
  4200df:	out    dx,al
  4200e0:	into   
  4200e1:	jo     0x420145
  4200e3:	test   BYTE PTR [ecx],bh
  4200e5:	loopne 0x420118
  4200e7:	add    esi,DWORD PTR [esi-0x75132e99]
  4200ed:	(bad)  [edi]
  4200ef:	push   eax
  4200f0:	add    bl,BYTE PTR [ebx-0x8b0916d]
  4200f6:	repnz retf 
  4200f8:	jle    0x420126
  4200fa:	call   0xc51970b2
  4200ff:	mov    al,0xe4
  420101:	mov    al,dl
  420103:	retf   
  420104:	inc    ebp
  420105:	fisttp DWORD PTR [ebp+0x63e11590]
  42010b:	fidiv  WORD PTR [esi]
  42010d:	and    edx,DWORD PTR [ebx+0x1613208]
  420113:	mov    ah,0xcd
  420115:	adc    BYTE PTR [eax-0x5],dh
  420118:	sub    dl,BYTE PTR [eax]
  42011a:	retf   
  42011b:	mov    WORD PTR ds:0x4af8c315,cs
  420121:	or     al,0x43
  420123:	inc    ebx
  420124:	sub    DWORD PTR [edx],ebx
  420126:	aaa    
  420127:	popf   
  420128:	xor    al,0x2c
  42012a:	ja     0x4200d2
  42012c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42012d:	mov    fs,WORD PTR [edi-0x2a72e33c]
  420133:	adc    eax,0xce5361ef
  420138:	jnp    0x420178
  42013a:	adc    eax,0xa4ba4e4
  42013f:	pusha  
  420140:	push   esi
  420141:	mov    bh,0x4b
  420143:	clc    
  420144:	xor    al,dl
  420146:	mov    ebx,0x64b5bb65
  42014b:	pop    esp
  42014c:	lahf   
  42014d:	dec    esp
  42014e:	loopne 0x42012b
  420150:	sub    dl,bh
  420152:	outs   dx,BYTE PTR ds:[esi]
  420153:	dec    eax
  420154:	sbb    al,0x9b
  420156:	xor    BYTE PTR [esi+0x34ba2fec],0xc1
  42015d:	or     BYTE PTR [eax],bl
  42015f:	sti    
  420160:	pop    eax
  420161:	into   
  420162:	mov    eax,ds:0xc4296e61
  420167:	sti    
  420168:	pushf  
  420169:	std    
  42016a:	pop    edi
  42016b:	rcl    esp,cl
  42016d:	xlat   BYTE PTR ds:[ebx]
  42016e:	pushf  
  42016f:	fcom   QWORD PTR [edi-0x38]
  420172:	arpl   WORD PTR [esi+0x37e7ac1d],si
  420178:	stc    
  420179:	jmp    0xe2e1e3b1
  42017e:	adc    DWORD PTR [ecx+esi*2],edi
  420181:	dec    ecx
  420182:	iret   
  420183:	and    DWORD PTR [esi],0xffffff8c
  420186:	cs hlt 
  420188:	mov    DWORD PTR [ecx-0xcb9b80e],ecx
  42018e:	push   0xfffffff7
  420190:	sub    eax,0x20aa0fac
  420195:	cmp    ebx,ebp
  420197:	pop    ds
  420198:	lock mov dl,0xc9
  42019b:	cmp    al,0xd3
  42019d:	shr    DWORD PTR [edi],1
  42019f:	mov    al,ds:0xd001fe92
  4201a4:	push   ebx
  4201a5:	cli    
  4201a6:	inc    esi
  4201a7:	movq   mm3,QWORD PTR [ecx-0x20]
  4201ab:	(bad)  
  4201ac:	hlt    
  4201ad:	mov    ah,0x7e
  4201af:	add    edx,DWORD PTR [esi+0x631ceebd]
  4201b5:	fcom   DWORD PTR [ecx-0x61128b6]
  4201bb:	inc    esp
  4201bc:	push   eax
  4201bd:	push   ebp
  4201be:	mov    ah,0x5
  4201c0:	mov    DWORD PTR [eax-0x5b7228fb],esi
  4201c6:	cmp    ah,0x1f
  4201c9:	(bad)  
  4201cb:	leave  
  4201cc:	enter  0x425,0x5d
  4201d0:	jo     0x4201cd
  4201d2:	xor    DWORD PTR [ecx+0x2e0f824b],esi
  4201d8:	and    DWORD PTR [esi+0x5e9a8dd8],esi
  4201de:	xor    edx,ebx
  4201e0:	push   esi
  4201e1:	jb     0x42024e
  4201e3:	sahf   
  4201e4:	push   ebp
  4201e5:	xor    bl,BYTE PTR [eax]
  4201e7:	jecxz  0x42022d
  4201e9:	cs push 0x1755fe3e
  4201ef:	pop    ebp
  4201f0:	or     BYTE PTR [ebx],al
  4201f2:	xchg   ebp,eax
  4201f3:	sbb    BYTE PTR [ebp+0x41],0x7f
  4201f7:	or     dh,0xd2
  4201fa:	inc    edi
  4201fb:	push   0x4e39b93a
  420200:	(bad)  [ecx]
  420202:	or     esp,esp
  420204:	jbe    0x420219
  420206:	push   0x60
  420208:	aad    0xdc
  42020a:	loop   0x4201a8
  42020c:	xchg   ebx,eax
  42020d:	xchg   esp,eax
  42020e:	add    edi,ebp
  420210:	lds    ebx,FWORD PTR [edi-0x1ab950cf]
  420216:	jae    0x4201bb
  420218:	mov    ebp,0xb7ece2f9
  42021d:	js     0x420201
  42021f:	sbb    DWORD PTR [eax+0x1a],edx
  420222:	adc    eax,0xb5b6e9b4
  420227:	gs pop ds
  420229:	or     al,0x28
  42022b:	call   DWORD PTR [eax-0x72]
  42022e:	mov    ebx,0xcbd5dda8
  420233:	iret   
  420234:	test   al,0xdb
  420236:	mov    eax,ds:0x601a2bae
  42023b:	mov    edi,0xacbf98fc
  420240:	lods   al,BYTE PTR ds:[esi]
  420241:	lock push ss
  420243:	cmp    ah,BYTE PTR [ebp+eax*4+0x65]
  420247:	or     eax,0x76db20cc
  42024c:	scas   eax,DWORD PTR es:[edi]
  42024d:	add    BYTE PTR [eax],al
  42024f:	add    BYTE PTR [eax],al
  420251:	add    BYTE PTR [esi+0x57fe4584],dl
  420257:	(bad)  
  420258:	mov    edi,0xa59b80ec
  42025d:	and    BYTE PTR [esp+edi*1-0x5f],bh
  420261:	adc    edi,DWORD PTR [edi-0xcfffe84]
  420267:	add    al,0x0
  420269:	add    BYTE PTR [ebx+0x3837c567],ch
  42026f:	inc    edx
  420270:	or     BYTE PTR [edx+0x6d],cl
  420273:	and    edx,DWORD PTR [eax]
  420275:	mov    ds:0x8e909d6f,eax
  42027a:	ss dec edx
  42027c:	mov    eax,ds:0x8dc2304e
  420281:	fimul  DWORD PTR [eax-0x663f5dab]
  420287:	loope  0x42026f
  420289:	sub    edi,ebp
  42028b:	mov    dh,0x3a
  42028d:	mov    eax,fs
  42028f:	mov    cs,ebx
  420291:	in     eax,dx
  420292:	(bad)  
  420293:	repnz arpl sp,bp
  420296:	dec    ebx
  420297:	daa    
  420298:	popa   
  420299:	adc    al,0x45
  42029b:	jmp    0x811b:0x25b3175c
  4202a2:	cmp    DWORD PTR [edx],eax
  4202a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202a5:	jmp    0xa711:0xea9f4ecb
  4202ac:	lods   al,BYTE PTR ds:[esi]
  4202ad:	cs ret 0x864
  4202b1:	mov    dh,0x61
  4202b3:	cmp    eax,0xbce71b0f
  4202b8:	jne    0x420291
  4202ba:	xchg   esp,eax
  4202bb:	dec    edx
  4202bc:	xchg   ebx,esp
  4202be:	inc    ecx
  4202bf:	xor    ecx,DWORD PTR [ebx-0x73]
  4202c2:	popf   
  4202c3:	sub    bl,BYTE PTR ss:[ecx]
  4202c6:	jl     0x4202ca
  4202c8:	ja     0x4202ba
  4202ca:	sbb    DWORD PTR [edx+0x2e],esi
  4202cd:	jne    0x4202a8
  4202cf:	mov    al,ds:0xfab5f6cc
  4202d4:	push   ds
  4202d5:	xor    eax,0xb2a07c6d
  4202da:	data16 loope 0x4202d3
  4202dd:	lea    ecx,[eax]
  4202df:	push   ebp
  4202e0:	imul   esp,DWORD PTR [esi*2+0x2be7ae44],0x42
  4202e8:	pop    edi
  4202e9:	repnz add edi,DWORD PTR [edi+0x6b]
  4202ed:	das    
  4202ee:	scas   eax,DWORD PTR es:[edi]
  4202ef:	jmp    0x42027d
  4202f1:	sti    
  4202f2:	imul   edi,DWORD PTR [eax+0x349ba195],0x8f48dcbe
  4202fc:	fcomp  DWORD PTR [edx+0x6a8336e5]
  420302:	retf   
  420303:	call   0x6f0e6fd0
  420308:	pop    edi
  420309:	and    DWORD PTR [esi],esp
  42030b:	mov    ds:0xcbe60596,al
  420310:	loope  0x420312
  420312:	inc    edx
  420313:	rcl    eax,0x32
  420316:	pop    ecx
  420317:	out    0x7d,al
  420319:	sbb    DWORD PTR [esi-0x2],0x2fa0381c
  420320:	in     al,dx
  420321:	in     al,0xb8
  420323:	(bad)  
  420324:	mov    dl,0xf2
  420326:	stos   BYTE PTR es:[edi],al
  420327:	pop    ebp
  420328:	clc    
  420329:	xchg   BYTE PTR [ebp+0x77],bh
  42032c:	lahf   
  42032d:	jl     0x4202cc
  42032f:	ret    0xdbf
  420332:	pop    es
  420333:	pop    ss
  420334:	xor    ebx,DWORD PTR [eax]
  420336:	mov    ds:0xe6deadba,al
  42033b:	xor    ch,dh
  42033d:	or     eax,0xadb17e6f
  420342:	in     eax,0x45
  420344:	adc    eax,0x61c7701a
  420349:	mov    ah,0x12
  42034b:	fwait
  42034c:	cmp    al,bl
  42034e:	mov    bl,bh
  420350:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420351:	mov    dh,0x3d
  420353:	and    DWORD PTR [edx-0x655c7a98],edx
  420359:	push   cs
  42035a:	jg     0x420355
  42035c:	aad    0x65
  42035e:	adc    al,0xb2
  420360:	inc    edi
  420361:	inc    edx
  420362:	mov    esp,0xae7dd441
  420367:	(bad)  
  420368:	gs push ss
  42036a:	call   0xbd388af4
  42036f:	xor    BYTE PTR [esi],ah
  420371:	sbb    ah,BYTE PTR [ebx+0x20]
  420374:	push   edi
  420375:	nop
  420376:	lahf   
  420377:	mov    bl,0x3f
  420379:	inc    esi
  42037a:	test   al,0xe2
  42037c:	xchg   edx,eax
  42037d:	in     al,dx
  42037e:	pop    ebp
  42037f:	icebp  
  420380:	push   cs
  420381:	push   esp
  420382:	jle    0x42033d
  420384:	mov    bh,0xdb
  420386:	sbb    ebx,edx
  420388:	sahf   
  420389:	pop    ebp
  42038a:	aas    
  42038b:	dec    esi
  42038c:	sub    ah,BYTE PTR [edi]
  42038e:	add    BYTE PTR [eax+0x5d],dh
  420391:	repnz scas al,BYTE PTR es:[edi]
  420393:	cmp    DWORD PTR [ebp-0x27],0x79f058be
  42039a:	sahf   
  42039b:	rcr    BYTE PTR [eax*1-0x439af087],1
  4203a2:	ds jmp 0xd27cfae1
  4203a8:	inc    edi
  4203a9:	xchg   ecx,eax
  4203aa:	arpl   sp,bp
  4203ac:	imul   esp,DWORD PTR [ecx+0x32],0x5cce61f0
  4203b3:	mov    ss,WORD PTR [edx]
  4203b5:	ret    0xed70
  4203b8:	jmp    0xd05925a6
  4203bd:	sub    eax,0xa28f6af4
  4203c2:	std    
  4203c3:	add    BYTE PTR [edx+0x2],ch
  4203c6:	mov    cl,0xc3
  4203c8:	xchg   edi,eax
  4203c9:	out    dx,al
  4203ca:	xor    eax,0x4ed0e277
  4203cf:	or     DWORD PTR [edi+0x2fe2a530],ebp
  4203d5:	jmp    0x126d96a9
  4203da:	test   eax,0x3132f093
  4203df:	lods   eax,DWORD PTR ds:[esi]
  4203e0:	lods   al,BYTE PTR ds:[esi]
  4203e1:	sub    ebp,DWORD PTR [ebp-0x22]
  4203e4:	in     al,dx
  4203e5:	sbb    dh,ch
  4203e7:	loopne 0x4203f2
  4203e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203ea:	push   esp
  4203eb:	or     ebp,DWORD PTR [ebx-0x2941d975]
  4203f1:	jp     0x4203ac
  4203f3:	lods   eax,DWORD PTR ds:[esi]
  4203f4:	add    esp,DWORD PTR ds:0x8287745d
  4203fa:	ins    DWORD PTR es:[edi],dx
  4203fb:	add    al,bl
  4203fd:	sbb    DWORD PTR [esi-0x22],ecx
  420400:	mov    ds:0x8a9f8d3d,eax
  420405:	retf   
  420406:	cmp    al,0xac
  420408:	mov    bl,0x1a
  42040a:	je     0x42043a
  42040c:	(bad)  
  42040d:	sub    DWORD PTR gs:[esi],0xfffffffc
  420411:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420412:	dec    esi
  420413:	jbe    0x420410
  420415:	mov    dh,0x99
  420417:	sahf   
  420418:	sub    BYTE PTR [ebx-0x3a],dl
  42041b:	pop    esi
  42041c:	(bad)  [edi-0x510725c1]
  420422:	out    dx,al
  420423:	sub    bl,BYTE PTR [esi+0x4f]
  420426:	adc    al,0xf9
  420428:	pop    ebx
  420429:	call   0x7be4:0xa071d17b
  420430:	mov    ds:0x74094e73,eax
  420435:	call   0x9a4:0x55501db3
  42043c:	loope  0x4204a4
  42043e:	out    0x58,eax
  420440:	add    esi,DWORD PTR [ecx-0x6b01b8e0]
  420446:	call   0xeda4247f
  42044b:	pop    ebp
  42044c:	push   es
  42044d:	lods   al,BYTE PTR ds:[esi]
  42044e:	sub    eax,0x96529418
  420453:	cs push esi
  420455:	enter  0x694f,0x16
  420459:	pop    edi
  42045a:	add    ebx,DWORD PTR [edi-0x1a468589]
  420460:	push   0xe70342df
  420465:	add    eax,0x85cf0bbf
  42046a:	and    eax,0x77c90f49
  42046f:	jno    0x420447
  420471:	mov    bh,0xa3
  420473:	mov    bl,0x45
  420475:	cmp    al,0xa7
  420477:	xor    al,0x7f
  420479:	rol    DWORD PTR [ebx],cl
  42047b:	jge    0x420454
  42047d:	sub    DWORD PTR [edx-0x6b9f12b6],ebp
  420483:	data16 add al,0x67
  420486:	ins    DWORD PTR es:[edi],dx
  420487:	outs   dx,BYTE PTR ds:[esi]
  420488:	sti    
  420489:	jb     0x4204d4
  42048b:	push   ds
  42048c:	std    
  42048d:	sahf   
  42048e:	xor    al,0x79
  420490:	call   0xdd682008
  420495:	cld    
  420496:	mov    ah,0xa1
  420498:	pop    ss
  420499:	out    0x83,eax
  42049b:	popf   
  42049c:	daa    
  42049d:	arpl   WORD PTR [esi+0xc],bp
  4204a0:	and    esi,edi
  4204a2:	lahf   
  4204a3:	fstp   TBYTE PTR [edi]
  4204a5:	add    al,0x23
  4204a7:	adc    esp,DWORD PTR [ecx-0x53]
  4204aa:	hlt    
  4204ab:	jmp    0xc643:0xdf4b90fb
  4204b2:	outs   dx,BYTE PTR ds:[esi]
  4204b3:	and    BYTE PTR ds:0x5a2104f2,dl
  4204b9:	lods   al,BYTE PTR ds:[esi]
  4204ba:	xchg   esi,eax
  4204bb:	(bad)  
  4204bc:	sbb    al,0x26
  4204be:	scas   eax,DWORD PTR es:[edi]
  4204bf:	pop    edx
  4204c0:	add    BYTE PTR [esi],dh
  4204c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204c3:	ds mov ebx,0x9486a839
  4204c9:	xchg   BYTE PTR [edx-0x10],al
  4204cc:	int    0x54
  4204ce:	mov    edx,0x384e33ab
  4204d3:	jl     0x420544
  4204d5:	rcr    DWORD PTR [ebp+0x41ba7658],cl
  4204db:	mov    DWORD PTR [edx+0x51],ebp
  4204de:	xlat   BYTE PTR ds:[ebx]
  4204df:	jno    0x42054d
  4204e1:	jp     0x42046e
  4204e3:	fcom   DWORD PTR [ebx+0x525f13e4]
  4204e9:	test   al,0x24
  4204eb:	stos   BYTE PTR es:[edi],al
  4204ec:	in     eax,dx
  4204ed:	out    dx,eax
  4204ee:	stc    
  4204ef:	pop    ebx
  4204f0:	mov    ds:0x661a838f,eax
  4204f5:	stos   BYTE PTR es:[edi],al
  4204f6:	jp     0x42049c
  4204f8:	retf   0x93d6
  4204fb:	xor    eax,0x3924fce8
  420500:	xor    dl,BYTE PTR [edx-0x2f1779a4]
  420506:	add    ah,BYTE PTR [edi]
  420508:	call   0xad04:0xc68f8323
  42050f:	gs loopne 0x420583
  420512:	in     al,dx
  420513:	pusha  
  420514:	mov    cl,0x3
  420516:	xor    dl,BYTE PTR [eax+0x6f5a0abc]
  42051c:	jns    0x4204d7
  42051e:	mov    al,ch
  420520:	jno    0x420564
  420522:	or     ch,BYTE PTR [esi+0x449e4a2b]
  420528:	pop    ebx
  420529:	fs adc al,0x5f
  42052c:	cmp    al,0xb
  42052e:	dec    esi
  42052f:	mov    eax,0x922dd6dd
  420534:	ja     0x4204de
  420536:	or     DWORD PTR [edx],esi
  420538:	bound  esi,QWORD PTR [ecx+0x7c]
  42053b:	iret   
  42053c:	jp     0x420565
  42053e:	outs   dx,BYTE PTR ds:[esi]
  42053f:	lea    esi,[ebp-0x67877bdc]
  420545:	daa    
  420546:	push   es
  420547:	dec    esp
  420548:	arpl   WORD PTR [esi+0x12],si
  42054b:	scas   al,BYTE PTR es:[edi]
  42054c:	ret    0x1376
  42054f:	dec    edx
  420550:	xchg   bl,dh
  420552:	dec    ebp
  420553:	fsub   QWORD PTR [esi+0xa787b6]
  420559:	aaa    
  42055a:	imul   ecx,DWORD PTR [ebx+esi*2+0x37],0xfffffff6
  42055f:	jmp    0x196b:0xe4e24804
  420566:	adc    ebp,esi
  420568:	jo     0x4204f5
  42056a:	mov    DWORD PTR [esi],edx
  42056c:	jbe    0x4204ee
  42056e:	dec    eax
  42056f:	xchg   ebp,eax
  420570:	mov    BYTE PTR [ebx],0xad
  420573:	imul   DWORD PTR ds:0xfa704ac9
  420579:	sbb    BYTE PTR [ebx],ch
  42057b:	arpl   WORD PTR [eax-0xcdb206e],bx
  420581:	and    BYTE PTR [ebp+0x6a],0xf4
  420585:	fistp  QWORD PTR [edi-0x26]
  420588:	jmp    0x5e18:0xb73658ac
  42058f:	jb     0x4205bd
  420591:	push   ebp
  420592:	in     eax,0x42
  420594:	div    esi
  420596:	mov    eax,ds:0x6ae92f25
  42059b:	sti    
  42059c:	inc    esp
  42059d:	rol    BYTE PTR [edx],1
  42059f:	loope  0x420560
  4205a1:	outs   dx,DWORD PTR ds:[esi]
  4205a2:	jle    0x4205aa
  4205a4:	cli    
  4205a5:	sbb    al,0x76
  4205a7:	or     al,0x55
  4205a9:	push   eax
  4205aa:	ins    BYTE PTR es:[edi],dx
  4205ab:	and    eax,0xb497e0a9
  4205b0:	out    0xe1,al
  4205b2:	aad    0x64
  4205b4:	cld    
  4205b5:	jae    0x4205e6
  4205b7:	dec    eax
  4205b8:	jne    0x420544
  4205ba:	in     al,0xc7
  4205bc:	das    
  4205bd:	leave  
  4205be:	les    esp,FWORD PTR [edx+0x2419543]
  4205c4:	test   al,0x8b
  4205c6:	pop    ss
  4205c7:	mov    ds:0x986032bf,al
  4205cc:	add    BYTE PTR [ecx+0x13],bh
  4205cf:	repz scas eax,DWORD PTR es:[edi]
  4205d1:	stc    
  4205d2:	loop   0x4205d1
  4205d4:	jb     0x420629
  4205d6:	aad    0x91
  4205d8:	inc    edi
  4205d9:	inc    ecx
  4205da:	push   0xffffff90
  4205dc:	xlat   BYTE PTR ds:[ebx]
  4205dd:	cmp    esi,edi
  4205df:	rcl    BYTE PTR [edx*4+0x4cf1a75b],0x93
  4205e7:	inc    ebx
  4205e8:	pop    edi
  4205e9:	mov    es,WORD PTR [edx]
  4205eb:	mov    ebp,0xee01c477
  4205f0:	lds    esi,FWORD PTR [eax]
  4205f2:	mov    ds,WORD PTR [eax]
  4205f4:	scas   al,BYTE PTR es:[edi]
  4205f5:	jnp    0x4205d6
  4205f7:	fs mov ah,0xa8
  4205fa:	pop    esi
  4205fb:	imul   eax,DWORD PTR [ebp+0x644c46ae],0x6e
  420602:	gs and eax,0xa5016eab
  420608:	scas   al,BYTE PTR es:[edi]
  420609:	iret   
  42060a:	xor    dl,ch
  42060c:	mov    esp,0x3c096f1e
  420611:	mov    WORD PTR [edx+eax*8-0x44bca196],fs
  420618:	inc    ebp
  420619:	mov    eax,ds:0xa9ab1da9
  42061e:	and    al,0xe8
  420620:	(bad)  
  420621:	and    al,0x66
  420623:	loopne 0x420609
  420625:	adc    ch,BYTE PTR [esi]
  420627:	mov    al,0x57
  420629:	and    al,0x34
  42062b:	lods   al,BYTE PTR ds:[esi]
  42062c:	int    0xe6
  42062e:	jl     0x420619
  420630:	fwait
  420631:	int3   
  420632:	pop    edx
  420633:	adc    DWORD PTR [esi],eax
  420635:	xchg   ebx,eax
  420636:	bound  edi,QWORD PTR [eax+0x39d811b3]
  42063c:	xor    eax,ebp
  42063e:	inc    ebp
  42063f:	jle    0x420616
  420641:	jge    0x4205e6
  420643:	lods   al,BYTE PTR ds:[esi]
  420644:	loopne 0x4206b8
  420646:	rol    ah,0x4b
  420649:	mov    bl,0xf5
  42064b:	data16 ins BYTE PTR es:[edi],dx
  42064d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42064e:	mov    BYTE PTR [esi+ebp*2+0x32],0x29
  420653:	aam    0x5c
  420655:	sbb    BYTE PTR [ecx+0x17c79f03],bh
  42065b:	sbb    al,0xf
  42065d:	mov    eax,0x67380712
  420662:	dec    ebp
  420663:	fadd   st(2),st
  420665:	inc    edi
  420666:	mov    cl,0x2c
  420668:	adc    BYTE PTR [esi],al
  42066a:	mov    eax,0x6ca4313b
  42066f:	jns    0x42060d
  420671:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420672:	xchg   esp,eax
  420673:	and    al,0xde
  420675:	out    dx,al
  420676:	test   al,0xcb
  420678:	sbb    BYTE PTR [edx],cl
  42067a:	cld    
  42067b:	js     0x4206f0
  42067d:	je     0x4206f1
  42067f:	or     esi,ecx
  420681:	push   esi
  420682:	je     0x42068a
  420684:	dec    edx
  420685:	pop    edx
  420686:	jge    0x4206d2
  420688:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420689:	(bad)  
  42068a:	cmp    esi,edx
  42068c:	push   eax
  42068d:	neg    al
  42068f:	iret   
  420690:	adc    DWORD PTR ds:0x4c72b010,ecx
  420696:	test   al,0x8d
  420698:	pop    eax
  420699:	pop    ds
  42069a:	mov    ebp,0x88652e4e
  42069f:	fldcw  WORD PTR [eax+0x7609b30a]
  4206a5:	push   esp
  4206a6:	ins    BYTE PTR es:[edi],dx
  4206a7:	lea    ebp,[edi+0x22]
  4206aa:	stos   BYTE PTR es:[edi],al
  4206ab:	and    DWORD PTR [edi-0x11],esp
  4206ae:	mov    dh,0x21
  4206b0:	div    esi
  4206b2:	mov    ch,0x94
  4206b4:	cmp    eax,0x93b7ae15
  4206b9:	mov    edi,0x137f51d5
  4206be:	cmp    al,0x74
  4206c0:	pushf  
  4206c1:	mov    DWORD PTR [edx-0x47],0xf26d6cf3
  4206c8:	mov    ah,BYTE PTR [ecx+0x61]
  4206cb:	adc    BYTE PTR [eax+0x12],dh
  4206ce:	ins    BYTE PTR es:[edi],dx
  4206cf:	les    ecx,FWORD PTR [esi+edx*2+0x7413ffc9]
  4206d6:	(bad)  
  4206d8:	mov    ebp,0xb4340cc3
  4206dd:	mov    ecx,0x5ab57671
  4206e2:	cmp    DWORD PTR [edi],edx
  4206e4:	test   al,0x2d
  4206e6:	mov    edx,0x98d986b8
  4206eb:	ret    
  4206ec:	inc    ebx
  4206ed:	and    ah,BYTE PTR [edx+0x2ad50075]
  4206f3:	stos   BYTE PTR es:[edi],al
  4206f4:	cmp    eax,0x79f938ac
  4206f9:	xor    DWORD PTR [ebp-0x5ad2eecc],0xffffffbd
  420700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420701:	test   BYTE PTR [ebx-0x45],0xab
  420705:	(bad)  
  420706:	mov    dl,0xdc
  420709:	push   ss
  42070a:	pop    DWORD PTR [ebp+ebx*8+0x6d]
  42070e:	test   BYTE PTR [ecx],dh
  420710:	jns    0x4206c9
  420712:	pushf  
  420713:	mov    edx,0xe97bebbe
  420718:	fsub   QWORD PTR [ecx-0x4b5d2a25]
  42071e:	test   ah,0x5d
  420721:	fnstcw WORD PTR [edi+0x72]
  420724:	push   edi
  420725:	int    0x2e
  420727:	call   0x1106:0x8fc0438d
  42072e:	stc    
  42072f:	test   al,0xfb
  420731:	push   ecx
  420732:	sub    al,0x2b
  420734:	dec    esi
  420735:	pop    esp
  420736:	ins    DWORD PTR es:[edi],dx
  420737:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420738:	test   DWORD PTR [edx+0x64],0x44199026
  42073f:	push   ds
  420740:	cmp    edx,edi
  420742:	add    DWORD PTR es:[esp+ecx*4+0x4b32d0b3],ebx
  42074a:	(bad)  
  42074c:	dec    ebx
  42074d:	fs int3 
  42074f:	(bad)  
  420750:	sahf   
  420751:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420752:	ss sbb eax,0xf4800db8
  420758:	int3   
  420759:	sub    al,0x41
  42075b:	mov    al,ds:0xf
  420760:	add    BYTE PTR [eax],al
  420762:	and    DWORD PTR [edi],ebx
  420764:	fld    QWORD PTR [esi]
  420766:	inc    esi
  420768:	sti    
  420769:	aas    
  42076a:	jb     0x42078b
  42076c:	add    edx,edx
  42076e:	ss dec esp
  420770:	mov    esp,0x181b2d3
  420775:	add    bl,dh
  420777:	add    al,0x0
  420779:	add    al,al
  42077b:	adc    WORD PTR [esi],bp
  42077e:	mov    edi,esi
  420780:	aas    
  420781:	imul   ebx,DWORD PTR [esi+0x3a],0x1a4f9df4
  420788:	inc    edi
  420789:	imul   esi,DWORD PTR [edx],0xffffff93
  42078c:	xor    bl,bl
  42078e:	(bad)  
  42078f:	popf   
  420790:	aaa    
  420791:	mov    al,ds:0xfa9f382a
  420796:	int    0xf1
  420798:	loopne 0x420747
  42079a:	inc    esp
  42079b:	popf   
  42079c:	push   ss
  42079d:	shl    DWORD PTR [edx],0xd9
  4207a0:	retf   
  4207a1:	into   
  4207a2:	icebp  
  4207a3:	mov    ds:0x293f405b,al
  4207a8:	pop    ebx
  4207a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207aa:	addr16 xor ecx,esp
  4207ad:	sti    
  4207ae:	fidivr WORD PTR [esi-0x7b]
  4207b1:	lea    esp,[eax+0x7b]
  4207b4:	dec    eax
  4207b5:	xchg   ecx,eax
  4207b6:	inc    ecx
  4207b7:	mov    eax,ds:0xd2477bcc
  4207bc:	imul   esp,DWORD PTR [eax],0x73
  4207bf:	pushf  
  4207c0:	out    dx,al
  4207c1:	in     al,0x72
  4207c3:	xchg   ebp,eax
  4207c4:	into   
  4207c5:	xor    ebp,DWORD PTR [edi+0x3d]
  4207c8:	fistp  DWORD PTR [ebx]
  4207ca:	test   ebp,0x2abd6f0c
  4207d0:	add    BYTE PTR [eax-0x5da1d0fd],0xa3
  4207d7:	push   es
  4207d8:	les    edi,FWORD PTR [eax+0x61b56136]
  4207de:	xor    DWORD PTR [esi+0x78],ebx
  4207e1:	sbb    dl,al
  4207e3:	xor    eax,0xeb6aeada
  4207e8:	cs out dx,al
  4207ea:	dec    ebp
  4207eb:	mov    eax,0xbe45bdac
  4207f0:	test   edx,esi
  4207f2:	or     ebp,ebp
  4207f4:	or     al,0x6c
  4207f6:	(bad)  
  4207f7:	mov    BYTE PTR [eax+eax*2-0x5934cef6],ch
  4207fe:	lods   eax,DWORD PTR ds:[esi]
  4207ff:	test   eax,0xb3584b83
  420804:	mov    BYTE PTR [ecx-0x5f],ch
  420807:	jmp    0x420834
  420809:	test   al,0xaf
  42080b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42080c:	das    
  42080d:	or     bl,BYTE PTR [esi-0x25]
  420810:	mov    eax,DWORD PTR [eax]
  420812:	mul    dh
  420814:	push   edi
  420815:	jle    0x4207cc
  420817:	shl    BYTE PTR [edx],0x0
  42081a:	div    DWORD PTR [edx+0x312c6612]
  420820:	add    cl,BYTE PTR [esi-0x2cabf9d1]
  420826:	sbb    DWORD PTR [ebp+0x7d4fa490],0xffffffcd
  42082d:	stos   DWORD PTR es:[edi],eax
  42082e:	out    0x16,al
  420830:	fnstsw WORD PTR [eax-0x34]
  420833:	sub    cl,BYTE PTR [eax+eax*8-0x16]
  420837:	out    dx,al
  420838:	add    al,0x82
  42083a:	ret    
  42083b:	data16 fld QWORD PTR [edx+0x32704d11]
  420842:	in     al,dx
  420843:	cmp    eax,0xf00cd36f
  420848:	adc    al,BYTE PTR [eax-0x3c6cb358]
  42084e:	mov    al,0xa4
  420850:	mov    ebp,0x4d5d7439
  420855:	mov    WORD PTR ds:0x6d821cd0,ds
  42085b:	mov    eax,0x80cb6530
  420860:	int3   
  420861:	xlat   BYTE PTR ds:[ebx]
  420862:	mov    ebx,DWORD PTR [edx]
  420864:	das    
  420865:	repz int 0xc5
  420868:	jg     0x42085e
  42086a:	mov    edi,0x6cd0ab17
  42086f:	mov    edx,0xeb6aef4b
  420874:	mov    ebx,0x9eade5eb
  420879:	sub    BYTE PTR [esi+0x64196de0],bh
  42087f:	sub    bh,BYTE PTR [ebx]
  420881:	data16 mov ch,0xbd
  420884:	adc    DWORD PTR [eax+0x66],edx
  420887:	mov    esi,0xa1db0dd8
  42088c:	fstp   QWORD PTR ds:0x20a8f5e8
  420892:	or     edx,eax
  420894:	out    dx,eax
  420895:	mov    ebp,0xc4da9707
  42089a:	popf   
  42089b:	in     eax,dx
  42089c:	pop    esi
  42089d:	adc    bh,dh
  42089f:	and    BYTE PTR [esi],al
  4208a1:	lods   eax,DWORD PTR ds:[esi]
  4208a2:	jp     0x420916
  4208a4:	mov    eax,ds:0xb3bec90b
  4208a9:	xlat   BYTE PTR ds:[ebx]
  4208aa:	hlt    
  4208ab:	push   cs
  4208ac:	nop
  4208ad:	das    
  4208ae:	ins    DWORD PTR es:[edi],dx
  4208af:	mov    dl,BYTE PTR [ebx+esi*1]
  4208b2:	aaa    
  4208b3:	out    dx,al
  4208b4:	jae    0x42083f
  4208b6:	mov    bl,0xf3
  4208b8:	or     eax,0xfa6fbe26
  4208bd:	add    esi,ecx
  4208bf:	xor    DWORD PTR [ebp+0x62],edx
  4208c2:	xor    BYTE PTR [eax-0x174dd0e0],cl
  4208c8:	xor    esi,edx
  4208ca:	lds    ebx,FWORD PTR [esi+0x20]
  4208cd:	test   BYTE PTR ds:0x687f98b1,ch
  4208d3:	xchg   edi,eax
  4208d4:	add    ebp,DWORD PTR [edx-0x5d]
  4208d7:	pop    eax
  4208d8:	sbb    edx,eax
  4208da:	sbb    eax,0xd3fe1520
  4208df:	jno    0x42090f
  4208e1:	mov    esp,0x7abd948d
  4208e6:	out    0x9f,al
  4208e8:	retf   0x3be6
  4208eb:	xlat   BYTE PTR ds:[ebx]
  4208ec:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208ee:	std    
  4208ef:	les    esi,FWORD PTR [edx+edi*4]
  4208f2:	sbb    ebx,0xa56849b1
  4208f8:	inc    ebx
  4208f9:	pop    ecx
  4208fa:	lods   al,BYTE PTR ds:[esi]
  4208fb:	push   ss
  4208fc:	lock shr BYTE PTR [ecx],0x8b
  420900:	shl    esi,1
  420902:	mov    esi,0x9154243d
  420907:	in     eax,0x73
  420909:	or     ah,ch
  42090b:	imul   DWORD PTR [eax+0x5e]
  42090e:	clc    
  42090f:	pushf  
  420910:	cwde   
  420911:	mov    bl,0x6a
  420913:	mov    esi,0x361223e7
  420918:	jo     0x4208ee
  42091a:	pushf  
  42091b:	mov    ebp,0x5a6a436
  420920:	mov    ebp,0x8907bbf1
  420925:	aam    0xfb
  420927:	push   ebp
  420928:	mov    al,0x9f
  42092a:	dec    ecx
  42092b:	jecxz  0x4208d3
  42092d:	add    eax,0x370ae16d
  420932:	xor    DWORD PTR [edi-0x6],ecx
  420935:	ret    
  420936:	adc    BYTE PTR [esi-0x1f],0x62
  42093a:	xor    bh,BYTE PTR [edx-0x3a51defb]
  420940:	nop
  420941:	push   ecx
  420942:	adc    ch,BYTE PTR [eax]
  420944:	add    ebx,0xedc76a04
  42094a:	pop    edx
  42094b:	(bad)  
  42094c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42094d:	sub    eax,0xbb60f60
  420952:	add    BYTE PTR [esi],bl
  420954:	imul   ebx,DWORD PTR [ebx],0x31
  420957:	xchg   edi,eax
  420958:	sbb    eax,esp
  42095a:	lahf   
  42095b:	and    ah,BYTE PTR [ebp+edi*4+0x7c063754]
  420962:	call   DWORD PTR [edx-0x1]
  420965:	fiadd  DWORD PTR [ecx+0x41c7f5c5]
  42096b:	xor    ecx,DWORD PTR [eax-0x12]
  42096e:	or     al,0xad
  420970:	jmp    0x1f520fb
  420975:	std    
  420976:	xor    ebx,DWORD PTR [edx+ebx*2]
  420979:	mov    WORD PTR [esi-0x30],gs
  42097c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42097d:	xor    edi,DWORD PTR [eax+0x507f4393]
  420983:	sahf   
  420984:	bound  ebx,QWORD PTR [edx]
  420986:	cmp    esi,DWORD PTR [ecx+0x42a21082]
  42098c:	xchg   edx,eax
  42098d:	ins    BYTE PTR es:[edi],dx
  42098e:	push   ss
  42098f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420990:	sbb    BYTE PTR [edi],dl
  420992:	sbb    bl,BYTE PTR [ecx-0x3e86e7c8]
  420998:	mov    edx,0x6931a8c1
  42099d:	cdq    
  42099e:	cdq    
  42099f:	dec    esi
  4209a0:	sahf   
  4209a1:	xor    bh,BYTE PTR [edi]
  4209a3:	sbb    ecx,DWORD PTR [ecx+0x6b]
  4209a6:	int    0xbd
  4209a8:	jge    0x42096b
  4209aa:	xchg   ecx,eax
  4209ab:	xor    DWORD PTR [edx],0xffffffee
  4209ae:	mov    al,ds:0xd8b7fe38
  4209b3:	dec    edx
  4209b4:	jmp    0x65da:0x6afbe90
  4209bb:	add    esp,eax
  4209bd:	cmp    esp,0xdeb566c6
  4209c3:	add    eax,0x45429936
  4209c8:	jb     0x420a2e
  4209ca:	in     eax,dx
  4209cb:	or     edi,DWORD PTR [ebx-0x12]
  4209ce:	pushf  
  4209cf:	sbb    eax,0xd3d483f2
  4209d4:	xor    ebx,esp
  4209d6:	sbb    eax,0x124b8e21
  4209db:	fisub  DWORD PTR [ecx+0x7c]
  4209de:	sbb    esp,DWORD PTR [edx-0x5df13059]
  4209e4:	sbb    BYTE PTR [edi+0xd],dh
  4209e7:	push   eax
  4209e8:	jne    0x420a61
  4209ea:	sar    ah,1
  4209ec:	ins    BYTE PTR es:[edi],dx
  4209ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209ee:	sbb    eax,DWORD PTR [ebx+0x1a]
  4209f1:	inc    esi
  4209f2:	add    eax,0x5b473702
  4209f7:	mov    ch,0xfa
  4209f9:	mov    esp,0x31321b64
  4209fe:	in     eax,dx
  4209ff:	push   0xffffffd0
  420a01:	and    eax,0x805b2bad
  420a06:	xor    eax,0xd10ceaa9
  420a0b:	sub    eax,0x67d2feec
  420a10:	push   0x71
  420a12:	add    eax,DWORD PTR [edx-0x2cc196f4]
  420a18:	out    dx,eax
  420a19:	fisub  WORD PTR [esi+0x67]
  420a1c:	dec    ebp
  420a1d:	xchg   ebx,eax
  420a1e:	fsub   QWORD PTR [edx-0x23]
  420a21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a22:	daa    
  420a23:	pop    edi
  420a24:	jp     0x420a58
  420a26:	leave  
  420a27:	retf   0x41ae
  420a2a:	ret    
  420a2b:	outs   dx,DWORD PTR ds:[esi]
  420a2c:	mov    DWORD PTR [ecx-0x78954579],edx
  420a32:	jbe    0x420aa1
  420a34:	xchg   BYTE PTR [edx-0x463b05c1],al
  420a3a:	xchg   edi,eax
  420a3b:	add    BYTE PTR [ebp+0x69],al
  420a3e:	adc    DWORD PTR [esi-0x6389ee6f],0x325c362d
  420a48:	mov    ?,WORD PTR [eax-0x48]
  420a4b:	cmp    bh,0x7a
  420a4e:	loopne 0x420aa9
  420a50:	dec    esp
  420a51:	cmc    
  420a52:	jl     0x420a12
  420a54:	pop    ds
  420a55:	sbb    BYTE PTR [ecx-0x7a],bl
  420a58:	les    esi,FWORD PTR [edi]
  420a5a:	test   al,0xc2
  420a5c:	mov    eax,0xf00d2546
  420a61:	add    ah,cl
  420a63:	iret   
  420a64:	cwde   
  420a65:	retf   0xc9b3
  420a68:	jl     0x420a12
  420a6a:	jno    0x420ae6
  420a6c:	push   0x981bf778
  420a71:	ins    BYTE PTR es:[edi],dx
  420a72:	xchg   edi,eax
  420a73:	or     DWORD PTR [ebx+0x69],edx
  420a76:	mov    eax,0xaf3341a8
  420a7b:	ds (bad) 
  420a7d:	push   0x69
  420a7f:	std    
  420a80:	dec    esi
  420a81:	and    BYTE PTR [edx+0x44],bl
  420a84:	dec    edi
  420a85:	call   0x86498e3c
  420a8a:	mov    BYTE PTR [edx+edx*4],dh
  420a8d:	sti    
  420a8e:	jo     0x420a23
  420a90:	jp     0x420adc
  420a92:	mov    esi,0xd2c812cb
  420a97:	repnz push ecx
  420a99:	repnz push edi
  420a9b:	retf   
  420a9c:	loop   0x420a7c
  420a9e:	mov    al,ds:0x91ce77db
  420aa3:	pusha  
  420aa4:	sbb    edi,DWORD PTR [edi]
  420aa6:	or     DWORD PTR [ebx],ebp
  420aa8:	(bad)  
  420aaa:	cmp    ah,BYTE PTR [ebx+edi*1+0x15e837e]
  420ab1:	mov    cl,0xa4
  420ab3:	fmul   QWORD PTR [eax]
  420ab5:	push   es
  420ab6:	in     al,0x35
  420ab8:	mov    edi,0xd548585c
  420abd:	leave  
  420abe:	sbb    BYTE PTR [ebp+0x77f9c6bd],0xb9
  420ac5:	arpl   sp,dx
  420ac7:	xchg   esp,eax
  420ac8:	ins    BYTE PTR es:[edi],dx
  420ac9:	ss (bad) 
  420acb:	out    0x42,al
  420acd:	inc    ebp
  420ace:	push   ebx
  420acf:	or     eax,esp
  420ad1:	dec    ecx
  420ad2:	fadd   QWORD PTR [edi]
  420ad4:	arpl   sp,sp
  420ad6:	adc    eax,0x4b09be41
  420adb:	push   ebx
  420adc:	jnp    0x420a63
  420ade:	jb     0x420b0b
  420ae0:	pop    ebp
  420ae1:	xchg   BYTE PTR [edx-0x170b777b],ah
  420ae7:	mov    ds,WORD PTR [ecx+eax*4]
  420aea:	mov    edi,0x353f8144
  420aef:	jl     0x420aec
  420af1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420af2:	sahf   
  420af3:	nop
  420af4:	ss xor al,0xbd
  420af7:	shl    dh,1
  420af9:	dec    eax
  420afa:	test   BYTE PTR [ebx+0x6ce913fd],0x5f
  420b01:	retf   
  420b02:	dec    esi
  420b03:	jbe    0x420b3c
  420b05:	iret   
  420b06:	aam    0x1b
  420b08:	fldenv [esi-0x479845fb]
  420b0e:	add    edx,DWORD PTR [ebx]
  420b10:	pop    esp
  420b11:	sti    
  420b12:	cmp    BYTE PTR [eax+eax*2-0x72bb0066],ch
  420b19:	cmp    al,0xf2
  420b1b:	imul   ebx,DWORD PTR [ecx+0x6f],0xffffffbd
  420b1f:	and    eax,0x4575e8b5
  420b24:	(bad)  ds:0x66770312
  420b2a:	fdiv   QWORD PTR [ecx+edx*2+0x24]
  420b2e:	push   ebp
  420b2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b30:	or     dh,ch
  420b32:	lock mov ds:0x151fca28,al
  420b38:	cmp    al,0x35
  420b3a:	or     al,0xdc
  420b3c:	popa   
  420b3d:	int3   
  420b3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b3f:	jge    0x420b77
  420b41:	jle    0x420b2e
  420b43:	adc    bh,ah
  420b45:	rol    DWORD PTR [edi+0x606988f0],1
  420b4b:	sub    BYTE PTR [edi+ecx*4+0x6],ah
  420b4f:	pop    esi
  420b50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b51:	ret    0x434f
  420b54:	pop    ds
  420b55:	mov    dh,0x59
  420b57:	cdq    
  420b58:	mov    DWORD PTR [eax-0x141c65b2],ebx
  420b5e:	aad    0x43
  420b60:	fwait
  420b61:	addr16 (bad) 
  420b63:	(bad)  
  420b64:	stos   DWORD PTR es:[edi],eax
  420b65:	lds    ebx,FWORD PTR [edx+eax*4+0x1d]
  420b69:	ret    0x766f
  420b6c:	fstp   QWORD PTR [edx+0xee09a1f]
  420b72:	xchg   ebx,eax
  420b73:	jne    0x420b6c
  420b75:	dec    ebp
  420b76:	jg     0x420b48
  420b78:	pop    es
  420b79:	inc    eax
  420b7a:	adc    esp,0xffffffc3
  420b7d:	pusha  
  420b7e:	dec    ebp
  420b7f:	ins    DWORD PTR es:[edi],dx
  420b80:	inc    ebp
  420b81:	cld    
  420b82:	push   0x36e530d9
  420b87:	xor    edi,DWORD PTR [edx]
  420b89:	or     DWORD PTR [esi-0x79a7d8ed],0x15
  420b90:	gs dec esi
  420b92:	lods   al,BYTE PTR ds:[esi]
  420b93:	retf   
  420b94:	sub    DWORD PTR [edx+ebp*4+0x19],ebx
  420b98:	and    esp,DWORD PTR [ecx+0x2f]
  420b9b:	test   al,0x5a
  420b9d:	xor    DWORD PTR [eax],edi
  420b9f:	ror    bl,cl
  420ba1:	or     eax,0x60ff0b6c
  420ba6:	pop    edx
  420ba7:	lods   eax,DWORD PTR ds:[esi]
  420ba8:	and    ebx,ecx
  420baa:	pop    ebx
  420bab:	and    BYTE PTR [esi],dh
  420bad:	pop    edx
  420bae:	dec    ebp
  420baf:	jge    0x420bc8
  420bb1:	fimul  DWORD PTR [ebx+0x65]
  420bb4:	sbb    al,0xbe
  420bb6:	js     0x420c04
  420bb8:	cwde   
  420bb9:	punpckhwd mm3,QWORD PTR [eax+0x1ce17db6]
  420bc0:	stos   DWORD PTR es:[edi],eax
  420bc1:	jmp    0xe66d:0xee5321ef
  420bc8:	jne    0x420b54
  420bca:	fst    DWORD PTR [ebx-0x730ec211]
  420bd0:	ret    0x4d5a
  420bd3:	dec    ecx
  420bd4:	mov    dh,0x11
  420bd6:	mov    ss,WORD PTR [esi-0x55ee825c]
  420bdc:	mov    cl,0xfe
  420bde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bdf:	aad    0x82
  420be1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420be2:	int    0x2f
  420be4:	jno    0x420b69
  420be6:	xor    dl,al
  420be8:	ror    BYTE PTR [ebp-0x442c81c0],1
  420bee:	outs   dx,BYTE PTR ds:[esi]
  420bef:	sbb    ah,BYTE PTR [ebx]
  420bf1:	adc    eax,0x5ccf4951
  420bf6:	out    0x39,eax
  420bf8:	add    DWORD PTR [edx-0x1721181b],esi
  420bfe:	scas   al,BYTE PTR es:[edi]
  420bff:	ret    
  420c00:	and    DWORD PTR [esi-0x4e],edx
  420c03:	test   DWORD PTR [esi+0x2c16be9c],ecx
  420c09:	adc    esi,ebp
  420c0b:	xchg   edi,eax
  420c0c:	mov    ebp,eax
  420c0e:	push   ds
  420c0f:	test   DWORD PTR [ecx],edi
  420c11:	retf   0xc82e
  420c14:	mov    dl,0x7d
  420c16:	mov    edi,0x4962fb1d
  420c1b:	mov    ds:0xdd927d07,al
  420c20:	mov    bl,0xc0
  420c22:	fsub   DWORD PTR [ebp-0x229bc52c]
  420c28:	dec    BYTE PTR [edx]
  420c2a:	outs   dx,BYTE PTR ds:[esi]
  420c2b:	mov    dh,BYTE PTR [ecx+0x7]
  420c2e:	jmp    0x420c5c
  420c30:	dec    ecx
  420c31:	sub    esp,DWORD PTR ds:0x95c703ef
  420c37:	dec    edi
  420c38:	ret    0x1d1f
  420c3b:	(bad)  
  420c3c:	cmp    al,0xd7
  420c3e:	ror    DWORD PTR [esi+0x75f56c61],0x81
  420c45:	inc    ecx
  420c46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c47:	jmp    0x2d2c:0x9db430f4
  420c4e:	dec    esp
  420c4f:	mov    fs,WORD PTR ds:0x25a5e2ff
  420c55:	leave  
  420c56:	adc    ah,BYTE PTR [esi+ebp*8+0x34]
  420c5a:	or     DWORD PTR [edx-0x3784d63c],ebp
  420c60:	dec    esp
  420c61:	stos   BYTE PTR es:[edi],al
  420c62:	jmp    0x5af0:0x7443cc61
  420c69:	xchg   ecx,eax
  420c6a:	mov    ds:0x8da8,eax
  420c6f:	add    BYTE PTR [eax],al
  420c71:	add    BYTE PTR [ecx],al
  420c73:	jge    0x420c4d
  420c75:	mov    ebp,0xfd65bdfc
  420c7a:	or     cl,BYTE PTR [ecx-0x1e7047a9]
  420c80:	int    0x4f
  420c82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c83:	xchg   BYTE PTR [ecx],al
  420c85:	add    bl,dh
  420c87:	add    al,0x0
  420c89:	add    BYTE PTR [ecx-0x6720b50b],cl
  420c8f:	scas   eax,DWORD PTR es:[edi]
  420c90:	rcr    BYTE PTR [eax+0x7bf14179],1
  420c96:	push   ebx
  420c97:	sub    al,0x11
  420c99:	mov    esp,0xd0141fc4
  420c9e:	xchg   ebx,eax
  420c9f:	jo     0x420cf9
  420ca1:	mov    eax,ds:0x9866e665
  420ca6:	in     al,dx
  420ca7:	push   0xadd79234
  420cac:	fnsave [ecx-0x3d]
  420caf:	pop    ebx
  420cb0:	fwait
  420cb1:	bound  ecx,QWORD PTR [ebp+0x60cb4a]
  420cb7:	les    esp,FWORD PTR [eax]
  420cb9:	inc    ecx
  420cba:	jp     0x420d1a
  420cbc:	test   al,0xa5
  420cbe:	icebp  
  420cbf:	(bad)  
  420cc0:	ins    DWORD PTR es:[edi],dx
  420cc1:	enter  0xb0f3,0xa4
  420cc5:	cli    
  420cc6:	mov    ds:0x7c7c1790,al
  420ccb:	lea    ebx,[edx-0x163e1265]
  420cd1:	sub    edx,DWORD PTR [edx+0x336670e9]
  420cd7:	xchg   ebp,eax
  420cd8:	xchg   BYTE PTR [ebx],cl
  420cda:	pop    edx
  420cdb:	int3   
  420cdc:	mov    al,0x99
  420cde:	or     al,0x81
  420ce0:	or     al,0x77
  420ce2:	jns    0x420cd3
  420ce4:	cmp    DWORD PTR [esi-0x31],0xffffffe5
  420ce8:	sub    BYTE PTR [edi-0x2b0da7b3],dh
  420cee:	inc    esp
  420cef:	cdq    
  420cf0:	sub    DWORD PTR [ecx],esi
  420cf2:	das    
  420cf3:	inc    edi
  420cf4:	stos   DWORD PTR es:[edi],eax
  420cf5:	push   eax
  420cf6:	mov    al,0x75
  420cf8:	rcr    DWORD PTR [edi+0x3a9e5ab3],0xfb
  420cff:	sbb    BYTE PTR [esi-0x75d53100],ch
  420d05:	fs stc 
  420d07:	cmp    BYTE PTR [ecx+eax*4+0x7f],0xb9
  420d0c:	ds push edx
  420d0e:	jle    0x420d4f
  420d10:	lods   al,BYTE PTR ds:[esi]
  420d11:	leave  
  420d12:	inc    ebp
  420d13:	loope  0x420cd3
  420d15:	xlat   BYTE PTR ds:[ebx]
  420d16:	mov    ah,0xbe
  420d18:	std    
  420d19:	addr16 out dx,al
  420d1b:	mov    eax,0x5a1062c8
  420d20:	adc    eax,0x4ea4c253
  420d25:	add    edi,DWORD PTR [ebp+edx*1-0x4e]
  420d29:	loope  0x420d63
  420d2b:	and    al,BYTE PTR [edi+0x2a1fe543]
  420d31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d32:	xchg   esi,eax
  420d33:	mov    ds:0xc3764053,eax
  420d38:	adc    ebp,edx
  420d3a:	lds    esi,FWORD PTR [edi+0x12]
  420d3d:	popf   
  420d3e:	inc    DWORD PTR [esp+esi*8]
  420d41:	pop    ss
  420d42:	jae    0x420ce2
  420d44:	leave  
  420d45:	sti    
  420d46:	inc    ecx
  420d47:	mov    bh,0xee
  420d49:	mov    ds:0x8d2b1f61,eax
  420d4e:	pop    ss
  420d4f:	icebp  
  420d50:	(bad)  
  420d51:	xchg   ebp,eax
  420d52:	hlt    
  420d53:	ja     0x420d9d
  420d55:	cmp    BYTE PTR [edi-0x1825d80a],bh
  420d5b:	dec    edx
  420d5c:	adc    bh,BYTE PTR [ebx-0x7a9b6f46]
  420d62:	scas   al,BYTE PTR es:[edi]
  420d63:	adc    al,0x8a
  420d65:	sub    BYTE PTR [esi-0x45b1acfd],dl
  420d6b:	lods   eax,DWORD PTR ds:[esi]
  420d6c:	push   edx
  420d6d:	push   ss
  420d6e:	adc    BYTE PTR [edi],al
  420d70:	adc    al,0x7e
  420d72:	jae    0x420d0c
  420d74:	cld    
  420d75:	sbb    edi,DWORD PTR [ebp-0x2]
  420d78:	pusha  
  420d79:	pop    ds
  420d7a:	pop    edx
  420d7b:	out    0xc6,al
  420d7d:	ror    DWORD PTR [esi],0x90
  420d80:	jae    0x420dc2
  420d82:	call   0x75ef9ea9
  420d87:	mov    eax,0x632e06f9
  420d8c:	adc    ebx,DWORD PTR [ecx]
  420d8e:	sbb    esp,edi
  420d90:	fsub   DWORD PTR [ebx+0x4420ef46]
  420d96:	inc    ebp
  420d97:	sub    eax,DWORD PTR [ebp-0x60a9be4a]
  420d9d:	inc    edx
  420d9e:	aad    0x11
  420da0:	sbb    al,0xff
  420da2:	pop    ebp
  420da3:	push   ds
  420da4:	outs   dx,BYTE PTR ds:[esi]
  420da5:	dec    esp
  420da6:	gs push 0xffffffae
  420da9:	jae    0x420dbd
  420dab:	jle    0x420d3f
  420dad:	aam    0xef
  420daf:	or     al,BYTE PTR [edx]
  420db1:	jmp    0x420d82
  420db3:	xor    esi,ebp
  420db5:	repnz pop ebp
  420db7:	stc    
  420db8:	aam    0x18
  420dba:	adc    edx,ebx
  420dbc:	push   edx
  420dbd:	inc    esp
  420dbe:	jne    0x420e0b
  420dc0:	daa    
  420dc1:	jecxz  0x420d56
  420dc3:	push   ebp
  420dc4:	xor    ecx,ebp
  420dc6:	and    edi,DWORD PTR [esi-0x48]
  420dc9:	repnz mov DWORD PTR [ebp-0x2fa3136],ebp
  420dd0:	jp     0x420e07
  420dd2:	adc    ebx,DWORD PTR [eax+0xc3fc155]
  420dd8:	test   eax,0xbb2c79bb
  420ddd:	mov    ah,0x71
  420ddf:	(bad)  
  420de0:	fsubr  st(5),st
  420de2:	stos   DWORD PTR es:[edi],eax
  420de3:	ins    DWORD PTR es:[edi],dx
  420de4:	xchg   esi,eax
  420de5:	js     0x420e61
  420de7:	fcomi  st,st(4)
  420de9:	pusha  
  420dea:	outs   dx,DWORD PTR ds:[esi]
  420deb:	pop    ds
  420dec:	enter  0x645f,0xa5
  420df0:	retf   
  420df1:	or     al,0x82
  420df3:	pushf  
  420df4:	sar    BYTE PTR [edx],0xf1
  420df7:	sti    
  420df8:	pop    ebp
  420df9:	fmul   QWORD PTR [edx+0x5]
  420dfc:	addr16 jmp 0x165c6b18
  420e02:	addr16 test eax,0x7b050c1c
  420e08:	xchg   edi,eax
  420e09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e0a:	adc    al,0x43
  420e0c:	pop    eax
  420e0d:	repz sbb DWORD PTR [ebx],ebp
  420e10:	xlat   BYTE PTR ds:[ebx]
  420e11:	mov    eax,ds:0xb567f9c2
  420e16:	xor    ch,bh
  420e18:	dec    ebx
  420e19:	fistp  WORD PTR [ebx-0x18b421db]
  420e1f:	mov    edx,0x17ff7acb
  420e24:	and    esp,esi
  420e26:	loopne 0x420e83
  420e28:	push   eax
  420e29:	inc    esi
  420e2a:	lock (bad) 
  420e2c:	or     DWORD PTR [ecx],ecx
  420e2e:	cmp    BYTE PTR [edx-0x524d70fc],dh
  420e34:	mov    ah,0xa2
  420e36:	loop   0x420e7b
  420e38:	mov    esi,0x72e94be5
  420e3d:	out    dx,al
  420e3e:	fwait
  420e3f:	call   0x3d08:0x7fd10dce
  420e46:	nop
  420e47:	arpl   WORD PTR [ecx+0x4a],dx
  420e4a:	shl    bh,1
  420e4c:	add    dh,BYTE PTR [esp+edx*4-0x7e0add63]
  420e53:	mov    eax,ds:0x21de5a3b
  420e58:	mov    al,0x29
  420e5a:	int    0xe0
  420e5c:	sub    esp,0x14
  420e5f:	ins    DWORD PTR es:[edi],dx
  420e60:	inc    edi
  420e61:	mov    edx,0x8f1654b2
  420e66:	ret    0xf99
  420e69:	xor    eax,0x7f918b25
  420e6e:	xchg   esp,eax
  420e6f:	daa    
  420e70:	add    al,0xf0
  420e72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e73:	sti    
  420e74:	scas   al,BYTE PTR es:[edi]
  420e75:	int    0x3f
  420e77:	mov    DWORD PTR [eax],ebp
  420e79:	xchg   esi,eax
  420e7a:	inc    ebx
  420e7b:	xchg   edx,eax
  420e7c:	or     esi,DWORD PTR [esi+eax*1+0x25707bb9]
  420e83:	dec    ebp
  420e84:	fldcw  WORD PTR [edx]
  420e86:	in     eax,dx
  420e87:	sahf   
  420e88:	mov    al,ds:0x13074888
  420e8d:	pop    edi
  420e8e:	retf   0x9ef1
  420e91:	test   ebp,0x5e817193
  420e97:	data16 ds and al,0x22
  420e9b:	ror    BYTE PTR [eax],0xce
  420e9e:	adc    dh,bl
  420ea0:	or     eax,0x130dc7c
  420ea5:	test   al,0x86
  420ea7:	sub    al,0xf7
  420ea9:	jns    0x420f1b
  420eab:	aaa    
  420eac:	push   ebx
  420ead:	xchg   esp,eax
  420eae:	dec    edx
  420eaf:	mov    ds:0x3eda899f,eax
  420eb4:	sti    
  420eb5:	cmp    al,0x9d
  420eb7:	out    dx,al
  420eb8:	lahf   
  420eb9:	jle    0x420f1a
  420ebb:	jle    0x420f1c
  420ebd:	add    esp,DWORD PTR [eax+0x15]
  420ec0:	jle    0x420ea8
  420ec2:	imul   eax,DWORD PTR [ebp+0x4a4286e1],0x4f
  420ec9:	cmp    bh,BYTE PTR [esi]
  420ecb:	ror    bl,0x2e
  420ece:	jns    0x420ee7
  420ed0:	add    eax,0xd6b6c0f9
  420ed5:	aas    
  420ed6:	inc    ebp
  420ed7:	mov    bh,0x18
  420ed9:	ror    WORD PTR [esi],cl
  420edc:	lds    ebp,FWORD PTR [ecx+0x71]
  420edf:	(bad)  
  420ee3:	sub    DWORD PTR [ebp-0x80],eax
  420ee6:	add    DWORD PTR [ecx-0x46],0x1
  420eea:	jns    0x420ef8
  420eec:	cmp    edi,esi
  420eee:	mov    ss,eax
  420ef0:	rcr    DWORD PTR [ebx+0x55],cl
  420ef3:	test   eax,0xf9e22ee7
  420ef8:	inc    eax
  420ef9:	adc    BYTE PTR [eax],ch
  420efb:	mov    ecx,DWORD PTR [edx+0x22]
  420efe:	and    eax,ebp
  420f00:	imul   edi,DWORD PTR [edx-0x4f38d422],0xbe3014a4
  420f0a:	aaa    
  420f0b:	or     BYTE PTR [eax-0x6396a142],al
  420f11:	les    ecx,FWORD PTR [ebp+0x7d3648e0]
  420f17:	add    cl,ch
  420f19:	scas   al,BYTE PTR es:[edi]
  420f1a:	or     eax,0xa6e4ac89
  420f1f:	xchg   edx,eax
  420f20:	sub    dh,BYTE PTR [edx+ecx*4]
  420f23:	push   ds
  420f24:	fst    st(2)
  420f26:	and    ecx,0xc469d87c
  420f2c:	pop    es
  420f2d:	mov    ecx,eax
  420f2f:	jae    0x420f1e
  420f31:	or     al,0x3c
  420f33:	mov    ds:0xf670969,eax
  420f38:	jns    0x420f0f
  420f3a:	popa   
  420f3b:	test   eax,0x6cf92ab7
  420f40:	xlat   BYTE PTR ds:[ebx]
  420f41:	in     eax,0x1d
  420f43:	mov    dl,BYTE PTR [ebx-0xf]
  420f46:	loope  0x420fc6
  420f48:	adc    al,0x28
  420f4a:	in     al,dx
  420f4b:	pusha  
  420f4c:	add    DWORD PTR [ecx+edx*4-0x76],esi
  420f50:	or     BYTE PTR [esi+0x30c03cb8],0x12
  420f57:	in     al,dx
  420f58:	lods   eax,DWORD PTR ds:[esi]
  420f59:	lods   al,BYTE PTR ds:[esi]
  420f5a:	ds ja  0x420ef3
  420f5d:	adc    ebx,DWORD PTR [edx]
  420f5f:	sbb    eax,0xd9ec4275
  420f64:	and    eax,0x11be38df
  420f69:	cwde   
  420f6a:	pop    ebx
  420f6b:	mov    ds:0x5c411cc9,eax
  420f70:	ss nop
  420f72:	cdq    
  420f73:	ret    
  420f74:	xchg   ecx,eax
  420f75:	mov    dh,0x9a
  420f77:	jl     0x420f72
  420f79:	push   ss
  420f7a:	fst    DWORD PTR [edx+0x77]
  420f7d:	fisubr DWORD PTR [eax+0x5bfb5862]
  420f83:	inc    ebx
  420f84:	jp     0x420f7b
  420f86:	pusha  
  420f87:	outs   dx,BYTE PTR ds:[esi]
  420f88:	lock push ebx
  420f8a:	and    BYTE PTR [ecx-0x318b51cc],cl
  420f90:	and    eax,0xcabb1862
  420f95:	pop    ss
  420f96:	adc    ch,dl
  420f98:	adc    al,0xde
  420f9a:	mov    cl,0xc8
  420f9c:	sub    eax,0xcbd09725
  420fa1:	inc    edx
  420fa2:	sbb    BYTE PTR [edx],dh
  420fa4:	sbb    al,0x21
  420fa6:	ds stc 
  420fa8:	fsub   st,st(0)
  420faa:	add    BYTE PTR ds:0xe3478748,ch
  420fb0:	leave  
  420fb1:	aam    0x53
  420fb3:	mov    eax,ds:0xd250e5c4
  420fb8:	jg     0x420fcc
  420fba:	pop    ss
  420fbb:	out    0xbe,al
  420fbd:	mov    dh,0xdb
  420fbf:	cmp    ecx,eax
  420fc1:	call   0x29f51f09
  420fc6:	mov    cl,0xfa
  420fc8:	test   bh,bl
  420fca:	jne    0x42100e
  420fcc:	aas    
  420fcd:	mov    esi,0x3b948907
  420fd2:	scas   al,BYTE PTR es:[edi]
  420fd3:	scas   al,BYTE PTR es:[edi]
  420fd4:	ins    BYTE PTR es:[edi],dx
  420fd5:	mov    al,ds:0xcce6834b
  420fda:	push   ss
  420fdb:	into   
  420fdc:	ror    edx,1
  420fde:	pop    esp
  420fdf:	dec    ebp
  420fe0:	mov    edx,0x6480e504
  420fe5:	ds sahf 
  420fe7:	out    0x4a,eax
  420fe9:	jmp    0x7906:0x1a5ab3c4
  420ff0:	fisub  WORD PTR [esi+0x20861486]
  420ff6:	scas   al,BYTE PTR es:[edi]
  420ff7:	add    al,0xd
  420ff9:	retf   
  420ffa:	dec    ebp
  420ffb:	push   cs
  420ffc:	pop    ecx
  420ffd:	pushf  
  420ffe:	fidiv  DWORD PTR cs:[edx+0xb62e1be]
  421005:	aas    
  421006:	inc    edi
  421007:	(bad)  
  421008:	sbb    DWORD PTR [ecx+0x453e198],ecx
  42100e:	jns    0x420ff7
  421010:	xlat   BYTE PTR ds:[ebx]
  421011:	and    BYTE PTR [ebx],bl
  421013:	lock fucomi st,st(6)
  421016:	and    bl,BYTE PTR [edi+0x53821481]
  42101c:	xrelease mov BYTE PTR [edi-0x5d43f381],dl
  421023:	rcl    eax,0x96
  421026:	jo     0x421079
  421028:	sub    eax,esp
  42102a:	jg     0x42106f
  42102c:	adc    al,0x9
  42102e:	mov    ecx,0xd72a1aa2
  421033:	xor    dl,BYTE PTR [ebx]
  421035:	lods   al,BYTE PTR ds:[esi]
  421036:	add    DWORD PTR [edi],eax
  421038:	int3   
  421039:	lea    esi,[edi]
  42103b:	popa   
  42103c:	sub    eax,0x6a824d87
  421041:	nop
  421042:	xchg   edx,eax
  421043:	pop    esp
  421044:	or     BYTE PTR [ecx],ch
  421046:	pop    ecx
  421047:	das    
  421048:	inc    esp
  421049:	jecxz  0x421074
  42104b:	(bad)  
  42104c:	pop    edi
  42104d:	ins    BYTE PTR es:[edi],dx
  42104e:	div    BYTE PTR [esi]
  421050:	mov    cl,0xda
  421052:	inc    esi
  421053:	hlt    
  421054:	dec    edi
  421055:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421056:	xchg   ecx,eax
  421057:	jnp    0x420fef
  421059:	mov    bh,0x9e
  42105b:	and    cl,al
  42105d:	dec    ebx
  42105e:	jp     0x421077
  421060:	sub    bl,BYTE PTR [ebx+0x2c]
  421063:	and    ah,ah
  421065:	xchg   ebx,eax
  421066:	xchg   ecx,eax
  421067:	aam    0x8
  421069:	mov    bh,BYTE PTR [esi+0x4ca401ea]
  42106f:	stos   DWORD PTR es:[edi],eax
  421070:	lods   al,BYTE PTR ds:[esi]
  421071:	ja     0x421041
  421073:	mov    al,ds:0x740dc1f3
  421078:	xchg   edi,eax
  421079:	outs   dx,BYTE PTR ds:[esi]
  42107a:	jmp    0x42101d
  42107c:	shr    DWORD PTR [ecx+0xf],1
  42107f:	dec    ebx
  421080:	mov    cl,0x8a
  421082:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421083:	mov    ds:0xd629ca1a,eax
  421088:	and    eax,DWORD PTR [ebx]
  42108a:	aas    
  42108b:	jle    0x421102
  42108d:	int    0xe9
  42108f:	push   ebp
  421090:	jbe    0x421027
  421092:	dec    ebx
  421093:	mov    edx,0x7b45c2ed
  421098:	jg     0x421094
  42109a:	and    BYTE PTR [eax+esi*8+0x16],bl
  42109e:	cmp    dh,bh
  4210a0:	jmp    0x5967:0x6f70ab07
  4210a7:	xchg   edx,eax
  4210a8:	add    ah,BYTE PTR [edx]
  4210aa:	pop    ebp
  4210ab:	arpl   WORD PTR [esi+0x58ee3f6e],sp
  4210b1:	and    BYTE PTR [esi],dl
  4210b3:	test   eax,0x9007ed2d
  4210b8:	jbe    0x421058
  4210ba:	mov    esp,0x2570d840
  4210bf:	and    cl,al
  4210c1:	enter  0x6fe4,0xa
  4210c5:	out    dx,eax
  4210c6:	sahf   
  4210c7:	and    DWORD PTR [esi+0x35],ecx
  4210ca:	test   al,0x16
  4210cc:	in     eax,0x5
  4210ce:	add    al,0x95
  4210d0:	jne    0x4210cb
  4210d2:	xchg   DWORD PTR [ebx-0x4b],edi
  4210d5:	xchg   edx,eax
  4210d6:	push   ebx
  4210d7:	jo     0x4210b2
  4210d9:	add    DWORD PTR [edi+0xbd837f2],esp
  4210df:	repnz daa 
  4210e1:	mov    DWORD PTR [ebx+0x19],ecx
  4210e4:	daa    
  4210e5:	aas    
  4210e6:	call   0x41a:0xe57f774c
  4210ed:	(bad)  
  4210ee:	faddp  st(3),st
  4210f0:	addr16 pusha 
  4210f2:	loop   0x421116
  4210f4:	inc    ecx
  4210f5:	jnp    0x421141
  4210f7:	mov    edi,0x74de8996
  4210fc:	enter  0xa4b5,0x7a
  421100:	call   0xe0e67e6b
  421105:	ins    DWORD PTR es:[edi],dx
  421106:	or     ecx,DWORD PTR [eax+0x26]
  421109:	inc    esp
  42110a:	adc    al,0x5c
  42110c:	stos   DWORD PTR es:[edi],eax
  42110d:	out    dx,al
  42110e:	pop    ebp
  42110f:	jl     0x4210f3
  421111:	pop    ebp
  421112:	int    0x7c
  421114:	js     0x42110c
  421116:	in     al,0x31
  421118:	mov    edx,0xec315b23
  42111d:	rol    ecx,cl
  42111f:	in     al,dx
  421120:	mov    dl,0x16
  421122:	hlt    
  421123:	ins    DWORD PTR es:[edi],dx
  421124:	cwde   
  421125:	adc    al,0xca
  421127:	ds xchg ebx,eax
  421129:	and    DWORD PTR [edx],edx
  42112b:	inc    edi
  42112c:	sbb    ecx,DWORD PTR ds:0x462fbf69
  421132:	cmp    eax,0xffb07937
  421137:	mov    ebx,DWORD PTR [ebx+0x1f]
  42113a:	pusha  
  42113b:	or     BYTE PTR [ecx+0x3b4e0b8e],ah
  421141:	in     al,0x3c
  421143:	adc    dl,dh
  421145:	or     ah,BYTE PTR [edx+0x5]
  421148:	inc    esi
  421149:	cmp    dl,BYTE PTR [edi]
  42114b:	mov    DWORD PTR [edx-0x7d8138c2],eax
  421151:	dec    esp
  421152:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421153:	call   0x1c09:0xcff1e3b5
  42115a:	xchg   al,al
  42115c:	sti    
  42115d:	aad    0xe
  42115f:	xchg   ebp,eax
  421160:	scas   eax,DWORD PTR es:[edi]
  421161:	push   eax
  421162:	hlt    
  421163:	(bad)  
  421164:	mov    edx,0xd2332121
  421169:	das    
  42116a:	push   ecx
  42116b:	std    
  42116c:	jne    0x42110b
  42116e:	sub    dl,bh
  421170:	sahf   
  421171:	loope  0x42117d
  421173:	in     al,0x83
  421175:	and    al,0x20
  421177:	push   0xe15c4b78
  42117c:	push   cs
  42117d:	add    BYTE PTR [eax],al
  42117f:	add    BYTE PTR [eax],al
  421181:	add    BYTE PTR [edi+0x5b2a13cf],al
  421187:	(bad)  
  421188:	mov    edi,0x5549c1ef
  42118d:	cmp    BYTE PTR [edi-0xd],bl
  421190:	pop    ecx
  421191:	jmp    0x4f3:0x18b98
  421198:	add    BYTE PTR [eax],al
  42119a:	add    eax,0x50bae1f0
  42119f:	cs pop ebp
  4211a1:	jmp    0x956:0x68d6bc6e
  4211a8:	jns    0x4211ab
  4211aa:	jp     0x42116b
  4211ac:	adc    DWORD PTR [ebp-0x23],ebx
  4211af:	(bad)  
  4211b0:	out    dx,al
  4211b1:	out    dx,eax
  4211b2:	ins    DWORD PTR es:[edi],dx
  4211b3:	mov    ah,0x1
  4211b5:	ins    BYTE PTR es:[edi],dx
  4211b6:	mov    dh,BYTE PTR [esi]
  4211b8:	pop    esi
  4211b9:	pushf  
  4211ba:	push   ds
  4211bb:	in     al,dx
  4211bc:	push   cs
  4211bd:	(bad)  
  4211bf:	cmp    edx,DWORD PTR [esi-0x4b05d1cd]
  4211c5:	mov    ds:0x907cc7f8,al
  4211ca:	sti    
  4211cb:	mov    BYTE PTR [esi+0x19da8a62],bl
  4211d1:	xor    bl,BYTE PTR [esi-0x15430b31]
  4211d7:	add    eax,DWORD PTR [ecx]
  4211d9:	and    al,0x71
  4211db:	mov    ds:0x5138d2ad,al
  4211e0:	xchg   ecx,eax
  4211e1:	not    edx
  4211e3:	stc    
  4211e4:	test   BYTE PTR [ebx+0x1e],ah
  4211e7:	adc    BYTE PTR [ecx],ch
  4211e9:	jecxz  0x421235
  4211eb:	mov    edi,0x7ba58673
  4211f0:	mov    ?,WORD PTR [ecx]
  4211f2:	push   eax
  4211f3:	enter  0x9ab1,0x12
  4211f7:	xor    BYTE PTR [ebx],0xf7
  4211fa:	xchg   ebx,eax
  4211fb:	xchg   DWORD PTR [edi+0x39],edi
  4211fe:	add    ch,BYTE PTR [bx+di+0x442c]
  421203:	aas    
  421204:	inc    esp
  421205:	aad    0x7a
  421207:	xlat   BYTE PTR ds:[ebx]
  421208:	stos   DWORD PTR es:[edi],eax
  421209:	je     0x4211ff
  42120b:	cmp    BYTE PTR [ebx+0x53],ch
  42120e:	inc    edx
  42120f:	jge    0x4211f0
  421211:	jecxz  0x421270
  421213:	push   ss
  421214:	or     al,0xaf
  421216:	sub    eax,0x67c7590f
  42121b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42121c:	add    ch,ah
  42121e:	push   esi
  42121f:	not    BYTE PTR [eax+0x26]
  421222:	ficom  WORD PTR [ebx+0x30b98449]
  421228:	xchg   ecx,eax
  421229:	and    ebp,esp
  42122b:	das    
  42122c:	pop    edx
  42122d:	ret    
  42122e:	sub    ebx,DWORD PTR [edx+ebx*1+0xa]
  421232:	push   edi
  421233:	jb     0x4211fa
  421235:	cmp    cl,BYTE PTR [ebp+0x7e]
  421238:	sub    al,0xb6
  42123a:	jge    0x42127f
  42123c:	ret    
  42123d:	push   0x4f
  42123f:	icebp  
  421240:	sbb    DWORD PTR [ebx-0x3c],edx
  421243:	dec    DWORD PTR ds:0xa35ca63f
  421249:	inc    esp
  42124a:	mov    WORD PTR [ecx+0xb],gs
  42124d:	fistp  WORD PTR [edi+0x7cc45799]
  421253:	mov    esp,0xfc56d927
  421258:	pop    es
  421259:	mov    esi,0x9074947c
  42125f:	mov    fs,WORD PTR [edi]
  421261:	mov    dl,0x78
  421263:	lods   eax,DWORD PTR ds:[esi]
  421264:	add    eax,0x5e263288
  421269:	rcl    dl,0xd1
  42126c:	inc    edi
  42126d:	(bad)  gs:[edi]
  421270:	hlt    
  421271:	ret    
  421272:	inc    ebx
  421273:	(bad)  
  421274:	push   0xffffffe4
  421276:	mov    dl,0xa4
  421278:	or     DWORD PTR cs:[edx-0x359ee50e],edi
  42127f:	scas   eax,DWORD PTR es:[di]
  421281:	test   al,0x45
  421283:	mov    bl,0x81
  421285:	mov    bh,BYTE PTR [ecx+0x623876e0]
  42128b:	mov    edx,ecx
  42128d:	retf   0x22a7
  421290:	xor    DWORD PTR [esi],0x14
  421293:	nop
  421294:	push   eax
  421295:	mov    ebp,0x18383d3c
  42129a:	pop    ebx
  42129b:	adc    al,0x1
  42129d:	cmp    al,0x41
  42129f:	popa   
  4212a0:	iret   
  4212a1:	adc    DWORD PTR [eax],esp
  4212a3:	js     0x4212dc
  4212a5:	pop    esp
  4212a6:	and    eax,0x8d6926a8
  4212ab:	std    
  4212ac:	add    eax,0x36d5ae4
  4212b1:	jmp    0xa713:0x4958130d
  4212b8:	jbe    0x4212f6
  4212ba:	push   ebx
  4212bb:	jmp    0xc545:0xbd3cb83
  4212c2:	cmp    al,0xa3
  4212c4:	jmp    0xd618c36e
  4212c9:	jl     0x421289
  4212cb:	dec    edi
  4212cc:	(bad)  
  4212cd:	ficomp WORD PTR [eax+0x12a189d2]
  4212d3:	jmp    0xff87:0xe441cff
  4212da:	inc    ebp
  4212db:	ja     0x42132f
  4212dd:	aas    
  4212de:	inc    eax
  4212df:	stos   BYTE PTR es:[edi],al
  4212e0:	lods   al,BYTE PTR ds:[esi]
  4212e1:	adc    DWORD PTR [eax+edx*4+0x2c9ae379],esi
  4212e8:	test   eax,0x2ca7cf01
  4212ed:	mov    al,ds:0x6663d45
  4212f2:	aaa    
  4212f3:	test   al,0xce
  4212f5:	std    
  4212f6:	jno    0x4212b7
  4212f8:	test   eax,0x92562479
  4212fd:	dec    ebx
  4212fe:	popf   
  4212ff:	jae    0x42135f
  421301:	int3   
  421302:	cmc    
  421303:	fisub  DWORD PTR [esi-0x3c8d7baa]
  421309:	and    al,BYTE PTR [ebx-0x5a]
  42130c:	inc    esp
  42130d:	mov    ebp,esp
  42130f:	into   
  421310:	mov    eax,0x9a3e1ea1
  421315:	inc    esi
  421316:	push   0x1f
  421318:	stc    
  421319:	xor    ebp,DWORD PTR [ecx+0x58652fc0]
  42131f:	push   cs
  421320:	ins    BYTE PTR es:[edi],dx
  421321:	and    DWORD PTR [edx],edx
  421323:	lds    eax,FWORD PTR [ebx+esi*1]
  421326:	pop    DWORD PTR [edx-0x6ebdc419]
  42132c:	shr    DWORD PTR [ebp-0x4586fc5b],0xbf
  421333:	add    eax,0x99a6409e
  421338:	cmp    eax,0xb675866b
  42133d:	cmp    al,0xe
  42133f:	cdq    
  421340:	rol    esi,1
  421342:	adc    DWORD PTR [ebp-0x509508af],ebx
  421348:	mov    cl,0xc5
  42134a:	inc    esp
  42134b:	into   
  42134c:	sbb    eax,eax
  42134e:	(bad)  
  42134f:	mov    ch,0x31
  421351:	cmp    eax,DWORD PTR [ecx+ecx*8-0x28f517fc]
  421358:	pop    esi
  421359:	test   eax,0x6d173fa2
  42135e:	popf   
  42135f:	daa    
  421360:	das    
  421361:	loop   0x421368
  421363:	pop    edx
  421364:	or     eax,0xc43d94c7
  421369:	bnd ret 
  42136b:	add    edx,DWORD PTR [eax+0x26d7f66d]
  421371:	push   esi
  421372:	pop    es
  421373:	xchg   edi,eax
  421374:	xchg   bl,cl
  421376:	dec    BYTE PTR [ecx+0x34]
  421379:	leave  
  42137a:	retf   0x1117
  42137d:	jmp    0xb949bc23
  421382:	nop
  421383:	dec    edx
  421384:	rcl    edi,1
  421386:	push   esp
  421387:	jae    0x421392
  421389:	sahf   
  42138a:	lods   al,BYTE PTR ds:[esi]
  42138b:	gs mov ah,0x92
  42138e:	add    ch,BYTE PTR ds:0xa5b22882
  421394:	in     eax,0xc7
  421396:	sub    DWORD PTR [ecx],0xffffffa5
  421399:	icebp  
  42139a:	inc    edx
  42139b:	push   cs
  42139c:	lahf   
  42139d:	cmp    al,0xc3
  42139f:	arpl   WORD PTR [esi+0x57d6b035],bx
  4213a5:	push   ss
  4213a6:	mov    ch,0xb8
  4213a8:	mov    ch,0x15
  4213aa:	bound  esi,QWORD PTR [ebx]
  4213ac:	adc    ecx,DWORD PTR [esi-0x36aee21f]
  4213b2:	push   edx
  4213b3:	rcr    DWORD PTR [edi-0x20],0x81
  4213b7:	mov    ecx,0xae9541c
  4213bc:	mov    esp,0x4038bec6
  4213c1:	retf   
  4213c2:	xor    DWORD PTR [edi+ebp*4+0x43a66af2],edi
  4213c9:	fdiv   DWORD PTR [edx+ebp*1]
  4213cc:	das    
  4213cd:	cli    
  4213ce:	or     esp,esi
  4213d0:	cdq    
  4213d1:	pop    ebx
  4213d2:	cmp    BYTE PTR [edi],0x60
  4213d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213d6:	xor    ch,0xe
  4213d9:	jne    0x421419
  4213db:	test   BYTE PTR [ebp-0x73548788],al
  4213e1:	or     DWORD PTR [ebp+esi*8+0x2a],ecx
  4213e5:	mov    ds:0xe6686576,eax
  4213ea:	xor    al,0xaf
  4213ec:	test   eax,0x2e6a3eb0
  4213f1:	ja     0x421471
  4213f3:	adc    ch,0x4c
  4213f6:	stos   DWORD PTR es:[edi],eax
  4213f7:	sbb    edi,ebx
  4213f9:	push   esi
  4213fa:	jbe    0x4213a9
  4213fc:	ror    BYTE PTR ds:0xf3bf9dd6,1
  421402:	das    
  421403:	shl    BYTE PTR [edi+0x47],1
  421406:	int3   
  421407:	enter  0xadeb,0x81
  42140b:	ins    DWORD PTR es:[edi],dx
  42140c:	push   ss
  42140d:	xor    dl,BYTE PTR [edx+0x7141a9df]
  421413:	sbb    BYTE PTR [edx],dh
  421415:	addr16 pop ss
  421417:	inc    ebp
  421418:	addr16 dec ebp
  42141a:	popf   
  42141b:	mov    dl,0xb3
  42141d:	(bad)  
  42141e:	jbe    0x421437
  421420:	jmp    FWORD PTR [edx]
  421422:	or     DWORD PTR [edi-0x6ef33e86],0xffffff85
  421429:	(bad)  
  42142b:	mov    dl,0x47
  42142d:	ret    0x4754
  421430:	outs   dx,BYTE PTR ds:[esi]
  421431:	cmp    al,0xed
  421433:	idiv   cl
  421435:	push   edx
  421436:	sub    esp,esp
  421438:	loop   0x421419
  42143a:	push   eax
  42143b:	sbb    bl,BYTE PTR [ebx+0x470382d4]
  421441:	imul   edx,edi,0xc6d74d1a
  421447:	pop    ebx
  421448:	sbb    cl,cl
  42144a:	in     al,dx
  42144b:	jb     0x421480
  42144d:	dec    esp
  42144e:	xor    BYTE PTR [ebx],al
  421450:	lods   al,BYTE PTR ds:[esi]
  421451:	jae    0x4213f5
  421453:	mov    dh,0x5b
  421455:	sbb    al,0x12
  421457:	mov    eax,0xb3fb98de
  42145c:	popa   
  42145d:	aas    
  42145e:	fwait
  42145f:	rcr    DWORD PTR [eax],0xa1
  421462:	in     eax,dx
  421463:	int3   
  421464:	pop    di
  421466:	inc    ebp
  421467:	xchg   ebx,eax
  421468:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421469:	call   0x30e1:0x6e686fe9
  421470:	pop    es
  421471:	jmp    0x6a6f:0x202b243d
  421478:	cs sbb ecx,esp
  42147b:	xlat   BYTE PTR ds:[ebx]
  42147c:	or     DWORD PTR cs:[edx-0x7d4790c7],ebx
  421483:	stos   DWORD PTR es:[edi],eax
  421484:	add    dl,BYTE PTR [ebx]
  421486:	loop   0x421457
  421488:	cdq    
  421489:	lock dec ecx
  42148b:	fisttp QWORD PTR [esi-0x67]
  42148e:	std    
  42148f:	ins    DWORD PTR es:[edi],dx
  421490:	in     al,dx
  421491:	fmul   st,st(0)
  421493:	retf   
  421494:	lock pop ebp
  421496:	xor    al,BYTE PTR ds:0x6c936372
  42149c:	mov    ds:0xcfc3ddfe,eax
  4214a1:	push   eax
  4214a2:	xchg   ecx,eax
  4214a3:	add    al,BYTE PTR [edi]
  4214a5:	icebp  
  4214a6:	les    ecx,FWORD PTR ds:0xd41ab773
  4214ac:	cmp    BYTE PTR [esi+esi*4+0x7d],bl
  4214b0:	dec    ebx
  4214b1:	test   BYTE PTR [ebx+0x4bcd6807],ch
  4214b7:	dec    ebp
  4214b8:	pop    edi
  4214b9:	and    eax,0xf47e542f
  4214be:	ins    BYTE PTR es:[edi],dx
  4214bf:	lds    edi,FWORD PTR [edi]
  4214c1:	mov    dh,0xa5
  4214c3:	xchg   edi,eax
  4214c4:	fistp  WORD PTR [ebp+0x7f]
  4214c7:	clc    
  4214c8:	in     al,dx
  4214c9:	ss retf 
  4214cb:	arpl   WORD PTR [ecx],si
  4214cd:	fidivr WORD PTR [edx]
  4214cf:	fwait
  4214d0:	nop
  4214d1:	sbb    DWORD PTR [eax+0x3f32e0c4],0x2604fbb5
  4214db:	cld    
  4214dc:	and    edi,esp
  4214de:	push   cs
  4214df:	call   0x4025:0xebb0876a
  4214e6:	mov    es,esp
  4214e8:	and    ah,al
  4214ea:	mov    ?,WORD PTR [edi-0x53f667a7]
  4214f0:	jnp    0x42148e
  4214f2:	scas   eax,DWORD PTR es:[edi]
  4214f3:	scas   eax,DWORD PTR es:[edi]
  4214f4:	mov    cl,0xd0
  4214f6:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4214f8:	arpl   si,si
  4214fa:	ins    BYTE PTR es:[edi],dx
  4214fb:	mov    ds:0x7949e066,al
  421500:	cmp    eax,0x18f784ff
  421505:	lea    ecx,[esi+0x12]
  421508:	mov    bl,bh
  42150a:	js     0x42151b
  42150c:	adc    esi,ebx
  42150e:	xchg   edx,eax
  42150f:	and    DWORD PTR [ecx+0x8],edx
  421512:	push   ds
  421513:	call   0x3b93:0x9d8d1036
  42151a:	cmp    BYTE PTR [ebx],bh
  42151c:	mov    dh,0x1a
  42151e:	adc    ah,BYTE PTR [eax]
  421520:	push   eax
  421521:	das    
  421522:	add    DWORD PTR [eax+0x5d],eax
  421525:	enter  0xcf9f,0x5d
  421529:	or     al,0x1a
  42152b:	cmp    eax,DWORD PTR [edi-0x26ac0cb2]
  421531:	dec    esi
  421532:	pop    es
  421533:	in     eax,0x78
  421535:	pop    esi
  421536:	jle    0x421553
  421538:	lahf   
  421539:	(bad)  
  42153a:	rcr    BYTE PTR [esi-0x5485f186],1
  421540:	mul    edi
  421542:	sbb    al,0x6a
  421544:	jecxz  0x4215c2
  421546:	jecxz  0x42150a
  421548:	add    BYTE PTR [edx+0x4f],cl
  42154b:	fcom   DWORD PTR [ecx-0x5f39ec6e]
  421551:	cmp    ch,bh
  421553:	in     eax,0xe5
  421555:	fucomip st,st(4)
  421557:	sub    DWORD PTR [edx+ebp*2-0x3c],ebp
  42155b:	mov    ds,WORD PTR [esi+0x1b]
  42155e:	or     eax,0x5d81d2f6
  421563:	mov    esi,0x2364035a
  421568:	jbe    0x4214f2
  42156a:	add    bh,BYTE PTR [ebp-0x32]
  42156d:	stc    
  42156e:	jno    0x421573
  421570:	ins    DWORD PTR es:[edi],dx
  421571:	inc    ebp
  421572:	mov    al,BYTE PTR [esi-0x33]
  421575:	mov    cl,0x87
  421577:	xchg   ecx,eax
  421578:	stos   DWORD PTR es:[edi],eax
  421579:	pop    esp
  42157a:	dec    ebx
  42157b:	out    0xda,eax
  42157d:	pop    ebp
  42157e:	int    0x6e
  421580:	cld    
  421581:	nop
  421582:	es sahf 
  421584:	xlat   BYTE PTR ds:[ebx]
  421585:	or     ah,BYTE PTR cs:[eax-0x2a7af8ba]
  42158c:	in     al,dx
  42158d:	fisttp QWORD PTR [eax+0x37298eac]
  421593:	mov    ebx,0x39041b30
  421598:	repz addr16 repz xchg ebx,eax
  42159c:	jbe    0x42161a
  42159e:	mov    ebx,0x7bc814ed
  4215a3:	cld    
  4215a4:	shl    esp,cl
  4215a6:	repz cmp eax,0xc05f8894
  4215ac:	sbb    cl,BYTE PTR [esp+edx*1-0x71]
  4215b0:	(bad)  
  4215b1:	pop    edx
  4215b2:	mov    ah,0x39
  4215b4:	xor    eax,0x50eedadd
  4215b9:	repz xlat BYTE PTR ds:[ebx]
  4215bb:	(bad)  
  4215bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215bd:	mov    cl,0xc4
  4215bf:	mov    eax,0xbd06968c
  4215c4:	push   eax
  4215c5:	push   ecx
  4215c6:	loope  0x42163b
  4215c8:	inc    edx
  4215c9:	jg     0x4215ef
  4215cb:	aas    
  4215cc:	and    BYTE PTR [eax+0x62],ah
  4215cf:	lods   al,BYTE PTR ds:[esi]
  4215d0:	lods   eax,DWORD PTR ds:[esi]
  4215d1:	mov    bl,0xd1
  4215d3:	dec    eax
  4215d4:	loop   0x4215e0
  4215d6:	inc    edi
  4215d7:	test   eax,0xd452147a
  4215dc:	pop    esp
  4215dd:	repz repz cmp dh,BYTE PTR [edx]
  4215e1:	jl     0x421569
  4215e3:	jae    0x4215bd
  4215e5:	mov    ecx,0xcfe3eb10
  4215ea:	jmp    0x4215fc
  4215ec:	xchg   esi,eax
  4215ed:	bound  esi,QWORD PTR [ecx]
  4215ef:	enter  0x32ac,0xa7
  4215f3:	add    ebp,eax
  4215f5:	ret    
  4215f6:	adc    edx,DWORD PTR [ecx]
  4215f8:	pop    ss
  4215f9:	fs mov bh,0x35
  4215fc:	xchg   ebp,eax
  4215fd:	imul   ebp,DWORD PTR [ebp+edx*8-0x35],0xc791fea9
  421605:	push   ds
  421606:	jns    0x4215ba
  421608:	inc    esp
  421609:	cmp    al,0x8d
  42160b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42160c:	ins    DWORD PTR es:[edi],dx
  42160d:	mov    esi,DWORD PTR [esi-0x664e9c48]
  421613:	jl     0x4215f2
  421615:	ss stos BYTE PTR es:[edi],al
  421617:	ret    
  421618:	sbb    eax,0x10cbbc06
  42161d:	ret    
  42161e:	mov    ch,0x7
  421620:	xchg   esi,eax
  421621:	(bad)  
  421622:	iret   
  421623:	xchg   ebx,eax
  421624:	or     cl,BYTE PTR [edi+0xc]
  421627:	xchg   BYTE PTR [ecx-0x76],ah
  42162a:	mov    edi,0xf1b80854
  42162f:	lods   al,BYTE PTR ds:[esi]
  421630:	dec    esi
  421631:	and    eax,0x472a8fd
  421636:	pop    es
  421637:	shr    ebp,cl
  421639:	add    ebx,DWORD PTR [ebx+0x4c]
  42163c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42163d:	push   cs
  42163e:	and    cl,0x16
  421641:	jge    0x42161d
  421643:	(bad)  
  421644:	or     edi,esi
  421646:	dec    edi
  421647:	mov    ebp,0x329354b1
  42164c:	mov    ds:0xa99e0b16,eax
  421651:	cwde   
  421652:	rol    esi,cl
  421654:	ins    DWORD PTR es:[edi],dx
  421655:	adc    DWORD PTR [edx+0x64228266],eax
  42165b:	jl     0x4215e9
  42165d:	sub    al,BYTE PTR [ebp+0x38]
  421660:	add    eax,0xfd99e992
  421665:	imul   esp,ebx,0xffffffda
  421668:	sub    edi,DWORD PTR [edx]
  42166a:	scas   eax,DWORD PTR es:[edi]
  42166b:	inc    ebx
  42166c:	stc    
  42166d:	daa    
  42166e:	sbb    DWORD PTR [edx+0x16e81ccc],0x50
  421675:	fwait
  421676:	pop    esi
  421677:	gs dec ebp
  421679:	xchg   edi,eax
  42167a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42167b:	add    ecx,ebp
  42167d:	jne    0x42168b
  42167f:	jbe    0x421636
  421681:	sahf   
  421682:	dec    DWORD PTR [ebx-0x201da7e8]
  421688:	dec    edx
  421689:	fisubr DWORD PTR [ebx+0xf8c0]
  42168f:	add    BYTE PTR [eax],al
  421691:	add    bl,bh
  421693:	and    al,0xdc
  421695:	es (bad) 
  421698:	sti    
  421699:	std    
  42169a:	sbb    ch,BYTE PTR [edx]
  42169c:	adc    eax,0x72455bc6
  4216a1:	or     BYTE PTR [ebx-0xcfffe70],0x4
  4216a8:	add    BYTE PTR [eax],al
  4216aa:	inc    esp
  4216ab:	xor    DWORD PTR [ebx],ebp
  4216ad:	jmp    0xe443:0xf0983dbb
  4216b4:	sbb    esp,ebx
  4216b6:	push   ds
  4216b7:	mov    bl,BYTE PTR [esi]
  4216b9:	xchg   edx,eax
  4216ba:	pop    ebp
  4216bb:	xor    ebp,DWORD PTR [ecx+0x68]
  4216be:	dec    edx
  4216bf:	sti    
  4216c0:	jg     0x421660
  4216c2:	and    bl,dh
  4216c4:	test   dh,bl
  4216c6:	xchg   ebp,eax
  4216c7:	and    eax,0xa27e7ebf
  4216cc:	icebp  
  4216cd:	cs enter 0x6479,0x76
  4216d2:	add    al,0xa
  4216d4:	retf   
  4216d5:	sbb    ah,bl
  4216d7:	mov    dh,0x3b
  4216d9:	mov    eax,DWORD PTR [eax+0x53276965]
  4216df:	lods   eax,DWORD PTR ds:[esi]
  4216e0:	xchg   edx,eax
  4216e1:	sub    DWORD PTR [eax+0x55],edi
  4216e4:	imul   edi,DWORD PTR [ecx-0x69],0xa
  4216e8:	cwde   
  4216e9:	xor    eax,DWORD PTR [ecx-0x9]
  4216ec:	adc    eax,0x750b5f7f
  4216f1:	cwde   
  4216f2:	xchg   cl,cl
  4216f4:	pop    es
  4216f5:	in     al,dx
  4216f6:	mov    esi,0x6c8ee5ea
  4216fb:	xlat   BYTE PTR ds:[ebx]
  4216fc:	jae    0x4216c2
  4216fe:	mov    edx,0x8f215633
  421703:	hlt    
  421704:	pop    es
  421705:	sbb    eax,0xfe461133
  42170a:	aad    0xc6
  42170c:	xor    esi,esp
  42170e:	xor    cl,al
  421710:	pop    ecx
  421711:	out    0x47,al
  421713:	fistp  WORD PTR ds:0xdd8a0b5d
  421719:	jmp    0xf043bc0f
  42171e:	lods   al,BYTE PTR ds:[esi]
  42171f:	repnz xor eax,0x41880fbf
  421725:	es das 
  421727:	test   BYTE PTR [esi+ebp*8],0x8e
  42172b:	xchg   ebp,eax
  42172c:	adc    al,0xf0
  42172e:	dec    ebp
  42172f:	mov    bh,0xfd
  421731:	jmp    0x73ac1b71
  421736:	add    BYTE PTR [ebx-0x2d],ch
  421739:	mov    al,0xf
  42173b:	lods   al,BYTE PTR ds:[esi]
  42173c:	sub    DWORD PTR [ebp-0x5],ebp
  42173f:	dec    edx
  421740:	sub    ch,cl
  421742:	and    BYTE PTR [eax-0x55],ah
  421745:	das    
  421746:	pop    edi
  421747:	jae    0x421763
  421749:	or     eax,0xe2eebdd
  42174e:	mov    esi,DWORD PTR [ebx]
  421750:	lock sbb eax,0x20bd605d
  421756:	lods   eax,DWORD PTR ds:[esi]
  421757:	sub    eax,0x6df6e923
  42175c:	sahf   
  42175d:	int3   
  42175e:	(bad)  
  42175f:	sub    eax,0x1eb1c3fa
  421764:	je     0x4217be
  421766:	das    
  421767:	xor    edx,0xffffffcf
  42176a:	mov    ebp,0x1f07785b
  42176f:	xchg   BYTE PTR [ebx+ebx*2+0xd],al
  421773:	jae    0x4216f9
  421775:	dec    edi
  421776:	scas   eax,DWORD PTR es:[edi]
  421777:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421778:	je     0x42179f
  42177a:	imul   eax,edi,0xffffffc2
  42177d:	call   0x970a:0x78ea413c
  421784:	mov    ecx,0x6b939586
  421789:	imul   ebp,DWORD PTR [ebx],0x60ca0f7b
  42178f:	ficom  DWORD PTR [ecx+0x6cfc9652]
  421795:	div    DWORD PTR [ecx]
  421797:	addr16 sbb eax,0x7d79880f
  42179d:	aam    0xc3
  42179f:	pop    ebx
  4217a0:	adc    DWORD PTR [edi+0x3749d171],0x37edd1b0
  4217aa:	repnz pop ss
  4217ac:	pusha  
  4217ad:	cmp    bh,BYTE PTR [ecx+0x79]
  4217b0:	inc    eax
  4217b1:	ins    DWORD PTR es:[edi],dx
  4217b2:	jbe    0x4217c7
  4217b4:	mov    ds:0xebcb06dd,eax
  4217b9:	popf   
  4217ba:	imul   esi,DWORD PTR [eax+esi*4+0x21],0x7dc81d90
  4217c2:	xchg   ecx,eax
  4217c3:	rdtsc  
  4217c5:	mov    ebx,0xfdc74786
  4217ca:	(bad)  
  4217cb:	sub    DWORD PTR fs:[esi+eiz*8],eax
  4217cf:	dec    ebx
  4217d0:	(bad)  
  4217d1:	mov    dh,0xb
  4217d3:	xor    al,0x5
  4217d5:	jmp    0x421797
  4217d7:	repnz sbb eax,0x8a29fd79
  4217dd:	push   edi
  4217de:	dec    ebp
  4217df:	fild   DWORD PTR [edi]
  4217e1:	(bad)  
  4217e3:	dec    ecx
  4217e4:	push   0x51
  4217e6:	push   esp
  4217e7:	lods   eax,DWORD PTR ds:[esi]
  4217e8:	lds    ebx,FWORD PTR [edx]
  4217ea:	in     eax,0x35
  4217ec:	repnz ins BYTE PTR es:[edi],dx
  4217ee:	sub    al,0x82
  4217f0:	xchg   cl,bh
  4217f2:	ja     0x42179a
  4217f4:	out    dx,eax
  4217f5:	std    
  4217f6:	sbb    DWORD PTR [ebx-0x42],esi
  4217f9:	gs cli 
  4217fb:	ror    DWORD PTR [esp+edi*4],1
  4217fe:	xor    BYTE PTR [edi-0x6a],0x9e
  421802:	inc    eax
  421803:	mov    al,0x8d
  421805:	xor    BYTE PTR [ecx],0x8e
  421808:	inc    eax
  421809:	dec    esp
  42180a:	arpl   dx,dx
  42180c:	and    eax,0xec882ba8
  421811:	xchg   edi,eax
  421812:	and    eax,0x78424880
  421817:	imul   edi,DWORD PTR [ecx],0xf
  42181a:	loope  0x42185d
  42181c:	fdiv   QWORD PTR ds:0x32de3b76
  421822:	inc    ebp
  421823:	xchg   ebp,eax
  421824:	xor    BYTE PTR [ecx-0x6f],al
  421827:	fsubr  QWORD PTR [ecx]
  421829:	or     bh,BYTE PTR [ecx+0x4330ed09]
  42182f:	pop    ebx
  421830:	xchg   DWORD PTR [eax+ecx*1-0x4c],edx
  421834:	int3   
  421835:	popf   
  421836:	fwait
  421837:	outs   dx,BYTE PTR ds:[esi]
  421838:	mov    ds:0x4b54f4bd,al
  42183d:	jae    0x421874
  42183f:	lods   al,BYTE PTR ds:[esi]
  421840:	adc    BYTE PTR [edx+esi*2-0x1feeb0cb],0xde
  421848:	test   DWORD PTR [eax+0x77],0xc6e9c268
  42184f:	repz arpl WORD PTR [edi+ebp*8-0x9],cx
  421854:	mov    dl,0x5a
  421856:	dec    eax
  421857:	test   ch,al
  421859:	retf   
  42185a:	or     eax,0x561b1963
  42185f:	add    al,0x6c
  421861:	mov    cl,0xdf
  421863:	in     al,dx
  421864:	mov    ah,0x48
  421866:	(bad)  
  421867:	fld    DWORD PTR [esi]
  421869:	cmp    eax,0xae144fae
  42186e:	addr16 sbb bl,al
  421871:	cmp    bl,dh
  421873:	mov    esi,?
  421875:	add    al,0x56
  421877:	push   edi
  421878:	retf   0xf96f
  42187b:	scas   eax,DWORD PTR es:[edi]
  42187c:	sbb    BYTE PTR [ebp+0x66],dh
  42187f:	inc    esi
  421880:	jge    0x421815
  421882:	lds    edx,FWORD PTR [eax-0x15580d12]
  421888:	iret   
  421889:	jmp    0xbc7f:0x2ca25af0
  421890:	xchg   edi,eax
  421891:	in     al,dx
  421892:	inc    edx
  421893:	xlat   BYTE PTR ds:[ebx]
  421894:	mov    eax,0x274fd6ba
  421899:	add    edi,DWORD PTR [ebp+0x49]
  42189c:	rcl    DWORD PTR [edx+eax*4],0x7c
  4218a0:	xchg   edx,eax
  4218a1:	rol    DWORD PTR [edx+0x69851728],0xbf
  4218a8:	jne    0x4218be
  4218aa:	int3   
  4218ab:	ss (bad) 
  4218ad:	mov    edi,0xe6117b5e
  4218b2:	adc    DWORD PTR [edx],0xffffffb5
  4218b5:	cdq    
  4218b6:	adc    eax,0x852e8112
  4218bb:	xchg   ebx,eax
  4218bc:	xchg   dl,bh
  4218be:	test   BYTE PTR [ebp+0x177cebe8],0xe1
  4218c5:	or     al,0x80
  4218c7:	fistp  DWORD PTR [ebp-0x33]
  4218ca:	fcmove st,st(0)
  4218cc:	stos   BYTE PTR es:[edi],al
  4218cd:	enter  0x9161,0x98
  4218d1:	mov    fs,esi
  4218d3:	sbb    eax,0x4d8566ec
  4218d8:	in     eax,0x41
  4218da:	nop
  4218db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218dc:	in     al,0x1b
  4218de:	add    eax,0x72a4a746
  4218e3:	cmp    bl,BYTE PTR [ecx-0x48]
  4218e6:	retf   0x72ed
  4218e9:	mov    cl,0x2
  4218eb:	mov    edx,0xb0ab1933
  4218f0:	adc    al,0x7e
  4218f2:	scas   eax,DWORD PTR es:[edi]
  4218f3:	add    esp,esi
  4218f5:	aam    0x56
  4218f7:	jmp    0xd6885eda
  4218fc:	cdq    
  4218fd:	aam    0x74
  4218ff:	pop    ss
  421900:	nop
  421901:	iret   
  421902:	and    edx,DWORD PTR [edx+0x8]
  421905:	dec    esi
  421906:	retf   
  421907:	sbb    eax,0x1060211e
  42190c:	xchg   ebx,eax
  42190d:	jnp    0x421956
  42190f:	loop   0x4218bb
  421911:	jp     0x421950
  421913:	in     eax,dx
  421914:	pusha  
  421915:	and    ebp,DWORD PTR [edi-0x11]
  421918:	gs pop esi
  42191a:	xchg   ecx,eax
  42191b:	ficomp DWORD PTR [ecx]
  42191d:	mov    dh,0x3
  42191f:	jecxz  0x4218f2
  421921:	ins    BYTE PTR es:[edi],dx
  421922:	mov    ds:0x8cf87871,al
  421927:	cmp    bh,BYTE PTR [edi]
  421929:	jno    0x4218db
  42192b:	call   0x2b86656e
  421930:	test   DWORD PTR cs:[edx+0x6251c9cf],0x886619ca
  42193b:	xchg   esi,eax
  42193c:	adc    DWORD PTR [ebx],edx
  42193e:	and    eax,0xc53532ea
  421943:	and    edi,DWORD PTR [ebp-0x58]
  421946:	mov    ah,0x47
  421948:	in     eax,0x65
  42194a:	fcomp  DWORD PTR [ebp-0x1df1a0a4]
  421950:	jmp    0x4219a1
  421952:	out    dx,al
  421953:	(bad)  
  421954:	mov    al,0x91
  421956:	pop    ecx
  421957:	js     0x4219aa
  421959:	retf   0x70f2
  42195c:	aad    0x17
  42195e:	leave  
  42195f:	or     ebp,DWORD PTR [ebx]
  421961:	inc    ebx
  421962:	(bad)  
  421963:	jo     0x421954
  421965:	mov    esi,0x218554d6
  42196a:	sbb    BYTE PTR [ecx+0x32],0xfb
  42196e:	out    0x43,eax
  421970:	lahf   
  421971:	sahf   
  421972:	mov    ebp,0x8d2e1a29
  421977:	fild   DWORD PTR [ecx-0x32]
  42197a:	(bad)  
  42197b:	cld    
  42197c:	add    al,0x5
  42197e:	or     al,0x19
  421980:	xor    dh,BYTE PTR [ecx-0x4baf91b5]
  421986:	sub    DWORD PTR [eax+0x5],ecx
  421989:	ret    
  42198a:	test   DWORD PTR [esi],ecx
  42198c:	sub    ecx,edi
  42198e:	mov    ah,0xc4
  421990:	mov    ebp,0x5c84db10
  421995:	in     al,0x96
  421997:	test   eax,0xeb4bb2aa
  42199c:	lahf   
  42199d:	bound  ebp,QWORD PTR cs:[esi-0x12]
  4219a1:	inc    edi
  4219a2:	test   al,0x24
  4219a4:	aad    0x57
  4219a6:	out    dx,eax
  4219a7:	cdq    
  4219a8:	inc    edx
  4219a9:	jbe    0x421989
  4219ab:	jmp    0xde15:0x435c3567
  4219b2:	jne    0x4219de
  4219b4:	push   eax
  4219b5:	inc    ebp
  4219b6:	addr16 jae 0x4219eb
  4219b9:	xor    eax,0x20525a6a
  4219be:	int    0xff
  4219c0:	je     0x42197b
  4219c2:	(bad)  
  4219c3:	adc    dl,dl
  4219c5:	or     DWORD PTR [ebx+0x45388aa4],ebx
  4219cb:	add    DWORD PTR [ecx+0x4978d3b3],eax
  4219d1:	pop    edx
  4219d2:	ins    DWORD PTR es:[edi],dx
  4219d3:	lods   al,BYTE PTR ds:[esi]
  4219d4:	es nop
  4219d6:	xchg   esi,eax
  4219d7:	mov    ebx,0xb98ddc5f
  4219dc:	jg     0x4219d5
  4219de:	call   0x5891a904
  4219e3:	mov    ah,0xda
  4219e5:	stc    
  4219e6:	sub    al,0xc5
  4219e8:	jmp    0x421a47
  4219ea:	sbb    al,0x3d
  4219ec:	mov    dh,0xc7
  4219ee:	pop    ebx
  4219ef:	push   edx
  4219f0:	stos   DWORD PTR es:[edi],eax
  4219f1:	cmp    edi,DWORD PTR [ebx-0x6c910e90]
  4219f7:	adc    BYTE PTR [eax-0x41],0x29
  4219fb:	ss pusha 
  4219fd:	xor    BYTE PTR [ebx+0x6f],bh
  421a00:	cmp    DWORD PTR [bx+di],edx
  421a03:	adc    dh,bh
  421a05:	lock cli 
  421a07:	pop    eax
  421a08:	hlt    
  421a09:	mov    cl,0xca
  421a0b:	mov    ds:0x605e8581,eax
  421a10:	xchg   BYTE PTR [ecx],dl
  421a12:	lds    esi,FWORD PTR [ecx]
  421a14:	push   ss
  421a15:	fcos   
  421a17:	add    al,0x70
  421a19:	mov    ch,bh
  421a1b:	les    ecx,FWORD PTR [edi+ebx*4-0x46]
  421a1f:	sub    eax,0x9a22915e
  421a24:	fdiv   QWORD PTR [eax+edx*8+0x7d0fb971]
  421a2b:	xor    ebp,DWORD PTR [eax+0xa4bb586]
  421a31:	aaa    
  421a32:	shl    ebp,0x7c
  421a35:	or     ecx,DWORD PTR [edi+0x63a87795]
  421a3b:	dec    esp
  421a3c:	mov    al,0xe5
  421a3e:	stos   DWORD PTR es:[edi],eax
  421a3f:	add    eax,0xab4de6a9
  421a44:	fld    TBYTE PTR [esi]
  421a46:	mov    gs,WORD PTR [ebx-0x410e8af1]
  421a4c:	lahf   
  421a4d:	mov    esi,0x836a923b
  421a52:	outs   dx,BYTE PTR ds:[esi]
  421a53:	push   0x3545006f
  421a58:	pop    ecx
  421a59:	call   0x1ac:0xf645114e
  421a60:	pop    es
  421a61:	iret   
  421a62:	inc    ecx
  421a63:	inc    bx
  421a65:	js     0x421a54
  421a67:	loop   0x421a43
  421a69:	mov    esp,0xdbaed307
  421a6e:	into   
  421a6f:	ret    
  421a70:	mov    al,dh
  421a72:	fistp  DWORD PTR [eax-0x18e73935]
  421a78:	sti    
  421a79:	call   FWORD PTR [edx+0x7992c7e0]
  421a7f:	inc    ebx
  421a80:	popa   
  421a81:	pushf  
  421a82:	dec    eax
  421a83:	(bad)  
  421a84:	(bad)  
  421a85:	fucomp st(1)
  421a87:	lock loopne 0x421a93
  421a8a:	jb     0x421b0b
  421a8c:	xchg   edx,ebx
  421a8e:	leave  
  421a8f:	fild   WORD PTR [edi]
  421a91:	add    BYTE PTR [edi],0xb7
  421a94:	pop    esp
  421a95:	stos   DWORD PTR es:[edi],eax
  421a96:	jecxz  0x421aaa
  421a98:	jae    0x421af3
  421a9a:	out    0x73,eax
  421a9c:	mov    al,BYTE PTR [ebp-0x62]
  421a9f:	ret    0x60e9
  421aa2:	(bad)  
  421aa3:	addr16 test al,0x9e
  421aa6:	int    0xdc
  421aa8:	xor    DWORD PTR [edi+0x3d],0xffffffeb
  421aac:	int    0xf8
  421aae:	pop    ecx
  421aaf:	shl    DWORD PTR [esi+0x53],cl
  421ab2:	jo     0x421a97
  421ab4:	xchg   ecx,eax
  421ab5:	push   ebp
  421ab6:	test   DWORD PTR [esi+0x12],0xa4a7ad52
  421abd:	int3   
  421abe:	ret    
  421abf:	fnstsw WORD PTR [eax+ecx*1]
  421ac2:	dec    ebx
  421ac3:	ins    DWORD PTR es:[edi],dx
  421ac4:	imul   ecx,DWORD PTR [ebp-0x4a],0x6f
  421ac8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ac9:	loop   0x421acc
  421acb:	test   al,0x83
  421acd:	xor    eax,DWORD PTR [edi]
  421acf:	sti    
  421ad0:	jns    0x421a89
  421ad2:	dec    ebx
  421ad3:	pop    ecx
  421ad4:	pop    ds
  421ad5:	call   0xfb33:0x5cf797a0
  421adc:	sub    edx,DWORD PTR [ebp-0x50]
  421adf:	test   al,0x82
  421ae1:	dec    esi
  421ae2:	inc    ebp
  421ae3:	jg     0x421b02
  421ae5:	cld    
  421ae6:	int3   
  421ae7:	shl    BYTE PTR [edx+0x59],1
  421aea:	push   eax
  421aeb:	popa   
  421aec:	dec    ebx
  421aed:	shl    ebp,0x6a
  421af0:	push   edx
  421af1:	int    0x32
  421af3:	xchg   ebp,eax
  421af4:	data16 fmul st,st(0)
  421af7:	and    al,0x36
  421af9:	mov    ch,0xa4
  421afb:	push   esp
  421afc:	cmp    al,0x50
  421afe:	not    BYTE PTR [edi+0x27]
  421b01:	shr    ch,0x71
  421b04:	mov    bh,0xda
  421b06:	push   edi
  421b07:	loopne 0x421b86
  421b09:	std    
  421b0a:	in     eax,0x13
  421b0c:	shl    BYTE PTR [ebp-0x4c991ccd],1
  421b12:	dec    ebp
  421b13:	jns    0x421aa7
  421b15:	stc    
  421b16:	fdivr  DWORD PTR [esi+0x69]
  421b19:	call   0x3a6b025a
  421b1e:	and    dl,BYTE PTR [eax-0x3e]
  421b21:	pop    ebx
  421b22:	push   ebp
  421b23:	rcr    BYTE PTR [esi-0x7ffa751f],1
  421b29:	xor    ebp,edi
  421b2b:	fmulp  st(1),st
  421b2d:	mov    esp,0x8fa6432a
  421b32:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b34:	xchg   ecx,eax
  421b35:	sti    
  421b36:	lock xchg ebp,eax
  421b38:	xor    eax,0xb3963cbe
  421b3d:	or     al,0xac
  421b3f:	imul   ebp,DWORD PTR [eax+0x31d9ad12],0xffffffc7
  421b46:	pushf  
  421b47:	cld    
  421b48:	movaps xmm1,XMMWORD PTR [ecx-0x60]
  421b4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b4d:	sub    DWORD PTR [eax-0x1a],edx
  421b50:	das    
  421b51:	xor    bl,dh
  421b53:	sti    
  421b54:	jnp    0x421ae3
  421b56:	add    ecx,DWORD PTR ds:0xde7a3850
  421b5c:	adc    eax,0x635bf4de
  421b61:	xchg   DWORD PTR [esi-0x1397f28a],esp
  421b67:	sbb    edi,DWORD PTR [edx-0xf23b8c1]
  421b6d:	mov    eax,0x2f6fa841
  421b72:	in     eax,0x7f
  421b74:	jp     0x421bb8
  421b76:	loope  0x421ba3
  421b78:	cmp    esi,DWORD PTR [edi+esi*8+0x7e969a0]
  421b7f:	xlat   BYTE PTR ds:[ebx]
  421b80:	(bad)  
  421b81:	pop    ebp
  421b82:	add    DWORD PTR [ecx],ebx
  421b84:	pop    eax
  421b85:	shl    DWORD PTR [ebp-0x44],cl
  421b88:	stc    
  421b89:	arpl   WORD PTR [esi],di
  421b8b:	ds sahf 
  421b8d:	dec    esi
  421b8e:	add    ch,BYTE PTR [edi+0x5d94ed9a]
  421b94:	daa    
  421b95:	neg    DWORD PTR ds:0x7b0999e2
  421b9b:	sbb    cl,BYTE PTR [eax+0x0]
  421b9e:	add    BYTE PTR [eax],al
  421ba0:	add    BYTE PTR [eax],al
  421ba2:	sbb    edi,DWORD PTR [esi-0x25106512]
  421ba8:	jg     0x421b69
  421baa:	call   0xac5b:0x87770da0
  421bb1:	inc    edx
  421bb2:	jle    0x421b49
  421bb4:	add    DWORD PTR [eax],eax
  421bb6:	repz add al,0x0
  421bb9:	add    BYTE PTR [edi+0xf],dl
  421bbc:	hlt    
  421bbd:	adc    BYTE PTR [ecx-0x5240297a],ah
  421bc3:	ficomp DWORD PTR [ebx]
  421bc5:	add    al,0x3f
  421bc7:	mov    dh,0xa6
  421bc9:	sbb    al,0xe8
  421bcb:	xor    al,0xaf
  421bcd:	cmp    cl,BYTE PTR [esi+0x6d]
  421bd0:	lock and eax,0x5a440d4c
  421bd6:	les    ebx,FWORD PTR [edx-0x20]
  421bd9:	enter  0x34a2,0x6
  421bdd:	fwait
  421bde:	sub    DWORD PTR [edi+eax*2],ebp
  421be1:	(bad)  
  421be2:	dec    esp
  421be3:	int3   
  421be4:	fist   DWORD PTR [ebx+eax*8-0x7e7366da]
  421beb:	out    dx,eax
  421bec:	cmp    BYTE PTR [edx],bl
  421bee:	aas    
  421bef:	(bad)  
  421bf0:	fnstenv [ebx+0x5b]
  421bf3:	sbb    BYTE PTR [ecx-0x7dd4580],bl
  421bf9:	jmp    0xb7569844
  421bfe:	data16 jae 0x421c2b
  421c01:	stc    
  421c02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c03:	ds xor ch,ah
  421c06:	mov    ebx,0x8120dc79
  421c0b:	jge    0x421c27
  421c0d:	out    0x75,al
  421c0f:	xor    ch,BYTE PTR [edx]
  421c11:	ret    0x929c
  421c14:	push   esi
  421c15:	cwde   
  421c16:	(bad)  
  421c17:	dec    edi
  421c18:	add    dl,BYTE PTR [ecx+esi*1-0x32]
  421c1c:	es or  eax,0x861c2b03
  421c22:	hlt    
  421c23:	sar    DWORD PTR [ebx-0x7cfca797],1
  421c29:	xor    BYTE PTR [edx],ah
  421c2b:	xor    dl,dh
  421c2d:	adc    dh,dl
  421c2f:	push   0xb6e090ba
  421c34:	xor    BYTE PTR [ebp-0x3ebc887d],ah
  421c3a:	aaa    
  421c3b:	out    dx,eax
  421c3c:	cs loopne 0x421c36
  421c3f:	xor    al,0x97
  421c41:	xor    eax,0x3c25a3b0
  421c46:	cli    
  421c47:	dec    ebx
  421c48:	or     DWORD PTR [edi],edx
  421c4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c4b:	sbb    al,0xc0
  421c4d:	mov    ecx,fs
  421c4f:	jmp    0x421c6e
  421c51:	test   BYTE PTR [ebx-0x47],ah
  421c54:	push   ebx
  421c55:	imul   ebx,DWORD PTR [edi-0x2],0x7f8020f9
  421c5c:	fidiv  DWORD PTR [edi]
  421c5e:	jg     0x421c41
  421c60:	xchg   edi,eax
  421c61:	std    
  421c62:	adc    al,BYTE PTR [ebp-0x4e3f06d0]
  421c68:	outs   dx,DWORD PTR ds:[esi]
  421c69:	(bad)  
  421c6a:	push   ebx
  421c6b:	cmp    al,0x9d
  421c6d:	inc    ecx
  421c6e:	xchg   esp,eax
  421c6f:	scas   al,BYTE PTR es:[edi]
  421c70:	sub    eax,0xbbf24b18
  421c75:	inc    ebx
  421c76:	sbb    eax,0xd37f33f9
  421c7b:	std    
  421c7c:	mov    edi,0x682937d5
  421c81:	cdq    
  421c82:	xchg   BYTE PTR [ebp-0x61badfae],dl
  421c88:	jae    0x421c44
  421c8a:	loop   0x421c8f
  421c8c:	cld    
  421c8d:	das    
  421c8e:	or     bh,bh
  421c90:	cwde   
  421c91:	(bad)  
  421c92:	fstp   DWORD PTR [edx-0x405af54e]
  421c98:	in     al,0x7c
  421c9a:	loop   0x421c67
  421c9c:	cmp    ah,cl
  421c9e:	addr16 inc ebp
  421ca0:	popf   
  421ca1:	nop
  421ca2:	sbb    ch,BYTE PTR [ebp-0x2e]
  421ca5:	mov    ebp,0xfea7f6e7
  421caa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cab:	add    al,0xf8
  421cad:	pop    es
  421cae:	xor    al,0xc1
  421cb0:	inc    edi
  421cb1:	rol    cl,cl
  421cb3:	dec    ecx
  421cb4:	mov    WORD PTR [esi+0x28cb8e40],fs
  421cba:	cmp    edi,DWORD PTR [edi]
  421cbc:	in     al,dx
  421cbd:	cld    
  421cbe:	jo     0x421d3e
  421cc0:	or     al,BYTE PTR [edx+eax*1+0x16]
  421cc4:	jle    0x421d2a
  421cc6:	sbb    edi,DWORD PTR [ecx+0x7c]
  421cc9:	dec    ebp
  421cca:	mov    bl,0xbe
  421ccc:	icebp  
  421ccd:	arpl   WORD PTR [ecx+0x4d],dx
  421cd0:	(bad)  
  421cd1:	hlt    
  421cd2:	add    dh,dh
  421cd4:	sbb    eax,0x3f35e97c
  421cd9:	or     dl,BYTE PTR [ebp+0x1]
  421cdc:	sub    ah,BYTE PTR [edx+0x8]
  421cdf:	and    bh,BYTE PTR [eax]
  421ce1:	or     ebx,esi
  421ce3:	mov    bh,0xcd
  421ce5:	aad    0x71
  421ce7:	and    eax,0x57e7cede
  421cec:	neg    BYTE PTR [edi+eax*8-0x12570079]
  421cf3:	and    al,BYTE PTR [edi+0x7a69d1ca]
  421cf9:	sar    BYTE PTR [ecx],0x87
  421cfc:	ror    BYTE PTR [ebp+0x4b],0x7
  421d00:	rol    esp,0x5d
  421d03:	rcl    BYTE PTR [esi],1
  421d05:	jecxz  0x421c8c
  421d07:	mov    esi,0xe208e555
  421d0c:	push   es
  421d0d:	adc    al,0x9
  421d0f:	xor    eax,0x7e32c136
  421d14:	add    DWORD PTR [ebx],ebp
  421d16:	mov    WORD PTR [ebx+0x5a],?
  421d19:	pop    ss
  421d1a:	cmp    eax,0xcd3ab6f
  421d1f:	xchg   ecx,eax
  421d20:	pop    esp
  421d21:	and    dh,BYTE PTR [esi+0x26]
  421d24:	pop    eax
  421d25:	push   ebp
  421d26:	cmp    al,0xbd
  421d28:	leave  
  421d29:	jg     0x421d4f
  421d2b:	or     eax,0xbbb73805
  421d30:	test   BYTE PTR [eax+0x27140374],0x78
  421d37:	jne    0x421dad
  421d39:	push   edx
  421d3a:	and    bl,BYTE PTR [eax+ebp*8]
  421d3d:	pop    ss
  421d3e:	shl    BYTE PTR [esi],0x6e
  421d41:	cmp    al,0x64
  421d43:	jg     0x421cd9
  421d45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d46:	jg     0x421dbb
  421d48:	add    al,BYTE PTR [esi]
  421d4a:	mov    edi,0x229d1ae7
  421d4f:	xchg   esp,eax
  421d50:	push   0x8a749427
  421d55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d56:	outs   dx,BYTE PTR ds:[esi]
  421d57:	pop    edx
  421d58:	jbe    0x421dab
  421d5a:	retf   
  421d5b:	mov    edi,0x11a9dc59
  421d60:	in     al,0x49
  421d62:	retf   0x53e7
  421d65:	jecxz  0x421d49
  421d67:	add    bh,BYTE PTR [edx]
  421d69:	(bad)  
  421d6a:	mov    edx,0x14ff8b48
  421d6f:	sbb    BYTE PTR [esi],ch
  421d71:	sub    BYTE PTR [edi+0x4b],0xf3
  421d75:	add    DWORD PTR [edx-0x26],0xffffff84
  421d79:	add    al,0x4a
  421d7b:	aad    0x99
  421d7d:	out    dx,al
  421d7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d7f:	iret   
  421d80:	in     eax,0x6
  421d82:	jmp    0xfdba:0x8fe4eb7a
  421d89:	pusha  
  421d8a:	add    eax,0x7d95d828
  421d8f:	push   eax
  421d90:	in     eax,0xb4
  421d92:	and    BYTE PTR [edi+0x14351fa9],0xaf
  421d99:	cs call 0x88767ae7
  421d9f:	mov    ds:0x31d2bc1a,eax
  421da4:	out    dx,eax
  421da5:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421da7:	or     edi,DWORD PTR [edx]
  421da9:	jbe    0x421e17
  421dab:	jnp    0x421d40
  421dad:	adc    DWORD PTR [eax],edx
  421daf:	(bad)  
  421db0:	clc    
  421db1:	or     eax,0x773cbc7a
  421db6:	jecxz  0x421e15
  421db8:	or     al,0x56
  421dba:	lock jnp 0x421dd3
  421dbd:	rcl    DWORD PTR [esi+0x15],0xdd
  421dc1:	sbb    al,bh
  421dc3:	popa   
  421dc4:	mov    ah,0x68
  421dc6:	xor    bh,al
  421dc8:	pop    edx
  421dc9:	mov    ebp,0x341a0cec
  421dce:	pop    esp
  421dcf:	test   BYTE PTR [ebx+eax*4+0x22a277c1],dh
  421dd6:	scas   al,BYTE PTR es:[edi]
  421dd7:	loope  0x421e10
  421dd9:	sbb    DWORD PTR [edx],esp
  421ddb:	stos   BYTE PTR es:[edi],al
  421ddc:	jo     0x421e38
  421dde:	sub    BYTE PTR [eax],0x77
  421de1:	mov    bl,0x19
  421de3:	jbe    0x421e1a
  421de5:	inc    ebp
  421de6:	loop   0x421d8a
  421de8:	sbb    ah,cl
  421dea:	add    dl,BYTE PTR [ecx-0x55]
  421ded:	jmp    0x421e5b
  421def:	fldenv [ebx]
  421df1:	xlat   BYTE PTR ds:[ebx]
  421df2:	or     cl,BYTE PTR [edx]
  421df4:	mov    edx,0xbd51cd87
  421df9:	sub    ecx,edx
  421dfb:	loope  0x421d8d
  421dfd:	add    BYTE PTR [eax+0x54],ch
  421e00:	popf   
  421e01:	jg     0x421dcf
  421e03:	stos   BYTE PTR es:[edi],al
  421e04:	(bad)  
  421e06:	fisubr DWORD PTR [esi+0x24]
  421e09:	add    al,0x34
  421e0b:	mov    ebx,0xf290c8d1
  421e10:	aad    0xf
  421e12:	rcr    BYTE PTR ds:0x97a75b33,0xce
  421e19:	unpckhps xmm2,XMMWORD PTR [ebx+eiz*8]
  421e1d:	add    cl,bl
  421e1f:	pop    esp
  421e20:	push   edi
  421e21:	pop    ds
  421e22:	dec    esi
  421e23:	scas   eax,DWORD PTR es:[edi]
  421e24:	cmp    BYTE PTR [esi+0xe],0x97
  421e28:	js     0x421e97
  421e2a:	dec    esi
  421e2b:	jo     0x421e85
  421e2d:	(bad)
  421e30:	ret    
  421e31:	mov    esi,0xe456753e
  421e36:	xchg   esi,eax
  421e37:	int    0xa2
  421e39:	js     0x421e71
  421e3b:	inc    esi
  421e3c:	(bad)  
  421e3d:	mov    ebx,0x333a6c5
  421e42:	into   
  421e43:	push   0x386c6179
  421e48:	rol    DWORD PTR [esi+0x65],0x4
  421e4c:	sub    al,BYTE PTR [ecx]
  421e4e:	cmc    
  421e4f:	test   al,ch
  421e51:	sbb    esi,ebx
  421e53:	int3   
  421e54:	sbb    DWORD PTR [edi+ebp*8],ebp
  421e57:	out    0x56,eax
  421e59:	xchg   edi,eax
  421e5a:	xchg   ecx,eax
  421e5b:	fidiv  DWORD PTR [edi]
  421e5d:	mov    cs:0xa3fd0805,al
  421e63:	mov    ch,0x18
  421e65:	mov    al,0x9f
  421e67:	aad    0xc0
  421e69:	lahf   
  421e6a:	ret    
  421e6b:	imul   edi,DWORD PTR [eax],0xc8d32b34
  421e71:	dec    edi
  421e72:	cmp    DWORD PTR [ebp+0x3f],eax
  421e75:	mov    eax,ds:0x4d9f9c1
  421e7a:	(bad)  
  421e7c:	inc    edi
  421e7d:	add    cl,0x9e
  421e80:	loop   0x421e0f
  421e82:	ret    0xb387
  421e85:	push   eax
  421e86:	cmp    cl,BYTE PTR [edx+0x50d599f5]
  421e8c:	stos   DWORD PTR es:[edi],eax
  421e8d:	mov    ds:0xc20f35cc,eax
  421e92:	js     0x421e80
  421e94:	out    0xd6,al
  421e96:	daa    
  421e97:	add    eax,0x6ab99d74
  421e9c:	(bad)  
  421e9d:	je     0x421e5c
  421e9f:	out    0xbe,al
  421ea1:	ins    DWORD PTR es:[edi],dx
  421ea2:	popa   
  421ea3:	add    eax,0x2943dd28
  421ea8:	xchg   ebp,eax
  421ea9:	call   0x2888:0xee85389c
  421eb0:	dec    esi
  421eb1:	xchg   esp,eax
  421eb2:	loopne 0x421f06
  421eb4:	loopne 0x421e41
  421eb6:	pop    edi
  421eb7:	in     eax,0x36
  421eb9:	jg     0x421f02
  421ebb:	xchg   ecx,eax
  421ebc:	(bad)  
  421ebd:	fwait
  421ebe:	mov    ds:0x81c534e2,eax
  421ec3:	adc    ebp,DWORD PTR [eax+eax*8]
  421ec6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ec7:	outs   dx,DWORD PTR ds:[esi]
  421ec8:	push   ss
  421ec9:	aam    0x16
  421ecb:	inc    esi
  421ecc:	xor    cl,BYTE PTR [ecx+edx*4+0x32]
  421ed0:	jae    0x421efd
  421ed2:	mov    al,0x68
  421ed4:	out    0x76,eax
  421ed6:	mov    ds:0x1df20ef2,eax
  421edb:	cli    
  421edc:	dec    edx
  421edd:	lock cdq 
  421edf:	sub    BYTE PTR [ebx+0x5323468e],bl
  421ee5:	jecxz  0x421e69
  421ee7:	stos   DWORD PTR es:[edi],eax
  421ee8:	or     esp,DWORD PTR [ecx-0x677dc9e0]
  421eee:	lods   al,BYTE PTR ds:[esi]
  421eef:	bound  ebp,QWORD PTR [esi+eiz*4+0x75c0e317]
  421ef6:	add    DWORD PTR [ebx],ebp
  421ef8:	jecxz  0x421e98
  421efa:	mov    esp,0x85e3eb79
  421eff:	pop    esi
  421f00:	mov    edi,0xd2c636a9
  421f05:	(bad)  
  421f06:	mov    ss:0xa6b509c5,al
  421f0c:	cmp    DWORD PTR [eax],esi
  421f0e:	sbb    ebx,DWORD PTR [ebx-0x2e]
  421f11:	arpl   WORD PTR [edi-0x3],di
  421f14:	mov    al,0x90
  421f16:	rcr    DWORD PTR [eax],cl
  421f18:	inc    eax
  421f19:	ret    
  421f1a:	jae    0x421f59
  421f1c:	shl    DWORD PTR [edx-0x7525191],1
  421f22:	mov    ebp,0xbaec4dbe
  421f27:	jp     0x421f08
  421f29:	enter  0x3ad9,0x6d
  421f2d:	xchg   ebp,eax
  421f2e:	fld    QWORD PTR [edx*4+0x2d6c4c56]
  421f35:	mov    eax,0xf21e20ac
  421f3a:	push   ecx
  421f3b:	jnp    0x421ec5
  421f3d:	push   ebp
  421f3e:	sbb    al,0xff
  421f40:	or     al,0xbe
  421f42:	repnz popf 
  421f44:	add    al,BYTE PTR [ecx-0x32]
  421f47:	(bad)  
  421f49:	inc    esp
  421f4a:	pop    es
  421f4b:	push   esp
  421f4c:	out    dx,al
  421f4d:	dec    edi
  421f4e:	iret   
  421f4f:	in     al,dx
  421f50:	outs   dx,BYTE PTR ds:[esi]
  421f51:	(bad)  
  421f53:	xchg   esi,eax
  421f54:	les    ebx,FWORD PTR [edx+edx*2-0x5d]
  421f58:	sub    al,0xc3
  421f5a:	sub    BYTE PTR [edx+0xe],dl
  421f5d:	or     ebp,esi
  421f5f:	mov    WORD PTR [ebp-0x334f2e71],gs
  421f65:	mov    ds:0xf3e93f40,eax
  421f6a:	jae    0x421fcb
  421f6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f6d:	or     BYTE PTR [esp+eiz*4+0x2e],dh
  421f71:	mov    ecx,0xb767d1d6
  421f76:	sbb    eax,0xd58eb164
  421f7b:	je     0x421f05
  421f7d:	enter  0xf942,0xe2
  421f81:	int    0x84
  421f83:	(bad)  
  421f84:	push   esi
  421f85:	out    dx,eax
  421f86:	sbb    al,BYTE PTR [edi+ebp*8+0x7]
  421f8a:	outs   dx,BYTE PTR ds:[esi]
  421f8b:	fbld   TBYTE PTR ds:0x97386885
  421f91:	mov    bl,0x99
  421f93:	mov    ds:0xb2544a4a,al
  421f98:	aad    0x3b
  421f9a:	lea    ecx,[esi+ecx*8-0x7a]
  421f9e:	add    eax,0x35290344
  421fa3:	sbb    DWORD PTR [ecx+0x22],ecx
  421fa6:	dec    edi
  421fa7:	imul   ebx,DWORD PTR [edi-0x424dff63],0xc77f3d31
  421fb1:	add    BYTE PTR [esi-0x54],dh
  421fb4:	(bad)  
  421fb5:	aad    0x13
  421fb7:	pop    esi
  421fb8:	pop    eax
  421fb9:	jnp    0x422034
  421fbb:	or     BYTE PTR [ecx],dl
  421fbd:	inc    edi
  421fbe:	stc    
  421fbf:	lods   eax,DWORD PTR ds:[esi]
  421fc0:	inc    esp
  421fc1:	jl     0x421fab
  421fc3:	leave  
  421fc4:	inc    edx
  421fc5:	mov    eax,ds:0xc8acd3b9
  421fca:	imul   eax,esi,0xfffffffb
  421fcd:	xchg   eax,eax
  421fcf:	stc    
  421fd0:	ret    0x6ca5
  421fd3:	test   DWORD PTR [ecx],ecx
  421fd5:	ins    DWORD PTR es:[edi],dx
  421fd6:	mov    esi,0x698f00ea
  421fdb:	test   al,0x8e
  421fdd:	xlat   BYTE PTR ds:[ebx]
  421fde:	loopne 0x421f7a
  421fe0:	jno    0x42203f
  421fe2:	or     bl,bl
  421fe4:	rcl    DWORD PTR [ecx+0x546ff48a],0x3a
  421feb:	ins    DWORD PTR es:[edi],dx
  421fec:	popa   
  421fed:	jmp    0x9a00:0x8160df18
  421ff4:	mov    ebx,0xbc9e2f17
  421ff9:	iret   
  421ffa:	inc    edi
  421ffb:	mov    eax,0x919c9179
  422000:	ret    
  422001:	ins    BYTE PTR es:[edi],dx
  422002:	xor    eax,0x15053a57
  422007:	aam    0x96
  422009:	scas   eax,DWORD PTR es:[edi]
  42200a:	pop    eax
  42200b:	and    bl,BYTE PTR [esi-0x6b]
  42200e:	jmp    0xb1b6:0x2e9561dc
  422015:	pop    ecx
  422016:	push   ds
  422017:	adc    dh,bh
  422019:	inc    ebx
  42201a:	pop    esi
  42201b:	mov    eax,0xa5e85453
  422020:	mov    dh,0xa5
  422022:	loopne 0x422036
  422024:	add    al,0x98
  422026:	mov    ecx,cs
  422028:	or     DWORD PTR [ecx-0x68],0xb1865d4c
  42202f:	sub    BYTE PTR [ebp+0x53139523],al
  422035:	mov    edx,ds
  422037:	pop    esp
  422038:	push   0xfb99641a
  42203d:	stc    
  42203e:	mov    ah,0xfa
  422040:	(bad)  
  422042:	std    
  422043:	test   DWORD PTR [esi-0x47],esp
  422046:	(bad)  
  422047:	push   ebx
  422048:	mov    bl,BYTE PTR [edi]
  42204a:	lea    eax,[eax]
  42204c:	dec    ebp
  42204d:	adc    esi,edx
  42204f:	add    BYTE PTR ds:0x72f2e53e,0x90
  422056:	jp     0x4220be
  422058:	cdq    
  422059:	aam    0x43
  42205b:	or     BYTE PTR [eax+esi*8-0x65bc614d],0xac
  422063:	test   DWORD PTR [eax+0xefe2db5],0x7e30958b
  42206d:	imul   esi
  42206f:	mov    esp,edi
  422071:	sahf   
  422072:	xlat   BYTE PTR ds:[ebx]
  422073:	sbb    al,BYTE PTR [esi-0x18565777]
  422079:	mov    gs,WORD PTR [edx+0x6df3e7d8]
  42207f:	clc    
  422080:	ss dec esi
  422082:	cmp    dl,BYTE PTR [ecx-0x60]
  422085:	cs xchg esi,eax
  422087:	inc    edx
  422088:	les    edi,FWORD PTR [eax+0x34]
  42208b:	imul   dh
  42208d:	jmp    0x422069
  42208f:	jne    0x422037
  422091:	add    BYTE PTR gs:[esi-0x34],0x10
  422096:	pop    ebx
  422097:	dec    ebp
  422098:	add    cl,bl
  42209a:	lods   eax,DWORD PTR ds:[esi]
  42209b:	rcl    DWORD PTR [edx],cl
  42209d:	jge    0x42203b
  42209f:	fdiv   DWORD PTR [esi+0x2e0c3586]
  4220a5:	addr16 aas 
  4220a7:	aas    
  4220a8:	jbe    0x42202d
  4220aa:	and    al,0x5c
  4220ac:	fild   DWORD PTR [eax]
  4220ae:	add    BYTE PTR [eax],al
  4220b0:	add    BYTE PTR [eax],al
  4220b2:	cmp    ecx,edi
  4220b4:	pop    ebx
  4220b5:	sub    ebx,ebx
  4220b7:	stos   DWORD PTR es:[edi],eax
  4220b8:	jns    0x4220b5
  4220ba:	dec    edx
  4220bb:	sub    bl,0xe9
  4220be:	mov    edx,0x71fe59d8
  4220c3:	call   0x0:0x4f30001
  4220ca:	cmp    ecx,DWORD PTR [edx]
  4220cc:	in     al,0x6f
  4220ce:	sbb    BYTE PTR [esi-0x1b],dl
  4220d1:	not    BYTE PTR [eax]
  4220d3:	lods   al,BYTE PTR ds:[esi]
  4220d4:	shl    DWORD PTR ds:0x41ce8c02,1
  4220da:	adc    DWORD PTR [ecx-0x5],edi
  4220dd:	aaa    
  4220de:	sahf   
  4220df:	loopne 0x422076
  4220e1:	lds    edi,FWORD PTR [edi]
  4220e3:	or     dl,bh
  4220e5:	xor    eax,0x12097a17
  4220ea:	test   eax,0x7516feed
  4220ef:	mov    bh,0xc4
  4220f1:	jne    0x4220d0
  4220f3:	dec    ebp
  4220f4:	xor    ebx,DWORD PTR [ebp-0x2d66ef98]
  4220fa:	mov    DWORD PTR [eax],esp
  4220fc:	cmp    eax,0x3c3a8d3e
  422101:	icebp  
  422102:	dec    ebp
  422103:	sti    
  422104:	fstp   QWORD PTR [ebx-0x3d]
  422107:	jle    0x422091
  422109:	xchg   edx,eax
  42210a:	jge    0x42214c
  42210c:	(bad)  
  42210d:	mov    bh,0xf1
  422110:	mov    al,0x44
  422112:	sub    al,0x70
  422114:	push   esi
  422115:	mov    al,0x53
  422117:	sbb    al,0xc4
  422119:	push   esp
  42211a:	mov    ebx,0xf5329604
  42211f:	sbb    edi,esp
  422121:	mov    dh,0xc7
  422123:	ficomp WORD PTR [ebx+edx*8+0xf]
  422127:	sbb    eax,edi
  422129:	xor    cl,dh
  42212b:	aad    0xf3
  42212d:	popa   
  42212e:	jp     0x4220fe
  422130:	mov    dh,cl
  422132:	mov    edx,0x5b41b444
  422137:	sbb    DWORD PTR [ecx-0x31],edx
  42213a:	jle    0x422156
  42213c:	test   eax,0xcc5270f7
  422141:	push   ebp
  422142:	(bad)  
  422143:	pop    ds
  422144:	push   0x9a2ebcf
  422149:	fadd   DWORD PTR [edi+0x7e9aeefb]
  42214f:	jnp    0x4221ae
  422151:	push   eax
  422152:	cmp    bh,BYTE PTR [ecx-0x69690cf1]
  422158:	fprem  
  42215a:	jecxz  0x422111
  42215c:	js     0x422155
  42215e:	jmp    FWORD PTR [ebp-0x1da35c3e]
  422164:	mov    ecx,0xcf4b1ff4
  422169:	mov    ah,0x8f
  42216b:	mov    esi,0xd3ae50d5
  422170:	push   esi
  422171:	sub    BYTE PTR [ebx-0xf452331],dh
  422177:	xor    al,0x47
  422179:	pop    esp
  42217a:	fadd   DWORD PTR [ebx-0x49]
  42217d:	out    0x0,eax
  42217f:	dec    esp
  422180:	inc    ebx
  422181:	dec    ecx
  422182:	dec    edx
  422183:	mov    ds:0xdc3de0a4,eax
  422188:	or     eax,eax
  42218a:	cmp    BYTE PTR [ecx+0x78a706af],bh
  422190:	and    ax,0xfde8
  422194:	(bad)  
  422196:	iret   
  422197:	mov    ch,0x42
  422199:	mov    bh,0x3e
  42219b:	fisubr WORD PTR [edi]
  42219d:	retf   
  42219e:	mov    BYTE PTR [edx+0x6fb19fb7],dl
  4221a4:	jle    0x4221ad
  4221a6:	les    edi,FWORD PTR [edx+0x5b]
  4221a9:	scas   eax,DWORD PTR es:[edi]
  4221aa:	sti    
  4221ab:	sub    DWORD PTR [esi],ecx
  4221ad:	shr    DWORD PTR [eax+0x79],0x58
  4221b1:	sub    eax,0x245229c5
  4221b6:	leave  
  4221b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221b9:	xor    al,0x7
  4221bb:	mov    bh,0x86
  4221bd:	jbe    0x42220c
  4221bf:	ror    BYTE PTR [ecx+0x56a3b81],cl
  4221c5:	pop    ebx
  4221c6:	nop
  4221c7:	or     DWORD PTR [ebx+0x3b467985],0x54c9806
  4221d1:	aaa    
  4221d2:	mov    edi,0x8419b398
  4221d7:	pop    ds
  4221d8:	jmp    0x173dc7c3
  4221dd:	sbb    cl,al
  4221df:	inc    esi
  4221e0:	xchg   eax,edx
  4221e2:	mov    bl,0x76
  4221e4:	in     al,0xcc
  4221e6:	imul   edi,DWORD PTR [ecx],0xffffffab
  4221e9:	test   eax,0x78e7d098
  4221ee:	shl    BYTE PTR [edx-0x50104ad9],cl
  4221f4:	mov    ebp,DWORD PTR es:[edi+0x30]
  4221f8:	pushf  
  4221f9:	mov    WORD PTR [esi],?
  4221fb:	jge    0x42224c
  4221fd:	xchg   edx,eax
  4221fe:	pop    esi
  4221ff:	and    BYTE PTR [esi],ch
  422201:	pop    edx
  422202:	adc    edx,DWORD PTR [ecx]
  422204:	into   
  422205:	cs dec eax
  422207:	fimul  DWORD PTR [eax-0x2883cd94]
  42220d:	sub    eax,0x34d7a7a6
  422212:	adc    BYTE PTR [esi-0x4bdf40e8],cl
  422218:	in     al,0xd5
  42221a:	xor    al,0xe3
  42221c:	les    ebx,FWORD PTR [esi]
  42221e:	rol    DWORD PTR [edx-0x4cfd01c0],cl
  422224:	xchg   ebp,eax
  422225:	(bad)  
  422226:	mov    eax,ds:0x5ddc086e
  42222b:	sbb    BYTE PTR [ebx+0x4d],0x68
  42222f:	mov    BYTE PTR [eax-0x7a],bl
  422232:	sub    al,0xfa
  422234:	mov    ebx,0x2ee65657
  422239:	mov    ah,0x72
  42223b:	jmp    0xd643:0xdbe83aa5
  422242:	jo     0x4221e7
  422244:	repnz dec esp
  422246:	mov    bl,0x8e
  422248:	imul   ebx,edi,0x7a974d1e
  42224e:	fs daa 
  422250:	pop    ebp
  422251:	or     edi,esp
  422253:	push   es
  422254:	dec    ebx
  422255:	popf   
  422256:	je     0x4222cc
  422258:	mov    DWORD PTR [ecx-0x5f],ebx
  42225b:	mov    dh,0xfe
  42225d:	cwde   
  42225e:	test   al,0x73
  422260:	fisubr WORD PTR [eax-0x42]
  422263:	and    ecx,DWORD PTR [ebp-0x5d]
  422266:	call   0xe356bee8
  42226b:	lods   eax,DWORD PTR ds:[esi]
  42226c:	and    eax,0x2cb6f3d7
  422271:	push   es
  422272:	sti    
  422273:	int3   
  422274:	sub    BYTE PTR [ecx],ah
  422276:	and    ebp,esp
  422278:	test   al,0x37
  42227a:	ret    
  42227b:	pop    edx
  42227c:	xchg   ebp,eax
  42227d:	and    dl,cl
  42227f:	xlat   BYTE PTR ds:[ebx]
  422280:	sub    bl,BYTE PTR [ebx+0x4]
  422283:	add    cl,bh
  422285:	cs in  eax,dx
  422287:	sub    dh,BYTE PTR [edx+0x68fa77f5]
  42228d:	sbb    al,0xce
  42228f:	je     0x422307
  422291:	mov    DWORD PTR [edx+ebx*2-0x383fcb40],edi
  422298:	fst    DWORD PTR [ecx-0x16]
  42229b:	lds    edx,FWORD PTR [ebx+0x38]
  42229e:	sub    eax,0xd1b811e2
  4222a3:	addr16 popf 
  4222a5:	(bad)  
  4222a6:	xchg   edi,eax
  4222a7:	xor    BYTE PTR [edi+0x3c28bb68],bl
  4222ad:	sahf   
  4222ae:	jp     0x4222b2
  4222b0:	int3   
  4222b1:	adc    BYTE PTR [esp+eiz*8],dl
  4222b4:	push   ebp
  4222b5:	mov    al,0x9a
  4222b7:	mov    WORD PTR [ecx+0x28],ss
  4222ba:	jg     0x422309
  4222bc:	mov    DWORD PTR [ebx+0x17aabf],esp
  4222c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222c3:	push   ss
  4222c4:	paddusw mm5,QWORD PTR [edi-0x1e7b25c4]
  4222cb:	les    ebp,FWORD PTR [edi]
  4222cd:	in     al,0x85
  4222cf:	sbb    esi,ecx
  4222d1:	lods   al,BYTE PTR ds:[esi]
  4222d2:	nop
  4222d3:	ret    
  4222d4:	clc    
  4222d5:	shr    BYTE PTR [ebx],0xb7
  4222d8:	push   edi
  4222d9:	cmp    BYTE PTR [eax-0x291a5442],bh
  4222df:	add    ebx,ebx
  4222e1:	sbb    BYTE PTR [ebp+0x283d08b5],0x9c
  4222e8:	xor    al,0xed
  4222ea:	mov    ecx,0xf14aa59f
  4222ef:	fsubrp st(1),st
  4222f1:	pop    ds
  4222f2:	fstp   DWORD PTR [edx+eax*8-0x70da7459]
  4222f9:	sbb    edi,DWORD PTR [edx]
  4222fb:	out    0xbe,al
  4222fd:	out    0x7c,al
  4222ff:	aad    0xfd
  422301:	(bad)  
  422304:	sub    esp,DWORD PTR [esi+0x6a]
  422307:	and    dl,dh
  422309:	jb     0x422350
  42230b:	mov    ebp,edi
  42230d:	pop    ss
  42230e:	in     al,dx
  42230f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422310:	or     cl,BYTE PTR [ebp+0x49]
  422313:	and    al,0x80
  422315:	pop    es
  422316:	in     eax,dx
  422317:	test   eax,0x7ae0dabc
  42231c:	dec    ebx
  42231d:	neg    BYTE PTR [ecx+0x14]
  422320:	jnp    0x422353
  422322:	hlt    
  422323:	int3   
  422324:	mov    WORD PTR [ebx-0x5c],ds
  422327:	push   ebp
  422328:	push   0x254b8b2b
  42232d:	inc    ecx
  42232e:	dec    esi
  42232f:	xchg   edx,eax
  422330:	adc    DWORD PTR [ecx-0x3],ebx
  422333:	ror    DWORD PTR ds:0x8c1c7f0f,cl
  422339:	adc    al,0xc4
  42233b:	xchg   ecx,eax
  42233c:	lahf   
  42233d:	fbld   TBYTE PTR ds:[eax+0x50c264d4]
  422344:	retf   0x3fe0
  422347:	fcmovnb st,st(0)
  422349:	jae    0x42239f
  42234b:	test   esi,ebx
  42234d:	lahf   
  42234e:	test   eax,0xdef3083a
  422353:	imul   eax,DWORD PTR [eax],0xffffffb7
  422356:	add    BYTE PTR [ecx+0x10],ah
  422359:	jmp    0x422344
  42235b:	push   cs
  42235c:	pop    es
  42235d:	int3   
  42235e:	cmp    ch,al
  422360:	sub    dl,ah
  422362:	retf   
  422363:	dec    esi
  422364:	retf   0xd2f9
  422367:	adc    al,0xd7
  422369:	xchg   DWORD PTR [edx+0x67],ebp
  42236c:	or     DWORD PTR [ebp-0x33f554e0],esi
  422372:	fs fwait
  422374:	and    bh,bh
  422376:	dec    edx
  422377:	neg    DWORD PTR [edx+0x7d]
  42237a:	aaa    
  42237b:	mov    ah,0x22
  42237d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42237e:	sub    DWORD PTR [ecx-0x31],0x2490691e
  422385:	int    0x2d
  422387:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422388:	call   0xc9cd:0x5585ffcf
  42238f:	sbb    bh,BYTE PTR [esi-0x3a66de30]
  422395:	(bad)  
  422396:	mov    bh,0x99
  422398:	xor    cl,cl
  42239a:	stos   BYTE PTR es:[edi],al
  42239b:	xor    eax,0xd83fdbc
  4223a0:	pop    esp
  4223a1:	or     al,BYTE PTR [ebx+0x1ad95b9d]
  4223a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223a8:	jb     0x4223ca
  4223aa:	cdq    
  4223ab:	rcl    ebx,cl
  4223ad:	shl    DWORD PTR [ecx+0x1d4541f4],cl
  4223b3:	sbb    dl,BYTE PTR [eax-0x4c]
  4223b6:	lock or DWORD PTR [esi+0x51f25f8],ebx
  4223bd:	int    0x27
  4223bf:	(bad)  
  4223c1:	adc    edi,DWORD PTR [ecx-0x50]
  4223c4:	cmc    
  4223c5:	out    dx,al
  4223c6:	jne    0x42235a
  4223c8:	retf   0x652e
  4223cb:	jge    0x422431
  4223cd:	inc    BYTE PTR [ecx-0x253ae524]
  4223d3:	test   al,0x19
  4223d5:	rcr    BYTE PTR [edx+ebx*1],1
  4223d8:	fwait
  4223d9:	les    edi,FWORD PTR [edx+ebp*8+0xdaaa568]
  4223e0:	xchg   ecx,eax
  4223e1:	push   es
  4223e2:	les    esp,FWORD PTR [ebx+0x4fcab52f]
  4223e8:	aad    0xac
  4223ea:	xlat   BYTE PTR ds:[ebx]
  4223eb:	jae    0x4223ce
  4223ed:	mov    cl,0x94
  4223ef:	cmc    
  4223f0:	imul   esp,DWORD PTR ds:0xd049f88f,0xd536a437
  4223fa:	sub    bh,ch
  4223fc:	sub    al,0xbc
  4223fe:	imul   ebp,DWORD PTR [ebx+ebp*8+0xc527940],0x63
  422406:	arpl   WORD PTR [ebx-0xf864b10],cx
  42240c:	pop    DWORD PTR [ebx]
  42240e:	jmp    0x67c5:0x8eab52f6
  422415:	push   cs
  422416:	nop
  422417:	cs lahf 
  422419:	sti    
  42241a:	cld    
  42241b:	ret    0x22cf
  42241e:	je     0x42244d
  422420:	jnp    0x4223a5
  422422:	push   ds
  422423:	and    eax,0x6b4e307c
  422428:	mov    al,es:0x75e359f8
  42242e:	mov    al,0x96
  422430:	lds    esp,FWORD PTR [eax+0x5482338e]
  422436:	and    al,0x9b
  422438:	hlt    
  422439:	out    dx,eax
  42243a:	js     0x4224a8
  42243c:	retf   
  42243d:	xor    BYTE PTR [eax],ch
  42243f:	or     DWORD PTR [edx],ecx
  422441:	xor    cl,ch
  422443:	push   cs
  422444:	cmp    ebx,DWORD PTR [ebp+0x3b]
  422447:	addr16 xchg bp,ax
  42244a:	cli    
  42244b:	or     cl,BYTE PTR [ebx]
  42244d:	cmp    DWORD PTR [esi+eax*4+0x68],ebx
  422451:	and    al,0xcd
  422453:	xchg   DWORD PTR [edx+ebp*8],edx
  422456:	aaa    
  422457:	dec    ecx
  422458:	scas   al,BYTE PTR es:[edi]
  422459:	mov    ds,ecx
  42245b:	mov    esp,0xbed650c7
  422460:	(bad)  
  422461:	xchg   esp,eax
  422462:	cmp    ebx,eax
  422464:	popf   
  422465:	or     eax,DWORD PTR [ebx+0x69ef713b]
  42246b:	retf   
  42246c:	and    DWORD PTR [edi+edi*2-0x35a3eea1],ecx
  422473:	jne    0x422444
  422475:	les    esi,FWORD PTR [esi+0x51053386]
  42247b:	mov    ds:0x56bc7c5c,al
  422480:	(bad)  
  422481:	pop    esi
  422482:	cmc    
  422483:	dec    esi
  422484:	outs   dx,DWORD PTR ds:[esi]
  422485:	rol    bh,0xf
  422488:	jle    0x422498
  42248a:	mov    bl,0xc8
  42248c:	sub    DWORD PTR [edi],ecx
  42248e:	in     al,0x5
  422490:	push   esp
  422491:	je     0x422453
  422493:	nop
  422494:	vandnps xmm5,xmm6,XMMWORD PTR [ecx+esi*4+0x58]
  42249a:	mov    DWORD PTR [ebx-0x6c],ecx
  42249d:	(bad)  [ecx+0x69]
  4224a0:	push   ebp
  4224a1:	imul   ebx,DWORD PTR [esi],0x927a2cab
  4224a7:	leave  
  4224a8:	add    al,0x1b
  4224aa:	data16 into 
  4224ac:	cmp    BYTE PTR [esi+0x56],bh
  4224af:	call   0xf92fcc0f
  4224b4:	jmp    0x422467
  4224b6:	psubsw mm2,QWORD PTR [edx]
  4224b9:	jmp    DWORD PTR [ecx]
  4224bb:	out    dx,eax
  4224bc:	push   esp
  4224bd:	inc    edi
  4224be:	retf   0x2543
  4224c1:	in     eax,0x82
  4224c3:	mov    ch,0x35
  4224c5:	int3   
  4224c6:	xchg   ebx,eax
  4224c7:	sahf   
  4224c8:	std    
  4224c9:	xchg   edi,eax
  4224ca:	scas   eax,DWORD PTR es:[edi]
  4224cb:	dec    ebp
  4224cc:	test   eax,0xcdc2ad7c
  4224d1:	pop    ss
  4224d2:	mov    esp,0x2c2d97aa
  4224d7:	(bad)  [ebx]
  4224d9:	xlat   BYTE PTR ds:[ebx]
  4224da:	add    esi,eax
  4224dc:	jns    0x422486
  4224de:	sub    al,dl
  4224e0:	jg     0x422497
  4224e2:	push   ebp
  4224e3:	sahf   
  4224e4:	(bad)  
  4224e5:	fild   QWORD PTR [ecx-0x80]
  4224e8:	fistp  WORD PTR [esi-0xb054e69]
  4224ee:	cmp    DWORD PTR [edx],esi
  4224f0:	out    0x3a,al
  4224f2:	xchg   esi,eax
  4224f3:	xchg   ebp,esp
  4224f5:	mov    ds:0x3709f3a6,al
  4224fa:	outs   dx,BYTE PTR ds:[esi]
  4224fb:	sbb    al,0xd8
  4224fd:	das    
  4224fe:	pop    ds
  4224ff:	imul   esp,ecx,0xffffff91
  422502:	ja     0x42250f
  422504:	sbb    eax,0xdb41f008
  422509:	sbb    DWORD PTR [eax-0x377647ae],0xfffffffc
  422510:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422511:	inc    esp
  422512:	push   ebp
  422513:	cmp    al,0xda
  422515:	out    0x12,al
  422517:	push   ds
  422518:	lds    esp,FWORD PTR [edx-0x16]
  42251b:	dec    ebx
  42251c:	js     0x4224a6
  42251e:	mov    edi,0xff9e1eee
  422523:	cmp    dl,0xfb
  422526:	cmp    dl,BYTE PTR [ebp-0x3d]
  422529:	mov    ebp,0x2510e1ba
  42252e:	test   eax,0x66ef6ec6
  422533:	jnp    0x4224c6
  422535:	xor    eax,0xea91152e
  42253a:	test   edx,esi
  42253c:	stos   DWORD PTR es:[edi],eax
  42253d:	outs   dx,BYTE PTR ds:[esi]
  42253e:	les    esp,FWORD PTR [ebx+0x4b]
  422541:	aas    
  422542:	pop    ecx
  422543:	aam    0x65
  422545:	fmul   st(5),st
  422547:	xchg   esp,eax
  422548:	cdq    
  422549:	jmp    0x9319b605
  42254e:	dec    esi
  42254f:	xchg   ebx,eax
  422550:	xlat   BYTE PTR ds:[ebx]
  422551:	div    BYTE PTR [edi]
  422553:	push   edi
  422554:	adc    BYTE PTR [ebx],dh
  422556:	inc    ecx
  422557:	pop    eax
  422558:	dec    edx
  422559:	add    edx,DWORD PTR [edi-0x77]
  42255c:	sbb    eax,DWORD PTR [edi+0x368ce928]
  422562:	bound  edx,QWORD PTR [edi+0x6772c529]
  422568:	clc    
  422569:	sbb    al,0x10
  42256b:	ins    DWORD PTR es:[edi],dx
  42256c:	popa   
  42256d:	and    edx,DWORD PTR [esi+0x90d9dd]
  422573:	mov    esi,0xd26e3278
  422578:	dec    edx
  422579:	sbb    bl,dh
  42257b:	daa    
  42257c:	cli    
  42257d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42257e:	inc    eax
  42257f:	clc    
  422580:	push   fs
  422582:	add    DWORD PTR [edi-0x47879157],ebx
  422588:	fcom   DWORD PTR [ecx]
  42258a:	jae    0x42253b
  42258c:	jne    0x422536
  42258e:	hlt    
  42258f:	pop    esi
  422590:	cmp    DWORD PTR ds:0x2b3f4a9d,ecx
  422596:	fist   DWORD PTR [edx+0x3afec7d0]
  42259c:	xchg   ebx,eax
  42259d:	in     al,0x89
  42259f:	sbb    esi,esp
  4225a1:	into   
  4225a2:	scas   eax,DWORD PTR es:[edi]
  4225a3:	jmp    DWORD PTR [ebp-0x72]
  4225a6:	popa   
  4225a7:	jne    0x4225ca
  4225a9:	mov    edi,0x9712ec5a
  4225ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225af:	or     eax,0xfc47abf4
  4225b4:	(bad)  
  4225b5:	int    0xcc
  4225b7:	out    0x1a,al
  4225b9:	push   ebp
  4225ba:	(bad)  
  4225bb:	or     al,0xd6
  4225bd:	add    BYTE PTR [eax],al
  4225bf:	add    BYTE PTR [eax],al
  4225c1:	add    dl,cl
  4225c3:	adc    al,0x69
  4225c5:	dec    ecx
  4225c6:	(bad)  
  4225c7:	jge    0x4225b3
  4225c9:	xchg   edi,eax
  4225ca:	outs   dx,DWORD PTR ds:[esi]
  4225cb:	jge    0x422555
  4225cd:	call   0x9f64:0x2f72c2c6
  4225d4:	add    DWORD PTR [eax],eax
  4225d6:	repz add al,0x0
  4225d9:	add    BYTE PTR [esi-0x2f],al
  4225dc:	cmp    eax,DWORD PTR [edi-0x3e]
  4225df:	dec    edi
  4225e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225e1:	inc    ebp
  4225e2:	btr    DWORD PTR [edx+eax*1-0x367083dd],esi
  4225ea:	imul   edx,DWORD PTR cs:[ecx+ecx*8-0x6da3a356],0x76
  4225f3:	adc    edi,esp
  4225f5:	fldcw  WORD PTR [eax-0x627aae9b]
  4225fb:	jae    0x422651
  4225fd:	das    
  4225fe:	sbb    al,0xfb
  422600:	adc    eax,0xb968c75f
  422605:	test   DWORD PTR [edi],0x3893baf3
  42260b:	mov    ecx,0x2f7bc583
  422610:	sahf   
  422611:	jnp    0x42266e
  422613:	loopne 0x4225ce
  422615:	mov    ebx,0x32544baf
  42261a:	lods   eax,DWORD PTR ds:[esi]
  42261b:	test   al,0x4b
  42261d:	icebp  
  42261e:	mov    eax,ds:0xadc7bb09
  422623:	js     0x4225f9
  422625:	mov    ecx,0x688d3960
  42262a:	loop   0x42264c
  42262c:	icebp  
  42262d:	aad    0x59
  42262f:	test   DWORD PTR [edi+0x4f],0x13f1e5c2
  422636:	cld    
  422637:	jmp    0xcb93:0x8d885ae3
  42263e:	outs   dx,BYTE PTR ds:[esi]
  42263f:	add    al,0x93
  422641:	dec    ecx
  422642:	and    dh,BYTE PTR [esp+eax*2-0x6c]
  422646:	in     al,0xa8
  422648:	pop    edx
  422649:	hlt    
  42264a:	jg     0x42260d
  42264c:	adc    ebx,eax
  42264e:	bound  edx,QWORD PTR [esi-0x55]
  422651:	loop   0x422634
  422653:	nop
  422654:	ret    
  422655:	aas    
  422656:	mov    esp,0x8b937b4d
  42265b:	push   cs
  42265c:	test   eax,0x158648ab
  422661:	mov    bh,0xf
  422663:	mov    edi,0x203f4571
  422668:	push   ecx
  422669:	jns    0x422647
  42266b:	aaa    
  42266c:	ja     0x422630
  42266e:	scas   eax,DWORD PTR es:[edi]
  42266f:	push   esi
  422670:	and    esp,0x8d2aedfc
  422676:	add    eax,0xf9dbaa96
  42267b:	xchg   esi,eax
  42267c:	ins    DWORD PTR es:[edi],dx
  42267d:	push   ebx
  42267e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42267f:	dec    edx
  422680:	es out dx,eax
  422682:	jg     0x42267f
  422684:	les    ebx,FWORD PTR [esi-0x5394228b]
  42268a:	pop    edx
  42268b:	pop    ecx
  42268c:	xor    ebx,ecx
  42268e:	fsubr  QWORD PTR [ecx+edx*1+0x60]
  422692:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422693:	mov    ds:0xb940c03,eax
  422698:	push   esi
  422699:	xchg   DWORD PTR [edi-0x5a],edi
  42269c:	fst    QWORD PTR [ebp+0x3b]
  42269f:	adc    eax,0x3ac1ea7e
  4226a4:	pop    edi
  4226a5:	aad    0x4a
  4226a7:	cli    
  4226a8:	or     esi,DWORD PTR fs:[edi+0x1816f375]
  4226af:	sub    al,0xd9
  4226b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226b2:	dec    esp
  4226b3:	cmp    DWORD PTR ds:0x92208428,0xbf153fc0
  4226bd:	out    0xfd,al
  4226bf:	jp     0x4226cc
  4226c1:	sbb    ah,al
  4226c3:	ret    
  4226c4:	pusha  
  4226c5:	xlat   BYTE PTR ds:[ebx]
  4226c6:	jp     0x422724
  4226c8:	push   esi
  4226c9:	and    al,0xd0
  4226cb:	(bad)  
  4226cc:	xor    BYTE PTR [edi],bl
  4226ce:	idiv   BYTE PTR [edx-0x46]
  4226d1:	jmp    0x42274f
  4226d3:	enter  0xfca1,0xe2
  4226d7:	cmp    cl,cl
  4226d9:	lds    ebp,FWORD PTR [ecx-0x3]
  4226dc:	xor    cl,BYTE PTR [ecx]
  4226de:	mov    ds:0xa1b4a4e5,eax
  4226e3:	les    ebx,FWORD PTR [ecx+edi*4-0x23f50b18]
  4226ea:	mov    eax,0x7282bf94
  4226ef:	mov    esi,0xa6b8647
  4226f4:	sub    bl,bh
  4226f6:	in     eax,dx
  4226f7:	(bad)  
  4226f8:	dec    BYTE PTR [ebx+edx*8-0x53]
  4226fc:	jg     0x4226ba
  4226fe:	sub    DWORD PTR ds:0x932d06cf,edx
  422704:	jbe    0x422704
  422706:	clc    
  422707:	ins    BYTE PTR es:[edi],dx
  422708:	lea    ecx,[esi]
  42270a:	dec    edx
  42270b:	adc    esi,DWORD PTR [ebp-0x26ce428b]
  422711:	shl    DWORD PTR [esi+0x6b6d855d],cl
  422717:	xor    al,0xc7
  422719:	lahf   
  42271a:	xor    al,0x66
  42271c:	push   eax
  42271d:	xchg   esp,eax
  42271e:	pop    edi
  42271f:	push   edi
  422720:	cmp    esp,DWORD PTR [edx+0x2241cf89]
  422726:	(bad)  
  422728:	outs   dx,BYTE PTR ds:[esi]
  422729:	mov    edx,0x93965027
  42272e:	push   esp
  42272f:	sbb    bh,cl
  422731:	inc    ebx
  422732:	ja     0x4226e5
  422734:	xchg   edx,eax
  422735:	adc    ebx,DWORD PTR [esi+0xf2fad98]
  42273b:	ins    BYTE PTR es:[edi],dx
  42273c:	mov    eax,0xb87cf6a6
  422741:	pop    ds
  422742:	or     esp,DWORD PTR [edi+ecx*8+0x1e]
  422746:	push   ecx
  422747:	mov    edx,0x272c8780
  42274c:	xchg   esp,eax
  42274d:	inc    edi
  42274e:	popa   
  42274f:	js     0x4227a4
  422751:	xor    cl,BYTE PTR [edx]
  422753:	out    0x88,al
  422755:	aaa    
  422756:	xlat   BYTE PTR ds:[ebx]
  422757:	in     eax,0xb2
  422759:	mov    cl,0x5
  42275b:	mov    ah,0x37
  42275d:	lods   eax,DWORD PTR ds:[esi]
  42275e:	ja     0x422772
  422760:	(bad)  
  422761:	ins    BYTE PTR es:[edi],dx
  422762:	and    eax,0xe0fce3d9
  422767:	mov    eax,0xff4756b2
  42276c:	adc    BYTE PTR [ecx+0x1f045c06],cl
  422772:	(bad)  
  422773:	push   esp
  422774:	cdq    
  422775:	shl    DWORD PTR [edi],0xf6
  422778:	jl     0x422724
  42277a:	sbb    BYTE PTR [ecx+ebp*8+0x11],ah
  42277e:	push   ds
  42277f:	push   edx
  422780:	mov    eax,ds:0xb98403d4
  422785:	test   BYTE PTR [ebp+0x68],al
  422788:	push   cs
  422789:	clc    
  42278a:	call   0x3a35:0x88602ecd
  422791:	or     DWORD PTR [ecx-0x6d],0x46
  422795:	dec    esi
  422796:	or     edx,esi
  422798:	lods   eax,DWORD PTR ds:[esi]
  422799:	shr    BYTE PTR [ebp-0x2d3c42aa],1
  42279f:	jge    0x422806
  4227a1:	mov    al,BYTE PTR [ecx-0x3d]
  4227a4:	pop    ebp
  4227a5:	pop    edi
  4227a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227a7:	sahf   
  4227a8:	lea    eax,[edi]
  4227aa:	inc    edx
  4227ab:	js     0x4227fb
  4227ad:	je     0x422800
  4227af:	shl    DWORD PTR [edi],1
  4227b1:	scas   eax,DWORD PTR es:[edi]
  4227b2:	or     esi,DWORD PTR [esi]
  4227b4:	adc    eax,0xd80e0894
  4227b9:	and    ebx,DWORD PTR ds:0x8023b888
  4227bf:	out    0x68,al
  4227c1:	mov    fs,esp
  4227c3:	adc    esp,0x20
  4227c6:	sbb    ch,BYTE PTR [ecx+0x7bd04354]
  4227cc:	cmp    al,0xa0
  4227ce:	loopne 0x422810
  4227d0:	add    DWORD PTR [edi-0x67],esp
  4227d3:	(bad)  
  4227d4:	rol    BYTE PTR [edx-0x3b],0x4a
  4227d8:	pop    edi
  4227d9:	xlat   BYTE PTR ds:[ebx]
  4227da:	mov    ds:0xa8371369,eax
  4227df:	mov    bh,0xde
  4227e1:	shr    BYTE PTR [esi-0x260f5cf2],1
  4227e7:	es add edx,edi
  4227ea:	aam    0xcd
  4227ec:	mov    BYTE PTR [esi],dh
  4227ee:	lea    eax,[edi-0xb5dadc9]
  4227f4:	adc    edi,DWORD PTR [ebx+0x2988d9b8]
  4227fa:	jb     0x42283a
  4227fc:	out    0xfe,al
  4227fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227ff:	(bad)  
  422800:	test   DWORD PTR ds:0xa8f1797a,0x88a0ba04
  42280a:	xchg   esp,eax
  42280b:	add    al,dh
  42280d:	aad    0x5f
  42280f:	mov    ah,0xe0
  422811:	shl    DWORD PTR [esi-0x26],1
  422814:	ror    edx,cl
  422816:	jl     0x42279e
  422818:	mov    dh,0x36
  42281a:	jge    0x4227f6
  42281c:	jmp    0xff2:0x64ec1fbe
  422823:	push   ebx
  422824:	std    
  422825:	sub    BYTE PTR [esi-0x2a3bec52],ch
  42282b:	mov    BYTE PTR [ecx+ebp*2],bl
  42282e:	adc    BYTE PTR [edx-0x881dc48],bh
  422834:	test   BYTE PTR [edi-0x7458384d],cl
  42283a:	jg     0x422882
  42283c:	fmul   QWORD PTR [edi-0x5ef278db]
  422842:	or     BYTE PTR [edi*2-0x34757567],dh
  422849:	sub    eax,esi
  42284b:	cmp    BYTE PTR [edx+0x2245a4a2],0xfb
  422852:	es pop edx
  422854:	ret    0x6e2f
  422857:	add    eax,DWORD PTR [edx]
  422859:	inc    ebx
  42285a:	mov    ah,0xb7
  42285c:	test   al,0x49
  42285e:	int    0x8f
  422860:	dec    eax
  422861:	ror    eax,0xef
  422864:	and    ch,dh
  422866:	xor    al,0xe0
  422868:	cmp    esp,DWORD PTR [esi+edi*2-0x489cbf43]
  42286f:	xor    DWORD PTR [esi-0x29e647b9],esi
  422875:	sub    DWORD PTR [ecx+0x3d24b85a],ecx
  42287b:	adc    eax,0xeac1bccd
  422880:	push   edi
  422881:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422882:	mov    DWORD PTR [edx+0x357a8204],ebx
  422888:	sub    BYTE PTR [esi-0x40e62b97],ah
  42288e:	scas   al,BYTE PTR es:[edi]
  42288f:	push   edx
  422890:	add    esp,DWORD PTR [esi-0x10d11327]
  422896:	aaa    
  422897:	iret   
  422898:	jecxz  0x4228f9
  42289a:	(bad)  
  42289b:	jge    0x42291a
  42289d:	mov    bl,0x8c
  42289f:	icebp  
  4228a0:	fcom   DWORD PTR [eax+0x40]
  4228a3:	(bad)  
  4228a5:	jns    0x4228d3
  4228a7:	loope  0x42290d
  4228a9:	cs loop 0x422837
  4228ac:	or     ah,dh
  4228ae:	out    0xe6,eax
  4228b0:	or     BYTE PTR [esi+0x74],0x1
  4228b4:	inc    edx
  4228b5:	inc    esi
  4228b6:	and    eax,0xd4ce306
  4228bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228bc:	pop    esp
  4228bd:	inc    ebx
  4228be:	repnz arpl WORD PTR ds:0x96bf6115,dx
  4228c5:	std    
  4228c6:	out    0x12,eax
  4228c8:	pop    ecx
  4228c9:	ds aad 0x1d
  4228cc:	sahf   
  4228cd:	jmp    0x18dd416d
  4228d2:	inc    ebp
  4228d3:	sbb    ch,bl
  4228d5:	dec    ecx
  4228d6:	or     BYTE PTR [ebx-0x6bb86c52],dh
  4228dc:	xor    dh,BYTE PTR [eax]
  4228de:	into   
  4228df:	dec    ebp
  4228e0:	jb     0x422879
  4228e2:	inc    esp
  4228e3:	jne    0x422927
  4228e5:	cwde   
  4228e6:	inc    edi
  4228e7:	jnp    0x422889
  4228e9:	mov    al,ds:0x2ddaee40
  4228ee:	hlt    
  4228ef:	mov    edi,0x933cd778
  4228f4:	test   al,0xb5
  4228f6:	nop
  4228f7:	jge    0x4228ce
  4228f9:	xchg   ebx,eax
  4228fa:	jmp    0x9b92:0x49890cd2
  422901:	lods   eax,DWORD PTR ds:[esi]
  422902:	adc    al,0xf5
  422904:	or     bl,BYTE PTR [esi+0x70cf2f13]
  42290a:	mov    ebp,0xb4975f48
  42290f:	and    eax,0xd834c333
  422914:	add    ebx,ecx
  422916:	mov    ds:0xade8bbe8,al
  42291b:	mov    eax,0xf2f86e61
  422920:	push   esi
  422921:	into   
  422922:	cmp    ch,BYTE PTR [ecx+0x98650f3]
  422928:	ins    BYTE PTR es:[edi],dx
  422929:	loop   0x4228b0
  42292b:	cld    
  42292c:	pop    ecx
  42292d:	adc    al,0x94
  42292f:	dec    ebp
  422930:	mov    ecx,0x15b11cac
  422935:	loope  0x4229a1
  422937:	(bad)  
  422938:	jecxz  0x422974
  42293a:	fstp   TBYTE PTR [ebx]
  42293c:	leave  
  42293d:	pusha  
  42293e:	push   ds
  42293f:	adc    BYTE PTR ds:0x7818c44d,al
  422945:	iret   
  422946:	outs   dx,DWORD PTR ds:[esi]
  422947:	xor    DWORD PTR [ecx-0x52d1ca72],esp
  42294d:	lods   al,BYTE PTR ds:[esi]
  42294e:	std    
  42294f:	clc    
  422950:	and    eax,0xb4068d6a
  422955:	int    0x97
  422957:	push   ds
  422958:	or     DWORD PTR [ebx+0x1b05a7d4],esp
  42295e:	rcl    eax,cl
  422960:	test   eax,0x5ec268cc
  422965:	jp     0x422956
  422967:	jge    0x422932
  422969:	out    0x7,al
  42296b:	test   al,0x51
  42296d:	push   0x23
  42296f:	inc    edi
  422970:	fs inc edx
  422972:	jle    0x4229e1
  422974:	inc    eax
  422975:	adc    DWORD PTR [edi+0x5d],0x70
  422979:	rcl    BYTE PTR [ecx-0x22],0x33
  42297d:	jne    0x422960
  42297f:	inc    ebx
  422980:	adc    eax,0xf60e7c6a
  422985:	outs   dx,DWORD PTR ds:[esi]
  422986:	in     al,dx
  422987:	pop    ecx
  422988:	arpl   WORD PTR [esi],bx
  42298a:	jb     0x42291b
  42298c:	es pop ecx
  42298e:	lahf   
  42298f:	stos   BYTE PTR es:[edi],al
  422990:	and    al,0xa6
  422992:	daa    
  422993:	mov    ds:0x2ee9163d,al
  422998:	mov    dh,0xf1
  42299a:	or     al,0xaf
  42299c:	jecxz  0x422954
  42299e:	cwde   
  42299f:	frstpm(287 only) 
  4229a1:	stos   BYTE PTR es:[edi],al
  4229a2:	push   es
  4229a3:	mov    ?,eax
  4229a5:	pusha  
  4229a6:	fimul  DWORD PTR [edx]
  4229a8:	test   BYTE PTR [eax-0x34],cl
  4229ab:	push   ss
  4229ac:	add    ah,BYTE PTR ss:[ecx]
  4229af:	pop    ss
  4229b0:	fist   WORD PTR [eax]
  4229b2:	mov    eax,ds:0x2fbd70f3
  4229b7:	gs mov ch,0xac
  4229ba:	rcr    BYTE PTR [edx+0x5559db8f],cl
  4229c0:	xchg   ebp,eax
  4229c1:	pop    ds
  4229c2:	and    DWORD PTR [ecx+0x2c112d6b],edi
  4229c8:	loope  0x4229b6
  4229ca:	pop    ecx
  4229cb:	mov    WORD PTR [esi-0xe],cs
  4229ce:	pop    es
  4229cf:	pop    edi
  4229d0:	dec    edi
  4229d1:	xchg   esi,eax
  4229d2:	jb     0x4229a0
  4229d4:	sub    edi,DWORD PTR [eax+ebx*2]
  4229d7:	xchg   esi,eax
  4229d8:	(bad)  
  4229d9:	or     BYTE PTR [ecx+0x68],dl
  4229dc:	xchg   ebp,eax
  4229dd:	mov    al,0x24
  4229df:	test   al,0x4
  4229e1:	sub    edi,DWORD PTR [edi+ebx*2-0x20878a4b]
  4229e8:	pop    ebp
  4229e9:	xor    ah,BYTE PTR [edi]
  4229eb:	call   0x73e2:0x26611363
  4229f2:	mov    ebp,0x9b77db8a
  4229f7:	jmp    0xa434:0x15df5d25
  4229fe:	jecxz  0x4229e6
  422a00:	das    
  422a01:	xchg   edi,eax
  422a02:	mov    DWORD PTR [ecx+0x37],ecx
  422a05:	aaa    
  422a06:	push   ss
  422a07:	add    eax,0x42ee7b74
  422a0c:	xchg   cl,ch
  422a0e:	and    BYTE PTR [ebx+0x4fd9ef94],bh
  422a14:	rcl    DWORD PTR [ebx-0x7f0af860],1
  422a1a:	push   ebp
  422a1b:	adc    DWORD PTR [edi+0x36033428],esi
  422a21:	lea    esp,[ebp+0x6e5bdf16]
  422a27:	sbb    bl,BYTE PTR [ecx-0x4c]
  422a2a:	aam    0x10
  422a2c:	pop    ecx
  422a2d:	out    0xd4,eax
  422a2f:	push   0x12905117
  422a34:	or     DWORD PTR [eax-0x1e],ebx
  422a37:	or     esi,DWORD PTR [eax-0x43c50b45]
  422a3d:	pushf  
  422a3e:	scas   al,BYTE PTR es:[edi]
  422a3f:	nop
  422a40:	mov    al,ds:0x6d34f9e0
  422a45:	stc    
  422a46:	cmp    al,0x1a
  422a48:	ret    0x13b8
  422a4b:	test   BYTE PTR [ebx],ah
  422a4d:	inc    esi
  422a4e:	fcom   QWORD PTR [edi]
  422a50:	add    al,0x67
  422a52:	mov    esi,0x2e58cb3
  422a57:	inc    ebp
  422a58:	jb     0x422a3a
  422a5a:	js     0x422ab0
  422a5c:	add    al,bl
  422a5e:	hlt    
  422a5f:	mov    esi,0xa9c68007
  422a64:	or     DWORD PTR [edx-0x12],0xffffffc9
  422a68:	call   0xa6d1:0x198ab9f7
  422a6f:	mov    ?,WORD PTR [ecx+0x6ec569b0]
  422a75:	or     BYTE PTR [edi],dl
  422a77:	fisubr WORD PTR [ebx+0x78]
  422a7a:	(bad)  
  422a7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a7c:	mov    eax,ds:0x20512be1
  422a81:	add    eax,0xf0822fff
  422a86:	pushf  
  422a87:	xchg   BYTE PTR [ebx+0x1d17c5f3],dl
  422a8d:	aas    
  422a8e:	xchg   edi,eax
  422a8f:	into   
  422a90:	cs ret 
  422a92:	sti    
  422a93:	ss cdq 
  422a95:	inc    ebp
  422a96:	pop    esp
  422a97:	adc    ecx,DWORD PTR [ebx+0x24e08a0c]
  422a9d:	pop    eax
  422a9e:	push   ds
  422a9f:	pop    ecx
  422aa0:	retf   0xa26d
  422aa3:	(bad)
  422aa6:	mov    bh,0x0
  422aa8:	pop    eax
  422aa9:	mov    ch,BYTE PTR [esi+0x7f]
  422aac:	mov    al,ds:0x382eb767
  422ab1:	in     al,0x23
  422ab3:	ficomp WORD PTR [edx]
  422ab5:	rcr    DWORD PTR [edi+0x23e055c7],cl
  422abb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422abc:	aad    0x7f
  422abe:	push   0xffffffef
  422ac0:	test   eax,0x164b68d6
  422ac5:	in     eax,dx
  422ac6:	test   BYTE PTR [ebx+0x3038c57f],cl
  422acc:	jno    0x422ace
  422ace:	add    BYTE PTR [eax],al
  422ad0:	add    BYTE PTR [eax],al
  422ad2:	(bad)  
  422ad3:	xlat   BYTE PTR ds:[ebx]
  422ad4:	hlt    
  422ad5:	push   ebp
  422ad7:	jmp    FWORD PTR [ebx-0x21]
  422ada:	sub    al,0x7c
  422adc:	cmp    BYTE PTR [edx-0x5499483a],bh
  422ae2:	push   edi
  422ae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ae4:	add    DWORD PTR [eax],eax
  422ae6:	repz add al,0x0
  422ae9:	add    BYTE PTR [ebp-0x66],ch
  422aec:	mov    bl,0x24
  422aee:	fld    DWORD PTR [edx+0x2d]
  422af1:	cmp    ah,BYTE PTR [esi-0x29]
  422af4:	mov    edi,DWORD PTR [ebx-0x4c32f71b]
  422afa:	stc    
  422afb:	loope  0x422af0
  422afd:	popa   
  422afe:	loop   0x422ad5
  422b00:	cld    
  422b01:	punpckhdq xmm0,XMMWORD PTR es:[eax-0x32e20ca2]
  422b0a:	addr16 jl 0x422ad1
  422b0d:	dec    edi
  422b0e:	std    
  422b0f:	out    dx,eax
  422b10:	xchg   ecx,eax
  422b11:	pop    ss
  422b12:	cwde   
  422b13:	adc    esi,DWORD PTR [ebx-0x42]
  422b16:	add    eax,0x51ae6978
  422b1b:	pop    edi
  422b1c:	cld    
  422b1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b1e:	inc    edx
  422b1f:	popf   
  422b20:	xchg   esi,eax
  422b21:	mov    esp,DWORD PTR [esi+0x7b]
  422b24:	in     eax,0x71
  422b26:	adc    eax,DWORD PTR [esi+0x28]
  422b29:	xor    al,0x52
  422b2b:	xor    eax,0xdd7c42eb
  422b30:	test   al,0x41
  422b32:	pop    edi
  422b33:	test   eax,0x698537c
  422b38:	push   ebx
  422b39:	dec    eax
  422b3a:	add    esi,ecx
  422b3c:	sub    eax,0x4723b9d9
  422b41:	loop   0x422b6b
  422b43:	and    eax,0x5e4852fd
  422b48:	js     0x422adf
  422b4a:	mov    ecx,0x491d1661
  422b4f:	ror    ebp,cl
  422b51:	pop    ebp
  422b52:	mov    ebp,0xadd6da19
  422b57:	mov    ds:0xb300916f,eax
  422b5c:	pop    es
  422b5d:	outs   dx,BYTE PTR ds:[esi]
  422b5e:	pop    ecx
  422b5f:	data16 cmp BYTE PTR [eax-0x43],bl
  422b63:	and    cl,BYTE PTR [ebx-0x16]
  422b66:	aad    0x2b
  422b68:	mov    ds:0x7e3241d2,al
  422b6d:	pop    ebx
  422b6e:	loope  0x422be6
  422b70:	pop    ebx
  422b71:	mov    ecx,0xc52319b7
  422b76:	mov    bh,0xf
  422b78:	or     edx,DWORD PTR [esi+0x4f]
  422b7b:	sti    
  422b7c:	jg     0x422b49
  422b7e:	and    ecx,ebp
  422b80:	jge    0x422b73
  422b82:	test   cl,dh
  422b84:	add    bl,BYTE PTR [eax+0x5d7edf73]
  422b8a:	das    
  422b8b:	mov    ds:0xae887d03,eax
  422b90:	mov    ds:0x6c740250,al
  422b95:	sar    DWORD PTR [edi],cl
  422b97:	aam    0xca
  422b99:	dec    edx
  422b9a:	and    ebp,DWORD PTR [edx+0x23]
  422b9d:	pop    eax
  422b9e:	push   edx
  422b9f:	(bad)  
  422ba1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ba2:	xlat   BYTE PTR ds:[ebx]
  422ba3:	ja     0x422b95
  422ba5:	push   edx
  422ba6:	mov    al,ds:0xdd8d420d
  422bab:	dec    DWORD PTR [ecx+eiz*2-0x2e]
  422baf:	jmp    0x422be4
  422bb1:	xor    dh,BYTE PTR [edi+0x29]
  422bb4:	out    0x11,al
  422bb6:	cmp    ah,BYTE PTR [edi-0x1befffaa]
  422bbc:	test   DWORD PTR [esi+0x7],eax
  422bbf:	stos   DWORD PTR es:[edi],eax
  422bc0:	or     dh,cl
  422bc2:	in     eax,dx
  422bc3:	pusha  
  422bc4:	popa   
  422bc5:	hlt    
  422bc6:	imul   ebx,DWORD PTR [ebx],0xc6ab310d
  422bcc:	push   esp
  422bcd:	repz jle 0x422b65
  422bd0:	fldenv [ebp+0x77]
  422bd3:	mov    esp,0x83dfd08
  422bd8:	jmp    0xfdf8:0x1d251265
  422bdf:	sbb    al,0xf2
  422be1:	daa    
  422be2:	lock xchg BYTE PTR [edi+0x745b52fc],bh
  422be9:	add    DWORD PTR [esi],ebx
  422beb:	add    al,0x6d
  422bed:	jo     0x422c67
  422bef:	ret    
  422bf0:	bound  eax,QWORD PTR [ecx+0x69]
  422bf3:	(bad)  
  422bf5:	adc    BYTE PTR [edi-0x6d86dfe0],bh
  422bfb:	adc    DWORD PTR [edi-0x1d],edx
  422bfe:	cdq    
  422bff:	jge    0x422bb5
  422c01:	out    0x8c,al
  422c03:	lods   eax,DWORD PTR ds:[esi]
  422c04:	mov    ds:0x917449db,eax
  422c09:	sub    al,cl
  422c0b:	(bad)  
  422c0c:	xor    al,0xfc
  422c0e:	and    al,0x70
  422c10:	cmp    DWORD PTR [esi+0x2272f802],edx
  422c16:	jo     0x422b9c
  422c18:	mov    al,ds:0x2c3d4717
  422c1d:	xchg   edi,eax
  422c1e:	rol    DWORD PTR [esi-0x4cc7d8f4],1
  422c24:	stc    
  422c25:	jge    0x422c91
  422c27:	jns    0x422c8a
  422c29:	lahf   
  422c2a:	dec    ebx
  422c2b:	out    0xff,eax
  422c2d:	or     eax,0x5154d2dc
  422c32:	rcr    BYTE PTR [ebx+0x65],1
  422c35:	aam    0x18
  422c37:	daa    
  422c38:	int3   
  422c39:	shl    dh,cl
  422c3b:	rcr    DWORD PTR [ebp+0xb],1
  422c3e:	cs shl dl,0xc2
  422c42:	xor    DWORD PTR [esi+eax*1-0x4e333ddb],esi
  422c49:	xchg   ebx,eax
  422c4a:	stc    
  422c4b:	imul   ebx,esp,0x1f
  422c4e:	pop    bx
  422c50:	dec    eax
  422c51:	icebp  
  422c52:	pslld  mm1,QWORD PTR [edx]
  422c55:	mov    esi,0xed70f020
  422c5a:	inc    eax
  422c5b:	mov    eax,DWORD PTR [ecx+eax*8+0x484fa6b3]
  422c62:	mov    ebx,0x817dbf63
  422c67:	and    ecx,DWORD PTR [ecx-0x39d77844]
  422c6d:	cmp    ah,BYTE PTR [esi-0x2c991def]
  422c73:	mov    esp,0xa0615d20
  422c78:	or     eax,0x94f34f35
  422c7d:	shl    DWORD PTR [ecx],0xf0
  422c80:	and    dl,cl
  422c82:	push   0x5b
  422c84:	adc    eax,0x6b02a6d2
  422c89:	adc    DWORD PTR [edi+0x6d2eafb1],esp
  422c8f:	mov    bl,0xe3
  422c91:	mov    edi,0xdc46432d
  422c96:	cmp    al,BYTE PTR [ecx]
  422c98:	push   esp
  422c99:	and    DWORD PTR [edx-0x5e],0xf9b1cc53
  422ca0:	push   cs
  422ca1:	mov    ebp,DWORD PTR [ebp+0x46]
  422ca4:	jne    0x422d23
  422ca6:	cmp    eax,0xa3598a09
  422cab:	retf   
  422cac:	ins    BYTE PTR es:[edi],dx
  422cad:	addr16 out dx,al
  422caf:	push   esi
  422cb0:	inc    edx
  422cb1:	xchg   edx,eax
  422cb2:	sbb    al,0xc2
  422cb4:	push   edi
  422cb5:	scas   eax,DWORD PTR es:[edi]
  422cb6:	int3   
  422cb7:	jl     0x422c63
  422cb9:	jg     0x422d25
  422cbb:	fisub  DWORD PTR [edi]
  422cbd:	xchg   ebx,eax
  422cbe:	(bad)  
  422cc0:	shr    DWORD PTR [ebx+0x6712f4dc],cl
  422cc6:	pop    ss
  422cc7:	test   al,0xa5
  422cc9:	push   cs
  422cca:	fild   DWORD PTR [ebx]
  422ccc:	mov    ds:0xb74c3217,eax
  422cd1:	mov    ah,0x66
  422cd3:	pop    es
  422cd4:	xor    BYTE PTR [eax],bh
  422cd6:	mov    esi,0x2b294783
  422cdb:	shl    dh,cl
  422cdd:	mov    al,ss:0x2d71940e
  422ce3:	adc    bl,BYTE PTR [edx+eax*4-0x39]
  422ce7:	daa    
  422ce8:	mov    ch,0xc2
  422cea:	push   edx
  422ceb:	mov    ah,0x3c
  422ced:	xchg   ecx,eax
  422cee:	data16 lock out dx,al
  422cf1:	cmp    cl,BYTE PTR [edi]
  422cf3:	jns    0x422d06
  422cf5:	cld    
  422cf6:	fwait
  422cf7:	shl    DWORD PTR [edi-0x68],1
  422cfa:	or     eax,0xd215535
  422cff:	sbb    DWORD PTR [eax],esi
  422d01:	inc    esp
  422d02:	or     al,0xc1
  422d04:	or     al,0x64
  422d06:	dec    DWORD PTR [esi-0x7a64d7b3]
  422d0c:	shl    BYTE PTR [esi-0x28],0x1f
  422d10:	repz ret 
  422d12:	ins    DWORD PTR es:[edi],dx
  422d13:	add    al,0x7f
  422d15:	mov    ebx,0x44abec9f
  422d1a:	popa   
  422d1b:	add    esp,DWORD PTR [esi+0x77]
  422d1e:	xchg   ebx,eax
  422d1f:	outs   dx,DWORD PTR ds:[esi]
  422d20:	das    
  422d21:	in     eax,dx
  422d22:	stos   DWORD PTR es:[edi],eax
  422d23:	adc    DWORD PTR ds:0x15f12552,eax
  422d29:	ret    
  422d2a:	cld    
  422d2b:	imul   esi,edx,0x6abd337d
  422d31:	add    DWORD PTR [ebx],eax
  422d33:	sbb    al,0x5d
  422d35:	pushf  
  422d36:	mov    DWORD PTR [ecx],edi
  422d38:	retf   
  422d39:	ja     0x422d79
  422d3b:	into   
  422d3c:	out    dx,eax
  422d3d:	sbb    DWORD PTR [esi],ecx
  422d3f:	mov    dh,0x8e
  422d41:	sbb    DWORD PTR [ebx-0x79],eax
  422d44:	mov    dl,0xdc
  422d46:	jecxz  0x422d16
  422d48:	leave  
  422d49:	imul   ebx,ebx,0xffffffb7
  422d4c:	shl    BYTE PTR [esi-0x40],1
  422d4f:	push   es
  422d50:	(bad)  
  422d51:	aam    0x56
  422d53:	lahf   
  422d54:	das    
  422d55:	lahf   
  422d56:	push   0xd09b67c2
  422d5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d5c:	pop    ebp
  422d5d:	sub    BYTE PTR [eax+0x2c],cl
  422d60:	jne    0x422cfd
  422d62:	xchg   edx,eax
  422d63:	cmp    al,0xde
  422d65:	std    
  422d66:	sub    ah,BYTE PTR [eax+0x6b81a113]
  422d6c:	xchg   ebx,eax
  422d6d:	adc    BYTE PTR [edi],ch
  422d6f:	push   es
  422d70:	jg     0x422dd5
  422d72:	push   ebx
  422d73:	add    edi,ecx
  422d75:	mov    eax,0x314156b
  422d7a:	(bad)  
  422d7b:	std    
  422d7c:	push   ss
  422d7d:	cdq    
  422d7e:	scas   al,BYTE PTR es:[edi]
  422d7f:	(bad)  
  422d80:	clc    
  422d81:	jecxz  0x422da0
  422d83:	gs xor al,0x6e
  422d86:	and    bh,0xe9
  422d89:	and    DWORD PTR [ebx],esi
  422d8b:	jmp    0xbea1a0e6
  422d90:	jnp    0x422d1e
  422d92:	pusha  
  422d93:	sub    DWORD PTR [edx-0x4e4ec674],eax
  422d99:	retf   0x6310
  422d9c:	mov    al,0x68
  422d9e:	in     al,0x1d
  422da0:	jmp    FWORD PTR [ebp+0x3a]
  422da3:	xchg   ebx,eax
  422da4:	ror    BYTE PTR [ecx+0x625777ff],0x4
  422dab:	xchg   edi,eax
  422dac:	fcomp  DWORD PTR [ecx-0x30]
  422daf:	cli    
  422db0:	add    BYTE PTR [eax],0x33
  422db3:	add    edi,DWORD PTR [ebx+0x54]
  422db6:	loopne 0x422e34
  422db8:	inc    edx
  422db9:	xchg   dh,bl
  422dbb:	pop    ebp
  422dbc:	out    0x36,eax
  422dbe:	sbb    eax,0x8addade2
  422dc3:	and    eax,0xf9280f18
  422dc8:	dec    ebp
  422dc9:	std    
  422dca:	push   ss
  422dcb:	loopne 0x422d61
  422dcd:	xchg   ecx,eax
  422dce:	or     ebp,DWORD PTR [edx+0x51]
  422dd1:	sbb    al,0x17
  422dd3:	aam    0x84
  422dd5:	into   
  422dd6:	dec    edi
  422dd7:	ins    DWORD PTR es:[edi],dx
  422dd8:	test   BYTE PTR [esi+0x656e09a],ah
  422dde:	mov    ecx,0xe7f87ef
  422de3:	lds    eax,FWORD PTR [esi]
  422de5:	les    esi,FWORD PTR [edi]
  422de7:	xor    DWORD PTR ds:0x9500e5e4,ebx
  422ded:	xchg   ebx,eax
  422dee:	cmc    
  422def:	xor    al,0x7d
  422df1:	cmp    al,0x2
  422df3:	xchg   BYTE PTR [ebp+0x6c],cl
  422df6:	imul   ebx,DWORD PTR [ecx+0x562ef94a],0xffffff8e
  422dfd:	xchg   ebx,eax
  422dfe:	xor    eax,0x37462ea
  422e03:	mov    esp,0x1f40bc7e
  422e08:	in     eax,0x23
  422e0a:	shl    DWORD PTR [edx],1
  422e0c:	mov    cl,0xed
  422e0e:	pop    eax
  422e0f:	inc    ebx
  422e10:	add    DWORD PTR [edx-0x1d9dc790],0xffffff8d
  422e17:	shl    bh,0x90
  422e1a:	sbb    DWORD PTR [ebx],ecx
  422e1c:	shl    DWORD PTR [ecx+0x70c4082f],0x9a
  422e23:	and    edx,0xffffff98
  422e26:	ja     0x422e13
  422e28:	jge    0x422dcb
  422e2a:	(bad)  [ecx+0x5c]
  422e2d:	jbe    0x422e3b
  422e2f:	dec    esi
  422e30:	pop    edx
  422e31:	or     edi,DWORD PTR [ebx]
  422e33:	or     bl,BYTE PTR [ecx+0x76]
  422e36:	bswap  esp
  422e38:	sub    cl,bl
  422e3a:	test   eax,0x52916e72
  422e3f:	fs popa 
  422e41:	mov    cs,WORD PTR [eax-0x5c75de30]
  422e47:	retf   
  422e48:	mov    esi,0x3d6e71cc
  422e4d:	(bad)  
  422e4e:	jle    0x422eb6
  422e50:	ins    DWORD PTR es:[edi],dx
  422e51:	pop    es
  422e52:	sti    
  422e53:	add    al,0xa9
  422e55:	push   ds
  422e56:	rol    BYTE PTR [ecx+0x5dd0532a],0x9c
  422e5d:	inc    eax
  422e5e:	dec    ebp
  422e5f:	in     eax,dx
  422e60:	loope  0x422e31
  422e62:	push   ds
  422e63:	call   0xfa01f46f
  422e68:	or     BYTE PTR [ecx+ebp*1],bl
  422e6b:	iret   
  422e6c:	lds    ebx,FWORD PTR [edi+0x4a36c6b4]
  422e72:	dec    edi
  422e73:	arpl   WORD PTR [ebx-0x1b],ax
  422e76:	not    bh
  422e78:	xor    BYTE PTR ds:0xf60d23a2,cl
  422e7e:	leave  
  422e7f:	xor    DWORD PTR [edx-0x6bc1b5d5],0x22
  422e86:	bound  edi,QWORD PTR [ebx+edx*4+0xa]
  422e8a:	push   es
  422e8b:	pmaxsw mm5,QWORD PTR [esi+edi*1+0x4f]
  422e90:	div    ah
  422e92:	xchg   al,ch
  422e94:	push   ss
  422e95:	cmp    cl,bh
  422e97:	xlat   BYTE PTR ds:[ebx]
  422e98:	xor    eax,eax
  422e9a:	adc    DWORD PTR [edx-0x3c],0x510f00b4
  422ea1:	and    edi,DWORD PTR [ebp-0x29fa1560]
  422ea7:	mov    ch,0x7d
  422ea9:	inc    edx
  422eaa:	mov    ah,BYTE PTR cs:[ecx+ecx*4+0xf7fa149]
  422eb2:	pop    ds
  422eb3:	inc    esi
  422eb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422eb5:	ror    BYTE PTR ds:0xe6c79254,cl
  422ebb:	xor    al,0x50
  422ebd:	dec    edx
  422ebe:	jg     0x422e51
  422ec0:	addr16 push esp
  422ec2:	adc    DWORD PTR [edx],0xffffffc8
  422ec5:	xor    bh,BYTE PTR [esp+esi*2]
  422ec8:	jns    0x422ebd
  422eca:	lahf   
  422ecb:	les    ecx,FWORD PTR [eax-0x38872e7d]
  422ed1:	fld    TBYTE PTR [eax+0x54]
  422ed4:	jns    0x422ec4
  422ed6:	inc    ecx
  422ed7:	mov    al,BYTE PTR [edi]
  422ed9:	fbld   TBYTE PTR [eax]
  422edb:	fcom   QWORD PTR [edi]
  422edd:	fsubr  QWORD PTR [ebx-0x46]
  422ee0:	adc    DWORD PTR [ebx],0xd2dd4e72
  422ee6:	sbb    ebp,esp
  422ee8:	adc    DWORD PTR [ebx],ecx
  422eea:	leave  
  422eeb:	or     al,0x33
  422eed:	sub    al,0x6f
  422eef:	sbb    DWORD PTR [edi+0x2413a796],0x68de8c2f
  422ef9:	push   esi
  422efa:	or     DWORD PTR [ebx+0x6a1b3c0d],edi
  422f00:	pop    esp
  422f01:	cmp    al,0x1
  422f03:	ds arpl cx,bp
  422f06:	mov    dl,0xbf
  422f08:	adc    al,BYTE PTR [edx-0x4ff81c12]
  422f0e:	mov    bl,0xed
  422f10:	and    al,0x1b
  422f12:	xchg   ebp,eax
  422f13:	and    DWORD PTR [ebx],eax
  422f15:	popf   
  422f16:	mov    eax,0xf15d36a5
  422f1b:	adc    al,BYTE PTR [eax]
  422f1d:	mov    ah,0xdd
  422f1f:	pop    ecx
  422f20:	and    al,0xca
  422f22:	cdq    
  422f23:	mov    WORD PTR [eax],?
  422f25:	pop    esp
  422f26:	push   esp
  422f27:	ret    
  422f28:	int3   
  422f29:	imul   ecx,DWORD PTR [edi+esi*8+0x43],0x529e9b05
  422f31:	inc    esp
  422f32:	icebp  
  422f33:	push   esp
  422f34:	lods   al,BYTE PTR ds:[esi]
  422f35:	lea    ecx,ds:0xcd5da491
  422f3b:	lods   eax,DWORD PTR ds:[esi]
  422f3c:	dec    edi
  422f3d:	lods   eax,DWORD PTR ds:[esi]
  422f3e:	jmp    0x6403:0xc38f4ddf
  422f45:	inc    ecx
  422f46:	sbb    edx,DWORD PTR [esi+0x62]
  422f49:	sbb    al,0x84
  422f4b:	jmp    0xe81c:0x2a4e07d4
  422f52:	xchg   edi,eax
  422f53:	sbb    DWORD PTR [ecx],edx
  422f55:	js     0x422ef4
  422f57:	push   eax
  422f58:	or     BYTE PTR [ebp-0x3c],ch
  422f5b:	and    al,0xea
  422f5d:	add    eax,0xf4cb25e1
  422f62:	rol    BYTE PTR [ecx],1
  422f64:	bound  edx,QWORD PTR [eax]
  422f66:	add    eax,edx
  422f68:	pop    ebp
  422f69:	or     dh,cl
  422f6b:	clc    
  422f6c:	xchg   esi,eax
  422f6d:	dec    eax
  422f6e:	arpl   WORD PTR [esi+0x5c4ad9f9],bp
  422f74:	adc    dh,ch
  422f76:	xor    BYTE PTR [edx],dh
  422f78:	cdq    
  422f79:	mov    esp,0xb4a00418
  422f7e:	aad    0xd6
  422f80:	fs (bad) 
  422f82:	enter  0xc87d,0xb6
  422f86:	rcl    DWORD PTR [esp+ecx*4],1
  422f89:	xor    al,0xaf
  422f8b:	das    
  422f8c:	stc    
  422f8d:	stos   BYTE PTR es:[edi],al
  422f8e:	stc    
  422f8f:	pop    ebx
  422f90:	ret    0x1acf
  422f93:	xchg   BYTE PTR [ecx-0x3c],al
  422f96:	or     al,0x9d
  422f98:	mov    bh,0x1b
  422f9a:	bound  ebx,QWORD PTR [ebp-0x21]
  422f9d:	fst    st(6)
  422f9f:	or     bl,BYTE PTR [edx-0x20228347]
  422fa5:	cdq    
  422fa6:	gs pop eax
  422fa8:	pop    ss
  422fa9:	adc    bl,BYTE PTR [edi-0x4caff391]
  422faf:	add    al,0x8b
  422fb1:	aam    0xf1
  422fb3:	loope  0x422f47
  422fb5:	mov    al,BYTE PTR [ecx+eiz*8-0x1b]
  422fb9:	inc    esi
  422fba:	pop    ss
  422fbb:	(bad)  
  422fbd:	fnsave [esi]
  422fbf:	test   DWORD PTR [edx],eax
  422fc1:	xchg   BYTE PTR [esi+ebx*2+0x4d],ch
  422fc5:	push   esi
  422fc6:	push   ebx
  422fc7:	in     eax,dx
  422fc8:	cmp    ebp,DWORD PTR [ebx-0x2cb54a0]
  422fce:	test   al,0x6b
  422fd0:	addr16 ja 0x42301f
  422fd3:	add    al,0x6
  422fd5:	jo     0x423031
  422fd7:	int    0xf6
  422fd9:	popa   
  422fda:	mov    dl,0xe5
  422fdc:	xor    BYTE PTR [eax],al
  422fde:	add    BYTE PTR [eax],al
  422fe0:	add    BYTE PTR [eax],al
  422fe2:	cvtdq2ps xmm0,XMMWORD PTR [esi+edx*1+0x5b9fdfd4]
  422fea:	dec    ebp
  422feb:	sar    ebx,cl
  422fed:	adc    edi,DWORD PTR [edi+0x4a321271]
  422ff3:	test   eax,0x4f30001
  422ff8:	add    BYTE PTR [eax],al
  422ffa:	push   edx
  422ffb:	mov    ebp,0x95494637
  423000:	test   DWORD PTR [ebx+0x51],edx
  423003:	rcr    dl,0x5
  423006:	out    dx,eax
  423007:	clc    
  423008:	(bad)  
  423009:	push   cs
  42300a:	and    DWORD PTR [edx+0x79],ebp
  42300d:	(bad)  
  42300e:	fcmovnu st,st(6)
  423010:	or     BYTE PTR [eax-0x677eea56],al
  423016:	push   0x967438cb
  42301b:	sub    BYTE PTR [eax+0x20],cl
  42301e:	push   esp
  42301f:	cmp    DWORD PTR [eax],eax
  423021:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423023:	mov    esi,0x5b6bd876
  423028:	or     BYTE PTR [esi],ah
  42302a:	lahf   
  42302b:	cmc    
  42302c:	aas    
  42302d:	jg     0x4230a7
  42302f:	lock cmc 
  423031:	sbb    BYTE PTR [ecx],al
  423033:	cmp    DWORD PTR gs:[edi-0x33b15ef8],0xfaca5f77
  42303e:	fisubr WORD PTR [ebp+eiz*1-0x4af6fd91]
  423045:	inc    eax
  423046:	lock ret 0x1fdd
  42304a:	lea    edi,[esi+ebx*1-0x53]
  42304e:	sbb    edx,DWORD PTR [esi]
  423050:	shl    BYTE PTR [eax+ebx*1-0x1d],1
  423054:	sub    eax,0xe1a8bdc
  423059:	adc    edi,DWORD PTR [ecx+0x4f]
  42305c:	aas    
  42305d:	sahf   
  42305e:	jl     0x4230bb
  423060:	fdivr  DWORD PTR [esi]
  423062:	outs   dx,DWORD PTR ds:[esi]
  423063:	sub    ch,cl
  423065:	mov    esp,0x88888d11
  42306a:	and    eax,0xb18d139b
  42306f:	mov    bl,0x4d
  423071:	rcr    DWORD PTR [edi-0x77cb216c],0x43
  423078:	jbe    0x423033
  42307a:	sub    eax,0x9286c229
  42307f:	push   ss
  423080:	retf   
  423081:	sti    
  423082:	int3   
  423083:	enter  0xf236,0x21
  423087:	mov    edx,0x228ff743
  42308c:	dec    ebp
  42308d:	mov    eax,ds:0xf801d8b4
  423092:	(bad)  
  423093:	hlt    
  423094:	xchg   esp,eax
  423095:	pop    ecx
  423096:	inc    esp
  423097:	pop    es
  423098:	inc    eax
  423099:	add    DWORD PTR [edx-0x15],esp
  42309c:	lods   al,BYTE PTR ds:[esi]
  42309d:	cmp    al,0x69
  42309f:	fld    TBYTE PTR [esi+edx*4+0x44992cb1]
  4230a6:	mov    ecx,0xfe0b42ba
  4230ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230ac:	mov    DWORD PTR [esi+0x72],ecx
  4230af:	fisub  DWORD PTR [edx+ebx*4+0x682ae05a]
  4230b7:	lahf   
  4230b8:	retf   
  4230b9:	mov    edx,0x665a5256
  4230be:	and    ebx,DWORD PTR [ecx]
  4230c0:	and    cl,BYTE PTR [esp+edi*1]
  4230c3:	mov    ebx,0x54f5df0
  4230c8:	pop    esp
  4230c9:	(bad)  
  4230ca:	cmp    eax,0x192950c5
  4230cf:	mov    DWORD PTR [ebx+ebp*2+0x50],esi
  4230d3:	mov    bh,0x74
  4230d5:	mov    esi,0x147e214
  4230da:	sub    BYTE PTR [ebp-0x40],ch
  4230dd:	dec    ax
  4230df:	add    eax,0x3af9b1d6
  4230e4:	shl    DWORD PTR [ebx+0x4],0x75
  4230e8:	xchg   ecx,eax
  4230e9:	pop    edx
  4230ea:	es dec esp
  4230ec:	xor    dl,BYTE PTR [ecx+0x2]
  4230ef:	dec    edi
  4230f0:	push   edi
  4230f1:	xchg   edx,eax
  4230f2:	popf   
  4230f3:	sbb    eax,0xa240c271
  4230f8:	jnp    0x42307c
  4230fa:	mov    dl,0xdd
  4230fc:	dec    ebx
  4230fd:	mul    DWORD PTR [edx]
  4230ff:	clc    
  423100:	sbb    DWORD PTR [edx+0x32726f80],eax
  423106:	jnp    0x4230d2
  423108:	jno    0x42313c
  42310a:	sub    al,0x1
  42310c:	je     0x423171
  42310e:	mov    bl,0x11
  423110:	out    dx,al
  423111:	dec    ebx
  423112:	cmp    esi,0xffffffc0
  423115:	loope  0x4230e0
  423117:	call   0xac6c:0x53fc7e2c
  42311e:	iret   
  42311f:	dec    edi
  423120:	popa   
  423121:	rcr    ch,1
  423123:	cmc    
  423124:	pop    eax
  423125:	call   0x4f05:0x69d44fa
  42312c:	push   esp
  42312d:	loopne 0x4230d2
  42312f:	xchg   edx,eax
  423130:	mov    eax,0x4ebe5ab1
  423135:	lods   eax,DWORD PTR ds:[esi]
  423136:	push   esp
  423137:	stos   BYTE PTR es:[edi],al
  423138:	dec    edx
  423139:	pusha  
  42313a:	(bad)  
  42313b:	mov    ebp,0x8fa0c942
  423140:	(bad)  
  423141:	test   eax,0xa966f1f2
  423146:	sub    esp,ebp
  423148:	xor    BYTE PTR [ebp+ebx*4-0xa],ch
  42314c:	pop    esi
  42314d:	jle    0x4231a7
  42314f:	adc    BYTE PTR [edi+edi*4],0x60
  423153:	popf   
  423154:	js     0x423101
  423156:	iret   
  423157:	dec    ebp
  423158:	push   ebp
  423159:	fadd   DWORD PTR [eax+0x20]
  42315c:	mov    DWORD PTR [edi+0x5437454a],ecx
  423162:	xchg   edi,eax
  423163:	das    
  423164:	sti    
  423165:	fiadd  WORD PTR [edi-0x56]
  423168:	daa    
  423169:	sub    BYTE PTR [edi+0x4ba6b468],0x1b
  423170:	add    BYTE PTR [ecx-0x2c],0xd6
  423174:	loop   0x423166
  423176:	inc    eax
  423177:	scas   eax,DWORD PTR es:[edi]
  423178:	dec    edx
  423179:	sub    DWORD PTR [eax-0x17],ebp
  42317c:	push   ss
  42317d:	mov    bh,0x2a
  42317f:	jmp    0x4231f6
  423181:	pusha  
  423182:	mov    bl,0xa4
  423184:	dec    ebp
  423185:	into   
  423186:	mov    cl,0x16
  423188:	push   edx
  423189:	jbe    0x423208
  42318b:	lahf   
  42318c:	cmp    eax,0xac636820
  423191:	out    dx,eax
  423192:	mov    dl,0x48
  423194:	mov    ch,0x9e
  423196:	loop   0x4231f9
  423198:	add    DWORD PTR [ecx+edi*2+0x48362b8],esi
  42319f:	mov    eax,ds:0x54ccd14e
  4231a4:	sti    
  4231a5:	leave  
  4231a6:	lock mov cs,WORD PTR [eax+eiz*1-0x37]
  4231ab:	shl    DWORD PTR [edx+eax*2-0x2ddd440c],0x22
  4231b3:	push   0xfffffff6
  4231b5:	dec    edx
  4231b6:	push   eax
  4231b7:	enter  0x73d,0xdd
  4231bb:	test   eax,0x4a3fa63
  4231c0:	adc    DWORD PTR [ecx+ebx*1-0x1],0xc
  4231c5:	jp     0x42315a
  4231c7:	jle    0x423205
  4231c9:	cmp    esi,DWORD PTR [edx+0x2a6e8ff8]
  4231cf:	sub    BYTE PTR [ecx-0x75569134],dl
  4231d5:	mov    ebp,0x62db78e
  4231da:	loopne 0x4231b5
  4231dc:	xchg   BYTE PTR [esi+0x3d],dl
  4231df:	or     ah,bh
  4231e1:	add    BYTE PTR cs:[esi],dl
  4231e4:	enter  0xd3f8,0xdd
  4231e8:	(bad)  
  4231ea:	dec    esp
  4231eb:	cli    
  4231ec:	lods   al,BYTE PTR ss:[esi]
  4231ee:	sbb    esp,edi
  4231f0:	jmp    0x423222
  4231f2:	std    
  4231f3:	mov    ch,BYTE PTR [ebx+eiz*8-0xeb64a02]
  4231fa:	pop    eax
  4231fb:	cdq    
  4231fc:	lock cmp eax,0x86e69503
  423202:	push   esi
  423203:	data16 js 0x423197
  423206:	jns    0x42320d
  423208:	and    dh,BYTE PTR [edi-0x4e65ee0b]
  42320e:	bound  edx,QWORD PTR [eax]
  423210:	and    BYTE PTR [edi+0x0],dl
  423213:	cmp    BYTE PTR [esi],dl
  423215:	and    eax,0xa7a7cf4
  42321a:	ror    BYTE PTR [ebp-0x56],cl
  42321d:	aad    0x41
  42321f:	push   edx
  423220:	adc    DWORD PTR [esi+0x11494857],edx
  423226:	mov    edi,0x3af6caef
  42322b:	xlat   BYTE PTR ds:[ebx]
  42322c:	mov    ?,esi
  42322e:	jnp    0x423271
  423230:	inc    ebp
  423231:	inc    edx
  423232:	std    
  423233:	xchg   ecx,eax
  423234:	rcr    BYTE PTR [edx+0x173421ef],1
  42323a:	add    edx,edx
  42323c:	sti    
  42323d:	out    dx,eax
  42323e:	shl    BYTE PTR [esi-0xd],cl
  423241:	sub    eax,0xca2e99fb
  423246:	popa   
  423247:	jg     0x423272
  423249:	loopne 0x42321d
  42324b:	jge    0x4232b3
  42324d:	hlt    
  42324e:	add    esp,DWORD PTR [eax-0x33]
  423251:	push   ss
  423252:	jl     0x423284
  423254:	daa    
  423255:	xchg   BYTE PTR [ebp+0x41a3a949],ah
  42325b:	mov    ecx,0xfe1cdca6
  423260:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423261:	sbb    al,0xaa
  423263:	(bad)  
  423264:	push   ebp
  423265:	push   ecx
  423266:	mov    ah,0xd0
  423268:	sub    eax,0xef7788fb
  42326d:	rcl    al,1
  42326f:	int3   
  423270:	xchg   edi,eax
  423271:	out    0xaf,eax
  423273:	stos   BYTE PTR es:[edi],al
  423274:	pop    ds
  423275:	idiv   DWORD PTR [edi]
  423277:	jmp    0x423210
  423279:	push   es
  42327a:	push   ecx
  42327b:	sub    ebx,DWORD PTR [edi]
  42327d:	sahf   
  42327e:	dec    ecx
  42327f:	jne    0x42321b
  423281:	push   ds
  423282:	pushf  
  423283:	jp     0x423284
  423285:	push   es
  423286:	mov    dh,0x61
  423288:	enter  0xe1b7,0xce
  42328c:	and    eax,0x8b2c70a4
  423291:	inc    eax
  423292:	sbb    DWORD PTR [edi],0x97e56336
  423298:	push   esp
  423299:	xchg   esp,eax
  42329a:	sti    
  42329b:	or     BYTE PTR [ebx+0x5dc6c97f],0x9f
  4232a2:	shl    DWORD PTR [esp+edi*2+0x7ba663f3],1
  4232a9:	int3   
  4232aa:	scas   eax,DWORD PTR es:[edi]
  4232ab:	shr    DWORD PTR ds:0x1b8b3b82,cl
  4232b1:	push   0xffffffaa
  4232b3:	call   0xa92b:0x8370c999
  4232ba:	ds inc esp
  4232bc:	imul   esi,ebx,0x7e604e1c
  4232c2:	jae    0x42328c
  4232c4:	iret   
  4232c5:	test   al,0x6a
  4232c7:	xchg   esp,eax
  4232c8:	and    BYTE PTR [eax-0x1fba2b1f],cl
  4232ce:	aas    
  4232cf:	jmp    0xed4188ff
  4232d4:	push   ss
  4232d5:	inc    edx
  4232d6:	stos   DWORD PTR es:[edi],eax
  4232d7:	add    BYTE PTR [edx-0x5215ecff],ah
  4232dd:	jecxz  0x42333b
  4232df:	loopne 0x4232ae
  4232e1:	mov    edx,0x928e2a11
  4232e6:	pop    ds
  4232e7:	jno    0x42331a
  4232e9:	rol    edx,cl
  4232eb:	inc    edi
  4232ec:	clc    
  4232ed:	mov    eax,ds:0x36e3238c
  4232f2:	icebp  
  4232f3:	cmp    dl,0xf4
  4232f6:	(bad)
  4232fa:	dec    edx
  4232fb:	mov    bl,0x89
  4232fd:	push   esi
  4232fe:	mov    dl,0x2a
  423300:	push   0x839a75c6
  423305:	xlat   BYTE PTR ds:[ebx]
  423306:	stos   BYTE PTR es:[edi],al
  423307:	(bad)  
  423308:	or     al,0x2d
  42330a:	retf   0x831f
  42330d:	adc    BYTE PTR [edx],bl
  42330f:	or     bl,dh
  423311:	mov    edx,0xd1812a4
  423316:	outs   dx,DWORD PTR ds:[esi]
  423317:	std    
  423318:	retf   0x3f8d
  42331b:	fcomp  QWORD PTR [ecx]
  42331d:	cmc    
  42331e:	sbb    ch,BYTE PTR [edi]
  423320:	retf   0xb3bf
  423323:	push   ebx
  423324:	das    
  423325:	test   al,0xf2
  423327:	imul   eax,DWORD PTR ds:0x2f0f09bf,0xffffffa3
  42332e:	rcr    BYTE PTR [esi-0x3d4b0eae],1
  423334:	dec    esp
  423335:	dec    ebp
  423336:	lods   eax,DWORD PTR ds:[esi]
  423337:	mov    ah,0x93
  423339:	gs hlt 
  42333b:	pusha  
  42333c:	shr    edi,0xea
  42333f:	in     al,0x26
  423341:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423342:	loopne 0x42331c
  423344:	add    eax,0x70bb0dfe
  423349:	jnp    0x4232dc
  42334b:	or     ebx,DWORD PTR [ecx-0x64]
  42334e:	das    
  42334f:	sbb    BYTE PTR cs:[edi],0x63
  423353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423354:	test   BYTE PTR [esi-0x5e3cc282],cl
  42335a:	push   esi
  42335b:	fcomp  DWORD PTR [edx]
  42335d:	in     al,dx
  42335e:	mov    es,WORD PTR es:[esi]
  423361:	sub    DWORD PTR [edx-0x2e],edi
  423364:	pop    eax
  423365:	pop    ebx
  423366:	call   ebp
  423368:	ins    BYTE PTR es:[edi],dx
  423369:	js     0x4233c1
  42336b:	mov    dh,0x5f
  42336d:	sahf   
  42336e:	xlat   BYTE PTR ds:[ebx]
  42336f:	add    al,0xb6
  423371:	pop    es
  423372:	and    al,0x63
  423374:	jge    0x4233d3
  423376:	call   0xa5be2c3d
  42337b:	adc    DWORD PTR [eax],edx
  42337d:	xchg   edx,eax
  42337e:	loopne 0x423344
  423380:	jbe    0x423371
  423382:	enter  0xc776,0x26
  423386:	leave  
  423387:	mov    edi,0x33ca3092
  42338c:	sbb    al,0x90
  42338e:	in     eax,dx
  42338f:	jl     0x423346
  423391:	xor    DWORD PTR [esi-0x40d06777],ecx
  423397:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423398:	out    dx,al
  423399:	int3   
  42339a:	inc    edx
  42339b:	in     eax,0xfa
  42339d:	out    0x46,al
  42339f:	or     bl,dl
  4233a1:	in     al,0x32
  4233a3:	cmp    bl,ah
  4233a5:	dec    ebp
  4233a6:	pushf  
  4233a7:	cdq    
  4233a8:	(bad)  
  4233a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233aa:	dec    ebp
  4233ab:	mov    esi,0x458efe7c
  4233b0:	adc    ch,BYTE PTR [edi-0x17]
  4233b3:	ror    DWORD PTR [ebx+0x2332d2],cl
  4233b9:	jno    0x4233a0
  4233bb:	xchg   ebx,eax
  4233bc:	jge    0x42337f
  4233be:	pop    es
  4233bf:	lods   al,BYTE PTR ds:[esi]
  4233c0:	mov    ecx,0x4f9bf4ab
  4233c5:	daa    
  4233c6:	jnp    0x423431
  4233c8:	xchg   ecx,eax
  4233c9:	inc    esi
  4233ca:	popa   
  4233cb:	dec    ebp
  4233cc:	add    al,0x7d
  4233ce:	jmp    0xd285:0x9af19703
  4233d5:	pop    ds
  4233d6:	out    dx,al
  4233d7:	jbe    0x423396
  4233d9:	and    ebx,ebp
  4233db:	fild   WORD PTR [edi]
  4233dd:	push   edx
  4233de:	dec    edi
  4233df:	mov    DWORD PTR [eax],edx
  4233e1:	adc    bl,cl
  4233e3:	mov    bl,0xeb
  4233e5:	aaa    
  4233e6:	add    eax,0x9e916aff
  4233eb:	add    al,0x7e
  4233ed:	ret    0xa3a8
  4233f0:	add    edi,DWORD PTR [edx]
  4233f2:	sbb    eax,0xab78e056
  4233f7:	adc    al,0x63
  4233f9:	or     bh,BYTE PTR [ebx-0x7c1de24b]
  4233ff:	jnp    0x4233d7
  423401:	xor    esp,DWORD PTR [esi]
  423403:	lods   eax,DWORD PTR ds:[esi]
  423404:	push   cs
  423405:	add    al,0xc1
  423407:	scas   al,BYTE PTR es:[edi]
  423408:	inc    eax
  423409:	add    BYTE PTR [ecx],dl
  42340b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42340c:	mov    cl,0xaa
  42340e:	mov    cs,WORD PTR [edi]
  423410:	adc    esp,DWORD PTR [eax-0x33238dcc]
  423416:	mov    edi,0xceec5112
  42341b:	push   esi
  42341c:	xchg   ebp,eax
  42341d:	imul   edi,DWORD PTR [ecx+0x5e],0xfa638bd3
  423424:	ins    BYTE PTR es:[edi],dx
  423425:	mov    esp,0xa6035c0b
  42342a:	mov    ecx,0xa16078e2
  42342f:	lahf   
  423430:	or     DWORD PTR [ecx-0x35a5f748],ebx
  423436:	stos   DWORD PTR es:[edi],eax
  423437:	add    BYTE PTR [ebx+0x769b5725],0x40
  42343e:	dec    ebp
  42343f:	ja     0x42344e
  423441:	inc    edi
  423442:	into   
  423443:	cmp    edx,DWORD PTR [edx+0x58b7d294]
  423449:	fdiv   QWORD PTR [edi-0x4a]
  42344c:	mov    bl,0x35
  42344e:	call   0xa8c59668
  423453:	jnp    0x4234cb
  423455:	sbb    eax,0x25992886
  42345a:	sub    esp,DWORD PTR [ebx+edx*4]
  42345d:	xchg   DWORD PTR [edi+0x69],ebp
  423460:	cwde   
  423461:	setge  BYTE PTR [ebx+0xa]
  423465:	cmp    dl,bh
  423467:	dec    eax
  423468:	int    0x2
  42346a:	je     0x423407
  42346c:	xchg   ebp,eax
  42346d:	adc    eax,0x63535a04
  423472:	push   edx
  423473:	xor    eax,0x28b3474e
  423478:	push   es
  423479:	sub    ecx,DWORD PTR [ecx]
  42347b:	out    0xc8,eax
  42347d:	mov    al,0xab
  42347f:	gs xchg ebp,eax
  423481:	fistp  WORD PTR [eax+0x6d14a375]
  423487:	dec    esi
  423488:	cmp    eax,0x513d407a
  42348d:	mov    esi,0xdaf73068
  423492:	xor    edi,esp
  423494:	jg     0x42341e
  423496:	cmp    eax,0xf0bd8e4e
  42349b:	dec    ebp
  42349c:	pop    es
  42349d:	sub    al,BYTE PTR [ecx+0x120ecf5b]
  4234a3:	sbb    eax,0x1e5351a5
  4234a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234a9:	fimul  WORD PTR [edi+0x62]
  4234ac:	imul   ebx,ecx,0xffffff84
  4234af:	aam    0x77
  4234b1:	cli    
  4234b2:	pusha  
  4234b3:	dec    ecx
  4234b4:	lds    esi,FWORD PTR [esi]
  4234b6:	test   al,0x7b
  4234b8:	or     BYTE PTR [edx-0x27],bl
  4234bb:	in     al,0x49
  4234bd:	scas   eax,DWORD PTR es:[edi]
  4234be:	xchg   BYTE PTR [ebp+0x48619098],dh
  4234c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4234c5:	stc    
  4234c6:	sbb    al,0x22
  4234c8:	mov    ebp,0xa35ef27b
  4234cd:	ret    0x4
  4234d0:	jg     0x4234e9
  4234d2:	mov    ch,0xd2
  4234d4:	adc    al,0x47
  4234d6:	cmc    
  4234d7:	inc    esi
  4234d8:	lods   eax,DWORD PTR ds:[esi]
  4234d9:	aam    0x4e
  4234db:	mov    edi,0xb5db988b
  4234e0:	std    
  4234e1:	jge    0x4234b1
  4234e3:	outs   dx,DWORD PTR ds:[esi]
  4234e4:	lds    ecx,FWORD PTR [edi+0x3bae6261]
  4234ea:	adc    DWORD PTR [eax+0x88],edi
  4234f0:	add    BYTE PTR [eax],al
  4234f2:	dec    ecx
  4234f3:	mov    ds:0xf6ffd655,eax
  4234f8:	retf   
  4234f9:	mov    edi,0x3f1d56c2
  4234fe:	jnp    0x4234a0
  423500:	ret    
  423501:	gs cmp eax,0xf30001ae
  423507:	add    al,0x0
  423509:	add    BYTE PTR [edx-0x19],cl
  42350c:	(bad)  
  42350d:	pop    edi
  42350e:	pop    ecx
  42350f:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  423511:	dec    edx
  423512:	std    
  423513:	cmp    al,0x7c
  423515:	mov    ds:0xe340f184,al
  42351a:	sbb    BYTE PTR [edi],al
  42351c:	jle    0x423589
  42351e:	cmp    al,0x61
  423520:	jns    0x423564
  423522:	cmp    BYTE PTR [ebp+0x1aed5c82],0xc4
  423529:	dec    esi
  42352a:	lea    eax,[edi+0x5a]
  42352d:	xchg   edi,eax
  42352e:	sbb    cl,BYTE PTR [edx+0x5b]
  423531:	loopne 0x4234b9
  423533:	aas    
  423534:	fsub   DWORD PTR [esi]
  423536:	sbb    DWORD PTR [edx+esi*2-0x2aaec0a6],edx
  42353d:	cmp    DWORD PTR [esi-0x4e],edi
  423540:	sub    al,0xdd
  423542:	stos   BYTE PTR es:[edi],al
  423543:	lea    ecx,[edx-0x32593471]
  423549:	fmul   DWORD PTR [ecx+0x68]
  42354c:	jbe    0x4234ed
  42354e:	aam    0x9c
  423550:	loop   0x423595
  423552:	dec    ebx
  423553:	mov    edx,0x37cfdfec
  423558:	add    al,0x2b
  42355a:	pushf  
  42355b:	xchg   ecx,eax
  42355c:	fistp  DWORD PTR [edx+0xed10163]
  423562:	cmp    eax,DWORD PTR [ecx-0x50ea0388]
  423568:	xlat   BYTE PTR ds:[ebx]
  423569:	scas   eax,DWORD PTR es:[edi]
  42356a:	mov    ds,ebx
  42356c:	xor    al,0x50
  42356e:	popf   
  42356f:	mov    WORD PTR [edi+0x729df2d7],es
  423575:	sahf   
  423576:	leave  
  423577:	sub    DWORD PTR [eax+0x17dff7ad],eax
  42357d:	jp     0x42355c
  42357f:	(bad)  
  423580:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423581:	ins    BYTE PTR es:[edi],dx
  423582:	jno    0x4235b9
  423584:	pop    edi
  423585:	mov    al,0xb2
  423587:	push   ds
  423588:	xor    eax,0x9f03f0b6
  42358d:	bound  ebp,QWORD PTR ds:[esi+0x7]
  423591:	push   0xffffffd0
  423593:	cli    
  423594:	daa    
  423595:	inc    eax
  423596:	ret    0xeb7
  423599:	jmp    0x423618
  42359b:	xchg   edx,eax
  42359c:	mov    ch,0xd2
  42359e:	pusha  
  42359f:	js     0x42358b
  4235a1:	add    BYTE PTR [ecx-0x6cbdf2fe],bh
  4235a7:	xor    BYTE PTR [edi+esi*4],0x80
  4235ab:	loopne 0x42352f
  4235ad:	clc    
  4235ae:	jno    0x4235d8
  4235b0:	gs stos BYTE PTR es:[edi],al
  4235b2:	call   0x769d44b0
  4235b7:	js     0x423540
  4235b9:	sbb    cl,BYTE PTR [ebx-0x34]
  4235bc:	imul   esi,DWORD PTR [ebp-0x2e9a9e9c],0x6ee7e3c0
  4235c6:	daa    
  4235c7:	and    al,0xdd
  4235c9:	mov    cl,0xaf
  4235cb:	arpl   WORD PTR [bp+di],bx
  4235ce:	ds jle 0x42363a
  4235d1:	cmp    BYTE PTR ds:0xac708c90,cl
  4235d7:	mov    edx,0xf45b37d2
  4235dc:	xchg   edx,eax
  4235dd:	mov    cl,0xb2
  4235df:	xchg   ecx,eax
  4235e0:	rcr    BYTE PTR [esi],cl
  4235e2:	mov    ds:0x3e3c038,eax
  4235e7:	imul   esi,DWORD PTR [eax+0x6499a950],0x5b
  4235ee:	push   ds
  4235ef:	mov    ah,0xba
  4235f1:	sbb    DWORD PTR [edi+ebp*1],esi
  4235f4:	pop    ecx
  4235f5:	fimul  DWORD PTR [eax]
  4235f7:	mov    ebx,0x3185857
  4235fc:	add    DWORD PTR [edi+ebx*1+0x3f],ebx
  423600:	add    dh,dl
  423602:	push   ecx
  423603:	inc    ecx
  423604:	cli    
  423605:	adc    eax,0x35203617
  42360a:	jmp    0x42366e
  42360c:	loopne 0x4235e7
  42360e:	mov    eax,0xee1b2959
  423614:	push   ss
  423615:	dec    edx
  423616:	enter  0xf47d,0x28
  42361a:	xchg   esi,eax
  42361b:	sub    al,0xb1
  42361d:	scas   al,BYTE PTR es:[edi]
  42361e:	into   
  42361f:	(bad)  
  423620:	or     edx,DWORD PTR [ecx-0x21]
  423623:	shl    BYTE PTR [ebp+0x2],cl
  423626:	mov    WORD PTR [esi+0x13],ds
  423629:	xchg   edx,eax
  42362a:	lahf   
  42362b:	pop    es
  42362c:	push   ecx
  42362d:	push   0x34
  42362f:	fidivr DWORD PTR [edi+0x17522e49]
  423635:	mov    esi,0x70e2294e
  42363a:	xchg   ebx,eax
  42363b:	cmc    
  42363c:	jns    0x4235da
  42363e:	test   eax,0xc916ea46
  423643:	sub    eax,0x675c6d1a
  423648:	xor    eax,0xab8540e7
  42364d:	pop    ebp
  42364e:	dec    ebp
  42364f:	fisubr DWORD PTR [edx+0x73]
  423652:	stos   DWORD PTR es:[edi],eax
  423653:	adc    dh,BYTE PTR [ecx]
  423655:	call   0x80ff:0x23c73f2e
  42365c:	sub    DWORD PTR [ebx],esi
  42365e:	pop    edi
  42365f:	inc    esi
  423660:	jnp    0x423628
  423662:	out    0x84,eax
  423664:	test   DWORD PTR [esi+ecx*2],0xceaa5f9f
  42366b:	in     al,dx
  42366c:	cmp    edi,esp
  42366e:	xor    al,0x4c
  423670:	(bad)
  423674:	jae    0x42366c
  423676:	js     0x4236ea
  423678:	mov    ds:0x61922de,eax
  42367d:	cmp    BYTE PTR [edx],dh
  42367f:	mov    ch,BYTE PTR [ebp+ecx*4-0x73]
  423683:	pop    esi
  423684:	stos   BYTE PTR es:[edi],al
  423685:	xor    DWORD PTR [ebx],edi
  423687:	stos   BYTE PTR es:[edi],al
  423688:	(bad)  
  423689:	sbb    BYTE PTR [ecx+0x50],al
  42368c:	pop    ecx
  42368d:	jl     0x42366f
  42368f:	jne    0x4236c4
  423691:	clc    
  423692:	out    0xed,al
  423694:	fild   DWORD PTR ds:0x862e0e89
  42369a:	sbb    eax,0x44d5924
  42369f:	lock push ebp
  4236a1:	(bad)  [ecx-0x23]
  4236a4:	sahf   
  4236a5:	push   edi
  4236a6:	jecxz  0x423668
  4236a8:	fmul   DWORD PTR [ebx]
  4236aa:	inc    ebp
  4236ab:	fstp   TBYTE PTR [ebp+0x5f8d0bca]
  4236b1:	add    bl,BYTE PTR [edi-0x1307d44e]
  4236b7:	jo     0x423713
  4236b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236ba:	or     BYTE PTR [edx+0x7ac21352],0x44
  4236c1:	loope  0x423707
  4236c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236c4:	dec    esi
  4236c5:	enter  0x5eab,0xd6
  4236c9:	rcl    BYTE PTR ds:0x105c7062,1
  4236cf:	stos   BYTE PTR es:[edi],al
  4236d0:	push   edi
  4236d1:	xchg   BYTE PTR [ebx+0x67],al
  4236d4:	mov    edi,0x2f511b31
  4236d9:	sub    cl,al
  4236db:	or     eax,ebp
  4236dd:	neg    DWORD PTR [edi]
  4236df:	push   edx
  4236e0:	jge    0x42368a
  4236e2:	and    DWORD PTR [eax+edi*4+0x6e050013],ebx
  4236e9:	out    dx,al
  4236ea:	mov    ds:0xc2007373,eax
  4236ef:	pop    ds
  4236f0:	pusha  
  4236f1:	xchg   DWORD PTR [ecx+0x3c],ecx
  4236f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236f5:	jno    0x4236c2
  4236f7:	pop    ebx
  4236f8:	add    al,0xeb
  4236fa:	into   
  4236fb:	retf   
  4236fc:	and    al,0xe4
  4236fe:	cmc    
  4236ff:	jns    0x423726
  423701:	ins    BYTE PTR es:[edi],dx
  423702:	xor    eax,0xbb20b98e
  423707:	into   
  423708:	adc    al,0xd2
  42370a:	cmp    esp,DWORD PTR [ebp-0x44bc5d8b]
  423710:	xor    ecx,DWORD PTR [ecx-0x80]
  423713:	xor    ah,al
  423715:	stos   BYTE PTR es:[edi],al
  423716:	icebp  
  423717:	mov    esp,0x65087dcf
  42371c:	mov    bh,0x9b
  42371e:	shr    ebx,cl
  423720:	jne    0x4236dc
  423722:	(bad)  
  423723:	(bad)  [ebx+0x52e76f4a]
  423729:	ror    eax,cl
  42372b:	shl    DWORD PTR [eax],cl
  42372d:	adc    esi,ebx
  42372f:	mov    esi,0xf7ed9f53
  423734:	(bad)  
  423735:	xor    BYTE PTR [edi],dl
  423737:	mov    ch,0xcf
  423739:	add    cl,ah
  42373b:	mov    ds:0xff8d5845,al
  423740:	stos   BYTE PTR es:[edi],al
  423741:	std    
  423742:	and    bl,bh
  423744:	push   ss
  423745:	xor    DWORD PTR [esi-0x5b],0xffffff96
  423749:	or     eax,0x9e3f95
  42374e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42374f:	retf   0x3ee5
  423752:	repnz and BYTE PTR [ecx+0x1334c966],0x58
  42375a:	mov    BYTE PTR [edx],bh
  42375c:	fbstp  TBYTE PTR [edx]
  42375e:	xchg   esi,eax
  42375f:	test   DWORD PTR [edx+0xe],eax
  423762:	(bad)  
  423763:	repz in al,0x40
  423766:	aaa    
  423767:	push   ss
  423768:	adc    bh,BYTE PTR [eax+0x204cb76a]
  42376e:	pusha  
  42376f:	dec    esi
  423770:	in     eax,dx
  423771:	shl    edi,0xf3
  423774:	cmc    
  423775:	push   ss
  423776:	retf   0x808d
  423779:	mov    ch,0x11
  42377b:	or     al,0x4c
  42377d:	cmc    
  42377e:	leave  
  42377f:	mov    edx,0x3bd8521e
  423784:	mov    al,es:0x64f46c54
  42378a:	and    bh,BYTE PTR [edi-0x3d3810fe]
  423790:	sbb    ebx,DWORD PTR [ecx]
  423792:	lods   al,BYTE PTR ds:[esi]
  423793:	in     al,dx
  423794:	cld    
  423795:	dec    edi
  423796:	cmp    al,0x73
  423798:	adc    DWORD PTR [ebx+0x74],ecx
  42379b:	inc    ebp
  42379c:	adc    dh,bh
  42379e:	ins    BYTE PTR es:[edi],dx
  42379f:	das    
  4237a0:	retf   
  4237a1:	pop    ebx
  4237a2:	jmp    0x42375e
  4237a4:	pop    ds
  4237a5:	or     DWORD PTR [esi-0x67],0xffffffd0
  4237a9:	or     dh,BYTE PTR [edx]
  4237ab:	jecxz  0x4237bf
  4237ad:	jp     0x42378a
  4237af:	aam    0x9f
  4237b1:	xor    ebp,ebp
  4237b3:	push   edi
  4237b4:	xor    ah,BYTE PTR [ebx+0x54c5b28e]
  4237ba:	push   esp
  4237bb:	jae    0x423815
  4237bd:	cmp    al,0x76
  4237bf:	cmc    
  4237c0:	sbb    bl,BYTE PTR ds:0xface07ac
  4237c6:	dec    edx
  4237c7:	fwait
  4237c8:	sub    DWORD PTR [edi],ebx
  4237ca:	jmp    DWORD PTR [edx]
  4237cc:	lock (bad) 
  4237ce:	mov    ds,WORD PTR [eax]
  4237d0:	(bad)  
  4237d1:	mov    ecx,0x4a70f370
  4237d6:	hlt    
  4237d7:	mov    ebx,edx
  4237d9:	mov    bl,BYTE PTR [edx-0x260430a1]
  4237df:	mov    eax,esp
  4237e1:	dec    ecx
  4237e2:	inc    eax
  4237e3:	mov    ecx,0xbc5cc0e9
  4237e8:	stc    
  4237e9:	fcmove st,st(5)
  4237eb:	fadd   DWORD PTR [esi+0x6fd0eb5]
  4237f1:	pop    eax
  4237f2:	arpl   WORD PTR [eax+0x36e86206],ax
  4237f8:	cs into 
  4237fa:	mov    edx,0x8171ab87
  4237ff:	cmc    
  423800:	sbb    bl,0xea
  423803:	ror    BYTE PTR [edi+0x62],cl
  423806:	rol    DWORD PTR [ecx],cl
  423808:	repz jge 0x423888
  42380b:	and    al,0x3a
  42380d:	stos   BYTE PTR es:[edi],al
  42380e:	sbb    ah,BYTE PTR [ecx+0x49fb9ca7]
  423814:	sbb    ah,BYTE PTR [ecx+edi*4-0x7bc82536]
  42381b:	cmp    edx,DWORD PTR ds:0x4dfc6e5e
  423821:	mov    dl,0xd0
  423823:	lds    esp,FWORD PTR [eax+ebx*1-0x12]
  423827:	dec    esi
  423828:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423829:	pop    edx
  42382a:	jbe    0x423827
  42382c:	xor    ebx,eax
  42382e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42382f:	xor    eax,0xef16d280
  423834:	push   edi
  423835:	pop    ds
  423836:	psubsb mm0,QWORD PTR [edx-0x4e]
  42383a:	test   al,0x15
  42383c:	ja     0x4237e5
  42383e:	leave  
  42383f:	test   esi,eax
  423841:	cmp    al,0x6e
  423843:	retf   0x79d3
  423846:	imul   ebp,ecx,0xffffffa7
  423849:	outs   dx,BYTE PTR ds:[esi]
  42384a:	ficom  DWORD PTR [di+0x3b]
  42384e:	dec    eax
  42384f:	retf   0xd205
  423852:	sbb    ch,dh
  423854:	or     bh,BYTE PTR [ebx+0x13]
  423857:	pop    esp
  423858:	out    dx,eax
  423859:	jecxz  0x423862
  42385b:	sbb    edx,DWORD PTR [edx]
  42385d:	cwde   
  42385e:	daa    
  42385f:	xchg   edi,eax
  423860:	mov    ebp,0x2e1f5b28
  423865:	push   cs
  423866:	loope  0x423894
  423868:	test   eax,0xbcc5bea4
  42386d:	jne    0x423872
  42386f:	mov    DWORD PTR [ecx-0x12],eax
  423872:	lahf   
  423873:	push   ecx
  423874:	popf   
  423875:	xor    eax,0x8eefd15e
  42387a:	or     BYTE PTR [edx-0x716f471a],cl
  423880:	movsx  esp,BYTE PTR [esi+0x2c]
  423884:	aad    0xdf
  423886:	and    BYTE PTR [ebx],bh
  423888:	and    dl,BYTE PTR [edi-0x56a82e19]
  42388e:	push   edi
  42388f:	pop    edx
  423890:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423891:	inc    esp
  423892:	adc    eax,0x8c3410f1
  423897:	call   0x638a0d85
  42389c:	dec    edi
  42389d:	jae    0x4238d1
  42389f:	mov    esp,0x3de7c21e
  4238a4:	mov    dh,0x49
  4238a6:	cs and al,0xfd
  4238a9:	rol    edi,cl
  4238ab:	fsubr  QWORD PTR [ebp-0x6d44d5f]
  4238b1:	mov    cl,0xea
  4238b3:	shl    DWORD PTR [edi-0x1c],cl
  4238b6:	jo     0x42390a
  4238b8:	not    DWORD PTR [eax-0x79f05ced]
  4238be:	inc    ecx
  4238bf:	popa   
  4238c0:	hlt    
  4238c1:	xor    BYTE PTR [ecx+0x40534971],ch
  4238c7:	imul   esi,DWORD PTR [edi+0x5656884b],0x99405c25
  4238d1:	lea    edi,[esi+0x4e]
  4238d4:	inc    edi
  4238d5:	jecxz  0x423902
  4238d7:	shr    BYTE PTR [ebx+0x1e644dc0],cl
  4238dd:	or     eax,0xfb289c55
  4238e2:	retf   0xcf6d
  4238e5:	test   al,0x73
  4238e7:	jbe    0x423881
  4238e9:	call   0x604501bd
  4238ee:	arpl   di,sp
  4238f0:	neg    DWORD PTR es:[edi+0x17774201]
  4238f7:	push   esi
  4238f8:	pusha  
  4238f9:	mov    dh,0xbb
  4238fb:	les    eax,FWORD PTR [ebp+0x74c769fe]
  423901:	xor    eax,0xba7ca4fa
  423906:	div    DWORD PTR [ecx]
  423908:	enter  0xbb9e,0xb4
  42390c:	pop    ecx
  42390d:	push   es
  42390e:	mov    edx,0x4a3096ec
  423913:	in     al,0x3f
  423915:	mov    WORD PTR [eax+0x6f],cs
  423918:	add    BYTE PTR [esi-0x66],0xe7
  42391c:	aam    0x93
  42391e:	(bad)  
  423920:	cmp    eax,0xcdc1fa52
  423925:	mov    al,ds:0x2d4b62c0
  42392a:	adc    cl,bh
  42392c:	mov    cl,0xfe
  42392e:	out    dx,eax
  42392f:	mov    BYTE PTR [ebx-0x38415a32],ah
  423935:	pop    edx
  423936:	jbe    0x4239af
  423938:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42393a:	shl    BYTE PTR [ecx-0x56],cl
  42393d:	pushf  
  42393e:	mov    ecx,0x32cbedbd
  423943:	mov    WORD PTR [edi+0x14],?
  423946:	lock inc esp
  423948:	ret    
  423949:	data16 daa 
  42394b:	(bad)  
  42394c:	mov    bh,dh
  42394e:	cmc    
  42394f:	sbb    DWORD PTR [ecx+0x6d],ebx
  423952:	xchg   esi,eax
  423953:	push   edi
  423954:	and    DWORD PTR [ebp-0x7b],edx
  423957:	fldenv [edi]
  423959:	pop    ebx
  42395a:	aas    
  42395b:	mov    ds:0xdb01745d,al
  423960:	sbb    DWORD PTR [ebx+0x65d8a365],edi
  423966:	or     bh,BYTE PTR [esi-0x5f]
  423969:	jge    0x423906
  42396b:	jg     0x42396d
  42396d:	(bad)  
  42396e:	sar    bl,cl
  423970:	jecxz  0x4239a5
  423972:	adc    dh,ch
  423974:	jp     0x4238fd
  423976:	nop
  423977:	jl     0x423931
  423979:	or     DWORD PTR [eax-0x1ce7a9fb],edx
  42397f:	imul   edi,ebp,0xf422eb6d
  423985:	(bad)
  423989:	lea    ebp,[esi]
  42398b:	sub    al,0xa7
  42398d:	(bad)  
  42398e:	jae    0x423918
  423990:	sub    ah,dl
  423992:	jl     0x423955
  423994:	das    
  423995:	out    dx,al
  423996:	xchg   DWORD PTR [ebp+0x48],ebp
  423999:	(bad)  [ebp-0x6de3313a]
  42399f:	sar    BYTE PTR ds:0xd89c4a69,0x1a
  4239a6:	retf   0xcee1
  4239a9:	cmp    BYTE PTR [edi-0x14],cl
  4239ac:	call   edx
  4239ae:	mov    ds,WORD PTR [ecx]
  4239b0:	gs cli 
  4239b2:	pop    ebp
  4239b3:	call   0x435b:0x1b7d43a0
  4239ba:	loop   0x423989
  4239bc:	cmp    eax,0x7c30040f
  4239c1:	enter  0x9e7,0x90
  4239c5:	bound  edi,QWORD PTR [eax-0x7808d16]
  4239cb:	xor    eax,0x29c40ceb
  4239d0:	jge    0x423a1f
  4239d2:	xor    al,0xb9
  4239d4:	sbb    DWORD PTR [edi+eax*8+0x4d],ebx
  4239d8:	jmp    0xb1b31c79
  4239dd:	add    eax,0x97e4a643
  4239e2:	jne    0x4239c3
  4239e4:	xor    BYTE PTR [edi-0x6d],dh
  4239e7:	mov    al,ds:0x57fc5e9e
  4239ec:	dec    esp
  4239ed:	push   es
  4239ee:	xchg   eax,esi
  4239f0:	inc    esp
  4239f1:	fcomp  DWORD PTR [edx]
  4239f3:	xchg   edi,eax
  4239f4:	jg     0x4239f9
  4239f6:	and    al,0xf7
  4239f8:	shr    ah,0xbc
  4239fb:	stos   DWORD PTR es:[edi],eax
  4239fc:	imul   eax,DWORD PTR [eax],0x0
  423a02:	inc    esi
  423a03:	xchg   edi,eax
  423a04:	daa    
  423a05:	cmp    esi,edi
  423a07:	mov    ebx,0x9b53ff5e
  423a0c:	and    ebx,DWORD PTR [ebp+0x13939747]
  423a12:	xor    BYTE PTR [ebx+0x4f30001],dh
  423a18:	add    BYTE PTR [eax],al
  423a1a:	xchg   edx,eax
  423a1b:	adc    al,0xde
  423a1d:	xchg   ebx,eax
  423a1e:	test   eax,0x6119394b
  423a23:	or     al,0x90
  423a25:	sahf   
  423a26:	enter  0x36e9,0x32
  423a2a:	xor    al,0xb6
  423a2c:	push   edi
  423a2d:	jae    0x4239d9
  423a2f:	mov    BYTE PTR [ebx],0x6
  423a32:	push   DWORD PTR [eax-0x959b420]
  423a38:	in     al,0x32
  423a3a:	dec    esp
  423a3b:	pop    edx
  423a3c:	push   es
  423a3d:	cmc    
  423a3e:	push   edx
  423a3f:	inc    ebx
  423a40:	xchg   ebx,eax
  423a41:	dec    esp
  423a42:	loopne 0x423a0b
  423a44:	js     0x423aa8
  423a46:	inc    ecx
  423a47:	jecxz  0x423a6d
  423a49:	sbb    DWORD PTR [ebx],0x3f
  423a4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a4d:	dec    esp
  423a4e:	inc    esp
  423a4f:	and    al,0xc1
  423a51:	mov    esp,0x85ee7042
  423a56:	bound  esp,QWORD PTR [esi+0xdc8bbdd]
  423a5c:	jae    0x423a2d
  423a5e:	aas    
  423a5f:	dec    edi
  423a60:	fdiv   st(7),st
  423a62:	sbb    al,0x4b
  423a64:	sub    bh,bl
  423a66:	cdq    
  423a67:	out    0x75,al
  423a69:	ss icebp 
  423a6b:	sbb    al,0xc2
  423a6d:	mov    ch,0xf5
  423a6f:	rcl    DWORD PTR [eax-0x3f3c2d2f],cl
  423a75:	mov    ch,0x1
  423a77:	cdq    
  423a78:	dec    ebp
  423a79:	add    dh,BYTE PTR [ebp-0x7a]
  423a7c:	push   edi
  423a7d:	push   ebx
  423a7e:	pop    edx
  423a7f:	shr    eax,1
  423a81:	outs   dx,BYTE PTR ds:[esi]
  423a82:	mov    ebx,0x5f23e806
  423a87:	enter  0xe714,0x11
  423a8b:	les    edx,FWORD PTR [ecx+ecx*4+0x75]
  423a8f:	dec    esp
  423a90:	dec    esp
  423a91:	sti    
  423a92:	mov    es,eax
  423a94:	pop    edx
  423a95:	popa   
  423a96:	mov    al,ds:0x3c05668c
  423a9b:	iret   
  423a9c:	js     0x423a70
  423a9e:	cmp    al,0xe4
  423aa0:	mov    ds:0x7ca3fa79,eax
  423aa5:	jecxz  0x423a3b
  423aa7:	or     edx,0x6688a0e5
  423aad:	pop    eax
  423aae:	jo     0x423adb
  423ab0:	cmp    esi,ebx
  423ab2:	out    0xef,eax
  423ab4:	dec    ebp
  423ab5:	rcl    DWORD PTR [esi-0x8],1
  423ab8:	jecxz  0x423b35
  423aba:	xchg   ecx,eax
  423abb:	ins    BYTE PTR es:[edi],dx
  423abc:	jl     0x423a43
  423abe:	xlat   BYTE PTR ds:[ebx]
  423abf:	pop    ss
  423ac0:	mov    ebp,0xea992b93
  423ac5:	push   0x9
  423ac7:	push   es
  423ac8:	xor    al,0xd8
  423aca:	mov    ebx,0xe8e14aef
  423acf:	push   0x54ca42ba
  423ad4:	inc    esi
  423ad5:	xor    ebx,esi
  423ad7:	ror    dh,cl
  423ad9:	mov    edx,0x226c56e3
  423ade:	sub    edi,DWORD PTR [ebx]
  423ae0:	xlat   BYTE PTR ds:[ebx]
  423ae1:	arpl   WORD PTR [esi-0x1246eb0a],si
  423ae7:	les    edx,FWORD PTR [ecx-0x34]
  423aea:	push   esi
  423aeb:	and    BYTE PTR [ecx+0x66],0xeb
  423aef:	sub    ebx,DWORD PTR [edx-0x12]
  423af2:	pop    esi
  423af3:	jp     0x423af6
  423af5:	test   eax,0x898ac332
  423afa:	push   ebx
  423afb:	seto   BYTE PTR [ecx-0x229fce07]
  423b02:	mov    al,ds:0x1ece4972
  423b07:	outs   dx,BYTE PTR ds:[esi]
  423b08:	retf   
  423b09:	xchg   ecx,eax
  423b0a:	push   eax
  423b0b:	mov    esi,0x30dd908b
  423b10:	inc    eax
  423b11:	dec    ebx
  423b12:	xchg   esp,eax
  423b13:	inc    BYTE PTR [ebx-0x13]
  423b16:	cmp    bl,BYTE PTR [eax+0x11]
  423b19:	and    ch,BYTE PTR [ebp+edi*2+0x37181941]
  423b20:	xchg   edx,eax
  423b21:	ss cmp edx,esp
  423b24:	sbb    eax,0x63a206b8
  423b29:	in     al,dx
  423b2a:	outs   dx,BYTE PTR ds:[esi]
  423b2b:	xchg   esi,eax
  423b2c:	das    
  423b2d:	mov    ecx,0x2c866c21
  423b32:	lea    esp,[edx+0x15]
  423b35:	pop    ss
  423b36:	mov    WORD PTR [ecx-0x25],ds
  423b39:	and    esp,0x1cfb870
  423b3f:	push   cs
  423b40:	cmp    dh,ah
  423b42:	mov    ebp,0x2e927672
  423b47:	mov    al,0xb5
  423b49:	lahf   
  423b4a:	clc    
  423b4b:	jp     0x423ade
  423b4d:	aas    
  423b4e:	mov    bh,0xac
  423b50:	cdq    
  423b51:	shl    BYTE PTR [edx-0x4dabc348],0x8b
  423b58:	inc    ebx
  423b59:	bound  eax,QWORD PTR ds:0xc8f012ab
  423b5f:	jae    0x423ae3
  423b61:	adc    al,0x10
  423b63:	or     al,0x4b
  423b65:	mov    ah,0xb0
  423b67:	jne    0x423b02
  423b69:	sbb    al,0x78
  423b6b:	and    eax,0xaf80f22a
  423b70:	cmp    bh,bh
  423b72:	cmp    BYTE PTR [edx],dh
  423b74:	dec    edi
  423b75:	mov    ecx,0xfcf319b1
  423b7a:	adc    ch,BYTE PTR [ecx-0x31]
  423b7d:	inc    edi
  423b7e:	(bad)  
  423b7f:	scas   eax,DWORD PTR es:[edi]
  423b80:	mov    edi,0x7a903770
  423b85:	cmp    BYTE PTR [eax+0x44df06b7],dh
  423b8b:	mov    eax,0x1984241e
  423b90:	pushf  
  423b91:	inc    esi
  423b92:	daa    
  423b93:	and    DWORD PTR [edi-0x1d],ebx
  423b96:	es inc esi
  423b98:	sub    BYTE PTR [edi],bh
  423b9a:	pop    ss
  423b9b:	enter  0xcba3,0x4b
  423b9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ba0:	popf   
  423ba1:	cli    
  423ba2:	adc    dh,BYTE PTR [eax+eiz*2+0x28]
  423ba6:	push   ebx
  423ba7:	pop    esp
  423ba8:	aad    0xde
  423baa:	sbb    bl,ch
  423bac:	(bad)  
  423bad:	mov    WORD PTR [edx],?
  423baf:	inc    esp
  423bb0:	push   ebp
  423bb1:	jmp    0x574c1027
  423bb6:	cwde   
  423bb7:	lds    edx,FWORD PTR [edi]
  423bb9:	pop    ds
  423bba:	pushf  
  423bbb:	stos   BYTE PTR es:[edi],al
  423bbc:	xchg   edi,eax
  423bbd:	pop    ecx
  423bbe:	pop    ss
  423bbf:	pop    ecx
  423bc0:	mov    al,ds:0xf518be8d
  423bc5:	jns    0x423b84
  423bc7:	(bad)  
  423bc8:	iret   
  423bc9:	ins    BYTE PTR es:[edi],dx
  423bca:	sahf   
  423bcb:	inc    eax
  423bcc:	and    bh,BYTE PTR [edi-0x77]
  423bcf:	repnz adc eax,0x1c3aae9d
  423bd5:	cdq    
  423bd6:	dec    edx
  423bd7:	mov    eax,0x7251d515
  423bdc:	add    esi,DWORD PTR [edx-0x25d20a09]
  423be2:	xor    eax,0x8b8ab89
  423be7:	out    0xc3,eax
  423be9:	adc    ah,0x60
  423bec:	mov    dl,0xe3
  423bee:	pop    ecx
  423bef:	jl     0x423c2a
  423bf1:	sbb    BYTE PTR [esi],0x8e
  423bf4:	imul   edx,DWORD PTR [esi+0x33081493],0x21
  423bfb:	(bad)  [eax+0x8]
  423bfe:	test   al,0x62
  423c00:	and    ch,BYTE PTR [eax-0x41]
  423c03:	std    
  423c04:	outs   dx,BYTE PTR ds:[esi]
  423c05:	add    BYTE PTR [edx+0x4dc8b36],0x46
  423c0c:	mov    al,0x7f
  423c0e:	loopne 0x423c24
  423c10:	jo     0x423bbe
  423c12:	pop    esp
  423c13:	popa   
  423c14:	jmp    0xfa40:0xc0072029
  423c1b:	cmp    eax,0x30f588f5
  423c20:	jecxz  0x423ba5
  423c22:	dec    esi
  423c23:	imul   DWORD PTR gs:[edi-0x4f]
  423c27:	enter  0x7919,0x40
  423c2b:	mov    ds:0xcb3c523b,eax
  423c30:	icebp  
  423c31:	cli    
  423c32:	jno    0x423c9b
  423c34:	repz pop ebx
  423c36:	in     eax,dx
  423c37:	loopne 0x423c29
  423c39:	and    eax,0xdb3ccd63
  423c3e:	ror    ecx,1
  423c40:	mov    edi,0x4a274323
  423c45:	mov    dl,0xc8
  423c47:	cs jp  0x423c0f
  423c4a:	pop    eax
  423c4b:	cmp    bh,0xb8
  423c4e:	repnz mov BYTE PTR [ebx],dh
  423c51:	xchg   esp,eax
  423c52:	lods   eax,DWORD PTR ds:[esi]
  423c53:	stos   DWORD PTR es:[edi],eax
  423c54:	pop    es
  423c55:	sbb    DWORD PTR [eax-0x6a],0xfffffffb
  423c59:	inc    esp
  423c5a:	gs repz test eax,0xb5caac85
  423c61:	in     al,0x3f
  423c63:	jge    0x423c68
  423c65:	(bad)
  423c69:	mov    eax,ds:0x9404a286
  423c6e:	das    
  423c6f:	aaa    
  423c70:	xchg   esi,eax
  423c71:	(bad)  
  423c72:	fnstcw WORD PTR [esi]
  423c74:	dec    esp
  423c75:	leave  
  423c76:	scas   al,BYTE PTR es:[edi]
  423c77:	nop
  423c78:	mov    cl,0xc0
  423c7a:	sbb    BYTE PTR [edi+0x7caf703a],0x28
  423c81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c82:	into   
  423c83:	scas   al,BYTE PTR es:[edi]
  423c84:	shr    ebx,0x1
  423c87:	add    eax,0x1291544f
  423c8c:	stc    
  423c8d:	xor    al,0xe2
  423c8f:	xchg   esp,eax
  423c90:	lock cmp al,0xee
  423c93:	mov    ch,0x3c
  423c95:	sbb    DWORD PTR [esi+edi*1+0x6],eax
  423c99:	cmp    eax,0x90c32c1a
  423c9e:	push   0x4a979df
  423ca3:	ret    0xab95
  423ca6:	jnp    0x423cf3
  423ca8:	sar    BYTE PTR ds:0x6dce9829,0x39
  423caf:	int3   
  423cb0:	gs repz (bad) 
  423cb3:	out    dx,al
  423cb4:	add    DWORD PTR [edi],eax
  423cb6:	jne    0x423cae
  423cb8:	jne    0x423c88
  423cba:	sub    ebx,esi
  423cbc:	lea    esp,[edi-0x6e]
  423cbf:	pop    es
  423cc0:	mov    BYTE PTR [eax-0x6b988034],0x3c
  423cc7:	xor    DWORD PTR [edi],edi
  423cc9:	xchg   ebx,eax
  423cca:	inc    edx
  423ccb:	into   
  423ccc:	pop    ss
  423ccd:	call   DWORD PTR [ebx-0x52]
  423cd0:	test   BYTE PTR [ebp+0x5b],bl
  423cd3:	push   ebp
  423cd4:	cli    
  423cd5:	setno  BYTE PTR [edi+edi*1+0x43]
  423cda:	lods   al,BYTE PTR ds:[esi]
  423cdb:	sub    al,0x23
  423cdd:	push   ecx
  423cde:	xchg   ebx,eax
  423cdf:	jle    0x423cf9
  423ce1:	push   es
  423ce2:	shl    DWORD PTR [edx],cl
  423ce4:	out    dx,al
  423ce5:	add    ch,ch
  423ce7:	out    0xd,eax
  423ce9:	in     eax,0x5e
  423ceb:	sub    ah,BYTE PTR [ebp-0x545c451c]
  423cf1:	jl     0x423c7c
  423cf3:	jmp    0x54aa4491
  423cf8:	sub    eax,DWORD PTR [esi]
  423cfa:	ret    0xf97e
  423cfd:	adc    esp,edi
  423cff:	lahf   
  423d00:	hlt    
  423d01:	mov    eax,0x2e35cf87
  423d06:	push   ebp
  423d07:	xor    bl,BYTE PTR [esi+0x28]
  423d0a:	mov    dh,0xee
  423d0c:	inc    ecx
  423d0d:	outs   dx,DWORD PTR ds:[esi]
  423d0e:	push   esp
  423d0f:	outs   dx,DWORD PTR ds:[esi]
  423d10:	mov    bl,0x90
  423d12:	arpl   sp,cx
  423d14:	rcl    BYTE PTR [eax-0x6a],0xbe
  423d18:	push   es
  423d19:	pop    ebp
  423d1a:	popf   
  423d1b:	xor    eax,0x3d006f9d
  423d20:	push   0xa4c4ff56
  423d25:	test   al,0x4b
  423d27:	mov    ch,0xbd
  423d29:	cmp    DWORD PTR [edi-0x10],ebp
  423d2c:	and    ebp,DWORD PTR [edx+0x24]
  423d2f:	stos   DWORD PTR es:[edi],eax
  423d30:	pop    edx
  423d31:	ficomp DWORD PTR [ecx-0x3e78d96]
  423d37:	xchg   bl,bl
  423d39:	loope  0x423d3e
  423d3b:	lds    ecx,FWORD PTR [edx+edi*8-0xb40e97f]
  423d42:	sub    DWORD PTR [ebx+ebx*1],esi
  423d45:	xchg   edi,eax
  423d46:	or     esp,DWORD PTR [ebp-0x2d1a8df7]
  423d4c:	loop   0x423d52
  423d4e:	loope  0x423d99
  423d50:	or     esp,DWORD PTR [ecx-0x24]
  423d53:	add    DWORD PTR [edi-0x47b40b7d],0xf8a8c754
  423d5d:	and    edx,DWORD PTR [esp+ebx*4-0x2b21d289]
  423d64:	cld    
  423d65:	ja     0x423d89
  423d67:	add    cl,ch
  423d69:	push   ss
  423d6a:	push   0xffffffad
  423d6c:	jmp    0x97f71e46
  423d71:	mov    eax,0x57fade54
  423d76:	inc    ebx
  423d77:	mov    edx,ebp
  423d79:	and    ebp,DWORD PTR [eax-0x5ef20968]
  423d7f:	adc    eax,0x5e81f6d7
  423d84:	out    dx,eax
  423d85:	xchg   esp,ebp
  423d87:	lds    eax,FWORD PTR [eax+ecx*2+0x1dd28922]
  423d8e:	mov    ebx,0x744fee31
  423d93:	call   0xb089:0x2b980d26
  423d9a:	std    
  423d9b:	xchg   esp,eax
  423d9c:	jbe    0x423e02
  423d9e:	mov    eax,ds:0x51202cfa
  423da3:	xor    al,0x11
  423da5:	fwait
  423da6:	xchg   ecx,eax
  423da7:	push   esp
  423da8:	popa   
  423da9:	adc    ebp,DWORD PTR [esi-0x64d39eba]
  423daf:	lods   eax,DWORD PTR ds:[esi]
  423db0:	xor    ebx,DWORD PTR [eax]
  423db2:	mov    ch,0x8c
  423db4:	xchg   esi,eax
  423db5:	pusha  
  423db6:	and    DWORD PTR [eax],edx
  423db8:	and    bh,BYTE PTR [ebp-0x7b87b53d]
  423dbe:	ret    0xf3ac
  423dc1:	in     al,0xc4
  423dc3:	mov    esi,DWORD PTR fs:[ebx+0x52]
  423dc7:	sbb    al,BYTE PTR [ebp+0x72]
  423dca:	sub    dh,BYTE PTR [ecx]
  423dcc:	outs   dx,BYTE PTR ds:[esi]
  423dcd:	push   edx
  423dce:	jne    0x423e1b
  423dd0:	retf   
  423dd1:	int    0x82
  423dd3:	daa    
  423dd4:	xrelease xchg BYTE PTR [edx-0x61],cl
  423dd8:	pop    ebx
  423dd9:	pop    esi
  423dda:	or     DWORD PTR [esi-0x7a],ebx
  423ddd:	mov    dl,0xc3
  423ddf:	neg    BYTE PTR [edi+0x6cfd7125]
  423de5:	fs sub ecx,edx
  423de8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423de9:	aad    0xaa
  423deb:	cwde   
  423dec:	and    al,0xaa
  423dee:	pop    edi
  423def:	int    0xea
  423df1:	dec    esp
  423df2:	iret   
  423df3:	and    al,BYTE PTR [edi+ebx*4]
  423df6:	sahf   
  423df7:	retf   0xbe1f
  423dfa:	inc    ebx
  423dfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423dfc:	or     DWORD PTR [edx-0x30e25e1c],eax
  423e02:	int    0x18
  423e04:	sbb    eax,0xc0a4b3e5
  423e09:	jbe    0x423e33
  423e0b:	scas   eax,DWORD PTR es:[edi]
  423e0c:	mov    esi,0xf9a8e475
  423e11:	mov    bh,0xf3
  423e13:	loope  0x423dbf
  423e15:	sub    BYTE PTR [ebp-0x4e],dh
  423e18:	lods   al,BYTE PTR ds:[esi]
  423e19:	cld    
  423e1a:	or     ebx,DWORD PTR [edx]
  423e1c:	into   
  423e1d:	rcl    BYTE PTR [edx],1
  423e1f:	adc    al,al
  423e21:	xchg   esp,eax
  423e22:	rcl    DWORD PTR [ebp-0x56],cl
  423e25:	add    BYTE PTR [si-0x4dda],al
  423e2a:	in     eax,0x97
  423e2c:	and    DWORD PTR [ecx+0x19],esi
  423e2f:	icebp  
  423e30:	sub    eax,0xdb7075a0
  423e35:	repz adc al,0xdf
  423e38:	xchg   ebx,eax
  423e39:	xchg   esp,eax
  423e3a:	aaa    
  423e3b:	repnz dec esi
  423e3d:	push   esi
  423e3e:	xor    al,0x22
  423e40:	(bad)  
  423e41:	stc    
  423e42:	add    esi,ebp
  423e44:	aaa    
  423e45:	(bad)  
  423e46:	test   BYTE PTR [edi+0x68b43b14],cl
  423e4c:	adc    al,0xe7
  423e4e:	jle    0x423eb7
  423e50:	mov    ds:0x4fee3066,al
  423e55:	aas    
  423e56:	add    al,BYTE PTR [ecx+0x5d95a1eb]
  423e5c:	xor    eax,0x39ce47c2
  423e61:	idiv   BYTE PTR [ecx+0x476f4380]
  423e67:	in     eax,0x15
  423e69:	ret    
  423e6a:	popf   
  423e6b:	dec    esi
  423e6c:	and    dl,ch
  423e6e:	adc    eax,0x8381d92b
  423e73:	iret   
  423e74:	std    
  423e75:	xchg   ebp,eax
  423e76:	or     esp,DWORD PTR [ebx*4-0x26b2634c]
  423e7d:	jbe    0x423e68
  423e7f:	imul   DWORD PTR [ebx]
  423e81:	mov    al,0xc5
  423e83:	cld    
  423e84:	dec    esi
  423e85:	xchg   edx,eax
  423e86:	sub    bl,al
  423e88:	retf   0xfb66
  423e8b:	cs mov esp,0x1b037fc2
  423e91:	jmp    0xb60c:0xd4903866
  423e98:	or     ch,BYTE PTR [edx]
  423e9a:	and    bl,BYTE PTR ds:0x4cc9fa44
  423ea0:	fstp   TBYTE PTR [ebp+0xf98a68c]
  423ea6:	pop    es
  423ea7:	mov    ah,0x9b
  423ea9:	sar    BYTE PTR [edi],0x61
  423eac:	sbb    eax,0x16c675db
  423eb1:	sub    eax,0xacab9a93
  423eb6:	inc    ebx
  423eb7:	ja     0x423e3f
  423eb9:	jb     0x423ea3
  423ebb:	xchg   edx,eax
  423ebc:	jo     0x423ed5
  423ebe:	inc    edi
  423ebf:	xchg   esi,eax
  423ec0:	dec    ecx
  423ec1:	sbb    BYTE PTR [ebp+0x298e3c72],ah
  423ec7:	pop    ss
  423ec8:	mov    edi,0xcd32ca52
  423ecd:	push   esi
  423ece:	jmp    0x423f30
  423ed0:	outs   dx,DWORD PTR ds:[esi]
  423ed1:	xchg   edx,eax
  423ed2:	adc    eax,DWORD PTR [edi+0x7]
  423ed5:	sub    DWORD PTR [ebx+0x22],edi
  423ed8:	sti    
  423ed9:	hlt    
  423eda:	retf   
  423edb:	mov    WORD PTR [ecx-0x17a04c46],es
  423ee1:	jle    0x423f50
  423ee3:	rcl    DWORD PTR [ebx],1
  423ee5:	test   BYTE PTR [eax+0x5d],0x80
  423ee9:	test   al,0x1
  423eeb:	xchg   edi,eax
  423eec:	xchg   edi,eax
  423eed:	xor    al,0xb8
  423eef:	and    BYTE PTR [edx+esi*2],ah
  423ef2:	mov    ah,0xf5
  423ef4:	add    DWORD PTR [edi-0x17],edx
  423ef7:	shl    DWORD PTR [ebx],0x88
  423efa:	pusha  
  423efb:	xchg   edx,ebp
  423efd:	dec    edi
  423efe:	or     DWORD PTR gs:[edi-0x2d8eb3c0],ecx
  423f05:	jg     0x423f4e
  423f07:	xchg   ebp,eax
  423f08:	pop    edx
  423f09:	jb     0x423f47
  423f0b:	add    eax,0x7b
  423f10:	add    BYTE PTR [eax],al
  423f12:	sar    al,cl
  423f14:	data16 outs dx,BYTE PTR es:[esi]
  423f17:	mov    esi,0x8c85fcd2
  423f1c:	out    dx,al
  423f1d:	fisub  DWORD PTR [edi+0x23b066db]
  423f23:	mov    eax,0x4f30001
  423f28:	add    BYTE PTR [eax],al
  423f2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f2b:	dec    esi
  423f2c:	ret    0xcf57
  423f2f:	lahf   
  423f30:	hlt    
  423f31:	(bad)  
  423f32:	call   DWORD PTR [eax+0x189ce64d]
  423f38:	xor    DWORD PTR [eax-0x5c],ecx
  423f3b:	xlat   BYTE PTR ds:[ebx]
  423f3c:	push   0x7b
  423f3e:	pop    eax
  423f3f:	repnz sub dl,BYTE PTR [ebp+0xf]
  423f43:	adc    DWORD PTR [eax+edi*8-0x36],edi
  423f47:	mov    dh,0x94
  423f49:	(bad)  
  423f4a:	in     al,0xf3
  423f4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f4d:	mov    eax,0x41d1eecd
  423f52:	add    DWORD PTR [edx-0x37],ebp
  423f55:	jbe    0x423f5e
  423f57:	sbb    al,0x15
  423f59:	arpl   bx,dx
  423f5b:	xchg   ebx,eax
  423f5c:	cld    
  423f5d:	(bad)  
  423f5e:	xor    al,0x1b
  423f60:	and    al,0x38
  423f62:	sbb    al,0x97
  423f64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f65:	adc    BYTE PTR [eax+0x5c],0x6d
  423f69:	dec    ebx
  423f6a:	xor    esp,DWORD PTR [edx+0x1b]
  423f6d:	loop   0x423f15
  423f6f:	mov    DWORD PTR [edx+0x2ef4213b],eax
  423f75:	scas   al,BYTE PTR es:[edi]
  423f76:	push   ebx
  423f77:	sbb    cl,BYTE PTR [esi-0xa]
  423f7a:	xor    al,0x78
  423f7c:	xchg   BYTE PTR [esi-0xa36336a],al
  423f82:	lods   eax,DWORD PTR ds:[esi]
  423f83:	arpl   WORD PTR [ebx+0x3aa4c139],sp
  423f89:	lods   al,BYTE PTR ds:[esi]
  423f8a:	cld    
  423f8b:	ds push 0xffffffa9
  423f8e:	xchg   esi,eax
  423f8f:	ja     0x423f62
  423f91:	sahf   
  423f92:	dec    eax
  423f93:	fadd   DWORD PTR [ebx+0x68aea76d]
  423f99:	cmp    bl,bh
  423f9b:	pop    esi
  423f9c:	sub    DWORD PTR [edx+0x3246d66a],esp
  423fa2:	mov    dh,0x10
  423fa4:	add    eax,0xcd886d77
  423fa9:	xchg   edx,eax
  423faa:	cmp    eax,0x4f28d726
  423faf:	or     eax,ebx
  423fb1:	xor    al,0xa
  423fb3:	outs   dx,BYTE PTR ds:[esi]
  423fb4:	sub    ebx,DWORD PTR [edi]
  423fb6:	mov    cl,0x81
  423fb8:	dec    esi
  423fb9:	mov    ds:0xe7474f37,al
  423fbe:	outs   dx,BYTE PTR ds:[esi]
  423fbf:	fmul   QWORD PTR ds:0xc8d0ff87
  423fc5:	loope  0x423f61
  423fc7:	push   edi
  423fc8:	mov    ds:0x44476631,eax
  423fcd:	xor    edi,DWORD PTR [ebp+0x70]
  423fd0:	push   esi
  423fd1:	cmp    al,0xf6
  423fd3:	cmp    esi,edx
  423fd5:	inc    edx
  423fd6:	out    dx,eax
  423fd7:	jle    0x423f83
  423fd9:	sub    dl,BYTE PTR [ebp+0x8]
  423fdc:	pop    esp
  423fdd:	push   cs
  423fde:	je     0x423fbd
  423fe0:	scas   eax,DWORD PTR es:[edi]
  423fe1:	jnp    0x42400b
  423fe3:	dec    edx
  423fe4:	imul   ebp,DWORD PTR [ebx+ebp*1],0x339a47cd
  423feb:	iret   
  423fec:	dec    ebp
  423fed:	jb     0x423fe5
  423fef:	xchg   edx,eax
  423ff0:	xchg   edi,eax
  423ff1:	in     eax,dx
  423ff2:	xchg   edi,eax
  423ff3:	repz sbb dl,BYTE PTR [ebp+0x10e6d4a6]
  423ffa:	in     eax,dx
  423ffb:	(bad)  
  423ffc:	(bad)  
  423ffd:	mov    ecx,0x11ff6750
  424002:	add    eax,0x2ca1aa2d
  424007:	repnz (bad) 
  424009:	jno    0x424029
  42400b:	pop    edi
  42400c:	mov    ds:0x239d63b5,eax
  424011:	xor    ch,bh
  424013:	adc    BYTE PTR [eax],0x80
  424016:	dec    ebx
  424017:	push   ebp
  424018:	or     DWORD PTR [ebx-0x7f],ebp
  42401b:	enter  0xde4f,0xc7
  42401f:	loope  0x423fc2
  424021:	cwde   
  424022:	stos   BYTE PTR es:[edi],al
  424023:	xchg   ebp,eax
  424024:	ds push es
  424026:	dec    edi
  424027:	jmp    0x424058
  424029:	shr    BYTE PTR ds:0x3ae099b7,cl
  42402f:	mov    ebx,DWORD PTR [eax-0x39]
  424032:	push   ds
  424033:	mov    eax,0xe9a3a36e
  424038:	or     BYTE PTR [ecx],ch
  42403a:	jg     0x4240a8
  42403c:	sbb    ch,BYTE PTR [ebp-0x5f]
  42403f:	sub    al,0x84
  424041:	push   cs
  424042:	cmc    
  424043:	cmp    eax,0xdb53e96a
  424048:	mov    eax,0x29d9b64f
  42404d:	ror    bl,cl
  42404f:	mov    ch,0x9
  424051:	aas    
  424052:	fs push edi
  424054:	mov    dh,0x1f
  424056:	ins    BYTE PTR es:[edi],dx
  424057:	xor    eax,0xcf28f4d7
  42405c:	inc    edi
  42405d:	cs aad 0xf1
  424060:	cld    
  424061:	mov    al,ds:0x169e274c
  424066:	jmp    0x7472543
  42406b:	jmp    0xf51f:0x223f338d
  424072:	push   cs
  424073:	aad    0xd
  424075:	and    bh,ah
  424077:	out    dx,al
  424078:	inc    ecx
  424079:	rcl    DWORD PTR es:[ecx],0x6f
  42407d:	lds    esp,FWORD PTR [ecx+0x67]
  424080:	add    ah,bl
  424082:	mov    esi,DWORD PTR [edx]
  424084:	adc    ebx,edi
  424086:	mov    edx,DWORD PTR [edx]
  424088:	dec    edx
  424089:	in     eax,0xee
  42408b:	cs cmc 
  42408d:	test   BYTE PTR [ecx+0x44],al
  424090:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424091:	sti    
  424092:	push   cs
  424093:	stos   DWORD PTR es:[edi],eax
  424094:	cmc    
  424095:	mov    ah,0x8e
  424097:	dec    eax
  424098:	mov    ah,0x54
  42409a:	stos   DWORD PTR es:[edi],eax
  42409b:	xor    ah,BYTE PTR [esi+0x16a0c62e]
  4240a1:	jno    0x42406e
  4240a3:	stc    
  4240a4:	lods   al,BYTE PTR ss:[esi]
  4240a6:	dec    edi
  4240a7:	rcl    BYTE PTR [ebp-0x2f055f79],1
  4240ad:	gs int 0x48
  4240b0:	adc    DWORD PTR [esp+ebp*2],ecx
  4240b3:	dec    ebp
  4240b4:	scas   al,BYTE PTR es:[edi]
  4240b5:	mov    bl,0x44
  4240b7:	gs mov edx,0xc8a219a6
  4240bd:	mov    cl,0xf2
  4240bf:	(bad)  
  4240c0:	jnp    0x424084
  4240c2:	xchg   ebx,eax
  4240c3:	push   ebp
  4240c4:	andnps xmm5,XMMWORD PTR [edi+0x73afd5a9]
  4240cb:	pop    es
  4240cc:	inc    ecx
  4240cd:	add    al,0xb5
  4240cf:	cmp    al,0xc9
  4240d1:	mov    ebp,0xf17dfcfc
  4240d6:	cdq    
  4240d7:	pop    eax
  4240d8:	adc    al,0x38
  4240da:	push   0x6
  4240dc:	lods   eax,DWORD PTR ds:[esi]
  4240dd:	(bad)  
  4240de:	leave  
  4240df:	jne    0x42407c
  4240e1:	mov    al,ds:0x4bb925e8
  4240e6:	xchg   esp,esi
  4240e8:	lea    esi,[ecx-0x3d]
  4240eb:	xchg   ebx,eax
  4240ec:	lds    ebp,FWORD PTR [ebx]
  4240ee:	inc    eax
  4240ef:	or     al,0x75
  4240f1:	iret   
  4240f2:	mov    dh,0x79
  4240f4:	clc    
  4240f5:	pop    edx
  4240f6:	xor    eax,0x7924dd4a
  4240fb:	sbb    esp,ecx
  4240fd:	cmp    edi,DWORD PTR [edx]
  4240ff:	(bad)  [edx+0x22c837e5]
  424105:	jl     0x424178
  424107:	jne    0x4240b6
  424109:	cmp    ebp,DWORD PTR [edi+0x2e]
  42410c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42410d:	pop    eax
  42410e:	and    al,0x33
  424110:	pusha  
  424111:	dec    esp
  424112:	out    0x27,eax
  424114:	push   ebx
  424115:	mov    ds:0x1f5524f2,al
  42411a:	adc    esi,DWORD PTR [ebp-0x74d7bdc9]
  424120:	xchg   ecx,eax
  424121:	into   
  424122:	cmp    DWORD PTR [esi],0xf840c7b1
  424128:	cmp    DWORD PTR [ecx+0x72e5e976],eax
  42412e:	xchg   BYTE PTR [edi-0x13],bl
  424131:	xchg   ecx,eax
  424132:	ins    DWORD PTR es:[edi],dx
  424133:	xor    dl,cl
  424135:	cwde   
  424136:	add    cl,cl
  424138:	xchg   esi,eax
  424139:	xchg   edx,eax
  42413a:	xchg   edi,eax
  42413b:	push   es
  42413c:	sbb    al,0x52
  42413e:	(bad)  
  42413f:	ins    DWORD PTR es:[edi],dx
  424140:	arpl   WORD PTR [edx-0x575b2282],sp
  424146:	xor    DWORD PTR [edi],ebx
  424148:	and    BYTE PTR [ecx+0x7e],bl
  42414b:	data16 rcr BYTE PTR [esi],1
  42414e:	add    DWORD PTR [esi],ebp
  424150:	in     al,dx
  424151:	mov    cl,0xc6
  424153:	shr    ebx,1
  424155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424156:	iret   
  424157:	cld    
  424158:	xor    bl,BYTE PTR [edi-0x41]
  42415b:	test   al,0xf1
  42415d:	stos   BYTE PTR es:[edi],al
  42415e:	lock jmp 0x59d:0x9cdabb6f
  424166:	dec    ebp
  424167:	or     esp,esp
  424169:	adc    al,0xf0
  42416b:	out    0x9d,eax
  42416d:	(bad)  
  42416e:	fs push cs
  424170:	das    
  424171:	ret    
  424172:	fwait
  424173:	pop    ebp
  424174:	ins    BYTE PTR es:[edi],dx
  424175:	lahf   
  424176:	jge    0x424141
  424178:	lahf   
  424179:	jecxz  0x4240fb
  42417b:	daa    
  42417c:	mov    ah,0x92
  42417e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42417f:	or     cl,BYTE PTR ss:[ecx]
  424182:	and    al,0x66
  424184:	mov    edx,0xa52c49
  424189:	and    eax,0x465f8df7
  42418e:	imul   ebp,DWORD PTR [eax-0x14],0xffffffe4
  424192:	hlt    
  424193:	mov    esp,0x8bf9784c
  424198:	pop    ebp
  424199:	rcr    BYTE PTR [esp+esi*2+0x369be685],1
  4241a0:	retf   0x4e70
  4241a3:	and    BYTE PTR [ebx+0x32d2120d],bh
  4241a9:	pop    esp
  4241aa:	nop
  4241ab:	arpl   si,bx
  4241ad:	in     eax,0xab
  4241af:	or     dh,BYTE PTR [esi+0x1a9324c7]
  4241b5:	sbb    ebp,ebx
  4241b7:	adc    BYTE PTR [eax+edi*2],cl
  4241ba:	and    dh,BYTE PTR ss:0x55f08cac
  4241c1:	lods   eax,DWORD PTR ds:[esi]
  4241c2:	pop    es
  4241c3:	std    
  4241c4:	rcl    DWORD PTR [ecx-0x58],1
  4241c7:	mov    eax,ds:0xfeba327d
  4241cc:	or     esp,eax
  4241ce:	fistp  DWORD PTR cs:[edx+0xa]
  4241d2:	hlt    
  4241d3:	sbb    al,0x22
  4241d5:	fadd   DWORD PTR [edi]
  4241d7:	mov    WORD PTR [ebx-0x5197ba2f],ds
  4241dd:	test   al,0x50
  4241df:	mov    bl,0x69
  4241e1:	jbe    0x4241b4
  4241e3:	add    eax,0xa094065e
  4241e8:	xchg   DWORD PTR [edi-0x66],ecx
  4241eb:	fwait
  4241ec:	cmp    DWORD PTR [eax],ecx
  4241ee:	xor    ecx,edi
  4241f0:	and    bh,dh
  4241f2:	xchg   ecx,eax
  4241f3:	mov    DWORD PTR [ebp+eiz*2-0x2b],ebp
  4241f7:	sub    ecx,0xffffffd4
  4241fa:	(bad)  
  4241fb:	fdivr  QWORD PTR [ebp+0x1bc0c48d]
  424201:	jno    0x424239
  424203:	loopne 0x424274
  424205:	sub    esi,DWORD PTR [ebp+0x38]
  424208:	cmp    eax,0xe7a74f4f
  42420d:	add    BYTE PTR [ebx+0x268cae58],cl
  424213:	popf   
  424214:	xchg   edi,eax
  424215:	push   esi
  424216:	(bad)  
  424217:	addr16 pushf 
  424219:	or     eax,0x8875cdcc
  42421e:	inc    esp
  42421f:	lods   al,BYTE PTR ds:[esi]
  424220:	fisttp WORD PTR [edi+0x4c664cb7]
  424226:	adc    dh,ah
  424228:	xchg   esp,eax
  424229:	shl    DWORD PTR [ebx],0xbb
  42422c:	sub    ch,BYTE PTR [ecx-0x58]
  42422f:	mov    esp,0x9444ae1e
  424234:	adc    DWORD PTR ss:[edi],ebp
  424237:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424238:	jle    0x424282
  42423a:	repnz rcl DWORD PTR [ebp-0x4096ec9b],0xde
  424242:	ret    0x57f1
  424245:	(bad)  
  424246:	jnp    0x424291
  424248:	cdq    
  424249:	sbb    DWORD PTR [ebx],eax
  42424b:	shl    DWORD PTR [eax],0xaf
  42424e:	mov    bh,0x80
  424250:	dec    edx
  424251:	jne    0x42425e
  424253:	int3   
  424254:	(bad)
  424258:	jmp    0x8bb0:0x21eec783
  42425f:	in     eax,dx
  424260:	ins    BYTE PTR es:[edi],dx
  424261:	out    0x89,eax
  424263:	jp     0x4242d9
  424265:	mov    BYTE PTR ds:0xb8c08a16,dl
  42426b:	cmp    ah,bh
  42426d:	pop    ebp
  42426e:	retf   
  42426f:	loopne 0x424209
  424271:	sbb    eax,0xf25635d8
  424276:	and    ah,al
  424278:	std    
  424279:	and    BYTE PTR [ebx+0x5b],dh
  42427c:	xor    al,0x7a
  42427e:	adc    dl,BYTE PTR [ebp+0x3416ac3f]
  424284:	and    DWORD PTR [edi+0x466f9cf8],esp
  42428a:	jae    0x4242b8
  42428c:	neg    esp
  42428e:	shl    DWORD PTR [ecx-0x29],cl
  424291:	sub    dl,BYTE PTR [edi]
  424293:	xchg   edi,eax
  424294:	sub    BYTE PTR [ebp-0x7452dc97],bh
  42429a:	jge    0x424312
  42429c:	sbb    DWORD PTR [eax+ebx*2],eax
  42429f:	xchg   esi,eax
  4242a0:	mov    BYTE PTR [eax],al
  4242a2:	cli    
  4242a3:	std    
  4242a4:	ret    
  4242a5:	rol    DWORD PTR [esi],0x26
  4242a8:	pop    esi
  4242a9:	mov    edi,0x61aac269
  4242ae:	push   esi
  4242af:	push   eax
  4242b0:	out    0xaa,al
  4242b2:	add    al,0x8f
  4242b4:	adc    BYTE PTR [ebx-0x37c2aa36],dh
  4242ba:	pushf  
  4242bb:	mov    dh,0x68
  4242bd:	in     eax,0xf8
  4242bf:	xchg   BYTE PTR [ecx],bl
  4242c1:	gs sti 
  4242c3:	iret   
  4242c4:	loop   0x42433a
  4242c6:	or     ah,bl
  4242c8:	sub    BYTE PTR [edi+0x2a],dh
  4242cb:	mov    BYTE PTR [edx],ch
  4242cd:	nop
  4242ce:	xlat   BYTE PTR ds:[ebx]
  4242cf:	mov    eax,ds:0x998c0c78
  4242d4:	popw   ss
  4242d6:	shl    DWORD PTR [eax-0x159a237b],0x50
  4242dd:	call   0xc0aa:0xe69c18b6
  4242e4:	dec    esi
  4242e5:	aad    0xdd
  4242e7:	out    dx,al
  4242e8:	and    bh,BYTE PTR [edx-0x68]
  4242eb:	jno    0x42431b
  4242ed:	or     di,WORD PTR [edx]
  4242f0:	and    DWORD PTR [esi],ecx
  4242f2:	mov    edx,0xb966d357
  4242f7:	(bad)  [edx+eax*1+0x4f]
  4242fb:	loope  0x424340
  4242fd:	stc    
  4242fe:	pusha  
  4242ff:	mov    dl,0x53
  424301:	xor    cl,BYTE PTR es:[ecx+0x7ce621af]
  424308:	sub    al,0x6c
  42430a:	test   eax,0x254c51e9
  42430f:	jmp    0x424361
  424311:	jae    0x42429e
  424313:	pop    edi
  424314:	mov    bx,0xcb49
  424318:	add    bl,0x19
  42431b:	daa    
  42431c:	inc    ebp
  42431d:	pop    edi
  42431e:	cld    
  42431f:	lahf   
  424320:	ret    
  424321:	and    edi,eax
  424323:	jbe    0x4243a3
  424325:	shr    DWORD PTR [esi-0x65b035af],0x24
  42432c:	stos   DWORD PTR es:[edi],eax
  42432d:	push   esp
  42432e:	dec    edi
  42432f:	xor    ch,ah
  424331:	ins    BYTE PTR es:[edi],dx
  424332:	cdq    
  424333:	mov    al,ah
  424335:	sbb    eax,0x11
  424338:	or     al,0x12
  42433a:	in     eax,dx
  42433b:	sub    BYTE PTR [edx],ch
  42433d:	nop
  42433e:	lahf   
  42433f:	jmp    0x4243a5
  424341:	bound  ebp,QWORD PTR [edx-0x7684c3f8]
  424347:	xchg   ebx,eax
  424348:	pop    ebx
  424349:	pop    esp
  42434a:	pop    eax
  42434b:	xor    ecx,edi
  42434d:	lock inc esp
  42434f:	cmc    
  424350:	cmc    
  424351:	loop   0x424346
  424353:	cmp    ch,BYTE PTR [esp+eiz*4+0x1b]
  424357:	mov    esi,0xca6b83e1
  42435c:	sbb    esi,ecx
  42435e:	jbe    0x42436e
  424360:	or     DWORD PTR [ebx],edx
  424362:	not    BYTE PTR [esi+edi*1-0x47e066b5]
  424369:	inc    edi
  42436a:	mov    eax,ds:0xd8277800
  42436f:	call   0x62b08a70
  424374:	sub    ecx,DWORD PTR [eax+0x0]
  424377:	sub    DWORD PTR ds:0xcc1a8e87,0xffffffb0
  42437e:	js     0x4243a5
  424380:	inc    esp
  424381:	xchg   ebp,eax
  424382:	or     dl,BYTE PTR [ebx-0x60]
  424385:	sbb    BYTE PTR [ebp+eiz*2-0x10da850c],ah
  42438c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42438d:	dec    ecx
  42438e:	(bad)  
  42438f:	jmp    0x2069f1e0
  424394:	and    DWORD PTR [edi],eax
  424396:	bound  ebp,QWORD PTR [edi]
  424398:	pop    ebp
  424399:	fnsave [edi-0x7a0759b]
  42439f:	add    BYTE PTR [edx+0x487da893],cl
  4243a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4243a6:	mov    WORD PTR [edi-0x4a],ds
  4243a9:	dec    edi
  4243aa:	rcl    BYTE PTR [ebp-0x4e],cl
  4243ad:	jo     0x424382
  4243af:	(bad)  
  4243b0:	cmp    eax,0x743eebd
  4243b5:	loopne 0x424344
  4243b7:	repnz add cl,BYTE PTR [ecx]
  4243ba:	mov    ebx,edi
  4243bc:	loope  0x424351
  4243be:	(bad)  
  4243bf:	test   esp,0xb9328848
  4243c5:	icebp  
  4243c6:	ret    0xfa44
  4243c9:	inc    ebx
  4243ca:	pop    ecx
  4243cb:	fimul  DWORD PTR [eax+0x7d]
  4243ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4243cf:	daa    
  4243d0:	push   ds
  4243d1:	jmp    FWORD PTR [esi+esi*4-0x20c0066f]
  4243d8:	jns    0x42443d
  4243da:	jp     0x4243fe
  4243dc:	push   ebp
  4243dd:	mov    es:0xf82ab0cc,eax
  4243e3:	stos   DWORD PTR es:[edi],eax
  4243e4:	shl    DWORD PTR [ecx],cl
  4243e6:	cmp    edi,esi
  4243e8:	js     0x4243ef
  4243ea:	cdq    
  4243eb:	and    edi,DWORD PTR [ebx]
  4243ed:	arpl   di,bp
  4243ef:	jl     0x4243df
  4243f1:	mov    DWORD PTR [esi],0x4553e70a
  4243f7:	mov    dh,0x2e
  4243f9:	mov    dl,0xda
  4243fb:	fwait
  4243fc:	sub    esi,edx
  4243fe:	aam    0x50
  424400:	pop    ebp
  424401:	or     BYTE PTR [eax],0xa6
  424404:	addr16 inc esp
  424406:	mov    ds:0x44bfca42,al
  42440b:	inc    esp
  42440c:	mov    ds:0x7f9ba1,eax
  424411:	or     BYTE PTR [eax],ch
  424413:	sub    BYTE PTR ds:[eax-0x12616cb0],ah
  42441a:	es test bh,bh
  42441d:	add    BYTE PTR [eax],al
  42441f:	add    BYTE PTR [eax],al
  424421:	add    BYTE PTR [edx+ebx*8],ch
  424424:	iret   
  424425:	cmp    bh,0x95
  424428:	outs   dx,DWORD PTR ds:[esi]
  424429:	(bad)  
  42442a:	jecxz  0x4243f5
  42442c:	push   ds
  42442d:	ins    DWORD PTR es:[edi],dx
  42442e:	shl    DWORD PTR [eax],cl
  424430:	sbb    ch,cl
  424432:	push   ss
  424433:	mov    ebp,0x4f30001
  424438:	add    BYTE PTR [eax],al
  42443a:	inc    esp
  42443b:	jg     0x424450
  42443d:	mov    bl,bl
  42443f:	inc    esi
  424440:	popf   
  424441:	shl    BYTE PTR [edi],0x97
  424444:	push   es
  424445:	jno    0x424491
  424447:	jne    0x4243d1
  424449:	cwde   
  42444a:	push   ebx
  42444b:	jae    0x424433
  42444d:	pop    eax
  42444e:	adc    al,BYTE PTR [ecx-0x61621e5d]
  424454:	add    eax,0x85f4d23d
  424459:	retf   0x4362
  42445c:	call   0xdfc94b05
  424461:	pop    ebp
  424462:	adc    ch,BYTE PTR [edi]
  424464:	add    eax,0x4e92b862
  424469:	push   esi
  42446a:	scas   eax,DWORD PTR es:[edi]
  42446b:	mov    edx,0xdbbdb1b1
  424470:	lods   al,BYTE PTR ds:[esi]
  424471:	or     DWORD PTR [esi-0x5],esi
  424474:	pushf  
  424475:	test   eax,0xd4654b9d
  42447a:	bsr    edi,eax
  42447d:	and    BYTE PTR [edx-0xf4dc238],ah
  424483:	mov    eax,ds:0x586f913e
  424488:	in     al,0xd9
  42448a:	cld    
  42448b:	lods   al,BYTE PTR ds:[esi]
  42448c:	shl    ah,1
  42448e:	cmp    DWORD PTR [ecx-0x6cff58bf],edi
  424494:	loope  0x424509
  424496:	add    DWORD PTR [ecx-0x1b],ebp
  424499:	pop    esp
  42449a:	inc    BYTE PTR [ecx+0x71b32dd7]
  4244a0:	or     al,0x60
  4244a2:	xchg   edx,eax
  4244a3:	bound  ebp,QWORD PTR [edi-0x62]
  4244a6:	sub    BYTE PTR [esi-0x23634e02],ch
  4244ac:	loopne 0x42449f
  4244ae:	call   0xf69c082e
  4244b3:	dec    esp
  4244b4:	lea    ebx,[edi-0x16482396]
  4244ba:	aas    
  4244bb:	retf   
  4244bc:	mov    cl,BYTE PTR [edx]
  4244be:	out    0x42,eax
  4244c0:	or     ebp,DWORD PTR [edi-0x4a]
  4244c3:	add    BYTE PTR [edi-0x511e1d2a],0x91
  4244ca:	push   ds
  4244cb:	(bad)  
  4244cc:	scas   eax,DWORD PTR es:[edi]
  4244cd:	fdiv   st(2),st
  4244cf:	dec    ebp
  4244d0:	inc    edi
  4244d1:	xor    BYTE PTR [edx-0x5e95e678],dl
  4244d7:	imul   eax,ebp,0xfffffff7
  4244da:	push   ss
  4244db:	and    eax,0xbf3702c7
  4244e0:	and    BYTE PTR [edi-0x47],bh
  4244e3:	inc    esp
  4244e4:	out    dx,al
  4244e5:	jge    0x424469
  4244e7:	(bad)  
  4244e8:	clc    
  4244e9:	daa    
  4244ea:	arpl   bp,bp
  4244ec:	shl    DWORD PTR [ebx+0x3c523386],1
  4244f2:	pop    esi
  4244f3:	mov    bh,0x75
  4244f5:	xchg   ebp,eax
  4244f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4244f7:	adc    BYTE PTR ds:0x6bf748e5,al
  4244fd:	stc    
  4244fe:	mov    WORD PTR [ecx+0x2],fs
  424501:	xor    al,0xd3
  424503:	outs   dx,BYTE PTR ds:[esi]
  424504:	retf   0xf781
  424507:	fisttp DWORD PTR [esi]
  424509:	mov    eax,0x85ce91b6
  42450e:	dec    edx
  42450f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424510:	pop    esp
  424511:	cmp    BYTE PTR [esi],0xf0
  424514:	mov    edi,0x9f6c5270
  424519:	fild   WORD PTR [eax+0x11]
  42451c:	int    0x68
  42451e:	ja     0x42458f
  424520:	aas    
  424521:	loope  0x424568
  424523:	add    BYTE PTR [ebp-0x1a],ch
  424526:	dec    ebp
  424527:	xor    ebx,DWORD PTR [ebx]
  424529:	fdivr  QWORD PTR [edi-0xb]
  42452c:	call   0xa5f5:0x7ce46b02
  424533:	sub    cl,BYTE PTR [edi-0x3f5f2835]
  424539:	cmp    DWORD PTR [ecx-0x54],ebx
  42453c:	repz dec eax
  42453e:	lock dec ebp
  424540:	sar    BYTE PTR [edi+0x38],0x88
  424544:	into   
  424545:	or     al,0x3c
  424547:	pop    si
  424549:	scas   al,BYTE PTR es:[edi]
  42454a:	repnz inc esp
  42454c:	xchg   edi,eax
  42454d:	sub    bl,dh
  42454f:	jno    0x42458d
  424551:	scas   al,BYTE PTR es:[edi]
  424552:	pop    edi
  424553:	xor    bh,BYTE PTR [ebp+0x6d]
  424556:	or     eax,DWORD PTR [edx+eiz*2]
  424559:	pop    es
  42455a:	sbb    al,0xba
  42455c:	cmp    BYTE PTR [ecx-0x1],0x81
  424560:	dec    ebp
  424561:	dec    esi
  424562:	adc    al,0xbd
  424564:	int    0x7d
  424566:	xor    BYTE PTR [edx],dh
  424568:	fbstp  TBYTE PTR ds:0xc91dd9f9
  42456e:	int3   
  42456f:	pusha  
  424570:	inc    ebx
  424571:	xor    BYTE PTR [esi+0x18cb3a45],bl
  424577:	xchg   ebx,eax
  424578:	pop    edi
  424579:	add    eax,0x6bf18e9a
  42457e:	pop    esp
  42457f:	sbb    BYTE PTR [eax+edi*2],ch
  424582:	add    esi,DWORD PTR [edi]
  424584:	ins    DWORD PTR es:[edi],dx
  424585:	std    
  424586:	in     eax,dx
  424587:	mov    ebx,0x20a6692c
  42458c:	pop    es
  42458d:	or     BYTE PTR [edi+0x36781cc8],bh
  424593:	shl    ebp,0x11
  424596:	xchg   BYTE PTR [ebp+0xb39e18e],al
  42459c:	and    BYTE PTR [ecx+ebx*2+0x78],cl
  4245a0:	mov    eax,0xc4320482
  4245a5:	inc    ecx
  4245a6:	lahf   
  4245a7:	xlat   BYTE PTR ds:[ebx]
  4245a8:	enter  0xed1a,0x87
  4245ac:	(bad)  
  4245ad:	adc    edi,DWORD PTR [edi+0x3c]
  4245b0:	pop    ebx
  4245b1:	ss jge 0x424572
  4245b4:	jp     0x4245bf
  4245b6:	jle    0x42462c
  4245b8:	ins    BYTE PTR es:[edi],dx
  4245b9:	aad    0xaa
  4245bb:	inc    ebp
  4245bc:	into   
  4245bd:	sub    eax,0x1a354f97
  4245c2:	cmp    ebx,eax
  4245c4:	outs   dx,BYTE PTR ds:[esi]
  4245c5:	repz aam 0xe8
  4245c8:	sub    dl,BYTE PTR [ebx-0x45329e7e]
  4245ce:	idiv   BYTE PTR [ecx-0x73]
  4245d1:	jns    0x42456d
  4245d3:	add    al,bh
  4245d5:	xor    eax,0xb6df256
  4245da:	push   ebx
  4245db:	jge    0x424604
  4245dd:	cmp    dh,BYTE PTR [edx-0x3280d2b0]
  4245e3:	out    0xf1,al
  4245e5:	inc    ebp
  4245e6:	iret   
  4245e7:	sub    al,0xbd
  4245e9:	mov    ebp,0x9cd90951
  4245ee:	jns    0x424656
  4245f0:	out    0x48,eax
  4245f2:	outs   dx,DWORD PTR ds:[esi]
  4245f3:	mov    ebp,0xa73e2f44
  4245f8:	or     DWORD PTR [edx+0x78],esi
  4245fb:	hlt    
  4245fc:	mov    ebp,0x4242f140
  424601:	ror    cl,1
  424603:	jne    0x42464e
  424605:	(bad)  
  424606:	sub    BYTE PTR es:[ebx*8+0xe048c04],ch
  42460e:	aaa    
  42460f:	jns    0x4245cb
  424611:	mov    edi,0xdf2c0383
  424616:	sahf   
  424617:	mov    dh,0x40
  424619:	xchg   ecx,eax
  42461a:	iret   
  42461b:	push   es
  42461c:	(bad)  
  42461d:	cs cli 
  42461f:	inc    edi
  424620:	aad    0xb4
  424622:	enter  0xb0e1,0x4d
  424626:	pop    eax
  424627:	mov    ecx,es
  424629:	test   BYTE PTR [ecx+edx*1-0x64],al
  42462d:	mov    ebp,0x5084fa07
  424632:	xor    DWORD PTR [edx-0x1a],edi
  424635:	xor    eax,0x6e73c31f
  42463a:	cld    
  42463b:	gs mov edi,0xf4b3f81b
  424641:	xor    eax,0x1f7b40c6
  424646:	or     eax,0x1c2cda65
  42464b:	cmp    eax,0xe048a82
  424650:	sbb    DWORD PTR [esi+edi*2],esi
  424653:	add    edx,DWORD PTR [eax]
  424655:	jp     0x4245f4
  424657:	outs   dx,BYTE PTR ds:[esi]
  424658:	test   DWORD PTR [ebp+0x61f19d16],ecx
  42465e:	div    DWORD PTR [esi-0x6c]
  424661:	mov    eax,0x841e50f
  424666:	mov    ds:0xb044f7c5,eax
  42466b:	push   ebx
  42466c:	mov    dl,0x10
  42466e:	mov    ebp,0xe42ef819
  424673:	popf   
  424674:	jae    0x424665
  424676:	mov    dh,0x72
  424678:	mov    cl,BYTE PTR [eax+edx*2]
  42467b:	repz cmps BYTE PTR ds:[si],BYTE PTR es:[di]
  42467e:	fimul  WORD PTR [ebx+0x38e704d6]
  424684:	dec    eax
  424685:	mov    bl,0x82
  424687:	xor    DWORD PTR [ecx-0x80],ebp
  42468a:	mov    ecx,0x9d0f9dd1
  42468f:	mov    bl,0x8e
  424691:	repnz adc dl,BYTE PTR [eax]
  424694:	cs (bad) 
  424697:	test   dh,bl
  424699:	fadd   DWORD PTR [edi-0x38]
  42469c:	mov    edi,0x37c38ed6
  4246a1:	fdiv   QWORD PTR [eax+0x5498aa39]
  4246a7:	sbb    BYTE PTR [edi+ebp*4-0x555f82e2],bh
  4246ae:	mov    bl,0x4d
  4246b0:	jnp    0x42464b
  4246b2:	xor    al,0xc8
  4246b4:	jae    0x42471b
  4246b6:	in     eax,dx
  4246b7:	les    ebp,FWORD PTR [eax-0x79812966]
  4246bd:	mov    ebp,0x73892ca
  4246c2:	call   0xa2816e23
  4246c7:	jns    0x42472f
  4246c9:	pushf  
  4246ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246cb:	lahf   
  4246cc:	lock mov fs,edi
  4246cf:	dec    edx
  4246d0:	js     0x424711
  4246d2:	fdiv   QWORD PTR [eax]
  4246d4:	xchg   ebx,eax
  4246d5:	mov    bh,0x35
  4246d7:	ret    
  4246d8:	jmp    0xb4c2d3cf
  4246dd:	in     eax,0xb0
  4246df:	pop    esp
  4246e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4246e1:	xchg   esp,eax
  4246e2:	xor    eax,0xbf755b41
  4246e7:	int    0x0
  4246e9:	pop    ss
  4246ea:	aas    
  4246eb:	js     0x424746
  4246ed:	and    al,0xa6
  4246ef:	and    ebx,DWORD PTR [ebx]
  4246f1:	iret   
  4246f2:	xor    DWORD PTR [edx],esp
  4246f4:	push   edx
  4246f5:	sbb    esp,DWORD PTR [ebp-0x7c97c448]
  4246fb:	cmp    DWORD PTR [edx-0x42],ebp
  4246fe:	dec    esp
  4246ff:	sub    DWORD PTR [edx+0x5a],esi
  424702:	stc    
  424703:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424704:	and    ch,BYTE PTR [ebx]
  424706:	and    DWORD PTR [ebp-0x5c7f6442],0xffffffde
  42470d:	hlt    
  42470e:	jne    0x42470f
  424710:	outs   dx,BYTE PTR ds:[esi]
  424711:	xor    ebp,eax
  424713:	pusha  
  424714:	test   BYTE PTR [ecx-0x42],dl
  424717:	add    bl,BYTE PTR [ebx-0x1fc709d6]
  42471d:	enter  0x74a1,0x6
  424721:	sbb    al,0xf9
  424723:	pop    ebx
  424724:	push   es
  424725:	dec    edx
  424726:	inc    esp
  424727:	and    ch,BYTE PTR [edx+0x28cdcb3d]
  42472d:	mov    dh,BYTE PTR [eax]
  42472f:	jbe    0x424700
  424731:	stc    
  424732:	xor    DWORD PTR [ebp-0x16e885b2],0x55
  424739:	call   0xb21c:0xf0489401
  424740:	and    al,0x77
  424742:	aam    0x5b
  424744:	add    BYTE PTR [ebx],dh
  424746:	and    al,0xf3
  424748:	xchg   DWORD PTR ds:0x23d62733,ebx
  42474e:	pusha  
  42474f:	out    dx,eax
  424750:	mov    ds:0x2e7a49ac,al
  424755:	je     0x4246da
  424757:	arpl   ax,dx
  424759:	or     ah,BYTE PTR [ebp+edx*2+0x60]
  42475d:	repnz aam 0xf4
  424760:	xchg   DWORD PTR [esi-0x54],edi
  424763:	xor    dh,bh
  424765:	into   
  424766:	(bad)  
  424767:	std    
  424768:	adc    DWORD PTR ss:[ecx],ecx
  42476b:	pop    esi
  42476c:	out    dx,al
  42476d:	lock cli 
  42476f:	jne    0x4247c1
  424771:	fs xchg ebx,eax
  424773:	mov    ecx,0x87237f88
  424778:	xor    DWORD PTR [ecx+0xc],ecx
  42477b:	xchg   edi,eax
  42477c:	cdq    
  42477d:	sbb    BYTE PTR ds:[ebp-0x23],ch
  424781:	sbb    esi,ecx
  424783:	sbb    DWORD PTR [esi-0x66],ecx
  424786:	mov    al,ds:0xb8667eb7
  42478b:	std    
  42478c:	mov    ebx,edx
  42478e:	dec    esi
  42478f:	adc    edi,DWORD PTR [ebx+0x7b]
  424792:	je     0x4247c1
  424794:	cmp    eax,esi
  424796:	xchg   edx,eax
  424797:	test   BYTE PTR [edi+0x15],0x73
  42479b:	icebp  
  42479c:	sar    DWORD PTR [edi+0x47d1d11e],1
  4247a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247a3:	dec    eax
  4247a4:	mov    ?,WORD PTR [edx+0x4fd5be28]
  4247aa:	lds    edi,FWORD PTR [ecx+ecx*8+0x72]
  4247ae:	mov    bh,0x91
  4247b0:	fistp  QWORD PTR [eax-0x4a]
  4247b3:	inc    edi
  4247b4:	fst    QWORD PTR [edi]
  4247b6:	mov    dl,0xf2
  4247b8:	and    edi,ebp
  4247ba:	cmp    al,dl
  4247bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247bd:	stc    
  4247be:	mov    edi,?
  4247c0:	mov    bh,0x22
  4247c2:	mov    ebp,0xfb193def
  4247c7:	jge    0x424796
  4247c9:	js     0x42476b
  4247cb:	aad    0x17
  4247cd:	xlat   BYTE PTR ds:[ebx]
  4247ce:	xor    eax,DWORD PTR [eax]
  4247d0:	hlt    
  4247d1:	jmp    0x424841
  4247d3:	jb     0x42479d
  4247d5:	and    eax,0x3ec13e3c
  4247db:	rcr    DWORD PTR [esi+0xe29d41f],1
  4247e1:	xor    dh,BYTE PTR [ecx-0x7792cd65]
  4247e7:	mov    esp,DWORD PTR [esi-0x59]
  4247ea:	out    dx,al
  4247eb:	dec    esi
  4247ec:	mov    edx,fs
  4247ee:	push   edx
  4247ef:	pop    ss
  4247f0:	or     DWORD PTR [ebp-0x37],ebx
  4247f3:	inc    ecx
  4247f4:	sub    esp,ecx
  4247f6:	mov    al,ds:0x5c88c36b
  4247fb:	dec    ebp
  4247fc:	rcr    bl,0x71
  4247ff:	and    eax,0x43d84f10
  424804:	je     0x424840
  424806:	aam    0x22
  424808:	xchg   edx,eax
  424809:	mov    al,0x3f
  42480b:	out    0x53,eax
  42480d:	shl    DWORD PTR [esp+eiz*8-0x76],0x66
  424812:	push   ebx
  424813:	mov    ch,BYTE PTR [ecx+0x38]
  424816:	or     BYTE PTR [ebx],dl
  424818:	stos   DWORD PTR es:[edi],eax
  424819:	push   ebp
  42481a:	sub    DWORD PTR [edx-0xf],ebx
  42481d:	test   eax,0xe9c7c2cc
  424822:	loop   0x4247d8
  424824:	mov    esp,0x5c37abbf
  424829:	test   eax,0xaaab045b
  42482e:	mov    DWORD PTR [ebp-0x28d52e03],esp
  424834:	out    dx,eax
  424835:	or     ebp,DWORD PTR [ebp-0x201b03b6]
  42483b:	xchg   ebx,eax
  42483c:	pop    esi
  42483d:	inc    ecx
  42483e:	mov    eax,ds:0x3876c256
  424843:	or     eax,0xc3b92810
  424848:	sbb    DWORD PTR [esi+0x5291203c],edx
  42484e:	pop    ecx
  42484f:	push   ebx
  424850:	into   
  424851:	sbb    dh,bh
  424853:	push   ds
  424854:	push   edi
  424855:	pshufw mm0,QWORD PTR [ebx],0x1
  424859:	aas    
  42485a:	outs   dx,BYTE PTR ds:[esi]
  42485b:	(bad)  [ecx-0x5e]
  42485e:	xchg   edi,eax
  42485f:	int    0xc5
  424861:	call   0x995d:0x853c974e
  424868:	in     eax,dx
  424869:	jmp    0x424812
  42486b:	xchg   edx,eax
  42486c:	add    eax,0x1697c562
  424871:	inc    ebx
  424872:	imul   ebx,esp,0xffffffa4
  424875:	(bad)  
  424876:	mov    al,0x72
  424878:	xchg   esi,eax
  424879:	in     eax,dx
  42487a:	mov    ds:0x6f00d5f0,al
  42487f:	push   eax
  424880:	xor    ch,BYTE PTR [ecx]
  424882:	aas    
  424883:	mov    ch,0xf7
  424885:	xchg   BYTE PTR [edx+edi*4-0x1e],ch
  424889:	and    BYTE PTR [esp+eiz*8+0x1d763093],dh
  424890:	out    dx,eax
  424891:	inc    edx
  424892:	pop    es
  424893:	(bad)  
  424894:	outs   dx,BYTE PTR ds:[esi]
  424895:	fwait
  424896:	adc    DWORD PTR [ecx-0x41fbc76a],ecx
  42489c:	fsubr  DWORD PTR [edx-0x1a]
  42489f:	in     al,dx
  4248a0:	ret    0x920c
  4248a3:	int3   
  4248a4:	mov    ch,0x9c
  4248a6:	lea    ebx,[ebp+edi*4+0x5ffbee4c]
  4248ad:	push   ebx
  4248ae:	je     0x42487a
  4248b0:	sbb    DWORD PTR [ebp+ecx*2-0x7b],esp
  4248b4:	sub    edi,ebx
  4248b6:	sti    
  4248b7:	popf   
  4248b8:	inc    edx
  4248b9:	loope  0x4248a5
  4248bb:	fisttp DWORD PTR [edx]
  4248bd:	mov    bl,BYTE PTR [eax-0x5f]
  4248c0:	mov    ch,0x79
  4248c2:	movntps XMMWORD PTR [ebp+0x48faa4b0],xmm2
  4248c9:	repz pop edi
  4248cb:	daa    
  4248cc:	fcomp  QWORD PTR [esi+edx*8+0x25]
  4248d0:	push   0xffffff9a
  4248d2:	call   0x30bb:0xf2e9b2b
  4248d9:	pop    edi
  4248da:	or     ebx,esi
  4248dc:	lods   eax,DWORD PTR ds:[esi]
  4248dd:	push   0x98db787f
  4248e2:	adc    al,0xcb
  4248e4:	jae    0x424894
  4248e6:	sahf   
  4248e7:	jbe    0x424963
  4248e9:	stos   DWORD PTR es:[edi],eax
  4248ea:	jne    0x4248b6
  4248ec:	pop    ebx
  4248ed:	jmp    0x25fc:0xb809a430
  4248f4:	mov    dh,0x65
  4248f6:	push   eax
  4248f7:	aas    
  4248f8:	adc    eax,0x4de36cdb
  4248fd:	es inc eax
  4248ff:	cdq    
  424900:	mov    edi,0x4494b551
  424905:	mov    edi,0xfdf5588c
  42490a:	lock gs (bad) 
  42490d:	pop    eax
  42490e:	shr    BYTE PTR [ebp-0x1b],cl
  424911:	xchg   esp,eax
  424912:	and    esp,edi
  424914:	iret   
  424915:	dec    edx
  424916:	(bad)  
  424917:	imul   esi,DWORD PTR [edi-0x11f2dcd8],0xffffff88
  42491e:	loope  0x4248d8
  424920:	aas    
  424921:	adc    eax,0x1d4b9dd1
  424926:	push   eax
  424927:	jae    0x4248f2
  424929:	stos   BYTE PTR es:[edi],al
  42492a:	mov    bl,0x8a
  42492c:	dec    edx
  42492d:	add    BYTE PTR [eax],al
  42492f:	add    BYTE PTR [eax],al
  424931:	add    BYTE PTR [ebx],dl
  424933:	lea    ebp,[ecx]
  424935:	imul   edi,DWORD PTR [edi+0x23fd53ef],0x6b
  42493c:	fcmovnb st,st(6)
  42493e:	rcr    BYTE PTR [edi],cl
  424940:	sub    esp,edx
  424942:	or     edx,eax
  424944:	add    DWORD PTR [eax],eax
  424946:	repz add al,0x0
  424949:	add    dh,ch
  42494b:	scas   al,BYTE PTR es:[edi]
  42494c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42494d:	and    al,0xf1
  42494f:	sub    eax,0x41e14d5
  424954:	push   ecx
  424955:	test   eax,0x703e03bf
  42495a:	in     eax,dx
  42495b:	dec    ebp
  42495c:	pop    esp
  42495d:	rol    DWORD PTR gs:[ecx],0x1b
  424961:	sbb    esi,ebx
  424963:	cld    
  424964:	data16 sti 
  424966:	jg     0x42490e
  424968:	sub    BYTE PTR [ebp+0x0],dh
  42496b:	mov    esp,0xcf134704
  424970:	in     al,0xb7
  424972:	mov    esi,0x4b0c7839
  424977:	push   ebx
  424978:	mov    ds,WORD PTR [eax]
  42497a:	sbb    eax,0x450d74f1
  42497f:	outs   dx,DWORD PTR ds:[esi]
  424980:	mul    BYTE PTR [esi+0x24766b39]
  424986:	ret    
  424987:	cmp    eax,0x39e12bdc
  42498c:	(bad)  
  42498d:	outs   dx,BYTE PTR ds:[esi]
  42498e:	mov    dl,0xc5
  424990:	cmp    DWORD PTR [ebx+0x29],ebx
  424993:	fcomp  st(0)
  424995:	mov    ebp,0xa49ecde3
  42499a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42499b:	inc    edx
  42499c:	std    
  42499d:	jl     0x4249ae
  42499f:	mov    ecx,0xf2e8e23b
  4249a4:	es pop es
  4249a6:	lods   eax,DWORD PTR ds:[esi]
  4249a7:	sar    DWORD PTR [edi],1
  4249a9:	inc    ebp
  4249aa:	xchg   ebp,eax
  4249ab:	pop    esi
  4249ac:	(bad)  
  4249ad:	int3   
  4249ae:	mov    DWORD PTR [eax],eax
  4249b0:	cwde   
  4249b1:	or     eax,0xcea6800
  4249b6:	ja     0x424a35
  4249b8:	inc    ecx
  4249b9:	xor    eax,0x648bc255
  4249be:	fcomp  QWORD PTR [edx+edx*2-0x67]
  4249c2:	mov    ch,BYTE PTR [ecx+0x670191de]
  4249c8:	jb     0x4249ed
  4249ca:	out    dx,eax
  4249cb:	sbb    BYTE PTR [edx+0x57],bl
  4249ce:	xchg   esp,eax
  4249cf:	icebp  
  4249d0:	adc    ebx,DWORD PTR [esi-0x419fe34d]
  4249d6:	xlat   BYTE PTR ds:[ebx]
  4249d7:	sub    edx,DWORD PTR [eax-0x4e]
  4249da:	gs int3 
  4249dc:	iret   
  4249dd:	std    
  4249de:	retf   
  4249df:	icebp  
  4249e0:	ds pop edi
  4249e2:	outs   dx,DWORD PTR ds:[esi]
  4249e3:	stc    
  4249e4:	sub    al,0xc5
  4249e6:	retf   0x53b2
  4249e9:	mov    ebx,0xcff967b3
  4249ee:	jp     0x4249b9
  4249f0:	ins    DWORD PTR es:[edi],dx
  4249f1:	and    al,BYTE PTR [ecx-0x6c]
  4249f4:	sbb    bh,BYTE PTR [ebx]
  4249f6:	iret   
  4249f7:	addr16 clc 
  4249f9:	cwde   
  4249fa:	push   ss
  4249fb:	push   0x20
  4249fd:	stos   DWORD PTR es:[edi],eax
  4249fe:	jge    0x424a41
  424a00:	gs xor ebp,DWORD PTR gs:[ecx-0x49d6a166]
  424a08:	and    eax,0x898b51dc
  424a0d:	xchg   esp,eax
  424a0e:	in     eax,0x27
  424a10:	(bad)  
  424a11:	dec    edi
  424a12:	sahf   
  424a13:	xchg   esp,eax
  424a14:	aad    0x26
  424a16:	in     eax,dx
  424a17:	inc    edx
  424a18:	push   ebx
  424a19:	push   0xbe1cf944
  424a1e:	push   edx
  424a1f:	das    
  424a20:	jnp    0x424a06
  424a22:	js     0x424a3e
  424a24:	cmc    
  424a25:	call   0x43772445
  424a2a:	call   0x738a:0x71edd485
  424a31:	fst    st(3)
  424a33:	cmp    eax,DWORD PTR [edx-0x2e]
  424a36:	jge    0x424aa0
  424a38:	nop    ebp
  424a3b:	aam    0x3f
  424a3d:	jmp    DWORD PTR [esi+esi*8+0x1f]
  424a41:	in     al,0xa1
  424a43:	pop    ss
  424a44:	lock pop ebp
  424a46:	out    dx,eax
  424a47:	mov    dh,0xfa
  424a49:	retf   
  424a4a:	mov    ebx,0x17e4729
  424a4f:	(bad)  
  424a50:	cmp    DWORD PTR [eax-0x33],ebp
  424a53:	or     ebp,esp
  424a55:	aas    
  424a56:	ja     0x424ab9
  424a58:	in     eax,0x37
  424a5a:	repnz aaa 
  424a5c:	pop    es
  424a5d:	(bad)  
  424a5e:	mov    eax,0xe2c849a7
  424a63:	aam    0x17
  424a65:	js     0x424a1a
  424a67:	dec    eax
  424a68:	int3   
  424a69:	cmp    eax,0x701dc7af
  424a6e:	lods   eax,DWORD PTR ds:[esi]
  424a6f:	std    
  424a70:	lods   eax,DWORD PTR ds:[esi]
  424a71:	push   ss
  424a72:	cwde   
  424a73:	cdq    
  424a74:	mov    al,ds:0xb4320162
  424a79:	js     0x424a76
  424a7b:	iret   
  424a7c:	jp     0x424a30
  424a7e:	xchg   esi,esi
  424a80:	adc    esp,ebx
  424a82:	clc    
  424a83:	and    DWORD PTR [ebx],0x37
  424a86:	mul    edi
  424a88:	cmp    DWORD PTR [esi+0x4e85441a],0x862960d0
  424a92:	adc    DWORD PTR [ebx],edi
  424a94:	or     eax,0x6256a052
  424a99:	mov    BYTE PTR [edx],al
  424a9b:	popa   
  424a9c:	int3   
  424a9d:	hlt    
  424a9e:	jp     0x424aec
  424aa0:	fidiv  DWORD PTR [eax]
  424aa2:	and    ah,bh
  424aa4:	(bad)  
  424aa6:	enter  0x8503,0xbc
  424aaa:	jge    0x424a52
  424aac:	xor    BYTE PTR [edx],dl
  424aae:	mov    al,0xfd
  424ab0:	xchg   ecx,eax
  424ab1:	(bad)  
  424ab2:	mov    ah,0x4c
  424ab4:	ror    BYTE PTR [edx],1
  424ab6:	mov    ebx,0xde8ec65d
  424abb:	xchg   ecx,eax
  424abc:	out    dx,al
  424abd:	call   0xa2fe:0x6c88a16a
  424ac4:	mov    esp,0xaf15fd41
  424ac9:	aad    0xb
  424acb:	dec    edi
  424acc:	sub    eax,0x4b2ccbd6
  424ad1:	push   cs
  424ad2:	in     eax,dx
  424ad3:	sbb    edx,DWORD PTR [ebx-0x6b]
  424ad6:	fisttp QWORD PTR [esi+ecx*1-0x69]
  424ada:	adc    al,0xb5
  424adc:	ins    BYTE PTR es:[edi],dx
  424add:	stc    
  424ade:	cwde   
  424adf:	push   esp
  424ae0:	cmc    
  424ae1:	mov    bh,0x5b
  424ae3:	cs xchg esp,eax
  424ae5:	mov    DWORD PTR [edx-0x25],ebx
  424ae8:	cs jnp 0x424a7a
  424aeb:	int    0x70
  424aed:	rcr    DWORD PTR [ebp-0x7fab6e65],1
  424af3:	pop    edx
  424af4:	jmp    0x424a9c
  424af6:	mov    ebp,0xc31967c
  424afb:	xchg   edx,eax
  424afc:	mov    dl,0x20
  424afe:	jp     0x424a9e
  424b00:	imul   ebx,eax,0x73
  424b03:	add    al,0x50
  424b05:	push   es
  424b06:	mov    ebx,0x8c5881b0
  424b0b:	xor    bl,BYTE PTR [edx-0x79]
  424b0e:	not    al
  424b10:	xchg   edi,eax
  424b11:	stc    
  424b12:	jbe    0x424ad2
  424b14:	cmp    eax,0xd26b799f
  424b19:	lock pop ebp
  424b1b:	xchg   edx,eax
  424b1c:	shl    cl,cl
  424b1e:	xchg   edi,eax
  424b1f:	add    eax,0xf6caca0b
  424b24:	lock stos BYTE PTR es:[edi],al
  424b26:	stc    
  424b27:	sub    eax,0x2a3f307c
  424b2c:	dec    ebx
  424b2d:	imul   BYTE PTR [ecx]
  424b2f:	cmc    
  424b30:	cwde   
  424b31:	fcmove st,st(5)
  424b33:	sar    DWORD PTR [ecx+0x5efab8b0],1
  424b39:	sar    ebx,cl
  424b3b:	ins    BYTE PTR es:[edi],dx
  424b3c:	mov    ch,0x5e
  424b3e:	mov    ds:0x316cca8e,al
  424b43:	cmc    
  424b44:	in     eax,0x9c
  424b46:	mov    al,0x1
  424b48:	adc    BYTE PTR [edx-0x1a3b4275],bl
  424b4e:	xchg   DWORD PTR [esi-0x719be2a2],edi
  424b54:	es and bl,dl
  424b57:	pop    ebx
  424b58:	or     eax,0x1bcde4
  424b5d:	stos   BYTE PTR es:[edi],al
  424b5e:	and    BYTE PTR [ecx],0xae
  424b61:	hlt    
  424b62:	or     al,0xc1
  424b64:	hlt    
  424b65:	push   esi
  424b66:	inc    edx
  424b67:	shl    DWORD PTR [edx],0xfb
  424b6a:	mov    ds:0x84ef282d,eax
  424b6f:	loope  0x424b69
  424b71:	xchg   edx,eax
  424b72:	pop    ebx
  424b73:	push   ecx
  424b74:	repz repnz cld 
  424b77:	pop    es
  424b78:	sub    eax,0x580eb1d1
  424b7d:	jmp    0xf6575e04
  424b82:	fcmovnu st,st(2)
  424b84:	push   0xe1b9024f
  424b89:	ins    DWORD PTR es:[edi],dx
  424b8a:	dec    edi
  424b8b:	inc    ecx
  424b8c:	loopne 0x424b6e
  424b8e:	jb     0x424b55
  424b90:	test   al,0x75
  424b92:	mov    eax,0x96a42ce9
  424b97:	inc    ecx
  424b98:	ftst   
  424b9a:	sub    BYTE PTR [ebx+0x6ec833a4],al
  424ba0:	clc    
  424ba1:	jmp    0xae20:0xa2905b51
  424ba8:	dec    eax
  424ba9:	jl     0x424b4b
  424bab:	test   BYTE PTR [esi+0x178fd5d0],al
  424bb1:	jmp    0x424c26
  424bb3:	cmp    al,0x85
  424bb5:	sub    al,0x39
  424bb7:	fmul   DWORD PTR [edx+0x1a]
  424bba:	fdiv   QWORD PTR [ecx-0x505ef9f8]
  424bc0:	cwde   
  424bc1:	xchg   ecx,eax
  424bc2:	add    ch,BYTE PTR [esi-0x4986585a]
  424bc8:	outs   dx,DWORD PTR ds:[esi]
  424bc9:	xor    ebp,DWORD PTR [ebx-0x734510dd]
  424bcf:	cmp    BYTE PTR [ecx+ebx*1+0x1f],ah
  424bd3:	out    dx,eax
  424bd4:	mul    BYTE PTR [ecx]
  424bd6:	mov    dh,0xef
  424bd8:	push   ebx
  424bd9:	in     al,0xc1
  424bdb:	xchg   DWORD PTR [edi-0x38],eax
  424bde:	fsub   st(1),st
  424be0:	inc    edi
  424be1:	dec    esi
  424be2:	mov    ch,0x5d
  424be4:	sbb    esp,DWORD PTR gs:[ecx]
  424be7:	icebp  
  424be8:	push   esp
  424be9:	or     cl,BYTE PTR [edx-0x5aa152c2]
  424bef:	add    BYTE PTR [esi+0x366f9573],cl
  424bf5:	push   eax
  424bf6:	repz dec edx
  424bf8:	sub    eax,0xdcb8de91
  424bfd:	sbb    ebp,ecx
  424bff:	sub    eax,0xc623c8c9
  424c04:	cmp    ecx,ebp
  424c06:	pushf  
  424c07:	mov    ebp,0x5b5fb720
  424c0c:	(bad)  
  424c0d:	js     0x424bf1
  424c0f:	push   cs
  424c10:	or     DWORD PTR [ebx],esp
  424c12:	fs stos DWORD PTR es:[edi],eax
  424c14:	sub    ch,BYTE PTR [edx-0x3]
  424c17:	and    ebx,DWORD PTR [ecx-0x434bdee7]
  424c1d:	ficomp WORD PTR [esi+0x2e2ef216]
  424c23:	xchg   esi,eax
  424c24:	xor    edx,ebx
  424c26:	scas   al,BYTE PTR es:[edi]
  424c27:	sub    dl,BYTE PTR [edi-0x30]
  424c2a:	repz jb 0x424c69
  424c2d:	mov    al,ds:0x34d4bf1f
  424c32:	sbb    eax,DWORD PTR [ebp+0x4cc95f1e]
  424c38:	jge    0x424c11
  424c3a:	mov    ds:0x291c2373,eax
  424c3f:	test   eax,0xcea254b2
  424c44:	xchg   ebp,eax
  424c45:	addr16 pop ds
  424c47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c48:	xor    eax,0xfab27a96
  424c4d:	das    
  424c4e:	jmp    0x424c87
  424c50:	jnp    0x424c7a
  424c52:	or     al,0x76
  424c54:	or     eax,esi
  424c56:	pop    es
  424c57:	dec    esi
  424c58:	and    esi,DWORD PTR [ebp-0x7c3ca1b4]
  424c5e:	add    al,0x73
  424c60:	dec    ebp
  424c61:	mov    esp,0x98e9b588
  424c66:	sub    DWORD PTR [edi+0x3d4963e],esi
  424c6c:	add    al,cl
  424c6e:	inc    edi
  424c6f:	pop    ecx
  424c70:	pusha  
  424c71:	aaa    
  424c72:	lods   al,BYTE PTR ds:[esi]
  424c73:	test   al,0xa7
  424c75:	(bad)  
  424c76:	stos   DWORD PTR es:[edi],eax
  424c77:	cwde   
  424c78:	fsub   DWORD PTR [ebp+0x387430aa]
  424c7e:	jnp    0x424c44
  424c80:	ins    DWORD PTR es:[edi],dx
  424c81:	jmp    0x424ca2
  424c83:	xor    esp,DWORD PTR [edx]
  424c85:	addr16 pop ebx
  424c87:	sbb    al,0x2d
  424c89:	neg    DWORD PTR [edx+0x74]
  424c8c:	pop    edi
  424c8d:	out    0x22,eax
  424c8f:	stc    
  424c90:	jge    0x424c39
  424c92:	test   ah,0xc8
  424c95:	jo     0x424ce2
  424c97:	mov    al,ds:0x9250e1ab
  424c9c:	inc    esi
  424c9d:	fwait
  424c9e:	icebp  
  424c9f:	rcr    BYTE PTR [ecx+0x3e],1
  424ca2:	dec    ecx
  424ca3:	push   0xbb59e04b
  424ca8:	or     edx,esp
  424caa:	push   cs
  424cab:	inc    edi
  424cac:	and    cl,BYTE PTR [esi]
  424cae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424caf:	mov    bh,0x38
  424cb1:	cmp    al,0xf3
  424cb3:	inc    ebx
  424cb4:	fcom   QWORD PTR [edi+0x5d2f96d7]
  424cba:	xor    BYTE PTR [esi+0x47],ch
  424cbd:	pop    ecx
  424cbe:	xchg   edi,eax
  424cbf:	ins    DWORD PTR es:[edi],dx
  424cc0:	mov    ebp,0x65d1713e
  424cc5:	jg     0x424cfa
  424cc7:	inc    esp
  424cc8:	mov    esp,0x87786064
  424ccd:	int3   
  424cce:	adc    eax,0xa78601fc
  424cd3:	and    ch,BYTE PTR [edi-0x153b5341]
  424cd9:	or     eax,0x27ebb7fb
  424cde:	add    al,0x5d
  424ce0:	push   eax
  424ce1:	xchg   DWORD PTR ds:0xfa7e9a2e,esi
  424ce7:	imul   esi,DWORD PTR [eax-0x4f],0x1cc4cabc
  424cee:	fdivr  DWORD PTR [eax-0x11]
  424cf1:	out    dx,al
  424cf2:	stc    
  424cf3:	push   edx
  424cf4:	sub    al,0xdf
  424cf6:	fwait
  424cf7:	stos   BYTE PTR es:[edi],al
  424cf8:	pusha  
  424cf9:	fimul  DWORD PTR [ecx+0x4e3622a4]
  424cff:	test   DWORD PTR [edx-0x17acb5d4],edx
  424d05:	lahf   
  424d06:	cdq    
  424d07:	scas   eax,DWORD PTR es:[edi]
  424d08:	jmp    0x90121307
  424d0d:	mov    esi,0x79ee5d6a
  424d12:	repz rcr DWORD PTR [ebx+0x5c],0x5c
  424d17:	scas   eax,DWORD PTR es:[edi]
  424d18:	retf   0x30a7
  424d1b:	ss enter 0x2f9f,0x5e
  424d20:	jle    0x424cc6
  424d22:	xchg   edx,eax
  424d23:	arpl   WORD PTR [ecx-0x1d607d75],si
  424d29:	or     eax,0x19c8152c
  424d2e:	scas   al,BYTE PTR es:[edi]
  424d2f:	(bad)  
  424d30:	push   eax
  424d31:	xchg   edx,eax
  424d32:	sbb    BYTE PTR [ebp+0x4],bl
  424d35:	repnz stos DWORD PTR es:[edi],eax
  424d37:	aas    
  424d38:	pop    esp
  424d39:	add    BYTE PTR ds:0x21d4b68e,ch
  424d3f:	fstp   DWORD PTR [ecx]
  424d41:	sahf   
  424d42:	(bad)  
  424d43:	mul    ecx
  424d45:	ret    
  424d46:	js     0x424d03
  424d48:	cmp    al,0x7
  424d4a:	data16 in al,dx
  424d4c:	lds    edx,FWORD PTR [ecx+0x8ebdd65]
  424d52:	adc    ebx,edi
  424d54:	out    dx,al
  424d55:	mov    esp,0x99443014
  424d5a:	inc    ebp
  424d5b:	cmp    al,0xcd
  424d5d:	std    
  424d5e:	push   0xffffffd6
  424d60:	int3   
  424d61:	call   0x5bc5fae9
  424d66:	lds    edx,FWORD PTR [edx]
  424d68:	cld    
  424d69:	jmp    0xd0795bc7
  424d6e:	outs   dx,BYTE PTR ds:[esi]
  424d6f:	stos   BYTE PTR es:[edi],al
  424d70:	adc    eax,edi
  424d72:	pop    esi
  424d73:	jle    0x424cf5
  424d75:	fs test eax,0x48ffcf63
  424d7b:	push   ebp
  424d7c:	rcr    bl,1
  424d7e:	mov    dh,0x6d
  424d80:	xchg   esp,eax
  424d81:	cmp    bl,ah
  424d83:	in     al,dx
  424d84:	pop    edi
  424d85:	cld    
  424d86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d87:	dec    ebp
  424d88:	or     ah,BYTE PTR [ebx-0x7a]
  424d8b:	lods   eax,DWORD PTR ds:[esi]
  424d8c:	cmp    dh,BYTE PTR [ecx+0x4d]
  424d8f:	das    
  424d90:	jg     0x424d1b
  424d92:	xchg   ebp,eax
  424d93:	mov    eax,ds:0xe3520b15
  424d98:	xlat   BYTE PTR ds:[ebx]
  424d99:	mov    dh,0x9d
  424d9b:	push   cs
  424d9c:	pop    ebp
  424d9d:	pop    ebx
  424d9e:	setle  BYTE PTR [ebx+0x6b62587d]
  424da5:	mov    dh,0xe0
  424da7:	add    BYTE PTR [edx],bl
  424da9:	mov    cl,0xe6
  424dac:	and    BYTE PTR [ebx-0x6f],bh
  424daf:	or     ah,BYTE PTR [edx+0x76]
  424db2:	ret    0x7da3
  424db5:	int3   
  424db6:	mov    ds:0x68098979,al
  424dbb:	shl    ebx,cl
  424dbd:	sbb    ebx,DWORD PTR [esi+0x1e5b1d2]
  424dc3:	stos   BYTE PTR es:[edi],al
  424dc4:	popa   
  424dc5:	and    esp,ebp
  424dc7:	loope  0x424ded
  424dc9:	jae    0x424d55
  424dcb:	loope  0x424e3f
  424dcd:	out    dx,al
  424dce:	pop    edx
  424dcf:	outs   dx,BYTE PTR ds:[esi]
  424dd0:	jl     0x424d5f
  424dd2:	(bad)  
  424dd3:	jb     0x424dd0
  424dd5:	(bad)  [ebx-0x15]
  424dd8:	out    0x32,eax
  424dda:	xchg   cl,bh
  424ddc:	xchg   esi,eax
  424ddd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424dde:	sub    esp,DWORD PTR [ecx+0xa]
  424de1:	shr    BYTE PTR [esi],cl
  424de3:	adc    dh,BYTE PTR [esi+0x42]
  424de6:	jl     0x424d74
  424de8:	jmp    0x533450ae
  424ded:	xchg   DWORD PTR [ebx*4-0x24ab26ff],esi
  424df4:	xchg   BYTE PTR [edi-0x33],al
  424df7:	or     al,0xce
  424df9:	rcl    edx,0x8b
  424dfc:	imul   edx,ebp,0xffffffa9
  424dff:	jp     0x424e37
  424e01:	fld    QWORD PTR [ebp+0x332418fb]
  424e07:	gs in  eax,0xaf
  424e0a:	scas   eax,DWORD PTR es:[edi]
  424e0b:	lahf   
  424e0c:	hlt    
  424e0d:	mov    esi,DWORD PTR [ecx+0x3f]
  424e10:	mov    bh,0x1c
  424e12:	or     eax,0x9e8654a1
  424e17:	adc    eax,0xa1de16c3
  424e1c:	sbb    al,0xd9
  424e1e:	ror    DWORD PTR [esi+edx*8-0x19],cl
  424e22:	jae    0x424e6a
  424e24:	adc    dh,dh
  424e26:	jae    0x424db9
  424e28:	fidivr DWORD PTR [edx+0x79b546b8]
  424e2e:	mov    ds:0xb98d3c24,al
  424e33:	pop    ss
  424e34:	pop    edi
  424e35:	std    
  424e36:	lds    ebp,FWORD PTR [edi]
  424e38:	loope  0x424e81
  424e3a:	(bad)  
  424e3b:	sahf   
  424e3c:	pop    ecx
  424e3d:	add    BYTE PTR [eax],al
  424e3f:	add    BYTE PTR [eax],al
  424e41:	add    BYTE PTR [eax-0x30f8b0bc],al
  424e47:	bswap  eax
  424e49:	(bad)  
  424e4a:	test   al,0x2c
  424e4c:	dec    eax
  424e4d:	or     edi,DWORD PTR [eax]
  424e4f:	pushf  
  424e50:	sbb    al,0x23
  424e52:	cld    
  424e53:	mov    BYTE PTR [ecx],0x0
  424e56:	repz add al,0x0
  424e59:	add    BYTE PTR [eax],ah
  424e5b:	or     dl,BYTE PTR [ebp+0x5d]
  424e5e:	shr    BYTE PTR [ecx+ecx*8+0x2f],1
  424e62:	lea    ebp,[edx]
  424e64:	dec    eax
  424e65:	xor    eax,0x3acd8972
  424e6a:	in     eax,0xb1
  424e6c:	add    bl,al
  424e6e:	cmc    
  424e6f:	push   cs
  424e70:	outs   dx,DWORD PTR ds:[esi]
  424e71:	pop    edx
  424e72:	clc    
  424e73:	stc    
  424e74:	addr16 test al,0x1a
  424e77:	jae    0x424e3a
  424e79:	stos   BYTE PTR es:[edi],al
  424e7a:	adc    BYTE PTR [edx-0x30],cl
  424e7d:	repnz push ss
  424e7f:	xchg   DWORD PTR [esi-0x3957cb5a],edx
  424e85:	or     BYTE PTR [esp+ecx*2-0x574faf8f],bl
  424e8c:	sbb    dh,BYTE PTR [eax-0x601b8195]
  424e92:	or     eax,DWORD PTR [ebx+edi*4-0x5e]
  424e96:	iret   
  424e97:	es mov cl,0x3
  424e9a:	inc    ebx
  424e9b:	pop    ds
  424e9c:	clc    
  424e9d:	or     dh,BYTE PTR [esi+edx*8-0x51]
  424ea1:	mov    cl,0xea
  424ea3:	pop    edi
  424ea4:	jns    0x424ecc
  424ea6:	mov    dl,0xba
  424ea8:	inc    esi
  424ea9:	stos   BYTE PTR es:[edi],al
  424eaa:	xor    al,0xd2
  424eac:	loope  0x424ec9
  424eae:	push   edi
  424eaf:	mov    gs,WORD PTR [edi-0x272005ce]
  424eb5:	loop   0x424eea
  424eb7:	inc    eax
  424eb8:	adc    eax,0x4720d21
  424ebd:	xor    bh,BYTE PTR [ecx-0x1f00e7a0]
  424ec3:	pop    edx
  424ec4:	(bad)
  424ec8:	cmp    esi,DWORD PTR [edi+ebx*2-0x7d731365]
  424ecf:	or     eax,0x57bc2e46
  424ed4:	fisttp QWORD PTR [edi+0x5d]
  424ed7:	stos   BYTE PTR es:[edi],al
  424ed8:	sub    cl,BYTE PTR [esi-0x47]
  424edb:	je     0x424f30
  424edd:	mov    esp,0xc5840021
  424ee2:	mov    esp,0x965d0f20
  424ee7:	ins    BYTE PTR es:[edi],dx
  424ee8:	or     esi,DWORD PTR [esi]
  424eea:	push   es
  424eeb:	popa   
  424eec:	call   0xdeec:0x1ec71247
  424ef3:	xor    cl,ch
  424ef5:	xchg   esp,eax
  424ef6:	fmul   QWORD PTR [eax]
  424ef8:	mov    bh,0xa6
  424efa:	jbe    0x424f2d
  424efc:	inc    edx
  424efd:	nop
  424efe:	or     BYTE PTR [ebp+0x688834f1],0x6a
  424f05:	mov    ah,0x93
  424f07:	int3   
  424f08:	fldcw  WORD PTR [eax-0x58]
  424f0b:	adc    al,0x97
  424f0d:	pop    esi
  424f0e:	ja     0x424ee6
  424f10:	mov    al,0x1a
  424f12:	test   al,0xe5
  424f14:	xor    esi,DWORD PTR [edi-0x70c082d3]
  424f1a:	into   
  424f1b:	push   esi
  424f1c:	mov    ebp,DWORD PTR [ebp-0x182aeba9]
  424f22:	xor    eax,0xe9464fbe
  424f27:	sbb    al,0xa9
  424f29:	ja     0x424f40
  424f2b:	sar    BYTE PTR [esi+0x694bfeed],1
  424f31:	mov    ah,dh
  424f33:	xchg   ebp,eax
  424f34:	test   DWORD PTR [esi],esp
  424f36:	out    0x19,eax
  424f38:	in     eax,dx
  424f39:	call   FWORD PTR [ebx]
  424f3b:	leave  
  424f3c:	push   ebp
  424f3d:	sbb    al,0xba
  424f3f:	hlt    
  424f40:	sub    eax,0x16b96b1a
  424f45:	mov    BYTE PTR [eax+0x7fd82e5c],dh
  424f4b:	mov    BYTE PTR [edi+0x484326a9],dh
  424f51:	outs   dx,BYTE PTR ds:[esi]
  424f52:	xchg   edx,eax
  424f53:	call   0x62c6:0x638e0678
  424f5a:	test   BYTE PTR [ecx-0x18b05f7c],bh
  424f60:	retf   0xbe1d
  424f63:	les    edx,FWORD PTR [edx+0x31]
  424f66:	pop    esp
  424f67:	imul   esp,ebp,0x2a
  424f6a:	xor    BYTE PTR [ebp+0x12],dh
  424f6d:	fstp   QWORD PTR [esi+ebp*2+0x33d0ee6b]
  424f74:	mov    edx,0x3291e4bd
  424f79:	push   eax
  424f7a:	dec    eax
  424f7b:	outs   dx,BYTE PTR ds:[esi]
  424f7c:	adc    al,0xcf
  424f7e:	dec    esp
  424f7f:	js     0x424fed
  424f81:	cmp    eax,0xa28edaaa
  424f86:	mov    esi,0x1fcef37
  424f8b:	popf   
  424f8c:	(bad)  
  424f8d:	pextrw esp,mm3,0x3e
  424f91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f92:	ret    0xfb00
  424f95:	cmp    DWORD PTR [eax],0x22b1bbe1
  424f9b:	in     eax,0xd8
  424f9d:	pusha  
  424f9e:	sbb    DWORD PTR [esi+0x50],esp
  424fa1:	push   esp
  424fa2:	sbb    edi,esi
  424fa4:	aas    
  424fa5:	sub    WORD PTR [eax-0x66],di
  424fa9:	add    BYTE PTR [ebp-0x7a00b3a6],0xab
  424fb0:	jae    0x424f51
  424fb2:	cdq    
  424fb3:	jb     0x424fbe
  424fb5:	mov    bl,0x7a
  424fb7:	adc    bl,BYTE PTR [edi+edx*8]
  424fba:	das    
  424fbb:	pop    esi
  424fbc:	sub    ebx,DWORD PTR [ecx]
  424fbe:	loopne 0x424fa7
  424fc0:	daa    
  424fc1:	xor    ebx,esp
  424fc3:	imul   esi,DWORD PTR [edx-0x32],0xe2357b06
  424fca:	pop    esp
  424fcb:	and    eax,0xf4ce7ee8
  424fd0:	cmp    DWORD PTR [ecx+ebp*1],edx
  424fd3:	mov    dl,0xa5
  424fd5:	jns    0x424fce
  424fd7:	xchg   DWORD PTR [ebp+0x40],edi
  424fda:	out    dx,eax
  424fdb:	call   0xdd46:0xd13768b2
  424fe2:	sbb    BYTE PTR [ecx+0x83e277a],bl
  424fe8:	mov    WORD PTR [esp+eiz*4+0x3202b042],gs
  424fef:	mov    ecx,0x3a52f6ba
  424ff4:	call   0xfd0a:0xc272f57e
  424ffb:	retf   
  424ffc:	popa   
  424ffd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ffe:	sahf   
  424fff:	pop    DWORD PTR [ecx*2-0x329db23e]
  425006:	push   esi
  425007:	sbb    eax,0xd8cd8de
  42500c:	fwait
  42500d:	mov    bl,0x50
  42500f:	lea    esi,[edi-0x5a]
  425012:	hlt    
  425013:	jl     0x425053
  425015:	sub    bh,BYTE PTR [edx]
  425017:	loop   0x424fd6
  425019:	or     eax,0xe5e1c9ce
  42501e:	rol    edx,cl
  425020:	jecxz  0x424faf
  425022:	push   edx
  425023:	mov    ?,esp
  425025:	add    al,BYTE PTR [esi+0x22]
  425028:	js     0x425032
  42502a:	dec    esi
  42502b:	daa    
  42502c:	jecxz  0x424fd5
  42502e:	add    eax,0x52ce81e3
  425033:	mov    ah,0x98
  425035:	xor    BYTE PTR ds:0x1fbee823,bh
  42503b:	rol    DWORD PTR [ecx-0x15],cl
  42503e:	(bad)  
  42503f:	jne    0x425086
  425041:	pushf  
  425042:	sub    al,0xc4
  425044:	jns    0x425070
  425046:	push   edi
  425047:	add    BYTE PTR ds:0x3a0fc443,cl
  42504d:	pop    edi
  42504e:	pop    edx
  42504f:	(bad)  
  425050:	aad    0x2f
  425052:	clc    
  425053:	inc    esp
  425054:	push   edi
  425055:	add    BYTE PTR [ebx-0x3c],bh
  425058:	jp     0x425075
  42505a:	push   ebp
  42505b:	xor    cl,dl
  42505d:	mov    bl,0xe
  42505f:	les    ebp,FWORD PTR [edi]
  425061:	adc    eax,0x90005c12
  425066:	and    bh,0x95
  425069:	jno    0x42501c
  42506b:	mov    DWORD PTR [ebp+0x34906742],ebx
  425071:	in     eax,0x5f
  425073:	xor    dl,BYTE PTR [esp+eiz*2]
  425076:	mov    DWORD PTR [edi+ebx*4-0x6da5da36],edi
  42507d:	pop    eax
  42507e:	cmp    dh,BYTE PTR [ebx]
  425080:	(bad)  
  425081:	stos   DWORD PTR es:[edi],eax
  425082:	mov    bl,0xd8
  425084:	mov    ecx,DWORD PTR [edi]
  425086:	pusha  
  425087:	and    BYTE PTR [ecx],al
  425089:	ds in  al,0x50
  42508c:	dec    ecx
  42508d:	jns    0x42501e
  42508f:	clc    
  425090:	mov    ebp,0x2edf6756
  425095:	xchg   ebx,eax
  425096:	aaa    
  425097:	mov    dl,0x6d
  425099:	jbe    0x42502e
  42509b:	ds popf 
  42509d:	fmul   st(5),st
  42509f:	add    DWORD PTR [ebp+0xb0c4181],edi
  4250a5:	fisub  WORD PTR [ebx-0x17cd1530]
  4250ab:	icebp  
  4250ac:	sar    BYTE PTR [eax+0x3a],cl
  4250af:	inc    edx
  4250b0:	and    eax,0xb9d31eba
  4250b5:	clc    
  4250b6:	adc    al,0xc1
  4250b8:	arpl   WORD PTR [eax-0x3b],dx
  4250bb:	dec    BYTE PTR [edx-0x25]
  4250be:	sar    DWORD PTR [edx],0x3f
  4250c1:	inc    eax
  4250c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4250c3:	lea    edx,ds:0x318e350b
  4250c9:	add    DWORD PTR [edx-0x2f4b9210],ebp
  4250cf:	into   
  4250d0:	rcr    bh,cl
  4250d2:	out    dx,al
  4250d3:	jmp    0x9239bf72
  4250d8:	shl    DWORD PTR [eax-0x2d],0x8a
  4250dc:	(bad)  [esp+eax*4-0x13]
  4250e0:	mov    al,0x63
  4250e2:	cmp    cl,cl
  4250e4:	or     bh,BYTE PTR [eax]
  4250e6:	jno    0x425073
  4250e8:	test   al,0x70
  4250ea:	in     al,0x5b
  4250ec:	mov    dh,0xcc
  4250ee:	dec    eax
  4250ef:	sub    esi,esi
  4250f1:	mov    esp,0xa450184e
  4250f6:	xor    ecx,edi
  4250f8:	pop    esp
  4250f9:	mov    esp,0xd78ea811
  4250ff:	jbe    0x425123
  425101:	(bad)  
  425102:	in     al,0xd4
  425104:	(bad)  
  425105:	pop    esi
  425106:	popa   
  425107:	clc    
  425108:	cmp    BYTE PTR [edi],dl
  42510a:	imul   ecx,DWORD PTR [ecx+eiz*2+0x5a],0x51002788
  425112:	inc    esi
  425113:	clc    
  425114:	(bad)  ds:0x5359dbe1
  42511a:	jno    0x42513a
  42511c:	mov    ebp,0x401a7fdc
  425121:	sub    BYTE PTR [ebx-0x32],ah
  425124:	mov    al,0x5
  425126:	aaa    
  425127:	hlt    
  425128:	or     ebp,DWORD PTR [ebx+edx*4-0x41e5f56c]
  42512f:	push   cs
  425130:	push   ss
  425131:	or     eax,0x1e56f258
  425136:	hlt    
  425137:	adc    ch,BYTE PTR [ebx]
  425139:	dec    ebx
  42513a:	mov    edx,0xa25870d1
  42513f:	sbb    al,0xa7
  425141:	add    bl,BYTE PTR [eax-0x57]
  425144:	pop    ebx
  425145:	sub    BYTE PTR [ebx+0x4],dl
  425148:	and    ah,0xbc
  42514b:	retf   
  42514c:	jmp    0xc32468b4
  425151:	call   0x2010f9c7
  425156:	inc    edx
  425157:	push   ebp
  425158:	and    DWORD PTR ds:0x5566167a,eax
  42515e:	aas    
  42515f:	add    DWORD PTR [ecx-0x6cc8d455],edx
  425165:	aas    
  425166:	les    ebp,FWORD PTR [edi-0x6e7e2499]
  42516c:	sub    al,0xda
  42516e:	dec    ebp
  42516f:	es jmp 0x4251b0
  425172:	popa   
  425173:	adc    al,0x1a
  425175:	dec    ecx
  425176:	outs   dx,BYTE PTR ds:[esi]
  425177:	in     eax,dx
  425178:	ret    
  425179:	or     BYTE PTR [esi],bh
  42517b:	sbb    DWORD PTR [ecx+0x4cb01f0e],ecx
  425181:	dec    esi
  425182:	out    dx,al
  425183:	fidiv  WORD PTR [ecx+0x2c]
  425186:	mov    eax,ds:0x40fea688
  42518b:	ss daa 
  42518d:	mov    ecx,0xda155913
  425192:	out    0xfe,al
  425194:	imul   esp,DWORD PTR ds:0x11d91116,0xb
  42519b:	push   edi
  42519c:	es mov cl,0xf5
  42519f:	shl    DWORD PTR [ecx+0x67],0xc4
  4251a3:	daa    
  4251a4:	popa   
  4251a5:	neg    dh
  4251a7:	repz imul eax,DWORD PTR [esi],0x44
  4251ab:	or     eax,DWORD PTR [ebp-0x6ec2fb86]
  4251b1:	pop    ss
  4251b2:	add    al,0x3a
  4251b4:	dec    ecx
  4251b5:	xor    al,0x25
  4251b7:	mov    cl,0xff
  4251b9:	test   BYTE PTR [edi-0x48234f3f],dl
  4251bf:	mov    bh,0x9d
  4251c1:	jp     0x42519c
  4251c3:	test   eax,0xec0ae5d
  4251c8:	stos   DWORD PTR es:[edi],eax
  4251c9:	std    
  4251ca:	sti    
  4251cb:	rcr    DWORD PTR [eax+0x2d4b4ad1],1
  4251d1:	lods   al,BYTE PTR ds:[esi]
  4251d2:	sbb    DWORD PTR [edx+0xd41bc7d],ecx
  4251d8:	or     al,al
  4251da:	pop    ebp
  4251db:	dec    edx
  4251dc:	je     0x425210
  4251de:	mov    esp,0xa176159b
  4251e3:	cmc    
  4251e4:	pop    es
  4251e5:	push   edx
  4251e6:	cld    
  4251e7:	pop    edx
  4251e8:	push   cs
  4251e9:	and    DWORD PTR [ecx-0x127b7e14],0x6ca7529
  4251f3:	aaa    
  4251f4:	push   esp
  4251f5:	dec    eax
  4251f6:	je     0x4251ba
  4251f8:	in     al,0xfc
  4251fa:	sahf   
  4251fb:	les    ebx,FWORD PTR [ecx+eiz*1-0x64]
  4251ff:	daa    
  425200:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425201:	rcl    DWORD PTR [ebx-0x35af7fdb],0x4a
  425208:	mov    esp,0x76eefb61
  42520d:	adc    ecx,esp
  42520f:	push   eax
  425210:	lea    eax,[esi]
  425212:	ja     0x4251b4
  425214:	mov    bh,0xf9
  425216:	adc    ebx,ebp
  425218:	ror    BYTE PTR [edx+ebx*1],0x42
  42521c:	mov    eax,ds:0xa0dfa8f
  425221:	push   ss
  425222:	cmp    al,0xa7
  425224:	push   ss
  425225:	lock sbb eax,0x77a9aa59
  42522b:	lods   eax,DWORD PTR ds:[esi]
  42522c:	cwde   
  42522d:	xor    eax,0x56517edb
  425232:	or     BYTE PTR [esi],dh
  425234:	cmp    DWORD PTR [edx-0xb7113fb],ebx
  42523a:	(bad)  
  42523b:	test   al,0x18
  42523d:	rcl    DWORD PTR ds:0xf4f53a89,1
  425243:	or     bh,BYTE PTR [esp+esi*2-0x45]
  425247:	lea    eax,[ecx-0x61]
  42524a:	loop   0x4252c5
  42524c:	inc    ebx
  42524d:	cwde   
  42524e:	jecxz  0x425290
  425250:	ja     0x4251d8
  425252:	cs and edi,DWORD PTR ss:[edx-0x74]
  425257:	sbb    esi,DWORD PTR [eax+0x4]
  42525a:	ins    BYTE PTR es:[edi],dx
  42525b:	call   0xb61c:0xcd798b31
  425262:	bound  ebx,QWORD PTR [ebx]
  425264:	xchg   ebx,eax
  425265:	pushf  
  425266:	xchg   ecx,eax
  425267:	call   0xabe45c52
  42526c:	push   cs
  42526d:	int    0xad
  42526f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425270:	retf   0x6dca
  425273:	cwde   
  425274:	inc    esi
  425275:	dec    ebx
  425276:	ss push ebx
  425278:	inc    esp
  425279:	jbe    0x42520a
  42527b:	test   BYTE PTR [ebx+0x1c4a31f],dh
  425281:	jp     0x4252c3
  425283:	jnp    0x4252d3
  425285:	popa   
  425286:	sti    
  425287:	jno    0x42529c
  425289:	xchg   esp,eax
  42528a:	test   DWORD PTR [esi-0x5d],ebx
  42528d:	fchs   
  42528f:	mov    ds:0x44ee6a16,eax
  425294:	sbb    ah,BYTE PTR [esi+0x14]
  425297:	out    dx,eax
  425298:	pop    ecx
  425299:	push   0x2696d438
  42529e:	out    0xb6,al
  4252a0:	(bad)
  4252a4:	daa    
  4252a5:	pop    esp
  4252a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4252a7:	jns    0x4252a6
  4252a9:	cdq    
  4252aa:	and    eax,0xd6ae000e
  4252af:	nop
  4252b0:	inc    edx
  4252b1:	fcmovbe st,st(4)
  4252b3:	inc    edi
  4252b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4252b5:	jno    0x4252df
  4252b7:	pop    ebx
  4252b8:	jmp    0xd538:0xa9a8b4f3
  4252bf:	fild   QWORD PTR [ecx+0x37]
  4252c2:	add    BYTE PTR [ecx-0x28],ch
  4252c5:	sbb    eax,0x81e4d926
  4252ca:	push   esi
  4252cb:	push   ebp
  4252cc:	adc    cl,BYTE PTR [esi-0x49]
  4252cf:	aam    0x57
  4252d1:	push   0xd62d18e5
  4252d6:	mov    dh,0x61
  4252d8:	cmp    dl,0x60
  4252db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4252dc:	arpl   WORD PTR [edx+edx*8],ax
  4252df:	pop    eax
  4252e0:	mov    dl,0x0
  4252e2:	loope  0x425306
  4252e4:	jge    0x42528e
  4252e6:	pop    edx
  4252e7:	jbe    0x425341
  4252e9:	dec    eax
  4252ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4252eb:	fst    QWORD PTR [ebx+0x6b2a463a]
  4252f1:	daa    
  4252f2:	cld    
  4252f3:	test   al,0x9e
  4252f5:	xchg   edx,eax
  4252f6:	adc    edx,DWORD PTR [eax+edi*4]
  4252f9:	in     eax,dx
  4252fa:	adc    DWORD PTR [eax+0x5a],edx
  4252fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4252fe:	adc    eax,0x4ac5a49b
  425303:	dec    edi
  425304:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425305:	int3   
  425306:	outs   dx,DWORD PTR ds:[esi]
  425307:	mov    BYTE PTR [esi+0x52b11169],0xd7
  42530e:	dec    ebp
  42530f:	cwde   
  425310:	lds    ebx,FWORD PTR [ecx+0xb027eb]
  425316:	gs retf 
  425318:	cdq    
  425319:	mov    cl,0x26
  42531b:	addr16 jmp 0x1bf5:0xbd52ace3
  425323:	mov    ah,0xf7
  425325:	jmp    0x2cc6:0xe66023c
  42532c:	mov    edi,0xcd58afd0
  425331:	stos   BYTE PTR es:[edi],al
  425332:	add    BYTE PTR [ebp+0x7c],al
  425335:	xchg   BYTE PTR [ebp-0x4c1e2061],bh
  42533b:	dec    ebp
  42533c:	adc    BYTE PTR [edx-0x20],dl
  42533f:	jae    0x425317
  425341:	dec    ecx
  425342:	out    0xb4,al
  425344:	jle    0x425330
  425346:	enter  0x484c,0x96
  42534a:	fimul  DWORD PTR [eax-0x71]
  42534d:	add    BYTE PTR [eax],al
  42534f:	add    BYTE PTR [eax],al
  425351:	add    BYTE PTR [ebx-0x11909fab],bl
  425357:	jg     0x4252f8
  425359:	cmc    
  42535a:	or     DWORD PTR fs:[edi+0x22],ebx
  42535e:	fistp  QWORD PTR ds:0xcbef448e
  425364:	add    DWORD PTR [eax],eax
  425366:	repz add al,0x0
  425369:	add    bl,dl
  42536b:	retf   0xdd72
  42536e:	nop
  42536f:	popa   
  425370:	(bad)  
  425371:	xchg   esi,eax
  425372:	ret    
  425373:	adc    al,0x1e
  425375:	pop    edi
  425376:	inc    eax
  425377:	nop
  425378:	(bad)  
  425379:	xlat   BYTE PTR ds:[ebx]
  42537a:	xchg   edi,eax
  42537b:	repz jns 0x4253d8
  42537e:	push   ss
  42537f:	scas   al,BYTE PTR es:[edi]
  425380:	sbb    DWORD PTR [ecx+0x75104db1],esi
  425386:	fild   QWORD PTR [ebp+0x6f]
  425389:	mov    eax,0x17d1abc
  42538e:	add    esi,DWORD PTR [ebx]
  425390:	adc    al,0x6f
  425392:	add    esp,DWORD PTR [edx-0x252574d]
  425398:	cvtpi2ps xmm1,QWORD PTR [ebp-0x235ac683]
  42539f:	push   es
  4253a0:	sub    DWORD PTR cs:[eax-0x6bd6aa24],0x54
  4253a8:	iret   
  4253a9:	cmp    DWORD PTR [edx+0x4e],ebp
  4253ac:	xor    dh,BYTE PTR [ebx-0x354c9b14]
  4253b2:	cmc    
  4253b3:	pop    esp
  4253b4:	push   eax
  4253b5:	and    DWORD PTR [eax+0x3392c73b],0x11
  4253bc:	jnp    0x4253fc
  4253be:	fbstp  TBYTE PTR [esi-0x61]
  4253c1:	hlt    
  4253c2:	adc    eax,0x579af32f
  4253c7:	fistp  QWORD PTR ds:0x1b89e83d
  4253cd:	aam    0x54
  4253cf:	clc    
  4253d0:	xchg   esi,eax
  4253d1:	fidiv  DWORD PTR [esi+0x66]
  4253d4:	int    0x57
  4253d6:	scas   eax,DWORD PTR es:[edi]
  4253d7:	(bad)  
  4253d9:	pop    esp
  4253da:	les    esi,FWORD PTR [esi]
  4253dc:	js     0x4253e3
  4253de:	pop    edi
  4253df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253e0:	sbb    DWORD PTR [eax],edi
  4253e2:	sub    BYTE PTR [ecx+0x3b8790e6],dl
  4253e8:	shl    ecx,1
  4253ea:	inc    ecx
  4253eb:	xchg   ebp,eax
  4253ec:	arpl   WORD PTR [edx-0x7b],di
  4253ef:	(bad)  
  4253f1:	sub    eax,esi
  4253f3:	jl     0x42546d
  4253f5:	imul   edi,DWORD PTR [ebx],0xd40e32e3
  4253fb:	(bad)  
  4253fc:	sub    ah,BYTE PTR [ebp+esi*4-0x28cd18f]
  425403:	inc    ecx
  425404:	or     eax,ebx
  425406:	ficomp DWORD PTR [edi-0x6]
  425409:	out    dx,al
  42540a:	push   0x41
  42540c:	jecxz  0x4253fd
  42540e:	fsub   DWORD PTR [esi+0x7f633594]
  425414:	(bad)  
  425416:	push   ss
  425417:	pop    esi
  425418:	xor    ah,BYTE PTR [ebx-0x49]
  42541b:	js     0x425477
  42541d:	push   eax
  42541e:	push   es
  42541f:	test   ecx,esp
  425421:	xchg   edx,eax
  425422:	test   al,0xaf
  425424:	xlat   BYTE PTR ds:[ebx]
  425425:	jno    0x4253ac
  425427:	mov    bl,0x1a
  425429:	adc    eax,0x95b94991
  42542e:	inc    eax
  42542f:	xchg   edi,eax
  425430:	inc    edi
  425431:	movaps xmm4,xmm0
  425434:	ror    bl,0x53
  425437:	xor    DWORD PTR [edx-0x4b],esi
  42543a:	sbb    al,BYTE PTR [ebx+eax*8+0x6fa75139]
  425441:	and    eax,0x4c49a20
  425446:	bound  ebp,QWORD PTR [eax+0x4c]
  425449:	inc    BYTE PTR [eax+0x350ecc25]
  42544f:	adc    eax,0xeeed5048
  425454:	adc    eax,0xb8acdb39
  425459:	inc    ecx
  42545a:	aaa    
  42545b:	lds    ebx,FWORD PTR [eax-0xa]
  42545e:	jae    0x42549f
  425460:	in     al,dx
  425461:	dec    ecx
  425462:	mov    eax,0x9b483a94
  425467:	popf   
  425468:	dec    DWORD PTR [edi+0x17]
  42546b:	xor    DWORD PTR [edx+0x47],edx
  42546e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42546f:	push   ebp
  425470:	sub    BYTE PTR ds:0x3d469a4b,bh
  425476:	lods   al,BYTE PTR ds:[esi]
  425477:	retf   
  425478:	push   edx
  425479:	scas   al,BYTE PTR es:[edi]
  42547a:	dec    eax
  42547b:	fld    TBYTE PTR [edi-0x8a14734]
  425481:	xchg   esi,eax
  425482:	imul   ecx,DWORD PTR [ebx-0xecada43],0x3eada5d1
  42548c:	sbb    al,0xcb
  42548e:	pop    edi
  42548f:	or     DWORD PTR fs:[ebx+0x5693eb86],ebp
  425496:	out    dx,eax
  425497:	fistp  WORD PTR [ebp+ebp*2+0x67]
  42549b:	shl    DWORD PTR [ecx-0x7b],cl
  42549e:	push   ds
  42549f:	sahf   
  4254a0:	jmp    0xd24f:0x185e9ae8
  4254a7:	mov    dl,0x5b
  4254a9:	popf   
  4254aa:	out    0x2,eax
  4254ac:	mov    cl,0xe7
  4254ae:	inc    ebp
  4254af:	cmp    dl,BYTE PTR [edi-0x5157fa68]
  4254b5:	sub    esp,DWORD PTR [edi]
  4254b7:	ds (bad) 
  4254b9:	sti    
  4254ba:	cmc    
  4254bb:	ins    BYTE PTR es:[edi],dx
  4254bc:	outs   dx,DWORD PTR ds:[esi]
  4254bd:	into   
  4254be:	lahf   
  4254bf:	mov    ch,0x8c
  4254c1:	outs   dx,BYTE PTR ds:[esi]
  4254c2:	add    BYTE PTR [eax-0xb],al
  4254c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4254c6:	mov    edi,0x9cf97d1c
  4254cb:	and    edx,DWORD PTR [esi]
  4254cd:	push   edx
  4254ce:	ins    BYTE PTR es:[edi],dx
  4254cf:	lods   al,BYTE PTR ds:[esi]
  4254d0:	lods   eax,DWORD PTR ds:[esi]
  4254d1:	loop   0x425528
  4254d3:	jo     0x425528
  4254d5:	scas   al,BYTE PTR es:[edi]
  4254d6:	mov    eax,0x3de4bafb
  4254db:	mov    bh,0xd2
  4254dd:	(bad)  
  4254de:	(bad)  [esi+ebp*1]
  4254e1:	jge    0x4254fe
  4254e3:	adc    al,0xeb
  4254e5:	in     eax,dx
  4254e6:	mov    dh,dl
  4254e8:	inc    eax
  4254e9:	aas    
  4254ea:	and    esp,DWORD PTR [edx+0x538c7a79]
  4254f0:	sub    dh,dh
  4254f2:	push   ss
  4254f3:	fs (bad) 
  4254f6:	cmc    
  4254f7:	fstp   QWORD PTR [ecx]
  4254f9:	mov    bl,0x39
  4254fb:	ja     0x42548f
  4254fd:	and    BYTE PTR [edx],0x73
  425500:	ret    
  425501:	bnd jmp 0x4254f0
  425504:	(bad)  
  425505:	mov    eax,ds:0xdd68949f
  42550a:	xor    esp,0xffffff86
  42550d:	inc    esp
  42550e:	popa   
  42550f:	add    BYTE PTR [edx-0x20ca091e],bh
  425515:	mov    bl,0x16
  425517:	fmul   st,st(1)
  425519:	inc    ebx
  42551a:	ds push ebx
  42551c:	dec    edx
  42551d:	es jmp 0x16344575
  425523:	push   ebp
  425524:	xchg   BYTE PTR [edi+0x1c2185ba],dh
  42552a:	shrd   DWORD PTR [ebp-0x45b98b91],ecx,cl
  425531:	jecxz  0x425540
  425533:	cmp    BYTE PTR [eax+0x70],dh
  425536:	push   ebx
  425537:	add    BYTE PTR [ebx],ah
  425539:	add    eax,0xa84f7b83
  42553e:	adc    BYTE PTR [ebx+0x940da91],0x4c
  425545:	adc    DWORD PTR [eax],edi
  425547:	shr    DWORD PTR [edi],cl
  425549:	hlt    
  42554a:	hlt    
  42554b:	in     eax,0xbd
  42554d:	sub    dh,al
  42554f:	adc    al,0xe9
  425551:	dec    ebp
  425552:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425553:	cld    
  425554:	add    cl,BYTE PTR [edi]
  425556:	and    BYTE PTR [esi-0x58a8d2f1],dl
  42555c:	dec    eax
  42555d:	cmp    esi,DWORD PTR [edi-0x1c]
  425560:	push   edi
  425561:	div    DWORD PTR [ebx+0x427a18f1]
  425567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425568:	mov    BYTE PTR [esi],bl
  42556a:	popa   
  42556b:	out    dx,al
  42556c:	pop    ds
  42556d:	mov    dh,0x66
  42556f:	sbb    DWORD PTR [edx+0x50],ecx
  425572:	push   0x23af8f6e
  425577:	data16 test ch,dh
  42557a:	(bad)  
  42557b:	je     0x4255ed
  42557d:	test   al,0xbd
  42557f:	add    BYTE PTR [edi-0x7a],0x78
  425583:	cmp    eax,0x13d1f5d1
  425588:	das    
  425589:	cmp    eax,0xc1913808
  42558e:	std    
  42558f:	in     al,dx
  425590:	mov    ecx,0x92a4e9e9
  425595:	xor    eax,0x90477a4b
  42559a:	mov    cl,0xaa
  42559c:	sahf   
  42559d:	mov    cl,bh
  42559f:	inc    edi
  4255a0:	shr    BYTE PTR [esi+0x17],0x93
  4255a4:	gs ret 0xa7d8
  4255a8:	(bad)  
  4255aa:	cmp    eax,0x89bbd68d
  4255af:	pusha  
  4255b0:	ret    0xf0e2
  4255b3:	in     eax,dx
  4255b4:	outs   dx,DWORD PTR ds:[esi]
  4255b5:	jge    0x425575
  4255b7:	pop    esp
  4255b8:	ins    BYTE PTR es:[edi],dx
  4255b9:	enter  0x1552,0xfa
  4255bd:	mov    ebp,0xb956aae3
  4255c2:	mov    bh,0x75
  4255c4:	pusha  
  4255c5:	in     al,dx
  4255c6:	repz jae 0x425623
  4255c9:	pop    eax
  4255ca:	stos   DWORD PTR es:[edi],eax
  4255cb:	xlat   BYTE PTR ds:[ebx]
  4255cc:	jmp    0x4151:0xe4ce1ce8
  4255d3:	pop    eax
  4255d4:	jg     0x42555f
  4255d6:	inc    esp
  4255d7:	loop   0x425577
  4255d9:	and    al,0x1f
  4255db:	pusha  
  4255dc:	out    dx,eax
  4255dd:	cmp    ecx,DWORD PTR [esi+0x7cdd33fb]
  4255e3:	lods   eax,DWORD PTR ds:[esi]
  4255e4:	out    dx,eax
  4255e5:	out    0xff,al
  4255e7:	mov    al,0x8f
  4255e9:	push   ebp
  4255ea:	or     DWORD PTR ds:0x919331c,edx
  4255f0:	stos   DWORD PTR es:[edi],eax
  4255f1:	rcl    cl,1
  4255f3:	inc    ebp
  4255f4:	rcr    cl,1
  4255f6:	jmp    0x4255ca
  4255f8:	dec    edi
  4255f9:	push   ebx
  4255fa:	xchg   ebx,eax
  4255fb:	call   0x390b:0x458b8d15
  425602:	sti    
  425603:	fwait
  425604:	push   ecx
  425605:	push   cs
  425606:	jmp    0x34a5187a
  42560b:	xlat   BYTE PTR ds:[ebx]
  42560c:	data16 std 
  42560e:	cmp    ecx,esi
  425610:	mov    eax,0xcf0ca87f
  425615:	daa    
  425616:	enter  0xeb5,0x3a
  42561a:	xor    cl,BYTE PTR [eax+edx*2]
  42561d:	out    dx,eax
  42561e:	xchg   esi,eax
  42561f:	jg     0x425655
  425621:	(bad)  
  425623:	push   0x1c
  425625:	pusha  
  425626:	xchg   ecx,eax
  425627:	xchg   edi,eax
  425628:	scas   al,BYTE PTR es:[edi]
  425629:	push   edi
  42562a:	popa   
  42562b:	ret    0xebe9
  42562e:	sub    eax,0xbf865a22
  425633:	int    0x70
  425635:	dec    ebp
  425636:	pop    esi
  425637:	xor    edi,DWORD PTR [esi+0x54]
  42563a:	icebp  
  42563b:	std    
  42563c:	(bad)  
  42563d:	jl     0x4255f2
  42563f:	rcr    BYTE PTR [ebx],1
  425641:	cmp    al,0xc4
  425643:	mov    ?,WORD PTR ds:0xec67279f
  425649:	nop
  42564a:	or     bh,bl
  42564c:	test   ebx,esi
  42564e:	mov    esp,0x1de79e49
  425653:	les    eax,FWORD PTR [ebx]
  425655:	rep outs dx,BYTE PTR es:[esi]
  425658:	fwait
  425659:	popf   
  42565a:	adc    eax,0xa70ae30
  42565f:	ins    DWORD PTR es:[edi],dx
  425660:	push   ds
  425661:	mov    ?,WORD PTR [eiz*4-0x511a4017]
  425668:	pusha  
  425669:	xor    al,0xfd
  42566b:	xor    eax,0xeb5ff4e5
  425670:	push   esi
  425672:	out    dx,eax
  425673:	das    
  425674:	jbe    0x4256db
  425676:	jp     0x425685
  425678:	es int 0xa
  42567b:	add    al,0xa8
  42567d:	clc    
  42567e:	or     eax,DWORD PTR [edi+0xcb70b74]
  425684:	in     al,0xa3
  425686:	into   
  425687:	dec    ebx
  425688:	leave  
  425689:	sbb    eax,0x40bc03a9
  42568e:	out    0x6a,eax
  425690:	pop    ebx
  425691:	lock push 0x2b
  425694:	hlt    
  425695:	rol    esp,cl
  425697:	adc    ebx,DWORD PTR [edx+0x7f]
  42569a:	and    dl,bl
  42569c:	xchg   edx,eax
  42569d:	das    
  42569e:	cmp    cl,BYTE PTR [edx]
  4256a0:	inc    edi
  4256a1:	out    0x10,eax
  4256a3:	nop
  4256a4:	loopne 0x425659
  4256a6:	cmp    ebx,esi
  4256a8:	add    ch,bl
  4256aa:	stos   DWORD PTR es:[edi],eax
  4256ab:	adc    ecx,DWORD PTR [edi-0x5569c7be]
  4256b1:	lods   eax,DWORD PTR ds:[esi]
  4256b2:	sbb    al,0x3a
  4256b4:	jmp    0x4256e6
  4256b6:	mov    es,eax
  4256b8:	jo     0x4256da
  4256ba:	loopne 0x425678
  4256bc:	call   0x548:0xff7649b3
  4256c3:	inc    esi
  4256c4:	jb     0x425735
  4256c6:	jnp    0x425669
  4256c8:	ror    bl,0xdd
  4256cb:	cmp    BYTE PTR [ecx],0x6c
  4256ce:	fs mov dh,0x1d
  4256d1:	push   esp
  4256d2:	cld    
  4256d3:	inc    ecx
  4256d4:	std    
  4256d5:	loop   0x4256e9
  4256d7:	mov    cl,0x58
  4256d9:	push   ebp
  4256da:	push   ss
  4256db:	ret    0x6ab
  4256de:	call   0x1ecc7a1d
  4256e3:	rdpmc  
  4256e5:	dec    DWORD PTR [edi-0x6af550f3]
  4256eb:	push   edx
  4256ec:	cmp    ah,BYTE PTR gs:[edi]
  4256ef:	add    al,0x28
  4256f1:	addr16 das 
  4256f3:	mov    gs,WORD PTR [ecx+0x290943d2]
  4256f9:	dec    esi
  4256fa:	bound  edx,QWORD PTR [ebx-0x37]
  4256fd:	dec    edx
  4256fe:	jl     0x42572d
  425700:	(bad)
  425703:	or     ebp,DWORD PTR [ebx]
  425705:	inc    esp
  425706:	dec    dh
  425708:	cmp    BYTE PTR [edx+0xe],al
  42570b:	pusha  
  42570c:	out    dx,eax
  42570d:	mov    al,0x53
  42570f:	xchg   edx,eax
  425710:	push   0x8912fe68
  425715:	jecxz  0x42571a
  425717:	mov    bh,0x10
  425719:	daa    
  42571a:	mov    ebx,0x5062d8b5
  42571f:	hlt    
  425720:	dec    ebx
  425721:	dec    eax
  425722:	adc    al,dl
  425724:	mov    dl,0x3
  425726:	call   0x656a1823
  42572b:	dec    ecx
  42572c:	jg     0x42579c
  42572e:	in     al,0x62
  425730:	(bad)  
  425731:	pop    ebp
  425732:	repnz adc dh,ah
  425735:	push   ss
  425736:	jns    0x42570d
  425738:	dec    ebp
  425739:	dec    esp
  42573a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42573b:	xchg   edi,eax
  42573c:	mov    eax,0xc98f1fc2
  425741:	shr    bl,1
  425743:	mov    bl,0x74
  425745:	shr    BYTE PTR ds:0x6382ae5d,0xab
  42574c:	dec    ecx
  42574d:	(bad)  [eax-0x60]
  425750:	sub    BYTE PTR [ecx+0x11e424f1],bh
  425756:	shl    DWORD PTR [esi-0x3b25739b],0x67
  42575d:	adc    edi,DWORD PTR [ebp+0x674cc7a1]
  425763:	hlt    
  425764:	mov    ebx,0x55520e7e
  425769:	cmp    BYTE PTR [ebx+0x43ce9bee],0xe2
  425770:	rsm    
  425772:	out    dx,al
  425773:	scas   al,BYTE PTR es:[edi]
  425774:	dec    ecx
  425775:	outs   dx,DWORD PTR ds:[esi]
  425776:	sub    esi,DWORD PTR fs:[ecx]
  425779:	test   DWORD PTR [eax+0x139143ad],ebp
  42577f:	xchg   esp,eax
  425780:	cmp    edx,DWORD PTR [eax]
  425782:	add    eax,0xe46c7221
  425787:	stos   DWORD PTR es:[edi],eax
  425788:	mov    al,0x20
  42578a:	and    BYTE PTR [edi-0x1a],cl
  42578d:	jns    0x425761
  42578f:	push   DWORD PTR [edx-0x6c]
  425792:	and    esp,DWORD PTR [esi]
  425794:	mov    ah,0xd1
  425796:	icebp  
  425797:	xlat   BYTE PTR ds:[ebx]
  425798:	push   edi
  425799:	popf   
  42579a:	lods   al,BYTE PTR ds:[esi]
  42579b:	and    DWORD PTR [eax+0x1ee438b1],edx
  4257a1:	pop    ds
  4257a2:	test   eax,0xe672b392
  4257a7:	std    
  4257a8:	daa    
  4257a9:	xchg   ebx,eax
  4257aa:	enter  0x801f,0x79
  4257ae:	add    al,0x20
  4257b0:	cmc    
  4257b1:	ins    DWORD PTR es:[edi],dx
  4257b2:	jae    0x42579b
  4257b4:	ror    DWORD PTR [esi],0x74
  4257b7:	sub    BYTE PTR [eax],dh
  4257b9:	scas   eax,DWORD PTR es:[edi]
  4257ba:	or     DWORD PTR [ebx-0x40],edi
  4257bd:	jo     0x4257f8
  4257bf:	mov    bl,0x54
  4257c1:	out    dx,al
  4257c2:	inc    ebx
  4257c3:	and    BYTE PTR [ebp+0x5de8ca5],bl
  4257c9:	(bad)  
  4257cb:	icebp  
  4257cc:	sbb    DWORD PTR [ebx],0xffffffce
  4257cf:	pop    esp
  4257d0:	inc    ebx
  4257d1:	jb     0x425760
  4257d3:	test   DWORD PTR [ebp+0x5f],esp
  4257d6:	xor    DWORD PTR [esi-0x443400f],ebx
  4257dc:	jns    0x4257b3
  4257de:	fisubr WORD PTR [edi-0x62783934]
  4257e4:	ficomp DWORD PTR [eax+0x3d]
  4257e7:	popf   
  4257e8:	and    ecx,ebx
  4257ea:	jmp    0x95cc1e4f
  4257ef:	cmp    al,0xf7
  4257f1:	mov    edx,0x6f86c250
  4257f6:	mov    bh,0xb1
  4257f8:	sbb    al,0xdd
  4257fa:	mov    cl,BYTE PTR [esi-0x75]
  4257fd:	ficomp WORD PTR [esi-0x73]
  425800:	jmp    0x4da6:0x6627115b
  425807:	test   DWORD PTR [ebp-0x69],esp
  42580a:	adc    al,0xbf
  42580c:	mov    eax,eax
  42580e:	adc    al,0x47
  425810:	mov    eax,ds:0xa170fe32
  425815:	mov    eax,0x65e2211c
  42581a:	cs retf 
  42581c:	jae    0x425876
  42581e:	ror    BYTE PTR [edx-0x3998cf2b],1
  425824:	add    edi,DWORD PTR [esi*2-0x416cc22d]
  42582b:	jmp    0x4258a6
  42582d:	popa   
  42582e:	repz (bad) 
  425830:	and    ch,BYTE PTR [eax]
  425832:	jae    0x42581a
  425834:	xchg   esi,eax
  425835:	cmp    al,0xf1
  425837:	cs pop ecx
  425839:	jecxz  0x4258b9
  42583b:	or     DWORD PTR [ecx+0x39],0x24
  42583f:	dec    ecx
  425840:	dec    eax
  425841:	inc    eax
  425842:	jmp    0xf996:0x940ff948
  425849:	ficomp WORD PTR [esi+0x1e]
  42584c:	dec    BYTE PTR [edi+0x98f6a7c]
  425852:	and    bh,dh
  425854:	inc    edi
  425855:	xor    bl,BYTE PTR [eax-0x33]
  425858:	jae    0x42587a
  42585a:	and    al,0x58
  42585c:	add    al,BYTE PTR [eax]
  42585e:	add    BYTE PTR [eax],al
  425860:	add    BYTE PTR [eax],al
  425862:	add    eax,0xaf44af85
  425867:	outs   dx,BYTE PTR ds:[esi]
  425868:	out    dx,eax
  425869:	lds    ecx,FWORD PTR [ecx-0x74a2c908]
  42586f:	sub    cl,BYTE PTR [edx+esi*2-0x1e]
  425873:	rol    BYTE PTR [ecx],1
  425875:	add    bl,dh
  425877:	add    al,0x0
  425879:	add    dh,bh
  42587b:	cmc    
  42587c:	xchg   DWORD PTR [edi-0x5b],ecx
  42587f:	or     cl,BYTE PTR [esi+0x1ca53307]
  425885:	fistp  WORD PTR [ecx+eax*2-0x2237d561]
  42588c:	and    al,0x33
  42588e:	mov    ds:0xab88ee9d,eax
  425893:	out    0xa4,al
  425895:	(bad)  
  425896:	jecxz  0x42584a
  425898:	sub    DWORD PTR [esi+0x33],ebp
  42589b:	daa    
  42589c:	(bad)  [edx+0x71]
  42589f:	scas   al,BYTE PTR es:[edi]
  4258a0:	inc    esp
  4258a1:	adc    al,0x69
  4258a3:	sub    ecx,ebx
  4258a5:	add    ecx,esi
  4258a7:	add    cl,bh
  4258a9:	outs   dx,BYTE PTR ds:[esi]
  4258aa:	or     al,0x2f
  4258ac:	fiadd  DWORD PTR [esi-0x80]
  4258af:	retf   
  4258b0:	push   esi
  4258b1:	popa   
  4258b2:	sar    DWORD PTR [edi],0xae
  4258b5:	cmp    BYTE PTR [ebp+0x20b1682c],dh
  4258bb:	aaa    
  4258bc:	mov    gs,WORD PTR [ebx+edx*4]
  4258bf:	adc    ecx,0x1c
  4258c2:	xor    eax,0xe8aea162
  4258c7:	cmc    
  4258c8:	pop    ebp
  4258c9:	xlat   BYTE PTR ds:[ebx]
  4258ca:	mov    cs,WORD PTR [ecx+eiz*2]
  4258cd:	pusha  
  4258ce:	aaa    
  4258cf:	cmp    ah,BYTE PTR [edi]
  4258d1:	out    0xdd,eax
  4258d3:	js     0x425921
  4258d5:	lods   eax,DWORD PTR ds:[esi]
  4258d6:	repnz adc al,0x12
  4258d9:	jno    0x42588f
  4258db:	test   ch,al
  4258dd:	or     BYTE PTR [edi+edi*2],cl
  4258e0:	cmp    al,BYTE PTR [eax+0x73]
  4258e3:	and    DWORD PTR [ecx+0x6f],edx
  4258e6:	int3   
  4258e7:	adc    esp,DWORD PTR [edx+0x32287223]
  4258ed:	xchg   ebx,eax
  4258ee:	sub    ecx,0xc
  4258f1:	(bad)  
  4258f2:	test   eax,0x69b8e7fd
  4258f7:	jmp    0xcb5996d2
  4258fc:	repz in eax,dx
  4258fe:	push   cs
  4258ff:	pushf  
  425900:	loop   0x425885
  425902:	jbe    0x425916
  425904:	push   si
  425906:	fdivr  QWORD PTR [ebp-0x56]
  425909:	test   DWORD PTR ds:0xfab121e5,ebp
  42590f:	daa    
  425910:	xchg   esp,eax
  425911:	icebp  
  425912:	dec    edi
  425913:	mov    cl,0x25
  425915:	pop    ss
  425916:	mov    cl,0x3d
  425918:	and    dl,BYTE PTR [ecx]
  42591a:	mov    ds:0x49f7d06f,eax
  42591f:	push   ecx
  425920:	mov    esi,0x9b740d90
  425925:	sbb    DWORD PTR [edx],0xffffff81
  425928:	mov    ds:0x5a5b283a,al
  42592d:	dec    ebp
  42592e:	xchg   BYTE PTR ds:0x6c0f6f10,al
  425934:	xchg   ebp,eax
  425935:	dec    eax
  425936:	inc    esi
  425937:	xor    al,0xe6
  425939:	cli    
  42593a:	hlt    
  42593b:	lahf   
  42593c:	xchg   BYTE PTR [eax],cl
  42593e:	and    DWORD PTR [esi+0x29],ebp
  425941:	dec    eax
  425942:	jb     0x425987
  425944:	inc    edx
  425945:	daa    
  425946:	mov    bh,0xd4
  425948:	mov    ch,0xcc
  42594a:	clc    
  42594b:	test   BYTE PTR [ecx-0x6ad89cb2],ah
  425951:	cmp    al,0x19
  425953:	jo     0x4259a9
  425955:	cmc    
  425956:	icebp  
  425957:	sub    dl,bh
  425959:	mov    ebx,0xddc6faed
  42595e:	jmp    0x42595a
  425960:	mov    dl,BYTE PTR [esi]
  425962:	addr16 jmp 0x425925
  425965:	cmp    al,0x52
  425967:	aas    
  425968:	(bad)  
  425969:	add    DWORD PTR [ebx+0x2f808640],edx
  42596f:	push   edx
  425970:	and    DWORD PTR [ebp+eax*2+0x5fa995e8],edi
  425977:	shr    BYTE PTR [edi],0x22
  42597a:	inc    esi
  42597b:	rcr    BYTE PTR [eax+0x37],cl
  42597e:	jne    0x42598e
  425980:	mov    ecx,0xf3cec416
  425985:	cwde   
  425986:	xor    DWORD PTR fs:[ebx-0x39d3e98f],ecx
  42598d:	in     al,0x5b
  42598f:	into   
  425990:	dec    edi
  425991:	icebp  
  425992:	mov    ebx,0xbc14f65e
  425997:	and    eax,0x2dfdab4a
  42599c:	push   edi
  42599d:	(bad)  
  42599f:	pop    es
  4259a0:	mov    bh,0xb2
  4259a2:	mov    eax,ds:0x860f42d3
  4259a7:	xchg   ebp,eax
  4259a8:	or     bl,BYTE PTR [ebp+0x36]
  4259ab:	inc    ebx
  4259ac:	and    eax,0x93230d28
  4259b1:	mov    dl,0xdc
  4259b3:	int3   
  4259b4:	lahf   
  4259b5:	repnz inc esi
  4259b7:	in     eax,dx
  4259b8:	pusha  
  4259b9:	xchg   edx,eax
  4259ba:	xor    al,0x7e
  4259bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259bd:	jg     0x42599a
  4259bf:	mov    bh,0x43
  4259c1:	shl    BYTE PTR [edx],0x1e
  4259c4:	mov    ebx,0xed193048
  4259c9:	jge    0x425a1e
  4259cb:	sbb    BYTE PTR [ebx],ah
  4259cd:	(bad)  
  4259ce:	retf   
  4259cf:	jmp    0xc54:0x24fa3823
  4259d6:	inc    ebp
  4259d7:	lea    esp,[ebp-0x80]
  4259da:	jns    0x4259c8
  4259dc:	retf   0x9a30
  4259df:	cmp    BYTE PTR [esi-0x7114df74],dh
  4259e5:	push   ecx
  4259e6:	jns    0x425a10
  4259e8:	or     ecx,DWORD PTR [edi]
  4259ea:	neg    BYTE PTR ds:0xb8eff3ae
  4259f0:	mov    ah,0xdc
  4259f2:	mov    ebx,ebx
  4259f4:	mov    ds:0xa83962d9,eax
  4259f9:	shr    DWORD PTR [esi-0x39105f72],1
  4259ff:	fs jb  0x4259c6
  425a02:	jo     0x425a5d
  425a04:	sbb    DWORD PTR [eax+0x52],edx
  425a07:	loop   0x425a01
  425a09:	cwde   
  425a0a:	das    
  425a0b:	and    al,0x6d
  425a0d:	cmp    eax,0x33bd7aaa
  425a12:	rcl    ah,cl
  425a14:	pushf  
  425a15:	mov    edi,0xa663946f
  425a1a:	pop    es
  425a1b:	inc    esi
  425a1c:	add    al,0x7c
  425a1e:	mov    dh,0xf1
  425a20:	mov    ch,0x75
  425a22:	lea    esp,[ecx]
  425a24:	xchg   edx,eax
  425a25:	sub    al,0xb1
  425a27:	repz xor BYTE PTR [ebp+0x2f],0xba
  425a2c:	jbe    0x4259c7
  425a2e:	mov    ebx,0xea0e9c16
  425a33:	out    dx,eax
  425a34:	jne    0x425a73
  425a36:	xor    esi,0x76786b2a
  425a3c:	fld    QWORD PTR [ebx]
  425a3e:	and    DWORD PTR [eax-0x60],eax
  425a41:	pop    ecx
  425a42:	je     0x425a51
  425a44:	sbb    eax,0xbc5c9d0b
  425a49:	add    bl,bh
  425a4b:	aad    0x4f
  425a4d:	sub    al,BYTE PTR [edi+ebp*4-0x47]
  425a51:	xchg   edi,eax
  425a52:	jle    0x425a2c
  425a54:	xchg   BYTE PTR [ebp+0x73],bh
  425a57:	dec    esi
  425a58:	mov    cl,0xa0
  425a5a:	mov    ch,0x55
  425a5c:	not    BYTE PTR [esi-0x55]
  425a5f:	inc    edx
  425a60:	sbb    eax,0x5811e490
  425a65:	sub    al,0x7
  425a67:	iret   
  425a68:	in     eax,0xd2
  425a6a:	cmp    BYTE PTR [esi+ecx*1+0x7e014875],0xfe
  425a72:	xchg   ecx,eax
  425a73:	loopne 0x4259fe
  425a75:	(bad)  
  425a76:	xchg   esi,eax
  425a77:	and    al,0xba
  425a79:	pop    ebx
  425a7a:	inc    ebx
  425a7b:	or     esp,DWORD PTR [esi+0x29dec6a6]
  425a81:	xchg   DWORD PTR [edi+0x36],ebx
  425a84:	fbld   TBYTE PTR [ebx+0x5e08a026]
  425a8a:	adc    eax,0xd2af3623
  425a8f:	imul   esp,DWORD PTR [eax],0xffffffbe
  425a92:	in     eax,0x29
  425a94:	xchg   ebx,eax
  425a95:	fistp  WORD PTR [edi+0x20]
  425a98:	rol    ch,0xa0
  425a9b:	sub    bh,BYTE PTR [esi-0x2eb083ae]
  425aa1:	push   ebx
  425aa2:	xor    ebp,ebp
  425aa4:	popa   
  425aa5:	fnsave ds:0x7f2c7295
  425aab:	push   ecx
  425aac:	and    al,0x32
  425aae:	add    DWORD PTR [edi+0x18346514],esi
  425ab4:	jo     0xc5624ce0
  425aba:	loop   0x425aac
  425abc:	or     al,0x8
  425abe:	pushf  
  425abf:	dec    edi
  425ac0:	cli    
  425ac1:	push   edx
  425ac2:	cmp    eax,0x50555404
  425ac7:	adc    BYTE PTR [ebx+0x1d51b9d7],cl
  425acd:	jl     0x425b3b
  425acf:	les    eax,FWORD PTR [ecx]
  425ad1:	outs   dx,BYTE PTR ds:[esi]
  425ad2:	mov    al,0x15
  425ad4:	jmp    0xf3e4:0x3b8e0aa4
  425adb:	sar    ebx,0x3a
  425ade:	repnz mov dh,0x17
  425ae1:	pusha  
  425ae2:	lods   al,BYTE PTR ds:[esi]
  425ae3:	es fs xor eax,0xabd6db53
  425aea:	iret   
  425aeb:	repz cwde 
  425aed:	in     eax,0x83
  425aef:	inc    ebx
  425af0:	gs add eax,0x2ad8c73e
  425af6:	xor    BYTE PTR [edx-0x370f86bc],cl
  425afc:	or     al,0x3b
  425afe:	rol    BYTE PTR [esi],1
  425b00:	out    0xd3,al
  425b02:	(bad)  
  425b03:	out    dx,al
  425b04:	inc    esp
  425b05:	out    dx,eax
  425b06:	mov    ds:0x99f474ba,eax
  425b0b:	repnz cmp al,0xa2
  425b0e:	loope  0x425b24
  425b10:	mov    ds:0x87a22632,eax
  425b15:	add    ebx,edi
  425b17:	int3   
  425b18:	jle    0x425b29
  425b1a:	jecxz  0x425b8d
  425b1c:	cwde   
  425b1d:	shl    DWORD PTR [ebx+0x3618992b],1
  425b23:	jg     0x425b9f
  425b25:	lahf   
  425b26:	sbb    edx,DWORD PTR [edx+ecx*1]
  425b29:	loop   0x425b26
  425b2b:	out    dx,eax
  425b2c:	(bad)  
  425b2d:	fiadd  DWORD PTR [esi]
  425b2f:	add    DWORD PTR [ebx],0x3a0d61f8
  425b35:	retf   0x6256
  425b38:	jmp    0xcfed07f2
  425b3d:	xchg   edx,eax
  425b3e:	xchg   esi,eax
  425b3f:	call   0xa55100b1
  425b44:	mov    es,esp
  425b46:	test   BYTE PTR [edx],ch
  425b48:	xlat   BYTE PTR ds:[ebx]
  425b49:	mov    ch,0xba
  425b4b:	call   0x43928bb1
  425b50:	jp     0x425bb7
  425b52:	and    al,0x26
  425b54:	test   eax,0xa3f0d08f
  425b59:	add    dh,BYTE PTR [ebp-0x19]
  425b5c:	cwde   
  425b5d:	and    al,0x1e
  425b5f:	std    
  425b60:	cwde   
  425b61:	xchg   edi,eax
  425b62:	arpl   WORD PTR [esi],bp
  425b64:	xchg   esi,eax
  425b65:	test   al,0x5b
  425b67:	shl    dl,0xab
  425b6a:	inc    ebp
  425b6b:	ret    0x5802
  425b6e:	mov    bh,0xa5
  425b70:	inc    edi
  425b71:	pop    esp
  425b72:	dec    esp
  425b73:	mov    dl,0x46
  425b75:	stos   DWORD PTR es:[edi],eax
  425b76:	mov    ch,0x25
  425b78:	or     eax,ebp
  425b7a:	dec    edi
  425b7b:	xor    ah,BYTE PTR [ecx+ecx*4+0x22]
  425b7f:	add    ecx,DWORD PTR [ebx-0xfd9273b]
  425b85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b86:	aas    
  425b87:	inc    edi
  425b88:	ins    DWORD PTR es:[edi],dx
  425b89:	shr    bl,0xfd
  425b8c:	fadd   st(0),st
  425b8e:	imul   eax,esp,0x94959c83
  425b94:	je     0x425baa
  425b96:	fwait
  425b97:	jno    0x425bfc
  425b99:	adc    DWORD PTR [ebx-0x49dbfcb4],0xfcea8aa8
  425ba3:	mov    WORD PTR [ebx],?
  425ba5:	inc    edx
  425ba6:	int    0x49
  425ba8:	pop    eax
  425ba9:	jp     0x425c10
  425bab:	stos   BYTE PTR es:[edi],al
  425bac:	add    dh,dh
  425bae:	mov    eax,ds:0x94a3de61
  425bb3:	jns    0x425c2f
  425bb5:	cmp    eax,0xda8628a2
  425bba:	mov    eax,ds:0x5113bf0c
  425bbf:	fwait
  425bc0:	sti    
  425bc1:	(bad)  
  425bc2:	retf   0x1fe6
  425bc5:	shr    BYTE PTR [edx],1
  425bc7:	aas    
  425bc8:	arpl   WORD PTR [edi],bp
  425bca:	imul   esp,DWORD PTR es:[edi+0x5b],0x1c57afd5
  425bd2:	pop    ebp
  425bd3:	or     bl,ch
  425bd5:	dec    eax
  425bd6:	mov    eax,0xd4ca0e7f
  425bdb:	jns    0x7aa8af19
  425be1:	loope  0x425bd3
  425be3:	rep stos BYTE PTR es:[edi],al
  425be5:	leave  
  425be6:	adc    DWORD PTR ds:0x1adab2dd,edx
  425bec:	xor    al,0x70
  425bee:	clc    
  425bef:	aaa    
  425bf0:	add    DWORD PTR [edi-0x7],esp
  425bf3:	jns    0x425b9a
  425bf5:	cmp    eax,0x489f1088
  425bfa:	or     esi,DWORD PTR [eax-0x1e]
  425bfd:	fisttp WORD PTR ds:0x3b4de68b
  425c03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c05:	loopne 0x425bb5
  425c07:	and    dl,ch
  425c09:	and    ebx,DWORD PTR [ebx]
  425c0b:	(bad)  
  425c0d:	cld    
  425c0e:	push   ebp
  425c0f:	fistp  DWORD PTR [eax+0x6a]
  425c12:	loopne 0x425c22
  425c14:	call   0x9ffaefdc
  425c19:	add    al,BYTE PTR [edi+0x6a5909da]
  425c1f:	mov    ds:0x4a923771,al
  425c24:	ret    
  425c25:	inc    eax
  425c26:	pop    ebx
  425c27:	out    dx,al
  425c28:	mov    ebx,0x2fbf0415
  425c2d:	daa    
  425c2e:	dec    ecx
  425c2f:	clc    
  425c30:	cmp    dh,BYTE PTR ds:0xa4b389b0
  425c36:	je     0x425c84
  425c38:	push   edx
  425c39:	test   DWORD PTR [eax],0x5c990803
  425c3f:	scas   al,BYTE PTR es:[edi]
  425c40:	popa   
  425c41:	ficom  WORD PTR [esi+0x14d3cc10]
  425c47:	xor    DWORD PTR [esi-0x9],0x72
  425c4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c4c:	mov    edi,0xf1d831a3
  425c51:	xor    cl,BYTE PTR [esi-0x3a]
  425c54:	dec    ebp
  425c55:	jb     0x425c16
  425c57:	dec    esp
  425c58:	xchg   BYTE PTR [ecx-0x78eb013e],cl
  425c5e:	sahf   
  425c5f:	fwait
  425c60:	inc    ebp
  425c61:	dec    edx
  425c62:	jnp    0x425c96
  425c64:	out    dx,al
  425c65:	data16 into 
  425c67:	or     esp,DWORD PTR [ebx]
  425c69:	retf   0x3906
  425c6c:	adc    eax,0x6489e398
  425c71:	(bad)  
  425c72:	push   edi
  425c73:	jno    0x425cbc
  425c75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c76:	mov    ebx,0xd6ad58dc
  425c7b:	repz jge 0x425c8a
  425c7e:	fcmovnu st,st(3)
  425c80:	lds    ebx,FWORD PTR [esi]
  425c82:	sub    al,0xce
  425c84:	dec    esp
  425c85:	sti    
  425c86:	adc    ebp,eax
  425c88:	data16 outs dx,BYTE PTR ds:[esi]
  425c8a:	ret    0x40e0
  425c8d:	pop    edi
  425c8e:	mov    ecx,0x716adaf8
  425c93:	ret    0x551f
  425c96:	imul   ebp,DWORD PTR [ebx-0x60],0xbc761ab
  425c9d:	(bad)  
  425c9e:	pop    eax
  425c9f:	aaa    
  425ca0:	imul   eax,DWORD PTR [eax+0x6e],0xfa9cf380
  425ca7:	jae    0x425c4e
  425ca9:	enter  0xc6e1,0x2f
  425cad:	push   ss
  425cae:	outs   dx,DWORD PTR ds:[esi]
  425caf:	fsubr  st(4),st
  425cb1:	sub    esi,esi
  425cb3:	ds mov esp,0xb186cdd8
  425cb9:	and    DWORD PTR [edx+0x3b62deff],eax
  425cbf:	call   0x855ecc97
  425cc4:	fiadd  DWORD PTR [esi+eax*4]
  425cc7:	ins    BYTE PTR es:[edi],dx
  425cc8:	mov    ah,BYTE PTR [ecx-0xd]
  425ccb:	adc    ebx,DWORD PTR [edx+0x52]
  425cce:	pushf  
  425ccf:	popf   
  425cd0:	and    ebp,DWORD PTR [edx+ecx*4]
  425cd3:	add    cl,bh
  425cd5:	in     al,dx
  425cd6:	arpl   WORD PTR [ecx+0x2775e43d],ax
  425cdc:	xchg   ecx,eax
  425cdd:	adc    al,0xf2
  425cdf:	shr    DWORD PTR [esi-0x7ab089cf],0xbf
  425ce6:	rol    BYTE PTR [esi+0x3a],0xf3
  425cea:	lea    ebx,[esp+ebx*1-0x4b]
  425cee:	nop    DWORD PTR [eax]
  425cf1:	adc    BYTE PTR [eax+0x27],0xd1
  425cf5:	cmp    cl,BYTE PTR [edi-0x4dd41cd5]
  425cfb:	sub    ah,BYTE PTR [ebp+0x5f2e3056]
  425d01:	inc    eax
  425d02:	jnp    0x425d48
  425d04:	gs (bad) 
  425d06:	(bad)  
  425d07:	jmp    0x7455bebd
  425d0c:	mov    ah,0x91
  425d0e:	popf   
  425d0f:	repnz inc eax
  425d11:	sti    
  425d12:	and    al,BYTE PTR [eax+ebx*8-0x3]
  425d16:	scas   al,BYTE PTR es:[edi]
  425d17:	add    dl,BYTE PTR [ecx-0x642b0fa1]
  425d1d:	ins    DWORD PTR es:[edi],dx
  425d1e:	loop   0x425caa
  425d20:	dec    esp
  425d21:	pop    esp
  425d22:	lods   eax,DWORD PTR ds:[esi]
  425d23:	xor    BYTE PTR es:[edi+0x22c3e1b2],ah
  425d2a:	push   esp
  425d2b:	push   esi
  425d2c:	xchg   esi,eax
  425d2d:	cdq    
  425d2e:	adc    ebx,ebx
  425d30:	(bad)  
  425d31:	fs mov edi,0x9d9edd88
  425d37:	dec    edx
  425d38:	shl    BYTE PTR [esi],0x7d
  425d3b:	jle    0x425d76
  425d3d:	mov    dh,0x8b
  425d3f:	add    dl,BYTE PTR [eax]
  425d41:	dec    ebp
  425d42:	aas    
  425d43:	adc    al,0xd0
  425d45:	xchg   edi,eax
  425d46:	xor    cl,BYTE PTR [ebx+0x6a]
  425d49:	ror    DWORD PTR [esi+0x57],cl
  425d4c:	mov    ss,WORD PTR [esi+0x2fa21384]
  425d52:	push   ss
  425d53:	jge    0x425d6f
  425d55:	mov    esp,DWORD PTR [esi+0x13]
  425d58:	push   DWORD PTR [eax+0x3d95e3fe]
  425d5e:	xchg   edi,eax
  425d5f:	push   0x2b
  425d61:	pusha  
  425d62:	fistp  WORD PTR [ebp+0x41]
  425d65:	mov    eax,0xed5e0f81
  425d6a:	or     bl,BYTE PTR [ebx+0xab]
  425d70:	add    BYTE PTR [eax],al
  425d72:	out    dx,al
  425d73:	retf   0xd589
  425d76:	lods   eax,DWORD PTR ds:[esi]
  425d77:	xlat   BYTE PTR ds:[ebx]
  425d78:	(bad)  
  425d79:	sti    
  425d7a:	(bad)  
  425d7c:	mov    ss,WORD PTR [esi+edi*1+0x59]
  425d80:	push   esi
  425d81:	xor    al,0xd5
  425d83:	aad    0x1
  425d85:	add    bl,dh
  425d87:	add    al,0x0
  425d89:	add    BYTE PTR [ecx+ecx*8+0x1],dh
  425d8d:	les    esp,FWORD PTR [edi]
  425d8f:	les    edx,FWORD PTR [ebx+edi*4-0x7d1efad5]
  425d96:	repnz std 
  425d98:	lods   al,BYTE PTR ds:[esi]
  425d99:	scas   eax,DWORD PTR es:[edi]
  425d9a:	lods   al,BYTE PTR ds:[esi]
  425d9b:	lock retf 
  425d9d:	inc    edi
  425d9e:	lea    edi,[edi]
  425da0:	push   edi
  425da1:	ins    DWORD PTR es:[edi],dx
  425da2:	or     esi,DWORD PTR [eax]
  425da4:	test   DWORD PTR [eax+0x50e7e12d],esp
  425daa:	enter  0x6cd3,0xd9
  425dae:	jns    0x425db8
  425db0:	and    al,0x70
  425db2:	adc    al,0xc4
  425db4:	xor    ah,BYTE PTR [ecx-0xd]
  425db7:	jle    0x425e30
  425db9:	lahf   
  425dba:	xchg   ebp,eax
  425dbb:	leave  
  425dbc:	push   es
  425dbd:	inc    esp
  425dbe:	enter  0x8c1d,0x7e
  425dc2:	test   DWORD PTR [ebx+0x3143b5e2],esp
  425dc8:	popf   
  425dc9:	push   cs
  425dca:	das    
  425dcb:	mov    ebx,0x8a354b76
  425dd0:	lods   eax,DWORD PTR ds:[esi]
  425dd1:	xor    DWORD PTR [ebx],edi
  425dd3:	mov    dl,0x38
  425dd5:	inc    edx
  425dd6:	or     DWORD PTR [edi],esi
  425dd8:	pusha  
  425dd9:	out    dx,eax
  425dda:	or     DWORD PTR [edx+0x79],edi
  425ddd:	stos   DWORD PTR es:[edi],eax
  425dde:	pop    edi
  425ddf:	jbe    0x425e28
  425de1:	and    BYTE PTR [ebx+0x3d],bh
  425de4:	sub    DWORD PTR [esi-0x61],edx
  425de7:	inc    edi
  425de8:	shr    DWORD PTR [edx+eax*1],0x6b
  425dec:	retf   
  425ded:	sub    bl,BYTE PTR [eax]
  425def:	sub    ebx,0xffffffca
  425df2:	sbb    eax,0x856545d
  425df7:	adc    DWORD PTR [ecx+0x6c],ebx
  425dfa:	and    ebx,ecx
  425dfc:	mov    ecx,0x1125b649
  425e01:	xor    eax,DWORD PTR [ebx+esi*4]
  425e04:	or     ebx,DWORD PTR [ecx]
  425e06:	scas   al,BYTE PTR es:[edi]
  425e07:	pop    eax
  425e08:	xchg   esi,eax
  425e09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e0a:	ja     0x425df1
  425e0c:	call   0x2e8852f7
  425e11:	mov    al,0x58
  425e13:	jo     0x425e6d
  425e15:	dec    edx
  425e16:	sbb    DWORD PTR [ecx+0x791fdb34],0x53b6a45c
  425e20:	retf   0x2995
  425e23:	adc    eax,0xb221d17
  425e28:	test   DWORD PTR [ebx+0x43eb795c],edx
  425e2e:	pop    ds
  425e2f:	(bad)  
  425e30:	xor    eax,0x282a8bce
  425e35:	fsub   QWORD PTR [edx+0x240b657]
  425e3b:	fisubr DWORD PTR [esi]
  425e3d:	fdiv   st,st(3)
  425e3f:	test   al,0xeb
  425e41:	ins    DWORD PTR es:[edi],dx
  425e42:	out    0x49,eax
  425e44:	and    BYTE PTR [edx+0x574abe9a],dl
  425e4a:	sub    BYTE PTR [ecx],ch
  425e4c:	fwait
  425e4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425e4e:	mov    esp,cs
  425e50:	push   ebx
  425e51:	cmp    BYTE PTR [edi+eiz*4],ah
  425e54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e55:	test   edx,edx
  425e57:	in     al,dx
  425e58:	pop    ecx
  425e59:	sbb    eax,0xb60079f7
  425e5e:	div    DWORD PTR [ebp-0x2ce3675b]
  425e64:	push   cs
  425e65:	lea    edi,[edi]
  425e67:	and    BYTE PTR [ecx+0x64c805c2],dh
  425e6d:	iret   
  425e6e:	iret   
  425e6f:	hlt    
  425e70:	and    DWORD PTR [eax],eax
  425e72:	lods   al,BYTE PTR ds:[esi]
  425e73:	test   eax,0xaaaa01b8
  425e78:	(bad)  
  425e79:	mov    ch,0xa0
  425e7b:	mov    esp,0xab7ec06d
  425e80:	in     eax,0x9
  425e82:	mov    cl,0x19
  425e84:	add    eax,0xfb335872
  425e89:	xchg   ebx,eax
  425e8a:	out    dx,al
  425e8b:	(bad)  
  425e8c:	cmc    
  425e8d:	das    
  425e8e:	mov    WORD PTR [ebp-0x58af71e2],cs
  425e94:	jo     0x425ed7
  425e96:	mov    eax,ds:0xd1e9fc67
  425e9b:	cmp    DWORD PTR [ecx-0x5e1bb46],ecx
  425ea1:	or     al,0x53
  425ea3:	xchg   esp,eax
  425ea4:	nop
  425ea5:	cwde   
  425ea6:	cmp    eax,0x1e95b944
  425eab:	sub    DWORD PTR [esi+eiz*8],eax
  425eae:	mov    WORD PTR [ebx+0x3b49939f],gs
  425eb4:	cmp    edx,DWORD PTR [edx+0x106b349b]
  425eba:	mov    BYTE PTR [edi-0x43d0ce29],al
  425ec0:	adc    eax,0xa3d9f6ed
  425ec5:	jns    0x425f46
  425ec7:	or     al,0x37
  425eca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ecb:	push   cs
  425ecc:	scas   al,BYTE PTR es:[edi]
  425ecd:	fwait
  425ece:	jle    0x425e62
  425ed0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ed1:	inc    edi
  425ed2:	xchg   esi,eax
  425ed3:	push   0xffffff8e
  425ed5:	popa   
  425ed6:	mov    dh,0xba
  425ed8:	ret    
  425ed9:	out    dx,al
  425eda:	iret   
  425edb:	and    edx,DWORD PTR [edx-0x18]
  425ede:	dec    eax
  425edf:	pusha  
  425ee0:	cmp    dh,bl
  425ee2:	(bad)  
  425ee4:	jmp    0x6b41:0xfa81dd4b
  425eeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425eec:	mov    ch,0x6
  425eee:	sub    esp,DWORD PTR [edx]
  425ef0:	mov    edi,DWORD PTR [edi+0x2c8d6a05]
  425ef6:	stos   DWORD PTR es:[edi],eax
  425ef7:	leave  
  425ef8:	lahf   
  425ef9:	ficom  DWORD PTR [ebx]
  425efb:	pop    ss
  425efc:	lods   eax,DWORD PTR ds:[esi]
  425efd:	xor    al,0x20
  425eff:	call   0xbd5a:0x7955dab4
  425f06:	push   esi
  425f07:	mov    eax,ds:0x566d83b9
  425f0c:	jb     0x425f4c
  425f0e:	pop    ebp
  425f0f:	fsubr  st,st(5)
  425f11:	jo     0x425ef8
  425f13:	icebp  
  425f14:	jbe    0x425f0c
  425f16:	inc    edx
  425f17:	mov    bl,BYTE PTR [ebx+0x3c]
  425f1a:	jb     0x425f95
  425f1c:	jg     0x425f7d
  425f1e:	(bad)  
  425f1f:	imul   eax,DWORD PTR [esi],0xffffff99
  425f22:	xor    cl,cl
  425f24:	sbb    al,0xc6
  425f26:	retf   
  425f27:	retf   
  425f28:	aad    0x49
  425f2a:	fdiv   DWORD PTR [ebp+0x35]
  425f2d:	sub    ah,dh
  425f2f:	stos   DWORD PTR es:[edi],eax
  425f30:	or     BYTE PTR [esi-0x1c68053e],bl
  425f36:	sar    BYTE PTR [ebp-0x2174b435],1
  425f3c:	or     DWORD PTR [edx-0x2f17bd2a],edx
  425f42:	add    al,0xa5
  425f44:	mov    WORD PTR [edi-0x2a],ss
  425f47:	adc    eax,0xa92fdcf8
  425f4c:	es out 0x52,al
  425f4f:	sbb    bh,bl
  425f51:	ins    DWORD PTR es:[edi],dx
  425f52:	shl    bh,0x1a
  425f55:	aad    0xad
  425f57:	sbb    ah,dl
  425f59:	or     eax,0x3dd197ca
  425f5e:	cmp    BYTE PTR [ebx],bh
  425f60:	push   ds
  425f61:	push   edx
  425f62:	xchg   BYTE PTR ds:0x3a7d40b1,dh
  425f68:	jo     0x425f0e
  425f6a:	fstp   QWORD PTR [eax+0x6e]
  425f6d:	jecxz  0x425f28
  425f6f:	adc    DWORD PTR [ecx],0x7d
  425f72:	or     al,0xd
  425f74:	push   ss
  425f75:	sbb    ecx,DWORD PTR [ecx+0x748b4e2]
  425f7b:	out    dx,eax
  425f7c:	ror    BYTE PTR [esi-0x3ad0c263],0xa
  425f83:	adc    DWORD PTR [ebx+0x19277945],0x1095d818
  425f8d:	rcl    dl,cl
  425f8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425f90:	xor    dh,ah
  425f92:	jp     0x425f6b
  425f94:	push   es
  425f95:	mov    dh,0xa0
  425f97:	sbb    ecx,ecx
  425f99:	jge    0x425f66
  425f9b:	stos   DWORD PTR es:[edi],eax
  425f9c:	ins    DWORD PTR es:[edi],dx
  425f9d:	mov    ds:0x7f3503f2,eax
  425fa2:	sbb    eax,0xff263e46
  425fa7:	or     eax,0x954c4b7b
  425fac:	pop    eax
  425fad:	mov    eax,ds:0x69820ee7
  425fb2:	and    eax,0x4597a223
  425fb7:	jno    0x425f42
  425fb9:	and    al,0xa3
  425fbb:	ja     0x425f4d
  425fbd:	sub    dh,BYTE PTR [edx]
  425fbf:	mov    dh,0x3
  425fc1:	inc    ebp
  425fc2:	push   edi
  425fc3:	enter  0xeea1,0x9f
  425fc7:	das    
  425fc8:	adc    edi,ebp
  425fca:	sti    
  425fcb:	data16 add BYTE PTR [eax+edx*2-0x17],cl
  425fd0:	arpl   WORD PTR [esi+0x1e8683d8],di
  425fd6:	mov    esi,0x89d64d95
  425fdb:	adc    al,dl
  425fdd:	pop    edi
  425fde:	push   cs
  425fdf:	(bad)  
  425fe0:	(bad)  ds:0x2cd31e45
  425fe6:	mov    bh,0xd2
  425fe8:	fstp   TBYTE PTR [esi-0x1]
  425feb:	js     0x425fe7
  425fed:	sub    BYTE PTR [ebp+0x25],dh
  425ff0:	xor    DWORD PTR [ecx+0x1e],ebp
  425ff3:	jae    0x425fa8
  425ff5:	in     al,dx
  425ff6:	cs addr16 cs inc ebp
  425ffa:	fild   WORD PTR [edi]
  425ffc:	outs   dx,DWORD PTR ds:[esi]
  425ffd:	imul   eax,DWORD PTR [esi+edx*1-0x76b2e408],0x38
  426005:	sbb    eax,0x9100f419
  42600a:	cmp    esp,DWORD PTR [edx-0x6fb5717c]
  426010:	xor    ecx,esi
  426012:	push   ebp
  426013:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426014:	sbb    edi,DWORD PTR [esi+0x60]
  426017:	ffree  st(4)
  42601a:	mov    edi,0x5de25935
  42601f:	add    ebp,DWORD PTR [eax+ebp*4+0x2]
  426023:	mov    ds:0xc035fd73,eax
  426028:	pop    edi
  426029:	repnz in al,dx
  42602b:	mov    bh,0xe7
  42602d:	mov    DWORD PTR [ebx+eiz*4],edx
  426030:	test   eax,0xa8b7ef60
  426035:	mov    al,ds:0x5ee84d13
  42603a:	bound  ebp,QWORD PTR [ebx-0x61fb28da]
  426040:	mov    ?,esi
  426042:	test   al,0xcb
  426044:	jmp    0xdac2:0x995d6f0d
  42604b:	cdq    
  42604c:	(bad)  
  42604d:	push   esp
  42604e:	sbb    esi,edi
  426050:	and    al,0x6f
  426052:	mov    ebx,0x55f94bcb
  426057:	lea    ebx,[ebx-0x4b]
  42605a:	test   DWORD PTR ds:0xaeef0552,ebx
  426060:	inc    ebx
  426061:	es cdq 
  426063:	cli    
  426064:	dec    ebp
  426065:	bound  ebx,QWORD PTR [esi-0x64a6fc7c]
  42606b:	fist   DWORD PTR [eax-0x50]
  42606e:	loope  0x4260bc
  426070:	and    al,0xb0
  426072:	sahf   
  426073:	jge    0x426099
  426075:	lea    esi,[edi+ebp*8-0x40]
  426079:	cmp    al,0xe
  42607b:	std    
  42607c:	ror    dh,0x54
  42607f:	fiadd  DWORD PTR [eax]
  426081:	in     al,dx
  426082:	xchg   ebp,eax
  426083:	mov    al,0x43
  426085:	push   ebx
  426086:	add    ecx,DWORD PTR [eax+eax*2+0x1b]
  42608a:	jne    0x4260c0
  42608c:	jle    0x426050
  42608e:	jecxz  0x4260c9
  426090:	mov    dh,0xf9
  426092:	pop    ebp
  426093:	cmp    BYTE PTR [esi-0x76d48002],bl
  426099:	add    ebx,edx
  42609b:	int3   
  42609c:	aam    0x37
  42609e:	clts   
  4260a0:	or     BYTE PTR [edx-0x26],ah
  4260a3:	mov    bl,0xa7
  4260a5:	mov    edx,0xe7d3cb03
  4260aa:	dec    BYTE PTR [eax-0x34ec8a7d]
  4260b0:	js     0x426073
  4260b2:	(bad)  
  4260b3:	and    al,0x48
  4260b5:	cli    
  4260b6:	loopne 0x426063
  4260b8:	push   eax
  4260b9:	jae    0x426067
  4260bb:	sub    al,0x27
  4260bd:	sub    edi,ebx
  4260bf:	jno    0x42605b
  4260c1:	sbb    eax,0x9ac99c3a
  4260c6:	cmp    ch,BYTE PTR [ebx+0x3aeb3a30]
  4260cc:	fcom   DWORD PTR [ecx+0x18d40e7b]
  4260d2:	sbb    DWORD PTR [esi-0x50],edx
  4260d5:	test   DWORD PTR [edx-0x67],0xa09eb4e7
  4260dc:	(bad)  
  4260dd:	xchg   esp,eax
  4260de:	add    al,0xbd
  4260e0:	push   0x66
  4260e2:	jnp    0x4260d8
  4260e4:	add    al,0xa
  4260e6:	jo     0x426109
  4260e8:	xchg   edi,eax
  4260e9:	outs   dx,DWORD PTR ds:[esi]
  4260ea:	lds    edx,FWORD PTR [ecx-0x6e]
  4260ed:	ror    DWORD PTR [eax-0x7c],0x9b
  4260f1:	add    BYTE PTR [ebx],ch
  4260f3:	shl    al,cl
  4260f5:	or     eax,0x5082913
  4260fa:	sbb    cl,BYTE PTR [eax]
  4260fc:	jmp    0x5b12:0x29746922
  426103:	mov    al,ds:0xdb04e93a
  426108:	and    ecx,DWORD PTR ds:0xfea187f1
  42610e:	ret    
  42610f:	rcr    BYTE PTR [ecx+ebp*1+0x19],cl
  426113:	xchg   BYTE PTR [ebx+0x17],ah
  426116:	jbe    0x42613f
  426118:	mov    bl,0x9f
  42611a:	or     al,0x7e
  42611c:	(bad)  
  42611d:	cmc    
  42611e:	fwait
  42611f:	sbb    bh,ah
  426121:	addr16 ret 
  426123:	push   cs
  426124:	nop
  426125:	mov    bl,0xb4
  426127:	adc    dl,BYTE PTR ds:0xd033fc90
  42612d:	mov    ebx,DWORD PTR [eax-0x51]
  426130:	call   0x8b92:0xd6ddaa7a
  426137:	jno    0x42613c
  426139:	adc    DWORD PTR [ebx+edi*8-0x1d],esi
  42613d:	popf   
  42613e:	or     eax,0x3945f4f5
  426143:	je     0x42618b
  426145:	sbb    ebp,eax
  426147:	jl     0x4260d4
  426149:	xchg   esp,eax
  42614a:	mov    BYTE PTR [ebx-0x2bde0bde],ch
  426150:	pop    edx
  426151:	ss sahf 
  426153:	fs mov eax,0x2858e5f8
  426159:	mov    dl,0x8f
  42615b:	mov    dl,0x30
  42615d:	dec    ecx
  42615e:	cs pop ebp
  426160:	xor    dh,BYTE PTR [ebp-0xf]
  426163:	arpl   dx,bp
  426165:	(bad)  
  426166:	cld    
  426167:	clc    
  426168:	out    dx,eax
  426169:	(bad)  
  42616a:	stc    
  42616b:	pop    DWORD PTR [ecx]
  42616d:	fadd   DWORD PTR [esp+edx*2]
  426170:	dec    edx
  426171:	adc    BYTE PTR [eax],al
  426173:	mov    ch,0x87
  426175:	data16 loopne 0x4261d2
  426178:	jl     0x4261a9
  42617a:	xchg   DWORD PTR [edi+0x4d04d859],edx
  426180:	into   
  426181:	cld    
  426182:	ds ss (bad) 
  426185:	cwde   
  426186:	out    0x63,eax
  426188:	xchg   dh,ch
  42618a:	shr    BYTE PTR [esp+esi*4-0x63],cl
  42618e:	xchg   ebp,eax
  42618f:	loopne 0x4261fe
  426191:	mov    edx,0x34267451
  426196:	or     DWORD PTR [edi-0x37],ebx
  426199:	sub    bl,BYTE PTR [ebx+0x2ac2e750]
  42619f:	(bad)  
  4261a0:	nop
  4261a1:	and    al,0x1
  4261a3:	dec    ecx
  4261a4:	mov    eax,0x2751d02
  4261a9:	or     dh,dh
  4261ab:	and    BYTE PTR ds:0x14f1b6d5,bl
  4261b1:	iret   
  4261b2:	test   al,0x2d
  4261b4:	jp     0x426189
  4261b6:	dec    esi
  4261b7:	push   edi
  4261b8:	jge    0x426155
  4261ba:	ja     0x426233
  4261bc:	js     0x4261e4
  4261be:	sti    
  4261bf:	int3   
  4261c0:	ret    
  4261c1:	ds jg  0x42620b
  4261c4:	add    DWORD PTR [edx],esi
  4261c6:	js     0x42617b
  4261c8:	ja     0x42620a
  4261ca:	xor    ecx,DWORD PTR [ecx-0xb093e8]
  4261d0:	mov    bh,0xab
  4261d2:	scas   eax,DWORD PTR es:[edi]
  4261d3:	push   0xffffff92
  4261d5:	test   DWORD PTR [eax-0x30],ebx
  4261d8:	cmp    eax,0xb94c5eaa
  4261dd:	dec    esi
  4261de:	scas   al,BYTE PTR es:[edi]
  4261df:	xor    bl,bl
  4261e1:	cli    
  4261e2:	xor    BYTE PTR [bp-0x39],cl
  4261e6:	les    edx,FWORD PTR [edi]
  4261e8:	jno    0x426262
  4261ea:	mov    ds:0xd2b3a268,eax
  4261ef:	stos   DWORD PTR es:[edi],eax
  4261f0:	push   ebx
  4261f1:	loop   0x42618f
  4261f3:	outs   dx,BYTE PTR ds:[esi]
  4261f4:	test   al,0xca
  4261f6:	cli    
  4261f7:	push   ds
  4261f8:	pop    edx
  4261f9:	sub    al,0x81
  4261fb:	shl    BYTE PTR [edi+0x2cb340f1],0x48
  426202:	ss cmp eax,0x89bd968f
  426208:	ins    BYTE PTR es:[edi],dx
  426209:	lods   al,BYTE PTR ds:[esi]
  42620a:	cli    
  42620b:	(bad)  
  42620c:	cwde   
  42620d:	inc    eax
  42620e:	out    0x55,al
  426210:	mov    al,0xa
  426212:	test   DWORD PTR ds:0x8c35398a,esi
  426218:	sub    BYTE PTR [eax+eiz*2-0x49],ch
  42621c:	rcr    DWORD PTR [esi],1
  42621e:	scas   al,BYTE PTR es:[edi]
  42621f:	dec    DWORD PTR [esi+eiz*4-0x2d5bec04]
  426226:	mov    eax,ds:0x42349b59
  42622b:	mov    esp,0x40175aad
  426230:	inc    ebp
  426231:	je     0x426272
  426233:	push   eax
  426234:	loopne 0x42620d
  426236:	pop    esp
  426238:	mov    esi,0x4169119a
  42623d:	sbb    dh,BYTE PTR [esi-0x2b]
  426240:	(bad)  
  426241:	sti    
  426242:	push   ebx
  426243:	out    0xc4,al
  426245:	jns    0x42626b
  426247:	addr16 in eax,dx
  426249:	jmp    0x882:0x81ced2cb
  426250:	stos   BYTE PTR es:[edi],al
  426251:	scas   eax,DWORD PTR es:[edi]
  426252:	xchg   edx,eax
  426253:	xor    BYTE PTR [ecx],bl
  426255:	rol    DWORD PTR [eax-0x2f],0x7d
  426259:	sahf   
  42625a:	mov    BYTE PTR [ecx],bh
  42625c:	pop    edi
  42625d:	xor    al,0xc9
  42625f:	shl    DWORD PTR [ecx],0x7d
  426262:	es pop ebp
  426264:	retf   
  426265:	mov    ds:0xf04d6d60,eax
  42626a:	mov    ecx,0x1744211
  42626f:	(bad)  [edx+0x4a6bc766]
  426275:	fbld   TBYTE PTR [ebx-0x58bab8d4]
  42627b:	lock fadd DWORD PTR [eax]
  42627e:	add    BYTE PTR [eax],al
  426280:	add    BYTE PTR [eax],al
  426282:	jno    0x426247
  426284:	loop   0x426271
  426286:	bnd jmp 0x426302
  426289:	fcomi  st,st(7)
  42628b:	mov    edi,db7
  42628e:	mov    ebp,0xc8fe2fc6
  426293:	fiadd  DWORD PTR [ecx]
  426295:	add    bl,dh
  426297:	add    al,0x0
  426299:	add    BYTE PTR [eax+esi*2],dh
  42629c:	jg     0x42627e
  42629e:	inc    ax
  4262a0:	push   ebx
  4262a1:	ror    cl,1
  4262a3:	fistp  QWORD PTR [esi-0x46d2ba18]
  4262a9:	sbb    BYTE PTR [ebx-0x1799fba5],cl
  4262af:	pop    esp
  4262b0:	ds or  eax,0xdbd31014
  4262b6:	sbb    DWORD PTR [ebx+0x71],esi
  4262b9:	loop   0x4262c7
  4262bb:	pop    edx
  4262bc:	dec    edi
  4262bd:	sub    al,0x1d
  4262bf:	dec    ebx
  4262c0:	outs   dx,BYTE PTR ds:[esi]
  4262c1:	sub    edx,esi
  4262c3:	adc    BYTE PTR [edx],cl
  4262c5:	call   0xb9a6:0x42917847
  4262cc:	or     ah,BYTE PTR [eax+0xe]
  4262cf:	push   edi
  4262d0:	cli    
  4262d1:	sbb    DWORD PTR [esi+0x73],edi
  4262d4:	js     0x4262f9
  4262d6:	add    eax,0xccb3d822
  4262db:	aaa    
  4262dc:	sub    BYTE PTR [edi+ebp*2],ah
  4262df:	pop    eax
  4262e0:	mov    gs,WORD PTR [edx-0x68463dc3]
  4262e6:	pusha  
  4262e7:	push   eax
  4262e8:	in     eax,dx
  4262e9:	xor    bh,ah
  4262eb:	lds    ebx,FWORD PTR [edx-0x4b]
  4262ee:	pop    eax
  4262ef:	pop    ds
  4262f0:	sbb    DWORD PTR [edi+0x7b772b84],edi
  4262f6:	ficom  DWORD PTR [ecx-0x14a33363]
  4262fc:	scas   eax,DWORD PTR es:[edi]
  4262fd:	xor    eax,0x5beaca61
  426302:	adc    al,0xd0
  426304:	das    
  426305:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426306:	out    dx,al
  426307:	push   ebp
  426308:	push   0xffffffdb
  42630a:	dec    ebp
  42630b:	mov    ds,ebx
  42630d:	scas   eax,DWORD PTR es:[edi]
  42630e:	call   0xa63a:0xbb5e7169
  426315:	jmp    0x5e32:0xc7363d00
  42631c:	mov    WORD PTR fs:[esi+0x56b119fd],es
  426323:	jo     0x426312
  426325:	sbb    eax,0xa06338ba
  42632a:	out    0xd5,al
  42632c:	mov    bh,BYTE PTR [ecx+0x2b]
  42632f:	fild   QWORD PTR [edi-0x66c3114c]
  426335:	daa    
  426336:	(bad)  [ecx+eax*2]
  426339:	mov    ecx,0x637e9960
  42633e:	jmp    0xe423197f
  426343:	cmp    eax,0x79f00575
  426348:	inc    esi
  426349:	adc    DWORD PTR [ebp+0x2e],0xe55b340
  426350:	adc    al,bl
  426352:	jecxz  0x4262ef
  426354:	cdq    
  426355:	push   esi
  426356:	sar    edi,1
  426358:	mov    cl,0x68
  42635a:	push   esi
  42635b:	ins    BYTE PTR es:[edi],dx
  42635c:	mov    dh,0x71
  42635e:	aad    0xac
  426360:	mov    eax,ds:0x50f471dd
  426365:	dec    edx
  426366:	mov    ecx,0xaf0886b5
  42636b:	inc    ebp
  42636c:	dec    eax
  42636d:	cli    
  42636e:	xchg   esi,eax
  42636f:	and    al,0xa5
  426371:	cmp    bh,ch
  426373:	jb     0x4263b3
  426375:	or     DWORD PTR [eax+0x76],eax
  426378:	pop    ss
  426379:	xchg   ebx,eax
  42637a:	out    dx,al
  42637b:	(bad)  
  42637c:	(bad)  
  42637d:	(bad)  
  42637e:	sti    
  42637f:	jge    0x426317
  426381:	retf   0xe3b7
  426384:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426385:	pop    edi
  426386:	shr    BYTE PTR fs:[edi-0x5c],1
  42638a:	jo     0x426383
  42638c:	lods   eax,DWORD PTR ds:[esi]
  42638d:	ret    0x44cd
  426390:	cmp    ah,ah
  426392:	mov    ds:0xa634dd11,eax
  426397:	sbb    eax,0x25ac1109
  42639c:	push   ss
  42639d:	pop    ebp
  42639e:	sbb    eax,0x9294b2a0
  4263a3:	cmc    
  4263a4:	push   0x7d
  4263a6:	hlt    
  4263a7:	js     0x426379
  4263a9:	xor    ah,BYTE PTR [edi]
  4263ab:	xlat   BYTE PTR ds:[ebx]
  4263ac:	pop    eax
  4263ad:	iret   
  4263ae:	enter  0x8b43,0xe9
  4263b2:	mov    ch,0x12
  4263b4:	pop    ecx
  4263b5:	mov    edi,0xbdc1fd51
  4263ba:	cdq    
  4263bb:	leave  
  4263bc:	xchg   ecx,eax
  4263bd:	inc    eax
  4263be:	ja     0x42643d
  4263c0:	test   BYTE PTR [ecx+0x6050c0e4],dl
  4263c6:	loopne 0x4263b2
  4263c8:	lahf   
  4263c9:	cld    
  4263ca:	or     eax,0xf78a791f
  4263cf:	inc    ebx
  4263d0:	lds    ebx,FWORD PTR [ecx-0x33873bc9]
  4263d6:	jb     0x42640f
  4263d8:	or     BYTE PTR [ebx],dl
  4263da:	xchg   esp,eax
  4263db:	scas   eax,DWORD PTR es:[edi]
  4263dc:	ret    0xfb68
  4263df:	ret    0x9de7
  4263e2:	xor    BYTE PTR [ebp-0x1b],dh
  4263e5:	mov    eax,0x20a07786
  4263ea:	loope  0x426456
  4263ec:	mov    dl,0x75
  4263ee:	int    0x4a
  4263f0:	mov    dl,0x90
  4263f2:	inc    edx
  4263f3:	jns    0x42646c
  4263f5:	bound  eax,QWORD PTR [ebp-0x41]
  4263f8:	cmp    BYTE PTR [esi+0x44],cl
  4263fb:	xor    DWORD PTR [ebx-0x57e76920],esi
  426401:	jle    0x426398
  426403:	lods   al,BYTE PTR ds:[esi]
  426404:	adc    DWORD PTR [ecx+edx*8],esp
  426407:	push   ecx
  426408:	sub    ecx,DWORD PTR [esi+eax*2+0x49]
  42640c:	cmc    
  42640d:	pop    ecx
  42640e:	out    dx,eax
  42640f:	loop   0x426417
  426411:	jnp    0x4263a0
  426413:	sbb    al,0x2c
  426415:	fistp  QWORD PTR [eax+0x63]
  426418:	repz test eax,0xa3590c8f
  42641e:	adc    BYTE PTR gs:[ecx+esi*4-0x39],dh
  426423:	call   0x5f4b088
  426428:	out    0x5c,al
  42642a:	xor    cl,BYTE PTR [esi+ecx*1]
  42642d:	sbb    DWORD PTR [esp+0x71],eax
  426431:	push   esi
  426432:	lds    ebx,FWORD PTR [ecx+ebx*4-0x6d2b159d]
  426439:	pop    edi
  42643a:	push   edi
  42643b:	inc    edi
  42643c:	cld    
  42643d:	call   0x9e9c:0x14e65f37
  426444:	jmp    0x426424
  426446:	and    BYTE PTR [edx-0x43adeee2],al
  42644c:	scas   al,BYTE PTR es:[edi]
  42644d:	popa   
  42644e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42644f:	outs   dx,DWORD PTR ds:[esi]
  426450:	inc    ebx
  426451:	not    edi
  426453:	xchg   esp,eax
  426454:	je     0x4263ea
  426456:	icebp  
  426457:	es jle 0x42646b
  42645a:	sbb    BYTE PTR ds:0x7fd59bba,0xd1
  426461:	hlt    
  426462:	xor    BYTE PTR [esi+edi*8-0x20],0x25
  426467:	loop   0x426485
  426469:	mov    ebx,DWORD PTR [ebp+0x6e]
  42646c:	outs   dx,BYTE PTR ds:[esi]
  42646d:	sbb    ch,BYTE PTR [edi+0x78]
  426470:	xchg   ebx,eax
  426471:	or     ah,cl
  426473:	aas    
  426474:	retf   
  426475:	mov    ds:0x387211e8,eax
  42647a:	lods   eax,DWORD PTR ds:[esi]
  42647b:	jge    0x426427
  42647d:	cvtdq2ps xmm5,XMMWORD PTR [eax-0x5e]
  426481:	cld    
  426482:	pusha  
  426483:	jmp    0x46bf394f
  426488:	clc    
  426489:	mov    al,BYTE PTR [ecx-0x78]
  42648c:	and    eax,0x1cf78043
  426491:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426492:	(bad)
  426495:	not    BYTE PTR ds:0xe34a777d
  42649b:	(bad)  
  42649c:	mov    esi,0xc8a3448b
  4264a1:	jmp    0x4264fe
  4264a3:	fcom   QWORD PTR [eax]
  4264a5:	push   ds
  4264a6:	mov    ch,0xf0
  4264a8:	out    dx,al
  4264a9:	sub    eax,0xe037b2f1
  4264ae:	sub    DWORD PTR [eax+eax*1],ebp
  4264b1:	cmp    esi,DWORD PTR [ecx-0x7e6eb89f]
  4264b7:	jmp    0x3f8c474b
  4264bc:	fsub   DWORD PTR [eax]
  4264be:	repz mov edi,0xef2df030
  4264c4:	or     al,0xe5
  4264c6:	cmc    
  4264c7:	int    0xa8
  4264c9:	mov    edx,DWORD PTR [ebx]
  4264cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4264cc:	in     al,0xeb
  4264ce:	cs mov esi,0x80e3c337
  4264d4:	test   DWORD PTR [eax-0x727ad208],ebp
  4264da:	xor    al,0x51
  4264dc:	sub    eax,0xf4d4b969
  4264e1:	cmp    al,0x59
  4264e3:	outs   dx,DWORD PTR ds:[esi]
  4264e4:	xor    dh,BYTE PTR [ecx+0x5e]
  4264e7:	mov    eax,ds:0xb4f68893
  4264ec:	and    eax,0xc359cad
  4264f1:	mov    esi,0x87f45b33
  4264f6:	add    esp,DWORD PTR [edi-0x59ed5371]
  4264fc:	add    BYTE PTR [edi-0x5f],0x2f
  426500:	iret   
  426501:	push   ss
  426502:	aad    0xd8
  426504:	jmp    0xf7e5:0x1d3f5e8f
  42650b:	mov    bl,0xa3
  42650d:	data16 jae 0x42649c
  426510:	test   dl,dh
  426512:	js     0x426560
  426514:	bound  ebp,QWORD PTR [ebp+0x36fe2041]
  42651a:	adc    ebx,DWORD PTR [edx]
  42651c:	cmp    eax,0xd43fb393
  426521:	(bad)  
  426522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426523:	mov    ebp,0x9705b1b9
  426528:	adc    BYTE PTR gs:[edi],0x46
  42652c:	adc    eax,0x1882136e
  426531:	dec    ebp
  426532:	in     al,dx
  426533:	data16 es jae 0x4264e4
  426537:	popa   
  426538:	xchg   edx,eax
  426539:	lahf   
  42653a:	sbb    al,0x78
  42653c:	cwde   
  42653d:	dec    edi
  42653e:	data16 jmp 0x4264c6
  426541:	adc    BYTE PTR [eax+0xb],bh
  426544:	xor    al,0xda
  426546:	outs   dx,BYTE PTR ds:[esi]
  426547:	loopne 0x4265b8
  426549:	mov    ecx,0xfc86d360
  42654e:	test   BYTE PTR [ebx],0x7
  426551:	mov    ecx,0x4463c10e
  426556:	mov    bl,0xc8
  426558:	rol    BYTE PTR [ecx+0xd],cl
  42655b:	jge    0x426514
  42655d:	xchg   BYTE PTR [edx],dh
  42655f:	fwait
  426560:	int3   
  426561:	sahf   
  426562:	sub    dl,BYTE PTR [eax]
  426564:	pushf  
  426565:	out    dx,eax
  426566:	xor    eax,0xe49f83d5
  42656b:	mov    cl,0xa4
  42656d:	out    0x95,eax
  42656f:	sub    al,0x98
  426571:	call   0xa4bac4ea
  426576:	sub    edi,eax
  426578:	jns    0x4265af
  42657a:	retf   0x96fe
  42657d:	mov    ecx,0xea45bd5e
  426582:	push   ecx
  426583:	add    eax,DWORD PTR [edx+0x1c]
  426586:	dec    esi
  426587:	mov    DWORD PTR [edi],ecx
  426589:	cmp    al,0x10
  42658b:	mov    al,ch
  42658d:	adc    ah,bl
  42658f:	arpl   si,sp
  426591:	sar    BYTE PTR [ecx+0x4c],cl
  426594:	xor    eax,0xbc8b23f0
  426599:	aam    0xd0
  42659b:	(bad)  
  42659d:	mov    ebp,DWORD PTR [esp+edi*1]
  4265a0:	retf   0x2062
  4265a3:	dec    eax
  4265a4:	jp     0x42659f
  4265a6:	(bad)  
  4265a7:	daa    
  4265a8:	mov    ah,0x10
  4265aa:	pushf  
  4265ab:	daa    
  4265ac:	push   edx
  4265ad:	jne    0x42659a
  4265af:	mov    esi,0x2d9770cd
  4265b4:	pop    ebx
  4265b5:	pop    ebp
  4265b6:	push   eax
  4265b7:	mov    al,0x5e
  4265b9:	push   ecx
  4265ba:	push   ebx
  4265bb:	xchg   esi,eax
  4265bc:	mov    dh,0xc4
  4265be:	xchg   edi,eax
  4265bf:	xor    DWORD PTR [ebx],ebx
  4265c1:	(bad)  
  4265c3:	jo     0x42663a
  4265c5:	add    al,0xd9
  4265c7:	call   0x3196:0xc30466b1
  4265ce:	pusha  
  4265cf:	and    ah,bl
  4265d1:	fnsave [edi+0x13]
  4265d4:	hlt    
  4265d5:	cld    
  4265d6:	pop    edi
  4265d7:	dec    ebx
  4265d8:	ficom  DWORD PTR [eax]
  4265da:	pop    ecx
  4265db:	xchg   ebp,eax
  4265dc:	push   ds
  4265dd:	loop   0x4265f5
  4265df:	popa   
  4265e0:	push   eax
  4265e1:	mov    bl,0xc9
  4265e3:	call   0x758b3f33
  4265e8:	jecxz  0x426602
  4265ea:	add    bl,0xba
  4265ed:	out    dx,eax
  4265ee:	jg     0x426653
  4265f0:	aam    0xcd
  4265f2:	fcom   DWORD PTR [ebp+edx*2+0x7a6ddc33]
  4265f9:	scas   al,BYTE PTR es:[edi]
  4265fa:	jns    0x4265b2
  4265fc:	in     al,dx
  4265fd:	jp     0x4265fe
  4265ff:	inc    ebp
  426600:	scas   al,BYTE PTR es:[edi]
  426601:	daa    
  426602:	data16 loop 0x426649
  426605:	nop
  426606:	cmc    
  426607:	cli    
  426608:	das    
  426609:	cwde   
  42660a:	daa    
  42660b:	mov    bh,0x1f
  42660d:	mov    dh,0xb3
  42660f:	pop    ebp
  426610:	mov    ds:0x1949f040,eax
  426615:	mov    eax,ds:0x4e918407
  42661a:	(bad)  
  42661b:	rcl    BYTE PTR [edi+0x1117d5bd],1
  426621:	cwde   
  426622:	mov    DWORD PTR [ebx],0x5b91306c
  426628:	jo     0x42663b
  42662a:	push   ecx
  42662b:	jle    0x4265bb
  42662d:	push   ss
  42662e:	or     al,0xf0
  426630:	clc    
  426631:	push   eax
  426632:	push   ebx
  426633:	pop    edx
  426634:	or     ebx,eax
  426636:	punpckldq mm1,DWORD PTR [ecx]
  426639:	xchg   BYTE PTR [ebp+ecx*4-0x31],cl
  42663d:	iret   
  42663e:	or     al,0x6b
  426640:	cmp    esp,DWORD PTR [ebx+0x45663eb0]
  426646:	retf   
  426647:	xor    al,0x77
  426649:	mov    esp,0xcdf6e019
  42664e:	add    DWORD PTR [esi+0x2a],ebx
  426651:	fs repz ja 0x426603
  426655:	jnp    0x426646
  426657:	clc    
  426658:	pop    ecx
  426659:	xor    ah,BYTE PTR [eax+0x7d]
  42665c:	dec    ebp
  42665d:	outs   dx,BYTE PTR ds:[esi]
  42665e:	jno    0x42667e
  426660:	pop    ebp
  426661:	dec    ebx
  426662:	pop    ds
  426663:	xor    bh,BYTE PTR [eax]
  426665:	jl     0x4265f2
  426667:	dec    edx
  426668:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426669:	nop
  42666a:	mov    ebp,0x5d698d61
  42666f:	xlat   BYTE PTR ds:[ebx]
  426670:	aad    0x3e
  426672:	and    BYTE PTR [esi+0x13],al
  426675:	xlat   BYTE PTR ds:[ebx]
  426676:	(bad)  
  426677:	pop    ds
  426678:	stc    
  426679:	sbb    bh,al
  42667b:	and    BYTE PTR [edx],0xa
  42667e:	test   eax,0x9c92ed95
  426683:	ins    BYTE PTR es:[edi],dx
  426684:	sub    eax,0x4b85b9c1
  426689:	xchg   ecx,esi
  42668b:	das    
  42668c:	jge    0x426677
  42668e:	xor    eax,0xbdf10533
  426693:	outs   dx,BYTE PTR ds:[esi]
  426694:	adc    esp,esi
  426696:	pushf  
  426697:	inc    edx
  426698:	jecxz  0x426635
  42669a:	gs xchg ebp,eax
  42669c:	fstp   QWORD PTR [bx]
  4266a0:	mov    eax,0x9742d8c4
  4266a5:	dec    esp
  4266a6:	pop    es
  4266a7:	mov    bh,0xfd
  4266a9:	rcr    BYTE PTR [eax+0x3],0xa1
  4266ad:	dec    edi
  4266ae:	add    eax,ecx
  4266b0:	cmp    cl,bl
  4266b2:	scas   eax,DWORD PTR es:[edi]
  4266b3:	aas    
  4266b4:	enter  0x4dab,0x3a
  4266b8:	cmp    eax,esi
  4266ba:	out    dx,eax
  4266bb:	xchg   esi,eax
  4266bc:	jnp    0x4266da
  4266be:	aaa    
  4266bf:	add    esi,DWORD PTR [edi-0x1e]
  4266c2:	(bad)  [ecx-0x32ce99bd]
  4266c8:	test   BYTE PTR [edx+0x6089a2b9],0xce
  4266cf:	or     DWORD PTR [edi],ebp
  4266d1:	mov    al,ds:0xe23e51c1
  4266d6:	dec    esp
  4266d7:	mov    bl,0xdc
  4266d9:	adc    al,0xe2
  4266db:	aaa    
  4266dc:	cmp    al,0x2c
  4266de:	inc    eax
  4266df:	xor    al,0x21
  4266e1:	jge    0x4266dc
  4266e3:	out    dx,eax
  4266e4:	xor    eax,DWORD PTR [edi-0x31]
  4266e7:	fdiv   st(0),st
  4266e9:	mov    ch,0xb4
  4266eb:	mov    esp,0x7cc7c537
  4266f0:	pop    es
  4266f1:	sti    
  4266f2:	ds rcr esp,0xcb
  4266f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4266f7:	daa    
  4266f8:	add    BYTE PTR [edx+0x78],bl
  4266fb:	pop    ds
  4266fc:	loopne 0x4266c4
  4266fe:	xchg   edi,eax
  4266ff:	adc    cl,BYTE PTR [ebp+0x5b]
  426702:	lahf   
  426703:	xchg   ebp,eax
  426704:	mov    dh,0x28
  426706:	imul   DWORD PTR [eax-0x25]
  426709:	add    ebx,DWORD PTR [eax-0x263a3d54]
  42670f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426710:	fisub  DWORD PTR [ebx+0x208d6a17]
  426716:	sub    eax,0x5f
  426719:	and    eax,0x5379be93
  42671e:	loop   0x42670b
  426720:	mov    ebx,0x42c9c068
  426726:	scas   eax,DWORD PTR es:[edi]
  426727:	pop    ss
  426728:	xor    BYTE PTR [esi-0x11e23de2],bl
  42672e:	in     eax,0x4e
  426730:	aaa    
  426731:	in     al,dx
  426732:	(bad)  
  426733:	or     al,0x39
  426735:	cmp    DWORD PTR [ebx-0x50a173a],ebx
  42673b:	mov    WORD PTR [edx],?
  42673d:	jnp    0x42671e
  42673f:	push   0x6c
  426741:	cwde   
  426742:	out    dx,eax
  426743:	ins    DWORD PTR es:[edi],dx
  426744:	cld    
  426745:	sar    DWORD PTR [ecx+0xca98475],1
  42674b:	out    dx,eax
  42674c:	fnstsw WORD PTR [edx+eax*8]
  42674f:	add    eax,0x6581976
  426754:	and    cl,bl
  426756:	(bad)  
  426757:	outs   dx,BYTE PTR ds:[esi]
  426758:	js     0x426708
  42675a:	jecxz  0x4267c0
  42675c:	ficom  WORD PTR [esi+0x3b]
  42675f:	mov    ecx,0x9b1d5f70
  426764:	inc    ebx
  426765:	sub    BYTE PTR [ebx+edi*1],bh
  426768:	mov    eax,ds:0xd413aaa9
  42676d:	imul   ebx,ebx,0x20
  426770:	repnz cwde 
  426772:	iret   
  426773:	adc    BYTE PTR [ecx],0x6f
  426776:	aad    0x7f
  426778:	call   0x1e6f:0x7874eb6
  42677f:	bound  edi,QWORD PTR [ecx+edi*2]
  426782:	nop
  426783:	or     BYTE PTR [edx*2-0x3f46c8c8],ch
  42678a:	inc    ebp
  42678b:	loope  0x42674a
  42678d:	add    BYTE PTR [eax],al
  42678f:	add    BYTE PTR [eax],al
  426791:	add    BYTE PTR [ecx-0x126c16dc],al
  426797:	(bad)  
  426799:	ss cwde 
  42679b:	in     eax,0x27
  42679d:	inc    esp
  42679e:	test   eax,0xbb74ca96
  4267a3:	fild   WORD PTR [ecx]
  4267a5:	add    bl,dh
  4267a7:	add    al,0x0
  4267a9:	add    BYTE PTR [edx+ebx*2+0x30],ah
  4267ad:	adc    DWORD PTR [ebp+0x8788a24],ebp
  4267b3:	mov    ds:0x7df3cd67,eax
  4267b8:	mov    ds:0xb1767e5,eax
  4267bd:	rcr    BYTE PTR [ebp-0x2],0x3e
  4267c1:	sub    eax,0x81d245ca
  4267c6:	sbb    DWORD PTR [ecx+esi*2],esi
  4267c9:	iret   
  4267ca:	mov    ss,ebp
  4267cc:	rcl    bl,1
  4267ce:	(bad)  
  4267d0:	imul   edi,ebp,0x67ca43f
  4267d6:	(bad)  
  4267d7:	arpl   WORD PTR [ebp-0x4a0ffaf9],ax
  4267dd:	je     0x42677f
  4267df:	in     al,dx
  4267e0:	jmp    0x426782
  4267e2:	hlt    
  4267e3:	ret    
  4267e4:	ja     0x426860
  4267e6:	push   es
  4267e7:	adc    al,BYTE PTR [ecx+0x57efdf65]
  4267ed:	mov    ds:0xd582158f,al
  4267f2:	retf   
  4267f3:	std    
  4267f4:	mov    ds:0x627e914a,eax
  4267f9:	(bad)  [edx+0xf]
  4267fc:	ins    DWORD PTR es:[edi],dx
  4267fd:	push   es
  4267fe:	mov    ds:0xa16f60dc,eax
  426803:	push   ecx
  426804:	and    eax,0xc86d7fd8
  426809:	mov    cl,0xb
  42680b:	iret   
  42680c:	mov    esp,0x86895b45
  426811:	mov    ch,BYTE PTR [edx+0xbda1daa]
  426817:	xchg   ebp,eax
  426818:	xor    DWORD PTR [ebx-0x3a],edx
  42681b:	pop    edx
  42681c:	leave  
  42681d:	stos   DWORD PTR es:[edi],eax
  42681e:	stc    
  42681f:	jmp    0xfbb3142d
  426824:	xchg   ebx,eax
  426825:	mov    edx,0xa2ff6a0f
  42682a:	sar    DWORD PTR [ecx-0x5b],cl
  42682d:	pop    ds
  42682e:	mov    bl,0x12
  426830:	xlat   BYTE PTR ds:[ebx]
  426831:	(bad)
  426835:	cli    
  426836:	(bad)  
  426837:	loop   0x426868
  426839:	push   eax
  42683a:	sub    al,BYTE PTR [eax]
  42683c:	outs   dx,BYTE PTR ds:[esi]
  42683d:	mov    eax,0x340c7f04
  426842:	scas   eax,DWORD PTR es:[edi]
  426843:	lock clc 
  426845:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426846:	call   0xbe2177d8
  42684b:	mul    DWORD PTR [ecx]
  42684d:	ins    DWORD PTR es:[edi],dx
  42684e:	xchg   edx,eax
  42684f:	(bad)  
  426850:	hlt    
  426851:	push   eax
  426852:	rcl    BYTE PTR [esi+0x4a],0xb7
  426856:	ret    
  426857:	test   al,0xeb
  426859:	outs   dx,BYTE PTR ds:[esi]
  42685a:	arpl   WORD PTR [edi],ax
  42685c:	sub    al,0xf3
  42685e:	mov    bl,0x99
  426860:	popa   
  426861:	jb     0x426881
  426863:	inc    eax
  426864:	cmp    edi,DWORD PTR [ecx-0x7]
  426867:	jo     0x42687a
  426869:	mov    edx,0x59c8429a
  42686e:	ds jne 0x42681e
  426871:	gs dec ebx
  426873:	prefetchw BYTE PTR [edi-0x1c]
  426877:	cmp    BYTE PTR [ebp+0x47],ch
  42687a:	(bad)  
  42687b:	adc    DWORD PTR [ebp-0x136175e2],esp
  426881:	pop    ds
  426882:	push   cs
  426883:	mov    esi,0xa0518231
  426888:	xor    BYTE PTR [ebp-0x8f5001],ah
  42688e:	imul   edi,DWORD PTR [edx+0x2a86092f],0x59
  426895:	popa   
  426896:	xor    esi,DWORD PTR [edx+0x20b43346]
  42689c:	sub    DWORD PTR [eax],ecx
  42689e:	xor    eax,0xbc3d2c57
  4268a3:	adc    BYTE PTR [ecx],ch
  4268a5:	cmp    al,BYTE PTR [eax]
  4268a7:	sub    eax,0x4420789d
  4268ac:	sbb    ebp,DWORD PTR [ecx+0x1f82aad4]
  4268b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4268b3:	xlat   BYTE PTR ds:[ebx]
  4268b4:	push   0xead95cb2
  4268b9:	loop   0x42690e
  4268bb:	mov    edx,0xc6db554b
  4268c0:	inc    ebp
  4268c1:	std    
  4268c2:	mov    eax,ds:0x57d0ef8f
  4268c7:	das    
  4268c8:	outs   dx,BYTE PTR ds:[esi]
  4268c9:	retf   
  4268ca:	mov    cs,WORD PTR [edi-0x14296b3f]
  4268d0:	jbe    0x4268ea
  4268d2:	ja     0x4268d8
  4268d4:	inc    edi
  4268d5:	sub    ch,dl
  4268d7:	not    DWORD PTR [edx-0x26]
  4268da:	jbe    0x426913
  4268dc:	or     DWORD PTR [edi+edi*1+0x20],esi
  4268e0:	lock fld DWORD PTR [esi-0x35]
  4268e4:	mov    ecx,0x54f91b33
  4268e9:	cs mov gs,ecx
  4268ec:	xchg   esp,eax
  4268ed:	mov    ds:0xe7fc59c6,al
  4268f2:	test   edx,edi
  4268f4:	mov    ds:0xe2e53bb5,eax
  4268f9:	leave  
  4268fa:	sub    bh,BYTE PTR [eax+ecx*2+0x35ba9d8]
  426901:	cmp    ebp,DWORD PTR [eax-0x67]
  426904:	sbb    DWORD PTR ds:0xcc46af3f,0xffffffe2
  42690b:	out    dx,al
  42690c:	push   ss
  42690d:	xor    ebp,DWORD PTR [esi]
  42690f:	jp     0x426973
  426911:	dec    esi
  426912:	xchg   edx,eax
  426913:	jmp    FWORD PTR [ebx-0x1f]
  426916:	out    0xf,al
  426918:	push   esp
  426919:	pop    edi
  42691a:	inc    edi
  42691b:	pop    es
  42691c:	sbb    ebp,DWORD PTR [edx+eax*4-0x33]
  426920:	xor    eax,eax
  426922:	out    dx,al
  426923:	loope  0x426922
  426925:	pop    ss
  426926:	jae    0x426989
  426928:	mov    al,0x2
  42692a:	clc    
  42692b:	jle    0x426926
  42692d:	jno    0x42696a
  42692f:	jo     0x42695a
  426931:	push   ebp
  426932:	dec    edi
  426933:	lods   al,BYTE PTR ds:[esi]
  426934:	and    DWORD PTR [edi],0xffffff8e
  426937:	loope  0x4268d8
  426939:	iret   
  42693a:	bound  esp,QWORD PTR [edx-0x3911ab0e]
  426940:	test   eax,0x55a681d
  426945:	push   ebp
  426946:	mov    ch,BYTE PTR [edi]
  426948:	push   eax
  426949:	pop    edi
  42694a:	mov    ebx,0xff18bef2
  42694f:	dec    ecx
  426950:	adc    BYTE PTR [edi-0x5c],dl
  426953:	(bad)  
  426954:	sti    
  426955:	shl    DWORD PTR es:[ebx],0x95
  426959:	fadd   DWORD PTR [edi+0x2f185790]
  42695f:	mov    bh,0x85
  426961:	cmp    al,0x72
  426963:	push   esi
  426964:	sbb    eax,0x8a8fa000
  426969:	push   ss
  42696a:	xor    BYTE PTR [esp+edi*8+0x577ba501],bl
  426971:	dec    ebp
  426972:	sbb    al,0xc5
  426974:	xor    BYTE PTR [eax],bh
  426976:	out    dx,eax
  426977:	xor    bl,BYTE PTR [eax]
  426979:	aam    0x9
  42697b:	test   eax,0x9a1f78d9
  426980:	push   ebx
  426981:	cmc    
  426982:	ficomp WORD PTR [ecx-0x37]
  426985:	inc    edx
  426986:	pop    ebx
  426987:	adc    al,0x10
  426989:	clc    
  42698a:	pusha  
  42698b:	stos   BYTE PTR es:[edi],al
  42698c:	dec    eax
  42698d:	sbb    BYTE PTR [eax+0x6dec6d22],dh
  426993:	mov    dl,0x6f
  426995:	jmp    0x426942
  426997:	in     al,dx
  426998:	push   0xd2f3a487
  42699d:	aam    0xd4
  42699f:	push   ds
  4269a0:	pop    eax
  4269a1:	test   DWORD PTR [ebx+0xdabad1e],eax
  4269a7:	adc    al,0x9c
  4269a9:	aas    
  4269aa:	inc    eax
  4269ab:	inc    eax
  4269ac:	(bad)  
  4269ad:	leave  
  4269ae:	fs call 0xa3e07203
  4269b4:	in     al,dx
  4269b5:	cdq    
  4269b6:	into   
  4269b7:	loopne 0x426987
  4269b9:	mov    BYTE PTR [ecx],bh
  4269bb:	int3   
  4269bc:	and    eax,DWORD PTR [eax-0x42ad9955]
  4269c2:	mov    ebx,0x8cf3088c
  4269c7:	dec    ebp
  4269c8:	ja     0x4269be
  4269ca:	push   edi
  4269cb:	push   ecx
  4269cc:	sbb    dl,dh
  4269ce:	mov    cs,eax
  4269d0:	mov    WORD PTR [edi+0x5a],?
  4269d3:	jmp    0x4d2d:0xfca5efd4
  4269da:	(bad)  
  4269db:	mov    bh,0xc
  4269dd:	shr    BYTE PTR [eax-0x4d],0x83
  4269e1:	mov    eax,ds:0x69058a91
  4269e6:	xchg   ebx,eax
  4269e7:	test   DWORD PTR [ecx-0x76019735],edi
  4269ed:	push   esp
  4269ee:	(bad)  
  4269ef:	loopne 0x4269db
  4269f1:	inc    esp
  4269f2:	add    DWORD PTR [eax+ebp*4-0x18],esp
  4269f6:	gs mov eax,0xfb76d909
  4269fc:	test   BYTE PTR [edx-0x58],bh
  4269ff:	pop    ebp
  426a00:	fcom   DWORD PTR [edx+0x3a8d47c7]
  426a06:	jbe    0x426a00
  426a08:	hlt    
  426a09:	push   es
  426a0a:	mov    ebp,0x4beb6d82
  426a0f:	xor    ah,BYTE PTR [edi-0x1872ae5]
  426a15:	out    dx,eax
  426a16:	jnp    0x426a50
  426a18:	mov    esi,0x7939ae6e
  426a1d:	push   ds
  426a1e:	dec    edx
  426a1f:	add    eax,0xeedcfd01
  426a24:	push   0x6ef3e0b3
  426a29:	push   0x5336eac0
  426a2e:	add    eax,0x873e94d1
  426a33:	push   esp
  426a34:	jecxz  0x426a89
  426a36:	cs das 
  426a38:	loop   0x4269ee
  426a3a:	fist   WORD PTR [eax]
  426a3c:	sub    ebx,DWORD PTR [eax-0x3c358805]
  426a42:	ror    DWORD PTR [ecx+0x1af8833],1
  426a48:	test   al,0xff
  426a4a:	and    eax,0xbd5cb994
  426a4f:	cld    
  426a50:	mov    dh,BYTE PTR [edx+eiz*1-0x6d]
  426a54:	add    BYTE PTR [esi+edi*8-0x69],dl
  426a58:	inc    ebp
  426a59:	pop    edi
  426a5a:	pop    eax
  426a5b:	xor    BYTE PTR ds:0x1f405d37,ah
  426a61:	in     al,0x2c
  426a63:	jmp    0x76525808
  426a68:	lods   al,BYTE PTR ds:[esi]
  426a69:	jle    0x426a77
  426a6b:	in     eax,0xaf
  426a6d:	loope  0x426ad9
  426a6f:	and    esi,eax
  426a71:	sub    DWORD PTR [ebp+0x42bef7b1],edi
  426a77:	jb     0x426ad7
  426a79:	add    al,0x4f
  426a7b:	xlat   BYTE PTR ds:[ebx]
  426a7c:	sahf   
  426a7d:	in     al,0xa1
  426a7f:	addr16 enter 0xdb4,0xd6
  426a84:	out    dx,eax
  426a85:	repz in eax,dx
  426a87:	adc    DWORD PTR [ebp+0xc],0xc6faf4bd
  426a8e:	jp     0x426a85
  426a90:	push   ss
  426a91:	out    dx,eax
  426a92:	out    0x93,al
  426a94:	pop    esi
  426a95:	test   al,0x15
  426a97:	inc    edi
  426a98:	pop    eax
  426a99:	in     eax,0x9e
  426a9b:	xor    dl,BYTE PTR [esi+0x65dbd929]
  426aa1:	and    al,BYTE PTR [edi]
  426aa3:	popf   
  426aa4:	stos   BYTE PTR es:[edi],al
  426aa5:	mov    esp,0xdd5c9d65
  426aaa:	lods   al,BYTE PTR ds:[esi]
  426aab:	ror    DWORD PTR [edx+0x67346b92],1
  426ab1:	mov    ecx,?
  426ab3:	mov    esp,0x90e1ef63
  426ab8:	in     eax,0x2b
  426aba:	push   edi
  426abb:	adc    al,ch
  426abd:	sub    DWORD PTR [edx+0x26],edi
  426ac0:	push   esi
  426ac1:	in     eax,dx
  426ac2:	xchg   esi,eax
  426ac3:	adc    cl,BYTE PTR ds:0x29db7dba
  426ac9:	fs xchg edx,eax
  426acb:	popa   
  426acc:	shr    dl,0x7c
  426acf:	scas   eax,DWORD PTR es:[edi]
  426ad0:	cmc    
  426ad1:	test   al,0x4
  426ad3:	into   
  426ad4:	mov    ds:0x3dc4ec8a,al
  426ad9:	mov    eax,ds:0xc2884a0f
  426ade:	adc    eax,0x370e9f0
  426ae3:	mov    esp,0xecb8bf1b
  426ae8:	ins    DWORD PTR es:[edi],dx
  426ae9:	adc    edi,DWORD PTR [edx-0xdd163b0]
  426aef:	retf   0x50af
  426af2:	add    al,dl
  426af4:	in     al,0xd4
  426af6:	dec    edi
  426af7:	retf   
  426af8:	je     0x426af8
  426afa:	xchg   esi,eax
  426afb:	or     al,0xc5
  426afd:	push   ebp
  426afe:	mov    al,0xc4
  426b00:	pop    ebx
  426b01:	(bad)  
  426b02:	loope  0x426a96
  426b04:	xchg   DWORD PTR [edi+0x616609cf],edi
  426b0a:	ja     0x426b60
  426b0c:	mov    esp,0xcefa91e8
  426b11:	push   eax
  426b12:	(bad)  [edx-0x134e88c0]
  426b18:	pop    esp
  426b19:	mov    dl,0x4f
  426b1b:	push   edx
  426b1c:	fscale 
  426b1e:	fsave  [edi]
  426b21:	retf   
  426b22:	sub    ebp,DWORD PTR [ebx]
  426b24:	leave  
  426b25:	xchg   ebx,eax
  426b26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b27:	call   0x781e27a
  426b2c:	imul   edx,esp,0xffffffaa
  426b2f:	jnp    0x426b3c
  426b31:	std    
  426b32:	and    edx,DWORD PTR [ecx]
  426b34:	add    BYTE PTR [ebp-0x63],bl
  426b37:	outs   dx,BYTE PTR ds:[esi]
  426b38:	pop    ss
  426b39:	pop    ebx
  426b3a:	ret    
  426b3b:	fdivrp st(5),st
  426b3d:	xor    eax,0x8d0c8f70
  426b42:	jge    0x426b9e
  426b44:	dec    ebp
  426b45:	stos   BYTE PTR es:[edi],al
  426b46:	sbb    esp,ecx
  426b48:	aad    0x94
  426b4a:	mov    ds:0x2a28ab48,eax
  426b4f:	shl    ch,0x63
  426b52:	cs test al,0xc5
  426b55:	loopne 0x426af0
  426b57:	and    BYTE PTR [edi+0x1506f561],al
  426b5d:	push   ds
  426b5e:	adc    ecx,DWORD PTR [edx-0x7b]
  426b61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b62:	xchg   ebx,eax
  426b63:	mov    bh,0xe4
  426b65:	loope  0x426b91
  426b67:	rcl    ch,0xf0
  426b6a:	inc    ebp
  426b6b:	xor    esi,DWORD PTR [esi+0x2a]
  426b6e:	cwde   
  426b6f:	loope  0x426b4b
  426b71:	jne    0x426afe
  426b73:	jns    0x426b55
  426b75:	push   ebp
  426b76:	(bad)  [esi-0xa3df480]
  426b7c:	inc    ebp
  426b7d:	sub    DWORD PTR [esi],0xe
  426b80:	dec    edx
  426b81:	add    DWORD PTR [esi],ebx
  426b83:	cmp    al,0xe3
  426b85:	mov    eax,ds:0xe5daefce
  426b8a:	ins    DWORD PTR es:[edi],dx
  426b8b:	and    al,dl
  426b8d:	sahf   
  426b8e:	cmc    
  426b8f:	add    BYTE PTR [ebx],ah
  426b91:	ror    DWORD PTR [edi],1
  426b93:	int3   
  426b94:	jne    0x426b3f
  426b96:	pop    edx
  426b97:	jecxz  0x426bea
  426b99:	pushf  
  426b9a:	cld    
  426b9b:	cli    
  426b9c:	stos   BYTE PTR es:[edi],al
  426b9d:	push   esp
  426b9e:	js     0x426b4b
  426ba0:	xor    DWORD PTR [ecx+ebp*4],ebx
  426ba3:	inc    esp
  426ba4:	pop    ecx
  426ba5:	in     eax,dx
  426ba6:	pop    ss
  426ba7:	shl    dh,cl
  426ba9:	mov    dl,0x1f
  426bab:	cmp    eax,0x97e33017
  426bb0:	push   esi
  426bb1:	ret    0xa2bf
  426bb4:	repz ds out 0xf4,al
  426bb8:	lods   al,BYTE PTR ds:[esi]
  426bb9:	xchg   esi,eax
  426bba:	adc    eax,0x3cd5eab7
  426bbf:	cmc    
  426bc0:	xor    edx,eax
  426bc2:	adc    DWORD PTR [eax+0x7556b540],edi
  426bc8:	lds    edx,FWORD PTR [edx-0x6f]
  426bcb:	cmp    eax,0xe16ba4e9
  426bd0:	push   esi
  426bd1:	pop    es
  426bd2:	lock sub eax,0x272210bc
  426bd8:	mov    al,ds:0xa536f398
  426bdd:	sub    al,0x3a
  426bdf:	in     eax,dx
  426be0:	ins    BYTE PTR es:[edi],dx
  426be1:	xlat   BYTE PTR ds:[ebx]
  426be2:	cmp    BYTE PTR [eax+edi*8+0x5],ch
  426be6:	mov    ebx,0x5ba05a07
  426beb:	aad    0x47
  426bed:	neg    ebp
  426bef:	or     esi,esi
  426bf1:	cmp    eax,0xc6f35293
  426bf6:	mov    DWORD PTR [ecx],0x91d9bb30
  426bfc:	mov    cl,0x82
  426bfe:	out    dx,al
  426bff:	dec    esi
  426c00:	mov    cl,0xcb
  426c02:	mov    dh,0x24
  426c04:	mov    edx,0x4503a57
  426c09:	or     DWORD PTR [ebp+0x74],edx
  426c0c:	(bad)  
  426c0d:	sahf   
  426c0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426c0f:	mov    esp,0x9a9b016f
  426c14:	xor    BYTE PTR [eax+eiz*8],al
  426c17:	test   eax,0xeb0158f0
  426c1c:	push   0xe325e382
  426c21:	sti    
  426c22:	mov    ah,0x8
  426c24:	and    al,0x69
  426c26:	cmp    BYTE PTR [eax+0x15],bl
  426c29:	imul   esp,eax,0xffffffad
  426c2c:	outs   dx,DWORD PTR ds:[esi]
  426c2d:	xchg   esp,eax
  426c2e:	sbb    al,BYTE PTR [edx]
  426c30:	fucomip st,st(0)
  426c32:	int    0x4a
  426c34:	xchg   DWORD PTR [edx-0x60],esi
  426c37:	xor    al,0xfb
  426c39:	jnp    0x426c02
  426c3b:	pushf  
  426c3c:	or     DWORD PTR [ebx-0x60],edi
  426c3f:	(bad)  
  426c40:	mov    ebx,0x5b8fa079
  426c45:	mov    ah,0x83
  426c47:	(bad)  
  426c49:	push   eax
  426c4a:	jb     0x426c83
  426c4c:	aam    0xa9
  426c4e:	add    eax,0xb97b4ff3
  426c53:	push   es
  426c54:	cmp    bh,bh
  426c56:	ror    bl,cl
  426c58:	xor    DWORD PTR [ebp-0x375a1f6f],ecx
  426c5e:	push   esp
  426c5f:	or     eax,DWORD PTR [ebx]
  426c61:	jmp    0x426cbe
  426c63:	cli    
  426c64:	ins    BYTE PTR es:[edi],dx
  426c65:	pop    ds
  426c66:	pop    es
  426c67:	pop    esi
  426c68:	bound  ecx,QWORD PTR [edi+edi*2-0x4b]
  426c6c:	je     0x426c80
  426c6e:	mov    dl,0x39
  426c70:	(bad)  
  426c71:	in     eax,dx
  426c72:	jo     0x426c33
  426c74:	adc    dl,bl
  426c76:	jb     0x426c08
  426c78:	cmp    eax,0xaf5e2fd3
  426c7d:	fbld   TBYTE PTR [eax+0x40dd85c6]
  426c83:	jmp    0x426ce2
  426c85:	xchg   BYTE PTR [ebp+0x27],bl
  426c88:	cli    
  426c89:	arpl   si,dx
  426c8b:	mov    dl,0x8c
  426c8d:	cmp    bl,ch
  426c8f:	push   ss
  426c90:	scas   eax,DWORD PTR es:[edi]
  426c91:	jns    0x426c87
  426c93:	push   esp
  426c94:	mov    eax,ds:0x6d3b9ec3
  426c99:	(bad)  
  426c9b:	ins    DWORD PTR es:[edi],dx
  426c9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c9d:	add    BYTE PTR [eax],al
  426c9f:	add    BYTE PTR [eax],al
  426ca1:	add    BYTE PTR [esi+0x5f451fc0],dl
  426ca7:	(bad)  
  426ca9:	rol    DWORD PTR [ebx+0x1ce88e10],cl
  426caf:	hlt    
  426cb0:	inc    eax
  426cb1:	push   edx
  426cb2:	scas   al,BYTE PTR es:[edi]
  426cb3:	in     al,0x1
  426cb5:	add    bl,dh
  426cb7:	add    al,0x0
  426cb9:	add    BYTE PTR [eax+0x15],dh
  426cbc:	(bad)  
  426cbd:	popa   
  426cbe:	clc    
  426cbf:	inc    ebp
  426cc0:	clc    
  426cc1:	icebp  
  426cc2:	lods   al,BYTE PTR ds:[esi]
  426cc3:	aad    0x12
  426cc5:	in     eax,0xe
  426cc7:	por    mm2,mm6
  426cca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ccb:	or     eax,0xfe605e49
  426cd0:	pop    esi
  426cd1:	inc    edx
  426cd2:	xchg   esi,eax
  426cd3:	stos   BYTE PTR es:[edi],al
  426cd4:	cmp    al,0xec
  426cd6:	in     al,dx
  426cd7:	mov    edi,edx
  426cd9:	loopne 0x426d22
  426cdb:	mov    eax,ds:0x294baa70
  426ce0:	fs addr16 push ebx
  426ce3:	out    0x51,eax
  426ce5:	and    DWORD PTR [edx-0xa80191],esp
  426ceb:	repnz cmp al,0xf4
  426cee:	les    ecx,FWORD PTR [ebp-0x38]
  426cf1:	sub    edi,esp
  426cf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426cf4:	dec    eax
  426cf5:	cmc    
  426cf6:	xchg   ecx,eax
  426cf7:	lea    ecx,ds:0xac45c198
  426cfd:	mov    ah,0x63
  426cff:	jbe    0x426ce6
  426d01:	nop
  426d02:	push   cs
  426d03:	enter  0xefb2,0xab
  426d07:	xor    eax,0xfca21880
  426d0c:	jae    0x426cf5
  426d0e:	repz sahf 
  426d10:	repz jae 0x426ce1
  426d13:	pop    ebx
  426d14:	(bad)  
  426d15:	cmp    bh,BYTE PTR [esi]
  426d17:	or     bl,BYTE PTR [ecx+0x640bcf09]
  426d1d:	cmp    ah,BYTE PTR [esi]
  426d1f:	dec    ebp
  426d20:	clc    
  426d21:	xchg   DWORD PTR [edi+0x15],eax
  426d24:	pop    esi
  426d25:	je     0x426d3a
  426d27:	add    DWORD PTR [ecx+0x23],ecx
  426d2a:	inc    edi
  426d2b:	mov    ah,0x71
  426d2d:	ret    
  426d2e:	mov    dl,0xef
  426d30:	sbb    esp,DWORD PTR [edx]
  426d32:	xchg   esp,eax
  426d33:	push   edx
  426d34:	pushf  
  426d35:	push   esp
  426d36:	mov    eax,ds:0xb546b7f9
  426d3b:	cwde   
  426d3c:	dec    edi
  426d3d:	and    DWORD PTR [edi],esi
  426d3f:	imul   ebp,DWORD PTR ds:0xe491f591,0x31
  426d46:	pop    esi
  426d47:	bound  ebp,QWORD PTR [ebx+0x71]
  426d4a:	mov    ebx,0x50a72c59
  426d4f:	les    edi,FWORD PTR [eax+0x5f82e078]
  426d55:	push   0xfffffffb
  426d57:	mov    edi,0x290fa517
  426d5c:	scas   al,BYTE PTR es:[edi]
  426d5d:	pop    ebp
  426d5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d5f:	add    esi,edi
  426d61:	sbb    ecx,DWORD PTR [ebp+0x73]
  426d64:	pop    ecx
  426d65:	or     esi,DWORD PTR [esi+esi*4-0x80]
  426d69:	daa    
  426d6a:	pop    ecx
  426d6b:	nop
  426d6c:	jle    0x426d50
  426d6e:	loope  0x426d48
  426d70:	sti    
  426d71:	cmp    eax,0x5e77be72
  426d76:	addr16 inc ebp
  426d78:	out    0x48,eax
  426d7a:	loopne 0x426d4a
  426d7c:	xchg   edx,eax
  426d7d:	mov    bl,0xfa
  426d7f:	les    ecx,FWORD PTR [esi+0x18d715a4]
  426d85:	pop    ss
  426d86:	je     0x426dd6
  426d88:	sub    eax,0xef3c8c89
  426d8d:	jp     0x426dda
  426d8f:	push   edx
  426d90:	int    0x9
  426d92:	pop    ebp
  426d93:	sub    eax,0xe628a688
  426d98:	retf   
  426d99:	int    0x4f
  426d9b:	and    dh,dl
  426d9d:	jg     0x426d7b
  426d9f:	out    dx,eax
  426da0:	es push 0x2990d55
  426da6:	mov    esi,0x26a06fbb
  426dab:	mov    dh,0x90
  426dad:	adc    edi,DWORD PTR [ebx-0x39]
  426db0:	daa    
  426db1:	enter  0x41ea,0xfa
  426db5:	test   al,0xbb
  426db7:	cmp    al,0xc1
  426db9:	mov    al,ds:0x688e558d
  426dbe:	or     al,0x23
  426dc0:	jb     0x426e1b
  426dc2:	adc    al,0x50
  426dc4:	stos   BYTE PTR es:[edi],al
  426dc5:	and    al,0xe
  426dc7:	xchg   DWORD PTR [edx-0x64],esi
  426dca:	js     0x426dbd
  426dcc:	sub    dh,ah
  426dce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426dcf:	adc    ch,bh
  426dd1:	mov    eax,0x77988eed
  426dd6:	(bad)  
  426dd7:	jmp    0x2313:0xe1e60728
  426dde:	fucomip st,st(2)
  426de0:	ds adc ch,ch
  426de3:	jno    0x426dab
  426de5:	jge    0x426d6d
  426de7:	mov    cl,0xd7
  426de9:	out    0x6c,al
  426deb:	ror    DWORD PTR [edi+0x6cf1fbb9],0x96
  426df2:	ss pushw 0x904
  426df7:	dec    ebx
  426df8:	aad    0xfb
  426dfa:	outs   dx,DWORD PTR ds:[esi]
  426dfb:	jmp    0xca2e5345
  426e00:	fisubr WORD PTR [ecx-0x32]
  426e03:	popf   
  426e04:	rol    BYTE PTR [eax-0x65516f19],cl
  426e0a:	cmc    
  426e0b:	and    eax,0xdd190e53
  426e10:	retf   0x5e2e
  426e13:	in     al,dx
  426e14:	cmp    dh,cl
  426e16:	jecxz  0x426e0f
  426e18:	add    BYTE PTR [edi],bl
  426e1a:	xchg   ebx,eax
  426e1b:	adc    eax,0x304729b1
  426e20:	xchg   edx,eax
  426e21:	int    0x13
  426e23:	scas   eax,DWORD PTR es:[edi]
  426e24:	imul   edi,ecx,0x74
  426e27:	in     al,0xae
  426e29:	mov    DWORD PTR [eax],ebp
  426e2b:	daa    
  426e2c:	aaa    
  426e2d:	leave  
  426e2e:	mov    ah,0x4b
  426e30:	pop    esi
  426e31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e32:	pop    eax
  426e33:	ret    0x84af
  426e36:	pop    es
  426e37:	dec    edx
  426e38:	or     bh,BYTE PTR [ecx]
  426e3a:	(bad)
  426e3d:	sub    cl,BYTE PTR [ebp+0x68]
  426e40:	mov    ds:0x4ce5df86,al
  426e45:	push   ebx
  426e46:	rep lods eax,DWORD PTR ds:[esi]
  426e48:	mov    dh,0x7f
  426e4a:	dec    edx
  426e4b:	stc    
  426e4c:	lea    eax,[ecx-0x71]
  426e4f:	adc    ecx,edx
  426e51:	push   ss
  426e52:	sbb    eax,0x76620d8d
  426e57:	mov    bh,0x7a
  426e59:	in     al,dx
  426e5a:	sbb    DWORD PTR [ecx-0x5d8ff57f],esi
  426e60:	loop   0x426e4f
  426e62:	neg    BYTE PTR [edx+edi*8-0x5d]
  426e66:	inc    ecx
  426e67:	xor    edi,DWORD PTR fs:[eax-0xc]
  426e6b:	and    eax,0x9eb81825
  426e70:	adc    bh,BYTE PTR [esp+ebp*2-0x69]
  426e74:	nop
  426e75:	imul   DWORD PTR [eax+0x34]
  426e78:	popa   
  426e79:	int    0xcb
  426e7b:	ss fwait
  426e7d:	dec    ecx
  426e7e:	xchg   ebx,eax
  426e7f:	arpl   WORD PTR gs:[edx],bp
  426e82:	mov    ds:0xdef42a2a,eax
  426e87:	mov    eax,0x1fb1d80d
  426e8c:	imul   ecx,DWORD PTR [eax],0xf04c4437
  426e92:	sub    dh,BYTE PTR [ecx-0x772b3a3e]
  426e98:	in     al,dx
  426e99:	inc    ebp
  426e9a:	popa   
  426e9b:	int3   
  426e9c:	push   ebp
  426e9d:	and    eax,0x3fb3d525
  426ea2:	fiadd  DWORD PTR [ebp+ecx*4+0x43ab600e]
  426ea9:	out    dx,eax
  426eaa:	and    dh,ah
  426eac:	ja     0x426e9c
  426eae:	jnp    0x426e89
  426eb0:	adc    esp,DWORD PTR [esi]
  426eb2:	loopne 0x426e9e
  426eb4:	jle    0x426e5e
  426eb6:	leave  
  426eb7:	xor    dl,BYTE PTR ds:0x84b7d73d
  426ebd:	sbb    al,0xc
  426ebf:	adc    dl,BYTE PTR [ecx-0x4]
  426ec2:	test   DWORD PTR [ecx-0xcc1e73a],esi
  426ec8:	arpl   WORD PTR [edx-0x3a82720],si
  426ece:	loope  0x426e8c
  426ed0:	pop    eax
  426ed1:	sub    DWORD PTR [eax-0x33],esp
  426ed4:	fwait
  426ed5:	leave  
  426ed6:	rcr    DWORD PTR [ecx+0x24906196],1
  426edc:	xor    cl,BYTE PTR [eax]
  426ede:	push   cs
  426edf:	jle    0x426eb3
  426ee1:	adc    BYTE PTR [edi-0x6d],dl
  426ee4:	add    BYTE PTR [ebp-0x73],dl
  426ee7:	xor    eax,0xf21d15d7
  426eec:	push   cs
  426eed:	aaa    
  426eee:	cmc    
  426eef:	test   eax,0xb3dec5bb
  426ef4:	addr16 jns 0x426eb4
  426ef7:	retf   
  426ef8:	and    esi,DWORD PTR ds:0xdc90463b
  426efe:	jecxz  0x426f74
  426f00:	es mov eax,0x40cb448e
  426f06:	sahf   
  426f07:	mov    al,ds:0x152c5467
  426f0c:	mov    WORD PTR [ebp+0x55f8052a],?
  426f12:	sub    eax,0x9ae47b79
  426f17:	mov    cl,0xe3
  426f19:	mov    ebp,ds
  426f1b:	scas   eax,DWORD PTR es:[edi]
  426f1c:	and    al,0x74
  426f1e:	lods   al,BYTE PTR fs:[esi]
  426f20:	xchg   edi,eax
  426f21:	xchg   esi,eax
  426f22:	adc    eax,DWORD PTR [ebx]
  426f24:	test   al,0x7d
  426f26:	xchg   esp,eax
  426f27:	jl     0x426ec9
  426f29:	out    0x4,eax
  426f2b:	push   edx
  426f2c:	adc    DWORD PTR [eax+eax*1+0x3f6a8f9b],0xffffffca
  426f34:	or     ah,BYTE PTR [esi]
  426f36:	mov    ebp,0x2bc5ca19
  426f3b:	fimul  DWORD PTR [ebx+0x7d]
  426f3e:	sbb    al,0x9
  426f40:	push   0xffffffc1
  426f42:	arpl   WORD PTR [ebp-0x2c7ab677],di
  426f48:	pushf  
  426f49:	or     eax,0x521de753
  426f4e:	cmc    
  426f4f:	test   al,0x11
  426f51:	lds    esi,FWORD PTR [ecx+edi*2]
  426f54:	pop    ds
  426f55:	and    BYTE PTR [eax+eax*2],dh
  426f58:	xchg   esp,eax
  426f59:	mov    ds:0x2fa9e26b,al
  426f5e:	pop    eax
  426f5f:	leave  
  426f60:	jmp    0x2712:0xbb381c9d
  426f67:	fs mov dl,0xb1
  426f6a:	scas   eax,DWORD PTR es:[edi]
  426f6b:	and    edx,DWORD PTR [edi+ebp*8]
  426f6e:	and    al,0xfe
  426f70:	pop    edx
  426f71:	(bad)  
  426f72:	jns    0x426f66
  426f74:	cli    
  426f75:	outs   dx,DWORD PTR ds:[esi]
  426f76:	jp     0x426f54
  426f78:	xor    eax,0x3e
  426f7b:	jnp    0x426fac
  426f7d:	mov    esi,DWORD PTR [edi-0x52]
  426f80:	pop    edx
  426f81:	adc    al,0x8a
  426f83:	(bad)  
  426f84:	cld    
  426f85:	ja     0x426f1c
  426f87:	mov    dh,0x0
  426f89:	ins    DWORD PTR es:[edi],dx
  426f8a:	add    cl,BYTE PTR [ebx+0x55]
  426f8d:	ss dec ecx
  426f8f:	inc    eax
  426f90:	ret    0xc5ae
  426f93:	pop    ecx
  426f94:	cs push ecx
  426f96:	ret    
  426f97:	jne    0x426fc1
  426f99:	dec    ebx
  426f9a:	cs pop ebp
  426f9c:	xor    DWORD PTR [edi+esi*8-0x14],edi
  426fa0:	xor    eax,0xa2f6c0d4
  426fa5:	or     eax,0x3d8da8f4
  426faa:	ficom  WORD PTR [esi]
  426fac:	adc    dl,bh
  426fae:	sar    ebx,cl
  426fb0:	call   0x1ae7:0x17e6b71f
  426fb7:	jns    0x426f67
  426fb9:	in     al,dx
  426fba:	xchg   esp,eax
  426fbb:	repz fmul QWORD PTR [ebp-0x7069be6]
  426fc2:	mov    ecx,DWORD PTR [esi-0x31]
  426fc5:	and    ebp,DWORD PTR [ebx-0x68312e17]
  426fcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426fcc:	inc    esi
  426fcd:	in     eax,0xaf
  426fcf:	retf   0xafb1
  426fd2:	push   edi
  426fd3:	xlat   BYTE PTR ds:[ebx]
  426fd4:	mov    al,ds:0xfc861f7
  426fd9:	loop   0x42703a
  426fdb:	add    dh,cl
  426fdd:	fwait
  426fde:	mov    ds:0x7a4b1171,al
  426fe3:	jns    0x42705c
  426fe5:	fldcw  WORD PTR [eax+0x72]
  426fe8:	scas   al,BYTE PTR es:[edi]
  426fe9:	push   ebp
  426fea:	xchg   ecx,eax
  426feb:	icebp  
  426fec:	add    DWORD PTR [ebp-0x4ad03b0c],ebx
  426ff2:	inc    ebx
  426ff3:	jae    0x42702d
  426ff5:	call   0x119b6280
  426ffa:	jae    0x42706e
  426ffc:	pop    eax
  426ffd:	push   0x94aad4fa
  427002:	and    DWORD PTR [edx],edi
  427004:	or     eax,0x8f5f28cd
  427009:	arpl   WORD PTR [ebx+0x674eab06],bp
  42700f:	dec    ecx
  427010:	xlat   BYTE PTR ds:[ebx]
  427011:	pop    edi
  427012:	pop    esi
  427013:	rcl    bl,0x30
  427016:	es jge 0x427003
  427019:	mov    ebx,0xf96317c7
  42701e:	rcl    DWORD PTR [edx+0xb1413f1],0x91
  427025:	sub    BYTE PTR [ecx+0x23d85690],ch
  42702b:	cmp    al,0xe0
  42702d:	inc    ecx
  42702e:	jge    0x427071
  427030:	jg     0x42701a
  427032:	cmp    eax,0xcaf5e847
  427037:	cmp    BYTE PTR [ecx],al
  427039:	in     al,dx
  42703a:	fcmovb st,st(4)
  42703c:	ret    
  42703d:	xchg   edx,eax
  42703e:	add    esp,0xce8a93ca
  427044:	ret    
  427045:	mov    ds,WORD PTR [ecx+0x60]
  427048:	das    
  427049:	clc    
  42704a:	ret    
  42704b:	sbb    esp,DWORD PTR [edx]
  42704d:	push   ecx
  42704e:	stc    
  42704f:	ret    0x159a
  427052:	loopne 0x427056
  427054:	loopne 0x4270d2
  427056:	mov    edi,0x571dd4de
  42705b:	xchg   ebp,eax
  42705c:	xchg   ebp,eax
  42705d:	adc    ch,BYTE PTR gs:[esi-0x1e]
  427061:	push   ebx
  427062:	push   ss
  427063:	mov    ds:0x4e4a5621,eax
  427068:	cmp    esi,DWORD PTR [edi+0x4760f105]
  42706e:	retf   0x766f
  427071:	inc    edx
  427072:	retf   
  427073:	xor    bl,0xfa
  427076:	cwde   
  427077:	pop    ecx
  427078:	xchg   eax,ebp
  42707a:	mov    esp,0xa6421cc0
  42707f:	ror    DWORD PTR [ebp+0x4dcdb77b],cl
  427085:	add    DWORD PTR [ebp+0x4c4e160e],0x9
  42708c:	add    BYTE PTR [ebx-0x68d44c8f],al
  427092:	clc    
  427093:	inc    BYTE PTR [ebx]
  427095:	neg    DWORD PTR [eax+0x632bd13e]
  42709b:	mov    bh,ch
  42709d:	mov    gs,WORD PTR [edx-0x35]
  4270a0:	inc    ecx
  4270a1:	test   al,0x8b
  4270a3:	xor    bh,al
  4270a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4270a6:	js     0x4270cb
  4270a8:	sbb    ebp,DWORD PTR ds:[edi]
  4270ab:	push   es
  4270ac:	inc    ebp
  4270ad:	mov    ds:0xf180d876,al
  4270b2:	rol    bl,0x88
  4270b5:	inc    eax
  4270b6:	xchg   esp,eax
  4270b7:	or     DWORD PTR [edx-0x12],edi
  4270ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4270bb:	mov    DWORD PTR [edi],esi
  4270bd:	jo     0x427102
  4270bf:	pop    ss
  4270c0:	and    BYTE PTR [ebx+0x60],al
  4270c3:	inc    ecx
  4270c4:	jne    0x427105
  4270c6:	jge    0x4270bd
  4270c8:	les    ecx,FWORD PTR [edi-0x42]
  4270cb:	xchg   edx,eax
  4270cc:	arpl   si,cx
  4270ce:	add    esi,DWORD PTR [edx+eiz*2]
  4270d1:	dec    eax
  4270d2:	mov    ebp,DWORD PTR [edx]
  4270d4:	push   ss
  4270d5:	mov    al,0x37
  4270d7:	jmp    0x1b4f0f41
  4270dc:	mov    edi,0xc50fd4f7
  4270e1:	fs sbb esp,esi
  4270e4:	mov    eax,ds:0x22bbbbfc
  4270e9:	addr16 or eax,0xacf59b41
  4270ef:	inc    ecx
  4270f0:	test   BYTE PTR [ebp-0x2],ch
  4270f3:	xchg   esi,eax
  4270f4:	cmp    BYTE PTR [edi],dh
  4270f6:	xchg   edx,eax
  4270f7:	or     BYTE PTR [eax-0x46],0xcb
  4270fb:	sub    eax,0x3f7a1ddf
  427100:	cmc    
  427101:	cmc    
  427102:	mov    gs,WORD PTR [edx]
  427104:	mov    bh,0x10
  427106:	ret    
  427107:	and    eax,0xd6b011fd
  42710c:	dec    ebx
  42710d:	pop    ebx
  42710e:	sub    edx,ebx
  427110:	jl     0x427140
  427112:	lock cmp BYTE PTR [edi+0xb],bh
  427116:	fcmove st,st(2)
  427118:	int3   
  427119:	sbb    BYTE PTR [esi-0x4decc25a],al
  42711f:	mov    ebx,0x18654263
  427124:	sub    BYTE PTR [esi],bl
  427126:	(bad)  
  427127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427128:	mov    al,ds:0xe50a9fda
  42712d:	mov    BYTE PTR [ebx+eax*1],ah
  427130:	lock out dx,eax
  427132:	push   ebx
  427133:	ds push edi
  427135:	daa    
  427136:	and    bl,BYTE PTR [ebp+edx*4-0x71]
  42713a:	sub    DWORD PTR ds:0x11d91536,ebp
  427140:	es push ss
  427142:	jmp    0xe4bf182c
  427147:	cdq    
  427148:	out    0xc7,eax
  42714a:	push   ecx
  42714b:	inc    ebx
  42714c:	push   edi
  42714d:	and    al,0x81
  42714f:	or     BYTE PTR [ebx],dh
  427151:	stos   BYTE PTR es:[edi],al
  427152:	fimul  DWORD PTR [eax+ebx*1-0x65]
  427156:	jo     0x427112
  427158:	sub    al,0xfb
  42715a:	sub    BYTE PTR ds:0x1a2113bc,al
  427160:	cs jecxz 0x4271e1
  427163:	pop    edx
  427164:	cmp    ecx,ebp
  427166:	inc    edi
  427167:	jle    0x427132
  427169:	daa    
  42716a:	outs   dx,BYTE PTR ds:[esi]
  42716b:	jmp    0xe257fff4
  427170:	cmp    eax,0x74e386a7
  427175:	mov    esi,0xa7a5dc64
  42717a:	xor    DWORD PTR ds:0x621583f5,ebx
  427180:	es daa 
  427182:	xchg   esi,eax
  427183:	jmp    0x4271d6
  427185:	pop    es
  427186:	push   ecx
  427187:	inc    eax
  427188:	and    eax,esi
  42718a:	push   esi
  42718b:	or     ebp,DWORD PTR [edi+0x26d1370e]
  427191:	enter  0xe88b,0x30
  427195:	test   BYTE PTR [edi],dh
  427197:	nop
  427198:	push   ss
  427199:	addr16 sbb edx,esp
  42719c:	aam    0x5b
  42719e:	add    al,0xe6
  4271a0:	imul   ecx,DWORD PTR [edi-0x4c],0xffffffd7
  4271a4:	rcr    DWORD PTR [esi+0x7a274332],cl
  4271aa:	stos   BYTE PTR es:[edi],al
  4271ab:	aaa    
  4271ac:	aam    0x0
  4271ae:	add    BYTE PTR [eax],al
  4271b0:	add    BYTE PTR [eax],al
  4271b2:	sub    eax,DWORD PTR [edi-0xc021e8b]
  4271b8:	mov    edi,0x7da68ccf
  4271bd:	inc    ecx
  4271be:	das    
  4271bf:	call   0xe9e466b7
  4271c4:	add    DWORD PTR [eax],eax
  4271c6:	repz add al,0x0
  4271c9:	add    BYTE PTR [ebx+0x37],bh
  4271cc:	mov    cs,WORD PTR [eax+edx*1+0x7792fffd]
  4271d3:	mov    al,0xf7
  4271d5:	mov    ds:0xf52fee7d,eax
  4271da:	in     eax,dx
  4271db:	lods   eax,DWORD PTR ds:[esi]
  4271dc:	xchg   edi,eax
  4271dd:	aad    0x9
  4271df:	aaa    
  4271e0:	mov    WORD PTR [ecx-0x2f],ds
  4271e3:	(bad)  
  4271e4:	dec    ebx
  4271e5:	out    0xe5,eax
  4271e7:	add    DWORD PTR [ebx+eax*8],esp
  4271ea:	test   al,0x46
  4271ec:	inc    ecx
  4271ed:	inc    edi
  4271ee:	xchg   edx,eax
  4271ef:	repz popf 
  4271f1:	sub    DWORD PTR [ebp+0x76],ebx
  4271f4:	test   dl,cl
  4271f6:	stos   BYTE PTR es:[edi],al
  4271f7:	fcmovne st,st(6)
  4271f9:	aad    0x7e
  4271fb:	jo     0x427271
  4271fd:	or     ch,BYTE PTR [edx+0x2cf56224]
  427203:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427204:	jns    0x42725a
  427206:	push   ecx
  427207:	adc    eax,0x359f7c59
  42720c:	cmp    al,0x83
  42720e:	or     al,0xdb
  427210:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427211:	pop    ds
  427212:	xor    al,0xa3
  427214:	and    cl,BYTE PTR [edx]
  427216:	pop    ecx
  427217:	(bad)  
  427218:	sbb    cl,dl
  42721a:	cmp    BYTE PTR [edi+0x2f70cd4f],dl
  427220:	sbb    eax,0x9bbe8633
  427225:	jo     0x42724a
  427227:	aad    0x65
  427229:	fdiv   QWORD PTR [eax+0x5a]
  42722c:	je     0x427275
  42722e:	shl    DWORD PTR [edi-0x8],1
  427231:	jecxz  0x4271e3
  427233:	aaa    
  427234:	mov    esp,0x926a4822
  427239:	and    al,0x48
  42723b:	and    cl,BYTE PTR [esi+0x3]
  42723e:	mov    edi,0x1814dd9c
  427243:	xor    al,0xbd
  427245:	sahf   
  427246:	pop    esp
  427247:	mov    edi,0x5c552171
  42724c:	inc    ebx
  42724d:	dec    eax
  42724e:	mov    ch,0x0
  427250:	repnz outs dx,DWORD PTR ds:[esi]
  427252:	inc    edx
  427253:	(bad)  
  427254:	scas   al,BYTE PTR es:[edi]
  427255:	repnz mov dl,0x1d
  427258:	inc    edi
  427259:	xor    eax,0xd541ff97
  42725e:	dec    esi
  42725f:	inc    esi
  427260:	and    al,0xbd
  427262:	je     0x427224
  427264:	jno    0x427228
  427266:	mov    bh,0x26
  427268:	stc    
  427269:	cwde   
  42726a:	xor    eax,0xf9a48cbf
  42726f:	or     eax,0xfffcc3e5
  427274:	inc    ecx
  427275:	loopne 0x427265
  427277:	fwait
  427278:	mov    ah,0x33
  42727a:	retf   
  42727b:	jmp    0x427203
  42727d:	sub    DWORD PTR [edi+0x79a168a5],0xfffffffe
  427284:	push   ecx
  427285:	in     eax,0x68
  427287:	aam    0xb5
  427289:	icebp  
  42728a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42728b:	adc    DWORD PTR [edi-0x44ee0956],ebx
  427291:	in     eax,dx
  427292:	jmp    0xceb29eed
  427297:	jmp    0xb151:0x8ba57271
  42729e:	(bad)  
  42729f:	push   ecx
  4272a0:	xchg   edx,eax
  4272a1:	arpl   WORD PTR [edi-0x7314bb60],cx
  4272a7:	push   es
  4272a8:	xor    bl,BYTE PTR [eax]
  4272aa:	jmp    0x4272cc
  4272ac:	je     0x427234
  4272ae:	or     eax,0x38d59166
  4272b3:	cmp    ebp,DWORD PTR fs:[edx]
  4272b6:	jge    0x42727d
  4272b8:	shr    BYTE PTR [ebp+0x56],1
  4272bb:	xchg   DWORD PTR [edx+0x29d5068a],ebx
  4272c1:	sbb    al,0xbd
  4272c3:	push   esi
  4272c4:	iret   
  4272c5:	enter  0xee55,0xe3
  4272c9:	cli    
  4272ca:	inc    esp
  4272cb:	sub    DWORD PTR [esp+edx*1+0x34d44bf6],eax
  4272d2:	xor    ecx,edi
  4272d4:	cmp    ebp,esp
  4272d6:	(bad)
  4272d9:	stos   BYTE PTR es:[edi],al
  4272da:	mov    ebp,DWORD PTR [ebp-0x4b0d5ff5]
  4272e0:	clc    
  4272e1:	mov    eax,DWORD PTR [edx+0x11f45f57]
  4272e7:	ds jne 0x4272c7
  4272ea:	icebp  
  4272eb:	loope  0x4272da
  4272ed:	pop    esp
  4272ee:	or     DWORD PTR [edi+0x7f73bdfa],edi
  4272f4:	test   eax,0xb7954bb5
  4272f9:	clc    
  4272fa:	std    
  4272fb:	cdq    
  4272fc:	sub    eax,0x98e02ed0
  427301:	sbb    cl,BYTE PTR ds:0xa3324b76
  427307:	jne    0x4272ea
  427309:	mov    bl,0xbe
  42730b:	and    edx,DWORD PTR [eax]
  42730d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42730e:	pop    eax
  42730f:	rcr    ch,1
  427311:	adc    DWORD PTR [ebp-0x40be8e55],eax
  427317:	inc    ebp
  427318:	pop    esp
  427319:	mov    bh,0x40
  42731b:	pop    esp
  42731c:	ds inc esp
  42731e:	jb     0x4272a4
  427320:	pop    ecx
  427321:	pop    edi
  427322:	or     bh,dl
  427324:	iret   
  427325:	add    al,0xc1
  427327:	rcr    BYTE PTR [ebx+0x38c6b699],cl
  42732d:	or     al,0x7
  42732f:	jb     0x42731f
  427331:	lahf   
  427332:	shr    BYTE PTR [edi+0x68],1
  427335:	rol    bh,0x89
  427338:	rcr    DWORD PTR [eax+0x7abed212],0xd6
  42733f:	pop    ebx
  427340:	inc    ecx
  427341:	xchg   edi,eax
  427342:	fldenv [eax-0xe3e6c8a]
  427348:	cwde   
  427349:	adc    ebp,edx
  42734b:	out    dx,eax
  42734c:	das    
  42734d:	sub    DWORD PTR [ecx],esi
  42734f:	push   ebp
  427350:	cmp    al,0x68
  427352:	dec    edi
  427353:	lea    edx,[esi]
  427355:	or     DWORD PTR ds:0xbced4f2a,edx
  42735b:	pop    ebp
  42735c:	mov    edi,0xbaabd82c
  427361:	gs cmp eax,0xdc0b6554
  427367:	mov    al,0xe0
  427369:	xlat   BYTE PTR ds:[ebx]
  42736a:	jmp    0xeb6aa2a8
  42736f:	and    al,0x59
  427371:	lahf   
  427372:	add    al,bl
  427374:	xchg   ebx,eax
  427375:	sbb    BYTE PTR [ecx+0x77144324],ch
  42737b:	pushf  
  42737c:	lods   al,BYTE PTR ds:[esi]
  42737d:	mov    ebx,0xaa7ce80f
  427382:	or     edi,DWORD PTR [esi]
  427384:	mov    cl,BYTE PTR [eax-0x36e22dd1]
  42738a:	and    dl,dh
  42738c:	push   edi
  42738d:	sub    al,0xd6
  42738f:	aad    0x9b
  427391:	(bad)  [edi+0x68]
  427394:	lahf   
  427395:	or     al,0xec
  427397:	jp     0x427382
  427399:	lods   eax,DWORD PTR ds:[esi]
  42739a:	outs   dx,DWORD PTR ds:[esi]
  42739b:	mov    cl,0xb6
  42739d:	push   cs
  42739e:	and    esp,DWORD PTR [ebx+0x75c37082]
  4273a4:	fcomi  st,st(2)
  4273a6:	adc    BYTE PTR [eax-0x10],bl
  4273a9:	or     edi,DWORD PTR [edx]
  4273ab:	dec    edi
  4273ac:	test   BYTE PTR ds:0xabe93903,cl
  4273b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4273b3:	inc    esi
  4273b4:	sub    DWORD PTR ds:0xbaeef132,eax
  4273ba:	dec    edx
  4273bb:	push   eax
  4273bc:	cmp    BYTE PTR [edi+0x3fec18b],ch
  4273c2:	lods   eax,DWORD PTR ds:[esi]
  4273c3:	push   es
  4273c4:	shr    BYTE PTR [ebp+0x158762dd],0x66
  4273cb:	mov    ah,0xd9
  4273cd:	push   ss
  4273ce:	cmp    cl,BYTE PTR [edi-0x7]
  4273d1:	imul   ecx,DWORD PTR [ecx+0x56],0xdff1ab95
  4273d8:	mov    eax,0x3f84ebea
  4273dd:	xchg   esp,eax
  4273de:	ss inc eax
  4273e0:	sub    bh,BYTE PTR [eax-0x39]
  4273e3:	int    0xeb
  4273e5:	or     BYTE PTR [edi+0x17138651],dh
  4273eb:	lea    edi,[edi]
  4273ed:	retf   
  4273ee:	les    esp,FWORD PTR [eax+0x1d332c6c]
  4273f4:	or     BYTE PTR [eax+0x9f343fd],0x4e
  4273fb:	push   ebp
  4273fc:	ins    BYTE PTR es:[edi],dx
  4273fd:	xchg   esi,eax
  4273fe:	cmp    DWORD PTR [edi],eax
  427400:	lods   eax,DWORD PTR ds:[esi]
  427401:	mov    ebx,0x8d474119
  427406:	retf   
  427407:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427408:	dec    ebx
  427409:	cdq    
  42740a:	shl    DWORD PTR ds:0x49118a3e,cl
  427410:	xchg   ebp,eax
  427411:	repz mov ch,0x9b
  427414:	xchg   esi,eax
  427415:	stc    
  427416:	test   eax,0x145389f8
  42741b:	xor    al,0x95
  42741d:	and    BYTE PTR [ecx],ch
  42741f:	fist   DWORD PTR [esi-0x2575ff45]
  427425:	sar    DWORD PTR [edi],1
  427427:	(bad)  
  427428:	enter  0x7ce0,0x7b
  42742c:	add    DWORD PTR [edi],edx
  42742e:	sub    esp,edi
  427430:	shl    DWORD PTR [ebx],0xd1
  427433:	das    
  427434:	push   cs
  427435:	jge    0x427450
  427437:	mov    BYTE PTR [eax+0x1baa25bc],bh
  42743d:	dec    edx
  42743e:	mul    DWORD PTR [esi]
  427440:	das    
  427441:	call   0x132a:0xe35e783c
  427448:	dec    esp
  427449:	test   BYTE PTR [eax+esi*8],ah
  42744c:	or     BYTE PTR [ecx],dl
  42744e:	or     dh,ch
  427450:	pop    edi
  427451:	dec    ebp
  427452:	popa   
  427453:	pop    esp
  427454:	fucom  st(7)
  427456:	test   DWORD PTR [ecx],0xcfd930e0
  42745c:	inc    ebp
  42745d:	push   edi
  42745e:	repz aam 0x69
  427461:	jne    0x42744a
  427463:	jmp    0x956e:0x5cb68be0
  42746a:	call   0x12ad:0xd82e14b9
  427471:	int3   
  427472:	rcr    DWORD PTR [ecx-0x40],1
  427475:	mov    bh,BYTE PTR [ecx-0x40]
  427478:	sub    DWORD PTR [edx+ebx*1-0x6c3a331],ebp
  42747f:	push   eax
  427480:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427481:	cmp    al,0xe3
  427483:	sub    eax,0xe96464b5
  427488:	jmp    0x427470
  42748a:	mov    ecx,DWORD PTR [edx]
  42748c:	fdiv   st(0),st
  42748e:	jns    0x42741d
  427490:	add    BYTE PTR [edx+0x5d4d0400],0xb1
  427497:	lods   al,BYTE PTR ds:[esi]
  427498:	pop    ds
  427499:	xor    bh,BYTE PTR [esi-0x58]
  42749c:	les    ebx,FWORD PTR [ebp-0x20]
  42749f:	xor    ax,0xc1d4
  4274a3:	xor    ch,BYTE PTR [edi-0x19d00bb4]
  4274a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4274aa:	mov    al,ds:0x6a18c0c2
  4274af:	and    bh,0xfc
  4274b2:	cmp    esi,DWORD PTR [edi+0x4ab9f4c8]
  4274b8:	stos   BYTE PTR es:[edi],al
  4274b9:	push   ss
  4274ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4274bb:	push   eax
  4274bc:	mov    ds:0xefea3ec8,al
  4274c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4274c2:	jnp    0x4274f5
  4274c4:	jecxz  0x4274dd
  4274c6:	adc    DWORD PTR [ecx],0xc235ba3d
  4274cc:	sbb    DWORD PTR [esi-0x2c038dac],esp
  4274d2:	jl     0x427467
  4274d4:	mov    BYTE PTR [eax-0x24477cc4],ah
  4274da:	repnz das 
  4274dc:	sahf   
  4274dd:	mov    bh,0xd7
  4274df:	push   ecx
  4274e0:	pusha  
  4274e1:	loopne 0x4274d2
  4274e3:	ret    
  4274e4:	xor    BYTE PTR [ebp-0x4e],bl
  4274e7:	cld    
  4274e8:	xchg   dh,dh
  4274ea:	into   
  4274eb:	ror    BYTE PTR [ebx-0x13],1
  4274ee:	sar    DWORD PTR [edi-0xeddd662],1
  4274f4:	clc    
  4274f5:	mov    edx,0x39bfee51
  4274fa:	xor    dl,BYTE PTR [ecx+0x70]
  4274fd:	push   ds
  4274fe:	mov    edi,0xe1f9f5cc
  427503:	(bad)  
  427504:	mov    BYTE PTR [esi-0x41],ah
  427507:	and    DWORD PTR [ebx],edx
  427509:	out    0x8,eax
  42750b:	push   eax
  42750c:	(bad)  
  42750d:	fist   WORD PTR [eax-0x4]
  427510:	push   ebp
  427511:	jp     0x4274ba
  427513:	mov    ebp,0xa4a9f287
  427518:	mov    edx,DWORD PTR [edi+0x6a]
  42751b:	dec    edi
  42751c:	pop    ebp
  42751d:	dec    ebx
  42751e:	push   0x9
  427520:	rcr    ecx,1
  427522:	leave  
  427523:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427524:	dec    ecx
  427525:	sub    eax,esi
  427527:	jne    0x427552
  427529:	in     eax,dx
  42752a:	sub    ebx,DWORD PTR [edi-0x68677cdb]
  427530:	js     0x4274c6
  427532:	ja     0x427532
  427534:	adc    dh,bh
  427536:	or     esp,edi
  427538:	les    ecx,FWORD PTR [edi]
  42753a:	gs xchg esp,eax
  42753c:	popfw  
  42753e:	push   cs
  42753f:	imul   edi,ecx,0x7a
  427542:	xor    cl,BYTE PTR [esi]
  427544:	in     al,0x86
  427546:	mov    ah,0x24
  427548:	imul   eax,ebx,0x47bb141e
  42754e:	fst    DWORD PTR [edx]
  427550:	pusha  
  427551:	push   ebx
  427552:	add    BYTE PTR [esp+ebx*4-0x2f],bl
  427556:	sub    DWORD PTR [ebp+0xc],esi
  427559:	xchg   ebp,eax
  42755a:	mov    ebx,0x902d9155
  42755f:	push   esp
  427560:	fs mov ds,ecx
  427563:	leave  
  427564:	mov    al,0x29
  427566:	add    bh,dh
  427568:	xchg   BYTE PTR [ebp+0x70d956bb],ah
  42756e:	call   0x2f86d042
  427573:	aam    0x62
  427575:	xlat   BYTE PTR ds:[ebx]
  427576:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427577:	pop    edx
  427578:	jmp    0x4275af
  42757a:	jbe    0x427570
  42757c:	and    eax,0xbb9eff5a
  427581:	ins    DWORD PTR es:[edi],dx
  427582:	or     al,0x63
  427584:	xchg   esp,eax
  427585:	xchg   ax,ax
  427587:	(bad)  
  427588:	mov    esi,0x8f1c9dd4
  42758d:	xchg   esp,eax
  42758e:	scas   eax,DWORD PTR es:[edi]
  42758f:	adc    dh,BYTE PTR [ebp+0x38]
  427592:	popa   
  427593:	push   esp
  427594:	mov    eax,0x92626fda
  427599:	add    eax,0x85c08b9e
  42759e:	and    eax,0xae6c7ab4
  4275a3:	out    dx,al
  4275a4:	mov    ch,0x87
  4275a7:	sbb    eax,0xed97b58e
  4275ac:	pop    ecx
  4275ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275ae:	cmp    al,0x2c
  4275b0:	jae    0x427545
  4275b2:	test   DWORD PTR [ebx+0x0],esp
  4275b5:	scas   eax,DWORD PTR es:[edi]
  4275b6:	fidiv  WORD PTR [edx-0x4e0fa88]
  4275bc:	into   
  4275bd:	jmp    0x42755b
  4275bf:	push   edx
  4275c0:	enter  0x3e26,0x6f
  4275c4:	jno    0x42762a
  4275c6:	sbb    ch,BYTE PTR [eax]
  4275c8:	(bad)  
  4275c9:	and    bl,ch
  4275cb:	test   eax,0x3562f258
  4275d0:	and    ebx,esp
  4275d2:	daa    
  4275d3:	test   eax,0xc42103e
  4275d8:	adc    al,0xc3
  4275da:	mov    ds:0x823fd004,eax
  4275df:	mov    esi,0x338d4354
  4275e4:	push   eax
  4275e5:	adc    edx,DWORD PTR [ebp-0x6b58cc90]
  4275eb:	in     al,0x4b
  4275ed:	pop    ds
  4275ee:	stos   BYTE PTR es:[edi],al
  4275ef:	xor    DWORD PTR [ebx+0x3a],esi
  4275f2:	push   cs
  4275f3:	mov    bl,0x99
  4275f5:	dec    BYTE PTR [edi]
  4275f7:	outs   dx,DWORD PTR ds:[esi]
  4275f8:	outs   dx,DWORD PTR ds:[esi]
  4275f9:	cmc    
  4275fa:	test   DWORD PTR [esi-0x5a],eax
  4275fd:	ins    BYTE PTR es:[edi],dx
  4275fe:	stc    
  4275ff:	sbb    BYTE PTR [edx+0x65],bh
  427602:	fdiv   DWORD PTR [edx+0x14]
  427605:	(bad)  
  427606:	xlat   BYTE PTR ds:[ebx]
  427607:	xchg   ebx,eax
  427608:	dec    eax
  427609:	add    BYTE PTR [edx-0x1f9fafc8],cl
  42760f:	out    0x74,eax
  427611:	jl     0x42761b
  427613:	sbb    eax,0x99e6785c
  427618:	lock cli 
  42761a:	dec    eax
  42761b:	std    
  42761c:	or     DWORD PTR [ecx+0x11],ebp
  42761f:	pop    edx
  427620:	bnd jp 0x427661
  427623:	into   
  427624:	cmp    al,0x8d
  427626:	aas    
  427627:	test   al,0x56
  427629:	mov    ebx,0x97b44bbc
  42762e:	mov    dl,0xeb
  427630:	inc    ecx
  427631:	cmp    al,0x69
  427633:	(bad)  
  427634:	jne    0x427696
  427636:	cwde   
  427637:	cmp    al,0xa5
  427639:	(bad)  
  42763a:	iret   
  42763b:	(bad)  [esi+0x1af8dc95]
  427641:	in     eax,dx
  427642:	and    ebx,DWORD PTR [edi+ebx*2-0x7a]
  427646:	xor    cl,BYTE PTR [ecx-0xdc74c8f]
  42764c:	pop    esi
  42764d:	icebp  
  42764e:	jno    0x427646
  427650:	push   ebx
  427651:	jp     0x427692
  427653:	in     eax,0xb7
  427655:	jmp    DWORD PTR [edx+0x13a1f844]
  42765b:	das    
  42765c:	fs cld 
  42765e:	nop
  42765f:	not    BYTE PTR [eax]
  427661:	dec    eax
  427662:	mov    eax,0x7af93598
  427667:	arpl   WORD PTR [edx-0x4918fab6],bx
  42766d:	push   ds
  42766e:	pop    ss
  42766f:	inc    eax
  427670:	test   BYTE PTR [esi-0x4909293f],ah
  427676:	mov    ebp,0xb8af3aa5
  42767b:	mov    ?,WORD PTR [esi+0x22]
  42767e:	jecxz  0x427650
  427680:	xchg   ebp,eax
  427681:	push   edx
  427682:	aaa    
  427683:	pop    ebp
  427684:	(bad)  
  427685:	sahf   
  427686:	lock jae 0x427635
  427689:	mov    BYTE PTR [ebx-0x7dc19d6e],dl
  42768f:	mov    bh,0x92
  427691:	dec    edx
  427692:	fild   DWORD PTR [ebx+edx*1+0x58f42ab2]
  427699:	push   ebp
  42769a:	(bad)  [eax]
  42769c:	fcmovnb st,st(7)
  42769e:	in     eax,0xde
  4276a0:	test   al,0xe4
  4276a2:	out    0xbc,eax
  4276a4:	pop    ecx
  4276a5:	cmp    dl,BYTE PTR [edi]
  4276a7:	push   ebx
  4276a8:	jle    0x4276dd
  4276aa:	shl    cl,1
  4276ac:	or     BYTE PTR [ebp+0x60],dl
  4276af:	pop    ds
  4276b0:	addr16 cmp eax,0x7a4f5299
  4276b6:	(bad)  
  4276b7:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4276b9:	stos   BYTE PTR es:[edi],al
  4276ba:	in     eax,0x5d
  4276bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4276bd:	add    BYTE PTR [eax],al
  4276bf:	add    BYTE PTR [eax],al
  4276c1:	add    BYTE PTR [edx],cl
  4276c3:	les    esp,FWORD PTR [ecx+0x5ef7eff7]
  4276c9:	std    
  4276ca:	mov    ebp,0x16f91c3b
  4276cf:	adc    BYTE PTR [ebp-0x6e],0x94
  4276d3:	out    dx,al
  4276d4:	add    DWORD PTR [eax],eax
  4276d6:	repz add al,0x0
  4276d9:	add    ch,dl
  4276db:	mov    WORD PTR fs:[ebx+eiz*1+0x497faf85],fs
  4276e3:	iret   
  4276e4:	hlt    
  4276e5:	sub    ah,bl
  4276e7:	sbb    DWORD PTR [edi+0x4e],ecx
  4276ea:	xchg   esp,eax
  4276eb:	out    dx,al
  4276ec:	push   edx
  4276ed:	and    eax,0xa7b7816a
  4276f2:	call   0x27a1fbb2
  4276f7:	adc    eax,0x66a22e0a
  4276fc:	or     bl,dh
  4276fe:	aam    0xc1
  427700:	jl     0x427757
  427702:	imul   esp,DWORD PTR ds:0x2d847f6b,0x2774dda
  42770c:	ja     0x42774d
  42770e:	mov    al,0x28
  427710:	pop    es
  427711:	out    dx,eax
  427712:	inc    edx
  427713:	cmp    BYTE PTR [ecx-0x6c5fe826],bh
  427719:	mov    ah,0x6c
  42771b:	seta   BYTE PTR [edi-0x147e26dd]
  427722:	mov    ds:0x174b815b,al
  427727:	icebp  
  427728:	jecxz  0x427764
  42772a:	sbb    bh,al
  42772c:	sub    BYTE PTR [esi],0x56
  42772f:	into   
  427730:	ret    
  427731:	pop    edx
  427732:	not    DWORD PTR [edx-0xf795cdc]
  427738:	xchg   ecx,eax
  427739:	data16 js 0x427727
  42773c:	faddp  st(3),st
  42773e:	shl    DWORD PTR [ebp+0x37],0x91
  427742:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427743:	popa   
  427744:	pop    ds
  427745:	jnp    0x427720
  427747:	imul   eax,DWORD PTR [edi],0xb2e6369e
  42774d:	inc    edx
  42774e:	ficomp DWORD PTR [edx-0x28]
  427751:	inc    edx
  427752:	add    eax,0xf2956c55
  427757:	aad    0x83
  427759:	xlat   BYTE PTR ds:[ebx]
  42775a:	mov    esi,0x1349536f
  42775f:	ficom  WORD PTR [esi-0x4b]
  427762:	jp     0x4277ad
  427764:	add    DWORD PTR [edi+0x3b],edx
  427767:	jg     0x427710
  427769:	adc    dh,BYTE PTR [edi-0x71]
  42776c:	push   ss
  42776d:	pop    eax
  42776e:	adc    BYTE PTR [edx+eax*1+0x1f],dl
  427772:	xlat   BYTE PTR ds:[ebx]
  427773:	sub    al,0x57
  427775:	stos   BYTE PTR es:[edi],al
  427776:	jmp    0xedfa:0x4c250713
  42777d:	aam    0x81
  42777f:	or     DWORD PTR [edx-0x39f9d62a],esp
  427785:	push   ss
  427786:	add    cl,BYTE PTR [ebx-0x6eb8fa09]
  42778c:	inc    ebp
  42778d:	icebp  
  42778e:	xchg   ebp,eax
  42778f:	pop    edi
  427790:	sbb    BYTE PTR [edx+edi*4-0x80],bh
  427794:	xchg   DWORD PTR [edi+eax*4-0x3448259],esp
  42779b:	xchg   edx,eax
  42779c:	leave  
  42779d:	xchg   ebx,eax
  42779e:	pop    esi
  42779f:	jae    0x4277f4
  4277a1:	cwde   
  4277a2:	adc    al,0xdc
  4277a4:	scas   al,BYTE PTR es:[edi]
  4277a5:	cmp    cl,BYTE PTR [edi+edi*4-0x4eff06c1]
  4277ac:	jg     0x4277b2
  4277ae:	jb     0x427734
  4277b0:	mov    edi,0x185a6d9a
  4277b5:	pusha  
  4277b6:	scas   eax,DWORD PTR es:[edi]
  4277b7:	xor    al,0x2b
  4277b9:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4277bb:	stos   BYTE PTR es:[edi],al
  4277bc:	scas   eax,DWORD PTR es:[edi]
  4277bd:	or     bl,BYTE PTR [ebx-0x10d3b475]
  4277c3:	jmp    0x4277df
  4277c5:	cmc    
  4277c6:	jg     0x427776
  4277c8:	mov    esi,0xb8c77a5b
  4277cd:	push   eax
  4277ce:	push   esp
  4277cf:	clc    
  4277d0:	pop    ebp
  4277d1:	sbb    ebx,esi
  4277d3:	fdivr  st(4),st
  4277d5:	xor    BYTE PTR [esp+edx*1+0x6868b29d],dl
  4277dc:	pop    esp
  4277dd:	dec    DWORD PTR [ecx+0x7148f9a8]
  4277e3:	xor    al,0xb6
  4277e5:	adc    DWORD PTR [ecx],esi
  4277e7:	loope  0x42782f
  4277e9:	xchg   ebp,eax
  4277ea:	mov    al,ds:0xb8e92b7d
  4277ef:	jmp    0x4399b655
  4277f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4277f5:	xlat   BYTE PTR ds:[ebx]
  4277f6:	in     al,dx
  4277f7:	cmc    
  4277f8:	add    edi,edx
  4277fa:	lds    ecx,FWORD PTR [eax+0x125850e1]
  427800:	call   DWORD PTR [ebx+0x67]
  427803:	outs   dx,BYTE PTR ds:[esi]
  427804:	and    eax,0xd906b2c
  427809:	mov    al,0x1d
  42780b:	mov    DWORD PTR [ebx+0x4363771],ebp
  427811:	fld    TBYTE PTR [eax+0x44b05526]
  427817:	cmc    
  427818:	into   
  427819:	sbb    eax,0x980270dc
  42781e:	loop   0x4277e2
  427820:	jb     0x42782f
  427822:	push   esi
  427823:	or     al,0xcd
  427825:	inc    eax
  427826:	jmp    0x427850
  427828:	in     al,dx
  427829:	jnp    0x42787a
  42782b:	xor    DWORD PTR [esi+0x423dc2a7],ebp
  427831:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427832:	fstp   DWORD PTR [edi-0x1eb01d70]
  427838:	rcr    DWORD PTR [edi+esi*8],cl
  42783b:	in     eax,dx
  42783c:	cmp    dl,BYTE PTR [ecx+ecx*2-0x1608c51a]
  427843:	sub    BYTE PTR [edi-0x66],al
  427846:	scas   al,BYTE PTR es:[edi]
  427847:	pop    ebp
  427848:	sti    
  427849:	xor    ah,BYTE PTR [ebx]
  42784b:	dec    eax
  42784c:	ror    DWORD PTR [ebx+0x29],1
  42784f:	mov    gs,WORD PTR [ebx+0x72]
  427852:	call   0x7151:0xeba80760
  427859:	mov    edx,DWORD PTR [ecx-0x1efbe1d6]
  42785f:	(bad)  
  427861:	add    eax,0xb1bab4c
  427866:	cmp    cl,0x83
  427869:	fsubr  DWORD PTR [ecx]
  42786b:	sub    eax,0xa0c87abb
  427870:	mov    eax,ds:0x3af419f4
  427875:	jge    0x4278a9
  427877:	hlt    
  427878:	adc    eax,0x79a58ad3
  42787d:	push   eax
  42787e:	and    ebp,DWORD PTR [eax-0x4cd8716b]
  427884:	sar    BYTE PTR cs:0x7f6e070d,0x50
  42788c:	call   0xbcbe:0x3e2c5585
  427893:	pop    ebp
  427894:	(bad)  
  427895:	fisubr WORD PTR [esi-0x63]
  427898:	sbb    al,0xf1
  42789a:	cmp    edx,DWORD PTR [ecx+0x4c0b7fac]
  4278a0:	jmp    0xec4f:0xcf2a6dc6
  4278a7:	(bad)  
  4278a9:	into   
  4278aa:	xor    DWORD PTR [eax-0x37],ecx
  4278ad:	(bad)  
  4278ae:	fsubr  DWORD PTR [edx-0x105b8505]
  4278b4:	test   BYTE PTR [ecx],cl
  4278b6:	popa   
  4278b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4278b8:	sbb    al,0x5a
  4278ba:	out    0x7a,al
  4278bc:	and    al,0x8a
  4278be:	(bad)  
  4278bf:	pop    esp
  4278c0:	cdq    
  4278c1:	ja     0x42790e
  4278c3:	out    0x7e,eax
  4278c5:	jno    0x427937
  4278c7:	sub    ah,dl
  4278c9:	sbb    DWORD PTR [esi],esp
  4278cb:	cmc    
  4278cc:	lock or edx,eax
  4278cf:	xchg   esp,eax
  4278d0:	sub    eax,DWORD PTR [ebp-0x45]
  4278d3:	mov    dl,BYTE PTR [edi]
  4278d5:	sbb    ebp,DWORD PTR [edx+ebp*1]
  4278d8:	inc    ebx
  4278d9:	xchg   ecx,eax
  4278da:	add    BYTE PTR [eax-0x44],ch
  4278dd:	shr    DWORD PTR [ebp+eiz*2-0x797cbc7d],cl
  4278e4:	adc    eax,0xa575c9ba
  4278e9:	stos   DWORD PTR es:[edi],eax
  4278ea:	ja     0x4278da
  4278ec:	xchg   esi,eax
  4278ed:	fcom   DWORD PTR [esi+0x670ff64f]
  4278f3:	dec    ebx
  4278f4:	cdq    
  4278f5:	mov    dl,BYTE PTR [edi]
  4278f7:	inc    eax
  4278f8:	pop    ds
  4278f9:	xlat   BYTE PTR ds:[ebx]
  4278fa:	push   ebx
  4278fb:	sub    eax,0x31bf0d76
  427900:	mov    DWORD PTR [edi-0x42d252e],0x8473fca9
  42790a:	int3   
  42790b:	mov    eax,ds:0x6f6f5452
  427910:	stc    
  427911:	popa   
  427912:	sti    
  427913:	fdivr  DWORD PTR [ebp-0x216119c0]
  427919:	pushf  
  42791a:	ins    DWORD PTR es:[edi],dx
  42791b:	cmp    DWORD PTR [eax-0x3ffba052],0xbcfc6de3
  427925:	sbb    al,0xb7
  427927:	add    DWORD PTR [ebx+0x1d],ecx
  42792a:	daa    
  42792b:	in     eax,dx
  42792c:	dec    ebp
  42792d:	fs sti 
  42792f:	fisttp WORD PTR [edi-0x1]
  427932:	call   0x90d:0x47a82f6d
  427939:	pop    ebp
  42793a:	(bad)  
  42793c:	push   ds
  42793d:	mov    ecx,0xa1ff261a
  427942:	sub    ebx,DWORD PTR [eax+ebp*8]
  427945:	test   BYTE PTR [eax],dh
  427947:	daa    
  427948:	sbb    BYTE PTR [eax+0x4ebe4fbd],al
  42794e:	xchg   ecx,eax
  42794f:	jmp    0x427900
  427951:	ds mov ebp,0x53a1dc92
  427957:	or     ch,cl
  427959:	adc    esp,DWORD PTR [edx+ebp*1]
  42795c:	lahf   
  42795d:	fisub  WORD PTR [ebp-0x5e0961a9]
  427963:	xchg   esp,eax
  427964:	sbb    eax,0x111950c0
  427969:	push   esp
  42796a:	xchg   esi,eax
  42796b:	popa   
  42796c:	inc    ebx
  42796d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42796e:	fcmovnbe st,st(5)
  427970:	inc    eax
  427971:	dec    ebx
  427972:	(bad)  
  427973:	jo     0x42792c
  427975:	gs and al,BYTE PTR gs:[ebp-0x3e822c1]
  42797d:	pushf  
  42797e:	mov    ch,0xd
  427980:	mov    dl,ah
  427982:	test   al,0x29
  427984:	push   cs
  427985:	jmp    0xc214da6c
  42798a:	xor    eax,0x6b593977
  42798f:	mov    edx,0x41a9e6b8
  427994:	inc    ebp
  427995:	pop    ds
  427996:	xor    ch,BYTE PTR es:[eax-0xc]
  42799a:	fdivr  DWORD PTR [esi-0x798286a1]
  4279a0:	and    al,0x62
  4279a2:	adc    al,0xd8
  4279a4:	(bad)  [ecx-0x40]
  4279a7:	xchg   DWORD PTR [edi-0x70],esi
  4279aa:	xor    eax,0x655a9ff3
  4279af:	push   eax
  4279b0:	icebp  
  4279b1:	ficom  WORD PTR [esi]
  4279b3:	out    0x71,eax
  4279b5:	push   ebx
  4279b6:	adc    BYTE PTR [esi-0x44],0x19
  4279ba:	push   ecx
  4279bb:	fs rcl ebx,1
  4279be:	ins    BYTE PTR es:[edi],dx
  4279bf:	adc    edx,0x8
  4279c2:	hlt    
  4279c3:	mov    DWORD PTR [ecx-0x2c],esi
  4279c6:	adc    BYTE PTR [ecx],cl
  4279c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279c9:	xchg   BYTE PTR [edx],ah
  4279cb:	test   BYTE PTR [ebx+esi*1],0x3d
  4279cf:	mov    ebx,0x600d1c82
  4279d4:	jle    0x4279e4
  4279d6:	inc    edx
  4279d7:	add    eax,0x61cbcbc5
  4279dc:	adc    BYTE PTR ds:0x401d2963,dh
  4279e2:	cmp    DWORD PTR [ebp+0x7d09e2ad],edx
  4279e8:	mov    eax,0x6f1fec21
  4279ed:	popf   
  4279ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4279ef:	or     edx,esp
  4279f1:	js     0x427a01
  4279f3:	cmp    bh,BYTE PTR [ecx-0x1b943200]
  4279f9:	adc    dl,dh
  4279fb:	adc    al,0x14
  4279fd:	xchg   al,dh
  4279ff:	jo     0x4279eb
  427a01:	sbb    al,BYTE PTR [edx-0x23]
  427a04:	fistp  QWORD PTR [esi+0x4]
  427a07:	repnz inc edi
  427a09:	rol    DWORD PTR [eax],cl
  427a0b:	or     eax,0xc5314a8
  427a10:	sar    DWORD PTR [eax],cl
  427a12:	dec    ebp
  427a13:	jl     0x4279b1
  427a15:	mov    ebp,DWORD PTR [ebx-0x1f]
  427a18:	(bad)  
  427a1a:	pop    esi
  427a1b:	add    al,0x93
  427a1d:	xchg   edi,eax
  427a1e:	mov    ch,0x7e
  427a20:	lds    esp,FWORD PTR [edx-0x6841fc40]
  427a26:	ins    DWORD PTR es:[edi],dx
  427a27:	outs   dx,BYTE PTR ds:[esi]
  427a28:	aaa    
  427a29:	push   cs
  427a2a:	(bad)  [edi+0x57]
  427a2d:	cdq    
  427a2e:	xchg   ebx,edi
  427a30:	push   cs
  427a31:	add    dl,BYTE PTR [ecx+0x79]
  427a34:	(bad)  
  427a35:	lock inc ebp
  427a37:	(bad)  
  427a38:	cwde   
  427a39:	pusha  
  427a3a:	add    al,0xf4
  427a3c:	xchg   esi,eax
  427a3d:	inc    edx
  427a3e:	mov    ds:0x3b00e0d5,al
  427a43:	xor    ecx,0x917dc171
  427a49:	add    al,BYTE PTR [ecx+0x68]
  427a4c:	mov    ch,0x3d
  427a4e:	push   0xffffffcc
  427a50:	mov    DWORD PTR [edx+0x4781e04d],esp
  427a56:	push   ss
  427a57:	adc    esi,edi
  427a59:	out    0x1d,al
  427a5b:	arpl   bx,dx
  427a5d:	or     esi,eax
  427a5f:	bound  ecx,QWORD PTR [edx+0x19e0f31d]
  427a65:	leave  
  427a66:	adc    DWORD PTR [edi+edi*2+0x65],eax
  427a6a:	pop    ebp
  427a6b:	in     eax,0x89
  427a6d:	aas    
  427a6e:	pusha  
  427a6f:	dec    esp
  427a70:	or     dl,BYTE PTR [ebp-0x4d]
  427a73:	sub    eax,0xf34866fb
  427a78:	or     DWORD PTR [ecx],0x97777bd6
  427a7e:	jb     0x427aff
  427a80:	inc    ebp
  427a81:	or     BYTE PTR [edi+0x6],cl
  427a84:	dec    ecx
  427a85:	shl    eax,cl
  427a87:	call   0xce3472fb
  427a8c:	cdq    
  427a8d:	test   eax,0x22b10f49
  427a92:	hlt    
  427a93:	or     BYTE PTR [ecx+esi*2-0x5d],cl
  427a97:	pop    ecx
  427a98:	xor    bh,dh
  427a9a:	fld    QWORD PTR [ecx+0x54]
  427a9d:	xor    ebx,esi
  427a9f:	xchg   DWORD PTR [esp+eax*2-0x5d],ebp
  427aa3:	xchg   edi,eax
  427aa4:	cmp    eax,0x5d1fdfc
  427aa9:	rol    BYTE PTR ds:0x7b7453d4,0xaf
  427ab0:	test   BYTE PTR [esi],0x9c
  427ab3:	daa    
  427ab4:	idiv   ch
  427ab6:	out    dx,al
  427ab7:	mov    ah,0x98
  427ab9:	rcl    BYTE PTR [esi-0x1f6dc3a6],cl
  427abf:	out    0x1d,eax
  427ac1:	lds    edi,FWORD PTR fs:0xef5d1b46
  427ac8:	pop    esp
  427ac9:	inc    edi
  427aca:	daa    
  427acb:	dec    ebx
  427acc:	cwde   
  427acd:	js     0x427a7a
  427acf:	enter  0xc1be,0xdb
  427ad3:	mov    al,ds:0xb1caa862
  427ad8:	push   es
  427ad9:	sub    ch,al
  427adb:	shr    DWORD PTR [esi+ebx*8],1
  427ade:	aad    0x83
  427ae0:	in     al,0x50
  427ae2:	mov    cl,0x66
  427ae4:	mov    eax,0xcbc3c598
  427ae9:	pushf  
  427aea:	adc    DWORD PTR [esi+0x1ab85d23],0xffffffa2
  427af1:	leave  
  427af2:	pop    eax
  427af3:	ret    0x2c91
  427af6:	and    al,0xe9
  427af8:	dec    edi
  427af9:	dec    edi
  427afa:	sub    BYTE PTR [edx-0x3f0b127e],ah
  427b00:	in     al,0xed
  427b02:	jg     0x427b1b
  427b04:	xchg   ebp,eax
  427b05:	cmp    al,0xbe
  427b07:	div    bl
  427b09:	jge    0x427aa1
  427b0b:	mov    eax,0x3b9d32f6
  427b10:	and    eax,DWORD PTR [ebx+0x15]
  427b13:	fwait
  427b14:	jge    0x427b4d
  427b16:	outs   dx,BYTE PTR ds:[esi]
  427b17:	or     edx,DWORD PTR [esp+esi*8]
  427b1a:	or     DWORD PTR ds:0x4db181c1,0x2a
  427b21:	jne    0x427b20
  427b23:	mov    cl,0x49
  427b25:	shr    esp,0xfa
  427b28:	jo     0x427b2c
  427b2a:	inc    edi
  427b2b:	pop    ds
  427b2c:	ins    BYTE PTR es:[edi],dx
  427b2d:	cli    
  427b2e:	and    eax,DWORD PTR [ebp-0x2e]
  427b31:	gs cld 
  427b33:	xor    DWORD PTR [esi],ebx
  427b35:	jmp    FWORD PTR [edi]
  427b37:	shufps xmm7,xmm5,0x72
  427b3b:	mov    esp,0xf3ab875d
  427b40:	outs   dx,DWORD PTR ds:[esi]
  427b41:	xchg   ebp,eax
  427b42:	scas   al,BYTE PTR es:[edi]
  427b43:	sbb    ebp,DWORD PTR [esi-0x1987b17c]
  427b49:	cs nop
  427b4b:	fsub   DWORD PTR [ebp+0x59c91030]
  427b51:	cwde   
  427b52:	(bad)  [eax+esi*8]
  427b55:	(bad)  
  427b56:	mov    al,ds:0xd60d3855
  427b5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b5c:	sub    ch,BYTE PTR [eax]
  427b5e:	fsub   QWORD PTR [esp+esi*2]
  427b61:	push   esi
  427b62:	fsub   DWORD PTR [ebx]
  427b64:	test   eax,0xaea05dc1
  427b69:	xor    DWORD PTR [eax+0x3e],esi
  427b6c:	sahf   
  427b6d:	es mov ebp,0x500ee2d4
  427b73:	dec    edi
  427b74:	popa   
  427b75:	and    al,0xb8
  427b77:	rol    eax,cl
  427b79:	hlt    
  427b7a:	(bad)  
  427b7b:	sub    ebp,DWORD PTR [esi+eax*8+0x64]
  427b7f:	mov    eax,ds:0xe3913efa
  427b84:	mov    DWORD PTR [ebx],edx
  427b86:	or     al,BYTE PTR [esi+0x31df77cc]
  427b8c:	cmc    
  427b8d:	mov    ds:0xa9a6c6d8,al
  427b92:	mov    ah,0x15
  427b94:	push   esp
  427b95:	lds    esi,FWORD PTR [eax+esi*8]
  427b98:	out    dx,al
  427b99:	xchg   esp,eax
  427b9a:	mov    ah,0x98
  427b9c:	pop    ebp
  427b9d:	outs   dx,DWORD PTR ds:[esi]
  427b9e:	rcr    DWORD PTR [edx-0x24],1
  427ba1:	adc    ah,BYTE PTR [ebx]
  427ba3:	lock stc 
  427ba5:	mov    ch,0x9c
  427ba7:	dec    edi
  427ba8:	(bad)  
  427ba9:	(bad)  
  427baa:	call   0xbc0eff21
  427baf:	dec    ebx
  427bb0:	fcmovnu st,st(3)
  427bb2:	inc    edi
  427bb3:	int    0xbc
  427bb5:	aad    0xcc
  427bb7:	sub    ecx,eax
  427bb9:	ret    0x94ed
  427bbc:	fcom   QWORD PTR [edx+0x54]
  427bbf:	addr16 jns 0x427b48
  427bc2:	and    bl,0xee
  427bc5:	mov    WORD PTR [ecx+0xe],?
  427bc8:	push   ss
  427bc9:	mov    esi,ecx
  427bcb:	jl     0x427bc3
  427bcd:	add    BYTE PTR [eax],al
  427bcf:	add    BYTE PTR [eax],al
  427bd1:	add    BYTE PTR [edi-0xa],dh
  427bd4:	push   ecx
  427bd5:	dec    edi
  427bd6:	shr    edi,1
  427bd8:	jg     0x427bd8
  427bda:	push   cs
  427bdb:	mov    edi,0xc518e2d0
  427be0:	cli    
  427be1:	xor    al,BYTE PTR [edi-0xcfffe0d]
  427be7:	add    al,0x0
  427be9:	add    BYTE PTR [edi-0x34],cl
  427bec:	enter  0xffdb,0x5e
  427bf0:	pop    es
  427bf1:	inc    ebx
  427bf2:	mov    ecx,0x227afc72
  427bf7:	ror    BYTE PTR [edi-0x25b7b038],1
  427bfd:	inc    ebp
  427bfe:	icebp  
  427bff:	dec    edi
  427c00:	or     DWORD PTR [esi+eiz*4-0xf],ebp
  427c04:	mov    al,0x19
  427c06:	shr    BYTE PTR [eax+0x12],1
  427c09:	xor    al,0x9a
  427c0b:	add    BYTE PTR [esi+0x1176d00],bl
  427c11:	sbb    BYTE PTR [ebx],ah
  427c13:	inc    edx
  427c14:	stos   DWORD PTR es:[edi],eax
  427c15:	inc    ecx
  427c16:	inc    esi
  427c17:	push   ebp
  427c18:	cmp    DWORD PTR [edi],esi
  427c1a:	cmp    DWORD PTR [edx+ecx*4+0x76676c9c],edx
  427c21:	into   
  427c22:	cmc    
  427c23:	push   edx
  427c24:	shl    DWORD PTR ds:0x39253bd8,1
  427c2a:	mov    ebp,0xd183544d
  427c2f:	gs add al,0x54
  427c32:	pop    ss
  427c33:	dec    eax
  427c34:	xchg   edx,eax
  427c35:	add    bh,bh
  427c37:	sub    esp,DWORD PTR ds:[ecx+0x75582ebe]
  427c3e:	test   BYTE PTR [eax+0x7fd3be90],dl
  427c44:	or     DWORD PTR [ecx],edi
  427c46:	or     ecx,0xfffffff2
  427c49:	add    ch,0xde
  427c4c:	xchg   edx,eax
  427c4d:	fdiv   QWORD PTR [ecx]
  427c4f:	xor    al,0xb0
  427c51:	mov    esi,DWORD PTR ds:0xcc535273
  427c57:	xor    esp,ebx
  427c59:	and    dh,BYTE PTR [ecx+0x757713df]
  427c5f:	pop    ebp
  427c60:	leave  
  427c61:	adc    al,0x35
  427c63:	fcmovbe st,st(2)
  427c65:	xlat   BYTE PTR ds:[ebx]
  427c66:	jmp    0x73cd:0x5d26ef92
  427c6d:	scas   eax,DWORD PTR es:[edi]
  427c6e:	push   ebx
  427c6f:	aas    
  427c70:	xchg   BYTE PTR [ebx+edx*8],al
  427c73:	and    DWORD PTR [ebx],esp
  427c75:	pop    ebx
  427c76:	in     eax,dx
  427c77:	outs   dx,DWORD PTR ds:[esi]
  427c78:	mov    eax,0x9fc43560
  427c7d:	mov    bl,0x6e
  427c7f:	ficom  DWORD PTR [ecx+0x3b8aa3bd]
  427c85:	adc    al,0x5d
  427c87:	add    DWORD PTR [ebx],esp
  427c89:	and    DWORD PTR ds:[ebp+ebp*8+0x7f],edi
  427c8e:	cmp    edi,DWORD PTR [ebp-0x142a1961]
  427c94:	cmp    cl,al
  427c96:	or     DWORD PTR [esi-0x40],ebx
  427c99:	dec    eax
  427c9a:	sbb    DWORD PTR [ebx+0x7b],0x23af5191
  427ca1:	mov    eax,0x7c3ddb89
  427ca6:	fwait
  427ca7:	add    eax,0x66aeeb53
  427cac:	ret    
  427cad:	gs jmp 0xd58d79d8
  427cb3:	das    
  427cb4:	sbb    WORD PTR [esi],dx
  427cb7:	jno    0x427c4a
  427cb9:	adc    edx,0xffffffa7
  427cbc:	mov    ebp,0x30df7d6c
  427cc1:	loopne 0x427c4a
  427cc3:	test   DWORD PTR [ebx-0x39f2b552],0x219118b4
  427ccd:	dec    ecx
  427cce:	xor    BYTE PTR [ecx-0x7c],ch
  427cd1:	lahf   
  427cd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427cd3:	sar    DWORD PTR [eax],cl
  427cd5:	gs gs lock aas 
  427cd9:	call   0xeb6e:0xbd6ee175
  427ce0:	or     dh,BYTE PTR ds:0x7a793fea
  427ce6:	mov    ebx,0xdd1fcbb2
  427ceb:	lock (bad) 
  427ced:	add    esi,DWORD PTR [edx+ebp*8-0x2d0a44cd]
  427cf4:	lods   eax,DWORD PTR ds:[esi]
  427cf5:	adc    eax,edi
  427cf7:	mov    ds:0x9dbe5e06,eax
  427cfc:	and    DWORD PTR [edx-0x683f72e2],edi
  427d02:	cmp    eax,DWORD PTR [ebx-0x33]
  427d05:	mov    ebx,0xaa644287
  427d0a:	xchg   edi,eax
  427d0b:	mov    eax,0xf0c3429e
  427d10:	pusha  
  427d11:	pop    ecx
  427d12:	fwait
  427d13:	pop    eax
  427d14:	jp     0x427d8d
  427d16:	sbb    cl,BYTE PTR ds:0x73d4affc
  427d1c:	lods   eax,DWORD PTR ds:[esi]
  427d1d:	test   ebx,ebx
  427d1f:	shr    DWORD PTR ds:0xd8d81775,0xe0
  427d26:	pushf  
  427d27:	pusha  
  427d28:	(bad)  
  427d29:	sub    edi,edx
  427d2b:	xor    bl,BYTE PTR [edi-0x9]
  427d2e:	xchg   BYTE PTR [esi+edx*8-0x64],al
  427d32:	adc    dl,BYTE PTR [ebx+0x47017ae3]
  427d38:	xor    edi,ecx
  427d3a:	int    0x8d
  427d3c:	pop    esi
  427d3d:	inc    eax
  427d3e:	pop    ds
  427d3f:	(bad)  
  427d40:	push   ds
  427d41:	cdq    
  427d42:	sbb    ebp,0xffffff87
  427d45:	fisubr DWORD PTR [eax]
  427d47:	sbb    edx,DWORD PTR cs:[edx-0x55]
  427d4b:	add    ch,BYTE PTR [edi-0x3d]
  427d4e:	jg     0x427d4b
  427d50:	nop
  427d51:	sahf   
  427d52:	or     DWORD PTR [esp+eax*8],ebp
  427d55:	imul   ebp,DWORD PTR [esi],0xffffff85
  427d58:	int3   
  427d59:	cwde   
  427d5a:	mov    ds:0x9f3765ab,eax
  427d5f:	adc    ecx,ecx
  427d61:	pop    ebx
  427d62:	cmp    BYTE PTR [esi-0x26],al
  427d65:	cmp    al,0x89
  427d67:	jnp    0x427d75
  427d69:	mov    ds:0x5e9c540a,al
  427d6e:	push   cs
  427d6f:	pushf  
  427d70:	mov    ecx,0x2d112f65
  427d75:	mov    esp,0x5f0a24b
  427d7a:	test   BYTE PTR [ebx],al
  427d7c:	pop    esi
  427d7d:	leave  
  427d7e:	xchg   DWORD PTR [edi+0x14],edi
  427d81:	fs stc 
  427d83:	loope  0x427d3e
  427d85:	lods   eax,DWORD PTR ds:[esi]
  427d86:	push   ebp
  427d87:	jne    0x427d69
  427d89:	cdq    
  427d8a:	cmp    BYTE PTR [esi-0x21fd786],cl
  427d90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d91:	fisub  WORD PTR [ecx]
  427d93:	pop    edi
  427d94:	ffreep st(7)
  427d96:	icebp  
  427d97:	cs int3 
  427d99:	pop    edi
  427d9a:	xlat   BYTE PTR ds:[ebx]
  427d9b:	cmc    
  427d9c:	xchg   ecx,eax
  427d9d:	adc    DWORD PTR [edi+0x5],ebx
  427da0:	fs cmp eax,0x304ff51
  427da6:	dec    esp
  427da7:	add    ch,BYTE PTR [edi]
  427da9:	lahf   
  427daa:	out    dx,al
  427dab:	ds and eax,0xa835cb53
  427db1:	js     0x427e27
  427db3:	add    DWORD PTR [edx-0x446733cb],0xd8d0ab3b
  427dbd:	in     al,dx
  427dbe:	mov    ah,BYTE PTR [ecx-0x55]
  427dc1:	push   0xffffffd4
  427dc3:	dec    BYTE PTR [ebx]
  427dc5:	dec    esi
  427dc6:	gs pop esp
  427dc8:	and    al,0xc1
  427dca:	dec    edi
  427dcb:	icebp  
  427dcc:	lods   al,BYTE PTR ds:[esi]
  427dcd:	jmp    0xaa0725c2
  427dd2:	ja     0x427e4d
  427dd4:	xor    eax,0xd7c92a2
  427dd9:	dec    ebx
  427dda:	xchg   edi,eax
  427ddb:	stos   DWORD PTR es:[edi],eax
  427ddc:	call   0xf3c9:0x44d52d24
  427de3:	xchg   esi,eax
  427de4:	dec    esp
  427de5:	add    ebp,DWORD PTR [ecx-0x40c6f42e]
  427deb:	and    bh,BYTE PTR [esp+ebp*1-0xd5fc87e]
  427df2:	pop    esp
  427df3:	push   0x56
  427df5:	xchg   edi,eax
  427df6:	xchg   edi,eax
  427df7:	ss sbb eax,0x80db14ca
  427dfd:	pop    ebx
  427dfe:	xor    edx,DWORD PTR [ecx-0x10cc30ad]
  427e04:	inc    esp
  427e05:	call   0xa7bf:0x344ff73e
  427e0c:	xchg   edi,eax
  427e0d:	int3   
  427e0e:	fld    QWORD PTR [edi]
  427e10:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  427e12:	mov    ch,0x70
  427e14:	(bad)  [ebx-0x7d]
  427e17:	dec    ecx
  427e18:	mov    dl,0x15
  427e1a:	outs   dx,BYTE PTR ds:[esi]
  427e1b:	pop    ecx
  427e1c:	loop   0x427e3d
  427e1e:	clc    
  427e1f:	mov    al,0x8d
  427e21:	popa   
  427e22:	push   0x258e6fde
  427e27:	xchg   edx,eax
  427e28:	jl     0x427e10
  427e2a:	fstp   QWORD PTR [eax+edx*1+0x769b3949]
  427e31:	js     0x427e79
  427e33:	fst    st(5)
  427e35:	jl     0x427e0f
  427e37:	pop    ds
  427e38:	test   al,0x65
  427e3a:	sbb    DWORD PTR [esi+edx*8-0x1c4e846d],edi
  427e41:	lock test cl,bh
  427e44:	ins    DWORD PTR es:[edi],dx
  427e45:	push   0x330fb41d
  427e4a:	fstp   st(7)
  427e4c:	xor    al,BYTE PTR [edx+0x8aad05f]
  427e52:	icebp  
  427e53:	ins    BYTE PTR es:[edi],dx
  427e54:	jbe    0x427e94
  427e56:	inc    esi
  427e57:	ror    DWORD PTR [ebp-0x4c6ae322],1
  427e5d:	pop    ebp
  427e5e:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  427e60:	mov    ah,0x3f
  427e62:	into   
  427e63:	popa   
  427e64:	xchg   DWORD PTR [edi],edi
  427e66:	adc    eax,0xd7ec2680
  427e6b:	pop    ebp
  427e6c:	repz in al,dx
  427e6e:	inc    edx
  427e6f:	jb     0x427e4e
  427e71:	and    al,0x74
  427e73:	mov    bh,0x87
  427e75:	push   esi
  427e76:	int    0xf7
  427e78:	adc    esi,DWORD PTR [edx]
  427e7a:	mov    edx,0xfdde3135
  427e7f:	pop    fs
  427e81:	pop    ebx
  427e82:	mov    dl,0x40
  427e84:	pop    ebx
  427e85:	dec    edx
  427e86:	push   cs
  427e87:	and    al,0x55
  427e89:	sub    eax,0x8d44d856
  427e8e:	enter  0x4e5a,0x9e
  427e92:	mov    bl,0x23
  427e94:	jns    0x427e32
  427e96:	fist   WORD PTR [edi-0x7d]
  427e99:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  427e9b:	loope  0x427ece
  427e9d:	out    dx,al
  427e9e:	jne    0x427eca
  427ea0:	and    DWORD PTR [ecx+0x31739cbc],eax
  427ea6:	(bad)  
  427ea7:	(bad)  
  427ea9:	sbb    ch,BYTE PTR [ecx+ebp*4+0x77868d46]
  427eb0:	and    DWORD PTR ds:0x2a237d57,eax
  427eb6:	mov    ds:0xbb4cb008,al
  427ebb:	xchg   ecx,eax
  427ebc:	fwait
  427ebd:	shl    DWORD PTR [ebp+0x2fb302ea],0xdb
  427ec4:	outs   dx,DWORD PTR ds:[esi]
  427ec5:	loop   0x427e7b
  427ec7:	mov    cl,0xb4
  427ec9:	cdq    
  427eca:	shl    BYTE PTR ds:0x5782882a,1
  427ed0:	ins    DWORD PTR es:[edi],dx
  427ed1:	cmp    al,0xbb
  427ed3:	aas    
  427ed4:	sub    esi,esp
  427ed6:	sbb    al,0xe6
  427ed8:	icebp  
  427ed9:	jno    0x427eec
  427edb:	cmp    eax,0x19697986
  427ee0:	mov    ch,0x31
  427ee2:	sub    al,0x91
  427ee4:	outs   dx,BYTE PTR ds:[esi]
  427ee5:	add    eax,0xe8d4991
  427eea:	or     ch,BYTE PTR [edx-0x10]
  427eed:	jo     0x427f02
  427eef:	es jle 0x427e99
  427ef2:	rol    al,cl
  427ef4:	jo     0x427ebe
  427ef6:	ret    
  427ef7:	mov    edx,0xe3557763
  427efc:	xchg   DWORD PTR ds:0xc90b63b9,edi
  427f02:	mov    ds:0xfe5b8f17,eax
  427f07:	hlt    
  427f08:	in     al,dx
  427f09:	jmp    0xd3fca3b9
  427f0e:	sub    DWORD PTR [eax+0x2243b5d3],ecx
  427f14:	cwde   
  427f15:	and    ecx,ecx
  427f17:	or     al,0x33
  427f19:	jo     0x427f3a
  427f1b:	xor    esp,ebp
  427f1d:	int    0xb6
  427f1f:	dec    esi
  427f20:	sahf   
  427f21:	pop    ecx
  427f22:	(bad)  
  427f23:	pop    ebp
  427f24:	or     eax,edx
  427f26:	addr16 loop 0x427ec0
  427f29:	sub    eax,0x2983fb01
  427f2e:	add    eax,0xdca514d8
  427f33:	mov    eax,ds:0xcdde15ac
  427f38:	dec    ebx
  427f39:	mov    ecx,0xd4e57d4a
  427f3e:	leave  
  427f3f:	hlt    
  427f40:	mov    eax,ds:0x31851f1a
  427f45:	mov    DWORD PTR [ecx-0x7c3d7113],esi
  427f4b:	not    BYTE PTR [esi-0x8f05a43]
  427f51:	fwait
  427f52:	ins    BYTE PTR es:[edi],dx
  427f53:	inc    ebx
  427f54:	or     BYTE PTR [ebx+0x1b],ch
  427f57:	cld    
  427f58:	mov    bh,0xa3
  427f5a:	mov    esi,0xefe558ba
  427f5f:	pop    edx
  427f60:	dec    ecx
  427f61:	aad    0xf4
  427f63:	and    cl,0xcf
  427f66:	mov    eax,ds:0xa25984f0
  427f6b:	push   ebp
  427f6c:	xor    BYTE PTR [ebp-0x79],0xf
  427f70:	mov    ebx,0x496210b4
  427f75:	imul   ebx,edx,0xcaa975b5
  427f7b:	jmp    0x4913:0x2a4c7514
  427f82:	aas    
  427f83:	ror    BYTE PTR [eax+0x3b],1
  427f86:	push   edi
  427f87:	aam    0x79
  427f89:	cmp    al,0xb
  427f8b:	cmp    DWORD PTR [edi],ebp
  427f8d:	inc    edx
  427f8e:	idiv   BYTE PTR [eax+ebp*2]
  427f91:	jne    0x427f1d
  427f93:	xchg   ecx,eax
  427f94:	stc    
  427f95:	jno    0x427fb2
  427f97:	xor    eax,0x1d4c3bd7
  427f9c:	shl    DWORD PTR [ebx],1
  427f9e:	lock xchg esi,eax
  427fa0:	nop
  427fa1:	adc    ebx,ebx
  427fa3:	cs jle 0x427f77
  427fa6:	mov    esi,0x60a6c355
  427fab:	inc    esp
  427fac:	pop    ecx
  427fad:	sbb    BYTE PTR [edx+0x3ba3fe4],cl
  427fb3:	bound  esp,QWORD PTR [ecx+0x5e453a6]
  427fb9:	imul   esp,DWORD PTR [ecx],0x60
  427fbc:	push   0x6b82a153
  427fc1:	(bad)  
  427fc2:	cld    
  427fc3:	mov    eax,0x957b33b4
  427fc8:	adc    edi,esi
  427fca:	in     eax,0x2
  427fcc:	dec    esp
  427fcd:	rcl    BYTE PTR [ebx-0x175bafab],0xd4
  427fd4:	mov    al,0xa7
  427fd6:	pmaxsw mm1,QWORD PTR [eax+0x72e0905a]
  427fdd:	sbb    ebx,DWORD PTR es:[ebp-0x7e]
  427fe1:	xchg   edx,eax
  427fe2:	jl     0x427fee
  427fe4:	sahf   
  427fe5:	jmp    0x1c4cf61c
  427fea:	loopne 0x427fb9
  427fec:	je     0x428007
  427fee:	sbb    al,0xba
  427ff0:	xchg   ebp,eax
  427ff1:	mov    al,0xa4
  427ff3:	pop    eax
  427ff4:	jmp    0x2c7c70f4
  427ff9:	mov    ds:0xd832c026,al
  427ffe:	cli    
  427fff:	push   es
  428000:	cmc    
  428001:	(bad)
  428004:	rcr    DWORD PTR [esi+0x23bd749d],1
  42800a:	es sbb eax,0x1b06d79b
  428010:	xlat   BYTE PTR ds:[ebx]
  428011:	mov    al,ds:0xb48a5e4
  428016:	test   al,0x29
  428018:	mov    eax,ds:0x149cd457
  42801d:	cmp    eax,0xd6651a7b
  428022:	test   DWORD PTR [eax+ebx*2+0x1109df5f],esp
  428029:	daa    
  42802a:	jmp    0x266dc0e7
  42802f:	(bad)  
  428030:	ins    DWORD PTR es:[edi],dx
  428031:	dec    esp
  428032:	and    eax,0x474a50d0
  428037:	in     eax,dx
  428038:	loopne 0x428047
  42803a:	idiv   DWORD PTR [edi-0x5c]
  42803d:	pop    eax
  42803e:	jo     0x428049
  428040:	test   BYTE PTR [ebp+0x1],ch
  428043:	jg     0x428075
  428045:	jnp    0x428058
  428047:	inc    ebx
  428048:	loopne 0x42806f
  42804a:	mov    ebp,DWORD PTR [ecx+0x3cc1210f]
  428050:	call   0xeeb0:0x828191f6
  428057:	cmp    ebp,ebp
  428059:	or     al,0x91
  42805b:	test   eax,edi
  42805d:	add    al,0x6e
  42805f:	int3   
  428060:	jg     0x428028
  428062:	in     eax,dx
  428063:	in     al,dx
  428064:	js     0x428011
  428066:	jg     0x428070
  428068:	jp     0x427ffc
  42806a:	sbb    al,0xb2
  42806c:	mov    ebx,0x1e02c545
  428071:	mov    cl,0x40
  428073:	loopne 0x428015
  428075:	xor    esi,DWORD PTR [ebx-0x75f2619b]
  42807b:	gs js  0x42804b
  42807e:	aam    0xec
  428080:	(bad)  
  428081:	popf   
  428082:	mov    bh,0xd
  428084:	test   al,0x17
  428086:	mov    esi,0x8e8cbe70
  42808b:	jae    0x4280e4
  42808d:	push   cs
  42808e:	inc    ecx
  42808f:	pop    edi
  428090:	fidiv  DWORD PTR [esp+ebx*1+0x25]
  428094:	jae    0x4280cf
  428096:	mov    edi,0xcf729010
  42809b:	cli    
  42809c:	add    cl,BYTE PTR [ebx+0x20]
  42809f:	fcmovb st,st(2)
  4280a1:	push   cs
  4280a2:	aad    0xec
  4280a4:	out    dx,al
  4280a5:	into   
  4280a6:	loop   0x4280bf
  4280a8:	or     BYTE PTR [ecx+ecx*2],al
  4280ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280ac:	pop    ebx
  4280ad:	repz rcl ah,1
  4280b0:	pop    ebp
  4280b1:	fistp  WORD PTR [esp+edx*4]
  4280b4:	loope  0x4280c4
  4280b6:	push   ds
  4280b7:	jnp    0x42804b
  4280b9:	push   edi
  4280ba:	or     al,0x7d
  4280bc:	sar    dl,cl
  4280be:	dec    DWORD PTR [esi-0x26c608cd]
  4280c4:	xchg   esi,eax
  4280c5:	sub    eax,DWORD PTR ds:0x5dcd2199
  4280cb:	bound  eax,QWORD PTR [eax]
  4280cd:	xchg   BYTE PTR [ecx+ebx*2+0x1c314334],dl
  4280d4:	fadd   QWORD PTR [ebp+0x1355ec5f]
  4280da:	stc    
  4280db:	push   ecx
  4280dc:	pop    edx
  4280dd:	add    BYTE PTR [eax],al
  4280df:	add    BYTE PTR [eax],al
  4280e1:	add    dh,al
  4280e3:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4280e5:	push   eax
  4280e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280e7:	shl    bh,cl
  4280e9:	div    DWORD PTR [ebx-0x70d89742]
  4280ef:	and    BYTE PTR [ebp+0x1f87afe],0x0
  4280f6:	repz add al,0x0
  4280f9:	add    BYTE PTR [ebx-0x3ea0b879],cl
  4280ff:	sub    DWORD PTR [ebx-0x22],0x2b
  428103:	call   0xf8eb4e24
  428108:	cmp    BYTE PTR [ecx+0x776a7fa7],cl
  42810e:	sub    al,0x25
  428110:	push   es
  428111:	cmp    dl,BYTE PTR [edi-0x46]
  428114:	cwde   
  428115:	xor    DWORD PTR [ebx-0x7370502c],0xd87d825
  42811f:	loopne 0x4280c0
  428121:	daa    
  428122:	daa    
  428123:	push   ds
  428124:	sbb    BYTE PTR [eax+ecx*4],ah
  428127:	sbb    al,cl
  428129:	xlat   BYTE PTR ds:[ebx]
  42812a:	lock in al,dx
  42812c:	or     ebx,DWORD PTR cs:[esi]
  42812f:	and    BYTE PTR [eax+0x32],bh
  428132:	sub    BYTE PTR [eax-0x75],bh
  428135:	aaa    
  428136:	mov    dl,0x2b
  428138:	hlt    
  428139:	adc    eax,0x4c97e3eb
  42813e:	jge    0x4281af
  428140:	addr16 fs loope 0x4280dd
  428144:	icebp  
  428145:	push   0xffffffd0
  428147:	sub    DWORD PTR [esp+ebx*4],0xbfb5739e
  42814e:	loopne 0x4280d5
  428150:	stos   DWORD PTR es:[edi],eax
  428151:	sar    DWORD PTR [ecx],1
  428153:	cmp    DWORD PTR [ebp-0x29],ebx
  428156:	xchg   WORD PTR gs:[ecx],cx
  42815a:	(bad)  
  42815b:	mov    edi,0x3a14500d
  428160:	mov    bh,0x7f
  428162:	mov    eax,0x7f395854
  428167:	jbe    0x428181
  428169:	push   edi
  42816a:	push   esp
  42816b:	mov    ds:0x1533da6e,eax
  428170:	xor    eax,0xce0980e0
  428175:	fisubr WORD PTR [ebp+0x70549c8b]
  42817b:	cdq    
  42817c:	jno    0x4281a0
  42817e:	push   eax
  42817f:	mov    ds:0x586adc88,al
  428184:	nop
  428185:	dec    ecx
  428186:	rcr    DWORD PTR [edx-0x6bfa28c8],0xd
  42818d:	add    al,0x6c
  42818f:	ret    0x5cf5
  428192:	add    eax,0xe02c37a6
  428197:	dec    ebp
  428198:	adc    eax,0xc105f726
  42819d:	mov    al,ds:0x8486baf4
  4281a2:	sub    eax,0x1ed3077e
  4281a7:	fmul   DWORD PTR [eax-0x11]
  4281aa:	enter  0x6496,0xd
  4281ae:	out    0x27,al
  4281b0:	pop    esi
  4281b1:	rcr    DWORD PTR [ebp+0x41],0x9e
  4281b5:	jb     0x42816f
  4281b7:	dec    ecx
  4281b8:	mov    ebx,0xc8446358
  4281bd:	ins    DWORD PTR es:[edi],dx
  4281be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4281bf:	icebp  
  4281c0:	call   0x45fbd79a
  4281c5:	or     ah,dh
  4281c7:	shl    DWORD PTR [edx+0x37],1
  4281ca:	aam    0x73
  4281cc:	jle    0x42820c
  4281ce:	lock jmp 0x38bb:0x1f560e73
  4281d6:	lods   eax,DWORD PTR ds:[esi]
  4281d7:	push   edx
  4281d8:	cmc    
  4281d9:	loopne 0x4281d0
  4281db:	(bad)  
  4281dc:	call   0x8d73cdd1
  4281e1:	add    edi,DWORD PTR [ebx-0x5c]
  4281e4:	call   0xe8bfb689
  4281e9:	test   DWORD PTR [edx+0x70b71314],edx
  4281ef:	jl     0x428229
  4281f1:	or     ebx,ecx
  4281f3:	shl    DWORD PTR [ebx+0xf],cl
  4281f6:	enter  0xdd4b,0x13
  4281fa:	loopne 0x428261
  4281fc:	dec    eax
  4281fd:	xor    ah,ah
  4281ff:	lock mov ds:0x2308263c,eax
  428205:	aad    0x67
  428207:	mov    dl,0xb4
  428209:	retf   0xa8a4
  42820c:	jo     0x4281c6
  42820e:	retf   0x5b77
  428211:	int    0x3e
  428213:	test   edi,edi
  428215:	add    bh,0xbb
  428218:	leave  
  428219:	add    dh,BYTE PTR [esi]
  42821b:	xor    edx,DWORD PTR [ecx+0x5600b1fe]
  428221:	jmp    0x42821d
  428223:	das    
  428224:	dec    eax
  428225:	loopne 0x4281d0
  428227:	pop    ecx
  428228:	pop    edx
  428229:	lods   eax,DWORD PTR ds:[esi]
  42822a:	dec    ecx
  42822b:	das    
  42822c:	or     ebp,ebp
  42822e:	sbb    al,0xad
  428230:	pushf  
  428231:	popf   
  428232:	sbb    bl,BYTE PTR [ebp+0x63]
  428235:	lahf   
  428236:	mov    eax,ds:0xddb56b36
  42823b:	stos   BYTE PTR es:[edi],al
  42823c:	xor    DWORD PTR [ecx-0x1e81b56b],ebx
  428242:	je     0x4281fe
  428244:	call   0x42316c8b
  428249:	adc    al,0x6e
  42824b:	xor    ecx,DWORD PTR [edi]
  42824d:	scas   al,BYTE PTR es:[edi]
  42824e:	ds mov ebx,0x15fe22ab
  428254:	cmp    ah,BYTE PTR [ecx-0x28b9bc33]
  42825a:	and    BYTE PTR [eax-0x31],al
  42825d:	mov    al,ds:0x7079396e
  428262:	cmp    ah,0x3a
  428265:	jecxz  0x428222
  428267:	mov    bl,0xc0
  428269:	mov    dl,0x6e
  42826b:	xor    eax,0x2ba0aedb
  428270:	mov    cs,ebp
  428272:	outs   dx,DWORD PTR ds:[esi]
  428273:	stc    
  428274:	int    0xa0
  428276:	popf   
  428277:	int3   
  428278:	mov    BYTE PTR [edi-0x19],0xab
  42827c:	and    DWORD PTR [eax-0x12],esp
  42827f:	cmc    
  428280:	ret    
  428281:	mov    ebp,0xda0505da
  428286:	ficom  DWORD PTR [ebx-0x6f]
  428289:	outs   dx,DWORD PTR ds:[esi]
  42828a:	lods   eax,DWORD PTR ds:[esi]
  42828b:	enter  0x57cd,0xcf
  42828f:	mov    eax,ds:0x757c00b8
  428294:	push   ebx
  428295:	sub    BYTE PTR [edx+esi*2],dl
  428298:	pop    edi
  428299:	add    eax,0x640662a7
  42829e:	int3   
  42829f:	pop    edi
  4282a0:	in     eax,dx
  4282a1:	mul    DWORD PTR [ebp+0x6277650]
  4282a7:	iret   
  4282a8:	loopne 0x428303
  4282aa:	imul   esi,DWORD PTR [edi],0xcf861b0a
  4282b0:	mov    dh,0x15
  4282b2:	stc    
  4282b3:	pop    edx
  4282b4:	inc    esp
  4282b5:	mov    bl,bl
  4282b7:	mov    edx,0xd4399472
  4282bc:	ins    BYTE PTR es:[edi],dx
  4282bd:	enter  0x5c2e,0x6c
  4282c1:	ret    0x9568
  4282c4:	outs   dx,BYTE PTR ds:[esi]
  4282c5:	aad    0x21
  4282c7:	rcl    DWORD PTR [esi-0x2f227d2c],0x87
  4282ce:	ss mov dl,0xe0
  4282d1:	retf   
  4282d2:	cwde   
  4282d3:	cmc    
  4282d4:	mov    ds:0x3015f333,al
  4282d9:	dec    ebp
  4282da:	arpl   WORD PTR [ebx+edx*8+0x3f],sp
  4282de:	ss nop
  4282e0:	sbb    dl,cl
  4282e2:	mov    ax,0xb87
  4282e6:	inc    edx
  4282e7:	lds    eax,FWORD PTR [edx+0x52]
  4282ea:	mov    DWORD PTR [ecx+esi*1-0x11588bf2],edx
  4282f1:	leave  
  4282f2:	add    DWORD PTR [ebx-0x57130369],edi
  4282f8:	mov    ecx,0xb3a904ba
  4282fd:	cmp    al,0xca
  4282ff:	adc    DWORD PTR [ebp-0x20f8ef68],ebp
  428305:	pop    ecx
  428306:	ins    DWORD PTR es:[edi],dx
  428307:	adc    DWORD PTR [eax+0x62],esp
  42830a:	ins    DWORD PTR es:[edi],dx
  42830b:	pushf  
  42830c:	jge    0x4282a2
  42830e:	mov    edx,eax
  428310:	ins    DWORD PTR es:[edi],dx
  428311:	add    edx,ebx
  428313:	les    esi,FWORD PTR [edi+0x6f]
  428316:	adc    edi,DWORD PTR [ecx+0x262e8eee]
  42831c:	(bad)  
  42831e:	popa   
  42831f:	or     eax,DWORD PTR [edx]
  428321:	xor    eax,DWORD PTR [edx+edi*8]
  428324:	mov    edi,ebp
  428326:	jo     0x428357
  428328:	js     0x428372
  42832a:	out    0x78,al
  42832c:	mov    bh,0x7f
  42832e:	inc    ecx
  42832f:	add    eax,0xfa2965b8
  428334:	dec    edi
  428335:	data16 mov al,ds:0x79efa6d1
  42833b:	jne    0x428301
  42833d:	lods   al,BYTE PTR ds:[esi]
  42833e:	mov    eax,ds:0x10bab61b
  428343:	push   esp
  428344:	jecxz  0x4282f2
  428346:	mov    ch,0x3d
  428348:	dec    esi
  428349:	dec    ebp
  42834a:	daa    
  42834b:	scas   eax,DWORD PTR es:[edi]
  42834c:	(bad)  
  42834d:	xadd   ebx,eax
  428350:	pop    es
  428351:	push   ds
  428352:	or     ebx,ecx
  428354:	sti    
  428355:	jns    0x42838e
  428357:	mov    ah,0x1a
  428359:	adc    ebx,DWORD PTR [edi]
  42835b:	fcmovne st,st(1)
  42835d:	mov    edi,0x80c2efa7
  428362:	das    
  428363:	cdq    
  428364:	inc    ebx
  428365:	cwde   
  428366:	rcl    DWORD PTR [ebx-0x6767ed2c],1
  42836c:	push   0x3c9cb5f8
  428371:	retf   0x5810
  428374:	(bad)  
  428376:	mov    eax,DWORD PTR [ebp-0x50]
  428379:	mov    dh,0x9e
  42837b:	js     0x4283a1
  42837d:	xchg   edx,eax
  42837e:	push   esi
  42837f:	adc    al,dh
  428381:	xchg   ebp,eax
  428382:	sbb    eax,DWORD PTR [esi+0x2cfaa99a]
  428388:	test   al,0x26
  42838a:	mov    dl,0xf8
  42838c:	aad    0xa3
  42838e:	leave  
  42838f:	out    dx,al
  428390:	push   0xffffffb9
  428392:	arpl   WORD PTR [esi-0x67],bx
  428395:	and    eax,0x2f7dc6db
  42839a:	outs   dx,DWORD PTR ds:[esi]
  42839b:	inc    esi
  42839c:	aas    
  42839d:	mov    ss,WORD PTR [ecx]
  42839f:	cld    
  4283a0:	add    bl,dh
  4283a2:	mov    edx,0x5b5f239c
  4283a7:	adc    ebx,DWORD PTR [esp+ecx*8-0x6a]
  4283ab:	loopne 0x428354
  4283ad:	jnp    0x4283c9
  4283af:	cmp    esi,DWORD PTR [ecx+0x2d3aeaa5]
  4283b5:	push   esp
  4283b6:	pop    esp
  4283b7:	or     al,0xed
  4283b9:	mov    esp,DWORD PTR [eax+0x7ab908ba]
  4283bf:	push   eax
  4283c0:	fild   QWORD PTR [edi+0x43]
  4283c3:	ds cmp al,0xf1
  4283c6:	inc    bp
  4283c8:	xlat   BYTE PTR ds:[ebx]
  4283c9:	dec    ecx
  4283ca:	rol    BYTE PTR [ebp+0x4a],cl
  4283cd:	shr    BYTE PTR [edi+0x279c3238],cl
  4283d3:	sti    
  4283d4:	cmc    
  4283d5:	call   0x1919:0xa2dea919
  4283dc:	dec    esi
  4283dd:	mov    ecx,0xef8c3383
  4283e2:	and    bl,BYTE PTR [edx]
  4283e4:	pop    ds
  4283e5:	push   cs
  4283e6:	xchg   edi,eax
  4283e7:	cs std 
  4283e9:	fldenv [ebx]
  4283eb:	cmp    eax,0xff6d36e8
  4283f0:	cmp    al,0xa1
  4283f2:	jb     0x42846e
  4283f4:	ret    0x457b
  4283f7:	mov    dh,0xe7
  4283f9:	scas   al,BYTE PTR es:[edi]
  4283fa:	xchg   esp,eax
  4283fb:	stos   DWORD PTR es:[edi],eax
  4283fc:	gs inc ebx
  4283fe:	iret   
  4283ff:	(bad)  
  428400:	jb     0x428393
  428402:	fnsave [eax+eiz*8-0x7878b5d7]
  428409:	push   esp
  42840a:	sbb    eax,0xb590b421
  42840f:	jbe    0x4283b6
  428411:	xchg   ebp,eax
  428412:	into   
  428413:	ret    
  428414:	in     al,0xa1
  428416:	adc    ecx,esi
  428418:	inc    edi
  428419:	rcr    BYTE PTR [edx-0x341a983e],cl
  42841f:	aam    0xfe
  428421:	pop    ebp
  428422:	pop    eax
  428423:	cwde   
  428424:	inc    ecx
  428425:	jo     0x428429
  428427:	hlt    
  428428:	sti    
  428429:	or     al,0x8f
  42842b:	pop    es
  42842c:	xlat   BYTE PTR ds:[ebx]
  42842d:	cmp    eax,0x68c15bf2
  428432:	ja     0x4283e7
  428434:	jnp    0x42845a
  428436:	xor    eax,0x3af1389f
  42843b:	adc    eax,0xfd7dec9c
  428440:	(bad)  
  428442:	shr    BYTE PTR [edi-0x2f],0x17
  428446:	in     al,dx
  428447:	push   cs
  428448:	fstp   TBYTE PTR [edi]
  42844a:	add    edx,edx
  42844c:	mov    esi,0x74e58a02
  428451:	dec    ecx
  428452:	outs   dx,BYTE PTR ds:[esi]
  428453:	cld    
  428454:	jno    0x428416
  428456:	adc    cl,BYTE PTR [esi-0x163bbb4f]
  42845c:	push   eax
  42845d:	shl    ebp,0x9a
  428460:	ret    
  428461:	xlat   BYTE PTR ds:[bx]
  428463:	mov    ds:0xbc365852,eax
  428468:	xchg   esi,eax
  428469:	mov    eax,0xa58fb124
  42846e:	xchg   esi,eax
  42846f:	cmp    al,0x0
  428471:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428472:	sbb    bh,BYTE PTR [ecx+ecx*1-0x56870ab7]
  428479:	jmp    FWORD PTR [edi]
  42847b:	shrd   DWORD PTR [ecx],esp,0x3e
  42847f:	jno    0x428434
  428481:	sub    bh,ah
  428483:	or     DWORD PTR [esi],edi
  428485:	ficom  WORD PTR [ebx]
  428487:	jmp    DWORD PTR [edx]
  428489:	lea    eax,ds:0x844000a7
  42848f:	add    dh,bl
  428491:	out    dx,eax
  428492:	mov    ecx,0xcc60e464
  428497:	xchg   ebp,eax
  428498:	sub    DWORD PTR [edi],edi
  42849a:	icebp  
  42849b:	add    ah,cl
  42849d:	mov    ah,0x54
  42849f:	fcom   DWORD PTR [ebx-0x34]
  4284a2:	fimul  DWORD PTR [edi]
  4284a4:	scas   al,BYTE PTR es:[edi]
  4284a5:	(bad)  
  4284a6:	mov    eax,ds:0xe44e8452
  4284ab:	xchg   DWORD PTR ds:0x45e8409e,ecx
  4284b1:	jo     0x4284de
  4284b3:	inc    ebx
  4284b4:	mov    dl,0xc5
  4284b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4284b7:	out    dx,al
  4284b8:	or     DWORD PTR [ebx+eax*1+0x34],ebp
  4284bc:	pop    ebp
  4284bd:	sub    al,0x45
  4284bf:	pop    ss
  4284c0:	data16 sub dh,BYTE PTR [eiz*4+0x1bb1e207]
  4284c8:	xchg   esi,eax
  4284c9:	push   ss
  4284ca:	out    0x21,eax
  4284cc:	addr16 pushf 
  4284ce:	loope  0x4284ff
  4284d0:	int    0x33
  4284d2:	pop    edi
  4284d3:	or     BYTE PTR [edx],ah
  4284d5:	mov    bh,0x84
  4284d7:	inc    ebp
  4284d8:	sbb    al,0x5c
  4284da:	add    eax,0x7427ef01
  4284df:	mov    BYTE PTR [eax-0x48],cl
  4284e2:	div    BYTE PTR [ebp-0x25adfe5c]
  4284e8:	repz fdivr DWORD PTR [edx+0x45]
  4284ec:	xchg   esi,eax
  4284ed:	(bad)  
  4284ee:	hlt    
  4284ef:	sar    BYTE PTR [eax-0x5683d6dc],1
  4284f5:	les    esi,FWORD PTR [eax-0xbb360bd]
  4284fb:	push   ebp
  4284fc:	mov    bl,0x90
  4284fe:	xchg   edi,eax
  4284ff:	int3   
  428500:	push   esp
  428501:	inc    ecx
  428502:	jmp    0x4284f9
  428504:	add    al,dh
  428506:	mov    eax,ds:0x4e3c4782
  42850b:	add    cl,BYTE PTR fs:[esi+0xf]
  42850f:	pop    ebx
  428510:	dec    ebp
  428511:	in     al,dx
  428512:	sub    BYTE PTR [ebp-0x201dd53f],bh
  428518:	push   edi
  428519:	push   cs
  42851a:	jmp    0xeb22ab6a
  42851f:	inc    edi
  428520:	add    ch,ah
  428522:	mov    ch,BYTE PTR [ecx-0x58]
  428525:	cmp    eax,0xe602ad80
  42852a:	adc    eax,DWORD PTR [ebx]
  42852c:	pop    esp
  42852d:	xor    BYTE PTR [ebp+edx*8-0x7f6a23d1],0x12
  428535:	or     al,0xb
  428537:	inc    esp
  428538:	stos   DWORD PTR es:[edi],eax
  428539:	out    dx,eax
  42853a:	vpshufhw xmm3,XMMWORD PTR [esi+0x63],0xd3
  428540:	or     BYTE PTR [edi],dh
  428542:	sti    
  428543:	aad    0x80
  428545:	add    ebp,ebp
  428547:	xchg   DWORD PTR [esi-0x9031a05],ebp
  42854d:	sub    al,0x6d
  42854f:	retf   0xc8ac
  428552:	(bad)  
  428553:	mov    ebx,0xec63520f
  428558:	rcr    BYTE PTR [esi],1
  42855a:	jbe    0x4285a4
  42855c:	cmp    eax,DWORD PTR [eax+0x3d]
  42855f:	loop   0x42853e
  428561:	xchg   ebx,eax
  428562:	or     BYTE PTR [ebx+0x2],dl
  428565:	jle    0x428548
  428567:	inc    esp
  428568:	jns    0x42853f
  42856a:	inc    ecx
  42856c:	push   esp
  42856d:	push   0x7c374e8a
  428572:	push   0x37
  428574:	inc    ecx
  428575:	leave  
  428576:	mov    ds:0x6d522c31,al
  42857b:	(bad)  
  42857c:	mov    al,0x5d
  42857e:	shl    DWORD PTR [ebx-0x483e3c66],cl
  428584:	test   al,0x85
  428586:	or     cl,ah
  428588:	push   es
  428589:	xchg   ebx,eax
  42858a:	pop    ecx
  42858b:	jo     0x428582
  42858d:	pop    edx
  42858e:	sbb    al,0x91
  428590:	mov    esi,0x1b7d568e
  428595:	nop
  428596:	or     ah,0xd7
  428599:	dec    eax
  42859a:	std    
  42859b:	push   edi
  42859c:	dec    esp
  42859d:	dec    ebp
  42859e:	xor    al,0x57
  4285a0:	sbb    al,0x56
  4285a2:	in     eax,0x32
  4285a4:	rol    BYTE PTR [ebp+0x5a270c2d],cl
  4285aa:	xchg   BYTE PTR [eax+0x47ae6ea7],cl
  4285b0:	shl    DWORD PTR [ebp+ebx*8+0x1f470955],cl
  4285b7:	dec    esi
  4285b8:	repnz sbb esi,DWORD PTR [eax]
  4285bb:	sub    ebp,DWORD PTR [ecx-0x72]
  4285be:	sti    
  4285bf:	test   BYTE PTR [esi-0x7b8fd7eb],bh
  4285c5:	ds mov ah,0x8f
  4285c8:	and    eax,0x96d6b9ed
  4285cd:	xor    al,ah
  4285cf:	or     eax,0xb5d04690
  4285d4:	jno    0x4285c2
  4285d6:	lea    eax,cs:[eax+0x79767ab]
  4285dd:	repz mul bl
  4285e0:	scas   al,BYTE PTR es:[edi]
  4285e1:	or     DWORD PTR [ebp+0x171ed793],0x7403dfd
  4285eb:	pop    ecx
  4285ec:	dec    edx
  4285ed:	add    BYTE PTR [eax],al
  4285ef:	add    BYTE PTR [eax],al
  4285f1:	add    BYTE PTR [edx],dl
  4285f3:	adc    BYTE PTR [eax-0x41c16dc2],0xac
  4285fa:	retf   0x4cd7
  4285fd:	ins    BYTE PTR es:[edi],dx
  4285fe:	mov    eax,ds:0x6d46ff3e
  428603:	std    
  428604:	add    DWORD PTR [eax],eax
  428606:	or     eax,0x70000000
  42860b:	jl     0x4285a8
  42860d:	rol    DWORD PTR [ebp+0x79474c6e],cl
  428613:	mov    ebp,0x1a13d1
	...
