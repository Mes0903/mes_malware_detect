
5564bcb87611feafa1bc1e59de5ce1e3c4dcf23556fdff64dc0300d1fc4c55bf.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x14c
  401009:	push   ebx
  40100a:	add    DWORD PTR ds:0x413d18,edx
  401010:	push   esi
  401011:	adc    eax,DWORD PTR ds:0x41400c
  401017:	push   edi
  401018:	adc    DWORD PTR ds:0x413c74,ecx
  40101e:	xor    esi,esi
  401020:	sbb    eax,DWORD PTR ds:0x413bfe
  401026:	mov    DWORD PTR [ebp-0x10],esi
  401029:	adc    edi,eax
  40102b:	mov    eax,DWORD PTR [ebp-0x20]
  40102e:	and    DWORD PTR ds:0x413c06,0x0
  401038:	jmp    0x40104a
  40103d:	mov    edi,DWORD PTR ds:0x413c06
  401043:	inc    edi
  401044:	mov    DWORD PTR ds:0x413c06,edi
  40104a:	cmp    DWORD PTR ds:0x413c06,0x12
  401051:	jae    0x40107f
  401057:	cmp    DWORD PTR ds:0x413c06,0x18
  40105e:	jne    0x401074
  401064:	push   0x413c74
  401069:	push   0x1062
  40106e:	call   DWORD PTR ds:0x41675c
  401074:	jmp    0x40103d
  401079:	xor    DWORD PTR ds:0x413bf6,ebx
  40107f:	push   0x5
  401081:	mov    DWORD PTR [ebp-0x20],eax
  401084:	pop    edi
  401085:	push   0x4164c8
  40108a:	call   DWORD PTR ds:0x416794
  401090:	push   esi
  401091:	and    DWORD PTR ds:0x413c70,0x414018
  40109b:	push   0x69
  40109d:	push   0xe
  40109f:	push   0x6
  4010a1:	push   0x4
  4010a3:	xor    DWORD PTR ds:0x41401c,0x413c16
  4010ad:	push   0x87698897
  4010b2:	sbb    DWORD PTR ds:0x41401c,0x413c16
  4010bc:	call   DWORD PTR ds:0x416750
  4010c2:	push   esi
  4010c3:	add    DWORD PTR ds:0x413d2c,0x792b
  4010cd:	push   0x3
  4010cf:	push   0x2
  4010d1:	push   0x4
  4010d3:	sbb    DWORD PTR ds:0x414008,0x413c0e
  4010dd:	push   0x2
  4010df:	push   0x56778769
  4010e4:	push   0x76867576
  4010e9:	inc    DWORD PTR ds:0x413c74
  4010ef:	call   DWORD PTR ds:0x41674c
  4010f5:	add    DWORD PTR ds:0x413c6c,0x413d20
  4010ff:	dec    edi
  401100:	mov    DWORD PTR ds:0x413bf6,0x25f1
  40110a:	jne    0x401085
  401110:	push   0x4164f0
  401115:	sbb    DWORD PTR ds:0x414000,0x413c0e
  40111f:	push   esi
  401120:	push   esi
  401121:	and    DWORD PTR ds:0x413c78,0x5ead
  40112b:	call   DWORD PTR ds:0x416788
  401131:	test   eax,eax
  401133:	je     0x40114f
  401139:	mov    eax,ds:0x75687681
  40113e:	adc    ebx,DWORD PTR ds:0x413c0a
  401144:	imul   eax,eax,0x5463da1d
  40114a:	mov    ds:0x75687681,eax
  40114f:	mov    eax,DWORD PTR [ebp-0x20]
  401152:	mov    DWORD PTR ds:0x41401c,0x2026
  40115c:	mov    ebx,0xf89c85b0
  401161:	mov    DWORD PTR ds:0x413c78,0x6385
  40116b:	cmp    eax,ebx
  40116d:	jne    0x4011cf
  401173:	add    DWORD PTR ds:0x414004,0x37c8
  40117d:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  401187:	push   DWORD PTR [ebp+0x10]
  40118a:	sub    DWORD PTR ds:0x413bfe,0x414004
  401194:	push   DWORD PTR [ebp+0xc]
  401197:	and    DWORD PTR ds:0x413c1a,0x413ce4
  4011a1:	push   DWORD PTR [ebp+0x8]
  4011a4:	xor    DWORD PTR ds:0x413d34,0x413d2c
  4011ae:	call   0x402685
  4011b3:	mov    ecx,DWORD PTR ds:0x4163b4
  4011b9:	mov    esi,DWORD PTR ds:0x413c1e
  4011bf:	or     DWORD PTR ds:0x413c06,esi
  4011c5:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4011cb:	xor    esi,esi
  4011cd:	mov    DWORD PTR [ecx],eax
  4011cf:	mov    DWORD PTR [ebp-0x8],ebx
  4011d2:	sub    ecx,DWORD PTR ds:0x413d20
  4011d8:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  4011df:	lea    eax,[ebp-0x60]
  4011e2:	xor    esi,DWORD PTR ds:0x413d18
  4011e8:	mov    DWORD PTR [ebp-0x48],eax
  4011eb:	lea    eax,[ebp-0x54]
  4011ee:	mov    DWORD PTR [ebp-0x1c],eax
  4011f1:	add    DWORD PTR ds:0x413c16,0x903
  4011fb:	mov    eax,ds:0x4163b4
  401200:	mov    eax,DWORD PTR [eax+0x1c8]
  401206:	adc    DWORD PTR ds:0x413cf4,edi
  40120c:	mov    eax,DWORD PTR [eax]
  40120e:	mov    esi,DWORD PTR ds:0x413ce4
  401214:	add    esi,DWORD PTR ds:0x413c16
  40121a:	mov    DWORD PTR ds:0x413ce4,esi
  401220:	mov    ecx,DWORD PTR [ebp-0x1c]
  401223:	xor    edi,edi
  401225:	mov    esi,0x7510894
  40122a:	xor    eax,esi
  40122c:	mov    edi,0x3272dc
  401231:	adc    DWORD PTR ds:0x413c78,0x59b2
  40123b:	add    eax,edi
  40123d:	mov    DWORD PTR ds:0x413d24,0x7b51
  401247:	mov    DWORD PTR [ecx],eax
  401249:	mov    eax,ds:0x4165e0
  40124e:	mov    DWORD PTR ds:0x413c80,0x7e03
  401258:	cmp    eax,0x312bc9f6
  40125d:	mov    DWORD PTR ds:0x413d24,0x296e
  401267:	jne    0x401312
  40126d:	mov    eax,DWORD PTR [ebp-0x8]
  401270:	mov    ecx,DWORD PTR ds:0x4163b4
  401276:	mov    ecx,DWORD PTR [ecx+0x198]
  40127c:	xor    eax,esi
  40127e:	add    eax,edi
  401280:	mov    edx,DWORD PTR ds:0x413c6c
  401286:	xor    DWORD PTR ds:0x414010,edx
  40128c:	mov    DWORD PTR [ecx],eax
  40128e:	movzx  ecx,BYTE PTR ds:0x413c6c
  401295:	and    ecx,DWORD PTR ds:0x413d2c
  40129b:	mov    DWORD PTR ds:0x413c6c,ecx
  4012a1:	mov    eax,DWORD PTR [ebp-0x8]
  4012a4:	mov    DWORD PTR ds:0x413cd8,0x1b
  4012ae:	cmp    DWORD PTR ds:0x413cd8,0x0
  4012b5:	je     0x401303
  4012bb:	cmp    DWORD PTR ds:0x413cd8,0x1c
  4012c2:	jne    0x4012dd
  4012c8:	push   0x104b
  4012cd:	push   0x413d18
  4012d2:	push   0x2575
  4012d7:	call   DWORD PTR ds:0x416760
  4012dd:	xor    edx,edx
  4012df:	xor    edx,DWORD PTR ds:0x413cd8
  4012e5:	dec    edx
  4012e6:	mov    DWORD PTR ds:0x413cd8,edx
  4012ec:	jmp    0x4012ae
  4012f1:	mov    edx,DWORD PTR ds:0x413ce8
  4012f7:	or     edx,DWORD PTR ds:0x413c7c
  4012fd:	mov    DWORD PTR ds:0x413ce8,edx
  401303:	xor    eax,esi
  401305:	add    eax,edi
  401307:	or     ecx,DWORD PTR ds:0x413d24
  40130d:	mov    ds:0x4165e0,eax
  401312:	mov    eax,ds:0x4163b4
  401317:	mov    eax,DWORD PTR [eax+0x18c]
  40131d:	and    DWORD PTR ds:0x413c1a,0x0
  401327:	jmp    0x401339
  40132c:	mov    ecx,DWORD PTR ds:0x413c1a
  401332:	inc    ecx
  401333:	mov    DWORD PTR ds:0x413c1a,ecx
  401339:	cmp    DWORD PTR ds:0x413c1a,0x15
  401340:	jae    0x40136e
  401346:	cmp    DWORD PTR ds:0x413c1a,0x20
  40134d:	jne    0x401369
  401353:	push   0x6f97
  401358:	push   DWORD PTR [ebp-0x18]
  40135b:	push   0x2919
  401360:	push   DWORD PTR [ebp-0x14]
  401363:	call   DWORD PTR ds:0x416764
  401369:	jmp    0x40132c
  40136e:	mov    eax,DWORD PTR [eax]
  401370:	xor    edx,edx
  401372:	or     edx,DWORD PTR ds:0x413c0e
  401378:	adc    DWORD PTR ds:0x413cdc,edx
  40137e:	mov    DWORD PTR [ebp-0xa4],eax
  401384:	xor    eax,eax
  401386:	xor    eax,DWORD PTR ds:0x413cd0
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	sbb    DWORD PTR ds:0x413d34,eax
  401394:	mov    eax,0xf89c85bc
  401399:	xor    edx,ecx
  40139b:	mov    DWORD PTR [ebp-0x10],eax
  40139e:	mov    DWORD PTR [ebp-0x10],eax
  4013a1:	mov    DWORD PTR [ebp-0x10],eax
  4013a4:	sub    ecx,ecx
  4013a6:	mov    DWORD PTR [ebp-0x1c],ebx
  4013a9:	or     DWORD PTR ds:0x413c80,0x7e3b
  4013b3:	mov    DWORD PTR [ebp-0x10],eax
  4013b6:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4013bd:	add    DWORD PTR ds:0x413d34,edi
  4013c3:	mov    ecx,DWORD PTR [ebp-0x8]
  4013c6:	xor    ecx,esi
  4013c8:	add    ecx,edi
  4013ca:	mov    DWORD PTR [ebp-0x18],ecx
  4013cd:	add    DWORD PTR ds:0x414018,edi
  4013d3:	mov    ecx,DWORD PTR [ebp-0xc]
  4013d6:	and    DWORD PTR ds:0x413c7c,0xe1
  4013e0:	mov    edx,DWORD PTR [ebp-0xc]
  4013e3:	adc    DWORD PTR ds:0x413d28,0x413d20
  4013ed:	xor    edx,esi
  4013ef:	xor    ecx,esi
  4013f1:	sbb    DWORD PTR ds:0x414014,0x47d8
  4013fb:	add    ecx,edx
  4013fd:	movzx  edx,BYTE PTR ds:0x41400c
  401404:	and    DWORD PTR ds:0x413bf6,edx
  40140a:	mov    edx,DWORD PTR [ebp-0xc]
  40140d:	xor    edx,esi
  40140f:	lea    ecx,[ecx+edx*1+0x975894]
  401416:	cmp    DWORD PTR [ebp-0x18],ecx
  401419:	ja     0x4015f5
  40141f:	or     eax,DWORD PTR ds:0x413bfa
  401425:	mov    eax,DWORD PTR [ebp-0xc]
  401428:	mov    ecx,DWORD PTR ds:0x413c80
  40142e:	xor    DWORD PTR ds:0x413ce8,ecx
  401434:	mov    ecx,DWORD PTR [ebp-0x18]
  401437:	sbb    DWORD PTR ds:0x413d20,0x413d34
  401441:	xor    eax,esi
  401443:	and    DWORD PTR ds:0x413cdc,0x413d24
  40144d:	lea    eax,[eax+ecx*1+0x3272dc]
  401454:	sub    DWORD PTR ds:0x414008,0x413cd8
  40145e:	push   eax
  40145f:	sbb    DWORD PTR ds:0x413c0a,edi
  401465:	mov    eax,DWORD PTR [ebp-0x1c]
  401468:	xor    DWORD PTR ds:0x413c80,0x7b1e
  401472:	xor    eax,esi
  401474:	lea    eax,[ebp+eax*1+0x3272e4]
  40147b:	or     DWORD PTR ds:0x413c16,0x7d42
  401485:	push   eax
  401486:	mov    DWORD PTR ds:0x414018,0x19
  401490:	cmp    DWORD PTR ds:0x414018,0x0
  401497:	je     0x4014cb
  40149d:	cmp    DWORD PTR ds:0x414018,0x28
  4014a4:	jne    0x4014bb
  4014aa:	push   DWORD PTR [ebp-0x14]
  4014ad:	push   DWORD PTR [ebp-0x18]
  4014b0:	push   0x400000
  4014b5:	call   DWORD PTR ds:0x416768
  4014bb:	mov    eax,ds:0x414018
  4014c0:	dec    eax
  4014c1:	mov    ds:0x414018,eax
  4014c6:	jmp    0x401490
  4014cb:	mov    eax,ds:0x4163b4
  4014d0:	and    DWORD PTR ds:0x413c6c,0x2ac9
  4014da:	push   DWORD PTR [eax+0x1bc]
  4014e0:	call   0x40a25b
  4014e5:	mov    eax,DWORD PTR [ebp-0xc]
  4014e8:	sbb    edx,edx
  4014ea:	mov    ecx,DWORD PTR [ebp-0x18]
  4014ed:	and    DWORD PTR ds:0x413d24,0x0
  4014f7:	mov    edx,DWORD PTR ds:0x413d24
  4014fd:	inc    edx
  4014fe:	mov    DWORD PTR ds:0x413d24,edx
  401504:	cmp    DWORD PTR ds:0x413d24,0x1c
  40150b:	jne    0x401525
  401511:	push   DWORD PTR [ebp-0x14]
  401514:	push   0x413d30
  401519:	push   DWORD PTR [ebp-0x1c]
  40151c:	push   DWORD PTR [ebp-0x24]
  40151f:	call   DWORD PTR ds:0x416770
  401525:	cmp    DWORD PTR ds:0x413d24,0x1b
  40152c:	jb     0x4014f7
  401532:	xor    eax,esi
  401534:	lea    eax,[ecx+eax*1+0x3272dc]
  40153b:	mov    ecx,DWORD PTR [ebp-0xc]
  40153e:	mov    edx,DWORD PTR [ebp-0xc]
  401541:	dec    DWORD PTR ds:0x413bf6
  401547:	xor    edx,esi
  401549:	xor    ecx,esi
  40154b:	sbb    DWORD PTR ds:0x413c1e,0x34e4
  401555:	add    ecx,edx
  401557:	and    DWORD PTR ds:0x413c02,0x0
  401561:	jmp    0x401573
  401566:	mov    edx,DWORD PTR ds:0x413c02
  40156c:	inc    edx
  40156d:	mov    DWORD PTR ds:0x413c02,edx
  401573:	cmp    DWORD PTR ds:0x413c02,0x1b
  40157a:	jae    0x4015bf
  401580:	cmp    DWORD PTR ds:0x413c02,0x1e
  401587:	jne    0x4015a7
  40158d:	push   0x413d28
  401592:	push   0x3ad3
  401597:	push   0x416152
  40159c:	push   0x416152
  4015a1:	call   DWORD PTR ds:0x416774
  4015a7:	jmp    0x401566
  4015ac:	movzx  edx,BYTE PTR ds:0x413ce8
  4015b3:	sub    edx,DWORD PTR ds:0x413c1a
  4015b9:	mov    DWORD PTR ds:0x413ce8,edx
  4015bf:	mov    edx,DWORD PTR [ebp-0xc]
  4015c2:	xor    DWORD PTR ds:0x413c80,0x413c74
  4015cc:	xor    edx,esi
  4015ce:	lea    ecx,[ecx+edx*1+0x975894]
  4015d5:	mov    DWORD PTR [ebp-0x18],eax
  4015d8:	cmp    eax,ecx
  4015da:	mov    DWORD PTR ds:0x413c7c,0x908
  4015e4:	jbe    0x40141f
  4015ea:	add    DWORD PTR ds:0x413cf4,ecx
  4015f0:	mov    eax,0xf89c85bc
  4015f5:	add    DWORD PTR ds:0x414014,ecx
  4015fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4015fe:	mov    DWORD PTR ds:0x416238,ecx
  401604:	mov    ecx,DWORD PTR [ebp+0x10]
  401607:	and    DWORD PTR ds:0x413c1a,0x0
  401611:	mov    edx,DWORD PTR ds:0x413c1a
  401617:	inc    edx
  401618:	mov    DWORD PTR ds:0x413c1a,edx
  40161e:	cmp    DWORD PTR ds:0x413c1a,0x25
  401625:	jne    0x40163e
  40162b:	push   DWORD PTR [ebp-0x1c]
  40162e:	push   0x414004
  401633:	push   0x416170
  401638:	call   DWORD PTR ds:0x416778
  40163e:	cmp    DWORD PTR ds:0x413c1a,0x19
  401645:	jb     0x401611
  40164b:	mov    DWORD PTR ds:0x41648c,ecx
  401651:	adc    DWORD PTR ds:0x413c1e,ebx
  401657:	mov    ecx,DWORD PTR ds:0x416238
  40165d:	mov    edx,DWORD PTR ds:0x414014
  401663:	xor    DWORD PTR ds:0x413c0e,edx
  401669:	mov    edx,DWORD PTR [ebp-0x48]
  40166c:	sub    ecx,edi
  40166e:	and    DWORD PTR ds:0x413cf0,0x24ff
  401678:	xor    ecx,esi
  40167a:	mov    DWORD PTR [edx],ecx
  40167c:	not    ecx
  40167e:	mov    ecx,DWORD PTR [ebp-0x20]
  401681:	mov    DWORD PTR ds:0x413c16,0x6aa9
  40168b:	cmp    ecx,ebx
  40168d:	mov    DWORD PTR ds:0x413c70,0x4e28
  401697:	jne    0x401b90
  40169d:	add    DWORD PTR ds:0x413d18,0x41400c
  4016a7:	lea    eax,[ebp-0x5c]
  4016aa:	and    DWORD PTR ds:0x413c16,0x3f2d
  4016b4:	mov    DWORD PTR [ebp-0xb0],eax
  4016ba:	lea    eax,[ebp+0x4]
  4016bd:	add    DWORD PTR ds:0x413cec,0x413d24
  4016c7:	mov    DWORD PTR [ebp-0x5c],eax
  4016ca:	mov    eax,DWORD PTR [ebp-0x5c]
  4016cd:	xor    DWORD PTR ds:0x413ce4,0x37e4
  4016d7:	test   eax,eax
  4016d9:	mov    DWORD PTR ds:0x413c7c,0x3884
  4016e3:	je     0x402663
  4016e9:	adc    DWORD PTR ds:0x413c12,ebx
  4016ef:	mov    eax,DWORD PTR [ebp-0x24]
  4016f2:	mov    eax,DWORD PTR [ebp-0xc]
  4016f5:	mov    eax,DWORD PTR [ebp-0x8]
  4016f8:	sub    ecx,0x1090
  4016fe:	mov    DWORD PTR [ebp+0xc],eax
  401701:	mov    eax,eax
  401703:	mov    eax,ds:0x4163b4
  401708:	and    DWORD PTR ds:0x413bfa,0x0
  401712:	jmp    0x401724
  401717:	mov    ecx,DWORD PTR ds:0x413bfa
  40171d:	inc    ecx
  40171e:	mov    DWORD PTR ds:0x413bfa,ecx
  401724:	cmp    DWORD PTR ds:0x413bfa,0x11
  40172b:	jae    0x401754
  401731:	cmp    DWORD PTR ds:0x413bfa,0x20
  401738:	jne    0x401749
  40173e:	push   0x4160de
  401743:	call   DWORD PTR ds:0x41677c
  401749:	jmp    0x401717
  40174e:	and    DWORD PTR ds:0x413c74,ecx
  401754:	mov    eax,DWORD PTR [eax+0x1c8]
  40175a:	and    DWORD PTR ds:0x414010,0x0
  401764:	mov    ecx,DWORD PTR ds:0x414010
  40176a:	inc    ecx
  40176b:	mov    DWORD PTR ds:0x414010,ecx
  401771:	cmp    DWORD PTR ds:0x414010,0xf
  401778:	jne    0x401791
  40177e:	push   0x413c0a
  401783:	push   DWORD PTR [ebp-0x20]
  401786:	push   0x4160b3
  40178b:	call   DWORD PTR ds:0x416780
  401791:	cmp    DWORD PTR ds:0x414010,0xe
  401798:	jne    0x4017ab
  40179e:	mov    ecx,DWORD PTR ds:0x414010
  4017a4:	inc    ecx
  4017a5:	mov    DWORD PTR ds:0x414010,ecx
  4017ab:	cmp    DWORD PTR ds:0x414010,0x1c
  4017b2:	jb     0x401764
  4017b8:	mov    DWORD PTR ds:0x413bf6,0x13
  4017c2:	cmp    DWORD PTR ds:0x413bf6,0x0
  4017c9:	je     0x401820
  4017cf:	cmp    DWORD PTR ds:0x413bf6,0x6
  4017d6:	jne    0x4017ec
  4017dc:	push   0x414018
  4017e1:	push   0x1023
  4017e6:	call   DWORD PTR ds:0x416784
  4017ec:	cmp    DWORD PTR ds:0x413bf6,0x7
  4017f3:	jne    0x401808
  4017f9:	xor    ecx,ecx
  4017fb:	add    ecx,DWORD PTR ds:0x413bf6
  401801:	dec    ecx
  401802:	mov    DWORD PTR ds:0x413bf6,ecx
  401808:	mov    ecx,DWORD PTR ds:0x413bf6
  40180e:	dec    ecx
  40180f:	mov    DWORD PTR ds:0x413bf6,ecx
  401815:	jmp    0x4017c2
  40181a:	adc    DWORD PTR ds:0x413ce8,ebx
  401820:	mov    eax,DWORD PTR [eax]
  401822:	and    DWORD PTR ds:0x414010,0x0
  40182c:	jmp    0x401840
  401831:	xor    ecx,ecx
  401833:	add    ecx,DWORD PTR ds:0x414010
  401839:	inc    ecx
  40183a:	mov    DWORD PTR ds:0x414010,ecx
  401840:	cmp    DWORD PTR ds:0x414010,0x19
  401847:	jae    0x401873
  40184d:	cmp    DWORD PTR ds:0x414010,0x27
  401854:	jne    0x401868
  40185a:	push   DWORD PTR [ebp-0x18]
  40185d:	push   0x4160de
  401862:	call   DWORD PTR ds:0x41678c
  401868:	jmp    0x401831
  40186d:	sub    DWORD PTR ds:0x413c0a,edi
  401873:	cdq    
  401874:	mov    ebx,eax
  401876:	mov    eax,0xfabdbeef
  40187b:	mov    ecx,DWORD PTR ds:0x413c1e
  401881:	or     DWORD PTR ds:0x413d1c,ecx
  401887:	add    ebx,eax
  401889:	mov    ecx,0x6f0c
  40188e:	adc    edx,0xffffffff
  401891:	and    DWORD PTR [ebp-0x10],0x0
  401895:	sub    DWORD PTR ds:0x413c6c,0x6250
  40189f:	xor    edx,0x0
  4018a2:	xor    DWORD PTR ds:0x413c84,ecx
  4018a8:	mov    DWORD PTR [ebp-0x80],edx
  4018ab:	mov    edx,DWORD PTR [ebp+0xc]
  4018ae:	mov    DWORD PTR ds:0x413c74,0x12
  4018b8:	cmp    DWORD PTR ds:0x413c74,0x0
  4018bf:	je     0x401906
  4018c5:	cmp    DWORD PTR ds:0x413c74,0x1e
  4018cc:	jne    0x4018f2
  4018d2:	push   DWORD PTR [ebp-0x24]
  4018d5:	push   0x413cd8
  4018da:	push   0x560c
  4018df:	push   0x416049
  4018e4:	push   DWORD PTR [ebp-0x18]
  4018e7:	push   0x1b95
  4018ec:	call   DWORD PTR ds:0x416790
  4018f2:	mov    ecx,DWORD PTR ds:0x413c74
  4018f8:	dec    ecx
  4018f9:	mov    DWORD PTR ds:0x413c74,ecx
  4018ff:	jmp    0x4018b8
  401904:	not    ecx
  401906:	mov    DWORD PTR [ebp-0x14],edx
  401909:	and    DWORD PTR ds:0x413c06,0x0
  401913:	jmp    0x401925
  401918:	mov    edx,DWORD PTR ds:0x413c06
  40191e:	inc    edx
  40191f:	mov    DWORD PTR ds:0x413c06,edx
  401925:	cmp    DWORD PTR ds:0x413c06,0x14
  40192c:	jae    0x401967
  401932:	cmp    DWORD PTR ds:0x413c06,0x5
  401939:	jne    0x401948
  40193f:	push   DWORD PTR [ebp-0xc]
  401942:	call   DWORD PTR ds:0x416798
  401948:	cmp    DWORD PTR ds:0x413c06,0x4
  40194f:	jne    0x401962
  401955:	mov    edx,DWORD PTR ds:0x413c06
  40195b:	inc    edx
  40195c:	mov    DWORD PTR ds:0x413c06,edx
  401962:	jmp    0x401918
  401967:	mov    ecx,0x8a29a125
  40196c:	xor    ebx,ecx
  40196e:	neg    DWORD PTR ds:0x413d18
  401974:	add    DWORD PTR [ebp-0x14],eax
  401977:	mov    DWORD PTR ds:0x414010,ebx
  40197d:	mov    edx,DWORD PTR [ebp-0x14]
  401980:	mov    DWORD PTR ds:0x41401c,0x7ba5
  40198a:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40198e:	xor    edx,ecx
  401990:	add    DWORD PTR ds:0x414010,0x307
  40199a:	mov    DWORD PTR [ebp-0x78],edx
  40199d:	mov    edx,DWORD PTR [ebp-0x10]
  4019a0:	xor    edx,0x0
  4019a3:	mov    DWORD PTR ds:0x414018,0x4b60
  4019ad:	mov    DWORD PTR [ebp-0x74],edx
  4019b0:	cmp    DWORD PTR [ebp-0x78],ebx
  4019b3:	mov    DWORD PTR ds:0x413c02,0x936
  4019bd:	jne    0x4019df
  4019c3:	mov    DWORD PTR ds:0x413c0a,edx
  4019c9:	mov    edx,DWORD PTR [ebp-0x80]
  4019cc:	cmp    DWORD PTR [ebp-0x74],edx
  4019cf:	mov    DWORD PTR ds:0x413c7c,0x301a
  4019d9:	je     0x401aa0
  4019df:	and    DWORD PTR ds:0x413d34,0x0
  4019e9:	jmp    0x4019fb
  4019ee:	mov    edx,DWORD PTR ds:0x413d34
  4019f4:	inc    edx
  4019f5:	mov    DWORD PTR ds:0x413d34,edx
  4019fb:	cmp    DWORD PTR ds:0x413d34,0x16
  401a02:	jae    0x401a25
  401a08:	cmp    DWORD PTR ds:0x413d34,0x26
  401a0f:	jne    0x401a20
  401a15:	push   0x414014
  401a1a:	call   DWORD PTR ds:0x41679c
  401a20:	jmp    0x4019ee
  401a25:	mov    edx,DWORD PTR ds:0x4163b4
  401a2b:	neg    DWORD PTR ds:0x414008
  401a31:	mov    edx,DWORD PTR [edx+0x1c0]
  401a37:	mov    DWORD PTR ds:0x413bf6,0x5ff4
  401a41:	mov    edx,DWORD PTR [edx]
  401a43:	and    DWORD PTR ds:0x413ce0,0x41400c
  401a4d:	xor    ebx,ebx
  401a4f:	add    edx,eax
  401a51:	mov    DWORD PTR ds:0x413c78,0x3f53
  401a5b:	adc    ebx,0xffffffff
  401a5e:	and    DWORD PTR ds:0x413c02,0x1b79
  401a68:	xor    edx,ecx
  401a6a:	add    DWORD PTR ds:0x413ce0,0x413c6c
  401a74:	xor    ebx,0x0
  401a77:	mov    DWORD PTR ds:0x413bfa,0x4fab
  401a81:	cmp    edx,0x70941fd5
  401a87:	mov    DWORD PTR ds:0x413d2c,0x7f9c
  401a91:	jne    0x402663
  401a97:	cmp    ebx,0xffffffff
  401a9a:	jne    0x402663
  401aa0:	mov    edx,DWORD PTR ds:0x416430
  401aa6:	add    DWORD PTR ds:0x413cdc,0x3946
  401ab0:	mov    ebx,DWORD PTR ds:0x416438
  401ab6:	and    DWORD PTR ds:0x413c80,0x3ee6
  401ac0:	xor    edx,ebx
  401ac2:	mov    DWORD PTR ds:0x414000,0x16
  401acc:	cmp    DWORD PTR ds:0x414000,0x0
  401ad3:	je     0x401b12
  401ad9:	cmp    DWORD PTR ds:0x414000,0x26
  401ae0:	jne    0x401af6
  401ae6:	push   0x413c84
  401aeb:	push   0x56a1
  401af0:	call   DWORD PTR ds:0x41675c
  401af6:	mov    ebx,DWORD PTR ds:0x414000
  401afc:	dec    ebx
  401afd:	mov    DWORD PTR ds:0x414000,ebx
  401b03:	jmp    0x401acc
  401b08:	add    DWORD PTR ds:0x413c84,0x1062
  401b12:	mov    DWORD PTR ds:0x416430,edx
  401b18:	mov    ebx,DWORD PTR ds:0x416430
  401b1e:	and    DWORD PTR ds:0x413d20,0x0
  401b28:	jmp    0x401b3a
  401b2d:	mov    edx,DWORD PTR ds:0x413d20
  401b33:	inc    edx
  401b34:	mov    DWORD PTR ds:0x413d20,edx
  401b3a:	cmp    DWORD PTR ds:0x413d20,0x1a
  401b41:	jae    0x401b72
  401b47:	cmp    DWORD PTR ds:0x413d20,0x25
  401b4e:	jne    0x401b67
  401b54:	push   DWORD PTR [ebp-0x24]
  401b57:	push   0x413d1c
  401b5c:	push   0x7dc0
  401b61:	call   DWORD PTR ds:0x416760
  401b67:	jmp    0x401b2d
  401b6c:	adc    DWORD PTR ds:0x413bfe,edi
  401b72:	mov    edx,DWORD PTR [ebp-0x5c]
  401b75:	xor    DWORD PTR ds:0x413c7c,0x413c1e
  401b7f:	add    DWORD PTR [edx],ebx
  401b81:	mov    DWORD PTR ds:0x414010,0x3837
  401b8b:	jmp    0x402624
  401b90:	mov    DWORD PTR ds:0x41401c,0x671d
  401b9a:	mov    ecx,DWORD PTR [ebp-0x60]
  401b9d:	mov    DWORD PTR ds:0x413c02,0x3bc3
  401ba7:	cmp    ecx,0xf89c85b1
  401bad:	je     0x401d26
  401bb3:	mov    ecx,DWORD PTR [ebp-0x8]
  401bb6:	mov    edx,DWORD PTR [ebp-0x54]
  401bb9:	or     DWORD PTR ds:0x413c1a,0x413cdc
  401bc3:	xor    ecx,esi
  401bc5:	add    ecx,edi
  401bc7:	cmp    ecx,edx
  401bc9:	je     0x401d26
  401bcf:	mov    DWORD PTR ds:0x413d28,0x18
  401bd9:	cmp    DWORD PTR ds:0x413d28,0x0
  401be0:	je     0x401c32
  401be6:	cmp    DWORD PTR ds:0x413d28,0xa
  401bed:	jne    0x401c07
  401bf3:	push   0x7420
  401bf8:	push   DWORD PTR [ebp-0xc]
  401bfb:	push   DWORD PTR [ebp-0x20]
  401bfe:	push   DWORD PTR [ebp-0x14]
  401c01:	call   DWORD PTR ds:0x416764
  401c07:	cmp    DWORD PTR ds:0x413d28,0xb
  401c0e:	jne    0x401c1f
  401c14:	mov    eax,ds:0x413d28
  401c19:	dec    eax
  401c1a:	mov    ds:0x413d28,eax
  401c1f:	xor    eax,eax
  401c21:	add    eax,DWORD PTR ds:0x413d28
  401c27:	dec    eax
  401c28:	mov    ds:0x413d28,eax
  401c2d:	jmp    0x401bd9
  401c32:	mov    eax,ds:0x4163b4
  401c37:	mov    DWORD PTR ds:0x413c88,0x7ef
  401c41:	mov    eax,DWORD PTR [eax+0x194]
  401c47:	mov    ecx,DWORD PTR [eax]
  401c49:	mov    eax,DWORD PTR [ecx+0x3c]
  401c4c:	adc    DWORD PTR ds:0x413c74,0x414014
  401c56:	push   DWORD PTR ds:0x41648c
  401c5c:	add    DWORD PTR ds:0x413c1e,0x413d24
  401c66:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c6a:	push   DWORD PTR ds:0x416238
  401c70:	add    DWORD PTR ds:0x414000,0x414014
  401c7a:	add    eax,ecx
  401c7c:	mov    DWORD PTR ds:0x413d1c,0x15
  401c86:	cmp    DWORD PTR ds:0x413d1c,0x0
  401c8d:	je     0x401ce5
  401c93:	cmp    DWORD PTR ds:0x413d1c,0x3
  401c9a:	jne    0x401cb1
  401ca0:	push   0x8408
  401ca5:	push   DWORD PTR [ebp-0x24]
  401ca8:	push   DWORD PTR [ebp-0x1c]
  401cab:	call   DWORD PTR ds:0x416768
  401cb1:	cmp    DWORD PTR ds:0x413d1c,0x4
  401cb8:	jne    0x401ccb
  401cbe:	mov    ecx,DWORD PTR ds:0x413d1c
  401cc4:	dec    ecx
  401cc5:	mov    DWORD PTR ds:0x413d1c,ecx
  401ccb:	xor    ecx,ecx
  401ccd:	or     ecx,DWORD PTR ds:0x413d1c
  401cd3:	dec    ecx
  401cd4:	mov    DWORD PTR ds:0x413d1c,ecx
  401cda:	jmp    0x401c86
  401cdf:	add    DWORD PTR ds:0x413bfa,ecx
  401ce5:	mov    ecx,DWORD PTR ds:0x4163b4
  401ceb:	mov    ecx,DWORD PTR [ecx+0x194]
  401cf1:	or     DWORD PTR ds:0x414000,0x5329
  401cfb:	push   DWORD PTR [ecx]
  401cfd:	call   eax
  401cff:	mov    ecx,DWORD PTR ds:0x4163b4
  401d05:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401d0b:	mov    DWORD PTR ds:0x413c78,0x5666
  401d15:	mov    DWORD PTR [ecx],eax
  401d17:	mov    DWORD PTR ds:0x413d24,0x5c21
  401d21:	jmp    0x402663
  401d26:	adc    edx,DWORD PTR ds:0x413cf0
  401d2c:	mov    ecx,DWORD PTR [ebp-0x8]
  401d2f:	sub    edx,DWORD PTR ds:0x413c70
  401d35:	mov    edx,DWORD PTR [ebp-0xa4]
  401d3b:	and    DWORD PTR ds:0x413ce4,0x413c06
  401d45:	xor    ecx,esi
  401d47:	sub    DWORD PTR ds:0x413d20,0x413d28
  401d51:	add    ecx,edi
  401d53:	cmp    ecx,edx
  401d55:	jne    0x40234f
  401d5b:	add    edx,ecx
  401d5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401d60:	movzx  edx,WORD PTR ds:0x413ce8
  401d67:	sbb    DWORD PTR ds:0x413d20,edx
  401d6d:	mov    edx,DWORD PTR ds:0x4163b4
  401d73:	adc    DWORD PTR ds:0x413c12,0x5f59
  401d7d:	mov    edx,DWORD PTR [edx+0x198]
  401d83:	xor    ecx,esi
  401d85:	sbb    DWORD PTR ds:0x413ce8,0x413c16
  401d8f:	add    ecx,edi
  401d91:	cmp    ecx,DWORD PTR [edx]
  401d93:	mov    DWORD PTR ds:0x413ce8,0x77fb
  401d9d:	jne    0x401e78
  401da3:	and    DWORD PTR ds:0x414000,0x0
  401dad:	jmp    0x401dbf
  401db2:	mov    ecx,DWORD PTR ds:0x414000
  401db8:	inc    ecx
  401db9:	mov    DWORD PTR ds:0x414000,ecx
  401dbf:	cmp    DWORD PTR ds:0x414000,0x1b
  401dc6:	jae    0x401e12
  401dcc:	cmp    DWORD PTR ds:0x414000,0xb
  401dd3:	jne    0x401ded
  401dd9:	push   DWORD PTR [ebp-0x1c]
  401ddc:	push   0x413c78
  401de1:	push   DWORD PTR [ebp-0x14]
  401de4:	push   DWORD PTR [ebp-0x14]
  401de7:	call   DWORD PTR ds:0x416770
  401ded:	cmp    DWORD PTR ds:0x414000,0xa
  401df4:	jne    0x401e07
  401dfa:	mov    ecx,DWORD PTR ds:0x414000
  401e00:	inc    ecx
  401e01:	mov    DWORD PTR ds:0x414000,ecx
  401e07:	jmp    0x401db2
  401e0c:	xor    ecx,DWORD PTR ds:0x413c7c
  401e12:	mov    ecx,DWORD PTR [ebp-0x8]
  401e15:	and    DWORD PTR ds:0x413d34,0x54e0
  401e1f:	push   ebx
  401e20:	xor    ecx,esi
  401e22:	mov    DWORD PTR ds:0x413cec,0x48d
  401e2c:	add    ecx,edi
  401e2e:	xor    DWORD PTR ds:0x413ce4,0x413bf6
  401e38:	push   ecx
  401e39:	xor    DWORD PTR ds:0x413c74,0x7d0d
  401e43:	push   eax
  401e44:	and    DWORD PTR ds:0x413ce8,0xad4
  401e4e:	push   DWORD PTR [ebp-0xc]
  401e51:	adc    DWORD PTR ds:0x413cf4,0x414018
  401e5b:	push   DWORD PTR [ebp-0x8]
  401e5e:	sbb    DWORD PTR ds:0x413bf6,0x21c1
  401e68:	call   0x405399
  401e6d:	add    eax,DWORD PTR ds:0x41401c
  401e73:	mov    eax,0xf89c85bc
  401e78:	mov    ecx,DWORD PTR [ebp-0xc]
  401e7b:	sub    edx,DWORD PTR ds:0x413bfe
  401e81:	mov    DWORD PTR [ebp-0x18],ecx
  401e84:	or     ecx,DWORD PTR ds:0x413d2c
  401e8a:	mov    ecx,DWORD PTR [ebp-0x8]
  401e8d:	sub    DWORD PTR ds:0x413d1c,edi
  401e93:	mov    DWORD PTR [ebp-0x20],ecx
  401e96:	adc    ecx,0x6924
  401e9c:	mov    ecx,DWORD PTR [ebp-0x20]
  401e9f:	xor    ecx,esi
  401ea1:	mov    edx,DWORD PTR ds:0x413c74
  401ea7:	sub    DWORD PTR ds:0x413c02,edx
  401ead:	add    ecx,edi
  401eaf:	adc    edx,DWORD PTR ds:0x41401c
  401eb5:	mov    DWORD PTR [ebp+0x10],ecx
  401eb8:	mov    DWORD PTR ds:0x413c6c,0x13
  401ec2:	cmp    DWORD PTR ds:0x413c6c,0x0
  401ec9:	je     0x401f6c
  401ecf:	cmp    DWORD PTR ds:0x413c6c,0x7
  401ed6:	jne    0x401ef6
  401edc:	push   0x413d34
  401ee1:	push   0x7095
  401ee6:	push   0x4161ce
  401eeb:	push   0x4161ce
  401ef0:	call   DWORD PTR ds:0x416774
  401ef6:	cmp    DWORD PTR ds:0x413c6c,0x8
  401efd:	jne    0x401f10
  401f03:	mov    ecx,DWORD PTR ds:0x413c6c
  401f09:	dec    ecx
  401f0a:	mov    DWORD PTR ds:0x413c6c,ecx
  401f10:	mov    ecx,DWORD PTR ds:0x413c6c
  401f16:	dec    ecx
  401f17:	mov    DWORD PTR ds:0x413c6c,ecx
  401f1d:	jmp    0x401ec2
  401f22:	and    DWORD PTR ds:0x413c1a,0x0
  401f2c:	mov    ecx,DWORD PTR ds:0x413c1a
  401f32:	inc    ecx
  401f33:	mov    DWORD PTR ds:0x413c1a,ecx
  401f39:	cmp    DWORD PTR ds:0x413c1a,0x1f
  401f40:	jne    0x401f59
  401f46:	push   DWORD PTR [ebp-0x10]
  401f49:	push   0x413cdc
  401f4e:	push   0x4161a0
  401f53:	call   DWORD PTR ds:0x416778
  401f59:	cmp    DWORD PTR ds:0x413c1a,0x1a
  401f60:	jb     0x401f2c
  401f66:	inc    DWORD PTR ds:0x413c1e
  401f6c:	mov    ecx,DWORD PTR ds:0x416234
  401f72:	mov    ecx,DWORD PTR [ecx]
  401f74:	mov    DWORD PTR [ebp+0x10],ecx
  401f77:	mov    ecx,DWORD PTR ds:0x41643c
  401f7d:	mov    ecx,DWORD PTR [ecx]
  401f7f:	mov    DWORD PTR [ebp-0x1c],ecx
  401f82:	mov    edx,DWORD PTR ds:0x414014
  401f88:	sbb    DWORD PTR ds:0x413d34,edx
  401f8e:	mov    DWORD PTR [ebp+0xc],0xf89c87b0
  401f95:	mov    ecx,DWORD PTR [ebp+0xc]
  401f98:	xor    ecx,esi
  401f9a:	dec    DWORD PTR ds:0x413d24
  401fa0:	add    ecx,edi
  401fa2:	mov    edx,DWORD PTR ds:0x414010
  401fa8:	sbb    DWORD PTR ds:0x413bf6,edx
  401fae:	mov    DWORD PTR [ebp+0xc],ecx
  401fb1:	mov    ecx,DWORD PTR ds:0x4163b4
  401fb7:	or     edx,DWORD PTR ds:0x413c84
  401fbd:	mov    DWORD PTR [ebp+0xc],ecx
  401fc0:	mov    ecx,DWORD PTR [ebp+0x10]
  401fc3:	and    edx,DWORD PTR ds:0x413d20
  401fc9:	mov    DWORD PTR [ebp+0xc],ecx
  401fcc:	mov    ecx,DWORD PTR [ebp+0xc]
  401fcf:	push   0x4
  401fd1:	sbb    edx,0xf5
  401fd7:	pop    edx
  401fd8:	or     DWORD PTR ds:0x413bfe,0x38f7
  401fe2:	sub    edx,ecx
  401fe4:	add    edx,DWORD PTR [ebp-0x1c]
  401fe7:	xor    DWORD PTR ds:0x413c88,0x413cec
  401ff1:	mov    DWORD PTR [ebp-0x48],0xf89c85f0
  401ff8:	mov    DWORD PTR [ebp+0x10],edx
  401ffb:	mov    DWORD PTR [ebp-0x108],eax
  402001:	mov    eax,DWORD PTR [ebp+0xc]
  402004:	mov    DWORD PTR [ebp-0x104],eax
  40200a:	mov    eax,DWORD PTR [ebp+0x10]
  40200d:	mov    DWORD PTR [ebp-0x100],eax
  402013:	mov    eax,DWORD PTR [ebp-0x48]
  402016:	xor    eax,esi
  402018:	add    eax,edi
  40201a:	mov    DWORD PTR [ebp-0xfc],eax
  402020:	lea    eax,[ebp-0xb8]
  402026:	mov    DWORD PTR [ebp-0xf8],eax
  40202c:	mov    eax,DWORD PTR [ebp-0x108]
  402032:	xor    eax,esi
  402034:	add    eax,edi
  402036:	mov    DWORD PTR [ebp-0x108],eax
  40203c:	lea    eax,[ebp-0x108]
  402042:	push   eax
  402043:	mov    eax,DWORD PTR [ebp-0x18]
  402046:	xor    eax,esi
  402048:	add    eax,edi
  40204a:	push   eax
  40204b:	mov    eax,ds:0x4163d4
  402050:	push   0x41632a
  402055:	push   DWORD PTR [eax]
  402057:	call   0x402798
  40205c:	mov    eax,DWORD PTR [ebp+0xc]
  40205f:	mov    ecx,DWORD PTR [ebp+0x10]
  402062:	mov    DWORD PTR [ebp-0xa8],ecx
  402068:	mov    ecx,DWORD PTR [ebp-0x20]
  40206b:	xor    ecx,esi
  40206d:	mov    DWORD PTR [ebp-0x1c],eax
  402070:	add    ecx,edi
  402072:	jmp    0x4022ea
  402077:	lea    edx,[ecx+eax*1]
  40207a:	mov    DWORD PTR [ebp+0x10],edx
  40207d:	mov    edx,DWORD PTR [ebp-0xa8]
  402083:	sub    edx,ecx
  402085:	mov    DWORD PTR [ebp+0xc],edx
  402088:	mov    edx,DWORD PTR [ebp+0xc]
  40208b:	mov    DWORD PTR [ebp-0x6c],edx
  40208e:	mov    edx,DWORD PTR [ebp+0x10]
  402091:	mov    DWORD PTR [ebp-0x68],ebx
  402094:	mov    DWORD PTR [ebp-0x80],edx
  402097:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  40209e:	mov    edx,DWORD PTR [ebp-0x68]
  4020a1:	xor    edx,esi
  4020a3:	add    edx,edi
  4020a5:	mov    DWORD PTR [ebp+0x10],edx
  4020a8:	mov    edx,DWORD PTR [ebp-0x68]
  4020ab:	xor    edx,esi
  4020ad:	add    edx,edi
  4020af:	mov    DWORD PTR [ebp+0xc],edx
  4020b2:	mov    DWORD PTR [ebp-0x88],0xf89c85d0
  4020bc:	mov    DWORD PTR [ebp-0x8c],0xf89c85bf
  4020c6:	mov    edx,DWORD PTR [ebp-0x68]
  4020c9:	mov    ebx,DWORD PTR [ebp-0x6c]
  4020cc:	xor    edx,esi
  4020ce:	add    edx,edi
  4020d0:	cmp    ebx,edx
  4020d2:	je     0x4022d9
  4020d8:	mov    eax,DWORD PTR [ebp-0x2c]
  4020db:	xor    eax,esi
  4020dd:	mov    edx,0xffcd8d24
  4020e2:	sub    edx,eax
  4020e4:	add    edx,DWORD PTR [ebp-0x6c]
  4020e7:	mov    eax,DWORD PTR [ebp-0x2c]
  4020ea:	mov    ebx,DWORD PTR [ebp+0x10]
  4020ed:	xor    eax,esi
  4020ef:	add    eax,edi
  4020f1:	imul   eax,ebx
  4020f4:	cmp    eax,edx
  4020f6:	ja     0x4022d6
  4020fc:	mov    edx,DWORD PTR [ebp+0x10]
  4020ff:	mov    eax,DWORD PTR [ebp-0x6c]
  402102:	mov    ebx,DWORD PTR [ebp-0x88]
  402108:	sub    eax,edx
  40210a:	xor    ebx,esi
  40210c:	xor    edx,edx
  40210e:	add    ebx,edi
  402110:	div    ebx
  402112:	mov    DWORD PTR [ebp+0xc],eax
  402115:	mov    eax,DWORD PTR [ebp-0x8c]
  40211b:	mov    edx,DWORD PTR [ebp+0xc]
  40211e:	xor    eax,esi
  402120:	add    eax,edi
  402122:	cmp    edx,eax
  402124:	jbe    0x402137
  40212a:	mov    eax,DWORD PTR [ebp-0x8c]
  402130:	xor    eax,esi
  402132:	add    eax,edi
  402134:	mov    DWORD PTR [ebp+0xc],eax
  402137:	mov    eax,DWORD PTR [ebp-0x88]
  40213d:	mov    edx,DWORD PTR [ebp+0xc]
  402140:	xor    eax,esi
  402142:	add    eax,edi
  402144:	imul   eax,edx
  402147:	mov    DWORD PTR [ebp+0xc],eax
  40214a:	mov    eax,DWORD PTR [ebp-0x68]
  40214d:	mov    edx,DWORD PTR [ebp+0xc]
  402150:	xor    eax,esi
  402152:	add    eax,edi
  402154:	cmp    edx,eax
  402156:	je     0x4022bf
  40215c:	mov    eax,DWORD PTR [ebp+0xc]
  40215f:	mov    DWORD PTR [ebp-0x28],eax
  402162:	mov    eax,DWORD PTR [ebp+0x10]
  402165:	add    eax,DWORD PTR [ebp-0x80]
  402168:	mov    DWORD PTR [ebp-0x48],0xf89c85b0
  40216f:	mov    DWORD PTR [ebp-0x44],eax
  402172:	mov    eax,0xf89c85b1
  402177:	mov    DWORD PTR [ebp-0x7c],eax
  40217a:	mov    DWORD PTR [ebp-0x74],0xf89c85b2
  402181:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402188:	mov    DWORD PTR [ebp-0x3c],eax
  40218b:	mov    eax,DWORD PTR [ebp-0x48]
  40218e:	xor    eax,esi
  402190:	add    eax,edi
  402192:	jmp    0x40227b
  402197:	mov    DWORD PTR [ebp-0x98],0xf89c85b9
  4021a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4021a4:	mov    edx,DWORD PTR [ebp+0xc]
  4021a7:	xor    eax,esi
  4021a9:	add    eax,edi
  4021ab:	imul   eax,edx
  4021ae:	mov    edx,DWORD PTR [ebp-0x44]
  4021b1:	mov    al,BYTE PTR [eax+edx*1]
  4021b4:	mov    BYTE PTR [ebp-0x1],al
  4021b7:	mov    eax,DWORD PTR [ebp-0x3c]
  4021ba:	mov    edx,DWORD PTR [ebp+0xc]
  4021bd:	xor    eax,esi
  4021bf:	add    eax,edi
  4021c1:	imul   eax,edx
  4021c4:	mov    edx,DWORD PTR [ebp-0x74]
  4021c7:	xor    edx,esi
  4021c9:	add    eax,edx
  4021cb:	mov    edx,DWORD PTR [ebp-0x44]
  4021ce:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  4021d6:	mov    edx,DWORD PTR [ebp-0x98]
  4021dc:	xor    edx,esi
  4021de:	lea    eax,[edx+eax*1+0x3272dc]
  4021e5:	movzx  edx,BYTE PTR [ebp-0x1]
  4021e9:	xor    edx,eax
  4021eb:	mov    BYTE PTR [ebp-0x1],dl
  4021ee:	mov    al,BYTE PTR [ebp-0x1]
  4021f1:	mov    edx,DWORD PTR [ebp-0x3c]
  4021f4:	mov    ebx,DWORD PTR [ebp+0xc]
  4021f7:	xor    edx,esi
  4021f9:	add    edx,edi
  4021fb:	imul   edx,ebx
  4021fe:	mov    ebx,DWORD PTR [ebp-0x44]
  402201:	mov    BYTE PTR [edx+ebx*1],al
  402204:	mov    eax,DWORD PTR [ebp-0x3c]
  402207:	mov    edx,DWORD PTR [ebp+0xc]
  40220a:	xor    eax,esi
  40220c:	add    eax,edi
  40220e:	imul   eax,edx
  402211:	mov    edx,DWORD PTR [ebp-0x44]
  402214:	mov    al,BYTE PTR [eax+edx*1]
  402217:	mov    BYTE PTR [ebp-0x1],al
  40221a:	mov    eax,DWORD PTR [ebp-0x3c]
  40221d:	mov    edx,DWORD PTR [ebp+0xc]
  402220:	xor    eax,esi
  402222:	add    eax,edi
  402224:	imul   eax,edx
  402227:	mov    edx,DWORD PTR [ebp-0x7c]
  40222a:	xor    edx,esi
  40222c:	add    eax,edx
  40222e:	mov    edx,DWORD PTR [ebp-0x44]
  402231:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  402239:	mov    edx,DWORD PTR [ebp-0xc4]
  40223f:	xor    edx,esi
  402241:	lea    eax,[edx+eax*1+0x3272dc]
  402248:	movzx  edx,BYTE PTR [ebp-0x1]
  40224c:	xor    edx,eax
  40224e:	mov    BYTE PTR [ebp-0x1],dl
  402251:	mov    al,BYTE PTR [ebp-0x1]
  402254:	mov    edx,DWORD PTR [ebp-0x3c]
  402257:	mov    ebx,DWORD PTR [ebp+0xc]
  40225a:	xor    edx,esi
  40225c:	add    edx,edi
  40225e:	imul   edx,ebx
  402261:	mov    ebx,DWORD PTR [ebp-0x44]
  402264:	mov    BYTE PTR [edx+ebx*1],al
  402267:	mov    eax,DWORD PTR [ebp-0x10]
  40226a:	mov    edx,DWORD PTR [ebp-0x7c]
  40226d:	xor    eax,esi
  40226f:	xor    edx,esi
  402271:	add    eax,edi
  402273:	add    edx,edi
  402275:	imul   eax,edx
  402278:	add    eax,DWORD PTR [ebp+0xc]
  40227b:	mov    DWORD PTR [ebp+0xc],eax
  40227e:	mov    eax,DWORD PTR [ebp+0xc]
  402281:	mov    edx,DWORD PTR [ebp-0x28]
  402284:	cmp    edx,eax
  402286:	jb     0x402197
  40228c:	mov    eax,DWORD PTR [ebp-0x7c]
  40228f:	mov    edx,DWORD PTR [ebp-0x28]
  402292:	xor    eax,esi
  402294:	add    eax,edi
  402296:	imul   eax,edx
  402299:	mov    edx,DWORD PTR [ebp-0x48]
  40229c:	xor    edx,esi
  40229e:	add    edx,edi
  4022a0:	or     eax,edx
  4022a2:	mov    edx,DWORD PTR [ebp-0x2c]
  4022a5:	xor    edx,esi
  4022a7:	add    eax,edx
  4022a9:	mov    edx,DWORD PTR [ebp-0x2c]
  4022ac:	xor    edx,esi
  4022ae:	add    eax,edx
  4022b0:	mov    edx,DWORD PTR [ebp+0x10]
  4022b3:	lea    eax,[eax+edx*1+0x64e5b8]
  4022ba:	jmp    0x4022ce
  4022bf:	mov    eax,DWORD PTR [ebp-0x2c]
  4022c2:	mov    edx,DWORD PTR [ebp+0x10]
  4022c5:	xor    eax,esi
  4022c7:	lea    eax,[eax+edx*1+0x3272dc]
  4022ce:	mov    DWORD PTR [ebp+0x10],eax
  4022d1:	jmp    0x4020d8
  4022d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4022d9:	mov    edx,DWORD PTR [ebp-0x18]
  4022dc:	xor    edx,esi
  4022de:	mov    ebx,0xf89c85b0
  4022e3:	lea    ecx,[ecx+edx*1+0x3272dc]
  4022ea:	lea    edx,[ecx-0x3272dc]
  4022f0:	xor    edx,esi
  4022f2:	cmp    edx,0xf89c95b0
  4022f8:	jne    0x402077
  4022fe:	mov    ecx,DWORD PTR [ebp-0x20]
  402301:	xor    ecx,esi
  402303:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40230a:	mov    BYTE PTR [ebp+0xf],cl
  40230d:	mov    ecx,DWORD PTR [ebp-0x18]
  402310:	mov    edx,DWORD PTR [ebp-0x20]
  402313:	xor    ecx,esi
  402315:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40231c:	xor    edx,esi
  40231e:	mov    BYTE PTR [edx+eax*1+0x3272dc],cl
  402325:	mov    ecx,DWORD PTR [ebp-0x18]
  402328:	mov    dl,BYTE PTR [ebp+0xf]
  40232b:	xor    ecx,esi
  40232d:	mov    BYTE PTR [ecx+eax*1+0x3272dc],dl
  402334:	mov    eax,DWORD PTR [ebp-0x18]
  402337:	mov    eax,DWORD PTR [ebp-0x8]
  40233a:	xor    eax,esi
  40233c:	add    eax,edi
  40233e:	mov    ds:0x416438,eax
  402343:	mov    eax,DWORD PTR [ebp-0x8]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	mov    ds:0x416430,eax
  40234f:	lea    eax,[ebp-0x40]
  402352:	mov    DWORD PTR [ebp-0xc0],eax
  402358:	lea    eax,[ebp+0x4]
  40235b:	mov    DWORD PTR [ebp-0x40],eax
  40235e:	mov    eax,DWORD PTR [ebp-0x40]
  402361:	test   eax,eax
  402363:	je     0x402663
  402369:	mov    eax,ds:0x4163b4
  40236e:	mov    DWORD PTR [ebp+0xc],0xf152c39
  402375:	mov    DWORD PTR [ebp+0xc],0x712ed0e
  40237c:	mov    DWORD PTR [ebp+0xc],0x373fc28
  402383:	mov    DWORD PTR [ebp+0xc],0x72670a18
  40238a:	mov    DWORD PTR [ebp+0x10],eax
  40238d:	mov    eax,ds:0x4164c0
  402392:	mov    DWORD PTR [ebp-0xac],eax
  402398:	and    DWORD PTR [ebp-0x90],0x0
  40239f:	mov    DWORD PTR [ebp+0xc],ebx
  4023a2:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  4023a9:	mov    eax,DWORD PTR [ebp-0x58]
  4023ac:	mov    ecx,DWORD PTR [ebp-0x58]
  4023af:	xor    eax,ecx
  4023b1:	mov    DWORD PTR [ebp-0x58],eax
  4023b4:	or     DWORD PTR [ebp-0x58],0xf89cb5b0
  4023bb:	mov    eax,DWORD PTR [ebp-0x70]
  4023be:	mov    ecx,DWORD PTR [ebp-0x70]
  4023c1:	xor    eax,ecx
  4023c3:	mov    DWORD PTR [ebp-0x70],eax
  4023c6:	add    DWORD PTR [ebp-0x70],0xf89f05b0
  4023cd:	mov    eax,DWORD PTR [ebp-0x50]
  4023d0:	mov    ecx,DWORD PTR [ebp-0x50]
  4023d3:	xor    eax,ecx
  4023d5:	mov    DWORD PTR [ebp-0x50],eax
  4023d8:	add    DWORD PTR [ebp-0x50],0xf89c85f0
  4023df:	mov    eax,DWORD PTR [ebp-0x64]
  4023e2:	mov    ecx,DWORD PTR [ebp-0x64]
  4023e5:	xor    eax,ecx
  4023e7:	mov    DWORD PTR [ebp-0x64],eax
  4023ea:	add    DWORD PTR [ebp-0x64],0xf89c85d0
  4023f1:	mov    eax,DWORD PTR [ebp-0x4c]
  4023f4:	mov    ecx,DWORD PTR [ebp-0x4c]
  4023f7:	xor    eax,ecx
  4023f9:	mov    DWORD PTR [ebp-0x4c],eax
  4023fc:	mov    eax,DWORD PTR [ebp+0xc]
  4023ff:	mov    ecx,DWORD PTR [ebp-0x4c]
  402402:	xor    eax,esi
  402404:	add    eax,edi
  402406:	xor    eax,ecx
  402408:	mov    DWORD PTR [ebp-0x4c],eax
  40240b:	mov    eax,DWORD PTR [ebp-0x30]
  40240e:	mov    ecx,DWORD PTR [ebp-0x30]
  402411:	sub    eax,ecx
  402413:	mov    DWORD PTR [ebp-0x30],eax
  402416:	add    DWORD PTR [ebp-0x30],0xf89c85bd
  40241d:	mov    al,BYTE PTR [ebp-0x2]
  402420:	movzx  ecx,BYTE PTR [ebp-0x2]
  402424:	movzx  eax,al
  402427:	sub    eax,ecx
  402429:	mov    BYTE PTR [ebp-0x2],al
  40242c:	movzx  eax,BYTE PTR [ebp-0x2]
  402430:	xor    eax,0xffffff85
  402433:	mov    BYTE PTR [ebp-0x2],al
  402436:	mov    eax,DWORD PTR [ebp+0xc]
  402439:	xor    eax,esi
  40243b:	add    eax,edi
  40243d:	mov    DWORD PTR [ebp-0x4c],eax
  402440:	lea    eax,[ebp-0x9c]
  402446:	mov    DWORD PTR [ebp-0xa0],eax
  40244c:	lea    eax,[ebp-0xa0]
  402452:	mov    DWORD PTR [ebp-0x94],eax
  402458:	lea    eax,[ebp-0x94]
  40245e:	mov    DWORD PTR [ebp-0x38],eax
  402461:	lea    eax,[ebp-0x38]
  402464:	mov    DWORD PTR [ebp-0xb4],eax
  40246a:	mov    eax,DWORD PTR [ebp-0x50]
  40246d:	xor    eax,esi
  40246f:	add    eax,edi
  402471:	push   eax
  402472:	mov    eax,DWORD PTR [ebp-0x58]
  402475:	xor    eax,esi
  402477:	add    eax,edi
  402479:	push   eax
  40247a:	mov    eax,DWORD PTR [ebp-0x30]
  40247d:	xor    eax,esi
  40247f:	add    eax,edi
  402481:	push   eax
  402482:	lea    eax,[ebp-0x14c]
  402488:	push   eax
  402489:	push   DWORD PTR [ebp+0xc]
  40248c:	push   DWORD PTR [ebp-0x28]
  40248f:	call   0x407c50
  402494:	test   eax,eax
  402496:	je     0x4024ca
  40249c:	lea    eax,[ebp-0x14c]
  4024a2:	push   eax
  4024a3:	mov    eax,DWORD PTR [ebp-0x28]
  4024a6:	xor    eax,esi
  4024a8:	add    eax,edi
  4024aa:	push   eax
  4024ab:	mov    eax,DWORD PTR [ebp+0x10]
  4024ae:	add    eax,0xaa
  4024b3:	push   eax
  4024b4:	mov    eax,DWORD PTR [ebp+0x10]
  4024b7:	mov    eax,DWORD PTR [eax+0x198]
  4024bd:	push   DWORD PTR [eax]
  4024bf:	call   0x402798
  4024c4:	mov    DWORD PTR [ebp-0x9c],eax
  4024ca:	lea    eax,[ebp+0x4]
  4024cd:	mov    DWORD PTR [ebp-0x90],eax
  4024d3:	mov    eax,DWORD PTR [ebp-0x38]
  4024d6:	mov    eax,DWORD PTR [eax]
  4024d8:	mov    eax,DWORD PTR [eax]
  4024da:	mov    eax,DWORD PTR [eax]
  4024dc:	test   eax,eax
  4024de:	je     0x402565
  4024e4:	lea    eax,[ebp-0x34]
  4024e7:	mov    DWORD PTR [ebp-0xbc],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0xac]
  4024f3:	mov    DWORD PTR [ebp-0x34],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x38]
  4024f9:	mov    eax,DWORD PTR [eax]
  4024fb:	mov    eax,DWORD PTR [eax]
  4024fd:	mov    eax,DWORD PTR [eax]
  4024ff:	sub    DWORD PTR [ebp-0x34],eax
  402502:	mov    ecx,DWORD PTR [ebp-0x30]
  402505:	xor    ecx,esi
  402507:	mov    eax,0xffcd8d24
  40250c:	sub    eax,ecx
  40250e:	add    DWORD PTR [ebp-0x34],eax
  402511:	mov    eax,DWORD PTR [ebp-0x34]
  402514:	mov    ecx,DWORD PTR [ebp-0x38]
  402517:	mov    ecx,DWORD PTR [ecx]
  402519:	mov    ecx,DWORD PTR [ecx]
  40251b:	mov    ecx,DWORD PTR [ecx]
  40251d:	mov    DWORD PTR [ecx+0x1],eax
  402520:	mov    al,BYTE PTR [ebp-0x2]
  402523:	mov    ecx,DWORD PTR [ebp-0x38]
  402526:	mov    ecx,DWORD PTR [ecx]
  402528:	mov    ecx,DWORD PTR [ecx]
  40252a:	mov    ecx,DWORD PTR [ecx]
  40252c:	push   DWORD PTR [ebp+0x10]
  40252f:	xor    al,0x70
  402531:	sub    al,0xc
  402533:	mov    BYTE PTR [ecx],al
  402535:	mov    eax,ds:0x416230
  40253a:	push   DWORD PTR [eax]
  40253c:	push   DWORD PTR ds:0x41648c
  402542:	push   DWORD PTR ds:0x416238
  402548:	push   DWORD PTR ds:0x41646c
  40254e:	push   DWORD PTR ds:0x416510
  402554:	push   DWORD PTR [ebp-0x28]
  402557:	push   DWORD PTR [ebp+0xc]
  40255a:	mov    eax,DWORD PTR [ebp-0x38]
  40255d:	mov    eax,DWORD PTR [eax]
  40255f:	mov    eax,DWORD PTR [eax]
  402561:	mov    eax,DWORD PTR [eax]
  402563:	call   eax
  402565:	mov    eax,DWORD PTR [ebp-0x24]
  402568:	mov    eax,DWORD PTR [ebp-0xc]
  40256b:	mov    eax,DWORD PTR [ebp-0x8]
  40256e:	mov    DWORD PTR [ebp+0xc],eax
  402571:	mov    eax,eax
  402573:	mov    eax,ds:0x4163b4
  402578:	mov    eax,DWORD PTR [eax+0x1c8]
  40257e:	mov    eax,DWORD PTR [eax]
  402580:	cdq    
  402581:	mov    ebx,eax
  402583:	mov    eax,0xfabdbeef
  402588:	add    ebx,eax
  40258a:	adc    edx,0xffffffff
  40258d:	and    DWORD PTR [ebp-0x10],0x0
  402591:	xor    edx,0x0
  402594:	mov    DWORD PTR [ebp-0x80],edx
  402597:	mov    edx,DWORD PTR [ebp+0xc]
  40259a:	mov    DWORD PTR [ebp-0x14],edx
  40259d:	mov    ecx,0x8a29a125
  4025a2:	xor    ebx,ecx
  4025a4:	add    DWORD PTR [ebp-0x14],eax
  4025a7:	mov    edx,DWORD PTR [ebp-0x14]
  4025aa:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025ae:	xor    edx,ecx
  4025b0:	mov    DWORD PTR [ebp-0x78],edx
  4025b3:	mov    edx,DWORD PTR [ebp-0x10]
  4025b6:	xor    edx,0x0
  4025b9:	mov    DWORD PTR [ebp-0x74],edx
  4025bc:	cmp    DWORD PTR [ebp-0x78],ebx
  4025bf:	jne    0x4025d1
  4025c5:	mov    edx,DWORD PTR [ebp-0x80]
  4025c8:	cmp    DWORD PTR [ebp-0x74],edx
  4025cb:	je     0x402600
  4025d1:	mov    edx,DWORD PTR ds:0x4163b4
  4025d7:	mov    edx,DWORD PTR [edx+0x1c0]
  4025dd:	mov    edx,DWORD PTR [edx]
  4025df:	xor    ebx,ebx
  4025e1:	add    edx,eax
  4025e3:	adc    ebx,0xffffffff
  4025e6:	xor    edx,ecx
  4025e8:	xor    ebx,0x0
  4025eb:	cmp    edx,0x70941fd5
  4025f1:	jne    0x402663
  4025f7:	cmp    ebx,0xffffffff
  4025fa:	jne    0x402663
  402600:	mov    edx,DWORD PTR ds:0x416430
  402606:	mov    ebx,DWORD PTR ds:0x416438
  40260c:	xor    edx,ebx
  40260e:	mov    DWORD PTR ds:0x416430,edx
  402614:	mov    edx,DWORD PTR [ebp-0x40]
  402617:	mov    ebx,DWORD PTR ds:0x416430
  40261d:	add    ebx,DWORD PTR [edx]
  40261f:	mov    edx,DWORD PTR [ebp-0x40]
  402622:	mov    DWORD PTR [edx],ebx
  402624:	mov    edx,DWORD PTR [ebp+0xc]
  402627:	xor    esi,edx
  402629:	mov    edx,DWORD PTR ds:0x416430
  40262f:	add    esi,edi
  402631:	xor    ebx,ebx
  402633:	add    esi,eax
  402635:	adc    ebx,0xffffffff
  402638:	xor    edi,edi
  40263a:	xor    esi,ecx
  40263c:	xor    ebx,0x0
  40263f:	add    edx,eax
  402641:	adc    edi,0xffffffff
  402644:	xor    edx,ecx
  402646:	xor    edi,0x0
  402649:	cmp    edx,esi
  40264b:	jne    0x402663
  402651:	cmp    edi,ebx
  402653:	jne    0x402663
  402659:	mov    eax,ds:0x416430
  40265e:	mov    ds:0x416438,eax
  402663:	mov    eax,ds:0x4163b4
  402668:	push   0x4
  40266a:	add    eax,0x1cc
  40266f:	push   eax
  402670:	lea    eax,[ebp-0x24]
  402673:	push   eax
  402674:	call   0x40a25b
  402679:	mov    eax,DWORD PTR [ebp-0x24]
  40267c:	mov    eax,DWORD PTR [eax]
  40267e:	pop    edi
  40267f:	pop    esi
  402680:	pop    ebx
  402681:	leave  
  402682:	ret    0xc
  402685:	push   ebp
  402686:	mov    ebp,esp
  402688:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  402692:	mov    DWORD PTR ds:0x41400c,0x56b8
  40269c:	pop    ebp
  40269d:	jmp    0x401000
  4026a2:	xor    eax,eax
  4026a4:	inc    eax
  4026a5:	ret    
  4026a6:	push   ebp
  4026a7:	mov    ebp,esp
  4026a9:	push   ecx
  4026aa:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4026b1:	mov    DWORD PTR ds:0x414008,0x3fb4
  4026bb:	mov    eax,DWORD PTR [ebp+0x8]
  4026be:	add    DWORD PTR ds:0x413bf6,0x2653
  4026c8:	mov    al,BYTE PTR [eax]
  4026ca:	add    al,0xc
  4026cc:	xor    al,0x70
  4026ce:	cmp    al,0x29
  4026d0:	mov    DWORD PTR ds:0x413cf0,0x3ac2
  4026da:	jne    0x402787
  4026e0:	add    edx,DWORD PTR ds:0x41401c
  4026e6:	mov    eax,DWORD PTR [ebp+0x8]
  4026e9:	and    DWORD PTR ds:0x413c84,0x0
  4026f3:	jmp    0x402707
  4026f8:	xor    edx,edx
  4026fa:	xor    edx,DWORD PTR ds:0x413c84
  402700:	inc    edx
  402701:	mov    DWORD PTR ds:0x413c84,edx
  402707:	cmp    DWORD PTR ds:0x413c84,0x12
  40270e:	jae    0x40274b
  402714:	cmp    DWORD PTR ds:0x413c84,0x7
  40271b:	jne    0x40272c
  402721:	push   0x4160b3
  402726:	call   DWORD PTR ds:0x41677c
  40272c:	cmp    DWORD PTR ds:0x413c84,0x6
  402733:	jne    0x402746
  402739:	mov    edx,DWORD PTR ds:0x413c84
  40273f:	inc    edx
  402740:	mov    DWORD PTR ds:0x413c84,edx
  402746:	jmp    0x4026f8
  40274b:	mov    ecx,DWORD PTR [ebp+0x8]
  40274e:	add    ecx,DWORD PTR [eax+0x3c]
  402751:	mov    edx,0x7510894
  402756:	mov    DWORD PTR [ebp+0x8],ecx
  402759:	mov    eax,DWORD PTR [ebp-0x4]
  40275c:	xor    eax,edx
  40275e:	push   esi
  40275f:	mov    esi,DWORD PTR [ebp+0x8]
  402762:	mov    ecx,0x3272dc
  402767:	add    eax,ecx
  402769:	cmp    DWORD PTR [esi+0x54],eax
  40276c:	pop    esi
  40276d:	je     0x40277b
  402773:	mov    eax,DWORD PTR [ebp+0x8]
  402776:	jmp    0x402794
  40277b:	mov    eax,DWORD PTR [ebp-0x4]
  40277e:	xor    eax,edx
  402780:	add    eax,ecx
  402782:	jmp    0x402794
  402787:	mov    eax,DWORD PTR [ebp-0x4]
  40278a:	xor    eax,0x7510894
  40278f:	add    eax,0x3272dc
  402794:	leave  
  402795:	ret    0x4
  402798:	push   ebp
  402799:	mov    ebp,esp
  40279b:	sub    esp,0x78
  40279e:	xor    DWORD PTR ds:0x413c1e,0x50b0
  4027a8:	push   ebx
  4027a9:	adc    DWORD PTR ds:0x413d30,0x7f7d
  4027b3:	push   esi
  4027b4:	add    DWORD PTR ds:0x413d30,0x413cf0
  4027be:	push   edi
  4027bf:	push   0x1f
  4027c1:	and    DWORD PTR ds:0x413bf6,0x413c80
  4027cb:	lea    eax,[ebp-0x78]
  4027ce:	push   eax
  4027cf:	push   0x0
  4027d1:	adc    DWORD PTR ds:0x413d34,0x413c80
  4027db:	call   DWORD PTR ds:0x41676c
  4027e1:	push   0x97898797
  4027e6:	call   DWORD PTR ds:0x416754
  4027ec:	sub    ecx,ecx
  4027ee:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4027f5:	xor    DWORD PTR ds:0x414008,0x58a1
  4027ff:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  402806:	mov    ecx,DWORD PTR [ebp-0x4]
  402809:	mov    ebx,0x7510894
  40280e:	xor    ecx,ebx
  402810:	mov    eax,0x3272dc
  402815:	xor    DWORD PTR ds:0x413c6c,0x3fbb
  40281f:	add    ecx,eax
  402821:	mov    DWORD PTR [ebp-0x1c],ecx
  402824:	sbb    DWORD PTR ds:0x413d34,edi
  40282a:	mov    ecx,DWORD PTR [ebp+0x14]
  40282d:	test   ecx,ecx
  40282f:	je     0x402847
  402835:	mov    ecx,DWORD PTR [ebp+0x14]
  402838:	mov    ecx,DWORD PTR [ecx]
  40283a:	or     DWORD PTR ds:0x413c0a,0x414000
  402844:	mov    DWORD PTR [ebp-0x1c],ecx
  402847:	mov    DWORD PTR ds:0x413d34,0x1f
  402851:	cmp    DWORD PTR ds:0x413d34,0x0
  402858:	je     0x40288f
  40285e:	cmp    DWORD PTR ds:0x413d34,0x22
  402865:	jne    0x40287d
  40286b:	push   0x414010
  402870:	push   0x0
  402872:	push   0x416017
  402877:	call   DWORD PTR ds:0x416780
  40287d:	mov    ecx,DWORD PTR ds:0x413d34
  402883:	dec    ecx
  402884:	mov    DWORD PTR ds:0x413d34,ecx
  40288a:	jmp    0x402851
  40288f:	mov    ecx,0x7665
  402894:	sbb    edi,edi
  402896:	imul   edx,eax
  402899:	and    DWORD PTR ds:0x413c80,0x0
  4028a3:	mov    esi,DWORD PTR ds:0x413c80
  4028a9:	inc    esi
  4028aa:	mov    DWORD PTR ds:0x413c80,esi
  4028b0:	cmp    DWORD PTR ds:0x413c80,0xc
  4028b7:	jne    0x4028cb
  4028bd:	push   0x413ce4
  4028c2:	push   DWORD PTR [ebp-0x20]
  4028c5:	call   DWORD PTR ds:0x416784
  4028cb:	cmp    DWORD PTR ds:0x413c80,0xb
  4028d2:	jne    0x4028e5
  4028d8:	mov    esi,DWORD PTR ds:0x413c80
  4028de:	inc    esi
  4028df:	mov    DWORD PTR ds:0x413c80,esi
  4028e5:	cmp    DWORD PTR ds:0x413c80,0x1c
  4028ec:	jb     0x4028a3
  4028f2:	mov    esi,0x76532
  4028f7:	mov    DWORD PTR ds:0x413d30,0x639a
  402901:	add    edx,ecx
  402903:	movzx  edi,BYTE PTR ds:0x413ce4
  40290a:	and    DWORD PTR ds:0x413bfe,edi
  402910:	xchg   esi,ecx
  402912:	sbb    DWORD PTR ds:0x413c80,edi
  402918:	mov    edi,0x54354
  40291d:	mov    DWORD PTR ds:0x413d34,0x5e6f
  402927:	sub    edx,edi
  402929:	mov    ecx,DWORD PTR [ebp-0x4]
  40292c:	xor    ecx,ebx
  40292e:	mov    DWORD PTR ds:0x413c70,0x13
  402938:	cmp    DWORD PTR ds:0x413c70,0x0
  40293f:	je     0x40299c
  402945:	cmp    DWORD PTR ds:0x413c70,0x5
  40294c:	jne    0x402962
  402952:	push   0x7f69
  402957:	push   0x41606e
  40295c:	call   DWORD PTR ds:0x41678c
  402962:	cmp    DWORD PTR ds:0x413c70,0x6
  402969:	jne    0x40297c
  40296f:	mov    esi,DWORD PTR ds:0x413c70
  402975:	dec    esi
  402976:	mov    DWORD PTR ds:0x413c70,esi
  40297c:	mov    esi,DWORD PTR ds:0x413c70
  402982:	dec    esi
  402983:	mov    DWORD PTR ds:0x413c70,esi
  402989:	jmp    0x402938
  40298e:	mov    esi,DWORD PTR ds:0x413cb0
  402994:	mov    esi,DWORD PTR [esi]
  402996:	adc    DWORD PTR ds:0x414008,esi
  40299c:	add    ecx,eax
  40299e:	mov    DWORD PTR [ebp-0x8],ecx
  4029a1:	sub    ecx,ecx
  4029a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4029a6:	sub    DWORD PTR ds:0x413c80,ebx
  4029ac:	xor    ecx,ebx
  4029ae:	add    ecx,eax
  4029b0:	mov    DWORD PTR [ebp-0x24],ecx
  4029b3:	sub    ecx,0x1ce
  4029b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4029bc:	mov    esi,DWORD PTR ds:0x413c1a
  4029c2:	xor    DWORD PTR ds:0x413d1c,esi
  4029c8:	xor    ecx,ebx
  4029ca:	add    ecx,eax
  4029cc:	add    DWORD PTR ds:0x413d34,edi
  4029d2:	mov    DWORD PTR [ebp-0x30],ecx
  4029d5:	movzx  esi,BYTE PTR ds:0x414010
  4029dc:	sbb    esi,DWORD PTR ds:0x413bfe
  4029e2:	mov    DWORD PTR ds:0x414010,esi
  4029e8:	mov    esi,DWORD PTR [ebp-0x4]
  4029eb:	adc    ecx,DWORD PTR ds:0x413c16
  4029f1:	xor    esi,ebx
  4029f3:	xor    DWORD PTR ds:0x41401c,ecx
  4029f9:	add    esi,eax
  4029fb:	and    DWORD PTR ds:0x413c84,0x0
  402a05:	jmp    0x402a17
  402a0a:	mov    ecx,DWORD PTR ds:0x413c84
  402a10:	inc    ecx
  402a11:	mov    DWORD PTR ds:0x413c84,ecx
  402a17:	cmp    DWORD PTR ds:0x413c84,0x19
  402a1e:	jae    0x402af3
  402a24:	cmp    DWORD PTR ds:0x413c84,0xd
  402a2b:	jne    0x402a51
  402a31:	push   0x7c39
  402a36:	push   0x413c1e
  402a3b:	push   0x8717
  402a40:	push   0x416025
  402a45:	push   DWORD PTR [ebp-0x28]
  402a48:	push   DWORD PTR [ebp-0x10]
  402a4b:	call   DWORD PTR ds:0x416790
  402a51:	cmp    DWORD PTR ds:0x413c84,0xc
  402a58:	jne    0x402a6b
  402a5e:	mov    ecx,DWORD PTR ds:0x413c84
  402a64:	inc    ecx
  402a65:	mov    DWORD PTR ds:0x413c84,ecx
  402a6b:	jmp    0x402a0a
  402a70:	mov    DWORD PTR ds:0x413d30,0x12
  402a7a:	cmp    DWORD PTR ds:0x413d30,0x0
  402a81:	je     0x402af3
  402a87:	cmp    DWORD PTR ds:0x413d30,0x21
  402a8e:	jne    0x402a9f
  402a94:	push   0x1529
  402a99:	call   DWORD PTR ds:0x416798
  402a9f:	mov    ecx,DWORD PTR ds:0x413d30
  402aa5:	dec    ecx
  402aa6:	mov    DWORD PTR ds:0x413d30,ecx
  402aac:	jmp    0x402a7a
  402ab1:	and    DWORD PTR ds:0x413d34,0x0
  402abb:	mov    ecx,DWORD PTR ds:0x413d34
  402ac1:	inc    ecx
  402ac2:	mov    DWORD PTR ds:0x413d34,ecx
  402ac8:	cmp    DWORD PTR ds:0x413d34,0x29
  402acf:	jne    0x402ae0
  402ad5:	push   0x413c12
  402ada:	call   DWORD PTR ds:0x41679c
  402ae0:	cmp    DWORD PTR ds:0x413d34,0x19
  402ae7:	jb     0x402abb
  402aed:	or     ecx,DWORD PTR ds:0x413c0a
  402af3:	mov    ecx,DWORD PTR [ebp-0x24]
  402af6:	or     DWORD PTR ds:0x413c88,0x413c12
  402b00:	sub    ecx,eax
  402b02:	add    DWORD PTR ds:0x413c1e,0x57cd
  402b0c:	lea    edx,[esi-0x3272dc]
  402b12:	xor    ecx,ebx
  402b14:	and    DWORD PTR ds:0x413ce8,0xb77
  402b1e:	xor    edx,ebx
  402b20:	mov    DWORD PTR ds:0x413bfe,0x29ac
  402b2a:	cmp    edx,ecx
  402b2c:	mov    DWORD PTR ds:0x413ce4,0x2b4b
  402b36:	je     0x402e02
  402b3c:	sub    ecx,DWORD PTR ds:0x413d34
  402b42:	mov    ecx,DWORD PTR [ebp-0x4]
  402b45:	xor    DWORD PTR ds:0x413bfe,0x413c84
  402b4f:	xor    ecx,ebx
  402b51:	adc    DWORD PTR ds:0x413bf6,0x7b2
  402b5b:	add    ecx,eax
  402b5d:	cmp    esi,ecx
  402b5f:	jne    0x402ddf
  402b65:	or     DWORD PTR ds:0x413cf0,0x413c1e
  402b6f:	push   DWORD PTR [ebp+0x8]
  402b72:	call   0x4026a6
  402b77:	mov    DWORD PTR ds:0x414004,0x1c
  402b81:	cmp    DWORD PTR ds:0x414004,0x0
  402b88:	je     0x402bc3
  402b8e:	cmp    DWORD PTR ds:0x414004,0x2b
  402b95:	jne    0x402ba9
  402b9b:	push   0x413c6c
  402ba0:	push   DWORD PTR [ebp-0x24]
  402ba3:	call   DWORD PTR ds:0x41675c
  402ba9:	xor    ecx,ecx
  402bab:	or     ecx,DWORD PTR ds:0x414004
  402bb1:	dec    ecx
  402bb2:	mov    DWORD PTR ds:0x414004,ecx
  402bb8:	jmp    0x402b81
  402bbd:	sbb    DWORD PTR ds:0x413d34,ecx
  402bc3:	mov    DWORD PTR [ebp-0x18],eax
  402bc6:	and    DWORD PTR ds:0x413d28,0x0
  402bd0:	jmp    0x402be2
  402bd5:	mov    ecx,DWORD PTR ds:0x413d28
  402bdb:	inc    ecx
  402bdc:	mov    DWORD PTR ds:0x413d28,ecx
  402be2:	cmp    DWORD PTR ds:0x413d28,0x16
  402be9:	jae    0x402c2e
  402bef:	cmp    DWORD PTR ds:0x413d28,0x5
  402bf6:	jne    0x402c0f
  402bfc:	push   DWORD PTR [ebp-0x10]
  402bff:	push   0x41400c
  402c04:	push   0x2409
  402c09:	call   DWORD PTR ds:0x416760
  402c0f:	cmp    DWORD PTR ds:0x413d28,0x4
  402c16:	jne    0x402c29
  402c1c:	mov    ecx,DWORD PTR ds:0x413d28
  402c22:	inc    ecx
  402c23:	mov    DWORD PTR ds:0x413d28,ecx
  402c29:	jmp    0x402bd5
  402c2e:	mov    eax,DWORD PTR [ebp-0x4]
  402c31:	sub    DWORD PTR ds:0x413ce4,0x168d
  402c3b:	mov    ecx,DWORD PTR [ebp-0x18]
  402c3e:	inc    edi
  402c3f:	xor    eax,ebx
  402c41:	and    DWORD PTR ds:0x413c88,0x0
  402c4b:	jmp    0x402c5d
  402c50:	mov    edi,DWORD PTR ds:0x413c88
  402c56:	inc    edi
  402c57:	mov    DWORD PTR ds:0x413c88,edi
  402c5d:	cmp    DWORD PTR ds:0x413c88,0x1c
  402c64:	jae    0x402ca8
  402c6a:	cmp    DWORD PTR ds:0x413c88,0x5
  402c71:	jne    0x402c89
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	push   DWORD PTR [ebp-0x10]
  402c7d:	push   DWORD PTR [ebp-0x28]
  402c80:	push   DWORD PTR [ebp-0xc]
  402c83:	call   DWORD PTR ds:0x416764
  402c89:	cmp    DWORD PTR ds:0x413c88,0x4
  402c90:	jne    0x402ca3
  402c96:	mov    edi,DWORD PTR ds:0x413c88
  402c9c:	inc    edi
  402c9d:	mov    DWORD PTR ds:0x413c88,edi
  402ca3:	jmp    0x402c50
  402ca8:	mov    edi,0x3272dc
  402cad:	sbb    DWORD PTR ds:0x414008,0x338e
  402cb7:	add    eax,edi
  402cb9:	cmp    ecx,eax
  402cbb:	mov    DWORD PTR ds:0x413bfe,0x2c9f
  402cc5:	je     0x402e72
  402ccb:	adc    DWORD PTR ds:0x413c74,0x2cc9
  402cd5:	push   DWORD PTR [ebp-0x18]
  402cd8:	add    DWORD PTR ds:0x413c74,0x6616
  402ce2:	push   DWORD PTR [ebp+0x8]
  402ce5:	neg    DWORD PTR ds:0x413d2c
  402ceb:	call   0x407cf9
  402cf0:	mov    DWORD PTR [ebp-0x18],eax
  402cf3:	xor    DWORD PTR ds:0x413c12,ebx
  402cf9:	mov    eax,DWORD PTR [ebp-0x4]
  402cfc:	add    DWORD PTR ds:0x414008,edx
  402d02:	mov    ecx,DWORD PTR [ebp-0x18]
  402d05:	sub    DWORD PTR ds:0x413cdc,0x28ac
  402d0f:	xor    eax,ebx
  402d11:	sub    DWORD PTR ds:0x41400c,0x413ce4
  402d1b:	add    eax,edi
  402d1d:	cmp    ecx,eax
  402d1f:	je     0x402e72
  402d25:	or     DWORD PTR ds:0x414014,edi
  402d2b:	mov    eax,DWORD PTR [ebp-0x18]
  402d2e:	mov    ecx,DWORD PTR ds:0x414008
  402d34:	adc    ecx,DWORD PTR ds:0x413c7c
  402d3a:	mov    DWORD PTR ds:0x414008,ecx
  402d40:	mov    eax,DWORD PTR [eax+0x18]
  402d43:	mov    ecx,DWORD PTR ds:0x413ca4
  402d49:	mov    ecx,DWORD PTR [ecx]
  402d4b:	and    DWORD PTR ds:0x413d28,ecx
  402d51:	mov    DWORD PTR [ebp-0x24],eax
  402d54:	and    DWORD PTR ds:0x413c70,0x0
  402d5e:	mov    ecx,DWORD PTR ds:0x413c70
  402d64:	inc    ecx
  402d65:	mov    DWORD PTR ds:0x413c70,ecx
  402d6b:	cmp    DWORD PTR ds:0x413c70,0xf
  402d72:	jne    0x402d8d
  402d78:	push   0x2d13
  402d7d:	push   0x29b5
  402d82:	push   0x400000
  402d87:	call   DWORD PTR ds:0x416768
  402d8d:	cmp    DWORD PTR ds:0x413c70,0xe
  402d94:	jne    0x402da7
  402d9a:	mov    ecx,DWORD PTR ds:0x413c70
  402da0:	inc    ecx
  402da1:	mov    DWORD PTR ds:0x413c70,ecx
  402da7:	cmp    DWORD PTR ds:0x413c70,0x18
  402dae:	jb     0x402d5e
  402db4:	mov    eax,DWORD PTR [ebp-0x18]
  402db7:	mov    ecx,DWORD PTR [ebp+0x8]
  402dba:	add    ecx,DWORD PTR [eax+0x20]
  402dbd:	mov    DWORD PTR [ebp-0x2c],ecx
  402dc0:	mov    eax,DWORD PTR [ebp-0x18]
  402dc3:	mov    ecx,DWORD PTR [ebp+0x8]
  402dc6:	add    ecx,DWORD PTR [eax+0x24]
  402dc9:	mov    DWORD PTR [ebp-0x34],ecx
  402dcc:	mov    eax,DWORD PTR [ebp-0x18]
  402dcf:	mov    ecx,DWORD PTR [ebp+0x8]
  402dd2:	add    ecx,DWORD PTR [eax+0x1c]
  402dd5:	mov    eax,edi
  402dd7:	mov    DWORD PTR [ebp-0x18],ecx
  402dda:	jmp    0x402e3a
  402ddf:	mov    ecx,DWORD PTR [ebp-0x2c]
  402de2:	mov    edx,DWORD PTR [ebp+0x8]
  402de5:	add    edx,DWORD PTR [ecx+esi*4]
  402de8:	mov    DWORD PTR [ebp-0x28],edx
  402deb:	mov    ecx,DWORD PTR [ebp-0x4]
  402dee:	mov    edx,DWORD PTR [ebp-0x28]
  402df1:	xor    ecx,ebx
  402df3:	add    ecx,eax
  402df5:	cmp    edx,ecx
  402df7:	je     0x402e3a
  402dfd:	jmp    0x402e26
  402e02:	mov    ecx,DWORD PTR [ebp-0x4]
  402e05:	mov    edx,DWORD PTR [ebp-0x8]
  402e08:	xor    ecx,ebx
  402e0a:	add    ecx,eax
  402e0c:	cmp    edx,ecx
  402e0e:	je     0x402e7e
  402e14:	mov    ecx,DWORD PTR [ebp-0x4]
  402e17:	mov    edx,DWORD PTR [ebp-0x30]
  402e1a:	xor    ecx,ebx
  402e1c:	add    ecx,eax
  402e1e:	cmp    edx,ecx
  402e20:	je     0x40522e
  402e26:	lea    eax,[ebp-0x8]
  402e29:	push   eax
  402e2a:	push   DWORD PTR [ebp-0x28]
  402e2d:	push   DWORD PTR [ebp+0xc]
  402e30:	call   0x40a47a
  402e35:	mov    eax,0x3272dc
  402e3a:	mov    ecx,DWORD PTR [ebp-0x4]
  402e3d:	mov    edx,DWORD PTR [ebp-0x8]
  402e40:	xor    ecx,ebx
  402e42:	add    ecx,eax
  402e44:	cmp    edx,ecx
  402e46:	je     0x402e61
  402e4c:	mov    ecx,DWORD PTR [ebp-0x34]
  402e4f:	movzx  ecx,WORD PTR [ecx+esi*2]
  402e53:	mov    edx,DWORD PTR [ebp-0x18]
  402e56:	mov    ecx,DWORD PTR [edx+ecx*4]
  402e59:	mov    DWORD PTR [ebp-0x38],ecx
  402e5c:	jmp    0x402e02
  402e61:	mov    ecx,DWORD PTR [ebp-0x14]
  402e64:	xor    ecx,ebx
  402e66:	lea    esi,[esi+ecx*1+0x3272dc]
  402e6d:	jmp    0x4029fb
  402e72:	mov    eax,DWORD PTR [ebp-0x4]
  402e75:	xor    eax,ebx
  402e77:	add    eax,edi
  402e79:	jmp    0x405392
  402e7e:	mov    eax,DWORD PTR [ebp-0x4]
  402e81:	jmp    0x405222
  402e86:	or     al,0xe7
  402e88:	xchg   BYTE PTR [ebx-0x240e7489],cl
  402e8e:	xchg   bl,cl
  402e90:	pushf  
  402e91:	cmp    DWORD PTR ds:0x7cb72993,ebp
  402e97:	jl     0x402f15
  402e99:	jl     0x402e7b
  402e9b:	pop    edi
  402e9c:	jl     0x402f1a
  402e9e:	adc    eax,0x1921172e
  402ea3:	and    eax,0x38652f1b
  402ea8:	imul   ebp,DWORD PTR [eax+0x70],0x6d6c6c62
  402eaf:	xor    al,0xc5
  402eb1:	fsubrp st(1),st
  402eb3:	push   edx
  402eb4:	dec    edx
  402eb5:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff92
  402eb9:	bound  ebp,QWORD PTR [ebp+0x59]
  402ebc:	iret   
  402ebd:	pop    ebp
  402ebe:	dec    esp
  402ebf:	and    cl,BYTE PTR [esi+0x577887fc]
  402ec5:	dec    ebp
  402ec6:	jg     0x402eff
  402ec8:	jb     0x402e72
  402eca:	jg     0x402e6e
  402ecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ecd:	cmp    ebp,DWORD PTR [esi]
  402ecf:	jmp    FWORD PTR [eax-0x22]
  402ed2:	cld    
  402ed3:	push   ebx
  402ed4:	jg     0x402ed6
  402ed6:	in     eax,dx
  402ed7:	cmp    ebp,ecx
  402ed9:	mov    esp,0xc01387ed
  402ede:	mov    ebp,DWORD PTR [ecx]
  402ee0:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c68c]
  402ee7:	fld    QWORD PTR [esi]
  402ee9:	(bad)  
  402eea:	lock cld 
  402eec:	sub    BYTE PTR [edx],bl
  402eee:	dec    edx
  402eef:	push   cs
  402ef0:	sub    BYTE PTR [ebx+0x6a],ch
  402ef3:	mov    ecx,0x54113af
  402ef8:	test   al,0xff
  402efa:	jmp    0x34b65a48
  402eff:	retf   0xf95b
  402f02:	sbb    al,0xfc
  402f04:	jp     0x402ea7
  402f06:	arpl   bp,bx
  402f08:	call   0x8416:0x7a18b5f
  402f0f:	xor    ebx,esi
  402f11:	cmp    BYTE PTR [esi],0x74
  402f14:	jae    0x402f21
  402f16:	fsubr  QWORD PTR ds:0x33368d54
  402f1c:	push   esi
  402f1d:	jecxz  0x402eee
  402f1f:	mov    WORD PTR [ecx],gs
  402f21:	mov    DWORD PTR [edx+0x518aceb7],esi
  402f27:	out    0x45,al
  402f29:	push   esp
  402f2a:	dec    esi
  402f2b:	push   cs
  402f2c:	and    bl,dh
  402f2e:	cmp    BYTE PTR [ebx],al
  402f30:	lods   eax,DWORD PTR ds:[esi]
  402f31:	dec    ebx
  402f32:	int3   
  402f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f34:	xor    al,dl
  402f36:	push   es
  402f37:	pop    eax
  402f38:	std    
  402f39:	push   esp
  402f3a:	pop    eax
  402f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f3c:	stc    
  402f3d:	push   0xffffffbf
  402f3f:	cli    
  402f40:	inc    esp
  402f41:	push   es
  402f42:	pop    edi
  402f43:	jl     0x402f83
  402f45:	sub    DWORD PTR [edi],esp
  402f47:	and    eax,DWORD PTR [eax-0x26]
  402f4a:	fbstp  TBYTE PTR [eax+0x1f]
  402f4d:	(bad)  
  402f4e:	adc    DWORD PTR [esi-0x1a],ecx
  402f51:	jl     0x402f49
  402f53:	cmp    dh,cl
  402f55:	cdq    
  402f56:	or     BYTE PTR [edi-0x34],dl
  402f59:	dec    edx
  402f5a:	cmp    al,0x80
  402f5c:	mov    ebp,DWORD PTR [ebx-0x14]
  402f5f:	xlat   BYTE PTR ds:[ebx]
  402f60:	push   ds
  402f61:	ins    BYTE PTR es:[edi],dx
  402f62:	mov    esi,DWORD PTR [edi-0x27d5c086]
  402f68:	mov    esi,0x547f6c3c
  402f6d:	xchg   ecx,eax
  402f6e:	mov    dl,BYTE PTR [ebx+0x262a6f4c]
  402f74:	bound  esi,QWORD PTR [edi-0x68bbe7f]
  402f7a:	ss push cs
  402f7c:	sbb    DWORD PTR [edi],edx
  402f7e:	mul    DWORD PTR [edx-0xe]
  402f81:	xchg   esi,eax
  402f82:	inc    esi
  402f83:	inc    edi
  402f84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f85:	mov    ah,0xf7
  402f87:	push   DWORD PTR [edi+0x6]
  402f8a:	repz adc ecx,DWORD PTR [edx+0x2e]
  402f8e:	data16 xor dh,ah
  402f91:	or     BYTE PTR [ecx+0x79],0x27
  402f95:	das    
  402f96:	leave  
  402f97:	cmp    BYTE PTR [ebx+0x5bea998b],ah
  402f9d:	jmp    0xa60fea2f
  402fa2:	iret   
  402fa3:	fwait
  402fa4:	sub    eax,0x9ef543b0
  402fa9:	addr16 jo 0x40300c
  402fac:	nop
  402fad:	fcmovne st,st(5)
  402faf:	mov    ah,0x49
  402fb1:	scas   eax,DWORD PTR es:[edi]
  402fb2:	ins    BYTE PTR es:[edi],dx
  402fb3:	sbb    DWORD PTR [eax+edx*8],0xf0b2de99
  402fba:	das    
  402fbb:	(bad)  
  402fbc:	cwde   
  402fbd:	jo     0x403000
  402fbf:	push   eax
  402fc0:	sub    BYTE PTR [edx],bl
  402fc2:	icebp  
  402fc3:	or     al,0xe6
  402fc5:	inc    edx
  402fc7:	cdq    
  402fc8:	dec    ebp
  402fc9:	mov    esp,0x33519ccb
  402fce:	push   es
  402fcf:	cwde   
  402fd0:	fs scas al,BYTE PTR es:[edi]
  402fd2:	popa   
  402fd3:	xchg   ecx,eax
  402fd4:	jl     0x402f6e
  402fd6:	push   ebx
  402fd7:	aaa    
  402fd8:	mov    dh,0x58
  402fda:	and    dl,dh
  402fdc:	add    eax,0x34d97e59
  402fe1:	stc    
  402fe2:	fnstenv [eax]
  402fe4:	test   ecx,ebx
  402fe6:	cdq    
  402fe7:	sbb    edi,eax
  402fe9:	add    eax,0xcecaed00
  402fee:	mov    dl,0x14
  402ff0:	pushf  
  402ff1:	fild   DWORD PTR [eax]
  402ff3:	(bad)  
  402ff4:	jecxz  0x40306e
  402ff6:	or     esp,DWORD PTR ds:0xa32f5a67
  402ffc:	adc    al,0xb2
  402ffe:	sbb    BYTE PTR [eax+esi*2],dl
  403001:	sbb    ah,BYTE PTR [eax-0x40c81f4e]
  403007:	push   edx
  403008:	je     0x40303c
  40300a:	cmc    
  40300b:	retf   
  40300c:	push   ebx
  40300d:	jnp    0x402fba
  40300f:	lea    ecx,[ecx+0x8b79df1]
  403015:	push   cs
  403016:	clc    
  403017:	leave  
  403018:	push   ecx
  403019:	je     0x403059
  40301b:	packuswb mm0,mm6
  40301e:	mov    BYTE PTR [edi-0x20],bh
  403021:	rol    dh,0x37
  403024:	push   edi
  403025:	adc    al,0x29
  403027:	sub    bl,BYTE PTR [edx+0xe]
  40302a:	ss add eax,0xb614040f
  403030:	clc    
  403031:	or     BYTE PTR [esi],dh
  403033:	push   esp
  403034:	sbb    eax,0x97899348
  403039:	bound  ecx,QWORD PTR [edi]
  40303b:	sbb    al,0xf0
  40303d:	lea    eax,[eax+0x5c]
  403040:	mov    esi,0x62436070
  403045:	jo     0x402fff
  403047:	add    DWORD PTR [ecx+0x1f3628bf],0x2ec1b5a7
  403051:	adc    ah,bh
  403053:	cs fucomi st,st(5)
  403057:	rol    BYTE PTR [ecx],0xfd
  40305a:	loop   0x40307c
  40305c:	or     ch,BYTE PTR [ebp-0x11]
  40305f:	push   cs
  403060:	cmp    BYTE PTR [edx-0xc],bl
  403063:	mul    dl
  403065:	add    BYTE PTR [edi],dl
  403067:	outs   dx,DWORD PTR ds:[esi]
  403068:	adc    DWORD PTR [ecx+0x443b2823],0xbbc9324c
  403072:	xchg   esp,eax
  403073:	iret   
  403074:	or     BYTE PTR [ecx-0x571b8407],ah
  40307a:	popa   
  40307b:	mov    edx,0xfee1554f
  403080:	int    0x97
  403082:	dec    ebx
  403083:	push   es
  403084:	inc    esi
  403085:	icebp  
  403086:	mov    eax,ds:0x7f1d2fe3
  40308b:	xchg   edx,eax
  40308c:	sbb    BYTE PTR [esi+0x55],bl
  40308f:	or     BYTE PTR [ebx],al
  403091:	sahf   
  403092:	mov    cs,WORD PTR [ebx-0x5f]
  403095:	inc    eax
  403096:	mov    ds:0x951cb73a,al
  40309b:	addr16 jg 0x403082
  40309e:	(bad)  
  4030a0:	and    al,0xbe
  4030a2:	add    ah,BYTE PTR [ecx-0x389ed019]
  4030a8:	aas    
  4030a9:	mov    edi,0x12b8500f
  4030ae:	pop    ss
  4030af:	fisttp QWORD PTR [esi-0xb]
  4030b2:	out    0x4b,eax
  4030b4:	push   edx
  4030b5:	lods   eax,DWORD PTR ds:[esi]
  4030b6:	inc    ebp
  4030b7:	sbb    DWORD PTR [eax],esi
  4030b9:	sub    DWORD PTR [edx],ebp
  4030bb:	(bad)  
  4030bc:	and    dl,dl
  4030be:	enter  0x607b,0xde
  4030c2:	addr16 sti 
  4030c4:	cmp    al,0x84
  4030c6:	test   DWORD PTR [ebx],eax
  4030c8:	sub    ebp,edi
  4030ca:	push   ds
  4030cb:	pop    ebp
  4030cc:	stos   BYTE PTR es:[edi],al
  4030cd:	jae    0x4030e2
  4030cf:	dec    ebp
  4030d0:	add    eax,0x1e73c51f
  4030d5:	outs   dx,DWORD PTR ds:[esi]
  4030d6:	outs   dx,DWORD PTR ds:[esi]
  4030d7:	xor    dl,BYTE PTR [esi]
  4030d9:	fsub   QWORD PTR [edi-0x23b4f126]
  4030df:	pop    edx
  4030e0:	jmp    0x40312b
  4030e2:	in     al,dx
  4030e3:	(bad)
  4030e8:	jl     0x4030a3
  4030ea:	jo     0x4030e9
  4030ec:	hlt    
  4030ed:	jl     0x4030d1
  4030ef:	pop    ecx
  4030f0:	add    al,0xb8
  4030f2:	and    bl,BYTE PTR [ebp+0x61]
  4030f5:	adc    ecx,edx
  4030f7:	(bad)  
  4030f9:	test   BYTE PTR [edx+0xb],0x65
  4030fd:	push   0x2d071eaa
  403102:	xchg   esp,eax
  403103:	imul   edx,DWORD PTR [esi+0x24],0x4c
  403107:	pushf  
  403108:	int    0x2a
  40310a:	mov    ecx,0x41a9abb9
  40310f:	mov    ds:0x2d5a5166,al
  403114:	inc    edi
  403115:	cld    
  403116:	test   eax,0x6f759e25
  40311b:	inc    edx
  40311c:	pop    es
  40311d:	pop    esi
  40311e:	and    dx,WORD PTR [esi-0x2f017724]
  403125:	inc    esi
  403126:	push   0xb480975
  40312b:	pop    esp
  40312c:	add    BYTE PTR [ecx+0x7d],ah
  40312f:	sti    
  403130:	enter  0x8d25,0xdf
  403134:	in     al,dx
  403135:	in     eax,0xf3
  403137:	and    bl,BYTE PTR [bx+si]
  40313a:	push   ebp
  40313b:	adc    al,0x22
  40313d:	into   
  40313e:	sbb    edi,DWORD PTR [ebx+0x79]
  403141:	outs   dx,DWORD PTR ds:[esi]
  403142:	out    0xea,al
  403144:	inc    edx
  403145:	cli    
  403146:	je     0x403145
  403148:	push   edx
  403149:	es and ecx,0x6cf53507
  403150:	jo     0x403190
  403152:	cwde   
  403153:	repnz sahf 
  403155:	fs test al,0x7f
  403158:	hlt    
  403159:	and    dh,BYTE PTR [ebx+edx*8+0x6b]
  40315d:	jg     0x403198
  40315f:	pop    esp
  403160:	mov    eax,ds:0x777a65ae
  403165:	mov    bh,0xc8
  403167:	stos   DWORD PTR es:[edi],eax
  403168:	or     ecx,esi
  40316a:	mov    eax,0xbf9b7819
  40316f:	pop    ecx
  403170:	repz sbb ch,0x45
  403174:	popf   
  403175:	repz cld 
  403177:	xchg   esi,eax
  403178:	or     al,0x42
  40317a:	or     ah,BYTE PTR [ebx-0x47]
  40317d:	(bad)  
  40317e:	(bad)  
  403180:	jg     0x4031f2
  403182:	jne    0x403109
  403184:	inc    esi
  403185:	aaa    
  403186:	xchg   esi,eax
  403187:	inc    edi
  403188:	pushf  
  403189:	jnp    0x40318f
  40318b:	sub    al,0x8
  40318d:	fwait
  40318e:	mov    edx,0xd4aa4852
  403193:	mov    bh,0x9f
  403195:	lahf   
  403196:	inc    eax
  403197:	retf   
  403198:	aad    0x8f
  40319a:	dec    edx
  40319b:	rcl    DWORD PTR [edi+eax*2+0x76e5a8f2],1
  4031a2:	dec    esi
  4031a3:	push   es
  4031a4:	ror    BYTE PTR [eax-0x71ffe223],0xfe
  4031ab:	pop    ss
  4031ac:	stos   DWORD PTR es:[edi],eax
  4031ad:	stc    
  4031ae:	and    DWORD PTR [ecx],0xe2a8ae14
  4031b4:	push   ss
  4031b5:	aas    
  4031b6:	push   eax
  4031b7:	(bad)  
  4031b8:	mov    edx,0x38f6540b
  4031bd:	push   es
  4031be:	es dec esp
  4031c0:	sbb    WORD PTR [edx+0x6e4a9dc2],0xfff6
  4031c8:	dec    ebp
  4031c9:	outs   dx,BYTE PTR ss:[esi]
  4031cb:	xor    eax,0x7fa08521
  4031d0:	sbb    esp,ebx
  4031d2:	adc    al,0xdf
  4031d4:	popa   
  4031d5:	loop   0x40318e
  4031d7:	imul   ebp,DWORD PTR [ebx+ebx*4+0x3c716d6a],0xffffffb3
  4031df:	std    
  4031e0:	stos   DWORD PTR es:[edi],eax
  4031e1:	dec    edi
  4031e2:	jns    0x403164
  4031e4:	int    0x75
  4031e6:	aaa    
  4031e7:	add    DWORD PTR [eax+esi*1-0x64],esi
  4031eb:	loop   0x4031b4
  4031ed:	in     eax,dx
  4031ee:	fst    QWORD PTR [ecx+0x32]
  4031f1:	or     eax,ebx
  4031f3:	idiv   BYTE PTR [esi]
  4031f5:	and    BYTE PTR [eax-0x59eb911f],ah
  4031fb:	push   ds
  4031fc:	mov    edx,0xe7e1b0d7
  403201:	retf   
  403202:	retf   0xaa7b
  403205:	xchg   BYTE PTR [ecx+0x6c],bl
  403208:	ffree  st(5)
  40320a:	or     al,0xfd
  40320c:	pop    ecx
  40320d:	xchg   edi,eax
  40320e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40320f:	fdivr  DWORD PTR [ecx]
  403211:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403212:	lock iret 
  403214:	or     eax,0x8dba6591
  403219:	and    dl,cl
  40321b:	mov    BYTE PTR [ebx],cl
  40321d:	add    BYTE PTR [ebp+0x49],0xa4
  403221:	mov    DWORD PTR [esi+eiz*1-0x50],esi
  403225:	ja     0x403240
  403227:	xor    dh,ah
  403229:	jne    0x4031da
  40322b:	sub    bh,BYTE PTR ds:0xd029c864
  403231:	fs mov esi,0x14ef1269
  403237:	adc    bh,BYTE PTR [edi-0x29]
  40323a:	sub    BYTE PTR [ebx],bh
  40323c:	pop    ds
  40323d:	jae    0x4031fe
  40323f:	pop    ebx
  403240:	or     al,BYTE PTR [esi-0x78]
  403243:	sub    dh,BYTE PTR [ecx]
  403245:	inc    edi
  403246:	sbb    edi,ecx
  403248:	pop    esi
  403249:	add    BYTE PTR [ebx+0xa3a74ef],0xe4
  403250:	fisub  DWORD PTR [edi+eax*2+0x4f]
  403254:	fist   DWORD PTR [eax+0x6771a77c]
  40325a:	fwait
  40325b:	mov    esi,0xdd1ed9fb
  403260:	scas   eax,DWORD PTR es:[edi]
  403261:	jns    0x4032a0
  403263:	push   ecx
  403264:	fdiv   QWORD PTR [ecx-0x46e3978d]
  40326a:	sti    
  40326b:	push   edi
  40326c:	lea    ecx,[ecx+0x6b]
  40326f:	mov    ah,0x5b
  403271:	mov    dl,0x7
  403273:	jmp    0x4032e7
  403275:	push   0x37
  403277:	push   0x8f27cd58
  40327c:	retf   
  40327d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40327e:	xor    eax,DWORD PTR [ebx]
  403280:	(bad)  
  403281:	test   al,0x29
  403283:	add    ecx,DWORD PTR [ebx+0x4c9b84c]
  403289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40328a:	inc    esp
  40328b:	jge    0x40324b
  40328d:	out    dx,al
  40328e:	jbe    0x403257
  403290:	inc    ecx
  403291:	cdq    
  403292:	sbb    al,dh
  403294:	in     eax,0x88
  403296:	in     eax,dx
  403297:	mov    al,BYTE PTR [eax+edi*8+0x5e]
  40329b:	add    DWORD PTR [esi],0x63
  40329e:	xchg   edx,eax
  40329f:	mov    ds:0xa4874145,al
  4032a4:	fcmovu st,st(4)
  4032a6:	pushf  
  4032a7:	xchg   ebx,eax
  4032a8:	scas   eax,DWORD PTR es:[edi]
  4032a9:	mov    BYTE PTR [ecx+esi*2+0x50864767],ch
  4032b0:	call   0x747c:0x9af730dd
  4032b7:	jb     0x403239
  4032b9:	aad    0xb1
  4032bb:	add    DWORD PTR [ecx],eax
  4032bd:	add    ebp,ecx
  4032bf:	idiv   BYTE PTR [ecx]
  4032c1:	cli    
  4032c2:	out    0x6c,eax
  4032c4:	mov    bl,dl
  4032c6:	(bad)  
  4032c8:	popa   
  4032c9:	int3   
  4032ca:	sbb    ch,dh
  4032cc:	mov    DWORD PTR [eax+0x6121785c],0xe0af4421
  4032d6:	or     al,0xbb
  4032d8:	mov    ds:0x1a20b48b,eax
  4032dd:	out    dx,al
  4032de:	cwde   
  4032df:	ss (bad) 
  4032e1:	mov    bh,0x88
  4032e3:	inc    DWORD PTR [esi]
  4032e5:	adc    eax,0x1998a8ce
  4032ea:	mov    bl,0xd9
  4032ec:	into   
  4032ed:	mov    dl,0x31
  4032ef:	loopne 0x403323
  4032f1:	xchg   esi,eax
  4032f2:	popa   
  4032f3:	ret    
  4032f4:	mov    dh,0x6
  4032f6:	xor    WORD PTR [edx],sp
  4032f9:	lahf   
  4032fa:	mov    edx,0x6b8b074e
  4032ff:	xor    BYTE PTR fs:[ebp+ecx*1-0x57],bh
  403304:	fstp   TBYTE PTR [edx]
  403306:	es fs inc ecx
  403309:	imul   ecx,eax,0xf6a1c7f3
  40330f:	sbb    al,bl
  403311:	enter  0x750,0x67
  403315:	mov    ecx,0x45a111b4
  40331a:	fld    DWORD PTR [eax+0x4b]
  40331d:	in     al,dx
  40331e:	test   BYTE PTR [edx+0x6c9bf8c2],0x8e
  403325:	ret    
  403326:	mov    bl,BYTE PTR ds:0xf87c344f
  40332c:	jmp    FWORD PTR [edi]
  40332e:	pop    edx
  40332f:	push   es
  403330:	fiadd  DWORD PTR [esi+0x1f]
  403333:	jmp    DWORD PTR [eax]
  403335:	idiv   BYTE PTR [edx-0x28]
  403338:	mov    dh,0x7
  40333a:	je     0x4032d0
  40333c:	inc    esi
  40333d:	jns    0x4032e6
  40333f:	mov    al,0x34
  403341:	sub    ebx,eax
  403343:	mov    eax,0x20aeb334
  403348:	mov    dl,0x7
  40334a:	imul   esp,DWORD PTR [eax+edx*8+0x4b195bfa],0x2ecdc5a8
  403355:	cmc    
  403356:	mov    edi,edi
  403358:	dec    edx
  403359:	sub    BYTE PTR [ecx],bh
  40335b:	neg    BYTE PTR [edx+0x188d04c7]
  403361:	mov    BYTE PTR ds:0xeecff61a,dl
  403367:	xor    DWORD PTR [esi+esi*1+0x600ded24],esi
  40336e:	sbb    ah,BYTE PTR [ebp+0x53736194]
  403374:	js     0x4033bc
  403376:	enter  0x7470,0xc4
  40337a:	mov    cl,0x8e
  40337c:	xchg   esi,eax
  40337d:	mov    eax,0x2ac25231
  403382:	or     dl,ch
  403384:	nop
  403385:	in     al,0x3b
  403387:	stos   DWORD PTR es:[edi],eax
  403388:	push   edx
  403389:	shl    esi,0x72
  40338c:	cmp    bh,0xea
  40338f:	xor    al,0x8e
  403391:	add    cl,bl
  403393:	(bad)  
  403394:	pop    edx
  403395:	sub    BYTE PTR [edi+0x252b6c96],0x43
  40339c:	in     al,dx
  40339d:	jns    0x403395
  40339f:	mov    dl,ah
  4033a1:	xchg   ebp,eax
  4033a2:	test   DWORD PTR [esi],ebp
  4033a4:	mov    ds:0x839c75de,eax
  4033a9:	lahf   
  4033aa:	addr16 cmp ch,cl
  4033ad:	out    0xd1,al
  4033af:	mov    eax,ds:0x3896c6b9
  4033b4:	cmp    BYTE PTR [eax],bh
  4033b6:	jo     0x403397
  4033b8:	sbb    bl,ah
  4033ba:	fdivrp st(7),st
  4033bc:	jg     0x403435
  4033be:	mov    eax,ds:0x826da8e4
  4033c3:	xor    DWORD PTR [edx],0xba7293fa
  4033c9:	mov    edi,0xb5bf1703
  4033cf:	cld    
  4033d0:	nop
  4033d1:	sub    ah,BYTE PTR [edx+0xc]
  4033d4:	inc    ebp
  4033d5:	dec    ebp
  4033d6:	sub    eax,esp
  4033d8:	dec    edi
  4033d9:	xchg   BYTE PTR [esi+edx*1],bl
  4033dc:	mov    ds:0xbbd5b801,eax
  4033e1:	fwait
  4033e2:	adc    ah,dh
  4033e4:	mov    dl,0xc5
  4033e6:	sub    esi,DWORD PTR [ecx-0x7e]
  4033e9:	push   0xcf9ba965
  4033ee:	out    dx,eax
  4033ef:	mov    bh,0x8e
  4033f1:	jb     0x403464
  4033f3:	cmp    DWORD PTR [eax+0x33794e9f],0xffffffc8
  4033fa:	or     BYTE PTR [ebp-0x340d0870],al
  403400:	inc    ebx
  403401:	sbb    al,0xdf
  403403:	imul   ah
  403405:	stc    
  403406:	jmp    0x40338f
  403408:	aam    0x46
  40340a:	push   esi
  40340b:	out    0x3b,al
  40340d:	sbb    DWORD PTR [esi-0x45],edx
  403410:	adc    DWORD PTR [esi+0x322ff819],eax
  403416:	cli    
  403417:	mov    cl,0xff
  403419:	cmp    al,0x1e
  40341c:	cwde   
  40341d:	sub    BYTE PTR [edx],dl
  40341f:	sub    al,0x35
  403421:	dec    eax
  403422:	push   eax
  403423:	arpl   WORD PTR [edi],di
  403425:	pop    ss
  403426:	adc    eax,0x4c4933c8
  40342b:	lahf   
  40342c:	adc    al,bl
  40342e:	push   eax
  40342f:	mov    edi,0x6c711d92
  403434:	mov    dh,ch
  403436:	xor    eax,0x776d812e
  40343b:	pop    ds
  40343c:	mov    dl,bh
  40343e:	aad    0x5
  403440:	sbb    bh,BYTE PTR [edx+ebx*8+0x32daffc5]
  403447:	and    BYTE PTR [eax+0x18f7087f],bl
  40344d:	adc    cl,0xa6
  403450:	jae    0x40345c
  403452:	jno    0x40345a
  403454:	sbb    eax,0x9b764b9f
  403459:	bound  ecx,QWORD PTR [ebx+0x70]
  40345c:	push   edx
  40345d:	xor    eax,0x93e7fd4b
  403462:	jno    0x403482
  403464:	loope  0x403439
  403466:	lock xchg edx,eax
  403468:	(bad)  
  403469:	fmul   QWORD PTR [ebx]
  40346b:	idiv   BYTE PTR [edx+0x12]
  40346e:	mov    eax,DWORD PTR [edx]
  403470:	(bad)  [ebp+0x28f246bd]
  403476:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403477:	das    
  403478:	test   DWORD PTR [ecx-0x1e],edx
  40347b:	popf   
  40347c:	push   esp
  40347d:	xchg   ecx,eax
  40347e:	nop
  40347f:	ret    
  403480:	xchg   ecx,eax
  403481:	xchg   edi,eax
  403482:	mov    ds:0xe9327df9,al
  403487:	push   ebp
  403488:	stos   BYTE PTR es:[edi],al
  403489:	call   0xd53ac2bd
  40348e:	cdq    
  40348f:	ret    0xd806
  403492:	add    DWORD PTR [ebx],edi
  403494:	xchg   BYTE PTR [edx+0x49],cl
  403497:	push   ebx
  403498:	mov    eax,ds:0xd2820431
  40349d:	loop   0x4034e8
  40349f:	scas   al,BYTE PTR es:[edi]
  4034a0:	or     eax,0x420744e2
  4034a5:	(bad)  
  4034a7:	mov    ds:0x3c3a3393,al
  4034ac:	inc    esi
  4034ad:	mov    ds:0xeeccd543,eax
  4034b2:	sub    BYTE PTR [edx-0x55],bl
  4034b5:	into   
  4034b6:	jne    0x403469
  4034b8:	xchg   esp,eax
  4034b9:	dec    ebx
  4034ba:	push   ss
  4034bb:	and    al,0xd4
  4034bd:	retf   
  4034be:	fst    DWORD PTR [edi]
  4034c0:	(bad)  
  4034c2:	cmp    al,0xa8
  4034c4:	mov    eax,0x49ad313e
  4034c9:	lods   al,BYTE PTR ds:[esi]
  4034ca:	xchg   edx,eax
  4034cb:	inc    eax
  4034cc:	(bad)  
  4034cd:	ficomp DWORD PTR [ebp+0x2d]
  4034d0:	jno    0x4034a5
  4034d2:	aad    0x65
  4034d4:	mov    cl,0x13
  4034d6:	pusha  
  4034d7:	rol    BYTE PTR [ecx-0x69b7312c],cl
  4034dd:	push   ebp
  4034de:	fsub   QWORD PTR [eax+0x1]
  4034e1:	xor    eax,0xf7b37027
  4034e6:	lods   eax,DWORD PTR ds:[esi]
  4034e7:	retf   0xd45c
  4034ea:	jp     0x403497
  4034ec:	sbb    BYTE PTR [edi],dh
  4034ee:	mov    ebp,DWORD PTR [edx]
  4034f0:	push   eax
  4034f1:	ins    WORD PTR es:[edi],dx
  4034f3:	jl     0x40350b
  4034f5:	ja     0x403507
  4034f7:	lock (bad) 
  4034fa:	add    ebx,DWORD PTR [esi]
  4034fc:	jnp    0x4034f2
  4034fe:	jle    0x403521
  403500:	and    eax,0x4ef9d344
  403505:	retf   0x54d1
  403508:	rol    BYTE PTR [edx],cl
  40350a:	sub    edx,DWORD PTR [ecx-0x63b91b9]
  403510:	call   0xec8094f7
  403515:	mov    ecx,DWORD PTR [ebx+0x1b2a0f2e]
  40351b:	push   cs
  40351c:	jae    0x4034d4
  40351e:	shl    BYTE PTR [edi+0x32],1
  403521:	or     BYTE PTR [esi-0x68],0x19
  403525:	inc    eax
  403527:	js     0x403590
  403529:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40352a:	mov    dl,0x7d
  40352c:	sti    
  40352d:	(bad)  
  40352e:	sbb    ch,BYTE PTR [eax+eiz*2]
  403531:	pop    ecx
  403532:	jge    0x4034e0
  403534:	cmc    
  403535:	jge    0x403534
  403537:	ins    DWORD PTR es:[edi],dx
  403538:	lods   al,BYTE PTR ds:[esi]
  403539:	mov    esi,0x994793ba
  40353e:	popf   
  40353f:	les    ecx,FWORD PTR [ebp+0x5a]
  403542:	sub    edi,ecx
  403544:	gs scas eax,DWORD PTR es:[edi]
  403546:	scas   al,BYTE PTR es:[edi]
  403547:	dec    edx
  403548:	mov    DWORD PTR [eax+0x364c9464],edx
  40354e:	cs enter 0xa99b,0x9c
  403553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403554:	into   
  403555:	jae    0x40353b
  403557:	add    ch,bh
  403559:	stc    
  40355a:	repnz add esi,DWORD PTR [edi-0x37693ec9]
  403561:	sub    dl,BYTE PTR [esi]
  403563:	mov    ecx,0x42d0292b
  403568:	aas    
  403569:	(bad)  
  40356a:	addr16 mov ah,0x5a
  40356d:	mov    ch,0x85
  40356f:	xor    eax,DWORD PTR [eax+0xa]
  403572:	rcr    DWORD PTR [edx+ebx*8],cl
  403575:	ret    0xaaec
  403578:	setnp  BYTE PTR [esi+0x7c]
  40357c:	push   ebx
  40357d:	std    
  40357e:	push   esp
  40357f:	aad    0x75
  403581:	add    BYTE PTR [ebx],ah
  403583:	ins    BYTE PTR es:[edi],dx
  403584:	dec    esp
  403585:	jo     0x403583
  403587:	sub    DWORD PTR [edx-0x7c4af15],0xfe3d408a
  403591:	aas    
  403592:	pusha  
  403593:	addr16 cli 
  403595:	adc    ebp,DWORD PTR [eax+0x5475aef8]
  40359b:	loop   0x403606
  40359d:	(bad)  
  40359e:	pop    ss
  40359f:	dec    esp
  4035a0:	add    esp,DWORD PTR [esi-0x35]
  4035a3:	jae    0x40361a
  4035a5:	stos   DWORD PTR es:[edi],eax
  4035a6:	test   eax,0xb24e9e0e
  4035ab:	out    dx,al
  4035ac:	cs push 0x8403fcac
  4035b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035b3:	cmp    DWORD PTR [edi-0x10],esp
  4035b6:	cmp    edx,ebp
  4035b8:	xchg   ebp,eax
  4035b9:	inc    ecx
  4035ba:	cmp    dl,BYTE PTR [bp+0x62]
  4035be:	xor    edi,edi
  4035c0:	or     bl,dl
  4035c2:	pop    es
  4035c3:	inc    ebx
  4035c4:	mov    bh,0x5a
  4035c6:	dec    edi
  4035c7:	adc    BYTE PTR [eax-0x6f],dh
  4035ca:	push   ds
  4035cb:	rcl    DWORD PTR [edx+0x6f],1
  4035ce:	xchg   edx,eax
  4035cf:	adc    eax,0x79f9510b
  4035d4:	mov    eax,ds:0xcf5deb66
  4035d9:	sbb    edx,DWORD PTR [edi+ecx*1+0x7e640529]
  4035e0:	cmp    al,BYTE PTR [edi-0x1a]
  4035e3:	bound  eax,QWORD PTR [edi]
  4035e5:	inc    esp
  4035e6:	mov    bh,ah
  4035e8:	xor    DWORD PTR [ebp-0x2e65b0d7],ebp
  4035ee:	mov    ch,0x71
  4035f0:	and    dl,BYTE PTR [edx]
  4035f2:	push   ebx
  4035f3:	pop    esi
  4035f4:	retf   
  4035f5:	pop    edx
  4035f6:	test   al,0x28
  4035f8:	xchg   ebp,eax
  4035f9:	in     al,dx
  4035fa:	jg     0x40363c
  4035fc:	and    DWORD PTR ds:0x45b668cc,0xffffffb9
  403603:	imul   ebp,DWORD PTR [ebx-0x214f5965],0x32
  40360a:	push   ss
  40360b:	enter  0x862,0x5a
  40360f:	xor    ch,BYTE PTR [ebx]
  403611:	test   al,0x24
  403613:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403614:	or     al,0x8f
  403616:	xor    BYTE PTR [edi-0x1a747765],al
  40361c:	mov    esi,0xc7a2010c
  403621:	mov    al,0xa7
  403623:	in     al,dx
  403624:	fistp  DWORD PTR [edx]
  403626:	push   ss
  403627:	inc    eax
  403628:	imul   esp,eax,0x60
  40362b:	pushf  
  40362c:	cmp    ah,BYTE PTR [edx+esi*8]
  40362f:	jbe    0x4035ba
  403631:	in     eax,dx
  403632:	dec    ebp
  403633:	jmp    0x403669
  403635:	mov    ds:0x80059d2f,al
  40363a:	jbe    0x40368e
  40363c:	dec    eax
  40363d:	mov    esi,0x9e6d3658
  403642:	fdivr  QWORD PTR [ebx+0x1216d305]
  403648:	xchg   ecx,eax
  403649:	adc    DWORD PTR [esi-0x80],0xa6e21851
  403650:	add    ch,BYTE PTR [eax-0x77]
  403653:	add    BYTE PTR [eax+edi*4-0x7b],dl
  403657:	mov    bh,0xbd
  403659:	jmp    DWORD PTR [eax]
  40365b:	push   edx
  40365c:	xchg   ebx,eax
  40365d:	outs   dx,BYTE PTR ds:[esi]
  40365e:	inc    ebp
  40365f:	mov    ds:0x35ab9d34,al
  403664:	cmp    DWORD PTR [esi],edi
  403666:	or     DWORD PTR [ebx],eax
  403668:	outs   dx,BYTE PTR ds:[esi]
  403669:	repz pushf 
  40366b:	mov    bl,0x93
  40366d:	(bad)  
  40366e:	bound  ebp,QWORD PTR ds:0xd57a2473
  403674:	shl    DWORD PTR [eax+0x6ca0ccbe],cl
  40367a:	bound  esi,QWORD PTR [esi]
  40367c:	dec    ecx
  40367d:	mov    ah,0x58
  40367f:	dec    ecx
  403680:	jbe    0x403650
  403682:	inc    ebx
  403683:	inc    esp
  403684:	ja     0x4036d9
  403686:	ret    
  403687:	jecxz  0x40369b
  403689:	xor    DWORD PTR [edi-0x60],edx
  40368c:	mov    eax,ds:0xe75ea288
  403691:	jae    0x4036ed
  403693:	push   ds
  403694:	jo     0x403698
  403696:	jns    0x403691
  403698:	pop    ebp
  403699:	sbb    BYTE PTR [ebp+0x24fd42ca],bl
  40369f:	scas   al,BYTE PTR es:[edi]
  4036a0:	sti    
  4036a1:	(bad)  
  4036a2:	jnp    0x403629
  4036a4:	mov    eax,ds:0x7d10b28a
  4036a9:	mov    WORD PTR [ecx+ecx*8-0x25dced63],?
  4036b0:	mov    esi,0x141353e3
  4036b5:	pop    ebp
  4036b6:	sub    BYTE PTR [edx],ch
  4036b8:	jmp    0x831b:0x22dcb87a
  4036bf:	icebp  
  4036c0:	sbb    eax,0xa8860117
  4036c5:	cmp    edx,esi
  4036c7:	add    ebp,eax
  4036c9:	mov    BYTE PTR [ecx+0xce3a044],bl
  4036cf:	mov    cl,0xab
  4036d1:	lock pop esp
  4036d3:	pop    esi
  4036d4:	xchg   edx,eax
  4036d5:	in     eax,0xf5
  4036d7:	fwait
  4036d8:	das    
  4036d9:	ret    
  4036da:	or     bl,bl
  4036dc:	gs mov cl,0x73
  4036df:	in     al,dx
  4036e0:	fidiv  DWORD PTR [edi]
  4036e2:	sbb    BYTE PTR [ebx+0x53],dl
  4036e5:	pop    edi
  4036e6:	xchg   DWORD PTR ds:0x4a17aa2e,ebp
  4036ec:	push   ecx
  4036ed:	xor    eax,0x4af39af6
  4036f2:	repz popa 
  4036f4:	shl    BYTE PTR [esi+0xb],0x75
  4036f8:	in     al,0x74
  4036fa:	xor    dl,BYTE PTR [ecx+0x6d2223bb]
  403700:	test   al,0xbd
  403702:	jbe    0x403758
  403704:	hlt    
  403705:	(bad)  
  403706:	mov    dh,0x71
  403708:	push   ecx
  403709:	ds std 
  40370b:	dec    ebp
  40370c:	jmp    0x8fb07c6d
  403711:	ret    0x88b7
  403714:	cmp    eax,DWORD PTR [edx]
  403716:	idiv   BYTE PTR [edi+ebx*8+0x754b85f7]
  40371d:	push   ebx
  40371e:	or     ch,BYTE PTR [eax+0x5d]
  403721:	or     esi,DWORD PTR ds:0x5146828d
  403727:	sbb    al,BYTE PTR [ecx-0x7f]
  40372a:	or     eax,0xb96a0323
  40372f:	sbb    eax,0xad774261
  403734:	stos   DWORD PTR es:[edi],eax
  403735:	pop    edi
  403736:	jg     0x4037b1
  403738:	loop   0x40373a
  40373a:	fs int3 
  40373c:	jecxz  0x403744
  40373e:	push   ebx
  40373f:	xlat   BYTE PTR ds:[ebx]
  403740:	call   0x72751e76
  403745:	pop    eax
  403746:	mov    eax,0x4442c75b
  40374b:	popf   
  40374c:	dec    edi
  40374d:	mov    cs,ebp
  40374f:	push   cs
  403750:	xor    al,0x0
  403752:	imul   edx,DWORD PTR [ebx+0x667ce9bc],0xd9c00837
  40375c:	cmp    BYTE PTR [ecx],bh
  40375e:	aad    0x8f
  403760:	outs   dx,BYTE PTR ds:[esi]
  403761:	add    ch,BYTE PTR [ecx]
  403763:	xchg   esp,eax
  403764:	sti    
  403765:	mov    BYTE PTR [edx+ebx*1+0x45],al
  403769:	(bad)  
  40376a:	xor    esi,DWORD PTR [ecx]
  40376c:	popf   
  40376d:	pop    esi
  40376e:	pop    edx
  40376f:	pop    ecx
  403770:	or     edx,edi
  403772:	idiv   BYTE PTR [ecx+0x1b17fa5a]
  403778:	jle    0x403788
  40377a:	in     eax,dx
  40377b:	dec    eax
  40377c:	xchg   ecx,eax
  40377d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40377e:	int3   
  40377f:	leave  
  403780:	sti    
  403781:	pop    ebx
  403782:	sti    
  403783:	mov    ah,0x12
  403785:	jb     0x403732
  403787:	xchg   edx,eax
  403788:	xlat   BYTE PTR ds:[ebx]
  403789:	adc    al,0x30
  40378b:	sub    al,0x7e
  40378d:	ret    0x51f2
  403790:	jae    0x403712
  403792:	rcr    dl,cl
  403794:	mov    edi,0x798f99d8
  403799:	(bad)  
  40379a:	push   ds
  40379b:	sub    ebp,DWORD PTR [ecx+0x49]
  40379e:	(bad)  
  40379f:	dec    edi
  4037a0:	inc    edi
  4037a1:	xchg   ecx,eax
  4037a2:	addr16 jne 0x4037b7
  4037a5:	(bad)  
  4037a6:	sub    eax,0x8540374
  4037ab:	inc    esi
  4037ac:	cli    
  4037ad:	iret   
  4037ae:	jbe    0x4037b2
  4037b0:	aaa    
  4037b1:	test   al,0x1b
  4037b3:	mov    dh,0xac
  4037b5:	mov    BYTE PTR [ebx],dl
  4037b7:	mov    ds:0xb4158136,eax
  4037bc:	fild   QWORD PTR [esp+ebp*1+0x252984a6]
  4037c3:	adc    ebx,DWORD PTR [ebp+0x16dc5c06]
  4037c9:	loop   0x40375c
  4037cb:	pop    ebx
  4037cc:	loope  0x4037b0
  4037ce:	ins    DWORD PTR es:[edi],dx
  4037cf:	stc    
  4037d0:	dec    edx
  4037d1:	add    bl,BYTE PTR [eax-0x32b4b801]
  4037d7:	fcmovbe st,st(3)
  4037d9:	sar    DWORD PTR [ecx],0x8
  4037dc:	fs or  bh,ch
  4037df:	or     ebx,esp
  4037e1:	xor    BYTE PTR [ebx+ebx*8],al
  4037e4:	mov    ah,0x3
  4037e6:	xchg   DWORD PTR [ebx],ebx
  4037e8:	daa    
  4037e9:	jb     0x403788
  4037eb:	les    ecx,FWORD PTR [ebp+0x2c14a704]
  4037f1:	loope  0x403856
  4037f3:	adc    edi,edi
  4037f5:	es xchg esp,eax
  4037f7:	push   0xffffffef
  4037f9:	sub    BYTE PTR [esi],bl
  4037fb:	or     DWORD PTR [edx+0xc4562d2],edx
  403801:	stc    
  403802:	jle    0x4037de
  403804:	and    BYTE PTR [eax],0x4a
  403807:	mov    al,0x5a
  403809:	dec    edx
  40380a:	repz ret 
  40380c:	mov    ds:0xcbd02a7f,al
  403811:	pop    edi
  403812:	inc    esi
  403813:	xchg   ebp,eax
  403814:	loope  0x4037a7
  403816:	mov    dh,0xe6
  403818:	mov    cs,esi
  40381a:	popa   
  40381b:	jne    0x4037f9
  40381d:	push   es
  40381e:	sub    eax,0xe1dd9c72
  403823:	fcom   DWORD PTR [edi]
  403825:	sbb    al,0x2c
  403827:	jge    0x4037d6
  403829:	lock int 0xc7
  40382c:	sbb    sp,WORD PTR gs:[ebp-0x43]
  403831:	xchg   edx,eax
  403832:	xor    eax,DWORD PTR [ecx+0x2422776f]
  403838:	xchg   esi,eax
  403839:	pusha  
  40383a:	mov    esi,0xe78e99f0
  40383f:	mov    ds:0x23660089,al
  403844:	shl    DWORD PTR [eax],cl
  403846:	retf   
  403847:	xor    ebp,ebp
  403849:	into   
  40384a:	push   cs
  40384b:	stc    
  40384c:	aad    0x9
  40384e:	cmp    BYTE PTR [edx-0x4d],bl
  403851:	jns    0x403894
  403853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403854:	ror    DWORD PTR [edi+0x1b],1
  403857:	adc    BYTE PTR [eax+0x5c],dh
  40385a:	push   ebx
  40385b:	lea    edi,[eax]
  40385d:	or     BYTE PTR [eax-0x6f],ch
  403860:	(bad)  
  403861:	pusha  
  403862:	rcr    BYTE PTR [ebp-0x10079b58],0x52
  403869:	div    esp
  40386b:	mov    dh,BYTE PTR [ecx+0x75899e19]
  403871:	jo     0x403814
  403873:	gs iret 
  403875:	mov    ax,0xb63c
  403879:	cmc    
  40387a:	or     al,0xbb
  40387c:	(bad)  
  40387d:	cmp    eax,0x876b7f85
  403882:	jae    0x40382a
  403884:	xor    al,0x24
  403886:	jae    0x4038cd
  403888:	in     al,0x24
  40388a:	mov    al,ds:0x3b5c3d25
  40388f:	adc    BYTE PTR [esi-0x1afe95ce],ch
  403895:	mov    ds:0xd5be7bd5,eax
  40389a:	in     al,0x6b
  40389c:	push   edi
  40389d:	test   dl,bh
  40389f:	inc    eax
  4038a0:	popf   
  4038a1:	and    eax,0x44b89d59
  4038a6:	xchg   ebp,eax
  4038a7:	mov    esp,0xd6f7fc01
  4038ac:	scas   al,BYTE PTR es:[edi]
  4038ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038ae:	std    
  4038af:	cwde   
  4038b0:	dec    eax
  4038b1:	mov    ah,0xc7
  4038b3:	int3   
  4038b4:	cmp    al,dl
  4038b6:	ins    DWORD PTR es:[edi],dx
  4038b7:	sub    al,0xc5
  4038b9:	add    ch,BYTE PTR [edx-0x6ba26cf8]
  4038bf:	dec    ebp
  4038c0:	into   
  4038c1:	call   0xab4c:0x20028e53
  4038c8:	dec    ecx
  4038c9:	xor    ch,ah
  4038cb:	jl     0x4038e5
  4038cd:	jge    0x4038b5
  4038cf:	and    eax,0xf122e4b1
  4038d4:	push   cs
  4038d5:	push   cs
  4038d6:	xchg   BYTE PTR [edx],ch
  4038d8:	jae    0x4038b9
  4038da:	jmp    0x871b:0x5cdf9476
  4038e1:	ins    BYTE PTR es:[edi],dx
  4038e2:	xchg   esp,eax
  4038e3:	sti    
  4038e4:	mov    ah,BYTE PTR [eax+eiz*8]
  4038e7:	or     al,0x61
  4038e9:	adc    DWORD PTR [ebp+edx*1-0x5f],esp
  4038ed:	(bad)  
  4038ee:	push   ds
  4038ef:	iret   
  4038f0:	ins    DWORD PTR es:[edi],dx
  4038f1:	pop    ebx
  4038f2:	push   ss
  4038f3:	stos   BYTE PTR es:[edi],al
  4038f4:	aad    0xb0
  4038f6:	ds inc edx
  4038f8:	push   ebx
  4038f9:	jne    0x403947
  4038fb:	inc    ebp
  4038fc:	dec    ecx
  4038fd:	loop   0x4038f4
  4038ff:	loop   0x40395a
  403901:	std    
  403902:	sar    dl,1
  403904:	add    ecx,ebx
  403906:	fist   WORD PTR [esi+0x54]
  403909:	mov    cl,0xe2
  40390b:	lods   eax,DWORD PTR ds:[esi]
  40390c:	mov    esp,0xebb85dc0
  403911:	jno    0x403919
  403913:	ins    BYTE PTR es:[edi],dx
  403914:	sub    eax,DWORD PTR [esi]
  403916:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403917:	jbe    0x403927
  403919:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40391a:	mov    al,0x54
  40391c:	add    bl,cl
  40391e:	(bad)  
  40391f:	cmp    DWORD PTR [ebx-0x7b],ecx
  403922:	data16 add bl,BYTE PTR [edx-0x4ca1a60d]
  403929:	rcl    DWORD PTR [ecx],0x3c
  40392c:	sub    bh,al
  40392e:	dec    DWORD PTR [ebx+eiz*2+0x200b69af]
  403935:	cld    
  403936:	adc    edi,DWORD PTR [ecx-0x6fd5e4d7]
  40393c:	lods   al,BYTE PTR cs:[esi]
  40393e:	js     0x403958
  403940:	mov    BYTE PTR [eax],ch
  403942:	dec    ebp
  403943:	jecxz  0x4038df
  403945:	sub    ah,bl
  403947:	dec    edi
  403948:	or     eax,0x29e779de
  40394d:	in     eax,dx
  40394e:	inc    ecx
  40394f:	(bad)  
  403950:	lds    ecx,FWORD PTR [ebx-0x570549b5]
  403956:	addr16 rol ch,0xb8
  40395a:	sbb    eax,0x8adc729b
  40395f:	iret   
  403960:	arpl   WORD PTR [eax],cx
  403962:	nop
  403963:	cmp    dh,al
  403965:	cmc    
  403966:	xor    al,0x17
  403968:	mov    dh,BYTE PTR [esi+0xe]
  40396b:	push   es
  40396c:	xor    BYTE PTR [eax-0xb],dl
  40396f:	xchg   edi,eax
  403970:	test   eax,0x2fcbf555
  403975:	jl     0x40397e
  403977:	out    0x38,eax
  403979:	div    ebx
  40397b:	add    esp,edx
  40397d:	xor    bh,bh
  40397f:	xchg   ebp,eax
  403980:	adc    cl,0xfe
  403983:	inc    ecx
  403984:	cmp    al,0x33
  403986:	in     eax,0xdd
  403988:	test   al,0xd8
  40398a:	imul   eax,DWORD PTR [ebx],0xdd970ca
  403990:	mov    cl,BYTE PTR [ebx-0x31]
  403993:	imul   edx,DWORD PTR [ecx+0x6f],0xe
  403997:	test   al,0x50
  403999:	cmp    BYTE PTR [edx-0x41],dl
  40399c:	fild   DWORD PTR [ebp-0x37a74d5]
  4039a2:	out    0x2b,al
  4039a4:	lock test BYTE PTR [eax],ah
  4039a7:	scas   al,BYTE PTR es:[edi]
  4039a8:	out    0xa7,eax
  4039aa:	push   ebp
  4039ab:	das    
  4039ac:	addr16 push edx
  4039ae:	adc    eax,0x17156e8f
  4039b3:	jo     0x4039ca
  4039b5:	into   
  4039b6:	pop    esi
  4039b7:	push   ecx
  4039b8:	cld    
  4039b9:	inc    DWORD PTR [ecx]
  4039bb:	mov    edi,0x5be6fff4
  4039c0:	repnz mov edx,0xab2780
  4039c6:	(bad)  
  4039c8:	sbb    ch,BYTE PTR [edi]
  4039ca:	in     eax,0x5f
  4039cc:	and    BYTE PTR [ebx+ebp*2],cl
  4039cf:	stos   BYTE PTR es:[edi],al
  4039d0:	adc    DWORD PTR [edi-0x4277b287],0x16
  4039d7:	lods   al,BYTE PTR ds:[esi]
  4039d8:	lahf   
  4039d9:	pop    edi
  4039da:	adc    ebx,esi
  4039dc:	xor    al,0x9d
  4039de:	jp     0x403965
  4039e0:	enter  0x2817,0x5d
  4039e4:	gs mov cs,eax
  4039e7:	loopne 0x403a23
  4039e9:	sbb    eax,0xad8741d4
  4039ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039ef:	stos   BYTE PTR es:[edi],al
  4039f0:	loope  0x403a5e
  4039f2:	inc    ecx
  4039f3:	add    ch,BYTE PTR [edx+ebx*4-0x7bc45e09]
  4039fa:	cmp    al,0xa8
  4039fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039fe:	or     DWORD PTR [edx],ebp
  403a00:	mov    bh,bh
  403a02:	popa   
  403a03:	test   eax,0xf13b8bc3
  403a08:	pop    es
  403a09:	xchg   edx,eax
  403a0a:	add    dh,cl
  403a0c:	scas   al,BYTE PTR es:[edi]
  403a0d:	(bad)  
  403a0e:	sti    
  403a0f:	push   edi
  403a10:	gs jge 0x403a3d
  403a13:	sub    eax,0x145c7dd9
  403a18:	popa   
  403a19:	sub    BYTE PTR [esi+edx*1+0x45d6f02d],ah
  403a20:	out    0x6a,al
  403a22:	call   0x8eec:0x98329df7
  403a29:	scas   al,BYTE PTR es:[edi]
  403a2a:	mov    al,ds:0x40c4c1af
  403a2f:	adc    cl,BYTE PTR [eax]
  403a31:	(bad)  
  403a32:	mov    gs,WORD PTR [ecx-0x43]
  403a35:	lods   al,BYTE PTR ds:[esi]
  403a36:	inc    edx
  403a37:	jne    0x4039ca
  403a39:	sbb    ebx,edx
  403a3b:	test   DWORD PTR [ebp-0x50],ebx
  403a3e:	mov    cl,0x3e
  403a40:	dec    edi
  403a41:	stc    
  403a42:	dec    bp
  403a44:	xor    al,0x24
  403a46:	or     bh,dl
  403a48:	int3   
  403a49:	cmp    eax,0xcfa37268
  403a4e:	or     al,0x9
  403a50:	fcmovb st,st(7)
  403a52:	adc    ecx,DWORD PTR [ecx+0x1f]
  403a55:	aas    
  403a56:	sbb    ebp,DWORD PTR [edx-0x8395af1]
  403a5c:	scas   eax,DWORD PTR es:[edi]
  403a5d:	popf   
  403a5e:	aam    0x84
  403a60:	xor    BYTE PTR [ebx+eiz*1+0x1b0ba962],ah
  403a67:	dec    ebx
  403a68:	mov    ch,0x4a
  403a6a:	mov    al,ds:0xda849a47
  403a6f:	call   DWORD PTR [edi]
  403a71:	into   
  403a72:	jle    0x403a87
  403a74:	jb     0x403a2e
  403a76:	adc    esi,edi
  403a78:	bound  edx,QWORD PTR [eax+0x15]
  403a7b:	pop    es
  403a7c:	sub    BYTE PTR [edi],dl
  403a7e:	sub    al,0x62
  403a80:	sub    eax,0xbd791684
  403a85:	xor    BYTE PTR [edi-0x50659fc4],dl
  403a8b:	(bad)  
  403a8d:	test   BYTE PTR ds:0x33564c1a,dl
  403a93:	adc    al,0x75
  403a95:	cli    
  403a96:	pop    esp
  403a97:	jmp    0xab554e31
  403a9c:	stc    
  403a9d:	aad    0x52
  403a9f:	jg     0x403aa6
  403aa1:	ins    BYTE PTR es:[edi],dx
  403aa2:	icebp  
  403aa3:	pop    ss
  403aa4:	call   0x22e36fd9
  403aa9:	adc    ebx,0xf2c3562c
  403aaf:	add    DWORD PTR [ecx+ebx*4+0x4d],ebp
  403ab3:	adc    eax,0x6b137c1f
  403ab8:	mov    ch,0x42
  403aba:	adc    eax,0xeea213b3
  403abf:	test   BYTE PTR [ecx+0x66a1f1f3],ah
  403ac5:	icebp  
  403ac6:	pop    edx
  403ac7:	xchg   esi,eax
  403ac8:	lock enter 0x312b,0x82
  403acd:	mov    eax,0xbb1caf
  403ad2:	dec    DWORD PTR [edi-0x6f]
  403ad5:	lea    eax,[esi+0x62228633]
  403adb:	in     eax,0x6f
  403add:	stc    
  403ade:	and    al,0x72
  403ae0:	test   eax,0xbcceda3c
  403ae5:	jns    0x403ae5
  403ae7:	mov    edx,0x434d5dc1
  403aec:	mov    gs:0xfa60e58a,al
  403af2:	push   edx
  403af3:	sub    eax,0xfc604724
  403af8:	push   0xb30ecc17
  403afd:	adc    ecx,DWORD PTR [edx+eax*1-0x512da5c8]
  403b04:	sub    eax,0x228b1920
  403b09:	sub    ebx,DWORD PTR [ebx]
  403b0b:	inc    edx
  403b0c:	jbe    0x403b38
  403b0e:	xor    esi,esp
  403b10:	or     esp,ebp
  403b12:	mov    al,ds:0x6b09629e
  403b17:	addr16 cli 
  403b19:	(bad)  
  403b1a:	push   ds
  403b1b:	dec    ebx
  403b1c:	xchg   ecx,eax
  403b1d:	repz mov al,ds:0xc8d7ed30
  403b23:	in     eax,0xe5
  403b25:	push   es
  403b26:	push   ecx
  403b27:	fwait
  403b28:	push   eax
  403b29:	and    edx,DWORD PTR [edi]
  403b2b:	mov    bh,0x30
  403b2d:	fisttp WORD PTR [ecx-0x5f]
  403b30:	push   0x3415fcfc
  403b35:	cmp    eax,0x1ce2b64e
  403b3a:	cmp    dl,BYTE PTR [ebx-0x41fffc71]
  403b40:	jb     0x403ba9
  403b42:	fisubr DWORD PTR [edx+0x10]
  403b45:	je     0x403bb3
  403b47:	fldenv [edi+0x1a]
  403b4a:	pop    ecx
  403b4b:	mov    gs,edi
  403b4d:	xchg   ebp,eax
  403b4e:	ins    DWORD PTR es:[edi],dx
  403b4f:	pop    edx
  403b50:	sbb    ecx,DWORD PTR [ebx+0x5d]
  403b53:	xchg   al,bl
  403b55:	es call 0x7b88f425
  403b5b:	fs push ebp
  403b5d:	adc    al,0x55
  403b5f:	sub    ch,BYTE PTR [ecx-0x3f1e6f41]
  403b65:	aad    0xe4
  403b67:	(bad)  
  403b68:	into   
  403b69:	inc    ebx
  403b6a:	or     esp,esp
  403b6c:	cmp    DWORD PTR [ebp-0x60],eax
  403b6f:	lods   al,BYTE PTR ds:[esi]
  403b70:	data16 loope 0x403b3b
  403b73:	pop    eax
  403b74:	lock mov dl,0xa0
  403b77:	adc    ch,dl
  403b79:	cmp    DWORD PTR [ebx-0x5c60f92f],0x117f22df
  403b83:	repz das 
  403b85:	cmp    al,0xb
  403b87:	push   ebp
  403b88:	div    DWORD PTR [ebx+0xf]
  403b8b:	jo     0x403b65
  403b8d:	mov    ebx,0x105f8ab2
  403b92:	push   0xffffffe3
  403b94:	pop    esp
  403b95:	push   ebp
  403b96:	out    dx,eax
  403b97:	and    ecx,DWORD PTR [eax+0x7bf55e34]
  403b9d:	test   al,0x14
  403b9f:	sub    al,0x4a
  403ba1:	fiadd  DWORD PTR [edi+0x644533f8]
  403ba7:	and    al,0xed
  403ba9:	rcr    DWORD PTR [ebp+0x3b954452],cl
  403baf:	(bad)  
  403bb0:	push   esi
  403bb1:	fldcw  WORD PTR [ebx+0x73a64dc1]
  403bb7:	xor    ebx,DWORD PTR [esi-0xbccc39d]
  403bbd:	fmul   DWORD PTR [edi+ecx*4]
  403bc0:	xchg   BYTE PTR ds:0x5c38d2b3,bh
  403bc6:	dec    edx
  403bc7:	dec    edi
  403bc8:	sub    al,0x2f
  403bca:	jmp    0x403bda
  403bcc:	sub    BYTE PTR [ebp-0x515ffc1f],cl
  403bd2:	shr    al,0x59
  403bd5:	inc    esi
  403bd6:	in     al,0x30
  403bd8:	repz jge 0x403bce
  403bdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bdc:	inc    ebp
  403bdd:	pop    eax
  403bde:	retf   
  403bdf:	push   ds
  403be0:	in     al,0xc3
  403be2:	add    DWORD PTR [ebp+ebx*8+0x4d9cfd1d],esi
  403be9:	inc    esi
  403bea:	in     al,0xfd
  403bec:	sub    ch,BYTE PTR [eax-0x1196441]
  403bf2:	dec    ebx
  403bf3:	les    ecx,FWORD PTR [edx-0x16c255da]
  403bf9:	jne    0x403bad
  403bfb:	loop   0x403c72
  403bfd:	jp     0x403c55
  403bff:	inc    ebp
  403c00:	adc    eax,0x532f84a0
  403c05:	and    al,0x97
  403c07:	push   ebp
  403c08:	adc    ecx,DWORD PTR [ebp-0x54250632]
  403c0e:	loop   0x403c71
  403c10:	xor    DWORD PTR [ecx+0x8066f74],0x7affd754
  403c1a:	icebp  
  403c1b:	inc    ecx
  403c1c:	mov    cx,0xb6bc
  403c20:	push   cs
  403c21:	mov    ds:0x829a9009,al
  403c26:	cmc    
  403c27:	xlat   BYTE PTR ds:[ebx]
  403c28:	cmp    dl,al
  403c2a:	lahf   
  403c2b:	or     dl,BYTE PTR [edi-0x38]
  403c2e:	or     ah,ah
  403c30:	sbb    DWORD PTR [esi],esp
  403c32:	mov    ebp,edi
  403c34:	jge    0x403c4e
  403c36:	pop    ss
  403c37:	ret    0xfd24
  403c3a:	lahf   
  403c3b:	rol    DWORD PTR [edx+0x2a],1
  403c3e:	sahf   
  403c3f:	ins    BYTE PTR es:[edi],dx
  403c40:	jmp    0x403cb9
  403c42:	push   edx
  403c43:	or     al,0x46
  403c45:	xor    DWORD PTR [esi-0x77],edx
  403c48:	adc    BYTE PTR [ebx+0x167ce1c8],ch
  403c4e:	imul   eax,DWORD PTR [edx+0x6c],0x53c8ac70
  403c55:	call   DWORD PTR [esi+0x5e]
  403c58:	fst    DWORD PTR [esi+0x630fa664]
  403c5e:	or     DWORD PTR [ebx+0x3a399a56],ecx
  403c64:	pop    edi
  403c65:	loop   0x403c76
  403c67:	mov    cl,0xf8
  403c69:	hlt    
  403c6a:	push   0x42
  403c6c:	pop    ds
  403c6d:	jns    0x403bf6
  403c6f:	dec    edx
  403c70:	and    al,0x6d
  403c72:	test   DWORD PTR [edx],edx
  403c74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c75:	mov    dh,0x39
  403c77:	daa    
  403c78:	add    DWORD PTR [ebp+ecx*8+0x45],0xffffffb2
  403c7d:	bnd ret 0x36ff
  403c81:	mov    ecx,0x93495907
  403c86:	leave  
  403c87:	(bad)  
  403c88:	div    BYTE PTR [ebp+0x740f6f0b]
  403c8e:	xchg   edx,eax
  403c8f:	test   al,0xf4
  403c91:	sbb    ebp,DWORD PTR [esi-0x4ae80a76]
  403c97:	scas   eax,DWORD PTR es:[edi]
  403c98:	or     DWORD PTR [esi],esp
  403c9a:	mov    ch,0xb4
  403c9c:	pop    ss
  403c9d:	lods   eax,DWORD PTR ds:[esi]
  403c9e:	pop    ds
  403c9f:	out    0x25,al
  403ca1:	neg    DWORD PTR [edi]
  403ca3:	mov    DWORD PTR [edi+0x19],ecx
  403ca6:	inc    ecx
  403ca7:	mov    eax,ds:0x35b55aa5
  403cac:	loopne 0x403d1a
  403cae:	jp     0x403c3a
  403cb0:	std    
  403cb1:	jmp    0x403cf1
  403cb3:	cli    
  403cb4:	xchg   BYTE PTR [esi+0x9431664],ah
  403cba:	aam    0xf9
  403cbc:	mov    bl,0x6c
  403cbe:	pop    es
  403cbf:	ds pop edi
  403cc1:	mov    esp,0x26616c44
  403cc6:	adc    ebx,ebx
  403cc8:	push   ecx
  403cc9:	or     BYTE PTR [ebx],bh
  403ccb:	repz cmp DWORD PTR [edi],edx
  403cce:	and    BYTE PTR [ebx],bh
  403cd0:	(bad)  
  403cd1:	repnz sub al,0xdf
  403cd4:	ja     0x403ce7
  403cd6:	xor    cl,dl
  403cd8:	out    0x48,al
  403cda:	loop   0x403cf6
  403cdc:	test   cl,cl
  403cde:	icebp  
  403cdf:	mov    esp,0x9c14611f
  403ce4:	push   0x668719a3
  403ce9:	sub    dh,BYTE PTR [esi+0x34fd487c]
  403cef:	jae    0x403d69
  403cf1:	fsub   QWORD PTR [ebp+0x7f391ae9]
  403cf7:	test   BYTE PTR [esi-0x2a],dh
  403cfa:	pop    edx
  403cfb:	dec    edx
  403cfc:	sti    
  403cfd:	cmp    bl,BYTE PTR [ebp-0x755f6d6f]
  403d03:	(bad)  
  403d04:	xchg   ecx,eax
  403d05:	and    BYTE PTR [eax-0x44975806],dh
  403d0b:	clc    
  403d0c:	scas   eax,DWORD PTR es:[edi]
  403d0d:	(bad)  
  403d0e:	cld    
  403d0f:	scas   eax,DWORD PTR es:[edi]
  403d10:	push   ss
  403d11:	sub    eax,0x7d9a0dd0
  403d16:	adc    eax,0x753ba41a
  403d1b:	pop    ds
  403d1c:	xchg   ebx,eax
  403d1d:	xchg   esp,eax
  403d1e:	ja     0x403d4a
  403d20:	aad    0xcb
  403d22:	stc    
  403d23:	push   cs
  403d24:	fdiv   DWORD PTR [ecx-0x663e2c1f]
  403d2a:	retf   
  403d2b:	fist   DWORD PTR [edi+ebx*2]
  403d2e:	not    BYTE PTR [ebx+0x6b9363f0]
  403d34:	inc    esp
  403d35:	pop    ebx
  403d36:	rcr    ah,1
  403d38:	mov    eax,ss
  403d3a:	mov    ch,0x2a
  403d3c:	lds    eax,FWORD PTR [edx-0xa]
  403d3f:	inc    edx
  403d40:	aas    
  403d41:	arpl   ax,cx
  403d43:	xchg   esp,eax
  403d44:	sbb    BYTE PTR [eax-0x794ef20b],bl
  403d4a:	or     dh,BYTE PTR [eax+0x3534bf21]
  403d50:	lods   al,BYTE PTR ds:[si]
  403d52:	pop    es
  403d53:	std    
  403d54:	call   0x30c61ba3
  403d59:	inc    eax
  403d5a:	cmp    eax,0x8fd22de3
  403d5f:	mov    ecx,0x89b60591
  403d64:	or     dl,ah
  403d66:	push   ss
  403d67:	jp     0x403da4
  403d69:	les    edx,FWORD PTR [eax-0x1d3646d8]
  403d6f:	inc    ebx
  403d70:	scas   eax,DWORD PTR es:[edi]
  403d71:	call   0x1cdcd58d
  403d76:	mov    bl,0xb7
  403d78:	es push cs
  403d7a:	pop    edi
  403d7b:	iret   
  403d7c:	(bad)  
  403d7d:	(bad)
  403d80:	sub    edi,esi
  403d82:	lahf   
  403d83:	ja     0x403d2f
  403d85:	mov    esi,0x55d314a8
  403d8a:	mov    al,0x2e
  403d8c:	pop    esi
  403d8d:	test   eax,0xf39ea906
  403d92:	cmp    BYTE PTR [ebp+eax*1+0x6e],0xee
  403d97:	add    al,0xd3
  403d99:	stc    
  403d9a:	fwait
  403d9b:	xchg   edx,eax
  403d9c:	jge    0x403d60
  403d9e:	fwait
  403d9f:	mov    eax,ds:0x51c10948
  403da4:	pop    esi
  403da5:	mov    fs,edx
  403da7:	sub    DWORD PTR [ecx+0x6f],0xffffffda
  403dab:	xor    eax,0xae003441
  403db0:	je     0x403daa
  403db2:	add    DWORD PTR [esi-0xd],eax
  403db5:	sbb    BYTE PTR [ecx+0x185fef87],dh
  403dbb:	rcl    BYTE PTR [ecx-0xc],cl
  403dbe:	into   
  403dbf:	xchg   ecx,eax
  403dc0:	xchg   ebp,eax
  403dc1:	fmul   DWORD PTR [ecx]
  403dc3:	dec    edi
  403dc4:	out    dx,al
  403dc5:	mov    ds:0xf4e9505e,al
  403dca:	or     eax,0xd19bf27e
  403dcf:	test   eax,0x134b8807
  403dd5:	ret    
  403dd6:	lods   al,BYTE PTR ds:[esi]
  403dd7:	mov    ebp,DWORD PTR [edx+0x1f344935]
  403ddd:	imul   ebp,DWORD PTR [edi],0x7172a85f
  403de3:	data16 stc 
  403de5:	rol    BYTE PTR [esi+0x13537b9e],cl
  403deb:	dec    edi
  403dec:	cs das 
  403dee:	mov    dl,0x33
  403df0:	pop    es
  403df1:	mov    cl,0xb0
  403df3:	call   0xd764:0x12c7a8
  403dfa:	mov    edx,0xbf1cdf2f
  403dff:	pop    ebx
  403e00:	cli    
  403e01:	sbb    ebx,ecx
  403e03:	(bad)
  403e06:	push   ecx
  403e07:	mov    ds:0x718191ff,al
  403e0c:	shrd   DWORD PTR [ecx],eax,0x5e
  403e10:	(bad)  
  403e12:	(bad)  
  403e13:	cdq    
  403e14:	mov    bh,0xe5
  403e16:	or     edi,DWORD PTR [esi-0x262bbbae]
  403e1c:	add    eax,0xf3b38d51
  403e21:	test   eax,0xdc9fea86
  403e26:	sbb    ebp,esi
  403e28:	mov    ebx,0xd99ae694
  403e2d:	xor    eax,0x67b3d99d
  403e32:	test   ebp,ebp
  403e34:	xchg   dl,cl
  403e36:	div    DWORD PTR [edx-0x61f1bbbe]
  403e3c:	std    
  403e3d:	adc    ch,BYTE PTR [ecx-0x136c2cac]
  403e43:	pop    edi
  403e44:	iret   
  403e45:	je     0x403ec0
  403e47:	push   ss
  403e48:	test   eax,eax
  403e4a:	shr    BYTE PTR [edx+0x1eb3fa3d],0xfa
  403e51:	cld    
  403e52:	test   eax,0xb6c849fa
  403e57:	xor    edi,DWORD PTR [edx+0x6f]
  403e5a:	xor    eax,DWORD PTR [eax-0x190eaf3f]
  403e60:	push   es
  403e61:	jg     0x403e78
  403e63:	adc    BYTE PTR ds:0xcf2ce4c6,cl
  403e69:	sar    DWORD PTR [edi-0x5909d133],0x8c
  403e70:	sub    ecx,DWORD PTR [ebp-0x5726dc06]
  403e76:	or     eax,0xac509e06
  403e7b:	stos   DWORD PTR es:[edi],eax
  403e7c:	push   edx
  403e7d:	loopne 0x403ebf
  403e7f:	mov    ebp,0x792018d0
  403e84:	bound  ebp,QWORD PTR [ecx+eax*2]
  403e87:	push   edx
  403e88:	fucomp st(1)
  403e8a:	pop    edi
  403e8b:	mov    bl,0x38
  403e8d:	and    al,0x26
  403e8f:	add    BYTE PTR [ebp+edi*4+0x22ad6680],cl
  403e96:	test   BYTE PTR [edx+eiz*4-0x7f],ah
  403e9a:	and    DWORD PTR [ebx-0x43],esp
  403e9d:	xor    eax,0xbc7053d3
  403ea2:	out    dx,al
  403ea3:	jb     0x403e46
  403ea5:	imul   esp,DWORD PTR [edx],0x20
  403ea8:	add    edi,DWORD PTR [eax-0x58d07500]
  403eae:	inc    ebp
  403eaf:	jbe    0x403e79
  403eb1:	xchg   DWORD PTR [edi-0x77],esp
  403eb4:	inc    edi
  403eb5:	and    edi,DWORD PTR [esi]
  403eb7:	mov    ebp,0x6d44dd9d
  403ebc:	xchg   ebx,eax
  403ebd:	mov    dh,0xee
  403ebf:	aaa    
  403ec0:	imul   ecx,DWORD PTR [ebp-0x3a],0x40a75ca2
  403ec7:	repnz mov ds:0xa6351d1e,al
  403ecd:	sar    BYTE PTR [edi+0x5a],cl
  403ed0:	(bad)  
  403ed1:	fs ds pop esi
  403ed4:	frstor [edi-0x6e252606]
  403eda:	push   ds
  403edb:	ror    DWORD PTR [ebp-0x18],1
  403ede:	push   ss
  403edf:	xchg   ebp,eax
  403ee0:	scas   al,BYTE PTR es:[edi]
  403ee1:	and    ch,bl
  403ee3:	int    0x2a
  403ee5:	jle    0x403f4e
  403ee7:	adc    ebx,ebp
  403ee9:	push   ss
  403eea:	sbb    esp,DWORD PTR [edx+edi*2+0x22642414]
  403ef1:	arpl   WORD PTR ds:0xf93696e,di
  403ef7:	neg    DWORD PTR [edx]
  403ef9:	jmp    FWORD PTR [edx]
  403efb:	in     eax,0x50
  403efd:	push   0xffffff92
  403eff:	out    0x16,eax
  403f01:	or     ch,BYTE PTR [ebx]
  403f03:	mov    esp,DWORD PTR [esi-0x4aa1ea14]
  403f09:	jecxz  0x403f78
  403f0b:	xor    eax,0xc113231f
  403f10:	ret    0xb570
  403f13:	in     al,0xa3
  403f15:	cmp    ecx,DWORD PTR [edi+0x55]
  403f18:	cmp    eax,0xe78c8f50
  403f1d:	mov    cl,0xb5
  403f1f:	stc    
  403f20:	js     0x403f4c
  403f22:	jge    0x403f9b
  403f24:	jno    0x403f51
  403f26:	or     ebx,DWORD PTR [esi-0x77650916]
  403f2c:	jne    0x403f10
  403f2e:	jle    0x403ecc
  403f30:	or     eax,0x4f86ef4a
  403f35:	aas    
  403f36:	and    bh,BYTE PTR [ecx-0x283425b3]
  403f3c:	sar    BYTE PTR [edi+eiz*4],0x7b
  403f40:	mov    ebp,0xfb2302a4
  403f45:	and    DWORD PTR [eax-0x24],eax
  403f48:	rcr    dl,1
  403f4a:	in     al,0xa1
  403f4c:	mov    dh,0xe9
  403f4e:	mov    dl,0xbc
  403f50:	(bad)  
  403f51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f52:	int3   
  403f53:	mov    ebx,0xc43f3ad4
  403f58:	xchg   ebx,eax
  403f59:	frstor [eax]
  403f5b:	add    BYTE PTR [ebp+0x12580dec],dl
  403f61:	xchg   ecx,eax
  403f62:	lahf   
  403f63:	pop    ecx
  403f64:	enter  0x5340,0xcd
  403f68:	ficom  DWORD PTR [ebp-0xa7c4e5c]
  403f6e:	pop    ebp
  403f6f:	loope  0x403f25
  403f71:	mov    cl,0x55
  403f73:	and    edx,DWORD PTR [ebx+0x43b5a3f9]
  403f79:	xor    BYTE PTR [esi+edx*4+0x74636b19],dl
  403f80:	mov    DWORD PTR [ebp+ebx*4-0x44],edi
  403f84:	mov    dl,0xe2
  403f86:	and    DWORD PTR [ecx],0xfb7f2334
  403f8c:	and    bh,BYTE PTR [eax+edx*4+0x35a5690f]
  403f93:	fnstcw WORD PTR [esi+ebx*4+0x55784a68]
  403f9a:	mov    ds:0x37749215,eax
  403f9f:	lock adc DWORD PTR [edx],ebx
  403fa2:	imul   edx,DWORD PTR [ecx-0x35be163],0xf1b6a9d5
  403fac:	xlat   BYTE PTR ds:[ebx]
  403fad:	xchg   esp,eax
  403fae:	gs pop esp
  403fb0:	xchg   ecx,eax
  403fb1:	sahf   
  403fb2:	xchg   ebp,eax
  403fb3:	mov    esp,ebp
  403fb5:	jl     0x403f5f
  403fb7:	add    BYTE PTR [edi+esi*8-0x1c],ah
  403fbb:	lahf   
  403fbc:	mov    dh,0x31
  403fbe:	cmp    ch,BYTE PTR [esi+0xd724726]
  403fc4:	inc    ebx
  403fc5:	inc    ebp
  403fc6:	xchg   edx,eax
  403fc7:	jp     0x40401c
  403fc9:	mul    DWORD PTR [edi]
  403fcb:	mov    ecx,0xddef8663
  403fd0:	push   ecx
  403fd1:	fdiv   DWORD PTR [ebp-0x7]
  403fd4:	sub    edi,edi
  403fd6:	fnsave ds:0x167e0f7
  403fdc:	fcomip st,st(6)
  403fde:	shr    al,0xc3
  403fe1:	data16 mov ch,0xe8
  403fe4:	fs mov ecx,0x2b7f14c5
  403fea:	popf   
  403feb:	outs   dx,DWORD PTR ds:[esi]
  403fec:	xor    BYTE PTR [ecx],al
  403fee:	ficom  DWORD PTR [edx-0x29]
  403ff1:	push   ecx
  403ff2:	test   DWORD PTR [edx+0x45],edx
  403ff5:	arpl   WORD PTR [edi+0x26820467],bp
  403ffb:	mov    ds:0xd7760d61,eax
  404000:	mov    esi,0xb9493f4c
  404005:	adc    ch,BYTE PTR [ebx]
  404007:	mov    edi,DWORD PTR [eax-0x70f26523]
  40400d:	push   ebp
  40400e:	and    eax,0xc6587a70
  404013:	cwde   
  404014:	and    BYTE PTR [edx],0xdc
  404017:	jo     0x404079
  404019:	scas   al,BYTE PTR es:[edi]
  40401a:	xchg   edx,eax
  40401b:	std    
  40401c:	jb     0x404047
  40401e:	fidivr DWORD PTR [ebp-0x6ea197c5]
  404024:	cdq    
  404025:	xchg   edi,eax
  404026:	and    DWORD PTR [eax+esi*4-0x1b],edi
  40402a:	mov    bh,BYTE PTR [ebx]
  40402c:	lahf   
  40402d:	and    DWORD PTR [eax],esp
  40402f:	scas   al,BYTE PTR es:[edi]
  404030:	scas   eax,DWORD PTR es:[edi]
  404031:	ret    0x7b80
  404034:	dec    ecx
  404035:	enter  0xbce9,0x85
  404039:	xor    dh,BYTE PTR [ebp-0x61135ec5]
  40403f:	ja     0x40402d
  404041:	ret    0xdb02
  404044:	cmc    
  404045:	xchg   ecx,eax
  404046:	retf   0x7fbb
  404049:	jmp    0x403ff9
  40404b:	icebp  
  40404c:	das    
  40404d:	or     al,0x64
  40404f:	or     DWORD PTR [ecx],ebx
  404051:	sub    al,0xc
  404053:	sub    ecx,DWORD PTR [ecx-0x7f]
  404056:	mov    bl,0xba
  404058:	sti    
  404059:	lahf   
  40405a:	xor    DWORD PTR [eax],esi
  40405c:	int3   
  40405d:	sahf   
  40405e:	adc    esp,DWORD PTR [ebp+edx*4-0x79b0c45d]
  404065:	aaa    
  404066:	pop    edi
  404067:	xor    bl,BYTE PTR [eax-0x27]
  40406a:	lods   al,BYTE PTR ds:[esi]
  40406b:	ins    DWORD PTR es:[edi],dx
  40406c:	pop    edi
  40406d:	(bad)  
  40406e:	mov    cl,0xb
  404070:	sub    BYTE PTR [edi-0x30967b4f],dh
  404076:	sub    al,BYTE PTR [esi]
  404078:	bound  edi,QWORD PTR fs:[ebp+0x27566bd8]
  40407f:	ins    DWORD PTR es:[edi],dx
  404080:	ret    0x1b7b
  404083:	ins    DWORD PTR es:[edi],dx
  404084:	mov    ebp,0x66c43e0f
  404089:	popf   
  40408a:	or     dh,BYTE PTR [eax+ecx*1+0x797230d3]
  404091:	fst    st(3)
  404093:	jae    0x40401a
  404095:	jb     0x404080
  404097:	iret   
  404098:	ss sbb dh,ah
  40409b:	inc    ebp
  40409c:	pushf  
  40409d:	hlt    
  40409e:	enter  0xa76d,0x30
  4040a2:	lds    edx,FWORD PTR [ebp-0x27]
  4040a5:	xor    bl,al
  4040a7:	mov    ah,BYTE PTR [esi]
  4040a9:	xchg   ecx,eax
  4040aa:	push   ecx
  4040ab:	gs dec ebx
  4040ad:	pop    ecx
  4040ae:	cli    
  4040af:	pop    gs
  4040b1:	xor    edi,DWORD PTR [edi+0x3f]
  4040b4:	pop    ebp
  4040b5:	mov    bh,0xd6
  4040b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040b8:	or     ecx,DWORD PTR [edx+edi*4]
  4040bb:	mov    edx,0xa3a8714e
  4040c0:	inc    ecx
  4040c1:	dec    ebx
  4040c2:	out    0x52,al
  4040c4:	sbb    al,al
  4040c6:	mov    eax,ds:0x92ed4ce5
  4040cb:	xor    al,0x5e
  4040cd:	and    al,0x9b
  4040cf:	imul   esp,ecx,0x7d44fd67
  4040d5:	adc    ebp,DWORD PTR [esi-0x1e]
  4040d8:	pop    edi
  4040d9:	(bad)  
  4040da:	out    dx,eax
  4040db:	jnp    0x404112
  4040dd:	hlt    
  4040de:	(bad)  
  4040df:	jecxz  0x40407b
  4040e1:	push   ebx
  4040e2:	call   0xae115e46
  4040e7:	mov    ecx,0x2d6a2f94
  4040ec:	sbb    ch,BYTE PTR [eax]
  4040ee:	mov    ah,0x5b
  4040f0:	dec    edi
  4040f1:	scas   eax,DWORD PTR es:[edi]
  4040f2:	test   ebp,ebp
  4040f4:	xor    edx,edx
  4040f6:	push   0xb6fe4c4b
  4040fb:	retf   0xd90b
  4040fe:	sub    bh,BYTE PTR [esi]
  404100:	jb     0x40416a
  404102:	repnz (bad) [edx]
  404105:	in     al,0x51
  404107:	xor    eax,0xb57446c2
  40410c:	aaa    
  40410d:	inc    eax
  40410e:	xchg   ebp,eax
  40410f:	in     al,0xac
  404111:	leave  
  404112:	unpckhps xmm6,XMMWORD PTR [edx+eiz*1+0x4fdb8fd7]
  40411a:	and    eax,0x7cc3c4a6
  40411f:	cwde   
  404120:	loopne 0x404100
  404122:	sti    
  404123:	adc    eax,0xf8d9172e
  404128:	push   ss
  404129:	and    esi,esi
  40412b:	sti    
  40412c:	inc    ebx
  40412d:	aaa    
  40412e:	pop    ds
  40412f:	daa    
  404130:	lea    ecx,[ecx+0x5b]
  404133:	daa    
  404134:	out    0xa,eax
  404136:	in     eax,dx
  404137:	mov    ebx,DWORD PTR [ebx+0x2a]
  40413a:	mov    al,0x98
  40413c:	aam    0xd2
  40413e:	test   al,0x5
  404140:	jp     0x40411e
  404142:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404143:	and    eax,0x43b0516c
  404148:	cs int3 
  40414a:	fisubr DWORD PTR [edi+0x62b3eaf4]
  404150:	cmp    ah,BYTE PTR [ebx]
  404152:	push   0x5d2bc88a
  404157:	ds push esi
  404159:	rcr    DWORD PTR [eax-0x3dd4f6b9],0xd5
  404160:	mov    ds:0x2c9799a9,al
  404165:	int3   
  404166:	retf   0x6b9c
  404169:	cmc    
  40416a:	or     DWORD PTR [eax+eiz*4],ebx
  40416d:	ja     0x4041e8
  40416f:	adc    DWORD PTR [ebp+0xb],ecx
  404172:	lods   al,BYTE PTR ds:[esi]
  404173:	inc    ecx
  404174:	out    dx,eax
  404175:	and    DWORD PTR [ebp-0x39288f7d],esi
  40417b:	das    
  40417c:	sbb    eax,0x9b5eaaa6
  404181:	adc    ah,BYTE PTR cs:[edi-0x1a]
  404185:	call   DWORD PTR [ebx+0x39ae54b5]
  40418b:	xchg   ebx,eax
  40418c:	fcmovu st,st(1)
  40418e:	and    DWORD PTR [ecx-0x26],edx
  404191:	in     al,dx
  404192:	xor    bh,al
  404194:	cs (bad) 
  404196:	(bad)  
  404197:	call   0x8762:0x6263e542
  40419e:	mov    edx,0xf7d06732
  4041a3:	retf   0xc02f
  4041a6:	or     al,0x15
  4041a8:	adc    dl,BYTE PTR [eax+0x1e037295]
  4041ae:	pop    esp
  4041af:	fldcw  WORD PTR [ebp+0x1016f9c1]
  4041b5:	xchg   ecx,eax
  4041b6:	in     eax,0xe2
  4041b8:	inc    BYTE PTR [esp+esi*2-0x2e]
  4041bc:	das    
  4041bd:	sbb    BYTE PTR [eax],ah
  4041bf:	test   DWORD PTR [eax],esi
  4041c1:	sub    DWORD PTR ds:0x51863ab,ecx
  4041c7:	es push ds
  4041c9:	add    cl,0x88
  4041cc:	shr    DWORD PTR [ebp+0x1e3cf560],0x6d
  4041d3:	repnz mov eax,0x2bfd6603
  4041d9:	sar    eax,0xad
  4041dc:	mov    dl,0x31
  4041de:	pop    eax
  4041df:	out    0xc4,eax
  4041e1:	pop    ebp
  4041e2:	bound  ebp,QWORD PTR [edx+0x73]
  4041e5:	lahf   
  4041e6:	std    
  4041e7:	adc    edi,DWORD PTR es:[edi+0x7efb030e]
  4041ee:	push   esi
  4041ef:	enter  0x3c1c,0x17
  4041f3:	xor    DWORD PTR [esi-0x12],edi
  4041f6:	in     eax,dx
  4041f7:	or     edx,DWORD PTR [esi+0x350fba30]
  4041fd:	arpl   WORD PTR [ebx-0x49],di
  404200:	fs mov cl,0x54
  404203:	fmul   QWORD PTR [edi-0x1ebb36e0]
  404209:	(bad)  
  40420a:	iret   
  40420b:	mov    bl,0x88
  40420d:	xchg   ebp,eax
  40420e:	xchg   esp,eax
  40420f:	(bad)  
  404210:	fdiv   QWORD PTR [esi+0xd]
  404213:	add    ch,al
  404215:	retf   
  404216:	mov    bh,0xe
  404218:	sub    al,0x6
  40421a:	mov    bl,0xd3
  40421c:	or     al,0xd6
  40421e:	int3   
  40421f:	dec    ebx
  404220:	and    ch,BYTE PTR [edx-0x61]
  404223:	ja     0x4041a5
  404225:	dec    eax
  404226:	(bad)  
  404227:	and    bl,cl
  404229:	adc    bl,BYTE PTR [ebp+edx*4-0x14]
  40422d:	ret    0x2c8a
  404230:	add    eax,0xe5fa8d02
  404235:	or     ecx,DWORD PTR [ebx-0x5b]
  404238:	outs   dx,DWORD PTR ds:[esi]
  404239:	adc    bh,BYTE PTR [esi+0x450c083a]
  40423f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404240:	mov    bh,0x1
  404242:	sbb    al,0xba
  404244:	in     al,dx
  404245:	or     esp,DWORD PTR [edi]
  404247:	out    0xf4,al
  404249:	(bad)
  40424c:	jmp    0x40424e
  40424e:	stc    
  40424f:	push   esi
  404250:	cwde   
  404251:	das    
  404252:	xor    ecx,DWORD PTR [ebx]
  404254:	mov    bh,0xda
  404256:	daa    
  404257:	mov    bl,BYTE PTR [ebp+ebx*1-0x5247654f]
  40425e:	outs   dx,BYTE PTR ds:[esi]
  40425f:	inc    edi
  404260:	out    dx,al
  404261:	xor    DWORD PTR [esi+ebx*1-0x60e1faa2],esi
  404268:	push   0xffffffbc
  40426a:	pop    ecx
  40426b:	push   edx
  40426c:	push   edi
  40426d:	xor    BYTE PTR [ebx+0x7310cecc],cl
  404273:	js     0x4042b9
  404275:	jg     0x4042cc
  404277:	inc    edi
  404278:	retf   0xd6cf
  40427b:	jmp    0x404245
  40427d:	cmp    eax,0x25b67619
  404282:	inc    ah
  404284:	jnp    0x404236
  404286:	mov    al,ds:0xfde12255
  40428b:	pop    ss
  40428c:	arpl   dx,di
  40428e:	pop    eax
  40428f:	fcmovnbe st,st(7)
  404291:	call   0x909fbb9b
  404296:	sbb    eax,0xdb4aeb68
  40429b:	push   eax
  40429c:	lds    ebx,FWORD PTR [eax-0x5b2ed42b]
  4042a2:	jne    0x40427f
  4042a4:	mov    DWORD PTR [ebx-0xc85c094],eax
  4042aa:	xor    esi,esi
  4042ac:	mov    esp,DWORD PTR [ebp+0x1120e771]
  4042b2:	mov    ch,0x68
  4042b4:	sub    cl,BYTE PTR [edx]
  4042b6:	push   cs
  4042b7:	in     al,0xad
  4042b9:	mov    bh,bh
  4042bb:	dec    esp
  4042bc:	xor    eax,0x2bf61fc6
  4042c1:	xor    ebp,DWORD PTR [esi]
  4042c3:	cmovne ecx,DWORD PTR [ecx]
  4042c6:	mov    bh,0x92
  4042c8:	mov    esi,0x90d6d3fc
  4042cd:	jbe    0x40431b
  4042cf:	fwait
  4042d0:	dec    eax
  4042d1:	das    
  4042d2:	test   eax,0x71e0eac8
  4042d7:	mov    esi,0x921d576a
  4042dc:	pop    ebx
  4042dd:	push   0xfffffff5
  4042df:	in     al,0x10
  4042e1:	jne    0x404354
  4042e3:	pop    ds
  4042e4:	dec    ebx
  4042e5:	xchg   esp,eax
  4042e6:	call   esi
  4042e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042e9:	dec    edx
  4042ea:	mov    ch,0xf9
  4042ec:	cmp    bh,BYTE PTR [esi+0x57d94872]
  4042f2:	mulps  xmm4,xmm4
  4042f5:	add    al,0x64
  4042f7:	sahf   
  4042f8:	pop    eax
  4042f9:	or     eax,0x3e58b070
  4042fe:	pop    edi
  4042ff:	xor    ch,BYTE PTR [ebx+0x624979b9]
  404305:	std    
  404306:	jno    0x404314
  404308:	inc    ebp
  404309:	rcr    BYTE PTR [edx+ebp*4-0x77],0x96
  40430e:	push   edx
  40430f:	xchg   edx,eax
  404310:	call   0xc2a3:0x36c6a3cb
  404317:	pop    eax
  404318:	cmp    eax,0xfaf4b1b7
  40431d:	jl     0x4042e6
  40431f:	jae    0x404345
  404321:	ins    DWORD PTR es:[edi],dx
  404322:	or     BYTE PTR [eax-0x75afed64],bh
  404328:	in     al,0x95
  40432a:	mov    esp,DWORD PTR [esi]
  40432c:	int    0xc9
  40432e:	fadd   QWORD PTR [ebx+esi*4-0x4a]
  404332:	leave  
  404333:	dec    ebp
  404334:	or     DWORD PTR [esi+0x4e3171a4],esi
  40433a:	int3   
  40433b:	adc    ecx,DWORD PTR [edi*1+0x140f573a]
  404342:	push   esi
  404343:	mov    DWORD PTR [ebp+0x365c7808],esi
  404349:	and    DWORD PTR [esp+edx*4],eax
  40434c:	shl    DWORD PTR [eax-0x53],0x3b
  404350:	jb     0x404366
  404352:	mov    esp,0xdbc42f42
  404357:	pop    esi
  404358:	and    DWORD PTR [ebp+0x7c5236de],0x16
  40435f:	xor    ecx,DWORD PTR [edx+0x57cb5af6]
  404365:	int3   
  404366:	xlat   BYTE PTR ds:[ebx]
  404367:	dec    eax
  404368:	cmp    eax,0xf7bcb5f5
  40436d:	pop    DWORD PTR [ebx-0x5b]
  404370:	test   DWORD PTR [ebx],0x5d4d95e9
  404376:	sti    
  404377:	add    bl,ah
  404379:	test   al,0x65
  40437b:	push   esi
  40437c:	stos   BYTE PTR es:[edi],al
  40437d:	loope  0x4043da
  40437f:	mov    dh,bl
  404381:	scas   al,BYTE PTR es:[edi]
  404382:	in     eax,0x6e
  404384:	shr    BYTE PTR [edi+0x2b],1
  404387:	mov    edi,0x3a5735e5
  40438c:	mov    ds:0xf5bbd2f6,al
  404391:	sbb    BYTE PTR [edx-0x1a],ch
  404394:	mov    edx,0x54df460e
  404399:	ins    DWORD PTR es:[edi],dx
  40439a:	and    BYTE PTR [eax],ch
  40439c:	in     al,0xf3
  40439e:	into   
  40439f:	sub    bh,bh
  4043a1:	or     ecx,edx
  4043a3:	xchg   edx,eax
  4043a4:	pop    ds
  4043a5:	outs   dx,BYTE PTR ds:[esi]
  4043a6:	jno    0x4043ed
  4043a8:	jle    0x404378
  4043aa:	(bad)  
  4043ab:	ins    BYTE PTR es:[edi],dx
  4043ac:	add    eax,0x6e51b4f5
  4043b1:	ins    DWORD PTR es:[edi],dx
  4043b2:	clc    
  4043b3:	jns    0x404433
  4043b5:	stc    
  4043b6:	stos   BYTE PTR es:[edi],al
  4043b7:	cmp    al,0x56
  4043b9:	mov    edi,ecx
  4043bb:	ret    
  4043bc:	lahf   
  4043bd:	lods   eax,DWORD PTR ds:[esi]
  4043be:	fdivr  DWORD PTR [edi+0x43f3b623]
  4043c4:	xor    ecx,edi
  4043c6:	and    al,0x4d
  4043c8:	cdq    
  4043c9:	(bad)  
  4043ca:	js     0x40440d
  4043cc:	cmp    ch,BYTE PTR [edi+0x17]
  4043cf:	dec    eax
  4043d0:	sub    al,0xd2
  4043d2:	jmp    0x7a7c6730
  4043d7:	mov    al,0xd0
  4043d9:	cmp    dl,bh
  4043db:	test   ebp,edx
  4043dd:	loop   0x40445c
  4043df:	retf   
  4043e0:	cmc    
  4043e1:	inc    ebx
  4043e2:	pop    ebx
  4043e3:	push   0xa798dc01
  4043e8:	push   es
  4043e9:	shl    DWORD PTR [ecx-0x1a70bc9a],1
  4043ef:	pop    edx
  4043f0:	pop    edi
  4043f1:	repnz push edx
  4043f3:	jmp    0x6d574dbd
  4043f8:	fwait
  4043f9:	outs   dx,DWORD PTR ds:[esi]
  4043fa:	pusha  
  4043fb:	js     0x404477
  4043fd:	pop    ebp
  4043fe:	cmc    
  4043ff:	sbb    al,0xd8
  404401:	out    dx,al
  404402:	popa   
  404403:	mov    ebx,0x3cdd8582
  404408:	jecxz  0x40445d
  40440a:	imul   edx,eax,0xffffffdd
  40440d:	xor    BYTE PTR [edi+ecx*8],cl
  404410:	jp     0x404463
  404412:	stos   BYTE PTR es:[edi],al
  404413:	jmp    0x404483
  404415:	or     ah,BYTE PTR [ebp-0x3debb57e]
  40441b:	sti    
  40441c:	mov    esi,0xbeb08a6
  404421:	add    bl,al
  404423:	aas    
  404424:	pop    edi
  404425:	imul   edi,DWORD PTR [edi-0x5d],0x1d
  404429:	sbb    BYTE PTR [edx-0x75],al
  40442c:	shl    DWORD PTR [ecx+ebx*2],cl
  40442f:	rcl    BYTE PTR [esi+0x417cc92],cl
  404435:	adc    ebp,DWORD PTR [ebx-0x13baf359]
  40443b:	push   esp
  40443c:	push   edi
  40443d:	mov    al,0x5b
  40443f:	cmp    DWORD PTR [esi-0x4ebe57bd],0x7a
  404446:	push   0xffffff97
  404448:	sbb    al,0xdb
  40444a:	iret   
  40444b:	aas    
  40444c:	sub    ebx,DWORD PTR [ebp+0x7dcf51a9]
  404452:	or     eax,0x638169be
  404457:	cwde   
  404458:	jmp    0xbece1aa7
  40445d:	push   esp
  40445e:	or     DWORD PTR [edx],edi
  404460:	call   FWORD PTR [ebx-0x5d9d06e4]
  404466:	int    0xc6
  404468:	ds push esp
  40446a:	or     edi,DWORD PTR [edx]
  40446c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40446d:	xlat   BYTE PTR cs:[ebx]
  40446f:	push   ds
  404470:	mov    dl,0x2f
  404472:	inc    edi
  404473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404474:	cld    
  404475:	cmp    al,0xd8
  404477:	xchg   edx,eax
  404478:	pop    edi
  404479:	dec    ebx
  40447a:	out    0xa5,al
  40447c:	pop    ss
  40447d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40447e:	or     ebx,DWORD PTR [ecx+0x61]
  404481:	push   ebx
  404482:	add    BYTE PTR [edi],ch
  404484:	in     eax,0xfa
  404486:	and    esi,0x5d42a32b
  40448c:	jnp    0x4044f1
  40448e:	inc    esp
  40448f:	sbb    al,0x2f
  404491:	sti    
  404492:	mov    bl,0xc9
  404494:	mov    bh,0x31
  404496:	pop    ebp
  404497:	mov    WORD PTR ss:[ebx],cs
  40449a:	xchg   ecx,eax
  40449b:	sub    eax,0x17e35590
  4044a0:	push   edi
  4044a1:	scas   al,BYTE PTR es:[edi]
  4044a2:	inc    ebp
  4044a3:	jb     0x404451
  4044a5:	cwde   
  4044a6:	pop    esi
  4044a7:	mov    ch,dl
  4044a9:	push   ss
  4044aa:	dec    ecx
  4044ab:	push   0xffffffe7
  4044ad:	retf   0x8029
  4044b0:	sbb    al,0x5f
  4044b2:	jns    0x404503
  4044b4:	and    BYTE PTR [ecx],dl
  4044b6:	ins    DWORD PTR es:[edi],dx
  4044b7:	jae    0x404456
  4044b9:	and    eax,DWORD PTR [esi+0xa]
  4044bc:	fst    QWORD PTR [eax+ebp*1+0x5f]
  4044c0:	imul   esp,DWORD PTR [ecx-0x67171922],0x941e2033
  4044ca:	pusha  
  4044cb:	iret   
  4044cc:	add    eax,0x228982d1
  4044d1:	nop
  4044d2:	jbe    0x4044a2
  4044d4:	sbb    DWORD PTR [esp+eax*4+0x6f],ebx
  4044d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044d9:	mov    ebx,0x2f5e011b
  4044de:	push   ds
  4044df:	sbb    ecx,DWORD PTR [eax-0x5f]
  4044e2:	xor    eax,0x259a5224
  4044e7:	lock jmp 0x3950:0x64a3f831
  4044ef:	pusha  
  4044f0:	mov    edi,0xe26fd978
  4044f5:	icebp  
  4044f6:	jmp    0x40455d
  4044f8:	pop    ebx
  4044f9:	loop   0x4044ea
  4044fb:	mov    ds:0x56ad5393,al
  404500:	jns    0x404513
  404502:	cli    
  404503:	imul   edx,DWORD PTR [edi+0x3],0x11
  404507:	and    eax,0x99e76724
  40450c:	outs   dx,DWORD PTR ds:[esi]
  40450d:	push   ecx
  40450e:	inc    ebp
  40450f:	call   0xdcd8fb70
  404514:	dec    esp
  404515:	lods   al,BYTE PTR ds:[esi]
  404516:	iret   
  404517:	iret   
  404518:	cdq    
  404519:	std    
  40451a:	xchg   DWORD PTR [eax-0x3d7e0ed7],ebp
  404520:	scas   al,BYTE PTR es:[edi]
  404521:	sbb    ebp,DWORD PTR [edx+ebx*8]
  404524:	retf   0x3b5f
  404527:	enter  0x9ea8,0xb9
  40452b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40452c:	jae    0x40457e
  40452e:	mov    dh,0x9a
  404530:	ins    BYTE PTR es:[edi],dx
  404531:	adc    al,0x49
  404533:	xor    ch,BYTE PTR [ecx+eax*8+0x2a36e3d5]
  40453a:	pop    ebx
  40453b:	xchg   edi,eax
  40453c:	ja     0x4045a1
  40453e:	mov    dl,0x4d
  404540:	lea    esp,[esi]
  404542:	or     DWORD PTR [esi+eiz*1],0xe
  404546:	inc    esp
  404547:	out    0xe,al
  404549:	mov    edi,0x79781fdb
  40454e:	aas    
  40454f:	pop    eax
  404550:	mov    esi,0xa7e92d96
  404555:	aam    0xf
  404557:	sub    eax,0x6ac3fcab
  40455c:	js     0x40454c
  40455e:	test   eax,0xcebe1d7e
  404563:	cmp    esp,ebx
  404565:	push   cs
  404566:	aad    0x31
  404568:	mov    dl,0xb
  40456a:	dec    ecx
  40456b:	bswap  ebp
  40456d:	mov    dh,0x1
  40456f:	mov    WORD PTR [ebx],?
  404571:	or     al,0xd5
  404573:	icebp  
  404574:	js     0x404548
  404576:	adc    DWORD PTR [eax],0xc00b91b4
  40457c:	and    al,0x43
  40457e:	mov    bh,0xd7
  404580:	cmp    al,0x9f
  404582:	xchg   edx,eax
  404583:	cmp    eax,0x6a716e55
  404588:	cmovns esi,DWORD PTR [ebp+0x55c13a49]
  40458f:	repz pushf 
  404591:	loop   0x40456c
  404593:	inc    DWORD PTR [ecx]
  404595:	das    
  404596:	sub    al,0xf3
  404598:	or     eax,0x12f1fe05
  40459d:	and    DWORD PTR [si+0x50],ebx
  4045a1:	mov    ebp,edx
  4045a3:	in     al,0x84
  4045a5:	push   es
  4045a6:	push   eax
  4045a7:	outs   dx,BYTE PTR ds:[esi]
  4045a8:	repnz nop
  4045aa:	daa    
  4045ab:	out    dx,eax
  4045ac:	cmp    edi,DWORD PTR [edi]
  4045ae:	sbb    esp,DWORD PTR [edi-0x38]
  4045b1:	mov    dh,0xeb
  4045b3:	xchg   edi,eax
  4045b4:	dec    esp
  4045b5:	cdq    
  4045b6:	rol    DWORD PTR [ebp-0x2e834ca4],1
  4045bc:	mov    dl,0x74
  4045be:	push   edx
  4045bf:	fcmovnbe st,st(5)
  4045c1:	pop    edx
  4045c2:	scas   al,BYTE PTR es:[edi]
  4045c3:	int    0x18
  4045c5:	push   DWORD PTR [eax+0x1f]
  4045c8:	or     ebx,esi
  4045ca:	inc    edi
  4045cb:	sbb    eax,0xc825a8fd
  4045d0:	or     ebx,edx
  4045d2:	retf   0x3512
  4045d5:	(bad)  
  4045d6:	xchg   ecx,eax
  4045d7:	mov    ebx,0x9909d08c
  4045dc:	(bad)  
  4045dd:	push   edi
  4045de:	loop   0x404607
  4045e0:	loopne 0x40458d
  4045e2:	push   edx
  4045e3:	or     BYTE PTR [ebx-0x2bfe5a7f],dh
  4045e9:	push   cs
  4045ea:	pop    ebp
  4045eb:	cld    
  4045ec:	jge    0x4045e6
  4045ee:	sub    bp,WORD PTR [ebx+edi*1-0x430f15f7]
  4045f6:	mov    cl,0x91
  4045f8:	and    BYTE PTR [edi],ch
  4045fa:	jae    0x4045da
  4045fc:	push   0x39019d9c
  404601:	dec    esi
  404602:	ins    BYTE PTR es:[edi],dx
  404603:	mov    edx,0xb2a55c67
  404608:	cwde   
  404609:	jne    0x404622
  40460b:	mov    eax,0xbc20addb
  404610:	sbb    eax,DWORD PTR [ebx+0x380403d9]
  404616:	xor    bh,0xa6
  404619:	push   cs
  40461a:	push   ss
  40461b:	cmp    esi,DWORD PTR [edi-0x70cd4914]
  404621:	pop    esi
  404622:	xchg   edi,eax
  404623:	adc    BYTE PTR [ecx+0x3c],ah
  404626:	dec    esp
  404627:	dec    ebx
  404628:	out    0x7e,eax
  40462a:	aam    0x3e
  40462c:	add    eax,0x5bfc24ab
  404631:	jo     0x404667
  404633:	adc    eax,0x91824ef
  404638:	(bad)  
  404639:	bswap  eax
  40463b:	mov    BYTE PTR [edx+0x0],ah
  40463e:	and    eax,DWORD PTR [eax+0x76eccbd4]
  404644:	jp     0x404682
  404646:	loope  0x404675
  404648:	(bad)  
  404649:	push   edi
  40464a:	(bad)  
  40464b:	std    
  40464c:	inc    eax
  40464d:	and    eax,0xc9b3be54
  404652:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404653:	xchg   edx,eax
  404654:	pop    edi
  404655:	mov    bh,0x64
  404657:	add    ebp,DWORD PTR [ebx-0x1b53dd1a]
  40465d:	lock inc ebx
  40465f:	rcr    DWORD PTR [edx+0x13df5051],0x8f
  404666:	loop   0x404657
  404668:	dec    eax
  404669:	lea    eax,[eax+0x0]
  40466c:	jae    0x404645
  40466e:	xor    ah,bl
  404670:	adc    bh,dh
  404672:	ins    DWORD PTR es:[edi],dx
  404673:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404674:	scas   eax,DWORD PTR es:[edi]
  404675:	out    dx,al
  404676:	rcr    ah,1
  404678:	sbb    bh,BYTE PTR [edx+0x2e]
  40467b:	and    dh,BYTE PTR ds:[esi+0x17efd846]
  404682:	xchg   edx,eax
  404683:	je     0x4046ff
  404685:	inc    ecx
  404686:	int3   
  404687:	xchg   edi,eax
  404688:	jns    0x4046f8
  40468a:	xor    eax,0xee7f4b2e
  40468f:	in     al,0x70
  404691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404692:	or     bl,ch
  404694:	(bad)  
  404695:	enter  0x8afa,0x75
  404699:	test   al,0x7e
  40469b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40469c:	imul   ecx,edx,0xe23090d9
  4046a2:	sbb    DWORD PTR [ebx+edi*8+0x3a44ce2f],eax
  4046a9:	lods   eax,DWORD PTR ds:[esi]
  4046aa:	and    al,0x38
  4046ac:	pop    ebx
  4046ad:	cmp    al,0x19
  4046af:	jbe    0x4046d8
  4046b1:	in     al,0xda
  4046b3:	push   edx
  4046b4:	arpl   WORD PTR [si],bp
  4046b7:	inc    ebx
  4046b8:	cmc    
  4046b9:	(bad)  
  4046ba:	loope  0x4046b4
  4046bc:	sbb    al,0x5
  4046be:	adc    al,0x37
  4046c0:	loopne 0x4046c4
  4046c2:	sub    al,0x83
  4046c4:	sti    
  4046c5:	stc    
  4046c6:	idiv   BYTE PTR [ebp+0x5dc55308]
  4046cc:	adc    BYTE PTR [ecx+0x3e],ah
  4046cf:	test   ebp,ebx
  4046d1:	jmp    0x3b9100b8
  4046d6:	cmp    al,0xd
  4046d8:	ja     0x404682
  4046da:	cmp    al,0x4e
  4046dc:	aam    0xb7
  4046de:	scas   eax,DWORD PTR es:[edi]
  4046df:	(bad)  
  4046e0:	aam    0x85
  4046e2:	les    esp,FWORD PTR [edx]
  4046e4:	mov    esi,0x28629a66
  4046e9:	mov    esi,0x5727cb49
  4046ee:	fisubr DWORD PTR [esi+0x6]
  4046f1:	ins    BYTE PTR es:[edi],dx
  4046f2:	jecxz  0x4046dc
  4046f4:	cmp    al,0xcb
  4046f6:	jg     0x40470f
  4046f8:	retf   0xa6ee
  4046fb:	push   es
  4046fc:	icebp  
  4046fd:	call   0x97d8:0xccc7f71a
  404704:	cmp    eax,0xe13be492
  404709:	xor    eax,DWORD PTR [edi+0x3b]
  40470c:	dec    edx
  40470d:	call   0xfe97:0x3566f84b
  404714:	daa    
  404715:	int3   
  404716:	rcl    BYTE PTR [ebx],cl
  404718:	sub    DWORD PTR [edx+0x107e2d35],esi
  40471e:	and    ebx,eax
  404720:	pop    ds
  404721:	jo     0x4047a0
  404723:	je     0x4047a3
  404725:	xor    al,0x7f
  404727:	stos   DWORD PTR es:[edi],eax
  404728:	mov    ds:0xa902c4a7,al
  40472d:	adc    al,BYTE PTR [edi]
  40472f:	push   edi
  404730:	test   edx,esp
  404732:	pop    ebp
  404733:	jmp    0x2f4d4c89
  404738:	pop    edx
  404739:	dec    esi
  40473a:	call   0x16cb:0xe7c445f1
  404741:	xor    edx,DWORD PTR [esi+0x7b01c2c7]
  404747:	(bad)  
  404748:	sub    DWORD PTR [edx],edi
  40474a:	ror    DWORD PTR [ebx],cl
  40474c:	add    BYTE PTR [eax+0x6f416799],ah
  404752:	mov    dh,0x38
  404754:	data16 arpl WORD PTR [ecx],bx
  404757:	test   eax,0x5b6fec9e
  40475c:	push   eax
  40475d:	dec    esp
  40475e:	popf   
  40475f:	xchg   edi,eax
  404760:	test   DWORD PTR [edx],0xc4d11692
  404766:	xor    DWORD PTR [ebx+0x1f05a74a],edi
  40476c:	idiv   DWORD PTR [edi+edx*1]
  40476f:	retf   0x1987
  404772:	jmp    0x40471f
  404774:	jae    0x404798
  404776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404777:	out    0x80,eax
  404779:	jle    0x404796
  40477b:	iret   
  40477c:	dec    eax
  40477d:	scas   al,BYTE PTR es:[edi]
  40477e:	daa    
  40477f:	sbb    eax,0xdee7628c
  404784:	dec    esp
  404785:	fcom   DWORD PTR [ebp-0x1e96be8f]
  40478b:	sbb    cl,BYTE PTR [ecx-0x2e]
  40478e:	(bad)  
  40478f:	repnz cs in al,0x65
  404793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404794:	dec    ebp
  404795:	(bad)  
  404796:	into   
  404797:	aam    0x8d
  404799:	mov    ds:0x446bee97,eax
  40479e:	inc    edi
  40479f:	jb     0x404740
  4047a1:	scas   eax,DWORD PTR es:[edi]
  4047a2:	sbb    BYTE PTR [ecx+eax*1],0xa2
  4047a6:	mov    edx,0xcf621bbe
  4047ab:	imul   ebp,esi,0xffffffd4
  4047ae:	push   0x5dcc0327
  4047b3:	jbe    0x4047a2
  4047b5:	lahf   
  4047b6:	mov    ah,0xeb
  4047b8:	shl    edi,0x75
  4047bb:	mul    ebx
  4047bd:	xor    eax,0xdb8fce9c
  4047c2:	leave  
  4047c3:	pushf  
  4047c4:	fdiv   st,st(6)
  4047c6:	test   DWORD PTR [ecx],esp
  4047c8:	jge    0x404822
  4047ca:	mov    BYTE PTR [edx+0x547372c6],bl
  4047d0:	inc    eax
  4047d1:	jmp    0x40479c
  4047d3:	lahf   
  4047d4:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4047d6:	dec    edi
  4047d7:	ror    DWORD PTR [eax],0xf0
  4047da:	mov    ds:0x2afce6f5,al
  4047df:	push   es
  4047e0:	imul   edi,DWORD PTR [edx],0x4210e164
  4047e6:	(bad)  
  4047e7:	out    dx,eax
  4047e8:	stos   DWORD PTR es:[edi],eax
  4047e9:	xchg   edi,eax
  4047ea:	(bad)  
  4047eb:	hlt    
  4047ec:	adc    cl,BYTE PTR [eax-0x55]
  4047ef:	sub    al,0x1d
  4047f1:	outs   dx,BYTE PTR ds:[esi]
  4047f2:	into   
  4047f3:	dec    ebp
  4047f4:	into   
  4047f5:	js     0x40477e
  4047f7:	popa   
  4047f8:	enter  0xb138,0x1e
  4047fc:	inc    ebx
  4047fd:	sbb    DWORD PTR [edx-0x21a65241],ebx
  404803:	sahf   
  404804:	sub    eax,0x4d2a7ae5
  404809:	sbb    eax,0xf6143628
  40480e:	test   BYTE PTR [esp+eax*8],al
  404811:	jno    0x4047b3
  404813:	(bad)
  404817:	pop    ebp
  404818:	xor    ebx,DWORD PTR [edi+0x72]
  40481b:	out    0x61,eax
  40481d:	rcr    DWORD PTR [esi+esi*4-0x1cd1a9a],cl
  404824:	push   eax
  404825:	dec    ebp
  404826:	sbb    cl,bh
  404828:	and    bl,BYTE PTR [ebp+0x12]
  40482b:	addr16 dec ebx
  40482d:	mov    ds:0x72dc1707,eax
  404832:	push   ds
  404833:	lods   eax,DWORD PTR ds:[esi]
  404834:	les    eax,FWORD PTR [ebx-0x38d01131]
  40483a:	xchg   DWORD PTR [eax],ebx
  40483c:	es retf 
  40483e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40483f:	or     al,BYTE PTR [eax]
  404841:	mov    ebx,0x9e3942b6
  404846:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404847:	xor    al,0x57
  404849:	ror    BYTE PTR [ebp+0x2b],cl
  40484c:	lahf   
  40484d:	sub    eax,0xdb9c3e2c
  404852:	mov    ebp,0x3639f187
  404857:	mov    WORD PTR [eax],?
  404859:	fsub   DWORD PTR [edi]
  40485b:	add    bl,bh
  40485d:	mov    DWORD PTR [edi],esp
  40485f:	adc    bh,BYTE PTR [ebp-0x3]
  404862:	fsub   QWORD PTR [esi]
  404864:	push   eax
  404865:	push   0xffffffb9
  404867:	stos   BYTE PTR es:[edi],al
  404868:	fcmovb st,st(1)
  40486a:	push   ecx
  40486b:	mov    ebp,DWORD PTR [eax+0x3047158d]
  404871:	frstor [ebx-0x26]
  404874:	pop    es
  404875:	dec    ebx
  404876:	imul   ebx,DWORD PTR [ecx-0x17],0xe5918c37
  40487d:	(bad)  
  40487e:	repz xchg edi,eax
  404880:	jns    0x40487c
  404882:	leave  
  404883:	xchg   edx,eax
  404884:	jge    0x404884
  404886:	inc    ebp
  404887:	ficomp WORD PTR [ebx]
  404889:	loop   0x40483e
  40488b:	jne    0x4048b8
  40488d:	sub    eax,0xef415576
  404892:	fild   WORD PTR [ecx]
  404894:	test   eax,0x3411b616
  404899:	inc    edx
  40489a:	adc    BYTE PTR [edx+0x2e],al
  40489d:	fcom   DWORD PTR [ebp+0x33]
  4048a0:	fnsave [ebx+0x23]
  4048a3:	pop    esp
  4048a4:	mov    ?,WORD PTR [edx+edi*1+0x2a6fc57a]
  4048ab:	pop    ss
  4048ac:	loopne 0x4048f8
  4048ae:	push   esi
  4048af:	or     al,0x67
  4048b1:	mov    eax,ds:0xb9060347
  4048b6:	stc    
  4048b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048b9:	sbb    ebp,DWORD PTR ds:0x5a95823
  4048bf:	cmp    BYTE PTR [ecx+0x45],dl
  4048c2:	cmc    
  4048c3:	adc    DWORD PTR [ebp+0x68988b6e],esi
  4048c9:	sbb    al,0x6f
  4048cb:	icebp  
  4048cc:	cmp    DWORD PTR [edx],esi
  4048ce:	jl     0x4048bd
  4048d0:	les    esi,FWORD PTR [edi+0x36]
  4048d3:	dec    edi
  4048d4:	dec    ebx
  4048d5:	fidivr DWORD PTR [ecx+0x5c155406]
  4048db:	dec    ebp
  4048dc:	rcr    bl,0xd2
  4048df:	xchg   ecx,eax
  4048e0:	cs sbb eax,0x4ac70e4a
  4048e6:	or     dl,BYTE PTR [ebx+0x4d581f4]
  4048ec:	sbb    al,dl
  4048ee:	jp     0x404926
  4048f0:	mov    ebp,0x9b21dee8
  4048f5:	lds    ecx,FWORD PTR [eax]
  4048f7:	ja     0x404920
  4048f9:	rol    esp,cl
  4048fb:	xor    eax,0x939b7d81
  404900:	test   ch,0x51
  404903:	cs (bad) 
  404905:	loopne 0x4048d7
  404907:	loopne 0x4048d2
  404909:	mov    dl,0xc8
  40490b:	xchg   ebp,eax
  40490c:	jg     0x4048a1
  40490e:	adc    edi,ebx
  404910:	xor    eax,0xdaf7dc2d
  404915:	pop    ebp
  404916:	clc    
  404917:	cmp    al,0x8c
  404919:	push   cs
  40491a:	sub    DWORD PTR [edi-0x63],ecx
  40491d:	adc    eax,0x85edbdfe
  404922:	sti    
  404923:	inc    ecx
  404924:	in     al,0x50
  404926:	test   DWORD PTR ds:0xb39954d3,edx
  40492c:	push   ss
  40492d:	push   0x3b
  40492f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404930:	push   es
  404931:	push   ebp
  404932:	es add eax,0xc3afd6b0
  404938:	in     eax,dx
  404939:	mov    WORD PTR [esi+0x289cfe4d],?
  40493f:	sbb    bl,BYTE PTR [ebx-0x598e5d86]
  404945:	test   ebp,edx
  404947:	mov    esi,0x65d1fe77
  40494c:	mov    cl,0x1c
  40494e:	stos   BYTE PTR es:[edi],al
  40494f:	cmp    DWORD PTR cs:[ecx+ecx*1-0x1df87518],ecx
  404957:	int3   
  404958:	outs   dx,DWORD PTR ds:[esi]
  404959:	sbb    esi,DWORD PTR [ebp+0x6]
  40495c:	lds    edi,FWORD PTR [esp+esi*2+0x49]
  404960:	dec    ebx
  404961:	sub    eax,0x9f5af730
  404966:	in     eax,0x8c
  404968:	je     0x404950
  40496a:	mov    DWORD PTR ds:0xb7f30ad3,ebx
  404970:	clc    
  404971:	jno    0x404948
  404973:	arpl   WORD PTR [esi-0x7c],dx
  404976:	xchg   ecx,eax
  404977:	or     ebp,DWORD PTR [ecx+ecx*4]
  40497a:	push   edx
  40497b:	retf   
  40497c:	or     ah,ah
  40497e:	mov    BYTE PTR [edx],bl
  404980:	cs inc ecx
  404982:	xchg   esi,eax
  404983:	fimul  DWORD PTR [ebx-0x39]
  404986:	mov    ds,WORD PTR [ebx+edx*8]
  404989:	cdq    
  40498a:	and    ebp,0x37354896
  404990:	sub    eax,0xc979e8cb
  404995:	adc    al,0x0
  404997:	sar    DWORD PTR [esi+esi*4+0x23],0x12
  40499c:	push   ebx
  40499d:	aad    0xf3
  40499f:	aaa    
  4049a0:	imul   eax,DWORD PTR [ecx+0x4e535e5c],0xffffffab
  4049a7:	call   0xff0c4d0d
  4049ac:	and    ch,BYTE PTR [ebx+0x778f8d1a]
  4049b2:	jbe    0x4049ba
  4049b4:	and    esp,ecx
  4049b6:	mov    bh,0x1e
  4049b8:	ins    DWORD PTR es:[edi],dx
  4049b9:	xor    eax,0xb014047
  4049be:	mov    ch,bl
  4049c0:	(bad)  
  4049c1:	mov    edi,0x98604c1a
  4049c6:	in     al,0xd5
  4049c8:	fimul  DWORD PTR [eax]
  4049ca:	sbb    BYTE PTR [edi],bh
  4049cc:	fwait
  4049cd:	inc    edi
  4049ce:	jb     0x4049cf
  4049d0:	mov    ?,WORD PTR [eax-0x2b323174]
  4049d6:	test   DWORD PTR [ebp-0x24],edi
  4049d9:	add    DWORD PTR [edi+0x3fb63a6f],eax
  4049df:	xchg   esp,eax
  4049e0:	scas   al,BYTE PTR es:[edi]
  4049e1:	add    eax,0x9c437996
  4049e6:	xor    BYTE PTR [ebp-0x10a3065a],cl
  4049ec:	sub    ebx,0xffffff81
  4049ef:	sub    eax,0x3570e73b
  4049f4:	push   ecx
  4049f5:	pop    edx
  4049f6:	call   0x6016:0x95d3c4e
  4049fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049fe:	dec    DWORD PTR [eax-0x9]
  404a01:	sub    edx,DWORD PTR [ecx]
  404a03:	ret    0x4482
  404a06:	mov    cl,0xac
  404a08:	fs pop edx
  404a0a:	add    DWORD PTR ds:0x6996624e,edi
  404a10:	jno    0x404a7f
  404a12:	dec    esi
  404a13:	adc    bl,BYTE PTR [esi]
  404a15:	sti    
  404a16:	pop    edx
  404a17:	repnz mov edx,DWORD PTR [edx+eax*2+0x275f2095]
  404a1f:	dec    esp
  404a20:	mov    eax,0x171329e7
  404a25:	in     al,dx
  404a26:	hlt    
  404a27:	in     eax,0xb8
  404a29:	(bad)  
  404a2a:	mov    al,ds:0x484044ef
  404a2f:	in     eax,0x5b
  404a31:	add    BYTE PTR [edx-0x6f5c83f5],bl
  404a37:	pop    ecx
  404a38:	test   DWORD PTR [edx+0x7fb3e4d8],0x16c18c7e
  404a42:	neg    DWORD PTR [eax+0x191a0bac]
  404a48:	outs   dx,BYTE PTR ds:[esi]
  404a49:	icebp  
  404a4a:	out    dx,eax
  404a4b:	xchg   esp,eax
  404a4c:	mov    dl,cl
  404a4e:	adc    BYTE PTR [eax-0xd],bl
  404a51:	cmp    DWORD PTR [ebx],0x8a3e4ba5
  404a57:	mov    ebp,0x570a8da
  404a5c:	cmp    al,0x78
  404a5e:	aad    0x36
  404a60:	mov    edi,0x9c04e612
  404a65:	out    dx,eax
  404a66:	pop    ecx
  404a67:	test   eax,0x1ff46f3c
  404a6c:	daa    
  404a6d:	xor    eax,0xdbc9fe70
  404a72:	xor    cl,BYTE PTR [ecx]
  404a74:	daa    
  404a75:	sbb    al,0x3
  404a77:	das    
  404a78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a79:	xor    bl,dh
  404a7b:	repz fneni(8087 only) 
  404a7e:	mov    bh,ch
  404a80:	lea    ebx,[esi-0xb]
  404a83:	inc    ebx
  404a84:	mov    ds:0x461de846,eax
  404a89:	(bad)  
  404a8a:	adc    bl,BYTE PTR ds:0xf152a26d
  404a90:	retf   0x69f2
  404a93:	loope  0x404a22
  404a95:	shr    DWORD PTR [ebp+0x6a20e8d6],cl
  404a9b:	jg     0x404b07
  404a9d:	jmp    0x404b13
  404a9f:	je     0x404aab
  404aa1:	shl    dl,1
  404aa3:	pop    es
  404aa4:	add    edi,DWORD PTR [eax+0x34]
  404aa7:	pop    ss
  404aa8:	and    BYTE PTR [eax-0x52],0x1a
  404aac:	push   esp
  404aad:	inc    esp
  404aae:	jg     0x404a52
  404ab0:	mov    ebx,DWORD PTR [edi]
  404ab2:	repz mov dl,BYTE PTR [ebx+0x2b27b19c]
  404ab9:	sahf   
  404aba:	mov    ds:0x1d4767de,eax
  404ac0:	(bad)  
  404ac1:	stc    
  404ac2:	add    DWORD PTR [esi+0x2742755d],0x346289d4
  404acc:	(bad)  
  404acd:	ins    DWORD PTR es:[edi],dx
  404ace:	shl    edx,cl
  404ad0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ad1:	jns    0x404aa5
  404ad3:	js     0x404b4c
  404ad5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ad6:	and    al,0x65
  404ad8:	jl     0x404af2
  404ada:	test   BYTE PTR [esi],0x21
  404add:	mov    edi,0x20555871
  404ae2:	mov    ebx,0xeeb502d0
  404ae7:	not    BYTE PTR [esi-0x26]
  404aea:	pop    ds
  404aeb:	dec    eax
  404aec:	sub    DWORD PTR [edx-0x31],ebp
  404aef:	cmp    BYTE PTR [eax+edx*1-0x388d1624],dh
  404af6:	xchg   edx,eax
  404af7:	jne    0x404a7a
  404af9:	loop   0x404a82
  404afb:	dec    ebx
  404afc:	add    eax,DWORD PTR [esi+0x4903a84b]
  404b02:	xor    al,0xf8
  404b04:	mov    WORD PTR [ebx],ds
  404b06:	push   es
  404b07:	and    BYTE PTR [esi-0x3],dl
  404b0a:	repnz xchg esp,eax
  404b0c:	inc    ecx
  404b0d:	push   es
  404b0e:	test   al,0x2b
  404b10:	inc    ebp
  404b11:	es enter 0x5e96,0x2b
  404b16:	mov    esp,0x77fde8fa
  404b1b:	xor    dl,bh
  404b1d:	mov    eax,ds:0x6e74f9f4
  404b22:	or     al,0xd9
  404b24:	int3   
  404b25:	push   esi
  404b26:	cmp    DWORD PTR [edx+0x1d9644a1],0x72cebbe8
  404b30:	aam    0xbd
  404b32:	mov    edx,0x7c9526f8
  404b37:	daa    
  404b38:	daa    
  404b39:	retf   0xdc6b
  404b3c:	(bad)  
  404b3d:	jno    0x404b6a
  404b3f:	xchg   BYTE PTR [eax+edx*4-0x597a86a0],ah
  404b46:	int    0x2f
  404b48:	jp     0x404b32
  404b4a:	cmp    DWORD PTR [ecx*1-0x5cfe524d],esp
  404b51:	sahf   
  404b52:	popa   
  404b53:	inc    esi
  404b54:	pop    esp
  404b55:	test   eax,0x6b04598e
  404b5a:	bound  edi,QWORD PTR [edx]
  404b5c:	jmp    0x3297:0x28a287f0
  404b63:	pop    eax
  404b64:	lea    edx,[esi+esi*1]
  404b67:	dec    eax
  404b68:	inc    ebp
  404b69:	push   ecx
  404b6a:	mov    eax,ds:0x8ecd3388
  404b6f:	xchg   edx,eax
  404b70:	ja     0x404bba
  404b72:	or     eax,esp
  404b74:	xchg   esp,eax
  404b75:	fstp   DWORD PTR [ebx+0x652b2fdc]
  404b7b:	inc    ebx
  404b7c:	(bad)  
  404b7e:	jns    0x404b6e
  404b80:	cmp    al,0xf3
  404b82:	cdq    
  404b83:	dec    ecx
  404b84:	adc    eax,0xddd4870d
  404b89:	jo     0x404b0c
  404b8b:	sbb    DWORD PTR [eiz*1+0x476b1964],0x12
  404b93:	test   al,0x6f
  404b95:	repnz cmp eax,0x4363bc26
  404b9b:	retf   
  404b9c:	jmp    0xa3f0ca1d
  404ba1:	push   esi
  404ba2:	mov    ch,0xeb
  404ba4:	dec    eax
  404ba5:	loop   0x404b98
  404ba7:	xchg   edi,eax
  404ba8:	dec    eax
  404ba9:	push   eax
  404baa:	js     0x404bba
  404bac:	ror    ecx,1
  404bae:	push   eax
  404baf:	(bad)  
  404bb0:	jmp    0x147e9071
  404bb5:	add    al,0x79
  404bb7:	(bad)  
  404bb8:	and    ebx,DWORD PTR [esi]
  404bba:	add    eax,0x9d12f8a7
  404bbf:	or     eax,0x94020a3a
  404bc4:	mov    gs,WORD PTR [eax]
  404bc6:	lods   eax,DWORD PTR ds:[esi]
  404bc7:	out    0xcf,al
  404bc9:	iret   
  404bca:	mov    ebp,0x47193fc9
  404bcf:	dec    esp
  404bd0:	lds    esi,FWORD PTR [edx-0x5fbc88a1]
  404bd6:	xchg   esi,eax
  404bd7:	icebp  
  404bd8:	xchg   esp,eax
  404bd9:	(bad)  
  404bdb:	jns    0x404c54
  404bdd:	fldlg2 
  404bdf:	mov    bh,0x99
  404be1:	adc    ah,BYTE PTR [ebp-0x29]
  404be4:	lods   al,BYTE PTR ds:[esi]
  404be5:	mov    bl,0x5f
  404be7:	push   0x32
  404be9:	arpl   di,bp
  404beb:	out    dx,al
  404bec:	sbb    ebp,DWORD PTR [ecx+0x70]
  404bef:	addr16 retf 0xcb5e
  404bf3:	outs   dx,BYTE PTR ds:[esi]
  404bf4:	cwde   
  404bf5:	jo     0x404bca
  404bf7:	and    edx,DWORD PTR [ecx+0x6d]
  404bfa:	add    eax,0x69604787
  404bff:	mov    dh,0xd2
  404c01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c02:	stos   DWORD PTR es:[edi],eax
  404c03:	mov    ds:0xc7698c43,eax
  404c08:	out    0xec,al
  404c0a:	(bad)  
  404c0b:	out    0xa8,eax
  404c0d:	xchg   ecx,eax
  404c0e:	jne    0x404bfb
  404c10:	pop    ss
  404c11:	cmp    al,0x84
  404c13:	or     dh,ah
  404c15:	ret    
  404c16:	mov    ds:0x14bb7349,al
  404c1b:	adc    esi,DWORD PTR [ecx-0x50]
  404c1e:	push   edi
  404c1f:	lea    edi,[esp+eiz*4]
  404c22:	adc    dl,BYTE PTR [ecx+0x3eed7e9a]
  404c28:	push   ebx
  404c29:	ret    
  404c2a:	cli    
  404c2b:	test   eax,0x6df7c4be
  404c30:	or     al,BYTE PTR [esi+0x32d6709f]
  404c36:	outs   dx,DWORD PTR ds:[esi]
  404c37:	shl    BYTE PTR [edi-0x463fce8d],cl
  404c3d:	cwde   
  404c3e:	jnp    0x404bf0
  404c40:	(bad)  
  404c41:	les    edx,FWORD PTR [ebp+0x6a]
  404c44:	imul   ecx,DWORD PTR [ebx-0x7901e423],0xffffffe7
  404c4b:	lock or BYTE PTR [edx-0x5e158f2a],al
  404c52:	out    dx,eax
  404c53:	in     al,0x25
  404c55:	sbb    DWORD PTR [ecx+0x3d83bdf5],eax
  404c5b:	push   esi
  404c5c:	sbb    ebp,eax
  404c5e:	mov    cs,WORD PTR [esi+0xa8feae9]
  404c64:	sti    
  404c65:	in     eax,dx
  404c66:	mov    DWORD PTR [edx+0x25954379],esp
  404c6c:	push   esp
  404c6d:	fnstsw WORD PTR [edx-0x95c0191]
  404c73:	rol    BYTE PTR ds:0xf48c4288,cl
  404c79:	sbb    al,0x9e
  404c7b:	(bad)  
  404c7d:	outs   dx,BYTE PTR ds:[esi]
  404c7e:	sub    DWORD PTR [ebx-0x76d89ce1],ebx
  404c84:	cmc    
  404c85:	jno    0x404c78
  404c87:	imul   al
  404c89:	hlt    
  404c8a:	jb     0x404c79
  404c8c:	clc    
  404c8d:	icebp  
  404c8e:	adc    al,0x59
  404c90:	ret    
  404c91:	pop    edi
  404c92:	out    dx,eax
  404c93:	sbb    esp,DWORD PTR [esi+0x3d]
  404c96:	cwde   
  404c97:	cs pusha 
  404c99:	out    dx,al
  404c9a:	push   ecx
  404c9b:	outs   dx,DWORD PTR ds:[esi]
  404c9c:	addr16 pop eax
  404c9e:	in     al,0x51
  404ca0:	inc    ebp
  404ca1:	cs rol eax,0x48
  404ca5:	pop    esp
  404ca6:	in     al,dx
  404ca7:	(bad)  
  404ca9:	dec    esp
  404caa:	mov    cl,0xa0
  404cac:	data16 jno 0x404ce5
  404caf:	mov    cl,0x99
  404cb1:	xor    esp,DWORD PTR [edi]
  404cb3:	sar    bl,1
  404cb5:	xchg   edi,eax
  404cb6:	mov    ebp,0xac795acd
  404cbb:	enter  0x65e4,0xf0
  404cbf:	push   ss
  404cc0:	imul   ebx,DWORD PTR [bx+si+0x5f16],0xfffffffb
  404cc6:	pop    ebp
  404cc7:	fcmovne st,st(4)
  404cc9:	das    
  404cca:	dec    esi
  404ccb:	or     eax,0x18c76ba6
  404cd0:	test   DWORD PTR [edx+eax*1-0x71],esi
  404cd4:	mov    edi,0x29701a17
  404cd9:	cmp    ebp,DWORD PTR [ecx-0x41f6c19a]
  404cdf:	aad    0xa7
  404ce1:	mov    DWORD PTR [edi+0x43],edx
  404ce4:	pop    esp
  404ce5:	shr    BYTE PTR [ecx],cl
  404ce7:	dec    eax
  404ce8:	inc    ebx
  404ce9:	mov    esp,DWORD PTR [eax+ecx*8+0x7ca9434b]
  404cf0:	dec    edx
  404cf1:	or     ecx,esi
  404cf3:	mov    ds:0x460963c1,al
  404cf8:	pusha  
  404cf9:	mov    dh,0xb2
  404cfb:	fld    st(7)
  404cfd:	ret    
  404cfe:	sub    BYTE PTR [ecx-0x6f],dh
  404d01:	shl    BYTE PTR [edx+0x6fe60118],cl
  404d07:	repnz jecxz 0x404cba
  404d0a:	inc    edi
  404d0b:	cmp    ch,BYTE PTR [ebx-0x6c7d72ca]
  404d11:	ins    BYTE PTR es:[edi],dx
  404d12:	xor    eax,0x19cca8f8
  404d17:	inc    edx
  404d18:	push   ebp
  404d19:	sbb    ecx,DWORD PTR [ecx+0x32]
  404d1c:	lods   al,BYTE PTR ds:[esi]
  404d1d:	inc    ebp
  404d1e:	mul    BYTE PTR [ebp+edi*8-0x21]
  404d22:	and    DWORD PTR [esi],eax
  404d24:	push   esp
  404d25:	stc    
  404d26:	repnz dec edx
  404d28:	push   edx
  404d29:	inc    edi
  404d2a:	pop    edx
  404d2b:	cdq    
  404d2c:	sub    bl,BYTE PTR [edx-0x51]
  404d2f:	(bad)  
  404d30:	icebp  
  404d31:	jmp    0x404d06
  404d33:	inc    esi
  404d34:	push   cs
  404d35:	retf   0x39e0
  404d38:	cmp    DWORD PTR [edi+0x4ef311dd],eax
  404d3e:	test   al,0x58
  404d40:	js     0x404d7e
  404d42:	mov    ebx,0xb3943214
  404d47:	or     ch,BYTE PTR [eax]
  404d49:	les    esp,FWORD PTR [ecx-0x482fb1e1]
  404d4f:	sub    ah,ah
  404d51:	and    DWORD PTR [ecx],esi
  404d53:	mov    ch,0x5d
  404d55:	pop    ss
  404d56:	fcom   DWORD PTR [edi-0x40]
  404d5a:	lds    ecx,FWORD PTR [edx+ebx*4]
  404d5d:	adc    al,0xe9
  404d5f:	or     ebx,DWORD PTR [bx+si-0x2d]
  404d63:	into   
  404d64:	mov    ebx,0xd5d1159
  404d69:	test   eax,0x53b56dd5
  404d6e:	loope  0x404d48
  404d70:	popa   
  404d71:	dec    ebx
  404d72:	shl    DWORD PTR ds:0x5aa85071,cl
  404d78:	push   ds
  404d79:	and    al,0x3a
  404d7b:	(bad)  
  404d7c:	int3   
  404d7d:	jne    0x404d48
  404d7f:	add    DWORD PTR [ebx+0x25],esi
  404d82:	(bad)  
  404d83:	mov    al,0xd9
  404d85:	xchg   edi,eax
  404d86:	rcl    DWORD PTR [ecx+0x5b46fbf2],cl
  404d8c:	jmp    0x894da344
  404d91:	iret   
  404d92:	iret   
  404d93:	mov    dl,0xe5
  404d95:	or     al,0x55
  404d97:	leave  
  404d98:	adc    dh,dh
  404d9a:	jns    0x404e1a
  404d9c:	scas   eax,DWORD PTR es:[edi]
  404d9d:	adc    BYTE PTR [ecx-0x42200c5],dh
  404da3:	hlt    
  404da4:	leave  
  404da5:	or     edx,DWORD PTR [edx]
  404da7:	mov    dh,0x88
  404daa:	pop    ss
  404dab:	ins    DWORD PTR es:[edi],dx
  404dac:	sbb    dl,dl
  404dae:	add    al,BYTE PTR [edx+0x75]
  404db1:	call   0xd5b3:0x814403a4
  404db8:	add    al,ch
  404dba:	clc    
  404dbb:	mov    DWORD PTR [ebp-0x26c7afbd],edi
  404dc1:	idiv   DWORD PTR [ebp-0x16665fa6]
  404dc7:	inc    esi
  404dc8:	xor    edx,DWORD PTR [edi-0x48]
  404dcb:	aas    
  404dcc:	xor    DWORD PTR [esi],0x3b
  404dcf:	out    0x6d,eax
  404dd1:	ficom  WORD PTR [eax+edx*2]
  404dd4:	mov    DWORD PTR [ebp+0x59],edx
  404dd7:	inc    ebp
  404dd8:	mov    esi,0xf9e4f24d
  404ddd:	stos   DWORD PTR es:[edi],eax
  404dde:	cs sahf 
  404de0:	push   es
  404de1:	jle    0x404de5
  404de3:	adc    esp,ebx
  404de5:	(bad)  
  404de7:	jnp    0x404d6d
  404de9:	pop    eax
  404dea:	je     0x404d95
  404dec:	lock jbe 0x404de0
  404def:	or     BYTE PTR [eax],bh
  404df1:	push   edi
  404df2:	dec    edx
  404df3:	arpl   WORD PTR [ebx],dx
  404df5:	inc    ecx
  404df6:	mov    ch,0x9d
  404df8:	cli    
  404df9:	pop    ebp
  404dfa:	inc    edi
  404dfb:	jb     0x404de0
  404dfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dfe:	repnz sub ch,0x26
  404e02:	add    ebp,esp
  404e04:	test   al,0x25
  404e06:	sbb    DWORD PTR [ebx+ebx*1-0x1f],eax
  404e0a:	sti    
  404e0b:	and    BYTE PTR [ebx-0x2d],cl
  404e0e:	mov    ebx,0xb95021ce
  404e13:	ds ret 
  404e15:	shl    BYTE PTR [esi],cl
  404e17:	add    bh,al
  404e19:	adc    bh,BYTE PTR [esi+0x6eb1f274]
  404e1f:	mov    al,0x96
  404e21:	lock adc eax,0x183b00f3
  404e27:	pop    esi
  404e28:	pop    eax
  404e29:	std    
  404e2a:	mov    dl,0x98
  404e2c:	lods   al,BYTE PTR ds:[esi]
  404e2d:	cld    
  404e2e:	nop
  404e2f:	not    BYTE PTR [ebx-0x35]
  404e32:	js     0x404e13
  404e34:	pop    edi
  404e35:	(bad)  
  404e36:	mov    al,0x75
  404e38:	mov    dl,0x5d
  404e3a:	push   ebx
  404e3b:	sub    al,0x72
  404e3d:	sahf   
  404e3e:	ror    DWORD PTR [ebx*8+0x62ba52d1],0x61
  404e46:	and    ecx,edx
  404e48:	pop    ebp
  404e49:	inc    ebp
  404e4a:	inc    ebp
  404e4b:	fstp   DWORD PTR [edx+0x79]
  404e4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e4f:	jecxz  0x404e1c
  404e51:	sub    cl,BYTE PTR [ebp-0x2a68e1a7]
  404e57:	and    cl,bl
  404e59:	push   esi
  404e5a:	mov    bl,0xe9
  404e5c:	and    DWORD PTR [edi+0xd],0x60
  404e60:	mov    ecx,0x68471795
  404e65:	cld    
  404e66:	rol    esi,cl
  404e68:	enter  0x27b2,0xfb
  404e6c:	daa    
  404e6d:	sub    edx,ebx
  404e6f:	or     DWORD PTR [edi*8+0x44d62174],esi
  404e76:	inc    esp
  404e77:	ja     0x404e7b
  404e79:	mov    dh,0x70
  404e7b:	push   edi
  404e7c:	ror    DWORD PTR [ecx-0x71],1
  404e7f:	enter  0xdcbf,0x78
  404e83:	add    BYTE PTR [edx],0xce
  404e86:	jecxz  0x404ebe
  404e88:	dec    edx
  404e89:	cld    
  404e8a:	sbb    DWORD PTR [ecx+edx*8+0x5603de18],ebp
  404e91:	popf   
  404e92:	in     al,dx
  404e93:	push   eax
  404e94:	add    al,al
  404e96:	call   0x7f6c:0xcbafaa12
  404e9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e9e:	ins    DWORD PTR es:[edi],dx
  404e9f:	ins    DWORD PTR es:[edi],dx
  404ea0:	xchg   DWORD PTR [edi-0x72a19b75],ebx
  404ea6:	leave  
  404ea7:	fbstp  TBYTE PTR [edx]
  404ea9:	jp     0x404ee4
  404eab:	xchg   edx,eax
  404eac:	(bad)  
  404ead:	dec    esi
  404eae:	mov    ds:0x4a0a4168,al
  404eb3:	or     BYTE PTR [ebp-0x37],cl
  404eb6:	pusha  
  404eb7:	pop    ds
  404eb8:	test   DWORD PTR [eax+eiz*8],ecx
  404ebb:	sbb    eax,0xda941585
  404ec0:	push   esp
  404ec1:	pop    esp
  404ec2:	fidiv  DWORD PTR ds:0xd46beddc
  404ec8:	add    DWORD PTR [eax],edi
  404eca:	adc    al,0xd6
  404ecc:	dec    edx
  404ecd:	(bad)  
  404ece:	and    eax,0x42ccb630
  404ed3:	int3   
  404ed4:	xor    al,0x64
  404ed6:	mov    esp,0xcb340b64
  404edb:	std    
  404edc:	sbb    esi,DWORD PTR [ebp+edx*4+0x72b2de19]
  404ee3:	sub    bh,0xd9
  404ee6:	out    0x3a,eax
  404ee8:	dec    edx
  404ee9:	pop    DWORD PTR [ecx+ecx*4+0x1f5ff45]
  404ef0:	cmp    DWORD PTR [esi-0x618c5f3f],0xd45e861d
  404efa:	jns    0x404f3b
  404efc:	adc    dh,BYTE PTR [esi+0x5b7b4ad6]
  404f02:	push   ds
  404f03:	jge    0x404f2d
  404f05:	rol    bh,cl
  404f07:	jecxz  0x404f3a
  404f09:	cmp    DWORD PTR [ecx-0x634d66ba],edx
  404f0f:	sub    edi,DWORD PTR [ebx+0x568ee5a4]
  404f15:	ficomp DWORD PTR ds:0xcbdf2d9f
  404f1b:	add    eax,0x2993d8cf
  404f20:	cmp    ebp,esi
  404f22:	pop    ebx
  404f23:	into   
  404f24:	or     DWORD PTR [eax+ecx*2-0x4cc787b1],edi
  404f2b:	call   0xc70c:0x8370effc
  404f32:	imul   esi,DWORD PTR [ebx+0x524276dd],0x22
  404f39:	push   edi
  404f3a:	dec    ebp
  404f3b:	sahf   
  404f3c:	push   ecx
  404f3d:	add    ecx,DWORD PTR [edx+esi*1+0x68]
  404f41:	xor    al,0x19
  404f43:	sbb    DWORD PTR ds:0xd7892e0d,edi
  404f49:	adc    al,0xe4
  404f4b:	iret   
  404f4c:	(bad)  
  404f4d:	cli    
  404f4e:	pushf  
  404f4f:	push   ss
  404f50:	lea    esi,[eax-0x2e62df95]
  404f56:	rcl    DWORD PTR [ecx],0x48
  404f59:	rcr    DWORD PTR [esi+ebx*8+0x4c],1
  404f5d:	push   es
  404f5e:	push   ebp
  404f5f:	imul   eax,ebx,0x51
  404f62:	test   DWORD PTR cs:[edx],edi
  404f65:	cmp    BYTE PTR [edx+0x6956716c],0x54
  404f6c:	mov    esp,0x3be5f371
  404f71:	ins    DWORD PTR es:[edi],dx
  404f72:	inc    esp
  404f73:	or     ecx,ecx
  404f75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f76:	cmp    edi,esp
  404f78:	(bad)  
  404f7a:	and    bh,dh
  404f7c:	jnp    0x404fd4
  404f7e:	int3   
  404f7f:	gs mov edi,0x25d923c1
  404f85:	add    dl,BYTE PTR [ecx-0x5fbd5784]
  404f8b:	and    al,0xe8
  404f8d:	or     dh,dh
  404f8f:	(bad)  
  404f90:	mov    ebx,0x6a14d9f7
  404f95:	in     eax,0xae
  404f97:	jg     0x404fca
  404f99:	jge    0x404f4f
  404f9b:	mov    bl,BYTE PTR [edx-0x28]
  404f9e:	arpl   WORD PTR [ebp-0x7a],sp
  404fa1:	jo     0x404f74
  404fa3:	ret    
  404fa4:	sbb    al,0x34
  404fa6:	pop    edx
  404fa7:	jns    0x404feb
  404fa9:	mov    al,0xd1
  404fab:	(bad)  
  404fac:	in     eax,dx
  404fad:	outs   dx,BYTE PTR ds:[esi]
  404fae:	adc    al,0xde
  404fb0:	lods   eax,DWORD PTR ds:[esi]
  404fb1:	dec    eax
  404fb2:	nop
  404fb3:	push   esp
  404fb4:	xor    al,0x96
  404fb6:	pusha  
  404fb7:	les    eax,FWORD PTR [ebp-0x33c1cb60]
  404fbd:	jnp    0x404f8b
  404fbf:	xor    DWORD PTR [esi],esi
  404fc1:	stos   BYTE PTR es:[edi],al
  404fc2:	out    dx,eax
  404fc3:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fc5:	cmp    al,0xbc
  404fc7:	jnp    0x404f8a
  404fc9:	frstor [ecx+0x7d574daa]
  404fcf:	pop    ebp
  404fd0:	jmp    0x2c1d17f6
  404fd5:	mov    DWORD PTR [ecx-0x5f],ebx
  404fd8:	inc    eax
  404fd9:	jne    0x404f7a
  404fdb:	aam    0x7d
  404fdd:	and    BYTE PTR [ebx+ecx*8-0x13b94b82],dh
  404fe4:	sub    ecx,DWORD PTR [eax-0x68]
  404fe7:	pop    ebx
  404fe8:	pop    esi
  404fe9:	adc    DWORD PTR ds:0x1d9986fa,edi
  404fef:	data16 and al,0xbb
  404ff2:	pop    eax
  404ff3:	add    eax,DWORD PTR [edx-0x53e05282]
  404ff9:	setp   BYTE PTR [eax]
  404ffc:	sbb    ah,BYTE PTR [eax-0x3697cac9]
  405002:	jmp    0xcb81:0x48521d6c
  405009:	and    bh,bl
  40500b:	sahf   
  40500c:	fisttp WORD PTR [esi]
  40500e:	add    edi,0x3a
  405011:	in     eax,0xba
  405013:	ss sbb al,0xbd
  405016:	out    dx,eax
  405017:	in     al,0xb1
  405019:	pop    esi
  40501a:	mov    al,ds:0x22b4726e
  40501f:	test   DWORD PTR [ebp+0x6a1f897e],0xf331290c
  405029:	test   eax,0x6cdac1f0
  40502e:	(bad)  
  40502f:	loopne 0x404fde
  405031:	arpl   WORD PTR [edi+0x39bf87f],ax
  405037:	lock test al,0x7d
  40503a:	retf   
  40503b:	mov    esi,DWORD PTR [eax]
  40503d:	jl     0x405030
  40503f:	add    ecx,0x7e
  405042:	adc    BYTE PTR [esi+esi*2+0x37],ah
  405046:	sub    DWORD PTR es:[ecx+0x15ea12d4],edx
  40504d:	xor    BYTE PTR [ebx],0xd0
  405050:	shr    BYTE PTR [esi+eax*1+0x62ef243a],1
  405057:	push   ecx
  405058:	mov    esp,0xb322f844
  40505d:	mov    edi,0xfb75433d
  405062:	call   0xd898:0x3ae76d4c
  405069:	push   es
  40506a:	xchg   ecx,eax
  40506b:	retf   0x4733
  40506e:	call   0x7db218db
  405073:	sbb    eax,0x3d84d53e
  405078:	cmp    DWORD PTR [ebx],ebx
  40507a:	mov    edx,0xf259efbe
  40507f:	jne    0x40509c
  405081:	icebp  
  405082:	push   ebp
  405083:	enter  0xea71,0x1d
  405087:	dec    ebp
  405088:	mov    esp,0xbefd341b
  40508d:	test   DWORD PTR [ecx+0x48],0x3f39e27f
  405094:	fsubr  DWORD PTR [ebx-0x4a]
  405097:	into   
  405098:	aaa    
  405099:	mov    ah,BYTE PTR [edx+0x1c]
  40509c:	push   ebx
  40509d:	cmp    DWORD PTR [esi],ebp
  40509f:	mov    bh,0xd6
  4050a1:	cmp    BYTE PTR [edx-0xf],dl
  4050a4:	xchg   BYTE PTR [edx],bh
  4050a6:	outs   dx,BYTE PTR ds:[esi]
  4050a7:	popf   
  4050a8:	mov    esp,0x31170064
  4050ad:	mov    esi,0x4a17a96e
  4050b2:	mov    ebp,0xdadcb507
  4050b7:	loope  0x405128
  4050b9:	xchg   esi,eax
  4050ba:	dec    esp
  4050bb:	push   esi
  4050bc:	sbb    eax,0x69a304ca
  4050c1:	rcr    ebp,cl
  4050c3:	pop    ss
  4050c4:	push   0x5b91abfc
  4050c9:	stos   BYTE PTR es:[edi],al
  4050ca:	cwde   
  4050cb:	push   cs
  4050cc:	imul   esi,DWORD PTR [ebp+0x18],0xbf9ed542
  4050d3:	mov    edi,DWORD PTR [ebp+eiz*1-0x1d6772e7]
  4050da:	inc    edx
  4050db:	clc    
  4050dc:	push   eax
  4050dd:	stos   DWORD PTR es:[edi],eax
  4050de:	and    eax,0xbeb6673d
  4050e3:	sbb    BYTE PTR [esi],cl
  4050e5:	inc    edi
  4050e6:	ins    DWORD PTR es:[edi],dx
  4050e7:	scas   eax,DWORD PTR es:[edi]
  4050e8:	fimul  WORD PTR [eax+0x7d]
  4050eb:	cli    
  4050ec:	adc    eax,0xc0d20d18
  4050f1:	jge    0x4050c6
  4050f3:	addr16 ss pop edx
  4050f6:	jae    0x4050da
  4050f8:	mov    ebp,eax
  4050fa:	mov    ah,0xcf
  4050fc:	icebp  
  4050fd:	and    ah,dl
  4050ff:	int3   
  405100:	cld    
  405101:	and    ah,bl
  405103:	mov    cl,0x5e
  405105:	rol    DWORD PTR [ebx+0x365644fb],cl
  40510b:	add    al,0x5c
  40510d:	test   eax,0x5790bbe3
  405112:	push   eax
  405113:	push   eax
  405114:	and    al,0x54
  405116:	xchg   edi,eax
  405117:	cmp    BYTE PTR [ebx+edi*2],bh
  40511a:	fimul  DWORD PTR [edi-0x539b2904]
  405120:	adc    DWORD PTR [ebx+0x7],edx
  405123:	out    0x2c,al
  405125:	jge    0x40516e
  405127:	jns    0x405137
  405129:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40512a:	xor    eax,0xf0467c8f
  40512f:	div    DWORD PTR [edx-0x3167c6f2]
  405135:	sub    eax,0xa284647d
  40513a:	mov    ecx,0xad3fab16
  40513f:	push   eax
  405140:	lods   al,BYTE PTR fs:[esi]
  405142:	pop    eax
  405143:	mov    al,ds:0x5c9ef76e
  405148:	in     al,0x4
  40514a:	add    DWORD PTR [ebp-0x537b9e3],edx
  405150:	pop    ebp
  405151:	retf   
  405152:	fistp  WORD PTR [edx]
  405154:	push   cs
  405155:	shl    DWORD PTR [ebx-0x636f6601],cl
  40515b:	gs test eax,0xef1ff249
  405161:	setle  ch
  405164:	test   DWORD PTR [ecx],esi
  405166:	mov    al,0xea
  405168:	mov    eax,0x7c1fe14a
  40516d:	sbb    BYTE PTR [esi+0x28424c08],ah
  405173:	jnp    0x40518a
  405175:	in     al,dx
  405176:	adc    al,0x70
  405178:	cmc    
  405179:	aam    0xe9
  40517b:	xlat   BYTE PTR ds:[ebx]
  40517c:	int    0xde
  40517e:	mov    ds:0x872d187f,eax
  405183:	adc    bl,bl
  405185:	jo     0x405162
  405187:	out    dx,al
  405188:	call   0x7bc894c7
  40518d:	cmp    cl,cl
  40518f:	xlat   BYTE PTR ds:[ebx]
  405190:	mov    dl,dh
  405192:	mulps  xmm4,XMMWORD PTR [esi+0x70]
  405196:	mov    dl,0x78
  405198:	mov    bh,0x43
  40519a:	push   ds
  40519b:	cld    
  40519c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40519d:	push   ebp
  40519e:	inc    DWORD PTR [eax-0x565bed82]
  4051a4:	push   esi
  4051a5:	dec    ebp
  4051a6:	xchg   ebx,eax
  4051a7:	adc    esi,ebx
  4051a9:	cwde   
  4051aa:	sahf   
  4051ab:	mov    ch,0x43
  4051ad:	push   ebx
  4051ae:	push   0xffffffa7
  4051b0:	retf   
  4051b1:	mov    bl,0x7b
  4051b3:	fsubr  DWORD PTR [edi-0x3f]
  4051b6:	loopne 0x405209
  4051b8:	inc    ebp
  4051b9:	stos   DWORD PTR es:[edi],eax
  4051ba:	lods   eax,DWORD PTR ds:[esi]
  4051bb:	push   es
  4051bc:	stos   BYTE PTR es:[edi],al
  4051bd:	leave  
  4051be:	mov    bl,0x95
  4051c0:	ret    0xa680
  4051c3:	xchg   esp,eax
  4051c4:	retf   
  4051c5:	push   ebx
  4051c6:	xor    cl,bl
  4051c8:	xchg   esp,eax
  4051c9:	gs or  ebx,esp
  4051cc:	aaa    
  4051cd:	cmp    ecx,esp
  4051cf:	fwait
  4051d0:	paddusw mm3,QWORD PTR [edx+0x4fa18b4b]
  4051d7:	test   BYTE PTR [ebp+0x518bc2c6],al
  4051dd:	mov    fs:0xaea53dc1,eax
  4051e3:	mov    dl,0x3c
  4051e5:	shl    BYTE PTR [eax-0xec8e6f9],1
  4051eb:	ja     0x4051fa
  4051ed:	and    dh,dl
  4051ef:	es call 0x1f39:0xeb0776c9
  4051f7:	mov    ebx,0x56fb0fca
  4051fc:	fiadd  DWORD PTR [ebp-0x46]
  4051ff:	out    dx,ax
  405201:	xor    ch,ah
  405203:	xor    DWORD PTR ds:0x7f02fdc7,ebx
  405209:	sti    
  40520a:	mov    al,ds:0x9fc8f90b
  40520f:	jmp    0x1776:0x9dcd668d
  405216:	sbb    edx,DWORD PTR [ecx-0x76]
  405219:	shl    BYTE PTR [ebp-0x66],cl
  40521c:	outs   dx,DWORD PTR ds:[esi]
  40521d:	lahf   
  40521e:	jecxz  0x4051bb
  405220:	jl     0x405243
  405222:	xor    eax,ebx
  405224:	add    eax,0x3272dc
  405229:	jmp    0x405392
  40522e:	mov    ecx,DWORD PTR [ebp-0x38]
  405231:	add    ecx,DWORD PTR [ebp+0x8]
  405234:	mov    DWORD PTR [ebp-0x10],ecx
  405237:	mov    ecx,DWORD PTR [ebp-0x1c]
  40523a:	test   ecx,ecx
  40523c:	je     0x40531d
  405242:	mov    DWORD PTR [ebp-0x20],0x0
  405249:	push   0x3
  40524b:	xor    edx,edx
  40524d:	pop    edx
  40524e:	add    edx,0x8
  405251:	push   edx
  405252:	pop    ecx
  405253:	push   0x6
  405255:	dec    ecx
  405256:	pop    ebx
  405257:	dec    ebx
  405258:	xchg   ebx,ecx
  40525a:	sub    ebx,ecx
  40525c:	xchg   ebx,ecx
  40525e:	dec    ecx
  40525f:	mov    eax,DWORD PTR [ebp-0x1c]
  405262:	imul   eax,ecx
  405265:	sub    esp,eax
  405267:	mov    DWORD PTR [ebp-0x20],esp
  40526a:	mov    eax,DWORD PTR [ebp-0x4]
  40526d:	mov    ecx,0x7510894
  405272:	xor    eax,ecx
  405274:	mov    edx,0x3272dc
  405279:	add    eax,edx
  40527b:	mov    DWORD PTR [ebp+0x8],eax
  40527e:	mov    eax,DWORD PTR [ebp-0x14]
  405281:	xor    eax,ecx
  405283:	add    eax,edx
  405285:	mov    edx,DWORD PTR [ebp+0x14]
  405288:	imul   eax,DWORD PTR [edx]
  40528b:	mov    edx,DWORD PTR [ebp-0x4]
  40528e:	xor    edx,ecx
  405290:	mov    ecx,DWORD PTR [ebp+0x8]
  405293:	lea    ecx,[edx+ecx*1+0x3272dc]
  40529a:	cmp    ecx,eax
  40529c:	je     0x405313
  4052a2:	mov    edi,DWORD PTR [ebp-0x14]
  4052a5:	mov    eax,DWORD PTR [ebp+0x8]
  4052a8:	mov    edx,DWORD PTR [ebp+0x14]
  4052ab:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052af:	mov    ecx,0x7510894
  4052b4:	xor    edx,edx
  4052b6:	xor    edi,ecx
  4052b8:	mov    esi,0x3272dc
  4052bd:	add    edi,esi
  4052bf:	div    edi
  4052c1:	mov    edx,DWORD PTR [ebp-0x4]
  4052c4:	xor    edx,ecx
  4052c6:	lea    eax,[edx+eax*1+0x3272dc]
  4052cd:	mov    edx,DWORD PTR [ebp+0x8]
  4052d0:	mov    edi,DWORD PTR [ebp-0x20]
  4052d3:	mov    DWORD PTR [edi+edx*4],eax
  4052d6:	mov    eax,DWORD PTR [ebp-0x14]
  4052d9:	mov    edx,DWORD PTR [ebp+0x8]
  4052dc:	xor    eax,ecx
  4052de:	lea    eax,[eax+edx*1+0x3272dc]
  4052e5:	mov    DWORD PTR [ebp+0x8],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x14]
  4052eb:	mov    edx,DWORD PTR [ebp+0x14]
  4052ee:	xor    eax,ecx
  4052f0:	add    eax,esi
  4052f2:	imul   eax,DWORD PTR [edx]
  4052f5:	mov    edx,DWORD PTR [ebp-0x4]
  4052f8:	xor    edx,ecx
  4052fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4052fd:	lea    ecx,[edx+ecx*1+0x3272dc]
  405304:	cmp    ecx,eax
  405306:	jne    0x4052a2
  40530c:	mov    eax,esi
  40530e:	jmp    0x405318
  405313:	mov    eax,0x3272dc
  405318:	mov    ebx,0x7510894
  40531d:	mov    ecx,DWORD PTR [ebp-0x4]
  405320:	xor    ecx,ebx
  405322:	add    ecx,eax
  405324:	mov    DWORD PTR [ebp-0xc],ecx
  405327:	mov    ebx,0x65655
  40532c:	add    ebx,0x3234
  405332:	xchg   ebx,esi
  405334:	xor    ebx,ebx
  405336:	push   esi
  405337:	mov    esi,ebx
  405339:	pop    ebx
  40533a:	mov    edx,esi
  40533c:	add    ebx,0x1002
  405342:	lea    eax,[ebp-0x10]
  405345:	add    edx,eax
  405347:	add    edx,0x5
  40534a:	push   edx
  40534b:	inc    esi
  40534c:	pop    ecx
  40534d:	dec    ecx
  40534e:	xchg   ecx,eax
  40534f:	dec    eax
  405350:	xchg   ecx,eax
  405351:	dec    ecx
  405352:	xchg   ecx,edx
  405354:	dec    edx
  405355:	push   edx
  405356:	mov    edx,ebx
  405358:	pop    ebx
  405359:	dec    ebx
  40535a:	call   DWORD PTR [ebx]
  40535c:	cmp    DWORD PTR [ebp+0x10],esi
  40535f:	je     0x40537e
  405365:	xchg   edx,eax
  405366:	push   0xb
  405368:	pop    ecx
  405369:	push   0x4
  40536b:	pop    ebx
  40536c:	inc    ebx
  40536d:	xchg   ebx,ecx
  40536f:	sub    ebx,ecx
  405371:	xchg   ebx,ecx
  405373:	dec    ecx
  405374:	dec    ecx
  405375:	mov    eax,DWORD PTR [ebp-0x1c]
  405378:	imul   eax,ecx
  40537b:	add    esp,eax
  40537d:	xchg   edx,eax
  40537e:	push   eax
  40537f:	xor    ebx,ebx
  405381:	mov    edx,esp
  405383:	dec    edx
  405384:	inc    ebx
  405385:	add    ebx,DWORD PTR [edx+ebx*1]
  405388:	dec    ebx
  405389:	xor    edx,edx
  40538b:	add    DWORD PTR [ebp-0xc],ebx
  40538e:	pop    ebx
  40538f:	mov    eax,DWORD PTR [ebp-0xc]
  405392:	pop    edi
  405393:	pop    esi
  405394:	pop    ebx
  405395:	leave  
  405396:	ret    0x10
  405399:	push   ebp
  40539a:	mov    ebp,esp
  40539c:	sub    esp,0x18
  40539f:	and    DWORD PTR ds:0x413c1e,0x0
  4053a9:	mov    ecx,DWORD PTR ds:0x413c1e
  4053af:	inc    ecx
  4053b0:	mov    DWORD PTR ds:0x413c1e,ecx
  4053b6:	cmp    DWORD PTR ds:0x413c1e,0x8
  4053bd:	jne    0x4053d7
  4053c3:	push   DWORD PTR [ebp-0x20]
  4053c6:	push   0x413cf0
  4053cb:	push   DWORD PTR [ebp-0x24]
  4053ce:	push   DWORD PTR [ebp-0x14]
  4053d1:	call   DWORD PTR ds:0x416770
  4053d7:	cmp    DWORD PTR ds:0x413c1e,0x7
  4053de:	jne    0x4053f3
  4053e4:	xor    ecx,ecx
  4053e6:	or     ecx,DWORD PTR ds:0x413c1e
  4053ec:	inc    ecx
  4053ed:	mov    DWORD PTR ds:0x413c1e,ecx
  4053f3:	cmp    DWORD PTR ds:0x413c1e,0x1f
  4053fa:	jb     0x4053a9
  405400:	and    DWORD PTR ds:0x413c12,ecx
  405406:	mov    DWORD PTR [ebp-0x10],0xf89f85b0
  40540d:	xor    edx,edx
  40540f:	or     edx,DWORD PTR ds:0x413cc0
  405415:	mov    edx,DWORD PTR [edx]
  405417:	and    DWORD PTR ds:0x413ce8,edx
  40541d:	lea    eax,[ebp+0x14]
  405420:	mov    DWORD PTR [ebp-0x4],eax
  405423:	push   esi
  405424:	adc    edx,ecx
  405426:	mov    esi,0xf89c85b0
  40542b:	mov    DWORD PTR [ebp-0xc],esi
  40542e:	and    DWORD PTR ds:0x413c74,0x0
  405438:	jmp    0x40544a
  40543d:	mov    edx,DWORD PTR ds:0x413c74
  405443:	inc    edx
  405444:	mov    DWORD PTR ds:0x413c74,edx
  40544a:	cmp    DWORD PTR ds:0x413c74,0x1a
  405451:	jae    0x405550
  405457:	cmp    DWORD PTR ds:0x413c74,0x10
  40545e:	jne    0x40547c
  405464:	push   0x41401c
  405469:	push   DWORD PTR [ebp-0x14]
  40546c:	push   0x416140
  405471:	push   0x4161b2
  405476:	call   DWORD PTR ds:0x416774
  40547c:	cmp    DWORD PTR ds:0x413c74,0xf
  405483:	jne    0x405498
  405489:	xor    edx,edx
  40548b:	add    edx,DWORD PTR ds:0x413c74
  405491:	inc    edx
  405492:	mov    DWORD PTR ds:0x413c74,edx
  405498:	jmp    0x40543d
  40549d:	and    DWORD PTR ds:0x413c0e,0x0
  4054a7:	jmp    0x4054b9
  4054ac:	mov    ecx,DWORD PTR ds:0x413c0e
  4054b2:	inc    ecx
  4054b3:	mov    DWORD PTR ds:0x413c0e,ecx
  4054b9:	cmp    DWORD PTR ds:0x413c0e,0x16
  4054c0:	jae    0x405550
  4054c6:	cmp    DWORD PTR ds:0x413c0e,0x7
  4054cd:	jne    0x4054e8
  4054d3:	push   0x1925
  4054d8:	push   0x413c1a
  4054dd:	push   0x416140
  4054e2:	call   DWORD PTR ds:0x416778
  4054e8:	cmp    DWORD PTR ds:0x413c0e,0x6
  4054ef:	jne    0x405504
  4054f5:	xor    ecx,ecx
  4054f7:	or     ecx,DWORD PTR ds:0x413c0e
  4054fd:	inc    ecx
  4054fe:	mov    DWORD PTR ds:0x413c0e,ecx
  405504:	jmp    0x4054ac
  405509:	mov    DWORD PTR ds:0x413d1c,0x15
  405513:	cmp    DWORD PTR ds:0x413d1c,0x0
  40551a:	je     0x405550
  405520:	cmp    DWORD PTR ds:0x413d1c,0x21
  405527:	jne    0x405538
  40552d:	push   0x416025
  405532:	call   DWORD PTR ds:0x41677c
  405538:	mov    ecx,DWORD PTR ds:0x413d1c
  40553e:	dec    ecx
  40553f:	mov    DWORD PTR ds:0x413d1c,ecx
  405545:	jmp    0x405513
  40554a:	adc    edx,0x7769
  405550:	lea    eax,[ebp-0xc]
  405553:	mov    DWORD PTR [ebp-0x14],eax
  405556:	or     eax,DWORD PTR ds:0x413c0a
  40555c:	mov    eax,DWORD PTR [ebp-0xc]
  40555f:	and    edx,edx
  405561:	mov    edx,DWORD PTR [ebp-0x14]
  405564:	mov    ecx,0x7510894
  405569:	xor    eax,ecx
  40556b:	add    eax,0x3272dc
  405570:	mov    DWORD PTR [edx],eax
  405572:	and    DWORD PTR ds:0x413d34,0x0
  40557c:	jmp    0x40558c
  405581:	mov    eax,ds:0x413d34
  405586:	inc    eax
  405587:	mov    ds:0x413d34,eax
  40558c:	cmp    DWORD PTR ds:0x413d34,0x17
  405593:	jae    0x4055dc
  405599:	cmp    DWORD PTR ds:0x413d34,0x8
  4055a0:	jne    0x4055b9
  4055a6:	push   0x413cec
  4055ab:	push   DWORD PTR [ebp-0x24]
  4055ae:	push   0x416049
  4055b3:	call   DWORD PTR ds:0x416780
  4055b9:	cmp    DWORD PTR ds:0x413d34,0x7
  4055c0:	jne    0x4055d1
  4055c6:	mov    eax,ds:0x413d34
  4055cb:	inc    eax
  4055cc:	mov    ds:0x413d34,eax
  4055d1:	jmp    0x405581
  4055d6:	and    edx,DWORD PTR ds:0x413bfe
  4055dc:	mov    eax,ds:0x41622c
  4055e1:	mov    edx,DWORD PTR [ebp-0x4]
  4055e4:	add    DWORD PTR ds:0x413bf6,0x4ad3
  4055ee:	mov    eax,DWORD PTR [eax]
  4055f0:	add    eax,DWORD PTR [edx]
  4055f2:	sbb    DWORD PTR ds:0x413c80,0x777b
  4055fc:	push   edi
  4055fd:	xor    DWORD PTR ds:0x413c06,ebx
  405603:	mov    DWORD PTR [ebp-0x8],eax
  405606:	mov    edi,DWORD PTR [ebp+0x8]
  405609:	movzx  eax,BYTE PTR ds:0x413d28
  405610:	sub    DWORD PTR ds:0x413c06,eax
  405616:	mov    eax,ds:0x4163b4
  40561b:	mov    eax,DWORD PTR [eax+0x198]
  405621:	adc    edx,DWORD PTR ds:0x414010
  405627:	xor    edi,ecx
  405629:	mov    edx,0x3272dc
  40562e:	add    DWORD PTR ds:0x413c1a,0x413cd8
  405638:	add    edi,edx
  40563a:	mov    DWORD PTR ds:0x413d28,0x4988
  405644:	cmp    DWORD PTR [eax],edi
  405646:	je     0x40565d
  40564c:	mov    eax,DWORD PTR [eax]
  40564e:	mov    DWORD PTR ds:0x413ce4,0xf81
  405658:	jmp    0x407c4a
  40565d:	mov    eax,DWORD PTR [ebp+0x18]
  405660:	mov    DWORD PTR ds:0x413c06,0x7bbf
  40566a:	cmp    eax,esi
  40566c:	mov    DWORD PTR ds:0x413d30,0x2bf7
  405676:	jne    0x405686
  40567c:	push   0xf89c85b1
  405681:	jmp    0x407c39
  405686:	mov    esi,DWORD PTR [ebp+0x18]
  405689:	movzx  eax,WORD PTR ds:0x413cf0
  405690:	mov    eax,0xf89c85b2
  405695:	cmp    esi,eax
  405697:	jne    0x407c29
  40569d:	mov    eax,DWORD PTR [ebp+0x10]
  4056a0:	inc    DWORD PTR ds:0x413c80
  4056a6:	xor    eax,ecx
  4056a8:	add    eax,edx
  4056aa:	mov    DWORD PTR [ebp-0x18],eax
  4056ad:	adc    DWORD PTR ds:0x413d1c,0x3347
  4056b7:	mov    eax,DWORD PTR [ebp+0xc]
  4056ba:	mov    esi,DWORD PTR [ebp-0x8]
  4056bd:	xor    eax,ecx
  4056bf:	sbb    DWORD PTR ds:0x413ce4,0x413c70
  4056c9:	add    eax,edx
  4056cb:	imul   eax,DWORD PTR [esi]
  4056ce:	and    DWORD PTR ds:0x413c0a,ebx
  4056d4:	mov    esi,DWORD PTR [ebp+0x8]
  4056d7:	and    DWORD PTR ds:0x413d24,0x413c02
  4056e1:	xor    esi,ecx
  4056e3:	add    esi,edx
  4056e5:	cmp    esi,eax
  4056e7:	movzx  eax,BYTE PTR ds:0x413cf0
  4056ee:	mov    eax,DWORD PTR [ebp-0x4]
  4056f1:	push   ebx
  4056f2:	mov    DWORD PTR ds:0x414000,0x6197
  4056fc:	je     0x40577e
  405702:	and    DWORD PTR ds:0x413c1e,0x0
  40570c:	jmp    0x40571e
  405711:	mov    esi,DWORD PTR ds:0x413c1e
  405717:	inc    esi
  405718:	mov    DWORD PTR ds:0x413c1e,esi
  40571e:	cmp    DWORD PTR ds:0x413c1e,0x14
  405725:	jae    0x405765
  40572b:	cmp    DWORD PTR ds:0x413c1e,0xa
  405732:	jne    0x405746
  405738:	push   0x413d1c
  40573d:	push   DWORD PTR [ebp-0x24]
  405740:	call   DWORD PTR ds:0x416784
  405746:	cmp    DWORD PTR ds:0x413c1e,0x9
  40574d:	jne    0x405760
  405753:	mov    esi,DWORD PTR ds:0x413c1e
  405759:	inc    esi
  40575a:	mov    DWORD PTR ds:0x413c1e,esi
  405760:	jmp    0x405711
  405765:	mov    esi,DWORD PTR [ebp-0x18]
  405768:	add    DWORD PTR [eax],esi
  40576a:	mov    eax,DWORD PTR [ebp-0x4]
  40576d:	mov    esi,DWORD PTR [ebp+0xc]
  405770:	xor    esi,ecx
  405772:	add    esi,edx
  405774:	imul   esi,DWORD PTR [eax]
  405777:	mov    DWORD PTR [eax],esi
  405779:	jmp    0x405783
  40577e:	mov    esi,DWORD PTR [ebp+0x14]
  405781:	xor    DWORD PTR [eax],esi
  405783:	mov    eax,DWORD PTR [ebp-0x4]
  405786:	mov    edi,DWORD PTR [ebp+0x10]
  405789:	xor    edi,ecx
  40578b:	mov    esi,0xffcd8d24
  405790:	mov    ebx,esi
  405792:	sub    ebx,edi
  405794:	add    DWORD PTR [eax],ebx
  405796:	mov    eax,DWORD PTR [ebp-0x4]
  405799:	mov    edi,DWORD PTR [ebp-0x8]
  40579c:	add    edi,DWORD PTR [eax]
  40579e:	mov    DWORD PTR [ebp-0x8],edi
  4057a1:	mov    eax,DWORD PTR [ebp+0xc]
  4057a4:	mov    edi,DWORD PTR [ebp+0xc]
  4057a7:	xor    edi,ecx
  4057a9:	xor    eax,ecx
  4057ab:	lea    eax,[eax+edi*1+0x64e5b8]
  4057b2:	mov    edi,DWORD PTR [ebp+0xc]
  4057b5:	xor    edi,ecx
  4057b7:	add    edi,edx
  4057b9:	imul   eax,edi
  4057bc:	mov    edi,DWORD PTR [ebp+0xc]
  4057bf:	xor    edi,ecx
  4057c1:	sub    edi,eax
  4057c3:	mov    eax,DWORD PTR [ebp-0x4]
  4057c6:	add    edi,edx
  4057c8:	cmp    DWORD PTR [eax],edi
  4057ca:	mov    eax,DWORD PTR [ebp-0x4]
  4057cd:	mov    edi,DWORD PTR [ebp+0x10]
  4057d0:	jg     0x4057e3
  4057d6:	xor    edi,ecx
  4057d8:	mov    ebx,esi
  4057da:	sub    ebx,edi
  4057dc:	add    DWORD PTR [eax],ebx
  4057de:	jmp    0x4057e9
  4057e3:	xor    edi,ecx
  4057e5:	add    edi,edx
  4057e7:	add    DWORD PTR [eax],edi
  4057e9:	mov    eax,DWORD PTR [ebp-0x8]
  4057ec:	mov    edi,DWORD PTR [ebp-0x10]
  4057ef:	mov    eax,DWORD PTR [eax]
  4057f1:	jmp    0x407b3d
  4057f6:	imul   ebp,DWORD PTR [edx+0x66],0xaba967a5
  4057fd:	stos   BYTE PTR es:[edi],al
  4057fe:	(bad)  
  4057ff:	sbb    eax,0x117f94ee
  405804:	jne    0x405873
  405806:	loopne 0x405867
  405808:	jl     0x405886
  40580a:	dec    ebx
  40580b:	pop    edi
  40580c:	jl     0x40588a
  40580e:	lea    esi,[ebx+ebx*4-0x2316cb02]
  405815:	pop    ebp
  405816:	out    dx,al
  405817:	loop   0x4057b7
  405819:	mov    eax,0x6bd2c273
  40581e:	mov    eax,0x91dafcdb
  405823:	xchg   edx,eax
  405824:	and    ecx,DWORD PTR [ebx-0xe]
  405827:	(bad)  
  405828:	pop    esp
  405829:	jnp    0x40583e
  40582b:	stos   DWORD PTR es:[edi],eax
  40582c:	cmp    bh,dl
  40582e:	loope  0x405885
  405830:	into   
  405831:	sar    DWORD PTR [ebp-0x6e],1
  405834:	mov    ebp,0x33088754
  405839:	sbb    dl,BYTE PTR [edi-0x1b]
  40583c:	lods   al,BYTE PTR ds:[esi]
  40583d:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40583f:	das    
  405840:	out    dx,eax
  405841:	cmp    eax,0xcb6b2cde
  405846:	fistp  WORD PTR [ebp+0x73722363]
  40584c:	or     DWORD PTR [edx-0xb],ebp
  40584f:	ins    BYTE PTR es:[edi],dx
  405850:	cdq    
  405851:	jp     0x4058d0
  405853:	mov    bl,0xfc
  405855:	xlat   BYTE PTR ds:[ebx]
  405856:	adc    BYTE PTR [ebx-0x5c],0x97
  40585a:	push   esi
  40585b:	pop    ds
  40585c:	mov    WORD PTR [esi-0x60],fs
  40585f:	mov    BYTE PTR [ebx+0x2de2a7f2],dh
  405865:	mov    edx,0xcb8a6b68
  40586a:	repz out dx,al
  40586c:	sub    eax,0x8fd937c2
  405871:	add    BYTE PTR [edi],cl
  405873:	sbb    al,0xc0
  405875:	scas   al,BYTE PTR es:[edi]
  405876:	jmp    0xb88d:0x3d9e1184
  40587d:	out    dx,al
  40587e:	pop    edi
  40587f:	ins    DWORD PTR es:[edi],dx
  405880:	adc    bh,BYTE PTR [edx-0x1c307e0]
  405886:	inc    esp
  405887:	(bad)  
  405888:	aas    
  405889:	push   eax
  40588a:	cmp    al,0xda
  40588c:	add    DWORD PTR [ebx+ecx*4-0x44],ebx
  405890:	sar    bl,0x8f
  405893:	fdivrp st(7),st
  405895:	mov    ch,BYTE PTR [edi+0x7f36e685]
  40589b:	mov    eax,ds:0x86f30ad8
  4058a0:	aam    0x8b
  4058a2:	aas    
  4058a3:	mov    ecx,0x65045b82
  4058a8:	and    BYTE PTR [esi-0x1c],bh
  4058ab:	sbb    DWORD PTR [eax],ebx
  4058ad:	dec    edi
  4058ae:	adc    al,0xd7
  4058b0:	leave  
  4058b1:	add    eax,0x2d0625d4
  4058b6:	out    0x96,eax
  4058b8:	or     al,0xd6
  4058ba:	and    dh,bl
  4058bc:	jbe    0x4058ea
  4058be:	cmp    ah,BYTE PTR [ebx]
  4058c0:	dec    ebx
  4058c1:	retf   0x4aaa
  4058c4:	xchg   esp,eax
  4058c5:	push   cs
  4058c6:	mov    al,ds:0xa4293c44
  4058cb:	test   al,0xfe
  4058cd:	dec    edx
  4058ce:	mov    ds:0x647dd3e8,al
  4058d3:	popa   
  4058d4:	jge    0x40594c
  4058d6:	arpl   WORD PTR [ecx-0x64],bx
  4058d9:	mov    al,0x8d
  4058db:	(bad)  
  4058dc:	jmp    edx
  4058de:	dec    ecx
  4058df:	xlat   BYTE PTR ds:[ebx]
  4058e0:	xchg   esp,eax
  4058e1:	sbb    DWORD PTR [edx+eax*4],eax
  4058e4:	mov    ebx,DWORD PTR [edx]
  4058e6:	out    dx,al
  4058e7:	xlat   BYTE PTR ds:[ebx]
  4058e8:	mov    al,ds:0x7242e714
  4058ed:	test   al,0xd7
  4058ef:	mov    DWORD PTR [eax-0x771dbb2f],0xff2426bc
  4058f9:	int    0xd
  4058fb:	ss jecxz 0x40589e
  4058fe:	xor    BYTE PTR [ebx],dh
  405900:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405901:	jno    0x40597b
  405903:	rcl    BYTE PTR [ecx],cl
  405905:	cmp    ah,BYTE PTR [edi+0x47ebde31]
  40590b:	call   0x87e5b375
  405910:	aam    0x35
  405912:	sub    ecx,DWORD PTR [ebp+0x792b57ef]
  405918:	fsub   st,st(0)
  40591a:	retf   0x240b
  40591d:	jle    0x40595c
  40591f:	scas   eax,DWORD PTR es:[edi]
  405920:	mov    ecx,0x5efd5d91
  405925:	inc    ebx
  405926:	push   ebp
  405927:	pusha  
  405928:	xchg   edi,eax
  405929:	and    dl,BYTE PTR [ecx+0x2a46f3e6]
  40592f:	jmp    0x4058de
  405931:	hlt    
  405932:	or     BYTE PTR [edi-0x31],ah
  405935:	or     BYTE PTR [ebp-0x30],ah
  405938:	cli    
  405939:	pop    edi
  40593a:	out    dx,al
  40593b:	push   0x9b969ad2
  405940:	ja     0x405942
  405942:	mov    al,0xe4
  405944:	pop    es
  405945:	push   edi
  405946:	hlt    
  405947:	push   ds
  405948:	mov    bl,0x1f
  40594a:	jl     0x405983
  40594c:	ss in  al,dx
  40594e:	fst    DWORD PTR es:[edx]
  405951:	push   0xef93e31c
  405956:	or     BYTE PTR [ebx+esi*4],dh
  405959:	call   DWORD PTR [esi]
  40595b:	into   
  40595c:	pop    ebx
  40595d:	mov    ds:0x8614ff7a,eax
  405962:	fcomip st,st(7)
  405964:	fwait
  405965:	push   ds
  405966:	pop    ebp
  405967:	pop    ds
  405968:	sbb    cl,BYTE PTR [edx+eax*8+0x1]
  40596c:	mov    edi,0xe561842f
  405971:	add    esp,DWORD PTR [edx]
  405973:	bound  edi,QWORD PTR [edx-0x2a296886]
  405979:	jbe    0x4059ca
  40597b:	push   es
  40597c:	cmp    al,0xa7
  40597e:	sbb    BYTE PTR [edi+0xf],ah
  405981:	xchg   esi,eax
  405982:	loope  0x4059cd
  405984:	add    DWORD PTR [esi+0x77],0xffffffad
  405988:	icebp  
  405989:	imul   eax,DWORD PTR [ecx+0x504e650d],0x50
  405990:	adc    esi,DWORD PTR ds:0x2ef34e16
  405996:	dec    ecx
  405997:	push   ds
  405998:	shl    DWORD PTR [ecx+0x5b706350],0xea
  40599f:	adc    DWORD PTR [eax-0x39d9e80f],edi
  4059a5:	iret   
  4059a6:	jb     0x4059c3
  4059a8:	xor    DWORD PTR [eax-0x3e],0xffffffee
  4059ac:	bound  edx,QWORD PTR [ebp+0x2d84d690]
  4059b2:	adc    al,0x20
  4059b4:	adc    DWORD PTR [ebx],0x4e
  4059b7:	hlt    
  4059b8:	xchg   ebp,eax
  4059b9:	pop    edx
  4059ba:	into   
  4059bb:	test   BYTE PTR [ecx+0x27],ah
  4059be:	add    esi,DWORD PTR [eax]
  4059c0:	dec    esi
  4059c1:	outs   dx,BYTE PTR ds:[esi]
  4059c2:	pop    ebp
  4059c3:	adc    DWORD PTR [esi-0x23],esi
  4059c6:	cmp    DWORD PTR [ebp-0x7ddc63ef],esp
  4059cc:	leave  
  4059cd:	addr16 and eax,0x9ec8d27e
  4059d3:	cmp    ecx,DWORD PTR [ebx]
  4059d5:	mov    bl,cl
  4059d7:	mov    DWORD PTR ds:0xfbdddcea,ebx
  4059dd:	fs sub eax,0xf72d3d56
  4059e3:	mov    dl,0x2b
  4059e5:	add    esi,esp
  4059e7:	test   eax,0x55dcd2ba
  4059ec:	xchg   edi,eax
  4059ed:	inc    edx
  4059ee:	jne    0x405996
  4059f0:	mov    eax,ds:0x91cfee96
  4059f5:	cwde   
  4059f6:	iret   
  4059f7:	test   ebx,edx
  4059f9:	in     al,dx
  4059fa:	test   DWORD PTR [esi],ecx
  4059fc:	bound  ecx,QWORD PTR [edx]
  4059fe:	sar    ebp,cl
  405a00:	je     0x4059bb
  405a02:	inc    esi
  405a03:	out    0x2,eax
  405a05:	xor    DWORD PTR ds:0x3b8e8f89,esp
  405a0b:	jg     0x405a1e
  405a0d:	dec    esp
  405a0e:	cdq    
  405a0f:	das    
  405a10:	adc    BYTE PTR [ebp-0x21],0xd6
  405a14:	jbe    0x4059a5
  405a16:	dec    ecx
  405a17:	sti    
  405a18:	aam    0x20
  405a1a:	mov    dh,0x6c
  405a1c:	loope  0x405a96
  405a1e:	push   0x2e
  405a20:	arpl   WORD PTR [esi+0x29],cx
  405a23:	test   BYTE PTR [edx-0x7b],0xc5
  405a27:	ins    BYTE PTR es:[edi],dx
  405a28:	fidivr WORD PTR [esi-0x248ea367]
  405a2e:	fbld   TBYTE PTR [edx+edx*2-0x3674bc59]
  405a35:	sub    BYTE PTR [ebp-0x9],al
  405a38:	xchg   ebp,eax
  405a39:	fist   DWORD PTR [esi-0xa4b395f]
  405a3f:	mov    cl,0x74
  405a41:	sbb    DWORD PTR [eax],edi
  405a43:	cmp    cl,BYTE PTR [ebx-0x78e08708]
  405a49:	and    DWORD PTR [ecx-0x8f8d7e5],esp
  405a4f:	pop    ebx
  405a50:	mov    dh,BYTE PTR [eax-0x43]
  405a53:	stos   BYTE PTR es:[edi],al
  405a54:	sar    BYTE PTR [ebp-0xc4a62f3],cl
  405a5a:	push   ds
  405a5b:	(bad)  
  405a5c:	outs   dx,BYTE PTR ds:[esi]
  405a5d:	xor    BYTE PTR [ebx+0x55ccd6e5],dh
  405a63:	js     0x405aad
  405a65:	in     eax,dx
  405a66:	pop    ebx
  405a67:	pop    eax
  405a68:	dec    esp
  405a69:	push   ss
  405a6a:	cmp    DWORD PTR [esi],ebx
  405a6c:	test   BYTE PTR [ecx-0x77],ah
  405a6f:	mov    esi,0xad3e0a7e
  405a74:	test   eax,0xe3e0ea3
  405a79:	mov    eax,0xbfdedb59
  405a7e:	inc    ecx
  405a7f:	imul   al
  405a81:	test   BYTE PTR [edi-0x38621a03],ah
  405a87:	push   ds
  405a88:	sbb    edi,DWORD PTR [ebx+0x24df91e8]
  405a8e:	mov    ds:0x2669b489,al
  405a93:	xor    ecx,DWORD PTR [ebx]
  405a95:	lods   eax,DWORD PTR ds:[esi]
  405a96:	(bad)  
  405a97:	fisttp DWORD PTR [ecx-0x2f3f1fc1]
  405a9d:	sbb    al,0xa
  405a9f:	or     al,0x18
  405aa1:	add    ah,BYTE PTR [eax+ebx*8+0x75e3a072]
  405aa8:	adc    esp,esp
  405aaa:	shl    eax,cl
  405aac:	int    0x1d
  405aae:	add    bh,cl
  405ab0:	inc    edi
  405ab1:	ret    0x742f
  405ab4:	cmp    cl,BYTE PTR [edx]
  405ab6:	ror    BYTE PTR [ecx-0x53],0xce
  405aba:	add    al,0xbb
  405abc:	gs into 
  405abe:	push   0xdac13f48
  405ac3:	xchg   ecx,ebx
  405ac5:	unpckhps xmm7,XMMWORD PTR ds:0x3e694ba4
  405acc:	mul    BYTE PTR [ecx-0x5c4955a]
  405ad2:	dec    edi
  405ad3:	ins    BYTE PTR es:[edi],dx
  405ad4:	jg     0x405af9
  405ad6:	mov    esi,0x2d9ee01f
  405adb:	sub    esp,ecx
  405add:	xchg   ecx,eax
  405ade:	sbb    DWORD PTR [ebx-0x575868b8],0xffffffe8
  405ae5:	ds ret 0xcff8
  405ae9:	pop    esp
  405aea:	data16 xor al,0xa0
  405aed:	fld    DWORD PTR [esi-0x7a]
  405af0:	cdq    
  405af1:	int    0xb8
  405af3:	aad    0x90
  405af5:	ret    
  405af6:	xchg   bh,ch
  405af8:	sub    BYTE PTR [ebp-0x2a],bh
  405afb:	out    0xa9,al
  405afd:	retf   0xcefe
  405b00:	and    DWORD PTR [edx+0x6dbdf3f3],esi
  405b06:	dec    ebx
  405b07:	add    al,0xf1
  405b09:	and    DWORD PTR [esi],eax
  405b0b:	dec    ebx
  405b0c:	dec    edi
  405b0d:	mov    ecx,0xd4e806eb
  405b12:	mov    bl,BYTE PTR gs:[edx+0x10de7b18]
  405b19:	(bad)  
  405b1a:	sbb    eax,0xf8ad12d8
  405b1f:	and    eax,0x295f63a9
  405b24:	xor    DWORD PTR [esp+ebp*8+0x33],edi
  405b28:	pop    ebx
  405b29:	jo     0x405b3c
  405b2b:	mov    bh,0xfb
  405b2d:	outs   dx,BYTE PTR ds:[esi]
  405b2e:	(bad)  
  405b2f:	loopne 0x405af8
  405b31:	cld    
  405b32:	mov    ch,0x1e
  405b34:	mov    cl,0x56
  405b36:	ins    DWORD PTR es:[edi],dx
  405b37:	das    
  405b38:	push   es
  405b39:	aad    0x95
  405b3b:	cmp    DWORD PTR [ebx-0x18],edx
  405b3e:	push   ebx
  405b3f:	sub    BYTE PTR [eax-0x32],cl
  405b42:	mov    eax,ds:0x5d808659
  405b47:	fisttp DWORD PTR [edx]
  405b49:	ss jl  0x405b2b
  405b4c:	xor    ecx,DWORD PTR [eax+0x40]
  405b4f:	ins    BYTE PTR es:[edi],dx
  405b50:	xchg   esi,eax
  405b51:	add    ecx,DWORD PTR [edi+0x605bbe16]
  405b57:	or     al,0xad
  405b59:	xor    esp,0xdebf2955
  405b5f:	neg    DWORD PTR ds:0x35011267
  405b65:	call   0xde7bd534
  405b6a:	mov    ebp,0x50417b05
  405b6f:	mov    eax,ds:0x314a09c4
  405b74:	scas   eax,DWORD PTR es:[edi]
  405b75:	gs int 0x33
  405b78:	call   0xb24efbf2
  405b7d:	pop    ds
  405b7e:	mov    al,BYTE PTR [ebx-0x10]
  405b81:	dec    edi
  405b82:	scas   al,BYTE PTR es:[edi]
  405b83:	pop    DWORD PTR [eax+0x25]
  405b86:	jg     0x405b6a
  405b88:	fmul   DWORD PTR [edx+ebp*2]
  405b8b:	ret    
  405b8c:	sysexit 
  405b8e:	into   
  405b8f:	sti    
  405b90:	jg     0x405b8b
  405b92:	adc    edx,DWORD PTR [ecx+0x3aec6eab]
  405b98:	fist   WORD PTR [edi-0x79b62ae]
  405b9e:	ss das 
  405ba0:	mov    ds:0x865f0d6e,al
  405ba5:	and    edi,DWORD PTR [ecx+esi*8-0x70dcfeb9]
  405bac:	push   cs
  405bad:	aam    0xed
  405baf:	cmp    eax,edx
  405bb1:	cdq    
  405bb2:	(bad)  
  405bb4:	pop    ss
  405bb5:	int    0x42
  405bb7:	or     ebx,DWORD PTR [eax+0xde52ca5]
  405bbd:	cs dec esi
  405bbf:	push   0x3e
  405bc1:	mov    al,0xb4
  405bc3:	push   es
  405bc4:	(bad)  
  405bc5:	adc    eax,0x8b065166
  405bca:	imul   edi,DWORD PTR [eax-0x6c],0x41
  405bce:	add    al,0x34
  405bd0:	mov    edx,0xe5980d8a
  405bd5:	fistp  WORD PTR [edx]
  405bd7:	xor    eax,0x2e0eda3d
  405bdc:	inc    ebx
  405bdd:	inc    esi
  405bde:	mov    fs,WORD PTR [eax+ebp*4-0x4a]
  405be2:	pop    edi
  405be3:	sti    
  405be4:	out    0xb,eax
  405be6:	fld    TBYTE PTR [ebx]
  405be8:	and    ecx,DWORD PTR [edx]
  405bea:	jmp    0x53c9:0x69c6c06c
  405bf1:	idiv   ebx
  405bf3:	(bad)  
  405bf4:	fsubr  st(7),st
  405bf6:	ret    0x8461
  405bf9:	or     al,BYTE PTR [ecx+0x554a373e]
  405bff:	das    
  405c00:	add    eax,0xe226911d
  405c05:	out    0x21,eax
  405c07:	in     al,dx
  405c08:	inc    ecx
  405c09:	or     ebp,eax
  405c0b:	sbb    eax,0x96fa1b12
  405c10:	inc    ebx
  405c11:	out    0xad,al
  405c13:	fld    QWORD PTR [ecx-0x104b5d5d]
  405c19:	data16 fcmovbe st,st(0)
  405c1c:	push   ds
  405c1d:	stos   DWORD PTR es:[edi],eax
  405c1e:	stos   BYTE PTR es:[edi],al
  405c1f:	jp     0x405c4c
  405c21:	pop    es
  405c22:	push   es
  405c23:	ja     0x405c36
  405c25:	hlt    
  405c26:	sub    al,BYTE PTR [ebx+0x7c]
  405c29:	cmc    
  405c2a:	iret   
  405c2b:	or     ah,BYTE PTR [edi]
  405c2d:	adc    eax,0x5f38bb81
  405c32:	mov    WORD PTR [edx],?
  405c34:	scas   al,BYTE PTR es:[edi]
  405c35:	add    eax,0x556519aa
  405c3a:	int3   
  405c3b:	push   esp
  405c3c:	push   ds
  405c3d:	in     al,dx
  405c3e:	jp     0x405c38
  405c40:	pop    edx
  405c41:	fist   DWORD PTR [ebx]
  405c43:	pop    edx
  405c44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c45:	cmp    ah,al
  405c47:	cdq    
  405c48:	mov    DWORD PTR [edx],ebx
  405c4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c4b:	mov    bl,0xd8
  405c4d:	push   esp
  405c4e:	out    dx,al
  405c4f:	(bad)  
  405c50:	jns    0x405c46
  405c52:	add    edi,DWORD PTR [ebp-0x6e]
  405c55:	pop    ss
  405c56:	adc    bl,BYTE PTR [esi+0x885b317]
  405c5c:	xor    eax,0xba92b4d3
  405c61:	test   eax,0x508ef8e1
  405c66:	cmp    al,0x71
  405c68:	lods   eax,DWORD PTR ds:[esi]
  405c69:	aaa    
  405c6a:	push   ds
  405c6b:	into   
  405c6c:	shl    BYTE PTR [eax-0x4c],0x6b
  405c70:	jno    0x405cea
  405c72:	or     dl,BYTE PTR [edi]
  405c74:	and    ecx,ecx
  405c76:	jne    0x405c90
  405c78:	daa    
  405c79:	fmul   DWORD PTR [esi-0x5b]
  405c7c:	dec    ecx
  405c7d:	and    eax,0x884a6ef3
  405c82:	sub    al,0xb4
  405c84:	pop    esp
  405c85:	jne    0x405c86
  405c87:	mov    ds:0xbc36faf4,eax
  405c8c:	cmp    esp,DWORD PTR [edx+ebx*1-0x7299eceb]
  405c93:	popa   
  405c94:	or     al,0x51
  405c96:	adc    eax,0x752dd3f2
  405c9b:	jbe    0x405c1d
  405c9d:	push   edx
  405c9e:	(bad)  
  405c9f:	adc    al,0x2d
  405ca1:	or     al,0x71
  405ca3:	mov    ds:0xeedad055,eax
  405ca8:	fld    TBYTE PTR [ecx-0x4cdceeff]
  405cae:	jl     0x405cef
  405cb0:	loope  0x405d21
  405cb2:	sbb    eax,0x282b01d6
  405cb7:	lock or esi,DWORD PTR [ebp+0x14878147]
  405cbe:	(bad)  [esi]
  405cc0:	sbb    al,0xb5
  405cc2:	mov    ebp,0x93ffb9ac
  405cc7:	mov    ebp,0x61664ddb
  405ccc:	pop    ebx
  405ccd:	fadd   DWORD PTR [esi]
  405ccf:	(bad)  
  405cd0:	xlat   BYTE PTR ds:[ebx]
  405cd1:	scas   al,BYTE PTR es:[edi]
  405cd2:	test   BYTE PTR [edi],0x73
  405cd5:	and    cl,BYTE PTR [edx-0x7552d805]
  405cdb:	sub    DWORD PTR [ecx+0x72],edx
  405cde:	xchg   BYTE PTR [ecx-0x38],dh
  405ce1:	cmp    al,0xcc
  405ce3:	pop    eax
  405ce4:	sub    esp,DWORD PTR ds:0x887f49c3
  405cea:	mul    BYTE PTR [edx]
  405cec:	sbb    DWORD PTR [edx-0x2dd089b7],ebp
  405cf2:	mov    ds:0xcd390ea,al
  405cf7:	ret    
  405cf8:	mov    ecx,0x4c6a7b28
  405cfd:	outs   dx,BYTE PTR ds:[esi]
  405cfe:	out    0x9b,eax
  405d00:	mov    al,0xe8
  405d02:	xor    BYTE PTR [eax+0x60],dl
  405d05:	push   edi
  405d06:	(bad)  
  405d07:	in     al,dx
  405d08:	rcl    BYTE PTR [edi*4+0x2bed4dc6],1
  405d0f:	stos   BYTE PTR es:[edi],al
  405d10:	jo     0x405d5a
  405d12:	clc    
  405d13:	inc    edx
  405d14:	jns    0x405d36
  405d16:	gs pop esi
  405d18:	add    DWORD PTR [ebp-0x7177ec9a],0x18
  405d1f:	(bad)  
  405d20:	push   esi
  405d21:	mov    cl,0xb3
  405d23:	cmp    ah,BYTE PTR [ecx+0x48]
  405d26:	add    edx,edx
  405d28:	xchg   edx,eax
  405d29:	jle    0x405cd5
  405d2b:	sbb    BYTE PTR [ebp-0x2a7d4155],cl
  405d31:	icebp  
  405d32:	rcl    DWORD PTR [esi+eiz*2+0x38],cl
  405d36:	idiv   DWORD PTR [ebx-0x17]
  405d39:	lock repnz stos BYTE PTR es:[edi],al
  405d3c:	push   ebx
  405d3d:	repnz in eax,0xcb
  405d40:	in     al,0x78
  405d42:	(bad)  
  405d43:	out    0x21,eax
  405d45:	and    esi,ebx
  405d47:	pop    ebp
  405d48:	cdq    
  405d49:	loopne 0x405db4
  405d4b:	enter  0x3029,0x55
  405d4f:	sbb    edx,DWORD PTR [ecx+0x2b]
  405d52:	loopne 0x405cfe
  405d54:	and    eax,0x4658d7f1
  405d59:	sahf   
  405d5a:	mov    ebx,0x5a344894
  405d5f:	cs pop ebp
  405d61:	xor    DWORD PTR [esi-0x22],edx
  405d64:	scas   al,BYTE PTR es:[edi]
  405d65:	loope  0x405dd5
  405d67:	pop    esp
  405d68:	shl    esp,1
  405d6a:	mov    eax,0x2c3134b0
  405d6f:	jecxz  0x405d28
  405d71:	jmp    0xa229b7c0
  405d76:	(bad)
  405d79:	pop    esp
  405d7a:	int    0xbe
  405d7c:	sti    
  405d7d:	and    BYTE PTR [ecx+0x624a3399],bl
  405d83:	xor    ebp,DWORD PTR [eax-0x703367a2]
  405d89:	in     eax,0x5f
  405d8b:	push   0x883e2977
  405d90:	pop    esp
  405d91:	jbe    0x405d8b
  405d93:	adc    eax,0x39384f66
  405d98:	jne    0x405da9
  405d9a:	out    0x82,eax
  405d9c:	ret    0x26b4
  405d9f:	ins    DWORD PTR es:[edi],dx
  405da0:	icebp  
  405da1:	(bad)  
  405da2:	fisub  DWORD PTR [esi+eax*8-0x72deda8d]
  405da9:	sbb    al,0xf
  405dab:	clc    
  405dac:	shr    DWORD PTR [eax],1
  405dae:	inc    ebp
  405daf:	cmp    bl,BYTE PTR [ecx-0x43d110f4]
  405db5:	jne    0x405d80
  405db7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405db8:	stos   BYTE PTR es:[edi],al
  405db9:	lea    edi,[ecx]
  405dbb:	mov    al,0xb2
  405dbd:	push   esp
  405dbe:	cmc    
  405dbf:	(bad)  
  405dc0:	fstp   DWORD PTR [ebp+0x35b4f0a]
  405dc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405dc7:	jo     0x405d6e
  405dc9:	and    DWORD PTR [esi],esp
  405dcb:	sbb    BYTE PTR [edx-0x3cc8b3e2],0x8d
  405dd2:	push   es
  405dd3:	loopne 0x405e48
  405dd5:	in     al,dx
  405dd6:	arpl   WORD PTR [eax],ax
  405dd8:	mov    eax,ds:0xa20d6a19
  405ddd:	addr16 xchg edx,eax
  405ddf:	dec    ecx
  405de0:	ffree  st(5)
  405de2:	stc    
  405de3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405de4:	inc    ebp
  405de5:	lock popf 
  405de7:	sbb    bl,BYTE PTR [ebp+ebx*1-0x54fce682]
  405dee:	mov    bl,0xc4
  405df0:	jecxz  0x405e66
  405df2:	sub    BYTE PTR ds:0x78ae78f1,al
  405df8:	aas    
  405df9:	xor    ch,bl
  405dfb:	ror    edi,cl
  405dfd:	mov    cl,0x70
  405dff:	or     BYTE PTR [edx+0xe9cbc9],al
  405e05:	dec    esi
  405e06:	cdq    
  405e07:	pop    ecx
  405e08:	pop    ss
  405e09:	retf   
  405e0a:	ins    DWORD PTR es:[edi],dx
  405e0b:	push   0x4
  405e0d:	pop    es
  405e0e:	adc    eax,0x35c740eb
  405e13:	idiv   bh
  405e15:	sbb    DWORD PTR [ebx],esp
  405e17:	push   ecx
  405e18:	push   0x41b89128
  405e1d:	dec    ebp
  405e1e:	pop    ds
  405e1f:	in     eax,0xd1
  405e21:	icebp  
  405e22:	adc    eax,0x4ffce4a5
  405e27:	jb     0x405dbd
  405e29:	fs jge 0x405e64
  405e2c:	add    esp,edi
  405e2e:	ds mov ah,0x8e
  405e31:	test   DWORD PTR [ebp-0x2c],eax
  405e34:	mov    al,ds:0x7a934056
  405e39:	or     BYTE PTR [esi+0x70],bh
  405e3c:	jg     0x405e8d
  405e3e:	xchg   edi,eax
  405e3f:	add    ebp,edx
  405e41:	outs   dx,DWORD PTR ds:[esi]
  405e42:	fst    DWORD PTR [ecx-0x51]
  405e45:	icebp  
  405e46:	xchg   ebp,eax
  405e47:	(bad)  
  405e48:	mov    eax,0xc5635e9f
  405e4d:	add    eax,0x81d43827
  405e52:	fdiv   DWORD PTR [eax]
  405e54:	dec    esi
  405e55:	mov    al,0x69
  405e57:	shr    DWORD PTR [esi+0x69],0xc4
  405e5b:	sub    al,0x29
  405e5d:	bound  edi,QWORD PTR [ecx+0x42]
  405e60:	loope  0x405e8e
  405e62:	outs   dx,BYTE PTR ds:[esi]
  405e63:	pop    eax
  405e64:	or     cl,BYTE PTR [edx+edx*4-0x67]
  405e68:	mov    ecx,esi
  405e6a:	test   ch,al
  405e6c:	shl    BYTE PTR [eax-0x50],0x87
  405e70:	mov    dl,0xb8
  405e72:	loope  0x405e95
  405e74:	mov    dh,0x34
  405e76:	repnz repz push ecx
  405e79:	adc    eax,0xba57883
  405e7e:	leave  
  405e7f:	daa    
  405e80:	fnstsw WORD PTR [ecx]
  405e82:	retf   
  405e83:	popa   
  405e84:	push   ecx
  405e85:	repnz inc edx
  405e87:	mov    cl,0x9
  405e89:	fadd   DWORD PTR [eax+0x3e]
  405e8c:	scas   eax,DWORD PTR es:[edi]
  405e8d:	sub    al,0xa9
  405e8f:	jge    0x405ea8
  405e91:	mov    cl,0x1f
  405e93:	pop    edi
  405e94:	push   esp
  405e95:	pop    ss
  405e96:	jp     0x405e41
  405e98:	and    bh,BYTE PTR ss:[ecx]
  405e9b:	xor    al,0xb1
  405e9d:	fidiv  WORD PTR [ebp-0x1e001289]
  405ea3:	cld    
  405ea4:	hlt    
  405ea5:	jg     0x405e85
  405ea7:	jb     0x405e32
  405ea9:	sbb    edx,edx
  405eab:	add    al,0x1b
  405ead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405eae:	sbb    dl,bl
  405eb0:	and    ch,BYTE PTR [edi+edi*8]
  405eb3:	(bad)
  405eb6:	or     eax,0x7d6c4329
  405ebb:	and    DWORD PTR [edx+0x74],ebx
  405ebe:	mov    esp,0xe8753639
  405ec3:	rcl    BYTE PTR [ebp+0x5d],1
  405ec6:	xchg   DWORD PTR [edx],edx
  405ec8:	sbb    DWORD PTR ss:[ecx-0x70ec8404],ebp
  405ecf:	dec    ecx
  405ed0:	jns    0x405e9f
  405ed2:	xlat   BYTE PTR ds:[ebx]
  405ed3:	and    cl,BYTE PTR [esi-0x3]
  405ed6:	mov    ecx,0x56a1e770
  405edb:	or     eax,0xf8a0a73
  405ee0:	pop    esi
  405ee1:	dec    edi
  405ee2:	xchg   BYTE PTR [esi],ah
  405ee4:	mov    BYTE PTR [eax+ecx*2-0x57eb2861],bl
  405eeb:	outs   dx,DWORD PTR ds:[esi]
  405eec:	adc    DWORD PTR [ecx+0x65a95b95],ecx
  405ef2:	ret    0x27a6
  405ef5:	out    0x86,eax
  405ef7:	fwait
  405ef8:	mov    esi,0x4ccdc7ec
  405efd:	inc    edx
  405efe:	push   esp
  405eff:	inc    edx
  405f00:	in     eax,0x1f
  405f02:	stc    
  405f03:	fldenv [esi]
  405f05:	add    eax,DWORD PTR [eax+esi*4]
  405f08:	pushf  
  405f09:	lods   eax,DWORD PTR ds:[esi]
  405f0a:	pushf  
  405f0b:	jp     0x405ec0
  405f0d:	sub    BYTE PTR [edi+0x37300006],ah
  405f13:	(bad)  
  405f14:	out    0x27,eax
  405f16:	imul   esi,esp,0x32
  405f19:	fs inc edi
  405f1b:	cwde   
  405f1c:	jo     0x405f23
  405f1e:	xor    ch,BYTE PTR ds:0xd46c380e
  405f24:	mov    al,ds:0x64d441dc
  405f29:	sahf   
  405f2a:	cwde   
  405f2b:	sbb    ah,ch
  405f2d:	sbb    DWORD PTR [eax+0x2d],ecx
  405f30:	jbe    0x405f49
  405f32:	fcom   QWORD PTR [eax+0xa]
  405f35:	cmp    BYTE PTR [edi],bl
  405f37:	(bad)  
  405f38:	mov    al,0x42
  405f3a:	inc    edx
  405f3b:	mov    ebx,?
  405f3d:	inc    edx
  405f3e:	mov    WORD PTR [ebx+esi*1],gs
  405f41:	scas   al,BYTE PTR es:[edi]
  405f42:	xchg   edx,eax
  405f43:	retf   
  405f44:	jo     0x405efb
  405f46:	in     al,dx
  405f47:	in     al,dx
  405f48:	xchg   ebp,eax
  405f49:	out    dx,eax
  405f4a:	loope  0x405f0f
  405f4c:	ret    
  405f4d:	ins    BYTE PTR es:[edi],dx
  405f4e:	inc    ebx
  405f4f:	xor    BYTE PTR [esi],0xfe
  405f52:	and    cl,BYTE PTR [ebx+0x3ea33174]
  405f58:	add    esp,DWORD PTR [edx-0x3ffb9948]
  405f5e:	sbb    BYTE PTR [ebp+0x49e24b81],bl
  405f64:	jge    0x405ee6
  405f66:	mov    dl,0x1d
  405f68:	and    esi,edx
  405f6a:	add    ecx,DWORD PTR [eax]
  405f6c:	mov    BYTE PTR [edx+ebx*2+0x159b007c],ah
  405f73:	sbb    al,0x4b
  405f75:	retf   0x2c20
  405f78:	mov    ah,BYTE PTR [eax+esi*4-0x30674208]
  405f7f:	jno    0x405fc4
  405f81:	jg     0x405fd1
  405f83:	pusha  
  405f84:	pop    edx
  405f85:	sbb    eax,DWORD PTR [ecx]
  405f87:	add    al,BYTE PTR [edx-0x6c21dfcf]
  405f8d:	jp     0x405ff8
  405f8f:	fdivrp st(1),st
  405f91:	(bad)  
  405f93:	inc    edi
  405f94:	mov    cl,0x8f
  405f96:	jecxz  0x405f38
  405f98:	dec    ebp
  405f99:	mov    eax,ds:0x1c1f9158
  405f9e:	cmp    edi,DWORD PTR [ecx-0x71]
  405fa1:	and    al,0xa6
  405fa3:	jmp    0x662f:0x33eaf812
  405faa:	sub    esi,ebx
  405fac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fad:	(bad)  
  405fae:	pushf  
  405faf:	hlt    
  405fb0:	sar    BYTE PTR [ebx+0x2b11f003],cl
  405fb6:	loope  0x405f8e
  405fb8:	cmp    BYTE PTR [ecx],cl
  405fba:	rcl    DWORD PTR [ecx-0x55],1
  405fbd:	mov    ebp,0x3d45e336
  405fc2:	push   ecx
  405fc3:	mov    edi,0x65d2ada8
  405fc8:	stos   DWORD PTR es:[edi],eax
  405fc9:	xchg   esp,eax
  405fca:	add    al,BYTE PTR [ecx]
  405fcc:	outs   dx,BYTE PTR ds:[esi]
  405fcd:	imul   edi,ecx,0x4b
  405fd0:	arpl   cx,bp
  405fd2:	push   esi
  405fd3:	mov    ecx,0xc94b0d6f
  405fd8:	arpl   WORD PTR [edi],sp
  405fda:	xchg   ah,bl
  405fdc:	sbb    ebp,DWORD PTR [ecx+0x45cb43ea]
  405fe2:	push   eax
  405fe3:	arpl   cx,bx
  405fe5:	xchg   ebx,eax
  405fe6:	xor    eax,0x2d21984e
  405feb:	(bad)  
  405fec:	xor    eax,DWORD PTR [edx]
  405fee:	jecxz  0x40601d
  405ff0:	push   ds
  405ff1:	mov    eax,ds:0xe3246282
  405ff6:	push   esp
  405ff7:	push   ss
  405ff8:	out    0x72,eax
  405ffa:	int3   
  405ffb:	fld    DWORD PTR [ebp-0x7d348b27]
  406001:	xor    dh,BYTE PTR [ecx]
  406003:	call   0xb9cba1fe
  406008:	or     BYTE PTR [esi-0x7d],bh
  40600b:	jae    0x406048
  40600d:	lahf   
  40600e:	add    ah,al
  406010:	dec    ecx
  406011:	push   es
  406012:	xor    edx,DWORD PTR [edx+0x122de6ed]
  406018:	popa   
  406019:	outs   dx,DWORD PTR ds:[esi]
  40601a:	push   ecx
  40601b:	push   eax
  40601c:	addr16 call 0x502:0xe9743398
  406024:	lock dec edi
  406026:	push   eax
  406027:	call   0xa29e:0x46fad015
  40602e:	mov    al,ds:0x260a140f
  406033:	mov    WORD PTR [edx+0x4c],?
  406036:	cmp    bl,dl
  406038:	dec    ecx
  406039:	cmp    eax,DWORD PTR [eax]
  40603b:	in     eax,dx
  40603c:	rcl    DWORD PTR [ebx+esi*8],0xce
  406040:	fmulp  st(2),st
  406042:	or     DWORD PTR [eax+edx*1],0x7e
  406046:	outs   dx,BYTE PTR ds:[esi]
  406047:	cmp    DWORD PTR [ecx],0x4d
  40604a:	fbld   TBYTE PTR [eax+ecx*4]
  40604d:	adc    BYTE PTR ds:0x909b2b5b,bl
  406053:	inc    esi
  406054:	in     al,dx
  406055:	or     eax,0xba34938a
  40605a:	outs   dx,BYTE PTR ds:[esi]
  40605b:	pop    esi
  40605c:	mov    dl,0x1d
  40605e:	mov    dh,al
  406060:	mov    ah,BYTE PTR [ebx-0x1d8ddf3f]
  406066:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406067:	adc    esp,ebp
  406069:	pop    ebx
  40606a:	dec    ebp
  40606b:	push   esp
  40606c:	fld    QWORD PTR [edx]
  40606e:	repz jns 0x40607b
  406071:	iret   
  406072:	add    DWORD PTR [ebp+0x7],0x55
  406076:	push   0x56
  406078:	sti    
  406079:	iret   
  40607a:	pop    esi
  40607b:	enter  0x7edf,0xa9
  40607f:	retf   
  406080:	scas   al,BYTE PTR es:[edi]
  406081:	xor    esi,DWORD PTR [ebp-0x57e52b2d]
  406087:	sar    BYTE PTR [eax],0x72
  40608a:	outs   dx,DWORD PTR ds:[esi]
  40608b:	pop    ss
  40608c:	sbb    ah,BYTE PTR [edx-0x19]
  40608f:	xor    eax,0x4f1465c2
  406094:	xchg   edx,eax
  406095:	outs   dx,DWORD PTR ds:[esi]
  406096:	cdq    
  406097:	mov    edx,0xb11c563a
  40609c:	loop   0x40607d
  40609e:	int    0x43
  4060a0:	or     al,0x40
  4060a2:	iret   
  4060a3:	cmp    ebp,DWORD PTR [ebx]
  4060a5:	mov    cl,0xb1
  4060a7:	int    0x52
  4060a9:	mov    ecx,0x9238b96c
  4060ae:	ins    BYTE PTR es:[edi],dx
  4060af:	xor    BYTE PTR [esi+0x59],ah
  4060b2:	ror    cl,0xc1
  4060b5:	jne    0x406048
  4060b7:	fwait
  4060b8:	cmp    eax,0xe2352471
  4060bd:	mov    ds:0xa7883164,al
  4060c2:	mov    fs,ebp
  4060c4:	sbb    dl,0xd5
  4060c7:	push   edi
  4060c8:	shr    DWORD PTR [edx],0xd9
  4060cb:	sbb    DWORD PTR [ebp+0x63bf6e86],ecx
  4060d1:	mov    esi,0xf15f22c1
  4060d6:	sti    
  4060d7:	cld    
  4060d8:	dec    ebx
  4060d9:	mov    ss,WORD PTR [edi+0x47]
  4060dc:	stos   DWORD PTR es:[edi],eax
  4060dd:	call   esp
  4060df:	fisttp WORD PTR [eax+eax*2]
  4060e2:	sbb    BYTE PTR [ecx-0x7bc135cd],cl
  4060e8:	sbb    eax,0xe1e95883
  4060ed:	call   0xf854:0xb9e19727
  4060f4:	mov    ebp,esp
  4060f6:	test   al,0x1d
  4060f8:	inc    esp
  4060f9:	in     eax,dx
  4060fa:	cmc    
  4060fb:	lds    ecx,FWORD PTR [eax]
  4060fd:	fsub   QWORD PTR [esi+0x68]
  406100:	clc    
  406101:	(bad)  
  406102:	xchg   ebp,eax
  406103:	adc    DWORD PTR [edx+0x10],ebp
  406106:	jae    0x406132
  406108:	mov    WORD PTR [esi+0x25],gs
  40610b:	mov    esi,0x3d94162a
  406110:	(bad)  
  406111:	xchg   esi,eax
  406112:	xchg   edx,eax
  406113:	jle    0x4060ca
  406115:	mov    al,ds:0xc83bb78a
  40611a:	push   edi
  40611b:	push   ds
  40611c:	pushf  
  40611d:	aas    
  40611e:	mov    edx,0xb4a83e79
  406123:	mov    ebp,0x51889583
  406128:	sbb    eax,0xe964c60d
  40612d:	(bad)  
  40612e:	scas   eax,DWORD PTR es:[edi]
  40612f:	adc    BYTE PTR [edx-0x2084ff82],0x71
  406136:	add    al,al
  406138:	neg    BYTE PTR [eax-0x13]
  40613b:	or     al,0x43
  40613d:	stos   DWORD PTR es:[edi],eax
  40613e:	pop    ebp
  40613f:	retf   0xbebe
  406142:	imul   ecx,DWORD PTR [eax+0x36f118db],0xafd67ace
  40614c:	pop    edi
  40614d:	and    edi,ebx
  40614f:	and    BYTE PTR [edx+0xfa9cdb2],bl
  406155:	jmp    0x406175
  406157:	dec    esi
  406158:	jne    0x4061be
  40615a:	or     esp,ebp
  40615c:	cld    
  40615d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40615e:	test   eax,0x59773971
  406163:	xchg   esp,eax
  406164:	mov    eax,0xc8ada885
  406169:	push   cs
  40616a:	aam    0xd8
  40616c:	inc    esp
  40616d:	xlat   BYTE PTR ds:[ebx]
  40616e:	lods   al,BYTE PTR gs:[esi]
  406170:	out    0xea,eax
  406172:	push   es
  406173:	loope  0x4061c8
  406175:	sahf   
  406176:	out    0x66,al
  406178:	inc    esi
  406179:	dec    esp
  40617a:	adc    bl,BYTE PTR [esi+0x1bcd6dd2]
  406180:	dec    esi
  406181:	outs   dx,BYTE PTR ds:[esi]
  406182:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406183:	mov    ch,0xd2
  406185:	sub    edi,0xbbbfb089
  40618b:	pop    ebx
  40618c:	ds dec ecx
  40618e:	add    BYTE PTR [esi+0x2d],al
  406191:	add    al,0xfd
  406193:	rcr    ebx,cl
  406195:	cs inc eax
  406197:	mov    esi,0x90bf12bb
  40619c:	or     BYTE PTR [esi-0x1c371519],ah
  4061a2:	jle    0x40613e
  4061a4:	mov    ch,0x51
  4061a6:	or     eax,0x6956de8d
  4061ab:	xchg   DWORD PTR [esi],ecx
  4061ad:	scas   eax,DWORD PTR es:[edi]
  4061ae:	pop    ss
  4061af:	icebp  
  4061b0:	daa    
  4061b1:	push   ebx
  4061b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061b3:	mov    bh,0x16
  4061b5:	jmp    0x4061f2
  4061b7:	shl    BYTE PTR [edx-0x18b182e5],0x8e
  4061be:	into   
  4061bf:	dec    edx
  4061c0:	bound  ebp,QWORD PTR [edx-0x45]
  4061c3:	mov    ebp,0x67de5b5e
  4061c8:	xor    eax,0xa91c9244
  4061cd:	ja     0x4061e5
  4061cf:	mov    cl,0x63
  4061d1:	ss push ebx
  4061d3:	iret   
  4061d4:	jne    0x4061e2
  4061d6:	xchg   edi,eax
  4061d7:	ss or  esi,edx
  4061da:	js     0x40615e
  4061dc:	mov    WORD PTR [edi],es
  4061de:	mov    ds:0x448ce0b3,al
  4061e3:	js     0x406210
  4061e5:	push   ss
  4061e6:	mov    ds:0x6dc58854,al
  4061eb:	repnz mov eax,ds:0xcd147651
  4061f1:	pop    ss
  4061f2:	push   esp
  4061f3:	and    BYTE PTR [ebx-0x2a],al
  4061f6:	push   edx
  4061f7:	test   DWORD PTR [ecx-0x30],0x4fd9e724
  4061fe:	pop    ss
  4061ff:	stc    
  406200:	mov    ah,BYTE PTR [eax+0x6a]
  406203:	lock sub edi,ebp
  406206:	pop    ebp
  406207:	or     al,0x9d
  406209:	ret    0x6fd3
  40620c:	xor    al,bh
  40620e:	fistp  QWORD PTR [eax*2+0xbe4ecb2]
  406215:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406217:	in     eax,dx
  406218:	fwait
  406219:	in     al,dx
  40621a:	xor    ah,BYTE PTR [ebp+0x16cf6143]
  406220:	xchg   BYTE PTR [ebx+0x78],bh
  406223:	dec    eax
  406224:	cmc    
  406225:	dec    ebx
  406226:	xchg   esi,eax
  406227:	loop   0x40625a
  406229:	addr16 jmp 0x57de:0x214ac570
  406231:	xchg   esi,eax
  406232:	dec    dl
  406234:	dec    eax
  406235:	mov    cl,0xec
  406237:	sbb    DWORD PTR [edx],ebp
  406239:	loopne 0x4061d1
  40623b:	cmp    al,0xe4
  40623d:	jns    0x4062a7
  40623f:	cs mov cl,0x74
  406242:	retf   0xa73
  406245:	daa    
  406246:	cs xchg edi,eax
  406248:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406249:	sbb    edi,ebx
  40624b:	js     0x4061e4
  40624d:	mov    edx,0xf38e4d0e
  406252:	test   DWORD PTR gs:[edx-0x6fe3badf],eax
  406259:	jl     0x4061de
  40625b:	test   BYTE PTR [edi+edi*4-0x73],bl
  40625f:	cs sub eax,0xd1f939b
  406265:	outs   dx,DWORD PTR ds:[esi]
  406266:	idiv   BYTE PTR [eax+0x77]
  406269:	sar    edx,0xb4
  40626c:	add    eax,0x10c09176
  406271:	and    BYTE PTR [esi+0x11],dl
  406274:	jmp    0x265e:0x7a9729e7
  40627b:	out    dx,eax
  40627c:	in     al,0x65
  40627e:	push   esp
  40627f:	popf   
  406280:	lock xchg ecx,eax
  406282:	push   es
  406283:	jle    0x40627c
  406285:	adc    edi,DWORD PTR [edx]
  406287:	call   0xf83c:0x36c6192
  40628e:	sub    eax,0x88eca380
  406293:	jne    0x406255
  406295:	sub    eax,0x95b63804
  40629a:	push   es
  40629b:	in     eax,dx
  40629c:	mov    ebx,gs
  40629e:	jb     0x4062b3
  4062a0:	leave  
  4062a1:	xchg   ebx,eax
  4062a2:	xor    bh,BYTE PTR [ebx-0x59]
  4062a5:	jne    0x406311
  4062a7:	lahf   
  4062a8:	es push 0xbf818940
  4062ae:	adc    al,BYTE PTR [esi]
  4062b0:	aam    0xda
  4062b2:	sub    al,0x87
  4062b4:	icebp  
  4062b5:	xor    bl,BYTE PTR gs:[esi+0x78]
  4062b9:	cmove  esi,ecx
  4062bc:	nop
  4062bd:	aad    0x9
  4062bf:	xor    al,0x81
  4062c1:	sbb    al,0x24
  4062c3:	push   esp
  4062c4:	dec    edx
  4062c5:	ss int3 
  4062c7:	sbb    DWORD PTR [esi+0x34],edx
  4062ca:	repz xor DWORD PTR [ebx],0x307bc0ff
  4062d1:	jb     0x4062f2
  4062d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062d5:	sahf   
  4062d6:	dec    esp
  4062d7:	add    eax,0x9fcb0bd3
  4062dc:	inc    edx
  4062dd:	idiv   bh
  4062df:	xor    eax,0xef4d7a42
  4062e4:	repz mov ds,WORD PTR [ebx-0x76]
  4062e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062e9:	cld    
  4062ea:	xchg   ebp,eax
  4062eb:	adc    BYTE PTR [ebx+0x8],0x75
  4062ef:	fidivr WORD PTR [ebx-0x3124659d]
  4062f5:	hlt    
  4062f6:	lods   al,BYTE PTR ds:[esi]
  4062f7:	aam    0x0
  4062f9:	data16 cmc 
  4062fb:	mov    esp,0xbdfaaf2d
  406300:	icebp  
  406301:	sbb    eax,DWORD PTR [esi]
  406303:	repnz mov ds:0x29acf61f,eax
  406309:	stc    
  40630a:	dec    esp
  40630b:	dec    ebx
  40630c:	ficom  DWORD PTR [eax-0x280cae28]
  406312:	and    BYTE PTR [edi-0x3d],dl
  406315:	push   esi
  406316:	mov    esi,0xae7e8fc8
  40631b:	stos   BYTE PTR es:[edi],al
  40631c:	call   0x8837:0x80e6de42
  406323:	rcl    dl,0xb5
  406326:	mov    BYTE PTR [edi],cl
  406328:	add    dh,0x4a
  40632b:	push   ss
  40632c:	and    BYTE PTR [esi+eax*8-0x5a],ch
  406330:	out    0x26,eax
  406332:	sbb    BYTE PTR [esi],dl
  406334:	inc    ebx
  406335:	jbe    0x40635f
  406337:	cmp    al,BYTE PTR [ecx+0x46]
  40633a:	cli    
  40633b:	dec    ebp
  40633c:	je     0x406362
  40633e:	and    DWORD PTR ss:[ebx+0x5196b90a],ebx
  406345:	data16 and dh,BYTE PTR [edi-0x1c053efe]
  40634c:	clc    
  40634d:	jno    0x4062f8
  40634f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406350:	push   ecx
  406351:	cmp    BYTE PTR [eax+0x469d13ec],0xb0
  406358:	lea    esp,[edx+0x40]
  40635b:	jno    0x4062f9
  40635d:	xchg   ecx,ebp
  40635f:	inc    ebp
  406360:	lods   eax,DWORD PTR ds:[esi]
  406361:	arpl   WORD PTR [edx-0x6a],bx
  406364:	and    al,0x23
  406366:	pop    ecx
  406367:	cmp    eax,DWORD PTR [esi+0x19]
  40636a:	cmp    eax,0xee7eb050
  40636f:	test   DWORD PTR [ebx+0x67],edi
  406372:	jp     0x4063b9
  406374:	sbb    eax,0x69b419d1
  406379:	cmp    BYTE PTR [esi+0x18cef494],dh
  40637f:	mov    bh,0x83
  406381:	push   ds
  406382:	xlat   BYTE PTR ds:[ebx]
  406383:	xchg   edx,eax
  406384:	push   esp
  406385:	je     0x4063fa
  406387:	leave  
  406388:	clc    
  406389:	cmp    al,0x78
  40638b:	aaa    
  40638c:	aas    
  40638d:	jl     0x4063fc
  40638f:	arpl   WORD PTR [eax],ax
  406391:	push   0xffffffe5
  406393:	xor    al,0x93
  406395:	bts    DWORD PTR [edx],eax
  406398:	jb     0x40635c
  40639a:	and    DWORD PTR [eax+0x68],0x6f
  40639e:	sbb    esi,DWORD PTR [edi+ecx*4+0x5b]
  4063a2:	pop    es
  4063a3:	in     al,dx
  4063a4:	lods   al,BYTE PTR ds:[esi]
  4063a5:	cmp    dl,BYTE PTR [edi-0x4e]
  4063a8:	and    al,0x41
  4063aa:	mov    esi,0x602cc0e7
  4063af:	jmp    0xb522e223
  4063b4:	push   0xffffff89
  4063b6:	xchg   esp,eax
  4063b7:	cmp    al,0xce
  4063b9:	adc    bh,BYTE PTR [eax+esi*1]
  4063bc:	xor    DWORD PTR ds:0x56e2e668,esp
  4063c2:	and    DWORD PTR [edi+0x3d],esi
  4063c5:	nop
  4063c6:	xor    al,0x91
  4063c8:	test   eax,0x22ce7de5
  4063cd:	dec    ebx
  4063ce:	sub    al,dh
  4063d0:	add    al,0x77
  4063d2:	push   edx
  4063d3:	push   ebx
  4063d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063d5:	push   esi
  4063d6:	jmp    0x406388
  4063d8:	sub    BYTE PTR cs:[esp+eiz*4-0x38],dh
  4063dd:	jmp    0x3856f610
  4063e2:	shr    DWORD PTR [ecx],1
  4063e4:	push   ebx
  4063e5:	push   esi
  4063e6:	sbb    dh,bl
  4063e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063e9:	mov    esi,0xad966ac1
  4063ee:	xchg   ebx,eax
  4063ef:	test   DWORD PTR [ecx+0x4437749f],ecx
  4063f5:	sbb    BYTE PTR [esi+0x15dcf42d],ah
  4063fb:	mov    ecx,0x38e94235
  406400:	adc    al,0xbd
  406402:	fidivr WORD PTR [ebp-0x3ab5f900]
  406408:	repz adc eax,0x6c85d083
  40640e:	(bad)  
  40640f:	and    eax,0x82580976
  406414:	cwde   
  406415:	scas   al,BYTE PTR es:[edi]
  406416:	fs ret 
  406418:	mov    ds:0xc950e933,eax
  40641d:	iret   
  40641e:	pop    es
  40641f:	out    0x4b,al
  406421:	xor    edi,eax
  406423:	std    
  406424:	fs add al,0x7f
  406427:	icebp  
  406428:	pop    esi
  406429:	dec    eax
  40642a:	mov    BYTE PTR [esi-0x7963c100],al
  406430:	or     eax,0x74ffe37b
  406435:	lods   eax,DWORD PTR ds:[esi]
  406436:	call   0x6f70:0x198375e2
  40643d:	mov    ebp,0x56fdcf1b
  406442:	(bad)  
  406443:	and    eax,0x46adeaa7
  406448:	xchg   edx,ebx
  40644a:	inc    ebp
  40644b:	jae    0x406418
  40644d:	das    
  40644e:	scas   eax,DWORD PTR es:[edi]
  40644f:	mov    ebp,0x399856e4
  406454:	pop    esi
  406455:	scas   al,BYTE PTR es:[edi]
  406456:	sar    DWORD PTR [esi],1
  406458:	push   esp
  406459:	nop
  40645a:	cmp    esp,DWORD PTR [eax-0x5573cd49]
  406460:	jle    0x406403
  406462:	ss iret 
  406464:	inc    ebp
  406465:	rol    BYTE PTR [eax-0x71],1
  406468:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406469:	test   ecx,ebx
  40646b:	xor    eax,0x4f7ee6b
  406470:	and    DWORD PTR [ecx-0x35898c10],esi
  406476:	cli    
  406477:	adc    ebp,DWORD PTR [eax-0x3b83db50]
  40647d:	repz push ecx
  40647f:	mov    ebp,0xe9487832
  406484:	inc    esp
  406485:	dec    esp
  406486:	and    al,0x20
  406488:	mov    al,0x7a
  40648a:	sub    edi,edi
  40648c:	in     al,dx
  40648d:	mov    eax,ds:0x943dd56d
  406492:	push   esp
  406493:	pop    esi
  406494:	or     eax,0xd3c255c0
  406499:	push   0x24
  40649b:	sbb    eax,0x30cfa982
  4064a0:	repz int3 
  4064a2:	jecxz  0x40646e
  4064a4:	mov    ah,0x81
  4064a6:	dec    ecx
  4064a7:	lock in eax,dx
  4064a9:	and    ch,bh
  4064ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064ac:	mov    esi,0xb339fc4e
  4064b1:	mov    eax,0xb46763d0
  4064b6:	arpl   WORD PTR [edx+0x35f6b940],sp
  4064bc:	mov    ?,WORD PTR [eax-0x2713d0eb]
  4064c2:	repz arpl WORD PTR [eax-0x62],bp
  4064c6:	jne    0x40652f
  4064c8:	int    0xca
  4064ca:	and    ebp,DWORD PTR [edi]
  4064cc:	xor    al,0x3d
  4064ce:	push   cs
  4064cf:	xchg   ecx,eax
  4064d1:	popf   
  4064d2:	pop    ecx
  4064d3:	sahf   
  4064d4:	cmc    
  4064d5:	ins    BYTE PTR es:[edi],dx
  4064d6:	xor    eax,0x1d010702
  4064db:	adc    dh,BYTE PTR [edx-0x35a22408]
  4064e1:	gs jg  0x4064a7
  4064e4:	stc    
  4064e5:	add    ecx,edi
  4064e7:	add    al,0x21
  4064e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064ea:	jp     0x4064fa
  4064ec:	retf   
  4064ed:	pop    edx
  4064ee:	adc    DWORD PTR [edi+0x21553276],ebp
  4064f4:	int3   
  4064f5:	adc    al,BYTE PTR [edi]
  4064f7:	adc    DWORD PTR [esi],esp
  4064f9:	mov    ah,bl
  4064fb:	xor    edx,edi
  4064fd:	rep ins DWORD PTR es:[edi],dx
  4064ff:	bnd jle 0x4064ac
  406502:	fnstsw WORD PTR [ebx-0x3c]
  406505:	arpl   WORD PTR [ecx-0x78816720],si
  40650b:	ror    BYTE PTR [eax+0x28],0x4b
  40650f:	popf   
  406510:	jp     0x406521
  406512:	adc    eax,0x534b8018
  406517:	mov    bl,ah
  406519:	xchg   ebp,eax
  40651a:	pop    edx
  40651b:	cmp    BYTE PTR [eax+0x52],ah
  40651e:	jnp    0x406524
  406520:	jl     0x40658f
  406522:	popa   
  406523:	push   ebx
  406524:	(bad)  
  406525:	cld    
  406526:	jae    0x40658c
  406528:	push   DWORD PTR ds:0x710d53f9
  40652e:	js     0x4064b2
  406530:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406531:	adc    cl,dl
  406533:	jge    0x406569
  406535:	rcr    BYTE PTR [edi-0xb],0xf2
  406539:	inc    esi
  40653a:	mov    cl,0xb5
  40653c:	mov    bh,0xe8
  40653e:	daa    
  40653f:	sub    ebx,DWORD PTR [esi+0x34]
  406542:	mov    esi,ebx
  406544:	(bad)  
  406545:	imul   ch
  406547:	lds    esi,FWORD PTR [edi-0x56]
  40654a:	jmp    0x838f:0x3634f158
  406551:	psrad  mm7,QWORD PTR [eax]
  406554:	and    esi,DWORD PTR [edi+0x393dafe4]
  40655a:	mov    ds,WORD PTR [edi-0x63]
  40655d:	sub    DWORD PTR [edi],edx
  40655f:	sahf   
  406560:	std    
  406561:	rcl    cl,1
  406563:	jmp    0x8a10830a
  406568:	sub    al,0x96
  40656a:	inc    ebx
  40656b:	loopne 0x406596
  40656d:	dec    ecx
  40656e:	or     dh,dl
  406570:	push   0x6a
  406572:	xchg   ebp,eax
  406573:	push   ss
  406574:	mov    dh,BYTE PTR [eax-0x1c]
  406577:	retf   0xe740
  40657a:	stc    
  40657b:	xchg   esi,eax
  40657c:	cmp    DWORD PTR [ebx+0x6f],ecx
  40657f:	scas   eax,DWORD PTR es:[edi]
  406580:	test   edx,ebp
  406582:	js     0x40655a
  406584:	iret   
  406585:	pop    edi
  406586:	bound  ebx,QWORD PTR [edx+0x2889d76c]
  40658c:	lea    eax,[ebp+eiz*4-0x19]
  406590:	xor    ebx,ebx
  406592:	jg     0x406607
  406594:	sahf   
  406595:	ds push 0x49
  406598:	mov    ah,0xf2
  40659a:	push   es
  40659b:	sub    al,BYTE PTR [ecx]
  40659d:	inc    ecx
  40659e:	into   
  40659f:	push   0xb7deebf2
  4065a4:	inc    ecx
  4065a5:	push   cs
  4065a6:	cld    
  4065a7:	gs jbe 0x4065f1
  4065aa:	sub    eax,0x5f5c0af7
  4065af:	jmp    0x4065e9
  4065b1:	rcr    BYTE PTR [ebp+0x7a],0x3d
  4065b5:	mov    ecx,0x62c94180
  4065ba:	stos   BYTE PTR es:[edi],al
  4065bb:	fist   WORD PTR [edi+0x58]
  4065be:	push   ss
  4065bf:	and    al,0x5d
  4065c1:	test   DWORD PTR [eax-0x5f],ecx
  4065c4:	xchg   edx,eax
  4065c5:	and    ah,al
  4065c7:	daa    
  4065c8:	ficomp DWORD PTR [ebp-0x3b]
  4065cb:	xchg   ebp,eax
  4065cc:	popa   
  4065cd:	sub    al,0x22
  4065cf:	xor    edi,ebp
  4065d1:	mov    ch,0x2e
  4065d3:	mov    eax,0x38212c51
  4065d8:	enter  0xfe64,0x6e
  4065dc:	pop    esp
  4065dd:	(bad)  
  4065de:	jmp    0x49be:0xbe751c8b
  4065e5:	call   0x5cf3acdd
  4065ea:	sbb    DWORD PTR [ebp+0xebc5177],ebp
  4065f0:	fidiv  DWORD PTR [ebx-0x30]
  4065f3:	jo     0x4065b2
  4065f5:	xchg   dl,bh
  4065f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065f8:	shl    DWORD PTR [ebx+0x3ba25a23],0xd7
  4065ff:	add    al,0x38
  406601:	xchg   esi,eax
  406602:	and    DWORD PTR [ecx],esi
  406604:	adc    ch,0x7c
  406607:	push   0xed4592b5
  40660c:	mov    ecx,0x34cf07a6
  406611:	bound  ecx,QWORD PTR [ebx]
  406613:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406614:	add    BYTE PTR [edi+0x63],dh
  406617:	mov    ebp,0x8966e605
  40661c:	sub    bl,ch
  40661e:	icebp  
  40661f:	rol    DWORD PTR [ebx+eiz*8+0x2052b327],0x9e
  406627:	dec    ebp
  406628:	inc    ecx
  406629:	xor    dl,BYTE PTR [ebx+0x65]
  40662c:	stc    
  40662d:	push   0x64
  40662f:	(bad)  
  406630:	shr    DWORD PTR [ecx],1
  406632:	fld    DWORD PTR [eax-0x37]
  406635:	dec    esp
  406636:	pop    es
  406637:	inc    eax
  406638:	inc    esi
  406639:	inc    edi
  40663a:	add    dh,BYTE PTR [ecx+0x629e639f]
  406640:	cwde   
  406641:	add    edx,DWORD PTR [edx+0x3576e5b0]
  406647:	push   eax
  406648:	je     0x40663a
  40664a:	inc    ecx
  40664c:	sbb    al,0x5a
  40664e:	mov    ds:0x39681624,eax
  406653:	mov    eax,ds:0x77dfe89c
  406658:	loopne 0x40660d
  40665a:	cmc    
  40665b:	inc    ecx
  40665c:	fimul  DWORD PTR [eax]
  40665e:	sbb    eax,0x79858a31
  406663:	mov    cl,0x45
  406665:	xchg   esp,eax
  406666:	xor    DWORD PTR [edx-0x48],esi
  406669:	adc    BYTE PTR [edi-0x1d],0xce
  40666d:	cli    
  40666e:	pop    ds
  40666f:	xor    BYTE PTR [ecx-0x4ef8f47a],al
  406675:	daa    
  406676:	pop    es
  406677:	ja     0x40669e
  406679:	mov    cl,BYTE PTR [eax]
  40667b:	mov    ecx,0x1375c0ca
  406680:	and    dl,al
  406682:	push   edi
  406683:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406684:	leave  
  406685:	xchg   BYTE PTR [esi-0x6243d77],bh
  40668b:	stc    
  40668c:	pop    esi
  40668d:	mov    bh,dh
  40668f:	mov    edx,0x6abdbbb2
  406694:	sub    ebp,edx
  406696:	popa   
  406697:	fcmovnbe st,st(7)
  406699:	and    eax,0xe99e67bf
  40669e:	inc    edi
  40669f:	adc    bl,ah
  4066a1:	xorps  xmm3,XMMWORD PTR [edi+ecx*2-0x6c]
  4066a6:	pextrw ebx,(bad),0xc5
  4066a8:	cdq    
  4066a9:	rcr    DWORD PTR [eax],1
  4066ab:	and    DWORD PTR [ecx-0x7bd67657],0x846e08bb
  4066b5:	cmp    BYTE PTR [ecx+0x327d4f0d],cl
  4066bb:	nop
  4066bc:	not    BYTE PTR [ecx+0x17]
  4066bf:	inc    ebx
  4066c0:	cmp    bh,cl
  4066c2:	shr    DWORD PTR [eax+0xf],1
  4066c5:	jg     0x40673c
  4066c7:	mov    bh,0xce
  4066c9:	into   
  4066ca:	mov    BYTE PTR [ebx],dh
  4066cc:	jae    0x4066d7
  4066ce:	mov    ebp,0xbcd4fc26
  4066d3:	fiadd  WORD PTR [ebx+ebp*8+0x67]
  4066d7:	mul    DWORD PTR [edx+0x52]
  4066da:	lock push cs
  4066dc:	call   0x7464:0xa485ac5a
  4066e3:	lds    ebp,FWORD PTR [esi+ebp*8-0x38618edd]
  4066ea:	push   ds
  4066eb:	mov    ebx,0x239af473
  4066f0:	out    0xe8,al
  4066f2:	dec    eax
  4066f3:	ret    
  4066f4:	pop    esp
  4066f5:	(bad)  cs:[esi+ebx*2+0x72]
  4066fa:	sub    bl,dh
  4066fc:	(bad)  
  4066fd:	adc    eax,0x286a4c7a
  406702:	xadd   BYTE PTR [esi-0x54b7637c],ch
  406709:	jp     0x4066a5
  40670b:	imul   esp,DWORD PTR [ecx],0x8eb8f0fd
  406711:	xor    al,0xd6
  406713:	cdq    
  406714:	mov    DWORD PTR [ecx+0x6470ee3c],eax
  40671a:	es jnp 0x40671b
  40671d:	cmp    DWORD PTR ds:0x4642ba11,edi
  406723:	sbb    BYTE PTR gs:[ecx],dl
  406726:	sar    dl,cl
  406728:	cwde   
  406729:	add    esp,esp
  40672b:	jbe    0x406764
  40672d:	cmp    eax,0xd3872ef8
  406732:	jno    0x4066c6
  406734:	xchg   esp,eax
  406735:	mov    WORD PTR [esi],gs
  406737:	mov    eax,ds:0xa7564e29
  40673c:	pop    ebx
  40673d:	ss fisttp DWORD PTR gs:[esi]
  406741:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406742:	or     bl,bl
  406744:	mov    edi,0xc355a93d
  406749:	stos   DWORD PTR es:[edi],eax
  40674a:	nop
  40674b:	sar    DWORD PTR [edi+esi*2-0x15068b1b],cl
  406752:	jl     0x406734
  406754:	jmp    0x9c3c1461
  406759:	xchg   BYTE PTR [edi+0x43],bl
  40675c:	retf   0xe67
  40675f:	mov    ds:0xbef5a16c,al
  406764:	test   ah,bl
  406766:	test   eax,0x47589558
  40676b:	lods   al,BYTE PTR ds:[esi]
  40676c:	out    0x97,eax
  40676e:	test   DWORD PTR [ecx-0x59],edx
  406771:	pop    es
  406772:	das    
  406773:	mov    esi,DWORD PTR [esi-0x7]
  406776:	clc    
  406777:	sub    eax,0xc3233f5a
  40677c:	lahf   
  40677d:	sub    DWORD PTR [edi-0x8],0x38
  406781:	xchg   DWORD PTR [ebx],ebp
  406783:	vpunpckldq xmm4,xmm7,XMMWORD PTR [esi+ecx*8-0x6]
  406789:	pop    esp
  40678a:	push   ecx
  40678b:	and    eax,0x548717b8
  406790:	xlat   BYTE PTR ds:[ebx]
  406791:	adc    edi,DWORD PTR [ecx]
  406793:	xor    eax,0x47a73585
  406798:	sub    al,0xee
  40679a:	mov    ebp,0x58518165
  40679f:	fbstp  TBYTE PTR [ecx]
  4067a1:	ret    
  4067a2:	enter  0xe823,0x23
  4067a6:	push   ecx
  4067a7:	jo     0x406780
  4067a9:	xlat   BYTE PTR ds:[ebx]
  4067aa:	(bad)  
  4067ab:	ins    BYTE PTR es:[edi],dx
  4067ac:	fistp  DWORD PTR [eax+0xff356e8]
  4067b2:	mov    bh,0x69
  4067b4:	call   0x344d:0x8a13a914
  4067bb:	addr16 cmp eax,0xaf30c69b
  4067c1:	lods   al,BYTE PTR ds:[esi]
  4067c2:	jne    0x406765
  4067c4:	fwait
  4067c5:	lods   al,BYTE PTR ds:[esi]
  4067c6:	mov    eax,0xaa2cdac6
  4067cb:	push   es
  4067cc:	fild   QWORD PTR [ecx-0x4cac90a2]
  4067d2:	stc    
  4067d3:	shl    BYTE PTR [eax-0x1cc1b883],0x3c
  4067da:	ret    0xd21f
  4067dd:	mov    cl,0xce
  4067df:	(bad)
  4067e3:	mov    ch,0x73
  4067e5:	dec    BYTE PTR [ecx+eax*8+0x4a6147e8]
  4067ec:	popa   
  4067ed:	push   esp
  4067ee:	(bad)  
  4067ef:	sbb    eax,0x30fd11ea
  4067f4:	jmp    0x406776
  4067f6:	dec    edx
  4067f7:	jae    0x40681a
  4067f9:	jecxz  0x40678a
  4067fb:	mov    bh,0xe4
  4067fd:	sahf   
  4067fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067ff:	adc    ebx,DWORD PTR ds:0xc006a986
  406805:	stos   DWORD PTR es:[edi],eax
  406806:	cmp    cl,BYTE PTR [esi-0x71]
  406809:	add    eax,DWORD PTR [eax-0xc2ba510]
  40680f:	xor    ebp,DWORD PTR [ebx]
  406811:	dec    ecx
  406812:	sar    DWORD PTR [ecx],cl
  406814:	jmp    0x5a071db
  406819:	fldenv [ebp+0x27a2d6fd]
  40681f:	fcmove st,st(5)
  406821:	es mov edx,0xbba17e1b
  406827:	shl    DWORD PTR gs:[edx],0x9d
  40682b:	push   ebp
  40682c:	push   ebp
  40682d:	fs cmp eax,0x207966f1
  406833:	call   0xa26d:0xd05c03c9
  40683a:	pop    edi
  40683b:	stc    
  40683c:	mov    ch,0xb4
  40683e:	in     eax,0x3c
  406840:	push   esp
  406841:	mov    al,gs:0xc128503f
  406847:	lods   eax,DWORD PTR ds:[esi]
  406848:	in     al,dx
  406849:	xchg   edx,eax
  40684a:	repz inc edi
  40684c:	push   ebx
  40684d:	(bad)  
  40684e:	mov    ecx,0xc25cca65
  406853:	or     ebp,eax
  406855:	(bad)  
  406857:	jg     0x406861
  406859:	les    ebx,FWORD PTR [edx-0x9]
  40685c:	xchg   edi,eax
  40685d:	mov    DWORD PTR [esi-0x337fe036],0xcab660a4
  406867:	mov    BYTE PTR [ecx+0x2c],cl
  40686a:	push   edx
  40686b:	test   eax,0x765ed483
  406870:	add    eax,0x75c150b8
  406875:	or     al,0x21
  406877:	mov    ds:0x188b0527,al
  40687c:	idiv   BYTE PTR [ecx+ecx*2-0xd]
  406880:	arpl   WORD PTR [edx],ax
  406882:	mov    DWORD PTR [esp+eax*1+0x3d],edx
  406886:	mov    esi,0x967c248c
  40688b:	mov    cl,0xc2
  40688d:	jl     0x406895
  40688f:	jo     0x4068f1
  406891:	or     edx,DWORD PTR [edx+0x45]
  406894:	cmc    
  406895:	xchg   ebx,eax
  406896:	mov    bl,BYTE PTR [ebp-0x3a]
  406899:	out    0x27,eax
  40689b:	jnp    0x4068ac
  40689d:	pop    eax
  40689e:	and    DWORD PTR [ecx],edi
  4068a0:	and    BYTE PTR ds:0x77d22bd2,ch
  4068a6:	fiadd  DWORD PTR [edx+0x54]
  4068a9:	div    DWORD PTR [ebx-0x1e]
  4068ac:	or     DWORD PTR [esi+ecx*4+0x21e0177],edi
  4068b3:	jns    0x4068ab
  4068b5:	cwde   
  4068b6:	bound  edx,QWORD PTR [ebx+eax*4+0x1d]
  4068ba:	out    dx,eax
  4068bb:	loopne 0x406861
  4068bd:	neg    edx
  4068bf:	pop    ecx
  4068c0:	fldcw  WORD PTR [esi+0x4e]
  4068c3:	or     edx,DWORD PTR [edi-0x48]
  4068c6:	jmp    0xa03f11a1
  4068cb:	dec    edi
  4068cc:	inc    ecx
  4068cd:	add    al,0x15
  4068cf:	retf   
  4068d0:	pop    ebp
  4068d1:	pop    ebx
  4068d2:	idiv   dl
  4068d4:	ja     0x40692b
  4068d6:	loopne 0x406912
  4068d8:	xchg   ecx,eax
  4068d9:	push   esp
  4068da:	cdq    
  4068db:	lods   al,BYTE PTR ds:[esi]
  4068dc:	mov    cl,0x85
  4068de:	sub    edx,ebx
  4068e0:	sbb    BYTE PTR [eax+eax*2+0x412ba8bf],ah
  4068e7:	loope  0x4068ba
  4068e9:	mov    ebx,0x330b469c
  4068ee:	inc    esp
  4068ef:	and    BYTE PTR [edx+edi*4],ch
  4068f2:	in     al,0x92
  4068f4:	xchg   esi,eax
  4068f5:	mov    ds:0xbf26abf8,al
  4068fa:	lods   al,BYTE PTR ds:[esi]
  4068fb:	cmp    al,0x67
  4068fd:	cld    
  4068fe:	xchg   edi,eax
  4068ff:	adc    ch,BYTE PTR [ebp+0x5db8153e]
  406905:	lock push cs
  406907:	pop    ebp
  406908:	mov    ebp,0x38aadff1
  40690d:	retf   
  40690e:	cli    
  40690f:	push   esi
  406910:	or     eax,0xe279ea33
  406915:	retf   
  406916:	das    
  406917:	inc    edi
  406918:	aad    0x3b
  40691a:	sub    edi,eax
  40691c:	test   al,0x54
  40691e:	sahf   
  40691f:	popf   
  406920:	inc    eax
  406921:	pop    edx
  406922:	push   eax
  406923:	stos   BYTE PTR es:[edi],al
  406924:	and    DWORD PTR ds:0xff033dd1,eax
  40692a:	fwait
  40692b:	imul   esp,DWORD PTR [esi+0x641b90db],0xffffffaf
  406932:	cmp    al,0x67
  406934:	and    eax,0xc145161e
  406939:	out    0x53,eax
  40693b:	outs   dx,DWORD PTR ds:[esi]
  40693c:	dec    esi
  40693d:	daa    
  40693e:	stc    
  40693f:	jnp    0x406939
  406941:	xchg   edx,eax
  406942:	pop    esp
  406943:	(bad)  
  406944:	cmp    ebx,esi
  406946:	gs cmp al,0x9a
  406949:	mov    eax,0x694390e1
  40694e:	ins    BYTE PTR es:[edi],dx
  40694f:	add    BYTE PTR [esi-0x7b],bl
  406952:	pop    ecx
  406953:	fsubr  QWORD PTR [ebp+edx*1-0x42]
  406957:	push   esp
  406958:	iret   
  406959:	loopne 0x4068dd
  40695b:	in     al,dx
  40695c:	iret   
  40695d:	xor    ch,BYTE PTR cs:[ecx+0x7978dfcd]
  406964:	jb     0x4068f0
  406966:	xchg   edi,eax
  406967:	xchg   ebp,eax
  406968:	mov    edi,0x51975bb0
  40696d:	and    eax,0x710c43a6
  406972:	sahf   
  406973:	test   BYTE PTR [eax],ch
  406975:	out    0xaf,eax
  406977:	xchg   al,ah
  406979:	push   ss
  40697a:	cmp    edx,DWORD PTR [edi+0x6b]
  40697d:	mov    esp,0x4ff01046
  406982:	and    eax,0x9182d9bc
  406987:	adc    esi,DWORD PTR [edi+ebp*1+0xf]
  40698b:	jge    0x406921
  40698d:	(bad)  
  40698e:	adc    BYTE PTR [eax],0x30
  406991:	clc    
  406992:	fwait
  406993:	repz out dx,eax
  406995:	mov    ds:0x99e55a3d,eax
  40699a:	add    cl,BYTE PTR [ebx+0x28b767a3]
  4069a0:	add    bl,BYTE PTR [edx]
  4069a2:	jne    0x40695f
  4069a4:	add    DWORD PTR [edi],edi
  4069a6:	inc    esp
  4069a7:	int3   
  4069a8:	jl     0x406a1d
  4069aa:	jge    0x406944
  4069ac:	lea    eax,[edi+0x58c983cc]
  4069b2:	or     edi,ebp
  4069b4:	pminub mm7,QWORD PTR [esi]
  4069b7:	add    bl,BYTE PTR [esi+0x2a]
  4069ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069bb:	or     eax,0xbb698c9d
  4069c0:	test   al,0x6e
  4069c2:	jmp    0x5c1a:0x878b893c
  4069c9:	cmp    DWORD PTR [ebx+0x13a081c9],edx
  4069cf:	aad    0xa6
  4069d1:	int    0xe8
  4069d3:	dec    edx
  4069d4:	call   0x24e8f187
  4069d9:	es repnz stc 
  4069dc:	xor    BYTE PTR [edi],dl
  4069de:	fs ds int 0xfc
  4069e2:	sub    eax,0x40de9bdf
  4069e7:	rcr    eax,1
  4069e9:	sub    ebx,DWORD PTR [eax]
  4069eb:	push   ecx
  4069ec:	adc    ebx,DWORD PTR [ebx]
  4069ee:	and    al,0x66
  4069f0:	fldl2e 
  4069f2:	shr    DWORD PTR [esi+0x3f],cl
  4069f5:	dec    edx
  4069f6:	pop    ss
  4069f7:	or     eax,DWORD PTR [ebx*4+0x5b330311]
  4069fe:	test   al,0x88
  406a00:	in     al,0x45
  406a02:	xlat   BYTE PTR ds:[ebx]
  406a03:	aad    0xbe
  406a05:	aam    0x2f
  406a07:	aaa    
  406a08:	sub    DWORD PTR [eax-0x53424cef],0x5d3b7ae3
  406a12:	xchg   esi,eax
  406a13:	sahf   
  406a14:	pushf  
  406a15:	stc    
  406a16:	jns    0x4069a5
  406a18:	iret   
  406a19:	mov    bh,0xf9
  406a1b:	and    eax,0x756e3fb6
  406a20:	push   0xb70a9485
  406a25:	push   edx
  406a26:	mov    ch,0xfb
  406a28:	and    al,0x31
  406a2a:	xchg   edx,eax
  406a2b:	mov    ds:0x9d3d412b,eax
  406a30:	cmp    al,0x0
  406a32:	push   edi
  406a33:	sub    DWORD PTR [edx+esi*8+0x1075deac],edx
  406a3a:	or     bh,BYTE PTR [edi]
  406a3c:	xor    ch,BYTE PTR [ecx]
  406a3e:	sbb    bh,dl
  406a40:	inc    ebx
  406a41:	add    esi,edi
  406a43:	into   
  406a44:	ds call 0x18ae:0xa55d57fb
  406a4c:	retf   
  406a4d:	push   es
  406a4e:	cld    
  406a4f:	test   ebx,0x6412afa1
  406a55:	mov    DWORD PTR [esi-0x2f],eax
  406a58:	call   0xb7faee4d
  406a5d:	shl    BYTE PTR [eax],1
  406a5f:	and    eax,ebp
  406a61:	pop    ss
  406a62:	cld    
  406a63:	adc    eax,0xe703eac8
  406a68:	adc    BYTE PTR [edx-0x45],0xf5
  406a6c:	and    ebp,DWORD PTR [edi-0x26]
  406a6f:	mov    eax,ds:0x61efbdf
  406a74:	push   DWORD PTR [edi-0x31]
  406a77:	jge    0x406a92
  406a79:	sbb    bl,al
  406a7b:	push   0xffffffa0
  406a7d:	out    dx,eax
  406a7e:	pop    edi
  406a7f:	jne    0x406abc
  406a81:	lods   al,BYTE PTR ds:[esi]
  406a82:	nop
  406a83:	xor    BYTE PTR [eax+eax*8],0xa7
  406a87:	jecxz  0x406ad1
  406a89:	daa    
  406a8a:	add    bh,BYTE PTR [esi+0x62]
  406a8d:	sbb    esp,esi
  406a8f:	xor    al,0xd1
  406a91:	mov    esi,0xf9e681f1
  406a96:	jbe    0x406a46
  406a98:	xchg   ebp,eax
  406a99:	add    esp,DWORD PTR [edi+0x5d]
  406a9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a9d:	inc    DWORD PTR [edi]
  406a9f:	add    eax,0xcffb67df
  406aa4:	nop
  406aa5:	inc    esp
  406aa6:	mov    WORD PTR cs:[edx],gs
  406aa9:	jmp    0x406ae0
  406aab:	hlt    
  406aac:	mov    eax,ds:0xf7f38960
  406ab1:	popa   
  406ab2:	cmc    
  406ab3:	push   0x5100fdab
  406ab8:	or     ah,BYTE PTR [ecx+0x3f]
  406abb:	and    bh,dl
  406abd:	push   ebx
  406abe:	lds    ecx,FWORD PTR [edi-0x357ac8d1]
  406ac4:	adc    BYTE PTR [ecx-0xd1d15b8],bl
  406aca:	jmp    DWORD PTR [edi+eax*1+0x11e90c5d]
  406ad1:	lock fucomp st(2)
  406ad4:	pop    edx
  406ad5:	pop    ss
  406ad6:	data16 (bad) 
  406ad8:	fnsave [esi]
  406ada:	cs pop ss
  406adc:	xchg   ecx,eax
  406add:	pop    edi
  406ade:	add    al,0xf9
  406ae0:	jb     0x406af8
  406ae2:	pop    edi
  406ae3:	cmc    
  406ae4:	push   ss
  406ae5:	and    ah,BYTE PTR ds:0x537fe598
  406aeb:	mov    esp,eax
  406aed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406aee:	mov    esp,0x722e314f
  406af3:	xchg   esp,eax
  406af4:	mov    ds:0x6619825e,eax
  406af9:	in     eax,dx
  406afa:	not    BYTE PTR [edi-0x49da483f]
  406b00:	mov    bh,0x32
  406b02:	pop    ebx
  406b03:	(bad)  
  406b04:	repnz sub dl,0xcb
  406b08:	adc    BYTE PTR [edx-0x35ad2335],dl
  406b0e:	jo     0x406b85
  406b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b11:	jns    0x406b5f
  406b13:	jne    0x406b8f
  406b15:	dec    edi
  406b16:	call   0x1231e182
  406b1b:	mov    dh,0x9
  406b1d:	fild   QWORD PTR [ebx+eax*4]
  406b20:	cld    
  406b21:	mov    DWORD PTR [ebp-0x63],ebx
  406b24:	aas    
  406b25:	mov    al,0xac
  406b27:	clc    
  406b28:	xchg   esi,eax
  406b29:	cmp    eax,ecx
  406b2b:	add    ch,BYTE PTR [esp+ecx*4]
  406b2e:	inc    ecx
  406b2f:	out    dx,al
  406b30:	mov    al,ds:0x9c353c3
  406b35:	dec    ebp
  406b36:	sbb    al,0x16
  406b38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b39:	imul   esi,DWORD PTR [ebx-0x14749c6d],0xffffffc5
  406b40:	mov    BYTE PTR [esi+0x7f],ch
  406b43:	jl     0x406b36
  406b45:	dec    esi
  406b46:	dec    esp
  406b47:	stos   DWORD PTR es:[edi],eax
  406b48:	mov    ah,0x78
  406b4a:	xchg   edi,eax
  406b4b:	aad    0x5c
  406b4d:	hlt    
  406b4e:	fwait
  406b4f:	bound  eax,QWORD PTR [esi+0x10c54971]
  406b55:	mov    DWORD PTR [ecx+0x63],ecx
  406b58:	pop    edi
  406b59:	scas   al,BYTE PTR es:[edi]
  406b5a:	xor    BYTE PTR [ebp-0x64099df1],cl
  406b60:	sahf   
  406b61:	aas    
  406b62:	add    ebp,ebx
  406b64:	mov    edx,DWORD PTR [edi-0x63a1ff47]
  406b6a:	xchg   edi,eax
  406b6b:	sbb    eax,DWORD PTR [ebx-0x43]
  406b6e:	xor    bl,bl
  406b70:	out    0xfd,eax
  406b72:	sahf   
  406b73:	loopne 0x406b3c
  406b75:	out    0x23,al
  406b77:	mov    edx,0xbc45867a
  406b7c:	or     al,0x1c
  406b7e:	xor    dh,bh
  406b80:	inc    eax
  406b81:	sti    
  406b82:	xchg   edx,eax
  406b83:	xor    eax,edi
  406b85:	or     al,0x10
  406b87:	retw   0x7d20
  406b8b:	imul   esi,DWORD PTR [edx+edx*8-0x37],0x2d
  406b90:	cmp    ch,BYTE PTR [edx-0x76]
  406b93:	cmp    BYTE PTR [edi+0x69],ah
  406b96:	jbe    0x406b81
  406b98:	push   eax
  406b99:	sub    ebp,esi
  406b9b:	idiv   DWORD PTR [esi+0x0]
  406b9e:	jnp    0x406be1
  406ba0:	mov    dl,0xad
  406ba2:	aam    0x8c
  406ba4:	dec    edi
  406ba5:	cli    
  406ba6:	jne    0x406c14
  406ba8:	pop    bx
  406baa:	jo     0x406b8a
  406bac:	jo     0x406b74
  406bae:	leave  
  406baf:	push   ecx
  406bb0:	xchg   edx,eax
  406bb1:	inc    esi
  406bb2:	xor    eax,0xdbb5e15b
  406bb7:	mov    bx,0x49cb
  406bbb:	jmp    0xc9162912
  406bc0:	mov    eax,0xc1cd3487
  406bc5:	loope  0x406b4f
  406bc7:	push   0x21
  406bc9:	xchg   DWORD PTR [ebx+0x70fd456],esi
  406bcf:	inc    esi
  406bd0:	mov    eax,esp
  406bd2:	add    BYTE PTR [edi-0x7dcd6b89],0x32
  406bd9:	mov    esi,0xedfffa3a
  406bde:	push   ebx
  406bdf:	xor    al,BYTE PTR [ebp-0x19]
  406be2:	pop    ecx
  406be3:	arpl   WORD PTR [edi],cx
  406be5:	xor    bl,cl
  406be7:	nop
  406be8:	lds    edx,FWORD PTR [ebx+0x78435fa6]
  406bee:	jmp    0xa6deca7b
  406bf3:	cmp    BYTE PTR [ebx+0x22],0x96
  406bf7:	jbe    0x406c2c
  406bf9:	xchg   ebx,eax
  406bfa:	xchg   edi,eax
  406bfb:	test   eax,0xa45135a3
  406c00:	sbb    ebp,DWORD PTR [ecx-0x11]
  406c03:	into   
  406c04:	add    cl,BYTE PTR [edx-0x1f]
  406c07:	fs mov esi,0xd9464c73
  406c0d:	cmp    esi,DWORD PTR [esi]
  406c0f:	jbe    0x406bf8
  406c11:	(bad)  
  406c13:	cmp    BYTE PTR [edx-0x6b1bf579],bl
  406c19:	dec    edx
  406c1a:	imul   edi,DWORD PTR [esi],0x224b9ff6
  406c20:	adc    bl,bh
  406c22:	fstp   QWORD PTR [edi]
  406c24:	xor    ch,BYTE PTR [edi+0x36]
  406c27:	xchg   edx,eax
  406c28:	jle    0x406c32
  406c2a:	clc    
  406c2b:	mov    al,0xbc
  406c2d:	fstp   DWORD PTR [ecx]
  406c2f:	xor    BYTE PTR [esi],bl
  406c31:	mov    bl,0xb1
  406c33:	push   ebp
  406c34:	jecxz  0x406c61
  406c36:	or     BYTE PTR [eax+0x337316d5],al
  406c3c:	xchg   dl,ah
  406c3e:	test   ah,bl
  406c40:	mov    edx,0xe92e644
  406c45:	xor    eax,0x795d6539
  406c4a:	pop    ds
  406c4b:	lock adc edx,DWORD PTR [ebx-0x6ccbc947]
  406c52:	jns    0x406c1e
  406c54:	repnz pop ebp
  406c56:	retf   
  406c57:	and    DWORD PTR [ecx-0x47],ebx
  406c5a:	mov    ecx,0xd2986c80
  406c5f:	mov    BYTE PTR [eax-0x22d4f9ad],dl
  406c65:	into   
  406c66:	cld    
  406c67:	sbb    eax,DWORD PTR [eax-0x10]
  406c6a:	js     0x406cbc
  406c6c:	push   eax
  406c6d:	rcl    BYTE PTR ds:0x41c5,0xeb
  406c73:	call   0xa7f7a650
  406c78:	cmp    bh,BYTE PTR ds:0x8832a187
  406c7e:	jae    0x406c59
  406c80:	mov    edx,0x8bc43a14
  406c85:	or     ch,BYTE PTR [ecx-0x69]
  406c88:	or     edx,DWORD PTR [esi+0x6a9a25a9]
  406c8e:	adc    ch,ch
  406c90:	push   ebp
  406c91:	xlat   BYTE PTR ds:[ebx]
  406c92:	test   ebx,edx
  406c94:	ds scas eax,DWORD PTR es:[edi]
  406c96:	pop    es
  406c97:	jecxz  0x406d11
  406c99:	cs mov al,0x23
  406c9c:	mov    cl,ah
  406c9e:	call   0x68e2:0x96927d13
  406ca5:	lahf   
  406ca6:	inc    esp
  406ca7:	out    dx,eax
  406ca8:	fbstp  TBYTE PTR [ecx-0x2df1b4d7]
  406cae:	lea    esi,[esi+0x6f]
  406cb1:	or     eax,0x459833b9
  406cb6:	popf   
  406cb7:	outs   dx,DWORD PTR ds:[esi]
  406cb8:	in     al,0x33
  406cba:	das    
  406cbb:	xor    BYTE PTR [ebx-0x29befe0f],bl
  406cc1:	in     eax,dx
  406cc2:	inc    ebp
  406cc3:	jns    0x406c97
  406cc5:	ja     0x406ccb
  406cc7:	jmp    0x58cf:0xfe1e58fc
  406cce:	jae    0x406ccb
  406cd0:	pop    edx
  406cd1:	mov    ds:0x5d422e39,al
  406cd6:	aad    0xcd
  406cd8:	add    DWORD PTR [edi+edx*1],esp
  406cdb:	push   ebp
  406cdc:	fstp   QWORD PTR [esi]
  406cde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cdf:	ja     0x406c69
  406ce1:	add    al,0x69
  406ce3:	or     BYTE PTR [ecx],0x37
  406ce6:	inc    edx
  406ce7:	mov    ds:0xab0104c9,eax
  406cec:	cmp    ecx,DWORD PTR ds:0x28be7284
  406cf2:	out    0xf6,eax
  406cf4:	jl     0x406d47
  406cf6:	retf   
  406cf7:	retf   
  406cf8:	pop    esp
  406cf9:	add    BYTE PTR [ebp-0x59994611],bh
  406cff:	xchg   esi,eax
  406d00:	bound  ecx,QWORD PTR [eax-0x6404153]
  406d06:	push   ss
  406d07:	dec    edx
  406d08:	cld    
  406d09:	sub    ah,BYTE PTR [esi+ebp*8-0x5a]
  406d0d:	lea    eax,[edx-0x25]
  406d10:	fisubr WORD PTR [ebp+0x4d851851]
  406d16:	jb     0x406d41
  406d18:	in     eax,0xc3
  406d1a:	xor    edi,DWORD PTR [ebx-0x6bcfc6d3]
  406d20:	xchg   esp,eax
  406d21:	sar    dl,cl
  406d23:	and    al,0xaa
  406d25:	pusha  
  406d26:	push   esi
  406d27:	scas   eax,DWORD PTR es:[edi]
  406d28:	je     0x406d48
  406d2a:	repnz xchg edx,eax
  406d2c:	mov    esi,0xfebfc5b
  406d31:	aas    
  406d32:	sub    DWORD PTR [edx+0x44a9a085],esp
  406d38:	not    DWORD PTR [esi-0x6d8bf7ae]
  406d3e:	jge    0x406d7a
  406d40:	daa    
  406d41:	gs std 
  406d43:	stc    
  406d44:	int    0x50
  406d46:	fst    st(6)
  406d48:	fist   DWORD PTR [edi]
  406d4a:	xchg   edx,eax
  406d4b:	and    ebp,DWORD PTR [eax+ebx*8+0x1f0d85a3]
  406d52:	test   dl,bh
  406d54:	adc    al,0xe0
  406d56:	xchg   ebx,eax
  406d57:	cs mov edx,0xfa5aa553
  406d5d:	je     0x406dce
  406d5f:	ficomp DWORD PTR [eax-0x21]
  406d62:	ss add al,0xb
  406d65:	push   es
  406d66:	xchg   ecx,eax
  406d67:	enter  0x45c9,0x42
  406d6b:	outs   dx,DWORD PTR ds:[esi]
  406d6c:	hlt    
  406d6d:	lock and DWORD PTR [edi-0x57dd40d9],ecx
  406d74:	inc    si
  406d76:	mov    bl,0x68
  406d78:	iret   
  406d79:	add    eax,0xa08b5289
  406d7e:	inc    esp
  406d7f:	popf   
  406d80:	mov    ds,WORD PTR [ecx]
  406d82:	xor    BYTE PTR [edi-0x55],ah
  406d85:	sbb    eax,0x4b88baa5
  406d8a:	fnsave [edi-0x12d39de4]
  406d90:	dec    ecx
  406d91:	aam    0xaa
  406d93:	mov    ebx,0xd20766bf
  406d98:	ror    BYTE PTR [edi+ecx*8],cl
  406d9b:	dec    esi
  406d9c:	repnz or al,0x7e
  406d9f:	fs nop
  406da1:	push   ebx
  406da2:	sar    eax,1
  406da4:	sbb    eax,0xecfcb481
  406da9:	xchg   BYTE PTR [edi+0x49],dh
  406dac:	stos   BYTE PTR es:[edi],al
  406dad:	mov    eax,ds:0x3b529fb5
  406db2:	and    DWORD PTR [ecx+0x3782158],edx
  406db8:	aad    0xa7
  406dba:	ja     0x406dc9
  406dbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dbd:	iret   
  406dbe:	dec    esi
  406dbf:	add    ebx,DWORD PTR [esi+0x536ae49d]
  406dc5:	arpl   WORD PTR [ebp-0x301e0c31],bp
  406dcb:	adc    al,0xce
  406dcd:	xchg   esi,eax
  406dce:	pop    esp
  406dcf:	lds    ebp,FWORD PTR [eax+0x69]
  406dd2:	xor    DWORD PTR [edi+0x38],0x6e
  406dd6:	xchg   ebp,eax
  406dd7:	scas   al,BYTE PTR es:[edi]
  406dd8:	adc    DWORD PTR [esi-0x30],ebx
  406ddb:	out    0xa8,eax
  406ddd:	adc    DWORD PTR ds:0xb63dea04,esp
  406de3:	lods   eax,DWORD PTR ds:[esi]
  406de4:	lea    esi,[edi]
  406de6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406de7:	cmp    DWORD PTR ds:0x571a67a3,edi
  406ded:	xlat   BYTE PTR ds:[ebx]
  406dee:	outs   dx,BYTE PTR ds:[esi]
  406def:	in     eax,0xb9
  406df1:	int    0x24
  406df3:	jno    0x406d7e
  406df5:	mov    BYTE PTR [ebx+eiz*2-0x68],al
  406df9:	aas    
  406dfa:	push   esp
  406dfb:	loope  0x406e5a
  406dfd:	jge    0x406e31
  406dff:	std    
  406e00:	aaa    
  406e01:	pop    esp
  406e02:	ret    
  406e03:	mov    ds:0xab841006,al
  406e08:	lods   eax,DWORD PTR ds:[esi]
  406e09:	push   ebp
  406e0a:	mov    dh,0xd1
  406e0c:	cs xchg edx,eax
  406e0e:	shr    BYTE PTR [ecx+esi*4-0x57],0x29
  406e13:	inc    ebx
  406e14:	pop    ebp
  406e15:	aad    0x39
  406e17:	pop    ecx
  406e18:	mov    cl,ah
  406e1a:	sub    BYTE PTR ds:0xfb8bf50a,ah
  406e20:	pushf  
  406e21:	lahf   
  406e22:	and    BYTE PTR [edi-0x151f474c],dh
  406e28:	jmp    0x7dc6:0x8e2a9d2c
  406e2f:	or     al,0x9e
  406e31:	jne    0x406e57
  406e33:	inc    edx
  406e34:	jae    0x406e5d
  406e36:	cmc    
  406e37:	jmp    0x465d:0xb71467cc
  406e3e:	dec    esi
  406e3f:	(bad)  
  406e40:	cdq    
  406e41:	cld    
  406e42:	(bad)  
  406e43:	sub    ah,BYTE PTR [esi+0x7398ec75]
  406e49:	mov    cl,0xad
  406e4b:	inc    ecx
  406e4c:	or     al,0x37
  406e4e:	adc    BYTE PTR [eax+0xb06da9f],dh
  406e54:	adc    DWORD PTR [esi-0x4a],ecx
  406e57:	push   esp
  406e58:	and    edx,DWORD PTR [ecx]
  406e5a:	ss loop 0x406e1b
  406e5d:	add    edx,0x62fe4878
  406e63:	cmc    
  406e64:	pusha  
  406e65:	and    dh,BYTE PTR [edx+0x49]
  406e68:	xor    dl,ah
  406e6a:	dec    ebx
  406e6b:	sbb    BYTE PTR [esi+0x4621dc41],0xbf
  406e72:	cmpxchg BYTE PTR [eax-0x2a8226df],al
  406e79:	mov    DWORD PTR [ebp+0x3f826a5b],esp
  406e7f:	ins    BYTE PTR es:[edi],dx
  406e80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e82:	loopne 0x406eb2
  406e84:	hlt    
  406e85:	jo     0x406ed2
  406e87:	jae    0x406e0f
  406e89:	xchg   ebp,eax
  406e8a:	in     al,0xad
  406e8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e8d:	dec    esi
  406e8e:	shl    bl,1
  406e90:	fs sbb al,0x4c
  406e93:	in     eax,dx
  406e94:	pop    esp
  406e95:	sar    BYTE PTR [eax+0x6c],0x69
  406e99:	test   esp,edi
  406e9b:	and    DWORD PTR [edi-0x69],esi
  406e9e:	loopne 0x406edf
  406ea0:	mov    db6,ebx
  406ea3:	push   ebx
  406ea4:	mov    edi,0x32704893
  406ea9:	sti    
  406eaa:	hlt    
  406eab:	lock cwde 
  406ead:	add    al,0xa
  406eaf:	imul   DWORD PTR [esi]
  406eb1:	cli    
  406eb2:	mov    eax,eax
  406eb4:	cmp    BYTE PTR [ebx-0x6f],dh
  406eb7:	pop    esi
  406eb8:	ins    DWORD PTR es:[edi],dx
  406eb9:	imul   ebx,DWORD PTR [ecx],0xffffffa4
  406ebc:	stos   BYTE PTR es:[edi],al
  406ebd:	mov    al,0xe3
  406ebf:	pop    eax
  406ec0:	pop    edi
  406ec1:	mov    eax,ds:0x15d2afeb
  406ec6:	clc    
  406ec7:	ret    
  406ec8:	cld    
  406ec9:	cmp    eax,0x1e21c37a
  406ece:	mov    ds:0x2886af1,eax
  406ed3:	aad    0xf0
  406ed5:	ja     0x406e60
  406ed7:	mov    bh,0x70
  406ed9:	sti    
  406eda:	jg     0x406f4f
  406edc:	mov    bh,al
  406ede:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406edf:	push   0x2c
  406ee1:	jp     0x406f41
  406ee3:	ficom  WORD PTR [ebx+ecx*1]
  406ee6:	into   
  406ee7:	std    
  406ee8:	fcmovnu st,st(1)
  406eea:	or     DWORD PTR [edi-0x40],esi
  406eed:	mov    dh,0x56
  406eef:	mov    bh,0x9e
  406ef1:	js     0x406f4f
  406ef3:	jle    0x406eb5
  406ef5:	mov    ecx,0x59ed1e88
  406efa:	ret    
  406efb:	add    al,0xa7
  406efd:	push   0xe5ae1c
  406f02:	xor    eax,0x84558d40
  406f07:	mov    esi,0xe3f092d9
  406f0c:	mov    ch,0x65
  406f0e:	(bad)  
  406f0f:	mov    ?,WORD PTR [esi]
  406f11:	mov    dl,0xd8
  406f13:	xor    esi,0xe9168461
  406f19:	pop    eax
  406f1a:	fcomp  QWORD PTR [ebx+0x7dc4bfb8]
  406f20:	sbb    DWORD PTR [esi],esi
  406f22:	add    esi,ebp
  406f24:	xor    ebx,eax
  406f26:	repz cld 
  406f28:	mov    al,0xda
  406f2a:	pop    esi
  406f2b:	test   dl,cl
  406f2d:	lds    eax,FWORD PTR [esi+0x1d]
  406f30:	jmp    DWORD PTR [ebp+0x1c]
  406f33:	adc    al,0xc6
  406f35:	out    dx,eax
  406f36:	sub    ebp,DWORD PTR [ebp+ebp*4+0x56]
  406f3a:	add    DWORD PTR [eax+edx*8-0x64],ebx
  406f3e:	retf   
  406f3f:	mov    bh,0xc6
  406f41:	out    dx,eax
  406f42:	fsub   QWORD PTR [esi-0x24]
  406f45:	mov    esi,0x5a4778a2
  406f4a:	cli    
  406f4b:	cmp    al,0x46
  406f4d:	xor    BYTE PTR [edx-0x416e5413],dh
  406f53:	std    
  406f54:	jbe    0x406f65
  406f56:	cmp    al,0x6c
  406f58:	cmp    esp,ebx
  406f5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f5b:	das    
  406f5c:	call   0x441a:0x6d632c30
  406f63:	push   cs
  406f64:	pop    ecx
  406f65:	or     ebx,0xffffff9c
  406f68:	and    bh,dh
  406f6a:	xchg   DWORD PTR [edx-0x2071ccea],ebp
  406f70:	int    0x58
  406f72:	repz mov ecx,cs
  406f75:	jnp    0x406fc6
  406f77:	and    al,0x4
  406f79:	sbb    BYTE PTR [edi+0x4a47090c],al
  406f7f:	xchg   edx,eax
  406f80:	adc    al,0x96
  406f82:	pop    ss
  406f83:	cwde   
  406f84:	inc    eax
  406f85:	mov    al,ds:0xe9d58732
  406f8a:	std    
  406f8b:	cmp    eax,0x635c7b5e
  406f90:	(bad)  
  406f91:	loopne 0x406f86
  406f93:	stos   BYTE PTR es:[edi],al
  406f94:	dec    ecx
  406f95:	mov    WORD PTR [edx-0x3b],es
  406f98:	xchg   ebp,eax
  406f99:	pusha  
  406f9a:	sub    ebx,edi
  406f9c:	dec    edx
  406f9d:	shl    bh,cl
  406f9f:	dec    ebp
  406fa0:	mov    ch,0xa
  406fa2:	adc    al,0xd2
  406fa4:	inc    ebp
  406fa5:	adc    edi,ecx
  406fa7:	das    
  406fa8:	mov    dl,0x28
  406faa:	and    bl,bh
  406fac:	adc    ch,BYTE PTR [ecx-0x69]
  406faf:	int    0x56
  406fb1:	ss pusha 
  406fb3:	push   ecx
  406fb4:	pop    ebp
  406fb5:	dec    ecx
  406fb6:	pop    esi
  406fb7:	popf   
  406fb8:	outs   dx,DWORD PTR ds:[esi]
  406fb9:	pop    ebp
  406fba:	aad    0xf9
  406fbc:	mov    al,0xa0
  406fbe:	mov    ebx,?
  406fc0:	inc    ebx
  406fc1:	jb     0x406fe7
  406fc3:	clc    
  406fc4:	push   0xcb23422e
  406fc9:	pop    ebx
  406fca:	adc    eax,0xac954184
  406fcf:	loop   0x406f67
  406fd1:	jge    0x407005
  406fd3:	push   0x33c49b0e
  406fd8:	xchg   esp,eax
  406fd9:	dec    ecx
  406fda:	xchg   BYTE PTR [ecx],bl
  406fdc:	mov    esi,0x801f9af1
  406fe1:	mov    ecx,0xe87d73f2
  406fe6:	pop    esi
  406fe7:	mov    dl,0xb2
  406fe9:	xor    ch,BYTE PTR ds:0x6cff6dff
  406fef:	(bad)  
  406ff0:	(bad)  
  406ff2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ff3:	xor    al,0x74
  406ff5:	mov    dl,0xad
  406ff7:	iret   
  406ff8:	push   eax
  406ff9:	jl     0x407072
  406ffb:	les    edi,FWORD PTR es:[esi+0x61]
  406fff:	sbb    eax,0x13dfabe
  407004:	es push esp
  407006:	frstor [edx+0x19f0641c]
  40700c:	push   esp
  40700d:	je     0x407022
  40700f:	std    
  407010:	xor    eax,0xdd681ddd
  407015:	or     dh,cl
  407017:	aas    
  407018:	test   edx,ebp
  40701a:	and    edi,DWORD PTR [esi+0x140be21a]
  407020:	(bad)  
  407021:	jae    0x406fc4
  407023:	and    eax,0x3b35ecbf
  407028:	mov    ebp,DWORD PTR [esp+esi*8]
  40702b:	loopne 0x407041
  40702d:	test   al,0x7
  40702f:	or     bl,bl
  407031:	repnz mov ch,0x22
  407034:	mov    al,0x6e
  407036:	pop    ss
  407037:	jl     0x40706b
  407039:	xor    BYTE PTR [ecx+0x2],0xa9
  40703d:	(bad)  
  40703e:	mov    ebp,0x8577859d
  407043:	lahf   
  407044:	dec    ebp
  407045:	mov    esp,0xe8799002
  40704a:	mov    al,ds:0xccec8e75
  40704f:	stc    
  407050:	inc    esi
  407051:	add    ch,BYTE PTR [edx-0x67]
  407054:	fisub  DWORD PTR ds:0xd1e8887d
  40705a:	inc    ecx
  40705b:	mov    bh,0x54
  40705d:	dec    ecx
  40705e:	cmp    BYTE PTR [edx],0xcc
  407061:	lahf   
  407062:	pop    es
  407063:	add    al,0x3f
  407065:	inc    esi
  407066:	js     0x406fff
  407068:	jne    0x4070e7
  40706a:	mov    ch,0x4c
  40706c:	ret    0xb68c
  40706f:	sub    al,0xa9
  407071:	jp     0x406ff9
  407073:	push   edi
  407074:	aad    0xe6
  407076:	fcmovnu st,st(2)
  407078:	cmp    BYTE PTR [ecx-0x5e0c4fa0],cl
  40707e:	(bad)
  407082:	pop    eax
  407083:	dec    esi
  407084:	mov    ds:0x700f6892,al
  407089:	sbb    dl,dl
  40708b:	dec    edi
  40708c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40708d:	stos   DWORD PTR es:[edi],eax
  40708e:	jp     0x407082
  407090:	add    ah,al
  407092:	ins    DWORD PTR es:[edi],dx
  407093:	sbb    eax,0xecd097c9
  407098:	aas    
  407099:	adc    al,0xe9
  40709b:	gs push ebx
  40709d:	aaa    
  40709e:	popf   
  40709f:	push   0x60
  4070a1:	outs   dx,DWORD PTR ds:[esi]
  4070a2:	adc    BYTE PTR [ecx+0x47],al
  4070a5:	pushf  
  4070a6:	mov    ds:0xae3eb5ba,al
  4070ab:	pop    ecx
  4070ac:	jmp    0x44f68891
  4070b1:	pop    es
  4070b2:	push   ss
  4070b3:	cli    
  4070b4:	inc    ebx
  4070b5:	pop    eax
  4070b6:	lds    edi,FWORD PTR [eax+ecx*2+0x6bcc4492]
  4070bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070be:	jmp    0xa88d3d8b
  4070c3:	xchg   DWORD PTR [ecx+0x6f79b85c],esp
  4070c9:	adc    BYTE PTR [edx+0x2],bh
  4070cc:	mov    esi,0x6dd7b8ce
  4070d1:	dec    ebp
  4070d2:	mov    bh,0xf9
  4070d4:	adc    eax,0x5c742269
  4070d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070da:	call   0x4704:0x72d5b8a0
  4070e1:	sub    BYTE PTR [si+0x6e],cl
  4070e5:	shr    edi,0xae
  4070e8:	mov    ebp,0x7eea7697
  4070ed:	adc    ebx,ecx
  4070ef:	pop    es
  4070f0:	(bad)  
  4070f2:	or     al,0x17
  4070f4:	scas   al,BYTE PTR es:[edi]
  4070f5:	(bad)  [eax-0x6ec42b42]
  4070fb:	imul   ecx,DWORD PTR ss:[esi+0x4f],0x53
  407100:	jge    0x4070d8
  407102:	xchg   DWORD PTR [edi],ebx
  407104:	in     al,dx
  407105:	xor    bh,BYTE PTR [edx]
  407107:	sahf   
  407108:	xor    esp,0xd34f1a83
  40710e:	mov    edx,0x42fcad5d
  407113:	xchg   esi,eax
  407114:	sub    al,0x2e
  407116:	inc    esi
  407117:	(bad)  
  407118:	(bad)  
  40711a:	mov    ds:0xb3671fe6,al
  40711f:	in     eax,0xc6
  407121:	push   ebx
  407122:	push   eax
  407123:	pop    ebx
  407124:	pop    ebx
  407125:	sub    al,0xdb
  407127:	je     0x40714d
  407129:	lods   al,BYTE PTR ds:[esi]
  40712a:	retf   0xdb32
  40712d:	push   edi
  40712e:	dec    ecx
  40712f:	xor    edi,eax
  407131:	or     dl,BYTE PTR [esi-0xc]
  407134:	add    DWORD PTR [ebx+0x5dfbddd2],ecx
  40713a:	shl    BYTE PTR [edx-0x488fd35f],0xc8
  407141:	push   ebp
  407142:	add    eax,0xf6437130
  407147:	rcl    BYTE PTR [ebp-0x64],0x5
  40714b:	out    0xb8,al
  40714d:	sbb    eax,0xd01e4c7b
  407152:	mov    dl,0xb7
  407154:	pop    ecx
  407155:	adc    ecx,DWORD PTR [edx]
  407157:	outs   dx,DWORD PTR ds:[esi]
  407158:	jp     0x4070df
  40715a:	mov    ebx,edx
  40715c:	sub    al,0x38
  40715e:	cld    
  40715f:	leave  
  407160:	aad    0x21
  407162:	inc    ebx
  407163:	out    0x48,al
  407165:	dec    edx
  407166:	cmp    eax,0xe26a6d2d
  40716b:	icebp  
  40716c:	push   0xe1ecd539
  407171:	push   esp
  407172:	mov    ch,0xc
  407174:	mov    ds:0xaecf3966,al
  407179:	pop    DWORD PTR [edx]
  40717b:	add    al,0xb1
  40717d:	xchg   esp,eax
  40717e:	mov    eax,ds:0x3ed2cc06
  407183:	dec    ebp
  407184:	adc    ecx,DWORD PTR [esi]
  407186:	popf   
  407187:	hlt    
  407188:	stos   DWORD PTR es:[edi],eax
  407189:	inc    esp
  40718a:	xchg   esp,eax
  40718b:	push   eax
  40718c:	dec    ebp
  40718d:	jo     0x407180
  40718f:	fild   DWORD PTR [ebp-0x3b]
  407192:	lea    ebx,[edi+0x77]
  407195:	adc    BYTE PTR [ebp+0x61],ch
  407198:	iret   
  407199:	in     eax,dx
  40719a:	leave  
  40719b:	scas   eax,DWORD PTR es:[edi]
  40719c:	mov    eax,0xc2015e83
  4071a1:	std    
  4071a2:	dec    esi
  4071a3:	ja     0x407133
  4071a5:	dec    ebp
  4071a6:	sar    BYTE PTR [ebx],0x6b
  4071a9:	mov    ds:0x290031c9,al
  4071ae:	ficom  DWORD PTR [ecx+0x4ed32e78]
  4071b4:	test   BYTE PTR [edi+eax*8+0x46],dh
  4071b8:	fs leave 
  4071ba:	ret    0x966e
  4071bd:	pop    eax
  4071be:	outs   dx,DWORD PTR ds:[esi]
  4071bf:	and    DWORD PTR [esi+eax*4],esi
  4071c2:	ins    DWORD PTR es:[edi],dx
  4071c3:	js     0x407162
  4071c5:	test   eax,0x92374aef
  4071ca:	mov    ebx,0x54bdd511
  4071cf:	or     dl,dh
  4071d1:	es push edi
  4071d3:	add    al,0xad
  4071d5:	dec    edx
  4071d6:	inc    ecx
  4071d7:	jge    0x4071c0
  4071d9:	icebp  
  4071da:	add    BYTE PTR [ebp-0x5596f11c],dh
  4071e0:	stos   DWORD PTR es:[edi],eax
  4071e1:	xchg   edx,eax
  4071e2:	and    eax,ecx
  4071e4:	loop   0x4071d0
  4071e6:	js     0x4071fe
  4071e8:	inc    eax
  4071e9:	sub    eax,0x429411
  4071ee:	ficom  WORD PTR [esp+ebp*2]
  4071f1:	lock jbe 0x407215
  4071f4:	das    
  4071f5:	outs   dx,DWORD PTR ds:[esi]
  4071f6:	mov    BYTE PTR [eax],bh
  4071f8:	sbb    ah,al
  4071fa:	cmp    BYTE PTR [ecx-0x16c659cd],0x99
  407201:	cs jle 0x407187
  407204:	mov    ?,WORD PTR [edx]
  407206:	adc    al,0x22
  407208:	pop    ss
  407209:	or     eax,0xbb85ea45
  40720e:	mov    cl,0x37
  407210:	cmp    DWORD PTR [ebp+0x57],0xc0262383
  407217:	popa   
  407218:	stos   BYTE PTR es:[edi],al
  407219:	inc    edi
  40721a:	xor    eax,0x581f1045
  40721f:	mov    ecx,DWORD PTR [eax]
  407221:	cdq    
  407222:	push   edx
  407223:	outs   dx,BYTE PTR ds:[esi]
  407224:	imul   edi,eax,0x3325be76
  40722a:	and    esp,esp
  40722c:	fiadd  DWORD PTR [edi+esi*8-0x5074682f]
  407233:	cmp    BYTE PTR [ebx-0x8],ch
  407236:	lahf   
  407237:	jo     0x407231
  407239:	mov    ebp,0x19f3b33
  40723e:	jne    0x40721f
  407240:	pop    ebp
  407241:	je     0x407285
  407243:	in     eax,0x62
  407245:	jp     0x40724e
  407247:	shl    BYTE PTR [edi],cl
  407249:	retf   0x54da
  40724c:	cmp    DWORD PTR cs:[ebx],edi
  40724f:	neg    DWORD PTR [edi+0x6070ec34]
  407255:	sbb    BYTE PTR [esi+0x561da51e],dh
  40725b:	mov    esi,0xb3992b5f
  407260:	cwde   
  407261:	loopne 0x4071f2
  407263:	jg     0x40724c
  407265:	mov    eax,ds:0xa9d4daba
  40726a:	inc    esp
  40726b:	pop    edx
  40726c:	mov    dh,0xc7
  40726e:	test   DWORD PTR [edi-0x1e64d562],eax
  407274:	add    al,0xc2
  407276:	retf   
  407277:	jp     0x407268
  407279:	mov    al,0xf8
  40727b:	xchg   edx,eax
  40727c:	outs   dx,BYTE PTR ds:[esi]
  40727d:	pop    edi
  40727e:	mov    ebx,0xc23998d1
  407283:	test   al,0x5a
  407285:	in     eax,dx
  407286:	mov    eax,0x1ceefd1d
  40728b:	fimul  DWORD PTR [edi+0xe]
  40728e:	pop    esp
  40728f:	xor    cl,BYTE PTR [eax-0xc]
  407292:	ds call 0x2d2d28e9
  407298:	xor    BYTE PTR [edx],ah
  40729a:	fisttp WORD PTR ds:0xd2586537
  4072a0:	sbb    eax,0x1ac8f979
  4072a5:	add    sp,cx
  4072a8:	into   
  4072a9:	xor    al,BYTE PTR [esi+0x3899e2e]
  4072af:	mov    al,0x16
  4072b1:	xor    BYTE PTR [ecx],ah
  4072b3:	xor    BYTE PTR [ebp+0x13],ch
  4072b6:	mov    ds:0x15b383dc,eax
  4072bb:	dec    BYTE PTR [edi+0x6512dae7]
  4072c1:	test   al,0x23
  4072c3:	(bad)  
  4072c4:	jmp    0x772:0x5acc2730
  4072cb:	pop    esp
  4072cc:	push   edi
  4072cd:	fwait
  4072ce:	daa    
  4072cf:	in     al,0x1d
  4072d1:	add    DWORD PTR [edi+0x3a],esi
  4072d4:	lahf   
  4072d5:	fld    DWORD PTR [edx]
  4072d7:	mov    ecx,0x5d041db4
  4072dc:	mov    edx,0xf15faf75
  4072e1:	sub    esp,DWORD PTR [eax]
  4072e3:	pop    eax
  4072e4:	bound  esp,QWORD PTR [edi-0x79e79f01]
  4072ea:	dec    ebx
  4072eb:	jb     0x4072bc
  4072ed:	fcomp  DWORD PTR [esi]
  4072ef:	lds    esi,FWORD PTR [edx-0x28]
  4072f2:	dec    eax
  4072f3:	stos   DWORD PTR es:[edi],eax
  4072f4:	je     0x407299
  4072f6:	popa   
  4072f7:	inc    eax
  4072f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072f9:	and    eax,0x4e62a2ee
  4072fe:	es retf 
  407300:	mov    DWORD PTR [ebx-0x3b],0x90ed3c25
  407307:	repnz pop es
  407309:	test   eax,0xf8f5dcc6
  40730e:	dec    edx
  40730f:	jae    0x4072e0
  407311:	adc    al,BYTE PTR [esi-0x14b10ec7]
  407317:	xor    bl,dh
  407319:	data16 rcr ch,1
  40731c:	scas   al,BYTE PTR es:[edi]
  40731d:	jb     0x407399
  40731f:	(bad)  
  407320:	retf   0xf4b3
  407323:	mov    ah,BYTE PTR [ecx]
  407325:	data16 or bl,BYTE PTR gs:[esi]
  407329:	sbb    ebp,esp
  40732b:	into   
  40732c:	push   edx
  40732d:	add    eax,0x7cf7d60d
  407332:	dec    edx
  407333:	sbb    eax,0x34ac8a31
  407338:	jno    0x407323
  40733a:	fisttp WORD PTR [edx]
  40733c:	and    esi,DWORD PTR [edi+0x55]
  40733f:	pop    ebx
  407340:	in     eax,0x59
  407342:	mov    WORD PTR [esi+esi*8+0x5],es
  407346:	and    eax,0x7567dc74
  40734b:	imul   edx,DWORD PTR [edx+0x53],0xfffffff0
  40734f:	xchg   edi,eax
  407351:	cli    
  407352:	pusha  
  407353:	cmp    BYTE PTR [edx+0xfc27809],dl
  407359:	(bad)  
  40735a:	cmp    cl,BYTE PTR [ebp-0x2aa89a25]
  407360:	mov    cl,0x58
  407362:	push   cs
  407363:	in     eax,dx
  407364:	(bad)
  407368:	mov    bl,BYTE PTR [edi-0x74]
  40736b:	pop    edx
  40736c:	jb     0x4073cf
  40736e:	mov    eax,ds:0x36c9b8c4
  407373:	push   0x14
  407375:	std    
  407376:	adc    eax,0xb249da82
  40737b:	(bad)  
  40737c:	repnz xchg esp,eax
  40737e:	cmc    
  40737f:	or     al,0xaf
  407381:	int3   
  407382:	dec    ecx
  407383:	fwait
  407384:	mov    eax,ds:0x2320a78
  407389:	add    DWORD PTR [esi],esp
  40738b:	mov    al,BYTE PTR [edx+esi*1]
  40738e:	(bad)  
  407390:	cmp    BYTE PTR [esi+0x35],ah
  407393:	hlt    
  407394:	clc    
  407395:	dec    esi
  407396:	pushf  
  407397:	sahf   
  407398:	ds fwait
  40739a:	mov    ds:0x4725a5ee,al
  40739f:	inc    eax
  4073a0:	jno    0x40736d
  4073a2:	(bad)
  4073a5:	arpl   WORD PTR [eax+0x60],bx
  4073a8:	adc    bl,bl
  4073aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073ab:	dec    edi
  4073ac:	mov    cl,0x4c
  4073ae:	cwde   
  4073af:	cmp    ecx,DWORD PTR [edx+0x69]
  4073b2:	icebp  
  4073b3:	das    
  4073b4:	xor    ecx,DWORD PTR [esi-0x391a4f22]
  4073ba:	(bad)  
  4073bb:	clc    
  4073bc:	pop    ebp
  4073bd:	(bad)  
  4073be:	ds imul ebx,esi,0xb24c5223
  4073c5:	js     0x407366
  4073c7:	into   
  4073c8:	mov    ecx,0xe006318
  4073cd:	sub    eax,0x64
  4073d0:	scas   al,BYTE PTR es:[edi]
  4073d1:	sbb    eax,0x2f460d96
  4073d6:	adc    al,cl
  4073d8:	(bad)  
  4073d9:	repz jb 0x4073f4
  4073dc:	dec    ebx
  4073dd:	ins    DWORD PTR es:[edi],dx
  4073de:	scas   eax,DWORD PTR es:[edi]
  4073df:	scas   al,BYTE PTR es:[edi]
  4073e0:	ins    BYTE PTR es:[edi],dx
  4073e1:	or     DWORD PTR [ecx-0x3b],ecx
  4073e4:	mov    bl,0x4a
  4073e6:	mov    al,0xbf
  4073e8:	lock sub eax,0x166780e0
  4073ee:	stc    
  4073ef:	dec    ebp
  4073f0:	pop    es
  4073f1:	push   cs
  4073f2:	and    eax,ebp
  4073f4:	ins    BYTE PTR es:[edi],dx
  4073f5:	fisttp DWORD PTR [ebp-0x4d6cde3c]
  4073fb:	sbb    dh,BYTE PTR [esi-0x4b0f2a8d]
  407401:	pop    edi
  407402:	fidiv  WORD PTR [eax-0x59]
  407405:	sar    DWORD PTR [ecx-0xe],0x7b
  407409:	test   eax,0xd664d10c
  40740e:	mov    WORD PTR [ebx+ebp*1-0x76],fs
  407412:	push   es
  407413:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407414:	dec    esi
  407415:	and    DWORD PTR [ecx+0x5fc7d0e1],esp
  40741b:	cld    
  40741c:	xchg   BYTE PTR cs:[eax],ch
  40741f:	inc    ebp
  407420:	cs xchg ebx,eax
  407422:	in     eax,0x19
  407424:	and    esi,ebp
  407426:	pop    esp
  407427:	cdq    
  407428:	repz xor DWORD PTR [eax],edi
  40742b:	adc    al,0x1f
  40742d:	sbb    BYTE PTR [esp+eiz*4],dl
  407430:	mov    ebx,DWORD PTR [edi-0x1e]
  407433:	mov    eax,0x191e090c
  407438:	in     eax,dx
  407439:	add    ch,BYTE PTR es:[edi+ebp*8+0x2264b125]
  407441:	enter  0x6ece,0xf1
  407445:	or     DWORD PTR [ebx+ebp*8-0x58],esi
  407449:	dec    esp
  40744a:	hlt    
  40744b:	dec    ebp
  40744c:	inc    esp
  40744d:	(bad)  
  40744e:	scas   al,BYTE PTR es:[edi]
  40744f:	stos   DWORD PTR es:[edi],eax
  407450:	jno    0x407409
  407452:	mov    ebx,0x8cef3e4
  407457:	push   ss
  407458:	fistp  DWORD PTR [ecx-0x7b0bf290]
  40745e:	daa    
  40745f:	cld    
  407460:	popa   
  407461:	(bad)  
  407462:	stc    
  407463:	jecxz  0x407420
  407465:	cmp    ebx,DWORD PTR ds:0x73211569
  40746b:	shl    DWORD PTR gs:[eax+0x5e],1
  40746f:	ins    BYTE PTR es:[edi],dx
  407470:	sbb    DWORD PTR [ecx+0x3ef92d24],0x41
  407477:	mov    edx,0xb733930
  40747c:	(bad)  
  40747e:	jne    0x407494
  407480:	lahf   
  407481:	repz mov ecx,0x42f075d1
  407487:	adc    ah,BYTE PTR [edx-0x3b]
  40748a:	mov    ds:0x219f2210,al
  40748f:	push   ss
  407490:	add    BYTE PTR [edx-0x420e4b95],cl
  407496:	pop    ds
  407497:	pusha  
  407498:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407499:	mov    bl,0xc9
  40749b:	outs   dx,DWORD PTR ds:[esi]
  40749c:	data16 or al,BYTE PTR [edi-0x13417d03]
  4074a3:	sahf   
  4074a4:	and    DWORD PTR [esi+0x2b],ecx
  4074a7:	mov    al,ds:0x8ee95345
  4074ac:	test   al,0x27
  4074ae:	xchg   ebp,eax
  4074af:	hlt    
  4074b0:	std    
  4074b1:	xor    al,0x74
  4074b3:	jns    0x4074c9
  4074b5:	xchg   esi,eax
  4074b6:	ins    BYTE PTR es:[edi],dx
  4074b7:	jecxz  0x407466
  4074b9:	call   0xea5b:0xcf039fb9
  4074c0:	jp     0x407443
  4074c2:	mov    ds:0x84536b2f,eax
  4074c7:	retf   
  4074c8:	inc    ecx
  4074c9:	lds    ebx,FWORD PTR [ebx+0x2a]
  4074cc:	sub    esp,esp
  4074ce:	push   esp
  4074cf:	out    dx,al
  4074d0:	(bad)  
  4074d2:	or     ch,ch
  4074d4:	jo     0x4074f4
  4074d6:	mov    ah,0xed
  4074d8:	and    eax,0xcf32523f
  4074dd:	out    dx,eax
  4074de:	add    al,0xc9
  4074e0:	add    al,0xeb
  4074e2:	test   BYTE PTR [ebp+0x47816deb],ah
  4074e8:	popf   
  4074e9:	je     0x407507
  4074eb:	loope  0x4074a0
  4074ed:	mov    ds:0xa654de63,al
  4074f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074f3:	fs cmc 
  4074f5:	imul   eax,DWORD PTR [esi+0x7c],0x453c8fed
  4074fc:	(bad)  
  4074fd:	pushf  
  4074fe:	pop    esp
  4074ff:	or     al,0x14
  407501:	mov    eax,0x2eb7439
  407506:	cmp    ah,dh
  407508:	inc    esp
  407509:	jg     0x407509
  40750b:	cli    
  40750c:	jecxz  0x407550
  40750e:	jl     0x40751b
  407510:	pop    es
  407511:	jo     0x407573
  407513:	jmp    0x2bc:0xd5c3c409
  40751a:	jmp    0xd11f:0x2b381b80
  407521:	int3   
  407522:	ret    
  407523:	xchg   edi,eax
  407524:	and    dh,BYTE PTR [edx-0x757040ad]
  40752a:	into   
  40752b:	inc    edx
  40752c:	retf   
  40752d:	les    esi,FWORD PTR [ecx-0x534d6e2e]
  407533:	fs sti 
  407535:	(bad)  
  407536:	xor    eax,0x292f7493
  40753b:	dec    ecx
  40753c:	jmp    0x21b:0x2160de13
  407543:	add    BYTE PTR [edx],al
  407545:	push   edx
  407546:	push   edi
  407547:	push   ebx
  407548:	outs   dx,BYTE PTR ds:[esi]
  407549:	sbb    BYTE PTR [edi-0xd24cb01],ah
  40754f:	add    al,0x40
  407551:	std    
  407552:	cmp    DWORD PTR [ecx],0xfffffff2
  407555:	(bad)  
  407556:	arpl   WORD PTR [eax],di
  407558:	in     al,0x31
  40755a:	dec    ebx
  40755b:	cmp    ebx,DWORD PTR [eax-0x3a]
  40755e:	xchg   edx,eax
  40755f:	dec    eax
  407560:	adc    al,0xe9
  407562:	sahf   
  407563:	call   0xfcdc:0x12a5b55a
  40756a:	in     eax,0xaf
  40756c:	loopne 0x4075b4
  40756e:	mov    ch,0xb5
  407570:	add    eax,0x20a6a5ab
  407575:	pushf  
  407576:	in     eax,0x4b
  407578:	idiv   BYTE PTR [ebx-0x5ad133b9]
  40757e:	out    dx,eax
  40757f:	cs ins DWORD PTR es:[edi],dx
  407581:	xlat   BYTE PTR ds:[ebx]
  407582:	push   ebx
  407583:	repz dec ebp
  407585:	addr16 xchg edx,eax
  407587:	jp     0x4075f8
  407589:	jbe    0x40757f
  40758b:	dec    edi
  40758c:	push   ebp
  40758d:	cmp    ah,cl
  40758f:	pop    esi
  407590:	or     eax,0x9eae533e
  407595:	das    
  407596:	repnz mov ds:0x9e6bdb2,eax
  40759c:	dec    ebp
  40759d:	pop    ds
  40759e:	xchg   ecx,eax
  40759f:	inc    ebx
  4075a0:	inc    ebp
  4075a1:	xor    dh,BYTE PTR [ecx+edi*4+0x18]
  4075a5:	into   
  4075a6:	in     eax,dx
  4075a7:	dec    esp
  4075a8:	cmp    BYTE PTR [ebx-0x3445ba89],ah
  4075ae:	pop    ebx
  4075af:	data16 mov cl,0x92
  4075b2:	mov    WORD PTR [ebp-0x44],ds
  4075b5:	out    0xea,al
  4075b7:	(bad)  
  4075b8:	xor    ch,BYTE PTR [edx-0x571bc0c6]
  4075be:	xchg   BYTE PTR [esp+eiz*2],ah
  4075c1:	cmp    eax,0xa915c6c9
  4075c6:	jecxz  0x4075af
  4075c8:	int    0xa4
  4075ca:	lds    eax,FWORD PTR [eax]
  4075cc:	mov    BYTE PTR [eax+ebp*2-0x572c5718],0xae
  4075d4:	sub    bl,dl
  4075d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075d7:	out    dx,al
  4075d8:	fld    TBYTE PTR [esi+0x6a]
  4075db:	and    DWORD PTR [eax],edx
  4075dd:	adc    dh,BYTE PTR [edi-0x3d]
  4075e0:	pop    ds
  4075e1:	jb     0x40761c
  4075e3:	test   eax,0x84befc58
  4075e8:	sub    eax,0x16639449
  4075ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075ee:	fs (bad) 
  4075f0:	xchg   edx,eax
  4075f1:	clc    
  4075f2:	dec    BYTE PTR [esi]
  4075f4:	and    eax,0x237b88af
  4075f9:	pop    ss
  4075fa:	mov    BYTE PTR [ebx-0x18],cl
  4075fd:	ret    
  4075fe:	add    eax,0x309e8b0a
  407603:	push   ss
  407604:	call   0x20de:0xa136f44f
  40760b:	ins    DWORD PTR es:[edi],dx
  40760c:	xor    cl,dl
  40760e:	mov    ebp,0x62def15b
  407613:	add    esi,DWORD PTR [ecx-0x6e6d2042]
  407619:	lahf   
  40761a:	popf   
  40761b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40761c:	jle    0x40764d
  40761e:	push   cs
  40761f:	xor    esp,ecx
  407621:	sbb    al,0x25
  407623:	(bad)  
  407626:	test   al,0x90
  407628:	fnstcw WORD PTR [edi+0x586736f0]
  40762e:	inc    edi
  40762f:	xchg   DWORD PTR [edx],eax
  407631:	loop   0x40763d
  407633:	(bad)  
  407634:	cmp    eax,0x5a9a0f2b
  407639:	stc    
  40763a:	sbb    edi,ebx
  40763c:	dec    ecx
  40763d:	jbe    0x407661
  40763f:	test   al,cl
  407641:	pop    ebx
  407642:	sub    DWORD PTR [edi+0x66],esi
  407645:	sub    cl,BYTE PTR [ebx-0x756a078e]
  40764b:	mov    al,BYTE PTR [ebx-0x1b]
  40764e:	iret   
  40764f:	aaa    
  407650:	fdiv   DWORD PTR ds:0xaecfe572
  407656:	xchg   ebx,eax
  407657:	push   esp
  407658:	enter  0x454b,0x5f
  40765c:	push   edx
  40765d:	sub    dl,BYTE PTR [ebx-0x45]
  407660:	shr    ecx,0x64
  407663:	add    BYTE PTR [edi+0x37],ch
  407666:	jae    0x407695
  407668:	bound  edi,QWORD PTR [edi+0x65]
  40766b:	mov    edx,ds
  40766d:	mov    eax,0x1a48670d
  407672:	or     BYTE PTR es:[ebx-0x1a],bl
  407676:	test   BYTE PTR [esi-0xd4a0903],0x5e
  40767d:	ins    BYTE PTR es:[edi],dx
  40767e:	sbb    al,0x7a
  407680:	sbb    al,0x47
  407682:	push   0x6b
  407684:	lahf   
  407685:	push   edx
  407686:	inc    ecx
  407687:	or     eax,0x6a3049d8
  40768c:	mov    ds:0xe92d41b3,eax
  407691:	jno    0x407683
  407693:	jle    0x40768f
  407695:	cmp    eax,0xbcd46a93
  40769a:	ds lock cmc 
  40769d:	jg     0x407662
  40769f:	(bad)  
  4076a0:	call   0xaf9c4f12
  4076a5:	test   BYTE PTR [ebx-0x2e47f283],ah
  4076ab:	repnz pop es
  4076ad:	jmp    0x4076ea
  4076af:	add    DWORD PTR [edi],esi
  4076b1:	jecxz  0x407701
  4076b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076b4:	clc    
  4076b5:	jbe    0x407679
  4076b7:	int3   
  4076b8:	and    al,0x2f
  4076ba:	aam    0xd1
  4076bc:	adc    BYTE PTR [eax],al
  4076be:	test   eax,0x4b0a358f
  4076c3:	push   es
  4076c4:	cli    
  4076c5:	dec    edi
  4076c6:	stc    
  4076c7:	(bad)  
  4076c8:	jl     0x4076d2
  4076ca:	test   eax,0x4309f963
  4076cf:	arpl   WORD PTR [eax],dx
  4076d1:	push   ebp
  4076d2:	fwait
  4076d3:	stos   BYTE PTR es:[edi],al
  4076d4:	sub    eax,0x9611c74c
  4076d9:	popa   
  4076da:	loopne 0x407735
  4076dc:	cmp    al,0xe2
  4076de:	stos   BYTE PTR es:[edi],al
  4076df:	xchg   esp,eax
  4076e0:	add    al,BYTE PTR [edi]
  4076e2:	cld    
  4076e3:	or     BYTE PTR [ebx],bl
  4076e5:	call   0x96f0c2f8
  4076ea:	hlt    
  4076eb:	pop    esi
  4076ec:	jecxz  0x4076c1
  4076ee:	stos   BYTE PTR es:[edi],al
  4076ef:	mov    esi,0x402aa7b2
  4076f4:	scas   eax,DWORD PTR es:[edi]
  4076f5:	inc    eax
  4076f6:	jp     0x407773
  4076f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076f9:	outs   dx,BYTE PTR ds:[esi]
  4076fa:	add    BYTE PTR [edx-0x67],bl
  4076fd:	push   0x4ebc76b8
  407702:	and    BYTE PTR [ecx-0x73b607c6],0x25
  407709:	gs jge 0x40772a
  40770c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40770d:	clc    
  40770e:	rcl    BYTE PTR [ecx],1
  407710:	pop    eax
  407711:	enter  0x587b,0x95
  407715:	fiadd  WORD PTR ds:0x3f0cf82e
  40771b:	push   ax
  40771d:	push   0xffffffeb
  40771f:	sub    eax,0x31a76325
  407724:	lods   al,BYTE PTR ds:[esi]
  407725:	rcl    DWORD PTR [edx],0x14
  407728:	imul   eax,DWORD PTR [edi+0x670eed20],0x7e
  40772f:	punpcklbw mm7,DWORD PTR [ebx]
  407732:	add    al,0x28
  407734:	sbb    ecx,esi
  407736:	aaa    
  407737:	and    al,0x31
  407739:	retf   
  40773a:	mov    ah,BYTE PTR ds:0xb8fe703b
  407740:	sub    eax,0x648d917f
  407745:	cmp    al,0x74
  407747:	pop    eax
  407748:	or     al,cl
  40774a:	ins    DWORD PTR es:[edi],dx
  40774b:	mul    DWORD PTR ds:0x571fffb
  407752:	mov    fs,WORD PTR [esi+0x53]
  407755:	xchg   ebx,eax
  407756:	std    
  407757:	jl     0x4077bc
  407759:	in     al,dx
  40775a:	bound  edi,QWORD PTR ds:0x66de54d6
  407760:	xchg   ecx,eax
  407761:	aad    0x5
  407763:	gs je  0x4077cd
  407766:	or     BYTE PTR [ebp+eax*8-0x780b1182],ch
  40776d:	lea    esp,[eax]
  40776f:	inc    ecx
  407770:	call   0xbe9c28b
  407775:	fwait
  407776:	test   BYTE PTR [ebx+0xe],dh
  407779:	mov    dh,0x9f
  40777b:	pop    edx
  40777c:	test   eax,0x168ec781
  407781:	dec    eax
  407782:	mov    BYTE PTR [esi],dl
  407784:	jno    0x407722
  407786:	lods   eax,DWORD PTR ds:[esi]
  407787:	in     eax,0x8a
  407789:	adc    eax,0xb3cd8c6c
  40778e:	sub    ah,BYTE PTR [edx-0x4ffee68a]
  407794:	pop    ds
  407795:	test   al,0xcb
  407797:	loopne 0x4077a3
  407799:	push   esp
  40779a:	iret   
  40779b:	and    edi,DWORD PTR [edx]
  40779d:	jmp    0x1ce:0xd1584bc7
  4077a4:	arpl   WORD PTR [edx-0x17b1ab8f],sp
  4077aa:	adc    ebx,ecx
  4077ac:	lock call 0xf61c:0x2c4c5e69
  4077b4:	sbb    eax,0x5c067730
  4077b9:	and    eax,0xe6705d3a
  4077be:	loope  0x40774b
  4077c0:	xor    bh,bh
  4077c2:	jle    0x407809
  4077c4:	jbe    0x4077b2
  4077c6:	mov    cl,0x3
  4077c8:	fwait
  4077c9:	or     BYTE PTR [ecx],ch
  4077cb:	inc    edi
  4077cc:	mov    ch,0xae
  4077ce:	ds mov bh,0xf4
  4077d1:	mov    DWORD PTR [esi],ebx
  4077d3:	mov    al,0xf9
  4077d5:	in     eax,0x8
  4077d7:	add    eax,0x56449546
  4077dc:	enter  0x79b9,0x66
  4077e0:	xor    DWORD PTR [edx],edi
  4077e2:	xchg   esi,eax
  4077e3:	inc    esp
  4077e4:	sti    
  4077e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077e6:	mov    edx,0x88c2aa8f
  4077eb:	push   esp
  4077ec:	mov    edx,0xa9fe4977
  4077f1:	lock adc cl,BYTE PTR ds:0xa56cb685
  4077f8:	jae    0x40785c
  4077fa:	addr16 jb 0x40786f
  4077fd:	dec    edi
  4077fe:	cmp    ecx,eax
  407800:	add    eax,DWORD PTR [ebp+0x42]
  407803:	jmp    0xafb6:0x276c8665
  40780a:	ds xchg edx,eax
  40780c:	bound  esi,QWORD PTR [ecx]
  40780e:	in     al,0x8b
  407810:	inc    ebx
  407811:	mov    al,ds:0xed9b6876
  407816:	inc    ecx
  407817:	mov    cl,0x31
  407819:	pop    edx
  40781a:	retf   0x3233
  40781d:	sbb    al,0x1c
  40781f:	push   edx
  407820:	xor    eax,0x4c427dee
  407825:	push   ebx
  407826:	push   ecx
  407827:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  407829:	sar    BYTE PTR [edi+0x6baf9f74],1
  40782f:	mov    ds:0x48ea4c59,al
  407834:	or     esp,DWORD PTR [esp+eax*2-0x1d]
  407838:	jp     0x40780c
  40783a:	xchg   ecx,eax
  40783b:	es (bad) 
  40783d:	sbb    dl,BYTE PTR [ebx+0x673a0551]
  407843:	hlt    
  407844:	out    0x16,al
  407846:	shl    BYTE PTR [ebp+0x5215a097],1
  40784c:	bnd jg 0x4078b0
  40784f:	jno    0x407840
  407851:	popf   
  407852:	mov    ah,0x7d
  407854:	mov    BYTE PTR [ebx+0xbc3cc0b],ch
  40785a:	rcl    BYTE PTR [esi-0x238e978f],cl
  407860:	lahf   
  407861:	jnp    0x40784d
  407863:	pop    es
  407864:	loope  0x4078d8
  407866:	or     eax,0x4d91a2a1
  40786b:	into   
  40786c:	mov    bh,0x77
  40786e:	pop    es
  40786f:	sbb    al,0x58
  407871:	jno    0x40786e
  407873:	jno    0x407893
  407875:	pop    ebx
  407876:	in     eax,0x4c
  407878:	jl     0x40783c
  40787a:	cmp    DWORD PTR [edx-0x2732969f],ebx
  407880:	fimul  DWORD PTR [esi]
  407882:	mov    edi,DWORD PTR [esp+ecx*2-0x26273a1e]
  407889:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40788a:	dec    ebx
  40788b:	mov    ah,0xf9
  40788d:	xchg   esi,eax
  40788e:	iret   
  40788f:	test   DWORD PTR ds:0x5c2f59ad,ecx
  407895:	in     eax,dx
  407896:	fwait
  407897:	rcr    BYTE PTR [esi],cl
  407899:	mov    esi,0xaaa87aef
  40789e:	rol    bh,0xba
  4078a1:	bound  edi,QWORD PTR [edx+ebp*1+0x761be6a6]
  4078a8:	mov    al,ds:0xe6e46f48
  4078ad:	or     ecx,eax
  4078af:	jmp    0x795a:0xbd1fd9c9
  4078b6:	dec    ebp
  4078b7:	jns    0x4078b7
  4078b9:	pop    esp
  4078ba:	mov    esi,0x7ae78ff0
  4078bf:	mov    ss,eax
  4078c1:	push   edx
  4078c2:	call   0xcfb9bf05
  4078c7:	popf   
  4078c8:	test   al,0x92
  4078ca:	cmp    ah,ch
  4078cc:	das    
  4078cd:	lea    ecx,[edx+0xb]
  4078d0:	mov    ebp,0xe78ba7d8
  4078d5:	aad    0x55
  4078d7:	mov    dh,0xab
  4078d9:	xchg   edx,eax
  4078da:	fiadd  WORD PTR [ecx+eiz*8-0x62]
  4078de:	pop    ebx
  4078df:	mov    esi,0x976cb010
  4078e4:	mov    esp,0x59b5b590
  4078e9:	outs   dx,BYTE PTR ds:[esi]
  4078ea:	push   ebp
  4078eb:	loop   0x407895
  4078ed:	mov    edi,0x6454da01
  4078f2:	in     al,dx
  4078f3:	and    ch,0xf1
  4078f6:	mov    cl,0x71
  4078f8:	ret    0xc8ba
  4078fb:	je     0x40789a
  4078fd:	xchg   esi,eax
  4078fe:	push   esp
  4078ff:	into   
  407900:	or     al,al
  407902:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407903:	jl     0x40793a
  407905:	dec    esi
  407906:	jno    0x407932
  407908:	push   edi
  407909:	clc    
  40790a:	and    al,0x67
  40790c:	sbb    al,0xae
  40790e:	add    eax,0xad1a5c20
  407913:	fmul   st,st(4)
  407915:	and    bh,cl
  407917:	push   edi
  407918:	out    dx,eax
  407919:	inc    edi
  40791b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40791c:	test   DWORD PTR [eax+0x21],edx
  40791f:	sub    BYTE PTR [ecx],0x3
  407922:	push   ds
  407923:	test   DWORD PTR ds:0x557ed65f,0x74dc13dc
  40792d:	(bad)  
  40792e:	out    0x1,al
  407930:	loop   0x4079a5
  407932:	fwait
  407933:	mov    dh,0x21
  407935:	mov    eax,ds:0x38114141
  40793a:	push   ecx
  40793b:	sub    al,BYTE PTR ds:0x46685a67
  407941:	(bad)  
  407944:	retf   
  407945:	clc    
  407946:	loopne 0x407969
  407948:	rcr    BYTE PTR [edx],cl
  40794a:	or     eax,0xb1a6d225
  40794f:	icebp  
  407950:	inc    esi
  407951:	aas    
  407952:	mov    bl,0x2
  407955:	in     al,dx
  407956:	add    DWORD PTR [esi-0x51],edi
  407959:	mov    ecx,?
  40795b:	ins    DWORD PTR es:[edi],dx
  40795c:	jae    0x40799f
  40795e:	scas   al,BYTE PTR es:[edi]
  40795f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407960:	or     esp,DWORD PTR [edx+0x1c]
  407963:	cmp    eax,0x164c4aa2
  407968:	dec    edi
  407969:	ror    DWORD PTR [ecx+edi*2-0x300b38fe],cl
  407970:	jecxz  0x407915
  407972:	jbe    0x4079d1
  407974:	div    BYTE PTR [ebx-0x7d0c9ff4]
  40797a:	or     edx,DWORD PTR ds:[ebx+eax*2+0x147cffaf]
  407982:	xor    al,dl
  407984:	icebp  
  407985:	add    ecx,DWORD PTR [edi]
  407987:	adc    al,BYTE PTR [eax+0x21]
  40798a:	xor    dl,BYTE PTR [ecx+eax*2+0x79782980]
  407991:	mov    esp,0xd11271cd
  407996:	mul    eax
  407998:	dec    ebx
  407999:	fld    QWORD PTR [esi]
  40799b:	mov    ds:0xb4a61086,eax
  4079a0:	mov    ebx,0x766abbc9
  4079a5:	fcmovb st,st(5)
  4079a7:	inc    ecx
  4079a8:	cmp    BYTE PTR [ecx-0x65],dh
  4079ab:	fcomp  DWORD PTR [edi]
  4079ad:	sbb    ebp,DWORD PTR [esi+0x4f]
  4079b0:	mov    cl,0xc9
  4079b2:	mov    WORD PTR [edi-0x30],cs
  4079b5:	addr16 in al,0xfc
  4079b8:	ins    BYTE PTR es:[edi],dx
  4079b9:	inc    ebp
  4079ba:	adc    ecx,DWORD PTR [edx]
  4079bc:	lds    esi,FWORD PTR [edx-0x77]
  4079bf:	pop    edx
  4079c0:	jl     0x4079fa
  4079c2:	inc    edx
  4079c3:	xlat   BYTE PTR ds:[ebx]
  4079c4:	mov    DWORD PTR [eax],edx
  4079c6:	jmp    0x2f5c1c08
  4079cb:	sub    bl,BYTE PTR [ebx-0x22e8a3a6]
  4079d1:	or     BYTE PTR [ecx+edi*1-0xd],ah
  4079d5:	jmp    0x407a02
  4079d7:	scas   al,BYTE PTR es:[edi]
  4079d8:	dec    esp
  4079d9:	fild   DWORD PTR [eax]
  4079db:	push   edx
  4079dc:	rcl    ebp,1
  4079de:	and    eax,0xe45a0e1a
  4079e3:	ja     0x40799f
  4079e5:	xchg   esp,eax
  4079e6:	stc    
  4079e7:	loopne 0x4079b3
  4079e9:	and    DWORD PTR [edx],ecx
  4079eb:	jnp    0x407993
  4079ed:	mov    esi,0xdb1164af
  4079f2:	(bad)  
  4079f4:	loope  0x407a65
  4079f6:	and    DWORD PTR [esi+eax*2-0x7b],eax
  4079fa:	pop    ecx
  4079fb:	sbb    eax,0x889d5a5e
  407a00:	js     0x4079bb
  407a02:	cmp    eax,DWORD PTR [edi]
  407a04:	dec    ebx
  407a05:	add    DWORD PTR [ecx-0x55],0xfffffffd
  407a09:	(bad)  
  407a0a:	dec    ebp
  407a0b:	xor    DWORD PTR [edx],esi
  407a0d:	pop    eax
  407a0e:	cmp    ebx,ebx
  407a10:	jmp    0x6ac4:0xed0ae74f
  407a17:	mov    dl,BYTE PTR [eax]
  407a19:	clc    
  407a1a:	shl    DWORD PTR [esi+eiz*8+0x42],0x98
  407a1f:	xor    esp,ebp
  407a21:	inc    edx
  407a22:	or     al,0xed
  407a24:	call   0x510dffd5
  407a29:	fisttp WORD PTR [edx]
  407a2b:	mov    esp,0x355d094c
  407a30:	push   0x21
  407a32:	xor    esp,edi
  407a34:	(bad)
  407a37:	or     eax,0x1278b92f
  407a3c:	daa    
  407a3d:	mov    WORD PTR [edx+0x2c],cs
  407a40:	xor    al,0xdd
  407a42:	add    al,0x41
  407a44:	jb     0x407a15
  407a46:	and    BYTE PTR [ecx],ah
  407a48:	xchg   ebx,eax
  407a49:	pop    edx
  407a4a:	(bad)  
  407a4b:	sub    eax,0xcf521ede
  407a50:	mov    DWORD PTR [esi-0x10b4a9bf],ecx
  407a56:	xchg   BYTE PTR [eax-0x5],dl
  407a59:	and    BYTE PTR [esi],dh
  407a5b:	mov    edx,0x79620e56
  407a60:	sub    ebp,0x61184815
  407a66:	sti    
  407a67:	jmp    0xbaf33a6d
  407a6c:	xchg   ecx,eax
  407a6d:	int    0xf8
  407a6f:	rcr    DWORD PTR [edi-0x75868f9e],0xa4
  407a76:	out    dx,eax
  407a77:	jo     0x407af0
  407a79:	cmp    dh,BYTE PTR [edx-0x3632329e]
  407a7f:	scas   al,BYTE PTR es:[edi]
  407a80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a81:	(bad)  
  407a82:	sti    
  407a83:	mov    ds:0x2ca54837,eax
  407a88:	out    dx,eax
  407a89:	lds    ebp,FWORD PTR [edi+esi*2-0x35d4e0c4]
  407a90:	notrack jmp DWORD PTR [edi-0x58c3e1ce]
  407a97:	rcl    BYTE PTR [ecx+0x11],cl
  407a9a:	les    edx,FWORD PTR [eax-0x519002e3]
  407aa0:	and    al,0xd6
  407aa2:	std    
  407aa3:	pop    ebx
  407aa4:	xor    eax,0xaae3713a
  407aa9:	aad    0xad
  407aab:	aad    0xa1
  407aad:	or     dh,BYTE PTR [esi-0x19]
  407ab0:	push   edi
  407ab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ab2:	mov    ah,0x9d
  407ab4:	inc    edi
  407ab5:	ret    0x7930
  407ab8:	in     al,dx
  407ab9:	add    edi,ebx
  407abb:	xchg   ebp,eax
  407abc:	mov    cl,0xde
  407abe:	push   ss
  407abf:	push   ss
  407ac0:	les    ecx,FWORD PTR [edi+0x5a]
  407ac3:	sar    BYTE PTR [edx-0x40224f5b],0xde
  407aca:	jle    0x407adc
  407acc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407acd:	mov    ebx,0x7d7045bf
  407ad2:	mov    esi,0x11bff05c
  407ad7:	adc    cl,bh
  407ad9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ada:	mov    dh,0x3a
  407adc:	add    cl,cl
  407ade:	add    BYTE PTR [eax-0x42],dh
  407ae1:	repnz mov eax,ds:0x6b08092
  407ae7:	push   ebp
  407ae8:	mov    esi,0xbb9b068c
  407aed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407aee:	je     0x407b0f
  407af0:	call   0xdac:0x8f03f8f1
  407af7:	in     eax,dx
  407af8:	fcomp  DWORD PTR [edi+0x6d]
  407afb:	in     al,0xa1
  407afd:	inc    esp
  407afe:	imul   ebx,DWORD PTR [eax-0x6b3034e1],0x45f458a3
  407b08:	cwde   
  407b09:	adc    ecx,DWORD PTR [edi-0x6c8c426f]
  407b0f:	xchg   ebx,eax
  407b10:	push   es
  407b11:	sbb    BYTE PTR fs:[ecx-0x7269a40a],bh
  407b18:	nop
  407b19:	push   edi
  407b1a:	push   ecx
  407b1b:	inc    ebp
  407b1c:	xchg   ebp,eax
  407b1d:	lds    ebx,FWORD PTR [eax+0x3e4fe6ce]
  407b23:	cli    
  407b24:	stos   DWORD PTR es:[edi],eax
  407b25:	loop   0x407b5a
  407b27:	mov    DWORD PTR [ecx+0x3d],esi
  407b2a:	mov    eax,DWORD PTR [ebx-0x40]
  407b2d:	adc    eax,0xc3906af8
  407b32:	out    0xa7,al
  407b34:	arpl   WORD PTR [eax+0x5d],sp
  407b37:	push   ecx
  407b38:	out    0xbe,al
  407b3a:	xor    DWORD PTR ds:0x81f933c7,0xffffffc7
  407b41:	(bad)  [edx+0x32]
  407b44:	add    bh,dh
  407b46:	xlat   BYTE PTR ds:[ebx]
  407b47:	and    eax,edi
  407b49:	movsx  di,BYTE PTR [eax+0x1]
  407b4e:	mov    ebx,0x3b4a
  407b53:	sub    di,bx
  407b56:	mov    ebx,0x8a87
  407b5b:	xor    di,bx
  407b5e:	mov    ebx,0x4f97
  407b63:	cmp    di,bx
  407b66:	jne    0x407b8e
  407b6c:	movsx  di,BYTE PTR [eax]
  407b70:	mov    ebx,0x3b4a
  407b75:	sub    di,bx
  407b78:	mov    ebx,0x8a87
  407b7d:	xor    di,bx
  407b80:	mov    ebx,0x4f84
  407b85:	cmp    di,bx
  407b88:	je     0x407b9e
  407b8e:	mov    edi,DWORD PTR [ebp-0x10]
  407b91:	xor    edi,ecx
  407b93:	mov    ebx,esi
  407b95:	sub    ebx,edi
  407b97:	add    eax,ebx
  407b99:	jmp    0x407b49
  407b9e:	mov    esi,DWORD PTR [ebp-0x14]
  407ba1:	mov    esi,DWORD PTR [esi]
  407ba3:	mov    edi,DWORD PTR [eax+0x3c]
  407ba6:	lea    esi,[edi+esi*8+0x78]
  407baa:	mov    esi,DWORD PTR [esi+eax*1]
  407bad:	mov    DWORD PTR [ebp-0x8],esi
  407bb0:	mov    esi,DWORD PTR [ebp+0x8]
  407bb3:	xor    esi,ecx
  407bb5:	add    esi,edx
  407bb7:	mov    DWORD PTR [ebp-0x14],esi
  407bba:	mov    esi,DWORD PTR [ebp+0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x8]
  407bc0:	xor    esi,ecx
  407bc2:	add    esi,edx
  407bc4:	pop    ebx
  407bc5:	cmp    edi,esi
  407bc7:	jne    0x407be5
  407bcd:	mov    eax,DWORD PTR [ebp+0xc]
  407bd0:	xor    eax,ecx
  407bd2:	mov    ecx,DWORD PTR [ebp-0x8]
  407bd5:	add    eax,edx
  407bd7:	imul   eax,ecx
  407bda:	mov    DWORD PTR [ebp-0x8],eax
  407bdd:	push   DWORD PTR [ebp+0x18]
  407be0:	jmp    0x407c39
  407be5:	mov    ecx,DWORD PTR [ebp-0x8]
  407be8:	add    ecx,eax
  407bea:	mov    DWORD PTR [ebp-0x14],ecx
  407bed:	mov    ecx,DWORD PTR [ebp-0x14]
  407bf0:	mov    ecx,DWORD PTR [ecx+0xc]
  407bf3:	movsx  cx,BYTE PTR [ecx+eax*1]
  407bf8:	mov    edx,0x3b4a
  407bfd:	sub    cx,dx
  407c00:	mov    edx,0x8a87
  407c05:	xor    cx,dx
  407c08:	mov    edx,0x4f86
  407c0d:	cmp    cx,dx
  407c10:	jne    0x407bdd
  407c16:	mov    ecx,DWORD PTR ds:0x4163b4
  407c1c:	mov    ecx,DWORD PTR [ecx+0x198]
  407c22:	mov    DWORD PTR [ecx],eax
  407c24:	jmp    0x407c4a
  407c29:	mov    ecx,DWORD PTR [ebp+0x18]
  407c2c:	cmp    ecx,0xf89c85b1
  407c32:	jne    0x407c4a
  407c38:	push   eax
  407c39:	push   DWORD PTR [ebp+0x14]
  407c3c:	push   DWORD PTR [ebp+0x10]
  407c3f:	push   DWORD PTR [ebp+0xc]
  407c42:	push   DWORD PTR [ebp+0x8]
  407c45:	call   0x405399
  407c4a:	pop    edi
  407c4b:	pop    esi
  407c4c:	leave  
  407c4d:	ret    0x14
  407c50:	push   ebp
  407c51:	mov    ebp,esp
  407c53:	push   ecx
  407c54:	mov    DWORD PTR [ebp-0x4],0xf89c85bc
  407c5b:	and    DWORD PTR ds:0x413c02,0x414004
  407c65:	mov    eax,DWORD PTR [ebp-0x4]
  407c68:	mov    edx,DWORD PTR [ebp+0x10]
  407c6b:	mov    ecx,0x7510894
  407c70:	xor    eax,ecx
  407c72:	add    eax,0x3272dc
  407c77:	mov    DWORD PTR [edx],eax
  407c79:	movzx  edx,WORD PTR ds:0x413c7c
  407c80:	and    edx,DWORD PTR ds:0x413cf4
  407c86:	mov    DWORD PTR ds:0x413c7c,edx
  407c8c:	mov    eax,DWORD PTR [ebp+0xc]
  407c8f:	sbb    DWORD PTR ds:0x413c02,0x413c0a
  407c99:	xor    eax,ecx
  407c9b:	adc    edx,DWORD PTR ds:0x414010
  407ca1:	push   esi
  407ca2:	sub    edx,DWORD PTR ds:0x413c84
  407ca8:	mov    esi,DWORD PTR [ebp+0x10]
  407cab:	movzx  edx,WORD PTR ds:0x414010
  407cb2:	sbb    DWORD PTR ds:0x413cf4,edx
  407cb8:	mov    edx,0x3272dc
  407cbd:	neg    DWORD PTR ds:0x413d20
  407cc3:	add    eax,edx
  407cc5:	xor    DWORD PTR ds:0x413c06,0x413c1a
  407ccf:	mov    DWORD PTR [esi+0x4],eax
  407cd2:	mov    eax,DWORD PTR [ebp+0x14]
  407cd5:	mov    esi,DWORD PTR [ebp+0x10]
  407cd8:	mov    DWORD PTR [esi+0x8],eax
  407cdb:	mov    eax,DWORD PTR [ebp+0x18]
  407cde:	mov    esi,DWORD PTR [ebp+0x10]
  407ce1:	mov    DWORD PTR [esi+0xc],eax
  407ce4:	mov    eax,DWORD PTR [ebp+0x1c]
  407ce7:	mov    esi,DWORD PTR [ebp+0x10]
  407cea:	mov    DWORD PTR [esi+0x10],eax
  407ced:	mov    eax,DWORD PTR [ebp+0x8]
  407cf0:	xor    eax,ecx
  407cf2:	add    eax,edx
  407cf4:	pop    esi
  407cf5:	leave  
  407cf6:	ret    0x18
  407cf9:	push   ebp
  407cfa:	mov    ebp,esp
  407cfc:	push   ecx
  407cfd:	and    DWORD PTR ds:0x413d34,0x0
  407d07:	xor    eax,eax
  407d09:	add    eax,DWORD PTR ds:0x413d34
  407d0f:	inc    eax
  407d10:	mov    ds:0x413d34,eax
  407d15:	cmp    DWORD PTR ds:0x413d34,0x10
  407d1c:	jne    0x407d30
  407d22:	push   DWORD PTR [ebp-0x14]
  407d25:	push   0x4160bf
  407d2a:	call   DWORD PTR ds:0x41678c
  407d30:	cmp    DWORD PTR ds:0x413d34,0xf
  407d37:	jne    0x407d48
  407d3d:	mov    eax,ds:0x413d34
  407d42:	inc    eax
  407d43:	mov    ds:0x413d34,eax
  407d48:	cmp    DWORD PTR ds:0x413d34,0x1e
  407d4f:	jb     0x407d07
  407d55:	sbb    eax,DWORD PTR ds:0x413bf6
  407d5b:	push   ecx
  407d5c:	mov    DWORD PTR [ebp-0x8],0xf89c85b0
  407d63:	and    DWORD PTR ds:0x413c06,0x0
  407d6d:	jmp    0x407d7f
  407d72:	mov    edx,DWORD PTR ds:0x413c06
  407d78:	inc    edx
  407d79:	mov    DWORD PTR ds:0x413c06,edx
  407d7f:	cmp    DWORD PTR ds:0x413c06,0x1d
  407d86:	jae    0x407dc8
  407d8c:	cmp    DWORD PTR ds:0x413c06,0x27
  407d93:	jne    0x407dbd
  407d99:	push   0x1c64
  407d9e:	push   0x413c06
  407da3:	push   0x752e
  407da8:	push   0x4160cf
  407dad:	push   0x55a9
  407db2:	push   0x2dee
  407db7:	call   DWORD PTR ds:0x416790
  407dbd:	jmp    0x407d72
  407dc2:	and    eax,DWORD PTR ds:0x413ce0
  407dc8:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  407dcf:	mov    DWORD PTR ds:0x413d34,0x14
  407dd9:	cmp    DWORD PTR ds:0x413d34,0x0
  407de0:	je     0x407e29
  407de6:	cmp    DWORD PTR ds:0x413d34,0x9
  407ded:	jne    0x407dfe
  407df3:	push   0x2bdc
  407df8:	call   DWORD PTR ds:0x416798
  407dfe:	cmp    DWORD PTR ds:0x413d34,0xa
  407e05:	jne    0x407e19
  407e0b:	xor    eax,eax
  407e0d:	add    eax,DWORD PTR ds:0x413d34
  407e13:	dec    eax
  407e14:	mov    ds:0x413d34,eax
  407e19:	mov    eax,ds:0x413d34
  407e1e:	dec    eax
  407e1f:	mov    ds:0x413d34,eax
  407e24:	jmp    0x407dd9
  407e29:	mov    eax,DWORD PTR [ebp-0x4]
  407e2c:	push   esi
  407e2d:	mov    esi,DWORD PTR [ebp-0x8]
  407e30:	mov    edx,0x7510894
  407e35:	xor    eax,edx
  407e37:	xor    esi,edx
  407e39:	mov    ecx,0x3272dc
  407e3e:	add    esi,ecx
  407e40:	add    eax,ecx
  407e42:	imul   eax,esi
  407e45:	mov    esi,DWORD PTR [ebp+0xc]
  407e48:	jmp    0x40a1fd
  407e4d:	mov    ds:0x72fcde4e,al
  407e52:	in     al,dx
  407e53:	xor    dl,0xf9
  407e56:	mov    ebp,0xe26270e0
  407e5b:	(bad)  
  407e5c:	cmp    eax,0x7c7c22cf
  407e61:	aam    0x5f
  407e63:	jl     0x407ee1
  407e65:	push   esi
  407e66:	sub    esp,edi
  407e68:	out    dx,eax
  407e69:	adc    BYTE PTR [ebp+0x71889c05],0x2
  407e70:	adc    DWORD PTR [esi],edx
  407e72:	jno    0x407e4e
  407e74:	or     BYTE PTR [edi+0x1b955056],dh
  407e7a:	sub    BYTE PTR [edx+0x69d2b451],dh
  407e80:	mov    al,0xb0
  407e82:	xor    al,0x37
  407e84:	jp     0x407e19
  407e86:	cmp    eax,0xc5ddeb49
  407e8b:	inc    esi
  407e8c:	mov    eax,ds:0x9bc26c29
  407e91:	pop    es
  407e92:	jns    0x407ed0
  407e94:	adc    DWORD PTR [ebx-0x68c8fa27],ecx
  407e9a:	in     al,0xfd
  407e9c:	mov    ds:0xb4fc2e4d,al
  407ea1:	rol    DWORD PTR [esi+edi*2],cl
  407ea4:	mov    WORD PTR ds:0x1e950312,ds
  407eaa:	jl     0x407ee6
  407eac:	push   ebx
  407ead:	mov    ebx,0xd48074f7
  407eb2:	inc    ebx
  407eb3:	dec    esi
  407eb4:	out    0xb6,eax
  407eb6:	push   esi
  407eb7:	sbb    eax,0xbaa1e2e1
  407ebc:	cdq    
  407ebd:	test   al,0x2f
  407ebf:	rol    DWORD PTR ds:0x4c42f52c,0xe0
  407ec6:	push   edx
  407ec7:	cmp    ebx,edi
  407ec9:	inc    ebx
  407eca:	daa    
  407ecb:	pop    ss
  407ecc:	adc    ebx,DWORD PTR [edx]
  407ece:	rcr    BYTE PTR fs:[ebp-0x5feadc6f],1
  407ed5:	jmp    0x407ef5
  407ed7:	xchg   ecx,eax
  407ed8:	jmp    0xe7f7:0xfe987295
  407edf:	aad    0x9d
  407ee1:	jnp    0x407e73
  407ee3:	icebp  
  407ee4:	es and eax,0xa799343b
  407eea:	jne    0x407ef1
  407eec:	cmp    eax,0x579d2a34
  407ef1:	(bad)  
  407ef3:	and    BYTE PTR [esi-0x7d],dl
  407ef6:	shl    BYTE PTR [ebx-0x2536447b],0x29
  407efd:	pop    ds
  407efe:	mov    al,ds:0x5677bc0d
  407f03:	dec    edi
  407f04:	cwde   
  407f05:	inc    esi
  407f06:	dec    edx
  407f07:	std    
  407f08:	sbb    eax,0xfe0f5e94
  407f0d:	(bad)  
  407f0e:	and    dh,ah
  407f10:	iret   
  407f11:	mov    eax,0x582719d4
  407f16:	adc    DWORD PTR [eax+0x6a5d5601],esp
  407f1c:	push   ecx
  407f1d:	pop    ecx
  407f1e:	in     eax,dx
  407f1f:	int3   
  407f20:	pop    eax
  407f21:	int    0x8a
  407f23:	mov    edi,0x6960a4e
  407f28:	xchg   edx,eax
  407f29:	outs   dx,DWORD PTR ds:[esi]
  407f2a:	and    cl,0x45
  407f2d:	xchg   BYTE PTR [ecx+0x5f1ae891],ah
  407f33:	and    eax,0x3697afbc
  407f38:	xor    BYTE PTR [ebp-0x51df1772],ch
  407f3e:	aad    0xb8
  407f40:	sub    ah,ah
  407f42:	jne    0x407f70
  407f44:	adc    dh,ah
  407f46:	arpl   bp,cx
  407f48:	push   ecx
  407f49:	test   eax,0x2231d578
  407f4e:	outs   dx,DWORD PTR ds:[esi]
  407f4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f50:	push   esp
  407f51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f52:	ret    0x44f6
  407f55:	cwde   
  407f56:	jg     0x407f70
  407f58:	cdq    
  407f59:	push   ss
  407f5a:	lock mov ch,0x20
  407f5d:	dec    esp
  407f5e:	jnp    0x407fc1
  407f60:	mov    ecx,0x9acedf07
  407f65:	or     ecx,DWORD PTR ss:[edi+0x28]
  407f69:	int3   
  407f6a:	dec    edx
  407f6b:	adc    al,cl
  407f6d:	mov    esi,edx
  407f6f:	push   ds
  407f70:	xor    eax,0x6bede804
  407f75:	sbb    BYTE PTR [edx+ecx*2-0x6a],0x83
  407f7a:	push   edx
  407f7b:	sbb    esi,ebx
  407f7d:	dec    eax
  407f7e:	xor    BYTE PTR [eax],dh
  407f80:	push   0xa1312887
  407f85:	repz dec ebp
  407f87:	fwait
  407f88:	cdq    
  407f89:	add    al,0xc2
  407f8b:	inc    ecx
  407f8c:	dec    ecx
  407f8d:	xchg   ebp,eax
  407f8e:	xchg   ebx,eax
  407f8f:	sti    
  407f90:	add    eax,0xf8b7b53b
  407f95:	adc    BYTE PTR es:[eax],0xf4
  407f99:	lods   al,BYTE PTR ds:[esi]
  407f9a:	test   eax,0x81e1271e
  407f9f:	mov    esp,0xbc63ed6d
  407fa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fa5:	mov    dl,0x25
  407fa7:	aas    
  407fa8:	cmp    ecx,DWORD PTR [ecx-0x390abe20]
  407fae:	out    dx,eax
  407faf:	paddq  mm4,QWORD PTR [esi]
  407fb2:	push   ecx
  407fb3:	cmp    ebx,0x9f432dce
  407fb9:	dec    esi
  407fba:	je     0x407f78
  407fbc:	aad    0xf9
  407fbe:	push   ss
  407fbf:	sbb    ah,BYTE PTR ds:0x952905dd
  407fc5:	and    al,0x9
  407fc7:	fist   DWORD PTR [esi+0xf]
  407fca:	(bad)  
  407fcb:	lods   eax,DWORD PTR ds:[esi]
  407fcc:	mov    esp,0x84e893f3
  407fd1:	mov    BYTE PTR [edx-0x45],dl
  407fd4:	mov    ecx,0xa85f5660
  407fd9:	push   ebp
  407fda:	nop
  407fdb:	add    dh,BYTE PTR [esi]
  407fdd:	clc    
  407fde:	ret    0x37b7
  407fe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fe2:	jnp    0x408026
  407fe4:	stos   BYTE PTR es:[edi],al
  407fe5:	jbe    0x408028
  407fe7:	add    eax,0x9e31aee
  407fec:	div    BYTE PTR [edi]
  407fee:	sti    
  407fef:	mov    cl,0x27
  407ff1:	inc    ch
  407ff3:	inc    edi
  407ff4:	pop    ds
  407ff5:	inc    esi
  407ff6:	add    ch,BYTE PTR [edx+0x3e1e710b]
  407ffc:	inc    ecx
  407ffd:	mov    ecx,0xbfc91b41
  408002:	jne    0x407ff5
  408004:	inc    ecx
  408005:	add    BYTE PTR [edx+0x7e],0xbd
  408009:	pop    es
  40800a:	pop    ss
  40800b:	and    BYTE PTR [ecx-0x370ff948],al
  408011:	inc    esi
  408012:	in     eax,dx
  408013:	inc    ebx
  408014:	lahf   
  408015:	imul   edi,ebp,0x5d
  408018:	adc    bl,BYTE PTR [esp+edi*4]
  40801b:	stos   DWORD PTR es:[edi],eax
  40801c:	(bad)  
  40801d:	cwde   
  40801e:	push   0x4e7e7a26
  408023:	adc    BYTE PTR [ebp-0x49],bl
  408026:	ins    DWORD PTR es:[edi],dx
  408027:	nop
  408028:	dec    eax
  408029:	jbe    0x40806b
  40802b:	shl    ebx,0x50
  40802e:	dec    edi
  40802f:	or     eax,DWORD PTR [ecx+0x3]
  408032:	retf   
  408033:	mov    dh,0x60
  408035:	mov    ds:0xfa8ee157,eax
  40803a:	xor    al,0xa8
  40803c:	cld    
  40803d:	mov    al,0xa5
  40803f:	sub    DWORD PTR [ebx],ebp
  408041:	les    ebx,FWORD PTR [edi-0x14]
  408044:	inc    ecx
  408045:	jnp    0x407fe2
  408047:	jge    0x40800e
  408049:	jb     0x408016
  40804b:	sub    edx,edi
  40804d:	imul   ecx,DWORD PTR [ecx],0x5428e760
  408053:	scas   eax,DWORD PTR es:[edi]
  408054:	push   0xffffffac
  408056:	jne    0x4080ae
  408058:	mov    ebx,0x1e660bf
  40805d:	stos   DWORD PTR es:[edi],eax
  40805e:	xchg   BYTE PTR [edi+0x27995840],al
  408064:	bound  ecx,QWORD PTR [edx+edi*8-0x5d]
  408068:	adc    eax,0xae430385
  40806d:	inc    ah
  40806f:	adc    BYTE PTR [edx+0x2f],al
  408072:	mov    cl,0x94
  408074:	mov    cl,0x69
  408076:	imul   BYTE PTR [edx+0x28cdfcc1]
  40807c:	ror    BYTE PTR [esp+esi*8],cl
  40807f:	sbb    esp,ebx
  408081:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408082:	mov    eax,0xc2110b6a
  408087:	add    ebp,ebx
  408089:	mov    bl,0x20
  40808b:	iret   
  40808c:	dec    esp
  40808d:	mov    edi,0x171a6bc4
  408092:	rcl    BYTE PTR [esi+edi*8+0x16f0ec73],0x2f
  40809a:	push   0x4932cf70
  40809f:	mov    edx,0xc6318098
  4080a4:	test   DWORD PTR [eax-0x1835222d],ebp
  4080aa:	hlt    
  4080ab:	xor    BYTE PTR [edi],ch
  4080ad:	adc    DWORD PTR [eax+0x2b],ebx
  4080b0:	arpl   WORD PTR [ecx+0x5e],ax
  4080b3:	rcl    DWORD PTR [ecx+eax*4+0x39],1
  4080b7:	or     eax,0xe273b4b6
  4080bc:	aam    0x80
  4080be:	pop    ecx
  4080bf:	daa    
  4080c0:	das    
  4080c1:	call   0xbc0e:0xf2cb9e1a
  4080c8:	pop    ecx
  4080c9:	inc    esp
  4080ca:	jg     0x4080b2
  4080cc:	fcom   DWORD PTR [ebp-0x40b60b25]
  4080d2:	xchg   edx,eax
  4080d3:	mov    edi,0xc78989eb
  4080d8:	jnp    0x408101
  4080da:	push   edx
  4080db:	loop   0x40806a
  4080dd:	mov    edx,0x5f94136
  4080e2:	arpl   sp,ax
  4080e4:	xchg   ecx,eax
  4080e5:	stc    
  4080e6:	and    edx,ecx
  4080e8:	arpl   si,dx
  4080ea:	ins    DWORD PTR es:[edi],dx
  4080eb:	icebp  
  4080ec:	popf   
  4080ed:	fs in  al,dx
  4080ef:	sahf   
  4080f0:	and    al,0x58
  4080f2:	mov    esp,0x43ecde9b
  4080f7:	(bad)  
  4080f8:	push   ebx
  4080f9:	mov    al,ds:0x2b360fc2
  4080fe:	cli    
  4080ff:	xchg   ebp,eax
  408100:	es mov eax,0xf16f095d
  408106:	adc    al,0x37
  408108:	out    0x73,al
  40810a:	sbb    dl,BYTE PTR [eax-0x254db980]
  408110:	jmp    0xfa924f4e
  408115:	and    eax,0x7f9e9545
  40811a:	pop    ds
  40811b:	pop    ecx
  40811c:	xchg   esp,eax
  40811d:	and    edi,esp
  40811f:	xor    DWORD PTR [ecx],0xa
  408122:	(bad)  
  408123:	in     al,dx
  408124:	inc    ebp
  408125:	mov    al,ds:0xef59a235
  40812a:	mov    fs,WORD PTR [edi+esi*8+0x30]
  40812e:	xor    bh,BYTE PTR [esi]
  408130:	pop    esi
  408131:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408132:	in     al,0xe6
  408134:	xchg   DWORD PTR [edx+0x30],ebp
  408137:	cmp    al,0xce
  408139:	add    eax,DWORD PTR [ecx+ecx*4+0x5a7884e7]
  408140:	loope  0x4080cc
  408142:	ja     0x408126
  408144:	ror    cl,cl
  408146:	jb     0x408136
  408148:	lock sub eax,edx
  40814b:	add    DWORD PTR [edx+0xea8c441],0x23a26167
  408155:	jns    0x40819e
  408157:	jne    0x40814d
  408159:	jge    0x4080f7
  40815b:	je     0x408175
  40815d:	repnz hlt 
  40815f:	mov    ?,ebx
  408161:	aam    0x88
  408163:	adc    eax,0x95631a2d
  408168:	jno    0x40812d
  40816a:	popf   
  40816b:	mov    bl,BYTE PTR [ebp+0x685fa568]
  408171:	je     0xe4b9f1a6
  408177:	pop    ss
  408178:	xchg   BYTE PTR [edx-0x5b],bh
  40817b:	jg     0x4081ed
  40817d:	adc    edi,DWORD PTR [ebp+0x3c]
  408180:	jne    0x408197
  408182:	std    
  408183:	jbe    0x408203
  408185:	mov    eax,0x7f8ebe09
  40818a:	push   cs
  40818b:	hlt    
  40818c:	push   ecx
  40818d:	xor    ebx,edi
  40818f:	mov    edx,0x82985152
  408194:	sbb    al,0xcb
  408196:	imul   ebx,DWORD PTR [eax+0x48db953],0xfffffff2
  40819d:	addr16 shr edx,0xd4
  4081a1:	out    dx,eax
  4081a2:	addr16 mov dh,0x43
  4081a5:	(bad)  
  4081a6:	mov    ebx,0x6a5a3e4
  4081ab:	pusha  
  4081ac:	push   ebx
  4081ad:	mov    al,0x8f
  4081af:	imul   BYTE PTR [edi]
  4081b1:	sub    eax,esi
  4081b3:	pop    eax
  4081b4:	sub    BYTE PTR [ecx-0x230bbdae],cl
  4081ba:	jno    0x408233
  4081bc:	iret   
  4081bd:	popa   
  4081be:	iret   
  4081bf:	dec    esp
  4081c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081c1:	sbb    eax,0xddca8c47
  4081c6:	adc    edi,DWORD PTR [edi]
  4081c8:	inc    esp
  4081c9:	push   ebx
  4081ca:	int3   
  4081cb:	lods   al,BYTE PTR ds:[esi]
  4081cc:	nop
  4081cd:	aas    
  4081ce:	inc    ebx
  4081cf:	(bad)  
  4081d1:	je     0x40819e
  4081d3:	aam    0xa0
  4081d5:	xchg   ecx,edx
  4081d7:	fst    QWORD PTR [esp+ebp*1]
  4081da:	jno    0x4081fd
  4081dc:	xchg   ecx,eax
  4081dd:	aaa    
  4081de:	push   edi
  4081df:	int3   
  4081e0:	pop    es
  4081e1:	es adc eax,0xbf53ea94
  4081e7:	iret   
  4081e8:	push   es
  4081e9:	xor    al,0x8
  4081eb:	add    BYTE PTR [ebp-0x12f40632],bl
  4081f1:	mov    ds:0x6568339a,eax
  4081f6:	push   0xa
  4081f8:	jbe    0x408213
  4081fa:	loopne 0x40821d
  4081fc:	stc    
  4081fd:	xchg   ecx,eax
  4081fe:	stos   DWORD PTR es:[edi],eax
  4081ff:	cmp    al,0xb5
  408201:	in     al,0xba
  408203:	sub    ah,al
  408205:	aad    0xee
  408207:	(bad)  
  408208:	dec    ebp
  408209:	sahf   
  40820a:	mov    dl,0xba
  40820c:	xor    DWORD PTR [ebx+ebp*2-0x4c53d49a],esp
  408213:	push   ecx
  408214:	jecxz  0x4081bb
  408216:	adc    al,0xb3
  408219:	repnz mov al,es:0x423b27f9
  408220:	loop   0x4081ea
  408222:	push   esi
  408223:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408224:	jmp    0x4081c3
  408226:	sub    eax,0x88bef1e
  40822b:	push   0x2e9495b5
  408230:	cmp    BYTE PTR [ebx],ch
  408232:	pop    esp
  408233:	sbb    BYTE PTR [edx+ebx*4],bl
  408236:	pop    esp
  408237:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408238:	shl    cl,1
  40823a:	push   ebp
  40823b:	and    al,0xc0
  40823d:	cmp    BYTE PTR [ecx-0x69],ch
  408240:	cmp    ch,dh
  408242:	mov    WORD PTR [eax+ecx*8-0xe7f8a37],ss
  408249:	pop    ebp
  40824a:	repz sub BYTE PTR [ebx],ch
  40824d:	push   ebp
  40824e:	jp     0x408201
  408250:	aad    0x17
  408252:	xor    DWORD PTR [esi-0x313cc779],ebp
  408258:	pusha  
  408259:	sub    eax,0x435f98ed
  40825e:	mov    dl,0xf9
  408260:	das    
  408261:	jns    0x4082d9
  408263:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408264:	sbb    eax,0xa2345333
  408269:	sub    esp,esp
  40826b:	add    al,0xfc
  40826d:	jmp    0x4082df
  40826f:	sub    BYTE PTR [ecx+ebp*4],0xad
  408273:	out    dx,eax
  408274:	sbb    al,BYTE PTR [esi+0x42]
  408277:	or     al,0xb7
  408279:	push   esp
  40827a:	nop
  40827b:	mov    bl,0xcd
  40827d:	sub    BYTE PTR [eax],0x67
  408280:	(bad)  
  408282:	gs nop
  408284:	add    DWORD PTR [edi-0x3fe955ae],esp
  40828a:	pop    ds
  40828b:	ins    BYTE PTR es:[edi],dx
  40828c:	add    al,BYTE PTR [ebx-0x77]
  40828f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408290:	add    eax,0xccce0b5a
  408295:	add    ebp,DWORD PTR [edx-0x37]
  408298:	xchg   esp,eax
  408299:	fnstsw WORD PTR [eax+0x62]
  40829c:	mov    ch,0xe7
  40829e:	pop    ebp
  40829f:	sahf   
  4082a0:	test   al,0x2a
  4082a2:	jne    0x4082c8
  4082a4:	pop    ss
  4082a5:	(bad)  [ebx+0x2c]
  4082a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082a9:	sbb    al,0xde
  4082ab:	in     eax,dx
  4082ac:	and    al,0x9
  4082ae:	lods   eax,DWORD PTR ds:[esi]
  4082af:	call   0x621f51f4
  4082b4:	jecxz  0x408269
  4082b6:	push   es
  4082b7:	fwait
  4082b8:	sbb    ecx,DWORD PTR [esi+edi*4+0x7eb6d37f]
  4082bf:	jne    0x408294
  4082c1:	inc    edi
  4082c2:	inc    edi
  4082c3:	jae    0x40828e
  4082c5:	add    eax,edx
  4082c7:	cs (bad) 
  4082c9:	xlat   BYTE PTR ds:[ebx]
  4082ca:	and    BYTE PTR [ecx],cl
  4082cc:	pop    es
  4082cd:	rcr    DWORD PTR [edi-0x34],1
  4082d0:	lahf   
  4082d1:	add    ah,bl
  4082d3:	mov    edx,0xbd6ea1a0
  4082d8:	sbb    al,0x46
  4082da:	jl     0x4082a4
  4082dc:	mov    edi,0x6ae6df7b
  4082e1:	add    ah,ah
  4082e3:	retf   
  4082e4:	fsubr  DWORD PTR [esi+0x7]
  4082e7:	cmp    BYTE PTR [ebp+0x2b],bh
  4082ea:	in     al,0xa9
  4082ec:	jns    0x408354
  4082ee:	hlt    
  4082ef:	pop    es
  4082f0:	mov    DWORD PTR [ebx+eiz*1-0x24ddbeec],edi
  4082f7:	pop    edx
  4082f8:	jmp    0x4082eb
  4082fa:	lea    edi,[ecx]
  4082fc:	sub    DWORD PTR [edx+0x76f64d06],0xfb32ef4a
  408306:	retf   
  408307:	push   edx
  408308:	jmp    0x408353
  40830a:	jg     0x408303
  40830c:	mov    bl,0x28
  40830e:	dec    ebx
  40830f:	xchg   DWORD PTR ds:0xf10850d4,ebx
  408315:	addr16 cwde 
  408317:	sub    eax,0x91bf0634
  40831c:	cli    
  40831d:	xor    eax,0x870d4099
  408322:	push   ecx
  408323:	xor    BYTE PTR [edi-0x6f676e8],ah
  408329:	ret    
  40832a:	not    BYTE PTR [ebx+0x2b5988fc]
  408330:	stc    
  408331:	clc    
  408332:	mov    al,ds:0x4fd8427d
  408337:	push   ss
  408338:	ds pop ss
  40833a:	adc    al,0x4b
  40833c:	scas   eax,DWORD PTR es:[edi]
  40833d:	stos   DWORD PTR es:[edi],eax
  40833e:	data16 cli 
  408340:	dec    ebx
  408341:	ins    DWORD PTR es:[edi],dx
  408342:	loopne 0x4082ea
  408344:	mov    esi,0x1725a2c8
  408349:	sti    
  40834a:	(bad)  
  40834b:	mov    esi,0x9f353118
  408350:	(bad)  [ebx+0x7a]
  408353:	das    
  408354:	sbb    BYTE PTR [ebx],cl
  408356:	xor    DWORD PTR [ebp+0x10f045c0],edi
  40835c:	mov    dl,0xc1
  40835e:	jb     0x4082e3
  408360:	in     eax,0x94
  408362:	stc    
  408363:	dec    esp
  408364:	jge    0x40837f
  408366:	and    DWORD PTR [bp+si+0x4c],esp
  40836a:	dec    esi
  40836b:	jbe    0x408380
  40836d:	ja     0x408329
  40836f:	call   0x55d6:0x2b04f3da
  408376:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408377:	mov    cs,WORD PTR [edx]
  408379:	dec    eax
  40837a:	pop    ebp
  40837b:	sti    
  40837c:	jp     0x408368
  40837e:	nop
  40837f:	fsubr  QWORD PTR [esi+0x4e]
  408382:	sbb    BYTE PTR [esi],ch
  408384:	(bad)  
  408385:	jbe    0x40833b
  408387:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408388:	cmp    DWORD PTR [edi],eax
  40838a:	sbb    ch,BYTE PTR [ecx-0x4d]
  40838d:	or     ebp,DWORD PTR [edx+0x28]
  408390:	hlt    
  408391:	fadd   DWORD PTR [esi]
  408393:	int    0xb5
  408395:	pop    eax
  408396:	mul    BYTE PTR [eax+eax*4]
  408399:	add    BYTE PTR [ebx+0x63],ah
  40839c:	adc    BYTE PTR [edx+0x71],0x5c
  4083a0:	push   edx
  4083a1:	jmp    0x4fce3e8f
  4083a6:	adc    edx,DWORD PTR ds:0x4d5313a4
  4083ac:	push   ebx
  4083ad:	fist   DWORD PTR gs:[eax-0x5db74167]
  4083b4:	icebp  
  4083b5:	jns    0x408371
  4083b7:	dec    ebx
  4083b8:	enter  0x355c,0x84
  4083bc:	scas   al,BYTE PTR es:[edi]
  4083bd:	loopne 0x408401
  4083bf:	jl     0x408408
  4083c1:	test   eax,0xbaec088
  4083c6:	int    0xdd
  4083c8:	in     eax,0xa8
  4083ca:	ss and al,0x69
  4083cd:	jge    0x4083ca
  4083cf:	dec    edi
  4083d0:	jb     0x408409
  4083d2:	pop    edx
  4083d4:	loopne 0x408370
  4083d6:	mov    ds:0xc26b0963,eax
  4083db:	and    eax,0x7e3a11b4
  4083e0:	jp     0x408417
  4083e2:	dec    edi
  4083e3:	pop    ebp
  4083e4:	jnp    0x4083f3
  4083e6:	in     eax,0x2e
  4083e8:	jmp    0x40b4f763
  4083ed:	mov    ebp,0xc55f26cf
  4083f2:	sbb    BYTE PTR [ecx-0x47],0x7a
  4083f6:	jae    0x4083c9
  4083f8:	fwait
  4083f9:	imul   esp,DWORD PTR [esp+eax*1],0x21
  4083fd:	sahf   
  4083fe:	mul    DWORD PTR [bp+di+0x7ab0]
  408403:	jg     0x4083ac
  408405:	fstp   QWORD PTR [ebx-0x33]
  408408:	and    al,0xfd
  40840a:	ret    0xfa52
  40840d:	xlat   BYTE PTR ds:[ebx]
  40840e:	int3   
  40840f:	or     BYTE PTR [esi+0x340057a2],al
  408415:	inc    ebp
  408416:	adc    al,0xa7
  408418:	and    bh,BYTE PTR ds:0xcda52c12
  40841e:	in     al,0xf8
  408420:	lods   eax,DWORD PTR ds:[esi]
  408421:	addr16 enter 0x6785,0xba
  408426:	dec    esp
  408427:	lahf   
  408428:	or     DWORD PTR [edx+0x48a218a],0x938b3252
  408432:	adc    DWORD PTR ds:0xb66940ed,ecx
  408438:	scas   al,BYTE PTR es:[edi]
  408439:	dec    ebx
  40843a:	xor    eax,0x5fa5a705
  40843f:	jmp    0xc246:0xf2bf6269
  408446:	pop    ebx
  408447:	sub    DWORD PTR [esi+ecx*4+0x36],0x1f
  40844c:	mov    ds:0x625936df,eax
  408451:	xchg   ecx,eax
  408452:	aad    0x57
  408454:	or     BYTE PTR [edx+0x76959281],ch
  40845a:	inc    esi
  40845b:	jb     0x408480
  40845d:	jmp    0x9e2398c8
  408462:	xor    ebx,DWORD PTR cs:[eax+esi*1]
  408466:	mov    WORD PTR [eax+esi*8-0x6df3938f],es
  40846d:	add    dh,BYTE PTR [ebp-0x63]
  408470:	mov    ah,0xe0
  408472:	mov    eax,0xcce378c6
  408477:	mov    eax,0x623b3a05
  40847c:	sbb    eax,0x32874387
  408481:	push   edi
  408482:	mov    ebp,0xda2c6538
  408487:	jbe    0x4084e7
  408489:	add    BYTE PTR [edi],0xab
  40848c:	pushf  
  40848d:	(bad)  
  40848e:	fwait
  40848f:	arpl   WORD PTR [eax+0x37],si
  408492:	or     BYTE PTR [edx-0x72],cl
  408495:	ret    
  408496:	das    
  408497:	outs   dx,DWORD PTR ds:[esi]
  408498:	mov    edi,ds
  40849a:	jle    0x4084b8
  40849c:	cs inc esp
  40849e:	test   ecx,esp
  4084a0:	lahf   
  4084a1:	mov    al,ds:0xdd9d0ddf
  4084a6:	outs   dx,BYTE PTR ds:[esi]
  4084a7:	pop    esi
  4084a8:	scas   eax,DWORD PTR es:[edi]
  4084a9:	xor    eax,0x791df016
  4084ae:	sub    ah,BYTE PTR [ebx+0x3ab20644]
  4084b4:	enter  0x378c,0xb6
  4084b8:	push   0x74dff64d
  4084bd:	ins    BYTE PTR es:[edi],dx
  4084be:	aaa    
  4084bf:	cmp    BYTE PTR [esi+0x1f],ah
  4084c2:	inc    edi
  4084c3:	fild   QWORD PTR [eax]
  4084c5:	add    eax,0xa50e236e
  4084ca:	mov    edi,0xd7c6a9e9
  4084cf:	add    DWORD PTR [edi-0x60],edi
  4084d2:	test   al,0xde
  4084d4:	xor    DWORD PTR [edx-0x91d44bc],ebx
  4084da:	jne    0x408543
  4084dc:	lods   al,BYTE PTR ds:[esi]
  4084dd:	lock push edx
  4084df:	add    ch,dh
  4084e1:	jno    0x40853f
  4084e3:	(bad)  
  4084e4:	and    eax,0x38065f3b
  4084e9:	test   DWORD PTR [esp+esi*1-0x26],edi
  4084ed:	retf   
  4084ee:	mov    bh,0x9c
  4084f0:	mov    bl,0xfb
  4084f2:	sahf   
  4084f3:	add    eax,0xf5b9115b
  4084f8:	icebp  
  4084f9:	sub    ah,BYTE PTR [ecx+0x73eb2b34]
  4084ff:	inc    ebx
  408500:	lods   al,BYTE PTR ds:[esi]
  408501:	xor    eax,0xb6299adb
  408506:	cli    
  408507:	xor    esi,DWORD PTR [ecx-0x29c30e3c]
  40850d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40850e:	mov    bl,0x46
  408510:	cmp    esp,DWORD PTR [edx+0x4d09d96b]
  408516:	jg     0x4084c3
  408518:	push   eax
  408519:	mov    edx,0x6d394b2c
  40851e:	cld    
  40851f:	mov    ds:0x4e8f22ad,eax
  408524:	mov    bl,0x45
  408526:	jle    0x4084cd
  408528:	mov    DWORD PTR [edi],eax
  40852a:	mov    eax,ds:0xd152085c
  40852f:	sub    eax,0x371c8f6c
  408534:	leave  
  408535:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408536:	scas   eax,DWORD PTR es:[edi]
  408537:	mov    ch,0x66
  408539:	mov    ds:0xa2becb5f,eax
  40853e:	rcr    BYTE PTR [esi+0x5166b283],1
  408544:	out    dx,eax
  408545:	inc    esp
  408546:	mov    al,0x2b
  408548:	enter  0x6292,0x14
  40854c:	out    dx,eax
  40854d:	add    BYTE PTR [esi+esi*2],ch
  408550:	jmp    0x2ce0:0xa25bba9f
  408557:	dec    edx
  408558:	scas   al,BYTE PTR es:[edi]
  408559:	aas    
  40855a:	enter  0xab87,0x2b
  40855e:	int3   
  40855f:	adc    dh,BYTE PTR [eax]
  408561:	xor    DWORD PTR [eax+0x21],edx
  408564:	jns    0x408521
  408566:	ds pop es
  408568:	(bad)  
  408569:	arpl   WORD PTR [ecx],sp
  40856b:	cmp    eax,0xf17c1310
  408570:	push   cs
  408571:	(bad)  
  408572:	adc    BYTE PTR [ebp-0x21],cl
  408575:	sbb    eax,0xb15d53e8
  40857a:	(bad)  
  40857c:	inc    ebx
  40857d:	or     ebx,esi
  40857f:	(bad)  
  408580:	adc    DWORD PTR [esi],esp
  408582:	add    bl,BYTE PTR [edx-0x46]
  408585:	(bad)  
  408586:	cmp    ch,BYTE PTR [esi-0x5ab4929a]
  40858c:	jle    0x40860a
  40858e:	mov    esp,0x2a99e7cb
  408593:	xchg   BYTE PTR [edi+0x2d],dl
  408596:	xor    eax,0xc6332e8f
  40859c:	gs xor eax,0xda7dc651
  4085a2:	jl     0x408533
  4085a4:	push   ecx
  4085a5:	mov    eax,0xef0e7878
  4085aa:	add    ebp,DWORD PTR [edi-0x60]
  4085ad:	retf   0x9084
  4085b0:	push   edi
  4085b1:	cs aad 0x82
  4085b4:	cmp    al,0x64
  4085b6:	inc    edi
  4085b7:	cli    
  4085b8:	repz pop ds
  4085ba:	pop    ebp
  4085bb:	in     eax,0xc2
  4085bd:	or     BYTE PTR [esi-0x3bd597ea],ch
  4085c3:	scas   al,BYTE PTR es:[edi]
  4085c4:	push   cs
  4085c5:	pop    edi
  4085c6:	imul   ecx,DWORD PTR [ebx+0x982f5a4],0xffffffcf
  4085cd:	pop    eax
  4085ce:	mov    eax,0xe2affd01
  4085d3:	pmulhuw mm0,QWORD PTR [ecx]
  4085d6:	xor    DWORD PTR [edx+edi*4],0xd2c1f965
  4085dd:	inc    esi
  4085de:	pop    eax
  4085df:	fistp  WORD PTR [esi-0x3689c3e8]
  4085e5:	mov    ss,WORD PTR [eax-0x1610d6ec]
  4085eb:	clc    
  4085ec:	xor    al,0x6d
  4085ee:	mov    cs,WORD PTR [ebp+0x7b79274b]
  4085f4:	xchg   ebp,eax
  4085f5:	enter  0x5ac4,0xc8
  4085f9:	mov    al,0x17
  4085fb:	inc    ebx
  4085fc:	dec    ebx
  4085fd:	pop    ss
  4085fe:	ror    BYTE PTR fs:[esi+0x6c4eebdb],1
  408605:	ins    DWORD PTR es:[edi],dx
  408606:	mov    dl,BYTE PTR [esi+ebp*2]
  408609:	rcl    DWORD PTR [ebp+0x2efca6a6],cl
  40860f:	cmp    al,0x53
  408611:	mul    BYTE PTR [ecx-0x66]
  408614:	dec    esp
  408615:	jmp    0x7339:0x13906137
  40861c:	cdq    
  40861d:	push   eax
  40861e:	mov    ds:0x80e1ef3,eax
  408623:	mov    edx,0xb7e37491
  408628:	jb     0x4085bb
  40862a:	popf   
  40862b:	icebp  
  40862c:	mov    cl,0xaf
  40862e:	test   al,0xfe
  408630:	loope  0x40865a
  408632:	retf   
  408633:	aaa    
  408634:	jo     0x408620
  408636:	push   0xfffffff9
  408638:	xchg   edx,eax
  408639:	pop    ebp
  40863a:	(bad)  
  40863b:	and    eax,0x66b4bf1e
  408640:	dec    edx
  408641:	jmp    ebx
  408643:	add    eax,0xbdaee5ec
  408648:	mov    WORD PTR [esi],gs
  40864a:	cwde   
  40864b:	push   cs
  40864c:	loop   0x4085f0
  40864e:	sbb    dl,bl
  408650:	pop    eax
  408651:	lods   eax,DWORD PTR ds:[esi]
  408652:	cwde   
  408653:	lea    ecx,[ebx]
  408655:	xchg   edx,eax
  408656:	push   ecx
  408657:	lock dec edi
  408659:	jge    0x408658
  40865b:	test   DWORD PTR [ebp-0x65206dbe],eax
  408661:	cmp    DWORD PTR [edi+0x5f0af5cd],0x35
  408668:	dec    edx
  408669:	gs loop 0x4086c8
  40866c:	leave  
  40866d:	mov    DWORD PTR [esi-0x1829e749],edx
  408673:	iret   
  408674:	mov    edx,DWORD PTR [edx+eax*4]
  408677:	or     DWORD PTR [esi+0x5553f898],edi
  40867d:	and    eax,0x273e92d8
  408682:	jnp    0x4086dc
  408684:	push   ds
  408685:	or     BYTE PTR [ecx-0x13],ah
  408688:	test   eax,0x4568fd26
  40868d:	shl    cl,0x9b
  408690:	mov    al,0x8a
  408692:	jne    0x408670
  408694:	mov    ebx,0x652d74b6
  408699:	add    al,0x92
  40869b:	pop    ebp
  40869c:	clc    
  40869d:	sub    DWORD PTR [ecx-0x1e],esi
  4086a0:	cmp    BYTE PTR [edx],0x42
  4086a3:	lea    ecx,[edi+ecx*8-0x54]
  4086a7:	dec    ebp
  4086a8:	mov    edi,0x45830b65
  4086ad:	adc    eax,0xa4b8ccce
  4086b2:	fwait
  4086b3:	lods   al,BYTE PTR ds:[esi]
  4086b4:	cmp    eax,0xc51c2cee
  4086b9:	push   0xffffff88
  4086bb:	add    DWORD PTR [edi-0x5ac8e667],esi
  4086c1:	jl     0x4086bf
  4086c3:	mov    bl,0xd
  4086c5:	xor    al,0x2a
  4086c7:	and    DWORD PTR [esi-0x1e962658],ebp
  4086cd:	xor    BYTE PTR [ebp+0x2f1600d3],cl
  4086d3:	sbb    eax,DWORD PTR [ecx-0x368ba66f]
  4086d9:	inc    ebp
  4086da:	scas   eax,DWORD PTR es:[edi]
  4086db:	arpl   dx,bx
  4086dd:	jmp    edi
  4086df:	xchg   ebp,eax
  4086e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086e2:	pop    ss
  4086e3:	bound  ecx,QWORD PTR [ebp-0x6bc0d5aa]
  4086e9:	sbb    al,0x7a
  4086eb:	popf   
  4086ec:	ret    0x81e4
  4086ef:	pop    esi
  4086f0:	add    eax,edx
  4086f2:	mov    WORD PTR [edx+esi*4+0x409f2b4e],gs
  4086f9:	mov    dh,0x62
  4086fb:	das    
  4086fc:	push   ecx
  4086fd:	mov    esi,ds
  4086ff:	dec    edi
  408700:	rcl    BYTE PTR [esi+0x5d499f02],cl
  408706:	mov    al,0x3b
  408708:	fistp  DWORD PTR [ecx-0x40]
  40870b:	pop    esi
  40870c:	icebp  
  40870d:	je     0x408712
  40870f:	xchg   ecx,eax
  408710:	xor    eax,0x49695fdd
  408715:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408716:	popf   
  408717:	cwde   
  408718:	outs   dx,DWORD PTR ds:[esi]
  408719:	js     0x4086a2
  40871b:	jae    0x4086ae
  40871d:	jbe    0x4086c3
  40871f:	mov    ebp,0x71e16383
  408724:	jb     0x4086f0
  408726:	pushf  
  408727:	in     eax,0x59
  408729:	cwde   
  40872a:	imul   ebp,DWORD PTR ds:0x61f5b92d,0x6e47f96b
  408734:	push   cx
  408736:	lds    edx,FWORD PTR [edx]
  408738:	xor    al,0x95
  40873a:	push   ebp
  40873b:	sbb    eax,0xa5d0c434
  408740:	jl     0x4086d6
  408742:	test   BYTE PTR [eax-0x5b],dh
  408745:	leave  
  408746:	pop    ss
  408747:	xor    ebx,DWORD PTR [ebx+eax*1]
  40874a:	mov    ds:0xf792f167,al
  40874f:	ds out dx,eax
  408751:	and    al,0xd3
  408753:	out    0xa4,eax
  408755:	or     al,0x9d
  408757:	mov    ebx,0x74729269
  40875c:	adc    DWORD PTR [ecx-0x62],0x750f838e
  408763:	hlt    
  408764:	cmp    eax,ecx
  408766:	push   es
  408767:	pop    ebp
  408768:	imul   eax,ecx,0x550e5fd2
  40876e:	in     eax,dx
  40876f:	bound  eax,QWORD PTR [eax+0x69d2239c]
  408775:	inc    edi
  408776:	jo     0x4087e2
  408778:	sbb    edi,esp
  40877a:	aam    0x7b
  40877c:	(bad)  
  40877d:	pop    esi
  40877e:	ds retfw 
  408781:	cmp    al,0xfc
  408783:	cmp    ecx,edx
  408785:	and    BYTE PTR [ebx-0x15eb1ea1],bh
  40878b:	(bad)  
  40878c:	mov    ds:0x22d20f9d,eax
  408791:	ret    0x9679
  408794:	pop    eax
  408795:	add    eax,0x28edc928
  40879a:	xchg   ebp,eax
  40879b:	jp     0x4087af
  40879d:	(bad)  
  40879e:	aad    0xe7
  4087a0:	mov    ds:0x387a71f5,al
  4087a5:	push   ss
  4087a6:	mov    ah,0x23
  4087a8:	add    BYTE PTR [edi],bl
  4087aa:	mov    BYTE PTR [edi-0x4],dh
  4087ad:	stos   BYTE PTR es:[edi],al
  4087ae:	cmp    esi,0xbb175fa5
  4087b4:	and    esi,DWORD PTR [ebp-0x13ad7ea6]
  4087ba:	sbb    bh,BYTE PTR [edx+0x4bcb8260]
  4087c0:	jo     0x4087fc
  4087c2:	jmp    0xcc7:0x4c39a5e4
  4087c9:	sub    bh,BYTE PTR ss:[ecx+0x21e44f2d]
  4087d0:	push   cs
  4087d1:	ss add eax,0x538b7127
  4087d7:	fnsave [eax-0x4f77822e]
  4087dd:	push   ecx
  4087de:	cmp    eax,0xb2e40592
  4087e3:	test   BYTE PTR [ebp-0x38],0x8d
  4087e7:	inc    ebp
  4087e8:	into   
  4087e9:	ret    0x82d7
  4087ec:	arpl   ax,ax
  4087ee:	adc    al,0x88
  4087f0:	jecxz  0x408829
  4087f2:	jge    0x4087c9
  4087f4:	and    eax,0x3ecedab1
  4087f9:	pop    ecx
  4087fa:	fadd   st,st(5)
  4087fc:	mov    ds,WORD PTR [eax]
  4087fe:	adc    BYTE PTR [edx],bh
  408800:	les    esi,FWORD PTR cs:[eax+esi*2+0x4a9c1221]
  408808:	push   esp
  408809:	or     DWORD PTR [ecx],edx
  40880b:	pop    edi
  40880c:	(bad)  [ebp-0x1e163ef0]
  408812:	add    DWORD PTR [ebx+0x61],0x76
  408816:	pusha  
  408817:	sbb    BYTE PTR [edi+0x42],cl
  40881a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40881b:	jle    0x4087ed
  40881d:	inc    ecx
  40881e:	xor    BYTE PTR [esi+0x28],bh
  408821:	clc    
  408822:	(bad)  
  408824:	jg     0x408830
  408826:	mov    edx,0xf6d1203b
  40882b:	imul   dl
  40882d:	nop
  40882e:	dec    eax
  40882f:	xchg   esp,eax
  408830:	mov    ah,BYTE PTR [esi+0x6b1e6fa2]
  408836:	fcomp  QWORD PTR [edx]
  408838:	sbb    DWORD PTR [ecx-0x503790f7],esp
  40883e:	test   BYTE PTR [edx+0x32],0xd6
  408842:	sbb    DWORD PTR [edi+0x1e],0x27c7c28e
  408849:	cli    
  40884a:	mov    edx,0xc6cc0599
  40884f:	in     eax,dx
  408850:	aam    0xdc
  408852:	mov    ebp,0x94b7f34b
  408857:	cli    
  408858:	push   edx
  408859:	adc    dh,bh
  40885b:	jo     0x40889d
  40885d:	inc    ebp
  40885e:	in     al,0x42
  408860:	loop   0x4088dc
  408862:	aaa    
  408863:	sar    BYTE PTR [ecx],cl
  408865:	sub    ah,BYTE PTR [edi+edi*8+0x78]
  408869:	pop    ss
  40886a:	pop    es
  40886b:	sub    bl,BYTE PTR [ebx]
  40886d:	fdivrp st(4),st
  40886f:	mov    ds,ecx
  408871:	or     edx,DWORD PTR [ebp+0x4869bec0]
  408877:	add    BYTE PTR [ecx-0x7e4dc3fa],dl
  40887d:	fs pusha 
  40887f:	and    DWORD PTR [ecx+0x667b4203],ecx
  408885:	mov    eax,ds:0xf78e248b
  40888a:	cld    
  40888b:	sahf   
  40888c:	xchg   ebp,eax
  40888d:	fwait
  40888e:	xchg   esp,eax
  40888f:	xor    eax,0x7811aa6
  408894:	shr    DWORD PTR [ebp-0x1468b316],cl
  40889a:	jge    0x4088dd
  40889c:	stos   BYTE PTR es:[edi],al
  40889d:	sub    ebp,esp
  40889f:	call   0xc52bcca9
  4088a4:	cmp    DWORD PTR [esi+0x31],edx
  4088a7:	mov    al,ds:0xd5240292
  4088ac:	adc    BYTE PTR [eax-0x1189f56c],dh
  4088b2:	mov    bh,0x8b
  4088b4:	retf   
  4088b5:	scas   al,BYTE PTR es:[edi]
  4088b6:	retf   
  4088b7:	add    al,0x6c
  4088b9:	jg     0x2dfae110
  4088bf:	popa   
  4088c0:	rol    edi,0x8
  4088c3:	mov    ebx,0x7926f93c
  4088c8:	popf   
  4088c9:	pop    edi
  4088ca:	mov    cl,0x38
  4088cc:	pop    ds
  4088cd:	addr16 inc eax
  4088cf:	aam    0xdb
  4088d1:	mov    esp,0x5bb37681
  4088d6:	cmp    al,0x9a
  4088d8:	sbb    BYTE PTR [eax],cl
  4088da:	(bad)  
  4088db:	adc    al,0x5f
  4088dd:	stos   BYTE PTR es:[edi],al
  4088de:	test   BYTE PTR [edi+edi*2],dh
  4088e1:	out    0x9d,al
  4088e3:	gs lahf 
  4088e5:	sbb    eax,DWORD PTR [esi+0x8615125]
  4088eb:	xchg   ebp,eax
  4088ec:	adc    eax,0xa390acd2
  4088f1:	popf   
  4088f2:	fstp   TBYTE PTR [edi+0x64]
  4088f5:	mov    ds:0xedaa0fe7,al
  4088fa:	pop    es
  4088fb:	call   0x921c:0xcb038593
  408902:	sbb    ch,ch
  408904:	mov    DWORD PTR [eax+eax*4],ebp
  408907:	test   dh,ah
  408909:	adc    eax,0xbf42a911
  40890e:	js     0x4088fd
  408910:	sbb    eax,DWORD PTR [ebx+0x2]
  408913:	loope  0x40895f
  408915:	pushf  
  408916:	test   al,0xa
  408918:	add    ebx,ebp
  40891a:	cmp    al,BYTE PTR [edx-0x48]
  40891d:	xchg   DWORD PTR [esp+ebp*2],ebp
  408920:	dec    ebp
  408921:	sub    eax,0xc92f8e9e
  408926:	loop   0x4088dc
  408928:	xchg   edx,eax
  408929:	pop    esi
  40892a:	push   eax
  40892b:	xlat   BYTE PTR ds:[ebx]
  40892c:	lock cwde 
  40892e:	dec    esp
  40892f:	jg     0x4088c5
  408931:	mov    esp,0xf83efb7f
  408936:	mov    edi,ecx
  408938:	dec    ebp
  408939:	data16 js 0x408960
  40893c:	or     BYTE PTR [ebx],bl
  40893e:	xor    al,0xac
  408940:	das    
  408941:	xchg   ebp,eax
  408942:	in     eax,dx
  408943:	pop    ebp
  408944:	mov    esp,0xeac027df
  408949:	in     al,0x7c
  40894b:	or     eax,edx
  40894d:	out    0x5,al
  40894f:	(bad)  
  408950:	jmp    0x7eb6:0x3136d2da
  408957:	add    cl,dh
  408959:	ins    DWORD PTR es:[edi],dx
  40895a:	ins    BYTE PTR es:[edi],dx
  40895b:	inc    edx
  40895c:	shr    BYTE PTR [ebp+0x7554ed47],0xc9
  408963:	retf   0x5b05
  408966:	mov    esp,0xd06c84a
  40896b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40896c:	inc    ebx
  40896d:	imul   ebx,DWORD PTR [edi],0x7
  408970:	xor    bl,ah
  408972:	jecxz  0x408989
  408974:	add    al,0x1c
  408976:	push   cs
  408977:	xor    BYTE PTR [esi+0x483c076d],bl
  40897d:	int3   
  40897e:	or     DWORD PTR [ebx],esi
  408980:	(bad)  
  408981:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408982:	or     al,0xb1
  408984:	fnstsw WORD PTR [edi]
  408986:	int    0xfc
  408988:	jo     0x408981
  40898a:	pop    ebp
  40898b:	xchg   edi,eax
  40898c:	mov    eax,ds:0xe5a5881e
  408991:	add    al,0x3c
  408993:	fild   DWORD PTR [edi-0xd]
  408996:	call   FWORD PTR [eax]
  408998:	dec    esp
  408999:	rcr    bh,1
  40899b:	or     DWORD PTR [edx],ecx
  40899d:	mov    esi,0xf6282358
  4089a2:	popf   
  4089a3:	pslld  mm5,mm0
  4089a6:	xchg   BYTE PTR [ebx-0x76],dl
  4089a9:	inc    edi
  4089aa:	sub    esi,edx
  4089ac:	mov    edi,esp
  4089ae:	mov    ds:0x9faf0433,eax
  4089b3:	loopne 0x408963
  4089b5:	pop    ds
  4089b6:	push   esi
  4089b7:	mov    esp,0xd95bb528
  4089bc:	shr    BYTE PTR [eax],0x5b
  4089bf:	or     dh,bh
  4089c1:	out    0xe6,al
  4089c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089c4:	jnp    0x408950
  4089c6:	pusha  
  4089c7:	push   eax
  4089c8:	(bad)  
  4089c9:	outs   dx,BYTE PTR ds:[esi]
  4089ca:	mov    ebx,0xa60a3143
  4089cf:	xchg   edx,eax
  4089d0:	popf   
  4089d1:	neg    BYTE PTR [ebx]
  4089d3:	add    al,0x96
  4089d5:	xchg   edi,eax
  4089d6:	dec    edx
  4089d7:	adc    DWORD PTR [ebx],esp
  4089d9:	sub    al,0xd6
  4089dc:	arpl   WORD PTR [ebx+0x3],di
  4089df:	cdq    
  4089e0:	add    ebp,edi
  4089e2:	push   0xffffffa3
  4089e4:	push   esp
  4089e5:	cmp    esp,DWORD PTR ds:0x753025b5
  4089eb:	dec    esp
  4089ec:	iret   
  4089ed:	outs   dx,BYTE PTR ds:[esi]
  4089ee:	lods   al,BYTE PTR ds:[esi]
  4089ef:	jg     0x4089d8
  4089f1:	jnp    0x408979
  4089f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089f4:	inc    esi
  4089f5:	ss adc eax,0x7773dd1a
  4089fb:	pushf  
  4089fc:	inc    ebp
  4089fd:	retf   
  4089fe:	int    0xb2
  408a00:	cld    
  408a01:	cmp    ch,dh
  408a03:	outs   dx,BYTE PTR ds:[esi]
  408a04:	ds (bad) 
  408a06:	mov    ebx,0xbaa9e95a
  408a0b:	mov    eax,0x5dd2717e
  408a10:	cld    
  408a11:	cmc    
  408a12:	dec    edi
  408a13:	shl    cl,cl
  408a15:	pop    ecx
  408a16:	iret   
  408a17:	add    DWORD PTR [edx+eiz*8],edi
  408a1a:	cmp    al,0xab
  408a1c:	inc    ebx
  408a1d:	(bad)  
  408a1e:	sub    eax,0x7a7f9ffc
  408a23:	out    dx,eax
  408a24:	retf   
  408a25:	in     eax,dx
  408a26:	in     al,0x5e
  408a28:	test   eax,0xe83dacf3
  408a2d:	push   edx
  408a2e:	cli    
  408a2f:	or     ah,BYTE PTR [esi+0x4]
  408a32:	iret   
  408a33:	and    esi,edi
  408a35:	push   0xb20f58d
  408a3a:	pusha  
  408a3b:	dec    dh
  408a3d:	xor    BYTE PTR [ecx],0x2a
  408a40:	ror    BYTE PTR es:[esi+0x30c7f978],cl
  408a47:	xor    al,0xc3
  408a49:	out    0x21,eax
  408a4b:	add    dl,cl
  408a4d:	xchg   esi,eax
  408a4e:	cwde   
  408a4f:	pop    edi
  408a50:	xor    al,0x7b
  408a52:	xor    DWORD PTR [edx-0x4b],ebx
  408a55:	push   0x64
  408a57:	jo     0x408a11
  408a59:	adc    eax,0x772dd4cf
  408a5e:	addr16 (bad) 
  408a60:	mov    al,ds:0xb51bf153
  408a65:	fisub  WORD PTR [esi]
  408a67:	ret    0x778e
  408a6a:	outs   dx,DWORD PTR ds:[esi]
  408a6b:	test   al,0x20
  408a6d:	in     al,dx
  408a6e:	or     BYTE PTR [ecx-0x29532c80],bl
  408a74:	loopne 0x408a33
  408a76:	lds    edi,FWORD PTR [esp+esi*2]
  408a79:	cmp    al,0xfc
  408a7b:	add    dl,al
  408a7d:	adc    eax,0x68613a
  408a82:	imul   eax,DWORD PTR [ecx],0x70
  408a85:	cmc    
  408a86:	jg     0x408a64
  408a88:	inc    edi
  408a89:	dec    edx
  408a8a:	jae    0x408a59
  408a8c:	push   es
  408a8d:	and    eax,0x1544d980
  408a92:	leave  
  408a93:	mov    esi,0x704a2177
  408a98:	es call 0xa08859cb
  408a9e:	enter  0x98d3,0x2d
  408aa2:	mov    bl,0xde
  408aa4:	(bad)  
  408aa5:	leave  
  408aa6:	shr    DWORD PTR [esi],1
  408aa8:	stos   DWORD PTR es:[edi],eax
  408aa9:	mov    ah,dl
  408aab:	push   cs
  408aac:	ret    
  408aad:	pop    es
  408aae:	arpl   si,sp
  408ab0:	xchg   ebp,eax
  408ab1:	jle    0x408a56
  408ab3:	shl    BYTE PTR [edx+0x6b],cl
  408ab6:	les    eax,FWORD PTR [esi]
  408ab8:	repz sbb eax,0xafd27cbd
  408abe:	xor    DWORD PTR [ebp+0x5ed21aa8],edx
  408ac4:	and    ch,BYTE PTR [ebx-0x77]
  408ac7:	jnp    0x408b04
  408ac9:	xor    ebp,DWORD PTR [ecx-0x5a]
  408acc:	and    BYTE PTR [edi+0x38],bl
  408acf:	arpl   WORD PTR [edx-0x4344a920],di
  408ad5:	push   edi
  408ad6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ad7:	jnp    0x408b46
  408ad9:	test   DWORD PTR [edi],edi
  408adb:	inc    edx
  408adc:	fisubr WORD PTR [esp+ecx*8]
  408adf:	and    eax,0x35003f65
  408ae4:	ins    DWORD PTR es:[edi],dx
  408ae5:	es scas eax,DWORD PTR es:[edi]
  408ae7:	adc    dl,al
  408ae9:	push   ebx
  408aea:	xchg   ebp,eax
  408aeb:	dec    esi
  408aec:	xchg   edx,eax
  408aed:	pop    ss
  408aee:	sbb    dl,al
  408af0:	push   ds
  408af1:	fist   DWORD PTR [ecx-0x4d48e516]
  408af7:	cwde   
  408af8:	fisttp DWORD PTR [ebx-0x5d]
  408afb:	adc    DWORD PTR [edi*8-0x13984db7],ecx
  408b02:	loope  0x408ab3
  408b04:	sar    BYTE PTR [ebx-0x2],0xea
  408b08:	sbb    DWORD PTR [edi+0x37],edx
  408b0b:	out    dx,eax
  408b0c:	or     DWORD PTR [edx-0x2cc67aba],0x29
  408b13:	ja     0x408aa9
  408b15:	pop    eax
  408b16:	inc    ecx
  408b17:	push   es
  408b18:	outs   dx,DWORD PTR ds:[esi]
  408b19:	jp     0x408ac7
  408b1b:	dec    eax
  408b1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b1d:	inc    edi
  408b1e:	or     edi,DWORD PTR ds:0x37efe154
  408b24:	adc    BYTE PTR [edi-0xe84f2cd],ah
  408b2a:	mov    eax,0xc6ed2b7d
  408b2f:	jge    0x408b59
  408b31:	add    BYTE PTR [edi-0x25],dh
  408b34:	cmp    al,0x55
  408b36:	jp     0x408b37
  408b38:	pop    edx
  408b39:	sbb    al,BYTE PTR [ecx-0x1b]
  408b3c:	stc    
  408b3d:	add    esp,ecx
  408b3f:	xor    BYTE PTR [ebx+edi*4],0x91
  408b43:	fs and DWORD PTR fs:[eax-0x27671072],edi
  408b4b:	inc    esi
  408b4c:	xor    BYTE PTR [eax-0x4d],dl
  408b4f:	in     al,0x2f
  408b51:	daa    
  408b52:	push   ebp
  408b53:	xor    BYTE PTR [esi-0x60],dl
  408b56:	dec    edx
  408b57:	leave  
  408b58:	test   DWORD PTR [ebp-0x1864ade9],edx
  408b5e:	loope  0x408b81
  408b60:	mov    ds:0x6b41701,al
  408b65:	mov    esp,0xa7998ff2
  408b6a:	jecxz  0x408b11
  408b6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b6d:	loop   0x408b3f
  408b6f:	(bad)  
  408b70:	mov    cl,0xb1
  408b72:	and    bh,ah
  408b74:	ins    DWORD PTR es:[edi],dx
  408b75:	call   0x8f0e:0x94eb0039
  408b7c:	add    esp,DWORD PTR [ebx+0x24]
  408b7f:	aaa    
  408b80:	pop    ds
  408b81:	cmp    DWORD PTR [ecx+0x59],ecx
  408b84:	(bad)  
  408b85:	jl     0x408b55
  408b87:	lods   eax,DWORD PTR ds:[esi]
  408b88:	xadd   dh,ah
  408b8b:	sub    bh,bh
  408b8d:	pop    ebx
  408b8e:	or     ch,BYTE PTR [esi+esi*8-0x1554c1bd]
  408b95:	mov    eax,0xc58705b8
  408b9a:	mov    ds:0x855c77b4,eax
  408b9f:	bswap  ebx
  408ba1:	xor    eax,0x9aaee659
  408ba6:	sub    cl,BYTE PTR [edx]
  408ba8:	int3   
  408ba9:	mov    ch,al
  408bab:	aaa    
  408bac:	es jbe 0x408b6f
  408baf:	xor    eax,0xa592ac05
  408bb4:	inc    edi
  408bb5:	loope  0x408c19
  408bb7:	mov    cl,BYTE PTR [ebx-0x21]
  408bba:	test   DWORD PTR [ecx],edx
  408bbc:	sub    cl,dl
  408bbe:	loopne 0x408bb5
  408bc0:	sub    BYTE PTR [edx-0x58],dh
  408bc3:	mov    esi,0x9c77b3d9
  408bc8:	(bad)  [edx+0x2ad3265]
  408bce:	sbb    esi,DWORD PTR [eax]
  408bd0:	push   ebp
  408bd1:	rcr    DWORD PTR [edx+0x5f],1
  408bd4:	mov    bl,0xee
  408bd6:	clc    
  408bd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bd8:	fnstsw WORD PTR [ebx+0x53ee367d]
  408bde:	stos   DWORD PTR es:[edi],eax
  408bdf:	mov    bl,0xf5
  408be1:	or     BYTE PTR [ecx+0x46],0x61
  408be5:	xchg   edx,eax
  408be6:	mov    bl,0x27
  408be8:	mov    dh,0xe9
  408bea:	rcr    DWORD PTR [ebp+0x55a1ef95],cl
  408bf0:	add    eax,0x8c6c4d38
  408bf5:	iret   
  408bf6:	dec    edi
  408bf7:	xor    esi,edx
  408bf9:	jnp    0x408be0
  408bfb:	data16 ja 0x408bc0
  408bfe:	in     al,dx
  408bff:	push   es
  408c00:	dec    BYTE PTR [ebp+0x3b]
  408c03:	aad    0x8c
  408c05:	stos   BYTE PTR es:[edi],al
  408c06:	xor    DWORD PTR [ecx+eax*1],ecx
  408c09:	lods   al,BYTE PTR ds:[esi]
  408c0a:	daa    
  408c0b:	mov    bh,0xae
  408c0d:	jmp    0x408baa
  408c0f:	lmsw   di
  408c12:	adc    BYTE PTR [ebx+0x3bf1324e],dl
  408c18:	push   edi
  408c19:	push   ds
  408c1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c1b:	out    dx,al
  408c1c:	cmp    al,0xc3
  408c1e:	xor    edi,DWORD PTR [eax]
  408c20:	icebp  
  408c21:	pop    ebp
  408c22:	(bad)  
  408c23:	daa    
  408c24:	arpl   WORD PTR [ecx+0x28d3108f],dx
  408c2a:	add    eax,0x122956c0
  408c2f:	in     al,0x4c
  408c31:	xor    bh,ch
  408c33:	xor    al,0xb3
  408c35:	cmp    BYTE PTR [eax+0x59],cl
  408c38:	xchg   edx,eax
  408c39:	cmc    
  408c3a:	mov    BYTE PTR [ecx-0x4d],al
  408c3d:	mov    bh,0xe3
  408c3f:	push   ebp
  408c40:	lock ret 
  408c42:	jb     0x408c4c
  408c44:	push   0xa773a95
  408c49:	ins    DWORD PTR es:[edi],dx
  408c4a:	or     DWORD PTR [esi-0x31],0xffffffeb
  408c4e:	pop    esp
  408c4f:	sub    esi,DWORD PTR [ebx]
  408c51:	mov    esp,0x51dacf15
  408c56:	(bad)  
  408c57:	push   esp
  408c58:	pop    ebp
  408c59:	sbb    al,0xf9
  408c5b:	fwait
  408c5c:	int3   
  408c5d:	sbb    esi,ebp
  408c5f:	arpl   dx,sp
  408c61:	dec    ebx
  408c62:	aad    0x79
  408c64:	nop
  408c65:	jno    0x408c90
  408c67:	pop    ds
  408c68:	bound  edx,QWORD PTR [edx]
  408c6a:	daa    
  408c6b:	push   ebp
  408c6c:	pop    edi
  408c6d:	mov    edi,0x13017f12
  408c72:	test   BYTE PTR [edi+esi*1-0x3d],ah
  408c76:	ror    BYTE PTR [ebp+0x20],0xf
  408c7a:	sbb    eax,DWORD PTR [edx+0x5b]
  408c7d:	mov    edi,0x78f11df2
  408c82:	sub    edx,esp
  408c84:	xchg   ebp,edi
  408c86:	neg    BYTE PTR [ebx+edx*8+0x15]
  408c8a:	jb     0x408c51
  408c8c:	pop    ds
  408c8d:	and    DWORD PTR [ebp-0x2c],eax
  408c90:	enter  0xd7ed,0x19
  408c94:	dec    sp
  408c96:	clc    
  408c97:	sub    eax,0x1175cfeb
  408c9c:	popw   es
  408c9e:	sub    al,0x4b
  408ca0:	lods   eax,DWORD PTR ds:[esi]
  408ca1:	add    DWORD PTR [eax-0x3],0x5b26f45
  408ca8:	dec    edi
  408ca9:	pop    eax
  408caa:	mov    ds:0x81f848c5,al
  408caf:	call   0x58b81d59
  408cb4:	stos   BYTE PTR es:[edi],al
  408cb5:	and    eax,ebx
  408cb7:	xchg   BYTE PTR ds:[edi-0x48],bh
  408cbb:	fs popa 
  408cbd:	mov    bl,0xd9
  408cbf:	add    BYTE PTR [ecx+0x30d8845b],ah
  408cc5:	je     0x408cb5
  408cc7:	push   edx
  408cc8:	mov    BYTE PTR [ecx],dl
  408cca:	ss js  0x408c57
  408ccd:	shl    BYTE PTR [eax-0x743bbc92],0x1f
  408cd4:	or     al,0xe1
  408cd6:	or     ecx,DWORD PTR [edi+0x6750625]
  408cdc:	call   0xa5c245ee
  408ce1:	neg    DWORD PTR cs:[esi]
  408ce4:	fnstcw WORD PTR [edx]
  408ce6:	mov    ebx,0xa1ae74c6
  408ceb:	gs pop edi
  408ced:	loopne 0x408c81
  408cef:	arpl   WORD PTR [edx],ax
  408cf1:	ins    BYTE PTR es:[edi],dx
  408cf2:	jmp    0x408d54
  408cf4:	cmp    dh,ah
  408cf6:	cmp    DWORD PTR [eax],ecx
  408cf8:	out    dx,al
  408cf9:	mov    dh,0xf6
  408cfb:	imul   edx,DWORD PTR [ebp+0x24897918],0x4e
  408d02:	(bad)  
  408d03:	fdivr  DWORD PTR [ecx]
  408d05:	sub    BYTE PTR [eax],bh
  408d07:	jne    0x408c96
  408d09:	(bad)  
  408d0b:	dec    edx
  408d0c:	dec    edx
  408d0e:	add    ecx,eax
  408d10:	inc    ebp
  408d11:	mov    edx,0x6a3634e2
  408d16:	in     eax,dx
  408d17:	and    eax,0x3c6937a9
  408d1c:	pop    ds
  408d1d:	push   edi
  408d1e:	cmp    al,0x98
  408d20:	ret    0x9d7f
  408d23:	rcr    DWORD PTR [ecx-0x4137689f],1
  408d29:	fistp  DWORD PTR [ecx+0x7ed7ecdb]
  408d2f:	jo     0x408d82
  408d31:	out    0xe5,eax
  408d33:	push   0x8ec6d0ed
  408d38:	ins    DWORD PTR es:[edi],dx
  408d39:	test   al,0x7b
  408d3b:	inc    edx
  408d3c:	mov    ebp,0xb38d7d4f
  408d41:	daa    
  408d42:	adc    edi,ecx
  408d44:	jne    0x408da0
  408d46:	push   esi
  408d47:	mov    edx,0xe923988f
  408d4c:	and    ch,ch
  408d4e:	aam    0x85
  408d50:	hlt    
  408d51:	pop    edi
  408d52:	sbb    edx,DWORD PTR [ebx+edx*1-0x1f]
  408d56:	xchg   esp,eax
  408d57:	out    0xc9,al
  408d59:	jns    0x408d3c
  408d5b:	inc    esi
  408d5c:	jp     0x408dc6
  408d5e:	push   0x4d3eb017
  408d63:	outs   dx,BYTE PTR ds:[esi]
  408d64:	lods   al,BYTE PTR ds:[esi]
  408d65:	pop    ds
  408d66:	sub    al,0xfc
  408d68:	scas   al,BYTE PTR es:[edi]
  408d69:	in     al,0xb6
  408d6b:	fwait
  408d6c:	addr16 sub al,0xb
  408d6f:	sbb    al,0x4d
  408d71:	xchg   ebp,eax
  408d72:	mov    ebx,DWORD PTR [edx-0x2aaf48d7]
  408d78:	add    DWORD PTR [ebp-0x4d],esi
  408d7b:	adc    BYTE PTR [ebx+0x754db1b7],0x41
  408d82:	xchg   esp,eax
  408d83:	mov    eax,0xce8ec89e
  408d88:	pop    esp
  408d89:	push   ebx
  408d8a:	mov    ch,0x40
  408d8c:	adc    DWORD PTR [ebx+0x2d],eax
  408d8f:	sub    dl,BYTE PTR [esi]
  408d91:	push   0x3f
  408d93:	pop    esi
  408d94:	fs cli 
  408d96:	jecxz  0x408dbe
  408d98:	inc    ebp
  408d99:	mov    ah,0x46
  408d9b:	sbb    BYTE PTR [edx+0x299ff0d4],dl
  408da1:	je     0x408d3c
  408da3:	jg     0x408d7e
  408da5:	adc    edi,ecx
  408da7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408da8:	xchg   esi,eax
  408da9:	cmp    eax,0x5b021344
  408dae:	ss push ebp
  408db0:	dec    esi
  408db1:	xchg   ebp,eax
  408db2:	or     eax,0xdb57c757
  408db7:	add    eax,0xe23148d0
  408dbc:	retf   
  408dbd:	in     eax,0x4a
  408dbf:	je     0x408d57
  408dc1:	xor    al,0xd1
  408dc3:	rol    DWORD PTR ds:0x28d4d40a,0x45
  408dca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408dcb:	dec    edi
  408dcc:	mov    eax,ds:0x76972b95
  408dd1:	pusha  
  408dd2:	mov    esi,0xef5a6810
  408dd7:	je     0x408d78
  408dd9:	out    dx,al
  408dda:	pop    ebp
  408ddb:	test   DWORD PTR [edx],0x980da457
  408de1:	aad    0x2a
  408de3:	or     DWORD PTR [ebx+0x65],ecx
  408de6:	add    dh,BYTE PTR [esi]
  408de8:	add    al,ch
  408dea:	xor    DWORD PTR [edx+esi*4-0x29084b26],ecx
  408df1:	dec    ebx
  408df2:	mov    al,0x97
  408df4:	pushf  
  408df5:	push   ss
  408df6:	fistp  QWORD PTR ds:0x4054a5e
  408dfc:	mov    esp,0x136d6d9d
  408e01:	std    
  408e02:	imul   eax,DWORD PTR [ebp+0x7fc775ed],0x1d
  408e09:	or     cl,BYTE PTR [ecx+0x4ebefafa]
  408e0f:	fisttp QWORD PTR es:[edx-0x31a3e513]
  408e16:	stos   DWORD PTR es:[edi],eax
  408e17:	inc    ecx
  408e18:	or     bl,ch
  408e1a:	jg     0x408d9d
  408e1c:	stc    
  408e1d:	sahf   
  408e1e:	mov    ah,0xb8
  408e20:	lods   eax,DWORD PTR ds:[esi]
  408e21:	pop    esi
  408e22:	adc    eax,0x7b8c36ea
  408e27:	(bad)  
  408e28:	int3   
  408e29:	aaa    
  408e2a:	xchg   edx,eax
  408e2b:	xlat   BYTE PTR ds:[ebx]
  408e2c:	mov    esp,0xb559d019
  408e31:	cmp    ebx,DWORD PTR [esi+0x2c]
  408e34:	push   esi
  408e35:	jno    0x408e23
  408e37:	jmp    0xbe279184
  408e3c:	loope  0x408e43
  408e3e:	pop    ebx
  408e3f:	(bad)
  408e43:	jo     0x408e3d
  408e45:	lods   eax,DWORD PTR ds:[esi]
  408e46:	adc    ch,BYTE PTR [ecx+ebp*8+0x4]
  408e4a:	cld    
  408e4b:	mov    bl,ch
  408e4d:	outs   dx,BYTE PTR ds:[esi]
  408e4e:	mov    DWORD PTR [edi],edi
  408e50:	cmp    eax,0x3156fced
  408e55:	dec    ebp
  408e56:	int3   
  408e57:	pop    ss
  408e58:	jp     0x408e36
  408e5a:	shl    bl,cl
  408e5c:	inc    esp
  408e5d:	arpl   WORD PTR [edi+0x4a3cfb9],bx
  408e63:	in     al,dx
  408e64:	outs   dx,BYTE PTR ds:[esi]
  408e65:	retf   
  408e66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e67:	mov    DWORD PTR [esi+edx*8],ebp
  408e6a:	xlat   BYTE PTR ds:[ebx]
  408e6b:	cmp    ebp,edi
  408e6d:	into   
  408e6e:	pushf  
  408e6f:	or     ebx,DWORD PTR [eax]
  408e71:	adc    eax,0x78e06636
  408e76:	pop    ecx
  408e77:	dec    eax
  408e78:	ficomp WORD PTR ds:0x3bb69d1f
  408e7e:	adc    al,0xc7
  408e80:	mov    al,ds:0x7f19cfac
  408e85:	js     0x408e27
  408e87:	test   cl,bl
  408e89:	ret    
  408e8a:	sub    DWORD PTR [edx+eiz*2],ecx
  408e8d:	adc    ebp,DWORD PTR [ebx-0x35]
  408e90:	cmp    al,BYTE PTR [ebp+0x6675152e]
  408e96:	adc    BYTE PTR [esp+esi*4+0x7fa09b3d],dl
  408e9d:	pop    ecx
  408e9e:	push   ebx
  408e9f:	push   ebp
  408ea0:	mov    edx,0x604163b6
  408ea5:	mov    dh,0xa
  408ea7:	dec    esp
  408ea8:	xor    DWORD PTR [eax+ebx*8],edx
  408eab:	je     0x408ea6
  408ead:	and    al,0xcd
  408eaf:	pop    esp
  408eb0:	or     BYTE PTR [edi-0x1dee1005],ah
  408eb6:	imul   eax,DWORD PTR [esp+ebp*1]
  408eba:	mov    edi,0x45eec53e
  408ebf:	cli    
  408ec0:	push   esp
  408ec1:	mov    esp,0x7052f7b6
  408ec6:	(bad)  
  408ec8:	mov    esp,0xabb9effe
  408ecd:	loopne 0x408e5a
  408ecf:	sbb    eax,0xef07e0af
  408ed4:	aas    
  408ed5:	or     BYTE PTR [ecx-0x14],dl
  408ed8:	xchg   edx,eax
  408ed9:	bound  ecx,QWORD PTR ds:0x2c20e849
  408edf:	cmp    eax,0x54c91e0
  408ee4:	(bad)  
  408ee7:	sub    DWORD PTR [edx-0x1a],esi
  408eea:	out    dx,eax
  408eeb:	sub    al,0x22
  408eed:	and    ch,BYTE PTR [edx]
  408eef:	xor    bl,BYTE PTR [ebp*2+0x5eb58cc5]
  408ef6:	fnsave [ecx+edi*8-0x37]
  408efa:	out    dx,eax
  408efb:	cs sahf 
  408efd:	xchg   edi,eax
  408efe:	or     esp,DWORD PTR [edi-0x58]
  408f01:	ds sub eax,0x32a5158e
  408f07:	(bad)  
  408f08:	loope  0x408ea5
  408f0a:	and    esp,DWORD PTR [ecx+0x682607c7]
  408f10:	cli    
  408f11:	cmp    BYTE PTR [ecx+0x6e06ce6f],ah
  408f17:	daa    
  408f18:	test   al,0xa1
  408f1a:	aam    0x53
  408f1c:	fldcw  WORD PTR [eax-0x4bf11585]
  408f22:	scas   al,BYTE PTR es:[edi]
  408f23:	pop    esi
  408f24:	cs push ds
  408f26:	push   edx
  408f27:	or     eax,0x7fa59599
  408f2c:	loop   0x408f62
  408f2e:	adc    al,0x75
  408f30:	mov    ebp,0xb5a3f345
  408f35:	sbb    al,0x55
  408f37:	sub    bh,BYTE PTR [ebp-0x42fd0723]
  408f3d:	test   DWORD PTR [eax+0x5743702],ebx
  408f43:	mov    ah,0x9e
  408f45:	aam    0x3b
  408f47:	sbb    DWORD PTR [eax],ebp
  408f49:	fld    DWORD PTR ds:0xf21d197c
  408f4f:	aaa    
  408f50:	or     BYTE PTR [edi+edi*4-0x9],cl
  408f54:	xor    ch,dl
  408f56:	push   edx
  408f57:	mov    ebp,0x2301ac41
  408f5c:	mov    es,WORD PTR [edi+edx*8+0x26]
  408f60:	imul   DWORD PTR [edi]
  408f62:	call   0xe538:0xea07090c
  408f69:	(bad)  
  408f6a:	fisub  DWORD PTR [edi]
  408f6c:	push   ebx
  408f6d:	sub    al,0xe5
  408f6f:	test   al,0x8d
  408f71:	push   es
  408f72:	loop   0x408fc1
  408f74:	imul   esp,esp,0xfffffffc
  408f77:	jecxz  0x408efc
  408f79:	dec    edi
  408f7a:	popf   
  408f7b:	and    DWORD PTR [ebx+0x415c817d],edi
  408f81:	xchg   edx,eax
  408f82:	aas    
  408f83:	sub    DWORD PTR ds:0xb0d3a4b2,0x51cdbcd8
  408f8d:	in     eax,dx
  408f8e:	xchg   esp,eax
  408f8f:	retf   0xcb00
  408f92:	pop    ss
  408f93:	popa   
  408f94:	mov    eax,ds:0x6abc950f
  408f99:	lds    eax,FWORD PTR [ecx+0x3]
  408f9c:	cmp    DWORD PTR [edi],esp
  408f9e:	or     al,0xd2
  408fa0:	xor    bh,dl
  408fa2:	stos   BYTE PTR es:[edi],al
  408fa3:	sub    al,0x98
  408fa5:	loop   0x408f38
  408fa7:	not    DWORD PTR [edi]
  408fa9:	loop   0x408f60
  408fab:	neg    DWORD PTR [esi*1+0x77d8cf97]
  408fb2:	int3   
  408fb3:	mov    cl,0x2
  408fb5:	lods   eax,DWORD PTR ds:[esi]
  408fb6:	das    
  408fb7:	mov    WORD PTR [edx],?
  408fb9:	jg     0x409030
  408fbb:	(bad)  
  408fbc:	or     eax,0x65761a34
  408fc1:	inc    esp
  408fc2:	cmp    BYTE PTR [eax+esi*4-0x65],ch
  408fc6:	bound  edx,QWORD PTR [esi+0x78ad5974]
  408fcc:	push   ebp
  408fcd:	mov    esi,0xbfc91b19
  408fd2:	retf   
  408fd3:	shl    BYTE PTR [edx],0x4f
  408fd6:	mov    esp,DWORD PTR [ebp-0x67]
  408fd9:	int    0xf4
  408fdb:	frstor [esi-0x41b1242c]
  408fe1:	sbb    al,0x35
  408fe3:	jno    0x408f6b
  408fe5:	pop    es
  408fe6:	arpl   cx,sp
  408fe8:	lahf   
  408fe9:	dec    eax
  408fea:	xchg   edx,eax
  408feb:	and    al,0xea
  408fed:	xchg   ebx,eax
  408fee:	je     0x40902b
  408ff0:	pop    ss
  408ff1:	jl     0x409021
  408ff3:	mov    edi,0xbe69be67
  408ff8:	nop
  408ff9:	xor    eax,ecx
  408ffb:	lock hlt 
  408ffd:	pop    esp
  408ffe:	cmc    
  408fff:	in     al,dx
  409000:	add    esp,edi
  409002:	dec    edi
  409003:	xchg   esi,eax
  409004:	sub    eax,0x6c2a5d00
  409009:	gs mov ch,0x48
  40900c:	fstp   TBYTE PTR [edi+0x740de17f]
  409012:	sub    BYTE PTR [edi],ah
  409014:	push   esi
  409015:	aad    0x99
  409017:	js     0x40906f
  409019:	dec    ebp
  40901a:	mov    ah,0x12
  40901c:	lods   al,BYTE PTR ds:[esi]
  40901d:	dec    esp
  40901e:	sub    DWORD PTR [eax-0x8],ebp
  409021:	into   
  409022:	jnp    0x408fb6
  409024:	into   
  409025:	ror    DWORD PTR [ebx],0xfc
  409028:	mov    BYTE PTR [ebx],bh
  40902a:	jecxz  0x409074
  40902c:	inc    ebp
  40902d:	out    0x59,eax
  40902f:	inc    ecx
  409030:	popa   
  409031:	adc    DWORD PTR [edx-0x1709486],0x3918023a
  40903b:	jg     0x4090ba
  40903d:	mov    al,ds:0x8d76c20d
  409042:	mov    ch,0x55
  409044:	or     DWORD PTR ss:[edx+0x11],eax
  409048:	adc    BYTE PTR [edx+0x7d32781e],0x23
  40904f:	sbb    al,0xa3
  409051:	(bad)  
  409052:	out    dx,al
  409053:	call   0xb76c114c
  409058:	lahf   
  409059:	clc    
  40905a:	cmp    eax,0x37d2ceb4
  40905f:	adc    DWORD PTR [ecx],edi
  409061:	mov    bh,0x58
  409063:	arpl   WORD PTR [ebx+0x1],dx
  409066:	cld    
  409067:	inc    ecx
  409068:	xor    ah,BYTE PTR [ebp+0x74]
  40906b:	and    ebp,DWORD PTR [edx-0xf]
  40906e:	std    
  40906f:	daa    
  409070:	pop    ebx
  409071:	imul   esp,DWORD PTR [ebx-0x332490eb],0x36e860a2
  40907b:	dec    eax
  40907c:	xor    dh,dh
  40907e:	out    dx,eax
  40907f:	inc    ecx
  409080:	pop    esi
  409081:	ret    0x4a52
  409084:	out    dx,eax
  409085:	fisttp DWORD PTR [ecx+0x7f]
  409088:	dec    esp
  409089:	dec    edx
  40908a:	jbe    0x409095
  40908c:	pop    esp
  40908d:	dec    edx
  40908e:	sbb    eax,0x8933f9fd
  409093:	or     BYTE PTR [ecx-0x7858dd73],ah
  409099:	rep lods eax,DWORD PTR gs:[esi]
  40909c:	push   0x2cc1066
  4090a1:	(bad)  
  4090a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090a4:	dec    eax
  4090a5:	jae    0x409050
  4090a7:	xchg   edx,eax
  4090a8:	inc    eax
  4090a9:	jbe    0x4090df
  4090ab:	xor    esi,DWORD PTR [edx]
  4090ad:	sub    DWORD PTR [ebx],eax
  4090af:	leave  
  4090b0:	arpl   WORD PTR [ebx],sp
  4090b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090b4:	fcomp  DWORD PTR [ebp+0x4d80fff3]
  4090ba:	ins    DWORD PTR es:[edi],dx
  4090bb:	fild   QWORD PTR ds:0x3f7e7329
  4090c1:	nop
  4090c2:	mov    ah,0x33
  4090c4:	mov    ebx,0xd25d56d0
  4090c9:	jo     0x4090d4
  4090cb:	sbb    ecx,DWORD PTR [esi-0x3]
  4090ce:	jno    0x4090d4
  4090d0:	cmp    DWORD PTR [eax],edi
  4090d2:	xor    eax,0x547308fb
  4090d7:	es mov cl,0x3f
  4090da:	fimul  WORD PTR [edi+esi*1-0x24292fd7]
  4090e1:	xchg   ebx,eax
  4090e2:	(bad)  
  4090e3:	fdiv   QWORD PTR [edx]
  4090e5:	inc    edx
  4090e6:	cmp    eax,0xb0609c3f
  4090eb:	mov    BYTE PTR [edx-0x23439b08],bh
  4090f1:	int3   
  4090f2:	mov    edx,0x8a4c148
  4090f7:	add    DWORD PTR [edx+0x6821b037],edx
  4090fd:	pop    edx
  4090fe:	out    0x1d,eax
  409100:	iret   
  409101:	or     eax,0xcfa8424
  409106:	mov    ds:0x837cf8db,eax
  40910b:	mov    ecx,0x436495db
  409110:	push   eax
  409111:	aas    
  409112:	sub    eax,0x9f6acfee
  409117:	xor    al,0x31
  409119:	push   cs
  40911a:	or     ebp,DWORD PTR [edi-0x56a86757]
  409120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409121:	cwde   
  409122:	cmp    al,0x43
  409124:	retf   0x89d0
  409127:	mov    WORD PTR [ecx+0x1c],?
  40912a:	stc    
  40912b:	rol    esi,0xd4
  40912e:	imul   ecx,esi,0xaa90a8d3
  409134:	and    BYTE PTR [esi+esi*4-0x23750207],bl
  40913b:	in     al,dx
  40913c:	popf   
  40913d:	push   ecx
  40913e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40913f:	in     eax,dx
  409140:	pop    ds
  409141:	inc    eax
  409142:	mov    eax,DWORD PTR [ebp+0x684b8cc6]
  409148:	(bad)  [esi]
  40914a:	pop    edx
  40914b:	jo     0x4090da
  40914d:	mov    ds:0x33ee8ec2,eax
  409152:	rcr    BYTE PTR [esi-0x19],cl
  409155:	mov    DWORD PTR [edi+esi*4],eax
  409158:	rol    DWORD PTR [eax],0x35
  40915b:	mov    WORD PTR [eax],?
  40915d:	sub    bh,cl
  40915f:	jmp    FWORD PTR [ebp+0x38]
  409162:	ss cmc 
  409164:	sbb    esp,DWORD PTR [ecx+esi*2+0xa]
  409168:	arpl   WORD PTR [eax+0x4d933bbc],sp
  40916e:	xor    al,0x83
  409170:	loopne 0x40915b
  409172:	bound  ecx,QWORD PTR [ecx-0x56ebb87e]
  409178:	out    0x17,eax
  40917a:	xor    ch,BYTE PTR [ebx+0x28]
  40917d:	fwait
  40917e:	dec    edi
  40917f:	scas   al,BYTE PTR es:[edi]
  409180:	xor    ebp,DWORD PTR [eax-0x49ff0d6]
  409186:	inc    esi
  409187:	push   ss
  409188:	pop    eax
  409189:	mov    eax,ds:0x58a110de
  40918e:	(bad)  
  40918f:	sbb    al,BYTE PTR [eax+eax*8+0x13]
  409193:	loopne 0x4091bc
  409195:	call   0xcefc:0x75413ca1
  40919c:	and    ah,ch
  40919e:	push   ebx
  40919f:	jns    0x409174
  4091a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091a2:	inc    ebx
  4091a3:	pop    eax
  4091a4:	fiadd  WORD PTR [esi-0x125aadf5]
  4091aa:	push   0xffffffb3
  4091ac:	push   edi
  4091ad:	test   eax,0x10435019
  4091b2:	cmp    DWORD PTR [ecx+0x12606e07],ecx
  4091b8:	jmp    0x1acf:0x80f7ecbf
  4091bf:	mov    ds:0xdf3aec9,eax
  4091c4:	xchg   edi,eax
  4091c5:	mov    dl,0xb1
  4091c7:	packuswb mm0,QWORD PTR [eax+0x11]
  4091cb:	ret    0x7525
  4091ce:	lods   eax,DWORD PTR ds:[esi]
  4091cf:	jmp    0x44b83c08
  4091d4:	push   edx
  4091d5:	(bad)  
  4091d6:	repz hlt 
  4091d8:	std    
  4091d9:	xchg   ebx,eax
  4091db:	std    
  4091dc:	sbb    BYTE PTR [eax+0x395e25a9],al
  4091e2:	push   ebx
  4091e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091e4:	add    BYTE PTR [eax],al
  4091e6:	push   edi
  4091e7:	pop    ebp
  4091e8:	jo     0x409253
  4091ea:	push   0xfa3589b0
  4091ef:	xchg   esi,eax
  4091f0:	ret    
  4091f1:	add    DWORD PTR [eax+0x19],eax
  4091f4:	cld    
  4091f5:	xchg   ebp,eax
  4091f6:	xor    edx,ecx
  4091f8:	je     0x4091f4
  4091fa:	or     dl,BYTE PTR [ebp-0x36]
  4091fd:	test   dh,bl
  4091ff:	mov    bl,0x97
  409201:	loope  0x4091df
  409203:	xor    al,0xde
  409205:	jmp    0x40922e
  409207:	mov    BYTE PTR [edx],ch
  409209:	sub    DWORD PTR [esi-0x5],0xffffff86
  40920d:	aas    
  40920e:	adc    eax,esi
  409210:	jmp    0x6da8d6ea
  409215:	fsub   DWORD PTR [esp+eiz*4+0x4e207949]
  40921c:	inc    ebp
  40921d:	pop    ebp
  40921e:	in     al,0xa
  409220:	fst    QWORD PTR [ebp+0x410ac8a]
  409226:	add    eax,0x220ee650
  40922b:	push   esp
  40922c:	(bad)  
  40922d:	ja     0x4091e3
  40922f:	fs mov ebp,0x64abaf7a
  409235:	mov    esi,0x4c6fdd07
  40923a:	mov    bl,BYTE PTR [esi]
  40923c:	dec    edx
  40923d:	arpl   WORD PTR [eax+0x4f],di
  409240:	xchg   esp,eax
  409241:	sub    eax,DWORD PTR [ecx+0x6a]
  409244:	push   ss
  409245:	sbb    ebp,DWORD PTR [esp+ecx*8-0x79]
  409249:	fmul   st(7),st
  40924b:	add    cl,bh
  40924d:	das    
  40924e:	retf   0x3199
  409251:	sbb    eax,ebx
  409253:	xchg   ebx,eax
  409254:	jnp    0x409200
  409256:	pop    ss
  409257:	push   cs
  409258:	cmp    al,0x1c
  40925a:	add    ecx,ebx
  40925c:	lahf   
  40925d:	and    bl,BYTE PTR ss:[edi+0x7129eb78]
  409264:	cwde   
  409265:	out    dx,eax
  409266:	test   DWORD PTR [eax+ebx*2+0x9],edx
  40926a:	popf   
  40926b:	mov    BYTE PTR [esp+eax*2-0x10],bl
  40926f:	sahf   
  409270:	adc    ch,bh
  409272:	xor    dh,dl
  409274:	fwait
  409275:	lahf   
  409276:	repnz lods eax,DWORD PTR ds:[esi]
  409278:	mov    ebx,0xc96ea2d8
  40927d:	mov    edx,0xe2f56f5a
  409282:	hlt    
  409283:	inc    edx
  409284:	push   ecx
  409285:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409286:	adc    esi,DWORD PTR [edi-0xa]
  409289:	das    
  40928a:	data16 loopne 0x409266
  40928d:	and    DWORD PTR [esi+0x3f],eax
  409290:	mov    DWORD PTR [edx],esp
  409292:	push   ebx
  409293:	push   ecx
  409294:	idiv   DWORD PTR [ecx+ecx*1]
  409297:	scas   al,BYTE PTR es:[edi]
  409298:	(bad)  
  409299:	in     eax,0xf8
  40929b:	xlat   BYTE PTR ds:[ebx]
  40929c:	enter  0xe8ba,0x6f
  4092a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092a1:	sbb    DWORD PTR [eax],edx
  4092a3:	loop   0x40923b
  4092a5:	and    eax,0x2b9619c6
  4092aa:	mov    edx,0x584717dc
  4092af:	inc    ecx
  4092b0:	jp     0x409270
  4092b2:	in     eax,dx
  4092b3:	inc    eax
  4092b4:	arpl   WORD PTR [ebx+0x40],si
  4092b7:	jg     0x40930f
  4092b9:	int3   
  4092ba:	adc    DWORD PTR [eax+0x6dc3e196],esp
  4092c0:	add    DWORD PTR [ecx],esp
  4092c2:	dec    ecx
  4092c3:	mov    ds:0x1fb74b23,eax
  4092c8:	sub    bl,al
  4092ca:	pop    ds
  4092cb:	add    DWORD PTR [esi],edx
  4092cd:	xchg   ebx,eax
  4092ce:	and    BYTE PTR [eax+ecx*4+0x2d5708d4],dh
  4092d5:	retf   
  4092d6:	(bad)
  4092d9:	daa    
  4092da:	loope  0x4092ae
  4092dc:	mov    ah,0x6d
  4092de:	sub    DWORD PTR [edx+0x78],0xe7a3c1d4
  4092e5:	retf   
  4092e6:	jmp    0x507d:0x13c0fe82
  4092ed:	sbb    DWORD PTR [esi+0x5],ebp
  4092f0:	and    cl,dl
  4092f2:	lods   eax,DWORD PTR es:[esi]
  4092f4:	push   es
  4092f5:	jg     0x409308
  4092f7:	ins    DWORD PTR es:[edi],dx
  4092f8:	dec    edx
  4092f9:	add    esi,DWORD PTR [ebp-0xab97d5c]
  4092ff:	pop    esi
  409300:	lods   al,BYTE PTR ds:[esi]
  409301:	ds int 0x13
  409304:	xor    ecx,0x46bf642
  40930a:	mov    al,0xfe
  40930c:	dec    ecx
  40930d:	jecxz  0x409327
  40930f:	and    DWORD PTR [ebx-0x2b76299e],esp
  409315:	fistp  DWORD PTR [ebx]
  409317:	out    dx,eax
  409318:	into   
  409319:	xchg   edi,eax
  40931a:	and    edi,DWORD PTR ds:0x73887c59
  409320:	je     0x409305
  409322:	es xchg ecx,eax
  409324:	cmp    DWORD PTR [edi+0x1b68ffd5],ecx
  40932a:	dec    ebx
  40932b:	pop    esi
  40932c:	std    
  40932d:	ret    
  40932e:	jmp    0x409336
  409330:	(bad)  
  409332:	mov    edi,0x5b341fd3
  409337:	cmp    DWORD PTR [eax],edi
  409339:	ins    DWORD PTR es:[edi],dx
  40933a:	or     eax,0xc83e44eb
  40933f:	cmc    
  409340:	fmul   QWORD PTR [esi+eiz*2]
  409343:	jmp    0x541f10a0
  409348:	inc    esi
  409349:	add    DWORD PTR [esi+0x52b02ca8],edi
  40934f:	pushf  
  409350:	or     dh,BYTE PTR [esi+ebx*1]
  409353:	xchg   edi,eax
  409354:	or     al,0x7e
  409356:	cs jle 0x40932b
  409359:	mov    esi,0x75a07cc6
  40935e:	inc    ebp
  40935f:	mov    ebp,0xa7924774
  409365:	jecxz  0x4093d0
  409367:	cmp    esp,ecx
  409369:	mov    cl,0x33
  40936b:	bnd jns 0x409386
  40936e:	inc    eax
  40936f:	scas   eax,DWORD PTR es:[edi]
  409370:	clc    
  409371:	lock cdq 
  409373:	shrd   DWORD PTR [eax+0x60df2175],eax,cl
  40937a:	ficomp DWORD PTR [edi]
  40937c:	xlat   BYTE PTR ds:[ebx]
  40937d:	bound  ebx,QWORD PTR [edx-0x7b]
  409380:	in     eax,dx
  409381:	cmp    al,0x3
  409383:	(bad)  [eax+0x4c]
  409386:	clc    
  409387:	xchg   edi,eax
  409388:	dec    eax
  409389:	pop    ecx
  40938a:	in     al,dx
  40938b:	and    edi,DWORD PTR [eax-0x32]
  40938e:	xchg   edi,eax
  40938f:	add    al,0xc3
  409391:	int3   
  409392:	(bad)  
  409393:	not    BYTE PTR [edi]
  409395:	cld    
  409396:	mov    esp,0x728331d8
  40939b:	or     eax,ecx
  40939d:	call   0xbd9:0xfb0386ac
  4093a4:	dec    edi
  4093a5:	lock cmp DWORD PTR [ebx],esp
  4093a8:	add    al,0x90
  4093aa:	pop    edx
  4093ab:	xchg   ecx,eax
  4093ac:	ja     0x409352
  4093ae:	cdq    
  4093af:	jmp    0x6159cc40
  4093b4:	stc    
  4093b5:	pop    esi
  4093b6:	mov    ecx,0xdd952b0d
  4093bb:	jp     0x409376
  4093bd:	jno    0x40940f
  4093bf:	adc    BYTE PTR [ebx+0x6c16389],bl
  4093c5:	push   0xffffff8f
  4093c7:	dec    eax
  4093c8:	(bad)  
  4093c9:	pop    ebx
  4093ca:	popf   
  4093cb:	shl    DWORD PTR [edi+0x22],1
  4093ce:	out    dx,eax
  4093cf:	icebp  
  4093d0:	jge    0x4093e0
  4093d2:	or     eax,0x389d3daa
  4093d7:	xor    BYTE PTR [ecx+eax*4-0x298625e4],al
  4093de:	out    dx,eax
  4093df:	xor    DWORD PTR [esi+0x58abb8b9],edi
  4093e5:	pop    ds
  4093e6:	sub    BYTE PTR [esi],0x5c
  4093e9:	(bad)
  4093ec:	or     DWORD PTR [ecx],0x77fd9bc8
  4093f2:	cmc    
  4093f3:	scas   al,BYTE PTR es:[edi]
  4093f4:	cmp    eax,0x3bcd9986
  4093f9:	xchg   esi,eax
  4093fa:	add    al,0xd8
  4093fc:	and    dl,dl
  4093fe:	xchg   esi,eax
  4093ff:	repz sub cl,0x40
  409403:	xchg   ebx,eax
  409404:	adc    al,0x45
  409406:	or     DWORD PTR [eax+0xbe5445],eax
  40940c:	js     0x409466
  40940e:	mov    es,WORD PTR [edx-0x7b]
  409411:	adc    BYTE PTR [edi+0x77],al
  409414:	adc    eax,0x3811cc5c
  409419:	xor    al,0x3f
  40941b:	add    ecx,DWORD PTR [ecx+0x25a20e7a]
  409421:	cmp    al,0xf6
  409423:	and    eax,0x78e876ed
  409428:	inc    esp
  409429:	push   ebx
  40942a:	xchg   edi,eax
  40942b:	iret   
  40942c:	mov    al,ds:0x4d0e9163
  409431:	fsubr  DWORD PTR [edi+ecx*4-0x2133f494]
  409438:	int3   
  409439:	out    0x95,eax
  40943b:	in     al,dx
  40943c:	arpl   WORD PTR [eax],ax
  40943e:	push   cs
  40943f:	call   0x1821:0x5ef0c196
  409446:	or     bh,0x5
  409449:	cmp    ch,BYTE PTR [esi]
  40944b:	add    BYTE PTR [edi],al
  40944d:	inc    edi
  40944e:	out    dx,al
  40944f:	lahf   
  409450:	outs   dx,DWORD PTR ds:[esi]
  409451:	mov    edx,0x4c54e41e
  409456:	fwait
  409457:	jmp    0x40943e
  409459:	lods   eax,DWORD PTR ds:[esi]
  40945a:	fadd   DWORD PTR [edx]
  40945c:	mov    bh,0x52
  40945e:	js     0x4093f2
  409460:	jle    0x4094b1
  409462:	push   ebx
  409463:	jmp    0x409424
  409465:	(bad)  
  409466:	mov    dl,0xa9
  409468:	inc    ebx
  409469:	mov    fs,WORD PTR [ecx*2+0x334d43c9]
  409470:	mov    bl,0x6d
  409472:	sti    
  409473:	adc    BYTE PTR [ebp+0x3574595b],ah
  409479:	mov    eax,ds:0x5511346b
  40947e:	and    BYTE PTR [ebp-0x46a8b040],ch
  409484:	sub    edx,esp
  409486:	cmp    esp,DWORD PTR [eax+0x2f]
  409489:	xchg   esp,eax
  40948a:	(bad)  
  40948b:	sub    si,cx
  40948e:	mov    bh,0x2c
  409490:	lea    edi,[esi+0x6d]
  409493:	push   0x21
  409495:	jmp    0x4094c9
  409497:	cmp    BYTE PTR [ebp-0x385c544c],bl
  40949d:	fs cmp bh,dl
  4094a0:	sbb    DWORD PTR [ebp-0x78],eax
  4094a3:	pop    DWORD PTR [ecx+0x4b568391]
  4094a9:	sub    eax,0xd2712a0b
  4094ae:	dec    eax
  4094af:	mov    ds:0x36914182,eax
  4094b4:	push   ds
  4094b5:	lahf   
  4094b6:	cmp    eax,0x7abc5e10
  4094bb:	shr    DWORD PTR [edx],1
  4094bd:	arpl   bx,dx
  4094bf:	in     al,0x67
  4094c1:	push   edi
  4094c2:	adc    esp,DWORD PTR [esi]
  4094c4:	cmp    eax,0x10a7d0c6
  4094c9:	gs push 0x8d867a99
  4094cf:	or     BYTE PTR [eax],bl
  4094d1:	in     eax,0xa3
  4094d3:	pop    eax
  4094d4:	push   ebx
  4094d5:	pop    ss
  4094d6:	xchg   BYTE PTR [eax-0x29b2f586],bl
  4094dc:	je     0x40952c
  4094de:	int3   
  4094df:	fistp  DWORD PTR [esi]
  4094e1:	cmp    DWORD PTR [edx],edx
  4094e3:	sar    BYTE PTR [ebx],1
  4094e5:	dec    eax
  4094e6:	cmp    ah,BYTE PTR [ebp+0x8]
  4094e9:	sahf   
  4094ea:	es cmc 
  4094ec:	jl     0x409519
  4094ee:	jle    0x409567
  4094f0:	jns    0x40948b
  4094f2:	inc    ebp
  4094f3:	dec    ecx
  4094f4:	mov    dh,0xc8
  4094f6:	scas   eax,DWORD PTR es:[edi]
  4094f7:	adc    DWORD PTR [edx],edi
  4094f9:	cmp    ch,al
  4094fb:	dec    ebx
  4094fc:	push   0x4d
  4094fe:	out    dx,al
  4094ff:	aas    
  409500:	sbb    DWORD PTR [eax+edx*2+0x7aa1e316],0xff3e6953
  40950b:	mov    esi,ecx
  40950d:	jecxz  0x4094f3
  40950f:	lods   al,BYTE PTR ds:[esi]
  409510:	mov    edx,0xd026b482
  409515:	popa   
  409516:	xchg   edx,eax
  409517:	in     al,dx
  409518:	jns    0x409583
  40951a:	repnz jmp FWORD PTR [esi-0x7]
  40951e:	sbb    BYTE PTR [edx+esi*8-0x40742cf2],bl
  409525:	pop    esp
  409526:	clc    
  409527:	mov    edi,0xbb31f33f
  40952c:	aaa    
  40952d:	rol    ecx,0x36
  409530:	in     eax,0xb9
  409532:	pop    eax
  409533:	stos   DWORD PTR es:[edi],eax
  409534:	mov    bp,0x1b17
  409538:	mov    bl,0xa6
  40953a:	mov    dl,0xcc
  40953c:	cmp    eax,0xbb7041b0
  409541:	frstor [edi-0x1b]
  409544:	adc    al,0x7e
  409546:	stos   DWORD PTR es:[edi],eax
  409547:	cmp    BYTE PTR [edx-0x4f],0x7f
  40954b:	leave  
  40954c:	in     eax,dx
  40954d:	imul   ecx,DWORD PTR [ebx],0x1a
  409550:	mov    ebx,0x7d4358ed
  409555:	mov    ?,WORD PTR [ecx-0x2a4e1c02]
  40955b:	(bad)  
  40955c:	in     eax,0x7d
  40955e:	pop    eax
  40955f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409560:	loope  0x40950f
  409562:	mov    al,0xe3
  409564:	jns    0x409515
  409566:	dec    ebx
  409567:	mov    eax,0x605aa7e9
  40956c:	inc    esi
  40956d:	or     eax,0x4061bc2f
  409572:	jp     0x40950b
  409574:	mov    eax,?
  409576:	jnp    0x409525
  409578:	and    al,0x98
  40957a:	adc    BYTE PTR [esi+0x79366482],0x51
  409581:	inc    edx
  409582:	inc    esp
  409583:	cli    
  409584:	jge    0x4095cf
  409586:	leave  
  409587:	mov    esp,DWORD PTR [edx-0x6243be71]
  40958d:	fld    QWORD PTR [edi+eiz*8]
  409590:	out    dx,eax
  409591:	es jb  0x40958b
  409594:	jp     0x4095ed
  409596:	outs   dx,DWORD PTR ds:[esi]
  409597:	ins    DWORD PTR es:[edi],dx
  409598:	adc    DWORD PTR [ebx+0x5791965a],edi
  40959e:	test   DWORD PTR [ecx],edi
  4095a0:	xor    DWORD PTR [esi-0x4edc315e],edx
  4095a6:	inc    edx
  4095a7:	cwde   
  4095a8:	nop
  4095a9:	fisubr DWORD PTR [edx+0x21]
  4095ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095ad:	test   DWORD PTR [esi],edx
  4095af:	xchg   esp,eax
  4095b0:	jo     0x409535
  4095b2:	popf   
  4095b3:	pop    ecx
  4095b4:	add    eax,0xf7f054c6
  4095b9:	inc    esp
  4095ba:	(bad)  
  4095bb:	aam    0x82
  4095bd:	sti    
  4095be:	call   0xab44e10c
  4095c3:	popa   
  4095c4:	stc    
  4095c5:	xchg   esi,eax
  4095c6:	lods   al,BYTE PTR ds:[esi]
  4095c7:	sbb    DWORD PTR [ecx+ebx*4],edx
  4095ca:	push   esp
  4095cb:	jp     0x409644
  4095cd:	jb     0x409602
  4095cf:	cmp    ebp,DWORD PTR [esi+0x775d2174]
  4095d5:	sub    eax,DWORD PTR [ebx+ebx*4+0x4494d31b]
  4095dc:	jns    0x4095c1
  4095de:	pop    ecx
  4095df:	mov    edx,0x697d7c1a
  4095e4:	push   es
  4095e5:	inc    esi
  4095e6:	adc    BYTE PTR [ebx+0x67ed802e],dl
  4095ec:	je     0x40961b
  4095ee:	xchg   DWORD PTR [ebx],esp
  4095f0:	xlat   BYTE PTR ds:[ebx]
  4095f1:	and    eax,DWORD PTR [eax]
  4095f3:	jmp    0xe7cb:0xd79ba11a
  4095fa:	push   ebx
  4095fb:	and    BYTE PTR [edi-0x31],cl
  4095fe:	fiadd  DWORD PTR [edx-0x6b]
  409601:	inc    ebx
  409602:	cwde   
  409603:	add    ecx,edx
  409605:	aaa    
  409606:	fs xor ecx,ebx
  409609:	pop    ss
  40960a:	jge    0x409616
  40960c:	and    eax,DWORD PTR [eax+eax*2-0x2fce82e5]
  409613:	mov    al,ds:0xd9ecbd75
  409618:	jae    0x611ea79b
  40961e:	cmp    bh,al
  409620:	jp     0x4095d9
  409622:	loopne 0x40963b
  409624:	les    ebx,FWORD PTR [edi+0x3d429d5c]
  40962a:	add    ah,BYTE PTR [edx+0x59b25320]
  409630:	or     DWORD PTR [eax-0x2573d575],ecx
  409636:	jg     0x4096a6
  409638:	push   edi
  409639:	inc    esi
  40963a:	and    DWORD PTR ds:0x1c08c318,ebp
  409640:	mov    al,ds:0x77a5dc6b
  409645:	neg    edi
  409647:	push   edx
  409648:	cdq    
  409649:	jno    0x409651
  40964b:	les    ebx,FWORD PTR [esp+eax*4]
  40964e:	mov    dh,0x12
  409650:	cmp    cl,BYTE PTR [edx]
  409652:	push   ecx
  409653:	cdq    
  409654:	push   ecx
  409655:	(bad)  
  409656:	jnp    0x4096b6
  409658:	adc    ch,BYTE PTR ds:0xbe971a8d
  40965e:	fld    st(4)
  409660:	adc    BYTE PTR [ebp+0x1aaaec90],dh
  409666:	repz add DWORD PTR [ecx+eax*8+0xc],ebx
  40966b:	push   ecx
  40966c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40966d:	outs   dx,BYTE PTR ds:[esi]
  40966e:	mov    eax,0xdb303097
  409673:	push   ds
  409674:	je     0x4096aa
  409676:	lahf   
  409677:	sub    esi,0x31
  40967a:	xchg   esp,eax
  40967b:	arpl   WORD PTR [ebx+0x39c68e7c],dx
  409681:	fidiv  WORD PTR [eax]
  409683:	ret    
  409684:	cmp    BYTE PTR [edi],cl
  409686:	mov    ecx,0x57c29e43
  40968b:	aaa    
  40968c:	inc    DWORD PTR [ecx+0x5a36959c]
  409692:	xchg   esi,eax
  409693:	das    
  409694:	xchg   edi,eax
  409695:	push   es
  409696:	stos   DWORD PTR es:[edi],eax
  409697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409698:	or     DWORD PTR [ecx+edi*4+0x52],0xb18a40f5
  4096a0:	dec    edi
  4096a1:	inc    ebp
  4096a2:	(bad)  [ebx-0x2c]
  4096a5:	and    al,0xbd
  4096a7:	xchg   edi,eax
  4096a8:	push   ds
  4096a9:	push   dx
  4096ab:	lahf   
  4096ac:	lods   eax,DWORD PTR ds:[esi]
  4096ad:	fidiv  DWORD PTR ds:0xc0d716a6
  4096b3:	addr16 addr16 jg 0x4096e0
  4096b7:	ja     0x4096a5
  4096b9:	fs add eax,0xf49c49b6
  4096bf:	fmul   QWORD PTR [ecx+0x8]
  4096c2:	arpl   sp,ax
  4096c4:	mov    al,ds:0x2c66d27
  4096c9:	jbe    0x40972a
  4096cb:	pop    edx
  4096cc:	mov    bl,0x15
  4096ce:	jns    0x409736
  4096d0:	xor    al,0xfa
  4096d2:	inc    edx
  4096d3:	les    eax,FWORD PTR [esi]
  4096d5:	pusha  
  4096d6:	cld    
  4096d7:	fnstsw WORD PTR gs:[edi]
  4096da:	jae    0x409753
  4096dc:	clc    
  4096dd:	and    al,0x3e
  4096df:	mov    dh,0x6e
  4096e1:	mov    bh,0x9f
  4096e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096e4:	call   0x960adb5f
  4096e9:	push   ecx
  4096ea:	(bad)
  4096ed:	and    eax,0x1958a81a
  4096f2:	dec    esp
  4096f3:	push   esi
  4096f4:	sub    BYTE PTR [ecx],ch
  4096f6:	(bad)  
  4096f7:	sbb    eax,0x31cac2cc
  4096fc:	cmp    DWORD PTR [esi+ebx*2+0x51abe375],edx
  409703:	add    BYTE PTR [ebx-0x7448e5c3],al
  409709:	sbb    BYTE PTR [ebp-0x17e6f98b],ch
  40970f:	(bad)  
  409711:	or     BYTE PTR [edi+0xaca0ae1],ah
  409717:	scas   al,BYTE PTR es:[edi]
  409718:	enter  0x3187,0x15
  40971c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40971d:	sbb    eax,0x52297d91
  409722:	xlat   BYTE PTR ds:[ebx]
  409723:	(bad)
  409726:	xor    al,0x16
  409728:	daa    
  409729:	test   DWORD PTR [ecx+0x71dc9c47],ebx
  40972f:	daa    
  409730:	or     ebx,ebx
  409732:	ins    DWORD PTR es:[edi],dx
  409733:	and    DWORD PTR cs:[ecx-0x7eec8b55],ebp
  40973a:	imul   esp,edi,0xffffffa1
  40973d:	imul   esi,edi,0x79
  409740:	jne    0x4096f2
  409742:	sbb    BYTE PTR [edi],bh
  409744:	fist   DWORD PTR [edx+eax*1-0x20b836ea]
  40974b:	pop    edx
  40974c:	sbb    dh,dh
  40974e:	add    bh,bl
  409750:	mov    bh,0x8e
  409752:	call   0x2527:0x640da08d
  409759:	pop    ecx
  40975a:	es mov ch,0x47
  40975d:	and    DWORD PTR [eax],ecx
  40975f:	repnz cmp ecx,DWORD PTR [ecx+ebp*8]
  409763:	mov    edi,0xbcdc19f
  409768:	(bad)  
  409769:	xor    eax,0xee53f40b
  40976e:	pop    edi
  40976f:	add    eax,0xd926c60d
  409774:	push   cs
  409775:	ror    BYTE PTR [edi+0x7a],1
  409778:	pop    es
  409779:	pop    ds
  40977a:	sub    DWORD PTR [edi-0x20],0xffffffac
  40977e:	nop
  40977f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409780:	fst    QWORD PTR [ebp+ebx*1-0x79f5d812]
  409787:	rol    DWORD PTR [ecx],1
  409789:	push   ss
  40978a:	pop    esi
  40978b:	or     ah,dh
  40978d:	frstor [ebp+0xa]
  409790:	xor    esi,ecx
  409792:	frstor [ecx-0x7d]
  409795:	mov    esi,0xf259528d
  40979a:	add    edi,DWORD PTR [edi]
  40979c:	inc    edi
  40979d:	test   eax,0x119c58b1
  4097a2:	(bad)  
  4097a3:	jmp    0x2ab105dc
  4097a8:	dec    ecx
  4097a9:	dec    esi
  4097aa:	jg     0x4097a9
  4097ac:	push   edx
  4097ad:	or     ebx,DWORD PTR [edi-0x445c6872]
  4097b3:	ficomp WORD PTR ds:0x45234d98
  4097b9:	push   es
  4097ba:	or     DWORD PTR [eax-0x31],ecx
  4097bd:	ja     0x4097a2
  4097bf:	mov    DWORD PTR [ebx],0xaec52497
  4097c5:	mov    bh,0xd
  4097c7:	out    0x2d,eax
  4097c9:	xchg   ebx,eax
  4097ca:	cwde   
  4097cb:	scas   al,BYTE PTR es:[edi]
  4097cc:	sbb    eax,0x9d18bdcd
  4097d1:	lods   eax,DWORD PTR ds:[esi]
  4097d2:	pop    ss
  4097d3:	iret   
  4097d4:	sub    eax,0x20175546
  4097d9:	push   0x4dae2309
  4097de:	neg    DWORD PTR [eax]
  4097e0:	jp     0x409813
  4097e2:	(bad)  
  4097e3:	hlt    
  4097e4:	push   ss
  4097e5:	or     esp,DWORD PTR ds:[ebx]
  4097e8:	mov    eax,DWORD PTR [ecx-0x3a]
  4097eb:	int3   
  4097ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097ed:	sbb    ebp,DWORD PTR [ecx+0x71]
  4097f0:	mov    esi,ds
  4097f2:	pop    es
  4097f3:	mov    esi,0x368c51da
  4097f8:	cld    
  4097f9:	jo     0x409878
  4097fb:	pop    ebp
  4097fc:	aaa    
  4097fd:	fsub   st(5),st
  4097ff:	pop    ebx
  409800:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409801:	pop    esp
  409802:	pushf  
  409803:	(bad)  
  409804:	and    bl,BYTE PTR [ecx]
  409806:	sbb    eax,0x7948f7f8
  40980b:	loop   0x40982a
  40980d:	adc    edi,edi
  40980f:	jecxz  0x409852
  409811:	sahf   
  409812:	lea    ebp,[eax+0x19b61627]
  409818:	mov    al,ds:0x2be086e6
  40981d:	xchg   edx,eax
  40981e:	pop    edx
  40981f:	cmp    esi,edx
  409821:	mov    dh,0xc5
  409823:	push   ds
  409824:	out    0x1b,eax
  409826:	mov    dh,0x6b
  409828:	arpl   ax,bx
  40982a:	pusha  
  40982b:	(bad)  
  40982c:	inc    esp
  40982d:	out    0x2a,eax
  40982f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409830:	sbb    al,0xf9
  409832:	adc    BYTE PTR [edi],bh
  409834:	jbe    0x4097f2
  409836:	(bad)  
  409837:	adc    ch,BYTE PTR [edi+0x7d]
  40983a:	sahf   
  40983b:	fsubr  st,st(2)
  40983d:	rol    ah,0x1
  409840:	lea    eax,[eax+0x3480f148]
  409846:	inc    ebp
  409847:	lock test ebx,eax
  40984a:	and    al,dh
  40984c:	(bad)  
  40984d:	out    dx,al
  40984e:	mov    esi,0x7f6f016b
  409853:	sub    edi,DWORD PTR [esi]
  409855:	scas   eax,DWORD PTR es:[edi]
  409856:	mov    esp,0x487ebaff
  40985b:	sub    dh,BYTE PTR [edx+0x59]
  40985e:	dec    edi
  40985f:	dec    ecx
  409860:	fwait
  409861:	push   es
  409862:	dec    ebp
  409863:	dec    ebp
  409864:	sar    DWORD PTR [eax+0x16],0x2b
  409868:	cmc    
  409869:	in     eax,dx
  40986a:	xor    ebx,eax
  40986c:	add    BYTE PTR [ebx-0x64e5a3c4],bh
  409872:	sub    DWORD PTR ds:0xb653861f,ebp
  409878:	cwde   
  409879:	hlt    
  40987a:	mov    ch,BYTE PTR [edi-0x3e]
  40987d:	fild   QWORD PTR [edi]
  40987f:	or     al,0xef
  409881:	mov    BYTE PTR ds:0xe4cfd45b,ah
  409887:	jbe    0x4098d6
  409889:	out    0x31,al
  40988b:	xchg   esp,eax
  40988c:	or     BYTE PTR [eax],ah
  40988e:	sub    bl,BYTE PTR ds:0x404c309
  409894:	push   cs
  409895:	lahf   
  409896:	es adc bl,bh
  409899:	imul   esi,DWORD PTR [ecx],0xffffff83
  40989c:	xor    al,BYTE PTR [ebx]
  40989e:	std    
  40989f:	xchg   edx,eax
  4098a0:	aaa    
  4098a1:	sbb    DWORD PTR [esi-0x1b],ebp
  4098a4:	ret    0x45f2
  4098a7:	sub    edx,DWORD PTR [esi+0x53]
  4098aa:	adc    DWORD PTR [esi+0x1c],ebx
  4098ad:	stc    
  4098ae:	mov    bh,0xc1
  4098b0:	daa    
  4098b1:	int3   
  4098b2:	iret   
  4098b3:	arpl   dx,bx
  4098b5:	adc    edx,DWORD PTR [eax+0x51]
  4098b8:	sahf   
  4098b9:	inc    ebp
  4098ba:	fistp  WORD PTR [eax]
  4098bc:	cmp    eax,0xbdf8dd8
  4098c1:	aaa    
  4098c2:	jae    0x4098cf
  4098c4:	mov    ebx,0x11a4c6c
  4098c9:	mov    al,0x8c
  4098cb:	js     0x40992a
  4098cd:	imul   edx,DWORD PTR [eax-0x60e878f9],0xcba45f8b
  4098d7:	cld    
  4098d8:	pop    ebp
  4098d9:	mov    ds:0x335b1106,eax
  4098de:	xchg   BYTE PTR [edi+eax*8-0x31],dl
  4098e2:	xor    BYTE PTR [esi-0x47f10e5d],ch
  4098e8:	das    
  4098e9:	mov    eax,ds:0xb451f3d1
  4098ee:	(bad)  
  4098ef:	xor    esi,DWORD PTR [ecx+eiz*2-0x77]
  4098f3:	push   edi
  4098f4:	mov    esi,0x72873156
  4098f9:	rol    DWORD PTR [esi+0x58],0x14
  4098fd:	adc    edi,esi
  4098ff:	push   cs
  409900:	mov    ah,0x5
  409902:	or     BYTE PTR [eax+0x73cef892],ch
  409908:	les    eax,FWORD PTR ds:0x774f55c5
  40990e:	test   DWORD PTR [edi+0x7a],esp
  409911:	xor    DWORD PTR [ecx+ebp*8-0x2b57d5c0],edi
  409918:	std    
  409919:	test   DWORD PTR [ebp+0x27],esi
  40991c:	(bad)  
  40991d:	xchg   edi,eax
  40991e:	xor    BYTE PTR [ebx-0x17d2640d],ch
  409924:	jle    0x4098bc
  409926:	imul   dh
  409928:	pop    ecx
  409929:	xor    BYTE PTR [edi-0x53ecb0ae],0xfd
  409930:	pop    es
  409931:	mov    edx,0x396167eb
  409936:	xchg   BYTE PTR [edi-0x73],ch
  409939:	test   eax,0x54425163
  40993e:	lock inc esi
  409940:	dec    edx
  409941:	ins    DWORD PTR es:[edi],dx
  409942:	in     eax,dx
  409943:	fadd   QWORD PTR [edx+ebp*2-0x78]
  409947:	in     eax,0xa6
  409949:	loope  0x409941
  40994b:	ds mov ah,0x32
  40994e:	mov    al,0xc6
  409950:	and    al,0xab
  409952:	mov    bl,BYTE PTR [ebx-0x5b]
  409955:	int3   
  409956:	cmc    
  409957:	call   0x20c96d80
  40995c:	cmp    eax,0x2e
  40995f:	jns    0x409935
  409961:	adc    al,0x78
  409963:	and    DWORD PTR [edx],edi
  409965:	rcl    DWORD PTR [edi-0x319b4e28],0x3d
  40996c:	mov    cl,0x9f
  40996e:	and    edx,DWORD PTR [edx+0x40]
  409971:	xor    dh,BYTE PTR [eax-0x55]
  409974:	push   ebx
  409975:	dec    esp
  409976:	int3   
  409977:	mov    dh,0xef
  409979:	rcl    DWORD PTR ds:[ebp+edx*1+0x66],cl
  40997e:	or     ebp,ebx
  409980:	stos   BYTE PTR es:[edi],al
  409981:	inc    eax
  409982:	push   cs
  409983:	adc    ebx,ebp
  409985:	or     DWORD PTR [ecx+0x32],ecx
  409988:	cmp    DWORD PTR [ebx],0x58730c13
  40998e:	or     bl,BYTE PTR ds:0x9ae49261
  409994:	shl    ah,1
  409996:	fimul  WORD PTR [esi]
  409998:	dec    ebx
  409999:	push   eax
  40999a:	mov    esp,DWORD PTR [edx-0x7614a56a]
  4099a0:	in     eax,0xa9
  4099a2:	outs   dx,DWORD PTR cs:[esi]
  4099a4:	test   ebp,eax
  4099a6:	jecxz  0x409986
  4099a8:	and    eax,0xebdc3b6
  4099ad:	retf   0x810
  4099b0:	or     al,bl
  4099b2:	rol    BYTE PTR [edx],1
  4099b4:	mov    dl,0x9b
  4099b6:	repnz xchg dl,ah
  4099b9:	dec    ebp
  4099ba:	repnz or esi,DWORD PTR [edx+0x101e0b9d]
  4099c1:	lahf   
  4099c2:	ja     0x4099c5
  4099c4:	mov    al,0x67
  4099c6:	(bad)  
  4099c7:	shl    BYTE PTR ds:0xac32d583,1
  4099cd:	sub    cl,BYTE PTR [edi]
  4099cf:	stos   DWORD PTR es:[edi],eax
  4099d0:	ins    BYTE PTR es:[edi],dx
  4099d1:	loop   0x4099c5
  4099d3:	repz xchg esp,eax
  4099d5:	inc    ecx
  4099d6:	repnz mov bl,0x63
  4099d9:	mov    edi,0xd5f8420a
  4099de:	xchg   esp,eax
  4099df:	in     eax,dx
  4099e0:	pushf  
  4099e1:	jl     0x409994
  4099e3:	mov    ch,BYTE PTR [ecx+ecx*8]
  4099e6:	scas   eax,DWORD PTR es:[edi]
  4099e7:	adc    BYTE PTR [ecx],al
  4099e9:	cwde   
  4099ea:	jle    0x409976
  4099ec:	xchg   esi,eax
  4099ed:	jns    0x409a22
  4099ef:	cmp    al,0x53
  4099f1:	fnstcw WORD PTR [ebp+0x77]
  4099f4:	xor    DWORD PTR [eax],edx
  4099f6:	sub    esi,DWORD PTR [eax+0x746a73eb]
  4099fc:	ret    
  4099fd:	sub    DWORD PTR [eax+0xd1b5b59],0x7a
  409a04:	mov    ds:0xcf2de1fb,al
  409a09:	or     BYTE PTR [ebx+0x113657cf],dh
  409a0f:	inc    ebx
  409a10:	fwait
  409a11:	data16 jne 0x4099e5
  409a14:	das    
  409a15:	stos   BYTE PTR es:[edi],al
  409a16:	pop    ecx
  409a17:	jecxz  0x4099c6
  409a19:	adc    dl,0xd
  409a1c:	mov    eax,ds:0x4b5968f7
  409a21:	xor    dl,BYTE PTR ss:[ecx-0x6aa7cddc]
  409a28:	ins    BYTE PTR es:[edi],dx
  409a29:	pop    edi
  409a2a:	ret    
  409a2b:	outs   dx,DWORD PTR ds:[esi]
  409a2c:	jb     0x409a57
  409a2e:	jne    0x409a66
  409a30:	mov    dl,0x1d
  409a32:	xchg   edi,eax
  409a33:	inc    esi
  409a34:	mov    dh,0xa8
  409a36:	inc    esi
  409a37:	xlat   BYTE PTR ds:[ebx]
  409a38:	xchg   ebx,eax
  409a39:	(bad)  
  409a3a:	pop    ebp
  409a3b:	add    BYTE PTR [esi-0x2d22f01d],0xd7
  409a42:	mov    esi,0xf3da7313
  409a47:	popa   
  409a48:	mov    DWORD PTR [edi],edi
  409a4a:	pop    ebx
  409a4b:	adc    DWORD PTR [eax+0x1a2b34fc],edi
  409a51:	mov    DWORD PTR [eax-0x1d],edx
  409a54:	xor    ecx,esp
  409a56:	js     0x409a59
  409a58:	mov    eax,0xb0825788
  409a5d:	in     eax,0x74
  409a5f:	stc    
  409a60:	xchg   edx,eax
  409a61:	fnstsw WORD PTR [eax-0x12]
  409a64:	jbe    0x409ada
  409a66:	jecxz  0x409a97
  409a68:	mov    cl,0x74
  409a6a:	pop    esi
  409a6b:	add    DWORD PTR [ebp+0x6dc4b8ab],0xffffff89
  409a72:	mul    DWORD PTR ds:0xe8318e21
  409a78:	xchg   esp,eax
  409a79:	stos   DWORD PTR es:[edi],eax
  409a7a:	ins    BYTE PTR es:[edi],dx
  409a7b:	mov    cl,BYTE PTR [edx-0x8]
  409a7e:	mov    dh,BYTE PTR [eax+0x6154efb9]
  409a84:	stc    
  409a85:	sbb    BYTE PTR [ebx],bl
  409a87:	outs   dx,BYTE PTR ds:[esi]
  409a88:	js     0x409ab6
  409a8a:	jmp    0xa43daa80
  409a8f:	js     0x409a85
  409a91:	scas   al,BYTE PTR es:[edi]
  409a92:	jae    0x409a73
  409a94:	adc    eax,0xe29bd167
  409a99:	stos   BYTE PTR es:[edi],al
  409a9a:	jg     0x409a1c
  409a9c:	mov    edx,0xa46dd6d9
  409aa1:	push   ecx
  409aa2:	cwde   
  409aa3:	jo     0x409a7c
  409aa5:	pop    edi
  409aa6:	iret   
  409aa7:	pop    edi
  409aa8:	inc    edx
  409aa9:	fcom   st(0)
  409aab:	ret    
  409aac:	in     al,dx
  409aad:	mov    edi,0x8e995956
  409ab2:	mov    edx,0xed1bb130
  409ab7:	(bad)  
  409ab8:	loope  0x409b04
  409aba:	inc    esi
  409abb:	inc    ebp
  409abc:	sar    BYTE PTR [edx],1
  409abe:	dec    eax
  409abf:	mov    WORD PTR ds:0x63a01d52,es
  409ac5:	push   edx
  409ac6:	ror    DWORD PTR [ebx+0x4aada94a],0x6c
  409acd:	cld    
  409ace:	sbb    al,0xa7
  409ad0:	dec    ebx
  409ad1:	adc    esi,DWORD PTR [edi-0x16ae883]
  409ad7:	xor    BYTE PTR [edx-0x28b99c4],cl
  409add:	retf   0x495a
  409ae0:	push   0xffffffb6
  409ae2:	cld    
  409ae3:	in     eax,0xd7
  409ae5:	stc    
  409ae6:	jge    0x409b50
  409ae8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ae9:	das    
  409aea:	jl     0x409a7a
  409aec:	call   0xe0091b09
  409af1:	mulps  xmm7,XMMWORD PTR [edi+0x45]
  409af5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409af6:	pop    es
  409af7:	(bad)  
  409af8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409af9:	daa    
  409afa:	adc    eax,0x6eb9354b
  409aff:	ficom  DWORD PTR [ecx+ebx*8-0x4be19a18]
  409b06:	imul   ebx,DWORD PTR [edi-0x7e],0xffffff95
  409b0a:	jle    0x409b27
  409b0c:	fmul   DWORD PTR [esp-0xe0513fa]
  409b13:	pusha  
  409b14:	adc    dl,BYTE PTR [ebx-0x3d109fb2]
  409b1a:	stos   DWORD PTR es:[edi],eax
  409b1b:	jp     0x409b4f
  409b1d:	int3   
  409b1e:	jmp    0x409b02
  409b20:	ins    BYTE PTR es:[edi],dx
  409b21:	sti    
  409b22:	aaa    
  409b23:	jae    0x409b44
  409b25:	push   cs
  409b26:	scas   eax,DWORD PTR es:[edi]
  409b27:	mov    ?,WORD PTR [edx]
  409b29:	into   
  409b2a:	dec    edx
  409b2b:	xchg   ebx,eax
  409b2c:	jl     0x409ab6
  409b2e:	xchg   ebx,eax
  409b2f:	mov    ah,0xc1
  409b31:	jnp    0x409b1b
  409b33:	or     esi,ecx
  409b35:	and    eax,0x6aa66c74
  409b3a:	or     eax,0xcf26f81d
  409b3f:	sahf   
  409b40:	pop    ebp
  409b41:	ins    DWORD PTR es:[edi],dx
  409b42:	out    dx,al
  409b43:	pop    ds
  409b44:	adc    ecx,DWORD PTR [edx-0x679bfb8]
  409b4a:	gs enter 0x110e,0x61
  409b4f:	sub    eax,0xb4c5d788
  409b54:	shl    ah,cl
  409b56:	sub    eax,0xd3124c00
  409b5b:	jl     0x409b7c
  409b5d:	imul   ebp,DWORD PTR [ecx-0x4d],0x7c73af40
  409b64:	pop    edi
  409b65:	scas   al,BYTE PTR es:[edi]
  409b66:	add    DWORD PTR [esi+0x5d41ff66],ebx
  409b6c:	dec    esi
  409b6d:	mov    ebp,0xb8f898d1
  409b72:	aam    0xeb
  409b74:	dec    eax
  409b75:	push   ebx
  409b77:	aam    0xfc
  409b79:	enter  0x7688,0x56
  409b7d:	clc    
  409b7e:	and    eax,0xdd633313
  409b84:	jmp    0x9268a50c
  409b89:	nop
  409b8a:	dec    esi
  409b8b:	jb     0x409bbc
  409b8d:	mov    ebx,eax
  409b8f:	shl    BYTE PTR [ebp-0x2ff578bd],cl
  409b95:	cmp    DWORD PTR [edx+0x1f],0xffffffe7
  409b99:	clc    
  409b9a:	pop    ss
  409b9b:	int3   
  409b9c:	or     esp,esp
  409b9e:	adc    BYTE PTR [edi+0x25],ah
  409ba1:	shl    cl,cl
  409ba3:	jmp    0xf0ff:0x327588e2
  409baa:	mov    ds:0xc674fe70,eax
  409baf:	repz ror bl,1
  409bb2:	push   cs
  409bb3:	mov    esp,0x24578aa9
  409bb8:	xchg   edx,eax
  409bb9:	sar    dh,0xbc
  409bbc:	inc    ebp
  409bbd:	mov    edi,0x3bbaf0b0
  409bc2:	mov    edi,0x37873759
  409bc7:	in     eax,dx
  409bc8:	jo     0x409b74
  409bca:	sti    
  409bcb:	sub    dh,bl
  409bcd:	xor    BYTE PTR [ebx+0x42],bh
  409bd0:	aad    0xb9
  409bd2:	adc    al,cl
  409bd4:	(bad)  
  409bd6:	jp     0x409be7
  409bd8:	adc    BYTE PTR [ecx],ah
  409bda:	jbe    0x409bf6
  409bdc:	ds into 
  409bde:	ins    DWORD PTR es:[edi],dx
  409bdf:	mov    dl,0x50
  409be1:	xor    eax,0xe90d127
  409be6:	mov    es,WORD PTR [edi+0x64b67c64]
  409bec:	pop    ebx
  409bed:	fwait
  409bee:	les    ebx,FWORD PTR [ecx+0x5f]
  409bf1:	stos   BYTE PTR es:[edi],al
  409bf2:	xor    al,BYTE PTR [edx+0x76]
  409bf5:	clc    
  409bf6:	(bad)  
  409bf7:	repnz sub eax,0x2e0f135c
  409bfd:	push   esi
  409bfe:	add    al,dh
  409c00:	(bad)  
  409c01:	xor    eax,0xf0094001
  409c06:	pop    esi
  409c07:	jns    0x409ba4
  409c09:	pop    eax
  409c0a:	daa    
  409c0b:	(bad)  
  409c0c:	(bad)  
  409c0d:	sub    BYTE PTR [edx],al
  409c0f:	pop    esi
  409c10:	es jnp 0x409b98
  409c13:	xor    BYTE PTR [ecx],al
  409c15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c16:	mov    BYTE PTR [edi],bl
  409c18:	cld    
  409c19:	xchg   edi,eax
  409c1a:	cmc    
  409c1b:	xchg   DWORD PTR [ecx+eiz*1+0xd4ece5c],ebx
  409c22:	add    eax,0x3a0227f4
  409c27:	test   BYTE PTR [edx-0x7ccdca03],ch
  409c2d:	mov    ebp,0xf0d6ab86
  409c32:	mov    dh,0xd6
  409c34:	(bad)  
  409c35:	jbe    0x409bfb
  409c37:	dec    DWORD PTR [ecx+0x31]
  409c3a:	imul   edi,DWORD PTR [edi-0x64],0xd18b2f01
  409c41:	cmp    eax,0x4724924
  409c46:	and    eax,0xd5bd5a89
  409c4b:	push   ebx
  409c4c:	xchg   BYTE PTR [edi-0x4f],bh
  409c4f:	test   BYTE PTR [ebp+0x64fd4107],cl
  409c55:	jl     0x409c50
  409c57:	ds cmp eax,0x381b98d
  409c5d:	mov    ebp,0xad7d3f00
  409c62:	jb     0x409c7c
  409c64:	sub    eax,0xb67548c5
  409c69:	stos   DWORD PTR es:[edi],eax
  409c6a:	imul   ebp,DWORD PTR [esi],0xcde04d41
  409c70:	pop    ebp
  409c71:	dec    edi
  409c72:	mov    cs,WORD PTR [esi]
  409c74:	sub    edi,DWORD PTR [edx-0x1f]
  409c77:	mov    ecx,0xac64a630
  409c7c:	add    cl,BYTE PTR [edx+0x36]
  409c7f:	jbe    0x409c76
  409c81:	jns    0x409c06
  409c83:	ficomp WORD PTR [edi+ebx*8+0x177b528e]
  409c8a:	int    0xdc
  409c8c:	(bad)
  409c8f:	add    DWORD PTR [edi+0x6be9486a],ecx
  409c95:	fld    TBYTE PTR [ebx+0x3e]
  409c98:	xchg   esp,eax
  409c99:	popa   
  409c9a:	xor    BYTE PTR [esi+0x58],0xe6
  409c9e:	jge    0x409d00
  409ca0:	das    
  409ca1:	mov    eax,ds:0xa186b584
  409ca6:	aaa    
  409ca7:	fucomi st,st(7)
  409ca9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409caa:	sub    BYTE PTR [ecx-0x1c],dl
  409cad:	mov    cl,0x4e
  409caf:	shl    eax,0xa5
  409cb2:	shl    BYTE PTR [ebp+edx*8-0x4a0bbbca],cl
  409cb9:	out    dx,eax
  409cba:	add    al,0x97
  409cbc:	js     0x409c79
  409cbe:	cmp    eax,0xe2de68dc
  409cc3:	inc    edi
  409cc4:	mov    bl,0xaa
  409cc6:	xchg   BYTE PTR [esi-0x56],dh
  409cc9:	fld    st(1)
  409ccb:	call   DWORD PTR [edi-0x1d]
  409cce:	mov    al,0x13
  409cd0:	or     DWORD PTR [eax],esi
  409cd2:	js     0x409d4a
  409cd4:	mov    edi,0x2797c790
  409cd9:	and    eax,0x386e4606
  409cde:	mov    cl,0xfc
  409ce0:	mov    gs,edx
  409ce2:	push   cs
  409ce3:	inc    ebx
  409ce4:	push   0xab5557fb
  409ce9:	bound  ebx,QWORD PTR [ebx+0x1f638a23]
  409cef:	cmp    ah,bh
  409cf1:	out    dx,eax
  409cf2:	imul   ebp,DWORD PTR [eax+0x33],0x6b
  409cf6:	sbb    al,0xaf
  409cf8:	fsubr  st(2),st
  409cfa:	imul   ebx,DWORD PTR [edi],0xdf587e75
  409d00:	mov    edx,fs
  409d02:	neg    BYTE PTR [ebx]
  409d04:	inc    esp
  409d05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d06:	dec    ecx
  409d07:	sbb    ecx,DWORD PTR [ebx+eiz*2-0x27]
  409d0b:	cs dec esi
  409d0d:	sbb    ecx,ebx
  409d0f:	sbb    al,0xb0
  409d11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d12:	sub    ecx,DWORD PTR [ebp+0x5070438b]
  409d18:	out    0x68,eax
  409d1a:	mov    dh,0x79
  409d1c:	jle    0x409d23
  409d1e:	add    al,0xfe
  409d20:	inc    edi
  409d21:	and    eax,DWORD PTR [ebx]
  409d23:	cmc    
  409d24:	mov    edx,0xcf552c6b
  409d2a:	pop    edi
  409d2b:	mov    esi,0xe277c362
  409d30:	cmp    al,0x72
  409d32:	int3   
  409d33:	mov    esi,0xf2b500d9
  409d38:	ja     0x409d5e
  409d3a:	jecxz  0x409d27
  409d3c:	repz cs push es
  409d3f:	and    BYTE PTR [ebp-0x34085e8b],0x5b
  409d46:	dec    ecx
  409d47:	gs shl ebp,1
  409d4a:	cdq    
  409d4b:	out    0xaa,al
  409d4d:	addr16 jb 0x409d12
  409d50:	push   cs
  409d51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d52:	sti    
  409d53:	jno    0x409cf6
  409d55:	imul   edx,DWORD PTR [edi],0xdc7873d2
  409d5b:	pop    ebx
  409d5c:	mov    al,ds:0x85c4904b
  409d61:	cwde   
  409d62:	xchg   ecx,eax
  409d63:	xchg   esp,eax
  409d64:	in     al,dx
  409d65:	cmp    eax,0x32fa5a8b
  409d6a:	and    al,0x7d
  409d6c:	loopne 0x409d13
  409d6e:	mov    edi,DWORD PTR [ebp+0x7c2205cf]
  409d74:	push   0xac7fb51b
  409d79:	ficom  DWORD PTR [esi+eiz*2+0x51ea6711]
  409d80:	fisubr DWORD PTR ds:0xd9180174
  409d86:	in     al,dx
  409d87:	cmp    al,0x3c
  409d89:	lock in al,dx
  409d8b:	push   ds
  409d8c:	cmp    eax,DWORD PTR [ecx+0x1a]
  409d8f:	loop   0x409d44
  409d91:	jg     0x409dc0
  409d93:	aad    0x99
  409d95:	mov    DWORD PTR [ebp-0x7ed1874b],esp
  409d9b:	pop    esp
  409d9c:	(bad)  
  409d9d:	out    dx,eax
  409d9e:	imul   ebx,DWORD PTR [eax+0x4169d590],0x37
  409da5:	(bad)
  409da9:	jbe    0x409deb
  409dab:	clc    
  409dac:	(bad)  
  409dad:	mov    eax,DWORD PTR [esp+eiz*8]
  409db0:	test   BYTE PTR [ecx-0x188c5a2f],al
  409db6:	rcr    DWORD PTR [ecx-0x11],0xef
  409dba:	in     eax,dx
  409dbb:	fimul  DWORD PTR [ecx-0xedd8be0]
  409dc1:	jmp    0x82e1bf60
  409dc6:	push   esp
  409dc7:	or     ecx,ebx
  409dc9:	imul   DWORD PTR [ebp-0x34ce9fd4]
  409dcf:	int3   
  409dd0:	adc    eax,0xc88f3d30
  409dd5:	or     ebx,ebp
  409dd7:	ror    bl,1
  409dd9:	dec    ebx
  409dda:	jp     0x409daa
  409ddc:	ins    DWORD PTR es:[edi],dx
  409ddd:	cmp    DWORD PTR [ebp-0x4f0f6313],edx
  409de3:	jp     0x409e5f
  409de5:	mov    eax,0x5d73e1d6
  409dea:	xchg   edi,eax
  409deb:	adc    dh,al
  409ded:	aad    0xd
  409def:	xchg   ebx,eax
  409df0:	lods   al,BYTE PTR ds:[esi]
  409df1:	jb     0x409dac
  409df3:	or     eax,0xf8a231eb
  409df8:	sbb    ah,0x5c
  409dfb:	and    esp,esp
  409dfd:	frstor [esi-0x72]
  409e00:	xchg   edx,eax
  409e01:	cs pop eax
  409e03:	jns    0x409e03
  409e05:	jno    0x409e2a
  409e07:	ss gs out dx,al
  409e0a:	f2xm1  
  409e0c:	jecxz  0x409e83
  409e0e:	jle    0x409e6c
  409e10:	jg     0x409e7b
  409e12:	pop    ss
  409e13:	scas   al,BYTE PTR es:[edi]
  409e14:	push   ebp
  409e15:	sbb    al,0x41
  409e17:	daa    
  409e18:	daa    
  409e19:	es mov cs,eax
  409e1c:	xor    eax,edi
  409e1e:	fwait
  409e1f:	mov    ah,0x55
  409e21:	jbe    0x409e14
  409e23:	not    DWORD PTR [ecx-0x47]
  409e26:	mov    cl,0xab
  409e28:	test   esp,edi
  409e2a:	fcmovbe st,st(2)
  409e2c:	in     eax,0x53
  409e2e:	mov    edi,0xaa8d3a5b
  409e33:	jg     0x409e59
  409e35:	and    al,0x17
  409e37:	out    dx,eax
  409e38:	test   eax,0xb33b2bad
  409e3e:	mov    esp,0x8b437956
  409e43:	pop    edi
  409e44:	sbb    bl,0x9c
  409e47:	cmp    BYTE PTR [ebx-0x3d],bh
  409e4a:	cmp    al,0x84
  409e4c:	xchg   BYTE PTR [ebx+0x40],dl
  409e4f:	(bad)  
  409e50:	in     eax,dx
  409e51:	ret    0x2251
  409e54:	mov    ds:0xe1744e2c,al
  409e59:	repnz pop edi
  409e5b:	mov    bh,0x9f
  409e5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e5e:	adc    al,0xa5
  409e60:	push   ds
  409e61:	in     al,0xc9
  409e63:	sbb    ecx,DWORD PTR [eax]
  409e65:	test   eax,0x56ba697d
  409e6a:	jns    0x409e11
  409e6c:	stos   BYTE PTR es:[edi],al
  409e6d:	jg     0x409e1f
  409e6f:	stc    
  409e70:	je     0x409e9a
  409e72:	mul    edx
  409e74:	jmp    0xc698:0x985395d2
  409e7b:	(bad)  
  409e7c:	fcmovu st,st(1)
  409e7e:	cmp    al,ah
  409e80:	xlat   BYTE PTR ds:[ebx]
  409e81:	outs   dx,BYTE PTR ds:[esi]
  409e82:	inc    ebp
  409e83:	out    0x16,eax
  409e85:	neg    DWORD PTR [eax]
  409e87:	shr    BYTE PTR [esi],1
  409e89:	xor    eax,0x13796ad6
  409e8e:	jg     0x409ec6
  409e90:	sub    al,0xc7
  409e92:	pop    esp
  409e93:	shl    DWORD PTR [esp+ebp*4],1
  409e96:	mov    esi,ebp
  409e98:	fdiv   QWORD PTR [ecx-0xfa51b23]
  409e9e:	or     BYTE PTR [edx-0x1c5541ac],ah
  409ea4:	jmp    0xb9d0:0x88fbdc47
  409eab:	imul   ebp,DWORD PTR [ecx],0x5635f467
  409eb1:	hlt    
  409eb2:	push   edx
  409eb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409eb4:	adc    bh,BYTE PTR [ecx-0x4f87fa19]
  409eba:	push   cs
  409ebb:	or     DWORD PTR [edi+0x42],ecx
  409ebe:	push   esp
  409ebf:	push   esp
  409ec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ec1:	or     DWORD PTR [eax+0x16121020],0xf9345d8b
  409ecb:	add    DWORD PTR [ebx],eax
  409ecd:	pop    ecx
  409ece:	icebp  
  409ecf:	mov    ebx,ds
  409ed1:	jae    0x409e92
  409ed3:	pop    ecx
  409ed4:	or     DWORD PTR [ecx-0x72],ebp
  409ed7:	mov    WORD PTR [ebx+0x7c4daeb2],ss
  409edd:	xchg   esp,eax
  409ede:	mov    WORD PTR [edx-0x39fd496d],ds
  409ee4:	fstp   QWORD PTR [ebx+edi*1+0x6b]
  409ee8:	mov    cl,0xfd
  409eea:	aad    0x7b
  409eec:	jne    0x409f0a
  409eee:	pop    esi
  409eef:	push   es
  409ef0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ef1:	jge    0x409f5d
  409ef3:	stos   DWORD PTR es:[edi],eax
  409ef4:	hlt    
  409ef5:	shl    DWORD PTR [edx],0x48
  409ef8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ef9:	mov    al,ds:0x57b49914
  409efe:	push   esi
  409eff:	dec    ebx
  409f00:	pop    ds
  409f01:	popa   
  409f02:	lods   al,BYTE PTR ds:[esi]
  409f03:	push   eax
  409f04:	mov    ds:0xd4f9ac73,al
  409f09:	pop    esi
  409f0a:	and    DWORD PTR [edx-0x396e60c6],esp
  409f10:	fmul   DWORD PTR [edx+0x2c]
  409f13:	lea    eax,[esi]
  409f15:	xor    DWORD PTR [ecx],0x13
  409f18:	ret    
  409f19:	fnstenv [edi+0x27]
  409f1c:	jne    0x409f81
  409f1e:	jmp    0xe999:0xd1d24aaa
  409f25:	sbb    eax,0x8d69eed9
  409f2a:	adc    ecx,esi
  409f2c:	dec    edi
  409f2d:	int    0xd3
  409f2f:	or     al,0xc3
  409f31:	(bad)  
  409f32:	jne    0x409f05
  409f34:	daa    
  409f35:	mov    ds:0x65f39478,eax
  409f3a:	popf   
  409f3b:	gs adc dl,dh
  409f3e:	sub    eax,0x2022a0bc
  409f43:	push   ds
  409f44:	xchg   esi,eax
  409f45:	pop    ds
  409f46:	pop    esp
  409f47:	stc    
  409f48:	aad    0xce
  409f4a:	jge    0x409f5e
  409f4c:	jnp    0x409f97
  409f4e:	dec    eax
  409f4f:	dec    esi
  409f50:	inc    edx
  409f51:	imul   esi,ebx,0x764753f8
  409f57:	iret   
  409f58:	dec    ecx
  409f59:	add    BYTE PTR [ecx],al
  409f5b:	fsubr  DWORD PTR [edi-0x2a]
  409f5e:	inc    esp
  409f5f:	add    esp,edi
  409f61:	retf   0x6211
  409f64:	ins    DWORD PTR es:[edi],dx
  409f65:	push   0x909b9589
  409f6a:	loop   0x409fc1
  409f6c:	shl    DWORD PTR [edx+0x22228db4],1
  409f72:	mov    cl,BYTE PTR [ebp+0x6b25150e]
  409f78:	sbb    eax,0xba714c64
  409f7d:	xor    eax,0x58779d3e
  409f82:	mov    bl,0x6f
  409f84:	jb     0x409fab
  409f86:	retf   0xf0ad
  409f89:	sahf   
  409f8a:	scas   al,BYTE PTR es:[edi]
  409f8b:	outs   dx,DWORD PTR ds:[esi]
  409f8c:	(bad)  
  409f8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f8e:	pop    ecx
  409f8f:	jae    0x409fb5
  409f91:	scas   al,BYTE PTR es:[edi]
  409f92:	scas   eax,DWORD PTR es:[edi]
  409f93:	jmp    0xa8f3db55
  409f98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f99:	aaa    
  409f9a:	mov    ds:0x425665ab,eax
  409f9f:	in     eax,dx
  409fa0:	jl     0x409f43
  409fa2:	call   0xdddfe9cc
  409fa7:	push   eax
  409fa8:	shr    BYTE PTR [ecx+0x2a551caa],0x1f
  409faf:	jne    0x409f65
  409fb1:	call   0x27b9:0x9ef44bf0
  409fb8:	pop    eax
  409fb9:	mov    bl,0x31
  409fbb:	pop    eax
  409fbc:	imul   edx,ebp,0x5906ca41
  409fc2:	sub    eax,0x2aafe648
  409fc7:	mov    eax,DWORD PTR [edx+0x5f]
  409fca:	leave  
  409fcb:	push   esp
  409fcc:	fild   DWORD PTR [eax]
  409fce:	xor    BYTE PTR [eax],cl
  409fd0:	cmp    esi,edx
  409fd2:	push   ebx
  409fd3:	je     0x409ff0
  409fd5:	jo     0x409fd5
  409fd7:	popf   
  409fd8:	push   cs
  409fd9:	lea    ebp,[eax-0x11cc26ac]
  409fdf:	push   cs
  409fe0:	cdq    
  409fe1:	lea    edx,[esi-0x17d409e0]
  409fe7:	cld    
  409fe8:	stos   DWORD PTR es:[edi],eax
  409fe9:	fcom   QWORD PTR [eax+0x2d]
  409fec:	mov    dh,0x16
  409fee:	es jle 0x409fe3
  409ff1:	mul    ah
  409ff3:	into   
  409ff4:	mov    WORD PTR [ecx],gs
  409ff6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ff7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ff8:	cmp    DWORD PTR ds:0x525b3ea3,edx
  409ffe:	popf   
  409fff:	imul   BYTE PTR [edx+0x49]
  40a002:	push   esp
  40a003:	mov    eax,ds:0x87997882
  40a008:	les    edi,FWORD PTR [edx+0x39]
  40a00b:	jecxz  0x40a049
  40a00d:	lods   al,BYTE PTR fs:[esi]
  40a00f:	fidivr DWORD PTR [ebp+0x2c1168e9]
  40a015:	mov    DWORD PTR [edx],edi
  40a017:	scas   eax,DWORD PTR es:[edi]
  40a018:	xchg   edx,eax
  40a019:	xchg   ebx,esp
  40a01b:	aad    0x91
  40a01d:	(bad)  [esi+0x68]
  40a020:	inc    esp
  40a021:	frstor [ebp+0x5c]
  40a024:	or     BYTE PTR [edi+eiz*1],0x99
  40a028:	(bad)  ds:0x639f7025
  40a02e:	push   cs
  40a02f:	mov    bl,0xcf
  40a031:	pop    edi
  40a032:	add    DWORD PTR [edi],edx
  40a034:	outs   dx,DWORD PTR ds:[esi]
  40a035:	or     bh,BYTE PTR [eax-0x261685b0]
  40a03b:	loopne 0x409ff8
  40a03d:	clc    
  40a03e:	jb     0x40a0b3
  40a040:	mov    edx,0xa3a3ee92
  40a045:	ins    DWORD PTR es:[edi],dx
  40a046:	popa   
  40a047:	ror    DWORD PTR [ecx+0x4bdc59b9],cl
  40a04d:	int3   
  40a04e:	mov    ah,0x91
  40a050:	mov    DWORD PTR [ebx],ecx
  40a052:	jne    0x40a00d
  40a054:	ficomp DWORD PTR [eax-0x34]
  40a057:	dec    edi
  40a058:	je     0x40a06e
  40a05a:	pop    ecx
  40a05b:	add    al,0x22
  40a05d:	outs   dx,BYTE PTR ds:[esi]
  40a05e:	sbb    bl,BYTE PTR [eax+edx*2]
  40a061:	fisttp DWORD PTR [ecx+0x4737a93b]
  40a067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a068:	xchg   ebp,eax
  40a069:	pusha  
  40a06a:	sub    ecx,DWORD PTR [edx-0x3ec711b9]
  40a070:	int3   
  40a071:	pusha  
  40a072:	out    dx,eax
  40a073:	std    
  40a074:	jecxz  0x409ffd
  40a076:	fmul   st,st(2)
  40a078:	leave  
  40a079:	mov    dl,0x1d
  40a07b:	fisttp QWORD PTR [eax]
  40a07d:	out    dx,eax
  40a07e:	js     0x40a0d8
  40a080:	mov    dl,0xe1
  40a082:	adc    ecx,DWORD PTR [eax]
  40a084:	push   DWORD PTR [esi-0xe]
  40a087:	pop    edx
  40a088:	jo     0x40a0c2
  40a08a:	lods   eax,DWORD PTR ds:[esi]
  40a08b:	(bad)  
  40a08c:	into   
  40a08d:	test   al,0xe7
  40a08f:	xor    DWORD PTR [edx-0x1848808b],eax
  40a095:	sbb    bh,0x27
  40a098:	adc    al,0x67
  40a09a:	and    al,0xf2
  40a09c:	or     DWORD PTR [edi+0x9f97ba0],esp
  40a0a2:	add    al,0x8
  40a0a4:	cli    
  40a0a5:	xchg   esp,eax
  40a0a6:	(bad)  
  40a0a7:	je     0x40a09f
  40a0a9:	scas   al,BYTE PTR es:[edi]
  40a0aa:	in     al,dx
  40a0ab:	inc    edx
  40a0ac:	imul   edi,ebp,0x3b0bcc3d
  40a0b2:	xor    esi,edi
  40a0b4:	jl     0x40a03f
  40a0b6:	add    al,0xc2
  40a0b8:	loopne 0x40a0b8
  40a0ba:	mov    ?,WORD PTR [ecx]
  40a0bc:	xchg   edx,eax
  40a0bd:	pop    ds
  40a0be:	popa   
  40a0bf:	test   al,0x93
  40a0c1:	leave  
  40a0c2:	sub    ah,BYTE PTR [esi+0x26de3b8f]
  40a0c8:	lock push ecx
  40a0ca:	fwait
  40a0cb:	jb     0x40a065
  40a0cd:	clc    
  40a0ce:	dec    ebx
  40a0cf:	inc    ecx
  40a0d0:	les    edi,FWORD PTR [ecx+0x58]
  40a0d3:	fwait
  40a0d4:	mov    eax,0x7cc8cd8c
  40a0d9:	call   0xa396:0x7a7257d6
  40a0e0:	cs stos DWORD PTR es:[edi],eax
  40a0e2:	push   edx
  40a0e3:	sub    BYTE PTR [eax+0x8],bh
  40a0e6:	jmp    0x53bb:0x6b8a017c
  40a0ed:	mov    dl,0x39
  40a0ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0f0:	pop    ss
  40a0f1:	and    bl,cl
  40a0f3:	fnstcw WORD PTR [ecx-0x1]
  40a0f6:	retf   0x6cd9
  40a0f9:	pop    ds
  40a0fa:	and    al,0xe9
  40a0fc:	xchg   DWORD PTR [ecx-0x2713effe],edx
  40a102:	cmp    BYTE PTR [ecx],cl
  40a104:	repz aas 
  40a106:	mov    cl,0xa3
  40a108:	mov    ch,0xfd
  40a10a:	push   esp
  40a10b:	pop    ss
  40a10c:	outs   dx,DWORD PTR ds:[esi]
  40a10d:	ret    
  40a10e:	pop    ss
  40a10f:	dec    edx
  40a110:	cmp    BYTE PTR [ecx],al
  40a112:	dec    ebx
  40a113:	jle    0x40a0bc
  40a115:	dec    BYTE PTR [eax-0x6ec2ece4]
  40a11b:	sahf   
  40a11c:	fcom   QWORD PTR [ebp+0x1d]
  40a11f:	jl     0x40a195
  40a121:	jbe    0x40a11e
  40a123:	xor    ecx,DWORD PTR [ebx-0x65]
  40a126:	pop    edx
  40a127:	pushf  
  40a128:	jo     0x40a109
  40a12a:	or     esp,DWORD PTR [ebp+0x65]
  40a12d:	fwait
  40a12e:	pop    edi
  40a12f:	pop    ecx
  40a130:	adc    al,0x2e
  40a132:	loop   0x40a149
  40a134:	fmul   QWORD PTR [edx+0x40]
  40a137:	and    edi,DWORD PTR [eax+0x33895960]
  40a13d:	es dec edi
  40a13f:	or     al,0xa4
  40a141:	inc    eax
  40a142:	xor    edx,DWORD PTR [edx+eax*4+0x2c0f382a]
  40a149:	popa   
  40a14a:	and    dl,dh
  40a14c:	stos   DWORD PTR es:[edi],eax
  40a14d:	aas    
  40a14e:	xlat   BYTE PTR ds:[ebx]
  40a14f:	test   eax,0x986f669e
  40a154:	xchg   esi,eax
  40a155:	sbb    eax,0x4b2ec6f8
  40a15a:	out    0x89,al
  40a15c:	and    al,bh
  40a15e:	scas   al,BYTE PTR es:[edi]
  40a15f:	mov    al,ds:0x5fdcd3e
  40a164:	lds    esi,FWORD PTR [ecx+0x62]
  40a167:	leave  
  40a168:	std    
  40a169:	jecxz  0x40a187
  40a16b:	dec    ebx
  40a16c:	xchg   esi,eax
  40a16d:	jecxz  0x40a1e2
  40a16f:	out    0x91,eax
  40a171:	pop    esi
  40a172:	sbb    al,0x39
  40a174:	cmp    esi,edi
  40a176:	mov    edi,0xc6435297
  40a17b:	out    dx,eax
  40a17c:	out    dx,eax
  40a17d:	int    0xac
  40a17f:	loopne 0x40a1a5
  40a181:	and    bh,BYTE PTR [edi]
  40a183:	shl    esp,cl
  40a185:	popa   
  40a186:	sub    ebx,DWORD PTR [edx]
  40a188:	mov    eax,ds:0x3336dd22
  40a18d:	push   edx
  40a18e:	jl     0x40a1ba
  40a190:	cld    
  40a191:	daa    
  40a192:	mov    eax,0xce879ad6
  40a197:	lock push edi
  40a199:	call   0xbc1579c0
  40a19e:	cld    
  40a19f:	gs pusha 
  40a1a1:	loopne 0x40a1b9
  40a1a3:	add    ecx,DWORD PTR [eax-0x3d]
  40a1a6:	scas   eax,DWORD PTR es:[edi]
  40a1a7:	push   ss
  40a1a8:	pop    edx
  40a1a9:	mov    ds,WORD PTR [ebx+0x43]
  40a1ac:	sbb    al,0xf4
  40a1ae:	adc    DWORD PTR [esi-0x7aa78336],ecx
  40a1b4:	xor    edi,DWORD PTR [ecx]
  40a1b6:	ins    DWORD PTR es:[edi],dx
  40a1b7:	pop    ebp
  40a1b8:	mov    al,ds:0xdcae52e5
  40a1bd:	arpl   si,bx
  40a1bf:	push   ebx
  40a1c0:	fadd   QWORD PTR [esp+ebx*8-0x5b]
  40a1c4:	pop    edi
  40a1c5:	(bad)  
  40a1c6:	mov    ?,WORD PTR [eax]
  40a1c8:	mov    ah,0x6
  40a1ca:	sbb    DWORD PTR [esi+eax*2-0x2eddfb50],edx
  40a1d1:	mov    ebx,0x38005038
  40a1d6:	scas   eax,DWORD PTR es:[edi]
  40a1d7:	jno    0x40a1fb
  40a1d9:	mov    ch,0x48
  40a1db:	mov    al,ds:0x37cc64db
  40a1e0:	popa   
  40a1e1:	ss pop ebp
  40a1e3:	sub    al,0xf8
  40a1e5:	fsub   DWORD PTR [ebx]
  40a1e7:	pop    edi
  40a1e8:	sbb    BYTE PTR [ebx+0xa],al
  40a1eb:	xor    edx,DWORD PTR [edx]
  40a1ed:	dec    ecx
  40a1ee:	or     BYTE PTR [edx-0x4b34eccf],dh
  40a1f4:	xchg   ecx,eax
  40a1f5:	test   DWORD PTR [ebx-0x7badaaa2],0xf03bd227
  40a1ff:	jne    0x40a21b
  40a205:	mov    eax,DWORD PTR [ebp-0x4]
  40a208:	mov    esi,DWORD PTR [ebp-0x8]
  40a20b:	xor    eax,edx
  40a20d:	xor    esi,edx
  40a20f:	add    eax,ecx
  40a211:	add    esi,ecx
  40a213:	imul   eax,esi
  40a216:	jmp    0x40a256
  40a21b:	mov    eax,DWORD PTR [ebp+0xc]
  40a21e:	mov    eax,DWORD PTR [eax+0x78]
  40a221:	mov    DWORD PTR [ebp+0xc],eax
  40a224:	mov    eax,DWORD PTR [ebp-0x4]
  40a227:	mov    esi,DWORD PTR [ebp-0x8]
  40a22a:	xor    eax,edx
  40a22c:	xor    esi,edx
  40a22e:	add    eax,ecx
  40a230:	add    esi,ecx
  40a232:	imul   eax,esi
  40a235:	mov    esi,DWORD PTR [ebp+0xc]
  40a238:	cmp    esi,eax
  40a23a:	mov    eax,DWORD PTR [ebp-0x4]
  40a23d:	je     0x40a208
  40a243:	xor    eax,edx
  40a245:	add    eax,ecx
  40a247:	mov    ecx,DWORD PTR [ebp+0xc]
  40a24a:	imul   eax,ecx
  40a24d:	add    eax,DWORD PTR [ebp+0x8]
  40a250:	mov    DWORD PTR [ebp+0xc],eax
  40a253:	mov    eax,DWORD PTR [ebp+0xc]
  40a256:	pop    esi
  40a257:	leave  
  40a258:	ret    0x8
  40a25b:	push   ebp
  40a25c:	mov    ebp,esp
  40a25e:	sub    esp,0x10
  40a261:	sbb    eax,DWORD PTR ds:0x413c88
  40a267:	mov    eax,0xf89c85b0
  40a26c:	xor    edx,edx
  40a26e:	xor    edx,DWORD PTR ds:0x414014
  40a274:	sub    DWORD PTR ds:0x413cf4,edx
  40a27a:	mov    DWORD PTR [ebp-0x4],eax
  40a27d:	add    ecx,ecx
  40a27f:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40a286:	or     DWORD PTR ds:0x414014,edi
  40a28c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a28f:	push   esi
  40a290:	mov    edx,0x7510894
  40a295:	add    esi,0x25d7
  40a29b:	xor    ecx,edx
  40a29d:	mov    DWORD PTR ds:0x413d30,0x18
  40a2a7:	cmp    DWORD PTR ds:0x413d30,0x0
  40a2ae:	je     0x40a2e4
  40a2b4:	cmp    DWORD PTR ds:0x413d30,0x19
  40a2bb:	jne    0x40a2cc
  40a2c1:	push   0x413ce8
  40a2c6:	call   DWORD PTR ds:0x41679c
  40a2cc:	mov    esi,DWORD PTR ds:0x413d30
  40a2d2:	dec    esi
  40a2d3:	mov    DWORD PTR ds:0x413d30,esi
  40a2d9:	jmp    0x40a2a7
  40a2de:	add    esi,DWORD PTR ds:0x413d24
  40a2e4:	mov    esi,0x3272dc
  40a2e9:	neg    DWORD PTR ds:0x413d24
  40a2ef:	push   edi
  40a2f0:	mov    edi,DWORD PTR [ebp+0x10]
  40a2f3:	adc    DWORD PTR ds:0x414008,0x741e
  40a2fd:	add    ecx,esi
  40a2ff:	cmp    ecx,edi
  40a301:	mov    DWORD PTR ds:0x413c80,0x1b1e
  40a30b:	je     0x40a474
  40a311:	mov    ecx,DWORD PTR [ebp-0x4]
  40a314:	mov    edi,DWORD PTR [ebp+0x10]
  40a317:	xor    eax,eax
  40a319:	xor    ecx,edx
  40a31b:	adc    DWORD PTR ds:0x413d2c,0x414008
  40a325:	add    ecx,esi
  40a327:	add    edi,0xfabdbeef
  40a32d:	adc    eax,0xffffffff
  40a330:	neg    DWORD PTR ds:0x413c88
  40a336:	xor    eax,0x0
  40a339:	mov    DWORD PTR [ebp-0xc],eax
  40a33c:	push   ebx
  40a33d:	movzx  eax,BYTE PTR ds:0x413d30
  40a344:	adc    DWORD PTR ds:0x414018,eax
  40a34a:	xor    ebx,ebx
  40a34c:	xor    edi,0x8a29a125
  40a352:	mov    eax,ds:0x413c12
  40a357:	and    DWORD PTR ds:0x413cdc,eax
  40a35d:	mov    eax,ecx
  40a35f:	add    eax,0xfabdbeef
  40a364:	mov    DWORD PTR ds:0x413c6c,0x7b3
  40a36e:	adc    ebx,0xffffffff
  40a371:	add    DWORD PTR ds:0x413c88,0x414018
  40a37b:	xor    eax,0x8a29a125
  40a380:	mov    DWORD PTR ds:0x413d18,0x6932
  40a38a:	xor    ebx,0x0
  40a38d:	mov    DWORD PTR ds:0x413cd8,0x53fd
  40a397:	cmp    eax,edi
  40a399:	mov    DWORD PTR ds:0x413c88,0x1215
  40a3a3:	jne    0x40a3c6
  40a3a9:	mov    DWORD PTR ds:0x413c16,0x2565
  40a3b3:	cmp    ebx,DWORD PTR [ebp-0xc]
  40a3b6:	je     0x40a46e
  40a3bc:	jmp    0x40a3c6
  40a3c1:	mov    esi,0x3272dc
  40a3c6:	and    DWORD PTR ds:0x413d30,0x0
  40a3d0:	xor    eax,eax
  40a3d2:	xor    eax,DWORD PTR ds:0x413d30
  40a3d8:	inc    eax
  40a3d9:	mov    ds:0x413d30,eax
  40a3de:	cmp    DWORD PTR ds:0x413d30,0x26
  40a3e5:	jne    0x40a3f9
  40a3eb:	push   0x413d20
  40a3f0:	push   DWORD PTR [ebp-0x10]
  40a3f3:	call   DWORD PTR ds:0x41675c
  40a3f9:	cmp    DWORD PTR ds:0x413d30,0x1f
  40a400:	jb     0x40a3d0
  40a406:	mov    eax,DWORD PTR [ebp-0x4]
  40a409:	mov    edi,DWORD PTR [ebp-0x8]
  40a40c:	xor    edi,edx
  40a40e:	add    edi,esi
  40a410:	mov    esi,DWORD PTR [ebp+0x8]
  40a413:	imul   edi,ecx
  40a416:	mov    ebx,DWORD PTR [ebp+0xc]
  40a419:	xor    eax,edx
  40a41b:	add    eax,ecx
  40a41d:	mov    al,BYTE PTR [ebx+eax*1+0x3272dc]
  40a424:	mov    BYTE PTR [edi+esi*1],al
  40a427:	mov    eax,DWORD PTR [ebp-0x8]
  40a42a:	mov    esi,DWORD PTR [ebp+0x10]
  40a42d:	xor    eax,edx
  40a42f:	xor    ebx,ebx
  40a431:	add    esi,0xfabdbeef
  40a437:	adc    ebx,0xffffffff
  40a43a:	lea    ecx,[ecx+eax*1+0x3272dc]
  40a441:	xor    edi,edi
  40a443:	xor    esi,0x8a29a125
  40a449:	xor    ebx,0x0
  40a44c:	mov    eax,ecx
  40a44e:	add    eax,0xfabdbeef
  40a453:	adc    edi,0xffffffff
  40a456:	xor    eax,0x8a29a125
  40a45b:	xor    edi,0x0
  40a45e:	cmp    eax,esi
  40a460:	jne    0x40a3c1
  40a466:	cmp    edi,ebx
  40a468:	jne    0x40a3c1
  40a46e:	mov    eax,0xf89c85b1
  40a473:	pop    ebx
  40a474:	pop    edi
  40a475:	pop    esi
  40a476:	leave  
  40a477:	ret    0xc
  40a47a:	push   ebp
  40a47b:	mov    ebp,esp
  40a47d:	sub    esp,0xa4
  40a483:	sbb    DWORD PTR ds:0x413cf4,0x6aac
  40a48d:	mov    ecx,DWORD PTR [ebp+0x8]
  40a490:	and    DWORD PTR ds:0x414008,0x0
  40a49a:	mov    eax,ds:0x414008
  40a49f:	inc    eax
  40a4a0:	mov    ds:0x414008,eax
  40a4a5:	cmp    DWORD PTR ds:0x414008,0x6
  40a4ac:	jne    0x40a4c5
  40a4b2:	push   DWORD PTR [ebp-0x18]
  40a4b5:	push   0x41401c
  40a4ba:	push   0x1f9d
  40a4bf:	call   DWORD PTR ds:0x416760
  40a4c5:	cmp    DWORD PTR ds:0x414008,0x5
  40a4cc:	jne    0x40a4dd
  40a4d2:	mov    eax,ds:0x414008
  40a4d7:	inc    eax
  40a4d8:	mov    ds:0x414008,eax
  40a4dd:	cmp    DWORD PTR ds:0x414008,0x1b
  40a4e4:	jb     0x40a49a
  40a4ea:	mov    DWORD PTR ds:0x41401c,0x17
  40a4f4:	cmp    DWORD PTR ds:0x41401c,0x0
  40a4fb:	je     0x40a54c
  40a501:	cmp    DWORD PTR ds:0x41401c,0x6
  40a508:	jne    0x40a524
  40a50e:	push   DWORD PTR [ebp-0x24]
  40a511:	push   0x3b56
  40a516:	push   DWORD PTR [ebp-0x1c]
  40a519:	push   0x73b3
  40a51e:	call   DWORD PTR ds:0x416764
  40a524:	cmp    DWORD PTR ds:0x41401c,0x7
  40a52b:	jne    0x40a53c
  40a531:	mov    eax,ds:0x41401c
  40a536:	dec    eax
  40a537:	mov    ds:0x41401c,eax
  40a53c:	mov    eax,ds:0x41401c
  40a541:	dec    eax
  40a542:	mov    ds:0x41401c,eax
  40a547:	jmp    0x40a4f4
  40a54c:	mov    eax,0x8a87
  40a551:	xor    ax,WORD PTR [ecx+0x20]
  40a555:	not    DWORD PTR ds:0x413cf4
  40a55b:	mov    ecx,0x3b4a
  40a560:	adc    DWORD PTR ds:0x413c0a,0x414008
  40a56a:	add    ax,cx
  40a56d:	movzx  eax,ax
  40a570:	mov    DWORD PTR [ebp-0x18],eax
  40a573:	mov    ecx,DWORD PTR ds:0x413c78
  40a579:	sbb    DWORD PTR ds:0x413d28,ecx
  40a57f:	mov    BYTE PTR [ebp-0x1],0x7d
  40a583:	add    ecx,DWORD PTR ds:0x414000
  40a589:	lea    eax,[ebp-0x1]
  40a58c:	xor    DWORD PTR ds:0x413c78,ecx
  40a592:	mov    DWORD PTR [ebp-0x10],eax
  40a595:	add    DWORD PTR ds:0x413d1c,0x4151
  40a59f:	mov    al,BYTE PTR [ebp-0x1]
  40a5a2:	mov    ecx,DWORD PTR [ebp-0x10]
  40a5a5:	or     DWORD PTR ds:0x413d20,0x66e0
  40a5af:	xor    al,0x70
  40a5b1:	and    DWORD PTR ds:0x414000,0x34d9
  40a5bb:	sub    al,0xc
  40a5bd:	and    DWORD PTR ds:0x413d1c,0x413c70
  40a5c7:	mov    BYTE PTR [ecx],al
  40a5c9:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  40a5d0:	or     DWORD PTR ds:0x413ce0,ecx
  40a5d6:	push   ebx
  40a5d7:	jmp    0x40c95f
  40a5dc:	and    ch,BYTE PTR ds:0xb393b193
  40a5e2:	add    cl,BYTE PTR [edi-0x6bf6fe89]
  40a5e8:	jns    0x40a608
  40a5ea:	popa   
  40a5eb:	loopne 0x40a614
  40a5ed:	push   es
  40a5ee:	jl     0x40a66c
  40a5f0:	pop    es
  40a5f1:	pop    edi
  40a5f2:	jl     0x40a670
  40a5f4:	cmp    al,0x2f
  40a5f6:	xor    DWORD PTR [edx+0x2c7c6009],esi
  40a5fc:	xchg   ebx,eax
  40a5fd:	into   
  40a5fe:	push   esi
  40a5ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a600:	imul   esi,DWORD PTR [ebp+0x73d56227],0x1b
  40a607:	dec    edx
  40a608:	test   al,0xe
  40a60a:	sbb    edx,edx
  40a60c:	imul   esi,DWORD PTR [esi+0x28370c6e],0xffffffcf
  40a613:	and    eax,0xf7932d55
  40a618:	jp     0x40a62c
  40a61a:	iret   
  40a61b:	retf   0xd7d9
  40a61e:	test   eax,0x2fc799
  40a623:	aaa    
  40a624:	dec    ebx
  40a625:	call   0x10:0x3931bd68
  40a62c:	outs   dx,DWORD PTR ds:[esi]
  40a62d:	shl    DWORD PTR [edi+0x1b],1
  40a630:	cmp    al,0x60
  40a632:	lds    edi,FWORD PTR [esi]
  40a634:	cmp    DWORD PTR [ecx-0x839bb51],eax
  40a63a:	add    edx,ecx
  40a63c:	out    0xe3,eax
  40a63e:	xor    ch,al
  40a640:	xor    BYTE PTR [ecx],dl
  40a642:	and    BYTE PTR [ecx],0x90
  40a645:	or     eax,0xb3174a1e
  40a64a:	xchg   ebp,eax
  40a64b:	jmp    0x40a663
  40a64d:	sbb    ebp,DWORD PTR [edi]
  40a64f:	push   ecx
  40a650:	sub    BYTE PTR [ebx+0x37],bl
  40a653:	and    al,BYTE PTR [edi+0x12]
  40a656:	cmp    edx,DWORD PTR [edi]
  40a658:	ins    DWORD PTR es:[edi],dx
  40a659:	not    DWORD PTR [eax]
  40a65b:	jmp    0xd1661a4e
  40a660:	cwde   
  40a661:	das    
  40a662:	aam    0x76
  40a664:	fs test al,0x7d
  40a667:	inc    esi
  40a668:	into   
  40a669:	add    BYTE PTR [esi],al
  40a66b:	(bad)  [edx+0x7b161350]
  40a671:	xchg   edi,eax
  40a672:	mov    ah,0x21
  40a674:	pop    esp
  40a675:	idiv   BYTE PTR ds:[esi]
  40a678:	cmc    
  40a679:	dec    ebp
  40a67a:	mov    ch,0x34
  40a67c:	push   cs
  40a67d:	pop    es
  40a67e:	outs   dx,BYTE PTR ds:[esi]
  40a67f:	mov    dl,0xca
  40a681:	inc    edx
  40a682:	rdmsr  
  40a684:	jb     0x40a60f
  40a686:	or     dl,BYTE PTR ds:0x397eec3f
  40a68c:	mov    DWORD PTR [edx],ecx
  40a68e:	je     0x40a69d
  40a690:	(bad)  
  40a691:	sti    
  40a692:	and    bh,BYTE PTR [esi+0x735ae948]
  40a698:	out    0x7d,al
  40a69a:	sbb    cl,dl
  40a69c:	mov    ds:0x17abba81,eax
  40a6a1:	in     eax,0xc9
  40a6a3:	mov    ds:0xb8d65420,eax
  40a6a8:	int3   
  40a6a9:	jl     0x40a680
  40a6ab:	push   ss
  40a6ac:	lock fst st(5)
  40a6af:	int    0xa1
  40a6b1:	dec    esp
  40a6b2:	push   cs
  40a6b3:	mov    bl,0x6a
  40a6b5:	adc    ebx,edx
  40a6b7:	push   0xffffffa9
  40a6b9:	bound  edi,QWORD PTR [ecx+0x6c]
  40a6bc:	(bad)  [ebx-0x4b8d106e]
  40a6c2:	mov    cl,0x7a
  40a6c4:	push   ebx
  40a6c5:	out    0xaa,al
  40a6c7:	pushf  
  40a6c8:	es sti 
  40a6ca:	push   ds
  40a6cb:	imul   edi,DWORD PTR [ebp-0x6a8da13b],0x8abc491b
  40a6d5:	pop    edi
  40a6d6:	(bad)  
  40a6d7:	cmp    DWORD PTR [eax-0x2ce4644],ebx
  40a6dd:	pop    edx
  40a6de:	xor    BYTE PTR [ecx+0xd],al
  40a6e1:	rol    ebx,cl
  40a6e3:	sub    DWORD PTR [ebp-0x45d45d23],esi
  40a6e9:	int3   
  40a6ea:	mov    ah,0x4e
  40a6ec:	jge    0x40a71f
  40a6ee:	mov    edx,0x5587d4e8
  40a6f3:	cdq    
  40a6f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6f5:	int    0xd3
  40a6f7:	outs   dx,DWORD PTR ds:[esi]
  40a6f8:	add    eax,0xeb6c8ce7
  40a6fd:	sub    esi,DWORD PTR [ebx-0x5d]
  40a700:	jbe    0x40a76a
  40a702:	retf   0xf504
  40a705:	pusha  
  40a706:	es jns 0x40a742
  40a709:	or     DWORD PTR [esi+0x2c8499cd],0xb87cc005
  40a713:	push   edi
  40a714:	cmc    
  40a715:	pop    ds
  40a716:	mov    ds:0x16118d87,al
  40a71b:	push   eax
  40a71c:	jno    0x40a770
  40a71e:	inc    esi
  40a71f:	xchg   edi,eax
  40a720:	jecxz  0x40a74e
  40a722:	ins    BYTE PTR es:[edi],dx
  40a723:	jno    0x40a712
  40a725:	adc    eax,0x599c2511
  40a72a:	xor    cl,BYTE PTR [edi]
  40a72c:	push   ecx
  40a72d:	lods   al,BYTE PTR ds:[esi]
  40a72e:	cmp    DWORD PTR [edi-0x4123d44e],ebx
  40a734:	mov    eax,ds:0x9dc6f022
  40a739:	jmp    0x40a795
  40a73b:	sub    ecx,ebp
  40a73d:	mov    ebx,0x1bd9f735
  40a742:	push   esp
  40a743:	mov    bl,0x80
  40a745:	icebp  
  40a746:	or     eax,esp
  40a748:	xor    eax,0xc2c3688f
  40a74d:	mov    esi,0x68e04f60
  40a752:	add    eax,0xb0609323
  40a757:	and    DWORD PTR [eax],edi
  40a759:	inc    ecx
  40a75a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a75b:	inc    esi
  40a75c:	push   esp
  40a75d:	test   esi,edx
  40a75f:	mov    ds:0x8687e167,al
  40a764:	ret    
  40a765:	cld    
  40a766:	xchg   bl,ah
  40a768:	sbb    cl,BYTE PTR [ebx-0x4690513]
  40a76e:	inc    esp
  40a76f:	ins    BYTE PTR es:[edi],dx
  40a770:	fisub  WORD PTR [edi-0x6cfa90a7]
  40a776:	rol    DWORD PTR [ebx],cl
  40a778:	daa    
  40a779:	or     al,0x1b
  40a77b:	jne    0x40a799
  40a77d:	mov    bh,0x75
  40a77f:	cmp    ebp,DWORD PTR [edi+0x475c2d06]
  40a785:	test   eax,0xa20474ba
  40a78a:	fwait
  40a78b:	xor    BYTE PTR [edi+0x7dbc0a52],dl
  40a791:	or     eax,0xe67cb1d1
  40a796:	les    eax,FWORD PTR [edx]
  40a798:	test   DWORD PTR [ecx+0x694bc56b],ebx
  40a79e:	out    dx,al
  40a79f:	jmp    FWORD PTR [ebx-0x6]
  40a7a2:	jae    0x40a753
  40a7a4:	push   edx
  40a7a5:	sar    BYTE PTR [edx],0xe6
  40a7a8:	cli    
  40a7a9:	hlt    
  40a7aa:	or     eax,0x355e9198
  40a7af:	inc    esi
  40a7b0:	repz aas 
  40a7b2:	(bad)  
  40a7b3:	sti    
  40a7b4:	(bad)  
  40a7b5:	out    dx,al
  40a7b6:	mov    bh,BYTE PTR ds:0x8939d510
  40a7bc:	push   edi
  40a7bd:	int3   
  40a7be:	les    ebx,FWORD PTR [ebp-0x1c4b7794]
  40a7c4:	mov    esi,0x84430fb1
  40a7c9:	push   edi
  40a7ca:	stc    
  40a7cb:	xor    edi,DWORD PTR [ebp-0x3b0d5f4e]
  40a7d1:	or     bl,ch
  40a7d3:	gs and al,0xa0
  40a7d6:	adc    al,0x9c
  40a7d8:	out    0x51,al
  40a7da:	adc    al,0x16
  40a7dc:	pop    esp
  40a7dd:	push   es
  40a7de:	mov    al,0x3
  40a7e0:	loop   0x40a848
  40a7e2:	jg     0x40a828
  40a7e4:	cmc    
  40a7e5:	xchg   al,dh
  40a7e7:	rol    BYTE PTR ds:0xb38f24e1,0x63
  40a7ee:	pop    esp
  40a7ef:	shl    ebp,1
  40a7f1:	(bad)  
  40a7f3:	test   BYTE PTR [esi],0xc8
  40a7f6:	mov    edi,0xc1a7b15c
  40a7fb:	aam    0x8b
  40a7fd:	add    eax,DWORD PTR [ebx]
  40a7ff:	hlt    
  40a800:	daa    
  40a801:	in     al,0xa2
  40a803:	xchg   esp,eax
  40a804:	cli    
  40a805:	xchg   ecx,eax
  40a806:	fcmove st,st(7)
  40a808:	inc    edi
  40a809:	imul   esp,DWORD PTR [eax-0x65abcf49],0xffffffb4
  40a810:	pop    ds
  40a811:	xchg   ebx,eax
  40a812:	xor    DWORD PTR ds:0x24ce756d,eax
  40a818:	jmp    0x71ca:0xd844832e
  40a81f:	inc    edx
  40a820:	stos   BYTE PTR es:[edi],al
  40a821:	dec    edx
  40a822:	dec    edi
  40a823:	sbb    esp,ecx
  40a825:	ds mov edi,0x4448823d
  40a82b:	and    BYTE PTR [edx+0x49],ch
  40a82e:	sub    BYTE PTR [edx-0x3d],bh
  40a831:	int3   
  40a832:	fwait
  40a833:	or     DWORD PTR [ebx],ebp
  40a835:	add    ecx,DWORD PTR [eax+0x2e997b4]
  40a83b:	dec    esi
  40a83c:	(bad)  [edx+0x10c070e]
  40a842:	mov    eax,0xdd9a96b1
  40a847:	xor    eax,0x15135971
  40a84c:	mov    bh,0xb4
  40a84e:	in     eax,0x69
  40a850:	pop    esp
  40a851:	ja     0x40a8c1
  40a853:	in     al,dx
  40a854:	rol    DWORD PTR ds:0xa8a37e63,cl
  40a85a:	shr    BYTE PTR [edx+0x38],cl
  40a85d:	imul   ebp,DWORD PTR [eax],0x51
  40a860:	cmp    al,0xe
  40a862:	mov    dl,0xb9
  40a864:	aas    
  40a865:	xchg   edx,eax
  40a866:	jmp    0xa89a:0x493a4e7e
  40a86d:	push   edx
  40a86e:	lea    ebp,cs:[edx]
  40a871:	jmp    0x93cfe0e9
  40a876:	pusha  
  40a877:	stos   BYTE PTR es:[edi],al
  40a878:	and    dl,BYTE PTR [ecx]
  40a87a:	aad    0x50
  40a87c:	jmp    0x5904:0x62c15221
  40a883:	add    eax,0xbb69d4e1
  40a888:	in     eax,0x39
  40a88a:	pop    es
  40a88b:	pusha  
  40a88c:	icebp  
  40a88d:	cmp    al,cl
  40a88f:	push   ebp
  40a890:	sub    eax,0xbef0c628
  40a895:	adc    eax,0x854295ff
  40a89a:	add    cl,bh
  40a89c:	fsubp  st(6),st
  40a89e:	jecxz  0x40a8fc
  40a8a0:	(bad)  
  40a8a1:	xchg   edx,eax
  40a8a2:	jns    0x40a8b1
  40a8a4:	aam    0xb2
  40a8a6:	cmp    al,0xf4
  40a8a8:	jl     0x40a8ed
  40a8aa:	jmp    0x40a8da
  40a8ac:	push   ss
  40a8ad:	mov    bl,0xfa
  40a8af:	call   0xba42:0x2eed1cbb
  40a8b6:	mov    ah,al
  40a8b8:	outs   dx,DWORD PTR ds:[esi]
  40a8b9:	inc    edx
  40a8ba:	stc    
  40a8bb:	cs shl cl,1
  40a8be:	sets   cl
  40a8c1:	mov    ds:0x62503cad,eax
  40a8c6:	int3   
  40a8c7:	jle    0x40a941
  40a8c9:	les    ecx,FWORD PTR [edi+0x2b]
  40a8cc:	pusha  
  40a8cd:	call   DWORD PTR [eax+0x20]
  40a8d0:	adc    ax,0x7252
  40a8d4:	add    BYTE PTR [esi+0x6c],ch
  40a8d7:	jmp    0xbad808a5
  40a8dc:	pushf  
  40a8dd:	mov    es,edi
  40a8df:	ds out 0xa3,al
  40a8e2:	jb     0x40a8a9
  40a8e4:	shl    BYTE PTR [edx+0x21],0x85
  40a8e8:	xchg   ecx,eax
  40a8e9:	dec    ebp
  40a8ea:	dec    edx
  40a8eb:	ja     0x40a8a0
  40a8ed:	(bad)  
  40a8ee:	jmp    0x7884:0xdfe5e48
  40a8f5:	stos   DWORD PTR es:[edi],eax
  40a8f6:	sub    al,0x76
  40a8f8:	out    dx,eax
  40a8f9:	add    ebx,DWORD PTR [eax]
  40a8fb:	dec    ebp
  40a8fc:	cmp    al,0x2e
  40a8fe:	aas    
  40a8ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a900:	data16 into 
  40a902:	dec    esp
  40a903:	push   es
  40a904:	inc    edi
  40a905:	dec    ebx
  40a906:	imul   ebx,DWORD PTR [esi],0xffffff88
  40a909:	in     eax,0x48
  40a90b:	inc    edx
  40a90c:	aad    0xd7
  40a90e:	sbb    eax,0x12b3cc84
  40a913:	mov    esi,0x42646de2
  40a918:	cli    
  40a919:	(bad)  
  40a91a:	xchg   esp,eax
  40a91b:	(bad)
  40a91e:	mov    bh,0xc
  40a920:	ins    BYTE PTR es:[edi],dx
  40a921:	sub    al,0x43
  40a923:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a924:	fwait
  40a925:	lahf   
  40a926:	int    0x24
  40a928:	mov    ebp,0x9f582883
  40a92d:	nop
  40a92e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a92f:	daa    
  40a930:	out    0xa5,eax
  40a932:	mov    edx,0xbc75c944
  40a937:	jecxz  0x40a9af
  40a939:	sub    eax,0x3ad99212
  40a93e:	fdiv   DWORD PTR [edx]
  40a940:	fcom   QWORD PTR [ebx-0x1a9cab03]
  40a946:	mov    eax,0xd25971bf
  40a94b:	push   ss
  40a94c:	pop    ebp
  40a94d:	and    ah,BYTE PTR [eax-0x65]
  40a950:	jl     0x40a9c7
  40a952:	sub    al,0xb0
  40a954:	ficomp DWORD PTR [esi-0xd]
  40a957:	fdivr  DWORD PTR [edx+0x2bef058b]
  40a95d:	jae    0x40a9dc
  40a95f:	ret    
  40a960:	call   0x3d308233
  40a965:	jbe    0x40a996
  40a967:	jb     0x40a98b
  40a969:	or     al,0xf1
  40a96b:	nop
  40a96c:	fwait
  40a96d:	or     DWORD PTR [ebp+0xdac62e5],0x3a484421
  40a977:	cdq    
  40a978:	ror    bh,0x5f
  40a97b:	or     DWORD PTR [edx-0xe],esp
  40a97e:	adc    ebx,DWORD PTR [edi+0x49572b81]
  40a984:	js     0x40a9dc
  40a986:	jp     0x40a985
  40a988:	jnp    0x40a948
  40a98a:	inc    edi
  40a98b:	cwde   
  40a98c:	push   cs
  40a98d:	cmp    eax,0x65141eda
  40a992:	xchg   esp,esi
  40a994:	jp     0x40a940
  40a996:	cmp    edx,DWORD PTR [esi]
  40a998:	jmp    0x40a94b
  40a99a:	mov    edi,0x609e21c8
  40a99f:	enter  0x5b1,0x37
  40a9a3:	test   eax,0xe56bbb26
  40a9a8:	cmp    eax,0xfd7ffc54
  40a9ad:	dec    eax
  40a9ae:	jno    0x40a9f4
  40a9b0:	jmp    0x40aa08
  40a9b2:	mov    ebx,0xe6a78cdf
  40a9b7:	mov    ah,0xcd
  40a9b9:	mov    dl,BYTE PTR [ebp+0x27738c42]
  40a9bf:	dec    ecx
  40a9c0:	xor    al,0xc
  40a9c2:	jp     0x40aa22
  40a9c4:	push   ss
  40a9c5:	mov    WORD PTR [esi+0x6c],es
  40a9c8:	mov    ch,0x94
  40a9ca:	or     ah,BYTE PTR [ebp-0x70]
  40a9cd:	sbb    DWORD PTR [edx-0x71],esi
  40a9d0:	jne    0x40a9e3
  40a9d2:	sti    
  40a9d3:	dec    ecx
  40a9d4:	add    edx,DWORD PTR [ecx]
  40a9d6:	inc    ecx
  40a9d7:	mov    eax,0x7d22a508
  40a9dc:	sbb    BYTE PTR [ecx-0x5f66e71],ah
  40a9e2:	pop    ecx
  40a9e3:	ds xor ebx,ecx
  40a9e6:	int    0x17
  40a9e8:	ins    DWORD PTR es:[edi],dx
  40a9e9:	sbb    al,0x23
  40a9eb:	int    0x5
  40a9ed:	and    ah,BYTE PTR ds:0x6a167db3
  40a9f3:	inc    edi
  40a9f4:	test   cl,dl
  40a9f6:	cwde   
  40a9f7:	test   eax,0x3512fbd
  40a9fc:	push   0x7a
  40a9fe:	inc    edx
  40a9ff:	jmp    0x40a9b1
  40aa01:	xor    esp,edx
  40aa03:	inc    esp
  40aa04:	xchg   edx,eax
  40aa05:	and    eax,0xa04eea36
  40aa0a:	out    dx,eax
  40aa0b:	mov    ds:0x577959cd,al
  40aa10:	retf   0x36d9
  40aa13:	in     al,dx
  40aa14:	ret    0xd4a8
  40aa17:	xchg   edi,eax
  40aa18:	dec    esp
  40aa19:	fdiv   DWORD PTR [ebp-0x78]
  40aa1c:	xchg   edx,eax
  40aa1d:	push   ds
  40aa1e:	ror    DWORD PTR [edi*2+0x7fce4be2],1
  40aa25:	idiv   DWORD PTR [eax]
  40aa27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa28:	jae    0x40aa73
  40aa2a:	mov    ah,0x7b
  40aa2c:	test   BYTE PTR [edx],ah
  40aa2e:	add    DWORD PTR [eax+0x74ee53d7],edx
  40aa34:	xor    bh,BYTE PTR [edi-0x16fcccb3]
  40aa3a:	pop    ebx
  40aa3b:	imul   ebp,DWORD PTR [edx-0x7a],0x725f9117
  40aa42:	add    DWORD PTR [ebx+0x676ae5d7],0x5a
  40aa49:	sbb    ch,BYTE PTR [esi+0x4ef1654]
  40aa4f:	(bad)  
  40aa50:	xor    eax,0x8e459ff7
  40aa55:	adc    al,0x72
  40aa57:	adc    WORD PTR [esi+0x731f941],bp
  40aa5e:	push   edi
  40aa5f:	stos   DWORD PTR es:[edi],eax
  40aa60:	or     al,0x26
  40aa62:	cmp    BYTE PTR [eax-0x23203744],al
  40aa68:	or     eax,0x527b3b5f
  40aa6d:	(bad)  
  40aa6e:	sbb    al,0x8c
  40aa70:	cld    
  40aa71:	pop    edx
  40aa72:	jmp    DWORD PTR [ecx+ebx*2]
  40aa75:	test   esi,edi
  40aa77:	jb     0x40aa70
  40aa79:	iret   
  40aa7a:	adc    DWORD PTR [eax-0x7185dc7c],eax
  40aa80:	sub    bl,dh
  40aa82:	test   eax,0x2de3bad
  40aa87:	sub    BYTE PTR [edx+0x435e8406],bh
  40aa8d:	mov    WORD PTR [eax+0x259c2feb],ds
  40aa93:	in     eax,dx
  40aa94:	call   DWORD PTR [edi]
  40aa96:	jno    0x40aa4b
  40aa98:	clc    
  40aa99:	xchg   edi,eax
  40aa9a:	ffreep st(2)
  40aa9c:	and    esi,0xffffffc4
  40aa9f:	or     esi,DWORD PTR [ebp+0x15ffd0d7]
  40aaa5:	imul   esp,DWORD PTR [ebx-0x2e3519a3],0xd04ab6f8
  40aaaf:	adc    ecx,DWORD PTR [eax-0x56cc16bd]
  40aab5:	(bad)  [eax-0x60c5f0fc]
  40aabb:	call   0x9beb1e1f
  40aac0:	pop    ebp
  40aac1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aac2:	mov    dh,0x59
  40aac4:	test   al,0x55
  40aac6:	dec    edi
  40aac7:	jmp    0x5cbd:0xa80a2aab
  40aace:	mov    ebx,DWORD PTR [esi-0x19d46cd9]
  40aad4:	sub    eax,0xd2b58c38
  40aad9:	in     eax,0xff
  40aadb:	(bad)  
  40aadc:	fst    DWORD PTR [ebp-0x33bfb200]
  40aae2:	mov    ebp,0xfeef4384
  40aae7:	cdq    
  40aae8:	icebp  
  40aae9:	cld    
  40aaea:	xor    dl,0x91
  40aaed:	repz cmp BYTE PTR ds:0xa313741,al
  40aaf4:	adc    eax,DWORD PTR [ecx+0x4b1a2897]
  40aafa:	inc    edx
  40aafb:	lahf   
  40aafc:	jmp    0xbaa5:0x78763806
  40ab03:	dec    ecx
  40ab04:	push   ss
  40ab05:	adc    BYTE PTR [edi+0x66729393],0x99
  40ab0c:	popa   
  40ab0d:	imul   esp,DWORD PTR [ebx],0x4c
  40ab10:	push   ds
  40ab11:	jne    0x40aaf7
  40ab13:	ins    DWORD PTR es:[edi],dx
  40ab14:	and    al,BYTE PTR ds:0x74aab106
  40ab1a:	cmc    
  40ab1b:	xlat   BYTE PTR ds:[ebx]
  40ab1c:	fwait
  40ab1d:	add    DWORD PTR [esi],esi
  40ab1f:	jg     0x40ab3d
  40ab21:	ss shl eax,cl
  40ab24:	es out 0x9d,eax
  40ab27:	sub    BYTE PTR [edx-0x6ad58e6d],0x44
  40ab2e:	popf   
  40ab2f:	mov    dh,0xc4
  40ab31:	mov    esi,0x5c9452ac
  40ab36:	jae    0x40ab2e
  40ab38:	lods   al,BYTE PTR ds:[esi]
  40ab39:	mul    BYTE PTR [eax-0xfb3ee39]
  40ab3f:	ret    
  40ab40:	xor    dh,dl
  40ab42:	in     eax,dx
  40ab43:	mov    dh,0x4d
  40ab45:	cld    
  40ab46:	pop    esi
  40ab47:	mov    esp,0x66be6fa
  40ab4c:	je     0x40abc7
  40ab4e:	adc    BYTE PTR [eax+0x57],bl
  40ab51:	mov    edx,0x832b177f
  40ab56:	out    0xc8,al
  40ab58:	pushf  
  40ab59:	cdq    
  40ab5a:	xchg   edi,eax
  40ab5b:	(bad)  
  40ab5d:	in     eax,0x9a
  40ab5f:	ret    0xde92
  40ab62:	and    ch,bl
  40ab64:	mov    ebx,0x375d19bb
  40ab69:	mov    fs:0x37234daf,eax
  40ab6f:	popf   
  40ab70:	jb     0x40ab72
  40ab72:	sbb    eax,0x300ccde5
  40ab77:	fsubr  DWORD PTR [eax]
  40ab79:	popa   
  40ab7a:	pop    ecx
  40ab7b:	ins    BYTE PTR es:[edi],dx
  40ab7c:	ficom  DWORD PTR [ebp+0x715432c6]
  40ab82:	mov    dh,0x56
  40ab84:	fbstp  TBYTE PTR [edi-0xa4738cd]
  40ab8a:	(bad)  
  40ab8b:	xchg   ebx,eax
  40ab8c:	and    dh,dh
  40ab8e:	jmp    0x3743cb8
  40ab93:	sub    ebx,ebp
  40ab95:	pusha  
  40ab96:	cld    
  40ab97:	aas    
  40ab98:	popa   
  40ab99:	sbb    al,0x3d
  40ab9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab9c:	jmp    0x85bc:0x22d0623d
  40aba3:	mov    WORD PTR [ecx+0x60],ss
  40aba6:	pop    esi
  40aba7:	pushf  
  40aba8:	lock enter 0xe6e5,0x31
  40abad:	dec    edx
  40abaf:	jg     0x40ab83
  40abb1:	call   0xa2f0:0xb380fb9c
  40abb8:	adc    ah,BYTE PTR [edx-0x5785a77c]
  40abbe:	(bad)  
  40abbf:	lods   eax,DWORD PTR ds:[esi]
  40abc0:	pop    esp
  40abc1:	aaa    
  40abc2:	aas    
  40abc3:	sbb    ah,BYTE PTR [eax]
  40abc5:	jecxz  0x40ac26
  40abc7:	jo     0x40abca
  40abc9:	in     eax,0x85
  40abcb:	adc    ecx,esi
  40abcd:	aam    0x7f
  40abcf:	stos   DWORD PTR es:[edi],eax
  40abd0:	lds    ecx,FWORD PTR [esi+0x77337a96]
  40abd6:	es scas al,BYTE PTR es:[edi]
  40abd8:	adc    eax,0x59349f04
  40abdd:	push   edx
  40abde:	sub    cl,BYTE PTR ds:0x81a4e299
  40abe4:	sbb    ah,BYTE PTR [eax]
  40abe6:	adc    ebp,eax
  40abe8:	push   es
  40abe9:	test   DWORD PTR [esp+edi*4],ecx
  40abec:	loopne 0x40ac45
  40abee:	xchg   bh,bh
  40abf0:	xor    DWORD PTR [ecx+0x79788ac5],ebx
  40abf6:	mov    ah,0xdd
  40abf8:	aaa    
  40abf9:	push   ebp
  40abfa:	movsx  eax,bx
  40abfd:	push   ds
  40abfe:	mov    eax,ds:0xb7afd769
  40ac03:	test   DWORD PTR [edx+0x21],eax
  40ac06:	lahf   
  40ac07:	add    ch,al
  40ac09:	ret    0xb6cf
  40ac0c:	mov    al,ds:0xa4df6eae
  40ac11:	fxch   st(2)
  40ac13:	mov    eax,0x8c5a16d3
  40ac18:	sub    edx,edi
  40ac1a:	dec    eax
  40ac1b:	call   0x812b:0x75251982
  40ac22:	(bad)  [edi]
  40ac24:	scas   al,BYTE PTR es:[edi]
  40ac25:	loop   0x40ac7c
  40ac27:	mov    bl,0xea
  40ac29:	jge    0x40ac7b
  40ac2b:	and    al,BYTE PTR [edx]
  40ac2d:	not    DWORD PTR [eax+ebp*2+0x62]
  40ac31:	xor    BYTE PTR [esi],bh
  40ac33:	and    eax,0x7e979f79
  40ac38:	addr16 test ebp,ebx
  40ac3b:	add    ebp,DWORD PTR [eax+0x76604a45]
  40ac41:	cwde   
  40ac42:	mov    eax,ds:0x2c352e49
  40ac47:	fbld   TBYTE PTR [ecx+0x50]
  40ac4a:	inc    esi
  40ac4b:	loope  0x40abd3
  40ac4d:	call   DWORD PTR [ebx-0x5d]
  40ac50:	jne    0x40ac4c
  40ac52:	push   es
  40ac53:	adc    ebp,eax
  40ac55:	mov    eax,0x34a78dd5
  40ac5a:	and    ax,0xfa1a
  40ac5e:	scas   eax,DWORD PTR es:[edi]
  40ac5f:	inc    eax
  40ac60:	mov    ebp,0x1de9ae6
  40ac65:	sub    esp,ebx
  40ac67:	pushf  
  40ac68:	lahf   
  40ac69:	xor    bl,BYTE PTR [ecx+0x4fe660f6]
  40ac6f:	mov    es,edi
  40ac71:	push   edx
  40ac72:	ss jo  0x40acd6
  40ac75:	movnti DWORD PTR [esp+eiz*8-0x2de763fc],edx
  40ac7d:	mov    edi,DWORD PTR [eax]
  40ac7f:	int3   
  40ac80:	neg    eax
  40ac82:	sbb    BYTE PTR [ebx],ah
  40ac84:	sbb    eax,0xd6dfe450
  40ac89:	xchg   DWORD PTR [edx],ecx
  40ac8b:	jl     0x40acbc
  40ac8d:	or     al,0xe
  40ac8f:	fdivr  DWORD PTR [edx-0x71a91f97]
  40ac95:	xor    ebx,DWORD PTR [ebx+0x33cf7057]
  40ac9b:	fwait
  40ac9c:	cmp    BYTE PTR [edi+0x2e],dl
  40ac9f:	sahf   
  40aca0:	jl     0x40ac49
  40aca2:	add    DWORD PTR [bx+si-0x25d5],0xa4e9a2fb
  40acab:	leave  
  40acac:	xchg   edx,eax
  40acad:	add    al,0xa5
  40acaf:	and    eax,eax
  40acb1:	retf   0x1a06
  40acb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acb5:	inc    eax
  40acb6:	mov    ebx,0xeb4326c
  40acbb:	jl     0x40ad37
  40acbd:	lods   al,BYTE PTR ds:[esi]
  40acbe:	in     eax,0xd7
  40acc0:	or     DWORD PTR [eax-0x4fcfc728],0x62
  40acc7:	mov    edi,0x8a26810c
  40accc:	fistp  DWORD PTR [edx]
  40acce:	ret    0x8239
  40acd1:	out    dx,al
  40acd2:	rol    dh,0x24
  40acd5:	xlat   BYTE PTR ds:[ebx]
  40acd6:	cs retf 0x28b3
  40acda:	mov    ds:0x94112661,al
  40acdf:	fwait
  40ace0:	pop    esi
  40ace1:	loop   0x40ad43
  40ace3:	(bad)  
  40ace4:	xor    DWORD PTR [eax+ecx*8+0x70efc89b],esi
  40aceb:	jp     0x40acf1
  40aced:	mov    esp,0x4ae3323d
  40acf2:	inc    ecx
  40acf3:	mov    al,0x45
  40acf5:	jo     0x40ac79
  40acf7:	xor    al,0xb3
  40acf9:	iret   
  40acfa:	(bad)  
  40acfb:	mov    ebx,0x76054fb9
  40ad00:	popa   
  40ad01:	out    dx,eax
  40ad02:	jae    0x40acd2
  40ad04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad05:	and    bh,bh
  40ad07:	into   
  40ad08:	adc    DWORD PTR [eax+0x67],esi
  40ad0b:	rcr    cl,cl
  40ad0d:	ja     0x40ac8f
  40ad0f:	jbe    0x40ad4f
  40ad11:	cdq    
  40ad12:	cwde   
  40ad13:	mov    DWORD PTR [ebp+0x6b],ecx
  40ad16:	cmp    eax,0x577b6a0
  40ad1b:	cmp    cl,BYTE PTR [esp+ecx*4-0x2d]
  40ad1f:	sub    al,0xd9
  40ad21:	mov    cl,0x2c
  40ad23:	xor    al,0x86
  40ad25:	div    DWORD PTR [ebp-0x7d]
  40ad28:	mov    eax,ds:0xeee79604
  40ad2d:	mov    esi,0x5681d360
  40ad32:	das    
  40ad33:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40ad35:	sbb    esp,ebx
  40ad37:	dec    esi
  40ad38:	hlt    
  40ad39:	inc    ebp
  40ad3a:	into   
  40ad3b:	jecxz  0x40ad80
  40ad3d:	int3   
  40ad3e:	or     bh,BYTE PTR [esp+eax*1-0x7e]
  40ad42:	test   BYTE PTR [ebp+0x56b38a7c],0x5b
  40ad49:	xchg   BYTE PTR [edi-0x7],dl
  40ad4c:	out    0x98,al
  40ad4e:	es push edi
  40ad50:	cli    
  40ad51:	sbb    DWORD PTR [edi],esp
  40ad53:	mov    WORD PTR ss:[ecx],?
  40ad56:	xor    al,0xca
  40ad58:	cmp    dl,BYTE PTR [edx]
  40ad5a:	fnstcw WORD PTR [ebx]
  40ad5c:	paddsw mm4,QWORD PTR [eax+0x2055ce97]
  40ad63:	mov    ebx,0xe411695d
  40ad68:	mov    eax,ds:0x2dbc1b16
  40ad6d:	inc    edx
  40ad6e:	sbb    ecx,ecx
  40ad70:	cld    
  40ad71:	fnstsw WORD PTR [ecx]
  40ad73:	mov    ebx,0x31331c0f
  40ad78:	fsubr  st(6),st
  40ad7a:	cmc    
  40ad7b:	cld    
  40ad7c:	shr    bl,cl
  40ad7e:	inc    esp
  40ad7f:	imul   esi,ecx,0xb29dc4b2
  40ad85:	xor    al,0xd7
  40ad87:	loopne 0x40ad54
  40ad89:	mov    dh,0x7
  40ad8b:	ret    
  40ad8c:	cmc    
  40ad8d:	lea    ecx,[eax]
  40ad8f:	and    DWORD PTR [edi+0x75],edi
  40ad92:	lods   al,BYTE PTR ds:[esi]
  40ad93:	loope  0x40ade3
  40ad95:	push   ss
  40ad96:	lods   eax,DWORD PTR ds:[esi]
  40ad97:	repz gs mov dl,0xa
  40ad9b:	push   ss
  40ad9c:	mov    eax,0xd94ccb66
  40ada1:	add    eax,0xe51ebb91
  40ada6:	lods   eax,DWORD PTR ds:[esi]
  40ada7:	popf   
  40ada8:	ins    BYTE PTR es:[edi],dx
  40ada9:	pop    esi
  40adaa:	mov    ch,BYTE PTR [ecx+0x2c]
  40adad:	aad    0xd4
  40adaf:	(bad)  
  40adb0:	mov    esp,0x9e01b285
  40adb5:	lds    ebp,FWORD PTR [ecx+0x56]
  40adb8:	cli    
  40adb9:	adc    esp,esp
  40adbb:	xor    dh,BYTE PTR [esi]
  40adbd:	cmp    ah,cl
  40adbf:	leave  
  40adc0:	adc    eax,0x6771694
  40adc5:	int3   
  40adc6:	in     eax,0x88
  40adc8:	dec    BYTE PTR [edi+eax*2-0x3f35c90a]
  40adcf:	push   eax
  40add0:	inc    ecx
  40add1:	in     al,dx
  40add2:	nop
  40add3:	(bad)  
  40add4:	mov    ecx,0x8a887bf9
  40add9:	adc    bl,BYTE PTR [ebx]
  40addb:	lods   eax,DWORD PTR ds:[esi]
  40addc:	cmp    esp,DWORD PTR [ecx]
  40adde:	push   cs
  40addf:	pop    es
  40ade0:	into   
  40ade1:	lods   al,BYTE PTR ds:[esi]
  40ade2:	(bad)  
  40ade3:	fstp   QWORD PTR [ebx+0x4e]
  40ade6:	out    0x7e,eax
  40ade8:	mov    DWORD PTR [edx],edi
  40adea:	sub    al,0xe3
  40adec:	sub    al,0x32
  40adee:	push   edi
  40adef:	inc    eax
  40adf0:	mov    edi,0x39f953a5
  40adf5:	lods   al,BYTE PTR es:[esi]
  40adf7:	call   0x8ea05539
  40adfc:	stos   BYTE PTR es:[edi],al
  40adfd:	addr16 cmp eax,0x84871c49
  40ae03:	cwde   
  40ae04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae05:	int    0xd6
  40ae07:	pop    edi
  40ae08:	aas    
  40ae09:	pop    eax
  40ae0a:	xchg   ecx,eax
  40ae0b:	inc    edx
  40ae0c:	gs mov bl,0xda
  40ae0f:	shl    DWORD PTR [ebp+0x6f0ca64b],cl
  40ae15:	popf   
  40ae16:	mov    bh,0xbb
  40ae18:	aaa    
  40ae19:	in     al,0x10
  40ae1b:	cmp    dh,BYTE PTR [ecx+0x79]
  40ae1e:	xchg   edx,eax
  40ae1f:	jle    0x40ada6
  40ae21:	xchg   dl,dh
  40ae23:	mov    ah,0x3f
  40ae25:	mov    gs,esp
  40ae27:	push   ebx
  40ae28:	fldcw  WORD PTR [eax-0x5b05b053]
  40ae2e:	mov    ?,WORD PTR [edx]
  40ae30:	pop    ds
  40ae31:	xchg   esi,eax
  40ae32:	das    
  40ae33:	push   esp
  40ae34:	repnz shl DWORD PTR gs:[ebp+0x7431af8c],cl
  40ae3c:	mov    ebp,0x5f13c127
  40ae41:	mov    dl,0x87
  40ae43:	ins    BYTE PTR es:[edi],dx
  40ae44:	jmp    0x1160cf6b
  40ae49:	(bad)  
  40ae4b:	and    BYTE PTR [ebp-0x57],0xaa
  40ae4f:	sti    
  40ae50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae51:	mov    ecx,0x8353ca2a
  40ae56:	push   es
  40ae57:	pop    edx
  40ae58:	out    dx,al
  40ae59:	pop    ebp
  40ae5a:	das    
  40ae5b:	inc    esi
  40ae5c:	pop    ecx
  40ae5d:	adc    DWORD PTR [ecx],ebp
  40ae5f:	add    dh,BYTE PTR [eax+0x396e41eb]
  40ae65:	aas    
  40ae66:	out    0xe0,al
  40ae68:	xchg   edx,eax
  40ae69:	sbb    bl,BYTE PTR [eax]
  40ae6b:	icebp  
  40ae6c:	sbb    al,0x9
  40ae6e:	or     ebp,DWORD PTR [esi-0x6688e130]
  40ae74:	ret    
  40ae75:	outs   dx,BYTE PTR ds:[esi]
  40ae76:	push   ss
  40ae77:	out    0xcd,eax
  40ae79:	cs mov edi,0xd190779e
  40ae7f:	ret    
  40ae80:	fdiv   st(2),st
  40ae82:	and    al,0x3f
  40ae84:	(bad)  
  40ae85:	add    al,0x41
  40ae87:	xchg   esp,eax
  40ae88:	out    dx,eax
  40ae89:	outs   dx,DWORD PTR ds:[esi]
  40ae8a:	lds    edi,FWORD PTR [ecx]
  40ae8c:	sbb    ecx,DWORD PTR [ebx-0x2a303e9b]
  40ae92:	ja     0x40ae70
  40ae94:	pop    ecx
  40ae95:	pop    esi
  40ae96:	xchg   BYTE PTR ds:0x40a56e70,bh
  40ae9c:	stc    
  40ae9d:	xor    DWORD PTR [edx-0x36],edx
  40aea0:	and    al,0x11
  40aea2:	xchg   esp,eax
  40aea3:	push   ds
  40aea4:	sbb    BYTE PTR [esi+0x58642c7c],dl
  40aeaa:	inc    eax
  40aeab:	enter  0xab37,0x97
  40aeaf:	call   0xfffe:0x48b60066
  40aeb6:	cmp    ebp,DWORD PTR [edi+edx*8+0x34]
  40aeba:	ins    DWORD PTR es:[edi],dx
  40aebb:	inc    esi
  40aebc:	jge    0x40ae61
  40aebe:	add    DWORD PTR [edi-0x24ed036c],edi
  40aec4:	add    eax,0xc21ba274
  40aec9:	sub    al,0x39
  40aecb:	pop    edx
  40aecc:	retf   0x8c44
  40aecf:	sub    bh,BYTE PTR [eax-0x361963ef]
  40aed5:	adc    al,0x15
  40aed7:	aas    
  40aed8:	cwde   
  40aed9:	nop
  40aeda:	shr    BYTE PTR [ecx+ebx*1+0x53],0xc
  40aedf:	addr16 int3 
  40aee1:	adc    DWORD PTR [ebx+edi*4+0x1c],ecx
  40aee5:	out    0x4c,al
  40aee7:	jb     0x40aed3
  40aee9:	pop    ds
  40aeea:	push   es
  40aeeb:	inc    esi
  40aeec:	out    0xf9,al
  40aeee:	das    
  40aeef:	test   BYTE PTR [eax+0x36],ch
  40aef2:	dec    eax
  40aef3:	sahf   
  40aef4:	mov    eax,ds:0x2cd19844
  40aef9:	mov    ebp,0x99417efb
  40aefe:	mov    bl,0x6d
  40af00:	pop    ss
  40af01:	addr16 push ss
  40af03:	push   ds
  40af04:	test   eax,0x7c1acca7
  40af09:	ret    0x3be4
  40af0c:	out    0xba,eax
  40af0e:	fwait
  40af0f:	mov    ecx,0x8087a8a
  40af14:	aad    0xa
  40af16:	cmp    eax,0x83b298de
  40af1b:	xchg   esp,eax
  40af1c:	loopne 0x40aebc
  40af1e:	jns    0x40af06
  40af20:	mov    ah,0x8f
  40af22:	scas   al,BYTE PTR es:[edi]
  40af23:	sti    
  40af24:	inc    esi
  40af25:	stos   BYTE PTR es:[edi],al
  40af26:	(bad)  
  40af27:	cmp    BYTE PTR [esi+0x5ee42632],al
  40af2d:	adc    esi,eax
  40af2f:	nop
  40af30:	dec    edx
  40af31:	fxch   st(7)
  40af33:	xor    ch,BYTE PTR [eax-0x4a]
  40af36:	pop    es
  40af37:	das    
  40af38:	xchg   ecx,eax
  40af39:	hlt    
  40af3a:	int    0xd1
  40af3c:	mov    ebx,DWORD PTR [ebp+0x45]
  40af3f:	adc    al,0xe0
  40af41:	sar    DWORD PTR [ecx+ebx*4],0x4b
  40af45:	mov    WORD PTR [eax-0x14],es
  40af48:	retf   
  40af49:	mul    BYTE PTR [bx+0x30]
  40af4d:	mov    bl,0x8f
  40af4f:	push   0x2b
  40af51:	and    cl,cl
  40af53:	push   cs
  40af54:	mov    edx,0x64cda8c2
  40af59:	mov    edx,0xca6cadfb
  40af5e:	xchg   ah,ah
  40af60:	push   esi
  40af61:	pop    edx
  40af62:	in     eax,0xc5
  40af64:	mov    BYTE PTR [ebx],ch
  40af66:	stos   DWORD PTR es:[edi],eax
  40af67:	inc    ebx
  40af68:	sub    esi,eax
  40af6a:	cmp    al,0xe6
  40af6c:	nop
  40af6d:	je     0x40afe8
  40af6f:	repnz mov edx,0x7787a393
  40af75:	push   0x28551279
  40af7a:	push   es
  40af7b:	mov    ah,0xc9
  40af7d:	in     eax,dx
  40af7e:	jg     0x40af5b
  40af80:	sub    al,0xff
  40af82:	dec    esi
  40af83:	dec    esp
  40af84:	cmp    eax,0xe9fd9205
  40af89:	mov    eax,0xbdee1bc1
  40af8e:	in     eax,dx
  40af8f:	scas   eax,DWORD PTR es:[edi]
  40af90:	sbb    esp,DWORD PTR [esp+eax*2]
  40af93:	stos   BYTE PTR es:[edi],al
  40af94:	int    0x7b
  40af96:	xor    edx,DWORD PTR [edx]
  40af98:	push   0x35
  40af9a:	xchg   ebp,eax
  40af9b:	mov    ebp,0xb30a1fba
  40afa0:	pop    ecx
  40afa1:	les    ecx,FWORD PTR [ecx]
  40afa3:	jb     0x40afac
  40afa5:	or     esi,DWORD PTR [ebp+esi*8-0xdab3f09]
  40afac:	hlt    
  40afad:	sbb    ebp,DWORD PTR ds:0x6b8b43fd
  40afb3:	in     eax,0x39
  40afb5:	sbb    eax,edx
  40afb7:	in     eax,dx
  40afb8:	test   BYTE PTR [ebx],ah
  40afba:	pop    eax
  40afbb:	fst    DWORD PTR [esi+0x42]
  40afbe:	out    0x65,eax
  40afc0:	ret    0x63b5
  40afc3:	in     al,dx
  40afc4:	mov    ecx,0x112cc15b
  40afc9:	or     al,0x26
  40afcb:	and    eax,DWORD PTR [ebp+0x4a]
  40afce:	fsub   DWORD PTR [ecx+0x6bdca367]
  40afd4:	adc    al,0x96
  40afd6:	cwde   
  40afd7:	ins    BYTE PTR es:[edi],dx
  40afd8:	lea    ebp,[ecx+0x42]
  40afdb:	call   0xceef:0x6f69fc29
  40afe2:	add    DWORD PTR [eax+0x62],ebx
  40afe5:	sets   BYTE PTR [esi]
  40afe8:	sbb    edx,esi
  40afea:	dec    esp
  40afeb:	xchg   esi,eax
  40afec:	loope  0x40b014
  40afee:	jnp    0x40af7e
  40aff0:	repnz cmp DWORD PTR [ebx-0x7ea9fb62],ebx
  40aff7:	aaa    
  40aff8:	sahf   
  40aff9:	adc    esp,DWORD PTR [eax+0x3e]
  40affc:	xchg   esp,eax
  40affd:	(bad)  
  40affe:	hlt    
  40afff:	cmp    dl,BYTE PTR [edx]
  40b001:	pop    edx
  40b002:	mov    ebx,0xea4cc51c
  40b007:	push   eax
  40b008:	inc    ecx
  40b009:	dec    edi
  40b00a:	fcomp  DWORD PTR [ebp+0x26]
  40b00d:	popf   
  40b00e:	xchg   edi,eax
  40b00f:	jmp    0x88296872
  40b014:	pop    ss
  40b015:	add    DWORD PTR [eax+0x58f6157f],ecx
  40b01b:	(bad)  
  40b01d:	fwait
  40b01e:	push   esi
  40b01f:	mov    al,0x41
  40b021:	dec    ebx
  40b022:	push   eax
  40b023:	push   cs
  40b024:	cdq    
  40b025:	mov    eax,ds:0x5939bbd0
  40b02a:	mov    ebp,0xb4bf09d5
  40b02f:	and    DWORD PTR [edx],edx
  40b031:	xchg   edx,eax
  40b032:	rep ins BYTE PTR es:[edi],dx
  40b034:	push   ss
  40b035:	inc    ebp
  40b036:	test   eax,0xeab7abd3
  40b03b:	adc    cl,ch
  40b03d:	scas   eax,DWORD PTR es:[edi]
  40b03e:	rcl    DWORD PTR [edi-0x6f288ea5],0x5
  40b045:	clc    
  40b046:	fsubr  DWORD PTR [esp+eiz*4-0x37dcf201]
  40b04d:	jns    0x40b039
  40b04f:	jb     0x40b00c
  40b051:	add    eax,0x14a1aa41
  40b056:	fxch   st(7)
  40b058:	sub    DWORD PTR [edx-0x5f37ab9b],ebx
  40b05e:	test   al,0x17
  40b060:	lahf   
  40b061:	std    
  40b062:	adc    DWORD PTR [eax+0x68815443],edi
  40b068:	jg     0x40b0ba
  40b06a:	lods   eax,DWORD PTR ds:[esi]
  40b06b:	loope  0x40b086
  40b06d:	jge    0x40b034
  40b06f:	xchg   ebx,eax
  40b070:	jne    0x40b0ee
  40b072:	in     eax,0x3c
  40b074:	and    edi,DWORD PTR [ebx]
  40b076:	test   BYTE PTR [eax],dh
  40b078:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b079:	stos   BYTE PTR es:[edi],al
  40b07a:	sub    DWORD PTR [edx+edx*8],0x0
  40b07e:	mov    esi,0xbab064e5
  40b083:	popf   
  40b084:	dec    ecx
  40b085:	in     al,0xbe
  40b087:	cli    
  40b088:	push   esp
  40b089:	sbb    al,0x6
  40b08b:	xor    bh,ah
  40b08d:	pop    ebx
  40b08e:	fcom   QWORD PTR [ebx-0x719d9d4b]
  40b094:	test   DWORD PTR ds:0xdcab4473,0x4f977cd4
  40b09e:	cli    
  40b09f:	push   ebx
  40b0a0:	cmp    al,0x5b
  40b0a2:	push   0xffffffa8
  40b0a4:	and    eax,0x7b01a7dc
  40b0a9:	aas    
  40b0aa:	xor    ebx,ebx
  40b0ac:	in     eax,0x9f
  40b0ae:	in     al,0xf1
  40b0b0:	inc    ebp
  40b0b1:	les    esi,FWORD PTR [esi-0x1c]
  40b0b4:	popa   
  40b0b5:	mov    ecx,0xaf6068b1
  40b0ba:	mov    al,0xf8
  40b0bc:	mov    eax,ds:0x9297242d
  40b0c1:	pop    ebp
  40b0c2:	mov    ebp,0xb91d6f67
  40b0c7:	rol    bh,1
  40b0c9:	js     0x40b056
  40b0cb:	or     BYTE PTR [ebp+0x10b9e0cc],ch
  40b0d1:	push   ds
  40b0d2:	push   0x5400ba4a
  40b0d7:	cmp    bl,dh
  40b0d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0da:	jge    0x40b09d
  40b0dc:	xchg   edx,eax
  40b0dd:	dec    edi
  40b0de:	xchg   edx,eax
  40b0df:	add    DWORD PTR [ecx-0x38],eax
  40b0e2:	in     eax,0x37
  40b0e4:	mov    eax,ds:0x4d50caeb
  40b0e9:	or     DWORD PTR [ebx+0x717014dc],0x18
  40b0f0:	cmc    
  40b0f1:	bound  ebx,QWORD PTR ds:0x957f2300
  40b0f7:	arpl   WORD PTR [edx],sp
  40b0f9:	xor    eax,0x9876fe26
  40b0fe:	fwait
  40b0ff:	lea    ebp,[ebp-0x7464d8b5]
  40b105:	repz shr BYTE PTR [eax+0x5797de91],cl
  40b10c:	sar    DWORD PTR [edi-0x68],0x71
  40b110:	(bad)  
  40b111:	ja     0x40b153
  40b113:	add    cl,BYTE PTR [esp+eax*1]
  40b116:	add    BYTE PTR [esi-0x47],0x5c
  40b11a:	xchg   edi,eax
  40b11b:	and    al,0x8e
  40b11d:	pop    es
  40b11e:	test   eax,0xfa54b5be
  40b123:	add    eax,edx
  40b125:	sub    BYTE PTR [ebx-0x16ff3f20],ah
  40b12b:	outs   dx,DWORD PTR ds:[esi]
  40b12c:	cmp    BYTE PTR [ebx+ecx*8+0x3e9196ca],dh
  40b133:	add    al,0x76
  40b135:	retf   
  40b136:	pop    edx
  40b137:	jmp    0x40b0f7
  40b139:	push   edi
  40b13a:	fnstsw WORD PTR [esi]
  40b13c:	fmul   QWORD PTR [ebp-0x6e]
  40b13f:	inc    ebp
  40b140:	push   cs
  40b141:	imul   eax,esi,0x21
  40b144:	mov    ebx,0xa5db9eac
  40b149:	sub    ch,ah
  40b14b:	mov    bh,0x4c
  40b14d:	test   DWORD PTR [ebx+0x69],ebx
  40b150:	mov    ebp,0x7fb75ce2
  40b155:	loop   0x40b18e
  40b157:	(bad)  
  40b158:	sti    
  40b159:	ficomp DWORD PTR [edi-0x42]
  40b15c:	ficom  WORD PTR [esi-0xf]
  40b15f:	(bad)  
  40b160:	sahf   
  40b161:	mov    edi,0x71991c2a
  40b166:	adc    BYTE PTR [esi+0x317e7837],dh
  40b16c:	add    al,0x27
  40b16e:	lock inc esp
  40b170:	cmc    
  40b171:	pop    ss
  40b172:	out    0x34,al
  40b174:	mov    ah,0xd7
  40b176:	ss ds mov dh,0xdd
  40b17a:	mov    cl,0xc0
  40b17c:	and    ebx,DWORD PTR [ebx]
  40b17e:	retf   0x7d29
  40b181:	sbb    dl,BYTE PTR [esi]
  40b183:	add    eax,0x426ea4c5
  40b188:	div    BYTE PTR [edx+ebx*1]
  40b18b:	cwde   
  40b18c:	std    
  40b18d:	sbb    BYTE PTR [ecx+0x56],ah
  40b190:	fdiv   st,st(7)
  40b192:	es int3 
  40b194:	pushf  
  40b195:	loopne 0x40b215
  40b197:	xor    esi,DWORD PTR [eax+ebp*1]
  40b19a:	jecxz  0x40b135
  40b19c:	ss jo  0x40b1aa
  40b19f:	inc    edx
  40b1a0:	adc    BYTE PTR [ecx-0x48],bh
  40b1a3:	inc    ecx
  40b1a4:	inc    eax
  40b1a5:	xchg   esi,eax
  40b1a6:	dec    edi
  40b1a7:	sar    DWORD PTR [esi],0xf3
  40b1aa:	mov    al,0xb9
  40b1ac:	xchg   BYTE PTR [esi+0x34624fca],ah
  40b1b2:	inc    ebx
  40b1b3:	sbb    al,0x77
  40b1b6:	push   0x56
  40b1b8:	mov    eax,ds:0xff34de95
  40b1bd:	xchg   esp,eax
  40b1be:	lods   eax,DWORD PTR ds:[esi]
  40b1bf:	mov    edi,0x1bee816f
  40b1c4:	test   eax,0x7567a7cc
  40b1c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1ca:	mov    cl,BYTE PTR [eax+0x6e]
  40b1cd:	lock test eax,0xf44d002b
  40b1d3:	xchg   esp,eax
  40b1d4:	jmp    0xb308cd01
  40b1d9:	xor    eax,0x7d4aeb2c
  40b1de:	not    BYTE PTR [esi+0x216a81ea]
  40b1e4:	test   BYTE PTR [esp+ebp*1-0x157fe027],bh
  40b1eb:	pop    ebx
  40b1ec:	and    bl,al
  40b1ee:	pop    ebx
  40b1ef:	bnd jne 0x40b259
  40b1f2:	gs inc bx
  40b1f5:	sbb    DWORD PTR ds:0x884dd3ef,eax
  40b1fb:	ret    0x361c
  40b1fe:	adc    eax,DWORD PTR [edx+0x65135c52]
  40b204:	cdq    
  40b205:	data16 cmp ch,BYTE PTR [esi]
  40b208:	or     al,0x9
  40b20a:	sub    eax,0x504f8b7
  40b20f:	data16 or BYTE PTR [ebp-0x3160f9b],al
  40b216:	test   eax,0xc7efac1c
  40b21b:	daa    
  40b21c:	test   BYTE PTR [eax+0x6e],ch
  40b21f:	cmp    eax,0xc3b68fb2
  40b224:	inc    eax
  40b225:	popf   
  40b226:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b227:	call   0xb90e:0xcc28e28e
  40b22e:	ds (bad) 
  40b230:	(bad)
  40b233:	xchg   DWORD PTR [ebx+0x4432be74],esi
  40b239:	lahf   
  40b23a:	mov    edi,0x69dc1235
  40b23f:	or     BYTE PTR [edi+0x5191aca6],cl
  40b245:	into   
  40b246:	and    BYTE PTR [ebp+edi*1+0x1558d61b],bh
  40b24d:	mov    edi,0x8feca46d
  40b252:	ffree  st(5)
  40b254:	jl     0x40b231
  40b256:	cmp    DWORD PTR [edx-0x2a],ecx
  40b259:	cmc    
  40b25a:	adc    DWORD PTR [ebx-0x38b2155],0x48
  40b261:	sub    al,0x84
  40b263:	aas    
  40b264:	test   al,0x88
  40b266:	into   
  40b267:	mov    BYTE PTR [esi],bl
  40b269:	jle    0x40b2e2
  40b26b:	and    bh,BYTE PTR ds:0xbd442d83
  40b271:	or     esp,DWORD PTR ds:0xfa69ef1c
  40b277:	mov    esp,0x3b9f65b0
  40b27c:	fdivr  QWORD PTR [eax+ebx*4-0x42]
  40b280:	sti    
  40b281:	or     ebp,DWORD PTR ss:[edx+0x32ec0138]
  40b288:	mov    edx,0xbd430154
  40b28d:	jmp    DWORD PTR [edi+0x7a9eee44]
  40b293:	xchg   esp,esi
  40b295:	lahf   
  40b296:	stc    
  40b297:	sti    
  40b298:	push   0x4650568f
  40b29d:	push   0x6947df74
  40b2a2:	out    0x26,eax
  40b2a4:	fdivrp st(6),st
  40b2a6:	sub    DWORD PTR [ebx-0x77],ecx
  40b2a9:	jns    0x40b27b
  40b2ab:	mov    ch,0xbf
  40b2ad:	add    al,0x20
  40b2af:	mov    edx,0xba35d02e
  40b2b4:	push   edx
  40b2b5:	imul   ebp,DWORD PTR [ecx*4-0x1dd129a],0xa4d1b819
  40b2c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2c1:	das    
  40b2c2:	cdq    
  40b2c3:	mov    ebx,0xdf7e5e5a
  40b2c8:	fidivr WORD PTR [ebp+0x4f]
  40b2cb:	popa   
  40b2cc:	sub    DWORD PTR [ebx+0x5e2ac4c1],edi
  40b2d2:	jg     0x40b2bb
  40b2d4:	test   al,0xc8
  40b2d6:	cmp    dl,BYTE PTR [esi-0x68]
  40b2d9:	mov    WORD PTR [esi-0x17a25383],cs
  40b2df:	jb     0x40b2d4
  40b2e1:	es aas 
  40b2e3:	shr    DWORD PTR [di],cl
  40b2e6:	stos   BYTE PTR es:[edi],al
  40b2e7:	xchg   esp,eax
  40b2e8:	std    
  40b2e9:	mov    al,ds:0xc7f51a82
  40b2ee:	loopne 0x40b320
  40b2f0:	call   0xeff32a8b
  40b2f5:	push   ds
  40b2f6:	cld    
  40b2f7:	xchg   edx,eax
  40b2f8:	mov    eax,0x1bbb14a8
  40b2fd:	inc    BYTE PTR [eax+0x62]
  40b300:	add    DWORD PTR [eax-0x1bc0fb56],edx
  40b306:	xor    BYTE PTR [edx-0xdc0d71e],dh
  40b30c:	sub    al,0x3e
  40b30e:	retf   0x33de
  40b311:	jb     0x40b316
  40b313:	and    al,0x26
  40b315:	inc    esi
  40b316:	mov    al,0x7f
  40b318:	inc    esi
  40b319:	pop    edx
  40b31a:	mov    edx,eax
  40b31c:	xchg   DWORD PTR [edi+edi*4+0x2d84ad09],ebp
  40b323:	cld    
  40b324:	in     eax,dx
  40b325:	jecxz  0x40b37d
  40b327:	sbb    edx,DWORD PTR [ecx+0x34]
  40b32a:	mov    eax,0xc3d0ebad
  40b32f:	fcomp  DWORD PTR [edi+0x425659d2]
  40b335:	pop    ds
  40b336:	imul   esi,DWORD PTR [eax],0x6d
  40b339:	out    0xb2,eax
  40b33b:	out    dx,al
  40b33c:	mov    DWORD PTR [ecx-0x55],esp
  40b33f:	mov    ds:0xb79ec9e9,eax
  40b344:	pop    ebp
  40b345:	or     BYTE PTR [eax-0x13],0x30
  40b349:	mov    dl,BYTE PTR [ebx+ebp*8]
  40b34c:	loope  0x40b340
  40b34e:	loopne 0x40b307
  40b350:	and    DWORD PTR [ebx+0x54273cff],edx
  40b356:	cli    
  40b357:	mov    bh,0x5a
  40b359:	push   ebx
  40b35a:	loopne 0x40b3a6
  40b35c:	sub    DWORD PTR es:[ebp+0x1],edi
  40b360:	adc    edx,eax
  40b362:	in     eax,0x77
  40b364:	push   ebp
  40b365:	xchg   ebx,eax
  40b366:	sbb    DWORD PTR [ecx+0x38592eb0],esi
  40b36c:	adc    DWORD PTR [ebx+0x2508385],0x8a1f35f1
  40b376:	mov    ecx,0xbcf24a15
  40b37b:	pop    ebp
  40b37c:	shl    ecx,cl
  40b37e:	aas    
  40b37f:	cli    
  40b380:	pop    esi
  40b381:	xor    BYTE PTR [ebx],dl
  40b383:	retf   0xa24c
  40b386:	cmp    ah,BYTE PTR [esi-0x14]
  40b389:	adc    esp,DWORD PTR [eax]
  40b38b:	inc    ecx
  40b38c:	xor    eax,0x664132d7
  40b391:	nop
  40b392:	rcr    DWORD PTR [ecx+0x349cd997],cl
  40b398:	repz out dx,al
  40b39a:	sub    DWORD PTR [ebx+0xf30349e],eax
  40b3a0:	aaa    
  40b3a1:	cdq    
  40b3a2:	dec    ebp
  40b3a3:	daa    
  40b3a4:	fdiv   QWORD PTR [ebp-0x18022c5b]
  40b3aa:	jecxz  0x40b41e
  40b3ac:	lds    ebx,FWORD PTR [ebx-0x6a1f3dc8]
  40b3b2:	std    
  40b3b3:	mov    BYTE PTR ss:[ebx-0x2818c134],al
  40b3ba:	repz mov ebp,0x175f1a5a
  40b3c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3c1:	jno    0x40b3e4
  40b3c3:	into   
  40b3c4:	sar    BYTE PTR [eax-0x5a],cl
  40b3c7:	pop    ecx
  40b3c8:	inc    esi
  40b3c9:	test   BYTE PTR ss:[edi],cl
  40b3cc:	icebp  
  40b3cd:	pop    esi
  40b3ce:	fiadd  WORD PTR [esi-0xdbf2ff3]
  40b3d4:	mov    esi,0xef0eed08
  40b3d9:	out    dx,al
  40b3da:	(bad)  
  40b3dc:	and    eax,0x86e6e6a0
  40b3e1:	jo     0x40b3dd
  40b3e3:	in     al,dx
  40b3e4:	popa   
  40b3e5:	les    edi,FWORD PTR [edx]
  40b3e7:	test   BYTE PTR [ecx],ah
  40b3e9:	lea    esp,ds:0x42094706
  40b3ef:	mov    esi,0xa9e237c7
  40b3f4:	rep lods eax,DWORD PTR ds:[esi]
  40b3f6:	dec    edi
  40b3f7:	sub    al,0x2b
  40b3f9:	and    DWORD PTR [esi-0xc],esi
  40b3fc:	mov    al,ds:0xb4fb062a
  40b401:	lods   eax,DWORD PTR ds:[esi]
  40b402:	pop    ss
  40b403:	push   edx
  40b404:	or     DWORD PTR [edi+0x43],esi
  40b407:	inc    esp
  40b408:	adc    dl,dh
  40b40a:	loope  0x40b3e4
  40b40c:	lds    esp,FWORD PTR [ecx-0x733eed77]
  40b412:	pop    ecx
  40b413:	daa    
  40b414:	add    DWORD PTR [esp+eiz*2-0x18935fa9],esi
  40b41b:	add    edi,edi
  40b41d:	mov    ds:0x4f8887d1,eax
  40b422:	dec    ebx
  40b423:	lahf   
  40b424:	pop    eax
  40b425:	in     al,0x60
  40b427:	jbe    0x40b3b0
  40b429:	add    ebp,DWORD PTR [ecx-0xfdd3edd]
  40b42f:	dec    edx
  40b430:	pushf  
  40b431:	or     BYTE PTR [eax+0x30c2cb8b],dh
  40b437:	push   esp
  40b438:	sti    
  40b439:	fdiv   st,st(3)
  40b43b:	(bad)  
  40b43c:	test   BYTE PTR [ecx+0x5f],bh
  40b43f:	out    0x35,al
  40b441:	pop    ebp
  40b442:	xchg   edi,eax
  40b443:	dec    edx
  40b444:	xchg   DWORD PTR [ebx-0x2e],edx
  40b447:	fbld   TBYTE PTR [eax-0x5b]
  40b44a:	push   ds
  40b44b:	jle    0x40b4c0
  40b44d:	mov    ebp,0xbb96a559
  40b452:	dec    edx
  40b453:	jge    0x40b448
  40b455:	push   edx
  40b456:	pop    esi
  40b457:	mov    edi,ebp
  40b459:	mov    ebx,0x36dd3f94
  40b45e:	sub    BYTE PTR [edx],dh
  40b460:	jae    0x40b4c2
  40b462:	push   edi
  40b463:	mov    ecx,0xbff49194
  40b468:	mov    bh,0xd1
  40b46a:	or     al,0x88
  40b46c:	out    dx,eax
  40b46d:	push   edx
  40b46e:	aas    
  40b46f:	repz adc eax,0xd7347cec
  40b475:	mov    bh,0x38
  40b477:	(bad)  
  40b478:	(bad)  
  40b479:	stc    
  40b47a:	cs inc esp
  40b47c:	add    al,BYTE PTR [edx-0x76]
  40b47f:	adc    DWORD PTR [eax+eiz*4],edx
  40b482:	push   esi
  40b483:	sbb    dl,BYTE PTR [ebp-0x426e1f5d]
  40b489:	retf   
  40b48a:	neg    DWORD PTR [edi-0x36]
  40b48d:	or     ebx,DWORD PTR [ecx]
  40b48f:	xchg   ebx,eax
  40b490:	mov    esp,0x4e481f7a
  40b495:	lods   al,BYTE PTR ds:[esi]
  40b496:	(bad)  
  40b498:	fcmovb st,st(2)
  40b49a:	pop    edx
  40b49b:	fnsave [edi-0x12]
  40b49e:	mov    dh,0xe2
  40b4a0:	cmp    bh,dh
  40b4a2:	fimul  DWORD PTR [edx+0x56]
  40b4a5:	push   0xffffffd9
  40b4a7:	pop    ecx
  40b4a8:	div    DWORD PTR [eax+0x453347e9]
  40b4ae:	sar    al,1
  40b4b0:	ss js  0x40b530
  40b4b3:	adc    eax,0x3b2b8ae9
  40b4b8:	xor    BYTE PTR [edi+ebx*2+0x148a2330],0x7d
  40b4c0:	xchg   DWORD PTR [eax-0x400b9ee7],edi
  40b4c6:	sti    
  40b4c7:	iret   
  40b4c8:	inc    ebx
  40b4c9:	fst    QWORD PTR [ebp-0x67a7ba84]
  40b4cf:	data16 or BYTE PTR [ebp-0x5109310a],al
  40b4d6:	jge    0x40b471
  40b4d8:	fst    DWORD PTR [eax]
  40b4da:	cmc    
  40b4db:	mov    ebx,0x1a8f104f
  40b4e0:	data16 jae 0x40b4bf
  40b4e3:	mov    esi,0x40caf1e2
  40b4e8:	push   es
  40b4e9:	(bad)  [ebx-0x452c6a5f]
  40b4ef:	lods   eax,DWORD PTR ds:[esi]
  40b4f0:	xchg   ecx,eax
  40b4f1:	das    
  40b4f2:	cld    
  40b4f3:	stos   DWORD PTR es:[edi],eax
  40b4f4:	cmp    eax,0xe5a4cff1
  40b4f9:	add    BYTE PTR [esi],al
  40b4fb:	loopne 0x40b56c
  40b4fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4fe:	cs leave 
  40b500:	adc    al,0x4e
  40b502:	das    
  40b503:	sti    
  40b504:	das    
  40b505:	cli    
  40b506:	mov    ecx,0xb267ed2c
  40b50b:	xor    eax,0x2e277cf4
  40b510:	xor    BYTE PTR [esi+0x3b],ch
  40b513:	dec    esp
  40b514:	mov    BYTE PTR [esi+ebx*8+0x1f],dh
  40b518:	cli    
  40b519:	inc    edi
  40b51a:	sub    BYTE PTR [edx],dl
  40b51c:	or     BYTE PTR [eax+ebp*8],cl
  40b51f:	in     eax,0x1
  40b521:	sub    ch,ch
  40b523:	arpl   WORD PTR [ecx-0x6c],dx
  40b526:	mov    bh,0x84
  40b528:	xchg   BYTE PTR [edi+0x6b017e44],bl
  40b52e:	xchg   edi,eax
  40b52f:	pop    eax
  40b530:	mov    ebp,ecx
  40b532:	shl    al,0xf4
  40b535:	jp     0x40b52c
  40b537:	xor    eax,0xa0d48288
  40b53c:	popf   
  40b53d:	mov    fs,ecx
  40b53f:	dec    eax
  40b540:	(bad)  
  40b542:	lea    ebx,[ebx+edx*8-0x61accf53]
  40b549:	fbstp  TBYTE PTR [esi+0x59a00be2]
  40b54f:	and    ch,bh
  40b551:	gs ins BYTE PTR es:[edi],dx
  40b553:	mov    ds:0x822da0b3,al
  40b558:	adc    ah,BYTE PTR [ebp-0x1b]
  40b55b:	inc    esp
  40b55c:	(bad)  
  40b55d:	in     eax,dx
  40b55e:	sbb    BYTE PTR [eax],0xad
  40b561:	cld    
  40b562:	(bad)  
  40b563:	test   eax,0x7bfc3b4
  40b568:	xor    al,ch
  40b56a:	les    ebp,FWORD PTR [eax]
  40b56c:	and    DWORD PTR [edi-0x63],0x35
  40b570:	mov    ebp,0x43d62cb6
  40b575:	aas    
  40b576:	xor    ch,cl
  40b578:	push   ebp
  40b579:	(bad)  
  40b57a:	push   esi
  40b57b:	or     edi,DWORD PTR [edi+0x7]
  40b57e:	adc    al,0x81
  40b580:	dec    ecx
  40b581:	aas    
  40b582:	retf   
  40b583:	scas   eax,DWORD PTR es:[edi]
  40b584:	adc    dh,bl
  40b586:	test   BYTE PTR [eax-0x6c],dh
  40b589:	data16 ror BYTE PTR [edx],0x9e
  40b58d:	xchg   DWORD PTR [ebp+0x38],esi
  40b590:	inc    ecx
  40b591:	pop    ecx
  40b592:	dec    eax
  40b593:	je     0x40b5e4
  40b595:	dec    eax
  40b596:	mov    ah,0xd6
  40b598:	out    dx,al
  40b599:	or     bl,0x4
  40b59c:	mov    ah,0xfb
  40b59e:	ds xor edi,ebp
  40b5a1:	lock outs dx,BYTE PTR ds:[esi]
  40b5a3:	int3   
  40b5a4:	mov    ebx,0x50394253
  40b5a9:	and    al,BYTE PTR [edi*4+0x7b71092]
  40b5b0:	inc    edi
  40b5b1:	pop    ds
  40b5b2:	and    al,0x8a
  40b5b4:	lahf   
  40b5b5:	sub    esp,DWORD PTR [edx+0x5b]
  40b5b8:	add    eax,0x2757fff8
  40b5bd:	dec    ebx
  40b5be:	call   0xe9355264
  40b5c3:	addr16 xchg ebp,eax
  40b5c5:	and    ebp,DWORD PTR [ecx-0x2ed4ad08]
  40b5cb:	or     BYTE PTR [edi],dl
  40b5cd:	aas    
  40b5ce:	ins    DWORD PTR es:[edi],dx
  40b5cf:	ret    0xd213
  40b5d2:	repnz dec esi
  40b5d4:	jns    0x40b5ee
  40b5d6:	ins    DWORD PTR es:[edi],dx
  40b5d7:	xlat   BYTE PTR gs:[ebx]
  40b5d9:	push   esp
  40b5da:	cmp    al,0xe9
  40b5dc:	pop    ebx
  40b5dd:	xlat   BYTE PTR ds:[ebx]
  40b5de:	iret   
  40b5df:	add    al,0x70
  40b5e1:	xor    ah,al
  40b5e3:	inc    eax
  40b5e4:	pop    ebx
  40b5e5:	push   es
  40b5e6:	call   0xd3247678
  40b5eb:	or     al,0x3c
  40b5ed:	pop    es
  40b5ee:	in     eax,0x4f
  40b5f0:	and    DWORD PTR [ebx+0x7c846f74],esp
  40b5f6:	sub    edx,DWORD PTR [eax-0x11]
  40b5f9:	mov    BYTE PTR [ebx+0x40],0xe2
  40b5fd:	mov    bl,0x68
  40b5ff:	and    al,0x69
  40b601:	sub    esp,DWORD PTR gs:[edx]
  40b604:	in     al,dx
  40b605:	xor    eax,0x79b945c
  40b60a:	int3   
  40b60b:	pop    ss
  40b60c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b60d:	adc    bh,dh
  40b60f:	jmp    0x40b5bc
  40b611:	add    al,0xf5
  40b613:	sub    eax,0x9c384d37
  40b618:	cld    
  40b619:	aaa    
  40b61a:	mov    esp,0x92475403
  40b61f:	cmc    
  40b620:	sahf   
  40b621:	xor    edi,DWORD PTR [eax+esi*8+0x76]
  40b625:	and    edx,esi
  40b627:	adc    BYTE PTR [edi],0x50
  40b62a:	or     al,0x55
  40b62c:	or     eax,0xc85c494e
  40b631:	mov    ebp,0x14131aff
  40b636:	fild   WORD PTR [edi+0x63]
  40b639:	xchg   edi,eax
  40b63a:	ins    DWORD PTR es:[edi],dx
  40b63b:	out    0x5c,eax
  40b63d:	stos   DWORD PTR es:[edi],eax
  40b63e:	mov    eax,0x3736355d
  40b644:	lods   al,BYTE PTR ds:[esi]
  40b645:	jg     0x40b62b
  40b647:	inc    ecx
  40b648:	fs fmulp st(1),st
  40b64b:	lods   eax,DWORD PTR ds:[esi]
  40b64c:	das    
  40b64d:	fcom   QWORD PTR [ebp-0x22]
  40b650:	jo     0x40b5f2
  40b652:	add    al,0x69
  40b654:	and    eax,0x4fa48850
  40b659:	pop    ebx
  40b65a:	mov    edx,0xe6fd06b2
  40b65f:	sub    DWORD PTR [esi+0x31596ad8],eax
  40b665:	out    dx,eax
  40b666:	xor    al,0x2a
  40b668:	ins    BYTE PTR es:[edi],dx
  40b669:	out    0x95,eax
  40b66b:	dec    edx
  40b66c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b66d:	sahf   
  40b66e:	fisttp DWORD PTR [edi+0x3f]
  40b671:	scas   al,BYTE PTR es:[edi]
  40b672:	lods   eax,DWORD PTR ds:[esi]
  40b673:	jbe    0x40b688
  40b675:	inc    ebx
  40b676:	loop   0x40b5fc
  40b678:	xchg   esi,eax
  40b679:	ret    
  40b67a:	fld    DWORD PTR [ecx-0x1d7661d0]
  40b680:	leave  
  40b681:	imul   eax,DWORD PTR [edx+0x74593f76],0xf39ce318
  40b68b:	mov    DWORD PTR [eax+esi*4+0x3b],ebx
  40b68f:	loope  0x40b623
  40b691:	hlt    
  40b692:	mov    eax,0x63e94fde
  40b697:	call   0x1da4:0x9696
  40b69d:	or     eax,0x5be32c27
  40b6a2:	fwait
  40b6a3:	jmp    0xa6da:0x4d2cb319
  40b6aa:	mov    ecx,0x65fdc8f0
  40b6af:	xor    DWORD PTR [edx+0x3b98a64d],ecx
  40b6b5:	adc    dh,BYTE PTR [edx-0x687308b3]
  40b6bb:	dec    edi
  40b6bc:	or     DWORD PTR [esp+edi*1],eax
  40b6bf:	cmp    ecx,ebp
  40b6c1:	jb     0x40b673
  40b6c3:	rcl    BYTE PTR [ebp-0x4a],1
  40b6c6:	rcl    BYTE PTR [ecx-0x8],0xf7
  40b6ca:	out    dx,al
  40b6cb:	jp     0x40b6e4
  40b6cd:	jo     0x40b678
  40b6cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6d0:	out    dx,eax
  40b6d1:	pop    es
  40b6d2:	inc    ebp
  40b6d3:	jl     0x40b6a0
  40b6d5:	mov    bh,0xed
  40b6d7:	(bad)  
  40b6d9:	jle    0x40b65e
  40b6db:	lds    esi,FWORD PTR [eax]
  40b6dd:	mov    cl,0x7b
  40b6df:	iret   
  40b6e0:	or     al,0x96
  40b6e2:	test   BYTE PTR [ecx],al
  40b6e4:	ds (bad) 
  40b6e6:	out    dx,al
  40b6e7:	rol    BYTE PTR [ebp+0x79],0x27
  40b6eb:	jge    0x40b71e
  40b6ed:	pop    edi
  40b6ee:	pop    ss
  40b6ef:	inc    esp
  40b6f0:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40b6f2:	dec    ecx
  40b6f3:	test   BYTE PTR [eax-0x6],0xcd
  40b6f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6f8:	xor    ah,BYTE PTR [bx+si]
  40b6fb:	sbb    ah,bh
  40b6fd:	test   eax,0x9a70b9a3
  40b702:	sbb    ecx,DWORD PTR [ecx+0x76a8d9e0]
  40b708:	xor    eax,0xbcb8f9d4
  40b70d:	cdq    
  40b70e:	imul   esi,DWORD PTR [edi+0xfefc526],0xac027cfd
  40b718:	jmp    0x80fbacbe
  40b71d:	or     edi,DWORD PTR [edx]
  40b71f:	mov    ds:0x9174c2e0,eax
  40b724:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b725:	sbb    ecx,DWORD PTR [ecx-0x25]
  40b728:	in     al,0x9d
  40b72a:	jmp    0x40b6d6
  40b72c:	shl    BYTE PTR [ebx+0x1702cb87],1
  40b732:	add    edi,ebp
  40b734:	or     eax,0x834523ce
  40b739:	mov    dh,0x8a
  40b73b:	out    dx,al
  40b73c:	push   ecx
  40b73d:	daa    
  40b73e:	inc    eax
  40b73f:	cmp    al,0x65
  40b741:	pop    eax
  40b742:	inc    edx
  40b743:	popf   
  40b744:	retf   
  40b745:	and    DWORD PTR [edx-0x4b],ecx
  40b748:	push   ss
  40b749:	xor    edx,DWORD PTR [esi-0x73]
  40b74c:	jecxz  0x40b794
  40b74e:	fwait
  40b74f:	mov    bl,BYTE PTR [eax+0x764a52ef]
  40b755:	(bad)  
  40b756:	and    DWORD PTR ds:0xdf943b9e,esp
  40b75c:	popf   
  40b75d:	add    BYTE PTR [eax+0x7f],cl
  40b760:	lods   eax,DWORD PTR ds:[esi]
  40b761:	ror    cl,1
  40b763:	mov    ebp,DWORD PTR [edx-0x5af622f4]
  40b769:	fisttp QWORD PTR [eax]
  40b76b:	pop    ds
  40b76c:	inc    ebx
  40b76d:	push   edi
  40b76e:	jl     0x40b742
  40b770:	in     al,0x4d
  40b772:	xchg   esi,eax
  40b773:	pop    edi
  40b774:	std    
  40b775:	sar    DWORD PTR [edi-0x24],0x66
  40b779:	stc    
  40b77a:	lods   eax,DWORD PTR fs:[esi]
  40b77c:	aaa    
  40b77d:	xchg   ecx,eax
  40b77e:	cs mov ch,0x9a
  40b781:	or     dl,BYTE PTR [esi]
  40b783:	ins    DWORD PTR es:[edi],dx
  40b784:	xchg   edx,eax
  40b785:	int    0x66
  40b787:	sub    ebp,DWORD PTR [eax-0x7401c0f4]
  40b78d:	cmc    
  40b78e:	add    eax,0xc09e64da
  40b793:	pop    ecx
  40b794:	add    bl,BYTE PTR [eax+0x460a2018]
  40b79a:	out    dx,al
  40b79b:	shr    BYTE PTR [edx],cl
  40b79d:	pop    DWORD PTR [ebx-0x7]
  40b7a0:	sbb    al,0x40
  40b7a2:	adc    dl,BYTE PTR [esi-0x2d]
  40b7a5:	dec    edx
  40b7a6:	push   ss
  40b7a7:	xor    DWORD PTR ss:[edi],0xc7a5a425
  40b7ae:	fdiv   DWORD PTR [ebx-0x32abc4ce]
  40b7b4:	jne    0x40b752
  40b7b6:	jl     0x40b770
  40b7b8:	push   0xdd6aa8a6
  40b7bd:	push   eax
  40b7be:	imul   eax,DWORD PTR [ecx],0xa03d666d
  40b7c4:	mov    cl,0x5b
  40b7c6:	mov    ds:0xd7b0dd69,al
  40b7cb:	clc    
  40b7cc:	jb     0x40b837
  40b7ce:	xchg   esi,eax
  40b7cf:	xchg   ebx,eax
  40b7d0:	rcr    DWORD PTR [esi],1
  40b7d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7d3:	pop    ds
  40b7d4:	and    ah,dl
  40b7d6:	pop    edx
  40b7d7:	or     BYTE PTR [ebx],dl
  40b7d9:	mov    edx,ebx
  40b7db:	xchg   ebx,eax
  40b7dc:	loop   0x40b815
  40b7de:	cmp    al,0x79
  40b7e0:	fidiv  WORD PTR [ecx+0x2bb3620c]
  40b7e6:	sub    DWORD PTR [bp+di],ebp
  40b7e9:	enter  0xd6a7,0xeb
  40b7ed:	xor    esi,DWORD PTR [ecx+0x41812fd2]
  40b7f3:	(bad)  
  40b7f4:	mov    al,ds:0x2fff4e4c
  40b7f9:	fnstenv [edx+0x29]
  40b7fc:	ret    0x24da
  40b7ff:	sbb    al,0x7e
  40b801:	retf   
  40b802:	(bad)  
  40b803:	jecxz  0x40b822
  40b805:	sub    dl,dh
  40b807:	add    eax,0xf1064fad
  40b80c:	retf   
  40b80d:	es xchg ecx,eax
  40b80f:	fstp   DWORD PTR [eax]
  40b811:	and    eax,0xd8896b33
  40b816:	aad    0x2e
  40b818:	xchg   esp,eax
  40b819:	cmp    dh,BYTE PTR [ebx+esi*1]
  40b81c:	aam    0xdc
  40b81e:	sub    eax,0xb87f5caf
  40b823:	inc    ebx
  40b824:	xor    eax,0x87deee6f
  40b829:	or     dh,dh
  40b82b:	pxor   mm1,QWORD PTR [ebp-0x5d]
  40b82f:	fnstenv [edi+ebp*4-0xd]
  40b833:	pop    esp
  40b834:	lods   eax,DWORD PTR ds:[esi]
  40b835:	aam    0x4e
  40b837:	inc    esi
  40b838:	fisttp WORD PTR [eax]
  40b83a:	xor    DWORD PTR [esi-0x6712cd98],esi
  40b840:	outs   dx,DWORD PTR ds:[esi]
  40b841:	pop    ebx
  40b842:	aad    0xb5
  40b844:	cmp    ah,bl
  40b846:	rep lods eax,DWORD PTR ds:[esi]
  40b848:	mov    dl,0x5
  40b84a:	xchg   esp,eax
  40b84b:	icebp  
  40b84c:	test   BYTE PTR [ebp+eax*8+0x7a],cl
  40b850:	cdq    
  40b851:	lock aas 
  40b853:	mov    ds:0xd790c1ff,al
  40b858:	push   cs
  40b859:	in     al,0x72
  40b85b:	jmp    0xe0dc38fb
  40b860:	in     al,dx
  40b861:	dec    ebp
  40b862:	pop    ds
  40b863:	outs   dx,BYTE PTR ds:[esi]
  40b864:	ss ss out 0x10,al
  40b868:	xchg   ebp,eax
  40b869:	retf   0xb6cf
  40b86c:	dec    ecx
  40b86d:	mov    ebx,DWORD PTR [ecx-0x62]
  40b870:	mov    edi,0x86eff4ba
  40b875:	pop    eax
  40b876:	ins    DWORD PTR es:[edi],dx
  40b877:	xchg   esp,eax
  40b878:	jbe    0x40b7ff
  40b87a:	jne    0x40b8b4
  40b87c:	jp     0x40b8a3
  40b87e:	inc    eax
  40b87f:	call   0xbb0e:0x5017f7fd
  40b886:	cwde   
  40b887:	jg     0x40b8a5
  40b889:	dec    ebx
  40b88a:	(bad)
  40b88d:	(bad)  
  40b88e:	adc    eax,0xe15c22a8
  40b893:	mov    eax,edx
  40b895:	fdiv   DWORD PTR [esi]
  40b897:	outs   dx,BYTE PTR ds:[esi]
  40b898:	add    ecx,ecx
  40b89a:	out    0x2b,eax
  40b89c:	shl    BYTE PTR [edi+0x3f893eef],0x19
  40b8a3:	or     edx,DWORD PTR [edi+0x77]
  40b8a6:	iret   
  40b8a7:	rol    BYTE PTR [esp+edx*1-0x49430246],cl
  40b8ae:	mov    BYTE PTR [ebx+0x450f6ce3],al
  40b8b4:	cwde   
  40b8b5:	add    dl,0xa
  40b8b8:	cmp    DWORD PTR [eax+0x4b8c5111],esp
  40b8be:	outs   dx,DWORD PTR ds:[esi]
  40b8bf:	mov    cl,0xe3
  40b8c1:	into   
  40b8c2:	add    cl,BYTE PTR [esi+0x2e]
  40b8c5:	push   edi
  40b8c6:	aam    0xa6
  40b8c8:	test   al,0x76
  40b8ca:	pop    ecx
  40b8cb:	fdiv   QWORD PTR [esi+0x504c0d4f]
  40b8d1:	ds int 0xde
  40b8d4:	fbstp  TBYTE PTR [eax+edi*1+0x12d2e9ec]
  40b8db:	jns    0x40b8e5
  40b8dd:	stos   BYTE PTR es:[edi],al
  40b8de:	clc    
  40b8df:	(bad)  
  40b8e0:	xchg   BYTE PTR [edx],dl
  40b8e2:	or     eax,0x8248e7de
  40b8e7:	and    DWORD PTR ds:0x109d5cea,ebx
  40b8ed:	add    ebx,ecx
  40b8ef:	sub    eax,esp
  40b8f1:	in     eax,0xa
  40b8f3:	adc    al,0xa0
  40b8f5:	or     DWORD PTR [eax],esi
  40b8f7:	stc    
  40b8f8:	jae    0x40b90d
  40b8fa:	loop   0x40b904
  40b8fc:	dec    edx
  40b8fd:	hlt    
  40b8fe:	sub    BYTE PTR [ecx+0x79],dl
  40b901:	pusha  
  40b902:	jae    0x40b972
  40b904:	and    dh,dh
  40b906:	adc    edi,esi
  40b908:	mov    ds:0xa4b9ab6e,eax
  40b90d:	cld    
  40b90e:	pushf  
  40b90f:	stos   BYTE PTR es:[edi],al
  40b910:	jo     0x40b975
  40b912:	dec    esi
  40b913:	mov    dh,0xc
  40b915:	dec    ebp
  40b916:	into   
  40b917:	fadd   DWORD PTR [ecx]
  40b919:	jo     0x40b968
  40b91b:	mov    ebp,0xe2c771c0
  40b920:	cmp    DWORD PTR [eax-0x63e7937c],ebp
  40b926:	inc    edx
  40b927:	inc    ebx
  40b928:	ret    0xbf9a
  40b92b:	mov    ds:0xd739d4d3,al
  40b930:	add    BYTE PTR [ebx+0x669c9bef],0x25
  40b937:	fiadd  DWORD PTR [ebx]
  40b939:	add    dl,BYTE PTR [ebx+ebp*4]
  40b93c:	out    0xd8,eax
  40b93e:	(bad)  
  40b93f:	pop    esi
  40b940:	dec    edx
  40b941:	pop    ss
  40b942:	outs   dx,DWORD PTR ds:[esi]
  40b943:	mov    eax,ds:0x9688acc5
  40b948:	mov    ebp,esi
  40b94a:	mov    ah,BYTE PTR [edi+esi*4]
  40b94d:	out    0xff,eax
  40b94f:	inc    edx
  40b950:	add    al,0x3f
  40b952:	jmp    0x40b91d
  40b954:	fcmovb st,st(2)
  40b956:	int3   
  40b957:	in     eax,dx
  40b958:	xchg   DWORD PTR [eax+0x69],ecx
  40b95b:	jp     0x40b953
  40b95d:	add    al,0xf0
  40b95f:	div    BYTE PTR [ebx]
  40b961:	pushf  
  40b962:	adc    eax,0x3a11f808
  40b967:	movaps XMMWORD PTR [esi+0x20796ea4],xmm1
  40b96e:	jbe    0x40b950
  40b970:	jae    0x40b997
  40b972:	sub    DWORD PTR [ecx-0x75],eax
  40b975:	pop    es
  40b976:	fiadd  WORD PTR [edi+0x23]
  40b979:	fs stc 
  40b97b:	pusha  
  40b97c:	retf   0x3621
  40b97f:	pop    ebx
  40b980:	int3   
  40b981:	adc    bh,BYTE PTR [eax]
  40b983:	jb     0x40b981
  40b985:	dec    edi
  40b986:	repnz (bad) 
  40b988:	jl     0x40b967
  40b98a:	(bad)  [eax-0x1b]
  40b98d:	shl    BYTE PTR [ebp+edi*1-0x3bb93a09],1
  40b994:	lahf   
  40b995:	push   esi
  40b996:	std    
  40b997:	add    al,0x71
  40b999:	mov    al,0x3f
  40b99b:	in     eax,dx
  40b99c:	mov    al,0x4a
  40b99e:	mov    al,ds:0xf497d9f9
  40b9a3:	push   ss
  40b9a4:	pusha  
  40b9a5:	sbb    ebx,DWORD PTR [eax]
  40b9a7:	inc    eax
  40b9a8:	mov    ecx,0x60469699
  40b9ad:	mov    ebx,0x187912b1
  40b9b2:	jp     0x40b974
  40b9b4:	mov    DWORD PTR [ebx+0x1c74b116],edx
  40b9ba:	xor    DWORD PTR [ecx+0x16],esp
  40b9bd:	pusha  
  40b9be:	dec    ebp
  40b9bf:	mov    bh,BYTE PTR [ebp-0xd]
  40b9c2:	jge    0x40ba43
  40b9c4:	fsub   st,st(4)
  40b9c6:	inc    esp
  40b9c7:	(bad)  
  40b9c9:	dec    eax
  40b9ca:	scas   al,BYTE PTR es:[edi]
  40b9cb:	int    0xc6
  40b9cd:	sar    BYTE PTR [edx+0x533f11f8],0xf6
  40b9d4:	add    dl,dh
  40b9d6:	mov    bh,ch
  40b9d8:	ins    DWORD PTR es:[edi],dx
  40b9d9:	cwde   
  40b9da:	sahf   
  40b9db:	popa   
  40b9dc:	aad    0x64
  40b9de:	das    
  40b9df:	cmp    BYTE PTR [ecx+0x233f503c],bh
  40b9e5:	loop   0x40b9d8
  40b9e7:	imul   ebp,ebx,0x57486972
  40b9ed:	add    eax,0xc7882af9
  40b9f2:	inc    edi
  40b9f3:	dec    ecx
  40b9f4:	push   esp
  40b9f5:	inc    edi
  40b9f6:	rol    DWORD PTR [esp+eiz*8-0xa],0xcd
  40b9fb:	adc    eax,0xc64d5847
  40ba00:	pop    ebx
  40ba01:	ss stos BYTE PTR es:[edi],al
  40ba03:	imul   edx,DWORD PTR [edi+0x2627c03f],0x9d4c6407
  40ba0d:	mov    dh,0x5f
  40ba0f:	and    eax,0x4d7039ba
  40ba14:	xor    ecx,eax
  40ba16:	repz loopne 0x40b999
  40ba19:	and    BYTE PTR [ecx+0x38dc69b0],dl
  40ba1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba20:	adc    bl,bh
  40ba22:	inc    ebp
  40ba23:	arpl   WORD PTR [esi-0xfa21280],di
  40ba29:	xor    ah,BYTE PTR [edx-0x437ff5f2]
  40ba2f:	mov    eax,0x9577b8b0
  40ba34:	push   esp
  40ba35:	aam    0xa4
  40ba37:	in     al,dx
  40ba38:	push   edi
  40ba39:	mov    ah,0x14
  40ba3b:	xor    esp,ecx
  40ba3d:	out    dx,al
  40ba3e:	mov    dh,0xa2
  40ba40:	stos   DWORD PTR es:[edi],eax
  40ba41:	ja     0x40b9da
  40ba43:	add    ah,BYTE PTR [edx+0x2e]
  40ba46:	cld    
  40ba47:	jecxz  0x40ba94
  40ba49:	test   DWORD PTR [ecx],0xdff0ebc2
  40ba4f:	imul   bl
  40ba51:	sub    BYTE PTR [ecx+ebx*8],0xbd
  40ba55:	mov    WORD PTR [ecx+0x59181c74],?
  40ba5b:	jne    0x40ba86
  40ba5d:	push   edx
  40ba5e:	jle    0x40bac4
  40ba60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba61:	jo     0x40bad4
  40ba63:	jle    0x40b9fe
  40ba65:	loop   0x40badb
  40ba67:	adc    al,0xd6
  40ba69:	cmp    eax,0x8519366e
  40ba6e:	fisttp WORD PTR [ebp-0x36b753e5]
  40ba74:	mov    ch,0x16
  40ba76:	lods   al,BYTE PTR ds:[esi]
  40ba77:	xor    al,0xa4
  40ba79:	mov    ebp,0xff8caea1
  40ba7e:	(bad)  
  40ba7f:	gs push cs
  40ba81:	pop    ebp
  40ba82:	pop    ebx
  40ba83:	enter  0x5470,0x62
  40ba87:	push   eax
  40ba88:	pushf  
  40ba89:	stc    
  40ba8a:	rol    DWORD PTR [edx+0x26],0x61
  40ba8e:	mov    dl,BYTE PTR [eax+0x2f784787]
  40ba94:	xchg   edx,eax
  40ba95:	pop    edi
  40ba96:	inc    esp
  40ba97:	push   ss
  40ba98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba99:	xchg   edi,eax
  40ba9a:	push   ebx
  40ba9b:	cs push edx
  40ba9d:	das    
  40ba9e:	scas   eax,DWORD PTR es:[edi]
  40ba9f:	jmp    0xafef:0x63783c25
  40baa6:	and    edi,DWORD PTR [edi]
  40baa8:	pop    edi
  40baa9:	cdq    
  40baaa:	fldpi  
  40baac:	add    DWORD PTR [edi+ebp*8-0x5be4e5d6],esi
  40bab3:	rol    BYTE PTR [ecx+ebp*4],cl
  40bab6:	and    eax,0x82e61409
  40babb:	xchg   edi,eax
  40babc:	xlat   BYTE PTR ds:[ebx]
  40babd:	data16 mov WORD PTR fs:[esi],es
  40bac1:	pop    ebx
  40bac2:	jb     0x40bab9
  40bac4:	popa   
  40bac5:	std    
  40bac6:	mov    DWORD PTR ds:0x29dc4f1e,0xb206f45b
  40bad0:	jnp    0x40bb0a
  40bad2:	dec    esi
  40bad3:	outs   dx,BYTE PTR ds:[esi]
  40bad4:	xor    edx,DWORD PTR [edx+0x6b]
  40bad7:	push   0x6a
  40bad9:	call   DWORD PTR [edx-0x4b479021]
  40badf:	enter  0x1992,0xb7
  40bae3:	out    dx,eax
  40bae4:	je     0x40baca
  40bae6:	mov    ah,0x4a
  40bae8:	pop    edx
  40bae9:	jle    0x40bb4e
  40baeb:	imul   eax,DWORD PTR ss:[ecx],0xffffff9b
  40baef:	mov    ds:0x2487e435,al
  40baf4:	jg     0x40bb52
  40baf6:	jmp    0x40bb2b
  40baf8:	xchg   edi,eax
  40baf9:	mov    al,0x4d
  40bafb:	(bad)  
  40bafc:	pop    esp
  40bafd:	mov    bl,al
  40baff:	add    ecx,DWORD PTR ds:0xd7e80dcb
  40bb05:	mov    ecx,0xccbe3abd
  40bb0a:	data16 sub cl,al
  40bb0d:	clc    
  40bb0e:	rcl    BYTE PTR [esi+ecx*2],1
  40bb11:	loope  0x40bb90
  40bb13:	clc    
  40bb14:	out    dx,eax
  40bb15:	repz das 
  40bb17:	ja     0x40bb51
  40bb19:	(bad)
  40bb1c:	ds retf 0xce35
  40bb20:	jns    0x40bb1d
  40bb22:	xlat   BYTE PTR ds:[ebx]
  40bb23:	mov    DWORD PTR [edx],esi
  40bb25:	cs test al,0x40
  40bb28:	fild   WORD PTR [ebp+0x58c61039]
  40bb2e:	xor    DWORD PTR [edx-0x404d016c],ebp
  40bb34:	leave  
  40bb35:	int    0x80
  40bb37:	adc    BYTE PTR [ebx],0x96
  40bb3a:	jmp    0x40bb81
  40bb3c:	jecxz  0x40bb61
  40bb3e:	and    DWORD PTR [eax-0x1d44ad96],edx
  40bb44:	or     BYTE PTR [edi+0x7ab01aab],0x35
  40bb4b:	test   BYTE PTR [edx],ch
  40bb4d:	cs pop ds
  40bb4f:	mov    ch,0xda
  40bb51:	mov    BYTE PTR [esi],cl
  40bb53:	jge    0x40bbbf
  40bb55:	pusha  
  40bb56:	jns    0x40baf7
  40bb58:	aaa    
  40bb59:	jecxz  0x40bae0
  40bb5b:	test   eax,0xa827a397
  40bb60:	push   ds
  40bb61:	and    BYTE PTR [edi-0x2c],dl
  40bb64:	and    al,0x57
  40bb66:	out    dx,al
  40bb67:	lds    edx,FWORD PTR [edi-0x7d980507]
  40bb6d:	leave  
  40bb6e:	fidivr DWORD PTR cs:[edi-0x5a]
  40bb72:	sub    BYTE PTR [ecx+ebp*1+0x17],al
  40bb76:	xchg   ebp,eax
  40bb77:	(bad)  
  40bb78:	aam    0x5b
  40bb7a:	add    bh,BYTE PTR [ebx+0x6b]
  40bb7d:	mov    ecx,0xbb053c5e
  40bb82:	add    eax,0xc54fa0a8
  40bb87:	retf   
  40bb88:	stos   DWORD PTR es:[edi],eax
  40bb89:	cdq    
  40bb8a:	cdq    
  40bb8b:	inc    eax
  40bb8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb8e:	sahf   
  40bb8f:	data16 xor al,0xa3
  40bb92:	test   eax,0x2c0d7913
  40bb97:	push   edx
  40bb98:	mov    ebp,0xff904386
  40bb9d:	cld    
  40bb9e:	inc    edx
  40bb9f:	cmp    ebx,edi
  40bba1:	popf   
  40bba2:	and    DWORD PTR [ebx-0x3],0x1d76c302
  40bba9:	pop    edi
  40bbaa:	and    ah,BYTE PTR cs:[ebx+0x64]
  40bbae:	aas    
  40bbaf:	dec    esp
  40bbb0:	cs xchg ch,dh
  40bbb3:	or     eax,0xc250da13
  40bbb8:	je     0x40bb40
  40bbba:	jp     0x40bc2a
  40bbbc:	stos   DWORD PTR es:[edi],eax
  40bbbd:	pop    ecx
  40bbbe:	addr16 das 
  40bbc0:	sub    dh,BYTE PTR [ebp-0x9d19fb7]
  40bbc6:	ret    0xc887
  40bbc9:	add    eax,0x85b1b698
  40bbce:	jae    0x40bc0f
  40bbd0:	xchg   edi,eax
  40bbd1:	clc    
  40bbd2:	or     al,BYTE PTR [ebx]
  40bbd4:	ja     0x40bb76
  40bbd6:	ins    DWORD PTR es:[edi],dx
  40bbd7:	aam    0xc7
  40bbd9:	fsub   DWORD PTR ds:0x6e38bd5
  40bbdf:	fwait
  40bbe0:	dec    esi
  40bbe1:	das    
  40bbe2:	sub    BYTE PTR [esi+0x7c],0x46
  40bbe6:	mov    ah,bl
  40bbe8:	repnz sbb al,0x4a
  40bbeb:	xchg   BYTE PTR [edx+0x2b],ah
  40bbee:	fstp   DWORD PTR [esi+0x9183de6]
  40bbf4:	or     DWORD PTR [eax],ebx
  40bbf6:	fmul   DWORD PTR [ebp+0x5a465aee]
  40bbfc:	xor    BYTE PTR [ecx+edi*4-0x32],dl
  40bc00:	jbe    0x40bc17
  40bc02:	mov    dl,0x24
  40bc04:	in     eax,dx
  40bc05:	xor    ecx,0xffffffc3
  40bc08:	sbb    esi,DWORD PTR [ecx]
  40bc0a:	and    DWORD PTR [esi+0x55],esp
  40bc0d:	xlat   BYTE PTR ds:[ebx]
  40bc0e:	jmp    esi
  40bc10:	hlt    
  40bc11:	rol    DWORD PTR [esp+eax*4-0x43],1
  40bc15:	mov    WORD PTR [ecx-0x36],gs
  40bc18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc19:	pop    eax
  40bc1a:	(bad)  
  40bc1b:	je     0x40bc53
  40bc1d:	sti    
  40bc1e:	cmp    eax,0x35e86303
  40bc23:	push   ecx
  40bc24:	adc    edx,DWORD PTR [eax+0x27]
  40bc27:	mov    bl,0x72
  40bc29:	push   cs
  40bc2a:	daa    
  40bc2b:	dec    bp
  40bc2d:	inc    esi
  40bc2e:	xchg   ebp,eax
  40bc2f:	xor    BYTE PTR [ecx+edx*2-0x8],bh
  40bc33:	mov    edx,ecx
  40bc35:	je     0x40bbbf
  40bc37:	popf   
  40bc38:	sahf   
  40bc39:	jne    0x40bc4c
  40bc3b:	nop
  40bc3c:	mov    ch,0xc
  40bc3e:	ins    DWORD PTR es:[edi],dx
  40bc3f:	mov    bl,0x9
  40bc41:	call   0xcb915d64
  40bc46:	push   0x63cb590f
  40bc4b:	cdq    
  40bc4c:	xchg   BYTE PTR [edi],bl
  40bc4e:	sbb    al,0x1c
  40bc50:	rcl    DWORD PTR [edi],1
  40bc52:	or     DWORD PTR [ebx+0x40f5b0cb],esi
  40bc58:	outs   dx,BYTE PTR ds:[esi]
  40bc59:	pop    edx
  40bc5a:	jge    0x40bcc4
  40bc5c:	inc    esp
  40bc5d:	sti    
  40bc5e:	test   DWORD PTR [eax+ebp*2-0x3b],eax
  40bc62:	inc    ecx
  40bc63:	xchg   DWORD PTR [eax],edx
  40bc65:	or     DWORD PTR [esi+ebp*2],ecx
  40bc68:	iret   
  40bc69:	loope  0x40bc8f
  40bc6b:	and    DWORD PTR [edi],esp
  40bc6d:	mov    edx,0xf8b18265
  40bc72:	call   0xc455:0x360bb2e4
  40bc79:	sahf   
  40bc7a:	mov    bl,0xa3
  40bc7c:	or     eax,ebp
  40bc7e:	(bad)  
  40bc7f:	inc    edi
  40bc80:	adc    BYTE PTR [edx],dh
  40bc82:	test   al,dl
  40bc84:	sub    edx,0xffffff9c
  40bc87:	sbb    al,0x6e
  40bc89:	xchg   DWORD PTR [ebp+0x681ff2a0],ebx
  40bc8f:	pop    esp
  40bc90:	pop    edx
  40bc91:	sub    bh,bh
  40bc93:	mov    ch,0x5d
  40bc95:	das    
  40bc96:	fmul   QWORD PTR [ebp+0x2b]
  40bc99:	pop    ss
  40bc9a:	aaa    
  40bc9b:	mov    ch,0xd
  40bc9d:	test   cl,ch
  40bc9f:	add    ch,dh
  40bca1:	or     dh,BYTE PTR [ebp+0x1a]
  40bca4:	dec    edi
  40bca5:	das    
  40bca6:	push   esi
  40bca7:	jno    0x40bc7e
  40bca9:	loope  0x40bc70
  40bcab:	mov    ebx,0x3b5dfcd2
  40bcb0:	inc    esi
  40bcb2:	mov    bh,0x7d
  40bcb4:	xor    edx,edi
  40bcb6:	push   ds
  40bcb7:	xlat   BYTE PTR ds:[ebx]
  40bcb8:	call   0x5f6f:0x51690213
  40bcbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcc0:	rcl    BYTE PTR [esi-0xe648376],1
  40bcc6:	int    0x31
  40bcc8:	inc    edi
  40bcc9:	cmp    ebx,ebx
  40bccb:	std    
  40bccc:	inc    edi
  40bccd:	mov    eax,0x2197adac
  40bcd2:	jl     0x40bd23
  40bcd4:	adc    al,0xe3
  40bcd6:	cmp    eax,0x4f78aeba
  40bcdb:	test   DWORD PTR ds:0x1347da9c,ebp
  40bce1:	outs   dx,BYTE PTR ds:[esi]
  40bce2:	ret    0x9452
  40bce5:	jp     0x40bd20
  40bce7:	xor    esp,DWORD PTR [ebx]
  40bce9:	cmp    cl,al
  40bceb:	repz inc edx
  40bced:	mul    DWORD PTR [edi+0x14]
  40bcf0:	outs   dx,DWORD PTR ds:[esi]
  40bcf1:	sbb    DWORD PTR [edx],0x27bce4bf
  40bcf7:	inc    edx
  40bcf8:	xchg   DWORD PTR [eax+0x38862c9e],esi
  40bcfe:	shl    DWORD PTR [eax+0x1a],0x8c
  40bd02:	jmp    DWORD PTR [ecx-0x14]
  40bd05:	xor    esp,0xd12d3369
  40bd0b:	in     al,0xe0
  40bd0d:	leave  
  40bd0e:	jg     0x40bd0c
  40bd10:	mov    edi,0x483a0c94
  40bd15:	out    dx,al
  40bd16:	mov    ebp,0xc586e4d8
  40bd1b:	fisub  DWORD PTR [esp+eiz*8]
  40bd1e:	mov    dl,0x22
  40bd20:	pop    edi
  40bd21:	dec    ebp
  40bd22:	push   eax
  40bd23:	mov    DWORD PTR [ecx-0x31],esp
  40bd26:	pop    ebp
  40bd27:	loop   0x40bd78
  40bd29:	jb     0x40bd0e
  40bd2b:	scas   eax,DWORD PTR es:[edi]
  40bd2c:	sti    
  40bd2d:	mov    bl,0xb4
  40bd2f:	xchg   ecx,eax
  40bd30:	sbb    BYTE PTR [ebp+0x116d8341],ah
  40bd36:	aam    0xcb
  40bd38:	push   ds
  40bd39:	popf   
  40bd3a:	lea    edi,[ebx]
  40bd3c:	shl    DWORD PTR [ecx],cl
  40bd3e:	or     bh,BYTE PTR [ebx-0x28]
  40bd41:	fcomp  QWORD PTR [ebp-0x6d27c2bf]
  40bd48:	fwait
  40bd49:	xor    eax,0xfea459
  40bd4e:	or     DWORD PTR [edi+0x13],0x76
  40bd52:	sbb    ah,BYTE PTR ds:0xf67c0d96
  40bd58:	jl     0x40bd28
  40bd5a:	ret    
  40bd5b:	fistp  QWORD PTR [esi-0x1c]
  40bd5e:	inc    edx
  40bd5f:	sbb    ch,BYTE PTR [esi]
  40bd61:	gs adc esi,ecx
  40bd64:	inc    edx
  40bd65:	adc    cl,BYTE PTR [esi]
  40bd67:	sbb    eax,0x6a305956
  40bd6c:	jp     0x40bdca
  40bd6e:	inc    edi
  40bd6f:	in     al,0xae
  40bd71:	pop    ss
  40bd72:	or     al,0x86
  40bd74:	pop    ds
  40bd75:	push   cs
  40bd76:	call   0x62910084
  40bd7b:	xchg   edi,eax
  40bd7c:	cli    
  40bd7d:	push   cs
  40bd7e:	xchg   eax,edi
  40bd80:	sti    
  40bd81:	or     eax,esi
  40bd83:	popf   
  40bd84:	jne    0x40bdf9
  40bd86:	inc    edx
  40bd87:	rcr    BYTE PTR [edx-0x525882be],0x3f
  40bd8e:	jge    0x40bd32
  40bd90:	lods   al,BYTE PTR ds:[esi]
  40bd91:	das    
  40bd92:	adc    ch,bh
  40bd94:	jae    0x40bd41
  40bd96:	in     eax,0x2b
  40bd98:	shr    DWORD PTR [esi+0x15],cl
  40bd9b:	cmp    ebx,DWORD PTR [esi-0x24ac9506]
  40bda1:	in     al,dx
  40bda2:	pop    edi
  40bda3:	call   0x89ca:0xb2910e3d
  40bdaa:	es jp  0x40bdf1
  40bdad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdae:	nop
  40bdaf:	(bad)  
  40bdb0:	pop    edi
  40bdb1:	inc    ebp
  40bdb2:	push   ss
  40bdb3:	xor    eax,0xb3efa27f
  40bdb8:	jo     0x40bd65
  40bdba:	arpl   WORD PTR ds:0xc55b5423,di
  40bdc0:	cdq    
  40bdc1:	mov    eax,ds:0xd8154f24
  40bdc6:	jmp    0x3bfefa73
  40bdcb:	pop    ebx
  40bdcc:	fisttp WORD PTR [ecx]
  40bdce:	mov    dh,0x6
  40bdd0:	lea    edi,[ebp+ebx*8+0x2dac2960]
  40bdd7:	imul   edi,DWORD PTR [ecx],0x4f2a8fc3
  40bddd:	xchg   ebx,eax
  40bdde:	dec    esp
  40bddf:	sbb    ebp,0xce522308
  40bde5:	shl    BYTE PTR [ebx+0x75],1
  40bde8:	mov    eax,ds:0xa992168f
  40bded:	xchg   edx,eax
  40bdee:	cld    
  40bdef:	jne    0x40bde5
  40bdf1:	retf   
  40bdf2:	and    eax,0x5c7b808d
  40bdf7:	push   0x11
  40bdf9:	pop    esi
  40bdfa:	sub    eax,0xe9bf59f8
  40bdff:	pop    ebx
  40be00:	dec    esi
  40be01:	pop    edi
  40be02:	fincstp 
  40be04:	sub    BYTE PTR [ecx-0x4],0x21
  40be08:	jge    0x40be10
  40be0a:	xchg   esp,eax
  40be0b:	sbb    edi,DWORD PTR [eax-0x40]
  40be0e:	out    0xba,eax
  40be10:	cld    
  40be11:	cmp    DWORD PTR [ebp-0x64],edi
  40be14:	dec    ecx
  40be15:	or     ebp,DWORD PTR [ebx+0x3ab81f8]
  40be1b:	push   es
  40be1c:	push   ss
  40be1d:	adc    DWORD PTR [edi+0x60],0x58
  40be21:	imul   ecx,esp,0x1e
  40be24:	and    eax,0xa228eb70
  40be29:	pop    eax
  40be2a:	mov    es,WORD PTR [edi]
  40be2c:	bound  esi,QWORD PTR [ebp+esi*8-0x66a17869]
  40be33:	mov    bh,0x1c
  40be35:	jae    0x40be31
  40be37:	push   eax
  40be38:	(bad)  
  40be39:	in     al,dx
  40be3a:	or     al,0x75
  40be3c:	dec    eax
  40be3d:	popf   
  40be3e:	out    0x73,eax
  40be40:	lods   al,BYTE PTR ds:[esi]
  40be41:	leave  
  40be42:	dec    esp
  40be43:	mov    ?,WORD PTR [ecx]
  40be45:	mov    dl,0x3e
  40be47:	xor    eax,0x791a2c5d
  40be4c:	pop    ss
  40be4d:	int3   
  40be4e:	push   ebp
  40be4f:	pop    eax
  40be50:	dec    ebp
  40be51:	or     DWORD PTR [eax],ebp
  40be53:	call   0xba17:0x25ae3d9a
  40be5a:	mul    eax
  40be5c:	sbb    eax,0xfbfba923
  40be61:	push   ds
  40be62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be63:	and    DWORD PTR [ebp+0x15],0x13f805c1
  40be6a:	data16 std 
  40be6c:	and    eax,0xe4b19abf
  40be71:	pop    esp
  40be72:	(bad)  
  40be74:	inc    ebx
  40be75:	mov    bl,0xc9
  40be77:	mov    dh,0x91
  40be79:	cmp    edi,DWORD PTR [ebp-0x5d]
  40be7c:	test   al,0x88
  40be7e:	or     al,0x69
  40be80:	and    eax,DWORD PTR [ecx-0x32]
  40be83:	push   ds
  40be84:	add    BYTE PTR [edx-0x4e],dh
  40be87:	(bad)  
  40be88:	fmul   QWORD PTR ss:[ecx-0x20e0c0e]
  40be8f:	sbb    BYTE PTR [esi+0x5aac850e],bh
  40be95:	pop    esp
  40be96:	dec    esp
  40be97:	jbe    0x40be31
  40be99:	jnp    0x40be21
  40be9b:	je     0x40beb8
  40be9d:	and    BYTE PTR [edi+esi*8-0x2c],ch
  40bea1:	inc    edi
  40bea2:	test   DWORD PTR ds:0xae63616d,esp
  40bea8:	daa    
  40bea9:	push   edx
  40beaa:	jo     0x40bee0
  40beac:	stc    
  40bead:	pop    ebp
  40beae:	call   0xeb17f00b
  40beb3:	push   es
  40beb4:	ss inc ebp
  40beb6:	xor    edi,DWORD PTR [edx-0x53]
  40beb9:	xor    bl,bl
  40bebb:	cdq    
  40bebc:	in     eax,0x4
  40bebe:	call   DWORD PTR [eax-0xe]
  40bec1:	mov    bh,0x5d
  40bec3:	cli    
  40bec4:	fiadd  WORD PTR [ebx+0x1c69fa48]
  40beca:	mov    ebp,0xd4f828d7
  40becf:	es or  dl,0x87
  40bed3:	pop    edi
  40bed4:	(bad)  
  40bed5:	push   sp
  40bed7:	pop    ss
  40bed8:	mov    BYTE PTR [eax+edx*1+0x9],bl
  40bedc:	adc    BYTE PTR [edi],0x54
  40bedf:	xchg   edi,eax
  40bee0:	add    ebp,esi
  40bee2:	xchg   ecx,eax
  40bee3:	push   cs
  40bee4:	push   esi
  40bee5:	mov    eax,ds:0x83b616b1
  40beea:	xchg   ecx,eax
  40beeb:	xchg   esp,eax
  40beec:	lock mov al,ds:0x6ebcafe4
  40bef2:	(bad)  
  40bef3:	xor    DWORD PTR ds:0xb9d61ca7,0x2d3e3119
  40befd:	mov    ecx,0x177fde4a
  40bf02:	les    ecx,FWORD PTR [ebx-0xb4e88e6]
  40bf08:	fcmovu st,st(1)
  40bf0a:	push   ebx
  40bf0b:	bnd jae 0x40beb1
  40bf0e:	cli    
  40bf0f:	in     al,0xd5
  40bf11:	hlt    
  40bf12:	mov    dl,0xa5
  40bf14:	imul   edx,edi,0x21
  40bf17:	outs   dx,DWORD PTR ds:[esi]
  40bf18:	jne    0x40becc
  40bf1a:	clc    
  40bf1b:	push   esi
  40bf1c:	push   cs
  40bf1d:	mov    cl,0xc9
  40bf1f:	adc    al,0x82
  40bf22:	int3   
  40bf23:	xchg   ecx,eax
  40bf24:	push   ds
  40bf25:	cld    
  40bf26:	mov    dl,0x2a
  40bf28:	mov    ah,0xea
  40bf2a:	(bad)
  40bf2e:	add    bh,BYTE PTR [edx]
  40bf30:	xchg   ebp,eax
  40bf31:	jmp    0x9304:0x29d78031
  40bf38:	mov    cl,0x95
  40bf3a:	xor    esi,esp
  40bf3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf3d:	lock lea ebp,[edi-0x6d]
  40bf41:	in     eax,0xde
  40bf43:	jmp    0x40bfb8
  40bf45:	mov    al,0x79
  40bf47:	bts    DWORD PTR [ecx+esi*1+0x7f2d6cd7],ebx
  40bf4f:	sub    ebp,ebp
  40bf51:	das    
  40bf52:	mov    eax,DWORD PTR [ebx+0x34]
  40bf55:	mov    dh,BYTE PTR [ebx]
  40bf57:	call   0xee3a4fac
  40bf5c:	fsubrp st(4),st
  40bf5e:	mov    bh,bl
  40bf60:	sti    
  40bf61:	dec    edx
  40bf62:	test   DWORD PTR [ebx-0x49ac03ca],0xd82c008b
  40bf6c:	mov    ch,0xd3
  40bf6e:	push   ebx
  40bf6f:	mov    ecx,0x1acea604
  40bf74:	inc    esi
  40bf75:	sar    ch,0x21
  40bf78:	adc    DWORD PTR [eax],ebp
  40bf7a:	sub    BYTE PTR [ebx],bl
  40bf7c:	popa   
  40bf7d:	cmp    DWORD PTR [edi-0x52bc1101],0x20
  40bf84:	pushf  
  40bf85:	jns    0x40bfa8
  40bf87:	(bad)  
  40bf88:	sub    BYTE PTR [edx+0x4a64ce10],ch
  40bf8e:	pop    ds
  40bf8f:	popa   
  40bf90:	mov    cl,0xd0
  40bf92:	push   esp
  40bf93:	test   DWORD PTR [eax],eax
  40bf95:	add    al,0xc7
  40bf97:	jo     0x40bfcd
  40bf99:	xchg   BYTE PTR [edi+edi*8+0x6f],ch
  40bf9d:	sbb    eax,0xda8173c1
  40bfa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfa3:	int3   
  40bfa4:	shl    DWORD PTR ds:0xed7906c7,0xc4
  40bfab:	out    dx,eax
  40bfac:	in     al,0x90
  40bfae:	sar    DWORD PTR [eax],0x6
  40bfb1:	push   ds
  40bfb2:	push   ecx
  40bfb3:	jo     0x40bf53
  40bfb5:	jne    0x40bfcd
  40bfb7:	jmp    0xcef1d788
  40bfbc:	mov    al,al
  40bfbe:	and    eax,0xc6a63b83
  40bfc3:	pop    ss
  40bfc4:	cmp    cl,al
  40bfc6:	outs   dx,DWORD PTR ds:[esi]
  40bfc7:	rcl    BYTE PTR [edx+0x53],0x43
  40bfcb:	dec    ebx
  40bfcc:	popf   
  40bfcd:	jmp    0x40bf8e
  40bfcf:	fsub   QWORD PTR [edi+0x14e6e548]
  40bfd5:	test   DWORD PTR [edx+0x4c],edx
  40bfd8:	add    al,0xc7
  40bfda:	imul   eax,DWORD PTR [edi+0x34b7c6a5],0x14
  40bfe1:	sbb    eax,0xce028604
  40bfe6:	ds call 0xfa356cbf
  40bfec:	test   al,0x84
  40bfee:	rol    DWORD PTR [esi],cl
  40bff0:	ret    0x227
  40bff3:	inc    edx
  40bff4:	test   BYTE PTR [esi],0x76
  40bff7:	ja     0x40bfeb
  40bff9:	call   0xbc97818e
  40bffe:	arpl   bp,cx
  40c000:	adc    BYTE PTR [esi-0x24eccdf4],dl
  40c006:	stos   BYTE PTR es:[edi],al
  40c007:	sbb    eax,0x4c396118
  40c00c:	or     eax,DWORD PTR [edi-0x26d5f61b]
  40c012:	adc    DWORD PTR [edi+0x5d],ecx
  40c015:	add    al,0x20
  40c017:	fmul   DWORD PTR [eax-0x6e213986]
  40c01d:	xchg   ebp,eax
  40c01e:	xchg   esp,eax
  40c01f:	push   cs
  40c020:	dec    edx
  40c021:	and    eax,DWORD PTR [eax]
  40c023:	fucomip st,st(2)
  40c025:	jns    0x40c02f
  40c027:	daa    
  40c028:	adc    DWORD PTR [edx+0x24],edx
  40c02b:	sbb    bh,0xba
  40c02e:	ins    BYTE PTR es:[edi],dx
  40c02f:	ror    DWORD PTR [ebx+eiz*4+0x5af69e4f],1
  40c036:	xchg   ebx,eax
  40c037:	adc    bh,0x1a
  40c03a:	call   DWORD PTR [esp+edx*1]
  40c03d:	xchg   edx,eax
  40c03e:	jle    0x40c08a
  40c040:	jcxz   0x40c04e
  40c043:	lods   al,BYTE PTR ds:[esi]
  40c044:	sahf   
  40c045:	pop    edx
  40c046:	(bad)  
  40c047:	(bad)  
  40c048:	inc    BYTE PTR [ebx-0x67adb080]
  40c04e:	std    
  40c04f:	ja     0x40c04f
  40c051:	jb     0x40c063
  40c053:	and    esi,DWORD PTR [ecx+0x5]
  40c056:	popf   
  40c057:	test   al,0x12
  40c059:	mov    gs,WORD PTR [edx]
  40c05b:	rcl    DWORD PTR [ebp+0x59],0xe5
  40c05f:	push   edi
  40c060:	cmp    BYTE PTR [edx-0x33a4a6ac],bl
  40c066:	and    edx,DWORD PTR [ecx]
  40c068:	mov    ds:0xdea90f50,al
  40c06d:	shr    esp,0x19
  40c070:	pop    ecx
  40c071:	sub    ecx,DWORD PTR [esi]
  40c073:	iret   
  40c074:	imul   ebx
  40c076:	mov    al,0x77
  40c078:	not    DWORD PTR [edx+0x78]
  40c07b:	xlat   BYTE PTR ds:[ebx]
  40c07c:	sub    esi,DWORD PTR [ebx]
  40c07e:	or     esi,ebp
  40c080:	xchg   edx,eax
  40c081:	adc    cl,BYTE PTR [ecx+0x32]
  40c084:	jmp    0x40c050
  40c086:	inc    esi
  40c087:	jle    0x40c08e
  40c089:	nop
  40c08a:	and    bl,BYTE PTR [eax+ecx*4+0x2184af0f]
  40c091:	sbb    al,0x49
  40c093:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c094:	scas   al,BYTE PTR es:[edi]
  40c095:	stos   DWORD PTR es:[edi],eax
  40c096:	ds pop ds
  40c098:	sbb    DWORD PTR ds:0xb473a5d7,esp
  40c09e:	int    0xa4
  40c0a0:	mov    ch,0xee
  40c0a2:	inc    edi
  40c0a3:	in     al,0x79
  40c0a5:	pop    esp
  40c0a6:	aas    
  40c0a7:	or     ecx,edi
  40c0a9:	leave  
  40c0aa:	or     eax,0xb364a4c5
  40c0af:	inc    edi
  40c0b0:	mov    bh,0xe7
  40c0b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0b3:	(bad)  
  40c0b4:	ds pop esi
  40c0b6:	test   DWORD PTR [edx-0x2455244b],0xd70924a7
  40c0c0:	push   ds
  40c0c1:	sub    al,BYTE PTR [edx]
  40c0c3:	fdivr  st,st(3)
  40c0c5:	stc    
  40c0c6:	repnz pop esp
  40c0c8:	sahf   
  40c0c9:	pop    es
  40c0ca:	nop
  40c0cb:	pop    edx
  40c0cc:	add    al,ch
  40c0ce:	mov    eax,0x2aba1b43
  40c0d3:	ret    0x6281
  40c0d6:	hlt    
  40c0d7:	and    eax,0x9b6300e
  40c0dc:	(bad)  
  40c0dd:	jbe    0x40c147
  40c0df:	int    0x35
  40c0e1:	fist   WORD PTR [esi-0x67]
  40c0e4:	mov    esi,0x4e511291
  40c0e9:	sahf   
  40c0ea:	push   0x238ed15d
  40c0ef:	add    al,BYTE PTR [eax-0x6825d39a]
  40c0f5:	mov    esp,0xc1634e9
  40c0fa:	xor    DWORD PTR [ebx+esi*8+0xb],ebx
  40c0fe:	xor    BYTE PTR [ebp+0x2b],dl
  40c101:	mov    ebx,?
  40c103:	jae    0x40c0a5
  40c105:	(bad)  
  40c106:	push   esp
  40c107:	js     0x40c0b1
  40c109:	and    al,0x7b
  40c10b:	not    DWORD PTR [edx-0x256e2739]
  40c111:	jge    0x40c0e2
  40c113:	iret   
  40c114:	out    0x2,al
  40c116:	ds repz ja 0x40c09b
  40c11a:	push   edi
  40c11b:	ins    BYTE PTR es:[edi],dx
  40c11c:	pushf  
  40c11d:	push   esp
  40c11e:	jne    0x40c18e
  40c120:	lds    edi,FWORD PTR [edx-0x7ad53e9a]
  40c126:	mov    dh,0xe2
  40c128:	xor    eax,0x5f1f0d0c
  40c12d:	sub    al,ch
  40c12f:	cmp    cl,dh
  40c131:	push   0xffffff85
  40c133:	mov    ?,esi
  40c135:	sub    eax,0x3f3e4b5
  40c13a:	adc    BYTE PTR [esi-0x13966434],bl
  40c140:	inc    ecx
  40c141:	inc    esp
  40c142:	pop    ebp
  40c143:	push   cs
  40c144:	cmp    edi,edi
  40c146:	fdiv   QWORD PTR [edx+edx*1-0x44]
  40c14a:	into   
  40c14b:	push   0x56
  40c14d:	ret    
  40c14e:	cmp    BYTE PTR [ecx-0x1e],ah
  40c151:	retf   
  40c152:	iret   
  40c153:	add    al,0x51
  40c155:	aaa    
  40c156:	xor    al,0xb0
  40c158:	cwde   
  40c159:	test   eax,0xd186cd58
  40c15e:	(bad)  
  40c15f:	pop    esp
  40c160:	pop    eax
  40c161:	repz inc ebx
  40c163:	pop    ebp
  40c164:	addr16 call 0x39482e54
  40c16a:	mov    bh,0x50
  40c16c:	push   esi
  40c16d:	xlat   BYTE PTR ds:[ebx]
  40c16e:	inc    edi
  40c16f:	outs   dx,DWORD PTR ds:[esi]
  40c170:	popf   
  40c171:	mov    bl,0x67
  40c173:	enter  0x147d,0x90
  40c177:	sbb    DWORD PTR [ebp+0x3402ab38],0xccff0eb5
  40c181:	push   ss
  40c182:	fsubr  st(5),st
  40c184:	out    dx,eax
  40c185:	dec    ebp
  40c186:	jecxz  0x40c124
  40c188:	shl    BYTE PTR [ebx],1
  40c18a:	popa   
  40c18b:	mov    ebx,0xc2e4aa02
  40c190:	jne    0x40c176
  40c192:	add    ebx,DWORD PTR [ebp-0x2e]
  40c195:	add    edi,0xe42cd98a
  40c19b:	sbb    BYTE PTR [ebx+0x37],ch
  40c19e:	push   esp
  40c19f:	add    DWORD PTR [ecx-0x1450813e],0x43
  40c1a6:	cmp    DWORD PTR [ecx-0x71],ebp
  40c1a9:	pop    ss
  40c1aa:	nop
  40c1ab:	jae    0x40c214
  40c1ad:	ds inc ecx
  40c1af:	cmp    DWORD PTR [eax-0x4e],eax
  40c1b2:	adc    ecx,eax
  40c1b4:	inc    edi
  40c1b5:	sbb    dh,BYTE PTR [edx+0x63498699]
  40c1bb:	outs   dx,BYTE PTR ds:[esi]
  40c1bc:	sar    DWORD PTR [ebx+0x43],0xfa
  40c1c0:	jo     0x40c185
  40c1c2:	adc    bl,al
  40c1c4:	mov    bh,0xf5
  40c1c6:	xlat   BYTE PTR ss:[ebx]
  40c1c8:	mov    ?,WORD PTR [ebp-0x5b]
  40c1cb:	push   cs
  40c1cc:	lea    edx,[ebx-0x3]
  40c1cf:	push   es
  40c1d0:	call   0xc569:0x14560dc9
  40c1d7:	fsub   DWORD PTR [eax-0x57414e85]
  40c1dd:	sub    eax,0x6b1d9a22
  40c1e2:	neg    BYTE PTR [ebx+edx*4]
  40c1e5:	inc    edi
  40c1e6:	pusha  
  40c1e7:	mov    ds:0x804765e5,eax
  40c1ec:	mov    ds:0x6a00d5f9,eax
  40c1f1:	add    DWORD PTR [ecx+0x1e],eax
  40c1f4:	pop    ecx
  40c1f5:	xor    BYTE PTR [ecx+0x486e5a],dl
  40c1fb:	adc    BYTE PTR [esi],cl
  40c1fd:	push   ds
  40c1fe:	stos   BYTE PTR es:[edi],al
  40c1ff:	in     eax,dx
  40c200:	cmc    
  40c201:	mov    bh,al
  40c203:	mov    ds:0x4fd69de2,eax
  40c208:	xchg   ebp,eax
  40c209:	xor    DWORD PTR [eax+0x5fcb622],0xffffffa3
  40c210:	mov    dl,0xc0
  40c212:	lods   al,BYTE PTR ds:[esi]
  40c213:	cld    
  40c214:	sbb    ebx,DWORD PTR [ebx]
  40c216:	inc    ebp
  40c217:	outs   dx,DWORD PTR ds:[esi]
  40c218:	sbb    eax,DWORD PTR ds:0x48b3a762
  40c21e:	mov    ds:0xfbe32db0,eax
  40c223:	dec    esi
  40c224:	lock inc eax
  40c226:	mov    ah,0xc8
  40c228:	ins    BYTE PTR es:[edi],dx
  40c229:	iret   
  40c22a:	mov    DWORD PTR [ecx],ebp
  40c22c:	mov    ch,dl
  40c22e:	fistp  DWORD PTR [esi+0xf]
  40c231:	ret    0xb81
  40c234:	push   esi
  40c235:	fld    QWORD PTR [edi+eax*1]
  40c238:	jo     0x40c1e5
  40c23a:	lea    ecx,[ecx-0x38]
  40c23d:	aam    0x4d
  40c23f:	pop    ecx
  40c240:	add    eax,DWORD PTR [eax+ecx*4+0x75]
  40c244:	inc    edx
  40c245:	push   0x4bb8d210
  40c24a:	sbb    edx,DWORD PTR [edx]
  40c24c:	jmp    0xe119:0x43168f7
  40c253:	jge    0x40c1de
  40c255:	loop   0x40c1f1
  40c257:	xchg   edx,eax
  40c258:	pop    esp
  40c259:	jecxz  0x40c1f3
  40c25b:	push   0xffffffd4
  40c25d:	mov    ecx,DWORD PTR [edi+0x4b]
  40c260:	mov    eax,ds:0x9293f832
  40c265:	sbb    edi,DWORD PTR [edi+0x5a586e6c]
  40c26b:	inc    edx
  40c26c:	or     al,0x3f
  40c26e:	push   esi
  40c26f:	rcl    ebx,1
  40c271:	aas    
  40c272:	int3   
  40c273:	fadd   st(3),st
  40c275:	inc    ecx
  40c276:	fmul   DWORD PTR [ecx-0x3fe4f7fa]
  40c27c:	fisttp DWORD PTR [ecx+0x790639da]
  40c282:	test   bh,dh
  40c284:	xchg   BYTE PTR [bx+di+0x40],dl
  40c288:	dec    ebp
  40c289:	mov    DWORD PTR [ebx+0x2],ebx
  40c28c:	mov    edx,DWORD PTR [edx-0x5c]
  40c28f:	cmp    BYTE PTR [ebx+0x17417296],0x78
  40c296:	jbe    0x40c2d1
  40c298:	icebp  
  40c299:	push   es
  40c29a:	cmp    dh,al
  40c29c:	in     eax,0x3a
  40c29e:	mov    ebx,0x5afcceb3
  40c2a3:	pop    es
  40c2a4:	xor    eax,0x9bf29945
  40c2a9:	cwde   
  40c2aa:	fs pop eax
  40c2ac:	(bad)  
  40c2ae:	add    dh,bl
  40c2b0:	pop    ecx
  40c2b1:	push   eax
  40c2b2:	das    
  40c2b3:	jl     0x40c31e
  40c2b5:	sub    edi,DWORD PTR [eax-0x6cf398b3]
  40c2bb:	or     al,0x7f
  40c2bd:	arpl   dx,bx
  40c2bf:	rcr    dh,cl
  40c2c1:	in     eax,dx
  40c2c2:	ret    
  40c2c3:	push   0xffffffc8
  40c2c5:	xchg   DWORD PTR [ebx-0x1c73466c],edi
  40c2cb:	or     ebp,DWORD PTR [esi]
  40c2cd:	les    esi,FWORD PTR [esp+ecx*8-0x70]
  40c2d1:	daa    
  40c2d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2d3:	push   ds
  40c2d4:	popa   
  40c2d5:	adc    bl,BYTE PTR [ebp-0x6442a8e1]
  40c2db:	inc    ebp
  40c2dc:	jns    0xaf47b266
  40c2e2:	dec    esp
  40c2e3:	cmp    BYTE PTR [ecx+0x2b531c7d],ah
  40c2e9:	leave  
  40c2ea:	mov    ebp,0xd8288b99
  40c2ef:	dec    eax
  40c2f0:	add    bl,BYTE PTR [edx+0x25]
  40c2f3:	mov    DWORD PTR [eax+0x41],ebp
  40c2f6:	(bad)  
  40c2f8:	loopne 0x40c362
  40c2fa:	repz mov edi,0xa2353027
  40c300:	adc    bh,dh
  40c302:	call   0xe5e1:0xcdce9d2b
  40c309:	cmc    
  40c30a:	les    edi,FWORD PTR [esi-0x35]
  40c30d:	lahf   
  40c30e:	push   eax
  40c30f:	ins    DWORD PTR es:[edi],dx
  40c310:	or     ch,BYTE PTR es:[ecx+ebp*1+0x1a447323]
  40c318:	add    al,BYTE PTR [esi+0x6e40b46c]
  40c31e:	pusha  
  40c31f:	mov    edx,0x3a67fad5
  40c324:	mov    BYTE PTR [eax+edi*8],dh
  40c327:	adc    esi,esi
  40c329:	sbb    al,0x12
  40c32b:	pop    esp
  40c32c:	adc    ch,BYTE PTR [ecx+edi*8-0x27]
  40c330:	pusha  
  40c331:	leave  
  40c332:	pop    edx
  40c333:	jg     0x40c39c
  40c335:	xchg   ch,bl
  40c337:	pusha  
  40c338:	aaa    
  40c339:	jmp    0x40c38a
  40c33b:	jmp    0xb0b6:0x21f07e35
  40c342:	add    DWORD PTR [esi+0x53],ebp
  40c345:	adc    al,0x37
  40c347:	rcl    edx,0x65
  40c34a:	test   BYTE PTR [ecx-0x62c433e2],bl
  40c350:	je     0x40c313
  40c352:	scas   eax,DWORD PTR es:[edi]
  40c353:	pop    ss
  40c354:	test   eax,0x4a2201cd
  40c359:	cli    
  40c35a:	leave  
  40c35b:	test   DWORD PTR [eax-0x26c7a8f3],0x2e5f2bc5
  40c365:	pop    es
  40c366:	and    ah,BYTE PTR [esi]
  40c368:	adc    BYTE PTR [ebx-0x68],cl
  40c36b:	mov    eax,0x5d7e6d9f
  40c370:	call   0xe41a6b0e
  40c375:	push   0xba7511c5
  40c37a:	pop    esp
  40c37b:	cwde   
  40c37c:	lea    edx,[ebx]
  40c37e:	dec    ecx
  40c37f:	in     eax,dx
  40c380:	xlat   BYTE PTR fs:[ebx]
  40c382:	(bad)  
  40c383:	sub    ebx,DWORD PTR [edi+0x12]
  40c386:	call   0xab05:0xc3edafa7
  40c38d:	loopne 0x40c3d0
  40c38f:	jo     0x40c374
  40c391:	jmp    0x7d3b9919
  40c396:	push   0xa2ae606
  40c39b:	mov    al,0x8e
  40c39d:	fcmovne st,st(4)
  40c39f:	mov    WORD PTR [edi+0xd],ds
  40c3a2:	xchg   edx,eax
  40c3a3:	xor    DWORD PTR [edx-0x1e8d3663],0x1b
  40c3aa:	call   0x8040cea5
  40c3af:	maxps  xmm5,xmm3
  40c3b2:	adc    al,0x4e
  40c3b4:	jg     0x40c38a
  40c3b6:	ret    
  40c3b7:	stos   DWORD PTR es:[edi],eax
  40c3b8:	out    0x19,eax
  40c3ba:	pop    es
  40c3bb:	lahf   
  40c3bc:	mov    ds:0xe5e7a544,al
  40c3c1:	push   cs
  40c3c2:	fidiv  WORD PTR [esi-0x796c07f5]
  40c3c8:	stos   DWORD PTR es:[edi],eax
  40c3c9:	mov    ah,BYTE PTR es:[edx]
  40c3cc:	push   ebx
  40c3cd:	sub    BYTE PTR [esi+ecx*8],cl
  40c3d0:	in     al,0x23
  40c3d2:	mov    bl,0x6d
  40c3d4:	jge    0x40c3e6
  40c3d6:	inc    edx
  40c3d7:	pop    ecx
  40c3d8:	div    DWORD PTR [ebp+0x1aceb419]
  40c3de:	mov    bl,0xbc
  40c3e0:	popf   
  40c3e1:	aam    0x70
  40c3e3:	imul   eax,DWORD PTR [edx+0x7e],0xd1c9bfb2
  40c3ea:	(bad)  
  40c3eb:	lods   al,BYTE PTR ds:[esi]
  40c3ec:	xor    ah,BYTE PTR [esi+0x38bca298]
  40c3f2:	mov    bl,0x3f
  40c3f4:	xor    DWORD PTR [eax*8-0x14b6608d],edi
  40c3fb:	and    DWORD PTR [ebx+0x7aecf794],esi
  40c401:	mov    al,0x36
  40c403:	lds    eax,FWORD PTR [edx]
  40c405:	clc    
  40c406:	mov    edx,0x1fcbb19
  40c40b:	sbb    esp,DWORD PTR [ecx]
  40c40d:	or     esp,ecx
  40c40f:	jno    0x40c410
  40c411:	fstp   st(4)
  40c413:	xor    edi,DWORD PTR [eax-0x1ad1789f]
  40c419:	mov    esp,0x8026c93a
  40c41e:	lock and DWORD PTR [ebx+ebx*1+0x4e],ecx
  40c423:	repnz int 0x4b
  40c426:	ds mov cl,0x41
  40c429:	sbb    ecx,DWORD PTR [eax]
  40c42b:	retf   
  40c42c:	int3   
  40c42d:	rcr    DWORD PTR [esi+0x1e],1
  40c430:	fadd   QWORD PTR [esi+0x0]
  40c433:	cmp    DWORD PTR [ebx+0x77],esi
  40c436:	outs   dx,BYTE PTR ds:[esi]
  40c437:	in     eax,0xd1
  40c439:	out    dx,eax
  40c43a:	daa    
  40c43b:	fs jmp 0x40c3c7
  40c43e:	stos   BYTE PTR es:[edi],al
  40c43f:	dec    edx
  40c440:	ror    BYTE PTR [ecx+ebx*8],0xfe
  40c444:	lods   al,BYTE PTR ds:[esi]
  40c445:	xor    al,0x3b
  40c447:	push   ecx
  40c448:	mov    eax,ds:0x85958f02
  40c44d:	mov    dh,0x4
  40c44f:	cmp    BYTE PTR ds:0x37ebe152,0xa
  40c456:	out    0x96,eax
  40c458:	cld    
  40c459:	fdiv   QWORD PTR [ebp+0x6268c451]
  40c45f:	in     al,dx
  40c460:	aad    0x21
  40c462:	or     al,0x47
  40c464:	sar    DWORD PTR [eax],0xd1
  40c467:	lods   al,BYTE PTR ds:[esi]
  40c468:	mov    esi,ss
  40c46a:	jbe    0x40c463
  40c46c:	adc    eax,0x9068d881
  40c471:	jno    0x40c404
  40c473:	les    edx,FWORD PTR [ecx-0x2625ff2]
  40c479:	adc    eax,0x7162b278
  40c47e:	xor    cl,dl
  40c480:	inc    ecx
  40c481:	adc    edx,DWORD PTR [eax-0x697e45be]
  40c487:	imul   esp,ebp,0x7fa3bb87
  40c48d:	pusha  
  40c48e:	xchg   esp,eax
  40c48f:	or     eax,0x7dd3314c
  40c494:	pop    es
  40c495:	sbb    eax,0xdf295a45
  40c49a:	mov    bl,0xba
  40c49c:	mov    ds:0xa1497cec,eax
  40c4a1:	mov    al,0xef
  40c4a3:	test   al,0xd9
  40c4a5:	jp     0x40c50b
  40c4a7:	test   BYTE PTR [esi+0x4f],bl
  40c4aa:	cmp    BYTE PTR [edx],bh
  40c4ac:	es pop esi
  40c4ae:	push   eax
  40c4af:	mov    edx,0xdf042af1
  40c4b4:	fisttp DWORD PTR [eax]
  40c4b6:	xchg   DWORD PTR [ecx],eax
  40c4b8:	add    BYTE PTR [ebx+eiz*1-0x27],ch
  40c4bc:	mov    ebp,ebp
  40c4be:	or     al,0x5d
  40c4c0:	sbb    ah,BYTE PTR [ecx+0x6d]
  40c4c3:	pop    edi
  40c4c4:	sub    eax,0xdd2eca55
  40c4c9:	ficomp WORD PTR [edx+0x4f8e5b0d]
  40c4cf:	add    dh,BYTE PTR [ebx+eax*2+0x5c40acd4]
  40c4d6:	fdivr  QWORD PTR [edi+0x34f0f71b]
  40c4dc:	sbb    al,0xa5
  40c4de:	or     bh,BYTE PTR [edx-0x1e]
  40c4e1:	jl     0x40c481
  40c4e3:	jmp    0x40c4c0
  40c4e5:	cmc    
  40c4e6:	fst    DWORD PTR [edi-0x52bf83c8]
  40c4ec:	adc    DWORD PTR [edx+ebp*1],eax
  40c4ef:	cs xchg edx,eax
  40c4f1:	cmp    al,0xd8
  40c4f3:	sbb    BYTE PTR ss:[bp+di],al
  40c4f7:	clc    
  40c4f8:	cli    
  40c4f9:	(bad)  
  40c4fb:	mov    al,ds:0x3f2471db
  40c500:	rol    ch,cl
  40c502:	or     BYTE PTR [edi-0x1915e451],cl
  40c508:	out    dx,eax
  40c509:	std    
  40c50a:	sub    eax,0x221a1fb8
  40c50f:	add    al,0x82
  40c511:	sub    BYTE PTR [ebp-0x3a2985c4],bh
  40c517:	adc    BYTE PTR [ebx-0x6756a7aa],bh
  40c51d:	jmp    0xb2b0:0x3b80871a
  40c524:	std    
  40c525:	pcmpgtb mm5,mm0
  40c528:	push   esi
  40c529:	gs mov edx,0x5c3bb5dd
  40c52f:	xor    DWORD PTR [eax+eiz*8],ecx
  40c532:	mov    ecx,0x31d41024
  40c537:	rcr    ebx,1
  40c539:	retf   
  40c53a:	jo     0x40c56d
  40c53c:	xchg   ebp,eax
  40c53d:	dec    dx
  40c53f:	pop    ds
  40c540:	in     eax,0x90
  40c542:	pop    ss
  40c543:	pop    ecx
  40c544:	fs test ah,0x54
  40c548:	or     eax,0xf65544bb
  40c54d:	lock jae 0x40c5c7
  40c550:	mov    edi,0x6aea4a93
  40c555:	hlt    
  40c556:	sub    DWORD PTR [eax],eax
  40c558:	xlat   BYTE PTR ds:[ebx]
  40c559:	aam    0x20
  40c55b:	out    dx,al
  40c55c:	add    edi,ebx
  40c55e:	mov    ah,0x7e
  40c560:	or     al,0xe
  40c562:	icebp  
  40c563:	imul   eax,DWORD PTR ds:[ecx],0x4c2db6a
  40c56a:	pusha  
  40c56b:	sbb    edx,DWORD PTR [edx]
  40c56d:	fdiv   DWORD PTR [ebx+0x6cf66632]
  40c573:	call   FWORD PTR [esi]
  40c575:	push   0xffffff89
  40c577:	sub    al,0x0
  40c579:	jg     0x40c549
  40c57b:	sti    
  40c57c:	cmp    DWORD PTR [ebp+0xb],esp
  40c57f:	push   esi
  40c580:	rol    DWORD PTR [ebx-0x68],cl
  40c583:	(bad)  [edi-0x750a6a05]
  40c589:	fwait
  40c58a:	in     eax,dx
  40c58b:	inc    edi
  40c58c:	int3   
  40c58d:	inc    ebp
  40c58e:	rol    BYTE PTR [edx],0xa6
  40c591:	ror    esi,cl
  40c593:	pop    edx
  40c594:	and    ecx,DWORD PTR [esi+0x3e]
  40c597:	hlt    
  40c598:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40c59a:	sbb    cl,BYTE PTR [esi+0x5c]
  40c59d:	sbb    ah,BYTE PTR [ebp-0x50]
  40c5a0:	out    dx,eax
  40c5a1:	mov    dh,0x9
  40c5a3:	mov    DWORD PTR [esi-0x51],esi
  40c5a6:	(bad)  
  40c5a7:	cli    
  40c5a8:	scas   al,BYTE PTR es:[edi]
  40c5a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5aa:	mov    WORD PTR [ecx],es
  40c5ac:	push   edi
  40c5ad:	sbb    esi,DWORD PTR [ebx]
  40c5af:	(bad)  
  40c5b0:	push   edi
  40c5b1:	push   ds
  40c5b2:	xor    bh,BYTE PTR [edx-0x59]
  40c5b5:	and    al,0xe6
  40c5b7:	inc    ecx
  40c5b8:	push   ecx
  40c5b9:	std    
  40c5ba:	and    eax,0x3c12ab1f
  40c5bf:	dec    eax
  40c5c0:	dec    eax
  40c5c1:	adc    eax,0x39f984fa
  40c5c6:	imul   esi,DWORD PTR [edx],0xffffffd3
  40c5c9:	cmc    
  40c5ca:	mov    WORD PTR ds:[eax+0x4c708ece],es
  40c5d1:	in     al,dx
  40c5d2:	push   ecx
  40c5d3:	lock push ebx
  40c5d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5d6:	dec    edi
  40c5d7:	mov    ?,WORD PTR [ebp+edi*1-0x17]
  40c5db:	enter  0x43f6,0xd
  40c5df:	add    esp,DWORD PTR [edi]
  40c5e1:	jle    0x40c62e
  40c5e3:	cmc    
  40c5e4:	pop    edx
  40c5e5:	pop    ebp
  40c5e6:	jecxz  0x40c5ee
  40c5e8:	cmp    al,0x7c
  40c5ea:	fidiv  DWORD PTR [eax]
  40c5ec:	mov    dl,0xcb
  40c5ee:	inc    ecx
  40c5ef:	jg     0x40c5b3
  40c5f1:	rcl    BYTE PTR [ecx+0x73],1
  40c5f4:	xchg   ebp,eax
  40c5f5:	popa   
  40c5f6:	xchg   ecx,eax
  40c5f7:	add    dh,ch
  40c5f9:	xchg   ebx,eax
  40c5fa:	rol    BYTE PTR [ebp+edi*8+0x6b],1
  40c5fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5ff:	cmp    eax,DWORD PTR [edi-0x7ffd6d8f]
  40c605:	add    DWORD PTR ds:0x75d161ba,edi
  40c60b:	nop
  40c60c:	fbld   TBYTE PTR [edx-0x46363987]
  40c612:	dec    esi
  40c613:	xor    ch,BYTE PTR [ecx+0x2e]
  40c616:	lea    edx,[edi+0x33febad]
  40c61c:	cmp    dh,BYTE PTR [ebx]
  40c61e:	pop    ebp
  40c61f:	mov    edi,0x7e550a7d
  40c624:	push   0x64
  40c626:	push   esp
  40c627:	pusha  
  40c628:	(bad)  
  40c629:	repnz test esi,edx
  40c62c:	outs   dx,BYTE PTR ds:[esi]
  40c62d:	jmp    0x40c5b2
  40c62f:	iret   
  40c630:	lea    edi,[ebp-0x53]
  40c633:	xlat   BYTE PTR ds:[ebx]
  40c634:	and    BYTE PTR [ebx],dh
  40c636:	fxch   st(3)
  40c638:	pop    ss
  40c639:	or     al,0xdf
  40c63b:	(bad)  
  40c63c:	mov    ss,WORD PTR [ebp-0x2d8d051d]
  40c642:	jmp    0xad6f:0xf8c4a283
  40c649:	pop    eax
  40c64a:	sub    dh,0x54
  40c64d:	xchg   esp,eax
  40c64e:	popf   
  40c64f:	mov    eax,ebx
  40c651:	cli    
  40c652:	jmp    0x14efd39
  40c657:	retf   
  40c658:	jmp    0x16b52879
  40c65d:	ds call 0x5b3e:0x58c788ae
  40c665:	out    0xad,eax
  40c667:	popf   
  40c668:	push   ebp
  40c669:	out    dx,al
  40c66a:	dec    esp
  40c66b:	in     eax,0x7d
  40c66d:	pop    es
  40c66e:	push   ss
  40c66f:	or     eax,0x6ad0b29c
  40c674:	sbb    eax,0x70378368
  40c679:	adc    DWORD PTR [esi*2+0x58cb7249],esi
  40c680:	es lahf 
  40c682:	push   ebx
  40c683:	and    ebp,esp
  40c685:	je     0x40c614
  40c687:	push   ebx
  40c688:	pop    esi
  40c689:	xor    ch,BYTE PTR [ebx]
  40c68b:	outs   dx,DWORD PTR ds:[esi]
  40c68c:	mov    esi,0xaa695d06
  40c691:	leave  
  40c692:	ds sbb eax,0x29a1a99d
  40c698:	jge    0x40c6fb
  40c69a:	fcmovnb st,st(2)
  40c69c:	jge    0x40c67f
  40c69e:	in     eax,dx
  40c69f:	sbb    esp,DWORD PTR [ecx+esi*8]
  40c6a2:	repnz or ah,bh
  40c6a5:	and    DWORD PTR [eax-0x497477b5],eax
  40c6ab:	add    dl,BYTE PTR [ebp+0x3ced6bc5]
  40c6b1:	retf   0x3987
  40c6b4:	fnsave [ebp+0x1e542268]
  40c6ba:	lea    esi,[edx-0x5a5e2d42]
  40c6c0:	jbe    0x40c737
  40c6c2:	movd   mm7,DWORD PTR [edi]
  40c6c5:	or     eax,0xffe9bfd9
  40c6ca:	push   ebp
  40c6cb:	daa    
  40c6cc:	iret   
  40c6cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6ce:	int3   
  40c6cf:	cmp    edx,DWORD PTR [edx]
  40c6d1:	mov    ebp,0x4c934e88
  40c6d6:	mov    edi,0x3d3655e1
  40c6db:	jmp    0x70cb5bb3
  40c6e0:	pop    edi
  40c6e1:	je     0x40c66b
  40c6e3:	std    
  40c6e4:	inc    edx
  40c6e5:	icebp  
  40c6e6:	jge    0x40c6ce
  40c6e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6e9:	add    al,0xcd
  40c6eb:	add    DWORD PTR [esi],edx
  40c6ed:	cmp    esi,DWORD PTR [ebp+0x7f]
  40c6f0:	jmp    0xcda237c0
  40c6f5:	xchg   ebx,eax
  40c6f6:	test   al,0x1d
  40c6f8:	pusha  
  40c6f9:	ins    BYTE PTR es:[edi],dx
  40c6fa:	sbb    eax,0x4e272112
  40c6ff:	push   0xe38404c6
  40c704:	inc    ecx
  40c705:	int    0xe
  40c707:	mov    cl,0xf2
  40c709:	mov    dh,0xd2
  40c70b:	andps  xmm7,XMMWORD PTR ds:[ebp-0x13]
  40c710:	cs push es
  40c712:	jae    0x40c6e5
  40c714:	loopne 0x40c6af
  40c716:	sub    eax,ebp
  40c718:	mov    bh,0xd7
  40c71a:	jmp    0x1309:0x48670b00
  40c721:	popa   
  40c722:	or     ch,ah
  40c724:	cli    
  40c725:	dec    ebx
  40c726:	pushf  
  40c727:	jge    0x40c79b
  40c729:	arpl   WORD PTR [eax],dx
  40c72b:	iret   
  40c72c:	push   esi
  40c72d:	inc    ebp
  40c72e:	lods   eax,DWORD PTR ds:[esi]
  40c72f:	sub    DWORD PTR [ebx],ebp
  40c731:	bound  edi,QWORD PTR [edx]
  40c733:	push   edx
  40c734:	test   BYTE PTR [ebx+0x36],0x3
  40c738:	xor    WORD PTR [esi+0x69b57b80],sp
  40c73f:	mov    ebp,0x2f3a1bfa
  40c744:	inc    ebx
  40c745:	lods   al,BYTE PTR ds:[esi]
  40c746:	push   ebx
  40c747:	fwait
  40c748:	mov    bh,0xea
  40c74a:	sbb    ax,0xd046
  40c74e:	cmp    cl,ch
  40c750:	xlat   BYTE PTR ds:[ebx]
  40c751:	xor    ebx,esi
  40c753:	pop    esp
  40c754:	sub    bl,BYTE PTR [edx]
  40c756:	jmp    0x40c7a4
  40c758:	dec    ecx
  40c759:	push   esi
  40c75a:	mov    dl,0x17
  40c75c:	in     eax,0x2
  40c75e:	pushf  
  40c75f:	pop    edi
  40c760:	jle    0x40c7a8
  40c762:	adc    dl,BYTE PTR [esi+0xc]
  40c765:	loope  0x40c774
  40c767:	push   ds
  40c768:	jge    0x40c721
  40c76a:	pop    ebx
  40c76b:	jae    0x40c75c
  40c76d:	mul    ah
  40c76f:	sar    BYTE PTR [ebp+0x60580a8a],cl
  40c775:	mov    eax,0x556fec36
  40c77a:	jne    0x40c7b0
  40c77c:	pop    edx
  40c77d:	dec    esp
  40c77e:	cmp    eax,0x309c94eb
  40c783:	iret   
  40c784:	cmp    ch,BYTE PTR [esi+0x3f]
  40c787:	adc    al,0xe
  40c789:	xchg   esp,eax
  40c78a:	jmp    0x40c808
  40c78c:	aam    0x6b
  40c78e:	jge    0x40c76f
  40c790:	mov    ecx,0xa15ee687
  40c795:	jmp    0x40c727
  40c797:	fild   WORD PTR [edi+0x7a]
  40c79a:	cmp    ebx,DWORD PTR [ecx]
  40c79c:	sub    eax,0xb74e4c07
  40c7a1:	ins    DWORD PTR es:[edi],dx
  40c7a2:	xor    edi,DWORD PTR [eax+0x57]
  40c7a5:	pop    ecx
  40c7a6:	xchg   edi,eax
  40c7a7:	xchg   edi,eax
  40c7a8:	xor    al,0x60
  40c7aa:	and    eax,0xc55d9904
  40c7af:	in     eax,dx
  40c7b0:	cmp    edi,ecx
  40c7b2:	push   esp
  40c7b3:	or     esi,DWORD PTR [ecx-0x2f544a30]
  40c7b9:	mov    al,ds:0x1f4e4d0b
  40c7be:	lea    esp,[ebp+0x4ec6e3b9]
  40c7c4:	inc    ebx
  40c7c5:	dec    esp
  40c7c6:	xchg   ebx,eax
  40c7c7:	hlt    
  40c7c8:	ds push eax
  40c7ca:	jbe    0x40c7b9
  40c7cc:	xor    edi,DWORD PTR [di-0x79]
  40c7d0:	das    
  40c7d1:	dec    eax
  40c7d2:	jb     0x40c808
  40c7d4:	rol    DWORD PTR [esi],1
  40c7d6:	pop    ebp
  40c7d7:	or     eax,0x1e70221f
  40c7dc:	jl     0x40c819
  40c7de:	push   ss
  40c7df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7e0:	inc    esi
  40c7e1:	lock xor edx,ebx
  40c7e4:	(bad)  
  40c7e5:	mov    dl,0xea
  40c7e7:	xor    BYTE PTR [esi+0x544be4c1],bl
  40c7ed:	cwde   
  40c7ee:	dec    eax
  40c7ef:	xor    DWORD PTR [ebp+ebp*4+0x62],ecx
  40c7f3:	push   ebx
  40c7f4:	pop    edi
  40c7f5:	jne    0x40c83f
  40c7f7:	or     eax,0xe476c544
  40c7fc:	sbb    edi,DWORD PTR [ebx+0x10]
  40c7ff:	dec    esi
  40c800:	pop    esp
  40c801:	xor    eax,0x36f5716d
  40c806:	gs jle 0x40c81a
  40c809:	es jnp 0x40c791
  40c80c:	inc    DWORD PTR [ebx+0x75df6133]
  40c812:	imul   ecx,DWORD PTR [edx+0x2f],0x57
  40c816:	shl    DWORD PTR [eax+0x12],0xb6
  40c81a:	arpl   WORD PTR [edi-0x75573de0],bx
  40c820:	add    eax,0x7efd9b85
  40c825:	add    bh,cl
  40c827:	push   ebx
  40c828:	pusha  
  40c829:	stc    
  40c82a:	jne    0x40c844
  40c82c:	cmp    DWORD PTR [edx+0x61e3a218],ebp
  40c832:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c833:	cmp    bh,ah
  40c835:	cmp    ch,BYTE PTR [eax+edx*1-0x54]
  40c839:	loopne 0x40c85d
  40c83b:	retf   
  40c83c:	push   ebp
  40c83d:	sbb    BYTE PTR [edx],bh
  40c83f:	scas   al,BYTE PTR es:[edi]
  40c840:	aad    0xb6
  40c842:	adc    BYTE PTR [eax],ah
  40c844:	inc    edi
  40c845:	dec    eax
  40c846:	push   esi
  40c847:	inc    ecx
  40c848:	in     eax,dx
  40c849:	fst    QWORD PTR [eax+0x5f]
  40c84c:	(bad)  
  40c84d:	adc    edx,DWORD PTR [esi-0x66269b48]
  40c853:	pop    ebp
  40c854:	pop    ecx
  40c855:	jo     0x40c8d5
  40c857:	lods   eax,DWORD PTR ds:[esi]
  40c858:	loopne 0x40c866
  40c85a:	int3   
  40c85b:	push   cs
  40c85c:	sub    ah,ch
  40c85e:	cwde   
  40c85f:	inc    BYTE PTR [esi-0x76e1a175]
  40c865:	icebp  
  40c866:	(bad)  
  40c867:	pop    esp
  40c868:	adc    eax,DWORD PTR [ebp+0x45]
  40c86b:	cwde   
  40c86c:	jmp    0x9b6a4ca0
  40c871:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c872:	add    eax,0x4bcd6cb9
  40c877:	das    
  40c878:	imul   eax,DWORD PTR [ecx+0x63ad3348],0x9d692ee9
  40c882:	scas   eax,DWORD PTR es:[edi]
  40c883:	pushf  
  40c884:	pushf  
  40c885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c886:	mov    edi,esp
  40c888:	fsub   DWORD PTR [edx+0x14]
  40c88b:	jmp    0x40c8b6
  40c88d:	loope  0x40c8cc
  40c88f:	bound  ecx,QWORD PTR [ebx+0x4c529ba5]
  40c895:	mov    eax,ds:0x228fa039
  40c89a:	enter  0x6074,0x4e
  40c89e:	std    
  40c89f:	sar    DWORD PTR [ebp-0x7876212a],cl
  40c8a5:	cmc    
  40c8a6:	adc    esp,edx
  40c8a8:	daa    
  40c8a9:	push   0xffffffe2
  40c8ab:	call   0xf9d0:0xa4d5ca93
  40c8b2:	adc    eax,0x5f0f2c0
  40c8b7:	sahf   
  40c8b8:	stos   BYTE PTR es:[edi],al
  40c8b9:	(bad)  
  40c8ba:	pop    ecx
  40c8bb:	adc    esp,esi
  40c8bd:	xor    DWORD PTR ds:0xb5c55820,ebx
  40c8c3:	push   0xf22b2390
  40c8c8:	scas   al,BYTE PTR es:[edi]
  40c8c9:	xor    bl,BYTE PTR [ecx]
  40c8cb:	loopne 0x40c855
  40c8cd:	fdivr  st(1),st
  40c8cf:	xor    ecx,DWORD PTR [esi+0x13]
  40c8d2:	fcmovnbe st,st(4)
  40c8d4:	sub    bl,BYTE PTR [ebx+0x4d]
  40c8d7:	mov    BYTE PTR [eax+eax*2],dh
  40c8da:	push   eax
  40c8db:	mov    ds:0xfb593b2,eax
  40c8e0:	iret   
  40c8e1:	cld    
  40c8e2:	add    ecx,DWORD PTR [ebx+0x24d57007]
  40c8e8:	pusha  
  40c8e9:	mov    dh,0xcc
  40c8eb:	sbb    al,0x63
  40c8ed:	shl    DWORD PTR [edi],0xa3
  40c8f0:	outs   dx,BYTE PTR ds:[esi]
  40c8f1:	sub    BYTE PTR ds:0x56dae4e1,dl
  40c8f7:	and    eax,0x15fce3f
  40c8fc:	xchg   edx,eax
  40c8fd:	jmp    0x40c8aa
  40c8ff:	lods   eax,DWORD PTR ds:[esi]
  40c900:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c901:	in     al,0xa6
  40c903:	das    
  40c904:	fs out 0x64,eax
  40c907:	inc    eax
  40c908:	retf   
  40c909:	mov    eax,ds:0xce5ef73a
  40c90e:	jg     0x40c8f4
  40c910:	xchg   edi,eax
  40c911:	in     eax,0xf
  40c913:	cdq    
  40c914:	call   0xe07d1f8d
  40c919:	(bad)  [edx-0x2cc5890e]
  40c91f:	xchg   BYTE PTR [ebx-0xcf305e1],bl
  40c925:	loop   0x40c966
  40c927:	dec    edi
  40c928:	add    DWORD PTR [edi+ebx*8-0x2],edx
  40c92c:	mov    esp,0x2e15c092
  40c931:	int3   
  40c932:	or     eax,0xd0508320
  40c937:	pop    ss
  40c938:	shl    BYTE PTR ss:[edx-0x56],cl
  40c93c:	cs lock js 0x40c950
  40c940:	nop
  40c941:	sub    al,0xba
  40c943:	dec    edi
  40c944:	add    edi,ecx
  40c946:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c947:	rcr    BYTE PTR [edi-0x3b],cl
  40c94a:	mov    eax,ds:0x3e5ab524
  40c94f:	xor    DWORD PTR [eax+ebp*4-0x14a73501],ebx
  40c956:	rcl    edx,0x97
  40c959:	popf   
  40c95a:	fcmovnu st,st(6)
  40c95c:	inc    esi
  40c95d:	int    0xf7
  40c95f:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40c966:	xor    DWORD PTR ds:0x413d34,0x2984
  40c970:	mov    ecx,DWORD PTR [ebp-0x14]
  40c973:	and    DWORD PTR ds:0x413d24,0x0
  40c97d:	jmp    0x40c990
  40c982:	xor    eax,eax
  40c984:	or     eax,DWORD PTR ds:0x413d24
  40c98a:	inc    eax
  40c98b:	mov    ds:0x413d24,eax
  40c990:	cmp    DWORD PTR ds:0x413d24,0x18
  40c997:	jae    0x40ca0e
  40c99d:	cmp    DWORD PTR ds:0x413d24,0x20
  40c9a4:	jne    0x40c9bd
  40c9aa:	push   0x738d
  40c9af:	push   0x6edb
  40c9b4:	push   DWORD PTR [ebp-0x18]
  40c9b7:	call   DWORD PTR ds:0x416768
  40c9bd:	jmp    0x40c982
  40c9c2:	mov    DWORD PTR ds:0x413c1e,0x1e
  40c9cc:	cmp    DWORD PTR ds:0x413c1e,0x0
  40c9d3:	je     0x40ca0e
  40c9d9:	cmp    DWORD PTR ds:0x413c1e,0x2c
  40c9e0:	jne    0x40c9fe
  40c9e6:	push   0x25a0
  40c9eb:	push   0x413ce4
  40c9f0:	push   0x3cd5
  40c9f5:	push   DWORD PTR [ebp-0x18]
  40c9f8:	call   DWORD PTR ds:0x416770
  40c9fe:	mov    eax,ds:0x413c1e
  40ca03:	dec    eax
  40ca04:	mov    ds:0x413c1e,eax
  40ca09:	jmp    0x40c9cc
  40ca0e:	push   esi
  40ca0f:	sbb    DWORD PTR ds:0x413ce4,0x7973
  40ca19:	mov    eax,0x7510894
  40ca1e:	and    DWORD PTR ds:0x413c1e,0x0
  40ca28:	jmp    0x40ca3a
  40ca2d:	mov    esi,DWORD PTR ds:0x413c1e
  40ca33:	inc    esi
  40ca34:	mov    DWORD PTR ds:0x413c1e,esi
  40ca3a:	cmp    DWORD PTR ds:0x413c1e,0x15
  40ca41:	jae    0x40ca74
  40ca47:	cmp    DWORD PTR ds:0x413c1e,0x1f
  40ca4e:	jne    0x40ca6e
  40ca54:	push   0x413c12
  40ca59:	push   0x88a1
  40ca5e:	push   0x416000
  40ca63:	push   0x416152
  40ca68:	call   DWORD PTR ds:0x416774
  40ca6e:	jmp    0x40ca2d
  40ca73:	inc    esi
  40ca74:	xor    ecx,eax
  40ca76:	sub    esi,DWORD PTR ds:0x413c70
  40ca7c:	mov    esi,0x3272dc
  40ca81:	mov    DWORD PTR ds:0x413c80,0x12bb
  40ca8b:	push   edi
  40ca8c:	xor    DWORD PTR ds:0x413ce4,0x413c6c
  40ca96:	add    ecx,esi
  40ca98:	jmp    0x40cab4
  40ca9d:	mov    dl,BYTE PTR [ebp-0x1]
  40caa0:	not    DWORD PTR ds:0x41400c
  40caa6:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40caad:	not    DWORD PTR ds:0x413ce8
  40cab3:	inc    ecx
  40cab4:	cmp    ecx,0x40
  40cab7:	mov    DWORD PTR ds:0x413d24,0x3f58
  40cac1:	jb     0x40ca9d
  40cac7:	adc    edx,0x503d
  40cacd:	mov    edx,DWORD PTR [ebp-0x14]
  40cad0:	xor    edx,eax
  40cad2:	add    edx,esi
  40cad4:	jmp    0x40cc01
  40cad9:	and    DWORD PTR ds:0x413c0a,0x1a66
  40cae3:	mov    edi,DWORD PTR [ebp+0x8]
  40cae6:	and    ecx,0xcf4
  40caec:	mov    ecx,0x8a87
  40caf1:	adc    DWORD PTR ds:0x413c12,0x413d
  40cafb:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40cb00:	and    DWORD PTR ds:0x41401c,0x0
  40cb0a:	mov    edi,DWORD PTR ds:0x41401c
  40cb10:	inc    edi
  40cb11:	mov    DWORD PTR ds:0x41401c,edi
  40cb17:	cmp    DWORD PTR ds:0x41401c,0x5
  40cb1e:	jne    0x40cb39
  40cb24:	push   0x6acf
  40cb29:	push   0x413cf4
  40cb2e:	push   0x416152
  40cb33:	call   DWORD PTR ds:0x416778
  40cb39:	cmp    DWORD PTR ds:0x41401c,0x4
  40cb40:	jne    0x40cb53
  40cb46:	mov    edi,DWORD PTR ds:0x41401c
  40cb4c:	inc    edi
  40cb4d:	mov    DWORD PTR ds:0x41401c,edi
  40cb53:	cmp    DWORD PTR ds:0x41401c,0x1b
  40cb5a:	jb     0x40cb0a
  40cb60:	mov    DWORD PTR ds:0x414018,0x15
  40cb6a:	cmp    DWORD PTR ds:0x414018,0x0
  40cb71:	je     0x40cbab
  40cb77:	cmp    DWORD PTR ds:0x414018,0x1b
  40cb7e:	jne    0x40cb8f
  40cb84:	push   0x4160b3
  40cb89:	call   DWORD PTR ds:0x41677c
  40cb8f:	mov    edi,DWORD PTR ds:0x414018
  40cb95:	dec    edi
  40cb96:	mov    DWORD PTR ds:0x414018,edi
  40cb9c:	jmp    0x40cb6a
  40cba1:	xor    DWORD PTR ds:0x414008,0x3196
  40cbab:	mov    edi,0x3b4a
  40cbb0:	add    cx,di
  40cbb3:	sbb    DWORD PTR ds:0x414000,0x24d3
  40cbbd:	movzx  ecx,cx
  40cbc0:	xor    DWORD PTR ds:0x413bfe,0x413c06
  40cbca:	mov    DWORD PTR [ebp-0x10],ecx
  40cbcd:	neg    DWORD PTR ds:0x413c0e
  40cbd3:	mov    ecx,DWORD PTR [ebp+0x8]
  40cbd6:	or     DWORD PTR ds:0x413d20,0x3470
  40cbe0:	movzx  ecx,WORD PTR [ecx+edx*4]
  40cbe4:	xor    DWORD PTR ds:0x413d30,0x413bf6
  40cbee:	xor    ecx,0x8a87
  40cbf4:	add    ecx,edi
  40cbf6:	mov    edi,DWORD PTR [ebp-0x10]
  40cbf9:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40cc00:	inc    edx
  40cc01:	mov    ecx,DWORD PTR [ebp-0x18]
  40cc04:	cmp    edx,ecx
  40cc06:	mov    DWORD PTR ds:0x414010,0x5811
  40cc10:	jne    0x40cad9
  40cc16:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc19:	mov    DWORD PTR ds:0x413d1c,0x410a
  40cc23:	mov    edx,DWORD PTR [ebp+0x10]
  40cc26:	dec    DWORD PTR ds:0x413cec
  40cc2c:	xor    ecx,eax
  40cc2e:	add    ecx,esi
  40cc30:	and    DWORD PTR ds:0x413c0a,0x5ecf
  40cc3a:	mov    DWORD PTR [edx],ecx
  40cc3c:	dec    ecx
  40cc3d:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc40:	xor    ecx,eax
  40cc42:	and    DWORD PTR ds:0x413bf6,0x413c84
  40cc4c:	add    ecx,esi
  40cc4e:	mov    DWORD PTR ds:0x413c0a,0x45cc
  40cc58:	mov    DWORD PTR [ebp-0x20],ecx
  40cc5b:	not    ecx
  40cc5d:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  40cc64:	mov    DWORD PTR [ebp-0xc],0xf89c85a0
  40cc6b:	mov    DWORD PTR [ebp-0x1c],0xf89c95b0
  40cc72:	mov    DWORD PTR ds:0x413c6c,edi
  40cc78:	mov    ecx,DWORD PTR [ebp-0xc]
  40cc7b:	mov    DWORD PTR ds:0x413c84,0x129c
  40cc85:	mov    DWORD PTR [ebp+0x8],ecx
  40cc88:	jmp    0x40ce75
  40cc8d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc90:	add    edx,DWORD PTR ds:0x413c80
  40cc96:	mov    edx,DWORD PTR [ebp-0x8]
  40cc99:	and    DWORD PTR ds:0x413c74,0x413d20
  40cca3:	xor    ecx,eax
  40cca5:	xor    edx,eax
  40cca7:	sub    ecx,edx
  40cca9:	sub    ecx,esi
  40ccab:	xor    ecx,eax
  40ccad:	and    DWORD PTR ds:0x413c1a,0x0
  40ccb7:	mov    edx,DWORD PTR ds:0x413c1a
  40ccbd:	inc    edx
  40ccbe:	mov    DWORD PTR ds:0x413c1a,edx
  40ccc4:	cmp    DWORD PTR ds:0x413c1a,0x9
  40cccb:	jne    0x40cce4
  40ccd1:	push   0x413bfe
  40ccd6:	push   DWORD PTR [ebp-0x20]
  40ccd9:	push   0x4160ed
  40ccde:	call   DWORD PTR ds:0x416780
  40cce4:	cmp    DWORD PTR ds:0x413c1a,0x8
  40cceb:	jne    0x40ccfe
  40ccf1:	mov    edx,DWORD PTR ds:0x413c1a
  40ccf7:	inc    edx
  40ccf8:	mov    DWORD PTR ds:0x413c1a,edx
  40ccfe:	cmp    DWORD PTR ds:0x413c1a,0x10
  40cd05:	jb     0x40ccb7
  40cd0b:	mov    DWORD PTR [ebp+0x8],ecx
  40cd0e:	adc    ecx,ecx
  40cd10:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd13:	mov    DWORD PTR ds:0x413c16,0x3405
  40cd1d:	mov    edx,DWORD PTR [ebp-0x64]
  40cd20:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd27:	mov    DWORD PTR [ebp-0x64],ecx
  40cd2a:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd2d:	mov    edx,DWORD PTR [ebp-0x60]
  40cd30:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd37:	movzx  edx,WORD PTR ds:0x413d20
  40cd3e:	sbb    edx,DWORD PTR ds:0x413d28
  40cd44:	mov    DWORD PTR ds:0x413d20,edx
  40cd4a:	mov    DWORD PTR [ebp-0x60],ecx
  40cd4d:	and    DWORD PTR ds:0x414000,0x413d1c
  40cd57:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd5a:	add    DWORD PTR ds:0x413c78,ebx
  40cd60:	mov    edx,DWORD PTR [ebp-0x5c]
  40cd63:	neg    DWORD PTR ds:0x413c02
  40cd69:	lea    ecx,[edx+ecx*1+0x5708f2]
  40cd70:	and    DWORD PTR ds:0x413d20,0x0
  40cd7a:	mov    edx,DWORD PTR ds:0x413d20
  40cd80:	inc    edx
  40cd81:	mov    DWORD PTR ds:0x413d20,edx
  40cd87:	cmp    DWORD PTR ds:0x413d20,0xa
  40cd8e:	jne    0x40cda2
  40cd94:	push   0x413d34
  40cd99:	push   DWORD PTR [ebp-0x24]
  40cd9c:	call   DWORD PTR ds:0x416784
  40cda2:	cmp    DWORD PTR ds:0x413d20,0x9
  40cda9:	jne    0x40cdbe
  40cdaf:	xor    edx,edx
  40cdb1:	add    edx,DWORD PTR ds:0x413d20
  40cdb7:	inc    edx
  40cdb8:	mov    DWORD PTR ds:0x413d20,edx
  40cdbe:	cmp    DWORD PTR ds:0x413d20,0x15
  40cdc5:	jb     0x40cd7a
  40cdcb:	or     DWORD PTR ds:0x413ce8,0x2ce1
  40cdd5:	mov    DWORD PTR [ebp-0x5c],ecx
  40cdd8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cddb:	add    DWORD PTR ds:0x413c1e,ecx
  40cde1:	mov    edx,DWORD PTR [ebp-0x58]
  40cde4:	lea    ecx,[edx+ecx*1+0x5708f3]
  40cdeb:	add    DWORD PTR ds:0x413bfe,ebx
  40cdf1:	mov    DWORD PTR [ebp-0x58],ecx
  40cdf4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cdf7:	or     DWORD PTR ds:0x413c80,0x1524
  40ce01:	mov    edx,DWORD PTR [ebp-0x54]
  40ce04:	lea    ecx,[edx+ecx*1+0x5708fc]
  40ce0b:	adc    edx,DWORD PTR ds:0x41400c
  40ce11:	mov    DWORD PTR [ebp-0x54],ecx
  40ce14:	and    DWORD PTR ds:0x413d20,0x0
  40ce1e:	mov    edx,DWORD PTR ds:0x413d20
  40ce24:	inc    edx
  40ce25:	mov    DWORD PTR ds:0x413d20,edx
  40ce2b:	cmp    DWORD PTR ds:0x413d20,0x12
  40ce32:	jne    0x40ce48
  40ce38:	push   0x8060
  40ce3d:	push   0x41608d
  40ce42:	call   DWORD PTR ds:0x41678c
  40ce48:	cmp    DWORD PTR ds:0x413d20,0x10
  40ce4f:	jb     0x40ce1e
  40ce55:	mov    ecx,DWORD PTR [ebp+0x8]
  40ce58:	sbb    edx,DWORD PTR ds:0x413c0e
  40ce5e:	mov    edx,DWORD PTR [ebp-0x50]
  40ce61:	sbb    DWORD PTR ds:0x413cf4,0x413c16
  40ce6b:	lea    ecx,[edx+ecx*1+0x5708fd]
  40ce72:	mov    DWORD PTR [ebp-0x50],ecx
  40ce75:	and    DWORD PTR ds:0x413c12,0x0
  40ce7f:	mov    ecx,DWORD PTR ds:0x413c12
  40ce85:	inc    ecx
  40ce86:	mov    DWORD PTR ds:0x413c12,ecx
  40ce8c:	cmp    DWORD PTR ds:0x413c12,0x1d
  40ce93:	jne    0x40ceb7
  40ce99:	push   DWORD PTR [ebp-0x20]
  40ce9c:	push   0x413c70
  40cea1:	push   0x4dec
  40cea6:	push   0x4160bf
  40ceab:	push   DWORD PTR [ebp-0x20]
  40ceae:	push   DWORD PTR [ebp-0x10]
  40ceb1:	call   DWORD PTR ds:0x416790
  40ceb7:	cmp    DWORD PTR ds:0x413c12,0x11
  40cebe:	jb     0x40ce7f
  40cec4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cec7:	xor    ecx,eax
  40cec9:	add    ecx,esi
  40cecb:	jne    0x40cc8d
  40ced1:	jmp    0x40f43d
  40ced6:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ced9:	mov    edx,DWORD PTR [ebp-0x8]
  40cedc:	xor    ecx,eax
  40cede:	xor    edx,eax
  40cee0:	sub    ecx,edx
  40cee2:	sub    ecx,esi
  40cee4:	xor    ecx,eax
  40cee6:	mov    DWORD PTR [ebp-0x1c],ecx
  40cee9:	mov    ecx,DWORD PTR [ebp-0xc]
  40ceec:	mov    DWORD PTR [ebp+0x8],ecx
  40ceef:	jmp    0x40cf21
  40cef4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cef7:	mov    edx,DWORD PTR [ebp-0x8]
  40cefa:	xor    ecx,eax
  40cefc:	xor    edx,eax
  40cefe:	sub    ecx,edx
  40cf00:	sub    ecx,esi
  40cf02:	xor    ecx,eax
  40cf04:	mov    DWORD PTR [ebp+0x8],ecx
  40cf07:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf0a:	mov    edx,DWORD PTR [ebp+0x8]
  40cf0d:	imul   edx,edx,0x5708f1
  40cf13:	xor    ecx,eax
  40cf15:	add    ecx,esi
  40cf17:	lea    ecx,[ebp+ecx*4-0x64]
  40cf1b:	mov    edi,DWORD PTR [ecx]
  40cf1d:	add    edx,edi
  40cf1f:	mov    DWORD PTR [ecx],edx
  40cf21:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf24:	xor    ecx,eax
  40cf26:	add    ecx,esi
  40cf28:	jne    0x40cef4
  40cf2e:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf31:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf38:	mov    dl,BYTE PTR [ebp-0x1]
  40cf3b:	cmp    cl,dl
  40cf3d:	je     0x40f39e
  40cf43:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf46:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf4d:	mov    edx,DWORD PTR [ebp+0xc]
  40cf50:	cmp    cl,BYTE PTR [edx]
  40cf52:	jne    0x40f44f
  40cf58:	mov    ecx,DWORD PTR [ebp-0x14]
  40cf5b:	mov    edx,DWORD PTR [ebp+0xc]
  40cf5e:	movsx  edx,BYTE PTR [edx]
  40cf61:	xor    ecx,eax
  40cf63:	add    ecx,esi
  40cf65:	cmp    edx,ecx
  40cf67:	mov    ecx,DWORD PTR [ebp-0xc]
  40cf6a:	mov    DWORD PTR [ebp+0x8],ecx
  40cf6d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf70:	je     0x411851
  40cf76:	jmp    0x40cfab
  40cf7b:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf7e:	mov    edx,DWORD PTR [ebp-0x8]
  40cf81:	xor    ecx,eax
  40cf83:	xor    edx,eax
  40cf85:	sub    ecx,edx
  40cf87:	sub    ecx,esi
  40cf89:	xor    ecx,eax
  40cf8b:	mov    DWORD PTR [ebp+0x8],ecx
  40cf8e:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf91:	mov    edx,DWORD PTR [ebp+0x8]
  40cf94:	xor    ecx,eax
  40cf96:	imul   edx,edx,0x5708f1
  40cf9c:	add    ecx,esi
  40cf9e:	lea    ecx,[ebp+ecx*4-0x64]
  40cfa2:	mov    edi,DWORD PTR [ecx]
  40cfa4:	add    edx,edi
  40cfa6:	mov    DWORD PTR [ecx],edx
  40cfa8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cfab:	xor    ecx,eax
  40cfad:	add    ecx,esi
  40cfaf:	jne    0x40cf7b
  40cfb5:	mov    ecx,DWORD PTR [ebp-0x14]
  40cfb8:	mov    edx,DWORD PTR [ebp+0x8]
  40cfbb:	xor    ecx,eax
  40cfbd:	xor    edx,eax
  40cfbf:	add    ecx,esi
  40cfc1:	add    edx,esi
  40cfc3:	cmp    ecx,edx
  40cfc5:	jae    0x40f3e3
  40cfcb:	lea    edx,[ecx-0x3272dc]
  40cfd1:	mov    DWORD PTR [ebp-0x18],edx
  40cfd4:	mov    edi,DWORD PTR [ebp-0x18]
  40cfd7:	mov    DWORD PTR [ebp-0x24],0x705fd0e
  40cfde:	lea    edx,[ebp-0x24]
  40cfe1:	mov    DWORD PTR [ebp-0x10],edx
  40cfe4:	mov    edx,DWORD PTR [ebp-0x10]
  40cfe7:	add    DWORD PTR [edx],0x705fa0e
  40cfed:	mov    ebx,DWORD PTR [ebp-0x10]
  40cff0:	xor    edi,eax
  40cff2:	add    edi,DWORD PTR [ebx]
  40cff4:	lea    edx,[ebp+ecx*4-0x64]
  40cff8:	jmp    0x40f380
  40cffd:	sar    BYTE PTR [ebx-0x74043cf0],1
  40d003:	jae    0x40cfc0
  40d005:	dec    ebp
  40d006:	bound  esi,QWORD PTR [eax-0x525906a3]
  40d00c:	xor    DWORD PTR [edx+0x77c7ce9],0x5f
  40d013:	jl     0x40d091
  40d015:	and    DWORD PTR [ebx+0x56],ebx
  40d018:	xchg   esi,eax
  40d019:	mov    DWORD PTR [eax+0x4b],ecx
  40d01c:	loop   0x40cfb0
  40d01e:	mov    cl,0xe4
  40d020:	push   ss
  40d021:	sub    al,0xe
  40d023:	test   al,0x87
  40d025:	data16 mov dl,0x2b
  40d028:	adc    dh,cl
  40d02a:	dec    ebx
  40d02b:	in     al,0x69
  40d02d:	ret    
  40d02e:	adc    cl,dl
  40d030:	push   cs
  40d031:	gs fwait
  40d033:	shl    DWORD PTR [esi-0x1d],cl
  40d036:	lods   al,BYTE PTR ds:[esi]
  40d037:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d038:	call   0xf802:0x5216fa91
  40d03f:	mov    bh,0x2a
  40d041:	mov    bh,0x8
  40d043:	stos   BYTE PTR es:[edi],al
  40d044:	lods   al,BYTE PTR ds:[esi]
  40d045:	sbb    DWORD PTR [ebx+0x40f38b28],edi
  40d04b:	pop    ds
  40d04c:	loope  0x40d0cb
  40d04e:	sahf   
  40d04f:	inc    ebx
  40d050:	push   ds
  40d051:	mov    ebx,0x5333bae8
  40d056:	scas   eax,DWORD PTR es:[edi]
  40d057:	test   bh,0x96
  40d05a:	cmp    DWORD PTR [ecx],0x2
  40d05d:	adc    eax,0x3ef77c
  40d062:	ja     0x40d069
  40d064:	lods   eax,DWORD PTR ds:[esi]
  40d065:	mov    al,0x6b
  40d067:	shl    dl,0xc7
  40d06a:	rol    esp,cl
  40d06c:	call   0x7185:0x7175a3db
  40d073:	mov    DWORD PTR [eax+0x52],esi
  40d076:	leave  
  40d077:	rcl    BYTE PTR [ebx-0x258f74e3],cl
  40d07d:	lock dec ebp
  40d07f:	sub    dh,cl
  40d081:	mov    dh,0x17
  40d083:	mov    ds:0xcb3d8e9b,al
  40d088:	shr    BYTE PTR [ebp-0x8],0x86
  40d08c:	(bad)  
  40d08d:	cmp    eax,DWORD PTR [esi]
  40d08f:	mov    edi,es
  40d091:	sbb    eax,0x1ca24de2
  40d096:	enter  0xcc2e,0x58
  40d09a:	fnstenv ds:[edi]
  40d09d:	jns    0x40d03c
  40d09f:	imul   esp,eax,0x43
  40d0a2:	add    dl,BYTE PTR [esi-0x58334d61]
  40d0a8:	mov    al,0xda
  40d0aa:	xchg   edi,eax
  40d0ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0ac:	mov    ebp,eax
  40d0ae:	fucom  st(5)
  40d0b0:	test   al,0x45
  40d0b2:	mov    bh,0xf
  40d0b4:	(bad)  
  40d0b5:	mov    esi,0xd96fddf1
  40d0ba:	and    DWORD PTR [eax],edx
  40d0bc:	and    al,0xf8
  40d0be:	mov    ch,0x6f
  40d0c0:	jae    0x866f7e6b
  40d0c6:	jcxz   0x40d052
  40d0c9:	hlt    
  40d0ca:	in     eax,dx
  40d0cb:	nop
  40d0cc:	imul   edx,DWORD PTR [eax-0xa],0x9e155f80
  40d0d3:	pop    eax
  40d0d4:	mov    gs,WORD PTR [ebx+0x833bb74]
  40d0da:	nop
  40d0db:	inc    ebp
  40d0dc:	sbb    DWORD PTR ds:0xb6f60e5e,edi
  40d0e2:	ins    BYTE PTR es:[edi],dx
  40d0e3:	in     al,dx
  40d0e4:	and    ch,BYTE PTR [esi]
  40d0e6:	imul   esp,DWORD PTR [ecx+0x638146a9],0x2b
  40d0ed:	sub    BYTE PTR [ebp-0x53701579],al
  40d0f3:	push   esi
  40d0f4:	cld    
  40d0f5:	imul   ecx,DWORD PTR [ebx-0x1252dd67],0x41ca6dcf
  40d0ff:	inc    edi
  40d100:	push   esp
  40d101:	outs   dx,BYTE PTR ds:[esi]
  40d102:	add    al,ch
  40d104:	sub    DWORD PTR [edi+0x5b],ebx
  40d107:	mov    bl,0xf9
  40d109:	mov    ch,al
  40d10b:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40d10d:	push   ds
  40d10e:	dec    ecx
  40d10f:	add    DWORD PTR [ecx-0x63],0x0
  40d113:	stc    
  40d114:	ret    
  40d115:	ins    BYTE PTR es:[edi],dx
  40d116:	cmp    BYTE PTR [ecx],ch
  40d118:	cs push edx
  40d11a:	sahf   
  40d11b:	and    cl,bl
  40d11d:	aas    
  40d11e:	cmp    DWORD PTR [ebp+0x46e3a8df],ecx
  40d124:	jns    0x40d0ba
  40d126:	popa   
  40d127:	fcom   DWORD PTR [ecx+0x2f5f1ff3]
  40d12d:	add    eax,0x351e419f
  40d132:	test   bh,0x4c
  40d135:	dec    ebx
  40d136:	mov    esi,0x6bfba35b
  40d13b:	rol    DWORD PTR [ecx],0x7e
  40d13e:	pop    es
  40d13f:	xor    dl,BYTE PTR [esi]
  40d141:	cmp    ah,BYTE PTR [eax-0x74]
  40d144:	or     ebp,DWORD PTR [edx-0x5473bbe7]
  40d14a:	daa    
  40d14b:	and    eax,0x9cb0e047
  40d150:	fidiv  WORD PTR [edi+0x5f]
  40d153:	mov    ?,eax
  40d155:	inc    eax
  40d156:	sub    al,0x77
  40d158:	xchg   edi,eax
  40d159:	nop
  40d15a:	scas   al,BYTE PTR es:[edi]
  40d15b:	jmp    0xfa02:0x3876b4bd
  40d162:	xor    esp,DWORD PTR [ecx+0x48]
  40d165:	mov    cl,0x68
  40d167:	fwait
  40d168:	sbb    al,0x39
  40d16a:	push   ebp
  40d16b:	(bad)  
  40d16c:	mov    edi,0x229a21eb
  40d171:	es call 0x60cf4c09
  40d177:	sub    al,al
  40d179:	rcr    al,1
  40d17b:	cs stc 
  40d17d:	or     al,0x19
  40d17f:	mov    WORD PTR [esi],?
  40d181:	add    edi,eax
  40d183:	in     eax,0xc7
  40d185:	push   ebx
  40d186:	cmp    al,0xc3
  40d188:	cdq    
  40d189:	xchg   ebp,eax
  40d18a:	mov    cs,WORD PTR [edi]
  40d18c:	cmc    
  40d18d:	scas   eax,DWORD PTR es:[edi]
  40d18e:	aaa    
  40d18f:	ja     0x40d1d4
  40d191:	xor    DWORD PTR [ebx-0x7e1fa81],0xe25e0a6d
  40d19b:	jnp    0x40d19d
  40d19d:	adc    eax,DWORD PTR [edi-0x77]
  40d1a0:	popf   
  40d1a1:	jns    0x40d1ee
  40d1a3:	fistp  QWORD PTR [edi+0x2d]
  40d1a6:	sbb    BYTE PTR [esi+0x4d],al
  40d1a9:	xor    ebx,DWORD PTR [ebx-0x7]
  40d1ac:	into   
  40d1ad:	cmc    
  40d1ae:	shr    DWORD PTR [edi+0x2b],1
  40d1b1:	ins    BYTE PTR es:[edi],dx
  40d1b2:	sbb    DWORD PTR [eax+0x6a8aee94],0x49
  40d1b9:	test   eax,0xcd243dbd
  40d1be:	(bad)
  40d1c2:	mov    al,ds:0x8921d3c9
  40d1c7:	inc    eax
  40d1c8:	test   BYTE PTR [eax],al
  40d1ca:	jl     0x40d166
  40d1cc:	mov    eax,ds:0xcab4ebe6
  40d1d1:	push   0xffffff81
  40d1d3:	fld    TBYTE PTR [ecx+0x37b46e30]
  40d1d9:	(bad)  
  40d1da:	retf   
  40d1db:	std    
  40d1dc:	add    ch,BYTE PTR [esi]
  40d1de:	ja     0x40d1b2
  40d1e0:	popf   
  40d1e1:	call   0xfa03:0x757851c1
  40d1e8:	(bad)  
  40d1e9:	and    al,0xd
  40d1eb:	mov    es,ebp
  40d1ed:	sbb    esi,DWORD PTR [edx-0x39]
  40d1f0:	push   esp
  40d1f1:	ficom  DWORD PTR [ebx+0x37a27899]
  40d1f7:	cmp    al,0x4a
  40d1f9:	add    eax,DWORD PTR [ecx]
  40d1fb:	in     al,0x12
  40d1fd:	inc    esi
  40d1fe:	out    dx,eax
  40d1ff:	data16 addr16 adc al,0x35
  40d203:	xor    eax,0x1a3350ba
  40d208:	sbb    eax,0x687add35
  40d20d:	mov    ebx,0x948f8705
  40d212:	(bad)  ds:0x317ba409
  40d218:	add    al,0xc5
  40d21a:	aas    
  40d21b:	lds    ebp,FWORD PTR [eax]
  40d21d:	nop
  40d21e:	aas    
  40d21f:	mov    edi,0x4c9b4c3e
  40d224:	xchg   esp,eax
  40d225:	popf   
  40d226:	xor    BYTE PTR [ecx+ebp*8],bl
  40d229:	mov    eax,ds:0xae8d91ff
  40d22e:	sub    eax,DWORD PTR [ebp-0x6c2a86bf]
  40d234:	popa   
  40d235:	mov    ?,WORD PTR [edx]
  40d237:	test   ah,bh
  40d239:	dec    edi
  40d23a:	ds and ecx,eax
  40d23d:	addr16 enter 0xfd65,0x83
  40d242:	sbb    BYTE PTR [edx-0x10],0xff
  40d246:	adc    BYTE PTR [eax+0x1a87286f],al
  40d24c:	(bad)  
  40d24d:	in     al,dx
  40d24e:	xchg   esi,eax
  40d24f:	sub    DWORD PTR [ebp+0x7bb603b7],ecx
  40d255:	add    edi,edi
  40d257:	int    0xb2
  40d259:	push   ecx
  40d25a:	mov    edx,0x4aa5efc1
  40d25f:	mov    WORD PTR [edi],cs
  40d261:	or     ebx,DWORD PTR [edi]
  40d263:	popa   
  40d264:	mov    ds:0xb3484f63,eax
  40d269:	adc    cl,BYTE PTR [esi]
  40d26b:	jp     0x40d2e5
  40d26d:	je     0x40d2e0
  40d26f:	rol    DWORD PTR [eax+0x55],cl
  40d272:	and    BYTE PTR [ebx+0xb901b3a],ch
  40d278:	psubw  mm6,QWORD PTR [edi-0x71]
  40d27c:	mov    ebp,0xef92d9b1
  40d281:	push   esi
  40d282:	xchg   ecx,eax
  40d283:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d284:	dec    edi
  40d285:	jecxz  0x40d2d8
  40d287:	jmp    0x9e5244e0
  40d28c:	aaa    
  40d28d:	sbb    al,0xd2
  40d28f:	gs xor bh,ah
  40d292:	add    DWORD PTR [ebp+0x3d],0x6f
  40d296:	mov    dh,0xb6
  40d298:	dec    esp
  40d299:	mov    DWORD PTR [edx-0x1a],esi
  40d29c:	iret   
  40d29d:	aam    0x6d
  40d29f:	enter  0xf503,0x8a
  40d2a3:	sbb    edi,DWORD PTR [ebx+0x17149e74]
  40d2a9:	pusha  
  40d2aa:	add    BYTE PTR [ecx+edi*4+0x4f],bh
  40d2ae:	adc    BYTE PTR [ebx+0x244bb0e6],ah
  40d2b4:	fs cmp ch,ah
  40d2b7:	leave  
  40d2b8:	fst    QWORD PTR [ecx+ebp*4]
  40d2bb:	inc    eax
  40d2bc:	pusha  
  40d2bd:	shr    DWORD PTR [edx-0x27b8bb00],cl
  40d2c3:	das    
  40d2c4:	sti    
  40d2c5:	gs jmp 0x9bd6:0x3a1a7738
  40d2cd:	addr16 pop ss
  40d2cf:	stc    
  40d2d0:	mov    ds:0x2bef8b0b,al
  40d2d5:	stos   DWORD PTR es:[edi],eax
  40d2d6:	and    al,0x5e
  40d2d8:	add    cl,al
  40d2da:	push   0xcdfe5580
  40d2df:	mov    ah,0x81
  40d2e1:	in     eax,dx
  40d2e2:	add    bh,BYTE PTR [eax-0x7018a6da]
  40d2e8:	fmul   DWORD PTR [eax-0x72]
  40d2eb:	xchg   edi,eax
  40d2ec:	jmp    DWORD PTR [eax+ecx*4]
  40d2ef:	adc    edx,ebp
  40d2f1:	xchg   edi,eax
  40d2f2:	iret   
  40d2f3:	pop    edx
  40d2f4:	ret    0x87a0
  40d2f7:	jmp    0xea916b4c
  40d2fc:	xchg   BYTE PTR [ebp+0x3bace3a],dl
  40d302:	call   0x82d:0x57bac50b
  40d309:	push   ss
  40d30a:	mov    eax,0x66cf227c
  40d30f:	jno    0x40d34f
  40d311:	ret    
  40d312:	out    dx,al
  40d313:	push   edi
  40d314:	ss ret 0x93e6
  40d318:	adc    cl,BYTE PTR [ecx+0x18]
  40d31b:	or     DWORD PTR [ecx],eax
  40d31d:	cld    
  40d31e:	dec    ecx
  40d31f:	push   ebx
  40d320:	jg     0x40d2cc
  40d322:	stc    
  40d323:	rol    BYTE PTR [edx-0x5824e9da],0xee
  40d32a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d32b:	inc    ebx
  40d32c:	mov    al,ds:0x1bc78bbc
  40d331:	xlat   BYTE PTR ds:[ebx]
  40d332:	(bad)  
  40d333:	mov    al,0xad
  40d335:	add    eax,edi
  40d337:	(bad)  
  40d338:	mov    ebp,0xc048064d
  40d33d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d33e:	cdq    
  40d33f:	outs   dx,BYTE PTR ds:[esi]
  40d340:	lods   al,BYTE PTR ds:[esi]
  40d341:	aas    
  40d342:	sub    edx,DWORD PTR [ebp-0x13]
  40d345:	shl    DWORD PTR [eax],cl
  40d347:	or     edi,ecx
  40d349:	imul   edi,DWORD PTR [edx+0x13],0x2a1c3891
  40d350:	dec    edx
  40d351:	jmp    0xfcf5:0x99157f4a
  40d358:	int3   
  40d359:	out    0xdd,al
  40d35b:	pusha  
  40d35c:	xor    al,BYTE PTR [ebx-0x5c97beb]
  40d362:	and    edx,DWORD PTR [edx+0x4b2724c6]
  40d368:	(bad)  
  40d369:	dec    edx
  40d36a:	mov    ebx,0xb4a1b3cc
  40d36f:	add    DWORD PTR [esi-0x729a9c85],0x3c
  40d376:	rol    BYTE PTR [edx],1
  40d378:	retf   
  40d379:	pop    ds
  40d37a:	ins    BYTE PTR es:[edi],dx
  40d37b:	push   0xffffffc7
  40d37d:	add    ecx,eax
  40d37f:	mov    ebp,0xe2d9e66e
  40d384:	sbb    BYTE PTR [ecx-0x60],al
  40d387:	sbb    edx,DWORD PTR [edx]
  40d389:	fnstsw WORD PTR [edx-0x40a0ea76]
  40d38f:	ja     0x40d3ad
  40d391:	mov    bh,0xb0
  40d393:	test   al,0x9e
  40d395:	int3   
  40d396:	cmp    al,0xa5
  40d398:	cmp    DWORD PTR [edx+0x154f609],ebp
  40d39e:	inc    eax
  40d39f:	jne    0x40d378
  40d3a1:	xchg   ebx,eax
  40d3a2:	xor    DWORD PTR [ecx],0x9494a24e
  40d3a8:	inc    edi
  40d3a9:	push   edi
  40d3aa:	push   0x54
  40d3ac:	popf   
  40d3ad:	sti    
  40d3ae:	outs   dx,BYTE PTR ds:[esi]
  40d3af:	fmul   st,st(4)
  40d3b1:	test   al,0x3f
  40d3b3:	aaa    
  40d3b4:	inc    esi
  40d3b5:	push   edi
  40d3b6:	mov    ecx,0x609d9d87
  40d3bb:	push   ss
  40d3bc:	dec    ebp
  40d3bd:	dec    edx
  40d3be:	or     eax,0xe594ac3e
  40d3c3:	lahf   
  40d3c4:	push   ds
  40d3c5:	scas   al,BYTE PTR es:[edi]
  40d3c6:	cdq    
  40d3c7:	jg     0x40d38f
  40d3c9:	aam    0xa8
  40d3cb:	lock sahf 
  40d3cd:	into   
  40d3ce:	sub    dh,BYTE PTR [ebx-0x209dc760]
  40d3d4:	lock arpl WORD PTR [ecx-0x6c09feb6],bx
  40d3db:	and    ebp,DWORD PTR [ebp-0x41]
  40d3de:	mov    eax,ds:0x464e82f8
  40d3e3:	lock ret 
  40d3e5:	sub    al,0xab
  40d3e7:	xor    BYTE PTR [edi],0xbb
  40d3ea:	(bad)  [eax-0x6234e1e5]
  40d3f0:	daa    
  40d3f1:	div    ah
  40d3f3:	lahf   
  40d3f4:	pushf  
  40d3f5:	dec    ecx
  40d3f6:	inc    eax
  40d3f7:	inc    ebp
  40d3f8:	imul   esi,DWORD PTR [edi+esi*2-0x6d],0xe9beeaba
  40d400:	enter  0x1898,0xb6
  40d404:	mov    ecx,0x90c2bbca
  40d409:	push   edi
  40d40a:	ins    DWORD PTR es:[edi],dx
  40d40b:	jns    0x40d446
  40d40d:	inc    edx
  40d40e:	fnstcw WORD PTR [edx]
  40d410:	sub    edi,eax
  40d412:	inc    ebp
  40d413:	mov    BYTE PTR [ecx+0x26],ah
  40d416:	jmp    0x18aeddb4
  40d41b:	lock aaa 
  40d41d:	arpl   bx,cx
  40d41f:	out    dx,eax
  40d420:	or     cl,bh
  40d422:	sbb    BYTE PTR [eax+eiz*8-0x3f],ah
  40d426:	add    BYTE PTR ds:0x2f128aca,dh
  40d42c:	adc    BYTE PTR [edx*4+0x232d227a],bl
  40d433:	dec    edx
  40d434:	out    0x28,al
  40d436:	jae    0x40d4a6
  40d438:	hlt    
  40d439:	jp     0x40d433
  40d43b:	clc    
  40d43c:	push   esp
  40d43d:	fiadd  WORD PTR [ecx]
  40d43f:	clc    
  40d440:	(bad)  
  40d441:	ds mov dl,0xba
  40d444:	leave  
  40d445:	inc    ebp
  40d446:	push   es
  40d447:	push   ds
  40d448:	or     al,0x2
  40d44a:	adc    ch,BYTE PTR [edx]
  40d44c:	xchg   ecx,eax
  40d44d:	stc    
  40d44e:	stos   DWORD PTR es:[edi],eax
  40d44f:	and    esp,DWORD PTR [eax-0x7cc62edd]
  40d455:	repz dec ebx
  40d457:	clc    
  40d458:	test   BYTE PTR [edi-0x27],0xc5
  40d45c:	lahf   
  40d45d:	pusha  
  40d45e:	mov    bh,0xc1
  40d460:	push   ebp
  40d461:	xchg   esp,eax
  40d462:	xchg   ecx,eax
  40d463:	inc    edx
  40d464:	into   
  40d465:	test   al,0xec
  40d467:	dec    eax
  40d468:	mov    ecx,0x982fcca0
  40d46d:	fsubrp st(5),st
  40d46f:	xchg   esi,eax
  40d470:	fwait
  40d471:	xchg   edx,eax
  40d472:	jg     0x40d49f
  40d474:	lock das 
  40d476:	mov    ch,0xbd
  40d478:	push   cs
  40d479:	or     ah,BYTE PTR [ebp+0x768159d7]
  40d47f:	pusha  
  40d480:	call   DWORD PTR [ebx-0x29]
  40d483:	mov    esp,0xc6ce6bfa
  40d488:	pop    ecx
  40d489:	pop    esi
  40d48a:	push   es
  40d48b:	mov    cl,0x7c
  40d48d:	into   
  40d48e:	adc    al,0xe0
  40d490:	mov    dh,0x12
  40d492:	cs test eax,0x35cf0da2
  40d498:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d499:	jae    0x40d456
  40d49b:	jmp    0x40d4e9
  40d49d:	aad    0xc8
  40d49f:	pop    edi
  40d4a0:	cmp    dl,dh
  40d4a2:	lds    esi,FWORD PTR [edi]
  40d4a4:	out    dx,al
  40d4a5:	fcomip st,st(5)
  40d4a7:	pop    ds
  40d4a8:	or     edi,ecx
  40d4aa:	xchg   DWORD PTR [esi-0x5a29c7fe],ecx
  40d4b0:	and    eax,0x3365233d
  40d4b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4b6:	(bad)  
  40d4b7:	inc    BYTE PTR [edi-0x7]
  40d4ba:	or     DWORD PTR [eax-0x29],ebp
  40d4bd:	and    edi,DWORD PTR [eax+0x75aecbba]
  40d4c3:	cdq    
  40d4c4:	push   ds
  40d4c5:	retw   0xe3a9
  40d4c9:	and    BYTE PTR [ebp+0x9],bh
  40d4cc:	jno    0x40d474
  40d4ce:	xor    ecx,ecx
  40d4d0:	(bad)  
  40d4d1:	clc    
  40d4d2:	dec    ebx
  40d4d3:	data16 jno 0x40d49a
  40d4d6:	xchg   esp,eax
  40d4d7:	sub    eax,0xffd38b8c
  40d4dc:	fdiv   QWORD PTR [edi]
  40d4de:	push   0x3d
  40d4e0:	jge    0x40d4f8
  40d4e2:	cli    
  40d4e3:	adc    edx,DWORD PTR [esi-0x24]
  40d4e6:	out    0xe9,al
  40d4e8:	leave  
  40d4e9:	(bad)  
  40d4ea:	push   esi
  40d4eb:	lahf   
  40d4ec:	inc    esi
  40d4ed:	adc    DWORD PTR [esi],ecx
  40d4ef:	popf   
  40d4f0:	retf   0xced9
  40d4f3:	clc    
  40d4f4:	icebp  
  40d4f5:	adc    bh,BYTE PTR [ebp-0x59725513]
  40d4fb:	jmp    0xd4ae:0x304c1aa
  40d502:	call   0xf0f:0xa950a65e
  40d509:	scas   al,BYTE PTR es:[edi]
  40d50a:	popa   
  40d50b:	ja     0x40d586
  40d50d:	push   ecx
  40d50e:	arpl   WORD PTR [edi+0x74],dx
  40d511:	dec    DWORD PTR [ecx]
  40d513:	cdq    
  40d514:	push   ss
  40d515:	push   ebx
  40d516:	xor    DWORD PTR [ecx-0x4b],ebp
  40d519:	cmp    cl,BYTE PTR [ebx+ecx*4]
  40d51c:	inc    esp
  40d51d:	add    eax,0x4e42431c
  40d522:	hlt    
  40d523:	sub    al,0x12
  40d525:	out    dx,eax
  40d526:	xlat   BYTE PTR ds:[ebx]
  40d527:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d528:	fsubr  DWORD PTR es:[eax+esi*4+0x5b48c5d5]
  40d530:	and    eax,0x3fd3e898
  40d535:	fwait
  40d536:	jg     0x40d4fc
  40d538:	push   esp
  40d539:	sar    ecx,cl
  40d53b:	imul   ebp,DWORD PTR [ebx-0x3e5aa90],0xc255369b
  40d545:	push   ebx
  40d546:	stc    
  40d547:	pop    ecx
  40d548:	out    dx,al
  40d549:	pop    edi
  40d54a:	or     ah,BYTE PTR [edi]
  40d54c:	mov    dh,BYTE PTR [edx+eiz*4-0x4792fc24]
  40d553:	adc    DWORD PTR [edx],ecx
  40d555:	dec    eax
  40d556:	and    edi,DWORD PTR [edx-0x7]
  40d559:	clc    
  40d55a:	sbb    dh,BYTE PTR [ecx]
  40d55c:	jb     0x40d56a
  40d55e:	popa   
  40d55f:	pop    DWORD PTR [ebx+ebx*2]
  40d562:	lods   al,BYTE PTR ds:[esi]
  40d563:	dec    esp
  40d564:	mov    al,0x5b
  40d566:	jg     0x40d511
  40d568:	test   al,0x5c
  40d56a:	or     eax,0x6be92401
  40d56f:	cld    
  40d570:	sbb    eax,0xe64b2b70
  40d575:	leave  
  40d576:	ds xchg ecx,eax
  40d578:	sub    eax,0x4e06bd11
  40d57d:	mov    bh,0x28
  40d57f:	mov    dl,0xdc
  40d581:	popf   
  40d582:	xor    DWORD PTR [ecx-0x32],edx
  40d585:	out    dx,eax
  40d586:	sub    edx,eax
  40d588:	leave  
  40d589:	hlt    
  40d58a:	test   DWORD PTR [ebx],eax
  40d58c:	lods   eax,DWORD PTR ds:[esi]
  40d58d:	into   
  40d58e:	mov    al,BYTE PTR [eax+0x375eedcc]
  40d594:	sub    dh,BYTE PTR [edi]
  40d596:	ficom  DWORD PTR ds:0x8264d1aa
  40d59c:	jmp    0x311d:0x9253cdb8
  40d5a3:	sbb    bl,cl
  40d5a5:	xchg   ebx,eax
  40d5a6:	mov    DWORD PTR [edx-0x9203baa],esi
  40d5ac:	jnp    0x40d59e
  40d5ae:	test   al,0x27
  40d5b0:	jne    0x40d5e0
  40d5b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5b3:	div    cx
  40d5b6:	adc    edx,ebp
  40d5b8:	xor    dh,BYTE PTR [ecx-0x1b03f52a]
  40d5be:	and    al,0xc3
  40d5c0:	ins    BYTE PTR es:[edi],dx
  40d5c1:	inc    esp
  40d5c2:	dec    ebp
  40d5c3:	ficom  DWORD PTR [ecx+0x3c]
  40d5c6:	dec    edx
  40d5c7:	scas   al,BYTE PTR es:[edi]
  40d5c8:	adc    al,0xd8
  40d5ca:	psrld  mm2,mm1
  40d5cd:	xor    eax,0x186c0bdc
  40d5d2:	fisttp DWORD PTR [edx]
  40d5d4:	ret    0x8b58
  40d5d7:	hlt    
  40d5d8:	mov    al,ds:0x8b487bf2
  40d5dd:	dec    esp
  40d5de:	addr16 nop
  40d5e0:	xor    eax,0x520c4a0f
  40d5e5:	inc    ebx
  40d5e6:	push   cs
  40d5e7:	mov    eax,ds:0xb9f2d31
  40d5ec:	xchg   edx,eax
  40d5ed:	cmp    eax,0x5e8937c8
  40d5f2:	cmp    DWORD PTR [eax+edi*8+0x38],ebp
  40d5f6:	sub    DWORD PTR [eax+edx*8],eax
  40d5f9:	sub    esp,DWORD PTR [ecx-0x7a2a0d68]
  40d5ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d600:	inc    ebx
  40d601:	mov    al,ds:0x56fb6fce
  40d606:	js     0x40d5ad
  40d608:	bound  ebp,QWORD PTR [ebx-0x42]
  40d60b:	jp     0x40d5ff
  40d60d:	retf   
  40d60e:	xchg   ebp,eax
  40d60f:	scas   eax,DWORD PTR es:[edi]
  40d610:	stos   BYTE PTR es:[edi],al
  40d611:	cmp    BYTE PTR [ecx-0x74dc7b90],ah
  40d617:	aaa    
  40d618:	sti    
  40d619:	pop    ss
  40d61a:	das    
  40d61b:	xchg   edx,eax
  40d61c:	mov    edi,0xcb1bd307
  40d621:	mov    dh,0xa5
  40d623:	push   es
  40d624:	jge    0x40d5ac
  40d626:	out    0xc4,al
  40d628:	or     BYTE PTR [esi+0x1ac74355],0x12
  40d62f:	push   ss
  40d630:	adc    eax,0xa1371a87
  40d635:	cmp    eax,0x39b65807
  40d63a:	ret    
  40d63b:	sbb    dl,BYTE PTR [edx+0x6e2c7596]
  40d641:	loope  0x40d657
  40d643:	jmp    0xf09477fe
  40d648:	jnp    0x40d607
  40d64a:	dec    ebx
  40d64b:	jb     0x40d6b0
  40d64d:	push   0xceaf03f
  40d652:	cld    
  40d653:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d654:	mov    edx,DWORD PTR ds:[esi-0x622a0ddf]
  40d65b:	push   esp
  40d65c:	dec    esi
  40d65d:	push   ds
  40d65e:	loope  0x40d65f
  40d660:	pop    edx
  40d661:	js     0x40d5ee
  40d663:	lock cmp edx,DWORD PTR [ecx]
  40d666:	xor    al,0x21
  40d668:	add    ecx,ebp
  40d66a:	daa    
  40d66b:	fsubr  DWORD PTR [eax-0x29f91ef2]
  40d671:	scas   al,BYTE PTR es:[edi]
  40d672:	jbe    0x40d641
  40d674:	mul    ah
  40d676:	repnz sub ebp,DWORD PTR [esi+0x4f]
  40d67a:	cmp    BYTE PTR [edi],cl
  40d67c:	and    ebx,DWORD PTR [ecx+0x1482cef4]
  40d682:	mov    ds,WORD PTR [ebx+ecx*8]
  40d685:	(bad)  
  40d686:	mov    bl,0xa6
  40d688:	pop    eax
  40d689:	in     al,0xbf
  40d68b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d68c:	pop    ebp
  40d68d:	jb     0x40d660
  40d68f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d690:	sbb    DWORD PTR ds:0xcc4c5672,ecx
  40d696:	jmp    0xaea4:0xd495fa5b
  40d69d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d69e:	fwait
  40d69f:	mov    ebx,0x86274964
  40d6a4:	lahf   
  40d6a5:	test   eax,0x6a02d527
  40d6aa:	adc    eax,DWORD PTR [ebp-0x1c]
  40d6ad:	or     al,0x26
  40d6af:	adc    BYTE PTR ds:0xb99fc36d,dl
  40d6b5:	sbb    ecx,DWORD PTR [ebx-0xf]
  40d6b8:	bound  ebp,QWORD PTR [ebp-0xa576bfe]
  40d6be:	xchg   edx,eax
  40d6bf:	fwait
  40d6c0:	xor    esp,DWORD PTR [ebp-0x359df101]
  40d6c6:	mov    dl,0x8f
  40d6c8:	inc    ebx
  40d6c9:	mov    ebx,0xf9f5ae27
  40d6ce:	xchg   edi,eax
  40d6cf:	sahf   
  40d6d0:	les    esp,FWORD PTR [ebp+0x78ec2f2b]
  40d6d6:	iret   
  40d6d7:	dec    ebp
  40d6d8:	push   eax
  40d6d9:	fbld   TBYTE PTR [ecx+0x2d]
  40d6dc:	add    BYTE PTR [ebx-0x63d12917],0x34
  40d6e3:	jp     0x40d758
  40d6e5:	pushf  
  40d6e6:	scas   al,BYTE PTR es:[edi]
  40d6e7:	dec    ecx
  40d6e8:	loopne 0x40d69b
  40d6ea:	push   ss
  40d6eb:	dec    edx
  40d6ec:	mov    al,ds:0x783d1bc8
  40d6f1:	les    edi,FWORD PTR ds:0x56206d22
  40d6f7:	jno    0x40d731
  40d6f9:	(bad)  
  40d6fa:	fstp   QWORD PTR [esi+0x29]
  40d6fd:	mov    DWORD PTR [ebx-0x3f8be858],eax
  40d703:	fdiv   DWORD PTR ds:0x374504e0
  40d709:	mov    dh,0xcd
  40d70b:	mov    bl,0x17
  40d70d:	bound  ebx,QWORD PTR ds:0x677105c0
  40d713:	mov    esi,0x2ee371e8
  40d718:	jle    0x40d78d
  40d71a:	xchg   ebp,eax
  40d71b:	ds mov ch,0xdd
  40d71e:	out    dx,al
  40d71f:	sahf   
  40d720:	xor    BYTE PTR [ebp-0x72ef1250],0xc8
  40d727:	xor    edx,ebx
  40d729:	pop    edx
  40d72a:	jae    0x40d6d2
  40d72c:	loop   0x40d6e0
  40d72e:	scas   al,BYTE PTR es:[edi]
  40d72f:	lds    ebx,FWORD PTR [eax+0x4e]
  40d732:	dec    edi
  40d733:	push   DWORD PTR [edx-0x2d2ee444]
  40d739:	retf   0x96be
  40d73c:	inc    ebp
  40d73d:	call   0xc7f7db2c
  40d742:	xlat   BYTE PTR ds:[bx]
  40d744:	mov    ebx,0x176ea47f
  40d749:	rcl    DWORD PTR [ebp-0xa9256a2],0xa5
  40d750:	je     0x40d701
  40d752:	jmp    0x2ace:0x1f787c13
  40d759:	xor    eax,0xd0de789e
  40d75e:	inc    ecx
  40d75f:	pushf  
  40d760:	push   cs
  40d761:	rcr    BYTE PTR [eax],1
  40d763:	shl    BYTE PTR [ecx+0x2844d6b7],0x87
  40d76a:	out    dx,eax
  40d76b:	daa    
  40d76c:	popa   
  40d76d:	adc    al,0xd
  40d76f:	mov    bl,0x44
  40d771:	out    0x38,al
  40d773:	jne    0x40d77f
  40d775:	and    eax,0x7ce01bf9
  40d77a:	mov    ds:0xe7051bb8,al
  40d77f:	xchg   DWORD PTR [ecx],ecx
  40d781:	push   esi
  40d782:	sub    dl,bl
  40d784:	std    
  40d785:	xchg   edi,eax
  40d786:	xlat   BYTE PTR ds:[ebx]
  40d787:	ret    
  40d788:	add    DWORD PTR [ebp-0x23a9713f],eax
  40d78e:	mov    edx,?
  40d790:	mov    ebp,0x7981cae7
  40d795:	aam    0x79
  40d797:	loop   0x40d737
  40d799:	jnp    0x40d746
  40d79b:	ins    BYTE PTR es:[edi],dx
  40d79c:	dec    ecx
  40d79d:	xchg   ebp,esp
  40d79f:	(bad)  
  40d7a1:	(bad)  [ebx+0x2]
  40d7a4:	mov    DWORD PTR [eax],edi
  40d7a6:	jb     0x40d7b4
  40d7a8:	scas   al,BYTE PTR es:[edi]
  40d7a9:	icebp  
  40d7aa:	push   es
  40d7ab:	pop    edi
  40d7ac:	mov    ds:0xe7413be8,al
  40d7b1:	jecxz  0x40d7f8
  40d7b3:	mov    ds:0xc04b9855,eax
  40d7b8:	loopne 0x40d7a8
  40d7ba:	adc    DWORD PTR [esi+0x29],eax
  40d7bd:	sbb    bl,bh
  40d7bf:	hlt    
  40d7c0:	mov    esp,0xc08ea708
  40d7c5:	in     eax,dx
  40d7c6:	inc    esp
  40d7c7:	jle    0x40d7b5
  40d7c9:	retf   
  40d7ca:	popf   
  40d7cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7cc:	retf   0x14e9
  40d7cf:	and    eax,0x1271c26b
  40d7d4:	add    esi,0xf11245ce
  40d7da:	dec    eax
  40d7db:	movmskps edi,xmm1
  40d7de:	jmp    0x40d7c8
  40d7e0:	jnp    0x40d7f2
  40d7e2:	enter  0x2cdf,0x5a
  40d7e6:	push   cs
  40d7e7:	ins    DWORD PTR es:[edi],dx
  40d7e8:	(bad)  
  40d7e9:	aam    0xb8
  40d7eb:	pusha  
  40d7ec:	mov    edx,0x85f71d24
  40d7f1:	xchg   ecx,edx
  40d7f3:	(bad)  
  40d7f4:	outs   dx,DWORD PTR ds:[esi]
  40d7f5:	jle    0x40d7d8
  40d7f7:	call   0x7b9d:0x1ddda363
  40d7fe:	inc    esi
  40d7ff:	repz in eax,0xc4
  40d802:	dec    esi
  40d803:	or     ah,dl
  40d805:	and    al,0xdb
  40d807:	xor    al,BYTE PTR [ebp+0x62a0bdba]
  40d80d:	jo     0x40d83f
  40d80f:	lods   eax,DWORD PTR ds:[esi]
  40d810:	aad    0xb7
  40d812:	and    edx,DWORD PTR [ebx+edi*1]
  40d815:	je     0x40d894
  40d817:	mov    BYTE PTR [ecx+0x6426d866],bh
  40d81d:	jno    0x40d850
  40d81f:	mov    ebp,0xdfed7464
  40d824:	into   
  40d825:	jno    0x40d7ad
  40d827:	mov    es,WORD PTR ds:0x9ef8811a
  40d82d:	xchg   esi,eax
  40d82e:	xchg   edi,eax
  40d82f:	rcr    DWORD PTR gs:0xefaf5f93,1
  40d836:	loopne 0x40d873
  40d838:	xor    bh,cl
  40d83a:	test   al,0x5f
  40d83c:	stc    
  40d83d:	pop    ebx
  40d83e:	mov    edi,0xf05078b9
  40d843:	outs   dx,DWORD PTR ds:[esi]
  40d844:	dec    esi
  40d845:	mov    ecx,0x2d37def2
  40d84a:	xor    eax,0x8f520c88
  40d84f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d850:	jp     0x2003dcb5
  40d856:	sub    eax,0x5356b838
  40d85b:	ss leave 
  40d85d:	shrd   DWORD PTR [ebp+0x1a],ebp,cl
  40d861:	push   ecx
  40d862:	pusha  
  40d863:	mov    cs,WORD PTR [esi-0x39d86a94]
  40d869:	fcmovnbe st,st(2)
  40d86b:	test   al,0x3c
  40d86d:	and    bl,dh
  40d86f:	cmp    eax,0x619e8e24
  40d874:	lock ficomp DWORD PTR [ebx]
  40d877:	mov    ebp,gs
  40d879:	mov    esp,0x823c6c1a
  40d87e:	xchg   esi,eax
  40d87f:	jg     0x40d8e0
  40d881:	xchg   edx,eax
  40d882:	mov    ecx,0x8cad551b
  40d887:	retf   
  40d888:	rcl    DWORD PTR [ebp+0x73],0x52
  40d88c:	mov    BYTE PTR [esi-0x40ddddae],bl
  40d892:	sub    ah,cl
  40d894:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d895:	dec    ebp
  40d896:	cld    
  40d897:	lds    ebp,FWORD PTR [eax+0x19]
  40d89a:	lea    edi,ds:0x757074b7
  40d8a0:	loopne 0x40d83d
  40d8a2:	(bad)  
  40d8a3:	dec    edi
  40d8a4:	sbb    ecx,DWORD PTR [ebx]
  40d8a6:	popf   
  40d8a7:	and    ebx,edx
  40d8a9:	mov    bh,0xa3
  40d8ab:	jnp    0x40d888
  40d8ad:	shl    BYTE PTR [ecx+eiz*4+0x6493f64e],1
  40d8b4:	int    0xb
  40d8b6:	ja     0x40d85d
  40d8b8:	mov    ds:0x71ac20b,eax
  40d8bd:	sub    BYTE PTR [esi],bl
  40d8bf:	test   eax,0x9dfd1ef6
  40d8c4:	jl     0x40d861
  40d8c6:	or     ebp,edi
  40d8c8:	xor    DWORD PTR [ebx+0x4b],0x12860e61
  40d8cf:	std    
  40d8d0:	repz sbb al,0x4
  40d8d3:	jge    0x40d94f
  40d8d5:	pushf  
  40d8d6:	mov    esi,0xf2e3209f
  40d8db:	push   ss
  40d8dc:	out    0xa6,al
  40d8de:	adc    al,BYTE PTR [ecx+esi*8+0x9]
  40d8e2:	push   eax
  40d8e3:	loopne 0x40d8b5
  40d8e5:	loopne 0x40d959
  40d8e7:	ins    BYTE PTR es:[edi],dx
  40d8e8:	ret    0x7b02
  40d8eb:	sbb    DWORD PTR [eax-0x2a],0x1300e25
  40d8f2:	add    DWORD PTR [ebp+0x3a345139],edx
  40d8f8:	and    DWORD PTR [esi+ebp*1-0x17],esp
  40d8fc:	pop    ebx
  40d8fd:	dec    eax
  40d8fe:	cli    
  40d8ff:	in     eax,dx
  40d900:	test   DWORD PTR [ebx+0x5a78ee9a],esp
  40d906:	mov    edi,0xd53139df
  40d90b:	or     dh,BYTE PTR [edx+0x5c]
  40d90e:	lds    ebp,FWORD PTR [eax+0x5]
  40d911:	dec    ecx
  40d912:	jle    0x40d93d
  40d914:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d915:	cmp    eax,0xe2d03b89
  40d91a:	nop
  40d91b:	jge    0x40d8bb
  40d91d:	ss cwde 
  40d91f:	add    al,0x4c
  40d921:	scas   al,BYTE PTR es:[edi]
  40d922:	lods   al,BYTE PTR ds:[esi]
  40d923:	mov    ?,edx
  40d925:	in     al,dx
  40d926:	sub    eax,0x3cb9ce34
  40d92b:	xchg   ebx,eax
  40d92c:	xlat   BYTE PTR ds:[ebx]
  40d92d:	sbb    ah,ah
  40d92f:	push   ecx
  40d930:	shl    esi,0x87
  40d933:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d934:	pop    ss
  40d935:	ins    DWORD PTR es:[edi],dx
  40d936:	sub    bl,BYTE PTR [ebx+0x37e0d56b]
  40d93c:	xlat   BYTE PTR ds:[ebx]
  40d93d:	das    
  40d93e:	adc    bh,bh
  40d940:	sbb    al,0x28
  40d942:	fcom   QWORD PTR [edx-0x581608cc]
  40d948:	repnz fimul DWORD PTR [ebx+0x6eaa2ac2]
  40d94f:	and    al,0x87
  40d951:	mov    eax,ds:0xf4e9d668
  40d956:	sbb    BYTE PTR [esi+0x70],bh
  40d959:	and    al,0x7c
  40d95b:	sbb    BYTE PTR [eax-0x1b775474],0x28
  40d962:	xor    ecx,DWORD PTR [ecx+0x2b4020e4]
  40d968:	inc    edx
  40d969:	jmp    0x710b15d8
  40d96e:	xor    ebp,DWORD PTR [ebp+0x74]
  40d971:	mov    ebx,0x154c0745
  40d976:	addr16 call 0x994da7af
  40d97c:	retf   0x2512
  40d97f:	fistp  WORD PTR ds:0x18def8ea
  40d985:	ds pop ss
  40d987:	fadd   st,st(4)
  40d989:	test   BYTE PTR [esi-0x49],dh
  40d98c:	jp     0x40d91e
  40d98e:	test   al,0x9b
  40d990:	fcom   QWORD PTR [edi]
  40d992:	mov    dh,0xaf
  40d994:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d995:	mov    DWORD PTR [ecx-0x7c573ad5],esp
  40d99b:	loop   0x40da02
  40d99d:	into   
  40d99e:	jge    0x40d9fd
  40d9a0:	rcl    edx,cl
  40d9a2:	dec    esi
  40d9a3:	mov    cl,0x33
  40d9a5:	fcom   QWORD PTR [edx]
  40d9a7:	adc    BYTE PTR [esi-0x11],cl
  40d9aa:	cmp    cl,BYTE PTR gs:[ebx]
  40d9ad:	hlt    
  40d9ae:	pop    ebp
  40d9af:	push   ds
  40d9b0:	xor    ebx,DWORD PTR [edi+0x49]
  40d9b3:	pop    ds
  40d9b4:	mov    bl,0x6c
  40d9b6:	mov    ch,0xb2
  40d9b8:	inc    eax
  40d9b9:	fld    QWORD PTR ds:0xa433e155
  40d9bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9c0:	loop   0x40d9a3
  40d9c2:	scas   al,BYTE PTR es:[edi]
  40d9c3:	xor    edi,DWORD PTR [eax]
  40d9c5:	mov    edx,0x1cd34af7
  40d9ca:	aas    
  40d9cb:	call   0x2427e22b
  40d9d0:	sbb    cl,BYTE PTR [ecx-0x29]
  40d9d3:	adc    esi,DWORD PTR [eax+0x54a32da4]
  40d9d9:	in     eax,0xdb
  40d9db:	lea    ebp,[eax+0x2d]
  40d9de:	(bad)  
  40d9df:	push   esi
  40d9e0:	js     0x40da40
  40d9e2:	mov    eax,ds:0x21dd9bde
  40d9e7:	cmp    DWORD PTR [edx],ebx
  40d9e9:	xchg   ebx,eax
  40d9ea:	out    0x86,eax
  40d9ec:	mov    ds:0x4d8aaf2b,al
  40d9f1:	(bad)  
  40d9f2:	jnp    0x40d9bf
  40d9f4:	dec    eax
  40d9f5:	push   0x4e
  40d9f7:	outs   dx,DWORD PTR ds:[esi]
  40d9f8:	lahf   
  40d9f9:	add    ebx,DWORD PTR [esi+0x77e41c75]
  40d9ff:	xchg   ebp,eax
  40da00:	or     esi,DWORD PTR [ebx+0x3a5e9bf4]
  40da06:	idiv   DWORD PTR [esi-0x1e]
  40da09:	sub    eax,0xa8ca8b5b
  40da0e:	push   ecx
  40da0f:	out    dx,eax
  40da10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da11:	pop    edi
  40da12:	dec    esp
  40da13:	retf   0xc952
  40da16:	dec    ecx
  40da17:	pop    eax
  40da18:	adc    edx,ecx
  40da1a:	cmc    
  40da1b:	cmp    eax,eax
  40da1d:	push   ecx
  40da1e:	xor    al,0xba
  40da20:	xchg   BYTE PTR [eax],ch
  40da22:	inc    edi
  40da23:	or     ah,cl
  40da25:	fild   WORD PTR [edi]
  40da27:	cmpps  xmm6,XMMWORD PTR [ebx-0x52],0x20
  40da2c:	xchg   edi,eax
  40da2d:	sub    ecx,edx
  40da2f:	fldenv [eax-0x5f2f246b]
  40da35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da36:	mov    edi,edx
  40da38:	or     DWORD PTR [ebp-0x66],esi
  40da3b:	clc    
  40da3c:	sub    DWORD PTR [edi],ebx
  40da3e:	out    dx,al
  40da3f:	adc    eax,0x5b24e3aa
  40da44:	pop    edi
  40da45:	popf   
  40da46:	mov    dl,0x1
  40da48:	and    edi,DWORD PTR [eax+0x15]
  40da4b:	mov    bh,0x72
  40da4d:	bound  ecx,QWORD PTR [ecx-0x5e22daa9]
  40da53:	mov    esi,0xfb8d48fb
  40da58:	push   eax
  40da59:	cmp    esi,DWORD PTR [esi]
  40da5b:	jl     0x40daa2
  40da5d:	pop    esp
  40da5e:	hlt    
  40da5f:	test   al,0xef
  40da61:	sbb    eax,edi
  40da63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da64:	ja     0x40da7c
  40da66:	inc    edi
  40da67:	add    eax,edx
  40da69:	and    BYTE PTR [ebp-0x6c9bce14],0xac
  40da70:	jno    0x40da0e
  40da72:	nop
  40da73:	dec    eax
  40da74:	(bad)  
  40da75:	fldcw  WORD PTR [edx-0x64d7c50d]
  40da7b:	loopne 0x40da3f
  40da7d:	add    al,0x73
  40da7f:	cmp    BYTE PTR [eax-0xdbf1e86],al
  40da85:	mov    al,ds:0xa9328e73
  40da8a:	das    
  40da8b:	test   BYTE PTR [esi],ch
  40da8d:	in     eax,dx
  40da8e:	sbb    eax,0x9942a266
  40da93:	push   ecx
  40da94:	sbb    ecx,esi
  40da96:	xlat   BYTE PTR ds:[ebx]
  40da97:	aas    
  40da98:	inc    ebp
  40da99:	or     bh,dl
  40da9b:	fmul   st,st(6)
  40da9d:	test   DWORD PTR [edi],0x9e11341e
  40daa3:	loope  0x40daac
  40daa5:	rcr    esi,cl
  40daa7:	and    BYTE PTR [edi-0x159f85ea],al
  40daad:	mov    ebx,0x1d1d8c48
  40dab2:	or     dl,0x68
  40dab5:	dec    ecx
  40dab6:	push   ecx
  40dab7:	cld    
  40dab8:	xor    ch,BYTE PTR [edi-0xdce777a]
  40dabe:	sahf   
  40dabf:	sar    BYTE PTR [esi+0x77bc6ae9],cl
  40dac5:	inc    edx
  40dac6:	test   al,0xfd
  40dac8:	xchg   ebp,eax
  40dac9:	sub    al,0x7b
  40dacb:	pop    es
  40dacc:	dec    esp
  40dacd:	loop   0x40daef
  40dacf:	in     al,dx
  40dad0:	push   0xffffffdb
  40dad2:	imul   ebp,DWORD PTR [ebp-0x78546048],0x6fbbbbc6
  40dadc:	cdq    
  40dadd:	sahf   
  40dade:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dadf:	sub    eax,0x47c48b02
  40dae4:	jno    0x40daa4
  40dae6:	inc    esp
  40dae7:	or     al,0xb
  40dae9:	inc    ebx
  40daea:	push   0xa8c70caa
  40daef:	pop    edx
  40daf0:	ds retf 0x97c7
  40daf4:	mov    edx,0x5966015e
  40daf9:	dec    esi
  40dafa:	pop    eax
  40dafb:	cmp    eax,0x91e4d484
  40db00:	(bad)  
  40db01:	lock loopne 0x40daba
  40db04:	push   esi
  40db05:	imul   eax,DWORD PTR [eax+0x54],0xffffffd6
  40db09:	gs xchg ebx,eax
  40db0b:	popf   
  40db0c:	enter  0xc1ab,0xd7
  40db10:	pusha  
  40db11:	test   al,0x11
  40db13:	add    esp,0xc6ccbcca
  40db19:	mov    esp,0x82f98c03
  40db1e:	popf   
  40db1f:	push   0x139c33eb
  40db24:	or     DWORD PTR [eax],ebx
  40db26:	adc    DWORD PTR [edx],ecx
  40db28:	fisubr WORD PTR [esi+0x25]
  40db2b:	sub    DWORD PTR [ecx-0x1a],esp
  40db2e:	xchg   esp,eax
  40db2f:	ret    0x6d32
  40db32:	cs out 0x32,al
  40db35:	jmp    0xfef6:0xcc4d2423
  40db3c:	outs   dx,DWORD PTR ds:[esi]
  40db3d:	xchg   ebp,eax
  40db3e:	mov    eax,0x4fcd690f
  40db43:	jecxz  0x40db3f
  40db45:	xchg   ecx,eax
  40db46:	lahf   
  40db47:	aas    
  40db48:	jmp    0x56e3f61f
  40db4d:	fisttp QWORD PTR [edi-0x60a2747e]
  40db53:	repnz and ebp,DWORD PTR [eax+0x7339bb46]
  40db5a:	or     DWORD PTR [ecx+0x5181e010],ebx
  40db60:	test   DWORD PTR [ecx+eiz*8+0x41],ebx
  40db64:	dec    ecx
  40db65:	push   ecx
  40db66:	xchg   ecx,eax
  40db67:	std    
  40db68:	enter  0x9298,0x54
  40db6c:	fst    QWORD PTR [esi+0x78]
  40db6f:	mov    DWORD PTR [edi+edi*4+0x44],ecx
  40db73:	fwait
  40db74:	jge    0x40db28
  40db76:	ja     0x40dba5
  40db78:	clc    
  40db79:	xchg   ebx,eax
  40db7a:	enter  0x3be7,0xa
  40db7e:	pop    ss
  40db7f:	jb     0x40db83
  40db81:	dec    esp
  40db82:	pop    edx
  40db83:	xor    esp,DWORD PTR [edi-0x79ce9f52]
  40db89:	das    
  40db8a:	mov    esp,0x7485d3ce
  40db8f:	inc    edx
  40db90:	mov    eax,DWORD PTR [edi]
  40db92:	dec    esp
  40db93:	mov    bl,0xf8
  40db95:	xchg   DWORD PTR [edi],esp
  40db97:	call   0x4ec6:0xc08e3b89
  40db9e:	loop   0x40dbf3
  40dba0:	and    BYTE PTR [esi],dl
  40dba2:	loope  0x40dc1a
  40dba4:	in     eax,0x1a
  40dba6:	mov    DWORD PTR [ecx-0x52],esi
  40dba9:	test   DWORD PTR [edx+0x6a],esi
  40dbac:	icebp  
  40dbad:	jbe    0x40dbac
  40dbaf:	frstor [ecx+ebx*1+0xf]
  40dbb3:	not    DWORD PTR [eax+0x40]
  40dbb6:	retf   0xa6b9
  40dbb9:	lds    edx,FWORD PTR [edi]
  40dbbb:	or     eax,0xde0f193d
  40dbc0:	dec    ebx
  40dbc1:	(bad)
  40dbc5:	or     eax,0x1df97da2
  40dbca:	int3   
  40dbcb:	fldenv [esi]
  40dbcd:	push   esp
  40dbce:	inc    eax
  40dbcf:	rcl    DWORD PTR [eax+0x1247fae2],1
  40dbd5:	push   ss
  40dbd6:	jl     0x40dc11
  40dbd8:	clc    
  40dbd9:	sub    dh,BYTE PTR [edi+0x24bf3c30]
  40dbdf:	fild   DWORD PTR [eax+0x3c]
  40dbe2:	push   es
  40dbe3:	imul   edx,DWORD PTR [ebp+eax*4-0x1c],0xfffffff5
  40dbe8:	sar    DWORD PTR [ebp-0x41],cl
  40dbeb:	inc    eax
  40dbec:	into   
  40dbed:	xor    DWORD PTR [ecx+ebx*8+0x7013206f],edi
  40dbf4:	jecxz  0x40dc48
  40dbf6:	hlt    
  40dbf7:	and    BYTE PTR [eax-0x5e62ed19],dl
  40dbfd:	add    ebp,DWORD PTR [edi]
  40dbff:	gs scas eax,DWORD PTR es:[edi]
  40dc01:	mov    cl,0xc0
  40dc03:	push   ds
  40dc04:	int3   
  40dc05:	les    eax,FWORD PTR [ecx+0x30f36f5c]
  40dc0b:	rcr    DWORD PTR [eax+ebx*1-0x1840df4d],1
  40dc12:	adc    ch,bl
  40dc14:	je     0x40dbcc
  40dc16:	pusha  
  40dc17:	ss mov ebp,0xe7be4c82
  40dc1d:	jne    0x40dc47
  40dc1f:	jecxz  0x40dc9b
  40dc21:	dec    ebx
  40dc22:	or     ecx,DWORD PTR [edx]
  40dc24:	pop    es
  40dc25:	in     eax,dx
  40dc26:	ja     0x40dc5f
  40dc28:	jle    0x40dc79
  40dc2a:	pop    edi
  40dc2b:	ret    0x1c0c
  40dc2e:	(bad)  
  40dc2f:	sub    eax,0x91d990c
  40dc34:	add    dh,BYTE PTR [esp+eiz*8-0x5d]
  40dc38:	test   BYTE PTR [ebp+0x44],al
  40dc3b:	or     BYTE PTR [ebp+0x7c],bh
  40dc3e:	jmp    0x40dc29
  40dc40:	or     esp,DWORD PTR [ebx-0x6e]
  40dc43:	sti    
  40dc44:	lods   al,BYTE PTR ds:[esi]
  40dc45:	pop    ebp
  40dc46:	hlt    
  40dc47:	dec    esp
  40dc48:	fwait
  40dc49:	sbb    al,0x5c
  40dc4b:	xchg   edi,eax
  40dc4c:	leave  
  40dc4d:	idiv   BYTE PTR [esi+0x61]
  40dc50:	pop    edx
  40dc51:	js     0x40dbea
  40dc53:	pop    ss
  40dc54:	cmp    eax,0x896fffee
  40dc59:	scas   al,BYTE PTR es:[edi]
  40dc5a:	test   al,0xee
  40dc5c:	cmp    DWORD PTR [edi-0x68],ebx
  40dc5f:	inc    edx
  40dc60:	mov    ebp,0x795e7386
  40dc65:	xchg   ebp,eax
  40dc66:	cmp    eax,0x135e2ad5
  40dc6b:	clc    
  40dc6c:	dec    esp
  40dc6d:	jecxz  0x40dc4b
  40dc6f:	loopne 0x40dc16
  40dc71:	or     BYTE PTR [esi],dh
  40dc73:	pop    esp
  40dc74:	jmp    0x58d:0x67471bd2
  40dc7b:	inc    edx
  40dc7c:	dec    esi
  40dc7d:	pop    ebp
  40dc7e:	aaa    
  40dc7f:	mov    ds:0x1ee50313,al
  40dc84:	enter  0x7add,0xee
  40dc88:	push   edx
  40dc89:	sar    DWORD PTR [esi-0x38],cl
  40dc8c:	out    0x74,eax
  40dc8e:	dec    esp
  40dc8f:	pop    ecx
  40dc90:	mov    ?,WORD PTR [edi]
  40dc92:	inc    eax
  40dc93:	adc    BYTE PTR [edi+0x35],dh
  40dc96:	mov    cl,0x75
  40dc98:	pushf  
  40dc99:	jno    0x40dcb2
  40dc9b:	or     DWORD PTR ds:0xfa90a52f,esi
  40dca1:	mov    DWORD PTR [ebp+0x5b889673],edx
  40dca7:	sbb    al,0x16
  40dca9:	xchg   ah,ah
  40dcab:	xchg   edi,eax
  40dcac:	or     eax,0x8ae096c8
  40dcb1:	lock pop es
  40dcb3:	adc    dl,dh
  40dcb5:	test   BYTE PTR [ecx],dl
  40dcb7:	push   es
  40dcb8:	mov    esi,0x2624e446
  40dcbd:	mov    cl,BYTE PTR [ecx+0x6feefb2a]
  40dcc3:	popa   
  40dcc4:	xchg   ebx,esp
  40dcc6:	jmp    0x40dd19
  40dcc8:	out    0x13,al
  40dcca:	(bad)  
  40dccb:	iret   
  40dccc:	popf   
  40dccd:	cwde   
  40dcce:	dec    ebx
  40dccf:	cmp    DWORD PTR [eax],0xffffffec
  40dcd2:	adc    bl,al
  40dcd4:	jmp    0x8fd391d0
  40dcd9:	adc    al,0x88
  40dcdb:	imul   edx,DWORD PTR [edx-0x53f34b3c],0x5
  40dce2:	mov    ebp,0x6df554d4
  40dce7:	cli    
  40dce8:	hlt    
  40dce9:	gs fsub QWORD PTR cs:[edi+edi*1+0x5e5d15e3]
  40dcf2:	or     ecx,esp
  40dcf4:	mov    ds:0x137cdbb2,al
  40dcf9:	pop    es
  40dcfa:	sbb    ecx,ecx
  40dcfc:	pop    ss
  40dcfd:	push   eax
  40dcfe:	aas    
  40dcff:	(bad)  
  40dd00:	adc    BYTE PTR [ecx-0x2c],bl
  40dd03:	pop    ecx
  40dd04:	inc    edx
  40dd05:	mov    ds:0x7813d0eb,al
  40dd0a:	in     al,0xcf
  40dd0c:	mov    edx,0xed3eadef
  40dd11:	dec    ecx
  40dd12:	test   esi,edi
  40dd14:	and    al,0x55
  40dd16:	int3   
  40dd17:	dec    edi
  40dd18:	pop    ebx
  40dd19:	mov    edx,0xc569b024
  40dd1e:	add    BYTE PTR fs:[ebx-0xa447ed9],ch
  40dd25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd26:	(bad)  
  40dd27:	and    eax,0xb4f4a4c7
  40dd2c:	or     BYTE PTR [ebx+0x7d4188b8],al
  40dd32:	jbe    0x40dd23
  40dd34:	cli    
  40dd35:	adc    ebp,DWORD PTR [esi+0x547d1f39]
  40dd3b:	mov    eax,ds:0xea556c3e
  40dd40:	inc    ebp
  40dd41:	xor    DWORD PTR [edi-0x5b],edx
  40dd44:	mov    eax,0x9b8a19fe
  40dd49:	gs dec esi
  40dd4b:	and    DWORD PTR [edi+esi*1+0x77],ecx
  40dd4f:	stc    
  40dd50:	cdq    
  40dd51:	out    dx,eax
  40dd52:	dec    esi
  40dd53:	call   0x1a02:0x289fd816
  40dd5a:	push   ebx
  40dd5b:	loope  0x40dd2d
  40dd5d:	sub    edx,DWORD PTR [ebp-0x31]
  40dd60:	pop    esp
  40dd61:	imul   edi,DWORD PTR [esi],0xffffffc9
  40dd64:	fcomp  QWORD PTR [edx+0x46]
  40dd67:	fld    st(4)
  40dd69:	in     eax,0x52
  40dd6b:	out    dx,eax
  40dd6c:	imul   ecx,DWORD PTR [esi+0x3c],0xefd45ce4
  40dd73:	pop    eax
  40dd74:	repz (bad) 
  40dd76:	xchg   ebx,eax
  40dd77:	stos   DWORD PTR es:[edi],eax
  40dd78:	fmulp  st(0),st
  40dd7a:	dec    ebx
  40dd7b:	fadd   QWORD PTR [ebp-0x53f9245b]
  40dd81:	add    al,0xfe
  40dd83:	stos   DWORD PTR es:[edi],eax
  40dd84:	out    dx,eax
  40dd85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd86:	fsubr  DWORD PTR ds:0x15be75ce
  40dd8c:	(bad)  
  40dd8d:	pop    es
  40dd8e:	mov    ds:0x2507f9bb,eax
  40dd93:	pop    edi
  40dd94:	sar    edi,cl
  40dd96:	cmp    cl,BYTE PTR [ebx+0x241d9c4b]
  40dd9c:	mov    ebp,0x14473082
  40dda1:	int3   
  40dda2:	xchg   edi,eax
  40dda3:	js     0x40de12
  40dda5:	cmp    BYTE PTR [esi],ch
  40dda7:	cmp    eax,0x95c4e79f
  40ddac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddad:	imul   esi,DWORD PTR [edx],0x3d37c468
  40ddb3:	shl    DWORD PTR [edx+eiz*1+0x2c9a0109],1
  40ddba:	and    ebp,DWORD PTR [esi+0x41775fb1]
  40ddc0:	mov    al,ds:0x7638b53e
  40ddc5:	ss xchg ebx,eax
  40ddc7:	xchg   esi,eax
  40ddc8:	xor    DWORD PTR [esi],0x4be8a684
  40ddce:	cli    
  40ddcf:	call   0xf53d:0x5f19cc85
  40ddd6:	push   0xffffffc2
  40ddd8:	sub    al,0xb2
  40ddda:	adc    BYTE PTR [ebp+0x24e662d2],dh
  40dde0:	xor    edx,eax
  40dde2:	xchg   ah,ah
  40dde4:	out    dx,eax
  40dde5:	and    DWORD PTR cs:[eax-0x6f],ebx
  40dde9:	push   es
  40ddea:	int3   
  40ddeb:	xor    DWORD PTR [eax],0xda9a5cb2
  40ddf1:	mov    ah,0xb6
  40ddf3:	ret    0xe024
  40ddf6:	mov    ah,0xc8
  40ddf8:	jae    0x40de2e
  40ddfa:	sub    BYTE PTR [ecx-0x2832166a],ah
  40de00:	std    
  40de01:	mov    al,ds:0x3b92d4bf
  40de06:	gs ss mov eax,0x28b115ee
  40de0d:	aaa    
  40de0e:	loope  0x40de03
  40de10:	out    dx,eax
  40de11:	jb     0x40de85
  40de13:	test   al,0x97
  40de15:	shr    dl,1
  40de17:	jmp    0x40de44
  40de19:	or     ch,BYTE PTR ds:[si]
  40de1d:	pop    es
  40de1e:	pop    esi
  40de1f:	jge    0x40ddb1
  40de21:	adc    eax,DWORD PTR [edi+0x5ccfed60]
  40de27:	sub    eax,0x31aeb195
  40de2c:	popf   
  40de2d:	push   0x7bc3b277
  40de32:	fstp   DWORD PTR [edi]
  40de34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de35:	out    dx,eax
  40de36:	cmc    
  40de37:	test   eax,0xa30a9e98
  40de3c:	sbb    BYTE PTR [ebp+0x4f],0x4a
  40de40:	cvttps2pi mm7,QWORD PTR [ecx-0x1d]
  40de44:	or     edx,edi
  40de46:	mov    ecx,0x4b1339e4
  40de4b:	sbb    esi,DWORD PTR [esp+ecx*1+0x7f]
  40de4f:	push   ebp
  40de50:	or     eax,0xc00a7e7b
  40de55:	hlt    
  40de56:	push   ebp
  40de57:	jle    0x40de55
  40de59:	inc    ebx
  40de5a:	rol    DWORD PTR [ebx+0x61],0x68
  40de5e:	data16 xchg dh,dl
  40de61:	dec    eax
  40de62:	add    al,0xba
  40de64:	lahf   
  40de65:	stc    
  40de66:	xlat   BYTE PTR ds:[ebx]
  40de67:	cvtps2pi mm0,QWORD PTR [esi+0x3c]
  40de6b:	sti    
  40de6c:	inc    esp
  40de6d:	inc    ebp
  40de6e:	repz clc 
  40de70:	jl     0x40dec4
  40de72:	sbb    cl,BYTE PTR [ecx-0x54]
  40de75:	pop    ebp
  40de76:	xchg   edi,ecx
  40de78:	inc    eax
  40de79:	lods   eax,DWORD PTR ds:[esi]
  40de7a:	sar    DWORD PTR [eax],cl
  40de7c:	jp     0x40def1
  40de7e:	aam    0xaf
  40de80:	push   edx
  40de81:	xchg   esi,eax
  40de82:	jae    0x40dedd
  40de84:	out    0x73,eax
  40de86:	sub    ebx,esp
  40de88:	test   DWORD PTR [ecx-0xe334274],0xf0ffdbd0
  40de92:	call   0x71d5:0x4b9cef7c
  40de99:	std    
  40de9a:	xchg   esp,eax
  40de9b:	adc    cl,ch
  40de9d:	retf   0x3298
  40dea0:	(bad)
  40dea3:	loope  0x40de7a
  40dea5:	push   ebx
  40dea6:	int    0xfb
  40dea8:	inc    edi
  40dea9:	int3   
  40deaa:	xchg   esi,eax
  40deab:	adc    eax,0xc4ec98a1
  40deb0:	pop    ecx
  40deb1:	sub    eax,0x42d5a365
  40deb6:	mov    ebp,0x71db558
  40debb:	xchg   ebp,eax
  40debc:	jno    0x40df02
  40debe:	call   0x95a5a2f1
  40dec3:	ret    0x3128
  40dec6:	retf   0xe68b
  40dec9:	mov    BYTE PTR [eax],dh
  40decb:	test   al,0x1b
  40decd:	cmp    eax,DWORD PTR [edi+0x612b9b8d]
  40ded3:	scas   eax,DWORD PTR es:[edi]
  40ded4:	mov    esp,0x9de9062a
  40ded9:	(bad)  
  40deda:	test   BYTE PTR [eax],0x1a
  40dedd:	xor    BYTE PTR [edi],0xd9
  40dee0:	add    DWORD PTR [ebp-0x7e],esp
  40dee3:	test   eax,0xe4104ce3
  40dee8:	shl    DWORD PTR [ecx-0x74],0xf2
  40deec:	or     edx,ebp
  40deee:	xor    bl,cl
  40def0:	xor    bh,ch
  40def2:	addr16 jno 0x40df52
  40def5:	popa   
  40def6:	inc    esi
  40def7:	sub    al,0x98
  40def9:	mov    ds:0x8eb9bc0d,eax
  40defe:	mov    esp,0x870fa3ff
  40df03:	shr    BYTE PTR [edi-0xd940473],0xd7
  40df0a:	test   eax,0x7081fc51
  40df0f:	mov    dh,BYTE PTR [edi]
  40df11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df12:	fstp   TBYTE PTR [esi+0x54]
  40df15:	repz in eax,dx
  40df17:	add    eax,0x9b99bbf5
  40df1d:	scas   al,BYTE PTR es:[edi]
  40df1e:	gs sbb al,0xe9
  40df21:	mul    DWORD PTR [esp+esi*4]
  40df24:	pushf  
  40df25:	(bad)  
  40df26:	lods   al,BYTE PTR ds:[esi]
  40df27:	mov    cl,0x54
  40df29:	rcl    BYTE PTR [edx],1
  40df2b:	sbb    DWORD PTR [edi],edi
  40df2d:	jg     0x40df70
  40df2f:	gs in  al,dx
  40df31:	pop    eax
  40df32:	cmc    
  40df33:	enter  0xd9df,0x49
  40df37:	xchg   esp,eax
  40df38:	pop    es
  40df39:	sbb    eax,esp
  40df3b:	ins    BYTE PTR es:[edi],dx
  40df3c:	cmp    BYTE PTR [eax+0x2fb7d65f],dh
  40df42:	fst    QWORD PTR ds:0xb7823af8
  40df48:	sbb    esi,0x4afc1a56
  40df4e:	inc    esp
  40df4f:	xchg   ecx,eax
  40df50:	fdiv   st(2),st
  40df52:	imul   ecx,esi,0xffffffbb
  40df55:	cmp    DWORD PTR [esp+esi*8-0x7e],edi
  40df59:	sub    BYTE PTR [esi-0x3c],ah
  40df5c:	test   bh,dh
  40df5e:	xchg   edx,eax
  40df5f:	retf   0xa051
  40df62:	out    0xf9,eax
  40df64:	cmp    ebx,0xffffffc6
  40df67:	(bad)  
  40df68:	fs jl  0x40df7b
  40df6b:	int3   
  40df6c:	xor    al,0x4a
  40df6e:	(bad)  [ebp+0x48]
  40df71:	mov    WORD PTR [ecx],ss
  40df73:	(bad)  
  40df74:	clc    
  40df75:	call   0x99ce498c
  40df7a:	pop    ds
  40df7b:	aas    
  40df7c:	xor    al,ch
  40df7e:	push   ebx
  40df7f:	mov    eax,ds:0x36d4cd0c
  40df84:	imul   ecx,DWORD PTR [eax-0x47],0x26
  40df88:	les    eax,FWORD PTR [ecx+0xca91b6e]
  40df8e:	fist   WORD PTR [ecx]
  40df90:	pop    ebp
  40df91:	inc    ebp
  40df92:	adc    BYTE PTR [ecx],bl
  40df94:	mov    eax,ds:0x82b5b546
  40df99:	mov    gs,WORD PTR [ebx]
  40df9b:	push   edi
  40df9c:	mov    ebp,0xf356f44b
  40dfa1:	out    0x14,eax
  40dfa3:	rcr    BYTE PTR [edi+eiz*1],cl
  40dfa6:	xchg   ecx,eax
  40dfa7:	push   ecx
  40dfa8:	je     0x40df36
  40dfaa:	sbb    ebx,esi
  40dfac:	adc    ebp,DWORD PTR [esi+0x1]
  40dfaf:	inc    esi
  40dfb0:	cmp    edx,esp
  40dfb2:	and    ah,BYTE PTR [edx+esi*8]
  40dfb5:	adc    al,0xe7
  40dfb7:	fwait
  40dfb8:	push   0xb5f1522a
  40dfbd:	addr16 mov al,ds:0x7d4a
  40dfc1:	call   0xb702:0x3fb3b3fd
  40dfc8:	shl    BYTE PTR [ebp+0x7addd8cb],1
  40dfce:	adc    BYTE PTR [ecx-0x51903677],cl
  40dfd4:	jge    0x40dfc1
  40dfd6:	mov    ds:0xad6bd18c,al
  40dfdb:	or     eax,0xaa82c815
  40dfe0:	mov    eax,ds:0x10422fd3
  40dfe5:	test   BYTE PTR [ecx-0xa],dl
  40dfe8:	dec    ebp
  40dfe9:	push   ebp
  40dfea:	mov    al,0x8
  40dfec:	mov    ebp,0x1a2bfd04
  40dff1:	(bad)  
  40dff2:	div    cl
  40dff4:	mov    edi,0x7a6c909c
  40dff9:	in     al,0x97
  40dffb:	(bad)  
  40dffc:	bound  ebp,QWORD PTR [ecx+0x7687e9eb]
  40e002:	clc    
  40e003:	xchg   ebp,eax
  40e004:	mov    DWORD PTR [ecx+0x7255c6c0],esp
  40e00a:	push   eax
  40e00b:	pop    es
  40e00c:	stos   BYTE PTR es:[edi],al
  40e00d:	adc    eax,0x755a7a58
  40e012:	add    DWORD PTR [ecx+eiz*1+0x45869f97],esi
  40e019:	add    DWORD PTR [ecx+0x6e],0xe2ca194b
  40e020:	leave  
  40e021:	(bad)  
  40e022:	push   edx
  40e023:	imul   edx,edx,0xffffff8d
  40e026:	cmp    al,0x66
  40e028:	inc    eax
  40e029:	pop    ds
  40e02a:	cmp    DWORD PTR [edi+0x1],edx
  40e02d:	pushf  
  40e02e:	outs   dx,BYTE PTR ds:[esi]
  40e02f:	idiv   dl
  40e031:	sbb    dh,bh
  40e033:	push   eax
  40e034:	in     eax,0x4
  40e036:	fstp   QWORD PTR [edx-0x1a5faf6a]
  40e03c:	sbb    DWORD PTR [ebp-0x4bcdcaff],0x6d
  40e043:	retf   
  40e044:	outs   dx,BYTE PTR ds:[esi]
  40e045:	lea    esi,[edx+0x4d]
  40e048:	inc    edi
  40e049:	lock pushf 
  40e04b:	mov    cl,0x50
  40e04d:	into   
  40e04e:	or     eax,0xd0fe8f54
  40e053:	rol    BYTE PTR [edx-0x44482a5d],0x98
  40e05a:	test   BYTE PTR ds:0xae01accd,bl
  40e060:	mov    bl,0x58
  40e062:	repz sub eax,0x792cb1ea
  40e068:	add    bh,BYTE PTR cs:[ecx]
  40e06b:	xchg   esi,eax
  40e06c:	out    0x67,al
  40e06e:	scas   al,BYTE PTR es:[edi]
  40e06f:	cwde   
  40e070:	int3   
  40e071:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e072:	pushf  
  40e073:	jmp    0x1981:0x8851d400
  40e07a:	pop    esi
  40e07b:	push   0xd2da0d15
  40e080:	aaa    
  40e081:	pushf  
  40e082:	jae    0x40e071
  40e084:	jbe    0x40e082
  40e086:	ret    0x8b9e
  40e089:	mov    esp,0xcace9d3f
  40e08e:	test   DWORD PTR [edi+ebp*4],0xa4ecf991
  40e095:	add    eax,DWORD PTR [ebp-0x37dbe25a]
  40e09b:	test   eax,0x1bb5a042
  40e0a0:	mov    BYTE PTR [eax+0x5925f51d],bl
  40e0a6:	xor    esp,esi
  40e0a8:	arpl   WORD PTR [ebp-0x26],di
  40e0ab:	and    ah,BYTE PTR [edi]
  40e0ad:	pop    ebx
  40e0ae:	out    dx,eax
  40e0af:	lahf   
  40e0b0:	or     esp,esp
  40e0b2:	adc    dh,al
  40e0b4:	cld    
  40e0b5:	ret    0x6b80
  40e0b8:	cld    
  40e0b9:	iret   
  40e0ba:	dec    edi
  40e0bb:	and    eax,0x863b0549
  40e0c0:	call   0x55b:0xbca91e79
  40e0c7:	ins    BYTE PTR es:[edi],dx
  40e0c8:	jle    0x40e099
  40e0ca:	clc    
  40e0cb:	xor    dl,BYTE PTR [edi+0x5e]
  40e0ce:	mov    dl,BYTE PTR [edi]
  40e0d0:	aam    0x23
  40e0d2:	lds    edx,FWORD PTR [esi+0x2]
  40e0d5:	xor    dh,cl
  40e0d7:	aam    0xff
  40e0d9:	mov    ah,0x72
  40e0db:	test   eax,0xb0a78ad8
  40e0e0:	dec    esp
  40e0e1:	adc    BYTE PTR [eax+edx*2+0x0],ch
  40e0e5:	stc    
  40e0e6:	cmc    
  40e0e7:	mov    ecx,0xf1848b9b
  40e0ec:	sbb    DWORD PTR [esi+0xc],ecx
  40e0ef:	(bad)  
  40e0f0:	ret    
  40e0f1:	xchg   ecx,eax
  40e0f2:	aaa    
  40e0f3:	xchg   ebp,eax
  40e0f4:	fisub  DWORD PTR [eax]
  40e0f6:	mov    BYTE PTR [edi+0x7fa888a6],bh
  40e0fc:	xor    dl,BYTE PTR [ebx+0x6f]
  40e0ff:	lods   eax,DWORD PTR fs:[esi]
  40e101:	inc    esi
  40e102:	sbb    eax,0x13cbbc36
  40e107:	sti    
  40e108:	jl     0x40e11d
  40e10a:	icebp  
  40e10b:	mov    bh,0xda
  40e10d:	push   edi
  40e10e:	test   al,0xb6
  40e110:	ins    DWORD PTR es:[edi],dx
  40e111:	(bad)  
  40e113:	aas    
  40e114:	xor    DWORD PTR [edx],edx
  40e116:	fist   DWORD PTR [edx-0x73]
  40e119:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e11a:	jmp    0x7508:0x4a7ec04c
  40e121:	ja     0x40e15b
  40e123:	out    0xa4,eax
  40e125:	jl     0x40e19e
  40e127:	pop    edi
  40e128:	mov    edx,0xaaacc633
  40e12d:	fsubrp st(3),st
  40e12f:	ficom  WORD PTR [ecx+0x7aa8e952]
  40e135:	xchg   ebp,eax
  40e136:	sbb    DWORD PTR [esi-0x3e],ebp
  40e139:	fcomip st,st(1)
  40e13b:	mov    esp,0x22119b0f
  40e140:	mov    bh,0x10
  40e142:	cli    
  40e143:	(bad)  
  40e145:	push   cs
  40e146:	daa    
  40e147:	jbe    0x40e0cd
  40e149:	lahf   
  40e14a:	sbb    ebx,edx
  40e14c:	xor    eax,DWORD PTR [ecx-0x97beda2]
  40e152:	ds inc edx
  40e154:	mov    BYTE PTR [ebx-0x998a033],ah
  40e15a:	push   esi
  40e15b:	lea    ebp,[ebx+0x358be434]
  40e161:	push   0x3ccc620c
  40e166:	aam    0xd1
  40e168:	cmp    eax,DWORD PTR [eax-0x234dcbac]
  40e16e:	sbb    eax,ebp
  40e170:	or     dh,BYTE PTR [esi-0x7bf6e39a]
  40e176:	sbb    ebx,ebx
  40e178:	push   0xffffffb9
  40e17a:	imul   esp,ebx,0x16555949
  40e180:	sahf   
  40e181:	outs   dx,DWORD PTR ds:[esi]
  40e182:	sub    DWORD PTR [eax-0x2eeaa98f],edx
  40e188:	js     0x35f2adc8
  40e18e:	mov    esp,0x34927df2
  40e193:	shl    BYTE PTR [edi-0x5],1
  40e196:	cmp    esp,ecx
  40e198:	fisub  WORD PTR [edi-0x40]
  40e19b:	std    
  40e19c:	dec    ebx
  40e19d:	adc    al,0xa7
  40e19f:	mov    DWORD PTR ds:0xfb46906c,esp
  40e1a5:	jp     0x40e155
  40e1a7:	daa    
  40e1a8:	xlat   BYTE PTR ds:[ebx]
  40e1a9:	fild   DWORD PTR [esi+ebx*4]
  40e1ac:	dec    ebx
  40e1ad:	push   cs
  40e1ae:	cmp    eax,0x4320277f
  40e1b3:	(bad)  
  40e1b4:	ds and al,0x87
  40e1b7:	or     eax,0xa38f1da1
  40e1bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1bd:	out    dx,eax
  40e1be:	push   eax
  40e1bf:	push   ebx
  40e1c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1c1:	jmp    0x8965:0x64e4716a
  40e1c8:	je     0x40e1fa
  40e1ca:	jp     0x40e18a
  40e1cc:	pop    eax
  40e1cd:	mov    dh,0x83
  40e1cf:	sbb    ebx,edx
  40e1d1:	arpl   di,sp
  40e1d3:	pop    edx
  40e1d4:	mov    esp,es
  40e1d6:	iret   
  40e1d7:	add    ch,ch
  40e1d9:	lahf   
  40e1da:	dec    BYTE PTR [edi-0x41]
  40e1dd:	pop    eax
  40e1de:	mov    al,0xca
  40e1e0:	mov    bl,0xc2
  40e1e2:	sar    DWORD PTR [eax+0x3c6154e8],0x35
  40e1e9:	sub    al,0x66
  40e1eb:	sbb    bl,BYTE PTR [ecx]
  40e1ed:	push   edi
  40e1ee:	mov    esp,0x3e6b4fe5
  40e1f3:	test   eax,0x2f2a993f
  40e1f8:	repnz cmp DWORD PTR [esi-0x3e70674e],ecx
  40e1ff:	jno    0x40e23f
  40e201:	into   
  40e202:	dec    ebp
  40e203:	and    edx,eax
  40e205:	lahf   
  40e206:	(bad)  
  40e207:	lds    ebp,FWORD PTR [ebx+eiz*8]
  40e20a:	cmp    al,0x2e
  40e20c:	ja     0x40e1ed
  40e20e:	jne    0x40e210
  40e210:	jecxz  0x40e192
  40e212:	cmp    BYTE PTR [ebp-0x48eeb192],ah
  40e218:	loop   0x40e277
  40e21a:	sub    ebp,DWORD PTR [ecx]
  40e21c:	in     al,dx
  40e21d:	xor    eax,0xb681b35f
  40e222:	ret    
  40e223:	cmp    esp,DWORD PTR [ebp+0x19]
  40e226:	mov    dh,0xf8
  40e228:	call   0xf168:0x9f216f09
  40e22f:	xchg   BYTE PTR [edi+0x75],bh
  40e232:	mov    edx,0x1749ba8b
  40e237:	mov    DWORD PTR [ecx-0x6b3d264],0xa20595e5
  40e241:	adc    edx,ebx
  40e243:	and    al,ch
  40e245:	add    edi,DWORD PTR [eax]
  40e247:	shl    DWORD PTR [ebp+0x13],0x8c
  40e24b:	(bad)  
  40e24c:	sbb    DWORD PTR es:[ebp+edx*1-0x1],esp
  40e251:	rcr    bh,1
  40e253:	pusha  
  40e254:	ins    BYTE PTR es:[edi],dx
  40e255:	ja     0x40e207
  40e257:	shl    eax,cl
  40e259:	and    DWORD PTR [edx-0x1d],ebx
  40e25c:	dec    esp
  40e25d:	scas   al,BYTE PTR es:[edi]
  40e25e:	mov    eax,0x3f6be963
  40e263:	push   ds
  40e264:	inc    DWORD PTR [ecx+0x53]
  40e267:	jns    0x40e24d
  40e269:	out    0x66,al
  40e26b:	inc    ebp
  40e26c:	stos   DWORD PTR es:[edi],eax
  40e26d:	jle    0x40e2e3
  40e26f:	and    cl,al
  40e271:	adc    BYTE PTR [ecx+edi*8+0x6f],cl
  40e275:	outs   dx,DWORD PTR ds:[esi]
  40e276:	xchg   ecx,eax
  40e277:	push   ss
  40e278:	jae    0x40e2af
  40e27a:	jecxz  0x40e20c
  40e27c:	fwait
  40e27d:	das    
  40e27e:	mov    ds:0x641f538b,al
  40e283:	sub    BYTE PTR [edi+ebp*2-0x70381ace],0x1f
  40e28b:	sahf   
  40e28c:	retw   0x23c8
  40e290:	ret    
  40e291:	jne    0x40e267
  40e293:	or     BYTE PTR [edi+edi*4+0x43],ch
  40e297:	mov    esp,0xf4863a76
  40e29c:	mov    esi,0x4f8d8553
  40e2a1:	and    al,0xf5
  40e2a3:	int    0x68
  40e2a5:	jmp    0x3f48cf0e
  40e2aa:	pop    edi
  40e2ab:	hlt    
  40e2ac:	xchg   edi,eax
  40e2ad:	add    eax,0x88984791
  40e2b2:	std    
  40e2b3:	jnp    0x40e2a2
  40e2b5:	mov    BYTE PTR fs:[ecx+0x1dd34d3f],ch
  40e2bc:	std    
  40e2bd:	clc    
  40e2be:	mov    eax,ds:0xb162630c
  40e2c3:	jns    0x40e2cd
  40e2c5:	scas   eax,DWORD PTR es:[edi]
  40e2c6:	loopne 0x40e2a2
  40e2c8:	mov    eax,gs:0x13133c06
  40e2ce:	cmp    DWORD PTR [ebx+edi*4],esp
  40e2d1:	dec    esi
  40e2d2:	adc    BYTE PTR [ebx],bl
  40e2d4:	les    esi,FWORD PTR [eax+ecx*2+0x11ac13e]
  40e2db:	ss stos DWORD PTR es:[edi],eax
  40e2dd:	pop    sp
  40e2df:	push   ds
  40e2e0:	sbb    ecx,DWORD PTR es:[edi]
  40e2e3:	out    dx,al
  40e2e4:	jb     0x40e2cf
  40e2e6:	retf   0x25cd
  40e2e9:	data16 mov ah,0x4
  40e2ec:	pop    ss
  40e2ed:	in     al,dx
  40e2ee:	or     al,0xaa
  40e2f0:	aas    
  40e2f1:	mov    dl,0x4d
  40e2f3:	lea    eax,[edx]
  40e2f5:	mov    al,0xca
  40e2f7:	out    0x67,eax
  40e2f9:	adc    cl,BYTE PTR [edx]
  40e2fb:	repnz and DWORD PTR [edi+edi*1-0x60],ebp
  40e300:	jl     0x40e380
  40e302:	(bad)  [esp+ecx*8-0x28]
  40e306:	sub    BYTE PTR [ecx+0x15],0x45
  40e30a:	pop    edx
  40e30b:	mov    dl,0xbc
  40e30d:	dec    ecx
  40e30e:	push   ebx
  40e30f:	clc    
  40e310:	in     eax,0xda
  40e312:	add    eax,0xeac5f5e5
  40e317:	pop    edx
  40e318:	(bad)  
  40e319:	imul   edx,DWORD PTR [eax],0xfffffffe
  40e31c:	cs call 0x3f01b9a9
  40e322:	and    eax,0xad3ba1a2
  40e327:	clc    
  40e328:	lds    ecx,FWORD PTR [eax-0x5e1d41f7]
  40e32e:	xor    esp,DWORD PTR [eax-0x3]
  40e331:	push   esi
  40e332:	aam    0xb1
  40e334:	xchg   edi,eax
  40e335:	xor    ah,BYTE PTR [esi]
  40e337:	xchg   DWORD PTR [ecx-0x29ce8ac8],esi
  40e33d:	repnz sbb al,0x8b
  40e340:	push   esi
  40e341:	adc    eax,0x39d4cab5
  40e346:	bound  esi,QWORD PTR [ebp-0x76]
  40e349:	out    0x25,al
  40e34b:	pop    edi
  40e34c:	(bad)  
  40e34d:	in     eax,0x24
  40e34f:	inc    eax
  40e350:	xchg   ecx,eax
  40e351:	popa   
  40e352:	jp     0x40e358
  40e354:	or     al,0x24
  40e356:	inc    esp
  40e357:	je     0x40e335
  40e359:	int3   
  40e35a:	push   ds
  40e35b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e35c:	xchg   edi,eax
  40e35d:	jb     0x40e3b4
  40e35f:	mov    ecx,0xe0881e48
  40e364:	test   eax,0x72cb5e3d
  40e369:	(bad)  
  40e36a:	in     al,dx
  40e36b:	je     0x40e3b7
  40e36d:	stc    
  40e36e:	jmp    0xeb1847a1
  40e373:	fisubr WORD PTR [ebx-0x3fc9e331]
  40e379:	mov    ah,0x34
  40e37b:	jmp    0x40e3a2
  40e37d:	clc    
  40e37e:	jecxz  0x40e322
  40e380:	imul   esi,DWORD PTR [eax-0x346af28a],0x4
  40e387:	dec    ebp
  40e388:	out    dx,al
  40e389:	xchg   edx,eax
  40e38a:	xor    DWORD PTR [edx-0x47],ebx
  40e38d:	jne    0x40e397
  40e38f:	arpl   WORD PTR [esi-0x5b],cx
  40e392:	and    al,0xcb
  40e394:	lea    esi,[edi-0x2fcf6cec]
  40e39a:	ror    bl,cl
  40e39c:	mov    al,ds:0xecc4db41
  40e3a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3a2:	aad    0x1e
  40e3a4:	sub    al,0x88
  40e3a6:	in     eax,0xa0
  40e3a8:	clc    
  40e3a9:	ret    0x1cf7
  40e3ac:	imul   ebx,DWORD PTR [eax+0x305218bc],0xffffff9e
  40e3b3:	mov    es,WORD PTR [ecx]
  40e3b5:	jno    0x40e3b7
  40e3b7:	push   cs
  40e3b8:	add    esp,ebx
  40e3ba:	lahf   
  40e3bb:	lods   eax,DWORD PTR ds:[esi]
  40e3bc:	pop    eax
  40e3bd:	xchg   esp,eax
  40e3be:	push   ss
  40e3bf:	pusha  
  40e3c0:	and    BYTE PTR [ebx],bh
  40e3c2:	sbb    BYTE PTR [edi-0x55],ch
  40e3c5:	fistp  WORD PTR [ecx]
  40e3c7:	scas   al,BYTE PTR es:[edi]
  40e3c8:	js     0x40e406
  40e3ca:	int3   
  40e3cb:	push   ecx
  40e3cc:	push   0x7d
  40e3ce:	or     dl,BYTE PTR [esi-0x64d4c460]
  40e3d4:	mov    BYTE PTR [ebx-0x58],dl
  40e3d7:	ja     0x40e363
  40e3d9:	inc    ebp
  40e3da:	mov    DWORD PTR [edx-0x4f],edx
  40e3dd:	ja     0x40e39c
  40e3df:	stc    
  40e3e0:	xchg   esp,eax
  40e3e1:	mov    edi,0xfd25397a
  40e3e6:	rdtsc  
  40e3e8:	add    eax,0xdcbd0d8d
  40e3ed:	inc    esi
  40e3ee:	outs   dx,BYTE PTR ds:[esi]
  40e3ef:	(bad)  
  40e3f0:	cmp    BYTE PTR [edi+eiz*4+0x65],ch
  40e3f4:	arpl   WORD PTR [edx],bx
  40e3f6:	push   ebp
  40e3f7:	daa    
  40e3f8:	mov    al,0xad
  40e3fa:	cmp    al,BYTE PTR [ebx]
  40e3fc:	shr    BYTE PTR [ecx-0x29],1
  40e3ff:	jmp    0x40e456
  40e401:	push   eax
  40e402:	div    dl
  40e404:	xchg   ecx,eax
  40e405:	cmp    BYTE PTR [ebp+0x6],dh
  40e408:	jmp    0xa2f2c5e6
  40e40d:	mov    al,0x82
  40e40f:	ror    BYTE PTR [ecx+0x6afade60],0xda
  40e416:	(bad)  
  40e417:	mov    edx,0xeb8650d2
  40e41c:	cmp    dh,dh
  40e41e:	loopne 0x40e482
  40e420:	pop    edx
  40e421:	cld    
  40e422:	xor    BYTE PTR [eax-0x21bc7af8],0x36
  40e429:	jg     0x40e48c
  40e42b:	shl    DWORD PTR [esi+ecx*2-0x754201c9],1
  40e432:	inc    ebx
  40e433:	test   BYTE PTR [ebx],al
  40e435:	ret    
  40e436:	push   0x54
  40e438:	mov    BYTE PTR [esi-0x1de76647],dh
  40e43e:	xchg   DWORD PTR [edx+esi*2-0x6cd81b1d],ecx
  40e445:	cli    
  40e446:	and    bl,cl
  40e448:	stos   BYTE PTR es:[edi],al
  40e449:	jns    0x40e3f6
  40e44b:	lahf   
  40e44c:	mov    ecx,0x68f92776
  40e451:	push   ss
  40e452:	pop    ebx
  40e453:	add    dl,BYTE PTR [edi-0xe115e05]
  40e459:	mov    ebx,DWORD PTR [esi]
  40e45b:	jo     0x40e47f
  40e45d:	cs cmp edi,0x396e8f3d
  40e464:	das    
  40e465:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e466:	pop    ds
  40e467:	iret   
  40e468:	xor    ebp,eax
  40e46a:	xchg   ebx,eax
  40e46b:	dec    edx
  40e46c:	and    ah,ch
  40e46e:	gs inc esp
  40e470:	mov    bl,0xe6
  40e472:	int3   
  40e473:	daa    
  40e474:	hlt    
  40e475:	pop    ebp
  40e476:	iret   
  40e477:	mov    ds:0xdd15c836,al
  40e47c:	add    edi,DWORD PTR [esi+esi*2+0x3c32b372]
  40e483:	mov    ecx,0x9b31bb74
  40e488:	imul   ecx,eax,0x8
  40e48b:	mov    esi,ecx
  40e48d:	jae    0x40e4e9
  40e48f:	aam    0x2b
  40e491:	imul   esp,DWORD PTR [eax],0x6c96b85e
  40e497:	push   esp
  40e498:	retf   
  40e499:	sahf   
  40e49a:	clc    
  40e49b:	push   0xf8da9288
  40e4a0:	ss add si,dx
  40e4a4:	outs   dx,BYTE PTR ds:[esi]
  40e4a5:	sub    al,0x9
  40e4a7:	sahf   
  40e4a8:	fcom   QWORD PTR ds:0xcd72bc05
  40e4ae:	pop    esi
  40e4af:	push   ecx
  40e4b0:	iret   
  40e4b1:	repz cmp ch,BYTE PTR [ebx-0x51]
  40e4b5:	nop
  40e4b6:	ds pop es
  40e4b8:	xchg   ebp,eax
  40e4b9:	ja     0x40e46f
  40e4bb:	sbb    al,0xfc
  40e4bd:	and    al,0xa2
  40e4bf:	test   DWORD PTR [ecx+0x75],edx
  40e4c2:	jno    0x40e4df
  40e4c4:	jl     0x40e4fb
  40e4c6:	loop   0x40e505
  40e4c8:	xor    edx,esi
  40e4ca:	xchg   BYTE PTR [ebp+eax*4-0x2b],bl
  40e4ce:	or     esp,esi
  40e4d0:	mov    eax,ds:0xd09f7b4a
  40e4d5:	arpl   WORD PTR [ebp-0x2a89ea1f],si
  40e4db:	leave  
  40e4dc:	out    0x8b,al
  40e4de:	shl    DWORD PTR fs:[bx+0x3],0xd8
  40e4e4:	stos   DWORD PTR es:[edi],eax
  40e4e5:	xor    ch,0xd2
  40e4e8:	sub    BYTE PTR [ebp+ebx*8-0x2b016ee3],bh
  40e4ef:	imul   ecx,eax,0x2cbd3a76
  40e4f5:	sbb    al,BYTE PTR [edx-0x464a2d7]
  40e4fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4fc:	push   0x4c
  40e4fe:	push   cs
  40e4ff:	clc    
  40e500:	push   edx
  40e501:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e502:	jle    0x40e567
  40e504:	test   al,0xee
  40e506:	enter  0xdc87,0x9f
  40e50a:	cmp    BYTE PTR [ebx+esi*4],bl
  40e50d:	fmul   DWORD PTR [ecx]
  40e50f:	(bad)  
  40e510:	sub    eax,0xf8b1686b
  40e515:	inc    edx
  40e516:	pusha  
  40e517:	repz ss mov bh,0x19
  40e51b:	sbb    eax,0xb1cf7b16
  40e520:	mov    WORD PTR [ebp-0x52ebbbbe],?
  40e526:	push   DWORD PTR [eax+0x71]
  40e529:	mov    BYTE PTR [ecx-0x6a],ch
  40e52c:	nop
  40e52d:	xchg   edx,eax
  40e52e:	xchg   ecx,eax
  40e52f:	jns    0x40e55b
  40e531:	mov    esp,0x6b016aa2
  40e536:	sbb    DWORD PTR [edi-0x41e52d75],ecx
  40e53c:	xor    eax,0x29b65216
  40e541:	pop    es
  40e542:	add    bh,BYTE PTR [ebp-0x2c]
  40e545:	sahf   
  40e546:	(bad)  
  40e547:	xor    DWORD PTR [eax+0x6],edx
  40e54a:	cdq    
  40e54b:	popf   
  40e54c:	outs   dx,DWORD PTR ds:[esi]
  40e54d:	inc    ecx
  40e54e:	inc    edx
  40e54f:	je     0x40e545
  40e551:	mov    esi,0x1f6367f0
  40e556:	pop    ebp
  40e557:	addr16 mov eax,0x1f8a5583
  40e55d:	popa   
  40e55e:	lods   eax,DWORD PTR ds:[esi]
  40e55f:	xor    DWORD PTR [edx],0x72
  40e562:	jmp    0x40e57f
  40e564:	mov    ah,0x35
  40e566:	sbb    BYTE PTR [ecx-0x58f9181c],bh
  40e56c:	sbb    esp,ecx
  40e56e:	mov    edi,0xebb92994
  40e573:	cmp    al,0x88
  40e575:	mov    edx,0xe98c1ba7
  40e57a:	stos   DWORD PTR es:[edi],eax
  40e57b:	adc    al,0x53
  40e57d:	ss and bh,BYTE PTR gs:[ebx+0x48]
  40e582:	xor    eax,0x4bae1fd4
  40e587:	shl    BYTE PTR [edi-0x4ce15665],0x39
  40e58e:	jl     0x40e5e5
  40e590:	fisubr WORD PTR [ecx-0x4bc007dc]
  40e596:	dec    ecx
  40e597:	xchg   esp,eax
  40e598:	bnd jnp 0x40e5bd
  40e59b:	pop    ss
  40e59c:	dec    eax
  40e59d:	lods   al,BYTE PTR ds:[esi]
  40e59e:	jne    0x40e5ad
  40e5a0:	ins    BYTE PTR es:[edi],dx
  40e5a1:	xchg   ebp,eax
  40e5a2:	cmp    dl,bh
  40e5a4:	push   0xffffffe9
  40e5a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5a7:	mov    ch,0x3b
  40e5a9:	cmp    dl,bh
  40e5ab:	jmp    0x905fa162
  40e5b0:	cld    
  40e5b1:	sbb    al,0x44
  40e5b3:	sub    al,BYTE PTR [eax+0x57]
  40e5b6:	mov    ebp,0x3b1e2546
  40e5bb:	jnp    0x40e5e5
  40e5bd:	pop    edx
  40e5be:	xor    BYTE PTR [esi+0x3f],ch
  40e5c1:	jp     0x40e629
  40e5c3:	jmp    0x6f03fe2e
  40e5c8:	repz out dx,al
  40e5ca:	and    dl,ch
  40e5cc:	xchg   edi,eax
  40e5cd:	loopne 0x40e5d2
  40e5cf:	fldenv [esi-0x1fd921a3]
  40e5d5:	stos   DWORD PTR es:[edi],eax
  40e5d6:	fdiv   st(5),st
  40e5d8:	xchg   DWORD PTR [ecx],ebx
  40e5da:	add    edx,DWORD PTR [ecx+0x5446b41d]
  40e5e0:	push   edx
  40e5e1:	xor    ch,ah
  40e5e3:	cli    
  40e5e4:	cmp    al,0xfe
  40e5e6:	sti    
  40e5e7:	int    0xf4
  40e5e9:	(bad)  
  40e5ea:	push   ss
  40e5eb:	push   0xb6cb67ff
  40e5f0:	out    dx,eax
  40e5f1:	icebp  
  40e5f2:	pop    eax
  40e5f3:	xor    al,0xdb
  40e5f5:	stc    
  40e5f6:	mov    ch,0xc
  40e5f8:	fisub  WORD PTR [ebx-0x25]
  40e5fb:	adc    eax,0x78af97c7
  40e600:	inc    edi
  40e601:	or     ah,BYTE PTR [ecx-0x1e474002]
  40e607:	jnp    0x40e636
  40e609:	mov    esi,0xcc44dfa5
  40e60e:	sbb    al,0xc6
  40e610:	dec    ecx
  40e611:	or     eax,0xe60842d3
  40e616:	dec    edi
  40e617:	fdiv   st,st(1)
  40e619:	orps   xmm1,XMMWORD PTR [ecx+0x675df73]
  40e620:	push   esp
  40e621:	mov    BYTE PTR [edx],dh
  40e623:	dec    ecx
  40e624:	outs   dx,DWORD PTR ds:[esi]
  40e625:	retf   
  40e626:	inc    eax
  40e627:	mov    ebx,0x471b557
  40e62c:	cmp    BYTE PTR es:[ecx+0x79e4437a],0xd7
  40e634:	enter  0x5a72,0x89
  40e638:	fild   QWORD PTR [edx+ebx*2]
  40e63b:	mov    ?,WORD PTR [ecx+0x6e54e5a6]
  40e641:	int3   
  40e642:	add    BYTE PTR [ebp-0x68647d5f],ah
  40e648:	lahf   
  40e649:	mov    ebp,0x360fbdb4
  40e64e:	rdpmc  
  40e650:	jb     0x40e67d
  40e652:	ins    BYTE PTR es:[edi],dx
  40e653:	lahf   
  40e654:	neg    DWORD PTR [edi-0x78]
  40e657:	push   ecx
  40e658:	xor    ah,dh
  40e65a:	xchg   esp,eax
  40e65b:	and    BYTE PTR [eax-0x36],al
  40e65e:	clc    
  40e65f:	dec    ebx
  40e660:	ror    ah,1
  40e662:	sbb    BYTE PTR ds:0x15abb0fd,ch
  40e668:	imul   ebp,DWORD PTR [ebx+0x34],0xffffff8a
  40e66c:	dec    ecx
  40e66d:	mov    DWORD PTR [edx+0x46c7d37b],ecx
  40e673:	std    
  40e674:	push   eax
  40e675:	(bad)  
  40e676:	jge    0x40e64f
  40e678:	sub    ecx,esi
  40e67a:	push   edx
  40e67b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e67c:	adc    eax,0xc3beba73
  40e681:	aas    
  40e682:	jno    0x40e68a
  40e684:	push   eax
  40e685:	pop    es
  40e686:	pop    ss
  40e687:	xor    esi,DWORD PTR [edx]
  40e689:	ins    BYTE PTR es:[edi],dx
  40e68a:	xlat   BYTE PTR ds:[ebx]
  40e68b:	jmp    0x1e9f:0x17648e57
  40e692:	add    al,BYTE PTR [ebp+0x4f]
  40e695:	sub    DWORD PTR [ebx+ecx*4+0x1c3c256d],edx
  40e69c:	dec    ecx
  40e69d:	fwait
  40e69e:	cwde   
  40e69f:	sub    ch,BYTE PTR [eax]
  40e6a1:	jne    0x40e68e
  40e6a3:	mov    al,ds:0x41ee721f
  40e6a8:	cmc    
  40e6a9:	inc    esp
  40e6aa:	imul   BYTE PTR [ebp+0x1a]
  40e6ad:	ficomp WORD PTR [eax+eax*4]
  40e6b0:	(bad)  [ecx+0x6e]
  40e6b3:	push   ss
  40e6b4:	jge    0x40e63f
  40e6b6:	jg     0x40e69d
  40e6b8:	stos   BYTE PTR es:[edi],al
  40e6b9:	xchg   esi,eax
  40e6ba:	inc    edx
  40e6bb:	dec    edi
  40e6bc:	ss jo  0x40e6ee
  40e6bf:	and    BYTE PTR [ebx-0x12],al
  40e6c2:	sbb    eax,ebx
  40e6c4:	cwde   
  40e6c5:	lock cs iret 
  40e6c8:	jne    0x40e747
  40e6ca:	ret    0x14a6
  40e6cd:	repz pushf 
  40e6cf:	icebp  
  40e6d0:	add    ebx,DWORD PTR [esi+0x26]
  40e6d3:	sub    dh,BYTE PTR fs:[edi]
  40e6d6:	popa   
  40e6d7:	cdq    
  40e6d8:	dec    ebx
  40e6d9:	pop    eax
  40e6da:	and    al,0x43
  40e6dc:	xchg   esi,eax
  40e6dd:	rol    DWORD PTR [ecx+0x7bb86d3c],0x65
  40e6e4:	pushf  
  40e6e5:	or     DWORD PTR [ebx],ecx
  40e6e7:	or     DWORD PTR [edi+0x2b841713],edi
  40e6ed:	lock bound ecx,QWORD PTR [ecx-0x1702fd5a]
  40e6f4:	inc    ebp
  40e6f5:	fistp  WORD PTR [ebx+0x51]
  40e6f8:	push   esp
  40e6f9:	add    ebx,DWORD PTR [ecx+ebx*1-0x3e4385cb]
  40e700:	and    eax,0xf25ffbf0
  40e705:	xchg   esi,eax
  40e706:	loopne 0x40e72f
  40e708:	mov    al,0x15
  40e70a:	pop    ss
  40e70b:	retf   
  40e70c:	push   0xec404164
  40e711:	sbb    esi,DWORD PTR [ebp-0x6b9cc568]
  40e717:	cmp    edi,DWORD PTR [ecx]
  40e719:	lock mov eax,0x18348f5a
  40e71f:	mov    ds:0x5ec7ed4b,eax
  40e724:	int3   
  40e725:	push   ds
  40e726:	icebp  
  40e727:	and    DWORD PTR [eax-0xeb68fdd],esp
  40e72d:	test   BYTE PTR [esi+0x3f],dh
  40e730:	(bad)  
  40e731:	out    0x1,eax
  40e733:	ret    0x2af6
  40e736:	xchg   ebp,eax
  40e737:	add    BYTE PTR [ebp+0x7d665cd3],ah
  40e73d:	and    al,0xf5
  40e73f:	sub    eax,0xb278f129
  40e744:	stc    
  40e745:	pop    ebp
  40e746:	nop
  40e747:	mov    eax,0xd3c83bf8
  40e74c:	push   esi
  40e74d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e74e:	mov    ds:0x4fd79636,al
  40e753:	out    0x2e,al
  40e755:	es mov ecx,0x9f26dc7e
  40e75b:	call   0x8e87:0x898e1f9e
  40e762:	popf   
  40e763:	and    ch,bh
  40e765:	in     al,0xbb
  40e767:	jmp    0xb8f23d77
  40e76c:	dec    BYTE PTR [esi-0x39bae27c]
  40e772:	test   bh,bl
  40e774:	mov    ebp,0x8d1e47d4
  40e779:	fdivr  DWORD PTR [edx-0xe3d66f]
  40e77f:	dec    edi
  40e780:	pop    eax
  40e781:	out    0xad,al
  40e783:	cmc    
  40e784:	jae    0x40e758
  40e786:	dec    ebp
  40e787:	jno    0x40e76b
  40e789:	lock test al,0x4b
  40e78c:	adc    dl,cl
  40e78e:	xchg   esp,eax
  40e78f:	push   esi
  40e790:	mov    dh,0xa2
  40e792:	sbb    esi,esi
  40e794:	mov    bh,0x94
  40e796:	and    DWORD PTR [edx+0x79],ebp
  40e799:	pop    esi
  40e79a:	in     eax,dx
  40e79b:	push   ds
  40e79c:	adc    al,BYTE PTR [eax-0x3d]
  40e79f:	je     0x40e748
  40e7a1:	mov    bh,0x45
  40e7a3:	sub    BYTE PTR es:[ecx-0x39],bl
  40e7a7:	mov    ebp,0x59bd9e2e
  40e7ac:	mov    eax,ds:0x5ad109a
  40e7b1:	mov    cl,0x87
  40e7b3:	fisubr WORD PTR [edi]
  40e7b5:	test   DWORD PTR [ebx-0x64],ecx
  40e7b8:	fld    QWORD PTR [esi-0x76]
  40e7bb:	(bad)  
  40e7bc:	mov    ecx,DWORD PTR [eax]
  40e7be:	mov    ds:0xd330ca2b,eax
  40e7c3:	test   DWORD PTR [esi+edi*4+0x40],eax
  40e7c7:	gs adc al,0xd1
  40e7ca:	jo     0x40e7d2
  40e7cc:	test   bl,ah
  40e7ce:	jmp    0xde26:0xe6531ea7
  40e7d5:	or     bl,BYTE PTR [edx+0x5d88e51]
  40e7db:	fcmovnbe st,st(0)
  40e7dd:	and    ecx,DWORD PTR [esi+0x68]
  40e7e0:	retf   0x2693
  40e7e3:	or     DWORD PTR [ebx+0xbbe780f],0x5aad96cb
  40e7ed:	mov    esi,0xc253be53
  40e7f2:	pusha  
  40e7f3:	iret   
  40e7f4:	sub    eax,0xca4978d9
  40e7f9:	mov    ah,0xd9
  40e7fb:	xchg   ecx,eax
  40e7fc:	add    DWORD PTR [edi+0x37],ebp
  40e7ff:	aam    0xdd
  40e801:	adc    eax,0xbce9e258
  40e806:	aas    
  40e807:	mov    dl,0x43
  40e809:	mov    ch,0xa6
  40e80b:	stc    
  40e80c:	out    dx,eax
  40e80d:	mov    edx,0xd901aeac
  40e812:	push   ebp
  40e813:	(bad)  
  40e814:	imul   eax,DWORD PTR [eax],0x13
  40e817:	rcl    DWORD PTR [ebp+0x5],0x40
  40e81b:	nop
  40e81c:	cld    
  40e81d:	push   ecx
  40e81e:	xchg   edi,eax
  40e81f:	cmp    esp,DWORD PTR [edi-0x1c46c9c]
  40e825:	pop    edx
  40e826:	inc    ebx
  40e827:	cmp    ecx,eax
  40e829:	call   0xe8a01996
  40e82e:	adc    al,0x8a
  40e830:	mov    edi,0xf0ab0729
  40e835:	ins    DWORD PTR es:[edi],dx
  40e836:	test   BYTE PTR [ecx-0x7d],dh
  40e839:	or     BYTE PTR [edx+0x432654ec],bl
  40e83f:	retf   
  40e840:	retf   0x4f20
  40e843:	cmp    ch,ch
  40e845:	pusha  
  40e846:	addr16 dec edx
  40e848:	mov    ebx,0xb5db301
  40e84d:	pop    ecx
  40e84e:	jno    0x40e852
  40e850:	js     0x40e870
  40e852:	pop    ebx
  40e853:	jmp    0x509aea23
  40e858:	lock loop 0x40e8d5
  40e85b:	call   0x33d5:0xa0cbd13d
  40e862:	push   edi
  40e863:	leave  
  40e864:	mov    al,BYTE PTR [esi]
  40e866:	adc    eax,0xddcc4f43
  40e86b:	cmp    eax,0x6e19d5b
  40e870:	and    al,0xd5
  40e872:	push   ds
  40e873:	retf   
  40e874:	mov    esi,DWORD PTR [edx]
  40e876:	es push cs
  40e878:	fisttp QWORD PTR [edx-0xf]
  40e87b:	icebp  
  40e87c:	inc    edi
  40e87d:	test   bl,bh
  40e87f:	inc    ebp
  40e880:	repnz sub ch,BYTE PTR ds:[edi+ecx*2]
  40e885:	mov    eax,0x49a7ad29
  40e88a:	out    0xbe,eax
  40e88c:	mov    ch,0x80
  40e88e:	pusha  
  40e88f:	mov    esp,0xe2fef10f
  40e894:	jmp    0x48ab:0x32cd2bc
  40e89b:	sub    eax,0xf1852891
  40e8a0:	call   0x5cb2:0x35d97ece
  40e8a7:	or     eax,0x16eed3d2
  40e8ac:	xchg   edx,eax
  40e8ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8ae:	xor    ebx,DWORD PTR [ecx]
  40e8b0:	enter  0x8ec1,0x84
  40e8b4:	jp     0x40e8db
  40e8b6:	cmp    ecx,DWORD PTR [edx+0x51]
  40e8b9:	mov    ah,0xfc
  40e8bb:	xchg   edx,eax
  40e8bc:	or     al,0x73
  40e8be:	lods   al,BYTE PTR ds:[esi]
  40e8bf:	sbb    ch,0x31
  40e8c2:	mov    WORD PTR [eax],?
  40e8c4:	mov    eax,ds:0x9351a8c9
  40e8c9:	xchg   ebp,eax
  40e8ca:	imul   eax,DWORD PTR [edi-0x27],0xffffffd5
  40e8ce:	inc    edx
  40e8cf:	aad    0x4d
  40e8d1:	ret    0x3a08
  40e8d4:	mov    edi,0x8a758fbe
  40e8d9:	leave  
  40e8da:	into   
  40e8db:	mov    al,ds:0x336857b2
  40e8e0:	pusha  
  40e8e1:	xchg   DWORD PTR [eax],ebp
  40e8e3:	mov    eax,0xfddb56ef
  40e8e8:	(bad)  
  40e8e9:	jle    0x40e8b2
  40e8eb:	sbb    esi,DWORD PTR [edi-0x71]
  40e8ee:	or     al,0x6f
  40e8f0:	mov    eax,ds:0x9c9c25b5
  40e8f5:	sub    DWORD PTR [edi+ecx*1+0x6d377117],esp
  40e8fc:	jne    0x40e95a
  40e8fe:	push   cs
  40e8ff:	xchg   edi,eax
  40e900:	mov    al,0x4d
  40e902:	in     al,0xc1
  40e904:	push   es
  40e905:	aas    
  40e906:	lods   eax,DWORD PTR ds:[esi]
  40e907:	sar    BYTE PTR [ebx-0x50],1
  40e90a:	out    0xcc,eax
  40e90c:	xchg   esp,eax
  40e90d:	cli    
  40e90e:	test   BYTE PTR [edi-0x46],0x9a
  40e912:	test   eax,0x3b1ab016
  40e917:	cdq    
  40e918:	sub    eax,0x9c893d17
  40e91d:	add    ebx,eax
  40e91f:	mov    dh,0x15
  40e921:	add    DWORD PTR [ecx],ecx
  40e923:	adc    eax,0xe175a11c
  40e928:	cli    
  40e929:	stc    
  40e92a:	sbb    BYTE PTR [edi+0x4bbf5e1b],ch
  40e930:	nop
  40e931:	adc    DWORD PTR [edx+0x560c4a0],esp
  40e937:	adc    eax,0xf7e47bec
  40e93c:	fisubr DWORD PTR ds:0xea05a38c
  40e942:	mov    edx,0xc3ccfdf2
  40e947:	cld    
  40e948:	jo     0x40e8f0
  40e94a:	outs   dx,DWORD PTR ds:[esi]
  40e94b:	fsub   QWORD PTR [ecx]
  40e94d:	fnstcw WORD PTR [eax+0x5]
  40e950:	sub    ebp,DWORD PTR [ecx]
  40e952:	div    BYTE PTR [eax+0x74]
  40e955:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e956:	jb     0x40e97b
  40e958:	sub    al,0xb6
  40e95a:	popf   
  40e95b:	jl     0x40e94b
  40e95d:	mov    ebx,0x105a8a
  40e962:	ficom  DWORD PTR [edi]
  40e964:	push   edx
  40e965:	dec    ecx
  40e966:	pop    esp
  40e967:	inc    eax
  40e968:	xchg   edx,eax
  40e969:	xor    BYTE PTR [esi-0x2c],bh
  40e96c:	fist   WORD PTR [ecx-0x25e93501]
  40e972:	cmp    DWORD PTR [eax],eax
  40e974:	aas    
  40e975:	or     DWORD PTR [ebp+0x2f],0xf9602770
  40e97c:	or     eax,edx
  40e97e:	ret    
  40e97f:	ficomp DWORD PTR [edx+0x51]
  40e982:	icebp  
  40e983:	push   ds
  40e984:	(bad)  
  40e985:	stc    
  40e986:	enter  0x3b54,0xc9
  40e98a:	pop    esp
  40e98b:	add    al,0xcf
  40e98d:	xchg   esp,eax
  40e98e:	test   DWORD PTR ds:0xa2ffc585,eax
  40e994:	adc    esi,ebx
  40e996:	and    eax,DWORD PTR [edx+ebp*4+0x6]
  40e99a:	jb     0x40e9bb
  40e99c:	jge    0x40e97d
  40e99e:	sbb    bh,ah
  40e9a0:	sbb    BYTE PTR [edx],ch
  40e9a2:	leave  
  40e9a3:	aam    0xdd
  40e9a5:	add    al,0x3c
  40e9a7:	in     al,dx
  40e9a8:	(bad)  
  40e9a9:	mov    ebx,0xae5ce1aa
  40e9ae:	dec    ebp
  40e9af:	div    BYTE PTR [ecx+0x39439e64]
  40e9b5:	cs jmp 0x8f50:0x5d28cd1e
  40e9bd:	inc    ebx
  40e9be:	mov    ch,0x64
  40e9c0:	bound  esp,QWORD PTR [edx]
  40e9c2:	pushf  
  40e9c3:	das    
  40e9c4:	(bad)  [ebx+0x7881e3b7]
  40e9ca:	jmp    0x8cc6:0x946e6e6
  40e9d1:	dec    edx
  40e9d2:	test   DWORD PTR [esi-0x7b81a41f],ecx
  40e9d8:	cli    
  40e9d9:	or     al,0x96
  40e9db:	lahf   
  40e9dc:	inc    ebx
  40e9dd:	(bad)
  40e9e1:	sub    eax,0x5fa0927
  40e9e6:	aad    0x8
  40e9e8:	inc    eax
  40e9e9:	adc    al,0xfa
  40e9eb:	pop    edx
  40e9ec:	mov    ecx,0x18f056c
  40e9f1:	std    
  40e9f2:	mov    eax,ss:0xc7b177aa
  40e9f8:	pop    ebx
  40e9f9:	mov    edi,cs
  40e9fb:	jmp    0xcad8:0xe9fbc4c2
  40ea02:	mov    ebx,0xa00ecfbd
  40ea07:	jno    0x40e9a2
  40ea09:	mov    ds:0x529f2ab1,eax
  40ea0e:	fst    QWORD PTR gs:[edx]
  40ea11:	stos   BYTE PTR es:[edi],al
  40ea12:	imul   ebx,edi,0xffffffb6
  40ea15:	mov    esi,DWORD PTR [edi-0x21]
  40ea18:	ret    
  40ea19:	fisubr WORD PTR [esi+0x55aee105]
  40ea1f:	ds lahf 
  40ea21:	dec    ecx
  40ea22:	dec    esi
  40ea23:	nop
  40ea24:	stc    
  40ea25:	push   esp
  40ea26:	(bad)  
  40ea27:	mov    esp,0x8f81ba6b
  40ea2c:	xchg   esi,eax
  40ea2d:	fnstcw WORD PTR [esp+ebp*1+0x33]
  40ea31:	xchg   edi,eax
  40ea32:	cdq    
  40ea33:	out    dx,al
  40ea34:	and    esp,DWORD PTR [eax]
  40ea36:	mov    bl,0xf3
  40ea38:	enter  0x615c,0xe9
  40ea3c:	mov    al,ds:0xdbf4ada7
  40ea41:	loopne 0x40ea28
  40ea43:	ja     0x40ea93
  40ea45:	lods   al,BYTE PTR ds:[esi]
  40ea46:	dec    esi
  40ea47:	cmp    BYTE PTR [ebx],0xa1
  40ea4a:	je     0x40ea7e
  40ea4c:	dec    ecx
  40ea4d:	out    0xab,eax
  40ea4f:	es jp  0x40e9d2
  40ea52:	mov    dl,0x56
  40ea54:	loop   0x40ea69
  40ea56:	js     0x40e9f4
  40ea58:	ja     0x40ea3b
  40ea5a:	stos   DWORD PTR es:[edi],eax
  40ea5b:	loope  0x40eaba
  40ea5d:	xchg   DWORD PTR [ebp-0x1f],esp
  40ea60:	jae    0x40ea3f
  40ea62:	test   al,0x6a
  40ea64:	out    dx,eax
  40ea65:	es add eax,esp
  40ea68:	pop    ds
  40ea69:	arpl   WORD PTR [edi-0x768d19e6],si
  40ea6f:	and    al,0xde
  40ea71:	sahf   
  40ea72:	push   eax
  40ea73:	cwde   
  40ea74:	xor    BYTE PTR [esi+0x59],dh
  40ea77:	into   
  40ea78:	cli    
  40ea79:	test   eax,0xba5369b8
  40ea7e:	push   ecx
  40ea7f:	pop    edi
  40ea80:	iret   
  40ea81:	pop    eax
  40ea82:	adc    al,0x96
  40ea84:	inc    esp
  40ea85:	arpl   WORD PTR [ecx*8+0x5a795e3b],di
  40ea8c:	ja     0x40eaaa
  40ea8e:	repz sbb BYTE PTR [esi-0x19],0xbc
  40ea93:	and    eax,0x1a8525f1
  40ea98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea99:	(bad)  
  40ea9a:	jmp    0x40eac4
  40ea9c:	clc    
  40ea9d:	sbb    al,0x33
  40ea9f:	rol    DWORD PTR [ebx+0x519d0ff4],0x5c
  40eaa6:	in     al,dx
  40eaa7:	adc    BYTE PTR [ebx],0xce
  40eaaa:	add    al,al
  40eaac:	jae    0x40eb08
  40eaae:	cdq    
  40eaaf:	xchg   DWORD PTR [esi],ebx
  40eab1:	cwde   
  40eab2:	push   ebx
  40eab3:	fisttp QWORD PTR [edx+0x79823dff]
  40eab9:	adc    BYTE PTR ds:0xc0992c08,cl
  40eabf:	fmul   DWORD PTR [edi+0x104977f7]
  40eac5:	retf   0x1336
  40eac8:	ins    DWORD PTR es:[edi],dx
  40eac9:	fldcw  WORD PTR [ebx-0x74026b5c]
  40eacf:	sub    dh,BYTE PTR [ecx]
  40ead1:	fcomp  DWORD PTR [edi-0x764ee121]
  40ead7:	inc    ebx
  40ead8:	pop    ecx
  40ead9:	xchg   DWORD PTR [edx-0x159c9fd4],esi
  40eadf:	xchg   DWORD PTR [edx+0x5bd414a8],edi
  40eae5:	imul   BYTE PTR [ebx+0x1c91e7a4]
  40eaeb:	mov    BYTE PTR [edx+0x18],cl
  40eaee:	cmc    
  40eaef:	fpatan 
  40eaf1:	pop    ebx
  40eaf2:	ins    BYTE PTR es:[edi],dx
  40eaf3:	outs   dx,BYTE PTR ds:[esi]
  40eaf4:	mov    dh,0xe
  40eaf6:	sbb    al,0x70
  40eaf8:	cmp    DWORD PTR [edi+0x4f],edi
  40eafb:	into   
  40eafc:	push   es
  40eafd:	sub    DWORD PTR [ebx+0x7e137d71],ebx
  40eb03:	fwait
  40eb04:	or     al,BYTE PTR [ebx]
  40eb06:	div    BYTE PTR [edx+0x30562b74]
  40eb0c:	xchg   DWORD PTR [esi+0x114f4398],edx
  40eb12:	and    eax,edx
  40eb14:	jb     0x40eb2b
  40eb16:	cmp    edx,DWORD PTR [ebx-0x6245e0f5]
  40eb1c:	dec    esp
  40eb1d:	mov    WORD PTR [ebx+edx*1+0x2f9f9221],gs
  40eb24:	sbb    bh,BYTE PTR [edx]
  40eb26:	push   eax
  40eb27:	in     al,dx
  40eb28:	out    0x12,al
  40eb2a:	xor    eax,0xa063b4c2
  40eb2f:	mov    ebp,?
  40eb31:	pop    ds
  40eb32:	push   ebx
  40eb33:	mov    ah,0xb6
  40eb35:	push   0x7e
  40eb37:	mov    esi,ds
  40eb39:	push   0x63
  40eb3b:	out    0x65,eax
  40eb3d:	out    0x63,al
  40eb3f:	popf   
  40eb40:	or     al,0x16
  40eb42:	mov    ds:0x66b3b162,al
  40eb47:	test   bl,al
  40eb49:	or     eax,0x754b838a
  40eb4e:	sbb    esi,DWORD PTR [edx+ebp*4]
  40eb51:	pop    ss
  40eb52:	pushf  
  40eb53:	push   eax
  40eb54:	sbb    DWORD PTR [ecx-0x52],edx
  40eb57:	aad    0xde
  40eb59:	and    ch,bh
  40eb5b:	stc    
  40eb5c:	adc    eax,DWORD PTR [esi-0x7c394dcb]
  40eb62:	ret    0x42b8
  40eb65:	add    eax,0x308c7111
  40eb6a:	ds pop ss
  40eb6c:	push   ecx
  40eb6d:	mov    bh,0x0
  40eb6f:	push   cs
  40eb70:	or     eax,0x788f6f40
  40eb75:	xchg   esp,eax
  40eb76:	fbstp  TBYTE PTR [esi+0x73e24f33]
  40eb7c:	mov    WORD PTR [edi],es
  40eb7e:	rcl    DWORD PTR [esp+eax*1+0x17],cl
  40eb82:	pop    ebx
  40eb83:	jnp    0x40ebc6
  40eb85:	or     eax,DWORD PTR [edi]
  40eb87:	dec    eax
  40eb88:	loop   0x40ebf0
  40eb8a:	and    bl,BYTE PTR [ebp+ecx*2-0x2fae6e92]
  40eb91:	or     DWORD PTR [ecx],0x5a
  40eb94:	or     edx,DWORD PTR [eax+0x3b]
  40eb97:	lods   al,BYTE PTR ds:[esi]
  40eb98:	cdq    
  40eb99:	pop    ds
  40eb9a:	lods   eax,DWORD PTR ds:[esi]
  40eb9b:	mov    cl,0x7
  40eb9d:	push   ds
  40eb9e:	arpl   WORD PTR [esi],di
  40eba0:	sub    eax,0x63ec812d
  40eba5:	mov    ds:0xfa953baf,eax
  40ebaa:	inc    edi
  40ebab:	sti    
  40ebac:	pop    edi
  40ebad:	in     eax,dx
  40ebae:	cmc    
  40ebaf:	jne    0x40ebe4
  40ebb1:	jle    0x40eb57
  40ebb3:	cmp    eax,eax
  40ebb5:	lds    edi,FWORD PTR [edx-0x17213e88]
  40ebbb:	ss cwde 
  40ebbd:	cld    
  40ebbe:	icebp  
  40ebbf:	shl    BYTE PTR [eax-0x2c9bfc07],0x16
  40ebc6:	int3   
  40ebc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebc8:	mov    cl,0xc7
  40ebca:	jo     0x40ebb4
  40ebcc:	outs   dx,DWORD PTR ds:[esi]
  40ebcd:	out    0x42,eax
  40ebcf:	jae    0x40ec04
  40ebd1:	inc    edi
  40ebd2:	sbb    dl,ch
  40ebd4:	out    0xde,al
  40ebd6:	mov    BYTE PTR [ecx+0x6],0xaa
  40ebda:	jnp    0x40ec1e
  40ebdc:	add    cl,BYTE PTR [ecx]
  40ebde:	repz cmp BYTE PTR [esi+ecx*1],al
  40ebe2:	stos   BYTE PTR es:[edi],al
  40ebe3:	(bad)  
  40ebe4:	dec    esp
  40ebe5:	or     BYTE PTR [eax],dh
  40ebe7:	or     BYTE PTR [edi],bh
  40ebe9:	retf   0xe777
  40ebec:	dec    esp
  40ebed:	pushf  
  40ebee:	sbb    BYTE PTR [ecx-0x4d2673ce],0xa0
  40ebf5:	stos   BYTE PTR es:[edi],al
  40ebf6:	inc    esi
  40ebf7:	mov    DWORD PTR [edx],esi
  40ebf9:	jnp    0x40ec15
  40ebfb:	icebp  
  40ebfc:	jo     0x40ec52
  40ebfe:	dec    edi
  40ebff:	dec    esp
  40ec00:	push   ss
  40ec01:	inc    esi
  40ec02:	xchg   edx,eax
  40ec03:	dec    ebp
  40ec04:	sub    eax,0xe22e10
  40ec09:	inc    esi
  40ec0a:	pop    edi
  40ec0b:	jns    0x40ec30
  40ec0d:	cmp    BYTE PTR [edx],0xee
  40ec10:	mov    esi,0x871f0443
  40ec15:	mov    ebx,0x592fba1b
  40ec1a:	add    BYTE PTR [esp+edx*2+0x47ec52a8],dh
  40ec21:	mov    ds:0x2e87ef16,al
  40ec26:	js     0x40ec34
  40ec28:	sbb    al,BYTE PTR [ebx]
  40ec2a:	inc    esp
  40ec2b:	jle    0x40ec1a
  40ec2d:	fcmovnbe st,st(1)
  40ec2f:	stos   BYTE PTR es:[edi],al
  40ec30:	ds or  al,0x99
  40ec33:	mov    esp,0x98441367
  40ec38:	push   0xffffffe1
  40ec3a:	pop    ds
  40ec3b:	push   ebx
  40ec3c:	jecxz  0x40ec39
  40ec3e:	out    dx,eax
  40ec3f:	nop
  40ec40:	jbe    0x40ebd4
  40ec42:	div    ebp
  40ec44:	stos   BYTE PTR es:[edi],al
  40ec45:	pop    esi
  40ec46:	cld    
  40ec47:	inc    edi
  40ec48:	ror    DWORD PTR [esi],cl
  40ec4a:	pop    es
  40ec4b:	xchg   esi,eax
  40ec4c:	mov    al,0xd3
  40ec4e:	aas    
  40ec4f:	and    ecx,DWORD PTR [eax+edx*8+0x5f]
  40ec53:	cmc    
  40ec54:	inc    ecx
  40ec55:	cwde   
  40ec56:	test   al,0x2c
  40ec58:	and    bl,bh
  40ec5a:	ins    DWORD PTR es:[edi],dx
  40ec5b:	mov    ch,0xcb
  40ec5d:	sub    eax,0x27c7cab2
  40ec62:	xor    eax,0xc599002
  40ec67:	(bad)  
  40ec68:	or     BYTE PTR [esi-0x41],cl
  40ec6b:	mov    bh,0xf
  40ec6d:	les    eax,FWORD PTR [eax+0x75418da7]
  40ec73:	dec    eax
  40ec74:	iret   
  40ec75:	aad    0xa
  40ec77:	dec    esi
  40ec78:	dec    edx
  40ec79:	sbb    al,dl
  40ec7b:	jp     0x40ecf2
  40ec7d:	mov    ah,0x4d
  40ec7f:	xor    al,0xd5
  40ec81:	inc    edi
  40ec82:	mov    al,fs:0x8b0940f5
  40ec88:	popf   
  40ec89:	fwait
  40ec8a:	retf   0xe6d4
  40ec8d:	in     al,0xfe
  40ec8f:	jmp    0x40eca4
  40ec91:	push   es
  40ec92:	out    dx,al
  40ec93:	mov    DWORD PTR [ebx+0x4c7c78d6],ebp
  40ec99:	cmc    
  40ec9a:	add    DWORD PTR [edi+0x5d76be7d],edi
  40eca0:	xor    eax,0x2ad4352b
  40eca5:	aas    
  40eca6:	int    0xa2
  40eca8:	out    0x3f,eax
  40ecaa:	pop    esp
  40ecab:	sub    eax,0x886b5f1e
  40ecb0:	loopne 0x40ec34
  40ecb2:	inc    edi
  40ecb3:	iret   
  40ecb4:	mov    ebx,0x5f9f47a4
  40ecb9:	lea    ecx,[edi+0x40]
  40ecbc:	call   0x346:0xdf9c68b2
  40ecc3:	shr    bl,1
  40ecc5:	pop    esi
  40ecc6:	rol    DWORD PTR [ebp+0x4150f739],0xac
  40eccd:	ret    0xb7bb
  40ecd0:	push   ds
  40ecd1:	xor    al,0xdd
  40ecd3:	cmc    
  40ecd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecd5:	dec    edi
  40ecd6:	dec    edi
  40ecd7:	nop
  40ecd8:	pop    ds
  40ecd9:	mov    ds:0xf75dd1e,eax
  40ecde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecdf:	mov    edi,0x8235d39a
  40ece4:	ds pusha 
  40ece6:	ins    DWORD PTR es:[edi],dx
  40ece7:	fisub  WORD PTR [ecx-0x3f]
  40ecea:	pop    edx
  40eceb:	mov    cl,0xbe
  40eced:	push   es
  40ecee:	xchg   ebp,eax
  40ecef:	jno    0x40ed25
  40ecf1:	mov    edi,?
  40ecf3:	cmp    BYTE PTR [esi],bh
  40ecf5:	cmp    eax,0xcea6dfbb
  40ecfa:	push   ebx
  40ecfb:	sub    DWORD PTR [esi+0x1b46dbf2],0x7b
  40ed02:	mov    ch,0xda
  40ed04:	cmp    al,0x97
  40ed06:	and    al,0xce
  40ed08:	gs inc ecx
  40ed0a:	xor    al,0x7e
  40ed0c:	sub    ebp,DWORD PTR [edi*4+0x65a37474]
  40ed13:	ficom  DWORD PTR [edx]
  40ed15:	pop    ebx
  40ed16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed17:	push   ds
  40ed18:	sahf   
  40ed19:	sub    DWORD PTR [edx-0x3ad2251c],0x9308124a
  40ed23:	mov    dh,0x29
  40ed25:	pop    ss
  40ed26:	in     al,0x42
  40ed28:	int    0x75
  40ed2a:	dec    ebx
  40ed2b:	(bad)  
  40ed2c:	retf   0x7328
  40ed2f:	int3   
  40ed30:	sub    al,BYTE PTR [esi-0x78]
  40ed33:	pop    eax
  40ed34:	test   BYTE PTR [esi+0x17],0xc8
  40ed38:	int3   
  40ed39:	or     eax,0x4bc5b0d0
  40ed3e:	xor    edx,DWORD PTR [ebp-0x3433cc7b]
  40ed44:	inc    edx
  40ed45:	dec    esi
  40ed46:	jge    0x40ed2f
  40ed48:	sbb    DWORD PTR [eax+0x26],eax
  40ed4b:	call   0xc875c9e9
  40ed50:	xchg   BYTE PTR [ecx],cl
  40ed52:	scas   al,BYTE PTR es:[edi]
  40ed53:	sub    ecx,ecx
  40ed55:	cmp    al,0x9c
  40ed57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed58:	jmp    0x67b7:0x86cbb1bf
  40ed5f:	adc    al,al
  40ed61:	dec    edx
  40ed62:	outs   dx,BYTE PTR ds:[esi]
  40ed63:	push   ebp
  40ed64:	lods   eax,DWORD PTR ds:[esi]
  40ed65:	(bad)  
  40ed66:	jo     0x40ed10
  40ed68:	js     0x40ed07
  40ed6a:	out    dx,al
  40ed6b:	xor    dl,BYTE PTR [eax]
  40ed6d:	adc    eax,0x7778257a
  40ed72:	cmp    esi,DWORD PTR [edx+0x8]
  40ed75:	or     ebx,DWORD PTR [edx+eax*1]
  40ed78:	mov    edi,DWORD PTR [edx-0x6e]
  40ed7b:	jbe    0x40edef
  40ed7d:	loope  0x40ed2f
  40ed7f:	push   esi
  40ed80:	cld    
  40ed81:	int3   
  40ed82:	inc    edi
  40ed83:	dec    edx
  40ed84:	mov    edi,0x4f9a5ad5
  40ed89:	dec    ecx
  40ed8a:	jbe    0x40ed51
  40ed8c:	xchg   ecx,eax
  40ed8d:	ror    ecx,cl
  40ed8f:	pop    eax
  40ed90:	sub    al,BYTE PTR [esi]
  40ed92:	fisub  DWORD PTR [ecx-0x2cf2af51]
  40ed98:	push   ecx
  40ed99:	push   edx
  40ed9a:	mov    ch,0xe9
  40ed9c:	mov    dl,0xde
  40ed9e:	push   eax
  40ed9f:	ror    DWORD PTR [ebx],0xb7
  40eda2:	cli    
  40eda3:	mov    ds:0xb19911de,al
  40eda8:	test   DWORD PTR [edi-0x17ed811b],0x77af63c
  40edb2:	aas    
  40edb3:	pusha  
  40edb4:	dec    ecx
  40edb5:	loope  0x40edc2
  40edb7:	add    DWORD PTR ds:0xb56dc2e2,0x11
  40edbe:	and    BYTE PTR [edi],ah
  40edc0:	rol    DWORD PTR [ecx-0x6b],1
  40edc3:	push   ds
  40edc4:	imul   ecx,edi,0xfffffff5
  40edc7:	(bad)  [ebx]
  40edc9:	ins    DWORD PTR es:[edi],dx
  40edca:	fs xchg ecx,eax
  40edcc:	neg    DWORD PTR [ebp-0x7049ec5c]
  40edd2:	fild   WORD PTR [edi-0xc]
  40edd5:	inc    eax
  40edd6:	xchg   edx,edi
  40edd8:	and    ecx,edi
  40edda:	dec    esp
  40eddb:	add    eax,0xb782be8a
  40ede0:	ja     0x40edde
  40ede2:	mov    eax,ds:0xd96f6cdd
  40ede7:	rol    DWORD PTR ds:0x9cc521e2,cl
  40eded:	nop
  40edee:	retf   
  40edef:	stos   BYTE PTR es:[edi],al
  40edf0:	int3   
  40edf1:	jge    0x40edb5
  40edf3:	jne    0x40ed8d
  40edf5:	mov    ah,dh
  40edf7:	sub    eax,0x7c3b7a47
  40edfc:	and    edx,ebx
  40edfe:	shl    BYTE PTR [ecx+0x18296b00],0x89
  40ee05:	mov    bl,0xfc
  40ee07:	lods   al,BYTE PTR ds:[esi]
  40ee08:	popf   
  40ee09:	test   dh,cl
  40ee0b:	ss jmp 0x2f0b3454
  40ee11:	dec    edx
  40ee12:	jge    0x40edf4
  40ee14:	(bad)  
  40ee15:	iret   
  40ee16:	repnz ins DWORD PTR es:[edi],dx
  40ee18:	push   cs
  40ee19:	mov    bh,BYTE PTR [eax]
  40ee1b:	cs sub al,0x41
  40ee1e:	fiadd  DWORD PTR [esi-0x49]
  40ee21:	pop    ecx
  40ee22:	adc    ah,bl
  40ee24:	xchg   dx,ax
  40ee26:	hlt    
  40ee27:	jns    0x40ee62
  40ee29:	arpl   WORD PTR [edi-0x24435eed],di
  40ee2f:	shl    BYTE PTR [ebp-0x21f545d5],0xaa
  40ee36:	cmc    
  40ee37:	sbb    dl,BYTE PTR [ebx-0x614d5fc5]
  40ee3d:	xor    al,0x55
  40ee3f:	dec    ecx
  40ee40:	xor    eax,0x46ae1e55
  40ee45:	sub    eax,0x5d5b2d0a
  40ee4a:	ret    0x8a67
  40ee4d:	xchg   edi,eax
  40ee4e:	pop    edx
  40ee4f:	cmp    eax,0xf83e4169
  40ee54:	xchg   edi,eax
  40ee55:	pop    esi
  40ee56:	bound  ebx,QWORD PTR ds:0x12d4545c
  40ee5c:	pop    esp
  40ee5d:	xchg   DWORD PTR [esi+0x7a297498],ebx
  40ee63:	ret    0x40bf
  40ee66:	inc    ebx
  40ee67:	push   ecx
  40ee68:	out    0x15,al
  40ee6a:	scas   al,BYTE PTR es:[edi]
  40ee6b:	mov    dl,0x46
  40ee6d:	xchg   edx,eax
  40ee6e:	fcomp  DWORD PTR [ebx-0x18a8cd67]
  40ee74:	push   0xf
  40ee76:	sbb    al,0xef
  40ee78:	les    eax,FWORD PTR [ecx+0x11]
  40ee7b:	in     al,dx
  40ee7c:	mov    gs,ebx
  40ee7e:	or     ah,ah
  40ee80:	sbb    al,0xdc
  40ee82:	jo     0x40eeae
  40ee84:	int3   
  40ee85:	sub    eax,0x1054733e
  40ee8a:	pop    edi
  40ee8b:	pop    ebp
  40ee8c:	stos   DWORD PTR es:[edi],eax
  40ee8d:	mov    ebx,0x4d5bd5cf
  40ee92:	imul   esp,DWORD PTR [edx+0x1477f8f4],0x3c6cdfbc
  40ee9c:	stos   BYTE PTR es:[edi],al
  40ee9d:	dec    eax
  40ee9e:	inc    edx
  40ee9f:	adc    bl,BYTE PTR [edi]
  40eea1:	sub    eax,0x4557c9ab
  40eea6:	test   al,0xb5
  40eea8:	push   es
  40eea9:	sub    BYTE PTR [ebx],0x2a
  40eeac:	outs   dx,DWORD PTR ds:[esi]
  40eead:	test   ebp,0x31adc0c5
  40eeb3:	push   es
  40eeb4:	dec    ebp
  40eeb5:	div    BYTE PTR [ebx+0x22]
  40eeb8:	dec    esi
  40eeb9:	fild   QWORD PTR [edi+0x4]
  40eebc:	jge    0x40ef10
  40eebe:	push   ds
  40eebf:	lods   al,BYTE PTR ds:[esi]
  40eec0:	(bad)  
  40eec1:	mov    bh,0xc3
  40eec3:	xor    edx,DWORD PTR [ecx]
  40eec5:	dec    edx
  40eec6:	test   DWORD PTR [eax],edx
  40eec8:	xchg   BYTE PTR [edx-0x56918355],ch
  40eece:	fwait
  40eecf:	push   eax
  40eed0:	sub    al,0x99
  40eed2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eed3:	push   esi
  40eed4:	outs   dx,DWORD PTR ds:[esi]
  40eed5:	inc    esi
  40eed6:	cmovs  eax,DWORD PTR [ecx+0x7]
  40eeda:	sti    
  40eedb:	int    0xa1
  40eedd:	test   BYTE PTR [eax-0x6ada92a5],ah
  40eee3:	shl    BYTE PTR [ecx+0x18],1
  40eee6:	push   ds
  40eee7:	loopne 0x40ee7f
  40eee9:	jnp    0x40eec0
  40eeeb:	imul   esi,DWORD PTR [eax+0x35],0x39b0a05a
  40eef2:	pop    eax
  40eef3:	addr16 xchg ebp,eax
  40eef5:	pop    esp
  40eef6:	push   es
  40eef7:	mov    BYTE PTR [esi],bl
  40eef9:	sbb    edx,DWORD PTR [ecx]
  40eefb:	inc    ecx
  40eefc:	dec    ebp
  40eefd:	repnz sbb bl,BYTE PTR [esi-0x40]
  40ef01:	call   0x57e701b9
  40ef06:	mov    dl,0xbd
  40ef08:	push   edi
  40ef09:	cli    
  40ef0a:	neg    DWORD PTR [ebp-0x4f7a13ad]
  40ef10:	pop    esp
  40ef11:	daa    
  40ef12:	sti    
  40ef13:	clc    
  40ef14:	sahf   
  40ef15:	(bad)  
  40ef16:	repnz cmp esi,0x50
  40ef1a:	fistp  QWORD PTR [eax-0x87d90a2]
  40ef20:	xlat   BYTE PTR ds:[ebx]
  40ef21:	and    BYTE PTR [edx-0x32],cl
  40ef24:	fidivr DWORD PTR [edx-0x3b]
  40ef27:	je     0x40ef14
  40ef29:	xor    esi,DWORD PTR [esi]
  40ef2b:	jne    0x40eebe
  40ef2d:	or     DWORD PTR [esp+ebx*1-0x204f0b59],0x41
  40ef35:	pop    ds
  40ef36:	pop    ebp
  40ef37:	mov    cl,0xb4
  40ef39:	pop    es
  40ef3a:	jne    0x40eeca
  40ef3c:	pop    es
  40ef3d:	pop    esi
  40ef3e:	(bad)  ds:0xcd9ac76
  40ef44:	fisubr DWORD PTR [esi]
  40ef46:	mov    cl,0xc5
  40ef48:	gs loopne 0x40eecf
  40ef4b:	jnp    0x40ef41
  40ef4d:	shr    DWORD PTR [edi],cl
  40ef4f:	shl    BYTE PTR [ecx],cl
  40ef51:	shl    BYTE PTR [edx+0x37],cl
  40ef54:	ret    
  40ef55:	cwde   
  40ef56:	add    al,0x41
  40ef58:	adc    dh,BYTE PTR [ebp-0x39]
  40ef5b:	pop    ss
  40ef5c:	pop    DWORD PTR [edi-0x5f71ddfb]
  40ef62:	inc    edi
  40ef63:	cli    
  40ef64:	pop    ecx
  40ef65:	test   DWORD PTR [ebp+0x4d8438e0],0x3b5303c7
  40ef6f:	dec    esp
  40ef70:	inc    edx
  40ef71:	cmc    
  40ef72:	mov    esi,0xec54bbfa
  40ef77:	pop    si
  40ef79:	mov    ecx,0x5e4e0ff0
  40ef7e:	hlt    
  40ef7f:	dec    edi
  40ef80:	retf   0x5fc6
  40ef83:	pop    ecx
  40ef84:	pop    ds
  40ef85:	rol    DWORD PTR [esi],0x9e
  40ef88:	xchg   DWORD PTR [edi-0x2c],edi
  40ef8b:	les    edx,FWORD PTR [eax-0x48fb46dc]
  40ef91:	sbb    al,0xf2
  40ef93:	cmp    cl,0x19
  40ef96:	jne    0x40ef81
  40ef98:	retf   0x934b
  40ef9b:	fadd   DWORD PTR [edi+0x63]
  40ef9e:	dec    edi
  40ef9f:	push   0x88f08bd0
  40efa4:	add    BYTE PTR [edx],0xb5
  40efa7:	jg     0x40ef6e
  40efa9:	and    eax,0xac425fe
  40efae:	out    dx,al
  40efaf:	dec    esp
  40efb0:	addr16 rcr ah,cl
  40efb3:	iret   
  40efb4:	inc    ebx
  40efb5:	jmp    0xe58949b6
  40efba:	mov    eax,0x880c1685
  40efbf:	shl    DWORD PTR [esi+0x2d],1
  40efc2:	and    bh,dl
  40efc4:	fwait
  40efc5:	adc    eax,0x73f7de1b
  40efca:	(bad)  
  40efcb:	fsub   DWORD PTR [ecx+0x10]
  40efce:	imul   edx,DWORD PTR [eax+eax*2-0x9398a8e],0xa4b93fca
  40efd9:	dec    edx
  40efda:	jno    0x40ef96
  40efdc:	outs   dx,BYTE PTR ds:[esi]
  40efdd:	pop    eax
  40efde:	mov    ebp,0x8992dc1e
  40efe3:	cmp    al,0xe9
  40efe5:	xchg   ebx,eax
  40efe6:	cwde   
  40efe7:	cmp    esi,esi
  40efe9:	je     0x40ef7a
  40efeb:	sbb    DWORD PTR [eax-0x46],0xffffff82
  40efef:	jo     0x40ef7a
  40eff1:	add    esp,DWORD PTR [esi-0x3e]
  40eff4:	and    eax,0xc235a778
  40eff9:	inc    ebp
  40effa:	adc    eax,0xb5942d72
  40efff:	add    DWORD PTR ds:0xe3e91b62,ebp
  40f005:	loopne 0x40f044
  40f007:	cmp    edx,DWORD PTR [eax+eiz*1+0x1904c81c]
  40f00e:	rcl    esp,1
  40f010:	aad    0x67
  40f012:	cmp    al,0xe
  40f014:	mov    esi,0x848404a2
  40f019:	je     0x40efdd
  40f01b:	mov    BYTE PTR [esi+0x4a],al
  40f01e:	mov    esp,0xf0abe013
  40f023:	and    ah,BYTE PTR [ecx]
  40f025:	fstp   TBYTE PTR [edi]
  40f027:	sub    eax,0x7a132a45
  40f02c:	sub    DWORD PTR [esi+0x34],esp
  40f02f:	mov    ah,0xd2
  40f031:	mov    bh,0x3a
  40f033:	push   cs
  40f034:	pop    ebp
  40f035:	add    eax,0xa86bc5e5
  40f03a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f03b:	jae    0x40f035
  40f03d:	imul   ebx,DWORD PTR [esi],0xffffff91
  40f040:	gs into 
  40f042:	or     al,0x25
  40f044:	les    edx,FWORD PTR [ebp-0x1d]
  40f047:	dec    ecx
  40f048:	and    al,0x1c
  40f04a:	jnp    0x40f093
  40f04c:	xchg   esp,ecx
  40f04e:	push   ds
  40f04f:	ret    
  40f050:	fwait
  40f051:	mov    eax,DWORD PTR [edx]
  40f053:	and    al,0x5b
  40f055:	jecxz  0x40f022
  40f057:	mov    ds:0x7f2af8d6,al
  40f05c:	dec    esp
  40f05d:	shl    BYTE PTR [esi],0x3f
  40f060:	cmp    ebp,DWORD PTR [edi-0x439e9422]
  40f066:	jo     0x40f07b
  40f068:	enter  0xd972,0xc2
  40f06c:	into   
  40f06d:	push   esp
  40f06e:	stos   BYTE PTR es:[edi],al
  40f06f:	xor    DWORD PTR [eax+0x7b],eax
  40f072:	sbb    DWORD PTR [esi-0x785836bd],ecx
  40f078:	hlt    
  40f079:	and    bl,BYTE PTR [edi+0x77b83752]
  40f07f:	jl     0x40f014
  40f081:	push   eax
  40f082:	repz push ecx
  40f084:	repnz enter 0x3472,0x57
  40f089:	stos   DWORD PTR es:[edi],eax
  40f08a:	dec    esp
  40f08b:	scas   al,BYTE PTR es:[edi]
  40f08c:	retf   
  40f08d:	ret    
  40f08e:	pop    esi
  40f08f:	call   0x38b1:0x85cf5396
  40f096:	js     0x40f082
  40f098:	loope  0x40f085
  40f09a:	in     eax,dx
  40f09b:	enter  0xcfd4,0xf6
  40f09f:	(bad)  
  40f0a1:	cmp    eax,0x7942c822
  40f0a6:	sbb    DWORD PTR es:[ebp+0x4197aef4],edi
  40f0ad:	adc    cl,BYTE PTR [eax]
  40f0af:	fdiv   QWORD PTR [ebp+0x14]
  40f0b2:	fwait
  40f0b3:	jecxz  0x40f0c2
  40f0b5:	(bad)  
  40f0b6:	loop   0x40f0e7
  40f0b8:	shl    DWORD PTR [esi+0x76],0x8e
  40f0bc:	pop    ds
  40f0bd:	xchg   esp,eax
  40f0be:	loopne 0x40f04d
  40f0c0:	dec    ecx
  40f0c1:	jmp    0x44984852
  40f0c6:	push   edi
  40f0c7:	ret    
  40f0c8:	mov    esi,0xe78f8666
  40f0cd:	scas   al,BYTE PTR es:[edi]
  40f0ce:	stc    
  40f0cf:	jmp    0x8d30:0x84f6b215
  40f0d6:	inc    eax
  40f0d7:	loope  0x40f09f
  40f0d9:	push   ds
  40f0da:	mov    ebp,0x626fe430
  40f0df:	fidivr DWORD PTR [ebx+0x78250e2d]
  40f0e5:	int3   
  40f0e6:	mov    ds:0x49333ad4,al
  40f0eb:	mov    al,0x29
  40f0ed:	(bad)  
  40f0ee:	sbb    ch,BYTE PTR [ebp+0x7bec173f]
  40f0f4:	inc    esi
  40f0f5:	and    esi,DWORD PTR [ebp-0x7c20fc22]
  40f0fb:	dec    esp
  40f0fc:	push   ebx
  40f0fd:	ror    DWORD PTR [eax+eax*4],1
  40f100:	add    al,0xca
  40f102:	sbb    eax,0x34c3d576
  40f107:	je     0x40f166
  40f109:	pop    ebp
  40f10a:	test   al,0x4
  40f10c:	fldenv [edx+eiz*8-0x2f]
  40f110:	cmp    al,0x62
  40f112:	add    DWORD PTR [edi+eax*4],esi
  40f115:	pusha  
  40f116:	cdq    
  40f117:	mov    eax,ds:0x51ce8ccf
  40f11c:	push   ebx
  40f11d:	mov    al,ds:0x56f3a38a
  40f122:	mov    DWORD PTR [esi],ebx
  40f124:	sbb    al,0x91
  40f126:	push   edi
  40f127:	pop    es
  40f128:	add    eax,0x10a8093f
  40f12d:	fistp  DWORD PTR [ebx+eiz*4+0x4a99a180]
  40f134:	stos   DWORD PTR es:[edi],eax
  40f135:	scas   al,BYTE PTR es:[edi]
  40f136:	repz dec esi
  40f138:	idiv   DWORD PTR [ebx+ecx*1-0x38]
  40f13c:	sbb    BYTE PTR [eax-0x7d1746f7],ch
  40f142:	inc    edi
  40f143:	pop    ebp
  40f144:	repz dec ebx
  40f146:	sub    al,0xc9
  40f148:	or     BYTE PTR [esi-0x44f28427],dl
  40f14e:	mov    ecx,0x2d004e22
  40f153:	sbb    eax,0x9257270e
  40f158:	inc    esp
  40f159:	sbb    ecx,DWORD PTR [ebx]
  40f15b:	mov    esp,0x380d73b4
  40f160:	dec    esp
  40f161:	outs   dx,BYTE PTR ds:[esi]
  40f162:	adc    BYTE PTR [esi-0x325e6b24],dl
  40f168:	stos   DWORD PTR es:[edi],eax
  40f169:	mov    bl,0xfc
  40f16b:	jge    0x40f1ab
  40f16d:	dec    eax
  40f16e:	dec    ecx
  40f16f:	fiadd  DWORD PTR [esi+0x7]
  40f172:	xchg   ecx,eax
  40f173:	cs xchg esi,eax
  40f175:	ficomp WORD PTR [ebp-0x7d98124a]
  40f17b:	pusha  
  40f17c:	xchg   ebp,eax
  40f17d:	repnz inc esi
  40f17f:	sub    dl,BYTE PTR [esi]
  40f181:	fbstp  TBYTE PTR [ecx+0x7cc6eb5e]
  40f187:	dec    ebx
  40f188:	fst    DWORD PTR [eax]
  40f18a:	mov    eax,0xee2ac4e0
  40f18f:	jno    0x40f170
  40f191:	retf   
  40f192:	(bad)  
  40f193:	in     al,0x3c
  40f195:	pushf  
  40f196:	sar    BYTE PTR [edi+0x16e416a3],0x4f
  40f19d:	pop    es
  40f19e:	pushf  
  40f19f:	addr16 push eax
  40f1a1:	or     esi,DWORD PTR ds:0xa2a46493
  40f1a7:	sar    BYTE PTR [esi+0x1056b4d9],cl
  40f1ad:	xor    cl,BYTE PTR [edx]
  40f1af:	adc    BYTE PTR [eax-0x51],0xbd
  40f1b3:	iret   
  40f1b4:	push   0x63
  40f1b6:	push   ecx
  40f1b7:	cmp    BYTE PTR [esi],0xe2
  40f1ba:	inc    ecx
  40f1bb:	or     edx,DWORD PTR [ecx+0x25]
  40f1be:	in     al,dx
  40f1bf:	outs   dx,DWORD PTR ds:[esi]
  40f1c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1c1:	sub    ebp,DWORD PTR [edx]
  40f1c3:	mov    ds,WORD PTR [ecx+0x2cad23a6]
  40f1c9:	fsubr  QWORD PTR ds:0xabb0c9ab
  40f1cf:	idiv   DWORD PTR [ebp+eiz*2+0x14ff479d]
  40f1d6:	push   ebx
  40f1d7:	test   al,0x44
  40f1d9:	inc    eax
  40f1da:	gs inc ebx
  40f1dc:	pushf  
  40f1dd:	lea    edx,[esi]
  40f1df:	stos   DWORD PTR es:[edi],eax
  40f1e0:	and    DWORD PTR [ecx],0x57
  40f1e3:	jb     0x40f196
  40f1e5:	push   0xffffffef
  40f1e7:	jl     0x40f1a7
  40f1e9:	test   al,0x5f
  40f1eb:	mov    esi,0x1966004c
  40f1f0:	shl    dl,1
  40f1f2:	loop   0x40f187
  40f1f4:	push   esi
  40f1f5:	xor    DWORD PTR [ebp-0x70c95321],edx
  40f1fb:	pop    edi
  40f1fc:	ja     0x40f25c
  40f1fe:	inc    ecx
  40f1ff:	sub    DWORD PTR [edx],eax
  40f201:	ins    BYTE PTR es:[edi],dx
  40f202:	mov    bh,0x98
  40f204:	pop    ds
  40f205:	sahf   
  40f206:	sti    
  40f207:	sub    al,0x13
  40f209:	adc    edx,DWORD PTR [ecx+0x2e311bd6]
  40f20f:	jo     0x40f240
  40f211:	dec    esp
  40f212:	shl    BYTE PTR [eax],0x8
  40f215:	mov    cl,0x83
  40f217:	mov    ds:0xffff703f,eax
  40f21c:	(bad)  
  40f21d:	xchg   ebp,eax
  40f21e:	mov    ebx,0xe17b2dcc
  40f223:	data16 in al,dx
  40f225:	sub    eax,0xfac0ebdf
  40f22a:	pop    ebx
  40f22b:	inc    esi
  40f22c:	lds    edi,FWORD PTR [edx+0x7]
  40f22f:	xlat   BYTE PTR ds:[ebx]
  40f230:	das    
  40f231:	shr    DWORD PTR [ecx],0xdc
  40f234:	call   0x82c7:0x25a64e3e
  40f23b:	mov    ecx,0x9ce9c086
  40f240:	inc    eax
  40f241:	adc    ebp,DWORD PTR [esi-0x154e8fd1]
  40f247:	sub    ebx,edx
  40f249:	xchg   ebp,eax
  40f24a:	jb     0x40f251
  40f24c:	sbb    al,0xef
  40f24e:	fdivr  DWORD PTR [eax-0x53]
  40f251:	add    eax,0x349ac615
  40f256:	jmp    0xdabc98bf
  40f25b:	jl     0x40f2cc
  40f25d:	sbb    BYTE PTR [ecx-0x69],0x42
  40f261:	adc    ecx,0x41
  40f264:	test   eax,0xa675cb3d
  40f269:	pop    ss
  40f26a:	inc    edx
  40f26b:	sub    esp,edx
  40f26d:	adc    esi,DWORD PTR [edi]
  40f26f:	daa    
  40f270:	in     eax,0xee
  40f272:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f273:	jbe    0x40f2ad
  40f275:	push   ebx
  40f276:	or     BYTE PTR [esi+0xa],ah
  40f279:	sbb    BYTE PTR [ecx],0x5c
  40f27c:	inc    esi
  40f27d:	sar    ah,0x16
  40f280:	sbb    bh,BYTE PTR [ebx-0x24]
  40f283:	inc    esi
  40f284:	fnstcw WORD PTR [ecx]
  40f286:	push   esp
  40f287:	sbb    ebx,DWORD PTR [ecx+0x69]
  40f28a:	fcomi  st,st(4)
  40f28c:	cmp    DWORD PTR [ebx+0x40],edi
  40f28f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f290:	in     eax,dx
  40f291:	mov    ch,0xc4
  40f293:	aad    0xd3
  40f295:	mov    esp,DWORD PTR [ecx-0x755fbdf3]
  40f29b:	mov    dh,0xd8
  40f29d:	xchg   ecx,eax
  40f29e:	cmp    DWORD PTR [ebp+0x4a0e976e],esp
  40f2a4:	ds in  al,dx
  40f2a6:	not    esi
  40f2a8:	sar    BYTE PTR [eax],1
  40f2aa:	mov    WORD PTR [edx],fs
  40f2ac:	stos   DWORD PTR es:[edi],eax
  40f2ad:	xor    bl,bh
  40f2af:	subps  xmm6,XMMWORD PTR [eax+0x1e]
  40f2b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2b4:	push   0xdb8fa0a1
  40f2b9:	adc    BYTE PTR [edi-0x8f5f431],dl
  40f2bf:	mov    BYTE PTR [eax-0x64],ch
  40f2c2:	fild   WORD PTR [esi+esi*4]
  40f2c5:	mov    cl,0x99
  40f2c7:	jo     0x40f24b
  40f2c9:	pop    ss
  40f2ca:	fadd   DWORD PTR [ecx]
  40f2cc:	jg     0x40f2f4
  40f2ce:	mov    dh,0x3d
  40f2d0:	ret    0xbc07
  40f2d3:	in     al,dx
  40f2d4:	sub    al,0x7e
  40f2d6:	enter  0x51e5,0x23
  40f2da:	daa    
  40f2db:	aad    0xcb
  40f2dd:	out    dx,al
  40f2de:	leave  
  40f2df:	xchg   BYTE PTR [ebx],bl
  40f2e1:	sbb    BYTE PTR [eax-0x72],dh
  40f2e4:	mov    ds:0xff91977b,al
  40f2e9:	add    BYTE PTR [edx+edx*1],0x42
  40f2ed:	jp     0x40f278
  40f2ef:	or     al,0x5d
  40f2f1:	sbb    dl,BYTE PTR [esp+edi*8]
  40f2f4:	adc    edx,edx
  40f2f6:	into   
  40f2f7:	push   0x132d37b0
  40f2fc:	or     BYTE PTR [eax-0x21103620],0xec
  40f303:	sub    DWORD PTR [edx+ebx*2],esi
  40f306:	aaa    
  40f307:	sti    
  40f308:	addr16 jmp 0x40f354
  40f30b:	push   0x28eefbea
  40f310:	inc    ecx
  40f311:	fidivr WORD PTR [esi+0x2c30d7b2]
  40f317:	fdiv   DWORD PTR ds:0xf91aab10
  40f31d:	mov    dl,BYTE PTR [ecx-0x54e62bb5]
  40f323:	bound  edx,QWORD PTR [esi-0xecdb898]
  40f329:	cmp    BYTE PTR [ebx+0x50],bl
  40f32c:	hlt    
  40f32d:	or     dl,BYTE PTR [edi+0x5e]
  40f330:	xor    BYTE PTR [edi+0xf0ed8ac],cl
  40f336:	jmp    0xccda:0xa57f9763
  40f33d:	dec    edx
  40f33e:	aas    
  40f33f:	daa    
  40f340:	les    ecx,FWORD PTR [ebx+0x52575501]
  40f346:	inc    esi
  40f347:	ficomp DWORD PTR [ecx]
  40f349:	leave  
  40f34a:	mov    ah,0xdc
  40f34c:	pop    edi
  40f34d:	mov    dl,0x8
  40f34f:	fst    st(6)
  40f351:	pop    eax
  40f352:	push   ebx
  40f353:	adc    al,0xae
  40f355:	addr16 out 0x15,eax
  40f358:	inc    ecx
  40f359:	imul   edi,ebp,0xffb56335
  40f35f:	imul   DWORD PTR [esi]
  40f361:	dec    edi
  40f362:	daa    
  40f363:	loope  0x40f304
  40f365:	pop    ss
  40f366:	stos   BYTE PTR es:[edi],al
  40f367:	pop    ebx
  40f368:	adc    edx,DWORD PTR [ecx+0x6d]
  40f36b:	int3   
  40f36c:	inc    esi
  40f36d:	add    al,0x75
  40f36f:	dec    esi
  40f370:	outs   dx,BYTE PTR ds:[esi]
  40f371:	rcr    DWORD PTR [ecx-0x2d],1
  40f374:	shl    DWORD PTR [ebp+0x6a],cl
  40f377:	cld    
  40f378:	adc    BYTE PTR [esi-0x16],0x32
  40f37c:	add    eax,0x8bb70d19
  40f381:	sbb    dh,BYTE PTR [ebx]
  40f383:	sti    
  40f384:	mov    DWORD PTR [edx],edi
  40f386:	mov    edx,DWORD PTR [ebp+0x8]
  40f389:	xor    edx,eax
  40f38b:	inc    ecx
  40f38c:	inc    DWORD PTR [ebp-0x18]
  40f38f:	add    edx,esi
  40f391:	cmp    ecx,edx
  40f393:	jb     0x40cfd4
  40f399:	jmp    0x40f3e3
  40f39e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3a1:	mov    DWORD PTR [ebp+0x8],ecx
  40f3a4:	jmp    0x40f3d6
  40f3a9:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3ac:	mov    edx,DWORD PTR [ebp-0x8]
  40f3af:	xor    ecx,eax
  40f3b1:	xor    edx,eax
  40f3b3:	sub    ecx,edx
  40f3b5:	sub    ecx,esi
  40f3b7:	xor    ecx,eax
  40f3b9:	mov    DWORD PTR [ebp+0x8],ecx
  40f3bc:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3bf:	mov    edx,DWORD PTR [ebp+0x8]
  40f3c2:	imul   edx,edx,0x5708f1
  40f3c8:	xor    ecx,eax
  40f3ca:	add    ecx,esi
  40f3cc:	lea    ecx,[ebp+ecx*4-0x64]
  40f3d0:	mov    edi,DWORD PTR [ecx]
  40f3d2:	add    edx,edi
  40f3d4:	mov    DWORD PTR [ecx],edx
  40f3d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3d9:	xor    ecx,eax
  40f3db:	add    ecx,esi
  40f3dd:	jne    0x40f3a9
  40f3e3:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3e6:	mov    DWORD PTR [ebp+0x8],ecx
  40f3e9:	jmp    0x40f41b
  40f3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3f1:	mov    edx,DWORD PTR [ebp-0x8]
  40f3f4:	xor    ecx,eax
  40f3f6:	xor    edx,eax
  40f3f8:	sub    ecx,edx
  40f3fa:	sub    ecx,esi
  40f3fc:	xor    ecx,eax
  40f3fe:	mov    DWORD PTR [ebp+0x8],ecx
  40f401:	mov    ecx,DWORD PTR [ebp+0x8]
  40f404:	mov    edx,DWORD PTR [ebp+0x8]
  40f407:	imul   edx,edx,0x5708f1
  40f40d:	xor    ecx,eax
  40f40f:	add    ecx,esi
  40f411:	lea    ecx,[ebp+ecx*4-0x64]
  40f415:	mov    edi,DWORD PTR [ecx]
  40f417:	add    edx,edi
  40f419:	mov    DWORD PTR [ecx],edx
  40f41b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f41e:	xor    ecx,eax
  40f420:	add    ecx,esi
  40f422:	jne    0x40f3ee
  40f428:	mov    ecx,DWORD PTR [ebp-0x8]
  40f42b:	mov    edx,DWORD PTR [ebp-0x20]
  40f42e:	xor    ecx,eax
  40f430:	lea    ecx,[ecx+edx*1+0x3272dc]
  40f437:	mov    DWORD PTR [ebp-0x20],ecx
  40f43a:	inc    DWORD PTR [ebp+0xc]
  40f43d:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f440:	xor    ecx,eax
  40f442:	add    ecx,esi
  40f444:	jne    0x40ced6
  40f44a:	jmp    0x413be3
  40f44f:	mov    ecx,DWORD PTR [ebp-0xc]
  40f452:	mov    DWORD PTR [ebp+0x8],ecx
  40f455:	jmp    0x41180f
  40f45a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f45d:	mov    edx,DWORD PTR [ebp-0x8]
  40f460:	xor    ecx,eax
  40f462:	xor    edx,eax
  40f464:	sub    ecx,edx
  40f466:	jmp    0x4117ee
  40f46b:	mov    al,ds:0x7334f23d
  40f470:	cmp    ebp,DWORD PTR [edx+0x3e2d7a79]
  40f476:	mov    ds:0xdd0e8c57,al
  40f47b:	pop    ebp
  40f47c:	int    0x7c
  40f47e:	jl     0x40f487
  40f480:	pop    edi
  40f481:	jl     0x40f4ff
  40f483:	repz fldcw WORD PTR [eax+0x63]
  40f487:	pop    eax
  40f488:	push   esp
  40f489:	dec    esp
  40f48a:	mov    esi,ebx
  40f48c:	sahf   
  40f48d:	mov    ebp,0x9b920ea4
  40f492:	movups XMMWORD PTR [eax-0x612d9047],xmm0
  40f499:	fmul   DWORD PTR [eax+0x36]
  40f49c:	push   es
  40f49d:	pushf  
  40f49e:	cmp    eax,0x1b7e3456
  40f4a3:	sub    al,0x1d
  40f4a5:	loop   0x40f42d
  40f4a7:	idiv   BYTE PTR [edi]
  40f4a9:	cmc    
  40f4aa:	mov    eax,0x748ff604
  40f4af:	mov    al,0xdd
  40f4b1:	add    al,0x20
  40f4b3:	ins    BYTE PTR es:[edi],dx
  40f4b4:	retf   
  40f4b5:	pop    es
  40f4b6:	push   esi
  40f4b7:	rol    BYTE PTR [ebx-0x3],cl
  40f4ba:	mov    eax,ds:0xb227cd54
  40f4bf:	outs   dx,DWORD PTR ds:[esi]
  40f4c0:	or     DWORD PTR [esi+0x62],edi
  40f4c3:	or     bl,BYTE PTR [ebp+0x21]
  40f4c6:	xchg   edi,eax
  40f4c7:	out    0xed,eax
  40f4c9:	outs   dx,DWORD PTR ds:[esi]
  40f4ca:	lods   eax,DWORD PTR ds:[esi]
  40f4cb:	(bad)  
  40f4cc:	xchg   edx,eax
  40f4cd:	mov    bh,bh
  40f4cf:	xor    al,0x2a
  40f4d1:	in     eax,0xde
  40f4d3:	push   cs
  40f4d4:	sub    BYTE PTR [ebx+0x43],dl
  40f4d7:	xchg   edx,eax
  40f4d8:	in     eax,dx
  40f4d9:	out    0x9b,eax
  40f4db:	push   esp
  40f4dc:	loop   0x40f4a7
  40f4de:	dec    ebx
  40f4df:	retf   0x2fb
  40f4e2:	dec    esi
  40f4e3:	sbb    al,0x9
  40f4e5:	popa   
  40f4e6:	pusha  
  40f4e7:	scas   eax,DWORD PTR es:[edi]
  40f4e8:	mov    edx,0x1b5e4ada
  40f4ed:	rol    DWORD PTR [ebp+0x6177a0bd],1
  40f4f3:	fxch   st(5)
  40f4f5:	pop    ss
  40f4f6:	(bad)  
  40f4f7:	les    eax,FWORD PTR [esi+0x637280c3]
  40f4fd:	mov    dl,0x15
  40f4ff:	xchg   edx,eax
  40f500:	or     al,0xf5
  40f502:	cmp    al,0x40
  40f504:	lea    ecx,[ebx]
  40f506:	sub    DWORD PTR [edi-0x5732f695],esp
  40f50c:	loopne 0x40f527
  40f50e:	sub    ah,BYTE PTR ds:0xd0d2ae52
  40f515:	xchg   edi,eax
  40f516:	ret    
  40f517:	inc    ebx
  40f518:	xchg   ebx,eax
  40f519:	pusha  
  40f51a:	mov    dl,0xab
  40f51c:	ret    0xc154
  40f51f:	jle    0x40f53a
  40f521:	or     eax,ebx
  40f523:	bound  edx,QWORD PTR [edi]
  40f525:	rol    DWORD PTR [ebx],1
  40f527:	sub    DWORD PTR [edx-0x72576ffb],edx
  40f52d:	sub    DWORD PTR [edx],esp
  40f52f:	mov    ebx,0x251dd50d
  40f534:	(bad)  
  40f535:	icebp  
  40f536:	daa    
  40f537:	hlt    
  40f538:	xor    DWORD PTR [eax+eax*2],edx
  40f53b:	div    DWORD PTR [edx+0xff4cba5]
  40f541:	push   esi
  40f542:	push   ebx
  40f543:	jp     0x40f4e3
  40f545:	jle    0x40f4ec
  40f547:	or     BYTE PTR [ecx-0x5c5e107f],bh
  40f54d:	addr16 cs test al,0x4d
  40f551:	sbb    BYTE PTR [ebp-0x58],bh
  40f554:	outs   dx,BYTE PTR ds:[esi]
  40f555:	pop    ebp
  40f556:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f557:	xor    edi,0x50594a9
  40f55d:	mov    al,0xf3
  40f55f:	mov    esi,0x8e56e0d7
  40f564:	pop    ebx
  40f565:	bound  eax,QWORD PTR [edx+0x3a]
  40f568:	pusha  
  40f569:	ds mov bl,0x33
  40f56c:	loopne 0x40f52d
  40f56e:	adc    eax,0xa7e52931
  40f573:	ins    BYTE PTR es:[edi],dx
  40f574:	pop    edx
  40f575:	sbb    al,0x93
  40f577:	push   esp
  40f578:	inc    edi
  40f579:	cdq    
  40f57a:	inc    ebx
  40f57b:	push   edi
  40f57c:	jo     0x40f575
  40f57e:	mov    al,ds:0xfe4a5e68
  40f583:	inc    ebp
  40f584:	je     0x40f5a1
  40f586:	cli    
  40f587:	cs mov esp,0x5b1e89f8
  40f58d:	pushf  
  40f58e:	jb     0x40f598
  40f590:	stos   DWORD PTR es:[edi],eax
  40f591:	and    DWORD PTR [edx+0x6f],ecx
  40f594:	cmp    al,0x43
  40f596:	adc    cl,ch
  40f598:	sbb    DWORD PTR [eax],esp
  40f59a:	pop    ds
  40f59b:	iret   
  40f59c:	sbb    dl,BYTE PTR [ebx+eax*2-0x6fc845b6]
  40f5a3:	aaa    
  40f5a4:	gs dec edi
  40f5a6:	sbb    ebp,DWORD PTR [ebx]
  40f5a8:	sar    DWORD PTR [ebp-0x76],1
  40f5ab:	icebp  
  40f5ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5ad:	in     al,dx
  40f5ae:	dec    ebp
  40f5af:	sub    ebx,eax
  40f5b1:	mov    esp,ebp
  40f5b3:	rcr    DWORD PTR [ebx],0x75
  40f5b6:	pusha  
  40f5b7:	div    DWORD PTR cs:[edx-0x3]
  40f5bb:	int    0x33
  40f5bd:	jp     0x40f540
  40f5bf:	mov    ah,0x26
  40f5c1:	test   BYTE PTR ds:0x7aef5dbe,0xda
  40f5c8:	dec    ebp
  40f5ca:	jecxz  0x40f617
  40f5cc:	sbb    esi,DWORD PTR [edx]
  40f5ce:	cmc    
  40f5cf:	pop    ss
  40f5d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5d1:	mov    ecx,ebx
  40f5d3:	xor    edi,DWORD PTR [ebx]
  40f5d5:	sbb    BYTE PTR [ebx],dh
  40f5d7:	jo     0x40f5cb
  40f5d9:	or     DWORD PTR [esi+0x5e16e7e2],0x28
  40f5e0:	mov    edi,0x958a28ac
  40f5e5:	daa    
  40f5e6:	(bad)  
  40f5e7:	loop   0x40f598
  40f5e9:	shr    BYTE PTR fs:[edx],0x7b
  40f5ed:	scas   eax,DWORD PTR es:[edi]
  40f5ee:	xor    eax,DWORD PTR ds:0x7c8953c5
  40f5f4:	(bad)  
  40f5f5:	std    
  40f5f6:	jp     0x40f5d1
  40f5f8:	mov    BYTE PTR fs:[edi+0x4e],al
  40f5fc:	addr16 popa 
  40f5fe:	jno    0x40f5eb
  40f600:	lods   al,BYTE PTR ds:[esi]
  40f601:	add    BYTE PTR [edi],ah
  40f603:	sbb    eax,0xb3491eb6
  40f608:	add    esp,0xcfb43149
  40f60e:	test   eax,0x994d821f
  40f613:	jg     0x40f686
  40f615:	cmp    eax,0xcf0f5ac0
  40f61a:	bound  ecx,QWORD PTR [edi]
  40f61c:	push   ds
  40f61d:	sub    al,0xc4
  40f61f:	ins    DWORD PTR es:[edi],dx
  40f620:	mov    ebp,0x60247247
  40f625:	and    eax,0xe40177a5
  40f62a:	mov    WORD PTR [ecx],ds
  40f62c:	imul   ecx,DWORD PTR [edx],0xd4598255
  40f632:	xor    eax,0x9d27b585
  40f637:	mov    esi,0x32a3d424
  40f63c:	mov    ah,0xe9
  40f63f:	and    BYTE PTR [ecx+esi*4-0x1],0x1b
  40f644:	xlat   BYTE PTR ds:[ebx]
  40f645:	adc    ecx,DWORD PTR [ebx-0x4634cbdc]
  40f64b:	adc    DWORD PTR [esi],0x3a
  40f64e:	bound  esp,QWORD PTR [ebx+0x64e6e961]
  40f654:	arpl   WORD PTR [ecx-0x3c],sp
  40f657:	ja     0x40f689
  40f659:	and    edx,DWORD PTR [ebx+0x424717c]
  40f65f:	mov    eax,0xe05bd097
  40f664:	inc    ebx
  40f665:	cwde   
  40f666:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f667:	shl    ah,0xe2
  40f66a:	push   ss
  40f66b:	scas   eax,DWORD PTR es:[edi]
  40f66c:	push   ss
  40f66d:	jns    0x40f606
  40f66f:	(bad)  
  40f671:	cmp    eax,eax
  40f673:	mov    esp,0x79925db9
  40f678:	dec    ebx
  40f679:	and    al,0x54
  40f67b:	nop
  40f67c:	bound  esp,QWORD PTR [ebx]
  40f67e:	pusha  
  40f67f:	shr    dh,0x46
  40f682:	mov    ?,WORD PTR [eax]
  40f684:	gs cs xchg ecx,eax
  40f687:	in     eax,dx
  40f688:	dec    ebp
  40f689:	sbb    eax,0xb76e8cdc
  40f68e:	sub    ah,BYTE PTR [esi-0x7d]
  40f691:	cmp    al,0xe3
  40f693:	cli    
  40f694:	in     eax,dx
  40f695:	mov    edi,0x28b529fc
  40f69a:	adc    eax,0xee0e86c6
  40f69f:	(bad)  
  40f6a0:	dec    ebp
  40f6a1:	test   BYTE PTR [esi+0x55d78563],dl
  40f6a7:	push   0x30
  40f6a9:	mov    edi,0x8aac6331
  40f6ae:	add    ah,BYTE PTR [ebx+0x6]
  40f6b1:	push   ebp
  40f6b2:	pop    ebp
  40f6b3:	lods   eax,DWORD PTR ds:[esi]
  40f6b4:	outs   dx,BYTE PTR ds:[esi]
  40f6b5:	lock xor al,ch
  40f6b8:	adc    al,0x60
  40f6ba:	mov    esp,0xc1b130e5
  40f6bf:	mov    al,ds:0x9273c06c
  40f6c4:	inc    esp
  40f6c5:	push   DWORD PTR [eax]
  40f6c7:	stos   BYTE PTR es:[edi],al
  40f6c8:	xchg   edx,eax
  40f6c9:	je     0x40f68f
  40f6cb:	scas   eax,DWORD PTR es:[edi]
  40f6cc:	xor    DWORD PTR [esi-0x2a],0x60
  40f6d0:	ss jecxz 0x40f6e9
  40f6d3:	adc    ah,dl
  40f6d5:	leave  
  40f6d6:	pop    esp
  40f6d7:	jae    0x40f736
  40f6d9:	jo     0x40f6d8
  40f6db:	mov    edx,0xbb66568b
  40f6e0:	into   
  40f6e1:	fld    QWORD PTR [eax+ebp*8]
  40f6e4:	xor    al,0x66
  40f6e6:	std    
  40f6e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6e8:	jmp    0xbcd0c1f4
  40f6ed:	bound  ecx,QWORD PTR [edx+0x70]
  40f6f0:	retf   
  40f6f1:	les    ecx,FWORD PTR ds:0xc5b82585
  40f6f7:	pop    ecx
  40f6f8:	xor    DWORD PTR [eax],0x14fdf9ff
  40f6fe:	jge    0x40f74e
  40f700:	sbb    DWORD PTR [eax+0xc],eax
  40f703:	out    0x34,al
  40f705:	(bad)  
  40f706:	outs   dx,BYTE PTR ds:[esi]
  40f707:	cmp    bh,bh
  40f709:	fistp  QWORD PTR ds:0xdda21195
  40f70f:	leave  
  40f710:	sub    DWORD PTR [eax+0x169b1a21],ecx
  40f716:	xor    ah,ch
  40f718:	mov    ds,WORD PTR [edi+0x3b]
  40f71b:	inc    ebx
  40f71c:	(bad)  
  40f71d:	jne    0x40f761
  40f71f:	mov    edx,0xb2c07b39
  40f724:	sub    BYTE PTR ds:0xc0291ed2,0xc3
  40f72b:	sbb    DWORD PTR [ecx],ebp
  40f72d:	ja     0x40f6b0
  40f72f:	and    al,0x7b
  40f731:	push   ds
  40f732:	pop    ebx
  40f733:	dec    ebp
  40f734:	xor    BYTE PTR [ecx],dl
  40f736:	inc    edi
  40f737:	push   ebp
  40f738:	jnp    0x40f77e
  40f73a:	adc    al,0xaf
  40f73c:	jp     0x40f758
  40f73e:	and    BYTE PTR [ebp+0x1d],0xf2
  40f742:	je     0x40f6f2
  40f744:	ins    BYTE PTR es:[edi],dx
  40f745:	xor    bh,al
  40f747:	les    eax,FWORD PTR [ecx+edx*1]
  40f74a:	fadd   QWORD PTR [eax+0x65]
  40f74d:	push   ds
  40f74e:	call   0xae39dcc
  40f753:	dec    esp
  40f754:	loop   0x40f7cd
  40f756:	sbb    DWORD PTR [ebx],ebx
  40f758:	rcr    BYTE PTR [eax-0x7f],cl
  40f75b:	cmp    al,0xa7
  40f75d:	dec    eax
  40f75e:	cmp    cl,dl
  40f760:	ins    BYTE PTR es:[edi],dx
  40f761:	scas   eax,DWORD PTR es:[edi]
  40f762:	scas   al,BYTE PTR es:[edi]
  40f763:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f764:	sbb    eax,0xccd6add7
  40f769:	and    ecx,DWORD PTR [ebp+0x46f07dde]
  40f76f:	jmp    0x49cf45be
  40f774:	jo     0x40f767
  40f776:	lds    edx,FWORD PTR [ecx]
  40f778:	dec    esi
  40f779:	cmp    al,0x8b
  40f77b:	mov    bl,0x46
  40f77d:	ins    DWORD PTR es:[edi],dx
  40f77e:	enter  0xc052,0xe7
  40f782:	xor    al,al
  40f784:	sbb    eax,DWORD PTR [edi]
  40f786:	and    al,BYTE PTR [edx+0x60832119]
  40f78c:	sahf   
  40f78d:	mov    ecx,0x5b0c9901
  40f792:	inc    ebp
  40f793:	lods   eax,DWORD PTR ds:[esi]
  40f794:	call   0x395dd8d4
  40f799:	and    BYTE PTR [edi-0x13],0x6b
  40f79d:	pop    edx
  40f79e:	fs jle 0x40f768
  40f7a1:	das    
  40f7a2:	xchg   DWORD PTR [ecx-0x64],edx
  40f7a5:	popf   
  40f7a6:	sbb    bl,BYTE PTR [ecx-0x50d24035]
  40f7ac:	jno    0x40f797
  40f7ae:	add    eax,edx
  40f7b0:	fbstp  TBYTE PTR [ebx]
  40f7b2:	sbb    bh,BYTE PTR [ebx-0x69d6ee3f]
  40f7b8:	cmp    edx,0x35
  40f7bb:	shl    BYTE PTR [eax],1
  40f7bd:	pusha  
  40f7be:	gs push es
  40f7c0:	jno    0x40f7d9
  40f7c2:	xchg   ecx,eax
  40f7c3:	sti    
  40f7c4:	add    eax,0xb3d28b3b
  40f7c9:	xor    BYTE PTR [ecx+0x20],0x50
  40f7cd:	cdq    
  40f7ce:	sub    al,0x83
  40f7d0:	pop    edi
  40f7d1:	jg     0x40f7c2
  40f7d3:	inc    edx
  40f7d4:	fisubr WORD PTR [eax]
  40f7d6:	inc    esp
  40f7d7:	or     dl,ah
  40f7d9:	sbb    esp,DWORD PTR [ebp-0x53c91691]
  40f7df:	repnz rol DWORD PTR [ebp-0x34e09393],0x72
  40f7e7:	neg    BYTE PTR [esi-0x6cbfad02]
  40f7ed:	inc    esi
  40f7ee:	sub    dh,BYTE PTR [eax-0x27181319]
  40f7f4:	dec    eax
  40f7f5:	mov    esp,0xe7f201ad
  40f7fa:	xchg   BYTE PTR [ecx+ecx*8+0x60],bh
  40f7fe:	xchg   BYTE PTR [ecx+ebp*8+0x2b],dl
  40f802:	shr    DWORD PTR [ebp-0x6de58ae2],cl
  40f808:	push   edx
  40f809:	mov    esp,0x69206529
  40f80e:	adc    eax,0x8fa0461c
  40f813:	loop   0x40f86a
  40f815:	push   eax
  40f816:	dec    ecx
  40f817:	inc    esp
  40f818:	out    0x62,al
  40f81a:	xchg   edi,eax
  40f81b:	jns    0x40f836
  40f81d:	jmp    0x449be5d3
  40f822:	xchg   edi,eax
  40f823:	push   es
  40f824:	mov    ebp,0x1814de30
  40f829:	stos   DWORD PTR es:[edi],eax
  40f82a:	xchg   edx,eax
  40f82b:	addr16 mov bh,0xc0
  40f82e:	and    esp,DWORD PTR [ebp+0x25]
  40f831:	push   0x6a2d8b80
  40f836:	mov    al,0xce
  40f838:	in     al,dx
  40f839:	das    
  40f83a:	jmp    0xd08f:0x6c7102f0
  40f841:	and    al,0x5f
  40f843:	mov    DWORD PTR [eax],0x4fee7fe6
  40f849:	pop    es
  40f84a:	inc    ecx
  40f84b:	in     eax,0xc0
  40f84d:	cmp    eax,DWORD PTR [ebx+0x6f3c8654]
  40f853:	push   ecx
  40f854:	add    eax,0x1d9f99e5
  40f859:	shl    BYTE PTR [edi+0x76d10a61],1
  40f85f:	inc    esp
  40f860:	adc    edx,DWORD PTR [ebx+0x5]
  40f863:	push   0x5f9146c1
  40f868:	aas    
  40f869:	or     al,0x9b
  40f86b:	jecxz  0x40f8b1
  40f86d:	js     0x40f8b1
  40f86f:	sbb    DWORD PTR ss:[ebx-0x33],ebp
  40f873:	mov    dl,BYTE PTR [edx+0x2]
  40f876:	stos   DWORD PTR es:[edi],eax
  40f877:	xchg   edi,eax
  40f878:	and    dl,al
  40f87a:	ins    BYTE PTR es:[edi],dx
  40f87b:	sub    bh,BYTE PTR [ebp+0x37eb12f9]
  40f881:	mov    dl,0xb8
  40f883:	push   esi
  40f884:	sub    bh,BYTE PTR [edx-0x50]
  40f887:	inc    edi
  40f888:	mov    ah,0x87
  40f88a:	xor    ebp,DWORD PTR [edx+edx*1]
  40f88d:	adc    al,0xf8
  40f88f:	fisubr WORD PTR [eax-0x66c1b473]
  40f895:	ss and dh,bh
  40f898:	mov    ch,0x61
  40f89a:	jno    0x40f8ef
  40f89c:	lea    esp,[ebx+eiz*8-0x1b]
  40f8a0:	dec    esp
  40f8a1:	mov    BYTE PTR [ebp-0x79],bl
  40f8a4:	or     DWORD PTR [ebx-0x22],ecx
  40f8a7:	out    dx,eax
  40f8a8:	or     eax,0x8cd0f25d
  40f8ad:	cld    
  40f8ae:	mov    bh,0xe4
  40f8b0:	cdq    
  40f8b1:	xor    BYTE PTR [edx-0x13],ch
  40f8b4:	in     al,dx
  40f8b5:	out    dx,al
  40f8b6:	loope  0x40f853
  40f8b8:	add    BYTE PTR [ecx+ecx*1-0x66],0x79
  40f8bd:	mov    eax,0x24b399ea
  40f8c2:	scas   al,BYTE PTR es:[edi]
  40f8c3:	inc    ecx
  40f8c4:	xchg   esp,eax
  40f8c5:	adc    DWORD PTR [esi-0x3c15c146],0xcaa37468
  40f8cf:	mov    edx,0xe6d1e6c1
  40f8d4:	not    dl
  40f8d6:	sbb    al,0xb0
  40f8d8:	in     eax,dx
  40f8d9:	push   ebp
  40f8da:	ret    0xbd7c
  40f8dd:	push   esp
  40f8de:	mov    BYTE PTR [ebx-0x44b12b47],dh
  40f8e4:	call   0x2f53:0x9768ca78
  40f8eb:	xor    dh,BYTE PTR [ebx]
  40f8ed:	push   esi
  40f8ee:	or     al,0xc5
  40f8f0:	sar    BYTE PTR [ebx-0x5e1c0352],1
  40f8f6:	lahf   
  40f8f7:	cs ds mov dl,0xea
  40f8fb:	inc    ecx
  40f8fc:	mov    ch,0x2
  40f8fe:	sbb    ebx,ebx
  40f900:	push   esp
  40f901:	xor    dh,al
  40f903:	add    bh,BYTE PTR [edx]
  40f905:	sub    bl,BYTE PTR cs:[esp+eax*4+0x7115bc22]
  40f90d:	pop    esp
  40f90e:	mov    edi,0x67e33e2
  40f913:	loop   0x40f8e8
  40f915:	pop    ebx
  40f916:	cmp    eax,0xc63b81fd
  40f91b:	xchg   ecx,eax
  40f91c:	xchg   edi,eax
  40f91d:	mov    bl,BYTE PTR [ebx+ecx*8]
  40f920:	sbb    ebp,DWORD PTR [esi-0x3b704ff1]
  40f926:	div    DWORD PTR [edi+0x4f]
  40f929:	popf   
  40f92a:	cmp    cl,BYTE PTR [edi]
  40f92c:	test   al,0xcc
  40f92e:	fucomip st,st(3)
  40f930:	ret    
  40f931:	sub    al,0x15
  40f933:	mov    WORD PTR [ecx+0x49],fs
  40f936:	mov    dh,BYTE PTR [edi+0x1904d2e]
  40f93c:	xchg   edx,ecx
  40f93e:	push   es
  40f93f:	arpl   WORD PTR [eax-0x45455cac],cx
  40f945:	mov    WORD PTR [eax-0x2d],es
  40f948:	add    ebx,DWORD PTR [edi+0x2d]
  40f94b:	lods   eax,DWORD PTR ds:[esi]
  40f94c:	push   0xa35d900b
  40f951:	inc    esi
  40f952:	jp     0x40f93f
  40f954:	aam    0xc2
  40f956:	jl     0x40f910
  40f958:	pop    edx
  40f959:	mov    al,BYTE PTR [edx]
  40f95b:	pop    ebx
  40f95c:	cmp    al,0x43
  40f95e:	cdq    
  40f95f:	pop    edi
  40f960:	mov    esp,0xd5379acc
  40f965:	retf   
  40f966:	in     eax,0x8d
  40f968:	scas   eax,DWORD PTR es:[edi]
  40f969:	les    eax,FWORD PTR [ebx-0x6d]
  40f96c:	mov    dl,0xaa
  40f96e:	aam    0xcb
  40f970:	fisubr WORD PTR [eax+0xe318c06]
  40f976:	dec    esp
  40f977:	or     ah,dh
  40f979:	outs   dx,DWORD PTR ds:[esi]
  40f97a:	in     al,0x78
  40f97c:	pop    ds
  40f97d:	hlt    
  40f97e:	stos   DWORD PTR es:[edi],eax
  40f97f:	mov    edx,0xf6e5c82f
  40f984:	and    dh,0x39
  40f987:	out    dx,eax
  40f988:	loope  0x40f90b
  40f98a:	je     0x40f974
  40f98c:	je     0x40f9df
  40f98e:	xchg   esi,eax
  40f98f:	clc    
  40f990:	in     eax,dx
  40f991:	(bad)  
  40f992:	icebp  
  40f993:	ins    DWORD PTR es:[edi],dx
  40f994:	mov    dl,0x1e
  40f996:	hlt    
  40f997:	test   BYTE PTR [ecx],dh
  40f999:	fidiv  WORD PTR ds:[ebp+0x5e]
  40f99d:	pushf  
  40f99e:	mov    ds:0x53d56597,eax
  40f9a3:	cld    
  40f9a4:	adc    ebx,0x1177892a
  40f9aa:	cmp    ecx,edi
  40f9ac:	std    
  40f9ad:	pop    ebp
  40f9ae:	jb     0x40f9a4
  40f9b0:	jl     0x40f9b5
  40f9b2:	icebp  
  40f9b3:	shl    DWORD PTR [edi-0x37c3256e],1
  40f9b9:	mov    es,WORD PTR [ebp+0x26]
  40f9bc:	fnsave [edi*2+0x25e3b7f5]
  40f9c3:	dec    edi
  40f9c4:	sub    eax,0x5dcf1883
  40f9c9:	mov    bl,0xe1
  40f9cb:	sub    DWORD PTR [edx-0x3565cf0d],0xf66442dd
  40f9d5:	sub    eax,0xa0f6cdc8
  40f9da:	iret   
  40f9db:	push   esi
  40f9dc:	stos   DWORD PTR es:[edi],eax
  40f9dd:	mov    ah,0x34
  40f9df:	add    DWORD PTR cs:[edi-0x13281213],ecx
  40f9e6:	loop   0x40fa1f
  40f9e8:	pop    edi
  40f9e9:	in     al,0x71
  40f9eb:	sysenter 
  40f9ed:	ins    DWORD PTR es:[edi],dx
  40f9ee:	pop    eax
  40f9ef:	ret    
  40f9f0:	and    eax,DWORD PTR [eax+ecx*4]
  40f9f3:	int3   
  40f9f4:	shr    DWORD PTR [edi+ecx*1+0x72e30e0d],0x37
  40f9fc:	mov    al,ds:0xdd81c39a
  40fa01:	sbb    DWORD PTR [ecx],ecx
  40fa03:	loop   0x40fa25
  40fa05:	xor    edx,edx
  40fa07:	icebp  
  40fa08:	hlt    
  40fa09:	xor    esp,edi
  40fa0b:	xor    al,0x5f
  40fa0d:	xchg   ebx,eax
  40fa0e:	cmp    ebx,DWORD PTR [eax-0x6b]
  40fa11:	std    
  40fa12:	xor    bl,ch
  40fa14:	mov    gs,esi
  40fa16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa17:	mov    ds:0x34a697f0,eax
  40fa1c:	pusha  
  40fa1d:	xchg   esp,eax
  40fa1e:	jo     0x40fa87
  40fa20:	push   es
  40fa21:	fisub  DWORD PTR [eax+0x78]
  40fa24:	jb     0x40fa2e
  40fa26:	xlat   BYTE PTR ds:[ebx]
  40fa27:	scas   eax,DWORD PTR es:[edi]
  40fa28:	nop
  40fa29:	sbb    dl,0xce
  40fa2c:	push   ebp
  40fa2d:	mov    al,ds:0xf61acc22
  40fa32:	fucomi st,st(2)
  40fa34:	push   ds
  40fa35:	xor    cl,bh
  40fa37:	inc    ebx
  40fa38:	mov    dl,BYTE PTR [esi]
  40fa3a:	push   ebx
  40fa3b:	aaa    
  40fa3c:	lahf   
  40fa3d:	outs   dx,BYTE PTR ds:[esi]
  40fa3e:	(bad)  
  40fa3f:	xor    eax,0x720dc51
  40fa44:	and    BYTE PTR [ecx-0x2a],al
  40fa47:	or     ch,BYTE PTR [esi]
  40fa49:	iret   
  40fa4a:	xor    esp,ecx
  40fa4c:	push   edx
  40fa4d:	pushf  
  40fa4e:	shl    BYTE PTR [eax*8+0x5d03b9cb],1
  40fa55:	scas   al,BYTE PTR es:[edi]
  40fa56:	test   esi,esi
  40fa58:	fidiv  WORD PTR [edx]
  40fa5a:	das    
  40fa5b:	neg    DWORD PTR [ebx]
  40fa5d:	jnp    0x40fabe
  40fa5f:	mov    ah,ah
  40fa61:	sbb    cl,BYTE PTR [edi+esi*1]
  40fa64:	sub    BYTE PTR [ebp-0x4f],dh
  40fa67:	mov    ebp,0x272ccb0e
  40fa6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa6d:	outs   dx,BYTE PTR ds:[esi]
  40fa6e:	popf   
  40fa6f:	rcr    DWORD PTR [edx+esi*8-0x51],1
  40fa73:	repnz ins BYTE PTR es:[edi],dx
  40fa75:	or     BYTE PTR [edx],ch
  40fa77:	push   0xffffffde
  40fa79:	js     0x40fa62
  40fa7b:	jbe    0x40fa47
  40fa7d:	cld    
  40fa7e:	mov    WORD PTR [esi-0x6c1e2d2d],ss
  40fa84:	icebp  
  40fa85:	push   ds
  40fa86:	adc    eax,0x773a6b33
  40fa8b:	js     0x40fa40
  40fa8d:	xchg   ecx,eax
  40fa8e:	popf   
  40fa8f:	popa   
  40fa90:	aas    
  40fa91:	je     0x40fa46
  40fa93:	dec    edi
  40fa94:	int3   
  40fa95:	and    BYTE PTR [edx],dh
  40fa97:	leave  
  40fa98:	cmp    dl,BYTE PTR [edx+0x4b086c48]
  40fa9e:	repz mov esi,0x4efa65f5
  40faa4:	fcomp  DWORD PTR [esi-0x75]
  40faa7:	mov    edi,0x5800bdff
  40faac:	fld    TBYTE PTR [edx-0x51]
  40faaf:	loop   0x40fa63
  40fab1:	imul   ebx,DWORD PTR [ecx],0x17
  40fab4:	retf   0x2ba0
  40fab7:	stc    
  40fab8:	pop    ecx
  40fab9:	jnp    0x40faa6
  40fabb:	ja     0x40fb0a
  40fabd:	aad    0x84
  40fabf:	xchg   edi,eax
  40fac0:	ins    BYTE PTR es:[edi],dx
  40fac1:	adc    BYTE PTR [ebx],0x12
  40fac4:	and    DWORD PTR [edi+0x3c13f38c],edx
  40faca:	and    bl,BYTE PTR [eax+0xb]
  40facd:	or     eax,0xc984f58a
  40fad2:	imul   esi,ebp,0xffffff89
  40fad5:	sub    edx,DWORD PTR [esp+edx*8-0x11]
  40fad9:	mov    al,es:0xf10332df
  40fadf:	leave  
  40fae0:	(bad)  
  40fae1:	out    dx,al
  40fae2:	mov    ah,0xc2
  40fae4:	pop    ds
  40fae5:	adc    BYTE PTR [esi],0xb2
  40fae8:	lock (bad) 
  40faea:	clc    
  40faeb:	sbb    eax,0xe6a683a2
  40faf0:	pop    ecx
  40faf1:	int3   
  40faf2:	xchg   ecx,eax
  40faf3:	or     dl,BYTE PTR [eax+0x36]
  40faf6:	and    DWORD PTR [ecx+0x2f],eax
  40faf9:	test   al,0x34
  40fafb:	xchg   BYTE PTR [eax],bl
  40fafd:	jle    0x40fb18
  40faff:	sti    
  40fb00:	cdq    
  40fb01:	aad    0x81
  40fb03:	adc    eax,0xc679de69
  40fb08:	push   ebp
  40fb09:	xor    dl,BYTE PTR [ebp-0x76fc8e66]
  40fb0f:	jno    0x40fabf
  40fb11:	pushf  
  40fb12:	aas    
  40fb13:	dec    esi
  40fb14:	popa   
  40fb15:	inc    ecx
  40fb16:	mov    al,ds:0x843a77b3
  40fb1b:	sub    DWORD PTR [ebx+edi*1],edx
  40fb1e:	mov    esp,0x82301d4d
  40fb23:	xchg   ebx,eax
  40fb24:	xchg   esi,eax
  40fb25:	add    al,dl
  40fb27:	push   ds
  40fb28:	pop    ds
  40fb29:	pop    esp
  40fb2a:	cmp    DWORD PTR [eax-0x50afe234],esi
  40fb30:	dec    esp
  40fb31:	push   ebx
  40fb32:	and    al,0xc
  40fb34:	(bad)
  40fb37:	rol    BYTE PTR [ebx-0x44f23d7c],0x1d
  40fb3e:	xor    dl,bh
  40fb40:	add    bl,BYTE PTR [esi+0x26c220d5]
  40fb46:	jnp    0x40fba6
  40fb48:	mov    ebx,0xbb210e8c
  40fb4d:	out    dx,al
  40fb4e:	mov    esi,0x250093ea
  40fb53:	fneni(8087 only) 
  40fb55:	mov    al,BYTE PTR [eax+edi*8+0x42448411]
  40fb5c:	cmp    al,0xc0
  40fb5e:	sbb    bh,cl
  40fb60:	call   0x2ae2af7e
  40fb65:	jb     0x40fb9f
  40fb67:	test   esi,ebp
  40fb69:	and    eax,0x32630b23
  40fb6e:	in     al,dx
  40fb6f:	add    BYTE PTR [esi+0x71bc8984],0xd2
  40fb76:	cmp    eax,edi
  40fb78:	sbb    ebx,DWORD PTR [ebp-0x6a]
  40fb7b:	(bad)  
  40fb7c:	jg     0x40fb14
  40fb7e:	test   DWORD PTR [esi],edx
  40fb80:	or     bl,dh
  40fb82:	push   esi
  40fb83:	pop    esi
  40fb84:	add    al,0x64
  40fb86:	data16 (bad) 
  40fb88:	dec    edx
  40fb89:	sahf   
  40fb8a:	into   
  40fb8b:	mov    esp,0x68e14a05
  40fb90:	jno    0x40fb5f
  40fb92:	xor    DWORD PTR [esi+esi*1+0x2e],0x823bd228
  40fb9a:	sub    eax,0x9f300c7e
  40fb9f:	mov    WORD PTR [ecx],ds
  40fba1:	es xlat BYTE PTR fs:[ebx]
  40fba4:	add    eax,0x84b914a6
  40fba9:	cmp    ecx,ecx
  40fbab:	mov    eax,0x7f44597f
  40fbb0:	mov    WORD PTR [edi+0x36],ss
  40fbb3:	mov    ebx,0xd596b9bc
  40fbb8:	dec    eax
  40fbb9:	mov    esp,0x12bf04a7
  40fbbe:	(bad)  
  40fbbf:	xchg   BYTE PTR [eax-0x68b79af4],bh
  40fbc5:	fimul  DWORD PTR [ebp-0x70c2b091]
  40fbcb:	cmp    edi,DWORD PTR [edx]
  40fbcd:	add    DWORD PTR [edx+0xc],esi
  40fbd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbd1:	xchg   BYTE PTR [edx],al
  40fbd3:	(bad)  
  40fbd4:	call   0x859f:0x2ba7ca5a
  40fbdb:	pop    esp
  40fbdc:	push   edx
  40fbdd:	fild   QWORD PTR [ebp-0x7787ddec]
  40fbe3:	jle    0x40fc2b
  40fbe5:	aaa    
  40fbe6:	daa    
  40fbe7:	mov    ebx,0x382c72c8
  40fbec:	test   eax,0x95f16444
  40fbf1:	xchg   ebx,eax
  40fbf2:	mov    ecx,0xe3c6d45d
  40fbf7:	icebp  
  40fbf8:	fiadd  DWORD PTR [edx+ebp*1]
  40fbfb:	sahf   
  40fbfc:	inc    eax
  40fbfd:	loop   0x40fb83
  40fbff:	sar    DWORD PTR [edx-0xe276469],0xf2
  40fc06:	xor    al,0xd5
  40fc08:	sbb    DWORD PTR [eax*2-0x2ba18719],edi
  40fc0f:	repz (bad) 
  40fc11:	shl    BYTE PTR [ebx+esi*1+0x21],1
  40fc15:	ja     0x40fc0c
  40fc17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc19:	lea    ebp,[ebp-0x41]
  40fc1c:	xchg   BYTE PTR [ebp-0x53338a39],bl
  40fc22:	xor    ebx,ebp
  40fc24:	pop    es
  40fc25:	lods   eax,DWORD PTR ds:[esi]
  40fc26:	shl    DWORD PTR [ecx],1
  40fc28:	adc    eax,0x810d2f8a
  40fc2d:	js     0x40fbba
  40fc2f:	vxorps ymm6,ymm7,YMMWORD PTR [edx-0x24]
  40fc34:	out    0x25,eax
  40fc36:	inc    esi
  40fc37:	and    ch,bl
  40fc39:	popf   
  40fc3a:	dec    ecx
  40fc3b:	cmp    al,ch
  40fc3d:	pop    ecx
  40fc3e:	mov    ds:0xdcf4eaae,eax
  40fc43:	pop    ebp
  40fc44:	add    DWORD PTR ds:0x8968926e,ebx
  40fc4a:	adc    DWORD PTR [ebx],0x3b
  40fc4d:	mov    cl,0x6c
  40fc4f:	mov    esp,0x7db6268e
  40fc54:	dec    esi
  40fc55:	jecxz  0x40fc34
  40fc57:	fadd   DWORD PTR [ebp-0x5870cf40]
  40fc5d:	int    0x94
  40fc5f:	add    bh,BYTE PTR [ecx+ecx*8]
  40fc62:	mov    ch,0xf3
  40fc64:	mul    BYTE PTR [ecx-0x16]
  40fc67:	in     eax,0xfe
  40fc69:	xor    eax,0x2baba470
  40fc6e:	jb     0x40fc1e
  40fc70:	(bad)  [ecx]
  40fc72:	clc    
  40fc73:	inc    esp
  40fc74:	push   esp
  40fc75:	sub    ah,BYTE PTR [esi+0x6d]
  40fc78:	pushf  
  40fc79:	cmp    eax,0x4a011bf8
  40fc7e:	(bad)  
  40fc7f:	jecxz  0x40fc25
  40fc81:	in     al,dx
  40fc82:	dec    esi
  40fc83:	sbb    edi,DWORD PTR [ecx]
  40fc85:	fwait
  40fc86:	jp     0x40fc4d
  40fc88:	cmp    DWORD PTR [ebp+0xa],esi
  40fc8b:	xor    esp,DWORD PTR [esi-0x5db61f39]
  40fc91:	es cld 
  40fc93:	imul   edx,DWORD PTR [eax-0x48],0xf2afee9b
  40fc9a:	inc    esi
  40fc9b:	jle    0x40fcf6
  40fc9d:	int    0x32
  40fc9f:	sar    BYTE PTR [ecx-0x1],cl
  40fca2:	repnz mov ecx,0xb3fa5e81
  40fca8:	stc    
  40fca9:	mov    esi,0x6e8b78da
  40fcae:	mov    dh,0x65
  40fcb0:	jo     0x40fc53
  40fcb2:	mov    esp,0xb8d143dd
  40fcb7:	addr16 pop esp
  40fcb9:	les    ebp,FWORD PTR [edx]
  40fcbb:	add    eax,0x403254c5
  40fcc0:	xor    eax,0x102febfb
  40fcc5:	pop    esp
  40fcc6:	mov    eax,ds:0xdae4a758
  40fccb:	nop
  40fccc:	les    esi,FWORD PTR [esi-0x5f679ddc]
  40fcd2:	ds hlt 
  40fcd4:	or     eax,0x7b94a294
  40fcd9:	mov    esp,0xad69fe8f
  40fcde:	int3   
  40fcdf:	mov    ecx,0xdf80adab
  40fce4:	mov    esp,0x1d6d0fac
  40fce9:	ja     0x40fd39
  40fceb:	imul   esi,DWORD PTR [ecx+0x28149160],0xffffff95
  40fcf2:	and    eax,DWORD PTR [eax]
  40fcf4:	inc    ebx
  40fcf5:	retf   0xa71a
  40fcf8:	loop   0x40fd1b
  40fcfa:	test   BYTE PTR [ecx+0x5a],0x59
  40fcfe:	sbb    edi,DWORD PTR [ecx+0x32]
  40fd01:	retf   
  40fd02:	xchg   esp,eax
  40fd03:	mov    cl,0x83
  40fd05:	xchg   edi,eax
  40fd06:	add    eax,0x46922820
  40fd0b:	jg     0x40fd80
  40fd0d:	test   eax,0x51ca67c0
  40fd12:	xchg   ecx,eax
  40fd13:	(bad)  
  40fd14:	push   DWORD PTR [edi+0x56]
  40fd17:	mov    edi,0x8c3b6fb
  40fd1c:	push   esp
  40fd1d:	fsub   QWORD PTR [esi+0x7b8f3982]
  40fd23:	pop    esp
  40fd24:	lea    eax,[ebx]
  40fd26:	xlat   BYTE PTR ds:[ebx]
  40fd27:	mov    bl,0xb5
  40fd29:	sbb    DWORD PTR [esi+0x6],ebp
  40fd2c:	cld    
  40fd2d:	pusha  
  40fd2e:	jns    0x40fce1
  40fd30:	sub    BYTE PTR [ecx-0x1c],ah
  40fd33:	inc    ecx
  40fd34:	fs push ebx
  40fd36:	rol    DWORD PTR [ebx],1
  40fd38:	arpl   WORD PTR [ebp-0x57],bp
  40fd3b:	in     al,0x62
  40fd3d:	das    
  40fd3e:	pop    ecx
  40fd3f:	ret    
  40fd40:	stc    
  40fd41:	inc    esp
  40fd42:	xchg   esp,eax
  40fd43:	push   edx
  40fd44:	and    esi,ecx
  40fd46:	mov    ebp,0xa8cb1bb9
  40fd4b:	add    DWORD PTR [eax+0x35],0xffffffa8
  40fd4f:	jno    0x40fce5
  40fd51:	iret   
  40fd52:	into   
  40fd53:	ins    BYTE PTR es:[edi],dx
  40fd54:	scas   al,BYTE PTR es:[edi]
  40fd55:	xlat   BYTE PTR ds:[ebx]
  40fd56:	push   edx
  40fd57:	xor    BYTE PTR [ebp-0xde08bf9],dl
  40fd5d:	gs mov ebx,gs
  40fd60:	hlt    
  40fd61:	test   BYTE PTR [ecx],cl
  40fd63:	les    edx,FWORD PTR [ecx]
  40fd65:	stos   DWORD PTR es:[edi],eax
  40fd66:	imul   edx,eax,0x2e3e694b
  40fd6c:	ret    0x72e6
  40fd6f:	mov    ecx,0x3ad2896d
  40fd74:	and    BYTE PTR [eax+0x2b00e2ed],ah
  40fd7a:	inc    ebx
  40fd7b:	int3   
  40fd7c:	pop    edi
  40fd7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd7e:	call   0x2d51:0x1774311b
  40fd85:	retf   
  40fd86:	push   ebp
  40fd87:	jbe    0x40fd29
  40fd89:	inc    eax
  40fd8a:	inc    ebp
  40fd8b:	lock push esp
  40fd8d:	std    
  40fd8e:	jns    0x40fdc2
  40fd90:	jbe    0x40fd8e
  40fd92:	aaa    
  40fd93:	stos   DWORD PTR es:[edi],eax
  40fd94:	mov    edi,0xc57b3871
  40fd99:	add    BYTE PTR [esp+ebp*4],cl
  40fd9c:	push   cs
  40fd9d:	repnz fsub QWORD PTR [edi+0x44ed790a]
  40fda4:	rcl    DWORD PTR [ebx+edx*4+0x642b4360],cl
  40fdab:	add    ax,0x26c5
  40fdaf:	js     0x40fdc0
  40fdb1:	xor    cl,BYTE PTR [ebx]
  40fdb3:	dec    ecx
  40fdb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdb5:	dec    edx
  40fdb6:	mov    esi,esi
  40fdb8:	pop    esi
  40fdb9:	push   ss
  40fdba:	mov    esp,0xf9660436
  40fdbf:	add    esp,DWORD PTR [esi+0x1c]
  40fdc2:	xchg   ecx,eax
  40fdc3:	mov    edi,0x5489132d
  40fdc8:	mov    esp,0xb67664d8
  40fdcd:	aaa    
  40fdce:	(bad)  
  40fdcf:	scas   eax,DWORD PTR es:[edi]
  40fdd0:	scas   al,BYTE PTR es:[edi]
  40fdd1:	sbb    DWORD PTR ds:0x7b25cb90,edx
  40fdd7:	sbb    eax,0x8e71bc49
  40fddc:	retf   
  40fddd:	out    0x91,eax
  40fddf:	pop    es
  40fde0:	imul   ebp,DWORD PTR [ebp+0x288253d8],0xbcf1de44
  40fdea:	dec    edi
  40fdeb:	leave  
  40fdec:	das    
  40fded:	jl     0x40fdcd
  40fdef:	mov    bl,0x7f
  40fdf1:	add    eax,0x704abb0d
  40fdf6:	inc    edi
  40fdf7:	xchg   edx,eax
  40fdf8:	outs   dx,BYTE PTR ds:[esi]
  40fdf9:	les    edi,FWORD PTR [esi+eiz*4-0x131ede97]
  40fe00:	adc    BYTE PTR [edi+0x7c355069],dl
  40fe06:	pop    esi
  40fe07:	add    al,0x17
  40fe09:	sbb    bl,cl
  40fe0b:	sti    
  40fe0c:	sub    DWORD PTR [edx],eax
  40fe0e:	sbb    eax,DWORD PTR [eax+0x56e19299]
  40fe14:	pop    ss
  40fe15:	in     al,dx
  40fe16:	fist   DWORD PTR [ebx+0x1c5663dc]
  40fe1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe1d:	jnp    0x40fdab
  40fe1f:	add    al,0xde
  40fe21:	sbb    al,0xca
  40fe23:	fimul  WORD PTR [ecx-0x45]
  40fe26:	int3   
  40fe27:	ds call 0xb217:0x8b57b707
  40fe2f:	bound  edi,QWORD PTR [ecx+0x2a]
  40fe32:	dec    edi
  40fe33:	inc    edi
  40fe34:	push   0xffffff82
  40fe36:	cmp    ebx,ebx
  40fe38:	mov    esp,0x1773685d
  40fe3d:	xor    BYTE PTR [esi+0x1b],0x70
  40fe41:	mov    esi,0xd942b549
  40fe46:	sti    
  40fe47:	sbb    ebp,esp
  40fe49:	std    
  40fe4a:	jne    0x40fe6d
  40fe4c:	cmc    
  40fe4d:	cld    
  40fe4e:	je     0x40fe88
  40fe50:	sbb    eax,0x114fdc13
  40fe55:	and    DWORD PTR [edi+0x4a],0x7fc99687
  40fe5c:	pop    esp
  40fe5d:	xor    al,0xbf
  40fe5f:	adc    cl,BYTE PTR [ebx+ebx*1-0x75]
  40fe63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe64:	cmp    BYTE PTR [eax+eax*4],bh
  40fe67:	out    0xf0,al
  40fe69:	clc    
  40fe6a:	sub    ah,BYTE PTR [edi-0x72]
  40fe6d:	(bad)  
  40fe6e:	iret   
  40fe6f:	xchg   ebp,eax
  40fe70:	inc    edi
  40fe71:	push   ss
  40fe72:	jmp    0x40feb6
  40fe74:	arpl   WORD PTR [eax+0x1348d11a],sp
  40fe7a:	mov    WORD PTR [ebx-0x16],fs
  40fe7d:	loope  0x40fe3f
  40fe7f:	xlat   BYTE PTR ds:[ebx]
  40fe80:	add    al,0x68
  40fe82:	popf   
  40fe83:	gs inc eax
  40fe85:	out    0x42,eax
  40fe87:	or     BYTE PTR [ebx+esi*8],cl
  40fe8a:	aad    0xa5
  40fe8c:	xor    eax,0x70b2e837
  40fe91:	std    
  40fe92:	arpl   WORD PTR [edi+ecx*8],bx
  40fe95:	pop    ss
  40fe96:	pop    ebp
  40fe97:	push   0x3f
  40fe99:	mov    ebx,0xe04149ad
  40fe9e:	pop    ebx
  40fe9f:	les    ebx,FWORD PTR ds:0x58ef1a45
  40fea5:	fnstcw WORD PTR [edi]
  40fea7:	out    0x3b,eax
  40fea9:	pop    ebx
  40feaa:	and    edi,ecx
  40feac:	cmp    DWORD PTR [ebp-0x62],edx
  40feaf:	cs out 0xbb,eax
  40feb2:	dec    esi
  40feb3:	xor    al,0xd
  40feb5:	pop    es
  40feb6:	xchg   edi,eax
  40feb7:	lock mov esi,0xfd7bce70
  40febd:	leave  
  40febe:	pop    eax
  40febf:	lods   eax,DWORD PTR ds:[esi]
  40fec0:	jnp    0x40ff06
  40fec2:	jne    0x40fea1
  40fec4:	and    al,0xe4
  40fec6:	daa    
  40fec7:	fsub   st,st(1)
  40fec9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40feca:	fst    QWORD PTR [ebx-0x1957801e]
  40fed0:	push   es
  40fed1:	fcmovne st,st(5)
  40fed3:	stos   BYTE PTR es:[edi],al
  40fed4:	and    al,0x3c
  40fed6:	out    0xae,al
  40fed8:	adc    al,0xf1
  40feda:	inc    esp
  40fedb:	mov    eax,0x1c6ede6f
  40fee0:	dec    ecx
  40fee1:	repz iret 
  40fee3:	and    esp,ebx
  40fee5:	rcl    DWORD PTR [esi-0x204fe2fa],0x4d
  40feec:	popf   
  40feed:	sbb    eax,0x7476913e
  40fef2:	sub    eax,0xe0b54589
  40fef7:	mov    edi,0x2848f586
  40fefc:	dec    ecx
  40fefd:	or     al,0xdc
  40feff:	pushw  cs
  40ff01:	ds test al,0x32
  40ff04:	out    0xf3,al
  40ff06:	dec    esp
  40ff07:	jbe    0x40fedf
  40ff09:	repz hlt 
  40ff0b:	and    dl,BYTE PTR [edx-0xe]
  40ff0e:	stos   BYTE PTR es:[edi],al
  40ff0f:	das    
  40ff10:	xchg   ecx,eax
  40ff11:	dec    ebx
  40ff12:	addr16 dec edi
  40ff14:	les    edx,FWORD PTR [esi]
  40ff16:	and    dl,al
  40ff18:	jnp    0x40feb9
  40ff1a:	mov    bl,0x6c
  40ff1c:	daa    
  40ff1d:	sub    cl,BYTE PTR [eax]
  40ff1f:	sbb    al,al
  40ff21:	icebp  
  40ff22:	js     0x40fee2
  40ff24:	mov    ds:0x8caca977,al
  40ff29:	test   al,0x24
  40ff2b:	loopne 0x40ff1e
  40ff2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff2e:	push   eax
  40ff2f:	sub    eax,0x7f9cb9d8
  40ff34:	pop    ebp
  40ff35:	test   al,0x7d
  40ff37:	and    eax,0xde634e9e
  40ff3c:	xor    BYTE PTR [ecx-0x68e07c24],al
  40ff42:	addr16 or eax,0xf3f37b2e
  40ff48:	imul   esp,DWORD PTR [eax+0x589d3a6f],0x72
  40ff4f:	jno    0x40ff71
  40ff51:	sbb    al,0x41
  40ff53:	mov    edi,0xa4f27ff1
  40ff58:	ficom  WORD PTR [esi+0x5e]
  40ff5b:	nop
  40ff5c:	or     eax,0x46b6d5
  40ff61:	jge    0x40ffdc
  40ff63:	sub    al,0x51
  40ff65:	sub    DWORD PTR [ebp+0x1],esp
  40ff68:	sub    al,0x88
  40ff6a:	outs   dx,DWORD PTR ds:[esi]
  40ff6b:	pushf  
  40ff6c:	xchg   ecx,eax
  40ff6d:	cmc    
  40ff6e:	mov    ecx,0x42623eb
  40ff73:	into   
  40ff74:	aaa    
  40ff75:	cmp    ebp,DWORD PTR [esi]
  40ff77:	and    DWORD PTR [edx+0x701a826c],esi
  40ff7d:	fisub  WORD PTR [esi+edi*4]
  40ff80:	mov    ecx,0x2adf1cc8
  40ff85:	jmp    0xeea75601
  40ff8a:	push   ss
  40ff8b:	mov    ebx,ecx
  40ff8d:	inc    ebx
  40ff8e:	sbb    eax,0xedb7a1e5
  40ff93:	shl    BYTE PTR [edx],1
  40ff95:	inc    ebp
  40ff96:	pop    edi
  40ff97:	or     WORD PTR [ebx+ecx*1],sp
  40ff9b:	push   edi
  40ff9c:	loope  0x40ffd8
  40ff9e:	mov    dh,0x28
  40ffa0:	nop
  40ffa1:	stc    
  40ffa2:	stos   DWORD PTR es:[edi],eax
  40ffa3:	jmp    0x40ffaa
  40ffa5:	pop    ds
  40ffa6:	dec    eax
  40ffa7:	xor    eax,0x31af2500
  40ffac:	loope  0x40ff3b
  40ffae:	shl    DWORD PTR [ecx-0x71113e74],cl
  40ffb4:	cmp    DWORD PTR [edx-0x1f695fc6],esp
  40ffba:	mul    esi
  40ffbc:	sti    
  40ffbd:	or     al,0x7a
  40ffbf:	add    al,0x50
  40ffc1:	adc    edi,DWORD PTR [esi-0x1c]
  40ffc4:	xchg   ebx,eax
  40ffc5:	(bad)  [ebx+0x3f4b2f]
  40ffcb:	adc    DWORD PTR [esi-0x326e2125],ebx
  40ffd1:	out    0x8a,eax
  40ffd3:	sbb    dh,dl
  40ffd5:	pop    ebp
  40ffd6:	lahf   
  40ffd7:	sub    eax,0x444c68d9
  40ffdc:	lahf   
  40ffdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffde:	inc    eax
  40ffdf:	add    eax,0x65f0bb0d
  40ffe4:	stos   DWORD PTR es:[edi],eax
  40ffe5:	dec    esp
  40ffe6:	jb     0x41004d
  40ffe8:	dec    ecx
  40ffe9:	repz or eax,0x9b2f0a1a
  40ffef:	out    dx,al
  40fff0:	js     0x410043
  40fff2:	and    BYTE PTR [ebx+ebp*1],ch
  40fff5:	inc    edi
  40fff6:	push   es
  40fff7:	repnz pop es
  40fff9:	xchg   esp,eax
  40fffa:	mov    al,0xa2
  40fffc:	mov    DWORD PTR [ebp+0x1cb8a9cb],eax
  410002:	mov    ch,0xb7
  410004:	cmp    BYTE PTR [edx+0x3a442d84],ch
  41000a:	cmp    BYTE PTR [edx-0x4f7baaee],al
  410010:	mov    ds:0xceb64f2d,eax
  410015:	ret    
  410016:	int3   
  410017:	jnp    0x40ffe4
  410019:	and    al,0xc3
  41001b:	mov    bl,BYTE PTR [edi]
  41001d:	repnz cld 
  41001f:	adc    eax,0x6136a910
  410024:	out    0xc0,eax
  410026:	cmp    DWORD PTR ds:0x3c70d3d7,0xe925cda2
  410030:	xor    eax,DWORD PTR [eax+0x2367ea6c]
  410036:	or     al,0x9b
  410038:	outs   dx,DWORD PTR ds:[esi]
  410039:	in     al,0xc6
  41003b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41003c:	lds    esi,FWORD PTR [ebx+eax*1+0x311908ee]
  410043:	or     BYTE PTR [eax+0x4c],0xdb
  410047:	je     0x40ffeb
  410049:	inc    ebx
  41004a:	push   ecx
  41004b:	rcr    DWORD PTR [eax],cl
  41004d:	or     eax,0xdddc82f5
  410052:	jecxz  0x40fffc
  410054:	pop    ebp
  410055:	or     edx,DWORD PTR [esi]
  410057:	in     al,dx
  410058:	(bad)  
  410059:	xor    DWORD PTR [edi],ecx
  41005b:	jnp    0x4100b6
  41005d:	sbb    eax,0xb381650c
  410062:	loopne 0x4100da
  410064:	fadd   DWORD PTR [edi+0x78481ac7]
  41006a:	es aam 0xd6
  41006d:	lahf   
  41006e:	xor    al,0x28
  410070:	inc    ecx
  410071:	jnp    0x410091
  410073:	pop    ebx
  410074:	mov    al,ds:0xe7b04cbf
  410079:	mov    ecx,0xbb69b89a
  41007e:	cmc    
  41007f:	lea    eax,[ebx-0x60]
  410082:	mov    ah,0x39
  410084:	gs test eax,0x7507bb42
  41008a:	bound  edx,QWORD PTR [ebp-0x86f829f]
  410090:	cs sbb dl,0x4f
  410094:	cmpxchg BYTE PTR [eax],ah
  410097:	dec    esp
  410098:	repnz mov ecx,0xaf73b312
  41009e:	xchg   edx,eax
  41009f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100a0:	iret   
  4100a1:	call   0x681a:0x74cc1178
  4100a8:	jmp    0x410030
  4100aa:	jl     0x41008b
  4100ac:	ror    DWORD PTR [eax],0x84
  4100af:	lods   eax,DWORD PTR ds:[esi]
  4100b0:	jb     0x41004b
  4100b2:	clc    
  4100b3:	dec    edi
  4100b4:	call   0x4e022a65
  4100b9:	cmp    ecx,DWORD PTR [eax]
  4100bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100bc:	mov    ah,0xb3
  4100be:	mov    esi,eax
  4100c0:	scas   al,BYTE PTR es:[edi]
  4100c1:	arpl   WORD PTR [ecx],dx
  4100c3:	jecxz  0x41004b
  4100c5:	mov    ?,WORD PTR [edx+esi*4]
  4100c8:	mov    esi,0xf6af51c0
  4100cd:	fcom   DWORD PTR [esi+0x6d]
  4100d0:	scas   eax,DWORD PTR es:[edi]
  4100d1:	and    DWORD PTR [ecx+0x21916366],esi
  4100d7:	inc    edx
  4100d8:	icebp  
  4100d9:	fucomi st,st(1)
  4100db:	mov    ds:0xa0d7931b,al
  4100e0:	pop    es
  4100e1:	imul   eax,edx,0xffffff8e
  4100e4:	enter  0xe99c,0xcd
  4100e8:	xchg   ebx,eax
  4100e9:	pop    ebp
  4100ea:	pop    ebp
  4100eb:	fucomp st(7)
  4100ed:	mov    ds:0x47f36586,eax
  4100f2:	fisttp WORD PTR [ebx]
  4100f4:	mov    bh,0x89
  4100f6:	in     al,dx
  4100f7:	call   0x40f84174
  4100fc:	aad    0xc7
  4100fe:	sbb    al,0x4a
  410100:	lods   ax,WORD PTR ds:[esi]
  410102:	leave  
  410103:	test   al,0x1d
  410105:	or     al,0xeb
  410107:	(bad)  
  410108:	cwde   
  410109:	mov    ebx,esi
  41010b:	mov    ds:0xdf6bbead,al
  410110:	mov    cl,BYTE PTR [ebp-0x34]
  410113:	inc    esp
  410114:	out    0xe6,eax
  410116:	pop    ecx
  410117:	mov    bl,0xc5
  410119:	push   0xffffffb5
  41011b:	(bad)  [edi]
  41011d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41011e:	outs   dx,DWORD PTR ds:[esi]
  41011f:	cmp    BYTE PTR [esi+0x12],dh
  410122:	adc    DWORD PTR [edx+0x39825f2c],ebx
  410128:	push   ds
  410129:	(bad)  
  41012a:	test   DWORD PTR [esi+0x7ac85767],0x35e52f75
  410134:	jle    0x410113
  410136:	jmp    0x72ff:0x92c64aa
  41013d:	call   0xc560f7cc
  410142:	xor    esi,DWORD PTR [eax-0x3b]
  410145:	in     al,0xe5
  410147:	mov    edi,0xfe20b59
  41014c:	xchg   esi,eax
  41014d:	int    0xdd
  41014f:	jae    0x41011f
  410151:	and    eax,0xb01f1348
  410156:	lock pusha 
  410158:	push   esp
  410159:	xchg   esi,eax
  41015a:	push   ss
  41015b:	neg    BYTE PTR [eax]
  41015d:	ja     0x41010d
  41015f:	jo     0x4101a3
  410161:	pusha  
  410162:	and    ch,0xc7
  410165:	and    cl,BYTE PTR ds:0xaedec72
  41016b:	xchg   edi,eax
  41016c:	dec    esp
  41016d:	dec    esi
  41016e:	sar    DWORD PTR [ebx],cl
  410170:	rcr    DWORD PTR [edi],cl
  410172:	sti    
  410173:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410174:	mov    ebx,0x1108c182
  410179:	add    BYTE PTR [edi-0x68],0xc9
  41017d:	add    BYTE PTR [eax-0x16],cl
  410180:	or     DWORD PTR [ebx],0x0
  410183:	icebp  
  410184:	std    
  410185:	sub    DWORD PTR [ecx-0x64785f88],edx
  41018b:	sbb    ebp,DWORD PTR [esi-0x29]
  41018e:	sar    ch,cl
  410190:	inc    esi
  410191:	cmc    
  410192:	bound  ecx,QWORD PTR [edx+eiz*1+0x7b]
  410196:	pop    esi
  410197:	leave  
  410198:	scas   al,BYTE PTR es:[edi]
  410199:	jmp    FWORD PTR [ebp+0x2f]
  41019c:	adc    eax,0x8bba1d7c
  4101a1:	mov    al,ds:0x481e097f
  4101a6:	pop    edx
  4101a7:	imul   edx,DWORD PTR [ebx-0x353f8ebc],0x54
  4101ae:	sbb    DWORD PTR ds:0x23b6fa9d,ebp
  4101b4:	stos   BYTE PTR es:[edi],al
  4101b5:	inc    edi
  4101b6:	icebp  
  4101b7:	pop    ss
  4101b8:	mov    ch,0xc1
  4101ba:	pop    esp
  4101bb:	xlat   BYTE PTR ds:[ebx]
  4101bc:	dec    esi
  4101bd:	popf   
  4101be:	not    DWORD PTR [esi+eax*2]
  4101c1:	ficomp DWORD PTR [edx-0x22b98d9f]
  4101c7:	jbe    0x410203
  4101c9:	xchg   esp,eax
  4101ca:	adc    eax,0xf2efade3
  4101cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101d0:	mov    al,0x49
  4101d2:	jmp    0x38e8:0xaf60f8a0
  4101d9:	in     al,0xea
  4101db:	mov    ds:0x85bee71a,eax
  4101e0:	mov    cl,0x9c
  4101e2:	aas    
  4101e3:	jmp    0x41017b
  4101e5:	xchg   ecx,eax
  4101e6:	iret   
  4101e7:	add    DWORD PTR [eax],eax
  4101e9:	test   DWORD PTR ds:0x9e4af0a4,ebx
  4101f0:	mov    esp,0xad1a76ca
  4101f5:	aas    
  4101f6:	retf   0x9cda
  4101f9:	shr    BYTE PTR [edx+0x46],0x66
  4101fd:	retf   
  4101fe:	adc    ecx,0xcd3fc28e
  410204:	inc    edi
  410205:	jbe    0x4101a2
  410207:	stc    
  410208:	sub    BYTE PTR [ebx],dh
  41020a:	into   
  41020b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41020c:	or     BYTE PTR [esi],al
  41020e:	mov    al,0x10
  410210:	iret   
  410211:	mov    edi,0xc71664b8
  410216:	jmp    0xf2b1:0xe8bda6b1
  41021d:	dec    edi
  41021e:	mov    cl,0x5d
  410220:	mov    esi,0x61a669fc
  410225:	push   esi
  410226:	jl     0x4101a9
  410228:	fwait
  410229:	ins    DWORD PTR es:[edi],dx
  41022a:	sbb    ecx,ecx
  41022c:	int3   
  41022d:	sti    
  41022e:	dec    ebx
  41022f:	push   ds
  410230:	xor    al,0xd1
  410232:	push   esp
  410233:	sbb    esp,ebp
  410235:	add    DWORD PTR [eax*2-0x756aed5d],edi
  41023c:	cli    
  41023d:	adc    bh,0x3f
  410240:	pusha  
  410241:	cwde   
  410242:	cmp    BYTE PTR [esi+edx*8],0x4b
  410246:	inc    edi
  410247:	xchg   esi,eax
  410248:	pop    es
  410249:	gs jno 0x410215
  41024c:	in     eax,dx
  41024d:	fwait
  41024e:	adc    ebx,DWORD PTR [eax+0x426f7bb]
  410254:	adc    BYTE PTR [ebp-0xa],ah
  410257:	mov    bh,BYTE PTR [ecx]
  410259:	cmp    eax,0xb7e29be9
  41025e:	inc    esi
  41025f:	out    0x24,al
  410261:	mov    DWORD PTR [esi+0x40],0x635bc28b
  410268:	dec    BYTE PTR [edi+0x74]
  41026b:	icebp  
  41026c:	mov    DWORD PTR [ebx-0x57],ecx
  41026f:	test   eax,0x96ea3c01
  410274:	ins    BYTE PTR es:[edi],dx
  410275:	pop    ecx
  410276:	gs cld 
  410278:	fimul  WORD PTR [ebp+edi*1+0x44]
  41027c:	jbe    0x4102eb
  41027e:	pop    ebp
  41027f:	push   esp
  410280:	cmc    
  410281:	sbb    eax,DWORD PTR ds:0x9fc966a4
  410287:	clc    
  410288:	scas   eax,DWORD PTR es:[edi]
  410289:	sbb    eax,0x6ae72c41
  41028e:	jge    0x4102e6
  410290:	retf   0xca55
  410293:	pop    ecx
  410294:	stos   DWORD PTR es:[edi],eax
  410295:	pop    eax
  410296:	mov    ch,0x5e
  410298:	and    ah,BYTE PTR ds:0x87c89506
  41029e:	cld    
  41029f:	fsubr  DWORD PTR [ebx+ebp*4]
  4102a2:	pop    ebp
  4102a3:	pop    ds
  4102a4:	pop    ss
  4102a5:	inc    esp
  4102a6:	adc    bl,BYTE PTR [ecx]
  4102a8:	(bad)  
  4102a9:	and    BYTE PTR fs:[edi+0x4a],bh
  4102ad:	and    BYTE PTR [esi-0x1f],dh
  4102b0:	adc    DWORD PTR [ebp-0xd0e1154],ebp
  4102b6:	mov    ds:0x4db9ee77,al
  4102bb:	int    0x12
  4102bd:	fnstcw WORD PTR [ebx+0x7c]
  4102c0:	xchg   esp,eax
  4102c1:	je     0x41029f
  4102c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102c4:	enter  0x596e,0xf6
  4102c8:	jne    0x4102b1
  4102ca:	or     edi,edi
  4102cc:	adc    eax,0xcaa5f70e
  4102d1:	imul   ebx,DWORD PTR [edx+ebp*1],0x3
  4102d5:	aad    0x8c
  4102d7:	loop   0x4102c4
  4102d9:	dec    ebx
  4102da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102db:	mov    ecx,0x43e25acc
  4102e0:	imul   ecx,DWORD PTR [edi+0x1b],0x16b680dd
  4102e7:	mov    dh,0xe5
  4102e9:	dec    ebp
  4102ea:	push   esp
  4102eb:	sbb    ebp,DWORD PTR [ebp+0x44]
  4102ee:	mov    edx,0x943e9983
  4102f3:	and    bh,dh
  4102f5:	(bad)  
  4102f6:	js     0x4102d7
  4102f8:	scas   eax,DWORD PTR es:[edi]
  4102f9:	sbb    BYTE PTR [ecx-0x5a],cl
  4102fc:	jle    0x410314
  4102fe:	in     eax,0xbf
  410300:	sbb    dh,ah
  410302:	lds    edx,FWORD PTR [edx]
  410304:	daa    
  410305:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410306:	cld    
  410307:	bound  edi,QWORD PTR [esi+0x53]
  41030a:	sub    BYTE PTR [ebp+0x4d],cl
  41030d:	jmp    0x41034a
  41030f:	sbb    DWORD PTR [esi+0x1858070],ebx
  410315:	mov    edi,0xbc57fc2b
  41031a:	cld    
  41031b:	push   ecx
  41031c:	and    eax,0xfd1bce38
  410321:	ins    DWORD PTR es:[edi],dx
  410322:	xchg   esi,eax
  410323:	aam    0x81
  410325:	mov    ah,0x4
  410327:	out    dx,eax
  410328:	mov    edi,edi
  41032a:	addr16 loop 0x4102e2
  41032d:	fdiv   QWORD PTR [ebx+0x74]
  410330:	pop    edi
  410331:	outs   dx,BYTE PTR ds:[esi]
  410332:	shr    DWORD PTR [ebx],cl
  410334:	sar    BYTE PTR [edx],cl
  410336:	mov    esp,0xc2f964b4
  41033b:	add    BYTE PTR [ebx+0x6e5e4d03],ch
  410341:	and    eax,edx
  410343:	and    esp,DWORD PTR [eax+0x11fd2815]
  410349:	xchg   ecx,eax
  41034a:	xchg   edi,eax
  41034b:	xchg   edx,eax
  41034c:	mov    eax,0x839d47df
  410351:	mov    al,0xa2
  410353:	clc    
  410354:	dec    esp
  410355:	jmp    0xa577:0xb93ca038
  41035c:	mov    edi,0xa99c60d4
  410361:	mov    WORD PTR [edx-0x72],?
  410364:	js     0x41034c
  410366:	and    DWORD PTR ss:[edi-0x7d],ebx
  41036a:	xchg   ebx,eax
  41036b:	jp     0x410391
  41036d:	aad    0xec
  41036f:	imul   esp,DWORD PTR [edi+0x1430d28],0xffffff9a
  410376:	xor    BYTE PTR [esi],ch
  410378:	sub    eax,0x8976c717
  41037d:	popf   
  41037e:	jg     0x410350
  410380:	cli    
  410381:	dec    eax
  410382:	int    0x2c
  410384:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410385:	push   0xffffff81
  410387:	(bad)  
  410388:	lods   eax,DWORD PTR ds:[esi]
  410389:	xchg   DWORD PTR [eax-0x67],ebp
  41038c:	xchg   ecx,eax
  41038d:	jno    0x4103fb
  41038f:	rcl    DWORD PTR [edx],1
  410391:	test   DWORD PTR [ebx-0x4b983024],0x3c03d8de
  41039b:	stos   BYTE PTR es:[edi],al
  41039c:	push   eax
  41039d:	mov    BYTE PTR [ebp-0x5ffa9885],0x4b
  4103a4:	mov    edx,0x7397e561
  4103a9:	je     0x4103d4
  4103ab:	icebp  
  4103ac:	dec    eax
  4103ad:	mov    ebx,0xbc9fb260
  4103b2:	sbb    eax,0xb949dabc
  4103b7:	jo     0x410396
  4103b9:	xor    edx,ebp
  4103bb:	neg    BYTE PTR [edx-0x647e828f]
  4103c1:	iret   
  4103c2:	loop   0x410374
  4103c4:	xchg   ebx,eax
  4103c5:	cmp    BYTE PTR [ebx+eiz*4-0x77],bh
  4103c9:	dec    esi
  4103ca:	dec    ecx
  4103cb:	mov    ebp,0xd402b89
  4103d0:	or     BYTE PTR [edx+edx*8-0x1e9365a1],bl
  4103d7:	loopne 0x41035a
  4103d9:	or     eax,DWORD PTR [eax-0x31]
  4103dc:	or     BYTE PTR [edx],cl
  4103de:	push   eax
  4103df:	pop    ds
  4103e0:	mov    ebp,esp
  4103e2:	ins    DWORD PTR es:[edi],dx
  4103e3:	leave  
  4103e4:	mov    dh,0x15
  4103e6:	sbb    DWORD PTR [ecx+0x5eb64c49],esp
  4103ec:	ja     0x4103bb
  4103ee:	hlt    
  4103ef:	cmp    DWORD PTR [edx-0x7cb6f14f],0xffffffe8
  4103f6:	pop    ebp
  4103f7:	test   eax,0x752a9de3
  4103fc:	outs   dx,BYTE PTR ds:[esi]
  4103fd:	int    0x80
  4103ff:	jne    0x4103fe
  410401:	sbb    ecx,0x3c
  410404:	push   0x992aa32b
  410409:	cli    
  41040a:	xchg   ebx,eax
  41040b:	mov    esi,0x368c93e7
  410410:	jle    0x4103d8
  410412:	jg     0x41040f
  410414:	sub    eax,0x3ae8c4cb
  410419:	jmp    0x410429
  41041b:	mov    ah,0x2b
  41041d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41041e:	pushf  
  41041f:	into   
  410420:	mov    dl,0x93
  410422:	mov    bl,0xda
  410424:	lahf   
  410425:	cmp    BYTE PTR [eax+eiz*8+0x6],bl
  410429:	and    eax,DWORD PTR [ebp-0x5b]
  41042c:	pop    edi
  41042d:	daa    
  41042e:	scas   eax,DWORD PTR es:[edi]
  41042f:	dec    edi
  410430:	mov    ds:0x4dea910a,eax
  410435:	xor    ch,ch
  410437:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410438:	xchg   esi,eax
  410439:	pop    edi
  41043a:	add    al,0xc8
  41043c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41043d:	mov    dl,BYTE PTR [ecx+0x65]
  410440:	iret   
  410441:	mov    ah,0xf1
  410443:	fidivr WORD PTR [esi+0x5683426b]
  410449:	adc    eax,0xe668227b
  41044e:	jecxz  0x410472
  410450:	test   BYTE PTR [ebx-0xc37d17b],ch
  410456:	das    
  410457:	mov    ds:0x1f194d6f,eax
  41045c:	sbb    ebp,DWORD PTR [edi-0x4f624fc5]
  410462:	lods   al,BYTE PTR ds:[esi]
  410463:	pop    ecx
  410464:	fisubr WORD PTR [ebp+0x4c692241]
  41046a:	push   esi
  41046b:	pusha  
  41046c:	(bad)  
  41046d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41046e:	(bad)  [eax+ebx*1-0x7c]
  410472:	pop    eax
  410473:	push   ds
  410474:	out    dx,eax
  410475:	xor    ebx,ecx
  410477:	and    eax,ebx
  410479:	imul   eax,DWORD PTR [edx],0x15
  41047c:	or     al,0xa8
  41047e:	retf   0x34eb
  410481:	jns    0x41042b
  410483:	xor    DWORD PTR [ecx-0x50],0xffffffd4
  410487:	push   ebp
  410488:	sub    ecx,edx
  41048a:	inc    eax
  41048b:	in     eax,0x2
  41048d:	mov    bh,0xcb
  41048f:	gs mov dh,0xd5
  410492:	xchg   cl,bl
  410494:	sub    DWORD PTR [eax],edi
  410496:	sub    ah,al
  410498:	and    DWORD PTR [ebx+0x4a266cf2],0x65fe597e
  4104a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104a3:	pop    ss
  4104a4:	ja     0x4104f4
  4104a6:	outs   dx,DWORD PTR ds:[esi]
  4104a7:	pop    esi
  4104a8:	mov    esp,0x58d8d3bf
  4104ad:	jg     0x410487
  4104af:	add    edx,ebx
  4104b1:	add    eax,0xb730b19c
  4104b6:	pushf  
  4104b7:	jmp    ebp
  4104b9:	in     al,0xc0
  4104bb:	mov    al,0xde
  4104bd:	mov    dl,0xf1
  4104bf:	adc    BYTE PTR [ecx],cl
  4104c1:	mov    ds:0xc5d32acb,eax
  4104c6:	popf   
  4104c7:	sub    ch,BYTE PTR [edi*8+0x7bb6362c]
  4104ce:	jle    0x4104a8
  4104d0:	push   ecx
  4104d1:	fbld   TBYTE PTR [ebx]
  4104d3:	mov    BYTE PTR [eax+0x9f5f386],bh
  4104d9:	push   edi
  4104da:	addr16 std 
  4104dc:	popa   
  4104dd:	xchg   edx,eax
  4104de:	xor    DWORD PTR [edx-0x39b2fbce],0x22
  4104e5:	std    
  4104e6:	pop    esi
  4104e7:	push   0xf1fcb2cc
  4104ec:	xor    bh,al
  4104ee:	sbb    al,0x52
  4104f0:	jmp    0x69a0e2e2
  4104f5:	add    BYTE PTR [eax],dl
  4104f7:	jecxz  0x41048f
  4104f9:	fist   DWORD PTR [ebx]
  4104fb:	cwde   
  4104fc:	ja     0x410567
  4104fe:	dec    ebx
  4104ff:	enter  0xf0f0,0x19
  410503:	mov    ecx,0x6459f6f3
  410508:	and    eax,0xb669ada
  41050d:	les    edx,FWORD PTR [eax]
  41050f:	mov    esp,0x550e69c2
  410514:	outs   dx,BYTE PTR ds:[esi]
  410515:	add    BYTE PTR [eax-0x27],al
  410518:	mov    edx,0xe0565305
  41051d:	(bad)  
  41051e:	mov    eax,ds:0x568094c3
  410523:	and    esi,edx
  410525:	sub    eax,0xf9f97fab
  41052a:	inc    edi
  41052b:	push   ebp
  41052c:	dec    edx
  41052d:	ja     0x4104bb
  41052f:	jns    0x41059b
  410531:	or     esi,esp
  410533:	add    ebx,esi
  410535:	data16 or al,0x3b
  410538:	jae    0x410595
  41053a:	daa    
  41053b:	cs sub al,0xe4
  41053e:	pop    ds
  41053f:	xchg   ebp,eax
  410540:	cwde   
  410541:	loopne 0x410590
  410543:	mov    WORD PTR [esi-0x77],gs
  410546:	mov    esi,0x45ada996
  41054b:	add    DWORD PTR [edx+0x76],ebx
  41054e:	jne    0x410510
  410550:	jae    0x4104dd
  410552:	pop    eax
  410553:	sbb    BYTE PTR [eax-0x4ed6ff68],0x11
  41055a:	stos   BYTE PTR es:[edi],al
  41055b:	inc    edx
  41055c:	add    BYTE PTR [edx+0x78fc0903],al
  410562:	inc    ebx
  410563:	aaa    
  410564:	outs   dx,DWORD PTR ds:[esi]
  410565:	cli    
  410566:	push   es
  410567:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410568:	and    eax,0x176ff00d
  41056d:	and    edx,esp
  41056f:	mov    ds:0x56d2d18c,eax
  410574:	mov    dh,0x79
  410576:	push   eax
  410577:	pusha  
  410578:	push   ds
  410579:	push   ds
  41057a:	inc    DWORD PTR [edx-0x6fd3962a]
  410580:	mov    dh,0x53
  410582:	cmp    al,BYTE PTR ds:0xf732e5e9
  410588:	jns    0x41059d
  41058a:	mov    ds:0xbdb7f17b,al
  41058f:	ds inc edx
  410591:	xchg   edi,eax
  410592:	shl    DWORD PTR [ebx-0x2580abb],cl
  410598:	mov    esp,0xb29f9c8f
  41059d:	into   
  41059e:	add    BYTE PTR [ebp-0x54],dh
  4105a1:	push   ss
  4105a2:	out    dx,eax
  4105a3:	jmp    0xe1fc5b7c
  4105a8:	xchg   edx,eax
  4105a9:	xor    cl,BYTE PTR [ebx]
  4105ab:	pop    esi
  4105ac:	clc    
  4105ad:	mov    ecx,0xfaf7b85b
  4105b2:	push   edi
  4105b3:	xchg   esi,eax
  4105b4:	sbb    BYTE PTR [ecx+edi*4+0x62],0x6b
  4105b9:	mul    DWORD PTR ds:0x56d3bfc0
  4105bf:	inc    esp
  4105c0:	mov    edx,0x52db5f15
  4105c5:	popa   
  4105c6:	jae    0x410618
  4105c8:	sbb    bh,BYTE PTR [edi-0x8]
  4105cb:	mov    cl,0x8
  4105cd:	enter  0x7a97,0xaa
  4105d1:	lock jo 0x4105ad
  4105d4:	dec    esp
  4105d5:	push   eax
  4105d6:	jg     0x4105e7
  4105d8:	retf   
  4105d9:	mov    cl,0x42
  4105db:	dec    ebx
  4105dc:	xchg   esp,eax
  4105dd:	aaa    
  4105de:	pop    ds
  4105df:	mov    cl,0xed
  4105e1:	sbb    edx,DWORD PTR [esi+0x48]
  4105e4:	pop    eax
  4105e5:	sbb    al,0x36
  4105e7:	ins    BYTE PTR es:[edi],dx
  4105e8:	sbb    DWORD PTR [edi+eax*2+0x2770a701],esi
  4105ef:	add    eax,0xa53444bb
  4105f4:	test   esp,0xfb070927
  4105fa:	or     al,0x14
  4105fc:	jle    0x410657
  4105fe:	jno    0x410640
  410600:	xor    DWORD PTR [ebx+0x60],ecx
  410603:	sub    al,bh
  410605:	mov    ebp,0xdd993b65
  41060a:	jbe    0x410634
  41060c:	adc    BYTE PTR [edx+0x5d],al
  41060f:	mov    ch,0xa0
  410611:	add    BYTE PTR [ecx+0x62],bh
  410614:	mov    ch,0x60
  410616:	xchg   edx,eax
  410617:	scas   eax,DWORD PTR es:[edi]
  410618:	out    dx,eax
  410619:	mov    ds:0x786502f7,al
  41061e:	mov    ebx,0x7d0755f0
  410623:	or     BYTE PTR [edi],dh
  410625:	adc    BYTE PTR [edi],al
  410627:	and    al,0x1a
  410629:	mov    dh,0x47
  41062b:	jge    0x4105fd
  41062d:	js     0x4105b0
  41062f:	xchg   esi,eax
  410630:	mov    ds:0xe833e52f,al
  410635:	call   0xb075:0xe3fc76f8
  41063c:	and    BYTE PTR [ebx-0x1621a653],0xf
  410643:	in     al,0x7d
  410645:	inc    edx
  410646:	pushf  
  410647:	lock jmp 0x8fe5:0xa42380c4
  41064f:	jo     0x41061c
  410651:	ret    0x867c
  410654:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410655:	adc    dl,dh
  410657:	xchg   ecx,eax
  410658:	int3   
  410659:	lods   eax,DWORD PTR ds:[esi]
  41065a:	sahf   
  41065b:	scas   al,BYTE PTR es:[edi]
  41065c:	jae    0x410684
  41065e:	loop   0x41066d
  410660:	sar    ch,cl
  410662:	xchg   BYTE PTR [edx+0x19],ah
  410665:	lods   al,BYTE PTR ds:[esi]
  410666:	(bad)  
  410667:	sti    
  410668:	test   DWORD PTR [edx+0x3e2ed9d9],ebx
  41066e:	cs mov al,0x54
  410671:	xor    BYTE PTR [ebp+0x197df869],0xbb
  410678:	aaa    
  410679:	ret    0xf226
  41067c:	mov    ds:0xc1bf195,al
  410681:	mov    esi,0xb9fb6f7b
  410686:	sbb    esi,DWORD PTR ds:0xa0834b23
  41068c:	adc    bl,BYTE PTR [edx-0xe]
  41068f:	push   ss
  410690:	hlt    
  410691:	scas   eax,DWORD PTR es:[edi]
  410692:	cmp    BYTE PTR ds:0x86014463,bl
  410698:	add    bl,BYTE PTR [esi+edi*1]
  41069b:	leave  
  41069c:	addr16 push ss
  41069e:	mov    esi,0x6abbd0aa
  4106a3:	sbb    eax,0x80db18f1
  4106a8:	(bad)  
  4106a9:	jbe    0x4106a1
  4106ab:	inc    ecx
  4106ac:	lock not DWORD PTR [edx]
  4106af:	push   esi
  4106b0:	jge    0x41072e
  4106b2:	push   ds
  4106b3:	mov    WORD PTR [edi-0x65],cs
  4106b6:	xchg   edi,eax
  4106b7:	ds adc eax,0xc3220fd2
  4106bd:	or     DWORD PTR [ebx-0x78],eax
  4106c0:	arpl   WORD PTR [esi+0x67],cx
  4106c3:	push   edi
  4106c4:	loopne 0x410711
  4106c6:	jo     0x410726
  4106c8:	(bad)  
  4106c9:	in     eax,0x9
  4106cb:	pop    edi
  4106cc:	or     edx,ecx
  4106ce:	shr    BYTE PTR [esi+0x2e],cl
  4106d1:	or     edx,0xb1cf64b3
  4106d7:	rcl    BYTE PTR [ebp+0x65],1
  4106da:	retf   
  4106db:	pop    esi
  4106dc:	popf   
  4106dd:	inc    ebx
  4106de:	jns    0x4106b7
  4106e0:	add    bl,BYTE PTR [ebx+ecx*1-0x3f]
  4106e4:	jne    0x4106ee
  4106e6:	cmp    DWORD PTR [ecx],eax
  4106e8:	lods   al,BYTE PTR ds:[esi]
  4106e9:	imul   ebx,DWORD PTR [ebx+0x27],0xffffffe0
  4106ed:	inc    ebx
  4106ee:	sbb    eax,0xe4f292af
  4106f3:	pop    es
  4106f4:	mov    edx,0xb1e6bbac
  4106f9:	test   eax,0x8b7b08c0
  4106fe:	mov    esi,0x9ef5028
  410703:	xchg   edi,eax
  410704:	mov    dl,0xd1
  410706:	rcr    DWORD PTR [edx-0x61995e28],0x21
  41070d:	pop    edx
  41070e:	xor    BYTE PTR [esp+esi*2-0x4e],dl
  410712:	clc    
  410713:	cwde   
  410714:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410715:	in     al,0xc2
  410717:	xlat   BYTE PTR ds:[bx]
  410719:	loopne 0x410776
  41071b:	ins    DWORD PTR es:[edi],dx
  41071c:	pop    ecx
  41071d:	stc    
  41071e:	pop    eax
  41071f:	aaa    
  410720:	imul   esi,DWORD PTR [ebx],0x40
  410723:	mov    ds:0xf56e7552,eax
  410728:	loope  0x41077a
  41072a:	inc    esp
  41072b:	dec    ebx
  41072c:	stos   DWORD PTR es:[edi],eax
  41072d:	rcl    BYTE PTR [ebp-0x2c],cl
  410730:	push   ss
  410731:	(bad)  
  410732:	mov    ch,0x3f
  410734:	mov    esi,0x9ec5e076
  410739:	sub    DWORD PTR [edx+0x4c],ecx
  41073c:	(bad)  
  41073d:	push   edx
  41073e:	fxam   
  410740:	les    eax,FWORD PTR [ebx+ecx*1-0x7cd5de3e]
  410747:	xchg   ebx,eax
  410748:	xchg   esi,eax
  410749:	pop    edi
  41074a:	cmc    
  41074b:	cmp    ebx,DWORD PTR [edi-0x35]
  41074e:	jno    0x4107bd
  410750:	mov    BYTE PTR [esp+edi*8],dh
  410753:	push   ebp
  410754:	sub    DWORD PTR [ebx],ebx
  410756:	mov    dl,0x9d
  410758:	mov    ebp,0xd2bc1823
  41075d:	fcomp  QWORD PTR [edi+0x6b]
  410760:	jo     0x4107d0
  410762:	inc    esp
  410763:	gs call 0x2963bd10
  410769:	aad    0x10
  41076b:	leave  
  41076c:	xchg   ecx,eax
  41076d:	jmp    0x410750
  41076f:	mov    eax,ds:0x6f65b0d6
  410774:	add    eax,0x20ecf7af
  410779:	ja     0x4107c7
  41077b:	and    ch,BYTE PTR [ecx]
  41077d:	pop    ds
  41077e:	ret    
  41077f:	mov    ch,0x47
  410781:	dec    ebp
  410782:	mov    eax,0xf7b998b9
  410787:	inc    ecx
  410788:	mov    ch,0x35
  41078a:	sar    DWORD PTR [edx+ebp*2-0x18],cl
  41078e:	cmp    BYTE PTR [ecx],dl
  410790:	lods   eax,DWORD PTR ds:[esi]
  410791:	xchg   BYTE PTR [eax+0x5],ah
  410794:	sub    al,0xdc
  410796:	and    ah,BYTE PTR [edi+0x63250e6e]
  41079c:	xchg   esi,eax
  41079d:	push   cs
  41079e:	stc    
  41079f:	push   edx
  4107a0:	sub    al,0xdb
  4107a2:	test   DWORD PTR [eax+0x65d85597],ebx
  4107a8:	int    0x77
  4107aa:	test   eax,0x45a9e353
  4107af:	pushf  
  4107b0:	int3   
  4107b1:	push   ecx
  4107b2:	jmp    0xbf13:0x9edb845b
  4107b9:	jns    0x410806
  4107bb:	jae    0x41080e
  4107bd:	pushf  
  4107be:	xchg   ebp,eax
  4107bf:	dec    edi
  4107c0:	scas   eax,DWORD PTR es:[edi]
  4107c1:	jbe    0x4107df
  4107c3:	mov    WORD PTR ds:0x225eb1f9,gs
  4107c9:	dec    esi
  4107ca:	fsub   st,st(6)
  4107cc:	into   
  4107cd:	xchg   edx,eax
  4107ce:	cli    
  4107cf:	push   ss
  4107d0:	sbb    al,0x46
  4107d2:	hlt    
  4107d3:	cmp    dl,dh
  4107d5:	out    dx,eax
  4107d6:	gs adc al,0x3
  4107d9:	dec    esp
  4107da:	test   al,0xe6
  4107dc:	(bad)  
  4107dd:	fwait
  4107de:	cmc    
  4107df:	adc    edi,esi
  4107e1:	(bad)  
  4107e2:	cmc    
  4107e3:	hlt    
  4107e4:	or     DWORD PTR [ebx-0x636d4230],esi
  4107ea:	frstpm(287 only) 
  4107ec:	outs   dx,BYTE PTR ds:[esi]
  4107ed:	clc    
  4107ee:	ret    0x7862
  4107f1:	stc    
  4107f2:	repnz ss mov bl,0x8e
  4107f6:	cmp    bh,0xa6
  4107f9:	in     eax,dx
  4107fa:	hlt    
  4107fb:	rcr    BYTE PTR [edi-0x10],0xc
  4107ff:	sbb    ebx,edx
  410801:	xor    esp,DWORD PTR [esi]
  410803:	sahf   
  410804:	inc    ecx
  410805:	push   eax
  410806:	ins    BYTE PTR es:[edi],dx
  410807:	jmp    0x1fddebea
  41080c:	aad    0x6a
  41080e:	fldenv [esi-0x4f71e311]
  410814:	add    esi,DWORD PTR [edx+0x12493463]
  41081a:	cmp    al,bh
  41081c:	sar    DWORD PTR [eax],1
  41081e:	jp     0x410837
  410820:	mov    ss,esi
  410822:	sbb    esi,DWORD PTR [edi-0x491e571b]
  410828:	data16 mov ch,0xb0
  41082b:	fistp  WORD PTR [eax-0x5f08df22]
  410831:	jmp    0x410868
  410833:	sbb    eax,0xe93f69f2
  410838:	(bad)
  41083b:	sbb    eax,0x18a3fc55
  410840:	jp     0x410802
  410842:	mov    bh,0xe4
  410844:	pop    esi
  410845:	mov    eax,ds:0xd239ffd5
  41084a:	ret    
  41084b:	xchg   DWORD PTR [eax+0x48],esp
  41084e:	fdivr  st,st(2)
  410850:	xor    BYTE PTR [esi-0x786783e5],0x77
  410857:	xchg   edx,eax
  410858:	pop    ebx
  410859:	sti    
  41085a:	jmp    0x1e4:0xed6e43da
  410861:	and    BYTE PTR [ebp-0x1d12e3dd],al
  410867:	or     bl,0x1f
  41086a:	iret   
  41086b:	mov    al,0xc
  41086d:	sahf   
  41086e:	mov    ecx,0x409aede6
  410873:	or     al,0x6a
  410875:	xlat   BYTE PTR ds:[ebx]
  410876:	xchg   cl,dl
  410878:	push   0xffffffd0
  41087a:	pop    edi
  41087b:	or     al,0xa7
  41087d:	adc    ecx,DWORD PTR [edx+0x5a]
  410880:	retf   
  410881:	sub    esp,DWORD PTR [ebx+0xdcde72e]
  410887:	ret    
  410888:	xor    ecx,DWORD PTR [ecx+0x77]
  41088b:	xlat   BYTE PTR ds:[ebx]
  41088c:	cmp    ch,BYTE PTR [esi-0x619142f8]
  410892:	push   cs
  410893:	in     al,0xe
  410895:	add    bh,cl
  410897:	shl    BYTE PTR [edx],1
  410899:	scas   eax,DWORD PTR es:[edi]
  41089a:	mov    dl,0x8c
  41089c:	popf   
  41089d:	mov    al,0x25
  41089f:	xchg   edi,eax
  4108a0:	dec    esi
  4108a1:	xor    bl,BYTE PTR [edx-0x3a8a2644]
  4108a7:	inc    ebp
  4108a8:	rcr    BYTE PTR [edx+0x5371e15b],1
  4108ae:	dec    eax
  4108af:	jl     0x410904
  4108b1:	pushf  
  4108b2:	(bad)  
  4108b3:	sahf   
  4108b4:	cmp    dh,ah
  4108b6:	sub    DWORD PTR [esi],ebx
  4108b8:	les    ecx,FWORD PTR [eax-0x72]
  4108bb:	repz sbb DWORD PTR [edx*1-0x31f6fbba],edx
  4108c3:	xchg   edx,eax
  4108c4:	lahf   
  4108c5:	mov    cs,WORD PTR [ecx]
  4108c7:	sbb    edx,edx
  4108c9:	mov    ebp,0xac648b6e
  4108ce:	pop    ecx
  4108cf:	(bad)  
  4108d1:	mov    WORD PTR [edx],ds
  4108d3:	lea    esp,[ebp-0x59]
  4108d6:	pop    eax
  4108d7:	sbb    BYTE PTR [ebx+0x49],al
  4108da:	out    0x9d,eax
  4108dc:	ins    DWORD PTR es:[edi],dx
  4108dd:	fs jns 0x410955
  4108e0:	out    0x15,eax
  4108e2:	sub    al,0x53
  4108e4:	sub    eax,0x89f5e4e9
  4108e9:	mov    ss,WORD PTR [ebp-0xa]
  4108ec:	fidivr DWORD PTR [edx-0x77d7fe5f]
  4108f2:	les    edi,FWORD PTR [eax]
  4108f4:	iret   
  4108f5:	pop    DWORD PTR cs:[edi+0x79deb2e]
  4108fc:	lds    edi,FWORD PTR [edi+0x7a]
  4108ff:	jmp    0xbaba:0x85775989
  410906:	xchg   esi,eax
  410907:	sbb    eax,0xb1ee1a2b
  41090c:	mov    ecx,0xd0214964
  410911:	inc    edx
  410912:	stc    
  410913:	xchg   ebx,eax
  410914:	add    al,0x33
  410916:	idiv   DWORD PTR [edx+0xd]
  410919:	jae    0x410998
  41091b:	dec    ecx
  41091c:	sub    al,0x69
  41091e:	or     DWORD PTR [eax-0x7c418733],0x6f82367b
  410928:	out    dx,al
  410929:	pop    esp
  41092a:	mov    BYTE PTR [esi+0x3034503e],cl
  410930:	fld    st(0)
  410932:	aad    0xa8
  410934:	sti    
  410935:	inc    esp
  410936:	or     al,0x11
  410938:	fsubr  DWORD PTR [ecx]
  41093a:	sbb    DWORD PTR [esi+ebx*8+0x45],0x7b0d949e
  410942:	hlt    
  410943:	push   edx
  410944:	lahf   
  410945:	mov    cl,BYTE PTR [eax+0x325d8335]
  41094b:	add    DWORD PTR [ebx+0x5b1aab30],edi
  410951:	sti    
  410952:	enter  0x3129,0xc2
  410956:	std    
  410957:	mov    bh,0xd7
  410959:	inc    ecx
  41095a:	ret    0x2807
  41095d:	fdivp  st(7),st
  41095f:	jb     0x410946
  410961:	push   edx
  410962:	add    DWORD PTR [esi],esp
  410964:	adc    eax,0x11028248
  410969:	cmc    
  41096a:	push   ds
  41096b:	xor    eax,0xfd715f5f
  410970:	lea    esi,[edi+ecx*1-0x3c40a235]
  410977:	mov    al,0xb5
  410979:	or     eax,0x6f486b1
  41097e:	push   edx
  41097f:	fild   DWORD PTR cs:[eax]
  410982:	dec    esi
  410983:	mov    eax,ds:0x374d0464
  410988:	and    edx,DWORD PTR [esi+0x597e7f65]
  41098e:	xchg   ebp,eax
  41098f:	fnstsw WORD PTR [eax]
  410991:	jge    0x4109e5
  410993:	mov    ch,0xc6
  410995:	mov    bl,0x57
  410997:	fist   DWORD PTR [esi+0x1307c91]
  41099d:	push   esi
  41099e:	(bad)  
  41099f:	fist   DWORD PTR [eax-0x3feab280]
  4109a5:	dec    esi
  4109a6:	or     eax,0x993e806
  4109ab:	mov    ebp,0x731ff37a
  4109b0:	lock sub bl,BYTE PTR [ebx+0x7c9f8f5e]
  4109b7:	dec    edx
  4109b8:	jne    0x4109b0
  4109ba:	add    eax,0x5df3acfe
  4109bf:	test   al,0xbe
  4109c1:	ret    0xc3fe
  4109c4:	adc    esi,esi
  4109c6:	cmc    
  4109c7:	in     eax,0x9c
  4109c9:	leave  
  4109ca:	rcl    DWORD PTR [ecx+ebx*4-0xec5a6c9],cl
  4109d1:	push   esi
  4109d2:	dec    esp
  4109d3:	xor    dl,BYTE PTR [ecx+0x1f]
  4109d6:	ss jnp 0x4109f5
  4109d9:	mov    esp,0xb71c9544
  4109de:	outs   dx,DWORD PTR ds:[esi]
  4109df:	fwait
  4109e0:	jno    0x4109e1
  4109e2:	(bad)  
  4109e3:	stos   DWORD PTR es:[edi],eax
  4109e4:	pop    edx
  4109e5:	(bad)  
  4109e6:	xor    ch,cl
  4109e8:	in     eax,dx
  4109e9:	mov    dl,0x33
  4109eb:	push   eax
  4109ed:	cmp    DWORD PTR [ebp-0x13],ecx
  4109f0:	mov    ah,0x94
  4109f2:	jb     0x4109e4
  4109f4:	jns    0x410a11
  4109f6:	sbb    eax,0x177d0d36
  4109fb:	outs   dx,BYTE PTR ds:[esi]
  4109fc:	lahf   
  4109fd:	out    dx,eax
  4109fe:	ins    BYTE PTR es:[edi],dx
  4109ff:	xor    DWORD PTR [ebx-0x2000f5da],eax
  410a05:	push   ds
  410a06:	jno    0x410a10
  410a08:	out    dx,eax
  410a09:	ins    DWORD PTR es:[edi],dx
  410a0a:	mov    ecx,0xb60f1161
  410a0f:	xor    eax,0x6a0ca505
  410a14:	xchg   BYTE PTR [edi+0x7],bh
  410a17:	sbb    BYTE PTR [ecx+0x44],ch
  410a1a:	cmp    DWORD PTR [edi+ebx*8+0xe121ebe],ebp
  410a21:	fbstp  TBYTE PTR [eax-0x5c]
  410a24:	lods   al,BYTE PTR ds:[esi]
  410a25:	xchg   ebp,eax
  410a26:	in     al,dx
  410a27:	lods   al,BYTE PTR ds:[esi]
  410a28:	adc    eax,DWORD PTR [eax]
  410a2a:	jl     0x410a77
  410a2c:	or     ebx,0xa1be4d16
  410a32:	je     0x4109b6
  410a34:	dec    edi
  410a35:	xor    eax,DWORD PTR [ecx-0x78c75ab8]
  410a3b:	jle    0x410a96
  410a3d:	xchg   edx,eax
  410a3e:	call   0x3e60:0x2db29565
  410a45:	lods   eax,DWORD PTR ds:[esi]
  410a46:	push   ebx
  410a47:	leave  
  410a48:	clc    
  410a49:	mov    bh,0xc
  410a4b:	faddp  st(6),st
  410a4d:	cmp    al,0xdd
  410a50:	fistp  QWORD PTR [edx+0x98edfcc]
  410a56:	xchg   esi,eax
  410a57:	in     al,0x72
  410a59:	mov    bh,0x32
  410a5b:	mov    cl,0x4
  410a5d:	jmp    0x58b0:0xb86cbcf1
  410a64:	pop    edi
  410a65:	(bad)  
  410a68:	xchg   ebp,eax
  410a69:	push   0xffffff9d
  410a6b:	nop
  410a6c:	test   al,0xc2
  410a6e:	loop   0x410a69
  410a70:	popa   
  410a71:	jno    0x410ac9
  410a73:	stos   DWORD PTR es:[edi],eax
  410a74:	loopne 0x410ade
  410a76:	fs cld 
  410a78:	mov    cl,0x2a
  410a7a:	rep outs dx,BYTE PTR ds:[esi]
  410a7c:	jl     0x410a10
  410a7e:	call   0x9a6:0xf96de652
  410a85:	in     eax,dx
  410a86:	loope  0x410a86
  410a88:	jnp    0x410a80
  410a8a:	jmp    DWORD PTR [ebx+0x7844c12d]
  410a90:	sbb    cl,BYTE PTR [ebx-0x4bbb3b27]
  410a96:	je     0x410a2d
  410a98:	hlt    
  410a99:	and    DWORD PTR [edx-0xafa8334],0xffffffe5
  410aa0:	bound  eax,QWORD PTR gs:[edi]
  410aa3:	cli    
  410aa4:	inc    eax
  410aa5:	mov    dl,0x57
  410aa7:	dec    esp
  410aa8:	xchg   edi,eax
  410aa9:	sub    dh,ch
  410aab:	cmp    eax,0x6abb6cd8
  410ab0:	das    
  410ab1:	cmp    DWORD PTR [esp+esi*2+0x49],ebp
  410ab5:	xchg   ecx,eax
  410ab6:	(bad)  
  410ab8:	xchg   edx,eax
  410ab9:	shl    al,1
  410abb:	xchg   esp,eax
  410abc:	lds    eax,FWORD PTR [ebx]
  410abe:	leave  
  410abf:	std    
  410ac0:	sbb    ch,ch
  410ac2:	jp     0x410af9
  410ac4:	inc    esi
  410ac5:	sub    ebp,DWORD PTR [edx]
  410ac7:	in     eax,0xf0
  410ac9:	xor    BYTE PTR [eax+0x44],cl
  410acc:	mov    eax,0x8ba34b2
  410ad1:	shl    BYTE PTR [ebp-0x2e],0xfa
  410ad5:	mov    ds:0xe283437c,eax
  410ada:	loopne 0x410aef
  410adc:	ds pop edx
  410ade:	cmp    ebx,edx
  410ae0:	jl     0x410b51
  410ae2:	jno    0x410a84
  410ae4:	repz imul ebp,esi,0xfffffff3
  410ae8:	sbb    al,0xd8
  410aea:	gs pushf 
  410aec:	loope  0x410b0a
  410aee:	dec    ebx
  410aef:	mov    ch,0x79
  410af1:	fwait
  410af2:	sti    
  410af3:	loop   0x410ab0
  410af5:	mov    eax,0x42370f5e
  410afa:	imul   esp,ecx,0xd9b5e40
  410b00:	mul    BYTE PTR [eax-0x6f]
  410b03:	add    DWORD PTR [ebp-0x3efcc526],0xab592504
  410b0d:	inc    edx
  410b0e:	push   0xffffff98
  410b10:	(bad)  
  410b11:	in     al,0x22
  410b13:	lahf   
  410b14:	jbe    0x410afe
  410b16:	mov    dh,dh
  410b18:	test   al,0xda
  410b1a:	xor    BYTE PTR [edi-0x5c9be569],bl
  410b20:	dec    eax
  410b21:	mov    esp,0x3b9c284b
  410b26:	push   cs
  410b27:	add    DWORD PTR [ebx+0x3f],edi
  410b2a:	cmp    BYTE PTR [edi],bl
  410b2c:	push   esp
  410b2d:	mov    WORD PTR [edx-0x3b],fs
  410b30:	add    eax,0x1240b6ec
  410b35:	adc    esi,DWORD PTR ds:0x7c37720f
  410b3b:	(bad)  
  410b3c:	cmp    al,0x41
  410b3e:	jmp    0x410b3f
  410b40:	xor    BYTE PTR [ebp+0x27b6539b],bh
  410b46:	mov    ch,0xd4
  410b48:	adc    DWORD PTR [edi-0x5a010fff],esi
  410b4e:	repnz mov ah,0xa9
  410b51:	add    ecx,ecx
  410b53:	jmp    0xcfc0cbcc
  410b58:	jle    0x410b93
  410b5a:	xchg   ebx,eax
  410b5b:	aad    0xd5
  410b5d:	sahf   
  410b5e:	(bad)  
  410b60:	out    0xa5,eax
  410b62:	jmp    0x410aef
  410b64:	adc    al,0x8c
  410b66:	test   DWORD PTR [edi+0x3e],edi
  410b69:	fsubr  DWORD PTR [ebx*4+0x594733cc]
  410b70:	fprem1 
  410b72:	lss    esi,FWORD PTR [ecx-0x39]
  410b76:	data16 add dh,BYTE PTR [eax]
  410b79:	in     al,0x4c
  410b7b:	mov    dl,0x2e
  410b7d:	mov    eax,ds:0x52f425fa
  410b82:	ss pop ebx
  410b84:	pop    ds
  410b85:	rol    DWORD PTR [edi+esi*4],1
  410b88:	push   es
  410b89:	out    0x86,al
  410b8b:	popa   
  410b8c:	jmp    0xc65140fa
  410b91:	inc    edx
  410b92:	int3   
  410b93:	dec    ecx
  410b94:	xchg   edx,eax
  410b95:	nop
  410b96:	jge    0x410b4a
  410b98:	add    al,0x21
  410b9a:	adc    BYTE PTR [esi],dl
  410b9c:	(bad)  
  410b9d:	daa    
  410b9e:	xchg   edx,eax
  410b9f:	jge    0x410ba9
  410ba1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ba2:	or     eax,esp
  410ba4:	xor    al,0x12
  410ba6:	rcr    bh,0x61
  410ba9:	jno    0x410be6
  410bab:	hlt    
  410bac:	push   edx
  410bad:	jmp    0x410b8e
  410baf:	mov    edx,0xc5de2530
  410bb4:	inc    ebx
  410bb5:	jno    0x410b6a
  410bb7:	mov    ebx,0x16d4ecc3
  410bbc:	retf   0xfa31
  410bbf:	repnz add eax,0x6dbf29b2
  410bc5:	scas   al,BYTE PTR es:[edi]
  410bc6:	xor    al,BYTE PTR [ebx+0x1c]
  410bc9:	call   0xe79d379c
  410bce:	jb     0x410c44
  410bd0:	or     ecx,edx
  410bd2:	mov    ecx,0xf65fc1f5
  410bd7:	or     al,0xb6
  410bd9:	int3   
  410bda:	daa    
  410bdb:	lods   al,BYTE PTR ds:[esi]
  410bdc:	ret    
  410bdd:	xor    dh,BYTE PTR [eax]
  410bdf:	(bad)  
  410be1:	mov    ebp,0xededdbb6
  410be6:	inc    esi
  410be7:	xchg   esp,eax
  410be8:	hlt    
  410be9:	push   ebx
  410bea:	adc    DWORD PTR [esi],ebp
  410bec:	ja     0x410b94
  410bee:	lahf   
  410bef:	cmp    DWORD PTR [ecx+0x3d],ebp
  410bf2:	sub    dl,BYTE PTR [edi-0x37]
  410bf5:	xor    al,0xb4
  410bf7:	inc    ecx
  410bf8:	stc    
  410bf9:	sar    BYTE PTR [esi],1
  410bfb:	push   ecx
  410bfc:	outs   dx,DWORD PTR ds:[esi]
  410bfd:	cwde   
  410bfe:	out    dx,al
  410bff:	mov    dl,0xd8
  410c01:	enter  0xfb81,0x76
  410c05:	xchg   esp,eax
  410c06:	bnd jmp 0x410c19
  410c09:	mov    eax,ds:0x5cafc7ca
  410c0e:	mov    esi,0xe67f031f
  410c13:	pop    edx
  410c14:	jge    0x410c7a
  410c16:	and    eax,0xfa7ff154
  410c1b:	adc    al,0x88
  410c1d:	std    
  410c1e:	test   eax,0x589349ba
  410c23:	xor    al,dl
  410c25:	stos   BYTE PTR es:[edi],al
  410c26:	jl     0x410ca7
  410c28:	add    al,0xcf
  410c2a:	pop    edi
  410c2b:	clc    
  410c2c:	jno    0x410c41
  410c2e:	in     eax,0x95
  410c30:	ror    BYTE PTR [ebp+0x2f4b0d13],1
  410c36:	and    DWORD PTR [ebp+0x7b],0xffffffc1
  410c3a:	daa    
  410c3b:	xlat   BYTE PTR ds:[ebx]
  410c3c:	retf   0x7185
  410c3f:	mov    ds:0x59e7007a,eax
  410c44:	in     al,dx
  410c45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c46:	inc    esp
  410c47:	push   bx
  410c49:	bswap  esp
  410c4b:	add    esi,DWORD PTR [edx]
  410c4d:	pop    ss
  410c4e:	imul   eax,edx,0xe42abf39
  410c54:	mov    ebx,0xfecc13aa
  410c59:	imul   ebp,DWORD PTR [edx-0x775b275c],0x3b
  410c60:	jne    0x410ce1
  410c62:	arpl   WORD PTR ds:0xf93662c6,si
  410c68:	popf   
  410c69:	test   ch,dh
  410c6b:	into   
  410c6c:	jae    0x410c34
  410c6e:	popf   
  410c6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c70:	and    ah,ch
  410c72:	sbb    al,0x52
  410c74:	xchg   DWORD PTR gs:[eax],esp
  410c77:	xchg   ebp,eax
  410c78:	repnz dec esi
  410c7a:	or     dh,BYTE PTR [esi]
  410c7c:	loop   0x410c8c
  410c7e:	adc    edx,DWORD PTR ds:0xa329ba37
  410c84:	and    dl,BYTE PTR [ecx-0x4b]
  410c87:	jmp    0x410c15
  410c89:	lods   eax,DWORD PTR ds:[esi]
  410c8a:	not    ebp
  410c8c:	jne    0x410c64
  410c8e:	inc    DWORD PTR [edx-0x6]
  410c91:	or     ebp,DWORD PTR ds:0xf2fccdba
  410c97:	jno    0x410d08
  410c99:	nop
  410c9a:	mov    bl,0xa9
  410c9c:	add    al,0xd7
  410c9e:	add    eax,0x9fe6485d
  410ca3:	repz mov ch,0x70
  410ca6:	dec    eax
  410ca7:	loopne 0x410c40
  410ca9:	push   ecx
  410caa:	mov    esi,0xb3c8a1dd
  410caf:	cli    
  410cb0:	ja     0x410ce6
  410cb2:	call   0xc7e4bed
  410cb7:	and    ebp,edx
  410cb9:	sbb    BYTE PTR [esi+0x399594e4],dl
  410cbf:	sub    DWORD PTR [edx+0x37],ebp
  410cc2:	lds    eax,FWORD PTR [ecx-0x44]
  410cc5:	push   ss
  410cc6:	or     eax,0xf892420e
  410ccb:	fsubr  DWORD PTR [edx+0xf]
  410cce:	push   ecx
  410ccf:	test   al,0xe8
  410cd1:	stc    
  410cd2:	jnp    0x410d36
  410cd4:	pusha  
  410cd5:	push   ds
  410cd6:	shl    DWORD PTR [edi],0x96
  410cd9:	or     DWORD PTR [eax],edi
  410cdb:	je     0x410cfb
  410cdd:	mov    ds:0x58b40999,al
  410ce2:	inc    ebp
  410ce3:	adc    eax,0xfb466b2c
  410ce8:	mov    al,ds:0x4b11d6cd
  410ced:	pop    ds
  410cee:	push   edi
  410cef:	(bad)  [esi]
  410cf1:	(bad)  
  410cf3:	sahf   
  410cf4:	inc    edx
  410cf5:	dec    eax
  410cf6:	and    edi,DWORD PTR [esi-0x281cad7]
  410cfc:	xchg   esi,eax
  410cfd:	cld    
  410cfe:	shl    BYTE PTR [edi],cl
  410d00:	sub    al,0x32
  410d02:	inc    ecx
  410d03:	rol    esp,1
  410d05:	dec    ebx
  410d06:	mov    cl,0x98
  410d08:	outs   dx,BYTE PTR ds:[esi]
  410d09:	xlat   BYTE PTR ds:[ebx]
  410d0a:	sub    al,0x65
  410d0c:	mov    al,0xb
  410d0e:	sub    eax,0xa1e8ccac
  410d13:	sbb    eax,DWORD PTR [eax+edx*1-0x60]
  410d17:	and    al,0xe7
  410d19:	fst    QWORD PTR [edx+0x78c7565f]
  410d1f:	sbb    dh,BYTE PTR [ecx+esi*4-0x46d0833]
  410d26:	xrelease mov BYTE PTR [edx-0x14],dl
  410d2a:	jmp    0x410d20
  410d2c:	dec    esi
  410d2d:	loope  0x410d03
  410d2f:	xchg   ecx,eax
  410d30:	mov    al,0xec
  410d32:	retf   
  410d33:	pop    esp
  410d34:	sbb    al,ah
  410d36:	cs (bad) 
  410d38:	xchg   ebp,eax
  410d39:	xchg   edi,eax
  410d3a:	sub    ch,bh
  410d3c:	pop    eax
  410d3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d3e:	inc    ecx
  410d3f:	xor    ebx,esp
  410d41:	test   eax,0x7ac28dd2
  410d46:	pop    edx
  410d47:	hlt    
  410d48:	jne    0x410d11
  410d4a:	lods   eax,DWORD PTR ds:[esi]
  410d4b:	push   ebp
  410d4c:	dec    edi
  410d4d:	sub    ah,BYTE PTR [edx-0x50]
  410d50:	fimul  WORD PTR [ebx+esi*1]
  410d53:	in     al,dx
  410d54:	pop    ds
  410d55:	aad    0xef
  410d57:	test   eax,0x8edd74da
  410d5c:	test   DWORD PTR [ecx-0x3a7b9997],esi
  410d62:	and    BYTE PTR [ebp+0x71],al
  410d65:	cwde   
  410d66:	add    DWORD PTR [ecx+0x781aa2e3],0x943dd390
  410d70:	and    dl,al
  410d72:	inc    eax
  410d73:	xor    edx,DWORD PTR [ecx]
  410d75:	jb     0x410d08
  410d77:	aas    
  410d78:	cli    
  410d79:	je     0x410d04
  410d7b:	(bad)  
  410d7c:	adc    ebx,DWORD PTR [ecx+0x3559ca89]
  410d82:	cmp    ebp,eax
  410d84:	dec    edi
  410d85:	mov    cl,0x7d
  410d87:	push   ecx
  410d88:	scas   eax,DWORD PTR es:[edi]
  410d89:	xor    eax,edx
  410d8b:	sub    al,0x60
  410d8d:	pop    ebp
  410d8e:	jne    0x410d4e
  410d90:	pop    esi
  410d91:	adc    ebx,eax
  410d93:	push   esp
  410d94:	jnp    0x410dc3
  410d96:	fidivr WORD PTR [esi+0x3e]
  410d99:	dec    ebx
  410d9a:	dec    edi
  410d9b:	hlt    
  410d9c:	xor    al,0x5f
  410d9e:	mov    ebp,0xec073fdd
  410da3:	mov    BYTE PTR [eax],bl
  410da5:	in     eax,dx
  410da6:	repz push ss
  410da8:	or     esi,ebp
  410daa:	sub    BYTE PTR [edx+0x64fa4575],ah
  410db0:	popa   
  410db1:	rcr    BYTE PTR [ebp-0x7],1
  410db4:	cmp    al,0x55
  410db6:	das    
  410db7:	dec    ecx
  410db8:	jp     0x410ddb
  410dba:	adc    cl,bh
  410dbc:	sub    DWORD PTR [eax],edi
  410dbe:	cwde   
  410dbf:	fst    QWORD PTR [esi-0x2c6701dd]
  410dc5:	lods   al,BYTE PTR ds:[esi]
  410dc6:	push   0xffffffb3
  410dc8:	dec    ebp
  410dc9:	cli    
  410dca:	or     esp,edi
  410dcc:	jmp    0x66f4:0xf281a423
  410dd3:	inc    edx
  410dd4:	fwait
  410dd5:	xchg   ebx,eax
  410dd6:	and    eax,DWORD PTR [ebx+0x71939fe3]
  410ddc:	lahf   
  410ddd:	push   esi
  410dde:	punpcklbw mm1,mm6
  410de1:	test   eax,0x1458c1f2
  410de6:	mov    bh,0xbc
  410de8:	hlt    
  410de9:	add    al,0xa4
  410deb:	mov    dh,0xa0
  410ded:	or     DWORD PTR [esp+edx*8],ecx
  410df0:	pop    eax
  410df1:	xor    DWORD PTR [ecx+0x36],edi
  410df4:	or     al,0xe4
  410df6:	nop
  410df7:	inc    esp
  410df8:	sbb    al,0xe
  410dfa:	call   0x525017d2
  410dff:	(bad)  
  410e01:	add    dh,ch
  410e03:	xchg   ebp,eax
  410e04:	dec    edx
  410e05:	mov    al,ds:0xd0c6919b
  410e0a:	mov    dh,0x96
  410e0c:	mov    al,0xe4
  410e0e:	in     eax,0x2d
  410e10:	inc    esi
  410e11:	mov    ecx,0xfa31b673
  410e16:	push   ebx
  410e17:	dec    esp
  410e18:	shl    DWORD PTR [eax],cl
  410e1a:	gs hlt 
  410e1c:	aam    0x32
  410e1e:	icebp  
  410e1f:	jp     0x410e8f
  410e21:	or     eax,0xbf8bbe
  410e26:	jnp    0x410e81
  410e28:	(bad)  
  410e29:	fmulp  st(6),st
  410e2b:	lds    ebx,FWORD PTR [esi+edx*8]
  410e2e:	repz pusha 
  410e30:	call   0x9dec8aa9
  410e35:	cld    
  410e36:	push   cs
  410e37:	stos   BYTE PTR es:[edi],al
  410e38:	jae    0x410e03
  410e3a:	sbb    eax,0xb725f052
  410e3f:	and    cl,0x2e
  410e42:	and    eax,eax
  410e44:	cld    
  410e45:	outs   dx,DWORD PTR ds:[esi]
  410e46:	fimul  WORD PTR [ecx+edx*2+0x20]
  410e4a:	xchg   BYTE PTR [eax],bl
  410e4c:	or     dl,cl
  410e4e:	xor    ch,dh
  410e50:	(bad)
  410e53:	ins    BYTE PTR es:[edi],dx
  410e54:	sub    DWORD PTR [ebx-0x44],0x9302625
  410e5b:	pop    ds
  410e5c:	mov    ebx,0x262c1c1b
  410e61:	rcl    esp,cl
  410e63:	dec    ebx
  410e64:	dec    esp
  410e65:	cwde   
  410e66:	add    BYTE PTR [ecx+0x4f],ah
  410e69:	mov    ds:0x9c1bc72e,al
  410e6e:	and    BYTE PTR [edx+0x6d],ah
  410e71:	push   ebp
  410e72:	jb     0x410e9e
  410e74:	das    
  410e75:	rol    cl,1
  410e77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e78:	xchg   edi,eax
  410e79:	xor    DWORD PTR [ebx+eiz*4-0x5af59cd0],edi
  410e80:	add    cl,BYTE PTR ds:0xa1f7a8a9
  410e86:	es mov ecx,0xb9383070
  410e8c:	xchg   ebp,eax
  410e8d:	mov    cl,0x21
  410e8f:	dec    ebx
  410e90:	mov    eax,ds:0xa0804fd
  410e95:	cmp    edi,DWORD PTR [esi+0xe84e29d]
  410e9b:	adc    bh,BYTE PTR [edi]
  410e9d:	cmp    dl,0xba
  410ea0:	mov    ebp,0xe339634e
  410ea5:	cs daa 
  410ea7:	int3   
  410ea8:	jmp    0x410ee2
  410eaa:	xor    eax,0x583cc7d3
  410eaf:	jbe    0x410e3b
  410eb1:	add    eax,0x97192c57
  410eb6:	ret    
  410eb7:	jecxz  0x410f14
  410eb9:	in     eax,0x4a
  410ebb:	add    ebp,ebx
  410ebd:	mov    esp,0xa129413a
  410ec2:	xchg   edi,eax
  410ec3:	push   ebp
  410ec4:	push   ebp
  410ec5:	nop
  410ec6:	mov    cl,0x64
  410ec8:	cmp    edi,DWORD PTR [esp+eax*8+0x47cb2052]
  410ecf:	es leave 
  410ed1:	pop    es
  410ed2:	jmp    0x6ed5:0x14405ab7
  410ed9:	add    eax,0xe5335f2f
  410ede:	rcl    BYTE PTR [ebx-0x1f],cl
  410ee1:	pop    eax
  410ee2:	idiv   BYTE PTR ss:[edi+eiz*2+0x76]
  410ee7:	in     al,0x53
  410ee9:	popf   
  410eea:	cmp    ebx,edx
  410eec:	fild   DWORD PTR [edx]
  410eee:	adc    eax,0xe4dc1173
  410ef3:	fwait
  410ef4:	les    edi,FWORD PTR [ebx-0x36f9dc02]
  410efa:	repnz add eax,0x2242d240
  410f00:	(bad)  
  410f01:	xor    al,0xf6
  410f03:	mov    bl,0xcc
  410f05:	rol    BYTE PTR [eax+0x7ed48b43],1
  410f0b:	jp     0x410ec7
  410f0d:	add    ebp,DWORD PTR [esp+ecx*8]
  410f10:	pop    esi
  410f11:	scas   al,BYTE PTR es:[edi]
  410f12:	jmp    0x410ed4
  410f14:	test   al,0xaf
  410f16:	je     0x410f57
  410f18:	xor    BYTE PTR [ecx],dl
  410f1a:	idiv   eax
  410f1c:	mov    dh,0xd2
  410f1e:	inc    ecx
  410f1f:	ja     0x410ebb
  410f21:	dec    eax
  410f22:	in     al,0x3
  410f24:	(bad)  
  410f25:	push   eax
  410f26:	ds mov eax,0x1350ab84
  410f2c:	xor    al,0x24
  410f2e:	cmp    bl,ah
  410f30:	jnp    0x410f90
  410f32:	dec    ecx
  410f33:	mov    ebp,0xd6407e44
  410f38:	sub    eax,0x3d8813ae
  410f3d:	cdq    
  410f3e:	jae    0x410f43
  410f40:	fidivr WORD PTR [ecx+edi*8]
  410f43:	stos   BYTE PTR es:[edi],al
  410f44:	xor    al,0x38
  410f46:	sbb    edi,ebp
  410f48:	inc    esi
  410f49:	push   cs
  410f4a:	or     eax,DWORD PTR [eax]
  410f4c:	push   cs
  410f4d:	xchg   esp,eax
  410f4e:	popa   
  410f4f:	xchg   ebp,eax
  410f50:	pop    edi
  410f51:	retf   0x3002
  410f54:	sbb    DWORD PTR [edx+0x4d7c5642],0x54ac1dbf
  410f5e:	frstor [ebp+0x1c294203]
  410f64:	imul   DWORD PTR [edx+esi*4]
  410f67:	or     eax,0x776d955c
  410f6c:	ins    DWORD PTR es:[edi],dx
  410f6d:	arpl   WORD PTR [edx-0x19a684b2],bp
  410f73:	outs   dx,DWORD PTR ds:[esi]
  410f74:	sbb    al,0x30
  410f76:	mov    esp,0x489cfa0f
  410f7b:	in     eax,dx
  410f7c:	xchg   edx,eax
  410f7d:	xor    esi,eax
  410f7f:	loop   0x410fb8
  410f81:	or     ah,BYTE PTR [edi]
  410f83:	scas   eax,DWORD PTR es:[edi]
  410f84:	inc    edi
  410f85:	in     al,dx
  410f86:	adc    al,0xab
  410f88:	push   cs
  410f89:	inc    si
  410f8b:	mov    eax,ds:0xee2988dc
  410f90:	out    dx,al
  410f91:	and    BYTE PTR [ecx+0x34b99f7e],al
  410f97:	xchg   esi,eax
  410f98:	ret    0x1219
  410f9b:	scas   eax,DWORD PTR es:[edi]
  410f9c:	cmp    al,0x9
  410f9e:	fadd   DWORD PTR [ebx+ebx*1]
  410fa1:	jle    0x410f4f
  410fa3:	inc    eax
  410fa4:	ss popf 
  410fa6:	add    al,0x66
  410fa8:	cmp    al,0x75
  410faa:	test   eax,0xccd6d10c
  410faf:	mov    ebp,esp
  410fb1:	aaa    
  410fb2:	fcom   DWORD PTR [ecx+0x2c]
  410fb5:	(bad)  
  410fb6:	xlat   BYTE PTR ds:[ebx]
  410fb7:	rol    ah,cl
  410fb9:	mov    eax,ds:0xf5884f20
  410fbe:	iret   
  410fbf:	xor    al,0xdb
  410fc1:	fadd   QWORD PTR [eax]
  410fc3:	sub    al,0xe2
  410fc5:	fwait
  410fc6:	stc    
  410fc7:	and    cl,al
  410fc9:	arpl   WORD PTR [ecx+0x38],di
  410fcc:	pop    edi
  410fcd:	es ja  0x410ffc
  410fd0:	out    0x93,eax
  410fd2:	cwde   
  410fd3:	jmp    0x410f99
  410fd5:	xchg   esp,eax
  410fd6:	int    0x7d
  410fd8:	sbb    eax,0x8ed6ba4a
  410fdd:	xor    BYTE PTR ds:0x9162f47f,bl
  410fe3:	fwait
  410fe4:	or     ebp,0x9756f245
  410fea:	jbe    0x41100a
  410fec:	sub    esp,esi
  410fee:	add    esp,DWORD PTR [esi+0x637cf7bd]
  410ff4:	inc    esp
  410ff5:	jne    0x410ffc
  410ff7:	(bad)
  410ffa:	js     0x410fb9
  410ffc:	jle    0x41106b
  410ffe:	sub    edi,DWORD PTR [ebx+0x21]
  411001:	shl    ecx,0xd6
  411004:	push   cs
  411005:	add    al,0xa8
  411007:	dec    edi
  411008:	xor    ah,BYTE PTR [ebp+0x7]
  41100b:	scas   al,BYTE PTR es:[edi]
  41100c:	imul   ebp,DWORD PTR [edi-0x6a],0x9e6d89fb
  411013:	int    0x88
  411015:	ficomp WORD PTR [esi+ecx*2+0x36]
  411019:	imul   DWORD PTR [ecx]
  41101b:	jp     0x411030
  41101d:	in     al,dx
  41101e:	mov    dh,BYTE PTR [edx]
  411020:	and    ch,bh
  411022:	enter  0xa3e7,0xff
  411026:	pop    edi
  411027:	push   0x32f4cacd
  41102c:	data16 fldcw WORD PTR [ecx+0x3d]
  411030:	dec    eax
  411031:	or     al,BYTE PTR [ebx-0x1a]
  411034:	jns    0x411011
  411036:	jp     0x41105a
  411038:	jmp    0x5bd4ab38
  41103d:	or     dl,BYTE PTR [edi-0xbfd37f9]
  411043:	test   eax,0xdbc62911
  411048:	cdq    
  411049:	hlt    
  41104a:	js     0x411035
  41104c:	mov    ch,0xf
  41104e:	sub    ch,BYTE PTR [ecx-0x7caefdec]
  411054:	push   ebx
  411055:	and    esi,edx
  411057:	sbb    ebp,DWORD PTR [esi+0x1736b011]
  41105d:	jnp    0x4110da
  41105f:	jl     0x41104c
  411061:	in     al,0x14
  411063:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411064:	sub    eax,0x1963b00d
  411069:	loop   0x4110b9
  41106b:	pusha  
  41106c:	xor    BYTE PTR [edx-0x340eb514],0xb5
  411073:	nop
  411074:	and    BYTE PTR [esp+eax*1],al
  411077:	cmp    eax,0x5b87f994
  41107c:	cs (bad) 
  41107e:	jmp    FWORD PTR [ecx+ecx*2]
  411081:	pop    esp
  411082:	pop    ds
  411083:	or     eax,0x91c2a15c
  411088:	leave  
  411089:	(bad)  
  41108a:	shr    BYTE PTR [ebx],0xb4
  41108d:	cdq    
  41108e:	mov    dl,0xfa
  411090:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411091:	pop    ss
  411092:	shl    BYTE PTR [edx+0x1b20b424],cl
  411098:	das    
  411099:	call   0x3bbc:0xfc01a376
  4110a0:	fwait
  4110a1:	sti    
  4110a2:	push   0xffffffd1
  4110a4:	call   0x2a7a9bd6
  4110a9:	mov    al,ds:0x8564e9a9
  4110ae:	adc    al,BYTE PTR [ebp+0x45439b01]
  4110b4:	in     eax,0x3b
  4110b6:	or     edi,DWORD PTR [edi+edi*8]
  4110b9:	mov    al,ds:0x748a080
  4110be:	out    dx,eax
  4110bf:	pop    esp
  4110c0:	inc    ecx
  4110c1:	inc    esi
  4110c2:	push   esi
  4110c3:	jmp    0x41109d
  4110c5:	or     bh,BYTE PTR [ecx]
  4110c7:	xchg   edi,eax
  4110c8:	cmp    cl,dh
  4110ca:	adc    al,0x3e
  4110cc:	cdq    
  4110cd:	in     al,0x2e
  4110cf:	sub    ebp,DWORD PTR [edx-0x3]
  4110d2:	dec    esp
  4110d3:	inc    ebx
  4110d4:	push   0x83bdfcbb
  4110d9:	test   BYTE PTR [eax+0x6de327fd],dl
  4110df:	jecxz  0x411071
  4110e1:	mov    ds:0x8e8fa59b,al
  4110e6:	push   es
  4110e7:	or     esp,DWORD PTR [ebx+0x51]
  4110ea:	sub    esp,DWORD PTR [ecx]
  4110ec:	enter  0xf3ec,0xf2
  4110f0:	sub    DWORD PTR [ebx-0x3d81e8d6],ecx
  4110f6:	(bad)  
  4110f7:	jge    0x4110f8
  4110f9:	xchg   edi,eax
  4110fa:	mov    al,0x4c
  4110fc:	rcl    ebp,0xee
  4110ff:	or     BYTE PTR [edx+0x38fd0890],0xb6
  411106:	xor    BYTE PTR ds:0xe6b335fa,dl
  41110c:	call   0xd536978d
  411111:	scas   al,BYTE PTR es:[edi]
  411112:	sti    
  411113:	ret    
  411114:	jmp    0xa4df:0x743e991f
  41111b:	pop    eax
  41111c:	adc    al,0x64
  41111e:	rcpps  xmm6,XMMWORD PTR [ebx]
  411121:	mov    bl,0x3a
  411123:	xlat   BYTE PTR ds:[ebx]
  411124:	sbb    esi,0xffffffab
  411127:	out    0x44,eax
  411129:	jl     0x4111a3
  41112b:	push   edi
  41112c:	sbb    esi,DWORD PTR [esi+0x2445f9ef]
  411132:	jnp    0x411134
  411134:	dec    ebp
  411135:	scas   eax,DWORD PTR es:[edi]
  411136:	cmp    eax,0x4aa53291
  41113b:	call   0x44160aa4
  411140:	jmp    0xb00443bb
  411145:	mov    dl,0x55
  411147:	sbb    dh,BYTE PTR [ebp-0x27]
  41114a:	xchg   ebx,eax
  41114b:	hlt    
  41114c:	gs mov esp,0xf8437f37
  411152:	stos   BYTE PTR es:[edi],al
  411153:	and    BYTE PTR [edx],cl
  411155:	scas   al,BYTE PTR es:[edi]
  411156:	addr16 jl 0x41117f
  411159:	pop    ds
  41115a:	push   edi
  41115b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41115c:	outs   dx,DWORD PTR ds:[esi]
  41115d:	stos   DWORD PTR es:[edi],eax
  41115e:	icebp  
  41115f:	ins    BYTE PTR es:[edi],dx
  411160:	mov    ebx,0xb380c5d3
  411165:	inc    ebp
  411166:	xchg   edi,eax
  411167:	call   0x7b15:0x8bdf26ff
  41116e:	add    DWORD PTR [edi+0x24],ebp
  411171:	pop    esi
  411172:	mov    esi,0x11d61f61
  411177:	test   eax,0xf2cfce5f
  41117c:	into   
  41117d:	pop    esp
  41117e:	icebp  
  41117f:	stos   DWORD PTR es:[edi],eax
  411180:	fisubr DWORD PTR [ebp+0x47]
  411183:	sub    DWORD PTR [edx-0x4ba23808],ecx
  411189:	cmp    cl,BYTE PTR [eax-0x71]
  41118c:	ret    
  41118d:	xchg   esp,eax
  41118e:	ds push edi
  411190:	add    ah,dh
  411192:	jg     0x4111e3
  411194:	out    0xaf,al
  411196:	adc    eax,0x81a62a1d
  41119b:	idiv   DWORD PTR [edi-0x2d0a114a]
  4111a1:	adc    BYTE PTR [eax-0x46],bh
  4111a4:	pop    ss
  4111a5:	xchg   BYTE PTR [edi-0x52],bh
  4111a8:	and    ebp,0x30
  4111ab:	les    ecx,FWORD PTR [esi+0x54]
  4111ae:	mov    ch,al
  4111b0:	and    eax,0x8e8fa652
  4111b5:	cli    
  4111b6:	and    al,0x37
  4111b8:	jo     0x4111b6
  4111ba:	aam    0x2
  4111bc:	dec    edi
  4111bd:	xchg   edi,eax
  4111be:	xor    DWORD PTR [eax+0x1d4622e7],edi
  4111c4:	out    dx,eax
  4111c5:	loopne 0x4111b3
  4111c7:	pop    ds
  4111c8:	sbb    BYTE PTR [edx-0x71],bl
  4111cb:	test   eax,0xbcc9fd78
  4111d0:	aaa    
  4111d1:	adc    al,BYTE PTR [edx-0x7b]
  4111d4:	test   al,0x52
  4111d6:	dec    ebp
  4111d7:	out    dx,al
  4111d8:	neg    BYTE PTR [edi]
  4111da:	pop    edi
  4111db:	xchg   edi,eax
  4111dc:	xor    edi,DWORD PTR [esi+ecx*8-0x34]
  4111e0:	dec    ebp
  4111e1:	fwait
  4111e2:	dec    ecx
  4111e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111e4:	inc    edx
  4111e5:	xchg   bl,al
  4111e7:	fimul  DWORD PTR [ebx-0x8a903d2]
  4111ed:	loop   0x411185
  4111ef:	leave  
  4111f0:	inc    ecx
  4111f1:	in     al,0x58
  4111f3:	cmp    al,0x56
  4111f5:	nop
  4111f6:	popf   
  4111f7:	jnp    0x4111ee
  4111f9:	mov    ah,0x50
  4111fb:	mov    ecx,DWORD PTR [esi+eiz*8]
  4111fe:	add    BYTE PTR [esp+esi*1+0x52],ch
  411202:	inc    esp
  411203:	push   cs
  411204:	imul   esi,DWORD PTR [eax+0x6176b8a9],0x6230d86c
  41120e:	je     0x4111c4
  411210:	mov    edx,0x55b0d441
  411215:	fild   DWORD PTR [edx-0xeb279a8]
  41121b:	xlat   BYTE PTR ds:[ebx]
  41121c:	pop    esi
  41121d:	fs iret 
  41121f:	sbb    edi,DWORD PTR [esi]
  411221:	loop   0x411229
  411223:	shl    BYTE PTR [edi+0x5012240a],0xf6
  41122a:	ja     0x41123f
  41122c:	and    BYTE PTR [edi+0xc3ca344],dl
  411232:	mov    BYTE PTR [eax+0x64af3cb8],al
  411238:	xor    bh,ch
  41123a:	inc    ebx
  41123b:	add    al,0x25
  41123d:	mov    WORD PTR [esi],fs
  41123f:	scas   eax,DWORD PTR es:[edi]
  411240:	jbe    0x411259
  411242:	cld    
  411243:	rcl    esp,0x16
  411246:	mov    dl,0xe
  411248:	test   al,0xdc
  41124a:	je     0x411254
  41124c:	add    edx,DWORD PTR [ecx]
  41124e:	and    esi,DWORD PTR [ebx+0x1e143e7a]
  411254:	cmp    bl,dl
  411256:	mov    dl,0x25
  411258:	and    bl,BYTE PTR [eax]
  41125a:	adc    DWORD PTR [ecx-0x696c8dbd],eax
  411260:	push   0xb29c8a5a
  411265:	out    dx,eax
  411266:	idiv   BYTE PTR [esi+ebx*2+0x21]
  41126a:	lea    ebx,[ebp+ecx*4+0x221ee636]
  411271:	jbe    0x4112b0
  411273:	bound  esi,QWORD PTR [esp+ebx*8]
  411276:	fwait
  411277:	inc    BYTE PTR [ebx-0x16]
  41127a:	test   eax,0x3429fd4f
  41127f:	sbb    bl,dl
  411281:	xor    al,0x13
  411283:	inc    edi
  411284:	test   al,0xb8
  411286:	push   ecx
  411287:	mov    dh,0x95
  411289:	lock inc esi
  41128b:	mov    edx,DWORD PTR [ecx+eiz*1-0x7e]
  41128f:	mov    dl,0xae
  411291:	rcr    ebp,cl
  411293:	sbb    edi,DWORD PTR [eax+0x1d]
  411296:	je     0x411275
  411298:	pop    ds
  411299:	out    0x8a,eax
  41129b:	jge    0x4112e0
  41129d:	call   0x4ca7:0xc2b76a08
  4112a4:	sbb    eax,0xac681e25
  4112a9:	pop    ebp
  4112aa:	in     eax,0x52
  4112ac:	out    0x97,eax
  4112ae:	mov    esi,0x90e4c846
  4112b3:	mov    bl,0x9c
  4112b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112b6:	loope  0x4112c2
  4112b8:	lea    edx,[ebp+edx*1-0x6d6d7b3a]
  4112bf:	xor    DWORD PTR [edi],esp
  4112c1:	mov    cl,0x1c
  4112c3:	retf   0x6069
  4112c6:	sub    eax,0x8755e8be
  4112cb:	pop    edx
  4112cc:	add    al,ah
  4112ce:	xor    dl,ch
  4112d0:	in     eax,0x12
  4112d2:	push   ss
  4112d3:	or     BYTE PTR [edi+0x72a6c402],0x1e
  4112da:	cmp    DWORD PTR [edi-0x39],edi
  4112dd:	imul   ebx,edi,0x1c994c52
  4112e3:	push   eax
  4112e4:	cld    
  4112e5:	rcr    BYTE PTR ds:0x256b61f9,1
  4112eb:	ins    DWORD PTR es:[edi],dx
  4112ec:	dec    ebx
  4112ed:	cmp    ebp,edi
  4112ef:	cld    
  4112f0:	or     BYTE PTR [edi],0xab
  4112f3:	sub    bh,BYTE PTR [ebx+0x7d]
  4112f6:	sub    al,0xe9
  4112f8:	inc    eax
  4112f9:	sbb    eax,0x3a50dff6
  4112fe:	push   cs
  4112ff:	push   0xfffffff2
  411301:	sar    al,0x86
  411304:	sub    eax,0x138a645f
  411309:	out    dx,al
  41130a:	les    ecx,FWORD PTR [ebx+0x36]
  41130d:	sbb    al,0x88
  41130f:	gs push 0x23ab75ab
  411315:	jns    0x4112d3
  411317:	scas   al,BYTE PTR es:[edi]
  411318:	dec    edi
  411319:	stc    
  41131a:	xor    eax,DWORD PTR [esi+eiz*1+0x17]
  41131e:	fcom   DWORD PTR [ecx+eax*8]
  411321:	or     eax,0x6f00bcf
  411326:	adc    ecx,DWORD PTR [ebp-0xc19f5ab]
  41132c:	mul    DWORD PTR [ecx-0x260a9d64]
  411332:	ja     0x41133b
  411334:	std    
  411335:	inc    esi
  411336:	loope  0x411337
  411338:	addr16 mov edx,edi
  41133b:	ins    BYTE PTR es:[edi],dx
  41133c:	sub    bh,dl
  41133e:	mov    cl,0xd6
  411340:	(bad)  
  411341:	retf   
  411342:	mov    bh,BYTE PTR ds:0x6300929b
  411348:	out    dx,al
  411349:	bnd jp 0x411309
  41134c:	aad    0x12
  41134e:	mov    bh,0x68
  411350:	mov    WORD PTR [ecx-0x55694c74],?
  411356:	stos   DWORD PTR es:[edi],eax
  411357:	xor    DWORD PTR [edx+0x28],esi
  41135a:	jl     0x41130d
  41135c:	inc    ebp
  41135d:	dec    edi
  41135e:	sbb    al,0x52
  411360:	push   ebp
  411361:	fcmovne st,st(0)
  411363:	push   ebx
  411364:	dec    esp
  411365:	jo     0x41130c
  411367:	add    BYTE PTR [esi+0x744accae],bl
  41136d:	mov    edi,0x703ee030
  411372:	mov    esp,0xd73fb56e
  411377:	xor    DWORD PTR [edi],0xffffff9e
  41137a:	xchg   ebp,eax
  41137b:	dec    edx
  41137c:	jnp    0x411370
  41137e:	and    ebp,ebx
  411380:	(bad)  [esi+0x1c]
  411383:	push   cs
  411384:	dec    esp
  411385:	pushf  
  411386:	stos   BYTE PTR es:[edi],al
  411387:	inc    ebx
  411388:	mov    bl,0xf6
  41138a:	and    ebx,DWORD PTR [ecx-0xb]
  41138d:	cmp    DWORD PTR [esi+ebp*4],esp
  411390:	mov    ch,0x97
  411392:	push   edi
  411393:	pop    esi
  411394:	mov    edi,0xbd7bf9f1
  411399:	jle    0x411368
  41139b:	(bad)  
  41139c:	adc    dh,BYTE PTR [esi]
  41139e:	cmp    BYTE PTR [ecx-0x2ff9a80a],ah
  4113a4:	pop    ecx
  4113a5:	hlt    
  4113a6:	dec    edi
  4113a7:	mov    dh,0x7f
  4113a9:	jnp    0x411390
  4113ab:	and    dh,dh
  4113ad:	xor    eax,0x5cf41464
  4113b2:	shl    DWORD PTR [ecx-0x35],1
  4113b5:	dec    DWORD PTR [ecx]
  4113b7:	jmp    0xb07c60a2
  4113bc:	(bad)  
  4113bd:	pusha  
  4113be:	jmp    0x4113df
  4113c0:	jbe    0x41134a
  4113c2:	test   al,0x7
  4113c4:	retf   0x2bd9
  4113c7:	mov    al,dh
  4113c9:	xor    edx,ebx
  4113cb:	xor    eax,0xc4e172c8
  4113d0:	rol    DWORD PTR [ebx-0x26],0x1
  4113d4:	retf   0x1144
  4113d7:	fs scas al,BYTE PTR es:[edi]
  4113d9:	mov    DWORD PTR [esi-0x14d5f01c],edx
  4113df:	(bad)  
  4113e1:	sti    
  4113e2:	call   0x7692c72a
  4113e7:	call   FWORD PTR [ebx]
  4113e9:	(bad)  
  4113ea:	cmp    ebp,DWORD PTR [ebx+eax*1]
  4113ed:	sub    eax,0xaeea4923
  4113f2:	enter  0x2ad7,0x4
  4113f6:	push   ecx
  4113f7:	lahf   
  4113f8:	inc    esp
  4113f9:	popa   
  4113fa:	mov    ch,0xd
  4113fc:	out    0x66,al
  4113fe:	pop    ebx
  4113ff:	mov    bh,0x22
  411401:	xrelease mov BYTE PTR [eax],0x7f
  411405:	shr    DWORD PTR [ecx],0xe1
  411408:	push   eax
  411409:	icebp  
  41140a:	adc    eax,DWORD PTR [edi]
  41140c:	fwait
  41140d:	fwait
  41140e:	pop    ecx
  41140f:	push   ebx
  411410:	adc    BYTE PTR [edx+0xb],dl
  411413:	inc    ecx
  411414:	outs   dx,DWORD PTR ds:[esi]
  411415:	(bad)  
  411416:	xor    dl,BYTE PTR ds:0x5623e114
  41141c:	mov    ch,0xcb
  41141e:	cli    
  41141f:	jle    0x411495
  411421:	loope  0x41141f
  411423:	mov    ecx,0xaee0e6d1
  411428:	push   eax
  411429:	xlat   BYTE PTR ds:[ebx]
  41142a:	dec    edx
  41142b:	or     BYTE PTR [ecx],bl
  41142d:	ret    
  41142e:	dec    ebx
  41142f:	scas   eax,DWORD PTR es:[edi]
  411430:	ror    DWORD PTR [edx+ebp*8+0x70],1
  411434:	stc    
  411435:	xchg   ebx,eax
  411436:	cmc    
  411437:	sub    esi,DWORD PTR [eax-0x47391eb5]
  41143d:	imul   eax,DWORD PTR [edx+0x38a968d1],0xd62f154
  411447:	loope  0x4113e2
  411449:	daa    
  41144a:	(bad)  
  41144b:	iret   
  41144c:	add    eax,0xd80f9d41
  411451:	sbb    al,0xf8
  411453:	mov    ch,0x81
  411455:	dec    ebx
  411456:	in     eax,dx
  411457:	mov    ch,0x29
  411459:	into   
  41145a:	mov    ds:0x96aefb3,al
  41145f:	push   ds
  411460:	dec    esp
  411461:	jge    0x41149a
  411463:	or     DWORD PTR [ebx-0x65],eax
  411466:	loopne 0x4114b6
  411468:	fnstenv ds:0xdd8ab957
  41146e:	sub    bh,BYTE PTR [edi+0xd]
  411471:	and    DWORD PTR [ebx-0x7ff7c590],ecx
  411477:	jne    0x411467
  411479:	sbb    BYTE PTR [edx+0x74],al
  41147c:	imul   edi,DWORD PTR [edx+0x7e],0xad1bea98
  411483:	mov    BYTE PTR [edx-0x1b489ecc],ah
  411489:	add    eax,0x380a79d
  41148e:	and    BYTE PTR [ebp-0x72],bl
  411491:	xlat   BYTE PTR ds:[ebx]
  411492:	enter  0x80d6,0x92
  411496:	pop    ds
  411497:	mov    DWORD PTR [eax-0x4d414118],esi
  41149d:	out    dx,eax
  41149e:	test   DWORD PTR [ebp+0x18],esp
  4114a1:	stos   DWORD PTR es:[edi],eax
  4114a2:	and    DWORD PTR [edx],edx
  4114a4:	pop    ds
  4114a5:	loopne 0x4114a1
  4114a7:	in     al,0xf8
  4114a9:	push   edx
  4114aa:	jg     0x4114c9
  4114ac:	xor    DWORD PTR [esi],0xffffff9a
  4114af:	lods   eax,DWORD PTR ds:[esi]
  4114b0:	dec    ecx
  4114b1:	mov    BYTE PTR [ecx-0x65a37540],ah
  4114b7:	adc    eax,0x4d122194
  4114bc:	ja     0x41153c
  4114be:	loopne 0x411471
  4114c0:	pop    es
  4114c1:	jecxz  0x41148c
  4114c3:	cmp    edx,edx
  4114c5:	sbb    BYTE PTR [ebp-0x80],dh
  4114c8:	les    esp,FWORD PTR [edi]
  4114ca:	pop    edi
  4114cb:	push   ss
  4114cc:	leave  
  4114cd:	inc    edx
  4114ce:	addr16 mov ah,0x5
  4114d1:	pop    ds
  4114d2:	mov    ?,edi
  4114d4:	fbld   TBYTE PTR [eax]
  4114d6:	jecxz  0x4114e2
  4114d8:	imul   edx,DWORD PTR [ecx+esi*4],0x9cf82852
  4114df:	xor    DWORD PTR [esp+ebx*4-0x1360eea4],ebx
  4114e6:	mov    bh,0x5c
  4114e8:	fisubr DWORD PTR ds:0x2429be1
  4114ee:	inc    ecx
  4114ef:	sbb    DWORD PTR [ecx-0x8],eax
  4114f2:	bound  ebp,QWORD PTR [esi]
  4114f4:	mov    esp,0xb96e2935
  4114fa:	push   ebp
  4114fb:	aas    
  4114fc:	clc    
  4114fd:	xchg   esi,eax
  4114fe:	push   eax
  4114ff:	push   ss
  411500:	sub    eax,0xd7a4e7a2
  411505:	lds    edx,FWORD PTR [eax]
  411507:	xor    al,0xfa
  411509:	inc    eax
  41150a:	mov    ss,WORD PTR [ecx-0x716899be]
  411510:	push   edi
  411511:	test   DWORD PTR [ebx+0x54],edi
  411514:	push   ebx
  411515:	mov    ecx,0xb2ec518d
  41151a:	ins    BYTE PTR es:[edi],dx
  41151b:	rol    BYTE PTR [ebx-0x77bacae6],cl
  411521:	sbb    eax,0xc860e273
  411526:	mov    edx,0xe311a048
  41152b:	pop    ebp
  41152c:	add    DWORD PTR [ecx-0xc],ecx
  41152f:	push   ss
  411530:	push   0x4036b410
  411535:	rcl    BYTE PTR [ecx],1
  411537:	and    al,0x13
  411539:	outs   dx,BYTE PTR ds:[esi]
  41153a:	lods   eax,DWORD PTR ds:[esi]
  41153b:	ss jns 0x411566
  41153e:	popa   
  41153f:	scas   eax,DWORD PTR es:[edi]
  411540:	ins    BYTE PTR es:[edi],dx
  411541:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411542:	loop   0x4115ad
  411544:	add    eax,0x5a945bee
  411549:	nop
  41154a:	mov    bh,0xf6
  41154c:	frstor [ebp-0x4842ee83]
  411552:	push   ebx
  411553:	arpl   dx,cx
  411555:	add    bh,ah
  411557:	adc    ebx,edi
  411559:	fisubr WORD PTR [ecx+ecx*2]
  41155c:	pop    esp
  41155d:	push   ebp
  41155e:	lods   al,BYTE PTR ds:[esi]
  41155f:	push   es
  411560:	pop    esp
  411561:	cmp    al,0xfc
  411563:	sub    dh,BYTE PTR [eax+0xa]
  411566:	jno    0x41154a
  411568:	pop    ds
  411569:	popf   
  41156a:	push   eax
  41156b:	js     0x41157b
  41156d:	adc    al,BYTE PTR [ebx-0x47]
  411570:	and    ch,BYTE PTR [ebp+0x471d49be]
  411576:	sbb    eax,0xada390cc
  41157b:	imul   edi,ecx,0x49
  41157e:	mov    edx,ds
  411580:	fwait
  411581:	xor    DWORD PTR [edx+edx*8+0x762d76b4],ecx
  411588:	fcomp  QWORD PTR [eax]
  41158a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41158b:	outs   dx,DWORD PTR ds:[esi]
  41158c:	pop    esi
  41158d:	imul   esi,DWORD PTR [ecx+0x11],0x83266e75
  411594:	push   esi
  411595:	out    0x81,al
  411597:	lods   eax,DWORD PTR ds:[esi]
  411598:	jmp    0x411562
  41159a:	lods   al,BYTE PTR ds:[esi]
  41159b:	and    BYTE PTR [ebx],0x93
  41159e:	sub    al,0x6a
  4115a0:	pop    ss
  4115a1:	push   ebx
  4115a2:	std    
  4115a3:	mov    ebp,0x1ac02784
  4115a8:	ja     0x41161f
  4115aa:	inc    ebp
  4115ab:	sbb    esi,DWORD PTR [ecx+0x609f988]
  4115b1:	sub    al,0xe5
  4115b3:	push   ss
  4115b4:	add    al,0x43
  4115b6:	scas   al,BYTE PTR es:[edi]
  4115b7:	stos   DWORD PTR es:[edi],eax
  4115b8:	cmp    eax,0xf7115a2e
  4115bd:	aas    
  4115be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115bf:	movq   mm3,mm5
  4115c2:	xchg   edx,eax
  4115c3:	fnstcw WORD PTR [edx-0x29ac197b]
  4115c9:	repz call 0xb162:0x5f2af187
  4115d1:	outs   dx,DWORD PTR ds:[esi]
  4115d2:	call   0xc7e3cdfd
  4115d7:	sub    esi,ebx
  4115d9:	xlat   BYTE PTR ds:[ebx]
  4115da:	je     0x4115ef
  4115dc:	cmc    
  4115dd:	pop    edx
  4115de:	jmp    0xc472d494
  4115e3:	into   
  4115e4:	or     DWORD PTR [esi-0x3055223e],esi
  4115ea:	in     al,dx
  4115eb:	(bad)  
  4115ed:	rol    BYTE PTR [ebx],1
  4115ef:	push   ss
  4115f0:	mov    ds:0xbb862315,al
  4115f5:	out    dx,al
  4115f6:	inc    ebx
  4115f7:	daa    
  4115f8:	clc    
  4115f9:	adc    edx,DWORD PTR [ebx]
  4115fb:	pop    esi
  4115fc:	(bad)
  4115ff:	add    ecx,DWORD PTR [ebp-0x4d]
  411602:	mov    bl,0xe5
  411604:	or     dh,BYTE PTR [edi]
  411606:	xor    DWORD PTR [esi],0x52fa077
  41160c:	push   edi
  41160d:	ret    0x5abe
  411610:	loopne 0x411599
  411612:	jns    0x41163a
  411614:	push   ecx
  411615:	into   
  411616:	pop    edx
  411617:	bound  ebx,QWORD PTR ds:0x27140125
  41161d:	sub    ah,cl
  41161f:	mov    ds:0x3a680145,al
  411624:	sbb    DWORD PTR [edx],eax
  411626:	adc    esi,esi
  411628:	or     dl,BYTE PTR [ecx]
  41162a:	xor    esp,0xfffffff1
  41162d:	(bad)  [eax]
  41162f:	and    esi,DWORD PTR [edi+0x10]
  411632:	jg     0x4115c0
  411634:	cmc    
  411635:	mov    edx,0x8d9fb534
  41163a:	data16 loopne 0x4116b2
  41163d:	mov    ebp,0x53ed9196
  411642:	pop    eax
  411643:	jp     0x4116b1
  411645:	cdq    
  411646:	xor    ebx,edi
  411648:	xchg   ebx,eax
  411649:	and    al,0x4d
  41164b:	mov    eax,0x7a3af173
  411650:	jnp    0x41168c
  411652:	test   eax,0xd75d3355
  411657:	push   esp
  411658:	fs loop 0x41169c
  41165b:	adc    BYTE PTR [ebx+esi*4+0x29],bl
  41165f:	aam    0x43
  411661:	or     al,0x1
  411663:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411664:	dec    eax
  411665:	ins    BYTE PTR es:[edi],dx
  411666:	mov    al,0xed
  411668:	push   eax
  411669:	cmp    esi,edi
  41166b:	ficom  DWORD PTR [esi-0x2]
  41166e:	sbb    eax,0xc43f52df
  411673:	add    ecx,DWORD PTR ds:0x2f864a3c
  411679:	mov    gs,WORD PTR [eax-0x2947a5ae]
  41167f:	loopne 0x411650
  411681:	sub    eax,0x4c05b33d
  411686:	ss popa 
  411688:	and    DWORD PTR [eax-0x6f],ecx
  41168b:	fdiv   QWORD PTR [esi-0x456983ba]
  411691:	inc    eax
  411692:	lds    esp,FWORD PTR [edx-0x23cd9b80]
  411698:	or     al,al
  41169a:	in     eax,0x16
  41169c:	pusha  
  41169d:	aam    0x31
  41169f:	push   ecx
  4116a0:	fs leave 
  4116a2:	lea    edx,ds:0xfac3446b
  4116a8:	fdiv   QWORD PTR [ebp-0x63057946]
  4116ae:	(bad)  
  4116af:	mov    dl,ah
  4116b1:	out    0x17,al
  4116b3:	(bad)  
  4116b5:	dec    ebp
  4116b6:	ss or  ch,bh
  4116b9:	mov    DWORD PTR [edx],edi
  4116bb:	xor    eax,0xfd68f84f
  4116c0:	mov    eax,ds:0x92269042
  4116c5:	hlt    
  4116c6:	in     al,0x13
  4116c8:	cmc    
  4116c9:	xor    eax,edi
  4116cb:	jnp    0x411686
  4116cd:	gs in  al,dx
  4116cf:	and    eax,0x1699a894
  4116d4:	stos   BYTE PTR es:[edi],al
  4116d5:	push   ecx
  4116d6:	pop    ecx
  4116d7:	sbb    al,0x71
  4116d9:	add    bh,cl
  4116db:	or     dh,ch
  4116dd:	ds sub eax,0xc740dd15
  4116e3:	lock jge 0x4116fb
  4116e6:	jne    0x41175a
  4116e8:	sub    ecx,esi
  4116ea:	jo     0x41170c
  4116ec:	(bad)  
  4116ed:	xchg   esp,eax
  4116ee:	rcl    DWORD PTR [ecx-0x66a10467],cl
  4116f4:	lds    ebx,FWORD PTR [edx+0x361b8e4b]
  4116fa:	out    dx,al
  4116fb:	mov    esi,0xb90701e9
  411700:	in     al,0x85
  411702:	(bad)  
  411703:	mov    dl,0xa
  411705:	mov    edi,eax
  411707:	leave  
  411708:	daa    
  411709:	adc    DWORD PTR [ebp+0x4cc67a25],eax
  41170f:	adc    ah,BYTE PTR [edx]
  411711:	add    cl,0x5a
  411714:	out    0x51,eax
  411716:	push   bp
  411718:	and    eax,0x1008816a
  41171d:	dec    eax
  41171e:	push   es
  41171f:	popa   
  411720:	sub    BYTE PTR [ebp+0x3],al
  411723:	push   es
  411724:	add    ah,BYTE PTR [eax+esi*8]
  411727:	retf   
  411728:	sbb    BYTE PTR [edi-0x52c433f9],dh
  41172e:	arpl   WORD PTR [ecx-0x30516e93],di
  411734:	fwait
  411735:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411736:	xchg   edi,eax
  411737:	aas    
  411738:	test   DWORD PTR [esi],esp
  41173a:	es jge 0x41174a
  41173d:	mov    bh,0xd4
  41173f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411740:	mov    al,ds:0x39df852a
  411745:	mov    ebx,0xc416577
  41174a:	xor    ah,dl
  41174c:	sub    eax,0x6c0f6830
  411751:	dec    ebx
  411752:	pop    edi
  411753:	aaa    
  411754:	cdq    
  411755:	mov    al,ds:0x47d68405
  41175a:	mov    ah,0x87
  41175c:	jne    0x4116de
  41175e:	rcr    BYTE PTR [esp+edi*8+0x39],0xfe
  411763:	mov    dh,0x58
  411765:	lods   al,BYTE PTR ds:[esi]
  411766:	cmp    ch,BYTE PTR [esp+eiz*2-0x1c]
  41176a:	out    0xaa,al
  41176c:	mov    ds:0xa63df131,eax
  411771:	mov    dl,0x8f
  411773:	fidiv  WORD PTR [ebx-0x13]
  411776:	xor    ah,BYTE PTR [esi+0x2668b51d]
  41177c:	repz dec eax
  41177e:	scas   eax,DWORD PTR es:[edi]
  41177f:	jno    0x4117b5
  411781:	(bad)  
  411782:	imul   ch
  411784:	aas    
  411785:	mov    fs,WORD PTR [edx+0x61a5cb48]
  41178b:	xor    BYTE PTR [ebp-0x77],ah
  41178e:	xor    ah,BYTE PTR [ecx-0x11]
  411791:	dec    edx
  411792:	mov    eax,0x9d3a8ac5
  411797:	mov    ah,0x10
  411799:	and    esi,DWORD PTR [ebp-0x4e]
  41179c:	out    0xfc,al
  41179e:	jl     0x411769
  4117a0:	or     DWORD PTR [edi],ecx
  4117a2:	xor    al,0x8d
  4117a4:	out    0xb,eax
  4117a6:	inc    esp
  4117a7:	call   0xf385:0x4bd071a
  4117ae:	inc    edi
  4117af:	sbb    eax,0x8ad4f46
  4117b4:	shl    DWORD PTR [edi],1
  4117b6:	pop    ebx
  4117b7:	mov    bh,0x9f
  4117b9:	xchg   ecx,eax
  4117ba:	or     eax,0x785487a9
  4117bf:	cmp    BYTE PTR [edx-0x3b],0x84
  4117c3:	stos   BYTE PTR es:[edi],al
  4117c4:	retf   0x7d70
  4117c7:	xlat   BYTE PTR ds:[ebx]
  4117c8:	das    
  4117c9:	push   es
  4117ca:	jl     0x4117d1
  4117cc:	(bad)  [ebp-0x4c]
  4117cf:	fld    st(0)
  4117d1:	add    BYTE PTR [esi],cl
  4117d3:	xchg   esp,eax
  4117d4:	add    BYTE PTR cs:[esi+edi*8],ah
  4117d8:	pop    ecx
  4117d9:	pop    edx
  4117da:	mov    ds:0x3197845f,eax
  4117df:	sub    eax,0x1c22a2be
  4117e4:	or     eax,0x2e6079e9
  4117e9:	mov    bh,BYTE PTR [ebp+0x2bd3f156]
  4117ef:	into   
  4117f0:	xor    ecx,eax
  4117f2:	mov    DWORD PTR [ebp+0x8],ecx
  4117f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4117f8:	mov    edx,DWORD PTR [ebp+0x8]
  4117fb:	imul   edx,edx,0x5708f1
  411801:	xor    ecx,eax
  411803:	add    ecx,esi
  411805:	lea    ecx,[ebp+ecx*4-0x64]
  411809:	mov    edi,DWORD PTR [ecx]
  41180b:	add    edx,edi
  41180d:	mov    DWORD PTR [ecx],edx
  41180f:	mov    ecx,DWORD PTR [ebp+0x8]
  411812:	xor    ecx,eax
  411814:	add    ecx,esi
  411816:	jne    0x40f45a
  41181c:	jmp    0x413bef
  411821:	mov    ecx,DWORD PTR [ebp+0x8]
  411824:	mov    edx,DWORD PTR [ebp-0x8]
  411827:	xor    ecx,eax
  411829:	xor    edx,eax
  41182b:	sub    ecx,edx
  41182d:	sub    ecx,esi
  41182f:	xor    ecx,eax
  411831:	mov    DWORD PTR [ebp+0x8],ecx
  411834:	mov    ecx,DWORD PTR [ebp+0x8]
  411837:	mov    edx,DWORD PTR [ebp+0x8]
  41183a:	xor    ecx,eax
  41183c:	imul   edx,edx,0x5708f1
  411842:	add    ecx,esi
  411844:	lea    ecx,[ebp+ecx*4-0x64]
  411848:	mov    edi,DWORD PTR [ecx]
  41184a:	add    edx,edi
  41184c:	mov    DWORD PTR [ecx],edx
  41184e:	mov    ecx,DWORD PTR [ebp+0x8]
  411851:	xor    ecx,eax
  411853:	add    ecx,esi
  411855:	jne    0x411821
  41185b:	jmp    0x413be3
  411860:	ins    BYTE PTR es:[edi],dx
  411861:	jns    0x4117f2
  411863:	sbb    edi,DWORD PTR [ebx+0x1b]
  411866:	mov    eax,0xa6df667b
  41186b:	push   edi
  41186c:	outs   dx,DWORD PTR ds:[esi]
  41186d:	out    0xd9,al
  41186f:	jp     0x411859
  411871:	nop
  411872:	jl     0x4118f0
  411874:	pop    es
  411875:	pop    edi
  411876:	jl     0x4118f4
  411878:	pop    edi
  411879:	out    0xc7,eax
  41187b:	repnz sub BYTE PTR [esi+eax*4+0x7d],al
  411880:	aad    0x63
  411882:	xchg   ebx,eax
  411883:	mov    ah,0x4f
  411885:	cdq    
  411886:	push   ecx
  411887:	push   ebx
  411888:	mov    bh,0x2d
  41188a:	loope  0x411877
  41188c:	cli    
  41188d:	mov    cl,0x20
  41188f:	loope  0x4118a0
  411891:	and    dl,BYTE PTR [ecx]
  411893:	ret    0xca6e
  411896:	je     0x41185d
  411898:	popf   
  411899:	xchg   ebp,eax
  41189a:	lock out dx,eax
  41189c:	sub    al,0x7b
  41189e:	stos   BYTE PTR es:[edi],al
  41189f:	into   
  4118a0:	(bad)  
  4118a1:	xor    ch,ah
  4118a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118a4:	inc    ebp
  4118a5:	jmp    0x26c2:0x8226a4d0
  4118ac:	imul   edi,DWORD PTR [edi],0x4eb9d8e8
  4118b2:	mov    al,fs:0x471dbdb1
  4118b8:	xor    DWORD PTR [ebx],ebp
  4118ba:	jge    0x411860
  4118bc:	or     DWORD PTR [edx-0x32073f8f],esp
  4118c2:	mov    ?,WORD PTR [ebp-0x4b]
  4118c5:	cli    
  4118c6:	or     al,0x56
  4118c8:	enter  0xc811,0x49
  4118cc:	dec    ebp
  4118cd:	mov    dl,0x8f
  4118cf:	and    al,0xd9
  4118d1:	cs into 
  4118d3:	mov    ah,0x58
  4118d5:	mov    ds:0x44a46d36,al
  4118da:	mov    bl,0x67
  4118dc:	daa    
  4118dd:	or     bh,dh
  4118df:	cmp    eax,0x879ca0a6
  4118e4:	pop    ecx
  4118e5:	xchg   esi,eax
  4118e6:	push   esp
  4118e7:	retf   
  4118e8:	dec    eax
  4118e9:	inc    esp
  4118ea:	xchg   ebp,eax
  4118eb:	jg     0x411918
  4118ed:	iret   
  4118ee:	daa    
  4118ef:	mov    cl,0x95
  4118f1:	cmp    al,0x81
  4118f3:	ret    
  4118f4:	inc    esi
  4118f5:	es or  al,0x78
  4118f8:	xlat   BYTE PTR ds:[ebx]
  4118f9:	arpl   WORD PTR [eax-0x68],sp
  4118fc:	and    DWORD PTR [ebx-0x78553c75],esi
  411902:	push   cs
  411903:	jg     0x411957
  411905:	test   eax,0x8c6904d4
  41190a:	xor    DWORD PTR [eax-0x3a],ebp
  41190d:	jl     0x411941
  41190f:	cmp    al,0xa
  411911:	cwde   
  411912:	(bad)
  411915:	push   ebp
  411916:	sbb    al,0x73
  411918:	mov    es,WORD PTR [ecx]
  41191a:	dec    edx
  41191b:	scas   eax,DWORD PTR es:[edi]
  41191c:	adc    eax,0xfdfaee5b
  411921:	sbb    dl,BYTE PTR [ecx]
  411923:	xchg   edi,eax
  411924:	cdq    
  411925:	mov    al,ds:0xe0392059
  41192a:	or     al,0x87
  41192c:	jno    0x4118d5
  41192e:	cmp    al,0xba
  411930:	dec    esi
  411931:	pop    esi
  411932:	out    dx,al
  411933:	and    ah,BYTE PTR [ebx+ecx*1-0x25]
  411937:	ja     0x4118ec
  411939:	jae    0x4119ae
  41193b:	cwde   
  41193c:	stos   BYTE PTR es:[edi],al
  41193d:	cmp    eax,0xb8d6c93d
  411942:	mov    bh,0x50
  411944:	sar    BYTE PTR [esi+0x47],cl
  411947:	sub    esp,edx
  411949:	and    bh,dl
  41194b:	adc    dl,dh
  41194d:	je     0x4119cb
  41194f:	xchg   BYTE PTR [edi-0x4f62ba47],ah
  411955:	push   es
  411956:	sub    esi,eax
  411958:	mov    ah,0xe0
  41195a:	xchg   esi,eax
  41195b:	pop    ecx
  41195c:	test   BYTE PTR [ecx-0x3e],ah
  41195f:	mov    eax,0x6ddef081
  411964:	inc    ecx
  411965:	push   eax
  411966:	fistp  QWORD PTR [esi-0x2b617896]
  41196c:	jle    0x41199a
  41196e:	jle    0x411932
  411970:	pop    eax
  411971:	adc    bh,cl
  411973:	mov    edi,0x3e98af72
  411978:	pop    edi
  411979:	mov    ds:0x9f8f66a,eax
  41197e:	jmp    0x411969
  411980:	in     al,dx
  411981:	adc    edx,edx
  411983:	jns    0x41196c
  411985:	xor    DWORD PTR [ecx-0x3b],edi
  411988:	outs   dx,DWORD PTR ds:[esi]
  411989:	mov    DWORD PTR [ecx-0xf],esi
  41198c:	jp     0x4119a4
  41198e:	icebp  
  41198f:	jo     0x411a09
  411991:	push   esi
  411992:	aad    0x99
  411994:	mov    dh,0xb9
  411996:	mov    esi,0x20aaa10
  41199b:	sbb    eax,0x80312b03
  4119a0:	cmc    
  4119a1:	jle    0x4119b9
  4119a3:	loop   0x4119c3
  4119a5:	jns    0x411995
  4119a7:	jbe    0x411989
  4119a9:	mov    edi,0xff71dbf8
  4119ae:	xchg   ebx,eax
  4119af:	leave  
  4119b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119b1:	xlat   BYTE PTR ds:[ebx]
  4119b2:	pop    eax
  4119b3:	cmp    DWORD PTR [edi+0x69ea0ae],0x4d
  4119ba:	cmovp  edi,DWORD PTR [ebx-0x55]
  4119be:	pop    eax
  4119bf:	pusha  
  4119c0:	pop    edx
  4119c1:	aam    0xc9
  4119c3:	aaa    
  4119c4:	and    DWORD PTR [ebx+0x6a],esp
  4119c7:	retf   0x1133
  4119ca:	bound  edi,QWORD PTR [ebp+0x3bd4ddbf]
  4119d0:	fisttp QWORD PTR [edi+0x59910e42]
  4119d6:	push   ebx
  4119d7:	cs aad 0x3a
  4119da:	mov    dl,0xef
  4119dc:	inc    ebp
  4119dd:	jl     0x41196b
  4119df:	das    
  4119e0:	jl     0x4119ef
  4119e2:	aad    0x1f
  4119e4:	push   ebp
  4119e5:	mov    ds:0xbc988a8e,al
  4119ea:	add    al,0xf2
  4119ec:	or     eax,0xab437062
  4119f1:	pop    es
  4119f2:	and    dl,bh
  4119f4:	adc    bh,bh
  4119f6:	out    dx,eax
  4119f7:	into   
  4119f8:	mov    al,ah
  4119fa:	rol    DWORD PTR [eax],1
  4119fc:	push   ss
  4119fd:	sti    
  4119fe:	xlat   BYTE PTR ds:[ebx]
  4119ff:	inc    edx
  411a00:	ja     0x411a1a
  411a02:	sbb    esp,eax
  411a04:	mov    al,ds:0x4c472ae1
  411a09:	add    BYTE PTR [ebx+0x3e4d23c0],dh
  411a0f:	or     DWORD PTR [ebp-0x2d],0x22
  411a13:	(bad)  
  411a14:	adc    esi,eax
  411a16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a17:	mov    ecx,0xe1eeda2f
  411a1c:	pushf  
  411a1d:	push   ds
  411a1e:	jnp    0x4119ef
  411a20:	sub    DWORD PTR [eax-0x5b],ebx
  411a23:	pop    ecx
  411a24:	mov    dh,0xa3
  411a26:	add    DWORD PTR [eax-0x570c4f35],0x3bade62d
  411a30:	inc    ecx
  411a31:	(bad)  [edx+0x20]
  411a34:	adc    DWORD PTR [esi+0x69],0xee9a62bc
  411a3b:	in     eax,0x64
  411a3d:	cs push esi
  411a3f:	pop    ebx
  411a40:	and    BYTE PTR [edx-0x1f7fecee],dh
  411a46:	sbb    BYTE PTR [eax+0x4cafa357],cl
  411a4c:	ss sbb eax,0x1a6bb084
  411a52:	mov    esi,es
  411a54:	and    DWORD PTR [edi-0x32],esp
  411a57:	xor    eax,0xd22b252
  411a5c:	repnz inc esi
  411a5e:	mov    ds:0x28679422,eax
  411a63:	push   0x4fbaac4a
  411a68:	leave  
  411a69:	stos   DWORD PTR es:[edi],eax
  411a6a:	push   cs
  411a6b:	test   DWORD PTR [edi],esi
  411a6d:	push   ebx
  411a6e:	es or  eax,0xc9ff5343
  411a74:	adc    ecx,DWORD PTR [ecx+0x55]
  411a77:	or     al,0x4d
  411a79:	in     al,0x49
  411a7b:	push   edx
  411a7c:	scas   al,BYTE PTR es:[edi]
  411a7d:	inc    eax
  411a7e:	ss add eax,edi
  411a81:	push   esi
  411a82:	imul   eax,DWORD PTR [esi-0x4d267fd9],0xd6ad19d
  411a8c:	and    eax,0xc52cc369
  411a91:	retf   0xa973
  411a94:	sbb    al,0x24
  411a96:	and    cl,BYTE PTR [ebp-0x5]
  411a99:	xor    al,0xec
  411a9b:	xchg   esi,eax
  411a9c:	inc    edx
  411a9d:	das    
  411a9e:	test   DWORD PTR [edi-0x1c],edx
  411aa1:	mov    esi,0xac1e2df5
  411aa6:	jno    0x411b1a
  411aa8:	xchg   BYTE PTR [ecx],dh
  411aaa:	int    0xca
  411aac:	and    ah,BYTE PTR [esi]
  411aae:	xlat   BYTE PTR ds:[ebx]
  411aaf:	shrd   DWORD PTR [ebx+0x78],eax,0x4a
  411ab4:	fdiv   QWORD PTR [ebx]
  411ab6:	std    
  411ab7:	clc    
  411ab8:	mov    esi,0x35fdd974
  411abd:	(bad)  
  411abe:	jmp    0xca07:0x66cb48cf
  411ac5:	loope  0x411aa3
  411ac7:	push   edx
  411ac8:	fcomp  DWORD PTR [ebp+0x273c496c]
  411ace:	jnp    0x411abe
  411ad0:	fcmovb st,st(2)
  411ad2:	add    ebx,edi
  411ad4:	jge    0x411a66
  411ad6:	loope  0x411aab
  411ad8:	lods   eax,DWORD PTR ds:[esi]
  411ad9:	jae    0x411b26
  411adb:	pop    ds
  411adc:	sub    dh,BYTE PTR [eax-0x3b]
  411adf:	mov    al,BYTE PTR [eax-0x39b44e5e]
  411ae5:	xor    edx,edi
  411ae7:	ds pop ebx
  411ae9:	or     eax,0x68f68d79
  411aee:	mov    al,0x88
  411af0:	jmp    0x366a:0x947a3c1c
  411af7:	mov    al,0x5
  411af9:	pop    es
  411afa:	or     DWORD PTR [ebx],ecx
  411afc:	inc    esi
  411afd:	mov    eax,0x46f01866
  411b02:	data16 add ch,BYTE PTR [ebp-0x6a]
  411b06:	mov    ebx,0x81b15a99
  411b0b:	outs   dx,BYTE PTR ds:[esi]
  411b0c:	rcl    BYTE PTR [ebx+0x3860d06d],cl
  411b12:	inc    eax
  411b13:	rcl    DWORD PTR [bx],0xcd
  411b17:	adc    BYTE PTR [edi-0x11],0xf5
  411b1b:	push   ss
  411b1c:	fisub  DWORD PTR [esi]
  411b1e:	call   0xe27a:0xdb26f913
  411b25:	sbb    BYTE PTR [eax],0x7
  411b28:	mov    ch,0x3d
  411b2a:	inc    ebx
  411b2b:	cmc    
  411b2c:	jo     0x411b0d
  411b2e:	popf   
  411b2f:	cli    
  411b30:	adc    bl,BYTE PTR [edi]
  411b32:	dec    edi
  411b33:	jmp    0x411b53
  411b35:	jnp    0x411aba
  411b37:	adc    al,0x7e
  411b39:	push   cs
  411b3a:	addr16 pusha 
  411b3c:	popa   
  411b3d:	pop    ds
  411b3e:	xchg   edx,eax
  411b3f:	push   esp
  411b40:	pop    ebp
  411b41:	enter  0x1ecf,0xf5
  411b45:	imul   ebx,DWORD PTR [ebx+0x6],0xcf8b53ce
  411b4c:	mov    dh,dl
  411b4e:	cld    
  411b4f:	mov    al,ds:0x1bf21bef
  411b54:	inc    esi
  411b55:	ficom  DWORD PTR [ebp-0x53]
  411b58:	cmp    BYTE PTR [eax-0x33f43915],al
  411b5e:	mov    edx,0x2d3064ae
  411b63:	ror    BYTE PTR [ebp+0x54],1
  411b66:	clc    
  411b67:	inc    ebp
  411b68:	dec    eax
  411b69:	or     al,BYTE PTR [edx-0x5c]
  411b6c:	mov    eax,eax
  411b6e:	xchg   edi,eax
  411b6f:	xchg   esi,eax
  411b70:	push   esp
  411b71:	xor    BYTE PTR [ebp-0x308aecc4],bh
  411b77:	test   al,0x65
  411b79:	test   BYTE PTR [edi],cl
  411b7b:	push   ss
  411b7c:	mov    cl,0x18
  411b7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b7f:	data16 adc al,0x4d
  411b82:	xchg   ebp,eax
  411b83:	test   BYTE PTR [ecx+0x74],0x19
  411b87:	lods   eax,DWORD PTR ds:[esi]
  411b88:	xor    ecx,DWORD PTR [ebx]
  411b8a:	popa   
  411b8b:	xchg   ebp,eax
  411b8c:	add    eax,0x191dc25
  411b91:	add    edx,0xfffffffa
  411b94:	mov    dh,0xa3
  411b96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b97:	push   esi
  411b98:	sub    eax,0x746fd54
  411b9d:	xchg   edi,eax
  411b9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b9f:	mov    ah,BYTE PTR [ebx]
  411ba1:	cs loopne 0x411be9
  411ba4:	pop    ecx
  411ba5:	sbb    ebx,eax
  411ba7:	in     eax,dx
  411ba8:	pop    edi
  411ba9:	clc    
  411baa:	addr16 nop
  411bac:	fldcw  WORD PTR [ebx]
  411bae:	push   ecx
  411baf:	mov    edx,0x58afdfdf
  411bb4:	popf   
  411bb5:	pop    ebp
  411bb6:	imul   edi,DWORD PTR [eax+esi*4+0x8],0x98ef8a44
  411bbe:	xlat   BYTE PTR ds:[ebx]
  411bbf:	and    ebx,DWORD PTR [edi-0x7a2e4a3]
  411bc5:	mul    BYTE PTR es:[edx]
  411bc8:	les    esp,FWORD PTR [ecx-0x68e8ac7c]
  411bce:	add    dh,BYTE PTR [eax+0x3c]
  411bd1:	mov    al,0xce
  411bd3:	imul   edx,DWORD PTR [ebp-0x2],0xffffffc9
  411bd7:	and    BYTE PTR [esi+esi*4],bl
  411bda:	xor    DWORD PTR [esi+0x30d45dd],edx
  411be0:	inc    esi
  411be1:	mov    ds:0x2c2003d2,al
  411be6:	repnz pop ebx
  411be8:	adc    al,0x98
  411bea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411beb:	fucomip st,st(4)
  411bed:	add    dh,ah
  411bef:	xchg   BYTE PTR [edx-0x83d5d04],bh
  411bf5:	lods   eax,DWORD PTR ds:[esi]
  411bf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bf7:	cmp    al,0x9a
  411bf9:	xor    edx,DWORD PTR [ecx]
  411bfb:	inc    esi
  411bfc:	jle    0x411c7a
  411bfe:	ja     0x411ba0
  411c00:	scas   eax,DWORD PTR es:[edi]
  411c01:	xchg   BYTE PTR [eax+edx*8-0x66d3e32c],ah
  411c08:	ins    BYTE PTR es:[edi],dx
  411c09:	outs   dx,BYTE PTR ds:[esi]
  411c0a:	push   esp
  411c0b:	loopne 0x411bb6
  411c0d:	inc    ebx
  411c0e:	dec    esi
  411c0f:	loopne 0x411c16
  411c11:	sbb    ch,0xcc
  411c14:	out    dx,eax
  411c15:	jo     0x411c80
  411c17:	sub    ch,BYTE PTR [ebx+0x13f3163c]
  411c1d:	rol    BYTE PTR [ebp+0x7e4416bf],1
  411c23:	sahf   
  411c24:	outs   dx,BYTE PTR ds:[esi]
  411c25:	imul   ebx,DWORD PTR [eax],0x57
  411c28:	adc    al,0xbf
  411c2a:	or     al,0x8c
  411c2c:	jg     0x411c5b
  411c2e:	jne    0x411bcf
  411c30:	popa   
  411c31:	fcom   DWORD PTR ds:0x99a48e69
  411c37:	mov    esp,0xcf460d6d
  411c3c:	cmp    BYTE PTR [ecx-0x2c5aa507],cl
  411c42:	xchg   DWORD PTR [ebx-0x4a5f68f0],esp
  411c48:	dec    ecx
  411c49:	ret    0xb114
  411c4c:	shr    BYTE PTR [ebp-0x17289137],cl
  411c52:	add    dl,BYTE PTR [ecx]
  411c54:	sbb    ecx,ebp
  411c56:	pop    es
  411c57:	mov    edi,0x3a66313f
  411c5c:	xor    al,0x1
  411c5e:	imul   ebx,eax,0xffffff82
  411c61:	pop    es
  411c62:	test   DWORD PTR [esi+0x68],eax
  411c65:	cli    
  411c66:	pop    ds
  411c67:	push   0x59
  411c69:	sti    
  411c6a:	cli    
  411c6b:	aam    0x23
  411c6d:	iret   
  411c6e:	or     ebp,DWORD PTR [ebp-0x53]
  411c71:	outs   dx,BYTE PTR ds:[esi]
  411c72:	dec    ecx
  411c73:	push   ds
  411c74:	ret    0x741
  411c77:	jg     0x411cbd
  411c79:	pop    edi
  411c7a:	not    BYTE PTR [ebp-0x51]
  411c7d:	xchg   DWORD PTR [ebx+0x40d19328],ebx
  411c83:	aam    0x5
  411c85:	aaa    
  411c86:	aam    0xcf
  411c88:	loop   0x411cf0
  411c8a:	fadd   DWORD PTR [esp+edx*1+0x3]
  411c8e:	cmp    DWORD PTR [edi-0x65a5ca1b],esi
  411c94:	jo     0x411c16
  411c96:	dec    ecx
  411c97:	jle    0x411c79
  411c99:	test   DWORD PTR [edi+ebx*8-0x7944015d],ecx
  411ca0:	xlat   BYTE PTR ds:[ebx]
  411ca1:	loopne 0x411ccc
  411ca3:	mov    ds:0x5ec93710,al
  411ca8:	loopne 0x411c66
  411caa:	fst    QWORD PTR [edi+ecx*2]
  411cad:	ss mov ebx,0xa0333317
  411cb3:	mov    ah,0x9c
  411cb5:	add    cl,BYTE PTR [edi+0x12c064a6]
  411cbb:	test   DWORD PTR [esp+ebx*2],eax
  411cbe:	test   BYTE PTR [edx-0x57],dh
  411cc1:	add    ebx,esi
  411cc3:	sbb    bh,BYTE PTR [ecx]
  411cc5:	sub    ah,ch
  411cc7:	in     al,0x43
  411cc9:	jmp    0x6430:0xca449385
  411cd0:	or     BYTE PTR [ecx],0xf1
  411cd3:	pmaxub mm6,QWORD PTR [ebp+0x60]
  411cd7:	inc    ebp
  411cd8:	cmp    edx,0x9fc0a4a3
  411cde:	stos   DWORD PTR es:[edi],eax
  411cdf:	stos   DWORD PTR es:[edi],eax
  411ce0:	ret    0xf87
  411ce3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ce4:	loop   0x411cf0
  411ce6:	fidiv  DWORD PTR [edx]
  411ce8:	shr    DWORD PTR [ebp-0x12407f4],1
  411cee:	pop    ss
  411cef:	retf   
  411cf0:	mov    dl,0x93
  411cf2:	test   BYTE PTR [ecx],dh
  411cf4:	adc    eax,0xee1e4805
  411cf9:	dec    ebx
  411cfa:	push   ebp
  411cfb:	aam    0xfd
  411cfd:	call   0x7e2f6355
  411d02:	std    
  411d03:	jmp    0x7c24:0x9535abf5
  411d0a:	repnz hlt 
  411d0c:	mov    dl,0x5b
  411d0e:	add    esi,DWORD PTR [edx]
  411d10:	or     al,0x4d
  411d12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d13:	inc    ebp
  411d14:	jg     0x411d08
  411d16:	int    0xe6
  411d18:	mov    gs,edi
  411d1a:	or     DWORD PTR [edi+0x7ae64868],edi
  411d20:	sahf   
  411d21:	inc    eax
  411d22:	lods   eax,DWORD PTR ds:[esi]
  411d23:	xor    DWORD PTR [edx+ecx*2-0x57],ebx
  411d27:	fimul  WORD PTR [ebx+0x17aa0cac]
  411d2d:	jns    0x411cc5
  411d2f:	outs   dx,DWORD PTR ds:[esi]
  411d30:	jecxz  0x411cd8
  411d32:	add    BYTE PTR [edx+0x58],0xa8
  411d36:	sbb    cl,BYTE PTR [eax-0x24]
  411d39:	or     al,0xbb
  411d3b:	cdq    
  411d3c:	pushf  
  411d3d:	std    
  411d3e:	push   eax
  411d3f:	test   BYTE PTR [edi-0x7cbe12ab],ah
  411d45:	call   0x320d:0x97f94790
  411d4c:	push   es
  411d4d:	jmp    0x913e:0x63f392d3
  411d54:	push   eax
  411d55:	inc    ecx
  411d56:	and    DWORD PTR [ebx],esp
  411d58:	mov    dl,0xe2
  411d5a:	and    al,al
  411d5c:	fwait
  411d5d:	and    BYTE PTR [esi-0x770abe40],al
  411d63:	inc    ebx
  411d64:	popa   
  411d65:	imul   edx,DWORD PTR [esi-0x292a7b10],0xffffff9f
  411d6c:	dec    ecx
  411d6d:	mov    ecx,0xa43addce
  411d72:	sbb    BYTE PTR [ebx+0x23e2d254],bh
  411d78:	loopne 0x411dc5
  411d7a:	stos   DWORD PTR es:[edi],eax
  411d7b:	adc    DWORD PTR [edx-0x14],0x9b94858
  411d82:	adc    edi,DWORD PTR [ecx]
  411d84:	or     cl,BYTE PTR [ebx-0x13d85e66]
  411d8a:	mov    esp,0xbdf0fec2
  411d8f:	stos   BYTE PTR es:[edi],al
  411d90:	and    BYTE PTR [ebp+0x4f],ah
  411d93:	leave  
  411d94:	(bad)  
  411d95:	loopne 0x411dab
  411d97:	inc    edi
  411d98:	inc    edi
  411d99:	and    eax,DWORD PTR [edx]
  411d9b:	xor    ah,ch
  411d9d:	dec    esp
  411d9e:	xchg   esi,eax
  411d9f:	and    BYTE PTR [eax],ah
  411da1:	stc    
  411da2:	adc    BYTE PTR [eax+eiz*1-0x5396f29b],0x1a
  411daa:	sbb    BYTE PTR [ebx+0x3faeaa6e],ch
  411db0:	inc    edi
  411db1:	and    BYTE PTR [ebp-0x7a57632a],bh
  411db7:	(bad)  
  411db9:	enter  0x78f6,0x4b
  411dbd:	out    dx,eax
  411dbe:	mov    ?,WORD PTR [ebx-0x44884e66]
  411dc4:	outs   dx,DWORD PTR ds:[esi]
  411dc5:	xor    bl,BYTE PTR [esi]
  411dc7:	fstp   st(0)
  411dc9:	(bad)  
  411dca:	jmp    0xae99:0x6dc9fce1
  411dd1:	cmp    bl,dh
  411dd3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411dd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dd6:	cld    
  411dd7:	rcr    DWORD PTR [edi-0x2a],1
  411dda:	lods   al,BYTE PTR ds:[esi]
  411ddb:	add    dh,dh
  411ddd:	loop   0x411d94
  411ddf:	cs jno 0x411e36
  411de2:	adc    BYTE PTR [edi-0x2a6dfbf1],al
  411de8:	popa   
  411de9:	push   ecx
  411dea:	xchg   BYTE PTR [eax-0x42],bh
  411ded:	mov    ah,0xb9
  411def:	and    eax,0x8b387650
  411df4:	btc    esp,ecx
  411df7:	mov    BYTE PTR [ecx+0x233a3d3b],bl
  411dfd:	or     eax,0x32119a0a
  411e02:	xchg   ebx,eax
  411e03:	or     eax,DWORD PTR [esi]
  411e05:	sbb    DWORD PTR [ebx+0x10],ebp
  411e08:	scas   eax,DWORD PTR es:[edi]
  411e09:	scas   eax,DWORD PTR es:[di]
  411e0b:	jno    0x411e53
  411e0d:	sub    al,0xe1
  411e0f:	retf   
  411e10:	fisubr WORD PTR [edi+0x3616cf5]
  411e16:	adc    ecx,DWORD PTR [eax+0x5820a0b2]
  411e1c:	sub    DWORD PTR [eax],eax
  411e1e:	sbb    edi,ecx
  411e20:	cmp    eax,0xc0be1de7
  411e25:	jmp    0x17dad7ba
  411e2a:	test   eax,0xa724bb10
  411e2f:	addr16 daa 
  411e31:	daa    
  411e32:	and    DWORD PTR [ecx],esp
  411e34:	loope  0x411e31
  411e36:	add    ch,BYTE PTR [ebp-0x71d3d31f]
  411e3c:	sub    ah,dh
  411e3e:	imul   edx,DWORD PTR [edx-0x7e70f01c],0x72
  411e45:	push   edi
  411e46:	xor    DWORD PTR [eax-0x35],edx
  411e49:	test   esi,eax
  411e4b:	or     al,0x37
  411e4d:	rcr    BYTE PTR [ebp+0x5a],0x9b
  411e51:	adc    BYTE PTR [esi-0x67],ah
  411e54:	popf   
  411e55:	jae    0x411e84
  411e57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e58:	pop    esp
  411e59:	pop    eax
  411e5a:	dec    ecx
  411e5b:	xchg   ecx,eax
  411e5c:	sar    BYTE PTR [ebx],1
  411e5e:	outs   dx,BYTE PTR ds:[esi]
  411e5f:	xchg   ebx,eax
  411e61:	xlat   BYTE PTR es:[ebx]
  411e63:	mov    bh,0x78
  411e65:	das    
  411e66:	xchg   DWORD PTR [eax-0x2],ecx
  411e69:	outs   dx,BYTE PTR ds:[esi]
  411e6a:	xor    BYTE PTR [esi],al
  411e6c:	stos   BYTE PTR es:[edi],al
  411e6d:	or     BYTE PTR [edi-0x71],dl
  411e70:	test   eax,0x86416ee1
  411e75:	jno    0x411e1e
  411e77:	stos   BYTE PTR es:[edi],al
  411e78:	inc    esi
  411e79:	aaa    
  411e7a:	adc    ah,BYTE PTR [edx]
  411e7c:	mov    cs,WORD PTR [ebx]
  411e7e:	adc    ebx,DWORD PTR [edi+0x55]
  411e81:	adc    eax,0xbdaae713
  411e86:	(bad)  
  411e88:	mov    ebp,0x60a884e0
  411e8d:	cmp    eax,0x5aa31e97
  411e92:	xchg   ecx,eax
  411e93:	stos   DWORD PTR es:[edi],eax
  411e94:	push   edx
  411e95:	mov    WORD PTR [esi],gs
  411e97:	scas   eax,DWORD PTR es:[edi]
  411e98:	aad    0xd5
  411e9a:	mov    ds:0x6eea86d6,al
  411e9f:	scas   eax,DWORD PTR es:[edi]
  411ea0:	sub    esp,DWORD PTR [esi+0x20481d35]
  411ea6:	or     al,0x3a
  411ea8:	in     al,0xb2
  411eaa:	loopne 0x411eb9
  411eac:	int3   
  411ead:	in     eax,0xea
  411eaf:	iret   
  411eb0:	jnp    0x411e3b
  411eb2:	sub    DWORD PTR [ecx+esi*2-0x543dad63],esi
  411eb9:	fdivr  DWORD PTR [eax-0x9]
  411ebc:	pop    ss
  411ebd:	cmp    eax,0xc26c28bc
  411ec2:	add    ebp,esp
  411ec4:	adc    DWORD PTR [edi+0x1f],esp
  411ec7:	adc    al,BYTE PTR [edi+0x2d]
  411eca:	push   ss
  411ecb:	das    
  411ecc:	fisub  WORD PTR [ebp+0x4e2d191]
  411ed2:	xor    ebp,DWORD PTR [ecx+eax*8-0x37]
  411ed6:	mov    bl,BYTE PTR [esi]
  411ed8:	adc    BYTE PTR [ebx],bh
  411eda:	lahf   
  411edb:	push   0x57
  411edd:	mov    dl,0x38
  411edf:	inc    esi
  411ee0:	imul   ebp,DWORD PTR [ebx],0x73
  411ee3:	stos   BYTE PTR es:[edi],al
  411ee4:	mov    ds:0x8e3a3ef6,eax
  411ee9:	xchg   esp,eax
  411eea:	add    BYTE PTR [ebp-0x3f777c4],cl
  411ef0:	xchg   esp,eax
  411ef1:	mov    dh,0x25
  411ef3:	sub    eax,DWORD PTR [eax+0x5bd815de]
  411ef9:	into   
  411efa:	mov    esi,0x9b11ad37
  411eff:	adc    eax,0x7a151f9a
  411f04:	test   BYTE PTR [ebp+esi*1-0x7a],dl
  411f08:	jns    0x411f70
  411f0a:	cld    
  411f0b:	inc    esi
  411f0c:	js     0x411f07
  411f0e:	es test eax,0x77d4cd2a
  411f14:	xchg   DWORD PTR [ebp+0x2eeea2ec],esp
  411f1a:	sbb    DWORD PTR [edi+0x6c],ecx
  411f1d:	mov    bh,0x42
  411f1f:	dec    esp
  411f20:	jle    0x411f22
  411f22:	jg     0x411fa1
  411f24:	cmc    
  411f25:	cmp    eax,0xcf72886
  411f2a:	out    dx,eax
  411f2b:	xor    al,0xe
  411f2d:	ins    DWORD PTR es:[edi],dx
  411f2e:	xchg   BYTE PTR [edx+edx*2+0x747430c4],dl
  411f35:	out    dx,eax
  411f36:	in     eax,dx
  411f37:	pop    edi
  411f38:	cmp    DWORD PTR [ebx],ecx
  411f3a:	sbb    al,0xa9
  411f3c:	xchg   ecx,eax
  411f3d:	dec    ebp
  411f3e:	mov    ds:0x6e89ce64,eax
  411f43:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  411f45:	adc    BYTE PTR [edx-0x2c],0x2f
  411f49:	jmp    0x411f06
  411f4b:	mov    ebx,0xc4f58a66
  411f50:	addr16 std 
  411f52:	test   BYTE PTR [ebp+0x70],bh
  411f55:	jmp    0x7df3:0x7bc05b9c
  411f5c:	push   ecx
  411f5d:	(bad)  
  411f5e:	mov    edi,DWORD PTR [eax]
  411f60:	enter  0x3c8e,0xee
  411f64:	push   0xfffffff7
  411f66:	dec    ebx
  411f67:	jmp    FWORD PTR [ecx-0x45e15cfd]
  411f6d:	jbe    0x411f08
  411f6f:	ins    DWORD PTR es:[edi],dx
  411f70:	mov    bl,0xee
  411f72:	fld    QWORD PTR [edx-0x73]
  411f75:	inc    ebp
  411f76:	in     al,dx
  411f77:	les    eax,FWORD PTR [ebx+0x59]
  411f7a:	push   ebx
  411f7b:	call   0xf9e4901f
  411f80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f81:	pop    edi
  411f82:	xor    ax,WORD PTR [esi]
  411f85:	out    0xd1,eax
  411f87:	sbb    esp,DWORD PTR [eax]
  411f89:	mov    esp,0xe4de3f3b
  411f8e:	fbstp  TBYTE PTR [ecx-0x5c]
  411f91:	hlt    
  411f92:	xchg   ecx,eax
  411f93:	lahf   
  411f94:	leave  
  411f95:	dec    ecx
  411f96:	stos   BYTE PTR es:[edi],al
  411f97:	fadd   QWORD PTR [esi]
  411f99:	leave  
  411f9a:	jns    0x411f95
  411f9c:	or     bl,ch
  411f9e:	pushf  
  411f9f:	and    BYTE PTR [edi-0x51],ah
  411fa2:	cli    
  411fa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fa4:	in     eax,0xd9
  411fa6:	iret   
  411fa7:	jns    0x411f7c
  411fa9:	mov    ?,ebx
  411fab:	call   0x23bb:0x281c424d
  411fb2:	fs and eax,0xc83746fc
  411fb8:	in     eax,0x94
  411fba:	mov    bl,BYTE PTR [eax+ebp*1]
  411fbd:	mov    ecx,0xe0f3299a
  411fc2:	int    0xd
  411fc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fc5:	lock xchg edx,eax
  411fc7:	imul   edx,DWORD PTR [ecx+ebx*1-0x307a9b82],0x17
  411fcf:	faddp  st(0),st
  411fd1:	adc    BYTE PTR [ebx],bh
  411fd3:	jecxz  0x41200b
  411fd5:	xchg   esi,eax
  411fd6:	xor    DWORD PTR [ecx-0x575fa13e],ecx
  411fdc:	in     al,dx
  411fdd:	xchg   edx,eax
  411fde:	call   0x5912:0xcfa6ec56
  411fe5:	fisubr WORD PTR [ebx-0x2c]
  411fe8:	mov    dl,0xd5
  411fea:	popf   
  411feb:	repnz (bad) 
  411fed:	mov    esp,0xd27c9f36
  411ff2:	and    bh,BYTE PTR [ebx]
  411ff4:	xchg   ebp,eax
  411ff5:	adc    eax,0x2313b7ab
  411ffa:	or     eax,0x3be8b698
  411fff:	out    0x7b,al
  412001:	add    BYTE PTR [edx+0x71],ch
  412004:	and    al,0xf7
  412006:	and    BYTE PTR [ecx-0x4bf3881b],ah
  41200c:	jmp    0x9cdab6b4
  412011:	jle    0x412084
  412013:	mov    WORD PTR [ebp+0x4],gs
  412016:	lds    cx,DWORD PTR [ebx]
  412019:	mov    edi,0x11b5f03
  41201e:	sbb    al,0x8a
  412020:	or     dl,BYTE PTR [edx-0x4eeeb55]
  412026:	enter  0x9c9c,0x8c
  41202a:	mov    ds:0x43ded2fb,al
  41202f:	adc    esi,edx
  412031:	sbb    edx,ebp
  412033:	pop    ebp
  412034:	adc    edx,ebx
  412036:	xor    al,BYTE PTR [edx+0x6]
  412039:	jg     0x412009
  41203b:	sahf   
  41203c:	scas   al,BYTE PTR es:[edi]
  41203d:	xor    al,0xba
  41203f:	or     eax,DWORD PTR [ebp-0x5208a146]
  412045:	int3   
  412046:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412047:	stc    
  412048:	adc    eax,0x8156f1a2
  41204d:	fnstenv [edx-0x40]
  412050:	push   ebp
  412051:	lea    ebp,[ebx-0x5d]
  412054:	in     eax,dx
  412055:	mov    ds:0xa25f1b74,al
  41205a:	aaa    
  41205b:	mov    esp,0x917ff61f
  412060:	test   ecx,esp
  412062:	aaa    
  412063:	(bad)  
  412064:	mov    ds:0x5e4bacb2,eax
  412069:	inc    esi
  41206a:	push   0xa11bb713
  41206f:	and    DWORD PTR [ebp+edx*4-0x41],0xf3120261
  412077:	push   ebp
  412078:	sbb    eax,0x9e40d8d2
  41207d:	sbb    BYTE PTR [ecx],al
  41207f:	dec    edx
  412081:	mov    bh,0x53
  412083:	ficomp DWORD PTR [edi-0x2d]
  412086:	fwait
  412087:	xor    DWORD PTR [edi-0x57],0xfffffff6
  41208b:	mov    dh,0xb0
  41208d:	(bad)  
  41208e:	aam    0x60
  412090:	xor    eax,0x2bd44e2c
  412095:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412096:	in     al,0x30
  412098:	xchg   BYTE PTR ds:0x3017462b,cl
  41209e:	gs pop edi
  4120a0:	out    dx,eax
  4120a1:	add    DWORD PTR [ebx],ecx
  4120a3:	and    esi,ecx
  4120a5:	mov    bl,BYTE PTR ds:0xbbd66a54
  4120ab:	inc    ecx
  4120ac:	mov    al,BYTE PTR [ecx-0x30]
  4120af:	outs   dx,BYTE PTR ds:[esi]
  4120b0:	inc    edx
  4120b1:	into   
  4120b2:	push   edx
  4120b3:	mov    ds:0xe30ca1c2,eax
  4120b8:	push   esp
  4120b9:	xor    al,0xb0
  4120bb:	mov    ?,WORD PTR [edx+0x3c]
  4120be:	mov    cx,0xa8d
  4120c2:	adc    dh,bh
  4120c4:	lock xchg DWORD PTR [ebx+esi*4+0x52a8fe41],eax
  4120cc:	sbb    eax,0xfd1c653
  4120d1:	adc    cl,bh
  4120d3:	lds    esp,FWORD PTR [edx-0x37079168]
  4120d9:	jno    0x41208b
  4120db:	push   edx
  4120dc:	mov    cl,0xe7
  4120de:	stos   DWORD PTR es:[edi],eax
  4120df:	jns    0x4120f4
  4120e1:	pop    eax
  4120e2:	rcr    DWORD PTR [ebx+0x54],cl
  4120e5:	inc    eax
  4120e6:	daa    
  4120e7:	sbb    ch,BYTE PTR [eax-0x205be9d9]
  4120ed:	mov    cs,WORD PTR [edx+0x579fa2c0]
  4120f3:	pop    gs
  4120f5:	xor    DWORD PTR ds:0x7807d301,ebp
  4120fb:	xchg   ecx,eax
  4120fc:	mov    ebp,ecx
  4120fe:	enter  0x31e6,0x3f
  412102:	or     al,0x30
  412104:	js     0x41210a
  412106:	(bad)  
  412107:	jl     0x412168
  412109:	inc    eax
  41210a:	mov    gs,WORD PTR [edx+esi*1]
  41210d:	mov    ss,WORD PTR [edi]
  41210f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412110:	push   ds
  412111:	je     0x4120c5
  412113:	pushf  
  412114:	fsub   QWORD PTR [edx-0x1e]
  412117:	adc    BYTE PTR [ebx-0x16b0240c],bh
  41211d:	jns    0x412164
  41211f:	and    dh,0xc4
  412122:	ins    DWORD PTR es:[edi],dx
  412123:	shr    BYTE PTR [edi],0x2b
  412126:	pop    ebp
  412127:	hlt    
  412128:	gs cdq 
  41212a:	dec    edx
  41212b:	inc    DWORD PTR [ecx]
  41212d:	xor    BYTE PTR [esi],0xa7
  412130:	aad    0xa5
  412132:	imul   edi,ebx,0x8245d21c
  412138:	mov    DWORD PTR [ebx-0x1],edi
  41213b:	rcr    ah,1
  41213d:	add    al,0xdd
  41213f:	jecxz  0x41211e
  412141:	inc    eax
  412142:	jae    0x4121ba
  412144:	inc    eax
  412145:	daa    
  412146:	lds    ebp,FWORD PTR [esi]
  412148:	add    eax,DWORD PTR [edi]
  41214a:	mov    eax,0x586b481c
  41214f:	out    0x3c,al
  412151:	loopne 0x412142
  412153:	cwde   
  412154:	out    dx,al
  412155:	pushf  
  412156:	and    al,al
  412158:	les    esi,FWORD PTR [ecx+0x4b]
  41215b:	or     cl,BYTE PTR [ecx]
  41215d:	jecxz  0x4121c0
  41215f:	inc    edx
  412160:	sbb    bh,0x78
  412163:	mov    ds:0x6451f56d,eax
  412168:	mov    ds:0x697ea49f,eax
  41216d:	pop    ss
  41216e:	outs   dx,BYTE PTR gs:[esi]
  412170:	clc    
  412171:	cmp    bh,cl
  412173:	adc    al,0x87
  412175:	lods   al,BYTE PTR ds:[esi]
  412176:	pop    ecx
  412177:	inc    ebx
  412178:	popa   
  412179:	lock (bad) 
  41217b:	mov    si,0x70d4
  41217f:	cli    
  412180:	inc    ebx
  412181:	sub    eax,0xec462a17
  412186:	push   edx
  412187:	rcl    BYTE PTR [ebp+0x56f843b7],cl
  41218d:	out    dx,eax
  41218e:	sbb    eax,0x479ec6d
  412193:	inc    edx
  412194:	push   DWORD PTR [ebx+edx*4-0x3c04b69e]
  41219b:	fistp  DWORD PTR ds:0xdee2fdf2
  4121a1:	fsubr  DWORD PTR [ecx-0x19]
  4121a4:	fst    DWORD PTR [ecx+eiz*1+0x7c]
  4121a8:	iret   
  4121a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121aa:	sub    ecx,DWORD PTR [ebx]
  4121ac:	xor    al,0xe6
  4121ae:	ja     0x412204
  4121b0:	int3   
  4121b1:	xchg   ebp,eax
  4121b2:	rcl    DWORD PTR [edi],0x80
  4121b5:	add    BYTE PTR [eax-0x89d4541],bl
  4121bb:	(bad)  
  4121bc:	xor    al,BYTE PTR [esi-0x615c708a]
  4121c2:	cdq    
  4121c3:	and    ecx,DWORD PTR [ebp+0x44fb644c]
  4121c9:	inc    edi
  4121ca:	out    0x4e,eax
  4121cc:	adc    dh,dh
  4121ce:	or     eax,0x73e67f01
  4121d3:	mov    bl,0x92
  4121d5:	adc    BYTE PTR ss:[edx+ebx*2+0x12],dl
  4121da:	call   0xa3e2e0fc
  4121df:	cmp    ebp,0xffffffac
  4121e2:	cmp    bh,bl
  4121e4:	jl     0x412248
  4121e6:	adc    eax,0xc2f84e0e
  4121eb:	popa   
  4121ec:	or     al,0xd2
  4121ee:	ret    0x2676
  4121f1:	in     al,0x19
  4121f3:	pop    edi
  4121f4:	test   ch,ch
  4121f6:	enter  0xaf9e,0xe6
  4121fa:	adc    esi,DWORD PTR [ebx]
  4121fc:	xchg   esp,eax
  4121fd:	jb     0x4121b8
  4121ff:	jecxz  0x41222a
  412201:	mov    ebp,0xd15ffba3
  412206:	and    DWORD PTR ds:0x2cfffdcf,0x36
  41220d:	dec    ebp
  41220e:	aam    0x7f
  412210:	test   edx,0x2d949ea7
  412216:	ds stos DWORD PTR es:[edi],eax
  412218:	xor    al,0x63
  41221a:	fadd   QWORD PTR [esi-0x7527fbdb]
  412220:	fcomp  DWORD PTR [ecx]
  412222:	cmp    DWORD PTR [edx+0x1caf5b8e],edi
  412228:	inc    esp
  412229:	fdiv   QWORD PTR [ebx+eiz*2+0x7f]
  41222d:	xchg   edx,eax
  41222e:	add    DWORD PTR [edx],0x66
  412231:	out    dx,al
  412232:	pop    esi
  412233:	mov    eax,0xfad9786a
  412238:	jns    0x412298
  41223a:	cli    
  41223b:	push   es
  41223c:	std    
  41223d:	lods   eax,DWORD PTR ds:[esi]
  41223e:	sub    eax,0x7f96a038
  412243:	push   0xffffff8b
  412245:	dec    ecx
  412246:	sar    BYTE PTR [ebx-0x3ea38265],0x28
  41224d:	sti    
  41224e:	shl    BYTE PTR [ebp-0x77783ec4],cl
  412254:	pop    edi
  412255:	xor    al,0xb3
  412257:	test   al,0x3e
  412259:	inc    ecx
  41225a:	cmp    eax,0xf5226c0f
  41225f:	bound  ebp,QWORD PTR ss:[ecx+0x23]
  412263:	xlat   BYTE PTR ds:[ebx]
  412264:	xor    eax,0x1b423dc7
  412269:	fwait
  41226a:	rcr    DWORD PTR [ebx],0x22
  41226d:	mov    bl,0xbd
  41226f:	inc    edi
  412270:	xor    esp,DWORD PTR [edi+ebp*1-0x49832891]
  412277:	inc    edi
  412278:	mov    eax,0xfa11541e
  41227d:	jno    0x412223
  41227f:	loope  0x4122c5
  412281:	xchg   ecx,eax
  412282:	jecxz  0x412220
  412284:	jns    0x41229f
  412286:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412287:	cvtps2pi mm1,QWORD PTR [ebx+0x5b]
  41228b:	inc    ebp
  41228c:	sub    al,0xc6
  41228e:	inc    esp
  41228f:	sbb    bh,BYTE PTR ds:0xd089c9bf
  412295:	mov    dh,0x63
  412297:	cwde   
  412298:	or     edx,ebp
  41229a:	jnp    0x41224f
  41229c:	dec    ebx
  41229d:	jmp    0xc830615a
  4122a2:	mov    di,0x39da
  4122a6:	inc    bl
  4122a8:	fldcw  WORD PTR [ecx+0x29]
  4122ab:	arpl   WORD PTR [ebx],bx
  4122ad:	pop    ss
  4122ae:	std    
  4122af:	in     eax,0xf7
  4122b1:	mov    esi,DWORD PTR [ecx+0x41bf8554]
  4122b7:	and    al,0x5d
  4122b9:	sub    DWORD PTR [edx+0x46879c16],ecx
  4122bf:	call   0x82f2:0xb534f856
  4122c6:	scas   al,BYTE PTR es:[edi]
  4122c7:	mov    esp,0xdd632ece
  4122cc:	pop    eax
  4122cd:	lods   eax,DWORD PTR ds:[esi]
  4122ce:	pop    edi
  4122cf:	inc    ecx
  4122d0:	(bad)  
  4122d1:	mov    bl,0x42
  4122d3:	xchg   esi,edi
  4122d5:	(bad)  
  4122d6:	xor    dh,BYTE PTR [ecx-0x2c146b1f]
  4122dc:	jecxz  0x412333
  4122de:	sub    bh,BYTE PTR [eax+0x73]
  4122e1:	mov    eax,ds:0x87b662a1
  4122e6:	add    eax,0x87151687
  4122eb:	aad    0x40
  4122ed:	ja     0x41232b
  4122ef:	and    ecx,edx
  4122f1:	xchg   BYTE PTR [edx+0x77635684],bh
  4122f7:	or     dh,BYTE PTR [ecx]
  4122f9:	cmp    bh,ch
  4122fb:	ins    DWORD PTR es:[edi],dx
  4122fc:	and    DWORD PTR [edx+0x35e48b3d],ecx
  412302:	jno    0x412335
  412304:	fwait
  412305:	test   al,0x79
  412307:	iret   
  412308:	or     eax,0xe8ccc19e
  41230d:	push   0xffffffcd
  41230f:	es mov dh,0x9d
  412312:	pushf  
  412313:	addr16 sahf 
  412315:	mov    ss:0x97ec861c,eax
  41231b:	lods   al,BYTE PTR ds:[esi]
  41231c:	sbb    al,0x43
  41231e:	pop    edi
  41231f:	in     eax,0x5f
  412321:	daa    
  412322:	add    DWORD PTR [ebx+0x6fa4821f],edi
  412328:	loope  0x41238d
  41232a:	clc    
  41232b:	imul   ecx,DWORD PTR [ebx],0x5c1c4f6d
  412331:	lock ja 0x4122d4
  412334:	in     eax,dx
  412335:	fstp   TBYTE PTR [esi+0x3bc034b5]
  41233b:	out    dx,al
  41233c:	gs pushf 
  41233e:	adc    al,BYTE PTR [esi+0x52]
  412341:	leave  
  412342:	cmp    DWORD PTR [eax+ebx*2+0x37],edx
  412346:	scas   eax,DWORD PTR es:[edi]
  412347:	mov    esp,0x1d3028ff
  41234c:	(bad)  
  41234d:	cmp    ah,bl
  41234f:	imul   ebp,DWORD PTR [edx+ebx*2+0x28699f6],0xffffffc8
  412357:	dec    ecx
  412358:	fild   WORD PTR [ecx]
  41235a:	mov    ds:0x9a9f3c2f,al
  41235f:	xor    al,0x25
  412361:	xchg   ebp,eax
  412362:	jle    0x4123a8
  412364:	push   edx
  412365:	pop    edx
  412366:	iret   
  412367:	xchg   ebx,eax
  412368:	push   cs
  412369:	dec    esi
  41236a:	or     eax,DWORD PTR ds:0x1255c347
  412370:	push   edi
  412371:	and    al,0x9f
  412373:	(bad)  
  412374:	sub    ebx,DWORD PTR [ebx]
  412376:	add    BYTE PTR [edx-0x1fdd9111],0x14
  41237d:	int    0x82
  41237f:	xchg   edi,eax
  412380:	out    0x8,eax
  412382:	jae    0x412395
  412384:	stos   BYTE PTR es:[edi],al
  412385:	inc    esi
  412386:	mov    ds,WORD PTR [edx+0x19c162c2]
  41238c:	mov    esp,0x3305e87d
  412391:	sti    
  412392:	(bad)  
  412393:	clc    
  412394:	mov    bh,0xfb
  412396:	arpl   WORD PTR [ecx-0x899b641],ax
  41239c:	adc    DWORD PTR [edi],esi
  41239e:	adc    eax,0xbe37dc63
  4123a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123a4:	in     al,0x29
  4123a6:	mov    edx,0xb82a048b
  4123ab:	ja     0x412381
  4123ad:	mov    al,0xa0
  4123af:	push   es
  4123b0:	sub    esp,esp
  4123b2:	adc    ebp,DWORD PTR [eax+ebp*4-0x269cfeb]
  4123b9:	xchg   edx,eax
  4123ba:	stos   BYTE PTR es:[edi],al
  4123bb:	js     0x412437
  4123bd:	test   al,0x1f
  4123bf:	(bad)  
  4123c0:	pop    ebp
  4123c1:	ror    DWORD PTR [ecx-0x2c],0x33
  4123c5:	and    ebx,edi
  4123c7:	jecxz  0x412412
  4123c9:	ss repz pop ecx
  4123cc:	xchg   ebx,eax
  4123cd:	mov    ch,0x3c
  4123cf:	es sbb BYTE PTR es:[ecx+0x45],ch
  4123d4:	in     eax,dx
  4123d5:	std    
  4123d6:	or     eax,0xce21229f
  4123db:	mov    al,0x1c
  4123dd:	xor    DWORD PTR [ebx+ebx*2-0x2b007230],0xc1696da3
  4123e8:	dec    edi
  4123e9:	pop    esp
  4123ea:	or     BYTE PTR [ebx+eax*8-0x614f04d6],0x50
  4123f2:	shl    DWORD PTR [ecx-0x6e1f7e6b],1
  4123f8:	jmp    0xd7c70a55
  4123fd:	fimul  DWORD PTR [ebx]
  4123ff:	or     ebp,edi
  412401:	rol    BYTE PTR [ebx],1
  412403:	fnstcw WORD PTR [edx]
  412405:	and    esp,DWORD PTR [ebp+0x75]
  412408:	push   cs
  412409:	jno    0x41243e
  41240b:	pop    es
  41240c:	scas   al,BYTE PTR es:[edi]
  41240d:	dec    edi
  41240f:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  412411:	sahf   
  412412:	lea    esi,[edi+0x60]
  412415:	retf   0xdb8a
  412418:	fwait
  412419:	jns    0x4123bb
  41241b:	les    esp,FWORD PTR [ebx]
  41241d:	add    ah,BYTE PTR [edx]
  41241f:	xchg   edx,eax
  412420:	push   es
  412421:	imul   esp,DWORD PTR [edi],0xb
  412424:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412425:	nop
  412426:	sub    BYTE PTR [edi+0x42],0xe3
  41242a:	sub    edx,DWORD PTR [ebx-0x78]
  41242d:	mov    cl,BYTE PTR [ebp+0x3b]
  412430:	ss ss sbb eax,0x87a99bf4
  412437:	test   DWORD PTR [esp+ecx*2+0x5d],esi
  41243b:	xor    esi,edi
  41243d:	jge    0x4124be
  41243f:	cdq    
  412440:	inc    edi
  412441:	pop    ebx
  412442:	in     al,0xe3
  412444:	sbb    dh,BYTE PTR ds:0x24a77e26
  41244a:	or     BYTE PTR [ecx],dl
  41244c:	and    DWORD PTR [edi-0x27],edx
  41244f:	add    eax,0xae0508be
  412454:	icebp  
  412455:	inc    edi
  412456:	and    BYTE PTR [esi+eiz*1],bh
  412459:	(bad)  
  41245a:	and    BYTE PTR [edi],bl
  41245c:	xchg   ebp,eax
  41245d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41245e:	jmp    0x412482
  412460:	dec    eax
  412461:	retf   0xb62c
  412464:	mov    BYTE PTR fs:[ebx],bh
  412467:	sub    DWORD PTR [ecx-0xd],0xd90a2435
  41246e:	lock xchg esp,eax
  412470:	imul   eax,DWORD PTR [esi-0x460f061d],0xffffff89
  412477:	retf   
  412478:	adc    bh,BYTE PTR [edx+0x6b7f292c]
  41247e:	ja     0x412433
  412480:	pop    esi
  412481:	daa    
  412482:	stc    
  412483:	dec    edx
  412484:	ror    BYTE PTR ds:0x24fd971b,1
  41248a:	push   eax
  41248b:	cs push ebx
  41248d:	aaa    
  41248e:	mov    bl,0xab
  412490:	xchg   esp,eax
  412491:	out    0x74,al
  412493:	push   edx
  412494:	shl    BYTE PTR [ebx],1
  412496:	pop    ebx
  412497:	jmp    0xbf4619bb
  41249c:	mov    ecx,0xc077c2cc
  4124a1:	cmp    eax,0x542e8dc0
  4124a6:	cmp    esp,DWORD PTR [eax-0x7a]
  4124a9:	xchg   ecx,eax
  4124aa:	(bad)  
  4124ab:	mov    ds:0xe164824e,al
  4124b0:	xor    DWORD PTR [edi+ebp*1+0x5449be39],0xffffff94
  4124b8:	sbb    eax,0x2ac18cd6
  4124bd:	pusha  
  4124be:	push   eax
  4124bf:	scas   al,BYTE PTR es:[edi]
  4124c0:	xchg   edi,eax
  4124c1:	outs   dx,BYTE PTR ds:[esi]
  4124c2:	repz push 0x45
  4124c5:	push   edi
  4124c6:	(bad)  
  4124c7:	mov    BYTE PTR [edx+0x24],dl
  4124ca:	mov    ch,0xc8
  4124cc:	dec    eax
  4124cd:	cmp    BYTE PTR [edi+0x7860290a],ch
  4124d3:	call   0x5cf89ed5
  4124d8:	ror    DWORD PTR [ebx+0x67],0xed
  4124dc:	repz inc eax
  4124de:	mov    esp,0x48a4d7d3
  4124e3:	addr16 jne 0x4124bf
  4124e6:	bnd jae 0x4124df
  4124e9:	xlat   BYTE PTR ds:[ebx]
  4124ea:	mov    edi,0x58720cdf
  4124ef:	jns    0x4124d6
  4124f1:	cdq    
  4124f2:	push   ebx
  4124f3:	or     DWORD PTR [edi],ebx
  4124f5:	jno    0x4124da
  4124f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124f8:	jge    0x412525
  4124fa:	scas   al,BYTE PTR es:[edi]
  4124fb:	outs   dx,BYTE PTR ds:[esi]
  4124fc:	inc    edi
  4124fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124fe:	push   0x3f427d79
  412503:	adc    ecx,DWORD PTR [edx]
  412505:	fdiv   QWORD PTR [edx+edx*8]
  412508:	mov    esp,0xd61a6d3e
  41250d:	stc    
  41250e:	mov    edx,0xa287fdb8
  412513:	in     eax,0x54
  412515:	xchg   ecx,eax
  412516:	gs push edx
  412518:	out    0x44,al
  41251a:	into   
  41251b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41251c:	(bad)  
  41251d:	xchg   edx,eax
  41251e:	outs   dx,DWORD PTR ds:[esi]
  41251f:	(bad)  
  412520:	call   0xa0e3691d
  412525:	cmp    eax,0x63873796
  41252a:	jmp    0x412576
  41252c:	jns    0x412503
  41252e:	js     0x4124c5
  412530:	(bad)  
  412531:	push   ebx
  412532:	jmp    0x412515
  412534:	sbb    ebx,DWORD PTR [ebp+0x32f33a40]
  41253a:	cmp    DWORD PTR [esp+edx*1],esp
  41253d:	inc    ebp
  41253e:	mov    BYTE PTR [ecx-0x27c62c9f],0x96
  412545:	adc    bh,dl
  412547:	gs xchg edx,eax
  412549:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41254a:	mov    edi,0x7c5ea1e5
  41254f:	cmp    eax,0x35d7ed14
  412554:	add    eax,DWORD PTR [ecx]
  412556:	xlat   BYTE PTR ds:[ebx]
  412557:	and    BYTE PTR [ecx-0x74],bh
  41255a:	cmp    al,0xaf
  41255c:	pop    esi
  41255d:	mov    edi,0x86435647
  412562:	leave  
  412563:	add    ecx,DWORD PTR [eax-0x16e1490a]
  412569:	sti    
  41256a:	mov    ebp,0x7a62fcda
  41256f:	into   
  412570:	cdq    
  412571:	mov    es,ecx
  412573:	loopne 0x41255c
  412575:	sub    BYTE PTR [ebx],al
  412577:	pop    edx
  412578:	pop    ds
  412579:	xor    edx,DWORD PTR [edi]
  41257b:	or     eax,0x73dbf1d0
  412580:	pop    ebx
  412581:	xchg   esp,eax
  412582:	std    
  412583:	repnz dec si
  412586:	jl     0x412531
  412588:	and    ah,ah
  41258a:	imul   eax,DWORD PTR [edx-0x1a],0x1b
  41258e:	mov    ah,0x91
  412590:	retf   
  412591:	jae    0x412610
  412593:	xor    BYTE PTR [esi],cl
  412595:	push   cs
  412596:	and    BYTE PTR [esi+0x4b9dcd45],cl
  41259c:	mov    ebx,0xe1671ac1
  4125a1:	imul   esi,DWORD PTR [esi-0x6d30c99d],0xffffff97
  4125a8:	call   DWORD PTR [ebx]
  4125aa:	div    BYTE PTR [ebp+ebx*1-0x5841f40d]
  4125b1:	dec    edx
  4125b2:	ret    0xc98d
  4125b5:	jb     0x412569
  4125b7:	mov    bl,0x18
  4125b9:	jns    0x412625
  4125bb:	xchg   BYTE PTR [edi],dl
  4125bd:	mov    bh,0x26
  4125bf:	xchg   edx,eax
  4125c0:	mov    bl,0xf5
  4125c2:	mov    bl,BYTE PTR [ecx-0x1e70527d]
  4125c8:	leave  
  4125c9:	imul   ecx,DWORD PTR ds:0xea5f162d,0x56
  4125d0:	cmp    DWORD PTR [esi-0x4b5fcd66],esi
  4125d6:	xor    DWORD PTR [ecx],edi
  4125d8:	xchg   esp,eax
  4125d9:	rcr    bl,0x8f
  4125dc:	std    
  4125dd:	(bad)  
  4125de:	xchg   ebp,eax
  4125df:	xlat   BYTE PTR ds:[ebx]
  4125e0:	inc    ebx
  4125e1:	imul   eax,DWORD PTR ds:0xf7240ea3,0x6e
  4125e8:	out    dx,al
  4125e9:	lock jmp 0xf9483946
  4125ef:	outs   dx,DWORD PTR ds:[esi]
  4125f0:	cmp    BYTE PTR [esi-0x14],ah
  4125f3:	and    ch,dl
  4125f5:	sub    cl,BYTE PTR [ebx]
  4125f7:	je     0x4125bb
  4125f9:	mov    WORD PTR [esi+0x56ffc672],cs
  4125ff:	jmp    0xa2456e91
  412604:	pop    ds
  412605:	mov    edi,DWORD PTR [esi-0x4c]
  412608:	mov    ecx,0x6534e7d2
  41260d:	or     al,0x1
  41260f:	das    
  412610:	sbb    eax,DWORD PTR [eax-0x1188f76b]
  412616:	fild   DWORD PTR [esi]
  412618:	or     ebp,DWORD PTR [edi-0x45e6753a]
  41261e:	dec    ecx
  41261f:	sbb    DWORD PTR [ecx-0x338dc3f4],ecx
  412625:	jecxz  0x41263b
  412627:	inc    ebp
  412628:	pop    eax
  412629:	adc    al,0xb8
  41262b:	rol    BYTE PTR [ebx+0x36873feb],cl
  412631:	or     al,bh
  412633:	sbb    eax,0x64a96f4
  412638:	pop    es
  412639:	cdq    
  41263a:	or     al,0x8b
  41263c:	add    BYTE PTR [eax-0xfae7d7f],0x92
  412643:	cmc    
  412644:	addr16 push 0x2d
  412647:	fidivr DWORD PTR [ebx]
  412649:	cli    
  41264a:	aad    0x93
  41264c:	dec    ecx
  41264d:	pushf  
  41264e:	dec    ecx
  41264f:	ret    0x4aa4
  412652:	cmp    ebx,eax
  412654:	mov    al,ds:0x898f601d
  412659:	in     al,dx
  41265a:	mov    es,WORD PTR [eax]
  41265c:	sar    BYTE PTR [ebx],0x3d
  41265f:	cli    
  412660:	cmp    BYTE PTR [edx],bh
  412662:	stc    
  412663:	adc    bl,BYTE PTR [edi+0x31adb99a]
  412669:	mov    dh,0x32
  41266b:	loop   0x412631
  41266d:	or     edx,ebp
  41266f:	cdq    
  412670:	cdq    
  412671:	mov    ecx,0xa50ed5f0
  412676:	mov    eax,ds:0xae36766c
  41267b:	inc    ebx
  41267c:	fmul   QWORD PTR [eax]
  41267e:	xor    ch,al
  412680:	test   eax,0xacc83816
  412685:	cmp    BYTE PTR [edi],bh
  412687:	push   esp
  412688:	dec    ecx
  412689:	xchg   esp,eax
  41268a:	jge    0x41268a
  41268c:	test   al,0xdc
  41268e:	iret   
  41268f:	retf   0xbc72
  412692:	cdq    
  412693:	jl     0x4126ad
  412695:	xchg   ecx,eax
  412696:	xchg   DWORD PTR [edi+0x65],ebx
  412699:	test   BYTE PTR [eax],bh
  41269b:	imul   DWORD PTR [ebx]
  41269d:	mov    ?,WORD PTR [edi+0x37]
  4126a0:	or     eax,0x39c2d305
  4126a5:	shr    bh,1
  4126a7:	das    
  4126a8:	ss adc al,0xec
  4126ab:	es (bad) 
  4126ad:	jb     0x4126d8
  4126af:	sub    al,0xe6
  4126b1:	xchg   ecx,eax
  4126b2:	inc    esp
  4126b3:	int    0x2e
  4126b5:	in     eax,0x7e
  4126b7:	pop    ds
  4126b8:	mov    al,0x54
  4126ba:	addr16 inc eax
  4126bc:	lods   eax,DWORD PTR ds:[esi]
  4126bd:	pop    eax
  4126be:	adc    al,0x8b
  4126c0:	inc    eax
  4126c1:	scas   eax,DWORD PTR es:[edi]
  4126c2:	(bad)  
  4126c3:	daa    
  4126c4:	icebp  
  4126c5:	mov    eax,ds:0x728b8ce2
  4126ca:	xlat   BYTE PTR ds:[ebx]
  4126cb:	xor    dl,BYTE PTR [edi+0x311a0517]
  4126d1:	push   0x642249a4
  4126d6:	ds in  al,dx
  4126d8:	jae    0x412663
  4126da:	rol    BYTE PTR [edx],1
  4126dc:	mov    eax,esp
  4126de:	test   al,0x44
  4126e0:	or     esp,DWORD PTR [ebx-0x46]
  4126e3:	pop    ecx
  4126e4:	mov    BYTE PTR [ebx-0x4b],al
  4126e7:	adc    DWORD PTR [eax+0x1902809e],0xffffffaa
  4126ee:	pop    ecx
  4126ef:	fiadd  WORD PTR [ebx+0x73]
  4126f2:	loopne 0x412739
  4126f4:	adc    BYTE PTR [esi+ecx*8+0x75],cl
  4126f8:	test   eax,0xfa1a6a14
  4126fd:	inc    esi
  4126fe:	xchg   edi,eax
  4126ff:	mov    ch,BYTE PTR [ebx+0xf8dcd70]
  412705:	mov    dl,0xac
  412707:	or     BYTE PTR [ebx+0x7f],bl
  41270a:	imul   DWORD PTR [edx+ebx*2+0x7a0f0aa9]
  412711:	xchg   ebx,eax
  412712:	mov    ah,0xa1
  412714:	ds xchg edi,eax
  412717:	dec    BYTE PTR [esi]
  412719:	mov    bl,0x50
  41271b:	mov    edx,0x98818090
  412720:	sbb    DWORD PTR [ebx+eax*8+0x72],ecx
  412724:	sub    ebx,eax
  412726:	call   0x61852144
  41272b:	or     al,bh
  41272d:	fstp   DWORD PTR [edx-0x70]
  412730:	fdivr  QWORD PTR [esi-0x787c5607]
  412736:	dec    ebx
  412737:	rol    DWORD PTR [esi+0x37],1
  41273a:	cmc    
  41273b:	inc    esp
  41273c:	mov    edi,0x41870786
  412741:	jmp    0x412753
  412743:	or     al,BYTE PTR [edx-0x5c]
  412746:	push   es
  412747:	adc    esp,ebp
  412749:	sub    al,0xb0
  41274b:	out    dx,al
  41274c:	ss pop esp
  41274e:	and    ebp,DWORD PTR ds:0x6b5c69d7
  412754:	test   ecx,ecx
  412756:	mov    ch,BYTE PTR [ecx]
  412758:	jae    0x412715
  41275a:	cdq    
  41275b:	daa    
  41275c:	xchg   ebp,eax
  41275d:	xor    dl,BYTE PTR [edi+edi*4+0x3]
  412761:	sbb    edx,esi
  412763:	sub    edx,DWORD PTR [ecx+0x56]
  412766:	sbb    bp,WORD PTR [edi]
  412769:	ss loope 0x412708
  41276c:	push   ecx
  41276d:	fstp   DWORD PTR [edx+0x308c4920]
  412773:	mov    bl,0x1e
  412775:	push   0xffffff86
  412777:	je     0x4127e6
  412779:	cs inc eax
  41277b:	jmp    0xdfbc:0x96c50394
  412782:	repnz xor eax,DWORD PTR [ebx]
  412785:	icebp  
  412786:	sbb    bl,BYTE PTR [ebx]
  412788:	jnp    0x41273b
  41278a:	shl    BYTE PTR [bx+di+0x4d],1
  41278e:	shl    BYTE PTR [edi-0x59],cl
  412791:	stc    
  412792:	mov    eax,0x8f1e86e
  412797:	ret    
  412798:	mov    esi,0xac3c1827
  41279d:	inc    ecx
  41279e:	aas    
  41279f:	(bad)  
  4127a0:	dec    edi
  4127a1:	je     0x412807
  4127a3:	outs   dx,DWORD PTR ds:[esi]
  4127a4:	in     eax,0x88
  4127a6:	fisubr WORD PTR [edx+0x6c919484]
  4127ac:	push   esi
  4127ad:	clc    
  4127ae:	adc    DWORD PTR [ebp-0x2ed85ec],ebx
  4127b4:	sub    al,0xd1
  4127b6:	fdiv   DWORD PTR [ebx]
  4127b8:	mov    WORD PTR [eax-0x23a6a5e8],es
  4127be:	mov    ebp,edx
  4127c0:	mov    DWORD PTR [eax+0x59],eax
  4127c3:	sti    
  4127c4:	jmp    0x3a6036bb
  4127c9:	xchg   ecx,eax
  4127ca:	xchg   ebp,eax
  4127cb:	lods   al,BYTE PTR ds:[esi]
  4127cc:	fcomp  QWORD PTR [esi]
  4127ce:	outs   dx,BYTE PTR ds:[esi]
  4127cf:	cmp    BYTE PTR [ebx],0x68
  4127d2:	ss mov ebx,0x7cf24544
  4127d8:	adc    cl,bl
  4127da:	es mov bl,0xff
  4127dd:	sub    cl,BYTE PTR [esi-0xe]
  4127e0:	mov    ebx,0xc123241d
  4127e5:	inc    eax
  4127e6:	pop    ebp
  4127e7:	dec    eax
  4127e8:	imul   esp,DWORD PTR [ecx],0x26ccef82
  4127ee:	sar    ecx,0xdc
  4127f1:	mov    dh,0xc9
  4127f3:	test   al,0x1c
  4127f5:	lea    ebp,[esi-0x2a]
  4127f8:	mov    ecx,0xbad1ee62
  4127fd:	sahf   
  4127fe:	lahf   
  4127ff:	into   
  412800:	xchg   esi,eax
  412801:	and    eax,0x21f2cfe2
  412806:	or     edx,DWORD PTR [ebp+0x75c305ea]
  41280c:	mov    ebp,0xb5f7174f
  412811:	inc    esp
  412812:	rcl    bh,cl
  412814:	push   0xfac39b78
  412819:	or     cl,BYTE PTR [eax+0x28e6c94f]
  41281f:	shl    DWORD PTR [ebx],1
  412821:	dec    eax
  412822:	cmc    
  412823:	adc    eax,0xd6a10845
  412828:	in     al,0x6b
  41282a:	mov    ?,WORD PTR [esi]
  41282c:	cmp    eax,0x6fb41577
  412831:	sub    BYTE PTR [edx-0x54],ch
  412834:	cmp    ebp,DWORD PTR [esi+0x50]
  412837:	ret    
  412838:	mov    bh,0xe2
  41283a:	call   0xbebe:0x9484fcc3
  412841:	dec    ecx
  412842:	pop    esp
  412843:	fmul   QWORD PTR [esi+0x10e96720]
  412849:	stc    
  41284a:	dec    ecx
  41284b:	xlat   BYTE PTR ds:[ebx]
  41284c:	loop   0x412896
  41284e:	ret    
  41284f:	popa   
  412850:	ins    BYTE PTR es:[edi],dx
  412851:	xchg   ebp,eax
  412852:	and    DWORD PTR [esi+edx*1+0xc],ecx
  412856:	fdivr  st(0),st
  412858:	xchg   edx,eax
  412859:	loop   0x412863
  41285b:	inc    ebp
  41285d:	ret    
  41285e:	sti    
  41285f:	into   
  412860:	js     0x412806
  412862:	sub    BYTE PTR [ebp+0x62b63b6d],0x1a
  412869:	in     eax,0xe2
  41286b:	mov    ds:0xfa6a9922,eax
  412870:	push   ds
  412871:	les    esi,FWORD PTR [edi]
  412873:	imul   eax,DWORD PTR [edi],0xfffffffa
  412876:	ja     0x412874
  412878:	sbb    ch,BYTE PTR [edx-0xe379a53]
  41287e:	pop    eax
  41287f:	mov    al,ds:0x974ff536
  412884:	pop    edx
  412885:	mov    dh,0x9f
  412887:	ficom  DWORD PTR [eax+ebx*8]
  41288a:	cli    
  41288b:	sti    
  41288c:	add    DWORD PTR [esi],ecx
  41288e:	leave  
  41288f:	repz mov edi,0xa854e4aa
  412895:	push   ecx
  412896:	inc    ebp
  412897:	mov    edx,0xb97c1bd9
  41289c:	(bad)  
  41289e:	sbb    esp,DWORD PTR [eax-0x43]
  4128a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128a2:	loopne 0x4128a8
  4128a4:	or     DWORD PTR [edi+ecx*2],edx
  4128a7:	sahf   
  4128a8:	mov    eax,DWORD PTR [eax+0x5c]
  4128ab:	add    edi,eax
  4128ad:	jns    0x4128f0
  4128af:	jle    0x412831
  4128b1:	mov    eax,ds:0x66c55aaa
  4128b6:	mov    ch,0xbc
  4128b8:	xchg   edx,eax
  4128b9:	xor    ebx,DWORD PTR [eax]
  4128bb:	data16 out 0xf9,al
  4128be:	inc    edx
  4128bf:	jns    0x41289d
  4128c1:	xchg   ebp,eax
  4128c2:	jle    0x412880
  4128c4:	mov    edx,0x2aaec635
  4128c9:	adc    eax,DWORD PTR [ecx]
  4128cb:	jmp    0x12020c7c
  4128d0:	or     al,bl
  4128d2:	cmp    ebp,DWORD PTR [eax]
  4128d4:	xchg   esp,eax
  4128d5:	adc    al,BYTE PTR [ecx-0x38]
  4128d8:	out    0x7a,al
  4128da:	cmp    DWORD PTR [ebp+0x6f964a72],ebp
  4128e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128e1:	lods   al,BYTE PTR ds:[esi]
  4128e2:	mov    BYTE PTR [eax],ch
  4128e4:	aaa    
  4128e5:	rcr    BYTE PTR [edi],1
  4128e7:	retf   0x7a46
  4128ea:	popf   
  4128eb:	or     DWORD PTR [ecx+0x4593a88d],esp
  4128f1:	scas   eax,DWORD PTR es:[edi]
  4128f2:	jae    0x412913
  4128f4:	or     al,0x30
  4128f6:	sbb    al,0x94
  4128f8:	lea    ecx,[esi-0x6eca42cf]
  4128fe:	jmp    0x412923
  412900:	or     cl,BYTE PTR [ecx+ebx*2-0x1983f3bf]
  412907:	pushf  
  412908:	cmp    BYTE PTR [ebp-0x448762db],ah
  41290e:	js     0x4128d1
  412910:	adc    al,0x4
  412912:	fs scas al,BYTE PTR es:[edi]
  412914:	adc    DWORD PTR [eax+0x5fa17a8],esi
  41291a:	test   al,0x66
  41291c:	in     eax,dx
  41291d:	adc    dl,BYTE PTR [ebp-0x4d]
  412920:	retf   0xf804
  412923:	fadd   QWORD PTR [ebx]
  412926:	mov    DWORD PTR [edi-0x76],ebx
  412929:	aad    0xef
  41292b:	scas   al,BYTE PTR es:[edi]
  41292c:	xchg   ebx,eax
  41292d:	mov    dh,BYTE PTR [edx]
  41292f:	retf   
  412930:	sti    
  412931:	push   eax
  412932:	xchg   esp,eax
  412933:	inc    esp
  412934:	mov    ah,0x1e
  412936:	fsubrp st(2),st
  412938:	mov    al,bl
  41293a:	sti    
  41293b:	dec    ecx
  41293c:	sbb    DWORD PTR [esi],eax
  41293e:	std    
  41293f:	mov    esp,0x8b756a0d
  412944:	es push edi
  412946:	jge    0x4128e1
  412948:	and    BYTE PTR [ebx+0x45],cl
  41294b:	pusha  
  41294c:	push   ss
  41294d:	cmp    bl,BYTE PTR [esi-0x11f6e577]
  412953:	data16 sar bl,cl
  412956:	mov    ah,0x33
  412958:	(bad)  
  412959:	ins    BYTE PTR es:[edi],dx
  41295a:	rcl    ch,1
  41295c:	call   0x295b:0x1711c332
  412963:	rol    DWORD PTR [eax-0x61],0xf1
  412967:	pop    ebx
  412968:	pop    ss
  412969:	xor    dh,0xdb
  41296c:	sbb    ch,BYTE PTR [ebx-0xe46d593]
  412972:	xor    al,BYTE PTR [ecx]
  412974:	adc    eax,0x195a8742
  412979:	xor    esi,ecx
  41297b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41297c:	mov    edx,0x2f01979d
  412981:	sti    
  412982:	fwait
  412983:	in     eax,0xb5
  412985:	and    esp,DWORD PTR [ebp-0x7144195c]
  41298b:	pop    eax
  41298c:	push   ebp
  41298d:	test   DWORD PTR [esi],ecx
  41298f:	dec    edi
  412990:	push   cs
  412991:	sub    al,dl
  412993:	xor    BYTE PTR [eax-0x2940ae16],cl
  412999:	mov    dh,0x28
  41299b:	pop    ebx
  41299c:	push   ebp
  41299d:	dec    ebp
  41299e:	cmp    BYTE PTR [ebx],ch
  4129a0:	in     al,0x94
  4129a2:	sbb    al,0xa0
  4129a4:	int3   
  4129a5:	inc    edi
  4129a6:	ret    0x4d11
  4129a9:	js     0x412960
  4129ab:	mov    ch,0xac
  4129ad:	das    
  4129ae:	dec    eax
  4129af:	push   edx
  4129b0:	cmp    esi,0xa262612f
  4129b6:	retf   
  4129b7:	popa   
  4129b8:	mov    eax,0x581e5ae8
  4129bd:	leave  
  4129be:	sahf   
  4129bf:	mov    dl,0x7e
  4129c1:	repz and ebp,edi
  4129c4:	push   edi
  4129c5:	sbb    DWORD PTR [edx-0x58f930c3],eax
  4129cb:	cmc    
  4129cc:	push   ss
  4129cd:	mov    ds:0x4f9fef69,eax
  4129d2:	sub    edx,DWORD PTR [edx]
  4129d4:	loopne 0x412a39
  4129d6:	sbb    DWORD PTR [ebp-0x4c8b6688],edx
  4129dc:	or     dh,BYTE PTR [ebp+0x22e17806]
  4129e2:	hlt    
  4129e3:	outs   dx,BYTE PTR ds:[esi]
  4129e4:	mov    esp,0xf50c8a1e
  4129e9:	es jns 0x412a19
  4129ec:	ror    DWORD PTR [edi-0x16e362e9],cl
  4129f2:	pushf  
  4129f3:	out    dx,al
  4129f4:	fucomip st,st(2)
  4129f6:	fstp   QWORD PTR [ebx-0x20a02339]
  4129fc:	ja     0x412a4d
  4129fe:	les    ecx,FWORD PTR [ecx-0x7f7392d6]
  412a04:	shl    DWORD PTR [edx],1
  412a06:	mov    al,0xc2
  412a08:	or     BYTE PTR [eax],0x49
  412a0b:	mov    ecx,0x9c88f36f
  412a10:	pop    es
  412a11:	(bad)  
  412a12:	popf   
  412a13:	push   esp
  412a14:	dec    ebp
  412a15:	mov    bh,0xe
  412a17:	xchg   edi,eax
  412a18:	into   
  412a19:	mov    dl,0x5a
  412a1b:	ror    BYTE PTR [ebp+0x17],cl
  412a1e:	repnz mov WORD PTR [ebx],dx
  412a22:	hlt    
  412a23:	std    
  412a24:	xchg   ecx,eax
  412a25:	(bad)  
  412a26:	fisub  WORD PTR [edx+0x34]
  412a29:	cmp    al,cl
  412a2b:	inc    esi
  412a2c:	std    
  412a2d:	not    DWORD PTR ds:[edi]
  412a30:	jo     0x412a68
  412a32:	ffreep st(2)
  412a34:	sub    DWORD PTR [edi+0x1c],ebp
  412a37:	pop    edi
  412a38:	inc    ebp
  412a39:	iret   
  412a3a:	mov    bl,0xfe
  412a3c:	xchg   DWORD PTR [esi-0x75],ebp
  412a3f:	push   ss
  412a40:	push   eax
  412a41:	(bad)  
  412a42:	pushf  
  412a43:	imul   edx,esi,0x2e57abe6
  412a49:	jae    0x412a4f
  412a4b:	imul   esi,DWORD PTR ds:[ecx],0x1d1b6f8e
  412a52:	cmp    eax,DWORD PTR [esi+0x14bbf579]
  412a58:	mov    edx,0xacdadd1f
  412a5d:	sbb    edx,edi
  412a5f:	bound  eax,QWORD PTR [eax]
  412a61:	aam    0xc4
  412a63:	lods   eax,DWORD PTR ds:[esi]
  412a64:	sub    DWORD PTR [edi+ecx*4],esi
  412a67:	pop    esp
  412a68:	not    BYTE PTR [eax+ebx*2]
  412a6b:	cmp    BYTE PTR [eax+0x55],bl
  412a6e:	in     al,0xe2
  412a70:	aad    0x39
  412a72:	mov    al,0xd2
  412a74:	ja     0x412a7a
  412a76:	and    ecx,DWORD PTR [ecx+eiz*2]
  412a79:	xor    al,0x4e
  412a7b:	into   
  412a7c:	mov    ?,WORD PTR [esi+0x34]
  412a7f:	aas    
  412a80:	mov    WORD PTR [edi],?
  412a82:	mov    WORD PTR [ecx*1+0x7c40e0db],?
  412a89:	pusha  
  412a8a:	cdq    
  412a8b:	dec    esp
  412a8c:	adc    al,ah
  412a8e:	push   esi
  412a8f:	fistp  WORD PTR [edi]
  412a91:	mov    esp,0xd7684909
  412a96:	dec    esp
  412a97:	mov    esi,esi
  412a99:	dec    edx
  412a9a:	sbb    edi,DWORD PTR [esi+0x24]
  412a9d:	add    ebx,DWORD PTR [ecx]
  412a9f:	mov    al,ds:0xb38a6009
  412aa4:	stc    
  412aa5:	or     bh,dh
  412aa7:	cmc    
  412aa8:	cmp    bl,bl
  412aaa:	retf   
  412aab:	dec    esi
  412aac:	cmc    
  412aad:	sar    edx,cl
  412aaf:	lods   eax,DWORD PTR ds:[esi]
  412ab0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ab1:	or     esp,DWORD PTR [ecx]
  412ab3:	or     al,0x11
  412ab5:	out    dx,eax
  412ab6:	push   0xffffffb4
  412ab8:	addr16 aaa 
  412aba:	call   0x9101:0x6541fde0
  412ac1:	push   cs
  412ac2:	je     0x412a69
  412ac4:	add    ebx,ecx
  412ac6:	xchg   ebx,eax
  412ac7:	or     eax,0x806eda77
  412acc:	gs add al,0xd7
  412acf:	call   0xd698:0xfa287012
  412ad6:	sub    bh,BYTE PTR [ecx-0x1f6871ce]
  412adc:	cmp    BYTE PTR [edi+eiz*1+0x48],ch
  412ae0:	stos   BYTE PTR es:[edi],al
  412ae1:	push   eax
  412ae2:	mov    ch,dh
  412ae4:	(bad)
  412ae7:	stos   BYTE PTR es:[edi],al
  412ae8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ae9:	retf   0x20e7
  412aec:	xlat   BYTE PTR ds:[ebx]
  412aed:	xor    BYTE PTR [eax+0x1d104dee],bl
  412af3:	(bad)  
  412af4:	cdq    
  412af5:	imul   esp,DWORD PTR [ecx+0x238a591d],0xc7abc3e2
  412aff:	adc    eax,0x653cbe63
  412b04:	adc    ebx,edx
  412b06:	loop   0x412b75
  412b08:	xor    esi,esp
  412b0a:	sbb    ch,al
  412b0c:	popf   
  412b0d:	push   0xffffffc5
  412b0f:	and    DWORD PTR [esi],0xffffffd6
  412b12:	stos   BYTE PTR es:[edi],al
  412b13:	mov    esp,0xf5c494ee
  412b18:	je     0x412b3c
  412b1a:	shl    cl,0x63
  412b1d:	mov    edx,0x4e2d750f
  412b22:	out    0x16,eax
  412b24:	xchg   ecx,eax
  412b25:	jle    0x412b4e
  412b27:	fiadd  WORD PTR [edi-0x3]
  412b2a:	sub    eax,0xdeddb6ae
  412b2f:	cwde   
  412b30:	imul   ebp,DWORD PTR [ebx-0x60a4c830],0x2
  412b37:	cmp    cl,BYTE PTR [eax-0x892f778]
  412b3d:	loopne 0x412ae4
  412b3f:	shl    DWORD PTR [ebx+0x3a426a1e],1
  412b45:	ins    BYTE PTR es:[edi],dx
  412b46:	adc    ebp,DWORD PTR [esi-0x5e48c19d]
  412b4c:	dec    esi
  412b4d:	mov    dh,0x29
  412b4f:	cmp    DWORD PTR [ebp-0x2b84c9fd],ecx
  412b55:	jmp    0x412b65
  412b57:	cli    
  412b58:	mov    ecx,0x6b51dd7a
  412b5d:	popa   
  412b5e:	js     0x412b86
  412b60:	add    eax,0x444ff321
  412b65:	out    0xbd,eax
  412b67:	or     BYTE PTR [edi-0x52f95a28],cl
  412b6d:	rol    DWORD PTR [edx+ecx*8-0x50],0xe7
  412b72:	sbb    DWORD PTR [edx],esp
  412b74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b76:	mov    edi,0x84b4d2d8
  412b7b:	xor    al,0x64
  412b7d:	push   eax
  412b7e:	mov    ebp,0xf6af59e3
  412b83:	out    dx,al
  412b84:	stc    
  412b85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b86:	mov    DWORD PTR [eax-0x71f5a76a],edx
  412b8c:	jp     0x412bf2
  412b8e:	sub    ecx,DWORD PTR ds:0x40d2f906
  412b94:	adc    dl,BYTE PTR [esi+0x70]
  412b97:	xchg   ebx,eax
  412b98:	ins    DWORD PTR es:[edi],dx
  412b99:	and    al,0x91
  412b9b:	aam    0x46
  412b9d:	jl     0x412c17
  412b9f:	or     al,0xa3
  412ba1:	ret    
  412ba2:	into   
  412ba3:	mov    esp,0xd7c94c7
  412ba8:	adc    esi,DWORD PTR [ebx-0x4f5f3185]
  412bae:	sbb    BYTE PTR [ebp+edx*2+0x9d79f33],dh
  412bb5:	ficom  WORD PTR [ebx+0x50c5bd5]
  412bbb:	inc    eax
  412bbc:	je     0x412bda
  412bbe:	cmp    DWORD PTR [esi+0x5d],ebp
  412bc1:	xor    eax,0x70baa4c8
  412bc6:	or     BYTE PTR [eax],ah
  412bc8:	sbb    esi,eax
  412bca:	pop    es
  412bcb:	aam    0x83
  412bcd:	push   0xffffff8c
  412bcf:	int    0xf7
  412bd1:	int    0x8e
  412bd3:	fmul   QWORD PTR [ebx+0x24]
  412bd6:	jl     0x412b6a
  412bd8:	sbb    eax,ecx
  412bda:	push   es
  412bdb:	cmp    esp,ebx
  412bdd:	je     0x412bb2
  412bdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412be0:	in     al,dx
  412be1:	fnsave [edx]
  412be3:	or     DWORD PTR ds:0x42785f32,edi
  412be9:	(bad)  
  412beb:	mov    ebp,0x323b1588
  412bf0:	shl    DWORD PTR [edi-0x2c],0x92
  412bf4:	out    0x5,al
  412bf6:	xchg   ecx,eax
  412bf7:	jo     0x412bd3
  412bf9:	ror    DWORD PTR [ecx-0x4e],cl
  412bfc:	lahf   
  412bfd:	mov    edi,ds
  412bff:	stos   BYTE PTR es:[edi],al
  412c00:	or     DWORD PTR [esi+0x34],esp
  412c03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c04:	cmp    dl,bh
  412c06:	fwait
  412c07:	in     eax,dx
  412c08:	scas   eax,DWORD PTR es:[edi]
  412c09:	mov    ds:0x9bbfa06c,al
  412c0e:	int3   
  412c0f:	fisttp WORD PTR ds:0x34f4df41
  412c15:	mov    ebx,0xbdc00800
  412c1a:	jb     0x412c30
  412c1c:	jp     0x412c7d
  412c1e:	dec    esp
  412c1f:	into   
  412c20:	or     ah,dl
  412c22:	daa    
  412c23:	xchg   DWORD PTR [eax+0xdae265f],edx
  412c29:	and    eax,0x97fedec2
  412c2e:	xchg   ebx,eax
  412c2f:	mov    ch,0xfd
  412c31:	or     dh,dh
  412c33:	fild   QWORD PTR [edx-0x12]
  412c36:	mov    ds:0x31b5c5dc,eax
  412c3b:	jb     0x412c54
  412c3d:	mov    BYTE PTR [eax+0x19],dh
  412c40:	jl     0x412bc8
  412c42:	stos   DWORD PTR es:[edi],eax
  412c43:	cld    
  412c44:	leave  
  412c45:	enter  0x65f6,0x4e
  412c49:	enter  0xb194,0xa2
  412c4d:	xor    ebx,DWORD PTR [edx-0x6b33161f]
  412c53:	sbb    eax,0x10c93ccd
  412c58:	jl     0x412c7c
  412c5a:	scas   eax,DWORD PTR es:[edi]
  412c5b:	xlat   BYTE PTR ds:[ebx]
  412c5c:	or     dh,cl
  412c5e:	(bad)  
  412c5f:	mov    dh,0x60
  412c61:	(bad)  
  412c62:	cmp    al,0xb
  412c64:	dec    edi
  412c65:	std    
  412c66:	jl     0x412c44
  412c68:	adc    DWORD PTR [ebp-0x1241c346],esi
  412c6e:	ss in  al,0x30
  412c71:	jno    0x412c24
  412c73:	xchg   ebp,eax
  412c74:	loope  0x412c1f
  412c76:	test   al,0xed
  412c78:	call   0xfe59f1fa
  412c7d:	cmp    DWORD PTR [ebx+eax*1],0xffffffa6
  412c81:	cmp    ebp,DWORD PTR [ebx-0x51]
  412c84:	xchg   ecx,eax
  412c85:	xor    ecx,esp
  412c87:	call   0xea75:0xb59f3a24
  412c8e:	pop    edi
  412c8f:	mov    al,0x62
  412c91:	pop    ds
  412c92:	js     0x412c8f
  412c94:	mov    ch,0x11
  412c96:	xchg   ebp,eax
  412c97:	xchg   edi,eax
  412c98:	call   0x6e5dfebd
  412c9d:	add    al,0x53
  412c9f:	mov    ebp,DWORD PTR [edx+0x3d]
  412ca2:	xor    eax,0xc8c45cbb
  412ca7:	ss clc 
  412ca9:	sub    BYTE PTR [ebx-0x35514ac1],bl
  412caf:	dec    ebp
  412cb0:	inc    esp
  412cb1:	retf   
  412cb2:	mov    bh,0xf6
  412cb4:	xlat   BYTE PTR ds:[ebx]
  412cb5:	sub    ebp,DWORD PTR [edx+0x61]
  412cb8:	mov    ebp,0x7d70fe31
  412cbd:	test   eax,0x3c9164d1
  412cc3:	ds xchg dl,al
  412cc6:	loopne 0x412ccc
  412cc8:	lahf   
  412cc9:	mov    cl,0x96
  412ccb:	xor    DWORD PTR [edi+0x6f539ef8],esi
  412cd1:	xchg   ebp,eax
  412cd2:	(bad)  
  412cd3:	hlt    
  412cd4:	icebp  
  412cd5:	mov    esi,DWORD PTR [eax]
  412cd7:	jae    0x412c7e
  412cd9:	jns    0x412cc6
  412cdb:	in     eax,0x29
  412cdd:	repnz inc esp
  412cdf:	ja     0x412c76
  412ce1:	sub    eax,0x6ac4396f
  412ce6:	inc    edx
  412ce7:	xchg   ecx,eax
  412ce8:	push   esi
  412ce9:	loopne 0x412c79
  412ceb:	int3   
  412cec:	popf   
  412ced:	push   ebp
  412cee:	jns    0x412d33
  412cf0:	push   ebp
  412cf1:	xlat   BYTE PTR ds:[ebx]
  412cf2:	data16 scas al,BYTE PTR es:[edi]
  412cf4:	jne    0x412d2e
  412cf6:	push   edx
  412cf7:	les    esi,FWORD PTR ds:0x835a0e3
  412cfd:	xchg   esi,eax
  412cfe:	cmc    
  412cff:	sub    ah,BYTE PTR [esi+ecx*8-0x7c]
  412d03:	xchg   ecx,eax
  412d04:	xchg   ebx,eax
  412d05:	pop    es
  412d06:	jnp    0x412cf5
  412d08:	ret    
  412d09:	mov    ebx,0xd741a5be
  412d0e:	scas   eax,DWORD PTR es:[edi]
  412d0f:	sbb    BYTE PTR [edi],bl
  412d11:	ja     0x412d59
  412d13:	xchg   edi,eax
  412d14:	cmp    ebx,ecx
  412d16:	in     al,dx
  412d17:	jg     0x412d7d
  412d19:	cwde   
  412d1a:	xlat   BYTE PTR ds:[ebx]
  412d1b:	loopne 0x412d06
  412d1d:	mov    bh,BYTE PTR [ebp+0x62]
  412d20:	ror    BYTE PTR [ebx+0x6e845fe6],cl
  412d26:	repnz cmp eax,DWORD PTR [edx]
  412d29:	jmp    0xfe09:0x743b22f8
  412d30:	rcr    BYTE PTR [ebx+0x3868f58b],1
  412d36:	pop    eax
  412d37:	sbb    bh,dl
  412d39:	aaa    
  412d3a:	xchg   edi,eax
  412d3b:	loop   0x412cdd
  412d3d:	pop    esi
  412d3e:	(bad)  
  412d3f:	pop    ebx
  412d40:	pop    ss
  412d41:	sub    al,0xad
  412d43:	repnz dec esi
  412d45:	pop    DWORD PTR [eax+0x36913f1f]
  412d4b:	(bad)
  412d4e:	sahf   
  412d4f:	lods   eax,DWORD PTR ds:[esi]
  412d50:	loopne 0x412ce1
  412d52:	adc    edx,DWORD PTR [esi-0x19ff90b8]
  412d58:	adc    DWORD PTR [eax-0x41],0x86337356
  412d5f:	cmp    eax,0x8aa94a37
  412d64:	xor    BYTE PTR [esi],dh
  412d66:	or     al,0x6b
  412d68:	push   edi
  412d69:	(bad)  
  412d6a:	mov    al,0x54
  412d6c:	xor    DWORD PTR [ebp-0x16edd43a],eax
  412d72:	pop    es
  412d73:	stos   BYTE PTR es:[edi],al
  412d74:	retf   
  412d75:	in     eax,0xb5
  412d77:	and    dl,BYTE PTR [edx-0xa]
  412d7a:	icebp  
  412d7b:	inc    ecx
  412d7c:	xor    eax,0x6018f306
  412d81:	adc    DWORD PTR [ecx+0x7a4face4],edi
  412d87:	sub    esp,DWORD PTR [edi-0x78137aea]
  412d8d:	push   es
  412d8e:	dec    esp
  412d8f:	xor    al,0x8f
  412d91:	rol    DWORD PTR [esi+0x5ca15b70],0xcf
  412d98:	cmp    al,0xc8
  412d9a:	ret    0x3298
  412d9d:	ss pop edx
  412d9f:	mov    eax,ds:0x24f5032a
  412da4:	ins    BYTE PTR es:[edi],dx
  412da5:	imul   edx
  412da7:	jmp    0x670e16c2
  412dac:	push   esi
  412dad:	lds    ebx,FWORD PTR [ecx-0x5a]
  412db0:	cmp    bh,BYTE PTR [edi+0x1d]
  412db3:	test   eax,0x261277f0
  412db8:	mul    esp
  412dba:	cli    
  412dbb:	pop    ecx
  412dbc:	xor    DWORD PTR [edx-0x3d],edx
  412dbf:	in     eax,dx
  412dc0:	add    eax,0xb25d00b3
  412dc5:	mov    BYTE PTR [ebx],ch
  412dc7:	shl    DWORD PTR [eax],0x10
  412dca:	lods   eax,DWORD PTR ds:[esi]
  412dcb:	test   eax,0xa8f1bc10
  412dd0:	shl    WORD PTR [edx+edi*1+0x6aeb8092],1
  412dd8:	and    eax,0x87188d90
  412ddd:	(bad)  
  412dde:	ss loop 0x412dfc
  412de1:	push   ebx
  412de2:	adc    ebx,DWORD PTR [ebp-0x49dad802]
  412de8:	or     al,0x77
  412dea:	retf   
  412deb:	jge    0x412e3d
  412ded:	pop    eax
  412dee:	push   esp
  412def:	push   edi
  412df0:	call   0xa2b7:0x8ed52485
  412df7:	jnp    0x412dc1
  412df9:	clc    
  412dfa:	test   al,0x91
  412dfc:	pop    edx
  412dfd:	lock lock clc 
  412e00:	std    
  412e01:	xchg   DWORD PTR [ecx+0x6b6a2603],esp
  412e07:	ja     0x412e54
  412e09:	cmp    BYTE PTR [esi-0x6e],ah
  412e0c:	gs xor esi,ebx
  412e0f:	fistp  QWORD PTR [ecx]
  412e11:	repnz cld 
  412e13:	int    0x37
  412e15:	mov    esi,0xfba3c2b5
  412e1a:	cmc    
  412e1b:	loopne 0x412e6d
  412e1d:	mov    ecx,0xcd418b2a
  412e22:	cmp    al,0x1d
  412e24:	cmc    
  412e25:	test   al,0x25
  412e27:	pop    ds
  412e28:	xchg   esp,eax
  412e29:	mov    ds:0x11644dcb,al
  412e2e:	sub    BYTE PTR [esi],0x0
  412e31:	or     DWORD PTR [edi+0x7ef6ef4],ebx
  412e37:	iret   
  412e38:	adc    edi,0xffffffc4
  412e3b:	repz add ah,0x77
  412e3f:	imul   ebp,DWORD PTR [ebp-0x13da193b],0xa7971d9e
  412e49:	mov    dh,0xef
  412e4b:	jns    0x412e65
  412e4d:	hlt    
  412e4e:	lds    edi,FWORD PTR [edx+edx*8]
  412e51:	or     DWORD PTR [ecx-0x7506fb24],ebx
  412e57:	cmp    esp,esi
  412e59:	and    al,0xbb
  412e5b:	in     al,dx
  412e5c:	rcl    BYTE PTR [ebp+0x5a9da209],1
  412e62:	pusha  
  412e63:	shr    DWORD PTR [eax+esi*1-0x2a],cl
  412e67:	stos   BYTE PTR es:[edi],al
  412e68:	retf   0xef9f
  412e6b:	cli    
  412e6c:	and    ebx,DWORD PTR [edx+0x76821ab8]
  412e72:	push   esp
  412e73:	pop    ecx
  412e74:	inc    esp
  412e75:	aaa    
  412e76:	sbb    al,ch
  412e78:	(bad)  
  412e79:	fidiv  DWORD PTR [edi+esi*2-0x5]
  412e7d:	popa   
  412e7e:	repnz sahf 
  412e80:	popf   
  412e81:	and    BYTE PTR [edi+0x1c],dl
  412e84:	ins    BYTE PTR es:[edi],dx
  412e85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e86:	jmp    0x412e6b
  412e88:	int3   
  412e89:	test   DWORD PTR [edx+eiz*1-0x62db9798],ebp
  412e90:	cld    
  412e91:	xor    BYTE PTR [esi*1+0x64f3fd73],ch
  412e98:	popa   
  412e99:	dec    esp
  412e9a:	rol    DWORD PTR [bx+di-0x1b],1
  412e9e:	jbe    0x412eea
  412ea0:	rcl    DWORD PTR ds:0xc92146b3,1
  412ea6:	(bad)  
  412ea7:	ins    DWORD PTR es:[edi],dx
  412ea8:	dec    esi
  412ea9:	fstp   TBYTE PTR [edi+eiz*4-0xc]
  412ead:	(bad)  
  412eaf:	jno    0x412f1d
  412eb1:	jno    0x412eb1
  412eb3:	or     al,0x62
  412eb5:	pop    esp
  412eb6:	xor    al,0xfe
  412eb8:	data16 mov cs,WORD PTR [ecx+0x2c]
  412ebc:	and    DWORD PTR [ebp-0x17],esi
  412ebf:	mov    cl,0x78
  412ec1:	jmp    0xdb00:0x44987013
  412ec8:	mov    ah,0xbe
  412eca:	cld    
  412ecb:	jbe    0x412e76
  412ecd:	jle    0x412f39
  412ecf:	jae    0x412f11
  412ed1:	repnz into 
  412ed3:	push   cs
  412ed4:	ja     0x412f40
  412ed6:	adc    BYTE PTR [eax+0xf],dl
  412ed9:	xor    al,0xb1
  412edb:	dec    BYTE PTR [esi+ebp*2+0x65]
  412edf:	popf   
  412ee0:	dec    ecx
  412ee1:	ds daa 
  412ee3:	fwait
  412ee4:	outs   dx,BYTE PTR ds:[esi]
  412ee5:	aad    0x9
  412ee7:	add    edx,DWORD PTR [edx-0x5ddff331]
  412eed:	call   0x265c1647
  412ef2:	in     al,0x6d
  412ef4:	les    esp,FWORD PTR [eax+ecx*4+0xaa98a27]
  412efb:	das    
  412efc:	(bad)  
  412efe:	inc    ebp
  412eff:	int3   
  412f00:	lea    edx,[edi+ebx*8+0x55]
  412f04:	daa    
  412f05:	mov    cl,dl
  412f07:	fisub  WORD PTR [edi]
  412f09:	retf   0xf3c5
  412f0c:	leave  
  412f0d:	pop    ecx
  412f0e:	push   ebx
  412f0f:	int3   
  412f10:	iret   
  412f11:	test   eax,0x5a43e9c
  412f16:	inc    ebp
  412f17:	sar    BYTE PTR [esi],0x7b
  412f1a:	mov    dh,0xac
  412f1c:	jno    0x412ec4
  412f1e:	mov    es,ebp
  412f20:	adc    dh,BYTE PTR ds:0x669de430
  412f26:	call   0xf230:0x7da78498
  412f2d:	or     esi,DWORD PTR [ecx+0x3f2035e3]
  412f33:	sbb    eax,0xaa0f1ab
  412f38:	mov    ebp,eax
  412f3a:	push   ss
  412f3b:	inc    ebx
  412f3c:	sub    ebp,DWORD PTR [ebx]
  412f3e:	and    eax,0xf70d3179
  412f43:	or     dh,BYTE PTR [ebx+ecx*1+0x6045055c]
  412f4a:	inc    esp
  412f4b:	and    eax,0xbfdad1be
  412f50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f51:	jge    0xf804c493
  412f57:	cmp    al,0xcf
  412f59:	je     0x412fbe
  412f5b:	or     bh,BYTE PTR [ebp-0x23]
  412f5e:	lock test BYTE PTR [eax],dh
  412f61:	add    edx,DWORD PTR [eax+0x348e2e10]
  412f67:	pop    eax
  412f68:	push   eax
  412f69:	arpl   WORD PTR [edx+0x1b29cf6d],bx
  412f6f:	inc    ebp
  412f70:	(bad)  
  412f71:	dec    edi
  412f72:	mov    ebx,0xe7cb65ad
  412f77:	xor    BYTE PTR [edx+esi*2+0x59cfa5f9],dh
  412f7e:	call   0x8818:0xa29eaaaf
  412f85:	repnz stos BYTE PTR es:[edi],al
  412f87:	addr16 out dx,eax
  412f89:	clc    
  412f8a:	loop   0x412fbb
  412f8c:	rol    BYTE PTR [edi],cl
  412f8e:	iret   
  412f8f:	adc    al,0xfc
  412f91:	inc    edx
  412f92:	or     cl,BYTE PTR [edi]
  412f94:	stc    
  412f95:	loopne 0x412fe8
  412f97:	inc    eax
  412f98:	mov    dh,0xa7
  412f9a:	call   0x64c8:0xfa222231
  412fa1:	adc    ecx,DWORD PTR [ebx+ebp*8-0x6d]
  412fa5:	clc    
  412fa6:	xchg   esi,eax
  412fa7:	popf   
  412fa8:	les    ebx,FWORD PTR [eax+0x112f924d]
  412fae:	pushf  
  412faf:	mov    ch,0x33
  412fb1:	iret   
  412fb2:	mov    esi,0x10171b02
  412fb7:	or     bh,BYTE PTR [ecx+edi*1+0x49]
  412fbb:	pusha  
  412fbc:	and    DWORD PTR [esi],ebp
  412fbe:	jmp    0x32ff5df6
  412fc3:	or     eax,0x40b4a208
  412fc8:	sbb    ch,BYTE PTR [ecx+0x55b8e5ad]
  412fce:	psubusb mm0,QWORD PTR [ecx-0x34]
  412fd2:	test   al,ch
  412fd4:	in     al,0x2d
  412fd6:	int    0x51
  412fd8:	enter  0x78d1,0x76
  412fdc:	sub    bl,BYTE PTR [ecx+0x8704df4]
  412fe2:	in     al,dx
  412fe3:	xchg   DWORD PTR [ecx-0x3c],esp
  412fe6:	scas   eax,DWORD PTR es:[edi]
  412fe7:	jb     0x412f90
  412fe9:	into   
  412fea:	inc    ecx
  412feb:	fxch   st(5)
  412fed:	repnz xor eax,0xea81bbd6
  412ff3:	pop    ebp
  412ff4:	ss sbb al,0xba
  412ff7:	push   esp
  412ff8:	push   ss
  412ff9:	sub    al,0xa1
  412ffb:	xchg   DWORD PTR [eax],ebx
  412ffd:	aas    
  412ffe:	arpl   WORD PTR [edi],dx
  413000:	jecxz  0x413010
  413002:	mov    eax,0xbb35cd90
  413007:	jne    0x413078
  413009:	pop    ds
  41300a:	add    al,al
  41300c:	and    eax,DWORD PTR [ebp-0x6cc27009]
  413012:	aas    
  413013:	inc    esi
  413014:	dec    edx
  413015:	popa   
  413016:	push   ebp
  413017:	retf   
  413018:	xlat   BYTE PTR ds:[ebx]
  413019:	(bad)  
  41301a:	and    eax,0xd0fd9f9b
  41301f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413020:	(bad)  
  413021:	jbe    0x412fed
  413023:	push   ebp
  413024:	cwde   
  413025:	hlt    
  413026:	mov    dh,al
  413028:	out    dx,al
  413029:	mov    WORD PTR [esi+0xf],ss
  41302c:	xchg   esp,eax
  41302d:	xlat   BYTE PTR ds:[ebx]
  41302e:	xor    cl,al
  413030:	stc    
  413031:	shl    cl,0x1f
  413034:	(bad)  
  413035:	addr16 ja 0x413042
  413038:	popa   
  413039:	gs jne 0x413094
  41303c:	test   al,0xd1
  41303e:	fsub   DWORD PTR [edi-0x3e]
  413041:	dec    edx
  413042:	add    al,0xd9
  413044:	icebp  
  413045:	loope  0x4130a8
  413047:	sub    eax,0xb192b49a
  41304c:	sti    
  41304d:	sahf   
  41304e:	cmp    DWORD PTR ds:0xadcf37dd,0x49320453
  413058:	or     DWORD PTR [ebx],esp
  41305a:	xchg   ecx,eax
  41305b:	xchg   ebx,eax
  41305c:	push   edx
  41305d:	leave  
  41305e:	adc    DWORD PTR [ebx+0x32],esp
  413061:	and    BYTE PTR [esi-0x4],ch
  413064:	fwait
  413065:	mov    cl,BYTE PTR [ecx]
  413067:	push   ss
  413068:	xor    al,0xa8
  41306a:	xor    eax,DWORD PTR [edi]
  41306c:	push   0x266a0da
  413071:	je     0x413063
  413073:	jmp    0x95c7:0x6a04f4c7
  41307a:	mov    dh,BYTE PTR [eax-0x53bab6f2]
  413080:	inc    esi
  413081:	aad    0x70
  413083:	call   0x767f:0x445c4639
  41308a:	push   esp
  41308b:	(bad)  ds:0xd3d940d1
  413091:	je     0x413043
  413093:	mov    edx,DWORD PTR [ebx]
  413095:	mov    ch,BYTE PTR [edx]
  413097:	retf   0xb500
  41309a:	cwde   
  41309b:	(bad)  
  41309c:	daa    
  41309d:	mov    ecx,0x6bd71627
  4130a2:	test   eax,esi
  4130a4:	inc    ebp
  4130a5:	pop    edi
  4130a6:	and    BYTE PTR [ebx-0x44],bh
  4130a9:	and    BYTE PTR [eax-0x76],al
  4130ac:	sbb    dl,BYTE PTR [esi-0xc]
  4130af:	cmp    al,0xb9
  4130b1:	call   0x885e361f
  4130b6:	(bad)  
  4130b7:	xor    ecx,DWORD PTR [ecx-0x69c881c0]
  4130bd:	or     cl,BYTE PTR [eax+edx*1+0x498e768b]
  4130c4:	pop    esp
  4130c5:	hlt    
  4130c6:	or     dl,BYTE PTR [ebp-0x7d0cb2f9]
  4130cc:	stos   DWORD PTR es:[edi],eax
  4130cd:	fcos   
  4130cf:	inc    esp
  4130d0:	lds    di,DWORD PTR [ebx]
  4130d3:	cmp    DWORD PTR [edx+0x3b9aab90],0x87b9ac45
  4130dd:	mov    esi,0xc01bbd8f
  4130e2:	xchg   ecx,eax
  4130e3:	sbb    ebx,DWORD PTR [esi+0x54]
  4130e6:	das    
  4130e7:	add    eax,0x617fa408
  4130ec:	test   BYTE PTR [ebp+0x780abd14],bh
  4130f2:	stos   DWORD PTR es:[edi],eax
  4130f3:	jb     0x4130f7
  4130f5:	loop   0x4130f0
  4130f7:	mov    al,ds:0x935844ec
  4130fc:	ror    BYTE PTR [ecx],0xe2
  4130ff:	lds    esp,FWORD PTR [ebx-0x4c]
  413102:	std    
  413103:	jg     0x4130dc
  413105:	iret   
  413106:	mov    edi,0xdcc9be2d
  41310b:	and    al,bh
  41310d:	or     esp,DWORD PTR [ebp+0x5e]
  413110:	lods   al,BYTE PTR ds:[esi]
  413111:	sub    BYTE PTR [eax+0x43],0x8a
  413115:	call   0xf82c:0x2929199d
  41311c:	ins    DWORD PTR es:[edi],dx
  41311d:	sbb    al,0xf7
  41311f:	sbb    BYTE PTR [ebp-0x52],bl
  413122:	int3   
  413123:	xchg   ebp,eax
  413124:	imul   ebp,DWORD PTR [ebx],0x3b493eff
  41312a:	xor    al,BYTE PTR [esi-0x60]
  41312d:	fs pop ecx
  41312f:	pop    ds
  413130:	das    
  413131:	shl    BYTE PTR [edi],0x10
  413134:	ja     0x4130be
  413136:	into   
  413137:	mov    DWORD PTR [ecx],edi
  413139:	hlt    
  41313a:	popf   
  41313b:	cwde   
  41313c:	fs fdivp st(3),st
  41313f:	or     eax,0x9dc8e7ca
  413144:	jmp    0xa348b7a
  413149:	scas   eax,DWORD PTR es:[edi]
  41314a:	mov    ebp,0x74096426
  41314f:	sub    edx,0x3c6d4cb1
  413155:	and    BYTE PTR [ebx],0x6c
  413158:	or     al,0x36
  41315a:	pop    edx
  41315b:	nop
  41315c:	inc    ebx
  41315d:	or     BYTE PTR [edi-0x6ce8d930],0xd7
  413164:	or     edi,DWORD PTR [edx+0x4a8ee3a5]
  41316a:	(bad)  
  41316b:	xchg   edi,eax
  41316c:	inc    ebp
  41316d:	test   dl,0x3e
  413170:	xchg   esp,eax
  413171:	push   edx
  413172:	sbb    eax,0xd1608777
  413177:	jae    0x4131bd
  413179:	cmp    BYTE PTR [edi],0xf7
  41317c:	enter  0xc987,0x3d
  413180:	jns    0x4131bf
  413182:	inc    ecx
  413183:	idiv   BYTE PTR [eax]
  413185:	out    dx,eax
  413186:	out    0x62,eax
  413188:	mov    eax,ds:0x7f37e877
  41318d:	fst    DWORD PTR [edx-0x1a47d175]
  413193:	and    al,0xd6
  413195:	or     dh,0xa9
  413198:	cs in  al,0xd2
  41319b:	data16 not BYTE PTR [edi+eiz*1+0x17021d]
  4131a3:	int    0x14
  4131a5:	mov    ch,0x34
  4131a7:	clc    
  4131a8:	sub    cl,BYTE PTR [edx+ecx*8-0xc3ad4e9]
  4131af:	cmp    DWORD PTR [edi-0x18],esi
  4131b2:	add    bh,BYTE PTR [edi-0x63]
  4131b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131b6:	das    
  4131b7:	push   edx
  4131b8:	in     eax,dx
  4131b9:	push   ds
  4131ba:	out    dx,eax
  4131bb:	push   esi
  4131bc:	or     BYTE PTR [edi],bl
  4131be:	xchg   ecx,eax
  4131bf:	xor    al,0x1c
  4131c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131c2:	mov    DWORD PTR [edx+0xcf5345],ecx
  4131c8:	and    esi,ecx
  4131ca:	pop    ss
  4131cb:	pop    eax
  4131cc:	push   edi
  4131cd:	imul   BYTE PTR [edx+0x63]
  4131d0:	mov    eax,ds:0xbf0713d6
  4131d5:	sbb    DWORD PTR [esi],0x45
  4131d8:	fisub  DWORD PTR [ebx-0x2e]
  4131db:	arpl   WORD PTR [esi],sp
  4131dd:	call   0xbe29d9d9
  4131e2:	add    BYTE PTR [esi+0x1e],0x9a
  4131e6:	out    dx,eax
  4131e7:	ror    DWORD PTR [ebx],0xb7
  4131ea:	sub    al,0xb4
  4131ec:	stos   DWORD PTR es:[edi],eax
  4131ed:	mov    ah,0x69
  4131ef:	xchg   esp,eax
  4131f0:	into   
  4131f1:	jle    0x4131d1
  4131f3:	loope  0x4131e7
  4131f5:	jle    0x4131fa
  4131f7:	nop
  4131f8:	sbb    BYTE PTR [eax+0x368f5fe8],dl
  4131fe:	pop    ds
  4131ff:	out    dx,eax
  413200:	adc    al,0x64
  413202:	in     eax,dx
  413203:	xor    esp,DWORD PTR [ecx+0x72ae183b]
  413209:	call   0x8c5d:0xe353eff
  413210:	(bad)  
  413211:	push   ecx
  413212:	push   ebx
  413213:	add    BYTE PTR [edi+0x361e2646],0x63
  41321a:	push   ss
  41321b:	xlat   BYTE PTR ds:[ebx]
  41321c:	in     al,dx
  41321d:	dec    ebx
  41321e:	hlt    
  41321f:	sbb    dl,cl
  413221:	aaa    
  413222:	(bad)  
  413223:	cmp    al,0xaa
  413225:	or     al,0xf7
  413227:	out    dx,al
  413228:	sbb    edi,ebp
  41322a:	leave  
  41322b:	(bad)
  41322e:	jge    0x4131de
  413230:	dec    edx
  413231:	imul   DWORD PTR [eax-0x3f7af90d]
  413237:	xchg   esp,eax
  413238:	jae    0x4132ab
  41323a:	xchg   edi,eax
  41323b:	clc    
  41323c:	add    ecx,DWORD PTR [ebp+0x76]
  41323f:	retf   0xc37c
  413242:	(bad)  
  413243:	and    BYTE PTR [eax],bh
  413245:	enter  0x5d73,0x56
  413249:	xor    cl,BYTE PTR [ecx+0x62]
  41324c:	aas    
  41324d:	out    0xac,al
  41324f:	ret    0xaaf8
  413252:	adc    bl,BYTE PTR [ebx+0x11]
  413255:	call   0x5d9a:0x7d0fe6cf
  41325c:	test   eax,0xaaf1c39
  413261:	stos   BYTE PTR es:[edi],al
  413262:	jmp    0x106a:0x1b88a0b4
  413269:	scas   al,BYTE PTR es:[edi]
  41326a:	or     al,0x79
  41326c:	ja     0x413213
  41326e:	je     0x413287
  413270:	jb     0x41321d
  413272:	(bad)  
  413273:	push   esi
  413274:	mov    ch,0xb0
  413276:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413277:	add    al,0xa3
  413279:	lods   al,BYTE PTR ds:[esi]
  41327a:	dec    edx
  41327b:	int3   
  41327c:	pop    esp
  41327d:	outs   dx,DWORD PTR ds:[esi]
  41327e:	xchg   BYTE PTR ds:[esi+0x61e45259],cl
  413285:	mov    BYTE PTR [esi+0x37718b5d],ah
  41328b:	mov    bh,0x11
  41328d:	jns    0x41324d
  41328f:	xchg   ecx,eax
  413290:	bound  ecx,QWORD PTR [esi+0x18]
  413293:	les    ebx,FWORD PTR [ebx-0x5e14fbda]
  413299:	ins    BYTE PTR es:[edi],dx
  41329a:	shr    BYTE PTR [ebp-0x5],0xa8
  41329e:	or     eax,0xffb192b0
  4132a3:	in     eax,dx
  4132a4:	mov    esp,0x72b753c
  4132a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132aa:	dec    ecx
  4132ab:	mov    dh,0x79
  4132ad:	or     eax,0x2091338d
  4132b2:	sub    al,0xbf
  4132b4:	ds cmp eax,0xf4f94ced
  4132ba:	sub    eax,0x1127d837
  4132bf:	lds    eax,FWORD PTR [ebx]
  4132c1:	dec    ebx
  4132c2:	mov    eax,ds:0xca085227
  4132c7:	or     esi,DWORD PTR [ebx+0x44]
  4132ca:	in     eax,dx
  4132cb:	sbb    BYTE PTR [ebx-0x51],0xd8
  4132cf:	or     eax,0xa9c21b8a
  4132d4:	fild   WORD PTR [esi+esi*2-0x28c1b809]
  4132db:	push   cs
  4132dc:	inc    eax
  4132dd:	lock scas eax,DWORD PTR es:[edi]
  4132df:	fidiv  WORD PTR [ebx-0x1b]
  4132e2:	dec    eax
  4132e3:	enter  0xe684,0xce
  4132e7:	jb     0x4132b7
  4132e9:	pop    ebx
  4132ea:	mov    gs,WORD PTR [ebx]
  4132ec:	jecxz  0x413343
  4132ee:	data16 mov ch,0xec
  4132f1:	xchg   eax,esi
  4132f3:	ja     0x4132b8
  4132f5:	dec    esi
  4132f6:	inc    esi
  4132f7:	enter  0x74f4,0xef
  4132fb:	repz popa 
  4132fd:	mov    ah,0xfe
  4132ff:	(bad)  
  413300:	push   ebx
  413301:	xchg   BYTE PTR [edi+0x57],ah
  413304:	inc    ebx
  413305:	dec    ebx
  413306:	addr16 jmp 0x40c36107
  41330c:	mov    dh,0x44
  41330e:	pop    ss
  41330f:	mov    dh,0xe
  413311:	scas   eax,DWORD PTR es:[edi]
  413312:	add    DWORD PTR fs:[edi+0x7f55bf23],ebp
  413319:	inc    esi
  41331a:	sub    al,0x33
  41331c:	mov    ss,WORD PTR [esi+0x7053e889]
  413322:	xchg   BYTE PTR [eax+edx*1+0x451fb456],bl
  413329:	and    eax,0x358c7695
  41332e:	fbld   TBYTE PTR es:[esp+ecx*1+0x7139afaf]
  413336:	int    0x94
  413338:	lock mov edx,0x914a341c
  41333e:	loope  0x4132e4
  413340:	in     al,dx
  413341:	cmp    al,0x46
  413343:	js     0x4132c9
  413345:	or     eax,0x46e83e5b
  41334a:	mov    ds:0xd2fa75e5,al
  41334f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413350:	push   DWORD PTR [ecx+eax*8-0x22bdacd2]
  413357:	mov    ds:0x48719a31,eax
  41335c:	shl    BYTE PTR [ebp+0x29eb9a22],cl
  413362:	sub    BYTE PTR [ecx+eax*4],ch
  413365:	inc    esi
  413366:	popa   
  413367:	jmp    0x3837:0xb7ac56d
  41336e:	aad    0x6
  413370:	jecxz  0x41335e
  413372:	mov    dh,0xc7
  413374:	jmp    0x413396
  413376:	clc    
  413377:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413378:	mov    eax,ds:0x3df580d9
  41337d:	add    ebp,DWORD PTR [edx-0x63270fa4]
  413383:	dec    ebp
  413384:	rcl    BYTE PTR ss:[esi-0x50],1
  413388:	(bad)  
  413389:	sub    eax,0xa8f82293
  41338e:	iret   
  41338f:	and    eax,0xd84df32d
  413394:	fs push edi
  413396:	mov    eax,ds:0x165122df
  41339b:	jmp    0x413378
  41339d:	ds ret 
  41339f:	cmp    eax,0xe303462
  4133a4:	and    eax,0x34aa9049
  4133a9:	xchg   ecx,eax
  4133aa:	dec    eax
  4133ab:	in     al,dx
  4133ac:	push   edi
  4133ad:	xor    al,bl
  4133af:	inc    esi
  4133b0:	cmp    al,0x13
  4133b2:	dec    esi
  4133b3:	and    al,0x77
  4133b5:	imul   al
  4133b7:	xor    bh,BYTE PTR [ebx+0xf52a6dc]
  4133bd:	shl    edi,cl
  4133bf:	retf   
  4133c0:	dec    ebx
  4133c1:	mov    ecx,ecx
  4133c3:	es loop 0x413441
  4133c6:	push   ebp
  4133c7:	pop    ebp
  4133c8:	mov    BYTE PTR [ecx*8+0x3874aa20],0xe1
  4133d0:	inc    edi
  4133d1:	fwait
  4133d2:	fs cmp eax,0x31dcf416
  4133d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133d9:	mov    edi,0x26de071d
  4133de:	jle    0x4133b5
  4133e0:	shl    DWORD PTR [edi+0x4a8ff4a0],cl
  4133e6:	nop    DWORD PTR [eax-0x49e3a367]
  4133ed:	mov    ebx,0x71b1e1bc
  4133f2:	das    
  4133f3:	mov    bh,0x98
  4133f5:	fst    DWORD PTR [edx-0x5bcb65ae]
  4133fb:	fisttp WORD PTR [edx+ebx*4]
  4133fe:	mov    edi,0xebdb45e7
  413403:	int    0x93
  413405:	stc    
  413406:	ss jmp 0x4133d2
  413409:	jecxz  0x413450
  41340b:	aaa    
  41340c:	mov    DWORD PTR [ecx-0x3c],0xcc745739
  413413:	sbb    bl,BYTE PTR [esp+edx*8+0x210cddbc]
  41341a:	push   0xfbb51818
  41341f:	sti    
  413420:	fstp   QWORD PTR [eax-0x493430ae]
  413426:	push   edx
  413427:	aas    
  413428:	jp     0x41341e
  41342a:	jnp    0x4133b4
  41342c:	sbb    DWORD PTR [eax+edi*4],esp
  41342f:	dec    esi
  413430:	dec    ebx
  413431:	inc    ecx
  413432:	arpl   WORD PTR [eax+0x28],sp
  413435:	jg     0x413429
  413437:	ds lock or edx,ebx
  41343b:	ret    0x5133
  41343e:	inc    ebx
  41343f:	add    BYTE PTR [edi],dh
  413441:	jl     0x41342e
  413443:	xchg   edi,eax
  413444:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413445:	or     eax,0x211ba05a
  41344a:	adc    DWORD PTR [ecx],ebx
  41344c:	cmc    
  41344d:	push   edi
  41344e:	ud2    
  413450:	daa    
  413451:	mov    WORD PTR [ebp+0x15c9e616],fs
  413457:	xchg   ebp,eax
  413458:	ss (bad) 
  41345a:	stc    
  41345b:	sub    cl,0x1
  41345e:	cmp    al,0x66
  413460:	add    al,0xf8
  413462:	repnz rcl DWORD PTR [edx],1
  413465:	inc    esi
  413466:	adc    cl,cl
  413468:	pop    esp
  413469:	inc    esp
  41346b:	mov    BYTE PTR cs:[ebx+0x2800bc74],dh
  413472:	aaa    
  413473:	jb     0x413495
  413475:	iret   
  413476:	int    0x8b
  413478:	cmp    ch,dl
  41347a:	mov    WORD PTR [ebx+0x15ab9da6],?
  413480:	mov    ebp,0xe87afc86
  413485:	push   ds
  413486:	cmp    DWORD PTR [eax],eax
  413488:	mov    BYTE PTR [ebx+0x56e20161],al
  41348e:	int    0xe
  413490:	mov    ds:0xc25f9f4,eax
  413495:	adc    ebp,DWORD PTR [ebx-0x1a]
  413498:	repnz fstp st(2)
  41349b:	test   DWORD PTR [eax-0x9088d8b],esi
  4134a1:	cmc    
  4134a2:	jnp    0x4134c5
  4134a4:	mov    ds:0x47d61a84,al
  4134a9:	mov    dh,dl
  4134ab:	cld    
  4134ac:	loope  0x413444
  4134ae:	or     eax,0x2cad32dc
  4134b3:	loope  0x4134e6
  4134b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134b6:	fadd   DWORD PTR [esi]
  4134b8:	jle    0x413520
  4134ba:	in     eax,0x45
  4134bc:	mov    dh,0xc7
  4134be:	(bad)  
  4134c0:	push   0x49d35ac
  4134c5:	mov    al,bl
  4134c7:	sub    eax,0xa7d3f5c8
  4134cc:	mov    edi,0x17d981ae
  4134d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134d2:	in     al,0xb3
  4134d4:	and    BYTE PTR [ecx+ebp*1+0x1776214f],dh
  4134db:	pop    eax
  4134dc:	push   ebx
  4134dd:	mov    dl,0xca
  4134df:	mov    ch,0xb3
  4134e1:	dec    eax
  4134e2:	add    eax,0x1f0e3fe
  4134e7:	jno    0x4134eb
  4134e9:	push   0x25
  4134eb:	xor    esp,DWORD PTR [ebx]
  4134ed:	jecxz  0x4134ce
  4134ef:	mov    cl,0x9f
  4134f1:	mov    eax,0x5a730e77
  4134f6:	mov    esp,0x1ee436f4
  4134fb:	sbb    al,0x96
  4134fd:	fild   WORD PTR [ecx-0x9cdb92c]
  413503:	test   BYTE PTR [ebx],ch
  413505:	(bad)  
  413506:	push   esp
  413507:	cwde   
  413508:	cmp    BYTE PTR [edx-0x6c],dh
  41350b:	ins    BYTE PTR es:[edi],dx
  41350c:	mov    eax,ds:0x5bff854f
  413511:	xchg   edx,eax
  413512:	rol    ch,1
  413514:	in     eax,dx
  413515:	pop    ss
  413516:	push   ebp
  413517:	imul   ecx,DWORD PTR [esi+0x74],0x7ccc85fe
  41351e:	adc    BYTE PTR [ecx+0x758c0bc8],0xe8
  413525:	and    eax,0x5651bc7c
  41352a:	popf   
  41352b:	mov    ds:0x3ab9b6d7,eax
  413530:	or     bh,bh
  413532:	sti    
  413533:	std    
  413534:	xchg   ebp,eax
  413535:	mov    eax,0x13f746f2
  41353a:	pop    esp
  41353b:	js     0x4134f5
  41353d:	pop    esp
  41353e:	push   ebp
  41353f:	pop    esp
  413540:	sub    edi,ebp
  413542:	sahf   
  413543:	xchg   esp,eax
  413544:	aam    0xe1
  413546:	pushf  
  413547:	xchg   edi,eax
  413548:	or     dh,BYTE PTR [ebx*4-0xb8a4e5e]
  41354f:	jns    0x4135aa
  413551:	xor    eax,0xe8f5fbd7
  413556:	inc    edx
  413557:	arpl   WORD PTR [esi],sp
  413559:	and    al,0xaa
  41355b:	sbb    edi,DWORD PTR [edx+0x2d]
  41355e:	iret   
  41355f:	mov    esi,0xe5ca16a6
  413564:	aam    0x98
  413566:	(bad)  
  413567:	and    BYTE PTR [ecx-0x5b2ca065],bl
  41356d:	mov    cl,0xa9
  41356f:	adc    eax,0xd18ccd2b
  413574:	ds jle 0x41358f
  413577:	adc    eax,0x5e95a2da
  41357c:	ret    
  41357d:	xchg   esi,eax
  41357e:	adc    eax,0xbcb47b7f
  413583:	sub    al,0xb1
  413585:	jo     0x413600
  413587:	outs   dx,BYTE PTR ds:[esi]
  413588:	scas   al,BYTE PTR es:[edi]
  413589:	out    dx,al
  41358a:	ins    DWORD PTR es:[edi],dx
  41358b:	loop   0x41354c
  41358d:	jne    0x41356c
  41358f:	fdivr  QWORD PTR [eax+0x341d153]
  413595:	xchg   ebx,eax
  413596:	push   ebp
  413597:	nop
  413598:	add    BYTE PTR [ebx],ah
  41359a:	jo     0x413549
  41359c:	dec    eax
  41359d:	mov    dh,0x50
  41359f:	xor    ecx,ebx
  4135a1:	inc    edx
  4135a2:	inc    eax
  4135a3:	(bad)  
  4135a4:	push   esp
  4135a5:	test   al,0x66
  4135a7:	mov    ebp,DWORD PTR [edx]
  4135a9:	mov    eax,ds:0xd05f016d
  4135ae:	or     ah,BYTE PTR ds:0x9d3470a
  4135b4:	ins    BYTE PTR es:[edi],dx
  4135b5:	adc    BYTE PTR [ebx+edx*4],ah
  4135b8:	inc    eax
  4135b9:	dec    esi
  4135ba:	cmp    eax,0xaf294822
  4135bf:	mov    ds:0x1551a86f,al
  4135c4:	sub    al,0x25
  4135c6:	mov    dh,0x9e
  4135c8:	repz dec ebp
  4135ca:	sbb    eax,0x74d57b91
  4135cf:	mov    BYTE PTR [ecx-0x77ad3f99],cl
  4135d5:	in     al,0xdd
  4135d7:	dec    edi
  4135d8:	and    ebx,DWORD PTR [ebp-0x35]
  4135db:	in     eax,dx
  4135dc:	(bad)  
  4135de:	outs   dx,BYTE PTR ds:[esi]
  4135df:	mov    bh,BYTE PTR [ebp+ecx*4-0x2e548345]
  4135e6:	sub    ch,BYTE PTR [eax-0x7059fa7e]
  4135ec:	pop    ebx
  4135ed:	loope  0x4135be
  4135ef:	cwde   
  4135f0:	dec    esi
  4135f1:	js     0x4135ac
  4135f3:	gs enter 0x841e,0x31
  4135f8:	mov    ds:0x11f28494,eax
  4135fd:	pop    ecx
  4135fe:	ret    
  4135ff:	sahf   
  413600:	popa   
  413601:	pusha  
  413602:	jns    0x413617
  413604:	jp     0x4135df
  413606:	fdivr  DWORD PTR gs:[ecx-0x57]
  41360a:	faddp  st(6),st
  41360c:	cmp    DWORD PTR [ebp+0x593afce4],esi
  413612:	xor    eax,0x9b492d38
  413617:	adc    eax,edi
  413619:	lea    esi,[ebx+0x577a6a26]
  41361f:	add    ecx,DWORD PTR [edx-0x4d]
  413622:	sub    al,0x92
  413624:	sbb    edi,ecx
  413626:	mov    fs,WORD PTR [edi+0x7a]
  413629:	enter  0x9623,0x20
  41362d:	mov    dh,0xb7
  41362f:	icebp  
  413630:	cdq    
  413631:	in     eax,dx
  413632:	mov    WORD PTR [esi+esi*4+0x163998e8],cs
  413639:	dec    esp
  41363a:	jecxz  0x413671
  41363c:	inc    ecx
  41363d:	cmp    BYTE PTR [ebp+ebp*2-0xa],bl
  413641:	dec    ecx
  413642:	enter  0x4380,0xf7
  413646:	iret   
  413647:	sub    al,0xfb
  413649:	adc    eax,ecx
  41364b:	sub    eax,0x2d728823
  413650:	inc    ecx
  413651:	xlat   BYTE PTR ds:[ebx]
  413652:	push   esp
  413653:	aam    0x72
  413655:	push   cs
  413656:	lods   eax,DWORD PTR ds:[esi]
  413657:	aam    0x5c
  413659:	mov    WORD PTR [edi+0x35212f71],ds
  41365f:	jle    0x413601
  413661:	retf   
  413662:	mov    ecx,0x22c89b72
  413667:	iret   
  413668:	daa    
  413669:	out    dx,al
  41366a:	je     0x4136cf
  41366c:	je     0x4136e3
  41366e:	mov    ecx,0xb9178098
  413673:	xchg   ecx,eax
  413674:	or     al,0x69
  413676:	xchg   ebx,eax
  413677:	mov    ch,0xef
  413679:	mov    edx,0x1728c931
  41367e:	mov    esi,0x8a72bed2
  413683:	mov    esi,0x7fc4be35
  413688:	das    
  413689:	nop
  41368a:	and    cl,ah
  41368c:	add    BYTE PTR [edi-0x19],bl
  41368f:	pop    eax
  413690:	popa   
  413691:	pop    ds
  413692:	(bad)  
  413693:	lahf   
  413694:	inc    eax
  413695:	fisub  DWORD PTR fs:[eax+0x702424ea]
  41369c:	mov    edi,DWORD PTR [ecx+0x3323efc0]
  4136a2:	rcl    BYTE PTR [esi],1
  4136a4:	mov    ecx,0x5f43f3f1
  4136a9:	stc    
  4136aa:	mov    ds:0xc860491b,al
  4136af:	add    ecx,DWORD PTR [ecx]
  4136b1:	popf   
  4136b2:	stos   BYTE PTR es:[edi],al
  4136b3:	mov    eax,ds:0x886b067
  4136b8:	in     eax,dx
  4136b9:	outs   dx,BYTE PTR ds:[esi]
  4136ba:	cld    
  4136bb:	test   BYTE PTR [eax-0xe],0xff
  4136bf:	xchg   BYTE PTR [ecx],bl
  4136c1:	mov    ebx,0xcb5ee3e7
  4136c6:	or     al,0x9c
  4136c8:	push   eax
  4136c9:	fwait
  4136ca:	inc    edi
  4136cb:	adc    al,0xd0
  4136cd:	dec    ebp
  4136ce:	int    0x6c
  4136d0:	pop    ds
  4136d1:	jb     0x4136cb
  4136d3:	mov    esi,0x80af7114
  4136d8:	or     DWORD PTR [edx+0x4b],eax
  4136db:	pop    edi
  4136dc:	sar    DWORD PTR [esi-0x6d],cl
  4136df:	sub    bl,dl
  4136e1:	daa    
  4136e2:	outs   dx,BYTE PTR ds:[esi]
  4136e3:	pop    ds
  4136e4:	(bad)  
  4136e5:	sub    BYTE PTR [ebx+0x477b2b3c],ah
  4136eb:	push   cs
  4136ec:	(bad)  
  4136ed:	cmp    eax,0x7f2bfbc6
  4136f2:	addr16 push cs
  4136f4:	mov    ecx,0xb4288d9d
  4136f9:	xor    dl,BYTE PTR [esi]
  4136fb:	pop    es
  4136fc:	int3   
  4136fd:	jp     0x4136c5
  4136ff:	ror    BYTE PTR [edi],cl
  413701:	mov    al,ds:0x4835112
  413706:	mov    dh,0x61
  413708:	mov    ch,0x7
  41370a:	scas   eax,DWORD PTR es:[edi]
  41370b:	fnsave [ebx-0x8]
  41370e:	out    dx,al
  41370f:	imul   BYTE PTR [ebx*1+0x384a2fbc]
  413716:	jae    0x4136ab
  413718:	xor    BYTE PTR [ebx-0x4e],al
  41371b:	push   ds
  41371c:	push   ebx
  41371d:	ds inc ebx
  41371f:	and    BYTE PTR [eax],dh
  413721:	js     0x413796
  413723:	popf   
  413724:	xor    ebp,0x9cd6806b
  41372a:	fld    DWORD PTR [edi]
  41372c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41372d:	ror    BYTE PTR [ecx],0x59
  413730:	or     dh,BYTE PTR [ecx+0x8]
  413733:	into   
  413734:	jmp    0x413753
  413736:	jnp    0x413757
  413738:	(bad)  
  413739:	stos   BYTE PTR es:[edi],al
  41373a:	xor    DWORD PTR [eax-0x76564e2d],esp
  413740:	aas    
  413741:	mov    edx,0x3eb10d56
  413746:	cmc    
  413747:	jg     0x413722
  413749:	mov    ebx,0x86d4c428
  41374e:	jae    0x413775
  413750:	pop    ebx
  413751:	ret    0x34d3
  413754:	add    BYTE PTR [edx],dl
  413756:	arpl   dx,bx
  413758:	mov    bl,BYTE PTR [edx-0x18]
  41375b:	add    esi,DWORD PTR [ebp+0x3d]
  41375e:	std    
  41375f:	mov    edx,0xcb194c9e
  413764:	fwait
  413765:	cli    
  413766:	push   es
  413767:	adc    al,0xaf
  413769:	mov    dl,0x66
  41376b:	xchg   ecx,eax
  41376c:	shr    BYTE PTR [edx-0x19],0x2c
  413770:	ffreep st(4)
  413772:	mov    BYTE PTR [ebx],al
  413774:	and    DWORD PTR [ebx+0x6],ecx
  413777:	in     al,0x6a
  413779:	mov    dh,0xac
  41377b:	ss push eax
  41377d:	iret   
  41377e:	je     0x413745
  413780:	jnp    0x41376d
  413782:	cmp    eax,0x48d69997
  413787:	pop    ds
  413788:	pop    ds
  413789:	mov    DWORD PTR [ebx],edx
  41378b:	imul   ebp,DWORD PTR [ecx-0x549d6988],0x0
  413792:	enter  0x5f40,0xf1
  413796:	aaa    
  413797:	xchg   esp,eax
  413798:	fdivp  st(4),st
  41379a:	sub    eax,DWORD PTR [ecx+ebp*1-0x6d]
  41379e:	push   ds
  41379f:	idiv   cl
  4137a1:	icebp  
  4137a2:	lahf   
  4137a3:	int3   
  4137a4:	repz or BYTE PTR ds:0xb76226f5,bl
  4137ab:	out    dx,eax
  4137ac:	sti    
  4137ad:	dec    esp
  4137ae:	stos   DWORD PTR es:[edi],eax
  4137af:	jno    0x413782
  4137b1:	gs mov bh,0xe1
  4137b4:	dec    ebx
  4137b5:	adc    BYTE PTR [edx+0x68],dl
  4137b8:	cmp    ebx,edi
  4137ba:	sbb    BYTE PTR [edi-0x6c8bac2f],bl
  4137c0:	retf   
  4137c1:	into   
  4137c2:	pop    esp
  4137c3:	xchg   ecx,ebp
  4137c5:	scas   eax,DWORD PTR es:[edi]
  4137c6:	add    edi,edi
  4137c8:	jbe    0x4137aa
  4137ca:	and    BYTE PTR [edi-0x1f],al
  4137cd:	adc    eax,0x8a6188c6
  4137d2:	rcl    BYTE PTR [esi],cl
  4137d4:	fucomp st(7)
  4137d6:	imul   ebp,DWORD PTR [esi],0x73
  4137d9:	ins    BYTE PTR es:[edi],dx
  4137da:	cdq    
  4137db:	fcom   QWORD PTR [esi+ebp*2+0x63]
  4137df:	(bad)  [esi-0x67291391]
  4137e5:	adc    DWORD PTR [esi+0x3b],esp
  4137e8:	mov    bl,0x11
  4137ea:	jae    0x4137f9
  4137ec:	add    ch,ch
  4137ee:	daa    
  4137ef:	popa   
  4137f0:	out    0x6a,al
  4137f2:	nop
  4137f3:	push   esp
  4137f4:	push   ebp
  4137f5:	test   al,0x77
  4137f7:	(bad)  
  4137f8:	add    esi,DWORD PTR [eax-0x1f]
  4137fb:	imul   ecx,DWORD PTR [eax-0x2a],0x1b
  4137ff:	jle    0x4137e0
  413801:	jp     0x413788
  413803:	popa   
  413804:	jge    0x4137d5
  413806:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413807:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413808:	gs push ecx
  41380a:	inc    ecx
  41380b:	adc    eax,0x8c4d23f5
  413810:	ja     0x4137c7
  413812:	aas    
  413813:	mov    cl,0x63
  413815:	sar    DWORD PTR [ebx+ebp*4],0xea
  413819:	push   ecx
  41381a:	sahf   
  41381b:	lods   eax,DWORD PTR ds:[esi]
  41381c:	jl     0x4137b3
  41381e:	arpl   di,di
  413820:	mov    eax,0xfbf120b0
  413825:	jge    0x413801
  413827:	clc    
  413828:	call   0x5e0e68aa
  41382d:	test   al,0x48
  41382f:	mov    WORD PTR [esi+edi*1-0xd],gs
  413833:	jno    0x41383c
  413835:	lock jns 0x4137f0
  413838:	add    ebp,edx
  41383a:	loope  0x413841
  41383c:	mov    eax,0x60f584c6
  413841:	ror    ebp,cl
  413843:	or     ch,dh
  413845:	cmp    eax,DWORD PTR [edi]
  413847:	xchg   ebp,eax
  413848:	mov    eax,ds:0x5375c6fe
  41384d:	xor    BYTE PTR [ebp-0x6a],dl
  413850:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413851:	retf   
  413852:	outs   dx,BYTE PTR ds:[esi]
  413853:	fild   WORD PTR [ebp+0xb]
  413856:	add    esi,DWORD PTR [ebp+0xc601de1]
  41385c:	pusha  
  41385d:	mov    edi,ebp
  41385f:	push   esi
  413860:	les    ecx,FWORD PTR [ecx+0x4a]
  413863:	xor    ch,bl
  413865:	ss icebp 
  413867:	sahf   
  413868:	xchg   esp,eax
  413869:	fiadd  WORD PTR [esi+0x191aa0b4]
  41386f:	adc    DWORD PTR [edx+edi*2-0x780b8d3c],ebp
  413876:	cs push esi
  413878:	(bad)  
  413879:	aas    
  41387a:	sbb    BYTE PTR [edx+edi*2+0x23],ch
  41387e:	inc    ebx
  41387f:	fbld   TBYTE PTR [ecx-0x77df5100]
  413885:	mov    WORD PTR [ebp+0x37],?
  413888:	push   ebx
  413889:	cmp    DWORD PTR [esi+0x5e],edx
  41388c:	das    
  41388d:	jmp    0x7ec0870d
  413892:	ret    
  413893:	jb     0x41384a
  413895:	xchg   esp,eax
  413896:	repnz int 0x6a
  413899:	scas   eax,DWORD PTR es:[edi]
  41389a:	jae    0x4138bd
  41389c:	mov    dh,0xd2
  41389e:	push   cs
  41389f:	pop    ss
  4138a0:	lds    ebp,FWORD PTR [edx+0x40d12425]
  4138a6:	xor    BYTE PTR [esi+edi*4+0x26],0x44
  4138ab:	out    dx,al
  4138ac:	ins    BYTE PTR es:[edi],dx
  4138ad:	bound  edx,QWORD PTR [eax]
  4138af:	fst    DWORD PTR [edx+0x17]
  4138b2:	pop    ebx
  4138b3:	pop    eax
  4138b4:	ds gs loop 0x4138b4
  4138b8:	int3   
  4138b9:	sub    eax,DWORD PTR [edx+0x2b517bea]
  4138bf:	xor    al,0x9b
  4138c1:	and    BYTE PTR [edi-0x685dafb0],ah
  4138c7:	xor    DWORD PTR [esi-0x1a],ecx
  4138ca:	mov    eax,0x9e9df5e6
  4138cf:	mov    dl,0x48
  4138d1:	push   cs
  4138d2:	aas    
  4138d3:	or     DWORD PTR [esi-0x1b],eax
  4138d6:	fisttp DWORD PTR [edx]
  4138d8:	mov    BYTE PTR [ebx],bh
  4138da:	jno    0x413907
  4138dc:	sub    BYTE PTR [eax+0x7e],cl
  4138df:	pop    ss
  4138e0:	ret    
  4138e1:	adc    edi,DWORD PTR [edi+0x59d8a5f5]
  4138e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138e8:	or     edx,ebp
  4138ea:	ret    0x5f8d
  4138ed:	(bad)  
  4138ee:	xor    ecx,DWORD PTR ds:0x91e1492f
  4138f4:	cmp    al,0x5c
  4138f6:	out    dx,eax
  4138f7:	fs iret 
  4138f9:	or     edi,DWORD PTR [esi]
  4138fb:	jnp    0x41388d
  4138fd:	or     DWORD PTR [edi],eax
  4138ff:	cli    
  413900:	mov    al,ds:0x79c8823e
  413905:	test   DWORD PTR [edi-0x1ed08715],eax
  41390b:	xor    al,0x27
  41390d:	add    bl,al
  41390f:	mov    ah,0x85
  413911:	clc    
  413912:	(bad)  
  413913:	fdiv   QWORD PTR [ecx-0x20]
  413916:	push   ds
  413917:	jmp    0xd7d0:0x4e88a86d
  41391e:	add    cl,bl
  413920:	shl    BYTE PTR [ebx+0x4],1
  413923:	and    BYTE PTR [esi+0x57a95521],bh
  413929:	cli    
  41392a:	jmp    0xbb12e44b
  41392f:	mov    eax,ds:0x514f7210
  413934:	jb     0x41394e
  413936:	adc    BYTE PTR [ecx+0x30],ah
  413939:	scas   al,BYTE PTR es:[edi]
  41393a:	enter  0xf2d4,0x26
  41393e:	mov    edi,0xdca99afd
  413943:	das    
  413944:	pop    ebp
  413945:	and    bh,BYTE PTR [eax-0x2c61ee78]
  41394b:	iret   
  41394c:	fcomp  QWORD PTR [ecx+0x10d39c3e]
  413952:	clc    
  413953:	add    BYTE PTR [esi-0x21047777],dl
  413959:	inc    edx
  41395a:	imul   ebx,DWORD PTR [eax],0xffffff99
  41395d:	xchg   ebx,eax
  41395e:	ins    BYTE PTR es:[edi],dx
  41395f:	(bad)  
  413960:	clc    
  413961:	adc    bh,BYTE PTR [edi+0x9]
  413964:	(bad)  
  413965:	aas    
  413966:	mov    bh,0xb3
  413968:	aas    
  413969:	repz sti 
  41396b:	inc    esi
  41396c:	cmp    DWORD PTR [edx+0x4bf379c5],eax
  413972:	jo     0x4139e7
  413974:	mov    ds:0x6e4842dc,eax
  413979:	mov    ds:0xf592e91e,eax
  41397e:	cmp    dh,bl
  413980:	push   ebp
  413981:	ror    BYTE PTR [esi-0x12],1
  413984:	lahf   
  413985:	sub    al,0xa0
  413987:	inc    BYTE PTR ds:0x73f216d9
  41398d:	add    eax,0xaf803aff
  413992:	jb     0x4139a0
  413994:	xchg   esp,eax
  413995:	(bad)
  413998:	cwde   
  413999:	cdq    
  41399a:	in     eax,0xb0
  41399c:	daa    
  41399d:	aad    0xd1
  41399f:	lods   eax,DWORD PTR ds:[esi]
  4139a0:	fadd   DWORD PTR [ebp+0x5fc676e3]
  4139a6:	mov    al,0x1d
  4139a8:	mov    ecx,0x4d2c6a4d
  4139ad:	stc    
  4139ae:	add    al,0x83
  4139b0:	cli    
  4139b1:	xor    BYTE PTR [ebx+0xf5e30c3],ah
  4139b7:	stos   DWORD PTR es:[edi],eax
  4139b8:	pop    ebx
  4139b9:	out    dx,al
  4139ba:	dec    esp
  4139bb:	cld    
  4139bc:	call   0x8c0f07b4
  4139c1:	retf   0x81aa
  4139c4:	fisub  DWORD PTR [edi-0x61]
  4139c7:	fsub   DWORD PTR [esi-0x33546efe]
  4139cd:	stos   DWORD PTR es:[edi],eax
  4139ce:	xchg   DWORD PTR [ecx+0x2f],ecx
  4139d1:	sub    dl,dh
  4139d3:	and    eax,0x9e847cf8
  4139d8:	popa   
  4139d9:	loopne 0x4139df
  4139db:	push   ebx
  4139dc:	xchg   esi,eax
  4139dd:	jmp    0x39363254
  4139e2:	imul   esp,DWORD PTR [edx+0x21888ba2],0x89c01f2c
  4139ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139ed:	jp     0x413979
  4139ef:	pusha  
  4139f0:	(bad)  
  4139f2:	enter  0x71e8,0x52
  4139f6:	outs   dx,DWORD PTR ds:[esi]
  4139f7:	call   0xa3c8:0x756216fc
  4139fe:	fild   WORD PTR [edx+0x46e9c1aa]
  413a04:	push   edi
  413a05:	popf   
  413a06:	dec    edi
  413a07:	ret    
  413a08:	xchg   edi,eax
  413a09:	fstp   TBYTE PTR [ecx]
  413a0b:	mov    eax,0xa5fb8c25
  413a10:	add    DWORD PTR [esi-0x7ed10a56],0xc712df29
  413a1a:	xchg   ecx,eax
  413a1b:	inc    ebp
  413a1c:	outs   dx,DWORD PTR ds:[esi]
  413a1d:	cwde   
  413a1e:	(bad)  
  413a20:	jmp    0x15d:0x2ad1da72
  413a27:	(bad)  
  413a28:	mul    BYTE PTR [edx]
  413a2a:	dec    esi
  413a2b:	cmp    ebx,eax
  413a2d:	in     al,0x46
  413a2f:	lods   eax,DWORD PTR ds:[esi]
  413a30:	adc    eax,0x48e7c194
  413a35:	push   edi
  413a36:	out    0xf7,eax
  413a38:	mov    BYTE PTR [edi-0x74],cl
  413a3b:	out    0xed,eax
  413a3d:	sbb    esi,DWORD PTR [ecx]
  413a3f:	add    dh,0x5
  413a42:	mov    esp,0x9d5717eb
  413a47:	mov    eax,ds:0xb37e6a28
  413a4c:	push   0x36
  413a4e:	test   BYTE PTR [edx-0x6f],0x2c
  413a52:	popa   
  413a53:	inc    ebx
  413a54:	adc    ch,BYTE PTR [eax-0x30]
  413a57:	jecxz  0x413aa8
  413a59:	jne    0x413a54
  413a5b:	hlt    
  413a5c:	adc    al,0x27
  413a5e:	fistp  WORD PTR [edi]
  413a60:	mov    edx,DWORD PTR [ebx-0x63e34973]
  413a66:	dec    edx
  413a67:	and    DWORD PTR gs:[esi-0x35cc1124],ebx
  413a6e:	popf   
  413a6f:	and    DWORD PTR [esi-0x3d],0x2a93402a
  413a76:	sbb    eax,0xe678b91
  413a7b:	sub    BYTE PTR [ebp+ebx*8+0x31],dh
  413a7f:	mov    ecx,0x65373c
  413a84:	(bad)  [edx+ebx*8]
  413a87:	pop    esp
  413a88:	cmp    DWORD PTR [esi+0x297bfe3e],0xffffff86
  413a8f:	cmp    esi,esi
  413a91:	and    al,0xc6
  413a93:	add    bl,dl
  413a95:	adc    ch,BYTE PTR [ebp+0x1265b375]
  413a9b:	pop    ecx
  413a9c:	loope  0x413a62
  413a9e:	mov    al,0x98
  413aa0:	das    
  413aa1:	add    ch,BYTE PTR [ebx]
  413aa3:	jg     0x413a9d
  413aa5:	sub    cl,BYTE PTR [esi-0x3032d704]
  413aab:	or     DWORD PTR [esi+0x6f858f15],0x1e439172
  413ab5:	dec    ebp
  413ab6:	pop    esi
  413ab7:	cmovae ecx,DWORD PTR [eax]
  413aba:	stos   BYTE PTR es:[edi],al
  413abb:	inc    edx
  413abc:	dec    edi
  413abd:	and    ebx,DWORD PTR [ebx]
  413abf:	jecxz  0x413a68
  413ac1:	fld    TBYTE PTR [esi]
  413ac3:	pop    es
  413ac4:	cs mov ecx,0x2d3ad546
  413aca:	loop   0x413aef
  413acc:	(bad)  
  413acd:	in     eax,dx
  413ace:	sub    ecx,edi
  413ad0:	push   esp
  413ad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ad2:	ret    
  413ad3:	fadd   QWORD PTR [ebx-0x13]
  413ad6:	imul   esi,ebx,0xa3f98d85
  413adc:	(bad)  
  413add:	adc    dh,dh
  413adf:	sbb    eax,0x8a537044
  413ae4:	xchg   ebx,eax
  413ae5:	push   ds
  413ae6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ae7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ae8:	dec    ecx
  413ae9:	or     eax,DWORD PTR [ecx]
  413aeb:	push   0x1d
  413aed:	ds retf 0x8644
  413af1:	pop    ecx
  413af2:	jnp    0x413aaa
  413af4:	ficom  DWORD PTR [esi]
  413af6:	nop
  413af7:	pop    esp
  413af8:	syscall 
  413afa:	imul   eax,DWORD PTR gs:[ecx-0x11],0x6a1348f0
  413b02:	scas   eax,DWORD PTR es:[edi]
  413b03:	xor    al,0x76
  413b05:	cmp    eax,0x848fa374
  413b0a:	sub    BYTE PTR [edx+0x1c],al
  413b0d:	js     0x413b50
  413b0f:	sbb    edx,edi
  413b11:	out    dx,eax
  413b12:	sbb    DWORD PTR [ebx-0x23],0x40
  413b16:	cmp    BYTE PTR [ebx],dh
  413b18:	aaa    
  413b19:	push   cs
  413b1a:	mov    edx,0xc4023e46
  413b1f:	shr    DWORD PTR [eax],cl
  413b21:	dec    edx
  413b22:	fstp   DWORD PTR [ecx+0x103f8cd6]
  413b28:	xchg   ebx,eax
  413b29:	pop    ebx
  413b2a:	(bad)  
  413b2b:	out    dx,al
  413b2c:	into   
  413b2d:	mov    dh,0xcd
  413b2f:	cmp    eax,0xd2a050ed
  413b34:	push   edx
  413b35:	in     eax,dx
  413b36:	popf   
  413b37:	enter  0xa46d,0x37
  413b3b:	aad    0x52
  413b3d:	int    0xe0
  413b3f:	retf   0x6e56
  413b42:	push   0xffffffd7
  413b44:	ins    DWORD PTR es:[edi],dx
  413b45:	pop    esp
  413b46:	jl     0x413b3c
  413b48:	in     eax,dx
  413b49:	in     al,0xc9
  413b4b:	fild   DWORD PTR [esi]
  413b4d:	mov    ?,WORD PTR [ebx]
  413b4f:	mov    dl,0x6d
  413b51:	add    al,0xde
  413b53:	jnp    0x413bb2
  413b55:	adc    ebp,DWORD PTR [ecx-0x3e9f33ab]
  413b5b:	jg     0x413b3d
  413b5d:	sbb    BYTE PTR [edx+0x50c9df1c],ah
  413b63:	in     al,0x10
  413b65:	(bad)  
  413b66:	les    esp,FWORD PTR [eax]
  413b68:	pop    ds
  413b69:	sub    bl,BYTE PTR [edi+0x1a]
  413b6c:	mov    DWORD PTR [eax],ecx
  413b6e:	sbb    eax,0xaf329bac
  413b73:	mov    esi,0x56827d43
  413b78:	sbb    eax,DWORD PTR es:[edx-0x42]
  413b7c:	call   0x663181ea
  413b81:	mov    ds:0x9de1ae22,eax
  413b86:	repz mov ecx,0xaf4c685b
  413b8c:	and    al,0xde
  413b8e:	jl     0x413bee
  413b90:	jp     0x413b6e
  413b92:	jmp    0xba05:0x2c06172f
  413b99:	push   ss
  413b9a:	(bad)  
  413b9b:	cmp    BYTE PTR [ebp+0x37],ah
  413b9e:	pop    es
  413b9f:	pop    ebp
  413ba0:	and    edi,DWORD PTR [ebp-0x28]
  413ba3:	ins    DWORD PTR es:[edi],dx
  413ba4:	fs fucompp 
  413ba7:	xchg   edx,eax
  413ba8:	popa   
  413ba9:	out    0xe9,al
  413bab:	retf   0x4fbd
  413bae:	popa   
  413baf:	push   es
  413bb0:	dec    eax
  413bb1:	inc    DWORD PTR [eax-0x73]
  413bb4:	gs push ebx
  413bb6:	call   0xe67f:0x8a4ae5a1
  413bbd:	and    eax,0x3b05f5f5
  413bc2:	scas   al,BYTE PTR es:[edi]
  413bc3:	or     al,0x1b
  413bc5:	leave  
  413bc6:	push   edx
  413bc7:	lock and DWORD PTR [eax-0x15],edi
  413bcb:	dec    edi
  413bcc:	fdivr  QWORD PTR [ebx]
  413bce:	mov    DWORD PTR [ecx-0x71a4ace0],0x4367e146
  413bd8:	ret    0xbd12
  413bdb:	xchg   ebx,eax
  413bdc:	add    BYTE PTR [eax],bl
  413bde:	xor    al,BYTE PTR [bp-0x80]
  413be2:	stos   DWORD PTR es:[edi],eax
  413be3:	mov    ecx,DWORD PTR [ebp-0x8]
  413be6:	xor    ecx,eax
  413be8:	mov    eax,DWORD PTR [ebp+0x10]
  413beb:	add    ecx,esi
  413bed:	mov    DWORD PTR [eax],ecx
  413bef:	pop    edi
  413bf0:	pop    esi
  413bf1:	pop    ebx
  413bf2:	leave  
  413bf3:	ret    0xc
  413bf6:	jne    0x413c0b
  413bf8:	adc    BYTE PTR [eax],al
  413bfa:	std    
  413bfb:	push   ds
  413bfc:	adc    BYTE PTR [eax],al
  413bfe:	aas    
  413bff:	adc    BYTE PTR fs:[eax],al
  413c02:	sbb    cl,BYTE PTR [esi]
  413c04:	adc    BYTE PTR [eax],al
  413c06:	sbb    BYTE PTR [eax+0x10],dl
  413c09:	add    BYTE PTR [eax],ah
  413c0b:	push   es
  413c0c:	adc    BYTE PTR [eax],al
  413c0e:	out    dx,al
  413c0f:	jg     0x413c21
  413c11:	add    BYTE PTR [ebx],al
  413c13:	dec    edi
  413c14:	adc    BYTE PTR [eax],al
  413c16:	mov    esp,0x5500103b
  413c1b:	jns    0x413c2d
  413c1d:	add    BYTE PTR [edx],ch
  413c1f:	inc    eax
  413c20:	adc    BYTE PTR [eax],al
  413c22:	sbb    BYTE PTR ds:0x3d1c0041,bh
  413c28:	inc    ecx
  413c29:	add    BYTE PTR [eax],ah
  413c2b:	cmp    eax,0x3d240041
  413c30:	inc    ecx
  413c31:	add    BYTE PTR [eax],ch
  413c33:	cmp    eax,0x3d2c0041
  413c38:	inc    ecx
  413c39:	add    BYTE PTR [eax],dh
  413c3b:	cmp    eax,0x3d340041
  413c40:	inc    ecx
	...
  413c51:	add    BYTE PTR [eax],al
  413c53:	add    BYTE PTR [esi+0x4df185],bh
  413c59:	add    BYTE PTR [eax],al
  413c5b:	add    BYTE PTR [edx],al
  413c5d:	add    BYTE PTR [eax],al
  413c5f:	add    BYTE PTR [eax+0x0],dl
  413c62:	add    BYTE PTR [eax],al
  413c64:	inc    eax
  413c65:	cmp    eax,0x31400001
  413c6a:	add    DWORD PTR [eax],eax
  413c6c:	scas   al,BYTE PTR es:[edi]
  413c6d:	inc    ebp
  413c6e:	adc    BYTE PTR [eax],al
  413c70:	inc    esp
  413c71:	cmp    edx,DWORD PTR [eax]
  413c73:	add    BYTE PTR [edi+0x4e],bl
  413c76:	adc    BYTE PTR [eax],al
  413c78:	push   0x4b
  413c7a:	adc    BYTE PTR [eax],al
  413c7c:	cmp    edx,DWORD PTR fs:[eax]
  413c7f:	add    BYTE PTR [eax+0x43001057],bl
  413c85:	sbb    dl,BYTE PTR [eax]
  413c87:	add    BYTE PTR [esi+0x39],bl
  413c8a:	adc    BYTE PTR [eax],al
  413c8c:	idiv   BYTE PTR [ebx]
  413c8e:	inc    ecx
  413c8f:	add    dl,bh
  413c91:	cmp    eax,DWORD PTR [ecx+0x0]
  413c94:	(bad)  
  413c95:	cmp    eax,DWORD PTR [ecx+0x0]
  413c98:	add    bh,BYTE PTR [ecx+eax*2]
  413c9b:	add    BYTE PTR [esi],al
  413c9d:	cmp    al,0x41
  413c9f:	add    BYTE PTR [edx],cl
  413ca1:	cmp    al,0x41
  413ca3:	add    BYTE PTR [esi],cl
  413ca5:	cmp    al,0x41
  413ca7:	add    BYTE PTR [edx],dl
  413ca9:	cmp    al,0x41
  413cab:	add    BYTE PTR [esi],dl
  413cad:	cmp    al,0x41
  413caf:	add    BYTE PTR [edx],bl
  413cb1:	cmp    al,0x41
  413cb3:	add    BYTE PTR [esi],bl
  413cb5:	cmp    al,0x41
  413cb7:	add    al,bl
  413cb9:	cmp    al,0x41
  413cbb:	add    ah,bl
  413cbd:	cmp    al,0x41
  413cbf:	add    al,ah
  413cc1:	cmp    al,0x41
  413cc3:	add    ah,ah
  413cc5:	cmp    al,0x41
  413cc7:	add    al,ch
  413cc9:	cmp    al,0x41
  413ccb:	add    ah,ch
  413ccd:	cmp    al,0x41
  413ccf:	add    al,dh
  413cd1:	cmp    al,0x41
  413cd3:	add    ah,dh
  413cd5:	cmp    al,0x41
  413cd7:	add    BYTE PTR [ebp+0x16],ah
  413cda:	adc    BYTE PTR [eax],al
  413cdc:	sub    BYTE PTR [ecx+0x10],0x0
  413ce0:	cli    
  413ce1:	adc    BYTE PTR [bx+si],al
  413ce4:	sbb    BYTE PTR [ecx],al
  413ce6:	adc    BYTE PTR [eax],al
  413ce8:	pop    edi
  413ce9:	inc    esp
  413cea:	adc    BYTE PTR [eax],al
  413cec:	sbb    BYTE PTR [edx],ch
  413cee:	adc    BYTE PTR [eax],al
  413cf0:	in     eax,dx
  413cf1:	pop    ss
  413cf2:	adc    BYTE PTR [eax],al
  413cf4:	pop    esp
  413cf5:	sub    BYTE PTR [eax],dl
  413cf7:	add    BYTE PTR [esp+edi*1+0x41],ch
  413cfb:	add    BYTE PTR [eax+0x3c],dh
  413cfe:	inc    ecx
  413cff:	add    BYTE PTR [esp+edi*1+0x41],dh
  413d03:	add    BYTE PTR [eax+0x3c],bh
  413d06:	inc    ecx
  413d07:	add    BYTE PTR [esp+edi*1+0x41],bh
  413d0b:	add    BYTE PTR [eax-0x7bffbec4],al
  413d11:	cmp    al,0x41
  413d13:	add    BYTE PTR [eax-0x17ffbec4],cl
  413d19:	aaa    
  413d1a:	adc    BYTE PTR [eax],al
  413d1c:	cmp    DWORD PTR [esi],0x51e90010
  413d22:	adc    BYTE PTR [eax],al
  413d24:	push   cs
  413d25:	dec    eax
  413d26:	adc    BYTE PTR [eax],al
  413d28:	mov    ah,0x22
  413d2a:	adc    BYTE PTR [eax],al
  413d2c:	lock xor BYTE PTR [eax],dl
  413d2f:	add    BYTE PTR [edi+0x6b],ah
  413d32:	adc    BYTE PTR [eax],al
  413d34:	outs   dx,BYTE PTR ds:[esi]
  413d35:	or     eax,0x10
  413d3a:	add    BYTE PTR [eax],al
  413d3c:	add    BYTE PTR [eax],al
  413d3e:	add    BYTE PTR [eax],al
  413d40:	push   edx
  413d41:	push   ebx
  413d42:	inc    esp
  413d43:	push   ebx
  413d44:	cwde   
  413d45:	fcmove st,st(1)
  413d47:	enter  0x8222,0x54
  413d4b:	inc    ecx
  413d4c:	xchg   ebp,eax
  413d4d:	mov    ch,0x22
  413d4f:	ins    BYTE PTR es:[edi],dx
  413d50:	sbb    eax,DWORD PTR [edx-0x37]
  413d53:	in     al,dx
  413d54:	add    DWORD PTR [eax],eax
  413d56:	add    BYTE PTR [eax],al
  413d58:	inc    ebp
  413d59:	cmp    bl,BYTE PTR [ecx+ecx*2+0x6e]
  413d5d:	jae    0x413dd3
  413d5f:	popa   
  413d60:	ins    BYTE PTR es:[edi],dx
  413d61:	ins    BYTE PTR es:[edi],dx
  413d62:	and    BYTE PTR [eax+0x61],dl
  413d65:	je     0x413dcf
  413d67:	pop    esp
  413d68:	push   ebx
  413d69:	outs   dx,BYTE PTR gs:[esi]
  413d6b:	fs push ebx
  413d6d:	dec    ebp
  413d6e:	push   ebx
  413d6f:	pop    esp
  413d70:	dec    ebp
  413d71:	popa   
  413d72:	imul   ebp,DWORD PTR [esi+0x5c],0x46627553
  413d79:	outs   dx,DWORD PTR ds:[esi]
  413d7a:	ins    BYTE PTR es:[edi],dx
  413d7b:	fs gs jb 0x413ddb
  413d7f:	dec    ecx
  413d80:	outs   dx,BYTE PTR ds:[esi]
  413d81:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413d85:	gs jae 0x413de4
  413d88:	dec    ecx
  413d89:	outs   dx,BYTE PTR ds:[esi]
  413d8a:	outs   dx,WORD PTR ds:[esi]
  413d8c:	inc    ecx
  413d8d:	jo     0x413dff
  413d8f:	add    BYTE PTR [eax],al
  413d91:	add    BYTE PTR [eax],al
  413d93:	add    BYTE PTR [esi+0x4df185],bh
  413d99:	add    BYTE PTR [eax],al
  413d9b:	add    dl,al
  413d9d:	cmp    eax,0x10001
  413da2:	add    BYTE PTR [eax],al
  413da4:	add    DWORD PTR [eax],eax
  413da6:	add    BYTE PTR [eax],al
  413da8:	add    DWORD PTR [eax],eax
  413daa:	add    BYTE PTR [eax],al
  413dac:	mov    eax,0xbc00013d
  413db1:	cmp    eax,0x3dc00001
  413db6:	add    DWORD PTR [eax],eax
  413db8:	mov    ds:0xce000026,al
  413dbd:	cmp    eax,0x1
  413dc2:	push   ebx
  413dc3:	jns    0x413e32
  413dc5:	bound  ebp,QWORD PTR [edi+0x6c]
  413dc8:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  413dcf:	inc    ebx
  413dd0:	ins    BYTE PTR es:[edi],dx
  413dd1:	outs   dx,DWORD PTR ds:[esi]
  413dd2:	jae    0x413e39
  413dd4:	push   edi
  413dd5:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  413ddc:	popa   
  413ddd:	je     0x413e48
  413ddf:	outs   dx,DWORD PTR ds:[esi]
  413de0:	outs   dx,BYTE PTR ds:[esi]
  413de1:	inc    ebx
  413de2:	ins    BYTE PTR es:[edi],dx
  413de3:	outs   dx,DWORD PTR ds:[esi]
  413de4:	jae    0x413e4b
  413de6:	push   edi
  413de7:	.byte 0x69
